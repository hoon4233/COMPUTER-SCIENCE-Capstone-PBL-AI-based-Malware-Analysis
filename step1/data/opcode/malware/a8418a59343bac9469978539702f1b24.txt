mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
jnp
xchg
sbb
mov
(bad)
bound
mov
push
mov
mov
inc
jle
dec
loopne
jle
push
call
call
pop
fst
mov
(bad)
mov
or
call
push
sbb
popf
dec
and
out
movs
cmp
sbb
and
or
and
jb
mov
sub
in
jo
xchg
fbstp
mov
dec
out
aas
je
cmp
(bad)
and
fadd
in
iret
loopne
cwde
stos
cmp
and
mul
xchg
aam
cmp
sub
sub
movs
cmp
add
jo
jle
jle
sub
stc
hlt
sub
xchg
jmp
cs
call
push
call
fwait
or
inc
jno
xchg
pop
fs
data16
mov
pop
dec
pop
bnd
dec
popf
xchg
push
add
das
mov
mov
in
lahf
fiadd
mov
gs
ja
cmp
shl
dec
hlt
or
jae
cmp
add
jo
dec
mov
xor
in
mov
push
mov
jmp
inc
xchg
imul
fimul
push
not
movs
fstp
fwait
(bad)
hlt
or
mov
sub
rcl
push
test
lahf
ins
fmul
out
retf
inc
addr16
enter
adc
out
sub
or
(bad)
cmps
sbb
(bad)
jle
loopne
or
jle
mov
pop
arpl
xlat
imul
lds
adc
dec
nop
enter
in
jne
pushf
sbb
call
fst
or
sub
add
bound
sub
cli
xor
ret
xor
xor
(bad)
retf
neg
(bad)
ins
outs
add
mov
fstp
adc
jg
stos
mov
jmp
cdq
adc
cdq
mov
and
mov
test
pmaddwd
fist
lods
and
fimul
xor
into
and
or
iret
je
fild
jbe
mov
loopne
hlt
cwde
aaa
pop
jbe
jns
lods
shr
or
add
lock
iret
fld
mov
xchg
cmps
xor
stc
xor
enter
aad
(bad)
(bad)
scas
sub
sar
xor
loopne
push
or
loopne
int
pop
aam
pop
in
add
aas
mov
arpl
jge
aad
xor
jns
mov
mov
xor
jae
movs
jge
push
xchg
push
jb
mov
sar
push
ja
mov
scas
(bad)
aas
jae
out
pusha
adc
lds
inc
lock
rol
stos
or
sub
xlat
inc
sub
pop
dec
icebp
(bad)
(bad)
mov
popf
int3
xchg
call
iret
xchg
adc
out
fwait
test
lds
mov
mov
xor
inc
idiv
daa
daa
xchg
iret
mov
popf
or
jp
sbb
or
inc
mov
out
sar
int
dec
lahf
sbb
push
mov
adc
mov
lds
dec
xchg
add
loopne
jge
stc
add
fnstsw
repz
aad
into
pop
cwde
push
(bad)
xchg
push
xor
outs
mov
cwde
gs
pop
inc
dec
push
mov
mov
mov
push
mov
cmp
fwait
push
adc
cmp
jecxz
ja
sbb
pop
rcr
pop
(bad)
jmp
add
dec
idiv
sub
fnstsw
push
test
adc
push
call
std
jge
push
rcr
or
pop
div
add
mov
jle
call
movs
sub
dec
ret
push
nop
in
(bad)
cmps
dec
ret
xor
mov
pop
test
popf
dec
cwde
test
add
mov
xlat
push
cli
ficom
push
inc
push
out
cmps
shl
xchg
cmps
ret
outs
repz
sbb
sbb
mov
xchg
cmp
retf
sar
test
adc
push
out
mov
mov
push
pop
inc
pop
ror
cld
clc
xor
and
and
aas
jle
fs
aad
popa
in
inc
aaa
mov
push
mov
xor
ss
repnz
rcr
in
sbb
push
sar
daa
jmp
lahf
call
repnz
jno
sbb
dec
lds
in
or
aad
call
pusha
fldenv
pop
fimul
or
pop
and
rcr
push
jg
inc
adc
hlt
repnz
xor
mov
fsub
and
xchg
out
div
repz
into
(bad)
sti
(bad)
xor
mov
xor
and
push
mov
push
push
lock
mov
cmp
sbb
adc
icebp
pop
or
(bad)
std
adc
or
xchg
cld
xchg
jne
call
inc
call
call
sar
ret
aad
sub
xor
dec
ss
or
sbb
or
lds
jl
pop
add
and
movs
sub
sub
jmp
repz
(bad)
outs
pop
or
or
test
fldenv
jne
xchg
sti
sbb
mov
ret
and
mov
gs
arpl
sub
push
mov
int3
mov
sbb
xor
push
mov
or
cmp
sub
cld
lea
imul
xor
jecxz
and
(bad)
in
aam
cmc
leave
jns
lods
test
fisubr
sbb
mov
add
jmp
xchg
and
mov
push
pop
loop
bound
neg
adc
jecxz
push
cmovg
or
cdq
pop
idiv
test
shl
popf
sbb
pop
mov
adc
in
scas
retf
aam
ret
cmps
fldenv
xor
add
jmp
addr16
dec
jne
add
lods
sbb
or
fwait
ret
xchg
dec
mov
fldcw
jmp
mov
dec
add
mov
mov
xchg
repz
xlat
add
lods
add
inc
inc
jl
pushf
lods
repnz
hlt
sub
mov
mov
sbb
mov
pop
stos
cmp
daa
fsubr
cmp
mov
mov
pop
jb
fisub
pop
and
(bad)
fadd
mov
pop
jle
pop
inc
imul
xchg
pop
dec
lods
dec
jecxz
aad
mov
xor
outs
or
sbb
(bad)
outs
and
shr
stos
retf
movs
loope
stos
rcr
dec
dec
push
sbb
cli
add
cdq
push
into
into
int
cmp
call
inc
mov
enter
jp
out
cmp
mov
in
sbb
mov
in
jcxz
inc
dec
sub
add
fsubr
test
fidiv
pushf
outs
mov
cwde
jmp
movs
dec
cmp
add
cmps
hlt
mov
sbb
cs
jnp
sub
or
dec
stos
cmp
inc
or
add
and
ret
push
sbb
bound
(bad)
pop
push
repnz
push
(bad)
inc
xor
(bad)
scas
cmp
test
ins
jmp
iret
cmp
outs
lock
sbb
or
jg
xor
stc
pusha
movs
mov
daa
cmp
adc
call
adc
sar
add
adc
cmp
retf
rcr
jecxz
dec
dec
jp
or
mov
lods
jg
(bad)
jl
cmps
jle
rcl
clc
or
xor
jo
xchg
clc
iret
retf
push
mov
xor
mov
xchg
inc
std
push
adc
pop
sbb
nop
out
xchg
jp
sbb
cwde
fldcw
pop
(bad)
js
lds
pop
test
fistp
jp
jnp
mov
int
jl
inc
or
imul
repnz
fnsave
dec
jmp
push
jne
pushf
and
in
mov
mov
inc
ret
call
cmps
imul
jno
outs
xchg
jne
es
loopne
push
mov
push
jmp
jg
outs
mov
mov
repz
dec
and
test
mov
mov
xor
and
mov
ja
mov
pop
and
sbb
inc
loop
and
outs
cdq
cmp
hlt
xor
fistp
cmp
pop
lahf
popa
mov
ins
sbb
push
sub
mov
and
imul
and
push
and
sahf
xchg
int
je
retf
pop
ds
pop
test
lahf
fstp
push
dec
xchg
pop
arpl
push
lahf
mov
(bad)
out
inc
inc
mov
jecxz
cwde
xor
cwde
daa
sar
das
sbb
gs
xor
push
mov
sub
push
lahf
or
repnz
dec
mov
xor
xor
cmps
aad
xchg
push
fcmovnb
xor
push
outs
mov
ja
dec
sbb
push
aas
jge
fisttp
dec
data16
xchg
ror
test
mov
out
nop
xor
mov
xor
jp
add
sbb
xor
xchg
and
(bad)
cld
cwde
dec
fxsave
in
call
push
daa
scas
es
add
jo
and
movs
out
xor
rcl
lods
aas
cli
mov
adc
fldenv
cmc
arpl
inc
dec
xor
adc
fisttp
scas
add
add
cs
mov
ret
setp
mov
jmp
pop
xor
aad
das
sub
jno
pop
cmp
add
cmps
mov
pop
adc
mov
xor
repnz
gs
mov
push
add
mov
cmc
movs
imul
or
movs
and
into
xchg
cmc
jnp
je
jg
mov
push
mov
mov
hlt
movs
in
les
stc
das
mov
mov
into
scas
and
xchg
test
outs
pop
mov
test
inc
inc
aas
call
out
rcr
xchg
into
xchg
aaa
repz
push
rcl
sub
mov
stos
or
fucomip
inc
cdq
test
cmp
pop
lds
dec
test
ret
inc
push
jg
mov
or
imul
add
aaa
jnp
xor
adc
fistp
retf
push
mov
ins
xlat
daa
hlt
je
mov
xchg
mov
mov
(bad)
pop
enter
aas
scas
ror
shl
xchg
retf
jns
mov
mov
fisubr
hlt
ins
mov
imul
icebp
outs
(bad)
data16
xchg
call
inc
loop
pop
pop
rol
sbb
add
and
cmp
inc
cmp
in
push
inc
lock
mov
aas
cmc
jmp
jl
daa
mov
xchg
mov
jecxz
push
sahf
stc
cmps
(bad)
in
mov
movs
dec
pop
or
sub
loope
mov
xchg
(bad)
stc
std
cmc
adc
jg
dec
ins
clc
not
dec
sbb
lahf
clc
adc
adc
in
mov
js
cmp
mov
loope
mov
sbb
jb
mov
push
and
iret
hlt
and
movs
sbb
aam
or
or
mov
mov
inc
fimul
clc
ds
mov
in
mov
ret
sbb
lea
push
dec
sbb
addr16
idiv
pushf
js
push
test
das
push
aas
xlat
cld
fptan
pusha
cmps
cdq
cmp
lock
cmp
pusha
mov
jp
scas
mov
nop
out
and
mov
push
pusha
xchg
rcl
xchg
xchg
inc
movs
(bad)
movs
dec
mov
push
mov
mov
ror
idiv
dec
dec
sub
mov
std
jge
das
pop
or
mov
lds
cmps
xchg
sub
das
icebp
out
dec
(bad)
idiv
jg
rol
pop
mov
or
jle
push
mov
mov
pop
cld
pop
(bad)
stc
ficom
xlat
and
dec
mov
pushf
mov
adc
jl
out
outs
push
or
les
stos
sbb
aaa
jnp
mov
xchg
mov
or
ret
add
adc
imul
scas
xchg
popa
imul
sets
cmp
dec
ja
xor
mov
in
pop
retf
adc
out
mov
sahf
adc
scas
push
push
sub
stos
loop
push
aad
hlt
fstp
cli
test
hlt
cli
and
retf
cmp
or
xor
es
pop
sub
mov
sbb
jns
pop
push
leave
stos
ins
push
jg
retf
in
inc
xchg
jmp
and
out
scas
add
(bad)
push
ins
mov
out
xchg
fcomp
push
mov
mov
push
loope
jno
mov
push
mov
aad
imul
jb
mov
pop
(bad)
loopne
push
sbb
in
jg
mov
mov
lahf
fstp
and
mov
jp
out
imul
or
repz
pusha
or
push
inc
cld
adc
push
fcomip
outs
or
push
cs
mov
repnz
xchg
and
es
mov
sbb
sbb
xor
(bad)
fadd
sub
jg
pop
enter
jbe
scas
in
sub
rol
or
in
and
imul
lds
pop
lds
loop
push
push
jmp
addr16
dec
jmp
or
add
sub
mov
cmp
cs
fcomp
out
ror
loopne
das
jno
fisttp
push
xchg
xchg
mov
sub
adc
scas
aas
sub
popa
leave
loop
adc
push
test
(bad)
jg
cmp
je
adc
in
mov
aaa
adc
mov
push
dec
sub
jp
push
and
jmp
xlat
inc
into
cwde
sbb
popa
ins
in
sbb
jmp
aas
or
pop
loope
popw
dec
hlt
push
and
test
jmp
pusha
pop
pop
cmc
dec
rcl
xchg
enter
outs
inc
mov
call
shl
ds
mov
push
jecxz
add
pop
inc
sub
out
or
push
fisttp
ret
cmp
sbb
inc
dec
test
(bad)
push
jle
and
push
pusha
mov
pop
sbb
jnp
ficom
xor
inc
out
sub
mov
inc
mov
dec
push
mov
mov
aaa
pop
add
retfw
jp
dec
bound
jge
pop
mov
aad
gs
jl
ins
sbb
setge
lea
inc
mov
imul
inc
fwait
push
push
into
sub
jmp
dec
mov
and
test
pop
xchg
xor
mov
mov
push
xor
(bad)
pushf
popf
popf
cld
mov
mov
sbb
xor
jno
(bad)
pop
ds
fmul
test
test
aaa
or
or
pop
in
xchg
cmp
mov
push
pop
lods
inc
cli
cs
inc
adc
aaa
out
pop
popf
or
data16
sub
mov
fdivr
mov
mov
mov
jmp
rcl
repz
(bad)
lds
mov
cmp
push
mov
push
in
daa
cmps
bound
mov
mov
and
daa
jbe
jne
dec
lahf
scas
out
mov
push
ins
lods
xchg
cmc
inc
cmp
mov
popa
sub
cmp
std
mov
sub
jo
(bad)
lds
loopne
shr
jmp
clc
or
aaa
pop
cmp
jle
clc
ret
aaa
scas
push
mov
(bad)
aad
xchg
push
and
popf
daa
and
and
es
test
push
pop
add
dec
shl
cmp
popf
les
sbb
fmul
mov
iret
hlt
ja
xchg
jp
add
dec
pop
add
stc
xor
imul
sub
xchg
(bad)
sub
xor
fidivr
xor
sub
jle
das
out
adc
mov
test
push
popa
mov
mov
sbb
sub
lahf
sub
dec
(bad)
cli
xchg
dec
repnz
push
sub
jmp
adc
lea
adc
(bad)
loop
xor
cwde
push
jg
int
fs
lea
outs
mul
dec
rcl
jb
loope
(bad)
push
aad
fwait
ins
fwait
hlt
nop
fisubr
ret
shl
iret
mov
add
xor
pop
cmp
fwait
jbe
or
lods
dec
enter
sub
cmp
or
jp
test
dec
push
mov
jae
icebp
clc
inc
retf
or
xor
jb
jecxz
std
or
mov
shr
popf
cmc
repz
call
repnz
sti
je
out
mov
adc
dec
and
ins
je
dec
icebp
ja
inc
ja
adc
xor
cwde
add
sub
adc
or
cmps
cwde
mov
ins
arpl
out
adc
inc
and
xor
aaa
in
xchg
dec
cld
(bad)
dec
aad
xchg
sub
pop
in
mov
inc
mov
cmp
fadd
mul
pop
repz
jl
sub
jbe
sti
mov
sub
inc
push
jo
cmp
or
sar
sbb
and
mov
stos
cmp
mov
ret
fild
enter
das
sub
cmp
into
fadd
mov
loop
and
std
cli
out
dec
cmp
lds
inc
cmp
pop
mov
sti
xor
outs
scas
mov
xlat
dec
sti
int3
enter
stos
mov
and
inc
mov
into
xchg
repz
aaa
cld
cmp
leave
jle
pop
and
cdq
mov
xchg
sti
jge
add
ja
cwde
(bad)
data16
push
inc
inc
pushf
or
out
mov
and
mov
ins
inc
and
imul
mov
stc
cli
or
jmp
sahf
dec
int
adc
pop
xchg
sbb
mov
repz
jno
xchg
repnz
push
push
dec
dec
push
pop
(bad)
cmps
stos
mov
push
sbb
inc
sar
out
stc
jmp
not
ficomp
xor
mov
or
mov
pop
mov
cmps
push
pop
inc
push
fsubr
push
test
add
fcmovnbe
pop
test
push
mov
push
xlat
jg
push
fs
xor
(bad)
icebp
outs
add
and
movs
mov
jnp
add
mov
scas
jl
push
repz
arpl
pop
(bad)
fadd
es
pop
cdq
iret
mov
and
fiadd
xchg
xchg
jns
pop
test
push
sub
adc
(bad)
mov
in
push
add
lahf
jb
das
leave
or
jmp
xor
ins
fcom
sti
lahf
add
fsub
ret
add
aad
cmc
inc
fistp
sub
enter
sub
call
leave
fld
movs
add
and
mov
outs
dec
add
mov
pop
jnp
xor
(bad)
int3
int3
fisub
in
add
retf
and
sbb
ret
jmp
jae
arpl
sbb
or
adc
(bad)
cwde
sbb
inc
push
mov
sub
dec
add
xchg
out
addr16
dec
out
scas
fisttp
in
sbb
pop
lods
push
xor
dec
ins
rol
sub
sub
pop
push
sub
inc
push
adc
mov
jae
in
repnz
push
push
addr16
daa
cmp
les
lods
icebp
cmp
ja
test
retf
lds
add
mov
mov
int3
cli
mov
mov
js
xor
cmps
sub
pop
icebp
jbe
std
pop
pop
and
and
jmp
or
sub
push
and
arpl
outs
sub
mov
ins
xor
mov
and
dec
mov
aas
in
into
add
je
mov
imul
movq
mov
in
dec
mov
xchg
ret
sahf
inc
mov
pop
imul
mov
sub
or
(bad)
loope
xchg
or
jae
retf
jl
pop
push
push
adc
(bad)
cli
daa
lods
ja
jo
ret
adc
js
lahf
pushf
out
and
mov
lea
push
les
ds
xor
sar
inc
fsubr
push
(bad)
scas
call
call
mov
loopne
jg
(bad)
rcr
sub
(bad)
out
dec
cs
jb
ret
ss
pop
mov
or
retf
sti
sub
push
ins
das
dec
inc
loop
(bad)
out
cmp
imul
add
aam
xchg
lods
in
inc
jae
sub
push
push
mov
pop
bound
retf
push
in
aad
add
adc
imul
cs
sub
addr16
push
mov
sbb
add
loopne
je
jge
sar
fisttp
sti
pusha
int
mov
test
or
sti
lock
mov
and
fldenv
dec
sbb
or
mov
adc
xchg
pop
inc
stos
das
sbb
mov
ret
pop
jg
stc
lds
and
in
dec
in
or
xchg
xlat
lahf
mov
and
mov
jecxz
mov
lahf
ins
mov
pop
sbb
push
mov
lock
push
inc
outs
aam
xor
mov
out
stc
mov
dec
mov
popa
push
xor
cs
loopne
repz
pop
es
push
ins
push
inc
and
cmp
fld
pop
and
(bad)
xlat
movs
mov
fcomip
adc
xor
cmp
cwde
pop
out
aad
ja
pop
in
ins
retf
mov
aad
add
mov
pop
or
inc
jnp
imul
xchg
in
out
aam
xor
int3
in
inc
clc
lods
jns
mov
and
sub
ss
mov
imul
ss
xchg
push
lds
mov
mov
and
jnp
sub
sbb
(bad)
mov
inc
xor
(bad)
nop
sbb
adc
pop
jo
aas
aaa
jg
in
addr16
aam
adc
repnz
or
mul
sti
jo
lods
aas
xor
dec
mov
xchg
mov
pusha
imul
add
int3
mov
pop
push
sbb
sbb
retf
nop
jnp
adc
xchg
cs
adc
push
je
mov
or
shl
push
xor
(bad)
cmps
fisubr
pop
sub
jno
daa
fild
xchg
mov
add
jo
dec
mov
push
rol
cmps
push
inc
push
xor
or
outs
push
mov
pusha
popf
xchg
sub
cli
xor
cli
cli
xor
mov
or
jp
ret
fdivrp
xchg
cmp
imul
add
xor
ret
neg
test
xchg
cmp
mov
mov
inc
cmps
inc
jg
lea
pop
mov
push
sbb
out
mov
mov
inc
rcr
jg
sub
frstor
cmp
ror
push
out
fisubr
sahf
xchg
cdq
ins
dec
ret
(bad)
fbld
ret
sti
repnz
inc
mov
daa
mov
imul
outs
aad
xchg
mov
xor
loope
mov
and
push
mov
mov
mov
push
ret
sbb
shl
jge
mov
cmps
retf
scas
add
and
retf
pop
mov
imul
test
dec
cmc
fidiv
add
fs
jmp
div
out
mov
leave
push
aad
cld
and
xchg
(bad)
pushf
ret
cwde
lods
repz
nop
lds
adc
xor
add
pop
add
retf
mov
mov
dec
movs
xchg
ror
je
idiv
ret
xor
cmp
push
mov
mov
sub
daa
adc
mov
mov
xor
je
pop
mov
jle
mov
int
inc
in
jp
jp
out
outs
enter
and
out
mov
and
dec
in
aaa
loop
push
mov
and
jge
sub
aaa
out
mov
jl
dec
bnd
mov
mov
std
cli
pop
cld
(bad)
jo
cmc
push
inc
dec
mov
ja
sbb
cmp
push
pop
or
out
fcomp
lds
call
xor
pop
mov
dec
jnp
mov
(bad)
push
and
test
rcr
sub
pusha
add
cwde
inc
nop
imul
adc
mov
push
cmp
dec
ret
stos
mov
stos
xchg
inc
(bad)
and
adc
test
jle
gs
mov
imul
into
ins
out
adc
pop
rcr
les
stos
jnp
cdq
xchg
hlt
and
pop
mov
shl
loop
push
in
addr16
inc
rcr
ror
test
fs
adc
in
or
ss
push
pusha
arpl
dec
xor
int
mov
in
and
mov
or
dec
mov
and
sbb
push
mov
xchg
dec
or
fld
mov
or
ret
xor
xor
test
xchg
in
or
fisttp
inc
out
out
jle
or
dec
sbb
jp
loope
cmp
mov
or
sbb
in
push
popf
xchg
xor
adc
jg
xchg
in
add
fld
push
(bad)
in
pop
bound
pusha
cld
lods
jecxz
dec
jl
jmp
call
dec
clc
dec
adc
push
push
mov
xchg
(bad)
(bad)
push
ins
ss
ret
inc
mov
xlat
dec
mov
xor
fstp
mov
in
jns
ss
dec
xor
mov
pop
jmp
jp
test
push
inc
jge
mov
int
cs
ins
adc
arpl
inc
push
lock
in
mov
pop
scas
add
lods
xchg
dec
cwde
div
cmp
jae
mov
mov
int3
pop
fsubp
mov
shl
rcr
lahf
loope
aaa
add
leave
sub
mov
iret
mov
call
sbb
stc
unpckhps
mov
pop
cmp
mov
imul
ja
mov
add
sbb
xor
das
xchg
mov
dec
inc
dec
pop
cmps
dec
aaa
ja
pusha
add
es
ret
cmc
mov
cmp
add
pusha
fs
test
mov
and
scas
je
mov
push
cld
shl
jg
lea
pop
xor
mov
pop
and
lea
sahf
ret
outs
sbb
xor
push
pop
xor
xchg
mov
or
jo
cmp
popa
aam
mov
cmp
nop
out
xlat
cmp
and
ss
inc
enter
jno
sub
mov
add
pusha
and
push
outs
in
mov
push
popa
jle
dec
cld
pop
inc
adc
lods
add
inc
fdiv
fidiv
jmp
dec
ins
jp
cmovs
(bad)
out
dec
sbb
aad
sbb
lock
fwait
(bad)
jns
add
xchg
xor
imul
fcomp
cmp
inc
pop
stc
and
cld
mov
cs
dec
clc
mov
in
jnp
sbb
popf
adc
mov
xor
or
pop
mov
or
dec
adc
out
or
leave
test
push
sbb
sub
lods
dec
xlat
dec
jg
cmp
adc
ss
inc
into
jno
cmp
inc
pop
ret
out
cmps
push
lds
fnstcw
and
shl
xchg
mov
add
push
sahf
adc
sbb
les
lods
push
xor
mov
xchg
jo
pop
xor
mov
add
pushf
lea
call
adc
push
ins
scas
rcr
or
jne
push
rol
mov
push
lea
mov
cmps
cli
mov
mov
mov
fbstp
popa
mov
jecxz
shl
arpl
test
cmp
stos
rcl
gs
pop
aad
push
fst
adc
sar
loopne
xor
push
or
push
(bad)
sbb
addr16
push
adc
data16
test
inc
mov
jge
xor
dec
pop
cld
fdivr
cdq
ins
jnp
mov
mov
xor
loop
or
ffreep
adc
ins
loope
pop
into
aad
ror
aam
mov
cmps
push
shr
mov
jae
daa
aaa
cwde
fnstsw
adc
mov
inc
xor
dec
push
push
mov
sar
or
jno
dec
aaa
inc
leave
mov
int3
cmps
jno
div
sub
jg
push
jp
xchg
nop
xor
es
cwde
in
inc
pop
rcr
repnz
movs
and
cmp
or
mov
lahf
fild
js
leave
aas
xchg
jb
inc
cmp
pop
ffree
mov
cmp
ss
jno
dec
jmp
adc
shr
add
mov
pop
pop
cmp
imul
adc
inc
push
loop
imul
arpl
cmps
push
shl
aam
fdiv
xor
mov
xchg
(bad)
xor
in
mov
and
sahf
ret
dec
mov
inc
ins
sbb
xor
or
cld
lahf
pop
out
repz
aam
call
xchg
mov
jmp
in
iret
inc
adc
sub
mov
mov
ja
add
ret
cmp
fcomp
mov
sub
mov
loope
in
xchg
dec
cmps
addr16
dec
stos
mov
imul
add
mov
add
aam
leave
jle
jmp
adc
sbb
or
(bad)
addr16
retf
or
xor
ret
cs
mov
(bad)
mov
shr
mov
inc
pop
pop
inc
inc
cmps
push
lahf
sub
cmp
aad
sub
shl
mov
in
popf
sub
mov
sahf
dec
pop
ja
xor
addr16
ja
sub
jno
adc
test
or
add
cmp
mov
mov
jbe
jp
sub
call
daa
stos
push
mov
adc
push
sub
aaa
dec
push
jno
ins
xor
add
cmc
cmps
xor
lods
icebp
xchg
sbb
sbb
cmp
dec
inc
inc
iret
jge
sub
(bad)
repz
mov
pop
jns
push
adc
adc
push
push
xchg
pusha
ss
mov
xchg
pop
and
hlt
dec
sbb
aad
icebp
imul
nop
pop
or
bound
push
cli
fld
add
jb
or
pop
sub
mov
jnp
push
pushf
inc
fwait
xor
push
adc
aas
mov
jmp
das
es
pop
retf
or
pand
(bad)
ins
mov
inc
dec
inc
fild
adc
mov
xor
mov
retf
pop
jg
ret
ins
jl
sbb
out
pop
pop
mov
xchg
in
xchg
mov
mov
cmc
add
ins
aas
ss
adc
loopne
into
call
pop
ret
(bad)
jmp
shl
fwait
es
mov
shl
scas
sbb
push
mov
sub
xchg
pop
nop
mov
push
loope
fidiv
mov
jae
pop
test
sbb
dec
dec
push
jp
(bad)
imul
idiv
xchg
lds
(bad)
dec
push
leave
adc
jmp
shl
movs
or
(bad)
and
out
loope
and
popa
jno
cmp
cmp
push
test
cmp
dec
(bad)
aad
xchg
std
push
call
dec
or
pop
cwde
dec
cmps
(bad)
sub
daa
mov
jp
mov
pushf
repz
mov
scas
fs
sbb
scas
mov
ss
push
adc
or
inc
pop
push
sbb
sub
add
jle
ins
call
xor
sbb
pop
dec
push
mov
push
test
push
call
sub
pop
inc
(bad)
pushf
dec
sti
xchg
iret
adc
out
aad
sar
push
pop
mov
cmps
fnstenv
in
mov
xor
gs
loope
cli
popa
sbb
gs
nop
cmp
jecxz
jno
xchg
mov
imul
mov
xor
cmps
int3
xor
sbb
(bad)
xchg
test
hlt
adc
or
jo
(bad)
adc
mov
push
mov
mov
sub
popa
dec
dec
ins
mov
cld
test
and
xchg
shl
clc
sbb
pop
clc
loope
dec
clc
sbb
lods
imul
pop
xor
mov
jmp
jmp
popa
jl
sub
push
jg
pop
jge
cmps
sbb
pop
test
jle
cmp
pushf
sti
pop
mov
ins
scas
push
stc
pop
out
(bad)
aaa
fcom
fldcw
and
sub
cld
adc
jecxz
pushf
mov
cmp
push
cli
ins
inc
jno
lds
pusha
add
rcl
adc
mov
or
inc
das
fst
fwait
mov
mov
sbb
xchg
pop
fimul
in
adc
cmp
xor
pop
inc
cwde
loopne
imul
mov
pop
dec
xlat
add
int3
xor
push
out
nop
bound
and
mov
sub
xchg
shr
fldcw
sbb
jns
ds
xchg
(bad)
xchg
xor
xchg
test
pusha
dec
jmp
scas
aas
xlat
arpl
add
jne
int3
in
repnz
pusha
sub
push
aam
sub
aaa
test
lahf
cdq
pop
les
pop
xor
push
pop
adc
stos
jo
push
faddp
bound
or
jbe
mov
dec
and
or
retf
dec
lock
and
cmp
inc
(bad)
or
and
xor
xchg
pop
xchg
lock
ds
or
cmp
pop
push
sbb
inc
cdq
aad
pop
sahf
test
mov
mov
rol
push
fwait
(bad)
ficom
adc
scas
mov
mov
das
in
test
or
mov
into
sub
pop
xchg
pop
adc
xchg
dec
aaa
neg
sub
mov
inc
add
or
shr
xchg
adc
addr16
cld
pop
in
jmp
(bad)
cmp
ins
enter
std
push
push
out
add
pop
jecxz
js
add
es
and
mov
cwde
ins
cmp
cmc
sbb
sbb
jbe
xor
push
outs
call
sti
xlat
scas
mov
adc
fimul
mov
cmp
mov
test
jo
icebp
mov
mov
push
push
test
add
in
test
pop
fldcw
lahf
in
clc
popa
std
clc
push
mov
data16
clc
pusha
rcr
sbb
in
mov
sub
mov
ins
repz
pop
push
sub
shr
pop
mov
add
push
pop
gs
or
adc
pop
retf
pop
pusha
data16
cwde
out
popf
pop
(bad)
in
inc
sbb
push
add
sar
push
mov
pop
out
mov
sbb
pusha
mov
push
adc
pop
jb
(bad)
cmp
les
popf
xor
adc
inc
arpl
stc
mov
lods
add
fnstcw
jp
xor
loope
mov
mov
inc
in
jne
out
dec
popf
aas
mov
sub
leave
xor
sti
cdq
call
xchg
in
data16
push
dec
xchg
adc
inc
mov
cmp
imul
pop
mov
sub
hlt
xor
aas
adc
xchg
adc
cmp
mov
icebp
jns
inc
repnz
push
and
or
pop
popf
cmps
(bad)
movs
popa
outs
pop
mov
in
lds
cmps
cli
(bad)
xchg
je
test
subps
mov
sbb
mov
cwde
ja
fs
jmp
lea
push
mov
pop
inc
xlat
mov
sbb
and
loop
cmps
stc
push
out
or
out
push
stos
mov
fptan
enter
mov
push
inc
js
push
and
mov
iret
out
arpl
cmps
pushf
fnstcw
into
test
sbb
and
dec
movs
stos
add
scas
push
mov
loopne
test
jmp
sbb
mov
sub
mov
popa
mov
in
sub
shl
inc
call
or
je
and
popf
lock
into
dec
mov
push
(bad)
jl
mov
xor
test
cld
or
sbb
fst
movs
sbb
mov
add
jmp
pop
inc
mov
push
or
sub
inc
movs
lea
mov
adc
test
add
sub
mov
and
shl
std
pusha
enter
jmp
ret
cmp
push
test
mov
push
cmp
jp
lods
jmp
dec
lock
jmp
xor
cwde
sbb
lods
inc
mov
adc
jle
std
stos
or
push
add
and
or
sahf
add
fwait
outs
mov
pop
stos
in
xor
xor
sahf
retf
xor
xchg
mov
retf
mov
test
adc
sbb
ror
cwde
fs
ds
ret
pop
cmp
and
loop
xchg
sbb
sub
addr16
add
scas
jl
outs
adc
fidivr
mov
test
daa
add
jg
jae
test
xor
out
bound
sti
movs
hlt
dec
sub
out
xor
jo
adc
dec
inc
retf
test
dec
ret
or
retf
mul
pop
pop
stos
sti
or
ins
ror
(bad)
stc
adc
inc
mov
xor
scas
out
sub
in
lods
retf
sbb
test
mov
(bad)
jmp
sar
jge
(bad)
mov
loope
fwait
jmp
shl
mov
sub
scas
sub
sar
imul
fnstcw
mov
inc
shl
jp
and
add
aad
push
and
and
out
fxtract
and
mov
dec
and
daa
ja
inc
push
pop
mov
xor
mov
arpl
inc
ins
lods
ret
(bad)
adc
push
sbb
call
clc
fwait
call
into
jbe
mov
ins
fsubrp
shl
stos
sbb
mov
cmp
and
xchg
iret
mov
mov
movs
loop
dec
pusha
retf
retf
fdiv
xchg
and
xlat
imul
jb
fild
jnp
xchg
cmps
ins
add
xchg
js
sub
sub
mov
sahf
inc
sub
dec
jge
cmp
push
and
inc
ds
or
dec
or
mov
mov
xchg
add
dec
mov
(bad)
mov
sub
jo
push
outs
xchg
sub
cdq
mov
loopne
or
gs
movs
idiv
je
adc
test
fimul
in
or
xchg
adc
sub
popf
(bad)
push
lds
xchg
icebp
dec
fucomi
and
sub
call
inc
dec
dec
dec
jl
cwde
push
mov
pushf
movs
pop
(bad)
mov
jg
push
leave
scas
cmp
shl
aam
push
mov
and
imul
adc
shl
sbb
int
jmp
nop
xchg
mov
dec
sub
sbb
pop
loopne
mov
and
mov
es
inc
jp
inc
dec
jbe
and
jne
call
push
movs
jmp
lds
mov
out
cmps
push
mov
add
mov
shr
mov
pop
xchg
fcompp
jo
fsubr
lods
ins
push
or
jae
and
sbb
cmp
aas
pop
and
mov
or
push
and
push
pop
mov
mov
fs
enter
pop
mov
mov
fiadd
inc
(bad)
mov
xchg
mov
dec
mov
scas
jg
add
xchg
pop
fsub
pop
jmp
cmps
es
jae
adc
mov
popa
xor
mov
pop
mov
sbb
push
xor
xchg
sub
and
lods
test
ins
cmp
aaa
or
ja
(bad)
mov
ja
cld
sti
mov
jmp
xchg
sbb
popa
inc
mov
imul
jno
shl
jmp
loope
or
inc
cmp
sbb
push
xor
jno
jbe
in
ss
jb
add
or
ret
clc
dec
data16
frstor
data16
add
jae
push
push
data16
jp
inc
stos
js
dec
cmp
or
sar
jns
push
pop
in
inc
push
xor
cs
call
pushf
retf
or
or
pop
sub
out
leave
inc
lahf
sbb
push
cmc
dec
int
jmp
inc
jno
or
(bad)
cld
(bad)
clc
jo
dec
mov
xor
jns
inc
mov
sar
cmp
inc
nop
xchg
and
lds
pushf
cmc
and
movs
loopne
sub
rcr
in
mov
jns
scas
adc
adc
retf
pop
mov
jno
inc
and
mov
mov
sbb
mov
pop
movs
sub
dec
push
pop
sbb
aad
add
jecxz
iret
les
jbe
push
cmp
inc
das
xchg
mov
sub
jb
fsub
mov
popf
fnstsw
cmp
dec
mov
sub
mov
cmp
fs
mov
xor
add
dec
push
inc
mov
jnp
mov
push
loope
arpl
jns
xchg
xchg
repz
mov
mov
sub
nop
aaa
sub
jmp
sub
pop
push
xor
arpl
push
cli
adc
xor
cwde
mov
xchg
sub
jno
adc
sahf
ret
pop
cmp
inc
push
daa
cld
fcomp
xor
sbb
cwde
xchg
xchg
stc
inc
test
out
outs
mov
dec
test
jmp
pop
mul
sahf
dec
xchg
and
popa
jo
pop
cwde
sbb
sub
ror
repz
add
out
lds
add
add
push
cmps
xchg
movs
xlat
add
adc
cmp
mov
push
imul
mov
and
adc
pop
cmp
fimul
push
rcr
adc
outs
lahf
adc
mov
call
cld
movlps
(bad)
ftst
mov
fdiv
sub
jnp
xlat
pop
mov
dec
xlat
mov
jp
or
add
in
xor
mov
push
xchg
dec
mov
and
aam
pop
mov
inc
mov
adc
arpl
mov
xor
std
xchg
xor
cli
xchg
xor
mov
sbb
sti
mov
fild
stc
dec
repnz
push
in
ds
and
fsub
jo
push
sahf
dec
lea
cmp
xchg
rol
sbb
jmp
fld
mov
rcr
fwait
leave
jns
imul
jo
push
je
pop
sub
cli
dec
into
fld
and
scas
sbb
xor
sbb
clc
or
inc
xchg
and
int3
aam
and
out
mov
fldcw
loop
push
sar
in
or
aaa
mov
outs
jnp
and
push
dec
inc
and
xlat
xlat
adc
jne
mov
and
xchg
jmp
push
dec
movs
repnz
pop
out
test
pop
mov
adc
aad
(bad)
nop
and
xor
or
pop
movs
inc
pop
cmp
or
pop
cmp
ret
and
test
push
loop
dec
shl
ret
pop
cmp
mov
jbe
push
jo
retf
adc
mov
bound
push
cmp
sbb
sbb
pop
dec
inc
movs
mov
aam
mov
dec
cmps
jmp
int3
and
pop
aaa
dec
xor
int
mov
mov
mov
inc
or
(bad)
out
adc
jmp
xor
xor
xchg
sub
sub
loopne
jp
mov
xor
cmp
pushf
fst
and
leave
add
fistp
aas
div
pop
(bad)
cli
pop
pop
pop
iret
pop
inc
pop
out
add
mov
shl
aas
fs
jmp
cmp
aam
add
scas
dec
add
mov
and
daa
stc
scas
retf
push
pop
fneni(8087
lahf
dec
dec
mov
mov
jecxz
sar
in
in
mov
pop
xchg
outs
(bad)
repnz
inc
idiv
and
dec
in
loopne
stos
pop
int3
out
loop
mov
in
add
adc
stc
inc
pop
add
out
ins
sub
js
sti
and
fdiv
lods
sbb
cmp
and
std
cmp
jmp
jnp
retf
inc
lods
fisttp
mov
and
scas
mov
sbb
imul
fst
push
in
enter
sbb
add
inc
pop
es
(bad)
aas
outs
(bad)
xchg
push
mov
adc
mov
stc
push
ret
mov
xchg
xlat
test
xchg
aam
(bad)
dec
rcl
repz
(bad)
cmps
cmps
adc
push
xlat
cmp
scas
sub
adc
cmp
into
push
push
xor
sub
mov
mov
jmp
cmp
cld
xchg
add
sbb
sub
scas
pop
in
mov
inc
mov
pop
sub
mov
mov
pop
dec
xor
xor
cmp
dec
aaa
add
call
jne
loope
adc
mov
lods
leave
mov
test
push
push
idiv
inc
test
jecxz
repnz
iret
out
mov
cmc
stos
mov
out
dec
in
jmp
popf
mov
cmp
aas
adc
pop
pop
loope
push
shr
adc
mov
xchg
shl
jg
pusha
call
inc
mov
lahf
pop
pop
cmps
js
fsub
xchg
std
and
rcl
outs
(bad)
cmc
inc
sbb
fdiv
sbb
test
(bad)
pushf
and
out
jo
std
xchg
jbe
sbb
test
repnz
and
mov
inc
adc
ret
iret
and
loopne
fisttp
rcr
nop
in
push
test
movs
mov
jne
mov
fs
sti
pop
cmp
out
push
lock
(bad)
retf
call
in
and
adc
test
pop
add
and
(bad)
ffree
jp
and
(bad)
jle
push
stos
lock
and
aas
jg
in
shr
pop
sub
je
push
imul
mov
stos
outs
pop
push
sub
jb
fiadd
shl
cwde
jns
mov
sub
sti
js
aas
rcl
push
shr
cwde
or
ins
ret
jo
pop
loop
pop
fcomp
mov
push
add
scas
ds
xchg
xlat
dec
mov
pop
and
shl
pop
out
or
xchg
popa
jne
movs
mov
mov
xor
retf
fsub
cmp
outs
aam
cdq
ret
mov
jl
jno
add
and
add
and
sahf
mov
(bad)
cmp
loope
in
mov
test
mov
fadd
inc
stos
in
jne
outs
out
xchg
push
xor
jg
and
push
dec
jbe
cmp
outs
jmp
cdq
add
pop
stc
shl
in
sbb
lea
mov
das
ss
pop
mov
fchs
retf
mov
cli
pop
cmp
mov
xor
aaa
das
cmc
sub
into
ret
out
arpl
loop
fdivr
lea
hlt
mov
sub
inc
sbb
test
fwait
aad
popf
or
or
(bad)
jge
push
push
pop
fist
pop
pushfw
dec
pop
in
bound
xchg
shl
(bad)
std
(bad)
mov
add
add
xlat
dec
push
push
popf
mov
stc
lock
xchg
lods
dec
movs
jns
mov
(bad)
js
sbb
adc
adc
outs
(bad)
jno
xchg
call
mov
nop
pop
inc
mov
cmp
xor
push
or
add
cs
enter
hlt
dec
fwait
hlt
inc
fs
dec
jb
data16
add
stos
ret
pusha
xchg
cwde
retf
(bad)
aas
sbb
jne
or
push
pushf
(bad)
stos
aam
je
pop
loope
sbb
jmp
test
loopne
maxps
xor
mov
sbb
mov
or
jns
and
mov
(bad)
aaa
inc
or
stos
jle
(bad)
in
leave
pop
push
xchg
dec
jb
xchg
(bad)
clc
in
jecxz
add
inc
mov
out
mov
std
pushf
scas
test
pushf
out
stos
imul
jmp
or
xor
pusha
popa
mov
das
into
lds
es
mov
pop
add
jnp
stos
jb
cmp
sbb
mov
sub
pop
push
xor
iret
jo
jge
into
push
cmp
int3
cmp
arpl
scas
xchg
mov
mov
jmp
(bad)
rcl
jmp
sub
fdivr
add
repz
and
fistp
jecxz
into
push
or
dec
cmp
mov
idiv
push
push
or
loopne
adc
sub
loopne
adc
imul
jb
pushf
data16
pop
mov
retf
stc
xor
fwait
jbe
mov
jp
jns
xor
leave
inc
add
xor
scas
sbb
out
inc
sub
push
or
jg
sub
daa
push
mov
add
shl
adc
(bad)
ins
xchg
int3
imul
mov
fcomp
inc
adc
test
pop
test
jns
repz
sbb
sbb
outs
add
mov
adc
fisub
movs
add
mov
mov
call
out
jo
and
xchg
push
fwait
call
ds
bound
movs
push
das
ja
adc
xor
or
mov
dec
aad
xchg
adc
push
aaa
lods
je
inc
ret
dec
shl
stc
out
jmp
fcomp
jnp
out
xchg
mov
mov
jb
and
scas
(bad)
mov
mov
test
rcr
mov
dec
xor
es
inc
xor
arpl
ins
mov
fimul
pop
cmp
jle
mov
mov
jmp
sbb
jb
cs
sub
lock
fistp
(bad)
sahf
dec
pop
(bad)
jmp
leave
adc
inc
js
push
cmp
cmp
sbb
out
ins
inc
lds
push
and
mov
leave
fistp
mov
jg
retf
cmp
push
or
adc
cmp
jae
cmp
scas
ror
and
or
jns
dec
movs
add
mov
aaa
ror
cmp
and
scas
lods
les
mov
adc
aas
xlat
pop
cmp
cmp
push
dec
pushf
jle
jl
mov
mov
mov
sbb
data16
sbb
pop
mov
lock
mov
sub
leave
repnz
pushf
cmp
or
mov
repz
push
dec
cmp
pop
stos
dec
repz
mov
outs
std
retf
cmp
mov
pop
or
mov
repnz
or
sbb
push
in
pop
mov
pushf
xchg
mov
data16
add
fst
outs
xchg
mov
mov
cmp
cmps
push
scas
mov
jge
pushf
add
jle
xchg
icebp
mov
jg
fmul
and
xor
enter
sub
mov
xchg
dec
clc
cwde
and
(bad)
int
push
inc
mov
add
and
fldl2t
sub
sub
and
sub
sar
jmp
outs
add
das
call
test
fucomp
dec
popa
or
outs
mov
push
add
mov
call
std
aad
cmp
push
adc
lock
fsub
mov
and
mov
stos
rol
sbb
cmp
and
scas
loope
xor
xchg
aad
paddw
fwait
std
pop
pop
inc
std
pop
(bad)
mov
jne
or
xor
dec
in
inc
or
push
xor
pop
inc
xor
outs
js
aaa
loop
gs
enter
rcr
out
rcl
pop
scas
jmp
sub
je
out
jmp
call
mov
jmp
mov
mov
dec
fnstsw
loopne
shr
(bad)
les
lds
adc
mov
cmp
repnz
bnd
cmp
hlt
xor
mov
dec
daa
std
jo
in
mov
fimul
retf
add
jo
mov
sub
retf
and
sbb
je
cmps
hlt
xchg
jae
xchg
fcom
addr16
dec
sub
cmp
mov
fcomp
dec
inc
xchg
inc
into
retf
or
dec
push
push
dec
test
sub
sbb
in
clc
adc
jmp
fstp
movs
icebp
jp
fadd
aad
mov
xchg
outs
xchg
sbb
fldpi
clc
int
push
pusha
mov
pop
int3
sbb
add
aad
ret
(bad)
sub
adc
shl
popf
shr
or
or
shr
jge
pusha
jge
pop
sbb
sar
fadd
test
(bad)
mov
mov
mov
aad
hlt
aaa
mov
jne
or
dec
cmp
das
xchg
mov
pop
imul
xor
push
xor
cli
stc
and
jp
xor
pop
sub
lods
cld
xchg
pop
dec
test
and
stc
push
or
das
sub
cmps
push
jmp
or
popf
mov
popf
cmps
mov
or
mov
jmp
retf
xchg
inc
xor
or
jns
pop
jns
cmps
mov
aad
scas
in
psllq
push
cmp
xchg
out
ror
out
or
adc
shl
outs
into
push
sbb
cld
jl
jns
sbb
and
xchg
sub
dec
rcr
popf
cli
push
and
lods
jb
arpl
sbb
popa
dec
shr
mov
mov
sub
sbb
js
(bad)
fiadd
xlat
xor
gs
push
jl
ins
ficom
mov
in
and
js
stc
xchg
push
sbb
test
sbb
push
(bad)
inc
sub
xchg
pop
inc
pop
lds
jae
xor
movs
icebp
push
(bad)
clc
stos
cld
push
mov
cmp
(bad)
push
jecxz
cmp
xlat
cmp
cwde
clc
dec
jnp
rol
int
pop
(bad)
mov
jb
inc
leave
in
cmps
jno
iret
lods
scas
mov
cmp
or
xchg
add
inc
dec
cmp
scas
in
nop
or
call
icebp
(bad)
stos
xchg
lock
lahf
mov
push
push
mov
pushf
outs
adc
push
ins
dec
dec
lods
bound
(bad)
out
cwde
loopne
jbe
cld
xchg
sub
lods
push
(bad)
jns
scas
leave
stos
fwait
xchg
jg
inc
cmp
jle
out
jecxz
js
mov
add
xor
retf
js
inc
and
ret
push
stos
jo
shr
lahf
dec
xchg
or
test
xor
or
fadd
xlat
xchg
push
in
repnz
or
mul
loope
ins
imul
adc
push
test
daa
fmulp
sar
rcr
(bad)
mov
aam
shl
imul
jbe
rcr
iret
inc
dec
dec
adc
(bad)
lds
test
test
test
pusha
arpl
js
jno
jno
call
adc
imul
rcr
jg
xor
dec
clc
mov
addr16
fwait
cmp
pusha
push
jmp
pusha
pop
xchg
and
out
stc
mov
mov
cdq
mov
pushf
adc
or
pop
sub
stos
push
mov
xchg
(bad)
in
adc
mov
pop
jmp
fnstenv
xor
inc
cld
sbb
scas
out
not
jecxz
ret
adc
xchg
jae
push
pop
or
das
mov
or
cmp
jne
push
sub
pause
xchg
mov
xor
push
sbb
jae
mov
sub
and
inc
sbb
jmp
mov
adc
rep
popf
xchg
repz
cmps
sbb
pop
int
sub
cmp
fdivr
retf
jg
(bad)
retf
stos
pushf
out
mov
sub
loope
mov
cmps
mov
xor
jg
movs
mov
popf
or
std
hlt
push
pop
dec
and
lods
lea
inc
sub
das
enter
mov
cmc
push
xor
push
mov
ins
call
call
xor
mov
fiadd
cmp
jae
in
or
sbb
enter
loope
mov
and
(bad)
fstp
mov
jo
shl
test
push
aas
jl
dec
push
scas
adc
jl
jae
and
xor
out
leave
push
xchg
jecxz
lahf
rcr
bound
pusha
out
mov
jmp
add
ds
mov
out
pop
ficom
mov
xor
inc
add
cmp
(bad)
cmp
ror
sti
imul
lock
call
dec
jecxz
(bad)
(bad)
movs
push
fs
jge
aas
or
cmp
addr16
out
xchg
(bad)
inc
pop
sub
sub
mov
loopne
test
in
jecxz
call
mov
and
jmp
nop
cdq
xchg
pop
mov
out
and
test
das
adc
(bad)
pop
es
pop
inc
dec
xchg
mov
or
fwait
sbb
lahf
or
add
adc
imul
adc
repz
shr
or
enter
mov
add
pop
outs
fldcw
add
imul
cwde
jecxz
not
mov
jne
cmps
frstor
mov
xor
or
rol
mov
add
lds
out
movs
ss
xchg
sbb
xchg
ficom
mov
retf
mov
xchg
mov
shl
fcom
ss
fstp
mov
push
test
inc
daa
stos
push
push
retf
sbb
loopne
fnstcw
rol
add
inc
xor
rol
imul
cmp
bound
push
movs
inc
pop
xchg
shr
lds
out
jns
in
popf
cld
ror
daa
cdq
or
and
das
ror
pop
adc
adc
xlat
sbb
ret
mov
or
cmps
adc
call
loop
add
bnd
cmp
push
mov
cmp
pop
adc
sub
sar
aaa
xor
jnp
stos
test
push
push
add
mov
push
mov
lahf
xchg
mov
aas
aad
dec
(bad)
movs
mov
hlt
mov
pushf
pop
or
stc
ins
(bad)
out
stc
loopne
mov
daa
loop
out
jno
add
std
dec
scas
(bad)
in
dec
add
rol
push
pop
popa
adc
adc
mov
add
inc
sbb
and
dec
jb
nop
push
shl
jbe
call
out
(bad)
sbb
int
pop
jmp
or
mov
push
arpl
pop
(bad)
daa
cli
push
pop
inc
pop
jnp
and
shr
sbb
dec
mov
mov
push
ins
sub
jecxz
jne
repz
(bad)
clc
je
mov
add
aam
cmc
fst
imul
or
or
add
xor
jnp
cwde
mov
(bad)
ins
(bad)
outs
push
iret
mov
add
cmp
sbb
lahf
cmp
sbb
mov
pop
sbb
add
cmp
mov
jge
sti
iret
and
iret
aas
cmp
fld
sbb
sbb
inc
(bad)
push
xor
out
test
cmc
leave
test
cmp
ret
out
adc
pop
repnz
lahf
mov
push
push
call
lods
imul
aam
mov
and
clc
out
test
aas
pop
cld
jle
out
sbb
in
shl
pop
aas
and
add
(bad)
std
or
push
jo
scas
(bad)
call
push
pushf
repnz
int
arpl
int3
jle
repnz
adc
push
or
js
cmp
mov
mov
or
cli
aam
mov
(bad)
(bad)
enter
adc
mov
std
jmp
mov
and
ret
jb
xor
add
stos
mov
push
sub
daa
dec
jae
test
cmp
mov
mov
lods
inc
int3
icebp
jae
xchg
call
scas
ret
xor
cdq
lock
sbb
and
daa
mov
pop
clc
adc
inc
adc
sbb
mov
pop
in
imul
adc
cdq
sub
inc
inc
hlt
push
test
rcl
cmps
sbb
sbb
inc
pop
push
fidiv
sbb
lahf
sub
loopne
dec
adc
das
daa
retf
xchg
add
mov
aam
and
mov
pop
or
mov
aam
sub
lea
jnp
adc
cwde
shr
dec
xor
popa
and
mov
shr
stos
xchg
mov
daa
cmp
dec
dec
jno
add
cmps
xor
xchg
mov
cli
push
std
imul
adc
cmps
lods
and
arpl
ins
(bad)
(bad)
pop
push
add
rol
rcl
push
push
adc
lea
mov
aad
repnz
aam
and
(bad)
mov
sub
loopne
fwait
les
mov
data16
jecxz
jmp
icebp
fisttp
mov
add
popf
mov
sub
cmps
jb
push
or
fsubp
dec
stos
dec
jno
fcomp
test
mov
add
mov
add
int
jb
mov
(bad)
push
fidiv
cmp
xor
jge
imul
stc
dec
xor
mov
mov
mov
movs
xor
cmp
jl
(bad)
pop
out
out
and
mov
dec
cs
out
cdq
fsub
or
movs
mov
movs
pop
clc
xchg
xchg
jb
ror
cwde
mov
fs
aas
sbb
hlt
in
imul
push
lahf
inc
test
jl
adc
cs
xor
out
push
call
push
ror
nop
test
and
test
in
test
les
out
add
inc
or
cmp
dec
push
(bad)
aaa
dec
ficom
mov
or
lds
or
ja
pop
or
cli
std
push
mov
stos
test
mov
ins
aam
popa
inc
sub
cld
outs
ins
and
mov
fsub
arpl
ins
ret
repnz
jge
cs
jo
mov
mov
jmp
mov
std
stos
cld
lods
mov
xchg
test
xor
es
arpl
dec
inc
pop
fsub
inc
pop
sbb
in
idiv
push
aaa
pop
das
xor
cmp
lock
fmul
ins
clc
aas
dec
(bad)
call
sbb
push
dec
icebp
inc
inc
lock
dec
sbb
mov
or
in
(bad)
mov
je
xor
jnp
add
rol
push
call
imul
test
and
and
push
push
push
scas
sub
(bad)
into
movs
xor
sbb
pusha
adc
ret
test
and
jb
jmp
jmp
xchg
movs
push
sub
jle
into
xchg
in
lods
mov
out
sahf
adc
fnsave
enter
sub
jbe
jne
stos
push
aad
mov
xlat
push
je
or
movs
arpl
inc
push
sub
xchg
cmps
aaa
in
cmps
and
ret
in
mov
jmp
pop
test
inc
in
mov
out
std
ret
fstp
pop
mov
es
leave
fadd
aam
pushf
jecxz
xlat
push
cld
dec
mov
fsubrp
(bad)
inc
popf
and
std
or
rol
xchg
pop
push
sahf
in
stc
sub
pop
mov
fimul
cmp
or
inc
push
cmp
dec
(bad)
lock
inc
cmc
sbb
out
fstp
loopne
mov
xchg
std
pusha
ds
pop
push
adc
out
mov
mov
enter
mov
pop
out
daa
fwait
mov
inc
out
pop
rol
cmp
and
jne
inc
fnsave
outs
idiv
mov
iret
in
call
and
fadd
ret
or
or
fldenv
fild
inc
daa
sub
ja
mov
and
js
out
jo
mov
into
push
pop
push
repz
push
jbe
movs
fdivr
aas
xchg
mov
inc
jbe
pop
pusha
xor
xchg
cdq
popa
je
in
dec
leave
shl
out
cmp
retf
sbb
dec
xchg
adc
xchg
mov
daa
in
pop
clc
jg
pop
mov
mov
sti
pushf
leave
and
mov
sbb
mov
aad
std
xchg
cli
xchg
cmp
inc
push
mov
mov
xchg
push
mul
push
lods
in
lock
adc
dec
int
ret
es
int
pusha
cmp
hlt
add
dec
imul
jb
push
xor
cmp
push
ror
ss
iret
popa
mov
cli
mov
idiv
dec
sbb
and
popa
test
mov
jecxz
pop
(bad)
call
mov
ret
outs
push
mov
add
shr
push
mov
cli
and
mov
adc
sbb
aad
aam
jmp
mov
sbb
xchg
int
repnz
jl
push
mov
adc
push
aas
das
pusha
cmps
or
popa
push
inc
test
fiadd
call
xor
fwait
add
xor
push
pop
hlt
mov
fnsave
scas
dec
xor
mov
and
ret
outs
repz
lods
xlat
in
ror
inc
movs
jbe
cmp
inc
sbb
int3
cmc
sbb
adc
sbb
mov
pop
add
imul
sub
mov
dec
ss
(bad)
imul
xchg
mov
sbb
sbb
aaa
cmps
jmp
inc
lahf
movs
adc
mov
ins
or
sbb
inc
sbb
xchg
sub
or
jg
nop
mov
sub
mov
movs
xchg
imul
sub
mov
int3
sbb
sub
scas
iret
(bad)
cli
inc
aad
jb
(bad)
cmc
xor
imul
add
ds
adc
push
xchg
jmp
inc
mov
mov
iret
test
mov
xchg
in
icebp
fcmove
inc
fwait
out
sbb
stos
mov
mov
inc
enter
ins
xchg
mov
(bad)
sbb
pop
sahf
xor
xor
outs
jmp
pop
dec
jmp
daa
dec
loopne
mov
xchg
cld
and
jle
mov
add
inc
in
jmp
jne
sub
cs
jle
push
add
jne
les
aaa
(bad)
mov
push
sub
and
int
pushw
mov
or
mov
adc
int
mov
lds
jl
push
pop
xchg
cmp
pop
add
xor
sub
cmp
mov
mov
mov
test
or
xor
call
mov
cli
sub
push
add
mov
sbb
int3
mov
dec
mov
std
adc
pop
add
mov
add
jle
push
inc
pxor
scas
cmp
fdiv
scas
mov
mov
push
lea
adc
rol
leave
icebp
sar
stos
dec
dec
pop
adc
mov
test
les
in
sbb
mov
or
retf
frstor
imul
pushf
out
adc
aaa
in
call
int3
lock
sbb
aad
xchg
and
dec
fldcw
jmp
pop
cli
mov
xor
xor
jg
dec
jge
ja
bound
adc
lds
push
(bad)
push
cmp
inc
mov
mov
or
pushf
movs
cmp
jne
mov
push
inc
lods
fcmovnb
push
mov
or
xor
jg
mov
(bad)
pusha
popf
or
vphaddubw
xchg
cdq
fisttp
loopne
sub
jecxz
retf
mov
pop
in
cmps
stos
cdq
das
mov
ror
mov
xor
jbe
gs
sub
iret
mov
inc
imul
mov
mov
out
call
jmp
sti
je
jne
xor
mov
movs
loope
jg
dec
pushf
(bad)
jne
and
mov
les
sub
jmp
arpl
es
mov
xchg
xor
sub
mov
inc
aas
loopne
jbe
mov
aad
mov
adc
(bad)
shl
(bad)
ret
mov
sub
push
jmp
dec
mov
and
gs
in
fidivr
(bad)
pop
inc
sub
adc
xor
ins
mul
sub
retf
mov
push
stc
lahf
pop
cmps
jne
pop
arpl
mov
inc
(bad)
scas
mov
mov
dec
add
cmps
clc
icebp
jmp
rcl
xchg
daa
cmp
mov
and
ret
aam
lods
loope
(bad)
cmp
adc
xor
and
jmp
inc
xchg
xchg
gs
scas
jp
xor
cmp
test
repz
and
mov
scas
aad
clc
or
daa
dec
jl
cld
(bad)
jg
pop
or
mov
in
and
xor
js
mov
dec
icebp
dec
lock
mov
fadd
mov
and
sub
xlat
add
fsqrt
cwde
sbb
psllq
xor
call
adc
and
out
jmp
daa
iret
gs
cmp
int3
adc
call
lods
inc
rcr
pop
add
push
adc
or
jl
mov
ds
pop
cwde
dec
imul
inc
fucomp
mov
mov
(bad)
shl
xchg
mov
lock
xor
push
es
(bad)
xchg
gs
popf
leave
ds
(bad)
(bad)
sahf
mov
mov
sbb
stos
ficom
ror
scas
inc
and
mov
jns
cmp
fidivr
jge
lea
sbb
xchg
aad
mov
aas
dec
pop
push
outs
jmp
and
(bad)
jae
sahf
pop
jl
cld
test
inc
iret
ins
cmp
push
and
push
fadd
mov
sar
movs
div
in
sub
mov
add
frstor
sub
xchg
enter
je
inc
cmp
mov
jb
outs
and
add
cmc
and
fsub
inc
mov
xor
xchg
and
sbb
add
xchg
js
cwde
cmp
adc
or
adc
pop
fld
fwait
jbe
jne
push
cmp
test
dec
ror
push
retf
jp
inc
jo
adc
out
ins
push
loop
adc
mov
call
cld
mov
hlt
ret
and
dec
enter
mov
jno
adc
ins
jg
push
retf
(bad)
push
sbb
clc
jmp
xor
pop
inc
adc
pop
std
jne
adc
xchg
xor
inc
and
es
fld
shl
das
jo
cmps
or
out
cdq
adc
pop
adc
outs
adc
(bad)
lods
push
aaa
mov
loope
dec
xlat
fistp
ins
nop
in
xchg
xchg
mov
mov
and
sub
leave
fs
aad
jg
fnstsw
mul
dec
jbe
scas
je
mov
and
aam
mov
sbb
addr16
and
adc
mov
inc
(bad)
jl
cs
xlat
jo
and
loope
les
mov
push
aad
add
dec
test
add
ja
mov
scas
dec
push
sbb
adc
(bad)
aad
pop
loope
aaa
mov
dec
jnp
je
cmp
xor
das
out
inc
out
xor
enter
loope
mov
cdq
push
ret
lock
pop
fimul
dec
and
adc
js
inc
movs
shl
mov
adc
fiadd
mov
bound
pushf
icebp
std
jle
push
jle
push
add
mov
push
(bad)
shl
mov
ret
mov
inc
stos
jne
adc
mul
push
xchg
bound
cdq
inc
icebp
mov
pop
push
stos
inc
mov
add
and
int
and
fbstp
in
mov
sbb
syscall
add
push
aaa
daa
dec
cli
int
fdivr
dec
jno
sub
xor
xlat
sti
mov
leave
retf
xor
bound
sbb
ror
and
push
push
fsub
xchg
mov
mov
xlat
mov
mov
or
js
xor
mov
or
(bad)
icebp
ss
pushf
dec
xor
ds
js
lahf
xchg
pop
pop
imul
sub
pop
ret
cmps
cmp
and
sar
cli
sub
std
inc
sbb
jnp
test
fld
lods
retf
adc
in
ins
sub
jmp
frstor
xor
sahf
push
imul
cmp
sbb
jnp
fidivr
shr
and
push
xor
or
pop
fld
xchg
pop
jo
xor
scas
pop
adc
sbb
test
les
int3
(bad)
call
xor
sbb
jl
jle
fldenv
or
mov
fisub
js
sbb
sub
ret
test
adc
popa
xor
jne
or
mov
lahf
push
bound
dec
add
jle
in
mov
loopne
sub
jb
mov
rcr
xor
call
into
or
jl
ins
dec
test
adc
jno
xchg
mov
and
ret
push
sub
dec
sahf
dec
xor
cwde
push
cld
xchg
aam
adc
add
lods
pop
sti
and
bound
or
xlat
mov
in
xor
ds
xchg
and
fcomp
in
or
pop
fsub
push
sar
jo
push
jns
xchg
not
inc
(bad)
fwait
aaa
inc
cmp
adc
pop
sbb
sub
pop
cs
sti
xchg
in
sahf
mov
enter
out
imul
call
or
leave
push
dec
(bad)
in
lods
nop
ss
pop
inc
pop
enter
js
call
dec
dec
xchg
stc
enter
sub
leave
ds
stos
dec
je
push
add
outs
sbb
ja
int
test
ds
sub
mov
adc
es
add
int3
int3
jecxz
int
outs
nop
dec
add
popf
aad
std
movs
inc
dec
cmps
push
ins
add
cmp
push
fdivrp
pop
fimul
scas
lock
lods
adc
fwait
pop
dec
jns
add
mov
jle
inc
pop
pop
adc
mov
imul
or
push
xlat
aas
inc
jmp
stc
rcr
push
xchg
pop
mov
jmp
arpl
popa
mov
mov
clc
cmps
nop
mov
movs
dec
rol
jnp
bound
lahf
(bad)
pop
mov
sbb
jl
adc
mov
in
mov
dec
fiadd
jge
mov
sub
sahf
loope
rcr
retf
call
lahf
inc
jle
bound
jmp
push
setp
xchg
shl
and
jo
leave
jmp
sbb
retf
fild
add
jle
dec
push
in
mov
rcl
cmps
daa
push
pop
and
ror
cdq
ja
dec
or
shl
mov
pop
push
movs
jge
add
das
add
jg
in
sbb
inc
mov
in
jo
jp
dec
mov
mov
adc
rcl
aad
cmc
pushf
or
xchg
cwde
fnstcw
pop
sub
outs
lea
push
jle
mov
enter
mov
mov
cs
mov
popf
int
adc
mov
dec
inc
cmp
imul
loop
addr16
cmc
dec
jae
aas
(bad)
ja
mov
mov
mov
sub
sub
and
pminub
sub
addr16
jae
xor
add
mov
pop
mov
and
mov
push
fild
mov
cmps
lock
cdq
add
cmp
mov
shl
rol
inc
sbb
push
push
shr
jae
xchg
std
adc
in
sbb
and
imul
icebp
sbb
xor
test
mov
cs
in
ss
mov
ja
dec
lock
jg
popf
add
mov
fs
xor
rcr
cs
xchg
xchg
jmp
(bad)
repz
pop
stos
out
icebp
add
imul
scas
mov
pop
sub
fidivr
jge
xchg
shl
ror
and
jne
dec
push
out
sbb
cmps
mov
ins
push
pop
xor
loopne
in
outs
mov
mov
shl
aam
inc
loopne
loopne
repz
and
and
inc
arpl
in
or
cmps
and
sbb
and
pop
push
inc
stos
or
inc
lods
lea
and
mov
leave
fsub
ja
jmp
mov
stc
loop
push
ja
sub
cmp
sbb
fcmovbe
cdq
in
sub
adc
cmp
and
pop
push
not
rsm
xor
loope
sbb
shl
lock
ins
shl
(bad)
mov
jne
add
inc
xchg
xchg
mov
arpl
sub
xchg
cmp
ins
in
lea
xor
shr
jecxz
shr
fidivr
sbb
cmp
cmps
or
call
xor
(bad)
cwde
imul
gs
mov
jno
loopne
popf
ds
jmp
sbb
pop
jb
xchg
ds
das
mov
les
jb
mov
xlat
cmps
and
ins
mov
mov
mov
dec
inc
dec
cmp
repz
retf
push
pop
sbb
mov
fmul
pusha
aaa
xchg
sub
push
and
fwait
ja
out
inc
adc
out
mov
aad
mov
sub
pop
addr16
movs
ins
or
or
cmp
out
and
call
data16
xor
ja
mov
dec
pop
adc
frstor
mov
movs
sbb
inc
sub
mov
cwde
test
mul
sub
inc
cmp
(bad)
pop
sahf
push
imul
sbb
(bad)
repz
xor
mov
or
mov
loope
or
retf
xchg
mov
ret
xor
fs
les
retf
ror
add
mov
mov
lods
adc
dec
mov
adc
mov
xor
fist
dec
inc
inc
push
pushf
aad
aas
mov
pop
mov
(bad)
loop
mov
cmps
neg
xor
mov
cmp
(bad)
cmp
dec
jmp
or
cmps
mov
cmp
jns
xor
inc
add
jae
in
mov
rol
adc
rcl
xor
jmp
fcomp
and
sti
icebp
push
jmp
mov
sub
ret
cmc
lods
xor
jnp
nop
add
sub
mov
inc
ret
xor
push
out
push
xor
scas
xor
jno
push
dec
or
cmp
mov
sbb
sbb
push
or
and
lock
jge
imul
xor
outs
push
bnd
adc
lea
adc
push
outs
stos
mov
lock
repz
ss
mov
scas
aad
mov
mov
pop
ins
xor
nop
loop
test
dec
call
ins
(bad)
cmps
gs
mov
inc
stc
dec
mov
add
xchg
ret
das
aad
mov
js
dec
lahf
mov
xchg
cmps
adc
mov
inc
rcr
sbb
cwde
shl
cs
not
lahf
xchg
pop
int
int3
arpl
mov
sbb
jg
jne
iret
mov
out
inc
mov
pop
fwait
mov
xor
sbb
not
lea
add
vfrczps
imul
stos
fs
adc
mov
call
ins
dec
lds
sub
sub
xchg
xor
std
xchg
jg
jne
xchg
in
dec
cwde
sahf
call
xchg
xor
nop
push
push
cmps
jmp
cmps
add
xchg
fisubr
lds
mov
xor
arpl
pop
mov
dec
mov
call
(bad)
sub
jnp
xchg
js
(bad)
sub
mov
push
call
call
or
push
shl
ja
cmc
(bad)
jecxz
pusha
mov
ja
pop
push
or
and
push
jns
pop
(bad)
sbb
dec
sub
fcmove
or
mov
mov
sti
hlt
sbb
fild
mov
cmps
or
dec
or
lods
mov
push
sbb
shr
and
ins
or
or
fs
sub
imul
fs
jle
push
dec
hlt
outs
test
sub
fsub
mov
mov
push
movs
xlat
inc
popa
mov
jno
adc
adc
add
xchg
dec
ds
sbb
cdq
out
xchg
fs
movs
adc
imul
sbb
sub
repz
pop
xchg
dec
test
xchg
inc
ror
and
rol
scas
adc
add
addr16
cmp
cdq
arpl
sub
mov
fstp
aas
retf
jmp
test
movs
sti
nop
mov
jno
popf
xchg
sub
test
and
enter
clc
cs
mov
push
imul
cmp
jno
(bad)
push
pop
dec
inc
je
sub
pusha
adc
sbb
dec
push
lods
xor
jne
xchg
in
fsubr
pop
ins
repnz
mov
(bad)
stos
jecxz
push
cdq
fs
cdq
ja
int
dec
mov
js
push
xor
push
add
lea
js
mov
outs
aas
mov
addr16
retf
or
mov
stc
xchg
push
dec
xor
and
xlat
xor
mov
pop
or
stos
leave
jge
cmps
adc
pop
inc
scas
retf
cmp
hlt
adc
aas
call
pusha
jbe
sar
push
adc
shr
push
loopne
jl
xor
movs
mov
enter
jg
add
mov
jb
jp
xchg
and
mov
xor
fisttp
ss
add
or
not
jb
lock
push
xlat
xchg
inc
cmps
ins
cmps
in
les
in
clc
cmp
arpl
inc
ret
mov
and
sbb
add
or
icebp
stos
sub
pop
frstor
inc
cld
retf
inc
fisubr
cmp
mov
fdiv
je
adc
imul
mov
fld
test
mov
adc
retf
xchg
jecxz
test
inc
movs
sbb
xchg
popa
push
gs
(bad)
mov
jbe
fsubr
add
fisub
push
mov
pmulhw
mov
mov
cmps
outs
or
xchg
fdivr
cmp
cmp
ror
add
clc
and
mov
fnstenv
retf
sbb
ja
or
fistp
fiadd
test
pop
lds
je
jge
or
out
sub
out
sbb
ja
mov
in
pop
sbb
sahf
clc
cmp
ret
mov
push
aad
push
cmp
mov
leave
and
call
ins
jo
cmp
mov
mov
push
sub
adc
xor
xor
xor
xor
fsub
add
sub
jg
sbb
xchg
fs
popf
adc
jp
int
push
aad
aaa
push
jl
push
xchg
and
jae
(bad)
mov
retf
gs
xchg
pminsw
adc
aam
mov
cwde
in
xor
dec
enter
jbe
ret
stc
shl
push
mov
ficom
adc
aas
hlt
jl
stos
or
jl
mov
push
jmp
dec
fwait
dec
fwait
mov
xlat
jns
ja
adc
ret
popf
rol
mov
push
in
stc
(bad)
cwde
mov
cwde
inc
shl
or
adc
xchg
sahf
cwde
fwait
jno
int
rcr
pop
jnp
and
xchg
js
mov
add
sbb
fmul
mov
pop
xchg
mov
mov
arpl
push
popa
in
sub
mov
sub
jmp
or
movs
pop
sar
mov
cmp
sbb
aas
dec
mov
xor
cld
push
or
imul
add
sub
mov
jb
outs
xor
aad
ret
add
jecxz
push
out
popf
test
cdq
jne
cli
xchg
ret
inc
and
xor
xchg
scas
jge
mov
ds
shr
sub
inc
mov
repz
push
loop
and
sub
nop
outs
popa
mov
lods
ss
mov
(bad)
test
imul
xor
daa
out
sub
pop
push
or
loope
inc
add
test
xchg
and
push
js
and
enter
aaa
add
das
cli
dec
int3
push
sbb
sub
mov
arpl
xchg
call
(bad)
mov
add
push
in
sbb
mov
rcr
lods
sub
adc
push
mov
adc
push
xor
adc
sahf
test
adc
pop
adc
popa
add
cmp
ret
sub
jmp
call
ret
(bad)
scas
sbb
mov
cmp
inc
(bad)
jl
mov
pop
adc
shr
sub
mov
xchg
xchg
addr16
xchg
adc
fcomi
mov
push
iret
sahf
inc
jo
jge
cmp
add
jno
into
push
mov
leave
ins
fst
jecxz
push
ins
push
and
inc
sbb
out
lods
mov
sub
leave
xor
and
lds
mov
sub
mov
pop
cdq
in
mov
adc
xchg
pop
push
arpl
sahf
lods
sub
call
mov
or
jle
in
arpl
dec
cs
test
sub
dec
add
xchg
jo
sbb
cmp
xchg
and
(bad)
cmps
mov
mov
sbb
mov
cld
cmp
xchg
ss
sbb
movs
sub
(bad)
out
pop
xor
adc
xor
das
and
fprem
push
mov
les
(bad)
dec
mov
xchg
scas
mov
imul
sub
mov
mov
stos
in
push
push
ins
ds
movs
das
cmp
es
enter
cmp
hlt
push
mov
fwait
sub
sbb
repnz
data16
jbe
das
das
jecxz
inc
sahf
pop
jmp
lahf
scas
add
(bad)
stos
mov
jnp
fwait
aaa
mov
jmp
cmps
adc
dec
jmp
or
xor
push
adc
leave
adc
(bad)
aaa
mov
mov
add
in
jb
stos
popa
fs
cwde
nop
imul
pop
fadd
mov
sub
push
loop
out
cmps
adc
add
push
dec
and
jmp
jl
ret
rol
pushf
imul
sahf
xor
and
ins
ss
mov
jns
push
inc
adc
sub
and
out
mov
shrd
lods
xor
xlat
mov
pop
aaa
sub
xor
sbb
shr
dec
inc
repz
cmp
sbb
push
add
stos
or
test
arpl
hlt
push
fld
sub
add
dec
mov
adc
mov
sbb
daa
cmp
movs
mov
stos
ror
lods
dec
repz
mov
in
loope
push
adc
add
call
or
xchg
sub
mov
push
dec
fst
(bad)
jne
push
push
jbe
xchg
in
jbe
pop
jmp
fmul
int
sahf
ret
not
xor
or
out
jg
rcr
aam
push
mov
out
pop
add
xor
repz
gs
pop
aad
sub
ror
mov
mov
xchg
pop
jge
push
mov
jmp
gs
pop
sub
add
rol
es
and
and
and
clc
dec
lds
xor
ret
aam
xchg
push
and
inc
out
sbb
dec
pop
cmovbe
lds
dec
pushf
stos
mov
inc
cs
sub
jne
inc
(bad)
leave
adc
repz
cdq
or
das
mov
adc
inc
pop
xor
scas
jae
dec
lock
jo
out
mov
imul
ds
(bad)
add
call
cmp
xlat
dec
sub
adc
sub
shr
or
sbb
add
mov
fcom
stc
icebp
adc
(bad)
(bad)
sub
inc
call
ins
or
add
ja
ds
add
cdq
sub
int
mov
addr16
retf
jo
lds
(bad)
data16
imul
mov
ins
xor
push
iret
rcr
shld
fs
sub
scas
or
aam
hlt
rcr
aam
mov
mov
or
pop
loop
cs
enter
jo
shl
cs
push
sub
repz
xchg
sbb
fsubrp
out
dec
test
push
pop
sti
add
js
test
push
cmp
dec
or
mov
mov
popf
outs
retf
cli
dec
sbb
in
mov
adc
in
xor
dec
mov
cli
jb
push
pop
jmp
adc
stos
sub
cdq
fs
outs
cmp
in
aad
jg
xchg
pushf
in
daa
nop
ins
mov
mov
in
cmp
or
rcr
lahf
dec
test
sub
(bad)
bound
pop
sub
leave
movs
adc
sub
xor
hlt
mov
leave
mov
jae
add
xchg
lock
xchg
inc
push
int3
push
sbb
inc
retf
stos
sbb
xor
pop
div
xor
cdq
mov
adc
cmp
dec
(bad)
int3
and
jbe
data16
push
(bad)
push
mov
push
jb
sub
lds
mov
cdq
leave
push
dec
(bad)
neg
xrelease
jb
fld
sti
dec
add
jnp
dec
push
mov
push
sub
cld
fist
pop
clc
pushf
into
mov
or
dec
ret
mov
xchg
fstp
mov
adc
test
movs
hlt
in
inc
gs
stc
push
mov
out
xchg
pop
cmp
setp
dec
dec
adc
jp
aas
xchg
or
stos
fidiv
or
gs
lock
in
test
movs
sub
jo
dec
popf
adc
dec
xchg
sbb
mov
ja
sub
cmp
stc
and
pop
sub
aad
add
add
imul
push
test
imul
and
mov
cmp
mov
(bad)
cmps
adc
popf
sub
popa
pop
cmp
cwde
jl
addr16
js
add
pop
sbb
cs
shl
mov
adc
dec
mov
mov
fadd
mov
ror
jno
pop
jmp
xchg
imul
jp
test
jg
pop
cli
lods
lods
xchg
int
sbb
lods
mov
fisttp
cmp
loopne
lock
sbb
dec
mov
adc
jb
jmp
popa
inc
test
test
mov
mov
mov
cmps
(bad)
sub
out
in
pop
push
mov
add
shl
dec
jp
push
in
popa
pusha
sub
adc
sbb
repz
ins
push
cmp
mov
dec
shr
loop
adc
es
movs
and
mov
sub
scas
out
sub
fdiv
xor
and
lahf
jmp
jecxz
push
mov
pop
mov
mov
jl
test
dec
pop
jns
adc
sahf
xor
mov
or
push
jmp
xor
xchg
dec
bound
sub
xor
dec
cmps
movs
shl
call
xchg
mov
iret
push
mov
dec
lock
pusha
js
hlt
test
imul
test
jae
xor
imul
push
jmp
repz
xchg
es
sbb
push
imul
xchg
pop
xchg
lea
dec
shl
xchg
xchg
cmc
lock
movs
cmp
(bad)
mov
push
repnz
push
into
pop
aaa
mov
in
movs
and
pop
retf
fs
pushf
and
int
dec
mov
int
mov
in
pop
jae
jle
xchg
outs
lods
pause
and
lds
mov
ja
dec
sub
fiadd
stos
cmps
xchg
adc
mov
xor
cmps
pop
add
push
pop
push
popa
cmp
pop
dec
add
sti
les
xor
mov
pop
pop
lods
or
cdq
xchg
adc
mov
or
lahf
push
sbb
repz
inc
int3
push
adc
daa
out
sub
xor
pop
cmp
push
adc
leave
push
out
shr
jbe
sub
in
cmp
ja
push
test
ficom
xor
lods
adc
(bad)
cmp
xchg
mov
xchg
aam
fisttp
sbb
xor
add
sbb
mov
cmp
mov
inc
ror
nop
sbb
sbb
sub
aad
jp
in
(bad)
and
out
adc
lock
mov
add
repnz
jecxz
jbe
add
fwait
js
out
mov
adc
in
jmp
add
or
mov
add
aas
and
mov
mov
movs
sub
push
dec
fsub
mov
mov
pushf
(bad)
test
ss
in
lods
fs
adc
(bad)
push
mov
mov
mov
mov
mov
xchg
daa
inc
retf
pop
mov
cmp
push
stos
lods
sbb
aad
movs
mov
lea
sbb
dec
mov
fisttp
(bad)
jmp
jp
mov
inc
das
fneni(8087
inc
mov
xor
mov
aas
push
leave
mov
ss
cmp
les
cwde
stos
les
enter
xchg
xchg
dec
xor
add
xor
je
stos
mov
cmp
add
dec
cld
int
test
ror
xor
push
mov
ins
dec
mov
pop
pop
call
aaa
or
ror
mov
pusha
push
push
adc
imul
cmp
hlt
dec
repnz
pop
retf
out
or
jo
cmp
sub
pop
xor
mov
shr
lahf
dec
ret
in
and
and
cmc
mov
cld
hlt
jmp
rcr
jbe
push
stos
inc
push
lds
es
lods
xor
mov
mov
pop
call
std
movs
ds
jp
ins
cli
adc
nop
(bad)
inc
jo
mov
adc
inc
mov
(bad)
imul
mov
ret
mov
jge
sub
aad
dec
jmp
ror
pop
retf
mov
das
fld
out
out
push
dec
jnp
mov
push
push
(bad)
push
ins
or
loopne
leave
and
pop
jb
repz
push
mov
cmc
dec
ja
cmps
push
push
jecxz
dec
jp
jae
rol
call
and
adc
aaa
pushf
or
push
sub
daa
or
ins
popa
loop
xor
test
ret
mov
adc
sub
test
fcmovu
ins
jg
jge
dec
mov
iret
jge
fs
(bad)
scas
jmp
inc
enter
popf
in
hlt
dec
push
jg
push
inc
fcomp
mov
mov
push
loop
push
mov
iret
mov
scas
xor
imul
lock
fwait
rol
mov
nop
out
mov
sub
leave
scas
mov
jne
das
(bad)
push
sub
xchg
stos
push
lahf
call
jmp
push
test
xor
jl
sahf
loope
enter
cld
or
movs
xor
jns
or
loop
(bad)
div
ficom
rol
cld
fs
pop
pop
mov
rol
imul
das
sub
or
arpl
mov
jge
inc
cmp
push
cli
dec
xchg
add
repz
adc
xor
ins
test
icebp
shl
push
fsubr
adc
push
cmp
pop
nop
sbb
(bad)
fiadd
lods
fild
pop
xchg
imul
push
out
fisttp
ficomp
push
inc
mov
(bad)
cwde
outs
hlt
jbe
sahf
out
outs
nop
fmul
(bad)
arpl
inc
lahf
push
pop
jnp
mov
retf
nop
mov
add
jmp
fnstenv
mov
ss
and
sub
dec
xor
cmps
lods
jae
mov
jmp
jno
ins
jmp
dec
sub
inc
mov
lahf
fwait
sbb
stc
inc
inc
mov
jge
xchg
(bad)
sti
retf
(bad)
sub
xchg
pusha
and
das
ds
paddusw
adc
std
lods
jp
push
ret
cmp
fs
cld
in
inc
xchg
fnsave
sahf
mov
test
scas
mov
mov
mov
or
mov
mov
cld
add
sbb
icebp
les
xor
push
cmp
pushw
mov
loopne
add
mov
call
loope
cwde
xor
rcl
stc
xchg
cs
dec
mov
adc
jns
push
dec
sbb
jae
jecxz
ins
inc
jmp
ins
xchg
xchg
mov
inc
sahf
jo
sbb
and
xchg
jo
adc
and
out
pop
push
dec
test
imul
cmp
adc
cmp
mov
mov
scas
(bad)
dec
jl
push
test
push
mov
fwait
jmp
cmps
xlat
and
push
mov
push
adc
loop
outs
mov
or
push
push
adc
(bad)
sub
out
pop
xor
jmp
mov
mov
dec
xlat
adc
jge
ret
loope
push
int3
repnz
xchg
sub
sbb
(bad)
clc
int3
aaa
test
inc
mov
(bad)
mov
mov
xor
add
push
into
mov
mov
and
sahf
test
mov
je
jb
stos
sbb
pop
push
fwait
cld
or
and
retf
icebp
and
imul
pop
pop
and
push
push
lahf
mov
jb
cs
test
jp
xchg
or
inc
retf
in
nop
mov
clc
xchg
fcom
ins
js
into
cmp
loope
push
clc
mov
loop
dec
dec
sub
mov
inc
add
xlat
sub
sub
adc
push
inc
and
pop
jbe
xchg
pop
xchg
aas
jb
xor
push
xchg
push
xchg
lahf
sub
repnz
xchg
fnstcw
sbb
add
inc
push
(bad)
rcl
cmc
inc
loopne
cmc
mul
(bad)
mov
push
fdivr
lods
call
push
mov
pop
inc
js
mov
push
pop
scas
inc
xchg
in
xor
xchg
out
popa
repnz
das
inc
push
mov
fcom
xchg
xchg
cs
and
sub
call
aad
mov
add
retf
into
push
and
and
mov
push
pop
adc
jno
push
iret
lds
xor
xchg
jb
inc
sbb
and
outs
xchg
mov
fwait
push
lahf
dec
aad
sub
cmp
pop
sbb
add
mul
jae
dec
(bad)
call
xchg
stos
add
and
cmp
push
pop
(bad)
leave
adc
push
mov
mov
fwait
and
jne
inc
lock
(bad)
mov
jmp
idiv
cmps
sar
cmps
cmp
xor
xor
cmp
retf
jbe
jmp
push
push
scas
daa
xchg
call
lds
xor
test
mov
dec
add
mov
lds
push
aaa
adc
cmp
mov
movs
popa
push
inc
repz
jp
inc
pop
push
lods
test
or
cld
mov
dec
(bad)
sahf
cld
pop
push
ss
or
arpl
mov
or
aad
(bad)
out
dec
pop
push
push
inc
push
cli
adc
aaa
xchg
int3
inc
fild
inc
retf
xor
imul
and
sbb
shl
cmp
fisttp
enter
push
loope
inc
cwde
jmp
adc
test
jo
jmp
jno
push
or
mov
jmp
jnp
cmc
push
jl
mov
mov
sbb
push
inc
push
push
jmp
mul
mov
out
jg
mov
fisttp
std
gs
or
cli
ret
jno
pushf
push
rcl
mov
jge
xor
jecxz
icebp
fld
daa
pushf
mov
sbb
(bad)
mov
or
out
je
cmp
sbb
repz
push
call
icebp
(bad)
imul
adc
push
push
fadd
jne
retf
rol
scas
aam
mov
dec
inc
rcr
mov
or
mov
cli
aad
jmp
sbb
adc
xor
bound
stc
in
ins
fsubr
and
dec
pop
loop
test
aas
mov
cld
push
push
adc
popa
into
es
adc
int
enter
aad
mov
cmp
sbb
xchg
or
inc
xchg
jmp
pop
and
(bad)
in
mov
shl
xchg
ret
lds
iret
imul
sbb
fwait
mov
cld
cmp
(bad)
(bad)
scas
je
out
xchg
or
out
retf
sbb
addr16
pop
outs
icebp
mov
ret
mov
rcl
enter
sub
fild
jo
mov
dec
mov
lahf
cmp
xor
(bad)
inc
addr16
jge
(bad)
mov
jno
adc
pop
addr16
les
xchg
xor
push
out
xchg
lods
popa
lods
fbstp
xchg
and
out
pusha
mov
lds
jns
ss
push
sbb
mov
xchg
dec
test
xor
pop
popa
xchg
ror
or
pushf
sbb
inc
cmp
fldcw
push
cmp
test
and
rcl
xchg
stc
lods
jne
adc
lock
ss
push
(bad)
jo
pop
shl
int3
add
dec
shl
sub
xchg
push
sub
cmps
cli
stos
les
int3
addr16
ss
fild
lods
fs
adc
push
pop
jp
aas
jns
outs
test
xor
jle
xchg
adc
pop
adc
cmp
movs
sti
mov
ss
ficom
mov
rcl
out
sar
push
lods
daa
push
or
mov
stc
test
pop
cmp
xor
jmp
xchg
sub
sbb
call
stos
sbb
(bad)
dec
dec
sbb
adc
adc
pop
dec
inc
shl
xor
je
repnz
sti
inc
mov
shr
xor
stc
cmp
imul
data16
inc
and
cmp
mov
push
nop
push
add
std
dec
int3
arpl
dec
pop
fs
(bad)
pop
xlat
fsub
and
out
mov
outs
add
mov
sahf
int3
ret
cld
je
popf
push
mov
fnstenv
leave
and
sbb
jbe
pop
sbb
scas
retf
sti
add
aam
stos
cmps
mov
jle
imul
in
retf
dec
popf
and
arpl
dec
scas
sub
xchg
and
mov
test
push
hlt
inc
xchg
adc
scas
cmc
xor
mov
daa
xor
fwait
cmc
test
mov
mov
sub
xor
(bad)
mov
jge
or
and
mov
mov
or
test
aam
div
xor
test
(bad)
dec
in
adc
hlt
mov
adc
(bad)
(bad)
clc
xor
iret
shr
int3
shl
sub
adc
mov
int3
cmp
xchg
inc
mov
xor
mov
and
xchg
and
xchg
pusha
jo
mov
sub
mov
retf
fcmovnu
hlt
sub
es
mov
push
icebp
push
mov
rol
push
xor
ror
popf
dec
cdq
jae
jne
lock
or
pop
loope
js
xchg
out
sub
and
fdivr
ja
mov
sub
repnz
ret
rcr
movs
popa
daa
pushf
cmp
jmp
add
inc
adc
jl
outs
xchg
mov
pop
and
mov
add
push
fyl2x
or
mov
mov
or
xchg
mov
sahf
inc
cdq
add
leave
inc
inc
loope
in
inc
inc
and
je
lock
lds
sbb
sub
mov
ficomp
sti
push
aam
mov
jl
inc
out
test
aam
arpl
ret
mov
pushf
and
scas
inc
sahf
in
jecxz
daa
mov
movs
jnp
pop
(bad)
int
lods
popf
arpl
rcl
mov
sbb
xlat
fistp
fld
fcom
jb
(bad)
lea
ror
pop
push
mov
rol
sbb
fnstsw
push
lock
sub
sbb
cmp
push
mov
mov
dec
or
mov
lock
loope
sub
xchg
stc
add
out
and
mov
sbb
lods
cwde
aad
enter
mov
sti
inc
add
mov
loop
push
(bad)
fsubr
jmp
mov
fild
cmp
jmp
aam
inc
xchg
jecxz
sub
in
sub
jbe
xor
inc
mov
cmp
xchg
call
sub
mov
cmps
add
add
arpl
mov
imul
inc
outs
and
movs
gs
sub
cmps
pop
push
jge
add
mov
xchg
add
sub
movs
addr16
pop
adc
mov
pop
repnz
fisub
movs
add
or
pop
sub
sbb
xchg
(bad)
daa
dec
in
jmp
mov
jmp
(bad)
daa
in
jp
mov
iret
arpl
mov
ror
(bad)
outs
out
mov
popa
jl
hlt
fistp
jle
cmp
dec
pop
sbb
test
movs
nop
and
add
and
(bad)
mov
fdivr
push
inc
xor
mov
test
mov
sti
push
icebp
cmc
repz
out
xchg
jecxz
(bad)
push
or
pushf
add
es
cld
std
mov
ja
std
retf
dec
jp
sub
cmp
sahf
adc
mov
fild
add
jecxz
fist
ror
(bad)
sbb
cmp
xor
inc
inc
mov
pop
aam
cli
daa
or
call
inc
pop
rcr
push
xor
mov
retf
iret
in
adc
jns
xchg
mov
xbegin
scas
scas
pop
inc
adc
cmp
mov
mov
jns
jecxz
jecxz
dec
mov
and
mov
mov
enter
mov
stos
xchg
adc
outs
sti
rcl
pusha
std
dec
(bad)
iret
cmp
rcr
push
xchg
push
mov
int3
mov
or
test
shl
cld
push
aas
mov
shr
dec
cmp
das
cmps
adc
sub
aas
jmp
clc
add
add
add
mov
into
sub
fst
sbb
movs
mov
int3
push
sub
xlat
jle
and
aam
clc
mov
and
mov
push
dec
(bad)
pop
mov
rcl
test
out
xchg
pop
pop
mov
sar
mov
scas
std
dec
or
fcmove
pop
test
dec
xlat
sub
out
or
mov
cmc
mov
nop
retf
cdq
les
cmp
ja
pop
jne
pop
fs
(bad)
mov
ins
in
mov
mov
imul
sbb
xor
sub
cmp
add
inc
jp
out
dec
daa
xor
push
test
pusha
push
sti
or
push
mov
push
sub
das
add
mov
in
sbb
sbb
fidivr
adc
jb
jbe
lods
xchg
jbe
or
inc
(bad)
(bad)
iret
pop
cmc
xchg
jl
jbe
mov
jp
pop
xchg
sbb
mov
push
pusha
jl
or
mov
fucomip
dec
in
sbb
aam
les
mov
push
jl
iret
jne
dec
repz
sub
das
or
(bad)
push
mov
outs
test
das
mov
nop
push
(bad)
data16
scas
sub
test
das
iret
adc
imul
and
mov
popw
aam
test
xchg
std
mov
ja
fwait
inc
sbb
(bad)
inc
(bad)
arpl
inc
cmc
dec
movs
xor
imul
popf
and
mov
cmp
ret
test
or
jno
mov
add
cmp
outs
mov
sar
int
pop
in
ds
inc
jecxz
sahf
xor
dec
mov
pop
and
sti
repz
fs
sub
int3
push
mov
retf
mov
pop
cmp
jmp
aad
mov
call
add
iret
adc
pusha
cld
(bad)
aas
retf
sub
loope
push
sbb
or
push
pop
shl
push
cmp
or
or
jecxz
pop
add
push
cmc
cmp
pop
add
push
bts
dec
(bad)
shr
lods
pushf
push
xchg
add
(bad)
clc
pop
mov
or
ret
fadd
(bad)
repz
dec
dec
loopne
lahf
gs
sbb
xlat
push
bound
cmp
mov
cs
push
cmp
jbe
fs
jp
pop
pushf
pusha
mov
bound
call
scas
push
and
mov
mov
fcom
cwde
clc
mov
or
mov
(bad)
std
sahf
push
lods
pop
sar
mov
push
call
pop
lahf
loop
gs
adc
inc
add
mov
repz
mov
out
es
in
stos
xlat
dec
fiadd
mov
jmp
add
clc
fsubr
mov
pop
xchg
adc
push
inc
mov
shl
or
jp
jmp
retf
jl
fist
jmp
addr16
call
retf
loope
xor
sub
shl
jl
call
mov
mov
stos
mul
sbb
ret
retf
cmc
jl
add
or
cmp
mov
ror
stos
push
lea
sub
xor
xor
jb
dec
inc
aam
xor
retf
pop
ret
ins
ss
xor
fsub
dec
les
mov
or
(bad)
cwde
push
adc
imul
retf
xor
fnsave
retf
pop
sub
mov
sbb
jg
push
xchg
xor
xor
out
sbb
popf
cmp
cmc
fild
pop
pop
and
mov
mov
ret
shr
mov
into
fisub
mov
dec
mov
jo
pop
mov
lods
jl
ret
inc
lds
adc
sbb
dec
pop
push
cmps
jle
cmp
pop
pop
icebp
cld
ret
push
inc
pusha
jo
xor
dec
fld
fstp
lods
sbb
cmp
inc
int
(bad)
fidiv
pop
shl
fnstcw
daa
adc
xor
lds
dec
int3
dec
stc
ins
sbb
push
das
adc
mov
cmp
jbe
popf
lock
lds
mov
dec
add
mov
ret
test
push
fstp
outs
add
sub
and
gs
sahf
enter
fild
scas
adc
jno
mov
loop
shl
arpl
or
nop
stc
cmp
dec
(bad)
(bad)
ror
sbb
into
mov
sti
dec
pop
fiadd
rcr
cwde
ja
leave
nop
ror
jo
adc
push
cmp
sahf
pop
dec
(bad)
cld
cmp
daa
add
mov
and
xchg
mov
call
add
in
push
packssdw
test
push
jg
sbb
xor
sbb
rcr
repnz
adc
and
and
push
jno
retf
sahf
test
sbb
inc
rcl
xchg
lods
mov
ret
sbb
js
leave
leave
push
test
fsub
lods
adc
sub
mov
leave
mul
leave
aaa
lds
repnz
xchg
std
pop
pop
inc
ss
add
inc
jge
push
shrd
inc
in
push
cmp
cmp
test
jb
js
(bad)
call
jle
test
jmp
add
gs
fsub
mov
inc
cmp
scas
mov
pushf
popa
add
xor
shl
xor
sub
cmp
mov
sbb
or
ficomp
inc
push
mov
add
xchg
hlt
in
jnp
dec
imul
sti
or
push
dec
inc
jae
adc
ja
and
mov
push
push
bound
(bad)
cmp
adc
pop
lods
sti
push
sti
push
jmp
add
sahf
sub
add
push
fnsave
mov
ret
and
pop
pusha
daa
dec
sbb
pop
rcl
add
in
ficom
jge
mov
stos
fs
jno
jmp
shr
stos
pop
loope
xchg
add
inc
stc
sub
inc
mov
retf
loop
fsubr
xlat
je
or
push
les
push
aad
sub
mov
stos
loop
movs
push
test
sub
loop
jne
loop
and
scas
cs
xor
iret
inc
or
lock
push
es
outs
adc
(bad)
addr16
and
shl
jecxz
push
mov
popf
sbb
inc
push
sub
mov
outs
sbb
loopne
shl
inc
and
fld
add
xchg
ins
outs
add
ficomp
adc
sti
jne
or
jl
inc
adc
nop
pop
popa
cmp
pop
in
push
pop
jge
neg
xchg
pop
aas
cmp
mov
add
or
adc
mov
popa
and
cs
adc
mov
cmps
lods
push
pop
(bad)
(bad)
mov
jns
fwait
rcl
xor
pop
xchg
mov
and
sbb
sub
push
ret
loopne
cwde
adc
cli
repz
push
pop
sar
mov
mov
pop
cmps
lea
loop
mov
cmp
mov
ds
popf
jnp
xchg
push
push
scas
repz
pushf
std
ret
sbb
xor
dec
loop
fild
xor
pop
pusha
das
jb
adc
sbb
popf
xor
cmp
(bad)
mov
mov
add
rol
jno
sti
inc
push
cmps
pusha
pushw
and
ret
cs
or
fnstcw
inc
ficomp
cmc
mov
inc
sbb
mov
neg
jmp
ins
dec
fs
movs
cmp
push
and
jmp
stc
ret
mov
jg
sbb
xchg
call
(bad)
cmc
push
cwde
clc
and
xchg
push
lahf
mov
test
and
hlt
and
ds
or
mov
loope
inc
jecxz
(bad)
pop
jp
lock
dec
jae
add
sub
mov
imul
sbb
push
inc
jne
je
pop
(bad)
repz
adc
mov
cmp
add
jmp
xor
jp
test
cld
jbe
jbe
add
push
cld
and
sbb
outs
arpl
sub
stc
movs
push
sbb
jns
rol
add
push
mov
sbb
push
fild
lods
imul
xlat
push
adc
cmp
aad
cmp
jb
add
mov
aas
jg
or
iret
aad
dec
std
lock
addr16
imul
lock
mov
lahf
dec
sub
fnsave
out
ss
leave
nop
mov
or
sbb
rcl
and
hlt
add
mov
cli
add
adc
cli
ins
cmp
dec
jne
mov
pop
sub
adc
icebp
mov
cmp
ja
jle
or
int3
xor
push
lock
push
fcom
jl
push
arpl
out
xchg
(bad)
cmps
(bad)
jo
sub
cld
xor
or
(bad)
or
setg
adc
inc
retf
sub
data16
(bad)
sub
mov
sub
inc
icebp
pop
add
lods
ja
jp
dec
mov
sbb
or
sar
cmps
mov
repz
pop
xor
xchg
mov
mov
mov
or
les
mov
or
ss
jns
mov
outs
sub
and
sbb
inc
jbe
outs
out
mov
sub
sbb
push
call
jne
in
cmps
xor
dec
outs
and
push
movs
dec
and
push
or
fistp
jbe
jmp
mov
xchg
add
outs
jae
add
dec
call
pop
cmps
loopne
cli
ficom
adc
sti
xor
pushf
mov
jmp
in
ins
mov
xor
stos
lock
pop
aam
call
loop
sbb
dec
pop
call
xchg
and
in
mov
add
xor
leave
pop
push
loop
xor
sub
adc
fadd
xchg
adc
or
push
in
mov
int3
cmp
cmp
dec
mov
call
arpl
mov
es
(bad)
fisub
mov
dec
ret
mov
out
lods
test
inc
addr16
adc
sub
mov
clc
pop
cmp
cmp
scas
ds
stos
(bad)
not
hlt
cs
pop
sti
add
jb
inc
cmc
push
adc
mov
stos
dec
retf
hlt
jmp
add
cwde
jle
xchg
adc
mov
mov
sbb
xchg
push
addr16
(bad)
cld
sub
lods
outs
fisubr
xor
mov
inc
push
add
ins
mov
sahf
cwde
pusha
jns
stc
das
mov
inc
(bad)
or
enter
(bad)
in
mov
cwde
jle
adc
ficom
addr16
loopne
stc
xchg
mov
cmp
mov
inc
test
loope
pop
dec
aas
popf
(bad)
xchg
mov
loop
out
ins
and
test
adc
dec
outs
movs
in
inc
stos
adc
mov
cmps
shl
mov
imul
push
fs
test
or
inc
jbe
mov
mov
nop
cmp
push
and
out
inc
scas
std
lods
jge
bound
cmp
dec
mov
sub
int
mov
sbb
inc
dec
or
sub
ja
jle
xchg
repz
hlt
dec
sbb
or
xchg
inc
out
inc
dec
dec
pop
xlat
xchg
mov
and
test
ins
retf
sahf
ret
stos
out
test
test
xchg
lods
pop
pushf
mov
sub
aas
shr
and
cmp
ficom
loop
sbb
push
rcl
in
cmp
mov
mov
mov
mov
(bad)
(bad)
popf
and
test
retf
icebp
adc
mov
adc
push
sbb
pop
lock
out
jne
(bad)
sahf
nop
mov
add
stc
mov
adc
and
mov
xor
jg
lods
xor
mov
fs
fcomp
shl
xlat
push
mov
imul
adc
add
(bad)
mov
push
je
ret
mov
aam
xor
and
pop
cmps
cmc
dec
ss
cld
and
sub
add
or
mov
(bad)
mov
(bad)
(bad)
cld
push
cmps
movs
je
xchg
jp
out
add
stos
sbb
jns
push
das
test
push
xchg
mov
add
dec
adc
sti
mov
mov
xor
repz
out
jbe
adc
(bad)
int
out
pop
push
dec
int
dec
push
cmps
push
cmps
sbb
dec
xchg
nop
push
mov
mov
cmp
dec
mov
xchg
test
ds
repnz
in
mov
mov
nop
(bad)
inc
clc
mov
pop
xchg
sar
bound
imul
adc
jbe
cli
out
jnp
cmc
aam
mov
sub
inc
pop
jmp
ja
pop
or
inc
gs
loop
imul
fdivr
dec
or
pop
sbb
rcl
add
xlat
fisubr
mov
sbb
jg
jmp
mov
inc
ret
outs
mov
out
and
mov
popa
ret
mov
mov
add
lahf
pop
jg
int
dec
push
adc
retf
mov
cmps
test
push
arpl
pop
push
pop
ss
pop
popa
or
ins
push
frstor
jb
jmp
(bad)
xchg
mov
test
sub
lock
push
mov
adc
mov
cli
add
aam
push
mov
lds
sahf
sub
shl
mov
sbb
retf
mov
mov
sbb
jmp
or
inc
js
arpl
push
aad
sbb
adc
pop
and
mov
cmps
mov
movd
in
call
or
add
iret
ficom
add
dec
bound
add
mov
cmp
(bad)
cdq
cld
xchg
test
or
shr
or
or
mov
test
mov
inc
test
(bad)
aad
rcr
pand
repnz
clc
imul
jns
mov
jnp
sbb
add
in
imul
pop
repnz
lods
nop
cmp
adc
arpl
push
dec
fbstp
mov
jp
dec
add
xchg
cld
pop
cmp
sub
fistp
shl
popa
fsub
adc
sub
add
jl
ds
xor
cmp
mov
sbb
sub
push
ss
and
dec
fist
jo
pushf
mov
push
ins
xchg
mov
sbb
dec
adc
mov
mov
in
xor
xchg
rcr
inc
aam
nop
dec
push
retf
lds
in
hlt
out
cmp
push
ds
ins
imul
les
adc
pop
sar
scas
mov
sahf
test
leave
push
dec
mov
lods
mov
stos
test
out
push
fdivr
clc
xchg
imul
mov
sbb
int
mov
and
shr
or
retf
mov
xchg
fdiv
repnz
inc
or
lahf
lock
or
and
xchg
test
mov
popf
cdq
jo
push
push
sub
push
sub
fisub
mov
loopne
out
sbb
or
pusha
call
ins
dec
cmp
lods
out
cld
mov
sub
int3
and
pop
fld
fstp
sbb
out
daa
inc
adc
cmps
cmp
cwde
and
mov
pop
lods
rcr
scas
in
pop
lds
fcomp
xor
(bad)
adc
mov
ja
std
aad
cli
xchg
pop
cmp
fmul
ins
out
push
call
jnp
dec
add
add
inc
sbb
adc
and
xor
pushf
icebp
sbb
xchg
ins
into
leave
(bad)
xchg
mov
push
add
sahf
std
sub
ja
inc
mov
dec
cld
sbb
lea
add
pusha
pop
cli
rol
xor
imul
fs
fcmovnb
retf
xchg
and
sahf
add
mov
xor
sub
xchg
pop
daa
inc
pop
fisubr
mov
mov
cmc
lods
rcr
mov
add
dec
add
fld
or
dec
cmp
adc
loop
dec
add
shr
push
pop
je
sub
jp
iret
cmps
and
pop
clc
sbb
in
int3
push
test
in
sub
inc
or
and
pop
lock
and
gs
jnp
mov
mov
in
mov
fcomip
loopne
cmp
retf
and
mov
dec
xor
(bad)
outs
cmp
das
mov
push
mov
pop
cld
push
test
sub
sbb
ins
(bad)
add
cmps
jb
mov
les
cmp
push
dec
cli
aas
or
dec
out
icebp
ja
push
popf
movs
jl
addr16
dec
sbb
sbb
mov
retf
rcl
mov
inc
int3
sbb
mov
xor
sub
or
outs
mov
(bad)
jmp
add
retf
sbb
xor
in
mov
enter
push
add
mov
xor
add
xor
or
movs
imul
leave
call
loope
ins
inc
pusha
rcl
gs
dec
mov
cmp
pop
adc
scas
div
dec
shl
out
jmp
xor
jo
xor
sti
push
and
mov
adc
outs
mov
pop
(bad)
sahf
xchg
inc
cdq
int3
sbb
add
xor
or
aaa
and
aad
mov
cld
and
dec
call
jbe
dec
mov
scas
call
cmp
xor
cmp
loop
xchg
dec
pop
jge
fiadd
xchg
inc
sahf
pop
and
inc
test
test
sbb
xor
jo
mov
(bad)
cmc
push
mov
popf
hlt
je
jnp
add
jbe
and
or
ins
nop
sub
xchg
retf
enter
jmp
mov
mov
mov
dec
hlt
cwde
jmp
nop
add
pop
iret
ins
daa
mov
test
adc
div
mov
sub
mov
clc
pop
shl
mov
pop
pop
lds
lahf
dec
sbb
into
push
xchg
popf
lds
sub
test
and
adc
cld
mov
push
pop
xor
mov
mov
jmp
das
jle
aam
and
cdq
paddsb
or
sar
les
jbe
not
lds
ins
pop
cmp
add
cld
cmps
(bad)
std
push
gs
sbb
popf
sub
add
popa
test
push
cmps
loopne
lock
mov
sub
dec
mov
cdq
add
(bad)
sub
cmps
ret
daa
or
scas
int
aam
mov
fst
mov
and
(bad)
mov
mov
inc
mov
clc
dec
fisubr
lock
pop
test
outs
mov
jno
imul
outs
sub
fadd
adc
mov
fwait
retf
push
inc
loop
sahf
scas
rol
outs
pop
mov
pop
in
or
push
rcr
cmp
xchg
cmp
retf
aaa
push
test
mov
aas
fwait
test
cmp
sbb
jns
adc
mov
jne
inc
add
test
jns
lea
pop
mov
loop
pop
mov
shl
hlt
fisub
inc
add
jno
jnp
xor
mov
gs
xchg
pop
adc
(bad)
xchg
mov
push
(bad)
pop
stc
jns
jmp
push
es
mov
jnp
mov
push
rcl
push
mov
xor
mov
pop
cmps
fistp
out
leave
xchg
mov
mov
xchg
jge
sbb
jmp
mov
mov
pop
cmp
xor
push
fdivr
add
fmul
adc
push
xor
(bad)
shl
sti
rcr
xchg
add
stos
mov
pop
xor
ret
xchg
mov
xor
je
and
iret
gs
pop
fidiv
mov
pop
(bad)
icebp
jno
clc
popa
dec
retf
pop
stc
ror
stc
pop
aad
pop
cdq
test
dec
sub
pop
or
ret
(bad)
test
inc
std
jecxz
popa
inc
bound
add
je
scas
lahf
das
bound
cmp
jb
mov
retf
mov
xchg
mov
out
mov
(bad)
push
in
test
in
cwde
aad
jno
cmp
pop
dec
fwait
lods
push
lds
pusha
push
stos
icebp
sar
dec
out
dec
icebp
jmp
out
jge
jle
ret
fldcw
sti
ins
and
mov
push
sub
or
push
sub
in
xor
mov
or
(bad)
hlt
sti
inc
dec
std
mov
cmp
iret
and
mov
jne
iret
pop
ins
sti
std
sub
sbb
inc
and
pop
xor
or
loope
cwde
int
add
aaa
sub
mov
ins
hlt
mov
lea
stos
jns
out
dec
ja
ret
pmaxub
sar
dec
aas
and
data16
jnp
(bad)
cmc
or
mov
into
mov
lahf
test
fild
dec
aad
pop
imul
xchg
dec
test
or
or
mov
lods
icebp
cmc
das
add
push
sub
mov
ror
sub
ins
jl
call
mov
mov
sub
jmp
dec
mov
jmp
sub
in
shr
lds
cmp
jno
mov
in
xchg
idiv
call
(bad)
es
addr16
push
imul
jp
pop
cmp
outs
(bad)
mov
push
cmps
stos
in
adc
and
cmp
scas
sti
retf
aam
js
iret
mov
popf
push
jecxz
dec
ja
adc
test
call
sti
mov
push
outs
jle
mov
pop
shl
fistp
fdiv
mov
shr
repz
mov
test
jo
push
add
in
sbb
icebp
adc
xor
mov
xchg
sbb
dec
jne
mov
ds
dec
leave
and
xlat
jmp
xlat
mov
pushf
and
in
inc
(bad)
loopne
push
mov
or
mov
cmps
arpl
(bad)
adc
push
inc
mov
and
or
sbb
retf
cmc
mov
lds
add
dec
hlt
es
aad
sub
outs
xor
cmp
xchg
int3
stos
jp
and
sub
push
cld
push
dec
add
push
js
push
push
cmp
(bad)
mov
arpl
dec
xor
xchg
cmps
push
fidiv
mov
outs
ja
cmc
in
lahf
jmp
mov
loope
popf
mov
cmps
xor
fs
bound
inc
cmp
or
jecxz
sbb
or
test
outs
sub
stos
adc
inc
js
xchg
jg
xchg
push
aad
test
add
pop
(bad)
pop
inc
stc
aas
ret
jns
repnz
add
or
out
pop
mov
xor
in
inc
mov
inc
push
xchg
xor
cmp
js
rcr
sbb
test
mov
popf
pop
popaw
test
mov
mov
mov
add
das
mov
lds
cdq
cmp
mov
xor
adc
loope
fdivr
mov
xor
pop
dec
addr16
and
in
push
cmp
lock
rcr
cli
scas
or
inc
xchg
or
mov
cmc
enter
popa
sub
stc
cmp
pop
xchg
inc
sub
popa
iret
adc
mov
cmp
in
pop
adc
inc
sbb
imul
add
pop
sbb
adc
outs
jmp
sub
fcmove
jge
nop
inc
xor
and
cmp
mov
sub
repz
aas
push
fsubr
sbb
pop
inc
sub
cld
jecxz
or
shl
xchg
clc
dec
xchg
dec
je
pusha
sub
mov
movs
xor
jbe
(bad)
push
(bad)
pop
popa
cmp
jb
sub
xchg
(bad)
neg
aad
jmp
out
int3
dec
mov
int
mov
pop
cmp
cmps
mov
les
imul
les
mov
test
fidivr
add
bound
nop
(bad)
cmps
outs
mov
cmp
bound
pop
sahf
mov
call
and
mov
push
ret
or
sub
lds
js
adc
cwde
mov
ja
jge
xchg
mov
addr16
xor
push
adc
push
call
and
pop
and
mov
jo
mov
div
test
mov
int
es
adc
mov
loope
das
pop
xor
sub
into
aaa
push
inc
pop
imul
mov
fld
(bad)
sbb
jo
cs
inc
fs
and
mov
mov
out
dec
cwde
or
lahf
jl
sbb
pop
dec
icebp
xchg
out
int3
push
adc
js
bound
retf
imul
ins
push
popa
cmc
pop
inc
add
sbb
mov
cwde
pop
lea
add
sub
dec
neg
stos
addr16
ret
push
mov
push
std
sahf
aaa
(bad)
movs
cdq
add
jmp
sahf
ins
pop
mul
jl
scas
push
stos
jg
cmps
jl
ds
movs
call
dec
movs
inc
fstp
fnsave
push
push
push
cmp
adc
mov
test
add
mov
sbb
and
add
dec
xor
xchg
leave
mov
lds
inc
inc
jns
cmp
aad
xchg
mov
scas
add
(bad)
stos
cmp
inc
mov
mov
pop
and
push
sti
fbstp
fdivr
ins
mov
into
ja
arpl
inc
push
jg
inc
xor
push
(bad)
jle
sub
cmps
je
adc
jae
add
imul
test
cmp
pop
add
jne
loope
test
dec
or
out
mov
in
(bad)
mov
imul
mov
movs
(bad)
and
leave
int3
mov
xchg
xor
lock
ror
mov
push
imul
sub
dec
test
daa
retf
inc
mov
mov
xchg
inc
jle
or
mov
dec
xchg
ins
xchg
lods
jg
push
and
sub
int
push
fsub
dec
out
add
or
lods
cmps
out
dec
lahf
lock
xor
jb
push
mov
xor
xchg
aas
in
jge
inc
jne
mov
dec
aaa
loopne
jmp
ret
(bad)
jmp
sub
or
fisttp
jo
lahf
aad
xlat
movs
aas
fcom
data16
push
mov
inc
rcr
mov
repnz
imul
xor
sbb
pop
mov
aam
fs
sbb
movs
inc
mov
jmp
mov
lahf
ss
and
mov
cmps
loope
mov
movs
add
inc
push
in
inc
cmp
fidivr
mov
jl
(bad)
mov
push
sub
jno
sbb
dec
sbb
mov
mov
loop
and
shl
jns
call
stos
mov
jmp
test
dec
pop
mov
jbe
shr
ss
(bad)
scas
out
mov
lock
out
cmpps
dec
dec
ds
(bad)
stos
(bad)
adc
sub
xor
ret
jmp
cmp
xchg
pop
or
adc
dec
push
or
add
iret
xchg
dec
sub
sbb
and
mov
fisttp
push
stc
icebp
stos
sub
mov
jae
inc
jp
adc
sub
pusha
stc
adc
loopne
cwde
push
mov
bound
and
pop
adc
je
dec
scas
adc
jbe
lds
sbb
mov
mov
xchg
ins
xor
xlat
inc
cmp
ret
ins
push
js
ds
test
push
sbb
sub
mov
mov
jl
imul
repnz
sub
xor
ds
push
sub
pop
lds
fcomp
sbb
les
cs
sub
xor
xchg
rcl
repnz
xchg
aas
aaa
sbb
call
dec
je
in
jmp
iret
push
aaa
inc
movs
dec
inc
and
and
or
(bad)
rcl
push
or
xchg
pop
je
in
lea
sti
cmps
neg
mov
sbb
sbb
mov
sub
dec
cmp
imul
call
enter
int
pop
inc
mov
outs
jb
ins
mov
add
fs
call
mov
or
cmp
mov
inc
sbb
out
xchg
and
cs
adc
sub
dec
rol
nop
and
cmp
out
lds
loope
cmp
add
fsub
mov
xor
ficomp
xchg
into
jmp
das
je
dec
dec
pop
leavew
mov
mov
sbb
(bad)
out
mov
(bad)
jmp
push
xor
mov
sbb
mov
push
rcl
jecxz
sub
lds
jae
shl
xchg
or
add
fdiv
jmp
bound
in
(bad)
sub
lahf
stc
lods
mov
leave
not
xor
inc
sti
mov
shl
and
push
dec
dec
xchg
cmps
fsqrt
xor
pop
repnz
mov
repnz
pop
mov
push
jg
or
push
lock
jbe
sar
ins
jmp
or
or
out
repz
cmp
xor
push
sub
xchg
sub
retf
pop
outs
or
test
into
xor
div
iret
stos
(bad)
fsub
into
and
jo
mov
sbb
int3
loope
sar
ret
pushf
cdq
mov
popa
(bad)
cmp
cwde
sub
pop
dec
loop
jle
imul
test
mov
jp
push
inc
and
inc
(bad)
sub
ret
or
repnz
retf
inc
movs
xchg
int3
xchg
sbb
dec
xlat
ret
sub
xchg
(bad)
jl
jl
ja
ret
out
test
jne
out
frstor
xor
or
icebp
mov
stc
fild
cmp
sub
push
jg
pop
xor
ret
ins
shr
cmp
push
push
jmp
retf
adc
lahf
popf
xchg
cmp
lahf
add
push
ins
mov
test
fwait
mov
jae
loopne
movs
dec
loopne
ficom
jge
add
push
mov
inc
dec
push
pusha
frstor
sub
not
enter
movs
mov
cmp
dec
fimul
fs
or
ins
push
jne
psrlq
sub
jg
pop
pop
and
xchg
mov
fist
(bad)
pop
sbb
sub
xchg
test
aaa
fst
bound
jecxz
(bad)
sub
loope
pop
loope
(bad)
div
scas
mov
sbb
fimul
test
fst
push
xchg
js
sub
and
cmps
and
(bad)
popf
xor
ja
cmp
jbe
xor
loope
into
dec
sbb
pop
mov
fldenv
fucomi
and
lahf
push
xor
div
xchg
push
xchg
mul
test
and
xchg
pop
clc
aam
(bad)
out
icebp
mov
test
xchg
out
stos
cmp
mov
adc
add
dec
mov
fdivr
repz
mov
adc
pop
cmps
sub
or
add
mov
jge
sub
jl
xor
mov
push
dec
sahf
cmp
sti
fistp
jl
mov
sub
sar
cmps
loope
inc
iret
fs
outs
mov
mov
xorps
cdq
adc
shr
stos
out
repnz
test
add
xchg
dec
test
lahf
jl
leave
iret
mov
cli
jecxz
loopne
jo
imul
and
int
imul
jbe
out
add
mov
pop
(bad)
addr16
fst
sub
cs
outs
or
test
or
loop
adc
clc
jo
cmp
pop
and
mov
pavgb
xor
fucompp
lods
outs
adc
fdiv
mov
jmp
jge
jle
or
sub
sbb
dec
fxtract
xor
push
das
and
push
xor
pop
or
jmp
inc
mov
cmp
mov
xor
out
push
dec
gs
pop
adc
sbb
pop
gs
mov
cmc
sbb
inc
lods
(bad)
push
mov
dec
fsub
add
xchg
cld
outs
stos
mov
inc
adc
mov
jb
in
pop
mov
cmps
jp
sbb
outs
sbb
or
adc
inc
and
jmp
cmp
ret
inc
fwait
stc
fbstp
ret
cmovnp
mov
inc
call
adc
add
lahf
cmp
loope
inc
push
pop
fild
sbb
test
push
or
mov
out
in
retf
scas
lock
repnz
mov
imul
(bad)
add
dec
pop
dec
out
sbb
fxch
(bad)
inc
push
shl
pop
and
push
pop
sbb
lds
mov
adc
loop
out
jp
xor
aas
dec
pop
mov
out
mov
das
jmp
sbb
dec
dec
cmp
push
or
lea
popf
lahf
cmps
sbb
sar
add
cwde
scas
add
pop
rcr
jmp
int
imul
mov
and
jmp
inc
inc
mov
pop
xchg
push
out
cmp
adc
cmp
jnp
push
jg
rcl
pop
jl
mov
rcr
mov
jmp
add
push
adc
jne
mov
jl
repnz
bound
adc
jmp
retf
call
push
rol
jl
mov
hlt
or
repz
gs
xor
in
out
or
jb
scas
inc
mov
push
or
fist
test
pop
xor
cmc
sbb
cmp
outs
fadd
repnz
xchg
dec
dec
sub
fcmovne
test
imul
arpl
mov
cmp
or
fwait
arpl
sahf
cli
dec
jmp
enter
std
in
pushf
js
loope
(bad)
ins
xor
jmp
cmp
inc
(bad)
jnp
push
jle
push
aad
add
aas
movs
xchg
dec
sbb
je
out
(bad)
dec
xor
inc
aas
push
pop
pop
icebp
(bad)
imul
pop
mov
jns
pop
int3
sub
dec
mov
push
mov
dec
push
sub
aam
ins
cwde
imul
lods
popf
lea
mov
rcr
mov
cs
push
push
adc
pop
push
pop
pop
popf
out
gs
outs
ror
sti
dec
jle
jne
push
inc
inc
in
jmp
imul
and
js
jbe
retf
neg
or
dec
sub
cmp
sbb
out
pop
push
jp
test
add
mov
pop
hlt
retf
mov
in
arpl
or
and
les
sbb
xchg
jae
mov
scas
mov
mov
(bad)
retf
js
lds
scas
jl
cmc
mov
xor
nop
xchg
mov
inc
bnd
imul
int
lea
and
fisubr
ficomp
jecxz
mov
out
adc
mov
cmp
mov
dec
lods
adc
add
mov
mov
or
mov
jge
sbb
xor
daa
hlt
push
pop
jno
div
call
fimul
sti
jo
loope
out
sub
mov
movs
jo
inc
mov
loope
jp
std
sub
inc
mov
cmp
std
cmc
xchg
lods
mov
repz
sbb
int3
leave
outs
xchg
mov
mov
fld
dec
cmp
cdq
push
inc
repz
inc
cs
scas
into
repnz
mov
fistp
pop
ficomp
push
movs
(bad)
push
push
fs
cmp
mov
add
outs
jecxz
add
inc
mov
cmp
jae
(bad)
cmp
call
add
sbb
loopne
inc
push
pop
bound
mov
mov
push
hlt
pop
pop
test
movs
xor
call
sbb
push
xchg
xchg
mov
mov
mov
adc
mov
xchg
mov
pop
dec
push
or
mov
enter
pusha
add
mov
and
mov
scas
and
rol
stc
mov
stos
or
mov
sti
pop
fisubr
in
enter
outs
mov
gs
mov
push
and
popf
inc
sub
and
push
xchg
sub
xor
bound
mov
into
xor
in
sub
add
es
sbb
add
pusha
mov
xor
fistp
add
aaa
xor
addr16
xchg
repz
into
mov
xor
aas
adc
clc
lods
dec
in
call
xor
cwde
ret
nop
mov
movs
inc
push
dec
dec
pop
push
sbb
scas
push
xchg
and
pusha
cmp
pop
dec
sub
(bad)
xchg
dec
icebp
mov
leave
mov
jae
popa
mov
rol
xchg
mov
xchg
mov
add
mov
test
pop
xchg
pop
sysexit
(bad)
xchg
push
out
lods
stos
ins
mov
fsubr
adc
das
mov
movs
xchg
add
mov
xor
fninit
mov
and
cmps
xchg
xchg
stc
test
out
or
add
lea
or
cmp
fild
mov
test
dec
repnz
xchg
stos
leave
inc
xlat
mov
(bad)
int
mov
sbb
fdivr
jae
lods
pop
dec
xchg
mov
adc
dec
and
cs
imul
jle
pop
push
in
xchg
lahf
jb
dec
test
and
frstor
push
cld
pop
sbb
push
xor
mov
fdivp
(bad)
push
adc
sbb
or
adc
fidivr
hlt
das
or
mov
mov
stc
adc
ja
adc
das
push
pusha
push
inc
inc
mov
pop
mov
nop
pop
nop
sub
inc
xchg
jge
retf
jbe
mov
add
ficom
jmp
jno
cmp
cli
mov
dec
fneni(8087
mov
stc
ss
xchg
test
test
mov
xchg
sub
jb
outs
xchg
mov
(bad)
in
push
mov
mov
test
cmps
dec
sub
out
rcr
loope
dec
inc
push
ja
scas
in
movs
xor
dec
clc
jno
sbb
aam
ja
pusha
pop
inc
fmul
or
dec
cmp
jne
xor
xchg
sbb
mov
aas
out
popa
scas
inc
(bad)
in
xor
mov
adc
call
test
jb
pop
mov
xchg
test
sub
rcr
or
(bad)
sar
out
pop
push
jecxz
pop
add
cmp
jne
add
imul
sub
and
ss
adc
push
xchg
mov
mov
pop
nop
and
cld
imul
pop
mov
add
xor
and
push
clc
aas
scas
or
inc
cwde
aaa
xchg
sub
jne
mov
push
mov
sbb
rol
ss
xor
bnd
mov
sub
push
add
jbe
add
aaa
test
inc
xchg
adc
repnz
js
lods
xlat
xor
jno
outs
cmp
push
or
fisub
and
mov
je
push
out
xchg
xor
fild
mov
dec
jbe
(bad)
mov
repnz
mov
ret
pushf
js
push
sbb
and
iret
ins
dec
aam
pop
mov
(bad)
pusha
popf
js
iret
dec
mov
push
jle
add
mov
cmp
jo
dec
cmp
push
inc
pop
nop
mov
int3
xor
push
ja
pop
enter
lds
or
(bad)
test
jne
add
pop
xchg
push
adc
and
sub
dec
cld
out
dec
cmp
enter
add
push
xor
or
arpl
mov
add
push
and
inc
mov
sar
add
jbe
bound
inc
and
push
aam
or
pop
addr16
in
or
pop
xor
mov
sbb
lods
cmc
ds
sti
sub
gs
(bad)
jp
(bad)
or
mov
mov
mov
fistp
sbb
sar
das
pop
cld
xchg
sub
mov
call
paddq
cmp
mov
aam
mov
mov
cmps
sbb
les
mov
call
mov
pop
out
push
push
mov
push
sbb
ds
add
sub
pushf
out
clc
sar
cld
test
outs
mov
in
dec
inc
cmp
cwde
xchg
xchg
scas
xor
add
aad
lock
dec
outs
sbb
mov
(bad)
test
dec
inc
jno
fsubrp
xchg
adc
clc
push
pushf
mov
xchg
stc
push
aas
in
js
sub
retf
fadd
cli
jecxz
jmp
clc
ins
dec
repnz
(bad)
jmp
dec
dec
scas
retf
jle
pop
mov
cld
push
sub
mov
jl
sahf
jmp
sbb
in
test
cmps
dec
xchg
aad
and
sub
ror
call
jo
aaa
mov
call
mov
adc
fdivr
sub
test
xor
adc
ja
pop
inc
out
jg
xor
xchg
(bad)
scas
scas
sti
fadd
and
(bad)
es
cs
inc
int3
xchg
mov
pop
loop
sub
jp
mov
xchg
dec
cmp
enter
shl
mov
xchg
push
sub
pop
and
ret
popa
xlat
jmp
out
cmps
mov
and
ins
pusha
xor
jo
sbb
mov
xchg
adc
mov
mov
outs
ret
mov
pop
int3
ror
mov
inc
xchg
inc
nop
add
shl
push
lods
add
push
cmp
push
fist
shl
retf
loope
fild
test
pop
jge
cli
xor
xchg
clc
xchg
cmp
push
call
dec
and
push
push
(bad)
imul
scas
adc
sub
jmp
fild
aam
(bad)
jnp
psubusw
jo
mov
(bad)
mov
(bad)
xor
mov
je
pusha
and
nop
outs
sub
rcr
adc
inc
jnp
sbb
pop
add
dec
movs
adc
(bad)
push
cmp
fsub
ss
cld
cwde
jecxz
inc
jmp
add
ror
mov
cwde
sbb
cdq
daa
push
fbld
sbb
cmp
adc
cmp
pop
push
pop
sahf
mov
jo
stos
jge
imul
mov
sbb
data16
(bad)
xor
je
dec
dec
neg
rol
sub
mov
xlat
push
adc
or
sub
dec
pop
std
outs
jecxz
cmp
scas
mov
pop
hlt
cmp
sub
mov
xor
es
cmp
sub
xor
out
and
lahf
mov
add
and
pop
cmps
and
and
dec
arpl
adc
sti
jl
stos
dec
mov
push
push
inc
test
pushf
lahf
sbb
xor
movs
pushf
mov
mov
jb
mov
and
cmps
push
or
sbb
push
push
sub
jo
jb
call
cmps
test
add
mov
in
not
adc
jne
jae
fsubr
imul
loope
cwde
add
jle
mov
and
sub
push
movs
mov
jae
adc
sub
mov
add
push
mov
pop
or
lods
lahf
or
pop
or
fadd
arpl
sub
cmp
nop
lea
and
add
cmc
mov
out
aam
or
(bad)
aaa
add
(bad)
sbb
mov
xchg
sub
pusha
mov
cmp
fst
mov
push
mov
push
dec
sub
int3
(bad)
cmp
cmp
cmp
into
lods
arpl
in
xchg
jnp
jmp
xchg
test
les
out
cmp
pop
dec
dec
jo
push
dec
sahf
xor
fstp
retf
cdq
adc
and
es
out
sub
inc
inc
in
cmp
clc
xor
jmp
int3
fadd
sub
ror
adc
lods
lahf
jb
(bad)
repz
test
loop
jno
push
mov
jae
imul
push
mov
in
popf
stc
es
test
jnp
xchg
or
mov
lods
mov
sbb
test
out
inc
out
and
xor
jg
jp
ins
push
xchg
iret
sbb
ja
scas
xchg
movs
or
adc
cdq
in
xor
or
inc
iret
inc
inc
loope
pop
xor
test
shl
vgf2p8affineinvqb
dec
and
cmp
xor
leave
dec
push
ds
xor
hlt
sbb
je
nop
jnp
rcr
sub
out
loop
push
ins
fnstsw
push
jmp
imul
or
inc
mov
or
inc
fcomp
inc
dec
mov
add
xchg
pusha
and
mov
jp
(bad)
push
les
movzx
in
stc
pusha
cmovne
sub
or
dec
and
test
dec
pop
cmp
sub
push
rol
mov
js
addr16
test
scas
addr16
jg
ss
inc
call
out
pop
mov
jbe
mov
or
scas
scas
lods
int3
das
xor
aas
stc
xor
cwde
(bad)
mov
add
mov
push
jnp
es
test
enter
mov
not
es
hlt
mov
cmp
cld
cmp
mov
stos
mov
(bad)
xchg
mov
jge
(bad)
imul
xchg
cdq
jmp
test
jb
add
ret
pop
push
out
pop
arpl
clc
les
das
in
loopne
mov
add
es
loop
xor
xor
adc
es
sbb
fidiv
jl
movs
mov
adc
jl
jle
mov
hlt
jae
cmp
movs
imul
mov
adc
repnz
xchg
mov
inc
push
shl
mov
lock
je
xchg
test
stos
push
and
out
or
and
call
jg
pop
or
call
nop
je
pop
(bad)
call
test
fdiv
mov
fbstp
inc
xlat
sti
pop
pop
rcl
call
and
pop
dec
xchg
aaa
retf
mov
jno
mov
loope
mov
movs
push
mov
lea
jo
ins
loop
pushf
dec
pop
inc
xor
xchg
iret
mov
or
repz
sbb
pop
cmc
jge
adc
aad
mov
addr16
cmc
pop
das
push
mov
cdq
push
adc
lods
cmp
ror
cmp
loop
or
mov
mov
mov
dec
xor
add
test
adc
sbb
dec
sbb
arpl
push
push
(bad)
into
data16
pop
xchg
mov
inc
dec
jge
adc
mov
xchg
mov
mov
outs
add
pushw
stc
cmps
inc
inc
pop
test
cwde
adc
sbb
sbb
dec
test
jb
aad
xor
sbb
rol
adc
test
ja
mov
add
cmovo
out
movs
adc
pop
or
leave
fimul
sub
add
cdq
inc
adc
add
js
out
mov
out
leave
cmp
sub
xchg
rol
xor
add
and
movs
or
dec
inc
mov
js
mov
xchg
xor
mov
movs
sbb
jmp
leave
mov
aam
fucomp
jae
imul
in
(bad)
mov
mov
movs
bound
outs
push
mov
mov
push
jg
xor
repz
shl
push
jle
cdq
mov
adc
(bad)
and
jmp
clc
(bad)
or
xchg
aad
ror
pop
(bad)
xchg
jbe
gs
mov
pop
jmp
lods
mov
and
mov
(bad)
mov
repz
cmp
dec
pop
and
test
and
aaa
call
xchg
les
cs
js
gs
mov
adc
in
mov
push
int
loope
add
jae
xchg
pop
mov
pop
int3
jb
jge
enter
sbb
push
adc
ins
stos
int
inc
sub
jl
cmp
fdiv
ret
and
mov
push
pop
adc
test
xor
fstp
sub
xor
jge
mov
ja
xor
out
add
xchg
push
sbb
push
sbb
stc
cmp
(bad)
mov
add
imul
inc
and
mov
stos
(bad)
(bad)
imul
data16
idiv
xchg
dec
mov
nop
loope
inc
sub
push
inc
loop
mov
jns
(bad)
cwde
pop
xchg
lahf
push
leave
mov
jge
(bad)
or
pop
xor
jo
js
adc
ret
inc
fisub
pop
push
sti
ffree
and
xor
mov
push
outs
pop
adc
xchg
jmp
rcr
ret
lods
pop
(bad)
jmp
add
dec
pop
mov
popa
cwde
mov
pop
call
sbb
out
(bad)
dec
xor
nop
jmp
std
xor
or
fistp
xchg
jne
xchg
js
sbb
or
jmp
ret
inc
xor
icebp
push
ja
dec
cmp
mov
ret
stos
adc
cmp
ret
inc
retf
fwait
inc
sbb
in
jbe
ja
test
inc
lds
inc
add
mov
dec
sbb
or
mov
jb
sbb
mov
and
ins
sbb
pop
mov
mov
enter
movs
xchg
cmp
scas
lock
out
pop
push
mov
das
cmp
movs
enter
xchg
ins
mov
nop
inc
inc
cmc
popa
paddb
jge
fiadd
xchg
dec
pop
jp
gs
mov
mov
xor
mov
mov
inc
mov
fwait
out
jae
mov
mov
cmp
inc
mov
or
inc
push
es
inc
adc
and
cmp
inc
push
sar
inc
mov
inc
adc
jge
cmp
sbb
ins
jmp
dec
mov
cmp
push
test
xchg
and
add
(bad)
imul
jb
sbb
retf
(bad)
cs
cmp
push
imul
or
sbb
pop
and
nop
or
jbe
sub
outs
dec
loope
test
sbb
xchg
frstor
out
aam
sbb
mov
daa
sbb
js
dec
jmp
jae
nop
inc
xor
fwait
push
movs
adc
out
inc
sbb
push
xchg
push
or
sub
retf
mov
je
cli
push
ss
and
int3
pop
repnz
push
jmp
add
in
pop
mov
dec
addr16
inc
xor
aad
(bad)
xor
sbb
hlt
inc
dec
pop
test
push
cmp
xor
int3
ja
loope
sub
ror
rol
das
fist
jecxz
add
and
sar
enter
pop
push
fst
mov
push
ins
fs
enter
mov
iret
lods
les
sub
ret
inc
cmp
mov
into
aad
in
or
mov
xchg
mov
and
push
inc
add
push
cmovs
or
iret
popa
or
inc
aas
dec
je
mov
pop
mov
cwde
fdivr
mov
push
mov
lds
jp
test
lods
mov
sbb
push
or
dec
mov
sbb
bound
mov
xchg
in
adc
jle
push
sub
(bad)
and
fist
jo
jno
subps
popa
js
cmp
pop
(bad)
loop
mov
pushf
xor
ss
pusha
addr16
lock
mov
mov
popf
dec
jecxz
(bad)
jmp
mov
push
add
ss
imul
mov
fwait
(bad)
addr16
dec
xchg
fdiv
mov
push
in
xchg
loop
xor
push
outs
movs
lock
shl
cwde
mov
push
jbe
pushfw
add
in
push
jle
in
fdiv
out
adc
loopne
lods
mov
pop
fwait
xchg
cs
(bad)
mov
pop
cmp
hlt
mov
movs
pop
push
in
pop
mov
and
sub
rcr
jnp
xchg
fcmove
sbb
push
outs
(bad)
lock
loope
push
sbb
pop
pop
adc
jle
aas
cmp
jbe
mov
dec
cmp
pop
movs
popa
retf
aaa
dec
(bad)
cdq
mov
out
cmp
fcomp
push
dec
ins
(bad)
test
int
je
mov
pop
jns
ficom
xchg
fisubr
or
sub
push
js
xchg
hlt
or
push
cs
je
mov
es
cmp
add
inc
ret
ja
pop
push
rol
pop
cld
stc
cmp
or
sbb
adc
pop
popf
push
(bad)
stos
lea
mov
cli
dec
sbb
adc
lahf
jg
nop
or
arpl
jge
xchg
push
dec
sbb
rol
out
popf
shl
cmp
mov
lods
jb
adc
pushf
ret
xchg
fdivp
mov
pop
ins
push
addr16
rcl
jno
ins
test
call
sub
push
cmp
test
sbb
xor
mov
inc
push
mov
inc
outs
sbb
jae
add
pop
pop
fsubp
mov
retf
test
mov
mov
dec
lods
icebp
repnz
inc
xchg
test
mov
std
or
cmps
jg
fistp
mov
xchg
ins
pop
mov
loope
jp
mov
je
ds
xchg
stos
push
out
stos
lds
stc
sti
inc
inc
stos
jmp
cmp
ins
mov
fisttp
arpl
mov
cmp
xchg
xchg
push
mov
retf
int3
fnstenv
mov
daa
pushf
stos
cwde
mov
push
ffreep
jecxz
loope
mov
rcl
loopne
cmp
ss
jmp
inc
icebp
and
sbb
add
je
and
ins
adc
push
xchg
sbb
out
sbb
mov
or
scas
aas
jl
aad
and
fcom
addr16
sbb
fdiv
bound
sub
ja
(bad)
shr
add
das
pop
push
xchg
lea
mov
mov
test
inc
std
imul
test
mov
dec
ja
(bad)
mov
jl
lock
mov
xchg
cmc
out
fsubr
inc
push
imul
inc
gs
add
add
jnp
xchg
cmp
sub
pop
push
ret
aam
pop
push
xor
cs
inc
sub
in
ins
cmps
pop
(bad)
idiv
test
rcr
dec
sbb
inc
cwde
jp
hlt
adc
sbb
and
aas
xchg
or
outs
xchg
retf
les
in
popf
mov
pushf
ins
shl
sub
jl
mul
xchg
mov
sub
cmp
cwde
mov
push
mulps
sub
addr16
pushf
jnp
ins
imul
jns
pop
sbb
into
adc
xchg
adc
mov
sub
or
jns
xchg
fld
fcomp
loop
mov
sub
dec
cmps
inc
pushw
fcmovu
push
push
cli
sbb
jecxz
pushf
sar
mov
cmp
sti
sub
add
jmp
in
and
push
(bad)
imul
mov
pop
loope
mov
popf
xchg
mov
or
inc
push
push
sub
cmp
ins
popa
cmp
fstp
xchg
scas
shl
push
pop
jne
std
dec
cdq
pop
or
sbb
mov
and
imul
jns
xchg
aad
add
adc
xchg
or
repnz
dec
ja
in
sbb
pop
sahf
mul
sub
push
iret
mov
shl
mov
sbb
scas
ret
fistp
enter
ror
mov
fst
cmp
movs
sbb
mov
int3
dec
push
mov
jnp
xor
stc
mov
fsub
cmp
inc
rol
sub
lods
(bad)
xor
(bad)
mov
int3
add
in
jp
sbb
(bad)
rol
stos
icebp
test
popa
pop
adc
neg
push
sbb
mov
lahf
lahf
arpl
xchg
dec
jmp
add
cmp
cmp
in
xchg
sbb
cmp
out
xchg
and
imul
scas
adc
outs
and
fdivp
jnp
mov
std
aad
imul
fidivr
or
retf
pusha
push
mov
mov
test
jp
int3
xlat
mov
sbb
xor
push
mov
push
jae
frstor
or
or
push
pushf
mov
popf
ins
or
daa
mov
dec
cmp
xchg
push
cmp
into
cmp
sbb
sub
ja
pop
xor
es
cs
test
stos
ficomp
lods
(bad)
in
mov
(bad)
sti
loope
repnz
das
dec
in
cld
lods
jmp
jns
sahf
test
sub
pop
pop
scas
aaa
inc
scas
push
jp
xchg
push
add
aam
pop
rol
imul
repz
xchg
pop
bound
stos
push
inc
(bad)
lock
ss
mov
or
lds
or
ins
jmp
dec
inc
fsub
pop
mov
cli
cli
arpl
mov
mov
dec
adc
in
mov
push
add
popf
xchg
enter
pop
mov
sbb
mov
dec
sbb
sub
or
xor
mov
push
jmp
js
push
pop
div
and
add
sti
xchg
xchg
dec
je
ds
jp
adc
outs
xor
add
in
pop
push
rcl
mov
aam
fnsave
mov
sub
popf
xchg
inc
(bad)
mov
jnp
movs
inc
sbb
add
data16
mov
test
repz
cdq
push
stos
mov
jne
dec
ficom
jbe
into
lea
add
jge
xchg
outs
sbb
in
sub
adc
jns
xor
jl
jmp
push
xchg
adc
add
sbb
jmp
jl
popa
loopne
pop
ret
into
sub
rcr
sub
adc
lea
not
ins
mov
cdq
fstp
arpl
aas
test
or
xor
int3
push
test
sbb
xchg
lods
jp
in
mov
mov
xchg
(bad)
push
sahf
outs
repz
sahf
mov
mov
or
es
pop
fs
popf
cdq
aam
push
popf
inc
xchg
sub
adc
fist
int
std
ss
es
mov
mov
aas
(bad)
pop
xlat
cmc
and
ins
aas
dec
jecxz
je
scas
lds
mov
xchg
xchg
dec
stos
dec
xor
imul
(bad)
or
mov
xor
enter
and
jle
(bad)
test
cmp
sahf
add
shr
out
lea
xchg
in
lds
xchg
loope
mov
pop
adc
mov
dec
iret
out
and
mov
shl
cmp
addr16
add
mov
outs
lods
out
jp
fistp
adc
and
ja
mov
dec
jb
push
adc
aaa
imul
jno
push
sahf
leave
pop
xchg
das
xor
frstor
cmc
jne
ja
add
stos
and
sub
mov
jnp
addr16
stos
jmp
dec
in
adc
lods
shl
sbb
adc
out
retf
xchg
xlat
loop
test
retf
ja
mov
pop
(bad)
or
mov
cdq
dec
mov
repz
push
xchg
les
imul
pop
dec
bound
or
scas
out
fadd
jbe
add
xchg
movs
jns
pop
and
adc
mov
psrld
xor
pushf
pusha
call
sub
lea
sahf
xor
mov
(bad)
cdq
sbb
xor
push
or
fnstsw
stc
mov
dec
jle
cwde
gs
fwait
adc
repnz
shl
mov
mov
jg
aam
(bad)
jmp
rol
add
cli
inc
loope
movs
jnp
enter
push
test
mov
jmp
mov
sub
stos
out
scas
xchg
popa
loope
jmp
test
test
aam
adc
push
pop
mov
imul
cmc
mov
cmp
push
and
fadd
mov
and
sbb
(bad)
pop
icebp
pop
(bad)
scas
sub
dec
jo
add
cmp
mov
and
test
adc
cmps
test
sub
mov
lahf
and
dec
jo
and
std
test
add
mov
add
lock
(bad)
mov
stc
push
int3
xchg
ret
adc
pusha
jecxz
retf
movs
ja
push
movs
clc
sub
pop
test
sbb
adc
aad
scas
add
xchg
mov
fdivr
call
xchg
add
push
cmc
or
cmp
jo
imul
pop
jnp
mov
sti
xor
cmp
xor
adc
rcr
sub
jg
inc
dec
imul
fnsave
xor
jmp
retf
jmp
shl
mov
jbe
sub
call
add
test
push
in
sbb
add
jl
push
test
pop
in
int
fs
mov
cmp
adc
outs
mov
mov
sub
outs
xchg
mov
mov
(bad)
stc
push
lahf
loope
cs
fwait
lods
ror
inc
inc
xchg
std
and
scas
jno
mov
aad
imul
dec
mov
fmul
xchg
mov
call
popf
not
xor
mov
scas
push
dec
data16
mov
sub
cmp
mov
cmp
fidiv
(bad)
mov
sti
lods
pop
jg
retf
mov
lock
je
rol
lea
fmul
rcl
jmp
popa
or
aam
dec
push
sub
imul
jns
fimul
jae
pop
xchg
cld
fcomp
in
and
dec
xchg
test
pop
aad
in
fst
jno
xor
ds
adc
push
icebp
sub
je
inc
push
jnp
shl
push
mov
hlt
lods
mov
out
xchg
push
enter
mov
push
fldcw
jecxz
sub
outs
push
mov
or
std
lahf
adc
push
dec
nop
jo
xor
inc
mov
(bad)
cmc
mov
add
in
and
mov
jecxz
and
and
dec
cwde
pop
dec
fldenv
mov
sbb
dec
je
mov
mov
stos
sub
shl
mov
xor
addr16
push
jnp
das
outs
jl
push
ins
adc
out
push
aad
outs
dec
or
dec
ret
and
jecxz
xchg
hlt
push
nop
movs
mov
jne
mov
pushf
and
loopne
popa
add
out
adc
loope
inc
popa
and
ficomp
mov
(bad)
out
movs
aad
sub
xchg
and
cmp
std
loopne
pop
mov
rcl
inc
mov
out
mov
iret
or
fxch
mov
loopne
xor
inc
clc
and
xor
sub
add
fs
das
int
aad
idiv
and
xchg
sub
mov
daa
in
cmp
xchg
(bad)
es
out
pop
pusha
mov
inc
int3
xchg
xor
sahf
aam
fnstsw
rcl
cmp
int3
out
(bad)
aaa
add
sub
mov
aas
ins
in
imul
lock
ficomp
out
es
push
cmps
mov
retf
imul
inc
fnsave
jae
scas
xchg
dec
pop
dec
cld
dec
sar
cmps
and
pushf
dec
adc
cmp
push
inc
sub
inc
dec
xchg
dec
cmp
fldenv
mov
xor
mov
int3
repnz
xchg
jbe
pop
xchg
pop
stos
push
rcr
sbb
jbe
inc
add
mov
add
test
jle
cli
pop
and
jbe
aas
sub
xchg
lea
and
adc
push
sbb
sbb
ja
or
out
pop
clc
ja
dec
pop
loop
jl
cld
dec
jmp
int
scas
aad
bound
lods
push
jne
jg
cmc
mov
pop
pushf
les
int
ret
rol
inc
fs
xchg
mov
add
push
dec
jmp
jmp
adc
in
push
xor
sub
dec
aad
and
mov
dec
mov
add
sbb
adc
dec
(bad)
popa
daa
push
mov
shl
xor
icebp
dec
jp
in
add
or
repz
xor
sub
mov
hlt
hlt
inc
mov
icebp
and
mov
inc
and
lea
xor
test
in
xor
dec
adc
das
aad
dec
mov
data16
adc
push
loope
add
push
mov
cmp
push
pop
cld
ds
push
push
cmp
int3
mov
push
(bad)
pop
mov
push
cmp
js
mov
fs
push
stos
dec
sbb
test
jge
in
aaa
xchg
and
adc
or
inc
adc
clc
pop
and
out
xlat
es
repz
mov
sub
push
or
adc
(bad)
xchg
movs
bswap
mov
pusha
je
dec
dec
mov
aad
mov
(bad)
rol
dec
mov
pop
into
lock
in
daa
dec
cmp
lea
push
bnd
push
push
std
pop
push
xchg
lea
mov
push
(bad)
jmp
cmps
dec
ret
push
imul
stos
mov
or
push
aas
jle
fcmovb
push
shl
repnz
jne
scas
das
mov
inc
daa
and
es
or
ja
inc
popf
lods
jge
push
inc
add
into
or
pop
out
js
or
out
mov
cmp
cmp
xchg
aam
xchg
(bad)
ja
pop
jg
mov
sub
add
push
ja
hlt
mov
fidivr
jb
clc
call
cld
mov
push
cmc
sbb
inc
nop
pusha
imul
out
jmp
and
dec
mov
adc
xchg
std
sbb
ins
pop
pushf
(bad)
outs
jl
cs
js
sar
add
sub
inc
mov
cwde
js
test
push
pop
daa
inc
fwait
or
dec
sti
test
push
jns
cdq
leave
add
inc
loopne
adc
xlat
sbb
hlt
js
pop
add
sub
sub
imul
pop
hlt
mov
inc
bswap
jecxz
pusha
cld
repz
pop
xor
xchg
push
js
jae
jmp
push
sar
add
pop
mov
push
ret
out
imul
fadd
push
nop
xor
push
jns
sbb
mov
out
jmp
sub
lock
pushf
mov
lock
pop
push
es
and
cmp
add
(bad)
cmp
pushf
sbb
cmc
in
sbb
dec
add
add
sbb
loopne
cmp
jmp
push
pop
inc
cmp
test
ror
jg
jb
cwde
and
jmp
pop
mov
add
lock
mov
enter
nop
xchg
ss
dec
dec
das
sbb
mov
cld
cmovg
hlt
cld
out
ja
push
or
mov
repnz
sbb
dec
iret
popa
mov
int3
mov
out
sbb
inc
dec
sbb
mov
aad
xor
mov
xor
popa
mov
ins
cmp
inc
xchg
cs
fimul
aad
inc
fwait
xlat
mov
xchg
leave
scas
jle
bound
add
jns
xor
inc
lea
(bad)
lds
push
adc
adc
fsubr
jg
addr16
or
mov
lea
fistp
movs
mov
loope
call
ret
pop
dec
mov
jae
lahf
cmovg
inc
pop
mov
mov
adc
jle
jmp
push
add
push
loopne
pop
pop
std
or
(bad)
jae
out
lock
mov
pop
pop
mov
cmp
arpl
cmp
leave
das
(bad)
addr16
neg
mov
(bad)
arpl
cmc
fs
push
or
dec
add
mul
jle
push
add
retf
sub
xor
mov
in
(bad)
cmps
int
cmp
leave
jmp
imul
ror
lds
adc
rcr
push
enter
and
xchg
jecxz
jno
aas
xchg
int
jmp
sub
data16
pop
je
arpl
mov
dec
jo
adc
daa
push
inc
mov
adc
in
cmp
mov
pop
xor
push
pop
scas
stos
dec
push
push
rcr
(bad)
jp
sbb
jae
and
adc
pusha
add
enter
adc
loope
jmp
lods
lds
mov
adc
aaa
adc
div
repz
push
inc
aas
and
or
les
and
cmc
js
test
(bad)
std
shr
adc
stos
popf
sbb
and
pop
std
push
sbb
hlt
sbb
pop
mov
jo
pop
jbe
or
(bad)
fldenv
iret
rol
add
jecxz
xor
(bad)
sbb
xchg
ins
cmp
mov
inc
xchg
in
repz
or
cmc
mov
in
cmp
shl
cmp
and
out
add
aaa
icebp
xlat
sub
push
push
mov
push
popa
mov
cwde
aaa
shl
cmp
ror
mov
inc
cmp
pushf
pop
inc
pop
cdq
or
(bad)
or
test
int3
sbb
dec
dec
push
and
movs
dec
and
data16
mov
cli
mov
mov
pop
mov
iret
loopne
and
mov
push
adc
and
adc
ret
mov
imul
sbb
fisub
repz
data16
adc
sar
outs
fist
cmp
cwde
xor
cwde
jge
inc
shl
fistp
rcr
les
adc
fwait
push
retf
frstor
jmp
sub
dec
loopne
xchg
push
outs
outs
inc
sbb
mov
cmp
fdivr
ins
das
sbb
out
add
adc
sar
mov
scas
push
(bad)
xor
fstp
or
lods
nop
mov
mov
sbb
cmp
arpl
les
jbe
gs
and
gs
and
cmp
mov
push
pop
push
test
ins
loope
inc
aad
jecxz
cmps
outs
mov
sbb
inc
mov
push
adc
add
popf
jmp
mov
push
push
jp
xchg
sbb
js
js
cmps
cld
fisttp
mov
push
movs
loop
or
fimul
fistp
int
jmp
mov
push
adc
inc
(bad)
ja
xchg
cmp
movs
pop
int3
push
lods
adc
mov
loop
xlat
sbb
repz
sbb
fsub
leave
xchg
les
and
mov
into
dec
lea
test
xchg
pop
cmc
and
and
push
in
push
popa
sub
arpl
call
aas
hlt
(bad)
scas
cmp
mov
adc
sbb
push
icebp
push
int
sar
xchg
test
fldenv
xchg
fisub
push
xlat
aad
int3
sbb
lea
sub
pop
add
aam
imul
rol
and
pop
mov
pop
xchg
mov
rcl
inc
sub
mov
xor
add
mov
loope
addr16
inc
inc
jmp
push
or
xor
push
movs
xlat
xchg
jg
jns
popf
pop
nop
fcom
mov
scas
sahf
push
fadd
xchg
int
and
pop
mov
jnp
xchg
enter
add
in
add
pop
out
ficomp
out
push
pop
push
test
js
mov
add
and
cmp
fmul
mov
dec
or
leave
(bad)
fld
mov
jo
adc
add
int3
call
jmp
aaa
push
xchg
xchg
ret
jmp
in
mov
test
sbb
mov
test
sub
xchg
mov
pop
push
xlat
in
lahf
in
dec
mov
push
sti
pop
cmp
sub
loope
mov
add
mov
into
shr
es
fisub
iret
sub
and
div
jg
jbe
inc
stos
and
addr16
adc
or
icebp
test
jl
sbb
cmp
mov
pop
(bad)
jl
nop
mov
nop
xor
stos
and
mov
xor
ja
sbb
retf
fcomp
sbb
mov
pop
inc
fist
sahf
dec
push
inc
aaa
add
inc
pop
cmp
xor
fistp
(bad)
sub
inc
add
cli
jo
outs
movs
cwde
xor
into
data16
jnp
sbb
and
aad
inc
push
sub
daa
jns
outs
enter
jle
cli
jmp
fnstenv
push
mov
jb
ficomp
in
aas
and
loope
cmp
fnstenv
inc
mov
sub
add
in
sub
push
xchg
(bad)
retf
stc
outs
and
jmp
or
xchg
sbb
or
add
mov
jmp
imul
mov
aaa
sbb
inc
push
icebp
push
xchg
adc
sub
mov
mov
jns
push
sub
jmp
push
(bad)
sbb
pop
push
pop
push
jne
ja
loop
jmp
mov
push
inc
sti
and
aaa
ds
ja
std
sbb
and
into
pushf
sub
cmp
test
xlat
aam
into
xchg
sti
stc
xor
mov
cmp
mov
inc
mov
inc
dec
out
push
pop
mov
push
(bad)
in
mov
pop
sbb
sbb
cmp
imul
jl
sub
test
push
mov
adc
xor
fmul
test
outs
movs
xchg
loop
aam
push
int
sbb
leave
xchg
dec
mov
and
cmp
es
adc
out
xchg
mov
les
mov
or
jl
(bad)
sar
fstp
add
cmovg
push
enter
ror
mov
add
and
jmp
mov
cmp
and
lea
xchg
and
xor
outs
mov
std
data16
(bad)
(bad)
mov
pop
gs
xchg
push
arpl
adc
and
xchg
mov
push
xchg
cmps
dec
pusha
push
int3
add
xlat
jmp
mov
out
les
pop
out
fstp
aaa
mov
and
stos
out
pop
les
mov
sti
icebp
addr16
jmp
inc
sub
in
and
cmp
mov
adc
push
inc
jp
sbb
inc
push
add
fisttp
cld
mov
push
cmp
xchg
inc
adc
das
ja
pop
mov
dec
sti
loopne
in
mov
in
arpl
in
les
enter
rcl
aad
in
cmc
out
adc
xchg
leave
and
imul
loope
dec
ss
jbe
dec
pushf
pop
fnstcw
inc
fnstsw
fwait
adc
out
fstp
push
push
xor
in
and
push
lods
mov
in
inc
and
out
mov
(bad)
xchg
mov
jge
add
xor
outs
das
lods
dec
retf
leave
lods
rcr
inc
mov
xor
push
cs
cmp
dec
and
arpl
or
dec
cmp
pop
aad
push
pop
jmp
and
mov
imul
ss
(bad)
pop
movs
loop
std
jge
loopne
inc
lods
pop
sub
jge
test
int
adc
retf
sbb
add
push
adc
xchg
icebp
gs
adc
pop
shr
sbb
lods
ret
(bad)
out
mov
(bad)
xor
test
adc
out
call
ret
mov
cmp
jbe
push
nop
mov
cmp
cdq
pop
jns
xchg
dec
hlt
test
or
push
(bad)
mov
fist
(bad)
sub
pop
inc
mov
in
mov
push
and
jne
mov
xlat
cmc
or
push
cmp
jmp
sar
push
sbb
pop
sbb
mov
sub
or
jle
xor
imul
std
adc
sbb
sar
mov
lahf
outs
xchg
imul
fs
push
add
ins
xor
xchg
(bad)
jnp
push
pop
pop
pop
dec
mov
lods
mov
daa
or
ret
lds
mov
jp
loope
daa
loop
rol
push
imul
and
mov
fsub
mov
in
cdq
and
test
lock
outs
and
sti
ins
jbe
jbe
add
lods
loope
cld
call
push
out
fwait
sub
test
and
lock
mov
push
out
push
out
mov
aad
jae
jnp
lds
mov
sub
push
jecxz
fdivp
out
ja
xchg
jbe
cmps
mov
and
shl
mov
pop
inc
mov
or
in
call
mov
jmp
xchg
dec
lock
stos
jns
sbb
loopne
jnp
in
pop
jb
sbb
inc
push
nop
jmp
cmp
pop
addr16
sti
fs
push
addr16
ss
sbb
js
fwait
ins
fldcw
adc
and
cmc
jmp
imul
daa
adc
inc
retf
push
imul
mov
dec
mov
icebp
sbb
es
(bad)
jmp
jnp
inc
imul
add
mov
fisttp
fidivr
sub
mov
bound
ret
dec
jno
jnp
movs
shl
xacquire
xor
mov
shld
call
sub
and
push
stos
stc
mov
mov
movs
imul
push
jle
pop
loopne
mov
jbe
adc
ds
mov
lods
mov
pop
inc
in
xchg
or
sub
dec
inc
mov
cwde
and
pop
retf
enter
loopne
mov
mov
push
cmp
jmp
cmp
xchg
sub
inc
stos
sbb
ins
mov
jae
sub
xor
popa
stc
xor
outs
pop
shr
stos
dec
dec
adc
add
mov
ror
hlt
mov
popa
and
mov
pop
dec
repnz
enter
cmps
add
mov
push
call
inc
test
push
add
xchg
push
cmp
test
mov
dec
arpl
or
out
iret
fwait
or
call
xor
dec
mov
mov
ficom
mov
test
mov
xchg
pusha
enter
(bad)
das
(bad)
loopne
outs
mov
push
mov
sub
das
lods
cmps
jno
out
jmp
not
in
fwait
and
inc
into
shr
icebp
in
push
jecxz
mov
push
daa
or
loopne
xor
mov
sahf
ficom
mov
into
enter
adc
pop
xchg
bound
mov
fisttp
push
jae
or
cdq
jns
loope
push
(bad)
inc
sar
xchg
pop
adc
test
inc
mov
xchg
sbb
arpl
pop
sub
sbb
movs
les
sbb
inc
shr
pusha
jb
addr16
and
jb
enter
jb
ror
ja
xchg
sub
mov
pushf
(bad)
and
add
clc
ret
ja
fwait
or
das
scas
cld
ror
fimul
xor
and
xchg
xor
rcl
nop
cmp
pop
imul
jo
ins
ja
and
xor
jns
inc
jmp
stc
aas
repnz
fdiv
xchg
rcr
pop
sub
jne
in
adc
sbb
(bad)
lods
inc
dec
mov
xor
lock
add
mov
push
sbb
and
dec
xchg
mov
imul
push
ror
mov
xchg
pop
cdq
inc
jne
or
or
stc
sbb
arpl
xlat
mov
hlt
cmp
fst
stos
daa
sbb
push
mov
jns
mov
test
into
mov
adc
shl
mov
aam
mov
mov
adc
push
add
xor
aam
cmps
mov
in
push
pop
sub
fisubr
sbb
je
sub
(bad)
xchg
data16
mov
mov
subps
inc
add
scas
lds
and
outs
ret
stos
dec
mov
mov
(bad)
xchg
pop
pop
call
out
or
xor
fwait
loope
push
outs
mov
in
out
mov
retf
pop
push
mov
push
mov
add
pop
adc
es
dec
scas
ror
xchg
(bad)
arpl
push
not
mov
ret
pop
push
inc
lahf
inc
push
enter
lds
cmp
je
or
popf
push
mov
add
(bad)
sub
push
inc
je
(bad)
test
push
mov
push
add
jg
faddp
(bad)
sbb
xor
nop
mov
fld
cdq
push
xchg
xchg
xor
ret
stos
mov
fst
lds
add
mov
idiv
push
xchg
sar
cmp
pop
and
jl
es
mov
movs
pop
ror
rcl
cs
dec
inc
dec
mov
gs
add
jecxz
cmc
sbb
call
sbb
jb
or
(bad)
scas
leave
pop
mov
rol
jp
push
stos
jmp
inc
or
jb
cmps
xor
inc
idiv
sub
retf
cld
test
arpl
in
stc
popa
cmp
xchg
push
sbb
in
push
mov
cmp
shl
loopne
add
mov
outs
cmc
mov
daa
arpl
jg
pop
push
out
hlt
fld
sbb
cmp
dec
out
in
and
loope
or
daa
adc
pop
mov
pop
jbe
or
stos
(bad)
push
icebp
and
jb
movs
cmp
add
mov
cmp
(bad)
lods
gs
sbb
cli
sbb
pop
mov
in
xchg
jb
ds
arpl
jne
sub
test
push
inc
and
ret
xor
sbb
sub
mov
mov
jge
lock
loopne
mov
jae
inc
fcom
cld
xchg
push
sbb
or
mov
popa
push
push
and
ins
jns
cmp
mov
fcmovnbe
or
mov
jb
stos
sbb
jb
sub
lock
into
jnp
(bad)
lahf
ret
sub
mov
adc
xor
dec
fild
in
sbb
pop
xor
jmp
or
push
mov
sahf
sbb
sti
repz
xor
sbb
or
rol
frstor
lahf
es
jmp
or
inc
rcl
and
aaa
and
and
out
mov
popa
fiadd
mov
sbb
data16
movs
out
dec
push
pop
or
xlat
adc
push
loope
neg
adc
in
push
jle
xchg
test
inc
imul
sub
cdq
test
pop
lods
ss
pop
mov
sub
xchg
jmp
fs
shl
cmp
mov
mov
inc
jg
shr
sub
loop
rcr
std
mov
pop
outs
adc
retf
mov
or
mov
das
pop
inc
enter
pop
in
add
daa
leave
dec
mov
mov
jns
(bad)
mov
push
pop
and
xor
enter
in
(bad)
js
frstor
enter
adc
pop
cmp
aad
adc
jp
outs
pop
sbb
mov
outs
jnp
inc
pop
xchg
cld
repz
xchg
xchg
xchg
add
iret
fs
adc
rol
leave
sub
dec
imul
outs
popa
sub
jmp
jle
mov
in
dec
xchg
mov
inc
icebp
int
add
sbb
jne
sbb
pop
lds
xchg
pop
pop
imul
mov
icebp
rol
mov
sbb
fnstenv
xchg
or
imul
inc
cmp
fidiv
nop
leave
pop
mov
in
hlt
jecxz
and
add
icebp
jno
mov
mov
pop
inc
push
inc
cmpxchg
inc
xchg
add
and
dec
cld
pushf
cmp
mov
out
les
sub
jg
push
jno
imul
or
sub
push
movs
jg
dec
(bad)
ja
jb
aad
pop
ret
shl
nop
out
mov
cmp
ror
ror
cmp
rcl
jge
lods
call
mov
and
or
stos
push
push
(bad)
mov
sub
mov
stc
in
pop
dec
jmp
xchg
es
xor
sub
fidivr
sub
xchg
sub
xchg
cmps
inc
add
loop
push
cmp
or
xchg
gs
mov
cmc
ret
add
ret
jb
mov
or
fwait
mov
xchg
sti
pop
xchg
sbb
xchg
add
xchg
test
js
pop
xor
jo
mov
popa
lods
mov
je
pop
xor
mov
std
and
jmp
and
sbb
push
sbb
dec
push
or
arpl
pop
mov
nop
inc
sbb
stc
pushf
(bad)
xchg
jb
or
add
leave
inc
call
or
add
mov
movs
das
inc
dec
mov
cdq
js
adc
clc
(bad)
(bad)
add
(bad)
fadd
mov
or
jle
adc
stos
test
imul
in
(bad)
fdiv
xchg
stos
std
dec
inc
mov
nop
jp
outs
sub
(bad)
in
inc
cmp
add
bound
mov
inc
movs
(bad)
test
inc
cs
sub
das
sbb
inc
mov
sbb
in
xchg
fnstsw
cmp
cmp
add
jo
mov
cmps
nop
(bad)
push
js
popf
cmp
in
mov
or
push
jmp
add
jecxz
cmp
xor
aam
cli
jns
sub
jbe
dec
ins
(bad)
mov
xchg
out
xlat
(bad)
int3
loopne
enter
xor
inc
int3
test
xor
and
xor
push
push
mov
xor
dec
ret
dec
mov
xor
pushf
mul
mov
jns
inc
lock
fisttp
rcl
inc
es
cmp
sbb
outs
jo
push
inc
jnp
adc
sahf
mov
sub
stos
pop
xlat
add
inc
or
inc
adc
mov
outs
jb
test
retf
mov
dec
xor
fsubr
mov
adc
inc
pop
mov
jmp
mov
dec
out
xlat
inc
ins
fs
xor
ret
push
mov
lahf
test
jge
and
je
or
and
inc
mov
cdq
call
adc
in
mov
not
cmc
daa
fiadd
sbb
(bad)
aam
mov
ss
pop
dec
pop
push
fdiv
outs
mov
das
xor
js
cli
repnz
mov
aam
addr16
mov
pop
fld
inc
inc
add
and
ror
ja
add
xor
push
(bad)
arpl
add
jns
add
sbb
sub
and
mov
pushf
jl
ds
and
and
out
push
jbe
fidivr
test
pop
aaa
bound
arpl
stos
rcl
stc
sbb
push
les
xor
pop
mov
sahf
push
div
dec
mov
dec
sbb
cmc
and
push
addr16
(bad)
in
push
and
adc
mov
xlat
(bad)
ret
pop
push
hlt
or
imul
xchg
jg
sub
dec
jg
lock
arpl
not
cld
sub
pusha
test
icebp
dec
mov
cdq
xchg
fxtract
adc
pop
mov
cmps
add
aam
mov
push
mov
ret
dec
dec
ja
(bad)
jnp
mov
fimul
lods
mov
test
(bad)
arpl
ins
shl
push
div
stos
sbb
imul
push
xor
shl
(bad)
xchg
jo
jle
inc
adc
pop
(bad)
cmp
add
sbb
js
dec
arpl
retf
dec
lahf
out
sbb
movs
dec
out
add
push
mov
aaa
inc
pop
cmp
push
lahf
pop
dec
out
pop
aas
sti
inc
pop
aas
sbb
sbb
popf
inc
stos
push
xchg
pop
test
xor
mov
es
pop
sbb
push
fidiv
test
mov
xchg
into
or
jp
aas
in
pop
mov
jbe
xor
ins
pop
cmp
cmc
pushf
inc
out
and
push
ja
mov
push
cwde
or
stc
out
sbb
push
(bad)
int3
lea
clc
bound
xor
mov
and
add
mov
mov
lods
prefetch
ins
push
std
arpl
add
pop
ret
add
fld
retf
dec
jg
(bad)
push
mov
sahf
jp
pusha
sub
adc
les
push
loopne
data16
xor
shr
test
pop
xor
or
mov
movs
cmps
(bad)
pop
aaa
pushf
fwait
adc
fstp
aas
mov
call
or
mov
daa
inc
cs
fistp
(bad)
mov
or
stos
mov
push
sar
xor
xchg
pushf
or
lea
jle
dec
cld
sti
in
outs
mov
inc
sbb
addr16
push
sbb
dec
add
inc
lock
mov
cmps
loope
sar
out
mov
(bad)
pushf
sub
sbb
call
dec
sbb
ins
mov
add
mov
call
jecxz
repnz
pop
mul
dec
mov
mov
(bad)
test
scas
cwde
pop
add
dec
ror
mov
mov
xor
jmp
pop
ja
jmp
(bad)
aaa
mov
daa
sbb
rol
cmc
aaa
inc
out
add
js
mov
push
jbe
cmp
test
into
xchg
mov
or
test
add
xchg
fcomp
enter
imul
mov
cmp
jle
inc
das
mov
test
mov
loop
xchg
and
ds
mov
mov
cmps
fwait
inc
xor
add
mov
iret
push
into
dec
xor
daa
movs
dec
cmp
pop
shl
cmps
pop
push
inc
data16
out
mov
(bad)
shl
in
movzx
pop
shl
dec
xchg
ror
dec
cmp
call
test
inc
pop
jecxz
ret
push
int
ror
dec
or
fstp
mov
mov
movs
mov
bound
adc
ss
lods
push
fstp
add
cmps
adc
push
cmp
add
jo
rcr
mov
loope
int
outs
jp
cmp
jmp
push
inc
mov
scas
out
pop
dec
xchg
test
jo
xchg
fdiv
mov
pushf
inc
sub
cmps
jmp
daa
loopne
int3
enter
xchg
push
adc
fild
ja
and
mov
inc
jno
cmp
dec
js
cmp
add
in
jmp
add
dec
push
aaa
jl
mov
cdq
stc
retf
cmp
test
inc
or
mov
adc
outs
loope
mov
fmulp
jmp
aas
mov
jl
xchg
ficomp
out
hlt
outs
loope
mov
int3
jns
hlt
loope
or
arpl
arpl
jmp
arpl
mov
pusha
test
retf
popa
stos
inc
jge
test
xchg
dec
cmp
sub
je
and
icebp
mov
mov
pop
out
sub
sbb
js
gs
in
push
test
sub
cwde
outs
pushf
retf
bound
jmp
addr16
aas
xchg
mov
cmp
out
push
dec
(bad)
shr
xchg
popf
fidiv
(bad)
sbb
add
add
pop
mov
push
loope
jge
inc
pslld
or
add
xchg
cwde
adc
xor
pop
mov
test
mov
add
cmp
add
arpl
mov
and
mov
inc
dec
adc
xchg
movs
inc
push
xor
arpl
cmp
int
nop
dec
out
cmp
repnz
ins
stos
jp
pop
jns
call
adc
cwde
pop
mov
xlat
xor
in
sbb
lock
sar
inc
retf
(bad)
jg
and
(bad)
imul
bound
and
cwde
adc
mov
cmc
dec
into
(bad)
cmp
fs
mov
enter
jno
test
data16
and
stos
push
stc
xor
dec
pop
iret
cmp
stc
jecxz
dec
xor
int
popa
inc
clc
test
pop
mov
data16
push
in
xchg
mov
lock
in
aam
popf
imul
shr
inc
ins
push
xchg
les
mov
mov
aad
mov
add
jle
retf
imul
pop
movs
dec
add
loopne
getsec
xlat
mov
dec
(bad)
retf
push
xchg
in
dec
push
inc
adc
xor
jo
je
lock
push
lea
movs
test
sahf
pop
lahf
mov
iret
stos
mov
mov
mov
les
cwde
cmc
mov
cs
test
sub
popf
jle
mov
scas
jmp
push
push
jnp
inc
push
mov
push
inc
imul
jbe
loop
leave
push
jp
(bad)
jno
fsubr
pop
lea
inc
sbb
je
sbb
test
adc
stos
xchg
loope
(bad)
fld
dec
movs
or
das
idiv
and
mov
push
(bad)
call
fild
jge
cs
test
sti
mov
jno
addr16
pop
outs
adc
cmp
loop
inc
scas
mov
js
dec
push
retf
call
scas
sub
sti
test
shl
xor
fnstenv
push
cmp
fiadd
xchg
lods
adc
add
sub
ror
movs
outs
ds
inc
hlt
cmps
and
int
pop
hlt
sub
dec
imul
jmp
cmp
les
(bad)
fcomp
int3
(bad)
pop
ins
inc
(bad)
std
cs
jp
pop
sti
pop
pop
ret
xor
outs
sti
push
inc
jne
(bad)
dec
mov
pop
retf
sbb
mov
dec
inc
gs
mov
movs
push
xor
mov
inc
outs
or
rcr
fmul
xor
xor
pop
cwde
sar
mov
pop
aam
sbb
mov
mov
sbb
popa
or
adc
arpl
test
stc
data16
(bad)
pop
sbb
in
dec
test
and
dec
fs
mov
xchg
xor
ja
js
jno
scas
cmp
mov
jnp
scas
add
in
inc
pop
shl
popa
mov
adc
or
ins
rol
popa
popa
sub
xchg
sub
xchg
mov
xlat
add
shl
test
mov
or
mov
jp
ficom
adc
mov
jb
add
mov
cmp
add
add
xor
push
mov
js
lea
sbb
inc
dec
jno
sub
mov
ins
pop
push
fnstsw
add
test
mov
pop
and
xchg
and
(bad)
sahf
mov
jmp
jle
push
sbb
add
jecxz
dec
repnz
scas
stos
xor
shr
ret
(bad)
stos
arpl
mov
pusha
push
jnp
fst
out
aas
mov
mov
fist
or
out
(bad)
inc
fidiv
or
mov
sub
les
outs
jns
add
enter
pop
push
rol
pop
fsubr
imul
mov
call
push
out
cmps
retf
sbb
pop
fscale
js
sbb
aas
adc
data16
movs
or
jg
fimul
dec
inc
pop
xchg
pop
repnz
jmp
sub
out
mov
jle
jg
jns
xchg
jge
gs
aad
xchg
and
fidiv
test
aas
push
loop
adc
and
movzx
cwde
inc
push
mov
lods
scas
mov
sbb
popa
aam
mov
pop
pop
pop
cmp
and
xchg
out
ss
sbb
xchg
fstp
dec
or
or
pop
mov
and
jns
ret
push
ret
xchg
stos
xor
ret
pop
enter
sti
sub
add
enter
(bad)
pop
cwde
cmp
add
mov
leavew
aaa
xor
add
mov
push
mov
pop
fsub
cmp
xor
in
icebp
sti
dec
mov
jmp
idiv
inc
xchg
xchg
dec
jo
shl
retf
retf
xchg
pop
and
fsubr
pop
mov
push
daa
pop
arpl
(bad)
sahf
lods
mov
dec
movs
int
daa
xor
sub
xor
mov
sub
sub
dec
cld
xor
call
fwait
cmps
or
jl
daa
std
push
scas
cmp
cmp
scas
adc
mov
xchg
dec
popf
(bad)
push
leave
jmp
push
ds
mov
or
xor
or
xlat
not
fisubr
aaa
outs
sahf
mov
std
cmp
cmp
clc
xchg
test
pop
pop
mov
test
xchg
lods
inc
out
adc
call
pop
pop
lock
inc
(bad)
cmp
fidiv
or
ror
or
ins
popf
fcom
mov
adc
out
addr16
push
jne
add
pop
sbb
sbb
inc
ins
pop
dec
jb
sub
outs
add
mov
push
adc
cmp
scas
mov
es
jo
js
das
mov
daa
xchg
pop
test
rcl
(bad)
test
mov
shr
add
popa
sub
lods
jmp
les
mov
shl
outs
sbb
je
aaa
clc
dec
aam
imul
xor
and
in
mov
shl
not
data16
xor
adc
xor
stos
mov
push
lahf
mov
imul
dec
loope
fcomp
pusha
add
add
or
jl
mov
dec
mov
sub
cli
sub
aaa
int
je
push
ins
out
sbb
mov
or
pop
push
dec
push
dec
enter
shr
lds
cli
stos
imul
out
or
test
dec
jae
and
and
mov
sub
dec
sub
xlat
push
pop
push
cwde
call
xchg
or
popf
ss
dec
adc
xor
xchg
push
arpl
mov
dec
test
into
adc
rcl
mov
pop
jg
fstp
inc
mov
pop
pusha
xchg
jns
dec
mov
leave
cmp
pop
sub
fbstp
retf
xchg
jns
fild
sbb
cs
sbb
dec
inc
sbb
call
sbb
sbb
xchg
inc
lods
push
push
cmp
pop
sub
dec
not
push
xor
sub
mov
push
mov
pop
int3
daa
sbb
dec
mov
call
mov
dec
aam
jmp
push
aaa
scas
loop
mov
pop
xor
lds
jnp
stc
sbb
adc
sbb
xchg
xor
pop
push
jb
aas
push
inc
data16
mov
int3
movs
xchg
pop
int
inc
cld
cmps
inc
pop
jle
scas
movs
aam
sbb
push
push
mov
push
(bad)
push
stc
sub
test
nop
dec
cmp
cmp
nop
repnz
push
pop
hlt
js
repz
cmp
fild
out
mov
mov
and
adc
fisttp
popa
call
pop
hlt
mov
fistp
adc
out
mov
loop
ret
je
(bad)
jns
fcom
leave
mov
test
mov
aas
lea
sbb
add
ret
cmp
sub
out
lea
and
push
out
xchg
retf
dec
cs
pop
test
or
test
add
mov
jl
aas
nop
dec
stos
add
out
dec
push
pop
push
mov
pop
mov
cwde
dec
inc
mov
cmp
inc
push
cmp
(bad)
xchg
ficomp
enter
mov
push
adc
shr
pop
aad
scas
inc
ds
pop
add
test
xchg
movs
test
js
out
pop
xor
dec
push
iret
arpl
stc
(bad)
adc
jle
lahf
adc
mov
and
(bad)
pop
stc
mov
jbe
arpl
icebp
jmp
jle
ficom
push
sbb
fwait
movs
repnz
dec
daa
xor
xchg
jge
movs
les
or
fidiv
aam
repz
pop
jno
(bad)
mov
ds
push
xchg
jne
push
loop
jo
inc
pushf
dec
jbe
aas
in
cdq
call
xchg
mov
xchg
shl
sub
mov
pop
mov
jbe
test
jo
out
push
pop
loop
xchg
hlt
lock
shr
and
add
(bad)
lods
sti
push
jmp
leave
xor
mov
pop
mov
jno
repnz
enter
and
cmps
outs
(bad)
pop
cmps
cli
sar
ret
dec
inc
mov
imul
retf
lock
leave
icebp
push
jge
mov
cmp
fcomp
scas
sub
jg
movs
adc
retf
jbe
cmps
add
mov
addr16
aam
or
mov
inc
(bad)
add
jg
mov
jl
pop
lahf
adc
(bad)
push
mov
outs
mov
rcl
mov
dec
sbb
popf
push
push
daa
clc
cmp
(bad)
and
shr
mov
scas
ss
test
xor
dec
adc
mov
addr16
mov
out
sub
imul
mov
xor
outs
push
test
xchg
fisttp
mov
int
cmp
xchg
loope
push
rcr
in
cmp
fwait
and
mov
xchg
std
test
adc
fcomp
sbb
or
jp
loope
adc
inc
test
add
push
test
inc
fs
xchg
stos
out
cdq
sub
jb
xor
sbb
popa
jno
popa
or
(bad)
loop
mov
scas
adc
add
(bad)
scas
daa
jnp
dec
add
fcomp
shl
jo
(bad)
in
fnsave
adc
repz
hlt
add
jno
popa
div
and
aam
call
fmul
scas
jle
push
out
mov
jmp
in
push
mov
in
or
xor
lds
jb
sahf
fucomip
dec
add
ds
in
ins
shl
sbb
sbb
and
adc
push
fst
sub
pop
movs
mov
cmp
call
and
cmps
push
add
or
inc
(bad)
mov
jbe
lods
nop
lods
les
sub
cmp
and
out
add
std
dec
mov
test
(bad)
cmp
mov
jb
(bad)
dec
loope
iret
mov
repnz
cli
inc
cwde
mov
clc
and
iret
or
xchg
ins
push
and
add
or
fsubr
push
push
sub
addr16
push
xchg
dec
ss
repz
clc
inc
icebp
pop
inc
inc
xor
lods
push
mov
jb
dec
mov
sbb
add
out
jle
test
sub
pop
mov
pop
push
rol
outs
fstp
lahf
mov
inc
shl
paddd
fisttp
push
stc
inc
mov
retf
add
push
mov
ror
inc
int
or
loopne
scas
dec
addr16
repz
jbe
pop
stc
mov
mov
push
jmp
fld
inc
mov
cmp
loopne
cmc
push
mov
int3
int
xchg
lahf
xor
rcr
sub
adc
cmps
add
out
rcr
das
call
aas
adc
mov
ret
rol
jnp
sbb
cmp
fs
(bad)
cmps
lods
cmp
mov
adc
out
(bad)
sbb
nop
jle
sub
fmul
es
in
inc
inc
and
mov
mov
jg
ins
mov
adc
in
ins
test
pop
and
sar
sbb
scas
fld
mov
retf
popa
hlt
sar
jns
add
test
adc
inc
call
ss
sub
sar
ss
stc
pop
dec
dec
rcl
imul
(bad)
xor
push
out
xor
xor
cmp
lds
call
shr
push
in
jae
data16
leave
xchg
into
movs
aas
sub
(bad)
jns
mov
pop
in
dec
je
mov
imul
(bad)
scas
imul
stos
cdq
leave
fs
popf
push
adc
jbe
iret
ss
and
mov
in
imul
cmps
loop
jmp
xchg
pusha
dec
les
aas
outs
or
jmp
push
inc
or
ja
iret
xchg
push
push
test
push
dec
into
sub
fwait
ja
in
jb
not
or
pop
jle
jl
jmp
or
push
fidivr
mov
xchg
repz
pop
aaa
and
push
jmp
sub
cmc
mov
pop
mov
pusha
out
fistp
sahf
push
pop
inc
xor
mov
mov
push
cmovb
or
fisttp
(bad)
xchg
dec
ss
xchg
xchg
lock
leave
leave
test
aas
pop
retf
xor
jl
and
out
push
sub
inc
xchg
push
or
imul
jmp
loopne
je
jnp
lahf
add
retf
jle
scas
push
sub
gs
mov
into
test
xchg
sar
push
cld
ds
jmp
xchg
je
sbb
xchg
mov
pop
xchg
shr
jne
inc
ins
lahf
inc
repnz
mov
mov
cmp
sub
pop
cld
outs
adc
lock
loop
out
shr
mov
push
out
xor
arpl
and
pop
ss
neg
xor
dec
fisttp
xchg
sbb
mov
stc
jmp
cmp
cdq
cmp
mov
vpaddw
cmp
sahf
inc
ret
clc
(bad)
fisubr
rol
sbb
fistp
into
mov
adc
inc
lahf
cmp
pop
sbb
mov
dec
xchg
adc
push
sahf
or
ins
fst
sub
(bad)
push
sbb
and
mov
push
lods
repz
jecxz
adc
cwde
add
push
pop
imul
ret
adc
sub
dec
in
mov
sub
aam
mov
push
jmp
xchg
cmp
jge
fs
pop
dec
mov
push
mov
aad
out
or
stos
inc
xchg
jp
ja
jne
add
enter
stc
jno
push
dec
and
pop
or
daa
(bad)
cmp
ins
fldcw
mov
adc
jg
mov
pop
inc
mov
pop
out
dec
push
fadd
sahf
adc
sbb
mov
loop
sub
dec
push
push
cmps
sub
cs
out
enter
imul
mov
in
(bad)
iret
mov
shl
lods
in
pop
dec
clc
and
mov
push
xchg
sbb
cmp
stos
das
adc
jns
push
les
mov
xchg
mov
push
sbb
idiv
shl
es
push
mov
bound
loope
movs
jl
cmps
mov
ins
call
xor
adc
out
data16
cs
call
inc
push
movs
out
mov
mov
call
retf
dec
in
addr16
retf
xchg
(bad)
xchg
mov
retf
adc
push
xchg
mov
(bad)
in
xor
add
jmp
in
xor
lods
and
mov
xchg
mov
pop
pusha
sub
outs
dec
lahf
int3
jle
ror
icebp
cmp
add
or
ins
arpl
cmp
lea
retf
mov
jae
lods
lods
sbb
shl
(bad)
fwait
adc
popa
push
xchg
aaa
test
iret
ins
mov
mov
dec
xor
aad
cli
inc
das
mov
push
scas
sahf
xor
sbb
pop
stc
popf
fsubr
pop
pop
lds
dec
popf
fcom
mov
test
popf
and
inc
into
test
inc
cwde
ret
loope
xchg
pop
(bad)
hlt
pop
jge
push
in
popa
fld
mov
add
push
cmp
lahf
pop
add
fadd
inc
enter
stc
or
or
sub
fstp
out
ja
xchg
fwait
ja
xor
inc
xchg
mov
call
test
push
leave
test
mov
pushf
bound
jmp
pop
pop
ds
or
bound
repz
add
pop
ret
(bad)
xor
push
inc
push
mov
xchg
aad
call
popa
pop
bound
xchg
cmp
mov
stc
ds
lods
add
add
mov
adc
shr
je
retf
inc
jg
add
and
in
jmp
xor
cmp
sub
pshufw
cmp
mov
push
mov
cmp
xchg
jb
ja
pop
inc
cmc
and
(bad)
sub
adc
int
rol
hlt
xor
mov
cmp
aas
mov
cmp
mov
mov
jne
fdivr
data16
repz
pushf
int
out
outs
not
fdivr
popf
sbb
jnp
sbb
ss
ds
mov
add
pop
xchg
inc
dec
mov
mov
fidivr
xor
scas
cmc
loopne
jl
mov
add
dec
call
aad
stc
(bad)
aas
in
in
retf
pop
adc
cmp
sbb
ja
fs
(bad)
mov
test
mov
xchg
or
inc
mov
dec
sub
mov
imul
dec
loope
push
mov
or
mov
add
gs
or
popa
or
aam
cmp
add
jmp
js
mov
xor
or
out
push
fld
mov
cmp
sbb
pop
and
pop
and
(bad)
cli
(bad)
cs
rep
inc
pop
jne
enter
jl
mov
fldenv
stos
or
pop
mov
jmp
cmp
sub
fucomi
jp
stos
retf
mov
loope
mov
push
aad
add
mov
cld
jecxz
jge
xor
(bad)
daa
pop
mov
push
jmp
scas
dec
pop
jns
xchg
pop
jns
addr16
lea
bound
int3
sbb
(bad)
pop
cmp
sub
mul
mov
cwde
leave
ss
mov
dec
or
mov
ja
jno
inc
data16
jg
in
iret
stos
clc
and
call
repz
push
push
push
test
test
sub
(bad)
push
mov
js
mov
push
loopne
push
jp
arpl
mov
mov
mov
mov
jmp
cmp
and
ins
add
imul
mov
dec
cld
pusha
push
inc
or
pop
push
and
daa
add
(bad)
retf
dec
mov
pushf
out
pop
imul
jno
repnz
mov
sub
jmp
fstp
mov
enter
mov
inc
pusha
les
push
shl
push
les
adc
sbb
add
jnp
imul
mov
lods
sub
out
(bad)
sti
shl
sub
shl
mov
sub
add
xor
aam
cmp
rcl
dec
pop
aaa
movs
aas
jge
(bad)
dec
loopne
jle
retf
mov
aam
or
mov
cmovns
out
dec
mov
ret
push
and
sub
xchg
jmp
xchg
dec
repz
(bad)
into
xor
std
sbb
or
jmp
mov
mov
add
(bad)
sbb
cmp
adc
pop
fmul
and
rol
stos
fcomp
and
xor
mov
dec
lahf
retf
mov
adc
xlat
add
or
sbb
(bad)
(bad)
pop
fld1
retf
hlt
iret
nop
cmp
shl
retf
mov
xchg
jmp
cdq
aam
cmp
sub
test
pushf
lods
pop
cmp
jns
cmps
inc
add
sub
lods
mov
in
sub
loop
retf
xchg
dec
push
adc
or
es
push
out
addr16
mov
mov
test
test
dec
rcl
jle
daa
push
lock
cdq
adc
and
jb
xor
repnz
cmp
mov
sbb
dec
pop
add
adc
jo
jne
xor
adc
daa
sbb
mov
popf
or
js
cmp
add
mov
push
sbb
push
(bad)
(bad)
mov
mov
or
dec
push
outs
mov
(bad)
addr16
mov
fcmovnb
push
scas
push
cdq
stc
mov
push
jg
xor
pop
retf
dec
and
push
ins
and
sahf
adc
jecxz
push
xor
call
outs
add
fcmovb
push
pop
mov
lock
cmp
repz
cld
fwait
sbb
jb
pop
jle
or
pop
dec
push
adc
sahf
mov
out
dec
inc
int3
cs
mov
sahf
int
xchg
popa
inc
les
shl
test
sar
and
stc
fistp
xchg
imul
sub
ja
out
iret
not
jl
push
and
push
dec
cs
int
loop
mov
sub
mov
and
pushf
mov
mov
push
test
mov
sbb
enter
mov
jmp
xchg
mov
xchg
sub
lds
lods
adc
sbb
push
imul
push
mov
mov
cmp
push
xchg
and
cli
cs
add
call
dec
imul
fiadd
and
test
mov
mov
jg
lods
(bad)
jbe
cmp
push
mov
addr16
adc
es
(bad)
mov
pop
mov
aaa
lea
push
or
mov
mov
ss
sub
test
mov
sbb
or
clc
jns
bswap
pop
mov
and
scas
mov
or
int3
in
(bad)
adc
aam
ret
push
nop
fisubr
push
rcr
fisub
jmp
shr
(bad)
call
pop
mov
popf
out
sbb
cld
int
pop
ins
fwait
mov
movs
jmp
out
xchg
int3
xchg
xchg
adc
sub
sub
mov
mov
push
jbe
rol
call
in
test
mov
and
adc
adc
arpl
sub
arpl
lods
imul
call
pusha
ins
(bad)
cmp
and
add
pop
or
out
iret
or
test
jns
nop
cli
push
cmp
sub
movs
mov
ror
arpl
or
jecxz
outs
inc
mov
ret
and
sub
js
imul
mov
push
int
fisub
ret
dec
stos
mov
ja
xor
out
fiadd
pop
xchg
xor
sbb
cmps
pop
adc
cmp
in
leave
(bad)
add
sbb
push
cdq
xor
fwait
jbe
fld
neg
jmp
mov
out
popa
or
int
stos
sub
(bad)
xor
mov
xor
popf
cld
jbe
stc
or
pop
push
xor
fidiv
mov
mov
mov
cmp
xor
xor
shl
push
f2xm1
es
and
jae
jne
or
rcr
idiv
fstcw
repz
pop
pushf
nop
nop
xchg
lods
test
repz
call
aam
push
push
xchg
cli
lds
xchg
das
das
jnp
fcom
mov
push
and
int
les
xor
fsub
in
inc
or
loopne
xor
cmp
mov
ja
and
sub
call
(bad)
faddp
xor
sub
cwde
(bad)
rcr
sbb
cli
ins
push
inc
mov
in
arpl
add
movs
fidiv
jae
mov
cmp
mov
test
push
lods
mov
mov
call
dec
mov
scas
js
pop
pop
mov
test
icebp
xor
and
das
mov
int
sub
sbb
jmp
cli
bound
pop
pushf
jnp
cmp
not
frstor
adc
out
mov
jns
iret
repnz
loopne
fsub
dec
fs
mov
lds
or
ror
mov
xchg
pop
sbb
and
adc
sbb
pop
push
hlt
movs
arpl
jmp
sub
xchg
mov
addr16
stos
dec
enter
xchg
push
imul
in
(bad)
add
push
or
ins
xor
shl
stos
add
inc
push
out
mov
fdiv
push
fcom
mov
cmp
ret
jb
stc
dec
neg
jle
sbb
xchg
mov
outs
enter
iret
xchg
dec
jle
popa
sahf
sbb
(bad)
aad
aas
retf
mov
movs
(bad)
test
fst
xchg
mov
int3
xchg
arpl
cmps
inc
push
push
xchg
inc
inc
test
cli
aad
dec
scas
add
push
adc
sti
lods
mov
cmp
scas
test
xor
cmp
sbb
fwait
push
push
adc
and
xchg
inc
fisttp
mov
push
mov
mul
(bad)
fdiv
inc
mov
pop
pop
ret
inc
push
push
lock
push
fmul
ret
adc
fadd
xor
lahf
mov
xor
mov
add
lds
cld
jnp
xchg
inc
and
sbb
jne
aas
cli
(bad)
jmp
push
mov
add
add
call
adc
xlat
and
adc
scas
ficomp
aas
(bad)
popa
adc
stos
loope
xchg
cmps
jbe
xor
nop
mov
inc
mov
pop
rcl
pop
xor
retf
mov
inc
lock
fadd
sbb
scas
fiadd
movs
and
adc
xchg
sti
(bad)
jecxz
mov
dec
cli
out
cmp
inc
jl
movs
(bad)
mov
jmp
cmc
repnz
test
and
mov
cwde
scas
mov
sti
dec
test
mov
adc
dec
sbb
sub
push
mov
lods
jecxz
pop
or
pop
rcl
sbb
loop
les
aam
pushf
je
scas
(bad)
jp
and
mov
ins
in
(bad)
sub
adc
ficom
hlt
xchg
xchg
out
and
in
in
fs
(bad)
sub
dec
fidiv
sti
jle
in
inc
ror
xor
dec
ds
push
sub
mov
xchg
ret
aas
pushf
movs
cdq
popa
cmp
mov
cs
push
cmc
sbb
pop
pop
add
sub
retf
inc
fucomi
repnz
and
iret
adc
sbb
push
rol
jg
push
fnstcw
pop
cwde
jmp
repz
pop
or
addr16
inc
inc
jns
jae
sbb
(bad)
xlat
inc
pop
(bad)
aad
push
bound
mov
and
hlt
ret
mov
inc
mov
out
add
mov
xor
dec
std
bound
lds
(bad)
hlt
fwait
test
pop
shr
xchg
cmps
les
inc
bndstx
xchg
pop
cmc
push
std
xchg
mov
cli
push
add
xchg
mov
adc
lods
sbb
mov
std
sbb
pop
xchg
push
cmps
dec
dec
adc
je
dec
movs
push
xchg
mov
loopne
jl
pop
sbb
pop
jl
jae
lods
scas
int3
xchg
fdivr
push
(bad)
into
outs
mov
(bad)
xchg
mov
mov
sub
or
jnp
sahf
mov
sub
sub
jns
ret
mov
outs
dec
or
test
in
lock
ja
not
mov
inc
retf
add
iret
cmc
or
mov
inc
add
fimul
in
repz
in
icebp
xchg
jmp
dec
xchg
hlt
cmp
cmp
cld
add
lea
sbb
out
rcr
mov
test
jbe
xchg
imul
adc
lods
jg
mov
lods
xchg
cdq
movs
dec
push
add
dec
ins
mov
xor
jecxz
or
inc
jb
inc
mov
inc
mov
int
fstp
fidiv
adc
aas
xchg
mov
sar
ret
rcl
push
adc
xchg
imul
adc
rol
out
shl
push
mov
lods
ret
sbb
(bad)
scas
out
jo
fwait
push
add
in
inc
mov
jecxz
scas
mov
xor
add
mov
div
out
dec
xchg
sub
sub
scas
xchg
imul
scas
mov
xor
outs
(bad)
mov
push
add
add
outs
pop
shr
jp
out
sub
jo
and
fs
push
fsubr
dec
sub
dec
mov
cmp
sub
mov
dec
inc
ret
push
aam
cdq
mov
xor
xchg
pop
clc
outs
repz
jae
jns
int3
xchg
jns
icebp
rcl
ds
xor
inc
es
xor
pop
xchg
std
pop
add
inc
pop
cdq
push
fst
js
sub
cld
fnclex
sar
mov
sub
push
sub
sahf
jae
into
out
cmp
cs
lea
xchg
xchg
ror
cmp
icebp
adc
cwde
cmps
cmps
fisubr
lea
nop
or
cmp
mov
push
dec
xchg
jnp
cmp
cmovs
scas
jp
xor
ins
inc
cmps
add
and
in
mov
cmp
jecxz
loop
inc
cmp
push
sar
pop
or
enter
and
ret
xor
mov
pop
jmp
xor
cmp
lods
lods
and
shl
ins
sub
test
mov
sbb
sub
xor
pusha
leave
xchg
mov
call
mov
in
adc
ret
inc
or
shl
cs
add
cli
popf
mov
arpl
loop
js
sub
fmul
jecxz
clc
in
cmp
outs
cs
sbb
ins
inc
test
ss
sub
test
inc
int3
inc
lods
shl
mov
lds
xor
mov
jmp
mov
sbb
icebp
inc
mov
pop
test
and
sbb
cld
jb
pop
call
mov
lods
adc
popa
mov
push
jne
jno
xchg
xor
clc
push
cwde
(bad)
fsubp
cmp
mov
dec
cdq
dec
pop
test
les
or
js
sub
jnp
dec
push
pushf
retf
sbb
ds
mov
add
sub
or
lods
or
mov
adc
push
push
popa
popf
dec
call
cs
mul
push
popa
mov
sti
into
xchg
sub
pop
jge
xchg
loopne
pop
xor
std
popf
mov
pop
adc
cli
shr
mov
arpl
mov
cs
movs
push
mov
xchg
sub
sbb
(bad)
dec
and
rcr
mov
xchg
mov
sar
jbe
mov
pop
test
push
dec
pop
mov
push
aam
aas
(bad)
daa
inc
or
pushf
sti
inc
ins
pop
lock
sbb
xchg
aas
retf
sahf
mov
jmp
or
and
lods
loope
out
mov
sub
dec
jns
mov
popa
xchg
ins
inc
scas
add
jb
pop
fucomi
pop
add
call
mov
sub
sub
loopne
scas
rcr
fwait
xor
outs
sbb
adc
or
fsubp
lds
cmp
scas
sbb
les
pushf
pop
loopne
out
leave
cmp
int
adc
loopne
jmp
dec
cmp
je
dec
scas
gs
test
stc
loope
cmp
cdq
mov
pushf
jmp
iret
xchg
xor
sbb
cli
push
add
xchg
add
xchg
lds
cdq
gs
jae
mov
mov
sub
je
xchg
push
cmp
cdq
push
adc
in
or
(bad)
lahf
push
cwde
test
adc
fnstsw
mov
retf
je
ja
sbb
sbb
in
mov
ins
xor
(bad)
lock
pusha
popa
std
push
mov
scas
sbb
loop
(bad)
pushf
jp
hlt
and
stos
fadd
mov
push
jae
ins
(bad)
mov
add
mov
or
bound
pop
push
and
sub
and
mov
pop
pop
leave
repnz
mov
fdivr
push
test
lods
ror
dec
mov
cmp
in
lods
mov
mov
stc
mov
push
adc
mov
mov
or
sbb
mov
cld
lahf
neg
mov
leave
cmp
add
inc
jg
pop
push
mov
sbb
add
test
sbb
dec
lahf
(bad)
jecxz
jle
dec
loopne
ret
imul
je
or
adc
inc
outs
enter
sbb
inc
daa
cmps
xchg
lock
pop
out
mov
aaa
fs
xchg
jmp
cli
shr
outs
jl
int3
ja
jl
cmp
mov
ja
or
jmp
mov
xchg
dec
mov
into
xchg
jp
repnz
push
mov
pop
aas
test
xchg
sbb
lahf
nop
cs
inc
and
fwait
sti
imul
cli
xchg
call
(bad)
clc
and
pop
stc
ins
sti
lods
xchg
sub
sbb
ret
sti
adc
movs
pop
popf
xchg
mov
pop
ja
adc
add
dec
(bad)
gs
ret
loop
jmp
mov
punpckhwd
or
loop
cmp
(bad)
or
fld
dec
daa
cmps
mov
stos
xchg
test
out
mov
sub
inc
cmp
neg
pop
arpl
enter
jnp
nop
jne
ins
(bad)
pop
cmp
inc
fst
and
sub
out
mov
outs
repz
jp
cmp
cwde
(bad)
and
lods
mov
mov
sbb
push
pusha
xchg
inc
adc
pop
mov
jg
xchg
leave
mov
xor
jns
punpckhwd
int
inc
scas
dec
popf
vminps
rol
ret
add
mov
inc
pop
push
scas
fisub
cmp
and
mov
loopne
(bad)
jmp
ja
mov
sub
std
(bad)
mov
mov
xchg
std
sbb
fs
iret
fwait
inc
xchg
pop
lods
jb
mov
and
out
mov
mov
daa
or
in
imul
cmps
pop
scas
pop
popa
mov
or
gs
mov
cmc
outs
mov
mov
cmp
in
dec
popa
dec
les
inc
xlat
inc
ins
jge
and
push
scas
fisttp
dec
cmp
das
call
push
(bad)
sbb
test
and
xor
sub
sub
push
add
sbb
rol
les
push
(bad)
nop
out
xlat
jl
(bad)
pop
jle
inc
(bad)
repnz
sub
xor
int
lock
addr16
pop
pop
(bad)
dec
int
mov
bound
shl
lahf
push
in
dec
dec
sub
(bad)
ja
and
jg
xchg
pop
lods
add
adc
rcl
dec
mov
xchg
nop
xor
not
pushf
imul
lds
ss
scas
shl
jo
add
mov
jns
adc
add
dec
cmp
not
int
out
mov
popa
into
mov
jo
adc
inc
jmp
mov
add
jbe
sub
je
sbb
mov
(bad)
jns
jp
in
fst
sub
or
inc
ja
iret
push
cmps
cli
pushf
jle
loop
into
loopne
test
(bad)
(bad)
jge
inc
ret
(bad)
cdq
or
push
mov
inc
sub
xchg
xchg
push
cmp
pop
dec
shl
ret
ja
jnp
dec
sahf
mov
imul
or
es
out
into
imul
jnp
sbb
push
in
fmul
xor
fstp
cmp
imul
cmps
aaa
inc
nop
rcl
sti
and
aam
ins
or
out
jnp
mov
push
imul
das
dec
inc
inc
jno
test
sbb
enter
mov
(bad)
mov
pop
and
dec
enter
mov
in
pop
sbb
push
js
sti
push
(bad)
out
inc
fld
jle
xchg
pusha
sub
jp
inc
aad
lock
mov
adc
sub
cdq
cmp
pop
push
aad
xor
mov
(bad)
xchg
in
sbb
and
and
pop
fsubrp
dec
adc
pop
push
cmp
(bad)
in
loope
stos
scas
ret
(bad)
cs
stos
pop
sbb
cli
fidiv
cmp
sbb
and
push
dec
cli
jecxz
inc
or
jnp
push
aas
ins
jmp
pop
pop
xchg
mov
je
adc
inc
sbb
inc
push
sbb
sub
cmps
mov
xchg
int
inc
push
push
lea
mov
mov
aam
(bad)
hlt
pop
add
outs
jmp
dec
xor
mov
mov
mov
mov
jno
(bad)
sub
nop
push
or
dec
xchg
xor
je
jle
jns
in
es
add
push
clc
int
add
xchg
xor
adc
mov
push
mov
cmp
add
jo
sub
add
or
lods
fld
pop
nop
xchg
in
xlat
(bad)
out
shl
int3
lahf
ss
jo
push
mov
arpl
movs
mov
xchg
push
pop
push
daa
daa
repnz
mov
mov
(bad)
aas
addr16
sub
outs
sub
stos
adc
ins
mov
ror
and
sub
mov
mov
push
inc
int3
xor
push
shl
data16
jns
mov
mov
adc
arpl
adc
or
push
xor
ror
sbb
cmp
vhsubpd
fnsave
scas
adc
mov
cmp
data16
xor
sar
cs
ret
push
loope
adc
(bad)
push
adc
push
outs
cmps
push
inc
addr16
lahf
pop
(bad)
push
mov
js
ins
outs
dec
mov
mov
repnz
es
xchg
xor
or
cmp
inc
inc
xor
int3
in
aaa
jne
arpl
and
jge
jnp
mov
jns
jecxz
popf
dec
xor
jns
inc
mov
push
imul
sti
hlt
hlt
clc
dec
xchg
push
or
cmp
fsubr
mov
sbb
mov
out
mov
cmps
mov
iret
xchg
mov
push
in
retf
aam
push
out
xchg
xchg
push
xchg
div
xchg
(bad)
jmp
cmp
aad
or
mov
mov
dec
nop
retf
mov
rcr
cmp
loope
ret
mov
pop
sub
mov
mov
inc
into
sar
stos
sub
les
add
pop
iret
leave
cmp
repz
dec
mov
out
adc
jns
out
psubusb
std
popf
das
fwait
or
add
loope
push
dec
in
cld
lds
inc
jb
push
and
cld
xchg
or
imul
jo
jecxz
push
add
jno
push
ret
cmp
inc
sbb
adc
adc
aas
add
add
sbb
sub
je
std
mov
push
stos
jmp
leave
in
push
xor
rep
out
add
sbb
je
xchg
aad
es
xor
dec
lds
(bad)
bound
mov
lahf
push
xor
push
cwde
lahf
xchg
sub
and
out
fimul
sbb
aad
cmps
sub
jo
(bad)
stc
inc
pop
xor
into
sbb
loopne
test
push
aas
and
call
add
imul
inc
popa
dec
xor
out
push
xor
and
mov
in
push
out
in
xor
add
sub
xor
add
cmp
out
fsubr
xchg
mov
loop
repnz
ins
adc
pop
cmp
jg
xor
adc
push
pop
pmulhw
push
outs
pop
mov
setg
xlat
ins
sbb
mov
mov
call
mov
mov
pop
aas
pop
push
dec
adc
add
fxch
scas
clc
shr
pop
mov
mov
cmp
pop
mov
in
xchg
std
dec
xchg
dec
xchg
push
or
loope
mov
xor
xlat
inc
pop
loop
push
dec
repz
push
sbb
ins
cmps
mov
or
icebp
cmps
mov
fwait
mov
xchg
or
test
les
dec
mov
or
out
mov
loop
cld
push
outs
pop
jns
std
scas
dec
and
out
cmp
cmps
cld
sbb
loope
jb
out
out
ss
cmp
xchg
scas
inc
add
out
or
dec
push
lock
mov
pushf
cwde
sahf
sar
stc
(bad)
stos
call
xor
sbb
lds
cmps
adc
shr
pop
xchg
push
outs
pop
jp
stos
mov
or
fldenv
mov
sahf
ds
xchg
fmul
cwde
fs
lods
adc
repz
shl
jb
cld
add
out
js
loope
and
je
(bad)
imul
mov
je
mov
add
jl
scas
fs
fbld
mov
inc
addr16
xor
icebp
sbb
pop
pop
lds
adc
mov
adc
sbb
and
rcl
jmp
pop
fsub
in
mov
and
cwde
pop
movs
xor
sub
cmp
mov
mov
daa
in
cmp
fcom
icebp
(bad)
sbb
popf
jnp
neg
test
mov
dec
mov
dec
nop
cmp
sbb
add
add
movd
pusha
out
pushf
or
sbb
shl
mov
in
dec
adc
sbb
je
stos
jns
fcmovu
pop
sbb
push
enter
xchg
xchg
test
mov
ror
in
xor
mov
adc
pop
cmps
fild
sti
aas
adc
mov
or
sub
pop
ret
mov
repnz
mov
xchg
cmp
adc
jge
and
push
cmp
lahf
(bad)
jnp
(bad)
and
xor
xor
xchg
and
add
lea
push
dec
cmps
ja
jge
push
push
pop
adc
in
cdq
in
xchg
xor
fwait
dec
and
inc
jb
in
adc
xchg
scas
dec
stos
add
in
cmp
jbe
cmp
adc
sbb
dec
ins
(bad)
mov
sbb
rcr
dec
rcr
jmp
cmps
ja
mov
pop
aam
inc
bound
imul
or
ins
and
jg
(bad)
int3
and
in
xlat
pcmpgtb
fild
xchg
jle
arpl
(bad)
cs
cwde
jmp
(bad)
and
pushf
aas
push
push
cdq
inc
js
hlt
test
push
sbb
push
fbstp
rol
mov
sbb
bound
adc
iret
mov
sub
jge
lock
pop
movs
jecxz
dec
cmp
in
mov
fcmovne
cld
sbb
add
sub
aad
mov
and
mov
mul
test
int3
jbe
jle
sbb
mov
and
stos
pop
les
push
lods
push
aad
jb
push
lods
dec
test
neg
rcr
dec
mov
jecxz
jle
add
es
cmp
add
dec
xchg
mov
cmp
lea
pmullw
dec
stc
cwde
cmp
pusha
or
lea
xchg
jmp
jmp
aaa
fst
push
cld
cwde
outs
fstp
gs
sbb
ja
adc
lea
(bad)
sub
add
mov
ret
cmova
xchg
jns
mov
sub
loope
cmp
call
and
sbb
inc
xchg
sbb
cli
lods
test
mov
jp
das
pop
pushf
fdiv
sbb
cmp
imul
inc
shl
fdivr
not
shl
jo
shl
xlat
xchg
mov
(bad)
mov
inc
sti
mov
in
pop
and
mov
jg
inc
xchg
aaa
or
push
sbb
int
xor
dec
or
cmc
gs
jmp
jbe
inc
out
sbb
popf
sub
and
imul
dec
mov
(bad)
dec
stos
adc
hlt
(bad)
mov
sub
pause
daa
sub
push
(bad)
(bad)
out
mov
ret
js
lock
fisubr
pop
addr16
int
pusha
into
aam
stos
addr16
inc
mov
inc
fsubrp
jne
sbb
push
adc
jl
mov
xor
lock
mov
push
adc
jp
and
ja
adc
movs
add
sahf
je
jl
ins
sahf
sub
es
inc
mov
int3
inc
sub
rcl
test
cmp
adc
inc
(bad)
sahf
mov
test
in
mov
fnstcw
xlat
test
pop
mov
ds
rcr
adc
sub
mov
out
sub
ins
repnz
cmp
pop
push
mov
aad
(bad)
outs
dec
mov
lock
push
jae
add
sbb
aas
mov
pop
test
push
push
aas
mov
test
fstp
sub
stos
mov
rcr
xchg
mov
(bad)
shl
int3
movs
jae
jns
sar
lods
jbe
(bad)
sahf
and
lahf
test
in
mov
adc
pop
xchg
xchg
sub
sbb
outs
mov
ret
pop
inc
lahf
cs
(bad)
in
xchg
fist
sahf
mov
cmp
add
cmp
clc
xor
retf
pop
sbb
adc
sub
or
aaa
inc
mov
in
dec
cmp
loop
pusha
xchg
pusha
cmps
ret
xchg
jl
test
push
jmp
mov
adc
and
dec
aas
sbb
dec
xor
shl
cmp
or
shl
test
adc
fsubr
mov
adc
jnp
or
mov
call
xor
cmp
sbb
cdq
add
inc
out
rcl
ficomp
cwde
push
nop
xchg
cmp
and
add
js
repz
fwait
jmp
call
into
sti
mov
sahf
jno
or
dec
sub
xor
cmp
xchg
shr
movs
lock
push
sub
add
cmps
cmp
call
cmp
dec
int3
aad
retf
cmp
push
into
cmps
jmp
je
mov
or
cmp
outs
inc
cld
push
jmp
lahf
sub
mov
(bad)
pop
arpl
jl
je
or
or
pop
xchg
test
int3
pop
aaa
jecxz
mov
ja
retf
daa
inc
into
enter
or
sbb
ja
std
jp
nop
fisub
xor
adc
int
inc
bound
sbb
movs
arpl
adc
inc
jge
cwde
test
scas
in
test
sbb
outs
jo
push
xchg
ja
movs
fstp
ja
lods
adc
mov
stos
mov
call
inc
sub
mov
adc
or
sub
fdivr
cmp
stos
not
mov
jno
pop
mov
cmps
sub
add
mov
aam
pop
scas
(bad)
(bad)
sahf
adc
int3
test
sti
mov
bswap
jnp
mov
std
push
loop
ss
or
sbb
int
imul
mov
mov
pop
mov
retf
xchg
ror
addr16
adc
sub
pop
lahf
inc
add
mov
xchg
unpcklps
jns
mov
jmp
test
movs
and
xchg
lock
rcl
jmp
and
xor
lea
add
sbb
mov
fdivrp
dec
idiv
(bad)
pop
or
int
(bad)
loope
enter
cmps
cmp
inc
xor
lea
lahf
js
out
and
out
out
test
inc
pop
iret
adc
or
push
cmps
sub
dec
int3
(bad)
out
(bad)
fwait
out
loopne
jge
or
mov
sbb
jae
dec
push
mov
imul
or
adc
nop
mov
pop
pop
out
or
retf
xchg
les
cmp
jbe
mov
jno
into
inc
dec
arpl
aas
aad
clc
aaa
pop
mov
jl
sub
pusha
inc
sbb
pop
pushf
pop
xor
mov
cmp
inc
xlat
mov
jecxz
rcl
pusha
xchg
or
inc
mov
dec
(bad)
push
(bad)
adc
add
dec
stos
cwde
mov
mov
je
addr16
sbb
xor
in
into
cmc
jp
or
fsubr
pushf
xor
(bad)
cli
cmp
sub
test
inc
xor
and
and
and
mov
push
dec
mov
jno
mov
mov
shr
dec
iret
mov
add
mov
jo
push
xlat
jns
cmc
movs
and
leave
inc
mov
jo
out
in
cmp
sub
mov
aad
cs
adc
(bad)
and
cmp
add
pop
sbb
mov
pop
fisttp
sub
pop
push
sahf
in
clc
repnz
je
jecxz
jmp
mov
pop
xchg
loopne
xor
jmp
pop
mov
fsub
mov
sahf
dec
sub
pop
mov
std
icebp
push
test
xchg
cmp
in
std
aad
push
iret
inc
int3
or
ficomp
push
sti
int3
sub
aas
mov
(bad)
(bad)
sar
scas
imul
bound
pop
cdq
or
stos
sahf
dec
fcmovnbe
mov
call
pushf
aas
xlat
ds
test
ror
push
cld
mov
or
xchg
ret
xchg
and
shr
cmp
jp
jb
adc
call
sbb
push
cmps
lods
sar
pop
arpl
retf
in
std
pop
ins
mov
xchg
inc
sub
call
pop
mov
inc
rcr
adc
push
popa
sub
adc
add
sar
leave
nop
test
mov
mov
imul
jb
or
mov
mov
icebp
push
xchg
push
pop
ror
cmp
and
movs
aas
mov
pop
jmp
dec
push
sub
(bad)
xchg
adc
inc
mov
sbb
mov
rcl
xchg
add
jp
repnz
inc
(bad)
pop
xlat
cmp
adc
aas
bnd
cmp
in
and
cli
ss
pop
sbb
xlat
mov
rol
mov
mov
xor
sti
jg
dec
cmp
adc
dec
imul
ror
out
loopne
das
in
test
retf
mov
inc
jb
pop
stos
scas
sbb
hlt
hlt
mov
lock
adc
adc
(bad)
push
rcr
sar
addr16
xchg
leave
or
xor
dec
int3
out
outs
or
pop
cmps
out
dec
fcom
jbe
jmp
jbe
movs
rcl
inc
jg
into
mov
xchg
or
cli
and
jp
add
mov
push
fistp
loopne
or
xchg
mov
pushf
iret
push
sbb
lods
or
jl
call
adc
xor
(bad)
loop
test
mov
imul
iret
mov
fwait
ret
adc
movs
pop
fbld
dec
mov
call
add
mov
inc
push
push
aaa
adc
or
xchg
fsub
xchg
sbb
push
sub
cmps
mov
cmp
dec
sub
pop
js
inc
mov
add
rcl
dec
or
arpl
inc
cld
adc
xor
mov
lods
(bad)
or
cli
cld
adc
sub
cmp
movs
push
aam
adc
add
(bad)
mov
daa
sub
adc
cmp
pop
mov
ficom
push
fld
and
jmp
(bad)
pushf
into
push
pop
out
mov
add
lock
es
inc
xchg
xchg
cdq
in
xchg
into
repnz
mov
xchg
push
dec
pusha
pop
cmp
test
mov
aad
pop
ins
push
mov
cli
daa
jmp
sub
xchg
cmp
mov
fcom
out
and
daa
xchg
loop
mov
bound
hlt
cmp
add
in
cmc
push
test
adc
test
enter
jge
add
jo
xchg
cmp
pusha
adc
call
dec
ret
rol
or
and
clc
mov
mov
xor
call
mov
das
gs
jl
data16
jno
push
inc
inc
cmp
xor
fnstenv
adc
inc
mov
fadd
(bad)
jbe
sbb
es
xchg
cmc
imul
lahf
push
idiv
pop
(bad)
xor
mov
adc
add
fisttp
ds
mov
mov
xchg
mov
sub
test
and
inc
out
cs
out
xchg
enter
jns
xchg
mov
jecxz
out
bound
loop
rep
mov
dec
cmp
fst
ror
jmp
in
std
fistp
pop
pop
leave
cmps
(bad)
ss
fistp
pop
aad
add
jae
pop
dec
mov
xlat
lahf
sbb
push
movs
push
jae
push
mov
mov
(bad)
pop
jo
sub
fadd
push
mov
pusha
fsub
pop
jbe
retf
scas
adc
mov
push
mov
mov
adc
and
push
or
in
jo
xchg
sbb
mov
add
fs
std
fbld
loop
pop
mov
mov
das
outs
mov
repz
or
adc
jge
or
ins
iret
add
adc
cmps
jp
adc
dec
(bad)
mov
clc
fild
mov
sbb
out
lods
xchg
ins
mov
xchg
sbb
and
and
clc
fsubr
ja
icebp
pop
xchg
mov
stc
rcr
jecxz
xlat
dec
mov
or
sub
stc
scas
in
in
pop
push
pop
stos
or
jmp
es
mov
and
push
inc
arpl
push
jae
into
xchg
aaa
xchg
scas
xor
mov
push
dec
out
adc
movs
xchg
mul
pop
aad
xor
sub
shr
push
aad
movaps
add
sub
xor
or
sub
cmp
les
into
jno
push
mov
mov
popa
mov
jnp
out
sbb
rol
test
test
mov
sbb
cmps
sbb
dec
mov
cmp
aam
mov
imul
lock
imul
fnstenv
xchg
iret
mov
or
ja
stc
test
and
fcmovnb
in
lds
ret
push
outs
xlat
les
mov
push
idiv
dec
xchg
add
dec
or
pop
jo
in
lods
out
xchg
pop
xor
cmp
aaa
mov
loope
xor
outs
add
bound
movs
ss
mov
jno
out
ficom
sub
call
or
jp
stos
(bad)
in
or
sbb
rol
dec
hlt
jmp
(bad)
pushf
sbb
jge
pop
xor
inc
cwde
sar
inc
fwait
jbe
push
mov
cld
sbb
xor
jmp
dec
dec
mov
cdq
loopne
adc
addr16
pusha
lods
bound
mov
sbb
daa
xor
jg
lods
mov
jne
push
test
cmp
xchg
inc
adc
pop
dec
imul
xor
mul
sub
scas
shl
sti
das
dec
mov
hlt
movs
mov
xchg
jg
xchg
imul
int
add
add
aad
ins
cmp
xor
mov
xchg
pop
stc
adc
add
cwde
mov
movs
imul
je
test
cwde
pusha
xchg
hlt
dec
mov
lock
sub
jnp
cmp
sub
xlat
mov
adc
pop
jne
je
cmp
js
mov
push
cmc
mov
sbb
cmps
mov
jno
and
leave
mov
push
mov
inc
sbb
sbb
dec
mov
xchg
sti
dec
rcl
xor
pop
and
push
pop
xor
ds
retf
inc
pop
inc
cmps
push
mov
xchg
xor
add
sub
xchg
scas
mov
and
inc
add
pop
dec
dec
mov
jne
(bad)
cmp
sbb
test
mov
jg
fdiv
mov
push
fsub
cmp
dec
nop
dec
cdq
ja
rcr
and
std
inc
and
cdq
mov
out
lods
rcr
movs
mov
push
outs
lods
es
mov
neg
icebp
mov
mov
inc
mov
dec
aad
add
add
ja
cmc
xchg
cmp
ror
mov
fldcw
fsubrp
jp
lahf
adc
mov
jg
add
pop
sub
rcl
pushf
xor
mov
mov
dec
cli
or
ja
mov
div
cs
pop
ret
(bad)
xor
out
jnp
ins
call
or
inc
sbb
stos
xor
leave
dec
call
mov
mov
xchg
dec
pop
rol
xchg
jmp
pop
sbb
sar
jp
clc
(bad)
sub
mov
cmc
mov
mov
xor
and
jmp
jmp
mov
xchg
sbb
dec
mov
inc
fsub
loope
(bad)
ja
dec
out
out
fsubr
jns
stos
mov
ds
mov
mov
mov
pusha
ret
stos
pop
add
movs
aad
mov
sahf
(bad)
sub
out
(bad)
jo
mov
neg
sbb
into
pushf
das
popf
test
xchg
ins
in
test
jns
cmp
repz
arpl
mov
jmp
or
mov
mov
lahf
inc
(bad)
pop
pop
mov
sbb
inc
out
jmp
int
fstp
call
push
aad
rcl
test
enter
add
fs
(bad)
fsub
xchg
(bad)
les
out
fist
in
scas
or
call
and
fcmovb
jp
in
or
div
loop
mul
mov
fimul
shl
pop
cld
inc
pop
ja
mov
push
sub
cmp
fcmovu
lods
inc
pop
add
sbb
in
cwde
clc
fucomi
test
jbe
outs
add
inc
imul
pop
jns
dec
lds
call
mov
lock
jne
mov
xchg
push
ret
or
mov
ins
fcomp
jbe
lock
inc
sub
cmp
(bad)
dec
jg
sti
push
outs
pusha
in
dec
jecxz
rcl
jge
dec
inc
ins
and
int3
jg
mov
sbb
add
sub
scas
pop
mov
ins
mov
mov
(bad)
bnd
sub
adc
cmc
cmp
cmp
pop
loop
add
mov
aad
and
ins
add
test
dec
or
xor
mov
(bad)
in
jmp
cs
cs
mov
fist
stc
lds
dec
push
cmp
(bad)
push
in
(bad)
xchg
inc
sbb
jno
add
test
pop
or
(bad)
xchg
js
scas
(bad)
popa
jg
shl
mov
fwait
loop
stos
vprotd
push
cmp
idiv
mov
xchg
pop
push
xor
push
das
(bad)
pop
dec
pop
mov
or
jmp
and
sbb
cmp
pop
mov
out
jle
cdq
call
data16
dec
lock
repnz
fst
sub
sti
fstp
stc
mov
hlt
int
call
sub
or
and
(bad)
in
lods
mov
call
loopne
push
lahf
pop
dec
cmp
std
pop
cmp
outs
retf
jle
xchg
and
ds
add
pop
sbb
dec
lods
ds
pop
adc
in
ror
adc
ret
pop
add
sub
mov
xor
jmp
fdiv
dec
imul
add
hlt
and
mov
pop
cmp
xor
clc
cdq
ret
(bad)
imul
lds
dec
inc
pop
jp
ret
or
arpl
dec
xchg
shl
inc
cmps
mov
test
es
inc
mov
movs
or
inc
mov
xchg
add
fsub
or
fmulp
jnp
inc
clc
inc
cmp
sub
loopne
xor
neg
xor
xlat
rcl
and
cwde
jmp
push
gs
and
sub
fisubr
xchg
icebp
fwait
popa
rcr
ds
retf
push
mov
cmp
sub
sti
fdiv
in
inc
jmp
inc
iret
mov
sar
clc
fnstcw
or
test
hlt
ins
and
stos
pop
arpl
or
popa
(bad)
gs
rcl
icebp
data16
in
out
(bad)
icebp
xchg
jns
fbstp
jbe
scas
sbb
idiv
aaa
push
add
push
dec
mov
jmp
out
test
in
sbb
push
stc
cmc
xor
push
and
and
add
or
sbb
or
inc
mov
std
or
and
cmp
ror
xor
ja
retf
mov
add
mov
inc
xor
js
fild
or
popa
inc
cmps
mov
jle
dec
daa
pop
call
inc
add
mov
pop
cli
not
xlat
mov
cmp
aam
add
or
cmp
push
das
aam
je
mov
mov
and
fs
inc
imul
loopne
inc
pop
cld
inc
dec
push
xor
fdivr
jmp
ficom
mov
cmps
out
jg
cmp
ds
(bad)
in
dec
adc
dec
cmp
push
jg
fadd
mov
mov
dec
dec
and
(bad)
or
jbe
enter
push
out
fwait
push
gs
mov
sbb
outs
ins
jo
imul
test
inc
int3
pushf
outs
or
fxch
fsub
cmp
adc
loop
pushf
les
ja
inc
imul
push
pop
aas
xor
out
scas
jp
xchg
jmp
mov
out
mov
jecxz
xor
ficom
jl
inc
xchg
xor
rcr
mov
jns
aas
mov
aam
aad
nop
adc
cmps
mov
pop
shr
vxorps
or
ja
test
sub
fmul
movs
jb
mov
out
jmp
sbb
stos
mov
sub
mov
mov
dec
lock
dec
cmps
adc
or
out
xor
push
sar
retf
mov
les
jecxz
(bad)
call
cdq
data16
mov
adc
loope
mov
add
lock
xchg
aam
xchg
(bad)
pop
in
jge
sub
and
push
mov
sahf
ds
mov
fdiv
fldenv
loopne
cmp
in
adc
mov
adc
push
mov
cmps
jecxz
mov
pop
cmp
popa
enter
retf
or
cmps
in
jne
jge
cmp
or
inc
hlt
add
mov
fwait
sti
(bad)
int3
mov
pop
retf
xchg
test
xchg
sbb
push
add
arpl
or
adc
sbb
jge
xchg
mov
mov
or
loopne
rcl
sbb
sub
fstp
cmp
aam
adc
xacquire
fxch
pop
hlt
and
xchg
out
scas
and
rol
hlt
xchg
pop
fdiv
das
dec
dec
call
sbb
rol
pop
stos
std
xchg
(bad)
loope
int
xor
push
rcl
shr
fs
dec
xor
inc
xchg
xor
xchg
sub
sbb
xchg
(bad)
mov
or
pop
loopne
fwait
and
xor
test
mov
aas
ror
adc
push
dec
or
arpl
mov
xchg
mov
aas
fild
mov
into
aas
rcr
fisubr
ins
mov
minps
mov
push
fisub
sahf
retf
leave
adc
push
test
das
(bad)
jmp
jp
mov
cmp
or
mov
mov
push
stos
gs
adc
outs
mul
lahf
fistp
lock
pop
sub
cmp
cmp
xchg
inc
retf
les
ror
and
inc
or
add
fsubr
out
xchg
inc
es
lods
imul
cmps
data16
dec
or
mov
pop
adc
outs
les
data16
mov
int3
xchg
mov
sbb
xchg
call
stos
adc
out
or
pop
cwde
test
in
sbb
cdq
mov
jo
push
cmp
sub
push
pop
pop
dec
test
add
push
xor
sbb
adc
test
sahf
mov
sub
call
push
sbb
retf
jno
add
xchg
jo
sbb
std
sbb
aas
jge
add
mov
sub
fdiv
jae
sti
mov
pop
or
fcomp
jbe
pop
fmul
or
mov
(bad)
cli
xor
inc
outs
mov
push
scas
inc
sub
mov
(bad)
xchg
jp
cmp
inc
movs
sbb
dec
call
out
lds
xor
mov
mov
jbe
pop
ss
psraw
jl
push
cmp
push
mov
sub
mov
fwait
daa
jnp
cmp
scas
nop
iret
jp
int3
pop
cmp
jns
pop
xchg
sub
xor
popf
or
jg
mov
xor
add
mov
loop
push
lds
mov
xchg
xchg
xchg
xchg
add
es
xchg
add
xchg
cmp
fs
cmp
ss
into
mov
push
test
adc
enter
add
stos
out
(bad)
movs
push
sub
push
pop
and
mov
fwait
cdq
imul
jnp
aas
push
in
inc
fimul
in
aad
push
and
and
sbb
xchg
cmp
cmps
pop
add
jnp
xchg
add
(bad)
outs
movs
dec
out
stos
push
jnp
cdq
xchg
cdq
push
inc
mov
outs
jo
pcmpgtb
jle
movs
ins
mov
out
xchg
lods
arpl
js
pop
ins
pop
les
in
repz
out
fadd
mov
les
fucomi
or
sbb
cmp
sbb
lock
sti
fst
addr16
jp
mov
(bad)
jne
jmp
jo
es
popa
rol
mov
cmps
jne
icebp
add
out
push
je
mov
cs
lea
lahf
in
test
xor
out
cmc
mov
dec
cmp
int3
pushf
(bad)
jmp
xor
enter
push
jmp
retf
in
cmps
iret
outs
mov
ret
sub
push
mov
jecxz
dec
dec
cmp
cdq
lods
dec
(bad)
pop
sbb
inc
ins
jae
inc
xchg
stc
cmp
(bad)
mov
in
cmps
sub
xlat
fadd
lock
sub
out
wrmsr
ins
scas
pop
lock
aaa
xchg
and
mov
lock
pop
inc
mov
daa
lea
inc
dec
ret
clc
push
mov
jns
dec
enter
clc
sub
addr16
(bad)
jge
dec
or
push
sub
inc
icebp
pusha
mov
inc
call
(bad)
fwait
xor
sti
lds
xchg
std
or
ret
bound
sub
xchg
shr
fsub
(bad)
xchg
sub
mov
sub
jmp
adc
inc
jecxz
fnstenv
lahf
sub
lock
or
cmps
mov
dec
ins
aas
jmp
push
arpl
jle
xor
xchg
xchg
sub
ins
icebp
mov
pop
mov
mov
mov
push
bswap
add
fsub
(bad)
(bad)
loop
pop
cmps
pusha
call
cmp
mov
rcr
jecxz
push
pop
push
retf
push
stc
push
xchg
out
xlat
add
xchg
sub
jmp
mov
mov
mov
xchg
icebp
xchg
inc
push
cdq
dec
mov
das
repnz
add
add
xchg
mov
cld
call
lea
sub
jl
and
and
sub
neg
icebp
add
aas
mov
add
mov
imul
call
add
sti
pop
add
arpl
std
ss
add
ins
fdivr
adc
dec
ret
jmp
fwait
pushf
aam
pushf
in
inc
mov
sar
test
adc
das
mov
leave
shr
push
int3
add
into
outs
popa
std
mov
xor
cmc
daa
nop
pop
and
out
mov
push
pop
das
enter
pop
mov
or
push
das
icebp
xchg
jne
aas
movs
cmp
mov
mov
sbb
das
bound
cmp
inc
(bad)
fdivr
cmp
imul
push
popa
jo
add
ss
adc
(bad)
cld
int
mov
fcomp
loope
in
rol
inc
ins
(bad)
sbb
ret
mov
outs
mov
(bad)
imul
mov
push
ret
lods
call
xchg
adc
pop
pop
add
mov
popa
lock
outs
(bad)
div
icebp
enter
fld
shr
xor
stos
nop
cmps
push
ins
cdq
idiv
fcomp
imul
inc
sbb
bound
xchg
xor
inc
mov
(bad)
pusha
inc
dec
push
mov
add
mov
rcl
cwde
dec
xchg
(bad)
je
mov
mov
add
xchg
scas
adc
xchg
cwde
cdq
or
inc
jge
aam
fadd
add
mov
sbb
cmp
add
pop
dec
loope
add
pop
jno
and
hlt
ret
movnti
mov
lock
inc
adc
mov
loop
sub
test
xor
mov
cmp
inc
arpl
(bad)
mov
adc
daa
xchg
or
sub
and
sahf
sar
out
cmps
sbb
pop
inc
bound
es
mov
xchg
mov
pop
addr16
call
mul
jmp
cmp
pop
xor
dec
xor
fadd
movs
push
xchg
dec
or
call
pop
and
inc
mov
in
imul
fs
jge
ret
imul
mov
sub
dec
sbb
mov
cs
mov
imul
popa
xchg
idiv
ret
push
cmp
adc
mov
xchg
js
retf
call
es
pop
js
test
mov
adc
mov
and
sbb
cmps
sub
adc
jecxz
sahf
pop
dec
fmulp
lods
add
mov
test
idiv
push
and
cmp
fwait
and
pusha
retf
test
pop
mov
xor
iret
xchg
cmps
ins
in
cmp
loop
jg
lods
inc
ror
mov
cmps
xchg
mov
dec
in
pop
or
clc
clc
adc
adc
mov
mov
mov
fdivr
mov
jge
in
mov
aad
rcr
adc
fmul
xchg
and
loope
cmc
jnp
out
sahf
(bad)
call
mov
fs
sar
jmp
loop
adc
loope
ins
rcl
xchg
inc
mov
bound
cmp
data16
or
lods
stc
out
sbb
fs
arpl
fstp
cmp
xor
jp
jne
rcr
out
movs
not
in
in
lahf
stos
mov
repz
in
sahf
jle
int
mov
adc
repz
ins
mov
push
jnp
shl
add
fwait
scas
fidiv
sub
movs
pop
aam
dec
sbb
pushf
push
aad
mov
add
and
xlat
adc
jb
mov
mov
xor
gs
mov
add
ror
xchg
mov
ror
jp
ss
retf
leave
xor
jnp
sbb
push
mov
dec
mov
pushf
dec
or
jb
mov
pop
jecxz
imul
and
out
pop
add
mov
or
adc
sub
mov
pop
rol
mov
jmp
sbb
jecxz
out
jno
in
sub
or
mul
sub
pop
ins
retf
rcr
or
aas
xor
fist
loope
cwde
sub
stos
in
dec
ss
xchg
jb
xlat
xor
pop
aaa
xor
jno
jge
outs
aaa
mov
addr16
mov
rcl
fsubr
cmp
add
lock
out
inc
add
inc
aam
ret
xchg
arpl
xor
fsubrp
add
mov
fdivr
movs
jle
enter
fwait
xor
mov
pop
pop
mov
mov
out
retf
dec
bound
push
xor
dec
sahf
cli
or
dec
lahf
gs
lods
cmp
xor
jnp
mov
sahf
dec
sub
jge
neg
jmp
cli
ins
push
rcr
(bad)
mov
or
adc
push
add
mov
jecxz
xor
adc
and
imul
in
std
out
popa
mov
int
pop
sub
and
int3
mov
out
fidiv
sub
dec
and
pop
adc
dec
adc
xor
adc
mov
test
mov
pop
cmps
fst
(bad)
cmp
sar
aam
scas
pop
dec
pop
jmp
adc
xchg
ja
iret
lock
push
nop
sti
in
xor
add
fcom
cmp
inc
jmp
inc
xchg
cld
je
push
add
shr
std
in
xchg
ins
jnp
and
sbb
jmp
inc
cs
lods
push
pop
outs
add
lds
(bad)
sar
popa
or
sbb
add
mov
(bad)
loopne
adc
sub
clc
sahf
or
aad
jmp
int3
push
cli
mov
dec
fild
test
(bad)
pop
add
aaa
mov
cmp
into
sub
ffreep
xlat
clc
movs
outs
inc
mov
and
or
and
(bad)
test
mov
cld
add
xchg
movs
jne
idiv
outs
mov
addr16
je
cmp
hlt
rcr
(bad)
jp
add
mov
loope
call
bound
int
jle
ror
(bad)
sub
outs
push
fisubr
xchg
cmp
xor
push
js
loopne
movs
and
jle
xor
bnd
inc
ret
ret
lods
adc
mov
xchg
imul
std
pop
scas
std
out
retf
cmp
call
aaa
jg
test
dec
cmp
dec
or
and
mov
rcr
inc
sbb
imul
mov
test
sub
jg
jns
cmp
mov
inc
sti
(bad)
aam
lea
add
ret
stos
daa
mov
popf
pop
xchg
adc
adc
pop
jge
shl
add
leave
sbb
clc
mov
jecxz
bound
push
dec
mov
sub
mov
push
jo
jge
retf
iret
add
push
add
pop
fidiv
fcmove
sbb
or
sbb
cmp
push
and
pop
adc
xor
xor
lods
cmp
stos
stc
cmp
(bad)
test
sub
mov
jno
ret
cmp
popa
ret
pop
and
sbb
inc
xor
sbb
fdivr
and
sub
loop
sbb
call
mov
xor
xor
movs
out
mov
pop
xchg
pop
(bad)
fwait
adc
lahf
mov
adc
retf
add
ja
lods
xlat
xor
cld
fs
repnz
fcmovnu
push
jo
movs
in
sbb
add
(bad)
hlt
stos
add
daa
mov
sahf
in
mov
push
add
shr
lds
mov
mov
or
shr
enter
jne
mov
jno
cwde
pushf
(bad)
clc
aad
inc
mov
stc
or
xchg
outs
cmp
ds
popa
inc
in
sahf
(bad)
and
jmp
loope
movs
lods
cmps
mov
jle
inc
xor
into
daa
cmp
push
cmp
test
rcr
aam
outs
inc
add
retf
call
jge
lahf
mov
rol
test
jmp
push
bound
pop
cmc
stos
xchg
lds
scas
mov
xor
imul
out
pop
pop
cdq
jmp
add
xlat
add
and
int
sub
adc
test
push
mov
ror
inc
jge
sub
icebp
ja
ret
pop
lds
(bad)
jb
popw
or
mov
jl
rcr
rol
sbb
les
in
into
xchg
ds
test
repz
retf
sbb
inc
(bad)
jmp
(bad)
and
in
fmul
add
mov
cmc
sbb
clc
xchg
cmp
sbb
mov
inc
js
ja
les
jns
pop
inc
lods
mov
xor
xchg
mov
ins
aas
jle
retf
out
and
cmp
es
leave
mov
ins
ins
test
add
arpl
push
cmp
adc
cmp
and
scas
add
pop
cmp
stc
aas
enter
rol
adc
test
ret
mov
dec
dec
lods
sub
and
cmp
sar
icebp
(bad)
jle
ror
add
outs
fadd
sbb
jge
cmp
cmc
aam
in
not
or
lds
xor
adc
mov
sbb
mov
dec
stos
inc
mov
push
push
out
mov
(bad)
jmp
in
stc
clc
lahf
imul
std
popa
loope
jnp
or
mov
fchs
int3
rol
mov
ins
es
or
je
cdq
jecxz
and
xchg
push
or
and
inc
fsub
sbb
(bad)
jne
and
cdq
sbb
or
repnz
fist
pusha
mov
xchg
addr16
mov
fdivr
ins
pop
call
cmp
jl
or
ja
popa
int
in
scas
dec
cmp
lock
in
inc
or
push
cmps
sbb
push
sbb
test
mov
jno
scas
movs
dec
add
pop
(bad)
mov
pop
les
inc
xchg
or
inc
push
cs
adc
loop
test
(bad)
mov
lds
pusha
out
dec
shr
cmps
inc
push
pop
jecxz
xchg
fstp
jb
icebp
jg
sar
inc
inc
and
sub
xor
add
sub
lds
scas
test
sbb
fcomip
imul
shr
int3
sub
push
test
dec
adc
scas
loope
xchg
cmp
shl
dec
(bad)
push
sbb
mov
add
icebp
enter
mov
xchg
xchg
sahf
in
pop
in
aas
ja
lods
sub
xor
lods
or
ret
retf
imul
dec
ins
pop
mov
imul
push
jl
fs
or
icebp
frstor
jno
mov
scas
aas
js
sub
mov
add
adc
fcmovb
push
dec
push
mov
mov
adc
and
inc
jl
cmp
dec
dec
mov
dec
push
int3
xor
ficomp
inc
xor
add
pusha
pop
cmps
jo
call
loop
clc
sub
out
pop
push
and
xchg
adc
xchg
ds
stos
push
je
sub
outs
or
inc
adc
xor
ret
dec
loope
mov
push
pop
daa
adc
inc
mov
call
pushf
pop
imul
fdivp
outs
or
xchg
mov
pop
loop
dec
jmp
in
or
fadd
add
xchg
mov
mov
mov
add
sbb
rcr
mov
inc
jmp
jae
pop
out
adc
stos
jmp
arpl
jmp
popa
mov
punpckhwd
push
or
hlt
adc
imul
addr16
into
pop
push
iret
dec
push
lods
and
bound
pop
fmulp
jbe
push
jae
jg
pop
in
dec
sti
jne
retf
cmp
stos
and
adc
test
mov
mov
inc
jmp
pop
xor
ret
and
and
ins
push
mov
out
pop
rol
out
aaa
pop
and
add
lods
ins
into
cmc
iret
(bad)
jns
xor
add
movs
mov
clc
mov
(bad)
arpl
call
cmps
adc
std
mov
push
sbb
pusha
xlat
mov
lds
inc
rcr
lock
int3
fld
push
push
pop
and
ret
jo
sub
mov
xor
or
bound
xor
pop
fsub
jp
int3
dec
pop
jnp
call
mov
sub
imul
ret
out
xor
arpl
lds
repnz
rcr
int3
js
out
jmp
or
test
xor
pop
jnp
add
int
jns
sbb
cmp
push
xlat
and
aaa
(bad)
mov
xchg
mov
in
es
and
cmp
mov
inc
push
fcmovnbe
(bad)
(bad)
push
pop
inc
stc
xor
adc
cmp
rcr
mov
cmps
jp
fcomp
mov
mov
push
add
pop
inc
lds
(bad)
jge
jae
cmps
inc
xor
mov
dec
mov
xor
es
mov
push
cmp
push
(bad)
movs
daa
rol
pop
xchg
gs
sbb
movs
jmp
and
and
push
and
cld
test
popf
stos
shl
mov
enter
jno
mov
(bad)
aaa
loope
jge
mov
pop
xchg
jb
out
inc
push
jmp
loopne
(bad)
mov
inc
add
in
lock
mov
cmps
cmps
inc
sbb
mov
rol
push
push
mov
pop
xchg
mov
or
int3
ret
or
and
scas
sbb
jl
iret
cmps
int3
retf
repz
in
(bad)
pushf
js
repz
(bad)
shr
rcr
aad
aaa
or
es
sub
adc
mov
retf
(bad)
fisttp
outs
sub
sbb
mov
fs
test
cmp
hlt
add
adc
mov
das
loop
pop
adc
add
sbb
xor
stc
mov
sub
sti
mov
pop
inc
push
pop
push
push
pop
nop
rol
(bad)
outs
cdq
mov
pop
out
pop
lds
test
in
push
cmp
lock
dec
jle
mov
sbb
adc
sub
imul
out
cmp
(bad)
mov
jge
pop
lea
or
or
cmp
retf
popf
mov
push
xchg
dec
clc
pop
mov
sub
dec
or
or
add
cmp
push
call
adc
call
xchg
movs
push
pop
inc
in
les
mov
std
(bad)
imul
and
nop
sub
addr16
nop
sbb
lahf
popf
and
xchg
dec
sbb
clc
push
and
arpl
pop
ret
nop
dec
jno
loope
mov
push
pop
gs
movs
or
outs
or
fiadd
out
cs
repz
push
xor
push
scas
sub
sbb
bound
xlat
ja
add
rol
fs
xchg
js
pop
push
push
xor
xchg
cmps
aas
bound
fs
mov
fst
cmp
mov
xchg
jno
jmp
xor
stos
pusha
pop
or
fwait
ret
and
xchg
xor
inc
out
in
and
(bad)
xchg
mov
shl
cmpxchg
mov
push
xor
fmul
jns
ja
dec
push
cli
xlat
mov
mov
push
ret
int
sub
jae
mul
in
inc
push
jnp
nop
lock
lock
out
mov
or
pop
lahf
stc
jecxz
sahf
add
je
hlt
imul
xor
ins
cli
pop
add
dec
inc
movs
shl
mov
fwait
div
and
stos
jnp
cmp
mov
push
xchg
mov
aam
movs
nop
loop
mov
pop
xor
int
ins
ret
stos
jns
bound
aaa
jle
fcomp
dec
dec
shl
lea
imul
scas
jns
push
lock
loopne
lock
sbb
addr16
push
xchg
cdq
jle
jno
cli
inc
dec
scas
inc
xor
mov
sub
ds
add
addr16
push
stos
pop
dec
mov
pop
add
sub
add
dec
push
lahf
stos
repz
adc
inc
xchg
xor
sbb
out
and
or
call
aaa
(bad)
call
mov
lock
cmp
xor
push
mov
jnp
and
mov
popa
sahf
scas
push
jbe
in
das
sub
sub
cmps
pusha
aad
mov
adc
test
rcl
ds
rcr
adc
or
aad
or
and
push
fidiv
mov
cmp
aaa
push
ja
pop
cmp
xor
xchg
xor
std
sbb
ret
mov
popa
mov
sub
pop
adc
adc
mov
clc
mov
leave
pushf
fwait
pop
jecxz
dec
push
and
sub
or
out
call
cmp
pop
dec
test
lahf
inc
xchg
push
pop
push
stos
pop
popf
adc
(bad)
pop
xchg
scas
dec
adc
jge
loopne
fcmovu
mov
cmp
cs
mov
or
and
cld
or
adc
push
xlat
fimul
out
pop
cmp
and
mov
fdivr
and
repz
lods
mov
scas
sub
pop
xor
add
mov
add
mov
inc
mov
inc
in
cli
push
(bad)
scas
add
and
sahf
dec
fstp
inc
leave
pop
lea
and
cmp
lahf
call
daa
ds
xor
xchg
repz
fisubr
sbb
adc
pop
add
pop
(bad)
out
dec
das
xchg
xlat
pop
idiv
mov
and
imul
test
sbb
sub
and
inc
add
aaa
std
jp
jmp
lahf
pusha
loop
inc
inc
ins
and
push
jl
mov
adc
aas
jmp
inc
and
imul
sbb
dec
movs
loop
jb
xchg
movs
inc
or
aam
add
cdq
fisttp
pop
pop
dec
repnz
xchg
sub
fnstsw
mov
aaa
xchg
dec
jecxz
idiv
dec
inc
dec
or
jl
scas
dec
sbb
fisttp
mov
mov
pushf
pop
test
and
dec
add
or
out
ror
pop
outs
push
nop
mov
gs
inc
div
cmp
shl
lods
(bad)
rol
dec
rol
jbe
sbb
fwait
push
daa
cs
popf
mov
ret
xchg
xor
pop
pushf
adc
jbe
add
out
inc
adc
mov
xor
push
push
ret
rcr
out
lods
cmp
push
fild
xchg
loopne
cmp
addr16
pop
or
jl
xchg
jnp
popf
imul
push
pop
xchg
fwait
ja
enter
or
int
pusha
fwait
popa
xrelease
popf
fcmove
xchg
imul
cmc
sub
leave
(bad)
push
imul
and
pop
inc
cmp
jbe
iret
test
mov
rcl
pop
dec
ja
dec
and
fbld
mov
xor
pop
xor
lahf
test
add
and
cmp
enter
or
sar
mov
pop
push
mov
push
push
mov
cmps
aam
cmps
jmp
test
mov
shl
dec
div
pop
(bad)
lods
loope
or
push
xlat
in
loopne
dec
and
rol
and
mov
sbb
mov
jmp
cmc
cdq
xor
ds
test
jge
out
es
mov
cmp
mov
fcom
mov
push
bound
pop
or
pop
sti
bound
dec
cmp
fwait
mov
pop
push
stc
es
call
mov
int3
push
sub
loop
fld
sub
addr16
fist
out
stos
jno
sbb
lods
shl
and
ffreep
sub
pop
push
and
mov
inc
sub
fsubr
ja
pop
out
sbb
mov
rol
fcmovnbe
shl
fadd
out
mov
lahf
mov
dec
shr
test
mov
mov
cmp
les
mov
ds
ins
push
movs
pushf
bound
dec
mov
sbb
sub
mov
stc
test
pop
adc
imul
dec
and
idiv
popa
dec
call
inc
and
lods
std
jmp
push
dec
les
or
jns
leave
inc
push
das
das
add
push
pop
mov
(bad)
lods
fmul
add
jno
aad
ja
ins
mov
xchg
mov
cmc
(bad)
aam
cmp
cli
pop
ins
cli
sub
push
sbb
in
(bad)
nop
out
movs
je
shl
ins
repz
(bad)
mov
(bad)
cli
lahf
inc
shl
(bad)
repnz
(bad)
js
push
aaa
sbb
push
push
rcr
and
repz
das
in
push
ficom
jnp
push
out
xchg
pop
bound
test
ds
je
mov
out
xchg
arpl
or
test
or
retf
stos
retf
mul
mov
iret
mov
xor
push
fstp
or
aad
jp
mov
dec
push
xor
cmp
imul
in
call
sub
mov
test
test
and
cmp
ret
ds
repz
pushf
inc
xchg
das
sbb
inc
pop
dec
push
mov
scas
dec
rol
rol
retf
ss
cmc
cmp
sbb
loope
test
(bad)
pusha
lods
push
rol
fst
sub
pop
push
dec
sub
ret
cmp
out
(bad)
or
int3
add
scas
cld
out
inc
nop
mov
sub
loop
lock
clc
sahf
xchg
repz
push
std
push
mov
xchg
sub
inc
popf
mov
cli
int
not
add
cdq
xlat
call
push
jecxz
dec
mov
call
fwait
add
add
sub
mov
jle
jmp
mov
push
fxch
push
xchg
stc
push
js
dec
xchg
test
ins
int3
add
adc
jns
es
jmp
ja
add
ins
loope
cmp
lahf
push
rcr
add
jge
call
lock
mov
pop
xchg
std
call
ror
std
xchg
ds
ror
push
jle
inc
movs
mov
ins
or
inc
push
jbe
sbb
sub
cs
mov
gs
fimul
mul
mov
ss
and
out
ror
xchg
in
cwde
jle
pop
call
jbe
inc
aaa
jae
shl
push
(bad)
aaa
add
and
fild
mov
pop
movs
(bad)
pop
pop
xor
cmp
loopne
sahf
mov
sub
ds
gs
(bad)
pop
inc
repz
mov
loope
dec
cmp
(bad)
daa
movs
call
xlat
ret
push
and
lds
movs
sub
lods
pop
retf
adc
fcmovbe
stos
add
add
rol
jmp
mov
lock
add
dec
pop
xchg
cmp
imul
movs
sahf
pop
pop
xchg
jle
fwait
sub
retf
jnp
jge
pop
xor
mov
jle
or
cmp
or
sub
stos
xor
cld
sar
push
enter
imul
mov
outs
arpl
cmp
jl
push
out
adc
out
xor
mov
mov
add
or
inc
stc
xchg
or
clc
cwde
push
mov
shl
movs
jmp
jmp
inc
pop
pop
pop
dec
jb
pushf
jmp
xchg
and
lock
mov
ins
out
and
clc
xor
mov
mov
out
jecxz
mov
adc
sti
cdq
push
fdivrp
xchg
popf
push
mov
push
push
nop
aas
push
jnp
jne
dec
add
cmp
and
lods
cld
xor
aaa
add
test
loop
out
int
loop
and
mov
inc
xor
(bad)
retf
adc
push
ja
sti
pop
aaa
lock
xchg
jno
lea
adc
push
jbe
ret
inc
xlat
movs
rcr
xlat
xchg
shl
aad
jp
(bad)
mov
cmp
xchg
or
adc
(bad)
sub
inc
add
sbb
ja
ja
jmp
jno
fbstp
out
mov
aam
jge
test
dec
xor
pop
mov
mov
or
aad
les
xor
pop
cwde
out
outs
out
lahf
inc
cmp
ins
js
int3
mov
or
in
(bad)
out
pop
or
sbb
test
pop
arpl
cmp
cmp
jb
pop
arpl
loop
aaa
mov
push
(bad)
xor
hlt
xor
push
in
retf
mov
push
push
ss
inc
push
sub
cmp
clc
dec
mov
mov
lahf
jne
mov
iret
jle
mov
popf
(bad)
mov
lahf
ss
sub
adc
jno
xchg
pop
jl
scas
xor
jbe
adc
inc
lods
rcr
jl
mov
mov
sub
aad
cmps
hlt
repz
xchg
cmc
dec
mov
(bad)
xor
(bad)
jnp
fstp
shr
dec
sub
je
test
repz
add
movs
sub
sbb
mov
mov
add
lahf
push
test
or
into
sub
and
mov
cmp
push
mov
jbe
out
dec
loop
mov
inc
leave
fwait
adc
ins
cwde
push
jmp
stc
fst
sbb
bound
cmp
adc
adc
jg
and
scas
cmps
shl
jg
mov
je
scas
and
das
hlt
push
daa
push
xchg
sbb
inc
stc
daa
lods
imul
push
ds
call
mov
pop
dec
fcom
outs
movs
push
and
loop
dec
pop
ins
and
es
arpl
mov
dec
pop
int
inc
ds
xchg
shr
jo
fnstsw
cmp
inc
es
pop
ret
in
dec
push
add
jae
mov
addr16
imul
add
mov
mov
xor
sahf
sub
sbb
and
sub
shr
xchg
and
iret
retf
fdiv
daa
sub
ins
cmps
or
frstor
clc
aam
cmc
ret
stos
rcr
push
lods
pop
inc
push
cmp
pusha
fidivr
push
push
mov
adc
test
mov
movs
add
mov
(bad)
push
movs
test
out
(bad)
xor
add
lahf
sbb
cli
aam
loop
retf
lea
mov
retf
mov
push
mov
push
jmp
fldcw
or
clc
xor
test
imul
movs
stos
dec
std
clc
iret
inc
adc
jp
cmp
ficomp
sub
mov
nop
push
xor
add
arpl
sbb
and
dec
inc
(bad)
cld
add
add
cmps
fisub
xchg
adc
jg
ds
push
retf
jns
push
mov
jge
fdiv
push
in
ss
arpl
std
int3
leave
aaa
fcom
test
mov
jo
push
pop
lods
jmp
enter
xchg
xlat
push
jae
sbb
xor
cmp
sbb
dec
test
sub
test
xor
arpl
jbe
cmps
(bad)
ins
sub
jno
pop
lahf
sbb
pop
test
inc
push
mul
add
mov
jl
sbb
jg
jmp
fnsave
lahf
popf
fnsave
jl
adc
dec
lds
ja
retf
inc
adc
pop
jp
addr16
mov
lahf
fiadd
jl
pop
cmps
sbb
inc
mov
in
sbb
test
push
push
mov
cmp
enter
push
pop
adc
or
in
add
mov
add
mov
sub
pop
sti
hlt
pop
pop
nop
sbb
jmp
cld
in
adc
inc
fidiv
outs
std
or
mov
adc
jno
fwait
lods
hlt
in
sbb
jmp
inc
dec
jg
add
fimul
adc
arpl
mov
(bad)
leave
push
shl
in
js
xor
frstor
xor
xchg
xchg
push
sbb
xchg
inc
mov
push
adc
or
mov
popa
mov
xchg
sbb
outs
outs
(bad)
push
loope
sub
jmp
mov
dec
or
mov
cmp
xchg
stc
push
mov
dec
fwait
sub
imul
cmp
adc
pusha
xchg
int
adc
mov
sbb
mov
pop
fiadd
inc
push
pop
jge
bnd
mov
lds
fisub
rcl
xor
push
mov
hlt
ret
ret
sbb
sub
pop
pop
int3
push
lds
dec
push
mov
xor
cmps
mov
or
(bad)
icebp
adc
jmp
leave
cli
sbb
mov
or
scas
dec
(bad)
fild
push
dec
dec
jmp
(bad)
pop
pop
jns
add
fisttp
(bad)
jbe
fs
jmp
cmc
adc
not
xor
or
loope
lea
ja
call
lea
lds
mov
into
inc
pusha
(bad)
jmp
or
push
test
daa
das
lods
add
push
call
shr
add
repnz
montmul
cmps
inc
bound
mov
pushf
aad
jbe
or
scas
imul
sti
mov
inc
das
mov
fisub
push
xor
mov
out
cdq
mov
ins
pop
jne
popf
mov
fst
movs
xor
mov
jl
jmp
xor
dec
or
push
xor
jno
lods
aad
push
or
inc
xor
sbb
mov
nop
mov
cmp
jmp
loope
std
sub
outs
xchg
je
js
(bad)
dec
imul
es
push
push
in
fist
arpl
clc
adc
clc
in
pop
call
inc
dec
out
enter
push
and
outs
mov
jecxz
xchg
(bad)
cmp
fstp
mov
lea
and
rcr
imul
fld
mov
jb
push
or
pop
xchg
xchg
cdq
jae
test
xchg
ja
in
sub
jmp
clc
fld
pushf
bound
fcomp
add
sti
in
dec
imul
jle
mov
lods
scas
dec
shl
pop
in
dec
mov
sub
or
test
out
loope
xor
loope
jo
dec
xlat
cmp
and
push
or
xchg
(bad)
cmp
adc
mov
adc
or
movs
dec
sub
push
scas
xchg
shr
scas
mov
jae
int
and
inc
popf
pop
xchg
dec
or
cs
loope
int
mov
je
mov
xor
pop
jns
test
push
or
push
int
call
mov
mov
jg
adc
sahf
add
aam
fwait
jle
push
shl
jmp
aaa
mov
xor
repz
jo
sub
pusha
mov
jge
imul
in
iret
in
sub
popa
mov
outs
adc
jp
rcr
push
into
es
mov
and
inc
xchg
jnp
aas
adc
scas
retf
adc
jno
outs
hlt
mov
mov
mov
hlt
xlat
into
daa
inc
sbb
pop
clc
jl
mov
in
xchg
lods
jb
shl
lds
ins
cmp
rcl
or
popa
inc
jae
add
jnp
sub
cmp
jecxz
fbld
mov
shr
inc
(bad)
fldenv
sub
cs
fsubr
pop
xor
xor
push
inc
das
push
outs
sbb
sbb
stc
jge
ret
xor
leave
into
mov
and
mov
js
sbb
cmp
jle
push
loop
test
pop
daa
xor
fcmovb
xchg
ret
(bad)
cdq
mov
mov
mov
lock
jb
xchg
inc
test
cld
lock
in
je
inc
push
mov
lods
cmps
inc
jl
cmp
call
enter
shr
iret
mov
xchg
outs
jae
jbe
pop
pop
or
sbb
push
outs
jmp
sbb
push
das
xchg
cli
pop
cmp
jo
sbb
fwait
daa
test
adc
mov
movs
jp
cmps
ins
addr16
sub
xchg
xchg
cmp
xchg
push
cmc
imul
in
pop
mov
jmp
ds
push
mov
div
pop
lea
pushf
mov
jns
push
out
cmp
jp
sbb
mov
add
int
nop
add
imul
mov
sbb
xor
adc
loope
sbb
jne
add
mov
xor
adc
dec
mov
and
out
lahf
pusha
lds
je
mov
ds
stos
not
pop
adc
sbb
dec
int3
and
xchg
jo
cmp
ret
push
lock
xor
lds
add
arpl
aas
test
xchg
sbb
xchg
adc
clc
out
mov
stc
daa
mov
and
xchg
mov
xlat
sub
cdq
sub
inc
sbb
fiadd
popa
popf
stos
lahf
push
enter
into
addr16
push
lds
mov
pusha
add
enter
shr
sub
cwde
inc
and
shl
xchg
cli
rol
push
or
in
cwde
imul
add
test
mov
sub
mov
rol
xchg
xlat
xor
cmps
mov
aaa
sar
loope
repnz
sub
cmc
mov
in
mov
test
dec
sub
add
pop
mov
shr
adc
fistp
jns
outs
es
sub
jb
mov
outs
test
movs
push
cmp
ds
add
inc
cmp
cs
pop
lahf
and
in
(bad)
inc
ss
popf
xlat
push
lds
add
push
fwait
pop
aad
dec
pop
push
and
xchg
icebp
pop
xchg
popf
pop
jns
add
and
outs
lahf
ja
sahf
add
fdivr
bound
pmulhw
outs
push
cmp
and
pop
pop
xchg
jp
mov
cwde
xor
(bad)
mov
mov
fcmovne
in
retf
mov
mov
mov
jge
out
jmp
cmc
mov
icebp
cmp
aad
shr
dec
inc
jnp
mov
mov
outs
jae
fs
mov
sahf
and
or
pusha
adc
cdq
scas
or
arpl
sub
mov
xchg
bound
lahf
in
and
fidiv
or
mov
inc
test
mov
cwde
in
imul
xor
sbb
jp
ins
mov
xor
(bad)
push
dec
fst
mov
add
jae
xor
dec
leave
adc
and
icebp
adc
fadd
and
jle
test
test
adc
popa
xor
ins
cld
sbb
dec
mov
cmp
(bad)
xlat
sub
xchg
stos
cmp
(bad)
leave
inc
icebp
data16
mov
mov
xchg
xor
xchg
xor
push
aaa
aaa
mov
push
xchg
sbb
imul
test
mov
mov
ret
push
sbb
mov
sar
jns
dec
dec
inc
cmc
jnp
cs
jo
hlt
jmp
adc
xchg
push
xchg
sub
push
test
out
or
test
sub
iret
jns
mov
xor
(bad)
fwait
push
cwde
sub
sub
jno
mov
pop
adc
int
ss
out
dec
dec
inc
xor
pop
loope
push
mov
pop
ret
push
push
fcom
movs
loope
sub
test
jmp
in
shr
pop
fimul
inc
es
cmc
mov
jns
lds
jmp
jl
ja
xchg
add
push
pushf
call
jo
in
push
mov
das
cmps
and
ror
retf
loopne
aad
popf
and
mov
hlt
fwait
int3
cmc
mov
mov
mov
lock
repnz
dec
mov
add
push
mov
inc
fsub
adc
hlt
push
cdq
neg
pop
lea
cmp
mov
push
pop
jnp
mov
xlat
ret
dec
cmp
mov
sub
xor
mov
push
fs
mov
iret
mov
mov
mov
shl
and
or
xchg
scas
jnp
not
or
iret
fimul
cld
arpl
cmp
(bad)
xchg
cmc
fistp
mov
cmps
cli
repnz
lar
pop
iret
mov
sahf
ror
jo
idiv
out
mov
xor
mov
les
inc
xor
int3
fld
push
(bad)
std
jge
clc
adc
adc
xchg
popw
outs
clc
jg
or
lods
test
cdq
mov
sbb
ins
push
fild
lock
cdq
mov
or
push
jo
sbb
shl
test
and
mov
add
jno
xchg
adc
cmp
xchg
push
std
jbe
in
push
mov
ror
push
call
sub
xchg
dec
inc
push
push
fcomp
fsub
mov
stos
add
aaa
xor
bnd
retf
test
enter
jbe
push
mov
mov
jnp
mov
pusha
cwd
adc
call
ins
out
xor
cli
xor
outs
jns
out
fs
lods
sbb
mov
push
scas
push
sub
mul
dec
fwait
pop
or
jbe
out
push
adc
and
jle
test
cmp
jbe
cmps
jnp
sti
popf
loope
in
inc
or
in
sti
mov
mov
mov
outs
in
sub
dec
cmovne
std
rcl
dec
xchg
in
add
dec
stos
mov
mov
retf
cdq
shl
add
inc
retf
scas
(bad)
rol
inc
push
mov
rcr
mov
sbb
cli
addr16
outs
fsub
out
adc
lods
push
or
(bad)
mov
setnp
cmp
mov
inc
ja
push
ret
je
xor
outs
dec
lock
fiadd
js
dec
int
ficom
dec
xchg
xor
shr
jecxz
cmp
adc
stos
pop
mov
pop
mov
and
call
adc
cmp
pop
dec
in
jae
xchg
mov
and
scas
in
adc
ret
loope
mov
test
outs
mov
adc
aas
sub
cmps
or
dec
jnp
push
out
ja
sub
add
shr
sbb
call
mov
jp
mov
xor
adc
mov
sub
mov
(bad)
push
loopne
mov
sbb
outs
xchg
into
xor
test
pop
out
inc
xchg
shl
imul
mov
sbb
sub
dec
es
out
jo
jns
repz
cmc
in
inc
sbb
stc
sub
sub
sbb
mov
xchg
dec
mov
mov
jmp
dec
in
mov
sub
push
add
int
cdq
je
ss
lea
pop
sbb
lds
pop
stos
push
and
mov
xlat
data16
out
dec
imul
xor
lods
cmp
mov
outs
xor
iret
push
dec
imul
cmp
aad
xchg
(bad)
mov
(bad)
adc
dec
outs
pushf
mov
cdq
aad
pusha
adc
jg
jo
mov
and
in
jno
push
outs
ret
dec
out
push
in
mov
mov
repnz
pop
add
call
dec
xor
(bad)
shl
jb
mov
or
add
pop
pop
ja
enter
and
dec
pop
fisttp
call
dec
pop
jg
add
cmp
inc
test
std
scas
lahf
dec
xchg
js
out
or
sbb
stos
cdq
test
pop
mov
shr
jge
(bad)
sbb
sbb
mov
dec
xchg
sti
and
jecxz
cmp
aad
mov
mov
into
mov
mov
call
xor
hlt
ins
jae
cmc
jo
xor
aas
scas
fdivr
add
lds
mov
lock
push
scas
xchg
(bad)
mov
cmp
dec
mov
sub
adc
cmc
pop
jecxz
cmc
stc
gs
xchg
pop
ins
aam
adc
inc
ret
data16
xor
add
xor
pop
and
sbb
leave
xchg
js
and
cmp
gs
(bad)
retf
lods
mov
pop
call
rol
or
stos
sbb
jge
push
mov
inc
movs
sbb
cwde
jmp
cmp
daa
sar
and
js
lock
push
push
popf
xor
push
arpl
jecxz
push
cdq
inc
cmps
mov
cmp
cs
pop
cmp
retf
mov
xor
loopne
xlat
push
adc
jnp
loope
jns
loopne
lahf
(bad)
pop
addr16
sti
inc
fldenv
loope
sub
shr
mov
jae
mov
sahf
enter
sbb
pop
cmp
repnz
or
jo
push
std
xchg
dec
xchg
adc
cmp
ror
mov
push
movs
cdq
mov
jbe
ret
nop
and
mov
stc
jmp
stc
mov
lods
xchg
mov
popf
pusha
(bad)
inc
mov
loopne
das
retf
sahf
cmp
out
xor
mov
(bad)
dec
add
and
add
aaa
sbb
fmul
mov
scas
mov
daa
test
xor
cmps
jb
jbe
out
adc
sub
cmp
je
xor
adc
cmps
jmp
push
jbe
iret
leave
movs
pop
dec
cmp
popf
int
mov
add
out
inc
imul
dec
mov
enter
in
mov
cwde
(bad)
rol
mov
(bad)
in
jl
outs
mov
ins
leave
fstp
call
mov
inc
mov
jg
push
out
ret
loopne
cmp
or
dec
push
ja
inc
sar
ss
mov
je
je
data16
push
cmp
mov
loop
rep
(bad)
in
jp
sub
mov
jns
mov
ds
mov
dec
lds
(bad)
shl
push
adc
push
fs
jecxz
sar
fwait
inc
loope
adc
mov
inc
mov
and
dec
stos
jmp
imul
dec
mov
rol
in
std
repz
cmps
fwait
scas
sbb
mov
in
adc
sbb
mov
jge
aad
sub
nop
mov
inc
inc
cld
mov
dec
icebp
cmp
out
repz
mov
in
retf
jecxz
imul
mov
loopne
mov
js
daa
jns
jno
mov
(bad)
pop
fild
mov
lods
cmp
aaa
retf
add
(bad)
xchg
hlt
and
push
mov
pusha
jmp
xor
jecxz
xor
dec
add
and
jle
inc
xor
or
sbb
push
push
pop
gs
gs
dec
mov
pushf
iret
pusha
iret
ret
xor
aas
push
sbb
fbld
xor
cmp
inc
mov
mov
aad
inc
mov
in
cmp
mov
mov
int
sbb
cmp
jne
sbb
jecxz
test
ins
icebp
jmp
ins
(bad)
pushf
mov
gs
sub
shr
icebp
dec
jle
mov
xor
pop
loop
jo
(bad)
mov
int
mov
mov
outs
test
stos
lahf
test
xor
ror
clc
rcr
pushf
or
xchg
in
sub
mov
inc
inc
cmp
addr16
call
and
cmp
aad
pop
sbb
mov
inc
in
inc
mov
imul
adc
inc
adc
inc
(bad)
xchg
dec
mov
shl
les
bound
aad
mov
xor
outs
nop
loopne
aam
xchg
repz
popa
push
scas
clc
ret
and
mov
jb
ret
out
jnp
cmps
es
int3
fstp
sbb
rcl
jae
retf
pop
push
pop
xor
sbb
sub
mov
dec
add
jmp
pop
xor
dec
jno
add
imul
pop
push
ret
fstp
and
mov
stos
addr16
xchg
jo
into
sbb
lods
in
aam
ror
inc
xchg
fsub
repnz
adc
adc
push
aad
mov
jle
fldenv
lahf
pop
arpl
(bad)
out
jo
adc
cmps
jno
sub
clc
xchg
daa
mov
pop
mov
sub
stc
inc
out
pop
daa
push
inc
sub
(bad)
jmp
ins
cli
cs
mov
xchg
pop
fld
adc
mov
sbb
(bad)
aaa
adc
mov
xchg
dec
jne
push
lods
lods
pushf
inc
sbb
test
mov
jge
push
clc
cli
popf
out
(bad)
(bad)
and
push
cmp
in
imul
and
call
xor
xchg
fld
lock
pop
fstp
jne
stc
outs
push
arpl
iret
mov
sub
or
xor
jmp
movs
sbb
dec
push
fstp
(bad)
hlt
or
sub
inc
movs
push
jmp
outs
repnz
jae
test
in
or
adc
mov
pop
and
pop
and
shl
and
mul
lock
pop
retf
add
fdivr
push
or
fcomip
or
arpl
cmps
mov
out
leave
popf
or
addr16
stos
and
mov
ds
xchg
and
test
(bad)
sbb
and
and
scas
xor
sbb
mov
add
adc
adc
std
adc
out
inc
lea
mov
sbb
mov
cmp
dec
lods
jmp
xor
jmp
shl
xchg
mov
test
sub
mov
ret
aaa
cmps
in
jne
int3
pop
imul
jmp
gs
pop
xor
adc
lods
sub
push
test
jg
push
xchg
pop
fdiv
push
cli
jae
ss
or
xchg
mov
int3
test
sti
jo
or
int
fist
mov
pop
jp
cmp
jo
adc
rcr
inc
stos
xchg
mov
cmp
or
cmp
mov
sub
push
fstp
icebp
sub
cvttps2pi
scas
in
lds
inc
popa
test
addr16
xor
mov
mov
ds
popa
cmp
clc
outs
cld
push
sub
xchg
push
scas
adc
stos
rcl
adc
mov
mov
mov
test
loop
(bad)
mov
ret
adc
push
dec
jbe
mov
adc
ror
xor
lods
xor
pop
lods
xchg
adc
jle
arpl
and
jle
mov
cmps
test
ins
push
lock
dec
fs
test
test
ja
cmp
pop
cli
repz
jae
in
mov
lods
stos
shl
popa
cli
jp
out
sbb
fsub
mov
daa
mov
push
mov
jmp
out
adc
test
sbb
fisttp
ins
pop
leave
xor
inc
aas
mov
jbe
outs
mov
jp
jmp
sbb
jp
sub
(bad)
sbb
aaa
pop
pop
cdq
sbb
loop
sub
jmp
mov
fdivr
pop
inc
aad
sub
movs
enter
sub
lock
and
out
icebp
pop
sub
and
aad
aam
imul
lock
push
sbb
add
mov
cld
je
fild
pop
or
repz
or
xor
and
sbb
push
js
jmp
xor
stos
(bad)
rcl
in
pop
mov
dec
shl
pop
push
xor
jmp
shl
push
adc
fdiv
pushf
pop
xchg
mov
lahf
enter
cs
pop
sub
fwait
adc
cmp
mov
pop
out
xor
(bad)
fs
xchg
jge
and
mov
ins
scas
paddd
ins
xlat
cmp
xor
pop
loop
xor
shl
jmp
and
aad
mov
ins
push
xchg
inc
sub
(bad)
in
cmp
jo
push
mov
arpl
packuswb
adc
pop
test
add
xchg
rcl
mov
stos
jecxz
fistp
mov
mov
loop
or
sub
out
and
rcr
ss
cmps
pop
cmp
mov
ja
xlat
pop
push
lea
fild
add
(bad)
mov
mov
test
inc
jecxz
or
inc
pop
xchg
mov
fld
fmul
xchg
stos
or
jno
mov
jns
mov
repnz
adc
mov
in
xor
or
fwait
pop
int3
or
xchg
rol
cmp
fdiv
push
xchg
daa
imul
imul
inc
inc
inc
repnz
aam
jns
jecxz
push
test
fisubr
fdiv
mov
arpl
and
inc
cld
adc
sub
pop
jns
xchg
mov
cmp
jle
ins
xor
scas
mov
pop
adc
popf
sbb
std
mov
push
pop
sub
sar
popa
pushf
mov
adc
std
scas
sub
lds
shr
enter
enter
scas
ins
movs
int
(bad)
aam
mov
jge
dec
imul
cli
inc
cmp
pop
es
mov
pop
jnp
mov
popf
ds
icebp
(bad)
jb
and
aad
add
pop
sub
dec
sbb
in
cmc
mov
std
test
add
adc
sub
jo
inc
cmp
adc
leave
sub
rcr
mov
retf
pusha
ficom
xchg
ret
ret
js
push
sub
sbb
sub
hlt
aaa
sbb
adc
sub
int3
lds
fimul
sbb
push
fcomp
and
mov
pop
mov
ret
mov
in
cmp
ret
aad
js
sub
ja
loopne
cmp
shl
jo
add
pop
cmp
sbb
cmp
call
pop
sub
pop
cli
hlt
xchg
push
leave
mov
iret
pop
pop
mov
adc
shr
and
or
das
jns
cmp
push
or
and
inc
push
and
in
inc
xchg
xchg
pop
cli
mov
cmc
daa
adc
xchg
fsub
(bad)
(bad)
jne
mov
pop
cmp
int
and
repz
imul
ins
jo
jae
lods
pusha
sbb
cs
cmps
rol
stc
dec
mov
inc
aam
repnz
dec
or
adc
test
and
mov
fiadd
outs
inc
arpl
jecxz
mov
lods
mov
ret
cmp
pop
push
and
mov
ret
mov
jmp
sbb
cwde
add
div
in
cmp
jge
mov
jl
xchg
xlat
jecxz
xor
adc
je
loop
inc
leave
call
jmp
icebp
jbe
jo
rol
loopne
jae
jmp
mov
mov
jns
imul
add
ss
cmp
es
outs
pop
stc
pop
sbb
mov
sub
icebp
call
add
aam
hlt
mov
jne
mov
rcr
(bad)
dec
out
push
jmp
push
mov
dec
xchg
xchg
inc
and
mov
inc
jge
movs
arpl
cmc
in
add
jno
sub
or
xor
mov
sub
mov
call
lds
add
loopne
or
ins
sbb
add
imul
inc
pop
cmp
inc
sbb
sahf
xor
pop
paddd
xchg
sub
cmc
mov
add
adc
xor
fwait
or
pop
pusha
repnz
stc
gs
sub
not
sub
out
push
xchg
sub
mov
xor
push
or
mov
fcom
or
mov
push
leave
pop
les
iret
pop
sub
rol
enter
mov
sub
adc
arpl
or
xchg
and
ins
xchg
inc
call
test
push
dec
jno
cmp
cmps
xchg
inc
pushf
div
cmp
and
jmp
jge
sub
dec
hlt
pop
cwde
xchg
dec
or
cmc
mov
test
adc
mov
js
aad
ret
mov
and
(bad)
xor
scas
adc
ds
jmp
xchg
ret
sub
fdiv
inc
shl
in
lea
push
cmps
out
scas
retf
xor
and
inc
jl
div
std
jg
cwde
dec
scas
shr
inc
mov
in
and
pop
sub
mov
scas
jnp
add
aam
iret
cld
(bad)
mov
ss
mov
push
ss
ret
cmp
daa
icebp
int
add
cmp
lods
icebp
lods
shr
mov
(bad)
xor
iret
or
out
loop
fdiv
pushf
cmp
add
push
push
bound
and
push
mov
push
int3
jne
pusha
lock
fistp
enter
dec
cmp
pop
mov
scas
add
push
lea
js
pop
je
or
(bad)
fimul
and
mov
xor
mov
and
dec
lahf
idiv
aas
call
inc
ss
inc
jb
cs
mov
out
je
mov
push
xchg
jne
stos
inc
xor
jmp
hlt
shr
aaa
and
sbb
test
retf
and
call
jne
repnz
push
bound
test
push
aaa
les
pop
sub
adc
push
adc
cs
xchg
setg
movs
ja
data16
fcom
movs
in
test
fcom
cmp
pop
aam
lods
cmp
push
data16
pop
pop
inc
push
push
jnp
sbb
ret
lock
je
fdiv
adc
call
lea
cmps
lds
arpl
dec
(bad)
dec
pop
sar
fxrstor
shl
mov
ret
lahf
mov
mov
ret
mov
bound
retf
test
ss
push
jle
mov
sub
ins
sbb
mov
adc
and
mov
cmps
inc
dec
sbb
pushf
jp
push
inc
inc
sub
sbb
inc
adc
movs
out
mov
lods
mov
bound
in
call
test
jbe
sar
int
les
mov
cmps
mov
rep
push
repnz
add
dec
addr16
ret
cmp
or
imul
sti
adc
(bad)
push
and
in
mov
(bad)
sahf
test
je
xchg
mov
popf
xchg
sbb
mov
jb
inc
fnstenv
ja
push
loop
sbb
inc
imul
or
in
sub
adc
push
jge
ret
dec
xchg
mov
mov
push
rol
inc
clc
adc
sub
mov
test
xchg
ds
pop
dec
mov
xchg
ds
add
stc
lock
loop
cmp
jp
aad
xchg
imul
mov
out
pop
and
in
inc
sar
sar
add
adc
outs
call
adc
push
push
jmp
ja
jae
sti
cmps
sub
in
push
and
jns
sbb
mov
popw
cdq
sbb
dec
adc
xchg
sbb
pop
and
outs
xor
fsub
fistp
pushf
xchg
fisubr
or
dec
repz
retf
pop
mov
popf
xchg
sbb
sbb
xor
pop
stos
or
sti
test
aaa
lods
dec
sbb
push
neg
jns
test
jae
mov
int3
test
and
arpl
das
push
std
loopne
sbb
adc
inc
jecxz
jge
or
jns
cdq
ror
scas
aam
shl
js
jg
or
xor
add
sti
pushf
std
pop
jmp
std
in
pop
in
sub
faddp
aam
iret
and
out
sub
jmp
xchg
cli
push
outs
and
fmul
sub
or
fist
mov
xor
cmp
enter
cmp
cmps
add
shl
fwait
stos
div
xchg
mov
or
push
popa
xchg
stos
and
pop
shl
bound
xor
sub
pop
push
push
pop
sar
sbb
and
(bad)
adc
rol
je
test
dec
xchg
pop
mov
push
int3
clc
stos
cmp
(bad)
or
mov
dec
pop
xchg
cmc
push
cmps
aas
xor
test
inc
cmp
mov
test
data16
call
bound
(bad)
adc
test
aad
push
pop
or
or
repnz
xor
add
jns
and
or
in
les
mov
cmp
mov
(bad)
movs
nop
retf
movs
dec
ret
pop
stos
in
push
push
pop
xchg
loopne
or
jbe
sub
hlt
mov
jmp
and
xchg
outs
(bad)
mov
fsub
and
fld
pop
mov
mov
rcr
xchg
mov
fadd
dec
(bad)
jl
or
cmp
sbb
out
jbe
imul
inc
(bad)
or
fwait
pop
and
lahf
or
push
cmps
mul
out
and
imul
push
das
add
jp
mov
popf
out
adc
jp
lea
mov
push
pushf
push
shr
sub
sbb
mov
cmc
jns
mov
bound
and
xchg
sti
add
js
push
inc
xor
jecxz
push
adc
pop
cmp
add
fwait
es
jge
repz
scas
xlat
je
sub
fdivr
inc
mov
xchg
xchg
out
sub
ja
cld
popa
pusha
dec
aaa
les
dec
cs
pop
push
int
test
(bad)
push
rcl
les
pop
push
fcom
jns
scas
shl
fs
int3
in
pop
repnz
pop
jb
pushf
(bad)
xor
sahf
arpl
sbb
xchg
call
xchg
and
das
fdivr
cmp
cmp
push
push
dec
add
cmp
ret
jb
add
inc
mov
fstp
sub
jp
lods
inc
imul
pusha
add
push
inc
mov
mov
mov
pop
xchg
ret
bound
fcom
inc
(bad)
sbb
fwait
jmp
shr
sti
sub
mov
xchg
sar
outs
xchg
ret
dec
out
and
fcomi
xchg
(bad)
mov
data16
fstp
in
inc
test
repz
scas
wbinvd
pop
jmp
sbb
loopne
push
retf
or
sbb
cli
popf
shl
adc
aas
jae
xchg
push
pop
not
pop
jge
sbb
les
inc
sub
cmp
push
sti
mov
xchg
cs
add
xchg
and
add
xchg
mov
mov
shr
xchg
clc
push
std
stos
mov
mov
sar
cmp
jle
(bad)
or
shl
les
inc
jae
mov
daa
lock
fild
ror
rcl
lahf
jmp
test
test
mov
pop
adc
pop
jo
push
shl
mov
sbb
sub
pop
(bad)
mov
cmc
adc
xor
jmp
mov
(bad)
push
in
(bad)
cmp
inc
pop
pusha
push
pop
pop
add
ds
push
jmp
mov
mov
pop
push
in
mov
mov
or
add
pop
nop
and
cmps
test
lahf
pop
(bad)
mul
imul
xchg
sub
int
jb
mov
sar
mov
leave
jns
cmp
js
pop
xchg
adc
ja
test
call
cmp
lods
push
clc
fist
xchg
(bad)
rcl
mov
fwait
mov
cld
jge
sub
push
into
(bad)
loopne
add
xor
icebp
(bad)
and
js
loop
mov
mov
mov
ret
repnz
push
sub
dec
sub
test
xchg
or
mov
shl
mov
outs
js
lea
fwait
sbb
imul
sub
dec
dec
mov
adc
xchg
cmp
nop
aam
cwde
inc
xchg
sub
imul
out
je
jno
repnz
pop
inc
mov
(bad)
(bad)
movs
adc
fnsave
dec
icebp
mov
jno
fucomip
sahf
ret
or
add
xor
cdq
pop
les
sub
fisub
(bad)
fsubr
arpl
pop
and
push
ins
test
ret
inc
push
push
ret
aaa
push
shr
(bad)
test
dec
into
push
je
mov
(bad)
push
push
jl
add
loope
mov
jno
fs
ret
(bad)
sub
(bad)
push
dec
mov
mov
cmps
test
loope
dec
jmp
xor
jae
loop
xor
(bad)
pop
and
xchg
and
inc
xor
lods
mov
cmp
cld
mov
fidiv
retf
and
jne
test
sbb
or
in
jne
mov
scas
jb
outs
repnz
fwait
sbb
add
ins
inc
shl
or
(bad)
(bad)
movs
mov
mov
pop
sti
sub
adc
jl
ret
out
(bad)
(bad)
mov
cmp
aas
and
xor
test
scas
pop
cmp
jno
mov
cdq
xlat
or
lock
xchg
xchg
in
cmp
fbstp
daa
shl
rol
sti
mov
cmp
in
xchg
call
lock
in
push
rep
stos
add
sar
fist
or
jnp
popa
cli
mov
xor
and
pushaw
inc
mov
loop
xor
jo
fidiv
loopne
mul
aas
jmp
xor
add
data16
out
pop
xchg
(bad)
or
inc
out
adc
jle
sub
sub
das
adc
(bad)
imul
fisttp
fist
sub
sub
gs
jmp
inc
jae
ja
popa
or
sub
mov
in
add
or
out
and
mov
add
popf
call
aad
les
inc
sbb
mov
inc
add
jge
sbb
sbb
jle
aaa
lods
push
mov
fld
push
mov
jg
mov
sti
xchg
fsubrp
fsubr
out
cdq
xchg
js
ja
adc
mov
cli
mov
repz
bound
stos
dec
aaa
nop
das
jae
jmp
add
add
jne
xor
sub
fnstcw
xchg
aam
fidiv
idiv
or
xor
cld
fsub
ins
dec
loope
mov
adc
sbb
dec
cmp
inc
repnz
dec
add
dec
imul
sub
inc
int3
jle
mov
inc
rcl
jl
inc
push
push
clc
repnz
movs
repnz
ficomp
mov
sbb
dec
cmc
inc
aaa
xchg
out
pop
js
adc
int
ror
iret
or
sbb
ins
jl
into
(bad)
out
or
hlt
arpl
cmc
movs
aaa
call
imul
repz
in
ins
cmc
sub
dec
test
xchg
xlat
scas
add
les
(bad)
mov
pop
dec
mov
xchg
mov
jb
inc
mov
scas
les
mov
jbe
and
and
and
push
pop
fstp
das
jmp
and
mov
jmp
std
retf
fyl2xp1
repnz
jb
sti
mov
pop
in
mov
dec
jb
scas
movs
iret
pop
out
xchg
dec
scas
dec
sbb
dec
sub
es
jmp
ins
jp
mov
push
jge
imul
push
inc
arpl
fiadd
fisubr
dec
cld
mov
cmp
lahf
mov
ficomp
aas
into
mov
adc
push
popa
sub
xor
lds
(bad)
pop
sub
xchg
ficomp
mov
je
cli
inc
outs
fwait
xchg
add
out
aas
jg
inc
inc
jg
or
dec
dec
sub
lock
aaa
(bad)
fnstsw
or
xor
clc
in
pop
iret
sbb
pop
call
gs
(bad)
imul
and
or
add
jnp
pop
(bad)
xchg
and
push
ss
pusha
lock
mov
jmp
repnz
mov
test
cld
xchg
hlt
jmp
imul
ds
xor
test
inc
sbb
add
jns
add
pop
inc
retf
dec
fsubr
xchg
mov
stos
add
outs
dec
sbb
inc
cs
(bad)
fisttp
cmp
sahf
push
jp
xchg
sar
stos
das
and
bound
add
lods
dec
fist
jns
test
mov
add
add
inc
or
(bad)
fnstsw
nop
inc
hlt
sti
scas
jns
das
mov
push
mov
sub
inc
cdq
int3
inc
fcomp
xor
cli
sbb
jle
jp
repz
out
int
mov
sub
lahf
sar
lea
mov
xlat
push
mov
stc
or
(bad)
cmp
push
cmps
jle
push
cmc
pop
jno
adc
pop
or
xchg
lahf
dec
out
adc
gs
mov
mul
fadd
mov
neg
shl
jns
shr
add
inc
cld
cld
das
sub
call
shl
sbb
xor
mov
test
jle
psubq
push
cmps
sub
mov
pop
imul
mov
jg
stc
cmc
retf
cmc
sub
iret
sub
push
sub
movs
mov
lods
mov
icebp
leave
rcr
cmc
xchg
test
push
and
rcr
xor
enter
stos
ins
clc
jb
imul
mov
out
push
js
les
stos
repz
stos
sub
repz
xchg
xor
dec
cwde
pop
fist
pop
sbb
jbe
fstp
ss
cld
mov
loopne
push
pop
push
stc
push
es
imul
scas
movs
inc
adc
test
jns
pop
cmp
cmps
jmp
push
pop
cmps
iret
cmp
push
ds
fdiv
(bad)
aas
dec
daa
xchg
jmp
es
pusha
xor
or
xor
pop
je
shl
push
push
jbe
ins
mov
popa
xor
cmp
cmp
fiadd
add
fldenv
mov
stos
add
mov
ds
arpl
jge
aam
push
lea
xchg
scas
shl
sbb
add
idiv
lea
outs
mov
in
loop
loopne
or
mov
in
mov
inc
mov
mov
ja
inc
push
push
cmp
loope
cmp
(bad)
mov
movs
in
mov
pop
lods
xchg
push
mov
div
jle
pop
mov
mov
imul
inc
adc
(bad)
arpl
inc
mov
xlat
or
(bad)
dec
and
adc
daa
hlt
mov
jecxz
or
add
addr16
adc
popa
xchg
pop
sti
xchg
adc
or
add
adc
stos
and
test
pushf
mov
repnz
lods
(bad)
push
leave
push
stos
jle
movs
jae
mov
adc
popa
mov
and
pop
mov
jecxz
xchg
jns
mov
xchg
sub
mov
inc
les
out
jecxz
in
push
ins
into
pop
mov
out
adc
arpl
pop
xor
sbb
imul
mov
mov
clc
pop
xor
test
cmp
sbb
mov
dec
mov
das
xchg
cmps
sbb
adc
jle
mov
xchg
dec
xchg
xchg
std
jmp
mov
ds
xchg
lock
nop
neg
pop
les
fnstenv
sub
or
jnp
movs
push
loope
(bad)
or
nop
ret
pop
jmp
mov
out
mov
xchg
pop
dec
sub
cmp
sub
sahf
xor
in
xchg
or
mov
stos
pop
jbe
into
test
sbb
adc
fistp
fmul
xchg
fucom
cmp
jg
push
push
cmp
jnp
frstpm(287
push
sbb
pop
test
xchg
dec
repnz
std
mov
cmp
xor
scas
repnz
mov
sbb
jno
aas
in
inc
outs
cmc
push
xchg
or
xchg
nop
dec
sbb
les
scas
shr
lds
xor
dec
adc
loopne
cmp
call
jmp
pop
adc
xchg
push
pop
adc
mov
ficom
jmp
icebp
sbb
es
sbb
test
(bad)
lea
mov
jo
(bad)
xchg
cli
jecxz
data16
mov
pop
hlt
stos
cmp
push
mov
push
jecxz
int
sbb
mov
sar
and
arpl
push
div
or
aaa
hlt
test
cli
call
stc
xchg
mov
sbb
add
mov
fmul
sbb
sbb
xor
jp
jne
movs
sbb
fistp
(bad)
outs
(bad)
(bad)
ss
sub
fs
push
jp
pusha
repnz
fidiv
or
push
mov
dec
pop
mov
xchg
outs
push
sub
mov
dec
in
and
jns
mov
dec
ror
leave
jp
in
dec
xchg
push
add
sti
xchg
sbb
imul
xor
lods
lahf
(bad)
xchg
cmp
scas
xlat
imul
cmp
(bad)
sti
jns
aas
retf
fcmovu
cmp
leave
popf
movs
ja
mov
mov
inc
leave
cmc
sub
add
test
push
sbb
adc
out
mov
pop
sbb
cvtps2pi
xchg
add
hlt
outs
mov
out
and
in
jp
lds
sti
xor
push
aad
mov
in
idiv
mov
out
push
into
inc
push
xor
js
adc
scas
pop
enter
loope
adc
and
lea
jbe
jmp
mov
(bad)
pop
in
mov
out
mov
xchg
inc
(bad)
call
sbb
addr16
push
sbb
xor
loopne
push
xlat
sub
mov
add
nop
wrmsr
enter
arpl
dec
cmp
mov
popf
bndldx
cs
imul
pop
clc
dec
cmp
or
bound
fimul
mov
mov
sbb
and
(bad)
add
je
jnp
rcr
xor
jg
inc
sbb
mov
jl
ds
in
call
mov
out
stos
xor
xlat
pop
xchg
retf
and
adc
call
cmps
dec
mov
pop
add
inc
bound
ja
dec
imul
dec
int3
in
mov
jno
adc
lock
sub
pop
out
data16
repnz
pop
(bad)
xchg
fbld
inc
sub
popf
dec
sbb
add
aas
aaa
shr
cld
(bad)
pop
lods
sub
ret
in
imul
add
and
adc
adc
ins
mov
ds
sbb
and
mov
mov
fwait
push
arpl
mov
push
mov
xor
or
scas
dec
push
add
icebp
popa
jecxz
inc
mov
es
out
inc
pop
adc
xchg
dec
adc
or
jecxz
fsubr
mov
mov
adc
mov
loopne
dec
cmp
jl
test
push
dec
pop
fiadd
mul
push
hlt
inc
jns
mov
sahf
mov
call
bound
addr16
aam
lock
mov
(bad)
push
lds
adc
dec
inc
mov
fbld
or
adc
retf
in
ss
xchg
scas
outs
cmp
pushf
daa
(bad)
adc
pushf
cmp
push
fimul
push
(bad)
mov
jmp
(bad)
mov
adc
mov
into
loop
pushw
fmul
jmp
mov
mov
aad
stos
test
cmps
iret
jae
pushf
cmp
push
int
xor
ds
lods
ret
sbb
fsubrp
imul
in
or
(bad)
fs
imul
jg
mov
out
and
fdivrp
leave
and
xchg
ret
push
xor
movs
add
cmc
mov
pop
loope
xchg
push
and
(bad)
jmp
imul
cmp
daa
inc
rcl
fstp
sub
mov
div
test
fcmovnu
dec
inc
gs
dec
mov
dec
jne
sti
dec
leave
dec
fs
stos
nop
in
test
mov
dec
push
jl
add
xor
dec
(bad)
mov
mov
push
dec
xchg
pop
adc
pop
xchg
pop
mov
and
mov
mov
pop
jecxz
cmp
fisub
popa
cld
lock
stos
test
mov
mov
mov
sbb
sbb
mov
daa
and
pop
loop
jns
bnd
mov
dec
push
pop
enter
add
je
inc
in
adc
fimul
int
sbb
scas
sbb
push
add
xchg
sub
mov
add
into
xchg
cld
loop
clc
adc
sub
mov
movs
add
imul
pop
call
dec
retf
int3
xor
aaa
int3
test
cmps
pop
idiv
jle
sti
push
int
repnz
enter
cmp
es
xchg
je
or
or
jae
inc
push
(bad)
xor
xchg
xchg
mov
div
test
test
ja
fdiv
mov
jns
daa
scas
loop
add
pop
jge
push
add
sub
mov
lock
jmp
mov
or
adc
mov
cmp
adc
aaa
xchg
adc
stos
clc
cmc
outs
and
arpl
cmp
das
inc
lds
add
sub
lods
lahf
je
loopne
jns
sub
mov
xchg
retf
add
and
inc
push
xor
sbb
or
add
mov
nop
loope
adc
mov
dec
gs
push
adc
jbe
xor
lods
push
sub
lods
test
pop
int3
mov
or
shl
dec
stc
out
imul
imul
test
push
sub
scas
xor
adc
xchg
mov
and
jno
xor
les
fimul
(bad)
cmp
or
test
test
xchg
xchg
cmp
jmp
scas
ret
cmp
add
std
sub
hlt
(bad)
cs
xor
ins
into
inc
inc
xchg
pop
not
retf
sar
aam
or
cwde
shl
out
lea
push
sub
inc
gs
jae
pusha
mov
mov
xchg
imul
std
mov
cs
xor
js
pop
hlt
ja
imul
fdiv
fldcw
and
push
hlt
(bad)
out
lods
frstor
enter
push
mov
fbld
adc
pop
xchg
xor
mov
pushf
sub
outs
sbb
dec
(bad)
test
int3
(bad)
mov
jb
js
adc
mov
xchg
cld
mov
or
aam
jge
ds
jl
in
sub
adc
call
movs
inc
icebp
lods
and
cs
das
jle
dec
fisub
lock
dec
out
mov
push
popf
es
mov
pop
fild
push
ret
ja
ret
in
inc
cmp
pop
cmp
push
jmp
inc
pop
push
leave
mov
jg
mov
test
sbb
ja
mov
mov
xchg
test
(bad)
fnstenv
pusha
jb
mov
xchg
jle
add
mov
inc
mov
ror
mov
mov
(bad)
ret
jmp
xor
maskmovq
and
movs
icebp
sub
out
shr
xchg
arpl
inc
adc
mov
mov
ins
jmp
cmp
mov
je
cmp
adc
test
jmp
pop
(bad)
add
ror
and
jecxz
pop
or
fdiv
xor
fcomp
lahf
icebp
xor
sub
add
popf
test
or
shl
push
adc
mov
or
push
stos
loopne
dec
mov
mov
leave
das
mov
imul
icebp
lahf
adc
xchg
test
cdq
test
or
shl
ffreep
sub
clc
mov
sbb
fmul
sbb
pop
mov
mov
sbb
fild
adc
xor
iret
mov
add
lahf
push
jno
aam
call
or
pop
push
in
xlat
xchg
mov
int
mov
fiadd
imul
into
pop
arpl
inc
and
jp
sub
out
pushf
jae
mov
adc
std
nop
cli
hlt
fstp
cmp
pop
rcl
push
pusha
xor
dec
mov
psubq
and
ins
jbe
test
pop
(bad)
cmp
mov
loopne
out
sbb
cmp
pop
(bad)
imul
fiadd
stc
test
adc
sub
std
imul
ror
mov
cmps
test
sbb
js
xchg
xchg
push
mov
cs
in
mov
popf
pop
clc
cdq
mov
ret
and
cmp
xor
or
add
pop
sbb
repz
sbb
pop
jge
pop
lahf
movs
aad
fist
push
mov
outs
mov
pop
dec
jbe
pushf
mov
sbb
popa
clc
nop
add
cmc
jmp
test
mov
out
(bad)
fwait
mov
inc
test
rcl
adc
pop
push
aam
sub
nop
pop
sar
ins
or
scas
mov
push
mov
fwait
push
cmps
aas
lds
je
in
xor
movs
addr16
movlps
lock
inc
cmps
mov
jns
mov
jmp
adc
push
dec
xchg
fbld
add
aam
push
(bad)
pop
push
fnsave
add
jmp
fyl2xp1
dec
icebp
cwde
sub
mov
shr
fnstenv
data16
xchg
jle
mov
shl
xor
stos
in
push
push
pushf
adc
sti
fsubr
nop
push
cmps
(bad)
test
call
in
mov
mov
sub
cld
mov
jg
je
jno
push
pop
adc
in
bound
rcr
bound
xor
aam
push
popf
mov
dec
lds
adc
in
fistp
pop
(bad)
cmp
imul
shr
in
xor
inc
inc
xor
dec
ret
(bad)
out
lea
jns
(bad)
xchg
lods
and
pushf
cli
sbb
outs
push
test
nop
fisubr
mov
or
ds
out
pop
jo
cli
in
dec
pop
jne
mov
pop
jno
ret
test
fcom
dec
jae
int3
jnp
cdq
retf
cmp
loope
mov
adc
inc
and
stc
imul
pop
xlat
dec
sbb
and
adc
enter
(bad)
shl
js
cmp
shl
add
adc
mov
fild
outs
xor
div
or
mov
adc
xor
(bad)
out
cmps
jo
rcl
jmp
icebp
mov
dec
imul
add
jl
sbb
push
outs
mov
repz
sbb
fwait
shr
push
repnz
jmp
xchg
dec
add
sub
hlt
sub
popf
es
(bad)
lds
rol
nop
out
(bad)
repz
fnsave
and
hlt
pop
neg
dec
(bad)
sub
mov
aam
dec
mov
mov
imul
out
xchg
cmc
or
jge
push
sbb
sbb
out
mov
dec
and
sub
sbb
xor
jl
xchg
pop
stos
rcr
cmp
into
in
popa
inc
loop
pop
cs
pop
aaa
inc
dec
(bad)
push
pop
sub
add
fidiv
mov
bsr
add
out
pop
fisttp
pusha
pop
mov
sahf
(bad)
data16
bound
shl
add
jecxz
and
pop
les
add
jb
mov
mov
sub
retf
xchg
or
xchg
out
out
or
pop
retf
pusha
pop
sub
dec
jp
inc
scas
out
pop
cmp
sti
hlt
fistp
or
push
test
xlat
mov
repnz
iret
ficomp
stc
xchg
clc
jge
sub
loope
jmp
mov
dec
lods
push
fisub
mov
ins
pop
add
mov
mov
add
xchg
or
xchg
xor
shl
adc
mov
arpl
dec
mov
shl
xchg
push
aad
ret
mov
dec
or
icebp
loope
pop
mov
imul
(bad)
or
xor
lea
xor
(bad)
mov
into
leave
scas
ja
jle
retf
xchg
jns
inc
inc
dec
mov
fcomi
call
popf
imul
xor
pushf
cmps
test
retf
jecxz
adc
and
xchg
mov
in
movs
(bad)
and
leave
push
popa
jb
movs
or
out
push
imul
push
pop
jae
push
lock
push
push
mov
retf
pop
sahf
ja
add
jle
rol
pop
xchg
cmc
ret
or
push
imul
dec
mov
cmp
cmps
mov
sbb
dec
iret
mov
div
in
div
xchg
cmp
push
xor
popa
in
cdq
push
imul
shr
loop
repnz
fmulp
stos
mov
adc
or
dec
pop
cmps
push
(bad)
xor
lahf
inc
ffreep
int
pop
jmp
sar
loope
mov
and
daa
das
repz
xchg
shl
adc
cli
xchg
dec
clc
jo
test
aas
inc
jmp
xchg
gs
sub
xchg
cmp
nop
out
inc
pop
out
loopne
xlat
add
outs
(bad)
stos
pop
ds
sub
(bad)
push
fsub
mov
imul
dec
clc
mov
(bad)
lahf
jg
movs
out
mov
leave
jg
mov
pushf
mov
xchg
pop
inc
or
jg
push
jl
jne
push
mov
cwde
inc
(bad)
in
pusha
(bad)
rcl
stc
jmp
popf
mov
jne
add
gs
pop
add
dec
in
mov
cwde
rcr
and
or
cmp
xchg
psllw
jmp
pop
dec
sbb
shl
xchg
jnp
cmp
sub
(bad)
pop
jae
mov
test
add
dec
jnp
jg
pop
imul
jnp
cmp
ret
loope
out
xchg
call
rcl
cwde
mov
mov
dec
push
(bad)
cld
sbb
and
jecxz
daa
in
sahf
push
cmp
push
push
inc
test
das
sub
sbb
pop
push
cmps
push
bound
(bad)
jp
xchg
lods
out
or
fist
stc
int3
daa
cmps
mov
outs
cmp
popa
inc
stos
pop
in
out
jno
loopne
(bad)
xor
sahf
dec
mov
cwde
in
mov
imul
daa
outs
cmps
data16
pop
and
in
aaa
mov
pop
in
jae
int
in
xchg
inc
ins
or
push
and
add
jae
dec
das
ja
xor
dec
push
rcr
jg
out
sub
jl
jne
sub
xchg
push
pop
dec
xor
adc
test
sub
xchg
scas
mov
test
sbb
push
adc
pop
xor
loop
add
int
lods
or
mov
ss
pushf
popf
int
retf
je
test
xchg
(bad)
fcmovbe
jb
loop
or
push
pop
rcr
xchg
lods
addr16
sbb
int3
cmp
sub
bound
rol
sub
movs
adc
mov
or
push
mov
and
mov
inc
pop
inc
cmps
mov
movs
jp
xchg
add
and
stos
push
jne
arpl
clc
mov
xchg
pop
data16
and
je
pop
pop
rcr
sahf
out
sbb
lea
dec
dec
adc
in
fimul
pop
and
retf
cwde
jecxz
xor
aam
test
jmp
pop
popa
dec
adc
sub
out
pop
push
inc
es
int3
push
outs
pop
pushf
call
mov
bound
lahf
mov
adc
mov
or
inc
(bad)
aas
mov
jns
fst
pop
or
xchg
cmp
adc
cmp
push
aaa
nop
push
xchg
idiv
popf
xor
dec
push
inc
out
popa
mov
add
hlt
xor
gs
rcr
or
inc
ss
mov
(bad)
outs
sar
pop
test
lahf
push
cwde
(bad)
jmp
repz
dec
stos
(bad)
push
ror
or
cwde
popf
jbe
xor
pop
xchg
movs
retf
inc
bound
sbb
fsubr
adc
pop
ret
lock
int
ins
inc
and
pandn
xchg
in
push
(bad)
xlat
les
sub
ja
lds
dec
pop
movs
lahf
scas
ret
jmp
fidivr
cmp
inc
mov
jno
cmp
lds
out
scas
popa
cld
mov
test
lods
mov
sbb
ins
pop
int3
and
in
and
cli
int
or
js
sub
xchg
test
dec
jbe
aam
mov
cmp
sbb
push
repz
out
mov
cmps
push
in
rcl
jne
cmc
push
push
fisubr
out
dec
sub
std
aaa
bound
data16
out
in
jle
mov
outs
outs
sbb
sbb
dec
fst
fstp
call
or
pop
mov
arpl
shr
outs
sub
jb
nop
push
sbb
adc
jle
xchg
sub
rcr
push
pop
jg
out
push
imul
cwde
inc
sub
dec
xor
ss
cdq
stos
call
shl
jmp
idiv
lods
in
cmp
fwait
scas
shr
and
fwait
jg
shr
popa
xchg
dec
lods
xchg
add
and
repz
stc
jo
imul
ja
loop
cli
and
inc
gs
ins
inc
repz
cmp
and
add
inc
test
xchg
test
int3
stc
sbb
iret
jno
dec
ins
sbb
sbb
dec
jmp
add
stc
(bad)
push
ins
dec
jns
call
mov
xchg
inc
mov
xchg
jp
clc
retf
repz
int
cwde
fprem
mov
sub
movs
fnstcw
cmp
in
add
shl
jo
add
fdivr
cmps
rcl
push
rcl
(bad)
repnz
sub
out
inc
enter
inc
mov
std
nop
jge
out
xchg
mov
pop
popa
dec
mov
outs
dec
idiv
pusha
out
lock
cmp
push
and
stos
jl
xor
cmc
into
xor
fs
iret
inc
or
inc
outs
sub
or
nop
push
xor
mov
jle
mov
mov
idiv
mov
cs
mov
push
cmp
das
lods
cmp
scas
int3
jp
test
iret
imul
pop
test
std
or
ret
push
lods
iret
pop
popf
jmp
and
push
test
xchg
fisub
xor
mov
jp
mov
pusha
call
in
into
or
sbb
sub
ins
xlat
ror
mov
(bad)
dec
adc
lds
mov
cmc
xlat
pop
loopne
xchg
jmp
and
lea
arpl
xor
fsubr
nop
pushf
inc
retf
out
(bad)
sub
(bad)
adc
nop
and
sbb
pop
clc
loopne
adc
adc
jo
sbb
jbe
add
jno
aad
mov
add
pop
movs
cmc
jo
pop
cmp
ins
push
jmp
shl
cmps
add
aad
fld
push
in
dec
inc
inc
into
mov
push
loopne
leave
(bad)
xor
enter
test
sbb
test
test
push
jle
stos
sbb
cmp
inc
gs
xchg
xchg
cmp
mov
lods
inc
rol
xchg
fcmovb
vmread
pop
test
sbb
and
add
pop
cli
mov
retf
jmp
cmp
pop
mov
adc
pusha
retf
xchg
mov
pop
mov
mov
aad
xchg
pushf
jmp
mov
xchg
pop
inc
idiv
sbb
aad
pop
mov
fldenv
sbb
in
mov
cmc
pop
jne
popf
xchg
sar
pop
popf
adc
std
aaa
add
mov
mov
dec
leave
mov
or
imul
ret
xchg
js
test
or
scas
ins
lahf
test
add
mov
in
mov
aaa
aaa
add
mov
add
and
dec
xchg
push
and
scas
mov
cmp
ret
gs
xchg
add
sbb
jne
sbb
outs
jge
mov
inc
(bad)
stos
jne
adc
push
or
push
push
cld
mov
mov
mov
xchg
or
inc
pop
push
cmp
xor
xchg
repz
je
movs
inc
push
inc
mov
outs
(bad)
lea
jge
pop
(bad)
xor
add
xchg
fiadd
jmp
inc
int
dec
adc
push
int
sbb
xchg
ins
(bad)
fwait
push
cmp
cmp
add
shr
mov
or
add
lods
fidivr
nop
mul
sbb
sub
inc
loopne
movs
(bad)
js
inc
jno
fwait
jl
ins
sbb
push
cdq
ja
mov
leave
push
push
cmp
out
dec
fs
push
pop
call
jg
adc
sub
inc
loopne
pop
aas
jns
movs
movs
or
inc
adc
add
jae
or
or
addr16
imul
imul
dec
movs
in
into
mov
fisttp
rol
fsubr
daa
imul
fdivrp
inc
and
add
mov
inc
scas
jg
stos
push
sbb
mov
or
push
div
imul
mov
outs
cld
aaa
icebp
sbb
pop
add
add
xor
lds
xchg
jl
dec
shr
vpunpckhbw
push
int
dec
cld
xchg
jg
neg
xor
push
les
icebp
mov
jns
or
xor
nop
mov
sub
std
outs
iret
movs
stc
jo
sti
cmc
push
into
shr
or
shl
jnp
or
xchg
mov
adc
push
push
jno
jo
jae
sub
out
ror
xor
adc
xchg
jg
sbb
pop
and
out
in
ins
in
cmp
mov
dec
adc
sub
add
dec
repz
rcl
sub
repnz
inc
sub
mov
sub
pop
mov
xor
mov
mov
sbb
jmp
ins
lock
sbb
cmp
inc
aaa
lods
mul
push
mov
xor
sub
pop
out
lock
pop
test
mov
inc
pop
sub
cmp
cmps
mov
loopne
sbb
int3
push
std
mov
xor
fiadd
jp
cwde
adc
jnp
or
inc
movs
add
loopne
or
xor
or
jae
jnp
fs
mov
ret
fisub
dec
add
xor
cli
es
cmp
leave
mov
inc
(bad)
out
neg
out
and
mov
rol
pop
out
mov
pop
xchg
adc
rol
mov
(bad)
scas
lods
adc
add
rcl
or
cmp
cmps
mov
jl
adc
sub
hlt
mov
ds
or
cs
popf
icebp
jnp
scas
fwait
dec
or
call
xchg
ffree
cwde
iret
jo
sbb
movs
stos
jl
shl
ss
mov
mov
jg
mov
mov
adc
inc
jl
call
xor
les
mov
sbb
test
lods
fcmovbe
aas
ins
add
cmp
push
or
leave
adc
out
stos
inc
jmp
mov
imul
add
rol
add
ret
mov
or
dec
cmp
sti
test
xor
or
shl
aam
(bad)
shr
jmp
fisttp
loop
es
sbb
dec
out
lahf
sbb
mov
jmp
daa
mov
mov
(bad)
imul
sub
(bad)
loopne
push
mov
enter
aas
add
call
shl
mov
lea
inc
test
iret
dec
add
adc
push
sbb
push
test
cwde
cmp
cmps
sahf
fst
add
sar
mov
push
xor
jl
adc
call
pusha
data16
adc
push
or
inc
add
push
(bad)
int3
push
popf
pop
sti
test
aas
jmp
mov
pop
pop
cmp
rdpmc
movs
bound
inc
nop
pop
dec
outs
jb
in
fisub
popa
test
sbb
idiv
and
ds
sub
xor
push
or
jne
je
stc
push
jecxz
cdq
cld
fcmovb
mov
mov
push
imul
(bad)
mov
(bad)
addr16
call
jae
dec
into
call
or
pop
pop
(bad)
pushf
enter
or
lock
inc
sub
jg
jbe
pop
popa
adc
add
inc
leave
mov
xchg
mov
cmp
test
js
cmc
jl
adc
mov
cmc
lock
adc
mov
mov
inc
std
fsub
mov
or
inc
pop
pop
js
out
sub
es
ret
mov
in
ins
xchg
(bad)
(bad)
cmp
xchg
mov
leave
xor
jg
fs
mov
jae
xor
les
jge
add
(bad)
xlat
out
addr16
xchg
mov
faddp
stos
push
fcomp
ret
push
xchg
mov
jb
test
scas
mov
xor
add
pop
inc
gs
(bad)
fndisi(8087
imul
inc
xor
mov
or
push
pop
loope
push
sti
out
xor
dec
jge
ss
push
sbb
mov
push
mov
cmps
pop
push
mul
rol
pop
test
add
stos
lods
fst
stc
inc
and
repz
mov
js
xor
xchg
dec
cmps
data16
pop
test
mov
outs
cmps
inc
jecxz
mov
add
lock
cmc
dec
enter
sub
movs
lods
adc
imul
sub
aad
lods
jecxz
xor
sbb
adc
xchg
sti
test
(bad)
call
pop
sub
pop
movs
sbb
dec
je
sub
pusha
ss
jo
rcl
call
xchg
jo
add
xor
cmp
ror
test
inc
mov
xor
mul
leave
bound
sbb
push
cmp
cmp
not
push
mov
sbb
jmp
jle
cmps
jg
and
xchg
dec
rcr
aaa
cmp
xor
mov
retf
dec
aad
clc
imul
js
lds
xor
hlt
adc
pop
inc
xchg
sbb
test
pop
retf
add
repz
fbstp
outs
mov
repz
out
push
mov
cmps
dec
sbb
and
push
push
jle
sahf
or
cmp
fstp
push
shl
mov
(bad)
ffreep
pop
fdiv
sub
mov
mov
shr
cmp
pop
inc
or
or
pop
cmp
mov
call
icebp
loopne
fcomip
rcr
or
pop
or
sbb
es
lea
pop
pop
mov
and
loope
jnp
scas
scas
fsubp
adc
xchg
in
rcl
mov
test
in
ret
ins
into
mov
sti
test
pusha
mov
push
test
add
clc
or
or
retf
clc
adc
add
inc
neg
pop
jo
or
xchg
daa
movs
mov
or
push
adc
inc
pop
into
xchg
pop
outs
call
xor
std
ins
in
rep
xchg
sbb
fisubr
push
xor
xchg
ja
(bad)
int3
ja
or
dec
or
es
aaa
pop
pop
push
iret
mov
cwde
inc
aad
xor
ja
cmp
xlat
jbe
pop
pop
pop
mov
cmc
push
sbb
(bad)
ds
fwait
call
cmp
aaa
pop
push
popa
aas
lods
sti
test
inc
shr
xor
mov
add
cmp
xchg
or
repnz
sub
popa
inc
in
mov
mov
leave
mov
inc
push
add
mov
push
push
sti
mov
in
outs
ficom
out
(bad)
jns
cli
loope
pop
adc
jge
jmp
xchg
lahf
lods
mov
cmp
cmp
bound
xchg
dec
xor
xor
sahf
mov
mov
ss
fs
or
std
sbb
stos
test
mov
and
jmp
cmps
aas
lds
imul
dec
fist
stos
push
xor
xchg
xor
adc
add
in
out
adc
xchg
cmp
sbb
sbb
gs
mov
lahf
sub
push
les
and
cs
or
ret
xor
push
and
loop
gs
sbb
es
std
aas
mov
and
cmp
rcl
clc
pop
shr
(bad)
mov
add
sub
inc
mov
es
dec
cmp
cli
or
leave
pop
sub
repnz
mov
push
lods
stc
int3
retf
das
cmc
rcr
mov
mov
pop
xor
fbld
movs
leave
jl
xor
pop
pop
sar
mov
xlat
pop
xor
add
and
or
ret
push
movs
clc
dec
cmc
push
push
arpl
in
(bad)
jge
loope
pop
xchg
lods
cmp
sbb
pop
out
cmp
xchg
inc
adc
and
out
lock
test
lods
ins
or
add
and
rcl
les
sbb
and
adc
xchg
dec
outs
pop
xchg
push
mov
xchg
fnstcw
lahf
add
les
pop
cld
test
int
pop
mov
xchg
adc
push
in
bound
das
add
outs
cmp
xor
lahf
punpckhdq
sub
jl
iret
fld
into
loopne
test
mov
or
mov
sub
lea
repz
ficom
stos
ins
gs
or
loope
test
test
adc
js
cs
pop
fadd
je
je
cmc
pop
loopne
rcr
dec
sbb
cmps
js
mov
ror
(bad)
js
sbb
add
es
ficomp
and
push
in
jo
adc
and
mov
hlt
clc
mov
pop
das
sbb
dec
cmp
dec
xor
adc
jb
push
(bad)
sti
scas
ret
lds
cdq
call
inc
jbe
inc
cmc
jnp
dec
call
(bad)
fiadd
adc
mov
sub
add
(bad)
adc
pop
mov
or
sub
cld
inc
lea
sar
dec
mov
sahf
push
sbb
les
es
aam
(bad)
lods
ins
loope
push
push
push
xor
push
add
fstp
inc
fs
lahf
push
push
or
es
aam
in
push
cmp
jmp
mov
arpl
movs
xor
jge
ins
or
mul
ins
out
je
cmc
ja
ror
jns
jns
retf
fild
adc
jmp
(bad)
or
pop
jbe
fnstcw
icebp
fucomip
jb
lods
cmps
mov
or
cld
mov
or
jno
jo
mov
out
inc
dec
xchg
sbb
mov
outs
mov
mov
sbb
shl
cmp
das
mov
popa
mov
xor
cli
jmp
mov
outs
leave
fimul
(bad)
rol
ja
popf
ss
loop
js
mov
dec
inc
jge
fiadd
and
cs
adc
je
mov
int3
xchg
cld
or
rol
mov
stc
or
ret
test
or
push
cmps
je
call
xor
rcl
and
jg
retf
mov
int
stos
(bad)
out
push
adc
sbb
sbb
xor
test
(bad)
adc
cmp
cs
jp
and
fs
mov
dec
mov
xchg
popf
test
add
call
pop
or
xor
sub
call
movs
cmp
mov
pop
pusha
sbb
stos
repz
push
mov
mov
xchg
out
scas
cmp
xchg
cmp
mov
push
dec
sub
mov
in
jae
push
icebp
cmps
popf
addr16
sbb
lods
or
cli
popa
xchg
dec
inc
jb
push
cs
out
js
sub
mov
push
test
add
scas
xor
sub
idiv
(bad)
out
cmc
xchg
fcomp
addr16
(bad)
pushf
stos
stos
into
cmp
outs
clc
jae
pop
fdivp
call
cmp
(bad)
les
lds
stos
xor
add
loop
dec
mov
mov
aam
stc
nop
xor
popa
ins
bound
or
or
mov
(bad)
fiadd
arpl
lea
lea
sub
add
adc
addr16
mov
pop
or
test
dec
adc
adc
jp
mov
(bad)
xor
and
das
mov
add
or
or
inc
jo
out
push
xor
addr16
dec
call
add
(bad)
out
(bad)
pop
push
(bad)
out
cmp
addr16
inc
mov
ds
lods
inc
ss
shl
pop
aaa
sbb
mov
retf
adc
popa
pop
cmc
jbe
test
rol
in
(bad)
xchg
mov
lods
dec
mov
jg
inc
popf
data16
js
mov
movs
jmp
dec
and
bound
shl
fisttp
inc
imul
in
jle
jo
pop
ret
repz
inc
es
imul
dec
retf
mov
and
cmps
mov
fs
mov
nop
dec
fwait
(bad)
imul
xchg
mov
gs
iret
ror
mov
inc
jge
ja
and
icebp
clc
and
scas
sti
mov
and
xlat
ja
add
jp
sti
mov
sar
ror
sub
fild
cmp
adc
and
sbb
mov
rol
imul
mov
inc
xor
hlt
popa
cli
fmul
push
dec
xlat
shl
cld
fwait
ret
push
bound
mov
js
shl
pop
stc
(bad)
nop
dec
shl
das
js
and
jae
xlat
jae
xor
das
lods
int
xabort
adc
cmps
sub
ja
push
adc
(bad)
jl
add
retf
mov
mov
sub
sub
mov
out
cmc
mov
lahf
pop
loope
mov
nop
(bad)
iret
movs
int3
xor
sbb
mov
mov
popa
outs
test
retf
repz
fs
push
mov
popf
mov
dec
not
push
dec
and
pop
and
cld
mov
pop
cwde
mov
cmp
jo
icebp
xchg
int
call
push
outs
cld
imul
imul
jl
div
cwde
test
mov
outs
jmp
mov
push
sub
mov
pop
aad
jmp
in
jno
mov
jl
stos
loope
pop
cmp
ja
lock
add
xor
cmp
sbb
es
sqrtps
mov
test
bound
(bad)
mov
ja
push
push
stos
inc
rol
pop
aaa
out
ds
nop
test
mov
mov
jne
fs
adc
inc
add
arpl
and
jb
enter
sbb
test
sub
sub
adc
adc
loope
dec
adc
mov
out
xchg
enter
or
int3
inc
out
pusha
and
dec
cwde
outs
pop
mov
cmp
sbb
into
cmps
mov
pop
dec
jbe
jmp
cmp
mov
sub
loopne
cmc
push
int3
inc
(bad)
fldenv
aad
or
sbb
adc
add
cli
enter
lahf
xchg
fs
in
in
(bad)
push
iret
jecxz
test
add
or
lock
cmps
or
sbb
cdq
iret
test
sahf
xchg
pop
out
cli
int
inc
(bad)
pop
add
xor
test
iret
frstor
cmp
add
xor
cmps
imul
jp
sbb
jb
repnz
mov
xchg
imul
fstp
push
std
push
js
sbb
xchg
test
cld
loopne
mov
push
and
fcmovnbe
int
and
loope
pop
lods
xchg
test
add
or
int
mov
or
jno
ja
(bad)
jnp
aas
and
sbb
fcomp
mov
mov
call
(bad)
inc
or
lea
cmps
and
lahf
(bad)
sub
jmp
mov
sbb
mov
rcr
push
mov
jge
ror
imul
pop
stos
shl
adc
rol
xor
adc
xor
ret
repnz
or
sub
movs
mov
ret
inc
xchg
jb
add
push
imul
mov
and
push
leave
or
adc
adc
sbb
shl
in
sub
(bad)
adc
stc
dec
pushf
das
repz
pop
les
aaa
or
lods
shl
or
pop
jp
or
jmp
imul
cwde
sbb
jmp
daa
sbb
sbb
jb
repz
or
mov
xchg
leave
punpckldq
adc
mul
data16
jbe
mov
imul
push
enter
cdq
or
in
sti
ret
add
sti
cmps
scas
dec
imul
mul
push
aas
xlat
and
xor
adc
and
nop
mov
fild
cmc
out
inc
add
add
and
ds
pop
mov
jne
jo
mov
or
jp
push
das
adc
inc
les
dec
aad
push
in
adc
mov
inc
jne
fs
xor
fdiv
xchg
pop
push
adc
ja
imul
lods
lods
aad
imul
nop
pusha
sub
jns
push
enter
add
mov
jbe
dec
push
pusha
idiv
pusha
mov
push
cmp
les
cmp
pop
pop
inc
test
add
mov
cld
xor
inc
jns
mov
dec
cmp
inc
popa
push
(bad)
sbb
or
ret
fcomp
sar
fwait
out
ds
mov
in
jnp
or
adc
add
xchg
inc
test
enter
arpl
inc
sub
adc
sbb
xor
sti
pushf
mov
pop
fst
push
adc
pop
aas
push
cmp
pop
jnp
ins
xor
inc
and
xchg
out
dec
enter
mov
jmp
std
sar
(bad)
inc
mov
test
dec
and
shr
cdq
or
das
add
out
or
mov
jl
inc
pop
add
or
int3
dec
adc
xor
sub
xor
hlt
pop
in
mov
lods
lea
je
sub
movs
or
ret
jae
xchg
xlat
fneni(8087
xor
test
scas
cmp
cs
jp
scas
mov
and
push
add
mov
pop
gs
or
arpl
cmp
les
test
mov
adc
daa
adc
add
mov
div
mov
inc
aaa
in
loope
cdq
mov
outs
rol
mov
add
inc
test
lock
out
jnp
push
test
clc
mov
das
cmps
aas
lahf
xchg
or
or
clc
popf
inc
xor
sahf
or
mov
mov
xchg
clc
mov
or
(bad)
mov
mov
je
mov
push
enter
loopne
cli
and
(bad)
mov
jmp
mov
sahf
xchg
push
(bad)
xchg
or
(bad)
xchg
xor
xchg
xor
scas
clc
(bad)
nop
scas
lods
push
cli
add
arpl
inc
inc
inc
fnstenv
xor
xchg
js
mov
jmp
jb
and
and
sbb
push
ja
jne
mov
jmp
sbb
retf
pop
lods
or
jo
jbe
loope
aaa
clc
(bad)
icebp
lock
pusha
ds
mov
dec
and
test
clc
push
push
clc
jle
mov
jg
movs
sbb
jp
jnp
jbe
es
outs
repnz
adc
pusha
into
jge
test
call
dec
mov
jmp
sub
in
push
mov
aad
and
sub
mov
scas
dec
fsubr
(bad)
clc
lahf
sar
into
push
imul
je
mov
pop
out
out
push
cmc
jne
dec
mov
inc
lods
mov
nop
lock
push
mov
aas
comiss
mov
mov
pop
in
enter
jmp
push
adc
push
cmp
jmp
dec
fdivr
push
push
sub
aad
xor
sub
sub
clc
and
bound
(bad)
stos
out
cmp
leave
ret
popf
lahf
adc
or
jge
fnstcw
arpl
scas
lods
jae
dec
scas
jns
and
xchg
pop
cmps
test
mov
les
cmc
es
repnz
cmp
mov
add
test
sub
ds
adc
dec
jmp
xchg
xor
mov
cmps
push
mov
out
mov
mov
aas
mov
shl
mov
cld
dec
cmp
inc
cmp
in
daa
cmp
mov
jecxz
add
call
mov
mov
add
repz
lahf
(bad)
fstp
into
out
retf
pop
ret
sbb
jmp
cld
cwde
in
hlt
stos
call
sbb
push
jmp
ins
cmp
stos
push
sub
in
test
xchg
arpl
mov
aas
mov
js
sub
mov
inc
bnd
or
adc
push
mov
xchg
mov
out
fcom
mov
push
inc
pop
sub
jae
and
dec
out
ins
xor
dec
push
xchg
xor
xor
in
mov
xor
inc
sub
(bad)
or
loop
enter
rol
dec
xchg
cwde
push
inc
aaa
mov
ret
out
mov
mov
cs
aaa
(bad)
xlat
movs
and
fist
pop
jmp
jb
push
es
repz
js
inc
icebp
cmp
ret
cmps
jge
jno
fnstcw
retf
into
inc
sbb
cmps
cmp
pop
cwde
dec
push
sbb
je
mov
das
fcmovbe
sub
popa
dec
dec
pop
dec
inc
fcom
jl
test
sbb
and
imul
fld
inc
pop
jnp
lea
fcmove
rol
cmc
sbb
xor
and
sub
push
fbld
mov
mov
je
xor
outs
out
lods
mov
cmp
sti
mov
bound
cmp
mov
sbb
loopne
add
scas
ret
pop
mov
sub
cmp
aad
data16
(bad)
clc
and
das
jbe
pop
cs
jecxz
jp
xchg
fcomp
retf
inc
xchg
mov
mov
imul
push
shr
sbb
out
fnsave
and
ret
xchg
jl
and
fsub
les
mov
jp
sbb
dec
and
cmp
jmp
lds
ins
addr16
cli
xor
fstp
fisttp
(bad)
mov
mov
jne
and
inc
or
(bad)
sub
mov
inc
out
lods
and
mov
push
addr16
lock
jbe
jle
jo
adc
int3
stos
les
sub
push
cld
sub
std
test
dec
aad
mov
inc
cdq
mov
and
or
scas
fnstenv
retf
in
lahf
pop
in
cmp
stos
in
cmp
xor
mov
mov
mov
into
(bad)
sub
mov
sub
push
repz
cmp
pop
leave
xchg
mov
pop
(bad)
jecxz
into
retf
or
pop
jmp
arpl
mov
bnd
out
inc
dec
adc
gs
cld
gs
int3
pop
icebp
pop
sahf
add
cmc
sub
xor
hlt
adc
sar
add
push
ja
dec
(bad)
in
and
sub
jp
(bad)
cmp
xlat
(bad)
inc
out
sub
in
popa
int3
test
nop
mov
xor
and
pop
inc
lods
jns
inc
jmp
cdq
ss
and
fwait
inc
inc
pop
nop
aad
inc
xor
xchg
xchg
bound
push
push
call
sub
push
ret
pop
mov
sbb
cmp
xor
mov
enter
xchg
adc
arpl
outs
lods
test
mov
sub
push
or
out
sbb
push
push
jmp
imul
push
js
sbb
pop
mov
jecxz
out
dec
sbb
jbe
mov
mov
es
movs
pusha
cld
repz
sub
inc
lea
mov
jo
aad
sub
icebp
fwait
or
sub
adc
pop
cmc
shl
and
test
dec
jmp
in
mov
fisubr
aas
add
add
popa
cwde
xor
jnp
test
jae
cmp
pop
push
pop
repz
cmps
adc
in
outs
cmps
int3
pop
lock
lock
(bad)
dec
jns
xor
loopne
cmp
into
cmp
into
rcr
sub
stc
repz
fs
pop
je
mov
pop
push
adc
popf
mov
into
test
push
fisub
xor
repz
rep
jns
pusha
es
or
data16
jle
xor
pop
sar
outs
mov
cmps
mov
push
shr
mov
adc
div
loop
inc
push
push
sbb
and
cvtps2pi
pop
ret
int3
(bad)
push
cld
iret
cmp
or
ds
ret
push
xor
js
cs
int3
outs
dec
pop
(bad)
fmul
mov
adc
fcomip
xchg
or
or
loopne
xor
in
add
pushf
sar
jmp
mov
js
mov
cdq
sahf
sub
fisttp
(bad)
pop
jp
aas
sbb
cmp
dec
mov
(bad)
ds
sbb
fsub
xchg
icebp
je
inc
inc
mov
add
rcl
jp
mov
mov
push
(bad)
pushf
add
and
mov
jb
sub
xlat
std
and
cli
push
lds
rcl
adc
jbe
push
xlat
lea
(bad)
sub
mov
pop
shl
les
cmp
sub
(bad)
out
push
xchg
pop
pop
push
and
xor
jg
jmp
out
es
mov
xor
inc
scas
sbb
add
std
mov
or
xchg
call
aas
xchg
daa
cli
jp
out
mov
rcl
jbe
das
scas
and
test
(bad)
loope
hlt
aas
es
sub
push
(bad)
adc
mov
pop
sbb
inc
or
gs
pop
adc
addr16
sbb
je
push
add
cmp
iret
pop
fiadd
or
pop
xchg
sbb
sbb
inc
jne
xchg
pop
std
dec
jne
icebp
mov
pop
sbb
hlt
cwde
call
add
loopne
adc
clc
loope
mov
sti
fcmovu
lahf
pop
lahf
fstp
shl
xchg
jecxz
stc
mov
movs
sub
fidivr
jae
shr
imul
out
and
and
mov
add
rcl
retf
and
xchg
call
sti
xchg
xchg
in
jecxz
retf
sub
loop
xor
in
out
push
ror
and
fcmovnb
jbe
xor
in
fisubr
shl
mov
js
push
pop
ror
les
test
ss
pop
sbb
stos
ret
je
and
fucomp
test
fsub
pop
xor
fnstenv
in
pop
push
xchg
clc
pop
mov
adc
jl
sar
pop
sahf
test
movs
adc
mov
mov
pop
sub
or
pushf
inc
cmps
lds
and
call
jno
cmp
adc
lods
scas
repz
popa
pushf
lock
ret
sub
test
cmp
ins
je
iret
repz
xor
adc
dec
lods
and
push
sar
ret
inc
mov
jecxz
adc
test
mov
cli
cmps
pop
daa
pop
sbb
push
sub
and
lds
and
sets
(bad)
(bad)
jns
pop
xchg
rcr
int
sub
test
dec
enter
enter
cmp
xor
arpl
(bad)
sub
or
sub
shl
lea
push
xor
or
(bad)
and
inc
rcl
jge
test
rcl
fbld
mov
xor
call
rcl
sahf
or
and
inc
jecxz
retfw
sbb
dec
pop
push
jno
setnp
pop
out
xchg
mov
jno
mov
int
fidiv
movs
fwait
int3
ja
dec
arpl
lea
dec
dec
je
or
int3
lahf
xchg
(bad)
push
jg
(bad)
mov
stos
popf
mov
daa
pop
push
adc
scas
push
mov
call
mov
call
sub
mov
fisttp
scas
cdq
and
fs
mov
adc
mov
jne
cmp
les
cmp
xor
pcmpgtb
mov
punpckhdq
scas
hlt
or
mov
xor
mov
mov
in
(bad)
fist
sub
sub
pop
inc
mov
sub
repnz
loop
xchg
xlat
pop
adc
jecxz
mov
in
daa
call
xor
mov
out
icebp
or
or
les
ror
sar
loop
std
sub
aad
aas
cmc
nop
iret
aaa
mov
add
es
adc
inc
adc
jl
and
adc
pusha
xchg
mov
std
cmp
and
pop
fdiv
test
cs
cmp
enter
ss
mov
cmp
pop
mov
shr
sahf
lahf
enter
adc
fbstp
adc
imul
rcr
fwait
clc
mov
pop
add
mov
mov
popa
inc
add
jmp
mov
jge
mov
fucomip
(bad)
xchg
jb
es
outs
fbstp
(bad)
push
mov
mov
outs
test
(bad)
pusha
cs
mov
jno
pop
push
inc
es
inc
aas
mov
xor
fisubr
loop
js
call
test
push
inc
js
and
std
cmp
xchg
ret
mov
in
push
dec
dec
outs
adc
cmps
pop
out
(bad)
sub
mov
push
adc
ds
and
mov
sub
test
xchg
add
icebp
addr16
dec
pop
outs
scas
frstor
mov
ins
pop
xlat
lods
inc
lock
lea
(bad)
outs
lods
add
sbb
and
inc
out
or
push
scas
retf
pop
in
rdtsc
arpl
mov
mov
xor
mov
xlat
xchg
loop
mov
shr
leave
fwait
call
jmp
mov
xchg
loope
inc
loope
mov
sub
xchg
cmp
adc
lods
adc
pusha
ins
jnp
mov
mov
dec
xchg
(bad)
loopne
loopne
cmp
sbb
js
pop
enter
ret
sbb
out
or
fist
inc
test
imul
popa
or
xlat
xor
cmp
repnz
call
out
push
lods
and
scas
movs
sbb
mov
sar
mov
xchg
mov
cdq
sbb
les
sar
out
xor
add
cmc
fstp
repnz
dec
sbb
lods
test
push
inc
dec
xor
sbb
xchg
push
out
pushf
pop
mov
push
cmp
xor
ss
jns
fs
movs
dec
daa
es
mov
and
mov
stos
out
addr16
push
pop
repnz
sbb
in
aas
and
mov
sub
mov
adc
push
cli
subps
aam
fmul
ret
cli
sbb
pop
(bad)
sbb
out
inc
scas
cmp
aam
mov
fadd
cs
aas
mov
mov
popf
push
int3
push
push
jb
dec
mov
in
sar
repz
sbb
int3
pop
add
sbb
jns
mov
xor
add
das
pop
(bad)
fcmovnb
mov
mov
cld
push
cld
jp
xchg
adc
sbb
inc
(bad)
lea
sub
cwde
(bad)
mov
ins
into
and
sub
rcr
cli
sbb
xor
leave
(bad)
push
xchg
inc
sub
std
nop
call
pop
and
mov
scas
xchg
lods
out
xchg
jo
sub
push
adc
bound
inc
xchg
popa
pop
fcmovne
xchg
daa
call
ror
push
mov
rcr
aad
mov
movs
lods
test
test
pop
fld
add
push
pop
push
js
mov
fdivr
(bad)
in
xor
into
sub
pop
out
add
jle
les
popa
pop
mov
push
fcomip
jo
xchg
test
lock
mov
or
outs
in
pop
(bad)
mov
mov
jb
sub
in
(bad)
mov
push
xor
ins
sar
add
mov
retf
test
inc
jge
xchg
les
les
sahf
sar
shr
(bad)
push
push
mov
test
sub
cmp
jno
out
and
aaa
int3
shl
mov
and
jmp
retf
pop
into
sub
jnp
leave
ins
and
fmul
mov
out
jg
adc
mov
adc
out
btc
jo
inc
inc
loope
and
inc
push
fs
xor
mov
gs
out
shl
lods
hlt
gs
inc
mov
lods
mov
and
pop
in
dec
retf
imul
cs
xchg
js
stos
push
mov
xchg
mov
jecxz
scas
or
(bad)
call
push
ret
fs
adc
xchg
xchg
mov
daa
arpl
pop
mov
(bad)
movs
jg
cs
push
xor
mov
mov
repz
pop
pop
pop
sub
xor
hlt
sbb
push
xchg
sub
xor
xchg
pop
sub
push
clc
xor
imul
xchg
mov
mov
arpl
aaa
sti
mov
dec
out
jb
mov
shr
cmps
or
inc
or
push
push
mov
popa
jmp
fistp
movs
or
int3
add
outs
adc
iret
push
setae
jne
jne
adc
mov
jmp
rcr
pop
or
nop
cmp
jnp
out
sub
add
retf
mov
mov
xchg
cmps
adc
and
sbb
fs
call
shl
mov
fadd
xchg
test
jecxz
adc
and
dec
lea
pushf
(bad)
mov
cli
jle
mov
test
and
int3
out
xchg
add
jge
jge
add
int
inc
push
loope
and
sbb
stc
and
ror
lods
shl
mov
pop
nop
jo
add
sub
out
sub
(bad)
les
test
sbb
movs
scas
mov
mov
aam
mov
mov
xchg
mov
test
test
jl
fidivr
aaa
jbe
retf
adc
or
pop
cwde
mov
iret
push
int
fsubr
mov
xchg
push
dec
jno
mov
test
jb
cmp
clc
int3
movzx
sbb
out
xor
stos
push
sbb
sbb
jmp
lahf
in
fs
imul
lahf
mov
lea
(bad)
add
xchg
pushf
mov
dec
sub
das
ret
push
jo
jg
inc
push
pop
add
xor
sbb
nop
push
ret
aaa
aaa
sbb
xchg
stos
nop
rol
dec
pop
pop
mov
ins
sbb
lods
jl
sub
add
pop
imul
adc
dec
call
cmps
(bad)
out
imul
(bad)
fdivr
add
(bad)
jp
dec
movs
dec
test
stos
cdq
add
xor
jns
iret
stos
xchg
shl
sbb
mov
(bad)
and
(bad)
mov
sbb
rcr
jl
ret
bnd
mov
sub
push
ror
xchg
dec
push
mov
pop
sub
xor
shl
mov
jbe
or
nop
jnp
pusha
sub
loope
ret
or
inc
mov
adc
push
jno
leave
sti
xchg
adc
or
rol
pop
sbb
rcl
outs
inc
fsubr
sub
call
ins
dec
stc
add
std
or
fcomp
repnz
scas
in
(bad)
daa
sub
(bad)
(bad)
fst
xchg
mov
outs
rcl
test
(bad)
jge
rcr
push
push
mov
mov
inc
sbb
jp
sub
mov
jge
rcl
xchg
sbb
int3
outs
scas
push
movs
(bad)
fsqrt
add
jle
arpl
sbb
js
out
je
cmps
sbb
mov
sahf
sub
in
xor
mov
aad
inc
mov
adc
cmps
xchg
std
cmps
mov
jg
in
dec
add
cwde
test
jge
or
mov
call
mov
sub
mov
inc
jb
and
pushf
xor
sub
pop
mov
inc
(bad)
call
and
jmp
adc
push
lock
nop
or
dec
ins
(bad)
fs
adc
aaa
push
mov
xchg
dec
push
or
sahf
adc
sub
mov
or
inc
jnp
xor
cld
(bad)
add
ss
pop
pop
icebp
cmp
(bad)
lods
jl
rcr
pop
jmp
div
pop
std
idiv
hlt
mov
cld
call
xchg
mov
xchg
push
pop
pop
cmps
add
add
inc
mov
push
inc
mov
sbb
push
mov
cdq
mov
or
and
dec
adc
xchg
mov
dec
dec
jl
dec
lods
push
(bad)
mov
stc
rcl
mov
pusha
lods
push
or
inc
mov
pop
push
inc
add
inc
rcl
sbb
ret
rcr
out
sti
loopne
inc
loope
ds
je
and
pushf
es
fst
adc
sub
push
push
jmp
out
mov
adc
cmp
pop
stos
push
lahf
lods
outs
(bad)
sbb
sbb
fild
sbb
xchg
or
jnp
push
jo
or
cmps
test
pop
dec
shr
mov
cmps
xor
sbb
xchg
dec
lods
dec
sub
pop
push
xchg
ret
in
daa
sar
dec
pop
xchg
aad
outs
pop
xchg
mov
cli
and
and
fs
mov
in
cdq
mov
inc
mov
mov
frstor
js
dec
cwde
sub
hlt
(bad)
cmp
mov
jb
into
inc
mov
inc
cmps
(bad)
cmps
and
push
jae
iret
loop
cmp
inc
jecxz
push
sbb
sbb
xor
add
xor
mov
pop
jb
imul
rcr
push
pop
movs
bound
data16
sahf
imul
fs
xchg
(bad)
mov
jbe
mov
sub
and
(bad)
into
and
pop
jl
bnd
sbb
mov
cmp
add
aas
inc
cmp
popf
and
enter
push
sub
adc
mov
mov
in
mov
or
fisttp
stos
cmp
adc
and
dec
sub
push
xchg
push
jecxz
(bad)
imul
mov
jmp
xor
inc
inc
jecxz
into
lods
or
xchg
jg
hlt
dec
mov
(bad)
jo
mov
mov
inc
stos
pop
(bad)
jle
sbb
div
jg
bound
shr
add
push
loope
arpl
or
das
in
pop
cdq
jle
movs
sahf
adc
sbb
or
mov
dec
pop
cmp
cdq
pushf
test
into
jmp
pop
ret
into
push
fsubr
xchg
retf
push
mov
sti
and
mov
mov
arpl
push
lods
leave
test
or
jge
movs
movs
jmp
ror
daa
scas
xor
sbb
movs
dec
clc
loopne
xor
adc
dec
jno
cmc
cld
retf
rcl
add
push
mov
jp
and
sub
dec
hlt
pop
mov
aas
call
jmp
and
je
dec
and
ja
jmp
fwait
cdq
cmp
jge
jp
pop
test
sub
call
mov
pop
mov
fisubr
push
fcmovnbe
rol
mov
fs
mov
sbb
or
mov
or
jo
scas
movs
and
iret
fwait
jmp
daa
xor
cmp
aad
scas
clc
cmps
mov
pop
loop
and
test
scas
jmp
jne
jle
pop
cmp
mov
add
jnp
inc
mov
fs
xchg
pop
xor
lods
pop
inc
inc
loope
in
iret
dec
dec
movs
cld
aam
cwde
into
int3
push
ins
repnz
fsubr
lods
sti
mov
add
stos
popf
sbb
gs
scas
inc
lea
out
push
jb
mov
test
adc
retf
js
rol
pop
je
xchg
cwde
push
sub
inc
xor
xor
cmps
xor
jp
sub
(bad)
pop
in
sub
and
mov
clc
enter
pop
dec
push
mov
out
idiv
pop
adc
lods
cs
push
and
pop
scas
sub
mov
outs
out
inc
pop
pop
add
and
bound
clc
cmp
cmp
int
cmp
cmp
dec
cmp
out
adc
ss
jb
mov
call
sub
mov
movs
jne
data16
idiv
scas
in
fstp
addr16
adc
shl
dec
push
jne
arpl
mov
push
bound
add
adc
mov
div
loope
and
or
adc
loop
pusha
fsubr
call
cmp
cmp
cmp
pop
adc
sbb
jmp
jo
xchg
push
imul
add
imul
loop
inc
sub
push
in
push
adc
mov
pop
daa
(bad)
jmp
mov
xor
xor
fs
add
mov
aad
sub
pushf
js
push
or
lock
pop
in
pop
fcomp
jae
cmp
out
inc
aas
mov
push
(bad)
in
pushf
sbb
retw
pop
comiss
jns
and
ds
sahf
jmp
(bad)
test
pusha
fisub
stc
mov
jg
mov
and
inc
pop
and
int3
dec
push
xor
or
add
jle
pop
loope
mov
inc
std
jae
lahf
shl
outs
jge
mov
(bad)
fwait
sbb
mov
and
cs
jecxz
(bad)
lock
sub
dec
mov
pop
repnz
xchg
jmp
aas
jge
bound
fucomp
jge
adc
mov
pop
push
in
div
mov
mov
lea
xchg
inc
dec
fbld
cdq
outs
jae
add
icebp
cmp
scas
imul
push
xor
fdivr
loopne
jmp
xlat
pop
inc
mov
push
popa
cmpxchg
jecxz
add
retf
inc
mov
push
fsubr
adc
std
(bad)
add
mov
stc
pop
bound
aas
retf
push
lods
cmp
out
xor
adc
mov
scas
cmp
repnz
nop
pop
mov
push
inc
das
mov
add
xor
or
(bad)
jne
inc
sbb
sbb
or
test
movs
mov
cmp
pop
push
sub
mov
aad
mov
movzx
retf
push
sysret
inc
inc
stc
xor
pop
mov
fiadd
mov
es
addr16
int
sbb
jae
add
test
call
leave
jg
add
mov
inc
xchg
mov
dec
cmps
ins
out
aas
lock
iret
scas
(bad)
imul
cmp
arpl
add
test
cli
jns
js
and
push
xchg
ins
mov
das
add
xor
push
adc
bound
sub
test
mov
push
xor
int3
cmps
add
mov
mov
stos
outs
arpl
lea
mov
xlat
mov
out
push
cmp
inc
fucomip
rol
inc
sub
xchg
fs
bound
pop
or
ds
ss
(bad)
call
cmp
pop
mov
jbe
es
push
or
lahf
iret
fsubp
push
hlt
jl
pusha
shl
jge
push
popf
loop
and
sub
add
adc
cdq
or
fidiv
fcmovne
push
pop
lods
mov
push
add
out
dec
lds
out
jle
mov
cmps
fmulp
mov
mov
pop
(bad)
or
fdiv
dec
pushf
cdq
mov
outs
push
loope
xchg
(bad)
push
arpl
xchg
sub
pop
sub
adc
bound
fild
imul
sbb
ror
cwde
push
(bad)
mov
add
mov
cwde
xchg
adc
mov
mov
sbb
cdq
lahf
sbb
inc
jge
stc
inc
jle
inc
lds
dec
fld
xor
jp
pop
(bad)
pusha
and
sub
mov
fdiv
ret
push
iret
daa
nop
inc
aas
data16
cdq
pop
arpl
mov
mov
fisubr
inc
pop
mov
or
or
fadd
jp
inc
mov
rol
jae
push
mov
dec
sbb
xchg
mov
sub
inc
cld
test
imul
(bad)
xchg
add
int
sti
mov
inc
pop
in
pop
imul
outs
(bad)
scas
xor
test
fisubr
rcl
mov
leave
xchg
mov
stc
leave
inc
jb
aam
fidiv
xchg
outs
test
sub
ss
movs
or
fidivr
int
popa
and
mov
(bad)
lods
ror
popa
sbb
loopne
pop
cs
cli
repz
xor
cmps
mov
(bad)
fs
add
add
ss
out
outs
(bad)
js
rcl
or
mov
loopne
cld
jmp
sub
mov
nop
xchg
sub
xor
(bad)
and
cli
xor
pop
or
cmp
into
or
sbb
ins
mov
xchg
jecxz
aaa
arpl
add
adc
fstp
shr
jmp
out
cmps
std
cdq
push
inc
mov
xchg
mov
xchg
repz
mov
push
das
jnp
fist
mov
sbb
ins
pushf
pop
(bad)
fsub
aas
mov
lods
bnd
jmp
sub
repz
ffreep
xor
ins
xor
mov
out
adc
bnd
pop
sbb
mov
or
jns
(bad)
cmp
aaa
push
loopne
cs
cld
dec
dec
mov
adc
or
dec
shl
inc
hlt
dec
xlat
in
xchg
jg
outs
ret
and
xor
clc
xchg
mov
rcl
jno
sbb
jge
add
imul
int3
(bad)
es
imul
sbb
rcr
inc
xchg
fs
call
cmp
mov
cmps
ret
(bad)
enter
aas
xchg
pop
(bad)
addr16
and
jp
xchg
loopne
sbb
shl
mov
ins
sti
adc
fcom
add
iret
and
xchg
into
lock
xor
mov
repz
daa
pop
or
and
pushf
adc
jle
loope
neg
gs
mov
push
and
jno
xchg
xor
add
fdiv
add
mov
loope
dec
adc
push
lods
mov
push
xor
or
sti
lods
xor
outs
push
jae
mov
aaa
mov
scas
mov
jge
loop
push
dec
ror
repnz
rcl
xchg
sbb
test
mov
push
inc
mov
popa
xor
outs
pop
dec
jp
repz
and
daa
sbb
adc
jg
push
arpl
js
pop
hlt
lods
sbb
popa
cmc
jns
dec
mov
xor
pop
and
outs
arpl
arpl
int3
xchg
pop
dec
ins
or
imul
pop
pusha
mov
mov
sub
pop
cld
ss
or
inc
xchg
push
xchg
cmp
push
pop
xor
fistp
add
loop
rcl
or
push
dec
sub
adc
cmp
cmps
jo
pop
imul
ins
jge
mov
das
xchg
out
push
mov
clc
ja
popa
push
out
cmps
pop
mov
sahf
inc
rcl
cmp
outs
rcl
jne
xor
jnp
pop
pop
aas
icebp
(bad)
jle
mov
rcr
neg
inc
xchg
sar
inc
xchg
hlt
xchg
xchg
mov
ja
loop
bound
or
(bad)
jbe
jnp
rcl
sub
out
lock
call
(bad)
pop
xor
into
mov
movs
mov
xchg
(bad)
xor
xor
je
lods
popf
retf
mov
mov
inc
add
mov
mov
(bad)
les
movs
jge
adc
ss
push
mov
mov
jbe
jnp
dec
or
ja
adc
xor
cwde
cmp
xchg
shl
outs
xchg
fiadd
pop
sub
dec
inc
into
ficom
mov
inc
es
pop
lods
and
sub
movs
jl
dec
xor
push
inc
sub
cmps
push
and
outs
(bad)
lea
lds
in
inc
jb
(bad)
shl
or
adc
movs
iret
arpl
aas
jno
ins
mov
jp
in
jns
sti
imul
xchg
cmp
inc
test
or
lock
mov
mov
sbb
shr
and
sbb
sub
ins
int
mov
lods
mov
movs
inc
or
dec
sub
push
sub
clc
cmp
mov
xchg
xchg
adc
sbb
mov
popf
and
mov
leave
shl
and
jne
or
or
push
inc
leave
imul
xchg
psrlq
xlat
sub
fiadd
cmp
pop
and
jbe
mov
jmp
pop
sbb
jb
and
lea
mov
xlat
in
je
inc
mov
push
mov
rol
inc
sub
or
in
dec
stos
jmp
jg
stos
out
pop
push
pop
pushf
(bad)
jg
mov
mul
or
repz
ja
adc
or
sbb
dec
aas
(bad)
(bad)
xchg
mov
mov
outs
dec
jl
lds
add
clc
outs
ja
add
cmp
mov
out
xchg
jae
loopne
fmul
fwait
adc
push
sbb
xor
pop
test
aaa
add
aas
xor
sub
xchg
shr
fs
sub
ret
push
dec
das
sub
cli
test
xchg
cs
enter
jns
push
nop
cld
jae
sub
mov
loopne
lock
adc
ja
mov
push
(bad)
std
add
loopne
into
inc
movs
or
mov
adc
xchg
enter
ds
arpl
shr
ja
mov
add
dec
rcl
xor
pop
scas
mov
pop
push
or
and
mov
push
gs
xor
mov
ja
xor
mov
popa
je
pop
mov
inc
pop
jg
jecxz
xchg
pusha
mov
sub
test
pusha
bnd
into
cmc
lods
ret
push
dec
cmp
rol
pop
cmp
adc
shl
dec
aas
fst
jp
in
fimul
push
cwde
lods
mov
js
sbb
xor
mov
or
fadd
aaa
es
xor
sbb
cmp
lds
mov
fisub
cmp
jle
jle
inc
cld
add
inc
jmp
fwait
int
shl
inc
add
loop
and
push
out
jle
out
sbb
mov
int3
mov
iret
mov
arpl
xor
cmc
fnstcw
xor
jno
add
scas
aas
cld
stos
cmp
test
push
shr
push
out
dec
xchg
mov
mov
lahf
xchg
js
sub
mov
div
add
retf
sahf
popf
cdq
jo
ret
movs
(bad)
cmp
jo
dec
mov
in
jne
add
mov
jl
adc
cmp
sbb
add
cmp
and
dec
push
lds
pop
pop
add
pop
or
xlat
(bad)
in
ficom
inc
pop
sahf
xchg
adc
lahf
add
leave
xchg
scas
out
setbe
dec
jbe
push
jnp
mov
jmp
add
pop
and
pop
mov
mov
adc
daa
ror
mov
cwde
(bad)
and
scas
call
ror
push
dec
stos
cmp
clc
cli
(bad)
jg
shl
xor
cmps
arpl
dec
add
jl
or
icebp
in
jle
xchg
mov
(bad)
fcom
ret
and
xchg
cmp
scas
js
inc
jecxz
sub
jne
lds
cdq
dec
bound
(bad)
xor
in
inc
cmc
cmp
in
test
jb
push
ins
sbb
nop
xchg
or
push
mov
mov
div
and
iret
popa
imul
out
leavew
pop
nop
stos
lods
cmp
sub
push
jg
push
aas
aam
gs
adc
cli
jl
mov
std
sub
mov
mov
lahf
imul
bound
push
pop
leave
setne
sahf
and
mov
bt
inc
cli
fwait
outs
cli
(bad)
int3
mov
cmp
cmp
xchg
leave
popf
stos
add
test
stos
mov
push
mov
ret
add
xchg
mov
out
imul
cmp
mov
ror
(bad)
cmps
(bad)
fnsave
stos
push
xor
imul
into
outs
pop
jge
arpl
dec
add
daa
mov
movs
sub
jecxz
adc
rcl
mov
pushf
sbb
je
xchg
mov
push
jno
xchg
outs
jb
pop
xchg
jmp
and
add
test
mov
sahf
pushf
les
sub
jp
dec
sub
ret
xor
pusha
outs
in
add
mov
(bad)
int
push
sbb
xor
mov
ins
xchg
sub
shr
(bad)
js
loopne
add
(bad)
popf
test
add
mov
mov
out
pop
movs
add
and
popa
les
pop
mov
inc
jbe
mov
int
and
xchg
push
mov
push
sub
xchg
add
ficomp
loop
(bad)
in
mov
mov
xchg
xor
ret
push
xor
xor
mov
js
xor
sbb
pop
and
sbb
and
jo
cmc
sub
inc
adc
aam
enter
inc
or
cli
rcr
adc
in
mov
inc
scas
adc
pop
dec
sbb
repnz
inc
(bad)
sub
ss
lock
stc
leave
dec
xchg
shr
fisub
push
or
and
xchg
jecxz
xchg
add
jecxz
inc
adc
adc
(bad)
data16
push
or
jno
or
gs
sub
test
scas
add
(bad)
jge
dec
not
(bad)
jp
mov
jbe
cmp
rep
fwait
jbe
stos
jecxz
cli
xchg
dec
inc
adc
push
pop
(bad)
lods
cmp
pusha
pop
push
fimul
pop
aad
pop
dec
cmps
std
aam
or
cmps
jnp
ds
sar
xor
aaa
ins
popf
pop
shl
sub
es
repnz
or
sub
push
xchg
lods
hlt
in
cmp
rol
ja
cmp
mov
and
jge
cmc
cmp
movs
mov
cdq
xchg
or
test
adc
sub
psubb
jbe
scas
mov
les
fidiv
mov
and
shl
out
xlat
xchg
leave
inc
push
scas
and
imul
cmps
mov
xor
pop
pop
movs
nop
cdq
add
out
enter
pusha
aas
nop
lahf
hlt
loopne
xchg
mov
fisttp
rcl
push
and
clc
leave
clc
lods
cmp
jae
push
mov
(bad)
loopne
inc
dec
jne
or
loopne
adc
xchg
(bad)
sub
jno
outs
ds
test
repnz
push
test
loop
mov
out
and
push
sub
cmp
mov
xchg
retf
inc
inc
mov
xchg
mov
add
mov
sub
jae
cmp
adc
jmp
sub
lahf
push
jmp
push
pop
mov
int
sahf
xchg
sub
inc
inc
sub
mov
in
fcmovu
xchg
xor
jne
cwde
stos
inc
xor
and
mov
adc
popa
pop
out
pop
push
lods
loope
jnp
imul
cmps
ins
dec
push
shl
das
std
or
push
mov
cmps
xor
repz
setl
test
je
js
sbb
jg
shr
loop
cmp
jo
mov
push
lods
lods
jo
(bad)
mov
jbe
mov
xchg
add
rol
mov
xchg
push
adc
add
inc
popf
mov
jb
fwait
dec
jnp
push
xor
out
cmp
and
push
and
shr
dec
or
aaa
outs
jge
hlt
outs
or
xchg
mov
jecxz
pop
dec
rol
sbb
outs
xchg
mov
or
ss
xor
pop
mov
(bad)
push
retf
push
lods
ror
jno
add
iret
pusha
jecxz
jno
test
jnp
pop
adc
in
cmc
aam
inc
mov
mov
xor
push
imul
icebp
out
into
mov
jle
addr16
jl
(bad)
mov
sub
lods
adc
sbb
sbb
fwait
jg
lahf
rcl
mov
push
inc
push
sub
ror
xchg
mov
push
(bad)
sbb
cmps
icebp
xor
shr
push
xchg
mov
call
retf
jns
les
adc
retf
or
pusha
adc
cli
inc
pop
xor
mov
mov
or
pop
lods
jb
pop
push
cmp
mov
mov
add
push
imul
mov
pop
mov
and
xor
into
loop
shl
loopne
stos
dec
clc
fimul
mov
data16
xchg
adc
enter
ret
stc
scas
mov
fisttp
cmovae
inc
nop
push
inc
or
xor
shl
and
push
aad
dec
xor
jne
movs
sbb
repz
mov
cmps
jmp
push
lahf
mov
sahf
aam
(bad)
lods
xchg
xchg
push
pop
ds
and
mov
fild
pusha
popa
sub
and
lea
es
(bad)
leave
xchg
sub
ret
xchg
call
dec
mov
xor
dec
mov
sub
cmp
sub
mov
scas
dec
dec
or
xchg
pop
jecxz
dec
cmp
packssdw
mov
and
mov
sub
push
dec
adc
adc
push
hlt
fdiv
repz
sbb
and
idiv
imul
mov
ss
mov
xchg
adc
pop
mov
push
pushf
pop
imul
mov
inc
push
aaa
xor
or
xlat
mov
sbb
adc
dec
jg
stos
cmc
push
push
ins
leave
inc
in
dec
adc
or
xchg
aam
sbb
stc
xchg
lds
or
hlt
(bad)
ret
push
mov
jb
inc
cmc
adc
jnp
daa
cmp
mov
mov
xchg
pop
adc
mov
jecxz
adc
jge
mov
gs
neg
cmp
push
sub
pushf
nop
retf
dec
ja
sub
lea
cwd
jle
jmp
or
sbb
mov
test
aad
test
das
adc
test
jp
je
cs
shl
mov
xchg
mov
jg
into
(bad)
pop
dec
lea
xor
mov
mov
in
pop
mov
rcr
in
mov
enter
rol
adc
paddq
mov
inc
adc
stos
sub
inc
mov
adc
xor
addr16
inc
retf
call
mov
inc
pop
ss
push
rol
cmp
inc
sub
stos
imul
cmp
xor
bound
movs
push
aas
sti
cdq
aad
cmp
mov
fwait
jp
adc
ins
popf
inc
jmp
adc
rcl
mov
popa
cmp
stc
cdq
push
inc
int
xor
ret
int3
adc
pop
pushf
imul
fmul
jo
mov
xchg
loopne
push
cmp
fcomip
in
(bad)
dec
je
mov
or
sub
pop
push
setb
adc
inc
retf
shr
cdq
arpl
cmps
add
mov
xchg
mov
mov
jnp
push
(bad)
rcl
pop
repnz
cmps
xor
cmp
sti
xchg
inc
int3
push
sbb
or
shl
xor
fiadd
mov
sbb
das
inc
sbb
retf
leave
or
in
xchg
das
in
and
sub
js
movs
lea
push
mov
jecxz
ret
sub
fwait
out
push
cmp
xchg
out
es
and
sar
cdq
pop
mov
icebp
into
sbb
dec
adc
(bad)
jp
in
fsub
cmps
icebp
push
in
and
call
sub
xor
jmp
leave
add
jmp
add
adc
neg
loope
pop
loopne
and
jne
pop
(bad)
jmp
dec
xor
add
xchg
enter
pop
js
and
mov
mov
and
(bad)
test
shr
aam
fcomp
pop
sub
aam
out
sub
mov
mov
sahf
sbb
mov
jo
add
pop
or
pop
push
stos
and
rcr
and
test
into
pop
stos
ficom
shl
sub
les
and
or
xchg
jecxz
pop
jge
cmp
out
or
(bad)
lods
mov
neg
lds
out
std
cmp
repnz
and
mov
jo
cmps
loop
out
clc
imul
dec
clc
mov
mov
sub
(bad)
gs
xor
scas
mov
ins
nop
jge
leave
dec
rcl
xlat
jnp
push
mov
dec
pusha
loopne
mov
inc
mov
ret
sbb
clc
push
jo
sub
or
test
(bad)
out
or
cmp
mov
outs
mov
das
es
xchg
popf
mov
les
movs
pop
(bad)
push
jbe
mov
add
cmps
jmp
mov
out
push
mov
lds
out
(bad)
pop
retf
add
fwait
jae
dec
jl
jmp
add
xchg
loope
xchg
sti
lea
xor
ffree
pop
cmp
loop
inc
in
shl
and
fs
test
sub
mov
dec
(bad)
push
mov
dec
inc
jmp
sub
push
in
mov
mov
addr16
iret
sbb
pop
inc
dec
add
adc
dec
test
ins
test
or
adc
pop
stc
jo
mov
jmp
fbstp
jb
add
adc
xchg
pusha
mov
inc
jbe
xor
sti
repnz
or
pop
mov
and
in
push
cli
aad
stc
les
mov
outs
imul
jne
mov
call
mov
push
jae
repnz
xchg
es
add
xchg
inc
jp
not
push
(bad)
fwait
iret
xchg
add
mov
(bad)
mov
iret
sub
mov
pop
dec
pop
adc
dec
int
xchg
call
rcr
rcl
xchg
push
sbb
pushf
inc
dec
das
cs
mov
loope
movs
sbb
fcomp
test
inc
jae
push
pop
xor
adc
outs
cmc
pop
hlt
dec
sbb
mov
push
push
lods
lods
loope
outs
adc
and
jns
jmp
or
addr16
ret
fwait
(bad)
fnsave
mov
lods
in
mov
push
ins
or
lahf
cmp
mov
nop
gs
cwde
mov
xchg
xor
dec
retf
fbstp
and
out
ins
mov
pop
gs
cmp
pop
data16
jg
cmc
jbe
pop
dec
aam
imul
mov
mov
call
adc
mov
mov
add
lods
add
xchg
cmp
jmp
push
in
or
add
xchg
sbb
push
inc
push
fsubr
inc
sbb
aas
xchg
and
add
jmp
popf
int3
xchg
js
xchg
push
push
daa
cdq
pusha
push
mov
push
mov
movs
push
xchg
pop
dec
arpl
es
mov
and
and
push
xchg
jle
cmp
cmp
xchg
mov
jcxz
sbb
js
pop
retf
cmp
ret
mov
push
pusha
xchg
add
jle
dec
fdivr
aad
ret
loopne
xor
pop
dec
inc
and
xor
inc
cmp
cmp
pop
loope
inc
xor
mov
cdq
mov
push
sbb
and
xchg
sub
sbb
push
(bad)
jg
lock
in
mov
xchg
fcmovne
sub
pop
(bad)
push
ret
(bad)
loopne
ror
and
push
lods
ja
and
mov
rcr
aad
sub
adc
hlt
lods
adc
call
pop
cmp
inc
pop
not
sbb
in
xchg
leave
xor
mov
sti
aaa
test
and
leave
mov
iret
cmp
xor
je
jmp
stos
adc
je
jl
fild
push
pop
push
out
sub
ror
dec
loope
fwait
sahf
mov
mov
jg
fcomp
jno
xchg
leave
mov
in
cs
sub
std
push
sbb
lock
aas
loop
mov
adc
cmps
pop
lds
cmp
fucomp
push
fldcw
cld
movs
into
mov
push
adc
cmp
and
xchg
sti
push
movs
das
dec
loop
(bad)
(bad)
xchg
or
jl
inc
ins
pop
in
pop
push
inc
shl
rcl
out
popf
in
ins
jge
jg
sbb
hlt
cdq
push
jp
xchg
sbb
in
dec
aam
daa
xor
or
test
mov
jmp
cmps
lods
icebp
add
cmp
sub
jle
dec
nop
adc
pop
pop
adc
movs
jae
inc
leave
in
aaa
xchg
outs
imul
pop
loope
adc
lock
sbb
sub
iret
ficomp
mov
cmp
daa
jb
sub
sub
fistp
push
xor
ret
xor
retf
imul
inc
add
or
cs
mov
cmps
add
jnp
cmc
or
repz
sub
retf
fwait
movs
adc
je
imul
dec
mov
mov
xchg
in
clc
stos
cmp
pop
add
rcl
not
pop
pop
std
xchg
push
push
cli
mov
out
repnz
jb
pop
pop
imul
mov
ficom
add
bound
test
scas
or
xchg
add
xlat
call
inc
mov
jns
mov
inc
(bad)
out
das
ror
shl
mov
cmp
shl
sbb
mov
call
or
idiv
(bad)
xchg
sub
daa
inc
imul
jmp
cld
ror
sbb
push
repnz
movs
mov
(bad)
mov
cld
dec
or
outs
dec
cmp
icebp
jl
aam
xor
sub
pop
add
inc
out
mov
jl
in
in
aam
imul
cmp
test
xlat
loopne
xchg
inc
mov
xor
dec
xchg
lods
add
mov
cmp
out
daa
xchg
movs
mov
cmp
cmps
loopne
pop
aaa
push
inc
mov
enter
and
push
sar
or
jl
(bad)
(bad)
xchg
(bad)
(bad)
push
movups
movs
mov
push
rol
retf
movs
das
jp
and
xor
cli
sub
jmp
pop
shl
mov
dec
mov
jmp
aaa
push
packuswb
pop
push
jg
ds
jp
xchg
ins
lods
jmp
jno
or
daa
lods
stos
sub
mov
es
nop
cmps
repnz
and
lds
jmp
cmp
rcl
adc
mov
push
mov
dec
or
mov
jno
push
inc
xor
movs
inc
test
aas
jb
pop
or
js
mov
pushfw
and
hlt
ins
icebp
jne
add
xlat
inc
add
jne
inc
sar
es
cld
mov
jne
jmp
pop
xor
retf
cwde
pop
push
and
std
mov
outs
retf
xor
(bad)
(bad)
test
jecxz
jo
sub
mov
mov
jnp
push
jno
xchg
je
xor
inc
jmp
push
sub
sar
xchg
std
pop
lods
cmp
shr
push
push
cdq
and
push
jb
dec
add
mov
mov
lods
xor
pushf
in
add
dec
mov
sub
repnz
adc
in
mov
test
cmp
leave
sar
vmovd
or
daa
xchg
mov
pop
push
xor
aad
and
retf
push
jmp
lods
jp
mov
and
loop
jmp
sahf
sub
test
sub
mov
test
popa
or
in
lahf
push
mov
movs
gs
cmp
jecxz
sbb
mov
aam
pop
das
rol
out
test
jl
ret
cmp
push
cmps
shr
ror
shl
sbb
xchg
mov
pop
cmp
bound
lds
dec
mov
push
jne
(bad)
test
jnp
int3
lds
cmp
aad
call
add
cmps
mov
pop
push
push
cmp
rol
jle
push
dec
repnz
mov
push
or
push
jae
mov
lock
std
hlt
xchg
xchg
aam
ins
loop
ins
adc
jno
ins
mov
sbb
popa
jae
and
stos
mov
mov
inc
jecxz
xchg
jecxz
sub
lds
mov
mov
shl
cs
sbb
mov
and
push
loopne
adc
mov
mov
movs
dec
cmp
ds
inc
loope
loop
mov
jg
adc
pop
out
cmp
jp
or
or
cmp
int3
jmp
mov
cmp
aaa
ins
or
xor
dec
nop
addr16
pusha
jo
add
bound
adc
sbb
add
fcomp
add
fbld
add
(bad)
adc
mov
add
inc
adc
sub
out
fadd
mov
retf
ds
std
cs
(bad)
or
(bad)
push
mov
cmp
ret
dec
mov
aam
ins
and
movs
xor
(bad)
jo
stc
cmp
mov
and
call
mov
adc
push
shl
popf
out
add
pushw
adc
aas
pop
mov
je
jno
adc
call
inc
fldenv
out
in
pop
jl
das
sbb
sbb
cmp
pop
mov
stc
pop
xchg
inc
and
mov
cli
loopne
cmp
and
stc
sub
fist
xchg
pushf
imul
push
adc
cmp
int3
in
jnp
data16
pop
fucomp
(bad)
call
enter
pop
popa
movs
inc
je
scas
xor
xlat
call
shl
outs
addr16
add
punpcklbw
and
imul
cmp
nop
push
push
cdq
mov
ret
mov
clc
jne
cmps
adc
xchg
inc
sar
cmp
or
cmp
push
mov
sub
cmp
in
cs
mov
sahf
scas
fdivr
fld
sbb
dec
mov
test
popf
jge
add
cs
sbb
sbb
(bad)
popa
mov
dec
or
cmp
sub
xchg
movs
cmc
mov
repnz
daa
xor
and
and
gs
pusha
mov
cs
imul
push
cmp
or
enter
ins
aad
cwde
das
push
cmp
out
add
xchg
jecxz
adc
data16
mov
ss
mov
mov
lds
add
push
sbb
jmp
jno
ds
adc
cmp
inc
jo
dec
push
dec
mov
imul
arpl
test
mov
mov
ret
xchg
call
and
add
dec
push
jl
pop
es
jmp
sti
popa
test
ret
push
repz
push
data16
jno
in
and
call
movs
iret
lock
fimul
inc
jno
mov
pop
cmp
mov
mov
cdq
pop
sub
je
ss
in
call
cmp
js
jb
jno
dec
test
and
lea
mov
mov
test
sahf
jle
jmp
add
shr
out
sbb
test
adc
xor
inc
movs
les
adc
lods
iret
data16
jbe
retf
test
addr16
scas
mov
hlt
cld
scas
loop
(bad)
ins
jg
sti
sub
cmp
mov
rol
scas
fwait
push
pop
mov
sbb
dec
push
cmovb
movs
cmps
cmp
pop
xchg
push
les
movs
xchg
cdq
fwait
push
ror
xlat
mov
and
loop
push
mov
add
pop
bound
and
sahf
out
fidivr
dec
inc
mov
inc
add
lods
sahf
(bad)
xchg
cli
or
ret
pop
push
clc
and
sbb
xchg
mov
je
out
mov
xchg
or
int3
imul
pop
xchg
jecxz
mov
leave
xor
xor
rol
cdq
fbld
call
xor
adc
loope
and
out
cmp
push
lods
or
test
mov
jmp
clc
mov
jge
jo
xchg
dec
push
xchg
mov
outs
ror
adc
xchg
add
adc
inc
jns
cmp
and
dec
iret
les
fs
add
mov
add
int3
popa
outs
popf
scas
jnp
bound
mov
movs
push
add
xchg
nop
fnstcw
pop
iret
sbb
xchg
out
bound
jmp
mov
dec
arpl
imul
adc
test
and
mov
in
xchg
dec
or
mov
and
push
iret
aaa
sbb
ins
test
aaa
inc
push
dec
push
repnz
fisttp
adc
jmp
mov
icebp
add
jmp
inc
call
lahf
into
aam
pop
out
jg
out
xor
cmp
jae
mov
jmp
sub
les
lahf
fs
cmp
(bad)
push
out
adc
jmp
rcr
xor
sbb
fsub
xor
xchg
mov
mov
sub
mov
adc
jg
xchg
cmps
and
push
xchg
pop
shl
cwde
clc
fidiv
inc
mul
inc
or
mov
popf
push
scas
repnz
movs
sbb
mov
lds
mov
push
gs
frstor
push
xchg
idiv
imul
xchg
xchg
out
mov
jb
dec
lds
out
fs
jle
daa
sbb
mov
leave
in
in
or
jle
in
ds
das
jmp
inc
lock
inc
or
imul
pop
xchg
jno
jno
ins
out
push
add
adc
adc
pop
push
sbb
mov
mov
lahf
inc
push
pop
xor
pop
stc
aaa
dec
and
rcl
rcr
in
push
fucomp
jp
mov
add
call
dec
adc
or
inc
movs
inc
or
pop
sti
fsub
imul
fidivr
js
cs
and
inc
imul
fistp
sti
std
xchg
in
or
fs
cdq
xor
aam
xchg
pop
aam
push
sbb
mov
push
add
loop
mov
lods
lods
jle
dec
lods
dec
(bad)
cmp
popa
cmp
stos
sbb
pop
fnstcw
lahf
test
les
add
jnp
and
cli
cmp
and
sbb
xchg
fs
mov
adc
mov
idiv
jbe
mov
ret
dec
repz
mov
in
out
and
or
inc
xchg
fstp
or
lds
sub
pop
loop
xor
or
inc
leave
sub
movs
mov
pop
xchg
mov
(bad)
(bad)
aaa
das
aas
rol
sub
pop
jge
mov
aam
in
xchg
mov
outs
clc
iret
nop
iret
xchg
cmp
cmps
arpl
and
xor
dec
push
inc
pop
push
jl
fsubr
xchg
pushf
or
out
push
cmp
aad
mov
xchg
sbb
jmp
xchg
test
pop
jmp
sub
xchg
ror
mov
jecxz
mov
lahf
imul
cs
cmps
cmps
and
sub
js
hlt
adc
pop
ja
push
enter
inc
and
cwde
mov
cmp
mov
pop
sbb
rol
adc
fwait
fs
fwait
rcr
pop
inc
sub
loope
or
mov
add
leave
pop
and
or
into
retf
iret
aam
fs
call
mov
loop
out
les
xor
add
rcr
jecxz
sub
outs
adc
push
in
xchg
iret
pushf
ret
not
cmp
mov
mov
add
sub
(bad)
cmovle
les
dec
(bad)
xchg
mov
jle
sub
cmp
ror
add
fiadd
popa
mov
mov
mov
push
jo
and
mov
jae
dec
jbe
enter
or
fs
outs
jle
xor
retf
sbb
and
push
xor
mov
add
xchg
jb
dec
daa
push
daa
in
test
aas
ror
mov
mov
mov
cmps
das
out
xchg
sub
leave
mov
test
and
icebp
ins
pop
jnp
das
mov
mov
jb
call
ins
inc
xchg
popa
pop
int
push
adc
out
jno
mov
popf
mov
aam
pop
repz
fbstp
int
inc
adc
jl
push
or
dec
inc
jb
icebp
or
push
repnz
adc
movs
xor
fwait
out
cwde
rol
ins
fs
std
push
popa
sbb
inc
mov
test
test
scas
data16
je
(bad)
lahf
jne
jbe
ins
xor
lds
cmp
lahf
push
gs
sub
mov
enter
fwait
aad
or
adc
sub
push
mov
(bad)
mov
imul
inc
(bad)
in
xor
dec
ret
jp
add
and
popa
sub
mov
ss
ins
or
pop
inc
scas
aad
ficomp
xor
push
pop
add
xlat
lea
iret
fs
mov
xlat
pop
cdq
inc
pusha
push
mov
daa
push
xchg
or
or
mov
lods
xchg
cmp
pop
cmp
sub
add
pop
jae
je
loopne
cmps
fdivr
shr
fdiv
xchg
xchg
push
or
and
mov
cmp
jo
js
sar
inc
fistp
sub
sub
push
outs
sbb
mov
mov
fwait
data16
mov
push
and
jl
xchg
nop
jmp
popa
in
mov
mov
call
cld
pop
sar
iret
dec
xor
test
jg
es
add
mov
ss
mov
les
jecxz
adc
ja
push
popf
gs
stos
inc
fsubp
std
js
inc
add
jo
pop
jne
cmc
ins
push
mov
out
scas
outs
xchg
mov
jge
setl
xchg
pop
ja
xor
mov
addr16
sahf
inc
xor
inc
jo
jmp
stos
mov
pushf
mov
xor
xchg
pop
aam
or
les
sti
jmp
test
cmp
jp
adc
jl
lds
push
sub
stos
or
xchg
cmp
xchg
loope
pop
sti
ror
cdq
aaa
(bad)
into
dec
pushf
std
mov
call
shr
jne
mov
rol
sahf
into
adc
iret
dec
mov
test
cdq
out
add
cli
dec
test
pop
jle
mov
dec
(bad)
sbb
mov
std
mov
xchg
jnp
pop
(bad)
or
(bad)
push
add
inc
xchg
add
cmps
adc
js
fnstsw
mov
cwde
jl
xchg
out
dec
inc
test
fdiv
movs
adc
scas
jl
pop
cmp
jp
mov
xchg
cmps
mov
stos
clc
inc
xor
icebp
shr
inc
and
test
bound
pop
ficom
mov
dec
(bad)
jmp
lea
and
xlat
fsubr
jno
cmc
inc
in
retf
lods
xor
mov
add
mov
fcomp
ins
pushf
add
add
call
icebp
inc
cmp
mov
cmp
popf
mov
out
sbb
aad
inc
cmps
xor
sbb
loopne
sbb
pop
pusha
jae
ja
pushf
popf
mov
sub
(bad)
cmovle
ret
xchg
sub
jmp
popf
(bad)
nop
aad
(bad)
xchg
or
call
ss
scas
cmps
fiadd
jmp
ds
je
movs
clc
cdq
pop
push
icebp
add
fmul
ret
or
cdq
dec
adc
jb
or
ret
ret
ds
fidiv
cmovae
and
ret
jnp
adc
mov
jno
xor
iret
push
ja
cmp
pusha
pop
sub
jecxz
jbe
test
call
retf
fwait
and
stos
enter
leave
push
jl
test
test
pusha
stc
out
int3
stos
inc
adc
pop
push
xchg
inc
aam
iret
pop
inc
stc
int3
mov
pop
adc
test
mov
into
add
test
mov
loop
and
and
fwait
add
cld
push
test
and
push
cmp
cmp
or
push
jo
or
lods
mov
fst
cmp
mov
cld
push
scas
sub
push
add
ds
(bad)
mov
push
jl
cmp
cmp
pop
xchg
mov
xchg
lock
iret
mov
inc
jle
mov
test
stos
mov
sbb
sbb
mov
inc
test
and
xor
pop
lods
(bad)
jno
mov
out
inc
and
mov
gs
repz
cmp
and
daa
daa
or
imul
mov
in
add
out
je
cmp
ret
ret
imul
mov
pop
es
xlat
inc
pop
in
cmp
arpl
and
(bad)
daa
leave
pop
mov
cmp
mov
dec
sbb
loop
test
scas
imul
jl
pop
imul
push
leave
sar
sub
cld
cmps
xchg
enter
dec
xchg
clc
rol
data16
outs
ret
add
xlat
jae
outs
xor
adc
mov
jcxz
push
pop
mov
jnp
fmul
mov
and
sbb
cmp
rol
xor
or
repz
jg
pop
(bad)
push
loope
fdiv
sub
aas
repz
mov
dec
daa
ror
outs
aas
xchg
aas
in
mov
cmps
jnp
jl
in
fsubr
fadd
or
dec
adc
fdivp
add
(bad)
pop
push
bound
in
adc
mov
push
mov
or
push
mov
adc
ins
add
xchg
mov
(bad)
pop
das
sbb
mov
sub
mov
and
mov
mov
mov
pop
xchg
in
dec
sbb
stc
fiadd
icebp
push
pop
pop
fistp
sahf
sub
call
out
pop
push
pop
jmp
xchg
ins
into
jecxz
push
cwde
loop
out
fdivr
xlat
loope
pop
arpl
cs
and
repz
inc
add
push
mov
or
dec
scas
inc
xchg
scas
mov
jo
pop
jg
adc
test
ror
and
lods
fistp
push
mov
sbb
dec
push
pop
test
lock
int3
aam
sub
jmp
shl
div
sub
out
(bad)
rcr
ins
cli
loop
inc
adc
neg
mov
imul
retf
or
test
mov
xchg
(bad)
jo
std
xchg
cdq
bound
in
fisubr
fmul
mov
stc
outs
xor
or
jnp
sub
ret
jl
nop
dec
lock
mov
mov
mov
inc
sub
lea
(bad)
aad
fsub
push
mov
dec
sbb
pop
in
push
mov
scas
or
(bad)
add
mov
icebp
mov
mov
fcmovb
scas
psllq
es
xchg
jb
jmp
add
jmp
add
jmp
out
lods
dec
test
jns
inc
shl
mov
add
mov
inc
adc
ja
xor
jg
mov
push
ins
inc
cwde
sbb
daa
mov
jb
pop
fdiv
inc
imul
hlt
mov
inc
push
xchg
pop
dec
mov
int3
cdq
mov
push
jnp
or
sbb
sbb
dec
xchg
adc
popf
cwde
mov
push
icebp
popa
add
sub
lock
sub
cld
(bad)
push
sar
daa
loopne
cmp
shl
outs
sbb
rol
mov
inc
fld
mov
jb
call
mov
mov
call
popa
mov
ins
xor
adc
push
(bad)
fidiv
sub
mov
rcl
out
or
mov
lahf
inc
(bad)
cmp
add
sbb
pop
add
pop
not
lds
cmp
lock
mov
and
push
stos
(bad)
fsub
cmp
inc
add
jb
jl
dec
in
cmp
movs
lods
test
inc
mov
or
mov
shl
sub
neg
mov
test
sub
in
ss
xor
movs
cmp
and
movs
inc
xchg
arpl
mov
imul
std
out
xchg
mov
jmp
test
in
jns
loop
pop
test
and
mov
xor
dec
adc
xchg
rol
cmp
das
push
pusha
ins
pop
mov
movs
add
icebp
gs
jl
mov
inc
jp
(bad)
fsin
mov
mov
jae
je
sbb
inc
cli
fldenv
in
sub
test
lods
(bad)
inc
aam
lods
test
(bad)
repnz
neg
xchg
clc
dec
or
out
or
scas
les
pop
xor
int
out
or
(bad)
stc
scas
gs
(bad)
push
mov
mov
ss
aas
cwde
rol
jle
std
outs
mov
loop
pop
xchg
fstp
mov
push
fld
push
in
and
adc
shl
xchg
jae
jb
aaa
and
sbb
mov
cdq
lock
icebp
sub
push
xchg
xchg
ins
dec
add
mov
std
mov
rcl
jp
sub
data16
outs
mov
enter
daa
push
mov
shr
repnz
pop
sbb
pop
jle
loopne
fcom
mov
iret
sub
jg
aas
push
adc
call
data16
retf
adc
aas
or
xor
cmp
mov
mov
mov
imul
aaa
mov
cli
ficomp
fld
or
cmp
test
js
sbb
mov
push
imul
movaps
adc
dec
iret
pushf
and
dec
(bad)
push
stc
icebp
fldcw
mov
scas
jne
pop
push
push
sub
cmps
sbb
sbb
dec
pusha
lods
and
jmp
aas
push
xchg
lods
push
or
jmp
or
inc
sbb
loopne
push
dec
mov
repz
xchg
test
jbe
mov
loopne
ret
xchg
adc
jge
in
outs
or
clc
sub
std
fisubr
xchg
not
lock
sub
scas
pushf
inc
daa
call
ds
mov
mov
jmp
cmps
loopne
aad
mov
test
out
fstp
adc
(bad)
pop
in
mov
js
and
js
scas
inc
shr
inc
aaa
(bad)
into
iret
jo
xor
xor
push
or
aam
fwait
ja
jne
data16
mov
dec
adc
cmp
push
or
push
mov
xlat
sahf
push
push
(bad)
lock
inc
inc
xchg
xchg
add
(bad)
movs
pop
xchg
mov
enter
adc
hlt
and
push
mov
(bad)
add
test
(bad)
leave
jo
fmul
xor
jnp
mov
gs
call
xor
retf
pusha
pop
xor
dec
push
pop
jecxz
mov
jecxz
in
cmp
xchg
jmp
in
sbb
std
(bad)
cmp
sbb
inc
ret
push
clc
jge
scas
mov
rol
sbb
nop
fnstsw
scas
mov
push
cli
stc
jmp
out
sub
pop
push
int3
push
fisttp
sbb
std
adc
sbb
add
out
xor
adc
xchg
out
push
sub
icebp
mov
shl
call
fimul
dec
inc
idiv
(bad)
fistp
dec
dec
and
cld
shl
jge
test
dec
scas
add
sbb
jmp
fsub
xchg
mov
imul
jg
inc
xchg
mov
xchg
pusha
outs
push
call
xchg
pop
movs
sbb
repz
stc
pusha
adc
jnp
and
lods
push
add
loopne
mov
add
cmps
(bad)
mov
push
jns
aad
inc
test
cmps
loopne
pop
cmp
add
sbb
mov
ficomp
adc
xchg
es
mov
mov
pop
mov
ret
add
jne
jge
cli
jbe
adc
xchg
fnsave
mov
inc
or
sub
adc
cmp
fldcw
mov
clc
mov
mov
mov
sub
lods
fadd
enter
imul
xor
arpl
sbb
adc
cmp
sub
imul
pop
outs
add
xchg
cdq
jge
inc
clc
xchg
out
jnp
xchg
mov
jecxz
je
xchg
sbb
cld
ds
or
mov
sub
retf
jle
out
cmp
xchg
ja
test
jge
es
aaa
psraw
leave
mov
jg
sbb
sub
adc
add
xor
shl
add
or
cld
add
lods
ins
imul
fild
les
mov
out
push
lock
loope
xchg
test
push
int3
cmc
dec
nop
cmp
dec
mov
sub
ins
add
push
push
cli
push
cmp
lods
call
pop
cmp
nop
pop
pop
cmp
sti
into
fild
test
mov
sbb
fild
xchg
xor
push
jecxz
aaa
dec
hlt
or
xchg
jg
fmul
ss
out
addr16
push
jmp
fwait
jecxz
call
gs
xchg
outs
in
dec
jne
xlat
add
cmps
sub
in
adc
sar
movs
adc
xor
jg
nop
mov
jl
call
loopne
(bad)
imul
and
(bad)
pop
les
mov
loop
xchg
test
inc
ds
dec
(bad)
(bad)
pusha
outs
mov
jns
mov
mov
inc
retf
cmp
pop
loopne
clc
mov
lods
shl
(bad)
mov
daa
push
inc
inc
pop
test
inc
fmul
int
repz
fcom
aaa
add
ss
les
pop
mov
jmp
int3
and
out
or
js
jmp
js
inc
jnp
inc
fdivr
mov
cmps
dec
jae
push
jle
test
cli
nop
mov
push
retf
pop
clc
push
push
(bad)
or
jns
and
aaa
cdq
xor
fs
pop
xchg
in
xlat
call
arpl
in
and
xchg
mov
xchg
push
push
ds
icebp
addr16
jl
inc
push
(bad)
sahf
adc
adc
cmp
fsub
sbb
aas
push
and
add
sub
mov
jo
inc
mov
push
cmc
or
div
inc
js
data16
jmp
in
mov
ja
xchg
pop
inc
(bad)
repnz
(bad)
mov
xchg
mov
jae
pop
out
mov
dec
and
pop
jne
lahf
push
icebp
xor
push
in
pop
mov
xor
mov
test
pop
(bad)
test
loope
ins
mov
psadbw
hlt
mov
or
pop
arpl
test
imul
mov
xchg
repnz
rcr
xchg
nop
sar
jmp
outs
lods
or
test
pop
push
sub
inc
stos
test
or
test
ins
mov
scas
mov
ret
call
in
sti
stos
or
into
mov
xor
jns
push
int3
lods
test
push
popf
out
push
mov
imul
cmp
mov
xor
sahf
fucomp
or
cmp
in
cmp
(bad)
jmp
inc
stos
jl
pop
sub
sti
cmc
out
sbb
dec
ins
loope
cmps
jecxz
jo
scas
push
fcom
jnp
mov
in
mov
shl
retf
inc
adc
sub
or
test
xchg
cmps
fwait
push
xchg
or
sub
sub
push
enter
jl
jp
inc
mov
jmp
lods
mov
inc
push
mov
jb
mov
dec
add
ja
cmp
int3
ror
sub
sbb
sub
retf
pop
mov
fwait
add
inc
mov
adc
addr16
cmc
lock
mov
pop
jecxz
call
push
or
sub
rcr
and
jb
rcr
and
test
push
imul
mov
sbb
adc
test
add
dec
cmc
xor
out
jnp
test
push
jno
stos
(bad)
push
pop
test
sbb
xor
add
mov
pop
mov
bound
movs
inc
mov
inc
adc
add
or
popf
sub
into
cwde
sub
retf
adc
jmp
pop
xor
push
(bad)
push
fstp
adc
jae
and
call
aad
sbb
jmp
or
shl
jno
(bad)
daa
xchg
loop
inc
pop
add
rcl
mov
(bad)
jg
shr
jge
retf
ds
add
mov
push
inc
jmp
and
jmp
mov
cmp
or
js
adc
movs
ret
cmps
push
repz
jge
in
clc
adc
xlat
adc
cmp
and
xchg
stos
dec
xor
jae
ret
in
in
pop
lds
outs
jge
retf
addr16
or
mov
retf
cmps
mov
fsub
int
std
ret
adc
retf
shl
inc
pop
inc
test
and
sbb
rol
cmp
je
outs
inc
(bad)
retf
call
fist
add
sbb
div
or
ja
dec
push
pop
ins
in
inc
jmp
pop
mov
push
call
push
adc
inc
jp
dec
fs
and
call
mov
fcmove
out
and
mov
push
daa
shl
xchg
sub
adc
or
shl
xor
scas
add
loop
push
mov
leave
mov
cmps
sub
popa
fscale
xchg
xchg
out
and
out
daa
leave
xchg
push
sar
pop
popf
push
sub
cmp
imul
sbb
pop
mov
popf
dec
bound
shr
fiadd
daa
movs
and
loope
shl
jno
jmp
jmp
xchg
jnp
ins
mov
adc
cmp
aaa
sbb
es
ins
inc
cmp
cmp
mov
inc
mov
arpl
jnp
mov
sbb
dec
or
mov
xchg
xchg
jnp
lahf
cmp
add
hlt
shl
cmp
sub
fiadd
push
lds
cld
cmp
and
pop
add
hlt
xor
bound
int3
sti
jmp
mov
in
adc
or
ret
pop
jnp
or
int3
sbb
and
cmps
stc
retf
scas
fidiv
add
xor
enter
sar
pop
cmp
out
in
adc
cmp
adc
mov
cwde
mov
mov
xor
fwait
inc
into
call
adc
mov
in
call
xchg
and
aam
fidiv
cs
test
dec
aas
xchg
inc
ds
cmp
jp
imul
jmp
lea
or
shl
stos
daa
cmc
es
into
(bad)
js
ja
data16
repz
rcr
sar
push
pop
test
lea
mov
out
addr16
dec
mov
mov
ret
or
les
sbb
mov
cmps
in
fld
add
mov
mov
leave
(bad)
mov
dec
xchg
add
test
xor
fmul
and
jbe
or
xor
daa
xor
and
test
aam
lea
jno
mov
or
inc
jmp
es
ss
add
add
shl
jmp
sar
xor
scas
in
cmc
bound
cmp
adc
push
std
(bad)
xchg
mov
mov
xor
sbb
push
push
pop
movs
in
sbb
out
test
dec
and
inc
movs
jl
ins
mov
or
(bad)
in
xor
sbb
lock
mov
movs
lea
pop
mov
jae
outs
sub
int
jg
adc
dec
aam
dec
fsub
addr16
lods
les
push
inc
gs
test
sub
sbb
fist
aad
ds
and
fisttp
and
mov
jo
inc
push
stc
inc
test
mov
xchg
sub
fst
nop
mov
cmc
lods
lea
outs
enter
fbld
div
push
pop
jg
out
and
sub
mov
dec
fcomp
cmp
cmp
jmp
popa
ret
jae
and
ds
cmp
sar
dec
push
clc
push
leave
push
mov
mov
leave
inc
xchg
inc
sub
fsubr
xor
hlt
ins
std
neg
int3
out
mov
outs
retf
js
data16
ror
mov
(bad)
mov
repnz
lahf
dec
test
out
pop
mov
shl
add
xlat
sbb
jge
arpl
push
and
enter
xchg
ficom
pop
pop
or
add
mov
jb
add
repnz
aaa
push
mov
jp
add
stc
adc
xlat
ins
rol
and
jmp
xchg
xchg
mov
lods
shr
movs
nop
xlat
dec
gs
inc
push
data16
mov
dec
aam
mov
call
popa
add
adc
inc
push
jb
dec
sub
adc
sbb
les
das
ds
jns
cwde
scas
pop
dec
ss
sahf
ret
adc
int
mov
mov
js
mov
faddp
inc
pop
dec
mov
dec
adc
xchg
test
add
cwde
out
sbb
or
mov
test
daa
data16
jmp
cmp
xor
sub
cmc
adc
sub
and
je
loop
mov
sub
lahf
pop
fmul
adc
inc
mov
xor
adc
xchg
ret
pop
sub
push
and
shl
jno
xchg
push
(bad)
pushf
inc
cld
leave
xchg
out
(bad)
mov
aam
es
and
xor
cmp
inc
xlat
ficomp
dec
ret
jns
xlat
cmps
ss
in
ins
arpl
cmps
dec
inc
inc
inc
xor
xchg
mov
push
and
xchg
fld
cmp
cmp
mov
xchg
int3
mov
rcl
add
sub
sbb
call
shr
push
ret
mov
dec
test
sbb
xor
adc
or
es
cli
pop
jle
dec
xor
imul
ja
cmp
int3
jl
lahf
in
add
enter
mov
sub
clc
cmp
into
adc
sub
or
out
dec
inc
into
push
cmps
rep
frstor
mov
sti
sbb
xchg
adc
xchg
cli
scas
inc
popf
out
sbb
pusha
xchg
adc
adc
(bad)
jae
fwait
push
or
pop
dec
iret
xchg
mov
mov
cmps
cmp
stos
lds
not
popa
mov
sub
mov
into
stos
sub
ret
mov
mov
out
sub
inc
xchg
push
(bad)
xchg
sub
addr16
xchg
pop
call
inc
jnp
jp
pushf
out
push
jl
mov
push
idiv
pop
nop
mov
add
int
cmp
out
inc
jo
push
cli
jns
(bad)
sbb
mov
sti
in
int3
int3
push
addr16
inc
or
ret
and
and
push
inc
lock
lods
ret
hlt
fdiv
jle
popa
stos
ret
push
xor
dec
leave
nop
loop
arpl
movs
or
dec
fistp
mov
mov
rcl
push
jecxz
fldenv
fdiv
jo
enter
ficomp
push
push
(bad)
fld
test
lods
sbb
mov
dec
jmp
adc
out
adc
fist
cmp
mov
aad
stos
in
and
pushf
scas
cmp
add
pop
stc
push
loop
sbb
dec
mov
mov
sub
out
test
xor
arpl
xor
stc
bound
or
xchg
ins
out
sar
test
inc
imul
push
sub
xchg
sub
sub
jne
cld
dec
cmp
pop
rcl
mov
ret
in
adc
push
inc
lea
test
mov
ffreep
lds
xchg
rcr
imul
jo
add
jmp
movs
add
mov
fwait
jno
adc
jno
xor
outs
cmps
sbb
jp
loope
cmp
mov
(bad)
mov
xchg
sbb
movs
inc
adc
cmp
or
test
and
jo
pop
adc
jne
dec
lock
and
inc
ds
ins
int3
dec
(bad)
fist
and
hlt
out
lock
cmp
outs
ins
fucomi
jl
pop
xchg
mov
push
test
push
loope
pop
movs
dec
and
int3
hlt
jo
test
and
xchg
cmps
mov
popf
cmc
aam
aaa
or
mov
sbb
mov
hlt
and
das
fld
mov
enter
push
aas
jo
cmp
sbb
mov
imul
repnz
bound
xor
pop
mov
stc
jb
and
into
jb
xor
inc
xor
add
mov
cdq
add
sub
xchg
test
test
in
xchg
je
jmp
dec
pusha
cmp
rol
in
mov
mov
cmps
icebp
xchg
jmp
std
mov
cmps
push
lods
es
icebp
mov
(bad)
pusha
test
cmp
jmp
outs
fiadd
pop
(bad)
jne
and
cmp
mov
inc
(bad)
cld
sbb
in
or
cs
mov
push
adc
dec
sbb
addr16
mov
push
jns
xchg
stos
jbe
pop
stos
ficomp
jbe
inc
jge
dec
rol
dec
pop
addr16
mov
pop
and
mov
fs
fwait
cwde
inc
push
jle
shl
ins
cli
icebp
mov
pusha
fldcw
lds
adc
shl
loope
mov
xchg
push
cmp
scas
push
cld
ja
inc
cli
fadd
outs
sub
mov
mov
mov
and
add
or
jnp
aam
and
and
dec
push
sbb
out
push
ror
dec
pop
rcr
and
pop
push
cld
dec
push
pop
fadd
js
lahf
adc
pop
(bad)
fisub
jo
dec
sbb
iret
call
inc
movs
scas
and
js
daa
pop
ja
ror
lea
icebp
push
mov
loop
dec
je
dec
es
cmp
cmp
test
inc
lds
jp
push
sub
add
lock
in
push
ret
repnz
repz
cmp
pop
push
fadd
lds
or
loop
xchg
xchg
jge
rcr
dec
in
mov
mov
mov
mov
dec
mov
adc
push
xchg
lods
xor
fcmovnb
xor
outs
sbb
hlt
push
or
ss
xlat
jle
aam
and
mov
push
and
out
int
pop
test
xor
xlat
fwait
mov
or
movs
xor
xchg
shl
mov
popa
retf
cs
mov
mov
mov
sbb
add
mov
div
int
(bad)
jnp
movs
enter
fisub
adc
fdiv
sti
jmp
adc
push
out
sub
aam
fsubp
mov
addr16
sub
jle
mov
push
mov
in
xchg
(bad)
jg
out
dec
enter
push
int
out
imul
xchg
sub
inc
mov
and
or
jmp
test
movs
pusha
add
lods
push
add
pop
(bad)
mov
jb
inc
cwde
mov
push
mov
jmp
fiadd
(bad)
lds
sub
mov
cmps
sub
(bad)
sub
out
xchg
retf
retf
enter
hlt
aaa
adc
div
call
mov
pop
adc
add
iret
mov
aam
push
shl
je
mov
add
popa
xor
cmps
nop
adc
es
ret
int3
mov
adc
mov
jo
jnp
inc
retf
jno
ds
adc
and
cmp
sub
push
aam
adc
push
fidivr
lods
mov
adc
inc
fmul
in
mov
enter
mov
int3
sbb
popa
jmp
or
std
mov
call
stc
dec
pop
or
ins
repnz
or
and
inc
pop
ret
cmp
mov
out
cmps
cwde
arpl
pop
test
pop
adc
dec
mov
addr16
pop
jo
jno
int
mov
int3
add
ror
movs
push
int3
imul
ret
sahf
arpl
js
movs
ins
jmp
add
popa
popa
loope
data16
into
fsubr
xor
mov
lahf
jne
lea
cmp
push
in
sti
push
mov
pop
in
xlat
xchg
push
xlat
(bad)
out
rol
outs
movs
ret
movs
and
pop
pop
in
nop
movs
cmp
stc
or
fld
add
cmp
add
cmp
sub
mov
jg
aaa
jecxz
push
out
(bad)
js
jns
movs
loopne
dec
mov
push
cmps
scas
scas
outs
cmp
lds
xor
pop
enter
fild
ja
ins
jbe
and
sub
add
add
(bad)
imul
sbb
daa
dec
aad
pushf
and
mov
xchg
out
in
cli
sub
fst
outs
or
adc
mov
xchg
push
daa
aad
and
int
xor
xor
mov
dec
ins
fidiv
or
adc
mov
lahf
pop
je
movs
inc
push
mov
cwde
mov
mov
mov
sub
mov
movs
jnp
js
push
pop
das
xor
add
push
mov
(bad)
in
test
ja
sbb
icebp
es
mov
add
push
push
add
repz
mov
xchg
sbb
xchg
popa
mov
clc
das
xchg
shl
mov
dec
or
inc
mov
icebp
add
test
ds
jmp
inc
cmc
or
xchg
sbb
xchg
or
loop
fidivr
sti
cmp
(bad)
in
jl
in
imul
jle
jae
out
inc
mov
icebp
mov
aad
scas
sbb
push
sub
cmp
iret
cmp
dec
mov
adc
jb
add
inc
cwde
mov
(bad)
jge
cmp
test
adc
add
push
dec
lds
add
std
sar
pop
test
imul
dec
lods
ja
sub
test
jg
jl
xor
arpl
fcmovnbe
shl
in
daa
jecxz
mov
adc
jne
dec
adc
pop
mov
xor
cmp
jle
sub
jg
sti
scas
stos
jp
fisub
mov
dec
out
rcl
test
add
push
nop
test
inc
mov
inc
shl
push
add
push
sub
and
stos
sbb
push
xchg
cmp
mov
push
jp
es
mov
mov
jl
mov
or
cdq
fcmovbe
jmp
mov
mov
or
jge
leave
push
mov
jb
sub
and
or
pop
mov
ds
mov
add
xlat
(bad)
xchg
or
inc
rcr
in
daa
add
loope
add
pop
iret
xlat
repz
movs
or
lock
and
out
or
xchg
push
jbe
pop
sub
cli
xchg
or
(bad)
jnp
xchg
std
push
and
into
push
add
nop
into
imul
adc
jb
or
pusha
add
push
imul
dec
arpl
lahf
fwait
aam
pop
sbb
mov
sub
test
mov
(bad)
aaa
jo
mov
shr
pop
push
into
cli
cmps
sub
cld
sub
mov
aam
cmps
shl
das
es
aad
ret
nop
jmp
xchg
jmp
pop
rcl
mov
or
mov
inc
cmp
mov
jmp
ds
shr
add
mov
ins
repnz
sar
dec
imul
or
push
fs
jmp
sbb
imul
dec
xor
icebp
dec
fisttp
mov
sub
rcl
push
cwde
dec
inc
xchg
dec
imul
mov
shl
aas
push
cmp
mov
xor
xor
add
xor
hlt
fcom
clc
dec
mov
lock
dec
ins
outs
pop
pop
adc
into
clc
inc
and
clc
sbb
enter
lods
adc
jg
test
cld
dec
aas
push
retf
(bad)
mov
jne
icebp
(bad)
(bad)
xor
or
outs
adc
mov
test
pop
aad
sbb
in
aad
pop
ret
inc
sub
mov
push
inc
mov
call
jo
dec
or
stos
gs
fistp
adc
ss
test
jg
sub
mul
inc
jl
sbb
sub
je
fwait
dec
out
(bad)
imul
das
xchg
js
or
out
les
mov
sbb
daa
push
cmc
add
and
sub
xor
cmp
lahf
je
dec
js
and
out
into
and
pop
inc
xor
popa
cmc
mov
les
ret
das
cmp
or
sub
mov
add
pop
sar
cdq
in
popf
add
test
clc
mov
fs
xor
dec
jo
jne
ja
mov
aam
out
push
jnp
ror
mov
test
je
lods
std
adc
jg
test
inc
in
aam
mov
jge
sub
dec
rcl
add
arpl
fs
out
cmc
aad
sub
out
jae
dec
sti
push
cmp
fstp
cmps
mov
sub
mov
dec
xchg
mov
push
mov
mov
aaa
(bad)
mov
in
addr16
call
and
call
test
aas
leave
inc
adc
dec
out
dec
sub
cmp
jb
fldcw
xchg
daa
sbb
xor
xor
pop
push
out
scas
sub
loope
sbb
test
js
mov
mov
inc
stc
loopne
mov
mov
loop
ins
xor
inc
ror
imul
sub
iret
pushf
mov
test
push
call
cmp
jne
jns
mov
retf
retf
cli
(bad)
push
(bad)
shl
loope
or
and
add
lods
push
mov
rol
pop
push
and
pusha
cld
retf
push
pop
fcomp
lea
add
sbb
ins
lock
jl
jnp
push
sub
and
stc
rcr
dec
fisub
jno
xor
push
adc
imul
sbb
mov
mul
push
rcr
outs
adc
rol
int3
xor
test
outs
jge
stc
jecxz
pushf
dec
lahf
and
retf
arpl
movs
pop
cmps
cmps
les
and
add
mov
shl
mov
inc
fstp
mov
xchg
mov
sub
int
ss
aas
pop
shl
push
jnp
aaa
sti
and
ds
imul
lahf
mov
adc
push
fistp
sbb
fwait
push
out
imul
rol
jle
pop
xlat
sub
sbb
xor
sti
inc
jmp
repz
push
inc
in
sti
mov
retf
push
pop
pop
fst
jp
repz
mov
mov
ror
jb
mov
test
sahf
(bad)
jmp
sub
fnstcw
adc
xchg
pusha
sbb
retf
and
push
test
and
icebp
xchg
nop
adc
jle
push
stos
cli
loop
repnz
outs
in
int3
js
imul
movs
push
and
nop
add
leave
xor
aas
cmp
sub
sub
fidivr
adc
sub
mov
inc
pop
push
dec
or
push
dec
inc
jmp
int
mov
add
int3
in
xchg
add
icebp
movs
es
(bad)
les
mov
test
dec
mov
add
and
add
dec
imul
jbe
ss
xor
in
mov
sti
test
sti
bound
fild
ins
pop
loop
clc
ins
xor
ds
jecxz
sbb
xchg
das
and
in
popf
loop
ret
clc
xchg
add
ja
imul
stos
lahf
mov
imul
mov
test
pusha
fwait
sbb
add
xchg
imul
test
dec
movs
jmp
lock
and
inc
and
fsub
leave
and
sbb
mov
pop
fdivr
jmp
sbb
xchg
ja
jmp
sti
jae
mov
mov
jecxz
jne
loope
aad
pop
adc
or
leave
hlt
sub
pop
(bad)
sbb
loopne
xor
mov
sub
cmc
shl
dec
je
pop
in
scas
ja
push
pop
test
jns
(bad)
mov
out
cmp
lods
adc
mov
mov
jne
xor
or
in
adc
(bad)
fs
dec
sbb
aas
adc
mov
add
jbe
xlat
add
stos
outs
fsubrp
stc
mov
ins
push
jle
in
cli
xchg
sub
push
test
add
leave
retf
std
sub
mov
dec
push
jb
mov
add
test
test
pop
inc
cld
test
int
jle
ret
and
lea
fisubr
imul
movs
mov
enter
cdq
lods
mov
outs
xor
add
fdivr
cmps
addr16
sub
or
out
dec
add
pop
jns
jge
jae
cmp
mov
xchg
cmps
xor
mov
sub
sub
movs
mov
leave
cli
sar
gs
test
inc
in
or
jns
les
xor
fmul
fild
xchg
adc
and
xchg
div
push
or
gs
into
xor
(bad)
push
adc
inc
inc
mov
scas
(bad)
xchg
rcl
sub
mov
(bad)
xchg
(bad)
mov
stos
enter
push
imul
mov
movs
and
push
int
aas
ins
retf
dec
mov
aaa
jnp
adc
sbb
sahf
cld
pusha
or
sbb
mov
lods
cmp
pop
xchg
std
js
add
das
inc
xor
push
push
aam
adc
mov
dec
sub
or
mov
inc
sbb
je
push
add
push
mov
and
sbb
push
rol
in
pop
inc
push
fs
stos
jne
inc
mov
cmps
in
imul
cld
inc
pop
push
call
xor
idiv
ret
xor
push
xchg
inc
and
mov
(bad)
jmp
popf
ror
pop
stc
in
jmp
inc
js
inc
mov
(bad)
add
mov
pop
stc
into
xor
pusha
xchg
sub
jg
mov
adc
repnz
enter
es
cmp
aaa
aas
add
outs
cmp
cmps
repnz
and
rol
neg
rcr
enter
mov
or
push
mov
add
xchg
das
pusha
and
imul
xchg
sub
sub
mov
xchg
mov
mov
sbb
cmp
addr16
cmp
push
dec
test
ds
inc
gs
mov
aas
cmps
push
jmp
leave
xor
std
inc
fcomp
retf
xchg
push
ja
fild
jl
and
cmps
cdq
dec
out
pop
cld
(bad)
ret
je
jge
inc
push
shl
stos
retf
adc
xor
or
adc
fiadd
ret
add
or
inc
mov
pop
xchg
cmp
lahf
test
leave
pop
cmps
mov
imul
fscale
sub
cmp
pop
lock
mov
pop
scas
xor
pop
mov
mov
pop
pop
xchg
add
(bad)
xor
mov
aas
adc
arpl
in
popf
jno
mov
out
test
call
mov
inc
or
aam
ss
or
inc
clc
jp
stos
and
addr16
xchg
jns
int
(bad)
and
test
scas
jbe
push
xchg
push
dec
add
pop
popa
mov
sbb
inc
push
scas
xchg
mov
outs
xor
test
(bad)
jnp
es
mov
pop
mov
lds
pushf
mov
dec
jle
jecxz
out
icebp
and
cmc
push
aad
test
inc
sti
jns
jae
stos
sub
mov
movs
cdq
xchg
mov
movs
mov
xchg
pop
xor
and
dec
pop
mov
jmp
xchg
mov
gs
mov
dec
retf
jae
jb
sub
cs
jmp
pusha
push
test
mov
mov
mov
shr
xor
loop
dec
fimul
fistp
inc
pop
or
or
aas
imul
xchg
outs
or
cmp
(bad)
aam
or
ds
xchg
movs
sbb
fst
jecxz
out
sub
mov
in
shr
aam
add
add
mov
sahf
sub
push
js
cli
out
js
mov
sti
test
xchg
push
or
stos
ins
loopne
scas
daa
rcr
cli
adc
lahf
cmps
stc
iret
xchg
aaa
ds
mov
je
(bad)
and
pop
pop
and
xchg
in
loope
or
fst
shr
add
fisttp
icebp
push
xchg
push
in
fld
cmp
push
cmp
sti
adc
xor
retf
jno
or
(bad)
inc
sbb
mov
in
and
(bad)
es
xchg
es
mov
out
push
jg
lock
fwait
jbe
mov
ins
cmp
pop
push
cmp
mov
mov
mov
popa
(bad)
push
inc
mov
cli
or
push
sbb
mov
mov
or
test
into
cld
int3
inc
out
and
dec
pop
mov
pop
push
jle
adc
mov
sub
cmps
bound
push
add
shl
cmps
jno
bound
mov
xchg
retf
pop
es
adc
outs
mov
sbb
cmp
inc
pop
(bad)
inc
and
fwait
test
dec
cdq
add
xor
not
mov
fcomip
cmp
rol
jns
xor
mov
sub
adc
in
and
gs
xor
movs
test
das
mov
dec
push
jmp
xchg
in
or
fnstcw
or
mov
(bad)
call
mov
cmps
dec
adc
mov
cli
push
push
and
add
push
cmp
sub
fwait
js
std
inc
ret
mov
test
out
push
dec
std
dec
inc
cld
add
(bad)
dec
and
and
cdq
push
sub
adc
add
dec
sbb
gs
sbb
ja
jo
push
pop
(bad)
dec
popf
jecxz
mov
xor
test
jp
je
loop
call
(bad)
cmp
imul
inc
jmp
call
in
outs
stos
stos
push
xchg
add
pop
(bad)
xor
scas
dec
inc
mov
adc
inc
repz
call
ds
cdq
ins
adc
mov
and
mov
mov
call
and
rcl
or
inc
xchg
psubd
jo
inc
mov
xor
retf
fnsave
mov
cmps
add
fs
sbb
stos
or
out
fs
scas
mov
xchg
mov
inc
push
add
ret
lock
inc
pop
push
in
jbe
loop
xchg
or
jecxz
cwde
push
xchg
adc
add
inc
addr16
fucomip
popf
inc
je
inc
imul
pushf
push
or
and
movs
adc
jp
retf
jno
ret
and
outs
in
push
xor
dec
rcl
cmps
pop
xchg
dec
in
retf
sub
dec
fist
std
inc
cmps
mov
cmp
add
sbb
jo
jns
out
dec
mov
int3
(bad)
push
xchg
xor
aad
mov
clc
mul
les
jle
or
jmp
mov
push
aas
retf
f2xm1
icebp
jecxz
repnz
iret
loopne
leave
xchg
lds
xchg
mov
push
and
add
xchg
add
(bad)
ds
add
test
cdq
push
repz
in
jp
mov
xlat
mov
push
fst
sub
idiv
bound
pop
cs
int
push
mov
and
mov
retf
jmp
std
or
repnz
cmp
mov
jno
scas
sub
push
(bad)
jns
test
test
adc
aaa
imul
pop
push
and
dec
mov
into
sbb
out
ds
sub
pop
sub
xor
shl
pop
push
add
into
or
push
loop
adc
adc
sbb
cmp
xor
sub
cmps
cli
mov
jle
imul
push
pusha
push
movs
and
pop
adc
cs
push
inc
call
dec
sbb
test
xchg
xor
mov
imul
fdiv
cdq
sbb
or
and
or
cdq
jmp
jmp
or
inc
jno
pusha
push
mov
jnp
fwait
call
xor
(bad)
xchg
pop
add
dec
sbb
mov
sub
movs
loop
add
(bad)
mov
dec
in
in
ds
(bad)
rcr
fisttp
loop
ins
inc
cmp
dec
outs
clc
ret
and
jge
inc
and
jnp
push
dec
dec
jg
and
int
mov
xchg
mov
fst
pop
inc
into
pop
xlat
jl
sub
xor
call
sub
sub
xchg
add
pop
sbb
fstp
xchg
and
push
sbb
pusha
out
mov
ins
xor
jg
inc
aas
sbb
das
push
pop
mov
inc
ss
pop
or
add
cmp
fwait
dec
xor
mov
sahf
(bad)
movs
ror
sub
pop
xchg
sti
ror
ret
in
dec
rcr
sbb
scas
sub
mov
mov
and
cs
dec
daa
outs
nop
sub
(bad)
lods
fnsave
mov
aaa
add
(bad)
ror
or
sub
adc
inc
mov
adc
lods
mov
ficom
push
xor
mov
test
cmc
sbb
pop
add
mov
lock
lahf
push
or
add
pop
add
out
adc
jbe
(bad)
fild
imul
cli
fs
pushf
adc
jp
mov
lds
retf
jno
inc
inc
mov
stos
dec
pop
lahf
pop
jae
gs
loopne
pop
dec
or
leave
inc
es
jp
push
popa
add
lahf
and
xchg
repz
ss
imul
lahf
sub
mov
pushf
add
sahf
sub
enter
adc
cmps
and
pop
icebp
lock
add
add
(bad)
mov
(bad)
cmp
jb
(bad)
push
out
addr16
aam
lods
add
sti
push
cmp
ror
(bad)
not
push
stc
popf
jmp
in
loop
pop
fild
loop
loopne
dec
jae
mulps
mov
and
aam
inc
push
cmps
imul
aam
pop
mov
fcomip
xor
sahf
or
xor
lods
jae
ret
pop
scas
mov
xchg
(bad)
xor
jbe
mov
popa
or
shl
dec
mov
scas
mov
ret
sbb
loope
lods
xchg
xor
push
retf
lahf
scas
mov
stos
xchg
jnp
test
push
bound
mov
mov
repnz
xchg
retf
hlt
xchg
popf
sti
stc
inc
jne
add
add
pop
mov
icebp
es
pop
aam
dec
xchg
cmp
ror
scas
push
hlt
ja
outs
test
js
loope
xor
js
dec
setnp
xor
std
aad
into
aas
xlat
aas
cmp
and
fld
adc
dec
stos
jb
imul
outs
std
arpl
sbb
popa
cmp
inc
ret
pop
cmc
add
and
sbb
lock
in
xlat
cmp
shr
icebp
movs
pop
movs
jo
rol
sbb
retf
movs
mov
adc
sbb
pop
into
stos
inc
mov
imul
dec
lock
or
cli
fist
and
dec
fisubr
loope
push
adc
outs
mov
cmc
movs
daa
adc
cwde
jne
push
aas
sar
push
cmp
adc
pop
and
enter
int3
popa
in
mov
popa
cld
or
(bad)
into
ds
outs
fwait
push
jmp
pop
adc
cs
hlt
cmp
xchg
bound
jb
popf
dec
xor
mov
fnstcw
int
popa
inc
scas
xor
cmc
xchg
imul
mov
adc
out
cmps
or
je
leave
rcr
or
ret
add
rol
loope
jnp
sub
mov
push
ret
xchg
xchg
pop
xchg
sar
sub
fst
dec
stos
xchg
stos
push
dec
iret
push
xlat
shl
or
push
out
jbe
out
cwde
movs
ss
sbb
popa
ja
and
cwde
rol
cwde
and
test
movs
pop
push
ror
mov
xor
(bad)
std
(bad)
mov
mov
ret
lds
mov
jo
cdq
and
xor
xor
xor
inc
xchg
pop
loope
es
bound
loopne
ret
movs
add
iret
add
arpl
push
push
in
inc
mov
sbb
push
ficom
add
push
outs
and
jbe
sub
pusha
pop
js
cmp
sbb
fsubr
sbb
jmp
mov
je
sti
lea
imul
xor
out
imul
push
cdq
pop
sar
dec
or
xor
push
jns
loopne
out
imul
xchg
call
(bad)
pop
(bad)
movs
mov
push
pushf
pop
inc
adc
gs
sbb
out
iret
push
sub
test
mov
hlt
dec
call
inc
push
sar
cmps
or
(bad)
dec
ins
dec
(bad)
jge
icebp
or
cs
rol
(bad)
in
fsubr
lds
xchg
sahf
dec
pop
jmp
adc
cwde
or
push
xchg
and
(bad)
mov
(bad)
inc
mov
popf
stos
jae
xor
xor
mov
(bad)
loop
add
ss
mov
push
aam
mov
push
call
push
jae
pop
or
or
rcl
or
icebp
xor
arpl
fwait
push
out
pushf
out
xor
push
clc
out
stc
or
popf
hlt
xor
mov
sahf
dec
inc
or
sbb
in
fldenv
dec
push
mov
inc
push
jecxz
jmp
inc
popa
cmovp
xor
sbb
popa
add
scas
jmp
ror
retf
push
test
lds
push
stc
ins
add
add
and
outs
icebp
int3
lock
ins
or
xchg
popa
jnp
shl
dec
xor
and
retf
imul
xchg
leave
sbb
mov
call
ret
rcl
je
addr16
adc
jmp
jb
xlat
inc
jns
xor
and
mov
dec
out
dec
pop
jae
inc
inc
dec
ds
sub
sbb
mov
or
std
int3
add
xlat
mov
jno
test
cmp
fs
xor
jbe
ins
or
cmc
gs
jae
retf
sub
(bad)
or
dec
dec
or
inc
dec
cmp
sahf
int3
mov
bound
inc
out
dec
push
mov
adc
je
pop
mov
rcl
xchg
fstp
aam
rcr
jecxz
ja
pop
cwde
loope
js
sbb
pop
jle
shl
cmp
dec
pop
outs
int
mov
fcomp
adc
pushf
int3
add
sub
ror
scas
test
xchg
scas
ds
clc
mov
mov
dec
pop
pop
or
mov
hlt
sbb
mov
leave
cmp
outs
add
adc
or
sbb
push
fwait
lock
or
nop
mov
scas
lahf
and
sbb
in
sub
pusha
ds
shl
xchg
sub
mov
adc
ins
not
div
ja
stos
retf
jne
mov
mov
sbb
ret
mov
xchg
jl
ss
imul
(bad)
mov
in
dec
aaa
and
add
cmps
pop
clc
shl
mov
or
xchg
push
add
fidivr
ss
add
fwait
add
stos
xor
ds
jnp
sub
mov
add
sub
in
pop
xchg
cwde
fincstp
nop
push
adc
sbb
push
in
mov
dec
sub
imul
and
sub
add
mov
cmp
les
cmp
xchg
and
sbb
imul
and
push
loopne
out
inc
int3
jbe
fimul
xor
mov
les
stos
cmp
jecxz
test
sub
scas
mov
imul
xor
aam
cmps
sbb
push
test
into
stos
jmp
es
out
aaa
clc
jb
push
loop
or
push
and
xchg
xor
or
aam
pop
ret
shl
fwait
jmp
mov
loope
retf
xchg
mov
scas
and
sti
cwde
test
out
xlat
ins
sahf
xor
jo
and
inc
shr
pop
mov
sub
out
mov
scas
mov
jbe
jns
(bad)
xor
hlt
test
and
nop
aas
in
jl
icebp
cmps
xchg
xchg
popa
dec
ins
mov
adc
push
in
xor
cs
add
xor
adc
ret
or
cwde
mov
push
sub
push
stc
jmp
mov
ja
cmp
sbb
hlt
mov
sub
mov
in
movs
push
loop
in
sub
jmp
(bad)
jle
jl
jb
out
or
add
pushf
xor
fisttp
movs
and
pusha
lods
push
(bad)
stc
ror
stos
and
repnz
inc
ins
mov
sbb
pop
int
loopne
scas
push
jle
mov
pop
loop
mov
movs
fs
shl
inc
retf
test
jnp
sar
xchg
in
push
sbb
nop
pop
xchg
or
jae
sub
xchg
sbb
and
pusha
sbb
push
inc
push
or
loopne
les
loop
cmc
pop
mov
xchg
retf
popa
shr
inc
and
imul
aam
or
dec
and
and
sbb
xor
ins
pop
retf
fidivr
push
mov
sub
inc
cdq
mov
inc
and
retf
lods
(bad)
aas
xchg
call
cld
stc
gs
mov
hlt
pop
mov
mov
fcom
xor
xor
ins
retf
mov
push
jae
pop
pop
stc
mov
call
nop
cwde
push
loope
inc
ret
rcl
cmp
ins
inc
and
and
sub
ror
ror
cmps
lods
shr
pushf
nop
call
cmp
stos
jecxz
mov
cmp
mov
scas
in
adc
scas
inc
iret
cwde
inc
lea
mov
in
xor
cmp
push
sub
mov
adc
push
pop
jge
push
xchg
(bad)
imul
(bad)
pop
sub
stos
xchg
call
xor
jbe
aaa
inc
(bad)
call
js
sbb
mov
jb
pop
cmc
addr16
ret
stos
test
xor
imul
lahf
mov
ror
lods
mov
xchg
and
mov
sti
sub
xchg
add
and
jp
outs
push
loope
adc
jmp
xor
imul
mov
les
mov
add
adc
ins
adc
xchg
add
and
push
cmp
xor
rol
add
jo
cmp
sbb
mov
sbb
sub
hlt
(bad)
clc
adc
out
xchg
pop
push
int
inc
push
stos
jnp
out
push
mov
enter
or
adc
shr
inc
fldenv
aas
pop
or
xchg
popa
mov
ja
push
movs
lods
call
jge
inc
nop
jle
jns
stos
pushf
mov
inc
leave
and
inc
inc
xchg
jns
scas
mov
xchg
js
fwait
and
aam
enter
es
and
imul
out
push
pushf
xor
pushf
rcl
add
ins
and
popf
jle
out
adc
jp
pop
ins
jmp
xchg
out
sub
and
scas
sub
xchg
retf
rol
fisub
cdq
jns
mov
not
push
jb
hlt
pusha
scas
stc
lock
dec
test
push
mov
shl
jae
jg
fisttp
mov
fadd
loope
and
mov
sbb
adc
inc
ss
sbb
cmp
lods
push
inc
push
clc
lahf
aaa
mov
dec
in
adc
adc
jae
push
fmul
sub
retf
es
jp
push
or
pop
popf
fdiv
jge
sbb
xchg
pop
fsub
mov
add
pop
push
cs
and
xor
ins
adc
adc
sub
repz
outs
shr
jg
sti
push
out
xchg
adc
cs
enter
mov
mov
mov
fdiv
push
je
mov
rcr
inc
xchg
call
sbb
in
cdq
push
inc
movs
sub
sar
add
ficomp
retf
fucomi
ret
retf
fdivr
ret
lahf
nop
mov
(bad)
movs
mov
add
mov
mov
pop
mov
test
das
xchg
imul
loopne
mov
inc
mov
or
mov
push
pusha
sbb
push
mov
ficomp
dec
and
dec
jle
mov
sahf
pop
xchg
dec
ja
loope
pop
jns
xchg
push
mov
out
popa
(bad)
out
loope
sub
stos
mov
jnp
or
lahf
adc
adc
mov
xchg
mov
stc
cld
jg
pop
sub
(bad)
retf
jmp
xchg
jb
in
cmp
shl
adc
cmp
jno
ss
sbb
add
sbb
lods
(bad)
fisub
push
sbb
jp
mov
adc
retf
dec
aad
mov
xchg
daa
mov
(bad)
cdq
and
push
in
mov
ins
sbb
jmp
dec
sti
dec
stos
push
mov
cmp
push
jne
test
fld
sub
push
dec
mov
xor
rep
enter
movs
(bad)
lods
inc
adc
cmp
pop
popa
xor
xor
sub
aam
stc
mov
mov
jb
mov
arpl
idiv
inc
cmps
push
inc
pop
adc
pop
push
ret
stos
xchg
mov
dec
mov
lods
push
push
imul
cmp
jmp
adc
stos
xor
dec
mov
jo
and
adc
adc
push
push
test
or
xchg
mov
mov
sub
inc
xchg
sub
call
mov
aas
loope
inc
out
push
retf
and
nop
bound
add
mov
dec
mov
mov
(bad)
daa
push
dec
popa
call
push
mov
mov
xlat
mov
ficom
jne
inc
movs
xchg
sbb
out
cmc
jns
pop
cmp
aad
popa
js
into
push
jmp
mov
mov
push
jg
test
int
loope
add
fist
xchg
cmc
loopne
sahf
mov
push
jb
jp
pop
cdq
shr
movs
xor
mov
pop
retf
push
mov
pop
add
xlat
jmp
and
dec
outs
mov
aas
cmps
fwait
sub
jl
test
das
add
movs
jbe
add
push
sar
dec
xchg
in
sbb
ja
test
inc
stc
es
fwait
sub
pop
mov
xchg
mov
dec
mov
call
pop
adc
cmp
clc
cmp
or
ja
dec
aad
xor
outs
in
inc
mov
retf
dec
adc
(bad)
mov
ror
sbb
pop
cwde
jns
mov
fcom
and
outs
shr
sbb
and
mov
or
and
iret
cmp
dec
mov
sbb
outs
fmul
adc
cld
and
cmp
ds
clc
enter
sbb
ss
mov
stos
mov
loop
and
retf
and
mov
neg
xchg
test
dec
dec
adc
cmp
nop
jne
popa
icebp
ja
push
into
cli
dec
lock
jnp
push
in
push
ins
jmp
mov
mov
or
cmps
shr
xor
shl
ss
dec
or
push
scas
mov
cmp
in
ja
imul
adc
aaa
repz
cmp
scas
sub
push
pop
mov
int
or
enter
ins
(bad)
mov
adc
pop
jmp
mov
mov
mov
push
adc
es
add
pop
retf
inc
enter
stos
mov
(bad)
shl
sub
fst
mov
fisttp
sti
xor
inc
into
jle
imul
jae
loope
and
mov
pop
mov
xchg
or
imul
ret
xchg
push
rol
ret
bound
inc
xchg
outs
xor
stc
mov
sahf
mov
dec
rcl
gs
push
aas
test
sti
mov
mov
es
mov
pop
jbe
push
dec
pop
inc
pop
pop
inc
test
dec
ja
cwde
leave
aam
and
inc
mov
aad
pop
cs
std
scas
shl
stos
neg
loop
and
xlat
add
xlat
sub
adc
pop
repnz
adc
test
add
or
(bad)
je
push
jge
push
cmps
push
jno
inc
test
jbe
shr
cmp
daa
js
mov
fwait
mov
clc
mov
pop
fist
xor
(bad)
ds
jg
add
xor
pushf
mov
mov
call
pop
xchg
iret
rcr
jg
pop
dec
push
cmp
sbb
mov
ja
or
mov
xchg
sbb
mov
stos
jno
jmp
add
xchg
cmp
xchg
dec
push
adc
adc
xchg
cmc
in
and
out
inc
pop
and
pusha
pop
jmp
cwde
in
rol
aas
sub
ins
lods
push
leave
or
pop
sahf
out
sar
jns
mov
sub
popf
aad
xor
cmps
js
gs
dec
mov
xchg
mov
ret
in
in
mov
mov
loopne
sub
push
pop
enter
call
mov
fmul
imul
rcr
aad
bswap
nop
shl
jmp
enter
idiv
js
or
dec
sub
lds
push
rcl
sub
mov
jbe
cmp
jp
mov
xchg
test
and
std
out
and
pop
or
dec
lea
popa
sbb
hlt
jbe
mov
mov
jp
in
xchg
das
ret
scas
lock
jg
sti
int3
xor
mov
mov
fild
stos
inc
mov
xchg
int
inc
jno
idiv
out
ret
jg
inc
mov
sbb
push
mov
ds
test
cmp
out
jo
mov
ss
jno
test
jecxz
mul
sbb
and
cmp
retf
call
cmc
data16
cmp
out
es
sbb
push
repz
sbb
push
and
ins
clc
mov
mov
std
push
loopne
je
scas
out
(bad)
cli
fisub
not
out
dec
sbb
add
push
adc
aas
cli
xor
mov
movs
adc
repnz
loope
push
cwde
adc
repnz
cmps
adc
or
bound
push
adc
jmp
idiv
dec
aaa
test
outs
mov
xchg
push
push
xchg
xchg
addr16
cli
jg
and
pop
dec
imul
dec
test
pop
loope
iret
fld
shl
out
mov
push
ds
std
bound
fs
enter
movs
mov
inc
aas
fcomp
in
jmp
adc
shr
fdiv
shl
fiadd
push
jbe
xchg
sbb
movs
test
std
icebp
pop
cmp
fld
xor
sub
mov
imul
aam
cwde
aam
ds
inc
movs
pop
outs
bound
ss
adc
mov
sub
out
test
or
ret
test
push
adc
ins
mov
adc
xor
push
sub
add
pop
mov
adc
out
mov
stos
call
sbb
test
cmps
or
xor
mov
and
push
test
jbe
mov
mov
push
sbb
shr
jg
push
or
sbb
jne
popa
stos
lds
outs
xchg
push
shl
inc
(bad)
jp
sub
mov
xchg
outs
cs
fist
push
std
fbstp
jno
cmp
cmps
mov
mov
jmp
das
cmp
daa
fisttp
jg
jmp
imul
retf
xchg
jb
mov
and
xchg
push
xchg
popa
push
loope
adc
jge
mov
shl
adc
mov
ret
jecxz
inc
xor
fwait
ins
mov
xchg
les
ficomp
pop
and
ins
jne
dec
jno
ins
scas
mov
dec
jp
xor
mov
sti
fs
mov
scas
popa
mov
cmp
adc
sbb
inc
mul
and
push
cdq
mov
ds
lock
pop
cdq
out
push
dec
inc
popf
iret
int
inc
scas
or
cmp
data16
xchg
xchg
jle
imul
inc
les
jg
mov
enter
fld
inc
jp
out
mov
scas
inc
ret
std
sub
test
(bad)
bound
cmp
pop
inc
in
lea
mov
dec
out
clc
test
(bad)
in
das
add
repz
int3
cmc
mov
mov
out
mov
inc
repz
dec
mov
es
lea
stos
stos
inc
sti
adc
fcmovnu
cmp
cmp
mov
and
mov
jae
pop
retf
fwait
push
mov
mov
jg
cmp
cli
xor
pop
outs
xchg
mov
pop
fwait
out
adc
or
mov
xlat
add
bound
xlat
in
pop
xchg
dec
fldenv
push
jg
sub
sub
ins
add
movs
inc
sbb
xor
ss
jecxz
pushf
jp
ret
mov
sar
aam
mov
inc
mov
xor
dec
cdq
stos
int3
cmp
shl
in
jge
(bad)
icebp
push
and
clc
xchg
mov
les
cmp
adc
arpl
jge
push
pusha
dec
jno
ror
mov
lea
shl
and
(bad)
movs
sub
xor
mov
mov
dec
jno
and
add
dec
pop
sub
test
ret
adc
std
pop
cs
adc
adc
sub
imul
or
repnz
and
popf
fnstsw
mov
loope
xchg
push
ss
cmp
sbb
imul
add
sbb
inc
sub
xor
mov
xchg
xchg
xor
cmp
jno
adc
dec
movs
mov
xchg
pop
in
dec
mov
mov
sub
xor
or
sbb
jbe
mov
adc
or
add
ins
in
in
inc
or
(bad)
ds
cli
inc
or
in
xor
jne
push
adc
mov
repz
sbb
in
jno
stos
pop
xchg
retf
out
pop
ret
mov
enter
push
call
pop
sbb
pusha
mov
clc
rcl
sub
das
push
rol
cmp
daa
retf
and
lods
icebp
push
cmc
in
inc
and
mov
xor
adc
push
sar
dec
xor
mov
add
lahf
inc
xchg
and
inc
popf
jmp
xor
lods
mov
jno
loop
in
mov
dec
and
jmp
jmp
inc
rcr
and
pop
cmp
pop
mov
dec
adc
mov
mov
push
pop
test
adc
iret
idiv
mov
mov
int3
das
ins
iret
xchg
inc
loop
xchg
pop
es
push
(bad)
cs
and
mov
push
cmp
mov
cmp
sub
in
adc
xchg
push
or
dec
xlat
lea
das
push
xor
cmp
scas
push
and
add
(bad)
repz
sub
hlt
hlt
stos
pop
out
imul
pop
mov
popf
or
arpl
add
push
sub
push
push
das
add
dec
ret
mov
cli
mov
es
push
xor
cdq
pop
dec
or
and
jge
out
rol
lahf
add
mov
cmp
and
sti
mov
mov
mov
call
inc
int
dec
lea
daa
add
or
nop
outs
push
xchg
cmp
daa
xchg
sbb
cwde
es
sahf
add
les
mov
xchg
jl
add
and
outs
xor
je
inc
inc
cdq
pop
ja
iret
sahf
cwde
iret
daa
int
cmp
repz
jge
jl
mov
adc
mov
mov
fld
pushf
repz
xor
(bad)
and
jecxz
add
and
out
aad
sti
sub
out
and
(bad)
xchg
jge
push
xchg
push
fcmovbe
popa
sbb
arpl
add
lods
das
test
shl
bound
cmp
retf
retf
fcomp
movs
mov
and
dec
pop
dec
call
(bad)
pop
aam
jmp
mov
inc
rcl
push
dec
xchg
iret
repz
mov
pop
sub
(bad)
jns
movs
pop
sets
int3
lahf
jo
mov
add
add
cwde
dec
aad
sub
xchg
bound
pop
data16
push
lods
adc
test
(bad)
ja
push
add
jp
xchg
cmp
inc
add
cld
test
aam
sub
aad
and
sbb
xchg
in
xchg
xchg
cli
pop
cmp
in
mov
jge
lods
stc
popf
data16
add
cmp
jmp
clc
add
fcmovbe
icebp
pop
inc
inc
int
adc
dec
mov
pop
xor
js
push
daa
push
lea
out
add
call
inc
xchg
and
mov
jno
(bad)
call
adc
lods
daa
sub
jl
pusha
outs
outs
adc
(bad)
add
sti
mov
pusha
es
test
jns
add
mov
xchg
(bad)
adc
inc
fdiv
int3
ins
inc
cmp
jge
inc
scas
jmp
(bad)
cmp
push
scas
sub
xor
movs
ret
ret
pop
mov
inc
sbb
cli
cmp
out
pushf
les
std
add
mov
jle
pop
retf
xor
loop
xor
xchg
xchg
or
mov
mov
pop
dec
jcxz
add
lods
inc
jns
ret
jl
pop
xchg
and
outs
sub
cwde
mov
loopne
sub
and
or
cdq
lods
sub
stos
sbb
cdq
and
mov
dec
in
pop
sbb
xor
les
outs
aad
imul
mov
mov
scas
xchg
add
icebp
fdivr
sbb
(bad)
sub
fs
mov
popa
stos
out
imul
fs
xchg
scas
jle
jb
fld
pop
xor
pop
call
mov
jnp
cmp
pop
enter
cwde
push
add
dec
gs
repz
loope
mov
test
fcomp
and
or
lea
scas
fs
xchg
add
and
call
stos
fs
or
adc
(bad)
sub
xor
add
xchg
sbb
leave
pusha
push
xchg
in
dec
or
in
pop
pop
aad
enter
mov
xor
rol
adc
inc
cwde
retf
pop
pop
ins
int3
mov
inc
xor
cs
and
fcmovb
mov
jle
mov
xor
inc
les
fbstp
mov
fsub
ins
repnz
mov
sbb
and
adc
and
sbb
mov
std
outs
test
sahf
cld
(bad)
mov
pop
push
inc
aaa
icebp
sbb
or
xor
loopne
outs
ret
dec
push
mov
aad
lahf
jns
inc
inc
push
retf
push
adc
pushf
xchg
fisubr
lock
or
div
jno
xchg
push
cmp
stc
test
lds
shl
icebp
jle
push
fcomp
jnp
lock
push
lea
dec
or
int
xor
cmps
push
imul
pop
test
inc
aaa
mov
aaa
xchg
into
xchg
jmp
add
jbe
jge
retf
jnp
mov
xor
dec
stos
add
stos
outs
rcl
mov
and
cmp
popf
sti
push
popa
jns
pusha
jg
int
pop
push
add
push
fmulp
or
(bad)
pop
es
loopne
mov
push
inc
loop
cmp
mov
xor
mov
lock
vmovups
mov
jg
push
pusha
push
jge
es
icebp
leave
scas
dec
lods
pop
inc
jge
cmp
mov
sbb
fwait
mov
movs
pop
scas
aad
push
mov
xor
ret
mov
loop
into
js
sub
or
adc
mov
aas
push
dec
test
stos
repz
jo
retf
push
sbb
mov
jle
pop
stc
xchg
div
cmp
arpl
fidivr
xchg
cwde
hlt
popa
pop
add
mov
and
xor
pusha
mov
jns
dec
pushf
jp
add
adc
fcmovnbe
or
adc
jmp
sub
les
outs
dec
cld
xchg
stos
cdq
les
mov
inc
in
retf
cmp
sub
mov
es
push
mov
and
dec
shr
or
int3
sti
int3
ds
ins
mov
cld
ret
retf
(bad)
lods
adc
scas
jae
aad
cmps
jne
mul
iret
push
call
lock
shl
outs
mov
fistp
out
or
lods
adc
mov
call
fcom
jnp
xor
and
cmp
xchg
inc
aad
lods
add
mov
cmp
aam
and
(bad)
aaa
cmp
sub
xchg
fldenv
jmp
in
sbb
out
push
jg
(bad)
or
mov
je
aad
mov
fidiv
mov
xchg
inc
inc
inc
mov
sar
inc
std
mov
lea
push
mov
loop
mov
add
pusha
std
sbb
cmp
fwait
sub
mov
dec
xchg
dec
dec
test
es
(bad)
sub
inc
int3
enter
repnz
mov
call
jmp
sub
jle
mov
dec
retf
mov
pcmpgtw
mov
mov
icebp
stc
push
fwait
outs
mov
sahf
data16
mov
dec
mov
out
cs
xchg
ds
cmp
nop
into
out
pop
das
icebp
mov
fucomip
push
cmp
lods
cmps
into
push
(bad)
ds
adc
leave
mov
push
mov
ds
xor
outs
inc
(bad)
stos
retf
cmp
xchg
es
jmp
push
sub
xor
pushf
sar
jge
fcom
pushf
dec
inc
lods
mov
int3
mov
cs
mov
aad
out
in
jnp
inc
test
iret
ret
pop
out
push
mov
lods
fwait
mov
icebp
cdq
add
pop
xlat
push
pop
cmps
fcom
or
mov
jecxz
mov
or
ret
or
lds
sbb
in
xor
pop
xchg
packsswb
cmps
(bad)
cli
fadd
(bad)
clc
xchg
mov
jnp
test
iret
mov
repz
jmp
mov
cdq
in
movs
inc
(bad)
fnsave
or
cld
(bad)
jmp
xchg
test
call
xchg
push
out
xchg
add
pop
icebp
cs
aad
stos
(bad)
(bad)
adc
ins
jb
and
mov
dec
pop
pusha
outs
je
mov
ret
inc
iret
dec
cmp
xchg
mov
mov
mov
gs
dec
dec
or
cwde
int3
xor
shr
jecxz
leave
pop
jbe
xor
sub
mov
dec
stos
pop
repz
mov
xor
xchg
and
test
vmread
sbb
cs
pop
cmp
ss
inc
mov
inc
stc
xchg
leave
dec
mov
rcr
xchg
addr16
test
push
or
call
xor
jmp
mov
aam
xor
sbb
pop
or
fdiv
push
and
mov
push
pusha
adc
fstp
xor
jno
cwde
retf
sti
(bad)
imul
js
mov
or
imul
dec
mov
and
push
cmp
mov
sub
push
aam
mov
pop
lods
mov
shl
sbb
push
push
push
scas
adc
jmp
jae
and
xor
movs
clc
ret
sar
or
inc
icebp
mov
jbe
mov
jae
scas
dec
jnp
icebp
aas
js
sbb
adc
adc
cwde
aad
sub
ins
dec
sar
push
mov
jno
push
jno
and
fcom
add
mov
pop
das
adc
arpl
adc
movs
jnp
dec
popa
jae
inc
dec
shl
cmc
nop
jp
outs
icebp
adc
js
jle
cmp
jle
adc
dec
push
retf
or
sub
loop
sub
xor
push
pop
sub
popa
imul
mov
bound
sub
imul
dec
push
ja
je
fadd
cmp
cmp
fild
and
pop
xchg
add
push
fist
popa
dec
push
push
out
aas
mov
stc
pop
jl
mov
push
popa
mov
xchg
int3
inc
or
mov
add
jle
dec
jl
ret
cld
rcr
push
fmul
lods
mov
aam
nop
loopne
pop
mov
cwde
sahf
iret
push
mov
dec
adc
pop
sbb
das
sub
out
repz
aam
das
adc
pusha
xchg
(bad)
mov
imul
cmp
lahf
jne
cli
and
lock
sub
rcr
into
and
aaa
add
adc
or
shr
icebp
je
cmp
cmp
add
mov
out
test
call
mov
ret
mov
mov
(bad)
stos
cmps
movsx
jbe
inc
outs
xchg
stos
push
shr
sbb
arpl
lods
(bad)
loop
or
xchg
ds
xchg
adc
(bad)
sub
mov
ins
ins
pop
sbb
ja
test
mov
outs
fsubr
retf
jae
mov
or
js
and
fnstcw
adc
adc
and
movs
jmp
push
pop
push
push
push
gs
adc
dec
outs
sub
not
push
mov
scas
xor
jp
adc
test
cld
test
inc
jmp
and
(bad)
sar
retf
push
ins
bound
(bad)
mov
jle
xor
or
or
clc
in
mov
xlat
adc
xlat
shl
clc
xor
push
cmps
or
ss
jnp
out
mov
stos
outs
in
clc
pop
call
nop
push
imul
js
sbb
(bad)
sub
imul
pop
jno
mov
repz
mov
mov
inc
mov
inc
jp
mov
lock
loop
mov
enter
sub
fimul
xor
and
sbb
popa
lahf
imul
mov
inc
es
daa
mov
test
push
xchg
jns
movs
shl
retf
mov
and
retf
daa
sbb
inc
in
mov
mov
inc
xor
or
mov
add
fs
inc
fs
mov
or
loopne
inc
mov
jecxz
adc
cmp
sti
call
ret
xor
inc
int
jmp
int3
femms
dec
mov
dec
fld
test
add
cmps
pop
and
dec
js
adc
cmp
test
jno
jecxz
dec
cmc
cmps
std
out
push
pop
aas
mov
inc
jl
inc
xchg
into
les
inc
cmp
(bad)
sbb
movs
xor
cmp
(bad)
push
icebp
xlat
xor
xchg
mov
outs
dec
lock
jnp
mov
fistp
push
and
mov
xchg
mov
icebp
adc
ret
cmp
mov
mov
outs
mov
push
push
and
xor
lahf
cdq
sbb
mov
xor
sbb
sub
clc
test
push
imul
arpl
sti
adc
pushf
pop
cmps
cmp
jle
cld
icebp
ja
push
push
lock
add
dec
pop
pop
xor
xlat
ja
jg
into
cs
nop
out
arpl
test
mov
(bad)
frndint
mov
daa
inc
pop
sub
out
ja
sub
cmp
imul
xchg
mov
cld
jmp
push
cmp
adc
or
push
mov
pop
(bad)
arpl
dec
rol
mov
or
in
jle
retf
out
push
inc
sub
je
ins
pop
mov
mov
dec
scas
sub
push
lock
and
cdq
or
jnp
scas
aaa
mov
pop
cdq
dec
enter
or
cmp
nop
mov
and
pop
fild
sub
shl
pop
xlat
mov
push
outs
aam
add
xor
int
fst
fnsave
inc
adc
aam
push
adc
jmp
dec
iret
aaa
jp
pop
ins
pop
add
xchg
jp
mov
push
ret
imul
repnz
int
mov
cli
jae
(bad)
pop
or
push
test
push
aaa
(bad)
fbld
cld
xor
ds
sbb
ins
popf
or
cmp
cmp
sub
and
jmp
mov
jo
cdq
add
mov
fcom
jg
or
pop
inc
push
mov
pop
and
dec
lock
nop
pop
(bad)
mov
add
mov
les
jae
inc
int3
out
scas
(bad)
sti
pop
adc
in
loopne
jge
xchg
jo
ja
mov
ins
and
xchg
jg
inc
(bad)
cmps
dec
aam
pop
aaa
xor
inc
sbb
fild
add
icebp
fistp
repnz
pop
xchg
push
outs
in
out
(bad)
sub
xor
je
mov
xor
xchg
jg
mov
pop
shr
adc
sub
fs
stos
mov
sbb
mov
jo
inc
xchg
xchg
xor
xchg
jg
jb
jmp
jp
repz
les
adc
enter
leave
xchg
sub
in
pop
lahf
imul
jne
sbb
ret
arpl
or
mov
ret
popa
push
popa
mov
fcomp
mov
out
mov
mov
gs
daa
mov
enter
mov
outs
mov
ret
jb
idiv
std
sbb
test
std
xchg
retf
dec
sub
lock
push
repnz
out
pop
das
push
cdq
stos
movs
add
push
push
or
xor
repz
aam
inc
out
mov
mov
push
add
das
or
inc
leave
jmp
movs
or
dec
mov
push
sbb
adc
or
and
test
mov
adc
shl
add
mov
sub
mov
jne
sbb
push
jns
(bad)
call
sub
xchg
jns
push
cwde
addr16
imul
mov
rcl
pop
movs
clc
mov
aam
dec
clc
and
xor
cwde
test
pop
aam
pop
pop
test
rol
inc
mov
imul
mov
sbb
dec
push
stc
(bad)
pop
mov
int
inc
clc
sbb
and
adc
pop
loopne
mov
xchg
ins
xchg
stos
mov
das
outs
sub
cmp
sub
push
lock
test
out
inc
lea
test
ins
xchg
fist
stc
fwait
push
dec
scas
or
rol
and
ins
jge
(bad)
sbb
mov
jbe
xchg
adc
mov
push
xor
pop
xlat
xor
cmp
mov
js
inc
fs
inc
int
pushf
cmps
cdq
pop
push
fwait
sar
dec
pop
test
xchg
out
mov
or
dec
push
cs
push
push
mov
enter
inc
jge
sbb
or
test
loop
sbb
add
push
cmc
and
cmps
inc
lods
xchg
mov
cli
or
mov
xor
outs
adc
pop
repnz
mul
movs
and
and
xor
fst
xchg
sbb
repz
push
inc
dec
and
cmp
pop
iret
fcmovb
pop
add
sbb
xchg
mov
sbb
pop
jbe
sub
bound
mov
stc
push
bound
fcom
int
scas
cmp
mov
clc
fld
pop
jmp
xchg
jbe
ins
pop
dec
aad
das
sti
or
jg
in
sbb
cmp
push
cmp
call
jmp
ja
fistp
xchg
bound
hlt
inc
jmp
pop
xchg
mov
outs
(bad)
mov
in
mov
out
fucompp
mov
icebp
lods
pop
lahf
pop
movs
pop
(bad)
nop
or
jnp
arpl
xor
adc
into
cmp
bound
dec
inc
mov
dec
push
and
inc
sub
cmp
mov
in
xor
sti
dec
rcr
adc
pop
lahf
add
add
mov
cwde
data16
ins
cmc
ficomp
cdq
addr16
mov
addr16
pop
fdivrp
mov
(bad)
pop
popf
xchg
push
(bad)
jecxz
test
and
fimul
int
dec
adc
and
xchg
cmp
xchg
mov
mov
pop
aad
test
mov
inc
loope
imul
ror
push
fimul
ror
popf
js
mov
mov
cmp
lock
into
add
pop
pop
fimul
fnstsw
sti
pop
dec
das
jp
and
movs
jns
xor
frstor
test
sbb
addr16
xor
pop
mov
lea
inc
sbb
fst
mov
js
scas
or
sub
pop
(bad)
rcl
pop
nop
push
das
add
les
ret
xchg
mov
sub
ret
sahf
push
icebp
cwde
(bad)
jae
push
mov
(bad)
adc
or
jmp
lock
or
test
mov
xchg
not
mov
jnp
scas
add
outs
sbb
jo
in
pop
pop
inc
arpl
test
dec
and
adc
test
lahf
js
dec
sti
aaa
popa
adc
sar
or
jp
and
out
xlat
pop
inc
or
jecxz
push
dec
sbb
sub
add
sbb
std
in
scas
movs
inc
cwde
sub
ja
xor
or
push
mov
cmp
(bad)
aad
cdq
es
and
adc
jb
js
sbb
mov
xchg
xchg
and
mov
xor
sub
movs
fcmovu
xor
pop
mov
push
mov
rcr
pushf
xlat
(bad)
pushf
cmp
retf
dec
pushf
test
je
lds
inc
rol
outs
sahf
ds
mov
call
out
scas
xchg
or
xchg
in
jmp
jne
in
or
jnp
push
add
sbb
fidiv
movs
stc
or
mov
xor
sbb
lods
dec
push
xchg
arpl
adc
aas
cmc
mov
mov
inc
cmps
jns
test
mov
push
inc
jecxz
jmp
xor
jl
jge
cmps
daa
mov
sti
ins
lods
aad
xchg
idiv
idiv
sbb
clc
popa
movs
aad
cmp
retf
cwde
xor
ins
retf
addr16
inc
jnp
mov
in
dec
inc
jmp
cmp
push
mov
push
js
gs
leave
inc
and
(bad)
cwde
inc
xchg
sbb
popf
sbb
cmp
scas
mov
pop
ins
enter
xchg
push
aad
daa
lahf
push
dec
pop
inc
cmp
sub
adc
inc
xchg
pop
xchg
mov
sbb
sbb
or
push
cmp
dec
aam
fs
push
pop
loopne
imul
inc
pmaxub
shr
mov
jge
pop
jmp
and
stos
in
test
hlt
stc
pusha
jmp
ret
scas
xchg
pop
pop
jecxz
jne
(bad)
ror
push
int
aaa
mov
lods
cld
cld
xor
sahf
mov
js
lods
sub
fld
mov
mov
cmps
nop
or
push
sbb
add
xor
dec
or
xchg
test
(bad)
(bad)
dec
mov
les
pop
cmp
mov
scas
dec
fwait
sbb
in
mov
inc
pop
imul
addr16
sbb
pusha
js
or
xor
cli
xor
imul
push
scas
dec
in
(bad)
jecxz
sub
add
rol
leave
mov
test
dec
shr
sbb
jge
imul
lock
sub
fwait
(bad)
sbb
push
sub
(bad)
fstp
call
mov
mov
or
fwait
mov
repnz
stos
xchg
xor
imul
daa
mov
dec
bound
xor
jae
mov
jmp
mov
out
sbb
or
jb
sbb
pxor
xor
popf
inc
sub
sub
sbb
xchg
mov
sub
or
inc
jg
mov
(bad)
andps
hlt
scas
sbb
add
inc
popa
mov
aad
inc
cmp
out
inc
mov
sub
rcr
out
test
inc
xchg
lods
ret
ss
nop
ss
mov
hlt
std
pop
mov
cdq
mov
in
pop
fdivr
pop
add
sbb
push
push
ds
jbe
sub
dec
cdq
mov
cmp
dec
mov
mov
fstp
fdivr
adc
push
add
add
ins
xchg
mov
jp
adc
xor
and
add
neg
push
aas
sbb
sub
and
shl
cmps
jg
pop
xor
dec
xchg
sbb
and
fistp
sahf
fdiv
jbe
push
movs
repz
cmp
fwait
fwait
stos
movs
test
adc
popa
cmp
cmp
push
outs
out
fdivr
arpl
(bad)
call
inc
jl
ror
pop
sub
fldl2t
mov
dec
loop
xor
add
and
sub
push
mov
xlat
int
rcl
ja
scas
mov
sub
cwde
cmc
pop
sub
mov
push
dec
js
bound
sub
xchg
adc
cmp
mov
fistp
clc
lods
or
jp
frstor
add
mov
imul
mov
mov
pop
int3
inc
test
and
mov
inc
mov
xchg
inc
dec
mov
or
adc
aad
and
jp
imul
xor
jnp
call
out
pop
mov
fstp
out
daa
or
jbe
and
pop
xchg
popa
jge
xor
test
fstp
xor
or
jno
cs
adc
mov
jns
mov
dec
cli
xor
inc
int3
or
test
ror
stos
jno
fdivr
mov
or
cs
leave
inc
jb
add
sbb
sub
(bad)
mov
fdivr
cld
xor
lods
push
sub
and
test
aas
fwait
jle
(bad)
mov
push
xchg
jnp
jl
xchg
add
jnp
test
sub
add
jne
adc
add
idiv
cmp
push
test
mov
or
lock
cwde
lods
ret
mov
imul
popa
push
inc
iret
daa
mov
imul
xchg
sub
xchg
add
jp
mov
data16
sbb
cwde
les
sbb
inc
pop
loopne
cmp
jmp
sub
push
mov
mov
sub
xchg
xor
sub
mov
pop
or
bound
cmp
outs
jno
setns
out
popf
out
cmp
xor
shr
repz
sub
mov
in
xor
pop
int
mov
push
jg
mov
push
test
ficom
mov
aaa
movs
imul
ja
xchg
pop
cld
arpl
cmp
test
ret
bound
pop
in
ins
loop
clc
lea
mov
div
sbb
xchg
add
xlat
mov
push
add
xchg
push
retf
fxch
lea
mov
mov
imul
dec
dec
mov
jb
add
and
push
(bad)
fimul
inc
sub
jge
call
or
fmul
add
pop
mov
mov
or
add
out
aaa
aam
in
add
aas
mov
mov
(bad)
cmps
jge
shl
or
nop
shl
mov
add
cwde
or
fbstp
xchg
jnp
pop
inc
xor
jns
sub
ret
cmp
fiadd
mov
in
iret
enter
and
retf
lock
jmp
inc
pushf
jmp
jecxz
mov
fistp
(bad)
adc
icebp
xor
jbe
icebp
adc
ins
cmp
mov
push
les
imul
adc
cmp
mov
cmp
xchg
mov
jno
retf
add
sar
int
inc
jle
sub
xchg
js
adc
cli
data16
shl
iret
pop
inc
movs
popa
mov
std
call
pop
mov
jo
sub
jns
mov
aaa
inc
dec
adc
call
call
imul
es
in
retf
sub
jnp
out
shl
(bad)
sbb
sub
or
jae
dec
idiv
out
add
fldcw
jp
ficomp
sar
inc
xchg
push
jb
test
fld
adc
adc
sub
iret
jl
(bad)
aas
mov
xchg
sub
cmps
aaa
movs
cmp
add
sbb
add
sbb
jbe
fwait
mov
cmp
fcmovnbe
repz
fstp
mov
in
loope
retf
pop
out
dec
loopne
add
lods
jae
sub
and
mov
xlat
lahf
mov
or
test
cmc
std
and
ins
inc
je
dec
adc
out
hlt
push
and
mov
xchg
adc
ja
test
scas
xor
and
sbb
inc
popa
mov
add
shl
cld
jne
xor
div
loope
imul
pusha
stos
cmp
inc
push
mov
dec
dec
pop
and
aam
xor
mov
jecxz
fist
ins
retf
jae
shr
xor
jmp
dec
int
pop
push
gs
push
add
fistp
or
fsubrp
xlat
and
xor
adc
inc
ja
rcl
in
mov
sbb
mov
sbb
test
push
pop
repz
dec
fdivp
push
imul
sub
push
cmp
sbb
jmp
pop
neg
mov
add
sub
ret
add
mov
(bad)
sbb
pushf
stos
(bad)
sahf
add
and
mov
nop
sbb
push
push
es
ficom
das
sahf
psadbw
inc
pop
sbb
cmp
aaa
add
jb
mov
inc
sub
sbb
mov
xor
mov
xchg
xlat
outs
out
or
pop
fdivr
inc
or
test
push
sbb
lds
xchg
cmps
add
mov
or
and
fisttp
xor
call
sbb
pop
jmp
inc
nop
(bad)
pop
call
mov
jmp
pop
xor
inc
push
and
and
pop
scas
call
push
jge
lock
push
(bad)
outs
mov
sbb
fcomi
adc
push
adc
ficomp
mov
stos
arpl
sub
shl
scas
xor
mov
(bad)
das
stos
sub
adc
les
pop
xor
out
out
aaa
outs
cmp
(bad)
imul
fsubrp
out
push
repnz
pusha
rol
(bad)
mov
fsub
fwait
scas
xor
mov
(bad)
jo
iret
xchg
mov
pop
push
in
in
daa
xchg
sti
aas
fistp
push
test
ret
hlt
sbb
es
in
pop
je
fistp
inc
add
and
(bad)
pop
jnp
les
push
daa
(bad)
push
jmp
xchg
sbb
cmp
push
sbb
lods
sti
xor
stc
and
or
mov
ss
out
push
or
pushw
pop
mov
mov
pop
outs
push
shr
ins
inc
adc
or
cdq
dec
mov
sub
xor
mov
arpl
jnp
sub
jl
fs
out
xor
fisubr
icebp
sbb
mov
ror
pop
jg
xchg
inc
cs
jo
mov
push
jecxz
or
retf
das
pop
(bad)
fwait
mov
aaa
and
or
cmp
or
stos
fldlg2
test
mov
or
push
out
adc
data16
and
push
js
leave
sub
mov
mov
dec
lahf
cmp
imul
or
push
stc
xor
cld
les
xor
ret
fidivr
int3
aaa
or
je
and
in
dec
xchg
retw
add
stc
test
add
rcl
mov
xchg
shl
adc
mov
mov
mov
mov
jle
sti
dec
cmps
mov
mov
outs
cwde
jle
push
push
jg
les
in
add
outs
push
(bad)
adc
mov
ins
std
cmps
enter
lahf
or
dec
imul
mov
jl
in
mov
dec
and
sti
mov
jb
and
mov
ins
(bad)
loop
pop
push
sbb
xor
loopne
popa
sub
sub
in
adc
mov
sahf
pop
jle
xlat
mov
shl
sbb
clc
mov
repz
pop
mov
fcmovnu
xor
sbb
sub
mov
or
popf
sub
mov
inc
pop
fbld
mov
xchg
or
out
xchg
push
mov
movs
shl
mov
rcl
shr
cmp
ins
test
test
and
mov
mov
adc
dec
stos
xor
aam
cli
fmul
jmp
xor
mov
mov
lods
neg
xchg
add
clc
dec
ins
shl
fisubr
mov
daa
out
(bad)
pop
rcr
adc
dec
mov
hlt
repnz
inc
mov
lods
adc
fld
mov
push
add
mov
push
mov
mov
push
jbe
jae
test
add
das
repnz
mov
xchg
jl
sahf
and
out
jo
inc
movs
pop
adc
shr
in
imul
inc
cli
addr16
push
out
or
mov
das
cmps
fwait
or
mov
xchg
push
test
retf
jecxz
cmps
inc
push
inc
ds
fbstp
push
fnstsw
int3
and
je
add
push
movs
jno
cmp
dec
mov
stos
cmps
mov
mov
push
dec
dec
xor
pop
sub
pop
xor
push
fisttp
in
or
imul
outs
gs
ficom
retf
cmp
add
rcr
mov
inc
cmp
retf
or
imul
cld
jno
test
cmp
and
ror
cmp
pop
mov
fcmovnbe
mov
push
xchg
or
outs
sbb
or
xchg
sahf
add
inc
xchg
sub
lods
jns
test
ret
sti
das
cmp
pop
cmp
jecxz
outs
mov
adc
jp
sbb
xor
out
fisttp
sahf
pop
push
in
dec
add
xor
inc
dec
or
xor
test
mov
dec
mov
das
inc
or
xlat
out
lods
and
sub
pop
test
cmp
cmp
arpl
add
adc
jno
pop
add
pushf
mov
mov
mov
rcr
pop
rcr
arpl
mov
pop
popa
leave
scas
call
cmp
pop
popf
and
xchg
jae
pushf
ror
outs
jmp
push
shr
or
ret
jecxz
mov
mov
lods
shl
add
mov
jl
(bad)
sub
test
sbb
push
das
mov
cmps
add
sbb
push
and
ret
xchg
and
add
mov
jmp
xchg
call
ret
inc
mov
addr16
xor
int
in
iret
sub
cwde
pop
(bad)
xchg
(bad)
clc
push
icebp
(bad)
inc
push
ret
cmp
mov
pop
mov
sbb
push
cwde
lods
idiv
sub
das
sbb
cld
fdivr
test
or
pop
and
(bad)
(bad)
fld
inc
mov
(bad)
inc
es
sub
lea
ud2
ja
jmp
lds
and
mov
adc
pop
cdq
fimul
mov
xchg
imul
sbb
dec
adc
lods
push
xor
xor
mov
push
jne
cmp
jbe
add
out
add
movs
aaa
dec
mov
sub
xor
outs
sub
and
fild
fadd
mov
es
dec
pop
cmp
test
mov
fdivr
adc
sbb
ja
addr16
push
mov
and
mov
aaa
xor
movs
scas
ss
mov
(bad)
pop
sub
mov
dec
push
aas
and
(bad)
(bad)
mov
inc
sub
addr16
call
dec
inc
pusha
jb
xchg
mov
adc
mov
sbb
stc
adc
dec
pop
inc
sahf
sub
or
jae
add
ins
sub
ins
fnsave
aad
adc
bnd
push
mov
repz
lahf
mov
outs
mov
xchg
arpl
adc
add
mov
xor
imul
sbb
xor
mov
jmp
dec
pop
push
inc
aam
jae
xchg
jle
dec
in
dec
and
sbb
(bad)
clc
push
dec
xchg
xchg
clc
cmps
add
or
sbb
js
and
into
add
arpl
mov
xchg
cmp
jmp
pop
sar
test
mov
mov
pxor
fcmovu
sbb
ret
inc
(bad)
shl
mov
std
ror
std
dec
scas
sbb
jl
lods
cmp
sub
js
jbe
push
(bad)
pusha
or
out
cwde
mov
adc
push
pop
inc
mov
in
movs
dec
leave
repz
cld
dec
xor
in
add
mov
adc
mov
in
dec
aam
mov
cmc
mov
sbb
jns
push
push
call
cmp
cdq
(bad)
sbb
cmp
mov
pop
pop
sbb
data16
pop
jo
clc
cld
adc
cwde
mov
mov
adc
popf
sahf
sub
das
loopne
adc
cmps
rcr
add
aam
mov
ins
loop
jg
mov
rol
mov
aam
shl
stc
dec
xchg
adc
or
push
in
mov
adc
xchg
and
xchg
pop
aaa
dec
jno
cmp
ds
test
jle
push
out
mov
dec
rol
sbb
ins
sub
inc
inc
ret
xor
daa
push
push
popf
sar
add
add
iret
retf
xchg
lods
test
pop
inc
or
jmp
test
or
push
mov
and
push
mov
idiv
mov
repz
scas
fcom
aad
daa
inc
hlt
push
and
add
push
jns
xchg
(bad)
jb
sub
mov
pop
jne
arpl
sahf
punpckhdq
fdivp
jp
fldcw
fisttp
hlt
mov
retf
pop
scas
test
push
test
lock
sub
dec
or
stc
cwde
aaa
loope
xchg
push
test
test
cmc
push
(bad)
mov
movs
push
push
lods
fld
inc
into
adc
adc
mov
mov
jg
je
fmul
inc
pop
fdiv
test
aaa
cmp
and
fs
test
inc
or
push
jnp
add
adc
(bad)
inc
cmc
jbe
mov
aas
out
pcmpgtw
retf
xchg
leave
repnz
add
lea
cld
(bad)
dec
pop
clc
shr
outs
xchg
jecxz
arpl
pop
mov
sub
aaa
call
cmp
mov
mov
mov
aaa
adc
popf
imul
repz
xchg
mov
aas
add
and
rcr
jae
push
dec
aam
ds
sub
dec
push
inc
push
rol
jo
movs
or
fdiv
sub
mov
adc
cmp
jae
mov
jno
dec
iret
aad
(bad)
jne
xor
cmps
mov
push
movs
mov
jg
pop
stos
loopne
int3
pop
in
xchg
pushf
arpl
sub
fnstcw
addr16
cmps
push
imul
popf
stos
pop
jo
push
in
aam
jl
or
inc
pop
dec
cmp
pop
jg
or
cmps
scas
push
pop
pop
jg
xor
cmp
mov
mov
jns
jl
dec
cmps
(bad)
call
sub
jne
dec
xchg
mov
inc
inc
out
sbb
cwde
addr16
stos
xor
jbe
or
dec
push
or
push
in
push
inc
ins
mov
gs
inc
cmp
loop
jno
xor
mov
je
mov
dec
addr16
mov
push
cld
aaa
push
jne
push
out
jmp
ror
sbb
outs
push
pop
sbb
dec
(bad)
icebp
push
cmp
pop
jmp
cdq
pop
jl
rcl
stos
gs
pop
cmp
fisubr
jno
jmp
lds
pop
cli
dec
mov
sub
arpl
adc
aam
stos
jg
ins
cs
mov
jo
dec
aas
xchg
xchg
jne
add
pop
cwde
retf
addr16
ins
cwde
mov
mov
shl
popa
inc
jbe
cdq
and
clc
cmc
ficom
push
inc
jmp
repnz
aam
sub
stos
xor
cmove
pushf
(bad)
and
ror
in
(bad)
jmp
int3
dec
cdq
lods
dec
js
(bad)
imul
pop
(bad)
push
int3
movs
out
shr
test
mov
or
mov
sub
not
bnd
stc
push
xchg
retf
out
(bad)
sbb
sub
lock
xor
lock
xor
popf
sbb
shl
stc
xchg
inc
add
xor
pop
nop
adc
jp
inc
movs
hlt
xor
retf
cld
or
js
mov
mov
fimul
cmp
or
jno
inc
adc
push
mov
add
mov
cs
add
int3
add
stc
mov
jecxz
(bad)
(bad)
mov
gs
add
mov
dec
jbe
call
ins
nop
xchg
mov
xchg
icebp
xor
outs
xor
sbb
(bad)
adc
adc
mov
inc
push
gs
add
pop
ret
loope
cmp
repnz
push
in
pusha
mov
outs
cmps
adc
xchg
daa
in
dec
popaw
popw
mov
jecxz
mov
loope
dec
ins
mov
jno
push
and
adc
add
or
pop
jg
pop
sbb
cmp
nop
sub
dec
sub
std
lea
sub
mov
mov
jp
mov
stc
test
into
jecxz
pusha
icebp
cmp
cmps
out
std
dec
repz
bound
shl
mov
dec
xchg
out
fsub
test
das
xor
dec
out
idiv
rol
je
fiadd
push
movs
xchg
mov
xor
inc
(bad)
xchg
movs
jecxz
outs
outs
(bad)
pop
pop
mov
mov
mov
mov
pop
sahf
(bad)
fst
push
or
xor
add
mov
sub
(bad)
cmp
xchg
and
push
xor
outs
cs
inc
ds
les
icebp
ins
pop
xchg
repnz
(bad)
pop
out
cmc
jnp
and
sbb
inc
inc
or
pop
out
jnp
out
das
and
adc
sar
jnp
jp
imul
jecxz
sub
rcr
push
gs
add
outs
or
mov
pop
inc
outs
retf
jecxz
ret
sbb
dec
mov
push
rcr
mov
fiadd
jle
jl
test
arpl
inc
jmp
mov
mov
mov
push
jnp
jg
(bad)
out
dec
enter
cmps
mov
add
push
out
inc
rol
cdq
mov
pop
or
cmc
popf
retf
add
cmc
loope
mov
inc
xor
push
lds
test
adc
ret
in
out
in
and
pop
sbb
int3
cmps
push
dec
sti
mov
std
fisub
sub
cmc
lock
jae
lods
or
(bad)
cmp
mov
js
fadd
cmp
sbb
xchg
or
add
fnstcw
cmp
lods
push
mov
push
pop
mov
push
fmul
retf
adc
ins
fisubr
mov
push
pop
jb
pop
sbb
ja
fistp
pusha
rol
push
pop
mov
mov
fs
mov
gs
jle
cdq
cld
call
repnz
nop
mov
xchg
inc
shl
jle
fst
mov
cld
leave
mov
cs
mov
push
jmp
fsub
fdivr
pop
outs
(bad)
jb
(bad)
mov
add
loope
pop
movs
adc
pop
sub
neg
in
mov
inc
mov
jno
lea
and
dec
cmps
cmp
test
cs
sbb
aas
(bad)
mov
and
mov
retf
inc
jge
fcomp
je
call
pop
and
sbb
lahf
lods
cmp
out
add
ret
fbstp
jmp
sub
or
mov
icebp
stos
jecxz
or
repnz
push
cmps
ret
or
je
push
test
push
dec
xor
mov
cmp
cmp
cli
xchg
shl
sbb
js
fucom
inc
icebp
mov
clc
inc
mov
push
(bad)
fcomp
leave
push
and
cmp
in
pop
mov
imul
dec
jae
imul
cdq
imul
fs
dec
test
mov
add
cld
add
into
ror
push
popf
or
push
pop
mov
mov
fdiv
inc
cmps
imul
cmp
pop
mov
(bad)
fstp
jmp
mov
dec
mov
dec
repnz
enter
adc
pushf
push
repz
cli
dec
mov
iret
pop
sbb
aad
add
xor
xor
out
adc
jp
pop
add
inc
dec
lds
xchg
loopne
sahf
das
sbb
add
lahf
std
retf
push
inc
xchg
xchg
cli
dec
sar
dec
scas
dec
push
sub
mov
xchg
(bad)
xor
std
(bad)
jle
aad
sti
dec
inc
mov
lds
pop
imul
fdivr
sbb
repz
stc
lea
fcmovne
jno
jbe
mov
inc
xchg
xor
imul
xor
jge
adc
xor
inc
xchg
xor
inc
xchg
aam
aaa
xor
jne
aam
xchg
nop
adc
inc
cmp
push
lods
xor
(bad)
fadd
imul
xchg
int
ret
dec
movs
shl
call
rol
test
and
setl
mov
adc
cmp
fbstp
fs
mov
test
add
inc
mov
push
add
in
push
icebp
shr
pop
daa
loope
ins
clc
xchg
or
fdivr
cmp
in
lds
inc
sbb
mov
(bad)
int3
in
ret
dec
call
repnz
and
out
pop
shl
aad
movs
enter
out
bound
call
aad
mov
or
mov
movs
and
aam
aad
ins
aad
cmps
scas
lods
arpl
in
add
sub
sbb
adc
push
js
lods
xor
out
cmp
or
xchg
dec
outs
ret
inc
mov
push
lock
loope
in
inc
adc
sub
int3
cmp
dec
fwait
dec
inc
loopne
ins
adc
push
and
cs
fcom
fsubrp
fcomi
fwait
cmps
jnp
and
call
iret
mov
lods
mov
in
inc
jns
sub
stos
iret
inc
pop
push
mov
sahf
mov
cmps
rol
ja
int
pop
or
adc
mov
cmp
shl
jg
xor
clc
adc
pop
ins
dec
mov
into
enter
mov
jbe
jg
mov
inc
cmp
mov
push
leave
fild
cmp
ret
pop
sub
dec
lahf
pmuludq
ja
ins
mov
ins
cmps
dec
push
cli
mov
xlat
(bad)
sbb
retf
out
jnp
icebp
sub
push
xor
fild
push
adc
xchg
mov
leave
les
addr16
sub
or
bound
pop
pop
push
adc
ror
xchg
(bad)
call
dec
cli
mov
fisttp
pop
in
add
jmp
mov
jnp
fisub
sbb
lahf
xor
pop
xchg
mov
adc
pusha
(bad)
lock
ss
jo
xor
push
rcr
lahf
test
repnz
aas
sub
fnstsw
sbb
xlat
popa
in
mov
inc
in
lahf
inc
fsincos
imul
daa
push
inc
sete
dec
inc
add
xor
fcmovu
lods
fs
not
adc
adc
mov
mov
aas
test
cmp
cmp
mov
inc
dec
ror
and
inc
and
pop
push
into
arpl
cwde
test
mov
sti
je
push
dec
js
aad
lock
pop
inc
adc
stos
or
cmps
mov
ror
retf
in
mov
mov
dec
dec
inc
movs
stc
inc
jp
clc
repnz
push
scas
jo
popa
jmp
inc
sub
out
jmp
les
enter
jmp
clc
adc
out
fnstenv
fcmovbe
je
and
mov
(bad)
sbb
or
mov
cmp
sub
sub
jmp
clc
fld
call
rcr
adc
jmp
push
adc
dec
cmps
cdq
stc
mov
push
inc
jmp
imul
dec
fwait
cmps
aaa
and
int3
clc
pop
xchg
aas
pushf
div
jmp
adc
jb
or
out
xchg
sbb
jp
xor
cmp
rcl
mov
scas
jle
ja
push
in
daa
test
push
mov
mov
jmp
daa
xchg
xor
sub
dec
push
jae
mov
(bad)
xlat
leave
push
scas
daa
cmp
dec
adc
pop
push
push
aad
pusha
or
xor
mov
test
sbb
xor
xor
push
pop
fstp
or
mov
pop
repnz
mov
add
cmp
cmp
xchg
out
enter
mov
mov
cmc
sub
das
and
cmp
bound
mov
ins
pop
and
ja
cmp
stos
xor
lods
ret
adc
fdivr
ficom
mov
jmp
les
lds
xchg
div
xchg
sub
ins
(bad)
sub
cmp
leave
rol
mov
adc
popa
retf
mov
enter
xchg
pop
cmp
xor
sub
add
repz
cmp
and
xchg
mov
and
ficomp
ret
rol
adc
adc
ds
xchg
(bad)
cs
pop
inc
xor
push
xchg
jne
jmp
iret
mov
pop
into
ds
mov
adc
xor
pop
icebp
pusha
fiadd
fsubr
bound
pop
gs
int3
cs
lock
or
add
mov
xchg
push
mov
sbb
std
pop
scas
int
and
out
popa
mov
int3
jmp
ficom
dec
pop
(bad)
neg
xchg
xchg
push
fist
jns
mov
or
sti
or
ret
lods
sar
(bad)
repz
stos
mov
jg
fiadd
add
and
sub
add
popa
fidiv
call
jae
arpl
mov
test
push
movs
sub
xchg
loope
sbb
jae
pusha
jnp
inc
mov
dec
push
inc
retf
fldcw
add
add
jb
cs
inc
mov
addr16
cmp
or
gs
in
add
jno
and
fisub
mov
daa
jbe
daa
shr
fcmove
packuswb
jl
fiadd
cmp
cmps
ja
pop
inc
mov
cmp
and
push
inc
out
pop
xchg
mov
fcomp
stos
inc
into
add
dec
loop
jle
pop
outs
mov
cli
xchg
mul
xchg
mov
add
(bad)
jnp
imul
push
gs
stos
stc
jecxz
add
pop
test
test
data16
add
cmp
cmps
test
cwde
pop
shl
nop
cmps
outs
lods
cld
shr
sub
bound
out
and
mov
sub
stos
xchg
jnp
js
cwde
jne
ins
les
loope
pop
das
or
aas
movs
push
lea
sub
jo
sub
mov
and
dec
and
in
in
add
ret
cmp
and
outs
sbb
jns
lods
not
push
adc
cld
dec
jle
clc
test
test
outs
leave
rcl
pop
call
sub
das
cmp
jmp
mov
scas
data16
and
inc
pop
aam
or
test
cmps
int3
pop
jae
shl
imul
xchg
mov
or
sbb
repz
(bad)
addr16
push
sysenter
loope
cmp
mov
lds
sub
mov
cs
in
imul
mov
sub
or
loope
fwait
mov
movs
enter
(bad)
cmp
sbb
scas
rcl
inc
leave
scas
mov
and
std
xor
mov
fst
mov
mov
in
mov
(bad)
fisubr
mov
retf
dec
pop
sbb
add
fisub
(bad)
ror
sub
test
add
xchg
cmp
sahf
xor
dec
push
push
cwde
push
jbe
dec
shr
mul
pop
les
push
popf
pop
jp
mov
xchg
pop
cmp
mov
mov
push
xchg
push
mov
retf
add
pop
jp
and
jl
or
pop
push
mov
fwait
stos
fcomip
gs
push
jge
xchg
pop
or
mov
pop
in
cwde
sbb
adc
retf
xchg
scas
je
pop
hlt
stos
call
(bad)
add
in
inc
mov
mov
push
repz
jbe
hlt
push
shl
inc
cmp
cmps
cmp
or
int
pop
sub
ror
stc
mov
xchg
push
fisttp
sub
add
mov
xchg
mov
aam
and
pop
sub
and
ds
psubsw
pushf
sub
and
aad
xor
mov
xor
push
or
call
loope
sbb
mov
div
sar
mov
(bad)
rcr
int3
push
data16
(bad)
int3
push
cmp
xchg
loop
stos
mov
inc
pusha
mov
cld
dec
cdq
nop
imul
aam
dec
xchg
sbb
(bad)
lods
pop
bound
mov
hlt
jl
scas
pusha
jmp
xor
fistp
pop
(bad)
jnp
jns
stos
mov
fnstsw
repnz
test
cwde
retf
jae
sbb
or
mov
sahf
cwde
or
sub
ds
cmp
mov
mov
mov
inc
xchg
popa
js
iret
cmc
sti
sub
cs
sub
call
sub
lea
sub
pusha
fst
or
cmp
jl
jge
hlt
cmps
repnz
ins
dec
and
pop
icebp
dec
ja
dec
mov
ss
mov
pop
rol
and
(bad)
popa
outs
sub
std
hlt
xchg
out
push
es
dec
lock
dec
push
and
mov
cmp
sub
mov
adc
pop
popa
idiv
adc
jne
cmps
daa
leave
xchg
pop
sub
mov
(bad)
xlat
int3
pusha
push
add
push
ins
movs
ins
fcmove
jbe
inc
pop
shl
sub
aaa
int
adc
pop
mov
pop
mov
xor
(bad)
std
in
mov
test
test
subps
punpckldq
pop
xchg
xchg
scas
loop
sahf
xchg
aad
mov
pop
out
lock
aad
(bad)
mov
add
ficomp
adc
loope
push
lods
jle
(bad)
jecxz
in
lods
jno
inc
pop
mov
dec
gs
jl
cmc
or
xor
or
and
lea
cdq
xchg
or
and
inc
js
stos
mov
xchg
test
dec
pushf
retf
int3
inc
jb
imul
or
push
ds
imul
int3
popf
mov
sti
ret
es
inc
cmp
jg
(bad)
sub
dec
jl
bound
dec
imul
out
xlat
out
xlat
scas
call
sub
dec
fisttp
jbe
mov
mov
jl
sti
cmp
ret
ins
(bad)
mov
aam
jg
and
sub
repnz
pop
mov
dec
mov
js
fcomp
bound
inc
movs
ret
call
sbb
sub
pop
or
pop
leave
pusha
push
jmp
mov
icebp
mov
and
(bad)
loopne
xchg
mov
sti
(bad)
gs
mov
and
sar
(bad)
fprem
or
push
imul
jae
stos
push
in
es
fidivr
retf
pop
mov
and
xchg
mov
ret
aad
dec
jae
inc
xor
cs
pop
sbb
pop
cwde
test
inc
pop
in
aas
lea
imul
jb
mov
pop
les
or
push
mov
inc
fs
sbb
std
repz
(bad)
cld
cmp
adc
repnz
retf
xor
ss
fwait
out
fld
dec
dec
cmc
pop
mov
clc
out
jp
xchg
push
mov
ret
es
ja
fldl2t
in
push
dec
cld
into
or
mov
mov
in
int3
jbe
jo
aam
cwde
sbb
(bad)
mov
mov
aad
pop
inc
cld
scas
and
in
jg
ret
ins
cdq
fwait
jmp
jae
outs
pop
or
mov
mov
(bad)
pop
inc
jae
mov
sub
lahf
pop
aad
push
push
pop
mov
int
mov
outs
inc
fst
or
pop
xchg
xchg
and
and
in
inc
pusha
push
test
jle
(bad)
sbb
popa
jl
cwde
dec
int
and
mov
xor
shl
call
and
(bad)
daa
sub
cmp
out
or
push
pop
cmp
dec
mov
jge
and
add
scas
(bad)
mov
ds
in
xchg
jnp
shr
mov
push
push
dec
movs
inc
inc
adc
push
mov
ds
int3
pusha
and
sbb
je
add
and
sbb
rol
data16
div
arpl
push
adc
inc
arpl
(bad)
dec
inc
mov
leave
cmp
outs
adc
xchg
xchg
stos
mov
mov
sub
mov
lods
sbb
aad
xchg
push
mov
push
repnz
out
xchg
pop
xor
shl
lahf
retf
out
out
xor
icebp
adc
or
into
pop
mov
lahf
sub
in
mov
xchg
call
dec
scas
(bad)
xor
mov
jnp
add
icebp
mov
cmovae
mov
mov
scas
sar
jg
xor
loope
jmp
sub
add
dec
xchg
in
je
sti
mov
cwde
inc
frstor
mov
imul
dec
and
lock
jae
in
enter
mov
dec
out
add
ins
cdq
pop
mov
jl
mov
jmp
xchg
xor
pop
cmc
pop
nop
pop
retf
xchg
inc
imul
mov
arpl
stc
jns
out
loop
and
test
fwait
mov
lahf
or
mov
fdiv
out
lods
rol
mov
pop
pop
std
pop
dec
aas
retf
push
mov
std
mov
cld
sub
mov
scas
loopne
add
cvtdq2ps
add
pop
push
rcr
cmps
call
xor
jmp
movs
imul
mov
popa
cli
jp
mov
xchg
xchg
and
jae
add
inc
out
inc
cld
in
add
stos
ds
and
jne
(bad)
mov
call
xlat
es
movs
xchg
and
(bad)
aas
cdq
mov
mov
inc
cli
adc
sbb
mov
xor
mov
mov
pop
lds
sbb
into
adc
dec
aas
scas
fiadd
jbe
ror
clc
push
stos
sti
fwait
pop
nop
enter
lds
ins
xlat
dec
(bad)
xor
das
xor
sti
mov
pusha
gs
shr
iret
push
lods
mov
fadd
inc
retf
push
div
shl
call
aad
and
cmp
cli
aad
popa
loopne
pop
or
rol
cmp
xor
rcl
ins
inc
mov
stos
pop
loop
aaa
iret
push
ss
stc
cmps
lods
adc
(bad)
ja
lds
nop
sahf
sbb
and
stos
jmp
ret
test
xchg
js
inc
gs
retf
or
add
dec
xchg
icebp
mov
popf
pop
scas
xor
nop
pushf
loop
adc
inc
and
scas
mov
test
clc
outs
lds
sti
sbb
dec
jnp
adc
and
shr
fisub
test
add
mov
in
in
sbb
loope
add
loop
popf
push
(bad)
cmps
sbb
pop
jle
or
or
push
int3
or
scas
push
outs
push
daa
push
mov
cmp
or
add
popa
shl
hlt
push
adc
pop
and
mov
jecxz
mov
popf
and
adc
stc
fidiv
xor
mov
mov
xchg
push
stos
and
shl
inc
lock
pop
cmp
pop
retf
adc
inc
fs
rcpps
adc
xor
out
aad
ss
iret
sbb
out
call
jnp
in
lock
or
(bad)
movs
mov
neg
stc
icebp
mov
xor
mov
enter
fwait
loopne
dec
pushf
cmp
out
out
fs
xchg
scas
lahf
or
retf
stc
leave
dec
or
pop
fistp
cmc
(bad)
jo
pop
(bad)
leave
fwait
pop
and
movs
adc
and
inc
add
fcomp
and
cli
ret
xchg
xchg
lods
pop
neg
dec
ret
(bad)
call
dec
jbe
stos
lahf
shr
mov
not
dec
in
inc
adc
sbb
cdq
jo
cmp
ror
or
(bad)
shl
xchg
jl
xchg
cmc
adc
xchg
cmp
jnp
xchg
mov
fst
dec
jnp
pop
mov
inc
mov
retf
and
int
or
data16
pop
xchg
add
sub
pop
adc
add
(bad)
out
scas
sbb
jecxz
ss
dec
sub
mov
adc
push
mov
push
das
mov
ss
pusha
or
jnp
mov
pop
mov
sar
and
popa
xor
xchg
mov
int
xor
into
enter
add
mov
or
xchg
xchg
scas
js
ds
cwde
test
fidivr
sbb
neg
imul
mov
jg
fld
xor
jns
fmul
and
ss
mov
mov
adc
xchg
jns
fld
add
sub
in
and
repz
jnp
retf
pop
mov
shl
repnz
int3
out
dec
dec
gs
xchg
out
xor
arpl
cmp
shl
js
loop
jle
sub
leave
ss
(bad)
movs
fwait
dec
lea
mov
add
mov
jmp
cld
clc
shl
jns
aad
adc
mov
cmp
mov
stc
mov
test
xchg
pop
jns
jno
scas
mov
sbb
call
xchg
aas
jmp
pop
into
adc
(bad)
mov
mov
mov
je
leave
jbe
movs
cmp
or
out
(bad)
jo
aam
dec
lock
cdq
pop
jl
pop
inc
and
jae
ins
out
sub
xchg
aas
in
data16
sbb
data16
pop
test
cmc
div
repnz
(bad)
fld
sub
mov
mov
cdq
ret
xchg
sti
dec
nop
add
mov
ja
jnp
push
in
stos
sbb
jne
dec
mov
aaa
jge
aas
pop
fdiv
mov
mov
outs
sbb
jb
inc
xlat
loop
retf
ss
mov
enter
jmp
push
icebp
cmp
retf
into
xorps
(bad)
fsub
lods
xor
pop
or
test
ins
and
or
jbe
and
hlt
sub
inc
rcl
rol
pop
arpl
mov
int
and
jnp
scas
(bad)
out
cmp
push
push
ds
and
jnp
ret
out
int
mov
sub
mov
sub
and
call
in
push
pop
(bad)
fcmovu
dec
push
add
mov
stos
add
dec
jns
test
sbb
pop
pop
mov
push
add
loope
jl
enter
test
and
or
leave
jnp
pop
pop
je
push
pop
mov
add
js
push
pop
cmp
inc
push
retf
mov
jbe
jg
and
push
or
sub
rol
xchg
add
fldcw
fisttp
cmc
sub
out
cmp
adc
push
lds
adc
xchg
sbb
cli
jb
sti
sub
fsub
dec
sub
mov
int
mov
les
xlat
cli
jne
(bad)
leave
jno
shl
outs
mov
dec
sub
cmps
cmps
add
add
mov
gs
xor
loope
test
dec
and
ret
ret
sub
push
inc
(bad)
mov
in
jns
das
bound
bnd
mov
jmp
(bad)
mov
daa
adc
sbb
(bad)
cwde
aam
xchg
xchg
push
cmp
(bad)
(bad)
out
mov
mov
cmps
cdq
clc
push
(bad)
jae
push
mov
jmp
push
mov
xchg
imul
pop
stc
cli
daa
mov
xchg
int3
cwde
lods
(bad)
fs
xchg
cmp
dec
push
lds
sub
test
sti
arpl
sub
repz
in
xor
nop
xor
jo
push
bnd
in
ins
popf
(bad)
in
adc
adc
sbb
es
call
inc
mov
stc
jmp
mov
(bad)
retf
xor
lahf
fadd
arpl
sub
rol
sahf
xor
xor
minps
lods
push
mov
or
movs
jno
dec
dec
sti
pop
test
cmp
(bad)
(bad)
jno
stos
push
aaa
mov
sbb
lods
inc
cld
dec
push
and
movs
dec
pop
nop
add
xor
test
shrd
push
xchg
repz
lds
inc
pop
xchg
jns
gs
push
and
pop
leave
jne
syscall
icebp
push
cmc
pop
fimul
adc
xor
popf
movs
dec
jnp
cld
mov
in
adc
ja
(bad)
xor
or
stos
cdq
ret
shl
xchg
inc
call
and
int3
inc
adc
jp
sahf
inc
test
js
dec
in
call
push
inc
ins
test
popf
mov
xor
daa
sbb
jmp
ins
sahf
ins
sar
push
push
xchg
or
cmp
fild
xchg
xchg
mov
movs
movs
mov
aam
mov
dec
and
sub
sub
mov
and
mov
inc
not
xor
pop
les
aas
mov
not
mov
xchg
or
call
addr16
push
out
je
out
xchg
pop
dec
mov
mov
test
or
out
pop
sub
cmc
cwde
cli
xor
call
cmp
fwait
test
cmp
sub
adc
push
mov
cmp
enter
loopne
cli
xchg
out
mov
out
fmul
push
dec
dec
scas
ficom
cli
dec
or
mov
mov
jle
xor
stc
rcl
inc
and
and
mov
adc
repz
test
jae
add
add
push
inc
outs
ror
mov
in
adc
ret
pop
sbb
add
ds
xlat
mov
jb
mov
inc
xor
pop
xor
mov
cmp
adc
iret
or
fpatan
push
inc
xchg
arpl
movs
mov
sbb
dec
jae
mov
std
adc
sub
jne
nop
popf
push
int3
or
pop
push
xchg
add
inc
(bad)
pop
or
fdivr
adc
jno
lods
dec
int
push
pushf
hlt
mov
fld
mov
in
mov
stos
jle
mov
out
and
sub
mov
jle
inc
pop
cmp
jge
fistp
inc
push
jne
les
jb
ds
lods
(bad)
xor
(bad)
rol
adc
(bad)
out
sub
adc
push
retf
outs
data16
jmp
ficom
jns
adc
scas
fiadd
jl
mov
into
inc
ss
fsubr
loop
cwde
and
inc
mov
mov
repnz
xchg
call
jmp
mov
mov
test
test
mov
sbb
into
arpl
sub
mov
jge
stos
(bad)
mov
push
xor
push
adc
xor
inc
push
(bad)
in
mov
mov
cmp
aas
jo
sahf
mov
nop
sbb
hlt
mov
cs
ror
rol
gs
cmp
push
test
leave
jecxz
mov
sub
pop
jno
xor
dec
ins
and
or
pop
sub
call
pop
jmp
push
push
(bad)
cdq
aad
test
or
movs
stos
clc
and
sbb
movs
xor
test
pop
ja
cmc
fcmovb
retf
pop
xor
pop
pop
and
in
adc
push
mul
add
out
loopne
adc
movhps
push
int
mov
sti
ins
mov
shl
jmp
std
arpl
stos
add
dec
xor
sub
mov
dec
clc
ror
nop
jno
repnz
push
and
add
and
nop
jns
pop
cmp
loop
jb
pop
jb
jns
je
adc
ret
cmp
in
cs
ud0
cmp
add
(bad)
add
sub
lock
push
or
hlt
in
xlat
fld
(bad)
cmp
imul
sub
(bad)
mov
int
jecxz
lods
retf
inc
push
push
push
jnp
in
out
fst
cld
scas
(bad)
dec
ja
fnsave
popa
fisub
dec
loope
xlat
adc
mov
data16
mov
xchg
shl
cdq
jnp
jo
(bad)
loop
(bad)
sbb
hlt
cmps
pop
cmp
xor
jge
sub
jp
pop
lock
or
(bad)
out
in
dec
and
(bad)
scas
pop
shrd
pop
ret
(bad)
sub
xchg
ds
fsubr
pop
loop
js
xchg
jp
jne
and
lea
inc
dec
sar
adc
arpl
jno
push
mov
pop
xor
add
fs
pop
ret
in
mov
lea
jge
mov
pusha
or
inc
jle
sub
cmp
and
ja
dec
mov
fsubr
adc
mov
mov
pop
add
int
imul
inc
adc
cmps
stc
jne
fidiv
jne
cdq
jne
fnstsw
sub
push
sub
fidivr
mov
sbb
jmp
dec
dec
div
pop
mov
cmps
push
in
mov
and
dec
ret
pop
retf
add
dec
cmp
mov
outs
cmp
cdq
test
dec
mov
mov
fbstp
adc
mov
and
retf
xor
xchg
mov
aas
out
loopne
lahf
dec
iret
cmps
fisttp
push
lods
cmp
push
xor
call
or
addr16
sbb
inc
and
loop
outs
inc
mov
cs
and
out
xor
add
mov
or
js
pop
and
hlt
pop
cwde
shl
(bad)
in
sbb
mov
jmp
pop
pop
stos
pop
and
add
and
pop
(bad)
jge
loopne
in
xor
xor
jnp
int3
or
in
mov
enter
mov
in
and
popw
adc
test
test
pusha
jmp
push
xlat
shl
and
add
jbe
icebp
dec
cmp
pop
icebp
movs
and
jo
push
shl
rcl
xor
imul
mov
mov
add
mov
lea
data16
aad
sub
or
fs
and
inc
stc
fcomp
icebp
div
retf
mov
sub
or
add
sub
dec
es
js
cmps
jmp
dec
mov
js
cmp
sbb
scas
mov
mov
mov
les
or
xor
test
aam
cmp
pop
push
jge
push
lods
xor
aam
inc
out
int3
adc
data16
xlat
cmp
mov
inc
pop
cmps
or
loope
fwait
aaa
fdivr
(bad)
hlt
mov
loope
cmc
jp
test
pop
in
shl
jmp
int
in
imul
and
jl
stos
or
jecxz
jecxz
jg
(bad)
aas
out
jg
imul
mov
cld
push
push
enter
mov
push
clc
adc
adc
mov
in
mov
icebp
mov
mov
je
cwde
ret
mov
sub
jge
adc
test
xchg
mov
mov
adc
and
dec
(bad)
lea
pusha
lahf
jmp
cli
ret
hlt
adc
sub
cdq
xor
imul
xor
mul
push
xor
aad
and
in
xor
and
lds
loop
dec
inc
sub
xchg
dec
repz
xchg
sub
test
in
sbb
push
push
jnp
mov
test
mov
pop
xchg
in
psrlq
push
pop
ins
loopne
das
jno
jne
and
movs
scas
fisttp
mov
add
shr
jnp
jb
addr16
shr
ins
push
and
push
or
xchg
xlat
pop
(bad)
es
inc
sahf
nop
inc
je
mov
rcl
addr16
aad
dec
xchg
xchg
pop
loope
mov
push
xchg
lods
addr16
push
adc
pushf
outs
inc
sub
mov
stos
mov
cwde
push
sub
xlat
adc
popf
cmps
idiv
cwde
cmp
xchg
cmps
imul
inc
repnz
mov
je
int3
mov
adc
dec
mov
and
lds
xor
adc
rcr
and
cmps
dec
jge
addr16
imul
adc
mov
ss
xchg
cmp
jae
(bad)
jmp
aaa
movs
xchg
aas
push
or
das
push
retf
push
adc
mov
nop
dec
imul
lods
scas
push
and
push
pop
add
mov
test
cmp
sub
clc
add
or
lods
xor
loopne
or
aas
mov
daa
mov
dec
outs
jne
mov
inc
pop
xor
ret
or
cli
sbb
js
inc
jns
pop
sbb
icebp
es
ins
mov
adc
adc
push
and
mov
arpl
aam
icebp
xor
in
add
cmp
add
movs
cmp
pushf
rol
cmp
mov
imul
dec
call
rcr
cs
xchg
ss
pop
lock
cmps
jno
(bad)
inc
mov
add
xor
stc
aad
into
cs
jl
dec
mov
xchg
jecxz
(bad)
xlat
or
outs
mov
jle
xchg
mov
leave
imul
outs
jmp
lods
retf
mov
jmp
shl
les
popf
inc
or
cmps
nop
sub
movs
cmp
cmp
mov
movs
into
and
lahf
pop
loop
jl
mov
test
out
and
mov
dec
mov
shr
jae
or
or
out
int
ror
mov
pusha
into
cld
xchg
and
popa
add
sub
inc
jbe
addr16
stc
ds
sbb
shr
das
jecxz
adc
cmp
into
mov
dec
(bad)
adc
imul
fimul
jmp
mov
push
sub
stos
fild
mov
sbb
rcr
icebp
sbb
mov
mov
ja
jp
rol
or
xchg
pop
push
pop
stos
sub
fucom
fist
jo
jbe
ret
mov
push
xor
call
mov
inc
push
popa
jno
inc
stos
push
lods
mov
pop
fisttp
and
out
scas
movs
xor
cmc
adc
shr
adc
lahf
pop
ds
xor
shl
or
aam
pop
gs
loopne
sahf
lds
enter
jno
add
inc
gs
fs
pop
out
xchg
imul
fldpi
scas
fisubr
pop
mov
outs
mov
scas
jecxz
inc
outs
lds
push
div
mov
jo
cld
or
setp
ds
cmp
xchg
sbb
mov
leave
sub
sub
pop
ror
cmp
sub
sbb
jno
test
mov
sub
js
test
fidivr
test
shl
pop
lahf
cmp
cs
xchg
sbb
xchg
sbb
mov
cmps
xor
rcr
daa
das
jo
adc
imul
jnp
or
into
scas
pop
push
loopne
adc
xor
adc
(bad)
sbb
leave
push
adc
ds
test
dec
mov
mov
popf
sbb
cli
inc
into
lods
das
cmp
(bad)
es
call
call
stc
pop
pop
mov
loopne
mov
mov
test
sti
arpl
jo
jns
jmp
xchg
into
in
aaa
push
jl
pusha
out
pop
shl
dec
pop
(bad)
ins
mov
mov
push
repz
out
movs
jge
sub
push
fadd
pop
shl
cwde
sub
test
call
adc
out
inc
cmp
loope
mov
mov
cs
xchg
dec
and
in
aad
sti
mov
ret
xchg
mov
push
push
sbb
xchg
div
icebp
cmp
xor
scas
dec
and
fcomp
cmp
xchg
push
scas
pop
jo
cmp
imul
movs
dec
sbb
push
je
xor
leave
mov
adc
xchg
dec
ja
dec
pusha
jp
or
(bad)
sahf
loopne
push
js
pusha
fmul
push
pop
loope
mov
mov
ds
dec
jne
fisub
mov
ret
ins
push
inc
adc
sub
pop
and
xchg
out
test
loopne
cmp
cmps
call
jge
imul
int3
cmp
les
movs
push
ds
cmp
dec
int
and
add
in
adc
jl
retf
push
dec
cs
sbb
in
mov
lock
int3
push
stos
dec
push
ins
ror
fsub
mov
icebp
fcom
xchg
xor
push
sub
xchg
cmp
sbb
cmp
retf
mov
mov
in
add
push
sbb
jmp
test
shl
or
or
jmp
in
adc
jns
mov
and
sbb
push
cli
test
(bad)
push
frstor
push
inc
int3
pop
in
sbb
and
ret
mov
push
or
in
loope
adc
retf
repz
fcomp
cmc
pop
les
xchg
loope
xor
test
fs
cmc
sahf
sbb
pushf
mov
jbe
pop
out
inc
and
data16
sub
inc
mov
ror
retf
fldcw
fidiv
aaa
enter
call
xor
out
aad
sub
(bad)
sub
mov
sub
lahf
ret
dec
jg
(bad)
icebp
push
xchg
jp
(bad)
lock
inc
push
fcomi
jge
or
sahf
jecxz
mov
gs
ss
(bad)
fadd
inc
out
jg
mov
or
xchg
pop
in
sub
jo
ret
fwait
push
or
mov
cli
aaa
inc
add
arpl
xchg
mov
cwde
add
(bad)
mov
in
xchg
mov
xchg
clc
mov
mov
inc
ret
pop
(bad)
retf
sbb
dec
jbe
push
or
aam
adc
ins
lahf
jo
addr16
pop
adc
inc
dec
fs
repnz
popa
or
xchg
lock
or
adc
mov
bound
add
int
bnd
jno
push
xor
add
iret
jg
icebp
cdq
jp
div
inc
mov
xor
mov
enter
sub
pop
sub
fnstsw
or
sahf
scas
mov
mov
adc
in
and
pop
xor
inc
inc
push
adc
cmc
jb
imul
(bad)
jmp
xor
popf
sub
xor
out
sub
je
(bad)
mov
paddusw
and
mov
sti
push
in
test
xor
dec
sbb
jge
cmps
ja
adc
sbb
sbb
in
ret
icebp
leave
in
and
xlat
das
test
ss
push
mov
out
push
outs
aas
lods
in
(bad)
out
pop
shr
je
adc
mov
add
(bad)
bound
push
pop
mov
fdivr
mov
pop
fstp
pop
test
lock
ret
cmc
fld
fisttp
cwde
mov
jge
ficom
mov
cmc
test
cvtpi2ps
into
in
pop
add
cmp
enter
pop
xor
icebp
dec
add
mov
inc
dec
cld
js
mov
pusha
dec
and
and
(bad)
lahf
repnz
nop
daa
das
mov
lods
push
cld
test
inc
dec
aaa
hlt
(bad)
ficomp
xchg
dec
test
cmp
mov
xor
sub
sbb
ins
hlt
cwde
pop
jmp
add
sub
and
pop
jecxz
lds
push
pop
nop
mov
inc
add
or
sbb
lods
test
and
std
mov
or
ret
fcmovnb
sbb
sub
pop
adc
or
xchg
jmp
repnz
dec
pop
mov
aad
mov
mov
les
and
lds
aaa
push
rdtsc
gs
rcr
sub
add
jl
shl
cmp
mov
sbb
mov
pop
xchg
fisttp
mov
inc
mov
mov
cs
jne
inc
loopne
add
xor
mov
xchg
mov
fstp
adc
std
pop
cdq
bound
leave
daa
mov
lods
adc
adc
inc
adc
into
icebp
test
shr
mov
int
mov
fdivr
gs
jecxz
mov
push
add
addr16
jb
and
jmp
jno
push
or
ss
std
jmp
jmp
icebp
popf
cwde
mov
xchg
ret
inc
mov
xchg
(bad)
cld
jmp
scas
xor
adc
into
push
sub
mov
cs
(bad)
repnz
dec
into
mov
add
fs
and
pop
xchg
pop
push
jb
in
lahf
repnz
(bad)
and
retf
and
aaa
sbb
retf
or
lods
inc
stc
aaa
mov
cdq
sbb
jecxz
gs
aaa
push
(bad)
fwait
pop
mov
(bad)
push
jle
rcl
loope
outs
sub
xchg
dec
icebp
shr
aas
ins
fwait
mov
call
jge
sar
xchg
push
ret
xchg
cld
(bad)
mov
call
add
jp
inc
xchg
shr
jl
and
shr
adc
jne
mov
push
push
aam
or
aaa
jecxz
mov
test
int3
jmp
test
push
jecxz
fs
xor
shl
ins
xchg
loope
mov
cmp
xchg
lahf
pop
ror
ja
pop
sbb
enter
and
aas
(bad)
xchg
mov
mov
push
xchg
retf
cmc
adc
jmp
pop
je
sub
dec
jmp
es
das
aam
std
adc
cwde
mov
es
push
jp
mov
pop
(bad)
push
xchg
stos
fisub
push
sti
jae
cmp
add
out
jmp
xor
mov
dec
ja
mov
mov
fdiv
push
push
fidivr
or
sti
adc
mov
pop
inc
cmps
mov
push
(bad)
mov
dec
out
xor
dec
hlt
xchg
mov
cmp
xchg
add
leave
mov
xor
bound
out
and
xchg
xchg
and
pop
pop
sub
jnp
std
sub
sti
add
mov
push
out
cmp
mov
jns
out
test
jmp
fisubr
or
adc
clc
jns
pop
or
mov
cs
mov
rol
xchg
fidivr
scas
imul
xchg
inc
cmps
fimul
pop
xor
fadd
lock
dec
and
and
or
jnp
outs
jo
jge
popf
sbb
iret
fst
sub
jne
push
and
pop
add
sbb
add
pop
retf
pop
jbe
sbb
push
jae
ret
or
mov
add
call
ret
or
fdiv
dec
ins
inc
xchg
xor
rcl
mov
pop
fwait
jmp
hlt
fs
pop
add
loope
imul
pop
adc
rcr
add
in
sub
sub
jno
test
sbb
scas
mov
dec
mov
adc
xor
mov
cmp
ins
mov
shl
shl
add
mov
not
xor
pop
imul
aaa
shl
cmp
pusha
das
pop
jge
jno
(bad)
xor
imul
mov
jp
ret
lods
inc
into
ret
jns
daa
mov
xchg
int
out
in
std
les
(bad)
xor
jle
mov
inc
mov
icebp
dec
icebp
fild
int3
pop
mov
pop
mov
rcr
xor
(bad)
rcl
jmp
xor
stc
xchg
lock
sbb
sahf
jmp
xor
jmp
test
retf
mov
push
imul
xchg
sub
imul
cs
push
mov
imul
call
mov
sbb
adc
lods
mov
out
adc
int
mov
rol
dec
loop
jnp
adc
jg
in
adc
cs
std
dec
rcl
pushf
ror
sub
mov
scas
shl
leave
mov
adc
mov
icebp
fsubr
or
sti
pushf
fild
mov
test
and
mov
idiv
ret
and
data16
mov
add
mov
idiv
inc
lahf
das
mov
add
mov
in
call
pop
add
in
mul
pop
add
lods
push
or
neg
jns
push
sbb
outs
xor
or
push
test
stos
je
and
add
repz
je
jb
sar
loope
xchg
dec
add
inc
loope
mov
aam
out
xor
or
push
xchg
pop
lods
xor
dec
xor
adc
cli
(bad)
mov
dec
shl
pop
or
mov
mov
sub
test
xchg
xor
jle
test
and
mov
mov
fld
cwde
lock
add
dec
adc
rcr
ds
sub
in
pop
(bad)
fsubr
rcr
cmp
loope
or
lea
dec
jne
inc
xor
push
sbb
sbb
push
xchg
les
ss
and
out
dec
fwait
aaa
clc
(bad)
ficom
and
pop
stos
mov
mov
nop
pop
jge
jne
cli
sbb
xchg
ret
xor
push
pop
repz
sub
sbb
pop
shl
out
dec
or
xor
pusha
pop
xor
(bad)
iret
les
faddp
pop
and
les
fld
std
stos
imul
movs
sbb
xor
mov
mov
sahf
jo
sbb
cs
repz
xor
xor
xchg
mov
mov
xchg
cld
xchg
cli
inc
mov
lahf
dec
test
popf
bound
cdq
aam
jg
push
cmc
outs
pop
pop
fnsave
shl
dec
sbb
out
ins
mov
dec
inc
retf
adc
aaa
cmp
add
mov
sub
adc
repnz
jns
push
mov
push
sbb
int3
push
sar
mov
add
mov
xchg
xchg
inc
jae
gs
mov
hlt
or
jp
adc
movs
pop
popa
gs
out
inc
loopne
fstp
retf
retf
jne
xchg
in
dec
inc
jge
icebp
jg
dec
jl
test
out
hlt
(bad)
sti
aas
ja
mov
fwait
jp
sbb
xchg
or
and
jno
pop
adc
cs
jno
jle
lock
sahf
popa
outs
jg
xchg
cli
lock
std
push
and
xor
popa
test
and
mov
dec
fnstenv
movs
shufps
adc
scas
xchg
xor
mov
push
aam
mov
ds
mov
jle
sub
and
jmp
sbb
stos
sahf
jle
cmp
inc
jbe
retf
scas
scas
popa
sub
das
cmp
mov
add
jb
fnstenv
jnp
loopne
call
jo
jmp
add
lea
xchg
imul
mov
mov
retf
test
test
fmul
pop
ins
and
mov
dec
aad
mov
out
in
pop
repnz
sub
sbb
xor
fnstsw
loop
bound
iret
push
dec
lods
sub
fbstp
push
(bad)
fist
sbb
cwde
inc
adc
jbe
mov
lock
cmc
outs
push
repz
mov
retf
push
cmp
int
adc
sbb
iret
push
cmc
cs
leave
sbb
mov
shl
pop
aas
mov
shr
ret
inc
call
pop
movs
push
xor
cmp
nop
pop
repz
push
jbe
test
push
xor
in
xor
xchg
icebp
scas
ror
and
clc
add
cdq
dec
dec
push
test
sar
xor
lods
fbstp
and
js
sub
or
pop
add
and
mov
fistp
test
mov
popa
ss
aam
xchg
cmps
sti
mov
stos
push
mov
and
mov
cmp
sbb
push
sahf
jle
jp
push
shl
sub
ret
(bad)
out
xchg
push
push
ret
pop
xchg
inc
xor
adc
and
lods
cmps
mov
pop
les
sub
psraw
fcomi
out
mov
mov
or
push
std
sti
sub
pusha
enter
adc
gs
test
sub
ror
cmps
or
test
aaa
or
pop
cwde
std
push
xchg
push
and
add
jae
ret
push
adc
cmp
push
outs
std
rcl
das
das
jmp
scas
jno
or
cmp
cmp
dec
and
pop
mov
jge
xchg
sub
or
cld
jbe
movs
jns
push
or
in
unpcklps
push
movs
nop
mov
nop
lods
dec
in
mov
dec
retf
or
mov
icebp
pop
jo
push
pop
push
cs
xor
pop
fs
xchg
xor
into
xor
xor
test
pop
cdq
popa
mov
sub
out
inc
mov
mov
pop
jp
test
inc
int
shr
ficom
popf
push
movs
mov
aad
scas
scas
cmp
pop
mov
pop
and
pop
psubusw
neg
xlat
loop
mov
movs
xchg
call
mov
clc
mov
adc
sbb
icebp
cld
adc
xor
cmp
fidiv
pop
repz
or
data16
repz
enter
aad
stos
clc
mov
mov
daa
and
arpl
fdivp
pop
loope
cmc
or
xchg
cmp
cmp
cmp
rcl
scas
in
cmp
mov
mov
cwde
push
pusha
int3
pop
fcom
or
xchg
imul
(bad)
or
fwait
inc
adc
lock
xor
add
je
neg
dec
inc
popa
call
mov
(bad)
aas
push
enter
pusha
retf
arpl
push
lea
cli
cdq
out
cmp
or
adc
jne
adc
push
retf
test
mov
mov
cmp
fidivr
pop
aad
cmp
cmp
push
loopne
push
sbb
dec
out
cdq
add
leave
add
int
mov
add
movs
dec
cdq
test
hlt
pop
loope
fstp
xchg
mov
mov
cmp
leave
xor
psllq
dec
outs
in
or
push
sub
gs
sub
jp
stos
fwait
push
inc
xor
ins
lahf
ja
mov
add
mov
jb
imul
clc
loope
push
sahf
jb
daa
push
ror
mov
int3
sbb
push
imul
cmc
fwait
je
out
loop
hlt
and
dec
xchg
mov
fisubr
inc
adc
jo
jmp
mov
(bad)
ss
jnp
xor
scas
xchg
mov
ror
js
pop
lock
fimul
pop
mov
ret
cmc
sbb
data16
test
es
(bad)
cmp
push
pop
nop
fild
cmp
push
sub
or
jo
mov
in
mov
inc
or
dec
popf
lods
out
sub
mov
stos
add
inc
adc
inc
xchg
dec
scas
out
add
mov
jp
lahf
cmp
ins
mov
test
dec
mov
stos
inc
lahf
sub
je
mov
ja
fcomip
inc
adc
outs
into
out
cmps
cmp
mov
and
clc
inc
aaa
sub
out
outs
les
cmp
es
loopne
mov
cmp
push
mov
sbb
or
and
pop
xchg
lahf
and
xchg
stc
(bad)
jg
push
retf
iret
mov
in
ret
cld
xchg
pop
mov
pop
cmps
jmp
je
fidiv
loopne
mov
xor
repnz
jmp
nop
pop
pop
adc
into
mov
(bad)
xlat
imul
xchg
cli
and
pop
test
cld
bound
dec
ins
(bad)
cmps
pop
push
int3
mov
dec
pop
mov
mov
xchg
mov
push
dec
inc
mov
ds
fcmovnbe
push
(bad)
mov
leave
test
jo
pop
jmp
adc
add
pop
sbb
mov
jnp
pop
xchg
cmc
push
add
pop
gs
and
rcl
je
and
mov
rol
pop
ret
mov
rcl
pop
repz
inc
(bad)
pop
mov
xlat
je
xchg
mov
push
rcl
lods
dec
xor
add
inc
daa
data16
pop
mov
loop
sbb
shl
and
push
imul
cmc
jecxz
mov
lock
(bad)
push
lods
cs
retf
call
push
mov
vpandn
jmp
ja
pop
rcl
popa
popa
div
ror
mov
in
test
add
test
jno
jl
jg
pop
adc
lods
adc
or
(bad)
dec
inc
xchg
or
ret
and
dec
push
adc
jg
xchg
push
xor
cmp
sub
adc
sub
push
in
pop
inc
adc
add
jo
imul
cmp
sub
pop
(bad)
lods
adc
inc
push
loop
stos
retf
aam
cmp
mov
fcomp
sbb
inc
fucomi
sbb
dec
aam
imul
sub
mov
jnp
cmp
test
mov
cmps
pop
pushf
cmp
xchg
gs
xchg
rcl
pop
lods
movs
scas
(bad)
sti
jno
les
imul
sub
cmp
ret
jae
xor
fisub
cmc
mov
mov
jne
hlt
jo
mov
pop
(bad)
loop
xlat
or
sbb
(bad)
mov
iret
aam
mov
je
and
je
mov
out
fwait
cmp
push
mov
test
(bad)
jmp
fldenv
sub
shr
sahf
mov
mov
xor
out
shr
xchg
popa
ss
xchg
mov
xor
push
out
cmps
pop
add
mov
(bad)
push
pop
pop
les
into
pop
mov
push
andps
add
xor
enter
repnz
jmp
and
mov
jmp
mov
rcl
aad
loopne
fs
frstor
jle
in
xchg
cwde
(bad)
popf
data16
pop
xor
add
pusha
xchg
les
dec
adc
jp
fwait
pop
ja
mov
call
retf
dec
movs
pusha
lods
and
gs
dec
fild
pop
mov
or
ss
or
outs
stc
push
sbb
mul
cmc
push
jmp
xchg
clc
sbb
mov
jns
lds
push
jecxz
jle
nop
add
and
add
mov
pop
std
sbb
js
ror
pop
dec
pushf
mov
or
sbb
inc
xor
ins
int3
fcom
push
or
fs
pop
repnz
jmp
out
int3
sub
dec
loope
xchg
cmp
repz
cmp
jp
sbb
xor
mov
or
popa
pop
outs
push
sbb
and
outs
push
push
retf
sbb
adc
add
xlat
leave
repz
push
push
int
cmp
cmp
add
add
cdq
cdq
sbb
ret
int3
inc
hlt
fcmovnbe
xchg
or
leave
int
jecxz
(bad)
sub
sahf
movs
daa
mov
test
(bad)
mov
icebp
std
jmp
out
sar
clc
lods
pop
xchg
pushf
sub
mov
dec
int
cwde
mov
jns
or
jne
pop
push
sbb
pusha
cmp
or
int3
pop
push
xor
cmps
inc
inc
arpl
vdivss
push
fisttp
in
mov
bound
cmc
out
adc
push
jno
adc
(bad)
pushf
xchg
inc
int
aas
(bad)
stos
movs
dec
jns
ins
mov
aas
sub
lds
jns
pushf
xor
ret
add
sub
fidiv
lahf
outs
pusha
push
ret
sub
inc
push
out
push
inc
dec
mov
dec
addr16
fcomip
mov
cmp
fild
push
and
cs
clc
fisub
mov
adc
clc
int
add
cmp
aam
cdq
push
pop
not
jmp
stos
inc
or
es
addr16
inc
idiv
xor
lods
jbe
cmps
call
jns
fistp
and
dec
nop
mov
sbb
jmp
mov
bound
xor
jge
inc
add
(bad)
fsub
aad
bound
or
mov
mov
dec
(bad)
arpl
fwait
in
fistp
test
and
jl
or
or
movs
cld
es
scas
sahf
jmp
pop
xchg
sub
pop
dec
loope
xor
jle
pop
pop
je
add
sbb
pop
addr16
jp
mov
sub
cmp
dec
jl
and
lock
in
cmp
mov
arpl
fisttp
scas
not
daa
popf
xor
imul
xor
(bad)
hlt
or
mov
mov
pop
mov
dec
fisttp
sti
jae
(bad)
add
lods
pop
push
xchg
imul
imul
(bad)
pop
aad
xchg
jg
push
or
sub
inc
adc
aas
cld
enter
stc
jbe
dec
sti
and
bound
iret
push
imul
cmp
fdiv
adc
mov
outs
cmp
cmp
std
cmp
imul
inc
(bad)
mov
xchg
sbb
xor
ficomp
sbb
mov
mov
rcl
es
test
stos
hlt
nop
sub
in
loop
mov
inc
mov
daa
add
dec
mov
jb
mov
mov
sub
jmp
call
mov
loop
mov
or
in
mov
inc
jmp
jb
sub
imul
mov
jecxz
pop
cli
or
and
mov
gs
fisub
test
fld
jl
mov
pop
(bad)
fnsave
sbb
popf
cmc
or
cmp
jns
inc
push
mov
push
ret
das
mov
loopne
adc
cdq
dec
mov
mov
les
aam
xlat
jo
pop
cmp
xor
out
das
enter
cmp
(bad)
in
fsubr
enter
jmp
nop
adc
js
push
(bad)
rol
outs
sub
mov
add
stos
out
push
fisubr
pop
jmp
bound
dec
test
inc
jge
call
js
loope
adc
loope
sbb
(bad)
cli
push
cmp
jmp
fidivr
push
fadd
dec
enter
xchg
pop
jle
daa
outs
test
scas
cmp
pop
aas
jbe
imul
dec
fadd
add
push
mov
cmc
aad
stc
adc
pop
outs
(bad)
adc
not
inc
xor
cmc
lods
sub
aaa
retf
fldenv
jne
fstp
pushf
pop
dec
(bad)
or
iret
out
pop
div
adc
sub
inc
test
mov
push
mov
xchg
push
or
stos
push
inc
push
xchg
or
scas
inc
scas
add
inc
fsub
sbb
or
jno
in
adc
cmps
fcomi
fldenv
push
adc
icebp
cwde
mov
outs
adc
fld
sbb
jb
inc
and
sbb
inc
cmp
es
adc
mov
and
jmp
push
mov
(bad)
neg
xchg
(bad)
cli
inc
push
dec
jg
sub
and
imul
inc
mov
mov
sub
mov
sahf
shr
test
cmps
stc
sbb
xlat
call
jmp
xchg
push
cwde
cmps
sbb
and
xor
in
addr16
jno
cmp
pop
fild
nop
stc
(bad)
inc
mov
cs
ins
inc
pop
pushf
idiv
pop
xchg
mov
mov
push
fwait
cmc
dec
addr16
or
iret
call
push
aam
dec
xchg
lods
xor
out
icebp
jg
ret
cmp
mov
fmul
add
lea
ins
and
push
fcom
sbb
dec
push
dec
push
es
fcomp
cmp
retf
and
in
xchg
icebp
mov
js
pop
mov
xlat
jne
add
mov
sbb
push
sub
cmps
stos
shr
(bad)
inc
or
cmp
je
outs
or
jae
bound
repz
sahf
or
je
imul
push
jp
mul
jge
add
cli
and
repnz
in
mov
push
xor
ins
xchg
fisubr
lock
and
iret
inc
ja
push
jmp
cmp
(bad)
sti
or
movs
mov
bound
sar
xchg
movs
jl
jmp
fstp
inc
and
cwde
or
adc
pop
jbe
aaa
cwde
or
cmp
inc
inc
iret
imul
push
inc
ins
sbb
shl
jns
inc
mov
pop
jae
gs
push
jo
mov
push
sti
jno
test
inc
aaa
aad
sbb
mov
rcl
shl
mov
ret
mov
or
sub
test
fisub
sub
lahf
push
aad
(bad)
cs
or
lock
in
pop
adc
dec
pop
(bad)
data16
shl
leave
popf
retf
jl
in
loope
inc
inc
mov
stos
cmp
repnz
jns
aam
in
xor
shl
mov
fisubr
pop
nop
mov
ins
and
outs
jge
call
dec
fdivr
dec
pop
adc
push
ret
pop
xchg
push
arpl
out
and
daa
test
cmp
cmove
pusha
push
hlt
movs
inc
mov
in
push
lds
pop
push
sub
lds
jno
cmc
hlt
mov
xchg
mov
outs
ins
and
lds
call
gs
retf
inc
add
repz
leave
mov
jmp
(bad)
aas
sbb
sub
xchg
bound
add
xchg
xchg
and
rol
test
cmp
nop
cmps
or
push
(bad)
movs
daa
retf
lods
add
inc
push
jmp
push
int3
mov
(bad)
lahf
(bad)
xor
xchg
aaa
xor
shl
xchg
sub
rcr
scas
ins
in
test
add
and
pop
ret
xor
inc
sbb
pop
hlt
jne
xor
ins
(bad)
fcomp
call
(bad)
mov
mov
test
push
sub
add
test
push
mov
std
jmp
popa
retf
pop
adc
jp
in
mov
mov
dec
mov
not
hlt
sbb
fisubr
imul
cmp
sbb
hlt
xchg
pop
adc
popf
sbb
sub
ja
shl
in
imul
loop
jecxz
das
ins
pop
push
mov
and
lds
imul
cmps
sbb
inc
aas
mov
mov
ins
sub
sub
or
sbb
push
push
mov
adc
retf
test
jmp
mov
je
shl
push
std
push
std
xor
cmp
std
icebp
(bad)
rcr
dec
jo
mov
test
sub
pop
sub
iret
mov
les
aas
xor
out
adc
popa
or
cmp
lea
xor
neg
inc
add
test
cdq
mov
loop
mov
xor
pushf
lds
jb
stos
out
lods
sub
or
fstp
cdq
movs
scas
inc
jge
mov
cmp
mov
and
rcr
or
dec
fcmove
mov
cmp
in
fadd
(bad)
in
(bad)
push
retf
mov
out
adc
icebp
or
and
lock
js
adc
cmps
out
jae
mov
mov
rcl
std
xchg
je
loope
outs
inc
push
enter
fidiv
movs
adc
adc
test
ins
out
ret
lahf
mov
pop
push
sub
pop
inc
push
cs
inc
gs
and
out
cmp
or
jmp
jp
aad
adc
dec
popf
mov
xor
jmp
popf
sub
cmp
movs
inc
cmps
inc
mov
jmp
add
adc
je
xor
idiv
xchg
scas
outs
scas
movs
fstp
scas
scas
mov
enter
ret
adc
sbb
and
les
enter
add
adc
jl
sbb
jmp
lods
movs
iret
repnz
into
hlt
stos
dec
sbb
movs
sub
je
mov
mov
popa
dec
leave
sub
js
sub
jae
mov
or
dec
pop
sub
sub
sub
mov
arpl
mov
mov
xor
je
cdq
frstor
xchg
cmp
ud1
cld
(bad)
in
and
push
fcmovnu
(bad)
push
add
ret
lods
fmul
push
cmp
mov
mov
jo
xlat
imul
add
das
bound
and
pop
mov
arpl
lock
push
(bad)
and
pushf
xor
stc
out
dec
mov
bound
jns
fadd
xor
mov
sub
push
lds
mov
fcom
cmp
push
cld
out
jb
pop
fistp
nop
adc
inc
aad
adc
dec
cmps
rcr
inc
mov
push
adc
jmp
adc
cmp
jns
adc
nop
ss
cmp
cs
jle
cmp
xchg
test
add
sbb
jae
dec
mov
mov
and
mov
pop
sbb
xchg
push
sbb
bound
dec
in
and
adc
jecxz
movs
pop
int3
call
jns
mov
inc
jbe
inc
jb
mov
aas
adc
xchg
mov
imul
push
dec
imul
mov
cdq
pop
cmps
add
fimul
pop
inc
mov
fsubr
neg
dec
mov
gs
pop
cmp
repz
imul
call
inc
pop
retf
sub
cmp
and
and
mov
or
sub
aad
sbb
(bad)
stc
inc
mov
aas
and
shr
inc
(bad)
ins
retf
(bad)
stc
dec
scas
rcr
push
daa
mov
mov
xor
adc
pop
scas
and
mov
jmp
arpl
loopne
ror
fdiv
jg
sub
loop
mov
out
(bad)
jp
xchg
sar
call
into
sbb
xor
sub
fsub
jae
mov
mov
ins
adc
ret
xchg
and
lock
gs
fld
dec
and
sub
sub
xor
cmp
call
push
call
cwde
xchg
shr
jo
inc
movs
and
mov
push
mov
sti
mov
fwait
sub
xchg
dec
cdq
mov
jns
loop
dec
jecxz
sub
pop
in
aam
iret
xchg
fild
jb
mov
mov
(bad)
loope
iret
xchg
aas
push
sbb
(bad)
mov
sub
fcomip
or
sbb
xor
jp
xor
repz
push
add
add
and
ins
scas
and
mov
xchg
pushf
mov
inc
or
mov
jmp
dec
retf
xor
(bad)
pusha
or
inc
pushf
inc
xchg
lods
cmp
sbb
cs
ins
arpl
into
dec
ins
hlt
pop
in
test
hlt
sar
sbb
add
test
movs
adc
sub
je
jmp
fwait
cmp
jg
ds
xchg
mov
fidivr
aaa
adc
lahf
out
cmp
sub
mov
arpl
nop
push
jnp
(bad)
in
(bad)
(bad)
popa
scas
mov
loop
aad
(bad)
inc
fcomp
sbb
inc
pop
mov
jle
ja
pop
sub
jmp
pop
xor
or
cld
neg
push
adc
jns
xlat
push
idiv
stos
xchg
sub
or
and
jmp
aaa
les
push
rol
dec
xchg
aaa
cmp
adc
xchg
xlat
pop
adc
jge
pop
push
mov
jns
adc
pusha
sti
pop
(bad)
sub
or
xchg
in
inc
scas
shl
cwde
test
add
dec
es
and
cmp
and
aaa
bound
mov
fisttp
push
jg
xchg
nop
and
sbb
imul
xchg
push
mov
dec
ja
inc
sub
call
pop
dec
jno
mov
and
xchg
push
adc
gs
fiadd
cmp
pop
call
pop
fisub
fcmovb
adc
in
les
xchg
jns
or
cmp
lds
sub
mov
push
inc
cmps
ins
out
dec
inc
xor
xchg
ins
push
test
mov
pop
dec
dec
enter
pop
outs
das
mov
push
out
xchg
cmps
ds
dec
dec
mov
(bad)
pop
mov
test
mov
dec
add
popf
mov
inc
fs
scas
push
pop
enter
test
xchg
add
fcomi
test
ds
push
pop
test
cmp
out
mov
test
adc
test
and
movs
adc
xchg
pushf
movs
popf
or
pop
or
mov
push
bound
fsub
mov
ror
ret
mov
dec
push
mov
je
retf
inc
(bad)
int
pop
add
inc
fidivr
sbb
cmc
mov
xor
cmc
xor
call
leave
stc
push
dec
mov
mov
mov
sub
mov
fimul
pop
and
stos
jno
sub
mov
test
mov
ss
pop
xchg
cmp
xor
pop
add
jns
daa
ss
cdq
aam
sbb
mov
outs
in
test
and
shl
lods
and
add
dec
or
pop
jg
inc
ss
stc
xchg
ds
mov
sbb
retf
sbb
jmp
cmp
or
cmp
pop
cmp
pop
xor
ret
add
mov
imul
mov
data16
cld
sbb
cld
into
aam
sbb
xchg
scas
bound
sbb
push
mov
repnz
jecxz
rol
xor
test
and
sub
cdq
ret
ret
fwait
cli
and
push
push
out
in
popf
out
inc
inc
(bad)
jge
xor
mov
push
push
mov
jle
mov
mov
jbe
in
movs
addr16
mov
sub
cli
or
fadd
mov
pop
adc
cmps
cmp
adc
mov
cld
or
push
jae
xchg
and
or
ja
xor
sub
xor
push
mov
stos
jns
dec
ja
add
cwde
es
push
dec
nop
sub
pop
cld
data16
(bad)
and
repz
outs
movs
loope
test
out
pop
jns
sar
aam
lods
mov
push
stc
mov
mov
out
adc
mov
sti
cld
cmp
dec
aaa
pop
dec
int3
jb
inc
and
dec
outs
ficomp
adc
jnp
jbe
imul
push
idiv
stos
sar
push
lods
out
xchg
aas
push
add
stc
in
addr16
and
xor
test
mov
icebp
shr
test
ja
(bad)
int3
cld
push
call
lds
sub
out
int
push
cmp
inc
pushf
dec
into
cmp
repz
add
jns
wrmsr
xchg
pop
test
mov
das
lods
lea
ins
sub
lods
(bad)
fisttp
mov
push
rcl
push
and
xor
(bad)
push
xchg
cwde
mov
add
shr
mov
inc
cld
ins
into
jb
cmps
cmp
cmp
imul
mov
in
(bad)
or
int
mov
jns
fist
std
adc
icebp
cmps
sbb
xchg
retf
test
sbb
movs
dec
push
es
mov
shr
ss
fcomp
pop
adc
cs
dec
push
sbb
and
enter
pop
in
(bad)
bound
call
ficom
adc
repz
jae
int3
shl
push
pop
sub
jle
mov
call
mov
pop
jns
ror
(bad)
cli
jo
cmp
cmp
xchg
inc
sar
mov
mov
call
fmul
inc
mov
(bad)
inc
leave
adc
mov
pop
retf
or
cmp
add
pop
cmps
xlat
sbb
call
add
out
xor
loopne
data16
lds
dec
icebp
sahf
pop
pop
call
jb
(bad)
and
dec
xchg
outs
dec
shl
call
mov
cwde
and
xor
jns
pop
jmp
cs
push
fisubr
adc
and
repz
xchg
cmp
int3
ins
jmp
mov
popa
jle
jl
(bad)
sbb
mov
xchg
add
cmp
repz
enter
push
(bad)
retf
xchg
test
clc
xor
in
fild
daa
xchg
ds
stc
cmp
int
aam
test
or
(bad)
sbb
test
daa
mov
aas
cmp
ss
mov
push
xor
ret
scas
cmp
fs
cmc
or
mov
cmps
add
popa
nop
stos
mov
inc
inc
mov
cmp
sti
dec
push
lahf
gs
cs
fcmove
mov
fld
inc
jge
mov
mov
push
mov
aas
add
es
dec
or
shr
jb
pop
jp
mov
sar
pop
inc
jmp
jnp
dec
pop
jl
pop
sbb
adc
dec
movs
(bad)
mov
ds
xor
jmp
(bad)
cmc
and
das
mov
push
push
add
fild
out
loop
cmps
mov
xchg
cmps
rcr
pop
dec
jns
sub
fcomp
xor
lds
mov
jbe
cmp
inc
inc
jns
xchg
cli
mov
ss
jnp
sbb
not
jmp
xchg
add
shl
cs
pop
cmps
jmp
rcr
dec
sub
adc
dec
cli
test
add
call
sahf
call
pop
retf
adc
jg
jno
call
lods
lahf
jl
leave
mov
push
imul
jbe
addr16
jge
or
dec
sti
out
or
pop
imul
je
push
inc
test
std
daa
jmp
clts
push
mov
ds
lea
les
sbb
and
sti
mov
stc
or
mov
mov
les
pop
fild
add
dec
cld
out
stc
jb
call
dec
or
inc
sti
sub
jle
js
in
mov
mov
inc
adc
cwde
out
jno
sub
loop
rol
xor
in
mov
mov
jno
sub
push
int
cmp
add
xor
dec
mov
rol
mov
les
xchg
mov
jg
ins
or
fistp
arpl
push
(bad)
aad
adc
aam
out
les
(bad)
out
fdivp
push
pop
mov
push
mov
xchg
xchg
std
test
mov
aad
pop
xchg
push
stos
sbb
arpl
cmp
out
ins
xchg
ins
scas
jecxz
push
ret
jp
mov
push
adc
fmulp
or
pop
(bad)
pushf
cmps
dec
jae
ror
pop
xor
imul
into
out
popa
cmc
daa
(bad)
out
jge
out
push
lods
and
pop
(bad)
into
dec
xor
dec
fnstcw
sbb
es
inc
jmp
jb
iret
or
and
push
jno
xor
mov
dec
push
push
stos
pusha
jp
fidivr
pop
les
clc
mov
push
jb
retf
mov
xchg
ds
adc
bound
(bad)
mov
cmps
call
std
retf
jecxz
xchg
and
jbe
cmps
(bad)
jl
ds
mov
repnz
lods
xor
adc
addr16
jns
sbb
push
pop
stc
aas
jae
mov
sbb
cmp
lods
out
inc
pop
es
xor
mov
loopne
arpl
adc
push
sub
pop
(bad)
inc
call
test
popf
push
loop
and
call
lock
fdiv
aam
mov
and
int
inc
(bad)
and
ss
sub
retf
mov
movs
mov
cmp
cld
mov
fidiv
mov
fcmovnb
daa
or
stc
jb
push
xor
mov
pop
jmp
xchg
push
in
inc
int3
mov
(bad)
(bad)
(bad)
mov
xchg
mov
and
mov
es
cmp
stc
cli
sub
frstor
cmp
mov
and
push
adc
ficomp
or
cmp
ins
fmulp
int3
add
test
pop
mov
cmp
xchg
fld
push
xchg
call
cmp
add
mov
movs
ins
xor
fimul
dec
xchg
lods
add
inc
scas
or
xor
(bad)
adc
(bad)
xor
inc
das
push
xchg
cmp
add
test
in
popf
movs
out
lods
push
or
std
shr
dec
movs
cmp
je
ret
push
data16
(bad)
ja
addr16
cwde
test
(bad)
aam
push
xor
mov
js
add
and
ret
(bad)
std
cli
je
add
test
push
inc
and
push
jae
outs
mov
and
popf
pop
mov
push
cmp
iret
rol
hlt
xchg
mov
sub
int
frstpm(287
test
inc
mov
mov
lahf
mov
adc
jmp
jle
not
cmp
adc
gs
dec
or
pop
fcmovnbe
pop
dec
adc
adc
nop
jo
inc
lea
mov
test
mov
sahf
out
mov
pop
ins
jbe
lahf
ja
(bad)
ds
xchg
repz
scas
and
mov
inc
inc
xor
arpl
sub
sbb
cmp
cmp
leave
dec
ja
stos
xor
repz
out
out
ins
jnp
xchg
loope
iret
xor
data16
ret
call
sbb
stc
je
ficom
in
ins
jae
sub
fmul
pop
sub
inc
in
sbb
cmp
jecxz
mov
les
add
mov
movs
cmp
jmp
inc
test
ins
add
push
lahf
cli
mov
scas
push
fxch
cmp
jge
in
mov
cwde
inc
sub
and
cmp
cdq
or
mov
fwait
lods
icebp
div
test
(bad)
fst
aad
mov
retf
push
mov
mov
pop
mov
fisub
inc
cmp
jo
les
retf
aaa
add
repz
int3
mov
pop
push
or
icebp
mov
gs
scas
lods
gs
mov
pop
or
mov
call
adc
jno
(bad)
push
cs
ins
dec
mov
ret
xchg
xchg
mov
inc
sahf
iret
repnz
xchg
adc
enter
add
cmp
push
push
dec
sbb
mov
shl
sub
loopne
and
xchg
shl
xchg
jmp
sbb
call
mov
push
dec
add
jmp
fild
cmc
rcr
cmp
js
mov
fistp
movs
mov
adc
(bad)
ror
imul
sti
add
imul
and
push
xchg
cdq
push
jnp
dec
jae
sbb
scas
adc
pop
das
imul
mov
mov
pop
retf
mov
xor
jg
std
push
inc
out
push
sahf
jmp
push
popa
push
push
and
jb
cmp
mov
outs
movs
push
inc
sahf
sar
shl
push
ja
mov
(bad)
mov
add
dec
aaa
dec
sub
sti
test
addr16
nop
xchg
lea
mov
sahf
cmp
cmp
call
std
push
add
in
sub
push
cmc
stc
rol
adc
dec
aaa
adc
xchg
int
pop
pop
jp
inc
in
mov
inc
sahf
mov
mov
(bad)
dec
retf
test
jbe
popa
pop
inc
jp
dec
fcmovb
jmp
pop
mov
mov
(bad)
mov
sbb
cld
test
cli
leave
imul
outs
mov
inc
imul
pop
pop
or
mov
mov
cmp
das
mov
mov
cmp
cmp
xchg
inc
arpl
lds
les
dec
or
out
leave
mov
mov
add
cmp
loope
add
adc
mov
jp
out
enter
out
aas
ror
xchg
cli
ja
pop
mov
(bad)
dec
jnp
cmp
shl
fst
nop
cmp
mov
shr
jmp
sbb
xchg
je
inc
mov
(bad)
xchg
inc
mov
inc
fcmove
push
int3
cmc
jne
dec
push
sbb
popf
sbb
fisub
nop
frstor
sbb
popa
add
add
loop
pop
jg
jle
shl
enter
imul
mov
mov
lods
scas
adc
lods
fs
fs
fiadd
clc
mov
dec
adc
ins
xor
mov
cdq
inc
cs
dec
push
sbb
cwde
(bad)
xchg
jle
leave
ror
dec
cli
dec
pop
and
pusha
mov
mov
dec
mov
dec
or
(bad)
cmp
pop
sbb
icebp
xor
loope
fidiv
dec
sbb
fisubr
test
mov
pop
add
inc
cli
sbb
add
mov
push
test
lods
pop
xor
outs
mov
mov
cmp
xor
cvtps2pd
jp
jo
scas
or
mov
dec
inc
push
stc
stc
and
and
dec
lods
(bad)
sbb
out
add
nop
push
test
mov
and
or
sar
mov
xchg
jb
movs
nop
mov
sar
push
mov
add
fadd
popf
cld
xchg
sbb
sub
pop
stos
xlat
movs
or
jecxz
add
mov
sar
cdq
pop
int
mov
push
or
mov
push
(bad)
mov
add
outs
shr
nop
adc
call
pop
(bad)
and
cmp
fld
cmps
lds
adc
jae
mov
xchg
dec
add
xor
es
jg
pop
lods
pop
loop
stc
mov
das
jno
pop
xor
jbe
add
(bad)
jmp
sbb
pushf
lods
mov
sbb
inc
jmp
adc
push
popf
ffreep
lea
dec
out
scas
mov
aam
mov
jne
add
popa
paddusw
sbb
pop
aas
leave
addr16
fwait
test
popf
xor
mov
dec
repnz
bound
push
fwait
jno
cmp
imul
dec
daa
daa
je
sbb
mov
iret
push
mov
and
mov
or
mov
add
jg
adc
jge
adc
pop
int
xchg
int
(bad)
sub
aam
jns
push
rep
test
jp
inc
enter
lahf
push
pop
sbb
add
loope
(bad)
(bad)
cmpxchg8b
mov
js
and
jmp
ss
ja
pop
cmp
js
test
test
retf
pusha
adc
xchg
mov
push
push
push
or
dec
mov
jbe
retf
test
mov
sbb
jne
inc
mov
out
(bad)
das
inc
mov
adc
or
int3
fwait
pusha
(bad)
bound
adc
cmp
ret
xchg
test
mov
push
loope
add
push
and
(bad)
es
adc
adc
pop
xchg
mov
aas
in
mov
xlat
in
pop
cli
dec
push
mov
test
out
call
cmp
adc
dec
in
mov
or
mov
sbb
adc
sub
imul
sbb
push
es
adc
scas
mov
jno
cmc
xlat
rol
cmp
add
jnp
cmp
xchg
cmp
sti
retf
pushf
arpl
mov
mov
and
call
or
das
fidiv
xor
pushf
shl
mov
xchg
jmp
jno
dec
mov
in
in
pop
push
sti
or
mov
je
push
sbb
daa
xchg
dec
xchg
inc
dec
test
js
push
sbb
lods
jge
fstp
stc
mov
sahf
and
fdiv
sbb
inc
push
cs
add
inc
icebp
pop
mov
cwde
sub
cmps
popf
inc
cmp
mov
add
jno
sbb
sbb
jb
pop
and
mov
call
mov
sti
es
pop
mov
or
fs
pop
test
inc
ret
xchg
jmp
xor
push
fsubr
jle
int
icebp
push
mov
jnp
sbb
enter
push
xchg
je
push
dec
(bad)
dec
push
fnstcw
mov
jle
dec
adc
loop
lds
ins
add
int3
leave
das
push
pop
iret
adc
pop
rol
mov
repnz
inc
mov
adc
dec
imul
push
aam
sbb
mov
jge
in
dec
iret
adc
cwde
add
jo
daa
cmp
sub
pop
xor
int
mov
int
out
push
in
mov
ret
pop
dec
sub
lahf
es
(bad)
cmps
retf
adc
add
jne
mov
mov
dec
push
lods
mov
mov
jns
mov
cwde
inc
cwde
(bad)
push
call
xchg
cmp
daa
jmp
scas
sbb
adc
xor
rol
mov
mov
dec
not
lds
fmul
cli
mov
xchg
inc
mov
iret
pop
xor
call
sub
sub
icebp
xchg
sub
stc
(bad)
les
int3
pop
inc
stc
pop
loope
lock
add
out
mov
adc
pop
xor
pusha
(bad)
fwait
mov
into
inc
int3
sub
clc
sbb
xor
xchg
std
fnstcw
int
adc
fidivr
in
pop
lea
lods
inc
pop
imul
sbb
(bad)
stos
jp
lahf
fiadd
fist
pop
cmovo
je
cmps
into
add
xchg
pop
out
not
scas
ret
mov
cmps
pop
shl
stos
jbe
ja
in
popa
push
hlt
(bad)
pop
push
xor
adc
cmps
fsubr
pop
aas
add
adc
adc
enter
xchg
call
push
dec
scas
int
fild
movs
cdq
(bad)
and
dec
jle
cmp
sub
ret
sbb
ja
ins
aad
loopne
jle
lahf
push
shr
call
rcl
pop
cmps
dec
fxch
sub
pop
mov
mov
adc
lahf
jne
push
push
scas
add
mov
push
jb
inc
inc
inc
jmp
sub
(bad)
fwait
mov
cs
in
xchg
xchg
inc
bswap
stos
add
jle
test
inc
sbb
(bad)
cli
mov
mov
je
pextrw
jo
dec
out
add
nop
gs
fisubr
out
and
jns
adc
and
popf
or
sbb
push
gs
in
xchg
fisubr
ret
mov
ret
dec
je
or
jmp
push
int
cmp
rcr
test
mov
xor
je
push
push
test
jbe
xor
xchg
movs
mov
cdq
xchg
mov
lock
add
xor
cmp
cmps
cmp
mov
das
cmc
and
cdq
add
daa
daa
mov
xchg
pop
mov
pop
xchg
jns
adc
mov
repz
mov
(bad)
pop
mov
lock
dec
fsubr
lods
daa
cmps
pop
sahf
sub
sbb
xlat
adc
loop
cmc
iret
out
jno
sub
call
sbb
cmp
jae
sar
pop
adc
inc
les
xlat
jne
retf
xchg
cmps
rol
fstp
sub
popa
mov
cmp
inc
dec
sbb
pop
dec
sub
xchg
jmp
dec
scas
enter
cmps
fbld
adc
outs
mov
mov
sub
iret
mov
dec
jmp
and
inc
test
lock
movs
pop
xlat
cli
adc
ja
cld
mov
retf
or
scas
in
pop
imul
and
pop
dec
add
xlat
cli
add
ret
adc
xchg
sbb
mov
adc
retf
inc
push
mov
push
stos
pop
inc
sahf
xor
lds
outs
rcl
hlt
ret
add
push
fabs
xchg
or
std
sbb
cmp
pop
addr16
mov
xchg
push
mov
movs
cmp
and
div
stos
sub
sbb
inc
lods
(bad)
fdiv
test
mov
stos
cs
mov
loopne
pusha
in
arpl
rcl
repz
arpl
push
sar
sahf
in
cmp
inc
cmp
inc
pop
fist
inc
test
sub
push
sbb
dec
add
cmp
(bad)
cld
jecxz
addr16
call
addr16
xchg
push
aaa
adc
sub
and
pop
fistp
jns
jmp
jo
popa
jae
dec
sub
pop
and
dec
fcom
inc
xor
ja
xchg
jb
sbb
dec
retf
xor
adc
sbb
pop
mov
test
sub
adc
xor
movs
jbe
mov
clc
or
(bad)
xor
(bad)
jmp
arpl
into
repz
add
push
xchg
pop
push
pop
(bad)
pslld
loop
pop
push
enter
inc
fcomip
adc
shl
and
push
push
shl
pop
mov
jno
dec
loopne
mov
int
mov
lods
mov
jo
ror
(bad)
out
cmps
inc
(bad)
sbb
in
pop
mov
std
cmp
mov
aad
imul
pop
add
xchg
dec
jo
cmp
mov
push
jbe
or
cmp
mov
mov
in
pop
(bad)
mov
cmps
push
neg
pusha
or
imul
enter
stc
push
mov
dec
xor
out
jb
sub
cmp
adc
fcomp
sahf
pop
mov
cmp
jo
test
lea
int
pop
sub
int
fldcw
push
or
xchg
js
cmp
push
data16
dec
add
out
scas
dec
sub
aad
xchg
xor
and
pop
movs
ror
dec
cmp
adc
sub
mov
sbb
jle
jle
nop
retf
clc
scas
loope
mov
(bad)
xchg
mov
(bad)
push
dec
out
retf
enter
js
push
fist
pusha
je
xchg
repnz
sar
push
fmul
xchg
daa
clc
fild
(bad)
push
addr16
out
pop
dec
lea
loope
mov
pop
jns
fdiv
pop
scas
xlat
or
sub
pop
inc
dec
cmps
loop
jo
lods
and
pop
mov
cmp
jns
sub
aaa
cdq
enter
mov
(bad)
call
sub
pusha
and
int
imul
jl
cmp
inc
mov
add
xor
test
sbb
mov
int
xchg
fiadd
in
mov
jno
shr
push
iret
shr
cwde
jge
rcr
in
fisub
leave
lea
popf
fdivr
mov
mov
add
and
xor
(bad)
(bad)
out
fadd
in
mov
push
frstor
sti
sbb
xchg
aam
arpl
cmp
add
iret
shl
out
pop
fsubr
sbb
mov
retf
push
fwait
lods
mov
(bad)
jae
test
in
mov
rcr
inc
and
test
fdiv
in
mov
fmul
mov
rcr
mov
ror
out
in
movs
push
and
imul
shr
in
outs
push
stos
ret
push
fcomp
mov
aas
int
ja
push
pop
mov
push
lock
inc
jo
daa
mov
repnz
mov
dec
fwait
test
rol
dec
je
or
add
or
mov
inc
ficomp
in
int3
cmp
ret
loope
mov
pop
push
popa
shl
xchg
shl
rcl
leave
mov
mov
inc
push
test
je
cmp
clc
in
les
and
fdiv
dec
mov
push
jp
or
data16
cwde
and
mov
es
add
xchg
jo
inc
lea
and
movs
xor
in
inc
sub
jnp
adc
adc
sbb
repnz
(bad)
cwde
loope
cli
test
push
pop
daa
imul
inc
cwde
into
cmp
into
cmp
add
test
sub
sbb
mov
push
out
jb
jmp
stos
ror
dec
lods
js
xor
add
aam
loopne
sub
xor
inc
pop
std
std
mov
ins
ins
jns
pop
loopne
sub
pop
push
jne
nop
push
popa
dec
ins
(bad)
mov
sub
push
sbb
sbb
dec
inc
xchg
rcr
loop
and
imul
mov
cli
fld
cmp
or
cli
pop
xchg
in
and
popa
cmp
mov
mov
or
popf
retf
sub
cmp
shr
mov
imul
sub
pop
add
sub
jg
(bad)
cmp
jp
jbe
inc
jle
cmc
and
adc
int3
pop
dec
imul
ins
and
arpl
repnz
cmp
dec
(bad)
ror
(bad)
lods
gs
iret
jno
cs
xchg
fwait
(bad)
and
xor
cmp
repz
jp
xchg
repnz
pop
jge
(bad)
outs
jg
(bad)
iret
cmp
call
and
mov
outs
mov
mov
cli
push
and
int
xchg
mov
mov
je
or
dec
sbb
pop
push
inc
mov
sbb
test
loope
test
pop
add
pop
fsub
xchg
pop
je
(bad)
iret
repnz
stc
mov
xchg
fstp
add
test
sub
mov
xor
push
(bad)
retf
int
dec
jg
dec
or
jmp
das
xchg
push
loopne
pop
xor
xor
mov
adc
jge
in
sub
retf
mov
neg
sub
(bad)
jp
adc
mov
fwait
dec
dec
out
add
push
outs
inc
nop
test
rcl
test
mov
push
mov
das
in
addr16
retf
jnp
jnp
sub
xchg
push
pop
cmp
mov
or
pop
fistp
ss
cmp
jle
out
and
sub
inc
mov
(bad)
in
cmp
fisub
mov
cmps
adc
imul
mov
(bad)
mov
mov
mov
(bad)
and
jmp
push
mov
(bad)
js
cdq
fcom
adc
sbb
add
inc
arpl
cmp
or
out
lods
mov
or
mov
pop
dec
fucom
xor
xor
cmp
call
addr16
repnz
sbb
xchg
xor
and
sub
aad
cmp
push
xor
push
int3
push
das
inc
add
pop
movs
sti
sbb
aam
cdq
mov
cwde
hlt
inc
not
inc
inc
sub
out
fnstenv
adc
(bad)
dec
xor
cli
cmp
(bad)
popa
out
adc
cmp
gs
sbb
scas
dec
iret
or
les
iret
out
pop
cmp
xor
adc
mov
ins
xchg
jecxz
lahf
inc
jl
ins
stos
jo
pop
addr16
ret
xor
mov
mov
call
xchg
cmp
fadd
or
sbb
sbb
xor
cmps
jle
pop
and
mov
xor
movs
not
das
mov
sub
in
and
pop
lods
ins
xchg
push
mov
xchg
ror
jmp
jle
dec
pop
cmps
pop
mov
inc
sbb
aad
pop
sti
das
dec
mov
mov
jnp
or
jbe
push
xchg
ret
jnp
mov
dec
add
push
xchg
loopne
data16
xchg
or
imul
nop
push
in
in
mov
call
xor
xor
in
ror
and
jmp
jl
lods
(bad)
mov
or
loope
xor
ins
jmp
or
jnp
xlat
test
sahf
push
retf
mov
xor
add
ds
test
test
jp
call
or
jbe
sbb
inc
outs
mov
aaa
cmp
push
imul
inc
(bad)
stos
stc
mov
std
(bad)
sbb
movs
cli
sbb
shr
inc
adc
jmp
dec
std
xor
int3
mov
ins
fistp
pop
inc
xor
psrlw
sub
mov
rcl
push
out
sti
fcomp
push
(bad)
or
pop
mov
fcom
jne
mov
in
je
icebp
loopne
push
push
out
sub
xchg
sbb
mov
and
add
aam
(bad)
cmp
icebp
jbe
(bad)
inc
std
bound
arpl
mov
and
cmps
pop
repz
pop
fs
loopne
mov
xor
(bad)
lds
ins
shl
xchg
push
nop
inc
sub
push
jmp
mov
in
and
sar
sbb
mov
loope
inc
pop
cwde
cmps
add
adc
test
add
push
repnz
test
pop
add
lods
push
xchg
push
dec
mov
mov
retf
outs
in
push
fdivr
push
mov
xchg
mov
aam
stos
daa
pop
outs
push
or
clc
inc
sbb
outs
push
jmp
push
fptan
push
mov
xlat
shr
das
pop
retf
cmp
enter
push
sti
cmps
add
push
(bad)
fwait
jb
push
hlt
popf
ret
or
xchg
xlat
push
lods
jle
xor
or
pop
xchg
pusha
push
bsr
jg
cmp
nop
pop
dec
sub
mov
add
pop
daa
shr
test
mov
test
push
retw
adc
fldenv
add
jbe
cmc
xchg
imul
iret
int
lea
movs
repnz
retf
hlt
cmps
mov
(bad)
dec
(bad)
dec
call
scas
fldcw
push
loope
gs
mov
fstp
or
cdq
les
movs
mov
push
adc
jnp
test
cmp
jne
daa
xchg
imul
mov
hlt
cli
es
sti
jmp
clc
push
jb
and
dec
imul
fst
fidiv
scas
adc
pop
inc
das
repz
retf
push
and
(bad)
pusha
mov
inc
push
mov
xor
jo
sub
addr16
out
enter
jle
push
pop
push
mov
int
push
dec
stc
gs
adc
or
mov
pop
outs
rcl
ja
nop
test
(bad)
cmps
call
imul
scas
in
rcl
fadd
xchg
mov
cmp
pop
push
mov
ja
xchg
in
leave
fcom
or
add
sub
arpl
xor
imul
dec
xor
rol
sbb
fmul
xor
inc
(bad)
or
xchg
cmp
fnstcw
push
or
shr
enter
shl
(bad)
xor
(bad)
shl
ror
mov
jle
add
ror
or
leave
cmp
jge
dec
dec
lock
(bad)
push
jecxz
cwde
xor
out
lock
or
jo
test
pop
add
or
and
and
mov
push
push
pop
das
cmp
jle
add
mov
inc
(bad)
(bad)
lea
push
mov
mov
or
and
imul
(bad)
jb
test
mov
shr
mov
xor
cmp
inc
cmp
test
lods
dec
lods
jmp
imul
scas
jp
les
sub
lods
cmp
inc
dec
jo
push
loope
repnz
(bad)
push
sub
nop
lock
adc
fstp
out
aaa
mov
stos
push
sbb
jne
pushf
aas
call
jae
cmp
xor
es
push
repnz
inc
lahf
mov
iret
cmp
cmp
xchg
int
sti
adc
in
test
dec
into
aas
sahf
mov
sub
cli
ins
fmul
repnz
and
mov
inc
fdivr
and
outs
adc
and
enter
pop
jmp
je
push
pop
(bad)
adc
pop
mov
movs
icebp
ret
daa
push
dec
adc
call
les
mov
in
addr16
idiv
fwait
push
sbb
or
call
sub
lock
shl
mov
rol
or
pop
cmp
push
mov
inc
arpl
jl
loop
dec
rol
cwde
ins
jmp
sbb
pop
sti
cmp
test
jnp
jne
or
mov
ret
div
aam
cmc
imul
jge
pushf
in
retf
adc
js
sti
cmp
popf
push
and
push
iret
push
dec
hlt
sar
push
jge
or
fild
adc
imul
sub
mov
pushf
push
ror
or
js
ror
test
pop
icebp
sub
jns
cmp
pop
sbb
sbb
mov
and
out
xchg
mov
pop
sahf
sahf
or
mov
jge
loopne
mov
daa
mov
data16
bound
ja
add
(bad)
in
inc
or
cli
add
aam
daa
js
int
jns
ins
repz
or
or
fs
sub
fs
xor
in
dec
icebp
or
fst
call
inc
movs
call
add
lahf
and
push
in
leave
sub
push
inc
mov
ror
mov
mov
adc
jnp
les
pop
push
daa
and
inc
sbb
or
js
sub
jecxz
xchg
push
pop
xor
cmp
lahf
jns
sub
cwde
add
rcr
fst
cdq
je
shr
push
scas
popf
xor
sub
mov
adc
mov
mov
fwait
or
xchg
mov
sbb
inc
das
push
pop
sbb
cs
inc
loop
xor
in
sub
cld
adc
sbb
lds
mov
inc
pop
dec
pop
inc
mov
mov
cs
dec
mov
adc
pop
dec
out
mov
cwde
mov
hlt
inc
pushf
sti
jecxz
out
push
out
mov
scas
push
or
dec
mov
fimul
dec
sub
mov
inc
push
sbb
cld
gs
ins
add
pop
jae
dec
push
sub
add
jecxz
or
add
fdivr
shl
adc
das
stos
outs
adc
jo
or
jae
xchg
and
sbb
pop
push
or
movs
jo
dec
jge
(bad)
add
scas
(bad)
xlat
daa
fidivr
dec
sar
mov
int3
icebp
push
push
loop
into
repz
push
outs
and
das
pop
call
ja
push
sar
xor
inc
imul
rol
data16
movs
inc
add
neg
and
mov
shl
add
xor
jbe
cld
dec
jbe
std
ins
inc
cdq
add
jecxz
fild
push
cmps
pop
gs
call
mov
bound
cmp
mov
xchg
(bad)
cmp
sti
inc
mov
shl
outs
ja
fnstenv
xchg
add
clc
in
or
stc
test
jecxz
cmps
adc
jle
xchg
and
lods
jle
mov
dec
xchg
sbb
jg
mov
xor
les
cmp
push
ds
jmp
retf
cld
push
pop
push
aam
es
or
mov
pop
pxor
daa
mov
ret
movs
sti
ins
neg
shr
pop
mov
das
in
push
jns
jmp
mov
sbb
sub
and
fwait
sbb
out
iret
ins
(bad)
mov
xor
iret
dec
out
mov
lds
test
xor
or
adc
cmp
xchg
imul
and
stos
mov
into
(bad)
sar
scas
mov
fild
add
mov
jne
or
mov
hlt
sti
js
cmp
add
xor
int
loopne
cwde
push
mov
lahf
mov
mov
stos
scas
jp
mov
add
mov
and
dec
loopne
pop
bound
xchg
sub
mov
sbb
pop
out
stos
jbe
out
xchg
and
imul
pop
fsub
lods
out
mov
sti
rol
adc
or
out
adc
fdiv
mov
or
daa
mov
mov
out
es
xor
push
add
pop
cmp
mov
add
add
hlt
pop
jo
scas
mov
inc
out
sbb
cs
cmps
xchg
and
mov
jp
call
xor
cmp
and
cmps
stc
rol
push
out
arpl
or
dec
push
or
mov
jne
iret
lods
out
jbe
std
inc
lock
cdq
shr
repnz
mov
call
fmul
sar
cmc
bound
outs
and
(bad)
lea
xor
loopne
das
sbb
stos
pop
loop
(bad)
sub
or
xchg
xor
lds
repz
stos
jmp
dec
enter
loop
aam
iret
enter
out
repnz
push
dec
sub
push
aaa
stos
aam
and
xchg
imul
fst
popa
inc
mov
outs
fisubr
and
loopne
sub
xchg
xor
add
fsubr
nop
sbb
shr
pop
stos
outs
cwde
ret
int3
xchg
xchg
jae
out
jbe
and
ins
and
retf
cmps
test
cmp
(bad)
cld
rcr
inc
push
pop
test
repnz
xor
call
jle
imul
dec
sub
add
push
sbb
repz
adc
jno
shl
jecxz
mov
and
and
sub
in
repz
sub
mov
test
(bad)
and
jl
js
inc
rcl
loope
jmp
arpl
stc
mov
push
mov
out
add
neg
sub
jae
aas
outs
pop
jle
mul
or
test
cdq
rol
jns
mov
fist
sbb
push
scas
xchg
gs
ja
fcom
iret
call
jg
and
add
sub
sahf
push
add
es
enter
pop
mov
cmps
xchg
or
xor
jns
(bad)
cmp
sub
mov
int3
mov
mov
cs
mov
push
loope
mov
and
popa
sbb
ror
sbb
cmps
ins
(bad)
push
out
stc
ror
stos
jb
sub
scas
pop
js
sub
hlt
es
pop
das
retf
xchg
xor
outs
fdivr
jmp
test
clc
rcr
nop
pop
rcl
das
xchg
punpckhdq
inc
repz
shl
fbld
xchg
xor
pop
and
push
jmp
sub
repz
push
jbe
pop
scas
mov
mov
push
out
add
dec
cmc
sub
cmp
test
stos
movs
mov
mov
or
popa
pop
lgs
sbb
test
sub
(bad)
jae
sub
inc
pop
jecxz
in
inc
imul
sar
ds
ds
(bad)
push
aas
mov
xlat
mov
test
lds
jb
jmp
(bad)
push
lock
mov
(bad)
add
sub
lods
xlat
test
out
push
test
or
mov
js
pop
and
cmp
(bad)
cs
not
fsub
inc
cmp
jo
ja
inc
imul
in
jecxz
xchg
push
sbb
push
adc
js
push
mov
adc
jge
dec
push
adc
jo
fistp
and
outs
mov
cmp
cmps
xchg
loopne
push
hlt
shl
das
lea
mov
mov
cmp
push
dec
inc
cmp
ret
or
add
pop
shl
pop
sbb
loopne
cmps
out
stos
lods
fild
mov
adc
int
sub
and
test
aam
or
mov
mov
dec
in
mov
xor
mov
aas
mov
lods
test
xor
aas
inc
popa
cwde
out
cmp
(bad)
hlt
and
movs
hlt
jnp
add
fcom
cmp
sub
jmp
cli
and
inc
pop
jl
enter
push
and
xchg
add
dec
adc
inc
out
xor
ja
jmp
inc
jle
pop
inc
cmp
(bad)
jb
mov
add
add
sahf
push
cmp
jmp
inc
mov
jp
out
and
push
sbb
in
cmc
xor
sbb
and
out
dec
add
in
jmp
loope
mov
xchg
cmp
fs
push
mov
push
popf
jmp
aam
sbb
push
adc
hlt
in
scas
fcmovb
dec
fiadd
test
adc
bound
js
and
fs
cld
and
jno
scas
cmp
pop
lds
mov
dec
xor
jmp
push
push
lahf
and
dec
out
adc
fs
loop
adc
sub
mov
out
scas
mov
int3
mov
mov
mov
pushf
inc
je
cmp
stos
push
in
int3
outs
jecxz
call
mov
scas
fnsave
jae
inc
xchg
ds
in
lsl
out
call
enter
fnsave
jmp
and
repz
or
sahf
pop
mov
pop
push
sbb
ret
or
cmp
movs
ror
jg
and
add
sub
jbe
jg
lods
sub
xchg
pop
movs
sti
dec
mov
xor
mov
or
shl
in
ds
call
mov
stos
mov
ficom
add
retf
mov
(bad)
and
cmp
jmp
xadd
addr16
pop
int3
jg
scas
mov
add
mov
in
movs
test
push
cld
inc
cs
push
movs
push
pop
or
dec
lods
pop
lds
pop
sbb
cwde
scas
hlt
ss
sbb
fbstp
adc
mov
cmp
push
(bad)
adc
ja
mov
sub
cmc
push
fisttp
mov
pop
lock
popf
pop
jmp
mul
cs
xchg
ret
aaa
add
cwde
mov
pop
mov
(bad)
cdq
test
dec
fild
xchg
iret
add
mov
mov
xchg
mov
ficomp
ins
push
lahf
(bad)
adc
mov
add
mov
jge
adc
adc
bound
jmp
fs
cli
ret
neg
mov
pop
xchg
sbb
frstor
and
(bad)
push
push
iret
sbb
mov
dec
test
mov
and
and
movs
mov
(bad)
imul
or
std
jno
jo
pop
add
sti
nop
push
ror
cmp
pop
pushf
inc
add
pop
add
pop
fs
jne
xchg
jmp
cdq
xchg
dec
lods
or
and
xchg
enter
or
xchg
es
div
mov
retf
loop
inc
or
mov
hlt
push
xchg
sbb
jmp
add
loopne
in
popa
pop
lods
mov
and
clc
xlat
jmp
ins
daa
push
or
cmp
stos
aaa
ss
mov
mov
mov
jbe
in
ss
inc
loop
xor
sbb
mov
mov
ret
je
aaa
gs
push
adc
adc
(bad)
ins
not
(bad)
loope
ret
das
cmc
mov
add
nop
push
cmps
imul
mov
jmp
fsubp
xchg
and
cmp
fnstenv
or
mov
mov
add
test
pop
mov
xor
fldcw
fidivr
imul
test
mov
movs
or
lock
cmp
outs
push
sbb
and
mov
pop
cli
test
mov
or
push
pop
mov
lds
sbb
jno
aas
out
xor
daa
xchg
inc
push
mov
cmc
and
(bad)
dec
test
div
cdq
mov
push
xor
bound
popf
aad
into
fsubr
int
xor
dec
les
fcom
push
daa
push
sub
mov
scas
int
movs
nop
dec
icebp
out
movs
mov
mov
dec
or
jecxz
mov
push
mov
arpl
add
jo
fbld
add
dec
push
dec
cli
jne
cmp
in
sbb
in
mov
adc
aaa
aas
call
sti
mov
dec
xchg
arpl
ins
enter
push
call
aas
gs
ja
adc
shl
inc
add
ret
test
jbe
adc
cmp
push
das
sub
int3
aad
jg
sbb
mov
cmp
xchg
push
inc
dec
jo
xor
cmp
cdq
inc
sub
add
inc
inc
mov
xlat
cmp
mov
or
rol
pop
mov
in
mov
les
add
fdiv
sti
cmps
pop
adc
retf
(bad)
dec
inc
(bad)
mov
imul
mov
add
xor
mov
pushf
in
push
inc
sti
dec
(bad)
jmp
cs
(bad)
ror
add
adc
xor
into
movs
dec
mov
ret
out
cmp
xchg
int3
gs
xor
loope
push
fcmove
aam
inc
xchg
push
sbb
ror
cmp
sti
ret
mov
or
jmp
test
mov
ret
dec
mov
or
mov
or
daa
nop
jp
dec
test
adc
fs
mov
sahf
or
scas
outs
ror
loopne
scas
xchg
add
lahf
adc
mov
cdq
push
push
push
ss
scas
mov
sub
push
(bad)
retf
ret
jecxz
sub
aam
push
jo
jge
lea
xlat
test
retf
aam
and
mov
pop
jmp
ja
daa
and
xchg
inc
sbb
cmp
inc
add
stos
stc
xchg
xchg
xchg
adc
fsub
sub
mov
xchg
sbb
mov
inc
adc
sbb
dec
sbb
fld
cmp
or
int
sub
cs
mov
inc
mov
inc
ja
test
mov
out
or
scas
lds
stos
test
xchg
daa
out
push
dec
pop
cmp
out
xor
mov
push
in
bswap
mov
cld
push
add
mov
xor
das
jg
fild
ret
xchg
sbb
out
mov
dec
into
add
scas
xchg
xchg
add
call
shr
add
jecxz
and
outs
neg
sbb
and
test
cs
cmps
addr16
jns
stos
lods
mov
xlat
rcl
shl
xchg
mov
jp
xchg
outs
xor
adc
mov
cmp
outs
lods
cmps
jmp
pushf
ins
adc
cmps
movs
ficom
xor
jns
test
aas
rol
mov
stos
cmps
repnz
(bad)
jl
rcl
xor
xchg
and
inc
mov
mov
pop
sti
shl
cld
fiadd
push
push
arpl
sbb
sub
(bad)
out
aas
mov
push
fnstsw
xchg
cmp
(bad)
shl
adc
mov
xchg
mov
jle
cmps
jmp
out
inc
and
adc
pushf
std
pusha
xchg
jecxz
(bad)
fnsave
inc
lea
jne
pop
mov
das
mov
xor
and
bnd
pop
adc
(bad)
(bad)
sahf
and
xchg
dec
mov
adc
(bad)
and
shl
or
repz
dec
xlat
jne
push
pop
pusha
cld
cmp
mov
pop
mov
js
cmp
adc
xchg
jmp
loope
iret
jmp
xor
and
xchg
cdq
std
xchg
addr16
(bad)
std
stos
cmp
push
mov
call
ins
cmp
push
outs
js
js
out
pop
out
stos
pop
add
pop
ret
pop
hlt
pop
test
cdq
dec
ss
cwde
pop
fdivr
dec
test
cmps
loope
fsub
pop
sbb
sbb
retf
sbb
add
loope
ja
xor
or
mov
pop
and
jge
jle
or
or
imul
aas
xor
jne
or
adc
pop
cmps
jp
inc
sub
mov
pop
xor
xchg
repnz
stos
test
retf
ja
fwait
mov
js
inc
mov
in
dec
les
icebp
ret
je
and
xor
stos
and
xlat
and
xchg
or
adc
movs
cmc
or
scas
lods
icebp
adc
push
mov
fwait
add
outs
jge
cmp
xchg
xor
mov
xchg
or
xor
shl
xchg
xor
jno
mov
jnp
or
shl
and
idiv
fs
daa
pop
loop
pop
retf
leave
cmp
hlt
mov
mov
arpl
inc
in
bound
xlat
sbb
push
mov
aaa
test
hlt
imul
rcr
pop
mov
aad
cmp
ret
dec
and
or
push
mov
call
cmp
dec
adc
fs
xor
cs
pop
dec
shl
(bad)
push
xchg
mov
pop
xchg
push
push
sti
or
lods
ret
imul
ror
(bad)
jo
xchg
or
and
lock
mov
aad
mov
stos
jmp
push
inc
push
fstp
(bad)
(bad)
fsubr
jo
push
dec
inc
fst
lea
mov
xchg
int3
jnp
aaa
out
lods
pop
or
(bad)
ins
ins
pop
aad
sub
mov
test
dec
xchg
sahf
arpl
mov
and
test
daa
std
(bad)
(bad)
and
jl
mov
mov
xchg
push
cwde
cmp
imul
inc
int
ffree
stos
data16
call
xchg
xor
bound
out
movs
mov
daa
inc
xor
xchg
cmp
arpl
repnz
cmp
mov
sbb
sbb
cmp
add
mov
push
xchg
aas
ss
xor
in
fisubr
cmp
xchg
mov
jnp
cwde
cmp
in
popf
in
lods
mov
xor
(bad)
pop
adc
jmp
adc
fld
in
test
lock
and
nop
jmp
das
movs
mov
xchg
cmc
jge
es
mov
cmp
shr
cmp
push
mov
and
jge
aaa
cmp
xchg
push
xor
mov
jns
add
cdq
mov
stc
fwait
cmc
xlat
in
rcl
sahf
or
mov
push
dec
inc
outs
xor
loopne
push
sbb
fstp
jle
fisubr
add
retf
cmp
test
mov
and
clc
xor
cmp
xchg
adc
xchg
jo
repnz
stos
xchg
mov
mov
dec
icebp
int
(bad)
xor
adc
jl
push
and
dec
cmp
pop
outs
xor
pop
push
sar
out
ins
inc
pop
pop
push
add
sub
in
fsubr
shl
imul
jp
mov
test
out
movs
lds
loop
(bad)
mov
mov
mov
pop
cmps
ds
xor
call
or
pop
test
out
pop
and
mov
xchg
or
(bad)
cmp
push
f2xm1
jle
test
dec
mov
push
ins
fadd
ror
fld
sbb
jecxz
mov
call
adc
pop
ror
xor
mov
push
lds
scas
adc
fisubr
pusha
xor
int
stos
inc
inc
add
cmps
mov
ja
adc
mov
aas
cdq
mov
dec
enter
xchg
stos
stos
pop
sbb
mov
retw
ins
out
add
mov
xchg
clc
xor
outs
sbb
(bad)
lods
or
push
fucom
repz
sti
ss
sub
daa
dec
adc
or
stc
mov
aam
lods
sub
test
cs
jbe
pop
fwait
ja
pop
xor
inc
or
lahf
mov
push
pop
xchg
inc
cmp
fadd
popf
add
xchg
pop
addr16
in
inc
and
jns
mov
dec
inc
test
loop
inc
out
sub
push
push
scas
and
mov
aam
push
enter
stos
sub
sub
shl
mov
ins
inc
test
std
cmp
enter
jge
add
push
or
and
test
xchg
pop
mov
and
pop
stc
xor
test
test
call
mov
sbb
inc
mov
mov
cmp
ret
cmps
and
push
popa
push
imul
inc
clc
popf
out
xor
pop
xchg
leave
push
test
cld
aas
sar
test
xchg
xchg
push
popf
sub
ins
cld
inc
outs
loopne
pop
mov
imul
bound
cmp
or
(bad)
cld
(bad)
sbb
loopne
adc
rol
in
int3
mov
into
jae
inc
sar
pop
cmp
(bad)
xor
xchg
imul
mov
push
imul
jecxz
mov
mov
inc
push
ss
add
xor
push
and
into
xchg
xchg
mov
mov
ret
inc
and
sar
(bad)
mov
mov
sar
add
sub
pop
pop
push
(bad)
shl
int
cli
mul
into
(bad)
cmp
pop
movs
push
push
repz
out
(bad)
scas
xchg
outs
stos
push
push
pop
fmul
lock
test
push
push
(bad)
aaa
inc
mov
jmp
out
(bad)
pushf
jmp
push
inc
mov
fld
test
cmp
lods
outs
movs
mov
inc
stos
add
mov
dec
mov
inc
ficomp
inc
cmc
jp
ret
or
(bad)
aaa
repz
pop
rcr
lods
mov
push
mov
xor
icebp
and
sub
jg
fsubr
jge
ret
loop
jae
cld
jp
test
test
add
xor
ins
sbb
pop
(bad)
mov
adc
imul
arpl
daa
xchg
sub
pop
fidiv
dec
xlat
idiv
jg
sub
daa
aad
mul
sahf
mov
(bad)
adc
ja
mov
dec
sbb
(bad)
pushf
pop
stc
call
adc
sub
xlat
push
loopne
(bad)
cmp
inc
in
jo
mov
cmps
stos
cmp
and
jge
and
sahf
popf
push
fcomp
jnp
mov
mov
add
je
mov
pusha
call
jmp
push
dec
sub
cmp
test
mov
mov
pop
nop
cmps
sbb
and
jae
jbe
dec
add
sar
fsub
add
and
(bad)
loope
xlat
push
mov
jb
sub
jecxz
add
dec
or
inc
fcmovnb
sub
in
leave
dec
mov
add
or
push
push
ss
mov
xlat
(bad)
xchg
test
sub
arpl
pop
sub
rol
mov
sub
sub
sub
xor
ds
mov
pop
push
jno
call
rcl
inc
xchg
add
fidivr
inc
push
js
aad
mul
push
adc
lods
ja
lock
ror
xchg
jnp
jmp
sti
push
jno
mov
hlt
pop
mov
int
mov
sbb
imul
stc
jne
scas
xchg
es
int
inc
dec
pop
sahf
nop
xchg
stos
jmp
cmps
jmp
pop
cmps
retf
adc
and
rcr
xchg
fld
add
cmps
dec
or
or
ret
lds
or
mov
mov
xchg
out
add
pop
fidivr
sbb
popf
xor
int3
ror
dec
(bad)
push
ret
push
dec
fnstcw
xchg
pop
sbb
sbb
adc
adc
add
out
and
cmp
sub
int3
xchg
sub
lock
sbb
jecxz
shl
sub
es
call
sub
jnp
fst
cli
clc
or
dec
add
or
out
sbb
retf
int3
test
mov
in
mov
addr16
push
mov
mov
enter
clc
push
or
sahf
fld
push
inc
dec
daa
icebp
cmp
push
lods
lods
rcr
lock
pop
mov
or
in
mov
ja
inc
out
ret
dec
div
jne
fadd
xchg
add
mov
sub
mov
(bad)
pop
adc
dec
or
xchg
pop
lahf
push
and
rcr
daa
xchg
jge
cs
ins
inc
add
(bad)
sub
mov
dec
lahf
or
inc
push
push
add
cli
pop
dec
mov
xor
jmp
sub
ins
sub
or
inc
lds
stos
outs
pop
push
pop
lock
movs
sti
dec
jns
jnp
int3
jle
std
mov
cdq
outs
into
addr16
seto
dec
cmp
inc
push
pop
push
gs
dec
xchg
test
push
push
test
add
mov
inc
inc
jp
stc
cmp
pop
jp
int3
dec
jmp
add
or
cdq
retf
mov
dec
hlt
sub
pop
push
dec
push
lods
adc
fidivr
inc
neg
push
mov
lahf
inc
mov
pop
movs
fwait
loope
outs
cmps
or
xchg
add
mov
prefetcht1
cmp
push
std
loope
push
xrelease
sub
scas
mov
mov
push
mov
lock
jnp
std
pop
xor
and
xor
mov
scas
aam
xor
jecxz
rol
ficomp
es
fimul
ds
aaa
xor
push
push
lds
mov
cmp
clc
out
pop
call
mov
and
into
cmp
xchg
test
pop
imul
out
std
lods
mov
outs
in
pop
pusha
sbb
mov
jne
or
pop
or
scas
or
mov
mov
loopne
and
adc
pop
xlat
sbb
fsubr
mov
jle
xchg
rcl
hlt
cmps
jmp
and
adc
adc
push
xchg
xor
rol
cmp
shl
or
popa
mov
push
xchg
sub
fdivr
out
adc
adc
mov
inc
push
adc
dec
or
inc
pop
stos
jnp
outs
ds
scas
dec
cs
push
lds
add
test
leave
movs
mov
sbb
(bad)
fmul
mov
bts
outs
add
xchg
add
jp
cwde
or
cmp
xor
movs
add
cmps
jno
outs
pop
fiadd
std
pop
xchg
aam
jp
mov
(bad)
ja
loop
or
inc
movs
cmc
cli
sbb
inc
mov
int
test
sbb
cmp
push
push
xor
adc
ins
pop
retf
or
xchg
cmp
adc
push
mov
mov
idiv
(bad)
fisttp
leave
in
and
push
cli
pop
jnp
sbb
test
push
fisttp
xor
or
fdivr
fmul
push
push
jmp
and
lahf
dec
dec
out
out
add
and
mov
jmp
pop
icebp
ret
pop
(bad)
(bad)
dec
pop
push
ins
mov
gs
int
push
scas
pop
sub
xchg
pop
sub
mov
dec
sub
jle
sbb
jle
in
ins
test
popf
iret
mov
xor
mov
mov
cwde
adc
dec
cmp
jne
inc
sti
xor
dec
adc
retf
and
sub
ja
inc
in
rol
sbb
in
add
push
into
das
pop
ins
mov
and
mov
mov
je
(bad)
not
xor
xor
inc
inc
xchg
lahf
test
cdq
xchg
add
jl
cmp
loopne
sub
outs
shl
fld
mov
push
retf
dec
cmovb
imul
dec
dec
xchg
pop
jne
call
jge
jp
add
shl
push
add
pop
push
dec
inc
adc
mov
mov
xor
mov
cmps
dec
mov
push
xor
test
fistp
mov
mov
inc
xor
adc
shl
mov
push
sub
leave
aam
out
push
in
xchg
push
xchg
or
popa
xlat
lods
fsubrp
sub
popa
loop
addr16
jle
mov
xchg
rol
xor
sub
imul
or
mov
sbb
(bad)
lea
mov
clc
mov
out
rol
dec
mov
jmp
pop
inc
sub
push
or
cmp
push
sbb
loop
xchg
daa
add
dec
ficom
imul
mov
mov
and
popa
push
cld
fwait
jns
push
push
repnz
fs
adc
add
or
mov
xor
pop
sub
je
pop
push
movs
leave
ja
cdq
ja
add
clc
gs
test
mov
daa
idiv
adc
call
cmps
sub
and
fdiv
fs
mov
mov
mov
add
aam
mov
dec
das
or
mov
ins
mov
jno
xor
mov
jecxz
scas
imul
pop
jae
arpl
(bad)
outs
add
jnp
shl
fmul
inc
push
mov
mov
sbb
repnz
add
mov
sub
xor
xor
dec
push
aad
fcom
loop
pop
mov
dec
or
icebp
outs
push
pop
sub
test
cli
mov
jno
mov
loopne
iret
retf
sbb
in
aam
(bad)
and
mov
sbb
adc
cld
xor
into
fidiv
(bad)
daa
pop
shl
les
xchg
cmc
arpl
lds
cmp
pop
inc
into
stos
(bad)
sbb
xlat
aam
adc
add
mov
jge
mov
pop
out
xor
adc
adc
pop
add
adc
test
fild
(bad)
adc
mov
imul
mov
cmp
cmc
pop
push
mov
mov
out
(bad)
scas
out
mov
push
add
fsubr
mov
in
cdq
nop
pop
pop
movs
(bad)
sar
inc
sub
sbb
jb
xchg
mov
pop
pop
push
out
add
cdq
mov
mov
push
daa
test
ds
mov
inc
mov
fiadd
stos
add
cmp
aad
add
in
stos
add
sbb
dec
cmps
pop
sar
das
adc
gs
xchg
test
cmp
ret
rcr
mov
jo
aad
fcom
mov
jp
paddsb
jnp
jp
cmp
jmp
jmp
shl
and
test
icebp
or
sub
or
mov
icebp
in
mov
adc
and
push
or
repnz
and
mov
mov
sub
dec
div
mov
dec
(bad)
loop
sbb
call
data16
jns
cmp
push
rcl
fwait
jge
outs
ja
cld
loop
(bad)
push
inc
into
scas
mov
(bad)
sub
pop
jno
xchg
xor
pop
iret
xchg
repnz
sbb
jne
out
add
add
rol
pop
push
xor
div
pop
pop
pop
call
mov
out
(bad)
out
mov
mov
jnp
or
lock
pop
popa
mov
adc
push
in
lods
dec
popf
inc
inc
call
clc
lods
addr16
adc
ins
in
cmp
mov
mov
inc
adc
aas
dec
and
or
xor
lahf
xchg
stos
ret
mov
fsubr
add
mov
(bad)
in
add
arpl
(bad)
fnstsw
push
mov
scas
inc
xchg
movs
push
fisubr
test
(bad)
leave
jl
in
stos
ds
std
push
int3
fisub
xchg
xor
or
pop
pusha
xor
aaa
push
cwde
bound
cs
jecxz
retf
dec
push
sub
je
mov
sbb
bound
(bad)
(bad)
jnp
push
xchg
push
leave
mov
cld
mov
sub
retf
xchg
icebp
push
mov
test
or
neg
push
pop
lds
pop
out
sbb
add
xchg
retf
xchg
push
std
aad
inc
push
push
sbb
inc
mov
int
or
out
sbb
add
jecxz
lock
xor
pop
clc
bound
ret
xlat
(bad)
into
push
call
mov
lods
mov
popa
sbb
add
dec
mov
adc
int3
add
ret
pop
push
push
sbb
mov
aam
das
cmc
dec
(bad)
std
push
aas
push
retf
test
dec
loopne
pusha
jae
push
push
mov
dec
pop
adc
push
inc
mov
pop
dec
sbb
in
xchg
mov
and
loopne
push
repnz
jns
xchg
lods
xor
push
in
setle
sti
inc
mov
push
adc
in
jmp
dec
lods
jne
in
push
icebp
das
pop
fwait
ins
(bad)
rol
pop
(bad)
cmp
fstp
fst
inc
pop
fisttp
dec
nop
iret
and
jg
jne
xchg
mov
das
test
cdq
dec
loop
inc
pop
sub
popf
loop
cdq
les
push
or
jns
scas
out
mov
sub
sbb
sbb
cmps
test
leave
aam
gs
les
jge
enter
loop
dec
bound
jnp
xchg
inc
popa
dec
sti
movs
stc
adc
in
and
add
pop
cmovne
push
fistp
not
test
test
fst
cmps
or
cmps
(bad)
sub
jg
arpl
adc
sbb
sbb
out
push
pop
jb
mov
enter
mov
mov
dec
sbb
mov
add
test
popa
xor
daa
shr
jge
mov
(bad)
jno
adc
mov
in
add
push
add
das
pop
inc
cmp
dec
push
mov
fs
cwde
in
push
mov
sub
fistp
pop
adc
or
pop
inc
xor
jne
push
test
sbb
arpl
test
scas
pop
btc
hlt
sbb
xchg
push
push
inc
xchg
mov
mov
rol
push
int
push
test
icebp
mov
in
lea
jns
jp
icebp
imul
mov
xor
rol
mov
push
jb
add
outs
dec
xchg
and
sahf
int
aam
push
out
mov
(bad)
fbld
imul
rol
call
and
mov
inc
sbb
pop
js
mov
jb
loop
ficomp
sar
fistp
sbb
repz
imul
ins
jmp
addr16
out
sub
xor
pop
sub
add
mov
jns
or
or
mov
ins
xchg
shr
push
(bad)
imul
jae
add
xchg
inc
outs
inc
add
add
mov
add
push
dec
xchg
ds
and
xchg
clc
jl
or
ins
popf
cmp
add
adc
adc
imul
mov
inc
je
or
arpl
push
(bad)
test
inc
push
jne
pop
pop
bound
mov
sub
mov
jecxz
jo
or
mul
jp
fst
popa
pop
cmp
mov
icebp
dec
pop
ror
jmp
aad
icebp
lock
into
(bad)
rcl
xchg
mov
cmp
inc
cdq
out
mov
(bad)
dec
popa
push
or
retf
push
lock
dec
test
ins
fsubr
adc
pop
inc
or
stos
inc
cmps
div
cmp
test
(bad)
aas
xor
nop
sub
out
clc
nop
imul
gs
pop
imul
adc
and
call
push
bound
mov
fwait
inc
out
and
shld
xchg
addr16
gs
out
shr
mov
add
xchg
sahf
div
stos
dec
adc
cwde
cmps
test
jns
pop
xor
pop
leave
mov
jle
mov
push
and
ret
xchg
lods
shr
aad
aam
test
enter
pop
or
dec
jmp
aaa
cmp
add
loopne
xor
sub
(bad)
gs
shr
add
sub
or
xor
lods
xor
adc
push
xor
cli
sub
ds
inc
push
mov
and
adc
push
push
test
loop
jns
dec
enter
out
xor
call
xor
mov
dec
or
xchg
cmp
ins
add
imul
retf
fcmovnb
mov
test
ror
mov
aam
arpl
push
outs
mov
daa
in
or
pushf
jo
sar
jl
pop
ror
jl
stos
mov
mov
cmps
cmp
pop
pop
push
call
push
in
sbb
sar
loope
in
xlat
mov
ja
sub
mov
jg
ficom
enter
and
jae
pop
jo
mov
rcr
popa
dec
inc
jnp
xchg
push
xchg
(bad)
test
imul
push
stc
jle
cmp
retf
call
outs
pop
and
mov
shl
iret
movs
imul
loop
push
dec
shl
xchg
mov
mov
rol
dec
in
fmul
out
imul
mov
inc
popa
adc
or
mov
jae
mov
xchg
xor
cmp
std
xchg
scas
push
xchg
jmp
jno
pop
cwde
cli
xor
pavgw
fisub
jbe
cmp
or
cwde
pop
out
sar
inc
aaa
enter
push
sub
lahf
pop
nop
int3
icebp
icebp
push
cs
and
pop
or
mov
push
shl
imul
outs
pop
or
mov
(bad)
push
adc
je
push
loope
bound
and
stos
bound
push
push
mov
(bad)
fnstcw
imul
int
xchg
fisttp
mov
lahf
loop
mov
inc
dec
xchg
jp
out
inc
repnz
popf
sbb
mov
fucomp
jae
mov
mov
inc
push
or
jle
imul
in
fisubr
and
ret
neg
push
in
das
push
fdiv
or
mov
in
lea
(bad)
pusha
aaa
adc
in
pop
jnp
jecxz
idiv
stos
xor
mov
ret
add
dec
(bad)
in
in
push
cli
xchg
jb
xchg
sbb
mov
lea
add
(bad)
pushf
fadd
inc
push
cmp
mov
mov
xor
gs
cwde
inc
lock
imul
sbb
pushf
jns
jnp
inc
cmp
mov
gs
mov
call
cmc
movs
cvttps2pi
xor
jg
(bad)
sbb
mov
fwait
jo
shl
daa
aaa
push
sti
loope
adc
dec
popa
outs
(bad)
add
sahf
(bad)
out
xor
popa
add
adc
hlt
lea
sub
jl
pop
sub
int
and
push
mov
push
jmp
or
icebp
inc
mov
sbb
xor
mov
cld
js
cld
sub
or
ret
scas
dec
fstp
fstp
cdq
and
push
sbb
xchg
xor
inc
or
sahf
out
sub
xchg
sub
fst
inc
adc
fdiv
push
shr
scas
pop
add
in
out
mov
(bad)
in
je
jl
sbb
or
push
in
cwde
pop
loopne
inc
inc
or
and
inc
aad
inc
div
xchg
shl
pop
in
(bad)
jmp
call
cmp
data16
in
jbe
ss
ror
fist
(bad)
pop
test
fdiv
mov
(bad)
inc
inc
mov
sbb
jl
movs
add
pop
fiadd
xchg
xchg
sbb
add
leave
ret
es
mov
adc
rcr
cmp
in
adc
movs
add
icebp
ret
mov
movs
dec
in
rol
loope
sub
push
or
retf
stc
pushf
pop
pop
cmps
out
sbb
push
pop
pop
popf
push
sbb
mov
aas
inc
fnsave
arpl
test
mov
push
jle
test
jnp
idiv
stos
inc
lods
movs
and
ins
aas
scas
pusha
cmp
ret
xor
and
hlt
inc
into
rdrand
or
cmp
dec
rcr
es
aas
rol
cmova
mov
mov
cmp
stos
movs
leave
neg
repz
and
pop
rol
ja
sub
push
add
push
outs
inc
repnz
cs
sbb
stos
pusha
daa
mul
jmp
xchg
mov
add
shr
andps
add
push
dec
test
sub
out
test
fdivr
in
mov
movs
sub
mov
dec
xor
push
test
int3
fdivr
in
jb
inc
sahf
loopne
and
mov
mov
jbe
mov
push
addr16
add
jb
pop
and
dec
xor
ins
inc
pop
cmpxchg
movs
dec
sbb
cld
outs
retf
pop
add
addr16
retf
in
out
inc
ror
cmc
cmc
(bad)
retf
sub
(bad)
int3
out
mov
add
mov
sbb
mov
add
add
cld
pushf
lds
xor
cmp
xchg
ins
repz
push
js
ds
jmp
cli
ret
sub
pop
xor
add
jmp
add
cwde
mov
jg
mov
mov
mov
and
xchg
mov
mov
or
xchg
adc
shl
fbstp
push
mov
fsub
cmp
sbb
sub
scas
jmp
cmp
and
cmps
sbb
iret
cwde
pushf
jp
pop
xchg
inc
ret
into
(bad)
int
mov
test
nop
cmp
idiv
adc
fild
or
sub
nop
aas
add
fld
xchg
sub
dec
in
sti
sub
mov
mov
outs
cmp
jne
mov
repz
sbb
aas
cdq
jp
push
mov
or
fmulp
gs
cmps
loop
inc
and
loopne
add
pop
mov
mov
sbb
or
cs
cmps
(bad)
and
shr
imul
mov
test
loop
jae
pop
jno
ficom
(bad)
push
mov
jbe
aad
leave
push
in
in
jge
push
fdiv
sbb
mov
mov
daa
fstp
sbb
push
adc
push
icebp
rcr
adc
sub
or
rcr
lea
mov
push
cld
xor
movs
or
inc
cdq
adc
xor
dec
retf
jae
popa
and
and
inc
test
gs
scas
mov
(bad)
out
jg
je
and
(bad)
retf
jecxz
ja
leave
xor
inc
ins
adc
rcr
adc
jecxz
xchg
mov
add
adc
cmp
push
retf
ficom
pop
push
(bad)
in
inc
push
push
cmp
lods
nop
and
idiv
inc
sub
mov
and
xchg
pop
loop
pop
sti
stc
cmp
xor
mov
sbb
pop
mov
pop
add
pop
lahf
repnz
out
daa
pop
js
sub
add
pushf
xchg
and
(bad)
rcl
push
hlt
mov
cmc
aaa
rol
mov
push
retf
xor
fyl2xp1
les
cld
mov
xor
sbb
sar
xor
aaa
and
mov
rcr
or
dec
repnz
jae
or
inc
cs
cmp
inc
mov
in
pop
xchg
xor
pop
stos
loopne
popf
lods
pop
jmp
xor
push
mov
mov
add
leave
test
shl
lds
jno
jl
test
aaa
sub
fisttp
xor
nop
adc
movs
cli
(bad)
dec
(bad)
add
mov
mov
mov
push
fsubr
into
fsub
into
test
adc
fs
scas
add
ffree
and
fld
xor
popf
pop
push
xor
sahf
xchg
jnp
jbe
add
sub
mov
mov
movs
or
sub
add
jbe
mov
(bad)
(bad)
xlat
jp
add
xchg
xchg
pop
out
call
hlt
loopne
dec
push
shl
in
jmp
adc
lock
jl
retf
pop
mov
ror
or
sahf
or
sub
push
cmc
cmps
pushf
call
clc
cmc
mov
shr
ds
cwde
mov
arpl
fcmovbe
(bad)
pop
arpl
lahf
repz
cli
xor
add
fisttp
hlt
mov
fmul
sub
out
cmps
outs
sbb
sbb
dec
mov
or
pop
das
shl
mov
shl
or
dec
xchg
test
scas
arpl
dec
inc
pop
cmps
jnp
push
fiadd
(bad)
adc
push
fild
fisubr
adc
int
repnz
pop
push
(bad)
fsubr
dec
rol
mov
dec
inc
or
jp
mov
mov
jmp
icebp
dec
inc
mov
loopne
dec
or
jp
jp
movs
cmps
popf
inc
push
pop
(bad)
aad
sti
xchg
jnp
cmp
inc
ret
dec
pop
xor
push
neg
lods
bound
dec
push
es
ins
aaa
retf
push
cmp
call
jmp
nop
jge
push
dec
sbb
es
push
ficomp
sub
add
jmp
sub
cdq
pop
call
aad
push
xor
ins
push
jae
scas
xchg
pop
push
dec
nop
jecxz
clc
adc
adc
xor
(bad)
loopne
xlat
add
inc
xchg
sbb
pop
cld
out
or
adc
dec
icebp
sti
cmp
call
cmp
cmp
cmp
sbb
mov
xchg
jns
retf
mov
push
cmps
dec
pop
push
push
pop
mov
push
jmp
cld
sbb
adc
dec
cld
out
movs
cmp
(bad)
sbb
cmp
pop
push
jnp
xchg
sub
or
pop
xor
lods
sub
pop
lock
(bad)
(bad)
xor
mov
aad
add
les
push
adc
icebp
mov
ja
mov
in
adc
mov
mov
adc
mov
clc
fdivr
ss
or
scas
test
and
inc
dec
cmps
repz
adc
test
cli
test
push
push
mov
std
popa
push
jo
pop
jmp
div
or
adc
loope
fstp
retf
push
sub
rcl
scas
pandn
add
movs
mov
jle
scas
xor
test
popa
adc
sub
ds
mov
ds
and
or
jb
clc
shl
ds
push
jecxz
pop
mov
dec
aad
ret
das
or
test
xor
sbb
clc
xor
fwait
sahf
or
sahf
cli
into
jne
sbb
ss
arpl
sub
repz
ds
aaa
call
data16
mov
pop
iret
inc
dec
jb
mov
adc
(bad)
xor
sbb
sbb
jmp
pop
mov
mov
clc
mov
inc
stos
call
and
dec
(bad)
bound
cmp
vcvtsi2ss
lds
inc
cmp
push
adc
(bad)
mov
movs
(bad)
mov
lods
mov
fcom
dec
pop
into
pop
pop
mov
mov
or
add
test
retf
adc
mov
dec
call
int
adc
dec
mov
retf
sub
and
out
jg
pusha
sub
stos
lea
jl
push
enter
mov
pop
(bad)
jmp
lods
ret
cs
ins
in
push
push
stos
push
fcmovnu
xchg
jo
and
lock
jbe
pop
rcl
sbb
add
xor
cs
cs
stos
mov
or
and
dec
pop
cmp
xor
and
leave
mov
and
popf
jge
sbb
sub
mov
cmps
pop
push
sar
test
sbb
pop
rcl
(bad)
outs
stos
ins
jecxz
dec
xchg
es
test
add
outs
jl
and
sbb
js
dec
adc
aaa
lock
int
sub
sbb
sti
out
xchg
ds
pop
pop
shl
movs
mov
loope
leave
push
hlt
les
repnz
stc
mov
test
lds
xchg
inc
cdq
retf
out
fistp
imul
cmp
inc
mov
adc
push
imul
iret
push
xor
add
mov
mov
jmp
pop
and
outs
pop
cmp
ds
dec
nop
addr16
aaa
adc
sub
stos
sbb
sub
push
mov
cmovb
(bad)
jno
icebp
imul
or
enter
leave
hlt
and
shl
fldcw
xor
mov
pop
jno
push
shr
dec
ss
daa
in
das
not
push
setb
push
in
or
clc
ja
and
sbb
or
sbb
pushf
sub
mov
cs
push
imul
imul
and
mov
add
xchg
adc
pop
retf
test
sbb
or
xchg
data16
or
mov
popa
pop
cmp
cmovb
xor
out
dec
mov
sahf
mov
push
das
add
sbb
dec
dec
sbb
jno
cmc
mov
cwde
fsub
shl
xchg
jae
lods
ss
sar
mov
ins
jo
jp
out
int3
mov
xor
push
and
pop
mov
sbb
aaa
fsubr
or
and
and
dec
xchg
cmp
(bad)
jl
not
push
xor
cmp
add
sbb
push
ret
push
(bad)
aad
inc
mov
hlt
or
sub
out
push
dec
ins
or
lods
lds
xchg
pop
cmp
and
or
stc
dec
arpl
setns
nop
bound
inc
scas
(bad)
outs
xor
data16
mov
adc
inc
leave
mov
js
add
ret
imul
jge
mov
pop
addr16
dec
jae
cmp
lahf
shl
leave
call
inc
or
mov
shl
js
xchg
clc
mov
or
sbb
mov
cmp
dec
jb
shl
xor
movs
lock
icebp
cdq
pop
call
fnstcw
fsubr
int3
adc
jecxz
call
call
enter
ins
lock
gs
lods
addr16
push
pop
jb
xchg
dec
dec
jmp
xchg
sub
out
jo
xchg
dec
xchg
mov
(bad)
pop
retf
jge
fisttp
scas
icebp
mov
imul
xor
jnp
fisub
xchg
aad
inc
mov
mov
(bad)
lahf
inc
and
stos
push
xchg
push
pop
sbb
sub
out
popf
xor
jnp
gs
mov
inc
movs
mov
push
push
xor
or
cmps
xchg
mov
sub
push
inc
mov
dec
fdivp
clc
push
clc
xor
outs
add
scas
repnz
fldcw
xchg
add
inc
inc
dec
in
jmp
jae
popa
out
or
mov
pop
shr
and
int
xchg
arpl
jmp
jge
repnz
ss
ret
dec
aam
xlat
fnstcw
jmp
xlat
fldenv
inc
mov
xchg
inc
loopne
in
repz
xor
hlt
leave
dec
jmp
push
shl
jno
test
aaa
pop
fld
adc
push
cld
ds
add
jne
ins
and
lock
dec
mov
pusha
sub
shl
adc
push
ja
(bad)
sti
adc
out
in
sbb
jmp
(bad)
imul
ins
xor
(bad)
pushf
inc
and
daa
pop
mov
push
jle
add
mov
mov
fsubp
jns
push
in
pop
stc
sbb
mov
call
sbb
sbb
aam
cld
out
ret
fcom
inc
bnd
mov
sub
test
dec
mov
cwde
or
stc
xchg
js
mov
xchg
cmp
repz
sub
inc
jae
adc
and
or
(bad)
dec
in
sahf
jp
xor
mov
jno
fistp
sub
add
xchg
pop
push
nop
pop
(bad)
std
shr
mov
shl
js
and
cmp
(bad)
mov
sbb
mov
neg
mov
js
cmp
jbe
imul
loop
mov
scas
mov
jle
data16
(bad)
sub
cdq
popa
pop
xchg
loope
movs
push
hlt
(bad)
dec
leave
ins
or
push
in
les
jecxz
ret
and
sahf
out
dec
mov
pop
cmp
nop
data16
hlt
xchg
in
dec
(bad)
push
mov
bound
sbb
inc
sbb
js
scas
and
jmp
pop
shl
sub
jb
jle
inc
test
dec
stos
or
aad
outs
fwait
inc
out
shl
xor
push
mov
jp
jmp
jg
adc
in
outs
add
and
mov
repnz
mov
stos
les
xor
or
stos
inc
arpl
cmp
in
loop
cmps
inc
movs
cmps
cld
aam
das
sub
push
ret
sub
mov
aad
sbb
sub
adc
mov
pop
pop
adc
popa
clc
mov
rol
xor
fsubrp
xchg
das
mov
inc
aad
in
cwde
dec
bound
jne
add
mov
cmp
mov
push
dec
jne
fucom
popf
enter
test
mov
mov
jmp
enter
in
mov
mov
in
rol
sbb
pop
sbb
cdq
add
adc
int3
jnp
ror
enter
aad
xchg
ins
push
enter
lods
pop
clc
inc
mov
div
imul
stc
inc
je
xor
fimul
cdq
(bad)
sbb
inc
inc
jge
jo
test
ja
loop
dec
mov
sub
dec
or
rol
mov
push
ret
loope
retf
fadd
lods
icebp
repnz
scas
fidivr
fadd
jl
cwde
sub
jbe
scas
xor
test
bound
ss
outs
sub
dec
pop
xchg
hlt
or
inc
je
mov
lea
push
ror
jge
aas
push
xchg
stos
inc
ja
pushf
repnz
test
fidiv
outs
jno
inc
jae
(bad)
leave
add
and
mov
in
cdq
inc
lock
pop
mov
pushf
pop
dec
stos
jno
ja
scas
cmovg
scas
aam
leave
ins
stc
sbb
mov
int3
ds
clc
push
inc
pop
in
cmp
inc
fwait
or
into
repz
test
dec
inc
or
sub
xchg
jmp
fimul
out
dec
cmp
cdq
push
xlat
jbe
sbb
fs
movaps
add
js
mov
out
ror
cmp
movs
cmp
xor
in
jne
neg
mov
jg
aaa
xlat
pop
in
or
ficom
push
test
dec
jmp
or
mov
mov
fcmovnu
inc
add
mov
sub
mov
cmp
clc
sti
sub
cmp
jl
aas
push
call
xchg
out
into
adc
retf
mov
gs
pushf
xlat
mov
mov
shr
add
jno
lea
inc
dec
in
xchg
cmps
lods
ja
ja
das
lods
push
inc
rol
xchg
ja
les
add
xchg
or
retf
mov
std
xor
hlt
test
pop
push
iret
and
dec
mov
fwait
daa
push
add
div
je
(bad)
push
shr
xor
mov
dec
cmp
out
cmps
lods
out
mov
sti
jb
push
mov
out
lods
jnp
sbb
aaa
cmp
and
push
adc
sahf
loop
test
jns
fwait
mov
jo
cmp
sbb
pop
lock
dec
pusha
pusha
stos
jle
rcr
ror
int3
aad
movs
lock
ja
or
xchg
jmp
pop
int
scas
xor
jp
push
sub
sub
(bad)
cmp
jae
pop
inc
dec
push
(bad)
int3
dec
out
sbb
or
lods
fild
mov
mov
inc
xor
idiv
add
mov
aad
fldenv
mov
fisttp
xor
jbe
and
xchg
adc
lds
idiv
out
dec
jmp
cli
mov
out
je
cli
data16
lods
adc
jmp
adc
push
dec
sub
out
and
fmul
fld
es
bound
scas
mul
jle
(bad)
fwait
pop
sbb
retf
hlt
add
ret
jg
jb
out
sbb
mov
cmp
sar
sbb
inc
fstp
inc
dec
fwait
cs
(bad)
call
int
fs
loopne
mov
jno
cld
jb
bound
dec
call
inc
pop
inc
mov
movs
stos
sbb
jge
in
push
mov
push
sbb
nop
add
loop
sub
push
test
push
mov
add
mov
dec
mov
iret
bound
adc
xchg
fnstsw
xor
int
test
mov
xchg
outs
test
mov
loope
fs
jg
sbb
dec
pop
loop
or
das
ds
pop
cmps
mov
dec
mov
mov
por
mov
dec
jne
ret
or
xchg
stc
xor
jmp
cmp
iret
jecxz
outs
fstp
ror
cmp
ins
repz
jns
cld
mov
lahf
jg
stos
call
js
xor
sbb
inc
or
popf
setge
nop
repz
mov
inc
or
jae
call
jecxz
(bad)
js
lods
data16
xchg
clc
mov
cmp
jae
mov
xchg
pop
fldcw
aam
push
(bad)
ds
leave
popf
or
push
fucomp
data16
adc
jne
xor
jle
xor
(bad)
aad
seto
pop
xchg
nop
gs
shl
adc
and
mov
inc
in
lock
loope
fcomp
and
jo
pop
push
push
lahf
ins
jmp
in
inc
stos
fld
pushf
sub
aas
call
jp
jp
dec
call
jmp
pop
idiv
inc
pop
pcmpgtd
pop
push
sub
mov
cmp
out
ins
or
imul
sub
jns
lea
(bad)
mov
or
call
adc
jmp
fdiv
xlat
cmp
mov
mov
aas
clc
xlat
icebp
jl
inc
jne
lods
in
js
loope
mov
xor
xchg
push
mov
sbb
add
cmps
xlat
xchg
(bad)
mov
ror
xor
dec
inc
mov
sub
and
xchg
jmp
jle
call
xor
dec
cwde
push
push
xor
das
and
mov
pop
in
inc
jle
pop
jecxz
jb
dec
push
push
add
add
es
dec
or
jl
retf
push
aaa
and
or
cmp
lock
mov
sub
pavgb
xor
in
sbb
jno
(bad)
xor
or
dec
(bad)
imul
rcl
mov
ss
fsub
push
dec
mov
and
add
bound
icebp
push
push
mov
fldenv
cdq
dec
jmp
push
fwait
and
test
fisubr
js
movs
add
and
sbb
pop
add
ins
cmp
fwait
adc
fdiv
cmp
xor
mov
int3
out
aas
sbb
cmp
pop
inc
sub
sbb
rcr
test
fs
push
call
in
cmp
mov
jns
stc
sbb
xchg
stos
retf
cmp
ss
jbe
push
xchg
sahf
mov
cmp
movs
mov
sbb
js
cmp
imul
add
add
jp
add
jmp
loope
cmp
sub
and
adc
test
into
push
or
in
mov
and
in
xor
sti
arpl
or
push
enter
fcom
hlt
adc
jmp
ja
aas
sub
xchg
sbb
inc
and
or
pop
das
jno
sub
push
add
dec
or
mov
in
inc
lds
xor
stos
cmc
loope
loopne
out
movs
xor
jle
les
inc
mov
jno
ds
dec
xlat
fnstenv
test
or
repnz
hlt
out
les
fcmovnbe
push
sub
xchg
clc
mov
add
jno
gs
inc
sbb
mov
loope
cmp
add
jne
push
mov
mov
sbb
cwde
mov
and
(bad)
mov
push
fs
ja
mov
jne
mov
in
add
jo
mov
int
mov
out
call
inc
mov
sub
das
push
aaa
xor
push
xchg
icebp
push
lods
pop
rcr
sbb
jno
cmp
ds
div
fwait
add
mov
loope
push
out
cmp
xor
jge
xor
or
xor
fstp
lods
sbb
jmp
cmp
in
enter
dec
sbb
fcmovne
add
and
fiadd
dec
jge
dec
pusha
jmp
xchg
mov
jo
sbb
cmp
jno
dec
mov
lds
jnp
mov
aaa
inc
cli
pop
sahf
sub
adc
jle
fdivr
loopne
int
or
mov
jb
push
add
add
sub
mov
mov
jge
xlat
or
out
imul
jo
inc
xlat
sti
push
popa
xchg
pusha
jnp
ret
dec
bound
push
cmp
add
retf
pop
pop
aad
jne
add
sbb
sahf
icebp
and
mov
aam
(bad)
test
xor
retf
lahf
and
jb
mov
aad
lods
add
mov
shl
popf
ins
(bad)
loope
cmp
mov
inc
jns
dec
cmp
les
xor
xchg
cli
inc
loop
stc
js
ja
imul
jne
and
aad
cwde
jp
mov
inc
pop
aas
push
sub
test
cmc
clc
mov
mov
jmp
scas
sub
xchg
scas
jb
pop
mov
sbb
adc
fmul
ds
stc
(bad)
iret
rol
std
cwde
or
movs
pushf
les
mov
mov
popf
mov
pusha
cdq
repnz
(bad)
ins
(bad)
test
mov
jnp
retfw
js
mov
mov
mov
inc
hlt
mov
rcr
out
pop
lds
sbb
xchg
sbb
pop
mov
sub
sub
mov
icebp
in
jmp
test
jle
in
ja
mov
test
neg
push
pushf
arpl
pop
shr
xchg
gs
cmp
cdq
jbe
cmp
pop
out
iret
xor
xchg
cmc
ja
cwde
into
sbb
xchg
xchg
dec
xchg
add
jns
aam
retf
jge
and
(bad)
sub
adc
aam
and
lods
sub
lds
cmps
cli
(bad)
cdq
pop
cmp
jns
lahf
inc
ins
enter
dec
imul
fadd
push
ins
sbb
outs
and
ficomp
or
mov
cmp
les
outs
imul
bound
xor
pop
fistp
fwait
adc
mov
retf
fstp
imul
mov
push
xchg
xor
popa
ss
jne
cld
mov
movs
push
pop
aas
fistp
jl
aas
test
mov
pop
fcomp
xchg
mov
pop
push
aad
add
lods
rol
les
mov
in
push
xchg
cli
iret
nop
adc
jg
in
dec
aad
sar
repz
adc
stos
cld
pop
sbb
xlat
jl
sbb
sar
(bad)
mov
mov
les
(bad)
jns
add
cmp
test
popa
xchg
idiv
fisubr
xchg
adc
fadd
stc
mov
dec
cs
xchg
sub
cmps
push
pop
push
mov
inc
lods
mov
idiv
enter
xor
xchg
jge
scas
and
xlat
arpl
adc
mov
mov
(bad)
mov
mov
xlat
sub
cmp
enter
jbe
jmp
inc
mov
mov
mov
cmps
cmp
cmps
xor
daa
out
arpl
push
sub
mov
inc
xchg
fidiv
mov
ins
or
sub
nop
mov
sub
out
push
mov
sahf
aaa
rep
in
jg
inc
aam
mov
ret
push
mov
enter
pop
or
xlat
xor
rcr
or
es
in
fs
sub
mov
adc
loope
test
jne
sbb
xchg
test
or
sub
jns
ja
ds
or
inc
and
mov
call
out
out
mov
xor
ins
add
enter
push
scas
xor
or
popa
movs
cdq
pop
and
fnsave
push
pop
hlt
mov
fisub
inc
pop
add
dec
in
sbb
je
cmc
stos
repz
pop
add
aaa
stos
inc
xor
jg
daa
ins
xor
mov
cld
bound
xchg
adc
lock
xchg
loopne
xchg
movs
xor
clc
dec
sub
push
xchg
in
sbb
ins
fwait
pop
in
pop
les
(bad)
mov
push
mov
movs
retf
inc
jmp
mov
push
adc
lock
repnz
cmp
sbb
push
stos
jle
ror
cli
mov
nop
aas
mov
daa
and
mov
shr
sahf
dec
xor
jmp
and
aad
push
ins
pop
mov
push
fwait
jp
inc
dec
shl
push
ret
nop
mov
push
scas
jp
sbb
call
xchg
pop
cld
xlat
cwde
int3
push
cmps
retf
mov
xor
inc
call
push
(bad)
test
cmc
inc
pop
ja
mov
loope
xor
mov
in
shl
loopne
cmps
stos
(bad)
push
pop
rol
dec
jo
into
push
and
jbe
das
cmps
sbb
out
add
mov
inc
std
cmps
ror
(bad)
xor
ja
jp
and
lods
inc
in
dec
popf
addr16
ret
push
dec
stos
xlat
cmp
(bad)
mov
lods
sbb
sar
(bad)
sub
xchg
mov
pop
(bad)
idiv
pop
jns
sbb
mov
test
xchg
fistp
push
cmps
xchg
inc
or
jecxz
es
test
xchg
mov
loop
push
xlat
push
dec
fsubp
dec
bound
mov
mov
or
xor
or
std
mov
(bad)
mov
call
add
xor
jb
pusha
sub
mov
or
mov
sbb
dec
cmps
cmp
imul
out
pop
fnstsw
push
fnsave
test
cmps
daa
jno
lods
dec
push
shl
dec
jmp
cmp
xor
scas
shr
aam
dec
sub
inc
jo
call
sbb
daa
mov
ins
popf
test
jmp
outs
stc
cmp
inc
mov
or
mov
adc
cmps
lahf
pop
inc
aas
popf
push
fcmovnbe
xchg
inc
sahf
push
fcom
xchg
inc
movs
shr
dec
mov
jmp
call
fmul
jl
popa
mov
cmp
mov
cmp
test
cmps
push
dec
pop
push
lds
and
mov
mov
jmp
xchg
shr
arpl
push
mov
inc
int3
bound
dec
out
jp
jl
pop
in
into
js
jns
cmp
add
xlat
cmp
add
shl
mov
sub
arpl
(bad)
stc
mov
outs
inc
mov
mov
sbb
cmp
mul
pop
fs
pop
dec
sub
ret
or
push
pop
arpl
out
inc
push
sub
scas
js
loope
mov
jne
pop
jp
aad
jne
pop
sahf
jns
lods
aam
(bad)
loopne
hlt
hlt
xchg
ror
sahf
iret
mov
cmp
nop
call
out
sar
ret
mov
inc
xchg
jle
mov
mov
jg
arpl
and
inc
stos
daa
adc
mov
sbb
push
outs
mov
mov
retf
shr
xor
jecxz
data16
imul
inc
xchg
sub
and
inc
pop
adc
lods
aaa
xor
xlat
mov
std
xor
pusha
sbb
xchg
mov
dec
jge
push
sub
retf
retf
dec
jns
jb
inc
add
push
push
mov
fwait
inc
mov
scas
stc
mov
sub
sbb
fcomp
fs
(bad)
xor
pop
test
and
dec
les
aaa
es
das
lods
(bad)
mov
or
daa
stos
(bad)
call
jge
mov
cmp
mov
xchg
fadd
leave
mov
stc
mov
pop
push
sub
test
mov
mov
or
sbb
jl
cmc
in
out
cmp
mov
sub
xchg
stos
test
in
pop
xor
jb
sbb
xor
jmp
jo
sti
in
fistp
sbb
jb
shl
jo
cmp
jmp
sub
outs
call
or
cld
push
in
dec
mov
cmp
mov
mov
mov
fcomp
push
push
sub
xchg
jns
mov
inc
or
adc
xor
and
mov
push
jg
cmp
jecxz
inc
mov
dec
ins
ds
rcr
or
enter
xchg
jecxz
mov
nop
mov
sbb
test
loope
dec
push
sti
pop
aaa
pop
push
add
jns
fs
cs
outs
fld
out
mov
loop
add
and
and
jmp
mov
jl
inc
hlt
ja
fdiv
loope
stos
lods
jae
mov
iret
push
leave
dec
add
clc
pop
sbb
inc
mov
test
mov
pop
js
push
call
pop
iret
mov
lds
push
mov
clc
(bad)
iret
mov
jge
add
dec
test
mov
pop
xchg
daa
xchg
mov
inc
xor
ins
shl
popa
imul
cmp
jle
jge
test
pop
push
jno
cmp
inc
sub
pop
lods
inc
loopne
popa
imul
sbb
cmp
je
sbb
jg
sti
cmc
(bad)
mov
inc
pusha
test
retf
xor
dec
mov
jl
movs
int3
into
fisttp
retf
mov
pop
xor
mov
test
mov
xchg
adc
pop
test
js
pop
lea
and
cmp
call
fwait
sub
xchg
outs
sbb
movs
rol
hlt
mov
push
inc
mov
add
and
xor
add
(bad)
in
pop
(bad)
pop
mov
mov
mov
push
and
jl
ins
lahf
mov
push
in
test
jl
push
push
cli
jle
(bad)
sbb
cmps
push
or
movs
pop
mov
ror
imul
data16
xchg
adc
imul
popf
and
data16
lods
inc
mov
xchg
jbe
cwde
jmp
je
pushf
mov
shl
xlat
and
add
jg
(bad)
gs
sub
adc
pop
add
loope
dec
fiadd
cmps
call
movs
mov
adc
cld
jge
pop
mov
nop
dec
ret
aaa
xchg
xor
fistp
iret
das
push
adc
lods
test
popa
outs
push
out
stc
inc
push
mov
xor
and
mov
(bad)
cmp
xor
aaa
add
stc
or
jp
in
dec
xor
add
mov
nop
imul
xchg
aad
js
ret
sub
outs
nop
stos
(bad)
fdivr
in
sub
push
icebp
movs
inc
dec
mov
mov
ja
(bad)
jmp
ret
mul
stc
inc
cmps
mov
pop
pop
nop
fimul
stc
sub
dec
dec
ret
cmps
cmc
lods
inc
fdivr
mov
jle
jbe
mov
jno
dec
out
mov
(bad)
pop
(bad)
xchg
push
popf
mov
adc
xor
loop
arpl
pop
dec
mov
jno
mov
cmp
adc
mov
sbb
mov
loopne
and
and
pop
push
cli
cmps
jle
inc
sbb
xchg
jo
in
xor
sbb
stos
add
mov
inc
cmp
cmp
jmp
or
adc
shr
scas
jnp
jle
in
jl
out
jmp
xchg
ins
xchg
das
push
loop
lahf
clc
sbb
pop
imul
dec
xor
sti
or
outs
sbb
pop
and
je
outs
dec
inc
aas
or
sbb
rcl
jno
cmp
(bad)
adc
sti
mul
xor
xchg
xor
inc
push
jmp
in
jne
daa
shl
icebp
iret
rcr
or
shr
mov
ss
lods
sbb
es
loopne
fmul
pop
fwait
icebp
in
xor
cld
lods
push
adc
div
mov
out
mov
pop
int
and
loopne
mov
por
test
dec
mov
sub
inc
js
or
sub
es
add
scas
push
xlat
not
jb
ins
mov
jle
adc
and
and
cmp
imul
xchg
mov
sub
scas
in
ins
sub
pop
push
push
loopne
jno
fisttp
aas
jns
mov
mov
jmp
out
jnp
adc
aaa
mov
add
inc
sub
adc
ror
push
cmps
inc
fucomip
push
add
fdiv
and
dec
sub
pop
cmp
hlt
xchg
or
ins
fcmovb
sbb
adc
pop
lea
push
je
hlt
or
lods
sbb
and
mov
test
mov
xor
cmp
ins
enter
shl
addr16
cmp
mov
mov
push
sub
fbld
inc
data16
adc
sub
push
test
dec
or
outs
inc
dec
fcmovnb
adc
out
push
lahf
cld
and
add
mov
adc
and
ja
jns
xor
sub
mov
mov
pop
cmp
xlat
lods
cmp
in
rep
inc
in
mov
inc
inc
push
jo
sar
sti
data16
and
dec
outs
hlt
xor
pop
jns
xor
sbb
push
jl
mov
aaa
adc
pop
adc
push
lods
das
add
xor
repnz
xchg
cmp
sbb
imul
dec
adc
mov
mov
push
cwde
fldl2t
inc
cdq
int3
sub
pop
jg
call
cmps
in
mov
imul
push
les
fsubr
sbb
pop
inc
ds
and
jnp
push
adc
add
or
dec
xchg
scas
and
xchg
mov
movs
push
dec
imul
push
inc
pop
out
add
cmc
(bad)
frstor
pop
retf
pop
and
add
call
cli
push
push
sub
mov
pop
cmps
das
push
push
sub
int3
pop
cmp
cmp
stos
data16
and
sti
scas
xor
dec
xor
sub
and
jae
paddusw
fs
mov
ins
lods
xlat
ds
xchg
push
es
dec
pop
and
inc
or
ret
shl
daa
add
test
adc
jb
sbb
xor
in
fsub
ds
data16
or
fs
out
ret
sbb
lldt
adc
ret
aam
add
jp
inc
mov
jg
aam
outs
outs
out
mov
and
jb
sbb
or
leave
cli
add
jmp
jmp
aam
aam
aas
jecxz
push
(bad)
mov
xor
xor
jge
pop
das
in
mov
fs
adc
dec
daa
sub
inc
mov
out
(bad)
fisubr
jmp
or
add
and
push
mov
fwait
inc
loope
xchg
inc
jle
retf
push
push
out
minps
adc
ins
dec
and
and
stc
loop
vmwrite
out
mov
rcl
clc
sub
inc
ja
and
adc
mov
mov
cmps
repz
pop
(bad)
adc
and
int
es
nop
inc
mov
inc
mov
or
cmc
cmp
cs
dec
sti
jno
and
jg
loopne
add
ret
pop
aad
xlat
cmp
cli
cmp
and
arpl
les
cli
jne
inc
jno
imul
xchg
adc
das
xor
hlt
cmp
idiv
or
mov
push
pop
push
inc
into
or
sahf
xor
cdq
ret
lods
push
add
jbe
xchg
nop
inc
and
retf
xor
adc
mov
cld
lods
pop
sub
jae
jb
pop
sub
mov
sbb
xor
sub
push
call
add
sar
mov
mov
stc
rcl
push
(bad)
nop
int3
pop
push
adc
and
xchg
xor
inc
loop
inc
mov
lods
fisubr
xchg
enter
inc
inc
add
mov
mov
scas
test
mov
inc
push
outs
jno
sub
in
out
pop
pop
outs
sbb
ret
sti
or
hlt
inc
out
lahf
add
ins
sti
sbb
xchg
movs
push
pop
mov
stos
call
mov
push
ret
dec
fs
mov
add
pop
mov
sar
mov
pop
and
push
rcl
enter
or
scas
jmp
dec
lods
out
xchg
adc
mov
xchg
xchg
int
clc
mov
movs
mov
push
dec
xor
and
or
adc
mov
pop
sub
inc
sbb
mov
int
jl
lahf
mov
rol
fsubr
lods
cwde
inc
hlt
adc
retfw
mov
mov
jmp
push
test
ins
or
xor
xor
adc
push
push
inc
inc
out
pusha
xor
loope
and
stc
sbb
jb
and
hlt
cld
repnz
dec
push
aad
push
mov
jmp
aad
test
je
pop
imul
sbb
push
dec
bound
aas
addr16
stos
mov
pop
mov
leave
or
sub
lods
std
icebp
cmp
pusha
cs
jno
inc
pushf
or
imul
and
jo
scas
mov
push
jae
adc
(bad)
aam
xor
push
sub
pop
mov
cmp
aad
push
xor
cmp
loope
or
dec
pop
nop
(bad)
sbb
adc
test
popf
xor
mov
cmp
sub
xor
inc
ins
and
xchg
test
xchg
fdiv
pop
aam
jne
mov
sub
lea
inc
int3
aam
sbb
test
cs
mov
adc
mov
mul
xchg
jle
imul
push
and
les
push
sub
mov
xor
cmp
aas
inc
sub
das
push
popa
aaa
(bad)
arpl
addr16
sbb
into
or
or
jb
jge
popf
mov
sub
test
mov
mov
mov
mov
jmp
adc
int
outs
pop
mov
sbb
adc
push
xor
jp
aas
sbb
loop
addr16
pop
or
ins
mov
pop
and
and
arpl
std
out
mov
test
mov
xchg
jnp
enter
pop
push
inc
sub
mov
pop
fwait
xchg
mov
xor
cmp
xor
inc
mov
shl
or
push
mov
in
xchg
dec
dec
cld
push
test
cmc
rcl
push
and
dec
pushf
fwait
jp
inc
and
ret
mov
loop
fmul
jnp
adc
ficomp
xlat
mov
adc
fdivr
pusha
mov
lods
sub
(bad)
xchg
pop
sahf
push
add
les
movs
push
dec
(bad)
cmps
mov
push
ret
inc
cwde
out
sbb
mov
xor
das
xlat
mov
dec
sub
xor
and
mov
push
outs
jecxz
adc
int
arpl
cmp
stos
sbb
push
out
scas
in
pop
jmp
pop
xchg
push
rcr
sub
fs
ins
sub
sbb
cs
add
gs
mov
pop
push
xor
ins
aas
mov
jmp
inc
mov
(bad)
mov
dec
ret
jle
stos
imul
xchg
mov
and
daa
jp
std
in
cli
inc
mov
add
cmc
int
mov
or
mov
or
inc
jb
ja
stos
pop
mov
js
pop
or
add
dec
pop
icebp
and
mov
leavew
cmp
and
push
xor
cmps
adc
out
jg
data16
mov
addr16
out
imul
pusha
shl
jnp
xchg
das
test
or
in
push
or
push
sub
clc
adc
js
mov
adc
daa
ret
xchg
or
sub
mov
sbb
pop
scas
add
out
retf
jle
jg
jmp
sbb
mov
loopne
rol
push
cli
sub
cli
mov
xor
sbb
sar
iret
cmp
fbstp
mov
cmp
xchg
ds
jmp
sbb
into
push
mov
xor
fs
xor
or
lock
adc
popf
mov
mul
nop
and
push
mov
mov
and
aad
cdq
fmulp
pop
push
jo
and
scas
pop
xchg
pop
jne
and
push
sar
popa
inc
clc
mov
loop
rcr
loope
aam
out
push
or
fldenv
xor
sub
outs
sub
dec
pop
pop
cmp
or
mul
xor
cmp
(bad)
mov
or
cwde
or
push
(bad)
pop
jl
mov
jp
or
cdq
inc
sub
push
add
sub
es
inc
fiadd
mov
lahf
dec
push
stos
inc
int
jp
test
xchg
dec
xchg
lods
adc
dec
sub
dec
(bad)
(bad)
mov
inc
stos
mov
ss
dec
(bad)
out
sbb
mov
pop
or
int
dec
dec
add
jge
ins
sbb
fwait
jge
mov
outs
add
pop
cs
mov
mov
dec
je
int3
dec
push
dec
mov
and
nop
(bad)
jp
hlt
mov
out
jmp
inc
adc
pop
pop
rol
dec
inc
aas
shl
jge
add
fsub
and
jecxz
sub
stos
sub
inc
movs
xor
rol
ins
push
fidiv
jmp
aas
out
into
adc
rol
fistp
loop
vmwrite
dec
adc
xchg
xchg
inc
dec
pop
icebp
(bad)
not
aam
dec
mov
or
lods
mov
mov
iret
inc
(bad)
rcl
adc
xor
sub
mov
enter
(bad)
xchg
(bad)
aaa
mov
sbb
cmp
fimul
mov
jecxz
jmp
inc
scas
hlt
(bad)
ins
push
push
sub
mov
aad
inc
jae
xchg
and
mov
mov
mov
stc
cmp
scas
mov
retf
mov
sbb
test
mov
clc
pop
pusha
scas
lods
aaa
push
push
jle
ins
icebp
into
pop
test
cmc
dec
sti
ficomp
sbb
test
cmp
xor
fs
jno
int3
xchg
sahf
mov
(bad)
xchg
mov
ror
mov
out
add
push
xchg
loopne
arpl
(bad)
jg
xchg
mov
sbb
push
xor
jno
jo
mov
xlat
or
mov
xor
cmps
pop
xor
loope
xchg
je
mov
stos
call
and
xor
cmp
movs
movs
dec
jl
cld
and
xchg
(bad)
mov
stos
out
lds
mov
(bad)
cmp
divps
out
xor
jmp
or
mov
adc
je
inc
retf
out
mov
sbb
jne
inc
sbb
sbb
xor
inc
mov
pop
push
mov
xchg
ror
xor
mov
lock
xor
call
add
inc
popf
mov
sbb
and
shl
push
jmp
js
cmp
cmp
mov
and
push
cwde
mov
jne
(bad)
mov
add
mov
leave
aam
jle
inc
cmp
and
or
mul
mov
jl
jmp
xchg
aad
rol
push
retf
fwait
push
pop
mov
addr16
std
hlt
mov
mov
adc
xor
test
ret
mov
sahf
pop
or
jne
pop
fmul
or
add
ret
pop
push
and
pushf
lods
packssdw
out
pop
jae
and
mov
mov
scas
sub
fldcw
cmps
fcomp
mov
sub
cwde
push
push
scas
dec
cmp
les
fsub
dec
sbb
push
neg
inc
jle
lds
add
mov
out
cdq
push
mov
cmp
sbb
pop
sbb
popf
out
leave
mov
sbb
mov
pop
leave
xlat
lahf
lock
sbb
adc
xor
mov
or
sahf
icebp
push
call
mov
imul
(bad)
mov
inc
(bad)
scas
jne
fbld
pop
test
inc
xor
mov
pop
push
cmc
adc
mov
out
ret
aas
mov
and
retf
sbb
inc
fldcw
lods
or
adc
or
cmps
fdivr
sub
inc
call
out
ret
in
shr
xchg
sub
mov
xchg
inc
mov
xchg
pop
shl
push
out
sbb
push
cmp
sbb
popf
lds
push
and
addr16
lods
and
sub
mov
pop
ins
shl
dec
sbb
shr
sbb
sub
push
or
pop
mov
clc
je
movups
stos
pusha
sbb
popa
jge
dec
or
fcmovnu
dec
jl
and
sub
(bad)
data16
mov
fcomp
daa
gs
jmp
mov
mov
ss
xchg
push
jg
ds
call
int
jb
adc
dec
jmp
jge
hlt
add
jp
movs
ror
fsub
dec
cwde
inc
retf
shr
ins
stos
mov
adc
(bad)
outs
test
xor
sub
mov
loop
add
lds
cwde
mov
icebp
ins
lock
cs
das
(bad)
jns
push
lahf
out
fild
lods
retf
jmp
out
ret
jle
jo
loop
cmp
add
out
div
ror
je
mov
jp
sub
push
sbb
add
psrlq
sti
loope
repz
test
std
mov
mov
adc
scas
mov
mov
inc
nop
mov
mov
inc
aad
into
test
mov
subps
dec
xchg
add
sahf
nop
and
dec
push
mov
jo
sbb
mov
clc
and
xor
xor
cmp
js
cld
not
mov
adc
mov
test
add
mov
ja
sub
mov
scas
mov
adc
inc
pusha
inc
mov
out
out
push
fwait
cmp
daa
or
sub
dec
lods
add
cmp
aam
inc
bound
addr16
dec
pop
xor
repnz
cmp
dec
add
pusha
retf
mov
pop
clc
mov
addr16
out
shr
sub
jge
stc
lods
sub
aas
xchg
sti
mov
and
outs
mov
shl
aad
out
fnstenv
loope
lds
jle
xor
stos
dec
jg
xchg
cmp
jne
nop
ds
popa
inc
(bad)
mov
out
jo
mov
fcmovnb
cmps
enter
pop
cmp
sub
dec
xor
pop
cmp
pop
aas
out
push
and
ins
adc
cmp
xor
sub
jl
das
or
cmp
inc
xor
jecxz
xchg
pushf
and
inc
fucomi
sbb
lods
in
in
neg
or
or
dec
push
xchg
mov
inc
sbb
aaa
lock
jmp
cmp
ja
clc
in
sbb
(bad)
aam
and
xchg
xchg
push
shr
cdq
int3
push
or
xchg
mov
dec
xchg
sub
(bad)
call
inc
retf
dec
js
jb
sub
or
jl
in
stc
dec
push
popf
mov
loope
mov
int
pusha
mov
popa
xor
movs
retf
fistp
mov
pusha
fs
push
adc
lock
pop
mov
xchg
rcl
retf
jae
or
inc
mov
(bad)
stos
pop
inc
movs
and
xchg
xchg
xor
ins
push
add
(bad)
rol
xchg
xchg
int
adc
test
xchg
push
dec
scas
scas
mov
fistp
sahf
or
clc
les
cmc
mov
stos
inc
mov
test
push
popf
jle
mov
mov
pop
sbb
cmc
jg
aad
sub
inc
out
es
ret
out
push
push
push
sti
add
xor
movs
cmp
pop
jle
out
outs
dec
aam
stos
iret
test
popa
inc
das
add
(bad)
xchg
fwait
aaa
cmps
cmps
jno
lock
out
ins
(bad)
jecxz
xchg
lea
(bad)
mul
pushf
div
shl
repnz
aam
sub
les
call
aaa
mov
test
fdiv
in
push
movs
add
xchg
mov
std
inc
xchg
idiv
dec
cmps
pop
jmp
(bad)
popa
jne
shl
and
push
aad
xor
jecxz
xor
lea
movs
sub
jnp
call
sbb
hlt
repnz
cwde
or
aam
xlat
inc
loopne
aas
jns
push
jge
pop
xchg
jle
es
jg
jae
and
xchg
test
cmp
popf
inc
test
xchg
pop
add
stos
or
retf
dec
push
jl
cmp
shl
push
push
fld
pop
leave
retf
pusha
es
retf
or
aaa
sub
adc
(bad)
(bad)
xor
dec
in
je
sbb
mov
test
repnz
loop
mov
dec
mov
dec
mov
sbb
dec
mov
mov
icebp
movs
shl
mov
pop
cmps
push
enter
arpl
scas
xor
pop
mov
scas
aad
test
fwait
clc
sbb
sub
(bad)
int
pop
inc
(bad)
nop
sub
add
or
(bad)
xlat
sar
jo
cmp
mov
daa
or
es
push
mov
outs
aam
sub
adc
xchg
sbb
leave
xchg
test
or
mov
call
mov
jg
test
mov
int3
test
out
mov
xchg
cmps
jle
popa
gs
ret
arpl
and
pushf
xor
mov
and
adc
mov
xchg
or
test
lea
jo
xchg
iret
fsub
mov
out
loop
fist
rcr
rcr
sub
mov
pop
rcr
fdiv
dec
xor
cmp
bound
cli
mov
aas
mov
cmp
fs
addr16
out
mov
clc
neg
iret
xchg
mov
cmp
mov
aam
mov
sub
cdq
mov
outs
cwde
lds
(bad)
mov
xor
mov
rcl
pop
xchg
pop
(bad)
push
stos
icebp
xor
cmp
(bad)
fild
int
pop
sub
cmp
popf
call
aas
(bad)
sbb
adc
xor
fadd
imul
sbb
jnp
int3
je
addr16
mov
(bad)
and
push
es
out
inc
ret
in
mov
(bad)
adc
out
push
aad
jo
push
cmc
dec
xchg
test
xlat
nop
mov
dec
ins
fadd
push
pop
mov
push
retf
mov
cmps
ret
mov
das
fsub
lahf
and
push
dec
(bad)
mov
jmp
push
ficom
mov
mov
pop
pop
leave
and
mov
mov
jl
lock
pop
mov
cmp
push
or
repnz
syscall
xor
repnz
aad
inc
mov
and
mov
cmp
les
arpl
pop
add
jns
enter
or
cmp
inc
repnz
sub
mov
pop
sub
xor
fbstp
mov
and
dec
repnz
xor
xchg
out
in
mov
mov
les
pusha
or
xchg
mov
hlt
cmp
das
test
sbb
jno
cli
push
lock
push
mov
pop
icebp
jg
jge
push
rcl
mov
and
xchg
aam
mov
inc
xor
out
call
mov
pop
cmp
push
pushf
mov
dec
and
inc
jne
loop
push
cli
loopne
int3
popa
mov
jg
add
into
dec
mov
push
cmp
retf
aad
leave
jmp
mov
jbe
stc
mov
jecxz
add
bound
loopne
in
cmp
fild
jecxz
cld
mov
sub
pop
aas
or
xchg
out
fwait
outs
pop
scas
jb
in
cli
lea
pop
ror
mov
or
add
or
or
mov
xor
mov
push
jmp
inc
push
(bad)
je
ficom
in
pop
stos
sbb
leave
xchg
test
adc
(bad)
aam
xchg
sbb
popa
and
mov
jns
ins
hlt
mov
add
out
test
mov
mov
ror
fsubr
cmp
xor
push
xchg
sub
cwde
out
cdq
rol
call
mov
xchg
or
jle
addr16
mov
mov
rcl
js
movs
inc
stos
cmp
sub
test
and
stos
cli
leave
adc
adc
mov
test
in
xchg
adc
test
aaa
sbb
pusha
cmp
mov
shl
nop
mov
jp
icebp
sbb
mov
and
push
ror
mov
fcom
sbb
imul
inc
add
loope
and
clc
push
xor
push
or
or
jle
cmp
imul
mov
fsin
repnz
mov
icebp
mov
push
pop
cwde
jbe
sbb
fwait
or
cmp
add
(bad)
int3
int3
jbe
mov
or
out
(bad)
imul
mov
jnp
push
inc
fs
cmp
jmp
add
rol
imul
jns
das
pusha
scas
push
pop
scas
imul
mov
dec
nop
int
cmp
leave
inc
push
cmp
xor
xchg
bound
inc
lahf
jl
cdq
sbb
in
in
sbb
aam
mov
mov
fild
cmp
push
sub
pushf
pop
dec
cmps
jnp
pop
push
adc
std
ror
dec
retf
jnp
jo
jo
jmp
jae
mov
dec
pop
jnp
xchg
stos
out
dec
inc
jmp
sub
ficomp
rcr
mov
pushf
fst
and
out
mov
pusha
popfw
xchg
bound
push
inc
dec
js
push
or
or
xchg
ds
or
repz
bound
fstp
jge
leave
das
leave
push
jno
dec
arpl
in
(bad)
in
mov
je
pop
in
idiv
js
in
cmp
dec
daa
add
jmp
mov
jnp
inc
es
fld
mov
adc
fisub
sahf
cmps
jbe
jne
cdq
scas
call
adc
mov
inc
dec
into
test
dec
mov
sub
jg
pop
mov
aam
(bad)
pop
in
test
shl
ror
pop
rcl
adc
js
out
dec
sahf
xchg
jae
cmp
aam
sar
jg
adc
stos
adc
pop
dec
and
ret
inc
jg
and
or
shl
out
js
imul
sahf
inc
adc
jns
je
fucomp
xchg
sbb
test
scas
inc
mov
fld
dec
and
inc
adc
(bad)
not
pop
mov
es
movs
sub
sar
push
rcl
jbe
push
fs
retf
or
fcom
mov
push
push
imul
jg
mov
push
mov
and
ja
or
sbb
add
mov
xor
cmc
pusha
jl
xchg
cmps
mov
lock
dec
mov
stos
and
xor
scas
or
jnp
and
std
sbb
shl
test
pop
(bad)
mov
dec
aam
jns
loope
inc
mov
or
jne
cli
imul
lds
fcomp
lahf
aam
cwde
jbe
scas
shl
inc
pop
lea
push
cli
sub
out
mov
lock
mov
mov
pop
pop
cmp
mov
adc
jo
mov
std
lock
xor
pushf
test
ror
hlt
pop
pop
mov
dec
sub
sahf
or
sbb
sbb
mov
test
pop
mov
cmp
les
sub
scas
push
adc
mov
push
repnz
mov
xor
fs
mov
stos
int
lods
mov
jp
xor
or
enter
xor
hlt
pusha
aas
adc
jmp
xchg
add
sbb
pop
xor
in
mov
hlt
inc
mov
and
(bad)
pop
neg
pop
cmp
std
xor
adc
(bad)
jne
je
jmp
xchg
stos
ficom
cs
pop
and
or
out
or
dec
loope
mov
mov
ss
jecxz
xchg
and
jp
sbb
mov
fst
cwde
pop
outs
add
rcr
xchg
rol
xchg
aad
xor
jecxz
xor
mov
imul
outs
adc
out
jl
cmp
je
out
sub
sub
jecxz
and
ror
sahf
mov
aaa
xor
rcr
mov
push
adc
cmp
inc
stos
in
out
pop
dec
cs
sub
xor
or
mov
dec
outs
test
jl
dec
retf
arpl
ret
sti
xchg
dec
lahf
fimul
mov
aas
(bad)
dec
sbb
and
xor
bound
mov
(bad)
jl
adc
jmp
pop
jno
add
ret
dec
cmp
ror
inc
clc
out
mov
pop
int3
mov
cmp
mov
call
pop
into
ins
enter
scas
sbb
bound
xor
ja
xchg
mov
(bad)
inc
daa
pop
jns
pop
in
xor
leave
test
mov
xlat
inc
fldenv
test
xchg
mov
fdivr
fwait
dec
shr
push
mov
cwde
jl
dec
cmp
mov
xor
pop
jno
je
xchg
jae
and
pop
int3
add
add
inc
pop
mov
inc
test
sahf
int3
dec
sub
aad
push
outs
lods
dec
mov
outs
adc
icebp
in
repz
adc
sub
jmp
dec
out
das
vmread
pop
icebp
and
in
xchg
test
(bad)
fcmove
or
cmp
mov
or
sbb
sub
movs
and
dec
leave
mov
push
sbb
add
adc
out
push
sub
adc
retf
cmp
mov
sti
in
out
imul
mov
shl
lahf
js
cmps
cli
frstpm(287
inc
sti
or
mov
adc
sahf
mov
outs
cmp
jle
test
leave
and
fstp
int3
push
rol
(bad)
xchg
xlat
pop
push
push
sub
jl
js
pop
push
retf
imul
(bad)
and
push
in
iret
mov
fiadd
hlt
ret
ins
push
(bad)
stos
(bad)
jge
inc
mov
pop
int3
adc
add
(bad)
jg
pop
and
jno
push
(bad)
aaa
leave
out
test
pushf
push
mov
retf
inc
in
dec
jne
xchg
mov
lds
jp
js
jge
adc
popa
jp
adc
out
xor
mov
mov
iret
outs
xchg
ins
pop
mov
les
cmp
call
push
test
adc
cmp
adc
inc
jnp
les
mov
push
ss
fwait
mov
fisttp
push
btr
and
jnp
daa
add
nop
sub
sub
push
push
lahf
cmp
push
jge
jecxz
xchg
icebp
gs
inc
mov
fisubr
dec
xchg
inc
push
push
shl
popf
fcomip
jmp
push
jg
cmps
in
daa
sub
push
vpcmpeqb
mov
jb
add
xor
push
retf
scas
xor
adc
cli
enter
mov
in
es
add
imul
aaa
jo
retf
ds
sub
inc
xchg
sbb
sbb
pop
dec
loope
cmp
int3
aam
add
mov
or
pop
cmc
mov
push
xor
mov
jbe
icebp
iret
aaa
cli
iret
xor
mov
in
outs
pop
mov
test
sub
and
int
into
ret
dec
dec
push
fsub
jno
or
pop
pop
out
clc
mov
or
add
push
mov
dec
aaa
xchg
shl
cmp
jne
adc
xchg
mov
inc
jo
loopne
sbb
sbb
(bad)
(bad)
pusha
lods
jno
loope
test
sbb
movs
jo
xor
jbe
les
nop
xchg
ins
dec
int
adc
adc
and
ins
jb
cmps
mov
dec
sbb
and
cmp
sub
sbb
cmp
in
jb
aad
lock
push
test
hlt
mov
out
or
div
rcl
xchg
pop
(bad)
mov
inc
popf
xchg
pop
jl
pop
gs
int3
call
xor
mov
pop
jne
pushfw
call
call
jecxz
fidiv
push
idiv
inc
adc
push
aam
adc
lds
loope
jbe
xchg
js
xchg
push
nop
and
test
in
and
push
cmp
in
xchg
ficom
inc
inc
push
dec
and
int3
push
bound
pop
xchg
shr
sar
cs
popa
dec
xor
mov
push
xor
fisub
or
cmp
cmp
sbb
pop
popa
lods
lods
loope
test
stc
test
lea
fidiv
add
xor
in
mul
jb
jns
sub
inc
fwait
int
push
into
and
or
mul
pusha
call
es
mul
mov
fnstenv
popa
test
adc
(bad)
test
in
pop
xor
xchg
enter
pop
les
sub
ror
cs
inc
fnsave
adc
add
test
or
push
leave
jbe
pop
xchg
pop
cli
and
xchg
loop
mov
mov
fmul
add
inc
mov
cmps
xor
jo
dec
ja
data16
fcmove
rcr
movs
pop
mov
xor
int
mov
add
push
into
push
pop
iret
mov
jmp
sbb
rcr
dec
sbb
inc
retf
sti
xor
cmp
test
jbe
stos
cmp
adc
sbb
add
lahf
test
repz
xchg
(bad)
imul
call
ret
push
jnp
and
cmp
hlt
push
dec
pushf
mov
mov
fwait
push
out
icebp
imul
enter
ss
xchg
mov
sbb
sub
scas
push
or
outs
lock
ficomp
bound
mov
xor
aaa
pop
shl
mov
inc
aaa
dec
fwait
add
jo
out
sub
mov
jl
faddp
ret
outs
add
inc
std
mov
jl
sub
inc
jmp
(bad)
ja
pop
inc
js
mov
mov
fisubr
dec
retf
xor
pop
mov
in
into
sbb
js
shr
dec
add
pop
push
int3
and
in
mov
ins
mov
hlt
ds
bound
iret
push
aam
outs
jp
rcl
or
dec
(bad)
imul
pop
or
cmovl
(bad)
cli
pop
cmp
sub
cmp
jo
call
push
dec
pop
pop
fld
outs
pop
rol
movs
ret
push
int
mov
into
repz
push
in
sbb
jge
test
cmp
xchg
popa
rol
shl
sub
cmps
aam
xor
aas
shr
jmp
mov
cmc
mov
iret
xchg
adc
dec
xor
push
cmp
sbb
iret
mov
cmps
jge
mov
popa
stos
test
daa
xchg
dec
addr16
cmp
mov
pop
xor
sbb
and
pushf
imul
ret
add
fmul
mov
and
add
clc
xor
inc
sbb
xor
stos
sbb
loopne
dec
mov
sbb
push
fwait
popa
jmp
jle
pusha
sub
aad
out
mov
sbb
xchg
repz
hlt
es
ror
pop
jl
mov
mov
pop
or
out
aad
es
inc
in
xchg
gs
in
in
loop
mov
les
repnz
retf
mov
or
mov
xor
mov
ss
mov
cmp
mov
pusha
adc
(bad)
jns
jbe
test
fst
xor
jmp
and
jno
dec
push
mov
addr16
or
test
fs
adc
popf
adc
lods
push
mov
shl
nop
jp
and
cmp
and
es
icebp
xchg
scas
imul
mov
xor
xlat
xor
fnstsw
test
in
call
and
(bad)
sub
cmp
addr16
jae
data16
sub
jge
ret
jl
adc
test
lods
dec
jmp
xchg
call
mov
push
dec
arpl
pop
mul
xchg
or
cmp
out
cmp
(bad)
mov
ins
stc
enter
leave
int3
cmp
stos
in
mov
cwde
in
or
adc
bnd
jnp
stos
mov
rcl
mov
sbb
pop
pop
jmp
pop
xlat
adc
pop
test
push
retf
and
push
fs
stos
leave
out
cmp
push
inc
cmp
test
dec
cmp
gs
push
retf
xchg
push
pop
nop
lahf
imul
loope
cmp
or
cli
test
jl
xchg
push
mov
jbe
ds
inc
sub
ds
ins
ret
fs
retf
xor
inc
push
mov
pop
push
fnstsw
int3
push
test
outs
mov
movs
adc
neg
hlt
sbb
or
les
add
mov
retf
ficom
gs
jmp
jno
push
and
mov
adc
or
imul
mov
aad
mov
cmp
out
cmp
or
fild
xchg
shl
mov
test
shl
scas
out
and
jbe
fwait
xchg
cmps
fwait
stos
push
add
int3
js
mov
xchg
mov
pushf
push
jo
not
(bad)
popf
aad
xchg
ins
mov
mov
cmps
sbb
mov
cmp
jle
sbb
retf
out
cmp
pop
xlat
pop
aad
pop
dec
fbstp
fmul
das
mov
imul
push
aad
loopne
(bad)
push
pop
cmps
int
dec
out
mov
jl
sbb
xchg
mov
xchg
outs
mov
int3
and
mov
jmp
cmp
hlt
adc
loope
adc
lock
xchg
cmp
jne
lds
jo
sbb
ss
cmps
cmp
sub
sub
ret
push
sahf
mov
push
pop
inc
mov
sub
mov
pcmpgtw
aam
cli
pusha
(bad)
jnp
sbb
shl
sahf
dec
pushf
push
jno
add
cs
out
pop
pop
ss
lahf
mov
dec
cli
inc
cmp
sbb
mov
dec
mov
or
aaa
repz
(bad)
(bad)
nop
or
pop
pop
jle
ins
stos
xchg
bound
mov
loop
in
arpl
cdq
cwde
inc
push
into
scas
stos
xchg
mov
stos
out
(bad)
fnclex
aad
push
push
hlt
push
sbb
sahf
cld
lock
jbe
jno
pop
out
out
inc
pop
xchg
mov
std
dec
data16
pop
add
ret
ret
sti
aam
lds
clts
pop
inc
les
or
add
imul
loope
repnz
cmp
xchg
cmp
push
push
sbb
add
cmp
xchg
adc
and
gs
int
nop
ficomp
xor
jbe
ror
xor
sbb
sub
and
cmc
cld
xor
loop
cdq
sub
inc
stc
sub
cdq
call
push
scas
popa
mov
dec
je
push
mov
cmp
pop
and
mov
data16
popa
dec
inc
ss
out
push
and
push
sti
cmp
lahf
sbb
pop
xchg
setb
int3
mov
add
or
imul
aad
adc
and
pop
jne
cmp
shl
mov
(bad)
int
fwait
shl
sbb
mov
icebp
mov
imul
jmp
inc
popa
addr16
pop
div
push
cmps
cmp
push
sbb
fcomp
mov
jg
pop
cmp
icebp
and
stos
icebp
shl
cmp
arpl
push
hlt
movs
lea
test
fs
adc
in
jg
sbb
sub
push
je
je
mov
cmp
and
sub
loop
call
and
dec
adc
out
cmp
push
inc
sahf
clc
aam
mov
sahf
fsubrp
mov
sbb
mov
mov
sbb
into
dec
loopne
and
inc
into
push
pop
mov
push
loop
mov
mov
ja
hlt
cmps
fs
rol
repnz
lods
mov
mov
cmp
sti
xlat
cmc
mov
jns
jge
mov
cli
pop
sbb
fs
sub
push
push
movs
adc
add
sbb
and
adc
xchg
cmp
cmp
jbe
cmp
lahf
dec
mov
dec
movs
push
sub
test
aad
mov
mov
mov
fst
mov
stc
clc
jns
cmp
add
jo
pop
popa
sub
fwait
popa
and
jl
push
and
sub
test
mov
push
(bad)
adc
repnz
or
fidiv
in
(bad)
sbb
push
shr
dec
sti
mov
inc
or
add
jg
iret
mov
cmp
iret
mov
js
movs
ja
push
pop
shl
dec
fdiv
scas
(bad)
int
aam
adc
push
sub
mov
fiadd
in
cmps
iret
mov
sahf
push
sbb
push
loope
loope
aaa
and
shl
xchg
and
les
rol
xchg
sbb
je
push
scas
mov
mov
mov
adc
jnp
leave
pusha
mov
jbe
cmp
clc
mov
cmp
je
aaa
push
xchg
popa
dec
pop
arpl
inc
jle
or
and
mov
pop
dec
jl
sub
fwait
and
cmc
push
mov
mov
cdq
cdq
hlt
pusha
push
xor
mov
aaa
out
(bad)
shl
outs
repz
ret
lds
xchg
cmps
aad
fdivr
clc
cmp
xchg
std
lock
jnp
fs
add
sbb
dec
push
pop
sti
test
mov
xchg
and
outs
mov
inc
pop
xor
mov
xchg
mov
ss
or
and
fild
fs
test
ret
and
(bad)
in
test
fisub
movs
scas
(bad)
(bad)
aam
retf
add
mov
out
inc
test
gs
xchg
and
lahf
loopne
xor
inc
ror
xchg
mov
je
aas
sti
cmp
or
pop
stos
add
not
mov
add
push
and
or
mov
mov
js
js
sbb
sub
or
jle
xchg
in
fidivr
rcl
stos
(bad)
(bad)
jnp
sbb
retf
or
mov
je
inc
mov
pop
retf
pop
mov
out
sbb
mov
inc
sar
and
and
push
dec
mov
cmp
jmp
in
xchg
les
xor
pusha
inc
ins
xor
inc
xchg
mov
cmp
pop
fiadd
adc
adc
stos
push
add
mov
mov
cli
sti
xchg
sbb
sbb
add
jb
dec
es
xor
xor
aam
sbb
push
push
fwait
popf
mov
cli
enter
hlt
ficom
dec
inc
jp
jge
cmps
sub
bound
cmp
xor
in
out
sub
adc
mov
rol
mov
(bad)
popf
xor
mov
inc
mov
and
repnz
stos
imul
ret
mov
add
adc
xchg
stos
sub
loopne
inc
pushf
pop
sar
test
mov
cmc
add
fsin
aaa
stos
xor
dec
jecxz
pop
jbe
and
lock
mov
shl
xor
sub
fld
cmps
js
add
mov
mov
push
sub
data16
out
pop
aas
xchg
out
xor
pop
sahf
dec
mov
mov
shl
sub
ss
jge
inc
lahf
jge
rcr
rcr
shl
(bad)
leave
cwde
cmp
pusha
push
mov
(bad)
mov
add
(bad)
aaa
dec
xor
in
and
cmps
loopne
inc
stos
mov
stc
lock
xchg
sbb
mov
xchg
mov
jmp
dec
mov
movs
and
mov
cwde
dec
cld
jmp
xlat
dec
xor
and
and
jecxz
lds
xchg
mov
push
xor
lods
neg
push
shl
out
sti
call
mov
mov
or
(bad)
lock
mov
inc
(bad)
xchg
pop
sbb
jg
cmp
pop
add
xchg
test
test
fcom
mov
test
jl
enter
addr16
nop
and
xor
or
sbb
cmp
add
xor
xchg
mov
inc
cli
stos
jl
adc
das
sbb
xor
aaa
mov
and
push
hlt
xor
cmps
mov
aaa
xchg
movntps
and
nop
shl
adc
sbb
mov
xlat
repz
adc
sub
inc
xchg
and
lds
test
arpl
fidiv
push
aam
lock
mov
cmc
dec
in
adc
in
cmp
shr
or
dec
push
inc
sub
ret
xchg
jae
mov
(bad)
int
ret
xchg
cld
js
pop
or
vmptrst
add
and
push
outs
jbe
cmp
stos
cmp
loop
push
out
sti
cmps
bound
sub
lods
fld
div
sub
xchg
jmp
cmp
out
or
mov
xor
push
adc
or
test
pop
shl
jnp
xor
sub
adc
xor
std
(bad)
int3
(bad)
push
xchg
sahf
add
aad
aaa
out
xor
popf
clc
xor
test
loope
or
adc
dec
jmp
rol
dec
shl
mov
jge
mov
stc
(bad)
mov
cwde
leave
pushf
jmp
aaa
test
test
sti
bound
pop
movs
mov
push
repz
mov
pusha
mov
lahf
jp
dec
cmp
push
lods
adc
mov
mov
jae
jmp
jno
and
jae
js
cli
jge
ret
mov
imul
sbb
sbb
sub
xchg
cmps
inc
mov
jmp
or
scas
fsubp
mov
mov
adc
cmc
add
ficom
(bad)
fdiv
ja
scas
ins
cld
push
aam
sbb
xchg
bound
scas
pop
int
add
sbb
xchg
jbe
mov
mov
cli
pop
or
lea
stc
add
leave
pop
jp
retf
adc
xchg
(bad)
addr16
je
cmps
fcmovnbe
loop
xor
push
sub
imul
shr
lahf
aas
mov
push
rcr
mov
or
outs
popf
(bad)
mov
loop
test
les
(bad)
imul
movs
shl
cli
push
rcr
add
mov
ret
push
sub
into
fsubr
mov
xor
cli
(bad)
int
inc
lock
and
cmp
retf
mov
add
popf
mov
test
popf
lods
xchg
cmps
inc
push
and
(bad)
loope
sub
test
cld
mov
scas
adc
mov
repz
fsubr
push
bound
mov
pop
nop
test
jmp
jmp
cmp
ins
std
mov
dec
outs
cmc
popa
mov
jmp
xor
dec
js
jge
push
inc
mov
aas
mov
mov
stos
jmp
sub
and
xlat
imul
int3
mov
add
xchg
lock
mov
inc
call
add
cmp
xchg
aad
xor
aam
fist
stos
pop
retf
pop
ret
gs
mov
mov
scas
mov
in
mov
sbb
add
inc
(bad)
ja
xor
xchg
fild
jecxz
pop
test
test
into
sahf
pop
mov
push
pop
in
mov
sbb
sub
dec
add
lds
sub
add
loope
out
retf
ret
dec
mov
mov
push
jnp
repz
cmp
adc
imul
imul
outs
ficom
pop
lea
sub
ret
aad
jns
aam
adc
dec
pop
ror
int
iret
cld
mov
out
or
(bad)
(bad)
popf
jnp
std
xor
setns
rcr
sahf
pop
mov
and
pop
sbb
sahf
loop
pop
inc
push
out
xor
mov
loope
cmp
adc
adc
fs
mov
mov
(bad)
hlt
cdq
pop
cmp
pop
retf
shl
sbb
or
inc
xor
ss
add
dec
sahf
or
lds
ret
pop
adc
idiv
imul
mov
jnp
mov
mov
jo
jnp
jns
aad
add
dec
stos
inc
int
repz
je
stos
loopne
ja
dec
ss
aas
jbe
sub
inc
sub
xchg
fidivr
pop
and
pop
cwde
and
sub
les
ds
imul
jg
dec
(bad)
daa
mov
sub
or
fcmove
pop
or
ss
adc
mov
cmps
fidivr
out
stos
test
inc
ficomp
fldenv
pop
cmp
sbb
fild
jge
pop
mov
and
movs
pop
push
xchg
stos
(bad)
jnp
inc
cmps
push
jle
ss
ds
mov
add
loope
cmp
or
sub
je
sub
nop
or
sar
aas
rol
sub
loopne
xor
jecxz
mov
rol
clc
dec
ds
sbb
pop
clc
adc
adc
dec
xchg
xchg
mov
int
repnz
fimul
jo
in
pop
inc
mov
ins
push
(bad)
jg
pop
cmp
mov
(bad)
movs
into
push
ret
xchg
fnstenv
call
push
not
pop
xchg
pop
and
push
sub
mov
(bad)
inc
cmp
xchg
stos
addr16
pop
hlt
and
aaa
xor
sub
xchg
add
out
mov
xor
sub
mov
add
dec
push
loopne
xlat
mov
mov
jnp
into
cmps
add
mov
or
retf
cli
cmp
xchg
jl
or
ja
mov
or
das
push
dec
lods
sahf
(bad)
sub
jl
pop
and
test
ror
and
iret
aas
mov
fwait
call
int3
scas
test
les
mov
add
adc
and
inc
mov
(bad)
jmp
test
mov
out
sub
imul
inc
into
pop
push
(bad)
mov
hlt
pop
adc
xchg
loop
mov
cwde
mov
repz
pop
iret
and
daa
xor
mov
in
adc
ror
and
test
cmc
and
inc
popa
cmp
outs
add
or
dec
pop
dec
push
mov
fs
daa
add
xor
popf
xchg
scas
sti
jmp
lods
lods
ret
push
ds
ret
pop
cmp
mov
int
dec
ror
(bad)
lahf
cmps
fs
stos
mov
xchg
lock
jecxz
or
push
out
(bad)
push
pop
es
aas
rol
(bad)
push
pop
mov
arpl
jae
dec
mov
jmp
test
xchg
jmp
jge
jno
or
into
mov
sub
xor
mov
(bad)
pop
sub
adc
fild
shl
sbb
pop
dec
ret
dec
mov
out
push
addr16
mov
mov
scas
das
xchg
mov
sub
out
cwde
fsub
sbb
pop
ror
repnz
aam
sbb
scas
inc
jno
dec
in
rcl
shr
repz
fcom
cmps
push
outs
jnp
sbb
fld
sbb
test
or
call
imul
or
dec
jmp
mov
push
push
mov
cwde
jo
or
int
inc
inc
movs
test
add
push
cmp
cmp
int3
test
ins
stc
or
sub
fisubr
mov
push
add
adc
clc
and
repz
fmul
cmp
adc
fst
mov
sub
test
jo
icebp
jo
sub
call
mov
(bad)
shr
and
(bad)
int3
lock
mov
mov
lock
jb
push
movs
mov
fwait
sahf
add
adc
ficom
rol
ins
sbb
gs
push
cmp
fidivr
pop
mov
xchg
dec
add
int3
packsswb
loope
shl
lock
cmp
jno
pusha
pop
ret
jge
aad
cmp
jg
or
push
retf
or
scas
pop
xchg
shl
fisttp
pop
or
mov
pop
and
lea
enter
dec
add
mov
je
in
retf
dec
out
mov
pop
int3
fadd
outs
outs
jns
push
mov
sub
outs
jmp
xchg
push
ds
pop
adc
ja
xor
push
add
push
bound
mov
xchg
inc
adc
aam
cwde
out
mov
sbb
jmp
mov
adc
repnz
pop
sbb
fidiv
sar
out
fbstp
mov
sub
cld
or
jne
push
jle
mov
jg
or
mov
xor
hlt
cmp
bound
fwait
out
push
sub
pop
jns
outs
icebp
call
mov
inc
xor
mov
and
jecxz
xchg
inc
gs
xchg
sbb
lock
cmps
dec
inc
jmp
xor
cmp
sub
inc
lahf
scas
data16
jno
retf
fisttp
data16
jbe
dec
sbb
mov
cmc
(bad)
data16
jnp
lods
dec
out
push
(bad)
je
fcmovnb
outs
inc
(bad)
mov
adc
inc
mov
sbb
popa
leave
imul
dec
add
test
movs
add
movs
xor
cmp
push
cmp
dec
jb
outs
out
jmp
and
je
movs
push
dec
loop
pop
scas
aas
or
inc
mov
in
int
cdq
jne
inc
sbb
inc
mov
movs
loop
(bad)
fadd
aaa
cmp
jg
movs
pop
leave
sub
mov
stc
imul
cmps
sahf
jb
push
inc
sub
xchg
and
add
imul
add
sub
jg
test
pop
int
or
popf
ds
aad
push
sbb
cld
rcl
aam
sar
pop
fnsetpm(287
shl
mov
xchg
(bad)
pop
dec
js
jne
jne
sahf
dec
cdq
outs
retf
data16
xor
add
mov
scas
jecxz
pop
inc
xchg
inc
in
push
jo
retf
mov
dec
pop
(bad)
and
loope
cmp
inc
outs
in
(bad)
addr16
pop
loopne
repnz
and
scas
das
dec
xor
xor
mov
movs
sahf
push
loope
add
ss
mov
mov
dec
xor
cli
retf
xor
xchg
adc
sub
pop
or
out
cli
jnp
fimul
lahf
repz
aam
mov
jmp
xchg
jg
fdiv
push
inc
rcl
mul
arpl
cmps
pop
fcomp
ret
pop
loopne
xchg
sub
ja
mov
pushw
sub
pop
into
cmp
ins
arpl
and
and
fsub
sub
in
xor
xor
or
aad
jmp
push
cmc
adc
mov
data16
ror
(bad)
xor
or
add
stos
cs
mov
daa
or
iret
pusha
and
inc
xchg
jp
xor
stc
sub
dec
and
or
(bad)
mov
and
imul
jb
movs
pop
ret
imul
and
sbb
movs
div
inc
ins
pusha
jno
sbb
dec
rcl
adc
test
arpl
jne
xor
dec
mov
int
add
push
xor
mov
mov
push
dec
and
cmp
xor
ret
sbb
jb
mov
sbb
xor
mov
popw
xor
repz
mov
inc
xlat
inc
mov
test
add
out
xor
rcl
cmp
cmp
mov
repnz
cmp
cmp
outs
call
and
int3
xchg
push
icebp
mov
jb
push
cmp
and
inc
clc
pop
sub
push
add
nop
mov
dec
push
fldenv
dec
and
aam
or
cli
call
sub
jl
jle
out
inc
fucomp
loopne
push
leave
into
outs
scas
xchg
jecxz
xchg
or
ja
ret
push
cmp
dec
scas
ret
mov
leave
sahf
stos
out
mov
mov
std
fsub
shl
mov
pop
inc
js
jnp
mov
ror
sub
repnz
adc
je
les
and
(bad)
in
das
test
mov
mov
jmp
fwait
push
jl
dec
xor
popa
inc
add
push
jbe
sti
test
mov
test
mov
dec
retf
add
hlt
shl
shl
gs
push
sahf
les
in
mov
sub
and
adc
(bad)
lahf
pop
pop
xor
sbb
scas
mov
add
dec
inc
in
mov
fsubr
sar
lds
aam
movs
pop
mov
jl
sub
jmp
ret
inc
cmp
mov
push
stc
icebp
cs
add
mov
sub
inc
xor
outs
dec
mov
or
and
fidivr
push
call
pop
xchg
test
cdq
pop
in
mov
pushf
and
and
mov
jle
movs
xchg
mov
adc
enter
cmp
aas
sti
mov
cld
dec
stos
loop
cmp
neg
(bad)
mov
cmp
popa
(bad)
mov
sub
dec
or
jbe
call
inc
adc
jne
sbb
cmp
push
repz
inc
mov
or
xchg
jae
jns
daa
inc
and
(bad)
scas
mov
mov
fiadd
pop
iret
scas
jno
cmp
push
inc
cmp
mov
repnz
test
ret
aas
adc
std
and
cs
xchg
lods
xchg
add
lods
push
nop
(bad)
inc
sbb
stc
push
xchg
rcl
push
out
jle
mov
mov
mov
dec
mov
jg
dec
add
jle
xor
pop
ss
in
imul
mov
lahf
loope
adc
jbe
jo
lods
iret
data16
nop
inc
dec
shl
push
mov
add
outs
jb
jno
xchg
test
icebp
and
mov
mov
ret
mov
cmp
ror
mov
jmp
mov
xchg
int3
stos
xor
and
sbb
jle
inc
push
int
mov
out
jns
jbe
xchg
pushf
cld
mov
adc
push
add
cwde
ret
jb
popa
fs
cs
pop
daa
pushw
pop
into
mov
push
mov
int3
and
pop
xor
movs
inc
js
in
push
sub
push
sbb
mov
lea
mov
sub
nop
repz
ficomp
test
sub
enter
cmps
mov
sub
jmp
mov
sbb
test
retf
movs
mov
dec
push
jnp
xchg
ja
int
and
mov
sahf
xor
or
pop
cdq
loope
fcomi
(bad)
test
and
in
or
push
jp
stc
pop
dec
retf
lods
test
xchg
xlat
daa
lar
mov
lds
and
xlat
cmps
inc
bound
jle
retf
imul
mov
fs
repnz
adc
add
inc
lahf
jnp
mov
jns
mov
outs
stos
retf
or
mov
clc
(bad)
pop
out
mov
test
(bad)
popa
shr
jno
pop
test
movs
addr16
and
out
mov
ins
jo
xor
push
pop
sbb
movs
sub
popf
cs
sti
es
push
rcl
pop
inc
mov
loop
push
cld
or
cmp
push
inc
xchg
fs
mov
inc
retf
call
lock
jbe
aam
pop
xchg
mov
bound
movs
in
adc
mov
ror
ficomp
jnp
or
icebp
and
js
xchg
iret
adc
into
es
xchg
push
inc
hlt
or
outs
fmul
outs
sbb
mov
xor
jge
push
pop
cmps
jg
jbe
div
xchg
mov
cmp
icebp
dec
add
int3
add
dec
fdivr
into
inc
cmp
xlat
outs
aad
xchg
fdivr
bound
mov
push
sbb
movs
sti
mov
call
mov
dec
ret
push
mov
fs
push
dec
adc
cli
(bad)
rcr
xchg
or
mov
sahf
and
(bad)
jg
sub
and
shr
push
fistp
je
arpl
xlat
out
mov
mov
mov
push
xchg
stc
sbb
lods
inc
in
xchg
dec
(bad)
fwait
retf
stos
add
pusha
push
sar
rcl
jmp
sub
rol
sbb
and
cmp
in
mov
scas
mov
arpl
fst
mov
and
aam
repnz
and
lds
iret
in
and
sub
jge
(bad)
add
mov
pusha
adc
retf
cmp
push
movs
lods
sahf
aam
inc
sbb
xchg
repnz
push
mov
pop
addr16
icebp
mul
arpl
popf
lods
in
mov
adc
int3
push
mov
mov
jae
push
rol
rol
hlt
(bad)
xlat
push
jecxz
jnp
bound
sbb
(bad)
out
out
adc
aas
out
dec
mov
stos
mov
mov
movs
push
dec
jb
repz
xchg
jmp
adc
jle
ret
test
or
mov
mov
xchg
mov
aam
or
sbb
fisubr
mov
xor
cmp
sbb
push
jecxz
adc
mov
add
inc
mov
pusha
sub
in
sbb
ret
adc
adc
(bad)
push
mov
loopne
aaa
mov
fwait
push
cmp
pop
les
es
lods
and
pop
or
stos
xor
std
movs
(bad)
push
mov
movs
sbb
out
add
gs
and
inc
call
xchg
out
dec
shl
inc
sbb
and
xchg
add
scas
call
inc
ret
stos
push
or
sti
hlt
xor
arpl
mov
inc
in
sahf
stos
and
fisttp
pop
dec
sbb
clc
clc
xchg
pop
jg
test
je
(bad)
jmp
sbb
dec
xchg
(bad)
icebp
imul
ror
ds
add
mov
mov
inc
sahf
adc
(bad)
scas
xor
aaa
loopne
add
and
test
scas
fnsave
mov
out
cs
inc
push
dec
(bad)
call
popa
int3
rcl
outs
inc
movq
pop
mov
push
ja
mov
clc
xchg
fldenv
cs
fs
scas
push
icebp
out
pop
les
(bad)
movs
or
(bad)
jmp
jo
mov
rcr
mov
nop
cli
or
fdiv
fwait
mov
out
clc
dec
push
aad
xor
imul
xchg
les
mov
movs
outs
lods
sub
enter
jle
pop
data16
aas
leave
cld
sbb
and
test
mov
retf
pushf
add
push
cmp
xchg
mov
inc
jle
rcl
pop
mov
mov
sub
add
jne
das
xor
aam
adc
outs
(bad)
retf
inc
mul
jmp
adc
cmp
or
cmp
or
sbb
into
and
mov
mov
mov
mov
ss
sub
out
jb
sti
in
adc
add
pop
lods
test
mov
inc
sub
std
xchg
cmp
dec
and
cmp
loop
retf
pop
movs
mov
dec
es
or
xchg
ins
xor
movs
sbb
inc
(bad)
js
mov
xchg
and
cmp
std
mov
or
mov
jns
popa
xchg
cmp
ins
cmp
and
jp
test
inc
stc
inc
pop
pop
mov
or
hlt
inc
pop
and
mov
fcom
test
out
fisttp
add
xor
xchg
(bad)
das
out
inc
xlat
in
dec
outs
mov
mov
scas
(bad)
aad
loop
xchg
jns
pusha
mov
ds
aas
or
test
or
xor
mov
test
scas
pop
mov
mov
and
imul
stc
pop
mov
dec
gs
popa
adc
loopne
fmul
and
and
enter
mov
aam
or
dec
and
mov
xor
mov
test
pop
push
aas
call
ins
test
outs
rcr
push
enter
(bad)
or
adc
push
(bad)
in
inc
ss
outs
out
aad
sub
(bad)
in
jmp
call
fwait
add
or
cmp
lahf
jae
fwait
dec
ja
add
jmp
inc
or
add
cmc
jno
retf
clc
mov
adc
sub
repz
add
jne
sbb
inc
xchg
pop
lds
sar
pop
mov
dec
push
xchg
stos
cmp
jne
dec
cld
jno
fst
adc
xchg
mov
js
fldenv
mov
dec
ins
dec
jnp
mov
dec
fwait
mov
or
lock
push
fldenv
cs
sbb
loop
sub
jns
sub
pop
or
mov
frstor
fisub
pop
jo
pushf
mov
dec
jb
jns
in
xchg
ficomp
sub
push
stos
xchg
leave
(bad)
cli
cmp
jmp
sub
hlt
hlt
fmul
xchg
jne
and
mov
cdq
fstp
jg
popw
or
push
or
in
mov
xchg
rol
sti
pop
inc
ficomp
push
jne
popa
push
add
rcl
push
fwait
in
xchg
and
dec
pusha
sbb
push
sahf
pusha
adc
xor
aam
fbstp
add
or
sub
xor
imul
(bad)
sbb
stos
daa
mov
and
cmp
les
cmc
mov
stc
push
xchg
jge
retf
pop
and
inc
pop
or
jp
fsubr
xor
aas
mov
mov
outs
and
imul
mov
push
nop
pushf
sti
pop
pop
je
shr
retf
fcomp
push
jmp
leave
mov
or
add
mov
mov
adc
inc
mov
ins
ja
adc
imul
jo
lods
adc
add
mov
cmp
popa
jge
or
mov
mov
das
pop
mov
movs
arpl
div
adc
fild
pop
test
not
jno
repz
dec
fcmovnb
pop
ins
mov
push
push
js
add
rcr
repnz
mov
fs
sti
out
jecxz
jnp
out
popf
das
pop
jne
jb
jecxz
imul
jns
mov
fwait
inc
cmp
push
cmp
push
pop
or
in
lds
into
inc
jge
fwait
mov
push
and
call
clc
shl
stos
and
pop
jo
push
jns
xor
jl
xchg
or
and
hlt
(bad)
sbb
or
mov
pushf
jne
dec
xchg
jae
fstp
addr16
arpl
jb
repz
repz
cs
dec
cmps
inc
xchg
push
inc
dec
xchg
je
cmp
cli
cmc
out
outs
test
fisttp
ftst
sar
pop
fistp
movs
adc
(bad)
and
aas
jmp
jbe
ja
xchg
loopne
mov
icebp
sti
lahf
mov
mul
jae
(bad)
and
dec
outs
cli
mov
pushf
dec
in
jmp
pop
lods
pop
mov
mov
fs
mov
cld
(bad)
lods
and
pop
(bad)
sbb
jnp
in
inc
dec
pop
mov
jo
stos
ret
lods
mov
out
jl
fcom
pop
xor
pop
cli
lahf
jbe
xchg
xchg
call
repnz
loope
pop
movs
or
stos
gs
std
adc
test
jne
dec
es
push
mov
push
cmp
dec
cmp
aas
pop
stc
cmps
sub
mov
inc
mov
(bad)
dec
ret
lds
add
es
cmp
and
imul
jp
or
adc
arpl
pop
(bad)
jecxz
stc
cwde
mov
icebp
mov
xchg
mov
lods
bnd
scas
pop
bsr
js
int3
popa
sub
sar
std
jo
cmps
sub
(bad)
and
rsm
add
cmp
sbb
cld
sbb
das
movs
scas
jmp
adc
xor
push
cdq
inc
cmp
cs
mov
dec
cmp
dec
out
jle
sbb
cmp
xor
fild
mov
cs
inc
les
fcomip
sbb
out
jae
mov
jbe
sub
inc
mov
mov
mov
mov
mov
cs
cli
jle
push
aad
sub
xor
fcom
and
sub
xor
sbb
and
sar
pop
enter
arpl
add
cwde
mov
retf
movs
aam
lea
das
adc
ss
popa
jns
int3
aas
imul
retf
call
mov
loopne
dec
or
xchg
ss
imul
retf
(bad)
xor
and
mov
pop
cmps
scas
mov
popa
inc
aad
add
aad
lods
gs
pop
les
cmp
or
arpl
sub
push
(bad)
pop
mov
jecxz
mov
shr
inc
div
ins
adc
rcr
in
out
xchg
outs
mov
sub
adc
add
sub
jbe
fbstp
pop
div
push
loopne
cli
sbb
cli
push
(bad)
(bad)
nop
das
xchg
pushf
sub
jle
mov
repnz
push
mov
mov
cs
add
cli
push
imul
leave
clc
lea
mov
cwde
dec
add
pop
dec
(bad)
fdiv
loopne
aas
adc
aaa
jge
stc
test
jmp
sub
push
std
jg
sub
mov
xchg
jns
out
in
push
ret
pushf
sar
jmp
(bad)
or
vpmadcswd
jmp
cmp
pop
(bad)
lods
jmp
mov
jl
sub
adc
lock
pop
or
(bad)
fist
pop
or
jmp
mov
and
cmps
int3
push
test
sub
push
retf
in
pop
jmp
cld
icebp
xchg
cwde
inc
repz
adc
or
outs
(bad)
jnp
push
jge
xchg
sub
inc
cmp
and
(bad)
aam
ds
imul
push
test
out
sbb
sub
lock
out
mov
test
fdivr
pop
fstp
jmp
cwde
push
push
pop
pop
(bad)
xchg
inc
mov
jmp
dec
call
ja
push
inc
test
std
sbb
mov
or
les
jp
imul
hlt
int3
mov
push
cwde
mov
push
out
in
cmc
push
push
cmp
fcmovnb
pop
push
call
pop
cld
(bad)
and
test
inc
and
fxch
mov
lock
fsub
and
dec
jnp
xchg
aam
loop
(bad)
dec
sbb
jecxz
mov
jne
jns
out
es
shr
scas
xchg
std
dec
hlt
mov
pop
jl
fdiv
test
cmp
shr
dec
or
mov
push
cdq
or
nop
mov
lods
test
mov
je
mov
fistp
(bad)
mov
mov
sahf
fnsave
jns
repz
mov
push
stos
push
xchg
ja
push
adc
sar
jg
in
fwait
rcr
lock
inc
enter
xor
idiv
cmp
sbb
lods
ror
sub
add
pop
rcr
push
xor
and
test
out
ds
hlt
jg
jb
ins
in
cdq
push
or
les
xor
push
loope
das
pop
aas
retf
inc
xor
cmp
mov
push
loopne
push
xchg
retf
push
adc
dec
mov
jge
mov
add
aad
inc
or
scas
mov
fmul
jno
xor
jmp
sbb
add
ss
loope
leave
adc
(bad)
ror
xor
mov
pushf
sahf
aas
nop
add
cmovb
loop
ret
mov
xor
jne
cli
je
out
sbb
das
(bad)
sbb
mov
rcr
pop
or
ja
test
add
clc
fcom
mov
adc
add
cmp
in
mov
sub
xor
mov
test
cld
lahf
retf
lea
jmp
mov
call
fbld
add
lods
inc
stos
sti
outs
sbb
and
push
bound
and
aam
mov
hlt
scas
mov
sub
inc
retf
icebp
and
movs
shl
outs
rol
jl
cdq
popf
cmp
xchg
test
arpl
ss
mov
call
mov
mov
pop
xchg
sbb
cmp
movs
push
in
xor
jl
mov
add
pusha
mov
pop
clc
dec
xor
stos
sbb
dec
enter
outs
push
sbb
call
retf
imul
xchg
or
repnz
aas
pop
xrelease
mov
test
stos
neg
jae
in
xchg
pop
imul
xor
ins
dec
dec
ror
(bad)
sub
cmps
sbb
aad
test
ret
(bad)
cwde
pop
add
lods
imul
mov
mov
sub
pop
jge
dec
sub
pop
pop
push
cli
push
push
pushf
frstor
imul
xchg
ins
cmps
xchg
sub
adc
out
pop
jmp
push
in
lods
sub
xor
jb
fild
pop
xor
jp
movd
loop
and
call
xchg
retf
pop
and
addr16
in
popf
push
inc
or
aaa
pop
iret
fwait
dec
imul
js
fstp
xor
xor
les
in
jne
repz
adc
pop
mov
js
js
xchg
outs
or
inc
cmc
sub
cmp
mov
cmp
push
or
imul
mov
loope
mov
bound
dec
ins
ja
enter
leave
shr
repnz
aad
mov
pop
mov
xchg
stos
or
icebp
mov
fs
cmp
(bad)
xlat
dec
dec
vrsqrtps
lods
xor
imul
sub
jg
jge
dec
test
xchg
cs
adc
cmp
push
mov
stc
xor
jbe
sbb
pop
sub
sub
rol
int3
fadd
in
sbb
test
test
movs
adc
inc
cmp
loopne
jne
inc
or
mov
and
and
loop
into
stos
or
jg
and
or
popa
lods
inc
retf
lahf
push
adc
xchg
clc
test
push
push
test
dec
cmc
stc
cld
push
ja
mov
loop
add
imul
mov
inc
or
in
stos
mov
(bad)
push
adc
push
sbb
outs
fdiv
(bad)
popa
(bad)
add
retf
fbld
mov
xor
xchg
out
inc
hlt
pop
lea
jge
clc
inc
ror
sub
xchg
mov
test
push
nop
cmp
icebp
adc
mov
not
es
push
sub
ins
mov
loop
clc
cmp
fbstp
hlt
test
imul
push
or
fcom
out
and
dec
push
xchg
movs
in
into
pop
sbb
repnz
inc
or
push
iret
fwait
popf
mov
aam
test
add
fstp
pop
das
push
push
add
out
or
aad
adc
outs
call
bound
dec
ret
add
cmc
mov
mov
jg
daa
mov
es
push
inc
mov
loop
imul
loope
aas
lea
or
pop
sbb
out
inc
mov
idiv
loopne
in
out
push
sub
test
jne
je
inc
mov
mov
aas
or
dec
std
cmp
pop
push
mov
movs
xchg
pop
fild
mov
add
xchg
pop
sti
mov
adc
aad
jmp
cwde
pushf
xor
inc
jo
mov
cmp
scas
mov
ins
push
pop
bound
cmps
(bad)
outs
push
xor
or
addr16
xor
(bad)
daa
xchg
dec
arpl
repz
push
push
cmp
hlt
pop
inc
inc
mov
xor
cwde
cmp
loop
fbld
pusha
xchg
adc
clc
and
sbb
and
or
(bad)
mov
inc
clc
retf
jl
mov
mov
mov
popf
call
mov
add
ret
mov
loopne
sub
inc
pushf
dec
jle
push
retf
jp
pushf
imul
in
cmp
nop
sbb
(bad)
adc
retf
shl
jns
mov
jno
dec
jge
push
sub
cmc
arpl
or
hlt
mov
aaa
(bad)
ret
pop
movs
add
xchg
dec
ficom
fnstenv
pop
les
test
fnsave
loop
inc
test
repz
sar
scas
leave
cmp
sbb
fiadd
fidivr
push
jmp
cmp
xchg
rcr
mov
lods
mov
pop
xor
and
add
arpl
or
lods
mov
push
and
inc
cdq
jo
retf
jbe
xor
imul
add
add
cmp
mov
(bad)
in
sbb
aas
or
loop
les
scas
jge
out
jmp
sti
mov
jmp
aam
dec
loope
xor
pushf
push
mov
shr
pop
sar
fst
ja
sub
dec
sbb
push
sub
mov
cmp
mov
push
add
rol
inc
adc
cmp
lahf
fiadd
callw
mov
das
call
mov
jbe
cmc
and
test
mov
jle
lods
adc
mov
sub
sbb
ds
mov
(bad)
test
push
mov
mov
scas
mov
imul
or
adc
sub
aaa
lea
or
or
mov
in
pop
mov
call
lods
jo
outs
dec
ins
mov
imul
out
dec
das
ss
dec
fs
cmp
push
inc
into
ror
cmp
dec
int3
inc
cmp
inc
cmps
out
cmps
stc
rcl
jae
mov
and
aas
rcl
ins
jmp
mov
movs
bound
cmps
mov
cmp
popf
imul
ja
or
dec
sbb
icebp
dec
repnz
jecxz
pop
ins
cmc
js
mov
cmp
cmp
dec
mov
fmul
test
loop
loopne
add
jmp
jmp
and
mov
ret
sub
push
xchg
and
test
iret
mov
add
aad
adc
test
push
scas
out
cmp
sub
cmovp
or
or
mov
mov
loopne
push
jno
cwde
repz
pushf
rcr
pop
push
sub
into
das
test
int
aas
popf
mov
call
jp
sbb
enter
lock
jmp
and
jge
jp
ins
int
sbb
ins
in
inc
sub
scas
xchg
lds
mov
or
xchg
lahf
call
es
jbe
mov
mov
nop
popf
call
repz
scas
push
dec
(bad)
jmp
add
out
fist
popa
fs
fcmovb
aad
xchg
xor
xchg
xchg
and
hlt
xchg
int
pop
cmp
jno
cmp
push
jle
mov
or
rol
dec
lods
fcomp
pop
push
sub
xor
jmp
pop
jmp
clc
push
dec
iret
dec
mov
pusha
rol
bnd
loop
retf
enter
imul
cmps
cmp
ds
xchg
repnz
adc
in
sbb
sbb
mov
inc
mov
xchg
push
jmp
mov
adc
inc
xor
jg
sub
lahf
fdivr
mov
sbb
cdq
(bad)
pop
and
and
pop
push
setg
push
(bad)
pop
pusha
pop
mov
xchg
popa
lods
fstp
hlt
push
in
jg
outs
jmp
rol
sub
iret
sahf
xor
cmp
int3
inc
cmp
je
cmp
cmps
(bad)
aad
cmp
shl
test
ss
push
lock
ins
cmp
jg
xor
sti
es
dec
pop
mov
pop
aaa
mov
ror
pop
mov
xchg
push
sbb
or
sub
pop
and
cld
cld
xchg
lods
ins
les
jns
popa
lock
repnz
jle
fsubr
pushf
loop
retf
dec
fldcw
fcom
pop
push
lahf
xor
inc
sub
call
clc
imul
shl
adc
jg
pop
cwde
imul
mov
add
mov
fsubr
imul
push
test
adc
push
mov
retf
jle
fdivr
loop
clc
cs
jp
lods
push
aad
out
pop
fs
out
sub
push
dec
mov
out
ss
add
sbb
mov
pop
(bad)
test
cli
push
outs
pop
(bad)
das
push
inc
add
or
pop
lock
mov
pop
cmp
pop
shl
sar
dec
dec
sbb
mov
xchg
lds
mov
push
inc
add
ss
mov
ds
popa
mov
into
pop
mov
(bad)
fadd
(bad)
call
cmc
dec
inc
sahf
jae
push
pop
gs
sub
aaa
cmp
sbb
jmp
mov
or
adc
je
pop
retf
pusha
fwait
or
je
xor
mov
mov
cmc
test
cld
cmp
shl
adc
(bad)
fld
fild
loope
mov
mov
mov
icebp
inc
iret
cmp
arpl
popa
xchg
(bad)
test
or
std
cdq
pushf
jecxz
scas
push
mov
adc
xor
and
sbb
adc
lea
or
pushf
ins
jno
inc
push
aas
sbb
xchg
ss
mov
jne
sbb
push
push
or
sub
push
pop
loopne
inc
sbb
(bad)
das
pand
call
ret
pusha
mov
test
sbb
xchg
out
jb
jbe
mov
movs
std
cmps
xor
xor
inc
dec
pop
shl
and
hlt
push
(bad)
jno
jb
lock
test
cli
es
ss
iret
pop
aaa
push
push
push
dec
rol
paddsb
ds
jg
mov
pusha
cwde
pop
int3
mov
xor
ja
pop
mov
mov
push
adc
and
mov
cmp
inc
pop
push
in
sub
jmp
inc
test
outs
xchg
mov
push
ins
(bad)
fmul
xor
fcmovnb
ja
das
push
inc
call
js
mov
and
xor
lock
xor
push
and
in
imul
outs
repnz
lahf
inc
dec
and
add
rol
pop
(bad)
ins
xor
or
iret
sti
push
sbb
int3
mov
loope
fidivr
stc
mov
or
stos
in
call
pusha
jg
pushf
ret
sub
sbb
stos
dec
lea
add
hlt
jg
and
test
mov
div
icebp
cmp
mov
mov
dec
sbb
jnp
push
mov
stos
inc
(bad)
jnp
cwde
jae
or
mov
dec
leave
add
shl
stos
inc
mov
fdivp
push
fs
sbb
int
mov
std
repnz
push
dec
sbb
sbb
mov
in
fcomip
mov
xchg
mov
and
imul
in
adc
jbe
mov
stc
push
pop
pop
or
mov
push
or
retf
xchg
mov
and
icebp
(bad)
ror
pusha
mov
jecxz
pusha
loop
push
jb
into
outs
xor
pop
fstp
fdivr
sub
(bad)
mov
adc
add
scas
dec
inc
push
pop
xchg
add
pushf
push
outs
pop
dec
mov
mov
cmp
pop
outs
xor
and
push
call
dec
xor
jge
adc
stc
pop
int3
pop
addr16
sub
gs
mov
jle
push
pop
fucomip
and
mov
add
into
xchg
jbe
rol
fcom
pusha
or
mov
add
(bad)
mov
sbb
(bad)
cwde
mov
pop
mov
sub
adc
dec
pop
(bad)
in
ins
sbb
inc
sahf
xor
adc
adc
popa
push
mov
pop
jmp
pop
mov
repz
mul
movzx
int3
mov
mov
in
pop
ins
outs
sub
jmp
or
ret
mov
jnp
cmps
sub
into
push
push
xchg
scas
test
(bad)
xor
push
fstp
fs
pop
out
(bad)
xchg
test
xor
and
jmp
push
aad
scas
or
test
iret
loope
mov
das
jno
sahf
fst
lds
fadd
and
mov
or
repz
inc
push
bound
jb
(bad)
out
push
and
or
add
push
jge
sbb
jmp
push
mov
mov
cwde
mov
mov
mov
div
rcl
cmp
xor
push
hlt
imul
xor
add
sub
mov
mov
jmp
fild
das
outs
daa
test
or
jp
adc
stos
push
enter
in
xchg
cmp
fsubr
sbb
sub
mov
inc
mov
imul
push
jmp
fs
sub
sbb
or
fwait
jmp
jl
sub
mov
mov
pop
in
cmps
mov
mov
nop
sub
add
loop
sbb
inc
in
call
mov
lods
scas
loopne
dec
(bad)
in
rol
mov
dec
adc
dec
sbb
and
xchg
mov
imul
xchg
inc
xor
inc
push
ror
out
lahf
push
fmul
dec
rcl
mov
mov
adc
ss
xor
test
xor
nop
or
jne
adc
out
mov
les
mov
jbe
dec
xchg
clc
retf
and
ficom
fsubr
iret
or
cmps
dec
ins
les
movs
jae
inc
in
cs
xor
movs
jmp
sub
inc
stos
add
shr
stos
adc
pop
pop
cmp
data16
add
push
sub
ins
gs
jmp
xor
and
inc
leave
xor
(bad)
mov
dec
cmp
mov
stos
stos
cmc
cmp
cmps
inc
retf
dec
cld
mov
push
fxch
(bad)
and
add
aad
sti
fs
mov
ins
jo
xchg
lds
popa
sub
mov
mov
xchg
sar
cdq
icebp
mov
ret
or
ret
sub
dec
aam
jno
iret
or
ret
push
test
xchg
jne
scas
jmp
test
popa
or
ret
push
hlt
out
enter
ja
jnp
out
icebp
xchg
xor
jb
ds
dec
pusha
popa
mov
dec
pushf
cli
mov
(bad)
retf
sub
dec
adc
mov
sub
cld
lea
cmp
jnp
clc
xchg
rol
xor
push
pop
pop
jl
mov
pop
imul
dec
inc
xchg
cmp
repz
mov
jns
push
xchg
push
enter
adc
mov
inc
jmp
or
xchg
arpl
cs
in
in
inc
adc
mov
ins
dec
mov
pusha
and
pop
lds
fdiv
cvttps2pi
sub
inc
xor
loope
xchg
sub
dec
adc
jp
sahf
data16
mov
popa
aad
clc
jne
shl
add
(bad)
std
mov
dec
xor
xor
mov
push
popa
(bad)
out
lods
comiss
dec
mov
mov
and
jmp
(bad)
push
dec
adc
sbb
xor
addr16
lds
mov
imul
movs
xor
push
std
(bad)
jl
inc
dec
(bad)
pop
jle
xor
pop
fucomp
sbb
mov
ret
mov
clc
xor
(bad)
fisttp
adc
in
js
repz
les
mov
push
inc
and
outs
nop
loop
mov
mov
ins
cmp
add
sbb
call
(bad)
je
sbb
xchg
inc
push
pop
mov
lds
lea
dec
in
xchg
sti
push
pop
push
out
sbb
test
cmps
mov
(bad)
fisub
into
imul
out
mov
repnz
xor
mov
outs
imul
mov
das
je
jne
cli
cmp
stos
ins
mov
mov
arpl
(bad)
sar
fincstp
aad
lea
mov
loop
out
bnd
sbb
stos
sub
mov
mov
cmp
mov
mov
xchg
aaa
pop
imul
fcom
add
jo
or
movs
sub
imul
mov
jmp
or
and
inc
pushf
cmp
add
xor
mov
xor
xor
jg
mov
enter
dec
inc
and
sub
cmps
xchg
inc
adc
pop
loopne
mov
jecxz
mov
and
in
xor
sub
mov
sbb
sar
idiv
add
adc
movs
fdivr
jnp
fidiv
cmp
dec
inc
out
gs
cmps
xchg
jb
and
rol
pusha
(bad)
pop
xchg
test
retf
retf
ja
dec
popa
ins
and
sub
loop
(bad)
push
aaa
jo
loop
sbb
and
arpl
lods
push
je
outs
xchg
mov
fsubr
stos
(bad)
dec
stos
xor
std
stos
stos
push
in
out
mov
or
or
pop
rol
lds
cwde
jnp
inc
pop
add
xchg
fchs
push
cli
pop
sahf
mov
add
sahf
push
cmp
xchg
xlat
sti
popf
fdiv
or
test
cmp
sub
call
inc
aas
nop
or
xchg
dec
dec
loop
jno
ja
adc
mov
nop
cdq
fs
inc
mov
(bad)
out
leave
dec
outs
xlat
pop
mov
cld
lds
and
retf
push
inc
jp
fild
add
iret
inc
mov
jb
and
cmps
xchg
cld
sub
das
ins
push
pop
shl
in
lds
loope
ret
pop
mov
push
jae
lock
push
or
test
bound
movs
cmp
dec
xor
cmp
in
pslld
xchg
leave
cwde
cmc
cmp
fs
test
jge
mul
cmp
retf
out
scas
jb
nop
mov
data16
mov
add
cmp
ret
arpl
dec
xor
popa
sub
pop
pop
call
test
cmp
sub
sahf
jb
jmp
sub
lds
scas
adc
(bad)
hlt
cmps
push
(bad)
repz
jnp
pushf
or
std
dec
push
cmp
pop
ja
lea
mov
fst
jno
repnz
packuswb
xchg
mov
sub
mov
int3
cld
sti
ins
mov
pop
fild
mov
mov
pop
(bad)
lock
or
scas
stos
inc
cmp
stc
and
push
jmp
call
inc
jp
jecxz
stos
sub
shr
sbb
pusha
int3
mov
adc
js
mov
jge
std
aam
arpl
mov
xchg
mov
jb
call
loop
push
sti
test
out
into
adc
mov
out
shl
stos
add
pusha
jne
mov
push
fstp
xchg
leave
je
lods
adc
inc
dec
mov
jle
adc
xor
jl
xlat
popf
inc
stos
das
popa
push
sar
cmp
pop
cld
jge
push
xchg
test
cmps
ins
xor
xor
xlat
jecxz
jp
test
mov
nop
cmp
mov
icebp
fistp
lds
pop
adc
or
pop
push
mov
fnsave
mov
hlt
and
out
stc
stos
(bad)
adc
cmp
sbb
ja
scas
jmp
(bad)
sub
jmp
push
stos
popa
sub
call
mov
push
jns
data16
push
push
sub
push
lods
sbb
mov
xchg
enter
mov
or
dec
push
loopne
jle
inc
mov
mov
ficom
sbb
ds
cmps
and
dec
repz
fst
mov
cs
xlat
mov
fstp
mov
lods
push
test
xchg
inc
jo
pop
arpl
push
or
shl
add
shl
pop
xor
push
test
cmp
repz
xor
cli
sbb
pusha
test
dec
imul
stos
mov
aad
adc
lods
sbb
pop
push
fs
jp
fwait
bound
lods
sahf
sub
push
ins
iret
mov
jmp
rol
in
into
push
xor
es
hlt
jno
movs
movs
inc
hlt
enter
xlat
jno
call
mov
push
dec
pop
in
dec
push
jno
fstp
or
test
xchg
mov
and
jmp
ins
mul
dec
sar
repnz
inc
and
mov
cdq
leave
xor
mov
cmc
push
xor
addr16
out
test
push
add
ficom
cmp
cmps
(bad)
push
pop
lds
and
jns
pop
push
cmp
sub
jmp
cmp
or
xor
repz
sbb
jg
ret
and
and
mov
lahf
sbb
test
fwait
iret
cmp
sbb
fidivr
leave
cmc
cmp
enter
jge
dec
xchg
fwait
popf
xrelease
out
fdiv
inc
sti
mov
(bad)
mov
sbb
rcr
or
push
inc
scas
mov
sbb
dec
popa
iret
add
adc
xor
jns
mov
xor
jle
imul
mov
or
sub
adc
std
pop
and
fs
add
fild
ficomp
adc
xchg
dec
cli
shl
pop
add
adc
jmp
out
xchg
mov
test
jns
test
sbb
cmps
dec
inc
movs
jmp
sbb
xor
jmp
pop
add
sbb
and
mov
mov
dec
shr
push
frstor
js
mov
add
test
cmp
test
mov
sub
(bad)
or
pop
mov
inc
cli
xor
mov
cmc
nop
adc
rcr
or
push
push
jle
fwait
or
mov
sbb
arpl
sbb
test
mov
(bad)
movs
xchg
lea
in
mov
hlt
mov
pop
adc
test
or
ja
pop
adc
mov
cmp
pop
push
push
add
push
push
mov
sbb
push
sub
int3
pop
mov
adc
pop
mov
fwait
aad
mov
push
jae
bound
inc
ins
call
int
addr16
lock
jge
daa
enter
int
cs
js
inc
(bad)
in
xchg
popf
push
mov
bound
cs
mov
jmp
aas
pop
test
dec
xor
das
test
cmc
stos
mov
xor
pushf
jne
lods
xchg
mov
pop
stos
hlt
scas
add
xor
int3
inc
or
enter
cli
outs
rcr
fidivr
aas
cmc
daa
nop
sti
test
xchg
es
out
add
bound
or
inc
cdq
repnz
ror
cmp
out
push
fisubr
adc
hlt
iret
jecxz
or
das
outs
jecxz
inc
add
repz
dec
fst
push
sub
inc
cmovs
pop
imul
xchg
jg
jge
shl
ss
iret
mul
in
and
and
add
push
fistp
adc
repnz
jb
cs
stos
jge
movs
xchg
clc
aam
fstp
push
jmp
je
retf
loope
mov
inc
jne
or
pop
adc
shl
int
pop
mov
mov
ret
add
xchg
les
sbb
aaa
dec
mov
js
iret
mov
movs
in
std
mov
dec
mov
ror
dec
cmp
cli
ret
loop
jns
jg
mov
(bad)
mov
xchg
or
cld
in
in
and
dec
popa
lods
retf
(bad)
sti
inc
inc
sti
xor
lods
scas
retf
enter
(bad)
cmp
add
xchg
jne
xchg
jae
mov
push
cdq
loop
xchg
cdq
sub
inc
ret
jmp
sub
daa
mov
adc
mov
loopne
sub
add
mov
adc
test
and
imul
or
or
js
outs
add
mov
sub
icebp
enter
add
ficom
xchg
shl
push
lods
mov
jmp
adc
jg
push
js
call
push
adc
and
or
push
jle
(bad)
sub
scas
scas
pushf
jle
in
sbb
push
dec
or
arpl
sub
icebp
mov
retf
sahf
mov
loope
scas
fild
ror
sahf
xchg
jno
hlt
sub
mov
adc
xchg
icebp
sub
data16
mov
test
dec
rcr
pop
inc
icebp
xchg
ret
jb
pop
xchg
mov
inc
xor
ss
sbb
cwd
aad
cmps
shr
and
aas
retf
jnp
xlat
fucomi
add
pop
mov
mov
adc
xchg
je
pop
test
bound
pop
adc
and
mov
or
cld
mov
sub
sbb
sti
popfw
cmp
loop
add
icebp
test
xchg
inc
xchg
mov
movs
hlt
loopne
push
std
jmp
mov
fistp
and
push
shl
sbb
jmp
or
jb
mov
mov
sbb
cmp
mov
arpl
cmp
push
repz
sbb
xor
add
xchg
arpl
pop
in
cwde
xchg
retf
and
xchg
(bad)
sub
cmp
jp
add
pop
push
cmp
pop
jmp
or
adc
loopne
xchg
std
test
mov
aad
pusha
(bad)
in
xchg
(bad)
jl
nop
cmc
mov
enter
test
jo
in
xlat
outs
mov
push
in
push
jnp
stos
mov
xchg
outs
cld
cld
xor
sbb
jmp
pop
push
adc
sbb
cmps
and
add
mov
pop
test
jbe
jmp
hlt
(bad)
cmp
jmp
dec
jno
inc
push
mov
rcr
or
lds
push
mov
push
jmp
inc
arpl
sbb
xchg
xlat
push
rcl
cmp
pop
cmps
push
push
dec
mov
(bad)
jns
cmp
sub
xchg
stc
lock
sbb
loopne
inc
fbld
push
add
sub
jecxz
jmp
stc
rcl
pop
push
and
fadd
pusha
(bad)
push
lea
pop
popa
inc
in
sti
dec
adc
movs
adc
fdiv
add
jmp
inc
sbb
imul
dec
pop
adc
fistp
outs
push
das
xchg
jecxz
je
test
std
fadd
pop
and
add
ins
push
jecxz
mov
push
inc
or
add
dec
dec
dec
movs
pop
push
pop
lods
jae
jae
into
ror
fs
xor
lahf
xor
mov
fs
xchg
pop
movs
sub
in
mov
sub
pop
out
ret
test
mov
into
cwde
adc
test
mov
and
cmp
add
into
outs
jno
popf
mov
repz
xchg
mov
outs
add
aaa
pop
mov
lahf
int
mov
mov
and
jo
mov
lods
xchg
leave
(bad)
fisttp
fisub
mov
sbb
push
std
sub
xchg
jle
mov
shl
nop
push
jne
popf
je
lock
movs
ins
mov
dec
bnd
cmp
jno
out
cmp
adc
out
clc
iret
pop
mov
mov
push
dec
pop
jns
jno
push
cmp
or
add
arpl
dec
push
or
mov
xchg
mov
jb
push
cmp
push
into
lahf
fdivr
pop
add
aam
shl
imul
and
pop
inc
test
imul
xor
xchg
mov
cwde
adc
mov
inc
xchg
lahf
xor
in
in
sub
cdq
xchg
mov
hlt
lods
in
dec
jnp
cmp
and
push
add
test
lods
or
loopne
out
xchg
jg
push
loopne
pop
or
jge
rol
sbb
adc
dec
xchg
test
or
pushf
push
mov
ins
xor
inc
sar
xchg
xor
(bad)
cmp
mov
into
clc
ss
movs
add
loop
loopne
push
push
xor
(bad)
out
jbe
xor
mov
cmp
pushf
scas
sahf
hlt
push
nop
dec
sbb
mov
or
popf
sub
push
push
sub
loop
jmp
push
arpl
data16
push
les
adc
push
mov
xor
fisubr
ret
adc
sbb
pop
loop
sub
jb
mov
pop
cli
push
ret
ja
pop
mov
mov
sub
mov
push
sub
add
mov
cmp
mov
sbb
hlt
mov
jecxz
push
sub
mov
dec
call
sbb
int3
jge
hlt
das
scas
imul
std
icebp
mov
scas
arpl
and
jmp
mov
add
xchg
lods
xchg
je
or
mov
pop
xor
push
sub
cmp
test
adc
pop
ins
or
in
lds
or
sahf
xchg
fsubp
pusha
mov
cmps
imul
jecxz
inc
dec
jb
je
mov
loopne
or
mov
jmp
and
ins
cmp
das
dec
sbb
adc
test
adc
mov
or
mov
cmps
sub
jecxz
xchg
ficom
es
fistp
aas
pop
fist
ret
push
or
das
jg
jmp
out
sub
jno
bound
loopne
pop
fadd
shl
mov
sub
mov
in
mov
lds
jmp
mov
dec
int
lock
inc
in
clc
or
movs
inc
jne
push
dec
div
jg
inc
jnp
mov
imul
and
mov
xchg
les
cs
cmp
icebp
mov
add
add
dec
inc
cli
or
cmps
fwait
xor
ds
ins
jne
sbb
jecxz
inc
leave
xchg
mov
pop
add
mov
xor
add
adc
(bad)
sbb
cdq
dec
sub
push
mov
inc
jnp
or
cmp
aas
or
stos
adc
jae
pop
aad
pop
movs
xchg
adc
movs
pop
in
nop
mov
mov
test
cmps
loop
pop
jb
sub
xor
in
jae
push
cmps
inc
test
add
cwde
les
pcmpeqd
and
in
out
lea
cmp
pop
jo
aad
pusha
xchg
neg
dec
mov
out
sbb
shr
cmc
mov
inc
std
xor
ds
jg
pop
out
jmp
mov
mov
inc
pop
mov
cmps
popf
pop
pop
pop
push
sub
(bad)
inc
ret
popf
dec
scas
cmp
mov
inc
scas
test
aam
mov
mov
cmp
lods
clc
cmp
xlat
push
add
shl
cmp
xchg
inc
or
sub
and
xor
mov
inc
add
push
arpl
pushf
rol
aas
retf
imul
pop
dec
dec
mov
cmp
repnz
pushf
pop
pop
jnp
sbb
sti
ds
and
sub
imul
push
int3
leave
(bad)
pusha
adc
xchg
jbe
sub
mov
movs
mov
xor
adc
(bad)
sbb
inc
push
lods
pop
out
rol
or
mov
or
inc
push
add
int
cwde
int
mov
or
add
jge
popa
jl
enter
popa
(bad)
pushf
jno
add
scas
xchg
(bad)
and
stos
repnz
and
jp
inc
jne
iret
int3
jmp
jecxz
js
lods
push
mov
dec
mov
repz
hlt
ror
mov
clc
mov
dec
fmul
imul
jg
cmp
or
mov
into
sti
or
fcomp
jmp
jp
stos
mov
loop
lods
xchg
mov
mov
xor
rcr
mov
mov
sti
lahf
enter
stos
rol
test
pop
popa
ins
lods
test
jl
mov
add
aad
inc
hlt
inc
xchg
mov
rol
int3
fsubr
xor
mov
dec
loope
jmp
cwde
sar
push
js
pop
inc
jne
push
pop
imul
mov
fbld
ftst
ja
(bad)
xchg
in
mov
xacquire
fstp
pop
mov
fst
mov
or
pop
pop
ret
nop
lds
dec
out
jae
fld
or
stos
repz
jo
pushf
xchg
mov
xchg
nop
ret
or
stos
dec
and
xchg
mov
test
add
call
es
push
lods
call
aam
jle
inc
cmp
test
push
mov
data16
pop
dec
cmp
clc
cmp
jo
das
retf
mov
shl
mov
bound
and
pushf
cmp
add
cmps
sar
fistp
in
mov
jl
imul
cmp
mov
into
adc
inc
loop
jg
jl
call
cli
cmps
or
mov
(bad)
adc
dec
hlt
shr
in
mov
stos
mov
jo
or
out
mov
jmp
jo
out
repz
jb
adc
mov
ds
call
cwde
int3
movs
dec
dec
sbb
sbb
sbb
loope
(bad)
(bad)
add
add
add
dec
cli
jmp
dec
push
lea
sub
(bad)
in
scas
jecxz
clc
scas
dec
inc
add
cmc
cmp
arpl
mov
inc
sbb
adc
(bad)
sub
sti
fnsave
test
cs
inc
mov
ss
out
jno
jmp
je
xor
xchg
shl
mov
test
out
add
sub
cs
jno
mov
out
xchg
fisttp
and
into
int3
dec
outs
mov
xor
outs
popf
out
loope
sub
aaa
adc
fucomi
pop
inc
mov
cmp
stc
and
mov
and
inc
ror
push
in
cdq
aaa
movs
out
push
cld
int3
repz
out
in
call
(bad)
push
adc
sbb
mov
and
imul
push
inc
scas
push
cmp
bound
ror
sahf
sbb
cdq
idiv
mov
add
cmc
scas
jg
daa
mov
popa
xchg
sub
xchg
xchg
in
sub
and
lds
jecxz
retf
iret
xchg
cmp
cmp
cmps
xlat
jp
(bad)
hlt
pop
test
push
xchg
mov
dec
pop
or
xor
out
fnstcw
sub
not
cli
(bad)
popa
cwde
xor
jge
addr16
ja
add
lock
in
ret
(bad)
repz
(bad)
out
aad
sbb
and
xchg
arpl
cmpxchg8b
(bad)
int3
out
test
movs
cmc
pop
and
mov
cwde
xor
adc
xchg
fidivr
sar
mov
pop
in
rol
sub
sti
fcmovu
mov
int3
pop
push
clc
lods
pop
sub
cmps
clc
jae
ja
or
add
sub
test
sub
push
xor
(bad)
dec
mov
push
jmp
push
sbb
xor
fist
push
cmps
inc
mov
jecxz
cwde
adc
cmps
pop
adc
add
arpl
dec
mov
ins
push
add
mov
cmp
in
sub
push
xor
test
jns
fs
pop
mov
or
shl
xchg
pop
pop
pushf
movs
dec
call
int3
js
push
js
arpl
mov
movs
jns
fcomp
sub
push
in
mov
jae
xchg
mov
push
test
in
sub
pop
push
pop
add
or
jb
adc
shr
mov
repz
dec
aas
movs
call
addr16
mov
in
ror
les
(bad)
mov
pop
or
inc
stc
test
inc
ins
retf
mov
sbb
mov
aas
or
adc
xchg
mov
add
ror
push
jns
inc
mov
bound
mov
out
pop
xor
xchg
adc
jne
lods
rol
mov
add
dec
cmp
and
add
lods
jmp
(bad)
xchg
or
xchg
imul
pusha
cdq
cmp
(bad)
jl
(bad)
adc
jnp
push
mov
pop
mov
pop
and
inc
add
nop
sbb
inc
sbb
xchg
add
push
dec
add
fsubr
sub
jo
ins
jl
cmps
xchg
sbb
ins
xchg
sar
mov
(bad)
dec
retf
je
(bad)
dec
or
cmps
je
sub
jmp
xchg
mov
scas
jmp
add
in
mov
or
push
or
mov
pushaw
mov
or
inc
retf
fist
cmps
fwait
dec
es
mov
xor
xor
movs
js
shl
pop
cmp
jae
or
xchg
lock
stc
xchg
rol
push
cdq
popa
cs
rcr
shr
mov
imul
xor
cmp
cdq
jmp
xor
or
jo
adc
sahf
cli
div
outs
pusha
pop
cwde
rol
repnz
push
push
mov
and
ins
xlat
cwde
sbb
push
push
lds
push
jmp
push
std
sub
xlat
jno
sub
jne
mov
fwait
push
sub
repnz
(bad)
and
mov
xchg
cmp
sbb
push
arpl
(bad)
adc
cmp
in
fmul
adc
retf
sub
and
pop
mov
sub
jb
das
xchg
jno
or
mov
and
nop
aam
sbb
adc
push
lods
or
movs
nop
sbb
cs
(bad)
sbb
lea
mov
or
test
cwde
mov
ffree
xor
xchg
ficomp
sbb
fild
pop
adc
lahf
repz
cli
xchg
repnz
pop
inc
xchg
xor
cs
out
push
dec
pop
aam
cli
enter
arpl
inc
xchg
enter
(bad)
jmp
dec
xchg
popf
cmp
xchg
das
(bad)
push
aaa
fwait
arpl
cmps
cmp
imul
add
aad
push
arpl
cmp
adc
push
loop
hlt
pushf
adc
and
stc
dec
dec
imul
lock
pop
jmp
imul
mov
ror
push
mov
jne
xchg
clc
loopne
or
pop
stos
repz
push
dec
adc
nop
popf
or
sub
mov
stos
mov
jp
std
jmp
push
mov
dec
mov
mov
imul
xchg
adc
adc
(bad)
jb
fsubrp
fild
outs
in
(bad)
and
adc
outs
sub
sbb
or
add
jle
or
fld
cwde
add
dec
adc
mov
sbb
test
movs
adc
mov
je
cmp
jmp
inc
scas
sub
cmps
mov
jmp
xor
mov
jo
hlt
xchg
mov
adc
jbe
loope
aad
jmp
int3
out
push
xor
push
xlat
pop
test
xor
retf
xchg
jge
ret
int
ins
xor
call
pop
pop
cmp
ins
movs
(bad)
mov
ret
ins
js
movs
push
jne
in
call
sub
mov
data16
mov
push
cmps
cli
push
xchg
mov
in
add
test
test
jl
jb
loopne
pop
adc
pop
mov
and
sbb
jnp
aam
add
les
lea
and
loope
retf
mov
add
ins
fist
and
cmp
inc
pusha
daa
jbe
xchg
retf
adc
js
or
lds
and
scas
push
movs
fistp
repz
jge
out
adc
add
repnz
mov
fnop
sbb
mov
cmc
pop
mov
sub
mov
mov
xor
dec
int3
dec
test
aaa
fmulp
mov
xchg
push
paddusb
je
dec
pop
arpl
ja
xchg
aaa
jp
(bad)
retf
ret
retf
lds
sub
popf
mov
lea
outs
push
adc
dec
sub
cmp
ja
or
push
lods
jg
cmp
adc
and
stos
(bad)
fild
jp
in
leave
push
int
or
pop
cmp
cdq
(bad)
sar
mov
or
or
jecxz
call
sub
pop
enter
pop
cmp
lock
push
push
into
jecxz
cmc
scas
add
xchg
xor
lods
xchg
pusha
loop
cmp
jle
mov
fist
fnsave
mov
in
xor
pop
xchg
mov
and
inc
or
scas
dec
sub
ret
mov
shl
mov
pop
int3
cmps
dec
pop
inc
test
movs
mov
cmp
or
cmps
inc
popf
pop
jge
into
fadd
sbb
cmc
imul
je
mov
loopne
in
sub
loopne
and
call
sbb
ins
jae
addr16
jae
adc
and
lods
adc
xchg
fbstp
push
fstp
inc
xor
cmp
dec
stos
cld
mov
daa
faddp
in
mov
sub
sub
stos
int
lea
mov
es
jg
xor
sti
adc
jp
pop
xor
mov
rdtsc
xlat
pop
addr16
lock
cmp
sbb
inc
hlt
pushf
dec
cmps
and
stos
out
add
imul
adc
ins
sbb
fnstenv
pop
mov
adc
mov
adc
jl
mov
loopne
mov
sub
pop
rcl
(bad)
or
cmc
bound
int
out
mov
lock
fistp
lahf
push
pop
clc
push
xchg
sahf
sub
lods
jns
div
pop
pop
mov
pop
inc
cmp
je
xchg
ret
mov
out
repz
sbb
int
not
ret
add
gs
and
sub
push
icebp
nop
or
pop
xor
jmp
push
jbe
(bad)
adc
sub
sbb
and
sub
pop
add
test
ror
sti
mov
push
lock
jae
test
out
mov
mov
lods
mov
int3
(bad)
jp
inc
push
jo
mov
xor
xor
dec
pop
rol
into
in
xchg
cld
out
idiv
pop
adc
xchg
xchg
(bad)
cmp
xchg
(bad)
add
pop
mov
mov
rcl
mov
std
jmp
mov
fst
cli
jne
push
dec
clc
xchg
xchg
add
int3
nop
int
jmp
loopne
dec
gs
mov
repz
aaa
and
sub
movaps
adc
in
pop
xchg
or
xchg
or
and
xchg
lods
(bad)
and
jns
aas
jns
ror
xor
es
stos
inc
inc
push
fs
sbb
mov
imul
cmc
pop
add
dec
push
cmp
loope
and
mov
ss
shl
mov
push
es
jecxz
lahf
arpl
mov
mov
movs
cmps
sbb
xchg
xor
in
cmp
inc
push
xchg
dec
inc
add
inc
cld
sub
enter
adc
les
(bad)
dec
mov
dec
push
jecxz
xchg
leave
scas
and
out
aad
mov
add
or
push
inc
ds
(bad)
xor
mov
into
pusha
mov
sub
rol
xchg
in
mov
inc
xchg
mov
jne
mov
idiv
mov
mov
pop
imul
sbb
cwde
pop
ror
lahf
invlpg
ins
stos
aam
sbb
mov
repnz
rep
daa
dec
cmp
aam
es
fcomp
lds
icebp
lahf
out
nop
jle
push
push
mov
sbb
fimul
out
out
push
cwde
inc
xlat
mov
or
xor
fadd
or
cmc
cdq
xor
sbb
sbb
push
jnp
sub
vdivpd
sti
cmp
cdq
pop
mov
loopne
mov
data16
jbe
outs
fld
out
fsub
enter
pop
daa
pop
int3
dec
sbb
push
cmp
add
rcr
mov
adc
rcl
sub
push
into
inc
rcl
imul
sbb
imul
mov
dec
sti
mov
mov
xchg
add
iret
xchg
xlat
ret
adc
pop
and
(bad)
fadd
jl
jae
jecxz
out
scas
push
adc
mov
repnz
push
lock
cmp
cwde
fsub
push
pop
enter
xor
and
mov
sub
fstp
pop
dec
out
ins
sbb
stos
das
popa
sub
je
jbe
cmp
fsub
push
fisub
cmp
push
mov
std
pop
xor
mov
fnstsw
mov
scas
out
test
add
repnz
mov
push
or
int
push
call
pusha
lods
jnp
mov
xchg
mov
sbb
jno
cmps
cmc
fsubr
dec
es
pop
add
inc
pop
adc
imul
xor
test
cmps
call
inc
shl
daa
mov
popa
add
pop
retf
sbb
pop
push
xchg
push
stos
sub
cmps
aad
push
adc
pop
sbb
iret
mov
jmp
mov
fwait
mov
mov
out
inc
arpl
xchg
cwde
add
xor
push
xor
pop
push
mov
lods
outs
popf
loop
imul
add
xchg
bound
popa
xchg
lock
add
push
pop
push
mov
push
xchg
ins
out
cmp
mov
sub
aam
jl
lahf
test
movs
mov
jno
imul
or
mov
outs
int
jns
xchg
(bad)
xchg
(bad)
cmp
pop
push
mov
pop
jns
int3
fnsave
pop
mov
inc
or
jns
pop
scas
and
push
cmps
xchg
xchg
xchg
adc
(bad)
das
adc
and
cmp
mov
sti
(bad)
retf
adc
mov
push
dec
sti
cmps
mov
mov
ins
scas
(bad)
je
xor
clc
shl
dec
add
scas
sar
in
dec
test
adc
std
add
mov
add
sbb
pop
pop
dec
fcmovb
mov
adc
lahf
mov
nop
mov
mov
nop
adc
es
or
jno
dec
jno
fsubr
sub
lods
loop
ss
test
push
cwde
cmps
dec
out
in
adc
fcmovnb
pop
call
xchg
pop
dec
aaa
aam
in
jge
pushf
outs
cmp
mov
xchg
mov
cmps
in
add
pop
push
or
fstp
xor
xchg
fwait
ret
mov
or
sbb
jne
sub
jmp
xor
not
lahf
int
push
out
test
xor
pusha
mov
pop
xchg
jbe
or
add
xchg
scas
pop
jmp
stc
and
xchg
sbb
mov
or
xchg
test
sbb
and
xchg
ins
jmp
pop
adc
add
or
lock
ins
mov
mov
and
xchg
call
sub
popa
shr
fnstsw
in
fdiv
push
(bad)
cli
inc
jle
idiv
mov
mov
jno
add
lock
repnz
sub
mov
push
bound
or
cmp
cmps
fiadd
bound
xchg
add
add
or
dec
mov
pop
mov
xchg
inc
daa
ret
push
inc
add
pop
mov
lds
pop
cmc
pop
stc
dec
cli
clc
inc
fsub
inc
dec
adc
sub
aad
and
mov
pushf
adc
push
add
inc
pop
popf
enter
pop
xor
movs
imul
jp
stos
aas
mov
or
or
mov
add
dec
push
daa
arpl
xor
xchg
adc
xor
nop
call
(bad)
(bad)
cmp
xchg
mov
fwait
popf
jne
jle
into
add
shr
fxch
add
sub
mov
mov
cmp
aaa
mov
(bad)
in
mov
and
outs
add
dec
loope
and
xchg
push
ins
push
(bad)
jle
dec
sbb
ins
or
jne
fcmovb
ss
or
test
xlat
mov
jp
mov
mov
pop
dec
cmp
ss
xchg
dec
cmp
fld
xchg
and
jb
jl
add
ja
pop
and
or
(bad)
fistp
jp
(bad)
int
(bad)
mov
dec
xchg
sahf
and
jnp
inc
push
adc
pushf
pop
je
dec
and
repz
mov
adc
scas
adc
add
sub
sti
rol
fidivr
jns
iret
fdivr
js
sub
movs
mov
push
mov
das
or
xchg
xchg
daa
sahf
sbb
xchg
in
lock
mov
xor
mov
data16
xchg
jb
daa
lahf
cmp
ins
jno
scas
add
or
mov
loope
mov
mov
jno
add
push
(bad)
sub
test
dec
in
cmp
push
push
outs
mov
xchg
mov
mov
inc
call
daa
fisttp
ror
xchg
fdiv
je
dec
sbb
loopne
and
dec
sti
xchg
add
and
ret
(bad)
push
sbb
cld
(bad)
or
mov
pop
jne
mov
adc
aam
clc
xor
jl
push
fs
inc
test
push
mov
mov
in
(bad)
cli
xchg
fadd
or
push
mov
shl
push
cmp
and
or
adc
xchg
dec
dec
inc
fdiv
leave
bnd
sub
push
inc
stos
retf
or
in
dec
vcvtsd2ss
dec
adc
jl
jb
aad
arpl
femms
xlat
retf
mov
adc
popf
in
daa
mov
jmp
ret
mov
cdq
cmp
shl
and
xchg
xchg
cld
aas
xchg
mov
(bad)
lods
cmc
pop
add
pop
push
jg
dec
mov
adc
or
fistp
and
ins
push
stos
jae
pushf
fadd
es
movs
shr
sub
hlt
ss
not
cdq
mov
dec
(bad)
neg
mov
loop
dec
pause
dec
fstp
test
cmp
mov
xor
inc
popf
mov
sub
call
retf
xchg
mov
and
or
mov
ss
dec
test
test
or
loope
js
xor
lahf
xchg
mov
sub
mov
fcom
or
ins
call
mov
loopne
int3
stos
or
fcmovbe
out
nop
add
dec
add
push
dec
pusha
pop
out
fild
inc
fstp
or
and
jo
pop
cli
in
lods
jb
ret
add
rol
scas
das
mov
ja
mov
cmp
cmps
adc
or
mov
xchg
pop
cmp
popf
and
stc
sti
sub
test
cld
mov
and
jnp
in
or
jae
aas
or
stos
in
addr16
imul
or
jmp
(bad)
cmps
idiv
arpl
fild
mov
shr
pop
or
ins
mov
in
xor
sub
mov
pop
fld
sti
in
das
je
fsubr
int
cmp
sub
add
test
std
mov
outs
push
cmp
in
test
mov
fmul
or
inc
mov
(bad)
sbb
and
hlt
mov
stos
mov
test
out
inc
inc
jmp
xchg
push
rcl
inc
cwde
shl
sahf
out
ins
test
xchg
ins
add
mov
xor
jne
cld
mov
sti
sub
popa
jnp
inc
jg
sub
aas
pop
jg
add
lods
mov
inc
mov
or
or
jbe
cmp
sub
jne
in
sbb
mov
push
or
sar
inc
push
xchg
pop
lock
mov
popf
pop
push
inc
mov
jp
enter
repnz
mov
out
mov
movs
dec
in
ins
not
dec
xchg
xor
jnp
out
jle
aad
imul
les
dec
xchg
mov
xchg
repz
mov
pop
scas
hlt
fcomp
jecxz
call
imul
psadbw
sbb
cmps
into
push
cmps
into
ret
mov
and
outs
xor
sub
sbb
(bad)
ins
dec
imul
cmp
and
aaa
jl
push
mov
fnstenv
clc
xchg
pop
jge
call
retf
ret
test
pop
fidivr
mov
or
push
call
in
mov
stc
mov
push
push
xor
xchg
sbb
dec
pop
(bad)
xchg
add
mov
cmps
test
repnz
adc
pop
das
das
or
pop
ds
stc
js
ds
push
aas
push
cmp
or
in
rcr
cmc
ja
sbb
aad
or
leave
push
jmp
jle
inc
sbb
mov
or
inc
xchg
cmp
mov
push
jle
inc
ds
jbe
dec
adc
xchg
mov
xchg
icebp
or
xchg
out
or
stc
mov
push
les
add
dec
or
add
pusha
xchg
push
outs
pop
xor
push
adc
shl
mov
mov
cmp
add
sbb
xor
sahf
mov
mov
mov
sbb
push
mov
pusha
cdq
rol
mov
loop
movs
aad
movs
hlt
fistp
nop
adc
mov
pop
call
sbb
mov
in
sbb
in
das
fwait
loop
adc
xchg
sub
stos
jbe
jno
inc
ds
(bad)
ficom
xlat
js
cli
or
popa
loopne
leave
adc
pop
mov
pop
mov
cmp
xor
(bad)
movs
mov
mov
pop
sahf
xchg
arpl
xchg
lock
adc
cmp
fwait
je
push
fdiv
test
mov
pop
inc
jb
imul
loope
ror
mov
xchg
pop
clc
aad
mov
xor
mov
cmp
push
mov
outs
ficomp
dec
mov
mov
iret
or
mov
ins
mov
push
shl
pop
fst
loope
neg
(bad)
cmps
add
sti
jg
pop
ret
sbb
popa
dec
push
or
(bad)
rep
icebp
jle
lea
shl
pop
arpl
sbb
addr16
cwde
dec
test
push
out
out
scas
sahf
pop
ror
mov
je
adc
aad
push
dec
mov
loop
cmp
adc
push
pop
or
jne
rcr
push
out
pop
adc
(bad)
xlat
jmp
fwait
loopne
and
pop
in
mov
ins
into
cmp
xor
cs
and
cmps
jge
sub
or
and
mov
mov
push
inc
in
add
push
cld
aad
jg
xchg
lds
mov
push
xor
xchg
mov
push
adc
jno
sub
or
and
jp
sbb
jp
add
test
dec
mov
or
sub
and
mov
adc
das
setl
clc
js
call
jle
enter
test
and
(bad)
cld
fisub
int3
adc
mov
adc
cwde
xchg
stos
in
adc
retf
fiadd
sar
xchg
and
pop
cmp
fnstsw
in
pop
pop
inc
outs
xor
mov
xor
cli
scas
push
scas
aaa
(bad)
out
test
jg
inc
cmp
(bad)
push
inc
jo
out
daa
lock
lock
das
jge
xor
call
fidiv
out
or
dec
in
into
cmp
xor
mov
ja
ja
xor
enter
mov
xor
(bad)
mov
jae
and
push
into
ds
ss
push
pop
xor
sub
loope
pop
and
dec
push
test
pop
sbb
jl
sub
mov
xchg
pop
stos
add
outs
and
outs
sub
sub
pop
inc
cmp
test
lods
ins
ret
(bad)
call
xchg
mov
sar
dec
xor
jg
mov
les
jmp
jbe
clc
xchg
sub
retf
gs
addr16
das
pop
movs
push
(bad)
daa
in
retf
rcl
or
push
push
aam
aad
push
lods
add
call
mov
push
(bad)
sub
lods
cmps
cdq
pop
(bad)
cmc
int
(bad)
dec
push
movs
mov
int3
add
ss
in
mov
jmp
and
mov
pop
jae
mov
inc
xchg
sub
or
jne
push
hlt
test
sahf
sub
mul
or
pop
mov
(bad)
xlat
or
fistp
mov
sti
ret
rcr
and
popa
cmp
xchg
call
jns
push
cli
(bad)
mov
mov
js
fdivr
test
jne
mov
jne
in
dec
leave
sub
(bad)
(bad)
hlt
(bad)
cli
sbb
fucomi
inc
jecxz
xchg
out
outs
inc
in
fsub
mov
repz
nop
mov
movs
sbb
sbb
ja
adc
dec
cdq
jbe
fild
and
adc
sbb
add
push
sbb
mov
cmp
sbb
(bad)
xchg
jne
mov
and
jge
lods
sahf
stc
arpl
je
pop
mov
outs
js
push
mov
outs
push
inc
fcomp
inc
sbb
jp
cdq
iret
(bad)
int3
xchg
or
mov
xor
cmp
cmp
popa
cdq
pop
(bad)
(bad)
es
inc
mov
sub
mov
and
xor
mov
or
sbb
fs
sbb
(bad)
cmp
imul
(bad)
scas
jo
jo
or
adc
lahf
push
cli
cs
pop
cld
xor
inc
pop
pop
les
in
cwde
mov
mov
adc
and
adc
fs
in
push
and
adc
pop
pop
test
cmp
push
pop
jns
shl
jmp
mov
jne
xor
mov
js
mov
xor
test
and
pushf
ret
stc
sbb
mov
daa
push
jnp
adc
cmps
mov
xchg
mov
xor
push
sbb
popa
scas
loopne
push
les
lahf
sub
shr
jns
pop
in
test
scas
jmp
mov
mov
das
cmp
mov
or
pop
adc
mov
rcl
retf
pushf
sub
aaa
cmp
es
pop
inc
push
cmp
sysenter
into
imul
mov
jne
inc
lods
jno
dec
in
sub
icebp
sub
ficomp
cmp
mov
das
stos
imul
cmp
push
dec
inc
dec
pop
je
pop
push
(bad)
pop
mov
sahf
daa
push
mov
xchg
popf
xlat
mov
jns
push
pop
push
jo
outs
xor
in
inc
mov
div
stos
mov
jae
push
xor
cdq
jae
mov
mov
loope
cwde
(bad)
out
mov
push
sbb
movs
xchg
std
sub
mov
outs
fmul
out
(bad)
xchg
sti
jge
outs
push
add
sbb
cmp
sti
lds
mov
pop
jl
dec
lahf
div
call
add
mov
retf
jmp
lahf
mov
popa
test
mov
mov
pop
sub
test
jae
call
call
jns
(bad)
dec
jb
in
lds
stos
dec
rcr
sub
jmp
movs
xor
test
or
sub
jl
into
xor
lods
mov
adc
test
sbb
ja
xchg
mov
or
fnstcw
cld
daa
out
inc
mov
mov
xor
cmc
jns
push
fistp
fcmovb
inc
mov
dec
lea
into
mov
push
push
pop
or
test
mov
pop
shl
and
call
sbb
mov
xchg
(bad)
adc
int
add
fwait
inc
in
outs
jecxz
dec
dec
fcomi
es
fwait
pop
inc
xchg
sub
pop
ja
aam
sbb
push
les
mov
jo
sbb
test
jmp
(bad)
out
add
lods
clc
or
loope
ficomp
push
lahf
jmp
sti
mov
push
adc
mov
call
aaa
mov
mov
test
mov
div
adc
dec
push
out
cdq
dec
imul
in
jmp
pop
xchg
push
shl
or
std
xor
mov
sbb
cmc
mov
scas
or
sub
mov
mov
push
data16
iret
inc
ret
cmp
addr16
ror
pop
icebp
mov
xchg
xchg
pop
cmp
add
cs
(bad)
out
lock
(bad)
mov
ja
add
push
test
aad
xchg
mov
push
sbb
mov
sbb
add
inc
adc
clc
sbb
dec
sahf
fist
std
xchg
and
gs
stos
inc
push
(bad)
(bad)
ja
pop
addr16
sbb
and
jg
mov
sbb
pop
push
rol
(bad)
imul
inc
movs
xchg
push
cwde
cmps
or
mov
in
ror
lock
loopne
aam
pop
cmp
cld
and
test
mov
xchg
addr16
cs
stos
sub
cmp
sub
pop
xchg
sub
fadd
int3
aaa
and
mov
mov
ret
ret
mov
lods
pusha
and
push
iret
setae
push
push
pop
fist
and
sbb
pop
test
jmp
icebp
push
jecxz
scas
cmp
inc
ss
and
xchg
cmp
or
xchg
mov
add
icebp
imul
popa
mov
cwde
xor
js
or
stc
fidivr
pusha
inc
mov
jge
ins
lock
clc
out
add
add
and
pop
jne
pop
std
aaa
es
add
cmp
aam
add
push
(bad)
jbe
xlat
cdq
xor
(bad)
les
mov
pop
pop
mov
xor
imul
out
adc
mov
fdivp
les
jmp
jbe
dec
mov
cmp
adc
in
(bad)
bound
mov
mov
mov
rcr
add
or
cdq
cli
(bad)
test
xlat
scas
cmp
jne
in
sbb
xchg
mov
jae
push
inc
movs
je
bound
call
test
xchg
lods
and
xchg
mov
inc
add
outs
mov
and
sbb
xchg
retf
js
and
inc
cmp
(bad)
lds
mov
add
mov
xchg
mov
data16
ins
jne
inc
stos
and
imul
bound
repz
cmp
sahf
mov
cmc
cmps
(bad)
aad
movs
add
jge
inc
cli
stc
add
jno
imul
scas
int
call
mov
push
cmp
dec
fsubr
sub
retf
iret
hlt
test
in
(bad)
iret
push
fnstcw
shl
fmul
adc
lock
mov
fcmovnbe
mov
les
add
(bad)
sar
outs
inc
test
sbb
sub
out
mov
pop
call
dec
adc
jg
psubd
pop
dec
add
cmp
inc
or
mov
fsubr
push
jbe
or
mov
les
loop
fsubr
call
sub
dec
test
inc
mov
pop
pop
add
es
imul
push
cmp
xor
push
mov
dec
inc
imul
ins
mov
(bad)
mov
test
mov
dec
jmp
xor
in
and
imul
and
sbb
into
mov
inc
ss
stos
inc
mov
popf
js
and
sub
or
dec
call
xchg
das
cmc
sbb
pop
scas
stos
dec
sahf
xchg
call
push
(bad)
dec
cwde
xchg
pop
cdq
in
retf
mov
scas
out
jo
add
push
ds
sub
ins
pop
popf
test
push
dec
adc
dec
and
xchg
add
js
mul
ss
in
jns
jnp
jg
or
test
inc
outs
add
xlat
stos
cmp
pusha
xlat
fdiv
cmp
in
push
xor
popa
pop
aaa
ins
and
sbb
movs
pop
push
ins
dec
mov
outs
movs
pop
(bad)
cdq
outs
les
vminpd
mov
jbe
das
arpl
shr
push
jge
jmp
(bad)
in
scas
inc
sub
sbb
jnp
cmp
mov
mov
fwait
jmp
imul
lock
push
jmp
cmp
mov
sub
jb
xchg
aad
imul
cmp
mov
mov
push
or
call
shl
(bad)
push
xlat
push
aas
arpl
cwde
fwait
popa
mov
or
mov
add
pop
mov
imul
int3
cld
lahf
mov
mov
mov
iret
loope
dec
(bad)
aam
inc
(bad)
and
and
out
imul
imul
adc
addr16
repnz
scas
leave
addr16
sbb
lds
sub
add
repz
maskmovq
mul
mov
push
jecxz
jb
ja
loop
in
pusha
jns
test
ss
(bad)
cmp
or
leave
popa
pop
sub
lea
dec
loop
lahf
pop
xchg
mov
(bad)
mov
xchg
mov
(bad)
mov
adc
mov
mov
pushf
xchg
es
adc
or
fwait
cmp
xchg
shl
pop
jo
in
retf
cmps
push
xlat
push
test
fild
enter
sbb
iret
retf
fmul
or
mov
sbb
out
mov
sub
mov
mov
shr
out
fstp
and
or
xchg
add
ficomp
or
bound
loop
nop
mov
fadd
mov
jecxz
fisttp
push
dec
jb
push
dec
int3
add
adc
(bad)
and
or
inc
jb
in
(bad)
out
inc
loop
es
mov
dec
loope
ror
fst
pushf
enter
cld
pop
into
popa
sbb
push
jmp
and
ins
dec
and
out
sbb
add
ja
jnp
jmp
(bad)
push
fsubr
fbstp
mov
jge
jbe
inc
mov
(bad)
adc
cmp
jns
add
dec
inc
sbb
mov
(bad)
ror
shr
xchg
enter
dec
pop
add
(bad)
clc
mov
mov
mov
popw
sti
xor
or
push
cwde
lods
xchg
mov
pop
ja
cmp
gs
loopne
dec
add
jp
mov
faddp
pop
and
pop
repz
adc
inc
icebp
sub
shl
call
sub
mov
inc
inc
sar
jnp
loope
xor
imul
out
gs
int3
adc
pop
adc
shr
inc
xchg
jb
jmp
cmc
or
or
inc
pop
test
shl
sahf
popf
lods
inc
add
into
inc
gs
pop
adc
mov
push
and
fstp
mov
aas
xor
lock
movups
imul
dec
mov
pop
out
xchg
gs
jge
repz
dec
cmc
or
mov
xor
pop
and
fsubr
fnstenv
psubd
setp
mov
ins
test
pop
shr
mov
lods
stc
(bad)
ror
pop
mov
inc
lahf
das
mov
jmp
repz
arpl
mov
mov
inc
cmp
leave
das
popf
test
arpl
sbb
enter
xchg
loope
jno
gs
and
ss
rcl
jg
out
inc
cmp
xchg
jb
mov
xchg
ins
lock
(bad)
jns
les
push
test
jns
mov
cmp
das
xchg
sub
(bad)
cmp
jnp
mov
bound
push
mov
icebp
dec
fmul
xor
lahf
std
push
fadd
dec
daa
shl
xor
std
lahf
push
rcr
push
mul
(bad)
xchg
dec
push
ret
(bad)
inc
outs
jmp
frstor
leave
adc
pop
lds
and
(bad)
adc
mov
fisubr
xchg
mov
jb
test
cwde
jns
repz
jle
and
imul
fsubr
sub
int3
adc
inc
mov
dec
gs
lds
fwait
clc
out
daa
jo
or
add
in
nop
nop
cmp
jecxz
out
adc
xor
movs
cmp
jecxz
loope
and
add
gs
jle
inc
pop
mov
push
sar
sub
xchg
cmp
push
xchg
cmps
loope
mov
push
add
lea
mov
lahf
or
cmp
mov
dec
and
inc
test
and
lods
imul
add
ds
lock
inc
mov
jb
pop
push
adc
push
imul
and
sbb
jmp
pop
aas
add
cwde
enter
push
mov
xlat
sub
adc
je
push
retf
add
jl
mov
inc
push
adc
inc
cwde
test
out
cmp
adc
jmp
mov
ins
xchg
push
outs
ret
inc
out
or
xor
or
or
ja
or
popf
fadd
mov
pop
push
sub
jbe
pop
add
loopne
sbb
inc
cmp
sbb
cmp
into
pop
xor
mov
jl
out
jge
sub
inc
jno
xor
sar
pop
enter
mov
jmp
fsubr
retf
in
scas
fistp
adc
xchg
sbb
(bad)
push
popf
push
and
sahf
and
adc
add
pop
in
cli
not
sbb
inc
std
cmps
iret
std
cmp
pop
rcl
int
(bad)
sub
jb
shl
(bad)
dec
dec
mov
cmp
or
jno
adc
pop
add
push
std
in
add
sbb
aas
sub
gs
lods
or
hlt
push
into
or
(bad)
pop
mov
push
arpl
adc
mov
cmp
mov
mov
push
sbb
out
shl
mov
lds
out
or
cmp
or
retf
int
stc
scas
sub
sbb
jbe
aaa
jg
loope
out
popf
and
enter
in
aam
cmp
cmp
cmp
test
inc
adc
inc
sub
push
mov
pop
repz
leave
jbe
clc
test
jnp
push
xchg
rcl
repnz
mov
std
test
add
nop
xchg
xlat
loopne
xor
pop
pop
pusha
dec
call
shr
retf
mov
mov
jne
out
dec
push
inc
hlt
jne
or
pop
rcr
sbb
push
jge
dec
sub
sub
adc
cmps
cli
xchg
enter
ins
pop
or
cmp
sub
and
cmp
pop
fcmovnu
pop
mov
sbb
(bad)
mov
stos
or
adc
aad
movs
xchg
lds
mov
inc
jns
(bad)
dec
jl
adc
sbb
data16
xor
jle
push
outs
adc
in
retf
leave
xor
pop
cmps
lods
cwde
loop
cmp
sub
jmp
push
rcr
push
and
xlat
sub
adc
pop
mov
callw
adc
fcom
les
imul
mov
mov
push
aaa
fmul
sbb
cmp
sbb
dec
div
or
mov
dec
dec
(bad)
(bad)
and
bound
int
cmps
lahf
mov
into
adc
pop
mov
pop
ret
adc
in
add
dec
lods
enter
test
jl
cmp
cmc
push
mov
mov
stos
loopne
and
nop
fadd
sti
iret
fld
or
inc
loop
push
fsubrp
lds
cmp
add
ror
sahf
stc
es
push
mov
or
cmp
movs
pop
push
or
xor
inc
pop
fwait
(bad)
sub
loope
pop
rcr
push
cmp
inc
cmps
sbb
and
retf
inc
add
loop
jnp
and
mov
inc
add
aam
pop
lds
ficomp
push
jmp
les
adc
adc
loope
mov
or
jno
or
xor
push
mov
aas
ficomp
rol
adc
push
mov
push
fbld
dec
xchg
outs
add
inc
sbb
jnp
dec
push
xchg
(bad)
imul
jl
scas
sub
popa
xor
xchg
push
xchg
xchg
pop
cwde
push
cld
pop
dec
mov
and
or
xor
ins
and
stos
fnstcw
xchg
sub
jns
daa
add
dec
inc
sbb
or
rcl
stos
repz
lea
sbb
ins
test
test
cli
nop
sub
sbb
push
dec
mov
mov
mov
(bad)
call
pop
(bad)
mov
mov
cmp
mov
xor
sub
shl
mov
push
jbe
mov
cmc
xchg
sar
add
jno
mov
and
ja
ins
mov
stc
adc
aas
aas
adc
fbld
test
mov
mov
dec
jg
xchg
adc
adc
bound
(bad)
mov
ror
out
lahf
inc
mov
sti
clc
imul
mov
jb
aas
push
cmp
xchg
add
inc
sub
add
pop
loope
push
xchg
cdq
leave
leave
rcl
fistp
xor
adc
ins
aas
sbb
mov
push
push
std
dec
imul
js
iret
adc
cwde
sub
xchg
jmp
jecxz
mov
add
sbb
xlat
in
xchg
xchg
jns
stc
push
shl
test
mov
sbb
ror
pop
sbb
pop
jbe
in
dec
inc
into
daa
fld
xlat
jne
stos
and
(bad)
xor
xor
xor
jp
adc
loopne
(bad)
out
ja
jp
repz
inc
fnstenv
pop
jg
add
aaa
or
add
add
sub
xchg
dec
sti
inc
jmp
mov
ret
je
or
adc
movs
pop
mov
push
je
loopne
push
cmp
mov
dec
leave
mov
lea
(bad)
test
jo
inc
jo
jge
outs
call
xor
hlt
int3
icebp
shl
lahf
adc
add
lods
mov
jmp
jbe
mov
gs
out
movs
shld
push
lods
mov
adc
pop
cwde
pusha
fstp
jge
jbe
outs
jnp
movs
mov
imul
inc
jo
stos
sub
pop
inc
fs
sbb
push
fs
out
inc
lahf
nop
or
pushf
mov
mov
fsubr
call
stos
sbb
mov
cmp
push
out
or
inc
ja
pop
mov
dec
sbb
mov
or
pop
push
retf
shr
pop
sahf
ja
and
fmul
mov
leave
push
inc
push
adc
xchg
push
xchg
cmp
push
dec
dec
scas
push
out
mov
mov
icebp
mov
mov
js
inc
mov
sbb
push
cmp
push
shl
cmp
and
jg
test
and
lea
or
push
lds
es
mov
add
lock
ds
fbstp
inc
adc
mov
data16
lahf
stos
ss
out
mov
neg
mov
fbstp
test
mov
and
loopne
inc
int3
jo
inc
mov
xor
and
adc
in
adc
ret
ss
in
xor
pop
mov
sub
test
cmp
sahf
or
inc
jae
or
mov
lock
mov
ror
je
pop
leave
popf
(bad)
cmps
scas
xchg
dec
mov
mov
push
dec
pop
test
sub
adc
imul
out
fcom
inc
sub
mov
adc
bound
sbb
sub
daa
mov
pop
frstor
jg
adc
sahf
or
test
inc
and
and
adc
leave
loopne
or
out
push
sbb
fwait
sub
aam
pushf
dec
xchg
repz
jae
sti
lahf
scas
mov
ds
(bad)
cs
arpl
add
outs
in
dec
pushf
and
xor
aam
and
jmp
push
push
dec
cdq
adc
cld
clc
mov
add
dec
mov
imul
pop
neg
jne
pusha
or
pushf
mov
ins
sbb
imul
hlt
mov
push
dec
dec
dec
or
dec
popa
xor
ror
adc
dec
mov
inc
outs
cs
fs
inc
in
adc
ds
icebp
rcl
outs
mov
sti
sar
xchg
and
int
xor
pop
cmp
ds
ds
jbe
xor
test
and
xor
stos
les
adc
sub
add
into
(bad)
ins
(bad)
mov
pop
jbe
test
mov
push
repnz
popa
cmps
ins
bound
xchg
cdq
mov
sahf
movs
xor
dec
dec
add
mov
mov
adc
sti
movups
lea
mov
fistp
xor
test
xchg
add
out
xchg
adc
jnp
mov
bound
ud1
retf
mov
mov
movs
cdq
pusha
(bad)
jbe
jne
sbb
je
dec
or
xlat
imul
scas
inc
cmp
out
call
test
mov
enter
xchg
dec
add
das
fldln2
ja
div
mov
ins
gs
mov
(bad)
pop
movs
out
repnz
jne
cdq
popf
js
ror
bound
push
leave
mov
ss
xchg
push
dec
cs
jg
push
sti
ins
call
cmps
push
xlat
mov
fbstp
jno
mov
(bad)
out
fist
mov
adc
(bad)
jmp
sub
lds
cdq
jbe
popa
inc
ret
mov
pop
test
and
xchg
gs
jl
pop
inc
xor
scas
mov
push
rol
push
adc
mov
leave
ja
lea
jo
aam
cmp
mov
or
inc
test
stos
loopne
jmp
sub
(bad)
pop
sbb
shl
jo
mov
js
cmp
(bad)
lods
push
in
jns
jmp
not
mov
(bad)
cwde
mov
mov
xor
or
inc
mov
in
test
enter
dec
cmp
sub
mov
shl
mov
push
sub
pop
imul
mov
fnstsw
mov
repnz
sbb
movs
frstor
out
jmp
mov
int
pop
ud0
loop
test
sub
jg
mov
test
imul
cmps
xchg
xor
and
das
sub
int
fs
mov
nop
(bad)
and
inc
cmp
inc
std
or
jecxz
(bad)
loopne
fwait
rcl
xchg
addr16
stos
ret
js
out
xor
push
fxtract
fwait
cdq
mov
push
mov
mov
mov
add
sti
jmp
loope
dec
mov
adc
mov
cmp
push
loopne
sahf
push
dec
pop
(bad)
fidivr
and
or
fisttp
mov
or
xchg
pop
movs
xchg
sets
mov
push
add
shr
lods
jl
fs
xor
rol
jno
adc
jle
repz
jmp
fucomi
and
cwde
push
xor
push
jecxz
shl
(bad)
nop
mov
pop
shl
inc
(bad)
cwde
shrd
and
aaa
and
dec
add
pop
data16
shl
push
sbb
pop
mov
xchg
shr
cmp
mov
xchg
das
mov
or
pop
inc
sub
lock
mov
add
xor
shl
dec
daa
mov
cmc
mov
mov
dec
fidiv
iret
lds
mov
adc
pop
test
adc
sub
enter
jno
call
arpl
cmp
inc
sub
push
mul
xlat
jg
loop
cmps
fist
inc
push
call
add
retf
jmp
jp
fwait
stc
and
xchg
mov
mul
mov
inc
(bad)
lods
shl
sub
call
in
jno
aas
fsubr
sub
(bad)
add
xchg
lds
into
push
pop
or
iret
movs
cmps
pop
ret
add
cmp
push
(bad)
loope
shl
movs
retf
jo
cld
movs
dec
addr16
jne
inc
sbb
inc
scas
in
xor
mov
mov
ins
cmp
ja
jb
(bad)
in
sbb
cmp
iret
xor
int
outs
sub
out
scas
mov
mov
fcom
call
mov
sbb
dec
out
sub
cwde
sbb
add
out
xor
sbb
outs
cwde
jge
movs
inc
pop
ss
dec
aaa
xor
mov
pop
lahf
cwde
sar
scas
(bad)
pop
pop
add
mov
je
sbb
fxch
mov
jmp
mov
pop
pop
cmp
mov
adc
loop
cwde
mov
pop
xor
add
mov
icebp
dec
mov
jg
hlt
aaa
jmp
push
fdiv
(bad)
and
mov
lock
xor
loopne
aad
or
movs
cmps
push
mov
out
mov
fmul
push
outs
inc
mov
(bad)
shr
xor
pop
movs
clc
daa
or
jo
push
loope
or
fistp
xor
and
add
xchg
dec
dec
add
imul
js
shl
jns
inc
jno
jecxz
pop
pop
or
and
xor
jmp
repnz
(bad)
dec
mov
rcl
popf
test
xchg
movs
call
es
outs
int
mov
xor
push
neg
je
lods
daa
add
dec
cdq
xchg
jb
sbb
mov
inc
jl
call
mov
push
adc
and
jle
xchg
mov
xchg
mov
rcr
aad
inc
add
mov
pop
jns
jns
fisub
mov
imul
aaa
mov
lds
jno
jnp
mov
dec
rcr
mov
ret
mov
sbb
mov
fdivr
retf
jecxz
fbstp
popf
ror
sub
test
dec
call
push
or
out
into
hlt
push
jecxz
cs
stos
cmps
outs
mov
cwde
jmp
mov
(bad)
(bad)
outs
push
xor
fld
inc
sbb
dec
jbe
stos
into
int3
or
ds
lods
pop
pop
loop
mov
pop
xor
dec
aam
xchg
jg
bound
mov
jae
pushw
aam
sub
inc
mov
in
mov
rcl
xor
int3
ins
cmp
cwde
ficomp
xchg
fimul
cmp
cmps
cmp
sub
sar
shr
paddd
(bad)
and
shl
scas
dec
xor
out
xchg
je
jns
dec
ret
xor
out
dec
(bad)
cmp
pop
ins
pusha
jbe
retf
aam
popa
shr
in
mov
cmp
daa
sbb
push
shr
cs
lahf
outs
xchg
cdq
inc
test
cdq
inc
xor
xor
ja
fdiv
pop
pop
movs
and
sub
movs
in
test
jle
loope
push
icebp
or
ret
std
dec
jbe
jge
imul
inc
mov
mov
int3
cmp
or
cdq
inc
je
jp
adc
sub
xchg
call
sbb
aaa
ret
push
ds
aas
sbb
fiadd
mov
push
or
mov
jo
sbb
aaa
mov
ss
data16
xchg
push
xor
mov
jmp
push
loope
fwait
jne
div
shr
push
adc
out
popf
aam
xor
ds
sub
push
pop
xchg
or
mov
fsubr
jbe
das
outs
movs
add
cmp
aad
xchg
mov
iret
mov
cmps
add
in
jno
jo
cmp
ja
cmovp
mov
std
sbb
fimul
sbb
stos
push
sub
or
adc
inc
fwait
mov
mul
ret
jge
in
xchg
push
je
dec
nop
adc
popf
lock
fild
mov
shl
das
and
mov
jo
pop
div
adc
ret
mov
add
or
push
adc
sub
fisubr
jecxz
cmp
(bad)
mov
dec
cdq
ret
jg
xlat
jns
inc
stc
or
dec
nop
icebp
iret
mul
fstp
scas
rol
(bad)
ss
mov
fisttp
int
js
pop
jle
(bad)
mov
mov
mov
adc
rol
jae
int
bound
pop
fiadd
jb
outs
inc
shl
adc
sbb
std
loope
dec
mov
les
pop
fs
push
mov
mov
loop
xor
push
out
xchg
xchg
mov
neg
xor
xchg
push
addr16
out
xchg
fs
add
mov
shl
mov
call
mov
adc
inc
clc
(bad)
cmp
jae
add
aad
inc
mov
das
xchg
jnp
dec
mov
popa
fcom
sbb
pushf
movs
ins
je
movs
ss
mov
jbe
adc
jl
jns
aas
cmp
outs
dec
data16
cs
jae
fmul
dec
mov
ror
cmc
sub
repnz
je
lods
dec
aam
inc
test
mov
mov
mov
sub
xchg
sti
aas
adc
dec
shl
fistp
dec
loope
fstp
in
and
fsub
mov
leave
sbb
add
inc
mov
sub
lahf
icebp
xchg
pop
mov
sub
pop
sub
mov
cmp
xchg
and
and
pop
pop
inc
bound
lds
cmp
add
cmc
lods
hlt
pop
xor
cmp
nop
cmp
pop
mov
aas
mov
mov
or
aaa
(bad)
and
mov
and
mov
imul
mov
scas
push
pop
jmp
and
xchg
fcmovne
adc
pushf
in
or
push
push
daa
lds
fbld
cmp
arpl
push
ins
mov
dec
mov
dec
cs
stos
push
shl
aad
pop
push
retf
sub
mov
cs
adc
inc
mov
ret
xchg
call
and
jbe
inc
or
repnz
cs
cli
sti
mov
repnz
ret
cmp
xor
pop
adc
mov
js
or
stc
xor
sub
or
or
push
jle
cmc
rcl
repnz
or
cmp
scas
jl
push
pop
cdq
in
and
adc
nop
jge
iret
pop
inc
sbb
xchg
lock
clc
out
scas
mov
inc
mov
mov
pop
and
sub
sbb
cmps
push
xchg
test
in
mov
push
bound
(bad)
in
nop
mov
fst
repz
cmp
jp
(bad)
(bad)
adc
inc
test
test
call
adc
inc
adc
fistp
mov
xor
fwait
push
scas
pop
sub
int
inc
push
int3
cmps
mov
retf
leave
jbe
pop
nop
pushf
jbe
movs
rol
(bad)
stc
dec
pop
js
fild
fimul
(bad)
mov
fsub
ins
test
fwait
(bad)
enter
ins
inc
jmp
sbb
xor
sub
mov
ins
cdq
sub
mov
repz
ret
jg
add
adc
mov
mov
cmp
sub
cli
adc
mov
fsubr
jg
fdivr
ror
bound
adc
cli
adc
pop
add
lods
mov
(bad)
out
jmp
adc
jle
scas
fst
sbb
in
mov
pop
push
scas
cmp
or
in
loopne
ds
std
cmp
pusha
ins
and
shr
inc
mov
outs
mov
sub
std
pop
inc
sbb
push
adc
ds
inc
(bad)
and
push
or
inc
lock
clc
js
test
jbe
push
neg
cmp
sahf
sahf
cmp
fmul
mov
shr
outs
out
sbb
movd
das
lds
mov
sti
sub
xor
imul
in
jge
cwde
mov
dec
ds
rol
sub
jbe
lods
lea
(bad)
not
(bad)
lds
jbe
mov
nop
and
jle
in
bound
test
xchg
add
pop
aam
dec
out
pop
xor
jns
rol
and
xor
sbb
loope
sbb
lea
call
xchg
or
sbb
push
cdq
jmp
aad
dec
pop
jno
loope
(bad)
fist
aas
cmp
push
dec
call
add
and
sbb
jl
pop
ds
mov
test
inc
in
mov
xor
sub
cdq
ins
mov
mov
mov
lods
dec
mov
push
sub
dec
fwait
jnp
(bad)
pop
dec
test
js
stos
out
adc
popa
sbb
inc
fsin
fbstp
push
mov
push
add
jb
inc
mov
mov
jbe
call
jle
jno
push
test
push
jo
jo
out
xor
jns
mov
or
adc
wbinvd
adc
repz
push
in
in
outs
neg
pop
dec
int3
pop
dec
dec
scas
call
fwait
add
(bad)
and
scas
cmc
test
fidiv
cmp
add
in
cli
test
pop
sub
mov
cdq
mov
inc
fldenv
jl
ret
sti
ret
jp
or
jne
or
pop
in
push
cwde
ffree
jl
sub
cld
xor
or
xor
dec
xor
cmps
dec
sub
in
fwait
pop
push
push
gs
xor
loop
arpl
hlt
cmp
daa
cmp
sub
sti
inc
test
int3
xchg
xchg
movs
sbb
dec
cmps
push
cmps
pusha
mov
pushf
mov
dec
sbb
xor
add
sub
cli
mov
inc
mov
adc
in
add
sbb
nop
sub
test
call
pop
cwde
push
mov
cdq
repnz
xchg
push
bound
xor
aas
out
mov
popa
fwait
xor
cmps
xor
cmovb
(bad)
sub
or
cmps
pop
mov
ror
jecxz
xor
xchg
loopne
add
gs
mov
nop
iret
sbb
cmp
mov
scas
inc
pop
es
jo
cli
retf
jl
add
rcl
aas
jmp
pusha
cmps
cmp
imul
mov
or
stos
fsub
xchg
sahf
sbb
lea
scas
adc
(bad)
fst
pop
pusha
xchg
aam
add
pop
jg
js
test
add
inc
mov
cmp
or
xor
mov
add
retf
fptan
dec
into
cs
pushf
jmp
dec
xchg
mov
jmp
lea
cmp
call
sbb
ror
push
mov
std
jecxz
mov
xor
outs
pop
add
(bad)
jmp
ja
xchg
sbb
outs
pop
scas
sub
popf
pop
push
sbb
lods
loope
pushf
imul
arpl
in
and
or
pusha
pop
and
mov
aaa
pop
cmp
outs
pop
mov
push
int
pop
mov
in
xor
mov
sti
mov
xor
sub
mov
mov
inc
call
push
dec
sti
fld
movs
sbb
sbb
arpl
rol
retf
jge
dec
shr
push
iret
test
jnp
xor
aas
mov
lock
add
test
xchg
xor
xchg
in
(bad)
and
popa
add
cmp
cmps
jecxz
xchg
xchg
mov
scas
pop
cs
hlt
add
mov
xor
ror
(bad)
pop
mov
adc
int3
mov
in
popf
ffreep
mov
cmp
push
jle
cwde
bnd
(bad)
ret
aad
push
mov
mov
dec
ds
pop
jne
pop
ret
(bad)
sar
xchg
jp
in
jmp
push
clc
push
pop
pop
sub
sub
xor
arpl
daa
jmp
fstp
loop
shl
dec
fldenv
mov
adc
popf
sti
loopne
mov
movs
out
int
pop
test
adc
cmp
jo
xchg
add
stos
pop
xor
pop
in
mov
or
fldenv
loope
pop
cld
retf
stc
push
addr16
adc
xor
jle
sbb
ret
repnz
test
dec
je
(bad)
push
outs
adc
jecxz
retf
push
fcomp
imul
xor
jmp
retf
retf
dec
jne
sub
xchg
fcmovnb
push
sbb
bound
mov
mov
repnz
not
xor
outs
aaa
ins
enter
sub
push
shl
sbb
lock
mov
pop
stos
cld
or
dec
inc
mov
fisttp
mov
or
daa
inc
jecxz
xchg
jle
add
jp
push
pop
xchg
dec
jb
mov
pop
iret
sar
sahf
aas
mov
mov
sub
loop
ins
xchg
je
pop
mov
push
arpl
hlt
pop
jae
inc
or
mov
stc
jb
mov
inc
sbb
ror
leave
inc
jmp
and
sahf
data16
or
sbb
adc
lock
popa
xor
or
mov
jge
popf
push
fcmovnbe
mov
repz
xor
xor
xchg
pop
(bad)
(bad)
leave
dec
arpl
push
mov
pop
pop
int3
out
jbe
xor
pop
xchg
out
enter
(bad)
mov
(bad)
into
rol
jmp
cmps
or
repz
repnz
frstor
dec
ja
and
xchg
cmp
jmp
mov
jbe
mov
loope
push
dec
dec
loopne
into
inc
pop
xor
inc
neg
jp
std
inc
fwait
push
pop
fdivr
push
push
retf
clc
leave
adc
call
mov
in
pop
je
out
(bad)
xor
pop
fnstcw
sub
pop
adc
int
jb
inc
mov
mov
enter
stos
sbb
xor
inc
mov
xor
push
push
push
aam
lahf
mov
xchg
cmp
cwde
outs
sub
add
pushf
mov
jae
xor
jmp
pusha
dec
jg
mov
into
out
jb
out
mov
les
loop
xor
(bad)
xchg
sbb
xchg
xlat
jae
inc
mov
(bad)
mov
daa
test
ds
and
pop
fcom
repnz
xchg
cld
popf
fs
add
sub
mov
mov
dec
mov
mov
sub
ins
jmp
mov
sub
bound
and
dec
xchg
and
test
loope
xor
daa
cmps
pop
fmul
scas
pop
push
xor
stos
lahf
pushf
retf
inc
scas
or
sar
enter
xchg
cli
loope
pop
push
fild
pusha
in
aad
cs
mov
stos
xchg
and
and
xchg
shl
rcl
fadd
fs
xor
cmps
ss
xchg
imul
ss
dec
ret
lock
nop
sti
adc
mov
jecxz
in
and
mov
cmp
fwait
pop
mov
dec
out
jge
push
xor
pop
fwait
pop
push
pop
add
pop
inc
int
sub
xor
sub
jnp
mov
push
(bad)
je
push
fucomp
fs
sbb
rol
inc
jmp
sbb
and
mov
sub
xor
bswap
stos
xchg
mov
out
aam
call
jg
dec
fsubr
jb
xchg
ds
jo
push
fst
xor
pusha
lea
and
retf
lods
pop
scas
xchg
jecxz
(bad)
scas
icebp
(bad)
cmp
lods
sbb
aaa
cli
fcomip
retf
push
inc
jmp
repnz
jne
sub
scas
inc
lods
in
xchg
(bad)
jecxz
or
shl
test
idiv
imul
and
ffreep
arpl
outs
pop
pop
lahf
cwde
and
xchg
xor
test
ret
iret
hlt
xchg
clc
pusha
jl
ret
loope
(bad)
cld
mov
lds
inc
fs
popf
xor
icebp
inc
mov
or
xor
lods
pop
or
pop
xchg
sub
mov
daa
fmul
mov
(bad)
hlt
mov
fcom
fcomip
or
and
cmp
sti
sub
push
stos
mov
fstp
sbb
add
pop
sahf
pop
(bad)
in
cmp
jge
xlat
push
dec
sbb
push
test
into
test
movs
adc
imul
jo
jnp
lods
rol
inc
stos
and
add
stos
ffree
push
pop
stos
and
dec
mov
add
bound
jb
pop
xchg
and
fwait
stos
or
aam
fild
mov
mov
pusha
jo
cmps
shl
mov
and
xor
mov
jnp
das
cwde
sahf
out
(bad)
push
cmp
inc
pop
arpl
mov
sub
inc
pop
push
xchg
ja
je
xchg
imul
out
add
jo
cmp
outs
cmp
inc
cs
(bad)
(bad)
aas
call
sub
push
(bad)
mov
or
lock
sar
xlat
(bad)
dec
or
fiadd
xor
hlt
scas
or
jge
cmp
das
pop
cmp
jp
mov
add
jb
hlt
arpl
shl
cld
ja
add
mov
inc
jne
jo
or
push
stc
int
sbb
mov
lods
ins
or
mov
ins
std
inc
push
jge
or
stos
sbb
jo
rcr
lahf
sub
cs
mov
inc
stos
cmp
(bad)
lahf
sub
xchg
popf
aam
lea
mov
push
or
pop
or
inc
lahf
xlat
imul
xor
add
push
mov
sub
xchg
ins
and
fwait
in
jmp
mov
push
adc
call
mov
lock
jg
lock
sbb
ror
movs
cli
xchg
pop
pop
adc
cmp
sub
(bad)
mov
sbb
retf
or
dec
jmp
outs
sbb
cs
jmp
and
mov
jbe
mov
mov
imul
or
jne
push
popa
movs
ins
in
xchg
(bad)
neg
(bad)
outs
out
or
sar
pop
jmp
(bad)
cmp
call
popa
mov
nop
int3
mov
mov
icebp
test
(bad)
aad
imul
test
fstp
dec
jmp
push
xor
test
out
inc
idiv
sahf
xor
mov
or
adc
aaa
lea
pusha
xchg
push
jle
pop
sti
cmps
fstp
dec
test
and
or
daa
ss
out
mov
sbb
int3
stc
dec
je
outs
(bad)
xchg
inc
mov
mov
sbb
xchg
push
(bad)
push
shr
adc
mov
push
(bad)
cwde
std
xor
lods
js
sbb
(bad)
clc
lock
xchg
sub
push
arpl
loopne
lods
push
enter
rol
sub
ret
jnp
popa
test
adc
pop
cwde
inc
ds
outs
imul
stos
or
dec
sub
ficom
or
mov
sbb
iret
sbb
cmovo
jnp
and
cdq
jge
dec
jmp
fmul
test
pop
push
retf
mov
push
cmps
js
outs
adc
mov
xor
pushf
stc
outs
jnp
sti
dec
enter
sub
adc
push
push
xchg
es
and
dec
mov
xlat
lods
xchg
cwde
dec
cdq
pop
or
rcl
cmp
inc
imul
inc
into
push
bound
pop
push
arpl
repnz
inc
cmp
mov
aam
repz
lock
xor
push
aas
mov
cdq
jnp
shr
mov
xor
sbb
cmc
out
fcom
shr
mov
call
add
inc
fwait
cmp
mov
arpl
sbb
jmp
inc
sbb
sahf
jo
je
and
mov
xlat
(bad)
jo
jmp
add
inc
in
and
push
arpl
stos
inc
mov
call
sbb
and
mov
mov
rcr
or
or
xchg
adc
mov
add
inc
jbe
data16
sbb
clc
inc
ins
mov
std
(bad)
mov
movs
jns
add
jmp
dec
or
cdq
add
in
jae
js
pusha
aaa
ja
sar
fdiv
cmp
jbe
push
clc
mov
cwde
fcmovnbe
mov
scas
stc
lods
jbe
sti
cwde
inc
stc
stc
jmp
xlat
inc
mov
jecxz
push
das
(bad)
(bad)
jns
shl
or
inc
xor
jecxz
inc
in
push
dec
sub
xlat
bswap
inc
idiv
shr
push
retf
ins
cmc
ret
int3
mov
dec
sub
ficom
pop
xor
mov
int
loopne
dec
fwait
ret
and
mul
outs
lods
sbb
dec
xchg
and
mov
inc
leave
or
push
sar
add
xchg
cmp
(bad)
lahf
les
(bad)
in
movs
mov
jl
icebp
in
ret
cmp
cmp
call
dec
pusha
mov
loopne
xor
(bad)
fisub
jns
cmp
cmps
fistp
ret
rcl
push
and
dec
and
sbb
int3
dec
es
mov
jl
sub
sub
xor
cmp
pop
arpl
xor
or
push
xchg
add
or
arpl
int3
push
and
mov
dec
aas
xlat
jg
push
sub
push
jle
stc
lds
test
repz
or
xor
pop
rcl
jmp
push
enter
aas
mov
stos
shr
aam
(bad)
cmps
mov
push
in
jmp
cmp
test
mov
pop
out
inc
push
daa
in
mov
sub
push
sbb
out
or
xor
sbb
pop
loop
in
cmps
frstor
mov
daa
loopne
push
leave
fmul
call
fadd
jns
sub
cmps
add
xor
push
lock
ds
push
icebp
pop
cdq
cmp
dec
or
fstp
(bad)
into
cmp
cwde
js
pusha
mov
cmp
lea
into
cdq
imul
jo
xlat
pushf
pop
or
push
retf
and
ret
jb
aas
push
mov
mov
mov
rep
in
push
mov
inc
cdq
or
fbstp
std
clc
xchg
mov
lahf
not
movs
fadd
dec
in
shr
mov
(bad)
jbe
in
mov
imul
xchg
inc
mov
mov
jmp
mov
(bad)
jl
dec
xor
jle
sbb
adc
push
ins
ds
push
pop
xchg
stos
cmp
icebp
mov
es
cmc
fisub
push
push
sub
out
in
ror
mov
into
loope
xchg
xchg
inc
jg
push
pop
push
popf
call
jno
and
(bad)
mov
out
pop
rcl
sbb
loop
and
aam
adc
and
aaa
push
add
mov
mov
mov
sbb
mov
das
mov
test
mov
xchg
xchg
jmp
neg
mov
xchg
mov
fwait
arpl
dec
pop
mov
lea
mov
or
out
(bad)
jg
imul
mov
out
dec
dec
into
push
xor
stos
sub
pop
push
aas
repnz
fdivrp
sbb
and
mov
mov
test
or
inc
mov
push
mov
sub
or
cmp
cmp
and
ja
mov
push
jle
movs
stos
mov
in
or
bound
push
mov
fbld
outs
mov
mov
sbb
fld
add
mov
outs
cmps
and
shr
mov
rsm
inc
and
sub
jae
add
sbb
mov
inc
sahf
(bad)
fdiv
jae
sub
leave
addr16
fidiv
lods
sbb
fsubr
imul
cmp
pusha
aam
xor
icebp
pop
retf
sub
add
dec
mov
push
or
aam
cli
mov
or
xchg
mov
mov
mov
arpl
gs
xor
add
call
mov
popa
or
and
add
scas
shl
dec
ffree
cld
mov
jb
xchg
pop
xchg
push
scas
ja
in
mov
aas
push
pushf
(bad)
dec
or
sub
xchg
clc
popf
push
(bad)
retf
adc
pop
adc
mov
jle
xor
icebp
mov
and
lock
lahf
mov
inc
inc
mov
mov
xchg
add
stc
leave
inc
mov
xchg
jmp
cmc
add
out
hlt
mov
add
(bad)
mov
bound
inc
mov
xchg
imul
loopne
test
pushf
int3
or
and
mov
pop
js
pop
inc
inc
xchg
stc
sub
cmp
xor
pop
push
das
adc
xchg
push
pop
push
jmp
xchg
sbb
pop
xchg
aaa
cli
ins
idiv
pminub
loope
out
jb
jne
mov
xchg
(bad)
push
xchg
hlt
add
mov
enter
and
fwait
or
rol
push
pop
fucomp
lds
aas
or
cli
lods
test
adc
ret
push
mov
popf
or
xor
jbe
sar
fldcw
je
fwait
icebp
mov
cmp
sub
rol
dec
sbb
fstp
outs
outs
call
push
loope
retf
or
jmp
pop
mov
push
sbb
pop
pop
or
mov
mov
popf
neg
jmp
push
xchg
rcl
ins
dec
out
test
sbb
push
test
test
mov
mov
fimul
lds
jl
call
(bad)
aam
ret
xor
ss
(bad)
push
rcr
pop
lods
cmc
enter
xor
arpl
ins
aam
jnp
xchg
mov
push
and
rcl
aaa
retf
hlt
rcr
(bad)
jb
aaa
cwde
cmp
mov
pop
cli
cmc
outs
cmp
pop
add
arpl
in
shr
jnp
xor
loopne
push
stc
cmc
and
jbe
dec
mov
push
add
lea
ficomp
jnp
idiv
rcl
jb
dec
(bad)
loope
xor
ins
sbb
and
sar
sub
div
es
stos
xor
popf
xchg
and
xor
jo
cmps
stos
shl
xor
push
cmc
loop
shr
pop
cmp
xchg
xchg
push
retf
mov
rcr
sub
je
mov
cmc
mov
ins
pop
inc
or
and
and
sbb
xchg
xor
mov
in
(bad)
sbb
mov
or
inc
clc
pop
jmp
aad
aas
xlat
sub
retf
fs
xchg
xchg
retf
je
lods
pushf
sbb
pop
dec
stos
repnz
ja
fisubr
int
cmp
dec
loopne
sub
test
les
jns
mov
and
mov
inc
adc
sub
inc
jnp
add
xor
shl
ins
arpl
mov
sub
out
mov
in
hlt
xor
ins
inc
call
mov
inc
adc
dec
mov
in
out
hlt
(bad)
dec
ror
jle
cmc
fwait
dec
ss
and
ja
ds
bnd
aad
popa
in
outs
imul
or
and
jl
mov
push
into
jno
jmp
or
jp
mov
xchg
sbb
adc
sub
lods
ror
cmps
push
push
mov
daa
inc
rcr
jno
add
scas
add
mov
and
ins
or
inc
xor
fnstsw
(bad)
inc
pop
pop
lods
push
mov
sbb
jne
push
cmp
mov
addr16
inc
mov
iret
mov
dec
mov
rcl
dec
xchg
test
repz
jne
ret
nop
push
addr16
push
(bad)
imul
mov
sbb
jecxz
push
mov
call
xlat
mov
mov
mov
and
outs
int
sbb
in
les
int3
mov
aam
xchg
fdiv
dec
mov
push
jne
call
in
mov
into
dec
loop
xor
mov
pop
pop
call
shl
lods
pop
icebp
(bad)
rcr
in
stos
mov
jae
inc
test
aad
adc
adc
mov
inc
mov
xor
cmps
aad
inc
loope
pop
dec
or
lahf
aam
loope
inc
int
jge
or
movs
leave
mov
(bad)
mov
pop
pop
das
sbb
dec
mov
cwde
mov
sar
mov
pop
mov
push
test
rol
outs
and
or
mov
sbb
xor
dec
push
into
pop
leave
inc
mov
and
cmc
and
mov
mov
inc
mov
cmc
xchg
(bad)
cmp
mov
and
in
sbb
out
xchg
mov
mul
in
in
cld
call
ins
clc
call
mov
lock
inc
pushf
dec
sahf
fld
dec
xor
pop
push
add
jb
fs
jp
out
retf
mov
je
fs
rol
inc
xchg
pop
std
(bad)
xchg
xor
jne
lahf
gs
lea
jns
hlt
cmp
daa
(bad)
fst
adc
xchg
mov
clc
(bad)
imul
cld
jne
cmp
mov
mov
jo
test
loope
push
ins
cld
push
jmp
int3
sub
inc
push
and
int
adc
mov
sub
sub
mov
loope
sbb
ror
aaa
jb
shl
pop
popf
adc
int
sbb
mov
enter
xchg
imul
xor
std
dec
test
mov
cld
jg
leave
out
jo
dec
aas
push
or
pop
ss
mov
jge
cmp
xchg
cwde
cmc
xor
pop
jg
xchg
rcl
repnz
or
sbb
rcl
retf
or
mov
retf
leave
sub
movs
jo
dec
stos
mov
push
std
xchg
cmps
add
xor
(bad)
in
out
inc
scas
mov
test
adc
stc
xchg
inc
in
mov
pop
ins
or
jmp
idiv
jbe
xor
test
neg
pusha
movs
pop
and
jns
xchg
xchg
jl
stos
scas
dec
ror
pop
(bad)
push
fs
mov
pop
mov
mov
or
push
push
loop
popa
jo
mov
add
mov
inc
movs
inc
adc
and
test
ficom
outs
mov
je
add
mov
mov
adc
inc
mov
xchg
loope
fld
mov
pushf
jecxz
xor
inc
(bad)
stc
sbb
inc
addr16
popf
or
or
mov
add
add
fst
push
push
add
dec
cmps
push
xchg
cmp
jo
push
pop
(bad)
bt
stos
loop
inc
cmp
retf
mov
lods
push
(bad)
lea
mov
mov
sti
mov
push
xor
pop
loop
jb
dec
fisttp
or
pop
retf
cli
xor
fcmovu
or
pop
nop
jecxz
out
arpl
bnd
aam
jnp
jg
mov
xlat
loopne
pandn
leave
rol
and
fdivr
enter
dec
stos
(bad)
pusha
jmp
fwait
or
mov
push
es
outs
mov
or
sahf
pop
dec
aad
movs
dec
sbb
data16
enter
fsubr
stos
stc
pop
push
mov
popf
cdq
jns
inc
fwait
push
pop
inc
leave
dec
cld
ret
or
mov
jg
pop
jo
ins
jmp
pop
cwde
sahf
xchg
retf
leave
mov
jmp
pop
mov
adc
ins
imul
dec
sar
inc
jl
outs
dec
jg
sub
(bad)
mov
sbb
sub
mov
xor
inc
fcomp
xchg
sbb
add
(bad)
cld
mov
jns
cli
or
push
sti
xor
aam
adc
pop
xchg
lock
push
push
inc
xchg
loop
push
fist
jne
inc
jns
adc
cmps
int
paddb
das
in
sbb
jmp
jb
jmp
mov
add
mov
adc
ret
xor
mov
or
pop
stos
xor
cmp
inc
sbb
pop
iret
inc
xlat
cmp
push
out
fst
(bad)
push
int
rcl
pop
mov
sub
mov
add
addr16
sub
test
mov
cmp
cli
adc
(bad)
xor
aad
stos
lods
mov
mov
xor
jmp
hlt
(bad)
outs
rol
xchg
xor
test
scas
movs
stos
sti
jne
shl
push
popf
mov
call
push
cwde
jnp
push
outs
mov
cdq
imul
jg
mov
mov
mov
ins
fbld
jmp
mov
xor
mov
(bad)
inc
(bad)
jnp
(bad)
clc
fld
jmp
jo
xchg
js
cmps
lds
inc
adc
sbb
fild
jns
push
mov
sub
popf
mov
mov
lods
ret
mov
ss
push
and
xchg
test
cdq
add
cdq
mov
xor
and
idiv
jns
rol
mov
push
jnp
out
mov
adc
scas
xchg
sbb
mov
xor
add
fs
mov
push
jmp
mov
sahf
sub
icebp
int3
mov
add
pop
cwde
aad
frstor
stos
xchg
jge
mov
sbb
dec
das
mov
mov
test
push
fld
or
in
cmp
sbb
xrelease
or
mov
lock
sti
dec
stos
test
push
mov
adc
pop
add
cmps
shl
sub
mov
aad
scas
mov
cmp
inc
pusha
ins
xor
push
xor
add
sub
dec
cmp
dec
dec
pop
sbb
mov
movs
adc
push
jecxz
ins
(bad)
aam
je
mov
jns
test
inc
test
(bad)
ss
ret
xchg
xor
dec
pop
pop
fild
imul
int
int3
or
movs
mov
cmps
cmp
sub
mov
push
cld
mov
outs
jg
and
mov
jns
pop
lods
mov
cs
push
mov
retf
scas
jp
and
shr
cmps
cmc
inc
adc
xchg
jbe
adc
das
cmp
mov
push
mov
dec
pop
mov
test
cld
test
loopne
fistp
mov
movs
bound
sbb
push
mov
pop
movs
inc
sub
mov
dec
pop
sub
mov
into
popa
inc
mov
inc
pop
inc
sbb
in
mov
icebp
test
mov
es
fldenv
out
daa
xor
push
add
test
push
test
push
dec
add
xchg
add
imul
cmps
test
imul
fwait
rol
call
cli
ja
jmp
mov
aad
ror
movs
clc
ror
add
xchg
sbb
dec
pop
sahf
lods
sahf
push
(bad)
or
repnz
stos
sbb
rol
aas
xchg
jg
xlat
(bad)
mov
repz
jno
sub
cld
inc
aam
mov
add
pop
adc
jge
xor
ins
cmp
mov
sub
mov
add
pop
inc
scas
push
das
sub
(bad)
cdq
sahf
(bad)
scas
call
pop
pop
xchg
push
and
jge
sbb
sub
push
cmp
sub
jne
(bad)
inc
je
shl
sub
jnp
setno
(bad)
out
not
lahf
adc
or
ds
lds
sbb
xor
inc
pusha
leave
mov
and
iret
mov
test
jne
fistp
mov
xchg
xchg
pop
sbb
cmp
inc
retf
pop
adc
push
pop
(bad)
mov
mov
rcr
cdq
bound
les
and
mov
pop
xor
in
js
outs
or
jmp
push
sub
mov
dec
dec
sub
mov
add
bound
das
sub
mov
push
ret
xchg
and
aam
ds
bound
push
adc
push
loopne
les
ffree
jne
out
test
jae
stos
retf
mov
clc
out
or
push
sbb
cmp
xor
jecxz
mov
call
push
loop
les
xor
out
xchg
dec
pop
cwde
cmp
dec
jno
pop
iret
push
ds
leave
js
sbb
ja
(bad)
mov
imul
loope
or
sub
mov
mov
mov
es
outs
push
mov
int3
and
adc
pop
ror
or
mov
loop
jl
xchg
push
inc
and
fldcw
mov
repnz
nop
sti
mov
enter
aas
outs
pusha
popa
scas
xor
ficom
push
inc
test
jg
xor
jae
(bad)
test
hlt
inc
xchg
aam
stos
xchg
shl
xchg
stos
das
mov
int
sbb
and
jg
imul
fwait
js
int3
dec
das
mov
clc
cdq
gs
mov
pushf
sub
sub
mov
and
retf
leave
int3
fcom
lods
xor
xor
jbe
mov
cmps
push
call
cdq
das
mov
(bad)
mov
movmskps
add
add
xchg
aas
aas
or
ret
jno
outs
xlat
dec
jmp
push
jnp
cmp
or
push
popa
out
inc
mov
mov
rcl
repnz
imul
popa
pop
add
ret
test
xor
inc
cmp
xlat
mov
test
jle
xchg
inc
adc
call
(bad)
xchg
sar
cmp
inc
(bad)
and
imul
arpl
retf
cwde
sub
jmp
sbb
add
and
xor
pop
or
mov
out
jns
push
xor
cwde
ror
and
mov
nop
clc
repz
aam
add
jmp
and
int3
cmp
cmp
stos
jns
add
das
sbb
mov
in
push
push
mov
inc
sub
mov
call
bound
sbb
adc
imul
in
or
mov
daa
test
mov
inc
xchg
int3
repz
inc
mov
retf
cmp
ins
jae
jp
out
std
inc
sub
mov
jae
repnz
cwde
dec
aam
inc
mov
add
xchg
jmp
mov
movs
jae
cmps
xchg
mov
sub
pop
cmp
aad
mov
xor
xor
fwait
arpl
push
dec
mov
nop
jge
xor
sub
add
dec
cdq
repnz
cli
out
inc
and
cmp
outs
mov
sahf
loop
mov
rcl
adc
jmp
mov
xchg
and
add
push
jl
sahf
push
push
add
bound
sub
cdq
push
jb
mov
test
xchg
mov
popa
jge
jecxz
mov
add
cmps
or
sub
std
or
xchg
inc
push
xor
or
jp
(bad)
push
and
ja
sub
pop
in
jl
xchg
gs
jo
xchg
cmp
jl
mov
mov
or
mov
sti
fisub
test
aas
out
jmp
xor
push
xchg
mov
and
fs
call
or
jns
fcmovnu
push
jo
out
repz
mov
dec
popa
xchg
das
std
hlt
sbb
cli
xchg
cmp
mov
arpl
lds
sub
call
or
neg
cmp
movs
or
(bad)
lods
pop
mov
jecxz
fs
retf
jmp
int
je
mov
push
loop
mov
and
adc
(bad)
mov
out
mov
fldenv
(bad)
pop
jno
add
or
sub
loop
je
rcr
sar
push
jbe
fiadd
pop
mov
or
xchg
arpl
xchg
and
mov
jno
push
inc
pop
pop
jp
cmp
push
sub
(bad)
cmp
add
in
lds
or
stc
popf
popf
inc
ja
and
into
dec
mov
mov
mov
das
out
test
sbb
shl
aas
nop
jmp
retf
je
in
js
adc
out
outs
xchg
inc
jl
inc
int3
jl
jmp
xor
push
lds
xor
into
push
cmp
adc
(bad)
push
push
repnz
stos
pop
(bad)
mov
push
push
pushf
in
xchg
stos
fimul
xchg
fucomp
imul
in
push
test
aaa
fs
xchg
dec
fdivp
jmp
in
into
(bad)
adc
lods
cmp
pop
arpl
pop
sbb
dec
cdq
lods
iret
dec
(bad)
push
loope
sahf
out
rcr
xor
sbb
add
daa
mov
sub
scas
and
rep
inc
add
jge
push
in
mov
add
pop
adc
icebp
pop
loope
push
fisubr
push
outs
lods
sub
pop
inc
mov
hlt
inc
or
sbb
pop
stos
aaa
adc
pop
mov
mov
pop
push
dec
mov
mov
adc
retf
push
popa
pop
pusha
rol
cmp
jne
add
outs
mov
ins
xlat
stos
adc
jl
(bad)
sub
and
jmp
mov
aam
scas
fistp
arpl
mov
jmp
das
xchg
jne
(bad)
loope
icebp
add
and
ret
addr16
pop
inc
dec
and
or
xor
fdiv
cmp
mov
mov
movs
lahf
push
loope
push
repz
mov
cwde
je
arpl
js
mov
fistp
pop
pop
popf
push
mov
jo
inc
wrmsr
jo
mov
xor
sahf
movs
popa
inc
mov
jl
(bad)
outs
mov
jne
sub
push
push
out
mov
cs
pop
stos
ror
or
pop
(bad)
pop
add
in
add
fdiv
jnp
mov
cmp
ds
dec
out
xor
dec
stc
scas
mov
cmc
imul
aaa
and
(bad)
fcom
push
mov
imul
inc
stc
xor
xchg
inc
scas
xchg
mov
(bad)
aam
or
inc
push
mov
fwait
pop
(bad)
or
mov
xor
ror
stos
movs
pusha
push
push
xor
inc
cmp
sbb
jbe
mov
cmc
int
push
push
lds
stos
adc
or
dec
loope
push
and
xor
xchg
pushf
or
(bad)
adc
mov
test
shr
ja
xchg
push
cmc
cmp
jnp
sbb
scas
dec
jo
clc
mov
ret
push
or
sahf
jb
std
div
shr
icebp
in
push
popa
in
inc
mov
(bad)
test
lods
(bad)
sbb
jnp
pop
mov
xchg
mov
adc
xlat
jb
jo
sbb
and
add
push
inc
mov
daa
aas
and
mov
push
scas
iret
jae
sub
jmp
sub
out
lock
or
daa
dec
movs
jl
je
ins
fdiv
daa
sub
xchg
mov
sbb
inc
pop
adc
push
xchg
mov
mov
(bad)
adc
jnp
add
rol
inc
pop
rcl
xor
mov
jae
retf
arpl
test
mov
push
sbb
les
nop
inc
loope
cmp
mov
jae
outs
nop
fst
stos
pop
fld
in
mov
into
clc
iret
jp
mov
(bad)
sub
mov
mov
push
sahf
in
nop
mov
or
ret
outs
jnp
dec
jno
addr16
push
retf
mov
mov
push
les
movs
dec
stc
cmp
sbb
mov
out
adc
in
cmp
add
dec
aam
fucomp
adc
icebp
cmps
shl
rcl
fcmovnbe
stos
push
out
adc
shl
jmp
loopne
jle
ins
push
pop
adc
out
rcr
fs
mov
jns
push
retf
test
bound
jnp
and
jnp
mov
adc
or
dec
and
pop
jbe
lods
mov
dec
sar
mov
inc
movs
xor
(bad)
sub
es
xchg
jno
jbe
das
ret
sbb
mov
cmps
mov
test
imul
lahf
cld
mov
xor
test
(bad)
bnd
pop
test
mov
jge
mov
cmp
stos
pop
test
cmp
pop
imul
clc
sbb
lds
rol
inc
(bad)
jge
adc
fsub
mov
loop
push
xchg
dec
in
into
lock
enter
jg
add
cs
push
adc
aaa
stos
sbb
(bad)
int3
pop
loop
(bad)
fnsave
ins
cmps
jl
ror
lock
test
daa
(bad)
cmp
mov
cmp
(bad)
stc
retf
pop
add
lods
or
jle
mov
xor
inc
fisttp
mov
jge
dec
call
mov
sub
outs
das
inc
mov
inc
rol
dec
add
lods
enter
xor
xor
sbb
cwde
dec
aad
inc
jae
es
jo
je
sub
cmp
stos
mov
std
mov
jbe
mov
aam
and
cmc
fstp
fild
scas
retf
enter
iret
cdq
fistp
mov
add
mov
pop
mov
xchg
mov
stos
mov
mov
cmc
pop
mov
mov
retf
jbe
dec
aad
int
das
(bad)
jnp
push
inc
inc
cmp
out
cmp
cmp
push
mov
sar
cld
lods
fdivp
pop
jg
jecxz
mov
and
and
pop
aam
(bad)
cmp
xchg
and
lods
pop
sub
out
cmps
dec
sub
dec
or
pop
jbe
aad
inc
and
cwde
inc
outs
aaa
loopne
pop
push
in
(bad)
retf
out
(bad)
(bad)
push
leave
lds
push
jbe
jno
aaa
lea
in
sub
cmp
push
and
ret
jae
mov
mov
jo
push
fucomip
pop
mov
adc
cs
mov
dec
aas
(bad)
jg
or
ds
test
jb
(bad)
or
jae
jp
ja
sahf
jle
dec
arpl
in
sub
test
movs
test
ret
aas
add
inc
jno
mov
inc
mov
int3
mov
jbe
sbb
aas
xor
mov
setb
mov
sub
jae
sub
cmp
in
jge
inc
cmp
scas
jl
(bad)
xchg
dec
outs
leave
mov
ror
push
(bad)
jo
gs
lds
clc
dec
mov
jns
jmp
cmp
jo
enter
(bad)
outs
push
icebp
in
pop
jecxz
fistp
nop
cdq
xchg
add
adc
(bad)
cmp
mov
pop
inc
iret
xor
push
pop
imul
xchg
stc
mov
and
daa
mov
test
jbe
lea
mov
cmp
push
sbb
mov
cmp
xchg
nop
jbe
cli
jno
adc
inc
pop
and
inc
repnz
scas
fild
ds
outs
cs
jb
ror
out
and
out
into
xchg
or
or
ins
fcmovnu
push
pop
movs
push
jp
ret
mov
in
inc
inc
mov
ret
ss
popa
add
sbb
jl
push
ficom
mov
jns
mov
mov
mov
inc
aaa
inc
pusha
sub
dec
cdq
imul
xlat
push
ret
pop
mov
dec
sahf
pop
xor
push
mov
pop
leave
mov
and
mov
aam
inc
and
sbb
rcl
ds
mov
mov
sti
loope
push
daa
mov
std
mov
dec
aas
stc
push
outs
movs
dec
(bad)
lds
pop
das
push
seta
cmp
jne
pop
movmskps
iret
jo
xor
or
lods
pop
fwait
sub
cmps
add
scas
loopne
adc
das
xor
or
and
xchg
test
xor
push
xor
sar
pop
movs
dec
cmp
dec
popf
xchg
mov
xchg
ss
push
daa
gs
pushf
cld
dec
stos
or
mov
fs
fs
add
mov
pop
push
inc
push
push
lods
mov
ss
mov
in
shl
test
stc
cmps
mov
scas
dec
pop
mov
frstor
bswap
cdq
les
sbb
int3
les
xor
fistp
inc
scas
call
cld
and
mov
mov
and
cmp
dec
cmps
adc
fistp
test
js
inc
retf
jge
enter
sbb
dec
and
call
cmps
jecxz
or
jnp
dec
js
push
fisttp
cmps
pop
jmp
adc
ins
hlt
test
sub
lahf
mov
mov
shl
sbb
inc
repz
xchg
sar
push
sbb
sbb
int
(bad)
shl
sbb
or
out
jmp
das
out
mov
jecxz
loopne
inc
cwde
sbb
fs
fiadd
adc
or
add
cmp
stos
xchg
lds
test
sub
mov
mov
push
test
sahf
mov
jmp
outs
pop
inc
int3
stc
stc
mov
test
pop
sub
nop
dec
mov
fcmovnbe
scas
jmp
in
loope
addr16
pop
je
hlt
push
repz
jb
aaa
cmc
pop
movs
jo
sub
pushf
dec
add
in
into
scas
retf
stos
sbb
dec
ret
or
jle
sub
push
idiv
add
fwait
dec
ins
push
in
adc
stos
mov
dec
mov
hlt
neg
loopne
mov
jno
bound
mov
jp
(bad)
cmc
push
js
out
fwait
cmp
add
out
pop
imul
jp
test
mov
lods
jle
xor
push
repnz
jge
mov
or
fs
in
push
inc
dec
movs
mov
es
push
dec
jecxz
mov
popa
popa
xchg
(bad)
jmp
pop
mov
push
adc
(bad)
test
push
pop
dec
addr16
(bad)
and
cli
mov
jb
stos
adc
test
and
sub
test
fcmovu
cmc
ja
shl
jle
jmp
or
rcl
cmps
mov
or
popa
jae
iret
dec
stos
sar
pop
add
xchg
popa
pop
sbb
adc
dec
cli
inc
jmp
mov
add
popf
push
cmps
dec
and
enter
mov
mov
cwde
neg
test
mov
ins
inc
ins
cmp
mov
push
and
sub
jge
pop
cwde
xchg
mov
mov
ins
(bad)
mov
ins
pop
cmp
call
in
ss
(bad)
dec
int
enter
xlat
push
ret
dec
adc
xor
adc
jge
rcr
(bad)
rcl
dec
jmp
cmp
adc
jl
stos
minpd
add
gs
sub
nop
outs
push
xor
xor
cmc
enter
popa
pop
cmp
cmp
pop
imul
or
lock
shr
mov
and
jbe
fisttp
call
cld
aas
in
adc
repz
imul
and
test
sub
shl
jnp
cmps
pop
ins
retf
test
jge
mov
mov
jno
aad
shl
pop
ficom
xchg
and
mul
cmps
add
fcomp
loopne
inc
popf
inc
jp
mov
xlat
jge
jns
aas
pop
cmps
shrd
and
dec
popa
cmp
sub
xchg
mov
sar
fmul
adc
or
adc
fwait
addr16
mov
pop
mov
dec
push
(bad)
jmp
lahf
mov
jmp
mov
push
jb
aad
test
sbb
retf
push
std
test
cmc
ds
pop
mov
scas
mov
lock
mov
lods
mov
sbb
in
and
cmp
imul
jnp
pop
xor
push
jg
mov
push
in
xchg
cmps
lahf
rcr
add
leave
lds
pop
adc
arpl
inc
int3
mov
jns
adc
pop
ds
dec
cdq
cmp
jbe
fadd
push
sbb
push
cmc
or
pushf
cmps
fistp
outs
push
sub
icebp
call
push
mov
gs
xchg
inc
add
popa
and
inc
outs
sbb
imul
stos
mov
push
pop
inc
dec
outs
sbb
cmc
fnstcw
mov
pop
pop
punpcklwd
mov
adc
cmp
test
or
shl
push
ins
pop
adc
ja
cmps
ins
sub
jo
mov
or
push
inc
cwde
lock
shl
pushf
jl
movs
lea
mov
cs
out
inc
add
(bad)
inc
outs
fcomp
pop
mov
jmp
pop
ret
jp
movs
mov
into
xchg
mov
sar
ror
loope
int
adc
jbe
retf
push
mov
push
add
ret
add
add
sbb
push
dec
inc
add
xchg
movs
dec
xor
test
sbb
mov
loopne
icebp
xor
mov
sub
fnstenv
dec
mov
xchg
dec
push
daa
mov
or
dec
out
int3
sbb
push
(bad)
adc
dec
mov
pop
sbb
sahf
inc
dec
(bad)
aam
imul
repnz
repz
mov
dec
and
xchg
repnz
mov
adc
into
adc
shr
xor
loop
inc
adc
jne
sub
xor
movs
push
scas
dec
pusha
aad
push
mov
retf
(bad)
scas
push
add
movs
mov
adc
fcomp
sub
jnp
enter
out
sbb
mov
and
mov
pop
out
xchg
inc
fsubr
fucomip
popf
xchg
js
test
loop
fs
push
dec
in
inc
repz
push
sbb
aas
ret
ins
cwde
mov
pop
fimul
cmp
das
push
(bad)
xchg
aam
repz
cmovno
imul
xchg
das
rcl
xchg
dec
cld
or
jp
jbe
retf
mov
push
iret
push
mov
mov
cmps
loope
sar
xor
into
or
jno
add
(bad)
cld
adc
xlat
pop
ss
rcr
and
pop
sar
mov
push
inc
pop
nop
dec
cli
sub
popf
hlt
cmp
test
jmp
xor
jno
leave
shl
adc
mul
shr
push
outs
dec
icebp
sub
std
push
fsubp
cmp
mov
mov
pop
lahf
mov
dec
int
stos
call
sahf
inc
xor
xchg
jmp
mov
add
xchg
push
in
ficom
ret
mov
cmp
pusha
inc
adc
pop
sbb
shr
push
mov
xchg
mul
jb
std
in
in
pop
sub
sub
sbb
sub
fbld
movs
mov
je
(bad)
add
in
dec
mov
add
test
ret
inc
clts
cmp
mov
loop
and
jmp
ja
in
sbb
lods
jp
ins
loope
imul
stos
pop
rol
bnd
inc
ins
rcr
or
test
dec
call
test
xchg
lods
cmp
cmp
cmp
cmp
mov
and
inc
loopne
cmp
pop
mov
sbb
lahf
ja
and
xor
pop
ret
movs
lahf
out
push
popa
sub
adc
inc
push
es
add
ins
or
xor
or
jbe
scas
test
imul
push
stc
pop
cmp
jne
mov
pushf
retf
pop
dec
hlt
jle
mov
stc
or
call
sub
push
ins
sub
and
lds
(bad)
shr
clc
inc
push
lds
iret
div
xchg
jbe
pop
aaa
jecxz
or
lods
arpl
sahf
and
hlt
and
or
in
aad
sbb
add
cmp
out
ja
jmp
mov
jnp
movs
js
and
dec
adc
into
add
xor
inc
sbb
shl
add
int3
das
xchg
test
add
jle
inc
inc
dec
jb
pop
shl
fdiv
add
inc
push
shl
dec
sub
fs
clc
inc
dec
sub
test
mov
pop
addr16
aas
std
aad
sar
das
cmp
dec
sbb
fmul
inc
mov
int
aad
sbb
data16
and
outs
cmp
in
cmc
jo
test
ja
xchg
mov
mov
dec
sbb
inc
pop
arpl
mov
loope
cli
or
daa
retf
xor
adc
iret
sub
push
jl
mov
inc
mov
add
mov
mov
fbstp
popa
add
mov
jp
push
movhps
icebp
repz
shld
out
pop
mul
pop
mov
clc
xor
pop
xchg
pop
pop
inc
cmp
sti
stos
fs
cmp
test
mov
rep
fld
hlt
add
cwde
lar
xchg
mov
ja
mov
(bad)
fld
scas
mov
jno
xchg
mov
sti
mov
(bad)
iret
cmps
pop
xchg
cmps
or
sbb
fcomp
in
jno
sbb
popa
or
into
jnp
test
fsubr
mov
jo
push
loop
cmc
fs
jge
popf
cmp
push
pop
call
pop
data16
add
push
dec
jne
cli
mov
mov
loopne
cmp
lea
adc
mov
and
icebp
neg
inc
and
and
les
jge
sub
jmp
jns
jno
jle
mov
mov
mov
das
test
dec
mov
repz
sahf
dec
inc
aad
popf
and
stos
scas
dec
je
repnz
les
scas
nop
add
outs
imul
pop
cmps
mov
leave
xor
iret
cmps
push
push
jns
std
xchg
pop
pop
mov
sub
xchg
inc
repz
dec
cmp
daa
outs
mov
cmps
icebp
je
dec
sub
xchg
mov
xor
sbb
fucomp
fcom
imul
push
sti
and
in
add
fs
inc
sbb
call
and
mov
inc
jp
mov
icebp
inc
pusha
popa
jmp
das
push
and
icebp
fbstp
ins
adc
add
dec
cmc
and
icebp
lock
dec
cwde
sub
push
call
int
mov
cmp
cwde
sbb
lock
and
sub
loop
ret
sbb
in
aad
and
in
out
push
cdq
jmp
pop
cmp
in
sbb
(bad)
sar
jp
xchg
jae
dec
fwait
outs
in
pop
xchg
cmp
fsub
jno
push
inc
xor
or
sub
jnp
cli
add
test
movs
addr16
pop
mov
movs
jbe
sub
adc
bound
adc
add
sbb
mov
nop
(bad)
aas
cld
jmp
out
cli
lods
inc
jmp
mov
mov
js
lock
jecxz
xchg
cmps
sub
push
cdq
jmp
in
inc
aas
shl
sbb
ins
(bad)
jge
xor
movs
repnz
mov
or
outs
(bad)
push
sub
cmc
add
mov
pop
ret
fisubr
mov
push
inc
lods
pop
in
loop
mov
mov
inc
in
jns
imul
mov
ret
jo
xor
sub
repnz
add
in
lods
push
sahf
inc
ja
ins
rcl
cmp
inc
pop
mul
stc
inc
sar
push
mov
jg
int3
jo
jmp
sbb
sbb
in
xchg
out
pop
cmp
mov
fidiv
xchg
lahf
mov
ss
adc
push
sar
imul
dec
call
out
jno
inc
push
ins
ds
vmovlpd
sub
push
adc
pop
int3
(bad)
cmp
push
leave
loopne
movs
adc
add
in
pop
cli
stc
int3
lods
les
sub
movs
ret
push
jl
and
add
cmp
ficom
(bad)
mov
ds
cmp
call
xchg
mov
add
inc
lea
inc
or
or
cmp
mov
push
sub
push
cli
mov
int3
xor
loopne
(bad)
add
mov
xchg
xchg
mov
std
or
ret
test
or
sti
mov
xchg
mov
js
push
or
add
lods
cld
mov
ins
outs
in
and
mov
xor
pop
in
out
loop
int
dec
je
cmps
sbb
arpl
dec
mov
xchg
or
cmp
stos
pop
es
and
and
ret
test
push
scas
cmovg
push
and
pop
or
je
push
jns
xchg
mul
in
outs
arpl
add
jp
call
mov
adc
ficom
mov
and
in
fwait
inc
repz
rcl
jae
sbb
gs
les
aad
inc
cmp
mov
fucomip
mov
push
lds
dec
mov
ret
inc
nop
ret
mov
imul
arpl
or
xor
jmp
jmp
movs
mov
and
mov
imul
mov
popa
xor
jae
clc
push
xchg
mov
pop
xchg
(bad)
gs
arpl
pop
(bad)
mov
ja
add
sar
rol
pusha
movs
bnd
mov
sbb
push
sub
push
cmp
dec
xor
xchg
and
fisubr
xchg
push
cmc
out
es
jecxz
(bad)
loop
data16
inc
sub
inc
mov
inc
dec
dec
pop
adc
mov
push
push
imul
or
xchg
stos
shr
xchg
xchg
call
std
in
out
adc
enter
fucomi
mov
add
adc
dec
add
hlt
imul
popa
jg
xor
out
mov
(bad)
fimul
bound
dec
aaa
lahf
push
jp
dec
dec
xchg
jmp
xchg
xor
nop
fcom
rcl
loopne
jge
jmp
and
jecxz
dec
jne
ins
mov
std
xor
adc
les
or
cmp
shl
cmp
push
es
clc
mov
int3
mov
push
mov
retf
popf
ficom
xchg
retf
cmp
inc
in
outs
dec
mov
js
aad
xor
imul
repnz
mov
sbb
lods
mov
mov
adc
cli
aaa
retf
mov
in
retf
inc
sbb
mov
sbb
cmps
fidivr
cmp
sar
aam
out
pushw
xchg
ja
rcr
stos
in
push
sbb
mov
ins
cmp
movs
movs
std
out
and
adc
aaa
fwait
aam
nop
(bad)
stc
sbb
dec
cmp
sub
mov
pop
or
cdq
(bad)
pop
ss
daa
pop
fld
aam
dec
jae
dec
hlt
sahf
(bad)
inc
jecxz
retf
jle
je
pushf
jmp
mov
mov
dec
int
jo
jno
add
or
pop
pushf
cli
sub
jo
fwait
add
(bad)
xor
xor
es
cs
test
xor
add
scas
jo
les
fisttp
mov
jo
repnz
mov
lds
rcl
add
jmp
mov
shr
pop
ds
and
sar
xchg
pop
ret
push
rcr
dec
inc
add
inc
jl
inc
add
(bad)
cmp
adc
lds
in
cmp
xor
sahf
cmp
push
dec
fldcw
xor
imul
add
adc
stos
hlt
adc
cmp
and
lahf
jnp
mov
fwait
(bad)
jg
and
arpl
jb
jl
sar
pop
ja
jle
sub
mov
fld
sbb
repz
(bad)
dec
ret
xor
pop
mov
sbb
push
cmps
dec
(bad)
xchg
clc
adc
maskmovq
imul
hlt
mov
adc
xchg
in
and
enter
mov
mov
scas
jl
movs
push
jae
mov
sub
ins
cli
rcr
(bad)
daa
mov
xchg
aas
add
aam
mov
adc
mov
ins
mov
fnstcw
jmp
ins
mov
sbb
dec
cmps
out
add
pop
in
mov
test
jmp
mov
stc
and
icebp
out
fild
retf
clc
and
lods
pop
mov
push
jmp
loopne
sbb
add
popa
js
out
or
test
jae
xor
mov
and
jmp
push
mov
jmp
pop
inc
cmps
(bad)
movs
mov
(bad)
sbb
push
in
stos
in
aad
jge
sbb
ins
pop
push
jp
xor
cmps
xchg
push
jb
cmp
or
fisttp
retf
sbb
icebp
retf
(bad)
xor
mov
movs
pop
mov
cwde
je
(bad)
f2xm1
mov
iret
xor
shr
lods
outs
pop
pop
ds
push
xchg
jne
fnsave
icebp
and
or
pop
call
cdq
mov
sub
push
push
cmp
push
sar
sbb
sar
ficom
les
push
inc
add
pop
dec
stos
out
lds
inc
push
or
mov
out
fcmovnu
test
mov
pop
mov
mov
mov
sbb
dec
psadbw
mov
mov
icebp
jne
test
jnp
jae
jl
jmp
xchg
adc
inc
mov
clc
lahf
adc
pusha
and
adc
fdiv
jg
fs
clc
mov
lods
pop
scas
pop
or
(bad)
std
push
sbb
pop
bound
shr
jge
cmp
dec
jp
mov
movs
cmp
add
(bad)
xor
or
dec
nop
add
test
in
ja
mov
out
jg
dec
cmps
jbe
adc
push
mov
xchg
sbb
adc
mov
ins
(bad)
movs
call
push
test
push
push
cmps
dec
inc
sar
cmp
xlat
call
mov
add
fisttp
inc
xchg
hlt
xlat
call
pusha
xor
les
addr16
(bad)
xor
data16
sub
mov
adc
inc
dec
sub
(bad)
xchg
outs
je
push
imul
and
sbb
sahf
das
inc
daa
xchg
xchg
jb
and
out
rcl
lds
cmps
dec
fldenv
leave
dec
xor
adc
ja
popf
push
ss
dec
mov
jmp
xor
xchg
je
add
retf
adc
pusha
jae
sub
mov
stos
leave
mov
icebp
xor
jle
icebp
push
xor
dec
mov
mov
mov
aas
mov
(bad)
xor
jmp
mov
inc
retf
aas
xchg
and
repz
inc
push
adc
sub
add
iret
shr
(bad)
xchg
in
(bad)
data16
test
pop
or
sub
pop
adc
push
out
jmp
push
cmp
lods
retf
inc
loope
aaa
adc
ins
adc
test
adc
jmp
int3
push
sar
xor
pop
inc
gs
sub
dec
jne
js
push
popf
cmc
outs
rcr
rcl
mov
mov
mov
sti
test
xchg
mov
mov
sub
jnp
adc
dec
(bad)
cmp
pop
sbb
fisub
push
loopne
push
push
xor
shl
and
dec
add
push
xlat
call
loope
cmp
or
mov
jns
scas
or
shl
call
mov
je
retf
mov
rol
xlat
nop
sar
hlt
mov
mov
leave
push
arpl
xchg
cdq
hlt
sub
sbb
fld
dec
retf
mov
dec
push
jmp
inc
(bad)
sbb
dec
sub
out
pop
adc
mov
sar
mov
ja
leave
adc
add
into
adc
call
lods
mov
xchg
inc
call
dec
cmp
bound
cld
dec
add
pusha
loopne
loop
aam
jg
popf
cmp
dec
pop
enter
jbe
je
or
cmp
mov
push
xor
or
aam
inc
aaa
sub
cli
outs
add
jne
xchg
pop
std
dec
test
sbb
pop
or
leave
out
gs
outs
jecxz
xor
in
cld
(bad)
sti
jo
lahf
adc
mov
inc
pop
push
dec
sbb
dec
push
cmp
mov
cmps
jb
or
ins
fistp
mov
mov
xchg
fs
xchg
(bad)
sbb
aam
repz
add
or
inc
rcl
dec
into
outs
mov
or
in
movs
mov
jecxz
mov
jge
lahf
sbb
ror
jns
in
test
push
(bad)
xchg
cmp
cmps
out
pop
sub
sub
imul
retf
movs
cmps
test
jbe
nop
mov
leave
sub
sub
or
mov
jbe
push
enter
push
jge
xor
jmp
bound
cmps
jo
xor
ret
adc
push
arpl
xor
arpl
jns
or
call
sub
fild
das
sbb
fwait
jp
imul
pop
xlat
cs
pushf
jp
cmp
test
enter
jo
xor
enter
(bad)
jmp
pop
add
xchg
das
jo
out
pop
loopne
repz
xchg
sahf
jne
shl
add
adc
or
or
cmp
inc
or
fistp
retf
loop
dec
xchg
sar
mov
rcl
xor
inc
fwait
xor
outs
in
icebp
cli
pusha
sub
ds
mov
cs
aaa
imul
lods
sbb
lahf
adc
jns
dec
push
add
pop
xchg
shr
push
cmc
adc
mov
neg
add
clc
stos
aad
scas
(bad)
ror
push
int
sbb
xchg
lods
push
xchg
adc
and
adc
ror
add
lock
cmc
imul
aaa
aad
adc
mov
and
mov
sub
fild
sbb
or
push
xlat
pop
cmc
cmps
sbb
or
pop
loope
cmc
shl
or
push
add
jb
sbb
out
push
inc
sbb
mov
ss
hlt
int
mov
dec
mov
push
mov
lods
jno
arpl
test
mov
cmp
mov
lds
loopne
add
dec
push
adc
pop
adc
out
ins
push
mov
std
jmp
das
loopne
fisub
pop
jno
mov
or
shl
cs
pop
fisub
gs
mov
daa
add
inc
sbb
shl
test
xchg
pop
dec
fcos
clc
jo
cdq
push
push
mov
mov
mov
neg
dec
cmps
fdivr
sbb
aas
add
gs
xchg
mov
push
cmps
repz
mov
mov
jmp
(bad)
loop
aam
bound
inc
adc
add
rcl
popa
mov
ss
std
imul
cmp
and
and
cmp
out
mov
pop
jb
imul
out
sbb
push
mov
fldcw
jge
xlat
dec
mov
mov
xchg
aad
out
jle
jbe
pop
repnz
xchg
outs
pop
mov
adc
inc
xor
jmp
xor
retf
jno
push
lods
fiadd
lock
mov
mov
adc
sahf
movs
(bad)
stos
xor
sbb
sar
(bad)
(bad)
das
xchg
test
xchg
mov
stos
jmp
sbb
lods
popa
and
cmc
pop
xchg
ret
jnp
mov
enter
repz
bts
xchg
hlt
in
adc
jecxz
das
bound
adc
xlat
call
es
dec
mov
imul
enter
das
fst
mov
addr16
into
adc
loop
fistp
add
dec
out
push
cmps
mov
stos
in
inc
dec
add
outs
dec
pop
xchg
jb
dec
add
ins
xor
imul
push
daa
mov
mov
dec
mov
icebp
out
(bad)
push
cmp
sub
cmps
inc
pop
fcmovbe
cmp
add
and
aam
or
loopne
ins
imul
mov
ror
xchg
psrlw
rol
shl
inc
jb
stos
fstp
in
add
jg
fnstcw
dec
fsub
std
std
out
push
mov
and
sbb
pop
pop
cmp
leave
jne
add
jge
inc
fidiv
pushf
in
inc
mov
out
xchg
lods
and
xchg
jne
out
push
adc
sub
neg
jne
mov
pop
push
or
and
das
fidiv
dec
dec
retf
retf
dec
jmp
cmc
jmp
aas
mov
jne
mov
cmp
sti
ret
jo
imul
sti
loopne
mov
mov
dec
mov
jl
add
inc
ret
dec
fcmovnu
ret
xchg
xchg
icebp
scas
ret
lods
call
xlat
call
ret
sub
xchg
shl
pop
and
fiadd
or
cmc
popa
imul
sbb
add
retf
xor
add
mov
int
cmp
cmps
fmul
inc
fild
aas
scas
(bad)
cmps
data16
mov
aad
add
mov
das
mov
push
into
jl
and
jns
mov
aas
(bad)
mov
daa
fs
mov
in
jnp
call
out
jle
call
jns
ret
mov
es
inc
fidiv
lock
sbb
push
repnz
add
cmc
mov
stc
ins
sub
cld
(bad)
dec
cli
mov
jecxz
icebp
cli
ret
mov
aas
das
push
cmp
fisub
es
imul
xor
mov
mov
scas
ror
sbb
pop
add
arpl
or
fild
pop
pop
and
lods
test
ret
pop
ja
add
cwde
cmps
inc
mov
push
jno
inc
test
or
sub
pushf
sub
pop
or
sbb
and
or
dec
ret
push
int
scas
or
sbb
jmp
xchg
mov
addr16
adc
xchg
fld
mov
cli
sbb
cmp
sub
addr16
sbb
xchg
stos
push
call
push
mov
clc
rcr
pop
retf
cmc
(bad)
test
mov
retf
jne
sub
shl
push
mov
call
fs
xlat
mov
pop
inc
pushf
ja
loopne
inc
xchg
xor
push
fwait
aam
mul
dec
push
(bad)
aam
cmps
sub
inc
dec
xchg
add
out
rcr
cmp
mov
pop
add
(bad)
cli
lds
add
ss
sub
xchg
loop
xor
test
retf
inc
test
imul
pop
fwait
jmp
retf
popf
rcr
pusha
xchg
xchg
add
inc
ret
lahf
fnstcw
adc
dec
xchg
mov
pop
xchg
dec
or
xchg
xchg
mov
sar
push
xchg
jmp
nop
scas
out
and
shr
sahf
push
sub
mov
lds
mov
adc
sub
lods
mov
and
icebp
fisttp
jo
sbb
mov
jl
shl
call
loope
push
mov
loopne
xchg
xchg
retf
adc
mov
ror
cmp
in
dec
mov
and
daa
sub
jbe
aad
fistp
push
mov
daa
mov
fdivr
push
je
std
pop
dec
push
rcr
ins
mov
std
call
shl
out
pop
dec
pushf
pop
scas
mov
mov
or
sbb
lds
pop
mov
or
or
jo
cld
shr
ds
mov
push
sbb
iret
inc
sub
int
(bad)
(bad)
jmp
pop
rcr
data16
cmp
ret
cmovl
loopne
scas
push
xchg
dec
popf
ficomp
pop
add
cmps
fdiv
int
imul
push
jbe
push
jmp
jbe
xor
mov
push
fidivr
ds
outs
shl
cmps
loop
leave
das
repz
sbb
enter
into
lahf
and
rcr
mov
fdiv
xchg
call
xchg
or
add
out
push
in
es
adc
mov
mov
mov
inc
popf
bnd
test
(bad)
mov
ud0
cmc
(bad)
mov
push
aas
cmp
nop
aaa
inc
push
inc
arpl
stc
jb
out
cmp
push
jecxz
retf
inc
shl
js
mov
ins
hlt
sbb
or
shl
inc
popa
popf
loope
xor
mov
aad
cmp
xor
cmp
add
or
lock
push
cmp
lea
jns
outs
or
stos
sbb
jmp
movs
jo
or
or
sar
stc
loopne
xlat
push
or
inc
lds
and
push
fisttp
into
adc
cmps
and
aam
dec
nop
lea
pop
pop
out
daa
pop
and
mov
mov
mov
popf
jg
jg
data16
sbb
mov
std
imul
outs
inc
xchg
xor
push
inc
retf
inc
add
add
pop
or
xchg
retf
mov
shl
push
fisttp
fdiv
add
jno
out
nop
xchg
inc
mov
mov
in
daa
pop
pop
cmp
scas
adc
data16
sub
loop
xchg
ins
dec
es
out
leave
pop
arpl
ja
aaa
xor
inc
test
sahf
sahf
in
sub
add
and
clc
or
hlt
dec
movs
add
push
sbb
int
sub
xchg
push
imul
es
arpl
repnz
mov
push
cwde
adc
mov
mov
mov
loopne
mov
fisttp
pop
or
dec
int3
inc
add
cmp
push
xor
or
push
pop
pop
das
jmp
pop
mov
test
fninit
nop
inc
sub
mov
lahf
ret
fst
ret
cdq
sbb
popa
(bad)
jnp
movs
call
or
add
adc
xchg
sahf
jg
test
nop
ins
or
leave
xchg
add
jp
xchg
test
pop
sub
cmp
and
inc
push
cvttps2pi
pop
in
sub
shr
out
mov
retf
push
shl
call
lahf
lahf
push
(bad)
repnz
dec
inc
sub
outs
jo
les
imul
call
jecxz
and
bound
inc
mov
jns
sbb
jne
mov
xor
mov
ss
dec
cmp
mov
mov
int3
and
pushf
xchg
and
push
aam
and
jl
into
mov
jb
ins
das
scas
iret
loope
lock
jge
jne
xor
and
aam
mov
inc
or
rcl
sub
movs
cmc
movs
stos
or
inc
movs
add
or
test
xchg
push
mov
gs
jns
idiv
(bad)
sti
inc
mov
adc
popa
sbb
cli
test
or
hlt
add
sub
imul
push
test
cs
xrelease
fimul
pop
cmp
cmc
pop
pop
lock
clc
push
mov
jp
enter
das
and
mov
aaa
adc
sbb
sbb
xor
sub
pop
call
mov
adc
inc
data16
cmp
fsubr
inc
push
nop
xchg
mov
(bad)
add
stos
or
sub
push
sub
xchg
dec
inc
pop
xor
fwait
loope
bnd
sub
xchg
xchg
xchg
mov
cmc
cmp
(bad)
jecxz
mov
ins
push
scas
xor
test
std
je
and
pop
jmp
mov
jecxz
rol
or
sbb
cs
pop
jb
mov
adc
std
jle
leave
jo
fistp
sub
stos
icebp
push
push
ror
cmp
into
adc
popf
int3
xor
loope
imul
data16
mov
mov
dec
test
test
les
and
jb
xchg
and
int3
push
adc
xchg
aaa
or
jnp
jno
test
lahf
inc
jbe
or
cmc
test
sub
call
mov
mov
or
mov
jne
fisubr
pop
sbb
outs
push
xchg
mov
push
mov
dec
sbb
mov
(bad)
sti
out
inc
fwait
xchg
(bad)
aad
in
sub
lods
dec
jp
dec
mov
jle
mov
add
and
sbb
test
(bad)
fisub
or
pop
lods
call
mov
out
fmul
sbb
pop
add
sub
dec
aas
jno
adc
add
fwait
sub
js
or
xor
sbb
mov
in
mov
outs
jae
out
inc
cmove
xchg
(bad)
aad
push
lea
test
pop
sbb
fisub
jae
adc
dec
add
push
cmp
bound
test
loop
push
jb
and
cmp
aam
lahf
push
out
pushf
fnsetpm(287
fbstp
daa
inc
sti
mov
push
mov
js
jmp
lock
das
imul
pushf
cwde
mov
loop
shl
fnstenv
sar
sbb
fs
ss
aam
pop
ret
repnz
add
movs
mov
mov
call
neg
ja
xchg
sbb
(bad)
xor
xor
pop
sub
inc
jne
jg
push
retf
sbb
std
repnz
xor
jle
dec
xor
pop
movs
loop
push
pop
adc
cmp
jmp
mov
(bad)
aaa
cmps
dec
xchg
(bad)
mov
cmps
pop
cmp
cmp
pcmpeqb
or
cmps
mov
xor
pop
mov
jmp
dec
adc
push
cmp
push
mov
in
js
lods
(bad)
and
addr16
push
pop
loopne
or
test
repnz
popa
stos
inc
test
scas
enter
jnp
fld
cld
dec
sub
add
mov
out
out
or
push
inc
xchg
stos
jb
inc
sbb
or
mov
enter
cmp
and
adc
fisub
sub
dec
in
das
mov
mov
jmp
inc
imul
push
adc
pop
add
jp
hlt
sbb
inc
popf
push
mov
arpl
out
push
push
mov
add
or
(bad)
cmc
adc
stos
fistp
outs
xor
fidivr
ret
fisubr
adc
dec
mov
dec
jle
cmp
mov
ror
cmp
lock
sbb
aaa
std
sahf
mov
sbb
xor
and
rcr
leave
cmp
sar
rcr
aad
into
inc
les
push
int3
cmp
sub
ror
fld
into
mov
fisttp
mov
inc
in
(bad)
mov
fild
jge
clc
xchg
addr16
xchg
cli
inc
pop
mov
adc
sbb
gs
xchg
xchg
adc
in
cmp
dec
mov
or
inc
fist
mov
nop
in
mov
ficomp
pushf
add
lods
ror
ins
inc
xor
mov
call
movs
scas
loop
aam
loope
or
in
or
inc
xor
sub
cmps
and
scas
sub
lds
mov
loope
and
xor
push
xor
push
test
jl
and
add
retf
mov
inc
out
(bad)
or
mov
cmp
sbb
cdq
adc
and
jno
bnd
push
(bad)
sahf
pop
inc
in
push
inc
cmps
leave
sbb
out
fs
mov
jecxz
add
jns
pop
mov
push
sub
pushf
jne
pop
jmp
in
xchg
xchg
in
jmp
or
mov
in
adc
xchg
aam
paddq
leave
inc
retf
into
sbb
shl
mov
xor
xchg
fisttp
xor
and
or
and
ss
sub
cmp
mov
hlt
fstp
cmp
fcomp
push
jle
inc
clc
std
inc
and
jns
add
sub
pushf
xchg
mov
cmp
(bad)
pop
loope
test
gs
push
sbb
mov
jmp
mov
es
shl
or
lock
xchg
js
inc
sti
inc
fadd
sbb
pop
xor
nop
sbb
xchg
mov
js
sbb
cwde
pushf
jns
aas
lods
imul
pop
(bad)
adc
inc
jb
cmp
push
cli
mov
shl
scas
in
lahf
ss
(bad)
xor
shr
mov
call
aad
mov
retf
loop
loope
das
pop
sub
out
enter
rol
sub
mov
rcl
xchg
and
retf
pushf
movs
inc
mov
xchg
cmp
push
inc
lock
shl
mov
and
sub
imul
pop
fbstp
lods
in
mov
jp
jne
cmp
pusha
inc
jns
ficom
and
xor
out
call
cmp
mov
cdq
jmp
das
fstp
and
adc
inc
es
mov
jno
adc
ror
aaa
jl
pop
cmp
stos
dec
fnstcw
push
stc
push
int3
scas
test
call
sub
mov
ret
ins
jecxz
(bad)
fsubp
cmp
bound
jmp
and
sbb
push
das
jle
call
aaa
push
data16
popf
push
push
arpl
jae
sar
imul
pop
pop
loope
or
js
adc
loope
mov
(bad)
xchg
xchg
jb
rol
js
and
jle
les
sub
pusha
or
or
(bad)
dec
mov
xor
xchg
cmp
andnps
xchg
sbb
aaa
je
shl
dec
or
outs
sbb
js
outs
sar
adc
mov
(bad)
mov
cmps
inc
out
mov
mov
ja
into
mov
xor
int
pop
outs
and
lahf
fstp
adc
cmp
pop
setp
iret
add
int3
xor
fcomp
(bad)
push
and
xor
fistp
les
in
and
mov
dec
daa
int3
aad
mov
test
jb
push
push
cmc
mov
test
dec
loop
lea
scas
mov
push
pop
fistp
retf
stc
xchg
rcr
push
sbb
rcl
aad
push
mov
loopne
cmc
imul
mov
and
or
dec
and
jge
lods
or
dec
push
in
arpl
das
shl
push
lock
mov
xor
inc
ja
mov
in
jl
cli
pusha
sub
pop
test
(bad)
mov
stos
out
aaa
cmc
clc
push
ss
push
and
aaa
inc
aam
sbb
mov
rol
es
sbb
sbb
jp
sub
dec
cmc
mov
or
cmp
mov
or
sbb
jno
adc
pop
push
test
dec
pop
jae
cmp
push
mov
nop
xchg
lahf
adc
lods
scas
mov
mov
mov
sbb
icebp
or
neg
cmc
lods
adc
scas
mov
jb
sbb
jno
lods
imul
and
out
cmc
cmp
inc
fbld
adc
jb
fmul
add
add
cld
xlat
jg
mov
add
imul
sbb
pop
mov
les
inc
add
xchg
xor
and
and
mov
aas
jnp
mov
iret
jmp
and
xor
cmps
repz
das
jmp
repnz
repnz
std
push
sbb
dec
lods
inc
adc
xchg
fwait
test
shl
dec
cmps
push
xor
shl
jp
stc
scas
fidiv
xor
add
lods
jb
mov
fbstp
sub
addr16
test
aaa
fldcw
pop
(bad)
jb
mov
push
mov
(bad)
push
pushf
(bad)
aad
xor
jns
stc
ins
and
push
ins
cmp
dec
lahf
mov
mov
or
or
ret
xchg
(bad)
mov
lock
mov
inc
pop
mov
push
add
dec
aas
add
xor
and
xor
pop
mov
xchg
sti
hlt
jge
es
or
xor
div
and
pop
sbb
inc
call
lds
cs
push
pop
shl
test
scas
mov
mov
mov
jae
push
sub
cs
cmp
and
out
ja
pop
test
inc
dec
pop
xor
call
xchg
sub
lods
xchg
adc
neg
lods
out
aam
cmp
mov
aaa
bound
jb
mov
add
sbb
cmps
arpl
pop
popf
xor
add
dec
adc
and
jp
and
mov
jmp
mov
or
lea
out
adc
or
pop
mov
add
daa
jno
test
je
arpl
fistp
inc
dec
(bad)
cmps
lea
clc
jl
pop
pop
and
xchg
leave
ret
jle
out
mov
daa
lock
xor
mov
mov
and
mov
inc
cli
jmp
lea
cwde
mul
iret
cmc
(bad)
add
mov
inc
es
jbe
cmp
aas
push
and
mov
sbb
sub
or
retf
scas
add
fadd
cmps
xchg
xlat
jmp
fcom
pop
adc
imul
int3
out
xor
jno
add
mov
jg
shr
mov
push
and
fwait
popa
mov
xchg
sub
mov
pop
push
(bad)
(bad)
fidivr
cvttps2pi
imul
mov
dec
or
(bad)
daa
sbb
xchg
arpl
fcmovne
pop
pop
jge
mov
sub
cmp
sub
mov
cdq
sbb
sbb
js
das
pop
outs
jg
mov
jecxz
cmp
xchg
out
mov
push
sub
ss
hlt
popf
cmp
ret
add
xchg
icebp
jle
jge
mov
stc
xchg
xchg
mov
add
xchg
lods
aaa
sti
pop
daa
cmp
ds
xchg
xor
and
mov
test
sub
pop
mov
mov
test
call
pop
jmp
in
lods
cmp
jg
mov
retf
xor
in
mov
add
inc
mov
test
or
mov
mov
cmp
sbb
fstp
daa
mov
add
sub
push
in
daa
and
stos
and
mov
cs
lds
into
pop
jg
mov
inc
mov
mov
and
mov
(bad)
mov
ja
arpl
vucomiss
pop
jno
gs
(bad)
out
leave
pop
push
xchg
je
mov
pop
mov
sbb
gs
sub
popa
cld
mov
mov
jmp
mov
cli
xchg
mov
jo
div
sub
inc
xchg
es
loop
xor
jecxz
addr16
adc
sahf
mov
mov
xor
and
test
hlt
retf
inc
mov
xchg
in
mov
in
xchg
test
std
inc
mov
mov
stos
xor
mov
push
push
jbe
test
fdivr
or
rcl
inc
xchg
es
cmps
adc
int3
or
call
fstp
js
int3
stc
call
sbb
xchg
pusha
push
ss
mov
cmps
imul
fwait
xor
mov
out
adc
sbb
or
push
stos
les
das
sub
lods
ja
cmps
faddp
cld
and
push
lea
push
dec
cmc
mov
push
aam
bound
call
js
mov
std
icebp
aad
inc
push
push
push
call
mov
fsub
xchg
icebp
add
fsub
jmp
js
iret
jl
jno
mov
outs
sbb
fmul
mov
xchg
or
adc
push
stc
jmp
inc
adc
inc
sbb
mov
test
fwait
dec
jg
not
add
scas
shl
repz
int
adc
out
mov
aaa
ss
jno
mov
jp
lds
and
sub
sub
and
inc
mov
add
loop
xor
call
enter
add
mov
sub
jo
mov
setle
stos
into
add
cmps
push
mov
jns
imul
sbb
xchg
pushf
or
push
add
push
sar
mov
iret
int
pushf
inc
xor
jecxz
jg
cmp
push
enter
and
psubd
mov
mov
mov
xchg
int
mov
xor
dec
pop
and
daa
scas
lea
frstor
xchg
loopne
xchg
dec
or
xor
mov
outs
mov
cmps
fmul
mov
jmp
jp
cmp
fcom
dec
pop
loope
cwde
xchg
push
mov
cli
push
push
clc
or
and
retf
sbb
xor
mov
fdiv
add
mov
mov
mov
stos
cmp
jg
dec
add
dec
or
and
iret
adc
xlat
add
xor
shl
adc
sbb
lahf
cmps
ficom
push
aas
and
add
fwait
sub
mov
stos
mov
or
pushf
inc
outs
stos
fiadd
xchg
mov
(bad)
cmps
test
retf
sbb
cld
gs
in
(bad)
inc
std
in
test
cmp
cli
(bad)
and
fs
gs
sub
leave
shr
nop
outs
cmp
imul
(bad)
inc
adc
lods
leave
cmps
in
sbb
icebp
sti
popa
aad
daa
(bad)
dec
or
scas
cwde
push
sbb
into
add
stc
mov
inc
out
scas
mov
or
xchg
jmp
call
fs
adc
leave
sub
jmp
pushf
adc
mov
jo
adc
adc
test
push
jecxz
cmps
mov
and
inc
xor
add
dec
cdq
clc
inc
loop
lock
stc
lds
xor
dec
in
push
lea
(bad)
out
int3
inc
add
cmps
ss
test
aad
lods
and
inc
jns
mov
mov
pop
scas
mov
xchg
jg
sub
push
fs
pop
and
inc
aam
jmp
sahf
dec
das
jg
pop
pop
xchg
pusha
mov
push
fild
enter
es
and
adc
mov
mov
or
fist
shl
add
pop
loop
jo
adc
aam
push
pop
push
inc
push
cwde
adc
enter
jp
and
mov
test
jmp
cdq
enter
push
add
sbb
pop
test
out
loopne
mov
xor
cmps
movntq
adc
add
sub
in
ret
outs
push
ss
xchg
in
lods
cdq
push
pop
inc
sub
das
xor
xchg
pop
dec
or
mov
cwde
clc
sti
push
loopne
data16
fcomp
sbb
mov
out
(bad)
into
mov
(bad)
pop
pop
loop
imul
cmp
xchg
jb
mov
push
shl
ss
pop
xchg
sahf
in
push
cld
mov
shl
cmp
jle
out
lods
std
out
lock
adc
add
cld
pusha
xchg
jb
sbb
stos
mov
cs
outs
jae
gs
push
inc
mov
fwait
add
hlt
jbe
fnsave
daa
nop
lds
dec
das
inc
stos
jnp
fcomp
push
mov
mov
stc
ss
push
ins
ins
cdq
cwde
dec
adc
add
mov
pop
bound
sub
outs
imul
inc
mov
stos
add
push
repz
jmp
add
jo
mov
bound
mov
dec
(bad)
mov
cdq
jl
in
(bad)
jge
dec
enter
dec
jp
mov
or
xchg
push
stos
(bad)
pcmpgtw
into
shr
pop
popa
ficom
adc
or
test
test
(bad)
mov
lock
mov
out
cmp
aas
gs
lahf
test
js
cmp
adc
jecxz
sbb
pop
inc
in
scas
shl
sar
pop
mov
stos
out
aaa
and
out
add
pop
ja
jg
repnz
jmp
jae
mov
ins
test
movs
lea
out
mov
mov
cmp
neg
repz
imul
mov
fcomp
add
sub
ja
mov
out
ret
ror
cmp
or
(bad)
or
leave
mov
push
adc
stos
inc
dec
xchg
pop
aas
sub
rcr
xchg
imul
sub
inc
sub
fild
pop
pop
and
xchg
scas
and
ja
test
fwait
inc
pop
bound
dec
popa
lahf
(bad)
jmp
(bad)
jb
and
stos
and
jge
daa
or
mov
dec
push
pushf
lea
cdq
xchg
and
stos
les
lds
test
bound
nop
call
mov
xor
cmp
fidivr
frstor
cmp
stc
jmp
shl
lock
mov
add
adc
push
pushf
cmp
push
adc
or
ins
mov
ret
xor
(bad)
test
hlt
mov
mov
mov
jmp
nop
(bad)
push
pop
adc
daa
xlat
xchg
aaa
cwde
cmps
cmps
gs
leave
dec
cmp
jne
mov
(bad)
lods
adc
pusha
cmp
push
dec
sbb
cmp
and
dec
dec
les
(bad)
adc
jmp
xchg
pop
retf
frstor
and
into
push
es
gs
repz
cmps
dec
ds
mov
out
lds
xor
fnstcw
gs
adc
out
mov
stc
inc
and
push
sub
lahf
add
jne
pop
imul
pop
ret
xchg
add
inc
enter
jp
jae
in
jmp
xchg
lods
inc
dec
cmps
mov
sbb
sti
dec
sbb
scas
test
jg
adc
sbb
sub
adc
cmp
fstp
dec
fistp
outs
mov
(bad)
inc
mov
fst
retf
leave
mov
jmp
dec
pop
rcr
cmp
or
dec
inc
xor
imul
stos
xchg
xor
mov
into
dec
lods
dec
sub
arpl
mov
pop
xlat
lock
leave
push
je
add
mov
fcomp
gs
scas
xchg
cwde
arpl
xor
aad
push
(bad)
mov
jno
ins
iret
shl
mov
mov
push
ins
xchg
push
out
adc
je
ins
dec
mov
push
pop
or
or
test
jnp
pushf
inc
jge
iret
mov
sub
jo
adc
cld
clc
mov
dec
cld
mov
imul
fwait
sahf
fwait
push
pusha
and
dec
jle
ins
outs
push
pop
dec
pop
leave
scas
movs
call
xchg
enter
mov
and
inc
cmc
adc
sub
cmp
js
fwait
mov
scas
movs
std
xor
mov
shl
sbb
retf
mov
aam
cld
jb
mov
(bad)
push
pop
test
data16
bound
les
jno
(bad)
fild
in
xchg
adc
test
push
xchg
lds
enter
pop
add
call
xor
add
or
or
push
cmp
das
jmp
cmp
push
test
ins
(bad)
pop
call
ss
ss
pop
ja
loopne
mov
cmps
lods
nop
cmc
jns
in
push
(bad)
cmp
not
mov
inc
div
lea
call
repnz
ret
mov
or
sub
imul
jmp
outs
fcomp
push
jl
dec
and
fdiv
dec
mov
test
movs
add
add
pop
fild
inc
push
xchg
pop
add
cmp
dec
hlt
clc
lock
sbb
outs
cmp
pop
arpl
add
imul
cmp
pop
cwde
rcr
xchg
add
pop
inc
cdq
fistp
scas
jo
jb
shr
mov
xor
pusha
add
pop
mov
pusha
(bad)
dec
jns
stos
push
mov
push
xchg
mov
lods
mov
outs
pop
dec
ret
shr
fidiv
add
mov
test
and
or
xor
push
xor
add
jnp
retf
bound
xlat
iret
push
lods
mov
push
aad
fisttp
sbb
add
lahf
js
cmp
jno
cmp
ror
jg
inc
dec
pop
cmp
test
in
lahf
dec
out
je
ret
adc
ja
mov
mov
cmp
push
bound
test
sti
fmul
mov
add
xlat
pusha
test
movs
mov
cmc
call
or
pop
push
inc
lods
inc
(bad)
adc
test
mov
pop
mov
adc
jo
hlt
(bad)
cs
test
cmp
es
into
call
out
and
xchg
sbb
xor
sbb
xlat
fcomp
das
cli
out
les
inc
xlat
inc
adc
leave
shr
popa
cld
xor
cmps
add
repnz
mov
jne
push
bound
scas
pop
je
adc
add
aad
cmps
rol
stos
cmps
xchg
push
dec
xor
cwde
and
jbe
jge
xor
inc
or
cs
mov
lods
pop
(bad)
aaa
mov
mov
retf
dec
push
xor
movs
adc
into
sub
(bad)
ror
loope
(bad)
lahf
add
fwait
and
shl
mov
xor
or
lea
cmp
add
mov
outs
dec
scas
or
lds
mov
(bad)
sbb
mov
inc
std
xchg
or
ret
adc
or
inc
sbb
or
jae
call
mov
adc
mov
pop
add
mov
jg
in
mov
sub
stos
and
cs
sahf
sub
cs
add
xor
icebp
cmc
cmp
(bad)
jle
cwde
rcr
fdivrp
sbb
and
lahf
imul
sub
mov
xor
mov
xchg
das
sbb
mov
imul
imul
adc
outs
mov
jne
mov
cmp
cli
xchg
out
(bad)
or
sub
stos
jp
loop
and
inc
jl
cmps
pushf
inc
ja
and
(bad)
cmp
fwait
jmp
rcr
mov
ds
mov
lock
jg
jne
(bad)
fnstenv
push
mov
bound
sbb
pushf
xor
pop
mov
ins
shl
mov
push
loopne
sbb
pushf
add
and
xchg
lods
es
sahf
imul
test
dec
xor
dec
or
fnstcw
jle
lods
sub
pop
repz
gs
fdiv
inc
cdq
ins
stos
mov
pop
jg
inc
cmp
loope
cdq
inc
jb
mov
push
pusha
adc
push
lds
cmps
rol
hlt
les
or
jns
xchg
test
push
mov
mov
ss
mov
pop
or
add
add
icebp
pop
push
mov
test
out
mov
pop
jb
jl
hlt
dec
pop
loop
xor
or
push
push
xchg
scas
mov
inc
std
in
inc
add
mov
inc
mov
mov
sar
jae
outs
fisttp
cwde
adc
push
enter
or
inc
or
mov
sbb
lods
adc
mov
in
jp
mov
(bad)
aas
dec
lock
push
fcomp
push
call
neg
sub
(bad)
fistp
ins
loop
pop
inc
jbe
shl
movs
mov
hlt
mov
push
xlat
xor
adc
cmp
adc
(bad)
add
dec
jmp
push
das
sub
mov
retf
ret
aam
jg
xor
outs
test
in
add
popf
dec
jmp
pusha
push
adc
xchg
sbb
les
fbstp
les
xchg
jmp
and
(bad)
sub
loopne
addr16
cwde
call
pop
retf
shl
pop
and
push
mov
les
jp
xlat
jo
ins
fcmovb
sub
jp
mov
inc
dec
js
jno
lods
jbe
jg
or
test
int3
aas
test
jle
mov
jae
pop
sub
jns
ret
inc
xchg
dec
mov
dec
pushf
rcl
mov
or
stos
pop
je
movs
inc
pop
cmps
inc
cmc
jle
xchg
push
xlat
mov
scas
xor
or
xchg
ret
out
loope
xor
jg
int
out
into
jns
aad
add
mov
out
not
(bad)
imul
cmp
nop
pop
xchg
fdiv
push
mov
sbb
adc
cmps
stos
loop
mov
cwde
cli
jb
or
test
jns
mul
imul
js
pushf
pop
loopne
xchg
push
sub
dec
std
sahf
outs
gs
lods
stc
pop
push
push
arpl
cdq
mov
fist
xor
add
push
ja
outs
sub
mov
into
xor
mov
dec
and
xchg
jno
xchg
mov
int3
or
leave
out
jns
scas
mov
push
add
mov
cmps
fsubr
adc
sti
or
sub
push
cld
sbb
outs
scas
mov
js
or
call
daa
ds
sub
add
mov
aaa
and
mov
fs
int
loop
aad
mov
cmp
test
shl
aad
cmp
int
and
inc
loopne
add
dec
div
mov
(bad)
dec
sub
bound
sub
jmp
push
xchg
dec
outs
and
into
in
dec
dec
sub
adc
cmp
in
hlt
pop
lahf
pop
jmp
pop
loopne
jmp
add
(bad)
jg
fwait
inc
leave
data16
jbe
lahf
dec
xchg
add
push
cmc
mov
mov
(bad)
sti
repz
jecxz
lods
test
and
iret
push
push
fild
xor
inc
rep
movs
(bad)
dec
mov
stos
es
jns
mov
scas
inc
loope
push
(bad)
into
enter
add
mov
nop
ss
mov
push
xchg
aad
mov
dec
mov
enter
push
movs
xchg
nop
push
hlt
aas
inc
adc
sbb
fild
pop
adc
rol
test
and
mov
lahf
mov
in
dec
in
adc
cmps
push
pushf
adc
ret
adc
jl
pop
aad
cs
aaa
test
mov
xchg
push
mov
fld
lods
sub
mov
mov
adc
inc
fldcw
cs
stos
inc
scas
clc
sub
rcl
ror
jle
ret
ficom
popa
pop
push
shl
fdiv
sub
aaa
leave
pop
cld
ja
into
push
jno
add
push
pop
inc
push
xor
jno
xchg
lgs
clc
cmp
or
into
fs
jg
push
add
dec
jecxz
stc
mov
or
in
lods
call
adc
js
das
mov
add
out
aam
sbb
pusha
mov
or
ret
inc
and
jge
data16
xchg
jmp
and
movs
cs
retf
scas
(bad)
mov
jne
sti
adc
mov
retf
sbb
in
pop
loope
dec
std
pop
xchg
add
pop
addr16
test
iret
in
sub
sub
rol
add
xor
fnstsw
mov
mov
and
and
fidiv
cmp
shl
out
jl
cwde
out
fmul
push
or
scas
fs
sti
fdivr
test
int3
fwait
add
mov
cld
es
xchg
ret
es
inc
ss
jbe
push
adc
mov
xacquire
fmul
jmp
int
fisttp
retf
pushf
xchg
mov
daa
add
mov
rcl
(bad)
push
add
jecxz
lods
pop
mov
mov
inc
cmp
ret
inc
out
mov
(bad)
push
xchg
dec
inc
clc
loop
and
bound
pop
push
(bad)
cmp
adc
xchg
xor
enter
addr16
stos
and
dec
shl
sub
push
push
cmps
push
in
fcmovbe
loop
enter
(bad)
sahf
sub
adc
adc
hlt
adc
gs
jnp
icebp
bnd
pop
xor
mov
pop
and
mov
pop
(bad)
add
in
xchg
pop
jb
mov
js
dec
jp
pop
(bad)
repz
retf
or
ds
xor
test
fst
mov
add
lock
cld
or
and
sbb
(bad)
fmul
adc
sub
add
fcomi
and
jmp
into
inc
cmovl
jne
pop
jecxz
and
inc
xor
imul
xchg
pushf
stc
sub
ins
dec
adc
or
mov
xor
(bad)
cmc
xchg
mov
xor
aam
adc
mov
sub
add
adc
test
dec
sub
jg
inc
cmps
popf
adc
test
mov
cdq
or
mov
popf
(bad)
popf
xchg
push
push
mov
xchg
leave
bound
adc
inc
ret
retf
call
xchg
inc
data16
and
xchg
cdq
sub
test
add
pop
mov
dec
ret
xor
icebp
adc
out
out
sbb
pop
push
sbb
add
ss
inc
add
and
or
push
dec
mov
adc
sbb
int
xchg
sub
fstp
or
inc
loope
out
inc
rol
jp
and
leave
jmp
addr16
ret
sti
cmps
pusha
retf
lods
sub
out
sbb
rcpps
jl
shl
add
jg
pusha
push
fcmovb
ror
shl
xchg
rcr
push
xchg
mov
adc
mov
inc
ss
sbb
repz
adc
push
and
clc
stc
shl
adc
test
xor
ret
jg
shr
outs
adc
in
std
and
dec
mov
cmp
js
pop
aad
add
sbb
or
add
push
xor
jecxz
xor
sub
jecxz
fidivr
xor
jle
iret
sub
push
fsubr
cmp
call
push
sbb
jne
jg
aas
add
cmp
add
je
inc
repnz
sub
loopne
xor
leave
inc
inc
inc
inc
dec
cdq
movs
sbb
mov
std
stc
jg
adc
cmp
pusha
jb
retf
mov
in
enter
(bad)
push
pop
xchg
cmp
sub
neg
mov
retf
sbb
fisub
xor
call
mov
jp
sbb
adc
ds
xor
popa
scas
fimul
fs
mov
xchg
xor
ins
cmp
mov
sub
pusha
and
cmp
inc
or
adc
xor
daa
stc
jae
out
loop
mov
sub
sub
aad
retf
popf
pop
imul
jecxz
push
(bad)
test
rcr
scas
dec
call
(bad)
out
xchg
mov
mov
sbb
arpl
popa
dec
gs
repnz
fistp
shl
sahf
in
sbb
jb
inc
mov
dec
retf
lock
inc
xor
push
retf
pop
or
add
mov
das
sbb
push
or
movs
in
xchg
sbb
jmp
add
call
movs
fwait
test
scas
push
inc
test
test
or
adc
dec
cmp
ret
fsincos
dec
sar
push
lods
psubd
imul
int3
cmp
or
sub
hlt
adc
mov
stc
xchg
cmp
push
add
xchg
cs
push
arpl
cmp
add
out
pop
mov
dec
or
mov
fnsave
jp
adc
sar
sbb
push
push
scas
outs
std
aas
shr
ss
xor
sbb
xchg
out
jmp
cwde
xchg
jmp
int3
adc
and
xor
sahf
xor
mov
xchg
inc
xchg
les
push
jmp
data16
xor
push
jae
fs
sbb
sar
cmp
repz
mov
and
imul
sti
adc
jne
repnz
sbb
dec
mov
sub
jo
lods
ret
cmp
fld
sbb
fsubrp
pop
ret
lods
ret
cmp
loop
ss
jne
loopne
iret
jmp
jae
mov
xor
div
mov
les
mov
imul
push
jl
movs
inc
pop
ret
add
add
mov
iret
cld
mov
inc
dec
add
jo
and
push
jmp
pop
push
or
mov
cmp
or
test
stos
and
call
push
adc
add
mov
rcl
push
xchg
and
imul
mov
mov
mov
cmc
fldenv
inc
icebp
jle
arpl
jle
retf
jne
jae
inc
(bad)
mov
sub
outs
sbb
cmps
(bad)
in
jbe
pop
retf
jmp
scas
(bad)
push
test
add
adc
ficomp
pop
sub
sar
pop
cmp
inc
fstp
fnstcw
xchg
es
repnz
pop
les
xor
popa
shl
cs
(bad)
fiadd
push
imul
repnz
add
test
xchg
or
scas
adc
push
mov
xor
cmps
fwait
pop
adc
mov
clc
outs
pop
fwait
popf
shl
ret
xchg
popa
push
outs
(bad)
imul
(bad)
or
movs
loope
lds
xchg
ja
add
push
sbb
std
push
loopne
ss
inc
ds
xor
push
dec
jmp
mov
dec
dec
fwait
stos
push
call
popf
retf
mov
mov
inc
jmp
std
clc
clc
loopne
sbb
lods
cmp
outs
in
iret
dec
mov
mov
adc
mov
cli
push
sub
cld
xor
push
popf
std
push
push
xlat
xor
cmp
mov
dec
or
repz
dec
mov
jno
imul
(bad)
(bad)
nop
mov
and
push
inc
push
ss
popa
shl
cmps
fild
fld
inc
popf
lea
pop
cmp
push
push
lahf
mov
push
imul
(bad)
test
int3
xchg
jge
das
jmp
imul
out
nop
setl
mov
cmp
in
sub
mov
push
push
loope
loope
iret
dec
stos
iret
and
jl
add
js
xchg
test
mov
and
cmp
arpl
sbb
inc
xchg
or
sub
movs
jns
dec
push
loop
adc
test
mov
pop
aam
sti
sub
push
sbb
jle
enter
je
or
dec
mov
into
adc
inc
(bad)
push
xchg
xchg
out
mov
jecxz
mov
cmp
aas
jmp
popa
sahf
lahf
push
mov
mov
loopne
adc
push
or
xchg
dec
aaa
sar
fidivr
dec
repz
out
jmp
pop
add
sbb
je
iret
(bad)
les
push
test
mov
aam
in
mov
pop
cmp
int
test
adc
shl
mov
aas
lea
add
ins
push
sti
pop
cmp
pop
add
(bad)
fcom
sbb
dec
repnz
retf
xchg
xor
test
add
jo
out
dec
das
stos
adc
sub
push
cmp
aaa
outs
jmp
fs
mov
outs
pop
mov
inc
ds
hlt
adc
xchg
sbb
push
lahf
dec
jne
movs
xchg
adc
adc
push
jo
retf
cmps
lods
push
sub
jg
rol
or
in
hlt
mov
dec
daa
adc
push
fiadd
test
add
push
jnp
mov
popf
cmc
fsub
adc
mov
mov
call
not
push
mov
icebp
jmp
push
lahf
rcl
push
and
out
out
hlt
pop
mov
(bad)
fidiv
or
fdiv
pop
test
pop
xchg
pop
not
cwde
neg
lods
push
(bad)
fdivr
fadd
retf
push
test
test
outs
cmp
outs
adc
out
popa
pop
add
and
aam
dec
jmp
(bad)
idiv
pop
pusha
mov
mov
ss
mov
push
xchg
pusha
mov
ins
and
and
lds
xor
test
imul
es
xchg
sti
adc
mov
enter
jo
and
jb
mov
sbb
pushf
repz
inc
inc
mov
addr16
cli
mov
cmp
enter
jp
mov
adc
pop
mov
mov
jno
je
mov
add
sbb
fldcw
adc
mov
outs
sbb
pop
cmc
bound
mov
xchg
cmp
loope
xchg
xchg
mov
fst
call
int3
stc
mov
xchg
movs
mov
inc
push
in
out
jmp
test
xor
iret
inc
pop
sub
adc
icebp
jge
adc
push
jmp
out
ins
mov
fidiv
jg
stos
xchg
ret
psubq
mov
cmp
rcr
adc
fcomi
sahf
add
es
mov
leave
jmp
cmps
(bad)
xor
int3
sub
or
adc
jge
sar
popa
neg
repnz
ins
mov
dec
xchg
xchg
mov
cli
sbb
adc
iret
fimul
xchg
aam
mov
imul
shl
cmp
inc
int
adc
mov
sbb
arpl
pop
dec
inc
xchg
stc
xchg
push
dec
inc
cld
mov
push
test
jo
das
mov
test
in
cmp
jne
mov
xchg
leave
(bad)
pushf
or
sub
(bad)
mov
sar
push
out
mov
imul
cld
frstor
adc
lods
mov
or
jmp
adc
cmp
iret
xchg
xchg
loopne
dec
sub
mov
or
jno
movs
jbe
cs
stos
mov
cdq
jmp
cmp
mov
push
cmp
mov
and
dec
push
jbe
sbb
lods
icebp
adc
out
mov
repnz
out
in
jne
in
pop
or
int3
movs
stos
popf
enter
cmp
fisttp
add
imul
cmp
in
popf
add
out
xchg
aad
movs
movs
bound
clc
ins
mov
mov
ins
test
and
jg
in
es
push
cmc
jp
mov
popf
les
push
dec
aam
and
xchg
lds
sub
dec
push
rcl
popa
hlt
test
addr16
ret
out
inc
dec
cmp
jae
adc
and
sub
jp
adc
jmp
int3
retf
inc
outs
jmp
mov
or
in
mov
test
loopne
clc
addr16
ja
add
and
xchg
sub
leave
inc
mov
push
fucomi
pop
sbb
mov
data16
xchg
dec
shl
sar
test
push
ss
dec
cmp
sub
mov
loop
ins
mov
pusha
cmp
add
ss
dec
ja
clc
or
mov
inc
push
stos
pop
xchg
pop
mov
idiv
dec
push
or
icebp
dec
pop
ror
adc
mov
or
imul
fstp
pop
inc
pop
add
addr16
das
push
dec
pop
cvtps2pi
cmps
xchg
or
js
cmps
lods
mov
pop
mov
out
retf
aam
mov
dec
and
int3
stc
sub
in
and
mov
push
jnp
adc
sbb
cmp
loop
leave
outs
add
iret
neg
jo
xchg
add
inc
leave
cwde
int3
push
cmps
push
jbe
adc
pop
adc
fild
lahf
xor
or
adc
inc
push
adc
iret
scas
jmp
jp
pop
pop
rcr
jnp
xor
adc
push
push
push
push
sub
lahf
dec
outs
xor
lods
in
loop
fwait
sar
lods
stos
sub
or
gs
dec
jns
and
std
xchg
in
or
add
push
cmp
aam
jmp
mov
cmc
mov
iret
adc
fwait
and
shr
xor
mov
mov
aas
cmp
pushf
aam
loopne
retf
sbb
in
das
mov
mov
inc
pusha
jne
test
popf
sti
cmc
inc
lods
pop
aaa
repnz
fisubr
shr
add
xchg
or
mov
out
cmp
sar
xor
hlt
shl
fnstcw
hlt
(bad)
adc
rcr
pop
call
cld
daa
shr
adc
int3
jne
push
xchg
push
add
dec
or
xchg
ficom
and
xor
mov
and
fst
ja
popa
mov
sub
jp
fdiv
hlt
int
xlat
mov
call
mov
(bad)
mov
mov
into
loopne
ds
les
push
xchg
adc
mov
test
adc
xor
cmp
jmp
out
sti
xchg
and
cwde
inc
fcmovnu
cwde
sub
cmp
sbb
div
(bad)
(bad)
inc
sub
(bad)
jmp
stos
inc
es
fbld
jne
pusha
mov
repz
xchg
and
push
idiv
mov
xchg
(bad)
and
inc
push
xchg
scas
iret
lds
pop
xchg
mov
sbb
loop
jae
cli
arpl
mov
fmul
xor
mov
pop
ja
adc
sbb
mov
cwde
jp
in
jle
in
sub
dec
xlat
call
push
sbb
xchg
xor
cmp
sbb
or
nop
add
sub
xor
scas
and
scas
dec
popa
imul
mov
mov
adc
call
mov
movs
inc
xchg
and
sub
scas
bound
(bad)
and
loop
loope
lods
rcl
push
mov
call
data16
mov
std
movs
ja
and
sbb
repz
jns
or
xor
sbb
add
mov
mov
push
fnsave
dec
adc
and
cmp
cwde
rcl
cmc
mov
jp
outs
adc
not
jnp
pop
loopne
data16
mov
movs
test
jp
les
pop
repnz
je
xor
jge
jae
lods
rol
jne
imul
inc
out
jge
rcl
pop
pop
xchg
add
ret
dec
imul
push
sahf
cli
cld
xor
(bad)
aaa
xchg
js
mov
or
fsub
hlt
xchg
pop
xchg
add
add
dec
mov
lods
sbb
xor
sysenter
cmp
gs
xchg
(bad)
bound
daa
cwde
mov
in
pop
scas
inc
gs
push
in
mov
(bad)
stc
push
jecxz
pop
lea
mov
or
dec
cmp
outs
arpl
mov
repz
push
das
inc
leave
add
sbb
cmp
ret
adc
inc
aas
cmp
xchg
fbstp
sbb
cmc
dec
mov
mov
sub
sub
push
cwde
jnp
mov
das
imul
aam
in
add
clc
mov
add
sahf
add
or
mov
out
cmps
cmp
and
fidivr
or
or
add
cmp
adc
lods
rol
add
(bad)
fistp
popf
arpl
and
(bad)
int
sub
(bad)
int
mov
xchg
add
adc
jns
and
retf
sub
add
shl
shl
sub
sti
mov
pop
retf
push
adc
in
pop
dec
fwait
push
inc
int
xchg
mov
std
mov
push
or
(bad)
jmp
pop
fucom
inc
call
sbb
inc
jmp
and
retf
rcl
bound
movs
psrlq
cli
dec
push
mov
or
ins
mov
pop
or
jmp
mov
(bad)
push
jle
push
jne
test
pushf
cli
xor
fist
sub
jmp
push
mov
in
adc
pushf
adc
in
mov
es
cmp
fadd
popf
jmp
sbb
rcl
ins
mov
dec
ficom
sub
retf
retf
sbb
jmp
dec
imul
fdivr
loope
fdivr
fadd
fstp
jno
sbb
movs
data16
cmp
mov
or
pop
push
adc
cmc
cdq
cmps
xlat
neg
call
(bad)
jmp
xchg
idiv
mov
nop
imul
aas
psllq
loop
mov
fs
inc
cmp
sti
adc
jb
jmp
test
mov
adc
(bad)
xor
imul
jb
mov
outs
or
fst
call
ins
les
push
push
icebp
cmp
stos
dec
pop
sbb
dec
rcl
xor
ja
adc
arpl
mov
push
mul
jecxz
cmp
add
mov
xchg
into
inc
or
add
repnz
or
mov
push
stc
inc
fdivr
cdq
jne
mov
rcr
loop
mov
je
mov
movs
ins
inc
adc
fidiv
dec
in
loopne
mov
sbb
mov
mov
sub
ja
aaa
mov
cmp
loope
arpl
sub
cmp
mov
mov
adc
test
inc
std
scas
pop
faddp
cdq
gs
dec
mov
imul
sub
sub
movs
and
jl
js
cmp
xor
xchg
js
push
jle
push
xorps
pop
(bad)
lods
in
adc
push
dec
rcl
push
ret
les
pop
mov
xor
not
adc
fisub
in
aaa
dec
mov
cmp
xchg
dec
outs
fiadd
outs
cmp
aas
cs
adc
pop
inc
call
dec
add
lock
jae
cmp
adc
adc
leave
pop
push
add
xchg
inc
aad
add
mov
inc
jp
jecxz
enter
enter
push
(bad)
data16
iret
cmp
call
xchg
jl
mov
lods
cmp
lock
and
jg
xor
aaa
adc
cdq
mov
push
loop
inc
imul
xchg
loope
call
movs
mov
pop
xchg
sbb
ja
jbe
jp
ficomp
int
mov
dec
sbb
pop
ret
and
push
push
mov
mov
mov
sbb
out
xchg
clc
into
jo
push
mov
mov
and
mov
pop
sbb
pop
pop
ficomp
sbb
fcmovnb
jle
out
retf
in
mov
int
out
in
xor
fild
pop
gs
mov
and
push
mov
push
scas
cs
dec
inc
xlat
jno
cmps
frstor
push
jne
push
mov
enter
xchg
call
call
mov
sub
call
jns
add
xchg
add
cmc
retf
add
data16
inc
outs
push
repnz
add
add
mov
imul
bound
dec
sbb
push
mov
mov
push
(bad)
fcomp
dec
in
shr
leave
dec
adc
sub
jmp
inc
inc
test
pop
les
jb
push
fidivr
test
mov
mov
jae
or
dec
jl
cli
pop
cs
mov
pop
mov
(bad)
sbb
add
inc
push
mov
cmc
dec
cmp
in
data16
mov
(bad)
mov
movs
dec
add
adc
jbe
(bad)
mov
jno
or
mov
shl
pop
sbb
ins
sbb
ror
lods
out
mov
adc
adc
movs
int
pop
leave
mov
dec
add
mov
xchg
pop
hlt
jbe
sub
lea
push
add
jne
int
pushf
imul
ffreep
dec
and
xor
icebp
outs
and
adc
stos
inc
jp
sub
aaa
add
inc
jno
out
stc
adc
sti
fdivr
xchg
repz
call
and
ins
jmp
(bad)
jp
mov
mov
inc
mov
xor
in
js
mov
jnp
aaa
mov
mov
lds
jl
jbe
xor
std
inc
gs
pushf
bound
add
xor
xchg
fstp
pop
imul
hlt
jbe
or
movs
in
xor
xchg
out
sbb
lock
repnz
fsub
lods
gs
or
mov
lods
or
or
xchg
je
hlt
lods
dec
pop
sbb
addr16
outs
dec
lahf
or
test
int
add
(bad)
pop
or
std
out
outs
jle
push
leave
adc
add
sub
add
xor
xor
sahf
ins
les
cmp
sar
xchg
adc
cld
mov
cs
shr
gs
pop
icebp
push
sbb
jb
and
pop
sbb
mov
inc
mov
jne
fnstenv
cmp
add
cmp
and
outs
je
mov
(bad)
xchg
jge
mul
mov
ja
int
into
in
jne
ret
repz
add
call
xchg
xor
mov
cmc
(bad)
push
push
or
sbb
mov
jecxz
cld
repz
inc
cmps
dec
cmps
and
add
xchg
into
lock
out
stos
lods
ins
pop
inc
lock
(bad)
or
ins
ds
sub
in
scas
or
out
ror
ins
data16
pop
fsub
push
xchg
int3
fst
in
inc
push
les
jne
arpl
outs
aad
push
mov
fiadd
ja
add
cmps
mov
std
out
adc
inc
xchg
ds
gs
push
iret
pop
xchg
(bad)
mov
in
(bad)
vcmpless
mov
xor
ret
ins
test
add
ficomp
sub
or
and
push
push
pop
mov
sar
jg
retf
std
leave
ret
or
popa
in
push
addr16
and
outs
loope
repnz
cmp
pop
repz
add
dec
push
and
add
adc
mov
sbb
sbb
jl
mov
ins
repz
shl
or
and
add
in
ror
lds
jp
sub
sbb
daa
jne
in
movs
repnz
dec
mov
ins
ins
mov
mov
std
and
add
or
jg
mov
dec
popf
add
rcr
adc
ds
sub
cmp
push
int3
cmps
adc
gs
sbb
sti
adc
in
mov
push
jmp
jle
popf
adc
xor
aam
mov
cmp
mov
enter
sub
sbb
cmp
or
sbb
push
repz
add
pushf
inc
jno
mov
inc
jmp
fsubr
mov
jne
jo
fcom
add
pop
lahf
or
out
in
xchg
test
sbb
jecxz
sbb
jmp
retf
fisub
pop
jp
fisub
xchg
push
inc
mov
test
mov
jbe
sbb
mov
mov
sbb
ficomp
clc
cmp
cmp
je
mov
into
mov
adc
stos
int
(bad)
jl
adc
div
loopne
enter
and
xor
cli
fs
sub
in
sbb
xchg
sbb
icebp
pop
ins
sti
push
push
mov
mov
out
mov
and
inc
gs
jno
pop
stos
add
sub
icebp
adc
(bad)
dec
movs
sahf
fwait
rol
leave
pop
loope
pop
jae
dec
aas
paddusb
mov
pop
jns
fsub
dec
mov
mov
jecxz
(bad)
popa
adc
(bad)
ins
aad
adc
inc
push
aad
ret
mov
mov
or
cli
pusha
popf
shl
les
inc
call
(bad)
push
movs
test
push
inc
and
push
js
ins
out
call
or
jmp
aad
(bad)
aas
push
in
sbb
in
push
daa
idiv
shl
(bad)
retf
mov
dec
clc
adc
sub
cmp
fnstsw
pushf
push
dec
jge
iret
inc
jb
enter
xor
cwde
pop
cmps
lahf
jge
ins
dec
add
lea
xor
xchg
sbb
push
popa
fadd
jle
pop
fwait
adc
add
dec
mov
test
cmps
stos
adc
dec
add
shl
inc
push
add
inc
inc
push
jle
mov
lock
sti
push
mov
ins
pop
push
(bad)
cmp
mov
shl
jbe
mul
inc
sub
mov
sbb
ds
inc
das
nop
mov
add
pop
cmps
sti
fmul
xor
lods
fwait
mov
retf
scas
fld
jmp
pop
repz
outs
retf
arpl
mov
dec
pop
push
sbb
mov
fmul
iret
fldenv
mov
mov
adc
jnp
adc
xchg
inc
repz
fs
sbb
dec
adc
cmp
mov
addr16
aad
jns
test
push
mov
or
(bad)
adc
push
cmp
or
dec
inc
xchg
sub
sbb
std
stos
pop
cmc
sbb
loop
xchg
int3
add
les
rcr
dec
stos
jnp
jns
cmp
lock
pop
jmp
cmp
lock
push
or
pop
xlat
out
mov
out
pop
inc
aaa
cmc
adc
out
mov
cli
dec
mov
mov
cmp
sub
push
bnd
mov
or
jnp
out
jmp
jnp
or
bound
xchg
xor
rcl
pop
push
repnz
(bad)
pop
mul
and
mov
push
pop
sub
mov
fwait
mov
outs
and
mov
into
icebp
mov
cmps
imul
iret
dec
jnp
mov
retf
pusha
ficom
jne
lahf
int
idiv
or
cld
test
in
or
xlat
sbb
cld
test
nop
mov
sbb
push
push
sti
pop
pop
loop
das
movs
mov
fstp
clc
inc
mov
jbe
shl
cmp
mov
dec
enter
dec
cmp
arpl
pop
dec
mov
adc
(bad)
mov
inc
cwde
(bad)
mov
call
dec
stos
fst
ret
xchg
sti
inc
(bad)
mov
jmp
clc
ds
jmp
je
cmps
jecxz
aaa
je
jl
add
aaa
cwde
ss
imul
call
inc
push
out
adc
jb
add
xor
call
aad
push
xchg
dec
xor
fnstenv
cmc
dec
cli
sahf
xchg
fs
pusha
push
(bad)
retf
aas
movs
mov
cmp
adc
xchg
ds
or
xor
sbb
or
sbb
push
icebp
neg
out
pop
push
jno
into
jecxz
daa
repz
xchg
jns
adc
mov
(bad)
cmp
sub
mov
aaa
dec
ja
leave
outs
jl
mov
lds
retf
sbb
or
jecxz
pop
into
lea
cwde
sti
(bad)
fdivr
popf
loopne
push
(bad)
inc
push
adc
push
aad
(bad)
xlat
test
or
sbb
sbb
cmp
mov
imul
add
stc
popa
add
xor
xor
jbe
in
cmps
call
test
lods
stos
sbb
push
into
fnsave
mov
fst
mov
sub
push
neg
dec
int3
scas
pop
mov
retf
retf
lea
jns
mov
das
loopne
jecxz
jb
cmp
xchg
jbe
push
adc
pop
icebp
imul
jo
sub
(bad)
mov
mov
jb
push
cli
adc
scas
test
inc
mov
jecxz
popf
enter
mov
not
neg
in
vpaddusw
jo
jbe
and
(bad)
js
js
aas
mov
ja
pop
sbb
adc
jecxz
sub
ja
adc
rcl
cmps
dec
sbb
retf
jb
add
inc
call
jns
ja
sbb
sub
mov
sahf
jecxz
xor
(bad)
pop
pop
push
inc
jmp
jmp
mov
jp
sub
loope
push
or
ret
(bad)
push
mov
hlt
addr16
mov
adc
mov
lock
retf
(bad)
rcr
and
into
mov
dec
inc
or
mov
lahf
adc
inc
lahf
mov
out
jne
push
or
(bad)
shl
or
call
call
bound
(bad)
call
push
jns
xchg
jp
jl
and
push
add
adc
or
repnz
loop
call
aas
jge
fidiv
xchg
sub
scas
xchg
iret
mov
lods
dec
or
and
mov
dec
dec
mov
pusha
ror
mov
rcr
bnd
jns
in
mov
jno
std
sub
fdiv
push
lods
xlat
pop
or
sub
push
xor
loope
imul
xor
jg
jle
mov
mov
jl
and
rol
pop
imul
cmp
cwde
sub
mov
sbb
push
mov
xor
jae
cmp
leave
or
pop
lock
repnz
(bad)
cmp
jnp
sahf
add
and
arpl
jge
pusha
mov
neg
lss
dec
sub
pushf
sbb
pop
cmps
inc
arpl
ins
add
ret
out
xchg
xchg
and
adc
and
inc
push
pop
mov
stos
cld
fstp
or
sar
ins
xchg
push
fsubr
or
loop
cmp
pop
sbb
pushw
das
mov
repz
mov
sti
mov
push
dec
cli
jne
jns
xor
xlat
mov
mov
push
sbb
adc
push
movs
pop
or
and
jmp
or
retf
std
cmp
sbb
push
sub
xchg
fcom
mov
xor
sti
out
fisttp
sbb
icebp
xlat
hlt
lahf
fs
aam
leave
or
fcomp
inc
lahf
loop
cmp
fild
inc
cmp
test
stos
nop
push
xchg
and
nop
mov
in
idiv
jmp
mov
lock
ja
mov
pop
cli
(bad)
mov
mov
push
or
pop
repnz
or
or
and
ins
xchg
(bad)
test
fistp
push
jo
sbb
xor
adc
dec
jecxz
div
(bad)
or
pop
or
jmp
jmp
adc
mov
enter
mov
mov
lods
mov
mov
xchg
xlat
and
mov
stos
inc
iret
addr16
push
dec
out
ret
jge
push
pop
lea
ror
dec
ins
adc
movs
pusha
adc
pop
mov
gs
nop
(bad)
mov
fs
push
int3
mov
sub
pop
hlt
dec
add
xchg
cmp
shl
and
dec
sbb
mov
add
cld
push
xchg
les
adc
xchg
and
out
test
scas
fs
out
stc
adc
xor
or
call
or
loopne
pop
xor
cmc
cmp
adc
mov
out
jae
movs
int3
jb
daa
jl
push
cmp
xor
sub
jb
in
sbb
cdq
(bad)
jmp
xor
fistp
rcr
push
out
and
jle
mov
mov
outs
leave
movs
in
mov
cld
sub
mov
cmc
ins
mov
(bad)
add
and
leave
push
add
iret
add
loopne
std
test
mov
call
stc
sahf
ret
aaa
fwait
jno
jmp
push
push
pop
loop
enter
mov
imul
or
adc
mov
mov
xor
push
icebp
sbb
fst
int3
mov
and
ins
sar
and
loope
mov
push
xchg
push
xchg
je
scas
mov
mov
adc
sub
and
std
call
fnstsw
loopne
(bad)
(bad)
cld
pop
stc
jmp
dec
in
daa
xlat
mov
jmp
adc
inc
inc
xchg
scas
push
xchg
sbb
mov
(bad)
adc
(bad)
mov
lea
xchg
and
sbb
mov
ins
and
dec
into
mov
repz
add
daa
mov
shl
clc
mov
adc
sahf
mov
pop
pushf
lods
loopne
test
push
jne
xchg
clc
xor
outs
stos
mov
and
push
pop
mov
ficom
xchg
adc
mov
aad
popa
mov
rcr
fistp
sti
mov
add
stos
(bad)
outs
push
aad
push
mov
sbb
fnstcw
loopne
pusha
retf
retf
add
ja
inc
ror
stc
adc
(bad)
ret
out
test
imul
mov
sahf
and
dec
lahf
pusha
stos
jno
adc
push
test
add
push
xor
xchg
loop
fwait
call
mov
sbb
mov
mov
ror
loope
das
and
cdq
mov
sub
mov
retf
xlat
pushf
jg
dec
imul
mov
pop
nop
dec
cmp
dec
mov
push
jb
fimul
in
mov
cmps
ins
loope
lahf
pop
call
int3
jae
int3
cmp
icebp
xor
xchg
xchg
fisttp
sub
adc
iret
add
imul
fstp
in
cmp
std
in
jmp
cdq
cmp
int3
push
adc
pop
or
inc
out
dec
and
pop
inc
jno
cwde
inc
test
push
sbb
adc
(bad)
aas
dec
mov
mov
add
fcom
neg
adc
pop
adc
mov
sahf
int3
inc
push
cmp
pop
dec
clc
cwde
cmc
xor
aas
stc
xor
dec
rcr
pop
xchg
ja
scas
int
cmps
jb
cwde
(bad)
push
mov
sub
mov
sub
in
fidiv
stos
xchg
cmp
pop
fsub
add
sbb
ficom
aam
imul
(bad)
(bad)
mov
jns
dec
out
imul
xchg
fld
invd
cwde
jmp
adc
out
dec
and
lds
cmp
arpl
or
in
jecxz
mov
mov
jae
lea
push
dec
mov
call
push
pop
pop
xchg
and
test
pusha
cld
in
ins
ret
pop
(bad)
push
dec
aam
loop
je
mov
(bad)
push
repnz
loop
adc
scas
data16
inc
jbe
pop
pop
icebp
and
js
es
cs
cmp
out
in
pop
addr16
add
int3
nop
push
nop
jns
int
jg
in
in
cmc
push
nop
xchg
and
adc
aad
cmp
push
call
pop
xchg
and
enter
mov
mov
lods
pinsrw
dec
retf
sbb
jecxz
pop
xor
xor
dec
pop
xchg
or
inc
out
xor
jns
jae
into
pop
sbb
jb
jmp
mov
push
fs
lds
pop
dec
or
hlt
dec
in
push
or
mov
jl
inc
(bad)
fsubr
movs
sub
(bad)
jl
pop
aas
imul
inc
rcr
cmp
mov
outs
lock
out
ret
add
std
add
xchg
pusha
shl
test
ins
hlt
dec
ja
xchg
(bad)
cmp
dec
imul
jg
jno
xlat
and
mov
stos
jne
push
cmc
or
adc
shr
fs
dec
jo
pop
call
xor
sbb
xor
pushf
sub
and
mov
pusha
ja
loope
or
std
lahf
cmc
test
nop
aaa
xchg
add
fld
iret
jns
pop
dec
inc
or
repz
je
mov
arpl
jo
mov
idiv
pusha
fidiv
pop
inc
lods
bound
xchg
cmp
(bad)
rol
lahf
sbb
pushf
ins
dec
add
and
mov
sahf
cld
sbb
push
mov
ds
clc
inc
fadd
xchg
jae
sbb
adc
mov
cmp
aaa
adc
pusha
push
out
jp
jns
xchg
shr
sub
(bad)
mov
daa
push
rcl
cmps
adc
cwde
jecxz
mov
mov
add
xchg
int3
and
dec
pusha
ins
loope
cmp
push
enter
adc
aas
dec
imul
dec
lods
cmps
hlt
ja
sbb
int
jmp
test
jmp
inc
movs
cdq
es
pop
xchg
pop
sbb
and
jecxz
aam
std
sahf
pop
outs
inc
into
arpl
jno
cmp
je
and
mov
rcr
mov
push
xchg
fs
out
nop
mov
out
sub
mov
lods
push
shl
pushf
ja
dec
mov
sbb
or
shl
pop
lock
lods
add
add
sbb
aad
ins
scas
add
fstp
mov
xor
push
bound
adc
xchg
jae
aam
add
cli
jae
cmp
add
rcl
cmp
outs
loopne
fmulp
xlat
pop
sub
push
lock
test
inc
mov
jle
push
ins
leave
adc
mov
and
fsubr
test
and
inc
rcr
add
or
dec
ret
sub
int3
inc
add
nop
inc
inc
mov
in
les
sahf
stc
retf
fiadd
out
mov
jmp
push
adc
xor
iret
movs
inc
add
xor
dec
cwde
or
adc
gs
(bad)
add
add
aam
mov
aad
dec
jl
ja
out
outs
lock
mov
jmp
sbb
dec
cmps
jne
and
sti
push
and
gs
gs
and
sbb
jnp
cmp
scas
xchg
xor
jp
push
xchg
add
sub
faddp
(bad)
fsub
movs
push
inc
and
(bad)
xor
mov
mov
mov
mov
stos
imul
sub
pop
enter
mov
aas
add
repz
sbb
fdivr
jbe
dec
mov
out
gs
jbe
in
dec
fld
and
push
pop
retf
sub
xchg
gs
icebp
pusha
inc
retf
jecxz
sahf
out
test
mov
ret
push
and
mov
mov
or
clc
mov
sahf
and
aad
gs
mov
jmp
adc
pop
test
inc
cwde
jecxz
test
adc
fisttp
out
and
sbb
cmps
ja
push
jae
test
mov
out
and
and
push
stos
and
push
xchg
paddusb
(bad)
mov
mov
into
arpl
lods
fcom
gs
adc
jbe
push
cmp
out
xlat
add
inc
sbb
cli
fsubr
ret
cmp
push
sub
jp
cmp
dec
mov
fs
or
push
add
enter
cmp
push
xor
and
inc
int3
lds
jns
xchg
cmc
dec
pop
dec
dec
gs
in
dec
add
cmp
mov
sahf
inc
retf
or
and
add
adc
sbb
xchg
dec
pushf
fs
xor
fist
mov
inc
pushf
(bad)
fisttp
inc
inc
and
sahf
xor
mov
int
int3
out
in
dec
mov
pop
or
xchg
loop
push
in
mov
and
pusha
ins
and
push
dec
mov
fs
retf
mov
or
icebp
jo
outs
aaa
jmp
cmps
ins
cli
cdq
fcompp
push
in
sbb
sahf
or
or
sbb
rcr
in
pop
rcl
adc
adc
es
jns
mov
push
dec
nop
fist
fmul
pushf
jecxz
pop
mov
pop
push
dec
shr
clc
sub
jne
adc
(bad)
test
retf
jo
ret
jno
mov
arpl
ins
sub
add
jmp
and
jno
(bad)
mov
xlat
aad
ret
push
xor
or
fwait
mov
gs
popf
jno
push
cmp
sbb
or
or
dec
std
sub
sbb
ins
arpl
hlt
sub
scas
or
mov
retf
pop
fstp
into
jno
aam
call
test
push
out
clc
dec
cmps
and
mov
or
and
dec
mov
mov
aad
dec
cld
and
xlat
retf
fist
sbb
scas
sub
sbb
mov
test
cmp
out
or
mov
adc
call
scas
int3
call
ins
inc
xlat
mov
add
div
aas
xchg
pushf
mov
pop
dec
add
xchg
fstp
sub
sub
push
test
dec
mov
xchg
sbb
ret
sbb
(bad)
xchg
and
xchg
pop
cmp
fwait
das
bound
call
or
xor
(bad)
or
(bad)
shl
mov
dec
mov
or
and
mov
nop
xchg
pop
lds
sub
lods
dec
icebp
add
test
test
movs
push
and
call
jno
or
hlt
mov
dec
mov
xchg
adc
fsubr
sub
outs
aas
inc
xor
xlat
clc
pushf
jl
aam
mov
sbb
jle
xchg
rcr
scas
stc
lea
adc
mov
cmps
cs
add
(bad)
push
push
pop
shl
pop
cmps
xor
jne
and
push
mov
sub
in
xlat
aaa
inc
add
ins
lods
xchg
sar
rcl
xchg
xchg
data16
pop
jno
inc
loopne
stos
add
fstp
lock
cmp
sbb
mov
into
lock
cmp
jmp
mov
mov
or
les
and
mov
bound
ins
mov
sbb
shl
out
fwait
xchg
pop
xor
inc
jb
mov
jmp
xchg
push
int
ins
(bad)
pop
jno
inc
jnp
jbe
add
in
ins
jno
or
sti
add
fdivr
icebp
test
jmp
nop
lock
daa
aas
in
dec
lods
arpl
cs
jmp
shl
outs
or
xchg
rcl
or
xor
adc
mov
and
sub
dec
iret
dec
lahf
mov
cmp
pop
inc
push
cmps
int3
add
(bad)
mov
push
dec
pop
sub
cld
sub
hlt
jmp
jp
adc
loope
ret
dec
dec
int
lods
ret
outs
aad
stc
div
push
in
push
mov
sub
hlt
mov
add
cmc
lods
std
imul
pop
aas
pop
add
cli
add
mov
mov
mov
out
sbb
add
jnp
shr
test
pop
fidiv
lahf
mov
imul
cmc
pop
and
mov
and
nop
jp
inc
push
or
(bad)
daa
loope
mov
mov
pop
xchg
add
push
sar
push
iret
mov
inc
daa
sbb
outs
mov
cli
dec
shl
sub
or
nop
mov
or
retf
mov
xchg
jo
adc
mov
call
loopne
ret
sub
maxps
inc
and
push
mov
mov
jg
ror
mov
dec
lods
out
dec
out
jb
imul
std
mov
lahf
jg
repz
enter
or
mov
into
add
push
not
(bad)
std
sub
mov
mov
inc
cmp
mov
mov
jnp
ror
int
pop
rcl
mov
sub
out
dec
jne
cmps
es
in
(bad)
movs
popa
inc
inc
mov
data16
dec
outs
inc
mov
mov
addr16
and
adc
add
xchg
pop
aaa
scas
cmp
int3
ror
scas
std
push
xor
sbb
mov
cld
aas
scas
jns
jecxz
pushf
mov
and
mov
xor
add
test
mov
push
mov
in
movs
out
adc
arpl
mov
pop
and
outs
dec
or
stos
mov
xchg
push
mov
fs
xor
inc
xor
xor
add
push
ins
adc
outs
and
inc
or
rcl
sbb
inc
repnz
mov
std
imul
out
dec
data16
and
loope
lods
inc
push
ins
imul
fs
enter
test
push
and
add
lods
dec
ja
arpl
or
mov
lahf
sbb
dec
mov
mov
rol
call
out
movs
nop
sub
and
outs
dec
outs
inc
in
mov
retf
shr
pop
outs
and
sub
sub
retf
xor
in
xchg
mov
mov
in
inc
in
jno
scas
jecxz
or
ins
shl
lds
sahf
xchg
std
xor
sahf
mov
mov
sahf
and
xor
bound
(bad)
mov
and
or
pop
cs
rcr
push
jl
mov
push
loope
dec
sbb
arpl
arpl
dec
mov
pop
push
out
xor
xor
xchg
push
rol
lea
or
nop
clc
sbb
pop
bound
jbe
hlt
or
jmp
mov
xor
int
xchg
mov
les
sub
cdq
and
lock
pop
xlat
xor
add
sahf
mov
(bad)
ins
nop
xlat
and
hlt
pop
test
jle
addr16
sub
inc
test
movs
cmps
inc
mov
xchg
sbb
in
add
imul
arpl
fld
mov
jg
cli
push
xor
aas
aas
mov
mov
or
mov
loope
fistp
sbb
jecxz
inc
lods
cmp
ret
(bad)
repnz
test
imul
enter
pop
out
xchg
(bad)
push
loope
xchg
scas
aam
or
mov
lock
ror
arpl
(bad)
mov
xor
ss
test
ficom
inc
dec
mov
punpcklbw
cmc
sub
cmp
cdq
hlt
inc
(bad)
les
into
adc
cmp
(bad)
dec
push
sub
test
cwde
fisub
and
xchg
adc
xor
aas
xor
bnd
cmp
xchg
pop
cld
test
mov
push
mov
pop
cmc
outs
xchg
jne
mov
xchg
cli
adc
push
mov
stos
add
inc
pop
sub
repz
jnp
lea
xchg
cmp
mov
xlat
call
inc
dec
and
rcl
(bad)
pushf
sbb
pop
lods
pop
sub
and
inc
sahf
test
jo
fstp
pop
ins
cmps
jae
ds
mov
retf
loopne
mov
jge
adc
jne
or
aaa
movs
xchg
stos
cmp
xor
xor
jne
and
sete
(bad)
jno
aad
test
xchg
xor
adc
pop
mov
mov
pop
sbb
data16
or
push
std
jl
mov
or
jmp
addr16
loopne
aaa
das
mov
iret
xlat
jbe
shr
pop
ss
xchg
jo
loop
(bad)
fdivp
rol
(bad)
pop
pop
call
popa
out
lahf
mov
xchg
aad
and
jns
test
repnz
retf
push
dec
out
addr16
repnz
xchg
aaa
icebp
xor
add
xor
mov
test
or
and
jb
out
inc
mov
and
xlat
rcr
inc
loope
add
fwait
push
scas
clc
jp
xor
enter
(bad)
call
push
pop
pop
cmp
ins
mov
push
jo
xor
sti
aam
popa
imul
adc
mov
pushw
push
jg
push
jae
into
cs
pop
imul
xchg
xchg
and
jmp
mov
(bad)
je
cmp
pop
clc
sbb
mov
mov
imul
call
mov
(bad)
sub
cwde
inc
test
inc
xor
mov
adc
(bad)
mov
push
inc
jmp
popf
call
sub
scas
push
mov
inc
test
xchg
shr
adc
pop
pop
hlt
leave
xchg
iret
pop
push
or
cmp
jmp
sub
loop
inc
cmc
or
test
in
std
mov
mov
stos
xor
mov
jne
fisttp
xchg
mov
pop
dec
cs
mov
jg
call
icebp
pop
cmp
pop
fs
add
pop
push
mov
nop
inc
sub
or
sub
adc
iret
cmps
adc
jle
outs
jnp
cdq
jb
loop
sar
call
leave
mov
cmp
rcr
xchg
leave
loopne
push
xchg
add
xor
cmps
cmp
sbb
jp
bound
sti
ja
inc
lods
ins
rcr
in
pop
jp
mov
mov
cmps
sub
add
cmp
popf
sbb
sub
mov
cli
nop
adc
mov
inc
mov
jbe
mov
loope
jae
add
imul
lods
call
jecxz
cmp
sub
xor
ins
mov
sahf
leave
jnp
leave
mov
retf
test
data16
fisub
lods
pop
rcr
es
xlat
inc
adc
mov
jns
retf
(bad)
cld
cwde
xchg
outs
loop
sbb
jle
sub
pop
sbb
in
sbb
nop
jge
sub
cmp
into
mov
cmc
aas
shr
pop
jmp
or
adc
icebp
jbe
addr16
test
test
push
push
dec
inc
es
dec
adc
mov
out
xchg
jg
rcl
test
push
jo
test
mov
fmul
jno
add
shl
or
pop
out
mov
inc
add
add
imul
call
pushf
pop
jae
les
ss
(bad)
push
adc
xchg
cwde
jmp
lods
push
mov
leave
xchg
iret
das
aas
push
ds
pop
sbb
lods
idiv
inc
popa
mov
or
arpl
jo
pusha
sub
dec
mov
pop
aaa
test
xor
fwait
pop
adc
call
and
cs
js
xchg
push
sub
jae
movs
test
xchg
pop
push
ror
xchg
sbb
jns
divps
ja
mov
leave
cld
stc
inc
fs
mov
(bad)
jns
push
mov
sub
outs
dec
ins
mov
cmp
fiadd
cld
aaa
cli
pop
pop
je
inc
test
push
mov
popf
in
mov
test
jnp
sbb
and
aas
shl
stos
clc
sub
in
cs
in
mov
mov
shr
cmp
jno
iret
inc
mov
cdq
daa
sar
mov
fiadd
cmps
xor
test
adc
cmp
mul
and
sbb
out
dec
xchg
jmp
mov
cmps
loop
pop
or
mov
xlat
lahf
fmul
and
cmp
sub
lock
lock
(bad)
sbb
jne
mov
inc
and
and
div
ret
cmp
inc
out
inc
mov
xor
dec
inc
adc
adc
jns
push
and
imul
(bad)
in
and
mov
cmp
aam
mov
cmc
inc
and
cmps
ret
cld
pop
(bad)
mul
push
xchg
push
add
sub
inc
sbb
not
mov
bnd
mov
fmul
(bad)
pop
lahf
inc
mov
cwde
inc
jae
inc
hlt
sbb
add
xor
pop
inc
mov
shl
hlt
aad
push
retf
jge
mov
xchg
xchg
pop
aaa
cmp
mov
std
les
jns
outs
sub
cmp
addr16
adc
ins
(bad)
push
ret
mov
sbb
or
cld
and
outs
sbb
rcl
es
fdivr
xchg
jb
xadd
xchg
pop
push
ret
mov
mov
mov
adc
xor
sub
dec
loopne
cmp
test
std
or
mov
push
or
div
nop
ret
imul
push
sbb
dec
xchg
scas
cmp
retf
pop
outs
daa
or
push
jo
jo
xchg
jmp
inc
shr
adc
(bad)
enter
sbb
leave
repz
sub
callw
adc
sti
mov
call
push
cmp
inc
pop
ins
in
push
imul
mov
push
sbb
idiv
jle
repz
push
pusha
sbb
pushf
loope
push
push
pop
mov
out
neg
enter
fwait
add
sbb
jae
(bad)
call
in
pop
jmp
dec
jl
push
push
mov
cmovle
cmp
adc
je
jle
scas
cmp
add
and
jno
cld
sub
sub
enter
jmp
adc
push
out
dec
ins
hlt
xor
movs
jb
call
lods
ins
cli
xchg
or
cmp
pop
scas
sub
ins
retf
sub
addr16
cmc
mov
pushf
out
dec
pop
fbstp
in
cmps
push
fsubr
test
or
(bad)
mov
or
scas
shl
out
out
repz
retf
jnp
push
std
xchg
dec
cmp
pop
lds
daa
mov
and
fcomi
pop
stos
cs
cdq
mov
jp
jmp
pop
ret
dec
test
jmp
xor
add
icebp
enter
mov
jp
jno
cmps
clc
xor
jg
xor
mov
cmc
(bad)
loopne
xchg
lahf
dec
(bad)
mov
sbb
mov
loope
sbb
std
cwde
aam
fcmovb
dec
inc
mov
push
sbb
jmp
cs
sbb
fmul
int
test
rcl
daa
pop
scas
xchg
dec
cmp
cwde
movs
sbb
xor
gs
(bad)
cmc
mov
dec
adc
rcr
jb
push
and
push
sub
adc
retf
adc
cmp
dec
inc
pop
inc
fld
js
retf
sub
popf
xchg
push
push
push
sti
cmps
dec
mov
jmp
sbb
pop
pop
push
ins
sti
test
jnp
call
sub
iret
pop
shl
fmul
scas
mov
nop
cmp
dec
lahf
push
cli
ss
sbb
push
rcl
pusha
jecxz
or
movs
mov
test
push
xchg
test
sub
repnz
pop
add
inc
mov
pop
mov
(bad)
mov
scas
lods
retf
sub
xchg
xor
mov
cld
xor
cmps
icebp
out
lods
add
outs
test
mov
int3
icebp
pusha
in
push
push
add
xor
sub
sub
push
imul
pusha
hlt
xchg
nop
(bad)
(bad)
sub
nop
scas
push
call
mov
xor
mov
aam
int3
mov
mov
movs
imul
js
pop
iret
or
mov
pusha
jp
inc
add
push
iret
outs
cmp
es
dec
or
mov
(bad)
mov
out
(bad)
mov
mov
jg
push
lods
(bad)
xchg
leave
and
pop
cli
cmp
sbb
cmps
sub
jbe
fist
fnstcw
push
mov
push
mov
test
out
xchg
nop
or
hlt
xor
adc
movs
arpl
or
jns
test
inc
push
lods
push
retf
cdq
mov
jo
mov
out
ss
sub
pop
xchg
jmp
in
arpl
into
xchg
cmp
movs
int
cld
push
test
or
and
dec
adc
mov
leave
mov
mov
xchg
inc
adc
iret
retf
mov
add
stos
in
repnz
push
(bad)
pop
dec
mov
es
ds
xchg
add
loope
outs
cmp
popf
push
sub
jo
nop
mov
inc
mov
aam
xor
xor
adc
pop
cmps
adc
push
les
in
loop
add
inc
pop
jle
jb
add
popa
sbb
addr16
mov
mul
pop
enter
inc
retf
inc
fistp
add
popa
mov
out
inc
pop
mov
xchg
cmp
je
loop
daa
ret
shl
dec
cwde
xchg
into
fcomip
ins
movs
fwait
(bad)
pop
imul
hlt
dec
xchg
je
or
and
ret
ret
push
jmp
and
mov
mov
bound
fdiv
fnstenv
mov
push
inc
cmp
popa
neg
stos
jne
shr
add
lock
push
adc
push
inc
sbb
addr16
into
inc
(bad)
loop
fnstsw
sub
sbb
mov
add
pop
test
arpl
inc
dec
xchg
(bad)
pop
mov
mov
into
ror
in
cmp
xor
mov
fsubrp
inc
addr16
test
push
jnp
adc
int3
imul
ins
popa
sar
jae
mov
jnp
fiadd
je
mov
fcmovu
dec
or
sbb
or
out
xchg
mov
mov
mov
push
xlat
and
lods
stos
dec
lock
fs
jmp
cli
cs
ins
dec
call
jno
mov
add
aam
sbb
jno
ret
aad
daa
call
out
sbb
out
jmp
retf
loopne
inc
push
pop
test
cmp
xor
cmps
jns
xchg
stc
(bad)
mov
xor
jge
dec
or
push
pop
or
in
movhps
idiv
xchg
sbb
lods
clc
pop
inc
xor
ins
sahf
dec
xor
nop
or
rcr
and
loope
mov
ss
stos
loopne
mov
push
push
push
push
inc
pop
xor
cs
mov
mov
pop
imul
add
retf
pop
dec
fadd
sub
fnstenv
mov
clc
out
stos
sub
cdq
adc
push
clc
cmps
test
inc
push
cld
(bad)
je
jbe
add
adc
aam
leave
pusha
fsub
data16
aaa
cmp
cli
nop
cmp
mov
sub
leave
pop
jae
xor
push
imul
leave
mov
test
xor
cmp
mov
nop
rol
mov
ror
fcomp
mov
pop
push
mov
sub
pop
sbb
jge
and
clc
mov
xchg
dec
or
in
(bad)
fdivr
icebp
repz
or
add
jmp
jno
push
mov
pop
ror
aaa
inc
and
je
repnz
out
mov
jae
es
(bad)
add
cdq
add
mov
rcr
outs
sbb
out
pop
jmp
or
ret
pop
aam
pop
addr16
mov
clc
leave
pop
sub
mov
rol
icebp
or
scas
dec
cwde
repnz
in
push
push
aam
shr
or
test
push
ds
jnp
leave
aaa
push
push
sbb
test
ss
mov
or
inc
lods
pop
lock
sbb
cli
loopne
fdivr
clc
das
cmp
adc
mov
arpl
fs
aaa
cmp
in
leave
mov
cmps
stos
mov
lods
cmp
std
cmp
push
daa
xor
retf
xchg
fstp
fdivr
rcr
cmp
ret
out
xchg
jmp
ret
xor
mov
mov
xlat
dec
fadd
dec
mov
arpl
repnz
inc
or
fidivr
es
jne
pop
or
mov
or
out
shl
fcom
in
pop
inc
push
dec
xchg
sti
jne
push
jge
dec
xor
shr
repz
retf
loopne
mov
popa
and
push
inc
jnp
fdivr
push
xor
mov
mov
cmp
int3
cmps
sub
sbb
es
pop
out
and
mov
call
adc
jge
push
adc
pop
iret
mov
jle
lea
out
loopne
and
mov
cli
in
xor
mov
arpl
movs
cmp
aas
jge
adc
int
pop
dec
mov
pavgb
stos
xlat
loopne
stc
jp
mov
and
mov
mov
xor
pop
cmps
xchg
adc
aaa
adc
clc
test
or
sbb
std
lock
ds
shl
rcr
stc
or
pop
idiv
shr
xchg
push
push
stos
out
fwait
xchg
sub
adc
dec
mov
xchg
mov
cmp
ins
mov
mov
adc
ret
mov
inc
lahf
dec
pop
ins
jecxz
cmc
gs
je
adc
dec
or
imul
ficom
inc
push
mov
repz
and
jbe
pop
ds
xchg
sahf
sbb
rcr
leave
pushf
push
jnp
popf
push
loope
int3
je
clc
pop
neg
jecxz
xor
add
das
jb
xchg
cli
jmp
add
xchg
mov
pop
(bad)
dec
popa
daa
stos
sub
mov
mov
fistp
stos
dec
retf
imul
fwait
popa
jbe
cdq
pop
add
dec
push
mov
xor
frstor
das
inc
inc
test
scas
push
jp
retf
rcr
mov
in
popa
mov
sbb
mov
and
jg
mov
lea
call
enter
jmp
dec
cmc
dec
fs
test
ret
ins
nop
out
push
add
shr
or
push
fs
fld
cmp
xlat
add
inc
retf
add
push
loop
(bad)
mov
cmp
inc
xor
adc
jae
mov
push
xor
sub
cmp
pop
cmps
test
and
popf
dec
retf
cmp
ret
jp
fst
(bad)
test
inc
add
cmps
inc
mov
js
aam
mov
xor
adc
xchg
nop
mov
shr
cmp
fmul
xchg
cmps
xor
sbb
push
sub
jecxz
ins
and
jbe
pop
arpl
movs
sti
cmp
lods
rol
jno
dec
iret
test
cmp
or
inc
push
mov
mov
sar
iret
or
sub
je
call
fistp
call
xchg
ror
lahf
dec
les
sub
js
scas
sub
(bad)
mov
fnstcw
(bad)
std
fmulp
mov
les
mov
adc
push
or
xor
aam
nop
dec
or
test
mov
sbb
mov
pushf
xcrypt-cfb
cmps
arpl
xchg
call
ds
jmp
add
dec
dec
mov
xchg
cmp
sub
out
loopne
jecxz
push
mov
cmp
jle
pop
add
or
or
pop
inc
bound
inc
enter
loopne
nop
cs
sahf
addr16
push
lea
dec
outs
dec
cmp
and
ss
loope
test
retf
adc
jo
sbb
pop
aaa
mov
retf
ds
int
pop
cli
ss
fisub
int3
inc
mov
movs
fsubrp
pop
jno
or
cld
in
xor
add
and
add
push
cmps
sar
xchg
jo
sti
cmp
push
clc
mov
pop
call
sbb
fucomip
jl
and
dec
fisubr
and
cli
pusha
int3
pop
pop
mov
xor
and
shr
gs
push
and
arpl
outs
lea
adc
xor
cmp
stos
iret
imul
pop
(bad)
aam
push
mov
les
xlat
rcr
push
(bad)
test
dec
fild
punpckhwd
aad
not
xchg
fwait
mov
xchg
xor
shl
jae
daa
ret
(bad)
or
dec
dec
ins
into
(bad)
daa
call
xor
add
add
cmp
scas
push
cli
(bad)
in
aaa
sub
rol
xchg
dec
add
mov
and
and
push
mov
inc
jl
push
mov
adc
add
lea
cmps
or
bndldx
jns
shl
js
movs
push
imul
or
fsubr
push
mov
inc
sbb
stc
jno
push
cdq
leave
popf
int
cmp
jb
(bad)
psllq
cli
pop
push
push
pop
mov
pop
xchg
out
fwait
hlt
pop
mov
add
dec
and
inc
fistp
js
outs
and
dec
push
xchg
mov
xchg
dec
ficomp
call
adc
sbb
pop
ins
ud0
into
cs
call
rol
arpl
or
cs
jb
add
mov
jns
jae
loop
push
scas
mov
xchg
or
push
jo
in
retf
sbb
pusha
mov
cli
mov
mov
or
jl
out
jno
sbb
test
test
in
sbb
push
inc
mov
dec
push
mov
in
and
xchg
mov
nop
test
lds
mov
cmps
and
repnz
or
sahf
dec
int3
xlat
xchg
in
addr16
add
dec
push
push
bound
add
or
xor
aad
icebp
mov
xchg
and
dec
or
mov
daa
outs
repnz
call
int3
test
pop
mov
ret
fisub
je
lods
pop
in
jge
in
mul
mov
retf
cmc
sbb
pop
push
test
call
mov
jb
or
mov
jge
inc
bts
in
mov
cmps
scas
in
(bad)
cmps
sub
pop
fnstenv
repnz
repnz
mov
stos
cmp
sbb
sub
and
cmp
popf
ds
in
fist
dec
jno
dec
add
adc
in
cmp
out
bound
out
scas
pop
pop
jmp
xchg
mov
pop
push
int
jnp
mov
push
or
arpl
push
scas
in
mov
xor
call
mov
cwde
fist
cvttps2pi
xchg
lea
lods
and
ins
jo
cmp
adc
or
daa
jno
lea
int
mov
xchg
in
fdivr
inc
mov
hlt
mov
mov
sbb
(bad)
and
pop
loope
sbb
jb
dec
push
shl
jecxz
ret
aam
mov
idiv
and
add
(bad)
retf
adc
cmp
mov
mov
gs
into
mov
cmp
aam
pop
fsubr
retf
lds
jle
jmp
pop
cmp
xchg
stos
and
sbb
cmc
xchg
jae
ds
stos
or
jmp
in
push
mov
dec
inc
cmp
outs
test
repz
xlat
clc
xor
sub
fdiv
sbb
pop
hlt
int3
or
xor
sbb
popf
fnstcw
lods
pop
mov
push
gs
out
sub
(bad)
faddp
je
call
inc
sub
rcr
daa
mov
xchg
ss
je
mov
loopne
adc
imul
rcl
sub
fnstsw
push
jmp
cmc
sbb
or
inc
inc
pop
fs
js
cwde
data16
test
pop
sub
into
ins
jmp
add
aas
jb
pushf
add
mov
fwait
adc
push
popa
and
sbb
sbb
sahf
mov
stc
pop
jno
into
(bad)
fbld
jae
pushf
add
fs
aas
cld
in
mov
and
push
sbb
mov
and
sbb
add
adc
pop
jmp
imul
sbb
aam
mov
shl
or
or
dec
in
add
xchg
and
or
ds
sub
xchg
inc
push
test
mov
mov
jle
xchg
shl
inc
out
cmp
jle
cmp
test
stos
dec
xchg
mov
dec
xchg
int
scas
movs
rcr
pop
and
and
sub
fdiv
mov
xor
mov
pop
in
xchg
inc
jne
sbb
aad
icebp
stc
push
xchg
clc
cdq
int
inc
pop
adc
sub
jp
fmul
push
scas
mov
ficom
pop
fsub
rcr
or
cld
lock
loope
jmp
std
sbb
jp
shl
ds
push
aam
das
retf
cdq
jae
pop
cmp
pop
das
aam
xchg
push
and
int3
push
gs
mov
mov
xlat
les
sbb
inc
xchg
cmp
lock
mov
add
gs
shl
add
out
nop
adc
sahf
ror
fidivr
jp
loope
or
push
pusha
push
je
cli
test
movs
mov
aad
add
xor
sbb
sahf
adc
out
ss
sahf
jge
stos
mov
gs
jle
lods
daa
adc
adc
loope
adc
(bad)
mov
adc
call
sbb
cmp
pop
push
enter
icebp
sti
sar
out
add
jno
push
enter
(bad)
jecxz
popa
cwde
pop
std
loop
sub
jns
sub
(bad)
pop
scas
dec
and
xchg
adc
sbb
cwde
(bad)
dec
mov
sbb
jb
or
push
inc
ds
add
out
(bad)
jl
pop
loope
(bad)
mov
sbb
mov
(bad)
icebp
fild
scas
xlat
fist
jmp
mov
(bad)
fistp
outs
dec
xchg
cmp
push
imul
imul
fcom
out
sbb
lahf
xchg
imul
jno
or
pop
sub
or
mov
push
sub
fdivr
xor
or
xor
stc
jae
sti
call
xor
xor
sbb
sahf
das
fs
in
mov
test
ss
or
retf
and
mov
loop
out
(bad)
mov
xchg
push
out
cli
xchg
add
add
hlt
das
xchg
(bad)
movs
sub
xor
(bad)
sbb
bound
add
call
(bad)
sti
popf
sti
sub
fldcw
xchg
xor
jmp
xor
clc
mov
mov
imul
(bad)
nop
neg
adc
mov
(bad)
jmp
push
mov
ror
into
mov
dec
xchg
xchg
xchg
(bad)
and
dec
js
sbb
(bad)
rcr
push
dec
in
xor
push
test
pushf
cmps
js
psllq
and
outs
dec
adc
das
cdq
jmp
sub
pop
fisttp
int3
or
pop
pop
leave
xor
adc
jmp
es
cdq
test
mov
mov
(bad)
jmp
jg
mov
push
ret
xlat
mul
idiv
pop
std
xor
xchg
inc
int3
pop
inc
xor
pop
dec
aam
pop
jl
(bad)
adc
test
mov
sar
sub
ret
pop
(bad)
sub
mov
cmc
mov
jnp
data16
sub
push
mov
fcmovnb
fcomi
pop
push
mov
shl
sbb
repz
push
pop
bnd
std
jl
and
push
push
adc
add
inc
idiv
dec
adc
ret
mov
inc
mov
dec
lea
ret
push
sub
inc
sub
xor
add
mov
xchg
mov
sbb
pop
inc
jb
out
adc
sub
stos
ret
cmps
mov
aad
cmp
sbb
xchg
adc
mov
(bad)
sbb
and
adc
sub
dec
inc
(bad)
add
push
mov
xor
adc
mov
xor
in
mov
jp
in
movs
out
cmp
push
cwde
xor
shl
lea
frstor
pop
xchg
push
push
stos
popa
and
cmp
stos
aad
fbld
fistp
xchg
aad
lods
xor
sbb
add
xchg
jbe
nop
into
jg
ja
imul
stos
cmp
xor
inc
nop
div
push
dec
inc
cli
mov
dec
(bad)
fimul
mov
stos
repz
(bad)
idiv
push
shl
gs
test
xchg
mov
adc
ud0
les
and
shr
add
movs
gs
pop
pop
or
pop
jmp
dec
push
das
xor
and
(bad)
shr
sbb
inc
(bad)
ds
arpl
out
add
sbb
gs
pop
scas
stos
cdq
dec
mov
out
lock
pop
stos
or
mov
sbb
fst
push
leave
jmp
out
cs
dec
push
out
inc
and
icebp
enter
out
jp
inc
es
ss
xor
sub
sub
enter
loopne
and
pop
sbb
pop
imul
and
mov
xor
cmc
dec
(bad)
mov
nop
jg
stos
shl
cmp
mov
sbb
and
out
pop
or
fist
scas
bound
cs
mov
gs
(bad)
nop
xor
xor
cwde
mov
inc
push
out
fidivr
cmc
push
in
int3
jg
mov
pop
ins
enter
ret
dec
daa
sub
cmp
jl
in
pop
and
and
cmp
mov
add
pop
mov
lds
or
lods
mov
xor
add
inc
in
cli
sub
lods
push
icebp
test
mov
rcl
inc
aam
pop
mov
sbb
xchg
xor
addr16
ret
sbb
or
cmps
jl
dec
jl
rcr
scas
pop
sbb
out
sbb
pop
pop
popf
dec
fdiv
cmp
jg
fdivr
out
adc
out
xchg
sbb
mov
icebp
pusha
push
inc
xor
movs
push
or
pushf
xor
push
add
and
push
mov
rol
add
rol
out
test
or
repz
lods
or
imul
ror
xchg
push
je
cmps
in
mov
aad
loop
and
cmp
and
out
sub
mov
adc
sbb
clc
stos
clc
add
pop
add
cmp
call
cdq
lds
movs
cmp
out
es
push
pop
add
push
in
loopne
bnd
xor
jo
dec
xlat
repnz
int
adc
dec
jbe
push
(bad)
push
shl
push
adc
sub
inc
stos
mov
fisub
jg
(bad)
cmp
jl
(bad)
push
mov
cli
(bad)
hlt
xchg
xchg
mov
sbb
mov
sahf
sub
lahf
call
lods
and
mov
inc
sbb
or
or
rcr
push
movs
jp
add
xchg
in
jle
xchg
aad
adc
fadd
mov
jp
dec
jecxz
jmp
cmp
jp
push
cmps
xchg
or
repz
aas
test
jbe
inc
addr16
je
hlt
jg
jp
xchg
jmp
inc
iret
idiv
and
jne
pop
cld
in
add
out
out
mov
cmps
push
icebp
jb
test
adc
xor
jp
scas
mov
xor
push
cld
xor
mov
push
ja
mov
push
arpl
inc
inc
adc
call
mov
add
mov
add
adc
and
add
dec
add
jne
arpl
mov
xchg
cmps
mov
push
pop
mov
adc
or
adc
das
lods
mov
push
dec
push
shr
jle
popa
out
pop
xchg
dec
mov
dec
jnp
push
pop
jno
scas
imul
sub
adc
scas
pop
cmps
cli
mov
out
xor
mov
inc
icebp
jbe
jae
sahf
ds
lds
stc
sub
sbb
fimul
aad
mov
xor
test
int3
(bad)
and
xchg
lock
das
das
and
jns
push
inc
pop
sub
dec
push
mov
icebp
test
enter
outs
or
xor
shl
in
push
sub
jp
cli
push
out
fwait
add
xchg
cli
icebp
lods
mov
imul
lock
retf
lock
dec
sbb
add
aam
ins
idiv
xchg
mov
ret
cmp
and
push
add
stos
add
and
lods
xor
or
xchg
or
dec
sub
push
push
pusha
dec
sub
xchg
xchg
mov
into
push
and
aaa
mov
and
pusha
addr16
test
and
add
cs
jmp
lods
pop
mov
enter
pop
ret
push
push
sub
lods
jne
test
mov
dec
mov
sti
out
mov
(bad)
push
sub
mov
pop
data16
fwait
mov
and
mov
jo
repz
sub
rcr
xor
popa
scas
out
mov
leave
fcmove
and
mov
push
ins
call
in
and
imul
xor
in
aam
enter
jmp
loop
jbe
sbb
mov
lods
and
fld
bound
push
in
inc
repz
or
in
clc
jbe
sub
jmp
pop
dec
in
ja
inc
sahf
mov
aaa
stc
push
mov
adc
xor
loop
push
sbb
cli
jle
fnsave
jnp
pop
pop
and
push
pop
push
push
loop
cmp
fild
mov
jmp
fwait
mov
outs
push
add
mov
popa
or
mov
xchg
xchg
test
repnz
cmp
adc
inc
cld
dec
xor
aaa
xor
mov
gs
push
call
xchg
jns
jp
les
lods
mov
pop
fld
ds
and
cwde
jo
sub
xchg
mov
in
xchg
push
fldcw
hlt
xlat
cdq
fbstp
out
push
fldln2
clc
pop
ret
mov
fistp
and
sbb
fcom
cmp
in
pop
mov
cmp
fucom
int3
sbb
mov
and
xchg
push
mov
data16
fstp
sub
stos
mov
push
pop
cmp
and
cld
xchg
pop
paddb
pop
sub
cli
jg
ds
in
jmp
inc
push
loop
inc
aad
and
sub
mov
and
mov
mov
shl
push
in
addr16
daa
cdq
xchg
or
add
loop
adc
and
add
mov
dec
loope
push
sub
popa
ret
loopne
icebp
xchg
icebp
sbb
aaa
scas
dec
jl
mov
mov
xor
jecxz
inc
iret
repz
mov
jmp
daa
adc
mov
mov
mov
dec
test
shr
in
jmp
std
xchg
jmp
push
ret
(bad)
rcl
push
gs
and
pop
js
add
lds
leave
lods
pop
jl
sub
adc
xor
xchg
scas
ret
out
jns
outs
jecxz
loope
fcomi
pop
int
pop
jmp
mov
sub
adc
mov
retf
and
fcomp
jb
jbe
or
ss
xor
add
push
test
mov
mov
inc
pop
push
into
push
cmp
imul
xchg
or
movs
push
fwait
push
xor
lea
push
push
jmp
pop
stos
loopne
push
retf
(bad)
(bad)
icebp
movs
and
mov
je
push
(bad)
test
xlat
push
mov
lock
push
icebp
sbb
push
iret
sub
inc
pop
add
sbb
ret
cmc
stos
int
xor
cmc
(bad)
cmp
add
adc
and
sub
sbb
fld
and
jmp
iret
jmp
sbb
ja
pusha
add
ss
iret
jbe
push
add
jl
jb
xor
jbe
inc
cmps
arpl
dec
shl
jae
sbb
xlat
stc
frstor
aad
add
cmps
add
inc
psubsb
int3
xor
push
int3
mov
in
cmps
push
xor
or
fdivr
sub
out
or
cwde
sub
adc
sub
pop
inc
les
jecxz
adc
cmp
icebp
ret
retf
or
cmp
leave
push
mov
icebp
in
mov
lea
sbb
and
lahf
and
mov
cmp
or
jno
dec
call
enter
aad
iret
xor
push
jns
jbe
sub
push
aad
test
rcr
push
in
xchg
mov
call
mov
xchg
ret
mov
pop
inc
(bad)
cmp
dec
mov
jl
mov
fisttp
clc
push
movs
jne
dec
int
inc
test
imul
inc
(bad)
std
movs
and
into
pusha
xchg
or
mov
dec
cmp
mov
cld
std
hlt
jp
lahf
cli
adc
xchg
push
ins
aas
ds
jl
push
mov
and
hlt
imul
retf
int
sti
mov
xchg
nop
pop
and
retf
les
aas
inc
push
hlt
mov
mov
pop
out
fs
call
xchg
cmp
(bad)
push
mov
xchg
jo
sub
xlat
popf
daa
and
(bad)
pop
int3
dec
stc
(bad)
mov
stc
test
(bad)
bound
add
push
lods
movs
pop
adc
or
mov
jge
xor
retf
(bad)
ins
out
test
in
std
mov
and
shr
mov
pusha
fadd
icebp
or
push
retf
hlt
pop
ds
inc
cli
shl
out
(bad)
inc
inc
mov
lea
pop
and
outs
lock
rcl
loop
int
push
in
or
or
repnz
iret
js
cmp
test
mov
and
push
out
stos
mov
call
mov
or
add
xchg
pop
es
movs
repz
xchg
push
xor
cwde
xchg
cmp
xchg
mov
sub
sahf
dec
mov
js
in
ins
pusha
inc
les
xchg
loope
ins
loopne
mov
dec
shr
(bad)
cld
push
xchg
push
into
scas
dec
xchg
ret
test
ror
jnp
(bad)
in
inc
mov
out
sub
mov
cmp
iret
or
(bad)
in
retf
mov
arpl
inc
xchg
ds
into
dec
std
cs
fld
jl
out
xchg
fisttp
sub
push
add
and
jno
pop
jae
push
dec
jne
or
pusha
mov
fucom
out
mov
pop
loop
mov
and
dec
sub
div
ins
mov
adc
xor
cmc
or
add
sbb
sub
xchg
dec
mov
lea
aam
ret
cmp
mov
movs
outs
xchg
stc
cmp
es
cmp
sub
call
xor
cmp
push
sub
call
mov
jae
jmp
or
pop
fdiv
hlt
dec
fs
adc
in
repz
cmc
stos
jmp
outs
cmp
in
and
push
and
cmps
repz
sub
mov
add
out
fmul
(bad)
stos
jl
jmp
ss
jae
mov
pop
add
dec
xchg
add
es
cmps
jmp
mov
jmp
mov
mov
add
cmc
push
rcr
lea
ds
push
lahf
mov
rcr
inc
test
movs
(bad)
jp
inc
test
loope
dec
std
mov
cmp
imul
sub
cmp
mov
dec
adc
jle
fld
jns
data16
test
es
push
fs
ret
mov
cmp
jmp
repz
hlt
dec
leave
mov
imul
push
mov
movs
ret
scas
xchg
iret
xor
(bad)
outs
sub
ins
dec
mov
xchg
sbb
push
adc
ficom
hlt
mov
sti
retf
xlat
hlt
xor
sub
xor
inc
jno
or
adc
shr
and
fdiv
pop
fs
or
or
shr
mov
cmps
jecxz
adc
mov
movs
jle
push
mov
popa
fisubr
and
retf
cs
push
sub
xlat
retf
adc
push
jo
ret
popa
retf
pop
sbb
sub
pop
jae
rol
retf
jns
pop
in
xlat
ja
cwde
push
add
lea
push
cmp
cmp
les
inc
xchg
stos
xor
lahf
inc
cwde
mov
je
inc
(bad)
mov
pop
add
push
push
scas
or
add
mov
or
imul
jne
lds
jge
mov
pop
sbb
out
retf
xchg
jmp
sub
loopne
sub
mov
xor
dec
xor
xchg
ins
jge
sbb
mov
and
repnz
xor
sbb
lods
ret
loope
out
or
into
loopne
ror
push
test
adc
out
cmps
outs
xor
inc
adc
sub
sbb
and
int
pop
cmp
ss
pop
shr
ins
mov
xchg
int3
mov
mov
and
cmps
sbb
push
xchg
mov
mov
ja
rcl
xchg
repz
out
imul
popa
ja
test
sub
sbb
lock
retf
and
ins
cmps
test
and
shr
in
cmp
mov
loop
sbb
inc
xor
shl
ret
add
push
xchg
xor
or
repnz
inc
push
daa
push
ret
jecxz
in
jae
jge
and
in
movs
mov
cmp
and
sub
mov
int3
aas
(bad)
enter
pop
ds
and
out
in
das
push
add
inc
std
xor
jns
and
cmp
inc
les
hlt
xchg
and
xchg
xchg
pop
fs
(bad)
aad
inc
cmps
mov
sub
call
sbb
stos
ss
adc
test
cwde
inc
in
or
cmp
mov
(bad)
jmp
cmps
mov
dec
lock
push
dec
mov
loope
pop
mov
mov
das
jecxz
jb
ror
inc
mov
add
and
test
int
add
cmp
inc
sub
sbb
adc
pop
mov
lods
hlt
dec
rcr
xchg
pop
and
sti
jl
jge
repz
sahf
push
mov
push
pop
sub
jle
cmps
sbb
push
adc
push
pop
adc
out
mov
mov
adc
xchg
pop
xor
or
lods
pushf
outs
scas
js
imul
sub
outs
mov
in
bound
repnz
xchg
add
outs
lahf
mov
sbb
xor
cmp
lds
imul
cmp
adc
lahf
(bad)
ficom
loopne
sub
outs
stos
hlt
add
sar
add
push
(bad)
mov
jb
loopne
ins
cld
scas
push
mov
jecxz
jmp
mov
clc
jmp
leave
es
mov
lods
test
ret
dec
push
mov
or
sub
add
fild
sbb
movs
add
enter
cmp
xlat
fs
jmp
fimul
fs
pusha
pusha
inc
mov
fsub
fnstcw
out
ins
sub
data16
ret
icebp
lahf
sbb
cwde
xchg
shl
and
jns
shl
mov
xchg
cmps
js
jb
call
or
popf
sbb
pop
(bad)
iret
pop
adc
fdiv
bound
inc
test
jge
mov
inc
pop
pop
scas
sub
fucomip
cmps
inc
jo
mov
std
shr
cmp
rol
std
js
cwde
out
inc
in
arpl
and
das
lock
sbb
iret
test
cmp
cmp
dec
jnp
xchg
inc
mov
fs
hlt
jmp
or
sbb
add
and
pusha
addr16
and
sbb
sbb
add
pusha
(bad)
std
adc
movs
jne
es
sub
pop
add
jl
jmp
ins
dec
aaa
daa
je
mov
xor
cli
ins
hlt
add
inc
xor
and
int
(bad)
rsqrtps
fidiv
inc
mov
into
dec
or
call
mov
mov
xchg
test
push
mov
and
xchg
add
pop
pop
or
xor
(bad)
xchg
pop
pop
xor
xor
bound
sbb
int3
std
cld
or
pop
lods
cmp
jmp
clc
retf
or
aas
test
imul
jp
sar
pop
sbb
pop
ret
dec
xadd
(bad)
jge
push
adc
fimul
sub
xchg
or
sub
or
gs
mov
dec
push
push
in
in
xchg
mov
or
xchg
pop
es
or
adc
pushf
pop
adc
push
pop
cmp
xor
jp
sahf
cdq
jns
sub
ins
adc
xchg
sub
push
jb
das
outs
call
jmp
and
push
dec
pop
sub
mov
nop
xchg
mov
sbb
test
imul
and
jnp
push
aad
iret
and
ja
repnz
sbb
sbb
add
pop
xchg
nop
jl
fstp
sbb
sti
push
test
sahf
pop
sbb
stos
mov
ins
int
ret
fst
xchg
shr
adc
fst
sbb
aad
cmp
ja
in
jbe
cmp
lea
sbb
fisub
ror
xchg
or
jmp
out
add
push
cli
cmp
adc
jo
mov
dec
mov
xor
push
leave
jnp
pop
mov
adc
xchg
int3
adc
scas
lea
or
call
xchg
loopne
jb
in
or
xchg
cli
or
fild
shr
mov
mov
mov
and
clc
push
add
pop
jmp
cmc
adc
mov
retf
iret
mov
lahf
into
mov
idiv
jge
ss
ficom
dec
cmp
jmp
or
pop
sbb
jmp
mov
and
adc
retf
fisub
add
inc
push
cmp
sub
inc
add
(bad)
adc
push
imul
and
inc
inc
das
xor
loop
jne
dec
(bad)
xchg
push
and
xchg
xchg
mov
sub
scas
ret
push
mov
int3
imul
ret
push
pop
jo
dec
push
mov
mov
mov
mov
call
fldcw
cmps
jl
inc
cmps
cmp
dec
inc
push
jmp
xor
or
jo
out
push
mov
scas
lahf
pusha
and
adc
mov
inc
push
clc
sbb
das
(bad)
pop
cdq
retf
push
inc
das
in
jge
outs
inc
dec
data16
ret
test
mov
push
xor
mov
cmc
cs
xchg
les
mov
mov
in
pop
jg
or
xor
mov
shr
cmp
or
loope
(bad)
jo
adc
and
xchg
push
outs
jne
mov
xchg
inc
xor
fiadd
rcr
xor
mov
mov
int3
mov
jo
dec
sub
scas
cmp
adc
ror
loopne
push
adc
(bad)
mov
ds
push
shr
call
adc
out
and
cdq
and
cmp
xchg
pop
jnp
clc
lea
in
pop
aam
push
dec
pop
jno
popa
mov
call
mov
popf
cmp
sbb
xchg
sbb
mov
scas
call
or
xlat
mov
outs
jge
mov
jno
add
call
mov
jmp
dec
aad
or
or
mov
rcl
stos
lock
ss
or
in
test
scas
or
push
sub
jge
repz
sbb
mov
aaa
iret
test
lds
cmp
call
iret
cmps
aad
vpminsw
sbb
repz
sti
shr
repnz
mov
jns
into
sar
push
push
sti
mov
or
cmp
xchg
add
push
pop
stos
sub
or
push
int3
push
cmp
or
mov
rcl
mov
jmp
loope
push
clc
loop
daa
sbb
sahf
sbb
add
xchg
mov
pop
dec
ror
popa
loop
aam
adc
int
ret
mov
xlat
cmps
pop
push
and
stc
fld
or
pop
cmps
jmp
and
call
xor
or
dec
shl
mov
inc
xlat
lods
push
adc
mov
sub
repz
cmp
mov
or
dec
cmp
(bad)
sbb
fld
push
mov
jge
push
and
dec
test
mov
push
cmc
mov
call
sub
mov
push
cmps
(bad)
cmp
pop
into
idiv
jmp
sbb
int3
mov
xor
push
cmp
cwde
inc
ds
pusha
push
aas
push
loop
mov
jno
sub
push
or
mov
xor
ins
mov
shl
push
stc
test
je
data16
movs
lea
lock
cmp
mov
movs
sar
mov
dec
stos
inc
popa
mov
pop
mov
pop
aaa
scas
pop
daa
push
dec
mov
lahf
std
push
jmp
std
addr16
ror
lods
xchg
ret
retf
cdq
gs
or
addr16
or
cmp
mov
mov
add
mov
in
stc
sahf
jmp
(bad)
mov
adc
inc
cmp
sbb
mov
pop
lods
repz
movs
add
in
xchg
xchg
sar
jle
xor
xor
mov
enter
adc
pop
outs
std
mov
gs
out
nop
stos
(bad)
xor
push
push
mov
sahf
xchg
and
and
mov
gs
inc
int
adc
inc
cmp
fld
movs
add
pushf
xchg
movs
add
stos
xor
ins
in
jg
test
retf
mov
(bad)
sbb
jl
ins
jno
(bad)
pop
aaa
xchg
sahf
cs
ror
mov
dec
not
and
stos
shr
inc
push
cli
pop
or
movs
movs
rol
loop
xchg
jecxz
add
and
jne
fisub
fnstcw
push
sbb
sub
cmps
stos
sahf
lock
call
pop
mov
enter
sbb
xchg
jno
mov
test
nop
out
cmc
ds
(bad)
fst
pop
ror
mov
icebp
and
mov
jb
pop
dec
mov
aad
cwde
icebp
jo
mov
dec
test
mov
mov
mov
and
fbstp
imul
repnz
xor
test
movs
push
mov
mov
test
inc
or
sbb
pop
xchg
push
jle
mov
fs
mov
sub
aas
(bad)
lods
ror
inc
adc
imul
jno
jle
xchg
mov
dec
jmp
ins
inc
mov
fs
and
and
iret
jae
jmp
daa
nop
aaa
push
mov
stos
adc
(bad)
adc
xlat
mov
sar
fsub
test
xor
push
pushf
and
aaa
xchg
fwait
mov
fcomp
cmp
and
cwde
jmp
scas
push
(bad)
rcl
inc
dec
and
push
mov
in
inc
mov
jae
add
out
xor
in
repz
mov
add
sbb
es
cmp
pop
push
sbb
retf
adc
sub
nop
cmp
jns
js
push
iret
movs
inc
sbb
iret
push
loopne
mov
mov
frstor
fadd
dec
sbb
fs
clc
stos
xchg
call
and
cmc
movs
retf
int3
fist
fwait
es
adc
mul
add
pop
mov
add
push
retf
stc
push
xchg
dec
push
jbe
shl
jmp
popa
cli
outs
inc
push
ds
rol
movs
jbe
push
popa
ds
inc
mov
pop
mov
call
repnz
fwait
sbb
pop
mov
daa
ficomp
cmp
lea
movs
push
sub
retf
aas
fnsave
push
out
scas
push
adc
add
cmp
xor
dec
mov
fcom
sbb
xchg
xlat
aaa
mov
xchg
popa
sbb
xor
ret
mov
push
dec
in
add
mov
pop
and
adc
popa
sbb
into
pop
out
shr
sub
sbb
fisubr
mov
mov
retf
jno
sar
jg
jmp
loop
mov
fist
cmp
rcr
cmp
push
jl
(bad)
pop
cmps
push
cwde
mov
into
mov
mov
sub
shl
xchg
in
sbb
pop
shl
push
das
cmp
pushf
dec
arpl
fs
push
cmps
sbb
imul
imul
jge
aaa
(bad)
push
jbe
jne
les
adc
pop
sub
xor
xor
cmps
xchg
mov
jl
scas
push
mov
lods
(bad)
fist
and
adc
out
and
outs
push
in
jb
push
mov
mov
jo
adc
or
in
jle
adc
xor
xor
sbb
adc
adc
repz
inc
in
push
movs
fidivr
sar
push
mov
or
popf
adc
cmps
sbb
lds
mov
ins
(bad)
xor
cld
mov
sub
imul
cdq
cmp
push
fcmovu
jae
(bad)
daa
dec
adc
cdq
loop
pusha
stos
jmp
call
jg
jne
mov
pop
inc
jge
sti
loopne
popa
pop
std
cwde
mov
jae
call
xchg
mov
js
xchg
leave
mov
pop
mov
jmp
rcl
pop
hlt
xchg
clc
ret
mov
sub
dec
jnp
sar
cs
mov
hlt
sub
xor
cmp
sahf
inc
jp
mov
mov
sbb
mov
icebp
xor
pushf
push
cs
add
aam
xchg
ss
retf
jns
les
xor
mov
repnz
and
add
sbb
fsubr
mov
sahf
dec
ins
cmp
adc
cmp
enter
mov
popf
inc
push
popa
dec
jecxz
mov
call
jno
jb
and
jg
push
cli
lds
shl
and
scas
mov
out
sbb
scas
ins
dec
outs
mov
adc
push
mov
and
sbb
retf
sahf
pop
or
xor
mov
adc
std
mov
xor
out
out
or
sub
sub
cmp
mov
xor
pop
shl
xchg
cdq
sti
lahf
daa
in
dec
and
xor
and
cli
adc
adc
or
xlat
cwde
pop
sub
aam
rcl
jp
pop
mov
pop
jl
xchg
stos
cmp
dec
lds
cmc
inc
xor
xor
fldl2e
scas
mov
mov
(bad)
dec
pop
js
out
adc
out
pop
test
ss
jo
mov
movs
cli
repz
sub
mov
fstp
xchg
xchg
mov
cmp
in
jb
test
mov
mov
mov
cmp
aam
mov
int
push
push
arpl
dec
and
out
hlt
jnp
sbb
test
inc
test
adc
(bad)
int3
sub
mov
xchg
xor
mov
xor
lods
push
push
and
(bad)
pop
test
mov
imul
mov
int3
or
aaa
inc
les
in
mov
pop
fwait
add
movs
aam
jge
arpl
mov
push
in
pop
mov
call
out
imul
xor
not
cmp
and
in
loop
pop
add
mov
xchg
push
pop
mov
mov
cmp
ja
cs
or
xor
sub
retf
mov
into
mov
fnstsw
or
jns
sub
cmps
dec
jecxz
fwait
push
cmp
ins
fs
call
cwde
mov
fbstp
mov
push
mov
shl
adc
inc
cdq
nop
ins
sub
loop
pop
outs
jg
loop
add
rcl
scas
and
cmp
aaa
fisub
stos
enter
lds
or
xor
gs
sahf
aas
pop
test
fisub
gs
inc
push
arpl
adc
xchg
fcmovbe
pop
std
enter
cmps
pop
and
xchg
push
out
push
jbe
mov
push
cwde
loope
mov
xchg
sub
fcmovbe
cmc
xchg
aam
xor
test
les
xchg
shl
retf
aas
stos
arpl
dec
(bad)
popf
push
clc
addr16
daa
and
inc
cmc
dec
adc
xchg
xchg
lock
push
out
inc
inc
push
cld
or
sbb
loopne
fistp
mov
or
fimul
fwait
outs
jmp
cmp
cmp
inc
cmp
cli
dec
xor
xchg
sbb
jno
fwait
or
jmp
xor
xchg
dec
repz
sub
push
push
inc
in
outs
stc
int
cmp
aaa
dec
and
(bad)
jge
or
aam
mov
xor
jnp
push
div
dec
mov
ja
inc
fdivr
les
clc
lods
mov
fcmovb
add
(bad)
daa
imul
lods
sbb
mov
push
sti
and
inc
jae
mov
sti
pop
inc
neg
and
mov
sbb
sub
add
jg
mov
ds
test
jp
pop
movs
stos
push
mov
and
push
scas
movs
mov
out
outs
sub
jnp
jo
loope
sbb
js
cmp
fsubr
es
pop
movaps
xchg
or
out
iret
mov
add
xor
jmp
or
fs
and
cmps
cdq
pop
add
push
xchg
dec
jge
pop
scas
sub
pop
clc
scas
pop
and
jmp
xchg
hlt
cmp
and
ret
out
fisub
mov
and
js
repz
and
dec
ja
int3
loope
test
add
or
add
sbb
in
adc
and
cmp
shl
fisubr
fistp
loopne
jp
imul
xchg
sub
inc
(bad)
jg
adc
aaa
dec
sbb
mov
xchg
jmp
out
xchg
and
ret
inc
leave
jo
adc
rcr
popf
stos
icebp
push
mov
(bad)
jbe
adc
rcl
mov
(bad)
sub
gs
xchg
ds
call
push
pop
sub
inc
test
xlat
cmp
pop
(bad)
getsec
and
inc
js
cmp
or
xlat
div
ja
add
adc
cs
stos
test
les
mov
push
repnz
jnp
fbld
pop
dec
push
jns
inc
(bad)
das
out
out
shl
cmp
das
inc
mov
out
sar
outs
mov
dec
jmp
cmp
loope
lock
lods
mov
jo
inc
(bad)
ja
push
jb
jae
xor
ins
jge
jno
fdiv
rcr
lahf
imul
sub
sub
fisubr
mov
and
sbb
sbb
mov
adc
mov
jl
repnz
test
mov
ffree
lods
js
sub
push
inc
push
xor
adc
fcmovnu
jo
sbb
inc
inc
or
js
(bad)
mov
sbb
mov
pushf
jle
pusha
mov
inc
adc
cmp
fimul
idiv
arpl
clc
sbb
cmp
fisub
outs
loop
mov
outs
jb
jno
sbb
cdq
lock
pop
cmp
mov
or
cmp
jle
ror
and
or
nop
sub
push
push
mov
or
fxsave
sti
inc
and
xor
mov
ins
loope
aam
sbb
and
xor
xchg
(bad)
shl
inc
in
push
pop
cli
push
mov
xchg
(bad)
push
out
adc
mov
sub
call
push
xor
mov
xchg
out
fs
xchg
pop
hlt
inc
xor
dec
pop
das
xchg
inc
jecxz
push
pop
push
arpl
or
sub
into
popf
inc
cmp
cli
sbb
into
cmp
call
popa
fsub
ret
into
es
xchg
shl
xchg
mov
fdivr
or
ret
push
popa
in
jno
xchg
cmp
clc
cmc
inc
and
or
lds
jbe
push
mov
push
out
and
dec
adc
repnz
adc
fcmovne
je
retf
push
gs
jmp
icebp
sahf
(bad)
fld
mov
xor
sbb
inc
ror
sub
sub
shr
adc
out
mov
mov
mov
aad
mov
cld
mov
sbb
mov
xchg
xchg
mov
jmp
std
sub
fmul
das
push
mov
popf
xchg
cmp
push
xchg
into
shl
sub
ret
cdq
xchg
adc
shr
pop
fisub
rcr
cmp
xchg
scas
cmp
fdiv
pop
(bad)
push
push
adc
jecxz
jb
enter
pop
mov
das
test
out
movs
mul
jb
cmps
and
pop
or
daa
jnp
std
cmps
jb
sbb
fisttp
inc
jg
mov
stos
jmp
aad
mov
inc
mov
or
bound
adc
xlat
pop
sub
sbb
cmp
mov
mov
outs
fadd
mov
push
add
loopne
mov
sub
or
mov
scas
sbb
pop
aam
inc
shl
jo
retf
and
mov
mov
aad
in
cmp
jmp
inc
(bad)
sub
adc
jae
cli
jp
aaa
push
mov
mov
in
push
mov
push
xchg
xchg
xchg
and
fisubr
test
inc
rep
jle
int3
xor
xor
gs
cwde
cwde
dec
inc
icebp
out
jp
aam
xor
xor
arpl
mov
add
aas
xchg
and
inc
add
mov
xchg
mov
outs
mov
in
jge
dec
lea
xor
xor
mov
int
sub
hlt
jb
cmp
mov
xor
dec
sbb
mov
mov
mov
adc
cmps
ja
dec
fisub
rcl
inc
push
jg
jae
mov
adc
jne
jge
ret
in
dec
xchg
ret
cld
std
sbb
ss
sub
iret
je
test
inc
outs
mov
bound
sahf
jnp
mov
repnz
(bad)
xchg
scas
add
cmps
mov
test
mov
jecxz
pop
(bad)
push
adc
xchg
fs
stos
push
inc
mov
xchg
pusha
mov
add
inc
mov
lock
lds
nop
rcl
or
scas
push
adc
sbb
jl
sbb
sub
fnstcw
cmps
jno
test
fwait
js
inc
sub
or
pushf
cdq
cwde
leave
pop
add
and
pop
xchg
cdq
ret
dec
and
aas
or
pop
push
jp
cs
rcl
in
test
push
jb
adc
pop
ror
aad
and
leave
cmp
cdq
les
and
fst
into
iret
call
inc
fnstsw
stc
jmp
movs
enter
push
xchg
sbb
sbb
icebp
mov
shl
test
sub
xor
call
jne
cdq
sbb
and
not
mov
and
pop
pop
sar
cmp
push
mul
test
push
sbb
clc
or
shl
fs
xchg
inc
lahf
call
jmp
stos
dec
pop
ja
out
stc
jmp
cmps
inc
xor
ret
mov
retf
loop
push
(bad)
mov
push
(bad)
adc
sahf
aas
xchg
and
pop
xor
loop
hlt
mov
add
pop
(bad)
sub
mov
or
fisub
xchg
cs
adc
inc
sub
cmp
and
push
mov
fadd
enter
xor
stos
inc
adc
nop
pcmpeqd
gs
lds
pop
vpmacsdql
mov
shr
out
inc
dec
push
(bad)
mov
and
lods
push
cli
cmp
sbb
pop
sbb
leave
jg
xchg
(bad)
stc
mov
outs
mov
retf
loopne
xchg
int3
or
xor
and
dec
mov
jmp
int3
pop
stos
sub
imul
cli
ficomp
imul
rol
fisub
sub
push
les
call
push
dec
xor
nop
dec
sti
or
mov
adc
or
stos
sub
cs
lea
shl
mov
pop
(bad)
push
and
jo
rcl
xchg
out
ds
lea
je
mov
repnz
mov
and
das
add
xchg
pop
mov
mov
xor
sub
loop
sub
(bad)
cld
movs
inc
in
pop
loope
enter
mov
shr
movs
mov
(bad)
xor
shl
icebp
cmc
jle
fcomp
aaa
arpl
dec
and
not
rcr
hlt
mov
loopne
jb
jmp
xor
and
(bad)
xchg
stos
es
xlat
dec
imul
dec
cld
inc
fwait
outs
mov
stos
fld
xor
mov
outs
push
and
jge
outs
(bad)
jo
jmp
add
xor
mov
ss
mov
imul
jae
jle
inc
pushf
and
pop
ins
ret
mov
outs
pop
xor
xor
pop
push
add
std
loop
movs
(bad)
outs
jp
rcr
js
pop
pushf
stos
enter
adc
lea
(bad)
int
pop
jne
fdiv
pop
xor
mov
mov
lock
cmp
pop
test
mov
lods
scas
jb
and
or
add
mov
xor
and
retf
add
xor
prefetchwt1
or
lods
ja
push
pop
lods
fucom
adc
scas
push
adc
mov
lahf
pop
mov
cld
pop
dec
push
sub
aam
mov
mov
in
shr
enter
rsm
sbb
dec
sahf
cdq
add
arpl
or
icebp
push
es
mov
rol
mov
out
mov
xchg
jge
jmp
inc
out
ret
lock
scas
sahf
jnp
das
mov
mov
jge
jnp
mov
pop
lds
mov
fsubr
mov
out
in
mov
call
sub
dec
adc
mov
in
mov
stos
loop
cld
test
cld
add
jnp
add
push
sbb
inc
scas
and
icebp
out
cmp
add
leave
movs
(bad)
or
mov
cwde
push
stc
repnz
lea
mov
jmp
out
mov
jmp
lods
or
jp
and
sahf
fwait
int
sbb
mov
xor
sbb
jle
mov
inc
pop
inc
push
jge
aam
cs
dec
mov
stos
sahf
sbb
mov
xchg
push
dec
sub
sub
cli
scas
sbb
pop
xor
inc
mov
stos
cs
ret
inc
jnp
adc
inc
mov
sbb
jne
xchg
mov
mov
mov
sbb
clc
add
repz
cs
xor
cmp
xor
call
loop
cmp
mov
xchg
jle
mov
adc
leave
mov
jmp
jmp
outs
inc
outs
(bad)
out
xchg
mov
in
mov
ins
adc
fdivr
inc
pop
movs
mov
scas
stos
cmp
mov
nop
sub
cmp
pusha
cdq
pop
jge
mov
cmp
imul
adc
inc
inc
stos
jle
xlat
inc
and
sub
mov
test
pop
pop
xchg
enter
push
mov
sub
inc
movs
xchg
aam
movs
or
std
or
or
js
cmp
push
repnz
jnp
xlat
(bad)
loopne
cmp
popa
jbe
ret
stos
add
sbb
daa
cmp
jno
add
jp
(bad)
outs
adc
dec
jno
test
imul
adc
mov
daa
fucom
sbb
jne
mov
and
jbe
ins
inc
cli
enter
push
lahf
mov
inc
ins
out
neg
mov
test
mov
enter
xor
aam
pop
in
add
sbb
xlat
mov
iret
leave
mov
sbb
add
xor
pop
sti
jle
mov
push
xor
cli
lea
mov
in
gs
dec
sub
into
shl
mov
jmp
fcmovnb
test
mov
pop
cmp
sahf
pusha
ret
sub
pop
cdq
lea
cmp
inc
(bad)
je
das
and
mov
jb
pop
mov
mov
xchg
ret
loop
mov
push
mov
ja
(bad)
sub
js
xchg
sar
dec
test
mov
mov
mov
into
mov
xchg
mov
gs
in
into
(bad)
push
push
mov
jno
daa
adc
sub
lds
sar
xchg
add
into
or
push
(bad)
fisub
mov
daa
sub
or
xchg
and
inc
dec
aad
daa
pop
fld
ins
les
dec
jle
pop
call
push
xchg
cli
fld
xlat
(bad)
mov
mov
stos
push
neg
inc
push
fisub
adc
adc
mov
cmp
iret
cmp
movs
(bad)
in
addr16
cdq
(bad)
cmp
les
push
mul
jns
fadd
or
xchg
mov
(bad)
movs
clc
clc
mov
test
or
dec
out
cmp
mov
jnp
and
dec
out
or
retf
pop
rol
mov
or
fbstp
jle
mov
loop
hlt
test
xchg
mov
icebp
push
aas
int
push
lds
imul
out
dec
sbb
pop
jns
outs
mov
dec
jge
(bad)
dec
add
movs
xor
rcl
fsub
loop
ror
out
jb
mov
jae
int
(bad)
pop
or
push
rol
rol
mov
add
dec
(bad)
cmp
add
popa
lea
(bad)
and
fnstcw
sbb
nop
push
nop
arpl
test
dec
lods
jmp
lods
mov
(bad)
inc
mov
mov
iret
(bad)
or
out
add
push
retf
mov
adc
stos
test
gs
int
std
test
retf
ret
shr
sbb
mov
sub
adc
sbb
test
sub
icebp
ret
pop
arpl
(bad)
push
xchg
cdq
inc
push
sbb
out
call
xchg
mov
xchg
iret
or
and
mov
mov
lahf
jmp
jns
sbb
cmps
and
stc
into
movs
dec
leave
lds
inc
mov
ror
adc
push
push
mov
sub
lock
cmps
aaa
jae
sbb
adc
in
mov
je
in
lahf
retf
push
cmp
fild
sahf
dec
adc
leave
jns
xor
or
mov
aad
ds
sub
pop
nop
mov
add
(bad)
xchg
push
mov
pop
xchg
popa
pusha
jnp
or
jae
and
in
int3
jae
dec
push
push
lock
mov
loope
jnp
mov
rol
sub
pxor
es
imul
sbb
or
push
dec
xchg
add
leave
fcom
jle
or
lea
mov
push
outs
jne
or
test
ins
mov
jl
retf
mov
gs
mov
mov
fwait
push
xor
outs
jecxz
mov
push
pop
loopne
cmp
xor
movs
gs
mov
xor
sbb
cwde
mov
dec
lea
lods
cmps
add
adc
sub
lock
jl
mov
cmp
or
lods
pop
push
jmp
pop
fst
xchg
jno
xor
repnz
stos
rol
mov
iret
mov
in
fidivr
mov
sbb
xlat
daa
or
inc
int
daa
(bad)
add
or
int3
adc
imul
push
dec
mov
jae
sub
mov
rol
cmp
adc
call
and
jnp
enter
mov
enter
sub
div
fdivr
not
mov
xor
push
push
hlt
in
mov
aad
clc
jp
mov
vandps
and
pop
mov
je
and
retf
bound
pop
movs
jae
shl
inc
push
push
(bad)
cmc
mov
add
mov
mov
aas
(bad)
cvttps2pi
pop
outs
into
call
add
mov
push
dec
cdq
add
jae
or
shl
mov
mov
cmp
mov
popf
in
jg
loopne
sbb
out
sbb
mov
push
jg
fidiv
aaa
add
enter
and
scas
mov
fist
add
out
add
mov
mov
adc
xchg
mov
xor
outs
jbe
ins
mov
push
icebp
cli
shl
sub
out
leave
loop
outs
dec
xchg
popf
fidiv
xor
push
stos
loope
out
iret
mov
and
mov
pushf
je
and
mul
scas
inc
cmp
out
aad
js
pusha
push
retf
cs
cmp
sbb
cmp
cdq
or
pop
out
jge
sbb
pusha
sub
pop
jmp
sbb
js
arpl
out
test
and
push
out
jne
inc
ds
xchg
int
cwde
fnstcw
cmps
pop
dec
movs
sbb
push
jno
data16
mov
fistp
int
ins
popf
(bad)
dec
neg
dec
iret
adc
or
imul
lods
popf
mov
dec
out
iret
jle
sbb
out
outs
imul
ja
pop
aaa
mov
in
retf
popa
or
or
aad
cli
lods
pop
mov
cmps
push
adc
mov
mov
adc
das
mov
mov
jle
movs
add
xor
cdq
sbb
je
xchg
dec
out
or
pop
js
pop
fldcw
mov
test
adc
pop
imul
addr16
sub
mov
pop
jbe
cmp
std
sbb
fdivrp
sub
jbe
mov
fist
popa
aam
iret
or
scas
repz
sti
ffreep
std
or
push
inc
pop
mov
les
mov
inc
scas
dec
add
cmps
push
out
inc
jbe
mov
jle
(bad)
mov
or
sbb
dec
cli
fwait
data16
shr
push
aad
xchg
add
jp
jmp
cmp
lahf
xor
inc
xchg
xchg
xchg
(bad)
hlt
fsub
ret
jge
inc
out
and
idiv
cmp
jp
dec
pusha
aam
add
test
jmp
mov
pop
add
jbe
and
popa
dec
mov
jne
and
push
ss
dec
in
or
mov
rol
hlt
movs
imul
clc
xchg
clc
popf
adc
cmp
add
imul
arpl
mov
add
mov
nop
loope
push
fwait
xlat
xchg
jne
pop
adc
fld
dec
pop
pop
mov
mov
add
or
jne
xlat
mov
ret
in
sub
fnsave
sub
test
cdq
xchg
mov
mov
sahf
out
fsubr
add
mov
out
jp
xor
fwait
sbb
mov
lods
dec
push
and
lods
cmp
jne
sbb
sti
psraw
imul
(bad)
jae
outs
mov
push
jo
push
push
xchg
dec
popa
jmp
add
in
gs
inc
jp
(bad)
mul
popa
and
fidivr
pop
mov
and
pop
into
ins
ins
sub
sbb
pop
fidiv
xchg
neg
and
push
or
xor
jo
jmp
push
push
(bad)
(bad)
dec
jbe
pushf
cmp
in
jmp
dec
stos
dec
mov
sahf
(bad)
xchg
xor
(bad)
fs
cwde
sbb
adc
xor
das
adc
out
and
mov
xchg
(bad)
mov
cmp
enter
movhps
fst
sub
cs
sub
add
and
icebp
gs
sbb
xchg
aaa
inc
and
and
lock
clc
out
mov
xor
pop
je
sub
xchg
aad
cwde
test
test
pusha
hlt
in
fcmove
imul
and
sub
pushf
ss
sub
inc
lods
inc
adc
shl
(bad)
mov
neg
jo
adc
dec
inc
xor
xor
(bad)
jnp
add
je
mov
xor
add
jae
adc
mov
push
(bad)
in
in
nop
mov
fistp
popa
fsubrp
xchg
in
fnsave
jl
mov
jae
cdq
jl
retf
lock
jge
xchg
cmps
sub
sbb
out
nop
ficomp
inc
aas
(bad)
adc
sbb
sub
cmp
push
ss
inc
(bad)
fild
sub
ds
loope
xor
jp
aas
push
inc
push
fwait
les
mov
cmp
sub
sbb
pop
stos
xor
mov
arpl
push
fwait
int3
ret
pushf
inc
adc
stc
xchg
ror
xlat
dec
inc
mov
sbb
fsub
xchg
push
sbb
mov
iret
fucom
lahf
jno
daa
inc
lahf
pop
add
movs
lock
(bad)
nop
stos
das
cmps
or
cmp
repnz
inc
mov
sub
xchg
mov
fucomp
enter
jmp
push
ja
loopne
imul
push
mov
js
nop
push
ja
in
jge
cmps
sbb
mov
xor
pop
mov
sub
in
scas
xchg
mov
aaa
jmp
push
push
add
push
push
lahf
test
jnp
mov
mov
stc
imul
adc
or
mov
jbe
(bad)
adc
mov
xor
call
mov
in
loop
out
mov
xor
hlt
movs
loop
fnstcw
repnz
xchg
sbb
jecxz
mov
sub
ins
pop
lods
jb
push
cli
mov
int3
adc
inc
inc
xchg
add
and
adc
add
pop
xor
jmp
lods
and
(bad)
sbb
movs
dec
(bad)
les
push
jnp
dec
xchg
push
retf
mov
movs
jp
(bad)
push
xor
adc
jmp
enter
add
cmps
push
pop
xor
sbb
sub
fld
sbb
dec
xchg
and
(bad)
imul
test
pop
dec
test
push
and
add
fsubr
xor
scas
movs
cmp
ins
sub
sbb
ror
sub
scas
mov
scas
inc
ins
inc
pop
xor
bound
daa
mov
aad
fimul
adc
test
pusha
outs
in
push
(bad)
sbb
in
movs
outs
xchg
inc
or
je
jg
jmp
cwde
movs
push
lds
mov
mov
adc
loop
mov
jb
cmps
mov
(bad)
stc
aaa
into
adc
daa
repz
and
in
int
adc
loope
dec
mov
sub
xor
push
js
xor
xor
push
mov
adc
mov
inc
add
push
mov
mov
(bad)
sub
pop
inc
xchg
lods
imul
popa
in
sub
shr
addr16
push
call
in
nop
xchg
jmp
aaa
mov
adc
mov
add
sahf
push
xchg
sub
mov
and
outs
mov
test
fs
ficomp
push
std
or
and
sbb
ja
or
test
add
test
(bad)
push
addr16
pop
sbb
bound
jge
inc
in
retf
dec
pop
lds
bound
adc
adc
push
lea
cs
shr
cmp
push
cmp
arpl
js
popf
sar
pop
add
lods
sub
sub
mov
sar
adc
mov
loope
pop
rcl
stc
push
loop
outs
(bad)
push
and
xor
js
or
imul
leave
push
xchg
xor
cmps
push
arpl
movs
ins
adc
sbb
cmp
stc
lods
pop
mov
hlt
pop
icebp
and
shl
das
pop
fcmovbe
inc
test
mov
pop
jae
sub
inc
cmps
lds
xchg
in
call
stc
xchg
out
or
cmp
in
je
out
adc
sahf
sbb
pop
popa
(bad)
push
jae
mov
and
mov
les
loop
push
int
mov
mov
adc
dec
xchg
xchg
mov
movs
mov
cmps
aas
scas
cmps
ins
cld
sub
aad
shl
sub
inc
dec
and
lea
xor
adc
loop
or
mov
les
sub
pop
loope
cs
int
hlt
xor
cmps
repz
jecxz
add
jne
or
xchg
call
sbb
mov
js
sbb
or
in
and
adc
dec
bound
cdq
pop
cli
xchg
in
call
xchg
cdq
sbb
aaa
arpl
fst
inc
add
outs
pusha
(bad)
imul
mov
xor
inc
xchg
cmp
ret
test
mov
cmp
mov
out
xor
and
sbb
fwait
dec
shl
out
add
mov
test
outs
lock
or
(bad)
outs
call
inc
loope
leave
xchg
aaa
pop
inc
mov
xor
cmps
(bad)
mov
test
pusha
js
scas
leave
sub
cs
inc
mov
inc
fstp
cmp
and
and
mov
sar
ins
jl
push
nop
sar
ja
push
mov
ror
mov
pusha
int
xor
pop
mov
add
scas
ins
in
test
scas
mov
js
inc
pushf
mov
pop
int3
repz
stos
ins
test
and
dec
iret
loope
leave
and
push
jecxz
test
ror
loop
cmp
outs
popa
mov
pop
stc
clc
push
add
xchg
imul
jge
or
xor
pop
fnstenv
jno
sub
scas
add
lods
lods
inc
and
dec
adc
pushf
cs
inc
(bad)
mov
xor
jp
aam
push
das
ret
aaa
or
(bad)
jge
sub
retf
imul
fsubr
mov
loop
pop
dec
pop
add
hlt
test
sub
icebp
out
add
ja
(bad)
pop
shl
push
shr
push
pusha
in
or
inc
es
test
mov
push
push
xchg
jg
rcr
jae
lds
lods
mov
imul
adc
cli
das
fst
dec
ret
push
mov
or
push
sbb
lock
pop
ja
xor
lods
adc
scas
adc
lahf
test
jne
mov
mov
jne
cmc
cwde
lea
cs
fist
xchg
mov
push
shr
jg
inc
ficomp
mov
push
test
sbb
jle
push
or
cmp
push
scas
lods
dec
shr
lahf
in
dec
hlt
cmps
cld
mov
add
scas
(bad)
push
mov
inc
js
aas
mov
pop
push
jecxz
ss
xlat
ffree
sub
out
jb
cwde
sbb
mov
lods
or
aas
std
xchg
pop
jnp
sub
das
sti
fs
cmp
mov
mov
movs
jno
mov
inc
scas
sbb
fstp
out
test
sbb
jmp
jecxz
imul
sahf
outs
pop
or
fdivr
and
repnz
ja
test
or
adc
inc
adc
loop
aam
mov
retf
mov
lds
jbe
mov
fmul
fwait
or
test
outs
ss
push
test
(bad)
out
and
fmul
into
loopne
and
enter
adc
repz
pop
in
cmps
jb
mov
mov
xchg
adc
pop
mov
sbb
repz
push
add
cmc
fucom
adc
xor
idiv
out
ja
mov
and
ud2
dec
gs
push
test
test
add
jbe
xchg
xlat
aad
sbb
sub
or
dec
ds
mov
fisub
mov
pop
out
push
iret
xchg
iret
les
adc
jl
adc
in
pop
fucomip
sahf
int
pop
fwait
lock
dec
adc
gs
out
jne
je
push
adc
cwde
and
call
sbb
adc
pop
call
mov
fsubp
dec
push
cmp
cmp
jecxz
das
and
push
jae
mov
inc
ret
push
lds
pop
cmps
mov
stos
das
add
fld
push
mov
(bad)
mov
push
(bad)
add
or
test
mov
mov
jmp
push
stos
and
lea
pusha
test
xchg
mov
stos
out
shl
mov
and
xchg
je
mov
and
and
pop
(bad)
pop
mov
ja
test
push
test
fisttp
sub
fcomp
sub
jle
pop
pmaxsw
mov
mov
push
lods
test
sahf
rol
pushf
std
aad
iret
pop
mov
iret
inc
aam
fisttp
cwde
in
stos
call
pop
cmp
ret
jne
mov
cmps
mov
jmp
ror
sahf
adc
pop
aas
pop
jae
mov
aad
pop
add
jge
ror
not
lods
rcr
mov
inc
cwde
call
and
out
adc
add
push
xchg
xchg
jbe
xor
cmps
int
jmp
pop
mov
sbb
cmp
pop
and
xor
call
ror
inc
cs
sbb
jno
call
std
sub
sub
mov
add
neg
jmp
pop
mov
int
sbb
sbb
jnp
sbb
cmc
jb
pop
daa
adc
add
add
sti
les
rol
jmp
mov
call
push
fdivp
lods
xchg
and
retf
sti
aaa
rol
sar
push
fdivr
lods
(bad)
(bad)
dec
fcmovu
and
mov
xchg
shl
test
mov
lahf
and
cmps
ret
sbb
sbb
popf
das
sbb
call
sahf
adc
sti
popf
xchg
rcl
cwde
mov
inc
lods
cmps
mov
mov
jne
sub
and
pop
cdq
mov
out
mov
ret
add
in
add
enter
neg
jne
mov
inc
je
test
imul
call
std
xor
out
cdq
add
fs
jnp
cli
inc
pop
adc
iret
xor
(bad)
fcmovbe
inc
movs
pop
jle
daa
ds
dec
inc
cdq
cmp
test
fsubr
mov
and
call
inc
jg
xchg
cli
gs
mul
jmp
sub
sbb
mov
std
jle
cmps
out
(bad)
mov
iret
fld
call
or
ficom
push
pop
lahf
stos
ret
ficom
and
retf
clc
sub
jnp
in
adc
xchg
mov
hlt
mov
sbb
ins
xchg
xchg
jp
sub
push
adc
in
mov
xchg
mov
js
sub
bound
sbb
into
xchg
sbb
cld
and
sbb
retf
jns
mov
(bad)
sbb
mov
fisub
(bad)
fild
pushf
neg
inc
mov
call
mov
jmp
fs
repz
xchg
into
xlat
add
mov
pop
cmp
outs
push
cmp
popf
mov
fndisi(8087
imul
inc
push
repnz
push
mov
test
hlt
stos
sub
pop
stos
clc
xchg
retf
fucomp
movs
out
mov
lds
sub
sub
and
jns
test
into
sub
add
mov
jp
inc
aad
mov
in
mov
dec
jl
daa
imul
imul
inc
mov
push
les
adc
ins
frstor
repnz
mov
add
and
jne
popa
pop
or
inc
mov
addr16
fs
loop
xchg
xlat
inc
ret
jmp
sub
xchg
iret
and
addr16
push
out
dec
sub
xchg
in
aaa
retf
push
mov
repz
(bad)
dec
mov
inc
cli
push
aam
aam
push
mov
scas
enter
test
in
cwde
dec
sti
mov
adc
dec
ins
sub
adc
lahf
jle
push
dec
sbb
aam
and
gs
icebp
dec
cmp
data16
jl
mov
je
sbb
popf
scas
inc
xor
push
mov
jle
movs
push
aas
out
inc
pop
sbb
js
or
test
es
scas
js
or
dec
nop
sub
inc
adc
call
mov
push
mov
test
jg
xor
xor
movs
int3
inc
inc
mov
test
push
add
pop
std
lods
or
mov
retf
outs
sub
fwait
jl
lods
xor
ins
gs
pop
sub
mov
xlat
dec
sub
inc
iret
or
push
fisub
mov
aam
bnd
out
fbld
push
jp
int
dec
js
jns
mov
adc
call
add
cli
(bad)
pop
pop
jmp
ja
mov
inc
inc
xchg
and
repnz
stc
inc
push
test
jge
mov
inc
stc
imul
or
pop
js
add
aad
mov
rol
mov
jmp
addr16
fs
dec
data16
sub
lods
or
add
shr
clc
sbb
jge
sahf
ror
add
mov
imul
xor
je
ret
push
or
pop
sub
dec
jmp
xchg
xchg
stc
adc
mov
cmp
ror
loop
jle
xchg
mov
jo
in
adc
push
sub
and
dec
and
std
jmp
and
imul
inc
iret
stc
xor
xchg
shl
aaa
push
std
pop
or
in
nop
retf
jl
sbb
ss
call
repz
stos
push
add
jmp
call
out
retf
inc
(bad)
aaa
cmp
cmps
out
mov
test
int3
aas
popa
or
daa
or
sub
mov
inc
in
jge
hlt
pushf
hlt
xchg
(bad)
hlt
fadd
xchg
and
lock
sbb
cmps
push
pusha
push
scas
int3
pusha
cmp
add
enter
push
scas
or
test
and
jb
or
or
dec
js
pop
push
push
aaa
pushf
jo
pop
inc
sub
call
xchg
and
popf
adc
pop
int3
xor
je
jnp
lahf
inc
fwait
aaa
mov
dec
pop
cmp
xchg
mov
xchg
jns
shl
mov
test
addr16
jecxz
mov
and
inc
(bad)
cmp
jb
out
inc
ret
cmp
loopne
mov
loope
xchg
sbb
dec
int3
daa
rol
call
aad
sar
and
xchg
cld
jge
or
fucomp
and
add
gs
inc
ja
mov
sbb
loop
mov
xor
cmps
mov
in
sti
or
jbe
ret
mov
shr
jmp
sti
and
jle
mov
in
jmp
sbb
inc
mov
lock
rcr
aad
xchg
in
fmul
mov
mov
push
mov
mov
pop
out
mov
adc
pop
push
xchg
mov
fild
xchg
xchg
sbb
cld
gs
and
xchg
addr16
call
cs
jg
lahf
pop
push
sub
and
cli
movs
popf
push
xchg
push
fadd
mov
cmp
xchg
inc
push
xor
sbb
pop
cmp
dec
push
in
dec
scas
mov
inc
xchg
(bad)
cdq
retf
ins
jmp
push
jmp
jnp
jnp
xor
inc
push
sub
call
call
(bad)
scas
jb
sub
jbe
xchg
push
xor
mov
mov
lea
es
in
push
xor
retf
stos
mov
clc
(bad)
aam
push
(bad)
cmp
mov
mov
ror
aam
call
sub
call
xchg
push
adc
inc
retf
loop
sbb
xchg
xchg
jmp
fstp
inc
push
sbb
nop
sbb
ins
sub
cmp
retf
pop
popa
mov
shl
sub
sbb
xchg
ret
xchg
test
stmxcsr
add
xor
add
mov
mov
(bad)
mov
test
and
movs
fstp
push
(bad)
pop
rcr
dec
ret
scas
div
aaa
jmp
pop
fidivr
cld
pop
retf
mov
inc
rol
sbb
stos
add
jle
jg
mov
mov
arpl
fimul
clc
cmp
push
xchg
push
rep
(bad)
dec
lock
sub
inc
sbb
mov
mov
sbb
daa
fstp
aas
pop
dec
xchg
ins
ja
mov
or
into
loope
push
jbe
fld
sbb
es
jne
mov
jle
or
rcr
arpl
mov
jl
pop
arpl
les
out
jnp
and
cmp
arpl
push
clc
in
push
enter
xchg
or
je
jne
ds
movs
dec
jmp
push
ins
out
mov
and
and
dec
pop
cdq
jmp
test
ror
in
push
jne
mov
lahf
lods
jo
cmps
repnz
or
xchg
movs
pusha
aam
(bad)
mov
stc
push
stos
out
inc
cs
pop
out
fld
pop
cmp
inc
loope
sti
jge
push
lods
pop
pop
add
jo
sbb
mov
mov
sub
repz
jbe
loope
sbb
pushf
jb
(bad)
xchg
xchg
xchg
or
dec
adc
ret
xchg
pop
ja
rcl
push
sub
xor
fisttp
scas
or
je
inc
pop
add
cmp
mov
pop
icebp
jb
cmps
fidiv
in
jnp
adc
cmps
xor
ds
sub
cmp
adc
adc
sub
sbb
sub
out
xchg
sar
fadd
outs
imul
mov
or
stos
adc
por
adc
loopne
test
push
gs
pop
in
out
movs
sub
fild
clc
sbb
dec
pusha
sbb
sbb
jnp
jnp
fwait
add
sub
ds
jnp
jo
push
xchg
test
jb
add
push
sbb
xchg
sbb
mov
retf
xor
adc
adc
aaa
inc
mov
jbe
push
test
push
cdq
cmp
les
test
xor
fst
lea
test
add
push
rcl
fdiv
ins
retf
fcomp
ins
out
mov
inc
popfw
das
xor
push
test
mul
xlat
add
pop
movs
jnp
inc
call
jge
inc
push
mov
ins
or
pop
leave
cmc
adc
repnz
adc
cmp
mov
push
mov
xchg
bound
fnstsw
or
adc
fisub
or
lods
stc
test
js
push
loopne
pusha
jae
cmc
and
sbb
mov
cmp
pop
stc
inc
cdq
iret
lods
adc
rcl
xor
cmps
lods
xrelease
jmp
aas
mov
mov
hlt
fdiv
add
mov
jne
sub
dec
daa
mov
cmp
aaa
sub
and
bound
or
sub
dec
xchg
jmp
not
outs
dec
stc
jne
cmp
or
push
scas
inc
add
icebp
outs
jp
jo
hlt
shl
jne
sti
mov
xchg
lock
and
jle
jno
xchg
pop
scas
jne
add
jne
outs
mov
jmp
shr
mov
mov
dec
or
mov
dec
pop
fsubp
lods
jmp
push
or
dec
shr
adc
jl
ret
xchg
not
ror
jbe
xchg
arpl
pop
adc
mov
mov
sub
fmulp
int3
add
ror
jne
xor
push
data16
dec
ins
cmp
mov
out
movs
jne
fimul
and
or
lock
in
nop
or
hlt
xchg
imul
mov
jns
mov
lds
lock
cmp
jmp
js
cli
mov
vmovups
xchg
mov
xchg
or
jmp
jne
xchg
push
repnz
pop
aam
or
int3
mov
jle
sub
jmp
xchg
cmp
es
sahf
cmp
mov
add
dec
aad
loopne
cmp
pop
sub
pop
mov
xor
jmp
(bad)
mov
add
inc
cmp
fs
repnz
mov
and
mov
or
sub
or
out
addr16
mov
cmp
ja
les
add
mov
(bad)
ss
add
xor
jno
mov
xchg
in
jecxz
ins
cmc
iret
repz
lods
arpl
shl
sub
fwait
(bad)
pop
dec
xchg
sub
ror
cwde
dec
stos
jge
or
loop
xlat
arpl
lods
or
push
test
inc
data16
mov
xchg
xor
dec
fdivr
mov
jmp
push
mov
jg
or
stos
cwde
dec
push
jae
shl
out
fild
adc
inc
mov
jle
stos
test
cmp
popf
mov
cmp
push
aam
int3
mov
cmp
jae
push
pop
push
jge
and
outs
mov
cmps
adc
inc
clc
jo
leave
xchg
pop
jmp
dec
in
gs
jns
mov
push
ins
pop
lahf
mov
sub
test
sub
retf
xchg
stc
je
push
mov
pop
cs
mov
dec
cmc
push
and
sbb
cmc
mov
mov
(bad)
jl
ret
jns
jno
ror
or
and
or
push
cmp
imul
push
lea
xchg
or
lds
lds
imul
icebp
imul
cmp
push
mov
ss
fstp
jp
dec
adc
retf
js
sbb
ss
sub
icebp
pop
out
loop
jne
xchg
pop
test
push
cdq
pop
loopne
loop
out
test
enter
mov
sub
fimul
fld
test
fmul
fld
dec
popa
sti
imul
mov
stc
es
stos
jecxz
cmc
xor
sub
lds
out
pop
jmp
jbe
mov
retf
enter
ins
icebp
jecxz
inc
out
sbb
test
dec
je
dec
adc
ucomiss
jg
and
test
cld
repz
xchg
out
cmps
inc
push
fbld
xchg
in
pushf
and
in
(bad)
mov
lea
push
dec
jmp
call
jo
push
sub
in
xchg
hlt
je
ret
ds
pop
dec
pop
fimul
jmp
adc
adc
adc
dec
jb
mov
mov
xlat
(bad)
and
add
or
mov
repnz
xchg
mov
scas
push
adc
pushf
dec
push
add
pushf
pop
xlat
ret
jo
xor
jbe
xor
or
sahf
mov
cmps
adc
js
popa
mov
lock
cs
shl
add
or
out
fbstp
adc
mov
mov
in
call
jl
clc
mov
jg
inc
movs
add
mov
loop
or
sub
dec
adc
xchg
fistp
dec
(bad)
fild
jmp
dec
push
imul
cmp
push
pop
xor
dec
add
jg
daa
adc
into
repnz
mov
test
jbe
bound
scas
pop
lea
mov
retf
sbb
xlat
cdq
mov
icebp
es
mov
push
test
push
dec
je
cwde
scas
leave
xchg
jno
mov
in
test
or
fld
stos
(bad)
jg
or
jnp
mov
inc
iret
test
jecxz
adc
pop
gs
adc
aam
jnp
fldcw
jb
imul
adc
inc
enter
mov
mov
jns
dec
push
outs
vpcmov
jae
loope
loope
inc
retf
fild
cmp
sub
push
test
push
cli
mov
fbstp
push
sbb
jl
mov
xchg
movs
lea
add
out
pushw
shl
jg
popf
sahf
(bad)
adc
loop
lds
(bad)
xor
int
out
cld
sbb
sbb
mov
loope
inc
test
add
retf
retf
shl
movs
sbb
xlat
mov
adc
call
rcl
mov
or
push
retw
pop
scas
push
jo
dec
fldenv
out
mov
mov
fdiv
jae
mov
jns
adc
test
cmp
push
push
into
out
fiadd
cmps
cmp
iret
sub
pop
push
sub
repnz
repz
hlt
movs
mov
scas
rol
pop
fimul
(bad)
mov
sbb
(bad)
movs
pop
movs
fsubr
repz
xchg
ins
aaa
(bad)
(bad)
mov
ret
or
and
sbb
and
and
jno
mov
xchg
and
cmp
mov
cmp
ret
xchg
mov
arpl
jbe
add
xchg
sar
idiv
xchg
loop
int3
cmc
test
leave
mov
ret
in
jno
sti
xchg
mov
jb
xchg
jb
in
bound
outs
ret
jns
lods
jbe
in
ss
mov
push
scas
mov
push
in
jbe
dec
lds
(bad)
pop
shl
je
in
fisub
pushf
mov
arpl
clc
xchg
pop
push
call
pop
mov
mov
mov
fstp
loopne
jo
cmc
push
lock
jno
jne
mov
ss
mov
or
xor
jne
add
imul
pop
les
movs
jg
add
repz
pusha
fcomip
mov
cmp
test
cmp
adc
add
lods
inc
push
and
in
and
push
mov
lods
les
mov
lds
fst
ficomp
mov
or
pop
cmps
add
dec
pop
push
into
hlt
or
or
fisttp
repnz
nop
(bad)
div
jmp
(bad)
adc
cmp
push
mov
dec
imul
in
push
mov
mov
push
gs
and
or
xchg
push
je
mov
xor
or
test
sbb
cmps
dec
sub
xchg
(bad)
sub
lods
retf
fiadd
test
loopne
ds
mov
xor
sub
push
nop
adc
jg
adc
add
cmp
mov
push
mov
dec
test
jnp
mov
es
hlt
push
fcomp
jecxz
cdq
call
stos
push
fisubr
call
movs
pop
pushf
dec
outs
into
push
cmps
cwde
fistp
xlat
xor
inc
scas
ret
xchg
stos
jp
in
pcmpeqb
dec
add
add
popf
jp
int
xacquire
xchg
push
push
aas
cmp
xor
cs
add
inc
rol
in
and
scas
bnd
or
add
scas
sbb
pusha
les
movs
xor
aas
sbb
push
jo
pcmpgtb
ret
stos
popa
in
fcom
sbb
jg
and
push
mov
call
cmp
ss
mov
cmp
pop
sub
adc
in
cmp
mov
ror
sbb
add
shr
lods
clc
fnstcw
xchg
mov
jno
fs
lea
xor
out
cdq
jmp
into
push
lods
cmp
movs
js
pushf
sahf
xchg
loop
scas
es
sub
js
imul
xor
loope
or
jmp
out
mov
xchg
xor
pop
and
push
mov
popa
jmp
jae
adc
lahf
sub
and
push
imul
lods
ja
add
adc
add
xchg
inc
or
bound
cmp
scas
inc
pop
mov
inc
out
lahf
cmp
or
mov
mov
push
imul
(bad)
retf
or
push
out
addr16
out
xchg
bswap
push
mov
les
xor
loopne
jbe
push
lea
mov
mov
mov
mov
push
jne
mov
add
adc
or
jmp
adc
sbb
jecxz
xor
pop
dec
mov
enter
inc
in
out
and
push
loop
pop
push
cmc
test
inc
mov
cmp
fisubr
ins
loopne
sbb
adc
ds
dec
or
lods
retf
bound
mov
(bad)
mov
push
mov
out
arpl
nop
aam
inc
popa
or
jmp
lods
dec
dec
jae
inc
retf
inc
lods
movs
sbb
popa
les
dec
retf
daa
sub
xchg
jmp
into
pop
lods
fwait
rcl
(bad)
xor
jg
inc
jb
xchg
inc
add
sbb
add
test
loope
lock
xchg
aam
cs
mov
(bad)
adc
sbb
inc
fucomip
pop
add
mov
adc
xlat
rcr
jg
adc
lods
aaa
mov
push
jle
div
mov
outs
cmp
sbb
mov
jmp
xchg
leave
sub
sbb
out
push
jb
mov
jmp
stos
mov
sub
arpl
rcr
add
mov
and
push
inc
add
mov
cwde
dec
mov
pop
shl
adc
inc
push
or
xchg
sbb
inc
xor
lahf
cmp
adc
push
mov
sti
jg
dec
mov
jne
dec
aaa
push
call
push
ret
pop
gs
lds
jle
add
sub
or
add
cli
hlt
mov
mov
in
xchg
cmp
mov
loopne
xchg
(bad)
imul
xor
scas
out
dec
sahf
test
cwde
out
inc
mov
daa
adc
inc
sub
sub
jmp
in
pop
test
jae
test
lods
cmp
or
xor
es
cmps
icebp
push
mov
dec
int3
daa
popa
mov
fwait
add
mov
jge
inc
xchg
mov
mov
jmp
cmp
stc
into
outs
out
repnz
iret
sbb
mov
inc
inc
jb
ja
in
jns
xor
push
jmp
lds
mov
jmp
daa
dec
ss
int3
inc
test
xlat
sub
aad
and
cld
cs
test
fwait
inc
mov
inc
and
jo
repz
ja
fimul
imul
iret
hlt
outs
mov
stc
out
in
xlat
sbb
mov
xchg
mov
adc
inc
push
repnz
ins
sbb
pop
out
jl
or
(bad)
and
jns
pop
inc
out
lea
das
mov
or
rol
pop
js
cli
lods
rdpmc
je
inc
mov
inc
iret
int
xor
test
outs
jns
push
les
sbb
xchg
rcr
les
jne
push
test
out
cmp
ins
add
mov
adc
rol
cmc
fiadd
push
cli
inc
loopne
push
pop
shr
popf
and
jp
popf
test
pop
(bad)
icebp
cmc
inc
test
sub
jns
or
loopne
sub
idiv
and
les
mov
adc
loope
aam
inc
out
add
ret
es
shr
cvtpi2ps
scas
mov
and
cdq
fst
cmp
push
push
nop
mov
pusha
lods
jb
pusha
sahf
jecxz
aaa
fwait
test
fwait
les
movs
xor
sbb
add
outs
inc
js
push
mov
or
outs
add
and
jl
(bad)
stc
je
add
add
test
aad
mov
cmp
pop
mov
mov
out
xchg
fcom
and
jecxz
gs
inc
jb
mov
dec
mov
lods
imul
fild
(bad)
sahf
xor
cld
sbb
mov
or
outs
add
sti
rol
add
int
pop
dec
ja
mov
fcomp
sbb
adc
scas
imul
cli
sbb
loopne
jmp
imul
inc
push
jmp
sbb
dec
or
cmc
sub
loope
sub
ins
xor
dec
mov
pop
out
adc
aas
mov
inc
add
adc
fld
in
popa
test
mov
movlps
dec
scas
shr
mov
aad
inc
dec
cli
int
call
data16
pusha
xchg
imul
adc
xchg
cmp
fsubr
push
mov
xor
into
mov
aaa
or
shl
adc
mov
pop
into
adc
cmp
ret
or
retf
fwait
std
xlat
test
rcr
ret
aas
out
int3
pop
repz
sub
ins
xor
test
sub
inc
xchg
add
jmp
jb
mov
arpl
rol
lods
jg
adc
jmp
mov
shl
sub
nop
xchg
mov
add
pop
push
jg
push
iret
mov
lods
cmc
sub
mov
dec
sar
xchg
pop
popf
cli
gs
stos
add
and
lods
dec
loopne
ret
and
or
jnp
or
push
pop
hlt
pop
push
and
out
push
xor
sub
fsqrt
cmp
mov
xor
test
mov
gs
fcom
ret
je
ins
sbb
pop
shl
movs
add
movs
(bad)
sar
movs
fimul
sub
jmp
or
dec
sub
mov
repnz
mov
std
mov
scas
test
or
or
sbb
adc
add
mov
gs
xor
sbb
and
into
cmp
adc
jl
pushf
pop
hlt
retf
and
arpl
clc
adc
mov
test
ror
push
mov
nop
sar
sbb
pop
add
xor
sbb
dec
icebp
in
mov
outs
call
fwait
neg
js
(bad)
(bad)
repz
mov
mov
adc
jne
dec
mov
inc
xor
hlt
inc
sub
(bad)
data16
mov
dec
and
nop
ficom
sbb
sbb
test
stos
sbb
sar
cmp
lahf
push
push
cmc
sar
push
push
in
pushf
or
cld
push
(bad)
lock
ret
mov
jne
or
mov
adc
dec
jns
add
lods
dec
sub
adc
mov
sbb
mov
mov
adc
or
dec
pop
mov
fistp
and
fiadd
and
xchg
xchg
stos
jnp
jp
(bad)
xlat
int3
add
add
cli
(bad)
sbb
add
rol
fcomp
movs
push
fdiv
push
jmp
test
scas
bnd
cwde
mov
cmp
jb
jno
call
add
repnz
sbb
stos
xchg
int3
dec
push
and
mov
xchg
xchg
out
xor
or
rcl
and
cwde
inc
and
adc
std
sub
js
mov
cmc
sub
or
xor
mov
cmp
inc
retf
(bad)
and
mov
fs
leave
xchg
ss
mov
dec
cmovnp
iret
repnz
fldenv
addr16
or
jb
mov
jle
inc
jl
repz
inc
pop
push
sub
jns
xlat
pop
in
inc
sar
sub
ret
push
jns
inc
xor
out
das
scas
rol
add
and
int
imul
enter
cdq
call
ins
sub
jg
dec
scas
out
and
adc
or
gs
or
in
aaa
lods
mov
jmp
arpl
dec
mov
cli
jb
and
test
or
mov
xchg
jl
loop
retf
(bad)
sub
xlat
sbb
jg
lods
xchg
sbb
rol
lahf
les
push
add
push
add
xstore-rng
cmps
add
call
and
ins
sbb
sbb
enter
stc
enter
xchg
in
mov
and
push
pop
jb
cmp
jo
js
mov
and
add
inc
aas
add
data16
and
xchg
cmp
aaa
sti
mul
test
push
mov
push
(bad)
in
(bad)
std
cs
jmp
out
aam
dec
dec
cdq
out
je
and
add
cmp
pop
int
popa
mov
mov
mov
dec
inc
mov
mov
pop
sub
jle
dec
jnp
sahf
sub
xor
std
sub
aas
mov
xlat
out
std
adc
jnp
iret
cmp
pop
pop
push
adc
mov
cmps
push
outs
or
add
lea
fsubr
popa
sbb
lock
(bad)
ins
mov
cmp
data16
aam
sti
or
xchg
and
bound
int3
in
out
dec
into
fisttp
hlt
mov
hlt
ror
out
and
sahf
lods
test
mov
jo
pop
pop
(bad)
pusha
sub
es
scas
jae
add
bound
cmp
sbb
mov
and
or
jb
cmp
mov
cmp
push
(bad)
mov
ins
push
sbb
sbb
push
and
cmp
das
dec
jecxz
or
xchg
push
or
jne
adc
jmp
cmps
test
jns
cmps
push
and
jmp
inc
outs
mov
cwde
test
enter
pop
scas
jo
fwait
mov
xor
mov
movs
leave
dec
hlt
ja
out
adc
cs
movs
iret
xor
pop
mov
xchg
pop
fidiv
add
out
dec
mov
xor
shl
arpl
imul
jnp
push
out
mov
adc
mov
outs
pop
push
inc
shl
into
adc
loop
xchg
repnz
inc
or
pop
push
xor
test
or
sbb
mov
sub
add
xor
aas
clc
lahf
stc
xchg
add
jbe
jg
cdq
je
test
push
add
and
xor
pushf
mov
clc
sbb
fs
dec
xchg
and
pop
(bad)
aad
or
stos
outs
ret
les
popa
push
call
add
push
add
xchg
into
sbb
mov
or
add
out
sub
inc
cs
cmp
cld
dec
dec
add
mov
retf
jno
push
arpl
inc
dec
or
aam
icebp
pop
cmp
and
inc
sub
sbb
pushf
dec
sahf
xor
jae
movs
mov
hlt
popf
sub
leave
enter
lahf
ins
outs
pop
mov
sbb
push
cwd
or
add
xor
pusha
fisub
sti
pop
outs
or
in
xor
mov
fldl2e
jmp
and
outs
mov
push
into
jnp
xor
sbb
sbb
push
jecxz
inc
lahf
je
jae
and
xchg
sbb
into
retf
push
iret
ret
pop
fnsave
aas
ss
xor
in
in
and
xchg
out
mov
test
xchg
cmp
mov
mov
ins
rol
bound
jle
(bad)
imul
jecxz
jg
fucom
add
(bad)
sub
hlt
pusha
dec
loope
jmp
dec
popa
or
retf
pop
xor
rol
jecxz
test
fnsave
sub
in
outs
(bad)
sbb
pop
xchg
icebp
dec
sub
push
test
cdq
cmc
clc
scas
xor
pusha
in
aaa
sbb
(bad)
retf
or
push
adc
(bad)
loop
shr
daa
xchg
mov
pop
push
aaa
pop
mov
ja
dec
mov
movs
and
sub
stc
call
cmc
sbb
fld
into
inc
out
cmp
add
aaa
hlt
adc
sub
loop
add
jo
stc
pop
inc
leave
push
int
test
cli
xor
cs
int
out
shl
sub
and
add
ror
ror
call
sub
cld
daa
test
lods
les
cs
ins
cmps
enter
jle
jge
fadd
or
adc
jnp
fiadd
sbb
dec
test
popf
jnp
pop
and
lock
inc
mov
dec
mov
lds
inc
sbb
in
mov
mov
inc
add
xor
iret
pop
js
fbstp
add
cmps
push
pop
adc
and
and
mov
cld
mov
dec
daa
xlat
xor
das
sub
out
sbb
shr
jecxz
jb
xor
mov
xchg
pop
out
out
jl
mov
stos
lea
mov
out
pop
sub
add
pop
adc
cmp
leave
icebp
gs
xchg
or
pop
mov
test
test
iret
adc
xchg
or
fidiv
fadd
retf
add
sbb
mov
push
mov
xlat
pusha
dec
sbb
mov
call
push
jae
jbe
cdq
in
pop
retf
rol
pop
cs
mov
and
test
jecxz
je
popf
dec
sub
into
fisttp
and
lds
dec
bound
rcr
pop
cmp
movs
pop
rol
out
fsubr
in
mov
fcmovbe
lods
mov
arpl
loop
fmul
mov
das
mov
push
add
mov
sbb
and
jno
enter
ret
pop
js
add
faddp
jg
cmps
ret
call
iret
or
scas
cmp
jecxz
inc
mov
xchg
and
fstp
inc
imul
iret
(bad)
lahf
js
pop
(bad)
pop
mov
mov
pop
test
push
vfrczss
(bad)
(bad)
xchg
fisubr
jb
pop
pushf
inc
lds
stc
mov
cmp
mov
mov
imul
jp
ss
xlat
outs
rol
cld
shr
lods
fst
inc
cmp
mov
mov
jbe
sub
aaa
fisttp
mov
mov
pop
repnz
imul
mov
cwde
sub
cwde
idiv
push
aad
add
jecxz
ret
cli
(bad)
test
test
adc
ins
jl
xor
sub
loope
test
in
mov
add
xor
adc
cmc
adc
lods
ds
sub
inc
xchg
jmp
fsub
lds
sti
pop
or
scas
nop
stos
push
pop
mov
(bad)
xchg
stc
leave
or
bound
fwait
sbb
or
xor
cwde
imul
and
add
mov
lahf
enter
mov
push
push
adc
dec
xor
mov
jmp
jne
fcom
imul
bound
push
mov
push
test
movs
call
loopne
mov
mov
movs
arpl
or
or
inc
lods
xlat
lods
pop
push
lea
mov
adc
repz
cmp
and
addr16
sar
adc
pop
or
adc
mov
(bad)
movs
mov
cmp
loopne
inc
ja
sub
xchg
stos
pop
cmp
pusha
popa
xchg
dec
out
cmp
fldl2e
fadd
cmc
push
int
inc
mov
je
push
mov
(bad)
cmp
xor
jb
popa
xchg
or
retf
push
imul
push
aas
mov
inc
ja
fst
mov
imul
ret
jle
jnp
lods
add
sbb
sub
dec
sbb
dec
je
cs
sbb
mov
fild
cmps
daa
sbb
rol
mov
inc
pop
aam
mov
std
mov
fadd
jmp
ror
int3
push
in
or
jl
cli
(bad)
cdq
into
cmc
int3
mov
push
jp
mov
scas
aaa
jmp
fcom
pop
pop
test
outs
fwait
xchg
dec
inc
mov
xchg
jmp
and
in
pop
xchg
outs
or
repnz
push
jge
bound
pop
mov
cmps
jge
push
xchg
jbe
in
fst
mov
(bad)
por
cmps
xchg
push
call
cld
add
std
adc
xor
or
mov
mov
sub
sbb
cmp
inc
out
or
and
leave
and
popf
repz
idiv
cmc
inc
fsubr
(bad)
fcom
inc
sbb
lds
scas
push
inc
and
ror
cmps
cmp
adc
inc
push
xor
dec
mov
shr
scas
xlat
dec
adc
inc
jle
add
jne
lds
jle
scas
push
xchg
xchg
fild
add
and
aaa
inc
aad
test
ja
out
inc
mov
call
xchg
inc
xchg
cmp
pop
data16
inc
into
mov
jl
push
adc
pop
mov
jge
neg
das
inc
fisttp
in
push
pop
pop
push
sbb
out
mov
jmp
sub
dec
xchg
xchg
mov
push
mov
test
call
adc
sbb
fwait
xor
(bad)
bound
xlat
fstp
int
fsub
cmp
jge
jmp
or
(bad)
jne
mov
mov
dec
dec
sub
pop
lods
pushf
cmp
pop
adc
pushf
(bad)
cmps
mov
nop
and
cmp
cmp
inc
xor
fld
pop
les
add
(bad)
mov
dec
aad
test
mov
push
xchg
inc
sbb
lods
push
lods
test
sahf
rcl
cmp
sub
push
cmp
fcom
ja
test
mov
mov
push
inc
(bad)
mov
popa
int3
sub
mov
sub
sbb
jmp
xor
gs
jne
xchg
dec
jmp
jecxz
(bad)
dec
fbstp
stc
shr
cmc
cmp
add
or
mov
cs
cmc
shr
stos
jle
(bad)
jecxz
int3
xchg
out
inc
or
xlat
lahf
in
or
imul
mov
bound
mov
push
xchg
add
mov
pop
mov
ins
mov
stos
out
sub
cmps
inc
pop
push
pop
mov
mov
jecxz
(bad)
cdq
lods
sbb
aaa
inc
shl
mul
pop
sbb
xchg
in
lds
inc
std
sar
loope
arpl
push
js
popf
xchg
lock
mov
(bad)
in
xor
(bad)
cmps
inc
push
arpl
imul
xor
push
or
push
push
leave
sbb
sub
push
sbb
or
out
jp
(bad)
jmp
loop
xchg
add
pusha
mov
sub
out
sub
mov
lods
adc
cmp
push
inc
jnp
pop
dec
data16
mov
jg
sar
je
pusha
cld
popf
xlat
ins
inc
mov
cdq
fnstsw
lea
shr
mov
lds
aad
loop
cwde
lds
je
in
enter
nop
movs
out
out
dec
fiadd
pop
jl
lods
pop
jmp
push
movs
jecxz
cmp
pop
pop
mov
jb
pop
mov
xor
and
jns
sub
in
bound
ja
sahf
(bad)
push
int3
sub
jl
pop
push
or
dec
add
pop
push
add
pop
jae
mov
xor
push
mov
sbb
xor
xor
sub
frstor
xchg
dec
fmul
jg
jno
push
cmp
(bad)
data16
sbb
ret
out
mov
loope
scas
mov
mov
rcr
bound
inc
mov
fnsave
push
test
ss
push
and
fld
call
fidivr
pop
push
sbb
out
pusha
xor
push
mov
imul
in
cdq
mov
pushf
mov
add
mov
outs
or
jnp
lea
leave
xchg
sub
adc
ins
ins
or
fld
or
sbb
inc
retf
lock
or
sub
into
add
xchg
sub
test
pop
or
dec
in
out
xchg
cli
pushf
fwait
push
cmps
dec
test
push
aam
cmp
sub
dec
fcomi
jge
push
inc
loope
cmp
(bad)
loop
lods
mov
sub
(bad)
ss
pop
ins
mov
mov
dec
mov
pop
mov
pop
xchg
nop
mov
sbb
mov
cmp
inc
hlt
and
xchg
or
cmp
test
mov
and
add
mov
imul
inc
cmps
les
ret
sub
push
or
jle
dec
in
out
adc
fcmovb
xor
mov
push
pop
xchg
cs
jg
je
dec
and
mov
stos
lea
pop
mov
cmps
test
add
ss
outs
inc
(bad)
into
mov
mov
cs
push
pop
outs
sar
xchg
andnps
imul
push
movs
xor
xor
xor
repnz
setge
cmp
sub
mov
push
fdiv
xor
hlt
aam
mov
mov
sbb
int3
fs
and
cs
bound
test
sub
ins
into
mov
adc
sub
cwde
addr16
cmp
mov
ins
sbb
mov
mov
dec
and
xchg
add
rcl
jb
out
jmp
dec
out
mov
add
call
es
jecxz
sub
lods
and
pop
or
sahf
inc
arpl
cdq
cwde
shl
lds
cmc
sbb
or
inc
lea
cmp
out
stc
mov
lds
imul
xor
retf
scas
pop
or
in
int3
jp
popf
ss
test
movs
push
jne
call
movs
(bad)
inc
mov
test
das
jae
push
ret
retf
mov
mov
cmp
ins
int3
shl
and
aaa
aam
cmp
and
sbb
(bad)
(bad)
test
sbb
push
mov
or
or
push
mov
(bad)
inc
call
(bad)
stc
mov
and
jle
push
sub
push
sbb
ds
or
and
mov
pop
jmp
test
add
sub
jnp
xlat
pop
jns
push
dec
mov
xor
or
xchg
xchg
jbe
jo
jg
or
loopne
mov
jmp
imul
dec
jmp
xchg
int3
enter
fild
xchg
dec
(bad)
lea
sbb
call
mov
popf
xor
add
jmp
jecxz
inc
icebp
es
mov
dec
popa
mov
imul
dec
rcr
cmps
jge
push
(bad)
dec
sub
xchg
cmp
or
adc
out
cmp
dec
je
mov
outs
pushf
call
or
xchg
xorps
dec
and
dec
ins
aas
(bad)
push
scas
mov
(bad)
ins
out
xchg
ret
push
cmp
out
pop
adc
push
nop
sub
fwait
stos
or
fnsave
mov
out
adc
dec
imul
aam
inc
jg
cli
add
sbb
push
pop
clc
sbb
pop
sbb
mov
adc
pop
inc
cmp
out
push
sub
ficomp
and
xchg
push
sbb
sbb
(bad)
scas
and
stos
shl
or
xlat
jl
sub
aam
push
adc
ror
fbld
push
or
cwde
test
std
fcomip
sub
aaa
xchg
out
mov
dec
and
and
push
or
icebp
popf
cdq
push
data16
pop
mov
xor
outs
sub
add
or
pop
sub
movs
aaa
xor
pusha
int
mov
add
jno
sbb
cmps
test
mov
aaa
(bad)
repz
mov
sbb
mov
inc
and
and
mov
sub
fist
loop
(bad)
std
mov
outs
repnz
jo
mov
push
fistp
pop
add
and
jl
mov
dec
dec
test
pop
loop
arpl
sub
cmp
xlat
cmp
xchg
xor
sbb
dec
movs
call
mov
xlat
add
rol
in
ja
into
mov
mov
mov
inc
sub
ins
lds
inc
cmps
inc
loopne
mov
ret
mov
repnz
inc
mov
dec
int
pop
sub
pop
mov
sbb
iret
cmps
pop
lods
fdiv
data16
ret
mov
imul
mov
jne
(bad)
ds
test
pusha
mov
movs
add
pop
mov
es
enter
cwde
push
fisubr
das
fmul
test
xchg
retf
pop
retf
loop
popa
pop
movs
test
or
cmp
cmp
lea
add
div
cld
fdivr
in
add
fidiv
mov
pop
mov
cmp
aad
scas
aad
js
or
cmp
or
mov
das
push
mov
push
hlt
xor
sahf
leave
adc
xor
xor
jne
clc
dec
xor
push
mov
retf
and
pop
test
add
dec
xchg
out
sbb
in
mov
sbb
mov
inc
mov
jo
jp
sbb
nop
push
mov
push
and
das
push
inc
dec
pop
push
xchg
imul
pop
dec
fisttp
dec
jl
mov
div
fnstcw
daa
enter
aad
xor
adc
dec
ss
mov
sbb
cmps
mov
and
pop
push
sbb
xchg
in
fyl2x
loop
sub
pop
pop
fwait
dec
mov
push
out
fwait
mov
cs
adc
pushf
adc
mov
sub
push
jge
(bad)
fsub
test
pop
ins
cs
add
sub
add
push
mov
lahf
loope
inc
call
dec
loop
movs
or
jae
adc
rep
or
les
out
fwait
cs
repz
repnz
cmp
std
pushf
and
jecxz
or
xlat
jmp
ds
cwde
gs
xchg
rol
or
rol
aas
sbb
push
mov
mov
add
bound
inc
mov
push
mov
loop
outs
bound
adc
bound
repz
mov
(bad)
adc
(bad)
sub
dec
jecxz
push
dec
imul
jnp
dec
pop
jecxz
add
push
push
dec
sub
imul
adc
adc
in
inc
mov
mov
test
mov
in
sub
ds
jmp
sar
lods
(bad)
inc
push
or
xor
repz
in
jbe
inc
xor
push
push
cmps
neg
stc
fs
jl
pop
dec
hlt
push
(bad)
imul
ret
jmp
jns
push
or
mov
push
mov
gs
pusha
cmp
push
js
stos
stos
sub
call
lahf
add
sbb
fsub
ret
sub
imul
and
jecxz
pop
popa
inc
add
sub
push
test
ret
adc
bound
ins
ja
dec
jle
cmps
(bad)
loopne
test
lods
inc
leave
or
cmp
push
out
mov
arpl
lea
jmp
dec
inc
cmp
push
jns
inc
xor
cld
dec
mov
pop
scas
sbb
push
cdq
ja
push
(bad)
adc
in
dec
xchg
adc
dec
xor
lock
and
mov
cmp
cdq
and
sbb
sub
std
call
lods
inc
dec
aaa
cmp
push
jo
aad
and
mov
and
out
sub
inc
mov
inc
push
(bad)
pop
xchg
lods
push
jae
cmp
test
sar
pop
aad
sub
sbb
call
sti
icebp
cld
sbb
xor
pop
lods
xor
rcr
sub
ins
cmps
test
jo
sub
dec
jnp
addr16
imul
and
retf
std
mov
cmps
pop
neg
mov
inc
sbb
jbe
gs
push
mov
sub
or
mov
ja
mov
or
test
xchg
sbb
jno
aaa
repz
push
ins
in
call
mov
rcl
and
sbb
dec
sbb
sti
mov
je
ins
int3
jmp
movs
stos
ret
xchg
stc
xchg
or
sbb
cli
adc
in
(bad)
xchg
popf
xchg
outs
ins
stc
dec
into
push
xchg
ds
cdq
mov
jo
ds
cmps
pop
jg
jno
jne
or
(bad)
mov
add
adc
jbe
arpl
out
pop
pop
add
scas
icebp
shl
adc
jns
jnp
xor
movs
ins
and
inc
add
test
lods
jp
mov
push
xchg
adc
xchg
xor
adc
sub
add
or
je
sbb
inc
inc
iret
cmp
inc
pop
pop
xchg
movs
or
add
xchg
adc
xchg
xor
adc
mov
mul
icebp
in
test
test
jb
arpl
add
pushf
scas
push
sbb
bound
pop
push
xchg
in
rcr
jge
ins
in
mov
and
cmp
mov
out
inc
push
mov
cmps
stos
les
mov
sahf
cmp
and
mov
fnstcw
mov
jecxz
sar
test
(bad)
and
cmps
rcr
shr
jecxz
out
stos
dec
mov
repz
shl
lds
add
add
hlt
mov
push
cmp
stos
cdq
mov
push
add
and
push
aaa
inc
pop
pop
mov
cmp
nop
cli
call
jg
outs
lods
or
scas
shl
ficom
mov
dec
mov
leave
pop
mov
add
popf
inc
jns
and
out
jl
mov
sub
aam
and
fimul
xor
cli
outs
rol
push
ret
test
out
lahf
test
jo
sub
scas
add
loope
and
jbe
push
xchg
xor
pop
stos
loop
lods
and
das
ins
mov
aaa
mov
sbb
shr
fnsave
push
clc
loope
dec
cmp
in
dec
push
fwait
les
pop
loop
lods
aad
ds
loope
mov
sahf
and
fdiv
pop
cmp
out
jno
add
sub
mov
fdiv
not
and
enter
mov
dec
pushf
push
xor
outs
scas
gs
push
and
cmc
loope
mov
daa
cdq
mov
pop
div
loopne
retf
xchg
loopne
les
into
hlt
or
cdq
ins
sub
xlat
dec
in
and
pop
rol
sbb
std
sbb
mov
jnp
les
movs
cmps
dec
stos
repz
rcl
loopne
adc
xor
shr
push
sbb
std
push
xchg
or
jmp
arpl
bound
or
mov
xchg
es
dec
mov
sar
sbb
idiv
dec
cmp
stos
and
push
jne
or
js
test
sub
sti
mov
dec
sub
sub
lock
push
xchg
aam
xor
daa
clc
(bad)
fwait
dec
mov
cmp
mov
adc
les
jg
mov
nop
cmp
jae
pop
dec
aam
shl
mov
inc
mov
sub
xchg
gs
ins
mov
retf
adc
scas
ja
or
sbb
or
into
push
rol
in
test
sub
xor
mov
pop
and
xchg
ret
call
das
movs
push
mov
movs
(bad)
ds
fmul
mov
int3
icebp
inc
bound
or
fwait
js
repnz
push
xchg
cmp
stc
mov
push
stc
enter
xlat
aas
sbb
outs
sub
jg
dec
(bad)
jnp
jp
das
xor
outs
sub
pop
clc
mov
jle
cli
call
fcmovbe
or
cmps
or
add
or
pop
out
jns
enter
sbb
xor
inc
inc
inc
or
popf
call
dec
push
jmp
ins
(bad)
and
inc
push
test
xor
stos
push
cs
mov
lods
pop
inc
lahf
mov
ds
fld
jb
rcr
ret
adc
jecxz
add
sbb
mov
loop
cmp
mov
dec
mov
jbe
fst
mov
xchg
mov
lock
inc
push
ja
test
fnstsw
xchg
repz
jno
jmp
sub
jmp
and
gs
dec
lds
mov
test
movs
idiv
pop
lods
or
lock
movs
jmp
jmp
mov
aas
push
xor
(bad)
xchg
xor
shl
sbb
xor
test
cwde
cmp
pop
stc
hlt
or
xchg
mov
das
cmp
add
jmp
push
in
aaa
les
inc
jo
and
sub
push
shr
daa
inc
pusha
xor
sbb
movs
push
cmps
push
pop
sub
jb
inc
cmp
xor
mov
xor
cmp
test
rcl
rcl
test
fcmovnu
leave
enter
aam
(bad)
lock
push
jo
cld
xchg
pop
fidivr
leave
sub
aad
retf
mov
mov
mov
push
test
iret
iret
out
aas
sbb
dec
pop
scas
or
push
dec
push
xchg
jo
lock
test
iret
outs
jg
and
inc
test
xchg
ins
adc
mov
aam
xchg
ins
cmp
nop
aas
mov
dec
inc
and
sub
mov
in
xor
test
enter
jb
sub
dec
in
and
mov
xchg
xor
pop
out
cmp
sub
mov
dec
mov
daa
sbb
and
enter
(bad)
cmp
or
push
mov
daa
(bad)
or
(bad)
or
out
outs
rcl
jne
(bad)
shr
add
adc
shl
sbb
es
mov
hlt
mov
stos
dec
movs
adc
pop
pushf
cmp
movs
call
addr16
movs
cmp
test
(bad)
ss
sub
cmp
pop
sub
ins
mov
aam
icebp
addr16
mov
cmp
in
sar
mov
loop
out
push
sbb
xchg
xchg
mov
movs
bound
mov
dec
pop
xlat
xor
movs
sbb
xchg
jmp
jl
or
fnsave
clc
mov
xchg
xchg
rsm
cs
xchg
adc
movs
movs
adc
out
dec
xor
sahf
cli
addr16
mov
push
mov
sbb
bound
movs
xchg
retf
les
adc
cmc
(bad)
mov
xchg
or
aam
or
into
test
sbb
and
stos
sbb
sbb
xchg
lock
sbb
sahf
jb
or
lahf
dec
das
cs
ds
es
push
ds
mov
lods
(bad)
inc
call
(bad)
gs
jp
push
dec
(bad)
ror
push
xchg
out
mov
std
imul
fbstp
les
fstp
loop
xchg
and
jns
sub
mov
jnp
push
out
or
stos
mov
(bad)
pop
ins
pop
cmps
cmps
jae
add
bound
adc
adc
sub
add
jmp
xor
push
sbb
and
aad
sub
mov
(bad)
adc
and
out
sub
retf
(bad)
(bad)
pushf
stos
jnp
jnp
jmp
mov
cmp
mov
daa
push
jae
pop
nop
div
nop
push
and
dec
xchg
in
dec
cld
mov
movs
pop
pop
fsub
cmp
xchg
sub
inc
popa
xchg
mov
fistp
pop
ins
repnz
lock
fld1
and
adc
mov
jmp
iret
es
dec
mov
and
repz
pop
sbb
mov
sbb
inc
or
clc
jb
ja
add
mov
inc
mov
icebp
mov
xchg
fistp
fidiv
retf
in
jae
pop
stos
fwait
dec
jp
push
xchg
jbe
add
rol
(bad)
sar
mov
scas
sub
ret
or
sub
sti
bswap
aaa
sbb
inc
sbb
sub
sub
push
mov
aas
mov
int
and
loopne
mov
cli
popa
lods
push
cmps
push
outs
ins
mov
inc
and
jp
div
jl
sub
imul
add
les
fdivr
sub
push
pushf
xchg
jmp
lods
sbb
dec
dec
push
adc
mov
cmp
out
push
pusha
pop
and
mov
aam
repnz
adc
xlat
push
ficomp
cmp
in
(bad)
loop
add
data16
sub
inc
mov
sub
push
or
stos
adc
movs
jle
pop
and
push
inc
stos
pusha
lds
jb
fimul
pop
pop
pop
cmp
ins
aas
bound
clc
retf
or
test
jl
popa
cli
jecxz
jge
outs
cmp
jmp
jb
shl
mov
lods
xchg
fisubr
(bad)
iret
pop
and
cmc
add
adc
sub
bnd
sbb
aas
inc
mov
push
pop
and
fdiv
stc
cmp
cmps
inc
fbld
ss
dec
pop
xchg
jp
lock
loopne
or
cmovne
lods
mov
add
cli
(bad)
or
jl
inc
dec
aam
adc
mov
pop
(bad)
jne
sub
push
push
add
push
cld
mov
mov
mov
jp
sti
mov
xchg
outs
fbstp
push
imul
push
ret
push
mov
sti
pop
aad
jnp
xchg
movs
adc
mov
pushf
inc
jns
jecxz
inc
and
inc
xor
fxch
sub
push
mov
cli
jp
xor
cmp
popf
ret
aas
nop
pop
pop
cmp
cs
lea
cmps
jp
and
xchg
mov
loopne
and
loop
fdiv
pop
xchg
loope
test
dec
in
push
adc
inc
popf
add
mov
mov
pop
popa
xchg
push
std
xchg
std
arpl
sahf
dec
mov
aas
out
xor
and
inc
or
nop
push
jne
push
push
in
mov
sub
neg
cmp
xchg
pop
pop
call
not
push
and
xchg
pop
dec
jnp
ds
mov
add
and
or
lods
in
movntq
fidiv
lods
xchg
ret
jp
arpl
mov
mov
add
inc
mov
or
jmp
mov
(bad)
mov
sbb
mov
mov
fcomip
pusha
out
jmp
inc
ret
dec
repz
and
mov
call
psubsb
push
cmc
aas
sbb
fmul
sub
addr16
xor
push
jnp
jns
cld
mov
test
mov
fistp
jecxz
fiadd
rsqrtps
pop
jbe
mov
nop
in
dec
hlt
inc
leave
enter
sub
cld
mov
je
(bad)
cwde
cmps
lods
sbb
push
dec
inc
test
in
or
repnz
lods
mov
cmp
xor
das
das
fist
fs
lock
or
sub
ja
pop
fwait
mov
ret
mov
sahf
std
das
dec
outs
hlt
add
popf
xor
loope
fistp
mov
xor
inc
pop
inc
retf
and
(bad)
jmp
jl
fdiv
cmc
xchg
or
ja
or
mov
fild
or
xchg
cwde
mov
movs
movs
add
jns
add
cmp
inc
int3
nop
(bad)
enter
fcmove
pop
imul
push
sub
and
mov
(bad)
jbe
fwait
jmp
xor
jo
push
ret
int
(bad)
sar
into
lahf
lods
scas
jne
mov
repz
inc
outs
je
js
sahf
ins
adc
xchg
clc
clc
cmp
aaa
dec
popf
ret
jns
call
call
jmp
xor
lds
mov
add
aaa
popf
sbb
retf
xchg
jns
inc
xchg
cmp
mul
inc
ret
cmp
cmps
cmc
pop
loop
mov
jecxz
sbb
adc
hlt
cli
push
ret
aam
jo
fwait
adc
add
jb
mov
cld
outs
test
pop
and
(bad)
fnsave
outs
cli
in
addr16
mul
and
mov
adc
mov
int3
xor
cmp
sbb
xchg
mov
xor
jbe
sahf
inc
add
dec
stos
inc
fs
aaa
outs
fidivr
and
or
mov
je
sbb
adc
pop
pop
sbb
and
cmps
repz
xor
outs
pop
cli
aas
push
jb
mov
(bad)
push
adc
movs
xchg
fistp
sub
dec
add
mov
leave
or
push
cli
push
mov
xchg
mov
mov
jecxz
adc
cwde
pop
outs
adc
popa
ins
call
pop
repnz
or
stos
pop
mov
call
xor
je
sub
call
mov
out
cmp
out
or
xor
dec
icebp
adc
hlt
adc
cmc
int3
bound
cmps
pop
sbb
jne
mov
sbb
call
dec
xor
sub
pusha
mov
popa
fisubr
ins
and
jle
gs
leave
and
mov
ficomp
std
loopne
mov
add
in
loop
sbb
xchg
scas
jl
pop
jmp
xor
jecxz
pop
fisttp
sahf
mov
xor
jmp
sbb
fst
and
push
lods
jae
xor
inc
in
push
lds
mov
(bad)
ins
xchg
bound
or
pop
cmp
out
mov
rcr
mov
aaa
xor
std
xchg
(bad)
test
outs
cwde
cdq
push
pop
cmp
jno
lods
fiadd
push
dec
inc
and
and
aas
movs
xor
sbb
push
or
jns
cmp
inc
jle
inc
shl
jne
fsub
cmc
push
push
push
lock
push
es
scas
pushf
popa
and
jg
loope
mov
inc
pop
bound
push
popf
inc
repnz
cmc
fisub
cmc
sar
cmp
mov
in
(bad)
xchg
(bad)
pusha
jae
jns
(bad)
fdivr
jg
cmps
or
xchg
lods
sub
sahf
cmc
or
movs
push
out
out
jmp
jge
adc
outs
pop
and
in
jbe
adc
push
sub
or
mov
push
add
mov
jne
neg
in
dec
mov
lock
shl
out
lahf
imul
das
push
mov
sbb
iret
movs
sub
mov
or
dec
xchg
cli
xor
push
xchg
and
mov
stc
push
sar
xlat
xchg
fbstp
push
in
ins
es
dec
inc
cld
cmp
popa
inc
ins
pusha
jg
push
hlt
jns
and
mov
xchg
into
mov
sub
imul
xchg
dec
inc
xchg
cmp
nop
sahf
jns
inc
add
fsubrp
cmovge
mov
jge
xor
inc
aam
inc
or
jl
push
fdivr
cmp
and
add
arpl
mov
jnp
cwde
ret
mov
dec
xchg
push
faddp
test
mov
imul
add
in
out
xchg
cmc
add
cmp
sub
push
push
or
push
push
mov
mov
test
push
in
ret
rol
cmp
and
xchg
xchg
mov
cmc
cli
fadd
mov
shl
cmp
inc
sbb
push
mov
test
(bad)
popfw
retf
daa
in
jns
js
imul
pusha
clc
add
add
pop
aad
push
sbb
shr
rcr
jge
lea
jne
xchg
stos
mov
hlt
sti
add
les
push
les
jo
mov
push
sbb
lods
popa
pop
inc
mov
cdq
repnz
std
mov
xchg
xchg
mov
shl
mov
mov
cmp
jg
out
outs
fcompp
data16
icebp
rol
repz
and
(bad)
inc
dec
sub
add
or
ds
mov
out
out
iret
xchg
xchg
rol
popa
adc
out
mov
test
fwait
mov
jb
pop
out
aas
pop
aas
xchg
cmp
fwait
lods
sub
mov
out
push
cmp
xor
cmp
out
fimul
cmp
add
jle
fdivr
movs
xor
repnz
(bad)
dec
gs
test
xchg
jnp
lock
sub
and
xor
cmp
push
dec
mov
push
xor
mov
mov
sbb
adc
xlat
mov
mov
idiv
sbb
xor
imul
bound
mov
xor
repz
stc
adc
pop
addr16
inc
in
movs
sub
enter
fistp
jl
lods
mov
pop
pusha
les
inc
or
xor
cmp
inc
sub
jg
mov
outs
call
cmp
ror
mov
call
and
add
pop
or
mov
sub
out
das
dec
or
jge
fwait
out
out
sbb
out
(bad)
fisub
jle
clc
mov
clc
inc
and
and
shr
popa
mov
pop
minss
pop
xchg
or
cmp
aad
das
adc
and
pusha
pop
ret
sub
shl
mov
fstp
rcl
sub
ror
repz
movs
mov
(bad)
jle
pop
adc
fimul
fidivr
push
mov
or
or
inc
push
cmp
mov
adc
mov
and
outs
dec
lock
jle
jp
sbb
imul
fild
sti
out
movs
cwde
hlt
jns
sahf
mov
jnp
sbb
test
push
sbb
cmps
stc
push
push
push
mov
push
inc
push
pop
add
and
xchg
lods
lea
sub
mov
inc
std
outs
das
sub
addr16
sbb
inc
fistp
jmp
mov
test
xchg
inc
nop
jmp
mov
std
(bad)
jmp
scas
and
shl
mov
adc
lods
push
aad
(bad)
std
ja
cli
mov
push
push
push
add
nop
sbb
arpl
rol
mov
pusha
mov
leave
repz
mov
aam
mov
rol
cld
aas
mov
clc
test
and
(bad)
icebp
sub
xor
pushf
and
aas
lea
mov
pushf
jmp
mov
xor
aam
sub
mov
fidiv
fadd
loopne
out
push
xlat
push
in
popa
jmp
fcmovnu
pop
sbb
sub
or
loop
call
nop
call
sbb
pusha
(bad)
out
std
push
stos
imul
dec
pop
inc
fldenv
les
dec
fidivr
xchg
pop
sti
jb
jg
test
xchg
std
rcr
inc
icebp
or
scas
div
repnz
sar
arpl
pop
adc
adc
lock
pop
xor
jnp
cmps
jne
jb
in
inc
cmp
cli
sub
and
sub
(bad)
pop
push
dec
jo
push
jb
retf
inc
sbb
fmul
pop
adc
xchg
sbb
arpl
sub
dec
das
(bad)
fld
jbe
jl
jno
jmp
mov
cwde
inc
(bad)
adc
fcom
sub
xor
and
cs
xchg
pushf
rcl
ret
aad
jae
fwait
movs
mov
push
jp
jmp
mov
mov
push
fwait
xchg
out
add
shl
or
pop
xchg
lods
(bad)
lods
(bad)
mov
lds
jbe
aam
es
pusha
push
cmp
lods
fs
xor
dec
dec
out
data16
(bad)
ins
pushf
inc
in
pop
cmp
pop
(bad)
mov
cmps
dec
add
mov
(bad)
lods
pop
adc
xchg
gs
fs
jmp
or
push
push
push
in
push
xchg
int
inc
add
push
ins
jae
dec
mov
cmp
into
lahf
add
and
mov
imul
inc
cmp
sbb
in
cmp
xchg
jle
mov
mov
pop
clc
or
loop
and
addr16
push
xchg
mov
cmp
addr16
out
out
xchg
pop
lods
add
mov
into
or
lahf
into
in
jbe
stos
fs
or
fld
bound
xchg
xor
out
xor
popa
out
jg
adc
xchg
lods
sub
popa
cmp
icebp
imul
ret
dec
pop
adc
inc
sbb
inc
fsubr
add
push
movs
mov
jb
loope
into
push
or
pop
mov
rcl
es
xor
cmc
lock
or
mov
xchg
stos
loop
test
adc
jmp
xchg
add
aad
aas
out
pop
cmp
push
imul
fistp
inc
inc
xor
dec
mul
aas
shl
rol
adc
fimul
(bad)
mov
mov
cmp
leave
cmp
shr
pop
mov
and
leave
mov
aam
scas
outs
fisub
add
mov
std
in
mov
push
lods
pusha
int
sub
cmp
fiadd
in
push
rol
xchg
pop
cmp
sub
test
inc
add
frstor
sub
jecxz
pop
cli
shr
and
xor
in
mov
xchg
sub
sub
xchg
(bad)
lock
jge
lock
fiadd
or
inc
push
mov
stos
or
jnp
(bad)
jae
mov
mov
dec
cmp
out
scas
sub
mov
push
push
mov
sub
(bad)
lahf
mov
or
or
mov
(bad)
(bad)
dec
test
or
pop
pop
(bad)
pop
mov
fcom
out
ins
loop
push
mov
mov
enter
out
jle
nop
sti
stc
es
pop
push
out
or
cmc
mov
aas
loop
repnz
dec
fcom
(bad)
mov
pushf
xor
cli
mov
mov
iret
cmp
jnp
je
aad
jo
sbb
(bad)
cmp
scas
call
pop
iret
push
pop
mov
push
inc
add
mov
iret
imul
push
xor
daa
jmp
sub
push
inc
and
mov
pushf
repz
fnstcw
mov
sub
pop
rcl
push
pop
push
test
ret
pop
pop
call
jle
sub
mov
into
and
inc
cdq
cmps
xchg
dec
push
scas
pop
xor
sbb
jbe
mov
shl
shl
ins
cmp
jbe
dec
jge
adc
loope
sub
lds
pop
test
inc
or
add
data16
xchg
and
or
lahf
aas
dec
adc
arpl
sbb
clc
xor
or
sbb
leave
ja
dec
jbe
ins
inc
jns
nop
inc
leave
and
test
cld
mov
or
cld
into
lea
call
push
les
jne
mov
dec
leave
mov
ret
sub
add
call
into
jns
and
mov
ret
dec
movs
mov
add
aas
or
add
pop
jnp
inc
pop
cld
jmp
mov
(bad)
fsub
ss
iret
and
call
add
push
es
push
mov
scas
inc
ret
out
pop
lock
popa
sub
and
dec
outs
xchg
scas
fwait
lock
jmp
in
aad
jne
outs
jno
mov
sti
mov
call
aad
cmc
mov
inc
repnz
mov
fwait
scas
(bad)
inc
jle
cmp
inc
xor
test
test
cmp
rcr
adc
fs
sub
xor
mov
push
push
jno
aaa
xchg
push
jle
icebp
sti
sbb
imul
push
cwde
or
fiadd
lods
jb
lods
pushf
jnp
inc
push
dec
das
push
cmps
mov
scas
sub
dec
aaa
test
test
cmp
call
int3
pop
mov
xor
pop
cmp
or
emms
push
fxch
mov
retf
bound
or
ins
cmp
pop
sub
mov
or
inc
stos
xchg
mov
or
cmp
in
sub
cwde
aam
mov
push
push
sbb
aam
bnd
and
icebp
clc
test
xchg
inc
adc
and
xor
imul
fcom
push
in
(bad)
xor
push
in
sbb
in
ds
pop
jmp
movs
mov
call
and
jno
ins
add
mov
sti
adc
(bad)
dec
mov
push
enter
push
lea
jmp
adc
jecxz
mov
in
mov
inc
jge
movs
adc
mov
scas
test
mov
push
mov
mov
cmp
pushf
lods
scas
xor
cli
je
loope
test
sub
adc
mov
pusha
es
inc
and
pop
adc
cmp
cmp
cmp
xor
jmp
pop
(bad)
div
loope
inc
lea
pop
add
iret
mov
and
dec
inc
gs
and
push
xchg
xchg
outs
mov
pop
mov
(bad)
daa
scas
pop
push
ret
retf
mov
mov
scas
or
jno
mov
inc
ds
out
pop
std
push
(bad)
pop
out
cmps
sbb
pushf
or
mov
loop
outs
into
and
mov
jmp
in
xor
inc
ret
add
shr
jb
in
and
pop
xchg
hlt
into
sbb
jae
mov
fstp
inc
jb
movs
pusha
ds
mov
mov
aam
repnz
fcmovu
mov
test
(bad)
out
ins
(bad)
je
aam
add
mov
dec
jbe
and
shl
mov
or
and
mov
mov
adc
cmps
jbe
or
adc
in
ror
test
xor
inc
push
fisub
and
into
push
rcl
sub
sbb
(bad)
dec
mov
xchg
or
sub
fild
xor
shl
sub
mul
dec
aam
out
ja
(bad)
sub
sbb
mov
or
sar
mov
bound
into
jp
aam
jp
mov
and
xor
jl
xor
mov
mov
lahf
mov
cmp
movs
(bad)
push
popf
pop
xor
push
dec
xor
iret
xchg
sbb
cmp
out
gs
scas
pop
iret
xor
mov
(bad)
adc
ja
daa
ins
sub
xchg
push
mov
pop
add
mov
mov
mov
pop
jecxz
cld
mov
shl
fs
cmc
push
mov
in
cmps
mov
xchg
xor
fiadd
jp
mov
ins
xchg
push
mov
inc
push
arpl
jbe
in
ins
rcl
ficom
push
mov
dec
arpl
jge
push
nop
inc
call
push
lock
pop
lahf
in
mov
and
fwait
jecxz
push
cmp
sub
mov
cld
out
xor
(bad)
aam
nop
scas
ficomp
in
cwde
aad
push
fsubp
xor
test
xchg
push
jp
imul
mov
ins
mov
int3
lds
xlat
dec
mov
add
jbe
mov
test
dec
ret
cmp
or
mov
jecxz
fsub
mov
xchg
cmp
cdq
pusha
push
pop
scas
xchg
movs
rcl
adc
xor
mov
out
pop
sub
js
push
and
and
or
mov
add
repz
push
sub
(bad)
jmp
xchg
jg
push
mov
sbb
mov
push
and
mov
retf
or
out
mov
push
push
aam
or
mov
cmp
outs
in
xor
xor
mov
fisubr
in
ja
push
ret
adc
push
jne
push
push
hlt
lods
cmp
and
bound
xchg
mov
arpl
mov
xchg
inc
(bad)
jo
iret
and
fimul
pop
in
scas
xor
push
lock
push
lea
mov
(bad)
lea
xchg
je
sub
popf
jmp
aas
lods
push
popa
inc
enter
cmp
sbb
shr
int3
adc
cmp
sub
cdq
(bad)
ins
out
mov
stos
in
adc
inc
bnd
fidivr
jno
ficomp
jl
mov
and
sahf
and
mov
out
imul
ret
in
test
adc
dec
xor
shr
pop
fdivr
cli
(bad)
ins
aam
or
ins
jmp
push
rcr
or
xor
add
hlt
jl
enter
mov
xor
and
jp
cmp
cmps
in
mov
shr
mov
adc
fst
mov
xchg
adc
cmp
lahf
mov
adc
pop
mov
addr16
(bad)
cmp
nop
xor
or
in
rcr
sub
out
pop
fwait
push
jmp
repnz
shr
fidiv
push
xor
adc
stos
into
mov
fmul
or
xchg
pop
and
(bad)
push
mov
push
mov
cmps
cmp
das
cmp
cmc
enter
xor
adc
adc
sbb
dec
and
je
inc
in
sar
dec
scas
test
ftst
test
lds
cmp
cmp
xchg
push
icebp
shl
push
pop
out
or
(bad)
clc
mov
push
mov
movs
pop
cli
mov
adc
mov
jb
mov
or
call
jmp
movs
push
add
jl
shl
jmp
rol
or
inc
cmp
(bad)
or
mov
jle
adc
mov
adc
ins
nop
jnp
adc
mov
inc
imul
je
fmul
js
adc
sub
and
mov
call
and
xchg
mov
or
retf
xchg
pop
add
shl
hlt
(bad)
jno
into
mov
jecxz
push
ret
mov
loop
push
cli
pop
adc
sbb
sahf
dec
mov
xor
add
imul
inc
push
outs
jge
ja
and
dec
daa
ror
movs
inc
pop
mov
fstp
sub
cld
pop
test
mov
movs
xor
jl
pop
(bad)
jmp
mov
stos
in
sub
dec
mov
xor
outs
pushf
sbb
into
add
scas
js
xor
js
je
fcmovu
in
xor
fmul
mov
and
sbb
imul
or
repz
mov
sub
test
inc
in
test
dec
jecxz
cli
test
or
push
mov
cmp
inc
outs
xchg
test
add
pop
imul
mov
inc
movs
mov
add
push
das
ficom
or
aam
xchg
add
jne
add
sar
stos
shr
push
dec
cmps
in
push
sub
out
sub
push
jecxz
fidivr
popf
mov
jne
and
dec
mov
retf
pop
push
int
sbb
int
sahf
mov
inc
aaa
std
(bad)
data16
sbb
into
adc
xor
push
test
xchg
inc
mov
jns
(bad)
fsub
loope
pop
nop
je
loope
imul
sbb
mov
popa
push
xchg
add
dec
pop
in
test
aaa
jnp
jp
sub
fbld
test
je
or
rcl
xchg
mov
push
push
outs
mov
sbb
leave
xor
mov
cmc
out
and
push
jno
inc
mov
(bad)
mov
sbb
out
push
inc
mov
xchg
xor
pop
dec
jno
fdiv
cmps
or
push
xor
(bad)
sbb
xor
retf
div
mov
cmp
repnz
nop
fnstcw
dec
sbb
add
ret
xor
fmul
cld
push
in
push
jne
ret
jae
jmp
popf
rcr
icebp
out
rol
dec
dec
shl
out
inc
push
rol
sub
sbb
mov
cmps
fisubr
(bad)
push
retf
fwait
jne
mov
inc
(bad)
ins
jecxz
lahf
mov
dec
pop
dec
int3
mov
test
sbb
sub
sar
call
mov
lea
fidivr
and
fsubr
hlt
mov
pop
aas
add
aaa
stos
push
jecxz
ds
daa
xchg
and
loope
fmul
pop
pop
mov
mov
pop
leave
call
xchg
sub
shl
sub
sbb
pop
ss
outs
loope
add
ret
jp
(bad)
adc
and
into
mov
frstor
retf
das
rcr
scas
stos
fmul
push
pop
xchg
in
push
inc
jg
mov
lahf
inc
xor
jge
jg
std
adc
scas
cmp
scas
pop
je
out
je
sbb
pop
jbe
fisubr
test
push
inc
push
popf
cld
cld
mov
inc
adc
mov
shl
jl
jno
sahf
sub
jmp
pusha
sbb
jle
fs
dec
aad
addr16
cmps
imul
cld
sar
sub
and
pop
sub
cmp
or
and
or
jge
mov
test
kmovw
ds
fs
cmp
faddp
lods
fwait
leave
sub
es
or
movs
and
and
mov
loopne
mov
mov
test
js
shl
sbb
je
fild
dec
enter
jg
mov
xchg
mov
hlt
jecxz
cmp
dec
mov
mov
sbb
sbb
call
xor
sbb
or
dec
or
xchg
dec
push
es
or
out
into
call
sbb
sub
(bad)
pusha
cld
jb
icebp
cdq
pop
daa
jae
shl
xor
jne
inc
push
push
in
push
inc
not
dec
mov
test
(bad)
les
mov
ret
ins
adc
jmp
push
xchg
test
cmp
bound
ret
in
mov
fs
ret
jecxz
jecxz
or
stos
sub
rcl
sbb
mov
jle
jno
rcl
xchg
mov
fwait
int
test
sub
sub
cmp
push
stos
idiv
jp
sub
cdq
lods
ret
adc
cmc
mov
in
fdivrp
push
fmul
add
es
adc
lods
movs
or
sar
int3
pop
data16
jno
inc
loope
fadd
xor
pop
popf
push
aad
mov
(bad)
int3
inc
fcomip
fdivr
ja
dec
call
jno
mov
sbb
sahf
adc
sub
and
cmp
xor
inc
clc
div
test
bound
(bad)
sub
xor
add
loop
jp
push
fidivr
test
mov
or
stc
sbb
cdq
or
mov
stc
inc
pop
add
sbb
inc
mov
out
int3
or
jnp
inc
sbb
mov
sbb
iret
(bad)
scas
xlat
and
pop
stos
jp
xor
mov
std
cmp
push
mov
sub
and
xchg
leave
add
imul
repz
mov
or
add
xchg
jno
mov
jl
inc
stos
shl
sub
cmps
ja
jle
jge
xchg
(bad)
mov
inc
(bad)
je
jmp
and
(bad)
and
repz
jns
xchg
loop
jne
das
push
dec
dec
mov
mov
push
adc
and
cmp
jg
aad
shl
sbb
xchg
ss
in
call
sub
mov
sub
and
pop
inc
jnp
pusha
lods
pop
adc
jns
xchg
ins
stc
push
pusha
jp
ffreep
aaa
fwait
mov
jl
(bad)
gs
imul
mov
(bad)
sub
ds
out
mov
sub
fiadd
in
push
add
mov
bound
jne
rol
mov
cmp
ret
aas
mov
inc
outs
setbe
xchg
or
xchg
sub
mov
ds
xlat
and
call
jb
dec
les
inc
mov
or
adc
push
dec
jo
adc
movs
aas
sbb
mov
xchg
adc
scas
retf
lock
mov
fdivr
cmps
jo
sbb
push
in
inc
push
sub
test
daa
xchg
or
mov
xor
and
sar
sub
adc
pop
sub
jno
pop
imul
je
movs
add
xchg
cmp
dec
mov
xchg
push
xchg
or
dec
xchg
mov
xchg
jns
push
push
jnp
inc
push
xor
pop
adc
push
aas
neg
push
inc
cmp
pop
mov
jno
std
xchg
mov
dec
mov
push
scas
push
in
lds
mov
jnp
dec
outs
mov
fsub
movs
sub
leave
icebp
adc
push
clc
fidiv
jae
pop
jge
rcr
enterw
push
mov
fstp
lds
xor
xlat
push
add
xchg
fwait
idiv
pop
mov
icebp
daa
mov
pop
inc
dec
inc
xchg
aam
mov
adc
mov
push
add
mov
mov
ret
into
dec
dec
mov
dec
or
arpl
mov
pop
adc
xchg
mov
and
xor
sar
push
(bad)
mov
sub
push
in
shl
dec
rcr
cmp
and
jecxz
lea
not
sbb
cmp
xor
xchg
movs
jb
iret
cwde
ret
shl
ja
shl
fadd
cdq
iret
pop
sub
jge
out
out
cdq
dec
cmp
sbb
data16
add
jb
lds
xchg
retf
add
repz
mov
add
cld
mov
scas
pop
test
and
ret
in
xor
mov
sub
shl
add
mov
jbe
or
movs
idiv
movs
jmp
(bad)
and
mov
idiv
inc
xchg
adc
xchg
(bad)
xor
enter
repz
pop
cs
ja
push
xor
dec
test
scas
leave
pop
mov
pop
mov
adc
push
mov
aas
sti
and
lds
adc
mov
push
xchg
jne
mov
fst
dec
push
les
adc
jmp
js
cdq
mov
mov
fdivr
aam
out
or
hlt
test
inc
ficomp
mov
add
sahf
push
or
sbb
arpl
leave
adc
loopne
mov
in
mov
or
cmp
fwait
push
xchg
outs
mov
mov
test
and
sbb
clc
stos
test
shl
mov
icebp
movs
test
dec
push
dec
in
popa
cmp
fwait
mov
push
mov
push
clc
pop
rol
test
shl
inc
std
xor
mov
retf
shr
adc
add
ret
mov
retf
mov
mov
ror
and
sbb
dec
mov
lock
stc
inc
jno
in
les
sub
add
cmc
cmps
jle
mov
mov
lahf
gs
sub
ret
into
jecxz
in
mov
outs
out
push
xchg
outs
shr
jo
adc
out
xchg
cmc
movs
push
inc
mov
mov
int3
mov
dec
push
push
imul
daa
add
pop
shl
sub
xor
bound
adc
cli
out
repz
fst
mov
(bad)
jl
cmp
test
nop
inc
push
and
sar
bound
pop
dec
sub
sub
ds
mov
mov
push
pop
rcr
mov
icebp
cmp
lods
push
data16
or
cmc
pop
popf
xor
mov
std
mov
xchg
mul
pop
retf
jg
mov
add
jl
inc
repz
iret
shl
mov
pusha
lds
(bad)
dec
xor
retf
aas
mov
js
and
outs
or
retf
shl
cld
pop
dec
aad
pop
xlat
jmp
inc
clc
push
xor
scas
jmp
add
mov
xchg
mov
xorps
xchg
fst
mov
mov
mov
daa
out
jns
cwde
out
test
mov
pcmpgtb
icebp
pushf
test
call
test
enter
int3
sub
cs
jne
inc
mov
sub
popf
aas
and
pop
xchg
je
repnz
cmc
xchg
scas
outs
and
mov
mov
daa
cmp
jns
aam
(bad)
mov
sti
sti
das
cmp
cmps
push
aas
shr
retf
or
dec
sbb
mov
push
dec
cmp
jle
in
mov
add
clc
xchg
xlat
or
das
lods
cld
cmps
mov
push
mov
cmp
push
(bad)
or
jne
cmp
loopne
adc
loopne
ret
jge
lods
mov
pop
and
jne
loop
mov
aad
sub
sbb
sbb
cs
push
mov
(bad)
ret
jbe
inc
xchg
sti
jbe
dec
lock
inc
adc
add
cmp
fnstenv
cdq
sub
imul
cmp
(bad)
pop
pop
bound
xor
push
push
push
ds
es
pop
sbb
cld
mov
or
aad
call
xchg
and
les
xchg
push
ficom
cmps
out
out
inc
jp
into
xchg
cmp
dec
pushf
imul
nop
ja
sub
cwde
mov
push
shr
leave
mov
jmp
jl
outs
dec
add
je
push
stc
sub
dec
pop
push
ret
dec
mov
mov
sub
aad
mov
leave
sbb
pop
cwde
fldz
mov
jge
test
lods
dec
lahf
popf
test
sahf
sbb
or
push
enter
lods
(bad)
push
add
imul
outs
add
add
gs
loope
es
dec
test
cmp
fisubr
adc
popa
imul
sub
inc
repz
pop
jge
dec
pop
je
(bad)
pop
std
call
push
outs
in
pop
cli
mov
adc
push
mov
gs
mov
mov
jmp
sahf
mov
sbb
mov
int
js
mov
mov
test
pusha
leave
into
popa
test
iret
push
push
lea
mov
hlt
cdq
mov
or
jnp
add
mov
fist
pop
mov
es
jmp
push
push
pop
or
jle
inc
jg
out
shl
push
cli
pop
shl
outs
xor
fstp
mov
aas
mov
jmp
loop
int
sub
gs
add
adc
xchg
inc
pop
imul
inc
sbb
(bad)
sti
xchg
xlat
push
(bad)
fisubr
xchg
xlat
push
ds
pop
xor
inc
adc
push
into
push
xor
pop
fist
mov
icebp
stc
pusha
adc
ins
dec
sub
jecxz
scas
imul
js
sub
and
mov
int3
lods
mov
shr
mov
jno
je
out
sub
sbb
retf
jmp
adc
mov
sub
movs
sub
jle
aaa
add
cmps
fst
adc
int3
cmp
sbb
mul
scas
mov
sub
xor
add
test
sub
dec
or
adc
push
push
xchg
cmp
jns
mov
xor
shr
das
xor
cmp
adc
rcr
xor
lods
out
dec
movs
cld
dec
sub
repz
out
add
mov
jne
mov
adc
add
loopne
scas
int3
fwait
in
pop
cmpxchg
ins
add
mov
lods
jbe
sub
mov
jb
mov
outs
aas
push
xchg
inc
in
dec
lods
fwait
jb
cdq
stc
sbb
and
fnstcw
sub
inc
rcl
es
mov
and
ror
adc
cmp
mov
add
dec
xor
pop
mov
cs
(bad)
xor
pop
jp
push
(bad)
inc
test
dec
mov
jo
dec
out
es
or
dec
mov
shr
mov
scas
mov
test
(bad)
fnstenv
adc
dec
mov
and
push
stos
(bad)
movs
lds
fstp
inc
and
movs
js
xlat
cmp
mov
popa
sub
aad
les
mov
push
jne
daa
push
and
fwait
mov
pop
mov
dec
scas
clc
sbb
add
outs
adc
cmp
(bad)
jge
add
cmp
les
xchg
sbb
mov
out
pop
push
cvtps2pd
into
bnd
mov
shr
cmps
cs
leave
cld
pop
in
pop
stc
cmp
cli
jbe
in
cwde
jge
in
xor
push
sbb
sub
jecxz
adc
inc
inc
popa
movs
adc
retf
pop
out
mov
cwde
(bad)
movs
loope
and
or
(bad)
cmp
mov
in
js
inc
cdq
repnz
cwde
les
jmp
fnstenv
pop
mov
mov
pop
ret
add
retf
adc
je
inc
ins
nop
and
shr
mov
mov
lods
sbb
mov
test
dec
int
xor
inc
sar
cmc
push
iret
pushf
dec
push
jmp
mov
fwait
int
cmp
stos
sub
icebp
mov
fdivrp
sub
out
fisubr
sub
jmp
ror
xchg
pop
mov
inc
mov
mov
cdq
clc
(bad)
arpl
jge
mov
daa
stc
mov
xchg
xor
mov
ins
imul
xchg
pop
cdq
daa
sub
mov
popa
mov
(bad)
fsub
rol
std
or
inc
loopne
fidiv
aas
aad
cmps
adc
xchg
xchg
out
ja
mov
cmp
dec
rcl
mov
xchg
repz
dec
lahf
hlt
fsub
jno
push
adc
jae
jmp
pop
aas
ja
jne
sub
push
push
dec
pop
push
mov
xchg
mov
inc
mov
or
jo
aaa
adc
lock
fwait
call
fcmovnb
call
fld
jb
clc
idiv
adc
inc
fmul
int
iret
cmp
cmp
out
ja
mov
psubw
xchg
xchg
inc
stos
push
xor
fst
cdq
retf
ins
jmp
pop
call
sbb
fisttp
fsubr
and
pop
and
jno
sub
cmps
push
add
xor
mov
shl
leave
jo
test
jmp
pop
aas
sub
xor
pop
(bad)
mov
mov
into
dec
les
movs
xchg
jmp
xor
test
xor
xor
xor
pusha
loop
movs
push
xor
ins
movs
push
ss
(bad)
test
out
addr16
pushf
dec
dec
xchg
adc
loop
and
push
cli
sub
shl
pop
jmp
out
jb
jecxz
aaa
outs
xor
lods
jg
repnz
retf
imul
jmp
pop
pop
jge
xchg
cmp
cmp
push
call
mov
xor
add
or
loopne
addr16
or
hlt
sbb
jecxz
out
dec
cmp
sar
sbb
cmp
push
xchg
pop
sbb
mov
pop
cmp
or
sti
popa
retf
dec
inc
repnz
xor
adc
mov
in
ror
aaa
out
stos
jl
push
xor
and
add
sar
nop
push
mov
pop
fcom
in
sub
push
push
ins
pop
add
pop
push
(bad)
xchg
or
mov
pop
cmp
mov
aaa
out
push
ds
inc
mov
fsubr
imul
sub
sbb
test
adc
xlat
sbb
push
loopne
cmc
and
or
(bad)
imul
test
lock
inc
xchg
add
or
and
push
in
ss
add
or
fdiv
cmps
xor
push
ins
xchg
sbb
push
sti
inc
mov
pusha
pop
mov
jmp
add
pusha
sub
inc
shr
pop
pop
mov
cmp
sub
stc
daa
es
(bad)
ins
cmp
xchg
sbb
mov
or
jne
test
nop
scas
or
cmp
push
xchg
dec
(bad)
mov
xor
pop
sbb
rcr
pop
sahf
stos
jb
scas
clc
cmp
add
outs
movs
sahf
popa
jno
push
jo
cmp
nop
pop
adc
mov
add
dec
mov
imul
nop
xor
retf
es
sub
jmp
lods
sbb
movs
jl
js
pop
movs
mul
sahf
xchg
mov
jmp
xchg
jbe
sbb
sbb
aad
xor
jge
ror
mov
cmp
shr
mov
in
pop
dec
push
mov
mov
movs
adc
and
stos
out
cwde
xchg
lahf
out
daa
xor
call
mov
cmc
movzx
adc
adc
test
xor
into
mov
cmp
mov
mov
je
xchg
adc
cmp
cmp
dec
pop
mov
nop
push
test
ins
stc
call
push
into
adc
pop
repz
cmp
cmps
test
cmp
or
(bad)
in
sub
or
ret
movs
scas
sbb
lock
xchg
out
movs
je
call
jge
inc
(bad)
sub
jmp
mov
cmps
add
pusha
push
mov
fld
mov
push
xchg
and
pop
in
ror
(bad)
out
(bad)
mov
jb
aam
out
push
jecxz
adc
arpl
call
loopne
ret
in
imul
mov
jp
pusha
adc
jbe
add
nop
xchg
xor
sub
mov
sbb
loop
mov
pop
aas
sbb
das
jnp
mov
add
movs
dec
dec
jl
inc
sbb
cmp
pop
inc
pop
out
xor
and
mov
cld
std
push
adc
cmp
sar
aas
pop
imul
cmp
sahf
mov
daa
popf
adc
mov
inc
test
js
pop
mov
mov
daa
jo
jle
aad
sub
xchg
call
popf
out
fist
mov
sbb
scas
or
pop
lods
shl
jmp
or
je
retf
(bad)
xchg
sar
adc
fsub
jl
pop
dec
hlt
cmps
xchg
call
dec
jl
jmp
push
xchg
xchg
out
shl
sub
and
mov
cmp
imul
cmp
push
cmp
push
xor
(bad)
ins
les
and
cs
inc
vpcmpgtb
push
stos
add
mov
loop
push
pop
inc
shl
div
push
pop
or
mov
mov
mov
push
dec
fcmovnbe
out
xchg
mov
adc
es
lahf
jmp
jg
iret
mov
shl
jmp
push
test
fdiv
jmp
mov
or
xchg
jg
push
xchg
inc
cmp
and
cmp
iret
fdivr
inc
jno
in
out
mov
jmp
cmp
cmc
cwde
pop
mov
fadd
arpl
arpl
pop
pop
data16
add
push
movs
xor
(bad)
scas
bound
jmp
push
cmp
pusha
mov
popa
shl
ret
jecxz
mov
push
inc
xchg
lods
pop
sar
push
mov
out
and
sub
ss
mov
jg
enter
stos
idiv
xor
loope
loop
dec
inc
mov
repz
xchg
mov
xabort
loope
pop
das
pusha
mov
mov
jne
jo
sar
dec
daa
inc
daa
jl
sbb
leave
cmp
scas
dec
push
mov
inc
repnz
xlat
sbb
repz
xchg
movs
jle
adc
inc
push
pushf
sub
je
mov
mov
dec
mov
scas
arpl
mov
pop
les
test
xor
push
jo
fidiv
pop
aam
fld
xchg
jmp
popa
mov
into
test
arpl
and
add
xchg
in
stos
pop
test
movs
test
ret
cdq
or
in
inc
jl
scas
gs
nop
mov
inc
mov
(bad)
dec
sbb
dec
adc
pop
scas
rol
or
add
es
pop
pop
pushf
cld
xchg
(bad)
mov
dec
rol
push
pop
add
cmc
les
jp
out
dec
cmp
or
xor
mov
push
pop
(bad)
mov
fdivr
inc
aad
loopne
inc
and
sti
inc
adc
push
lock
js
lock
cli
sub
jp
jp
xor
(bad)
iret
repnz
push
retf
mov
pop
jo
movs
enter
mov
inc
arpl
retf
sub
scas
je
mov
mov
mov
mov
icebp
(bad)
out
or
outs
or
lods
leave
or
mov
icebp
dec
mov
xchg
add
cld
cmp
pop
cmp
fnstenv
push
dec
je
(bad)
jo
mov
jmp
jle
jbe
jns
in
xlat
mov
jg
lods
and
mov
mov
xchg
mov
test
imul
icebp
mov
mov
sbb
outs
mov
adc
add
xor
push
inc
sbb
sbb
cmp
ja
std
(bad)
ss
push
jo
push
push
icebp
jne
aad
cmp
push
pop
aam
xor
in
cdq
xor
mov
xchg
call
jge
sub
jb
ins
jg
pop
std
ret
js
clc
(bad)
cmp
pushf
inc
fwait
imul
push
add
push
repz
rcl
mov
push
sbb
jle
retf
test
pop
add
xor
cmp
sti
push
mov
dec
jg
lahf
jbe
and
mov
mov
mov
lods
pop
and
push
loope
out
cs
repz
xchg
xchg
hlt
mov
test
ins
retf
jl
and
scas
jns
bnd
dec
retf
cmp
ror
mov
loop
lds
add
adc
pop
call
add
test
int3
sbb
nop
fcomp
jo
int3
mov
adc
mov
add
cwde
das
popa
jge
dec
gs
loope
bswap
inc
rcr
push
jg
lods
leave
adc
mov
sahf
imul
fwait
dec
push
pop
inc
(bad)
sub
sbb
clc
inc
repz
mov
aaa
out
xor
cmp
jge
lahf
test
fst
mov
daa
int3
test
jae
mov
mov
ss
fstp
scas
pop
int
aaa
std
repnz
addr16
movs
lods
xor
cmp
or
mov
sub
out
push
mov
adc
in
and
retf
mov
cmp
in
addr16
add
xchg
std
in
movs
hlt
ficomp
cmp
scas
js
iret
mov
popa
sub
getsec
hlt
cmps
xchg
pop
push
js
mov
(bad)
fcomp
push
and
test
fsubrp
xor
mov
lods
jo
jl
xchg
or
push
adc
push
push
add
push
mov
sbb
lea
push
sub
mov
cmp
or
cmp
mov
xchg
and
mov
adc
sbb
fistp
loope
xchg
lock
jns
push
jnp
or
or
cmp
sbb
push
ret
xor
mov
std
jl
mov
or
jbe
ret
(bad)
fcmovnu
pop
pop
lods
loop
jge
push
mov
mov
xchg
ret
mov
mul
cmp
mov
adc
inc
sbb
les
sbb
clc
(bad)
sub
int3
sub
or
xchg
inc
scas
mov
es
jmp
psadbw
xchg
outs
add
add
jmp
stc
and
inc
push
mov
xchg
mov
add
outs
cmp
or
adc
cmps
mov
shl
(bad)
fdiv
or
cmp
mov
adc
ret
retf
xor
dec
ret
jg
call
test
push
push
jl
jo
cmp
fmul
call
ret
push
fnsave
adc
mov
mov
inc
inc
add
arpl
js
push
dec
clc
pop
pop
dec
lahf
movs
push
adc
or
fcmove
xlat
(bad)
mov
les
call
xor
add
mov
call
fild
pop
sub
dec
icebp
sti
mov
ficomp
dec
cmp
imul
sbb
(bad)
rcl
clc
add
jp
mov
xlat
ror
stc
aas
and
dec
in
or
xor
dec
fild
push
popa
jbe
or
mov
ss
(bad)
mov
add
sbb
pop
sbb
or
out
cmp
or
jmp
sahf
jno
addr16
or
sbb
add
xchg
test
sbb
and
inc
cld
sbb
and
sbb
dec
nop
or
or
ja
out
and
adc
test
sub
mov
xor
fs
scas
sub
push
fdivrp
fsubr
lds
inc
les
push
xchg
call
dec
and
jmp
pop
(bad)
fidivr
pusha
dec
fisub
mov
sar
dec
aad
iret
sbb
retf
mov
popa
cmc
sbb
and
cmp
dec
jae
inc
push
push
jae
(bad)
mov
inc
sub
enter
xchg
jae
mov
xor
jae
push
and
xlat
jmp
int
and
and
mov
shr
aas
call
enter
lods
inc
adc
cmps
imul
inc
pop
cmp
mov
push
xchg
test
xor
(bad)
fwait
mov
xor
or
inc
iret
or
push
(bad)
js
je
ins
mov
xchg
mov
int3
mov
movs
or
jle
les
jmp
xchg
jno
add
jb
mov
(bad)
(bad)
imul
or
fucomp
pop
or
call
test
cmp
xor
mov
cmps
adc
not
in
pushf
hlt
leave
neg
dec
sbb
stos
mov
mov
loope
pop
vmovhpd
js
or
sub
in
call
gs
mov
dec
or
push
dec
jnp
movs
in
xchg
fisttp
add
inc
mov
stos
shl
das
push
cmp
fidiv
add
add
inc
xchg
pushf
mov
mov
test
mov
or
loope
inc
push
dec
adc
xchg
adc
call
stc
loope
jecxz
shr
push
(bad)
movs
adc
loope
pop
mov
hlt
lods
add
in
xor
add
pop
nop
dec
fstp
fnclex
cmp
mov
call
movs
mov
sbb
mov
movs
outs
aas
aam
test
stc
gs
push
push
int3
repz
cld
test
sbb
aam
xchg
mov
(bad)
test
aam
mov
add
push
pop
mov
cmp
push
mov
sub
pop
pop
ficomp
int3
dec
ja
and
and
sub
push
fadd
out
pop
adc
cmps
mov
inc
xchg
leave
das
into
push
shr
xor
inc
sbb
cmp
jg
cwde
jb
pop
inc
fwait
retf
popa
jmp
xchg
in
cmps
ins
rcl
lods
in
ret
daa
cmp
fidivr
sbb
jbe
and
js
push
mov
xlat
adc
repnz
or
mov
test
sub
dec
xor
mov
mov
ins
jns
(bad)
ins
fnclex
int3
mov
mov
dec
sub
scas
std
es
adc
mov
sub
add
pushf
cmps
test
addr16
in
and
and
xor
xchg
push
movs
xlat
push
ds
push
inc
push
add
cmp
jne
jle
stos
dec
ins
popf
xor
ins
dec
push
xchg
mov
shl
out
test
sahf
inc
dec
div
fcom
cli
push
inc
mov
retf
mov
scas
das
movs
mov
hlt
sbb
xor
mov
fwait
test
shl
inc
(bad)
xor
jns
out
and
(bad)
jmp
stos
or
cmp
cwde
xchg
xor
pop
inc
jbe
mov
pop
icebp
sub
mov
cwde
call
pop
sub
xor
and
das
jl
imul
lods
add
push
shl
(bad)
aad
aam
test
add
mov
scas
dec
xor
mov
mov
call
dec
push
bound
icebp
cli
sbb
mov
fisttp
or
xor
clc
jge
movs
dec
cmp
adc
dec
js
xor
sbb
xchg
aad
push
es
ret
pop
imul
je
xchg
bound
xchg
sbb
(bad)
(bad)
repnz
and
test
shr
jno
pop
push
test
ins
jno
mov
jae
outs
sub
mov
retf
jmp
push
or
sbb
add
jmp
adc
dec
mov
lea
int3
ja
gs
mov
pusha
sar
in
ret
xchg
jne
adc
das
and
and
es
xchg
jl
or
xchg
rol
mov
outs
cmp
daa
xchg
(bad)
dec
xchg
xor
sbb
repz
sbb
jle
ret
xchg
add
fdiv
push
inc
mov
pop
lock
mov
add
pop
jmp
inc
aaa
scas
mov
sub
ror
xchg
das
jl
icebp
sti
in
pop
sbb
aaa
and
mov
loop
pop
out
xor
fbld
adc
test
jne
mov
(bad)
daa
lock
xor
daa
cs
cdq
mov
cdq
mov
mov
add
mov
movs
stos
gs
xchg
and
dec
or
outs
imul
dec
push
imul
jno
add
xor
out
inc
cdq
(bad)
icebp
stos
adc
mov
lods
mov
add
xor
jbe
sar
into
mov
sar
loop
loopne
out
xor
mov
(bad)
out
mov
das
add
dec
sbb
jl
cmp
and
movs
mov
cmc
iret
cmp
jle
loope
stc
lahf
(bad)
daa
cld
nop
push
mov
push
out
in
or
mov
aas
inc
retf
push
mov
mov
mov
mov
and
cmp
push
jae
cli
into
movs
jmp
in
inc
add
push
clc
mov
pop
fwait
mov
xchg
imul
aam
iret
mov
push
lea
mov
adc
jmp
jae
mov
jns
fiadd
jne
xor
shr
loope
pop
test
or
pop
mov
xchg
lods
push
call
mov
sbb
mov
mov
add
pop
mov
mov
pop
sub
dec
push
mov
popf
fsubr
mov
xor
inc
xlat
cmp
jns
nop
mov
shl
adc
mov
jecxz
jae
adc
jae
xchg
xchg
or
sahf
mov
scas
fs
iret
out
push
sbb
push
in
mov
cmps
sub
imul
scas
cli
mov
xchg
mov
cmp
pop
mov
ret
dec
cmp
mov
icebp
mov
mov
ins
shl
mov
add
inc
or
push
cmc
sar
dec
pushf
(bad)
enter
cwde
popf
dec
hlt
or
push
bound
rol
sar
into
jns
std
fisubr
fdiv
pop
mov
pop
and
push
mov
mov
jb
mov
sub
or
mov
pop
mov
inc
dec
addr16
pop
in
rcl
jnp
xchg
inc
jnp
(bad)
mov
enter
cmc
jno
sbb
nop
push
rol
sub
ja
jmp
mov
les
sub
out
mov
inc
pusha
loop
inc
pusha
loope
inc
je
iret
(bad)
out
int
xchg
sbb
sbb
movs
or
cmp
push
add
inc
push
cmp
shl
loopne
mov
ja
sbb
push
mov
sar
push
lods
cmp
push
sahf
jmp
xchg
(bad)
jns
iret
xchg
pop
(bad)
mov
jmp
sbb
cld
sahf
xchg
lods
mov
push
mov
push
(bad)
jle
pusha
call
stos
mov
ror
adc
rol
adc
mov
mov
mov
push
imul
sub
int
test
mov
inc
cli
in
jle
cdq
mov
cwde
pop
mov
movs
and
sbb
or
test
xor
(bad)
cs
test
mov
out
test
dec
das
push
push
mov
mov
ficomp
shl
lods
push
push
or
data16
fcmovnb
pop
inc
stos
or
sbb
mov
ficom
mov
and
adc
mov
arpl
sbb
xchg
scas
and
mov
mov
fmul
fild
sti
xchg
(bad)
mov
and
pushf
push
rol
out
xchg
jmp
xchg
test
push
addr16
daa
or
ins
dec
retf
adc
add
adc
pop
pop
cmps
mov
ss
pop
sbb
icebp
stos
pop
pop
xchg
mov
mov
push
mov
popf
xor
dec
mov
adc
jmp
mov
jmp
daa
test
add
repz
shl
hlt
(bad)
sub
mov
movs
loop
push
scas
add
add
push
mov
(bad)
jl
stc
mov
dec
(bad)
xchg
inc
dec
xor
test
sub
inc
clc
(bad)
xchg
pop
std
mov
pop
push
ss
and
jp
jmp
jbe
sahf
fistp
xor
dec
add
les
stc
mov
pop
xor
lahf
ins
in
clc
inc
xor
cmp
je
push
sbb
out
pop
sub
xchg
xchg
and
xchg
add
inc
pop
sbb
cdq
stc
adc
xor
ins
sbb
push
popf
enter
xchg
ss
dec
push
xchg
je
iret
push
cdq
sub
dec
pusha
popa
mov
cs
mov
or
outs
lea
push
ds
pushf
mov
pop
mov
pop
ret
(bad)
sbb
pop
xlat
and
mov
test
shr
cmps
sub
mov
lea
ret
gs
stc
ins
push
sbb
cmp
repz
push
xor
xor
jmp
mov
sub
push
mov
mov
imul
xchg
not
js
pop
fsubr
add
test
jp
push
cmps
sti
ror
popa
jnp
adc
mov
in
dec
scas
push
imul
mov
xchg
dec
jb
dec
and
or
retf
pop
xchg
loopne
push
sahf
adc
rcr
outs
push
repnz
and
movs
inc
je
aas
lods
fadd
push
test
or
pop
retf
and
inc
loop
and
pop
gs
cmp
cwde
movs
pop
hlt
mov
mov
fldenv
dec
jnp
cmp
jnp
mov
pop
mov
call
in
clc
push
or
sbb
push
pop
adc
mov
jo
int3
out
or
mov
mov
out
mov
and
fst
push
loop
pop
into
sbb
bnd
test
sbb
cmp
jae
enter
xchg
dec
cld
scas
inc
sub
fcom
mov
ins
push
pop
test
adc
push
je
shl
push
mov
jge
mov
push
xchg
repnz
lahf
ds
pop
lahf
push
cwde
pop
jb
jle
jle
xchg
push
push
push
dec
mov
mov
sub
xor
lahf
int
mov
test
sbb
fcomp
(bad)
push
ins
dec
cs
mov
ins
loopne
rcl
jns
pushf
imul
jmp
in
mov
into
(bad)
fistp
lahf
mov
pop
rol
jl
xlat
loope
jle
adc
in
bound
dec
pushf
inc
nop
push
dec
(bad)
jmp
test
into
xchg
xchg
xchg
or
jae
addr16
addr16
clc
dec
cmp
cwde
ror
rcl
xchg
into
jge
stos
jmp
xchg
mov
outs
daa
jmp
js
ret
(bad)
loopne
fwait
ins
jle
inc
mov
jle
lods
dec
loop
sar
sahf
adc
xor
leave
repnz
ret
ins
add
jne
dec
sub
ret
mov
and
mov
push
ja
jmp
je
or
cli
xor
ds
pop
lds
mov
and
sub
pop
in
cmp
imul
jle
mov
mov
test
and
rcl
mov
stos
aaa
imul
mov
dec
mov
inc
lds
iret
cmp
fyl2xp1
jl
lods
push
les
dec
mov
xchg
adc
jge
push
xor
or
jmp
dec
movs
mov
scas
daa
mov
jns
cmp
test
test
shl
add
ret
push
shl
jno
mov
(bad)
lods
jne
push
mov
sti
dec
pusha
gs
clc
sub
pop
mov
ins
mov
mov
rol
add
pusha
(bad)
mov
lock
jo
mov
sbb
stos
inc
rol
jno
xchg
jnp
or
sbb
aam
into
clc
mov
sbb
in
push
test
push
cmp
fadd
outs
pusha
scas
inc
ret
adc
push
mov
push
adc
xor
mov
(bad)
cmp
xor
retf
pop
mov
cmp
je
fimul
mov
lods
sbb
xor
mov
call
dec
cmps
aam
jne
es
and
cmp
fadd
xor
pop
outs
fdiv
jl
das
push
shrd
test
sbb
xor
in
push
leave
mov
jae
xor
int3
jbe
into
push
mov
jmp
sbb
xchg
mov
lods
adc
cmp
test
sub
sbb
or
or
dec
mov
add
pop
add
xchg
stc
cmp
xchg
mov
je
test
cmp
xor
jmp
jg
push
adc
jmp
(bad)
adc
ins
and
xor
test
jnp
xchg
out
xlat
dec
xchg
cmp
push
dec
mov
mov
jmp
or
push
xor
mov
lods
in
dec
add
movs
fnstsw
sub
xor
mov
adc
or
retf
ins
add
retf
xor
imul
inc
aaa
aas
call
xor
ret
ret
mov
scas
pop
je
jmp
clc
push
pop
daa
daa
sbb
(bad)
popa
add
out
(bad)
into
sbb
cmp
int
aas
popa
in
leave
mov
xchg
sbb
cmp
mov
lods
icebp
or
(bad)
dec
cmps
aaa
jo
repnz
cli
xor
icebp
fbstp
(bad)
xchg
and
(bad)
ret
mov
xor
sbb
stos
mov
xor
and
mov
popf
repz
sbb
je
dec
mov
jmp
push
push
loop
lock
or
adc
pop
aas
dec
xchg
pop
sub
add
imul
out
cmp
dec
mov
sub
jb
mov
(bad)
mov
cmps
pop
fcomp
retf
push
mov
mov
inc
and
fwait
nop
call
inc
adc
push
xchg
popf
inc
jmp
stc
adc
dec
call
mov
mov
gs
cld
imul
cld
gs
ds
push
in
cli
fdivr
in
cdq
cmp
into
inc
jb
jl
xchg
push
retf
ror
mov
adc
jno
inc
xchg
call
pop
test
cmp
push
outs
stc
push
(bad)
ja
mov
pop
das
sub
scas
aaa
xchg
jno
jb
jbe
rcr
repz
inc
pusha
test
mov
data16
popa
imul
lea
jmp
test
dec
ds
ins
xor
mov
(bad)
fld
sar
cld
push
dec
push
cmp
lods
mov
test
pop
mov
stc
push
add
call
lds
repnz
call
or
cmp
sub
push
jecxz
(bad)
cld
pop
cwde
jo
inc
leave
xchg
lock
iret
jnp
cmps
test
aam
outs
inc
mov
test
pop
(bad)
daa
xor
xlat
stc
stos
add
jbe
dec
or
dec
xchg
imul
xchg
test
mov
shr
or
jno
jne
aad
cld
mov
(bad)
pop
fstp
adc
lock
sbb
aad
jp
sbb
(bad)
retf
loop
xor
rol
inc
pop
mov
icebp
or
ret
std
or
push
icebp
and
jns
adc
movs
mov
mov
pop
es
(bad)
mov
inc
aas
(bad)
lods
jbe
xchg
ret
pop
sbb
cld
jnp
xchg
cmp
mov
adc
pop
stos
stos
mov
mov
adc
jo
fimul
xchg
enter
or
cmps
outs
dec
dec
retf
lods
sbb
xchg
mov
imul
dec
xchg
stos
out
std
mov
adc
pop
fld
test
jge
mov
cwde
adc
jmp
imul
cld
rol
arpl
pushf
and
daa
cmp
js
cmps
mov
mov
and
and
jle
adc
(bad)
or
jmp
adc
jnp
js
mov
lock
(bad)
(bad)
mov
pop
pop
in
dec
loopne
push
clc
inc
sub
in
imul
(bad)
jg
ins
daa
imul
out
aam
xor
and
sbb
mov
push
cwde
cmp
cmp
push
xchg
rcr
imul
fcmovb
xchg
jmp
jo
ja
jp
ror
add
cmp
dec
(bad)
stc
pop
push
aad
mov
xchg
mov
sbb
xchg
fld
fsub
stc
es
mov
ja
(bad)
pop
inc
and
or
cmps
xchg
cs
push
xchg
add
mov
jo
pop
sub
sahf
push
jmp
cli
movaps
add
out
dec
mov
add
sar
shl
push
ret
pushf
sub
dec
ret
push
pop
cmp
pop
dec
rol
sbb
mov
mov
(bad)
ins
repnz
xor
pushf
daa
test
push
aas
sbb
mov
(bad)
pop
in
dec
call
and
sar
adc
mov
(bad)
mov
test
xor
call
adc
nop
arpl
or
dec
push
xchg
mov
ins
in
fld
jle
push
mov
xor
push
sub
jmp
adc
and
movs
call
imul
(bad)
movs
imul
push
inc
movs
xchg
mov
sbb
dec
stos
(bad)
fsub
xchg
sahf
jo
adc
add
daa
fld
jns
and
cmps
gs
sar
sub
push
inc
fs
sbb
add
imul
pop
add
das
gs
std
out
xchg
cmps
cmp
imul
mov
adc
cmps
rdpmc
lea
out
or
fist
and
dec
or
mov
int3
mov
cli
xor
aaa
enter
jle
jle
call
mov
jge
(bad)
mov
cmp
ret
outs
jb
icebp
inc
test
mov
mov
outs
mov
pop
or
shl
dec
sub
jbe
popf
stos
ds
cmp
cmp
dec
cmc
mov
aam
cmc
nop
cmps
je
pushf
pop
add
xchg
cmps
cmp
dec
xor
fld
push
sbb
(bad)
bound
into
int3
sub
mov
mov
retf
jp
dec
push
xor
pop
mov
aas
aam
into
std
xchg
out
sar
push
aad
push
xlat
pushf
add
pop
mov
pop
cmp
and
adc
inc
push
int
clc
pop
sti
add
int
stos
add
lds
jbe
fstp
mov
push
fcmovb
pop
ret
mov
stos
and
push
fbstp
jno
cmps
(bad)
ret
sub
mov
cmp
mov
sbb
xor
pop
je
push
ret
jmp
les
add
pop
lock
mov
out
scas
stos
add
(bad)
jno
ret
es
mov
shl
push
dec
dec
std
pop
cmp
pop
pop
dec
rcr
cmp
mov
sahf
inc
xchg
dec
inc
jns
ja
or
push
mov
push
(bad)
enter
sub
jle
mov
fcom
test
jnp
fldcw
sub
jmp
(bad)
int
test
ret
ror
cmps
stos
fistp
fisubr
xchg
dec
inc
add
sub
push
mov
push
mov
mov
daa
(bad)
gs
or
adc
xchg
xor
ss
or
out
jo
inc
into
pusha
(bad)
sbb
pop
cwde
xor
fiadd
xor
xor
or
inc
jns
mov
imul
or
jle
fdivr
call
sub
sbb
gs
ja
cwde
pop
jno
inc
inc
loope
retf
pushf
std
lds
xchg
das
mov
ins
es
sub
ins
mov
push
inc
jge
gs
jge
fs
pop
stos
mov
push
retf
mov
ds
pusha
pop
ins
test
push
dec
adc
or
jno
frstor
xor
sub
inc
movs
test
ret
add
dec
xchg
pop
(bad)
divps
push
fcmovnb
in
sbb
sub
pxor
xchg
aam
adc
dec
jmp
or
mov
inc
mov
add
push
or
mov
pmullw
cmp
push
mov
ss
or
shl
call
mov
jle
dec
or
retf
jp
cmp
lahf
jo
mov
nop
sub
(bad)
das
sub
lods
test
pop
jmp
jno
jae
movs
pop
inc
add
pop
ret
loopne
mov
mov
cmp
lahf
cdq
xchg
pop
cmps
dec
sbb
in
mov
outs
cmp
push
fwait
stc
push
jno
xor
jae
push
mov
mov
loope
and
jecxz
xchg
ins
mov
in
sbb
shl
out
xchg
sbb
mov
push
pop
mov
retf
jns
cmp
(bad)
(bad)
mov
mov
xor
loope
repnz
cmp
ret
stos
sub
sub
out
sahf
or
and
je
mov
dec
shl
jmp
jne
iret
xor
or
adc
pop
fs
clc
and
jmp
arpl
test
mov
pop
xchg
pop
lahf
(bad)
std
sub
and
aas
adc
out
shr
scas
fwait
adc
shr
dec
aas
rcr
and
pusha
lahf
push
loope
jnp
cli
push
fs
(bad)
(bad)
sbb
pop
push
pop
stc
dec
add
inc
jns
ja
aas
xchg
sbb
mov
xchg
jmp
mov
addr16
mov
mov
repz
push
cmp
mov
das
ins
(bad)
stc
rol
pmullw
dec
push
leave
cld
in
add
mov
test
or
retf
jg
mov
(bad)
pop
in
ret
add
adc
iret
fimul
push
out
arpl
pushf
or
lods
and
push
sub
ds
jmp
sbb
fwait
test
dec
mov
adc
push
inc
inc
mov
push
int3
(bad)
cmp
fwait
arpl
inc
pop
xchg
cmp
clc
aas
push
xchg
and
xlat
aaa
pop
ficom
mov
mov
loope
leave
xor
xchg
mov
jle
cld
xlat
(bad)
stos
jle
scas
retf
hlt
adc
sahf
aad
push
jge
stos
movs
mov
sbb
push
xchg
pop
push
and
add
jbe
out
cmp
adc
push
mov
adc
pop
addr16
out
and
add
js
jnp
arpl
jecxz
mov
ins
fstp
push
cli
push
xchg
daa
les
jae
movs
(bad)
or
dec
call
ret
push
pop
cmp
and
mov
rcr
add
popf
jmp
mov
sub
push
cwde
sub
and
lahf
mov
inc
jp
jle
les
aad
je
cli
mov
push
inc
dec
ret
or
jns
push
in
(bad)
jle
idiv
jno
jae
pop
cmp
fadd
jge
sbb
mov
in
jmp
jg
inc
imul
dec
or
adc
jmp
cmp
push
ds
xchg
stc
(bad)
pop
rol
stos
adc
pop
cmc
ins
test
inc
jp
push
cli
pop
aad
jecxz
dec
cmp
sahf
addr16
fucomp
push
jns
xchg
adc
xor
pop
cmps
dec
cs
aad
mov
out
pusha
xor
shl
xchg
or
fisttp
sbb
dec
xor
(bad)
and
push
aas
or
or
in
push
or
ja
int
aas
inc
cmc
aas
into
mov
(bad)
stos
ins
sbb
or
fcmovne
ins
les
cmp
aaa
xor
arpl
rol
clc
jne
in
fcom
sub
sub
and
xor
xor
retf
adc
inc
sub
cmp
cmp
les
ror
les
shl
pop
(bad)
cld
sub
dec
call
and
jne
or
aam
or
mov
outs
data16
push
cmp
addr16
or
xchg
mov
icebp
or
icebp
cmp
cs
call
stos
sbb
imul
arpl
pushf
mov
outs
jb
mov
dec
mov
popa
(bad)
adc
jge
mov
inc
aad
mov
mov
cmp
pop
mov
fcmovnu
pop
cld
mov
loopne
fldcw
test
mov
pop
lods
mov
test
fiadd
iret
adc
out
dec
add
pushf
out
lds
and
mov
mov
mov
(bad)
and
mov
scas
sbb
call
jge
mov
mov
fdiv
push
(bad)
dec
fcom
push
repnz
iret
adc
sbb
or
les
dec
or
out
retf
sub
enter
mov
add
and
popa
adc
sub
dec
imul
xchg
mov
mov
out
and
int3
retf
mov
movs
enter
push
push
mov
sub
cmp
fisubr
xchg
mov
inc
push
or
pushf
sbb
mov
lea
lds
inc
aas
test
repnz
mov
sub
add
pop
outs
std
imul
dec
inc
(bad)
xchg
add
push
adc
cmp
jae
movs
xlat
jp
aaa
push
and
fs
nop
pop
es
adc
clc
nop
das
ror
push
mov
or
mov
call
mov
add
push
mov
cmp
push
dec
mov
test
xor
lods
nop
pop
dec
inc
mov
(bad)
cmp
mov
idiv
or
push
into
loop
sbb
fisubr
sub
int3
xor
fldcw
movhps
push
jmp
inc
push
int3
stc
(bad)
jbe
(bad)
cmc
ins
imul
popa
xchg
aas
ins
xchg
shl
add
mov
into
fst
xlat
dec
inc
xchg
outs
add
les
cmps
sbb
data16
imul
and
mov
std
push
and
add
mov
pop
repz
dec
sbb
dec
jmp
xor
sbb
imul
add
ret
test
repz
mov
and
sub
pop
mov
ficomp
or
ror
add
and
jmp
or
dec
add
out
ret
or
dec
mov
mov
jno
inc
(bad)
imul
loope
ret
add
cvtps2pd
icebp
out
xor
and
pop
or
sub
xor
jecxz
xchg
sar
into
and
mov
stc
clc
js
jecxz
push
les
cdq
inc
xchg
cmp
ror
nop
aaa
inc
scas
sub
adc
bound
cmp
out
push
mov
xchg
stc
movs
sub
test
retf
mov
and
mov
and
pusha
shl
aad
(bad)
adc
ins
out
xchg
mov
sahf
mov
or
shl
xor
les
inc
jmp
sbb
scas
fist
pop
cmp
jo
xchg
mov
mov
jb
mov
cmp
pusha
sbb
sbb
(bad)
aas
mov
inc
ins
jp
loopne
cmps
dec
imul
jp
stc
xor
call
inc
pop
ds
out
mov
jns
call
or
jp
retf
mov
fdiv
sbb
xor
std
and
pop
push
aam
ins
add
cdq
rcl
jnp
scas
pop
aad
inc
ret
mov
jmp
daa
fcom
cmp
cmp
pop
xchg
add
mov
jg
inc
call
stc
in
jmp
dec
lsl
das
clc
and
ins
xor
inc
or
pop
or
nop
movs
pop
ins
ror
out
mov
scas
jle
mov
add
push
add
mov
xlat
mov
mov
xchg
(bad)
outs
sbb
add
sti
dec
cmps
jle
add
test
or
sbb
hlt
xor
popf
sbb
div
ja
or
push
shl
dec
mov
(bad)
xor
add
push
int3
(bad)
ret
xchg
out
cmps
cwde
sbb
das
push
jo
pusha
xchg
cdq
mov
mov
jmp
jl
test
std
and
pop
(bad)
fnstsw
or
xchg
fistp
shl
xor
adc
jmp
xor
shr
retf
aaa
sar
imul
iret
stc
add
hlt
add
mov
mov
outs
or
xor
mov
push
push
xchg
loopne
(bad)
cmps
mov
add
and
and
sbb
rol
loop
clc
clc
add
js
(bad)
xor
ja
pop
pop
addr16
jbe
sbb
in
mov
or
into
push
jae
mov
pop
fimul
pusha
mov
out
mov
mov
rcl
xchg
fwait
repz
popf
mov
mov
xchg
ins
mov
outs
out
cli
ds
lahf
pop
mov
or
(bad)
cmp
mov
stos
mov
mov
enter
xchg
sub
jg
adc
pop
inc
retf
cmc
dec
sar
adc
xchg
or
adc
arpl
lods
mov
jno
mov
cmps
fsubr
adc
scas
pop
adc
xor
dec
mov
mov
mov
jae
inc
cs
inc
mov
stc
aam
sti
lods
xor
(bad)
(bad)
stc
adc
adc
ins
fs
xchg
fcomp
pop
xchg
test
cdq
mov
xchg
ins
leave
xor
movs
cdq
arpl
jne
out
stc
jecxz
movs
sbb
sbb
add
mov
pop
pusha
or
mov
dec
jle
(bad)
aad
dec
(bad)
mov
adc
neg
or
clc
jae
retf
pop
adc
fwait
stc
mov
fidivr
add
std
aaa
mov
sub
and
xchg
cmp
lahf
aas
cmp
jno
arpl
sub
jo
cmps
mov
push
push
mov
jl
call
pop
mov
in
cmp
jo
fs
or
pop
fmul
xchg
bound
ss
test
call
(bad)
fnsetpm(287
mov
test
loop
dec
jle
push
jmp
enter
cdq
mov
cld
jmp
mov
xlat
sahf
scas
rcr
test
xchg
ins
pop
push
pusha
sbb
pop
or
jle
les
sbb
repz
imul
ins
bound
pusha
inc
mov
jl
mov
int3
push
mov
in
test
sahf
(bad)
into
jnp
outs
or
sub
pop
ss
bound
jnp
push
pop
in
cld
stos
sbb
pop
aaa
jmp
retf
and
xor
dec
xlat
ret
pop
adc
fdiv
mov
dec
and
test
cwde
sbb
jmp
sbb
sbb
cdq
das
fcmovne
bound
mov
xor
and
fwait
call
add
call
push
in
cmp
inc
popa
sbb
pusha
nop
mov
push
(bad)
(bad)
pop
xor
ret
jmp
inc
mov
(bad)
and
mov
adc
jo
xor
js
inc
inc
inc
sub
in
cmp
jge
pop
jb
test
cdq
iret
cmp
cld
jne
scas
push
rcl
lea
scas
adc
stc
mov
cmc
imul
push
adc
test
scas
xchg
xor
xchg
stos
mov
mov
dec
jb
lea
(bad)
jbe
sub
ret
call
xchg
jnp
fiadd
popa
add
jnp
push
clc
js
adc
pop
stos
aad
outs
aam
xor
pop
imul
les
jmp
hlt
data16
shl
push
xchg
dec
jmp
push
mov
call
je
and
jns
into
dec
cwde
sbb
loope
test
xor
fldcw
push
xchg
mov
je
dec
sub
push
ficom
(bad)
push
loop
push
popf
add
and
jns
sub
or
jle
idiv
push
cmp
dec
imul
int
outs
mov
scas
jmp
sar
xlat
dec
addr16
sub
ja
out
ins
ins
sti
sub
push
mov
call
(bad)
iret
mov
sub
sub
fnstsw
dec
mov
movs
mul
test
pusha
mov
(bad)
cld
fidiv
xchg
jmp
(bad)
inc
jmp
fst
cmp
cmps
(bad)
not
push
mov
xchg
ret
xor
pop
mov
dec
mov
leave
test
rcr
pop
inc
cli
sub
inc
(bad)
cmp
jecxz
retf
push
(bad)
adc
cmp
dec
cmps
cmp
daa
xchg
js
dec
lea
cmp
rol
xchg
scas
inc
or
cmps
aad
mov
and
cmp
repnz
add
clc
mov
and
xor
lods
sbb
call
xchg
xor
cli
es
xchg
push
pop
mov
mov
or
retf
dec
xchg
cli
adc
adc
fisub
cmp
cmp
pop
push
fild
add
cs
fdivp
push
test
int3
mov
icebp
jp
aaa
loopne
inc
fild
in
sub
or
scas
lock
movs
fistp
es
(bad)
out
xchg
rcl
and
imul
loop
add
add
int3
sbb
or
adc
ss
pop
cmp
jno
jbe
or
push
pop
sbb
das
(bad)
mov
outs
std
or
pop
sbb
xchg
jnp
add
shr
imul
rcr
out
push
jnp
add
push
out
inc
aam
cld
(bad)
sti
stc
and
fs
mov
push
jnp
xchg
pop
movs
retf
sti
xchg
inc
in
sbb
jne
and
cwde
sti
scas
fsub
dec
(bad)
cmps
xor
mov
sub
repnz
xchg
aam
fcmovnbe
mov
adc
dec
fiadd
jecxz
popf
mov
mov
lods
push
mov
clc
cmp
adc
scas
std
mov
fidiv
pop
sbb
addr16
clc
pusha
nop
inc
xchg
add
es
sbb
pop
int
out
and
(bad)
pop
mov
aaa
test
jle
mov
or
out
add
and
cld
add
jo
(bad)
fwait
mov
mov
test
xor
repnz
push
push
stos
sub
xchg
popa
clc
add
and
push
imul
lods
cmp
xchg
pop
sub
or
xchg
pop
xchg
sbb
add
fucomip
mov
xchg
mov
xor
ficomp
push
mov
mov
sbb
fs
in
pop
xor
repz
jmp
ret
aaa
pop
aam
push
lods
test
mov
in
sub
fcomi
cwde
dec
xchg
test
rcl
mov
inc
adc
cli
mov
add
sbb
(bad)
std
jbe
and
rol
mov
sbb
cmp
push
xchg
mov
and
cmp
jge
addr16
(bad)
lods
cld
mov
jb
fmul
mov
pop
mov
and
add
inc
mov
test
add
rcl
pop
push
cmp
iret
int3
popf
dec
jbe
and
sbb
in
sub
jo
lahf
lods
inc
js
mov
outs
mov
lods
test
retf
jnp
js
in
sbb
and
imul
lock
cmp
sub
jbe
add
and
loope
leave
jp
jl
push
iret
mov
pop
mov
fild
push
mov
out
cmp
scas
xchg
daa
rcl
mov
mov
outs
mov
or
push
mov
test
sub
and
push
mov
aas
lds
daa
mov
adc
adc
push
inc
sets
cmp
mov
inc
push
(bad)
test
push
rcr
cmp
mov
sbb
jecxz
jmp
sub
cwde
mov
and
ret
cwde
adc
dec
push
mov
jmp
and
and
ss
jecxz
push
jp
jl
adc
das
in
adc
mov
popf
adc
ret
jne
mov
in
cmp
xchg
jb
sub
out
ja
push
std
jl
jb
jcxz
jl
dec
retf
dec
imul
cmp
outs
cmp
retf
test
push
inc
dec
cmps
sbb
clc
push
push
retf
cmp
ja
popa
adc
lock
pusha
mov
mov
adc
int
imul
sar
push
movs
arpl
ss
xchg
int3
inc
push
gs
test
ja
jg
cmp
out
xchg
out
sbb
mov
xchg
jl
sti
fcmove
dec
mov
and
or
js
scas
inc
inc
and
test
ins
jle
(bad)
ja
cmp
jl
xlat
pop
jecxz
pop
mov
cmp
pop
cmp
sbb
lods
mov
dec
ret
cdq
inc
dec
in
and
js
cmp
sbb
jbe
dec
ss
add
or
push
lds
fucomp
loope
xor
xor
inc
dec
lods
(bad)
test
cli
out
mov
data16
mov
or
int
pop
cli
in
es
push
lock
mov
int
mov
es
jne
int
sahf
aad
leave
xor
sbb
cli
pop
mov
cdq
mov
psllw
iret
cmp
pop
in
fisubr
xchg
xlat
jmp
and
retf
cmp
hlt
dec
int3
ja
sbb
mov
shr
test
das
retf
inc
ins
jnp
xor
int
stos
sub
(bad)
(bad)
sbb
mov
das
jae
push
inc
push
xor
jb
pop
cmp
int3
cdq
gs
or
inc
adc
cld
and
test
inc
out
mov
cmc
jg
jge
ret
dec
inc
aam
xchg
das
es
sub
cmp
aam
pop
scas
dec
xchg
xor
adc
jb
sub
mov
lods
jp
push
imul
mov
pop
ror
inc
push
xchg
fwait
(bad)
das
mul
mov
pop
and
xchg
mov
inc
pop
out
jns
mov
jae
cmp
fist
xchg
add
add
add
jmp
mov
(bad)
push
imul
pop
in
stos
retf
mov
imul
in
fidiv
mov
pop
mov
out
gs
sbb
lods
adc
shl
movs
inc
retf
and
jmp
test
mov
xor
mov
imul
push
lea
aad
sub
inc
pop
inc
jg
mov
and
sub
pop
mov
or
retf
ret
mov
pop
inc
push
dec
(bad)
mov
clc
push
arpl
inc
xor
xchg
mov
mov
js
cmp
cmp
scas
lahf
mov
shl
es
inc
std
xor
clc
inc
dec
or
sub
xchg
sbb
out
outs
mov
je
add
adc
ret
sbb
adc
repnz
(bad)
xlat
pop
cdq
repnz
mov
pop
sbb
jnp
inc
lock
sbb
ds
jo
xlat
in
xor
pop
jecxz
mov
fsubr
leave
pop
shl
mov
adc
call
mov
pop
in
mov
xchg
jge
inc
sub
push
lods
sbb
fs
mov
jns
bound
xchg
cmp
fiadd
fild
adc
rol
sbb
mov
test
mov
clc
sub
retf
adc
mov
loop
repnz
adc
retf
mov
mov
mov
mov
xchg
icebp
mov
and
push
call
ins
mov
js
and
in
mov
in
cmp
xor
adc
scas
call
and
lods
test
xchg
xchg
push
adc
out
mov
ror
xor
int
mov
sub
call
dec
adc
xor
mov
push
jle
mov
cmp
lods
in
in
movs
test
ja
xor
add
push
arpl
outs
xor
mov
outs
push
push
push
fwait
(bad)
jmp
xchg
(bad)
loope
mov
xchg
and
sbb
jnp
inc
or
xor
xor
retf
jne
call
loope
neg
mov
test
je
cmp
dec
jmp
test
xor
movs
popf
mov
or
scas
xchg
pop
cpuid
push
shr
or
push
in
mov
add
faddp
movs
lahf
(bad)
(bad)
sbb
cmp
shr
in
loop
xchg
jle
mov
jecxz
in
xor
jnp
aam
(bad)
sub
jae
dec
hlt
pop
shr
stos
fld
sbb
dec
shl
mov
mov
dec
push
jge
int
(bad)
jnp
scas
adc
sbb
adc
in
es
inc
test
push
mov
pop
mov
mov
loopne
cmc
out
cmc
mov
xor
jle
lahf
test
and
or
cmps
lods
clc
sub
and
data16
xchg
sub
jnp
and
jo
leave
xchg
mov
adc
or
inc
retf
mov
cmovl
or
in
cdq
mov
pusha
stos
xchg
adc
test
push
mov
jo
mov
push
mov
neg
pop
jg
nop
bound
fwait
mov
or
or
sbb
sbb
pop
xchg
inc
shr
fimul
enter
inc
into
lea
(bad)
push
cdq
movs
jge
and
fwait
xchg
fist
enter
stos
adc
adc
adc
out
sub
aas
jns
adc
pop
mov
popf
jne
pop
rcr
in
les
xlat
cmp
int
pop
je
lods
mov
xor
cmp
mov
pop
sub
shr
inc
pop
add
aaa
xchg
sbb
out
shr
mov
add
in
je
jg
jl
inc
cli
lds
jle
ret
int
push
iret
orps
pop
jg
imul
(bad)
dec
ja
push
int3
sbb
sbb
aas
or
jle
cmps
sbb
addr16
call
fstp
imul
rol
pop
mov
outs
rep
int3
or
jmp
popf
pusha
dec
inc
xor
ss
ins
lods
xlat
daa
imul
cdq
mov
stos
call
cmp
push
sub
std
lds
ret
(bad)
xchg
push
rol
stc
loop
or
jle
cdq
jnp
je
scas
mov
dec
mov
out
dec
xor
xor
xor
dec
pop
dec
pavgw
dec
test
pop
fdiv
scas
mov
lahf
icebp
add
sbb
mov
mov
jbe
aaa
int3
push
mov
movs
add
out
in
int
aam
adc
mov
lahf
mov
retf
mov
pop
icebp
jge
fstp
and
fmul
mov
pop
aad
stos
fadd
jnp
repz
test
cmps
mov
or
fsubr
xchg
or
in
xchg
fwait
ins
outs
(bad)
les
sbb
imul
scas
leave
pop
jle
in
sub
dec
push
dec
in
(bad)
fdivr
repz
ror
aaa
adc
sbb
popa
jge
div
pop
(bad)
adc
add
pop
cs
ins
imul
add
fdivrp
and
cli
xor
mov
out
mov
mov
es
sbb
cmp
in
cmp
add
pop
bound
xor
fstp
cmp
mov
fdiv
es
(bad)
ds
jb
dec
into
mov
and
loope
call
imul
fbstp
push
inc
test
fstp
pop
ret
jo
ficomp
jbe
adc
outs
pop
push
xor
push
mov
ret
fdiv
outs
xlat
add
in
jbe
(bad)
hlt
sub
imul
dec
cdq
mov
pop
outs
add
int3
inc
fucomi
lock
mov
xor
cmp
xchg
jb
scas
movs
add
inc
jp
ror
rol
inc
loop
loope
test
jle
stos
pop
stos
mov
adc
rcl
pop
fcomi
and
stos
ficom
leave
mov
adc
xchg
lea
mov
test
cmc
xchg
push
(bad)
pop
stos
mov
mov
shr
sub
cs
dec
rcr
cli
sub
mov
shl
inc
pop
nop
xor
inc
rcr
test
push
and
imul
je
mov
mov
mov
sub
mov
mov
mov
jne
or
lea
xchg
sahf
out
adc
adc
cmp
sub
lock
xor
test
jmp
push
push
push
ss
das
push
bound
in
dec
ror
inc
imul
mov
aaa
add
scas
scas
pop
icebp
iret
mov
inc
mov
cmp
mov
dec
ss
loop
(bad)
ds
and
fisubr
xchg
add
hlt
xor
dec
in
add
pop
push
mov
push
test
inc
cmp
pop
sub
mov
rol
js
(bad)
je
stc
daa
mov
mov
and
xor
pop
xchg
mov
cwde
scas
movs
repnz
dec
pop
push
xor
shl
dec
jp
aaa
fcom
movs
in
arpl
call
xchg
mov
xchg
stc
mov
adc
ficom
cmp
pop
xor
aad
cmp
adc
mov
loope
pop
lahf
inc
jge
das
pop
test
pop
out
ins
mov
sub
xchg
adc
js
and
popf
sub
cmp
loope
inc
out
popa
repnz
shl
ret
retf
jnp
inc
loop
rcl
retf
in
cmp
ss
dec
loopne
loopne
xchg
jo
cwde
rol
sub
into
out
pop
lods
dec
xchg
loope
out
dec
aam
mov
jmp
mov
stos
mov
mov
fld
pop
push
sbb
ins
and
adc
dec
dec
stc
movs
pop
fstp
inc
xlat
jae
mov
xchg
imul
mov
sbb
xchg
pop
retf
mov
mov
cmp
sbb
cmp
data16
bound
jae
es
leave
fwait
mov
push
fcmovnbe
jnp
loope
mov
add
jno
repnz
scas
jno
cld
xchg
mov
movs
dec
sbb
retf
test
gs
sbb
cmp
scas
mov
dec
xor
jbe
push
sub
xchg
mov
sbb
sahf
sbb
and
mov
call
mov
out
aad
popa
popf
popf
das
adc
add
dec
push
retf
sbb
sub
push
or
js
hlt
inc
mov
cmps
add
xchg
dec
lods
mov
mov
lock
dec
lahf
xchg
stc
es
leave
xor
arpl
aad
in
out
mov
fsub
aas
xchg
adc
sbb
retf
dec
dec
pop
idiv
lock
adc
mov
xchg
inc
imul
push
jecxz
inc
dec
jbe
cmps
mov
call
push
sbb
sub
add
mov
(bad)
push
mov
adc
mov
and
mov
cmps
mov
hlt
sbb
sti
push
(bad)
popf
xor
stos
adc
and
mov
xchg
cmp
fisubr
sar
mov
in
fdiv
and
sbb
mov
jle
icebp
mov
mov
int3
test
mov
hlt
sahf
pushf
ret
icebp
add
xor
in
fwait
add
pop
cmp
xor
pop
xor
push
mov
ins
add
test
pushf
loopne
aam
ja
popf
dec
out
push
jns
and
(bad)
adc
movs
test
mov
pop
cmc
sub
test
inc
sub
arpl
pop
(bad)
cdq
bound
or
xor
cdq
sub
ficom
test
inc
sbb
sub
in
jo
mov
jne
out
bound
iret
out
sub
mov
or
mov
(bad)
out
shr
push
or
aas
test
test
hlt
out
cmp
mov
pop
sub
jae
pop
imul
inc
(bad)
pushf
jo
in
push
sbb
in
out
in
mov
inc
dec
push
xchg
shl
lock
je
lods
xor
cmp
arpl
jnp
and
dec
sub
dec
xor
sub
cmp
mov
mov
out
stc
aam
pop
cld
fcom
inc
sbb
int3
sti
std
in
mov
int
pop
add
enter
out
xchg
icebp
and
ds
movs
fwait
jl
shl
jg
inc
mov
pop
fnstenv
outs
mov
movs
out
das
push
mov
iret
pushf
jo
mov
pop
dec
push
xchg
push
popa
mov
cmc
cwde
int
out
sub
jmp
cmc
dec
xchg
push
push
fmul
mov
push
xor
sbb
loope
leave
adc
xor
push
outs
(bad)
fsub
sbb
jmp
mov
push
add
jl
lock
mov
test
sub
cmps
fld
push
push
pop
inc
cmps
jae
aam
fidivr
dec
cmp
arpl
push
fmulp
inc
pop
std
sub
mov
or
add
sbb
popf
call
add
sub
data16
sbb
dec
mov
mov
inc
cld
pop
test
mov
pop
retf
enter
adc
out
and
push
add
popf
ins
inc
mov
xor
lods
adc
xchg
and
pushf
fwait
jmp
cmps
rcl
jecxz
bound
aad
shl
mov
and
pop
aam
div
xchg
rcl
sub
add
sub
daa
mov
aas
mov
adc
stc
test
je
push
sbb
xchg
mov
loope
xlat
sbb
std
out
adc
fcmovnb
imul
adc
inc
mov
out
jp
ds
addr16
mov
loop
imul
cli
push
xor
mov
push
sbb
add
sub
cmp
test
ffreep
in
stc
inc
xchg
aam
stc
sbb
repnz
jp
leave
daa
cmp
sbb
shl
dec
dec
cmps
test
add
(bad)
shr
sbb
push
std
nop
sbb
sbb
(bad)
and
lock
sbb
sbb
ins
in
cdq
in
es
jbe
fld
iret
das
mov
ja
test
cmc
aad
mov
dec
sbb
cmp
cmc
fcomp
mov
xchg
cld
mov
shr
aaa
imul
sub
push
ins
push
mov
pop
pop
sub
mov
movs
out
stos
rcr
lahf
lods
rcr
(bad)
xchg
xor
repz
bound
js
aaa
lods
sub
dec
cmp
cwde
fdivr
jl
imul
(bad)
or
aad
mov
dec
cld
ja
add
pop
and
sub
into
mov
test
(bad)
or
xlat
adc
jmp
out
jp
push
ss
fistp
or
add
movs
and
jmp
dec
and
ds
popa
dec
mov
data16
sbb
cli
mov
lds
xlat
inc
inc
mov
push
in
add
cmc
sbb
jb
mov
es
jmp
leave
std
call
ss
adc
xchg
ja
out
add
loop
and
jbe
in
fucom
inc
jmp
loope
aad
cdq
xchg
ror
xchg
or
rcl
or
mov
fsub
out
out
xchg
mov
xchg
adc
das
scas
mov
or
jg
xchg
mov
imul
jne
jb
add
or
in
jmp
ret
xor
cmps
and
pop
orps
lods
xchg
push
test
les
test
punpckhdq
lods
push
mov
mov
stos
jns
pop
cld
jp
push
xor
cmp
add
cmp
sub
jns
(bad)
fsub
cmp
lock
leave
jb
jmp
add
dec
dec
aaa
ret
jnp
mov
les
repz
(bad)
(bad)
stc
js
push
into
pop
sub
sub
push
sbb
sahf
mov
out
mov
pusha
call
sub
movs
push
vpmovq2m
inc
data16
cmp
jmp
and
out
sbb
sbb
pop
pop
pop
lds
loopne
(bad)
fadd
inc
and
push
retf
lock
(bad)
adc
adc
je
mov
arpl
mov
sbb
jb
pop
cmp
dec
imul
jmp
xchg
(bad)
push
fdiv
xchg
mov
ret
mov
jbe
addr16
loope
push
addr16
lods
cvtpi2ps
inc
loopne
stos
jno
xchg
mov
ror
dec
jge
push
imul
leave
dec
sbb
or
cmp
xor
ds
sub
mov
jmp
(bad)
movs
sbb
daa
jns
jmp
cli
retf
das
mov
lea
pop
outs
xchg
push
xchg
pop
jmp
es
sub
push
les
mov
xchg
mov
cmp
push
movs
cmp
cmp
jecxz
jbe
fcomi
adc
jp
cmp
inc
rcr
stc
mov
sub
movs
sar
xor
test
gs
je
iret
ret
(bad)
out
xchg
fmul
mov
ficomp
(bad)
int
jne
jbe
jae
(bad)
mov
mov
dec
imul
stos
out
mov
xchg
cmp
jne
iret
inc
loope
aad
pop
pop
inc
pusha
jns
mov
or
or
cwde
fs
add
adc
lds
ret
fs
leave
adc
in
and
lods
sar
ret
pop
les
xchg
fnstenv
(bad)
sar
loope
and
jecxz
addr16
scas
enter
push
jmp
call
mov
fdivr
push
sbb
(bad)
inc
dec
sti
push
loopne
mov
pop
arpl
sub
pop
in
mov
push
sub
imul
mov
cmps
iret
loope
ins
std
inc
int3
jo
std
push
test
xor
jnp
stc
inc
test
in
push
jns
cs
xchg
mov
pop
add
adc
push
dec
cld
loop
sbb
sub
push
shl
outs
jle
enter
sub
add
fnstsw
and
dec
xchg
pop
push
xchg
mov
cmp
in
xchg
add
push
and
mov
loope
xlat
add
enter
mov
call
jno
pop
mov
sub
add
sbb
xchg
xor
lds
daa
(bad)
pop
scas
nop
or
cmp
pop
add
into
and
bound
sub
out
dec
in
fwait
sub
(bad)
fcomp
loope
test
lds
test
ins
xchg
imul
jnp
lahf
mov
push
call
fstp
iret
jle
jge
call
mov
sub
push
shr
dec
cmp
mov
inc
lock
xchg
repnz
ins
mov
test
mov
sbb
mov
mov
or
add
test
mov
popa
sar
frstor
jge
in
hlt
sbb
das
cmps
xchg
outs
xlat
les
xlat
mov
sub
pop
adc
jp
popa
adc
shr
ds
rcl
adc
pop
fs
sti
(bad)
mov
xchg
test
dec
out
jb
cld
popa
outs
pop
cmp
in
pusha
mov
push
je
xchg
retf
sub
sub
dec
into
popa
rcl
mov
jmp
pop
cmps
mov
call
mov
sbb
fmulp
and
inc
and
aaa
std
pop
sub
aad
ror
pop
jbe
fmulp
les
call
scas
rcl
or
push
jmp
xor
sahf
mov
pop
inc
or
xchg
or
in
sub
ret
add
jo
pop
clc
jae
mov
sahf
jl
or
cmp
sar
push
dec
mov
pop
sub
ins
scas
pop
push
popf
jl
std
popa
rcl
lea
out
test
mov
pop
push
push
cs
fdivr
(bad)
mov
inc
xchg
cmp
adc
xchg
imul
rol
push
and
pop
int3
push
inc
xchg
rcl
arpl
inc
xor
add
push
xchg
add
stos
inc
fst
les
push
in
outs
in
retf
inc
jmp
jae
retf
xchg
pop
jo
scas
ds
jae
(bad)
mov
mov
lods
mov
xchg
or
xchg
lock
xor
repnz
stos
xchg
retf
fs
fcmovnbe
popa
sub
dec
mov
fldenv
add
mov
dec
frstor
pop
xchg
loopne
mov
les
mov
xchg
jecxz
adc
pop
push
mov
sbb
add
dec
dec
xor
jp
sub
pop
cmp
xor
xor
mov
jp
mov
xor
retf
xchg
mov
cmp
out
xlat
dec
push
cmps
mov
xor
out
sub
and
call
xchg
lea
enter
inc
mov
inc
mov
(bad)
pusha
xor
not
mov
fnstsw
sbb
aas
xchg
scas
stos
fcmovbe
inc
aad
ret
sub
push
inc
and
ins
mov
in
movs
jno
xchg
xor
enter
lahf
dec
dec
sbb
or
popf
mov
ds
aaa
or
test
dec
inc
iret
and
fidivr
das
xchg
sub
lahf
sahf
jl
iret
outs
xchg
cli
inc
jge
std
adc
push
test
jp
inc
dec
adc
mov
sbb
pusha
dec
jno
iret
xchg
cmp
shl
inc
push
pushf
aas
into
mov
push
(bad)
jg
mov
sbb
jnp
add
bnd
jnp
dec
mov
nop
xor
adc
jae
clc
cmps
jno
aam
nop
push
jmp
aas
loopne
or
fst
daa
push
(bad)
pusha
and
jb
mov
mov
repz
fist
scas
cmc
ja
cmp
into
sub
mov
lds
pop
bound
push
and
fdiv
add
test
aad
pop
and
sbb
pop
inc
scas
inc
push
addr16
gs
dec
test
cs
repz
jnp
or
push
push
ror
sub
lods
cs
test
pusha
inc
adc
or
jmp
add
adc
cmps
rol
push
mov
jecxz
je
outs
xor
push
test
mov
mov
mov
or
inc
add
pop
and
(bad)
pop
cmc
or
shl
jmp
cmp
mov
xor
mov
mov
sub
and
cmp
jns
jb
fstp
inc
jg
rcr
push
inc
out
ins
add
xchg
push
jg
adc
rcl
dec
dec
cmps
sbb
jecxz
cmps
mov
(bad)
std
lods
(bad)
jbe
dec
push
sub
mov
fstp
mov
movs
push
outs
add
addr16
ror
cmp
div
lods
jg
gs
mov
in
sub
sub
mov
call
jmp
in
cmps
jecxz
mov
fwait
sub
xor
sub
inc
push
ror
sbb
movs
test
mov
gs
xchg
pusha
fnstenv
sub
jge
inc
jb
jnp
pop
popa
jmp
fistp
iret
lea
pop
xchg
jle
dec
mov
je
cs
mov
xor
lods
add
stos
sbb
pop
xchg
add
xor
pusha
in
sbb
mov
adc
stc
jmp
adc
and
rcr
(bad)
fiadd
or
shr
outs
sub
adc
inc
cdq
(bad)
mov
pop
mov
fnstsw
fadd
lds
mov
dec
push
stc
dec
rcl
fcmovnb
mov
jmp
lock
inc
sar
xor
jnp
shr
sahf
mov
push
jne
aas
mov
sbb
(bad)
repz
mov
fld
add
push
mov
repnz
xchg
ret
rcr
movs
movs
out
mov
mov
fcomp
nop
cwde
int
enter
lea
lock
push
pop
cmp
jno
inc
aad
enter
loope
outs
lods
inc
push
push
cmps
dec
mov
ins
cmp
popf
shr
je
clc
pop
dec
pavgb
add
and
stc
xchg
loopne
fs
xor
sub
xchg
int
mov
lods
test
ret
jnp
imul
pop
retf
jo
shl
sti
loope
jmp
int3
jmp
sbb
push
cs
movs
jo
push
stc
hlt
pop
sbb
cmp
psubusw
out
mov
cmp
cmc
cmps
cmp
imul
into
test
jnp
mov
stc
cmp
fimul
mov
sub
cmp
jno
fsubr
movs
ins
stos
aaa
loop
popf
adc
mov
icebp
pop
cmp
scas
test
mov
mov
fnclex
mov
lds
inc
add
test
pop
jmp
cmc
scas
cmc
pop
jg
cmp
movs
inc
lahf
inc
mov
xchg
xor
jnp
(bad)
in
mov
inc
xchg
inc
sbb
jle
mov
push
repz
dec
and
sub
scas
das
loope
xchg
sbb
popf
aad
mov
jmp
sub
dec
fbld
test
sub
push
rcr
sti
in
push
xchg
sbb
cmp
xchg
hlt
movs
loope
sbb
jns
es
add
daa
jnp
jg
and
mov
clc
daa
pop
loop
and
gs
and
push
xor
add
test
push
jle
sub
repnz
mov
lods
scas
das
mov
or
imul
push
cmp
fisttp
into
aad
push
sub
sar
enter
cmovns
loope
in
repz
mov
inc
pushf
in
dec
in
or
mov
idiv
ror
inc
les
ret
xchg
pop
sbb
stos
or
mov
cmp
xor
pop
mov
mov
inc
push
sub
xchg
add
add
or
cmc
adc
mov
mul
inc
sbb
pop
jp
loopne
add
ins
mov
mov
jnp
xlat
dec
xchg
add
fdivr
jmp
jb
pop
sub
xor
cwde
stos
gs
sub
sbb
jns
push
je
fiadd
repz
jmp
xlat
adc
lahf
mov
daa
push
into
jl
inc
cld
push
add
dec
(bad)
leave
cli
loop
aas
imul
lods
fwait
dec
dec
or
lea
das
cmps
sbb
(bad)
fwait
pop
jns
test
mov
ret
enter
cmp
loop
push
pop
ds
test
movs
dec
ret
into
adc
xchg
inc
bound
mov
(bad)
cwde
jp
cmps
ss
scas
mov
jne
out
and
shl
sub
stos
in
jmp
or
mov
push
push
add
stc
js
outs
or
jmp
add
push
push
xchg
lds
cmps
push
sbb
in
mov
or
icebp
and
pop
gs
add
nop
test
push
shr
shl
xchg
in
fstp
mov
out
jb
fldcw
and
mov
ss
stos
idiv
pop
into
in
movs
popa
std
mov
push
mov
mov
lock
xor
mov
ret
jae
jnp
xor
cmp
jle
ret
jmp
mov
pop
xchg
test
sahf
mov
pop
mov
add
push
jl
cmp
sar
not
mov
and
ss
sahf
mov
aam
xchg
mov
outs
sbb
adc
and
add
icebp
js
and
cmp
xchg
movs
stc
cmps
jecxz
mov
mov
jl
sahf
and
adc
out
pusha
imul
xchg
ins
call
mov
fwait
test
cmp
scas
adc
mov
mov
and
frndint
and
mov
xor
mov
scas
or
sahf
sub
xchg
out
scas
cmp
dec
mov
sbb
das
jg
inc
or
cmp
pop
aas
je
out
jmp
jmp
ins
pop
jne
shl
xor
lds
inc
addr16
xchg
push
cmp
es
mov
cli
mov
aad
daa
test
out
add
or
pushf
jge
icebp
push
data16
jp
fcom
mov
(bad)
cmc
stos
repnz
and
push
add
test
mov
mov
xchg
ret
sahf
mov
cmps
jmp
jae
or
xor
vpmulhw
jo
cmps
inc
lods
movs
ss
fadd
gs
push
call
mov
sub
mov
fld
mov
fcom
xor
(bad)
dec
retf
sbb
xor
cwde
jae
jg
and
add
push
or
push
jne
sbb
or
jmp
lahf
enter
add
push
push
mov
sbb
daa
sar
xchg
or
inc
mov
cli
hlt
stos
mov
imul
(bad)
cmps
sub
push
scas
adc
mov
call
pop
sbb
push
rcr
test
cli
push
leave
inc
call
fxtract
test
xchg
and
xchg
mov
scas
int
leave
retf
pushf
push
or
inc
sub
xor
cmc
or
and
pop
pop
cmp
xor
and
imul
cvtpi2ps
cmps
and
sub
mov
das
mov
fsub
enter
inc
popf
mov
loop
sbb
jae
cmp
stc
xchg
sbb
(bad)
push
les
jb
lahf
xor
das
shl
enterw
fnstsw
out
adc
fwait
or
daa
mov
fsubp
imul
adc
shr
arpl
sub
fdivr
lock
jmp
xchg
and
mov
mov
jecxz
popa
movs
(bad)
jno
imul
(bad)
icebp
and
fwait
or
mov
mov
xchg
add
fcomp
int3
mov
inc
dec
cmp
mov
out
ss
adc
stos
push
dec
cdq
push
inc
daa
dec
pop
pop
fld
cmp
jnp
add
dec
mov
arpl
test
mov
push
mov
jo
pop
cwde
daa
adc
push
outs
adc
and
(bad)
fisubr
jns
and
push
lock
or
(bad)
pop
ror
pop
pusha
stos
mov
(bad)
in
fxch
xlat
rcl
jae
adc
mov
(bad)
jecxz
or
mov
loopne
js
arpl
and
push
fucom
add
mov
sub
ret
mov
lahf
pop
leave
fild
sbb
(bad)
pop
stc
adc
pop
add
jne
add
arpl
xor
inc
or
push
ss
jns
movs
mov
mov
hlt
pop
adc
(bad)
mov
into
cs
sbb
mov
mov
pop
sub
jno
ss
sub
inc
xchg
ficom
mov
daa
sub
ret
cmp
mov
mov
fs
jbe
test
leave
sahf
aam
pop
int
mov
ror
push
jns
(bad)
dec
aam
sbb
jl
retf
sub
ja
mov
adc
bound
fcmovnb
push
push
lods
fld
and
ins
mov
fs
and
push
fidiv
dec
ins
cli
scas
test
fldenv
mov
mov
pop
inc
pop
stos
jmp
scas
pop
bound
xchg
sub
fdiv
jp
(bad)
in
pop
sbb
sub
jbe
lods
aaa
jb
or
jle
dec
retf
in
add
push
mov
add
mov
mov
retf
retf
mov
outs
mov
repz
cmc
movs
push
xchg
imul
popf
or
jnp
out
jle
unpcklps
retf
mov
pop
adc
lock
movs
xchg
mov
inc
ret
aam
int3
stos
mov
leave
xor
sub
jnp
cmc
enter
and
jb
ja
sbb
leave
fidivr
xchg
(bad)
aad
test
daa
enter
shl
push
fnsave
int3
call
xor
aad
ret
nop
ror
inc
adc
fistp
jmp
mov
push
cmp
push
and
dec
cmps
pop
cli
jg
xor
push
fisubr
mov
scas
jg
sub
cmps
mov
jnp
pushf
aad
dec
xchg
aam
adc
inc
les
sbb
xor
iret
dec
add
mov
popf
popa
mov
sub
xor
aas
aaa
and
mov
pop
outs
icebp
push
pop
jae
pop
cmps
push
push
faddp
stc
in
cmp
mov
(bad)
dec
movs
fwait
mov
mov
sar
cmp
xchg
mov
cmp
js
mov
not
test
call
cdq
cmp
ficomp
sub
sbb
sbb
imul
ret
imul
scas
cmp
push
pop
pop
stos
frstor
cwde
inc
es
pop
sar
ins
test
pop
pop
dec
(bad)
and
cmp
inc
mov
hlt
lods
pop
stc
inc
adc
sbb
lea
inc
int3
pusha
cmp
adc
ss
cmp
inc
mov
scas
add
adc
lahf
push
push
push
jmp
xchg
xchg
xchg
and
loop
adc
sbb
punpckhwd
jge
movs
inc
sub
loop
cli
ds
test
shl
push
push
sar
mov
outs
sub
dec
jle
adc
daa
outs
loope
xor
les
aas
lock
sbb
inc
daa
sbb
in
hlt
push
push
mov
dec
inc
xchg
pusha
loope
mov
xor
clc
pop
sbb
aad
push
popf
inc
popa
in
xchg
jmp
test
movs
outs
inc
fwait
pop
mov
dec
daa
xchg
jp
and
sub
test
pushf
pushf
out
pop
movs
rcr
sub
mov
dec
xor
rol
stos
ins
sub
daa
mov
inc
ret
push
add
ja
ret
cmp
cli
test
mov
jmp
jns
jno
scas
xchg
and
jo
fwait
idiv
fdivr
(bad)
neg
pop
ficom
mov
pop
ins
fild
jbe
sbb
cli
inc
imul
es
lahf
out
xchg
xor
inc
or
fucom
adc
jne
pop
loope
iret
mov
cmp
sub
inc
xchg
not
push
stos
cli
ja
push
jno
enter
gs
lea
hlt
pop
in
cwde
inc
sti
ss
jbe
add
ds
pop
push
xor
mov
data16
dec
add
xor
test
add
mov
xor
xor
loop
mov
inc
add
push
shr
outs
push
cdq
add
sub
lahf
ror
jmp
mov
add
inc
test
dec
mov
or
mov
pop
pushf
fwait
test
jnp
mov
fcomip
movs
sti
popa
ret
mov
fcmovnu
js
scas
mov
daa
xchg
loop
jmp
inc
xor
lods
dec
push
(bad)
in
(bad)
add
xchg
enter
mov
pop
cmovbe
sbb
jge
inc
and
stc
es
or
outs
and
mov
jmp
or
lods
add
jmp
jno
cli
cmp
pop
xor
movs
push
xchg
adc
popa
add
push
xlat
adc
jo
sbb
jae
push
out
test
ret
fld
pop
and
xchg
mov
adc
fmul
jbe
xor
or
clc
mov
xor
adc
in
bound
push
pop
jnp
mov
mov
es
ss
fild
and
inc
es
sub
je
sbb
in
int3
rcr
js
xlat
mov
pop
xor
jmp
push
int
push
lea
sub
inc
xchg
es
mov
jmp
loop
retf
push
test
ret
fdiv
pop
gs
push
lock
mov
mov
jns
jnp
pop
xor
jmp
jmp
enter
mov
pop
adc
or
sbb
(bad)
mov
ja
push
sub
mov
xchg
ret
cmp
jg
push
jg
inc
adc
add
push
int
jbe
mov
loope
adc
mov
(bad)
mov
(bad)
cmp
stos
sbb
add
add
(bad)
dec
sub
add
sbb
cmp
(bad)
push
inc
jno
out
pop
inc
xchg
xor
hlt
mov
retf
fs
sbb
ss
popf
inc
les
adc
stc
movs
pop
push
jmp
nop
xchg
dec
jbe
ja
mov
dec
inc
stos
(bad)
fld
sbb
add
xchg
inc
jl
xor
xchg
sub
dec
or
(bad)
imul
fadd
pop
les
ss
imul
lods
cmps
test
or
jo
mov
fistp
popa
mov
add
pushf
jno
rcr
js
js
shl
jne
and
push
popf
add
xchg
movs
jne
push
shr
gs
dec
lahf
jae
lods
aaa
add
ins
xchg
inc
fcomp
and
lods
(bad)
sub
jle
jbe
mov
push
xlat
push
test
jno
ins
ficom
sbb
mov
(bad)
sbb
inc
mov
mov
mov
add
mov
xor
xor
cmps
adc
sub
icebp
adc
xchg
push
sub
test
mov
or
cwde
daa
imul
inc
addr16
and
xor
mov
pop
seta
outs
mov
mov
push
imul
outs
jae
loope
mov
cmp
js
out
jbe
ds
lock
test
(bad)
scas
adc
jno
fs
aas
jmp
test
stos
stos
lea
nop
sub
shr
mov
push
mov
pusha
xchg
addr16
adc
sub
adc
ja
pop
dec
lahf
movs
popa
lods
test
inc
cmp
xchg
push
lahf
jmp
mov
imul
jmp
and
jmp
and
pop
fld
mov
je
dec
cdq
cmp
dec
inc
inc
in
ja
pop
retf
ins
nop
jno
ds
(bad)
and
or
mov
cmp
and
mov
or
icebp
ss
in
dec
(bad)
sub
iret
movs
pop
aad
xchg
clc
dec
mov
push
sub
cmp
mov
movs
test
cwde
sti
and
loopne
cmp
not
loopne
pusha
xor
dec
ss
lea
push
fwait
call
pop
xor
shl
into
daa
adc
xor
xchg
push
sahf
xor
xor
mov
mov
mov
mov
dec
loopne
fild
aad
inc
sub
lds
xor
outs
loope
(bad)
ja
in
adc
(bad)
xchg
fs
scas
or
imul
icebp
pop
push
xchg
pop
mov
push
dec
inc
stc
adc
bound
sbb
push
add
add
xchg
push
frstor
ja
and
push
push
pop
push
pop
out
retf
add
inc
test
lock
xchg
push
inc
mov
jb
cmp
fisttp
lods
test
jl
nop
inc
sub
jmp
aaa
cdq
push
aam
sub
out
les
ds
mov
bswap
hlt
xlat
adc
(bad)
retf
mov
repz
out
dec
cwde
push
jmp
push
add
and
js
or
dec
inc
cwde
inc
xlat
stos
jno
xchg
cwde
movs
add
jmp
ins
jns
cmp
xchg
sub
fdiv
sbb
add
jns
lods
ds
fnsave
inc
test
adc
dec
pop
jbe
adc
daa
mov
pop
adc
into
or
clc
or
add
inc
lods
mov
lahf
adc
not
into
mov
imul
xchg
or
aad
dec
adc
adc
or
jmp
cld
xchg
adc
stos
movs
mov
shl
mov
int
or
dec
push
adc
pop
pop
sbb
das
inc
lds
xchg
loope
outs
mov
mov
repz
sub
jle
retf
mov
mov
mov
and
popa
cmp
or
ret
cmp
pop
jecxz
inc
cli
(bad)
and
test
inc
loopne
push
jl
mov
fsubr
mov
outs
lahf
imul
retf
ror
aad
mov
into
ja
out
test
sub
push
add
cmp
sub
xchg
xor
mov
psubw
scas
dec
sbb
(bad)
push
sbb
out
repnz
sub
sbb
movs
xchg
push
sti
mov
in
sub
(bad)
rcl
(bad)
ss
mov
aas
push
int3
repnz
xor
scas
call
mov
test
sbb
(bad)
je
or
push
loop
rcl
xchg
pop
outs
cmp
cmps
sar
(bad)
sub
lods
xor
cli
ret
outs
pop
mov
call
icebp
pop
xor
int3
jne
add
or
imul
and
outs
ret
ds
push
push
cmp
jecxz
fst
ins
mov
xchg
and
mov
push
and
or
inc
ss
adc
mov
add
push
inc
dec
and
(bad)
retf
sub
mov
cmps
arpl
pop
or
jge
xchg
enter
adc
or
add
lahf
loopne
pushf
inc
inc
ja
addr16
dec
adc
shl
int3
hlt
mov
in
push
add
ret
xchg
mov
mov
and
adc
out
and
adc
pop
and
fisubr
fld
pop
push
dec
test
jmp
fld
and
cld
stos
daa
jg
loopne
fldcw
sti
and
cmp
xor
pop
xor
mov
jmp
and
sbb
jle
jle
(bad)
xor
jle
lahf
sbb
mov
gs
scas
idiv
aad
aaa
cmp
jge
call
xchg
or
sub
sbb
neg
ds
repnz
push
push
inc
dec
loop
xchg
inc
stc
mov
sbb
stos
or
sbb
inc
loop
inc
mov
mov
sub
cmp
call
addr16
and
outs
scas
shl
and
int
aam
push
lock
mov
stc
int
cmp
movs
jbe
mov
(bad)
ficomp
mov
mov
movs
sbb
inc
sbb
adc
dec
jg
aam
push
pop
inc
xchg
or
(bad)
or
out
add
xor
cld
add
cdq
xchg
leave
jmp
mov
fild
mov
push
jne
inc
xchg
rol
pop
in
(bad)
push
les
aam
mov
aas
xor
shl
sub
and
loopne
xlat
mov
adc
xchg
cmp
xlat
mov
movs
movs
repz
xlat
sub
mov
jle
div
pop
sahf
xchg
outs
adc
jno
or
js
xlat
jo
push
leave
jmp
and
imul
cmp
adc
aam
mov
mov
inc
dec
clc
push
sbb
jle
push
and
cmps
jmp
call
and
xor
movs
sub
xchg
xlat
mov
push
mov
xchg
push
push
jmp
pop
dec
outs
sbb
loopne
adc
push
call
cmp
cmp
clc
and
cmps
and
push
(bad)
repz
jbe
and
test
or
(bad)
mov
rcr
lahf
mov
pusha
inc
fmul
sub
lods
add
pop
sbb
mov
and
mov
js
call
cmp
jbe
or
adc
hlt
adc
cmp
das
jno
lahf
jb
out
(bad)
mov
xlat
ins
mov
gs
adc
ss
mov
push
sbb
xchg
inc
cwde
adc
arpl
stos
adc
add
in
jecxz
retf
jb
add
rcr
xor
add
sub
or
mov
pop
call
push
mov
sub
lahf
iret
push
sub
sbb
fwait
sub
and
push
mov
xchg
clc
leave
cmps
in
(bad)
std
add
movs
cmps
xor
sbb
(bad)
cmp
mov
cwde
je
push
pop
out
lods
mov
inc
mov
xchg
fimul
inc
add
in
imul
push
mov
pop
mov
jns
mov
into
pop
fimul
(bad)
outs
rcl
push
push
adc
fild
das
mov
add
in
stos
mov
addr16
out
mov
cmp
jmp
(bad)
cld
cld
aaa
data16
cmp
xchg
mov
jp
jo
push
lahf
retf
jns
outs
cdq
sub
pop
fs
gs
cdq
bound
jmp
and
stc
pop
sub
push
call
enter
in
ja
and
repnz
es
mov
cmp
bnd
retf
sub
fist
sub
sti
clc
shl
push
push
pop
jb
retf
cmps
ds
retf
mov
sti
fmul
cmp
push
cld
push
pop
xchg
and
inc
and
enter
mov
into
in
ret
push
lea
lahf
sub
loopne
les
pop
mov
loop
and
pushf
mov
xchg
and
retf
lahf
mov
add
add
gs
dec
xor
push
add
(bad)
out
retf
add
xor
push
dec
mov
out
lods
mov
dec
sbb
int3
fsub
leave
arpl
dec
sub
push
mov
adc
(bad)
mov
push
mov
and
sti
and
mov
cmps
out
(bad)
dec
adc
movs
pop
sub
fisubr
into
mov
sti
nop
jno
not
fild
fsub
sbb
mov
xor
retf
or
outs
aam
ficomp
mov
xor
lds
ror
mov
push
lods
nop
or
sar
call
rol
mov
out
xor
inc
mov
imul
test
imul
sahf
xchg
aad
lods
cwde
pushf
or
inc
lods
test
rcl
std
scas
jae
pop
push
mov
sub
(bad)
das
sbb
or
daa
sahf
test
xor
call
fstp
repz
ins
repz
xchg
and
out
sti
stos
inc
cmp
call
xchg
cmp
push
xchg
mov
inc
int
fwait
mov
sub
push
imul
data16
adc
push
cmp
rcr
jns
pop
sub
fwait
jle
mov
mov
std
fs
xor
xlat
imul
push
pop
mov
int3
jl
ds
jmp
xchg
int3
mul
lock
fdivrp
xchg
pop
pop
lock
mov
loopne
adc
cmc
vmulss
pushf
mov
inc
push
sbb
in
adc
cmpxchg
nop
test
cmp
jmp
js
stc
mov
test
(bad)
fldenv
out
dec
outs
cmps
aam
push
sub
dec
dec
push
sbb
stos
cmp
scas
mov
xchg
jle
in
pcmpeqb
inc
das
lods
rcl
in
ins
add
mov
gs
dec
jae
push
gs
mov
xchg
dec
adc
mov
rcr
daa
out
retf
std
lea
push
pop
sub
fidiv
xor
mov
sub
test
push
jns
push
cdq
repnz
lods
or
mov
shr
xchg
ins
daa
adc
xchg
or
ret
add
push
scas
ds
sub
idiv
or
dec
xchg
idiv
pop
mov
movs
fisttp
adc
jns
mov
dec
adc
jg
sbb
xchg
ss
adc
inc
jle
fldenv
cmp
movs
xchg
test
test
jae
out
cli
cdq
mov
sub
mov
repz
push
add
imul
lea
sbb
test
out
pop
mov
gs
fldcw
hlt
cwde
inc
add
out
sbb
les
lds
test
test
outs
fild
cmps
or
ja
cs
mov
xor
retf
(bad)
fucom
mov
push
dec
out
and
mov
mov
lods
call
leave
or
jecxz
fsubr
jne
bound
sbb
pop
sub
push
ret
xchg
inc
imul
mov
and
lahf
cmp
ss
shr
inc
mov
pop
mov
xchg
jo
xor
pusha
xchg
sub
xor
and
or
loopne
jmp
inc
sub
cwde
ins
leave
lea
push
int3
adc
mov
pop
pop
pushf
out
add
dec
loopne
xchg
lea
pop
mov
outs
mov
sahf
sub
sar
jnp
pop
int3
lahf
mov
mov
cli
add
add
adc
cld
pop
ins
push
stos
js
inc
out
xchg
adc
dec
jp
sbb
cmps
movs
leave
stc
xchg
aas
test
inc
leave
popf
or
xor
test
xchg
fiadd
aam
or
rcl
sbb
mov
xacquire
xor
xlat
pop
sar
pcmpgtb
and
scas
repnz
xor
add
or
push
jg
push
test
cmp
xor
out
add
push
test
xchg
dec
or
test
pop
add
(bad)
movs
int3
enter
sbb
xlat
jle
xor
push
sbb
cmp
sbb
push
mov
mov
xor
inc
rol
ret
push
outs
fwait
or
mov
jle
pop
xor
sbb
push
sub
sbb
js
pop
je
adc
shl
(bad)
cld
out
in
dec
or
sbb
add
stc
inc
(bad)
ss
add
sar
call
(bad)
mov
out
cs
mov
movs
adc
xlat
in
xlat
mov
mov
dec
dec
mov
fcmovne
xor
cmp
adc
loopne
test
jmp
mov
mov
xor
outs
cld
push
jecxz
dec
jge
add
les
(bad)
dec
dec
push
push
faddp
xor
fistp
lods
sahf
add
push
cwde
fldl2e
cmp
cmp
fcomp
std
test
call
shr
shl
aaa
dec
or
fwait
mul
fs
mov
inc
pusha
pop
inc
outs
bound
js
cs
jns
mov
mov
jl
mov
shr
daa
xor
add
cdq
jle
retf
sbb
push
dec
stc
jmp
in
(bad)
or
daa
dec
sbb
icebp
aaa
out
stos
inc
out
add
mov
ins
add
retf
repnz
and
dec
and
(bad)
jnp
cmp
dec
xchg
fistp
fistp
xchg
lods
mov
data16
ret
not
cmp
in
ret
fcmovne
mov
minps
add
mov
sbb
adc
call
xor
and
cld
or
(bad)
push
adc
imul
nop
jb
sbb
jmp
fucomip
loop
lods
xchg
test
fadd
stc
sbb
mov
push
call
jae
mov
inc
mov
dec
(bad)
and
enter
and
push
sub
scas
jns
(bad)
in
jp
inc
lahf
aam
mov
inc
ins
es
push
ins
pop
or
and
ss
int
cs
mov
xchg
movs
pop
dec
out
bnd
xchg
jmp
xchg
fiadd
imul
cmp
push
or
push
and
pop
nop
cmp
pop
inc
sbb
out
out
jmp
es
adc
out
dec
cmps
mov
jo
ss
ins
cdq
sub
jmp
dec
(bad)
out
iret
retf
mov
mov
ds
mov
ins
ficom
sbb
jno
pusha
dec
jecxz
mov
mov
popf
sti
ins
test
mov
pusha
push
push
push
push
jns
cmc
or
push
inc
mov
fisub
leave
cmp
sbb
xchg
lods
sahf
adc
sub
xchg
jo
sbb
fwait
out
addr16
in
or
fild
push
pop
pop
cmps
sar
arpl
cmp
pop
repnz
push
dec
sbb
xchg
and
out
mov
sub
adc
xchg
gs
push
loopne
pop
jmp
iret
sbb
loopne
inc
add
ja
addr16
cwde
mov
mov
dec
sbb
inc
test
jb
sub
sub
pop
movs
pop
jmp
mov
and
retf
ror
adc
adc
mov
loope
jno
and
icebp
inc
jecxz
out
movs
fldcw
jmp
xor
nop
inc
ret
or
mov
push
pusha
or
add
ds
jp
int3
imul
pop
addr16
scas
clc
dec
adc
leave
sub
pop
xor
ret
mov
inc
and
dec
sub
enter
mov
xor
out
mov
mov
mov
inc
jno
xchg
push
pop
or
sbb
push
push
js
sub
outs
mov
pinsrw
outs
shr
inc
mov
pusha
pop
inc
mov
test
inc
bound
imul
jp
scas
repz
or
mov
clc
or
jae
sub
mov
loopne
add
outs
push
je
stc
lock
push
and
sahf
sahf
jbe
xor
retf
cmp
dec
aam
lahf
pshufw
mov
add
add
inc
out
icebp
dec
stos
mov
cmc
pushf
push
cmps
jns
fisubr
stos
dec
sub
xor
pop
fs
in
mov
je
jle
push
ret
(bad)
sbb
and
aas
adc
test
scas
add
inc
imul
fwait
test
mov
call
das
cs
cs
call
call
not
cmps
push
pop
cmps
in
in
aam
push
movs
popa
cmps
sbb
add
dec
mov
ins
or
jg
nop
das
cmp
sub
mov
jbe
(bad)
mov
cmp
(bad)
push
ret
xchg
cmp
in
pop
sbb
rcl
push
lds
mov
sub
sub
frstor
cs
movs
nop
cmp
sahf
mov
pusha
jns
retf
repz
cmp
hlt
mov
cli
lahf
ss
out
add
jae
xor
mov
adc
adc
xchg
inc
es
setns
loopne
sbb
loop
iret
dec
inc
fsub
test
es
lods
xor
pushf
inc
inc
pop
(bad)
sub
movs
mov
xchg
movs
dec
xor
cdq
inc
stc
data16
add
mov
dec
aad
jne
push
ds
sbb
or
cmp
inc
dec
in
rcr
movs
or
adc
or
push
aad
je
out
mov
cmps
mov
dec
daa
icebp
xor
jmp
cmc
fld
test
iret
scas
bound
cmp
pushf
lds
jno
xchg
lds
sahf
cmc
pusha
cs
es
mov
mov
movs
or
sbb
aam
sar
adc
mov
test
and
hlt
aaa
mov
xor
fs
jae
clc
(bad)
jns
jecxz
lock
(bad)
and
jno
stos
dec
add
inc
add
loopne
fstp
mov
jno
js
mov
mov
xor
lock
jnp
mov
mov
and
js
mov
mov
fwait
dec
es
inc
sub
jecxz
adc
cmp
cmp
add
imul
jge
(bad)
mov
push
movs
aad
mov
or
jl
xchg
fwait
sub
xchg
jl
sub
push
mov
push
add
jecxz
stos
cmp
sbb
or
mov
dec
mov
mov
jbe
clc
ja
push
mov
xor
and
mov
push
adc
sub
or
xchg
mov
pop
add
jmp
dec
xchg
clc
daa
outs
cmp
pop
push
cmp
fldcw
sbb
jl
mov
scas
jge
fdivr
or
ret
(bad)
mov
or
(bad)
pop
(bad)
add
out
xor
test
sbb
mov
push
scas
xor
movs
das
push
or
jge
into
ja
jmp
out
test
stc
aam
jbe
out
push
pushf
push
retf
fsub
fisubr
inc
call
add
dec
and
bound
adc
or
mov
repnz
cmp
out
arpl
or
adc
xchg
rcr
mov
pop
or
sbb
adc
cld
mov
pop
mov
aad
int3
sub
lea
ss
add
jb
mov
les
xor
cmp
pop
pop
and
ret
inc
xchg
push
ins
jns
mov
sbb
int
add
sbb
cmc
(bad)
adc
mov
icebp
sub
inc
xchg
pop
fnstsw
in
add
pushf
or
and
dec
and
cmp
repz
pop
aad
enter
jge
push
sar
mov
arpl
daa
outs
add
sub
fadd
adc
dec
jp
jle
jg
lock
xor
aam
dec
dec
popa
test
adc
bsr
jge
add
rol
adc
pushf
inc
loope
das
(bad)
sbb
sub
nop
pop
bound
loop
cdq
inc
movs
push
push
mov
es
cmc
and
sub
xor
or
add
int
push
pop
jge
push
inc
pop
icebp
mov
stos
aam
jmp
adc
ins
mov
mov
popa
pop
and
add
cdq
outs
cmp
shr
xchg
aaa
cmp
into
sti
xor
inc
mov
pusha
lods
xor
xor
arpl
lea
cmp
mov
push
out
fiadd
mov
or
or
inc
or
xor
out
jno
jmp
add
nop
xor
out
bound
lock
ror
rcr
out
fldcw
sbb
xchg
ss
aaa
xchg
mov
pop
jmp
aam
dec
arpl
std
xor
xor
call
jecxz
sti
jmp
or
daa
pop
fs
sub
jb
je
pop
push
mov
(bad)
daa
repz
aad
cmps
push
xor
mov
jle
(bad)
test
lods
rcl
arpl
mov
test
jp
xlat
xor
mov
inc
mov
push
dec
out
pop
scas
push
push
(bad)
cmp
and
and
xchg
cwde
push
inc
push
sbb
call
sub
xor
fs
jmp
jne
ret
fild
cli
xchg
jo
nop
es
ja
ftst
scas
imul
add
mov
cli
push
ret
sbb
xchg
lea
cld
inc
pop
fisub
into
dec
leave
fmul
sar
movs
test
jae
mov
in
adc
mov
test
in
or
or
mov
xchg
test
xchg
call
sub
jmp
pop
push
repz
test
arpl
mov
sbb
mov
mov
sbb
lea
xor
pop
xchg
int
in
(bad)
adc
mov
pop
fdivr
sbb
test
inc
(bad)
leave
adc
and
or
xlat
mov
mov
rol
or
clc
sar
in
mov
out
pushf
ins
pop
sub
imul
cs
ds
sub
int3
push
inc
push
sbb
outs
xchg
test
xor
sbb
inc
jmp
test
ja
inc
or
xor
fmul
dec
int3
cmp
push
cmp
adc
and
and
jl
ja
jnp
adc
add
pop
mov
mov
jno
dec
inc
xchg
pop
or
xor
cmp
jne
xchg
pop
ss
or
arpl
aaa
xor
ror
dec
mov
push
jmp
and
mov
xor
mul
lods
call
test
xor
es
addr16
pop
xchg
dec
jecxz
and
push
sbb
clc
cmp
pop
dec
outs
pop
shl
sbb
jno
mov
mov
cmp
js
pop
adc
lock
(bad)
retf
mov
adc
mov
xchg
or
push
imul
jg
fisttp
stos
fs
int3
cwde
out
and
dec
popw
push
retf
(bad)
je
test
repz
fistp
and
(bad)
vmovss
pop
cmp
ror
pop
iret
xchg
sub
jb
icebp
loop
cmp
or
pop
data16
sbb
dec
nop
dec
xchg
ret
sub
loope
ins
out
sub
push
rol
inc
(bad)
jmp
mov
maskmovq
test
stos
ss
jp
push
or
pop
mov
icebp
(bad)
loop
arpl
inc
jge
xchg
scas
leavew
aas
jb
call
add
and
rcr
xchg
sub
jge
sub
stc
jns
mov
xor
aad
adc
imul
test
xlat
retf
xor
cmps
push
push
sbb
mov
bound
xchg
push
push
cmps
into
sahf
push
dec
cs
jnp
scas
ror
inc
pop
aad
mov
dec
ins
add
cs
outs
fimul
and
mov
hlt
jne
mov
mov
in
mov
mov
dec
retf
dec
sahf
dec
jnp
inc
sub
test
mov
mov
out
pop
out
lods
dec
call
and
in
ss
ror
std
stc
ss
push
xor
stos
mov
inc
lahf
pusha
push
cwde
mov
repz
mov
xchg
(bad)
shl
mov
mov
mov
mov
pop
push
out
mov
mov
cmp
xchg
(bad)
or
jp
sbb
bsf
fmul
stos
xor
push
cmp
adc
mov
mov
pop
cmps
ror
shl
cs
pop
or
pop
jne
dec
sbb
mov
adc
mov
sbb
movs
fld
mov
push
jecxz
add
xlat
test
ins
out
sub
and
loopne
int
lahf
lock
pushf
add
push
jo
fld
(bad)
dec
pop
sub
xor
dec
and
stos
enter
fdiv
fdivr
inc
stc
cmps
sbb
xor
mov
mov
jge
stos
push
push
sbb
pop
dec
dec
ds
int3
xchg
mov
sub
xor
rcl
lods
loopne
enter
or
ror
pop
pop
xor
xor
xor
xchg
adc
popa
sbb
div
push
ret
inc
ror
xor
(bad)
jne
mov
daa
call
(bad)
cmc
call
add
or
push
arpl
cmp
adc
xchg
pop
adc
test
sbb
inc
lahf
xchg
call
lods
pop
int3
(bad)
(bad)
cmp
arpl
sub
adc
rol
mov
aad
and
cwde
cmp
cwde
pusha
fmul
add
pop
outs
daa
push
inc
jl
movs
xchg
sbb
repnz
inc
push
(bad)
gs
ds
push
repnz
retf
xchg
xchg
sbb
iret
dec
cmp
mov
inc
and
add
lock
daa
cmp
test
ror
xor
sub
xchg
stc
leave
je
jnp
jo
mov
cld
repnz
outs
mov
pop
mov
rol
sub
dec
jg
sti
call
xor
je
sub
ret
iret
fcmovnb
xchg
addr16
pop
aad
fist
mov
aam
jmp
inc
movs
pop
jnp
out
inc
mov
sahf
std
mov
add
cmp
fsubr
sahf
cmps
add
aam
stos
add
cmp
arpl
lds
xchg
sub
adc
xor
mov
pop
inc
cmp
inc
or
dec
inc
shr
out
(bad)
push
sbb
rcr
aaa
imul
add
push
mov
push
xor
sbb
xchg
lea
cmp
mov
xor
call
mov
loopne
enter
or
push
sub
fpatan
loopne
(bad)
out
or
pop
in
add
mov
pop
(bad)
out
pop
mov
push
push
xlat
loop
mov
dec
outs
out
mov
stos
mov
bound
pop
xchg
frstor
inc
mov
jmp
adc
inc
jmp
mov
jne
je
retf
cmp
sti
lods
psrlw
mov
sbb
add
sbb
or
dec
lea
mov
inc
or
dec
adc
mov
div
test
pop
into
add
dec
mov
mov
call
inc
inc
sbb
stos
imul
sub
and
sar
mov
xchg
(bad)
cmp
call
push
cld
clc
pop
xor
inc
test
scas
cmp
cmp
xchg
xchg
std
inc
dec
mov
xchg
mov
inc
cmp
fxam
cmc
aam
dec
add
fnsave
rcr
inc
mov
nop
jmp
mov
cmp
adc
and
cs
jmp
sub
dec
mov
fs
cmp
cmp
mov
leave
cmp
jb
sbb
cmp
adc
jno
popa
ja
enter
dec
gs
push
lods
xchg
(bad)
jl
xchg
ror
leave
js
ss
inc
mov
add
jl
sub
mov
push
and
fs
pushf
pop
xor
ss
int
fs
aas
mov
scas
pop
xor
fucom
inc
add
fadd
pop
dec
(bad)
cmps
mov
xchg
in
mov
sub
push
call
fild
add
jmp
les
les
or
inc
hlt
call
lods
xchg
ds
fadd
mov
stos
mov
xor
fstp
ja
repnz
inc
int3
movs
fs
fcom
int
cs
call
imul
in
push
fsubr
mov
aam
out
ins
sub
jl
mov
pop
rol
mov
add
hlt
mov
or
adc
pop
or
mov
pop
setp
and
out
dec
mov
jmp
add
dec
jae
xor
repz
movs
adc
inc
pusha
aam
call
daa
shl
xchg
jmp
jne
in
jno
adc
test
cmp
pop
fld
mov
lahf
imul
adc
or
in
mov
add
push
dec
dec
pop
shl
push
mov
mov
rcr
adc
stos
pop
push
mov
repnz
sar
jle
ret
pushf
dec
scas
inc
cmp
scas
fimul
or
aas
out
jae
in
jns
xor
pop
inc
and
(bad)
movs
jmp
mov
test
ficomp
push
dec
cmp
jl
call
inc
movs
mov
xrelease
rcr
nop
xchg
or
push
out
sub
cli
pop
lock
xchg
add
xchg
sbb
rcl
test
cdq
std
add
xlat
adc
mov
aaa
adc
dec
dec
jo
int3
aaa
add
retf
xchg
mov
xchg
push
iret
mov
add
sub
xchg
mov
xchg
std
daa
push
mov
test
sbb
fistp
fisubr
je
push
popa
xlat
and
nop
jge
div
cli
mov
stos
jae
movs
inc
mov
shr
or
pop
mov
inc
mov
sub
test
mov
sbb
fisttp
sub
dec
mov
jg
lods
jg
mov
cmp
shl
mov
jno
aam
stos
add
inc
adc
adc
cdq
lock
repz
dec
jbe
mov
mov
pop
pop
inc
or
loop
in
or
adc
pop
js
data16
add
ss
gs
in
fsubr
xor
ja
inc
(bad)
clc
lock
inc
fisubr
leave
(bad)
std
and
xor
mov
bound
jns
test
xor
fsubr
(bad)
lds
mov
movs
mov
in
cmp
mov
sub
xchg
jne
loop
cld
or
into
mov
mov
mov
(bad)
stos
add
jo
fld
xlat
sar
loop
cmp
add
mov
sbb
mov
jns
mov
mul
mov
mov
and
cld
rcl
and
mov
pusha
push
(bad)
cmc
out
ja
xchg
inc
jge
imul
int
in
gs
sub
add
dec
aaa
sbb
call
out
cmp
aad
scas
daa
adc
lock
jl
mov
jle
mov
mov
jns
jno
sub
add
mov
push
and
in
stos
bound
and
add
xadd
jne
mov
pop
fiadd
fst
push
xchg
lock
scas
dec
adc
jno
jnp
add
mov
addr16
mov
and
les
pop
xor
and
adc
rcr
or
loopne
mov
std
shl
(bad)
les
cmps
mov
ins
mov
jle
xchg
sub
xor
aas
xor
(bad)
pop
sahf
xlat
aad
gs
push
das
xchg
dec
sub
retf
inc
sbb
sar
inc
rcr
sbb
mov
add
ficom
mov
out
stos
ror
xchg
adc
repz
xchg
lock
retf
push
scas
jmp
sbb
jbe
imul
call
repz
mov
repnz
outs
mov
call
fwait
mov
sar
pop
push
jl
data16
stos
add
pop
mov
lods
adc
scas
aam
and
pusha
cwde
sub
cdq
sbb
outs
and
xor
scas
dec
cli
dec
or
adc
in
sbb
(bad)
cdq
cmps
jns
mov
jg
pop
test
inc
imul
cs
mov
xchg
sub
or
and
mov
mov
frstor
pop
pop
push
push
sub
jo
dec
mov
mov
or
push
rcr
sahf
jo
jno
or
or
add
dec
jp
mov
pushf
lds
scas
aaa
mov
jge
fcmovbe
addr16
fucomip
push
ss
jl
inc
push
call
retf
rcl
test
test
sbb
push
rcr
fidivr
adc
daa
out
scas
retf
(bad)
pushf
cmps
mov
sub
sub
into
xchg
mov
xor
popf
sbb
xchg
inc
jbe
repz
retfw
loop
in
fnstenv
pusha
inc
gs
or
loope
dec
sub
ficom
stc
mov
pop
push
xor
icebp
je
and
cs
jge
in
jp
jg
fcomip
mov
xor
mov
imul
nop
cmp
aad
lahf
scas
test
inc
push
std
or
lea
inc
add
fcomp
push
scas
push
and
outs
jl
add
fcmovne
inc
(bad)
aas
and
pop
jae
call
les
cmp
fmul
sbb
fisttp
adc
in
dec
inc
movd
or
xchg
sar
push
das
xor
lods
pop
je
dec
xchg
cmp
jae
cli
inc
cmp
cs
jge
rol
mov
mov
or
in
dec
jae
cmp
pop
cmps
pop
xchg
xor
inc
mov
movs
push
es
addr16
mov
xor
pop
push
sbb
push
ret
inc
push
ror
popa
mov
inc
popf
jmp
xor
aad
xor
push
(bad)
pop
xchg
xor
and
cmp
xchg
out
add
shl
js
dec
inc
xor
cwde
mov
add
push
mov
ja
or
ss
loop
movs
fidivr
loopne
stos
mov
out
iret
jmp
and
enter
and
xchg
mov
gs
jne
ja
push
inc
adc
push
xor
xor
xchg
or
pusha
imul
or
push
pushf
xchg
mov
add
xchg
aaa
jns
jae
xor
neg
inc
mov
pop
push
jge
and
mov
dec
in
mov
out
mov
sbb
jb
push
sbb
stos
dec
jmp
cmps
neg
or
xchg
sub
push
stc
fst
data16
out
aas
xchg
lock
js
push
jmp
pop
test
cs
xchg
or
inc
shl
cwde
popa
addr16
cmp
ret
pop
mov
xchg
mov
les
sub
int
ds
xchg
sub
push
in
daa
push
loopne
inc
imul
xor
(bad)
jl
mov
jge
ins
xchg
or
add
mov
adc
inc
pop
or
xchg
jmp
lods
dec
lahf
ins
fldcw
xchg
scas
(bad)
or
daa
mov
adc
popa
fiadd
xchg
sub
rcr
ja
cs
aad
nop
aas
gs
jmp
gs
push
pop
jg
ss
test
stc
adc
inc
xchg
ret
stos
inc
sbb
push
test
add
sub
xchg
mov
jne
sbb
adc
sub
je
(bad)
cmps
(bad)
sub
inc
fcomp
sbb
and
add
add
loope
and
cdq
mov
loope
outs
jmp
push
das
cwde
popa
lods
sub
ret
movs
out
jmp
mov
ficomp
popa
mov
fwait
rcr
push
mov
mov
lods
js
xor
sub
mov
nop
outs
pop
or
xchg
mov
add
jp
cmp
mov
out
std
popa
add
setbe
ins
fisub
sbb
aas
mov
(bad)
rol
jns
add
sbb
jmp
pop
xchg
sbb
stos
mov
jno
scas
in
sbb
cmp
xchg
ins
pop
push
jmp
dec
push
loope
shl
add
dec
(bad)
(bad)
lds
sbb
inc
mov
push
sub
inc
push
xchg
aaa
dec
les
mov
xchg
fiadd
idiv
adc
xchg
inc
inc
jae
loope
push
(bad)
push
sbb
fxch
jmp
sbb
adc
adc
(bad)
in
push
stc
(bad)
sti
aaa
fadd
and
cmp
mov
(bad)
fsubr
(bad)
sqrtps
mov
cld
ret
mov
jg
mov
jbe
push
clc
xor
and
(bad)
out
xchg
loopne
jp
jg
mov
fs
mov
xchg
aas
shl
mov
mov
mov
(bad)
cmp
mov
les
pop
lods
jmp
sub
jne
stc
fdiv
and
xlat
sbb
sbb
fistp
ss
aas
inc
rcl
mov
rol
jns
rol
sub
rcl
inc
lods
push
int
pop
pop
scas
lahf
sbb
rcl
xchg
sub
loope
inc
call
xchg
test
mov
pop
cmps
sub
outs
or
sub
stos
mov
jo
add
mov
mov
pop
mov
loop
loop
jmp
loopne
loopne
call
stos
mov
fld
adc
(bad)
in
pop
icebp
je
xor
cmps
pop
cdq
cmp
cmp
ja
jne
ja
dec
push
fisttp
scas
ins
mov
imul
into
mov
(bad)
fisttp
jmp
add
fistp
test
movs
int3
cmps
add
es
push
push
jmp
pop
sbb
mov
jmp
daa
jecxz
retf
sbb
(bad)
test
jmp
mov
mov
jo
and
mov
aaa
and
mov
jnp
loopne
jmp
std
xchg
or
mov
je
lods
imul
out
push
nop
jae
ins
pop
inc
inc
xor
mov
stos
shl
inc
or
or
add
mov
inc
xlat
add
push
mov
sub
xlat
(bad)
add
dec
mov
fidiv
xchg
mov
inc
mov
inc
shr
sub
xchg
aas
push
jnp
lods
adc
aad
dec
or
ficom
mov
adc
or
int
(bad)
in
inc
mov
xchg
movs
mov
mov
xor
adc
lods
(bad)
mov
mov
jmp
int3
popa
retf
or
idiv
(bad)
lock
adc
pop
repnz
std
pusha
adc
cmp
sub
or
jl
or
(bad)
inc
or
add
fisub
adc
cdq
jg
nop
scas
ja
xchg
es
addr16
pop
retf
and
inc
adc
stos
movs
sahf
sub
div
and
test
mov
mov
adc
lods
inc
pop
mov
mov
xchg
push
movs
bnd
into
jecxz
in
sub
pop
ret
jo
pop
(bad)
adc
fbstp
jb
mov
into
mov
out
adc
add
imul
pop
test
sar
mov
(bad)
xchg
add
inc
nop
popf
std
jne
movs
fstp
mov
cmp
movs
push
sub
call
popa
mov
test
cmp
add
(bad)
rcl
mov
outs
fdivr
pusha
test
pop
shl
cwde
mov
fstp
rcr
dec
out
imul
(bad)
iret
lods
xor
sbb
sbb
loopne
lock
bound
(bad)
and
xchg
inc
ror
dec
and
int3
repz
jns
xor
xchg
mov
call
pushf
sub
sbb
call
or
int
push
shl
add
out
adc
ror
lods
aam
or
aad
test
imul
cmp
xchg
into
(bad)
leave
(bad)
call
fistp
repz
sbb
sub
cmps
cdq
sub
dec
(bad)
jmp
imul
nop
jl
push
mov
add
or
cdq
je
adc
call
push
(bad)
sub
or
jae
mov
cmp
jp
out
xchg
mov
xchg
inc
and
fistp
pop
test
xchg
scas
pop
add
cwde
mov
repnz
xchg
(bad)
and
cmp
stos
pop
js
cdq
sti
js
push
mov
call
sar
dec
add
femms
ret
jmp
sar
daa
leave
leave
(bad)
or
cmp
sti
xchg
or
push
rcr
sar
jo
call
xor
movs
jmp
ins
push
aam
xor
dec
mov
mov
test
(bad)
int
movs
fucomi
stos
push
push
mov
sahf
stos
push
mov
or
(bad)
in
dec
fimul
leave
sbb
fsubr
je
mov
xchg
aaa
ror
pop
vmwrite
popf
sub
push
cmp
aam
pop
mov
mov
rcr
js
int3
add
gs
add
and
rcl
xchg
add
int
or
jecxz
mov
cmp
test
fisub
test
add
aas
sbb
dec
cdq
and
popa
inc
lds
sbb
xor
fiadd
mov
ja
push
hlt
inc
adc
mov
test
icebp
sbb
inc
and
pusha
movs
data16
mov
sbb
add
in
pop
nop
sbb
in
sub
push
xor
dec
pop
pop
sbb
lods
js
(bad)
sti
mov
ss
adc
add
inc
jge
xchg
fist
cdq
add
or
mov
test
cwde
lods
xchg
mov
inc
mov
movs
fwait
push
out
(bad)
jns
push
stos
ficom
adc
and
dec
push
scas
xor
and
lods
add
(bad)
(bad)
sti
sub
xor
xchg
pushf
sub
scas
cmp
or
dec
xchg
cli
movaps
mov
out
and
and
outs
das
(bad)
sbb
or
mov
xor
jecxz
gs
outs
scas
dec
ss
ret
outs
jle
lods
loop
loop
xchg
inc
fisub
inc
(bad)
pop
pop
test
pop
das
(bad)
(bad)
lods
sar
jb
inc
jge
imul
test
fsubr
cmp
call
push
movs
pusha
out
cmp
int3
enter
out
xchg
jbe
mov
push
xor
adc
sub
les
sahf
ror
test
ret
mov
ror
(bad)
dec
adc
pop
xor
cmps
xchg
out
mov
loopne
out
arpl
push
es
adc
dec
sub
and
test
popa
test
or
inc
cs
je
es
and
inc
and
imul
int3
aad
(bad)
iret
movs
sub
push
add
mov
call
pop
bound
scas
cs
sub
out
and
ja
dec
ins
cmp
sbb
lds
mov
sub
fwait
pop
ficomp
mov
das
imul
mov
aam
jmp
jno
cmc
aaa
pop
sub
lahf
test
popf
cmps
movs
sti
adc
fisubr
cmps
adc
data16
ficomp
push
and
(bad)
out
bound
or
sub
xchg
jno
arpl
push
je
dec
inc
out
dec
fcmovnbe
retf
sti
xchg
pop
mov
inc
add
sbb
pop
icebp
inc
fdivr
adc
sti
and
shr
xor
sbb
int3
pusha
ror
add
into
cmp
dec
jns
push
out
call
adc
sar
ins
dec
inc
hlt
mov
imul
pop
icebp
add
fmul
js
adc
popf
(bad)
ficom
mov
(bad)
in
xor
icebp
mov
ja
xor
(bad)
mov
pushf
xor
loope
lea
pop
or
rcl
leave
ins
add
(bad)
and
scas
xchg
test
cmc
adc
icebp
cwde
es
sub
outs
mov
test
dec
jno
cmp
out
mov
pop
movs
loop
mov
dec
mov
ja
leave
in
jbe
(bad)
lods
dec
mov
and
(bad)
fsubrp
and
jmp
sahf
xchg
(bad)
nop
cmc
das
pop
mov
cwde
push
sbb
mov
or
icebp
and
rcr
xor
sbb
xchg
xchg
mov
ret
pop
fidiv
dec
mov
stos
push
jp
loop
jg
xlat
ror
xchg
mov
call
cmp
mov
dec
aas
add
ret
sub
aad
jecxz
fstp
shl
mov
jnp
popf
imul
cmp
ja
out
pusha
call
test
dec
ret
push
jp
sub
in
sbb
int
retf
jbe
aas
fldcw
push
imul
call
add
cmps
xchg
pop
bound
push
into
adc
mov
lea
(bad)
cmp
std
dec
dec
mov
retf
jne
jmp
cmp
cmp
xchg
or
mov
inc
fbld
je
cmp
in
xor
mov
stos
shr
jge
(bad)
les
xlat
fidivr
out
cmps
das
leave
mov
and
and
or
pop
ss
cli
pop
xchg
ins
scas
mov
cmp
sti
mov
mov
pop
mov
cmp
dec
jns
sbb
pop
xlat
fs
jnp
dec
adc
repz
mov
xchg
push
jo
mov
jae
out
out
call
dec
scas
cmps
out
cdq
(bad)
ror
mul
stc
mov
add
adc
or
mov
push
jmp
test
fst
gs
retf
or
xlat
jl
push
jo
xchg
rcr
xor
ret
jge
push
test
jg
icebp
bound
(bad)
xchg
mov
int
sahf
and
icebp
test
jmp
and
add
mov
pushf
xor
imul
xchg
lods
shl
pop
sub
xor
out
jae
push
or
in
and
sbb
jbe
jbe
fsubr
cmps
retf
(bad)
and
cs
cmps
addr16
es
movs
in
adc
xchg
add
pop
and
fs
sbb
or
sub
test
enter
ficomp
push
mov
ret
mov
and
xor
jne
lock
out
ss
aaa
adc
mov
das
cmp
jmp
cmp
(bad)
xor
out
movs
pop
sbb
in
data16
xor
les
mov
scas
mov
push
inc
jge
push
dec
mov
iret
mov
mov
out
or
jg
movs
xchg
idiv
mov
sbb
mov
or
push
data16
add
ror
push
test
ins
push
jns
lock
push
ss
aam
jge
mov
xor
(bad)
jnp
or
stos
std
ss
mov
inc
aaa
fist
loope
clc
shl
fadd
repz
lahf
or
scas
cmps
retf
gs
mov
adc
repnz
inc
jns
popa
mov
push
xchg
xchg
shl
fdivr
jmp
mov
loop
fmul
jnp
pop
iret
stos
dec
pop
inc
pusha
push
pop
jo
ss
ins
jge
popf
in
nop
mov
mov
rol
push
in
imul
in
pushf
mov
sub
dec
out
add
out
sbb
jb
bsr
cmps
into
je
xlat
xchg
fidiv
fisub
push
cdq
jae
inc
cmp
js
lahf
movs
lock
stos
lods
cmp
ja
mov
les
stos
push
xchg
jle
loop
ds
aas
jg
sar
call
dec
dec
jg
fwait
add
popf
dec
icebp
inc
enter
cmps
enter
rcl
loopne
lahf
mov
iret
in
retf
adc
jl
inc
xchg
das
clc
pop
repz
js
adc
sub
out
(bad)
xchg
popf
(bad)
cmps
sbb
add
sahf
icebp
add
xchg
mov
rcl
add
sahf
cmp
add
and
cld
(bad)
sbb
jmp
js
test
inc
push
jno
in
dec
xor
mov
sbb
inc
test
mov
test
mov
sbb
add
stos
sub
or
mov
fcmovne
mov
stos
adc
mov
jb
mov
jmp
sub
or
or
mov
xor
test
fwait
imul
push
call
out
sti
and
adc
pop
hlt
ins
sub
nop
fwait
cmps
jne
inc
js
push
fsqrt
js
(bad)
mov
ins
fidivr
inc
mov
and
icebp
or
ret
adc
into
(bad)
sbb
cmps
movs
mov
retf
dec
dec
or
or
fst
pop
inc
scas
sub
fwait
or
adc
stos
jb
mov
sar
jmp
call
cli
stos
bound
pop
js
dec
and
aam
dec
cli
pop
add
mov
in
mov
cmc
cld
sub
inc
jmp
cmp
shr
mov
fwait
jmp
add
dec
gs
sbb
add
jp
fidivr
cld
cld
iret
in
xor
call
xchg
or
dec
adc
in
pop
sbb
cli
(bad)
mov
push
mov
cmps
inc
and
xchg
fnstenv
sbb
push
pop
js
lods
cmp
add
js
and
mov
rcl
sbb
mov
loope
xchg
cdq
sti
jbe
addr16
jo
xchg
mov
or
add
dec
mov
inc
int3
jo
dec
xchg
outs
push
repz
retf
shr
xor
test
sbb
(bad)
cmp
add
mov
fisttp
pop
sub
(bad)
or
push
(bad)
or
inc
out
test
or
js
sub
or
mov
push
ror
es
sub
aam
xor
out
ror
ins
add
rcr
sbb
inc
movs
jg
xchg
pop
aam
xlat
out
inc
and
int
and
jp
sbb
dec
push
and
jle
scas
addr16
sub
int
or
or
dec
aad
cmp
ja
dec
sbb
push
sbb
push
cdq
cmp
outs
(bad)
test
or
stos
pushf
pop
fmul
out
dec
cld
dec
(bad)
xlat
sub
xchg
outs
dec
push
pop
sub
pop
loope
sar
out
fcmovne
hlt
push
push
mov
or
aad
mov
pop
aas
out
loop
icebp
jecxz
loop
in
ins
scas
or
repnz
sbb
mov
push
mov
ins
sub
sbb
xor
mov
pusha
cmps
and
mov
pop
xor
fdiv
out
sar
ins
and
popa
sub
rcr
loopne
mov
neg
and
ret
inc
icebp
add
xlat
aas
rol
cmps
lahf
dec
cmc
(bad)
mov
jnp
jnp
aad
stc
cmp
xchg
pop
iret
hlt
inc
mul
call
call
nop
mov
fs
call
stos
fwait
sub
popf
stos
push
and
push
dec
inc
pop
add
aam
or
push
es
xchg
sbb
clc
into
popa
je
aaa
sbb
pop
sbb
xchg
jae
das
rcr
mov
push
mov
mov
pop
xchg
mov
mov
xchg
jp
call
fdivr
jb
cmp
pop
(bad)
(bad)
leave
sbb
repnz
cmps
and
xchg
idiv
dec
lods
and
push
call
sbb
(bad)
loop
xor
pop
int
ror
pop
mov
pushf
popf
jecxz
xchg
(bad)
jnp
out
mov
lods
dec
stos
(bad)
pop
jmp
mov
out
stc
shr
sbb
test
mov
jo
jnp
outs
fdivr
sar
and
or
in
mov
ret
nop
pop
loop
mov
mov
test
and
popf
pop
rcr
push
sbb
and
sar
adc
cmp
sti
push
in
or
loop
int
add
clc
mov
stos
xor
stos
mov
daa
cmc
jecxz
mov
mov
mov
popf
jo
stos
inc
xlat
dec
aam
mov
xchg
dec
sub
mov
jge
les
push
cwde
stos
(bad)
repnz
pop
(bad)
aaa
push
pop
sar
in
push
ds
test
pop
sub
int
xor
cmc
test
in
mov
cmp
fmulp
inc
push
js
lock
push
sub
or
call
mov
dec
adc
push
jbe
imul
jbe
hlt
sub
sbb
loop
or
pop
xor
jbe
test
cmc
inc
add
or
dec
push
jg
pop
sub
ret
out
aas
dec
retf
rol
(bad)
ins
jo
xor
sbb
push
scas
cdq
icebp
loopne
cmp
loopne
pop
fdivr
jbe
iret
fwait
aas
dec
and
adc
out
in
inc
jns
dec
jmp
sub
adc
cld
jle
cwde
daa
popf
stos
retf
mov
pop
mov
inc
ficomp
mov
dec
mov
out
mov
jbe
xchg
jge
cmc
jns
mov
aad
mov
adc
mov
gs
adc
add
mov
sub
rcl
or
stos
mov
ds
cwde
or
movs
and
lea
and
setb
sbb
lds
movs
mov
xor
or
add
ins
push
in
pop
loop
outs
stc
sub
push
ins
das
pop
and
push
test
dec
cmp
sub
outs
jmp
xor
mov
andps
dec
adc
push
mov
xchg
xor
ja
es
fneni(8087
mov
mov
jbe
dec
fs
add
(bad)
(bad)
outs
adc
out
jbe
jmp
mov
add
inc
inc
xlat
pop
out
and
cdq
sub
test
xchg
pop
rol
(bad)
xlat
shl
ins
sbb
leave
mov
rcl
jg
int
pop
sbb
sub
pop
mov
mov
sub
or
pop
out
cmp
xchg
dec
push
add
jne
arpl
xchg
jno
in
push
inc
xor
sbb
jbe
pop
pop
neg
int3
aas
ins
jne
mov
xor
jmp
ret
xor
lds
in
ins
sbb
sbb
mov
mov
dec
add
stos
dec
test
add
cmp
dec
jp
sbb
mov
fist
jnp
mov
adc
cs
imul
jle
mov
lock
shl
jne
ficomp
mov
popf
add
dec
test
cdq
loope
adc
cmp
lock
cmps
xor
sub
sbb
jbe
addr16
shl
aad
loop
loope
loopne
jge
pop
pop
add
mov
enter
out
adc
xchg
push
add
push
pop
clc
mov
inc
ins
hlt
xchg
xor
adc
mov
in
arpl
jmp
pushf
mov
cmp
iret
fstp
dec
mov
(bad)
xchg
xchg
aad
sub
sbb
xchg
cmp
xchg
ret
push
mov
inc
xchg
sbb
std
xor
xor
in
jbe
test
pop
and
adc
mov
jns
and
sar
xor
cdq
xchg
inc
dec
les
or
pop
pop
push
xchg
mov
in
jge
xchg
(bad)
mov
inc
sub
test
jnp
test
in
in
cmps
cmp
test
(bad)
popf
(bad)
shr
call
cmp
add
sub
aaa
cmp
js
jbe
gs
jbe
cmp
add
paddusb
pop
fiadd
pop
fsub
sahf
leave
sbb
cmp
push
les
mov
cmp
in
adc
iret
fcomp
mov
xchg
lds
inc
mov
div
je
fmul
xor
jl
inc
jmp
or
mov
push
scas
inc
fdiv
ret
gs
push
pop
sub
stos
mov
pop
mov
inc
adc
std
retf
les
dec
into
imul
mov
xbegin
fs
cmp
xchg
js
mov
pop
idiv
les
and
adc
outs
xchg
enter
into
sbb
inc
js
retf
jmp
mov
push
jae
push
inc
loope
adc
shl
add
arpl
(bad)
xchg
xor
pop
mov
mov
mov
rcr
pop
pop
sahf
in
fisttp
push
cmp
(bad)
push
gs
mov
popf
sahf
adc
cmp
pusha
pop
push
cmovno
jg
hlt
aas
xchg
fcmove
push
jae
cmp
mov
or
mov
push
fcmovnb
daa
popa
loop
enter
jno
into
shl
(bad)
xchg
sub
test
mov
lds
cmp
out
loope
es
jb
and
adc
aas
stc
div
or
sahf
sub
(bad)
sahf
sbb
xchg
test
cmp
pop
pop
mov
push
mov
inc
fadd
lahf
mov
dec
xchg
jbe
inc
cmp
retf
imul
aam
(bad)
cmps
pop
add
fs
xchg
out
mov
test
sbb
xor
mov
(bad)
xor
jno
mov
adc
jne
out
or
(bad)
int
inc
pop
shr
jno
retf
out
sub
push
sbb
jle
(bad)
mov
ja
(bad)
dec
inc
stc
xchg
fs
mov
dec
into
daa
mov
bound
jge
or
es
xor
push
cdq
(bad)
xlat
pushf
icebp
add
ret
mov
addr16
aas
in
and
sbb
inc
mov
out
(bad)
repz
push
sbb
movs
fs
mov
mov
jmp
aaa
pop
add
vhsubps
out
jmp
rcr
rcr
test
fnstsw
cmp
pop
sti
ud0
stos
and
arpl
shl
lods
dec
adc
(bad)
sbb
cs
in
fidiv
push
fnsave
mov
and
das
or
mov
lods
ins
retf
fdiv
cwde
imul
out
in
loop
test
lea
out
stos
(bad)
push
in
and
(bad)
cwde
sbb
fmul
in
gs
outs
aam
cmp
int
push
and
(bad)
inc
add
movs
sbb
mov
ss
push
and
retf
scas
scas
cmp
mov
adc
pop
daa
mov
push
movs
in
repnz
ds
xchg
sub
push
ja
je
fild
in
outs
das
std
jnp
cmp
mov
repz
cdq
cmp
push
cmp
mov
push
jecxz
popa
ret
(bad)
imul
rcl
fimul
mov
or
cmps
pushf
stos
inc
or
aas
gs
scas
div
pop
mov
mov
sub
xchg
ins
jnp
xor
mov
shl
inc
ins
sbb
dec
cmp
sub
test
mov
into
jns
(bad)
sub
xor
pop
sar
jmp
mov
cmc
pop
sbb
jmp
pusha
inc
cmp
push
cs
and
jge
cwde
or
cmps
cmps
pop
adc
xchg
stos
xor
adc
sub
and
sub
lods
repz
loop
aam
add
fdiv
fimul
jg
movnti
add
push
jmp
cmps
mov
(bad)
sub
adc
sub
cmp
dec
pop
fild
and
ficomp
sub
fmul
mov
fwait
dec
mov
or
out
sub
add
push
dec
adc
and
inc
rol
(bad)
retf
add
mov
(bad)
dec
or
adc
in
push
dec
push
jns
mov
je
popa
mov
push
pop
int3
leave
fwait
mov
js
scas
push
xchg
mov
sub
fndisi(8087
(bad)
fwait
mov
das
not
js
sbb
push
imul
shr
sub
or
ins
jbe
call
push
adc
imul
mov
add
push
or
mov
mov
xchg
add
adc
adc
mov
call
mov
adc
dec
adc
movs
imul
into
les
dec
test
adc
mov
add
call
and
pop
sub
sti
cmp
or
movs
test
jg
cmp
cmps
fwait
push
push
xchg
ins
test
outs
dec
repnz
aaa
scas
out
mov
imul
or
jmp
pop
ins
mov
(bad)
cli
fst
xlat
inc
int
xlat
xchg
scas
ror
les
jb
or
sahf
pop
xor
fmul
mov
test
push
fs
nop
dec
adc
sbb
inc
lods
leave
push
push
mov
inc
outs
fs
scas
xchg
test
mov
jp
mul
dec
bnd
dec
push
cmp
jl
sbb
jo
add
pop
pop
cmp
addr16
add
jecxz
adc
dec
jmp
ins
mov
push
inc
add
test
retf
mov
jb
mov
popa
xchg
xchg
pop
and
std
jne
std
jno
enter
imul
popa
adc
test
or
xor
xchg
fwait
adc
push
push
xchg
sub
cwde
sub
repz
xor
adc
xor
in
push
jp
mov
adc
mov
cmp
movs
sub
fidivr
and
adc
enter
movs
adc
push
cmp
xchg
imul
cdq
retf
jp
test
retf
es
mov
test
outs
out
push
arpl
pop
std
movs
out
and
push
xor
jo
or
in
mov
in
es
jl
mov
std
jbe
enter
sbb
and
jmp
aaa
jb
mov
sbb
add
jge
ins
retf
daa
add
mov
jb
fistp
dec
shl
clc
xor
jb
mov
mov
in
loopne
mov
loopne
xor
rol
ret
inc
ja
xor
mov
sub
or
pushaw
stc
xor
push
(bad)
test
nop
mov
hlt
sbb
mov
xor
arpl
sbb
ds
sbb
lock
inc
test
or
pop
push
cmp
jnp
imul
test
sahf
aaa
inc
mov
inc
push
aad
dec
leave
adc
inc
xchg
adc
xlat
mov
dec
pop
push
lods
fst
add
and
in
add
dec
adc
mov
ss
pop
fdivrp
(bad)
pop
adc
cmp
gs
xchg
cld
dec
dec
jbe
out
popf
jnp
repz
int
mov
sbb
mov
jge
push
int3
jp
inc
je
pop
shr
inc
dec
add
(bad)
int3
ja
inc
fiadd
mov
xchg
dec
lock
je
das
retf
cwde
lods
mov
fwait
hlt
(bad)
or
xchg
pop
push
movs
mov
pop
mov
(bad)
xor
sbb
dec
or
fadd
inc
movs
pop
div
jae
out
mov
shl
adc
imul
adc
enter
scas
push
push
and
jbe
dec
ja
jl
dec
and
jb
jp
out
std
jnp
nop
cmc
mov
mov
data16
mov
pusha
inc
pop
mov
or
imul
rcr
mov
(bad)
mov
inc
cmp
pop
sar
ds
cwde
cmp
cmp
inc
ret
test
div
movs
outs
and
add
(bad)
(bad)
bound
xor
test
stos
jmp
push
inc
(bad)
pop
ds
jge
adc
xchg
mov
push
rcl
pusha
xor
hlt
add
mov
dec
imul
(bad)
icebp
sub
ja
mov
mov
push
int3
sub
cmp
pusha
cmp
cli
dec
inc
ds
ret
sub
mov
add
xor
retf
xor
stc
inc
je
add
pop
add
popa
mov
pop
mov
push
or
jecxz
aaa
fwait
xchg
pop
ror
jmp
imul
mov
es
push
std
imul
mov
dec
popf
mov
pop
adc
or
and
cmc
shr
pop
adc
shl
mov
out
(bad)
push
(bad)
and
or
or
test
(bad)
jle
jecxz
aas
aaa
sub
inc
sbb
(bad)
pop
aas
popa
xor
xor
sbb
leave
faddp
aad
jb
cmp
or
jmp
push
in
ja
and
jnp
jne
(bad)
cdq
push
jmp
repnz
pop
cmp
movaps
(bad)
or
inc
jg
push
or
and
loopne
xchg
push
and
test
bound
jge
push
lea
cmp
hlt
jmp
ficomp
scas
rcr
lds
test
xchg
ins
adc
hlt
jecxz
dec
add
mov
out
push
repz
and
shr
ret
clc
in
aaa
repnz
not
cmp
and
repnz
sbb
aaa
add
sub
dec
mov
mov
add
inc
fdivp
push
jl
pop
sahf
test
(bad)
mov
arpl
fs
iret
fild
mov
add
mov
mov
js
fidiv
pushf
push
scas
or
mov
imul
ret
xchg
jl
addr16
lods
pop
inc
popf
mov
daa
xor
mov
inc
adc
test
mov
aas
adc
call
jns
call
call
lea
outs
add
or
shr
and
out
and
or
mov
fstp
add
sahf
repz
inc
in
call
push
addr16
push
mov
rcr
dec
test
add
xor
out
fnstsw
xchg
push
test
pop
ret
add
inc
sti
retf
js
mov
xchg
xchg
inc
jnp
inc
xchg
cmps
inc
lods
push
xlat
ret
enter
mov
and
scas
cld
pop
mov
push
repnz
js
mov
mov
dec
sub
pop
xor
popa
and
or
adc
jne
retf
ficomp
xchg
or
mov
jg
mov
in
inc
aam
xor
retf
and
sbb
not
xchg
lods
hlt
fisub
pop
nop
leave
(bad)
sub
repnz
xchg
jmp
xchg
std
mov
cmp
daa
pop
adc
or
pop
jg
mov
ror
test
mov
idiv
(bad)
sbb
(bad)
mov
je
jbe
in
adc
and
sub
cli
pushf
xchg
fstp
and
inc
loope
arpl
xor
cmps
xchg
pop
push
mov
sti
jno
mov
pop
cwde
or
fs
mov
test
pop
dec
frstor
sub
movs
inc
jecxz
or
loop
lock
lahf
cs
js
mov
xchg
sbb
(bad)
out
movs
mov
test
enter
in
stos
cmp
cmp
jno
inc
inc
ret
enter
xlat
pop
xor
shr
aaa
cmp
pop
int3
ins
push
mov
fst
push
pushf
aad
pop
dec
or
mov
mov
aas
push
dec
mov
cmp
xchg
jmp
xchg
stc
cmp
nop
push
call
daa
mov
movs
xchg
adc
sbb
popa
mov
inc
jle
outs
or
push
mov
xor
mov
pop
mov
xchg
cli
mov
inc
enter
push
sahf
(bad)
cmp
sbb
lods
adc
sbb
imul
jg
xchg
mov
xor
frstor
imul
retf
inc
dec
mov
cs
xchg
cmps
aad
repz
mov
ins
dec
cmp
mov
add
adc
cmp
jl
cmp
inc
stos
das
sar
adc
nop
inc
sti
xchg
jae
aam
adc
fst
push
mov
ins
fs
movs
(bad)
adc
scas
mov
jb
mov
pop
bound
jae
xor
gs
xchg
ret
retf
sub
lods
add
sbb
(bad)
(bad)
shrd
jl
lock
fisttp
cmp
cs
push
les
add
repz
imul
cmp
inc
xor
and
lods
dec
cmp
imul
rcl
or
pop
mov
ins
pop
jns
pop
add
jb
addr16
mov
arpl
outs
adc
popa
test
or
bnd
fistp
mov
fidivr
sahf
xchg
pop
add
xor
push
shr
in
dec
imul
push
jl
inc
cmp
xchg
scas
retf
or
xchg
ins
or
call
push
pushf
dec
mov
fwait
adc
cdq
and
mov
sar
inc
mov
push
stos
mov
xor
neg
es
jae
les
and
inc
push
add
xchg
dec
adc
loopne
mov
mov
and
sti
sub
jmp
scas
xor
out
xor
fld
out
jmp
pop
test
sbb
mov
hlt
jp
mov
dec
inc
mov
pop
xchg
or
add
xchg
fincstp
sub
loop
or
sar
or
hlt
sbb
mov
mov
xor
outs
inc
adc
mov
pop
jne
sbb
add
sbb
popa
iret
dec
mov
imul
mov
movs
fs
repnz
sub
jp
mov
dec
xor
into
inc
mov
inc
fimul
sbb
lds
lds
(bad)
out
cmp
stos
dec
or
pop
dec
shl
and
pop
repnz
loop
jbe
stos
add
jg
sar
pop
jo
xchg
sub
movs
lods
jb
jb
retf
jge
ror
movs
inc
pop
frstor
cmp
push
gs
iret
push
push
cwde
xchg
not
jae
and
mov
sub
fsub
stos
jae
cs
pushf
ret
cmp
adc
je
jl
pop
fisub
(bad)
and
(bad)
mul
mov
(bad)
cdq
xchg
fldenv
jge
adc
jbe
out
xor
pop
les
jbe
sub
je
or
mov
inc
loop
bound
mov
jmp
and
adc
ins
out
fadd
cmps
cmc
add
cmp
ret
push
jmp
xchg
lds
repnz
and
cli
aam
aad
or
adc
push
jp
jg
(bad)
adc
xchg
jno
cmp
test
aad
xor
jmp
jl
mov
and
stc
cmp
xor
ins
mov
sub
sub
push
adc
aam
cmps
mov
rcr
sub
sbb
cmps
sbb
push
or
data16
repnz
ja
mov
dec
mov
pop
outs
shr
ror
xor
int
or
repz
sub
cmp
outs
popf
cld
pop
mov
aas
and
add
push
es
popa
(bad)
jmp
adc
lods
mov
ret
ret
clc
imul
call
mov
fadd
push
jle
pop
cmp
ja
cwde
test
das
jecxz
aad
mov
or
scas
hlt
(bad)
push
out
pop
cdq
mov
addr16
inc
(bad)
hlt
cmp
jne
outs
dec
lods
inc
jle
ins
gs
ss
sub
pop
dec
jne
fdivr
repz
gs
out
mov
call
adc
imul
loop
(bad)
(bad)
dec
push
mov
sub
jmp
and
push
(bad)
out
stos
out
push
sub
xor
sbb
test
stos
shr
sti
outs
mov
mov
stos
ds
ror
jb
jg
dec
add
push
inc
push
enter
les
test
and
shl
out
push
cmp
jno
rol
pop
(bad)
jmp
dec
stos
cmps
hlt
dec
popf
popf
hlt
cwde
or
push
cmp
retf
mov
inc
xchg
adc
jo
ret
pop
mov
push
retf
(bad)
(bad)
loop
(bad)
iret
dec
gs
out
aad
push
add
das
fsub
in
pop
mov
retf
inc
mov
in
mov
out
jae
aas
popa
lods
xor
xchg
jns
add
inc
jo
inc
imul
pop
sti
mov
dec
dec
xlat
push
cwde
dec
pop
sar
or
sahf
jae
add
adc
push
xor
imul
scas
aaa
push
bound
fstp
mov
sahf
push
mov
adc
mov
and
(bad)
mov
adc
cli
mov
sti
xchg
cli
cli
arpl
sub
fisttp
dec
(bad)
jbe
fadd
imul
mov
popa
jne
jno
fcom
and
xchg
ss
lea
hlt
and
push
iret
xor
ror
test
sar
sub
pusha
cli
ds
mov
jecxz
jecxz
in
mov
js
xchg
xor
pop
(bad)
ret
jmp
imul
and
and
xlat
push
(bad)
sub
xchg
call
push
xor
dec
data16
push
cmp
repnz
mov
psrad
es
xchg
cwde
push
pop
fidiv
jo
pop
add
das
or
cmps
xchg
mov
mov
into
xchg
xchg
pop
mov
pop
movs
cmps
mov
pop
xor
add
jb
push
pop
sbb
gs
push
sahf
imul
popf
adc
push
cli
mov
bound
add
inc
daa
dec
or
xlat
out
in
xor
loop
push
enter
mov
out
retf
sbb
inc
loope
xor
adc
outs
jmp
mov
mov
cmp
imul
cmps
(bad)
jo
push
cmp
lahf
and
sub
cmp
mov
push
sub
test
and
push
icebp
das
enter
mov
cmp
add
sub
push
and
popa
outs
enter
ret
xor
ds
(bad)
es
rcr
iretw
dec
leave
pop
push
xchg
jle
jnp
mov
jns
xchg
in
pop
lds
retf
mov
cld
cmp
pop
stos
cld
and
mov
daa
fcmovu
aaa
mov
icebp
pop
test
ror
out
popa
push
aad
jle
jns
les
and
lahf
mov
call
pushf
jge
mov
sbb
push
and
arpl
pop
cli
mov
adc
int3
mov
mov
int
sub
add
int
add
mov
adc
mov
lock
push
mov
ficom
cld
jne
mov
jne
arpl
scas
sahf
mov
imul
jp
call
push
push
pop
jmp
mov
dec
imul
sbb
pop
mov
mov
push
sub
xor
push
xchg
inc
fisttp
mov
ret
cmp
push
push
(bad)
fcomp
call
mov
mov
test
dec
mov
jg
xchg
icebp
call
jg
dec
pop
mov
js
(bad)
fldenv
jnp
jae
popf
test
int
cli
dec
jb
inc
and
(bad)
stos
or
xor
push
popa
js
sub
cmp
dec
icebp
pop
into
(bad)
cmp
xchg
and
push
pop
or
push
sti
inc
mov
add
and
in
jle
push
ror
push
xor
inc
into
je
repnz
jle
std
test
jl
fld
loop
or
shl
mov
cld
icebp
ror
rcr
in
(bad)
lock
mov
push
mov
or
mov
aad
ins
and
icebp
ror
into
pop
jb
or
das
(bad)
push
sbb
push
(bad)
or
jle
pop
xchg
pop
data16
or
and
popf
xor
pop
jp
mov
lea
leave
push
mov
sbb
sub
(bad)
push
cmp
loop
jbe
mov
mov
mov
cwde
push
dec
sti
mov
cmps
in
adc
sub
mov
xchg
xchg
push
mov
push
adc
popa
adc
sbb
mov
push
imul
cmp
mov
sbb
cmp
daa
aaa
and
push
dec
pop
inc
movs
repnz
inc
jge
mov
lahf
fdiv
outs
(bad)
xchg
mov
push
outs
cmc
(bad)
aaa
xor
mov
aaa
fistp
mov
gs
(bad)
int3
inc
dec
aam
inc
cli
fadd
mov
cli
out
pop
jle
dec
dec
std
mov
fsubr
movs
and
jbe
in
mov
add
or
call
add
dec
out
popf
add
mov
(bad)
scas
inc
xor
xor
std
cmp
mov
cld
fwait
std
movs
mov
and
xor
arpl
shr
mov
ret
jmp
nop
mov
js
xor
cmp
pusha
psubsw
jno
add
popf
movs
in
fdivr
sahf
enter
jno
aas
push
lock
cld
xchg
inc
cmp
mov
jle
mov
xchg
push
fnstcw
cmc
inc
mov
lods
jl
jae
scas
inc
or
pop
push
jne
not
push
mov
mov
jmp
stc
scas
ds
repz
jle
out
lock
adc
(bad)
push
sub
or
sbb
or
push
inc
sahf
ja
xchg
cmp
cmp
push
dec
mov
loopne
dec
xor
cmc
or
imul
xchg
sti
frstor
(bad)
call
inc
pop
pop
jne
and
fisttp
lds
jecxz
jae
pop
repz
pushf
ja
pop
or
jo
mov
mov
push
xor
fcomip
pop
inc
xchg
sub
pop
outs
fstp
inc
leave
mov
inc
inc
pop
das
xchg
pop
stos
(bad)
adc
mov
mov
xor
xor
jno
cmp
sub
out
cmps
aaa
das
pop
test
loope
push
dec
pop
retf
adc
gs
add
adc
fucomp
adc
mov
jge
in
leave
adc
sub
and
xor
or
sbb
jnp
mov
pop
cmp
je
jae
adc
cmc
rcl
xchg
loope
int
sbb
test
mov
push
dec
pop
xchg
jge
xchg
push
and
dec
jge
mov
cmp
push
sub
ja
dec
inc
in
cmp
jp
xchg
fmul
push
ja
sub
dec
ret
jge
out
inc
mov
adc
jp
mov
sub
pop
jg
pop
ret
(bad)
pop
repnz
add
sbb
adc
mov
sahf
imul
xchg
mov
retf
pop
in
push
ja
jg
scas
xchg
fimul
inc
iret
shl
lahf
mov
std
mov
adc
das
mov
rol
add
sub
test
addr16
fcom
mov
in
fwait
(bad)
sahf
xchg
ins
(bad)
fidivr
or
sbb
les
in
xchg
clc
mov
cmp
adc
out
hlt
mov
cmp
sti
stos
in
jmp
enter
hlt
mov
les
inc
pop
imul
mov
dec
(bad)
in
outs
shr
sub
fwait
dec
sar
(bad)
movs
cmp
inc
jle
icebp
cmc
jp
cmps
lahf
fndisi(8087
mov
fld
add
pop
mov
adc
repnz
cmp
push
(bad)
daa
ja
dec
ins
sti
inc
popa
pop
je
inc
add
dec
es
popa
xchg
scas
pop
mov
ret
xchg
add
dec
jg
rol
xor
pop
dec
loopne
sub
clc
aas
inc
jmp
cmp
shl
xchg
int
adc
jecxz
mov
xor
sbb
inc
leave
sub
jmp
xor
fsubr
mov
sub
fmul
jl
push
push
lahf
out
mov
jnp
pop
inc
in
inc
adc
jmp
pop
or
sub
jg
in
dec
rcr
int3
in
fsub
push
jmp
stos
sbb
inc
in
pop
int
movs
add
cdq
nop
loopne
push
xor
pop
sar
adc
mov
sub
add
(bad)
adc
jle
shr
in
(bad)
enter
sub
repz
dec
ja
and
jl
in
je
cmp
jp
mov
jns
sbb
outs
push
jb
xchg
nop
add
sbb
out
clc
mov
sbb
mov
dec
(bad)
cmp
push
fcomp
push
lds
fucom
pop
mov
sub
sub
pop
aad
test
dec
xchg
push
lock
fwait
mov
jp
pop
(bad)
lds
dec
and
sbb
sub
lods
in
(bad)
lea
dec
out
fs
(bad)
jne
ds
sbb
xchg
xchg
ficom
adc
out
jecxz
or
jo
dec
mov
jae
neg
shr
sub
arpl
xchg
xlat
clc
(bad)
arpl
lds
cmp
dec
sti
lds
fidivr
xchg
mov
fnstsw
inc
(bad)
sub
dec
push
aad
jb
adc
das
mov
jae
xchg
pop
ret
mov
xor
add
push
pop
ds
in
xchg
into
adc
jmp
xchg
sub
movs
mov
imul
and
inc
mov
sub
sub
mov
mov
hlt
cli
movs
or
frstor
add
xchg
xchg
push
fcomp
pop
mov
inc
jae
scas
loope
xor
mov
(bad)
push
mov
xchg
mov
push
aam
(bad)
out
sub
xchg
jg
clc
add
add
xchg
in
add
cmp
sbb
imul
cmp
cmps
iret
gs
jmp
mov
add
dec
shr
push
dec
aaa
repz
mov
sbb
repz
leave
leave
setbe
cli
sub
cmps
loop
aaa
rol
retf
es
dec
rcl
or
sub
pop
add
and
mov
ja
push
sbb
rcl
cmps
sub
rol
sub
test
push
das
xlat
ins
push
adc
call
fdiv
sub
xor
push
loope
jg
(bad)
push
sub
dec
pop
cmp
mov
lock
mov
cmps
jae
pop
sbb
xchg
pop
xchg
or
cmp
aaa
stos
xor
add
jecxz
int
sub
inc
call
or
mov
mov
ja
jmp
mov
adc
push
cmp
inc
call
add
mov
(bad)
and
dec
pop
fwait
adc
jbe
dec
xchg
cmp
cmp
jecxz
dec
and
mov
mov
retf
loope
fwait
test
call
pusha
push
add
scas
fistp
call
xchg
inc
push
pop
xchg
inc
xchg
sub
call
add
push
das
iret
std
push
jmp
pop
xchg
xchg
push
xchg
push
push
mov
inc
mov
cmp
or
mov
fadd
mov
enter
xchg
mov
sub
push
add
mov
mov
stos
jmp
je
mov
(bad)
cmp
mov
mov
xlat
loop
pop
lahf
pusha
aas
test
xlat
or
cmp
xchg
fisubr
rcl
(bad)
and
cli
aam
stos
jnp
jmp
adc
sbb
xor
jge
test
xchg
fistp
fwait
shr
test
fs
(bad)
mov
lods
adc
xor
inc
cld
dec
data16
in
inc
xchg
bound
adc
sbb
inc
cmps
jns
into
loop
mov
mov
jae
setg
ret
outs
out
adc
mov
ret
cmp
(bad)
in
icebp
push
xchg
cmp
mov
push
frstor
inc
mov
call
lods
mov
scas
jno
out
sub
pop
adc
push
mov
fwait
cmp
mov
fistp
sbb
mov
pop
mov
lahf
push
xchg
imul
and
lahf
test
pop
add
sub
cmp
mov
out
(bad)
fcom
mov
cmc
dec
and
fsubr
adc
xchg
ror
pop
(bad)
mov
inc
and
fiadd
cmp
xchg
int3
mov
movs
idiv
daa
scas
sbb
mov
pop
neg
sbb
sbb
jmp
xor
and
pushf
test
adc
std
outs
xor
movs
adc
cdq
and
arpl
out
mov
ins
inc
popf
adc
xor
sahf
addr16
mov
inc
and
rcl
mov
sub
ss
fdiv
xchg
es
int
hlt
mov
push
jno
int
repnz
adc
xor
sub
popf
mov
add
lods
mov
loope
or
jmp
pop
int3
xor
sub
aad
int
gs
movs
adc
add
retf
jle
xchg
inc
jl
or
xor
arpl
mov
jb
popa
mov
aas
cmp
popf
mov
ins
jns
dec
add
outs
push
xchg
push
in
adc
test
or
mov
mov
rcl
push
jp
add
adc
pop
cs
hlt
lods
dec
popa
rol
pop
sbb
sbb
les
test
jbe
test
(bad)
loopne
mov
test
xor
(bad)
clc
sbb
retf
xlat
iret
sbb
pop
pop
add
je
lock
inc
push
sbb
pop
cld
sbb
jle
xor
repz
rcr
or
jne
cmp
sbb
mov
shl
sbb
stos
fwait
rcr
test
aad
mov
pop
pop
inc
add
outs
movs
mov
pop
shl
icebp
mov
push
fdivr
xchg
scas
xchg
iret
xchg
push
add
mov
and
mov
imul
dec
pop
ret
jl
repnz
cmp
pop
addr16
pop
aas
cmp
ja
dec
jle
fild
mov
adc
mov
xchg
addr16
out
xor
into
mov
test
push
dec
(bad)
(bad)
pop
cmc
sbb
clc
dec
or
and
addr16
(bad)
sti
dec
push
daa
nop
xor
push
mov
pop
ret
push
inc
or
fcomp
inc
push
(bad)
and
movs
inc
jo
or
nop
arpl
lahf
cmp
dec
enter
stos
mov
push
loope
(bad)
pop
and
ja
retf
je
xor
stc
pop
ret
pop
mov
cdq
mov
mov
mov
leave
sbb
cmps
and
iret
and
sahf
adc
mov
mov
push
jne
jmp
cmp
push
cmp
add
ins
or
mov
call
mov
imul
xor
ins
sub
push
gs
mov
mov
or
or
push
push
in
(bad)
fnstsw
outs
cmp
(bad)
rcr
sbb
fistp
adc
add
sbb
test
jns
bound
shr
(bad)
imul
mov
mov
ss
pop
add
jae
pop
lea
lds
inc
mov
dec
inc
popa
scas
xor
cmps
xchg
cli
jae
adc
mov
adc
fcomp
adc
sub
push
push
lahf
bound
mov
cmp
loop
stc
xor
push
test
clc
ss
out
stos
outs
std
mov
je
outs
sbb
adc
test
and
pop
add
ficom
push
aas
pop
xor
rcr
fs
fld
rcl
inc
or
jle
or
pop
(bad)
aas
stos
clc
pop
int3
dec
mov
movs
sbb
sub
cmp
loop
jge
adc
(bad)
out
jecxz
loopne
mov
addr16
mov
nop
mov
dec
push
sti
dec
cdq
cmp
rcl
mov
cmp
fcomp
jne
sbb
test
ins
movs
sub
imul
or
(bad)
mov
cmps
test
int
add
mov
ret
repnz
fiadd
addr16
sub
dec
shl
add
(bad)
cmps
or
loop
lods
lods
es
inc
(bad)
out
inc
inc
ror
jmp
dec
xor
int3
sbb
jne
js
test
mov
mov
pop
int3
inc
arpl
lods
xor
int3
add
jo
(bad)
pop
in
aad
sub
movs
push
rcr
sub
add
push
std
rcl
stc
and
dec
cmps
push
jns
nop
lods
dec
cld
push
test
(bad)
sbb
repnz
jp
fmul
push
not
inc
ins
gs
retf
enter
pop
outs
dec
fist
daa
enter
out
mov
outs
loope
dec
fcmovnu
xchg
jl
imul
pop
cmps
retf
sbb
stos
jnp
cs
dec
gs
mov
movs
xchg
je
ins
fwait
scas
push
fstp
(bad)
pop
test
mov
mov
pop
pop
outs
or
inc
push
shl
mov
pop
fisttp
repnz
ret
es
out
pusha
adc
mov
inc
icebp
fadd
dec
sahf
cmps
push
dec
dec
sub
mov
movs
and
inc
outs
nop
test
and
movs
mov
enter
add
mov
cld
pop
push
popa
les
scas
in
ret
adc
lds
pop
mov
push
or
pop
(bad)
out
retf
sti
mov
or
ret
dec
mov
repnz
push
std
mov
mov
push
in
mov
psllw
sub
push
add
in
push
cs
pop
pop
in
data16
not
rcl
les
rcl
cdq
loopne
sti
fstp
adc
lock
adc
imul
cdq
rcl
add
es
fidivr
fwait
mov
aam
fbstp
xchg
jp
call
test
test
dec
mov
enter
pop
xor
in
inc
xchg
sbb
cmp
push
inc
pop
in
dec
aad
xlat
rdpmc
lods
ds
pop
or
inc
xor
shr
mov
adc
movs
inc
adc
mov
cs
xchg
dec
arpl
mov
mov
sub
fs
aas
pop
adc
mov
pop
test
mov
pop
mov
cmps
jb
adc
movs
adc
mov
fisttp
daa
xchg
sbb
sub
mov
retf
dec
xchg
dec
stos
test
call
retf
icebp
daa
bound
fisttp
test
mov
dec
push
clc
lds
leave
scas
out
das
sahf
or
sbb
dec
std
pushf
sbb
leave
test
pop
test
fsub
dec
cmps
push
bnd
sbb
pushf
pop
inc
mov
add
or
or
cmp
push
xor
out
cwde
loopne
data16
mov
pop
mov
call
mov
dec
lods
in
lahf
icebp
(bad)
ficom
icebp
xchg
inc
lahf
cld
sbb
push
push
inc
sbb
dec
js
jne
dec
cmp
pop
in
(bad)
push
mov
inc
xchg
mov
popa
dec
pop
aas
jle
jbe
xor
cmp
into
mov
inc
pop
jle
in
push
movs
addr16
iret
and
sbb
inc
out
jl
add
loop
cmp
inc
or
ins
mov
cmps
pop
mov
xchg
sub
es
dec
not
loope
push
push
push
aaa
inc
mov
xchg
cmp
fidivr
inc
dec
jno
aaa
jle
fild
push
cmp
mov
(bad)
jo
std
sbb
shl
test
popf
push
xchg
fisttp
adc
or
outs
movs
push
lock
xor
dec
inc
cli
arpl
push
sbb
xchg
pusha
dec
inc
and
and
adc
fbstp
popa
cld
repz
xchg
dec
sbb
jle
pusha
lods
mov
add
xor
jbe
mov
les
mov
test
add
fldcw
xchg
addr16
cmp
mov
dec
iret
cmovl
xchg
and
jno
adc
or
ret
add
in
jns
mov
mov
and
push
adc
jecxz
mov
test
jge
ret
jg
push
jecxz
dec
add
cmp
mov
outs
daa
or
(bad)
dec
xchg
daa
lea
outs
mov
lahf
pop
xor
jg
and
fs
daa
loope
add
pop
pslld
add
jmp
dec
out
popf
mov
retf
xchg
dec
push
xchg
adc
jp
push
mov
jecxz
add
ins
clc
shl
adc
out
leave
cmp
jno
pop
inc
pop
mov
imul
daa
adc
inc
push
xchg
call
sub
mov
pminub
into
and
xor
adc
loop
adc
inc
and
jecxz
dec
or
shr
add
sub
jo
loopne
jge
mov
imul
je
test
pop
fst
ret
outs
xchg
out
cmc
inc
add
dec
mov
push
jmp
add
mov
inc
aad
dec
pop
and
mov
dec
mov
or
push
popf
inc
leave
lahf
push
or
xchg
sub
mov
jb
mov
push
add
inc
add
dec
enter
fsub
in
xlat
iret
push
mov
nop
cld
mov
dec
outs
or
jmp
je
dec
add
add
mov
stos
loopne
jle
mov
shl
push
mov
adc
stc
nop
mov
add
pop
mov
pusha
out
jl
adc
mov
xchg
sub
test
dec
xchg
sbb
test
or
xor
aam
js
(bad)
or
ins
adc
push
adc
add
aam
push
or
stos
or
ins
out
pop
jmp
xchg
sahf
or
aad
mov
xor
pop
and
in
scas
scas
fwait
pop
xchg
adc
xchg
dec
sahf
pop
clc
jo
add
dec
rcr
data16
in
push
outs
add
sbb
mov
add
ins
mov
jbe
mov
in
sub
icebp
cmp
push
stc
cmps
and
imul
or
mov
push
lods
lods
ror
xor
add
idiv
arpl
add
call
(bad)
mov
dec
inc
ins
scas
or
dec
inc
pop
sbb
and
adc
mov
and
sbb
inc
xor
xchg
(bad)
sbb
ins
out
add
xchg
js
ja
mov
sub
lea
xchg
xchg
(bad)
pop
neg
repnz
mov
repnz
stc
js
movs
ds
addr16
mov
es
fst
jne
outs
jb
rol
push
cld
xlat
add
test
mov
into
push
sub
push
fwait
jmp
mov
xor
lds
jp
pop
fild
or
cmp
push
inc
mov
pop
push
mov
sub
or
mov
push
hlt
jne
enter
sbb
ja
es
mov
movs
xor
outs
jbe
fwait
or
call
mov
push
dec
(bad)
dec
fwait
aaa
jle
mov
dec
std
push
(bad)
aad
neg
scas
in
(bad)
in
lock
aas
jmp
cmp
stos
mov
push
inc
inc
outs
pop
scas
out
sbb
cmp
imul
ror
les
test
aas
xchg
pop
pop
int3
jl
sub
stc
repz
hlt
push
or
pop
add
mov
aad
(bad)
sbb
mov
pop
mov
les
pop
jmp
cdq
push
mov
test
mov
xchg
outs
inc
xor
sub
xor
sub
fdivr
ds
ins
sbb
loope
lods
mov
(bad)
shr
call
outs
lds
push
cmc
jg
fstp
lock
push
sbb
in
out
push
mov
and
leave
push
sbb
imul
into
lods
test
adc
(bad)
pop
or
inc
lahf
aaa
push
lods
imul
mul
je
int3
lock
daa
sub
fistp
pop
rep
repz
ret
mov
mov
fisttp
sar
jae
popa
push
adc
xor
inc
fidiv
out
loop
test
xchg
dec
lahf
sub
or
jmp
mov
dec
rcr
es
mov
call
add
push
mov
push
mov
sbb
in
pop
jne
push
xor
rcl
clc
and
push
jg
popa
(bad)
jl
sub
mov
cmp
sub
gs
mov
cmp
int
repz
push
add
dec
es
test
(bad)
cdq
leave
stos
icebp
dec
push
daa
in
jae
cmp
ds
sub
mov
inc
mov
push
sbb
dec
xchg
and
xchg
xor
in
dec
mov
mov
cmp
mov
dec
cwde
imul
mov
aad
cmp
es
add
lds
add
adc
fstp
cli
pop
cmc
sub
lahf
jmp
lods
iret
cmps
movs
mov
outs
pop
cmps
push
mov
mov
aad
mov
das
cs
xchg
fdiv
jnp
aaa
and
push
rcl
and
sbb
or
fimul
push
pushf
xor
mov
repnz
aam
pop
fimul
ja
ds
pop
cmps
movs
adc
es
xlat
sar
es
mov
js
mov
or
push
xchg
lds
hlt
retf
and
lods
(bad)
bound
jmp
bound
add
pop
push
jg
(bad)
nop
repnz
dec
gs
call
add
ficomp
ins
loopne
sub
mov
jae
or
(bad)
cmp
call
ret
into
xor
aad
pusha
push
xlat
jecxz
dec
add
inc
jo
int
dec
cmc
dec
cmp
cmp
cwde
ins
dec
in
or
gs
push
sub
xchg
popf
(bad)
out
shl
cmps
mov
(bad)
sbb
xchg
sub
sti
mov
ret
inc
xor
jae
and
and
scas
xchg
cs
add
nop
or
sub
adc
mov
in
mov
test
sbb
sbb
je
fbld
add
fdiv
fwait
mov
mov
mov
xchg
cmp
sbb
aaa
lahf
test
jb
dec
fld
aas
ret
loopne
lods
push
ss
mov
inc
(bad)
not
mov
imul
mov
or
add
iret
inc
stos
mov
fcmovnb
jbe
cli
adc
in
cld
(bad)
cmps
mov
fld
xor
popa
adc
jae
clc
xlat
xchg
jbe
xchg
mov
mov
out
push
inc
push
ret
cmps
jae
xor
and
test
mov
ss
movs
test
adc
mov
jne
in
jle
scas
ds
fisub
stos
in
dec
cmp
mov
mov
in
lock
and
inc
push
cld
mov
add
pop
xchg
jmp
dec
fs
push
jbe
cli
mov
and
loopne
cld
add
std
jnp
stos
dec
pop
or
add
pop
sbb
jecxz
sbb
les
mov
xor
pop
movs
je
jmp
sub
add
bound
jnp
jp
mov
xchg
jo
xchg
les
scas
ficom
mov
jg
bound
(bad)
loope
cmp
pop
or
imul
cmp
icebp
pop
daa
cmp
add
js
sbb
xchg
lahf
cld
jge
nop
jmp
ins
cmps
sahf
mov
jae
and
sub
in
adc
mov
retf
mov
jbe
sub
fisubr
imul
and
cmp
mov
(bad)
dec
and
mov
repz
movs
add
sub
push
xor
mov
jae
push
fsubp
out
add
imul
dec
aam
inc
push
adc
std
data16
clc
mov
mov
aas
daa
enter
ins
mov
mov
sbb
fisttp
adc
jmp
or
pop
sub
push
stos
and
add
int
pusha
jns
iret
retf
pop
scas
dec
test
test
sbb
shl
(bad)
int3
xchg
jg
lahf
loop
pop
cmc
push
or
lock
out
push
xchg
movs
pop
pop
fldcw
xchg
in
aaa
pop
stos
mov
dec
fst
in
and
inc
mov
sub
outs
mov
jg
sub
push
bnd
adc
sar
div
pop
xchg
and
xor
inc
retf
out
int3
pop
std
push
ins
(bad)
lahf
aam
(bad)
retf
(bad)
fsubr
rcl
add
pop
ret
outs
adc
out
push
push
push
dec
jp
push
xor
mov
cs
inc
cmovp
shl
stos
loope
xor
push
icebp
ins
pushf
loop
xchg
xor
retf
mov
movs
retf
pop
cmp
jbe
xor
sar
dec
jecxz
and
cli
sbb
jae
repnz
jg
jge
imul
fiadd
mov
push
adc
js
pop
test
jle
cmp
popa
jae
or
mov
add
retf
ret
and
clc
pop
mov
in
ret
xchg
mov
add
inc
xor
idiv
or
je
sbb
arpl
fmul
cmc
fadd
adc
cmp
mov
mov
xor
xchg
jnp
jo
movs
mov
push
dec
push
and
mov
pop
popa
xor
(bad)
mov
rcr
lods
sti
xchg
adc
push
and
mov
pop
mov
shl
jne
lahf
xchg
jg
sbb
jno
mov
push
dec
outs
or
mov
out
adc
test
cmc
ss
mov
sbb
inc
xchg
xchg
sbb
repnz
mov
and
jae
inc
xchg
fidiv
xor
pop
fisub
imul
sub
call
dec
shl
pop
sbb
jbe
mov
pop
cmp
push
out
pop
or
jl
sbb
enter
cmp
cwde
adc
loope
call
lods
ret
xchg
add
inc
push
lahf
ins
js
imul
push
inc
mov
or
cs
test
(bad)
adc
jno
stc
(bad)
and
test
push
fisttp
jecxz
(bad)
gs
out
in
push
ins
sub
enter
cs
sub
daa
mov
(bad)
sbb
call
mov
add
mov
jnp
fwait
dec
(bad)
sub
mov
lock
ds
imul
not
lods
les
cld
aas
scas
fst
loope
dec
or
jmp
jbe
add
popf
pop
sti
ins
add
and
cmp
lods
sbb
mov
jmp
outs
xor
jge
int3
pop
cmp
push
hlt
fld
scas
mov
nop
add
sbb
outs
lods
into
inc
in
xchg
call
mov
and
cmp
rol
mov
in
mov
jle
dec
leave
adc
cmp
xor
inc
mov
cmp
test
sbb
inc
fcmove
cmps
mov
add
pop
ret
sub
sbb
pop
jg
nop
pop
je
stos
and
jle
inc
ins
in
aad
push
sub
int3
xchg
fs
ds
sbb
push
push
js
fsubr
adc
push
mov
loopne
sub
gs
lods
stos
and
push
std
(bad)
shr
xchg
mov
call
inc
jnp
jge
leave
out
xlat
xor
outs
jmp
inc
js
shl
push
inc
call
push
mov
out
xchg
mov
fstp
pop
and
cld
xor
inc
push
daa
dec
aaa
pop
out
pusha
ins
dec
sbb
cmps
xchg
push
sbb
sbb
mov
inc
push
ret
shl
cs
pop
les
fmul
(bad)
mov
loopne
dec
cwde
mov
stos
aaa
loope
adc
outs
pop
repnz
xor
push
rcl
adc
je
and
cmp
push
sub
pop
add
hlt
push
sub
pop
inc
dec
pushf
adc
mov
rol
scas
sbb
push
jmp
and
adc
sbb
arpl
hlt
and
lea
sbb
mov
pop
adc
mov
jp
xor
or
pop
xchg
stc
dec
cmp
pause
dec
loop
fist
lds
je
add
or
xor
dec
scas
fcos
repz
cdq
inc
(bad)
inc
(bad)
xchg
cmp
pop
dec
(bad)
sbb
push
pop
adc
call
or
mov
aaa
xchg
xchg
loopne
ret
(bad)
es
aam
cmp
xor
cmp
add
mov
and
fild
retf
jge
sbb
and
dec
push
cwde
scas
outs
outs
push
or
add
outs
popa
mov
repnz
into
int
ret
out
sub
dec
fwait
sub
mov
not
stos
cmps
bound
jb
and
neg
mov
xor
push
pop
push
sub
popf
or
dec
lea
mov
out
leave
in
jns
sti
inc
cmp
test
pop
push
mov
(bad)
imul
fsubr
or
mov
add
sbb
add
add
nop
and
or
dec
ss
shl
fwait
jmp
push
push
or
repz
or
pop
in
or
jle
lahf
mov
mov
dec
dec
jns
jp
inc
jge
lea
ret
dec
addr16
push
jnp
adc
cmp
dec
sub
mov
and
mov
out
call
lds
adc
cmp
and
dec
dec
mov
inc
ror
cmp
push
repz
mov
mov
xor
sti
inc
cmc
test
sub
pop
push
adc
inc
add
repnz
jmp
dec
jnp
adc
or
pop
fstp
scas
xchg
adc
test
ficom
cmp
rcr
fisttp
cwde
xchg
aad
push
(bad)
movs
mov
repz
fisttp
ja
call
xchg
cmp
data16
push
mov
sbb
push
xor
fisttp
rcl
mov
inc
dec
jp
neg
ror
mov
out
inc
es
ins
(bad)
mov
rcr
xchg
or
neg
call
mov
fld
or
add
lahf
xchg
cmp
hlt
jecxz
dec
jmp
aas
ss
cmp
adc
fiadd
sub
pushf
sub
int
pop
xchg
or
and
adc
jle
or
std
mov
sub
(bad)
mov
bound
mov
call
cmp
cmp
mov
std
aas
pusha
outs
sub
jb
hlt
imul
adc
or
mov
retf
es
sti
dec
out
pop
(bad)
cmp
dec
cmp
lods
stos
cld
ja
gs
cmp
adc
addr16
xchg
jmp
xchg
test
addps
(bad)
aaa
(bad)
scas
retf
(bad)
adc
lahf
arpl
sbb
push
lods
ds
mov
and
mov
pop
add
sbb
ja
cmp
jle
lahf
pop
je
stos
imul
dec
std
iret
fisttp
cmp
into
mov
pop
xor
sar
sbb
mov
jecxz
xchg
(bad)
mov
push
push
sahf
pop
inc
add
(bad)
mov
pusha
std
jle
push
jne
out
jbe
push
hlt
add
and
movs
mov
jge
sti
clc
mov
sbb
cmps
mov
lods
aaa
loope
ss
test
mov
or
push
adc
jge
and
fisub
call
push
push
pop
cmp
and
xchg
push
in
(bad)
mov
xchg
jne
mov
loop
(bad)
dec
mov
push
popf
pushf
(bad)
or
and
mov
jo
mov
or
sub
ins
lods
sahf
fdivr
fcomi
in
inc
in
scas
pop
pop
jno
mov
cmp
outs
cs
inc
and
out
movs
adc
xchg
es
mov
xchg
adc
or
pop
sub
icebp
mov
mov
lds
sub
fwait
stos
fsub
ret
jo
and
sar
or
jge
rcl
out
push
add
sbb
push
xchg
mov
adc
add
xor
cmps
push
imul
mov
imul
adc
cmp
xor
icebp
dec
push
pop
test
test
cs
add
fbstp
or
mov
cmp
test
adc
cmps
(bad)
xor
sahf
loope
retf
call
mov
(bad)
mov
in
mov
aaa
pop
(bad)
int3
jne
xor
mov
(bad)
(bad)
add
add
jae
xor
mov
jg
pop
pop
adc
or
mov
mov
fsubp
movs
sub
xchg
cmp
inc
add
imul
ret
stos
fst
jl
les
hlt
test
int
or
jbe
push
sbb
es
mov
fadd
add
mov
xlat
cld
mov
mov
fdivr
je
sub
sbb
cli
inc
push
mov
jg
xchg
sbb
aaa
cwde
loop
push
adc
lods
push
shl
adc
xor
sti
cwde
stc
pop
stos
inc
call
mov
pop
xchg
scas
xchg
or
daa
sbb
xor
pushf
outs
sbb
mov
mov
xor
cs
retf
enter
ins
jne
popa
fs
jne
pop
in
fs
test
lea
ins
fs
(bad)
je
frstor
sbb
ret
mov
pop
add
mov
mov
push
sahf
call
jl
and
xlat
xchg
retf
shrd
ds
sub
ficom
retf
sar
jne
inc
fidiv
nop
mov
sub
adc
and
popa
sbb
adc
inc
shl
ja
jns
dec
outs
movs
cmp
jae
add
aam
jns
jg
add
lea
dec
ds
das
test
dec
add
sub
jg
mov
ret
mov
xor
sti
and
push
dec
bound
gs
and
mov
gs
stc
sub
retf
inc
ins
xor
aaa
sub
pop
rol
popf
mov
movs
arpl
lock
retf
ja
push
xchg
stc
int3
dec
xchg
jnp
adc
mov
fdivr
push
inc
outs
mov
xchg
cmp
push
out
lahf
pop
test
stos
adc
popa
movs
add
fldcw
shr
jmp
mov
mov
mov
int
add
daa
cmc
or
ja
mov
add
rol
dec
push
cmp
mov
inc
sbb
mov
push
xor
mov
mov
shr
jo
repz
and
aad
cmps
jne
add
shr
sub
xchg
pushw
xchg
adc
push
dec
sti
adc
cmp
imul
xchg
pop
outs
xchg
push
scas
inc
mov
or
cli
xchg
or
push
clc
xchg
rcl
fistp
mov
iret
jg
aad
sbb
and
lock
int
aaa
cmp
(bad)
adc
jg
scas
and
jmp
addr16
bound
xchg
push
inc
and
xor
cmps
sbb
jmp
pop
jns
and
cld
add
stc
mov
adc
mov
sub
fwait
imul
push
mov
adc
pop
sub
int3
sahf
and
xor
push
add
test
xchg
arpl
jle
outs
scas
stos
cmps
add
out
jge
mov
cmps
xchg
mov
xor
jmp
lock
pop
(bad)
mov
test
aam
aam
cli
xor
inc
or
xlat
add
push
xchg
ret
dec
mov
mov
cwde
mov
out
add
lods
xchg
xchg
jmp
in
mov
mov
loop
dec
in
cmp
mov
lods
cmps
imul
inc
jnp
test
sbb
mov
cwde
mov
adc
pop
out
in
(bad)
scas
mov
test
xor
bound
(bad)
lahf
jb
fs
mov
mov
mov
mov
pop
inc
(bad)
loop
lods
pusha
mov
fdivr
mov
out
mov
aad
ret
push
ret
test
jbe
(bad)
or
xchg
cmp
pop
xchg
aad
cli
sub
imul
sar
mov
mov
aam
inc
mov
push
out
stos
repnz
and
jl
and
sbb
ss
cmc
mov
add
loop
xchg
sbb
das
xlat
mov
gs
jge
and
mov
inc
emms
and
dec
sub
cmp
in
les
adc
fdivrp
or
jge
pop
or
mov
push
add
(bad)
repz
pop
mov
jo
movs
xor
adc
aas
mov
push
test
adc
int3
(bad)
int
sub
sub
jmp
clc
mov
aad
and
ror
mov
shl
(bad)
out
cmps
(bad)
test
mov
pop
es
or
aaa
and
out
fidiv
xchg
je
xchg
movs
or
xor
inc
popf
fidiv
jb
mov
jns
sub
cli
mov
jno
jg
adc
fstp
retf
dec
jmp
sbb
push
inc
out
outs
shl
xchg
inc
pop
jmp
or
pop
call
xchg
mov
les
repz
int3
inc
jnp
loop
out
test
jmp
jbe
and
cmc
icebp
stos
movs
fadd
or
ror
push
ins
jle
fmul
or
or
cli
mov
mov
xchg
leave
mov
arpl
sub
push
ds
cmp
shl
xchg
(bad)
mov
xor
pop
cli
push
adc
stos
loope
xchg
leave
aam
cmps
lods
dec
(bad)
sbb
adc
das
ret
dec
jbe
popa
test
inc
shr
xchg
cli
enter
(bad)
add
retf
(bad)
lock
lods
inc
clc
rol
jmp
jo
push
cdq
iret
xchg
lahf
jecxz
add
repz
adc
pop
inc
dec
or
push
std
(bad)
clc
outs
and
imul
gs
dec
mov
repz
xchg
inc
imul
in
adc
psadbw
scas
or
or
ins
ins
mov
inc
out
repz
mov
cmp
pop
dec
cmps
mov
popf
sub
loop
repz
dec
sbb
jmp
pop
test
push
ja
xor
out
gs
adc
sub
lods
mov
adc
lods
inc
add
pop
xchg
sbb
ret
pop
loopne
dec
adc
sbb
test
jecxz
fimul
es
movs
pop
mov
mov
push
idiv
cmps
pop
mov
adc
dec
cdq
dec
rol
sub
pusha
shr
inc
mov
les
popf
cwde
or
pop
mov
scas
sub
push
out
ja
sub
or
shl
aam
cwde
push
jo
sbb
fs
std
xchg
add
xchg
lock
cmc
dec
and
pop
in
add
shl
fs
jae
sub
popf
sub
jp
inc
pop
test
xor
std
dec
push
shr
or
inc
retf
out
mov
mov
dec
movs
aam
dec
mov
mov
retf
sub
test
stos
mov
pop
jns
lods
outs
int
push
ds
bound
ret
fs
fld
pmaxsw
scas
adc
jne
dec
inc
cmps
movs
lea
push
sub
jp
sub
mov
dec
mov
jb
push
inc
pusha
sbb
or
mov
pop
or
(bad)
cmps
push
test
test
fstp
es
pop
cwde
mov
pop
push
popa
hlt
pop
scas
and
ficom
cmp
addr16
rcl
sahf
xchg
pushf
icebp
(bad)
lea
fisubr
jmp
sar
mov
cld
xor
push
cmps
pop
push
iret
xor
js
jns
imul
xlat
xchg
inc
test
xchg
mov
daa
cdq
in
mov
dec
xchg
mov
add
sti
adc
fst
lds
test
mov
cmp
and
inc
xor
and
mov
push
sbb
sub
push
add
adc
dec
sub
test
es
xor
xchg
add
adc
xor
fs
fwait
mov
jg
or
pop
in
or
loop
(bad)
loope
hlt
jl
rcl
call
ja
mov
adc
mov
fisttp
pop
cld
outs
pushf
jbe
rcr
pop
adc
shl
mov
bound
jno
pop
pop
or
fisttp
sbb
ret
fsub
jge
retf
adc
call
sub
mov
push
jg
fimul
adc
js
adc
dec
mov
ja
in
ret
adc
push
pop
test
xchg
(bad)
push
mov
(bad)
mov
push
or
sbb
xor
int3
push
adc
dec
in
pop
fadd
nop
idiv
mov
call
out
outs
fstp
fadd
cmp
push
jns
cmp
pop
push
and
popa
push
stos
push
pop
mov
pop
inc
imul
scas
dec
fsub
(bad)
call
out
jmp
scas
fadd
cmc
mov
jne
cmp
(bad)
sbb
xchg
ins
in
xor
dec
mov
rcr
cmps
js
lods
sbb
loope
das
leave
mov
mov
(bad)
test
mov
scas
jb
ror
xchg
call
sub
xchg
ja
mov
shl
test
mov
outs
cmp
pop
mov
daa
jmp
clc
mov
imul
mov
xor
sbb
retf
mov
enter
jne
cmp
mov
sub
lods
pop
mov
shl
fcmovu
dec
jbe
mov
(bad)
bound
int
hlt
mov
jmp
pop
adc
or
ret
dec
adc
push
sub
mov
dec
ja
daa
and
ror
xor
xchg
sbb
cmp
shr
pop
dec
cmp
test
push
scas
stos
sti
data16
popa
jmp
xlat
push
enter
mov
push
and
hlt
jmp
push
imul
sub
fld
xchg
outs
jb
xchg
or
cmp
sbb
or
pop
mov
in
aam
pop
cmc
mov
mov
mov
popa
ds
psllw
loop
push
push
jne
inc
lock
aad
and
retf
sbb
loopne
int
scas
jmp
ins
xchg
and
sbb
(bad)
mov
push
xchg
lods
and
mov
cmp
mov
loope
jno
cmc
aad
xor
bound
adc
lock
sub
pop
retf
dec
pop
mov
push
add
(bad)
cdq
or
out
shl
mov
(bad)
mov
das
outs
cmps
adc
mov
out
movs
mov
adc
push
cmp
sar
sbb
(bad)
xor
xor
fst
cli
jmp
jmp
and
gs
mov
ds
test
sti
scas
cmp
sahf
mov
xchg
popa
push
popf
test
nop
mov
cmp
sti
test
cmp
pop
ficomp
hlt
pop
inc
cmp
aas
and
test
repz
dec
dec
loopne
cmp
cli
and
mov
or
int
xchg
xchg
(bad)
mov
xchg
dec
mov
nop
ret
aam
repz
ds
(bad)
loopne
xchg
std
xor
loopne
dec
dec
pop
mov
bound
sbb
outs
push
mov
mov
cmp
xchg
dec
xor
rol
lahf
xor
fistp
pop
popf
std
push
cli
mov
adc
les
call
call
mov
pusha
pop
jne
cmp
enter
ins
xor
adc
dec
cmps
pop
jl
dec
and
fisubr
test
mov
xor
popa
mov
shl
paddb
pusha
enter
add
scas
shr
inc
addr16
xchg
(bad)
cmps
jg
mov
xor
std
pop
in
sub
sub
retf
mov
adc
dec
in
clc
sub
push
imul
mov
mov
rcl
and
push
xor
and
and
adc
push
sub
in
lock
mov
mov
test
mov
frstor
jmp
int3
sbb
call
arpl
jg
enter
mov
in
mov
jg
jg
in
adc
loope
fst
stc
xchg
cwde
call
dec
cmp
(bad)
adc
lods
in
pop
test
pop
mov
call
dec
mov
cmc
lahf
sub
xchg
push
xchg
push
mov
mov
pop
mov
lods
push
xchg
test
aas
in
pop
add
inc
xchg
jnp
cmp
lods
jo
fstp
add
sbb
stc
jle
test
je
xchg
cmp
push
xchg
out
test
loop
xchg
pusha
mov
lods
ror
mov
mov
pop
sti
adc
aad
inc
mov
in
lods
es
sar
cmp
jns
pop
mul
mov
inc
jecxz
icebp
pop
pusha
jmp
ret
xchg
cmp
and
cdq
mov
push
jle
shl
adc
ror
ficom
leave
xchg
call
cmp
cdq
icebp
cs
jmp
jae
ret
pop
daa
test
out
(bad)
or
mov
lock
mov
je
enter
mov
adc
fild
mov
pop
mov
popf
pop
das
add
xor
xor
adc
ss
mov
mov
mov
jmp
rcr
repnz
sbb
jb
sbb
inc
push
and
pop
movs
sbb
mov
popf
inc
sti
jno
push
stos
xlat
hlt
fwait
mov
mov
mov
pop
mov
xor
inc
fsub
jne
cli
and
aas
sub
(bad)
lock
out
dec
pop
xchg
and
sti
mov
xlat
sub
sar
mov
jae
ja
pop
cmp
and
ds
je
call
call
and
mov
mov
repnz
dec
push
lea
call
ret
sbb
jle
arpl
xor
pop
mov
rcr
or
or
in
dec
or
jge
adc
jp
stos
cmc
imul
sbb
sbb
test
sbb
xchg
xchg
add
xchg
jnp
pusha
cdq
inc
cmps
in
pusha
je
mov
jge
jb
mov
loope
sbb
fsubr
jbe
popf
and
gs
inc
(bad)
loopne
dec
or
pop
mov
into
loopne
or
xchg
jo
mov
dec
sub
icebp
push
and
les
push
add
or
jnp
jb
sbb
ins
sub
jle
jns
mov
sahf
push
imul
sbb
repnz
mov
mov
jnp
cs
push
lock
mov
rol
test
cmp
fstp
pop
adc
add
cli
cmps
in
scas
and
mov
in
call
xchg
cmps
adc
(bad)
jmp
loop
clc
mov
sbb
sar
adc
pushf
js
(bad)
and
imul
enter
sbb
sahf
outs
cmp
imul
xor
aas
inc
popa
dec
scas
and
ret
sub
xlat
js
jp
bound
pop
inc
mov
inc
and
retf
inc
push
test
fistp
mov
test
mov
xor
cwde
inc
mov
lahf
int3
aad
fidivr
pushf
out
sbb
and
test
lods
sbb
add
or
mov
or
jmp
pop
addr16
mov
sbb
std
dec
movs
push
fiadd
jle
sbb
cs
mov
push
jp
cmc
jp
ja
call
mov
into
sar
repz
inc
cld
inc
int3
push
call
cmp
xchg
add
and
jo
outs
or
ret
jl
jmp
aas
cmp
add
jmp
xor
mov
xchg
jle
rol
call
jb
sub
adc
jmp
pop
inc
loop
xchg
cmp
popa
and
ins
fisttp
push
jbe
test
out
or
ficom
push
xchg
xchg
xor
cs
loope
lock
sbb
pop
cmps
pop
sti
cli
jmp
push
mov
mov
xlat
adc
mov
lods
test
pop
retf
retf
mov
jmp
(bad)
push
cwde
ins
mov
outs
inc
push
add
mov
push
and
addr16
fsub
into
jle
pop
add
test
xor
les
pmullw
js
into
fcmovnu
xchg
push
nop
sbb
jmp
xchg
retf
ins
fiadd
jo
scas
stos
pop
rol
shl
sahf
jecxz
lea
rcl
or
push
icebp
pop
loopne
adc
scas
repnz
mov
dec
xchg
xlat
jl
stos
std
or
ds
test
js
fs
sub
adc
adc
pop
inc
arpl
and
dec
mov
retf
pop
cli
pop
adc
das
dec
pop
imul
fs
mov
ret
sub
jmp
push
mov
outs
lods
stos
(bad)
fistp
enter
adc
inc
in
xchg
dec
adc
divps
cmps
leave
sub
mov
imul
xor
sbb
hlt
pop
inc
jae
je
pop
dec
inc
push
pop
shl
out
movs
aam
inc
inc
loope
jmp
movs
cdq
pop
lods
aaa
xchg
es
xchg
hlt
mov
mov
add
pop
fiadd
mov
(bad)
jne
inc
cmp
imul
mov
add
dec
shl
aas
push
hlt
aaa
std
jbe
sub
dec
out
retf
inc
sub
cli
pop
hlt
cmp
jp
inc
mov
lods
nop
sub
or
mov
pop
addr16
(bad)
mov
arpl
push
(bad)
aaa
ret
sub
xchg
cmc
ss
out
ins
test
outs
rcl
(bad)
adc
sti
cli
pop
outs
stos
neg
sbb
mov
sbb
loope
or
jmp
mov
dec
sbb
add
xor
in
adc
inc
(bad)
push
clc
popa
xchg
fldenv
cmp
(bad)
jp
into
lds
or
pusha
xlat
mov
push
jbe
push
push
pop
jp
retf
pop
aam
add
mov
mov
addr16
out
and
jmp
out
mov
pop
mov
dec
arpl
inc
and
sar
pop
es
je
retf
inc
ds
in
in
or
cmps
xchg
imul
call
stos
jmp
adc
inc
repz
scas
or
shl
int
lods
sti
jns
mov
ss
es
push
xlat
and
cmp
arpl
(bad)
lea
mov
lods
and
loop
pop
leave
in
pop
cdq
movs
jg
push
cmp
clc
cmc
cmc
add
(bad)
aaa
jmp
mov
xor
jne
xchg
retf
dec
lods
stos
(bad)
push
fdivr
ss
fwait
loop
daa
je
popa
ret
inc
mov
dec
loop
mov
xchg
std
mov
fild
pop
xlat
ret
and
popf
sub
scas
push
inc
pushf
inc
mov
adc
jle
out
mov
add
fiadd
sub
inc
iret
ins
int3
add
sub
daa
dec
push
push
or
fisttp
mov
call
loope
xchg
push
cmc
in
push
push
stos
jne
dec
clc
dec
mov
inc
xor
sar
(bad)
outs
inc
into
sub
call
jae
mov
xchg
pop
bound
adc
jo
(bad)
xchg
xchg
and
sub
xor
sahf
nop
cli
addr16
(bad)
imul
mov
inc
xchg
inc
fwait
jne
jp
mov
mov
call
mov
jb
retf
lock
dec
add
clc
pop
jb
icebp
dec
test
pop
inc
cmc
(bad)
neg
(bad)
fimul
les
dec
js
sbb
sbb
jecxz
cdq
adc
(bad)
ficomp
sbb
pushf
lock
push
fidivr
adc
stc
xchg
add
mov
fild
mov
sub
mov
push
es
add
push
ja
addr16
sar
fstp
hlt
jp
hlt
cmps
sub
in
add
out
dec
cmps
sub
outs
rcl
mov
imul
jne
cwde
test
push
xor
add
aam
loopne
dec
imul
xor
bswap
pushf
ins
scas
mov
addr16
inc
(bad)
jmp
movs
dec
jno
sub
loop
dec
adc
push
call
es
cmp
push
jbe
aam
stos
mov
cmps
dec
mov
jns
xchg
jns
xor
nop
(bad)
xchg
adc
inc
jb
xor
dec
mov
adc
daa
pop
loope
(bad)
jne
outs
xchg
or
mov
arpl
fidiv
mov
push
cmps
mov
inc
icebp
mov
push
pushf
dec
pop
mov
int
cmp
adc
shl
loope
mov
or
push
xor
cwde
repnz
je
das
cmp
jnp
adc
(bad)
xor
int3
ja
xchg
sbb
fisub
cmp
mov
enter
xchg
jecxz
jae
jnp
sub
mov
les
stc
jmp
push
repnz
(bad)
aad
jno
aaa
push
jp
into
bound
pop
pop
sbb
xor
aaa
sbb
idiv
repnz
xchg
sbb
mov
cmp
xchg
popf
(bad)
in
push
mov
xchg
mov
out
or
jnp
dec
ficomp
mov
ins
fldenv
xor
sbb
arpl
daa
inc
adc
pusha
div
out
add
test
mov
fnop
add
xchg
and
scas
sbb
hlt
inc
rcl
nop
mov
shl
out
xor
idiv
popa
nop
mov
mov
sub
test
test
xor
mov
xchg
mov
mov
in
les
pop
(bad)
xor
stos
aas
mov
jge
addr16
psllq
xor
jmp
ins
loope
pop
nop
push
push
stc
cmp
and
and
xor
fnstcw
push
mov
inc
icebp
fnstsw
or
mov
mov
fmul
fadd
xchg
cld
scas
popa
dec
adc
xchg
dec
add
dec
aam
push
sub
lahf
pop
sub
ins
stos
adc
xchg
repz
xchg
scas
xor
dec
or
or
cmp
xor
push
in
adc
inc
mov
add
das
icebp
cmp
lods
pusha
aaa
je
cmp
xchg
dec
test
add
mov
out
mov
stos
bound
leave
hlt
cmp
das
cmp
mov
fwait
cmp
jg
or
call
sbb
imul
mov
fiadd
xor
mov
outs
push
jnp
mov
ret
mov
dec
jmp
cmps
jmp
pop
gs
xchg
cmp
dec
mov
popa
or
add
jbe
imul
nop
(bad)
mov
test
sub
and
fbstp
bnd
xor
cmc
add
lea
inc
daa
add
or
movs
shr
aad
sar
out
movs
loop
adc
out
and
cmp
inc
jns
call
shr
shl
dec
and
ret
and
lods
pop
mov
fldenv
mov
daa
cmp
cmp
and
and
jecxz
xor
aas
imul
push
(bad)
jb
xchg
cli
aaa
xor
es
sub
test
retf
inc
mov
fldln2
mov
sub
sub
add
stos
fisub
fbstp
sbb
lea
rol
mov
sub
mov
sub
test
adc
lds
pushf
aad
clc
jbe
fwait
loope
ss
pop
or
mov
dec
aas
inc
xchg
adc
xor
cmp
and
ds
dec
xchg
inc
sub
xor
hlt
push
pushf
cs
inc
dec
sub
ret
pop
mov
pop
movs
cmp
cmps
cmp
pop
or
cmps
out
dec
push
cli
dec
pop
scas
push
call
push
add
sahf
jp
mov
pushf
retf
adc
sub
inc
push
shl
mov
jne
mov
pusha
shl
pop
add
sbb
add
fdivr
lock
xor
ret
inc
(bad)
mov
imul
jnp
aad
dec
push
add
and
setge
or
outs
pop
push
or
and
inc
pop
pop
mov
cmp
outs
bound
mov
movs
imul
xchg
xchg
repnz
lahf
rcr
fcmovnbe
aas
jns
xor
jp
mov
or
retf
jp
movs
and
dec
nop
sub
mov
xchg
add
retf
push
add
enter
sahf
ss
mov
popf
das
ins
fidivr
add
mov
leave
sub
shl
cmp
neg
adc
and
iret
sub
cld
xchg
jmp
push
mov
push
rcl
cmps
mov
pop
sti
push
pop
inc
mov
ficom
jle
mov
fdiv
sub
(bad)
(bad)
nop
ss
in
popf
stos
les
push
and
jg
aad
and
xchg
mov
dec
fadd
pop
(bad)
mov
xchg
fsubr
and
sti
test
outs
les
add
inc
mov
push
stos
je
pop
mov
sbb
mov
push
mov
call
ret
(bad)
int3
pop
cmc
and
mov
sub
and
out
jae
push
mov
xchg
dec
rol
or
xlat
add
gs
cld
sti
sti
xor
movs
jp
push
mov
jo
push
sub
sub
ins
push
aam
fbld
mov
les
arpl
adc
add
ret
aad
clc
test
mov
mov
mov
imul
add
ret
hlt
scas
dec
push
or
mov
add
psubd
addr16
mov
sahf
das
popa
stc
xor
out
sbb
mov
dec
sti
out
or
xchg
cmc
add
retf
enter
stos
aam
adc
add
(bad)
push
mov
xlat
xchg
and
cmps
xchg
dec
xchg
or
xor
ror
fmul
or
imul
jbe
pop
das
fistp
inc
enter
data16
push
or
and
fld
ins
push
fistp
imul
outs
popf
cmp
clc
jecxz
rcr
jl
mov
fwait
leave
adc
aad
mov
test
shr
mov
stos
dec
popa
xor
jecxz
push
mov
in
retf
sar
enter
rcr
pop
test
sbb
loop
sub
stc
mov
(bad)
xchg
cmp
or
cmp
inc
pop
mov
mov
sub
jnp
test
pop
scas
(bad)
mov
xor
lods
jl
push
cmps
pop
fadd
mov
mov
and
mov
pop
push
bound
cwde
mov
pop
push
mov
stos
lock
es
cmp
fcom
dec
push
xor
inc
icebp
xchg
lea
and
imul
outs
shr
pusha
ret
xchg
in
mov
mov
popf
and
in
xchg
stc
mov
xchg
pop
fcomp
mov
test
out
(bad)
call
retf
mov
push
icebp
call
cwde
std
and
and
jbe
ret
sar
pusha
int3
cmp
or
das
or
(bad)
in
and
cmp
in
or
hlt
add
das
mov
jecxz
jnp
fnsave
fisub
pop
mov
push
xor
movs
xor
push
mov
aad
popf
test
jle
sti
imul
fidiv
sbb
push
mov
imul
xchg
mov
xchg
je
ins
adc
xchg
mov
sub
call
or
movs
adc
add
inc
cmps
pop
or
mov
add
cmp
jle
cs
dec
rcl
push
or
cmps
addr16
jp
fild
clc
mov
in
mov
jp
sbb
(bad)
sbb
gs
scas
(bad)
and
mov
mov
adc
dec
pushf
sub
push
repz
cmp
ja
ja
inc
adc
xlat
ja
je
cmps
out
xchg
push
jbe
pop
and
adc
add
test
xchg
loopne
sbb
loop
addr16
test
dec
add
or
nop
call
mov
cdq
ins
repz
mov
cli
je
mov
mov
cdq
pop
ds
mov
adc
ret
pop
aam
and
push
ret
call
call
pusha
jne
xchg
push
fsub
push
and
stos
cdq
idiv
imul
scas
(bad)
or
push
or
mov
movups
aam
pop
xor
add
inc
pushf
jge
cli
popa
and
das
jl
sbb
push
push
mov
ins
movs
and
ret
fild
js
out
(bad)
lea
shl
sub
call
sbb
enter
dec
(bad)
xchg
jb
inc
test
xchg
loopne
(bad)
iret
mov
pop
std
arpl
scas
inc
fmul
pop
(bad)
ficom
ffree
mov
mov
pop
jns
cld
xor
(bad)
push
dec
frstor
cli
mov
nop
lds
mov
push
shr
dec
pop
sub
imul
cmps
fadd
xor
lods
gs
adc
stc
jg
mov
into
test
test
push
repnz
fistp
rcl
jg
bound
xor
sub
out
mov
sbb
cmp
test
addr16
daa
dec
dec
cdq
call
ret
adc
mov
lods
mov
pop
out
xchg
sub
push
mov
sub
pushf
gs
hlt
add
sbb
jg
mov
dec
sub
idiv
jp
and
mov
test
adc
ins
xor
test
adc
mov
cmps
jns
gs
mov
jno
mov
cmps
ret
mov
lods
jle
jne
xor
xor
aas
cmp
cmp
scas
or
call
pop
mov
je
push
push
fistp
or
xchg
jno
scas
sub
clc
ror
xlat
and
pop
add
aad
fild
movs
sbb
cmp
and
xor
das
call
leave
pop
xor
mov
mov
repnz
imul
rol
jmp
or
sbb
js
lahf
sbb
retf
sahf
jecxz
inc
cwde
into
sub
fcomp
cmp
jb
(bad)
dec
xchg
inc
xchg
(bad)
mov
push
test
xchg
sub
jae
out
mov
adc
sbb
ja
mov
popf
or
ror
dec
addr16
rol
aas
xchg
icebp
aad
adc
imul
or
jns
jmp
std
xor
sub
jecxz
fsqrt
out
push
push
ret
outs
xlat
xor
adc
ret
mov
xchg
mov
mov
test
jnp
or
(bad)
add
cli
xchg
lea
sub
ja
push
loopne
cmp
stc
mov
mov
jl
adc
sbb
call
cmp
pop
cwde
mov
or
xor
je
cmp
pop
pop
cs
mov
aad
pop
out
int3
sbb
test
xlat
mov
xlat
cld
xchg
bnd
pop
or
ror
inc
cmps
mov
sbb
ror
repnz
lods
inc
in
push
add
push
pop
dec
ins
cmp
and
mov
mov
mov
shr
imul
mov
xchg
mov
jl
arpl
xor
mov
fdivr
dec
retf
sbb
leave
mov
sub
inc
or
mov
js
jbe
sub
sbb
inc
pop
push
sub
cmp
ret
out
adc
adc
iret
xor
stos
stos
add
push
adc
in
cmp
jle
popa
pop
mov
pusha
mov
call
mov
mov
xor
ja
inc
outs
rol
dec
sub
clc
aad
arpl
sub
xlat
cmp
mov
or
imul
ins
and
mov
add
and
lahf
das
dec
adc
mov
add
push
jle
cmps
mov
fsubr
fcomp
xor
adc
(bad)
fst
and
mov
and
int3
mov
pushf
mov
mov
lods
test
or
out
dec
cmc
fwait
dec
shl
fsub
pop
push
les
jbe
mov
jl
retf
sbb
xchg
dec
jbe
xor
jl
or
je
jbe
std
or
or
xor
cmp
out
aaa
pop
cmp
xchg
adc
ss
mov
dec
add
(bad)
and
xchg
and
cmp
arpl
or
inc
push
pop
(bad)
xlat
mul
dec
sub
pop
mov
xor
jo
xor
popa
pusha
ins
push
jne
sbb
jmp
addr16
jbe
ja
mov
adc
call
lahf
retf
es
lock
and
push
(bad)
ja
sub
adc
push
rol
out
movs
mov
xor
mov
push
jmp
mov
mov
repz
imul
les
aas
out
in
mov
pop
mov
pop
gs
push
inc
pop
ror
mov
stc
and
das
mov
addr16
jmp
into
call
ja
mov
mov
lock
dec
mov
out
movs
test
mov
push
dec
dec
rcr
rol
ss
sar
(bad)
fisttp
push
cld
sub
pop
mov
xor
xlat
mov
fsubr
loope
pop
jbe
movs
jb
mov
cmp
and
xchg
icebp
aaa
add
add
fstp
and
scas
inc
xchg
nop
mov
pop
enter
jle
ret
jo
pop
cwde
mov
test
mov
outs
out
les
test
shr
jno
call
pushf
(bad)
pop
bound
cmp
jmp
cli
jo
js
test
rcr
cli
sbb
xor
mov
int
mov
in
lock
mov
add
jo
cmp
dec
inc
sub
imul
or
into
test
and
add
and
ss
fstp
ret
imul
pop
mov
ja
das
push
sbb
mov
shl
(bad)
(bad)
ins
jo
movs
adc
ror
jp
cmc
or
jns
sbb
inc
aaa
jbe
daa
push
ret
adc
sbb
outs
stos
bound
fcomip
ficomp
add
push
in
sbb
dec
fdivr
fist
mov
pop
inc
hlt
in
xor
push
movs
cmp
xchg
push
jo
mov
xchg
mov
mov
out
popf
push
mov
call
cmps
inc
pop
push
add
repz
int3
test
dec
retf
xor
or
ret
mov
xor
es
jg
pop
push
pop
pop
jl
fldcw
(bad)
cdq
mov
test
js
in
add
jmp
push
cmps
mov
xor
xor
int3
adc
and
jns
jle
movs
rcl
pushf
cmp
jns
push
pop
test
arpl
(bad)
ss
push
add
and
pop
mov
imul
(bad)
leave
sbb
or
jno
mov
pop
xor
mov
jmp
sbb
data16
mov
mov
ret
xchg
pop
push
ret
xchg
iret
jno
inc
stc
out
test
out
or
sar
sbb
loop
add
(bad)
fsub
stos
mov
out
int
lahf
inc
mov
dec
adc
ficom
inc
iret
mov
add
inc
nop
xchg
retf
jnp
mov
(bad)
push
fidiv
mov
xor
xor
inc
(bad)
int3
cld
xchg
push
cmp
cld
or
and
add
sub
imul
popf
add
add
lods
xchg
fcmove
mov
jno
retf
in
mov
pop
xchg
mov
in
lock
popf
inc
ds
jne
test
push
loopne
(bad)
pop
mov
inc
fist
inc
mov
inc
ret
pop
dec
sbb
call
sbb
in
arpl
js
mov
ins
and
push
mov
cmps
stos
mov
or
mov
mov
repnz
cmp
imul
out
std
mov
fild
ss
imul
mov
test
push
xchg
mov
pop
and
int3
inc
in
push
jge
add
adc
mov
inc
js
(bad)
push
dec
inc
jmp
loope
call
inc
in
pusha
aaa
lahf
into
cdq
mov
hlt
or
jmp
push
aas
rol
test
sub
or
pop
(bad)
xchg
mov
dec
cwde
retf
and
pop
mov
(bad)
lock
fnstsw
rcl
xor
jbe
xchg
aad
push
and
enter
mov
jno
std
push
mov
inc
hlt
xchg
sbb
cmp
push
mov
lock
out
mov
add
in
cdq
ss
leave
imul
test
popa
xchg
lahf
sub
lods
push
xor
sahf
dec
push
daa
(bad)
cmp
pusha
mov
gs
hlt
mov
dec
rcl
add
push
cdq
loope
mov
loop
mov
pop
std
mov
dec
inc
std
out
pop
mov
(bad)
outs
sub
jecxz
push
mov
ins
(bad)
jno
dec
mov
(bad)
sahf
pop
out
in
mov
and
push
data16
inc
adc
or
bound
outs
sahf
imul
and
inc
adc
pop
lock
call
push
inc
xchg
add
sbb
ins
icebp
mov
push
sub
iret
int
retf
xchg
idiv
(bad)
iret
fmul
add
rol
std
pop
mov
xor
hlt
stos
out
jo
das
out
popa
sub
xchg
jae
bound
ss
cmp
push
sbb
hlt
je
xor
inc
mov
xchg
adc
call
les
outs
add
fwait
out
dec
or
ret
into
dec
push
rcr
mov
sub
adc
sbb
jbe
cmp
ffreep
in
fild
mov
xor
ret
ins
inc
call
jmp
xor
and
push
adc
add
les
aaa
sub
xchg
cmps
fwait
das
cmp
test
arpl
adc
push
out
(bad)
push
inc
jno
out
xchg
push
mov
mov
int3
push
rol
ja
scas
dec
xor
and
icebp
addr16
pop
sar
inc
neg
fwait
test
cwde
push
mov
xor
jmp
cs
mov
jmp
cmc
dec
mov
inc
das
inc
(bad)
(bad)
mov
(bad)
call
inc
push
or
clc
ds
xchg
cld
cs
aad
cmp
sbb
xchg
test
retf
sahf
lock
pop
lock
xchg
pop
fiadd
sbb
cli
imul
sbb
pop
mov
mov
scas
xchg
dec
arpl
inc
(bad)
(bad)
and
pop
sub
rcl
sar
xchg
leave
push
stc
push
xchg
es
jmp
not
inc
and
or
sbb
inc
mov
gs
push
cmp
int
mov
pop
and
in
and
imul
jp
out
add
and
out
jae
fcmove
rcl
adc
aas
push
cmps
int3
fistp
aaa
xchg
inc
outs
cmps
int
jnp
xchg
cmp
je
mov
cli
fs
pop
jb
pop
fwait
mov
sahf
and
sub
mov
cwde
fld
clc
ret
jmp
pushf
xchg
(bad)
sub
stos
call
fs
dec
mov
and
lahf
push
ins
std
cmp
mov
mov
mov
popf
xchg
sbb
mov
daa
pop
mov
add
aaa
in
and
sub
gs
jle
es
stc
test
repnz
xchg
mov
pop
add
xchg
pushf
idiv
hlt
jmp
in
imul
dec
push
sti
add
in
mov
inc
aaa
sbb
sti
cs
lods
lahf
fistp
dec
jb
xchg
imul
adc
inc
or
dec
in
mov
test
jns
cs
dec
mov
movs
fld
xchg
repz
inc
pop
and
jbe
dec
push
(bad)
or
pop
mov
fimul
rcr
std
bound
ss
std
into
xor
xor
int3
sub
call
loopne
pop
sbb
out
xor
sub
mov
shl
push
mov
rcl
add
cmps
lds
neg
push
pop
xor
sti
loop
jnp
dec
hlt
jecxz
ins
xchg
stos
xchg
inc
ins
inc
ss
adc
rol
test
pop
(bad)
loop
push
xchg
ins
fsub
cmps
test
call
out
dec
dec
lea
jb
add
fwait
shl
rcr
jo
call
ins
and
lods
fld
icebp
mov
pop
inc
fsub
inc
repz
or
jmp
sub
or
jne
push
sbb
cdq
mov
xchg
sbb
add
sub
arpl
loop
stc
mov
pop
add
mov
popa
test
pop
push
xchg
mov
push
mov
repnz
xlat
pop
js
loopne
mov
xchg
iret
inc
jmp
sbb
jmp
data16
lds
cmc
push
in
pop
xchg
jmp
dec
xor
jmp
test
repz
push
(bad)
jns
inc
jp
push
fnstenv
or
jmp
ret
mov
pop
mov
push
xor
sti
add
push
push
mov
xor
sbb
inc
fbstp
pop
retf
cld
aas
cmp
retf
jp
mov
fwait
lods
cld
mov
jmp
mov
imul
pushf
aaa
pop
sbb
sub
dec
in
mov
ins
cmp
das
push
cdq
neg
das
adc
jp
(bad)
xor
sub
sub
cdq
sbb
jmp
leave
or
(bad)
jo
stos
and
jo
adc
mov
ss
in
jl
imul
stos
pop
mov
ins
jno
out
jg
add
pop
sbb
(bad)
pop
xor
popf
jne
movs
outs
xchg
mov
ds
call
adc
test
xchg
xchg
mov
dec
push
mov
bswap
das
repnz
stos
js
fmul
fnsave
mov
mov
mov
cmp
stc
cwde
test
int
ja
lods
mul
mov
(bad)
jno
in
cmp
push
cmp
xchg
ja
fmul
sub
cmp
ins
jecxz
xchg
adc
sbb
popf
mov
or
pusha
mov
lea
jb
sbb
cwde
adc
xchg
or
xor
into
sub
and
push
mov
jns
cmp
call
sbb
mov
pop
popf
mov
dec
(bad)
or
xor
out
loop
mov
mov
daa
and
stc
adc
mov
pop
repnz
adc
cld
hlt
inc
mov
stc
cmp
add
ror
jne
add
inc
scas
jmp
sub
jg
xor
sbb
stos
lds
popf
mov
add
cmp
push
xlat
jnp
mov
xor
std
test
xor
(bad)
mov
add
mov
rol
neg
int
imul
out
or
inc
push
data16
dec
push
(bad)
lods
mov
xor
add
fstp
and
shl
ds
push
and
xchg
gs
leave
sbb
jmp
inc
adc
adc
or
or
and
sbb
mov
sub
push
push
xchg
jmp
dec
lods
out
out
pop
ss
push
int3
push
or
add
sbb
inc
aaa
mov
hlt
cmp
push
sbb
ds
adc
or
fnsave
inc
js
pop
mov
jmp
repnz
and
dec
sub
in
iret
cmps
push
cmpps
cmp
dec
xor
stc
loop
jae
je
mov
mov
push
jl
push
and
dec
xchg
mov
lds
lods
js
ins
cs
leave
jbe
(bad)
jnp
cwde
mov
stos
xor
pop
xor
std
pop
pop
ins
retf
cmp
xor
mov
in
addr16
aas
xor
daa
push
push
sbb
sahf
dec
lds
mov
clc
shr
les
sbb
out
or
(bad)
shl
xor
add
mov
pusha
imul
ror
xchg
je
push
mov
rol
pop
fwait
imul
ja
add
add
jno
mov
push
add
lods
ret
out
pop
dec
jbe
push
aad
or
outs
ins
jmp
mov
push
inc
or
out
jno
push
ret
jmp
push
je
pop
adc
mov
add
push
mov
sub
jbe
or
mov
sahf
leave
enter
fist
inc
pop
pop
inc
inc
into
loope
xchg
xchg
add
add
cdq
jae
sti
jmp
mov
cmpps
cwde
xchg
icebp
ins
ja
xor
dec
adc
dec
adc
movs
icebp
scas
sbb
(bad)
(bad)
out
mov
cld
sahf
mov
pop
push
add
repnz
add
js
aad
rcl
mov
icebp
mov
or
cmp
dec
push
stos
or
lds
(bad)
cmps
fwait
shl
adc
(bad)
xor
pop
arpl
dec
rcr
int3
dec
mov
(bad)
jns
in
lds
in
jp
pop
scas
xchg
xor
pop
push
ss
push
enter
movs
xchg
mov
add
aad
rol
or
and
in
or
loop
pop
bound
fimul
cdq
in
push
xor
sar
push
xchg
in
sbb
ret
ja
xchg
retf
push
cmp
jmp
scas
push
inc
inc
mov
repnz
call
mov
or
pop
xor
pop
lods
xor
jne
mov
and
mov
dec
sub
std
lds
xor
sub
leave
sti
dec
inc
je
scas
popf
jge
nop
dec
in
add
imul
clc
lahf
test
out
or
jle
sub
stos
std
jne
je
dec
mov
jmp
out
lods
das
jg
push
push
aad
ror
imul
mov
adc
pop
dec
cmp
mov
aam
iret
call
jecxz
fcom
scas
repnz
xchg
test
cwde
mov
cld
jge
dec
cmps
(bad)
bound
sahf
iret
(bad)
push
mov
pop
dec
cmps
mov
mov
in
dec
xchg
cmps
jne
stos
es
popf
shl
ins
xor
cmp
push
pushf
adc
xlat
bound
pop
fidivr
mov
sbb
addr16
leave
or
inc
jge
cld
scas
aad
lahf
xor
sahf
inc
fs
and
popf
add
stos
rcl
push
cmp
mov
fisttp
mov
cmc
into
xchg
push
jo
icebp
pop
jbe
xchg
cmp
jo
xor
loope
sub
(bad)
sahf
sti
sub
movs
or
pop
stc
stc
pop
mov
jl
(bad)
fstp
call
xchg
cmp
mov
push
jmp
jmp
(bad)
push
call
repz
mov
int
adc
or
imul
dec
(bad)
xlat
push
cdq
dec
xchg
mov
sub
mov
lods
mov
dec
pop
jno
movzx
in
dec
repz
(bad)
jl
mov
and
push
or
mov
loope
push
adc
and
retf
mov
cmp
int3
and
pop
hlt
ins
aad
cmp
mov
ds
jl
xchg
mov
fwait
pop
cwde
xchg
xlat
sub
and
inc
ficomp
push
push
popf
imul
pop
mov
inc
xorps
popa
and
mov
aam
mov
dec
sbb
nop
leave
icebp
maxps
mov
fadd
mov
stos
xor
push
inc
or
sbb
adc
enter
loopne
or
shr
fbstp
icebp
adc
emms
cmp
jecxz
in
jne
cli
(bad)
div
push
in
in
jmp
ret
or
hlt
or
xor
or
movs
cmp
cmp
out
mov
jmp
jne
jns
test
je
sbb
out
cmp
pop
fistp
enter
popa
mov
cmps
cmp
dec
ret
mov
or
fstp
inc
popf
in
fwait
aam
sub
ret
pushf
jnp
hlt
adc
data16
outs
push
mov
sbb
dec
or
addr16
add
jb
pop
std
jl
arpl
xor
ffree
jp
xchg
cmps
jbe
cli
jnp
pop
lods
and
lahf
jg
daa
sub
mov
fidiv
fnstsw
xchg
pop
retf
mov
das
lods
sbb
pop
cmp
rol
pusha
clc
ffreep
lea
pop
retf
mov
add
xor
adc
xchg
pop
dec
nop
pop
and
and
in
xchg
sub
or
cmp
not
repnz
dec
jno
mov
jle
sub
pop
aaa
shr
or
pop
xchg
xchg
int
call
push
scas
jno
xor
jg
in
jmp
xor
push
pushf
popa
push
jg
push
in
hlt
inc
fcmovne
clc
inc
inc
push
test
test
xor
cmp
push
xor
out
sub
(bad)
out
pop
xchg
inc
sub
dec
mov
out
jg
fwait
test
mov
call
and
test
dec
inc
test
popf
leave
cwde
mov
or
add
inc
loopne
pop
shl
popf
sar
mov
call
pushw
jge
lar
mov
inc
mov
push
push
mov
in
retf
in
xchg
pop
cmp
lea
sub
imul
jno
sub
jmp
cld
jb
adc
mov
ror
add
push
jno
xor
pop
repnz
popa
stos
outs
xchg
mov
sti
mov
div
loopne
push
inc
scas
(bad)
xchg
xor
sub
hlt
sbb
push
retf
pop
(bad)
nop
sbb
and
pushf
jns
xor
call
mov
lea
xchg
je
mov
js
mov
or
xor
mov
ja
fimul
rol
or
fsubrp
dec
sub
iret
pop
xor
push
ss
test
add
adc
dec
iret
popa
out
inc
int3
inc
jmp
cmp
call
mov
test
sub
movs
mov
fiadd
(bad)
and
bound
in
xchg
adc
push
and
iret
mov
(bad)
push
inc
test
add
dec
and
mov
std
dec
mov
mov
dec
and
call
and
lods
cmps
aad
sbb
sbb
scas
into
(bad)
in
ss
dec
sbb
push
call
popa
sub
dec
xor
pop
mov
sub
xchg
sub
pop
scas
(bad)
xchg
push
or
cmp
cwde
mov
or
or
aad
je
add
inc
mov
jecxz
push
adc
stos
cmp
jg
or
cwde
pop
cmp
and
mov
movs
pop
stc
adc
retf
sub
mov
pushf
xchg
aaa
outs
das
dec
arpl
fnsave
and
into
hlt
pop
mov
pusha
jb
aad
dec
push
xor
or
iret
add
dec
or
sub
mov
dec
loope
hlt
xchg
pushf
xchg
lods
stos
js
push
lahf
fisub
fstp
pop
or
js
shl
push
cmp
out
sbb
push
out
adc
push
stc
cmp
clc
sub
jecxz
inc
mov
pop
movs
cld
loopne
cmp
and
jmp
stos
pop
fcom
repnz
lahf
adc
sub
in
sub
fdiv
mov
cmp
add
fadd
out
in
ja
push
push
add
retf
pop
sbb
dec
mov
mov
retf
leave
(bad)
test
aam
push
cld
test
(bad)
inc
test
test
add
sbb
sbb
cmps
and
cli
mov
pop
and
xor
movs
arpl
inc
out
call
imul
ins
loop
xlat
cmps
scas
cmp
inc
mov
in
outs
int
lock
or
cmp
or
(bad)
imul
out
inc
test
shl
fwait
(bad)
xchg
in
sub
cmp
ins
repnz
cmp
repnz
call
psubusw
leave
in
lds
xchg
mov
in
and
aaa
push
fiadd
ds
cmp
fdiv
rcr
adc
call
mov
sub
push
and
cli
sbb
cmc
push
mov
or
push
call
jg
jne
loop
inc
shl
in
push
cwde
inc
in
add
xchg
sbb
movs
sbb
out
pop
(bad)
jno
xchg
push
push
cdq
sbb
fisub
sti
cmps
lods
mov
inc
jmp
retf
pop
pop
sub
mov
retf
pop
arpl
nop
div
mov
inc
bound
dec
dec
push
dec
xlat
mov
lar
cli
js
push
in
xor
lods
in
pushf
inc
(bad)
scas
jnp
lea
int
mov
mov
push
movs
lahf
leave
std
outs
loop
pop
and
ins
(bad)
mov
cdq
cld
retf
and
mov
(bad)
cmp
mov
retf
sbb
xor
push
dec
pop
sahf
jnp
and
xchg
cli
icebp
nop
xchg
add
mov
add
push
and
pushf
dec
outs
add
in
jle
mov
(bad)
pop
inc
outs
aas
test
and
sbb
mov
xor
dec
jg
(bad)
sbb
lock
fisttp
mov
cmc
sahf
dec
arpl
sar
push
movs
and
loop
sahf
mov
mov
mov
out
test
pop
adc
js
fdiv
fbstp
xchg
int
dec
das
imul
and
(bad)
rol
sti
push
jno
pop
popf
cmp
jns
das
adc
jge
gs
mov
adc
popf
leave
(bad)
add
push
leave
repz
mov
adc
test
jmp
push
push
(bad)
in
jb
mov
pop
pushf
stos
dec
mov
call
and
adc
and
push
dec
je
aad
jg
adc
pusha
(bad)
in
scas
xchg
xchg
pusha
or
jne
popf
add
jle
popa
or
and
cmp
icebp
and
imul
or
and
imul
cs
sbb
mov
mov
jne
pop
xchg
push
cdq
repnz
in
test
inc
dec
les
mov
cli
retf
adc
rol
fwait
jbe
pop
mov
pop
in
jl
inc
mov
mov
es
sar
push
outs
or
pop
sbb
push
shr
pop
push
or
stos
mov
test
push
jg
or
inc
gs
loope
push
sub
(bad)
push
and
inc
push
lods
mov
xchg
or
mov
int
dec
fisttp
mov
es
popa
pushf
out
retf
fiadd
stc
pop
pop
repz
dec
sbb
fwait
mov
in
ins
out
lahf
add
std
jle
clc
adc
stos
xlat
add
mov
and
jne
xor
and
cmps
jbe
adc
xor
arpl
dec
test
push
adc
fs
mov
stc
cmps
lock
jbe
aas
adc
jecxz
sub
mov
mov
mov
leave
sbb
inc
dec
arpl
mov
addr16
or
rcl
test
test
inc
idiv
(bad)
mov
xchg
push
mov
cwde
aad
mov
adc
dec
and
sbb
les
in
jnp
mov
jnp
jae
jmp
pop
inc
mov
and
xchg
jle
ret
xor
sbb
inc
stos
je
test
out
jmp
push
mov
aam
sahf
sbb
out
rcl
das
sbb
adc
std
mov
adc
aas
xchg
popf
inc
jmp
sub
in
ds
shl
add
pop
test
lods
sub
mov
scas
jnp
mov
xor
jbe
mov
(bad)
mov
adc
ror
mov
das
mov
les
add
ss
(bad)
jg
in
lds
and
pop
push
pop
scas
mov
jle
inc
inc
popf
repz
addr16
push
sar
gs
mov
jl
movs
jp
aam
not
dec
or
pop
mov
bound
les
or
test
mov
sbb
or
jno
shr
inc
adc
jae
inc
jae
in
sbb
mov
pushf
xor
mov
stos
sar
lds
mov
mov
push
push
es
inc
push
jl
push
loopne
jne
lahf
imul
out
inc
dec
fcomp
sbb
cmps
test
xlat
sbb
fcomi
out
dec
sub
popf
push
sbb
test
jne
ins
add
xor
out
push
iret
push
in
ins
sub
sbb
clc
push
daa
inc
and
push
mov
test
outs
(bad)
mov
mov
dec
je
ja
jge
pusha
mov
mul
(bad)
shr
lds
cmp
idiv
fild
mov
in
jecxz
mov
adc
push
mov
sub
cmps
es
in
xor
or
arpl
push
js
xchg
test
das
pop
in
push
xchg
pop
out
call
mov
loop
or
call
sub
jmp
inc
popa
imul
jno
fild
or
mov
call
int
aam
jp
stos
push
jbe
push
data16
cli
div
movs
sub
xchg
jae
push
outs
dec
call
sbb
and
adc
sbb
mov
outs
ins
nop
popa
jg
or
iret
ja
arpl
int3
xor
shr
jecxz
xchg
push
pop
stos
xchg
cmps
mov
in
gs
jnp
dec
retf
hlt
pusha
test
inc
fisttp
inc
lods
cli
or
fidivr
rol
imul
xchg
or
mov
mov
icebp
pop
daa
add
mov
pop
test
loopne
adc
xor
xor
stos
push
jmp
data16
pop
dec
jge
pop
adc
fs
sub
mov
popa
in
and
stc
popa
rcr
lea
and
pop
aam
ror
sub
mov
enter
add
inc
mov
dec
xchg
adc
pop
inc
(bad)
loopne
mov
dec
mov
iret
pop
cs
(bad)
retf
mov
inc
outs
aaa
mov
push
add
mov
pushf
scas
xor
hlt
cmp
mov
cmp
mov
dec
add
sbb
push
sahf
es
adc
call
and
jmp
cld
test
out
mov
inc
loopne
out
nop
loope
lods
sbb
stos
jg
mov
add
xchg
jmp
mov
xor
adc
fwait
addr16
cwde
cmp
jmp
int3
xor
jecxz
inc
and
sti
mov
retf
sub
push
mov
(bad)
test
arpl
dec
ins
imul
loopne
sbb
fdiv
xchg
ins
cmc
xchg
jmp
out
xor
sub
jge
stc
mov
or
sub
xor
scas
cmp
enter
mov
data16
int3
stos
imul
xchg
in
dec
and
or
dec
aad
dec
sub
data16
xor
ret
mov
outs
mov
pop
pusha
sub
scas
enter
loope
inc
ud1
shl
and
fwait
xchg
pop
inc
out
mov
jns
ins
jle
jmp
(bad)
aas
ins
and
pushf
xchg
dec
cmps
stc
movs
loop
dec
push
ins
adc
and
lods
in
js
push
jnp
mov
(bad)
mov
and
test
xor
shr
adc
(bad)
icebp
call
cli
adc
pop
imul
mov
repz
hlt
std
pop
dec
cmp
fwait
fs
jge
fcom
adc
and
xor
js
repnz
cmps
mov
xchg
jno
push
sub
jbe
mov
mov
data16
inc
rcr
fstp
idiv
pop
jo
or
loopne
adc
cwde
xchg
repnz
out
push
push
cdq
imul
push
hlt
cmps
gs
jno
sub
mov
stos
adc
cdq
dec
sti
sbb
mov
test
mov
adc
das
xchg
mov
fstp
test
fld
cld
mov
adc
sbb
push
and
dec
jmp
xor
or
xchg
icebp
jne
sub
inc
push
cmp
fnsave
shr
fwait
aam
xor
jbe
jbe
les
pop
retf
js
icebp
pop
jp
ins
(bad)
mov
dec
xchg
mov
addr16
ja
sbb
adc
or
fistp
cdq
add
lods
inc
cwde
jne
push
xchg
ret
add
sti
les
in
mov
(bad)
addr16
std
pop
or
les
test
sbb
pop
test
shl
or
shr
aaa
(bad)
cmp
cmc
sub
sbb
lock
jmp
or
out
and
in
sbb
cwde
int
call
sub
push
out
dec
hlt
and
xchg
sar
fnstenv
or
sub
pop
sbb
in
enter
adc
sbb
cmp
popf
xchg
sub
cmc
repz
lods
xor
ins
lock
fdivrp
mov
(bad)
pop
add
aam
jnp
xor
mov
mov
add
xchg
shr
adc
pusha
cmp
cmp
push
mov
(bad)
xchg
loop
jl
adc
ins
aam
dec
dec
mov
pop
into
cmp
lock
or
jle
test
and
clc
pop
mov
and
mov
mov
test
je
repz
int
mov
cmps
push
outs
cwde
pop
stos
xchg
stos
push
push
or
or
and
push
loope
mov
fisttp
fs
test
add
(bad)
sub
push
data16
into
aaa
ds
sub
stos
scas
mov
lock
add
movnti
int
ins
pop
pop
jmp
mov
(bad)
ins
ds
stos
popf
inc
test
push
icebp
out
loopne
pop
icebp
in
pop
mov
mov
mov
imul
xor
in
and
fimul
movs
out
lods
cld
retf
shl
inc
test
pop
jl
movs
loope
push
test
and
dec
mov
pusha
lock
shl
std
stos
inc
fwait
ret
mov
pop
sub
popf
or
sub
fs
scas
jmp
xchg
in
outs
cmps
mov
test
fcom
cmp
jp
fdiv
fmul
cld
xchg
pop
lock
imul
add
aas
sub
and
mov
stos
out
push
retf
pop
daa
sbb
jnp
idiv
loopne
sahf
ror
xchg
jp
pop
jns
popf
and
mov
popf
popf
xor
into
inc
retf
or
and
inc
mov
inc
loop
in
pushf
lods
jl
xor
ret
xor
push
jnp
retf
lock
dec
pop
inc
sysexit
jmp
xchg
inc
pop
sub
rcr
(bad)
cmp
rcl
or
push
mov
sbb
sbb
cdq
in
es
ja
pop
rol
add
ret
in
retf
cmp
fstp
jb
adc
sub
pop
mov
jle
or
ror
mov
shl
inc
xchg
outs
imul
das
sub
ins
pushf
arpl
or
jo
test
(bad)
rcl
or
add
enter
movs
retf
jl
fcomp
in
lods
out
pushf
pop
(bad)
les
jns
pcmpgtb
or
push
push
xchg
and
(bad)
movs
retf
dec
call
pop
jnp
lods
popa
out
adc
scas
cmp
sub
cmp
leave
lods
jge
sub
push
jae
aas
cmp
aam
mov
(bad)
jns
or
add
imul
test
fstp
pushf
mov
jmp
in
test
mov
js
loope
pop
sbb
(bad)
mov
lds
hlt
sbb
push
push
add
ds
pushf
jg
repz
loope
dec
(bad)
fimul
mov
sub
push
xor
sets
jge
movs
push
mov
pusha
das
cmc
or
and
inc
mov
loopne
and
push
push
leave
cmp
pushf
lock
sti
dec
stos
jl
lods
pop
dec
mov
clc
retf
cmp
cwde
aad
(bad)
ja
std
cli
es
dec
in
inc
hlt
xchg
push
inc
jns
sbb
icebp
and
enter
jno
imul
jbe
nop
jge
aam
test
xor
test
mov
mov
(bad)
pushf
dec
pop
push
jo
adc
dec
imul
push
cmc
dec
cmps
sbb
mov
cmps
or
jb
xor
xor
mov
jnp
mov
loope
ins
jno
push
enter
jne
inc
xor
adc
cli
cwde
dec
aaa
cmc
mov
in
cmp
fild
xor
cmp
outs
add
retf
jno
or
repnz
mov
cdq
jns
nop
sbb
adc
mov
test
sar
in
cdq
(bad)
out
fs
add
fdivr
push
pop
sbb
pop
aas
jl
cmps
int
fisub
sub
cmp
(bad)
rol
or
stos
lea
push
lds
(bad)
jg
dec
pushf
mov
or
mov
dec
inc
jne
or
inc
push
pusha
inc
fsub
and
repnz
pop
repnz
mov
cwde
(bad)
(bad)
pushf
mov
or
adc
jb
ret
aas
ja
jnp
dec
mov
ror
rol
pop
cmp
mov
std
pop
loopne
movs
jb
push
popa
ror
xchg
dec
pop
bound
int
pop
retf
mov
aad
stos
mov
mov
scas
shr
push
add
sub
mov
fldenv
call
stos
jmp
test
mov
dec
mov
test
push
xor
mov
add
into
(bad)
fdiv
cld
or
jo
mov
sahf
sbb
ss
dec
cmp
aad
dec
push
inc
clc
jle
push
xchg
(bad)
sub
lahf
and
lods
adc
jno
and
aaa
pop
mov
pop
outs
or
call
loopne
jmp
push
jns
stos
mov
arpl
fucomp
stc
movs
add
sbb
push
fnstenv
sub
dec
xor
ret
js
ins
mov
dec
(bad)
aad
xor
clc
std
addr16
mov
cwde
fwait
retf
inc
sbb
vcmpss
sbb
inc
or
pushf
adc
add
mov
gs
mov
sub
push
movs
popf
in
jo
outs
mul
jo
push
push
repz
mov
ror
push
stc
aad
or
dec
retf
fucomi
in
pop
out
es
jmp
push
fdivrp
xchg
pusha
sar
xchg
sbb
xchg
in
and
ret
fld
pop
inc
data16
mov
or
jecxz
cmc
and
bound
push
jno
mul
(bad)
xlat
test
push
sub
pop
cld
sbb
es
shl
cmp
push
outs
pop
sbb
test
sbb
ja
push
shl
dec
mov
in
ret
push
in
das
ins
jnp
jnp
jmp
adc
aaa
ins
inc
dec
ret
cld
adc
ret
mov
mov
call
and
mov
xor
in
add
popf
scas
in
movs
es
retf
mov
lods
xchg
out
sub
addr16
dec
sahf
sub
mov
outs
pop
aaa
aas
ret
imul
xor
rol
mov
push
adc
es
lods
fldcw
aad
das
inc
mov
fstp
das
jnp
bound
outs
outs
sahf
mov
retf
shl
sbb
pop
(bad)
(bad)
stos
mov
std
call
push
jle
push
pop
loopne
jecxz
pop
rcr
pop
cdq
dec
cmp
and
mov
scas
sbb
add
loop
pop
into
push
sbb
push
mov
jmp
leave
aam
push
cs
jbe
pop
arpl
punpckhdq
lock
push
and
cli
mov
mov
add
jmp
mov
fsub
daa
sub
xchg
and
and
mov
je
stc
xchg
stc
pop
stc
sub
hlt
fsubr
int3
and
or
mov
fadd
shl
sbb
ficomp
(bad)
loopne
ins
adc
mov
xor
mov
cmp
and
sub
push
mov
jp
clc
bound
mov
fwait
mov
push
fist
pop
mov
popa
ds
adc
or
fnstcw
cmp
fisttp
and
imul
xchg
xor
cmp
xchg
mov
xlat
push
popa
cbw
cmc
repnz
dec
push
sar
adc
(bad)
cmps
arpl
inc
stos
mov
retf
cdq
(bad)
rcr
add
lahf
inc
cwde
std
jb
lahf
inc
sbb
sub
jno
das
push
mov
mov
arpl
into
fwait
outs
aaa
lods
scas
leave
adc
in
cmp
repz
jl
pop
sub
ds
ins
scas
fnstcw
xor
arpl
push
dec
xor
and
pop
push
fidivr
mov
mov
cs
retf
cmp
push
clc
aaa
and
adc
push
pop
xchg
test
ja
bound
cld
(bad)
sbb
(bad)
add
int3
jne
xor
neg
shl
jo
int
add
(bad)
in
aas
adc
mov
test
rcl
cdq
call
xchg
mov
test
push
retf
xchg
imul
nop
adc
outs
xchg
adc
int
adc
fnstsw
cli
test
lods
xlat
(bad)
jp
leave
xchg
or
sbb
out
sbb
(bad)
test
jae
das
div
dec
outs
leave
div
mov
repz
ret
fild
xor
sbb
nop
ins
repz
mov
inc
pop
pop
xchg
ins
cld
xchg
sar
or
mov
xchg
add
sub
push
retf
push
adc
adc
cmc
rol
or
xlat
(bad)
cli
int3
xor
dec
ror
and
cmc
sahf
jl
pop
aaa
xlat
add
cmp
pop
enter
mov
sub
pop
mov
mov
sar
or
push
test
test
lahf
int3
fist
xchg
mov
lds
(bad)
push
(bad)
clc
inc
cmp
adc
pop
push
cmp
test
inc
xchg
jl
sbb
cld
mov
sbb
ror
jg
aas
bound
or
mov
and
data16
inc
fmul
(bad)
xor
ds
jbe
dec
dec
movs
stos
fstp
pop
je
cdq
push
push
add
ja
and
mov
or
pusha
in
fsubp
jmp
and
mov
dec
mov
mov
sub
sbb
gs
cmp
mov
data16
mov
jl
mov
pop
div
inc
movs
lods
aad
jmp
push
xor
jp
cmp
stc
es
pop
sbb
repz
addr16
sbb
adc
movs
iret
xchg
fadd
dec
fdivp
retf
jle
mov
adc
push
jae
sub
adc
lds
fwait
pop
aad
or
add
js
dec
add
add
out
inc
sbb
je
push
sub
pusha
mov
add
mov
add
mov
push
fnstcw
adc
mov
push
mov
cmp
push
rcr
(bad)
or
enter
repnz
aad
das
out
shl
xor
cmc
inc
jle
pop
outs
inc
adc
push
push
xchg
arpl
sub
sbb
add
sub
and
xchg
mov
pusha
adc
cmp
and
sub
sbb
sub
(bad)
mov
mov
adc
cmp
jmp
mov
mov
(bad)
mov
dec
aaa
movs
xor
sub
jno
push
and
or
push
inc
jns
loope
dec
mov
js
test
ss
sub
stos
mov
leave
cwde
call
pushf
in
retf
adc
add
mov
loope
mov
adc
sub
cmp
into
fsub
test
daa
aaa
aam
xchg
or
and
loop
dec
cwde
sbb
sbb
fisttp
aam
and
push
pop
push
(bad)
ja
xchg
repz
pop
mov
daa
xor
mov
mov
(bad)
mov
fsub
popf
cld
mov
push
lods
adc
cmp
inc
sub
scas
add
loop
enter
xor
mov
cmc
retf
es
xchg
jns
stos
sbb
out
xchg
in
in
xchg
ins
mov
push
in
mov
ss
mov
cmp
xchg
lock
cld
fisubr
(bad)
cdq
adc
cmp
add
bound
es
pop
call
fld
adc
hlt
dec
xor
jecxz
test
jg
mov
mov
add
jle
adc
cdq
fldenv
sbb
ja
loop
cmp
jae
int
jl
repz
xchg
push
pop
out
(bad)
arpl
ror
or
loop
inc
dec
fwait
sahf
repnz
imul
sub
cwde
mov
stc
std
cdq
inc
cmp
jecxz
mov
shl
sbb
in
imul
sub
pop
jae
pop
inc
or
inc
lds
scas
retf
push
clc
and
mov
jo
add
iret
fsub
add
sub
cdq
xor
mov
inc
es
push
inc
imul
imul
and
dec
xor
push
cmps
dec
jne
sbb
repnz
cmps
jne
std
mov
lock
fsub
mov
push
pusha
dec
popa
xchg
rcr
out
std
dec
mov
jecxz
movs
or
dec
or
scas
push
jo
fsub
fisubr
or
jne
rcr
cdq
int3
and
jbe
push
mov
out
push
push
and
movs
cmc
or
nop
and
xor
test
stos
mov
inc
mov
retf
mov
sub
or
jmp
outs
fdiv
add
jb
jo
mov
(bad)
sbb
fstp
sub
pop
jno
mov
jle
sbb
pop
dec
in
hlt
sbb
mov
pop
rol
scas
in
test
cmp
aas
mov
mov
pop
and
loop
in
or
and
mov
mov
push
addr16
(bad)
jmp
cdq
movs
fadd
lea
fstp
mov
pop
scas
in
jbe
frstor
hlt
mov
push
mov
frstor
jl
repz
aad
adc
pop
nop
push
mov
dec
into
(bad)
push
sbb
xlat
pop
jp
cdq
out
fadd
pop
cmp
cmp
mul
jmp
sub
inc
fstp
sbb
adc
push
in
push
mov
std
xor
ins
pusha
cli
mov
jg
cmp
out
out
mov
movs
stos
cdq
mov
dec
movs
popa
int
inc
(bad)
repz
cmps
aas
cmc
movs
xchg
scas
test
fwait
push
test
pop
adc
push
mov
ds
jo
pop
add
xchg
xchg
popa
cwde
icebp
pop
sbb
push
neg
aas
leave
imul
(bad)
lock
push
pop
je
dec
mov
sti
aas
aam
mov
mul
cmps
aas
fistp
mov
aas
jecxz
pop
sub
and
cmp
loop
jnp
aad
sbb
pop
(bad)
shl
cmc
cld
idiv
gs
in
inc
in
loop
movs
ficom
push
mov
sbb
xor
clc
add
pop
cmp
cmp
add
ja
jp
jmp
add
inc
fidiv
int3
inc
(bad)
and
inc
xchg
mov
push
je
cmp
pushf
mov
push
and
xor
push
fstp
sahf
mov
leave
fstp
mov
cmps
daa
lock
mov
xor
mov
sub
mov
fcmovnb
xchg
cmps
add
add
loopne
inc
xlat
pop
fwait
les
int
in
inc
add
dec
outs
movs
dec
jmp
mov
fsubr
jle
pusha
push
push
and
imul
add
out
adc
adc
retf
pop
aaa
imul
(bad)
mul
bound
push
push
in
jp
(bad)
(bad)
aaa
and
push
loope
push
xor
mov
push
pop
adc
mov
cmps
adc
mov
pop
aad
test
jle
imul
pop
jo
int3
xchg
shr
add
sbb
push
je
ror
or
cmp
jmp
xor
push
popaw
push
fmulp
hlt
mov
fidiv
movs
lock
xchg
out
popf
and
mov
(bad)
mov
push
cmps
inc
aad
pop
sub
test
or
jmp
clc
test
fadd
or
not
hlt
jp
lods
pop
xchg
xchg
mov
or
test
xor
mov
loopne
sub
and
mov
mov
add
fadd
and
scas
xchg
jo
adc
pushf
pop
cdq
in
lods
push
mov
icebp
mov
sbb
les
(bad)
(bad)
maskmovq
add
push
jo
inc
cli
daa
(bad)
xchg
xchg
je
xchg
sbb
push
jns
push
retf
cmp
mov
xchg
pop
push
xchg
or
mov
(bad)
fstp
aaa
ficom
fdivr
sbb
jnp
fcom
icebp
(bad)
adc
fs
mov
lds
pop
add
xchg
mov
push
push
pop
push
ficom
fwait
rcr
mov
adc
mov
sahf
jmp
sub
pop
rol
xchg
push
in
das
int3
mov
ds
jne
les
lods
outs
sbb
ss
mov
pop
adc
xor
or
movs
das
add
inc
jb
sahf
mov
xor
push
shr
and
fwait
cmp
out
lahf
add
jg
xchg
cdq
cmp
and
mov
jmp
jg
push
les
or
fstp
xor
adc
or
enter
in
les
sbb
and
adc
leave
call
xchg
jb
inc
fdivr
pushf
mulps
mov
leave
pop
retf
and
push
cld
push
mov
iret
stos
push
in
sub
jns
or
inc
test
dec
xor
mov
or
ret
(bad)
cmp
jae
int
ficomp
jp
pop
inc
js
leave
push
stc
ss
xchg
aad
in
pop
rcl
std
add
mov
ins
jbe
xor
fucomip
xchg
icebp
xor
add
outs
and
inc
out
jne
pusha
push
xchg
ins
dec
(bad)
je
push
mov
gs
dec
cs
sub
xor
pop
fucomp
jno
mov
pop
mov
out
push
sbb
add
jo
jg
hlt
push
into
xor
push
std
jecxz
or
pop
xchg
(bad)
cwde
jbe
bound
test
das
dec
pop
sbb
pop
sbb
push
je
jmp
sbb
mov
mov
test
mov
iret
push
hlt
sub
and
mov
(bad)
out
xor
retf
sub
adc
jmp
shr
jne
jb
or
jg
div
in
jbe
and
cli
jmp
push
jl
dec
jmp
(bad)
adc
xchg
pop
and
sbb
mov
xchg
test
mul
fdivr
xchg
ss
mov
jge
jb
addr16
cmp
adc
test
fistp
push
xchg
inc
das
mov
dec
mov
js
mov
(bad)
xchg
jmp
jle
xchg
pop
inc
out
xchg
lods
pop
jl
sub
sbb
ror
mov
pop
arpl
mov
out
xor
scas
cmp
or
mov
leave
leave
xor
sbb
pop
in
int3
sub
xchg
ds
fld
mov
gs
std
mov
mov
shr
dec
outs
push
sub
pop
xchg
sbb
cmp
cmp
adc
rep
or
hlt
aaa
push
or
xlat
jns
in
int3
fwait
mov
inc
xchg
lea
(bad)
mov
jae
jg
cdq
add
je
stc
enter
stos
lods
aas
sub
mov
pop
cwde
and
mov
sar
sbb
ret
push
fbld
rol
mov
aam
mov
mov
fiadd
ret
cmp
jnp
clc
pop
jno
int
retf
rcl
inc
in
sub
outs
push
xor
dec
out
jecxz
cmp
mov
xor
cmp
inc
inc
cwde
repz
sbb
pop
icebp
inc
shr
mov
mov
xor
mov
repnz
mov
sub
or
xchg
or
pop
push
aaa
push
mov
loope
loopne
fs
jmp
fidivr
aas
jbe
xchg
and
lea
inc
pop
and
mov
inc
inc
jl
push
jecxz
shl
xchg
in
repnz
mov
loope
mov
in
dec
xor
jnp
ret
rcl
mov
mov
ret
sub
fwait
bts
adc
loope
inc
dec
test
icebp
ret
add
and
or
stos
xlat
jp
xchg
push
pop
mov
jb
and
add
iret
push
(bad)
adc
xchg
push
out
mov
push
jmp
movs
hlt
sub
xchg
or
and
mov
cmps
lock
jmp
or
add
mov
inc
dec
clc
cmp
jmp
xor
xchg
pop
fcmovb
jle
arpl
mov
pop
jmp
shl
out
std
cdq
hlt
(bad)
add
or
lea
out
inc
mov
outs
fstp
inc
out
and
fwait
mov
(bad)
push
push
mov
inc
jge
xchg
out
sub
sbb
inc
loope
aas
rcl
cmc
into
and
or
in
(bad)
ins
adc
pop
test
pop
or
mov
test
lock
fstp
add
add
jmp
scas
xchg
push
pop
fwait
xchg
mov
inc
sti
fwait
xchg
or
xchg
stos
movs
adc
mov
imul
jo
adc
cmp
pop
out
dec
mov
mov
xchg
sbb
dec
mov
inc
inc
aad
and
xchg
cvtpi2ps
cdq
outs
in
mov
or
popa
gs
bound
mov
jecxz
jl
sub
push
cmp
jnp
daa
add
dec
jg
push
jp
out
out
dec
xor
pop
mov
repz
sub
imul
mov
pop
pop
jp
stos
mov
movs
sub
push
cwde
retf
arpl
push
(bad)
lea
push
popa
dec
test
jge
jmp
rcl
(bad)
inc
stc
ror
(bad)
pop
adc
adc
aas
mov
and
add
pop
dec
ss
mov
xchg
mov
daa
and
add
xor
je
int
mov
aam
push
and
push
loop
push
imul
lods
mov
cmps
xlat
movs
push
mov
fisubr
arpl
(bad)
cmp
pop
int3
jmp
add
push
test
in
add
inc
call
push
(bad)
pusha
push
jb
cld
inc
mov
in
(bad)
mov
add
jmp
fst
cmp
scas
popa
adc
mov
call
and
aad
pop
mov
jmp
cwde
mov
xor
leave
popa
(bad)
scas
test
pop
push
test
dec
aas
cwde
dec
mov
xchg
fisttp
pusha
jmp
push
not
and
call
sub
loop
je
or
jmp
inc
adc
imul
push
ret
aam
lds
pusha
xchg
xchg
or
and
push
pop
adc
ffreep
jo
movs
fild
jecxz
sar
dec
lahf
sub
test
mov
fcomp
arpl
cmc
ja
repz
mov
(bad)
ins
cmps
add
and
sbb
gs
loop
ja
outs
std
xor
push
push
sbb
cli
cld
jno
mov
sbb
add
mov
push
(bad)
stos
push
or
mov
out
out
daa
icebp
jp
lds
dec
xchg
sub
xchg
fisub
ins
adc
loop
fadd
test
mov
push
adc
xchg
mov
rcr
cmp
(bad)
dec
and
sub
mov
aas
test
inc
add
out
mov
dec
cmp
pop
imul
imul
xor
pop
inc
popa
inc
push
enter
shl
divps
cmp
pop
add
rcr
pop
jle
pop
jge
dec
cmp
sub
out
fcom
cmc
add
into
in
lahf
imul
shl
mov
inc
or
xlat
or
dec
or
ins
add
jb
push
mov
stc
xor
js
icebp
xchg
call
hlt
jo
sbb
arpl
pushf
xchg
ja
sub
pop
add
lahf
test
mov
adc
pop
dec
cdq
ret
mov
inc
dec
sbb
call
or
jg
mov
sbb
jbe
(bad)
adc
ficomp
push
sub
int
xchg
or
pop
adc
icebp
mov
ins
sbb
push
jo
xor
xchg
xchg
add
dec
arpl
mov
aaa
dec
sahf
out
jp
dec
xchg
push
(bad)
outs
int
mov
cmps
adc
mov
in
jl
leave
and
(bad)
cmp
fs
int
repz
xor
rol
lock
ret
inc
or
mov
mov
pushf
jo
mov
push
fs
adc
call
call
adc
in
push
sub
mov
lock
test
xor
aas
scas
cmps
cmp
ret
cli
push
inc
mov
out
sbb
jp
sar
add
jge
adc
ror
imul
push
call
jne
test
or
jmp
mov
fdiv
cmp
fstp
sbb
pop
cmp
inc
iret
pop
ror
out
icebp
and
cmps
jmp
arpl
mov
fcmovnu
pop
xor
mov
cwde
das
mov
sbb
push
sbb
xchg
sbb
stos
or
lods
dec
inc
loope
inc
adc
sub
hlt
jg
add
sub
push
push
ficomp
outs
and
mov
mov
xchg
les
sub
test
jecxz
dec
xchg
sbb
call
cmp
out
add
mov
mov
inc
jg
jns
(bad)
adc
and
mov
push
les
fcomp
adc
cmp
mov
adc
add
jo
add
daa
jge
add
or
xor
mov
or
sub
sub
pop
mov
xchg
xor
adc
push
aaa
dec
sbb
xor
cmp
xchg
and
out
inc
dec
or
sbb
push
pop
pushf
xchg
mov
ficomp
dec
ins
dec
adc
sbb
(bad)
(bad)
sbb
imul
out
cmp
and
imul
movs
popf
ret
ins
test
aam
ret
jne
push
mov
fstp
mov
pop
jbe
push
retf
inc
ss
xor
add
xchg
out
mov
(bad)
adc
inc
push
adc
call
push
jp
lock
fild
sbb
mov
cli
stc
out
fwait
cmp
mov
lods
mov
mov
xchg
cmp
ds
loope
in
test
cmp
cld
jnp
retf
stos
fsub
(bad)
sub
inc
scas
repnz
mov
or
jmp
mov
int3
mov
push
jmp
hlt
leave
out
fxch
fimul
push
arpl
add
sub
xchg
adc
aam
adc
lock
dec
out
add
and
std
push
pop
cmp
ins
pop
stc
jb
jmp
push
imul
jne
arpl
in
jae
push
lds
or
les
mov
stos
lea
xchg
jg
or
fbld
adc
std
loope
sub
(bad)
(bad)
(bad)
int
movs
or
pop
adc
std
inc
jecxz
call
adc
cdq
jns
cmps
lods
repnz
es
xlat
jmp
mov
loopne
mov
xchg
xchg
cld
push
nop
cld
add
mov
pop
jl
ins
cwde
cmps
lds
pop
sbb
call
mov
cld
push
jl
mov
push
mov
dec
or
dec
pop
xor
(bad)
mov
dec
ret
mov
pop
movs
xchg
inc
sbb
sub
sbb
or
cs
push
or
retf
inc
scas
adc
jns
shr
or
int3
xchg
or
fmul
arpl
out
and
cmp
or
pop
(bad)
icebp
dec
arpl
xchg
mov
aam
bound
and
cmps
push
nop
imul
(bad)
mov
inc
adc
jmp
add
fld
jo
jae
rcr
xchg
mov
ret
stos
push
adc
mov
xlat
imul
loope
fistp
mov
ins
pop
movs
xchg
cmp
jb
add
loope
xor
jg
and
inc
inc
scas
movs
xchg
test
mov
aam
mov
cmp
xchg
dec
aaa
imul
arpl
ds
pushf
shr
or
adc
aad
dec
xchg
mov
addr16
pusha
pop
imul
push
push
add
mov
fwait
and
sub
sub
js
push
sub
or
add
sar
cli
cwde
lock
cmps
js
or
fwait
loopne
dec
fistp
and
sbb
add
inc
inc
ret
outs
pop
hlt
ins
ror
xchg
outs
sub
retf
xor
js
dec
mov
sti
mov
push
jns
and
nop
xchg
scas
push
jne
fisubr
stc
or
pushf
imul
jg
jns
mov
cmps
mov
inc
jmp
pushf
test
scas
sub
jge
xor
aad
jns
shr
pop
lods
jecxz
popa
(bad)
loope
dec
mov
xchg
cwde
jmp
loopne
aaa
into
sbb
lds
jmp
pop
xor
into
sub
mov
icebp
sbb
mov
cmp
je
pop
mov
fwait
push
popf
inc
loope
fldcw
ja
ja
hlt
enter
(bad)
cs
lahf
leave
push
(bad)
in
loope
sbb
arpl
add
jp
stos
fxch
xor
mov
aam
fwait
mov
mov
test
cmp
bound
or
pop
cmp
fnstsw
adc
cwde
xor
jno
test
sub
mov
(bad)
or
and
aad
mov
jo
sub
xor
(bad)
sahf
ja
out
pop
adc
adc
xchg
mov
sbb
rcr
in
adc
jmp
int3
pop
dec
vpermpd
retf
lahf
sub
push
push
test
leave
loopne
and
aam
dec
retf
dec
xchg
aas
out
(bad)
sbb
int
retf
pop
(bad)
int
lock
sbb
pop
inc
leave
pop
cmp
dec
iret
call
dec
jmp
mov
out
mov
nop
loopne
sbb
pop
movs
sub
dec
add
xchg
(bad)
cmp
(bad)
stos
ins
cs
movs
enter
and
mov
jns
fsubr
cli
stc
pop
and
fldpi
retf
test
test
pop
scas
adc
inc
add
and
not
retf
xor
outs
mov
mov
arpl
sbb
sbb
shl
cmp
xchg
push
and
mov
xchg
cmp
out
sti
enter
aas
mov
mov
mov
dec
cs
mov
sti
adc
inc
cmc
sbb
cwde
and
pop
sub
out
sub
pop
sar
retf
(bad)
dec
xor
enter
loopne
xchg
mov
dec
push
inc
mov
mov
or
sbb
es
and
hlt
iret
shl
fwait
pop
cli
loop
cli
push
add
lods
push
repnz
in
aam
test
pop
popf
arpl
or
dec
jg
hlt
mov
mov
repnz
sbb
adc
cdq
fsubr
sub
retf
add
xchg
jp
aaa
movsx
fstp
xchg
adc
dec
add
dec
sar
in
pop
cmp
fcom
mov
or
loopne
push
(bad)
jnp
test
mov
icebp
pop
nop
cmp
loopne
push
ds
pop
cld
mov
dec
and
sub
cwde
fbstp
dec
into
sbb
pop
dec
xor
jo
in
dec
rcl
or
pop
xor
mov
inc
xchg
scas
mov
jae
jae
das
xchg
inc
test
in
push
push
adc
jecxz
ret
sahf
jo
adc
push
call
mov
cmp
(bad)
in
mov
outs
int
cmp
adc
mov
push
iret
ret
mov
mov
mov
sahf
test
sub
sbb
stos
mov
dec
xlat
call
fcmovne
fnstsw
adc
je
std
(bad)
push
adc
sub
add
mov
aas
(bad)
fcomi
ret
call
pushf
push
aam
repz
rcr
aaa
jecxz
inc
adc
dec
in
push
adc
add
xlat
sbb
jnp
jb
jbe
mov
mov
fldcw
jp
push
js
dec
leave
imul
ss
into
adc
repz
stos
mov
arpl
popa
xchg
adc
jmp
stos
add
push
iret
retf
add
lods
push
fwait
jg
ret
or
scas
push
int
mov
push
xor
sahf
dec
sub
clc
fucomp
loope
lea
repz
add
jle
jne
dec
enter
jg
push
enter
inc
mov
ins
loop
dec
add
jae
aaa
repnz
sahf
test
mov
adc
sbb
adc
inc
pop
pop
add
ror
jmp
mov
ficomp
inc
sbb
xor
adc
arpl
pop
xchg
popa
addr16
mov
xor
fsubr
int3
repz
aaa
xchg
sti
mov
leave
ja
into
es
rol
sbb
xchg
lock
ret
dec
jle
fwait
bound
push
xchg
mov
in
iret
sbb
loopne
(bad)
adc
inc
mov
xchg
daa
cmp
jne
push
daa
fsubp
cmps
xor
test
and
or
ret
add
push
or
pop
pop
fadd
dec
ds
xchg
pop
cmp
in
jge
es
shr
inc
test
xchg
loope
sbb
push
enter
mov
popa
iret
jmp
jmp
arpl
adc
loopne
and
adc
das
mov
stos
jmp
mov
enter
fisttp
xor
cmp
(bad)
cmps
sahf
dec
sub
gs
jl
lea
inc
rcl
mov
popf
aas
repnz
ret
add
out
inc
xchg
mov
lock
jg
std
mov
bound
cdq
sbb
jnp
add
inc
ror
or
out
or
xor
rcl
stos
or
scas
rcl
sub
and
cmc
(bad)
aad
jbe
dec
xor
js
out
xchg
sub
xor
fmulp
sub
popf
ds
add
pop
jno
cli
cwde
and
cmp
cs
push
xchg
in
inc
jle
jle
pop
add
and
fstp
retf
mov
shl
test
shl
and
mov
fldcw
pop
cmps
push
jnp
xlat
pop
sub
div
mov
xor
in
push
xchg
inc
dec
loope
loopne
icebp
adc
inc
cwde
and
call
cdq
out
push
mov
push
and
aam
bound
ror
sbb
mov
cdq
and
das
outs
mov
(bad)
mov
inc
and
or
rol
shr
pop
mov
dec
dec
jl
into
ins
or
mov
xchg
inc
mov
in
or
pop
cmps
dec
or
jbe
cs
sbb
sahf
pop
mov
push
lods
dec
ja
in
pop
adc
inc
mov
in
leave
add
(bad)
int3
call
jg
punpckhdq
or
neg
cmps
rcr
lock
sbb
jmp
sub
and
ret
xchg
inc
(bad)
mov
xor
cmc
inc
mov
jecxz
jecxz
lahf
cmc
cmc
int3
cmp
push
pop
or
adc
rol
inc
ss
sub
arpl
jbe
xor
lea
and
add
push
xchg
test
sbb
inc
sub
pop
or
mov
mov
mov
ins
adc
loope
mov
push
jne
fcomp
popa
loopne
jmp
retf
inc
xor
jno
xchg
test
retf
sbb
lds
inc
xor
mov
int3
mov
mov
mov
push
sub
inc
fstp
in
xchg
cld
inc
mov
shr
sub
iret
jb
jmp
dec
adc
sub
sahf
mov
data16
lods
pop
push
(bad)
mov
dec
ja
lods
js
popa
sub
inc
jnp
and
fwait
push
lods
outs
scas
rcl
popa
movs
ret
and
jno
sbb
adc
test
(bad)
repnz
push
mov
jl
and
mov
inc
pop
cs
shl
add
jae
jge
in
les
xor
mov
test
(bad)
into
daa
addr16
cmps
ja
push
xor
leave
add
cli
push
dec
daa
push
cmps
aad
pop
mov
(bad)
test
cdq
ja
ins
test
(bad)
mov
test
adc
and
jbe
cmp
inc
frstor
mov
lock
xchg
xchg
xor
dec
popf
sub
ds
cdq
mov
push
rcr
cmps
push
xchg
mov
add
sub
inc
cs
pop
fiadd
adc
movs
mov
out
push
imul
adc
fdiv
pop
into
ret
xor
test
test
repz
push
retf
mov
add
mov
shl
lods
aad
popf
push
rsm
mov
or
retf
inc
cdq
xchg
dec
les
aad
scas
adc
inc
and
or
repnz
lock
xchg
sbb
ret
out
mul
and
stos
in
shr
add
in
std
je
loope
sbb
sub
sbb
fwait
pop
lahf
cmp
shl
pusha
fcomp
adc
int3
push
(bad)
mov
and
retf
push
cmp
sub
rcr
mov
push
jb
and
out
fdivr
add
pop
sbb
jne
movs
pushf
xor
fsub
sahf
pop
hlt
inc
fidiv
adc
shl
in
or
mov
call
pop
(bad)
scas
jp
loope
ja
addr16
fbld
dec
leave
jns
xor
imul
sub
dec
js
mov
mov
adc
add
cmp
(bad)
cmp
mov
aas
mov
xchg
inc
dec
sbb
scas
sub
lods
xor
add
shl
push
jne
ins
sar
fnstenv
and
add
mov
fs
mov
loope
fcmovnbe
xchg
sbb
outs
fcom
pop
rsm
adc
dec
pushf
icebp
outs
mov
dec
nop
cmps
test
cmp
icebp
and
sbb
push
sub
inc
lahf
orps
sbb
jae
(bad)
fistp
cmp
inc
sub
aad
nop
and
dec
out
mov
mov
adc
ret
in
lods
in
retf
jmp
les
jle
stos
in
sub
loope
(bad)
out
xor
push
pop
add
in
cdq
loope
mov
dec
and
repnz
loope
xchg
jg
xor
ja
pop
inc
int3
push
retf
jae
loope
arpl
aaa
mov
mov
mov
shr
ins
push
dec
fidivr
push
inc
pop
test
add
fbstp
(bad)
repz
or
mov
jb
dec
and
dec
int
add
dec
loop
jno
jo
jg
iret
pusha
mov
add
scas
mov
or
cmp
mov
dec
mov
jl
enter
jns
sbb
cmp
adc
cmps
mov
jle
in
std
shl
out
and
push
xchg
mov
add
and
test
jge
fwait
xchg
sbb
das
inc
out
scas
xor
ss
adc
ja
mov
popf
jp
jp
push
sub
push
xchg
jne
jnp
aad
mov
inc
xor
xchg
lods
not
jl
in
ja
gs
add
in
cmp
ror
int3
call
std
pop
aad
shr
out
cwde
test
push
out
jmp
je
mov
sbb
stos
aas
sbb
jne
out
sbb
jmp
idiv
mov
(bad)
mul
xor
jg
enter
xchg
cmp
xchg
cmp
mov
test
ror
xchg
xchg
(bad)
lahf
cdq
pop
in
push
call
xchg
jge
push
push
inc
inc
imul
out
into
nop
ret
int
inc
pop
mov
pop
add
pop
mov
lods
jmp
out
stc
push
dec
test
scas
retf
mov
adc
inc
ins
jecxz
int3
jmp
jmp
pop
(bad)
pop
inc
fidivr
inc
adc
or
mov
xchg
dec
push
cdq
lods
mov
stc
fmul
fmulp
sub
xchg
sbb
ret
js
and
xchg
lock
pop
and
fwait
and
ins
das
mov
test
jne
pop
mov
ja
out
jno
or
add
hlt
shr
mov
jae
stc
and
add
(bad)
hlt
nop
cs
mov
mov
loopne
icebp
(bad)
ficom
xor
xor
cmc
popf
mov
cmp
imul
sti
test
mov
or
jg
xchg
outs
ss
mov
lods
inc
bound
or
and
movs
and
or
lods
int3
xor
and
fsubrp
or
mov
xchg
xor
add
mov
outs
xchg
sub
mov
(bad)
xor
popf
dec
fadd
xor
xor
into
fimul
jle
scas
and
sub
(bad)
adc
pop
jmp
test
shr
dec
loope
pushf
cmp
xor
test
ret
cmc
cwde
and
shl
stc
mov
inc
or
inc
jge
mov
ja
xchg
out
pusha
hlt
in
xor
outs
xchg
mov
jmp
xchg
push
pop
or
and
inc
inc
jmp
call
cmp
lods
ret
cli
or
adc
sahf
(bad)
push
in
inc
xchg
xor
retf
(bad)
rol
sbb
out
xor
mov
add
je
retf
mov
jmp
xor
jle
push
xchg
pop
xchg
mul
xchg
scas
adc
push
push
sbb
or
div
cwde
out
mov
mov
imul
mov
jbe
inc
shl
sti
sub
ret
xchg
rol
xchg
(bad)
cmp
js
icebp
xchg
sti
cdq
cs
xchg
gs
mov
cs
test
push
cmps
mov
inc
dec
adc
push
repz
add
mov
sub
jb
fiadd
sbb
(bad)
sub
jb
add
mov
outs
mov
jmp
cmp
fstp
push
arpl
inc
mov
ror
dec
lods
push
dec
or
les
or
movs
mov
leave
enter
sub
pop
(bad)
fmul
les
and
mov
and
or
sbb
sahf
push
aad
loopne
into
cmp
jl
mov
and
xor
mov
mov
retf
sub
sub
rcl
xlat
add
inc
cmp
stc
out
mov
sar
push
ins
push
mov
dec
inc
jbe
and
loope
mov
test
xchg
lods
hlt
mov
mov
inc
cs
dec
scas
sbb
mov
(bad)
fwait
mov
xchg
lahf
xor
pusha
repz
add
gs
cmp
mov
fwait
sbb
dec
add
or
inc
rcl
fs
cmp
ror
xchg
lahf
stos
pop
std
mov
xchg
cmp
stc
adc
xchg
jnp
push
inc
mov
out
sti
push
xchg
stos
mov
pop
mov
loop
push
fisub
daa
int3
call
loopne
and
cdq
jns
cmps
stos
inc
cmp
int3
jg
loop
jmp
sbb
lds
fwait
add
mov
in
int
(bad)
mul
popf
ret
jae
(bad)
out
sti
pop
adc
cmps
movs
cwde
and
push
test
dec
xchg
lods
jns
ins
jle
jns
mov
shl
and
mov
ror
imul
(bad)
in
pop
shl
push
mov
or
nop
or
lock
std
push
mov
pop
fwait
pop
in
(bad)
and
frstor
mov
or
mov
shl
leave
cli
mov
jno
(bad)
push
xchg
inc
cdq
xchg
xchg
push
lods
sbb
loopne
loop
cdq
push
dec
inc
scas
call
xor
push
lods
mov
mov
mov
add
mov
dec
stos
sar
pop
cdq
cmp
sbb
gs
pop
fwait
mov
xor
out
cmp
or
fld
ret
test
mov
jge
shl
add
mov
pusha
mov
ins
pop
push
mov
pop
jmp
adc
mov
push
clc
enter
aaa
xchg
mov
(bad)
mov
icebp
fadd
out
mov
mov
mov
int
test
inc
ss
mov
adc
pushf
xor
(bad)
(bad)
ror
or
add
cmp
outs
jae
or
add
dec
push
clc
and
imul
xchg
inc
mov
test
lods
jmp
xor
pushf
mul
jnp
neg
arpl
add
add
xor
jmp
into
cmp
je
call
xchg
imul
mov
test
shr
neg
jmp
in
rcl
call
add
fucomi
or
ret
or
xor
into
inc
nop
rep
inc
test
(bad)
cdq
cmp
movs
or
cmp
int3
add
jne
call
sub
adc
mov
mov
mov
and
xchg
lds
pop
xor
mov
push
cmp
push
push
mov
mov
adc
sbb
fistp
push
iret
xchg
outs
and
test
sub
jb
ds
out
xor
int
jb
or
mov
retf
and
rcl
and
int3
test
(bad)
mov
cmp
push
sub
scas
sti
loope
sub
xor
add
popa
out
dec
jl
push
repnz
xchg
(bad)
cmp
movs
xchg
cs
lods
fcomp
(bad)
and
add
jae
movs
les
leave
pop
mov
popa
(bad)
mov
inc
and
push
mov
fwait
hlt
retf
jns
retf
adc
cmp
add
in
sub
std
cpuid
mov
stos
add
push
add
js
jecxz
js
popa
jl
adc
inc
call
mov
ja
std
fcomp
lods
or
stos
jne
stos
adc
adc
test
imul
xchg
pushf
adc
mov
cmp
pop
lds
dec
jmp
fsub
pop
jle
loop
xor
out
push
xchg
mov
mov
out
loop
sub
ja
push
rol
out
jne
test
push
and
es
in
and
fsubr
or
xor
mov
stos
mov
das
loope
(bad)
cmps
push
je
test
adc
cmp
pop
int
cdq
sbb
call
movs
xchg
mov
push
and
mov
fadd
cmp
adc
inc
pop
fnstcw
cmc
add
add
cmp
dec
cli
sbb
or
mov
lahf
add
sbb
ret
dec
stc
mov
cmc
mov
sub
inc
sbb
call
jl
into
push
(bad)
dec
mov
fdivrp
sahf
push
ret
jno
pushf
mov
push
movs
push
xchg
sub
xor
and
loope
ret
(bad)
into
ja
test
addr16
mov
fcmovnu
xchg
rep
fcomp
retf
add
xor
cmp
and
scas
jecxz
pop
sbb
js
ins
sub
sbb
sub
imul
adc
into
or
fst
inc
inc
fs
xor
scas
daa
xor
cmps
adc
leave
adc
dec
hlt
ret
shl
fbld
test
imul
ret
imul
movs
and
imul
and
outs
inc
fdiv
lea
xor
and
out
aaa
dec
out
mov
test
mov
xchg
cmp
popf
push
adc
das
adc
mov
iret
xchg
call
or
jmp
mov
dec
sbb
and
inc
outs
sbb
lods
gs
jecxz
jge
test
jecxz
loop
jl
retf
add
pop
cmp
stos
lds
mov
hlt
hlt
xchg
cmp
mov
shr
push
pop
fnstenv
iret
xchg
lds
leave
ret
repnz
rol
sbb
(bad)
mov
mov
mov
shl
sub
into
add
dec
neg
mov
sbb
(bad)
(bad)
adc
imul
and
cld
mul
outs
sbb
mov
cmp
jge
jns
stos
cmp
xor
lods
jae
sbb
clc
hlt
push
or
dec
call
sbb
pop
adc
jp
lahf
cmp
dec
add
jnp
iret
mov
xor
(bad)
fwait
lods
push
mov
pop
mov
jnp
sahf
mov
cmp
sub
xor
xchg
out
in
iret
jbe
xor
mov
fdiv
pop
loop
(bad)
je
inc
(bad)
sbb
or
aam
adc
rol
mov
xchg
sbb
jp
fdiv
xchg
sbb
(bad)
sahf
retf
out
xchg
cli
push
(bad)
xor
mov
ins
sub
jmp
(bad)
jns
ja
cld
or
add
sub
and
ds
sbb
ins
sub
inc
xor
or
iret
adc
sub
push
pop
xchg
cli
or
ficomp
and
mov
nop
daa
inc
in
rcl
je
test
shl
stos
cmp
fldenv
pop
pop
cmp
add
scas
shl
pop
cmp
aaa
imul
les
push
jae
push
hlt
cmp
fist
ins
push
scas
cmp
retf
mov
daa
push
or
mov
or
ret
inc
pop
lods
xor
loope
test
mov
(bad)
sti
jg
(bad)
in
jmp
jmp
push
and
sbb
and
lods
fbld
pop
leave
repnz
not
pop
nop
and
jmp
iret
sub
mov
or
mov
in
dec
adc
aas
xchg
dec
shr
cvtps2pi
pusha
daa
icebp
mov
xchg
cmp
dec
scas
jg
rol
jmp
aas
jle
fwait
mov
fmulp
shr
xchg
arpl
nop
jns
adc
nop
pop
cmps
adc
xor
lock
sub
and
sbb
not
fbld
sbb
popa
stos
mov
and
in
pop
cmp
mov
jl
sub
push
push
imul
mov
imul
aaa
mov
mov
mov
cld
lea
out
cmc
and
ror
lds
or
daa
xchg
ja
xchg
outs
inc
add
ret
jmp
inc
mov
xor
mov
adc
in
or
push
popa
jecxz
shl
xor
pop
outs
dec
inc
outs
lods
inc
psubw
sti
and
hlt
mov
mov
sti
out
ficomp
shr
pop
gs
xor
mov
loopne
out
fwait
adc
xor
push
mov
fs
add
std
mov
push
jle
int
cmp
stos
mov
adc
mov
in
ins
fadd
sub
dec
out
test
outs
adc
cld
mov
out
ror
retf
mov
xchg
leave
xor
cld
push
pop
jp
jo
retf
movs
cmp
cmc
mov
xchg
push
cdq
dec
sbb
fucompp
adc
push
push
outs
xor
jo
push
push
fldenv
adc
push
dec
lds
and
jecxz
mov
call
call
pusha
not
and
cli
(bad)
push
shl
out
cs
or
pop
pop
add
ins
imul
icebp
test
mov
and
(bad)
jp
data16
and
test
mov
adc
frstor
mov
(bad)
retf
jmp
js
mov
cwde
data16
sbb
call
sub
(bad)
in
clc
sub
and
mov
inc
inc
and
cmp
inc
or
dec
push
ja
xchg
mov
mov
xor
or
mul
pop
and
arpl
in
pop
lea
push
sbb
cmp
xchg
scas
xchg
fisub
imul
ins
adc
loopne
and
pop
sbb
push
add
and
pop
(bad)
nop
scas
imul
gs
ret
push
push
or
sbb
int
clc
icebp
call
enter
jmp
daa
loop
inc
jmp
mov
pop
xchg
scas
jle
repnz
mov
xchg
inc
dec
sbb
xchg
xor
add
push
fcomp
cmp
jmp
(bad)
out
pop
mov
clc
(bad)
fistp
int
or
pop
mov
inc
add
dec
sahf
dec
ret
adc
ja
lods
sbb
dec
adc
and
(bad)
cs
jo
dec
xchg
jns
les
jge
mov
jns
push
and
popf
xor
int3
inc
push
adc
and
or
stos
dec
jbe
test
add
popa
jae
cmp
pop
int3
stc
shl
out
nop
xchg
and
cmp
push
in
repz
and
cs
jecxz
cmps
shl
mov
add
in
cmp
dec
retf
sbb
jbe
mov
popa
mov
in
inc
aaa
sbb
adc
call
es
or
xchg
pusha
outs
fs
cli
test
push
ins
sbb
es
fsubr
or
push
sbb
mov
cmps
and
adc
fwait
jae
cmp
push
neg
std
mov
pop
sbb
loope
push
jbe
jo
in
fs
pop
aam
in
and
xchg
sti
mov
(bad)
mov
mov
adc
pop
lahf
xor
jle
outs
pop
xchg
or
or
loop
mov
adc
add
or
jns
jb
adc
mov
inc
shufps
adc
inc
in
mov
adc
pusha
ins
and
inc
cmc
xor
xor
scas
xchg
fmul
into
repnz
xor
pop
aas
mov
shl
pop
adc
iret
nop
dec
jbe
dec
mov
dec
push
inc
jmp
mov
leave
(bad)
mov
or
push
adc
push
push
test
or
test
cmp
push
mov
ins
push
and
loopne
mov
jae
(bad)
retf
push
rcl
add
repz
pop
pop
(bad)
xor
scas
push
les
jle
sbb
xchg
faddp
in
push
xchg
inc
enter
fidiv
pop
out
outs
test
out
or
push
inc
cmp
clc
sbb
mov
sbb
(bad)
and
je
xor
ds
pop
repnz
fistp
cmp
push
mov
imul
fwait
lahf
out
rcr
(bad)
pop
jo
add
call
mov
dec
ror
jno
inc
push
pop
xchg
scas
add
std
(bad)
and
cmps
xchg
and
or
addr16
out
shl
and
adc
sub
test
jmp
xchg
out
and
add
xlat
dec
xlat
ins
xchg
vphaddubw
jnp
mov
into
mov
movs
xchg
and
in
sahf
push
add
js
cmps
loope
adc
add
imul
popf
mov
mov
push
popa
lock
(bad)
push
fs
mov
rcl
ins
mov
inc
push
imul
jmp
push
sbb
dec
scas
xchg
inc
adc
jge
inc
stos
jecxz
test
out
repnz
std
cmps
imul
push
pop
inc
stc
mov
xchg
stos
or
outs
in
popf
lds
int3
push
mov
repz
rcl
mov
add
fnsave
clc
push
ffreep
sbb
fcomi
aad
scas
(bad)
lods
and
mov
sub
dec
test
sub
or
js
pushf
ss
pop
inc
mov
mov
es
mov
loope
push
mov
xchg
inc
lock
xchg
cmp
pcmpgtw
rcl
lahf
add
jmp
or
sub
daa
jmp
add
jb
or
add
cld
iret
in
or
les
cmp
lds
xor
xchg
mov
xor
scas
inc
xlat
push
retf
mov
call
out
(bad)
jb
out
test
daa
fpatan
adc
and
pop
test
mov
aam
retf
xchg
outs
or
cmp
fsubr
adc
push
add
out
(bad)
add
int
jno
loop
aaa
(bad)
in
je
xor
dec
adc
(bad)
fisttp
mov
movs
xor
adc
mov
sbb
out
jnp
sysenter
jl
hlt
jge
dec
ins
inc
sbb
push
adc
inc
repnz
xchg
push
add
mov
test
cmps
cwde
mov
aam
cmp
dec
fistp
push
loop
or
inc
fidiv
nop
mov
jae
out
mov
loope
addr16
cld
hlt
mov
into
jo
stos
test
in
fidiv
push
sbb
or
imul
add
cmp
fsub
xchg
out
into
das
dec
or
in
rcl
aam
cmc
les
or
sbb
js
mov
pop
add
(bad)
sbb
clc
inc
js
push
popf
imul
fxch
repnz
sub
scas
stos
fiadd
fdivr
aas
or
xchg
add
out
push
push
ret
not
(bad)
sub
xor
mov
addr16
sti
push
enter
sbb
addr16
int
or
push
jo
sub
jns
inc
pop
dec
pusha
fidivr
out
cdq
into
fdivr
mov
cmps
mov
into
sti
imul
es
pop
lahf
fsub
mov
mov
je
sbb
mov
sbb
pop
mov
scas
pop
mov
popf
xor
test
je
dec
push
mov
xor
inc
dec
mov
in
add
jmp
pop
idiv
xchg
les
outs
dec
mov
pop
jmp
out
or
fnstsw
(bad)
stc
stos
xor
mov
jg
fs
pop
pop
jne
test
sbb
mov
int
push
pop
xchg
clc
dec
sahf
lods
dec
and
stc
jp
jb
out
out
jle
mov
dec
xchg
jge
(bad)
cmc
test
mov
xchg
mov
test
cmc
cwde
cmp
and
cmp
sub
popf
or
pusha
sub
popf
mov
mov
push
jecxz
dec
stos
dec
cmp
jmp
push
cld
mov
jb
inc
inc
sbb
and
out
and
cs
jl
mov
xchg
pop
pop
xchg
cmp
add
setle
(bad)
sub
test
push
push
push
pop
jp
leave
mov
sbb
popf
or
jp
ins
xchg
add
fwait
add
pop
and
push
pop
xor
jmp
int
loop
test
pop
ficom
mov
xlat
and
jns
ret
and
pop
push
and
movs
test
in
sbb
adc
sub
ja
hlt
jmp
stos
and
fs
mov
scas
or
mov
cli
pop
mov
sbb
out
popf
fisub
outs
cmc
pop
jbe
cmp
inc
ds
in
push
mov
popf
sub
adc
jecxz
pop
xchg
mov
xor
dec
jg
sbb
cmp
mov
xor
ss
add
ret
leave
lods
push
jp
cmc
dec
popa
lock
lods
(bad)
outs
jno
xor
sub
sbb
jne
sub
cmp
popf
pop
out
jmp
popf
test
pop
loope
xchg
aaa
mov
jns
jle
and
in
jmp
popf
retf
repz
mov
pop
lds
test
mov
shr
pop
call
mov
push
cmp
call
cmp
jecxz
inc
movs
ficom
xor
movs
shl
pushf
nop
xchg
inc
lds
push
inc
sub
and
sbb
xchg
pop
lahf
lods
adc
data16
scas
jnp
jno
in
dec
push
int
adc
popa
test
stc
sahf
add
push
cmp
retf
ret
bnd
or
(bad)
push
outs
cli
cmps
outs
sub
mov
scas
and
jns
jno
lds
icebp
loop
arpl
push
mov
int3
jp
ins
sbb
sub
movs
xor
push
pop
cmp
cld
jne
mov
shr
and
jno
inc
add
les
push
(bad)
cmps
xor
test
fisttp
pop
call
xchg
retf
jne
mov
jne
movs
pusha
(bad)
fld
out
dec
gs
and
stos
pop
lods
or
jno
push
(bad)
push
mov
scas
mov
inc
add
ficom
call
or
aaa
les
adc
adc
lods
loopne
cmp
cmps
popf
std
(bad)
cmp
std
in
fs
and
adc
leave
adc
or
or
dec
sub
div
sbb
into
and
fisub
cli
mov
mov
mov
clc
icebp
xchg
mov
push
pop
neg
(bad)
lock
fstp
out
mov
sbb
ins
sub
neg
icebp
and
pop
mov
fyl2x
jbe
xor
movs
push
pop
xchg
rol
dec
push
fimul
cs
or
fwait
push
lahf
xor
xor
sbb
add
and
mov
push
lea
dec
out
popf
sub
outs
jne
mov
jp
xlat
xor
inc
jmp
int3
int
pushf
jmp
int
jbe
mov
mov
jg
sar
xchg
mov
push
xchg
dec
inc
ret
and
fimul
iret
mov
js
xchg
mov
arpl
xchg
iret
push
test
inc
adc
xchg
mov
sahf
arpl
je
movs
in
mov
mov
scas
nop
in
aaa
adc
int
lods
cmps
and
cmc
imul
or
test
movs
scas
xchg
data16
xchg
jno
dec
mov
pushf
cmc
and
call
jl
mov
push
push
and
xchg
lea
jbe
pushf
xchg
xor
(bad)
adc
mov
sbb
xor
adc
mov
xor
arpl
jl
stos
pop
cmp
out
sub
loopne
(bad)
in
add
aas
leave
scas
sti
cmp
dec
pop
pop
call
cld
mov
(bad)
push
push
stos
xchg
mov
ins
sbb
sbb
inc
dec
xchg
jl
xor
inc
cmp
xor
sub
and
add
adc
inc
lahf
(bad)
sbb
sbb
push
and
sti
cli
push
retf
scas
mov
icebp
jg
cmp
out
sbb
push
cs
call
and
je
xor
in
repnz
jbe
xor
pusha
jp
or
pop
lahf
aas
sub
jp
cmp
dec
pushf
push
loopne
call
push
lods
dec
jmp
dec
jmp
and
push
jge
pushf
scas
lea
adc
(bad)
xor
jle
sub
sbb
cwde
scas
adc
dec
shl
xchg
in
pushf
ss
dec
jnp
stc
push
dec
or
les
cmp
add
cld
ret
movs
push
jge
psllq
les
mov
cmp
add
fmul
push
cmp
cmc
arpl
movs
(bad)
iret
xchg
sub
test
movs
mov
sub
movs
dec
outs
inc
(bad)
sti
jl
lods
xchg
dec
mov
push
sbb
outs
mov
in
mov
jno
fnstenv
mov
or
sar
push
mov
jge
sub
aaa
mov
pop
sub
cs
xor
mov
mov
mov
xchg
test
icebp
shl
mov
sub
xchg
cdq
ret
fimul
cmp
adc
scas
dec
es
mov
into
mov
dec
pop
cwde
test
hlt
push
xchg
sbb
mov
fsub
sbb
inc
retf
mov
mov
gs
dec
cli
cs
cmp
xchg
xor
dec
mov
daa
adc
iret
jg
adc
push
loop
enter
jno
ds
xor
jae
push
mov
xor
mov
daa
loope
and
imul
sbb
pop
adc
push
aad
outs
mov
pop
jg
and
xchg
je
cmp
pop
fcmove
rol
pop
cmp
pop
pop
mov
outs
and
call
sar
ror
push
push
xor
cld
jae
mov
icebp
push
add
pop
sub
jae
pop
imul
xchg
call
pop
das
sub
push
loopne
lods
sti
into
jg
or
push
out
sub
test
mov
repz
ret
inc
sub
ins
fs
push
mov
sbb
inc
sahf
mov
enter
daa
pop
push
in
push
sub
inc
mov
inc
imul
retf
test
jbe
pop
xor
adc
pusha
cmps
ja
in
push
pop
xchg
cli
mov
sbb
stc
mov
(bad)
adc
cmp
cmps
sbb
(bad)
xor
pop
pop
retf
cs
dec
xchg
inc
pusha
pop
fistp
cmp
hlt
mov
cmp
(bad)
ror
pop
popa
jae
das
pop
xor
push
inc
or
ds
lahf
mov
retf
cmc
push
cmp
call
test
and
and
lea
xor
jg
popf
ret
mov
cmps
shl
loop
(bad)
in
fimul
push
mov
pop
pop
mov
push
dec
jo
es
fmulp
cmp
cs
mov
adc
rcl
je
stos
push
push
clc
inc
fnsave
xchg
push
es
fist
cmp
dec
xor
mov
test
movs
dec
or
jo
shl
test
mov
sub
test
lods
enter
shr
add
jnp
xor
or
jae
inc
(bad)
push
inc
ss
ja
pop
sbb
pushf
fistp
mov
shl
jno
in
add
dec
aas
js
test
mov
in
dec
outs
mov
(bad)
mov
ret
jne
std
mov
imul
in
cmc
push
(bad)
call
adc
pop
iret
popa
sahf
fistp
cmp
cmp
xchg
xor
jns
arpl
pushf
enter
jecxz
jno
repz
cmp
leave
or
and
or
mov
imul
cmp
mov
stc
cmp
sub
mov
fmul
push
cli
(bad)
mov
inc
and
rol
mov
pop
sub
(bad)
push
or
xor
sets
in
aam
mov
xor
mov
popa
stc
or
jnp
test
jp
push
sub
(bad)
ffreep
jbe
mov
mov
pop
sub
aam
popf
cmp
mov
mov
pop
add
xlat
aas
push
lods
nop
fs
ins
sub
popa
and
add
ss
scas
and
add
mov
mov
xchg
ret
pop
pop
fwait
jp
sti
in
xor
mov
hlt
jb
call
in
sub
lds
mov
fwait
mov
cmp
pop
add
in
cld
add
fsubrp
imul
inc
xchg
lods
cmp
add
xchg
sbb
mov
xor
jne
cmp
dec
xchg
daa
aaa
mov
outs
add
ret
push
mov
sbb
push
mov
sbb
mov
mov
and
mov
xor
aas
jmp
or
popf
or
xchg
or
mov
mov
cmps
inc
test
or
xlat
mov
movs
dec
jp
cs
cmp
xor
inc
and
adc
xchg
jns
jne
pop
adc
daa
ins
sahf
and
fsubr
and
xchg
xchg
mov
add
dec
lds
jae
hlt
(bad)
and
idiv
xor
xchg
xchg
pop
sbb
jno
pop
sbb
xchg
cmp
repnz
scas
mov
mov
mov
jge
add
test
mov
sti
xor
int
add
cmp
jl
lods
sahf
xor
sub
adc
sbb
into
dec
sbb
out
fstp
jbe
add
movs
sub
not
inc
mov
xor
and
sub
adc
mov
repnz
lods
push
mov
push
pop
bound
addr16
push
dec
sub
jb
dec
xchg
aam
stos
pop
fist
cmp
jmp
imul
movs
push
out
xchg
sub
(bad)
push
iret
shr
scas
enter
test
jae
fisub
lock
repz
or
(bad)
jp
or
or
nop
retf
push
adc
inc
jae
pop
popf
adc
scas
int
enter
push
sub
stos
xchg
sbb
jb
repnz
mov
mov
ret
fld
pushf
inc
ret
add
add
cld
jp
xchg
xor
cdq
rcr
inc
test
xchg
mov
pushf
adc
xchg
mov
sbb
(bad)
add
stos
pop
(bad)
shl
jae
frstor
jecxz
sahf
and
std
sbb
inc
das
mov
rcl
mov
xor
sub
retf
scas
add
cdq
lods
gs
stc
shl
xchg
cmp
in
int
xchg
xchg
mov
pop
sti
cwde
jbe
push
mov
xor
stos
cmps
aad
js
(bad)
nop
sbb
cld
jnp
outs
xor
ins
cmp
or
mov
pop
sbb
xchg
jle
xchg
mov
add
push
push
sqrtps
xor
out
(bad)
jg
cmp
inc
inc
mov
aas
leave
xor
or
jg
mov
mov
pop
fst
mov
inc
lods
xchg
pop
inc
xchg
mov
mov
fcom
dec
ror
ins
shr
pusha
push
pop
rol
mov
or
js
xlat
(bad)
mov
(bad)
jnp
push
mov
push
cmp
mov
das
sub
xchg
pop
fistp
bound
mov
dec
jmp
jmp
xchg
mov
outs
jp
(bad)
push
adc
jno
mov
or
inc
cmp
outs
fstp
lods
or
inc
gs
mov
xlat
inc
inc
adc
mov
mov
repnz
outs
lock
das
int3
push
push
push
inc
or
rol
repz
xchg
xor
jp
mov
push
div
fidiv
shl
call
loop
push
mov
xor
adc
popa
jns
or
inc
push
mov
or
xchg
push
test
ss
hlt
outs
add
or
jmp
int
cmp
push
inc
sbb
setle
jecxz
mov
(bad)
sub
xchg
outs
mov
sti
sub
ja
inc
add
dec
push
sbb
lock
lock
mov
cmp
bound
sub
cmp
inc
pop
jbe
xchg
adc
xchg
push
jmp
pushf
cs
cmp
xchg
adc
and
adc
mov
jb
jecxz
cwde
pop
aad
jbe
mov
cmp
cs
aam
cmp
mov
fistp
hlt
ja
(bad)
(bad)
push
add
lods
mov
movs
and
outs
mov
cld
inc
push
xchg
push
inc
pop
cpuid
retf
bound
std
xor
fsub
out
dec
je
jecxz
mov
sbb
push
or
stos
mov
mov
mov
push
sbb
mov
adc
and
xchg
les
inc
mov
sbb
or
inc
jp
sar
inc
inc
loop
push
stos
imul
into
movs
stos
push
cmp
mov
sbb
xor
mov
sar
cmps
mov
outs
xchg
xchg
push
and
into
mov
sub
jo
imul
sub
jge
mov
push
fsub
push
add
cld
jbe
sub
cmp
adc
popf
or
xor
movs
(bad)
cmp
jo
and
jmp
sbb
inc
loop
mov
jge
idiv
and
punpcklwd
jnp
mov
mov
sti
sub
jbe
sar
mov
loopne
push
xchg
dec
inc
sahf
mov
mov
fwait
cmp
dec
inc
inc
test
xor
neg
jbe
mov
sub
jl
inc
cmp
mov
shl
and
cmp
xchg
xchg
outs
mov
xchg
in
ror
rol
xor
das
fwait
out
in
dec
not
out
shl
ret
out
and
adc
fcom
inc
bound
jns
in
sbb
add
(bad)
mov
dec
ror
ja
sbb
and
in
aad
scas
dec
enter
addr16
pop
repnz
pop
aas
and
xchg
mov
loope
add
push
test
pop
mov
sbb
sub
dec
xor
(bad)
enter
mov
sbb
fs
adc
lahf
daa
mov
cmp
lea
mov
neg
cmp
loope
or
(bad)
aaa
fimul
sahf
mov
rol
lahf
sbb
mov
xor
ret
add
inc
(bad)
sti
push
push
xor
mov
pushf
mov
std
sti
das
sub
dec
mov
loopne
fwait
cli
jno
sub
adc
mov
jns
cmps
call
sub
push
mov
cmp
or
in
lock
sbb
ret
mov
mov
je
imul
xchg
or
outs
mov
inc
xchg
add
in
dec
jecxz
cmp
mov
push
mov
fistp
pop
pop
cmp
les
in
push
lea
xor
cmc
pop
dec
pop
and
fld
inc
pop
inc
cmp
iret
cmp
mov
fdiv
or
jp
stos
stc
sub
in
call
test
(bad)
mov
mov
in
dec
into
mov
(bad)
xchg
data16
mov
mov
movs
xlat
hlt
and
pushf
adc
mov
adc
enter
or
pop
pop
in
arpl
adc
cmp
jns
fdivr
out
pop
das
cmp
push
xor
sbb
mov
push
fidivr
xchg
mov
nop
cmp
jbe
inc
adc
aad
inc
pop
or
cmp
inc
in
loope
add
(bad)
sub
es
lds
or
or
mov
add
mov
inc
imul
xchg
mov
push
mov
mov
and
int3
xchg
popa
mov
pushf
sub
and
xor
mov
sbb
adc
xor
fisub
jo
mov
movs
retf
ds
mov
or
mov
mov
push
xchg
inc
pusha
nop
outs
repz
mov
pushf
into
mov
out
outs
gs
std
test
enter
cmc
dec
mov
add
icebp
sub
movs
ret
sbb
sbb
cld
adc
push
xor
stos
out
push
sbb
mov
sub
movs
je
call
daa
and
aas
lods
adc
add
xlat
sub
outs
(bad)
movs
lahf
call
test
push
mov
cwde
out
xor
mov
mov
test
xor
into
and
jae
sub
jae
mov
sbb
fsubr
fild
cwde
sti
jmp
popa
sub
daa
fsub
cs
cli
mov
mov
cwde
sti
cmp
sub
pop
arpl
jle
pop
retf
add
dec
mov
mov
in
ret
call
jge
into
pop
out
lea
in
cmps
inc
pop
add
pop
cmp
loopne
jmp
test
mov
mov
adc
xor
jge
loopne
jno
out
adc
jne
(bad)
cmc
mov
fcomp
icebp
retf
repnz
sub
xchg
sti
pop
sbb
cs
mov
cmp
mov
loop
arpl
cli
jmp
int3
arpl
dec
mov
or
lea
push
clc
dec
adc
sub
jns
pshufw
adc
mov
adc
addr16
icebp
jle
cmp
sub
cs
retf
imul
inc
mov
and
add
push
mov
sub
loop
and
cmp
xor
mov
push
adc
sbb
jbe
nop
les
jecxz
popf
std
adc
movs
aad
js
jecxz
mov
jae
sub
shr
in
mov
inc
(bad)
jl
inc
or
mov
in
call
and
sub
jle
imul
sub
dec
mov
push
push
push
in
scas
mov
xchg
jno
ins
cdq
nop
aas
xor
push
daa
push
mov
fs
cmp
fucom
fdiv
fidiv
xchg
(bad)
sbb
inc
sbb
add
(bad)
fisttp
test
adc
sbb
in
shr
jns
jb
mov
inc
mov
jecxz
aas
call
cmps
and
out
pusha
std
ins
pop
test
lds
cmp
xor
popf
addr16
adc
jbe
loop
and
mov
mov
adc
mov
mov
mov
lods
xor
fwait
in
test
fisub
adc
out
xchg
lds
(bad)
cmc
sahf
cmp
mov
pusha
adc
retf
xchg
out
lahf
mov
and
xlat
nop
inc
loope
fdivr
sub
icebp
popa
adc
jle
lea
mov
pop
repz
(bad)
add
sahf
dec
out
int
mov
jnp
dec
je
(bad)
xor
pop
fs
aas
outs
xchg
or
lods
mov
push
mov
sub
jo
stos
push
add
adc
in
repnz
mov
inc
mov
xor
sub
push
sub
jnp
sub
xor
mov
pop
pop
push
dec
dec
in
aam
loope
and
xor
push
mov
ins
push
sbb
xchg
mov
mov
push
and
adc
outs
jp
inc
enter
add
push
imul
sti
xor
and
(bad)
mov
fadd
inc
js
ja
and
out
xchg
lods
and
test
cmp
mov
(bad)
sbb
clc
ds
push
pop
and
add
aas
inc
in
and
and
pushf
and
loope
xor
rcr
mov
push
imul
pushf
sar
pop
mov
push
add
sub
inc
push
mov
or
out
xlat
fs
ror
movs
adc
sub
outs
out
adc
xor
inc
aas
xchg
inc
jg
adc
cmc
and
inc
push
dec
sbb
les
cmps
inc
test
sar
sub
adc
and
test
and
xor
(bad)
ret
test
cmp
movhps
clc
cmp
fsubr
or
mov
pop
jae
(bad)
out
and
push
push
(bad)
and
dec
push
adc
ret
adc
cmp
mov
cmp
and
jmp
loopne
dec
fs
mov
mov
mov
test
jno
daa
scas
adc
hlt
pop
movs
adc
jb
cmps
add
pop
mov
es
mov
pop
cmp
pop
mov
fisttp
test
inc
cmps
xchg
gs
ret
rcl
pop
hlt
and
fild
add
jb
push
sub
inc
or
cmps
call
imul
inc
rol
lock
retf
mov
in
fwait
sti
jb
mov
test
(bad)
xchg
icebp
ins
mov
sbb
mov
lock
mov
cmp
pusha
push
sbb
add
mov
out
std
xchg
outs
into
or
inc
push
int3
inc
sub
mov
inc
fdiv
(bad)
call
in
cmp
cmps
scas
arpl
mov
sbb
sbb
add
cdq
or
stos
push
ss
cmp
sbb
hlt
inc
xor
sahf
ds
lahf
repnz
arpl
pop
add
xchg
dec
mov
lock
in
pop
xchg
inc
cdq
ja
sub
cmp
scas
xor
enter
mov
lea
stos
jge
scas
inc
mov
cli
mov
rep
push
cmp
xor
cli
cmp
repz
pop
xchg
sahf
stos
into
jbe
pop
sbb
mov
jge
ds
test
out
mov
sub
adc
jns
cmp
addr16
arpl
inc
push
rcl
test
pushf
aad
add
adc
aam
fsubr
push
aam
inc
imul
aaa
lahf
xchg
dec
inc
mov
dec
sbb
ret
pop
mov
xchg
add
mov
int3
out
xchg
(bad)
mov
ins
mov
movsx
(bad)
sti
jae
and
mul
ret
push
pushf
mov
shl
aaa
jno
fwait
pop
cwde
out
xchg
xor
call
bound
pusha
inc
cmps
arpl
test
sbb
mov
retf
mov
repz
jmp
sbb
mov
loope
es
inc
mov
sbb
popa
pop
pusha
leave
sbb
popf
fimul
jb
adc
pop
inc
mov
mov
add
ret
mov
inc
add
(bad)
ja
outs
adc
repz
leave
jecxz
ret
adc
cmps
inc
test
fld
mov
pop
lahf
jns
mov
fsubr
aas
test
pop
rol
clc
jnp
mov
bound
repz
sar
icebp
jle
imul
gs
rcr
ret
sbb
jg
out
pushf
fiadd
jecxz
mov
ror
dec
in
call
cld
outs
(bad)
jecxz
push
dec
(bad)
sbb
and
fild
xor
dec
pop
push
stc
(bad)
and
clc
cmp
out
sbb
stc
fadd
push
in
dec
call
dec
mov
sub
fdiv
adc
xchg
inc
add
inc
mov
pop
stc
push
or
daa
inc
sub
adc
ss
sub
jmp
jbe
ss
adc
jl
jne
loop
sbb
jae
in
pop
add
push
jae
arpl
out
pop
(bad)
jle
pop
stos
loop
push
jae
lock
mov
gs
lahf
xor
test
xor
stc
jo
aam
xor
adc
jl
mov
outs
jne
cld
push
mov
(bad)
arpl
push
and
sub
cmp
mov
add
pop
(bad)
sbb
add
cmc
sti
aas
pop
out
ret
popa
repnz
in
xchg
push
cmc
push
mov
inc
cli
jnp
in
mov
loopne
and
gs
neg
call
pop
aaa
je
ds
out
dec
add
arpl
jle
and
repnz
out
imul
js
or
or
mov
sbb
popf
adc
retf
fiadd
sbb
cdq
cmp
adc
(bad)
push
lds
sbb
ret
jns
sbb
out
mov
mov
(bad)
fmul
aaa
add
fidivr
sub
call
cmps
inc
pop
mov
jmp
xor
test
push
xchg
push
(bad)
test
aam
outs
out
sbb
inc
sti
movs
sbb
push
mov
sub
inc
jp
mov
into
adc
inc
nop
jecxz
daa
ret
inc
int3
shl
mov
std
pop
jns
mov
mov
xchg
cmp
jb
pop
ja
and
imul
or
adc
and
mov
mov
repz
shl
cmc
jbe
inc
jno
stc
retf
mov
xchg
dec
dec
cmps
stc
inc
cmp
mov
mov
addr16
popa
bound
push
dec
sub
jo
test
lahf
fistp
ror
out
sbb
mov
js
jge
mov
mov
mov
test
mov
push
mov
or
push
xor
xchg
cmp
out
ins
pop
int3
popa
aas
test
into
fld
pop
xor
mov
sub
out
xchg
or
xor
popa
push
ror
push
gs
and
stos
fnstsw
jp
xor
stc
fld
adc
mov
add
iret
ss
cdq
adc
call
movs
inc
fs
sahf
or
jbe
fcom
retf
pop
dec
or
xchg
(bad)
stc
mov
and
loope
outs
lahf
shl
stos
std
dec
stc
jl
fldcw
fucom
add
inc
loopne
xchg
sbb
mov
aam
das
bound
outs
and
add
mov
adc
mov
cwde
xor
(bad)
fisttp
cld
sbb
pop
jl
xchg
sti
mov
pop
ss
fild
(bad)
hlt
xchg
cmp
cmps
cmp
clc
push
push
or
cli
je
scas
scas
and
adc
movs
xchg
lods
mov
cmps
sub
xchg
jp
test
out
sti
or
add
sub
fild
and
cmp
jb
je
jecxz
push
or
dec
mov
and
stos
(bad)
inc
xchg
mov
mov
lods
push
clc
mov
stc
ror
sbb
dec
xor
jmp
jns
test
xor
cmp
push
and
dec
pusha
jmp
adc
mov
inc
aaa
jns
out
sub
(bad)
fadd
sahf
outs
and
sbb
jns
cwde
push
dec
xchg
std
inc
dec
cmp
dec
push
jbe
push
in
jno
test
test
jl
jbe
popf
ror
dec
cmp
je
push
mov
test
mov
push
ja
fimul
push
xlat
lahf
inc
ins
aaa
mov
shl
repnz
adc
mov
das
xchg
fiadd
jecxz
xchg
dec
mov
sub
test
sahf
mov
enter
mov
adc
es
outs
inc
dec
clc
ins
add
cs
test
ja
adc
pop
adc
adc
adc
cld
cmp
dec
push
outs
in
ror
je
pop
pop
jmp
lock
push
or
in
jnp
jns
add
mov
jge
sub
pop
fcom
or
inc
dec
out
cwde
repz
inc
movs
stos
leave
addr16
xor
jae
xlat
adc
movs
aad
inc
pop
or
cmps
adc
xchg
(bad)
mov
fs
fisub
std
enter
rcr
mov
int3
in
mov
pop
mov
xor
jno
cmp
addr16
mov
jo
mov
sub
xchg
cmps
adc
mov
sbb
ins
add
ds
jl
jb
add
fstp
xchg
je
mov
js
cmc
ins
inc
push
sar
fwait
push
add
arpl
add
cmp
mov
pusha
pop
pop
xor
sbb
shl
cmp
jle
out
inc
mov
repz
test
test
sub
repz
lahf
mov
or
jne
jae
jp
sbb
es
mov
lahf
fs
outs
xchg
(bad)
jmp
shr
cld
add
push
ins
cmps
aad
scas
dec
mov
movs
mov
xchg
neg
add
sub
push
xchg
sbb
mov
lods
ja
cmp
dec
sub
mov
push
fcomip
cwde
fst
xor
jge
popf
(bad)
fistp
mov
cmp
fisttp
push
cmp
(bad)
sbb
sbb
xchg
mov
mov
cmp
sti
jmp
nop
pop
(bad)
fstp
es
sub
sbb
loope
and
or
call
aad
mov
inc
(bad)
cdq
add
push
and
(bad)
les
jecxz
push
jae
cli
xchg
xchg
(bad)
xchg
adc
pop
mov
jbe
dec
data16
(bad)
sahf
dec
cmp
sahf
ins
jmp
adc
jp
mov
or
jmp
xor
pusha
call
xor
iret
push
je
pop
jmp
das
in
or
jnp
(bad)
int3
adc
sub
bound
xchg
sub
sar
sub
stos
push
jg
mov
mov
movs
xor
jmp
add
fisub
popf
inc
fcom
out
fsub
xchg
xchg
add
movlhps
cmp
cmp
out
push
or
mov
push
loop
xor
outs
enter
sbb
fiadd
lds
int
fnstenv
aam
jl
imul
push
(bad)
dec
add
jae
mov
mov
ins
pop
xchg
add
mov
add
out
inc
mov
(bad)
test
dec
ja
cwde
xor
gs
loope
xchg
gs
stos
icebp
ror
push
mov
daa
cli
ss
enter
add
in
push
mov
jmp
sub
cmp
sbb
dec
push
mov
call
hlt
aad
sti
cli
sub
sbb
lea
bound
dec
fnsave
mov
pop
inc
and
sbb
mov
push
je
sbb
frstor
adc
in
cs
mov
cmps
aaa
jno
shr
dec
xchg
sbb
pop
cmps
test
or
shl
sbb
adc
push
mov
inc
xor
gs
out
mov
jno
jne
add
sub
add
cmps
out
sub
pop
push
adc
and
popa
sub
sbb
xor
jg
aam
and
inc
xchg
adc
cmp
sar
or
mov
xchg
cmp
ficom
jmp
shr
aaa
or
dec
inc
inc
sub
(bad)
(bad)
nop
or
mov
push
ret
lds
pop
rcr
xchg
jne
inc
xchg
push
push
scas
repnz
addr16
or
xchg
int3
add
loop
inc
test
or
cmp
out
xchg
test
adc
retf
and
jae
xchg
or
sub
sbb
cmp
jmp
lahf
stos
cli
jp
sub
xor
cmps
jle
sub
stc
loopne
mov
mov
dec
lds
mov
jno
or
push
test
push
add
xchg
xor
dec
call
fst
ret
fwait
aad
push
cs
test
cs
push
out
out
(bad)
in
jg
jb
aam
xor
test
cmp
int3
xchg
outs
and
popf
cmps
test
test
sbb
test
div
sbb
int
and
push
sbb
sub
rcl
xchg
loopne
lea
sar
pop
out
(bad)
adc
repz
jno
add
add
rol
jle
into
pushf
bound
xchg
pusha
addr16
jge
(bad)
pop
push
sub
fidiv
fdivr
mov
jg
sar
jne
fidivr
and
mov
sbb
aad
das
sbb
sti
inc
push
icebp
aaa
loopne
jmp
addr16
daa
mov
mov
cmp
or
hlt
inc
mov
add
cmps
fsub
jecxz
popa
popf
shl
iret
idiv
xchg
mov
xor
push
cmps
push
inc
scas
enter
mov
popa
test
mov
dec
cmp
in
mov
jle
inc
dec
int3
sbb
int
aad
mov
cmc
pushf
inc
dec
xchg
repz
xchg
inc
cwde
cmp
cmp
stos
lods
mov
out
xchg
ja
cmp
(bad)
fsub
repnz
shl
movs
mov
pop
xlat
xor
idiv
add
inc
jmp
jmp
imul
out
pop
call
push
xchg
xor
scas
adc
push
pop
data16
je
bound
les
lods
lds
push
daa
cmp
stos
stc
sub
mov
xor
mov
lock
mov
fcomp
(bad)
cs
or
inc
add
nop
jno
aad
inc
rol
loop
mov
mul
div
loopne
adc
int
outs
in
cmp
cld
jnp
inc
pop
push
aaa
rcr
scas
sub
cwde
mov
and
fistp
call
mov
pop
pop
add
mov
push
jp
in
cld
fcmovbe
mov
push
mov
mov
mov
sub
sbb
mov
(bad)
(bad)
sahf
int
shl
sub
jp
fadd
in
and
js
push
add
scas
(bad)
loopne
neg
dec
add
rol
inc
leave
retf
retf
out
push
das
xor
dec
xchg
and
fst
ret
xchg
in
loop
ja
in
ret
(bad)
in
or
inc
dec
push
mov
cmps
je
jge
push
out
sbb
xchg
or
sub
(bad)
inc
pop
pusha
and
jo
fsub
outs
test
pop
pop
xor
imul
ins
retf
push
daa
inc
sub
mov
adc
repnz
shl
cmp
adc
push
sub
pop
cmps
mov
sub
and
jle
cmp
daa
mov
outs
movs
mov
mov
dec
repz
rcl
cmp
icebp
dec
dec
cmps
int3
jo
adc
adc
add
lods
or
pop
pop
xor
dec
jge
ret
call
out
mov
push
mov
sbb
sub
adc
fmul
lock
xchg
adc
inc
aas
inc
rcl
mov
inc
neg
sbb
and
inc
mov
cmp
push
pop
mov
dec
ins
mov
or
xchg
xor
leave
jmp
and
mov
fdivr
cmps
xchg
cs
push
inc
jnp
cmp
pop
ror
pop
mov
xor
jle
mov
sbb
sbb
mov
mov
mov
mov
dec
icebp
nop
push
sar
mov
stos
xlat
sahf
dec
inc
xor
push
lds
xchg
mov
push
(bad)
sbb
popf
lahf
mov
sbb
jmp
push
ror
outs
sub
or
push
loope
cwde
xor
xchg
and
mov
cmp
push
test
loop
retf
or
push
sub
add
outs
fdiv
aaa
js
jno
retf
(bad)
inc
pop
sbb
add
popa
fld
pop
mov
push
jbe
xchg
mov
sub
push
dec
jle
or
stos
sahf
push
mov
mov
or
mov
popf
mov
sub
(bad)
mov
rol
sub
xor
icebp
pop
mov
inc
or
cmp
xchg
ins
das
mov
(bad)
cwde
push
xor
movs
adc
jb
popa
test
push
xor
and
and
jo
push
popa
adc
xchg
inc
ror
cs
imul
sub
pop
in
mov
inc
pop
lods
in
xchg
push
popa
push
mov
xchg
mov
xchg
out
lock
lods
dec
cld
cdq
loop
xlat
or
inc
sub
(bad)
fld
xchg
mov
jae
add
movs
int
fs
xchg
adc
or
bound
(bad)
ins
inc
fldenv
jle
jne
not
and
ins
ins
cs
sub
lods
loope
or
dec
enter
push
mov
ror
or
add
mov
in
mov
inc
xchg
adc
mov
add
cwde
pop
pop
sbb
jno
mov
inc
repnz
mov
retf
inc
add
adc
cmp
push
leave
retf
mov
leave
inc
xor
sbb
in
jns
cmp
mov
dec
sub
icebp
jmp
shr
repz
lea
sahf
fmul
adc
shl
jg
cwde
adc
dec
pop
jg
push
and
jno
cmp
mov
pop
and
adc
das
inc
sub
nop
fadd
or
sub
stc
mov
or
cmp
jnp
js
sub
pop
jb
cmps
mov
inc
push
pop
(bad)
pop
(bad)
xor
aas
xchg
sub
pop
fwait
push
ret
push
mov
jb
add
(bad)
mov
or
stos
sub
push
out
clc
pop
test
sbb
cli
fs
enter
or
mov
pusha
(bad)
pop
shl
push
xchg
sti
lea
clc
fs
in
mov
mov
or
cmp
sbb
pop
or
pop
jge
jl
or
push
mov
mov
jp
jmp
mov
or
cli
mov
and
icebp
aaa
push
test
cmp
inc
and
retf
aam
mov
gs
jae
mov
out
dec
xchg
call
adc
enter
ds
pop
or
mov
aas
ror
lea
xchg
adc
cwde
enter
mov
mov
mov
pusha
in
popa
mov
std
push
add
pop
jnp
popf
jno
adc
(bad)
lahf
sbb
out
retf
pop
push
popa
mov
ret
jecxz
(bad)
pop
fwait
sbb
push
mov
test
in
ins
icebp
ds
in
rcr
add
enter
dec
mov
xchg
fld
push
mov
xchg
pop
sub
cmp
shl
cmp
xchg
inc
cld
cli
fistp
mov
out
aam
jno
mov
mov
add
dec
jns
or
scas
call
dec
push
dec
in
mov
ret
lods
xchg
test
neg
retf
xchg
stc
or
adc
sbb
sub
test
dec
pop
pop
push
dec
cld
movs
loope
cmp
sub
leave
sbb
mov
and
dec
test
cmp
adc
adc
sbb
jo
ins
mov
iret
add
das
and
xchg
cmp
mov
dec
and
in
cmp
iret
xchg
ja
jns
add
pop
call
imul
xchg
loop
cs
test
dec
mov
ja
retf
push
outs
push
pop
mov
movs
mov
jmp
or
push
lods
retf
(bad)
test
rcl
and
mov
sub
fwait
mov
and
mov
xor
cmp
push
or
sub
push
xchg
xchg
outs
cmp
arpl
scas
push
ret
mov
out
xor
push
mov
xor
pop
test
mov
push
push
inc
in
rcr
xchg
adc
mov
jns
and
mov
mov
mov
lock
bound
xor
hlt
loopne
jns
push
fwait
call
inc
ud1
mov
stc
arpl
das
adc
fbstp
aad
out
sbb
jp
push
mov
inc
adc
movs
sbb
fisttp
jbe
fcom
xchg
push
lea
add
es
dec
sub
pop
xor
xchg
add
dec
mov
mov
mov
mov
add
sub
outs
push
repz
jge
cdq
pop
dec
and
sub
aam
test
fist
rcr
mov
pop
or
pop
xchg
neg
and
sub
mov
mov
mov
xchg
cwde
mov
adc
jg
lahf
int3
lock
jg
retf
fstp
adc
sub
mov
adc
sub
sbb
gs
je
push
cmp
aam
fistp
xchg
std
movs
xchg
pop
or
cwde
xchg
adc
cmc
cmps
outs
and
push
bound
add
cmp
push
sahf
movs
retf
pop
xchg
dec
adc
and
and
adc
jbe
repnz
adc
add
inc
and
adc
xor
ret
mov
dec
icebp
inc
push
and
cld
add
push
add
add
jbe
jg
inc
xor
push
pop
repz
rcl
mov
loop
sub
ds
test
sbb
int
int
stc
sbb
mov
sete
ret
sti
sub
out
jnp
dec
mov
fs
cmp
pop
es
mov
rcl
repnz
jl
mov
es
retf
inc
sub
push
mov
mov
pusha
(bad)
in
pop
shl
mov
push
push
adc
pop
push
push
pop
lods
xchg
adc
inc
ins
xchg
or
sub
bswap
cld
xlat
sbb
int
mov
enter
icebp
stc
or
pop
push
test
scas
lock
nop
or
fldcw
fmul
add
pushf
std
mov
pop
sub
mov
(bad)
into
cli
push
aam
addr16
test
mov
cli
int3
jo
push
adc
ins
add
dec
aam
into
or
int3
or
sbb
jge
(bad)
push
sbb
mov
out
push
push
xchg
movs
dec
or
xchg
push
or
add
shl
das
cmp
cmps
mov
xchg
loope
mov
iret
sub
cmp
movs
jecxz
cdq
or
(bad)
aas
ret
mov
add
mov
inc
push
push
add
ds
dec
out
test
dec
clts
test
sbb
icebp
stc
lods
out
shl
mov
stc
sub
les
imul
cmp
cmp
add
push
jno
cs
cdq
mov
lds
out
cdq
ror
rcr
and
add
rcr
sbb
shr
jne
pop
pop
sar
out
ins
mov
mov
add
dec
and
or
shr
addr16
push
adc
mov
or
sbb
add
mov
cld
push
bound
cmp
inc
xchg
mov
(bad)
leave
in
sbb
js
in
fsub
mov
adc
and
jns
test
jns
movs
rol
and
int3
xor
and
jge
sub
in
add
das
mov
rol
cmp
add
mov
pop
into
xchg
and
fld
aas
out
push
cmc
cmp
push
add
pop
rol
xor
pop
jle
mov
(bad)
mov
mov
xor
jns
cmps
jle
push
cmp
sahf
jnp
xor
mov
imul
jb
outs
je
push
aaa
test
and
cmps
(bad)
or
dec
pop
mov
cld
ins
adc
jnp
pop
xor
into
icebp
aad
xor
neg
adc
das
fiadd
jecxz
adc
push
stos
jmp
xchg
xchg
rcl
nop
jns
xchg
fdiv
sub
pusha
push
lds
cwde
ins
lea
jmp
je
inc
mov
into
das
dec
je
jno
bound
sub
xchg
and
test
cmp
xor
stos
aaa
push
popa
xchg
cmc
std
jno
clc
mov
xchg
mov
push
xchg
pushf
xchg
(bad)
fisubr
or
inc
mov
xor
cmps
xchg
xchg
or
sub
test
push
and
retf
arpl
data16
lock
aas
shl
cmp
in
lods
and
xor
xor
mov
mov
cwde
mov
repnz
or
loopne
sahf
add
mov
inc
bound
adc
(bad)
rcr
(bad)
sub
pop
outs
sbb
cld
jno
sar
ins
jg
dec
int
xchg
and
fsubr
dec
fdivr
inc
xor
dec
inc
fwait
ret
stos
jns
jbe
cmp
jecxz
sbb
outs
inc
repz
scas
movs
adc
pusha
dec
ror
repnz
cmp
mov
lods
sbb
fist
(bad)
xlat
mov
imul
ret
mov
and
inc
addr16
and
aaa
movs
lods
adc
jle
inc
push
xor
sub
xchg
mov
or
js
and
jb
push
sbb
pusha
inc
mov
ins
or
sub
test
mov
sbb
arpl
ret
ret
inc
xchg
or
sub
mov
xor
inc
sahf
rcl
xor
std
cdq
push
addr16
xor
in
lahf
mov
xor
adc
mov
loop
dec
mov
call
mov
sub
or
retf
ds
or
jecxz
add
or
in
xchg
jmp
jl
push
pop
push
test
xor
lock
pop
pop
xchg
and
xor
mov
aas
into
gs
ret
(bad)
cmc
retf
xor
scas
loop
push
aaa
sbb
add
and
stos
mov
adc
xor
or
out
call
js
std
(bad)
pop
nop
fnstcw
fwait
addr16
iret
out
pop
sbb
dec
inc
mov
xchg
mov
into
cwde
ret
imul
mov
daa
sbb
(bad)
js
dec
out
inc
cmps
sahf
fwait
addr16
or
mov
and
sbb
mov
jo
cwde
mov
daa
sbb
les
inc
int
xchg
loope
jl
(bad)
std
popf
adc
push
lds
jbe
shl
jb
and
daa
jne
ja
(bad)
dec
dec
adc
outs
aas
in
mov
ja
jno
sahf
hlt
daa
mov
ret
cmps
gs
outs
in
sbb
jne
dec
call
mov
clc
shl
mov
mov
lods
fist
(bad)
cmp
call
retf
jbe
enter
or
cmp
test
rcl
xchg
aam
icebp
sar
and
imul
inc
jecxz
lea
call
imul
fisubr
and
cmp
add
out
mov
repnz
fidiv
in
mov
cmp
dec
push
pop
retf
imul
xchg
mov
push
pop
mov
jo
cdq
add
fmul
pop
mov
push
fcmovbe
dec
out
and
add
cmp
lock
dec
sbb
ret
scas
adc
fdiv
xor
or
cmps
ss
or
dec
adc
js
mov
mov
mov
dec
mov
in
loop
mov
sbb
mul
cmp
fld
pushf
(bad)
pushf
add
jnp
mov
shl
and
cmps
ret
retf
mov
int3
int3
mov
cli
inc
(bad)
ret
sub
adc
mov
jg
or
mov
(bad)
and
mov
fwait
dec
xchg
and
pushf
scas
movs
aaa
mov
(bad)
dec
mov
xor
xchg
rol
aas
dec
in
mov
and
mov
scas
imul
fldenv
rcl
icebp
inc
add
dec
stos
jmp
cwde
data16
in
(bad)
(bad)
push
pop
mov
push
mov
loopne
add
lahf
add
movs
pop
cmc
iret
push
pop
imul
mov
(bad)
out
or
jecxz
mov
adc
retf
adc
mov
sub
fwait
push
cmp
jecxz
jp
(bad)
fs
aas
inc
cdq
cmp
jl
add
(bad)
into
or
sbb
sti
xor
not
push
out
xlat
add
out
jp
xor
lods
push
or
ret
pop
out
push
scas
and
(bad)
in
mov
cmc
aad
inc
addr16
adc
adc
imul
out
xchg
or
jl
push
sub
loope
test
xchg
pushf
jge
mov
fcomi
sub
inc
push
out
cs
xor
jb
in
out
push
popf
xor
int3
push
imul
jne
xlat
aad
jg
push
pop
cmps
in
jge
mov
aad
mov
fcmovb
push
stc
push
outs
lahf
cmp
jg
cli
xor
lea
loopne
adc
loope
loop
imul
inc
shr
mov
(bad)
es
call
sar
iret
pop
aaa
adc
test
pop
push
jnp
pushf
inc
repz
dec
add
push
sar
pop
push
mov
(bad)
loopne
lods
and
cli
sbb
or
jo
mov
xor
leave
nop
and
inc
mov
cmp
cwde
outs
in
and
pop
and
and
push
out
je
ds
jg
gs
mov
int
cmp
jle
je
jns
sysret
call
sbb
fwait
mov
outs
(bad)
cli
and
inc
mov
mov
push
mov
or
inc
pop
popa
jmp
call
cmc
cmp
ins
mov
mov
mov
cmps
inc
out
rol
into
jge
lock
aad
stos
daa
xchg
push
sub
aas
cmp
inc
mov
adc
and
scas
sub
mov
dec
shl
and
loopne
dec
inc
inc
cmp
idiv
js
neg
imul
push
test
mov
cmp
ins
ret
inc
or
jo
and
into
arpl
repz
dec
imul
fwait
inc
xchg
outs
pop
mov
or
retf
and
loope
fnstenv
dec
mov
fld
(bad)
jno
test
nop
enter
ins
pushf
add
ja
test
xchg
cmp
cmps
scas
arpl
sbb
xlat
mov
mov
(bad)
xlat
in
(bad)
adc
push
xchg
aaa
jae
cmc
xlat
sbb
movs
or
clc
sbb
repz
adc
daa
xor
out
cmps
adc
adc
dec
imul
rol
push
mov
arpl
and
je
dec
sahf
dec
sbb
fld
out
dec
xor
into
das
and
cmp
cmp
push
add
in
aas
(bad)
repz
stos
(bad)
dec
jbe
cmp
ss
scas
and
daa
dec
jge
jae
mov
push
in
sar
popa
push
in
pop
push
fist
jle
push
adc
cli
jae
cmp
ss
mov
push
mov
inc
dec
sti
xchg
(bad)
inc
out
push
mov
inc
(bad)
or
mov
inc
ficom
int
pop
mov
add
sahf
xchg
sub
iret
mov
out
xor
jge
test
inc
ficomp
mov
sub
dec
cmp
jg
xchg
push
ja
ss
push
imul
or
fnsave
xchg
jns
mov
xchg
push
xor
fisttp
mov
and
mov
mov
inc
add
xchg
repz
mov
mov
std
mul
shl
imul
loope
mov
ss
out
stc
arpl
inc
and
or
jbe
sub
mov
adc
push
xchg
in
push
push
mov
rcr
jle
add
and
aad
adc
push
js
movq
imul
pop
clc
mov
sub
in
xchg
jecxz
jle
jnp
and
or
push
daa
int
int
stos
pushf
loope
das
lds
int
fidiv
test
and
jmp
add
retf
jno
sbb
add
daa
rcl
xor
out
(bad)
imul
inc
data16
cmps
lds
and
pop
mov
lods
shl
mov
inc
call
test
(bad)
mov
adc
adc
mov
movs
popa
imul
jmp
sub
push
fmul
xor
mov
fcmove
cli
out
in
(bad)
pop
and
jge
mov
jg
and
ss
xor
dec
ds
dec
mov
xor
lock
inc
mov
cld
cli
pop
loope
sar
ss
pop
icebp
sub
adc
xor
(bad)
out
in
movs
es
rcr
fnstcw
iret
inc
inc
cmp
adc
in
jmp
add
inc
stc
adc
idiv
inc
jge
xor
xchg
ror
adc
rol
add
add
(bad)
out
aaa
cmp
inc
scas
sbb
enter
dec
nop
mov
pop
fwait
loop
(bad)
fsubr
push
mov
leave
push
inc
stc
shr
test
aam
bound
jne
adc
loope
int
jb
cdq
xor
pop
rcl
jle
xchg
cld
fimul
rcr
mov
push
scas
add
idiv
in
test
mov
jmp
aam
push
jle
jmp
jmp
mov
leave
sbb
popa
mov
dec
add
xor
pusha
repnz
cmp
mov
es
mov
mov
or
loopne
sub
sub
aad
sar
or
jns
or
cmp
pop
aaa
add
mov
pop
cli
je
scas
or
(bad)
popa
in
je
addr16
aam
repnz
push
ja
(bad)
and
(bad)
dec
iret
push
sub
mov
out
xchg
mov
sbb
mov
pop
out
mov
mov
nop
enter
jmp
icebp
dec
jae
test
mov
call
fidivr
xchg
ror
(bad)
imul
xchg
xchg
push
imul
jg
xchg
cmp
sub
mov
lds
repnz
mov
adc
(bad)
stc
inc
jb
pop
lahf
iret
dec
das
aaa
aas
lods
cli
imul
push
test
and
and
call
nop
mov
loope
mov
aaa
movs
xchg
adc
lods
test
loopne
test
jp
push
mov
push
mov
ins
inc
ds
adc
jp
cmp
add
jb
xchg
ficomp
mov
sub
dec
rcl
xchg
dec
jns
mov
cmp
sahf
dec
clc
aas
pop
xchg
sub
or
sub
mov
push
jns
stc
push
push
int
lds
in
aam
adc
out
push
cmp
dec
daa
(bad)
or
xchg
sbb
jmp
das
pop
jle
inc
xchg
loope
repnz
jmp
pop
mov
jmp
mov
cmp
je
ja
hlt
mov
cmp
lods
sub
mov
ficomp
push
fcmovbe
pop
nop
xor
dec
not
fadd
add
add
nop
ss
popa
inc
xchg
sub
outs
sbb
test
xlat
push
dec
inc
and
sti
leave
test
jmp
cmp
and
in
cmp
inc
cli
inc
mov
shr
ds
inc
or
and
inc
pop
mov
int
retf
aam
sar
jmp
jmp
mov
inc
sub
push
xchg
fldcw
mov
mov
mov
add
js
inc
sbb
or
cmps
int
and
jno
xchg
sub
or
nop
daa
sbb
push
in
popa
mov
jp
push
cli
xchg
cwde
pop
push
cmp
hlt
arpl
lds
cmps
cmps
push
xor
sbb
sar
adc
and
adc
pushf
mov
inc
addr16
mov
js
out
sbb
xchg
xor
adc
dec
cwde
push
cmp
or
call
adc
jg
loop
jbe
add
mov
into
mov
mov
lahf
gs
clc
lock
(bad)
cwde
push
xchg
xor
loope
stos
pop
cmp
sub
aas
mov
scas
stc
adc
lds
sub
cmp
in
dec
mov
outs
(bad)
jae
adc
sti
rcr
mov
(bad)
jle
lds
dec
pop
xchg
pop
enter
test
shr
ret
movs
gs
retf
movs
mov
fstp
sbb
and
mov
in
mov
cmp
sub
mov
loope
xor
enter
lods
ins
lahf
aaa
dec
and
mov
add
sub
xor
int3
mov
or
pop
xchg
lahf
sahf
adc
ror
xchg
sbb
adc
jmp
mov
push
and
mov
int
cmc
enter
sbb
arpl
aam
lds
bound
test
inc
(bad)
ror
sbb
out
out
push
jno
adc
inc
ret
sub
cmp
cs
jne
ins
dec
pusha
stc
out
pop
je
xlat
adc
jb
je
inc
xor
arpl
(bad)
mov
adc
lahf
dec
call
and
popf
std
imul
sbb
xor
add
outs
fnstsw
push
je
jns
jno
dec
frstor
or
cmp
pop
jge
inc
push
stc
or
std
lea
ds
push
or
pop
push
lods
mov
xchg
int3
out
cs
or
xchg
sub
lods
push
and
mov
(bad)
fs
jp
mov
inc
jb
dec
xlat
xor
dec
push
int
enter
sbb
push
mov
call
lock
dec
xor
ds
int3
push
(bad)
bound
leave
mov
sbb
adc
jno
mov
push
(bad)
loopne
bnd
movs
pop
mov
pop
inc
fsubr
outs
movs
lods
or
out
inc
or
into
mov
push
lahf
ret
cmc
pushf
mov
sbb
mov
sub
add
in
xchg
nop
aad
dec
pushf
jmp
sub
adc
sbb
mov
int
retf
nop
xchg
sub
push
pop
sahf
icebp
ret
in
bound
lds
sbb
and
je
hlt
cmps
mov
xchg
test
(bad)
frstor
js
aas
sti
push
ja
into
pop
cmp
je
jnp
xchg
out
sub
mov
mov
mov
fdiv
mulps
cmp
cmc
ds
ror
add
jae
xchg
out
out
dec
xlat
ss
jp
and
push
dec
sub
cmc
es
jmp
dec
add
mov
dec
lock
pop
fdiv
sbb
jns
(bad)
gs
mov
aad
or
fsubr
xchg
fs
in
ret
mov
imul
aas
out
inc
cmc
jge
fistp
and
repnz
inc
xor
sbb
pop
push
out
fucompp
push
dec
push
mov
push
and
xchg
and
push
dec
outs
fwait
add
cmp
xchg
movs
sub
lods
inc
je
push
ror
push
pop
fucomip
inc
popf
imul
dec
pop
loope
xor
sbb
mov
pop
mov
cmp
or
mov
jb
pop
xchg
dec
fisub
pop
pop
sub
sahf
jg
cmp
inc
daa
ret
into
jl
aaa
repnz
add
mov
stos
dec
cmp
outs
popa
add
dec
add
lods
out
out
jnp
dec
mov
imul
inc
fcomip
pop
iret
cmps
or
stos
ror
popa
fstp
and
scas
jae
lods
adc
and
sbb
pushf
xlat
mov
inc
mov
push
push
rol
adc
(bad)
test
fwait
jns
dec
inc
mov
jmp
dec
dec
xchg
test
push
inc
jp
mov
sbb
xor
jns
xchg
call
retf
jp
pop
xor
mov
sbb
xor
mov
adc
ret
into
pop
inc
push
lock
mov
add
adc
test
pop
icebp
sbb
stos
sti
xor
sub
jmp
jge
call
jnp
mov
cwde
push
pop
mov
sbb
mov
aam
pop
dec
jae
retf
lds
pop
mov
mov
fstp
test
scas
mov
pusha
je
stos
sahf
push
add
pop
mov
xchg
popa
mov
pop
arpl
popf
fs
test
scas
pop
jmp
rcr
push
out
push
lds
push
xchg
nop
xchg
test
sbb
(bad)
data16
out
(bad)
jp
xor
pop
dec
out
mov
dec
and
mov
jne
(bad)
out
jns
adc
sbb
pop
xlat
mov
mov
pop
int
imul
cmp
clc
scas
jp
test
jo
push
mov
sahf
mov
loope
shl
xor
mov
out
ret
hlt
inc
lds
cwde
or
fidivr
jmp
or
fldz
push
mov
and
jns
cmp
loope
fstp
and
jmp
jp
cmp
adc
sbb
shr
xor
and
sub
ins
pop
sub
mov
inc
in
ins
sub
nop
pop
cmc
push
sbb
test
fmul
xchg
js
loope
adc
js
dec
jb
and
mov
sub
(bad)
xor
mov
push
or
cli
scas
je
mov
lds
cmp
sbb
dec
cmp
lods
loope
pop
inc
add
pusha
mov
push
xor
inc
inc
or
loop
pop
out
shr
sahf
mov
jmp
std
or
cmp
in
daa
sbb
shr
ins
in
xor
xor
outs
fisub
mov
fstp
xor
pushf
clc
call
and
inc
cmps
jp
(bad)
jecxz
xchg
adc
jnp
cmp
scas
pop
mov
xchg
mov
sbb
repz
movs
aad
and
cmp
jmp
mov
xchg
loop
dec
out
cmp
mov
jo
fdivr
scas
add
popf
movs
dec
inc
fcmovb
shr
ins
jne
ss
push
sbb
adc
push
jle
inc
leave
call
jmp
and
mov
je
scas
push
cmp
or
nop
es
cmp
push
push
mov
xor
adc
xor
xchg
xchg
pop
(bad)
cld
adc
dec
sub
bound
and
jo
mov
sub
inc
cmps
sahf
fist
xor
xchg
cmp
and
and
dec
sahf
sahf
das
pop
or
mov
inc
cli
fdiv
lods
xchg
pop
int3
unpcklps
jg
retf
sbb
hlt
loop
sub
xor
jmp
aam
and
mov
in
xchg
fwait
dec
lahf
leave
sets
addr16
(bad)
lock
inc
or
dec
cmp
push
xchg
xor
xor
sti
das
xchg
dec
mov
sub
scas
jmp
shr
dec
xchg
ret
inc
test
cmp
sbb
leave
movs
jo
sub
inc
ja
stos
dec
mov
cmp
cmp
mov
jne
add
call
popa
sbb
inc
xchg
lods
push
rcl
mov
imul
cmp
mov
retf
mov
mov
test
ja
(bad)
(bad)
pop
and
adc
dec
imul
test
(bad)
mov
sbb
rcr
push
inc
xchg
xor
(bad)
out
out
jle
jo
outs
cmp
cmc
into
imul
gs
stc
pop
in
enter
aaa
jo
inc
clc
nop
cs
lds
sub
in
and
sti
inc
fsub
or
sub
dec
adc
add
xor
ss
jmp
sub
cdq
out
mov
xor
leave
pop
jl
cmps
adc
inc
xchg
cmp
sub
and
cmp
ins
leave
xchg
cs
sub
adc
cmc
mov
or
mov
pop
aad
stos
std
shl
mul
cdq
jle
rcr
push
(bad)
arpl
xchg
or
sbb
cmps
jg
dec
call
push
and
mov
pushf
xchg
aam
add
daa
pop
aad
jo
push
or
cmp
push
mov
movs
es
xor
xchg
div
pop
adc
imul
fld
pop
imul
fidiv
in
loope
xchg
xchg
les
mov
jnp
int3
enter
sti
data16
pop
adc
ret
or
xchg
and
xchg
imul
stos
xor
dec
add
daa
mov
push
and
in
test
push
jmp
test
and
adc
pop
out
and
mov
fwait
or
sub
aaa
aaa
aaa
and
shl
test
xor
cmc
shl
push
add
jge
das
or
jae
out
mov
inc
fcom
popf
(bad)
cli
xchg
or
lods
pop
xor
fs
pop
push
cwde
mov
mov
dec
inc
mov
pop
xor
aaa
fnstenv
punpckhdq
jmp
mov
xor
call
jp
mov
mov
ds
pushf
xchg
adc
pushf
lods
inc
hlt
cmp
cmps
outs
ins
xlat
adc
pushf
xchg
jno
sub
push
idiv
pop
pop
(bad)
mov
movs
mov
inc
call
out
les
mov
into
dec
pop
mov
xchg
mov
std
mov
aam
imul
and
dec
pushf
adc
dec
mov
and
(bad)
fcomp
test
pop
sbb
(bad)
sub
ja
or
xor
shl
lds
add
gs
adc
mov
loop
dec
retf
sbb
enter
or
sbb
mov
add
push
dec
cmp
xor
fwait
cmp
gs
mov
add
bound
push
and
or
shl
inc
mov
add
das
and
cmp
ds
add
pop
pushf
xchg
or
pusha
mov
adc
dec
dec
ins
push
mov
push
loope
xor
fistp
jl
std
repz
div
jb
sbb
jnp
cmps
sti
add
(bad)
push
ret
shl
or
ret
sti
cmp
fiadd
stc
(bad)
movs
stos
lods
xor
jecxz
push
fmul
pop
outs
add
out
mov
mov
fisub
adc
cmp
dec
mov
mov
dec
ror
xchg
xor
jno
pop
xchg
mov
jb
into
mov
push
dec
sar
mov
loop
and
push
call
xchg
add
cs
adc
xor
xchg
mov
xchg
xchg
xor
pop
fcom
out
js
sub
and
jno
pop
push
sub
push
push
stos
adc
sub
das
(bad)
std
je
test
sub
or
(bad)
fidiv
push
sbb
pushf
mov
inc
rcl
xchg
sbb
or
or
popa
inc
jnp
push
pop
inc
mov
or
ds
and
pushf
xchg
push
adc
jo
enter
adc
fistp
add
lahf
adc
sbb
adc
cmp
cmp
or
inc
out
sbb
jmp
fimul
lahf
cwde
pop
retf
push
ins
adc
out
ins
shr
jecxz
mov
push
mov
jno
cmp
int3
jmp
mov
add
push
fistp
push
xor
in
shl
add
dec
test
xchg
and
sbb
sub
daa
fld
jmp
xchg
add
pop
add
push
(bad)
push
xlat
in
jl
dec
adc
adc
in
jle
stos
cmp
and
and
and
out
pop
sbb
xor
div
popa
ins
in
xlat
rcr
jl
inc
sahf
cmps
std
sbb
repz
ficomp
inc
mov
push
cmps
sbb
cmp
xchg
sbb
mov
movs
data16
jmp
push
call
pop
stos
lods
mov
inc
(bad)
jl
ret
dec
jl
(bad)
daa
pop
retf
mov
popf
cmp
sub
cwde
popf
ds
and
sub
movs
xchg
popf
xchg
mov
and
or
jo
dec
sahf
in
dec
sub
cmp
cmps
xchg
outs
dec
arpl
ins
shl
inc
cmp
jns
sub
xor
lds
std
sub
and
dec
xchg
mov
imul
ror
out
sub
dec
dec
mov
popa
jns
jo
int3
push
(bad)
xlat
scas
rcr
test
mov
add
in
cmps
scas
mov
es
pop
hlt
in
(bad)
adc
in
or
jp
mov
(bad)
push
push
push
or
or
push
adc
dec
or
fcmovnb
scas
stc
lock
out
int3
push
adc
lock
popa
push
adc
dec
bound
(bad)
lds
pop
dec
popa
jmp
(bad)
clc
adc
pop
pop
pop
add
fbstp
pop
mov
sahf
int3
sti
inc
lock
pop
(bad)
outs
mov
mov
dec
mov
or
out
sub
jo
mov
mov
jns
fs
iret
or
fild
(bad)
inc
lods
jp
out
adc
cwde
sbb
adc
mov
lea
imul
cdq
mov
cmp
clc
mov
inc
movs
scas
cmp
xchg
inc
(bad)
out
test
iret
jg
jle
push
dec
fidiv
or
jno
mov
into
out
push
call
and
(bad)
outs
pop
sub
xlat
jl
xchg
fisubr
ds
jl
(bad)
hlt
sub
or
fsub
out
lods
test
jmp
bnd
pop
(bad)
cmp
out
push
push
mov
pop
into
mov
stos
mov
mov
in
cwde
ins
pop
int
lahf
push
call
pop
es
cli
loopne
and
mov
out
push
fcom
enter
loop
jle
push
xor
ds
leave
cmp
push
and
cld
mov
sub
push
(bad)
jmp
sub
int3
push
push
popf
fild
sysenter
push
sub
inc
xchg
inc
in
add
sahf
push
mov
jle
mov
rcl
cmp
fisub
frstor
fwait
lods
pop
icebp
ret
stos
mov
shr
and
sahf
add
retf
mov
cdq
and
stos
call
retf
lock
iret
jbe
fs
(bad)
ror
or
in
stos
(bad)
dec
adc
ins
into
fdiv
pusha
jmp
dec
(bad)
mov
ds
sti
aad
ret
cdq
adc
mov
mov
pop
and
add
pop
sbb
mov
jp
jge
adc
inc
cmps
ret
jge
xor
mov
sahf
inc
mov
repnz
jb
mov
ror
mov
dec
jmp
inc
xchg
in
inc
shl
mov
sbb
inc
out
loopne
aas
xor
mov
xchg
and
mov
xor
xchg
out
es
retf
stc
xlat
add
out
mov
jg
ret
test
aas
sbb
or
and
jb
mov
mov
adc
xchg
bound
xchg
movs
outs
dec
pop
pop
cli
sbb
movs
pop
pop
test
movs
test
mov
push
mov
or
fs
dec
adc
sbb
popa
xor
ja
or
cld
xchg
fucomi
fsubr
sbb
fidivr
js
retf
add
adc
hlt
cmps
fld
jns
in
fstp
leave
cmps
fwait
pusha
mov
cld
das
pop
sub
adc
xchg
sub
call
leave
sub
dec
mov
lods
ror
mov
sbb
ret
aam
ja
adc
adc
not
mov
push
repnz
sbb
dec
bound
and
fild
jb
mov
jne
jecxz
sub
hlt
lods
push
xor
out
nop
sar
(bad)
cmp
cdq
aam
adc
adc
cli
or
arpl
sbb
out
mov
jb
add
ja
lock
hlt
inc
jae
into
pop
pop
ins
mov
pop
xor
jge
pop
rcl
inc
ret
sub
ja
mov
sub
jo
push
push
jl
fist
(bad)
adc
cmp
pop
not
fisub
adc
out
or
fstp
repz
pop
outs
das
sub
cmc
loop
pop
xchg
or
dec
std
sub
xchg
xchg
mov
pop
pop
idiv
outs
inc
sbb
inc
ret
xor
lds
test
sti
fcom
popf
jmp
mov
outs
scas
jno
repz
cmps
jae
adc
sbb
fdiv
mov
sti
push
fs
je
pusha
jae
stos
rcl
cmps
rol
xor
add
xchg
call
dec
cdq
hlt
movs
lea
fist
cdq
fisttp
jo
jno
push
arpl
mov
sub
mov
jp
cmps
mov
add
movs
inc
outs
ffree
mov
rcr
add
inc
fsub
cmp
pop
sub
shl
out
jno
bound
cmp
or
sbb
jne
cmp
cli
loope
mov
jbe
movs
push
loope
fisub
rcl
mov
out
adc
lods
scas
in
jmp
retf
loop
push
outs
loopne
pop
cmc
sbb
xchg
sub
cmps
imul
stos
fld
fadd
imul
ds
aam
inc
outs
addr16
sub
int3
fwait
call
movs
cwde
sbb
(bad)
mov
mov
call
je
repz
pop
and
shl
fwait
lods
xor
sbb
pop
(bad)
dec
or
call
jns
cmp
push
cmp
mov
mov
xor
jp
xor
enter
jno
loop
inc
xor
inc
imul
add
pop
sbb
(bad)
in
dec
nop
leave
mov
cmp
inc
inc
mov
jbe
sar
les
or
mov
fdivr
xchg
xchg
inc
fisub
dec
sar
sahf
cmp
mov
mov
xchg
test
push
iret
add
inc
test
nop
xor
stc
repz
dec
aaa
mov
adc
xlat
sahf
popf
(bad)
setl
push
mov
(bad)
cmp
jbe
xor
aad
cmp
cmp
xchg
jno
inc
jae
fdivp
and
sahf
mov
out
or
jb
loop
icebp
cmc
mov
(bad)
push
and
adc
ds
and
imul
cmp
test
xor
aas
(bad)
lds
sar
js
prefetcht1
xor
mov
xlat
mov
int
push
lods
nop
xor
movs
lea
scas
pop
fdivr
cmps
push
div
loopne
aad
mov
mov
mov
sub
dec
pop
stos
leave
xchg
enter
ja
inc
movs
std
jecxz
stos
cs
xlat
sub
cmp
test
cmp
shr
stc
cld
cwde
sbb
cmp
out
imul
lahf
jmp
idiv
aaa
and
xchg
cmp
test
rcl
aaa
mov
jl
mov
adc
mov
pop
scas
je
nop
mov
call
push
pop
sbb
and
fidivr
fiadd
cld
cmp
pop
push
shr
xchg
or
mov
call
popf
jne
push
in
out
cli
sbb
fwait
(bad)
je
in
push
pop
pop
movs
loop
xchg
ss
add
movs
push
push
xor
(bad)
fiadd
sbb
(bad)
pop
jno
pusha
frstor
and
idiv
mov
mov
adc
xchg
ins
mov
inc
push
sar
add
xchg
adc
movs
imul
(bad)
scas
pop
in
push
mov
jno
ins
dec
add
cmp
cmp
jmp
and
sub
imul
call
jbe
mov
mov
or
addr16
xchg
adc
inc
or
sbb
lods
(bad)
and
hlt
rol
fwait
cmp
jbe
mov
and
movs
hlt
outs
ficomp
dec
mov
ja
scas
cmp
cwde
inc
mov
sub
test
aaa
cmp
mov
pop
mov
adc
js
outs
add
push
jne
ss
xchg
xor
data16
pop
cmps
push
mov
lea
mov
push
inc
arpl
imul
dec
cmc
pop
mov
int3
mov
fdivr
mov
xchg
leave
sbb
and
pop
cmp
popa
ret
rcr
imul
xchg
jge
fmul
jle
icebp
mov
fstp
inc
sub
fidiv
mul
into
inc
dec
xchg
lea
jg
lods
push
or
iret
retf
push
cdq
inc
in
lock
inc
fnstenv
aas
out
jne
inc
mov
rcr
sbb
imul
mov
xchg
(bad)
jmp
xchg
rep
push
and
mov
xchg
sub
jl
inc
iret
mov
clc
or
jp
cmc
mov
in
push
or
mov
xchg
adc
ret
ins
outs
xchg
inc
test
push
imul
or
jge
fsubr
push
add
cwde
mov
push
mov
or
push
out
adc
xchg
or
or
xchg
jmp
xchg
jns
mov
and
xor
ret
jge
xchg
movs
inc
fstp
xchg
out
jge
mov
jns
jo
mov
xor
test
xchg
push
sub
loop
pop
cmp
push
iret
cs
popf
pop
mov
mov
push
push
popa
cmp
inc
cdq
cmps
cld
mov
ss
jecxz
ret
dec
and
xor
les
pop
xchg
rcl
mov
push
push
data16
and
(bad)
lea
adc
ds
and
mov
inc
cmp
leave
movs
push
and
(bad)
int
inc
daa
mov
push
repnz
and
jecxz
dec
out
pop
sub
or
pop
cdq
and
repz
(bad)
adc
test
adc
xlat
pop
or
adc
xor
clc
mov
dec
dec
imul
push
enter
cmp
movs
cmp
test
inc
xor
std
cmc
xor
xchg
push
dec
sbb
adc
sbb
push
sub
push
idiv
scas
dec
push
lods
inc
stos
mov
test
cmp
inc
cmp
les
popf
sub
jno
jno
sub
pop
rcr
lods
or
jp
xchg
les
mov
xchg
pop
bound
inc
gs
arpl
push
jl
iret
cmp
xor
adc
cmc
cmc
xchg
pop
bound
hlt
ja
inc
inc
nop
cmp
cmp
pop
std
xchg
mov
dec
mov
test
pcmpeqb
mov
(bad)
bound
push
ins
(bad)
pushf
fidiv
jbe
repnz
les
fisttp
mov
xor
add
sbb
jb
add
mov
mov
cmp
xrelease
outs
fcom
dec
xchg
and
sub
aaa
push
lods
mov
push
call
jno
js
gs
xchg
test
fcmovne
xor
mov
clc
dec
jbe
or
sub
mov
mov
pop
adc
pusha
nop
stos
mov
int3
jmp
add
pop
push
xor
xchg
enter
dec
aad
push
mov
js
dec
in
loope
loopne
imul
imul
cmps
adc
jp
ficom
imul
mov
daa
push
mov
(bad)
test
add
and
or
clc
repz
and
pop
mov
sbb
xchg
pop
cs
mov
xor
aad
lods
jne
push
popf
mov
ja
pop
js
imul
es
dec
xchg
sbb
mov
int3
inc
sub
or
jbe
sti
je
push
adc
lea
jecxz
stos
mul
(bad)
cwde
cmp
call
push
sbb
push
sbb
push
adc
jb
bnd
mov
mov
cmp
xchg
mov
push
push
xchg
loope
xor
and
inc
xor
jno
push
xchg
push
push
push
out
add
(bad)
mov
(bad)
dec
lods
ins
push
inc
fiadd
dec
adc
outs
dec
outs
xchg
repnz
mov
enter
xchg
or
sbb
cmp
shl
sub
add
por
jecxz
sub
mov
push
imul
loope
ja
fcomp
pop
pop
bnd
sbb
sbb
int
pushf
mov
int
jmp
and
adc
cld
cmps
push
dec
in
pop
inc
sub
repnz
jmp
pop
adc
stc
hlt
jnp
arpl
aaa
iret
ret
je
pusha
sar
mov
lods
and
shr
add
call
jne
std
xor
push
ret
sbb
(bad)
dec
call
in
jne
pop
jge
mov
pusha
mov
and
sbb
xchg
jl
mov
in
adc
mov
stos
pop
xchg
xchg
push
div
movs
das
cld
mov
push
mov
test
call
cmp
loopne
aas
call
out
aaa
ret
lock
mov
test
jle
adc
popf
dec
adc
(bad)
add
scas
push
or
jbe
jg
call
inc
adc
mov
adc
ficomp
mov
sbb
fimul
sub
dec
mov
int3
nop
sbb
sti
aaa
loope
jnp
fbstp
sub
(bad)
test
jl
daa
sbb
enter
push
retf
mov
cmp
popa
imul
jbe
push
adc
out
stos
mov
sar
inc
das
fisubr
cdq
dec
xchg
test
scas
sbb
add
pop
push
arpl
loopne
shl
jae
lods
call
xchg
mov
jp
lock
fwait
push
les
push
inc
sub
out
int
loope
inc
xchg
jno
mov
data16
gs
fidivr
inc
(bad)
lock
xchg
loop
sub
imul
lahf
adc
pop
mov
sub
not
mov
mov
pop
jne
push
mov
retf
xor
push
pop
popa
mov
icebp
push
mov
add
inc
fnstsw
js
daa
push
jle
dec
jmp
(bad)
inc
int3
pop
cmp
add
xchg
repz
jo
out
sbb
daa
pop
mov
xor
lock
mov
cld
add
or
push
dec
scas
les
push
(bad)
cld
xor
test
pop
pop
frstor
or
in
or
imul
inc
aad
cmp
retf
xor
xchg
cmps
fadd
pushf
pop
fucomip
push
mov
jns
call
and
mov
cmp
mov
cs
push
dec
dec
cmp
pop
lock
mov
adc
int3
mul
or
xchg
jmp
stos
sbb
push
ror
ja
mov
lea
xchg
dec
ins
cld
loope
adc
mov
or
cld
adc
in
clc
scas
outs
stos
gs
mov
mov
int
or
push
mov
dec
scas
std
xchg
jo
xor
xchg
cdq
loope
mov
dec
adc
mov
popf
imul
aas
and
cmc
lods
gs
sbb
mov
mov
pop
xchg
inc
push
aas
xchg
sbb
mov
cmp
push
nop
fcom
dec
fcomip
adc
outs
adc
cli
xor
and
je
mov
or
sub
stc
sbb
dec
xchg
es
xchg
cmps
mov
jae
jl
sub
push
mov
adc
scas
adc
jno
in
mov
mov
mov
xor
test
add
push
and
mov
xchg
sub
mov
cld
gs
call
inc
sbb
mov
pop
(bad)
adc
pop
pop
push
xchg
sbb
or
hlt
ds
fsubr
sahf
inc
cmp
imul
lods
inc
mov
cmp
lods
pop
popa
es
inc
xchg
call
sar
mov
sub
scas
dec
fdiv
in
sti
xor
aaa
(bad)
xor
pop
div
jle
test
ins
rcr
rol
jmp
dec
push
xor
inc
pop
jecxz
(bad)
scas
dec
adc
mov
mov
cs
adc
jae
dec
add
retf
mov
add
loope
or
pop
loop
mov
sbb
pop
movs
rcl
jle
jle
xlat
and
ror
cmp
cli
push
jae
clc
imul
enter
sahf
outs
in
xchg
xor
ror
push
bswap
fld
sbb
or
and
sub
jmp
xor
push
xor
inc
rol
int
out
lods
sti
test
and
adc
cs
inc
cmp
mov
fs
push
mov
jl
jbe
or
movs
push
(bad)
imul
cmp
cdq
je
fwait
jne
sbb
sub
jnp
jne
xchg
pop
jns
and
mov
bound
jl
leave
sbb
push
mov
add
lods
sbb
cmp
mov
int3
push
xchg
cmps
leave
adc
pop
mov
fidivr
leave
icebp
mov
adc
dec
add
dec
cmps
add
popa
(bad)
icebp
les
xor
enter
push
pop
fimul
pand
xor
jmp
jb
add
add
loop
loop
and
sbb
je
(bad)
ret
cmps
ror
enter
and
ror
add
inc
lods
into
push
cld
pushf
mov
sbb
push
jo
jne
mov
fistp
cmp
adc
and
cmp
mov
adc
test
ja
dec
enter
push
in
fst
mov
add
xchg
mov
iret
and
rcl
inc
les
leave
or
mov
xor
mov
jne
dec
pop
or
cld
lods
dec
xor
stc
in
call
mov
ds
mov
add
sub
mov
jle
(bad)
in
js
push
cmp
cdq
aam
inc
cmp
and
cmp
test
or
push
push
or
cdq
cmp
mov
mov
adc
push
iret
adc
stos
cmps
retf
dec
nop
dec
pop
(bad)
adc
(bad)
push
sbb
stc
mov
test
stc
mov
xchg
dec
mov
inc
mov
scas
push
movs
add
mov
adc
mov
(bad)
inc
shl
scas
pop
retf
push
(bad)
in
leave
pop
enter
repz
mov
ss
push
lods
jecxz
call
mov
xor
jbe
sbb
fsubp
cmp
sbb
ins
mov
sub
and
popf
add
icebp
sar
out
arpl
mov
fld
mov
sub
aam
call
pop
cs
cdq
repz
inc
xor
mov
iret
enter
pop
leave
fiadd
sbb
fiadd
fimul
addr16
add
das
cmp
jb
fimul
mov
cmp
push
cmps
cmp
in
xor
mov
(bad)
fcomip
inc
leave
out
push
stos
mov
test
scas
jb
sbb
xlat
pop
xor
xchg
mov
xchg
outs
aad
ror
loopne
movs
loop
xor
rcl
pop
out
sbb
cmp
idiv
rcr
mov
enter
mov
inc
dec
xlat
adc
sbb
mov
cmps
cmps
xchg
sbb
mov
mov
mov
push
fisub
pop
mov
xor
or
push
cld
rol
sbb
mov
(bad)
push
cmp
out
pop
pop
call
xrelease
(bad)
faddp
js
ins
outs
xchg
add
pop
repnz
pusha
jl
dec
push
and
push
js
pop
add
fcmovnb
mov
lods
mov
bound
and
into
dec
push
cmp
sbb
adc
call
xchg
in
xchg
js
lods
push
iret
mov
shr
add
dec
scas
ss
fld
aas
jge
adc
inc
int3
popa
cs
(bad)
push
mov
jb
lds
mov
les
dec
imul
dec
pop
push
js
daa
(bad)
icebp
fiadd
cmp
cmp
or
pushf
loopne
sar
shl
les
shr
dec
popa
mov
ret
mov
add
or
xor
in
cmp
repnz
inc
daa
jmp
dec
push
mov
std
int3
gs
and
inc
setnp
mov
pop
adc
dec
add
pusha
aad
push
lock
or
popf
pop
iret
xchg
les
pop
popa
fld
rcr
jmp
pop
and
mov
sbb
dec
inc
push
dec
fcos
leave
into
addr16
js
push
push
jge
(bad)
inc
xchg
add
sub
pop
mov
fiadd
test
add
xchg
(bad)
outs
push
imul
mov
ret
cmc
aaa
dec
in
cmp
jnp
clc
adc
jl
iret
mov
inc
sti
aaa
icebp
fnstsw
mov
inc
out
dec
pop
adc
call
mov
outs
imul
arpl
test
mov
mov
pop
in
je
enter
xor
outs
mov
mov
mov
push
lea
retf
cmps
js
mov
mov
ds
pop
data16
or
pop
outs
jmp
ins
add
inc
push
or
mov
addr16
(bad)
stos
dec
jne
ss
pop
sub
jae
sub
xchg
(bad)
fisubr
cmp
cwde
mov
add
or
lahf
or
cmp
movs
cdq
cmp
fsubp
retf
cmps
and
shl
mov
sub
cmp
fwait
mov
pop
lds
mov
pusha
test
das
pop
mov
push
mov
xor
mov
push
inc
dec
dec
ins
fsubr
mov
imul
add
pop
cs
push
dec
int
not
nop
(bad)
lahf
repnz
and
lock
add
mov
das
inc
add
leavew
das
push
icebp
movs
push
xor
adc
add
popf
mov
pop
lahf
dec
mov
fidiv
rcr
dec
jmp
arpl
pushf
push
push
sub
push
jl
pop
add
xchg
sub
xchg
push
in
test
and
inc
pop
pop
inc
dec
add
and
pop
mov
dec
sub
inc
inc
xchg
push
jns
sub
pushf
push
int
jno
hlt
fcom
mov
xor
add
pop
push
mov
lods
ror
mov
inc
rcr
inc
aad
je
in
xlat
sub
stos
test
add
pusha
dec
sar
lods
mov
fist
push
in
out
push
test
push
inc
popa
gs
adc
jns
call
sti
aaa
pop
aad
mov
cmp
dec
add
mov
mov
test
fabs
mov
rol
cdq
jl
pushf
popf
fsub
mov
call
jns
push
arpl
adc
into
mov
mov
clc
mov
test
sub
mov
cld
std
pop
(bad)
sub
scas
jmp
inc
(bad)
push
das
fmul
inc
ja
mov
(bad)
loope
mov
jo
cmp
in
dec
add
xchg
sahf
xor
lods
and
addr16
jmp
push
jecxz
inc
iret
in
add
mov
ret
xchg
xor
cmp
inc
jl
leave
mov
stos
push
sbb
cli
ret
fsubp
xchg
push
mov
jne
mov
xlat
mov
or
jb
mov
pop
scas
jmp
rcl
xor
adc
pop
mov
cmp
out
cwde
jge
stos
mov
pop
scas
jb
or
xor
mov
sbb
mov
xchg
and
or
pop
jp
icebp
and
jge
push
cmps
mov
outs
mov
iret
add
push
sub
out
push
pop
hlt
pop
ins
cmps
ins
enter
mov
int3
bound
or
fbld
add
adc
pop
sub
jbe
push
in
data16
pop
lds
lods
cdq
fild
xchg
pop
pushf
out
jb
sub
sbb
repnz
sub
pop
pop
pop
les
(bad)
gs
test
cmc
imul
push
je
dec
jmp
cmp
push
ud0
iret
adc
xchg
mov
hlt
aam
mov
sub
in
push
dec
outs
pop
ror
pop
mov
adc
lahf
mov
xlat
pusha
cmp
in
icebp
inc
add
scas
mov
test
ins
add
mov
inc
scas
inc
popa
sbb
out
sub
stos
nop
jae
int3
imul
loop
data16
dec
jno
lea
fs
in
adc
push
xchg
inc
ret
push
cmp
stos
xchg
aam
mov
std
movs
jle
xchg
cmp
pop
or
call
retf
sub
dec
xchg
(bad)
bound
pop
popa
add
and
ja
loopne
out
mov
je
iret
xlat
mov
enter
push
push
xchg
mov
pusha
hlt
sub
jo
je
mov
jmp
lea
fcomp
lea
hlt
cs
jnp
rdtsc
out
loop
aas
repz
mov
push
scas
pop
add
jmp
mov
outs
mov
mov
mov
mov
xchg
movs
ss
aaa
xor
sub
fistp
jbe
xchg
ds
rol
ffree
xchg
mov
je
test
add
jne
stos
call
pop
jns
or
sbb
sahf
mov
gs
jmp
pop
mov
out
lods
xchg
dec
or
mov
fstp
fsub
adc
bound
jns
imul
cwde
dec
movs
pop
push
data16
or
scas
(bad)
xor
push
add
and
push
sbb
xchg
and
sub
jnp
popa
fsubr
mov
in
adc
es
jmp
rol
mov
in
repnz
sub
pop
dec
add
psubusw
mov
cmp
jbe
mov
rol
dec
sahf
sub
push
int
out
imul
fucom
js
sbb
ret
pop
je
cld
movs
xlat
add
pushf
sbb
mov
dec
loope
rol
or
lods
add
fs
mov
(bad)
sbb
jecxz
lahf
in
sub
mov
sub
ret
push
movs
adc
das
fisub
mov
mov
add
adc
cwde
mov
adc
and
xchg
jne
fidivr
call
pop
outs
or
fsub
pop
repz
add
add
test
jne
stos
jo
push
xchg
push
scas
shl
stos
jo
rcr
push
push
xchg
in
add
int
loop
cli
add
std
loopne
(bad)
bound
pop
adc
pop
pop
clc
mov
xchg
repnz
push
sbb
xchg
cli
sbb
vpunpckhqdq
aas
jbe
fstp
ja
push
or
add
xor
adc
dec
jg
test
mov
imul
mov
(bad)
ja
mov
inc
test
repnz
loope
sbb
pop
stc
div
(bad)
sti
jbe
and
xor
out
ds
mov
dec
loopne
dec
jae
jno
pop
push
loop
outs
int3
icebp
inc
test
lods
jle
add
sub
shr
mov
add
add
and
mov
jg
lea
push
inc
jno
test
out
(bad)
jge
xchg
test
lea
call
inc
not
dec
test
call
adc
push
adc
popf
sbb
push
dec
mov
retf
fsub
aad
sbb
cmp
push
xor
test
add
imul
pop
sti
inc
outs
jmp
leave
mov
lods
stos
dec
push
push
into
out
call
scas
movs
xor
dec
jmp
cwde
pop
das
push
dec
int3
and
test
mov
inc
lods
in
dec
(bad)
pop
and
mov
mov
repnz
out
sub
fbstp
es
fwait
add
pop
mov
in
icebp
mov
(bad)
jl
aad
sub
sub
popa
mov
cmp
push
xor
mov
lea
cdq
stos
jo
(bad)
mov
mov
sbb
pop
pushf
xlat
inc
shr
sar
jb
ret
xor
scas
pusha
ret
js
arpl
xchg
cli
push
add
push
mov
test
je
int
or
or
repz
aam
xchg
pushf
add
lods
div
pop
sub
mov
mov
retf
stos
rcr
adc
shl
test
mov
gs
xchg
cli
mov
not
sbb
sub
cmps
add
pop
sbb
or
out
shr
cld
stc
push
push
js
mov
hlt
scas
pop
mov
mov
or
jle
nop
push
je
icebp
repnz
rcl
shl
push
adc
aas
mov
mov
push
arpl
sahf
jmp
or
xchg
and
cmc
retf
ror
fidiv
or
jb
pop
aam
ds
dec
dec
arpl
jmp
or
js
xor
pop
ror
push
(bad)
gs
cmp
jmp
xor
loop
jne
xor
aaa
push
and
xor
sar
sub
lods
or
gs
(bad)
les
mov
jge
mov
xchg
cmc
jo
sub
ins
inc
scas
push
and
push
imul
xchg
movs
xchg
cmp
loop
push
int
cmp
jnp
call
jecxz
addr16
std
and
dec
sub
bound
adc
mov
fwait
adc
mov
mov
sbb
push
jo
cdq
ror
adc
mov
adc
and
sti
add
clc
imul
inc
push
xchg
scas
shl
mov
add
add
adc
in
mov
js
push
push
dec
imul
push
jns
push
jge
xchg
mov
mov
or
cmp
lds
sbb
adc
(bad)
int
test
out
push
mov
(bad)
jg
push
add
mov
add
repnz
addr16
pusha
cmp
ins
sub
cli
mov
or
add
shl
adc
add
cmp
ins
or
in
fistp
xor
jno
or
dec
cmp
ins
movs
or
mov
mov
retf
add
stos
and
cmp
imul
add
sti
pusha
out
cld
mov
repnz
jp
add
xchg
outs
jmp
sti
lods
cdq
jg
ficomp
cli
jno
bound
ror
sub
mov
mov
pop
cmp
dec
and
(bad)
jno
outs
addr16
jge
bound
xchg
sub
inc
sbb
aaa
lahf
repnz
mov
shr
ret
and
xlat
dec
sbb
xor
add
dec
in
jo
ret
and
cmp
(bad)
loopne
mov
sahf
outs
in
fild
mov
in
fidivr
arpl
shl
jmp
push
push
ror
push
dec
cld
cmp
mov
pop
adc
cmc
je
adc
and
inc
int3
inc
out
dec
add
sbb
lds
cs
mov
mov
fwait
add
pop
out
aas
bound
icebp
adc
jne
or
mov
ret
dec
xchg
or
sbb
idiv
das
repz
cld
mov
jmp
cmp
lock
cld
dec
sub
(bad)
and
add
arpl
mov
rcr
adc
and
sub
int3
jo
jmp
inc
loop
aam
ds
jo
(bad)
and
mov
or
lahf
xchg
ret
or
xchg
xchg
fs
sub
in
sub
dec
xchg
daa
xor
pop
not
bound
ins
add
mov
fisttp
cmp
mov
repnz
stos
aad
jo
push
fcom
fscale
jge
cmp
sbb
xor
add
test
pop
retf
hlt
mov
daa
push
mov
add
or
xchg
mov
add
xor
xchg
ja
mov
fsubr
std
adc
pushf
test
shl
cmp
dec
push
(bad)
aam
sub
loope
sub
xchg
mov
test
mov
jne
sti
xor
js
mov
cmps
(bad)
cmp
(bad)
dec
sub
fiadd
push
and
sub
seta
arpl
xchg
pop
xor
inc
dec
and
ss
jle
pop
xchg
mov
sbb
mov
add
xchg
adc
aam
in
jg
adc
mov
imul
jle
inc
push
repnz
cld
jbe
sub
sbb
rcr
mov
adc
int3
or
mov
jl
push
out
fs
adc
rol
cs
cs
mov
(bad)
addr16
sub
dec
repz
(bad)
out
out
and
dec
pop
xchg
and
test
pop
jp
cli
loop
scas
xor
sub
and
jge
mov
lock
mov
xor
lods
(bad)
lods
bound
data16
push
out
test
retf
fisttp
pop
addr16
dec
pop
sub
mov
mov
add
jbe
jnp
or
fdiv
mov
call
cld
jns
retf
pushw
aad
das
loopne
mov
(bad)
push
(bad)
sti
js
cmp
jns
fnstsw
pushf
cmps
imul
sbb
(bad)
sbb
retf
cs
mov
push
jp
js
cld
sub
inc
int3
sub
xchg
add
cmp
dec
leave
int3
mov
push
mov
movs
jo
in
mov
pop
mov
xchg
and
xchg
or
and
xor
cmc
std
mov
cmp
aas
mov
int3
jg
xor
sub
mov
fidiv
sub
out
out
iret
call
popa
arpl
add
jp
cmps
xchg
enter
add
lock
mov
mov
mov
push
mov
aad
es
cwde
mov
lea
dec
adc
shr
sub
mov
dec
sub
push
js
pop
cmps
adc
add
lods
ret
aas
sbb
and
jg
out
popf
push
and
loop
mov
xchg
rcl
push
inc
push
lahf
mov
ficomp
wbinvd
rcr
sub
push
rcr
jne
mov
or
add
cwde
mov
out
jp
ins
out
xlat
ret
addr16
pop
xor
dec
xor
mov
call
scas
push
dec
pop
cmp
or
dec
jb
jge
aaa
sar
inc
repz
cwde
mov
mov
and
cmp
mov
and
push
movs
outs
push
mov
mov
and
fbstp
xchg
dec
in
sub
pop
xchg
dec
xlat
in
mov
cmp
daa
mov
push
std
mov
cmps
pop
mov
jl
and
dec
jb
cli
add
call
movs
cvtpi2ps
xchg
inc
arpl
pop
pop
cmp
cmp
inc
sar
push
mov
sbb
(bad)
pop
xor
mov
in
mov
ret
test
stc
fstp
push
mov
aaa
loop
imul
xchg
fadd
and
jae
movs
jnp
jmp
mov
pop
or
dec
push
pop
mov
add
stos
xor
test
shr
xor
mov
xchg
push
jae
inc
(bad)
jo
loop
fistp
addr16
ror
fisttp
ins
outs
and
xchg
jmp
jne
mov
mul
xchg
or
ret
adc
cli
fistp
add
add
mov
aad
inc
and
fstp
sbb
ret
ins
add
sbb
outs
xchg
mov
movs
aas
ficom
aad
pop
mov
stos
sbb
mov
cmp
call
lock
jae
adc
xor
jg
inc
hlt
repz
les
mov
pop
stc
aaa
sahf
adc
xchg
add
cmp
jg
or
push
outs
bnd
jge
hlt
aad
mov
out
adc
xchg
sahf
push
sbb
call
sbb
push
dec
cmps
sti
sub
inc
jns
cmps
out
dec
jns
sbb
mov
inc
mov
add
jo
mov
shr
fsub
int3
mov
or
jl
or
jle
sub
xchg
dec
pop
inc
push
cs
cld
cmp
inc
jle
rol
or
int3
cmps
jmp
(bad)
icebp
dec
mov
sar
repz
pop
xchg
sbb
pop
pop
push
stc
mov
stos
inc
and
push
mov
push
cmc
cmp
pop
mov
sar
std
mov
hlt
cmp
push
cmp
test
cdq
inc
sub
arpl
fstp
push
mov
sub
mov
sbb
mov
out
mov
sub
bound
pop
jmp
mov
(bad)
out
xchg
lds
jle
cs
pushf
push
inc
lds
(bad)
inc
or
add
pushf
mov
cmp
dec
lods
pop
add
aam
or
pop
push
int3
jne
sub
xor
retf
sbb
popf
inc
cmps
jl
push
stos
push
lods
rcr
cmp
mov
mov
imul
add
and
loopne
adc
pop
xor
cdq
imul
pusha
je
mov
jg
je
ds
sbb
sbb
mov
call
mov
adc
shl
pop
inc
gs
mov
test
outs
std
(bad)
fprem1
sub
xor
enter
loopne
and
xchg
or
(bad)
inc
adc
mov
ss
mov
pop
or
xchg
lea
fild
je
sbb
imul
mov
into
popf
movs
push
pusha
mov
aad
sbb
fistp
mov
fs
pop
test
jmp
gs
or
jb
je
hlt
add
push
movs
test
mov
sti
es
sbb
ins
mov
aam
movs
clc
cmc
stc
adc
mov
aaa
mov
fs
jp
jmp
sbb
push
inc
mov
mov
int
jbe
scas
call
sbb
push
push
push
mov
dec
movs
fdivp
pop
out
std
stos
mov
pop
push
dec
jne
test
or
cdq
rcl
inc
xchg
fimul
dec
mov
inc
adc
movs
fidivr
pop
(bad)
push
pop
xchg
popa
push
jns
loopne
outs
rcl
pop
xchg
jne
add
jecxz
push
ror
jl
lock
repz
lea
xchg
sbb
pushf
addr16
mov
add
shl
cs
cmp
in
test
and
xchg
mov
je
adc
rol
fwait
into
adc
mov
xor
inc
add
and
pop
inc
mov
jecxz
push
in
lock
sbb
and
arpl
mov
sub
das
pop
jo
lods
out
push
test
imul
ret
push
aas
push
inc
sub
mov
jne
(bad)
and
xchg
xchg
fs
jge
fcom
xor
test
jb
cmps
xchg
test
pop
shr
hlt
xor
pop
sti
push
push
mov
inc
jg
ins
pop
pushf
mov
xor
xor
mov
test
pop
mov
out
add
sbb
cmps
ds
mov
mov
mov
jmp
scas
mov
mov
pop
lahf
popa
retf
add
cs
dec
sub
mov
pop
das
cmp
jmp
nop
cmp
cmp
dec
movs
sbb
inc
aad
dec
mov
nop
(bad)
cdq
adc
jns
mov
scas
dec
push
div
sbb
clc
ja
xchg
inc
sub
mov
inc
sti
scas
sbb
call
mov
xor
sbb
mov
and
mov
or
inc
sbb
and
jo
mov
sub
mov
add
sbb
adc
call
movs
sbb
push
add
mov
push
imul
sub
push
mov
push
and
fld
push
and
dec
xchg
cwde
ss
retf
dec
rol
adc
or
pop
mov
sbb
sar
inc
test
pop
pop
mov
pop
or
ins
mov
mov
scas
sbb
jb
jae
int
jo
xor
ds
inc
mov
ficom
ds
repz
xchg
xchg
sbb
and
in
jecxz
imul
mov
push
das
(bad)
rcl
aas
fild
push
xchg
push
(bad)
addr16
xchg
jl
jle
cmps
(bad)
neg
retf
(bad)
into
idiv
mov
push
mov
out
cmp
sub
and
and
inc
cmp
sbb
dec
sub
mov
sbb
mov
retf
push
hlt
xor
jg
push
adc
repz
sub
xchg
psllq
dec
jle
fiadd
xchg
pop
jmp
jb
push
aaa
push
out
fisubr
add
int
pushf
outs
dec
dec
vshufps
pusha
(bad)
mov
test
mov
mov
aas
xor
sub
mov
inc
outs
hlt
lods
xor
clc
push
mov
movs
xor
xlat
fwait
shr
xchg
push
fwait
xchg
jmp
enter
shr
lahf
push
mov
lea
mov
inc
sbb
fstp
test
ja
pop
sub
xchg
icebp
pop
rcl
inc
mov
out
mov
or
add
push
popf
cmp
cmps
and
icebp
or
lds
push
adc
lds
fidiv
sbb
and
stos
rcl
jae
inc
cmp
sahf
daa
fdiv
pop
jg
popa
loope
lods
lods
ret
cmps
cmp
call
cwde
cwde
(bad)
xchg
pop
add
xchg
mov
cmp
xchg
shl
fld
xchg
push
sti
jge
jl
fwait
into
mov
loope
shl
add
mov
bound
js
mov
gs
jnp
xor
scas
popf
movs
mov
sub
jns
int3
cmp
xlat
daa
(bad)
inc
add
jle
mov
cmp
inc
cld
(bad)
int3
pop
gs
or
mov
pop
mov
loop
sar
cmp
ret
ret
mov
jg
in
retf
cmp
cmp
pop
adc
cmp
jg
ror
dec
dec
pop
cwde
(bad)
mov
(bad)
cli
ja
fldcw
mov
mov
xor
dec
repnz
mov
mov
mov
daa
jae
adc
dec
mov
cdq
cmp
xchg
ins
mov
in
outs
mov
cmp
ret
movs
(bad)
sub
hlt
mov
outs
mov
retf
in
mov
cmp
cmp
mov
(bad)
cmps
cmps
and
daa
ins
std
lahf
or
bound
nop
push
std
mov
(bad)
dec
daa
pop
inc
repnz
stos
scas
(bad)
jmp
popa
fldenv
in
mov
mov
ins
inc
add
add
add
add
iret
adc
in
push
fwait
sbb
inc
push
push
movs
mov
rsm
loope
stos
xor
mov
mov
(bad)
and
repz
dec
data16
xchg
jle
fs
sbb
mov
packuswb
jmp
out
das
add
into
sbb
nop
dec
mov
jmp
sbb
pop
push
cmc
lea
jl
push
sub
es
movs
loope
mov
add
enter
push
enter
out
and
xchg
mov
fstp
dec
and
(bad)
aas
pop
test
add
les
inc
inc
rcr
call
cmp
aam
cld
imul
stc
mov
add
loopne
aaa
jge
sbb
nop
(bad)
mov
pop
jp
add
pusha
sbb
int
inc
ret
pushf
push
test
and
mov
fwait
ret
je
jne
clc
mov
mov
inc
xlat
mov
pop
add
fwait
jne
out
jecxz
push
inc
mov
or
dec
pusha
shr
jg
inc
iret
(bad)
cmp
mov
jbe
scas
sub
push
mov
cmp
jge
mov
mov
add
jne
inc
xor
gs
add
push
cmps
fs
ror
sbb
cmp
xchg
inc
out
int3
or
mov
adc
shl
jae
into
loopne
mov
push
lahf
inc
shr
or
pop
clc
and
mov
xor
retf
aad
add
je
dec
clc
int
mov
jno
test
outs
add
dec
popa
push
push
jp
sbb
adc
mov
sbb
das
push
outs
pop
sbb
lahf
(bad)
mov
ficomp
(bad)
lock
rcl
ret
lods
repnz
or
sbb
shl
dec
adc
imul
loope
movs
adc
js
ds
ss
pop
xchg
lods
bound
jns
in
bound
fucomp
shl
push
sub
xor
movs
das
jecxz
test
push
cli
sub
int3
cmp
or
jae
shl
mov
pop
inc
cli
loope
xchg
rol
sbb
xchg
inc
in
mov
mov
scas
cmp
and
xor
stos
push
mov
mov
hlt
lea
aam
outs
pop
or
mov
(bad)
(bad)
or
test
sbb
and
std
sbb
lea
mov
xor
xchg
or
test
in
and
(bad)
in
mov
mov
test
ret
mov
mov
out
pop
aas
dec
bound
dec
loopne
sysret
xor
lahf
mov
dec
xchg
lds
pop
mov
(bad)
mov
scas
in
outs
mov
dec
jns
and
movs
loope
push
adc
fidiv
push
aas
add
or
jecxz
fidiv
inc
and
int
sbb
cmps
and
and
sbb
push
pop
loop
or
mov
or
in
retf
aad
mov
addr16
movs
call
pop
sub
adc
jle
div
mov
pop
movs
mov
xor
xor
adc
sub
shl
inc
mov
cld
jmp
and
in
sub
inc
cmp
and
(bad)
cwde
add
iret
in
int3
gs
lods
fisttp
daa
js
jns
and
add
adc
xchg
lods
js
sub
mov
inc
xchg
sbb
pop
je
inc
add
ret
shr
mov
out
adc
pop
jecxz
dec
aas
gs
outs
fwait
es
mov
cdq
mov
movs
(bad)
mov
clc
out
rcl
fwait
ins
imul
in
call
sti
jns
adc
add
jbe
sbb
std
mov
ret
test
or
fwait
dec
mov
out
or
jmp
mov
aad
mov
imul
std
push
test
lea
(bad)
xor
push
sahf
push
mov
dec
add
js
(bad)
push
aaa
ins
push
xlat
xchg
hlt
and
lds
mov
sbb
pop
fmul
hlt
pop
or
mov
stc
rcl
xsha256
cmps
push
adc
and
fwait
mov
cmp
nop
loope
leave
fdivrp
xor
cdq
in
add
mov
jmp
mov
fild
scas
je
cmp
sti
cli
inc
jnp
loopne
test
hlt
inc
mov
sub
mov
dec
out
stc
sbb
lods
lock
pop
cli
gs
iret
stos
or
shl
cmps
and
push
out
adc
ror
outs
(bad)
mov
int
scas
xchg
fs
into
cdq
mov
imul
push
sbb
cmp
sbb
xchg
sbb
mov
add
nop
fcmove
inc
mov
dec
aaa
pop
or
jae
pop
cmovge
mov
dec
(bad)
xchg
sbb
in
adc
clc
ss
aaa
js
in
cmp
ds
adc
adc
xor
pop
punpcklwd
fst
sti
cmp
xchg
les
dec
dec
sub
fcomp
jbe
xor
dec
jo
mov
mov
mov
idiv
jb
aad
push
in
out
test
lods
adc
dec
jbe
(bad)
jl
and
mov
push
gs
ins
dec
test
push
scas
xchg
or
call
jno
dec
and
sub
mov
xchg
dec
pusha
je
sbb
sbb
sbb
dec
and
xchg
div
cwde
call
sbb
in
xor
pushf
cmp
xchg
outs
and
and
loope
xchg
retf
(bad)
cmp
cmp
dec
cmps
sar
popf
adc
ficom
mov
ret
fld
mov
sub
lahf
jecxz
sti
mov
xchg
in
adc
xchg
dec
and
add
pop
or
retf
pop
pop
jmp
leave
inc
xchg
sbb
and
lock
pop
sbb
inc
inc
cli
movs
(bad)
cmps
div
imul
jmp
into
gs
xchg
sub
mov
add
invd
arpl
push
add
fdivr
pop
mov
arpl
cmp
aad
gs
mov
jl
test
push
retf
dec
inc
push
inc
lods
sahf
dec
fiadd
pop
ja
and
jp
jb
push
mov
in
cwde
(bad)
or
inc
shr
sub
xchg
sub
jp
mov
mov
xchg
mov
enter
pusha
jbe
outs
mov
out
lds
cmp
ret
push
pop
sbb
movs
loopne
mov
int3
mov
ror
inc
lahf
xchg
push
call
mov
leave
rcr
push
(bad)
int
mov
sbb
loope
ds
js
or
mov
popa
jmp
leave
dec
mov
repz
mov
loope
xor
jnp
mov
add
inc
push
cmc
int3
or
enter
fistp
cmc
ret
mov
aam
or
lea
ret
push
retf
in
icebp
out
xchg
inc
mov
pop
push
xchg
inc
and
jbe
cmp
xchg
sub
add
push
mov
fcomp
cld
sbb
in
(bad)
or
inc
je
out
mov
push
inc
(bad)
scas
xchg
push
aam
fidivr
push
jno
mov
test
mov
add
push
loopne
stos
ror
out
push
pop
aad
fistp
ds
inc
xchg
fs
mov
xor
add
and
xchg
jb
sbb
in
fiadd
sti
call
xor
xchg
shl
retf
cli
inc
xor
xchg
mov
(bad)
jne
dec
fwait
pusha
cmps
mov
aas
call
icebp
xchg
inc
inc
lock
xor
dec
test
test
(bad)
outs
das
or
lods
jge
mov
loopne
rcr
sub
jbe
or
mov
push
inc
repnz
sub
inc
xchg
mov
mov
fcom
in
add
test
pusha
xor
inc
pop
sub
daa
retf
ins
loop
push
dec
xchg
dec
mov
mov
lahf
ror
rol
aas
out
jnp
add
cld
xor
add
adc
fdivr
(bad)
pop
jg
(bad)
mov
mov
movs
mov
cdq
test
sub
mov
rol
test
dec
xor
sti
sahf
sbb
adc
and
out
std
hlt
xchg
xor
and
sub
fwait
pop
cmp
sbb
adc
int
in
add
lahf
(bad)
push
aaa
and
int3
or
xchg
outs
jmp
mov
pushf
les
fcom
push
scas
mov
cmp
or
ret
or
ss
dec
sbb
or
sbb
clc
ficom
jl
xor
inc
cmps
aad
inc
sar
aas
fst
and
idiv
fldcw
sbb
rsm
push
enter
adc
cmp
mov
imul
push
pusha
call
stc
mov
ficomp
out
std
add
mov
popa
add
sub
cmp
jnp
pop
jae
jmp
add
jbe
or
(bad)
stc
cld
in
dec
test
dec
idiv
mov
and
lds
into
xchg
mov
sub
or
ja
test
sub
stos
push
stc
sub
into
mov
pop
ret
adc
inc
arpl
cmp
mov
out
stos
in
mov
ins
fld
mov
fiadd
into
add
jg
jle
loop
push
shl
call
adc
lahf
in
fcomp
shl
mov
pop
ret
push
enter
in
stmxcsr
mov
daa
gs
mov
inc
sar
idiv
push
push
pop
cmc
loop
jg
fnstsw
jecxz
gs
fs
xchg
jmp
xor
mov
into
lock
clc
mov
mov
out
rol
ficom
(bad)
outs
pop
das
aad
add
test
inc
hlt
cmp
les
fwait
or
lods
test
bound
pop
mov
ja
cmp
xchg
loopne
jno
pop
push
push
test
mul
dec
xlat
or
sahf
inc
mov
scas
cmc
mov
add
or
movs
nop
dec
idiv
jo
fs
jmp
ret
rcl
pusha
add
out
jae
pop
mov
cmp
adc
jae
retf
(bad)
and
inc
cli
rcl
jbe
sbb
inc
push
adc
iret
ds
dec
cwde
xchg
imul
jb
or
jge
(bad)
ss
cmp
or
jp
out
movs
xor
retf
shl
shl
in
or
cs
cmp
dec
mov
pop
or
cld
nop/reserved
stos
cmp
mov
mov
es
and
int
cli
mov
(bad)
cmp
pop
std
xor
pop
sbb
or
pop
sbb
aaa
fld
scas
adc
mov
mov
add
fldenv
jmp
in
imul
pop
dec
bound
nop
out
out
add
mov
iret
rcr
xlat
inc
inc
iret
mov
cmp
pop
mov
sbb
push
sbb
inc
cmp
add
dec
or
cld
(bad)
jl
jb
popf
push
sar
dec
lock
or
pop
hlt
mov
xor
(bad)
ins
fldcw
mov
test
out
aad
jnp
movs
aas
clc
mov
inc
sbb
inc
and
daa
cmps
mov
aam
dec
mov
push
test
push
xlat
addr16
or
arpl
xor
jle
sub
or
les
out
pop
jecxz
or
arpl
cmp
mov
cdq
push
int
dec
push
or
push
leave
pusha
test
je
xchg
mov
loopne
adc
mov
dec
jge
dec
std
pushf
leave
call
aaa
shl
ins
cmps
push
dec
mov
(bad)
mov
cmc
mov
mov
pop
out
inc
lea
pop
add
push
dec
stc
inc
lds
adc
mov
icebp
or
out
push
cmp
push
xchg
dec
jno
push
std
and
sbb
mov
sbb
imul
inc
sub
stos
dec
jl
push
test
sub
jae
ins
(bad)
int
retf
out
pop
fld
loop
xor
clc
stos
jl
mov
fstp
pusha
mov
test
sar
test
jo
adc
imul
mov
jae
int3
popa
into
(bad)
xchg
arpl
xor
shr
not
sbb
ror
add
xor
jecxz
mov
data16
aam
mov
retf
(bad)
(bad)
cmps
xchg
push
les
xor
jecxz
cli
inc
inc
inc
cmp
jp
repnz
arpl
mov
movs
push
pop
stos
xchg
hlt
pop
rol
outs
mov
movs
push
std
sbb
pop
xor
mov
mov
pop
rcl
nop
xchg
jle
push
out
(bad)
sub
cmp
scas
loopne
jmp
jp
or
stos
cli
int
daa
outs
sbb
ja
pop
sbb
mov
and
idiv
popa
sti
xor
movs
jns
sbb
lods
mov
dec
(bad)
mov
icebp
mov
xor
xchg
cdq
das
retf
jnp
xchg
jle
test
bound
ss
sti
lds
jno
ss
js
inc
add
sub
retf
shl
clc
shl
pop
imul
(bad)
jbe
and
mov
adc
dec
mov
(bad)
push
or
pusha
jg
xchg
aaa
inc
fldenv
mov
sbb
sbb
pop
enter
dec
ds
add
(bad)
jns
adc
sar
(bad)
hlt
adc
sub
push
xchg
shl
out
std
adc
jle
dec
loop
sbb
xchg
ins
add
or
cs
mov
addr16
outs
js
and
and
jge
adc
fisubr
movs
jl
push
mov
out
push
inc
(bad)
mov
cmp
and
scas
mov
fidivr
addr16
retf
inc
fild
add
(bad)
lods
adc
inc
in
jb
rcl
aas
clc
add
ins
iret
xor
and
and
sub
jne
cli
fild
pop
jne
xchg
xchg
and
jae
std
and
mov
mov
mov
push
adc
jae
mov
(bad)
jmp
loopne
inc
test
inc
push
push
in
cmp
sub
jmp
pop
mov
lds
hlt
lds
push
lods
pop
(bad)
call
push
cmps
fisubr
dec
mov
xchg
ret
mov
in
pop
addr16
mov
push
fidiv
sbb
pop
ret
ins
neg
dec
cmp
pop
shr
fwait
push
push
in
pop
mov
mov
fst
dec
sub
sub
mov
push
mov
pop
inc
xchg
jmp
mov
lahf
lahf
stos
pusha
sbb
out
sub
js
push
dec
je
jmp
xchg
fistp
adc
mul
imul
sbb
cmp
mov
sbb
cs
inc
test
and
dec
jle
xor
mov
int
pop
lock
jmp
lods
outs
xlat
sti
mov
dec
cmp
dec
js
rol
add
test
dec
mov
inc
cmp
jmp
jns
inc
frstor
pusha
stc
icebp
movs
or
hlt
cwde
push
int
pop
lea
mov
dec
imul
fs
fidivr
mov
in
xchg
jmp
dec
(bad)
sbb
outs
sub
(bad)
pushf
xlat
loop
sub
push
pop
add
scas
lods
push
add
jae
push
inc
loope
pop
xchg
(bad)
fisttp
cs
movs
test
fwait
pop
pushf
sbb
pop
aaa
dec
jns
xchg
pop
push
push
movs
pop
lds
js
jmp
mov
sub
mov
popa
pop
(bad)
vmovd
xchg
call
dec
mov
inc
ins
adc
cmc
and
xor
daa
ins
xchg
fmul
in
cmc
pop
pop
sahf
push
adc
iret
inc
xchg
fs
or
rcr
sbb
rol
jmp
pop
loopne
sub
mov
sbb
mov
sub
outs
stc
mov
adc
enter
stos
stos
stos
rcr
jmp
dec
gs
mov
pop
sbb
test
pop
(bad)
cmps
and
and
cmps
(bad)
push
shr
das
pop
push
jo
mov
push
and
out
clc
inc
xchg
test
sbb
sub
or
ins
cmp
(bad)
jle
cmp
push
mov
mov
and
jae
loop
xchg
test
mov
dec
fnstsw
mov
sbb
mov
adc
adc
sbb
loopne
pop
mov
cmp
mov
(bad)
add
int
lds
lock
and
ds
xor
mov
cmp
push
cmp
outs
dec
inc
mov
inc
outs
mov
and
call
adc
dec
test
jb
dec
dec
dec
cmp
pop
cmps
push
pop
xchg
ror
sub
cld
pop
fstp
rcr
inc
jmp
das
pop
in
scas
rcr
inc
loopne
lahf
(bad)
push
fld
retf
popa
rcl
rol
pop
adc
or
xchg
sahf
and
inc
mov
lds
je
xchg
push
pop
fwait
test
pop
and
push
sti
fadd
and
sbb
dec
lock
in
int3
shl
push
ror
add
push
aam
push
(bad)
dec
dec
ja
sub
push
xor
xor
and
pop
pop
in
sub
in
sub
ret
jmp
dec
(bad)
aam
sti
mov
fwait
pop
xor
bound
dec
adc
call
cdq
loop
adc
inc
pop
mov
ja
jbe
cmp
xchg
(bad)
jo
fcomp
mov
fmul
mov
sub
push
popf
addr16
inc
pop
or
pop
add
pop
xor
dec
push
nop
ficom
fwait
pop
push
and
mov
out
dec
and
les
das
cmp
movs
or
fwait
push
stos
bound
lods
xor
ret
test
dec
loopne
in
pop
(bad)
or
mov
sub
xchg
int3
repnz
ret
push
in
pop
leave
add
jne
imul
mov
ins
aad
push
mov
xchg
xlat
push
fwait
add
xchg
js
cmp
sub
ror
enter
ficomp
(bad)
data16
and
inc
jne
ret
shl
(bad)
push
pop
mov
les
jmp
jns
clc
sub
sbb
(bad)
stos
mov
(bad)
xor
jl
les
and
ffreep
dec
xchg
and
and
cmc
nop
test
aaa
ins
fmul
jecxz
push
add
push
js
cmp
or
push
and
mov
sub
push
test
std
pop
ror
int3
xor
outs
jo
xchg
mov
loop
pop
fcom
pop
xlat
push
push
jne
outs
sar
mov
push
mov
push
jno
into
fwait
leave
movs
cmp
inc
fptan
mov
and
jl
pop
jne
xchg
add
pop
fstp
push
lods
repnz
aad
lahf
cmp
mov
jmp
jg
in
and
jge
push
scas
xchg
or
imul
jmp
xor
mov
out
sub
gs
aad
scas
pop
test
xchg
and
jne
and
mov
mov
lods
sub
test
stos
iret
jge
stos
clc
jns
test
add
std
test
dec
lahf
jmp
jg
cmc
call
adc
leave
xchg
cld
(bad)
cmc
mov
fisttp
push
sub
(bad)
das
add
jae
iret
popf
pop
xchg
push
in
jg
shl
mov
lods
mov
mov
dec
cli
push
and
inc
stc
(bad)
xor
mov
xchg
push
pop
mov
retf
cld
jle
outs
add
popa
or
pop
in
push
push
es
imul
fwait
bound
dec
cwde
mov
add
jl
push
jl
mov
or
std
adc
popa
sbb
clc
pop
pop
psllq
(bad)
shl
rol
mov
mov
ss
stc
and
ds
jecxz
int3
fild
cmc
and
(bad)
adc
mov
neg
mov
ins
mov
push
aad
outs
call
movs
push
mov
out
add
jns
or
cmp
and
push
loopne
push
sbb
mov
out
xor
nop
pushf
inc
cwde
adc
mov
jnp
jb
je
into
mov
nop
push
mov
inc
fcomip
mov
fistp
fidivr
pushf
test
test
push
jbe
ror
aaa
ja
xor
(bad)
repz
int
mov
dec
imul
mov
xchg
sahf
mov
aas
in
aad
mov
retf
daa
mov
repz
dec
pop
retf
sbb
sub
and
push
std
jne
popa
fwait
lea
sbb
packssdw
push
mov
test
xchg
xchg
or
mov
inc
fisub
dec
add
or
loop
lahf
add
mov
jbe
jl
(bad)
rcr
mov
inc
and
dec
stc
enter
out
add
iret
data16
and
cmp
jmp
ror
adc
(bad)
rcr
xchg
mov
xchg
pop
sbb
adc
test
sbb
jge
nop
cmp
lods
sub
or
enter
std
test
cmp
add
adc
in
rol
add
sub
and
and
(bad)
fidiv
inc
test
stos
mov
sar
mov
dec
mov
sub
loop
sbb
nop
xchg
add
(bad)
sub
fwait
call
ficomp
addr16
fdivr
pop
fisttp
ret
int3
mov
fnstenv
icebp
dec
jne
pop
sbb
aas
inc
inc
aaa
ficom
add
mov
add
jg
inc
imul
jle
repz
cs
sahf
pop
xor
cmps
jg
push
mov
shl
inc
gs
outs
call
cwde
jl
scas
data16
xor
or
test
add
xor
hlt
imul
sbb
sbb
add
fild
rol
je
mov
mov
add
jg
xchg
xor
mov
stos
cmp
jne
mov
jg
or
cmp
in
xlat
(bad)
mov
mov
in
mov
loopne
jle
leave
js
inc
or
mov
and
inc
lock
or
cmp
imul
jmp
(bad)
xlat
iret
and
xchg
jmp
sbb
jp
movs
xlat
inc
scas
test
pop
lea
popa
xchg
out
mov
pop
and
xchg
cmps
pop
inc
dec
nop
add
cmp
(bad)
rcl
cmps
outs
add
in
out
and
(bad)
or
push
jae
dec
push
daa
ins
add
icebp
or
ss
push
jo
inc
or
ret
push
pop
inc
cmp
(bad)
les
sub
shr
sub
pop
ja
add
cmp
cmps
loopne
adc
jno
pop
fsubr
div
aad
cmp
loope
fnstenv
cmp
add
ins
sbb
dec
inc
xchg
mov
fmul
push
popf
shr
div
inc
jb
jg
loope
mov
push
clc
cmp
and
in
mov
pop
pop
or
stos
add
push
std
hlt
cs
cmp
xor
imul
fcomp
mov
xor
jmp
xchg
jl
xchg
sub
push
mov
cmp
mov
aad
add
xlat
inc
dec
jmp
add
(bad)
mov
js
pop
test
sbb
lea
call
jae
jge
sbb
dec
aas
mov
enter
icebp
pop
and
in
mov
mov
fdivr
adc
mov
and
inc
cmps
xor
push
das
cmp
mov
cmps
mov
mov
test
cmp
push
jl
xor
xchg
ins
out
(bad)
jle
cmp
popf
gs
(bad)
addr16
mov
jge
shl
pop
ds
ficom
aas
in
inc
retf
repnz
enter
sti
jmp
adc
(bad)
jg
lods
xor
cmp
in
mov
shl
loope
mov
dec
xor
mov
pop
icebp
jno
jnp
js
mov
(bad)
mov
fst
or
push
push
and
mov
cmp
lods
test
xchg
test
jle
jl
ins
push
loop
pushw
(bad)
mov
jmp
jnp
push
sti
outs
adc
nop
sub
mov
dec
inc
or
jne
das
cmps
mov
mov
push
mov
jle
and
xchg
pop
inc
test
ja
or
mov
mov
pop
inc
ret
dec
adc
aas
cmp
cmp
clc
or
push
add
adc
mov
pop
ins
and
cmps
fisubr
or
mov
mov
neg
xor
sbb
dec
loope
push
mov
jae
jne
sbb
cs
mov
sub
stc
jmp
sbb
iret
dec
pushf
mov
js
push
xor
push
mov
push
fld
mov
ins
or
xor
in
cli
in
das
sahf
mov
in
jnp
adc
frstor
mov
fidiv
mov
clc
and
(bad)
sar
cwde
jns
and
adc
mov
sbb
dec
push
aam
dec
daa
jo
pop
in
icebp
movs
cwde
jp
xor
mov
retf
data16
xchg
sub
adc
push
mov
cmp
pop
adc
sbb
cmc
repnz
nop
cmp
or
fimul
push
jle
retf
into
lahf
xchg
xchg
or
aas
push
fidiv
inc
(bad)
pop
mov
popw
stos
sbb
xchg
and
js
pop
inc
jne
xor
rol
add
add
jae
and
push
cmc
retf
test
movs
cmp
mov
aam
sub
std
mov
outs
xor
daa
inc
(bad)
out
jns
(bad)
cmp
or
sahf
inc
retf
or
xor
pop
and
xor
jp
ja
adc
je
xor
push
add
out
cmp
lds
loope
jmp
iret
mov
xchg
jmp
mov
xor
out
int
pop
jl
mov
ret
daa
xor
es
(bad)
xchg
(bad)
xchg
es
xor
jbe
mov
inc
xchg
mov
test
add
jle
inc
jmp
adc
out
jmp
(bad)
jp
mov
fld
mov
jp
sbb
mov
mov
xchg
call
sbb
into
cmp
pop
sahf
(bad)
jmp
xchg
cmp
mov
pop
(bad)
in
test
fistp
add
mov
fs
pop
xchg
jg
loop
mov
std
cwde
push
sbb
lahf
adc
cmp
imul
add
ss
cmp
pop
cmps
mov
mov
push
inc
(bad)
xchg
fdiv
xchg
mov
inc
shr
leave
aam
mov
xchg
sub
stc
push
call
fadd
cmc
loope
pop
pushf
inc
les
mov
add
stc
adc
test
fwait
retf
jae
mov
in
or
mov
dec
jge
xor
xchg
repnz
rcl
or
idiv
xchg
adc
and
cmp
loopne
inc
mov
ret
push
inc
push
mov
dec
xchg
iret
inc
push
push
test
mov
sahf
addr16
adc
cmc
add
xor
and
push
push
lea
out
jmp
push
shr
mov
les
mov
aaa
mov
or
(bad)
std
les
push
xchg
outs
ret
int
and
fwait
ret
cmp
mov
(bad)
adc
inc
in
push
shl
push
ror
mov
nop
adc
and
outs
xor
les
jle
adc
or
into
fwait
pop
shr
call
push
push
outs
mov
in
mov
adc
inc
push
or
aad
jbe
mov
jae
repnz
rcl
loop
sub
shr
aas
xor
mov
sub
pop
and
cld
cmp
jae
repz
dec
dec
mov
xor
push
inc
adc
mov
mov
retf
or
in
std
inc
ins
bound
sbb
or
mov
loop
test
test
inc
retf
mov
ret
lock
lods
jbe
fimul
repz
jecxz
dec
int
jle
adc
push
(bad)
sti
cmp
int
call
or
lods
stos
xchg
push
push
jae
sub
retf
fild
xchg
hlt
icebp
jg
or
paddsw
popf
call
sub
addr16
test
sbb
movs
inc
iret
fild
cwde
addr16
push
aam
xchg
leave
(bad)
dec
xor
xor
div
sub
rol
in
push
sbb
pop
pop
cwde
jl
ins
fiadd
jbe
movs
loope
neg
add
loope
clc
fdivr
mov
call
adc
pop
lods
push
dec
popf
imul
shl
out
mov
clc
mov
(bad)
add
(bad)
(bad)
push
fsubr
jb
sub
cmps
int
popa
test
jl
shr
call
jmp
sbb
outs
imul
xor
sub
ret
mov
popa
xchg
stos
mov
xchg
clc
scas
lahf
mov
add
mov
pop
cmp
arpl
adc
mov
mov
aam
inc
jecxz
inc
imul
mov
mov
add
ja
pop
xor
and
ds
pop
adc
inc
push
mov
mov
jbe
scas
movs
popf
imul
sub
mov
outs
popa
mov
sbb
sub
xchg
nop
mov
cmc
adc
push
mov
mov
ins
inc
inc
ins
xchg
(bad)
(bad)
and
setno
js
add
scas
imul
enter
mov
pop
cli
jg
rcl
(bad)
in
jne
jmp
jae
(bad)
(bad)
popf
inc
xor
pop
pop
cmp
pop
or
loop
sub
push
int
ins
sbb
xor
sub
mov
pop
or
test
push
and
rcl
push
sbb
xor
mov
int3
push
iret
mov
scas
sbb
mov
jecxz
mov
push
popa
pop
test
cmp
nop
hlt
mov
and
mov
out
add
fdiv
jns
and
fnsave
shl
add
stc
daa
icebp
and
xor
mov
mov
xor
mov
xor
std
(bad)
jmp
push
pop
push
and
hlt
mov
and
imul
xchg
inc
jns
pop
scas
pop
icebp
dec
out
xchg
int
out
ins
mov
retf
jnp
pop
and
in
clc
add
pop
jb
or
cmps
mov
dec
mov
sbb
jb
push
xchg
or
jbe
call
es
push
jmp
dec
rcl
movs
out
mov
lock
push
mov
lahf
ins
sub
movs
cmc
jp
out
in
outs
test
dec
fs
in
data16
loop
cld
loope
add
int3
mov
jp
jae
lods
add
add
nop
rol
idiv
push
sub
data16
(bad)
push
adc
add
pop
cmp
jmp
sbb
in
or
dec
dec
pop
jnp
xchg
lds
push
jecxz
fs
mov
xor
aas
sar
cdq
movs
and
ficomp
push
sbb
push
lods
sahf
ss
outs
mov
sbb
jge
push
pop
(bad)
fucomip
or
add
mov
lahf
xor
push
add
mov
inc
mov
mov
inc
addr16
xchg
aaa
add
retf
fwait
mov
clc
sub
jo
xchg
mov
out
cmp
sbb
jge
sbb
jo
std
shl
aam
repnz
cdq
adc
mov
cmp
add
dec
push
int
test
sub
enter
lea
and
or
push
fdivr
test
fwait
push
repz
jbe
enter
in
sub
bound
push
or
jg
popa
push
sub
cs
idiv
cmp
movs
cs
dec
ss
sbb
mov
nop
bound
jecxz
test
sub
ins
test
je
pop
stos
or
mov
lods
imul
adc
add
or
adc
xchg
jl
add
sbb
(bad)
mov
cmp
leave
mov
and
fldenv
rcl
(bad)
pop
jne
mov
push
fldenv
arpl
inc
cmp
mov
daa
pushf
repz
mov
outs
cmp
sub
xor
(bad)
push
movs
sbb
jl
push
add
aas
jg
cwde
iret
inc
in
mov
xchg
fs
mov
scas
jp
int
mov
cmp
ret
popf
stos
or
sahf
loop
add
or
call
and
callw
adc
or
cmp
outs
cmc
enter
inc
mov
bound
dec
xor
es
pop
or
icebp
add
ret
addr16
mov
dec
(bad)
mov
mov
je
pop
jecxz
cdq
pop
xchg
xchg
movs
adc
loope
sbb
xchg
jl
xchg
aaa
lock
jae
jae
inc
stos
add
xor
out
rcl
hlt
aas
xor
loope
(bad)
jb
push
cmp
or
or
fisubr
add
inc
pop
out
jp
adc
jns
dec
inc
retf
in
add
sub
dec
inc
in
xor
ja
cs
arpl
dec
cwde
lock
test
rcl
mov
inc
cli
mov
and
xor
pop
push
cwde
mov
and
imul
cmp
call
cmp
popf
je
and
(bad)
pop
pop
rcl
retf
mov
xor
and
neg
sbb
test
movs
jb
stos
jne
xlat
pop
loop
mov
inc
push
ret
push
in
mov
fcom
clc
inc
ret
sbb
scas
in
sbb
fstp
xchg
mov
ins
cmps
jmp
inc
nop
jns
and
icebp
iret
scas
push
fdivp
(bad)
fdivr
loopne
popf
mov
mov
out
mov
enter
ins
imul
packsswb
xor
lahf
push
push
and
int3
movs
jmp
add
(bad)
movs
sub
sbb
out
adc
shl
jne
sbb
stos
xor
ret
mov
ins
mov
int3
popa
push
mov
ins
enter
cmp
dec
inc
fld
(bad)
cmp
rol
and
push
mov
fmul
mov
mov
aaa
popf
push
sub
cmc
inc
cmp
inc
jl
mov
mov
iret
test
mov
frstor
(bad)
int
jne
inc
(bad)
ja
hlt
mov
test
add
cmp
mov
mov
xor
add
mov
pop
into
xchg
test
repnz
jnp
xchg
mov
xchg
inc
out
add
cmp
sub
fcomp
arpl
aaa
neg
and
inc
fstp
mov
adc
sbb
jle
retf
stos
push
cdq
push
in
(bad)
(bad)
cmc
fld
push
shl
xchg
mov
mov
neg
cmps
push
ja
rol
xchg
mov
adc
cs
jl
dec
(bad)
mov
pop
sti
jbe
jg
imul
pop
mov
pop
add
shl
ss
push
cmp
aas
fild
push
and
add
inc
loop
xor
dec
sbb
sbb
sub
nop
int
pop
imul
xor
shl
adc
mov
jns
xchg
ret
xchg
fcom
cmp
jne
test
xchg
inc
xchg
mov
dec
xor
ja
call
xchg
js
mov
pop
inc
fld
stos
adc
cmc
or
or
lds
push
icebp
retf
lods
mov
xlat
dec
ret
popf
sub
xor
sbb
jnp
mov
mov
shr
mov
test
stos
imul
popa
jl
lock
jno
lock
outs
sbb
mov
aaa
sub
in
lahf
dec
push
push
jg
and
popf
xchg
ins
add
outs
cmovno
push
(bad)
addr16
(bad)
shl
int
mov
movs
(bad)
leave
inc
test
mov
cmp
call
ins
push
cmp
dec
repz
mov
mov
mov
(bad)
push
jecxz
addr16
xchg
enter
lea
sub
gs
sbb
mov
les
(bad)
(bad)
stc
aas
and
add
lds
adc
push
jmp
mov
jge
sub
retf
mov
sbb
add
sub
xor
(bad)
or
sbb
outs
ins
or
daa
and
mov
fidivr
dec
mov
shl
lds
sbb
repnz
fstp
lods
inc
retf
repnz
mov
fdiv
push
repz
inc
fst
xchg
sbb
cwde
leave
dec
cmp
mov
(bad)
add
adc
or
test
inc
lods
mov
aas
aam
push
dec
dec
push
jnp
sub
into
push
arpl
imul
dec
mov
ret
sti
cmps
stos
loopne
call
aas
push
cwde
jmp
push
and
in
js
pop
jecxz
mov
pop
outs
xlat
mov
jne
jg
into
mov
stos
iret
jno
js
jge
and
fcmovnu
mov
push
cld
cmp
pop
enter
fwait
xor
out
(bad)
arpl
retf
mov
(bad)
pushf
ret
arpl
add
adc
dec
nop
ret
mov
xchg
and
pop
call
mov
fstp
xor
sti
jp
mov
xchg
mov
jg
and
add
push
pusha
pop
mov
mov
mov
and
sub
add
test
jne
and
or
fdiv
inc
not
sub
sbb
scas
inc
(bad)
mov
int3
sti
mov
pop
movs
repnz
arpl
xchg
cmp
xlat
outs
ror
mov
std
scas
adc
push
clc
loopne
xchg
pop
pop
stos
push
ffree
lea
icebp
cmp
pop
pop
cwde
not
fmulp
dec
(bad)
cli
mov
repnz
cmp
dec
mov
mov
test
scas
add
cmps
jmp
push
pop
and
sbb
icebp
ja
gs
adc
jge
lahf
loop
adc
add
pushf
cmp
js
aad
daa
lds
or
sar
mov
or
aas
push
inc
and
sub
mov
(bad)
jl
and
in
mov
xor
outs
jge
rcl
dec
in
inc
cdq
adc
jg
mov
add
ss
out
xor
pop
out
shl
xor
xchg
hlt
add
or
popa
hlt
out
stc
xchg
test
pop
or
jp
adc
push
imul
scas
inc
std
cs
xchg
xchg
sahf
out
mov
test
enter
shl
(bad)
(bad)
sbb
mov
push
dec
(bad)
addr16
mov
sbb
cmps
test
xchg
mov
xor
mov
je
pushf
adc
sub
fcomp
jp
or
mov
xchg
jmp
les
lods
or
js
or
test
hlt
out
adc
cmp
add
and
dec
fidiv
mov
xchg
mov
mov
add
push
test
xor
adc
shufps
jne
jnp
dec
dec
movs
mov
test
shr
ja
(bad)
into
sbb
mov
stos
mov
or
inc
js
mov
test
stos
jo
dec
xor
pop
std
fldenv
or
jb
repnz
movs
das
and
lods
xor
inc
add
and
in
mov
pusha
ret
xchg
add
imul
test
sub
xor
mov
arpl
jno
aad
ror
jp
loop
(bad)
ds
push
in
idiv
sbb
imul
mov
fst
(bad)
jge
call
sbb
fs
cld
scas
rcl
pop
xor
cmps
mov
or
and
int
mov
(bad)
adc
fistp
push
cs
push
movs
movs
push
cdq
mov
ja
fldenv
ins
addr16
mov
jno
lea
fcmovne
rcr
lds
in
mov
aas
dec
shl
rol
(bad)
xor
sub
ss
jae
(bad)
adc
jb
push
cwde
mov
push
sar
push
jmp
xor
dec
jg
push
pop
xchg
fstp
(bad)
mov
fs
std
mov
mov
sbb
inc
(bad)
cmps
loop
adc
rcl
dec
mov
repnz
int3
sub
cwde
or
stos
sub
bound
test
and
dec
shr
ja
jp
mov
jg
xchg
hlt
mov
xor
and
les
mov
mov
inc
mov
add
scas
ror
stc
std
push
xchg
jmp
aam
call
mov
das
cmp
inc
inc
or
mov
punpckhdq
js
retf
sub
je
or
jmp
push
push
mov
scas
int
cmp
jg
push
cmp
cmp
aam
or
retf
sbb
pop
repnz
aas
dec
ffree
aad
mov
sub
sahf
sahf
cs
hlt
lds
mov
or
scas
out
in
cmp
cmp
pop
test
out
dec
sar
js
jmp
mov
movs
sbb
mov
mov
adc
or
mov
fucomi
pop
push
adc
in
retf
xlat
aas
and
sbb
xchg
inc
std
sahf
dec
(bad)
push
mov
xor
mov
call
cwde
and
jmp
xor
xchg
dec
mov
mov
or
es
es
mov
lods
push
xchg
and
push
jmp
daa
jmp
stc
dec
sub
jmp
sub
ins
pop
jns
and
mov
repnz
pop
test
and
dec
dec
popa
mov
cmps
add
loopne
scas
cli
dec
addr16
xchg
test
mov
xor
mov
mov
int
sbb
xchg
lock
mov
mov
in
test
or
mov
dec
outs
or
cmc
leave
mov
enter
jnp
jge
mov
or
fiadd
fidivr
xchg
fdivr
jnp
fmul
call
add
inc
lea
or
sub
(bad)
dec
mov
jg
fxam
xchg
cli
lea
mov
push
mov
test
pop
lods
cli
jl
mov
add
mov
(bad)
ret
dec
jl
mov
lea
test
jl
clc
pusha
dec
xor
loopne
xchg
out
jns
push
std
ss
pop
push
jns
mov
fild
xchg
inc
jno
packsswb
in
jo
pop
pop
fcomp
add
mov
(bad)
aam
js
push
xor
fdivr
pop
inc
dec
xor
fcmove
cmp
jns
stos
dec
ret
(bad)
in
and
ins
div
fwait
and
mov
mov
gs
and
adc
jge
add
jo
pop
dec
and
jge
stc
inc
xchg
or
sub
xchg
pop
ins
cmps
nop
popf
pushf
outs
mov
or
hlt
movs
mov
mov
jno
out
mov
jbe
push
or
dec
ret
push
push
in
or
or
test
inc
jns
dec
out
cmp
and
ins
inc
ins
(bad)
or
jae
aas
cmps
push
cmp
lea
or
repnz
mov
add
adc
jp
adc
push
push
addr16
scas
mov
gs
outs
mov
mov
(bad)
sub
push
cmp
repz
xor
sbb
ss
pop
shl
xchg
cwde
and
ins
pop
adc
push
add
or
nop
mov
jmp
call
jg
lods
jae
and
fucomp
js
outs
push
rol
ficomp
ds
popf
push
jae
pop
push
cmp
inc
push
dec
sbb
push
adc
or
cmp
mov
imul
pushf
cmp
adc
(bad)
repnz
mov
cmps
add
fsubr
shl
retf
out
fdiv
xor
pop
ret
jno
ins
xchg
xor
(bad)
mov
push
rol
fidivr
call
pop
cmp
and
(bad)
fs
loope
lods
jmp
and
adc
or
hlt
pop
inc
mov
inc
dec
inc
mul
pop
cmps
push
mov
jl
jae
mov
loop
sbb
fs
pop
rcl
sub
fwait
push
jmp
mov
sbb
iret
loope
adc
fdivr
rcr
jmp
popa
push
xchg
push
adc
enter
lock
cwde
adc
jg
dec
sbb
add
cwde
ja
ss
(bad)
int3
jno
ror
push
adc
sub
test
movs
or
or
test
jnp
dec
dec
jecxz
into
mov
jne
shr
clc
jno
fimul
jbe
lahf
cwde
pushf
mov
les
xlat
push
out
dec
jmp
inc
int3
mov
sbb
out
jmp
test
or
adc
cmp
cmps
mov
pop
push
inc
rcl
das
pushf
aam
jbe
jmp
out
mov
in
(bad)
imul
mov
je
or
adc
mov
mov
add
std
movs
pop
sub
mov
jb
mov
push
mov
dec
pop
xor
aas
sub
pop
xor
aam
xchg
mov
push
dec
dec
push
fcom
dec
leave
adc
fcmovu
cmp
ss
or
mov
(bad)
cmp
cs
sbb
int
lds
retf
fbstp
mov
dec
mov
sbb
sub
retf
xor
mov
lods
jns
jbe
sti
adc
shr
add
adc
loope
jp
mov
push
jecxz
mov
sbb
adc
mov
imul
pop
mov
mov
sbb
mov
sub
notrack
mov
pop
sub
retf
mov
jmp
mov
sbb
and
mov
enter
lahf
ja
cmp
das
mov
pop
pusha
retf
push
sbb
add
or
inc
fwait
popa
dec
in
xor
add
shr
cwde
mov
jle
mov
lahf
out
inc
inc
test
cmc
inc
popf
mov
push
in
cmp
fs
into
push
xchg
(bad)
sbb
push
jmp
mov
mov
rcr
sub
dec
dec
jl
stos
imul
in
sahf
cli
mov
popa
or
push
(bad)
cmp
push
push
sbb
imul
(bad)
adc
jmp
pop
xchg
cmp
pop
int
jnp
xor
xlat
fcomp
or
test
test
push
adc
dec
stos
(bad)
xchg
fiadd
lahf
nop
das
ret
ja
jo
ins
popw
add
dec
push
mov
stos
(bad)
ds
shl
js
lods
out
add
pop
stos
call
dec
ror
jge
dec
add
xor
test
movs
rcr
push
outs
push
pop
out
test
lahf
cdq
mov
and
cmp
fdiv
or
fdivr
fisttp
fistp
nop
pop
out
push
adc
jb
mov
(bad)
mov
mov
aam
daa
inc
into
push
push
adc
cmp
jl
sbb
mov
fisub
or
sbb
xchg
add
es
or
jmp
xchg
push
sbb
in
stos
aad
add
fucomp
jp
inc
inc
cmp
or
pop
gs
xchg
neg
shr
js
shr
and
or
mov
xor
mov
cmc
push
xchg
jnp
inc
hlt
xchg
jp
push
xchg
arpl
movlps
dec
leave
loope
int3
or
bound
mov
out
std
sbb
ins
out
rol
sbb
mov
mov
ss
cmps
fmul
stos
stos
fnstsw
push
mov
inc
inc
cld
ins
pop
jp
dec
push
push
xchg
aad
pop
mov
sub
adc
sub
call
scas
mov
jb
sub
ins
xlat
push
imul
push
jbe
test
lock
pop
dec
mov
sbb
scas
mov
cmp
(bad)
mov
hlt
aaa
adc
sti
pop
cmp
cmps
imul
iret
sub
push
addr16
mov
xlat
xor
push
das
dec
out
push
xchg
ss
dec
test
and
or
mov
pop
dec
es
mov
cmp
or
mov
shl
dec
pop
fs
sub
das
jmp
out
jo
mov
push
sysret
pop
and
clc
add
jp
movs
stos
pop
stc
push
mov
cmp
das
pop
mov
repz
shl
xchg
bound
mov
sbb
or
xor
sub
sbb
popf
pop
test
sub
stc
adc
aam
(bad)
inc
dec
jge
mov
enter
sub
imul
aad
mov
add
nop
aaa
stos
sbb
out
push
adc
push
sbb
and
add
add
ins
arpl
dec
jg
jmp
mov
pushf
cmc
(bad)
out
iret
test
sub
xor
imul
(bad)
(bad)
jmp
cmp
inc
rcr
xchg
mov
fwait
cdq
sub
ror
add
adc
adc
(bad)
xchg
mov
es
cs
lods
xchg
in
imul
sub
xor
xchg
xor
ins
pop
push
or
sbb
jne
dec
or
mov
rcr
jns
mov
sbb
adc
popf
xchg
xchg
icebp
jb
pop
fldenv
push
in
cli
sbb
inc
shl
sbb
sti
pop
loopne
and
push
es
mov
test
cmps
jge
lods
dec
cli
mov
push
jl
xor
add
xchg
shl
imul
outs
inc
aas
push
push
clc
inc
add
repnz
dec
pop
sbb
aaa
jle
pushf
adc
mov
dec
mov
mov
pop
or
mov
dec
xor
in
and
dec
in
mov
mov
inc
dec
mov
mov
outs
cld
fimul
push
cld
xchg
dec
xchg
stos
and
outs
fmul
mov
inc
imul
cmovbe
sbb
pop
shr
fsubr
mov
hlt
test
ficomp
push
cmp
or
ds
sub
in
push
js
jle
std
cdq
pusha
cmps
movs
mov
pop
clc
push
ja
shr
mov
push
fucomip
jp
popa
aam
dec
xor
jo
jb
scas
mov
call
in
or
xchg
shl
add
stos
fwait
add
pop
loopne
dec
fucomp
or
das
bound
lea
sahf
and
cld
hlt
das
jb
ss
jnp
jne
into
lds
push
clc
pop
ret
dec
adc
(bad)
add
add
cmp
add
inc
push
mov
xchg
mov
mov
pop
or
cli
cmps
jb
pop
xor
mov
adc
ins
ficom
mov
push
dec
push
mov
repnz
das
int3
add
jle
out
dec
and
or
repnz
adc
jmp
sti
mov
in
or
dec
mov
cli
dec
or
mov
mov
sub
(bad)
cmp
lahf
and
xchg
repz
adc
lods
mov
jno
or
(bad)
shl
jge
loope
(bad)
out
addr16
fisttp
int
test
mov
xor
mov
jle
mov
scas
dec
adc
ss
adc
nop
mov
jmp
call
cmp
ja
mov
xor
into
out
cdq
xor
fisubr
(bad)
or
pop
mov
mov
sahf
call
je
aad
outs
fwait
je
pusha
movs
dec
pop
sbb
fidivr
push
push
xor
rol
in
ins
outs
inc
sahf
pop
adc
popf
xor
or
popa
cld
sub
xlat
mov
dec
jae
mov
arpl
nop
mov
jle
or
mov
adc
fst
out
gs
lods
and
loop
or
test
mov
pop
dec
ror
inc
std
shl
idiv
loop
push
cli
add
out
js
pop
mov
mov
mov
mov
mov
rcl
mov
mov
sbb
sbb
dec
xchg
dec
push
adc
push
add
sub
outs
clc
inc
(bad)
ss
pop
mov
loope
adc
outs
push
retf
into
cmp
js
in
sbb
push
adc
cmp
mul
and
mov
mov
fnsave
cmps
fsubr
xor
lea
addr16
outs
jb
pop
and
(bad)
cmp
pusha
jp
bswap
ins
adc
mov
inc
dec
mov
push
rcr
mov
adc
push
(bad)
xlat
jecxz
(bad)
fisubr
adc
push
add
xchg
(bad)
cwde
jnp
jp
shr
enter
enter
aas
sahf
(bad)
mov
xchg
push
mov
jno
mov
or
sahf
mov
inc
xchg
mov
ret
sar
in
cmp
add
mov
inc
fdivr
adc
mov
xor
pop
dec
imul
arpl
xor
dec
test
mov
ret
neg
aam
das
sub
adc
dec
shl
mov
push
aaa
test
cdq
mov
push
cmp
jo
sysret
fnstenv
adc
sub
cmp
loopne
or
add
lds
or
das
fistp
mov
sub
push
enter
push
cmps
hlt
jecxz
aaa
ins
out
add
addr16
neg
adc
add
fdiv
jo
xchg
push
adc
stos
mov
mov
mov
outs
and
inc
or
neg
jnp
cmp
int
cmc
fadd
clc
lods
iret
pushf
ins
push
test
fdiv
imul
shl
(bad)
xor
lods
loop
and
sub
addr16
mov
cmp
inc
nop
test
lods
push
cdq
adc
push
cmps
adc
cmp
out
or
jae
shr
add
add
(bad)
stc
ja
daa
bnd
jne
xor
lods
xchg
loope
enter
rol
mov
fsubr
add
int3
loope
ret
and
add
jbe
sub
inc
aad
xchg
outs
lahf
out
push
popa
das
mov
mov
cmp
mov
inc
aaa
jge
stos
push
outs
push
pop
jae
out
idiv
jmp
sub
ins
rcl
ficomp
or
mov
or
cmp
mov
in
or
inc
addr16
and
mov
cli
push
cmp
cld
cdq
test
mov
jge
fild
les
in
add
xor
add
mov
push
imul
sbb
and
call
cmps
add
and
adc
test
mov
jle
add
inc
xor
fnsave
push
jecxz
jnp
mov
cmp
sti
pop
mov
mov
mov
arpl
repz
mov
push
mov
bound
sbb
cmp
jmp
repnz
cmp
and
push
inc
xor
mov
scas
mov
sar
imul
test
mov
arpl
add
retf
sbb
ins
fwait
dec
hlt
mov
or
outs
in
stos
in
sub
pop
js
out
or
jae
push
dec
stos
loope
or
in
push
push
jle
mov
lock
push
outs
xchg
push
or
fs
xchg
cmc
sbb
xchg
mov
mov
repz
adc
popa
xor
popf
cmp
push
inc
and
mov
loopne
popa
repnz
movs
les
ds
leave
ins
pop
mov
loop
aam
mov
and
and
retf
aad
cdq
movs
xchg
ret
scas
sub
and
fcom
pop
out
test
add
push
js
mov
ror
add
dec
out
xchg
push
sbb
and
push
pop
test
cli
mov
mov
loop
jg
je
xor
push
js
jno
pop
jle
xchg
stos
add
sbb
call
in
xchg
and
in
loope
add
pop
es
xor
xchg
sub
jg
dec
in
mov
pop
not
jge
jno
popf
movs
cmps
add
lds
add
mov
stc
sti
rcl
mov
idiv
leave
stos
(bad)
lahf
bt
jmp
out
lds
add
push
add
jo
and
into
pop
stos
jno
push
jo
or
adc
sbb
fmul
das
sahf
stc
imul
fs
repz
fld
and
jmp
into
call
inc
add
inc
sub
jne
push
ror
cmps
mov
ds
jge
push
pop
push
fwait
push
jno
scas
cmp
cmp
add
shl
add
js
aam
jecxz
or
dec
iret
jne
lea
inc
cmp
xchg
test
mov
in
or
leave
sbb
adc
leave
(bad)
aam
mov
(bad)
jmp
(bad)
push
dec
outs
pop
mov
popf
scas
je
cmps
cmps
mov
out
cmp
push
adc
scas
xchg
das
adc
ds
clc
inc
stc
push
xchg
daa
out
and
sub
jb
jg
push
aam
loop
rol
imul
mov
xchg
sub
pop
sbb
hlt
loopne
inc
mov
jnp
pop
cld
cmp
aaa
fs
sti
sub
inc
mov
pop
mov
jg
jge
xor
push
retf
mov
and
fwait
out
xchg
cmp
or
dec
sti
stc
pop
and
lods
and
(bad)
std
ds
jl
cmp
aad
cdq
pusha
scas
(bad)
xchg
adc
js
inc
sub
mov
pop
into
popf
fmul
rcr
in
xchg
test
pop
mov
or
add
xchg
movs
inc
push
xor
xor
rcr
clc
(bad)
ja
loop
fs
push
addr16
cmp
cmps
ret
test
cmp
mov
popf
mov
std
or
dec
movs
rol
sub
int
pop
xor
pop
(bad)
popa
pushf
push
inc
or
out
aam
ja
cmp
mov
adc
push
fidiv
or
pop
cs
loopne
jae
idiv
bound
jbe
scas
or
sbb
pop
cmps
fist
push
mov
scas
sub
cmps
loop
ins
or
sbb
mov
lods
cmps
sbb
sub
and
int
test
add
inc
xor
fmul
jae
sub
and
retf
stos
lods
lods
jmp
ja
pop
sbb
mov
aad
out
cmp
pop
sub
les
std
ds
cmp
shl
cld
test
aad
iret
xchg
adc
pop
out
mov
fisubr
shl
gs
call
pop
jge
cmp
cli
sti
test
push
adc
(bad)
loop
sbb
add
lock
ss
jne
jo
pop
dec
pop
inc
adc
rol
mov
inc
xor
lahf
test
mov
mov
fwait
int
rcl
mov
mov
pusha
loop
sub
mov
sbb
pop
and
cli
imul
aam
(bad)
hlt
jne
dec
fmul
out
adc
push
adc
mov
sbb
(bad)
aad
iret
fsubr
arpl
fisttp
shl
and
test
mov
xchg
mov
xchg
pop
or
sbb
push
imul
popa
xchg
pop
retf
hlt
cli
jle
cmp
xlat
fstp
imul
mov
push
or
cmp
jo
outs
out
jns
dec
(bad)
and
aam
and
retf
shr
add
into
(bad)
std
js
pop
jno
cli
out
stos
daa
add
xchg
adc
add
jmp
js
movs
jns
sbb
cmp
cdq
push
jle
xchg
fwait
jp
jne
cs
pop
mov
sti
ss
push
sub
pop
push
in
xlat
sub
cmp
pop
(bad)
xchg
out
push
or
xor
xor
inc
hlt
ret
push
adc
call
cmp
sbb
dec
arpl
repnz
sbb
jb
int
inc
jae
rcr
(bad)
inc
push
lahf
pop
loope
out
cmp
pop
mul
mov
ins
pop
cmp
or
cwde
in
ins
and
not
mov
sbb
push
jne
jbe
jecxz
(bad)
mov
movs
mov
mov
popf
mov
pop
cmp
mov
mov
push
adc
in
xor
inc
out
std
jl
pop
xchg
jne
mov
test
xchg
test
mov
jecxz
or
addr16
push
lods
mov
cdq
and
je
jne
xor
fldenv
ins
pushf
cmp
sub
sub
sub
cmps
cmp
vpshufd
adc
int
push
xchg
adc
out
jne
push
push
sbb
dec
in
inc
inc
mov
outs
or
pop
cs
cmp
sub
ret
jno
out
and
inc
arpl
loope
arpl
mov
sar
mov
(bad)
arpl
btr
aam
fisttp
lods
mov
repnz
call
(bad)
mov
push
fsub
sbb
mov
fadd
cmp
sub
scas
shl
pop
inc
repnz
pop
cmp
xor
jl
fld
mov
mov
inc
(bad)
ds
mov
mov
shr
lock
in
xor
xor
sub
push
add
rcr
js
jmp
sbb
(bad)
sbb
jbe
in
scas
mov
sub
sbb
inc
lods
jbe
or
push
inc
sub
mov
pop
dec
add
addr16
or
popa
mov
mov
out
mov
out
(bad)
loopne
push
push
xchg
mov
(bad)
jae
and
mov
jbe
(bad)
aaa
dec
retf
pop
mov
mov
sbb
lea
out
add
js
inc
ins
imul
inc
inc
mov
inc
or
push
cld
or
jecxz
inc
pop
mov
pusha
mov
mov
repnz
sub
scas
out
and
inc
int
jmp
add
mov
cmp
arpl
jbe
mov
mov
jne
push
cmp
punpckhwd
dec
icebp
or
xor
fcomp
xlat
mov
out
mov
int
pop
js
mov
scas
mov
dec
fild
mov
mul
adc
sbb
clc
cmp
inc
(bad)
pop
xchg
clc
sub
xchg
pop
in
lea
cmc
adc
leave
or
sub
mov
mov
je
pop
inc
out
inc
cmp
cmp
pop
retf
xchg
cdq
shl
imul
pop
ins
(bad)
jno
lock
pop
pop
(bad)
stos
xchg
popf
sti
jmp
aam
or
xor
pop
adc
push
stos
sub
jno
push
sar
ret
ror
xor
fstp
fisub
cmovs
sbb
sar
push
mov
jg
ret
sbb
add
leave
cld
mov
retf
dec
or
cwde
xor
ret
dec
jb
xor
cdq
push
(bad)
push
xchg
inc
out
fisttp
and
xchg
ins
cmp
cmp
jae
stos
mov
cmp
xchg
test
aad
in
out
jmp
inc
mov
enter
out
pop
shl
add
inc
xchg
xchg
cmp
cdq
jbe
jle
fisttp
xchg
sub
mov
sbb
cld
add
cmp
fs
(bad)
sub
pop
jns
dec
stos
xor
xor
es
cwde
add
xchg
jns
inc
shr
jb
js
add
dec
ds
pop
pop
mov
jmp
sahf
int3
out
pop
adc
dec
dec
test
mov
adc
and
cmp
xor
push
lods
rol
and
xor
pop
pop
fimul
outs
adc
mov
xchg
jnp
and
(bad)
pop
pop
ret
cwde
inc
mov
in
mov
loopne
cmp
pusha
jbe
movs
push
clc
(bad)
jmp
sbb
lods
lea
cmp
arpl
sbb
ins
cmps
mov
mov
mov
outs
imul
inc
dec
jmp
int3
dec
imul
leave
fsubr
outs
and
ins
mov
outs
mov
sub
dec
ins
jl
stos
cmp
pop
xor
push
test
ja
scas
(bad)
or
fidivr
addr16
inc
inc
inc
or
push
addr16
sub
and
test
sbb
jge
xchg
enter
out
cmp
sub
addr16
test
in
mov
cdq
(bad)
imul
push
cwde
xchg
pop
push
lods
dec
in
pop
and
mov
fimul
cs
repz
jne
jae
mov
push
int3
cmps
push
loopne
sub
test
ins
sbb
add
mov
js
jo
jbe
repz
cmp
sub
ror
mov
out
or
ficomp
fcomp
add
add
jle
nop
sub
pop
push
fcmovne
daa
mov
jne
mov
hlt
test
out
fisttp
jge
in
dec
fucomip
add
cmp
mov
mov
bound
in
sbb
push
xchg
out
jns
ss
neg
adc
or
call
loope
mov
rol
jmp
jmp
test
(bad)
fldcw
jb
xchg
aaa
and
lds
in
sbb
jo
in
retf
not
fild
add
das
jnp
push
imul
cmp
jbe
jb
mov
xor
outs
imul
nop
jmp
mov
jnp
rol
popfw
cdq
rcl
daa
dec
sub
idiv
or
daa
jl
cmp
jmp
call
hlt
mov
outs
scas
cmps
mov
sbb
test
fadd
pushf
mov
daa
stos
cmp
or
pop
jecxz
test
dec
rol
jno
popf
fisub
in
loope
xor
arpl
mov
lea
inc
fld
xchg
jns
(bad)
icebp
lahf
fimul
sub
movs
jp
arpl
adc
jle
mov
mov
sbb
lahf
jnp
dec
sub
inc
push
mov
push
push
or
xchg
shl
hlt
fist
add
and
addr16
ins
inc
aam
and
and
leave
push
movs
dec
out
or
test
sub
fcmovu
(bad)
clc
not
cmp
and
fsub
cmp
push
mov
adc
mov
or
xor
push
xor
stc
fstp
pop
jmp
arpl
retf
fwait
push
push
push
movs
lds
cmp
popa
xor
xchg
test
or
add
repz
pop
fisub
jl
xor
ret
stos
adc
sbb
adc
adc
mov
adc
ss
sub
push
pop
xchg
sub
(bad)
and
xchg
(bad)
ds
push
mov
enter
retf
mov
jle
cmp
fadd
out
xchg
call
jnp
inc
pop
ja
mov
cmps
enter
sbb
ins
xor
mov
pusha
ror
dec
pop
jmp
shl
fst
mov
xchg
mov
outs
adc
push
mov
pushw
fisubr
sub
pop
outs
jp
(bad)
shl
sub
mov
dec
xor
fldenv
cmp
xchg
push
ror
jmp
nop
(bad)
mov
cmp
dec
dec
mov
fisubr
scas
test
mov
push
or
int3
sub
xchg
inc
and
pop
sub
retf
push
(bad)
fistp
imul
arpl
push
icebp
(bad)
push
adc
int
pop
mov
jo
in
aaa
inc
aad
xor
test
rcr
jl
adc
daa
push
bnd
test
(bad)
dec
aam
stos
add
add
cmp
cmps
jle
cmp
and
sub
pushf
add
sbb
and
neg
jo
xor
mov
or
call
mov
sub
inc
xor
xchg
mov
dec
cmp
(bad)
cmp
push
repz
pop
bound
es
nop
mov
push
push
push
mov
bswap
loope
push
jbe
adc
ins
sbb
call
xor
(bad)
cmps
inc
pop
adc
pusha
std
(bad)
add
aas
cmp
leave
mov
dec
retf
mov
cmps
stos
mov
cmps
mov
mov
dec
adc
mov
mov
sbb
enter
stos
mov
cli
sub
imul
pop
es
jnp
mov
and
hlt
add
(bad)
cwde
shl
pop
rcl
jmp
dec
push
xchg
jp
movs
cmc
pop
pushf
cwde
rcr
jmp
add
jmp
lods
pop
pop
test
dec
pop
jge
scas
xchg
mov
ret
(bad)
pop
dec
sub
xor
arpl
push
leave
shr
pop
addr16
test
(bad)
add
xlat
std
xchg
lahf
mov
jle
loopne
adc
or
xchg
or
cmps
dec
xor
mov
dec
pop
enter
dec
hlt
js
int
adc
push
imul
pop
push
push
cmp
xor
mov
push
shl
arpl
adc
aaa
cmp
push
jecxz
xchg
shl
mov
int3
pop
mov
cld
mov
repnz
stc
mov
(bad)
pop
push
mov
push
sub
mov
popf
mov
inc
out
pop
ja
push
jns
fstp
fidiv
sbb
push
push
aas
sti
push
inc
stos
outs
xor
bound
add
(bad)
sbb
mov
loop
ds
jne
inc
push
icebp
push
xchg
outs
rcl
mov
add
dec
movs
jno
je
mov
dec
mov
xchg
ins
cmp
jmp
loope
(bad)
in
push
fisttp
fild
not
jmp
test
iret
pop
push
ret
fbstp
add
data16
test
jbe
mov
pop
sbb
popa
mov
push
sbb
pop
sub
bound
jmp
(bad)
aad
sti
dec
or
xchg
or
jb
imul
cld
jge
fstp
mov
dec
ffree
por
mov
add
(bad)
dec
pushf
jge
push
sbb
mov
dec
test
cwde
std
push
cmps
pushf
outs
(bad)
pop
cmp
popa
popf
xor
mov
(bad)
repz
xlat
sub
xchg
cmp
stc
mov
push
(bad)
int
ret
repnz
imul
cld
cdq
push
cmps
and
aam
(bad)
clc
ficomp
cmps
stos
imul
enter
mov
cmp
mov
jns
movs
cld
arpl
sbb
sub
jbe
cdq
pushf
mov
ins
or
je
imul
ror
jb
and
out
mov
aad
sbb
push
daa
cmp
sbb
cmp
(bad)
aas
repz
sub
mov
fisubr
(bad)
ss
mov
add
fwait
add
xchg
stc
jne
xchg
pop
das
cmp
test
jle
mov
data16
dec
imul
mov
inc
fcmovnb
dec
inc
dec
pop
bnd
in
dec
imul
bnd
sbb
inc
cmp
lea
(bad)
vpandn
cli
mov
mov
push
pop
dec
adc
push
xchg
mov
or
repz
not
jecxz
js
pop
dec
aam
mov
fwait
jmp
outs
iret
mov
loopne
sbb
into
mov
mov
dec
imul
aas
arpl
adc
inc
arpl
in
popa
mov
scas
sbb
mov
adc
jge
push
inc
lock
call
mov
mov
arpl
lods
or
push
inc
sti
mov
jns
sahf
das
test
mov
xor
inc
xor
mov
aaa
in
movs
cmps
dec
cli
pop
pop
test
mov
fcmove
lahf
ins
inc
pop
inc
xchg
push
dec
jle
cdq
dec
push
push
mov
movs
lods
js
pop
mov
mov
cdq
pop
les
jmp
fidivr
shl
icebp
and
retf
jl
ror
pop
xor
and
clc
mov
arpl
arpl
push
int3
stc
lock
mov
mov
shl
adc
xchg
jb
in
out
or
mov
test
fcom
xor
(bad)
ffree
ins
push
dec
clc
jnp
adc
sbb
retw
mov
lock
sahf
jnp
neg
jo
pop
cli
call
pop
xchg
mov
rcr
xchg
pop
in
xor
jne
pop
add
adc
mov
inc
mov
mov
mov
push
add
call
or
push
int3
nop
inc
bswap
sbb
and
adc
nop
cdq
retf
dec
scas
push
push
sub
clc
arpl
cmp
sahf
(bad)
repz
(bad)
sbb
pop
push
leave
mov
call
cld
in
mov
pop
cmp
jmp
inc
test
sbb
sub
icebp
push
out
int3
mov
rol
or
xor
jg
stc
mov
inc
loopne
bound
jle
dec
cmc
lahf
pop
loopne
mov
pop
cli
and
jp
push
jmp
xchg
xchg
jbe
outs
jge
xchg
aad
imul
jecxz
std
dec
mov
pop
(bad)
into
inc
call
retf
int
rol
mov
jno
dec
pushf
cmp
sub
loopne
arpl
pop
xchg
inc
retf
into
xor
das
mov
mov
pop
dec
and
mov
mov
outs
jge
push
ret
bound
or
stos
jns
xor
mov
in
push
les
das
stc
adc
stos
or
push
sub
inc
jne
js
imul
mov
movs
rol
pop
inc
sbb
pop
retf
sbb
dec
xchg
lods
pushf
inc
adc
int3
outs
in
mov
mov
dec
cmc
repz
test
add
arpl
push
xchg
les
not
adc
mov
icebp
fdivr
(bad)
sub
or
inc
lods
sbb
push
pop
stos
call
push
gs
xor
rcr
mov
xchg
(bad)
or
out
xlat
xchg
mov
inc
mov
nop
dec
dec
fs
xchg
out
push
repz
sbb
pop
inc
mov
mov
pop
(bad)
aas
xor
and
mov
and
mov
pop
inc
lds
retf
daa
dec
cmp
pop
call
pushf
ret
mov
cmps
inc
aaa
pop
repnz
mov
inc
stc
sub
scas
sub
nop
or
pop
loopne
mov
popa
in
inc
pop
add
retf
les
xchg
pop
into
sub
mov
(bad)
cmps
sbb
mov
add
cs
jns
mov
ror
dec
pop
cmp
int3
or
add
loope
mov
loop
push
imul
(bad)
loopne
mov
daa
xchg
or
dec
lods
test
out
dec
sub
inc
test
fucom
and
xor
out
add
and
aaa
fistp
adc
cmp
mov
or
lea
and
push
or
push
sub
cmp
popa
ins
jb
ss
addr16
or
pop
sbb
jne
gs
fstp
outs
mov
repz
mov
pop
sti
ret
fisttp
ja
jmp
dec
add
push
jns
sub
mov
aas
call
iret
cmp
aam
dec
jne
xchg
pop
xchg
stos
push
jmp
xchg
add
dec
mov
inc
nop
(bad)
mov
cmp
sahf
sbb
pop
cmp
mov
jb
jl
rol
lds
mov
pop
test
dec
jne
stc
lods
cmp
add
fldenv
xchg
cmp
sar
lods
mov
(bad)
inc
pop
es
mov
sub
test
push
lods
and
jns
mov
(bad)
jge
dec
ins
test
inc
jecxz
and
cmp
shl
fst
jge
pop
call
(bad)
pop
jnp
addr16
mov
mov
std
out
sbb
outs
dec
push
(bad)
sbb
std
push
cmp
seta
je
retf
popa
ins
mov
stos
cmc
jo
inc
cmp
push
mov
scas
outs
push
xor
call
xchg
das
push
inc
aas
fcmovu
sub
outs
loopne
test
popf
cmc
pop
mov
dec
add
pop
lds
out
mov
and
ss
ficomp
in
sbb
fidiv
stc
aad
cmps
push
in
scas
mov
jmp
mov
jp
(bad)
mov
cdq
xchg
mov
jmp
xchg
aad
out
hlt
mov
push
mov
cmc
pushf
cli
jno
popf
aaa
and
ror
fidiv
dec
mov
dec
add
mov
iret
mov
and
or
add
retf
(bad)
shl
lea
sbb
cmp
cmps
and
leave
hlt
add
jnp
icebp
js
sbb
sar
jnp
push
(bad)
cmp
jmp
add
loopne
ss
xchg
jmp
add
mov
jno
test
mov
movs
mov
inc
ret
xchg
in
fistp
aas
push
jne
mov
idiv
jge
out
ins
cmp
call
mov
mov
add
fisttp
mov
add
jbe
rcr
(bad)
mov
dec
or
xchg
sbb
popa
out
cmp
mov
add
repnz
fadd
adc
push
jne
pop
adc
not
in
pop
scas
test
or
(bad)
xor
push
in
stc
xchg
cmp
xor
jne
cmps
rcl
pop
test
out
xchg
je
popf
ins
(bad)
xchg
(bad)
adc
je
sub
inc
lea
ret
dec
lea
das
dec
add
aad
or
enter
nop
mov
cld
ds
mov
in
adc
fld
mov
xor
push
adc
imul
inc
xchg
pop
jg
and
ss
adc
fistp
sahf
adc
jb
idiv
popa
xlat
fst
adc
rol
push
rcr
jo
leave
inc
xor
xchg
push
cmp
into
shl
jo
out
adc
jo
sbb
mov
aas
fdiv
(bad)
jmp
out
or
std
retf
inc
or
xchg
push
push
and
inc
(bad)
and
mov
(bad)
into
cmp
inc
mov
into
cmp
in
push
add
sub
sub
into
cmp
mov
push
inc
loopne
ret
mov
(bad)
daa
movs
xor
(bad)
xchg
inc
sub
(bad)
retf
jnp
xchg
imul
xchg
sub
out
mov
dec
test
mov
add
scas
out
mov
mov
adc
repz
jmp
mov
or
and
xor
xchg
xchg
cdq
mov
bswap
and
retf
push
jae
xchg
xor
pop
mov
fwait
mov
add
dec
lea
cli
xchg
ins
loop
dec
lods
inc
mov
scas
outs
sbb
mov
stos
pop
shl
adc
mov
int3
mov
cmp
addr16
lock
mov
shl
test
jnp
movs
dec
adc
push
xor
in
repz
inc
mov
inc
mov
repnz
pop
out
lea
pop
jno
mov
add
or
test
ja
cmp
add
pusha
lds
pop
fs
loop
int3
int3
cmc
xchg
sub
jp
je
in
lods
adc
in
xor
stos
pop
push
jle
sbb
jae
jecxz
ror
out
scas
in
fld
lods
sar
inc
jno
aam
cmp
lea
sar
outs
sub
pop
fldenv
in
mov
fst
pop
push
jne
xor
and
loopne
std
bound
sub
cmc
sahf
fnstenv
call
int
pop
adc
push
repz
out
or
mov
mov
ss
scas
mov
bound
pusha
sub
cdq
dec
sahf
movs
enter
jno
ds
sub
mov
mov
push
mov
retf
scas
mov
aas
in
scas
pop
xchg
fisubr
cmp
sar
ins
and
(bad)
and
xor
xlat
jnp
test
cmp
jecxz
xchg
movs
addr16
pop
imul
ret
hlt
addr16
xor
mov
pusha
dec
jg
aaa
sar
rol
xor
loope
aaa
or
push
jecxz
shr
outs
test
js
pop
cmp
das
mov
sbb
scas
cmp
jnp
cmp
in
mov
mov
repz
xchg
stos
pushf
xchg
ins
mov
mov
sbb
jb
pushf
or
adc
aam
fcomp
jbe
or
sub
pusha
mov
lock
mov
movs
xor
ret
push
sahf
sub
daa
les
push
mov
or
dec
mov
mov
adc
js
gs
stc
arpl
dec
sbb
xor
mov
into
inc
fmulp
xor
sub
in
test
jecxz
pop
pop
push
sbb
cmp
rol
inc
inc
aas
xchg
loopne
push
jb
adc
aas
popa
ds
rcr
cwde
mov
fs
mov
mov
pop
xor
scas
pop
aaa
je
iret
xchg
jmp
and
mov
jmp
enter
enter
cmps
pop
or
and
in
or
daa
neg
lds
fmul
dec
movs
or
and
cmc
(bad)
fsubr
or
dec
cld
or
cmps
mov
mov
fiadd
stc
mov
cwde
les
adc
or
rcl
jl
ror
xchg
jns
jns
jae
or
loop
out
jae
enter
out
div
jmp
sub
sub
xor
(bad)
push
jb
or
lds
jecxz
repz
ds
clc
rol
icebp
mov
sar
inc
dec
jge
test
jecxz
data16
or
retf
sbb
in
jg
and
jecxz
cmc
xchg
fdivr
mov
test
test
scas
jl
mov
mov
loope
mov
mov
addr16
ss
jecxz
mov
xchg
test
push
cmp
inc
les
(bad)
bound
fsqrt
mov
jb
and
jno
pop
loope
mov
ds
ror
mov
dec
ret
mov
fwait
jne
inc
pop
inc
cmp
jle
fld
aam
mov
jg
push
repnz
mov
mov
popa
mov
out
mov
repnz
(bad)
push
or
mov
sbb
pop
repnz
sbb
rol
and
inc
jle
xchg
mov
dec
xchg
or
pop
test
jmp
test
cdq
lock
mul
scas
(bad)
fdivr
ins
stos
jb
cs
ins
inc
add
cmp
mov
sbb
js
into
and
or
pop
je
fnstsw
mov
ds
cdq
mov
sahf
adc
aam
fsubr
xchg
out
ja
push
push
into
call
jno
gs
lods
pushw
clc
je
aam
scas
aas
nop
sti
retf
inc
popa
mov
out
xlat
loopne
sbb
add
loope
(bad)
dec
cmp
mov
jmp
xchg
leave
scas
mov
aad
stos
pushf
retf
mov
jns
add
fild
pushf
in
push
aas
movs
lock
add
aas
(bad)
mov
aaa
dec
retf
bound
xor
push
adc
mov
pop
mov
test
and
inc
ins
and
push
adc
gs
or
or
cmps
inc
movs
jno
xchg
fdiv
aam
cmps
or
or
jmp
daa
mov
mov
or
mov
jmp
mov
gs
sub
mov
mov
push
and
xchg
sbb
xchg
psrlq
pop
jae
retf
inc
out
lahf
fild
ds
pop
cmps
fcmovnu
and
retf
mov
cwde
xchg
push
sar
cmps
fsubr
es
push
(bad)
cmp
lahf
lods
iret
stc
pop
xlat
test
bound
xor
clc
jnp
cmps
xchg
adc
cmp
cmp
retf
outs
cmp
or
cli
xchg
cmp
jmp
es
and
mov
and
and
imul
dec
or
jnp
mov
fidivr
pop
aas
shl
and
daa
in
inc
sub
inc
xchg
xchg
pusha
ret
mov
and
mov
pop
mov
(bad)
sbb
inc
jge
push
mov
lock
dec
jne
or
inc
pusha
outs
lods
fsub
ss
push
or
sub
das
lds
cs
inc
fdivp
out
cli
mov
mov
fsub
xchg
scas
sub
loop
sbb
jmp
inc
scas
movs
cld
mov
jle
xchg
add
outs
sbb
pop
aad
adc
and
call
mov
cmp
cmps
in
(bad)
mov
mov
enter
ret
pushf
mov
mov
push
jg
or
aad
xchg
or
xor
and
cmp
cmc
pop
enter
xchg
lods
mov
inc
je
stc
sub
ss
shl
(bad)
jmp
xor
mov
mov
and
pop
ins
jmp
imul
xchg
jmp
xchg
icebp
xchg
mov
in
xchg
sbb
sbb
dec
or
sahf
sub
cdq
arpl
es
loop
(bad)
sub
xchg
fsubr
sub
mov
(bad)
pop
push
gs
mov
cs
call
div
pop
daa
cmc
push
in
aam
xlat
clc
or
jnp
xlat
out
jnp
lods
mov
in
je
xor
pop
pop
gs
clc
jno
xor
adc
dec
retf
mov
pop
outs
cmps
ins
jmp
cmc
aad
(bad)
pop
add
out
hlt
repnz
jb
mov
xchg
add
mov
call
outs
fdiv
adc
(bad)
int
push
adc
adc
dec
xlat
(bad)
outs
retf
je
cmc
lahf
adc
mov
(bad)
cmc
jb
fstp
jo
hlt
xchg
lds
dec
sbb
cli
lahf
int3
imul
rol
lahf
sti
mov
enter
neg
cmc
int3
repnz
xor
inc
stos
push
inc
jmp
xlat
imul
cmp
sbb
je
cmps
cmp
scas
push
mov
rol
push
pop
into
shl
jae
add
movs
pop
stc
das
into
xchg
jae
and
adc
test
popa
mov
mov
outs
mov
jns
in
add
inc
xor
ja
pusha
call
mov
jnp
int
inc
and
sub
ins
into
add
je
rcl
int
cmp
sahf
dec
ss
jno
sub
push
lock
je
imul
mov
adc
pop
jp
push
dec
js
mov
popf
movs
dec
cmps
jecxz
popf
xchg
and
xchg
xor
movs
ficom
aam
push
in
jne
lock
addr16
sub
stc
stos
les
xchg
add
fs
xchg
push
sbb
sbb
jno
sti
jnp
pop
call
push
mov
retf
xchg
add
shr
in
mov
sub
sti
int3
push
(bad)
int3
retf
xchg
in
in
int3
dec
out
or
push
pop
cmps
ja
stc
mov
fmul
xor
(bad)
xor
and
stos
std
mov
lods
test
mov
jmp
fild
imul
mov
outs
or
std
jle
pusha
imul
inc
ror
jbe
out
mov
lods
add
movs
ss
dec
push
ret
das
jp
or
jbe
pusha
mov
je
sbb
fistp
sbb
pop
ins
add
mov
inc
pusha
adc
(bad)
ss
bnd
inc
jecxz
enter
fiadd
pop
repnz
stc
add
dec
jae
jle
jo
pop
pop
push
cmp
push
adc
cmps
mov
gs
push
or
mov
add
or
out
inc
push
xor
es
sahf
and
xchg
fs
pop
pop
pop
imul
pusha
ret
and
cmp
dec
clc
test
aaa
and
into
pop
ja
(bad)
push
cdq
test
pop
inc
jnp
loope
jne
inc
push
cli
and
push
push
sbb
jb
xor
jnp
xchg
retf
retf
mov
push
in
es
add
mov
retf
outs
inc
pop
xchg
adc
addr16
fnsave
mov
mov
idiv
es
pop
in
add
pushf
jecxz
xor
xchg
not
repz
(bad)
dec
retf
push
(bad)
fwait
popf
mov
sbb
stc
fild
sbb
mov
lods
xchg
jg
dec
add
popa
mov
mov
pop
mov
inc
ret
and
mov
sub
popf
and
jns
inc
(bad)
test
in
add
sbb
not
cld
mov
sub
fld
cmps
sbb
push
jge
cdq
xchg
jno
jbe
push
jns
(bad)
mov
in
sub
retf
sahf
mov
repz
shl
jp
pop
cmc
jnp
rcl
sbb
lods
and
cmp
loope
xlat
xchg
in
inc
mov
inc
iret
sbb
sbb
add
fisubr
add
push
mov
or
retf
outs
push
cli
push
sub
push
mov
adc
nop
jns
pushf
push
sbb
icebp
inc
aas
cli
ds
pop
clc
lods
xchg
or
mov
dec
das
inc
(bad)
leave
test
mov
(bad)
mov
in
fstp
movs
jl
out
hlt
cmps
inc
and
xchg
pop
and
xchg
sbb
div
jmp
out
popf
int3
adc
lock
mov
stos
push
dec
mov
stos
(bad)
dec
rcl
cmp
sub
int3
push
fld
inc
ret
fsin
stos
icebp
and
rol
xor
iret
lahf
add
jge
or
mov
adc
imul
rep
scas
mov
jecxz
test
(bad)
mov
cmp
(bad)
or
repnz
ja
jae
mov
mov
daa
xor
ds
gs
cmps
test
shr
dec
sub
pop
xor
in
inc
pop
xor
shl
jbe
sub
xchg
mov
pop
adc
out
cmps
mov
xor
loope
pop
mov
daa
mov
xor
fcmovb
addr16
pop
in
movs
adc
xchg
sub
mov
inc
cmp
lods
sar
mov
and
(bad)
(bad)
xor
mov
lods
fldz
mov
mov
lods
daa
mov
mov
(bad)
retf
xchg
mov
dec
jbe
stc
jo
pop
adc
push
inc
inc
sbb
movs
sub
mov
lods
fxch
pop
in
jae
iret
push
cli
les
mov
ss
jp
pop
and
imul
xchg
xor
mov
and
mov
jge
stos
sar
popa
cdq
mov
(bad)
mov
(bad)
fdiv
fs
enter
mov
or
aas
fs
jle
jg
dec
aaa
mov
or
sahf
mov
add
out
jle
fcom
rol
jns
and
pop
adc
dec
ret
sbb
jno
mov
jmp
stc
loop
int3
and
sbb
inc
jmp
add
(bad)
jle
inc
hlt
div
mov
retf
nop
xlat
fidivr
aaa
stc
in
scas
jge
lods
xor
hlt
xchg
call
pushf
xchg
jo
hlt
adc
mov
push
fistp
enter
or
jmp
scas
pop
push
jl
pop
std
sub
stos
jmp
and
mov
adc
retf
lahf
and
cmp
pop
bound
fxch
add
add
bound
mov
xlat
fnsave
mov
jecxz
mov
jp
mov
sbb
retf
test
clc
lds
jo
cmps
inc
and
pop
mov
xor
or
jns
jge
test
add
ins
xor
scas
lahf
ret
das
dec
cmp
(bad)
call
dec
js
ss
inc
fmul
rcr
xchg
loope
push
imul
add
std
and
pop
loope
mov
mov
arpl
dec
aaa
jne
pop
mov
or
push
adc
pop
clc
cmps
jge
jge
xchg
cmp
inc
xchg
in
sbb
mov
fiadd
imul
test
push
in
rcl
dec
adc
aad
dec
sub
push
fldenv
stc
icebp
cs
xor
outs
push
pop
mov
and
and
cmp
push
sar
(bad)
mov
push
fmul
xor
lods
std
lods
sbb
arpl
fwait
pop
inc
dec
mov
jmp
ss
mov
xchg
popa
xor
inc
je
jle
int
bound
add
dec
(bad)
adc
pop
adc
mov
arpl
rcr
sbb
rcr
popa
jbe
neg
xchg
dec
call
and
mov
push
imul
loop
jg
(bad)
fsubr
sub
pop
dec
sub
jecxz
not
jge
in
test
jo
pop
cmp
mov
dec
pop
mov
mov
mov
(bad)
cmp
adc
popa
hlt
fwait
jae
(bad)
inc
mov
mov
pusha
ins
inc
mov
sub
mov
sub
std
fidiv
popa
dec
out
xchg
mov
mov
in
iret
(bad)
fucomi
jbe
adc
sub
fisubr
nop
pop
jg
fidivr
mov
dec
cmc
inc
(bad)
(bad)
ficom
and
mov
repz
fs
call
repnz
mov
in
movs
shl
ja
adc
outs
inc
xchg
adc
adc
inc
adc
jge
jp
lea
push
sbb
xchg
inc
frstor
inc
das
imul
aas
dec
ds
scas
pop
jbe
inc
out
mov
jmp
jb
mov
out
hlt
scas
or
mov
mov
mov
retf
sbb
sub
(bad)
jmp
sbb
out
or
sub
daa
iret
xlat
inc
inc
retf
cmp
mov
sbb
jmp
shl
xor
inc
das
lock
outs
das
adc
pop
lods
jmp
repz
fcmovnu
mov
mov
jnp
sub
leave
add
mov
cmp
mov
dec
mov
xchg
dec
mov
rol
std
lock
test
mov
add
jg
pop
fwait
ret
pop
mov
fndisi(8087
loope
cwde
jle
mov
mov
das
test
out
xor
jmp
dec
xchg
sbb
fcmovnbe
push
fisubr
gs
or
mov
cli
mov
mov
cmp
push
in
sub
mov
adc
loop
in
cdq
ins
popa
shr
aad
mov
cli
cmp
mov
rcl
mov
push
push
dec
sub
xor
aas
pop
pop
mov
das
dec
adc
leave
jb
xchg
cli
push
add
push
fistp
pop
shl
xchg
ds
loop
inc
xor
xor
lds
mov
cmp
xor
out
or
add
mov
mov
adc
movs
push
sar
shr
mov
add
pop
pop
daa
mov
shl
ins
aas
push
push
stos
mov
xlat
js
mov
cmps
ins
pop
popa
cmp
jbe
sbb
fwait
aaa
cmp
jno
sbb
stos
add
sbb
mov
pop
movs
sbb
scas
xchg
lock
ins
dec
shl
arpl
jg
out
outs
outs
add
mov
push
push
push
and
(bad)
dec
loope
inc
mov
xchg
push
lock
pop
jbe
ret
test
pop
fisubr
sub
les
scas
jns
sbb
je
outs
cmp
outs
sbb
int
icebp
shl
cmp
jle
jp
jmp
out
inc
dec
ja
inc
ja
or
call
mov
mov
push
outs
or
dec
mov
(bad)
pop
push
cmp
push
test
mov
hlt
mov
dec
sahf
jge
mov
lods
xor
aad
jl
jmp
mov
lods
aam
out
lods
cmp
push
jecxz
lea
cvtdq2ps
cmp
jb
add
xchg
rcl
pop
xor
dec
fwait
mov
mov
(bad)
and
jb
add
jge
mov
mov
pop
jmp
xchg
int
jbe
inc
popa
lods
dec
ds
ror
cwde
ret
shl
out
xor
cmc
into
out
mov
sub
or
aam
jb
inc
jmp
aad
mov
out
mov
cmps
push
or
in
popf
cli
pop
rol
lds
shl
add
pop
inc
jnp
fmul
sti
call
add
aam
xchg
rcl
jle
mov
fwait
dec
iret
and
scas
enter
mov
neg
out
cmp
cmc
mov
jmp
push
push
sbb
push
sbb
pusha
push
dec
lahf
(bad)
enter
jecxz
nop
jl
xchg
sbb
adc
in
hlt
jle
loopne
xor
(bad)
test
hlt
dec
xor
push
mov
mov
pop
cmp
repnz
pop
lods
add
mov
fild
pusha
dec
rcr
stc
loop
mul
cmp
xor
fnsave
sbb
xchg
mov
mov
(bad)
mov
dec
inc
pop
xor
mov
xchg
daa
shl
mov
jg
pop
mov
xor
sub
test
mov
jbe
ins
fmul
xchg
add
arpl
popf
mov
ins
jbe
fstp
je
jle
or
sub
pop
cmp
mov
mov
mov
ja
outs
jno
or
dec
xchg
jg
xchg
lea
mov
mov
inc
ins
lds
cmc
or
sub
pop
add
sbb
cmps
call
or
mov
adc
into
pop
clc
daa
outs
and
and
cmp
sbb
and
dec
cmc
imul
test
fnstcw
push
leave
nop
fisubr
test
inc
pop
repnz
ret
inc
xchg
scas
sub
dec
hlt
jmp
pop
pushf
inc
cs
xor
cmps
xor
mov
push
sub
and
ds
nop
mov
out
mov
cmp
fdiv
inc
xor
jle
sub
and
add
lds
rcr
or
xchg
adc
in
aaa
inc
aaa
fadd
pushf
jnp
loop
(bad)
mul
les
adc
push
and
xchg
mov
inc
test
xor
stos
and
xor
xchg
sahf
inc
mov
push
sub
dec
das
cld
mov
inc
add
movs
imul
inc
mov
dec
mov
jbe
sub
or
sub
mov
sti
push
dec
xchg
test
enter
out
hlt
mov
daa
or
iret
sub
adc
in
xchg
cmp
cmp
imul
add
cli
js
mov
inc
push
stc
das
je
dec
push
repnz
inc
loopne
sub
aam
sbb
fstp
dec
push
imul
dec
dec
stos
sbb
inc
cmp
pop
cli
repz
mov
in
or
les
xchg
ins
dec
inc
dec
scas
mov
sbb
retf
adc
mov
mov
jnp
push
test
fild
cs
imul
shr
push
in
fmulp
pop
call
jb
push
nop
popf
lds
in
movs
dec
imul
lea
sbb
(bad)
aaa
xor
add
sub
mov
out
mov
test
sbb
or
mov
scas
pop
sub
or
aad
imul
fs
fwait
int
int
inc
mov
and
xchg
push
repnz
mov
iret
jp
pushf
stc
xor
or
sub
mov
test
fwait
sahf
push
or
addr16
fisub
adc
shr
es
rcr
scas
outs
repnz
and
dec
push
pusha
mov
sub
sub
in
icebp
aam
xor
mov
sbb
sub
lods
das
dec
inc
lahf
or
lahf
mov
and
push
sbb
das
popf
and
mov
xchg
outs
xchg
loope
imul
and
hlt
pop
inc
jmp
pop
addps
mov
adc
push
ins
jb
iret
fwait
adc
and
ss
mov
lahf
mov
lods
not
jecxz
inc
arpl
iret
in
mov
scas
daa
xchg
dec
leave
sub
popf
sbb
push
xchg
xchg
sbb
fdecstp
xchg
xchg
fucom
cli
xor
into
out
bound
and
mov
rcr
pop
loope
mov
retf
popa
ds
cmp
pop
push
dec
cwde
(bad)
push
inc
or
inc
xchg
pop
mov
jae
xor
popa
out
test
sahf
mov
int3
sahf
jo
cmp
(bad)
xchg
and
fstp
push
leave
leave
dec
cmps
fld
sahf
in
ins
or
aam
stos
sub
pop
outs
push
arpl
int3
xchg
sub
icebp
int3
xor
movs
int3
cmp
inc
and
(bad)
ins
and
and
lahf
pop
imul
inc
movs
cmc
mov
mov
xor
lock
(bad)
cmp
fwait
xor
in
call
push
retf
and
xchg
paddusw
in
ins
pop
movs
sub
inc
aam
movs
mov
ret
cmp
es
and
je
(bad)
scas
pop
scas
jmp
mov
dec
sub
sub
retf
jbe
jp
jmp
out
inc
test
mov
jmp
repnz
(bad)
dec
xchg
pop
shr
repnz
jmp
push
inc
(bad)
and
jbe
imul
fistp
pop
xor
ror
aas
push
mov
sbb
pushf
dec
sbb
xor
mov
in
repz
push
xor
mov
mov
push
mov
dec
cmp
cmp
mov
add
mov
cmps
stc
mov
push
nop
inc
add
cmp
imul
sbb
les
test
add
jae
add
ja
(bad)
stos
cmp
fwait
(bad)
out
cmp
pop
sbb
test
pop
arpl
jle
xchg
arpl
js
js
or
into
xchg
pop
out
add
mov
mov
xor
fadd
mov
test
cmp
sub
mov
lea
in
inc
pusha
pop
or
fsubp
cmps
(bad)
fisubr
retf
adc
fist
fild
aam
jbe
jo
(bad)
arpl
pop
inc
or
inc
idiv
jmp
xor
fnsave
loop
fwait
add
adc
movs
daa
iret
inc
lods
fsubrp
sti
sub
jp
pop
cs
mov
(bad)
jmp
lahf
xor
test
pop
cmps
ficom
test
jbe
xchg
inc
mov
sbb
add
add
mov
in
fwait
adc
out
jmp
cli
test
dec
inc
call
adc
xor
lahf
dec
dec
scas
or
and
pop
dec
cmps
xchg
xchg
mov
shl
pop
or
and
ficom
lods
mov
mov
gs
xor
sbb
xchg
adc
dec
repz
stos
test
mov
jp
pushf
mov
call
pusha
jns
fild
dec
push
jg
or
and
push
mov
pop
fisub
retf
enter
imul
add
leave
push
cmps
std
mov
es
stc
cli
adc
or
mov
inc
xchg
sti
xchg
test
mov
add
in
cmp
sbb
lds
popa
xchg
iret
test
ficom
xor
dec
repnz
ins
lahf
pusha
jmp
(bad)
neg
outs
jle
adc
aas
aam
add
pop
pop
mov
lock
and
or
int3
xchg
xor
popf
jne
dec
sub
xchg
(bad)
ins
retf
(bad)
das
xchg
mov
and
push
mov
push
bound
sub
sbb
mov
mov
sub
enter
scas
cmp
inc
xlat
xchg
test
imul
sbb
fsub
push
test
mov
add
pop
xchg
cli
cmp
jns
dec
mov
inc
sbb
(bad)
(bad)
jle
je
pop
and
leave
or
push
pop
call
sub
xor
das
mov
sub
xor
dec
(bad)
sub
push
icebp
xchg
in
mov
cmp
ror
sbb
mov
cmp
mov
fiadd
stc
jecxz
rol
mov
xchg
xor
(bad)
popa
push
pop
mov
retf
jo
les
adc
or
mov
pop
daa
jle
sub
sbb
mov
retf
and
jbe
add
mov
mov
ja
and
cs
(bad)
aas
gs
sbb
clc
lock
inc
daa
inc
jp
push
(bad)
rcl
sbb
gs
loopne
xchg
push
mov
cmp
shl
stos
pop
pop
ins
clc
mov
add
das
aaa
dec
inc
leave
push
cmp
ins
pop
packuswb
icebp
(bad)
mov
cmp
or
stos
movs
mov
mov
pop
(bad)
lock
mov
out
dec
pop
xchg
jle
dec
inc
inc
loope
(bad)
gs
sti
xchg
leave
mov
daa
sub
cmps
xchg
test
(bad)
ins
jae
push
loope
in
or
cmc
cmp
push
scas
push
in
shr
and
pop
je
mov
ds
rol
xor
sbb
or
jl
add
cmc
jno
mov
jns
data16
inc
(bad)
ror
js
push
sar
xchg
mov
out
pusha
xchg
jg
into
je
imul
sub
sbb
mov
xor
imul
cmp
lods
mov
imul
jmp
in
cmp
rcl
iret
jmp
sub
pop
or
fstp
adc
mov
jecxz
adc
ret
mov
scas
push
mov
out
inc
leave
push
jbe
sub
mov
rcr
std
das
and
mov
test
push
sub
rcl
xchg
cmp
mov
ret
adc
and
cdq
nop
hlt
and
cs
adc
dec
and
dec
and
shl
jle
ds
das
fmul
add
mov
mov
xchg
jb
cmc
fs
mov
mov
stc
test
jne
jbe
dec
jno
ds
mov
movs
clc
push
inc
aad
sub
pop
pusha
or
repz
pop
pop
imul
(bad)
lds
push
ja
stos
cmps
mov
adc
lods
repnz
jle
test
fnstsw
and
mov
push
je
repnz
adc
lahf
mov
es
jns
test
imul
pop
xchg
in
mov
enter
imul
add
gs
mov
xor
and
jmp
fidiv
sub
test
inc
cwde
aad
cld
(bad)
call
add
imul
jne
sahf
sbb
xchg
in
test
add
scas
bound
or
gs
ss
iret
shl
pop
push
mov
inc
sub
xchg
push
push
mov
leave
xchg
into
push
hlt
push
jnp
es
mov
out
or
(bad)
fldcw
push
inc
jb
mov
jle
xlat
inc
dec
in
fmul
jge
stos
cmp
mov
rcr
and
lahf
adc
jbe
mov
test
xchg
das
jmp
and
mov
jle
repnz
iret
push
mov
sti
dec
or
and
das
pop
arpl
or
(bad)
movs
test
sub
test
fistp
or
scas
lods
stos
inc
xor
icebp
push
fdiv
cmp
int3
sbb
fidivr
stos
xor
out
syscall
xor
jg
mov
int
popa
mov
and
cmc
mov
es
sbb
or
cmp
out
lock
cdq
jae
xchg
dec
jnp
in
bound
outs
cwde
add
pop
sub
into
pop
cmp
jbe
mov
fsub
sahf
jns
sub
xchg
cmps
fsub
rcl
shl
adc
sub
xchg
xchg
stc
xchg
pop
cmp
jmp
(bad)
out
mov
or
jno
call
jmp
adc
popf
lods
outs
(bad)
cdq
scas
jle
hlt
jge
adc
stos
(bad)
or
inc
nop
int3
arpl
sar
xchg
mov
jns
add
pop
push
pop
bswap
mov
dec
(bad)
cmp
ror
cmps
ja
dec
inc
(bad)
and
test
sbb
xchg
fadd
xor
and
mov
mov
fiadd
inc
fiadd
or
xor
adc
ss
jmp
popa
pop
iret
push
sub
and
std
sbb
push
addr16
ret
outs
dec
ins
dec
push
push
push
test
or
pop
fmul
imul
mov
adc
fidivr
add
xchg
sub
(bad)
imul
out
scas
daa
mov
movs
cmp
or
dec
stc
push
mov
fimul
mov
into
sti
push
and
jl
aam
aam
mov
sbb
pop
repnz
jno
ret
test
jge
add
lods
or
mov
(bad)
xor
or
pop
xchg
inc
add
pop
mov
out
cs
jnp
sbb
dec
inc
out
fcmovu
mov
ret
pop
mov
jbe
xlat
xchg
clc
mov
jnp
or
dec
lods
cmp
mov
mov
push
mov
ins
div
dec
stos
std
pushf
sbb
std
jae
stos
retf
std
push
outs
mov
fimul
pop
les
aam
cmps
xchg
xor
adc
iret
aam
outs
stos
dec
jae
jb
pop
add
(bad)
call
scas
or
jno
(bad)
mov
jp
adc
push
gs
add
fidiv
(bad)
xlat
jl
mov
push
sbb
or
js
iret
adc
je
je
enter
movd
xchg
(bad)
jae
ja
xchg
jne
iret
test
sbb
aas
add
adc
xor
sbb
addr16
xchg
ins
enter
add
scas
fstp
bound
inc
add
rcl
outs
clc
add
out
xchg
mov
int
(bad)
shl
es
shl
push
iret
scas
xchg
jmp
stos
jle
popa
push
push
mov
pop
aad
ds
mov
ror
sbb
adc
in
xchg
dec
xor
xchg
adc
lock
les
int
shr
fs
jb
ins
mov
(bad)
mov
xor
pop
xor
add
das
adc
into
fcmovu
aas
addr16
test
ja
sbb
and
je
shr
aad
add
and
mov
test
imul
cld
adc
add
out
cmp
push
adc
sbb
sub
and
and
pop
daa
adc
dec
loopne
mov
popa
or
jo
inc
adc
sti
iret
(bad)
scas
repnz
js
cmp
jle
inc
sub
mov
loope
push
shr
outs
stc
mov
mov
inc
mov
shr
inc
push
add
lock
dec
ss
in
xchg
jl
inc
addr16
push
or
jae
fsub
loopne
es
jae
shl
fistp
xlat
pusha
int
es
mov
ds
push
adc
sub
in
(bad)
jne
jns
add
mov
adc
push
pop
dec
adc
mov
(bad)
sbb
jmp
pop
fdiv
ror
mov
push
sahf
push
lahf
dec
and
sub
(bad)
push
test
xor
loope
and
inc
adc
fisttp
adc
hlt
xchg
mov
pop
push
test
inc
xchg
adc
pop
aam
add
test
lods
test
gs
mov
daa
cs
adc
fld
xchg
sbb
mov
stos
push
and
fcmovne
cmp
jb
or
das
cmc
retf
push
mov
outs
push
(bad)
das
je
loop
jmp
imul
jmp
mov
xor
xchg
inc
xor
rcl
push
mov
xor
scas
call
add
out
mov
pushf
or
test
cmp
hlt
movs
or
clc
out
xchg
sub
adc
pop
mov
(bad)
xchg
shl
adc
in
ror
jns
sbb
and
inc
inc
dec
push
int
popa
add
push
mov
mov
lock
jge
ror
cs
adc
shl
iret
push
retf
imul
test
sahf
push
inc
xor
test
pop
scas
push
inc
sbb
xchg
shl
aam
mov
rol
fdivp
cmps
pop
into
movs
int
loopne
stos
cmp
lods
test
dec
jbe
fs
sbb
sub
inc
mov
mov
mov
fwait
lock
cmc
push
add
nop
and
test
std
jg
inc
jne
fdiv
loope
fnstsw
jns
fisubr
jno
cwde
(bad)
out
pop
nop
idiv
push
xlat
inc
xlat
test
push
out
loopne
jp
or
add
call
lods
adc
xor
fsubr
outs
enter
adc
cmp
push
sbb
jmp
jnp
jae
inc
or
xchg
jns
dec
and
popf
sub
or
call
jge
push
sbb
ret
sub
fisttp
mov
call
out
stos
mov
jge
fistp
fmulp
and
test
mov
fnstcw
daa
scas
xor
je
test
xchg
push
and
mov
inc
hlt
pop
xor
xor
dec
xchg
xor
mov
cs
test
fwait
jnp
ss
sub
in
inc
cld
dec
mov
jo
mov
fadd
outs
neg
inc
or
jg
cli
loopne
mov
pop
out
movs
(bad)
ins
mov
aad
jb
mov
sti
sti
and
cmovbe
pop
int
stc
push
test
repz
repz
xor
ins
repnz
jmp
and
push
mov
ficom
pop
data16
iret
repnz
sub
inc
fwait
clc
jg
fist
loop
sub
pop
rol
outs
pop
in
sbb
xchg
jno
sub
pop
xchg
ss
je
jo
fmul
shr
test
popa
cmc
(bad)
or
inc
nop
mov
call
jmp
pop
rcr
push
xchg
xor
and
retf
clc
sub
xchg
dec
xchg
ins
adc
fst
dec
mov
das
dec
inc
cmps
stos
(bad)
bound
sbb
pop
sbb
test
cmp
jmp
sbb
sbb
ficom
fdivr
mov
mov
or
inc
jmp
jae
inc
or
in
imul
gs
adc
test
jne
shr
dec
push
sub
(bad)
in
js
test
enter
fild
sub
cmp
inc
push
mov
aam
test
test
(bad)
or
mov
stos
aaa
cli
add
mov
in
mov
pop
call
les
add
inc
popf
aad
loop
inc
push
dec
enter
push
rol
mov
test
rcl
stc
(bad)
add
bound
mov
pop
xchg
dec
inc
ins
pop
sbb
test
popa
stc
outs
mov
add
pusha
pop
retf
mov
out
(bad)
dec
inc
jg
int
or
jne
adc
and
les
out
jne
push
or
and
push
repz
pop
pop
cmp
mov
mov
int3
xchg
es
repnz
cdq
jae
dec
scas
dec
dec
loop
inc
enter
movs
jbe
mov
lahf
fwait
pop
out
enter
mov
mov
out
pop
xlat
jnp
cmp
sub
jne
sbb
xchg
retf
cmps
mov
or
scas
ins
adc
scas
ss
inc
push
fimul
push
mov
adc
into
push
add
in
test
or
push
pop
(bad)
div
mov
(bad)
inc
sub
sbb
test
inc
sbb
jns
cmp
cmp
int
enter
fs
imul
pop
hlt
adc
ror
std
dec
adc
push
in
not
(bad)
das
lahf
xor
mov
cdq
addr16
lods
pop
mov
push
adc
ret
push
mov
xor
jle
jne
cmp
push
inc
scas
add
sub
jae
mov
mov
jmp
jb
test
mov
test
mov
mov
mov
sub
dec
mov
dec
pop
cmp
int3
inc
mov
fadd
(bad)
mov
enter
std
call
div
inc
jnp
movs
mov
pusha
pop
pop
cwde
outs
xchg
mov
(bad)
outs
enter
push
sbb
jbe
inc
cmp
es
add
repz
lods
in
or
scas
fs
ja
cmp
mov
frstor
add
scas
das
sub
pushf
dec
pop
cmp
test
dec
aaa
push
cmp
dec
out
jl
xlat
loop
mov
inc
repz
cmc
dec
or
dec
lea
cmp
push
mov
arpl
inc
ror
scas
loope
adc
xchg
shr
adc
mov
jno
push
lds
aaa
hlt
sbb
es
stc
xor
lea
mov
jae
jns
nop
adc
retf
add
dec
stos
jnp
adc
imul
mov
push
pop
ins
loopne
sahf
dec
and
pop
into
or
cmps
push
mov
fcomip
xor
pop
(bad)
int3
es
xlat
call
outs
sbb
jge
lahf
dec
es
mov
mov
cmp
sti
jo
inc
pop
repz
fld
je
jge
xlat
xor
sbb
pushf
pop
mov
xchg
int
jne
fisttp
and
add
pop
fs
lea
aas
mov
addr16
and
pop
aas
loop
sbb
inc
ror
push
in
jo
cmc
sub
xor
in
icebp
in
xor
jge
aas
dec
js
in
loopne
scas
adc
push
out
cdq
scas
mov
dec
and
mov
leave
mov
cmp
cwde
dec
or
mov
mov
mov
bound
test
enter
mov
or
cmp
jbe
jl
adc
fs
sbb
cdq
push
pushf
jl
cli
pop
shl
xor
and
and
ins
aam
add
mov
stos
pop
dec
mov
mov
cmp
or
jg
pop
dec
xchg
cmps
jo
jle
sti
dec
pop
lds
jl
cmp
test
jp
leave
cmp
jle
mov
rol
cmc
rol
retf
cli
iret
adc
sahf
or
inc
js
fidivr
cs
xchg
sub
sub
lea
ret
add
adc
pop
stc
add
cli
jbe
ret
adc
cmp
sahf
inc
clc
mov
cmp
push
inc
push
sub
pop
jmp
and
sub
jne
fcomp
test
adc
inc
stc
(bad)
jae
add
scas
rcr
mov
or
loopne
aas
imul
dec
adc
in
mov
pop
sub
sbb
imul
fwait
add
sahf
test
mov
icebp
gs
or
arpl
add
and
(bad)
cmp
sbb
out
cmp
jmp
cvtps2pi
lahf
mov
dec
mov
sbb
xor
in
mov
pop
push
sbb
(bad)
fiadd
cwde
(bad)
sbb
or
xor
(bad)
pop
inc
mov
fwait
loopne
mov
iret
retf
out
aam
test
mov
jbe
jge
mov
inc
mov
push
and
cs
retf
sahf
fwait
mov
or
les
jp
hlt
xchg
stos
or
sti
mov
inc
add
test
(bad)
xchg
mov
hlt
test
out
imul
add
fmul
add
iret
test
ja
and
xlat
cmp
mov
(bad)
add
cmp
(bad)
mov
lds
mov
popf
fwait
popf
repz
les
shl
jge
mov
je
fwait
jno
add
jnp
dec
(bad)
int
int
mov
mov
pop
cmc
lods
ret
cli
xchg
jmp
sbb
dec
fimul
stos
push
xlat
pop
xchg
push
rol
pop
sbb
pop
scas
dec
adc
sub
mov
lahf
push
dec
and
pop
mov
cli
fadd
add
inc
push
mov
sahf
js
icebp
sahf
add
std
mov
shl
data16
sar
pop
xchg
iret
iret
mov
fadd
add
xchg
(bad)
push
cmps
push
jge
inc
adc
xchg
xchg
in
inc
lods
rol
xchg
sub
xor
loope
ja
mov
int3
inc
adc
in
cmps
cs
cwde
jmp
jmp
jo
out
fidiv
sub
enter
pop
pop
push
and
and
sub
dec
jbe
test
(bad)
fdivr
in
daa
test
and
(bad)
jae
aam
pushf
movs
out
add
inc
push
mov
jmp
das
lods
mov
imul
sub
aad
addr16
loopne
push
cmp
cmc
xchg
inc
pop
jno
sti
inc
les
mov
jb
hlt
dec
inc
(bad)
dec
xor
mov
cmps
and
lods
xchg
shl
addr16
test
add
fisubr
dec
loope
sar
xor
mov
push
gs
sbb
jae
cdq
pop
repnz
sahf
not
js
and
push
aaa
fld
pop
adc
ins
inc
push
mov
scas
retf
orps
adc
dec
lea
je
dec
lea
jge
cwde
adc
cwde
hlt
mov
xchg
xchg
ret
imul
jecxz
push
mov
xor
push
inc
loop
in
jecxz
mov
popa
and
adc
imul
in
pop
pop
or
lock
mov
arpl
add
test
pop
adc
popa
mov
pop
cmp
jne
das
stos
hlt
pop
bswap
shr
iret
cs
xor
jl
popa
or
call
jge
popa
or
adc
mov
push
add
test
jo
std
push
in
(bad)
jb
gs
push
gs
mov
fnstcw
enter
movs
popf
ror
mov
pop
repz
stos
xor
outs
sbb
jge
shl
test
ins
fcom
hlt
mov
fidiv
push
mov
or
push
mov
inc
add
inc
pop
pop
movs
sti
sbb
test
std
mov
and
mov
dec
mov
test
cli
sbb
xchg
cs
(bad)
xchg
cld
mov
data16
leave
std
sbb
mov
xchg
pop
rcr
cwde
loope
and
xor
lahf
shl
div
and
sbb
xchg
add
sub
adc
add
sub
sbb
rol
add
scas
mov
jp
pop
test
ss
xor
fidivr
nop
or
aas
cmp
sahf
clc
ins
stos
loopne
addr16
test
fldenv
and
imul
add
mov
adc
fsub
shl
xor
loopne
xchg
lahf
push
xor
jb
or
mov
bound
pop
loope
dec
fisttp
jbe
and
stos
add
xchg
enter
or
cwde
push
gs
fstp
push
fisub
mov
aas
lods
retf
mov
sti
add
cld
push
test
or
pop
mul
test
jl
fadd
mov
imul
retf
jne
retf
fwait
mov
out
cli
das
sbb
js
popa
sub
cmp
xchg
jecxz
cmc
mov
loope
xor
mov
dec
ins
adc
iret
sbb
cmp
cwde
jne
and
adc
push
xchg
and
jne
sub
mov
push
shr
dec
test
mov
inc
jmp
xlat
je
test
fwait
pop
fild
or
inc
out
repnz
add
xchg
xor
mov
mov
out
sub
lods
cmp
and
cmp
pop
mov
fcmovne
xchg
(bad)
(bad)
mov
rol
ds
pop
aad
add
sbb
ror
dec
jle
xchg
dec
mov
mov
cld
es
mov
js
pushf
add
and
mov
(bad)
popa
(bad)
jb
dec
jg
mov
test
adc
std
in
mov
mov
pop
dec
jecxz
xor
mov
mov
mov
add
push
sahf
push
and
enter
xchg
lea
stos
inc
dec
ror
ficom
shl
rcr
cmp
mov
cmovge
adc
add
clc
pmaxsw
push
fs
adc
shr
sti
mov
vpshufhw
xor
std
sub
cli
jo
out
and
enter
outs
sahf
(bad)
dec
jno
ins
mov
sbb
outs
scas
mov
dec
clc
mov
cmp
clc
sub
ds
test
push
and
sahf
sub
dec
lahf
push
out
inc
(bad)
icebp
push
push
fs
lds
xlat
sahf
and
mov
out
rcl
or
jmp
mov
cmp
mov
dec
sub
movs
sbb
dec
dec
xor
sbb
icebp
hlt
imul
mov
sbb
popa
lds
sbb
mov
xchg
push
jl
pusha
in
dec
or
mov
dec
mov
retf
add
cwde
and
movs
push
fwait
push
xchg
mul
add
fiadd
aam
data16
xor
ret
mov
pop
sbb
sahf
call
sbb
mov
(bad)
enter
xlat
push
retf
inc
fwait
jns
aad
add
or
sbb
mov
cmps
lds
jg
jg
ins
movs
adc
sub
lea
xchg
inc
jecxz
mov
dec
rol
fstp
mov
jb
in
push
cmp
imul
icebp
aam
shr
mov
rcl
push
and
test
cmp
scas
cmp
xor
push
cli
outs
fwait
fwait
dec
inc
add
stos
push
jp
dec
cmp
dec
fstp
push
pop
(bad)
pop
fidiv
icebp
out
and
popa
(bad)
loope
dec
and
repnz
mov
mov
and
sub
dec
shl
mov
dec
in
xchg
inc
sar
dec
popa
pop
push
xlat
unpckhps
sti
daa
inc
mov
mov
mul
fcmovb
sub
inc
iret
sub
jns
pop
out
inc
sub
out
pop
(bad)
adc
cli
pop
dec
nop
out
icebp
sbb
not
or
aad
or
jmp
(bad)
shr
ja
repz
das
fdiv
inc
daa
out
mov
imul
pop
push
add
cdq
inc
repnz
aas
and
cld
add
pop
mov
out
xor
mov
pop
pop
inc
dec
cmp
mov
frstor
loope
in
dec
cmp
mov
pop
loop
xor
xor
loop
sub
dec
pushf
test
xchg
mov
pop
mov
jecxz
xor
mov
xor
mov
jo
adc
cld
push
pushf
pop
pop
std
clc
sub
adc
jecxz
das
mov
lds
xor
adc
mov
and
xchg
and
dec
cmp
in
xor
cmp
(bad)
sub
sbb
ss
mov
in
aad
jne
(bad)
in
pop
lsl
cli
dec
sbb
and
xchg
adc
cdq
into
jno
mov
cmp
in
add
fiadd
mov
(bad)
push
push
dec
mov
cmps
(bad)
(bad)
and
mov
mov
dec
jmp
cmp
rcr
push
idiv
sub
in
mov
xor
les
dec
pushf
xchg
ficomp
(bad)
call
push
inc
xor
fxam
jmp
and
dec
(bad)
lock
ror
fwait
jmp
add
shl
inc
sub
jno
(bad)
ds
stos
push
and
lods
mov
mov
add
mov
sahf
push
pop
mov
mov
ins
sbb
cmp
push
dec
rcr
scas
and
sbb
cld
jnp
pushf
mov
add
aaa
int
cld
ja
lock
jae
jb
fsub
add
push
adc
shl
jmp
(bad)
xor
sbb
jecxz
cmps
pusha
adc
sbb
hlt
loop
out
push
and
xchg
rcr
leave
sahf
ins
mov
and
loopne
xor
cmp
xchg
dec
pop
ret
ret
dec
and
int3
lock
stos
sub
cmp
jo
push
push
adc
xor
fistp
jle
push
int
sub
data16
cmp
addr16
mov
test
bound
jns
loope
addr16
ins
fist
add
and
and
push
mov
add
mov
dec
repnz
ret
xchg
xlat
mov
or
cdq
ds
out
mov
test
push
inc
jo
(bad)
push
lods
pop
scas
jae
mov
ret
mov
jp
stos
sub
jno
addr16
leave
fnsave
daa
or
int
fistp
pop
clc
cmps
mov
pushf
jge
jle
aad
mov
adc
jno
nop
fwait
and
add
mov
loope
inc
xor
sti
iret
adc
add
xor
fisubr
ret
and
psubusb
pop
lods
xor
mov
mov
add
cmp
push
iret
mov
push
xor
push
mov
ins
test
adc
stos
in
shr
xchg
icebp
pop
mov
xor
aas
pop
lahf
mov
inc
mov
arpl
push
add
std
sbb
sub
add
lock
aam
mov
xchg
cmps
sub
push
xchg
push
jno
pop
mov
sar
movs
clc
je
sub
push
fiadd
xor
mov
sbb
mov
out
dec
xchg
imul
xchg
mov
jl
fwait
jge
jns
cli
sti
cmp
dec
inc
clc
imul
repnz
mov
jg
mov
js
cmc
jb
mov
das
xor
sub
or
outs
cmp
sub
add
nop
fs
int3
lea
retf
inc
mov
fdivr
imul
inc
sbb
retf
pop
jp
(bad)
out
cli
mov
pop
cmp
dec
and
fsubrp
push
cmp
int3
xchg
and
in
ret
and
sbb
into
sar
xor
sub
lds
lods
int
aad
mov
jo
push
(bad)
aaa
rol
add
stos
sbb
fstp
cs
xchg
adc
push
fisttp
lods
xlat
popf
pushf
iret
nop
loopne
je
xor
cwde
push
or
ins
js
jl
sbb
mov
iret
shr
cmp
and
(bad)
pop
jecxz
call
push
xchg
push
jl
retf
imul
lods
cmovle
sub
jne
jecxz
mov
xor
sub
ins
dec
dec
pop
xor
add
jg
jle
rol
int3
jae
mov
and
xchg
sub
inc
pop
and
out
push
sub
fdivr
mov
in
sub
push
or
outs
add
cmp
(bad)
push
movs
bound
stos
xor
stos
mov
shl
stos
or
pop
mov
out
fst
jle
sbb
out
cli
leave
(bad)
scas
mov
ror
jmp
dec
aam
mov
lods
cli
sahf
adc
out
ins
push
imul
mov
jl
add
retf
pop
pop
adc
movq
ins
scas
out
cmp
rcl
xchg
adc
cmp
fdivr
js
int3
fstp
int
xchg
js
xor
je
mov
push
jne
call
xchg
lea
sbb
jne
push
retf
std
xor
(bad)
fcmovne
jle
aad
mov
inc
push
lea
dec
mov
cld
ror
fidiv
xchg
push
jge
push
pop
cdq
pushf
pop
movs
mov
stos
push
ss
fistp
pop
scas
xchg
add
sub
jmp
inc
mov
push
inc
or
sbb
push
ficom
fnstcw
mov
pop
sahf
(bad)
xchg
push
arpl
push
sbb
mov
call
inc
clc
cmp
call
push
mov
mov
std
add
(bad)
mov
cmps
jae
xchg
push
mov
fisub
pop
scas
iret
inc
xchg
xchg
(bad)
push
cmp
lds
mov
dec
or
and
test
in
std
in
jns
fadd
sbb
mov
adc
rcr
or
cld
sar
(bad)
ins
in
mov
sub
sbb
cld
adc
retf
push
push
sbb
popa
std
lods
xor
fisttp
or
mov
fdiv
jge
inc
jg
ja
rcl
sahf
stc
icebp
or
fcomp
xchg
sub
cld
cmp
fwait
xor
inc
js
jl
push
les
add
pop
cmc
sub
pop
cmp
scas
jecxz
dec
call
call
popa
pop
std
xchg
and
ficomp
dec
adc
shl
jo
cs
mov
or
or
or
outs
in
sub
fxch
sar
cmp
in
mov
xchg
xchg
and
cmp
lahf
(bad)
fstp
xchg
mov
into
xchg
retf
add
(bad)
mov
cmp
cs
ss
movs
es
sub
cmp
rcl
jb
inc
jne
xchg
adc
das
dec
push
fdivr
fs
jbe
dec
iret
inc
xchg
movs
sbb
jbe
repz
cli
sub
cmps
pop
sub
js
fmul
xchg
lods
ja
push
stos
(bad)
(bad)
sbb
aad
add
inc
mov
ins
jmp
scas
sub
add
sbb
(bad)
pop
pop
in
shr
pop
push
scas
xchg
call
in
aaa
(bad)
aad
bound
jmp
sar
leave
int
push
popf
jo
sbb
or
rol
cld
or
(bad)
popa
test
cmp
jb
icebp
ja
and
pop
sub
aaa
fstp
fcmovnu
jne
loopne
push
clc
xchg
movs
imul
dec
jbe
cmp
(bad)
out
dec
fnclex
pop
aaa
ror
(bad)
push
dec
into
mov
mov
lods
arpl
inc
xchg
retf
xor
in
or
mov
xlat
sbb
(bad)
xor
add
movs
lea
cdq
sbb
gs
mov
cdq
imul
repz
ret
cmps
and
mov
inc
adc
sbb
pop
test
outs
aad
(bad)
in
push
retf
clc
add
lods
retf
test
lds
lea
gs
scas
adc
mov
mov
lods
retf
xchg
pop
fisttp
xchg
cmp
mov
test
(bad)
rol
or
sti
dec
test
xchg
sub
aas
and
jno
iret
sbb
cmp
pop
test
rcr
jo
retf
out
fsubr
aad
dec
lds
imul
jmp
xor
hlt
cmp
dec
adc
add
cs
ret
mov
into
fmul
dec
cmp
rol
or
sar
sbb
stos
iret
mov
push
push
pop
xor
sub
lods
(bad)
imul
add
push
mov
cwde
imul
movs
mov
je
lea
div
outs
jle
mov
add
xor
pop
or
mov
rcr
ret
mov
and
push
cmps
and
or
je
inc
pop
in
cmp
mov
pop
inc
adc
jp
ins
sar
push
out
sahf
js
outs
rep
xchg
je
jmp
fsubrp
adc
cmp
icebp
(bad)
xlat
sbb
(bad)
fcmovb
mov
pushf
pop
jp
loopne
mov
add
test
xchg
imul
push
jne
sar
mov
scas
shl
mov
into
rcr
jbe
imul
and
add
bound
(bad)
sahf
sahf
xchg
fmul
lock
push
sbb
push
xchg
adc
inc
arpl
push
sub
xchg
nop
push
inc
mov
mov
iret
and
push
inc
ja
push
popf
call
mov
lods
jae
mov
mov
push
fimul
lea
leave
cmp
add
cmp
repnz
ret
fisub
xor
mul
arpl
adc
and
adc
or
dec
mov
jb
mov
dec
inc
aas
adc
aas
call
sbb
or
shr
(bad)
in
lds
inc
cs
loop
addr16
cdq
mov
ret
in
in
mov
nop
test
(bad)
or
pop
hlt
inc
push
neg
sub
sub
mov
movs
cdq
sbb
in
and
mov
ds
cld
ficom
cmp
jns
or
fmul
mov
and
(bad)
mov
jecxz
pop
mov
sub
std
cmps
outs
pop
pop
pop
dec
push
mov
xor
repz
(bad)
mov
repnz
adc
xor
push
jp
jge
xor
mov
ja
call
(bad)
pop
gs
mov
add
inc
dec
xchg
or
leave
cld
and
pusha
push
or
xor
arpl
mov
aad
mov
jecxz
fisttp
lea
inc
sahf
or
mov
rcr
cmp
je
outs
dec
daa
jmp
lods
sub
push
test
xor
or
cdq
mov
mov
pop
push
xchg
jo
shr
fld
mov
pop
sub
xchg
jns
push
and
icebp
aad
inc
dec
jmp
in
mov
adc
popf
js
dec
loope
push
rcr
xchg
inc
out
jbe
inc
pop
or
pop
jg
mov
adc
and
lahf
inc
shl
adc
inc
mov
ret
outs
add
jnp
pop
scas
jnp
aad
adc
xor
in
aas
ss
jbe
fadd
nop
push
sti
pop
push
adc
push
mov
mov
and
rcr
or
dec
jae
xchg
aaa
xor
scas
pop
cmps
pop
push
add
pop
xchg
or
jne
mov
test
sbb
pusha
mov
cwde
ins
sbb
cwde
adc
das
xchg
std
cmp
popa
sbb
repnz
enter
sbb
xor
out
scas
sub
js
popf
jmp
xlat
mov
arpl
and
cmp
or
pop
fsub
xor
movs
cmp
jle
mov
loope
fcom
pop
outs
pop
mov
push
xor
or
jbe
(bad)
mov
mov
(bad)
scas
jb
je
in
dec
dec
cdq
test
cmp
cmps
xor
xor
mov
clc
add
mov
out
jbe
pop
js
sub
mov
jmp
push
dec
inc
cli
sbb
mul
lock
idiv
cli
mov
call
movs
dec
jl
stos
je
sbb
data16
pusha
add
cwde
sub
mov
jmp
mov
add
push
fnsave
jae
loop
jmp
cmp
xor
pop
repz
aad
adc
aam
mov
call
mov
xchg
in
call
mov
inc
mov
mov
mov
fadd
stos
sbb
into
loop
or
jo
jmp
(bad)
mov
(bad)
aam
pop
push
and
push
inc
push
in
pop
jmp
rcl
sub
xor
into
movs
and
(bad)
push
popa
outs
xchg
mov
pusha
mov
iret
dec
nop
inc
jge
(bad)
push
jp
(bad)
and
inc
mov
pop
je
pushf
inc
outs
rcr
cwde
xchg
fild
sbb
shl
lods
dec
leave
mov
fs
sbb
out
or
xor
dec
push
retf
push
push
sbb
pop
psadbw
shl
dec
adc
pop
loop
data16
mov
outs
retf
xor
pop
xor
(bad)
adc
ss
mov
sbb
out
jae
pop
push
dec
aam
int3
or
and
xor
jl
or
std
call
push
sbb
xchg
das
mov
jae
pop
(bad)
mul
mov
pop
inc
repnz
mov
div
fst
jb
lds
jp
or
(bad)
ror
ins
mov
fmul
loope
in
jecxz
mov
shl
icebp
cmps
pop
ret
sahf
mov
cli
scas
ror
test
shr
fistp
jns
imul
nop
mov
inc
mov
add
mov
push
adc
jae
mov
add
jge
ins
pop
mov
sbb
neg
fsubrp
(bad)
into
pop
push
jg
stos
xchg
out
mov
cmp
fcmovu
call
dec
sbb
inc
add
cld
sbb
in
es
or
jle
ret
cmp
gs
mov
das
and
dec
cmp
lds
jmp
lock
pop
sbb
stos
fdivrp
lock
jge
and
push
call
enter
fdivr
push
inc
add
ins
cmps
int
sbb
pop
adc
es
clc
xor
bound
sahf
push
jno
mov
retf
cmc
mov
sbb
loope
sbb
dec
outs
into
pop
(bad)
in
push
das
ret
enter
cmp
dec
sar
lods
lea
mov
ins
test
inc
int
inc
test
mov
cs
stos
hlt
jecxz
dec
xchg
sub
sbb
mov
sbb
stos
pop
(bad)
mov
push
int
mov
and
arpl
mov
jne
ret
push
in
cdq
std
inc
or
cld
fld
imul
pop
pop
cmp
in
pop
fisubr
fmul
(bad)
frstor
push
pushf
inc
inc
jmp
fbstp
jne
test
iret
faddp
call
retf
add
jo
or
adc
bound
jmp
adc
mov
ja
into
or
sub
dec
repnz
ret
rcr
lea
and
jp
jp
enter
add
mov
cmp
jecxz
mov
loope
jp
pop
jae
jecxz
ins
in
cmp
aas
push
xlat
out
mov
add
adc
hlt
(bad)
aaa
jge
int3
and
repnz
push
ds
adc
xchg
mov
xchg
xchg
sbb
outs
mov
inc
(bad)
out
cmps
pop
test
(bad)
aas
cmp
inc
jae
xor
and
inc
push
fs
loopne
adc
xchg
aas
mov
inc
inc
sub
inc
rcr
mov
xchg
pop
mov
out
aas
sub
mov
dec
ja
jle
fld
jno
cmp
mov
mov
stos
and
add
pop
xchg
dec
cmp
cmp
arpl
xchg
(bad)
sar
popa
rcl
test
or
or
pusha
es
adc
stc
mov
in
push
inc
pop
dec
retf
dec
sbb
ins
shr
adc
or
repnz
(bad)
test
push
inc
fnsave
add
xchg
sar
adc
cmp
xor
nop
ret
test
push
shr
leave
sbb
sbb
dec
call
stos
(bad)
mov
loop
lock
pop
call
hlt
sahf
clc
sahf
xor
mov
sbb
mov
adc
xor
out
mov
pop
jne
sbb
test
mov
(bad)
repz
data16
call
scas
leave
and
ret
jle
sub
mov
jmp
mov
sub
mov
repnz
push
outs
les
sbb
(bad)
xchg
and
shr
retf
retf
fwait
adc
inc
push
inc
pop
inc
pop
lods
xchg
cmp
repnz
add
add
pop
dec
repnz
inc
or
cli
dec
inc
inc
push
lods
or
out
adc
gs
xor
daa
loope
(bad)
mov
jne
inc
adc
mov
test
and
mov
mov
and
and
adc
push
sbb
bound
fstp
ror
xchg
mov
cmc
xor
jle
push
mov
jmp
fisubr
add
inc
lods
repz
xchg
add
mov
lock
or
loope
inc
icebp
inc
scas
or
or
in
dec
pop
pop
(bad)
repz
inc
sti
loope
pop
xor
mov
inc
fist
enter
out
push
dec
sub
gs
or
addr16
test
adc
adc
jmp
mov
sub
enter
test
or
mov
adc
and
mov
out
mov
pop
jmp
inc
out
(bad)
lahf
popa
test
idiv
cld
ja
(bad)
sub
lods
les
inc
jl
into
scas
pop
jb
ins
mov
adc
pop
cmp
imul
rcr
test
jmp
or
xchg
pushf
retf
and
push
mov
fcmovu
dec
mov
jecxz
mov
scas
test
mov
cdq
or
xchg
inc
mov
iret
xchg
xchg
out
cmps
pop
lds
sbb
mov
xchg
or
pop
pop
push
dec
iret
jp
mov
js
mov
repnz
pusha
sub
or
fucom
mov
jns
ins
add
pop
push
cmp
jp
mov
ins
and
push
dec
rcr
(bad)
jo
cmp
xor
not
scas
add
imul
retf
mov
fstp
adc
add
inc
imul
mov
cwde
pop
or
mov
push
jno
leave
mov
cmp
clc
push
inc
not
and
movs
adc
sti
fwait
xor
jge
push
clc
in
dec
inc
mov
jge
or
mov
(bad)
jp
fcom
ret
jmp
repz
les
adc
mov
sti
aaa
imul
xchg
push
ins
dec
lods
xor
mov
outs
dec
dec
xchg
test
mov
mov
dec
push
jo
pop
out
loop
jmp
fadd
adc
mov
jecxz
and
xor
(bad)
movs
cdq
mov
clc
pusha
dec
jl
(bad)
jo
aad
adc
push
sbb
in
clc
pop
inc
imul
ror
(bad)
push
xchg
sub
aaa
xor
sbb
push
jl
sub
mov
aas
cmc
inc
out
inc
cmps
add
lahf
adc
mov
out
xchg
popf
dec
scas
packuswb
ds
sbb
outs
fwait
xor
outs
(bad)
sbb
mov
and
xchg
inc
hlt
(bad)
addr16
mov
add
xlat
je
lahf
call
xchg
aad
mov
cmp
push
lds
mov
adc
cmps
out
ffreep
call
out
les
add
jae
jp
(bad)
movs
mov
bound
sub
jp
dec
stos
adc
daa
mov
cmp
pop
push
in
xor
pusha
xchg
cmp
(bad)
jmp
sbb
ds
mov
jnp
repnz
jbe
inc
adc
fldcw
icebp
stos
inc
popa
and
fsub
sub
into
scas
mov
retf
pop
pop
xor
or
mov
mov
idiv
sub
mov
xchg
or
imul
dec
cs
xor
out
add
xchg
mov
mov
stc
sbb
push
adc
dec
inc
push
(bad)
cmp
sub
fadd
inc
pushf
sub
add
mov
push
pop
mov
mov
mov
in
iret
leave
push
push
jp
stos
sub
ror
add
xchg
clc
lods
xchg
push
sahf
sub
add
pop
xor
sub
xchg
jae
inc
inc
push
xlat
ret
dec
adc
ret
in
cli
jmp
xor
dec
int
icebp
and
or
mov
popa
pop
mov
outs
lea
fld
(bad)
(bad)
jmp
out
lea
sahf
pop
scas
mov
ins
rol
pop
les
iret
loopne
mov
les
mov
(bad)
xchg
cs
jns
pop
pop
inc
in
(bad)
in
into
stos
mov
les
mov
push
mov
pop
jmp
ds
fisttp
mov
gs
das
mov
pusha
jo
shl
es
movs
fldenv
mov
sbb
int3
adc
(bad)
gs
push
dec
mov
add
jnp
ss
push
pusha
or
std
div
ja
pop
mov
(bad)
aad
(bad)
jge
lods
mov
adc
cmp
frstor
fdiv
es
aas
std
jl
cmp
xchg
adc
push
mov
mov
int
xchg
fs
(bad)
sbb
iret
sbb
arpl
mov
xchg
imul
loope
jae
inc
jmp
sar
popf
inc
pop
popf
and
iret
or
sub
cmp
mov
push
scas
pop
pushf
mov
pop
rol
mov
in
mov
shr
pushf
cmp
xchg
icebp
(bad)
cli
sti
(bad)
mov
fnstenv
xchg
inc
out
jg
push
push
add
leave
adc
test
(bad)
fcmovne
dec
cmp
adc
clc
push
push
leave
xor
push
repnz
idiv
inc
call
pop
xor
ja
xchg
adc
iret
ret
mov
cs
nop
cmp
xor
push
push
loope
dec
dec
outs
adc
xor
dec
inc
pop
stos
jp
shr
jnp
adc
(bad)
shr
push
fwait
jmp
(bad)
cli
push
enter
cmps
inc
bound
dec
cmp
dec
imul
add
jle
mov
std
out
jl
adc
inc
xor
ins
pop
sub
ds
fld
in
arpl
and
cmp
lds
cmps
daa
sbb
cld
popa
mov
sub
rol
mov
add
stos
add
stos
adc
xor
rol
mov
xchg
leave
ficom
mov
sbb
push
dec
push
aas
in
(bad)
cmp
add
or
jg
aad
sbb
cdq
sbb
(bad)
pushf
adc
call
jge
in
adc
jecxz
inc
dec
push
outs
adc
in
jno
in
xor
stc
retf
into
sbb
clc
mov
push
xchg
jecxz
repnz
sar
xor
lods
mov
and
dec
sbb
and
add
mov
jns
stc
xchg
addr16
add
in
lahf
mov
dec
mov
imul
jb
mov
lahf
ret
test
or
(bad)
sub
xor
push
cmp
or
inc
sbb
xchg
mov
movs
cli
mov
pop
rol
aad
xor
cmc
std
mov
add
in
js
fisubr
outs
out
pop
pop
push
imul
xchg
test
lahf
mov
aas
inc
mov
mov
ins
cmp
and
or
retf
inc
pop
outs
cmp
adc
in
or
aaa
hlt
jg
mov
fwait
mov
fwait
imul
sbb
dec
mov
imul
fwait
(bad)
xchg
loop
int3
pop
repz
jmp
mov
sar
(bad)
loopne
sub
jno
scas
mov
lods
mov
sbb
pop
ins
pop
in
xor
push
cmp
and
js
or
repz
loopne
mov
dec
sub
test
adc
mov
imul
dec
gs
dec
mov
test
dec
dec
js
stos
je
in
sub
neg
ss
xchg
aad
dec
(bad)
int3
popa
mov
sbb
sub
mov
out
cmc
cmp
and
jecxz
nop
les
push
xor
loop
xchg
mov
xor
int3
xchg
aaa
xchg
dec
xor
inc
jns
outs
fiadd
xor
das
push
sti
ret
(bad)
jns
xchg
pop
push
mov
jle
sbb
std
pop
sub
int
push
into
inc
inc
retf
pop
xchg
or
sbb
push
lahf
fdivr
adc
inc
nop
iret
dec
xor
mov
je
mov
cli
int3
or
mov
aam
cmp
push
and
sub
sub
aam
in
sbb
add
iret
les
or
jns
mov
sub
sub
adc
dec
pop
(bad)
mov
fsub
sbb
push
fadd
aam
inc
mov
pop
mov
cmc
mov
pcmpeqd
sub
minps
aas
test
test
scas
add
jmp
add
pop
rcr
in
xor
addps
pop
sahf
jge
xor
jg
cmp
jp
ret
out
iret
adc
scas
jbe
sub
neg
and
ja
mov
mov
sahf
shl
es
jb
out
mov
dec
jle
jne
cmp
retf
mov
enter
(bad)
cs
daa
push
call
jmp
sub
add
movs
out
cld
out
jmp
mov
aam
retf
das
cmp
cmps
add
scas
jle
jmp
cs
sbb
dec
add
sti
push
pushf
fdivr
shl
inc
jmp
pop
rep
mov
std
fadd
or
mov
jns
jmp
in
adc
cli
xor
or
out
inc
xor
mov
jbe
cmps
or
add
fidivr
div
xor
lods
and
sbb
or
and
jnp
imul
push
xchg
lods
iret
ret
call
std
pushf
sti
cmp
cmps
rcl
inc
shl
push
or
cmp
out
dec
ret
cmp
add
daa
aas
jg
push
addr16
cld
out
jb
rcl
dec
xor
xor
dec
or
xchg
push
sub
out
(bad)
imul
mov
je
push
sub
aad
(bad)
movs
push
ins
aad
and
fsubrp
push
in
adc
fstp
data16
xor
js
popa
add
and
xlat
cmps
mov
ret
add
add
cmp
and
imul
push
sbb
inc
xchg
les
sub
sar
push
push
xor
cmps
xchg
add
xor
sbb
jbe
scas
in
adc
scas
sbb
cld
sti
sub
push
repz
in
xor
adc
shl
push
fld
mov
ret
inc
test
push
in
pop
aam
arpl
dec
imul
dec
mov
ret
jo
mov
push
sub
pop
adc
leave
out
shl
xchg
rol
mov
pop
or
and
dec
xchg
cmp
push
cmp
test
inc
mov
les
rcr
outs
pop
dec
sbb
push
loop
sub
cmp
push
(bad)
mov
or
dec
jo
sar
mov
imul
xchg
mov
stc
test
call
sub
mov
cwde
lods
les
stc
fs
add
jne
add
sahf
push
jb
pop
dec
or
sub
jg
idiv
lods
repnz
xor
adc
loopne
push
(bad)
pop
and
pop
je
sar
mov
sbb
mov
(bad)
scas
lods
lock
sbb
and
cmp
mov
push
push
jno
std
(bad)
adc
xchg
loop
mov
dec
outs
and
sbb
mov
mov
stc
je
mov
popf
iret
inc
cmovle
xor
inc
and
adc
jo
inc
stc
movs
push
sbb
clc
ret
aas
pusha
pop
mov
enter
dec
out
push
add
mov
or
popf
cwde
jb
fs
inc
cmps
dec
rcr
std
or
daa
sahf
pushf
or
mov
jp
inc
fbstp
stos
ins
cmp
push
jmp
rcr
push
div
inc
stc
(bad)
adc
movs
sub
add
test
cwde
cld
fild
adc
sar
mov
repz
xor
je
arpl
inc
fbld
cmp
loopne
loope
pop
and
sbb
out
into
cmc
mov
daa
jmp
pop
fisub
adc
push
test
(bad)
mov
aam
hlt
or
and
push
in
lods
mov
pop
push
fisttp
push
mov
fnstsw
in
fcomi
aad
add
out
nop
sbb
or
retf
dec
(bad)
mov
xchg
outs
stos
into
retf
push
add
(bad)
cmp
sub
push
dec
cmp
nop
cmps
jmp
xor
mov
lds
or
lods
inc
test
call
pop
imul
sub
mov
test
shl
scas
adc
fwait
gs
or
xor
or
sbb
or
xlat
jecxz
push
fsubr
(bad)
xchg
ret
and
push
jb
jmp
fs
cmp
dec
jne
inc
cmps
jle
data16
adc
in
cmp
repnz
mov
fs
cld
sub
ss
or
adc
scas
lods
nop
ins
inc
mov
lods
adc
inc
push
pop
add
mov
cwde
mov
dec
add
stos
add
dec
retf
test
rcr
sbb
mov
and
and
int
out
or
sbb
iret
inc
mov
cmps
pop
jne
or
loope
cmp
dec
sar
sbb
cmp
and
in
call
mov
sbb
dec
ss
add
mov
ds
dec
push
mov
xchg
inc
and
test
adc
xchg
pusha
jae
popf
add
fisub
xchg
push
jmp
pop
mov
fcmovnbe
sub
pushf
mov
test
mov
dec
xchg
addr16
pop
loope
stos
loopne
mov
ja
mov
and
int3
sbb
mov
jns
or
pop
jmp
fnstcw
je
mov
ins
and
and
fcmove
pop
adc
or
das
and
ret
fmul
or
fs
fldenv
into
xchg
jne
push
push
(bad)
lds
repnz
shr
setb
dec
adc
mov
sbb
daa
jmp
mov
hlt
mov
mov
jl
ins
xchg
pop
mov
call
adc
outs
or
rcr
adc
mov
inc
push
pop
int3
jge
pop
clc
cmp
xor
mov
sbb
jb
mov
int3
rol
(bad)
adc
ss
outs
cmc
stos
test
dec
(bad)
mov
outs
mov
sub
int
gs
sub
popa
cdq
jne
aas
push
cmp
jmp
jnp
sub
retf
nop
pop
pop
jo
cdq
ja
xchg
fwait
mov
fyl2xp1
enter
int3
addr16
xor
push
neg
jg
ficom
or
pushf
add
adc
push
push
jge
das
mov
hlt
jnp
pop
inc
pop
cmps
sub
fsubr
sbb
mov
pop
sar
or
pop
(bad)
cs
cmp
inc
sub
sbb
pop
icebp
pushf
jns
mov
xor
and
mov
jp
sub
adc
mov
int
inc
or
mov
push
out
cmp
pop
cmc
cs
les
mov
sahf
pop
idiv
lods
ror
adc
inc
loopne
inc
push
push
(bad)
(bad)
pop
out
gs
call
and
fmul
pop
fmul
and
gs
push
and
sbb
cmp
xor
or
iret
test
and
js
or
cmps
inc
sub
ins
test
test
adc
rcr
das
sub
popf
cmp
inc
repnz
pop
push
mov
pop
adc
dec
retf
xchg
outs
xchg
aas
fld
xor
sub
mov
mov
shr
stos
movs
pop
ss
or
or
call
sbb
push
fabs
repnz
or
jmp
cmps
aam
shr
arpl
inc
pop
call
icebp
imul
sbb
or
test
xchg
mov
dec
stos
jge
lahf
int3
sub
sbb
out
ret
jae
out
xchg
popa
leave
call
mov
jb
retf
sub
ja
lds
xchg
pop
fisubr
and
fdiv
mov
js
leave
push
es
leave
and
jmp
fadd
inc
loope
stos
push
scas
mov
xchg
push
pop
sub
mov
adc
loop
xor
push
pop
push
cs
es
jno
and
mov
or
add
fstp
jae
xor
jno
push
fwait
add
or
scas
and
dec
int
(bad)
gs
bound
ins
imul
repz
pop
dec
mov
iret
addr16
cld
out
adc
mov
dec
outs
and
xchg
cmps
scas
mov
jo
out
aas
out
cmp
sbb
mov
mov
or
mov
nop
jp
stos
adc
(bad)
ss
call
mov
add
mov
mov
cmp
pop
aaa
jbe
into
and
push
xor
aas
les
popa
fcom
mov
mov
cmps
lea
mov
pusha
sbb
jmp
loop
aad
mov
int3
push
in
inc
push
xchg
dec
stos
pop
sbb
add
sub
and
mov
je
mov
push
mov
shr
jno
mov
push
sbb
rol
dec
add
rol
pop
mov
and
shl
xchg
test
sar
jnp
sbb
xchg
mov
mov
pushf
inc
sbb
call
sbb
xchg
arpl
pop
pop
data16
call
sbb
jl
dec
stos
icebp
idiv
dec
lahf
(bad)
jo
push
cwde
mov
out
mov
ins
mov
inc
pop
mov
popf
mov
(bad)
(bad)
lahf
or
not
(bad)
jp
and
cmp
retf
ret
ja
fwait
jmp
cmp
xchg
lea
push
movs
(bad)
sub
dec
movs
add
jb
jb
mov
cmp
inc
lds
lea
nop
push
jo
sub
cld
data16
add
mov
inc
inc
or
into
ss
sbb
cmp
mov
inc
jb
fld
or
clc
sbb
mov
mov
cmps
xlat
stos
xchg
test
in
jo
push
repz
sbb
icebp
sbb
sbb
xor
lahf
test
cmp
inc
daa
mov
in
mov
xchg
and
fmul
xor
loop
mov
mov
pop
cli
sbb
(bad)
mov
cmp
push
shl
cmps
xor
mov
mov
test
or
shl
test
sub
dec
or
les
fwait
adc
adc
dec
loope
mov
test
aas
xor
lds
and
clc
add
cld
mov
or
xchg
cli
jne
jns
dec
cmp
push
jle
retf
nop
hlt
aas
mov
les
scas
mov
outs
aam
push
push
movs
cwde
fdiv
loopne
out
pop
imul
cmp
lods
div
inc
fnstcw
and
lahf
mov
adc
push
cld
sti
sub
xor
fsub
inc
xor
and
enter
nop
mov
inc
iret
sbb
lods
ds
bound
imul
inc
or
add
xchg
fldenv
xchg
retf
(bad)
leave
jb
adc
pop
fwait
loopne
push
jns
mov
xchg
shr
loopne
daa
cmps
bnd
cmp
mov
fadd
rcl
push
mov
test
pop
ret
inc
and
stos
in
adc
lock
pop
sub
inc
into
add
push
lds
inc
xchg
pop
xchg
hlt
test
inc
mov
push
dec
fpatan
push
and
add
ret
mov
aam
cmc
sub
mov
mov
aam
nop
jle
sbb
sub
and
mov
imul
mov
mov
in
xchg
xchg
jg
sub
add
sahf
inc
add
pusha
jmp
push
mov
sub
mov
stos
adc
lds
les
call
out
out
mov
xor
push
shl
mov
sbb
xlat
cmp
adc
inc
mov
jne
fsub
mov
(bad)
pop
inc
repnz
shl
dec
not
cmp
in
mov
mov
sbb
pop
in
hlt
pop
inc
sub
gs
out
aam
mov
sbb
jge
jmp
jae
movs
lds
push
dec
adc
ret
xchg
fnstenv
dec
sub
mov
lea
and
fiadd
push
jb
inc
mov
sub
add
cs
add
daa
and
push
push
dec
xor
pop
add
bound
push
mov
cmp
sar
pop
mov
test
(bad)
out
ret
bound
inc
pop
repz
adc
dec
sub
pop
adc
sub
pusha
fsubr
jno
outs
les
ret
jae
jb
xor
adc
inc
jp
repz
mov
je
or
mov
in
pusha
rcl
mov
stc
adc
pop
pop
mov
adc
xchg
mov
inc
pop
adc
adc
nop
sub
push
cmp
mov
clc
sbb
test
bound
retf
loopne
inc
ds
ret
loop
xchg
push
mov
mov
jne
jl
cmp
jge
pop
xor
fdivr
int
xchg
push
(bad)
icebp
and
dec
jnp
pop
pop
jne
ds
in
jg
lods
std
jns
and
test
cmps
inc
ja
lahf
cmp
xchg
sub
ds
(bad)
push
pop
cs
(bad)
jne
sti
add
in
dec
add
fidivr
cs
fstp
mov
mov
pop
retf
imul
lock
pushf
and
mov
neg
ja
jnp
in
jo
or
(bad)
cmc
cmp
jno
lea
dec
sbb
aad
outs
das
mov
add
push
ins
movs
push
aam
or
rcr
xor
inc
cmp
xchg
cli
sbb
cmp
mov
push
test
(bad)
jnp
cmpxchg
pop
push
(bad)
sub
ret
jbe
push
(bad)
and
stos
dec
pop
xor
jo
jbe
jmp
pop
xchg
pop
xor
shl
rcr
mov
jmp
vmwrite
cmp
cmp
sbb
hlt
adc
mov
fld1
aam
in
adc
aad
stc
dec
es
fwait
scas
sar
push
lea
xchg
jmp
jge
fidivr
les
aas
pushf
shr
retf
popf
ins
push
pop
gs
fistp
xchg
stc
es
mov
pushf
loope
mov
daa
and
push
cli
scas
push
out
xor
das
sahf
jo
in
in
and
xor
xchg
sbb
dec
rol
jae
out
ror
mov
fwait
stos
pusha
iret
int
jg
xchg
mov
or
mov
jle
jno
nop
ins
mov
jno
push
dec
ret
xlat
dec
or
dec
pop
mov
ins
or
and
mov
mov
xor
sahf
cmp
into
jecxz
pop
ins
and
push
and
adc
icebp
add
sti
cmp
js
mov
xchg
jle
cmp
push
fdiv
jnp
(bad)
stc
bound
xor
xchg
dec
sbb
cmp
adc
pop
leave
sbb
call
adc
or
mov
or
iret
add
stos
gs
mov
inc
lea
jg
or
mov
sub
pop
ins
mov
mov
cs
jae
push
lea
inc
inc
jmp
movs
(bad)
clc
mov
jmp
xor
retf
adc
ins
jnp
ret
and
out
imul
add
push
mov
not
sbb
inc
mov
push
fcmove
inc
fwait
in
arpl
mov
arpl
fcmovb
outs
int
cld
push
not
push
imul
push
mov
les
arpl
mov
retf
mov
aam
dec
aad
out
push
js
movs
mov
scas
jg
add
(bad)
out
xor
pop
test
js
add
into
jmp
ret
and
cld
jns
in
nop
(bad)
loopne
jp
pop
dec
fcomp
lock
ins
outs
aad
sahf
or
mov
jbe
push
rol
frstor
in
dec
fwait
(bad)
cs
cmp
add
call
cs
lods
mov
push
or
es
popf
push
into
inc
in
stos
sbb
jnp
adc
aad
les
repz
pusha
pop
(bad)
push
xchg
popf
or
in
pop
mov
lea
pop
mov
push
fwait
mov
loop
push
fistp
xor
cld
sti
icebp
sbb
mov
jo
retf
add
(bad)
push
and
clc
mov
lds
mov
xor
push
mov
sub
add
adc
lods
sub
repnz
xor
push
sbb
movs
mov
and
xor
into
add
xor
fcmovnu
pop
push
call
pusha
mov
lock
push
push
movs
dec
xchg
movs
std
scas
pop
mov
retf
lods
loopne
mov
aam
jecxz
test
imul
scas
push
sub
cmp
fmul
push
inc
dec
fsub
xor
or
out
int
nop
and
jae
fstp
add
fdiv
aam
adc
add
push
(bad)
es
out
jmp
bound
int3
and
arpl
adc
mov
xchg
int3
leave
cmp
imul
repz
dec
xor
idiv
mov
jb
frstor
rol
jg
imul
inc
mov
sbb
in
inc
xchg
mov
jo
movs
push
fdiv
into
push
int
cmp
push
xchg
iret
lea
(bad)
aas
sub
and
test
or
std
in
push
cmps
add
adc
repz
aas
std
sub
xchg
loope
mov
add
(bad)
fnsave
(bad)
mov
and
inc
add
sbb
out
xor
aas
xchg
xor
movs
je
cmp
pop
aaa
mov
lahf
iret
adc
retfw
shr
xor
sub
sbb
add
retf
cli
push
adc
call
jns
call
mov
push
mov
or
jmp
pop
xchg
jae
in
jb
retf
fst
movs
jae
stos
mul
cld
jne
hlt
jne
push
xlat
movs
ins
sub
xor
fiadd
mov
and
call
sub
push
test
mov
in
pop
sbb
pop
add
jp
pop
cmp
inc
mov
js
inc
sbb
mov
inc
push
test
das
dec
push
xchg
mov
pop
jp
loop
call
push
mov
pop
sti
(bad)
std
mov
cmp
les
mov
xchg
enter
ret
(bad)
xchg
in
sbb
imul
test
scas
stc
jecxz
mov
hlt
or
in
loopne
pop
pop
mov
in
xor
fst
jp
add
dec
jne
jl
xor
adc
or
iret
cmc
jno
daa
ins
jae
ror
std
dec
push
sti
test
pop
dec
jmp
xor
jmp
pop
div
mov
inc
retf
or
xchg
cmps
cmc
mov
daa
(bad)
cmc
adc
sbb
xor
or
pop
cmc
ret
cmps
jp
sar
cmp
inc
inc
enter
mov
mov
pop
inc
lahf
mov
or
(bad)
in
ss
cdq
and
xlat
lea
mov
(bad)
and
mov
loopne
mov
loop
mov
aas
frstor
shr
ins
or
add
mov
test
inc
sahf
push
sub
sub
sub
cld
adc
push
aad
or
in
test
and
fisttp
loopne
xor
xchg
dec
(bad)
xchg
(bad)
push
jmp
bound
(bad)
dec
shl
add
in
or
(bad)
mov
out
ret
add
adc
push
lea
pop
dec
in
arpl
pop
nop
mov
ins
push
dec
push
in
add
test
mov
nop
jmp
jae
cdq
push
lahf
sub
pop
loop
add
js
ret
mov
mov
cmp
fsub
push
mov
in
sti
cld
loope
movs
sahf
add
jo
sub
and
lock
jecxz
out
bound
xchg
inc
and
jnp
int
cli
lods
pop
jbe
add
mov
jbe
fdivr
sti
or
xchg
xchg
and
mov
jns
les
test
(bad)
movs
test
rcr
add
ss
sbb
pop
loope
jle
inc
(bad)
push
mov
ror
fsubr
ret
out
xor
mov
pop
out
xchg
xorps
jp
fcomp
int
ret
xchg
sub
or
std
xchg
stos
pop
or
pop
ins
les
xchg
pop
dec
jle
fcmovnb
or
cmp
psubw
mov
out
add
mov
mov
mov
(bad)
ds
fisub
cmp
or
adc
pop
sub
jmp
cwde
mov
or
pop
mov
rcr
jg
mov
cmc
jmp
lods
inc
push
shl
sub
call
add
jne
jmp
jmp
cs
inc
cmps
push
lds
leave
in
gs
xor
or
add
and
cmp
xor
sbb
xor
adc
sbb
xor
fadd
mov
inc
pop
inc
mov
xchg
cmp
movs
jno
jmp
pop
jbe
jns
pop
mov
pop
in
inc
cmp
rcl
clc
call
les
ja
or
fwait
hlt
xor
jb
xor
fdivr
xchg
fincstp
xor
bound
shr
sub
daa
mov
imul
sbb
pusha
addr16
(bad)
or
jno
push
call
in
imul
inc
addr16
fimul
jmp
and
sbb
jae
xchg
cs
or
xlat
pop
cmp
fs
in
rol
ret
(bad)
repz
dec
std
sbb
push
ficomp
popf
sti
stc
cmp
ret
loopne
lds
aaa
in
fdivrp
aaa
(bad)
mov
ins
jg
xchg
mov
jb
mov
mov
clc
pop
xchg
test
mov
call
popa
outs
inc
inc
cmp
pop
movs
(bad)
rcr
mov
ins
mov
ss
dec
aas
movs
popa
jp
cs
push
aas
xor
sbb
dec
jne
(bad)
pop
mov
adc
test
div
push
jb
(bad)
fidivr
ja
and
test
imul
outs
pusha
rcl
inc
movs
test
icebp
popf
popa
add
ds
sub
sub
aas
mov
jle
fisubr
dec
hlt
xor
in
aas
push
std
es
push
cmp
cdq
data16
rcl
pop
jmp
push
mov
xchg
xor
(bad)
pop
bound
mov
or
mov
or
(bad)
cmps
sar
lahf
es
mov
adc
mov
xchg
xor
xchg
cmps
stos
nop
enter
jge
inc
mov
jae
jg
inc
rcl
adc
mov
add
(bad)
mov
cli
cdq
(bad)
adc
mov
call
jb
jns
outs
lods
xor
or
retf
je
adc
rcl
add
mov
mov
movs
push
or
lds
mov
or
es
mov
jnp
xchg
js
pop
dec
mov
inc
sar
pusha
adc
xor
lahf
and
movs
sar
xor
inc
aaa
nop
and
xor
push
pusha
and
and
test
push
fcomp
outs
jl
int
jle
ins
ins
mov
sbb
leave
js
jmp
xor
stos
lea
push
xlat
imul
pop
xor
push
imul
(bad)
mov
scas
mov
mov
data16
es
sub
add
jmp
hlt
movs
dec
cmp
adc
ret
imul
jne
dec
lahf
and
shl
cmp
mov
and
dec
fwait
mov
pop
lods
shl
outs
cmps
call
and
xor
push
sub
jmp
push
bound
sub
in
mov
cmc
jle
inc
xchg
sbb
jo
div
(bad)
pop
cdq
pop
out
cwde
hlt
xor
jmp
test
push
sub
loopne
push
xchg
inc
(bad)
ss
das
xchg
cwde
push
retf
test
(bad)
adc
cmp
or
cmp
mov
mov
daa
cld
imul
jno
out
ret
jecxz
jmp
pop
cmp
sub
sbb
aam
xor
inc
mov
mov
aaa
mov
push
in
or
(bad)
sub
movs
loopne
or
jl
call
xor
inc
in
sub
lock
sbb
sahf
test
ret
in
mov
push
mov
push
movs
mov
repz
fild
mov
xchg
push
add
cmps
fidiv
xor
outs
aad
mov
jecxz
movs
xchg
aam
mov
stos
outs
mov
pop
cmp
out
leave
addr16
cmp
push
push
mov
pop
sbb
outs
and
div
fwait
lds
int
int
pop
mov
and
cli
xor
mov
xchg
cmp
mov
mov
jne
sbb
pop
sub
mov
sbb
es
adc
and
cli
pusha
cld
push
js
test
inc
pop
ss
sbb
pop
stos
add
test
dec
sbb
and
fwait
xor
sbb
mov
mov
cmp
push
jecxz
iret
push
sub
inc
push
fdiv
add
je
inc
ins
iret
cwde
jg
ret
fwait
pop
xchg
add
popf
aam
dec
out
aaa
js
scas
jns
mov
add
sub
dec
cmp
aad
scas
push
sbb
out
mov
xor
pop
jecxz
bound
mov
(bad)
mov
out
sar
aam
pop
sbb
xchg
ja
mov
test
cld
mov
mov
cs
in
dec
outs
push
mov
stc
adc
mov
out
adc
dec
dec
loop
push
ins
sub
shl
outs
pop
ds
jp
sbb
xchg
mov
(bad)
ret
dec
out
or
aas
push
jg
sbb
pop
mov
ret
dec
lods
gs
mov
cld
or
shl
xchg
push
push
daa
push
stos
mov
cmp
outs
add
rcl
mov
outs
xchg
inc
xchg
mov
mov
add
pop
int
pop
lds
jno
sar
in
rol
scas
(bad)
jb
(bad)
mov
dec
cmp
mov
arpl
int3
and
inc
pop
inc
imul
cmp
add
sbb
cmps
adc
sti
dec
xor
stos
fwait
add
mov
or
and
jne
mov
jp
adc
mov
mov
imul
(bad)
call
in
enter
nop
inc
jne
arpl
mov
dec
cmc
jmp
comiss
or
lea
out
punpckldq
push
ds
sbb
outs
xchg
xchg
push
push
imul
or
or
lahf
test
in
fmul
ins
sub
or
call
vrcpss
mov
pop
shl
mov
bound
test
out
sti
stos
in
call
sbb
push
jno
mov
and
push
outs
shl
mov
lods
sub
mov
add
aad
sbb
sbb
jle
call
inc
lds
cmp
dec
push
es
idiv
mov
add
push
mov
mov
sar
inc
push
cmp
xchg
sub
add
and
mov
test
leave
jmp
sub
push
pop
or
call
das
jmp
xor
(bad)
or
xor
arpl
add
scas
sub
in
jbe
lods
cmps
pop
cmps
mov
xchg
scas
test
xchg
mov
popa
mov
imul
xor
mov
popa
fnsave
aad
sub
jmp
or
data16
addr16
xchg
xchg
push
cld
add
cmps
pusha
stos
fwait
inc
mov
scas
dec
mov
retf
xor
xchg
outs
mov
popf
hlt
and
cld
les
fimul
and
and
test
xchg
test
shl
add
mov
cwde
add
mov
xchg
jb
pop
adc
fdivr
dec
xchg
mov
(bad)
stc
mov
pop
adc
pop
pop
inc
test
aas
pop
scas
xchg
out
mov
inc
jmp
aam
sub
pop
mov
dec
in
stc
sbb
daa
jne
cmp
ss
mov
mov
add
push
mov
(bad)
iret
mov
popa
xchg
add
sub
adc
stos
add
sub
dec
lock
out
push
adc
mov
fbstp
inc
dec
push
pop
xlat
jnp
jno
jle
or
mov
jl
cmc
mov
xchg
adc
pop
jmp
sbb
mov
loopne
and
daa
stos
stc
mov
sub
xchg
inc
lods
add
cmp
aas
mov
cwde
mov
gs
pushf
cmc
cmp
pop
adc
pop
jg
loopne
push
jbe
mov
js
cld
repz
mov
dec
call
int
sub
imul
or
or
aas
loopne
add
or
mov
cmp
movs
adc
and
addr16
adc
loop
xor
retf
inc
pop
sbb
push
leave
enter
cmp
mov
dec
mov
cmp
add
jge
mov
aam
mov
cmp
fistp
xor
xor
mov
jo
repz
aaa
cmps
mov
loopne
stos
pop
sbb
rol
and
out
sub
popa
cmp
pop
fbstp
aad
das
push
xor
scas
mov
sbb
hlt
and
add
mov
push
push
xor
in
and
pop
mov
je
and
rcl
inc
xchg
es
sub
inc
jmp
inc
stos
fist
mov
mov
xor
stc
inc
push
cmp
cdq
sbb
(bad)
mov
pop
(bad)
out
xchg
cmps
push
call
push
xor
push
inc
push
scas
mov
fnsave
cld
mov
into
xchg
stos
cwde
sbb
(bad)
movs
les
inc
test
add
inc
fcom
pop
push
mov
sbb
test
jp
cli
jmp
lods
adc
aaa
retf
add
inc
stos
bound
and
cwde
mov
stos
or
jmp
fmul
dec
loopne
pushf
jl
out
mov
pop
cmp
shl
mov
arpl
dec
shl
xor
mov
popa
scas
(bad)
mov
cli
retf
cmps
sub
add
mov
mov
rol
cwde
cmp
pop
fwait
(bad)
cmp
push
aad
scas
and
xor
sbb
pop
sbb
lea
and
mov
sub
sbb
sbb
(bad)
aam
sub
popa
aad
or
push
add
in
jae
push
cmp
loope
punpckhbw
icebp
pop
xchg
out
in
dec
cmc
int
mov
sub
xor
pop
clc
cmp
hlt
sub
inc
and
push
jmp
jg
popa
sub
xor
dec
lds
xchg
loop
imul
js
mul
mov
jmp
and
jbe
in
adc
mov
hlt
xchg
jae
fldl2t
pop
je
and
mov
dec
(bad)
lods
xor
pop
push
dec
in
mov
mov
test
add
movs
and
or
inc
mov
mov
or
nop
jbe
icebp
mov
(bad)
sub
sub
cmps
clc
push
and
add
jge
imul
xor
add
mov
inc
ja
and
nop
pop
loope
mov
sbb
mov
mov
adc
in
iret
pop
std
xchg
movs
mov
aas
adc
add
mov
rcl
sbb
fisub
sub
ss
rol
pop
nop
ret
jne
fcmove
xchg
xor
in
loopne
les
dec
xor
mov
bound
std
leave
movs
aad
add
lahf
xchg
and
mov
add
imul
rol
jno
fisub
call
push
inc
in
sbb
add
jecxz
hlt
jle
scas
ins
xor
jp
jno
out
cs
popf
rol
xor
sbb
jb
(bad)
clc
adc
movs
dec
adc
sbb
(bad)
push
sbb
mov
inc
pop
dec
mov
adc
mov
jmp
sub
inc
int
and
jl
loop
push
fidiv
adc
lea
mov
ror
dec
sar
mov
xor
gs
or
mov
push
and
outs
scas
addr16
retf
test
pushf
out
cmp
adc
adc
xchg
jmp
xchg
or
jae
mov
mov
test
cmp
or
dec
xchg
sbb
cmp
sub
sahf
inc
out
in
or
(bad)
jle
mov
retf
pushf
dec
ins
xchg
pop
add
cmps
(bad)
aam
movs
mov
loope
pop
sub
sbb
and
cld
ror
add
xor
sub
nop
int
pop
repnz
loope
ror
mov
ss
jno
or
hlt
je
fsub
aaa
dec
jb
fwait
lds
imul
pop
popa
adc
bound
enter
je
cmp
mov
mov
shl
jno
and
shr
mov
mov
inc
cmp
data16
add
lock
retf
dec
push
fst
clc
in
mov
icebp
mov
mov
aad
int
shl
cld
aas
xchg
cli
mov
mov
js
mov
movs
je
sub
mov
movs
enter
mov
aas
stos
adc
fld
(bad)
cli
cld
cmp
in
movs
sahf
shl
(bad)
into
fs
ins
and
imul
frstor
inc
cli
or
dec
mov
das
rcr
cmp
lahf
je
movs
dec
enter
sub
clc
ror
or
fmul
cmp
push
mov
mov
es
sbb
cdq
gs
repz
fst
dec
and
mov
imul
cmp
or
sbb
bound
dec
sbb
gs
in
add
sar
les
fist
dec
jp
adc
cmp
dec
push
mov
lds
popa
jno
cmp
out
mov
push
shl
jno
(bad)
jae
mov
jmp
data16
mov
enter
or
aaa
dec
adc
call
mov
jl
test
fcomip
fadd
mov
fst
into
push
jle
pusha
push
xchg
(bad)
fcomp
jecxz
fisttp
(bad)
stc
imul
call
cmp
xchg
adc
sbb
(bad)
not
xor
int3
in
pop
enter
in
in
or
in
jo
stc
push
scas
je
ja
(bad)
push
and
rol
pushf
jo
cmps
push
push
das
inc
jae
mov
ja
add
fidiv
hlt
fnsave
cmp
daa
lods
xor
push
mov
rol
push
and
mov
sbb
retf
adc
push
stc
je
out
xchg
popa
adc
pop
jns
xchg
jecxz
mov
icebp
pop
pop
adc
jmp
sbb
cs
adc
cs
lods
sub
sub
out
dec
lea
xchg
xor
xchg
mov
inc
les
clc
mov
aaa
xor
push
cdq
ret
adc
cmps
or
sub
std
in
jl
cmp
or
or
loope
out
add
pop
inc
dec
mov
add
mov
adc
repnz
int3
sbb
jo
mov
lea
mov
xor
pop
xor
adc
push
inc
in
push
leave
mov
sahf
jbe
inc
ja
sar
sub
test
jo
mov
sar
pop
icebp
or
nop
fist
inc
dec
mul
jg
cmp
add
jno
daa
inc
jnp
add
mov
ficom
fld
push
cmps
std
mov
pavgw
pop
sub
pop
add
inc
aaa
ins
push
imul
pushf
lock
jbe
mov
pop
mov
sbb
push
jp
out
(bad)
daa
xchg
sar
or
cwde
xor
mov
lds
or
or
fsub
dec
push
imul
addr16
lods
and
lods
add
(bad)
mov
dec
adc
xchg
or
cld
popa
pop
xor
lods
cmp
mov
and
push
or
xchg
cmp
aas
sti
nop
enter
push
test
push
fst
pop
xchg
js
in
sbb
mov
int
gs
daa
call
pushf
int
xchg
rol
and
ret
imul
movs
je
scas
mov
cmp
pop
mov
cli
push
add
cmp
xor
inc
not
push
adc
movs
jg
out
xor
jne
push
ret
(bad)
jmp
and
inc
fwait
sbb
pop
xor
push
push
pop
dec
loop
inc
les
outs
mov
add
sub
and
(bad)
(bad)
movs
mov
mov
ins
dec
mov
and
jp
fwait
mov
rcl
cmp
int3
mov
adc
jnp
and
(bad)
pop
ja
cmp
cld
(bad)
ret
jl
mov
sub
scas
dec
cwde
jb
rol
vcmppd
aad
dec
jae
test
outs
std
(bad)
int
cdq
sbb
lock
inc
sub
mov
xor
mov
mov
lea
scas
dec
stc
xchg
rcl
or
stc
jp
mov
pop
into
jle
and
daa
aad
xor
cmps
push
sbb
xchg
push
sar
xchg
fwait
push
fistp
repz
test
cs
cmp
aam
or
in
loopne
shl
xchg
or
jecxz
icebp
xor
or
popf
xchg
jb
ja
pushf
sub
ror
test
out
out
jmp
int3
in
adc
push
mov
leave
imul
fld
or
inc
xor
bswap
test
sbb
dec
in
add
inc
mov
addr16
mov
ins
stos
(bad)
aam
push
loop
or
lods
sub
xor
mov
stc
xchg
cs
(bad)
fwait
mov
jo
pop
fsub
cmp
mov
sbb
mov
pmulhuw
sahf
jae
jg
lods
xor
rcl
inc
dec
fbstp
sbb
(bad)
out
dec
xchg
push
or
or
xchg
add
lahf
and
fs
jns
push
repz
inc
dec
mov
retf
repz
dec
sub
sbb
rol
mov
into
shl
xor
or
sub
clc
dec
mov
inc
mov
push
and
inc
scas
cmp
lahf
xor
dec
and
adc
pop
in
and
aas
cmps
js
push
sahf
cmp
jmp
loopne
mov
iret
and
in
call
pop
sti
fld
cmp
ret
mov
ss
imul
sar
sub
daa
in
jnp
test
mov
pop
xchg
sbb
pop
pop
xchg
popaw
outs
stos
inc
bound
popa
(bad)
scas
push
mov
repz
xchg
sbb
xor
stos
push
jl
cdq
test
ins
loop
inc
mov
aas
stc
mov
test
loop
fidiv
or
push
mov
out
popa
fsub
retf
mov
jne
mov
and
(bad)
jmp
jmp
stos
xchg
dec
movs
shl
mov
les
stos
ror
or
inc
ins
cmp
(bad)
pop
mov
push
cmps
sub
sub
in
call
(bad)
add
jne
mov
sbb
imul
adc
popf
inc
repnz
test
lock
mov
push
aam
pop
shl
mov
sub
mov
imul
xchg
adc
add
jmp
cmp
std
cdq
and
cmp
repz
arpl
movs
jmp
jne
cli
imul
into
xor
sbb
mov
jmp
inc
repnz
xor
sar
sub
push
dec
adc
dec
add
int
dec
and
inc
pop
push
pop
mov
and
push
mov
mov
mov
jne
out
and
push
jmp
std
ins
push
enter
dec
scas
call
div
push
ja
retf
adc
ror
mov
scas
cs
jbe
enter
cmp
sub
jo
aaa
push
dec
jns
ja
sub
xor
or
inc
sub
das
dec
push
or
outs
inc
or
idiv
xor
jbe
and
add
dec
xchg
xchg
sar
out
dec
cdq
cld
pop
sbb
jbe
das
add
cdq
xor
inc
cwde
mov
cs
jmp
lds
aad
push
in
pshufw
call
lods
sub
inc
ja
xchg
ss
xchg
pop
pop
pop
push
sub
leave
(bad)
(bad)
repz
adc
add
inc
in
retf
lea
pusha
out
nop
cwde
cwde
outs
cmp
xchg
xchg
test
imul
mov
mov
xor
test
push
xchg
(bad)
jl
push
push
jmp
shl
add
mov
mov
cmp
iret
js
popf
cmps
ja
test
pop
xor
xor
push
rol
or
popf
adc
lock
sbb
jmp
ss
mov
and
inc
out
and
(bad)
sti
loop
or
add
mov
jge
das
imul
(bad)
out
mov
das
js
mov
inc
jnp
cmps
mov
jg
icebp
sbb
cmp
test
fldcw
push
or
add
mov
aaa
pop
mov
data16
or
xchg
in
or
xor
mov
sub
pop
pushf
push
xchg
pop
sbb
out
nop
inc
out
ss
(bad)
enter
and
push
call
adc
sysret
xor
jmp
mov
xchg
pop
aaa
lods
sahf
ja
movs
lahf
add
push
cld
sbb
sti
push
push
mov
inc
lock
fld
pop
loop
fsub
or
nop
mov
cmp
or
push
jp
pop
pop
cmc
cmp
and
lahf
dec
aad
ret
(bad)
enter
xchg
cs
(bad)
div
mov
pop
fiadd
ins
xchg
jmp
cmp
or
sahf
lahf
daa
clc
in
es
inc
mov
jmp
xor
in
jl
xchg
add
cmp
lahf
cld
inc
int
push
mov
(bad)
cmp
xor
xor
mov
es
push
jle
push
or
rcr
scas
sbb
pusha
repnz
or
xor
shr
fnstsw
mov
mov
push
cmp
gs
push
jmp
or
xor
inc
scas
and
cmp
mov
dec
jp
mov
adc
leave
push
jle
or
shl
dec
lods
jecxz
jae
stc
call
sub
fs
aaa
stos
inc
(bad)
xlat
and
imul
out
aas
inc
popa
pop
mov
(bad)
in
adc
enter
ret
(bad)
fsub
jp
lahf
into
mov
mov
adc
rcl
daa
mov
jl
cmp
jmp
inc
jp
mov
add
cmp
out
ds
or
fsub
pop
mov
pop
in
dec
call
data16
cmps
aad
icebp
icebp
jb
push
in
cld
iret
pop
jne
pop
mov
iret
out
jge
cmp
mov
mov
outs
inc
mov
dec
xor
push
daa
mov
sub
xchg
cdq
test
dec
mov
xchg
mov
scas
out
stc
repnz
or
jmp
leave
mov
push
je
mov
push
inc
xchg
pop
sub
(bad)
mov
xchg
outs
cmp
inc
aam
outs
loop
popf
fimul
cmp
cs
mov
and
stos
leave
mov
sbb
xor
sbb
inc
(bad)
hlt
sbb
sar
mov
out
jecxz
int
dec
jmp
shr
ja
cmc
call
stos
cs
mov
loopne
jns
cmp
jmp
push
jne
retf
mov
push
or
call
jle
fdiv
xor
and
cmps
and
cs
push
push
pusha
xor
(bad)
enter
loop
fisttp
jmp
loope
movs
mov
and
gs
mov
cmp
and
(bad)
inc
xacquire
test
push
sahf
pusha
clc
xlat
mov
repz
mov
arpl
cli
dec
inc
cmps
mov
hlt
cmp
inc
(bad)
pop
mov
sbb
scas
sbb
shl
mov
jp
mov
cli
enter
jp
dec
adc
arpl
xor
inc
mov
scas
(bad)
sub
cmps
lea
push
jl
cmp
ficomp
mov
mov
jmp
and
mov
dec
and
jecxz
xchg
aam
add
dec
test
and
jmp
stos
aam
and
cmc
repz
pop
jae
add
pop
pop
mov
popf
adc
mov
fnstenv
pop
jo
in
push
sti
or
inc
out
popf
ss
fdivr
inc
shl
push
adc
loopne
or
push
sbb
mov
fabs
sbb
sub
rcl
mov
in
dec
leave
mov
xor
jbe
mov
xor
fdivr
mov
mov
jecxz
aam
push
mov
add
add
xor
xor
inc
push
add
(bad)
ror
sub
mov
fs
(bad)
std
loop
mov
cmps
stos
jg
mov
dec
leave
cmp
popa
jle
xor
adc
jp
push
fcomp
pop
xchg
ja
mov
jp
push
rcl
xchg
mov
jb
and
ss
in
aam
add
adc
popf
push
rcl
sbb
enter
jl
scas
adc
int
dec
sbb
dec
iret
mov
test
ins
jle
pop
jnp
and
xchg
fwait
push
movs
and
xor
mov
push
adc
dec
pop
inc
repnz
(bad)
out
clc
xor
mov
aas
xor
mov
(bad)
jb
movs
inc
js
fist
pop
test
sbb
push
lea
fld
mov
mov
cli
push
lea
add
mov
cld
xchg
in
jno
aad
leave
sbb
jl
push
hlt
sub
xchg
xchg
movs
sbb
pop
inc
jae
fcom
aas
outs
mov
sbb
neg
sbb
mov
test
xor
scas
adc
mov
cmp
lods
inc
xchg
xor
pop
cwde
pop
gs
adc
cmc
mov
hlt
sub
mov
mov
nop
inc
inc
cld
mov
jae
mov
mov
xor
call
iret
retf
iret
pusha
mov
fimul
retf
pop
imul
jne
std
push
jb
outs
(bad)
(bad)
retf
std
or
push
cs
or
in
cmp
push
xchg
ds
loopne
mov
ss
adc
pop
inc
out
pop
jmp
in
add
cdq
nop
or
imul
pop
mov
in
lods
scas
ins
jmp
mov
push
out
in
sub
mov
gs
xor
pop
test
rcr
xor
mov
cdq
mov
retf
lds
adc
ja
repnz
pop
xchg
jmp
and
sti
arpl
jns
jae
adc
jl
mov
inc
jp
push
repnz
(bad)
repnz
sub
jmp
adc
fadd
popf
icebp
test
or
and
push
pop
int3
pop
std
ins
rol
in
dec
or
aam
stos
stos
rcl
js
pop
gs
jne
xchg
(bad)
cmps
nop
lods
movs
sub
mov
aas
bound
and
pop
push
jl
retf
fsub
sar
push
inc
push
lods
sbb
cmp
(bad)
pop
outs
or
test
add
fcomp
movs
or
sbb
es
loope
add
mov
leave
pop
daa
stc
neg
stos
push
adc
std
cmps
test
retf
iret
(bad)
(bad)
out
test
push
stos
mov
stos
loope
mov
fstp
cmp
mov
stos
xchg
push
pop
lock
mov
repnz
and
push
fs
sbb
or
cmc
ret
or
mov
fs
xor
icebp
sbb
jp
fs
retf
cmp
(bad)
cmp
add
inc
mov
sub
mov
bound
js
fidiv
stc
imul
push
mov
ds
push
aam
jg
icebp
inc
popf
dec
inc
xchg
call
test
int
and
int
int3
jo
(bad)
mov
nop
xchg
sahf
push
or
inc
(bad)
gs
cmp
sbb
cmp
mov
je
icebp
cdq
pop
sub
in
lods
jb
cld
rcr
fisubr
retf
mov
test
adc
lds
fs
mov
push
cdq
mov
das
inc
mov
add
iret
ins
out
outs
xor
scas
ins
mov
pop
jle
xor
xor
repnz
push
(bad)
fisub
cmp
inc
xlat
movs
test
inc
mov
fsub
aad
std
xor
sub
cmp
xlat
ja
ja
mov
fiadd
mov
sub
xchg
fs
lock
cmp
push
xlat
les
lea
(bad)
out
in
push
test
and
cld
adc
jnp
jae
pop
enter
mov
movs
cmp
adc
jnp
push
add
jmp
xor
nop
inc
add
push
popf
sub
imul
es
xchg
jmp
fidivr
pop
mov
dec
mov
test
inc
fldenv
jae
adc
fsubrp
jecxz
jne
lds
test
ret
(bad)
aam
push
lods
jbe
push
sub
mov
adc
xchg
scas
(bad)
call
and
sub
fdivr
jo
or
push
ret
hlt
sub
xchg
inc
aaa
lahf
inc
adc
mov
ret
inc
jnp
mov
fnstenv
mov
xor
test
push
add
sar
xchg
adc
dec
mov
sbb
not
cwde
adc
xchg
daa
pusha
jecxz
add
gs
and
dec
shl
mov
dec
sub
pop
add
pop
fisttp
pop
lods
sbb
cmp
int3
pop
shl
sar
pop
shr
mov
rol
lahf
in
add
jnp
xor
ret
push
jecxz
inc
gs
xchg
test
jl
lahf
inc
outs
scas
lea
pop
ins
mov
call
jge
push
mov
push
dec
cmps
pop
push
pop
je
push
into
(bad)
dec
call
jo
test
or
dec
fild
call
mov
sub
cmps
pop
sbb
pop
cmc
sbb
xor
int3
js
mov
jp
jae
stc
pop
jp
mov
test
sbb
push
pop
mov
xchg
sti
imul
fcmovnbe
(bad)
push
jp
cli
add
cmps
pop
or
aam
mov
xchg
and
in
repnz
out
mov
or
repnz
cli
sar
cs
repz
mov
push
or
jp
pop
cld
aam
adc
pop
or
(bad)
cmp
inc
(bad)
sti
xor
aam
xor
jge
jge
xchg
dec
or
(bad)
div
lds
loopne
loop
and
sub
nop
pushf
ret
ds
das
dec
test
inc
pushf
out
xor
xchg
inc
sbb
frstor
fucomip
push
sbb
mov
enter
fmul
jnp
add
movs
jne
pop
ds
jo
mov
pop
shl
sbb
jl
call
or
and
mov
lds
mov
pop
xchg
and
inc
cmp
movs
bound
cs
out
dec
cmps
movs
adc
aam
adc
sub
iret
fldcw
and
sbb
and
lods
jae
xchg
adc
jp
inc
enter
mov
cli
lods
push
loopne
xchg
and
cld
(bad)
xchg
and
int
pop
scas
push
push
retf
movaps
dec
push
ins
std
cmp
ja
scas
and
ja
retf
add
xlat
aas
in
push
(bad)
pop
outs
icebp
cwde
adc
inc
jno
xchg
js
imul
inc
data16
inc
and
popf
adc
inc
ss
(bad)
jb
mov
push
mov
inc
rcr
pop
sbb
idiv
aaa
jo
add
inc
dec
shl
mov
push
loopne
push
or
adc
dec
lods
pop
(bad)
adc
xor
pop
movs
sbb
sub
shr
push
fnsave
push
cdq
xor
pop
shr
cmp
jnp
sti
inc
xlat
enter
mov
mov
ficomp
movs
mov
rol
mov
add
xchg
test
push
es
test
loope
jmp
push
outs
(bad)
push
mov
pop
cmp
mov
mov
lock
repz
sub
jmp
inc
pop
mul
inc
pusha
aad
jg
adc
int3
xchg
add
mov
clc
sub
push
stc
and
(bad)
sub
cmp
(bad)
xor
imul
call
lea
ins
xor
jno
scas
sbb
and
ss
pop
or
(bad)
in
and
popa
jno
pop
mov
sub
ja
add
ins
jle
dec
mov
mov
cmc
and
xchg
pop
cmc
add
xor
lock
ins
test
push
add
ds
cmp
fisubr
xchg
movs
into
or
push
mov
jp
or
dec
fs
cmp
jp
xor
mov
(bad)
cmp
mov
in
test
mov
xchg
xor
cmp
or
jl
pop
xor
xlat
call
push
call
mov
adc
jge
cmp
fwait
sar
mov
mov
xor
repz
add
add
fs
pop
test
push
fst
pop
add
hlt
fsubp
test
and
sub
jae
sub
or
sahf
add
das
or
and
inc
cmp
sbb
icebp
pop
and
das
mov
cli
inc
stos
cmp
(bad)
cmc
nop
adc
aad
adc
and
xor
mov
clc
ins
adc
jne
outs
leave
jge
push
out
adc
xchg
(bad)
mov
xor
and
and
sbb
scas
outs
jecxz
dec
fcmovne
loope
addr16
push
cmp
xchg
jp
mov
outs
mov
mov
sbb
in
xor
loope
cmp
inc
inc
lods
fyl2xp1
cmp
lea
adc
lea
jnp
movs
stc
retf
addr16
jns
sbb
dec
sbb
test
fwait
dec
cmp
sbb
dec
test
out
jb
icebp
or
sbb
mov
pop
mov
popf
and
mov
pop
push
sti
mov
pushf
cmp
fucom
je
sub
xchg
add
xchg
inc
mov
jns
ss
push
fst
ins
xor
pushf
mov
ret
push
pop
and
clc
lahf
pop
outs
mov
add
jb
sbb
in
xchg
pop
dec
ss
sub
inc
cmp
mov
adc
scas
jnp
cmp
xchg
sbb
dec
and
ret
or
adc
jo
in
popf
xlat
mov
in
aaa
out
mov
jmp
adc
sub
frstor
inc
inc
das
fmul
and
fcomp
jle
inc
popf
scas
das
lea
pop
and
fbld
add
mov
jb
shl
cmovns
addr16
mov
push
dec
faddp
or
add
inc
not
push
mov
call
test
mov
ins
cld
dec
cmps
and
lahf
cmc
int
or
das
out
and
call
xor
add
call
in
das
shl
and
mov
sbb
hlt
in
mov
and
inc
fldenv
mov
call
ror
div
sbb
mov
xchg
xchg
cld
dec
add
mov
push
sub
push
enter
es
lds
lds
sub
xor
jge
addr16
mov
in
outs
(bad)
and
jnp
push
cmp
mov
shr
add
adc
fscale
cmp
fcomp
mov
xchg
and
adc
and
clc
mov
xchg
mov
les
xor
shl
daa
shl
ins
jecxz
inc
cmps
jnp
mov
jmp
inc
xor
cmps
je
mov
call
aad
std
aad
jecxz
push
pop
mov
adc
je
dec
fistp
scas
sub
rcl
dec
mov
das
sub
xor
xor
pop
xor
cmpltps
push
cmp
add
clc
push
adc
dec
xor
retf
mov
scas
dec
ins
and
(bad)
or
movs
pushf
push
enter
mov
std
mov
adc
adc
sub
mov
fld
mov
(bad)
neg
in
xchg
jle
xor
loop
pop
mov
scas
cmps
pop
sbb
in
mov
fadd
(bad)
int3
inc
cmps
jp
and
sbb
ds
es
stos
dec
xlat
aad
cmp
adc
and
(bad)
jne
sbb
sub
or
pop
cmp
fwait
and
pop
or
arpl
fcmovnb
ja
cli
mov
jle
inc
push
jmp
sbb
outs
push
xor
fst
jecxz
pop
std
push
jg
ds
loope
pusha
out
shl
(bad)
in
test
xchg
test
mov
sub
fldenv
les
fwait
pop
sar
push
sub
pop
mov
leave
xchg
test
test
cmp
xor
lods
cld
addr16
xchg
sub
retf
out
mov
xor
jne
xlat
dec
lea
add
sbb
jnp
sub
out
or
std
fsub
cmp
or
jl
pop
int3
inc
sbb
cmp
pop
or
ja
cmp
imul
cdq
add
mov
data16
je
sub
fadd
daa
push
outs
bound
pop
retf
inc
sub
in
out
push
mov
inc
add
into
or
popa
or
jp
inc
push
daa
dec
sbb
enter
dec
sbb
cwde
sti
cmp
mov
jmp
ficom
mov
xor
mov
repnz
mov
stos
jno
call
mov
jl
data16
mov
lods
daa
xchg
int3
es
and
fadd
pop
gs
pop
sub
arpl
xchg
jae
pusha
inc
fldcw
and
inc
stos
mov
iret
add
repnz
mov
and
cld
ret
cmp
jmp
(bad)
clc
repnz
cmp
mov
test
sub
sti
std
mov
xor
push
xchg
lahf
pop
test
int
push
xchg
mov
call
popf
outs
dec
inc
aam
or
out
adc
cld
lods
(bad)
xor
test
add
xor
xchg
cmp
(bad)
cmp
lahf
mov
fnstcw
mov
(bad)
call
cmc
mov
cmp
call
je
cmc
ss
xlat
xchg
not
fild
mov
add
int3
(bad)
loop
arpl
enter
xor
xchg
sub
adc
shl
rcr
adc
mov
xchg
push
sbb
cmp
push
cmp
out
jmp
shr
popf
xchg
push
movs
inc
xchg
jo
bound
pop
stos
into
in
mov
xor
cmp
or
fidiv
dec
add
ret
ficomp
sbb
fld
xchg
or
fcomp
mov
lods
or
aam
sbb
movs
jecxz
push
mov
mov
xchg
mov
cmp
fnsave
rcr
push
xor
cs
pop
lods
sbb
jg
cmp
jne
addr16
cmp
pop
jmp
in
pop
jae
mov
xor
cmp
push
in
gs
scas
test
mov
in
in
jo
add
and
shl
loop
xchg
fnstenv
cmp
add
arpl
sbb
shr
icebp
xchg
outs
in
inc
pop
outs
bound
cmp
(bad)
sub
mov
ror
xchg
jmp
xchg
adc
pushf
jle
fsubr
lds
call
icebp
mov
lock
ret
dec
in
in
xchg
repz
pop
mov
(bad)
cli
mov
inc
cmc
popa
adc
cmps
ret
xchg
add
movs
lock
iret
adc
add
mov
cld
out
je
adc
cmc
or
push
sahf
int3
pop
sub
add
icebp
xchg
repz
jnp
sub
push
push
adc
inc
adc
test
sub
cmps
in
dec
aam
push
jmp
sbb
dec
jmp
jp
cmps
ds
or
xchg
pop
pusha
add
xchg
sub
mov
jl
xor
cmp
inc
sbb
xlat
inc
aad
test
dec
cmps
scas
mov
adc
jle
sahf
rcr
inc
dec
movs
mov
mov
int
mov
pop
dec
ja
enter
std
in
xor
xchg
jmp
jmp
ja
jae
mov
ins
or
js
sbb
mov
mov
popa
ror
sub
mov
xchg
sbb
cwde
fistp
sub
xor
outs
xor
push
test
inc
je
lahf
stos
dec
mov
ins
adc
cmp
cmp
jo
popa
aas
pop
dec
pop
jmp
cmps
mov
dec
dec
inc
jge
rcl
jne
mov
jo
mov
mov
mov
stos
fidiv
or
inc
loope
call
cmc
cmc
arpl
(bad)
arpl
mov
or
sbb
scas
sub
lahf
mov
add
call
mov
mov
inc
and
iretw
shl
pushf
fild
inc
or
or
dec
dec
in
in
inc
fmul
ret
sbb
mov
arpl
xchg
sbb
mov
fcom
jnp
fs
xchg
mov
movs
not
sub
sub
pop
mov
ficom
test
and
shr
mov
xchg
pushf
lock
mov
fnsave
test
addr16
lods
retf
out
jno
xchg
add
cmp
jmp
or
pop
fs
stos
leave
hlt
push
xchg
cmps
and
iret
iret
out
pop
push
add
lock
xchg
outs
outs
jmp
or
into
movs
sti
stos
ds
cwde
sbb
psubusb
and
jl
and
dec
jnp
pop
ffree
pushf
retf
adc
inc
adc
outs
pop
add
or
inc
pop
xor
outs
mov
out
dec
fsubr
fwait
xlat
add
ds
and
ror
or
ror
cmp
ffreep
cmp
inc
imul
ret
cmp
in
cmp
add
sahf
rcl
mov
sti
add
jo
mov
sub
shl
cmp
xchg
repnz
cmp
leave
add
sub
jl
pushf
push
cmp
xor
aam
xor
fbld
cdq
lods
add
inc
sub
movs
ds
ja
aad
inc
fst
xchg
das
xor
or
push
mov
inc
movs
mov
push
and
iret
ret
leave
dec
mov
sar
aad
jp
out
sub
mov
push
jae
push
mov
(bad)
hlt
add
movs
pop
push
(bad)
jnp
fldcw
in
mov
adc
dec
aad
pop
mov
(bad)
mov
push
mov
inc
xor
and
push
(bad)
loope
pop
jl
inc
mov
int
(bad)
mov
inc
push
and
or
and
aad
mov
xchg
push
nop
(bad)
sbb
push
sar
sub
jmp
jp
std
lea
pop
jo
mov
xor
popa
cmps
pop
adc
cmps
in
xor
mov
sbb
xchg
dec
mov
aad
(bad)
xor
pop
adc
mov
sbb
jbe
or
test
and
jae
inc
ins
into
mov
loop
pop
cmps
mov
mov
dec
lock
jne
stc
(bad)
in
lds
pop
jnp
mov
jge
pop
dec
inc
lea
sbb
xor
xchg
test
ds
pop
test
dec
push
mov
arpl
fisub
shr
lods
push
mov
jno
mov
ds
(bad)
and
fcmovnb
test
mov
call
xchg
mov
add
cmp
adc
inc
(bad)
outs
icebp
xor
add
popa
xor
(bad)
lds
lahf
sub
pushf
stos
pop
sahf
rcr
sub
mov
(bad)
scas
cmps
mov
mov
xor
xchg
(bad)
jmp
out
(bad)
mov
inc
test
pop
cdq
add
or
fstp
xor
in
add
inc
mov
or
pop
sbb
fwait
sbb
pushf
cli
stc
sub
jno
inc
dec
std
and
in
mov
shr
in
sub
inc
aas
fdiv
mov
pop
mov
inc
xor
ret
sar
and
mov
jno
int
(bad)
and
int3
movs
sbb
fadd
xchg
retf
ds
in
imul
pop
dec
and
sub
stos
bound
add
js
jmp
fld
je
xor
adc
aaa
ja
jmp
mov
push
lods
jle
call
sub
(bad)
std
fnstenv
inc
inc
dec
(bad)
outs
ror
aad
mul
jmp
les
push
xor
xchg
js
ret
sbb
add
js
shl
adc
test
int3
add
stos
imul
call
and
aad
(bad)
adc
inc
sbb
(bad)
(bad)
cli
outs
sahf
xchg
mov
dec
ins
leave
push
(bad)
sbb
ss
cli
ds
adc
jns
add
add
jp
lock
cmp
(bad)
cmps
add
push
jb
and
in
sbb
add
lahf
jns
push
pusha
stos
push
jmp
push
push
dec
sbb
xchg
cwde
xchg
data16
jbe
xlat
push
mov
call
inc
fs
xor
or
icebp
xchg
sbb
add
pop
and
retf
jns
mov
xchg
xchg
mov
adc
out
cs
daa
mov
cdq
addr16
icebp
outs
jecxz
imul
popf
fstp
xchg
mov
js
mov
or
imul
out
inc
out
push
mov
repz
mov
xor
push
mov
inc
jmp
div
and
xchg
pop
jmp
aaa
loope
xchg
nop
repnz
mov
cli
add
jmp
jne
adc
icebp
mov
or
jne
ja
xchg
popa
adc
into
cmps
inc
(bad)
xchg
lods
(bad)
gs
lock
dec
cli
out
imul
xor
or
out
mov
std
gs
test
jne
out
in
les
or
add
mov
pop
mov
push
loope
imul
mov
jmp
aam
es
popf
and
adc
cmc
retf
sub
repz
mov
inc
pop
pop
push
mov
mov
andnps
loopne
xor
cs
fbstp
vunpckhps
dec
xor
les
push
and
into
imul
push
cmps
xchg
cmp
jge
mov
xor
xchg
xor
test
xchg
add
jnp
bound
cmp
adc
jg
ins
(bad)
mov
repz
rcl
(bad)
xchg
pop
inc
dec
mov
in
lods
out
mov
pusha
pop
push
repnz
lock
pop
int
je
sbb
jmp
repnz
leave
adc
nop
xchg
inc
mov
mov
dec
cmp
push
adc
adc
loope
sub
or
pop
pop
ja
(bad)
push
adc
push
retf
xchg
add
push
js
mov
pop
aad
imul
pusha
push
jno
ror
hlt
pop
iret
(bad)
out
repz
pop
(bad)
sbb
and
ins
push
inc
cmps
add
xor
ffree
add
pop
dec
loopne
push
ret
scas
mov
jmp
cmp
push
rol
inc
xchg
mov
movs
sbb
mov
push
jb
xchg
bnd
cmp
jg
addr16
mov
push
out
xor
sub
jle
movs
shl
sub
dec
jne
push
or
mov
mov
retf
mov
repnz
mov
jno
cld
aad
sub
mov
mov
jmp
jbe
into
out
scas
pop
dec
shr
or
pop
jmp
rcl
and
fild
inc
dec
ret
jb
push
retf
xchg
fwait
cmps
fist
sbb
pop
addr16
mov
mov
pop
inc
(bad)
adc
and
mov
adc
jns
fidiv
ret
sub
xor
lds
in
inc
popf
out
adc
ret
mov
dec
test
mov
fsub
in
ret
adc
jl
lea
mov
shl
ret
movs
sahf
test
jno
out
dec
lea
xchg
cs
jl
add
and
retf
fs
lods
pop
cwde
jmp
div
mov
cmps
or
loopne
sub
mov
adc
ret
mov
and
and
sahf
dec
fwait
mov
into
pusha
mov
nop
dec
outs
xchg
sbb
xor
cmp
inc
mov
add
loope
jnp
adc
out
(bad)
cmp
jmp
daa
sbb
cdq
and
mov
jecxz
xor
movs
add
push
(bad)
cmp
fmulp
fwait
inc
(bad)
popa
scas
xor
mov
in
dec
mov
cwde
pop
add
retf
retf
xor
xchg
ins
pusha
or
test
or
or
jo
repnz
adc
jge
push
or
cmps
dec
jmp
out
nop
xchg
jo
jle
mov
jns
test
test
fnstcw
retf
js
outs
pop
push
out
sub
xchg
pop
mov
inc
iret
cld
repz
rcl
out
jge
pop
jmp
popa
xchg
pop
pop
inc
ret
jmp
fldcw
dec
sti
inc
pop
cs
push
dec
mov
add
mov
sub
push
scas
cld
adc
lea
ja
in
repnz
fistp
sbb
mov
cmp
leave
mov
call
dec
jle
ss
sub
push
mov
xor
or
bnd
sti
sbb
adc
push
enter
stos
fwait
addr16
jbe
inc
movs
inc
sbb
xchg
cmp
ds
aaa
call
(bad)
sbb
call
or
mov
pop
dec
popf
cvttps2pi
outs
inc
or
xlat
sbb
and
inc
mov
outs
inc
mov
fisubr
cmp
mov
(bad)
shr
mov
enter
mov
hlt
cmp
push
stos
or
add
xor
aas
or
cmp
mov
int
call
pop
adc
fs
mov
mov
in
outs
ret
and
shl
iret
lock
push
cwde
jnp
xchg
inc
int
sub
jge
call
jp
mov
or
jo
adc
or
xor
dec
ret
add
sahf
fsub
xchg
mov
aaa
jb
cmps
out
imul
jp
xchg
out
loop
jne
out
ss
jnp
cmp
cmp
test
xchg
lods
and
adc
aad
mov
jmp
inc
sbb
les
jmp
push
stc
in
sbb
or
push
daa
sahf
sbb
retf
xchg
rcl
and
pop
mov
(bad)
imul
xchg
rcl
rcl
mov
leave
cmps
jle
aad
not
push
mov
jp
xor
or
test
daa
or
push
sbb
ins
jns
pop
icebp
mov
pop
inc
in
movs
mov
push
scas
sub
mov
fisubr
xor
dec
leave
pop
out
dec
sub
sbb
jae
pop
jecxz
rcl
adc
jg
loope
jne
dec
sar
jecxz
adc
in
xor
(bad)
loopne
jl
pop
in
in
fld
aam
mov
inc
mov
inc
jge
push
mov
jle
loop
cmp
dec
out
adc
fistp
fldcw
stos
loop
sbb
inc
mov
jecxz
xor
rcr
and
or
sbb
dec
mov
mov
mov
mov
sub
and
cmp
in
sbb
and
mov
test
or
push
jecxz
mov
adc
xlat
icebp
aaa
aaa
and
rol
pushf
and
mov
sbb
test
outs
sbb
cmp
pop
nop
in
cmp
nop
rol
pop
movs
pop
push
mov
mov
sar
outs
test
cld
inc
call
scas
pop
mov
test
inc
sub
dec
inc
jl
adc
call
lock
pop
daa
inc
mov
add
dec
or
pop
je
sbb
mov
iret
mov
rcl
je
push
mov
mov
dec
dec
xor
add
sbb
ins
outs
mov
gs
dec
aaa
mov
outs
(bad)
in
adc
fucomp
cli
jle
push
rcl
dec
lock
(bad)
data16
cmp
sub
rcl
mov
fucomi
jg
pop
add
shl
stos
cmp
and
push
cmp
cmp
imul
add
and
push
jg
add
rcl
retf
and
or
mov
jg
leave
mov
sbb
pushf
test
adc
out
jg
mov
hlt
(bad)
and
fidivr
or
mov
sar
lock
sar
fdiv
or
lods
and
dec
inc
xchg
call
js
adc
rcl
and
cmps
pusha
dec
nop
jns
mov
or
sbb
mov
(bad)
retf
jne
aaa
and
mov
jmp
or
addr16
leave
mov
lods
adc
pop
inc
inc
cmps
test
xchg
inc
cld
jp
lods
(bad)
adc
dec
dec
sub
lods
dec
dec
mov
fldenv
lods
xchg
mov
ret
imul
mov
ins
es
add
or
push
in
es
jae
or
inc
je
xchg
sbb
push
inc
retf
jnp
add
std
and
cs
jp
cmps
fisubr
(bad)
dec
pop
cmp
movs
sbb
sub
mov
in
leave
pop
jmp
dec
mov
mov
and
ins
vmovhps
fmul
inc
cld
and
cmps
xor
out
sbb
scas
mov
jl
cmp
stos
repz
cmp
jp
in
fisttp
into
shr
mov
int3
(bad)
fdivr
push
std
out
xor
pop
mov
fs
add
pop
and
pop
out
sub
loopne
adc
push
daa
mov
pushf
mov
dec
pusha
ins
lahf
xchg
sbb
shr
int3
stos
test
stc
das
sbb
push
in
outs
int3
add
imul
mov
xor
mov
test
pop
mov
call
or
pop
push
jp
(bad)
cld
enter
push
pop
xchg
add
lods
xor
mov
(bad)
into
xor
pop
cmp
int3
and
pop
or
dec
ins
push
add
push
shl
in
jns
add
push
(bad)
bound
cmp
xor
int
pop
out
sub
into
cmp
in
cli
pop
xor
int3
lahf
adc
loop
push
fadd
fist
inc
pop
mov
xchg
pop
sub
and
mov
inc
ins
stos
sbb
(bad)
pop
cdq
jg
mov
std
jno
ds
aaa
mov
mov
aam
xchg
sub
push
sub
in
imul
ret
mov
(bad)
mov
xor
mov
dec
mov
mov
(bad)
mov
inc
cmp
mov
fcom
in
cld
push
mov
les
mov
bound
sar
pop
cmp
int
push
pop
aas
mov
shl
add
jecxz
xor
test
and
jno
or
cmp
sub
push
cdq
into
xchg
or
js
inc
sub
outs
xchg
push
add
mov
icebp
jg
call
inc
mov
test
cdq
out
cmp
push
rcr
jle
inc
lock
adc
xor
loopne
xchg
fmul
retf
imul
dec
xlat
dec
stos
push
push
xor
sub
and
loopne
lock
jnp
sbb
add
cmp
fld
inc
inc
mov
loopne
cmp
mov
push
dec
and
push
test
adc
xor
push
fisub
pop
(bad)
or
sbb
pop
dec
or
in
popa
pop
adc
test
je
imul
fsubr
mov
das
jecxz
push
addr16
mov
(bad)
mov
dec
out
xchg
(bad)
retf
adc
data16
mov
pop
xchg
rcl
jecxz
out
sub
adc
movs
movs
pop
xor
lods
sub
push
pushf
jg
sub
jecxz
inc
popa
retf
lock
inc
out
adc
unpcklps
stos
movs
fistp
inc
fs
inc
pop
xchg
inc
pusha
and
sbb
xor
cmp
mov
sbb
clc
add
les
icebp
jg
ret
push
(bad)
mov
aas
pop
xchg
adc
mov
jle
sub
push
loop
jne
pop
mov
mov
fwait
jb
dec
int3
gs
sti
bound
pusha
in
fld
daa
nop
adc
adc
cmp
dec
ins
rcr
inc
in
mov
outs
repz
ss
call
xor
(bad)
mov
or
jnp
mov
sbb
or
mov
sub
jae
fwait
push
add
xor
(bad)
fimul
mov
sahf
ret
cwde
ins
sbb
inc
pop
into
mov
mov
adc
xchg
and
sub
pop
out
cmp
and
pop
inc
test
push
ins
pushf
jmp
int
xchg
rol
pop
retf
mov
mov
and
jno
sbb
out
(bad)
into
ret
loopne
jge
sbb
sbb
inc
out
jmp
mov
push
ja
jns
mov
fs
sbb
movs
les
dec
mov
cmp
(bad)
imul
idiv
sub
adc
mov
stos
in
popa
sbb
fadd
jl
jl
outs
add
or
pop
stos
pop
jmp
sub
enter
and
lock
stos
shr
pop
add
cld
jbe
icebp
pop
enter
add
aad
(bad)
and
lahf
mov
mov
(bad)
adc
jno
jbe
push
cmps
out
xor
cwde
movs
(bad)
mov
neg
jmp
into
cwde
scas
inc
or
leave
outs
(bad)
pop
cdq
aas
fstp
and
fstp
test
test
pop
pop
aam
sub
call
mov
shl
push
inc
jecxz
ja
int
jecxz
test
sbb
aad
mov
and
push
outs
add
push
or
mov
adc
add
dec
cmp
jne
ss
inc
or
aad
jge
sahf
or
mov
push
xchg
(bad)
scas
test
pop
sbb
movs
xchg
mov
in
adc
xor
test
in
cld
jae
sbb
cld
lods
in
jae
cmp
add
outs
iret
sub
hlt
scas
xor
ret
pop
mov
mov
scas
fldenv
inc
addr16
or
shl
fnstenv
mov
(bad)
popf
push
cld
sbb
jb
inc
xor
jmp
fcom
jp
out
(bad)
add
pop
shr
mov
hlt
dec
hlt
mov
mov
inc
adc
dec
pop
add
cwde
lods
sub
aad
mov
je
sbb
pop
sub
dec
or
into
adc
push
or
or
lds
or
out
and
repz
movs
pop
sbb
mov
pop
mov
arpl
test
clc
lea
retf
test
jmp
in
xchg
push
int3
shl
pop
pop
push
and
push
aad
ins
mul
jp
test
imul
or
inc
test
inc
leave
push
cli
inc
sub
inc
aaa
push
and
xlat
sahf
pop
(bad)
ficomp
lods
stos
mov
xor
push
xchg
adc
cmps
mov
mov
mov
mov
mov
xchg
mov
into
cwde
push
fisubr
inc
loop
sbb
scas
int
call
xlat
dec
je
xchg
stos
enter
sbb
cmp
div
jne
dec
jg
xchg
fs
cld
shl
rcl
dec
sub
sbb
sbb
(bad)
dec
stos
or
aam
int
(bad)
mov
jl
sbb
aas
call
ss
adc
sbb
mov
or
push
and
dec
leave
lock
jns
jp
rol
jp
jo
imul
dec
ds
in
pand
cdq
cmp
pop
pop
xor
xchg
sub
retf
pop
popa
retf
or
or
enter
or
cmp
or
call
adc
cs
lds
div
mov
mov
rol
pop
sbb
fadd
xchg
xchg
xchg
push
lea
mov
mov
adc
add
lahf
shl
aas
and
cwde
int3
pusha
ins
xor
sbb
pop
sbb
xor
dec
push
in
arpl
ret
aas
pop
pusha
cmp
ins
cmc
rcl
jbe
in
movs
push
in
test
xor
fild
jmp
push
(bad)
call
xor
sti
iret
enter
add
ins
jb
mov
pop
sbb
clc
mov
es
fstp
mov
call
fwait
mov
call
out
mov
push
gs
and
pop
lods
sahf
iret
dec
xchg
cmp
mov
adc
mov
in
pusha
loope
fwait
jne
dec
test
and
xor
dec
adc
mov
sbb
ds
stos
or
and
retf
and
dec
push
fdivr
xor
mov
sbb
pop
xor
xor
lods
das
dec
and
push
in
das
or
lock
pushf
mov
mov
inc
mov
data16
or
(bad)
stc
lods
aam
mov
cmp
js
movs
jbe
add
shl
sbb
loop
lods
addr16
nop
xchg
sub
movs
xor
imul
inc
add
mov
shr
mov
lock
repnz
aas
jmp
jno
cmp
adc
clc
and
cdq
inc
scas
aad
mov
jo
mov
test
stc
push
sbb
add
sbb
push
ret
sbb
arpl
xor
push
push
lahf
repnz
cli
dec
jnp
add
inc
jne
sbb
das
inc
cs
or
sahf
mov
repnz
in
jle
cmp
pop
test
mov
xchg
xor
outs
sbb
xchg
mov
add
pop
dec
adc
cmp
(bad)
pop
movs
xchg
test
push
adc
jo
js
outs
ja
pop
in
jp
adc
clc
or
clc
mov
in
push
and
sar
aad
sbb
cwde
aaa
sub
cmp
xor
adc
test
aad
dec
push
rol
pop
clc
mov
inc
jo
push
add
(bad)
movs
(bad)
fucomp
jno
xor
stos
out
mov
sbb
and
xor
pop
jl
nop
or
jp
sub
or
in
add
mov
push
test
jmp
inc
mov
bound
imul
ds
movs
sbb
mov
aam
nop
sbb
es
mov
bound
adc
cmp
adc
fnstsw
call
ror
test
push
ins
iret
lock
dec
push
test
call
sub
sbb
push
mov
adc
sbb
sub
rol
jno
out
mov
aad
sub
cmp
pop
and
outs
mov
sub
test
mov
sub
test
call
mov
jns
stc
icebp
lahf
dec
icebp
pop
test
dec
push
sbb
cs
es
xchg
xchg
sub
out
clc
push
mov
inc
adc
adc
cmp
leave
scas
scas
int
lods
dec
sbb
in
mov
mov
nop
out
outs
cdq
jns
sahf
ss
fnstenv
pop
pop
cs
icebp
push
jae
popa
push
push
test
(bad)
pop
adc
aam
jle
in
inc
push
jmp
mov
sub
push
sbb
fninit
xchg
push
(bad)
(bad)
inc
jmp
lods
dec
popa
and
aam
retf
loop
cmp
hlt
lods
je
jo
cmp
(bad)
dec
fidiv
mov
stc
ret
pop
in
sbb
push
(bad)
retf
inc
test
or
int3
jo
ja
push
xchg
jmp
out
add
and
repz
nop
mov
pop
push
sub
mov
dec
sub
cdq
and
xlat
adc
test
jl
bound
ins
adc
fld
dec
enter
xchg
int3
rol
push
add
mov
cmc
fcmovnb
test
imul
hlt
jmp
xchg
mov
enter
imul
clc
std
test
das
icebp
push
inc
pop
mov
retf
enter
gs
inc
push
cmp
push
sub
aas
out
or
rol
jp
ss
sar
sbb
lods
repnz
in
gs
ror
dec
or
mov
jne
mov
add
popf
cmp
add
test
sbb
not
push
xor
sbb
sub
mov
outs
pop
sar
inc
sbb
jns
fidiv
mov
pop
lahf
jecxz
sbb
or
stos
int
push
inc
fimul
xchg
xor
add
shr
cs
jns
or
add
adc
mov
outs
xchg
je
dec
cmp
add
mov
imul
jl
xlat
in
sbb
test
xlat
iret
sbb
repz
out
fwait
aam
lods
xor
xor
xchg
fist
pop
neg
(bad)
cli
scas
mov
sahf
pusha
xchg
mov
call
mov
and
fnstenv
mov
pop
scas
xor
and
ret
mov
in
pop
sub
aam
clc
dec
(bad)
xor
push
int
ins
mov
push
pop
xor
mov
pop
xor
and
pop
ds
bound
sub
pop
cmp
mov
jge
mov
jmp
mov
(bad)
clc
out
or
sub
iret
sti
fnstcw
leave
xadd
enter
into
ret
ds
jl
loope
ror
das
cmp
rol
js
stos
sbb
sub
pushf
test
test
mov
daa
loop
ret
idiv
dec
fwait
sub
pop
leave
jno
pop
retf
sub
push
sbb
das
not
icebp
push
xlat
scas
lock
mov
retf
lods
dec
out
cld
jmp
jns
push
add
push
xchg
fild
and
and
dec
fnstsw
rcl
sub
sbb
jb
sbb
aas
cs
inc
jne
fild
je
mov
(bad)
std
shl
cmp
cmp
jl
int3
pop
mov
jg
ja
scas
fst
fistp
and
(bad)
outs
mov
adc
test
sub
repnz
(bad)
or
in
(bad)
xchg
(bad)
fnstenv
outs
ss
aas
jnp
lahf
sbb
ret
and
ins
xchg
dec
xchg
xor
(bad)
jo
xchg
jne
leave
cli
adc
outs
iret
imul
in
push
xchg
and
xchg
popf
mov
jmp
not
xchg
inc
fldcw
jae
mov
je
inc
and
nop
js
(bad)
xchg
cli
jg
push
mov
repz
iret
(bad)
xchg
xor
test
out
out
outs
adc
xchg
lods
test
and
xchg
dec
or
pushf
sub
push
movs
add
rol
je
xchg
cmp
test
add
xchg
popa
outs
mov
add
dec
(bad)
jp
inc
popf
bound
xchg
bound
shl
sub
outs
das
fist
dec
mov
clc
xlat
jae
outs
aaa
jns
xor
rol
sub
mov
and
ins
jmp
in
add
xchg
jne
test
and
ins
fisttp
pop
and
mov
add
loop
inc
mov
mov
lods
(bad)
cmp
retf
xlat
dec
or
add
rcl
cmc
out
fsub
mov
or
mov
sahf
out
pop
and
int
retf
and
call
and
addr16
cld
mov
out
sub
cmp
pop
xchg
leave
(bad)
push
fstp
retf
mov
movs
cs
fnstenv
lods
add
sbb
adc
and
gs
fucomip
ffree
arpl
pop
in
les
adc
sbb
out
movs
rcr
cmp
xor
cld
mov
mov
push
mov
ret
js
cwde
or
lods
scas
outs
xor
(bad)
push
mov
dec
in
clc
and
cmps
call
pop
or
test
das
pop
push
push
xor
movs
shr
mov
mov
dec
js
dec
punpckldq
retf
(bad)
mov
into
aas
movs
sbb
and
sub
jae
dec
xor
pop
xchg
or
loop
and
cmp
sbb
push
fistp
ret
out
mov
clc
cmps
lock
cwde
out
fidivr
clc
jb
mov
lds
scas
aam
pop
movs
or
aas
sbb
dec
sub
push
imul
pop
mov
jecxz
dec
sti
mov
ds
sub
data16
inc
inc
int
mov
fild
jo
std
fnstcw
and
inc
imul
adc
cmps
jno
call
aaa
gs
mov
lods
jb
pop
outs
aam
or
addr16
pop
jb
cmp
jl
cmp
sti
mov
mov
dec
into
fs
retf
dec
shr
mov
std
cld
xchg
dec
out
pop
dec
jl
sar
dec
clc
inc
sub
fld1
aaa
or
inc
sbb
and
and
inc
or
jge
cdq
out
push
cmp
adc
push
cmps
cdq
push
stc
(bad)
jmp
jecxz
mov
and
in
outs
clc
lock
inc
dec
and
sub
shl
es
cmp
adc
xlat
jae
movs
jae
mov
int
inc
daa
loope
ror
or
cmps
adc
adc
mov
daa
lds
sbb
cmc
in
jmp
leave
and
push
imul
xor
lea
aas
into
push
mov
lahf
scas
imul
xchg
imul
and
(bad)
shl
xor
add
ins
sbb
(bad)
retf
imul
pop
or
sbb
cmp
ror
imul
loop
ret
jo
ja
neg
add
test
push
adc
push
jp
call
push
ins
pop
sub
inc
iret
ret
aad
mov
fidiv
mov
or
xchg
inc
test
add
add
push
sbb
mov
mov
pusha
mov
sub
xor
hlt
mov
ds
pop
sar
ud1
pop
outs
stos
(bad)
xor
mov
(bad)
push
jne
lock
push
push
push
bound
test
or
das
shl
push
fstp
or
inc
mov
mov
jg
sar
mov
inc
fcom
mov
inc
outs
aas
das
retf
imul
push
cmps
pop
pop
inc
dec
push
cmp
sub
jl
out
call
sub
lock
and
retf
mov
mov
cmps
call
sub
and
or
jl
jge
jns
shl
cmp
jmp
fwait
cmp
out
shl
in
sub
mov
xor
or
mov
add
adc
mov
adc
inc
jb
iret
mov
(bad)
iret
xlat
jmp
ss
push
cmc
xor
imul
cmp
repz
fsubr
mov
scas
lahf
cmc
ins
call
sub
cmp
ja
or
push
xor
sub
std
faddp
sbb
push
xchg
sub
pop
adc
add
add
mov
mov
jne
mov
mov
mov
mov
mov
enter
cmp
inc
and
xchg
push
push
jmp
pop
inc
jo
pop
pusha
sub
sbb
cdq
or
std
ss
idiv
jmp
lods
inc
ret
mov
pop
sub
jb
and
(bad)
sbb
xor
retf
adc
call
adc
push
lahf
inc
cmps
cli
pop
popa
mov
iret
loop
mov
add
add
ds
fldenv
push
pop
loop
sbb
nop
shr
in
loope
les
lods
int
cmp
leave
cmps
mov
mov
popa
jmp
lock
xchg
cwde
mov
or
dec
add
add
pop
xchg
cdq
sub
push
mov
push
arpl
into
pop
or
push
inc
fdiv
sbb
sbb
fdivr
fild
xchg
pop
add
ret
shl
inc
dec
adc
xchg
pop
push
ror
cmp
sub
fs
push
inc
or
or
ja
pop
push
bound
fwait
push
xchg
rcr
(bad)
cmps
int3
hlt
add
ja
and
adc
(bad)
lods
dec
xchg
mov
dec
fwait
push
jmp
adc
call
push
push
into
jle
jnp
inc
scas
ins
aad
push
sar
cmp
xor
repnz
gs
dec
sub
out
mov
inc
fild
ss
or
fnsave
outs
pushf
in
daa
test
retf
cmp
mov
push
sbb
pop
(bad)
jmp
icebp
cdq
cdq
mov
scas
fnstenv
ja
cmp
mov
sub
push
pop
mov
test
test
clc
rcl
xchg
pusha
aas
add
xchg
or
mov
cwde
fwait
lahf
push
jno
addr16
icebp
sbb
stos
fdivr
xor
ins
mov
xor
scas
push
(bad)
inc
imul
ins
push
inc
dec
sbb
loopne
movs
mov
jo
inc
push
mov
mov
sbb
dec
int
push
push
and
lods
ret
pop
(bad)
jl
pop
rol
or
pop
sar
inc
addr16
test
in
and
adc
dec
and
cld
adc
int3
test
fisttp
mov
push
jae
in
ins
idiv
out
repz
add
inc
call
lea
mov
mov
jae
pop
mov
addr16
mov
popf
imul
aas
add
in
or
jno
or
push
rol
adc
push
adc
movs
jo
popf
mov
stos
mov
retf
inc
and
push
aad
dec
(bad)
test
mov
xor
jmp
push
and
std
popa
imul
and
or
das
loop
xor
sbb
xlat
je
pop
arpl
aaa
jmp
cs
or
xchg
mov
call
or
inc
dec
lods
in
xor
nop
mov
scas
ins
mov
outs
icebp
adc
lods
mov
add
push
out
rol
cwde
inc
push
jo
ja
cli
loope
push
pop
cmps
ins
jmp
std
xchg
ret
(bad)
lock
pop
push
sub
mov
xlat
inc
fdivr
mov
dec
cmp
aaa
pop
or
and
pop
sbb
ds
jnp
into
mov
mov
lods
add
loop
popa
gs
and
pop
pop
fstp
mov
mov
les
xor
inc
bnd
aam
sub
adc
pop
das
dec
mov
lahf
int3
mov
jb
cmp
sbb
popa
stc
shl
xchg
push
out
stos
loop
push
sbb
or
call
xor
int3
jge
sub
retf
xor
cmp
imul
xchg
mov
mov
adc
xor
(bad)
(bad)
jae
js
retf
sub
adc
aad
lea
or
dec
aaa
sbb
dec
xchg
aaa
lahf
xchg
dec
xor
mul
mov
cmps
push
scas
mov
inc
fwait
cmp
(bad)
popa
dec
or
push
aaa
outs
retf
arpl
push
pop
mov
sub
sub
fwait
cld
sub
in
retf
mov
mov
fucomi
sub
outs
xor
lods
aad
adc
hlt
pop
mov
push
(bad)
nop
sbb
pop
or
pop
cmp
loop
mov
out
sub
dec
sbb
ja
mov
cli
push
js
loope
outs
test
xor
mov
dec
lods
aas
or
add
scas
pop
cdq
jbe
jmp
pop
in
add
jmp
sahf
sbb
push
xchg
or
cmp
sub
jge
ja
jle
or
or
stos
add
popa
or
xor
add
xchg
sub
and
call
pop
inc
movs
jmp
push
add
adc
popf
scas
aas
das
lods
call
xchg
or
xchg
sahf
inc
scas
xchg
(bad)
ficomp
ret
add
arpl
mov
mov
mov
arpl
xchg
ror
leave
adc
adc
outs
sar
repz
(bad)
fcmovnb
cmp
out
push
sysexit
stos
xlat
sub
gs
sahf
mov
jecxz
xor
ins
daa
call
hlt
mov
dec
push
dec
pop
ret
dec
sub
jmp
repnz
push
rol
hlt
das
arpl
sub
mov
xor
xchg
mov
loope
lock
adc
test
add
das
mov
outs
mov
gs
mov
mov
test
or
scas
pop
mov
ret
add
sbb
cmp
aad
out
aam
jge
dec
mov
push
adc
cmp
int3
pop
mov
dec
loop
cmps
(bad)
jmp
lods
jae
bound
(bad)
sub
repz
ret
clc
movs
cmp
mov
cli
and
push
in
jno
retf
shl
xor
js
rcl
sub
arpl
inc
(bad)
lds
repnz
out
jbe
aas
pop
cmc
fstp
adc
mov
lods
inc
inc
mov
inc
add
outs
xchg
mov
xchg
shr
sub
push
stc
mov
ss
ds
xlat
retf
sub
retf
push
(bad)
rcr
sbb
or
loop
mov
xchg
fsub
(bad)
fisttp
inc
dec
fisttp
sub
mov
fld
lahf
add
inc
int3
mov
and
jb
mov
or
fwait
pop
shr
jo
outs
paddq
sbb
mov
pop
jae
sub
inc
xchg
mov
ja
(bad)
fstp
mov
sti
mov
sub
or
jb
pop
mov
jge
cmp
mov
cmc
and
ret
scas
fisttp
mov
push
fcmovbe
or
push
(bad)
(bad)
aam
(bad)
dec
es
mov
mov
and
pop
mov
xor
dec
xchg
xor
sub
cwde
sti
dec
jg
inc
cmp
push
inc
ret
jg
imul
sub
push
mov
(bad)
cmp
sbb
(bad)
iret
jge
int
popf
int
nop
shr
push
xor
bound
xchg
fdivp
add
nop
addr16
movs
std
dec
push
jnp
popf
mov
mov
sub
ds
jnp
call
repz
push
inc
mov
imul
pop
ret
add
jnp
pop
jle
lea
jne
in
cdq
loop
dec
pop
mov
jmp
inc
mov
ret
outs
xchg
loope
jp
cmp
cli
enter
in
jle
pop
sub
pop
sbb
nop
sbb
sbb
loope
push
fidivr
out
add
cmc
movs
das
inc
outs
int3
lock
xor
rcr
ret
pop
xchg
test
fwait
adc
jle
outs
retf
push
mov
or
out
and
aam
inc
mov
cwde
imul
mov
xor
fbstp
cs
sbb
cmps
or
sub
cmp
cmps
bnd
ds
adc
int3
mov
mov
jae
or
shl
icebp
jle
fnstsw
sub
sbb
adc
enter
test
mov
cwde
cld
jae
add
mov
cmp
mov
jns
mov
push
test
pop
dec
or
stos
movs
jmp
out
imul
dec
(bad)
cmp
xor
push
repnz
mov
div
mov
(bad)
rol
add
push
test
pop
mov
sbb
fcomp
enter
hlt
push
jg
sub
dec
add
retf
xor
mov
ins
outs
push
mov
inc
mov
hlt
mov
add
pop
call
scas
leave
(bad)
jl
and
icebp
rol
enter
out
shl
(bad)
cmc
retf
test
inc
out
lgs
in
lds
es
dec
inc
adc
test
(bad)
push
in
push
cmp
out
push
mov
or
sub
das
mov
ins
ins
mov
sbb
xor
repnz
or
sbb
inc
jp
or
fucomip
or
adc
or
push
xchg
dec
jg
mov
push
inc
add
sbb
sub
(bad)
jno
leave
lea
popf
and
dec
test
push
mov
shl
push
cdq
int
stos
cmp
mov
lea
push
adc
fnstsw
xor
jg
jne
(bad)
rcr
ror
rcr
push
xchg
inc
repnz
dec
add
leave
clc
xor
push
xchg
mov
mov
or
mov
fcmove
jae
cmp
dec
mov
push
pop
push
push
(bad)
sti
pusha
push
or
cmp
ins
pop
inc
inc
les
cld
mov
push
daa
ja
cmps
ret
jg
(bad)
xchg
mov
xor
imul
xor
loopne
cmp
cwde
nop
repnz
mov
xchg
push
and
in
and
sti
int3
fild
(bad)
push
dec
out
out
inc
add
xchg
xor
mov
and
xor
jmp
add
cmp
outs
iret
jnp
mov
fs
inc
add
sahf
mov
jb
xor
adc
fnstenv
cmp
mov
cmp
add
out
or
je
js
nop
jb
jge
imul
outs
fs
jns
aas
sbb
jno
pop
add
mov
mov
div
push
sbb
jne
rcr
dec
xor
sbb
in
sahf
fsubr
adc
and
scas
fwait
or
add
les
dec
iret
test
xchg
cmp
jns
in
sub
scas
push
movs
int3
into
cwde
lods
cld
aaa
sti
ret
scas
push
sbb
in
dec
or
cmp
ficom
dec
inc
push
dec
mov
fdiv
js
sub
jecxz
ins
jnp
pusha
scas
pop
push
adc
xchg
sbb
jge
dec
xchg
mov
stos
ret
sub
inc
add
mov
xchg
loop
test
call
push
jae
mov
int
fwait
das
xchg
sbb
sahf
xor
dec
aas
jne
dec
push
sub
adc
fisubr
add
sub
or
addr16
pop
push
je
cdq
retf
addr16
inc
xlat
sbb
jae
or
dec
xlat
xchg
mov
iret
outs
xchg
rcr
pop
mov
cmp
cwde
pushf
outs
pop
call
test
stos
shr
xchg
pusha
and
sbb
call
xchg
push
(bad)
cmp
mov
lods
push
dec
mov
pusha
xchg
jb
mov
retf
dec
scas
pop
outs
cmps
mov
add
adc
push
push
lds
(bad)
push
arpl
xor
xor
inc
pop
jne
pop
(bad)
adc
xchg
ret
daa
and
cmp
sub
cmps
xchg
sti
mov
or
jnp
xchg
mov
mov
sub
repz
cmp
jg
push
or
xor
cmp
repnz
(bad)
shl
mov
fwait
pop
inc
mov
pop
mov
adc
nop
fcmovb
in
mov
je
ins
mov
movs
(bad)
mov
inc
ret
mov
jns
add
out
iret
jae
leave
inc
or
lahf
imul
sub
jge
pop
jno
inc
mov
movs
sar
cwde
bound
gs
lea
mov
loopne
cli
jo
ss
cld
xchg
aas
popa
mov
xor
mov
push
xor
jp
fbld
dec
pop
xchg
movs
inc
xchg
popf
and
xchg
pop
add
pop
xchg
sub
inc
xchg
in
fstp
es
pop
rol
mov
(bad)
or
xchg
aad
call
fidivr
adc
mov
mov
adc
ret
cmp
fbstp
out
mov
cmp
sbb
and
push
cdq
in
test
xor
xchg
or
aas
dec
pop
add
mov
dec
sti
adc
inc
dec
sub
and
test
mov
and
mov
cmp
je
add
ins
lods
mov
inc
or
or
or
push
cmps
cmp
scas
xor
jge
rcl
push
(bad)
xchg
jbe
jle
pop
cmp
stc
jg
dec
loope
or
fs
mov
rcl
mov
pop
mov
mov
out
add
(bad)
push
mov
mov
and
stos
xchg
dec
ds
dec
add
fidivr
clc
dec
nop
sbb
cld
cdq
inc
pop
or
xor
jbe
mov
fdiv
cwde
movs
imul
push
stos
jbe
xor
add
movs
push
std
outs
ret
add
cmp
dec
lds
daa
fsub
shl
and
sbb
js
rcl
out
cld
xchg
in
mov
(bad)
jge
mov
sub
pushf
aas
jge
addr16
and
cli
jns
inc
int
xor
xchg
or
scas
aam
in
not
cdq
inc
stos
out
sbb
lods
and
xor
(bad)
cld
xlat
mov
jp
(bad)
gs
jmp
jle
sub
retf
push
cmp
inc
push
push
daa
cmp
dec
push
je
dec
ficom
out
jae
mov
cmps
retf
shl
in
or
fcom
xor
mov
cdq
sbb
mov
loope
test
inc
pop
das
jmp
mov
call
mov
add
inc
leave
retf
push
pop
sbb
call
and
jmp
sar
in
int3
mov
stos
cmc
clc
cdq
add
lods
bound
movs
mov
jae
xor
std
popa
addr16
inc
push
pusha
jne
jae
and
dec
cmp
sbb
daa
jo
in
push
mov
push
pop
xlat
cli
xlat
jno
cmps
fist
push
sub
inc
cwde
and
lahf
es
pop
inc
mov
inc
dec
aaa
mov
and
mov
sahf
inc
xchg
outs
imul
cwde
xchg
push
jmp
adc
xlat
and
loopne
lock
loop
call
sbb
js
inc
mov
outs
test
adc
xor
xchg
imul
push
mov
enter
xor
or
popf
ror
adc
mov
inc
cdq
mov
cmovge
pop
inc
push
lods
push
pusha
xchg
(bad)
cld
ret
xor
inc
xor
xchg
and
dec
sbb
mov
scas
xor
dec
into
mov
sbb
adc
or
inc
das
jns
arpl
shl
jb
adc
add
jp
mov
fcmovnb
pop
xor
mov
shl
xor
mov
call
fs
cmps
aad
dec
or
clc
xlat
movs
push
jae
adc
push
adc
test
repnz
push
jp
out
out
mov
fsub
popf
inc
addr16
mov
mov
sahf
jl
daa
test
xor
inc
jp
jle
daa
test
inc
outs
data16
inc
pinsrw
jecxz
dec
mov
push
sbb
pusha
daa
lds
jb
mov
sbb
dec
jno
pop
inc
in
enter
ins
cdq
lea
(bad)
leave
mov
jno
add
dec
add
xchg
ds
idiv
ja
xor
paddw
xor
mov
cli
stc
hlt
mov
cmps
shr
fisttp
add
mov
or
xchg
cmp
inc
mov
imul
or
icebp
mov
inc
pop
imul
push
dec
cmp
fmul
jae
lods
xchg
leave
jns
adc
(bad)
lds
adc
sbb
or
mov
mov
imul
cmp
push
addr16
stos
movs
cmp
mov
stos
test
mov
(bad)
enter
jmp
sub
jge
test
ins
adc
aas
mov
cli
mov
dec
sub
jnp
jne
ins
retf
push
dec
(bad)
shr
mov
jle
mov
add
pop
pop
push
jmp
inc
ret
xchg
push
lods
sub
daa
mov
stos
(bad)
(bad)
movs
or
(bad)
pop
and
jmp
inc
aad
test
xlat
xchg
cmp
fwait
and
mov
shr
mov
loop
scas
push
add
(bad)
fdivrp
adc
and
or
scas
mov
lods
bnd
outs
loopne
mov
push
sbb
inc
sbb
test
and
adc
rol
cmc
jp
cmp
dec
cld
jns
dec
sbb
std
push
dec
jae
fiadd
push
ss
int
mov
mov
pop
jl
int3
pop
sub
cmp
daa
xor
mov
out
fadd
inc
mov
jecxz
fdivr
daa
jp
bound
icebp
(bad)
fadd
add
xor
mov
sbb
mov
pushf
lods
push
fcomip
std
sbb
retf
std
hlt
clc
dec
mov
call
mov
push
lods
and
outs
add
sar
in
mov
cmp
xchg
jmp
imul
iret
aad
add
mov
inc
or
out
or
or
mov
es
xor
dec
div
dec
push
jne
fst
arpl
xchg
fstp
fwait
gs
jb
sbb
adc
stos
mov
xchg
adc
push
pop
inc
dec
sub
rcl
push
pop
mul
test
fdivr
inc
and
outs
jmp
sub
jb
fs
dec
jbe
(bad)
jae
ins
mov
pop
mov
adc
div
loop
outs
lock
and
in
(bad)
dec
lods
mov
jbe
dec
sub
aaa
mov
push
jl
iret
pop
and
jno
ins
sub
xor
push
movs
inc
xor
add
mov
push
fs
jmp
movs
movs
(bad)
xor
pushf
ror
or
sbb
sub
call
enter
cmpxchg
mov
es
mov
mov
mov
mov
mov
rcr
test
mov
sub
sbb
xchg
nop
mov
jp
mov
(bad)
jbe
sub
cmp
xlat
pop
je
scas
and
test
mov
nop
stos
aas
fbstp
xchg
fs
pop
adc
sbb
push
mov
sbb
inc
lods
bound
pop
lea
test
push
pusha
and
stos
mov
cmps
dec
xor
and
xchg
mov
mov
dec
ret
jmp
jno
shr
xlat
push
(bad)
jbe
xchg
(bad)
jno
pop
ss
mov
add
das
cmc
mov
cmp
mov
xchg
xchg
inc
aas
xchg
out
inc
pop
mov
jbe
add
jmp
pop
addr16
cli
outs
sub
cmp
pusha
mov
movs
fist
ds
(bad)
pop
retf
ja
out
retf
lods
retf
or
inc
sahf
mov
cmp
pop
imul
push
xchg
add
cwde
mov
repnz
cmp
pop
daa
adc
jb
in
icebp
dec
xchg
and
jmp
sahf
sbb
pop
out
(bad)
mov
sub
jno
cli
inc
dec
pop
fwait
add
or
bound
dec
adc
jno
stos
outs
cmp
in
xchg
sub
outs
adc
out
cmps
pop
push
dec
dec
jnp
(bad)
mov
or
mov
jmp
mov
or
inc
mov
mov
pop
add
rcl
or
xor
or
adc
out
(bad)
jp
sub
adc
ror
adc
xchg
pcmpgtb
dec
sbb
sub
leave
outs
je
inc
lods
imul
jmp
inc
add
retf
push
cmc
(bad)
aad
xor
xor
sahf
icebp
mov
iret
push
ret
cmp
loope
cmps
outs
pop
or
shl
jnp
lods
xor
cmc
cwde
ffree
pop
cmps
inc
mov
or
dec
cmp
pop
mov
fld
xchg
cmps
fwait
outs
in
pop
fwait
call
imul
jg
and
jb
in
fiadd
push
mov
ja
rol
xchg
sahf
mov
inc
(bad)
mov
xor
out
push
adc
xchg
fisttp
mov
aad
sbb
xlat
sbb
mov
push
xor
das
mov
pop
sub
or
add
xchg
add
jge
out
(bad)
in
pop
repnz
sbb
jnp
lods
mov
jno
mov
mov
pop
(bad)
or
xor
cdq
adc
cmps
or
adc
xchg
inc
call
jne
or
aam
ins
push
shl
and
or
call
jg
mov
shl
fstp
movs
dec
jl
xchg
paddsw
outs
repnz
dec
aam
dec
xor
mov
jl
xabort
sahf
dec
jnp
sub
in
push
fld
or
dec
cli
jmp
xchg
enter
push
cmc
mov
dec
add
xor
inc
xlat
add
adc
adc
repz
mov
mov
or
sbb
pop
fdiv
mov
test
or
arpl
outs
je
test
out
mov
xchg
fs
push
jge
sbb
test
cmp
mov
es
cmc
nop
and
mov
mov
ss
enter
nop
sub
loop
pop
loope
jne
xchg
out
ret
nop
push
push
ins
pop
jmp
iret
mov
push
loope
push
mov
jl
jl
push
and
sbb
retf
and
outs
fld
add
mov
cmp
loope
push
data16
in
das
push
mov
xor
call
lds
scas
ror
add
aas
lock
or
and
lahf
jo
jo
fist
aaa
and
ror
or
scas
and
ins
shl
adc
cmp
add
sbb
js
stc
icebp
test
cld
mov
pop
fsubr
and
or
jo
cmp
bound
imul
ror
jg
sub
mov
dec
jb
and
popa
adc
gs
loope
mov
xchg
fmul
scas
xor
fld
mov
jl
or
adc
add
imul
pop
enter
mov
cwd
fistp
dec
pop
test
js
loop
sub
pop
lods
mov
(bad)
mov
cmps
mov
cmps
mov
xchg
sbb
xor
cwde
and
(bad)
adc
(bad)
inc
out
or
ret
xchg
jb
out
out
xor
es
not
movs
mov
jns
fs
push
xor
call
pop
jg
lahf
jmp
sbb
sbb
push
iret
inc
stos
cdq
sub
lock
xchg
and
call
xchg
cmp
repnz
pop
(bad)
(bad)
(bad)
ficomp
aas
call
in
and
fist
mov
xor
sub
adc
pop
jmp
js
repnz
or
push
lock
repz
mov
nop
out
pop
(bad)
retf
hlt
pop
xchg
ins
push
xchg
retf
loop
mov
pop
loope
xchg
cmp
call
mov
inc
call
mov
dec
out
sbb
int3
dec
fwait
out
call
sbb
add
fnstsw
movs
call
call
ds
cmps
test
cmps
out
mov
mov
cli
fcom
ret
fcomp
(bad)
not
scas
fild
or
enter
(bad)
push
movs
and
mov
scas
mov
xchg
test
out
outs
fs
in
repnz
repnz
pop
mov
fisttp
pop
jmp
loope
inc
(bad)
std
xchg
add
sbb
mov
and
mov
shl
xchg
xlat
int3
cli
add
jp
cmp
js
scas
cmp
inc
or
rol
and
lock
cli
sti
(bad)
icebp
sub
(bad)
cmp
xchg
dec
dec
push
ins
inc
pop
(bad)
sub
sub
pop
lock
pop
cli
jg
mov
pop
dec
push
std
je
inc
sbb
lock
mov
and
mov
int3
or
loop
test
add
xchg
and
lods
neg
clc
xor
imul
lods
cmp
xchg
push
outs
shl
dec
jb
add
mov
pop
stos
lock
sub
sub
test
adc
out
sbb
pop
xor
jmp
jmp
sub
retf
mov
mov
pop
fnstenv
vpsrld
mov
rcl
jl
outs
jecxz
or
lds
pop
clc
sbb
xchg
push
ja
mov
repz
stc
pcmpgtd
test
fs
jns
js
ins
or
pop
jbe
xor
out
adc
cmps
icebp
test
mov
dec
dec
lds
and
push
(bad)
fwait
jp
pop
mov
setne
lahf
push
push
inc
inc
repnz
or
clc
add
dec
add
out
xchg
rol
or
addr16
pop
mov
inc
clc
lahf
and
mov
inc
cmc
retf
jae
mov
loop
sbb
add
(bad)
jns
test
or
imul
daa
inc
cs
fs
out
sbb
sbb
push
shl
cmps
or
inc
sbb
repnz
movs
cmovl
shl
aad
repz
cli
push
xchg
xor
cmp
inc
imul
mov
repz
(bad)
cmps
(bad)
and
mov
outs
pop
ins
fldcw
cmps
sbb
and
cs
jno
cld
or
and
mov
imul
inc
mov
aas
out
call
in
mov
mov
sbb
jmp
faddp
retf
rol
jb
or
ror
mov
ficomp
jg
xchg
push
adc
add
iret
test
push
adc
mov
xchg
cmps
mov
jmp
pop
adc
lds
mov
out
dec
inc
mov
fwait
xchg
push
retf
sub
call
push
or
and
in
sbb
mov
xchg
push
(bad)
sbb
xchg
cmp
aas
pop
cmp
xor
mov
retf
xlat
fdivp
retf
add
test
and
pop
jns
cli
aad
popf
out
out
mov
call
or
dec
sub
cmp
cmp
mov
push
call
shl
mov
jnp
or
test
loope
cmc
mov
loopne
(bad)
rcr
lods
scas
repz
imul
mov
jg
jecxz
into
bound
je
add
mov
clc
leave
dec
push
or
mov
scas
arpl
dec
pushf
ins
pusha
stos
inc
dec
push
cmp
jae
jp
jge
pop
cld
xor
mov
cmc
test
and
push
out
jmp
push
clc
and
jae
mov
xchg
leave
mov
gs
sti
jnp
fcomp
mov
retf
outs
add
push
iret
dec
arpl
aaa
int3
(bad)
fldenv
scas
add
inc
jp
pop
pop
pop
std
enter
xchg
addr16
dec
pop
popf
fild
movs
xchg
leave
pop
jmp
pop
ficomp
inc
xlat
ret
pop
push
add
or
(bad)
loope
push
adc
and
out
push
xchg
into
inc
xor
jge
(bad)
cmp
dec
jmp
and
sbb
sub
push
mov
cwde
adc
aaa
mov
inc
xchg
scas
jg
out
xchg
inc
push
popf
add
(bad)
scas
and
retf
js
sub
jge
jno
mov
add
dec
loop
sub
out
cmp
sub
xor
cwde
cdq
mov
leave
mov
add
(bad)
pop
cmp
lods
lds
push
and
ds
das
adc
sti
test
or
dec
add
rcl
sti
mov
adc
mov
lock
leave
inc
outs
and
pushf
test
xchg
je
add
call
inc
push
aad
fdiv
lods
jmp
sbb
pop
in
sbb
(bad)
sti
rol
loope
mov
mov
inc
mov
addr16
cmc
dec
jnp
jecxz
cmp
test
pop
sub
test
push
jb
fild
push
inc
sbb
outs
xchg
jae
jecxz
mov
ret
arpl
(bad)
test
daa
cmps
repz
ins
add
cmps
leave
xchg
add
adc
cdq
clc
cmps
xchg
adc
jno
mov
(bad)
imul
arpl
push
lahf
jmp
gs
test
cdq
adc
xor
push
cmp
es
pop
std
mov
iret
pop
sbb
pushf
mov
sub
scas
dec
nop
xchg
sub
xchg
lock
icebp
mov
clc
ins
add
xchg
mov
outs
pusha
test
xchg
sub
dec
xor
cmp
ror
add
(bad)
fidivr
mov
cmps
or
fwait
(bad)
adc
sbb
pop
mov
not
mov
cmpxchg
mov
mov
jg
xchg
adc
jnp
cmp
imul
push
push
iret
loope
(bad)
xlat
ret
nop
and
mov
inc
loop
cld
retf
add
add
mov
lods
add
jmp
dec
adc
mov
or
(bad)
jg
fmul
inc
aam
inc
inc
mov
(bad)
outs
jnp
shl
(bad)
xor
mov
cwde
mov
fstp
popa
cmp
add
push
mov
loopne
push
sub
mov
es
fisub
ss
movs
sti
es
or
not
mov
icebp
cmp
mov
daa
mov
sub
xchg
cmp
ds
fisub
adc
out
mov
inc
enter
xchg
pop
sub
pop
or
shl
test
fwait
iret
and
lock
das
popa
sbb
pop
test
inc
mov
push
mov
push
jmp
lea
repz
icebp
and
sub
and
mov
adc
add
sub
adc
mov
mov
jg
and
sub
lds
fldenv
in
sub
sub
mov
cli
movs
jae
sti
fcom
add
push
cld
add
add
lods
scas
clc
mov
and
loop
movs
bnd
sti
mov
mov
mov
jno
into
pop
(bad)
rcl
dec
pop
lods
sbb
dec
mov
xor
push
movntq
out
call
out
lods
dec
jno
and
movs
retf
aad
jnp
sub
mov
sbb
mov
adc
pop
cmc
test
and
adc
ret
adc
sub
icebp
shl
sbb
outs
jno
jns
pusha
fmul
cmps
mov
add
loope
mov
jp
mov
mov
enter
sub
adc
push
xchg
xchg
pop
das
movs
jo
cdq
xchg
pop
mov
mov
adc
mov
pop
and
sahf
xchg
repnz
jecxz
retf
icebp
data16
fnstsw
xchg
out
sub
clc
(bad)
fidiv
repnz
mov
aaa
lds
sub
lods
or
jg
add
push
outs
mov
mov
jmp
into
scas
sub
xor
mov
mov
jne
movs
pop
mov
mov
mov
dec
into
aad
sbb
clc
jge
rol
xchg
push
icebp
add
sub
loop
cmp
hlt
stc
test
sti
(bad)
mov
mov
iret
ds
out
xchg
std
retf
cmc
gs
xchg
fisttp
fwait
xor
fwait
lock
(bad)
arpl
fstp
mov
sub
pop
aam
outs
jb
arpl
imul
call
jp
sub
icebp
cld
xchg
mov
ret
out
out
scas
pushf
test
sub
inc
adc
sbb
push
cld
repz
call
cmp
ja
xor
push
xchg
sti
push
fwait
repz
imul
dec
imul
cmps
out
and
and
fbld
push
js
mov
jp
and
scas
inc
mov
outs
js
(bad)
and
push
in
aad
sub
mov
mov
out
ins
lea
movzx
ficomp
les
or
dec
xor
lea
fucompp
je
dec
cdq
cli
scas
push
rcr
js
push
cld
or
jnp
ss
lock
ins
aam
adc
es
mov
dec
jns
inc
ret
clc
out
fisttp
xchg
push
or
adc
(bad)
fst
add
sahf
sbb
mov
push
jb
cdq
or
inc
mov
imul
rol
and
mov
mov
xor
dec
pop
mov
pusha
add
loope
fbstp
pop
enter
inc
sbb
cli
icebp
xchg
inc
lock
push
mov
test
(bad)
rol
repz
aas
test
jbe
outs
jbe
adc
mov
loope
ret
mov
inc
(bad)
outs
mov
pop
xor
mov
in
inc
lea
jge
fisub
cmp
add
mov
sub
fmul
pop
es
out
stos
and
div
aas
mov
jge
cmp
cmps
addr16
dec
ret
cmc
iret
sti
sbb
sub
arpl
inc
xor
rol
adc
inc
push
movs
adc
outs
lock
mul
add
fst
mov
lods
mov
mov
cmp
jns
mov
ja
xor
nop
push
and
cmp
dec
cmp
repnz
mov
in
leave
mov
fidivr
lock
cmc
sahf
dec
es
sbb
mov
mov
sahf
stos
or
cs
rcl
scas
(bad)
cmp
jae
shr
inc
inc
sub
sbb
mov
bound
mov
dec
cmc
mov
hlt
xor
jge
mov
cmp
test
imul
push
popa
xor
outs
cmp
push
cmps
jp
cwde
dec
imul
in
call
inc
jb
fcom
(bad)
idiv
in
inc
mov
out
jb
enter
pop
icebp
xor
hlt
pusha
xor
rol
add
lahf
adc
stc
int
inc
jmp
cmp
jae
push
lods
mov
pop
cmp
mov
jbe
push
int3
cmp
test
dec
sbb
pop
cmp
sbb
mov
ror
push
add
adc
pop
mov
cmp
aad
(bad)
mov
jnp
or
mov
mov
add
and
(bad)
call
test
cmc
xor
fcomp
dec
dec
cli
outs
in
dec
repnz
jp
dec
mov
popa
and
stc
xchg
and
sar
sub
stc
imul
jno
call
jecxz
push
mov
test
xchg
into
ins
pop
ret
push
xor
out
mov
jp
mov
jbe
xor
fwait
mov
mov
or
mov
pop
dec
dec
mov
lahf
or
xchg
mov
test
mov
jmp
xchg
aam
daa
sub
arpl
bound
fsub
inc
jae
and
out
cld
clc
out
sbb
push
arpl
push
mov
dec
in
add
sahf
cmps
cmp
push
sar
xor
loope
xchg
aam
dec
sub
and
(bad)
push
mov
in
mov
movlps
ret
or
or
cli
je
fld
dec
xchg
loope
test
data16
out
jl
sub
mov
cld
int
shl
enter
fld
in
lahf
dec
int
mov
dec
add
out
xor
cmp
ins
hlt
pop
in
add
push
jmp
or
stos
mov
add
lds
hlt
mov
xchg
adc
xchg
das
dec
retf
out
adc
sub
jne
jne
jns
punpcklbw
or
inc
in
sbb
daa
jne
and
pop
aam
fld
les
mov
dec
cld
ins
or
fs
fisttp
pop
sti
das
xchg
jne
xchg
repz
stos
cmp
mov
sbb
xchg
push
mov
mov
add
mov
inc
sub
fisubr
imul
imul
cmp
test
pusha
loop
mov
clc
in
xor
sar
aad
jecxz
cmp
push
xchg
push
popf
in
cmp
adc
mov
xor
cwde
arpl
push
add
add
add
xchg
xchg
inc
or
push
adc
mov
sbb
add
or
lods
test
cmp
mov
xchg
xchg
imul
popf
rcl
cmp
and
dec
dec
pop
xor
fwait
pop
(bad)
dec
pop
sub
or
dec
mov
cmp
xchg
adc
js
and
test
test
(bad)
add
into
shr
cmp
or
mov
and
push
(bad)
iret
fimul
addr16
jge
imul
jp
or
iret
(bad)
hlt
or
and
retf
mov
mov
jnp
push
push
or
cwde
or
xchg
xchg
addr16
push
xlat
adc
gs
fs
pop
jg
(bad)
stc
adc
aam
and
mov
pop
or
pop
and
loope
pop
mov
xchg
mov
call
adc
push
xchg
add
push
cmp
cmps
adc
push
xchg
dec
mov
arpl
dec
fwait
push
aad
iret
out
sti
(bad)
imul
loope
mov
sub
dec
outs
dec
cmp
and
push
int3
sub
mov
ror
pop
mov
add
dec
loop
jmp
jg
ror
and
ret
xchg
mov
cmovl
cwde
pop
xchg
dec
not
mov
add
data16
test
jbe
out
inc
xlat
aam
mov
jle
std
(bad)
sti
aaa
nop
call
retf
jmp
and
mov
mov
lea
(bad)
jnp
push
mov
outs
inc
cmc
mov
mov
dec
pop
adc
pop
out
add
mov
loope
mov
cld
(bad)
stc
mov
mov
and
shl
inc
pop
es
sub
xchg
push
push
or
jns
imul
aam
pushf
rcr
pop
mov
cmp
xchg
mov
out
in
div
push
cmp
in
pop
cdq
scas
fsubr
mov
es
pop
(bad)
cmp
sbb
and
push
sbb
pop
xor
daa
adc
pop
test
pop
in
ret
mov
aad
rcl
adc
test
jae
or
jbe
retf
outs
push
popf
inc
loop
movs
pushf
shr
rcr
inc
add
fst
push
mov
das
clc
call
mov
and
push
mov
ins
xchg
xchg
push
iret
jno
fidiv
sahf
mov
mov
inc
(bad)
in
cmp
cmp
sub
adc
mov
xchg
jg
dec
push
imul
pop
pop
sub
and
jne
mov
and
rol
xor
xchg
xor
(bad)
loopne
pusha
addr16
cmp
pop
cmps
in
xchg
out
sub
fistp
xchg
bound
add
fidivr
outs
out
cmp
shr
cmp
mov
sbb
jb
ss
mov
sahf
sub
xchg
push
and
daa
add
int
jbe
sbb
cmp
jo
jl
inc
js
adc
sbb
retf
ror
mov
inc
clc
sbb
sbb
xchg
and
addr16
xchg
add
test
sub
das
sbb
xor
in
jne
enter
call
lods
lahf
loopne
neg
jae
dec
jge
in
mov
test
aas
cli
js
cmc
sbb
and
js
addr16
mov
jmp
jnp
pmullw
ret
in
out
sar
fiadd
ins
add
out
fnstsw
out
sbb
in
daa
cmc
psrad
cs
mov
dec
(bad)
ins
inc
dec
xchg
inc
(bad)
imul
push
sub
call
stc
xchg
and
xchg
push
jno
std
jecxz
push
je
test
add
adc
int
jae
pop
arpl
call
cdq
out
lea
inc
cmc
adc
in
sub
mov
mov
jno
stc
mov
enter
mov
push
out
xor
inc
into
inc
add
outs
pop
xor
adc
pop
outs
mov
add
adc
xchg
into
sub
lea
fnstsw
sar
sub
pop
stos
adc
(bad)
sti
dec
sbb
xor
add
push
cdq
mov
arpl
imul
sbb
sub
dec
loope
inc
mov
or
cmps
sbb
xor
movzx
mov
cmp
inc
mov
jecxz
sbb
inc
test
lock
mov
jp
adc
inc
mov
in
pop
jns
fbstp
shr
repz
rol
mov
out
jecxz
aad
jecxz
fist
add
pop
popa
int3
int
sti
fucomp
nop
fstp
xchg
pop
xchg
outs
gs
xchg
sbb
cmp
imul
icebp
mov
int
das
push
jbe
mov
push
fcom
pcmpgtd
jae
fwait
jne
dec
pop
add
dec
mul
movs
hlt
push
inc
adc
lea
ins
fild
push
lods
cmc
xlat
cmp
sbb
rcr
jp
add
pop
(bad)
xor
aad
popa
(bad)
movs
adc
(bad)
stos
sahf
jb
movs
pop
ror
(bad)
and
sbb
test
cmc
sahf
pop
xor
jp
aas
push
xchg
fld
mov
(bad)
jno
jno
aas
aad
or
xchg
inc
pop
xor
jb
inc
sbb
cld
pop
int
retf
sbb
mov
xor
call
pop
xor
and
and
jns
adc
inc
push
pop
je
add
mov
lea
xor
fldenv
pop
imul
nop
add
in
mov
into
mov
sub
mov
and
xchg
div
sub
mov
xchg
xor
sub
mov
or
mov
clc
movs
lea
jae
clc
ret
sbb
push
in
xor
pop
push
add
sbb
adc
inc
inc
inc
jae
sti
xchg
rol
or
fs
scas
jb
mov
retf
repz
or
mov
jo
mov
xor
or
adc
mov
ins
mov
out
out
dec
pop
ffree
repz
cmp
clc
add
cmps
(bad)
xor
(bad)
inc
icebp
outs
adc
popf
movs
popf
xchg
cdq
out
jmp
push
push
daa
out
or
addr16
loop
add
jmp
fisubr
lods
int
sahf
vmulpd
(bad)
xchg
(bad)
(bad)
xchg
mul
icebp
pop
and
fcmovbe
sbb
or
stc
cmp
sbb
or
xor
ins
mov
xchg
push
jle
xor
pop
jle
std
shl
add
or
jge
lods
cli
lahf
mov
pushf
xor
mov
push
call
rcl
aam
cmps
pop
and
fsubr
push
nop
adc
fisub
jb
daa
(bad)
ficom
sbb
mov
lahf
add
adc
loope
out
lods
jmp
push
jecxz
adc
cmps
outs
fdiv
(bad)
lods
dec
dec
outs
push
cmc
movs
sub
out
xlat
mov
adc
pop
sub
adc
rcl
pushf
enter
call
test
rcl
xor
sub
cdq
data16
and
adc
add
push
lea
pop
jmp
retf
daa
mov
mov
adc
outs
enter
cmp
adc
mov
fadd
cmp
cdq
dec
mov
sub
dec
loopne
jp
pop
out
(bad)
out
movs
nop
and
mov
push
sbb
gs
mov
lea
mov
push
inc
stos
mov
aas
stc
push
xchg
jecxz
push
xor
iret
add
(bad)
test
(bad)
jl
retf
jge
(bad)
sbb
inc
adc
rcr
rol
cmp
(bad)
idiv
ins
call
shl
and
int3
mov
xor
scas
pop
sub
scas
stc
dec
mov
pusha
sti
retf
mov
or
jecxz
mov
ret
mov
cwde
mov
mov
inc
arpl
sub
ins
lahf
(bad)
in
mov
mov
lahf
dec
dec
aam
pop
dec
mov
push
mov
xor
pop
xor
arpl
sbb
cmc
mov
add
push
push
jmp
mov
loop
jbe
xlat
mov
test
test
(bad)
icebp
dec
nop
adc
add
in
jecxz
or
mov
in
test
jno
xlat
inc
push
inc
imul
shl
pop
sbb
pop
add
jecxz
and
aaa
xlat
in
mov
sbb
fidiv
xor
pusha
outs
pop
movs
test
xor
xchg
cmp
and
xor
fistp
dec
cmc
sbb
fcom
ds
xchg
jmp
and
scas
pop
shl
ret
(bad)
cs
cmp
inc
inc
mov
sub
mov
lods
jmp
jp
fimul
jge
adc
dec
aaa
jae
ins
jg
iret
mov
add
jp
(bad)
mov
jbe
mov
(bad)
sub
mov
test
loope
xlat
imul
rcl
inc
cmp
mov
xchg
retf
fist
clc
(bad)
lods
push
pop
dec
sub
push
pop
stos
jno
sub
adc
mov
mov
test
xchg
ss
jb
arpl
scas
cmp
out
mov
cmp
int3
mov
test
in
stos
rol
aad
retf
call
sbb
pop
(bad)
call
in
dec
(bad)
cmp
stc
ret
clc
jge
pop
pop
mov
(bad)
adc
shr
xchg
mov
int
scas
mov
xchg
mov
and
shl
outs
jns
dec
icebp
icebp
mov
jbe
inc
adc
cmps
and
jae
je
push
ret
pusha
iret
xchg
xchg
jo
sub
mov
mov
push
sahf
xor
retf
icebp
(bad)
mov
test
pop
pop
add
sub
dec
aaa
cwde
pop
(bad)
out
pop
ins
or
cdq
test
adc
add
dec
in
pop
das
xor
mov
xchg
ins
mov
(bad)
xchg
push
imul
xor
mov
es
xor
xchg
popf
nop
call
shl
(bad)
mov
shr
call
vmread
and
mov
rcr
dec
stc
clc
xor
ins
sbb
dec
test
es
sahf
mov
(bad)
in
scas
pop
xchg
add
fs
xor
adc
mul
mov
jg
not
adc
fcom
cmps
int
jns
sub
in
out
pop
mov
xor
imul
ins
push
jge
and
cmps
aaa
add
adc
push
inc
pop
out
rcl
arpl
(bad)
lock
jmp
ss
mov
cs
dec
sub
jmp
push
or
xor
push
bound
push
mov
arpl
test
sbb
push
mov
add
mov
outs
cmp
adc
addr16
test
popa
fidivr
mov
jmp
ja
test
pop
call
sub
std
retf
push
jo
lock
mov
ds
neg
push
sbb
add
jp
mov
inc
inc
arpl
sub
shl
mov
pop
cmp
push
stos
xor
mov
jae
retf
jnp
xor
popa
add
sahf
mov
mov
inc
je
stos
pop
loopne
retf
sbb
adc
push
or
mov
push
in
mov
sbb
cs
push
bound
out
dec
add
sub
movs
or
addr16
jg
inc
aaa
adc
adc
call
dec
mov
hlt
outs
js
and
rcr
mov
push
push
adc
cmp
(bad)
sbb
jl
jmp
fisttp
xor
outs
pop
cld
loope
cmps
and
inc
lds
cli
xor
test
les
std
in
test
adc
push
daa
aad
scas
sar
out
dec
sub
push
lea
cmp
sub
mov
jle
test
and
(bad)
sub
scas
stc
les
xor
stc
and
(bad)
shr
push
in
sub
mov
pop
ror
test
lock
xchg
pop
jle
fadd
xor
loop
fidiv
mov
into
xor
in
fs
jge
loopne
or
mov
jbe
aad
stos
mov
pop
sub
ins
scas
xchg
ins
int3
xor
or
test
push
(bad)
outs
sbb
mov
out
push
push
outs
outs
icebp
pop
pop
push
xor
aaa
fs
shl
mov
xchg
fistp
dec
daa
dec
das
mov
inc
jnp
fisttp
mov
jge
cs
push
idiv
mov
int
iret
popa
gs
std
test
je
add
sbb
std
xchg
data16
adc
xor
test
arpl
jne
push
test
ins
inc
shr
xchg
push
adc
and
and
es
mov
aad
push
sahf
inc
ins
aas
into
jecxz
xor
ins
jmp
jb
fnstenv
lods
retf
adc
cmp
xchg
pop
sub
mov
cs
mov
or
jne
adc
xor
(bad)
mov
lds
pop
and
add
(bad)
leave
sti
push
sysret
cmp
sti
xor
or
rcr
adc
mov
inc
mov
stos
jne
inc
popa
cwde
or
xor
cmp
dec
add
dec
or
pushf
(bad)
xor
retf
icebp
loope
in
push
pop
jnp
ins
loop
pushf
mov
in
adc
sbb
sbb
mov
mov
retf
sub
out
sub
movs
lds
ins
add
popf
mov
leave
adc
stc
int3
jae
adc
out
das
in
dec
inc
mov
fldenv
sub
iret
(bad)
pop
xchg
add
enter
xor
mov
imul
push
pop
aam
scas
int3
mov
mov
(bad)
fdiv
mov
pop
aad
xchg
mov
dec
adc
and
mov
hlt
push
pushf
fst
adc
xor
mov
popf
lock
and
pop
sbb
int3
pop
mov
sbb
enter
inc
inc
mov
js
xor
gs
out
movs
sub
int
and
fsubr
data16
addr16
cmp
mov
pop
fdivr
cmps
inc
hlt
xor
loop
mov
sub
jae
pop
xor
(bad)
sub
or
mov
mov
sbb
data16
jg
add
dec
jecxz
cmc
mov
outs
mov
fcomp
cmc
and
sbb
nop
or
xchg
pop
jae
sub
pop
ds
xor
call
push
jge
mov
mov
push
retf
dec
sbb
in
fbstp
sub
cld
addr16
fbstp
in
loop
cdq
nop
inc
cmp
out
inc
inc
das
or
adc
xor
sbb
sbb
sub
xor
call
icebp
push
jp
and
mov
inc
cmp
lock
xchg
push
xor
cli
sbb
or
inc
lods
popa
mov
sbb
mov
mov
jo
clc
call
clc
or
jns
xchg
ficomp
or
xchg
pop
es
fwait
stos
and
sbb
out
leave
add
mov
xor
and
cmp
mov
or
test
or
retf
xor
xchg
or
or
xchg
fdivp
fbld
xchg
loop
pushf
test
cld
sub
es
in
scas
add
cdq
shl
in
jae
mov
loope
aaa
add
mov
mov
ret
dec
sbb
scas
popf
push
lea
jmp
xor
nop
shl
or
push
outs
push
pop
cmp
dec
or
xor
sbb
scas
or
inc
mov
sub
movs
leave
inc
xchg
out
mov
fdiv
jl
pop
push
sub
imul
add
sbb
pop
ret
adc
ja
les
sahf
pop
aad
das
mov
pusha
sbb
shr
add
sbb
mov
push
or
lds
das
adc
leave
or
out
ins
outs
jmp
pop
jns
and
lock
add
addr16
sub
js
out
mov
rcl
dec
(bad)
jmp
cmp
pop
mov
adc
pop
stos
dec
(bad)
data16
icebp
jg
sub
jp
nop
and
data16
test
jmp
in
push
push
enter
mov
retf
pop
push
push
test
les
inc
cmc
lea
push
jmp
mov
scas
fiadd
jecxz
out
sbb
stos
push
clc
mov
es
std
in
call
gs
repz
xchg
and
sbb
pop
or
mov
ret
inc
test
pop
fucomi
and
sub
lods
jecxz
xor
cmp
mov
mov
dec
outs
jecxz
xchg
or
xor
fwait
(bad)
cld
sub
xlat
stos
aad
ror
sbb
dec
or
das
ins
dec
cmp
shr
(bad)
push
call
jmp
xor
ds
nop
adc
cmp
mov
fild
xor
mov
fsub
adc
or
mov
dec
jns
push
mov
sub
pushf
xchg
js
mov
loope
push
mov
or
jbe
cmp
int
int3
cmp
je
into
sbb
cdq
idiv
xor
in
jmp
push
stos
es
add
pop
jle
js
sbb
ds
ficomp
cmc
aad
jae
sbb
ficomp
jns
stc
clc
lods
xor
mov
fild
fcom
inc
outs
ret
(bad)
jo
mov
adc
xchg
(bad)
or
ret
lods
jg
or
dec
movd
xor
in
(bad)
aam
push
and
in
pushf
mov
xlat
jecxz
out
aaa
jge
sbb
out
cmp
stos
outs
xor
add
jo
pop
stc
pop
mov
push
std
test
push
xlat
add
dec
scas
mov
inc
add
into
mov
pop
or
sbb
call
je
push
push
lea
outs
retf
jnp
xor
out
xchg
mov
dec
fild
pop
sub
mov
fisttp
sub
or
ins
mov
in
out
data16
test
xor
adc
adc
sbb
jae
and
xor
or
fsubrp
std
les
add
scas
or
ss
xor
pop
mov
cmps
cmps
adc
push
adc
jmp
mov
movs
pop
and
xchg
add
rol
ins
jl
in
mov
int
repz
ds
add
xchg
in
(bad)
or
std
xor
mov
mov
add
clc
ins
xor
repz
jmp
hlt
sti
xchg
adc
imul
pop
xor
mov
sbb
ja
xchg
ret
out
js
inc
test
ds
test
ror
adc
and
mov
scas
shl
por
js
enter
out
sti
mov
inc
ja
into
and
cld
and
and
add
imul
jnp
call
mov
in
cdq
jg
sti
into
cmc
mov
push
push
dec
push
stos
arpl
enter
mov
int3
dec
fcmovne
sub
stos
xchg
push
sbb
sahf
stos
out
in
xchg
cdq
pop
sbb
pusha
pop
push
cwde
repnz
fcmovne
sti
and
das
add
or
and
ins
mov
shl
or
cmp
pop
dec
movs
inc
imul
ss
cld
mov
cdq
add
stc
fdivr
mov
cmp
lea
or
(bad)
push
mov
data16
xchg
mov
sub
or
or
test
lods
(bad)
hlt
mov
add
(bad)
scas
cmp
fwait
stc
xor
inc
cwde
xlat
push
fucom
cmps
inc
in
mov
rcl
rcl
cmp
ds
(bad)
fcomi
lahf
fdiv
xchg
mov
inc
mov
xlat
sub
mov
sub
inc
out
dec
jle
mov
into
mov
jl
std
je
inc
leave
lea
fild
icebp
into
jmp
fs
repnz
xlat
mov
fbld
cs
bnd
sar
mov
xor
and
lahf
inc
mov
int
dec
cmp
mov
(bad)
into
inc
mov
jg
out
sub
mov
shl
mov
out
dec
dec
mul
sub
sahf
xchg
lods
test
jg
fcmovnu
jmp
adc
inc
or
and
int3
sbb
pop
addr16
mov
xor
sbb
retf
rol
and
jnp
mov
mov
test
push
xor
cmp
pop
mov
clc
inc
jp
pusha
pop
push
mov
sub
mov
xchg
(bad)
cdq
jmp
add
ss
jle
(bad)
mov
imul
cmp
xor
sub
mov
inc
xchg
xor
aaa
(bad)
cdq
dec
jp
sub
jns
sbb
bound
into
mov
lock
sbb
mov
jae
inc
mov
push
(bad)
xor
push
test
cmp
add
fwait
sar
adc
in
mov
ja
jp
pop
mov
fs
sub
sub
int
loopne
pop
fcom
bound
jae
movs
or
push
mov
test
dec
mov
lock
pop
mov
shl
xlat
bound
test
pop
and
enter
stos
push
mul
mov
mov
jne
outs
cs
jmp
cmp
xor
call
ss
pop
xor
icebp
sbb
xor
sti
mov
ja
xor
dec
cmp
mov
adc
mov
lds
jg
(bad)
cmc
cld
xchg
daa
xchg
adc
pop
xchg
sbb
inc
ret
sahf
jb
mov
dec
enter
mov
scas
shl
fucomip
cmps
or
push
inc
mov
mov
push
mov
jp
add
xchg
mov
sbb
inc
(bad)
mov
pop
push
in
imul
out
aas
pop
stc
cmp
clc
jecxz
int
ss
leave
push
or
es
pop
push
data16
and
nop
cmp
jns
add
mov
aad
add
lods
adc
xlat
scas
mov
stc
cmp
or
mov
add
loop
and
cmps
call
mov
jne
xchg
jmp
out
fsubrp
leave
push
test
into
shl
jns
fwait
js
pushf
pop
xchg
xchg
mov
clc
or
cwde
jo
xchg
or
fwait
jo
fistp
adc
fcmovne
xchg
mov
in
movs
mov
shl
mov
and
imul
out
out
pop
or
shr
jno
sbb
xor
cli
inc
out
inc
popa
je
fdivr
xor
dec
iret
or
aaa
retf
xchg
adc
add
ret
add
and
mov
test
sbb
xor
scas
mov
push
lock
xor
adc
(bad)
stc
fchs
adc
dec
dec
retf
cmp
inc
dec
add
dec
jae
jbe
cmc
stc
je
xchg
sub
mov
idiv
(bad)
push
or
adc
adc
cmp
cwde
cmps
das
jp
xor
sbb
dec
xor
cmp
enter
loop
adc
test
jnp
int
cmp
jne
fcmovne
mov
cmp
loop
out
(bad)
cmp
aaa
xchg
jle
es
outs
dec
mov
fistp
push
and
repz
popa
ja
les
(bad)
test
cmovnp
addr16
(bad)
shl
stos
scas
loope
mov
xchg
mov
or
sub
sti
dec
in
pop
adc
mov
out
lock
test
mov
push
scas
ret
movs
pop
add
mov
or
aas
mov
dec
es
retf
or
les
mov
or
lahf
mov
test
xchg
mov
ret
xchg
dec
je
ss
mov
hlt
(bad)
into
frstor
nop
loopne
xchg
jle
mov
aaa
jmp
aad
mov
data16
lock
clc
ins
mov
cmp
dec
stc
add
inc
cmp
loop
push
inc
hlt
and
mov
sub
arpl
dec
cmp
sti
cwde
mov
jae
xchg
and
imul
popf
(bad)
es
mov
loope
cmp
aas
jo
inc
pop
sbb
mov
push
or
lahf
inc
test
repz
adc
(bad)
mov
inc
pop
inc
xor
xor
je
imul
clc
jge
stos
out
pop
add
ins
fist
mov
movs
xchg
sbb
push
push
mov
ins
fst
aam
sub
movs
clc
mov
cmp
rcr
add
ret
fdivr
xchg
in
fstp
lods
(bad)
cwde
dec
or
ins
and
fstp
jbe
sbb
jmp
ss
jae
stc
xchg
pop
cmp
mov
or
inc
jmp
(bad)
gs
imul
dec
mov
jns
or
and
or
xor
nop
mov
inc
(bad)
xor
jle
inc
mov
xor
cmp
and
jmp
retf
in
in
loope
or
das
xor
inc
inc
test
addr16
jle
adc
jno
cmp
test
adc
mov
pop
xchg
add
add
pop
jp
std
push
std
ins
pop
lahf
lea
imul
xor
pop
fsub
push
push
mov
movs
mov
jne
call
jne
push
loope
call
xchg
das
gs
or
sub
ss
pop
inc
add
pop
or
or
inc
int
jns
jae
push
jnp
int3
(bad)
das
xor
push
pop
sbb
mov
je
loop
(bad)
repnz
sub
outs
shl
sbb
push
in
loopne
sub
outs
inc
pop
cmp
or
popa
(bad)
imul
shl
je
idiv
bound
ins
js
sbb
push
fmulp
dec
ins
inc
hlt
adc
mov
sti
retf
daa
pop
test
loope
inc
and
add
push
(bad)
jmp
sub
inc
hlt
and
lock
inc
push
xchg
fbstp
or
sbb
mov
jg
into
rcl
(bad)
mov
cwde
das
ret
pop
adc
jo
sub
jmp
cwde
test
fadd
cmp
mov
cmp
adc
aam
push
mov
ins
retf
sub
je
adc
mov
test
repz
add
addr16
pop
sahf
dec
sub
test
fistp
jb
add
ret
push
and
imul
xchg
lea
pop
fcomi
push
lock
cmps
push
add
out
sub
shl
popa
push
xor
inc
adc
xchg
sbb
xchg
pushf
lods
xor
outs
mov
cmp
push
xlat
cmps
push
repnz
ret
add
or
rol
xor
inc
sub
or
xchg
pop
leave
jno
(bad)
std
jge
mov
cmp
idiv
and
dec
cdq
out
fstp
and
outs
mov
pop
loop
pop
mov
(bad)
lods
mov
add
(bad)
addr16
xor
outs
cmp
pop
(bad)
dec
stos
nop
xchg
adc
jno
mov
lods
data16
(bad)
out
js
stc
(bad)
test
(bad)
cmp
ins
ins
or
repz
js
pop
mov
and
mov
movs
dec
mov
xchg
sub
jp
in
div
xchg
jns
sbb
test
mov
push
jae
scas
hlt
les
ss
sbb
xor
and
cwde
add
pop
push
(bad)
sahf
daa
mov
sbb
inc
jne
jl
add
xchg
push
mov
fistp
out
dec
mov
jne
xchg
mov
add
xor
or
stc
sbb
and
mov
shl
sub
ss
int
stos
xor
push
lds
pusha
pusha
into
jle
mov
sub
scas
sbb
repz
jle
xchg
mov
mov
and
ret
dec
mov
imul
pop
inc
fisubr
jmp
imul
stc
in
mul
imul
inc
pop
mov
jg
xor
push
mov
sub
mov
fwait
cld
jne
pop
retf
inc
fwait
jp
ret
inc
ficomp
dec
xchg
cmps
pminsw
xchg
gs
lock
mov
inc
movs
mov
(bad)
adc
cmc
cmp
inc
push
aam
ja
cs
or
cs
test
pop
mov
cmp
or
ins
std
ror
shl
lods
mov
dec
in
shl
or
push
jmp
push
sub
pop
les
cmp
mov
xchg
(bad)
sbb
or
and
sti
mov
ficom
mov
pop
mov
dec
(bad)
int3
mov
test
push
xchg
inc
pop
cs
imul
ins
cmps
fs
jp
sub
(bad)
xchg
mov
push
call
mov
pop
fs
outs
sub
out
out
in
mov
push
sti
mov
loope
cdq
test
cmc
mov
cmp
or
pop
in
es
sbb
outs
cmps
pop
push
shl
aas
xor
cmp
push
(bad)
push
das
ins
int3
xor
adc
inc
(bad)
pop
dec
pop
shl
lds
fwait
mov
fldenv
add
xor
sub
sub
dec
(bad)
mov
xchg
mov
cmp
xchg
ror
mov
loopne
fs
mov
mov
aas
lock
push
mov
adc
mov
mov
jno
jl
pop
sbb
into
lahf
jecxz
add
xlat
ja
push
push
adc
in
stc
das
inc
cmps
sbb
xor
inc
movs
or
pop
inc
sbb
arpl
push
repnz
cmp
adc
xor
adc
pop
inc
enter
in
fwait
(bad)
sbb
xchg
sahf
js
loopne
movs
aad
dec
bound
adc
paddb
mul
sbb
xchg
mov
test
cmp
aas
cdq
call
ins
aas
sbb
add
pop
test
fnsave
mov
cwde
mov
push
or
repz
jae
jbe
sar
es
push
fwait
test
add
scas
dec
mov
outs
mov
mov
ror
mov
es
sbb
adc
cdq
stos
mov
cmc
std
jmp
mov
sbb
sub
or
jnp
sbb
fwait
xor
pusha
pop
shl
fidiv
mov
push
xor
data16
outs
out
pop
scas
frstor
pop
dec
pop
pop
ja
sbb
adc
push
push
stc
mov
jmp
std
inc
lds
shl
out
addr16
scas
cmp
addr16
adc
daa
(bad)
loop
repnz
cwde
imul
xlat
mov
inc
jge
adc
repnz
aas
sti
mov
jno
inc
popa
add
push
(bad)
sti
mov
jns
sub
adc
daa
add
loop
call
jge
int3
add
pop
xor
aam
aas
ds
and
add
jmp
push
xchg
dec
sahf
push
ja
xor
or
and
cmp
xchg
mov
adc
bound
jbe
(bad)
pop
mul
in
ins
push
sbb
cmp
mov
call
out
or
xchg
fwait
rcr
push
mov
jmp
mov
pop
aam
mov
xchg
hlt
inc
adc
or
gs
out
pop
neg
outs
and
adc
call
inc
cmp
and
int
add
cwde
push
pop
in
fs
xchg
shl
xchg
pop
mov
inc
mov
call
call
jmp
xchg
(bad)
pop
stos
dec
pusha
pop
enter
stc
adc
(bad)
cmp
sbb
xor
imul
cmc
jnp
mov
and
fcmovb
jge
pop
test
jge
sar
push
xor
lods
xchg
cmp
lahf
push
sahf
mov
push
cdq
mov
mov
mov
adc
sbb
add
pop
ins
imul
sub
pop
mov
fs
cmp
mov
jg
in
pop
fs
int
sub
fiadd
icebp
xchg
jge
aad
cdq
in
dec
inc
(bad)
cwde
movs
shl
pop
fstp
dec
add
push
xchg
push
or
jno
fidiv
mov
arpl
push
or
xchg
xchg
pusha
fsub
or
ss
jae
aam
loope
add
ror
dec
add
push
fldenv
jmp
pushf
out
vcomisd
mov
test
int3
sbb
lds
stos
pop
scas
xor
inc
repz
inc
mov
imul
hlt
mov
lea
pop
xor
jae
ja
cmp
sbb
pusha
cwde
inc
shr
adc
adc
sti
inc
dec
and
adc
mov
push
push
js
and
ja
cmp
call
fxch
jle
sub
mov
xor
cmps
lahf
je
das
call
popf
mov
sbb
push
lods
mov
dec
sbb
dec
ficomp
jo
into
jbe
pop
(bad)
and
dec
mov
ja
xor
mov
xor
adc
fistp
adc
sub
pop
int3
inc
and
xor
adc
dec
mov
ss
dec
lods
ror
or
pop
lock
mov
or
adc
retf
ins
cld
sbb
lds
mov
mov
xchg
jo
mov
aam
fdivrp
mov
jle
cld
jnp
in
fwait
das
or
aad
add
fstp
(bad)
adc
and
std
pop
call
mov
sbb
fnstenv
cld
and
stos
push
es
mov
or
dec
jno
shr
stos
cmp
leave
ror
nop
mov
inc
push
sbb
adc
clc
test
and
mov
pop
mov
rcl
lahf
sub
inc
out
push
dec
in
lds
sub
xor
push
push
adc
pop
mov
mov
push
(bad)
jbe
repnz
ja
jmp
ja
inc
into
add
push
dec
ds
xor
push
repnz
sbb
cld
fsubr
mov
xchg
imul
cmps
mov
jae
sbb
mov
jmp
mov
int3
or
mov
or
xchg
outs
jmp
pop
cmps
or
cmp
jns
adc
lahf
out
into
and
inc
rcr
lods
mov
cdq
ret
jbe
push
int3
cmp
inc
adc
test
(bad)
pop
jbe
nop
mov
jecxz
mov
loopne
push
gs
cmp
jb
mov
stos
xchg
retf
push
popa
addr16
int
mov
add
xor
iret
cmp
jecxz
mov
test
stos
mov
cwde
push
or
(bad)
retf
adc
xor
xchg
stos
repz
xchg
leave
vmovlpd
add
rcr
xchg
sbb
push
mov
xchg
mov
push
out
loope
sbb
mov
xlat
fidivr
or
and
jle
adc
pusha
outs
sub
cmp
into
and
add
xor
aad
scas
mov
jmp
fs
push
leave
fcom
popa
in
pop
jl
je
add
pop
or
out
mov
jmp
mov
sub
clc
cmp
lss
arpl
and
add
mov
jmp
dec
jno
jl
mov
inc
xchg
xchg
adc
push
popa
imul
loope
push
cdq
sbb
xchg
aad
imul
xchg
(bad)
cwde
push
ins
add
std
cdq
int
push
dec
fs
fwait
jle
jmp
repnz
lods
or
xor
popa
lods
push
data16
adc
mov
xor
jl
minps
push
sub
mov
or
aas
into
xor
in
ins
jmp
sbb
dec
cli
pop
jns
icebp
lock
lods
psubusw
out
xchg
stos
stc
adc
shl
jge
fyl2xp1
jecxz
mov
dec
xor
xlat
pop
out
adc
or
xchg
mov
les
sbb
and
sub
adc
leave
xor
sbb
cmp
xor
push
loope
cld
fcmovnu
sbb
xor
add
jl
inc
cmp
pop
icebp
dec
dec
nop
iret
fsub
mov
lahf
inc
call
jbe
jecxz
xor
inc
scas
jp
call
bswap
or
scas
add
mov
mov
shl
or
push
loope
adc
int3
(bad)
bound
mov
add
jbe
mov
lods
ja
sub
push
lahf
pop
add
mov
test
scas
pop
mov
into
pop
jae
das
lods
push
cmp
push
fsubr
dec
gs
and
or
les
lods
ins
jge
and
push
imul
clc
mov
es
xchg
dec
fstp
jg
pop
les
rcr
das
xor
ss
into
jmp
cmc
std
inc
je
push
or
mov
sub
xor
icebp
ret
stos
xchg
sahf
jmp
pusha
dec
dec
fnstcw
mov
mov
repnz
test
push
xchg
mov
in
repnz
mov
ror
enter
mov
pop
jge
(bad)
ds
arpl
xlat
xor
movs
and
add
fld
das
test
loopne
popf
mov
scas
jne
mov
out
es
push
mov
lahf
cwde
cli
fist
xchg
push
out
jns
xchg
push
jo
nop
adc
mov
stos
ins
xlat
cmc
xchg
sub
push
call
ret
call
mov
push
lds
inc
in
push
xlat
retf
inc
mov
pop
popa
outs
jecxz
push
or
cmp
call
js
jle
mov
dec
mov
sbb
mov
mov
test
test
add
cmp
or
in
and
(bad)
ja
xor
dec
adc
ret
out
fs
mov
(bad)
dec
movs
jg
dec
stc
and
inc
xchg
pop
mov
add
test
aaa
sbb
xchg
out
and
cmp
mov
call
pop
mov
lods
mov
leave
mov
or
pop
jg
movs
adc
inc
push
retf
gs
pop
ss
mov
test
sbb
mov
cmps
in
por
arpl
clc
push
push
leave
add
fist
not
pop
push
fwait
push
mov
in
arpl
xchg
inc
push
pop
loopne
or
jle
pop
ds
xchg
mov
push
xor
add
inc
push
imul
mov
mov
add
xor
call
xlat
das
out
xchg
ret
stos
js
cmp
inc
mov
and
mov
fidivr
push
mov
icebp
pop
add
sbb
data16
or
or
pop
jp
sub
lahf
mov
cmp
xchg
inc
inc
or
stos
fs
fmul
push
enter
cld
mov
mov
movs
sub
fild
add
lea
add
clc
(bad)
jmp
jno
push
out
test
mov
cs
mov
push
cdq
sub
cs
mov
fimul
(bad)
ins
xlat
idiv
outs
sbb
jmp
mov
mov
adc
enter
call
mov
xchg
xor
(bad)
cmp
mov
push
inc
inc
sub
lods
or
inc
mov
in
add
adc
rcr
lahf
sub
cmp
(bad)
xor
mov
jmp
jmp
popa
xor
sub
inc
jmp
ror
sub
(bad)
dec
mov
mov
inc
or
(bad)
imul
add
fnstenv
adc
popf
xchg
or
mov
sbb
push
add
mov
outs
sub
mov
int
dec
add
std
add
call
adc
mov
mov
adc
mov
sahf
add
cmps
(bad)
pop
das
addr16
dec
xchg
popf
fcomp
out
push
inc
add
adc
jecxz
icebp
int3
cmp
cmp
aad
or
stos
mov
jnp
imul
add
mov
push
push
adc
loop
adc
xchg
push
out
bound
adc
or
jbe
mov
jae
xor
test
mov
add
shl
inc
inc
xchg
(bad)
shl
retf
push
retf
pop
in
add
movs
aas
daa
test
pusha
test
dec
popf
jo
cwde
fnstenv
mov
stc
xchg
and
pop
mov
ss
shl
add
call
movs
push
bound
jmp
dec
mov
push
outs
inc
cmp
jnp
out
fwait
xor
ja
push
jmp
lds
fwait
or
and
xchg
adc
into
and
fscale
ret
push
scas
mov
dec
test
aad
xor
ret
aaa
shl
fidiv
sbb
jg
xor
add
inc
pop
(bad)
jl
jg
sub
in
imul
nop
retf
push
daa
cmps
je
cmps
shl
adc
add
les
dec
mov
cmps
mov
(bad)
scas
ret
cmp
adc
push
jecxz
pop
retf
int3
xchg
pop
pop
adc
test
idiv
mov
xchg
ret
sar
ja
push
cmp
fadd
mov
cmp
and
icebp
ds
pop
outs
cmp
cmp
fucomip
ret
daa
imul
adc
loopne
cs
sbb
adc
jp
push
cmps
inc
xchg
push
icebp
mov
ret
aaa
ror
mov
pop
xor
sub
loopne
xor
xchg
dec
je
mov
test
ins
ds
fwait
jno
mov
sbb
add
pop
jnp
xor
mov
popa
jecxz
push
or
inc
xchg
cmps
or
dec
pushf
mov
cs
push
je
jmp
push
in
mov
int3
inc
xchg
adc
arpl
pop
imul
(bad)
pop
jmp
and
inc
icebp
mov
dec
fdiv
mov
cmp
adc
dec
inc
or
jno
and
sub
bnd
lods
sub
out
(bad)
and
test
test
das
xchg
cmp
jle
test
push
mov
ficom
xchg
mov
clc
stos
int
push
dec
jbe
sub
stos
mov
dec
out
xor
cmps
les
fwait
add
mov
mov
dec
push
mov
call
and
and
pinsrw
lahf
jne
enter
fxtract
mov
cli
add
or
jmp
push
addr16
call
xor
add
jne
lds
pop
mov
sti
loop
test
pop
or
lods
out
xlat
lods
mov
sub
inc
adc
mov
pop
inc
repz
or
jg
dec
les
stos
fidivr
adc
and
pusha
fwait
adc
inc
dec
cs
loop
jo
push
and
mov
jb
ins
xor
mov
jae
outs
cmp
or
xchg
xchg
and
repnz
and
retf
inc
mov
cmp
pop
xor
mov
adc
push
xchg
jle
inc
xchg
lea
scas
inc
xor
lods
jecxz
adc
int
aam
ret
in
imul
dec
out
test
lods
mov
adc
into
loope
bound
jo
inc
push
pop
test
rcl
scas
lock
sbb
xchg
cmp
sti
std
sbb
adc
xlat
dec
mov
call
add
jp
mov
leave
imul
pop
push
sbb
jae
stos
test
fdivr
xchg
int3
daa
sub
inc
repnz
adc
sbb
rcr
in
outs
rcr
jae
icebp
push
sbb
adc
nop
sub
jmp
push
add
xchg
retf
lock
movs
retf
xor
cmc
pop
sbb
popa
inc
(bad)
leave
jnp
ja
ds
and
push
mov
dec
retf
adc
xor
int
add
xlat
cmps
add
adc
add
das
xor
push
retf
pop
cdq
dec
call
inc
and
data16
popa
dec
or
jmp
outs
inc
(bad)
dec
fadd
mov
mov
pop
(bad)
pusha
xor
and
scas
test
cld
xchg
pusha
xlat
loope
pop
pop
sub
push
popf
xchg
aad
cs
inc
loop
out
xor
mov
jp
push
inc
call
lods
rcl
cs
push
sub
dec
cmp
dec
iret
int
clc
xor
dec
xchg
mov
jmp
sub
(bad)
pop
mov
iret
xchg
lods
retf
sub
jmp
add
sbb
jns
dec
jbe
adc
pop
adc
jmp
sub
repz
sub
rol
sbb
cmp
xor
xchg
mov
jp
test
stos
in
and
jmp
fmul
ss
cs
add
push
jl
repnz
or
ins
lock
mov
scas
pop
sbb
iret
out
xor
mov
mov
xor
mov
int
pop
loope
inc
push
jns
es
pop
cld
(bad)
fistp
add
or
inc
push
in
popf
mov
inc
ins
movs
cmc
ja
loop
nop
lea
xor
inc
lea
pop
mov
loope
add
mov
mov
inc
(bad)
(bad)
lahf
adc
frndint
scas
sar
jbe
or
ins
xor
sub
mov
shr
mov
xchg
sub
sub
hlt
mov
call
ins
and
nop
leave
push
jge
inc
loop
lahf
call
and
and
mov
mov
(bad)
test
out
retf
sub
push
pushf
and
movs
rol
sub
dec
xchg
das
mov
cld
(bad)
lock
push
test
jae
aam
lea
popf
sbb
repz
lahf
sbb
hlt
push
fstp
xchg
cmp
stc
scas
inc
inc
icebp
es
adc
lods
fsubr
jmp
lods
mov
cli
xor
lock
jmp
xchg
mov
stc
dec
jno
cmp
adc
xchg
xchg
push
pop
arpl
inc
or
sar
pop
ins
or
out
lock
loopne
sub
inc
and
or
enter
or
adc
xchg
mov
popa
imul
test
mov
adc
inc
jg
or
mov
xor
shl
pop
popa
xchg
cmp
inc
mov
movq
cld
jno
repnz
repz
mov
mov
push
fst
sub
xchg
push
adc
pop
adc
in
cmp
mov
add
add
or
inc
in
mov
dec
in
sbb
xlat
inc
push
fsub
aas
jmp
pop
jo
sar
jge
addr16
data16
gs
repz
mov
inc
pop
sbb
inc
inc
mov
outs
ficom
adc
(bad)
icebp
mov
xchg
mov
int
retf
push
shl
stc
pop
mov
push
sahf
xchg
pop
(bad)
cmp
ins
rcr
mov
jo
stc
hlt
add
push
sbb
scas
shr
shr
mov
cmp
sbb
dec
add
sub
or
xchg
or
jns
lds
mov
dec
popf
je
frstor
add
inc
scas
jae
hlt
xor
xchg
add
gs
(bad)
mov
clc
aad
sbb
xchg
loope
js
ror
imul
cmps
out
fs
sub
dec
pop
ror
int3
pop
inc
push
out
out
xor
inc
sub
dec
adc
(bad)
cmc
(bad)
mov
repz
fwait
shl
jae
mov
iret
and
mov
ficomp
sbb
shr
mov
sub
mov
push
cmp
in
or
not
(bad)
out
inc
cdq
and
iret
sub
test
push
dec
fxtract
mov
jns
test
pop
ja
(bad)
mov
inc
setbe
xchg
fcom
mov
or
sub
mov
xchg
jne
sbb
rcl
adc
xor
push
cwde
movs
aad
(bad)
in
push
add
int
mov
mov
shl
test
inc
xchg
inc
mov
out
lods
and
cld
cmp
mov
stos
push
imul
sahf
fsubrp
and
xchg
add
cmps
fcomp
shr
xchg
jge
outs
xchg
ss
in
mov
cmc
pop
jge
enter
dec
popf
sbb
das
or
mov
xor
jp
mov
fwait
jmp
es
pop
je
and
dec
jmp
retf
sub
adc
sahf
and
iret
add
or
sti
je
add
(bad)
mov
mov
iret
xchg
movs
imul
jg
pmulhw
or
or
into
jae
push
(bad)
loopne
cmps
clc
lahf
mov
xchg
xor
hlt
ror
jp
sbb
in
cli
and
fdivr
aaa
sar
adc
ret
std
sbb
or
(bad)
in
push
pmulhw
ja
sti
cmovle
aad
cwde
jle
gs
jg
aaa
pop
in
or
add
stos
add
cmp
scas
cmp
push
loope
xor
std
cli
push
les
jmp
loope
dec
or
rol
push
loop
rol
call
sub
or
clc
loop
jmp
dec
add
repnz
jmp
cmps
fild
daa
das
push
repz
inc
mov
js
fidiv
xor
cmp
aaa
or
sbb
sbb
arpl
mov
dec
in
mov
add
mov
inc
or
imul
dec
adc
fwait
enter
xchg
sar
adc
push
pusha
push
sub
sbb
std
or
cs
scas
pop
sbb
dec
lds
jl
sbb
sbb
dec
sub
mov
adc
stos
out
lahf
and
mov
mov
jmp
push
pop
pop
sub
cmps
(bad)
pop
in
jl
(bad)
pop
mov
or
sub
or
fs
dec
popf
xchg
into
imul
pop
and
mov
and
adc
or
cwde
inc
sbb
xlat
int
cmps
rcl
(bad)
test
in
xor
shr
xlat
adc
cmc
and
shr
arpl
aad
push
inc
out
out
add
int3
mov
call
adc
retf
mov
adc
retf
sbb
test
pop
les
int
call
mov
fdiv
js
or
dec
fimul
pop
mov
dec
adc
ins
xlat
xchg
scas
xor
js
cmc
(bad)
pusha
sub
cwde
inc
int
dec
push
out
repnz
jnp
repnz
sub
xor
jl
outs
imul
(bad)
mov
call
dec
fstp
push
scas
push
push
ins
repz
cmp
adc
adc
loope
(bad)
fsubr
jnp
lea
mov
push
retf
sahf
cmc
cs
pop
push
adc
fdiv
inc
inc
inc
add
xchg
lods
mov
fucomi
push
sbb
sub
xchg
dec
ja
sub
mov
out
xchg
bound
jns
into
and
jne
cmp
xchg
and
and
sbb
sub
mov
(bad)
sbb
outs
pop
dec
sbb
fisttp
mov
cmps
inc
and
mov
pushf
ds
test
fwait
loop
sbb
nop
fld
shl
repz
push
mov
jmp
enter
jge
xchg
xor
mov
neg
add
mov
pop
loop
dec
pop
pusha
(bad)
repnz
push
ins
hlt
add
pop
push
das
ins
fdivr
sbb
mov
xchg
aam
cmp
add
out
cli
push
(bad)
fwait
out
fisubr
adc
dec
and
cmp
add
cwde
ds
test
adc
add
sbb
ret
(bad)
jnp
(bad)
mov
push
add
xor
sbb
ds
and
mov
inc
adc
xor
shr
add
fsub
dec
cmps
dec
cwde
xchg
cmp
retf
pop
call
out
dec
sahf
push
aam
cwde
pushf
stos
ret
pushf
pop
cli
pop
movs
aam
cli
xor
push
rcl
inc
sbb
add
arpl
inc
fdivr
mov
cdq
lods
adc
cwde
les
xor
sub
mov
(bad)
xor
and
cli
or
arpl
cmps
xchg
adc
js
push
mov
stos
fidiv
mov
mov
mov
jle
add
push
arpl
xor
inc
add
dec
inc
into
sub
sub
in
or
loop
dec
add
test
sbb
xchg
in
xchg
sub
push
arpl
cmp
push
jg
xchg
or
repz
repnz
push
leave
xchg
sub
add
xor
rol
inc
jb
scas
mov
xchg
fisubr
mov
rcl
test
call
dec
out
(bad)
jecxz
fld
push
test
in
xor
cmp
ret
mov
push
repz
cmps
fild
int3
fnstcw
ds
out
pushf
mov
je
jo
add
les
jns
xchg
cdq
mov
ja
and
add
imul
outs
out
dec
add
mov
ss
mov
cmps
imul
sub
xchg
inc
lock
retf
xchg
in
dec
push
push
mov
xor
fdivrp
and
mov
mov
mov
or
call
fsub
fbld
in
and
addr16
cli
pop
mov
cli
adc
jne
cli
mov
sbb
(bad)
sti
inc
inc
icebp
cmp
out
mov
pop
icebp
cmp
les
jmp
pusha
pop
mov
lahf
inc
ret
mov
add
clc
(bad)
dec
test
call
mov
cmc
icebp
pop
retf
or
loop
shr
add
add
das
dec
addr16
jg
ficomp
sbb
sbb
jl
pop
sbb
stos
push
test
adc
rcl
retf
shr
sbb
mov
aad
cmps
push
(bad)
cmp
cmc
mov
(bad)
lock
movs
and
jl
adc
mov
mov
mov
add
jecxz
add
repz
outs
xchg
sub
xor
nop
mov
sbb
outs
sub
out
mov
lods
and
add
xchg
mov
pop
xor
pop
pop
add
fild
pushf
ja
outs
sub
cmps
sbb
mov
pop
leave
mov
xor
repnz
xchg
test
(bad)
mov
sub
retf
jo
cwde
les
or
lahf
in
inc
lods
add
retf
inc
jle
out
pusha
loopne
jle
fcomp
push
(bad)
out
add
enter
cmps
adc
shl
sbb
jb
xor
pop
cwde
dec
das
dec
jnp
push
cli
rcl
(bad)
rcr
mov
mov
(bad)
test
jle
popf
jo
mov
jl
inc
aaa
inc
stc
into
adc
fsubr
movs
cmc
lahf
push
pop
lods
je
retf
arpl
jns
repz
fld
mov
adc
xchg
cld
int
mov
pop
rcl
push
cmc
aad
imul
fs
sbb
ret
push
adc
test
add
shr
leave
lods
mov
cmp
ds
shl
fistp
push
lahf
xor
adc
repz
sbb
ss
test
lock
rcl
je
push
push
or
out
mov
jmp
js
rcl
in
cli
push
cmps
imul
sub
cmc
(bad)
aas
(bad)
pop
push
ja
shl
sub
scas
xchg
fst
mov
and
rcr
fist
(bad)
aas
movs
cdq
cmp
imul
inc
inc
and
hlt
pop
mov
push
rcr
fdivr
or
sar
es
scas
pop
(bad)
mov
inc
xchg
adc
dec
mov
fcmovne
in
lock
cdq
cmc
inc
or
iret
cmp
adc
push
movs
in
out
cmovg
in
ret
fidivr
clc
dec
lods
or
pop
sbb
push
ret
lods
pop
sub
in
adc
jb
loopne
(bad)
xor
sbb
ds
pop
shl
add
xor
xor
push
in
mov
mov
inc
ins
(bad)
pop
es
stos
sbb
out
dec
test
imul
in
movs
mov
sub
jle
push
jecxz
cwde
loope
mov
jno
movs
sbb
jno
dec
sbb
sub
(bad)
out
addr16
mov
mov
xor
gs
(bad)
enter
dec
jns
and
mov
dec
mov
sbb
fidivr
pop
(bad)
fild
addps
retf
in
fild
leave
int3
dec
fnsave
in
fidivr
cdq
xor
dec
loopne
call
sbb
xchg
xor
into
mov
pusha
out
jge
jns
and
popa
cli
add
dec
out
(bad)
sti
push
pop
xchg
rcr
icebp
jecxz
inc
in
sbb
adc
rcr
(bad)
push
jnp
push
popf
or
repnz
call
das
aam
sbb
jg
adc
psllq
(bad)
pushf
jmp
retf
cmp
fadd
mov
jmp
movs
bswap
adc
mov
or
into
cmp
jge
pop
jno
cmp
or
xor
or
mov
fbld
cmp
stc
jmp
jge
mov
dec
add
mov
mov
scas
or
out
ins
jae
sar
pop
jne
cmp
sbb
jge
jbe
in
jo
adc
xchg
mov
sbb
inc
jo
mov
cmp
fisub
aam
idiv
retf
dec
std
jae
push
shl
jbe
test
fnstcw
cmps
les
test
out
stos
scas
mov
rol
mov
add
sbb
test
loopne
mov
aam
sbb
pusha
xor
adc
imul
mov
retf
jp
(bad)
into
adc
sbb
arpl
cmp
cwde
mov
lahf
mov
jne
pop
mov
jb
lock
leave
adc
retf
and
rcr
scas
push
es
dec
add
ja
cmp
xchg
mov
out
push
push
mov
jns
mov
mov
test
arpl
adc
cmp
adc
lods
lods
cmp
pop
in
sti
inc
dec
(bad)
neg
jae
mov
xchg
dec
push
dec
pop
rol
adc
repz
outs
sar
or
mov
mov
icebp
sahf
cmp
mov
xor
dec
or
sub
movs
std
ins
xor
stc
adc
test
das
(bad)
push
call
inc
call
push
mov
sar
fwait
jae
in
ficom
rcl
dec
or
push
xchg
shl
in
cld
daa
lods
fcmovu
mov
mov
dec
lods
addr16
xor
addr16
sbb
add
mov
mov
xchg
xchg
int3
fist
imul
gs
into
(bad)
mov
push
ret
push
xchg
mov
sub
add
dec
mov
add
add
jmp
out
fstp
adc
bound
pop
adc
and
mov
mov
in
sub
inc
cmp
jne
inc
out
rcl
lods
sbb
mov
test
and
ins
dec
cmp
pop
dec
inc
push
jle
xchg
xor
push
test
js
mov
fnstenv
dec
fisubr
adc
and
and
lahf
or
cmp
loopne
add
dec
cld
mov
daa
shl
mov
add
add
push
int3
stos
outs
add
jle
xchg
or
jnp
mov
mov
xchg
jo
mov
test
int
pop
cwde
bound
jmp
pop
sub
sti
repz
jns
pop
es
mov
xor
add
lods
(bad)
jne
pop
push
pop
mov
js
sub
mov
xchg
test
not
mov
inc
fwait
and
ret
jmp
xchg
adc
mov
fdivrp
out
idiv
je
jl
inc
push
push
mov
inc
mov
cmp
or
test
outs
inc
mov
push
(bad)
mov
shl
xchg
(bad)
pop
sub
push
push
mov
lds
mov
fwait
ja
jecxz
imul
push
or
out
in
dec
mov
mov
cwde
xor
arpl
dec
add
fnstenv
mov
lods
aad
dec
mov
mov
cwde
cmp
push
and
int
popa
or
mov
sar
xor
push
jg
aas
call
bound
jno
aas
aaa
mov
mov
sbb
dec
mov
mov
pop
ins
pusha
std
ja
inc
mov
into
xchg
(bad)
jbe
out
out
(bad)
jmp
retf
retf
push
cmp
mov
ins
sub
jne
mov
xchg
das
popf
sub
mov
sar
xor
sti
(bad)
das
xor
inc
mov
sub
in
and
pop
xchg
add
jnp
scas
ins
out
nop
sbb
rcr
jmp
cwde
jle
add
dec
cli
mov
fs
test
(bad)
pushf
or
ins
or
push
push
pop
or
cmps
popa
rcl
push
fwait
mov
imul
sub
into
push
movs
adc
addr16
cdq
pusha
shl
jno
imul
sar
dec
icebp
xchg
enter
sub
aas
call
stos
or
push
fchs
inc
dec
push
dec
retf
or
pop
call
mov
repz
dec
call
dec
mov
in
stc
mov
retf
enter
jns
sub
adc
fistp
jmp
sub
(bad)
daa
nop
call
pop
mov
pusha
add
pop
and
jg
pop
jne
sbb
push
out
scas
inc
dec
sub
jp
pusha
sbb
mov
adc
pop
or
fwait
imul
mov
cmc
jns
inc
mov
xchg
shr
jmp
jmp
xchg
xchg
mov
rcl
or
dec
mov
and
leave
fcmovb
pop
push
xor
popf
rol
scas
cs
cli
sar
hlt
popa
icebp
neg
xchg
(bad)
push
addr16
aam
push
pop
cmps
stos
int3
sahf
loop
push
data16
scas
mov
dec
jnp
sbb
pop
nop
stos
jecxz
pop
jae
inc
scas
cwde
mov
mov
dec
fisttp
sub
mov
je
ins
stos
push
icebp
fistp
mov
addr16
enter
pop
dec
xchg
les
pop
cmp
xor
into
ficomp
push
call
cmp
cld
sub
aad
xor
rcr
(bad)
cdq
cmp
dec
pop
or
gs
bound
(bad)
in
and
or
cmp
push
out
retf
popa
inc
sub
jmp
rcl
mov
inc
sub
jmp
adc
jno
mov
sub
inc
mov
ins
les
cmp
xchg
sahf
push
dec
jns
mov
jae
push
push
dec
es
jp
add
cmps
adc
popf
jo
mov
dec
stos
test
lea
mov
call
sub
xchg
cdq
xor
nop
bnd
xor
sub
outs
shr
call
push
pop
ror
leave
pop
mov
icebp
retf
inc
jge
sbb
pop
adc
lods
sbb
stos
inc
je
mov
cmp
cwde
jne
inc
xchg
psubd
pusha
enter
push
and
cld
ror
retf
add
dec
cmp
test
cmp
push
pop
data16
loopne
cs
sbb
dec
ret
bound
sub
in
aad
fst
idiv
fadd
push
dec
xchg
les
fisttp
repz
inc
push
jp
test
lea
xor
lahf
dec
xor
inc
cld
ret
push
mov
mov
in
xor
scas
sub
sub
pusha
pop
ins
(bad)
repz
lods
aad
sbb
xor
and
ins
stos
mov
push
pop
jp
mov
pop
fadd
mov
loope
lods
add
retf
rcl
adc
or
jo
into
imul
out
imul
mov
je
push
cmps
jecxz
cmps
jecxz
aaa
sub
add
cdq
fs
pusha
aam
lahf
xchg
outs
iret
xor
fld
pop
(bad)
fild
xchg
inc
mov
sub
lods
cmp
idiv
mov
mov
movs
cdq
ss
inc
repnz
pushf
inc
stos
div
sbb
es
mov
call
scas
retf
and
dec
jecxz
cld
inc
aaa
xchg
mov
xchg
jns
mov
mov
into
dec
leave
pop
in
or
outs
mov
mov
(bad)
fist
pop
sbb
pop
les
xchg
push
les
fwait
sub
es
cmp
and
aam
sub
loope
stos
sub
xchg
or
mov
sub
aas
in
or
mov
mov
mov
ja
dec
clc
mov
pop
push
mov
dec
addr16
adc
ret
(bad)
cmp
aam
mov
fidivr
cmc
daa
test
jne
jl
mov
jp
pop
shl
sbb
mov
sbb
inc
in
rcr
push
dec
dec
dec
lods
punpckldq
aam
ss
add
jecxz
mov
scas
jae
xchg
jg
int
test
sub
cdq
cld
push
or
sub
sub
pop
shr
ins
sbb
cmp
in
out
inc
shl
jp
lea
mov
retf
data16
stos
loopne
sub
jae
inc
mov
and
retf
push
pop
or
xor
inc
add
add
test
mov
std
icebp
das
fdivr
xchg
sub
cs
sbb
ss
ins
jb
in
pop
jmp
xchg
inc
aaa
sbb
dec
in
or
or
jp
sub
mov
inc
cdq
cmps
call
icebp
shr
and
jne
out
add
test
add
cmp
je
jmp
jns
frstor
xchg
sub
push
add
add
xchg
js
ds
cmp
mov
lds
outs
jo
and
lods
jne
jns
inc
jne
mov
das
mov
push
jmp
loopne
iret
imul
mov
jb
sub
and
mov
retf
int
cdq
test
(bad)
enter
jnp
call
add
enter
pop
and
adc
inc
sbb
inc
sub
repz
mov
jle
test
dec
repnz
and
and
xor
cmp
leave
mov
ret
fidiv
aaa
xor
test
cmc
jge
jecxz
out
(bad)
enter
inc
or
out
sbb
or
mov
or
ds
rcr
or
(bad)
aam
mov
inc
inc
enter
pop
pop
pop
pop
add
(bad)
in
ds
xor
or
xchg
mov
sbb
inc
dec
repz
pop
or
cmp
push
xchg
sbb
dec
fcomp
mov
hlt
sub
retf
add
xchg
mov
icebp
and
popf
xor
sub
push
lods
test
dec
xor
outs
mov
out
xchg
int3
or
out
pusha
rcr
mov
cmp
les
repz
scas
push
outs
xchg
mov
ja
rcl
and
or
sub
jmp
mov
lods
xchg
out
sbb
or
shl
(bad)
and
cmp
jo
mov
sub
xchg
loope
(bad)
push
xor
aam
js
std
and
cmp
js
fisubr
je
aaa
mov
sbb
add
cmovnp
mov
fld
push
(bad)
out
mov
mov
push
fiadd
ins
mov
sbb
jp
ret
ret
add
ins
in
ficom
mov
scas
retf
cmps
imul
adc
add
pop
aas
cdq
dec
lods
enter
sub
mov
fwait
retf
sub
jmp
xor
ds
jmp
dec
scas
xor
sbb
outs
jg
cmp
xchg
into
jl
pushf
jmp
gs
xor
mov
push
dec
pop
(bad)
mov
int
clc
dec
enter
sbb
mov
push
gs
jmp
or
(bad)
mov
or
ror
inc
(bad)
loope
out
xor
imul
scas
cmp
pop
retf
inc
add
hlt
retf
add
jp
(bad)
jmp
sar
repnz
sub
(bad)
in
adc
mov
rol
jb
fdiv
dec
lods
jl
ficom
cmp
xor
test
repnz
iret
jae
scas
lea
add
pop
test
aad
and
jge
sbb
ins
pop
call
enter
jne
mov
cmps
ins
sbb
test
int3
stos
pop
in
lods
inc
pop
mov
jmp
and
jmp
or
sbb
mov
jmp
iret
push
mov
scas
mov
in
into
test
cli
jmp
stos
fcom
(bad)
xor
popf
xor
jecxz
jns
test
dec
scas
inc
or
inc
addr16
(bad)
fisttp
mov
and
jbe
(bad)
sbb
cwde
imul
fisttp
mov
add
adc
or
(bad)
mov
jle
and
ja
hlt
sbb
mov
pop
stc
stc
cli
cld
mov
mov
add
shr
lods
loop
xor
xchg
cmc
xchg
mov
jle
add
cwde
mov
add
movs
sub
popf
cdq
sub
adc
sbb
cwde
iret
jb
mov
xor
shr
xchg
repnz
dec
test
aad
iret
xor
ret
clc
stos
push
(bad)
test
ja
ffree
jecxz
les
fs
sbb
fisttp
mov
push
call
sub
xchg
or
sub
scas
lahf
pop
ret
or
xchg
hlt
je
lock
xchg
pop
xchg
ret
mov
outs
inc
pop
cmp
cmp
jmp
pop
and
stos
sub
inc
ja
pop
dec
je
pop
jne
pop
jns
mov
push
fisttp
hlt
jne
call
xor
jmp
mov
mov
adc
adc
stos
pop
cld
stc
cs
dec
jmp
out
frstor
das
mov
aam
scas
xchg
and
jbe
fiadd
loop
in
or
pusha
or
mov
leave
mov
fwait
sub
sbb
push
inc
xchg
mov
pop
fnsave
mov
pop
(bad)
cmp
gs
dec
ror
fmul
add
mul
popa
ror
push
and
out
imul
or
or
pushf
pop
jmp
cld
cmp
and
ss
ins
sub
mov
adc
mul
add
and
repz
inc
xchg
adc
xchg
sti
push
addr16
or
frstor
cmps
inc
movs
ja
(bad)
(bad)
pop
jecxz
xchg
and
div
pop
aas
jae
add
int
loope
loope
jmp
cmp
jo
or
pop
sbb
not
shl
or
push
std
dec
stos
leave
out
pop
push
in
jns
dec
pop
adc
and
xlat
mov
cmp
stc
inc
xor
stos
push
mov
adc
jo
out
pop
or
fwait
xchg
add
(bad)
mov
mov
sub
loope
js
fcom
xchg
mov
xor
mov
ins
mov
push
outs
lahf
stc
sbb
pop
push
and
stos
adc
adc
ins
in
push
push
or
in
adc
xchg
xchg
nop
jl
das
or
test
inc
ss
cwde
mov
dec
sub
xor
jge
mov
fnstcw
iret
xor
xor
retf
in
ins
out
dec
pushf
and
fild
or
jb
stc
xor
scas
stos
inc
mov
jmp
(bad)
pop
scas
push
xor
jb
fidivr
push
out
sub
fs
pop
xchg
push
movs
in
and
xor
je
inc
jns
or
adc
cld
(bad)
int
cmp
and
dec
push
push
adc
ds
imul
and
addr16
in
(bad)
lds
jb
gs
je
mov
dec
call
(bad)
cli
movs
mov
rcl
and
pop
cmps
pop
sbb
outs
mov
mov
gs
xlat
pop
fist
mov
daa
stos
adc
in
das
pop
mov
outs
pop
xchg
stos
xchg
adc
fld
pop
mov
aam
aaa
fwait
xchg
(bad)
imul
in
push
jne
je
(bad)
rol
aam
xchg
rol
inc
movs
pop
adc
icebp
or
mov
retf
stos
cmp
and
retf
mov
fdivr
pop
fmul
pop
or
std
call
or
ss
inc
xchg
(bad)
enter
jle
mov
ret
nop
push
cmp
lods
jl
xchg
push
mov
dec
mov
sub
or
mov
mov
(bad)
cmp
push
sub
and
in
fdivrp
int
aam
cmp
dec
sar
adc
sub
xchg
mov
(bad)
ins
mov
jmp
call
fxtract
pusha
sub
push
add
xchg
pop
bound
loope
mov
sbb
fcom
mov
mov
pop
pop
pop
ret
mov
push
movs
jl
outs
int3
cmp
jge
fisttp
pop
jg
ins
pop
mov
cmp
mov
mov
pop
ds
jp
mov
inc
xlat
cld
dec
adc
xchg
bound
cmp
pop
jecxz
loopne
fisttp
test
aas
fdivr
sbb
test
lahf
jl
mov
shl
adc
imul
fst
sub
and
loope
adc
push
into
push
add
addr16
pop
push
and
adc
enter
or
pop
xor
adc
xchg
cli
and
pop
jo
call
mov
or
(bad)
imul
cld
retf
loopne
scas
(bad)
mov
pushf
jb
mov
gs
jl
dec
and
xlat
daa
test
dec
stos
xchg
les
cmp
inc
cdq
dec
push
adc
mov
cli
jo
popf
pop
or
or
ret
mov
jl
popa
imul
sub
lock
pop
lods
lock
sar
inc
lods
int3
retf
loopne
mov
xlat
fistp
fidivr
push
movs
in
jecxz
pop
test
pop
dec
bound
jl
push
clc
jb
sub
ret
in
clc
jbe
jo
test
cld
ret
fisttp
aad
adc
popf
sbb
(bad)
mov
inc
xchg
cwde
outs
jae
imul
mov
lods
mov
cmps
jo
popf
sbb
and
mov
mov
cmp
aaa
scas
xor
call
or
inc
sbb
cdq
push
adc
test
jg
and
inc
xchg
test
inc
push
les
or
sbb
adc
sub
pop
jmp
cmp
sub
adc
mov
lock
retf
mov
cmp
icebp
(bad)
addr16
adc
cmp
ins
scas
inc
ins
sbb
xchg
into
or
push
xchg
fcmovbe
inc
test
push
or
loop
push
inc
pushf
xchg
sub
es
mov
pop
xor
inc
jmp
add
sbb
and
pop
(bad)
ss
mov
shr
(bad)
std
clc
out
dec
lods
mov
and
push
mov
xlat
fld
icebp
int
mov
xor
xor
cli
and
stos
xor
test
bound
mov
mov
ret
ja
es
jae
dec
cmp
mov
es
fimul
dec
inc
movs
mov
(bad)
int3
adc
jmp
loop
mov
pop
stos
shr
call
(bad)
stos
mov
std
pop
push
inc
add
push
pop
pop
daa
push
jmp
inc
jl
inc
jmp
and
cmp
mov
mov
or
popf
mov
cmp
sbb
sub
fcmove
rol
mov
ins
fdivr
popf
mov
aam
cli
jle
out
add
pop
popf
xor
cmp
push
or
adc
(bad)
add
std
mov
(bad)
xchg
gs
add
mov
loop
jmp
jecxz
int
dec
xchg
imul
fwait
outs
pop
pusha
dec
or
mov
pop
dec
and
shr
jnp
loop
sub
pop
popa
jnp
fbstp
scas
push
cmp
jge
loopne
dec
jmp
push
dec
push
push
sbb
cdq
and
add
imul
call
(bad)
enter
and
and
std
pop
(bad)
je
aas
or
push
enter
repz
mov
and
cmp
adc
xchg
jl
retf
jae
push
test
cld
jae
rol
mov
nop
test
mov
ror
or
push
arpl
cmp
(bad)
dec
lahf
push
(bad)
in
pop
adc
cs
pop
and
jge
mov
mov
test
pop
push
pushf
add
jne
cmp
imul
dec
jecxz
mov
push
cmp
mov
xchg
xchg
xchg
push
ins
and
out
xor
mov
add
fisttp
jl
call
lahf
jno
clc
in
mov
je
imul
into
fwait
daa
sub
or
cwde
mov
mov
mov
xlat
lock
cmp
push
push
outs
xchg
scas
pop
and
inc
ret
std
mov
cmp
lahf
test
lods
ins
pop
mov
scas
cld
sub
lods
es
xor
mov
jl
and
ret
je
lock
push
lea
mov
mov
mov
cld
test
xchg
dec
cmp
inc
iret
jnp
dec
ret
and
jne
xchg
add
outs
rcr
repnz
and
fidiv
arpl
push
or
outs
pop
pusha
(bad)
jne
arpl
fisttp
cmp
js
rcl
jae
(bad)
frstor
int3
lods
in
mov
xlat
scas
outs
popa
cmp
scas
loop
xchg
mov
xor
cmp
pop
add
xchg
icebp
stos
das
and
test
adc
mov
repz
icebp
iret
dec
add
sub
clc
jbe
loopne
mov
push
sub
add
mov
inc
mov
icebp
aad
and
mov
or
jecxz
pop
adc
adc
and
out
jmp
add
sbb
jg
adc
mov
mov
pop
lahf
aam
adc
push
mov
push
push
(bad)
pop
leave
mov
add
loope
mov
push
(bad)
enter
pop
adc
xor
cmp
fstp
xchg
lahf
push
dec
shl
adc
mov
cwde
pop
(bad)
add
cmp
movs
inc
push
fsubr
push
cs
mov
std
out
(bad)
fisub
cs
xchg
push
sahf
sub
outs
retf
adc
jle
bound
push
fimul
loope
loope
cmps
pop
sar
pusha
lods
xchg
sub
jb
push
imul
inc
call
lea
pop
xchg
leave
adc
cmp
aam
push
nop
mov
mov
test
xor
aad
std
xor
das
and
sar
sub
loopne
xor
loop
and
inc
scas
imul
mov
xchg
ror
ins
mov
hlt
push
out
cmps
jns
(bad)
retf
call
lods
gs
or
retf
sub
addr16
(bad)
fcomp
int
xor
jmp
jp
jb
les
adc
cmps
mov
enter
inc
add
int3
aam
push
cli
js
scas
pop
mov
mov
loopne
cmp
sub
mov
push
xor
repnz
dec
jb
(bad)
sub
test
mov
push
je
in
ins
mov
add
push
stos
call
fsubr
xor
add
xor
mov
jnp
and
ror
push
mov
int3
sub
push
mov
mov
scas
jne
(bad)
or
xchg
nop
(bad)
addr16
test
fld
movs
inc
aas
sti
mov
mov
out
pusha
xor
mov
push
movs
push
ins
dec
fsub
pop
loopne
dec
jp
cmps
in
pop
mov
imul
mov
addr16
xchg
jl
mov
test
push
test
mov
inc
or
jb
cmp
jle
nop
fwait
xchg
xlat
out
jle
mov
xchg
fcom
jnp
mov
pop
call
push
data16
xor
retf
sti
dec
jge
dec
push
mov
lahf
ja
mov
xchg
lahf
into
adc
sahf
xchg
movs
mov
loop
outs
scas
inc
inc
gs
add
fadd
push
ret
dec
call
pop
dec
or
mov
dec
cmp
cmc
xchg
xchg
adc
xor
pop
mov
add
cmp
mov
mov
xor
and
add
ret
xchg
adc
in
mov
enter
xchg
pop
or
pop
xor
lods
mov
scas
mov
dec
inc
dec
outs
cmp
lock
sub
dec
bound
dec
sub
pop
and
pushf
mov
movs
iret
out
sbb
ins
(bad)
or
nop
add
mov
add
mov
inc
cmp
shr
xchg
scas
xchg
(bad)
pop
es
nop
std
lock
sbb
mov
int3
mov
ins
sbb
imul
and
push
sbb
sub
and
push
scas
sbb
push
daa
ins
xchg
xchg
out
sbb
xchg
sbb
aad
pusha
mov
leave
dec
shl
inc
inc
adc
mov
sbb
movs
push
mov
mov
xor
jo
jecxz
imul
xchg
or
shr
mov
lds
push
ins
in
cld
dec
mov
pop
int3
dec
add
icebp
xor
lahf
pop
inc
rol
lock
mov
rcl
and
out
add
and
xlat
pushf
dec
(bad)
mov
outs
test
lods
hlt
mov
dec
clc
mov
imul
jg
sub
nop
in
sbb
pop
ss
add
dec
aam
xor
int3
jbe
mov
(bad)
or
pop
sub
cmc
sti
pop
cli
adc
push
jl
in
mov
add
fnstenv
dec
cmp
int3
add
inc
mov
sbb
mov
mov
int3
sub
lea
cmps
dec
(bad)
jge
in
xchg
push
xor
enter
fdivr
jl
pop
mov
inc
jl
add
cmp
sub
ins
mov
(bad)
ins
jl
and
call
and
cmp
dec
xor
inc
push
mov
xor
jb
pop
jle
outs
or
mov
jge
rol
sbb
fwait
test
nop
adc
movs
mov
sti
mov
cdq
jno
mov
bound
inc
add
push
mov
sub
jge
jo
pop
jno
(bad)
mov
jge
jne
retf
call
and
xlat
dec
in
dec
ret
out
and
cmp
mov
xchg
sbb
cdq
enter
cld
xchg
or
lds
ja
jge
mov
repnz
mov
out
xchg
adc
pop
jb
pushf
aam
pusha
cmps
and
ds
inc
lahf
mov
scas
cld
clc
es
inc
js
mov
dec
xor
popf
jno
mov
jnp
pop
or
les
xchg
cwde
mov
bound
and
sbb
inc
loop
mov
int
push
in
in
shl
test
sbb
dec
ins
mov
in
mov
out
out
cmp
icebp
add
pop
rol
push
and
lock
lds
mov
jle
(bad)
sub
popw
dec
jmp
fs
(bad)
xor
out
(bad)
int3
loop
icebp
test
jp
repnz
jne
lods
inc
pusha
jbe
loop
ror
popf
adc
and
adc
mov
frstor
les
add
or
push
cdq
push
mov
sub
sbb
add
dec
or
mov
sub
sbb
mov
popa
in
outs
push
sub
sbb
les
jg
ins
popf
sub
push
push
inc
mov
push
out
add
retf
sub
(bad)
std
push
xlat
xor
fadd
(bad)
cmp
xlat
xchg
inc
test
xchg
sahf
pushf
outs
out
cmp
repz
cli
jmp
add
retf
in
int3
dec
or
pusha
mov
gs
cli
les
cmps
imul
mov
(bad)
call
pop
ret
ins
cs
clc
mov
jmp
into
aas
out
push
aad
mov
shr
xor
push
clc
inc
test
mov
outs
daa
les
test
aam
sbb
mov
fidiv
push
test
xchg
(bad)
shl
push
cmp
arpl
scas
rcl
das
std
dec
fs
cmp
int
arpl
adc
adc
sar
sub
loopne
sbb
and
movs
test
xor
jns
dec
xchg
loop
(bad)
fbld
jmp
dec
dec
and
jno
sub
adc
inc
dec
icebp
vpperm
sbb
outs
xor
outs
push
pushf
data16
std
push
dec
out
shl
fnstcw
mov
mov
ja
in
or
push
push
push
add
or
fwait
leave
mov
pop
jmp
jmp
test
cwde
push
and
fisubr
inc
jno
sub
fild
xchg
imul
stc
xchg
pop
jae
daa
imul
inc
sub
add
jmp
mov
adc
mov
dec
mov
jge
pop
movs
into
pusha
fwait
inc
loope
fimul
or
cwde
cmp
shr
lea
loopne
adc
rol
cmp
les
mov
sub
dec
push
dec
pop
mov
call
inc
pushf
dec
lock
icebp
leave
push
fidiv
mov
adc
int
mov
sbb
loopne
jmp
loopne
push
and
jae
dec
fisttp
push
int3
test
out
sbb
sti
ss
mov
sar
pop
mov
or
adc
(bad)
inc
fs
add
adc
mov
faddp
sub
fmul
sbb
dec
or
push
outs
sbb
js
movs
cmps
daa
add
or
nop
sub
cmps
xor
pop
xlat
ins
xchg
loop
shr
mov
pop
and
jo
test
cs
push
push
jg
aad
idiv
ins
mov
pop
mov
push
sbb
rcr
imul
movs
je
add
jo
mov
popf
fimul
ins
mov
pop
out
int3
and
dec
loop
lods
int
or
dec
pop
sti
and
or
jmp
and
dec
jecxz
call
mov
or
(bad)
aaa
inc
xchg
push
inc
cmp
push
cdq
push
gs
jl
push
push
bound
add
pop
mov
mov
xchg
mov
enter
nop
idiv
jne
mov
mov
jo
pop
fcmovb
xchg
cmps
and
sbb
clc
mov
repz
out
add
sbb
imul
and
xor
popf
push
dec
lea
jp
jp
jecxz
inc
inc
mov
(bad)
test
jmp
outs
add
mov
sar
xor
rcl
lds
xchg
cmp
jge
cmp
sbb
mov
enter
pop
lds
ficomp
stos
push
ja
pop
jb
mov
sbb
jne
jmp
sbb
(bad)
out
loop
into
xchg
(bad)
mov
cdq
inc
and
jo
lahf
add
pusha
lahf
in
pop
jmp
mov
mov
and
mov
aad
outs
lods
std
xor
add
push
loope
pop
inc
xchg
pop
in
dec
push
mov
and
xchg
sub
cmp
mov
sub
jbe
cwde
idiv
pusha
(bad)
cli
sbb
cmp
cmp
ret
and
outs
call
xor
jne
outs
ficom
inc
pop
and
mov
cli
leave
out
(bad)
retf
fwait
in
lahf
pop
pop
(bad)
inc
repz
adc
add
jbe
push
repnz
cmp
jle
mov
add
(bad)
iret
pop
pop
pop
push
or
aaa
xchg
scas
jno
mov
mov
xor
mov
jmp
outs
inc
lods
jmp
and
not
fnsave
and
loope
mov
js
sahf
in
lahf
cbw
lods
aam
rcr
popf
stos
adc
xor
pop
push
rcl
jnp
inc
(bad)
mov
outs
sti
iret
or
hlt
jns
leave
aad
in
pop
xchg
ret
sbb
xchg
sub
movs
loop
aaa
pop
fs
clc
sbb
dec
mov
adc
shr
lods
scas
inc
test
cmp
nop
data16
xor
jbe
sub
sub
test
stc
mov
pop
stos
sub
jnp
mov
fnsave
ins
retf
pop
out
push
lahf
lods
push
or
ja
push
adc
xchg
psubusb
push
cmc
rol
push
call
mov
pop
jmp
adc
jno
mov
cwde
adc
pop
or
dec
(bad)
rol
adc
adc
rcr
mov
in
and
jnp
fmulp
ss
mov
stc
fs
fcom
int
cmp
add
imul
xchg
sub
loop
or
sub
mov
mov
push
fimul
(bad)
iret
in
fcomip
mov
mov
sub
je
and
movs
mov
push
(bad)
sbb
aam
jno
scas
pop
lea
ins
dec
enter
test
not
test
loope
mov
pop
mov
sub
lods
xor
jmp
or
pop
mov
scas
fwait
cli
out
or
enter
ins
inc
mov
ins
daa
mov
out
and
add
pop
adc
retf
lods
fdecstp
xor
jmp
cdq
iret
inc
mov
ret
jae
mov
stos
rol
ins
lods
bound
inc
sub
mov
mov
and
cmp
cmp
retf
clc
sbb
xchg
sahf
in
cmp
test
pop
pusha
xchg
sub
stos
call
jge
jmp
lahf
or
or
push
adc
call
pop
cmps
ficom
div
push
cmp
dec
and
fucomp
fimul
sar
sbb
movs
sti
(bad)
and
scas
xor
movs
outs
neg
imul
out
jg
and
frstor
repz
iretw
xchg
xchg
and
es
aaa
outs
pop
jl
rol
add
jmp
js
push
popa
and
inc
sbb
xrelease
mov
adc
or
js
cdq
add
or
cmp
(bad)
mov
push
dec
push
lock
push
ja
cmp
push
mov
fcmovnu
test
test
loope
add
into
lea
je
jecxz
or
and
out
mov
adc
push
bound
ss
mov
jae
xchg
and
pop
repz
sar
or
mov
mov
pop
push
mov
icebp
xchg
pop
mov
xor
dec
cmp
dec
jp
fidivr
clc
jbe
lahf
test
(bad)
(bad)
aaa
push
lahf
int
mov
mov
dec
xchg
inc
fadd
mov
and
sti
dec
xchg
imul
(bad)
mov
and
(bad)
mov
mov
retf
ins
xchg
imul
adc
dec
push
cmp
fnstcw
mov
scas
outs
jle
mov
jmp
nop
push
inc
push
and
ffree
movs
inc
or
in
xor
lods
sbb
or
add
jns
sub
xor
xchg
jbe
mov
fld
sub
mov
pusha
mov
or
dec
jns
cmp
sbb
xchg
repz
jo
out
test
push
add
sbb
pop
sub
jnp
xchg
xor
or
scas
lock
jno
xor
or
xchg
xor
xor
pusha
or
js
pop
movs
mov
or
fucom
mov
in
mov
(bad)
pop
mov
push
jmp
pop
or
jb
xchg
lds
adc
(bad)
mov
push
or
retf
push
pop
fdiv
lock
lea
fsub
xchg
mov
sub
test
or
or
imul
mov
int
loop
sbb
sbb
in
sbb
xor
aas
or
sahf
daa
adc
sbb
retf
and
adc
push
pushf
pop
cdq
adc
(bad)
push
das
fsubr
fwait
ja
push
call
dec
pop
ds
sub
mov
dec
ja
sbb
fs
push
in
push
jo
and
pop
adc
add
mov
jmp
cmp
fsub
jnp
dec
mov
scas
fcomp
mov
repz
icebp
jmp
sar
mov
icebp
imul
sbb
or
fiadd
popa
into
sbb
and
push
sub
pop
xchg
jne
or
mov
jns
fdivrp
in
movs
cli
test
xor
imul
out
inc
aad
pop
(bad)
and
idiv
and
lea
and
scas
and
retf
and
add
jl
rcr
xchg
mov
inc
add
inc
pop
and
inc
sub
das
sbb
cmp
sti
rol
retf
pop
test
mov
mov
xchg
lea
fstp
test
jmp
mov
sbb
ror
jno
sbb
push
aad
xchg
sbb
nop
xchg
out
fcom
sub
(bad)
xlat
sub
mov
pop
repnz
cmp
xor
add
es
out
in
mov
pop
inc
sbb
sub
sub
pop
jle
inc
cmp
pop
stos
test
out
es
(bad)
hlt
call
xor
pop
test
push
sbb
cmc
xor
sbb
shl
push
int
pop
dec
idiv
push
retf
out
adc
push
push
push
and
shl
sub
and
push
push
imul
cmp
outs
or
xchg
fisub
add
movs
mov
out
mov
pop
push
int
cmp
pop
(bad)
push
adc
div
int3
jg
cmp
cmp
dec
inc
jns
jge
xchg
sub
sub
aam
loope
mov
stc
pop
mov
and
mov
and
push
retf
pop
push
cmps
xchg
pop
push
fucom
mov
xchg
mov
lods
sub
les
cld
mov
pop
lods
or
out
and
ss
into
or
popa
aam
out
call
inc
call
add
sub
leave
ret
jmp
adc
mov
je
pop
pop
adc
pop
inc
xor
or
inc
cmp
fldcw
ds
cmp
xchg
ins
test
aas
inc
mov
mov
repnz
rol
aaa
push
mov
movs
cmp
scas
xor
or
add
in
sub
std
(bad)
push
aas
mov
ins
jle
ret
xchg
adc
int3
inc
mov
cmp
mov
or
retf
fldenv
mov
rol
sbb
xor
sub
arpl
rcl
add
int
popf
pop
call
pop
lea
cdq
mov
hlt
imul
lahf
js
imul
movs
jmp
sbb
shl
das
jp
sahf
movs
cmc
adc
jmp
(bad)
(bad)
stc
into
movs
inc
movs
jnp
pop
and
pop
hlt
mov
fist
cmp
mov
pop
js
ret
adc
pop
stos
and
ret
sahf
ins
call
dec
push
mov
cdq
or
jecxz
cmp
je
repz
add
js
ret
lahf
stos
out
stos
and
jnp
imul
jecxz
mov
dec
ins
mov
test
addr16
fwait
dec
cmps
sti
pushf
push
daa
jno
dec
adc
arpl
not
jecxz
adc
cmp
shr
xchg
out
xchg
mov
and
xor
ss
pop
sub
dec
adc
mov
iret
in
jae
movs
call
and
out
adc
cmp
jp
ds
push
jmp
fwait
push
in
pop
pop
cmps
jecxz
inc
mov
pop
fdivp
add
xchg
in
and
pusha
sar
mov
adc
mov
xchg
jo
push
adc
add
in
inc
(bad)
retf
(bad)
popa
sub
jb
push
imul
mov
int3
inc
cs
pop
jmp
es
jbe
je
push
out
test
inc
sub
or
stos
scas
sub
in
pop
push
push
fwait
cdq
inc
push
pop
cmp
fstp
mov
sub
out
inc
mov
fs
xchg
add
retf
sub
mov
stos
pushf
test
sbb
or
or
test
xor
cmp
jge
sbb
int
out
xor
xor
mov
xchg
adc
add
mov
in
stc
arpl
int3
into
inc
sbb
idiv
(bad)
cmps
xor
sub
movs
icebp
jp
(bad)
dec
mov
(bad)
jne
int3
and
outs
or
adc
inc
and
cmps
xchg
das
xor
mov
les
xor
mov
xchg
mov
pusha
jl
in
xchg
jecxz
aad
loopne
lock
enter
mov
clc
inc
hlt
hlt
pop
dec
adc
lock
adc
outs
pop
and
sti
ret
jne
fsubr
inc
xchg
sub
ret
shl
jne
sbb
add
(bad)
retf
shr
ja
or
retf
ret
dec
test
les
jle
cmp
jg
mov
std
mov
jmp
push
dec
add
retf
push
push
push
add
test
int3
xor
fisttp
out
mov
repnz
das
cmp
and
(bad)
outs
out
cmp
cdq
leave
mov
ds
push
test
jno
inc
inc
loope
mov
cld
out
push
mov
dec
mov
dec
and
jg
cmps
sub
mov
cli
sub
scas
pop
dec
xchg
movs
ror
mov
xor
add
add
in
mov
into
in
fsub
adc
cmp
and
xor
das
xor
push
pushf
ret
push
imul
nop
pop
daa
dec
retf
xor
mov
retf
mov
cmp
xchg
das
jp
sub
lahf
mov
pop
rcl
pop
cmp
jg
cwde
sbb
fmul
movs
xor
mov
in
xor
rcr
push
lahf
jle
out
std
xchg
add
add
push
push
push
pop
jo
fmul
fstp
psadbw
pushw
out
adc
mov
sbb
or
(bad)
mov
(bad)
shl
and
push
or
mov
test
push
lahf
sysenter
dec
cwde
aad
jb
dec
not
leave
ds
idiv
ror
push
jecxz
jb
cmp
dec
pop
mov
int
out
fild
mov
sbb
inc
push
shl
adc
mov
or
in
scas
in
cmp
jle
test
cmp
sbb
jmp
aad
and
xchg
pop
cmps
dec
mov
test
retf
(bad)
outs
in
cwde
pop
inc
jl
in
mov
repnz
test
test
fs
test
push
sub
mov
sbb
jg
rol
jns
mov
xor
sub
jnp
das
push
imul
push
pop
ret
jecxz
fdiv
cwde
add
mov
sub
mov
push
imul
xchg
pop
dec
or
pop
ret
repnz
dec
rcr
pushf
aas
mov
iret
imul
add
sbb
ret
mov
call
sbb
aaa
shl
xchg
cwde
arpl
adc
enter
pop
fisttp
jmp
adc
mov
out
add
test
xchg
add
pushf
pop
scas
ja
mov
mov
dec
fmul
fucom
mov
inc
adc
(bad)
fist
sbb
aad
test
or
push
out
push
ret
sbb
jne
popf
sub
rol
je
mov
xchg
pop
scas
push
(bad)
out
sbb
fs
mov
adc
mov
cmp
fucomp
faddp
dec
mov
in
dec
mov
xchg
jnp
imul
sahf
xor
aad
mov
mov
rcl
jmp
sbb
cmp
fnstenv
mov
push
xor
pop
fs
aad
sub
xor
dec
xor
pop
or
(bad)
(bad)
ins
sti
or
jl
mov
inc
jle
fnstcw
(bad)
pop
cmp
jge
hlt
pop
xchg
inc
scas
test
pop
sub
dec
inc
inc
pushf
imul
push
or
dec
je
ss
in
push
imul
cld
fsub
(bad)
int3
dec
fdivr
xor
repz
adc
or
mov
mov
sbb
and
adc
mov
dec
mov
push
push
push
(bad)
mov
shl
aad
icebp
sub
outs
push
jnp
dec
aas
adc
and
shl
int3
sbb
push
call
add
ret
xor
test
dec
fisttp
(bad)
adc
sbb
popa
hlt
scas
xchg
xchg
sub
jmp
pushf
adc
cli
test
pop
movs
fisttp
inc
bound
scas
dec
xchg
xchg
js
add
mov
inc
iret
mov
jmp
and
mov
sub
pop
cmp
mov
xchg
fdiv
addr16
lods
pop
inc
mov
sbb
xchg
mov
shl
push
(bad)
adc
int3
mov
hlt
cdq
jmp
or
push
aam
pop
push
stc
push
pop
sub
xchg
push
rcl
call
mov
ins
jmp
ins
in
inc
repnz
dec
(bad)
(bad)
lods
dec
test
push
jecxz
mov
adc
add
inc
pop
test
push
add
fs
cwde
dec
sbb
push
enter
sbb
mov
mov
xchg
and
and
sbb
cld
sbb
out
(bad)
mov
out
dec
popa
pop
jbe
cmp
cmc
clc
and
loope
cmp
les
sub
ss
lds
scas
ror
aaa
push
ins
jmp
jne
sub
inc
sbb
xchg
ins
ins
ja
lock
rcl
cmps
jbe
push
ins
out
loope
scas
push
sub
and
adc
bnd
xlat
cmp
push
lods
push
inc
cdq
in
adc
push
jno
int
jbe
jb
push
daa
pop
imul
xchg
lea
pop
lods
push
(bad)
retf
sahf
mov
ss
in
jmp
loope
push
scas
mov
adc
mov
call
iret
fidivr
inc
xor
pushf
adc
dec
ja
mov
ja
(bad)
xchg
daa
jae
jbe
xlat
adc
enter
add
pop
push
mov
gs
pop
sbb
mov
setno
sub
xor
pusha
dec
mov
(bad)
inc
aas
(bad)
adc
add
scas
rcl
mov
cdq
and
nop
sub
in
inc
scas
inc
push
fbld
aaa
or
rcr
push
pop
pop
sti
imul
(bad)
mov
pusha
das
mov
call
repnz
mov
in
pop
imul
or
xor
pushf
ds
sbb
mov
mov
sub
jbe
dec
cmp
rcl
fsubr
cdq
aaa
(bad)
xchg
inc
fcom
ja
movs
es
and
sbb
lock
adc
mov
sar
xchg
mov
rol
sub
aam
sbb
iret
push
push
xchg
pop
jo
or
out
std
add
sub
test
outs
in
scas
add
cmp
adc
xor
pop
sbb
fmul
and
adc
adc
loop
in
scas
inc
lods
test
fs
dec
lea
aad
pop
or
int3
lahf
movs
push
cmp
in
cmp
pop
ficom
enter
movs
xchg
jne
fwait
es
add
pop
push
lahf
xchg
gs
inc
xor
mov
xor
and
add
dec
xor
pop
outs
retf
mov
cmps
aas
lds
push
rcr
and
cld
push
pop
add
push
jl
das
fadd
push
jl
xor
jmp
enter
cmp
push
mov
daa
retf
cmp
fwait
and
bound
xor
xchg
in
rcr
jmp
fs
xchg
mov
or
jp
rcr
lock
xlat
adc
ins
jb
call
nop
rol
sub
jle
cld
xor
imul
fxch
dec
inc
sahf
pop
sbb
jo
shr
retf
je
sbb
jno
xchg
jno
lea
cmp
ja
cmc
and
adc
dec
cmp
fild
cdq
sub
sbb
pop
inc
sub
xchg
cdq
addr16
or
mov
mov
test
and
adc
inc
shl
mov
outs
es
(bad)
repz
xchg
dec
or
push
pop
xor
dec
(bad)
cmps
rcl
inc
add
lods
(bad)
sub
dec
out
fst
fbld
ja
lods
fisubr
cmp
xor
mov
xchg
hlt
sbb
movs
stc
or
cmp
xchg
sub
dec
mov
cmovbe
xchg
outs
pop
push
(bad)
call
lock
loope
pop
fistp
mov
ja
lock
mov
mov
mov
(bad)
push
cmc
out
mov
pop
mov
or
jbe
hlt
mov
xchg
sub
xchg
and
jno
mov
leave
xor
leave
mov
fidivr
mov
in
(bad)
shl
stos
push
and
les
ds
fldcw
push
xor
pop
test
pop
(bad)
in
fidivr
and
shl
jle
outs
dec
cmc
in
mov
xchg
ins
push
das
xchg
sahf
jp
call
jg
xchg
or
push
cmp
mov
inc
(bad)
mov
fcom
pop
clc
inc
icebp
jecxz
shr
cmps
in
jle
inc
enter
or
xor
inc
jp
shl
mov
or
aam
inc
pop
mov
(bad)
or
push
push
xchg
es
movs
in
dec
lea
mov
mov
popf
push
fidiv
mov
sti
mov
(bad)
cmc
loope
rcr
out
daa
pop
imul
sbb
fnstsw
test
out
aad
sub
ins
out
inc
(bad)
shr
(bad)
out
inc
push
clc
xchg
aas
push
shl
repnz
lahf
sbb
or
pusha
(bad)
jge
out
and
adc
push
adc
ins
pop
jmp
sub
retf
push
push
test
sar
mov
ret
pop
xor
and
hlt
out
dec
xor
push
sub
leave
and
xor
mov
aaa
inc
mov
aaa
push
mov
cmp
mov
push
add
inc
cmc
and
inc
sahf
jo
scas
cmp
inc
sub
push
stc
inc
outs
sub
mov
dec
aad
sar
dec
ret
xor
mov
repz
and
jmp
adc
mov
test
pop
pushf
push
sbb
sar
sbb
sahf
xchg
xchg
rol
test
or
iret
push
rcl
mov
sahf
retf
fbld
pop
popa
sub
push
and
sub
ja
into
mov
into
es
rcr
ret
jl
pop
loopne
dec
jns
or
inc
and
cld
push
rol
cmc
mov
inc
stos
fsubp
adc
sbb
arpl
mov
mul
lock
or
iret
aad
push
jnp
icebp
mov
leave
mov
popa
retf
repz
daa
(bad)
or
jb
mov
inc
sub
xor
jo
mov
aas
add
sbb
jmp
jge
cmp
test
fistp
inc
xchg
jae
cmp
cmc
out
in
inc
mov
or
ss
nop
mov
ss
cmps
or
xor
test
push
cld
test
xchg
sub
or
cmps
icebp
add
inc
ins
xchg
or
in
pop
bsr
lods
and
sub
dec
xor
and
jno
jge
loope
(bad)
push
(bad)
fdiv
call
or
out
popf
fstp
repnz
mov
pop
add
nop
or
call
loopne
pop
cmps
popa
xor
add
sahf
add
adc
push
mov
cmp
(bad)
not
into
loop
push
xchg
cli
clc
jnp
shr
cmp
or
fsub
movups
push
(bad)
cwde
jp
cmps
ret
pop
or
push
leave
pcmpgtd
or
sub
add
test
jbe
aad
adc
mul
xchg
adc
cs
test
fwait
daa
lahf
mov
push
mov
ffreep
stos
cdq
(bad)
sbb
inc
push
pop
push
arpl
pop
les
inc
and
popf
add
add
xor
mov
push
daa
xchg
inc
ret
or
aaa
loop
scas
out
jae
inc
push
mov
pop
add
jns
cld
jp
dec
ret
or
cmp
mov
ret
mov
setnp
cmp
lods
imul
jmp
cmps
(bad)
aad
or
and
call
ins
(bad)
call
idiv
add
mov
adc
(bad)
push
out
mov
idiv
push
mov
inc
mov
jle
xchg
iret
mov
cmp
push
sub
test
imul
jbe
mov
mov
push
dec
lahf
out
hlt
popf
in
call
out
and
mov
xor
mov
(bad)
cld
scas
fsub
xchg
(bad)
clc
push
aam
imul
stos
inc
call
sub
mov
inc
ins
aaa
not
push
lahf
sbb
fcomp
sbb
test
mov
dec
cmp
cs
sub
mov
push
loop
les
cwde
pop
repz
sub
mov
sub
jno
push
fdiv
push
inc
jmp
push
dec
mov
data16
rcl
xchg
xchg
fsubrp
sti
call
data16
mov
mov
stc
add
xlat
jae
int
outs
retf
add
jnp
lock
add
fdivr
pop
push
jmp
push
or
sti
stos
test
(bad)
cmp
fs
inc
int3
or
cmc
mov
push
mul
(bad)
jecxz
adc
cwde
adc
inc
jae
cmps
sub
aaa
mov
lods
pop
push
jmp
sub
inc
sar
xchg
push
mov
addr16
out
inc
mov
loopne
sub
ins
push
mov
mov
outs
jecxz
pop
sub
mov
mov
xor
xor
movs
daa
lods
sbb
popa
test
mov
pop
xchg
in
pusha
dec
cmp
mov
jae
jae
rol
push
test
fidivr
or
or
test
bound
xchg
xor
ror
or
mov
pop
inc
dec
retf
jns
cmp
js
daa
cmc
mov
jmp
push
fistp
mov
and
test
ss
jle
addr16
xchg
push
pop
mov
pop
inc
mov
ds
sbb
sbb
fwait
and
mov
mov
adc
movs
pop
inc
jmp
push
aas
cmp
daa
test
and
adc
inc
pop
mov
sbb
xchg
jmp
add
or
pop
xor
(bad)
sub
xchg
ret
push
scas
shl
jne
xchg
cdq
daa
clc
adc
fucomp
call
adc
test
in
xor
sbb
dec
xchg
dec
inc
xor
adc
pop
mov
dec
mov
push
retf
mov
and
les
cmp
inc
jo
leave
test
inc
sub
xor
aam
lods
aad
push
scas
cmc
xor
lahf
enter
mov
or
call
xchg
mov
rcr
movs
les
ins
add
stos
mov
jo
jo
jo
ja
add
imul
mul
cmps
ret
xchg
xchg
cdq
pop
jl
sbb
mov
dec
adc
xchg
sub
sbb
(bad)
jmp
cmps
lahf
pop
push
jmp
xchg
mov
dec
dec
cdq
loop
scas
pop
clc
aam
(bad)
mov
cld
jnp
pop
push
xchg
cmp
jl
test
lahf
test
stos
jne
out
cmp
lods
repnz
test
leave
mov
mov
adc
ret
out
mov
mov
in
xchg
lods
push
and
cmp
mov
(bad)
xchg
lahf
sub
sub
lahf
jle
jae
and
bound
cmp
dec
mov
push
jo
xlat
sbb
mov
mov
les
jmp
cmp
cmp
adc
sbb
xchg
mov
rol
xchg
(bad)
ret
inc
inc
xor
and
adc
bound
xor
fcom
stos
add
jp
lahf
outs
xor
es
inc
das
or
mov
sub
stc
aam
push
dec
(bad)
sub
cmp
clc
clc
push
jnp
sub
jo
cmp
adc
mov
mov
cld
aam
add
imul
sub
add
arpl
in
cld
push
sbb
dec
mov
lahf
mov
dec
push
and
int
fwait
dec
leave
mov
mov
mov
cmp
xchg
add
pop
dec
inc
mov
jecxz
sub
mov
outs
sahf
cmp
jmp
jns
pop
mov
outs
out
and
hlt
adc
jb
adc
push
std
mov
pop
(bad)
in
mov
icebp
pop
inc
push
mov
sub
adc
out
jg
in
jecxz
xor
(bad)
movs
mov
sar
sbb
dec
pop
sub
push
xchg
cwde
dec
cmps
cdq
imul
iret
sbb
jnp
loop
ret
icebp
rol
fmul
adc
inc
xchg
cwde
aas
dec
inc
lea
imul
movs
ret
gs
inc
retf
pop
or
popf
cdq
jecxz
ins
fwait
retf
mov
test
(bad)
xor
ds
mov
ins
jecxz
xlat
add
pop
call
mov
shl
out
addr16
sti
mov
aas
repz
jge
xchg
mov
mov
stos
shr
stc
ja
inc
fmul
shl
iret
call
out
cmps
xor
mov
inc
cmps
adc
mov
jmp
xchg
pop
imul
fstp
xor
mov
push
xor
mov
xchg
cmp
xchg
cmp
pop
xor
mov
jo
arpl
shl
outs
cmc
pop
mov
jno
mov
out
add
cmp
jbe
sub
sub
std
push
js
(bad)
int
adc
or
mov
mov
sahf
(bad)
add
push
outs
jnp
hlt
push
imul
out
mov
mov
xor
jae
out
in
test
fnstenv
cld
inc
in
in
xor
cli
mov
movs
aam
stos
xrelease
jb
mov
sbb
cmc
pop
fdiv
cmp
xlat
cs
leave
in
push
(bad)
jbe
inc
stos
inc
mov
push
push
push
dec
test
(bad)
into
jle
mov
not
fwait
dec
shl
xchg
inc
scas
mov
xor
scas
out
outs
push
adc
lds
shl
mov
mov
cmps
test
dec
fdivrp
add
loop
jmp
in
jnp
jecxz
sar
push
js
mov
dec
(bad)
sbb
xor
int
ror
cmp
aad
cmc
pop
xlat
fs
out
cmovae
pop
fstp
bound
mov
dec
stos
pop
sub
aas
(bad)
cmp
daa
adc
add
jl
fs
cmc
add
add
xor
sti
and
in
sub
retf
xchg
xor
aam
inc
jg
xor
fisubr
push
dec
out
cmc
pop
mov
mov
inc
xor
adc
repnz
xlat
cmp
sbb
xchg
mov
mov
jge
sbb
mov
pop
mov
test
test
repnz
sub
add
sti
test
pop
scas
sub
mov
loop
cmp
lea
fadd
dec
aad
(bad)
(bad)
cdq
test
push
arpl
mov
and
mov
repz
call
call
pop
(bad)
sti
push
jne
(bad)
jo
loop
in
mov
icebp
cdq
dec
xchg
or
outs
xchg
pop
or
gs
movs
nop
fs
xchg
in
shl
push
mov
sbb
es
sar
scas
lods
popa
clc
mov
lock
hlt
dec
sahf
pop
mov
test
and
push
(bad)
inc
pop
push
sbb
push
jno
adc
and
mov
jne
pop
push
(bad)
retf
adc
mov
mov
xchg
js
js
dec
leave
mov
jnp
(bad)
mov
std
xor
sbb
jle
test
sub
push
xor
imul
leave
mov
mov
ds
fs
popa
cmp
ds
or
mov
cwde
cmp
ja
imul
mov
imul
inc
push
sub
out
cbw
cmps
std
retf
mov
lods
or
int3
(bad)
test
cdq
jnp
call
mov
scas
mov
push
fwait
dec
mov
es
out
and
stos
mulps
or
lock
test
fcom
sbb
and
out
add
mov
(bad)
sbb
imul
xor
jmp
vandnpd
and
movs
xor
std
pop
pop
add
mov
test
fwait
mov
dec
pop
mul
jnp
out
loope
(bad)
mov
idiv
ror
push
sub
push
daa
xor
pop
scas
xchg
cmp
ds
pop
retf
hlt
sbb
add
cwde
arpl
scas
inc
shl
sub
fwait
xor
adc
mov
(bad)
dec
sub
int
mov
hlt
cmp
inc
xor
dec
icebp
(bad)
sbb
out
daa
or
adc
cmp
push
cmp
and
cld
(bad)
imul
add
call
xor
xor
mov
(bad)
cli
ss
dec
cs
adc
push
movs
pop
jl
movs
or
inc
jnp
inc
xor
mov
mov
imul
dec
inc
adc
cmp
mov
inc
xchg
pop
push
xlat
in
aam
mov
cs
xchg
out
inc
jmp
loop
iret
sbb
pop
sub
popa
dec
jae
xchg
or
cmps
adc
in
pop
adc
xor
add
out
mov
aad
lods
cli
cmp
imul
cli
adc
out
in
jno
jbe
inc
jecxz
cmc
movs
stc
push
inc
mov
cmp
mov
mov
pop
imul
sub
stc
call
(bad)
pop
xchg
les
sub
cdq
outs
(bad)
fild
test
xor
cmps
jp
lock
call
sub
add
pushf
fsub
add
sahf
mov
mov
and
xchg
leave
and
mov
int
jae
push
das
outs
xchg
inc
sbb
(bad)
pop
daa
jmp
and
sub
imul
loopne
mov
jp
push
add
movs
es
gs
push
call
out
sub
pop
lods
and
movs
jp
mov
loopne
not
sbb
mov
cmp
sbb
mov
xchg
mov
push
daa
push
daa
mov
pop
iret
sahf
sahf
jg
(bad)
aad
add
ins
inc
mov
loope
sbb
cli
jmp
bnd
enter
pop
mov
dec
jno
popa
cmp
cmp
inc
mov
cmps
ret
stos
test
std
lea
jg
dec
jne
pushf
xchg
and
lahf
(bad)
xchg
and
jno
ins
loope
push
dec
push
cmp
rol
xchg
fisttp
jmp
lock
jnp
push
sbb
jb
jmp
test
cmp
pop
mov
imul
in
sbb
adc
ret
add
jge
and
cmps
cmp
ja
inc
pop
xchg
(bad)
rol
push
icebp
adc
adc
adc
dec
xchg
add
cmps
cmp
xor
retf
imul
jecxz
inc
mov
rcr
pop
mov
adc
adc
movs
jnp
mov
setns
adc
out
xlat
ret
enter
and
fwait
cmp
push
icebp
xor
enter
xchg
outs
jo
sub
mov
and
in
mov
jno
dec
cdq
cdq
push
in
repz
jae
sbb
adc
mov
xlat
(bad)
sbb
loop
movs
mov
push
ror
(bad)
aas
xchg
daa
dec
arpl
add
jp
pop
int3
sti
cmp
loope
lea
push
imul
jae
fwait
cld
and
icebp
xchg
or
popf
sbb
jmp
(bad)
jl
rcl
cwde
lahf
repnz
(bad)
shl
cmps
cs
fwait
xchg
xor
popf
mov
pop
imul
xchg
rol
push
and
mov
sub
push
(bad)
lods
and
pop
mov
add
outs
outs
mov
std
or
dec
test
xchg
adc
and
int
jl
push
jbe
outs
stos
mov
mov
ror
ja
xchg
xor
ret
push
xor
add
jne
and
iret
or
and
push
and
ins
es
xchg
lods
add
push
jecxz
mov
inc
inc
and
imul
and
push
push
in
cdq
or
mov
retf
clc
mov
lea
repnz
cmps
xor
call
jae
addr16
dec
cwde
pop
aas
add
dec
jnp
push
je
pop
cmp
sbb
scas
jg
loop
push
out
sbb
dec
mov
cli
inc
je
xchg
aad
inc
cmp
pop
rcr
dec
jbe
sub
push
add
cmps
and
loopne
pop
jae
add
mov
popa
outs
push
adc
xchg
pop
and
ins
div
shl
xor
pop
add
pop
rcr
in
cmps
jp
mov
icebp
cli
and
sbb
inc
push
mov
push
sti
shl
add
imul
jbe
jecxz
fiadd
imul
adc
sbb
lods
sub
push
mov
push
sbb
arpl
aad
add
xchg
push
xor
pop
xchg
push
jns
test
mov
pop
pop
xor
xchg
mov
ja
cmp
lea
adc
sub
mov
cmps
inc
jg
leave
fcomp
mov
in
jne
inc
sbb
test
hlt
and
jnp
shl
dec
ja
add
dec
xchg
in
add
mov
retf
fld
mov
popf
stc
xchg
fucomip
(bad)
in
addr16
sub
inc
test
popf
jmp
mov
mov
add
in
sub
push
add
arpl
gs
jle
dec
mov
sub
scas
fsub
sbb
sbb
add
lods
xlat
cwde
cli
outs
inc
les
in
and
gs
(bad)
fnop
ds
inc
cmp
test
xchg
pop
mov
inc
xor
mov
cmp
cdq
lods
cmp
fcmovnu
icebp
cmp
ret
(bad)
ins
xchg
mov
bound
int
scas
mov
mov
imul
push
mov
and
es
int3
xor
mov
retf
xchg
sub
mov
fbstp
ficomp
sub
pop
push
call
sub
mov
jmp
shl
xor
shr
ins
dec
cmps
sub
push
ins
(bad)
xlat
cmp
sub
sub
in
sti
loopne
imul
pop
xchg
mov
ret
sar
test
bound
out
lahf
push
jae
mov
scas
loop
mov
push
ja
movsx
dec
fnsave
push
and
mov
xchg
cli
cld
mov
push
mov
icebp
les
mov
jmp
sahf
inc
call
cmp
cmp
icebp
pop
pop
sub
xlat
ret
cmp
outs
cs
mov
(bad)
mov
hlt
fisubr
adc
(bad)
pop
sahf
cmp
dec
adc
outs
add
jmp
push
out
or
push
add
push
add
cwde
popf
aas
add
jne
in
inc
pop
cmp
arpl
jl
gs
add
jl
add
xchg
iret
shr
mov
lods
aam
xor
mov
ins
fucomi
mov
xchg
arpl
adc
loope
out
xchg
aam
xor
push
jge
inc
inc
dec
and
xchg
ins
ins
repz
adc
push
push
popf
xlat
test
jne
pop
pop
call
push
cwde
push
and
call
jl
pop
add
lea
addr16
idiv
or
jp
stc
cmp
cdq
jmp
fisttp
mov
(bad)
mov
in
mov
icebp
es
pop
pop
add
mov
adc
movs
gs
es
sahf
dec
sbb
iret
add
and
retf
sub
rcr
mov
fsub
jp
adc
hlt
in
xor
push
(bad)
shl
xor
inc
into
and
idiv
sub
into
add
arpl
fbstp
sbb
enter
stos
aas
push
sti
sbb
jg
pop
push
and
inc
outs
mov
cmps
dec
xchg
sub
jne
mov
sub
jmp
mov
in
jmp
jmp
icebp
adc
int3
test
sub
xor
scas
jne
cwde
xchg
sub
or
(bad)
fprem
sub
sbb
js
add
scas
push
xchg
add
data16
imul
xchg
es
mov
mov
xor
in
mov
inc
mov
mov
cdq
fisubr
loope
fdiv
out
cs
xchg
call
jo
fstp
jb
or
pop
xor
xchg
xor
cs
mov
mov
aad
call
sub
(bad)
nop
nop
xchg
daa
stc
(bad)
fst
mov
in
mov
arpl
jnp
sbb
pop
pop
mov
std
pop
sub
in
add
xor
mov
or
inc
mov
ss
popf
aad
mov
ja
das
pop
in
call
mov
lea
hlt
mov
xor
test
pusha
adc
(bad)
fdivr
pushf
or
(bad)
sti
in
lods
ret
lahf
adc
jp
pushf
push
scas
stos
sbb
hlt
retf
jmp
pusha
xchg
stos
ss
loope
push
xor
or
mov
push
cmps
mov
into
or
in
jno
jge
jns
adc
div
xor
shr
xlat
push
fadd
xchg
and
in
movs
mov
ror
mov
pop
jp
sahf
popa
sub
ins
sub
retf
push
jge
dec
mov
add
adc
stos
ror
mov
stos
xor
mov
dec
es
or
sbb
call
xor
in
fnstsw
mov
push
rol
push
ss
jmp
xchg
jl
aad
cmpxchg
test
jle
push
add
loopne
and
jge
pushf
scas
inc
mov
ror
jg
add
pusha
or
outs
movs
mov
les
dec
inc
cdq
jmp
ds
ins
mov
sub
mov
mov
daa
cmp
fs
cmp
(bad)
and
push
adc
(bad)
cmps
adc
hlt
pop
xchg
pop
rcr
bndstx
push
mov
mov
enter
rol
xchg
sub
or
scas
ins
sbb
sub
not
cld
xlat
sub
pop
xchg
jno
jbe
nop
data16
dec
cli
rol
stos
adc
dec
push
repz
iret
ins
push
idiv
sub
je
les
inc
mov
pop
inc
fmul
repnz
bound
(bad)
xor
mov
jne
xor
cmp
je
fild
loop
sbb
push
dec
js
sahf
jbe
repz
repz
leave
fmul
test
push
sbb
rol
mov
push
sub
jmp
outs
stos
inc
mov
cli
fcomp
cdq
mov
(bad)
in
shr
(bad)
pop
and
and
jo
mov
scas
iret
stos
xchg
les
rcr
sub
push
outs
push
pushf
movs
add
(bad)
xchg
add
mov
cmc
add
sti
jo
fld
push
jecxz
test
js
or
nop
fild
ins
xchg
sbb
mov
pop
gs
add
out
mov
jnp
shl
and
adc
lods
mov
popa
cmps
jmp
outs
lods
pop
or
test
xor
cmc
push
nop
or
(bad)
cmp
inc
ss
jne
dec
sahf
out
out
frstor
jae
and
hlt
pop
int3
pop
inc
call
mov
push
sub
outs
push
jle
nop
xchg
(bad)
xchg
in
loope
pop
sub
add
add
mov
je
je
push
jmp
push
or
ss
das
mov
js
retf
test
sbb
and
push
(bad)
mov
mul
loop
mov
sbb
sub
push
cmp
dec
retf
pop
hlt
out
int
ins
mov
add
pop
xlat
stc
ins
shl
jle
sbb
dec
add
pop
inc
pop
pop
ja
(bad)
inc
aaa
outs
shr
outs
inc
mov
pushf
outs
popa
push
(bad)
out
and
sbb
int
xor
and
cmp
sbb
into
loope
inc
sbb
adc
jb
ja
adc
cld
mov
int
add
out
pop
popa
mov
jne
xor
test
xchg
and
add
(bad)
cdq
add
mov
pop
jne
out
xchg
fstp
jle
jle
cmp
nop
jmp
mov
repz
arpl
and
sub
test
inc
cli
pop
mov
in
test
xchg
jb
imul
sub
sub
aas
ret
(bad)
aam
inc
stos
xchg
xchg
(bad)
pop
call
repnz
inc
mov
(bad)
idiv
dec
cmp
jb
jnp
loopne
jne
ins
jne
sub
cld
adc
mov
js
outs
jmp
int
out
or
ins
or
adc
shl
add
lods
cmps
or
(bad)
xor
adc
push
mov
cmp
(bad)
std
adc
retf
xor
cmps
cmp
in
movs
ja
ins
push
out
push
and
xor
pop
sub
jge
out
xchg
xor
xor
xor
jb
je
loopne
xchg
js
(bad)
mov
cwde
cmp
or
test
sub
mov
push
test
stos
mov
inc
leave
lds
sbb
shr
call
test
adc
mov
ins
aad
adc
sub
push
mov
xor
std
xchg
mov
popf
je
jmp
rcr
xchg
mov
adc
push
in
pop
lods
scas
push
loop
jg
xor
push
mov
retf
outs
jne
scas
cmp
add
cdq
retf
xchg
pusha
inc
xchg
mov
cmc
jmp
inc
dec
push
pop
and
out
inc
cdq
pop
movs
addr16
rol
dec
push
test
dec
sbb
js
adc
mov
inc
cmc
test
mov
pop
or
sahf
inc
jmp
clc
jle
add
push
push
sub
xor
cmc
popf
sar
enter
xchg
cmps
aas
imul
(bad)
repnz
jmp
into
mov
repz
aaa
(bad)
xchg
je
or
out
mov
lahf
out
stos
jmp
cwde
lods
ins
or
scas
or
mov
mov
cmp
movs
xchg
js
fwait
add
or
xchg
movs
mov
adc
sbb
jg
lods
dec
test
ins
or
repnz
push
mov
in
xchg
(bad)
rcr
fsub
call
and
ret
cmp
mov
jge
or
lods
arpl
add
(bad)
jb
dec
mov
outs
ror
xchg
xor
div
jl
pusha
push
push
mov
jle
dec
pop
cmp
lea
ret
pop
xor
cmp
mov
mov
mov
xchg
pop
dec
xor
(bad)
dec
shl
ret
mov
outs
pop
pushf
mov
jmp
aam
jno
adc
iret
pop
movs
xor
xor
dec
xchg
adc
iret
aad
int
jns
jbe
xchg
retf
bnd
ds
jmp
cmp
aaa
sbb
cmps
mov
adc
ficomp
dec
push
gs
call
and
or
or
shl
mov
loope
mov
jno
mov
cli
dec
test
ret
cmps
and
or
ins
pop
fwait
push
pop
push
pop
sub
xchg
cmp
call
sbb
lahf
mov
(bad)
sbb
ficomp
inc
mov
test
adc
(bad)
jno
sti
cmps
call
leave
leave
pop
iret
jnp
nop
dec
push
mov
fisubr
test
xor
in
mov
jge
xchg
push
cmp
out
pop
js
fs
sbb
mov
mov
ins
fwait
push
mov
inc
loope
jae
push
mov
mov
fsub
adc
stos
cdq
mov
repnz
cmp
xchg
xor
loope
cmp
loop
jns
in
xchg
ds
lds
test
imul
in
jle
stc
dec
jp
int3
jge
aad
ja
cmp
fwait
jl
push
psubsw
mov
sbb
dec
push
xchg
and
sub
jae
popa
std
push
mov
ds
jecxz
int
sbb
arpl
adc
cmp
shr
adc
pop
in
imul
xchg
aad
in
jno
call
push
jmp
mov
and
add
adc
inc
sub
std
outs
lds
mov
mov
mov
jmp
push
outs
jge
xor
popf
and
push
add
push
bound
in
(bad)
pusha
or
mov
(bad)
or
imul
in
daa
dec
lods
fsubr
stos
(bad)
hlt
xor
(bad)
push
xchg
jb
lods
pop
xor
sub
(bad)
mov
jl
fs
add
jle
loop
mov
retf
adc
cmps
std
out
mov
adc
test
xchg
mov
aam
scas
cmp
test
mov
stos
(bad)
mov
xor
cmp
jb
and
dec
push
in
add
int
gs
or
cmps
aas
mov
xor
stc
mov
jge
dec
ror
mov
mov
sub
stc
adc
dec
add
stos
xchg
dec
xchg
test
cmp
and
popa
jmp
xchg
mov
rcr
in
push
jmp
out
sbb
sub
push
pusha
adc
add
sbb
sbb
mov
sub
cmp
cdq
cli
retf
and
sub
ret
jge
cwde
sbb
sahf
or
in
imul
lods
sti
mov
out
jno
push
outs
je
mov
dec
fwait
or
mov
xor
mov
jle
push
xlat
in
call
adc
mov
sbb
fst
xor
or
in
test
loop
test
add
test
mov
mov
test
inc
add
ss
ins
push
jno
and
cmp
jb
hlt
ins
jbe
popa
call
out
pop
inc
and
ins
stos
loopne
inc
rcr
iret
movs
inc
je
cmp
aas
cmp
pop
xor
ror
jp
mov
aad
mov
jae
aad
xchg
inc
pop
inc
std
aad
pop
push
jg
push
and
add
pop
sub
cli
cmp
jle
jb
jne
(bad)
or
pop
adc
inc
ins
test
enter
cmp
xchg
jns
aas
ret
in
sub
sbb
pop
(bad)
adc
add
loopne
mov
fnstsw
xor
add
lsl
mov
scas
gs
xor
scas
sbb
icebp
push
inc
mov
(bad)
fmul
cld
xchg
fmul
ja
lods
mov
sub
dec
mov
sbb
add
pop
add
dec
or
adc
jle
push
popa
stos
push
add
adc
lods
mov
dec
stos
in
cmps
out
xor
xchg
aad
lods
call
or
in
and
xchg
mov
loop
cmp
pop
inc
movs
bound
rep
mov
int3
and
push
pop
or
cli
cdq
mov
retf
nop
lods
push
aad
scas
mov
aam
inc
cld
ret
push
push
(bad)
xor
bound
daa
ret
xchg
stc
hlt
adc
inc
cmp
ins
push
movs
leave
ret
adc
and
mov
pop
mov
mov
or
pushf
shr
(bad)
xor
jbe
scas
jmp
add
sbb
fs
and
add
aam
and
into
ficom
rcr
je
adc
loop
xchg
mov
lock
cmp
pop
in
lods
pop
inc
ds
not
loop
cmps
shl
sub
jbe
test
(bad)
cld
xor
call
cdq
movs
(bad)
and
hlt
arpl
mov
jle
lds
in
sub
push
nop
dec
hlt
mov
and
xor
add
ret
dec
nop
sub
mov
or
icebp
mov
sub
ror
out
pop
or
push
cmps
push
jnp
jmp
sub
test
(bad)
xor
mov
add
xchg
in
adc
pop
sar
imul
cli
retf
out
mov
lock
mov
cmp
sub
xor
retf
fdivr
test
test
dec
jmp
add
and
ss
sar
int3
addr16
pop
into
sbb
shr
and
mov
xchg
mov
sbb
mov
(bad)
xor
mov
push
mov
add
sti
push
fwait
das
mov
in
cld
mov
shl
pop
mov
add
(bad)
push
jecxz
call
(bad)
dec
mov
inc
mov
les
les
out
sub
ins
stc
in
jmp
pop
push
fisttp
dec
sbb
or
fwait
shl
movs
adc
sbb
or
xor
inc
aas
test
jne
ret
jecxz
pop
dec
push
adc
add
and
dec
arpl
ins
gs
test
push
rol
xlat
sub
test
cdq
adc
dec
mov
(bad)
jmp
and
mov
imul
xchg
cmp
mov
push
dec
pop
add
es
push
adc
daa
mov
pop
pop
cmp
xchg
mov
mov
mov
out
inc
mov
lea
pop
and
inc
(bad)
repnz
pop
les
jbe
and
test
sub
xchg
sub
in
sub
aas
neg
mov
ins
aas
cli
jmp
loopne
loope
add
xchg
mov
push
lock
sub
jmp
push
stos
shl
aam
sbb
pop
mov
mov
xchg
xor
jl
(bad)
or
pop
aad
fild
test
inc
sub
gs
movs
(bad)
movs
jbe
sbb
aad
cmp
inc
mov
(bad)
hlt
jno
sbb
add
push
sahf
aam
cwde
sub
cmp
aaa
pushf
or
out
xchg
xchg
fild
in
sar
xchg
dec
mov
jmp
nop
hlt
pop
push
cmp
fbld
inc
test
icebp
cmc
cmp
sbb
ss
dec
stos
cdq
mov
jne
sahf
sub
push
out
xchg
dec
je
lods
ret
adc
mov
inc
out
mov
dec
movs
push
loope
add
add
and
pop
xchg
cmp
out
cmp
xchg
xchg
nop
adc
jae
call
adc
cld
arpl
xchg
movs
jo
es
stc
imul
in
jne
shl
adc
icebp
jns
in
jne
sbb
loope
xor
sbb
popa
mov
ds
ds
or
or
scas
jne
mov
hlt
(bad)
mov
cmp
xor
gs
int3
cs
xchg
ss
popf
in
or
repnz
lock
ficom
out
mov
mov
mov
sub
loopne
loopne
xor
mov
lods
sbb
retf
mov
outs
nop
rol
outs
xchg
test
in
inc
cli
add
arpl
jl
mov
or
icebp
inc
add
mov
pop
adc
inc
aaa
push
pop
inc
pop
mov
fldenv
stos
test
stc
ja
retf
pop
loop
jno
cmc
(bad)
sti
inc
mov
dec
into
sub
pop
xchg
add
xchg
mov
test
sahf
lods
daa
cmp
mov
jp
dec
pop
fld
sbb
jmp
xchg
and
ins
out
jns
mov
cmp
jns
pop
sub
div
jnp
fisttp
sub
sub
lods
push
scas
addr16
(bad)
xor
repnz
mov
dec
addr16
std
pop
ficom
and
pushf
stc
sub
fidivr
fadd
inc
(bad)
jg
pushf
mov
dec
sub
jnp
dec
ins
sub
push
out
ss
pop
(bad)
es
bound
in
or
cmp
jecxz
js
pop
pusha
jecxz
jmp
imul
mov
pushf
sub
cmps
test
dec
adc
jns
retf
call
test
aas
in
sbb
add
daa
sahf
ror
inc
jmp
lods
test
repnz
lods
sar
jno
inc
(bad)
fistp
xchg
mov
fadd
xchg
imul
retf
icebp
mov
jnp
sbb
adc
int
xlat
les
pop
rcl
(bad)
ins
clc
push
das
or
ss
ss
mov
dec
push
ss
sbb
push
dec
jmp
dec
out
mov
or
outs
push
pop
mov
pop
dec
hlt
xchg
xor
mov
adc
mov
pop
cdq
sahf
call
dec
mov
mov
adc
retf
cmps
push
mov
popa
sbb
clc
(bad)
out
pop
leave
repz
sub
imul
xchg
loope
jns
push
in
icebp
dec
scas
mov
pop
daa
adc
jmp
mov
or
dec
mov
outs
jne
ins
mov
pop
(bad)
cmp
or
xor
in
mov
daa
ret
test
jo
test
sub
dec
cmp
pop
push
sub
in
lods
pushf
dec
cwde
loope
ins
int3
dec
jg
pop
in
arpl
xchg
cdq
js
or
stc
mov
push
push
leave
(bad)
push
jge
in
movs
aad
mov
(bad)
leave
shr
(bad)
jb
lods
in
push
mov
nop
sub
xor
push
or
dec
cmp
and
xchg
jge
xor
mov
scas
retf
and
mov
adc
jo
(bad)
xchg
pop
jge
nop
dec
add
push
xor
pop
adc
fwait
xchg
cmp
stos
loopne
(bad)
inc
retf
adc
cli
pop
xor
xor
xchg
(bad)
int3
mov
or
arpl
xor
ret
nop
dec
add
fadd
int3
jo
ret
aam
and
or
ins
pusha
nop
mov
or
mov
mov
cmp
in
mov
mov
push
mov
inc
pop
sbb
cmp
mov
inc
pop
xchg
cmps
push
ror
mov
xor
push
pop
sbb
sub
mov
pop
dec
jnp
push
sbb
call
pop
push
call
xor
aas
inc
sbb
add
add
jbe
jmp
adc
ins
mov
adc
add
or
outs
imul
and
jo
sub
inc
mov
jo
movs
jle
sub
or
dec
mov
dec
daa
fwait
out
and
retf
sub
mov
js
mov
retf
(bad)
push
or
out
ins
and
js
inc
loope
cmp
push
popf
movs
sbb
mov
adc
out
jne
mov
pop
(bad)
jmp
dec
sti
inc
test
push
pop
add
and
bound
rcr
or
dec
idiv
inc
mov
dec
add
jecxz
xchg
xor
push
sub
and
inc
push
enter
dec
movs
sbb
dec
fadd
jne
dec
adc
mov
mov
jge
cmp
(bad)
nop
arpl
aaa
push
and
rcl
cmp
cmp
movs
push
pop
xor
sbb
jge
lock
mov
icebp
stc
je
jmp
or
std
mov
fadd
repnz
sahf
lods
inc
cdq
lock
popa
add
(bad)
call
cld
jns
cmp
cdq
jo
mov
push
out
outs
dec
mov
xor
or
xchg
ins
push
or
and
mul
aam
inc
in
ret
dec
xchg
imul
inc
pop
(bad)
inc
rcl
cmp
imul
pop
aam
fist
mov
ror
pop
fbstp
cmovb
mov
xchg
dec
mov
sahf
out
fiadd
nop
and
jb
adc
call
inc
aas
xlat
fistp
jmp
call
cdq
xchg
xor
in
test
cmp
mov
sub
xor
icebp
cmps
mov
xchg
dec
popa
or
jge
call
xor
sahf
bound
mov
in
es
mov
sub
inc
lods
std
arpl
add
iret
push
mov
and
out
in
push
xor
or
(bad)
fidivr
mov
imul
pop
pop
push
test
mov
mov
retf
inc
scas
leave
jae
mov
or
cmps
add
pop
sub
dec
mov
movs
cs
into
into
push
mov
jp
imul
push
sbb
cmc
call
xchg
int
xor
pushf
out
jmp
fld
push
pop
push
loopne
mov
push
aam
leave
sbb
cmp
mov
les
stos
sub
sbb
arpl
shl
push
mov
stc
lods
ins
fs
jmp
xor
mov
movs
fisttp
mov
test
fimul
jp
sub
mov
xchg
lods
adc
xor
xchg
xor
fwait
mov
add
repnz
test
xchg
mov
push
mov
mov
mov
mov
scas
gs
retf
xchg
enter
cmp
out
ret
scas
dec
mov
xchg
mov
dec
adc
jle
ret
or
lahf
ss
test
dec
jbe
jns
rcr
and
or
sbb
xchg
mov
movs
jnp
jnp
lods
lds
(bad)
mov
dec
clc
jbe
loopne
mov
push
rcl
jle
fmul
cdq
shl
mov
rol
test
int
dec
ins
sub
lock
inc
clc
jp
or
mov
add
loop
sub
push
lea
dec
pop
ds
std
jg
inc
shl
test
nop
mov
shld
jp
sbb
sub
pushf
ret
ret
adc
les
add
addr16
in
ret
mov
push
dec
sbb
xor
push
xor
js
mov
nop
sbb
mov
(bad)
(bad)
sti
test
or
call
mov
pop
push
xor
mov
imul
repz
jecxz
pop
sbb
mov
stos
push
out
push
pop
dec
pop
lods
mov
out
out
jmp
jl
mov
sbb
jno
shl
inc
out
(bad)
mov
jbe
and
or
cwde
or
repz
mov
adc
xchg
inc
mov
scas
sbb
push
ja
jp
sbb
jl
cmp
jnp
leave
rcl
sub
lods
or
push
enter
xor
pop
neg
loope
repz
es
stc
pop
fs
clc
sar
pop
ins
bound
mov
mov
push
out
cmp
retf
out
adc
cmp
jl
fsub
or
(bad)
fimul
lods
ret
mov
mov
icebp
adc
sub
retf
jp
bound
cdq
repz
cmp
or
retf
sti
mov
mov
mov
and
enter
inc
out
arpl
ins
jp
pop
add
jp
dec
mov
adc
and
bound
rcl
or
retf
cmp
cmp
rol
(bad)
stc
cs
or
js
inc
mov
ffreep
jo
add
ja
movs
adc
adc
dec
fs
sbb
(bad)
clc
xchg
or
inc
call
outs
into
not
aam
rcl
ins
pop
mov
or
loope
xor
iret
cmp
sahf
pop
shl
out
dec
sbb
pop
mov
scas
rcr
pop
cmp
cmps
jne
push
cmp
(bad)
jne
(bad)
sbb
xor
lods
xchg
mov
xor
fstp
jmp
inc
xlat
inc
cmp
fcom
mov
sub
pop
hlt
dec
jmp
popa
pop
push
xor
sub
jae
and
icebp
(bad)
jmp
sub
cmp
repnz
sub
pop
cmc
ficom
aad
cmp
shl
cmp
xor
inc
int
add
push
xor
add
xor
scas
lds
sbb
xchg
push
sub
cmp
ins
cdq
mov
push
stos
mov
jb
std
arpl
neg
inc
mov
or
test
out
mov
mov
into
pop
cmp
sti
ss
or
idiv
lahf
and
pop
xchg
fdivr
pop
iret
or
dec
out
rol
jae
push
sbb
or
bound
pop
add
pop
adc
xchg
fistp
mov
sti
pop
sti
pop
jg
lds
fcomi
in
pop
cmps
out
nop
je
push
push
xchg
mov
mov
gs
movs
xchg
push
adc
inc
xor
lea
push
inc
(bad)
icebp
or
cmps
xchg
or
mov
dec
cmp
cwde
push
push
and
xor
call
adc
les
mov
dec
fs
pop
mov
ror
iret
fs
(bad)
dec
jnp
idiv
data16
jmp
sub
jecxz
add
ficomp
jecxz
stos
(bad)
and
xor
fadd
mul
jg
jbe
pusha
lods
lea
or
cmp
mov
sahf
fcomp
bound
and
imul
jmp
popf
jae
xor
aas
cmc
mov
push
push
ins
je
aam
add
movs
xor
leave
out
sbb
mov
fiadd
add
int3
call
dec
push
ror
inc
and
add
push
inc
adc
or
adc
mov
dec
icebp
push
mov
cs
push
cmp
xor
cdq
fwait
mov
sub
fs
imul
mov
in
inc
inc
mov
mul
aas
lahf
xor
dec
sbb
pop
aad
sar
mul
push
imul
and
inc
outs
fst
mov
dec
xchg
out
mov
mov
dec
cmp
in
cmp
shl
daa
mov
sti
xor
pusha
cmc
cdq
adc
dec
shl
mov
fdivr
xor
int3
cld
cdq
dec
test
aaa
or
cmp
fcmovbe
add
jo
aaa
add
push
ja
xchg
cmovae
cdq
in
inc
sub
not
inc
sti
retf
mov
pop
and
imul
aaa
mov
test
rol
leave
push
mov
les
mov
fwait
imul
in
xchg
pop
jnp
out
add
add
or
adc
pushf
cmp
xchg
push
and
bound
jecxz
adc
pop
pushf
inc
cmp
and
cmp
(bad)
cmc
cli
movs
aad
jae
xchg
mov
data16
or
adc
jne
push
push
jmp
ret
pop
or
and
push
inc
adc
mov
pop
rcl
jle
dec
sub
jecxz
xor
pop
or
mov
jle
jmp
cmp
xchg
shl
lds
jb
les
add
lods
ins
(bad)
pop
loope
cmp
lahf
adc
cdq
sbb
add
aam
rol
jge
pop
jmp
xor
jmp
jb
cmp
rcl
sbb
jg
loopne
and
out
pop
mov
xchg
mov
dec
push
cmp
int3
stc
inc
dec
and
dec
xchg
xchg
cdq
mov
psllw
xchg
popa
rol
js
clc
cmp
or
test
mov
push
aam
leave
or
xchg
out
lahf
or
mov
pop
out
test
arpl
out
ret
retf
adc
adc
dec
mov
xchg
fild
pop
scas
jbe
jb
clc
inc
pop
outs
jp
push
frstpm(287
fsub
imul
ret
into
pop
sub
inc
jecxz
(bad)
icebp
mov
adc
mov
mov
sar
daa
and
aas
jbe
jns
enter
mov
jb
xchg
test
lea
dec
(bad)
aad
push
push
jg
pushf
and
dec
mov
in
lock
inc
into
aas
ins
pop
leave
push
in
ds
popa
das
pop
cdq
(bad)
movs
std
ins
xchg
idiv
cmp
push
mov
mov
shl
pop
inc
dec
jg
dec
cwde
pop
call
lods
les
dec
mov
jne
xor
mov
and
aam
mov
(bad)
out
nop
imul
in
rol
push
stos
pop
push
mov
pop
ins
inc
das
jns
retf
cmp
jecxz
adc
jg
test
neg
add
retf
push
into
and
push
push
into
adc
dec
imul
icebp
js
push
(bad)
or
out
push
div
mov
pop
jb
cmp
es
mov
jnp
pop
jmp
cmp
xchg
or
mov
mov
jmp
xchg
ror
sbb
mov
inc
inc
addr16
sbb
or
stos
sbb
jae
dec
inc
xbegin
xchg
leave
ss
sbb
xlat
shl
retf
cmp
add
mov
fs
dec
mov
xlat
sbb
inc
and
inc
jle
lods
adc
mov
mov
repz
and
fsub
mov
add
xor
inc
std
stc
mov
mov
shr
cmp
add
ss
aas
sbb
test
jmp
adc
jne
mov
push
lea
add
test
mov
mov
icebp
stc
call
xchg
clc
cli
std
pop
or
pop
cmp
adc
xor
ret
ror
inc
xor
dec
mov
popf
xchg
ins
outs
push
pushf
push
sub
cmp
jns
sbb
call
and
pop
xchg
aas
nop
and
add
loop
pop
mov
popf
outs
call
jno
movs
mov
dec
imul
lahf
and
movs
in
mov
ins
in
(bad)
pop
stos
call
or
and
ret
mov
and
call
xchg
xor
loope
or
cdq
pop
mov
sub
mov
ss
xlat
dec
mov
ret
add
cmp
call
inc
imul
pop
js
cmps
cmp
push
leave
fisub
mov
and
or
jb
xchg
les
push
scas
(bad)
retf
cmc
pop
out
fimul
std
shl
and
in
adc
pop
jle
mov
xor
aas
or
in
cmp
mov
scas
shr
or
stos
mov
dec
jne
inc
(bad)
hlt
mov
dec
das
push
xor
pop
ja
or
js
stos
cmp
sub
or
sbb
test
fucomp
or
aas
lock
mov
mov
fs
dec
lock
jb
arpl
mov
test
loop
adc
outs
mov
popf
dec
aam
and
shl
cmp
inc
call
cmp
lds
test
les
arpl
xlat
push
push
fimul
aad
pop
clc
jle
popa
aad
jns
push
xor
(bad)
jne
xchg
je
outs
inc
mov
sbb
fwait
or
xor
mov
ins
clc
rol
cmp
(bad)
jo
rol
test
call
inc
or
fdivr
xor
jmp
mov
cmp
mov
or
out
adc
sahf
test
test
inc
mov
jecxz
idiv
add
sahf
ret
stos
sub
outs
fst
jb
lods
pushf
xchg
rcr
std
cwde
ja
pop
and
adc
je
jle
iret
adc
or
mov
pop
cs
cmp
loope
mov
into
cdq
or
cld
adc
dec
inc
xchg
jno
mov
repnz
and
pusha
mov
mov
mov
add
dec
xchg
jbe
adc
enter
push
xchg
cli
add
cs
mov
aas
xchg
push
iret
leave
dec
ror
cmps
adc
pop
in
es
(bad)
lods
mov
inc
push
mov
cmp
test
or
pop
push
into
ins
sbb
dec
ficomp
cmps
out
sub
cmp
pop
retf
sub
lods
pop
out
mov
hlt
pop
mov
or
cdq
push
lea
jmp
jecxz
or
mov
pop
cmps
mov
addr16
push
xlat
lods
sbb
dec
retf
mov
and
shl
adc
jp
pmullw
aas
stos
add
inc
sbb
call
out
cmps
mov
xor
daa
push
cmp
and
push
jp
sbb
movs
push
inc
not
inc
or
adc
fisubr
jl
imul
pusha
mov
mov
ds
jmp
out
sahf
jnp
dec
fwait
adc
or
retf
push
jmp
cmps
ret
jg
cmp
jo
aad
sbb
mov
loop
jmp
sbb
push
mov
test
jno
adc
fnstsw
inc
shl
xor
push
stos
dec
dec
je
imul
leave
lock
dec
cld
and
add
jg
cmp
loopne
add
add
inc
sub
test
pop
popa
sub
push
sbb
call
inc
push
pushf
inc
in
cld
push
arpl
cmp
xchg
pop
mov
inc
in
aaa
fimul
les
nop
in
out
mov
sar
cld
push
pop
out
sbb
mov
mov
lds
cmp
sub
fsub
(bad)
int3
dec
bound
imul
fdivr
or
push
jbe
xor
and
push
xchg
fadd
in
imul
or
dec
(bad)
sub
fcomp
add
sysenter
aad
or
inc
je
dec
or
mov
pushf
inc
mov
inc
jecxz
dec
mov
and
scas
shr
ds
push
pop
vmovupd
add
adc
push
js
jp
icebp
in
je
popa
js
out
out
daa
jl
nop
call
inc
scas
xchg
popf
sbb
es
xor
sub
clc
mov
adc
ret
fld
add
pushf
sar
or
popf
sbb
sbb
pop
cdq
and
lods
in
in
fimul
push
aad
aas
out
lea
stos
inc
jmp
call
or
jg
cmps
sbb
and
xor
xlat
hlt
into
ret
sub
jae
mov
je
cmp
sub
adc
and
daa
inc
sbb
aam
in
adc
mov
push
js
inc
pop
jecxz
lahf
ins
loopne
shl
xchg
clc
and
jbe
into
out
mov
or
xlat
push
popa
xchg
xchg
cmp
shl
jbe
cdq
mov
add
push
test
mov
add
test
sahf
pop
mov
inc
add
or
jg
and
in
ds
pop
sbb
pop
inc
arpl
adc
xchg
push
rol
mov
lods
add
ud0
xor
inc
es
fimul
jne
pop
out
ins
inc
(bad)
push
mov
mov
mov
xchg
or
int3
sub
jecxz
jmp
and
sub
imul
repnz
pop
movs
jo
dec
sbb
mov
pop
mov
cmc
xor
xor
mov
pushf
outs
adc
mov
push
ret
loop
mov
mov
jecxz
daa
adc
xlat
dec
pop
aad
push
pop
pop
clc
(bad)
retf
movs
out
inc
mov
bound
pop
shl
sbb
addr16
jae
jo
loope
pop
xchg
push
rcl
jns
and
cmp
jno
ret
xchg
push
fwait
jae
(bad)
gs
jl
iret
xor
push
or
test
jmp
xchg
jb
mov
cld
dec
retf
sub
mov
xchg
dec
and
ficom
ror
add
add
jne
scas
int3
pop
mov
cmps
mov
add
(bad)
adc
dec
push
(bad)
jmp
and
scas
shl
mov
pop
and
popw
sub
mov
cwde
les
mov
and
mov
mov
mov
cld
or
add
xchg
in
fadd
inc
outs
mov
mov
mov
pop
xchg
popf
test
out
cmp
lea
movs
mov
rol
dec
scas
shl
or
stos
or
sub
mov
xor
mov
push
xchg
mov
fmul
(bad)
retf
mov
or
or
cmp
xchg
cmp
sti
pusha
jb
inc
nop
sbb
dec
call
ror
(bad)
jbe
hlt
arpl
iret
ror
add
addr16
push
sysret
mov
fdiv
int3
imul
outs
call
add
ds
retf
(bad)
and
mov
(bad)
dec
dec
jecxz
test
mov
adc
jbe
ins
stos
into
xchg
lock
mov
xchg
mov
push
jmp
dec
clc
xor
test
inc
pop
push
pop
stc
add
loopne
jmp
pusha
lahf
dec
int
aaa
cmp
adc
daa
lods
imul
hlt
mov
cdq
out
adc
loope
retf
lea
adc
movs
iret
lock
in
dec
test
(bad)
pop
(bad)
lods
loope
pop
push
(bad)
ss
(bad)
xor
adc
nop
add
jp
test
aas
sahf
sbb
pop
adc
adc
xchg
sub
mov
xor
cmps
loopne
jp
mov
fiadd
stos
push
adc
push
ss
xchg
lea
dec
(bad)
push
sbb
push
call
ins
sbb
js
cld
test
push
cwde
scas
and
or
loope
adc
mov
jecxz
es
icebp
jmp
inc
out
shl
sbb
and
arpl
rcr
shl
cmp
aas
inc
dec
lods
in
in
xlat
call
iret
push
andnps
jo
sub
bound
aaa
aad
adc
mov
call
mov
ffreep
addr16
fstp
(bad)
sub
pop
(bad)
test
jmp
rcr
jne
test
cwde
idiv
js
js
int3
cli
sbb
nop
hlt
pop
out
imul
test
(bad)
cdq
imul
push
add
(bad)
pop
test
imul
and
pop
xor
or
leave
in
inc
ins
popa
pop
adc
jmp
pop
gs
or
dec
xor
push
ins
movsx
mov
cdq
jbe
not
mov
ins
bound
fmul
inc
neg
push
(bad)
cmp
mov
cmp
ins
addr16
and
inc
mov
test
xchg
mov
mov
and
sub
leave
pop
mov
int3
scas
cld
cmp
test
xor
sbb
mov
adc
mov
sub
clc
mov
ins
mov
dec
cmp
inc
push
cmc
cmp
ss
xor
inc
mov
jle
sub
mov
xchg
xor
(bad)
mov
loope
push
mov
popa
and
out
or
or
test
das
xor
xchg
cli
add
call
lods
clc
cmp
inc
inc
bound
dec
or
out
out
xor
add
jo
xchg
dec
rol
nop
jns
mov
inc
ds
ja
leave
pop
mov
repz
fdiv
mov
gs
fwait
cs
add
ret
enter
in
or
lods
lods
mov
mov
in
jecxz
and
push
outs
mov
cld
mov
cmp
leave
cmp
(bad)
cwde
out
outs
pop
xor
(bad)
fscale
push
mov
int3
setnp
mov
add
inc
cmp
and
push
int3
cdq
adc
rcr
out
aaa
mov
loope
lods
stos
fidiv
sub
(bad)
jmp
test
clc
data16
mov
jle
dec
test
mov
repnz
rcr
inc
mov
enter
into
push
push
dec
std
ret
cwde
sbb
out
push
cmp
pop
stos
sar
push
pop
inc
inc
cmp
push
mov
idiv
jp
push
dec
xchg
test
add
arpl
dec
lds
xchg
mov
inc
dec
adc
lods
jg
sbb
pop
jnp
shl
lock
retf
das
or
inc
les
fadd
das
dec
inc
int3
push
cld
add
mov
sub
daa
push
imul
fnsave
adc
movs
jne
inc
popf
sub
ins
inc
mov
push
inc
(bad)
lods
mov
pop
xchg
cmp
sub
push
aad
mov
(bad)
ins
mov
xor
and
sar
jge
push
sar
push
jl
push
pop
fwait
nop
dec
shl
cmp
xchg
cld
mov
mov
outs
jl
mov
movs
fidiv
dec
cmp
push
add
jmp
call
inc
push
movs
jg
in
inc
push
pushf
adc
xchg
add
arpl
arpl
dec
xor
sbb
(bad)
(bad)
lea
xor
push
xchg
pusha
shl
and
push
fild
sub
xchg
in
aaa
push
ficomp
shr
loope
imul
push
jl
xchg
jl
sub
in
cli
ja
ins
je
call
pop
aad
xchg
movs
test
push
inc
outs
mov
icebp
stos
jecxz
push
mov
cmps
adc
adc
xchg
div
test
aaa
push
shl
sub
sbb
loopne
jmp
in
mov
rol
out
scas
jne
shl
loop
sub
repnz
jae
mov
gs
mov
gs
aas
or
or
cmp
vmread
lahf
std
cmp
popa
in
xor
xchg
cs
ret
mov
add
int
mov
sub
xchg
aaa
call
mov
xor
int3
push
or
pop
jmp
shl
push
sbb
cmc
shr
dec
pop
xchg
pop
int3
push
sbb
inc
cdq
in
mov
ror
cmp
adc
pushf
fst
hlt
movs
xor
cli
fisttp
and
cmps
xchg
cmp
jmp
fldcw
aam
mov
call
mov
rcr
ficom
push
dec
cmp
mov
mov
test
push
push
jne
(bad)
sbb
dec
das
or
into
out
call
stos
je
ret
and
pop
xor
push
sub
iret
sbb
sub
mov
adc
sbb
xor
ficom
add
xchg
mov
(bad)
pop
and
mov
out
mov
aas
push
aad
(bad)
jl
stos
and
cdq
mov
mov
add
sub
xlat
(bad)
jno
cmp
push
adc
loop
mov
aam
retf
sub
dec
or
test
aaa
cmc
pop
addr16
retf
out
jle
jbe
pop
jmp
or
stos
nop
icebp
xor
sub
jno
adc
mov
pusha
dec
mov
push
adc
xchg
xchg
sub
sbb
cmp
sub
rcr
mov
test
jae
mov
stos
adc
push
std
dec
adc
pushf
addr16
stos
emms
psrad
jnp
cmp
pop
jno
xchg
out
push
and
mov
es
retf
stos
mov
mov
xchg
loop
ja
inc
or
mov
mov
daa
clc
pop
xor
add
jle
sub
push
or
pop
pop
int3
pop
pop
(bad)
push
lods
inc
pop
loope
xor
dec
xor
cmp
and
mov
fwait
sbb
and
and
dec
hlt
int
ins
mov
sub
push
outs
add
daa
js
fcmovb
lea
mov
je
sub
pop
xchg
pop
xor
inc
arpl
add
dec
ins
ins
jp
mov
movs
std
mov
cmps
and
xchg
fucom
jns
bound
fnsetpm(287
pushf
pop
pop
inc
mov
test
add
test
xchg
inc
xor
push
das
ret
cli
xchg
call
popf
fidivr
fsubr
or
mov
dec
cmps
in
retf
push
mov
inc
cdq
pushf
xchg
pop
stc
and
push
jnp
cmp
xor
xor
adc
lods
xchg
mov
dec
frstor
repz
int
call
push
sbb
(bad)
lea
imul
hlt
mov
psllw
xchg
data16
fs
jne
and
sub
mov
arpl
rcl
mov
cs
out
aam
cmps
lods
pop
lods
mov
call
ret
out
xor
out
xchg
mov
lock
out
xor
mov
sub
dec
sub
(bad)
jecxz
retf
jno
scas
push
inc
mov
outs
pop
adc
out
(bad)
popf
inc
sbb
ret
adc
pop
cs
jecxz
stos
push
shl
fnstcw
jp
out
inc
fdivp
jbe
das
shl
and
jno
mov
inc
fdivr
push
or
mov
sbb
(bad)
lock
rcr
or
ss
jecxz
push
and
xor
rcl
sbb
or
test
dec
sub
and
fstp
fnstsw
mov
push
push
fdiv
jle
push
(bad)
dec
adc
test
mov
jbe
icebp
aas
cmps
or
lea
and
cli
cmps
adc
xchg
pop
add
pop
les
fnstcw
mov
mov
sti
cmp
clc
iret
mov
je
push
jno
lds
rcr
xor
cs
add
jmp
sub
adc
fnstenv
jmp
mov
addr16
bound
daa
jne
aas
loope
aas
xor
or
xlat
jo
cmp
mov
sub
nop
pop
pusha
pushf
rdmsr
add
push
lods
jo
lods
jmp
(bad)
fadd
sub
jge
inc
dec
ror
test
jp
and
xchg
loopne
lahf
inc
mov
fimul
ror
out
fmul
add
sub
dec
mov
aas
xor
add
outs
cdq
xchg
push
dec
ds
invd
mov
mov
or
cmp
clc
inc
call
xchg
add
shl
adc
into
xchg
pop
in
sub
inc
xor
stos
xor
mov
xchg
rol
or
inc
jle
mov
push
xor
popf
push
xor
push
pop
push
and
call
sub
mov
outs
mov
ja
pop
jno
movs
sub
xor
add
mov
pop
sahf
daa
data16
pop
mov
out
or
mov
bound
mov
(bad)
test
loopne
mov
mov
inc
adc
lea
ins
jecxz
sbb
out
sbb
mov
leave
mov
sub
imul
push
jns
push
out
lods
outs
repz
repz
gs
or
and
push
jle
mov
jmp
jle
push
jmp
xchg
pop
pmaddwd
fistp
pop
pop
retf
push
inc
xor
int
popf
xor
xor
(bad)
mov
rcl
and
mov
inc
ret
mov
in
daa
ins
rol
inc
test
xor
cwde
test
ins
cli
dec
adc
(bad)
retf
stos
repz
fwait
pop
push
enter
in
pusha
int
test
pop
mov
push
cmp
fwait
mov
mov
pop
mov
repnz
and
pop
xchg
fsub
in
fist
mov
mov
neg
pop
sbb
bound
das
movs
pop
(bad)
sub
fild
dec
enter
add
call
hlt
pop
sub
push
sub
sbb
mov
daa
push
xchg
push
aam
mov
cmp
pop
adc
ins
fldcw
adc
add
inc
in
aam
stos
setns
lea
sti
lods
and
pushf
std
rol
popf
clc
ins
jnp
lods
into
pop
xlat
xchg
cmp
jle
pop
sub
icebp
pop
cli
fdivr
mov
arpl
mov
sub
mov
push
pop
dec
pushf
pop
mov
xchg
push
xchg
xor
lods
push
or
cmp
fstp
iret
mov
rcl
shr
js
mov
or
dec
add
jb
xor
mov
inc
xlat
loopne
cld
push
pop
xlat
mov
inc
add
dec
mov
cmc
sti
xor
inc
sbb
pop
mov
icebp
mov
add
jecxz
fs
and
pop
rcl
sahf
loopne
mov
xor
jmp
sub
stc
cwde
xchg
sub
in
xor
inc
pop
xor
mov
addr16
pop
mov
dec
inc
dec
cmp
adc
jno
stos
iret
int
jp
push
ret
call
out
dec
fcmovne
bnd
mov
rol
cmps
enter
mov
cld
sbb
sub
mov
inc
mov
xor
pop
and
cmp
lea
sub
mov
mov
add
mov
lahf
cmp
bound
out
cmp
ins
int
sub
(bad)
sbb
ins
je
ds
arpl
call
icebp
ficomp
popf
scas
sbb
es
call
inc
mov
cmp
push
shl
outs
enter
push
(bad)
mov
cmps
sbb
add
adc
xor
sub
add
pop
call
hlt
add
jns
mov
pop
inc
movs
fbld
or
je
pusha
mov
adc
or
pop
in
enter
or
mov
sbb
sbb
inc
cwde
in
mov
imul
movs
xchg
cmp
ss
jb
inc
xor
sub
test
mov
inc
aaa
retf
adc
jge
shl
loopne
adc
das
mov
leave
add
call
dec
mov
inc
pop
std
fs
loope
mov
inc
mov
or
add
(bad)
mov
repz
adc
jl
sub
cmpxchg
out
jle
fdivr
test
cmp
mov
sbb
outs
inc
pop
iret
pop
lds
and
outs
sbb
push
outs
xor
mov
cwde
sub
mov
dec
xchg
sbb
mov
call
add
ror
inc
hlt
inc
pop
clc
push
shufps
sub
cwde
sbb
pusha
or
and
sar
dec
push
loop
cwde
out
and
fidivr
adc
adc
cmps
lock
out
cld
push
xor
pop
jecxz
xchg
scas
mov
cmp
stos
jmp
dec
in
retf
push
xchg
mov
lea
pop
mov
xor
mov
xchg
pop
ins
push
fbld
xchg
les
push
pop
push
pop
mov
sbb
add
aas
xchg
xor
jmp
fld
jmp
push
cmp
fild
sub
aaa
aad
stos
mov
pusha
and
jmp
outs
test
pop
enter
push
inc
fst
jne
adc
push
movs
mov
imul
out
adc
add
mov
aas
addr16
push
(bad)
xchg
mov
movs
jns
sub
call
xchg
and
sbb
lods
popa
jno
mov
ret
and
sub
lahf
xchg
jae
add
loopne
popa
and
es
sub
lock
cdq
push
jne
fldenv
adc
inc
repz
or
push
in
cmp
adc
inc
or
ds
add
mov
mov
inc
stc
popf
call
stos
push
inc
loope
xchg
xlat
scas
ror
daa
xchg
ds
lock
(bad)
in
push
push
(bad)
jns
imul
arpl
push
fsub
and
iret
xchg
xlat
mov
stos
inc
popa
dec
leave
push
mov
rol
jbe
and
out
add
lock
(bad)
fidivr
scas
jge
(bad)
addr16
inc
adc
cs
popa
push
call
in
jb
mov
out
push
fld
out
jle
(bad)
jge
enter
pmulhw
pop
fwait
out
inc
mov
int3
pop
jl
or
movs
cmp
scas
fwait
xchg
imul
inc
mov
fdivr
ss
mov
jbe
shr
aas
rcl
inc
mov
and
in
div
or
and
cs
in
sbb
pop
popa
popf
(bad)
addr16
mov
sub
movs
loopne
or
sbb
and
lock
jno
push
dec
imul
dec
adc
bnd
add
in
fstp
or
dec
and
outs
mov
lods
in
das
cwde
je
xchg
out
xchg
enter
sbb
or
cld
mov
popf
mov
pop
jge
cmp
in
dec
and
pop
loop
pop
mov
sbb
call
inc
cmp
je
inc
jne
push
ja
and
dec
popa
add
out
sbb
push
(bad)
std
inc
mov
push
xchg
push
pop
mov
fiadd
stos
arpl
xchg
mov
ds
push
sbb
mov
dec
out
cld
and
out
outs
or
daa
fcom
sub
ja
add
inc
in
mov
or
cmp
stc
sbb
in
xor
mov
fld
stc
in
movs
loopne
jmp
mov
push
push
into
xchg
push
or
xchg
mov
pop
repnz
sub
ds
dec
pop
mov
mov
out
(bad)
jge
xchg
adc
jo
xchg
pop
inc
mov
mov
popa
jno
xchg
cmp
push
inc
dec
inc
or
inc
xor
inc
in
xchg
or
sub
sub
repz
and
retf
test
add
aad
add
cmp
cmp
cs
dec
out
in
pop
(bad)
aas
xchg
jmp
je
push
jl
cmps
adc
xor
mov
sahf
dec
xchg
das
and
mov
call
ins
gs
out
(bad)
das
jne
cdq
or
cmc
push
mov
inc
xchg
out
xchg
pop
loopne
xchg
add
inc
imul
xchg
pop
and
leave
xor
sti
pop
mov
inc
shl
std
and
stos
stos
cmp
movs
mov
mov
sub
imul
lods
outs
jle
mov
(bad)
mov
xor
pop
mov
movs
and
lock
add
bound
stc
stos
js
lahf
push
outs
in
mov
int
pop
push
xchg
sbb
mov
mov
xchg
push
dec
movs
popa
(bad)
pop
aaa
rcr
out
xor
test
in
or
inc
sbb
repnz
cmp
frstor
cmp
push
rcl
lock
push
loope
int3
div
or
out
jae
and
jb
push
cmc
cli
iret
scas
xlat
shr
adc
into
ss
fld
dec
mov
lods
je
pusha
fst
jo
dec
test
jmp
mov
sahf
jl
adc
cmp
and
add
fisub
sti
mov
jb
push
push
inc
in
lds
lods
mov
ret
fs
xchg
scas
cmps
sbb
push
call
fimul
into
iret
ficom
pop
cmp
add
mov
loope
cmp
add
lock
mov
clc
add
ins
xchg
or
xchg
xor
das
cmp
sub
inc
xchg
push
adc
mov
mov
sub
mov
data16
xchg
int
jl
dec
in
bound
dec
in
push
mov
pop
cmp
js
arpl
inc
push
imul
push
outs
mov
dec
mov
add
mov
mov
pop
fnstenv
sbb
jp
or
loopne
sub
ds
xlat
cmp
jmp
mov
sub
data16
sub
lds
mov
push
leave
aad
fst
fdivr
xchg
ins
push
leave
jo
add
cmps
mov
fidiv
and
clc
stos
fild
xchg
xlat
or
aas
adc
cmps
test
xlat
lods
mov
pop
enter
arpl
dec
jbe
scas
inc
and
pop
cwde
push
(bad)
push
mov
imul
std
mov
jg
popf
and
gs
cmps
jmp
fcomp
cmp
fmul
jbe
mov
dec
cmps
add
(bad)
retf
jecxz
xchg
sbb
nop
addr16
std
fs
into
inc
pop
add
sub
aad
int
sbb
jg
popa
icebp
mov
mov
mov
dec
int
movs
push
sbb
arpl
xchg
call
push
pop
fbstp
add
ins
mov
retf
in
mov
sbb
repz
sbb
loopne
xor
aam
sub
sub
shr
push
inc
int3
jecxz
lahf
cmps
mov
jmp
pusha
cmc
(bad)
mov
out
dec
cmps
int3
cs
xor
jmp
scas
sub
iret
into
add
adc
das
sub
scas
sub
xor
adc
pop
add
lods
jnp
xor
xor
rcl
jmp
mov
push
mov
cmc
sbb
sub
xchg
ret
xchg
cmp
and
scas
test
push
dec
cs
push
pop
out
lods
stos
inc
cmps
jp
cmc
cmc
js
int3
mov
and
retf
mov
sub
and
add
rcl
xor
mov
add
aad
jmp
mov
jmp
or
pushf
cmps
xchg
cs
sbb
movs
fild
push
sti
jp
adc
aas
idiv
add
mov
cmp
push
push
inc
fidiv
and
dec
retf
das
out
test
ss
cmps
mov
cmc
add
mov
(bad)
pop
mov
repnz
cmc
mov
test
cmp
jns
push
sbb
retf
repnz
(bad)
out
cli
shr
rol
and
pop
lds
mov
or
stos
test
(bad)
fwait
xchg
inc
(bad)
cs
hlt
lods
jg
loope
stos
pop
xor
fimul
sub
out
mov
stos
pop
test
lods
in
and
lar
and
mov
call
xchg
mov
rcl
jge
out
xchg
add
call
outs
mov
jno
fld
mov
cmp
xchg
cdq
fcmovb
push
sbb
pop
loop
sbb
or
mov
int
cs
les
sub
fwait
mov
mov
call
popa
icebp
sahf
push
cs
adc
lods
movs
cdq
push
dec
in
adc
sbb
fdivr
into
std
xlat
fdiv
mov
adc
inc
stos
push
push
sub
iret
inc
mov
sti
push
or
sbb
ret
jns
ror
cmps
cs
jo
and
sar
out
inc
movs
pushw
cld
aas
retf
xor
ret
push
cmp
iret
lea
sbb
inc
sub
inc
aaa
mov
xor
call
mov
popa
jo
cld
mov
inc
in
mov
cmp
sub
call
fwait
scas
jne
out
inc
repnz
sti
sbb
adc
mov
jae
(bad)
cmc
jns
psubw
imul
and
rcl
scas
(bad)
pop
lea
pop
sub
scas
inc
je
vlddqu
paddsw
fs
xor
or
inc
mov
pop
lahf
(bad)
mov
mov
and
xor
pop
jl
cmovge
retf
cwde
mov
ja
imul
sbb
(bad)
cmp
scas
pop
int
or
mov
(bad)
pusha
pop
push
ins
add
fild
adc
mov
in
dec
mov
pop
xchg
dec
fild
mov
test
loop
lods
int
inc
xor
or
test
push
mov
sbb
sub
rol
aam
icebp
mov
into
fld
cmc
sar
repnz
sub
(bad)
popa
out
mov
clc
xchg
pop
(bad)
out
mov
or
pop
push
popf
sbb
bound
mov
hlt
pop
push
nop
int
cs
xchg
mov
sbb
mov
jge
(bad)
sbb
lock
inc
mov
push
add
pop
jp
ins
and
pop
mov
sub
jle
push
or
or
scas
loopne
mul
mov
pop
jne
repnz
push
les
je
scas
or
into
std
jle
sub
test
(bad)
jl
jns
jmp
sbb
push
cwde
xor
div
mov
(bad)
xchg
xchg
imul
aas
jmp
cmps
jg
cmp
sbb
mov
push
aaa
jl
or
mov
push
xor
mov
push
inc
jge
xor
push
jge
mov
in
ret
mov
iret
push
jmp
loopne
mov
jmp
repz
xlat
cmps
test
out
lods
int3
jmp
xchg
loopne
xchg
gs
push
lods
shl
xchg
ficom
retf
lods
push
in
mov
pop
ja
jo
lahf
cdq
xor
fild
push
add
aas
fnstsw
nop
icebp
leave
jae
ins
dec
inc
dec
bound
xchg
sbb
jno
adc
and
lds
fnstsw
jno
push
movs
sbb
dec
fbstp
push
jnp
mov
push
jl
cmp
or
call
mov
cmp
cmps
push
lahf
mov
data16
inc
call
movs
adc
mov
push
loope
ss
push
pop
nop
jnp
fcom
stos
jge
loope
push
imul
mov
leave
cmps
dec
cmp
into
jle
ja
mov
sub
xor
ins
xor
into
in
or
xlat
inc
mov
bound
out
(bad)
in
jle
sbb
jp
out
and
hlt
inc
xor
pop
scas
mov
es
sbb
pop
stos
mov
add
rol
add
push
arpl
pop
into
movs
stos
test
call
es
gs
(bad)
out
scas
pusha
aam
and
mov
in
or
(bad)
popf
xor
inc
ss
dec
and
int3
jmp
or
mov
stos
or
fild
sub
add
cwde
ins
jmp
jl
mov
(bad)
mov
repz
cmc
adc
ja
lea
pop
lods
mov
dec
gs
sbb
xlat
fild
jns
clc
dec
sbb
leave
retf
addr16
popf
pusha
cwde
(bad)
jae
cmp
xor
adc
sbb
jl
push
out
lahf
and
jl
cmp
and
mov
push
cdq
mov
adc
or
pop
popf
jns
add
push
or
sbb
gs
push
or
sub
lods
xor
imul
mov
mov
ins
sbb
les
xor
dec
mov
and
mov
push
outs
cmp
or
aad
repnz
dec
aaa
out
jecxz
fiadd
or
sub
int
mov
dec
or
aaa
mov
xchg
icebp
sbb
add
movs
fld
dec
scas
adc
ja
cmp
xor
repz
adc
dec
add
xor
in
push
cmp
adc
mov
mov
mov
pop
jb
in
xlat
popf
jge
or
sub
mov
scas
call
mov
iret
mov
ja
and
add
jg
in
movs
jmp
lock
(bad)
fstp
lds
(bad)
loopne
jp
jmp
cmp
and
inc
daa
cmc
jmp
loope
ss
and
mov
mov
jo
sbb
rcr
aam
addr16
xor
pusha
pop
fwait
scas
push
pop
test
fs
mov
stc
mov
lods
scas
lods
xchg
int3
mov
fist
shr
(bad)
pop
cmc
out
mov
sub
(bad)
(bad)
cmps
xchg
xlat
aad
jle
sub
fild
and
mov
sub
push
call
sahf
jmp
mov
sbb
mov
fisttp
fstp
fidiv
and
mov
stos
inc
inc
pop
mov
repnz
lahf
pop
arpl
mov
cs
mov
cmps
ficom
xor
sbb
add
cmp
fisubr
test
inc
addr16
push
fnstcw
icebp
addr16
test
idiv
lahf
in
mov
mov
jnp
mov
add
popf
je
test
push
icebp
std
push
mov
jne
push
arpl
sub
add
dec
mov
scas
cld
ret
inc
mov
adc
shl
cli
add
icebp
jb
ret
add
iret
out
xchg
jl
push
mov
xor
push
cs
and
adc
mov
cdq
xchg
jne
rcl
xchg
push
in
mov
arpl
inc
shr
call
(bad)
dec
jmp
lods
or
and
jno
xor
inc
and
jbe
inc
fs
lea
rcr
pop
mov
push
dec
ins
xchg
bound
pop
or
imul
ss
add
add
sbb
(bad)
push
popf
pop
inc
and
adc
pop
dec
and
jno
and
mov
sbb
jno
dec
stos
cmp
sbb
jae
xor
es
push
xor
into
pop
test
frstor
jg
out
mov
ss
pop
mov
pop
fcmovnu
adc
add
and
cld
sar
adc
push
cwde
out
fisub
aaa
in
add
bound
jl
mov
push
inc
jnp
jbe
sbb
sti
movs
fiadd
js
mov
push
(bad)
xor
dec
aad
js
dec
(bad)
loopne
lods
cmps
popa
ds
add
sbb
sub
jmp
lea
fisubr
lea
clc
mul
lds
xor
int
mov
shr
adc
jo
out
pop
dec
fist
push
inc
sbb
aam
frstor
mov
inc
std
pushf
and
cli
cmp
or
pop
call
div
fist
sub
sbb
int
retf
pop
jmp
or
cmp
neg
fisttp
sbb
adc
mov
ja
add
fistp
add
int
add
dec
xor
nop
jae
pop
mov
clc
test
lea
hlt
sub
in
mov
mov
jecxz
add
xchg
dec
push
out
adc
je
mov
imul
and
lock
sub
jecxz
dec
sbb
imul
das
imul
lahf
or
mov
xor
dec
sbb
xor
scas
xor
fidiv
jecxz
bound
fidivr
(bad)
(bad)
shl
movs
mov
pop
pop
jp
fxch
fwait
sub
inc
pop
outs
imul
dec
mov
xor
out
cmp
adc
cmps
sub
outs
sar
mov
es
aad
pushf
or
jmp
mov
mov
dec
jle
ror
(bad)
xor
sti
adc
xchg
xchg
and
aas
push
iret
(bad)
rcr
gs
sub
sbb
or
shl
scas
add
mov
sbb
out
sub
out
jno
mov
jb
xchg
lods
xor
stc
mov
ds
fisttp
mov
pusha
jl
jle
stos
sub
pop
stos
push
stos
scas
cmps
mov
out
cs
div
add
in
aam
test
xchg
add
adc
test
pop
test
inc
jbe
adc
or
les
enter
aas
xor
sbb
inc
scas
mov
add
jno
das
jp
iret
shr
retf
push
jmp
repnz
fsub
mov
(bad)
in
dec
cs
das
ins
je
ret
fcomp
pop
retf
inc
inc
movs
jns
inc
mov
movs
and
inc
outs
jg
ds
xchg
pop
adc
fisttp
inc
mov
cmp
add
pop
movs
mov
iret
cmp
cmc
movs
scas
dec
sar
xor
call
stos
pop
scas
in
cwde
fsubr
sub
cmp
icebp
push
jnp
mov
neg
fild
push
daa
mov
sbb
pop
jb
cmp
xchg
gs
or
or
jl
or
call
std
ret
ret
and
sub
cmp
scas
jle
(bad)
jb
bound
sub
and
js
(bad)
daa
ja
(bad)
outs
and
mov
sbb
xchg
lahf
icebp
int3
cmp
(bad)
xor
jg
and
add
outs
sti
fcom
push
or
mov
inc
jb
pop
or
retf
add
popa
pop
std
xor
or
inc
cmp
pop
and
push
xchg
mov
mov
popf
mov
mov
(bad)
cmp
add
adc
fist
mov
mov
(bad)
or
leave
shr
mov
dec
lds
inc
(bad)
sbb
scas
aam
fsub
xchg
rcl
addr16
mov
or
(bad)
mov
jg
mov
imul
fstp
cmp
mov
xchg
fcmovu
pop
hlt
cmc
mov
mov
mov
icebp
jno
adc
add
cli
sub
pop
adc
add
adc
jle
dec
mov
push
clc
or
mov
pop
xchg
or
lods
or
xor
pop
mov
pop
lods
cdq
cmp
sub
out
fadd
sti
inc
fmul
mov
or
dec
adc
call
fbld
dec
add
repz
jae
outs
lods
mov
(bad)
sub
lea
sub
aam
xor
pop
(bad)
loopne
jmp
jnp
clc
add
data16
jo
pop
rcl
push
call
ins
xchg
sub
xchg
test
data16
sahf
and
jmp
test
out
mov
and
pop
sbb
xor
or
loopne
mov
out
cs
or
das
jb
dec
sub
faddp
push
pop
jae
adc
mov
in
movs
enter
adc
mov
dec
add
xor
mov
std
cmps
xchg
add
dec
or
scas
lea
xchg
pop
xchg
int
xchg
arpl
mov
pop
int
inc
in
sti
pop
xchg
xchg
jmp
sub
lock
dec
(bad)
mov
sbb
fistp
daa
js
test
mov
pop
inc
call
repz
call
loop
mov
not
inc
mov
fnstsw
test
ins
cmc
in
jbe
(bad)
in
ret
pop
lock
or
sbb
arpl
dec
pop
fldenv
out
pop
sbb
repz
(bad)
sahf
or
cmp
aam
dec
jecxz
std
sbb
cmp
mov
movs
jns
adc
pop
jns
out
mov
and
popa
add
test
inc
aaa
fldcw
xor
movntps
xor
bound
ss
mov
je
hlt
xchg
jge
mov
fnstsw
call
js
mov
test
rcr
and
fwait
lahf
data16
sbb
test
mov
(bad)
cmp
inc
jns
rcl
push
adc
and
pop
jg
cwde
into
lea
dec
mov
and
repnz
sub
inc
call
mov
cld
fst
cmp
in
sbb
jbe
daa
lods
xchg
xor
mov
sahf
sti
xchg
xchg
jmp
ret
cld
and
xchg
mov
es
das
nop
and
xlat
lods
sub
in
and
sbb
fisub
mov
rcr
inc
cli
ret
fucom
push
ficomp
or
pusha
inc
sub
stos
add
(bad)
cmps
(bad)
arpl
cs
inc
int
and
jg
xor
cli
test
inc
push
cld
lods
add
fsin
xchg
mov
jo
in
stos
jge
jg
rol
sbb
cld
cwde
fsub
pop
(bad)
inc
rcl
cmp
repz
outs
xchg
sub
xchg
loope
jmp
mov
repnz
js
mov
xlat
(bad)
mov
sub
outs
les
cmovo
sub
cmc
adc
jmp
gs
mov
mov
mov
jg
sub
pusha
ss
lock
and
int3
sub
ja
pushf
enter
add
push
jmp
cs
xchg
inc
sbb
mov
xor
ins
gs
mov
retf
dec
into
mov
xchg
std
fdiv
mov
fld
xchg
fidivr
mov
repnz
jb
push
sbb
out
push
dec
je
pop
int3
sbb
test
cwde
pop
iret
imul
pop
outs
pop
std
inc
inc
outs
fidiv
scas
bound
pushf
fwait
mov
fild
push
xlat
jbe
mov
and
into
clc
add
movs
and
jno
gs
xchg
loope
les
(bad)
cmp
pop
in
jmp
add
inc
arpl
daa
int3
xchg
adc
retf
dec
xor
xor
sub
lods
mov
dec
push
jmp
ret
jmp
(bad)
push
jg
and
in
in
dec
add
push
cmc
aad
and
or
or
adc
fistp
mov
adc
pop
or
cmps
xchg
push
and
lods
inc
in
outs
(bad)
xor
or
add
dec
sub
mov
add
ins
mov
sub
add
daa
pinsrw
push
cmc
pop
enter
add
out
push
pop
adc
adc
and
(bad)
or
push
fsubp
add
xchg
shr
les
fmul
iret
and
cmp
(bad)
iret
xlat
sub
pop
scas
outs
inc
xchg
shl
add
jle
ds
mov
cmps
test
mov
xchg
test
mov
in
lock
idiv
std
ss
and
cmp
jb
test
sbb
dec
data16
test
mov
pop
in
jns
lahf
cdq
dec
sub
ds
adc
mov
xor
enter
jl
popf
retf
xor
stos
out
sti
das
aaa
rcr
push
les
mov
sub
push
mov
aam
es
fisttp
leave
scas
out
adc
or
or
push
int
repnz
icebp
pop
dec
das
(bad)
sbb
retf
push
cmp
xor
fdivr
mov
or
fisttp
sbb
pop
(bad)
cmps
sbb
xor
mov
loope
lods
or
ds
cmps
nop
mov
xor
xchg
cmp
mov
xor
push
mov
mov
inc
or
das
aad
xor
cmp
cmp
fcomp
ins
or
inc
fiadd
and
jge
nop
rcr
adc
das
sub
call
jp
add
push
fwait
retf
leave
push
jle
addr16
mov
pop
data16
js
or
cmp
test
cmp
jp
mov
aaa
mov
imul
or
mov
iret
out
push
sub
das
aaa
test
in
sahf
mov
mov
or
mov
loop
ds
and
mov
xor
js
cmp
jo
sub
loope
add
lahf
adc
push
sbb
sbb
mov
inc
push
cmps
push
bound
cmp
sub
daa
std
add
clc
daa
in
xor
mov
(bad)
mov
out
fist
sub
pop
data16
cmp
sub
add
cmp
cmp
xchg
adc
push
push
mov
add
sub
sahf
xchg
fimul
(bad)
mov
popw
aas
ret
sbb
jmp
cmp
push
mov
ja
mov
aaa
fwait
lods
xchg
sub
xlat
pmaxsw
test
sbb
loopne
test
ins
mov
ret
fsub
and
jne
xchg
test
in
lds
jecxz
es
loopne
xchg
mov
and
add
movs
les
test
outs
xor
mov
mov
mov
out
mov
inc
es
mov
dec
loop
jle
iret
js
sub
outs
jle
pop
repz
mov
cmps
jle
in
pusha
iret
inc
test
inc
enter
aam
fwait
stos
lods
add
sti
mov
inc
popa
mov
pushf
mov
out
mov
retf
out
inc
push
adc
push
cmps
dec
jne
cli
dec
shr
gs
loope
mov
sbb
mov
dec
inc
iret
or
scas
js
pop
inc
aaa
mov
sti
jle
pop
inc
jmp
ja
test
or
mov
inc
adc
push
push
addr16
popa
push
push
mov
or
in
sub
out
retf
xchg
call
cwde
cmps
pop
int
out
icebp
(bad)
cmp
je
cld
cmc
cmp
rcl
sbb
or
jb
cmp
inc
(bad)
aaa
mov
or
mov
inc
mov
lods
jb
outs
call
cmp
cwde
mov
clc
enter
jne
sbb
sub
(bad)
mov
repnz
fld
iret
push
xchg
int
inc
loop
ja
out
enter
ficomp
sbb
cli
not
frstor
jno
daa
mov
push
ret
cmp
dec
ins
test
aad
and
xchg
fwait
jecxz
movs
mov
out
icebp
pop
inc
sbb
pop
(bad)
(bad)
(bad)
and
add
xor
xchg
inc
add
adc
call
add
add
jp
dec
dec
mov
push
aad
gs
inc
gs
pushf
xchg
shl
jb
mov
stc
fistp
mov
daa
scas
or
loop
aaa
inc
and
aas
mov
jp
aas
jp
push
xor
and
mov
add
mov
pop
cmp
fcomi
scas
jmp
pop
pop
call
cdq
dec
gs
stos
std
cmp
dec
mov
jp
sti
pop
adc
mov
test
add
dec
dec
into
(bad)
mov
div
in
leave
fcom
out
xchg
pop
mul
call
mov
xlat
scas
jge
int
inc
inc
rol
jo
push
test
sub
(bad)
jmp
xchg
jg
fstp
xchg
lock
ins
and
test
movs
fadd
adc
dec
pop
ret
mov
xor
pop
hlt
sub
add
imul
fs
inc
cmp
or
outs
mov
lods
test
das
test
test
div
jg
jge
push
jg
loope
shr
push
pop
sbb
cmps
dec
std
lea
xchg
enter
int
push
mov
lock
jge
loop
imul
(bad)
shufps
adc
pop
shl
cmp
jg
adc
icebp
cmp
stos
lods
int
(bad)
push
(bad)
sbb
dec
jmp
shl
mov
mov
lock
add
retf
push
ret
xor
mov
aam
pusha
loope
xchg
ret
fistp
call
mov
adc
lds
xchg
stc
push
jecxz
inc
outs
xor
gs
jne
in
fcmovnb
and
lahf
pop
(bad)
mov
lock
jecxz
pop
aad
bnd
xor
push
pop
int3
push
jns
gs
call
xor
test
cmp
js
xchg
ins
push
fiadd
loopne
add
mov
ficomp
daa
loopne
xor
scas
xchg
add
mov
cwde
jl
int3
ror
popf
mov
xchg
pop
cmp
inc
xlat
jp
mov
adc
scas
jle
dec
inc
push
xor
dec
adc
or
pushf
movzx
mov
mov
lea
fild
(bad)
mov
addr16
dec
xchg
fcmovnbe
repz
mov
push
xor
hlt
sbb
ja
and
out
cmp
pop
sub
sub
ja
add
fbld
daa
pusha
inc
out
or
adc
mov
lock
dec
movhlps
xchg
sub
and
mov
scas
add
loope
loope
dec
cli
inc
test
fs
mov
cli
jno
xchg
mov
xlat
lods
sbb
push
xor
in
and
pop
cmp
or
dec
dec
aad
out
jp
cmps
cwde
add
xchg
outs
lods
bound
sbb
(bad)
inc
repz
test
(bad)
or
call
mov
and
mov
aas
rol
xchg
retf
push
(bad)
lods
iret
nop
jno
cmps
test
test
inc
in
mov
aam
pop
sub
imul
inc
inc
push
mov
mov
ins
dec
stos
jecxz
pop
jae
and
or
pusha
jns
and
nop
inc
aas
cmp
pushf
mov
leave
dec
rcl
iret
fsub
xchg
cmps
jo
int
pop
cmp
loop
stos
out
scas
xor
xchg
inc
sahf
ds
int3
(bad)
frstor
in
cmp
mov
bound
mov
outs
add
repnz
cmps
sub
mov
gs
(bad)
cmps
push
outs
adc
ins
jecxz
pop
sub
out
neg
pop
stos
adc
loop
push
repz
into
mov
add
pop
and
in
sbb
mov
popa
movs
fidivr
push
mov
and
inc
aad
repnz
ins
pop
mov
int
das
pushf
mov
ins
or
call
addr16
pop
lahf
mov
push
push
jle
popa
ins
mov
leave
inc
mov
ret
sub
outs
jecxz
dec
mov
jge
lea
or
adc
jmp
lock
out
pop
mov
push
inc
rol
shr
retf
xor
outs
out
mov
cmp
adc
ins
mov
pop
mov
sbb
jno
pop
add
mov
add
fst
sub
shr
xor
test
(bad)
(bad)
dec
imul
mov
cmp
mov
lods
mov
lahf
add
loop
repz
aad
mov
es
lods
and
jbe
lea
mov
fdivr
and
popf
sbb
or
or
mov
xchg
xlat
xor
sbb
scas
push
and
sbb
inc
fwait
inc
(bad)
sbb
ds
in
push
arpl
loopne
scas
and
add
xchg
stos
fld
push
add
shl
aas
ins
popa
push
jmp
xor
adc
das
add
dec
cmps
ret
(bad)
sub
dec
fxch
div
inc
(bad)
lahf
cmps
pop
imul
aaa
loopne
fistp
fldcw
push
pushf
arpl
out
mov
pusha
aaa
push
popf
pop
xchg
out
or
and
sbb
icebp
je
inc
and
test
and
fcmovnu
pushf
mov
mov
jmp
leave
push
adc
mov
push
rcr
pop
xchg
adc
xor
popa
add
iret
cmp
call
sahf
cmp
leave
add
add
or
mov
aaa
dec
cs
lds
test
add
daa
adc
data16
sbb
es
lock
cmp
xchg
out
fbld
add
pop
nop
sub
push
loope
mov
push
imul
loop
das
cwde
stos
sub
cmp
mov
inc
or
cmp
pop
jg
jge
lock
cmc
cmc
pop
cmp
or
js
pop
sbb
adc
aaa
cmp
add
push
xchg
add
nop
jmp
mov
jns
pop
sbb
sbb
push
inc
push
retf
(bad)
icebp
(bad)
jnp
inc
pushf
cwde
repnz
cmp
push
je
mul
rcr
jo
sub
or
fisttp
call
push
jne
xchg
gs
or
add
xchg
inc
and
clc
push
cmps
dec
ja
int3
in
xor
gs
jle
xor
bound
sbb
sbb
loopne
pop
mov
push
mov
mov
xor
adc
sbb
mov
inc
call
add
test
repz
rcl
mov
cld
shl
aas
sub
stos
push
cmps
outs
inc
shl
fadd
xchg
jnp
inc
inc
imul
idiv
outs
lods
inc
inc
add
test
ja
cmc
push
push
mov
movs
jmp
jecxz
ins
sahf
and
inc
jge
js
(bad)
jg
mov
imul
cmps
cs
sbb
jmp
xchg
and
vpackssdw
movs
cmp
loope
cli
mov
add
cli
sub
jmp
cmp
sbb
dec
adc
movs
rcr
mov
xor
aam
call
xchg
xchg
and
mov
es
sub
sbb
xchg
sbb
sar
aad
dec
int
cs
scas
mov
sub
sub
add
fsubr
cwde
or
not
sub
shl
lahf
mov
xchg
mov
cmps
xchg
arpl
stos
xchg
ret
push
call
es
jbe
mov
or
bound
test
pop
inc
aas
cwde
stos
stos
lock
es
enter
jl
(bad)
aam
stc
pusha
inc
jmp
(bad)
stc
test
xor
mov
cmp
sti
pop
stos
jbe
or
iret
xchg
(bad)
lods
mov
imul
cmp
pop
sbb
jmp
xlat
push
push
in
imul
test
xchg
scas
mov
and
sahf
xchg
pop
daa
adc
sbb
das
push
or
push
mov
test
xor
jg
loope
mov
and
stc
cli
mov
mov
adc
je
mov
loopne
adc
mov
cmp
fs
inc
sub
xor
mov
push
pop
lea
mov
mov
imul
movs
imul
arpl
loopne
outs
xor
or
jns
cmps
test
popf
dec
fisttp
shr
iret
add
xchg
add
arpl
xor
cmp
mov
pop
call
mov
sbb
cmp
mov
aas
jl
addr16
lods
cmp
push
into
inc
cmps
in
pop
fs
fcmovnbe
dec
mov
jbe
(bad)
cmp
call
daa
pop
cmp
shr
cmp
xor
cmp
adc
mov
(bad)
in
cs
imul
xchg
out
sbb
daa
call
xor
sbb
xor
pop
and
sbb
cmp
and
in
cmp
imul
mov
fcomp
push
ret
(bad)
iret
mov
cli
adc
in
lods
mov
push
push
shl
sbb
dec
and
xchg
inc
in
test
dec
sub
push
dec
fwait
std
push
push
icebp
push
pop
in
fsub
and
mov
rol
test
out
movs
call
pop
sti
es
fwait
stc
add
dec
inc
mov
loope
out
cmp
sub
jg
not
sub
adc
leave
lock
aam
adc
enter
xchg
xchg
push
sub
mov
push
mov
dec
cmp
test
mov
xchg
mov
pop
shl
xchg
daa
adc
lods
jbe
test
ror
xor
sbb
sub
jo
pop
rep
lods
xchg
sbb
sub
adc
gs
mov
cmp
add
xchg
add
inc
cs
nop
sbb
addr16
(bad)
cmp
and
and
retf
movs
dec
fsubr
and
mov
cmps
sub
lods
dec
ds
sbb
dec
dec
(bad)
pop
inc
add
mov
xchg
mov
sbb
lock
cmp
mov
sbb
dec
sbb
jnp
mov
adc
mov
jo
mov
pop
cdq
fs
push
mov
mov
fldcw
add
sbb
xor
mov
outs
(bad)
icebp
adc
jnp
repz
iret
mov
jo
inc
xchg
cs
mov
adc
fwait
push
jmp
sub
shl
adc
xor
cmp
pop
dec
jge
(bad)
cmp
in
push
jle
sub
mov
mov
jb
dec
cld
das
xchg
sbb
sbb
cmp
loop
jnp
mov
sar
or
and
dec
mov
aad
push
dec
jmp
push
aas
enter
fisub
out
push
cmps
aam
dec
aad
leave
xor
(bad)
lods
ror
ins
fldenv
fisttp
call
sbb
std
in
sub
dec
sti
aas
shr
jo
xchg
dec
imul
jmp
mov
xchg
and
xchg
je
mov
cmp
gs
cmp
fsubp
out
icebp
fisubr
sbb
mov
push
xor
hlt
inc
sar
pop
pushf
or
imul
or
std
loopne
cmps
pop
mov
mov
jbe
stos
xchg
inc
daa
aas
fucomip
mov
sbb
test
out
mov
and
nop
ds
lods
pop
das
jno
mov
adc
and
add
dec
pop
out
jns
lea
xor
push
das
pushf
add
dec
ins
sbb
push
mov
xor
nop
adc
sub
scas
push
fs
add
ss
ficomp
xchg
xchg
mov
inc
mov
stos
dec
add
pusha
mov
jmp
adc
dec
mov
(bad)
pop
and
les
into
add
into
(bad)
or
sar
rcr
pop
xor
scas
ins
int
jae
ret
xor
cld
inc
and
and
aam
pop
ret
mov
ror
xlat
jnp
xchg
pop
push
fs
out
push
xchg
jae
mov
add
sbb
fistp
push
mov
sbb
les
inc
cmp
jno
sub
xor
cmp
and
jnp
add
ins
adc
dec
aas
cmp
dec
scas
rcl
popf
dec
imul
ret
or
xor
fs
icebp
xor
push
stc
mov
jo
aam
mov
mov
mov
cli
bound
fistp
mov
jecxz
jl
lds
inc
sub
lock
(bad)
jge
leave
push
vpmaxsw
mov
popa
push
ja
cs
or
inc
(bad)
and
shl
pop
out
sbb
xchg
and
scas
call
int
or
out
test
push
jmp
sti
inc
xchg
inc
lock
out
xchg
push
and
jbe
int3
in
or
or
and
ss
cli
mov
mov
mov
dec
pop
push
push
pop
mov
or
add
sbb
push
add
add
pop
mov
and
aas
dec
mov
inc
xchg
xchg
cli
loopne
in
sbb
and
or
cli
fisub
aaa
shr
cs
xor
add
nop
fisttp
stos
jmp
cmp
lds
jb
fdiv
and
mov
and
xchg
mov
bndldx
rol
mov
scas
sbb
xor
mov
jecxz
xor
cmp
mov
repz
cmp
mov
(bad)
shr
push
xchg
xor
fs
fs
sbb
cmp
add
xor
mov
xchg
xchg
mov
pop
mov
retf
sub
mov
mov
sub
leave
sar
mov
mov
(bad)
inc
out
or
cmp
add
enter
xchg
push
(bad)
mov
or
and
clc
sub
setae
and
imul
movs
cmp
jbe
cwde
and
sti
into
iret
daa
push
pushf
enter
lahf
mov
ins
loopne
adc
and
sti
push
mov
cmp
push
xor
rcr
add
mov
lds
push
mov
jecxz
leave
adc
adc
mul
int
add
xor
and
push
inc
pushf
fisttp
cdq
lods
and
jp
movs
nop
sub
and
add
xlat
inc
in
fwait
std
mov
sbb
test
cmp
repnz
inc
adc
mov
mov
xor
xchg
icebp
sbb
loope
mov
fbstp
mov
sbb
and
stos
sbb
in
in
or
xchg
push
jae
xchg
test
lods
outs
xchg
sbb
sub
rcr
and
(bad)
jge
cmp
cmps
and
aad
stos
movs
mov
add
push
dec
lods
push
test
rcl
int
jg
test
inc
repz
stos
xchg
(bad)
add
in
push
adc
and
push
div
xchg
adc
sub
mov
inc
add
inc
mov
push
shl
stos
mov
imul
xchg
arpl
inc
xor
outs
cli
xor
mov
lods
pop
mov
mov
test
mov
pop
dec
test
ds
cli
outs
retf
xchg
test
cmp
add
xor
xchg
xor
xor
in
imul
mov
aas
mov
popf
shl
and
cmp
stos
cmp
lods
in
inc
pop
add
dec
aam
xor
sbb
or
dec
inc
or
push
mov
in
inc
shl
fst
cmp
push
rcr
fs
xchg
retf
cmps
ss
pop
xchg
pusha
mov
add
add
xor
jns
jno
add
inc
and
mov
cs
cmp
out
mov
or
sbb
and
aas
jge
pop
dec
sub
pop
fldenv
inc
jmp
ins
push
(bad)
js
dec
inc
adc
sub
sub
adc
div
xchg
loopne
mov
jl
adc
mov
retf
add
cdq
shl
push
clc
dec
ror
xor
mov
xchg
imul
adc
std
(bad)
loope
stc
cmp
inc
mov
(bad)
stos
push
iret
rol
xchg
inc
dec
imul
jle
mov
mov
shr
push
mov
mov
repz
mov
sar
adc
jb
aaa
arpl
or
pop
xlat
xlat
int3
cs
rol
outs
leave
cli
and
pushf
(bad)
pop
mov
out
or
jb
retf
add
retf
xchg
out
dec
lods
mov
jl
cmc
gs
test
lds
mov
or
xchg
sbb
leave
lods
leavew
add
pop
jbe
neg
or
(bad)
stc
cmp
stos
jmp
es
mov
mov
push
jne
xchg
and
jo
push
scas
sbb
(bad)
clc
inc
and
arpl
nop
sahf
mov
scas
fdivr
and
adc
add
jge
add
int3
mov
and
cmps
scas
jne
mov
nop
pop
test
pop
shr
xor
inc
jns
push
int
and
outs
push
inc
jo
scas
adc
test
add
add
inc
fnstcw
sub
and
pop
cmc
inc
aas
push
mov
hlt
(bad)
push
mov
pop
pop
outs
in
test
and
pop
ret
sub
leave
ret
adc
inc
retf
xchg
lods
int
(bad)
rcl
push
ins
cmp
xchg
push
rcr
adc
fmul
js
cwde
fs
sahf
push
nop
push
dec
in
cmps
repnz
idiv
push
in
xor
and
in
xlat
cmp
lods
pop
adc
jno
retf
arpl
scas
mov
sub
jns
jmp
jecxz
xchg
dec
adc
scas
mov
not
xchg
popa
jne
stos
mov
cld
sbb
pusha
jo
rcl
sbb
ss
enter
push
sar
movs
push
lds
sbb
or
jne
pushf
sbb
retf
add
imul
out
lds
adc
mov
sbb
mov
test
or
dec
fild
int3
cwde
pop
and
sahf
sub
or
mov
aas
push
add
adc
xor
rcl
inc
adc
popf
fcomp
jp
dec
mov
pop
or
xchg
inc
cwde
cmp
mov
iret
mov
pop
pop
pop
sbb
cmp
adc
lea
mov
int3
es
in
cmps
cdq
fsubr
mov
test
mov
cmp
add
lea
pop
xlat
jbe
(bad)
jmp
imul
push
stos
cld
retf
sub
mov
sbb
lea
popa
iret
dec
add
mov
dec
sbb
test
ret
rcl
stos
pop
stos
or
outs
add
jmp
fwait
mov
jmp
mov
imul
push
jnp
inc
std
push
xor
jnp
xor
xchg
mov
inc
or
adc
adc
popa
shl
pop
add
test
adc
sti
pop
je
adc
pop
into
mov
push
out
xchg
mov
adc
xchg
mov
mov
retf
iret
fbstp
das
sub
stos
(bad)
and
adc
jae
clc
in
mov
and
enter
mov
xchg
cmp
and
stos
les
cld
mov
push
mov
mov
add
(bad)
adc
scas
out
rol
icebp
push
fcmovu
or
adc
mov
fadd
adc
mov
dec
stos
pop
out
xchg
add
arpl
jle
pushf
outs
test
sub
cmp
aam
mov
or
pop
add
test
movs
xor
mov
cmc
jno
mov
ds
lock
fwait
xchg
xchg
or
scas
inc
aaa
data16
add
fbstp
imul
int
inc
data16
(bad)
out
clc
push
mov
dec
es
inc
jmp
sbb
(bad)
imul
(bad)
aas
or
out
outs
loop
pop
mov
push
and
fiadd
repnz
lahf
jmp
outs
out
pop
cmp
(bad)
mov
test
outs
pop
imul
mov
pop
std
lea
rol
ficom
js
jp
and
ret
js
ret
lods
or
cmc
sbb
push
shl
and
mov
xor
or
sahf
sbb
mov
jne
(bad)
and
ret
shr
fiadd
push
xchg
mov
dec
cmp
es
scas
mov
sub
sti
es
in
xchg
mov
repnz
div
jg
ins
mov
cmps
cmp
test
adc
in
fbstp
sub
push
fst
jge
fidiv
fcmovbe
jne
dec
loope
inc
in
dec
call
add
push
dec
sub
les
test
pop
movs
add
pop
enter
mov
aaa
mov
inc
hlt
mov
stc
adc
leave
imul
jg
push
add
and
in
test
in
push
xlat
pusha
sbb
mov
loope
sbb
sub
push
jmp
and
sbb
stos
std
dec
aaa
push
mov
test
int
sub
pop
ficom
jp
les
in
jle
stos
clc
pop
mov
xchg
sbb
and
in
push
test
jns
pop
jnp
cmp
ret
sub
mov
sub
mov
int
dec
xchg
in
mov
mov
jmp
sub
xchg
sub
sub
fild
jecxz
(bad)
jg
repz
inc
jbe
mov
imul
aad
xchg
je
jno
add
aaa
loope
push
add
icebp
sbb
or
mov
inc
(bad)
mov
call
mov
pop
mov
mov
xor
sbb
mov
fbld
pop
pop
lods
int3
sahf
fs
sbb
mov
inc
fst
and
jno
fdivr
cmc
in
ja
fs
jmp
inc
push
push
dec
push
mov
icebp
mov
mov
adc
dec
mov
pop
std
cmp
xor
add
fistp
ret
cld
sbb
or
es
movs
lea
mov
xchg
add
(bad)
lods
jbe
enter
push
or
xchg
push
dec
cli
cmp
bound
loop
sub
lods
cmp
xor
addr16
stos
and
not
popf
push
xor
cmp
inc
bound
test
retf
add
xlat
js
xchg
sub
pop
lock
dec
add
shl
mov
ins
test
add
test
clc
jae
sub
fwait
mov
pop
aad
pop
out
test
add
ror
popf
mov
dec
sub
pusha
xchg
stc
xchg
cmp
sbb
pop
(bad)
mov
loopne
ror
loope
repnz
inc
lods
jno
sbb
js
dec
push
lahf
jl
ins
inc
stos
push
push
fs
mov
ds
push
test
add
(bad)
mov
outs
cmp
sub
outs
and
jns
ss
pop
cwde
cwde
add
push
xor
jnp
adc
jl
std
jae
cmp
jmp
mov
bound
jb
pop
enter
fdiv
clc
push
in
sbb
sbb
in
sbb
cmp
out
sar
jb
mov
mov
sbb
retf
cdq
in
aas
popa
popa
pop
in
mov
fdivr
xor
aas
adc
or
mov
mov
adc
movs
pop
fisttp
daa
ret
ins
cwde
jg
jp
adc
or
sub
(bad)
jg
mov
ins
(bad)
sbb
jmp
lea
push
push
imul
in
outs
inc
adc
mov
hlt
out
mov
daa
and
mov
sbb
test
cmp
jnp
clc
out
dec
out
fnstenv
lods
sub
gs
(bad)
imul
inc
nop
test
sub
ins
xor
mov
push
jne
cli
pop
out
xchg
sub
mov
jg
sbb
or
lods
jp
hlt
aaa
push
xor
movs
int
(bad)
push
movs
or
mov
mov
jmp
inc
icebp
xlat
adc
pop
hlt
push
inc
push
push
(bad)
sub
js
cmp
and
add
jb
inc
lods
inc
dec
cmp
xchg
adc
add
mov
clc
fld
call
pop
jb
ror
or
pusha
adc
icebp
dec
rsm
push
cs
cmp
(bad)
and
add
or
aaa
call
hlt
ror
loope
cmp
iret
sub
mov
inc
push
xor
pop
push
lahf
test
xchg
pushf
push
cmp
loopne
mov
mov
(bad)
out
push
arpl
jge
(bad)
mov
jmp
fwait
out
inc
ret
add
call
add
jle
pop
jmp
cmp
imul
pop
inc
loopne
loope
int
mov
loop
xor
add
mov
add
xchg
cmp
adc
mov
into
xchg
call
mov
lods
fbld
pop
call
aam
jmp
mov
movs
out
and
dec
nop
sub
daa
retf
xchg
and
aad
aas
pmulhuw
jb
adc
outs
xchg
add
test
sub
xchg
rcl
push
push
push
fcomp
mov
cmp
clc
pusha
sub
(bad)
adc
push
push
xchg
and
or
push
mov
push
inc
sub
or
int3
dec
into
sbb
popa
add
int
ror
xchg
adc
bound
xchg
sub
test
pop
push
aad
test
adc
addr16
icebp
fxch
or
aaa
jle
or
into
test
push
cld
jo
scas
fldcw
(bad)
int
add
and
pop
cs
xor
lea
pushf
lahf
pop
mov
fsubr
pop
cmp
mov
pop
out
push
xchg
(bad)
jmp
adc
jle
hlt
xchg
add
popf
inc
les
popa
nop
jmp
cmps
xchg
stos
xor
sti
pop
xchg
sub
retf
loop
fidiv
jae
enter
dec
pop
test
test
or
push
xor
mov
dec
sub
stos
mov
jno
cli
pop
push
sahf
js
mov
int
xchg
and
cmp
mov
jmp
jo
sub
push
push
std
add
cld
loopne
fsub
xchg
(bad)
popa
or
push
mov
pop
pop
cdq
xor
movs
pop
test
aam
jge
js
fistp
test
std
pusha
add
cmp
and
add
inc
out
or
jge
sub
cmp
(bad)
sbb
push
and
loope
cmp
out
mov
inc
mov
outs
xor
sub
repz
cli
jnp
jnp
sub
adc
(bad)
gs
lock
mov
adc
loope
mov
or
sub
pop
push
dec
cmp
popa
out
(bad)
int
cmps
mov
or
xlat
xchg
mov
scas
ror
and
hlt
fstp
jns
xor
mov
push
jmp
jbe
cmps
xchg
fsubr
je
popa
js
xor
and
(bad)
sahf
aad
mov
scas
hlt
cmp
nop
xchg
sbb
je
movs
pop
rcr
and
jns
(bad)
ins
xlat
mov
xchg
xor
inc
xchg
in
and
movs
pop
jno
outs
retf
pushf
jl
or
mov
retf
fidiv
lea
iret
jbe
dec
ret
loope
mov
pop
nop
enter
call
in
mov
xor
jg
add
mov
hlt
xchg
push
jne
fs
mov
sbb
jp
popf
xchg
loope
mov
xchg
mov
mov
mov
repnz
add
fadd
mov
js
and
fbld
shr
or
bound
test
mov
jl
popf
test
adc
inc
dec
mov
mov
sub
icebp
jmp
push
dec
inc
fsub
lahf
adc
mov
inc
movs
adc
push
dec
lea
and
and
call
loope
shl
xchg
mov
dec
sub
movs
sub
mov
jge
(bad)
sub
int
cmp
push
push
dec
imul
les
popa
scas
dec
lock
add
push
push
xor
outs
sar
lock
aam
mov
test
and
mov
into
daa
mov
add
ins
in
xor
jb
fsubr
das
inc
nop
lahf
cmc
pop
jno
jb
jge
sub
lahf
cmp
data16
ins
mov
adc
fwait
test
ins
push
shl
test
arpl
xchg
cmp
sahf
test
sbb
(bad)
imul
ds
dec
test
enter
stos
sub
inc
push
xchg
lock
std
fs
sahf
sti
xor
jp
fwait
sub
jnp
mov
or
add
pop
scas
inc
lods
out
pop
jmp
fdiv
cmp
test
mov
lahf
mov
mov
movs
gs
int
fsubr
dec
inc
mov
imul
pushf
push
mov
adc
mov
inc
xchg
mov
mov
pop
aaa
pop
or
pop
jo
mov
test
mov
cmc
mov
push
retf
jae
shr
out
push
jnp
mov
in
sbb
xchg
fnsave
iret
xchg
stos
push
inc
mov
push
or
ins
xor
jmp
sar
jmp
jnp
pop
or
aam
hlt
and
aaa
jnp
stc
xchg
sub
sahf
xchg
shr
std
push
push
ror
ror
stos
mov
and
js
mov
imul
pusha
xor
je
jmp
repz
jg
xchg
cmps
and
fild
fcmovnbe
les
test
pop
dec
pop
ror
push
sbb
imul
sbb
push
test
cs
fistp
test
lods
pop
adc
pop
sahf
jne
mov
mov
sbb
jg
es
mov
adc
ds
inc
jb
add
fst
push
and
inc
and
cwde
ss
xchg
or
out
popf
mov
fst
sbb
rcl
adc
sub
mov
(bad)
xchg
sbb
and
push
add
popf
fistp
xor
popa
and
(bad)
sti
lock
mov
repz
push
dec
(bad)
loopne
xchg
bnd
ret
jne
pop
std
inc
jl
imul
imul
jmp
test
popf
mov
push
nop
(bad)
pop
pushf
rcr
or
pop
stos
xor
jae
inc
test
out
cmp
jmp
outs
pop
or
fcom
add
sbb
xchg
mov
jnp
cmps
mov
cmp
scas
push
fcmove
shl
aam
sbb
xlat
movs
and
mov
test
sub
pop
fwait
and
fwait
xor
shl
jecxz
inc
push
mov
dec
fadd
sbb
dec
jae
cwde
pop
movs
cmps
shl
xor
in
ret
and
push
xchg
sbb
xchg
add
jo
not
pop
sub
dec
cmp
mov
adc
jb
jmp
in
popf
inc
xor
mov
fstp
jo
dec
sub
inc
xchg
(bad)
and
in
sub
cli
clc
mov
popf
or
std
jmp
fiadd
cmp
inc
jmp
or
pop
jle
jne
or
push
cmp
dec
sub
rol
add
pop
rol
mov
int
mov
lods
(bad)
mov
jbe
inc
or
das
arpl
icebp
loopne
mov
mov
retf
aad
adc
add
lahf
cmps
outs
sbb
outs
pop
loope
int
mov
(bad)
xchg
mov
pop
inc
cld
pop
add
push
idiv
sbb
cmps
loop
or
xchg
jno
cmc
repz
into
and
jecxz
add
mov
out
dec
pop
scas
add
dec
call
enter
fcom
mov
mov
data16
push
je
or
aad
add
jl
mov
nop
and
xchg
mov
mov
daa
loopne
fwait
test
cmp
push
hlt
jge
adc
jle
mov
mov
fwait
xchg
imul
outs
mov
xchg
mov
je
or
sti
into
sbb
jmp
xchg
test
or
(bad)
lods
ss
iret
stc
push
mov
xor
inc
mov
jbe
pusha
sar
xchg
dec
test
call
test
xor
pop
or
cwde
push
xchg
adc
push
pushf
or
aas
add
dec
mov
push
sub
push
(bad)
push
dec
jl
stos
xchg
add
jns
pop
push
sbb
out
aaa
aad
sahf
dec
popa
sub
ins
je
fisubr
in
lea
addr16
add
mov
xchg
mov
cmp
mov
fcomp
sbb
popa
mov
sub
fstp
retf
pop
fwait
icebp
sbb
mov
int
stos
iret
scas
push
mov
mov
dec
dec
aas
cmp
push
jmp
in
push
shl
jns
(bad)
clc
fld
maxps
sub
cmp
retf
xchg
inc
jbe
sar
jae
mov
jmp
or
cmp
test
or
xchg
popa
xchg
or
je
add
jo
mov
xchg
dec
and
jns
pusha
test
mov
cld
sub
jo
pusha
cmp
pop
repnz
and
xor
and
push
pop
mov
js
push
xor
mov
(bad)
push
test
test
add
mov
mov
test
fdiv
sbb
scas
fwait
push
int
xlat
fwait
pop
or
and
fs
cmp
sbb
mov
in
xor
imul
sbb
mov
mov
inc
mov
inc
in
out
popf
xor
stos
or
sub
nop
mov
sahf
test
push
push
mov
jne
shl
pusha
inc
scas
push
sbb
and
mov
pop
or
push
mov
retf
clc
cs
adc
shl
repnz
sbb
dec
xor
movs
iret
push
shl
inc
aas
shl
imul
pusha
out
js
gs
jp
add
mov
sbb
ins
adc
out
xchg
xor
add
rol
(bad)
and
push
or
ror
lea
imul
ret
xor
mov
loope
aaa
cmp
imul
sub
idiv
div
adc
das
inc
std
and
dec
retf
mov
push
mov
mov
movs
mov
and
xor
push
adc
xchg
jl
adc
lods
inc
fdivr
shr
cdq
xor
dec
popa
mov
es
gs
pop
das
mov
push
pop
mov
sub
push
fwait
push
out
ins
push
adc
inc
dec
test
and
jmp
mov
ror
out
add
adc
sbb
xor
pop
inc
stos
sub
xchg
push
pop
mov
sub
aas
jns
std
ror
or
push
pop
add
jge
xchg
pop
push
lea
mov
aad
fcom
add
jmp
push
cmp
out
mov
jg
sbb
xchg
xor
dec
mov
loopne
mov
mov
sbb
mov
xor
aam
sub
add
cmp
jbe
sub
jbe
and
test
cli
scas
push
mov
push
jg
and
adc
cmps
mov
test
call
js
add
stos
xchg
and
mov
sbb
mov
popa
cwde
or
cs
inc
mov
shl
jl
or
repz
sahf
mov
dec
mov
loope
xchg
push
rcr
test
push
iret
xor
mov
aas
popf
imul
sar
ins
pushf
stos
inc
xchg
add
pusha
push
mov
cdq
pop
ficom
xor
je
fwait
push
adc
call
scas
inc
jmp
les
out
adc
in
cwde
lds
dec
or
push
shl
enter
movs
cdq
and
mov
cmp
pushf
xor
push
fnstcw
lds
mov
int
jae
pop
mov
imul
or
or
adc
mov
test
jno
test
push
imul
cmp
and
aaa
push
lock
pop
xchg
xor
sbb
cmp
aaa
dec
fist
dec
inc
inc
outs
ss
jne
test
adc
sub
and
push
bound
icebp
pmaxub
sub
pop
(bad)
xor
pop
sbb
(bad)
adc
std
test
arpl
pop
pop
fcom
jg
imul
push
and
cli
pop
and
in
sar
movs
(bad)
pop
xor
or
add
int3
mov
jecxz
cmp
and
mov
pusha
fs
xor
xchg
jne
icebp
add
cld
movs
xor
stc
movs
jo
(bad)
int3
ja
in
stc
jle
es
aam
pop
jg
xor
push
dec
jmp
or
xchg
repnz
fdivr
cwde
add
xchg
fwait
pop
sbb
popf
lods
mov
mov
push
push
(bad)
bnd
fild
pop
push
or
jge
add
scas
fs
ins
dec
lock
sub
loop
std
ret
inc
mov
in
push
sub
and
repnz
adc
out
xchg
ds
mov
repz
push
fmul
daa
cli
(bad)
aad
imul
movs
jnp
rcl
popf
pop
cld
jp
push
fdiv
inc
sbb
xchg
sti
in
retf
mov
(bad)
sti
test
movs
aaa
mov
mov
outs
ja
mov
pop
stos
inc
loopne
in
cmp
(bad)
jae
cmp
aad
(bad)
cmp
or
cmp
in
call
and
or
pusha
in
ret
test
shl
and
out
std
jge
adc
retf
or
lock
imul
bnd
cli
cmp
scas
mov
and
add
mov
(bad)
aas
and
sbb
in
and
in
cmp
das
fdivr
rcr
push
push
rcl
inc
mov
frstor
and
adc
mov
mov
sar
movs
aam
sub
pop
out
sub
ret
(bad)
mov
adc
xor
cmp
sbb
mov
push
stc
retf
inc
mov
xor
mov
fld
cmp
inc
outs
ss
add
dec
dec
cmp
fild
and
mov
neg
jp
inc
pop
out
jmp
add
add
fwait
push
dec
mov
stos
movs
push
(bad)
(bad)
cmp
xlat
mov
lahf
adc
fs
sub
dec
push
inc
aaa
xchg
or
ficomp
imul
sti
push
cmp
test
es
mov
xor
xchg
pop
sahf
pop
dec
clc
mov
sbb
mov
add
xchg
retf
cdq
cmp
xchg
pop
mov
ja
push
stc
mov
retf
xlat
mov
aaa
jns
cmp
out
call
add
jo
test
mov
push
mov
nop
in
inc
loopne
or
shl
test
push
or
mov
dec
xchg
cmp
je
push
pop
xchg
mov
movs
pop
aaa
(bad)
out
add
cmps
and
pop
sar
cmps
lea
xchg
xchg
jns
xor
pop
ret
mov
scas
cmp
jno
sbb
lock
cmp
mov
inc
inc
aad
sub
mov
adc
int3
iret
in
into
gs
push
jns
pop
daa
cmovg
xchg
shl
fisub
pushf
popf
data16
ret
and
sub
pop
inc
xchg
aas
mov
jl
push
dec
das
mov
and
xor
sub
ret
sub
(bad)
and
movs
sahf
or
adc
iret
and
adc
dec
aaa
jle
pop
cmp
sub
mov
mov
jmp
loop
jbe
movs
sub
or
in
lock
push
(bad)
mov
outs
push
or
and
pop
popa
movs
push
cld
add
xor
jnp
jno
sub
cmps
popa
inc
stc
cld
(bad)
fs
dec
cdq
jg
pusha
ins
fiadd
and
ds
iret
push
pop
(bad)
sti
cmp
loopne
mov
lods
push
xchg
fs
scas
mov
aad
int3
stos
mov
sbb
xchg
ret
pop
add
jb
mov
mov
mov
pop
lea
aam
dec
sub
cmp
ja
iret
sbb
xchg
retf
jns
in
call
mov
jbe
inc
dec
mov
inc
fidiv
adc
cdq
cmp
jne
stos
xor
rcl
hlt
punpckldq
(bad)
sbb
mov
mov
hlt
cmp
jmp
cmp
mov
in
out
cli
xor
ret
loopne
adc
sbb
(bad)
xor
(bad)
cdq
aam
jbe
imul
xchg
adc
or
or
(bad)
scas
cmc
movs
pop
gs
jbe
push
sbb
addr16
pop
push
xchg
dec
or
iret
fild
sbb
cmp
jl
push
call
xchg
cmp
jl
lds
jnp
fnstenv
leave
inc
xchg
test
or
movs
dec
fdivrp
popa
mov
lods
xor
cmp
mov
and
retf
iret
xchg
pop
retf
loop
dec
lds
inc
pop
mov
inc
ins
mov
mov
out
cmps
pop
xor
cmp
(bad)
popa
push
add
sub
push
retf
popf
mov
inc
call
jo
inc
jns
ins
cld
add
dec
fcom
xchg
icebp
sbb
dec
inc
dec
inc
mov
scas
adc
pop
jae
mov
jg
sub
pop
inc
and
mov
inc
lods
mov
sub
ds
in
push
bnd
push
scas
push
dec
push
cmp
pop
xchg
mov
(bad)
inc
dec
cli
or
xchg
mov
nop
add
and
aas
mov
or
ins
push
or
xor
pop
add
fs
pop
mov
fmul
pop
jge
(bad)
clc
xor
outs
fwait
add
inc
xchg
outs
in
push
shl
push
add
movs
bound
imul
xor
dec
xor
rol
push
outs
icebp
sti
pusha
sub
mov
pusha
sub
push
outs
sub
fwait
sub
xchg
pop
xchg
mov
adc
cmp
sahf
clc
lods
mov
test
ss
dec
xor
pop
jmp
loope
jb
call
enter
stos
dec
fidivr
(bad)
inc
enter
push
xor
cwde
inc
nop
xor
or
dec
inc
addr16
aam
nop
add
enter
cmp
not
push
leave
cwde
xor
add
mov
push
repnz
xor
sub
pop
mov
pop
add
mov
stos
enter
idiv
cvtdq2ps
and
jno
outs
out
js
add
add
and
sub
mov
push
push
add
sbb
sub
pop
xor
cld
pop
adc
sbb
dec
xchg
loop
stc
(bad)
mov
add
inc
jno
or
or
mov
adc
fidivr
cli
push
(bad)
dec
rol
mov
in
ficom
and
xchg
mov
mov
mov
sbb
repnz
retf
ins
cs
pop
shl
and
scas
pop
sbb
push
add
mov
dec
xchg
cmp
imul
sbb
push
stos
sub
push
pop
add
sub
hlt
cld
sbb
and
aam
ror
sub
ror
jmp
in
xchg
mov
aaa
adc
arpl
mov
xchg
ret
pushf
lods
fs
ret
ficom
push
sahf
xor
push
mov
jecxz
jbe
neg
sbb
fldenv
inc
dec
(bad)
out
(bad)
mov
js
aad
jl
inc
out
hlt
fdiv
(bad)
sub
(bad)
(bad)
ins
rol
sub
call
sbb
cmp
or
mov
or
mov
(bad)
pop
jo
or
jbe
stc
xchg
hlt
pop
cld
test
and
sti
mov
cmp
inc
xor
imul
hlt
in
lds
xor
mov
xor
fiadd
sub
xor
cs
(bad)
adc
shl
pop
adc
sbb
cmps
inc
clc
and
loop
in
std
mov
int3
pop
ror
jge
mov
cmc
jae
out
push
icebp
add
leave
add
mov
loop
xchg
push
and
push
nop
out
lds
mov
or
aas
pop
daa
into
fld
inc
adc
xor
mov
sar
movs
movs
jnp
sub
mov
push
inc
in
imul
mov
js
movs
mov
mov
mov
add
(bad)
jge
fcom
icebp
xor
pushf
or
jne
(bad)
loop
out
jmp
push
add
pop
fs
xor
xor
pop
stos
xor
icebp
or
clc
sub
mov
pop
call
pop
cmp
jno
xor
pop
sbb
jmp
push
out
cmp
aad
inc
fneni(8087
sub
outs
jnp
jo
pop
push
aas
mov
mov
and
cld
xor
std
in
popa
enter
hlt
into
cdq
popf
imul
pop
popf
lds
in
(bad)
adc
pop
les
or
adc
xor
movs
out
cmp
jae
push
lods
xchg
shl
dec
in
clc
inc
fnstcw
shl
push
dec
pop
aas
xlat
fisttp
xchg
ret
pushf
and
jae
aaa
cmp
mov
mov
sar
retf
jg
sub
cmp
sar
fild
ins
pop
jl
js
or
pusha
jno
cmc
dec
das
mov
(bad)
push
jecxz
add
jno
dec
xor
lea
sti
adc
cmps
ss
outs
and
add
movs
sbb
in
mov
cmp
test
enter
add
mov
test
sub
jle
xchg
mov
xchg
pop
(bad)
cmp
and
es
pop
rcr
cmp
or
sahf
push
xor
aam
dec
pop
repnz
mov
mov
leave
dec
bound
dec
je
dec
mov
sbb
call
cs
repz
push
lock
les
pop
sbb
adc
xchg
stc
mov
lds
mov
popa
xor
scas
cld
add
push
daa
jbe
sbb
pop
and
lock
in
iret
call
adc
in
gs
aas
idiv
pop
ficomp
mov
push
rcr
fld
ret
jp
imul
arpl
cmp
mov
in
into
test
paddsb
nop
shr
pop
loopne
mov
addr16
iret
in
movs
dec
jae
jmp
sbb
test
adc
dec
leave
hlt
shr
mov
mov
xor
pop
adc
pushf
fisttp
or
jns
or
xchg
sbb
push
lods
cmp
pop
cmp
clc
mov
jns
ror
ja
dec
inc
pop
mov
addr16
push
mov
mov
pop
shr
dec
out
sbb
dec
popa
or
cmps
cmp
pop
rol
lahf
dec
aam
add
inc
(bad)
aad
jb
bound
popf
dec
adc
les
sar
sub
dec
xchg
imul
js
cmps
loope
jns
mov
je
jecxz
mov
pop
sar
sub
cmp
push
push
rcr
push
shl
push
adc
pop
fs
xor
scas
pushf
out
push
cmps
stos
shl
or
sub
xor
imul
lock
xor
push
xchg
push
inc
enter
sub
in
mov
add
push
sbb
mov
and
xchg
les
in
push
imul
add
movs
xchg
sub
or
pop
lods
and
cs
mov
leave
jb
ja
loop
adc
pop
rcl
dec
test
lods
inc
outs
lds
xchg
arpl
imul
js
mov
push
jae
pusha
push
popf
add
sbb
lods
and
xchg
sub
or
fidivr
xchg
sub
fucomp
arpl
mov
out
and
mov
jmp
ja
pop
xor
push
fwait
into
aad
(bad)
lahf
std
pusha
sub
add
push
jo
(bad)
in
pop
nop
outs
jae
dec
in
pop
mov
pop
(bad)
sar
xor
and
iret
pop
fisubr
pop
jno
out
sbb
add
add
bound
mov
imul
stc
aaa
ins
sub
adc
add
int3
cmp
sbb
sar
cmp
or
(bad)
sbb
scas
test
mov
in
inc
mov
add
and
iret
xor
push
push
sbb
add
pop
jo
mov
dec
sub
imul
enter
fldenv
sub
dec
dec
xchg
xchg
popa
mov
inc
dec
xlat
mov
outs
cmp
jae
cmc
pop
test
cmp
push
rcr
or
mov
test
xor
pop
dec
js
add
xchg
cmp
aam
or
mov
sub
cmp
int3
sbb
repnz
add
fwait
cmp
adc
shl
(bad)
movsx
pop
int3
fstp
add
dec
inc
leave
xchg
sar
(bad)
imul
xor
in
call
into
shl
cmps
push
mov
das
movs
maxps
jae
jmp
sub
add
dec
neg
pop
sahf
inc
mov
xchg
xchg
jecxz
jge
pop
(bad)
(bad)
out
lahf
fwait
xlat
push
ret
fdivr
int3
imul
mov
outs
mov
das
push
into
loop
inc
jmp
inc
sub
leave
xor
and
push
jp
mov
aad
icebp
adc
ret
repz
nop
popf
aaa
jne
pop
cmps
outs
(bad)
in
inc
mov
sahf
adc
adc
cmps
gs
sbb
pop
lods
push
movs
push
push
jne
fcmove
fstp
mov
scas
pop
scas
ja
bound
sbb
push
inc
adc
dec
sub
add
sbb
fwait
aam
in
sbb
cmps
cmp
dec
jge
sub
sbb
fcom
aad
push
test
arpl
inc
xor
dec
pop
loopne
iret
jne
fnsave
jns
push
lods
jo
dec
rcr
mov
fist
xor
push
push
and
mov
aam
jns
imul
aad
jmp
sahf
jmp
add
dec
cmp
jge
test
jns
mov
jmp
xor
mov
dec
ins
dec
movs
sti
pushf
or
movs
lock
add
cmp
adc
imul
push
mov
fst
clc
ja
(bad)
inc
push
iret
pop
test
pop
mov
gs
push
test
out
arpl
pop
or
mov
and
mov
jge
pushf
or
adc
xchg
scas
xor
loope
pop
jge
xchg
rol
adc
sahf
sbb
xchg
mov
sbb
mov
pop
pop
out
rcl
sub
pop
sub
stos
dec
xchg
or
push
inc
nop
out
pushf
xchg
sti
dec
mov
sbb
fild
xchg
jo
es
mov
(bad)
(bad)
push
inc
rcl
mov
ss
not
cmc
test
sbb
test
sbb
sti
hlt
jl
inc
pusha
dec
jno
mov
push
push
xchg
lods
jbe
mov
int
pop
mov
pop
adc
lods
inc
fwait
pusha
cdq
pop
stc
xor
jecxz
xor
scas
mov
test
cmp
jae
xchg
nop
pop
mov
scas
cli
(bad)
in
dec
daa
push
cdq
cld
fbstp
or
sbb
fwait
jns
scas
retf
ret
inc
pusha
popa
pop
shr
test
retf
fimul
xchg
or
aas
lods
or
pusha
cs
ret
cli
rcl
lock
inc
fld
cwde
inc
mov
aam
sub
mov
cmp
or
shl
pop
dec
cmps
push
int
pop
aaa
aas
icebp
inc
mov
pop
add
outs
pop
mov
cmp
cs
inc
je
dec
and
jge
jae
add
dec
inc
sbb
lock
sbb
call
repnz
cld
retf
pop
push
xchg
jecxz
repnz
(bad)
stos
push
fbstp
push
jp
in
lea
jmp
mov
enter
sti
sbb
sbb
pop
inc
cmc
add
lods
add
mov
cmc
or
cmp
int
pop
push
pop
mov
push
dec
call
lods
push
inc
cmp
mov
xchg
dec
inc
sub
pop
jbe
jae
fnsave
or
add
dec
cmp
mov
ret
pushf
cli
mov
inc
test
jnp
push
jns
mov
popa
out
jbe
ss
mov
lahf
call
cmp
mov
scas
fidiv
cmp
jmp
pop
into
gs
pop
in
inc
into
push
or
mov
add
push
popa
int3
aam
or
stc
mov
or
push
(bad)
icebp
xchg
or
call
lahf
(bad)
jns
test
sbb
in
jmp
ret
push
jnp
out
xlat
jae
jge
add
jecxz
sbb
jle
stos
or
lahf
inc
dec
push
test
les
lods
sub
jo
adc
mov
(bad)
call
jmp
popf
pop
pop
sub
stos
jns
cli
xchg
push
jmp
or
sbb
daa
fisubr
xchg
mov
nop
add
push
scas
stos
dec
xchg
outs
sbb
loope
inc
mov
mov
mov
xor
in
test
mov
add
lods
mov
imul
lea
mov
sbb
dec
pop
xchg
or
popf
mov
mov
cmp
sbb
mov
inc
aad
ins
push
aad
inc
call
cmps
and
data16
mov
leave
cwde
ds
rcl
xchg
push
cmp
mov
bound
mov
mov
push
adc
jmp
add
cmps
fist
mov
mov
xchg
fwait
cmp
das
jno
adc
test
mov
sub
cmp
sar
js
neg
sar
mov
repz
in
daa
cli
xor
push
inc
jo
pushf
push
add
xor
pop
repnz
jae
sbb
sbb
push
adc
jg
leave
jl
test
adc
sub
or
std
retf
jns
jns
or
add
push
lahf
in
sahf
loopne
ins
push
pop
int
xlat
cmp
cmp
lods
lods
rcl
fld
aad
fs
dec
std
gs
fcomip
inc
ja
and
add
push
jmp
or
xor
mov
xor
cmp
aaa
pop
sub
std
cwde
push
enter
test
fwait
lahf
push
mov
xchg
xchg
push
jns
pop
popf
jle
lds
xchg
inc
shr
fcmovnu
rcl
call
mov
sub
int
or
cmp
mov
lods
pop
adc
stos
pop
xchg
jae
adc
add
pop
sub
(bad)
mov
add
xchg
push
sbb
xchg
add
push
sahf
xchg
pop
mov
push
daa
fiadd
cmps
lock
dec
add
loopne
sbb
imul
leave
mov
mov
lock
sbb
test
and
xor
lds
push
pop
sahf
ss
dec
mov
jbe
push
aam
or
pop
push
jno
push
pop
inc
dec
and
inc
jns
xchg
inc
aam
and
mov
lahf
sub
adc
dec
dec
out
push
adc
retf
jo
popf
lock
jmp
sub
(bad)
iret
jp
pushf
(bad)
stc
sar
adc
xor
imul
ficom
gs
out
leave
call
ror
lea
xor
xlat
mov
loop
ins
rcr
and
mov
leave
jmp
outs
(bad)
aad
xchg
rol
add
adc
ss
stc
out
mov
and
dec
adc
inc
jl
push
or
inc
mov
dec
sub
push
in
dec
mov
push
inc
es
or
popf
mov
rol
and
dec
or
outs
push
pop
pop
cmps
jne
lods
lahf
adc
stos
dec
sti
idiv
imul
and
stos
out
mov
cmp
lock
sub
nop
cmp
pop
add
sbb
aad
mov
js
lds
pop
(bad)
outs
add
mov
out
xchg
and
mov
fmulp
jg
test
sub
dec
gs
fidiv
test
dec
dec
bound
mov
mov
pop
ds
fwait
int
xor
popf
mov
rcr
add
push
push
cdq
test
and
pop
mov
fimul
lds
xor
nop
rcr
js
neg
push
pop
sar
sbb
or
sub
(bad)
fstp
jp
gs
push
jecxz
shl
fld
and
inc
push
cmp
or
inc
sub
push
test
mov
mov
icebp
adc
mov
cmps
inc
ror
bnd
jne
les
and
inc
jb
sub
xor
dec
sbb
hlt
lods
pop
scas
ret
std
pop
imul
jecxz
scas
imul
sbb
jne
and
arpl
jns
pop
add
lahf
fild
out
add
sub
call
mov
xor
adc
ror
sub
dec
xlat
dec
xchg
xor
mov
cli
sub
or
pop
inc
jmp
idiv
std
and
nop
stc
jne
lods
push
rcr
test
bound
js
dec
hlt
inc
dec
mov
out
(bad)
repz
ins
ja
fadd
adc
mov
inc
int3
fwait
jp
or
cld
inc
dec
jg
outs
in
sti
sahf
mov
mov
jle
xor
mov
mov
leave
push
stos
xchg
adc
adc
dec
add
outs
pop
push
pusha
cmps
jne
fcom
mov
retf
arpl
ss
ds
add
pop
jle
in
jg
movs
and
shl
xchg
lahf
lods
inc
pop
cmp
lods
icebp
or
adc
ss
les
and
or
dec
adc
pop
(bad)
mov
loope
in
dec
nop
add
jo
pop
nop
arpl
ds
jno
mov
fadd
lahf
mov
mov
adc
fs
xchg
mov
dec
push
sbb
iret
aaa
or
cli
cmp
aam
mov
dec
int3
mov
sub
stc
jmp
movs
mov
stos
jne
adc
data16
cmc
jno
repz
xchg
add
jmp
(bad)
cmc
or
cmp
fs
jecxz
call
mov
data16
(bad)
fst
push
int3
loope
jo
jmp
cmp
js
pop
sbb
sub
xlat
(bad)
out
retf
mov
mov
fnstcw
retf
out
mov
cmp
mov
rcl
out
popa
inc
retf
and
xchg
int3
fmul
mov
add
push
mov
add
mov
fnsave
push
fist
add
and
fldenv
push
jmp
xor
out
xchg
test
jg
mov
popa
loope
lea
add
jae
ins
aam
inc
sub
dec
iret
icebp
ror
cmps
cmp
fucomp
add
adc
(bad)
jns
cmp
push
xrelease
pop
inc
add
xor
xchg
pop
test
jmp
jecxz
inc
cmp
sti
test
adc
lods
movs
jp
add
jg
sar
enter
std
ret
mov
aam
lods
shr
clc
inc
xchg
jmp
test
(bad)
cmp
and
ins
or
dec
sbb
add
ja
sar
pop
mov
aaa
sbb
mov
hlt
cli
push
inc
xor
jmp
in
jmp
push
mov
hlt
(bad)
fistp
cmps
add
inc
aas
cld
inc
cwde
jp
inc
mov
or
clc
pop
mov
pop
jmp
enter
ds
or
jmp
cmp
call
fscale
leave
lods
jp
push
sub
ds
ja
fisubr
pop
adc
lock
pop
lds
or
dec
ja
fwait
push
not
popa
pop
pop
aad
cmps
jnp
rcr
aad
imul
std
add
mov
scas
out
sub
ins
ss
scas
xchg
je
int3
daa
pop
stc
fucomi
mov
xchg
lods
mov
js
clc
je
outs
nop
push
xchg
test
mov
retf
sbb
loopne
adc
outs
dec
mov
(bad)
xchg
push
pop
sub
push
es
sub
sub
mov
test
imul
jbe
sub
cmps
dec
jmp
fxch
or
inc
or
cmp
stos
jmp
dec
mov
fnstcw
jecxz
fdivr
xor
int
xlat
shl
xor
jecxz
or
sub
outs
push
jp
test
pusha
sbb
int3
adc
int
outs
push
or
hlt
outs
jecxz
push
bnd
adc
scas
ins
stos
push
sbb
xlat
lea
pop
mov
out
das
push
or
cwde
inc
call
pop
push
call
clc
(bad)
outs
mov
daa
and
ret
push
ja
sbb
or
retf
ret
sub
xor
cwde
and
shr
jecxz
mov
add
add
test
inc
out
mov
nop
mov
fst
push
cs
shr
fist
(bad)
mov
inc
mov
ret
daa
(bad)
jmp
sub
clc
mov
xchg
cmp
(bad)
sbb
mov
add
jne
test
hlt
jmp
push
and
push
not
das
(bad)
shl
nop
nop
inc
pop
jp
loopne
cdq
fwait
adc
into
mov
push
call
cwde
cmp
fidiv
dec
add
cmp
and
hlt
mov
in
xchg
xor
out
and
inc
cmc
(bad)
pop
push
adc
movs
push
popa
inc
rol
inc
jno
out
xor
push
mov
inc
add
outs
ret
xchg
add
dec
xchg
adc
das
add
mov
push
int3
sbb
test
sti
sbb
cmp
mov
mov
neg
and
sub
mov
adc
shl
push
test
adc
push
mov
int3
mov
jbe
mov
inc
inc
push
add
in
ins
sbb
fcom
(bad)
test
and
(bad)
out
in
shl
aas
stc
mov
fsub
xlat
mov
cmc
dec
xchg
jg
fcom
add
retf
add
mov
sti
and
loop
and
ins
jl
jecxz
retf
and
or
cmc
jg
cmc
outs
fst
or
mov
dec
pop
add
sbb
ins
fsubr
adc
(bad)
pop
xchg
nop
ins
pop
call
gs
das
div
xor
aam
and
jp
xchg
je
loop
fwait
inc
sub
inc
lock
out
mov
mov
and
cmp
push
pop
lea
cmps
retf
inc
xor
inc
adc
lods
inc
dec
mov
mov
xchg
rol
push
test
mov
mov
repz
xchg
rcr
mov
(bad)
repz
push
adc
out
mov
inc
xor
pop
cmps
push
xchg
test
xchg
call
dec
and
push
xchg
(bad)
loopne
mov
lods
je
xchg
pop
xchg
popa
push
adc
sti
(bad)
inc
call
push
int3
call
and
imul
cmps
mov
jmp
xchg
test
sbb
mov
mov
cmp
pop
pusha
mov
bnd
dec
sbb
ret
pusha
add
or
mov
outs
sub
ret
test
movs
xlat
int
dec
inc
mov
out
push
fld
sbb
sbb
pop
jne
clc
test
ja
jmp
push
pop
jnp
mov
leave
rol
call
jnp
int
inc
adc
adc
jge
mov
test
xchg
fld
mov
outs
inc
xor
(bad)
jb
aad
mov
push
movs
push
repnz
cmps
add
sbb
(bad)
outs
push
and
ret
xor
mov
ins
pop
pop
stos
push
test
mov
fcom
inc
or
idiv
xor
into
dec
xor
rcr
push
mov
mov
(bad)
popf
xchg
icebp
fs
repz
mov
aad
add
in
ret
xor
add
stos
cwde
xchg
adc
or
jp
xchg
js
and
mov
cmp
cmc
inc
int
and
ss
sar
sub
es
cli
into
mov
xchg
fwait
push
jne
cmc
dec
and
(bad)
jno
adc
or
das
rol
adc
aaa
sub
in
jle
call
aaa
fistp
(bad)
dec
sub
xor
(bad)
ss
add
xchg
pop
loopne
xchg
rcl
in
mov
mov
pop
stos
fs
in
sub
xchg
mov
dec
ds
fyl2xp1
cmps
pop
jecxz
jge
cmp
mov
(bad)
rcl
cmps
sbb
xchg
test
jp
add
mov
retf
je
movs
ss
pop
(bad)
out
sbb
sar
cdq
add
call
jbe
sub
jns
push
(bad)
jnp
mov
push
sbb
popa
repz
cmp
mov
shl
dec
cmc
dec
cld
test
lea
adc
scas
movs
imul
inc
jno
mov
jmp
sub
pop
lock
mov
mov
mov
jmp
fs
rol
rcr
mov
stos
mov
je
daa
movs
add
push
cmp
das
jmp
inc
and
mov
sbb
and
adc
cmp
repnz
cmps
(bad)
iret
mov
pop
jl
ror
aam
loope
repz
sub
int3
nop
sbb
jecxz
cmps
dec
aas
gs
ins
lds
mov
fxam
xchg
push
push
inc
xchg
cmp
test
dec
push
sahf
test
and
fwait
popa
arpl
mov
bound
jns
mov
inc
mov
inc
pop
iret
push
movs
popa
int
mov
out
fimul
jno
or
jecxz
fidivr
aaa
shl
and
adc
mov
jecxz
neg
mov
push
sbb
cwde
pop
or
push
(bad)
stc
lods
inc
mov
or
xchg
fwait
pop
call
xchg
cmp
push
hlt
out
repz
call
dec
jl
push
rcr
aam
jbe
retf
push
popa
call
mov
sahf
add
loop
scas
mov
xchg
jno
xor
sub
fldcw
cmp
pop
popa
mov
in
mov
xor
jne
xor
outs
mov
movs
iret
xchg
mov
push
mov
std
popf
xor
call
lahf
mov
inc
jnp
test
test
retf
adc
push
sbb
test
mov
stos
mov
jp
cmp
in
dec
rcl
test
lods
out
retf
outs
push
xor
ins
dec
fwait
mov
addr16
and
xor
cs
sub
pop
(bad)
jmp
sub
lds
loop
daa
fs
ja
ins
clc
test
mov
xchg
bound
jb
adc
inc
hlt
fisttp
loope
mov
mov
loop
fs
mov
movs
add
jae
sub
sub
sub
jge
fwait
mov
pop
retf
dec
(bad)
mov
fs
fldcw
fld
fistp
out
cdq
sahf
outs
ret
ins
jge
retf
(bad)
xchg
mov
mov
mov
adc
mov
(bad)
mov
jge
inc
out
push
ret
or
test
(bad)
mov
xor
sbb
pop
inc
sbb
addr16
jl
loopne
lea
retf
js
cmp
push
shl
cli
xchg
cmps
jo
iret
arpl
ins
into
or
cwde
mov
dec
movs
fbld
out
into
add
rcr
pop
cmp
int
sub
fnsave
pop
sar
dec
popa
inc
mov
out
mov
clc
lock
sbb
pop
enter
sahf
cmps
adc
lods
mov
sub
pop
pop
lds
jne
and
call
inc
jge
inc
jnp
jge
sub
ds
xchg
jp
jnp
(bad)
xor
neg
jns
sub
int3
or
inc
sub
mov
mov
jg
and
inc
inc
out
add
inc
adc
test
adc
xchg
ret
imul
or
mov
ret
xchg
imul
dec
mov
pop
test
mov
je
jns
inc
push
in
pop
xor
sub
jecxz
lock
or
add
inc
rcl
xchg
daa
fst
xlat
rol
adc
mov
sbb
bound
add
inc
out
mov
jo
daa
fist
add
aaa
inc
xor
lods
out
sub
int
aam
push
xor
iret
xchg
or
test
push
in
mov
ss
pop
test
pop
push
add
ins
jbe
sub
aaa
enter
mov
ret
lahf
mov
cmps
adc
sar
(bad)
popf
or
(bad)
loope
aam
xor
(bad)
push
movs
ins
ins
neg
call
push
or
mov
mov
out
(bad)
dec
leave
comiss
addr16
ret
test
pop
adc
cmc
mov
pop
and
mov
add
push
sub
jp
push
mov
add
jo
scas
lods
int
mov
jo
sub
push
shl
ror
fild
mov
jge
cmp
(bad)
and
dec
mov
push
jge
leave
jbe
mov
int3
or
psubq
clc
mov
push
aas
push
xchg
xor
stc
std
add
scas
stos
cmps
sub
sbb
cmp
lods
xchg
sub
inc
shr
retf
outs
mov
in
jp
cmp
sar
add
push
mov
mov
test
xor
in
sbb
xor
mov
sbb
fs
mov
xchg
loop
retf
sti
mov
cmp
sub
std
xchg
js
sti
in
pop
movs
pop
cmps
std
bound
aam
or
mov
movs
fcomp
test
pop
adc
fcom
dec
inc
int3
(bad)
mov
pop
aaa
push
aam
and
stos
adc
ret
sub
cwde
loope
inc
sub
or
aad
xor
or
cmps
test
mov
sub
or
xor
stc
fldenv
sbb
inc
sti
cmp
int3
repz
and
je
and
sti
loope
inc
push
std
(bad)
lods
xchg
xchg
cld
loopne
cmp
jecxz
call
stos
lods
xor
daa
or
loope
push
loop
aaa
arpl
popf
xchg
mov
imul
mov
cld
push
adc
pop
inc
mov
inc
rcl
pusha
fdiv
push
cmp
jnp
inc
dec
dec
retf
mov
mov
in
pop
jp
add
adc
loop
mov
arpl
inc
mov
add
outs
mov
pop
or
mov
in
mov
xor
jg
jp
test
push
movs
stc
in
mov
sub
adc
mov
shr
jg
jbe
xchg
or
push
mov
jno
mov
mov
neg
inc
in
sbb
xchg
cmp
mov
adc
jno
es
mov
movs
mov
pop
jbe
ret
ror
xlat
push
mov
pop
icebp
xlat
xchg
cld
jmp
in
retf
add
fstp
mov
pop
outs
mul
xchg
mov
push
ds
push
inc
das
jae
jmp
mov
adc
mov
or
jae
jmp
in
imul
into
lds
or
daa
movs
call
lea
fdivr
das
xor
mov
push
push
inc
mov
push
push
rol
(bad)
xor
out
test
or
out
fcom
ins
mov
pop
adc
scas
jg
adc
xchg
pop
nop
sbb
gs
add
mov
mov
push
mov
fiadd
ja
and
push
stos
(bad)
push
gs
inc
test
or
mov
inc
out
out
push
pushf
inc
aam
std
sub
lock
mov
dec
sub
dec
(bad)
pop
mov
mov
and
or
std
inc
adc
(bad)
sbb
inc
ins
dec
pop
inc
dec
and
adc
shr
popa
ds
not
movs
inc
pop
out
sar
(bad)
cmp
in
or
or
xchg
fdivr
xchg
pop
mov
loop
fsub
or
mov
pop
mov
movs
das
xlat
lods
ss
mov
cmp
stos
mov
mov
outs
daa
fimul
pminub
mov
mov
cwde
xchg
scas
ins
or
je
ins
stos
popa
fs
push
arpl
pusha
mov
lods
pop
adc
inc
mov
in
outs
xchg
bound
mov
cmp
add
xlat
sub
cwde
jbe
add
test
pop
and
jp
pop
mov
data16
cmp
lods
fdivp
and
pop
out
xor
xor
(bad)
out
stos
cmp
xchg
pop
icebp
repnz
mov
jae
imul
add
pop
xchg
mov
mov
mov
adc
cdq
or
push
fcomi
pop
and
adc
out
ror
daa
xchg
cmp
mov
mov
mov
daa
add
pop
ret
shl
fwait
js
mov
pop
jecxz
ret
lock
out
mov
outs
fs
or
test
lods
pusha
sub
dec
inc
lock
mov
mov
add
movs
fadd
ja
(bad)
sub
cmps
mov
or
daa
xchg
push
pusha
call
or
dec
mov
ja
pop
jae
(bad)
adc
pop
into
or
cmp
and
push
cmp
stos
jne
add
in
iret
je
inc
cmc
push
mov
jmp
add
dec
hlt
int
loop
push
jb
addr16
std
dec
loop
daa
xlat
mov
mov
and
and
xchg
enter
cdq
ins
mov
aam
xchg
addr16
dec
out
icebp
xor
fstp
repnz
inc
cs
xor
or
adc
test
rol
add
fist
push
fadd
mov
jae
push
mov
fisttp
mov
data16
dec
data16
ins
add
loopne
fld
mov
pop
push
add
sub
dec
or
sbb
lods
stos
sbb
xchg
lock
pop
or
mov
mov
mov
call
adc
push
in
pop
shl
out
les
mov
adc
inc
daa
jmp
adc
test
cwde
push
and
retf
dec
xchg
or
repnz
test
cmp
xchg
call
xor
data16
adc
out
dec
fucomp
inc
jo
inc
ins
cli
pop
mov
iret
(bad)
xor
pop
in
mov
out
and
push
fdivp
inc
sub
or
fisub
cwde
repnz
pop
cmp
outs
mov
sub
inc
cmp
mov
(bad)
lods
enter
dec
mov
das
arpl
and
mov
xchg
outs
pop
movs
sub
ja
xor
stos
inc
push
sub
jb
ret
and
pushf
mov
ds
xor
jle
cli
shl
or
dec
ret
jmp
xchg
or
and
push
rcl
scas
dec
jns
addr16
stos
dec
scas
push
push
sbb
or
bound
ror
sub
sbb
jb
push
pop
fs
sbb
adc
inc
stos
cmp
mov
arpl
xor
mov
push
xchg
mov
mov
out
push
movsx
int
or
pop
mov
loop
cmp
jp
mov
xor
sub
cmps
mov
jno
jle
not
in
pop
lds
lds
(bad)
pop
movs
test
aas
add
cmp
mov
int3
call
jns
retf
stos
scas
sbb
xor
(bad)
rcl
out
mov
mov
sbb
out
mov
pop
sbb
popa
mov
mov
sbb
cs
popf
data16
fnsave
mov
mov
and
gs
clc
add
cmps
dec
add
push
cmp
(bad)
test
out
imul
(bad)
lods
inc
call
cmps
ret
movs
lea
stos
push
aam
pop
jge
push
or
xor
ins
rcl
retf
inc
xor
xchg
repz
mov
mov
mov
xchg
repz
sbb
pop
shl
sub
xchg
mov
rcr
add
stc
mov
jle
or
inc
xor
jb
or
scas
data16
in
arpl
inc
inc
mov
fsubr
imul
dec
fsubp
aaa
dec
imul
mov
jae
mov
repnz
icebp
out
mov
pop
dec
dec
lods
adc
daa
xchg
fst
adc
mov
and
sbb
cmp
xchg
fadd
xor
fidiv
rcr
dec
cmp
sti
daa
pop
pop
dec
shl
es
fild
shr
mov
pop
cmp
shl
mov
and
mov
cmp
aaa
pop
imul
mov
dec
ret
mov
movs
(bad)
jnp
shl
mov
addr16
mov
mov
popf
mov
sti
sub
daa
sub
loop
cmp
cmc
sar
xchg
hlt
jae
sbb
mov
movs
rcr
int
pusha
cmps
cwde
aam
ror
hlt
lods
arpl
push
add
xor
retf
shl
mov
pop
sbb
adc
fs
sbb
pop
cmp
dec
mov
cdq
pop
cmps
xchg
xor
xchg
aaa
push
push
cmp
or
push
push
ret
jge
pop
outs
or
jns
stos
aam
sub
xchg
lock
mov
sbb
cmps
in
call
rcr
push
inc
div
mov
fidivr
push
inc
aam
xor
hlt
mov
mov
mov
mov
dec
pop
jmp
jg
pop
cmps
loope
cmp
sub
jmp
das
in
or
or
enter
lock
lods
pop
xor
movs
add
fwait
les
add
mov
xchg
stos
icebp
loop
push
mov
jmp
cdq
je
add
jae
push
stos
push
jg
repnz
or
stos
pushf
inc
aas
call
into
repnz
gs
cmp
mov
sti
out
dec
mov
ret
bound
cmps
pop
loop
or
sub
test
out
xchg
push
into
pop
and
in
mov
push
mov
mov
lea
call
mov
cdq
retf
jl
xor
mov
lea
xlat
push
les
loope
loopne
mov
cmp
inc
dec
dec
adc
sub
jmp
pop
imul
in
add
dec
add
adc
and
mov
shl
xchg
inc
and
out
cli
outs
dec
psllq
js
leave
loopne
sbb
test
dec
rcl
cmp
jno
xchg
in
jecxz
xchg
idiv
iret
xchg
in
push
rcr
int
ins
push
inc
adc
stos
xor
into
xchg
shr
pushf
and
jnp
mov
add
inc
mov
in
jmp
aam
outs
mov
mov
fcmovb
shl
xor
(bad)
imul
or
ja
inc
lea
icebp
jne
xchg
and
fdivr
xchg
movs
cdq
push
mov
stc
fsub
dec
dec
xchg
fistp
mov
sbb
les
lods
mov
scas
(bad)
pop
push
daa
dec
out
jo
in
mov
push
inc
jmp
sub
jbe
test
leave
not
add
aaa
call
xchg
pop
int3
add
imul
mov
push
or
test
shl
addr16
cwde
iret
cmps
ret
fisubr
aam
lds
fs
fsub
mov
imul
mov
arpl
adc
inc
cmc
mov
jne
mov
or
sbb
js
xor
push
sub
push
xor
dec
outs
push
mov
fnstsw
inc
(bad)
mov
mov
adc
iret
jae
push
mov
cmp
jnp
daa
add
imul
cmp
add
test
push
mov
jl
xchg
dec
dec
lods
lea
mov
jmp
ret
and
push
adc
mov
outs
lods
jp
add
sub
call
fsub
and
js
iret
fs
int
hlt
stc
mov
xchg
inc
xor
jb
cld
into
jl
cmps
mov
repnz
push
push
sub
enter
mov
jmp
pop
mov
cmp
mov
dec
rcl
add
test
imul
dec
cmp
rcl
xor
jg
cs
xor
mov
cmp
push
and
clc
sahf
into
xchg
inc
inc
ins
ja
fwait
xlat
or
fistp
or
mov
cmps
stos
mov
or
jp
(bad)
sbb
xchg
repnz
xchg
scas
js
arpl
loopne
mov
push
pop
bound
inc
add
dec
xchg
popf
loopne
in
outs
iret
arpl
pop
xor
mov
movs
jle
add
test
adc
mov
loop
inc
sahf
xor
loop
cld
call
icebp
popf
pop
jl
inc
xor
aas
in
cmp
shr
out
(bad)
mov
ficom
or
or
adc
hlt
cmp
mov
inc
pusha
aaa
mov
fisubr
lods
rcl
pop
adc
shl
or
inc
cdq
shl
ins
adc
(bad)
stos
jge
das
ja
ret
inc
inc
pop
xchg
and
imul
stos
jbe
mov
pop
cli
mov
pop
or
das
out
add
nop
mov
mov
lea
icebp
pop
mov
repnz
xchg
adc
cld
(bad)
outs
or
pusha
xchg
std
in
xchg
push
fidivr
popa
jle
mov
stos
mov
mov
pop
sub
test
(bad)
jno
mov
add
dec
test
scas
mov
aam
cmps
pushf
jmp
mov
jmp
lods
xchg
(bad)
adc
dec
scas
jmp
test
pop
js
call
fstp
pop
xor
jno
mov
inc
xchg
mov
lods
outs
test
xchg
and
into
push
jp
gs
(bad)
mov
xchg
and
mov
mov
popf
jg
push
hlt
pop
add
cli
pop
cmc
cmp
das
sbb
test
cmp
mov
mov
icebp
and
jnp
or
sub
out
leave
out
xchg
cmc
mov
leave
push
xchg
(bad)
and
xor
xor
sub
call
(bad)
and
cmps
sbb
jbe
mov
std
pmuludq
into
lock
pop
jb
jno
xor
pop
adc
cmp
xchg
pop
stos
xchg
or
push
ret
xor
inc
icebp
lea
push
inc
mov
inc
dec
inc
adc
push
mov
jge
sub
inc
iret
mov
rol
into
jns
mov
or
adc
outs
ret
inc
mov
lea
jp
imul
or
sar
fbld
ror
dec
mov
enter
cmp
dec
and
mov
xchg
ret
jmp
in
add
inc
ret
mov
mov
push
lock
ficom
fwait
ds
jo
rcl
fild
loop
mov
enter
inc
add
mov
(bad)
lods
lock
fnstenv
fild
cmps
test
leave
mov
out
aam
xchg
test
and
dec
fild
stc
es
stc
(bad)
and
data16
idiv
mov
sbb
in
sub
sbb
aad
mov
sub
and
dec
and
dec
ret
xchg
addr16
js
iret
xor
push
(bad)
icebp
cmp
xchg
mov
icebp
mov
adc
test
fwait
pop
arpl
daa
push
fsubrp
aad
test
mov
shl
or
and
aad
ror
xchg
(bad)
aam
and
dec
adc
rol
mov
pushf
repz
cld
pop
pop
leave
(bad)
arpl
push
adc
out
les
sti
daa
cmp
sub
fcomp
lods
dec
xchg
ret
data16
sti
ins
into
dec
adc
cmps
into
adc
loopne
fidivr
pop
fimul
aas
addr16
pand
mov
xchg
shr
sbb
es
jns
inc
fucomi
pop
adc
shl
mov
jb
push
sub
int3
int3
mov
rcl
leave
call
inc
fcom
mov
iret
movs
xor
cld
sub
cmp
xor
outs
ds
sub
pop
dec
adc
and
mov
lds
sub
aas
hlt
ins
push
or
dec
xchg
stos
sahf
bound
retf
mov
push
int
lock
push
cmp
loop
sar
lock
push
xchg
pop
imul
mov
repnz
icebp
data16
jns
in
loopne
dec
int
pushf
fwait
adc
neg
scas
adc
fist
pop
ja
loope
sbb
imul
xor
mov
mov
jecxz
or
lods
inc
jns
mov
add
and
fwait
inc
jecxz
sbb
mov
aad
imul
nop
mov
and
fwait
push
shr
push
scas
cmp
cwde
scas
fild
repnz
(bad)
xchg
jle
scas
cmp
adc
jnp
mov
cmp
jne
push
adc
imul
ins
push
add
pusha
mov
pop
jbe
ja
and
push
loopne
add
inc
or
inc
mov
jl
jecxz
xchg
out
test
shl
push
in
add
scas
jns
iret
push
adc
mov
out
je
mov
jge
inc
imul
pop
push
js
stos
dec
mov
xchg
push
xchg
icebp
cmp
aaa
or
adc
cmc
mov
rcl
mov
rcr
xchg
ret
mov
cmp
sub
not
bound
jmp
mov
sbb
lahf
dec
jbe
test
push
xor
and
sub
les
lahf
sti
inc
push
cmp
(bad)
fcom
xchg
adc
xlat
test
(bad)
out
and
movs
imul
ret
jnp
and
xchg
adc
mov
dec
pmaddwd
sbb
ins
int3
loop
mov
cld
ds
push
mov
add
adc
fld
jnp
xor
mov
int
xchg
call
adc
cld
dec
pop
test
adc
cwde
push
xchg
add
or
cmp
fnstenv
retf
or
sub
push
push
(bad)
add
cmovns
sbb
pop
test
cmp
ja
add
adc
inc
jl
inc
in
cmp
ins
cmp
movs
addr16
mov
mov
outs
das
mov
clc
out
inc
stos
cmp
imul
sub
retf
xchg
call
pop
loopne
cwde
in
fist
stos
mov
mov
gs
movs
out
fwait
js
fs
int
repnz
and
jae
cld
test
adc
cmp
in
xor
ins
pop
jecxz
outs
aaa
cmps
mov
sbb
fild
enter
fst
(bad)
icebp
cmp
popa
retf
movs
inc
mov
pusha
cdq
in
movs
cwde
mov
outs
inc
ror
cwde
aam
nop
std
fdivrp
call
stos
(bad)
dec
jg
adc
mov
jmp
in
sub
popf
pop
(bad)
pop
cmp
mov
add
dec
sub
fcom
bound
mov
sbb
pop
push
test
xchg
adc
cmc
loop
add
xor
xchg
leave
sub
retf
loop
xor
cmp
js
adc
aam
mov
out
jecxz
cmp
rcr
adc
dec
or
sub
nop
and
mov
push
push
push
call
dec
es
outs
inc
sbb
aam
stos
(bad)
shl
cdq
ret
add
push
test
push
cli
push
fst
sub
lahf
adc
push
ret
aad
sbb
int
dec
lods
outs
or
pop
pop
(bad)
cs
xchg
ret
out
cmp
mov
dec
repnz
ins
add
jg
mov
jmp
mov
int
adc
cmps
adc
outs
rcl
add
add
jb
leavew
test
call
aad
dec
ret
cmps
cdq
idiv
(bad)
push
aam
cmc
mov
jb
xchg
cmp
ins
xchg
lea
rol
out
xor
push
imul
or
xchg
jae
into
mov
shl
daa
imul
xchg
inc
hlt
cmp
cmp
repnz
test
test
sahf
ins
adc
cmp
jl
mov
mov
out
dec
arpl
mov
aad
jae
out
adc
iret
mov
icebp
and
dec
mov
fistp
mov
sbb
in
mov
das
inc
enter
sar
ds
sbb
cmp
cdq
pop
scas
fldenv
aas
leave
sar
inc
sub
fimul
mov
out
jg
cmp
push
or
sub
ins
mov
popf
mov
das
dec
dec
and
inc
std
mov
scas
push
aam
inc
dec
pop
add
mov
jbe
xor
lahf
pop
jnp
test
leave
jmp
das
mov
xchg
mov
mov
gs
daa
inc
fcom
sahf
icebp
pop
hlt
sbb
xor
shr
or
sub
movs
imul
fstp
xchg
mov
or
loopne
mul
popa
cmps
push
ds
inc
cli
out
inc
push
lods
mov
pop
push
jae
fadd
inc
pop
xchg
jae
mov
adc
cmp
pushf
icebp
in
fnstenv
fnsave
pop
test
retfw
out
arpl
mov
out
sub
xchg
test
das
jnp
jp
jns
inc
stc
cmp
into
fstp
jge
fimul
inc
dec
inc
(bad)
jge
inc
sub
imul
lods
fisub
jge
mov
mov
add
pop
push
jmp
push
scas
dec
dec
popf
rol
and
push
cmp
std
cmp
sub
in
aas
(bad)
jno
adc
lods
pushfw
cmp
push
retf
sbb
xor
or
aad
ja
jae
pop
cmp
push
cld
cli
data16
jg
fsubp
mov
ret
inc
imul
in
mov
fcomp
enter
sub
es
call
xchg
mov
or
sub
xchg
sbb
push
mov
or
add
cmp
movs
call
push
(bad)
or
mov
push
imul
fcomp
sbb
in
jl
adc
jle
pop
pop
push
ja
mov
sbb
inc
jmp
inc
cmp
pop
mov
in
pushf
rcr
dec
sbb
aad
push
sub
js
lds
fisub
jbe
hlt
in
sbb
and
jne
loop
xor
mov
ja
sub
lds
(bad)
sbb
adc
inc
call
adc
ins
int
rcl
inc
cmps
xor
scas
and
or
push
movs
aad
push
das
std
out
fidiv
cmp
loopne
(bad)
lock
enter
jb
pop
mov
aas
jb
inc
mov
or
js
das
out
fcomp
jge
push
inc
mov
mov
sbb
repz
push
adc
or
cmp
pop
dec
jmp
jge
push
mov
iret
mov
push
xchg
jmp
pop
inc
jge
cld
cmps
dec
inc
je
bnd
xor
pop
jmp
mov
in
push
leave
stos
sbb
jge
pop
inc
daa
dec
aas
ja
(bad)
mov
fs
into
pop
mov
jnp
mov
dec
add
pop
pop
mov
mov
jno
dec
into
jmp
xchg
outs
sbb
xlat
dec
shl
and
jl
push
and
push
sbb
adc
xchg
xchg
cli
gs
fnsave
sub
pop
gs
test
fwait
loopne
xor
outs
(bad)
sub
push
jno
nop
push
xor
add
sbb
xor
xchg
cwde
adc
fild
test
in
cmp
mov
out
inc
mov
leave
shl
fisub
out
call
sti
ficom
stos
xchg
es
repz
add
mov
sub
xchg
push
call
adc
mov
test
(bad)
push
and
and
jg
in
adc
or
xchg
retf
cld
sbb
rol
mov
movs
(bad)
call
jmp
cli
leave
cmps
xchg
mov
fs
push
cmps
ins
jbe
dec
out
mov
mov
popf
hlt
inc
fs
inc
fidiv
lahf
mov
mov
xchg
and
jmp
mov
xlat
or
cmp
loope
movlps
mov
and
jne
push
es
outs
es
add
adc
inc
jno
daa
fidiv
repnz
inc
je
(bad)
js
xchg
push
ins
xor
popf
jae
dec
adc
ds
arpl
sub
and
mov
xor
inc
cmps
cmp
outs
or
ds
es
test
dec
jae
inc
xchg
and
jno
loop
mov
adc
push
mov
sti
in
push
jno
bnd
imul
pop
pop
add
mov
mov
adc
fwait
in
jg
ds
shr
add
cmps
test
or
out
mov
rcr
fidivr
xchg
cmp
hlt
push
xchg
dec
jmp
aas
jne
stos
and
mov
cmp
jno
imul
xchg
inc
mov
jmp
and
sbb
push
dec
leave
and
add
scas
and
adc
rcl
jmp
and
mov
sbb
inc
jb
mov
addr16
sub
sub
cmps
xlat
neg
cdq
mov
js
mov
inc
enter
mov
popf
add
xlat
ror
jo
sahf
shl
push
sub
ss
mov
xor
cwde
xor
enter
or
ret
retf
dec
or
xor
mov
out
jns
fcom
jle
inc
loope
loope
ficomp
fcmovnu
jmp
push
stos
and
mov
ds
mov
xacquire
jbe
aad
fild
cmp
xor
dec
xchg
mov
sbb
pop
ins
inc
in
sbb
stc
mov
mov
mov
not
scas
fadd
jae
cmp
fs
cmps
jle
push
or
call
lods
test
add
or
push
shl
out
and
pop
pushf
fwait
adc
lock
sar
xchg
fst
mov
or
mov
add
lea
or
aad
scas
stc
push
aam
imul
mov
dec
adc
ror
and
jmp
pinsrw
mov
jnp
in
shr
and
jne
inc
push
xor
rcr
pop
xacquire
dec
gs
mov
jg
cwde
and
inc
fbstp
inc
xor
addr16
mov
std
fwait
cmp
mov
add
mov
popf
pop
div
and
aas
xor
mov
jle
inc
setge
cs
call
dec
pop
popa
cmp
ins
cmp
adc
sahf
sub
cli
dec
or
xor
or
jmp
cld
jp
xchg
loope
(bad)
pusha
test
push
and
inc
jo
push
sbb
xchg
fisttp
hlt
pop
retf
add
mov
jle
pop
ds
cwde
sti
dec
jg
sbb
das
retf
in
pop
sbb
in
push
jge
dec
out
fisubr
out
imul
push
sahf
jp
cmp
push
retf
out
adc
mov
push
mov
sahf
outs
inc
ret
xchg
out
shl
cwde
adc
jo
dec
cmps
mov
ror
lds
pop
into
ins
cmc
xlat
cmps
das
push
rcl
loop
cmp
dec
lods
xor
ret
shr
int3
movs
test
jmp
mov
xrelease
fs
dec
fnstenv
jl
or
sbb
loope
pop
sti
mov
sbb
inc
inc
retf
jo
in
lods
popf
(bad)
es
xor
fwait
mov
push
dec
and
pop
scas
and
daa
inc
mov
fisttp
dec
dec
in
pushf
pop
and
cmp
sub
add
xor
sbb
cmp
mov
add
int3
adc
outs
push
push
movs
add
mov
retf
inc
std
nop
loope
pop
xchg
aad
dec
fsubr
hlt
xor
cld
pop
jge
jne
pop
jno
and
xchg
mov
mov
xor
xchg
outs
dec
and
gs
mov
add
mov
dec
xchg
fiadd
mov
and
mov
rol
jae
mov
mov
icebp
pop
adc
sbb
inc
adc
inc
jne
nop
inc
repnz
sahf
sti
push
cmp
test
fist
and
push
ins
sbb
xor
call
lock
jl
js
cmc
arpl
xlat
hlt
xchg
not
mov
jp
jg
popf
aam
dec
(bad)
test
in
sub
sbb
xor
daa
pop
xchg
cmp
call
sub
jo
mov
jmp
jecxz
and
cld
(bad)
stc
into
push
push
test
and
xor
xchg
ds
pusha
loop
clc
inc
fdivr
setle
mov
jecxz
stos
jo
lds
cs
mov
or
inc
add
popa
jns
out
push
in
addr16
cdq
movs
dec
imul
adc
lahf
add
in
sub
(bad)
popf
arpl
ja
xor
iret
cmp
jmp
lods
lea
lea
mov
mov
xchg
inc
popa
cwde
cli
add
fimul
sbb
pushf
imul
std
or
test
cmp
pushf
xor
sbb
dec
ret
ror
xchg
and
xchg
stc
jmp
xor
imul
push
ja
pushf
mov
or
dec
lea
scas
mov
fiadd
dec
mov
push
jbe
xlat
not
lock
pop
jle
shr
or
fmul
mov
jne
sub
ins
sub
lods
call
mulps
in
aas
les
hlt
mov
outs
in
sbb
inc
sbb
arpl
pop
jge
mov
call
popa
je
lds
sub
fs
sahf
jecxz
push
ins
pop
jg
xchg
mov
gs
imul
sahf
dec
(bad)
push
adc
js
and
cmp
loopne
mov
xor
adc
or
nop
imul
push
jb
inc
icebp
das
ja
push
sbb
aam
fcmovb
dec
and
cmps
and
nop
es
mov
cmps
test
stc
adc
dec
or
out
sub
cs
repnz
jmp
sbb
loop
je
popa
sub
(bad)
jmp
mov
sub
pop
outs
lds
cmps
or
aam
in
inc
dec
movs
aas
fisttp
int
lds
(bad)
repz
mov
mov
dec
cwde
xchg
sub
or
mov
js
jl
les
cmp
test
in
inc
jmp
cs
(bad)
(bad)
cld
cmp
xor
lods
and
and
rcr
mov
std
ins
pushf
out
inc
test
and
icebp
scas
stos
nop
inc
aam
sbb
or
aam
(bad)
push
bnd
xchg
cld
sbb
and
aad
outs
and
inc
jecxz
jmp
adc
aam
xor
div
iret
jge
(bad)
adc
add
ins
or
(bad)
imul
add
xchg
and
mov
ret
ins
cmp
cmp
inc
push
sbb
pop
aaa
daa
mov
mov
jmp
aad
mov
mov
sub
bound
(bad)
gs
push
fwait
cmp
div
in
fisttp
sub
push
enter
nop
por
lea
mov
add
retf
mov
cmp
aas
push
sub
pop
loopne
movs
(bad)
mov
mov
(bad)
call
or
pop
xchg
adc
rcr
push
dec
mov
push
adc
iret
cld
lds
pop
ret
call
aaa
sbb
scas
jle
mov
dec
fsubr
sahf
push
inc
out
in
popa
or
cmp
cld
icebp
nop
mov
sub
int
retf
loope
xchg
pop
aas
out
inc
movs
mov
in
xor
dec
stos
xchg
push
sub
adc
mov
push
mov
sbb
stc
int3
in
(bad)
popa
jle
adc
(bad)
loope
movs
cmp
add
or
xor
xlat
pusha
sub
movs
imul
push
adc
sub
jge
scas
cwde
and
fcmovnu
mov
mov
xchg
ds
push
dec
ja
scas
shl
(bad)
sbb
dec
push
(bad)
cmp
mov
jmp
adc
dec
sbb
or
ret
mov
test
dec
cli
movs
mov
adc
into
cmp
and
imul
mov
fistp
out
mov
and
cs
pop
repz
sbb
or
cmps
in
bound
call
mov
sbb
dec
in
arpl
push
push
(bad)
jmp
pop
cmp
shr
push
jge
ficomp
shr
push
and
clc
loope
mov
ins
mov
jecxz
xor
sub
pusha
test
popf
mov
movs
sub
cmps
jecxz
mov
lea
cmp
sub
mov
push
jno
idiv
jbe
mov
fbld
pop
test
aaa
ret
mov
jb
(bad)
mov
dec
aam
stc
push
or
sahf
jns
(bad)
sbb
add
fdivr
sbb
mov
cmc
mov
push
jge
or
repnz
xor
mov
out
pop
fldenv
dec
mov
xchg
push
add
call
sti
mov
push
mov
inc
sbb
sti
sbb
mov
mov
sub
movs
add
dec
js
jmp
mov
mov
fldz
adc
xor
push
call
test
mov
xlat
fs
pusha
fld
or
pop
mov
dec
pop
dec
xchg
ins
pop
shl
push
lock
mov
mov
cs
push
enter
ffreep
int3
shr
loop
mov
sbb
(bad)
mov
lock
pop
mov
jo
mov
and
mov
stos
test
(bad)
es
pop
mov
cmp
call
das
or
sbb
jns
ret
stc
pop
popf
lods
mov
in
cmp
repz
fcmovne
mov
icebp
adc
lods
sbb
or
cmp
scas
dec
outs
xor
ds
aad
cmps
xor
jo
or
push
push
mov
out
aam
mov
pop
(bad)
xchg
rcr
dec
sbb
into
inc
imul
sbb
add
mov
jae
jnp
sbb
adc
enterw
xchg
push
popf
sahf
jmp
cld
mov
mov
dec
or
scas
cmp
cmp
loope
mov
shl
sbb
xor
dec
es
pop
push
lds
push
fidivr
pop
stc
mov
mov
jno
imul
sbb
jge
rcl
or
(bad)
adc
inc
pop
adc
dec
jns
outs
mov
imul
mov
ja
sub
pusha
dec
add
cmc
cdq
push
cmp
cmps
dec
push
sbb
mov
pop
xor
stc
inc
xor
mov
or
(bad)
push
iret
sub
scas
test
inc
pop
inc
aaa
fild
lea
hlt
xor
cmp
js
sub
dec
pop
repz
out
adc
aas
lea
ja
pop
mov
xor
stos
test
mov
nop
pushf
add
(bad)
adc
xor
sub
jnp
call
mov
mov
and
adc
pop
arpl
adc
mov
out
in
outs
les
add
loope
test
mov
push
inc
add
test
jmp
mov
(bad)
aas
sub
mov
stc
mov
dec
add
aas
pop
adc
pop
test
arpl
out
inc
mov
rol
mov
sbb
add
push
and
sub
pop
daa
adc
or
xchg
push
dec
mov
das
les
sbb
imul
mov
scas
push
cld
dec
enter
div
adc
ror
sub
cmc
sbb
pushf
rcr
jne
ss
call
fdiv
xchg
xor
mov
and
ja
jnp
iret
lods
push
mov
mov
sar
bound
fdivr
cli
xor
stos
loop
fstp
add
call
xchg
cmp
js
mov
movs
(bad)
xor
dec
fdivr
iret
adc
push
fstp
inc
and
pop
(bad)
xor
ss
or
fisttp
(bad)
(bad)
dec
aad
cmps
pusha
xchg
loopne
mov
xchg
pop
add
rcl
pop
aaa
or
mov
xor
jne
mov
sub
mov
jge
push
push
lds
shl
mov
xchg
sbb
jns
pusha
mov
clc
stos
push
bound
mov
fcomi
ins
lea
call
fwait
or
pop
mov
(bad)
repnz
and
sub
nop
jp
adc
fcom
rol
retf
lods
pop
out
xor
mul
or
mov
jo
or
mov
mov
push
jp
das
pop
and
inc
push
pop
push
pop
arpl
loop
shr
outs
mov
xor
ret
int
pusha
js
lds
or
fwait
mov
push
sti
push
xlat
pop
pop
dec
into
add
sar
hlt
popf
sub
sbb
or
ret
mov
push
push
cmp
mov
jecxz
mov
mov
and
add
loopne
jg
pop
push
add
or
cmp
or
jbe
cli
sub
mov
sbb
ficom
inc
mov
or
mov
dec
sbb
adc
xchg
and
or
cmp
lock
inc
sub
pop
(bad)
ror
call
leave
into
call
add
leave
sti
sub
fdivr
jle
in
adc
adc
inc
or
mov
mov
cld
push
jbe
popa
sbb
sti
ss
and
jnp
push
ret
sub
cmovge
adc
in
imul
popa
sub
stos
add
mov
mov
cmp
xor
cwde
rol
adc
sbb
sar
popa
or
xor
sbb
and
pop
push
(bad)
les
xor
dec
ins
push
push
sar
jbe
neg
arpl
rol
out
inc
(bad)
mov
or
mov
js
mov
cmp
cmp
jb
int3
out
cmp
call
jecxz
std
inc
xchg
inc
or
xchg
lahf
enter
xchg
mov
sar
inc
jbe
stos
test
mov
je
int
ja
mov
clc
sub
add
jmp
mov
ds
and
fxch
inc
inc
stos
(bad)
pop
popf
mov
imul
addr16
push
add
(bad)
xor
pushf
(bad)
loope
and
jns
or
jmp
dec
adc
scas
in
nop
pop
mov
out
loopne
xchg
lahf
in
sbb
xor
mov
inc
movs
cmp
(bad)
pop
test
sub
xor
jne
pop
and
mov
movs
add
and
xchg
retf
scas
ret
inc
popf
jne
xchg
mov
lea
sub
leave
popa
aam
loop
fs
aaa
inc
in
cmp
xor
jecxz
and
scas
jp
loopne
adc
mov
push
sbb
imul
das
push
cmp
mov
add
cdq
ss
scas
out
or
outs
loope
fisttp
cdq
loopne
and
xchg
sub
mov
jg
jecxz
arpl
cmps
push
ja
push
test
fcom
push
inc
inc
es
pushf
xor
(bad)
adc
jo
nop
not
jae
lahf
or
jmp
pop
cmp
imul
inc
fist
lods
lods
out
jecxz
mov
xchg
scas
aaa
hlt
add
and
and
sbb
add
push
mov
fimul
dec
mov
(bad)
cs
xchg
pop
push
mov
add
out
test
add
int3
mov
aad
xor
or
adc
aad
mov
mov
test
stc
xor
xchg
pop
sub
xor
cmp
and
dec
or
mov
adc
jmp
jge
cmp
push
pop
push
dec
jmp
sbb
sbb
jmp
sbb
adc
lods
cld
and
sub
test
sub
dec
clc
push
push
pop
push
cs
jmp
lea
sbb
aad
inc
cmps
push
mov
mov
stc
(bad)
jo
mov
loop
lods
fidivr
mov
lea
sar
out
in
or
test
pop
push
adc
ret
fdiv
std
loop
jns
adc
rol
out
shl
adc
add
nop
cli
mov
nop
mov
arpl
mov
ficom
or
in
pop
imul
fwait
pop
push
cwde
mov
xor
mov
fucom
lfs
sahf
mov
mov
imul
out
pop
and
sub
ja
ror
push
inc
mov
fs
retf
mov
mov
xor
mov
dec
adc
sub
cmp
jmp
xor
int
jbe
in
imul
shl
jecxz
cmp
xor
pushf
push
ss
(bad)
xor
fidiv
xchg
sub
inc
call
sbb
xor
mov
cmp
or
add
lahf
mov
das
adc
mov
mov
sub
xchg
int3
dec
sub
xchg
fidiv
in
or
fisubr
aaa
sbb
push
inc
je
js
sub
xor
inc
pusha
and
sti
xchg
pop
push
add
xchg
jb
xor
lea
and
push
div
rcl
movs
xchg
mov
leave
cmc
inc
mov
mov
ja
scas
fnstcw
call
adc
inc
test
mov
cvtdq2ps
cmp
lds
cmp
pop
xchg
inc
movs
or
dec
ficomp
jb
or
mov
lahf
icebp
call
and
mov
sar
fcmovnb
dec
xchg
lods
mov
xchg
out
(bad)
sub
mov
pop
retf
mov
and
out
mov
xor
adc
popf
jbe
jge
pop
xchg
test
add
pop
dec
into
arpl
inc
and
mov
arpl
push
lea
(bad)
leave
clc
mov
inc
adc
mov
push
adc
addr16
xchg
pop
xchg
push
in
mov
mov
ss
pop
popf
mov
cdq
fucomi
das
mov
imul
ror
icebp
lds
mov
push
ja
push
mov
xchg
jo
iret
sbb
cmc
push
retf
mov
xor
cmc
xlat
out
pushf
sub
call
es
pop
repnz
sti
nop
mov
lea
mov
cmps
out
mov
scas
test
fisub
push
or
ss
stos
jp
aam
xchg
cmps
imul
push
out
and
push
adc
pusha
jecxz
(bad)
mov
sub
sbb
xor
retf
mov
sub
lock
push
idiv
push
add
jns
ret
mov
mov
xchg
test
ins
sar
mov
and
cmp
pop
mov
iret
fstp
jge
or
sar
cmc
out
xor
imul
xchg
push
push
inc
scas
mov
pop
lahf
call
mov
jg
pop
fiadd
popf
inc
iret
pop
dec
sub
sub
or
fst
or
and
xchg
fst
xchg
mov
sbb
jbe
add
dec
pop
push
pop
fistp
out
(bad)
scas
mov
inc
xchg
add
and
xchg
add
dec
cmc
inc
cld
popa
dec
fnstsw
pop
add
sub
mov
js
or
mov
ss
rcl
dec
jg
cmp
or
lahf
and
xchg
rcr
inc
jl
cmp
in
inc
enter
xchg
jle
xchg
scas
shr
imul
jmp
xor
inc
xchg
pop
mov
arpl
cld
add
sub
es
shl
jb
scas
mov
mov
cmps
jbe
inc
mov
cmp
pop
mov
pop
jg
mul
sbb
pop
shl
hlt
sub
dec
pop
mov
xchg
lods
push
jmp
sbb
sub
outs
outs
jbe
xor
push
sbb
fnsave
push
cmc
mov
push
shl
test
xchg
pop
into
enter
mov
mov
jge
inc
dec
fsub
in
adc
icebp
fidiv
add
(bad)
jmp
call
hlt
xchg
not
(bad)
loopne
lods
sbb
sbb
movzx
push
leave
outs
jae
inc
xor
clc
pop
jg
mov
aam
popf
(bad)
pushf
cwde
bnd
call
add
xor
scas
stc
gs
ret
js
sbb
call
retf
xlat
retf
fsub
in
ss
stc
jl
mov
out
inc
les
cld
add
jne
adc
fmul
cmp
repnz
xchg
dec
adc
ins
add
jb
loopne
call
add
mov
dec
pushf
mov
out
mul
xor
inc
sub
repnz
xchg
inc
test
out
daa
cwde
mov
push
jo
loop
outs
rcl
add
cmp
repz
sbb
mov
test
sub
xchg
neg
mov
sub
xor
or
fstp
inc
arpl
adc
ins
leave
in
inc
loop
imul
pop
rdpmc
xchg
shl
pmaxub
mov
xlat
adc
xchg
stc
pop
mov
jecxz
push
loopne
sti
add
xor
in
retf
jno
rcr
mov
cmps
cli
jne
mov
mov
rcr
ins
ins
jge
test
stc
or
mov
or
dec
enter
shl
iret
push
sub
mov
push
sar
jne
cmp
push
js
popf
pop
or
add
scas
push
fimul
cs
pusha
inc
daa
arpl
and
loopne
out
or
mov
jmp
sbb
adc
fiadd
push
add
ds
mov
js
or
mov
cmp
aad
pop
pushf
push
add
and
push
jae
daa
cmp
in
add
adc
fimul
mov
sbb
shl
pop
mov
push
adc
sub
bound
pop
es
das
mov
test
in
push
add
in
std
fnstcw
mov
push
shl
jg
add
ret
inc
adc
or
dec
jg
call
mov
pop
test
fld
fmulp
sbb
xor
adc
pop
loope
xlat
add
jae
xchg
nop
mov
adc
sbb
add
fxch
or
ror
popa
pop
mov
in
adc
cmp
pop
sub
xchg
xor
mov
dec
cli
mov
push
in
dec
pop
mov
hlt
xor
cmp
scas
ins
inc
mov
mov
dec
and
push
in
mov
add
fld
mov
ficom
nop
ret
fwait
add
mov
jecxz
mov
pop
stos
fcomp
ins
push
jmp
xchg
add
enter
imul
sbb
sbb
sub
xor
or
sub
sub
movs
scas
or
sub
jge
rcr
mov
jmp
and
mov
cmps
cs
and
not
or
inc
fsub
xor
into
sti
jnp
call
mov
loopne
movs
lods
or
stos
shr
mov
jnp
mov
jg
push
dec
int
inc
std
add
inc
xchg
imul
jp
pop
(bad)
aaa
test
loop
push
lahf
mov
inc
lods
add
cld
sub
sub
mov
cmp
or
js
imul
pop
or
pusha
test
jl
ret
add
or
push
shl
jo
cmp
fcomi
jbe
je
rol
(bad)
fdiv
enter
in
xchg
rcl
xor
or
pusha
xchg
adc
sub
pushf
push
mov
and
outs
popf
xor
push
cmp
icebp
mov
inc
dec
push
push
lahf
clc
dec
adc
pop
call
xor
push
cli
pop
or
fist
sub
push
loop
cmp
add
mov
lods
mov
mov
and
inc
sub
cld
nop
or
lods
and
xchg
pop
or
jne
push
test
jns
loopne
mov
bound
adc
and
sbb
sar
shl
outs
xlat
outs
nop
pop
sti
cli
jmp
sub
xor
sbb
cmps
cwde
addr16
dec
fcom
ret
into
pop
repnz
je
imul
adc
ja
ret
fst
xchg
adc
inc
leave
inc
inc
mov
mov
aas
push
loope
hlt
cld
not
adc
cdq
pop
out
test
fsub
imul
pop
mov
jne
or
scas
ss
ja
out
sub
cmp
sbb
and
lock
or
push
daa
sub
clc
ret
jp
sbb
xlat
push
or
pop
loope
sub
div
or
bound
mov
cmp
mov
inc
push
cmps
push
clc
popa
outs
add
mov
retf
xchg
jmp
jnp
xchg
mov
dec
je
inc
xchg
in
lods
add
sub
jecxz
add
arpl
cmp
inc
hlt
ins
leave
mov
jge
xor
shl
(bad)
add
adc
jmp
addr16
es
pop
fbld
out
cmps
enter
jns
mov
je
xor
xchg
or
push
ror
mov
std
repnz
int
sbb
dec
jo
jmp
mov
std
js
loope
loopne
add
jae
jmp
or
push
das
aas
ds
xchg
cmp
cmps
pop
or
push
and
cmps
add
ror
push
call
fst
and
sbb
shr
clc
add
in
addr16
or
lea
and
aad
adc
push
jb
sbb
icebp
cmp
fnstcw
xchg
popf
pop
pop
mov
add
das
xchg
and
mov
dec
popa
mov
adc
add
lock
in
repz
in
lock
pop
jg
arpl
test
sub
cs
push
and
dec
rep
fnstenv
xor
sahf
cmp
scas
call
aaa
ss
sar
push
sub
sbb
inc
stos
shr
(bad)
outs
cmc
fnstsw
mov
pop
and
scas
inc
enter
jbe
pop
pop
out
int3
sub
mov
ja
cmp
cmps
sub
(bad)
iret
pushf
mov
shl
xchg
test
dec
push
pop
xchg
sub
rol
das
mov
fs
lock
call
ror
mov
lock
nop
ins
mov
idiv
sub
sti
xchg
imul
dec
push
loopne
outs
shl
mov
pop
xor
neg
cmp
jl
std
lahf
popf
sub
adc
or
cwde
aaa
mov
scas
and
xchg
(bad)
stc
mov
pop
xor
dec
sahf
ret
mov
push
push
call
loop
and
aad
mov
pop
mov
inc
cwde
out
std
fst
fiadd
shl
cmp
xchg
mov
xchg
mov
mov
cmp
mov
cld
cmp
cmps
stos
in
inc
dec
mov
cdq
mov
mov
jb
add
push
add
dec
in
push
dec
xchg
sub
fldenv
sub
cmc
fs
mov
int
loope
rcl
add
jg
(bad)
out
pop
fnstcw
push
dec
jns
xor
dec
xchg
(bad)
ss
dec
sti
retf
add
je
shr
in
pop
adc
mov
push
add
or
aas
pusha
stos
sbb
mov
xor
adc
jl
scas
push
mov
adc
int
mov
fcom
inc
cs
sub
cld
push
out
dec
xchg
pop
lods
movs
push
(bad)
popf
inc
mov
xchg
jmp
or
movs
retf
or
sar
mov
mov
retf
push
and
dec
dec
das
std
add
(bad)
mov
repnz
and
(bad)
push
mov
test
pop
jae
bnd
adc
mov
push
aas
fwait
xlat
pop
test
mov
and
add
xchg
je
pusha
lea
popa
jo
jge
hlt
mov
popa
js
jne
pushf
fbld
pop
fcmovnu
push
test
js
jo
fisttp
ror
mov
ret
sbb
fsubr
daa
mov
(bad)
rcl
das
sbb
lahf
(bad)
jno
mov
add
stos
mov
in
addr16
jg
xchg
mov
xor
sar
leave
(bad)
stos
mov
in
test
ret
fisub
mov
sbb
fistp
cli
(bad)
aaa
sbb
inc
sbb
movs
pop
dec
(bad)
loope
xor
sbb
cmc
stc
pop
test
ss
inc
fldenv
xor
cdq
xor
enter
cmps
dec
pop
dec
stos
sbb
test
std
mov
rcr
inc
retf
aaa
shr
push
xchg
movs
stos
jnp
add
push
add
pop
adc
mov
ja
fnstcw
lea
(bad)
int
push
inc
mov
adc
clc
sub
(bad)
mov
fild
mov
sub
mov
inc
mov
xor
pop
sub
es
stos
sub
or
stos
lds
fwait
jae
int3
mov
pop
push
sbb
fld
dec
(bad)
loopne
dec
push
addr16
mov
test
je
jo
and
mov
daa
clc
push
xchg
das
jno
test
xchg
data16
clc
hlt
push
jbe
and
imul
bound
pop
cmps
in
pop
rcl
sbb
xor
out
outs
or
xor
jb
jns
push
sahf
and
and
lds
xchg
add
aad
sbb
icebp
fsubp
test
test
pop
fldenv
and
cdq
add
test
lahf
adc
xchg
dec
test
mov
add
pusha
xchg
movaps
xchg
(bad)
call
dec
sahf
out
int3
adc
add
inc
mov
inc
stos
pop
dec
nop
rcr
(bad)
std
stos
in
stc
jmp
xor
sbb
(bad)
sti
cmp
xchg
fcmove
sub
dec
sbb
mul
adc
nop
mov
push
sub
cmp
sbb
or
pop
movs
(bad)
mov
xchg
ins
loop
mov
mov
out
pop
das
push
retf
lea
jo
ret
mov
add
mov
add
cmp
or
mov
mov
test
push
mov
jae
repz
dec
movs
(bad)
cmp
jo
pop
inc
repnz
lea
sbb
xor
jns
pop
scas
mov
mov
(bad)
movs
add
sbb
adc
mov
shl
cmp
repz
xchg
int3
inc
xor
gs
cmp
imul
pop
xchg
push
lea
jmp
pop
push
add
push
mov
les
scas
push
popf
aam
dec
mov
xor
or
sub
scas
repz
mov
cli
or
jne
pop
in
imul
inc
mov
xchg
mov
add
enter
les
adc
into
and
inc
xlat
cmps
test
scas
test
cmc
imul
jne
cs
mov
pushf
cmp
test
push
xor
mov
outs
mov
retfw
test
inc
pop
lahf
sub
sub
inc
imul
aas
adc
sbb
arpl
mov
fldenv
mov
ret
xor
les
inc
jne
adc
mov
jne
or
sbb
xchg
mov
mov
push
mov
xchg
sub
mov
xchg
push
push
ucomiss
mov
jne
sti
ja
adc
retf
cmp
sbb
lock
jmp
neg
mov
loope
aam
push
fiadd
jbe
outs
dec
mov
sub
dec
xor
retf
adc
clc
shr
repnz
jns
adc
sti
jns
test
fcom
push
add
inc
jnp
mov
div
mov
mov
push
sti
icebp
lods
stos
push
jle
or
mov
dec
mov
jo
movs
movs
or
sub
outs
xchg
das
and
repz
xlat
adc
popf
add
retf
xlat
mov
in
push
sbb
in
and
addr16
jno
inc
pushf
in
jmp
cwde
leave
mov
mov
add
imul
inc
frstor
jmp
dec
push
icebp
push
rcr
lods
repnz
adc
sub
jmp
mov
dec
dec
dec
xor
(bad)
int
retf
sub
jmp
mov
jecxz
push
out
push
rcl
popf
std
les
pop
xor
jle
sbb
mov
cmp
in
add
sti
jmp
jbe
pusha
mov
push
jg
sti
inc
in
scas
sub
je
mov
fwait
cmp
push
fsubr
add
inc
stos
out
or
sti
cmp
(bad)
mov
jmp
rcr
(bad)
mov
daa
scas
mov
fbstp
sbb
fld
ror
xchg
lods
data16
rcl
test
mov
std
clc
rcr
sbb
cmp
in
pop
test
sub
jns
mov
int3
hlt
ins
jge
sbb
xor
fwait
bound
dec
mov
push
and
(bad)
xor
xchg
sbb
push
fiadd
es
les
fs
bound
pusha
sub
test
inc
jne
(bad)
test
cmp
(bad)
(bad)
mov
and
mov
sti
add
sbb
std
dec
sbb
scas
mov
mov
mov
inc
mov
dec
out
cmp
cmp
mov
arpl
sbb
cld
push
fsubr
xchg
test
les
sub
imul
push
test
std
outs
pop
push
les
aad
xchg
outs
and
push
push
scas
idiv
xchg
hlt
and
jle
add
lods
xchg
test
push
daa
aaa
xchg
popa
icebp
daa
clc
xchg
test
jl
(bad)
ror
js
jno
call
call
ror
mov
test
pusha
leave
jnp
jmp
and
ror
xchg
jle
pop
xchg
lods
mov
into
stos
dec
loopne
fisub
sub
retf
cmc
stc
(bad)
sbb
fstp
ins
imul
(bad)
cmp
pop
jecxz
jo
ins
fs
(bad)
push
ins
push
aad
pop
aas
mov
jmp
movs
sub
retf
fld
sar
loope
std
rol
popf
mov
cdq
pop
gs
arpl
xchg
pusha
push
xchg
jb
or
(bad)
cmp
int3
stos
push
test
xchg
ins
or
out
sub
mov
call
add
cmp
js
or
mov
pop
js
xor
pop
mov
neg
xchg
pop
xlat
sub
fwait
jb
hlt
mov
lock
nop
fwait
fwait
adc
call
out
in
in
in
push
movs
xchg
jle
repz
in
xor
ins
cdq
int
cld
cmps
pop
xlat
mov
(bad)
ds
(bad)
mov
pop
push
mov
inc
enter
cmp
jmp
inc
cdq
jle
push
gs
mov
clc
mov
or
arpl
sti
sbb
pusha
ins
xor
mov
stos
xor
push
xchg
bound
bnd
mov
xor
aaa
and
mov
push
sar
xchg
iret
iret
or
(bad)
icebp
mov
xor
adc
in
dec
cs
mov
inc
pop
inc
scas
std
or
pmaxsw
lds
ret
jmp
adc
dec
stos
ret
lods
lahf
hlt
pop
mov
inc
movs
inc
adc
mov
retf
xchg
or
sub
mov
ret
gs
cmp
stos
repnz
dec
mov
hlt
and
push
cmp
xlat
jbe
push
or
cmp
push
or
shr
sub
into
sbb
inc
(bad)
test
push
cmp
enter
not
jb
xor
add
and
mov
out
stos
aam
pop
out
inc
mov
sub
mov
popa
inc
push
repnz
sub
out
cli
pop
arpl
jmp
dec
xchg
jecxz
cmovb
movs
fisub
or
push
pop
jmp
sub
sub
mov
fadd
(bad)
imul
mov
movs
ja
(bad)
iret
stos
cli
scas
cld
fnstsw
mov
mov
(bad)
adc
shl
test
imul
and
jb
mov
sub
les
fidiv
dec
lods
fdivr
fst
jl
addr16
adc
add
fwait
sub
(bad)
(bad)
movs
mov
ins
inc
xor
mov
rcr
sub
js
dec
pop
test
lea
dec
jmp
bound
or
mov
dec
xchg
in
sub
enter
inc
sti
or
adc
pop
out
mov
and
loopne
clc
add
xchg
shl
or
or
sbb
repz
mov
adc
fst
push
mov
jge
sahf
jbe
loopne
mov
add
mov
jp
dec
stos
fsub
sub
hlt
pusha
cmp
dec
cs
(bad)
or
test
iret
jg
ror
pop
mov
cli
scas
out
mov
mov
lock
jl
adc
je
cmp
arpl
push
idiv
das
call
mov
rcl
adc
test
jp
(bad)
bound
xchg
ins
stos
xor
shl
pusha
and
retf
push
and
scas
lock
mov
and
gs
push
psllq
cmp
test
dec
jnp
mov
inc
sub
mov
fxch
mov
ret
cmp
dec
fistp
sub
pop
(bad)
and
sbb
outs
(bad)
and
(bad)
mov
scas
clc
icebp
dec
jne
cdq
fsub
fidiv
xchg
cmc
out
mov
inc
fdivr
push
cmps
movs
shl
xor
mov
and
inc
jnp
cmp
imul
pop
push
lods
jp
into
rol
jmp
repz
fist
pop
shr
popa
adc
xchg
sar
ds
movs
jmp
xor
cmps
pop
cld
jg
push
mov
movs
shr
mov
retf
ins
dec
adc
stos
sub
xchg
inc
repnz
cmc
cmp
sub
pushf
push
cli
test
lahf
mov
imul
into
or
mov
xchg
es
or
jo
iret
popa
repnz
fmul
or
inc
aaa
test
cli
push
fcmove
enter
test
cmps
ret
mov
imul
mov
mov
jecxz
mov
jo
mov
retf
inc
ds
mov
adc
or
je
xchg
int3
dec
push
ja
ss
fs
jp
sub
movs
jne
shr
iret
pop
sub
xchg
popf
in
push
jecxz
push
pop
iret
or
mul
lahf
xor
push
shl
sub
push
enter
mov
into
cmps
or
add
mov
mov
mov
dec
scas
lea
cdq
and
sbb
shr
jmp
mov
das
push
imul
xor
test
add
data16
inc
xchg
pushf
sahf
xchg
pop
mov
dec
push
cli
ja
(bad)
in
lods
sub
adc
sbb
or
xor
in
xor
jne
test
jns
xchg
pushf
xor
ss
fild
adc
rcr
retf
sub
outs
push
jge
shr
dec
fnsave
and
mov
test
rcl
inc
fld
cmps
shl
cmps
lods
lahf
ja
mov
xchg
xor
jmp
mov
adc
int
push
(bad)
bound
(bad)
xor
and
push
mov
in
in
pop
xor
push
in
ja
add
jb
ja
aam
or
jg
ss
ret
and
out
sbb
outs
push
add
dec
xor
rcl
xchg
addr16
jg
lods
(bad)
fmul
push
shr
mov
rol
int3
and
sbb
repnz
jne
inc
sbb
jb
mov
and
test
test
jne
aaa
rcr
ins
mov
adc
fsub
and
pop
ins
repnz
sub
jecxz
pop
pop
ret
mov
push
adc
nop
sub
sbb
retf
mov
add
btr
or
retf
adc
inc
xchg
xchg
dec
add
pop
lahf
jo
push
pop
xor
add
dec
call
mov
cmp
sbb
neg
lods
cs
in
push
push
xor
adc
shl
dec
out
push
sbb
and
adc
scas
and
mov
out
(bad)
aam
int3
ins
xchg
retf
mov
addr16
in
out
dec
mov
imul
cmps
or
pop
les
(bad)
xchg
nop
in
ficom
enter
nop
sbb
push
shr
cdq
inc
sbb
mov
push
jmp
add
inc
inc
fcom
dec
lods
jge
mov
or
das
call
repnz
repnz
je
cmpxchg
cmps
popa
loope
int
repnz
imul
fnstsw
pop
pop
dec
jno
pop
sahf
add
jge
mov
xchg
fs
nop
mov
sbb
popa
push
ins
ret
mov
int
add
or
push
cld
sbb
repz
enter
nop
or
test
add
xchg
pop
mov
sub
mov
daa
test
out
pop
mov
mov
xor
jne
loop
clc
lea
jo
adc
fldenv
in
repz
mov
and
sub
inc
and
sahf
cmc
dec
inc
inc
repz
sahf
lods
mov
pop
das
sahf
arpl
cmc
fcmovnbe
stc
xchg
fst
mov
fnstcw
lock
xchg
jle
data16
xchg
push
inc
scas
shl
pop
stos
push
jnp
mov
mov
jae
dec
fsubr
xlat
mov
jb
lds
sti
mov
gs
and
ror
xchg
ror
rcr
or
das
sub
fst
jmp
mov
sbb
xlat
es
mov
outs
arpl
xchg
cwde
out
retf
cs
int3
cmp
in
jno
jns
ja
dec
movs
xchg
mov
xchg
test
add
xchg
lods
pop
jmp
outs
jle
inc
retf
stos
repnz
int
(bad)
push
push
mov
and
xor
jnp
xchg
jo
mov
jp
xor
fcmovb
ds
movs
jo
dec
rcl
sbb
mov
sti
js
xchg
jecxz
pusha
inc
or
or
add
nop
data16
mov
lods
aaa
cmps
in
jecxz
and
adc
inc
loop
dec
cmp
and
in
push
xor
push
nop
in
int3
leave
mov
push
or
and
int
mov
daa
fidivr
inc
sahf
in
(bad)
cmp
mov
xor
ja
fisubr
repz
std
lds
fadd
mov
jp
cmp
es
aaa
jno
push
jnp
mov
inc
retf
sti
cmps
push
int3
mov
xchg
xor
and
daa
pop
adc
(bad)
stc
jno
push
dec
out
scas
rcl
jg
popf
add
pop
xchg
ror
add
imul
lahf
push
in
int3
imul
sub
(bad)
ins
jmp
call
test
sub
(bad)
mov
jg
jmp
nop
cmp
cli
pusha
shl
ds
(bad)
cmp
mov
lods
imul
jo
aaa
fwait
mov
repnz
repnz
add
cmc
adc
jg
int
mov
lock
push
repnz
adc
mov
mov
shr
push
in
mov
dec
or
push
ins
jl
jmp
dec
push
retf
jp
aad
in
ins
mov
xchg
add
(bad)
and
adc
jb
stos
jg
pop
out
test
out
call
push
cwde
les
scas
rol
pop
xor
aas
ficom
es
popf
and
repz
mov
ror
cli
xor
sbb
out
rcl
mov
xor
inc
sbb
xor
sub
leave
or
dec
jbe
xor
idiv
popa
fcomi
inc
adc
frstor
or
and
iret
inc
les
fcom
ins
cli
xchg
xor
dec
xor
inc
jbe
jo
shr
and
push
adc
call
stos
mov
fsub
sbb
pop
cmps
add
(bad)
(bad)
mov
mov
mov
pop
outs
fs
aam
push
add
in
fs
mov
fisttp
mov
and
in
xor
add
test
std
push
retf
mov
lea
dec
ficom
pop
fcomp
dec
iret
pop
shr
xor
mov
mov
push
and
mov
call
mov
mov
inc
xchg
mov
inc
cmp
lock
pop
cmp
(bad)
cmp
or
jb
pop
jp
test
rol
outs
mov
mov
jmp
aad
and
pop
cwde
push
out
mov
push
lds
mov
and
lock
xchg
or
jo
and
inc
add
call
cdq
inc
pop
mov
jb
int3
(bad)
cmp
jmp
pop
dec
mov
loopne
jg
cmp
fdiv
aad
test
mov
push
jae
sbb
movs
push
int3
jo
mov
mov
cmp
(bad)
and
outs
loope
pop
(bad)
cwde
cdq
je
mov
push
or
sbb
(bad)
mov
xor
jbe
test
call
repz
mov
mov
popa
push
clc
sar
daa
mov
or
call
retf
minps
retf
or
scas
lods
push
jmp
bound
xchg
xchg
(bad)
imul
mov
xor
dec
sbb
jne
mov
mov
xor
push
jno
stc
xchg
fst
movs
ss
adc
out
push
and
loopne
sub
sahf
pop
sub
dec
test
mov
jecxz
adc
sahf
add
xor
shl
fdiv
cmp
lods
mov
cmc
push
push
fdivp
dec
iret
sub
xor
inc
cmp
jecxz
pop
cld
pop
lds
adc
cmp
in
pushf
cmp
fld
push
jmp
pop
repz
mov
cli
jmp
imul
fnstenv
loop
aas
call
and
sub
idiv
adc
imul
(bad)
in
cs
and
retf
je
or
mov
sub
mov
jg
mov
dec
xchg
int3
pop
jne
push
mov
arpl
dec
mov
jl
mov
xor
jecxz
cmps
retf
(bad)
xor
push
js
or
fisttp
xchg
leave
adc
js
cmp
cmp
add
cli
xchg
cmp
sub
stos
push
jmp
sar
push
cdq
nop
add
cmps
jle
test
lea
jecxz
mov
in
mov
cmp
xchg
outs
push
faddp
shl
ds
dec
push
and
mov
call
mov
stc
pop
jl
lods
rol
mov
leave
jmp
ins
sbb
dec
sar
and
ins
push
int3
call
jg
icebp
pop
in
mov
jne
cwde
sbb
add
out
jmp
into
stos
pop
and
inc
lods
enter
adc
push
stos
int3
aas
or
mov
and
mov
inc
mov
test
int3
rol
jl
stos
push
jge
dec
scas
add
push
movs
dec
das
imul
cs
sub
call
mov
sub
sbb
cmp
xor
sub
xor
cwde
mov
add
out
cmp
into
sub
and
repnz
jns
das
push
test
int3
jg
dec
jae
loope
in
xor
jp
push
clc
fnstsw
adc
ret
jne
pop
cmp
and
mov
dec
pushf
es
mov
cli
(bad)
xchg
cld
or
lds
out
fisubr
push
repnz
push
cmp
jg
arpl
xor
and
sbb
or
inc
retf
or
out
movs
jo
fistp
push
mov
(bad)
xchg
dec
xchg
add
pop
retf
retf
hlt
(bad)
mov
dec
ins
cmps
mov
popa
inc
sbb
jno
jle
(bad)
cdq
in
push
js
mov
jns
cmc
jg
mov
mov
les
push
movs
jne
dec
pop
movs
fs
in
mov
test
(bad)
icebp
sahf
push
loope
mov
sub
test
dec
test
and
push
out
stos
ins
jecxz
dec
mov
xor
inc
pop
jbe
push
add
mov
pop
jnp
inc
mov
push
adc
mov
pop
sbb
mov
mov
lds
icebp
push
sbb
inc
pop
aaa
imul
aad
cmp
clc
add
pop
retf
popa
outs
rol
jno
jnp
inc
cs
retf
outs
stos
std
stos
cs
xchg
mov
call
sbb
out
int3
clc
xor
stos
inc
or
fwait
in
out
rcl
shr
jo
test
sub
shl
jne
add
mov
out
push
addr16
into
pop
lods
jbe
adc
iret
pop
std
pushf
loopne
hlt
rcr
inc
cmps
mov
xlat
xor
and
test
popa
bound
mov
push
cli
pop
into
shl
push
push
push
test
data16
data16
xor
jnp
push
xchg
dec
push
xchg
dec
retf
ins
stos
retf
add
dec
in
lock
cmp
stos
mov
mov
xchg
adc
fild
in
pop
fisub
mov
retf
adc
mov
lods
inc
xchg
in
shr
ins
mov
leave
dec
fcomi
dec
mov
mov
jmp
sbb
shl
dec
dec
sti
popa
cdq
jne
mov
or
enter
push
add
out
fidivr
cli
push
mov
pusha
cmp
repnz
add
xor
ins
cmp
xor
test
pusha
add
and
or
mov
pop
cli
dec
out
jp
jmp
inc
scas
addr16
add
enter
adc
(bad)
cs
les
daa
push
in
stos
daa
gs
sbb
scas
push
jmp
xchg
push
xchg
mov
rcl
fsub
fsubr
inc
mov
adc
push
clc
sbb
lods
leave
and
cmp
out
int3
dec
psubsb
mov
mov
pop
retf
ja
test
fs
jo
dec
sub
ins
xor
jbe
scas
add
pusha
mov
cld
adc
ins
mov
call
pop
loop
jno
rcr
test
aaa
call
dec
xlat
aas
or
fidiv
fsub
inc
ja
push
jnp
fmul
in
out
mov
jge
xor
pop
jne
fsubrp
pop
or
dec
sbb
lds
xor
addr16
dec
clc
mov
shr
or
push
popa
push
sub
push
or
aas
(bad)
cld
in
int3
or
add
cli
out
lds
fisub
pusha
test
int
sbb
and
lds
movs
dec
mov
jp
jge
in
mov
aas
cdq
push
dec
mov
ins
add
xor
aas
jb
cmps
popf
sub
mov
bound
ret
sbb
inc
adc
mov
call
mov
jnp
arpl
loope
jg
stos
adc
sub
cmp
icebp
(bad)
jmp
fs
mov
cmps
jbe
sub
sbb
mov
push
arpl
imul
nop
push
int
sar
(bad)
imul
cld
cmps
repnz
add
ins
dec
push
mov
xchg
addr16
cmps
(bad)
dec
ffreep
xchg
ins
je
mov
push
dec
and
inc
and
out
cmp
dec
je
stos
ins
cmp
fmul
xchg
adc
imul
inc
pushf
adc
ret
pop
(bad)
sub
jl
inc
out
and
das
adc
xchg
jmp
fs
push
jmp
and
ins
pop
retf
test
enter
outs
inc
add
not
jo
sbb
dec
inc
call
adc
icebp
inc
push
imul
pop
xchg
stos
stos
sbb
dec
adc
inc
add
push
lods
jge
in
jp
push
inc
cmc
sub
or
and
mov
ret
loop
out
mov
call
mov
adc
mov
(bad)
lock
int3
mov
xor
in
mov
cmp
repnz
ficom
ror
adc
cmp
imul
in
dec
or
mov
xor
dec
cli
das
adc
and
push
rcl
iret
call
add
jge
jmp
int3
adc
push
xor
(bad)
jle
push
cmp
xor
mov
xor
pop
(bad)
arpl
scas
and
pop
ficom
ss
mov
pop
ins
pop
cld
shl
jbe
jle
repnz
inc
xchg
push
mov
push
addr16
mov
add
aaa
out
movs
sar
psrad
adc
mov
loope
mov
push
push
(bad)
out
add
(bad)
sbb
in
or
icebp
mov
in
retf
add
aaa
popf
test
ss
rcl
(bad)
adc
in
mov
push
dec
inc
add
mov
or
imul
or
(bad)
and
or
lock
jbe
xchg
ficomp
jmp
mov
vpsllw
test
pop
push
aaa
jg
pop
or
cs
data16
shl
iret
cmp
test
push
dec
jbe
xchg
lods
sub
dec
adc
jb
xchg
adc
jnp
xor
pop
xor
add
repnz
enter
or
inc
jb
cwde
loop
dec
lea
xchg
mov
inc
push
cmc
dec
mov
jbe
push
mov
push
rcl
cmps
push
jecxz
shl
inc
add
inc
in
lods
sbb
xchg
(bad)
les
loopne
push
cmps
in
int3
sub
adc
in
dec
rcr
fdivp
and
fs
pop
or
cmps
push
pop
popf
adc
movs
retf
sub
retf
and
adc
retf
lea
loope
and
and
pop
pop
pop
stos
sub
cmp
and
jg
enter
imul
mov
icebp
out
ins
dec
in
sub
test
call
neg
mov
aam
jbe
pop
fnstsw
ds
inc
mov
leave
ret
jo
test
push
push
mov
push
les
popa
jmp
popf
add
aad
daa
cmp
imul
outs
jbe
je
cmp
mov
bound
ds
cmps
xchg
sub
push
jmp
ficom
jns
push
adc
loopne
and
stc
sti
imul
sbb
adc
(bad)
pop
imul
sahf
lods
xor
xchg
mov
(bad)
push
lds
call
cs
fwait
sub
test
or
gs
xchg
push
lods
or
bound
or
xor
stc
jmp
loope
mov
pop
ja
and
adc
into
mov
push
or
lahf
mov
dec
inc
mov
jo
cmp
sbb
sub
xor
addr16
dec
pop
daa
lahf
push
outs
lods
jmp
pop
xchg
inc
test
out
test
adc
pushf
mov
fisubr
loopne
xchg
fs
cmps
aas
iret
je
xor
mov
out
mov
push
bnd
lock
nop
jo
gs
xlat
call
je
pop
and
movs
sahf
sub
das
push
mov
imul
es
(bad)
xchg
jle
scas
mov
stos
push
cmp
mov
and
or
std
clc
(bad)
and
sbb
dec
mov
push
movs
stos
add
jmp
cli
or
add
xor
jnp
icebp
or
aaa
add
jle
les
cmp
pop
cmp
loope
jns
sbb
jo
les
ret
pop
rol
push
adc
push
imul
mov
ret
icebp
push
or
sub
fmul
xchg
ins
inc
mov
jle
int
mov
scas
cli
lea
mov
mov
jns
pop
mov
mov
fisub
push
jbe
xchg
shr
mov
dec
sbb
out
loope
pop
jno
xor
xor
adc
inc
push
xor
aas
inc
fistp
xchg
mov
cmp
pop
adc
int3
int
mov
cmps
push
sbb
pushf
cmp
xchg
fwait
pop
js
push
pop
add
jns
(bad)
sub
mov
rcr
loop
das
add
sub
ficomp
leave
cmp
xchg
xchg
push
lods
ja
loopne
mov
or
adc
test
loope
sti
xor
jbe
dec
dec
outs
inc
dec
int3
and
sbb
outs
jl
xor
jp
mov
and
push
repz
js
retf
mov
in
mov
(bad)
dec
test
add
jne
loop
(bad)
jnp
outs
dec
add
push
mov
shr
dec
js
jno
sahf
daa
jge
add
fwait
out
inc
and
jb
retf
dec
mov
daa
outs
xchg
shl
call
arpl
mov
push
out
and
das
scas
mov
sbb
mov
mov
jmp
jmp
jo
icebp
add
mov
and
sub
sub
pop
mov
iret
clc
add
sub
pop
pop
test
dec
das
and
outs
cld
in
sbb
cli
inc
xor
push
add
hlt
(bad)
xchg
into
jl
xchg
cmp
test
pushf
xorps
shl
add
popa
xor
jno
pushf
inc
mov
test
dec
ret
and
shl
test
push
dec
jnp
call
mov
retf
movs
xchg
cmp
add
push
out
fdivr
jmp
jo
rol
xor
mov
and
pop
jne
nop
dec
mov
icebp
jno
(bad)
inc
jle
aaa
adc
push
jns
adc
cmp
popw
push
scas
mov
pop
sahf
add
stos
out
std
outs
inc
jg
lea
mov
xchg
ror
xor
inc
sub
test
sub
enter
test
cmp
push
mov
loopne
and
push
repnz
adc
sbb
lods
out
loop
stos
or
xchg
or
int
fsubr
push
popf
xchg
xchg
push
clc
gs
and
cmp
(bad)
sbb
(bad)
cwde
add
add
add
mov
xor
add
nop
in
fcom
sub
(bad)
jl
jno
xchg
aaa
jns
jle
and
movs
xor
xchg
dec
sub
and
ret
data16
ins
fstp
mov
pushf
outs
repz
xchg
inc
xor
adc
rcl
push
mov
pop
xor
aad
push
jno
or
mov
lods
mov
hlt
jmp
stos
mov
jg
jge
xlat
add
out
dec
popf
iret
cmc
sub
mov
push
fldcw
call
dec
pop
jo
imul
cmp
xor
loopne
or
aaa
pop
outs
pop
dec
adc
outs
pushf
push
(bad)
popa
je
xchg
or
cmps
add
mov
cdq
stos
and
mov
push
add
jae
in
ds
hlt
call
not
jns
sbb
std
stos
xchg
mov
xchg
jmp
shr
std
pop
test
ins
add
mov
(bad)
ret
outs
jecxz
or
es
pop
aas
popa
push
aad
in
fucomip
in
sbb
in
add
adc
cmc
loope
fisttp
clc
ins
sbb
cmp
cmp
loope
ror
js
add
mov
je
repnz
jmp
dec
outs
mov
ja
loop
iret
mov
mov
outs
inc
mov
std
or
jne
out
fld
pop
pusha
and
mov
xchg
xchg
test
fadd
jae
das
loop
pop
and
add
js
adc
or
mov
shl
ds
mov
push
adc
repnz
retf
xor
ret
cmps
dec
cmp
inc
mov
pushf
leave
(bad)
and
lea
ins
pop
add
inc
(bad)
ss
cmp
or
stos
xchg
mov
add
fdivr
sub
xchg
mov
xor
ror
div
test
or
clc
push
cmps
or
add
dec
mov
jle
mov
jge
mov
stc
pop
icebp
stos
bound
loopne
mov
sub
daa
jbe
not
ins
pusha
adc
inc
mov
cmc
pop
sub
imul
out
jge
js
stos
pop
je
pop
xor
dec
inc
sbb
(bad)
push
ret
retf
and
enter
or
adc
jns
pop
sbb
pop
shl
xchg
int
aam
mov
push
movs
or
imul
(bad)
test
pop
movs
es
ret
add
inc
div
inc
jge
movs
xor
push
pop
std
mov
shr
pop
cmp
(bad)
cmp
iret
adc
cdq
fisub
xor
push
retf
push
repz
sub
iret
ss
xchg
push
clc
cmp
in
ja
fisubr
scas
(bad)
call
int
push
shr
add
popf
ins
inc
pop
repz
stc
jno
adc
daa
jne
xchg
dec
ret
pop
icebp
and
push
jmp
stos
mul
push
xor
fist
xchg
xor
icebp
sbb
arpl
adc
dec
mov
pop
nop
jb
dec
sar
xor
popf
adc
rcl
into
ret
mov
jns
or
inc
and
jge
sti
jbe
push
addr16
push
jge
cli
pop
sub
sub
retf
stc
shl
jmp
popf
sahf
jae
xchg
addr16
rcr
lock
jno
mov
in
cmps
int
or
mov
inc
cmp
lods
stos
adc
mov
inc
(bad)
and
scas
sbb
or
pushf
sbb
mov
or
in
pop
rcl
enter
aam
int3
push
xchg
dec
lock
call
inc
xor
push
xchg
cmps
lods
cmc
pop
aad
addr16
call
idiv
xchg
out
scas
ins
add
add
mov
es
jae
jno
in
push
aaa
(bad)
aad
sub
push
dec
jnp
sbb
js
inc
popa
pop
xor
push
int3
push
jg
xor
fwait
aas
int
test
adc
cmps
iret
sub
mov
pop
daa
xor
sub
rol
arpl
loope
lea
cmc
push
int3
sbb
stos
jle
cdq
das
fdivr
push
cmc
add
movs
pushf
repz
shr
int3
push
mov
sub
and
pusha
stc
(bad)
outs
pop
push
int3
push
pop
std
mov
ins
int
popa
xchg
loop
sbb
aas
call
or
push
lds
icebp
mov
xor
pop
or
cs
fiadd
sbb
out
loop
or
imul
imul
cmc
jae
sub
jae
push
xchg
jecxz
pop
in
arpl
adc
test
into
mov
jmp
inc
ror
dec
sbb
add
ds
outs
shl
scas
fiadd
jo
aaa
cmp
mov
add
mov
sub
sbb
cmp
shl
sti
dec
mov
jne
call
out
test
xchg
popf
mov
cmp
or
ja
xchg
lds
sub
(bad)
cmp
mov
lods
stc
push
xchg
mov
and
dec
cmp
movs
(bad)
push
cmp
sar
pop
call
mov
lock
fiadd
push
mov
mov
xor
ret
bound
pop
(bad)
xor
and
or
jo
les
test
dec
ss
adc
(bad)
mov
lahf
adc
mov
stc
fidiv
fmul
pusha
jle
or
mov
ret
cmp
jmp
std
push
jle
das
bound
inc
push
sub
dec
pop
and
and
cmp
int3
daa
je
mov
cmp
xchg
xlat
in
adc
sti
pusha
cmp
cmp
xor
neg
addr16
jns
(bad)
das
fild
jo
(bad)
iret
jmp
mov
adc
stos
imul
xchg
jge
mov
and
sbb
shl
aaa
mov
jo
jmp
pop
lods
cmp
or
nop
push
push
fist
lods
icebp
jl
int
scas
sub
jo
dec
push
and
jmp
push
inc
mov
or
icebp
rcr
fstp
hlt
sar
aad
adc
inc
movs
nop
pop
inc
shl
xchg
stos
or
sar
leave
mov
rol
add
cli
fst
mov
jge
rol
fimul
mov
cmp
sbb
dec
dec
(bad)
sbb
mov
inc
push
jmp
adc
mov
shl
xor
cld
int3
into
pop
int3
fsubr
fwait
mov
mov
jmp
cdq
push
xor
inc
enter
out
cmp
inc
icebp
sub
jg
scas
mov
pop
test
das
imul
push
bound
mov
inc
pop
test
cdq
add
push
jmp
pop
pop
dec
out
loop
adc
mov
iret
dec
repnz
cs
imul
adc
test
mov
in
sub
or
add
mov
and
adc
mov
das
movs
imul
bnd
or
jns
mov
xchg
cmp
sar
loop
mov
xor
movs
jecxz
inc
(bad)
int
dec
dec
jg
in
fwait
ins
lds
arpl
stos
mov
fdivr
dec
jg
cmc
in
mov
test
xchg
pop
sub
push
xchg
mov
es
push
nop
nop
test
xor
add
test
inc
pop
lock
fwait
cs
jle
adc
mov
dec
sbb
fmul
add
jmp
jmp
mov
lock
push
pop
mov
std
test
popf
dec
xchg
movs
inc
cwde
inc
xor
leave
in
aam
or
sbb
push
hlt
jno
pop
cmps
xor
adc
jo
arpl
cmp
push
lods
sub
mov
cmc
out
adc
cdq
imul
cmp
mov
ror
lods
pop
inc
cli
pop
pop
popf
mov
ins
rcl
add
gs
mov
mov
inc
xchg
outs
mov
enter
cmp
sti
gs
(bad)
cmps
in
mov
inc
mov
fidiv
dec
(bad)
dec
(bad)
(bad)
or
or
and
push
popa
fs
int3
or
movs
int
pop
arpl
das
lods
mov
pushf
push
cmc
ret
rcl
fsubr
pop
test
leave
xchg
hlt
and
jge
lahf
enter
fst
jbe
and
mov
data16
sti
iret
or
shr
add
sub
lds
xchg
mov
sbb
ret
retf
retf
mov
ret
outs
mov
adc
sub
jne
sub
or
push
push
jp
cmp
xchg
inc
ds
dec
dec
mov
fdivrp
and
or
shr
shl
push
js
inc
push
(bad)
icebp
in
sbb
test
imul
cmp
jmp
push
aad
mov
pushf
xor
stc
das
or
in
sti
pop
outs
cdq
dec
dec
push
in
dec
cmp
out
shl
lock
lock
and
(bad)
dec
mov
idiv
push
and
popa
mov
sbb
mov
retf
jge
data16
mul
mov
or
ja
les
mov
sub
fsub
inc
pmaxub
xchg
push
mov
sub
js
sbb
rol
xchg
mov
or
cwde
popf
jl
imul
imul
sub
adc
inc
scas
adc
or
daa
mov
mov
jl
push
push
into
ss
or
jne
sub
pop
sahf
pushf
mov
sub
sbb
push
xchg
sbb
(bad)
and
push
xor
scas
in
cmp
adc
mov
jns
test
or
not
jno
aaa
dec
sbb
ins
mov
ins
rcl
xor
das
mov
xchg
push
adc
lea
das
ror
pop
jo
inc
sub
xor
scas
jge
into
pop
sti
sahf
push
ja
loop
push
push
push
rol
jg
pop
mov
mov
or
or
mov
push
mov
sar
cmp
mov
jb
fsubrp
das
arpl
push
xchg
mov
jmp
dec
push
cmps
mov
dec
in
xor
push
sub
sub
xor
and
lock
and
cwde
daa
cmc
add
add
mov
mov
mov
fcomp
xchg
or
inc
adc
(bad)
mov
imul
jmp
mov
in
leave
clc
retf
out
cdq
add
mov
dec
loop
sahf
(bad)
fimul
test
pop
fs
loop
repz
add
xchg
(bad)
js
cld
push
ins
fwait
push
bound
in
jmp
adc
bound
sahf
xchg
pusha
dec
mov
push
mov
mov
into
dec
jns
out
bound
outs
mov
push
icebp
inc
dec
aas
in
fs
cdq
lock
aad
vsubss
jb
sub
test
adc
inc
pop
pusha
(bad)
dec
mov
pop
xor
fist
movs
out
bound
pusha
xchg
lds
mov
mov
iret
enter
out
mov
inc
ja
inc
dec
mov
outs
dec
xor
pushf
add
inc
adc
repz
cmp
clc
push
aad
pop
mov
aam
jecxz
ds
movs
xchg
xor
cmp
adc
jnp
fwait
int
mov
mov
pop
cmp
push
adc
mov
mov
aas
jo
ins
push
sbb
shl
pop
int
push
mov
lahf
fsub
popa
bound
(bad)
cmp
mov
fnstsw
xlat
add
cdq
xor
or
sbb
fst
mov
add
add
push
adc
call
rol
jl
(bad)
stos
in
je
pop
shr
xchg
mov
int3
punpckhwd
adc
mov
dec
scas
fistp
out
cmp
mov
sbb
scas
cmp
(bad)
mov
adc
pop
(bad)
aam
sub
inc
cld
xor
xchg
xchg
fmul
ss
sbb
cld
sbb
sbb
out
add
stc
cld
in
les
inc
pushf
push
push
and
pushf
pop
lock
repnz
shl
mov
stos
jnp
lods
rcr
pushf
jo
fcmovnbe
cli
enter
xor
add
retf
inc
add
call
jp
cmp
mov
lods
sub
jle
jo
aad
ret
add
test
out
pop
iret
add
add
sar
js
(bad)
mov
mov
xchg
xor
clc
inc
sub
pop
mov
imul
jp
lea
ret
pop
add
adc
mov
dec
mov
es
push
mov
sbb
es
jnp
sahf
sub
(bad)
add
data16
ret
sar
lahf
push
sub
jae
or
jecxz
test
or
sub
pop
fst
ret
aaa
icebp
aam
scas
xlat
cmp
repnz
mov
std
or
jp
push
add
sbb
into
fwait
outs
cmps
shl
cmp
repz
or
mov
cmp
gs
cmps
mov
gs
mov
sub
dec
or
pop
mov
out
out
into
pop
sub
inc
inc
int
push
jecxz
jmp
cld
test
aaa
cdq
movs
fimul
or
jbe
(bad)
dec
jno
jle
mov
call
jl
cmp
ficomp
jae
mov
ss
aaa
lods
mov
lods
mov
fbstp
and
adc
aas
shr
push
loopne
ret
outs
and
cwde
into
iret
cli
nop
mov
stc
cmp
fidiv
mov
sub
test
adc
sahf
or
and
xchg
in
fnstsw
adc
or
jp
(bad)
cwde
ror
push
mov
mov
mov
mov
xchg
push
into
adc
icebp
clc
cmps
sub
adc
sbb
out
or
mov
jae
dec
and
mov
ins
jno
std
mov
test
xor
cli
inc
fwait
push
xchg
jecxz
inc
xchg
mov
and
cmps
jmp
ret
jmp
push
or
ja
xchg
out
mov
cwde
scas
loope
push
shl
adc
xchg
sub
cmp
xor
or
shr
fisub
iret
pop
xchg
push
sub
jnp
inc
(bad)
sub
dec
and
sbb
jne
push
push
xchg
sub
xchg
mov
mov
sub
imul
inc
ror
mov
mov
(bad)
outs
outs
ja
pop
xor
popa
aam
push
jp
scas
pop
arpl
mov
add
mov
ja
adc
mov
add
add
push
pop
fisttp
mov
xchg
adc
in
pop
xchg
inc
push
(bad)
(bad)
add
cld
popa
icebp
push
xor
loope
mov
ins
add
mov
inc
pop
cmps
imul
dec
lahf
sbb
mov
inc
sub
mov
sub
sbb
inc
sar
cmp
ds
cmps
cmps
fcomp
mov
dec
retf
mov
mov
mov
movs
adc
cld
int3
dec
pop
sub
int3
test
les
mov
or
pop
push
outs
pop
lock
jge
lea
mov
ret
mov
in
cmp
pop
xor
mov
retf
xor
fbstp
jo
pop
sbb
js
ret
add
mov
cli
cmc
mov
(bad)
stc
cli
sbb
fisubr
jns
lods
out
push
loop
mov
cmp
sub
fnstenv
push
cli
xor
ins
scas
es
fs
retf
mov
mov
push
push
scas
inc
adc
xchg
ror
stos
adc
stos
cmp
movs
xchg
cmp
fxch
pop
sahf
mov
xor
pop
int3
shr
inc
jl
rol
out
test
aad
xchg
clc
enter
out
or
push
jmp
pop
mov
adc
ins
pop
aad
outs
and
cld
sbb
les
in
push
pop
mov
stc
(bad)
mov
inc
js
mov
out
fsubrp
xor
ds
jl
adc
sti
cmc
cmp
lods
in
and
fidivr
mov
fsqrt
push
add
xor
lods
popa
adc
sahf
popa
xor
mov
push
das
push
xlat
pusha
int3
pop
bound
mov
and
mov
pop
fdivr
pop
jg
outs
ins
stos
aad
(bad)
and
mov
jno
mov
retf
xchg
mov
call
hlt
sbb
scas
ds
es
icebp
bound
pop
popf
cmp
in
or
dec
and
sbb
je
fld
aad
lds
test
es
push
push
enter
xor
jg
imul
out
pop
(bad)
stc
jb
imul
pop
inc
aad
repz
xlat
sbb
jo
mov
cmp
add
in
sbb
adc
push
add
push
in
test
sub
ja
stos
test
idiv
cmp
jmp
fwait
cmp
jg
ret
push
fcmovne
push
xor
mov
pushf
fistp
push
mov
adc
inc
mov
lods
cli
jecxz
ror
xchg
cmp
inc
ss
or
cmps
mov
imul
xlat
call
mov
jns
jns
and
dec
imul
ret
dec
test
adc
xchg
ins
push
push
cmps
iret
push
icebp
hlt
out
popf
jle
stos
add
outs
xor
xlat
xchg
loopne
push
in
shr
test
and
sub
imul
sub
add
push
and
pop
mov
nop
lahf
(bad)
clc
push
lahf
xor
es
rcr
idiv
or
in
(bad)
repz
ret
fcom
xor
arpl
mov
call
or
je
fistp
out
xchg
push
or
jg
lahf
mov
inc
push
pop
cmp
jmp
ins
cmp
xor
outs
hlt
mov
popf
push
xchg
cli
mov
out
rol
xor
ret
retf
mov
cli
push
jg
or
mov
mov
div
or
addr16
gs
call
adc
xchg
jmp
adc
loop
shl
rcr
mov
or
(bad)
sti
ret
cld
test
dec
stos
pop
fidiv
mov
xor
sbb
cdq
xchg
sbb
push
dec
sbb
push
sub
ins
jb
mov
push
add
(bad)
shl
inc
fisub
in
sub
add
clc
add
pusha
out
sub
jnp
rol
and
sub
clc
stc
xchg
cs
xchg
dec
pop
cmp
add
adc
mul
jmp
and
cmp
scas
adc
pop
add
adc
push
mov
mov
xor
retf
(bad)
shr
(bad)
ins
call
sub
fbstp
stos
push
push
sub
and
mov
in
sbb
fisub
mov
cwde
scas
imul
and
jb
fucomp
and
inc
enter
in
int3
push
mov
and
test
scas
and
and
inc
cmp
sbb
sbb
mov
xchg
hlt
and
cmps
bnd
std
imul
ja
push
in
sbb
iret
sub
jle
test
std
int3
in
xor
movaps
mov
pop
xchg
xchg
fist
jae
cdq
nop
adc
xor
lahf
jne
push
out
jb
or
idiv
cs
movs
imul
(bad)
sub
or
adc
iret
in
fwait
lea
mov
pop
dec
ret
inc
gs
out
mov
sbb
arpl
jno
mov
mov
sub
nop
and
and
or
in
ficom
sbb
dec
sub
add
xor
add
popa
mov
nop
jmp
ret
neg
(bad)
cmp
inc
mov
xchg
pop
sub
sahf
add
cmp
push
je
cmp
jnp
(bad)
mov
rcr
pusha
test
out
in
pop
popa
or
(bad)
outs
mov
shl
shl
int3
push
pop
sub
in
sahf
outs
and
loopne
fstp
add
pop
lea
mov
jmp
push
ret
lods
sub
adc
mov
push
cmc
(bad)
mov
push
fdivr
cs
cmp
arpl
fwait
scas
ret
stos
mov
mov
sub
outs
sub
mov
pusha
mov
pushf
push
mov
mov
dec
adc
sub
xor
daa
scas
addr16
mov
sahf
sar
call
cmp
loop
inc
adc
call
movs
loop
cdq
test
lahf
mov
cdq
call
mov
ret
rcr
push
shl
lds
scas
ror
mov
xchg
sbb
mov
jmp
sub
sub
xchg
enter
(bad)
das
cmps
jmp
pop
das
cmp
test
pop
jecxz
aaa
cmp
imul
iret
scas
mov
data16
movs
stc
or
pop
sub
inc
out
(bad)
scas
jns
mov
mov
data16
jbe
rcl
test
ins
and
call
jno
xchg
sti
pop
movs
hlt
xchg
hlt
ret
in
mov
out
xor
loope
outs
add
mov
repnz
sbb
dec
jg
jmp
push
mov
pushf
mov
or
mov
sar
xchg
dec
stos
push
imul
lahf
movs
pop
das
inc
movs
push
and
out
nop
push
pusha
pop
pop
out
repz
cdq
sbb
neg
je
xchg
jne
loop
mov
mov
xchg
xor
out
dec
scas
(bad)
fcmovnbe
ficom
not
jecxz
cmp
in
mov
pop
jae
sub
mov
inc
bound
push
ret
jbe
gs
not
pop
mov
mov
xlat
xchg
mov
stos
(bad)
clc
fwait
iret
repz
cwde
cmp
aas
imul
adc
mov
(bad)
out
and
xchg
jmp
fsub
xchg
test
pop
aas
pusha
push
nop
push
xchg
mov
inc
xchg
popf
or
jl
mov
mov
jmp
jl
loopne
fs
out
pop
mov
daa
push
js
cmp
inc
pop
dec
lock
xlat
lahf
sti
ret
sub
repnz
popa
inc
push
jne
mov
in
jne
fst
xor
cwde
mov
ret
push
cmp
xor
pushf
adc
pop
adc
sar
ins
les
inc
shr
retf
lods
inc
xlat
rcr
aaa
adc
loope
hlt
cmp
adc
(bad)
cmp
outs
push
mov
sub
aaa
shl
rol
std
stos
test
dec
or
jo
jp
cs
ret
retf
jmp
jp
mov
aam
sbb
or
mov
imul
hlt
xchg
inc
push
xor
sar
idiv
iret
out
or
gs
sti
xor
sbb
lahf
outs
mov
pop
into
xchg
sbb
int
xchg
shr
cmp
jmp
mov
ins
push
sub
jmp
js
test
push
mov
mov
and
jg
xchg
mov
push
xchg
shl
add
fist
loop
cmp
jmp
pop
out
lock
out
hlt
push
loopne
mov
ss
mov
xchg
jmp
sbb
js
inc
shr
(bad)
mov
test
or
ret
mov
push
inc
call
scas
xor
retf
ret
adc
or
lds
lea
sub
dec
and
lods
fisttp
jb
sbb
popf
in
int
sub
inc
adc
icebp
aam
out
jns
cld
push
shr
push
imul
or
lock
dec
in
cmp
call
push
ins
(bad)
jp
cmp
jge
loope
pop
sub
data16
mov
hlt
lds
add
test
aad
jl
leave
sub
mov
and
inc
mov
(bad)
fs
mov
jmp
in
dec
call
ja
sbb
add
sbb
in
pop
je
adc
add
jo
mov
pushf
clc
and
pop
add
lea
arpl
adc
loopne
stos
mov
dec
push
inc
or
stos
shr
outs
fs
push
shl
into
ffreep
jns
push
into
ret
sbb
and
pop
jne
or
xchg
and
cwde
jnp
sub
and
and
ds
fdiv
cmp
aas
or
pop
stos
imul
aaa
es
mov
aas
pop
ss
or
in
adc
enter
sbb
xor
mov
std
inc
mov
test
xor
lahf
push
jb
out
hlt
sar
inc
xor
cli
daa
and
xchg
xor
sbb
ret
movs
dec
dec
fcom
test
push
pop
cmp
pop
out
push
dec
and
jmp
xor
mov
push
fucomi
xor
les
addr16
outs
xchg
ss
mov
jl
jbe
call
jb
(bad)
mov
fstp
pop
pop
addr16
push
jecxz
ret
or
int3
jne
dec
mov
mov
xor
loopne
pop
scas
outs
shl
pop
or
mov
inc
pop
shl
push
retf
xor
pop
loope
(bad)
and
add
add
xchg
lds
out
mov
loope
pushf
push
cmp
cld
jae
adc
ret
clc
add
mov
push
sbb
pop
std
pusha
add
inc
push
dec
cwde
gs
(bad)
xor
and
add
mov
push
xchg
or
inc
(bad)
jp
ret
aam
aad
xor
mov
rcl
mov
add
xor
and
mov
fcomi
push
and
dec
jg
push
inc
sub
or
jle
pusha
es
adc
dec
sahf
mov
push
std
push
lea
je
fwait
cmps
xchg
ins
fild
(bad)
lods
pop
call
dec
ins
xor
fisttp
ret
stc
xor
pop
stc
push
sahf
or
mov
fstp
mov
shl
inc
std
arpl
(bad)
out
or
jg
aas
retf
xor
popa
clc
outs
inc
jecxz
jbe
ds
sub
and
aaa
dec
and
dec
(bad)
les
hlt
jo
pop
mov
jno
ret
mov
retf
cmp
fbstp
outs
call
cmp
rcl
xchg
inc
(bad)
pop
je
dec
pop
ret
add
js
xchg
or
fincstp
pop
sub
movs
mov
les
iret
xchg
ret
xchg
adc
mov
mov
call
adc
mov
xor
bswap
movs
add
pop
iret
rcl
adc
cmp
clc
jecxz
(bad)
repnz
dec
fistp
cmp
mov
jmp
cmps
pop
fist
fild
mov
out
pop
pop
sbb
or
add
rcl
retf
cwde
mov
xor
out
clc
aas
sub
cmc
sub
test
dec
fmul
dec
int3
pop
shr
adc
sbb
and
adc
add
fs
add
out
push
mov
push
sub
jbe
xor
aad
cmps
(bad)
jbe
jg
sub
push
imul
push
shr
(bad)
rcr
push
fisubr
pop
xchg
cwde
(bad)
jmp
pop
inc
add
rcr
add
mov
push
and
rol
in
ins
xchg
fstp
in
mov
jmp
ror
cmp
fwait
mov
gs
fwait
(bad)
adc
sbb
xor
pop
(bad)
adc
cmp
mov
into
ss
ins
inc
int3
scas
std
shl
jb
mov
out
sbb
out
cmps
push
(bad)
call
fld
rcl
enter
add
xchg
bound
sti
mov
sbb
push
mov
in
clc
cli
fisub
les
int3
sub
add
stos
test
mov
dec
retf
xor
add
jno
adc
bound
cmp
(bad)
ins
jne
jb
popa
in
xchg
sub
fdiv
jecxz
inc
addr16
mov
(bad)
ror
mov
dec
xchg
ins
mov
imul
data16
(bad)
fld
jno
stos
nop
int
in
and
sub
int
or
sub
cmps
push
shr
jbe
inc
test
div
call
and
mov
(bad)
hlt
pop
push
mov
or
cli
mov
xor
test
test
xchg
(bad)
mov
js
(bad)
xchg
adc
sbb
push
fcomp
push
call
sub
xor
mov
dec
aam
jb
fistp
sbb
(bad)
xchg
in
pop
mov
mov
inc
call
in
sub
jb
imul
xor
cwde
add
clc
repz
ds
and
pop
jmp
iret
jmp
ins
cmp
aad
idiv
push
out
inc
mov
push
jmp
jb
scas
and
pop
into
retf
fcomp
or
int3
sub
push
(bad)
sar
sub
and
mov
addr16
jnp
das
jne
add
rcr
pop
dec
sub
xor
or
outs
add
dec
fnstcw
xchg
xor
add
adc
fsub
xor
mov
xor
sub
and
fsub
push
and
mov
and
cs
sti
aam
pop
cmp
push
and
or
std
popf
push
sbb
(bad)
mov
repz
pop
jae
xchg
lea
jb
sub
dec
push
or
idiv
shl
test
mov
and
sbb
and
sbb
push
add
dec
aaa
retf
add
les
addr16
adc
jb
add
les
jo
cmp
xchg
and
mov
add
iret
shl
jp
or
and
dec
push
icebp
int
stos
mov
adc
mov
mov
xchg
sub
aaa
pop
xchg
into
mov
push
(bad)
fld
add
jns
cwde
dec
es
push
dec
fstp
ror
out
adc
inc
sbb
jp
cdq
lds
or
adc
sbb
jg
stos
pop
sub
inc
jns
(bad)
cld
mov
out
mov
push
inc
and
jns
adc
gs
mov
lahf
lock
push
std
leave
push
xlat
mov
add
pop
outs
adc
addr16
push
dec
sbb
xchg
mov
dec
xor
and
mov
dec
int3
pop
cmp
enter
pop
jp
je
aad
cld
fiadd
loope
or
loope
xchg
rcr
(bad)
cmc
clc
movs
mov
mov
add
sbb
int
sbb
rol
or
sbb
imul
sub
pop
sub
lds
leave
mov
cmp
fist
jmp
mov
gs
mov
loope
dec
rcl
and
sub
push
out
jmp
push
and
xor
push
js
push
push
pop
jl
xchg
mov
fisub
push
fld
outs
dec
mov
pop
add
add
jns
popf
(bad)
fdivr
jp
mov
repz
jnp
or
sub
mov
repnz
mov
sbb
test
add
aad
iret
and
pusha
push
cmps
mov
xor
or
inc
xchg
pusha
(bad)
rol
cmp
jb
stos
outs
int3
jns
cmps
adc
jbe
mov
and
stos
add
mov
int3
push
in
pop
out
div
mov
inc
push
sbb
cmp
jo
mov
push
loop
inc
pop
arpl
ficomp
(bad)
xor
jmp
or
mov
jecxz
enter
out
xchg
push
jecxz
and
mov
add
add
mov
call
mov
mov
push
jmp
ss
sub
loop
push
mov
imul
scas
mov
(bad)
stos
das
or
test
in
stos
rcl
xchg
cmp
cbw
scas
mov
pushf
dec
inc
shr
(bad)
mov
lahf
mov
outs
add
fcmovb
pop
xor
in
lods
push
aaa
rcl
shl
aas
rcr
lds
add
out
ret
and
ret
es
lea
das
or
jae
das
bound
mov
mov
out
pushf
xchg
ins
jp
mov
mov
push
dec
mov
pop
mov
mov
cmp
enter
and
sub
and
lods
add
sub
enter
les
int
cld
jge
cmp
nop
leave
sbb
adc
xchg
xchg
lock
cmp
ss
loop
(bad)
jecxz
pop
leave
aas
movs
jbe
xlat
inc
aas
gs
cmps
sub
mov
out
adc
sbb
movs
mov
add
aad
imul
push
xor
xor
movs
sub
push
mov
inc
cmpps
mov
dec
pop
data16
sbb
mul
ja
xchg
mov
xchg
fldenv
adc
dec
jmp
dec
fsubr
aaa
outs
mov
add
stos
or
sbb
mov
cld
mov
push
aad
jbe
pusha
mov
push
rol
into
xor
repz
pop
jbe
aas
mov
inc
adc
mov
mov
movs
scas
iret
sbb
fild
push
lods
sahf
adc
jl
imul
mov
in
or
test
retf
fs
movs
inc
or
adc
mov
xor
mov
lock
pop
xor
xor
inc
mov
imul
sar
mov
test
lods
in
cmc
push
mov
mov
inc
pop
in
(bad)
xor
rcl
arpl
movs
add
adc
call
not
or
and
mov
push
xchg
imul
loope
inc
add
cmp
mov
test
add
icebp
comiss
stos
xlat
div
retf
adc
jne
or
mov
stos
push
or
inc
pusha
das
jp
push
mov
jecxz
dec
loopne
jne
fbld
(bad)
mov
int
mov
lock
rol
sbb
dec
adc
xchg
sub
xchg
(bad)
and
pop
push
sahf
pop
add
jno
cmc
and
cmps
fidiv
retf
xor
sbb
popf
cmc
pop
imul
add
add
movs
mov
cmc
inc
push
rcl
mov
scas
loope
lods
xchg
xchg
xchg
int3
or
or
sbb
xchg
xchg
sbb
or
ror
mov
xchg
add
shl
push
mov
test
mov
pop
aas
mov
test
dec
dec
sbb
mov
jns
stos
rol
cmps
(bad)
fwait
or
or
ret
jb
xchg
repnz
in
push
mov
adc
push
gs
or
call
nop
aad
push
lods
rcr
inc
sbb
cld
call
sar
lahf
pop
adc
in
imul
mov
jle
iret
das
shl
ss
add
push
inc
repnz
or
adc
jae
aaa
mov
mov
(bad)
mov
jnp
jle
dec
iret
mov
sbb
ds
cmc
ret
jle
dec
je
adc
xor
mov
(bad)
pop
sub
push
mov
mov
and
shl
dec
mov
sub
push
retf
pop
out
cmp
or
add
mov
into
test
or
repnz
jae
xchg
mov
sub
add
sub
adc
test
je
sbb
imul
jno
(bad)
out
add
pop
in
dec
cmps
push
push
int
sub
sbb
pusha
inc
xor
adc
jp
adc
leave
in
bound
fcomp
adc
push
xchg
push
popfw
dec
push
ins
repz
sbb
clc
sub
and
cmp
pop
out
push
stos
pop
add
jmp
adc
into
call
(bad)
int
cdq
ss
xchg
shr
cmp
push
mov
fsub
retf
xlat
and
ja
lea
mov
add
add
fst
jo
bound
mov
cmps
idiv
push
sbb
fwait
jp
sbb
ja
ror
das
test
dec
mov
dec
push
push
test
int3
aas
repnz
fsubr
dec
mov
sbb
shl
inc
push
data16
sub
imul
or
test
inc
pushf
out
repz
ins
push
mov
adc
mov
adc
retf
jb
push
sub
(bad)
lea
das
xor
sahf
gs
(bad)
xchg
cmps
adc
lods
add
dec
xchg
mov
sub
add
push
cmp
mul
icebp
sti
in
in
jmp
add
sbb
jl
ins
mov
call
std
aam
ror
jno
daa
push
sbb
push
pop
add
test
mov
test
add
push
(bad)
in
js
and
loope
pop
xchg
cmps
jmp
pop
xor
loopne
mov
sub
pop
cmps
bound
inc
inc
ds
xor
lock
aaa
test
fistp
dec
mov
mov
mov
add
and
lods
inc
xor
mov
dec
add
nop
xchg
fidiv
lds
mov
pop
sbb
mov
rcl
sahf
push
mov
add
pop
mov
call
popa
stos
test
cli
iret
push
sub
push
(bad)
out
xor
in
pusha
repz
sbb
mov
rol
mov
mov
popa
je
test
bound
or
sbb
mov
jecxz
sbb
enter
jp
cmp
xchg
mov
ins
fist
cmc
mov
add
mov
inc
or
push
push
adc
call
ds
sbb
fidiv
cmps
ins
rcl
xlat
fcom
fild
inc
adc
sub
mov
int
sub
jns
adc
push
mov
retf
sar
xlat
ret
push
add
out
scas
and
les
mov
push
and
add
adc
aad
cmp
mov
imul
mov
je
pop
mov
fsub
push
movs
adc
cmps
(bad)
clc
jle
jne
cmc
sbb
pushf
pop
pop
bound
aad
int3
lahf
xchg
mov
lds
pushf
repz
shr
inc
push
inc
cmps
xchg
or
jecxz
and
sbb
pop
sub
adc
mov
mov
sbb
stos
lds
sub
call
add
add
(bad)
push
or
rep
add
inc
jg
lock
push
sbb
fld
and
movs
cmps
add
das
pop
cmp
mov
push
push
pop
sbb
sbb
push
dec
or
fbld
mov
fist
and
enter
inc
std
jmp
mov
je
inc
pop
and
lods
leave
popf
sub
loope
dec
dec
sbb
std
cld
pop
or
in
adc
repz
sub
imul
ss
fld
mov
and
jle
clc
pop
mov
fisttp
pop
fdivr
cmp
adc
adc
ret
inc
sub
adc
mov
push
jb
xchg
stc
inc
adc
stos
mov
(bad)
fcomp
mov
jne
xor
adc
in
jo
jle
out
cmp
mov
inc
xchg
xchg
cmp
push
jbe
imul
ja
dec
add
mov
jbe
je
aaa
mov
rol
lods
aas
stc
inc
test
inc
jb
test
dec
mov
cmp
mov
sub
loopne
pop
movs
out
jno
xor
sbb
out
push
cmp
pusha
push
int
into
jae
cmp
sub
mov
call
pop
cmovb
adc
cmp
push
xor
xlat
inc
push
inc
out
xchg
pop
cmp
fdivr
jl
repz
jl
jns
or
add
mov
(bad)
in
xor
or
adc
ret
dec
mov
imul
mov
aaa
or
dec
mov
jbe
jp
pop
loopne
cmp
shr
and
jne
sti
add
adc
push
cmp
xchg
bnd
ja
push
shl
xchg
or
cmps
or
neg
mov
jp
push
sbb
sub
loope
mov
sub
or
les
dec
inc
shr
adc
dec
jge
mov
fimul
es
xlat
imul
aas
mov
cmps
mov
dec
xchg
fs
adc
or
mov
fwait
mov
push
mov
xchg
ss
dec
pop
and
adc
fdivr
pop
cmps
sub
icebp
lock
add
pop
jmp
into
xor
cwde
mov
push
int
mov
jl
sub
mov
dec
push
pop
mov
stos
xchg
js
add
or
pop
xor
pop
(bad)
xor
add
push
cli
pop
or
iret
pushf
rcl
movs
ins
jmp
xchg
mov
ss
test
mov
xor
icebp
cs
ss
ret
mov
rol
mov
jg
push
cdq
fwait
jp
in
sbb
mov
sub
sti
sbb
ja
gs
out
mov
xor
out
jnp
rol
jmp
repnz
es
sbb
cmp
push
hlt
fidiv
dec
dec
pop
aad
outs
push
sub
dec
mov
xchg
cmp
sbb
push
xchg
or
jle
(bad)
aam
cmp
fisub
imul
rcl
inc
mov
pusha
test
sahf
cmp
fimul
ror
sub
dec
data16
or
enter
push
cwde
(bad)
(bad)
xor
pop
add
mov
add
or
ss
lock
push
pop
jge
cld
cmp
cmp
push
cmp
pop
(bad)
push
es
pop
jmp
outs
stos
push
add
inc
fs
arpl
jo
fwait
and
rol
cmp
je
mov
cmp
das
and
scas
cmps
sahf
jp
cmp
data16
gs
pop
icebp
adc
mov
and
xor
aaa
cdq
xchg
sahf
xor
mov
(bad)
rcl
push
push
retf
push
xor
call
retf
arpl
enter
and
addr16
pop
fs
xchg
dec
lock
retf
mov
mov
sbb
sub
(bad)
add
push
push
inc
add
mov
xchg
push
fstp
retf
(bad)
mov
retf
into
arpl
add
or
shl
ret
cmc
fs
lock
retf
(bad)
(bad)
cmp
dec
dec
iret
shr
mov
jmp
mul
aam
lea
pop
pop
jecxz
cwde
push
or
jmp
gs
cmp
xor
or
mov
jp
push
daa
das
jb
pop
dec
xchg
ins
and
push
mov
mov
jmp
movs
ret
fxch
pop
pushf
mov
add
xor
psubq
and
out
into
mov
not
ds
cld
cmp
fisub
std
test
repz
lahf
cmps
aas
push
(bad)
pop
or
inc
(bad)
rcr
push
mov
addr16
imul
fidiv
outs
icebp
pop
shr
lock
cmp
inc
sahf
mov
or
sub
(bad)
mov
jne
and
mov
arpl
xchg
bsr
imul
mov
inc
cmp
push
movs
aaa
addr16
pop
xchg
cmp
pop
xchg
lahf
es
push
and
shr
call
retf
sahf
push
adc
scas
ret
icebp
xchg
stos
je
hlt
jg
push
dec
push
dec
pop
stc
mov
jmp
adc
push
push
jne
scas
mov
std
in
fcomp
(bad)
shl
cld
xchg
pusha
cmps
push
imul
(bad)
jle
ret
aas
or
loop
mov
inc
mov
sub
bnd
imul
xchg
inc
scas
add
lods
jae
mov
ds
cmp
push
scas
inc
mov
push
jnp
jbe
repnz
lds
enter
cmp
dec
mov
jl
add
leave
stc
dec
mov
test
call
fisub
add
pop
cmp
push
jp
jl
mov
popa
xchg
ret
mov
mov
arpl
cmps
rol
int3
xor
call
ja
push
fimul
int3
out
xor
cmp
leave
mov
mov
pop
fistp
jno
xchg
push
(bad)
in
jo
in
scas
sbb
fstp
push
mov
shl
data16
cdq
jne
and
lods
cmc
or
out
push
shl
test
jbe
leave
shl
adc
push
pop
inc
inc
(bad)
jo
adc
gs
les
mov
(bad)
and
push
mov
pop
xor
sub
imul
fwait
pmaxub
push
sahf
inc
pushf
rcl
mov
repnz
rol
nop
sub
popf
loope
or
push
ss
in
cwde
scas
lds
fcmovnb
(bad)
icebp
enter
mov
jl
lea
jbe
jmp
jecxz
add
mov
movs
add
cli
inc
in
xor
daa
dec
sub
psubw
add
pop
cmp
shl
loope
retf
lock
and
push
dec
jg
and
or
pop
pop
pusha
push
mov
inc
(bad)
pushf
mov
in
inc
sbb
jno
and
xlat
push
jno
retf
jmp
pop
mov
jmp
xor
nop
stos
ins
mov
fdivp
sbb
jg
mov
icebp
loop
pusha
shr
cmc
jl
xchg
dec
push
in
jae
(bad)
sbb
std
mov
mov
sbb
push
lods
jmp
cmc
add
ret
cs
lods
ror
sbb
inc
cdq
movs
adc
out
mov
mov
loopne
add
pusha
test
dec
push
sbb
aaa
push
inc
fsub
jno
mov
in
mov
test
movs
pop
ja
jl
inc
sub
nop
push
or
iret
inc
mov
int3
add
sub
push
mov
sub
push
lahf
sbb
push
jg
mov
dec
std
xlat
fadd
mov
rcl
in
dec
pusha
pop
inc
adc
push
sbb
movs
mov
comiss
test
or
xchg
into
outs
(bad)
repnz
adc
pop
jo
and
or
sbb
pusha
push
icebp
or
scas
pop
scas
cmp
or
mov
lods
push
add
cld
mov
outs
movs
mov
daa
cmp
scas
stos
pop
xor
out
xor
pop
bound
imul
or
jecxz
xor
scas
test
lock
pop
shl
pop
pop
push
pushw
stos
movs
mov
add
cwde
dec
sub
ins
cs
sar
pop
sub
and
ss
xchg
loopne
mov
xor
inc
cmp
dec
jmp
pop
sub
cmc
je
and
xchg
xchg
arpl
ja
mov
rol
push
fiadd
imul
mov
wbinvd
bound
xor
xchg
sti
test
push
mov
lea
in
cmc
add
ins
add
(bad)
shl
call
inc
repnz
sub
mov
mov
das
mov
gs
les
dec
movs
inc
or
mov
dec
shl
adc
and
cwde
fcmovnb
or
and
pop
or
adc
xor
es
pusha
int3
bound
and
add
cmp
(bad)
ficomp
dec
adc
inc
cdq
outs
jmp
bound
inc
lahf
daa
loope
pop
cld
jbe
daa
xchg
cmp
ins
xchg
push
cli
cs
mov
ficomp
jp
clc
data16
lods
mov
or
inc
pop
fild
rcl
cmp
nop
aad
popa
push
xchg
adc
dec
loopne
push
int3
xor
sub
mov
out
loope
ja
rol
lods
loope
mov
loop
dec
add
aad
pushf
imul
enter
fidiv
xchg
inc
adc
dec
call
sbb
pushf
push
xchg
inc
xor
sub
shl
data16
jbe
pop
cwde
dec
pop
sbb
enter
aas
mov
mov
jb
aam
dec
pop
and
in
inc
xor
mov
push
dec
test
xor
lds
or
nop
test
cmp
in
xor
pop
add
test
and
xchg
xchg
imul
add
cmp
shl
jle
leave
test
mov
ror
adc
in
or
dec
jns
add
cmp
ret
sbb
movs
cmp
out
out
popa
ins
fs
lods
sbb
inc
(bad)
jno
sahf
fsubp
inc
mov
cmps
jg
fwait
mov
mov
mov
cdq
fs
sub
lds
imul
mov
xchg
add
out
retf
(bad)
fiadd
or
lds
push
shr
test
repnz
gs
popa
sub
push
cmp
js
xlat
out
out
sub
out
movs
push
add
(bad)
mov
adc
ins
or
mov
cmp
in
jno
popf
push
push
pop
movs
push
sub
fnstcw
out
push
mov
and
cmp
pop
scas
mov
mov
jae
stos
xchg
hlt
jecxz
push
and
and
retf
mov
push
jl
test
fist
pop
sub
ja
push
push
mov
jns
hlt
mov
cmp
cmc
lea
fmul
pop
int
(bad)
out
sbb
shl
popa
daa
mov
jne
jnp
sub
call
mov
and
and
or
ror
out
pop
daa
retf
inc
push
out
mov
add
loop
mov
xchg
jnp
cmps
pop
fisub
add
(bad)
adc
inc
lods
mov
out
mov
sbb
jnp
out
xor
lea
iret
dec
push
fs
dec
in
bnd
shl
adc
xchg
dec
hlt
dec
sbb
hlt
movs
xchg
lods
cmp
adc
push
adc
fiadd
int3
push
add
jae
add
inc
add
cmp
add
stos
scas
aas
fimul
ja
jge
pop
adc
cmp
into
jmp
dec
mov
jno
mov
(bad)
ins
(bad)
out
scas
and
and
push
pop
mov
ret
dec
add
fabs
sar
std
ror
jb
mov
dec
dec
push
adc
mov
adc
(bad)
adc
push
or
push
ror
push
into
sub
add
int
xchg
mov
test
sub
push
push
jecxz
cmp
loopne
mov
fstp
aad
das
ret
fdivr
test
into
or
pop
jae
(bad)
sbb
jno
lock
add
dec
daa
sbb
pop
imul
mov
mov
repnz
ins
push
fs
(bad)
mov
mov
aas
push
dec
mov
outs
or
push
add
leave
es
pop
jne
push
aam
(bad)
jmp
rol
enter
add
std
mov
mov
dec
or
sar
jnp
aam
test
jmp
jmp
js
mov
inc
ror
rcl
jmp
hlt
pop
fsub
fsubr
into
adc
stc
adc
push
sub
xor
push
daa
add
movs
in
xchg
leave
(bad)
out
ins
push
fdivr
(bad)
or
ret
push
add
push
xor
aad
je
dec
jno
outs
fwait
xchg
ss
inc
push
iret
arpl
mov
cmps
mov
mov
nop
clc
adc
sub
and
and
inc
pop
mov
jns
mov
ds
push
test
mov
adc
jge
inc
pop
pop
jmp
inc
sbb
jge
cdq
pop
mov
xchg
xchg
inc
sti
adc
rcr
ficomp
pop
dec
or
js
sbb
xchg
jp
sbb
xor
outs
sar
mov
jbe
leave
jb
pop
fst
test
lods
jbe
jae
sub
out
xor
out
sbb
retf
adc
cmc
jp
adc
fnsave
imul
inc
xchg
cmp
cmc
mov
in
cmps
movs
rcr
retf
jbe
leave
adc
jg
push
jno
jno
repz
cld
adc
sbb
or
push
outs
jnp
xchg
cwde
test
cs
nop
jnp
pop
dec
cmp
imul
mov
sub
push
(bad)
enter
and
pop
sbb
inc
fnsave
scas
xchg
test
push
sbb
dec
dec
mov
mov
in
cmp
and
rep
sbb
shl
ror
out
popa
out
and
ins
pop
stos
loope
adc
cdq
mov
add
ror
jle
sub
cmp
mov
mov
mov
stos
jp
jb
je
or
pop
nop
push
movs
jo
test
icebp
mov
sub
fiadd
xchg
xlat
adc
shl
mov
jae
jl
xchg
sub
jecxz
sub
push
adc
xor
std
lds
clc
js
mov
pop
popa
movs
push
cmp
std
cmp
or
popa
addr16
pusha
mov
pop
mov
hlt
cwde
nop
mov
dec
sub
sti
into
sbb
pop
sti
popa
lock
std
mov
rol
dec
inc
ret
(bad)
pop
cs
and
cdq
xchg
daa
sub
sbb
in
in
add
in
(bad)
std
scas
ret
pop
das
push
mov
fnstcw
ror
xor
or
test
bound
sti
and
xchg
rcl
jnp
xor
and
xchg
push
adc
push
xchg
adc
popf
inc
repnz
cmp
outs
les
loope
ret
pop
call
out
out
jno
fcom
and
fs
push
mov
dec
jl
and
push
pop
jbe
(bad)
repnz
into
mov
popa
mov
out
pop
mov
inc
xchg
xor
jne
sub
dec
adc
adc
hlt
mov
or
and
xor
not
push
cmp
push
not
icebp
dec
mov
inc
test
je
jno
lods
sbb
jg
cmc
out
mov
repnz
pmaxub
xor
xor
push
ds
fbld
inc
fcmovu
cli
clc
cmp
jmp
out
jb
loope
inc
jnp
nop
xor
call
jge
ins
sub
aas
inc
mov
sbb
stc
arpl
mov
test
lods
imul
xchg
pusha
cmps
dec
add
fs
sbb
pop
inc
enter
(bad)
push
xchg
dec
mov
dec
sub
shr
mov
ds
out
or
or
mov
add
add
push
pop
stc
add
std
xchg
out
les
mov
aad
gs
sbb
fwait
inc
push
jno
and
repz
cmp
push
mov
jne
inc
js
sub
cwde
jb
mov
leave
loope
mov
js
ja
std
jge
add
int
push
xor
inc
cmp
or
push
push
pop
xchg
sbb
push
ss
xor
jb
mov
pushfw
scas
aaa
or
and
aaa
pop
push
dec
lahf
lock
daa
dec
cwde
idiv
lods
dec
add
xor
(bad)
fcom
repz
stos
push
icebp
(bad)
and
fild
push
mov
jne
xor
das
mov
outs
lahf
mov
jle
test
xchg
adc
mov
inc
jp
inc
sti
movs
(bad)
mov
fucom
jmp
lahf
inc
adc
dec
xchg
cld
sub
push
or
mov
test
push
inc
aad
push
in
xor
(bad)
ja
dec
push
mov
inc
out
lods
cmps
jl
fcomp
pop
cwde
inc
les
xlat
jge
add
test
fst
xchg
xchg
addr16
mov
xor
inc
lock
ss
(bad)
in
mov
sub
mov
cwde
add
push
gs
sub
dec
and
and
cwde
ss
lea
cmps
je
imul
pop
pop
test
dec
mov
inc
ss
xor
jmp
test
stos
jno
mov
cdq
cmp
and
sub
aam
xchg
jo
jp
mov
sub
pop
dec
outs
push
out
jb
adc
shl
pop
into
sub
sub
xchg
add
xor
push
xchg
out
mov
rol
fstp
out
aaa
jmp
inc
cwde
jmp
and
gs
outs
xchg
mov
sub
jb
push
pop
movs
push
pop
jp
pop
push
test
fst
lahf
pop
lds
and
cli
dec
aad
pop
adc
dec
xchg
fs
mov
add
test
xor
ret
repz
cmp
adc
xchg
push
test
inc
push
clc
test
sti
js
aas
aad
pop
and
mov
mov
xchg
loope
sbb
pop
or
adc
push
xor
(bad)
dec
lahf
cmp
mov
or
shl
xor
(bad)
out
mov
pusha
call
lods
and
xchg
cmp
adc
dec
and
call
imul
cmp
cmp
push
xchg
je
xor
push
mov
inc
jmp
test
jle
sub
xor
js
push
xchg
test
sbb
push
aaa
inc
idiv
shl
push
sti
call
js
xchg
push
pop
(bad)
sbb
call
imul
int
cmp
jnp
std
jl
lea
xchg
xor
mov
out
cld
stos
add
cmp
sub
mov
mov
or
test
xchg
test
test
adc
cmp
fwait
test
(bad)
dec
popa
fnstenv
rcl
push
push
scas
xor
pusha
add
sbb
push
inc
stos
outs
sbb
mov
and
jo
inc
cmp
cmp
std
addr16
inc
sub
mov
push
cmp
or
fmul
jp
or
add
mov
data16
sub
nop
fcomip
jb
ret
test
scas
pop
movs
ror
cmps
shl
pop
add
jg
in
mov
imul
iret
push
jecxz
fisttp
popa
aam
fcomp
sub
jb
dec
mov
xchg
fisttp
mov
mov
jae
ret
in
das
push
fdiv
movs
ficomp
fisubr
jg
push
stc
lds
or
mov
stos
aaa
test
xchg
daa
imul
popf
pusha
cmp
lahf
lods
dec
fld
sbb
rol
pop
pusha
mov
adc
gs
xchg
mov
mov
fistp
das
fcmovbe
xchg
cmp
adc
nop
sub
sbb
inc
repz
ror
and
je
jns
mov
inc
test
sbb
rcl
mov
pop
mov
mov
stc
jnp
xor
xchg
mov
(bad)
mov
xchg
mov
jmp
push
rcl
aaa
mov
lods
and
mov
sub
add
sti
test
adc
sbb
mov
popf
daa
add
call
outs
xchg
rcl
xchg
inc
sbb
jmp
pop
int3
pusha
int
push
jb
xchg
xchg
jge
xchg
pop
inc
cld
in
lahf
int3
ret
pusha
xchg
jmp
fdiv
mov
std
xchg
jmp
ins
pop
jb
xchg
sbb
jbe
xor
movs
fld
and
loopne
cmp
sbb
pushf
jmp
ror
(bad)
sbb
popa
das
movs
repz
fcomp
ja
or
out
cs
iret
xchg
not
ret
loope
dec
or
mov
movs
push
adc
enter
fcomp
jp
test
push
out
loopne
fmul
int3
pop
pop
popa
arpl
jge
arpl
shl
into
mov
pop
push
adc
lahf
cmps
push
mov
inc
jmp
cmp
lds
clc
jnp
mov
inc
push
fiadd
xor
shr
pop
(bad)
mov
pop
or
sub
popf
(bad)
sti
cdq
xchg
mov
xchg
addr16
and
sub
and
sar
push
lahf
sub
mov
out
jb
cmp
movs
sbb
inc
cmp
das
aaa
mov
push
fwait
xor
jmp
cmp
bound
add
mov
test
inc
pop
mov
and
cmp
add
ja
movs
or
call
pop
mov
cmp
call
scas
movs
mov
leave
(bad)
stc
daa
mov
shr
mov
push
jae
shr
ret
jnp
pop
test
xor
and
sub
(bad)
mov
daa
movs
movs
sbb
pop
pusha
cmp
rol
leave
push
lahf
ja
push
sahf
aad
jbe
sub
inc
dec
mov
push
push
xchg
cmp
mov
mov
enter
adc
std
add
push
dec
xor
push
imul
mov
or
sbb
in
adc
gs
mov
ret
pop
mov
push
popa
sub
(bad)
or
dec
xchg
mov
sub
test
sub
xor
ins
push
push
mov
lahf
lock
stos
jg
arpl
(bad)
jne
push
and
mov
cmp
xchg
popf
push
mov
inc
mov
repz
imul
ss
scas
ins
cmp
movs
sub
mov
dec
ret
dec
mov
fst
iret
xchg
and
(bad)
jg
call
mov
push
jmp
leave
xor
fmul
loop
fwait
int3
add
push
sub
mov
mov
aas
jns
mov
cmp
imul
inc
mov
add
mov
neg
es
cmps
jbe
pop
add
fistp
xchg
inc
out
xor
imul
push
aaa
in
mov
sub
nop
push
shl
int3
lods
cld
push
mov
ss
sbb
std
inc
xchg
in
addr16
stos
inc
cmp
mov
add
inc
xchg
cwde
and
inc
in
shl
adc
out
push
jmp
push
mov
movs
xchg
xchg
jmp
loope
mov
call
jg
shr
or
in
inc
jmp
jecxz
xchg
add
jb
jmp
jmp
xchg
clc
xchg
dec
loope
mov
and
cmp
push
or
fadd
mov
test
test
lea
outs
shr
(bad)
push
fnsave
push
sbb
adc
inc
mov
jge
(bad)
fwait
add
push
inc
dec
das
inc
call
xor
lock
scas
mov
ins
push
jp
push
lea
pop
les
sub
std
loope
xchg
bound
aaa
inc
xor
mov
sbb
jecxz
push
and
jo
add
or
jmp
jo
jo
lods
call
and
or
pop
in
jo
aam
call
add
das
xchg
sub
out
inc
ss
add
pop
repz
imul
sbb
push
push
inc
add
push
mov
imul
dec
push
xchg
sbb
int3
and
mov
jbe
adc
cdq
cli
daa
outs
pop
shr
pop
adc
test
retf
pushf
inc
loop
test
sbb
and
inc
or
pop
cli
inc
inc
das
pop
ins
pop
clc
jns
cmp
mov
adc
push
mov
out
sub
or
push
xchg
lods
pushf
inc
xchg
ins
pop
mov
adc
dec
xchg
push
loope
push
push
xor
loopne
mov
add
push
nop
in
mov
or
pop
(bad)
test
nop
adc
pop
add
popa
jg
and
jae
sub
adc
(bad)
mov
cli
loope
popf
inc
shl
pushf
arpl
rcr
push
sbb
mov
inc
and
retf
dec
(bad)
mov
loope
xchg
(bad)
std
push
repnz
nop
ret
sub
std
addr16
popa
cli
sbb
and
daa
stc
jnp
jle
jb
rcl
ja
out
adc
outs
gs
pop
jo
and
xchg
sub
push
pop
in
fdiv
sub
ds
xor
xchg
sub
mov
sbb
mov
pop
fucomip
push
aad
cmp
(bad)
mov
mov
ror
fmul
and
in
mov
jb
clc
(bad)
jnp
mov
xor
scas
ret
popf
pop
mov
jo
push
movs
sub
movs
jne
sub
retf
test
(bad)
jno
sub
cmp
push
sub
jbe
fwait
repnz
adc
dec
xchg
(bad)
ins
es
push
mov
cmc
in
jns
es
das
repnz
sbb
add
std
push
mov
mov
xchg
xor
mov
cli
mov
je
or
mov
cmc
call
ret
and
and
(bad)
adc
lahf
mov
outs
xchg
fwait
and
cld
and
add
imul
aaa
xor
sbb
jl
dec
dec
dec
fsub
fsubr
std
call
jge
push
out
dec
mov
or
sub
and
mov
inc
cmp
sub
mov
movs
jg
dec
sbb
adc
pop
cmpps
add
inc
push
cmp
es
mov
jbe
retf
shr
cwde
cmp
mov
scas
ins
test
retf
mov
sbb
adc
fisub
jmp
test
jmp
xchg
data16
jl
mov
(bad)
jne
in
icebp
or
and
loop
cdq
mov
out
sbb
mov
les
inc
aam
adc
outs
and
gs
push
mov
mov
adc
in
mov
dec
sub
or
mov
mov
and
mov
sub
sub
out
xchg
dec
pmulhuw
into
xchg
imul
jl
pop
and
(bad)
movs
mov
shl
cmps
mov
int
outs
push
mov
(bad)
call
icebp
mov
bound
fcomp
adc
cmps
jmp
xchg
iret
jp
jmp
and
and
(bad)
or
cmp
jns
and
jge
ror
sub
ins
jecxz
sbb
push
mov
mov
int
bound
popa
mov
sbb
pop
es
dec
cdq
cmps
jg
push
dec
jmp
test
adc
les
jbe
push
push
cs
lahf
pop
dec
xor
add
sbb
lods
pop
fbld
bnd
pop
dec
jne
in
inc
fbstp
cmp
dec
out
movs
push
aaa
dec
popa
and
aam
stc
mov
stos
js
xor
fld
mov
mov
push
cmps
js
xchg
sbb
jmp
out
pop
sub
sub
adc
or
xchg
jl
dec
and
jae
retf
rcl
adc
xchg
mov
dec
add
ret
cmp
outs
xchg
mov
mov
and
push
ja
xor
inc
jno
sub
mov
adc
stc
push
fild
stos
(bad)
sbb
cmps
mov
push
mov
popf
lods
call
jg
jne
add
pop
(bad)
fdivr
dec
push
adc
enter
(bad)
in
sti
stos
ins
adc
lds
or
cmp
loopne
repz
mov
dec
and
sub
fsub
clc
movs
or
out
xlat
mov
cmp
jnp
out
xchg
mov
in
fdivrp
mov
icebp
sbb
adc
ror
jmp
mov
inc
out
adc
ret
mov
jbe
sti
cmp
jmp
xor
iret
or
lods
(bad)
sahf
cmp
out
lods
and
stos
fst
js
dec
(bad)
sub
sub
addr16
pop
cli
test
cld
into
test
mov
inc
pop
sbb
sbb
cs
mov
push
fbstp
adc
cwde
sahf
jne
cmp
addr16
push
pusha
int3
fld
and
mov
push
shr
cmps
mov
adc
lahf
cmps
mov
and
lock
sbb
fwait
jp
xchg
stc
sahf
xchg
mov
fucomip
iret
call
xchg
mov
mov
pushf
xchg
xchg
retf
mov
sbb
mov
mov
or
inc
jno
test
push
push
leave
adc
pop
inc
sahf
scas
imul
inc
adc
stos
jne
fs
push
icebp
lods
(bad)
mov
rcl
loope
lea
inc
xchg
pusha
imul
(bad)
pop
mov
in
div
push
cmc
pushf
aad
mov
pop
stos
xchg
sbb
imul
xchg
lahf
stos
hlt
mov
cwde
xchg
out
retf
xor
pop
fwait
stos
lahf
lods
movs
jmp
inc
push
jmp
jmp
dec
pop
sti
ret
mul
leave
inc
dec
sti
sub
sub
lds
mov
push
ss
stos
mov
or
ins
aad
stc
mov
push
dec
mov
jecxz
jno
leave
mov
sub
in
retf
mov
mov
in
cmps
inc
mov
inc
dec
iret
sti
cli
mov
add
lock
xor
xor
or
mov
and
xor
xor
rcr
test
or
shr
jmp
ret
retf
pop
xchg
in
jno
int
aaa
(bad)
jmp
xlat
bound
das
mov
mov
ficomp
xchg
push
jns
in
outs
nop
cmp
lds
jmp
std
arpl
or
mov
scas
(bad)
push
pop
aaa
xor
fsubr
push
xchg
and
jg
mov
aad
xchg
fldl2e
lock
nop
and
call
or
repnz
mov
xchg
jp
or
(bad)
sub
mov
in
push
or
mov
cdq
mov
fcom
cmp
ins
cmc
push
cmps
dec
mov
repz
pusha
lea
cmp
cmp
pop
mov
lds
mov
sti
jecxz
dec
jg
sub
punpckhwd
sbb
mov
gs
mov
test
adc
dec
int
add
mov
daa
cmp
mov
inc
(bad)
pop
cld
stos
sti
in
jmp
sbb
retf
add
lahf
inc
mov
mov
push
in
scas
mov
push
(bad)
push
loopne
test
rcl
int
lahf
cdq
(bad)
js
sbb
jp
ficom
add
mov
in
xchg
push
fbld
push
js
jle
test
mov
out
ins
mov
js
dec
cmp
clc
movd
or
sub
adc
test
(bad)
adc
fcomp
popf
je
jno
sub
jb
pop
push
add
cld
mov
fcomp
fist
inc
sub
mov
mov
fcmovne
ja
jmp
adc
xor
mov
xor
xor
push
stos
push
cmp
call
push
dec
cdq
cmp
push
sub
adc
fnsave
or
loop
add
jno
push
hlt
sub
mov
push
fidiv
inc
pop
mov
hlt
jg
stos
dec
jle
xchg
(bad)
loopne
pop
adc
dec
out
test
push
icebp
xchg
mov
test
hlt
cmp
mov
mov
pop
(bad)
sar
mov
mov
(bad)
push
or
push
stc
adc
out
xlat
enter
fucom
fdivrp
aas
dec
mov
fild
xchg
dec
pop
ins
imul
fcmove
pop
push
pop
xchg
shl
sbb
repnz
retf
xchg
cmp
jns
or
stc
jne
fadd
sbb
sub
jl
sub
ds
adc
in
outs
clc
dec
mov
adc
xchg
sub
jne
ret
in
pop
jno
(bad)
mov
ja
mov
(bad)
iret
icebp
out
add
lods
adc
cs
cld
or
dec
adc
in
out
xchg
xor
call
push
push
sub
sub
popf
in
jecxz
mov
jae
xor
mov
mov
pop
int3
int
popf
pusha
mov
loopne
out
cs
jmp
sbb
mov
ret
(bad)
pop
lds
mov
test
leave
pop
xor
xchg
movs
mov
cmp
jmp
dec
into
sahf
in
cwde
mov
push
lea
cmp
in
jmp
nop
mov
mov
fisub
sar
rcr
clc
scas
or
mov
mov
movs
xchg
dec
pop
in
ja
inc
stc
sbb
mov
aaa
leave
mov
lahf
jo
rcr
(bad)
(bad)
dec
fucomp
jmp
fidiv
xchg
and
mov
lea
test
sub
pusha
sbb
xor
mov
seto
(bad)
fs
and
(bad)
dec
pusha
cmp
das
inc
pop
fsubr
(bad)
repnz
mov
add
retf
popa
loopne
mov
loopne
and
pop
mov
jecxz
outs
(bad)
ret
push
mov
rol
push
mov
add
xlat
retf
sub
fabs
xchg
mov
dec
hlt
jmp
pop
popf
cmp
xchg
inc
push
mov
in
push
mov
in
das
lods
sbb
mov
(bad)
dec
add
shl
mov
push
and
mov
jae
rcl
(bad)
fwait
outs
push
ret
xor
xchg
push
sbb
loop
dec
popa
pop
daa
xor
push
inc
icebp
pop
jmp
lahf
dec
mov
pop
aaa
cmps
and
push
lahf
ss
mov
jmp
and
inc
movs
jp
mov
jne
mov
dec
cmps
mov
or
push
pushf
push
js
mov
pop
sbb
ins
inc
sbb
and
aaa
mov
or
mov
and
lds
cs
daa
aam
pop
sub
xlat
fistp
xor
xchg
int
and
xor
inc
in
out
mov
pop
mov
mov
imul
ss
jp
push
mov
out
mov
pop
inc
mov
jg
call
and
in
mov
mov
popa
cmp
int3
pop
push
add
inc
mov
lods
or
mov
mov
leave
sar
loope
sub
out
add
scas
cwde
cmp
and
sub
inc
shl
sbb
push
cld
ss
add
(bad)
scas
retf
sub
cmp
gs
loope
pop
push
jmp
dec
es
call
dec
stc
jp
xor
imul
nop
fld
sbb
adc
push
das
ins
jne
inc
jmp
js
mov
jb
mov
sbb
and
mov
pop
jb
fistp
or
push
rcr
in
adc
repnz
push
add
out
jp
es
cmp
jmp
nop
jle
loopne
adc
dec
mov
bound
xchg
push
or
dec
(bad)
inc
arpl
mov
push
ret
mov
mov
xchg
iret
out
sub
jae
sahf
in
fwait
jecxz
push
pop
loop
mov
(bad)
clc
cwde
add
add
rcr
fisubr
pop
cmp
js
sbb
mov
jae
int
jnp
lods
hlt
jns
cli
je
pop
dec
shl
mov
mov
fs
adc
adc
scas
lods
int
sti
mov
imul
fisub
retf
lds
adc
jb
dec
rol
jo
adc
jo
mov
push
cmps
repz
repnz
es
jecxz
pop
adc
enter
test
out
dec
jl
push
mov
jle
addr16
xchg
pop
inc
xor
in
xchg
int
inc
nop
push
ret
jnp
cdq
out
jne
xor
(bad)
and
aas
pop
add
jae
retf
iret
(bad)
pop
int
push
mov
xor
jne
bound
inc
mov
xchg
ret
xchg
mov
dec
sahf
sbb
inc
push
pop
jo
pop
mov
sbb
push
hlt
add
ins
inc
cmps
sbb
psllw
int3
fadd
les
mov
xchg
pop
sbb
xor
xchg
in
imul
ret
cmps
repz
popf
adc
std
dec
clc
retf
or
aaa
cmps
ret
cmp
jg
mov
push
nop
sub
mov
xchg
and
ins
mov
cmp
imul
mov
fcomp
call
mov
ins
fadd
test
sub
mov
push
rcl
mov
sbb
pop
push
clc
or
cmps
repnz
add
(bad)
(bad)
daa
(bad)
clc
leave
adc
xchg
cld
aaa
psrld
lahf
push
dec
sub
rcr
cli
jecxz
jno
retf
aad
ds
ja
mov
adc
repz
outs
add
sahf
dec
in
jne
cmp
xchg
sbb
push
mov
mov
pop
shl
jge
loopne
std
push
pop
pop
lahf
ss
out
daa
ret
jo
imul
jp
dec
sub
imul
mov
mov
(bad)
rcr
pusha
mov
push
pusha
aam
xor
sbb
shr
in
xor
jge
add
mov
and
jbe
and
mov
int
loopne
mov
ins
add
out
or
adc
ins
mov
mov
test
mov
enter
jnp
cdq
inc
cdq
(bad)
ja
sub
ret
sbb
and
add
pop
aas
fstp
cmp
mov
pop
shl
adc
ret
mov
imul
cmps
pushf
sbb
push
mov
ror
push
rcl
mov
inc
or
cmp
(bad)
add
(bad)
loope
rcr
shr
out
mov
mov
mov
lods
xor
adc
in
adc
add
adc
or
lods
push
jg
sub
push
or
mov
leave
or
push
cwde
sub
addr16
push
out
mov
sbb
rol
aas
mov
addr16
pop
ds
fidivr
fwait
aam
dec
bound
pop
retf
jp
mov
and
xor
jno
mov
imul
retf
and
in
in
cmp
mov
shl
jmp
daa
inc
or
call
adc
clc
push
pop
jmp
lea
mov
xchg
mov
pop
aam
inc
les
dec
es
push
sar
jno
lea
pop
sbb
sbb
aam
stos
les
add
mov
pushf
add
and
stos
jb
cmp
adc
test
inc
push
cdq
push
inc
call
mov
mov
cwde
add
(bad)
enter
inc
mov
cli
sub
repz
outs
pop
ja
(bad)
fwait
sbb
ficomp
inc
outs
test
clc
xlat
imul
cmps
xchg
(bad)
(bad)
fidiv
and
cli
or
and
gs
jns
cwde
mov
movs
cmps
mov
int
adc
jmp
into
jns
loop
cwde
sub
(bad)
pop
ja
aam
cmp
dec
retf
out
divps
mov
dec
vpmacsswd
jle
leave
mov
nop
push
loopne
cmp
push
in
mov
jno
(bad)
sbb
sti
add
packssdw
in
add
outs
popa
jo
js
cmps
sahf
test
loopne
jne
xchg
or
mov
xchg
test
mov
popa
loopne
jns
push
aad
imul
les
aaa
(bad)
cmp
int3
pop
test
cli
cmp
add
dec
les
ret
jmp
dec
sub
inc
in
and
jg
xlat
fwait
mov
sub
mov
lods
and
and
jge
jl
jecxz
enter
cmp
and
jae
mov
xor
aaa
loope
test
mov
or
jmp
loop
and
push
rcr
cmp
out
xchg
call
popa
adc
js
cmp
xor
cmp
mov
inc
loop
stc
(bad)
shl
push
pushf
push
dec
jnp
and
mov
je
ja
mov
adc
out
test
cwde
jg
dec
call
lea
mov
test
sub
jle
outs
sbb
sti
out
xor
pop
jo
or
adc
clc
sbb
jb
je
das
mov
mov
(bad)
mov
cld
test
xchg
daa
sbb
imul
jae
dec
cs
fucom
sbb
into
or
pop
dec
sbb
into
sbb
ret
sub
inc
nop
jo
leave
xchg
jge
inc
outs
push
jmp
addr16
sub
jae
xchg
stos
iret
xor
xchg
mov
xchg
cmc
fcomi
fstp
jp
test
or
(bad)
rcl
jg
mov
adc
scas
(bad)
xlat
push
push
fld
movs
in
int
cmps
xor
sbb
(bad)
out
dec
cmps
dec
ins
fwait
push
repz
out
mov
sub
lods
xchg
bound
add
jnp
jmp
data16
hlt
data16
pop
dec
jae
rcr
fistp
popf
movs
cdq
cmps
shl
or
iret
(bad)
loop
cmp
mov
mov
cmp
sbb
daa
cld
add
pop
and
sti
adc
sub
jbe
not
jp
pusha
dec
add
jb
ret
xor
call
lods
xchg
add
(bad)
fs
repz
jbe
(bad)
cmp
sbb
fucom
mov
mov
popf
cmp
mov
ins
mov
into
aam
test
xor
cmps
mov
loope
sub
mov
pop
je
js
adc
lods
test
popf
and
mov
call
pop
cmp
es
pop
fisub
aad
mov
mov
push
mov
js
lea
scas
pop
stos
dec
enter
jg
push
sub
and
mov
idiv
inc
xor
pop
aam
icebp
ds
aad
xor
lock
cmp
pop
in
sbb
xchg
sub
movs
mov
ret
xor
mov
inc
mov
pop
jle
shl
dec
jecxz
cdq
sbb
dec
cdq
outs
push
(bad)
sbb
retf
ficom
outs
xchg
push
adc
test
mov
and
add
mov
gs
push
retf
les
add
adc
enter
loopne
icebp
lds
mov
inc
or
lods
bound
xchg
scas
(bad)
in
test
aaa
cwde
repnz
push
and
add
aad
sti
push
xchg
outs
js
inc
fs
inc
jg
dec
push
mov
and
es
(bad)
icebp
mov
data16
mov
lds
movs
cmp
out
inc
je
popf
sub
xlat
fcom
jmp
pop
push
cdq
sbb
movs
mov
out
jmp
mov
inc
dec
out
mov
jle
cdq
scas
sar
cmc
iret
mov
xadd
stos
ja
jmp
sub
inc
xchg
jnp
shl
inc
fsub
add
sbb
mov
fbld
repz
shl
retf
scas
aas
leave
fist
aaa
xor
ror
je
not
push
cs
(bad)
jns
and
lahf
jns
adc
push
dec
hlt
mov
mov
xchg
or
inc
sbb
mov
add
pop
inc
dec
retf
jle
mov
mov
rol
add
sbb
jecxz
cmp
mov
adc
xor
mov
sbb
cmps
outs
fsubrp
xchg
and
push
ja
clc
cmps
mov
or
pop
sbb
dec
inc
pusha
mov
inc
std
xor
movs
mov
mov
mov
sahf
mov
add
add
enter
stos
(bad)
aas
mov
retf
loopne
push
mov
inc
in
sahf
xor
xchg
mov
mov
es
dec
int
pop
into
ror
sub
xchg
mov
jmp
add
jbe
not
mov
inc
sar
mov
or
out
mov
sti
ss
adc
pop
lods
mov
pop
nop
push
sub
fst
jno
mov
cmp
(bad)
mov
fimul
rcl
mov
(bad)
mov
imul
push
ja
cmps
or
push
inc
xchg
jmp
inc
or
(bad)
cs
call
gs
inc
sahf
pop
jg
inc
mov
jp
jo
sbb
adc
retf
pop
xchg
repz
pop
push
enter
data16
(bad)
jg
fimul
arpl
add
xor
add
push
add
sahf
cmp
or
ds
mov
and
mov
outs
push
repnz
inc
sbb
sub
push
imul
cmp
call
pushf
(bad)
shl
in
or
mov
adc
retf
jns
mov
add
push
inc
push
std
(bad)
or
stos
ja
push
mov
mov
sbb
pop
stos
push
clc
fadd
repz
dec
lock
mov
movs
jmp
imul
ret
dec
aaa
sub
push
cmp
(bad)
pop
imul
mov
dec
mov
xor
pusha
mov
nop
dec
sbb
mov
lea
scas
mov
inc
aaa
jl
pop
add
pushf
test
xchg
cmc
ror
pop
ja
cs
push
sbb
test
mov
jae
retf
leave
test
sti
test
sbb
mov
xor
inc
arpl
xchg
out
xchg
popf
bound
scas
int3
push
pop
push
xor
data16
call
mov
std
sub
fdivr
in
into
mov
mov
sbb
rcl
ficomp
out
ror
lahf
jle
dec
mov
push
enter
in
inc
lods
add
or
inc
xlat
les
div
cmps
cmps
repnz
add
pop
popf
push
lea
je
icebp
lea
ror
movs
jle
ror
mov
jnp
ficom
mov
int
inc
pop
(bad)
push
jl
rol
push
push
hlt
sub
idiv
loope
sub
test
iret
call
fs
or
ss
inc
pushf
xchg
aad
sti
jecxz
fs
ins
lods
movs
lock
mov
cmp
push
mov
sub
jmp
mov
rcl
repz
leave
in
cmc
(bad)
jmp
jg
mov
and
mov
(bad)
cmp
mov
jg
adc
shl
pop
jl
sar
pusha
mov
mov
ror
ds
ret
(bad)
aas
retf
cs
pcmpeqd
sbb
cli
jecxz
mov
adc
jnp
in
call
aas
mov
clc
xchg
mov
push
test
xchg
jge
pushf
arpl
pop
out
fsub
mov
cs
pop
cli
xlat
add
loop
popf
icebp
add
mov
scas
mov
loopne
sub
and
sub
nop
fcom
ins
or
pop
imul
adc
jp
pop
loope
lea
add
loop
pusha
idiv
lods
xchg
inc
mov
out
jb
inc
xchg
into
mov
sub
pop
outs
ret
mov
das
adc
push
lods
mov
inc
scas
shl
pop
ret
jge
loop
mov
jg
dec
and
in
sub
ss
mov
lods
call
and
push
add
ret
push
js
xor
adc
push
test
sub
or
cmp
data16
mov
push
jle
ins
fadd
pop
imul
stc
iret
mov
sub
mov
and
(bad)
jo
in
inc
in
push
fmul
loope
jae
call
scas
cmp
mov
movs
cwde
retf
cmp
adc
or
test
mov
pusha
es
inc
sbb
mov
into
push
arpl
bound
rcr
jl
add
shr
js
xor
jg
call
mov
mov
cmps
or
sahf
jns
call
nop
sahf
sbb
dec
cmp
in
pop
and
or
movs
test
and
and
jbe
adc
movs
jns
add
hlt
scas
dec
add
in
pop
imul
adc
rcr
mov
cmc
ins
stc
inc
test
jl
adc
mov
push
out
sub
in
mov
adc
inc
sub
nop
pop
xchg
jns
scas
call
pushf
jmp
fwait
jns
cmps
leave
mov
movs
xchg
sub
jmp
pop
dec
cdq
lock
cmps
inc
xor
dec
dec
xor
imul
fwait
xchg
icebp
sbb
pop
inc
ret
push
add
psrad
jmp
and
add
inc
pushf
xchg
or
mov
cwde
data16
ds
sar
inc
xor
sti
mov
xlat
mov
int
push
retf
xchg
mov
inc
(bad)
jmp
lea
fcomi
add
shl
jo
dec
loope
add
shl
test
ror
lock
dec
int3
add
out
test
mov
xor
dec
push
pusha
(bad)
repz
push
pop
into
dec
jno
je
pop
sti
add
(bad)
sbb
pop
fistp
(bad)
push
in
imul
scas
mov
add
mov
loopne
jle
xlat
cwde
shr
mov
cld
ins
jbe
push
push
pop
jae
outs
or
sti
mov
adc
push
pop
test
and
rol
inc
adc
outs
(bad)
in
mov
sbb
jb
cmc
cmp
xchg
rol
cmp
jnp
jo
or
mov
push
dec
test
lahf
and
sub
(bad)
mov
arpl
pop
jns
jl
cld
clc
mov
aam
add
pop
add
sub
lea
sub
ret
jmp
pop
dec
in
jnp
push
push
enter
sub
popf
popa
and
xor
inc
lods
or
pushf
push
sub
test
jge
fnstenv
ret
mov
cld
mov
out
leave
popa
mov
push
clc
mov
push
jns
xor
push
add
ror
cmps
jecxz
outs
jg
les
daa
(bad)
mov
outs
sbb
and
daa
leave
ds
(bad)
test
inc
pop
movs
cld
add
adc
sbb
loopne
sti
sbb
out
pop
jcxz
movs
dec
xchg
imul
gs
(bad)
lds
jnp
scas
cmp
jecxz
adc
test
das
mov
dec
push
stos
xor
cmps
(bad)
dec
xchg
out
mov
adc
add
mov
cld
std
into
or
sar
push
mov
adc
inc
lahf
dec
adc
mov
(bad)
je
adc
cld
pop
mov
aam
stos
mov
movs
(bad)
adc
sub
xor
dec
and
mov
loopne
jmp
les
xchg
lods
cmps
xchg
in
xchg
loope
inc
ds
mov
aaa
cmps
push
fimul
mov
and
and
cdq
jnp
fsubrp
lea
push
addr16
mov
xor
leave
int3
outs
stos
mov
dec
idiv
(bad)
jge
add
inc
mov
lods
ficomp
fisttp
jmp
idiv
in
test
mov
push
mov
push
jge
pop
cwde
push
jg
jp
das
ror
jnp
nop
fsubr
loopne
lds
dec
xchg
aam
aad
xor
push
mov
scas
ds
push
mov
jle
jne
mov
or
jge
imul
call
int
dec
inc
leave
jb
dec
or
pushf
ins
leave
add
cs
push
mov
(bad)
popf
dec
cmp
movs
fnstenv
stc
stc
fs
cmc
push
adc
jmp
(bad)
into
(bad)
jl
call
mov
inc
popa
es
push
scas
fdiv
or
loopne
(bad)
sub
ror
shr
jecxz
(bad)
fidivr
lods
push
ins
mov
jg
cmp
jmp
sub
sub
lds
mov
add
pop
xor
fdiv
outs
in
sbb
aam
out
(bad)
or
pop
test
in
popf
jno
repz
dec
add
jbe
jecxz
aad
mov
mov
pop
dec
test
out
sub
ins
sbb
(bad)
stos
inc
repnz
xchg
adc
leave
iret
repz
imul
(bad)
stos
pushf
inc
icebp
sub
repz
js
lods
sub
outs
sub
daa
movs
int3
enter
cmps
sub
(bad)
push
or
mov
in
xchg
push
(bad)
jbe
dec
mov
imul
sub
pop
sbb
frstor
in
aas
sbb
jl
xor
dec
and
rcr
jmp
inc
jle
sbb
push
aas
movs
(bad)
dec
adc
push
cmp
cmp
or
mov
out
mov
mov
mov
push
mov
(bad)
int3
pop
cmp
es
sahf
sub
mov
frstor
scas
jge
rcl
or
push
xor
data16
pop
aam
leave
addr16
repnz
out
add
out
lds
in
lods
xchg
js
mov
bound
push
mov
adc
or
push
daa
in
dec
add
sbb
adc
cdq
and
xor
mov
pop
icebp
fisub
fiadd
jbe
adc
inc
test
mov
add
pusha
mov
mov
adc
mov
and
inc
xchg
enter
lods
mov
dec
lods
push
into
rcr
mov
enter
pop
mov
cmp
or
cmp
sub
out
(bad)
loope
mov
push
inc
(bad)
sbb
push
mov
adc
jns
fldenv
popa
pop
mov
sub
mov
cli
or
outs
lea
scas
push
mov
mov
push
jmp
sub
mov
add
scas
mov
mov
or
mov
ror
mov
fstp
fisub
cwde
jl
cmp
add
cmp
fcom
retf
push
fwait
xchg
sbb
sar
push
mov
jecxz
xchg
(bad)
fld1
icebp
pop
or
test
popa
jnp
out
jg
rol
pop
daa
push
mov
and
add
add
cli
imul
sbb
aam
mov
adc
cdq
lahf
xor
mov
outs
aam
xchg
imul
lea
cdq
loopne
retf
cmp
dec
mov
push
xor
jp
lods
int
shl
les
xchg
call
inc
push
inc
mov
imul
pushf
xchg
cmp
xchg
sub
ins
(bad)
mov
xchg
mov
hlt
adc
sbb
(bad)
fwait
iret
jmp
fwait
dec
(bad)
sbb
sbb
mov
push
arpl
push
lds
dec
xchg
imul
xlat
repz
repz
jp
scas
movs
aam
ins
push
enter
fisttp
push
sub
pop
jo
sbb
push
add
pushf
mov
jns
fstp
sbb
xchg
icebp
ss
or
push
imul
sbb
sub
aam
enter
enter
mov
inc
add
test
and
sub
mov
adc
mov
(bad)
scas
daa
sub
xchg
jo
dec
out
pop
pop
push
pop
loop
leave
aam
push
adc
pop
or
icebp
pop
cld
jmp
and
dec
xchg
shl
mov
sbb
retf
mov
popa
mov
stos
push
jb
pop
aam
popa
jl
xlat
call
les
adc
fs
push
push
pop
or
dec
add
mov
loop
mov
jmp
std
pop
xchg
std
pop
inc
loope
mov
mov
mov
mov
adc
retf
dec
xor
das
test
pop
mov
xchg
push
icebp
push
push
inc
lahf
scas
cmps
mov
push
xchg
mov
sub
push
xchg
cwde
mov
fsubr
xchg
sbb
sbb
call
mov
mov
call
adc
sbb
clc
cwde
movs
sbb
adc
fldenv
(bad)
aas
pop
or
movs
jmp
push
xchg
or
cmp
fs
mov
out
ret
and
outs
lods
dec
xor
je
push
ret
pop
ficomp
out
xchg
in
sbb
cmp
mov
test
push
mov
sbb
cmps
lock
ins
jbe
iret
repnz
xlat
push
push
add
pop
cmps
mov
sbb
cmp
sbb
scas
aad
stc
or
pop
arpl
inc
out
sti
dec
lahf
imul
stos
xchg
ins
xchg
mov
push
push
shl
scas
pop
mov
inc
and
dec
ret
pop
mov
inc
loop
and
xor
xchg
add
movs
fist
mov
or
(bad)
jecxz
inc
push
add
call
inc
or
fucomip
aas
jae
sub
cmps
inc
pop
or
xor
and
imul
and
sbb
mov
sub
push
les
fldcw
popa
adc
xor
pop
push
sbb
jecxz
rol
test
xlat
mov
fild
xchg
stos
jecxz
mov
and
aad
neg
inc
fcmovne
mov
in
movs
pop
and
mov
cdq
pop
xlat
stos
hlt
retf
clc
push
pop
or
ins
adc
rcr
cmp
jns
stc
jne
jne
addr16
aad
pushf
mov
enter
fimul
lods
push
test
cmc
loopne
test
ret
cmp
sbb
adc
cmp
pop
mov
add
xchg
mov
mov
call
xor
fst
jo
adc
out
cmp
sub
icebp
test
rcr
push
iret
add
push
stc
add
test
inc
xlat
push
mov
jp
or
out
jbe
xchg
xor
cli
jmp
adc
lock
jmp
jg
pop
call
lods
jmp
mov
or
xchg
pop
adc
jns
loop
adc
sahf
fwait
push
sbb
test
inc
call
rcl
neg
loope
leave
or
add
clc
mov
(bad)
dec
jno
cmps
push
push
pop
loope
mov
lea
sbb
ja
movs
sbb
scas
jno
push
cld
sbb
jne
scas
lock
pop
mov
jns
dec
loop
fimul
pop
(bad)
cmp
cmp
out
fidiv
test
add
fs
xchg
rol
repz
sub
bound
and
nop
sahf
rol
mov
(bad)
daa
loopne
xor
pop
add
dec
fiadd
and
mov
xchg
dec
addr16
fld
outs
std
add
out
std
cli
repz
cmc
outs
sti
das
adc
xchg
add
or
loope
std
test
ja
lea
add
mov
jno
sti
lea
pop
loope
es
jae
stos
out
lock
loopne
call
hlt
push
inc
scas
cs
jg
dec
dec
ficomp
lods
test
pop
jne
test
pop
ins
in
adc
jmp
adc
xor
xchg
mov
jne
dec
xchg
call
sbb
inc
sub
fs
sbb
pusha
push
and
shl
movs
leave
(bad)
jp
jns
fcmovu
sbb
xchg
ds
xor
mov
xchg
mov
lods
or
loop
das
adc
cmps
fsub
jmp
out
mov
dec
mov
std
pop
jmp
push
idiv
sub
out
or
pop
and
sbb
push
in
mov
dec
movs
mov
iret
ins
mov
sbb
test
or
sub
and
sti
mov
shl
fcom
les
ins
add
cmp
dec
or
jb
je
imul
mov
nop
sub
movs
lods
daa
mov
push
imul
fwait
sbb
mov
sub
xlat
xchg
stos
mov
and
clc
call
stc
xor
retf
sbb
sbb
inc
int
gs
imul
mov
test
jg
cmps
je
in
cmps
shr
mov
xor
or
mov
leave
mov
add
stos
aas
jae
ins
sar
xchg
fdivp
or
movs
jecxz
and
add
scas
adc
mov
add
mov
cli
sahf
jmp
(bad)
stos
xor
sbb
nop
std
cmp
mov
fnstcw
shr
out
icebp
push
or
adc
dec
push
dec
stos
mov
sub
aas
mov
sti
shl
mov
dec
lock
cmc
mov
cmc
add
es
ss
xchg
dec
push
pop
sahf
daa
(bad)
sbb
lds
out
add
push
lods
fcomp
sbb
jge
je
jne
xlat
jbe
pop
cld
or
adc
mov
xchg
ret
adc
jne
lock
mov
xor
mov
imul
loop
test
adc
cmp
push
call
mov
les
arpl
ret
aas
cdq
loop
sbb
scas
sub
ret
sub
add
frstor
add
mov
mov
push
fs
out
call
in
pop
cmc
pop
jmp
(bad)
lods
xchg
(bad)
fstp
dec
jge
das
push
push
or
jmp
fwait
scas
inc
jne
out
int3
lods
fadd
xchg
lea
scas
cmp
scas
lahf
scas
dec
leave
sbb
ins
ins
dec
or
out
daa
xchg
sub
ret
repnz
in
jo
(bad)
pop
and
addr16
or
inc
dec
or
in
arpl
adc
push
inc
mov
jno
push
jmp
shr
out
sbb
loop
test
sbb
push
dec
ds
mov
mov
pop
xor
imul
das
sbb
xor
adc
fwait
movs
pop
push
sahf
adc
or
cli
and
mov
dec
inc
in
sti
push
and
dec
test
mov
mov
push
pop
add
sar
mov
mov
push
xchg
cld
xchg
mul
loopne
retf
sar
mov
fisttp
add
aam
sub
sbb
cmp
mov
cmp
pop
inc
in
pop
pop
ins
cmc
movs
mov
xchg
xchg
mov
sbb
jb
push
sbb
cmp
(bad)
int
xor
scas
imul
(bad)
arpl
lock
daa
inc
in
dec
repnz
xchg
mov
movs
adc
dec
sub
xor
jnp
sub
(bad)
xor
hlt
int
mov
jne
add
cmp
retf
mov
push
adc
rcl
int3
in
cwde
out
in
jle
xchg
lock
or
jae
iret
jmp
rol
or
shl
and
xor
pop
stc
test
aas
pop
cwde
adc
sub
push
imul
sbb
pop
daa
dec
ja
and
xchg
pop
(bad)
scas
mov
and
pop
jle
int3
mov
mov
jge
and
and
jo
add
ret
shl
mov
and
jo
lahf
xlat
mov
adc
xchg
pop
and
lahf
and
pushf
dec
or
push
or
push
clc
jbe
icebp
ins
pop
jg
cs
and
adc
sub
jnp
jl
test
out
pop
hlt
clc
adc
dec
mov
std
or
jge
pop
pop
pop
into
test
inc
rcl
cld
or
out
mov
adc
sbb
sub
pop
add
mov
fcmovu
jnp
sub
pop
xchg
mov
adc
(bad)
jb
sub
cmp
add
or
xlat
xor
neg
mov
cwde
xlat
inc
push
jbe
mov
cmps
cmp
jmp
mov
das
lds
mov
jmp
imul
push
xchg
fisubr
mov
imul
jo
cmp
xchg
out
push
idiv
js
inc
shl
and
scas
xchg
adc
lea
sub
or
xor
in
and
pop
pusha
hlt
cmovo
push
les
pop
jmp
inc
jle
cmp
adc
call
adc
test
jmp
mov
movs
xchg
cmp
and
shl
fstp
test
pop
pop
push
and
ja
lds
dec
pop
in
(bad)
ins
push
inc
add
xchg
xor
add
sbb
xor
or
sub
sbb
add
dec
mov
xchg
aaa
mov
mov
pushf
jns
jbe
data16
xchg
dec
dec
inc
dec
retf
stos
push
xor
pushf
jl
aas
imul
mov
sbb
pop
popa
aam
inc
adc
int3
in
pop
jmp
mov
nop
out
stc
cli
jne
int
cmp
pusha
adc
out
(bad)
in
(bad)
cmps
je
inc
stos
mov
inc
idiv
(bad)
push
xchg
test
scas
das
nop
pop
std
dec
push
int3
or
sbb
mov
xchg
into
mov
push
es
js
dec
xchg
(bad)
jg
sub
push
and
cmp
jno
jmp
in
sbb
repnz
repnz
retf
cmc
sbb
xor
scas
hlt
aad
push
sub
pop
cld
std
(bad)
xchg
mov
ret
sbb
cmp
rcl
jnp
mov
cmp
jp
in
dec
imul
cwde
push
shl
sub
mov
inc
pop
aas
int
cmps
sti
sar
mov
add
mov
lods
jmp
jmp
pushf
pop
daa
and
iret
aas
jmp
retf
fst
jmp
mov
mov
outs
mov
sbb
icebp
(bad)
dec
xchg
scas
or
mov
bound
imul
retf
xchg
dec
push
sahf
fld
xor
pop
(bad)
mov
mov
retf
mov
cmps
pop
inc
pop
ds
inc
mov
mov
loopne
fldenv
jae
sub
ror
dec
xchg
or
retf
arpl
cmc
nop
add
rcr
and
or
ss
imul
fs
xor
mov
cmps
or
mov
in
mov
cmc
cli
loope
xor
popf
(bad)
sbb
cmp
pop
xchg
(bad)
stos
pop
push
cmps
xchg
jnp
(bad)
sbb
push
setb
push
popf
div
or
scas
arpl
leave
dec
or
js
inc
xor
xchg
cli
fld
addr16
out
push
cmp
shl
mov
popa
add
mov
xor
cmp
xor
dec
mul
int3
push
mov
xor
ja
push
je
xor
loop
test
xchg
rol
clc
adc
iret
push
daa
sub
push
fadd
and
sub
mov
push
sahf
lods
int
mov
xchg
add
cld
mov
retf
popf
inc
mov
cs
call
pop
sub
daa
out
daa
mov
out
sbb
mov
xchg
mov
rcl
xchg
cs
sbb
cmp
lods
daa
sahf
sbb
or
and
int
scas
cdq
mov
mov
cmp
push
sbb
test
xchg
mov
jnp
mov
mov
mov
mov
scas
adc
inc
mov
loopne
fdivr
movs
aas
lea
gs
push
sub
inc
ins
jno
iret
xchg
mov
cmp
dec
stos
sbb
outs
enter
jmp
mov
es
jno
mov
pop
xchg
hlt
aam
mov
stos
and
ror
pop
mov
out
pop
pop
mov
ins
mov
or
out
mov
mov
jbe
(bad)
sti
sub
mov
mov
out
pop
mov
dec
or
aaa
shl
dec
je
retf
xchg
jne
mov
inc
ins
and
cmp
xchg
sub
stos
mov
xchg
fwait
ret
and
test
and
cdq
(bad)
adc
mov
sahf
push
jno
pop
aas
ds
fmul
xor
arpl
adc
xchg
cdq
ins
push
loopne
xchg
mov
sbb
push
aaa
mov
jno
popf
inc
pop
jg
fisttp
loope
mov
addr16
dec
push
sbb
in
clc
xor
js
xchg
cmps
and
div
retf
fidivr
ins
cmp
xlat
ror
sbb
xor
xlat
nop
cdq
add
jmp
mov
adc
jl
inc
retf
add
mov
and
out
enter
or
xchg
lods
xor
xor
int
arpl
push
lds
push
mov
mov
bnd
ret
or
sbb
pop
pop
scas
addr16
(bad)
xor
push
clc
(bad)
(bad)
fld
cwde
xchg
pop
test
in
mov
jo
loope
dec
cmps
fwait
ror
aaa
test
ds
cmp
int3
sahf
or
stc
mov
ret
clc
or
mov
push
or
imul
fisttp
mov
push
xrelease
sub
test
xor
sub
je
or
jmp
xor
loopne
(bad)
and
dec
cmc
jge
or
sbb
inc
sbb
sbb
sar
mov
sub
mov
dec
fwait
and
lods
in
lock
sbb
or
jae
mov
jns
xlat
adc
fstp
cmps
sbb
pop
xchg
cmp
fiadd
lds
arpl
loop
into
std
mov
push
add
sub
mov
dec
or
pop
mov
pop
clc
mov
sub
je
mov
test
adc
dec
fsubr
and
pop
inc
or
pop
push
cmp
rcr
dec
mov
push
pop
mov
dec
repz
(bad)
test
mov
adc
push
jmp
mov
lahf
sbb
sub
enter
imul
or
movs
mov
outs
jp
push
mov
and
jmp
in
scas
repz
lods
dec
inc
jmp
sbb
xchg
push
frstor
(bad)
and
sbb
cld
mov
inc
cmp
add
fwait
pop
mov
add
pop
std
add
ja
in
pushf
enter
pop
add
jp
stc
lods
test
mov
call
inc
adc
mov
fs
mov
jge
inc
pop
clc
mov
mov
cs
cmps
ins
cmp
push
jg
ficomp
(bad)
pop
jno
lea
in
jae
dec
cmp
out
pop
adc
outs
lea
sub
je
mov
call
jecxz
cld
imul
pop
pop
movs
mov
(bad)
ret
fdiv
xchg
or
push
add
in
push
or
ret
xchg
add
cmps
push
add
loopne
fiadd
fiadd
push
dec
or
jg
add
fnstsw
outs
sub
pushf
je
cmps
and
jle
xor
ret
in
cwde
mov
mov
shr
int
out
call
out
fidiv
data16
inc
cmp
fcomp
jns
sbb
jge
(bad)
xor
cmp
push
lea
dec
mov
xor
mov
mov
pop
push
imul
sbb
sti
loope
or
pop
pop
shr
mov
xchg
out
in
out
jp
jecxz
out
pop
add
and
pop
sbb
outs
xor
(bad)
repz
sbb
pop
push
push
jmp
pop
xlat
xchg
jnp
mov
mov
(bad)
in
xor
sub
mov
sbb
scas
mov
lea
enter
shr
sub
jmp
and
add
jl
cmp
ret
sub
sub
imul
jo
inc
jbe
aaa
int
jns
mov
jns
int3
jg
mov
adc
aas
out
js
sar
sbb
pop
ss
xor
jae
mov
ret
aas
push
mov
jg
or
popa
and
int3
movs
div
out
adc
hlt
imul
sbb
out
inc
icebp
repz
inc
mov
jno
and
cld
cmps
sub
int
mov
(bad)
std
and
or
push
jbe
js
mov
and
jnp
push
xor
lds
pop
pop
push
xchg
out
mov
sbb
imul
rcl
rcr
adc
xor
push
ret
stos
imul
loopne
push
xlat
and
cwde
adc
xchg
aaa
leave
rol
add
or
je
imul
imul
mov
idiv
push
mov
cwde
or
imul
sub
add
mov
fcomi
adc
jmp
xor
pop
test
push
inc
scas
(bad)
or
xchg
lahf
pop
ret
jl
inc
nop
int
add
pusha
mov
and
inc
inc
or
cmp
and
and
lods
out
mov
inc
cmps
add
in
mov
adc
test
inc
add
dec
mov
mov
ds
popa
or
pushf
jle
out
in
sub
jg
paddsw
shl
dec
mov
adc
inc
add
pop
sub
pop
sbb
dec
enter
jle
in
add
mov
pushf
sahf
mov
popf
pop
aaa
fwait
cmp
ins
out
scas
int
mov
cld
xor
pop
mov
ja
or
jecxz
mov
mov
out
xor
sub
mov
(bad)
mov
cmp
push
sbb
aaa
rcr
xor
push
jae
mov
jle
push
scas
iret
xchg
jb
test
push
outs
dec
sub
fisub
xor
mov
xor
fwait
jecxz
xor
mov
adc
mov
rcr
scas
mov
cmp
pop
outs
stc
pop
xchg
in
std
or
mov
sub
in
mov
jg
adc
stc
lahf
mov
xor
(bad)
stc
jne
xor
aaa
fsub
xchg
push
scas
enter
jecxz
dec
rol
sub
(bad)
jl
inc
repz
pop
ret
xor
loope
lods
mov
ret
sub
pop
sbb
(bad)
xchg
adc
xor
movs
pop
pop
push
test
mov
inc
add
add
and
aaa
sbb
test
jns
add
out
movs
push
sbb
sbb
aad
mov
jo
or
test
push
leave
sub
in
cmps
jle
es
jo
popa
idiv
(bad)
and
adc
aam
dec
pop
jmp
xchg
sub
inc
adc
nop
(bad)
pop
cmp
out
in
out
add
retf
ret
jg
dec
mov
or
jne
mov
test
add
xchg
ret
pop
stc
inc
pop
mov
(bad)
leave
mov
add
addr16
pop
fucom
(bad)
lea
add
repz
or
nop
ror
imul
scas
rol
(bad)
adc
mov
pop
xor
jno
loop
xchg
add
int3
cs
sub
aas
add
xchg
out
jl
or
loop
xor
add
imul
popa
pop
loop
std
and
mov
cmp
push
idiv
fiadd
ins
sti
fsqrt
xchg
sub
cmp
mov
not
jl
test
add
mov
shl
add
jg
mov
shl
enter
cmps
and
aaa
sub
add
clc
jmp
imul
mov
sbb
xor
sub
and
xor
int3
xchg
outs
dec
in
aad
dec
xchg
jg
popf
xor
push
push
pop
jecxz
ss
aad
xor
sahf
adc
cmps
shl
loope
push
dec
push
mov
mov
push
mov
daa
dec
sbb
mov
push
out
arpl
xchg
dec
dec
xor
mov
jae
jo
test
mov
imul
jg
or
adc
mov
add
sbb
inc
adc
scas
(bad)
retf
jns
sbb
and
jns
cmc
ror
data16
jae
push
(bad)
or
retf
mov
icebp
inc
push
aas
mov
cmps
pop
cmp
leave
test
pop
jns
out
das
retf
jns
mov
mov
into
or
mov
mov
mov
loope
mov
cmps
inc
push
inc
sbb
dec
push
mov
mov
sahf
out
out
dec
push
jge
(bad)
int3
scas
out
cmc
pop
adc
jno
xchg
xlat
ja
mov
xchg
push
sub
gs
call
aas
push
sbb
push
clc
pop
(bad)
sub
mov
jae
(bad)
es
(bad)
pop
xor
sbb
xchg
std
sub
mov
(bad)
mov
sahf
xchg
fst
jb
mov
and
jecxz
push
in
or
inc
mov
scas
outs
mov
shl
jnp
pop
push
sub
pushf
sub
loope
rcr
fst
mov
call
cmp
push
gs
loopne
fst
call
xor
ds
ins
jbe
fcom
gs
les
nop
sub
in
jg
daa
and
mov
test
mov
xchg
icebp
or
addr16
sbb
jmp
sti
pop
inc
add
test
xchg
pop
nop
bound
mov
or
pop
in
and
mov
inc
push
div
adc
mov
jb
(bad)
outs
lock
les
rcl
pop
shl
jb
and
sub
mov
and
jp
jl
push
pop
push
enter
mov
push
push
bound
ins
xchg
adc
fadd
cmp
xchg
in
cld
loope
dec
cli
out
xchg
(bad)
mov
pop
ret
shr
scas
xchg
mov
push
inc
pusha
clc
mov
sar
sub
inc
imul
add
fcom
jns
pusha
sti
arpl
fmul
jp
jecxz
leave
push
adc
sub
mov
jl
movs
xchg
dec
repz
or
dec
jnp
loopne
sub
out
mov
sahf
mov
jno
loopne
xchg
dec
(bad)
out
mov
push
sahf
ins
leave
mov
sbb
or
push
retf
pop
adc
sbb
(bad)
xor
add
push
mov
cs
sub
(bad)
mov
xor
ins
inc
pop
cmp
push
retf
fnstenv
pop
fsubr
push
pop
mov
sub
icebp
mov
leave
xor
cmp
fistp
pop
adc
outs
aad
xor
call
lods
pop
sbb
dec
icebp
sar
dec
jo
adc
add
ins
adc
add
dec
dec
and
cmp
add
xor
(bad)
hlt
ja
push
cmp
fcomp
sbb
mov
enter
outs
pop
inc
jmp
add
(bad)
in
and
and
(bad)
std
add
push
cmp
xchg
ins
arpl
xchg
arpl
inc
fdivr
cmp
inc
or
in
ins
imul
pop
adc
xor
mov
shl
aad
nop
repz
sub
adc
shl
mov
cli
ret
lds
shr
ins
mov
cmp
jle
in
sub
fsubr
sub
push
mov
loope
or
jle
fnstcw
push
dec
push
mov
add
cmc
movs
(bad)
mov
or
xchg
sub
or
bound
std
fsubr
test
adc
push
xor
out
aas
inc
aad
pop
push
mov
xor
ins
inc
or
rcr
push
add
xlat
xor
aam
nop
or
mov
xor
adc
sbb
(bad)
gs
cmp
jecxz
enter
mov
xchg
xchg
add
jae
imul
sub
adc
cmp
fsubr
aad
in
icebp
mov
hlt
xchg
or
ror
inc
or
ret
xor
push
pusha
addr16
in
aas
test
imul
push
popf
movs
xor
pop
rcr
pop
adc
and
je
xchg
sub
inc
inc
dec
push
ror
add
fsub
mov
or
adc
dec
cmp
inc
mov
enter
inc
scas
jmp
fdivr
sub
xor
add
int3
ficom
(bad)
ds
mov
jmp
xor
not
fst
outs
adc
xchg
sub
lods
jle
cmp
or
pop
dec
jno
mov
adc
imul
xchg
inc
pushf
cs
leave
xlat
ja
je
jb
fs
jmp
push
cmp
stc
repz
cmps
imul
adc
gs
lods
mov
jae
push
mov
jns
mov
add
icebp
not
push
xor
or
push
xor
ror
arpl
dec
push
popf
in
lods
mov
bound
xlat
fsub
add
mov
sub
sahf
or
imul
std
push
out
mov
arpl
mov
movs
fstp
enter
add
dec
ror
(bad)
test
xchg
ds
fwait
outs
mov
outs
sbb
mov
xlat
cmc
pop
mov
or
div
sti
inc
rcl
fwait
mov
mov
or
jmp
mov
xchg
scas
inc
adc
in
jbe
in
in
(bad)
adc
adc
jmp
sbb
jge
xor
outs
sbb
sub
and
test
ins
cdq
bnd
pop
mov
adc
(bad)
inc
mov
dec
inc
fisttp
gs
pop
sub
iret
fstp
pop
lds
mov
and
lods
push
fcom
mov
in
les
xchg
sbb
add
sbb
xchg
cmp
cmp
mov
pop
inc
sahf
(bad)
mov
add
mov
sbb
jnp
dec
pop
and
add
adc
adc
sub
mov
mov
pop
sbb
mov
pop
mov
in
sti
andps
addr16
xor
jmp
xchg
(bad)
fisub
ja
pop
cmp
fwait
je
std
xchg
in
ret
xchg
and
cs
add
into
fidiv
nop
stc
ins
or
es
ss
and
shl
jne
ret
xchg
mov
mov
mov
aaa
bound
or
cdq
mov
sub
ja
ret
imul
push
mov
stos
(bad)
mov
or
xor
and
cmp
jmp
(bad)
mov
mov
jb
fdivr
iret
inc
in
cmp
movs
mov
xchg
jl
sub
mov
or
push
inc
adc
cmps
mul
sub
cmp
lea
sub
ds
jp
sbb
fwait
mov
sahf
scas
out
(bad)
mov
in
ret
add
fidivr
adc
dec
cmp
xor
or
pop
push
mov
sub
adc
mov
(bad)
enter
sub
jne
sub
pop
leave
and
scas
pop
mov
jbe
jmp
xchg
fwait
pop
nop
scas
fldenv
cdq
fs
fwait
inc
pop
sub
dec
imul
les
shl
inc
dec
bound
int
fs
loopne
dec
call
and
das
cmp
fldcw
ja
mov
mov
jbe
xchg
cmp
cmp
inc
ror
dec
cmp
mov
sub
out
mov
or
and
sbb
adc
outs
adc
add
sub
dec
jno
and
and
outs
xor
dec
jbe
adc
jecxz
cdq
mov
fiadd
mov
and
sub
dec
mov
nop
dec
mov
or
lea
js
imul
and
ds
enter
loop
aaa
pop
(bad)
stos
movs
and
sub
addr16
cmp
hlt
xchg
lods
jae
loope
(bad)
cmc
aad
call
mov
(bad)
outs
movs
sub
mov
cmc
xor
jno
push
in
call
cmp
test
xor
pop
sti
sub
addr16
jle
push
lds
mov
pop
fadd
test
rcl
dec
jo
shr
jns
imul
out
arpl
pop
fcom
sub
dec
adc
pop
pusha
push
mov
les
loope
popf
ss
cmp
mov
popa
rcr
sub
pop
mov
daa
mov
add
aad
xchg
mov
lods
xor
and
xchg
repz
call
sbb
pop
arpl
loop
add
icebp
sub
call
add
rcl
add
jmp
jle
adc
test
sub
jp
jo
push
(bad)
adc
loop
cmp
jns
xor
mov
push
icebp
sbb
xchg
mov
out
scas
jge
inc
shl
jl
out
mov
cwde
and
sub
arpl
jp
cmp
sahf
scas
scas
xchg
and
ds
ret
pop
std
(bad)
es
inc
test
xchg
xchg
pop
lods
mov
push
push
js
push
rol
sub
xor
(bad)
popf
jne
mov
data16
retf
or
cmp
sar
sub
mov
jne
ins
neg
test
mov
imul
fidiv
jmp
fnstcw
out
jne
and
push
push
add
xor
adc
sub
(bad)
xchg
jno
shr
and
outs
mov
push
jnp
inc
sbb
rcr
push
sub
jne
cmps
cmp
ret
pop
cwde
mov
test
call
popf
sub
cmp
fsub
xor
je
aad
mov
mov
test
inc
jns
(bad)
sti
sub
sti
sbb
lds
mov
sti
addr16
inc
pop
ja
sti
cmps
cmp
into
lahf
clc
add
jecxz
ret
stos
cmp
push
and
add
fcom
xchg
xchg
mov
inc
mov
mov
mov
mov
cwde
int3
mov
in
mov
pop
scas
fstp
jnp
inc
dec
addr16
(bad)
nop
stos
push
fnstenv
ror
sub
out
fidivr
movs
inc
xchg
xchg
mov
pop
sub
gs
test
shl
lds
xor
movs
fdivr
mov
xor
push
mov
sub
add
gs
add
adc
fbstp
(bad)
or
iret
cmp
add
dec
int
cmc
jae
xor
adc
(bad)
jns
test
xlat
mov
mov
mov
test
pop
jmp
xor
sti
jge
mov
imul
jb
jns
pop
ret
out
int3
ror
cwde
js
(bad)
rcr
xor
(bad)
clc
ror
out
cs
sbb
xchg
dec
jae
jle
sbb
cmp
sub
stc
xchg
sbb
cmp
adc
jae
sti
sbb
popf
xor
std
inc
xor
mov
fdiv
inc
popa
sbb
hlt
retf
imul
ins
xor
mov
cli
mov
jecxz
fidivr
cld
test
mov
cli
sub
inc
cmp
gs
in
mov
stos
repz
out
fsubrp
test
add
jp
inc
into
je
je
(bad)
cmp
mov
mov
test
shl
pushf
fsub
jmp
iret
adc
pop
jg
les
pop
jmp
jmp
icebp
retf
sbb
jne
adc
push
rcr
adc
arpl
mov
mov
xchg
(bad)
mov
js
xlat
cmp
inc
push
dec
dec
sub
mov
mov
or
xchg
xor
lock
popa
movs
dec
xor
xchg
in
xchg
movs
loopne
fsubp
daa
pop
adc
mov
stos
or
lds
(bad)
or
icebp
repnz
jne
aaa
fdivr
add
addr16
jl
hlt
mov
fdivr
push
fsub
(bad)
pop
fs
sub
push
leave
jb
fnstcw
push
add
cmps
mov
cmp
inc
ret
mov
test
icebp
sbb
sub
jge
mov
repz
cli
outs
jno
sub
mov
mov
imul
sub
pop
daa
add
sub
cs
das
test
mul
dec
fdivrp
sbb
test
or
xchg
hlt
add
(bad)
lods
sub
ds
add
mov
lods
and
or
aam
jecxz
sbb
ins
adc
xchg
jl
iret
loope
movs
mov
push
loope
or
xlat
dec
or
sahf
push
jbe
fisub
xchg
cli
fimul
(bad)
mov
cld
or
retf
into
mov
xchg
test
lds
mov
cld
mov
jmp
jecxz
xchg
xchg
std
xrelease
test
es
clc
sub
lods
adc
movs
call
fcom
daa
cmp
pop
push
hlt
sbb
add
pusha
pop
inc
xchg
xchg
bound
rcl
ret
(bad)
rcr
repz
mov
cmp
mov
not
icebp
adc
push
sar
movs
or
cs
and
jmp
jbe
xchg
xchg
test
lock
or
test
or
arpl
xor
mov
fst
shl
sar
adc
cld
push
mov
push
mov
jno
xchg
xor
(bad)
adc
ret
inc
jmp
push
mov
retf
add
pop
inc
(bad)
jae
out
leave
add
mov
in
jno
jg
adc
mov
xor
cmp
data16
cmp
nop
add
pop
mov
mov
dec
es
lds
sbb
ins
outs
mov
xor
dec
sbb
cmp
cmps
sub
mov
jmp
cld
cmps
das
(bad)
int
mov
mov
mov
(bad)
int3
out
push
mov
cld
inc
cmp
rol
cmp
repnz
and
stos
call
popa
add
pop
adc
adc
aaa
pop
add
arpl
jnp
sub
add
dec
in
sub
sbb
fcomp
dec
xchg
cmp
pop
mov
jnp
mov
push
ins
ss
cmp
cmp
adc
jmp
std
ret
xchg
test
and
sub
fidiv
and
aad
bound
xor
shl
pusha
lds
jnp
adc
push
and
or
push
mov
or
in
sbb
jb
push
jne
stos
pushf
movs
dec
jnp
pushf
(bad)
div
rcl
xor
mov
adc
sub
mov
dec
outs
popa
iret
or
or
cmp
(bad)
out
jo
adc
mov
nop
dec
dec
add
inc
xor
add
cld
and
sbb
data16
cmp
cs
mov
sar
push
imul
aam
jne
cmp
inc
in
rol
mov
push
pop
aas
xchg
pop
push
shr
or
cli
stc
les
in
pusha
jne
ror
(bad)
mov
pop
pop
jmp
lods
cdq
es
mov
lds
adc
mov
mov
stos
mov
lods
inc
sbb
or
mov
dec
or
cmps
aam
test
mov
sti
es
jb
out
jne
sub
and
mov
xchg
mov
cmps
cli
xor
int
cmp
push
lahf
sub
lahf
bound
pop
hlt
and
sar
adc
or
mov
or
sbb
mov
(bad)
jo
hlt
imul
adc
jge
stc
retf
fwait
retf
aad
jno
xor
lahf
addr16
test
mov
mov
sbb
pop
in
cmc
push
fwait
mov
and
and
mov
test
ss
popa
dec
ja
scas
pop
dec
xchg
jmp
mov
push
mov
outs
mov
lahf
jg
jbe
idiv
cmp
mov
retf
int3
icebp
and
inc
or
adc
adc
aaa
lods
sbb
push
inc
pop
mov
dec
xchg
rol
and
(bad)
push
ret
or
or
dec
and
shl
addr16
aaa
push
mov
mov
add
lds
stos
fidivr
mov
push
mov
pop
jge
cs
sbb
clc
rcr
pop
mov
sub
fisub
jle
pop
or
mov
fs
cs
mov
(bad)
movs
iret
or
lods
mov
xchg
pop
add
test
adc
popf
or
test
mov
int3
mov
xor
xchg
jp
ds
cmc
fisttp
mov
or
inc
dec
ror
ficom
fisttp
mov
shl
lods
or
pop
repnz
in
std
xor
retf
sub
out
nop
sbb
pushf
xor
inc
sbb
cdq
sbb
adc
cwde
push
stc
add
clc
fisttp
mov
jmp
jae
dec
daa
bound
out
ss
xor
ror
mov
inc
mov
add
xlat
cmps
xor
inc
lds
adc
mov
push
dec
xchg
lea
stc
(bad)
call
(bad)
jg
dec
dec
xlat
push
adc
aad
je
stos
inc
xchg
(bad)
jle
js
mov
or
xchg
inc
into
push
cmp
xor
aas
repz
rol
adc
fwait
dec
and
mov
pop
je
mov
fsub
stos
sub
sbb
daa
stos
rcr
jnp
push
jl
movs
stos
lods
push
sub
mov
xor
add
xchg
xor
loope
ficom
cmp
push
cdq
mov
nop
ss
pusha
cmc
pop
xchg
adc
xor
cdq
mov
cld
push
ret
pop
inc
repz
in
out
mov
test
and
loopne
js
nop
dec
ins
lahf
mov
mov
in
mov
lock
lods
bound
fistp
stos
or
imul
mov
js
push
aam
ja
cmps
ret
ja
push
dec
mov
neg
icebp
push
push
cmp
pop
nop
dec
popa
sar
cld
dec
mov
div
repz
stos
push
pop
or
jp
lds
pop
pushf
imul
js
mov
xchg
in
rol
je
(bad)
bound
repnz
mov
scas
jb
mov
lahf
add
mov
dec
and
dec
lods
je
push
jecxz
retf
jmp
call
inc
in
(bad)
jp
aas
push
xchg
cmps
aas
adc
mov
add
cmp
mov
mov
iretw
add
cmp
scas
pextrw
icebp
sub
or
push
sub
lds
data16
lea
lods
in
xchg
mov
pop
mov
out
jecxz
dec
jae
jmp
push
xchg
test
and
lods
in
pusha
(bad)
ss
outs
dec
xlat
mov
mov
sub
test
sbb
adc
mov
sub
inc
cld
push
popa
mov
pop
add
or
popf
push
movs
mov
mov
jbe
cmp
(bad)
into
dec
imul
mov
push
pop
test
dec
and
mov
pop
(bad)
mul
xchg
mov
push
push
in
addr16
mov
or
mov
xor
add
movs
xchg
sbb
mov
adc
lea
pop
inc
sub
and
fs
and
test
dec
cld
aaa
push
jno
test
mov
fbld
xor
or
out
(bad)
repz
add
jl
pop
enter
push
xor
loopne
out
jg
imul
mov
(bad)
ja
cwde
xchg
jmp
ins
cdq
xchg
ins
arpl
(bad)
outs
outs
loopne
gs
add
retf
pop
(bad)
fsubr
jae
ja
add
nop
iret
sub
sub
(bad)
stc
xchg
adc
and
dec
xchg
retf
cs
sub
jmp
jmp
xchg
stos
add
push
sti
imul
movs
fwait
adc
xor
pop
iret
jnp
mov
adc
mov
repz
mov
lods
inc
imul
or
fsubr
mov
dec
push
mov
and
repz
xor
stos
xor
xor
(bad)
in
jne
ss
jp
jno
imul
or
dec
ss
pop
lds
sbb
jne
push
mov
sbb
sbb
sub
mov
xchg
sti
adc
dec
mov
ss
mov
in
sbb
sar
push
fisubr
and
rcl
into
fbld
in
sub
(bad)
mov
push
dec
ret
push
add
push
das
mov
sub
jb
add
pop
pop
mov
arpl
mov
sub
dec
pushf
sbb
or
dec
xchg
push
jns
jp
fcomp
and
cwde
int3
push
push
inc
inc
jb
xor
dec
cli
jbe
in
pop
push
idiv
leave
les
xchg
lahf
scas
dec
cmp
int3
sbb
jns
sahf
or
lock
repnz
adc
mov
sbb
lock
clc
dec
mov
pop
mov
xor
fisttp
test
push
out
push
sbb
test
sub
inc
sub
dec
sbb
push
mov
out
lods
cmp
dec
outs
jmp
jmp
je
inc
jg
inc
mov
push
cs
(bad)
cdq
repnz
cmp
jge
dec
pop
out
sahf
and
dec
aas
dec
sti
or
mov
mov
or
push
mov
xor
adc
dec
mov
in
clc
(bad)
add
aas
mov
mov
(bad)
or
push
test
mov
(bad)
call
sub
ret
pop
into
fsubrp
cmc
cmc
inc
push
cmp
cli
arpl
in
mov
ss
shl
out
fsub
retf
xor
and
jnp
xchg
fadd
imul
mov
pop
icebp
je
dec
jb
adc
jecxz
aam
push
adc
sub
lock
ds
mov
dec
lods
jg
jmp
jge
xlat
add
daa
nop
aam
pop
and
loopne
push
pop
clc
lds
fld
push
mov
ins
pop
cwde
mov
dec
mov
xchg
inc
sbb
cmps
pop
ds
add
retf
sar
(bad)
pop
inc
xchg
aas
and
rol
data16
dec
add
sbb
aam
fcmovb
setg
rol
jmp
xor
pop
jo
mov
iret
or
imul
sbb
pop
sbb
jl
add
inc
adc
add
das
scas
sar
xchg
jge
xchg
dec
in
sub
lock
jno
repnz
add
(bad)
lods
in
imul
mov
mov
mov
mov
inc
sub
pop
pushf
fldcw
or
jmp
icebp
jp
pop
lock
lahf
push
mov
inc
das
cmps
push
xor
adc
cmp
in
xchg
xor
fs
test
pop
(bad)
jle
xchg
fs
jns
or
pcmpeqb
dec
and
add
dec
daa
inc
icebp
in
xchg
jae
repnz
sbb
jne
mov
fdivr
push
cmp
outs
movs
sub
dec
jae
mov
sahf
lds
add
lock
in
inc
jmp
pop
jp
int
jns
mov
sub
loope
xor
ds
xchg
xor
add
stc
dec
test
xchg
ds
retf
xchg
loop
ss
sub
addr16
enter
out
mov
shr
data16
rcl
(bad)
stc
mov
mov
inc
mov
push
xrelease
jg
cmp
sbb
sub
enter
sub
sbb
(bad)
xchg
push
or
sbb
loop
ins
mov
shl
sbb
jle
test
nop
aam
xchg
mov
cs
rol
mov
es
adc
into
imul
or
arpl
mov
dec
sbb
add
pop
pop
aaa
(bad)
jmp
je
out
ret
mov
scas
mov
rcl
mov
jle
fwait
in
daa
pusha
in
in
addr16
jno
test
mov
fistp
xchg
call
jne
jecxz
dec
pusha
push
in
xchg
adc
(bad)
adc
repnz
inc
mov
mov
aad
ret
retf
sbb
pop
ret
add
push
cmp
mov
or
out
ss
cmp
pushf
cmp
or
loopne
push
hlt
stos
xor
push
jno
inc
hlt
sti
sub
pushf
mov
or
xchg
les
arpl
out
push
inc
outs
jle
mov
push
mov
and
daa
pop
mov
pop
mov
js
test
ins
xor
xchg
jo
jo
dec
mov
fcomp
neg
inc
jecxz
mov
cli
call
jno
dec
data16
retf
push
in
lahf
fild
in
scas
call
inc
mov
dec
imul
test
fwait
bound
outs
add
jo
add
out
and
int
fwait
dec
loope
popa
sbb
in
scas
add
into
jp
fcmovb
dec
fcmovb
sbb
or
mov
or
js
xchg
jmp
jle
sahf
lock
dec
pop
sub
xlat
push
adc
aas
fiadd
not
sub
lea
iret
and
pop
mul
jmp
cmp
sub
sti
xor
lods
cmps
test
pop
jno
sbb
lock
sbb
sub
test
push
aaa
popf
ins
popa
cwde
clc
mov
mov
pop
fs
dec
jo
lods
je
jp
popf
aam
sub
(bad)
mov
sti
and
or
or
add
enter
mov
push
loope
into
dec
mov
add
in
out
(bad)
cmps
fist
dec
inc
test
jae
add
adc
sahf
sub
icebp
rcl
lds
inc
movs
lods
push
dec
mov
mov
lds
lock
enter
pop
mov
pop
mov
(bad)
out
jge
mov
popf
enter
cmp
and
sub
jne
(bad)
mov
add
(bad)
push
sar
test
jecxz
bound
outs
inc
outs
jmp
call
enter
xor
sbb
dec
scas
inc
cmp
loop
or
movs
jns
and
cs
dec
adc
daa
fwait
test
xor
idiv
push
icebp
pushf
sbb
mov
push
jg
std
retf
cmp
xchg
adc
(bad)
sub
icebp
xchg
or
pop
movs
cli
jb
xor
sub
(bad)
hlt
push
idiv
stos
add
fiadd
jno
lods
xchg
xchg
lock
push
pop
dec
or
inc
push
hlt
mov
push
jmp
movs
sbb
adc
inc
jl
add
sbb
fbld
call
test
adc
aad
push
enter
dec
and
in
fsubr
clc
xchg
jae
stos
dec
adc
push
add
cmp
sub
pop
jp
cmp
lock
push
jle
inc
les
fs
shr
imul
call
ins
sbb
mov
mov
mov
ins
ins
ja
fstp
push
(bad)
int
jmp
jbe
test
out
sbb
xor
xor
jp
inc
xchg
cmp
ret
sbb
in
or
mov
sub
loopne
push
dec
xchg
imul
or
(bad)
aaa
sbb
adc
aam
loopne
movs
sbb
inc
icebp
test
jp
sub
fiadd
ror
adc
mov
js
ss
xchg
pop
cmp
jae
(bad)
sub
fild
adc
adc
call
popf
jmp
mov
add
test
(bad)
push
mov
les
movs
push
stc
adc
fild
push
or
gs
xchg
mov
sbb
mov
pop
out
inc
mov
aam
xchg
adc
push
add
inc
adc
scas
push
or
inc
int3
sub
mov
pop
and
and
cld
cdq
scas
fwait
sahf
jae
add
dec
sti
cwde
loope
adc
test
pusha
dec
loope
scas
cli
(bad)
fisubr
cmc
stos
(bad)
sti
stc
(bad)
fadd
ss
test
push
add
pop
xchg
rcl
sti
mov
add
pop
ret
xor
cmp
imul
add
mov
or
xor
push
shrd
xor
std
lods
loope
repz
xor
inc
and
add
jae
or
push
xchg
test
and
outs
ret
adc
sbb
pop
adc
inc
daa
fstp
div
jle
push
sbb
or
pop
add
aaa
inc
call
aad
or
mov
ret
std
lahf
pop
mov
xchg
and
outs
mov
cwde
jnp
mov
inc
xor
sub
sub
mov
xchg
inc
out
stc
push
iret
pop
mov
adc
inc
js
pop
adc
shl
inc
inc
push
cmp
xchg
mov
pop
jmp
mov
mov
push
out
(bad)
xlat
inc
cmp
add
adc
popa
or
fsubr
pop
es
aad
ret
repnz
into
push
lds
mov
jecxz
outs
pop
inc
mov
js
xor
sub
push
jg
mov
fsub
lods
enter
and
add
push
jp
add
sbb
dec
mov
push
jno
jno
sub
sbb
mov
int3
call
lods
adc
into
rcl
push
stos
mov
mov
push
add
pop
push
jge
inc
std
imul
sti
inc
mov
xor
dec
cdq
add
cmc
and
mov
xchg
and
mov
and
and
ins
(bad)
cmp
jmp
repz
sub
sbb
mov
iret
mov
punpcklwd
aam
xor
imul
sub
pop
js
(bad)
repnz
loopne
ret
test
lds
and
push
stc
adc
push
jb
lahf
call
cmps
or
jle
ds
lahf
out
xchg
lods
sub
pop
jo
test
xchg
and
loop
enter
call
add
ffree
pop
pop
xchg
jl
push
mov
data16
dec
inc
out
mov
sub
mov
sar
call
sbb
inc
mov
movs
cmps
mov
fwait
test
js
cli
push
and
pusha
test
add
mov
andps
int3
lods
idiv
movs
movs
pop
int3
or
mov
ret
loopne
jp
iret
lahf
inc
pop
repz
test
xor
inc
in
jno
cmp
cdq
icebp
std
and
mov
pop
mov
jb
lea
cld
test
adc
dec
fidivr
push
test
mov
pop
movs
xor
clc
push
not
mov
rcr
arpl
jl
pop
cmp
aad
pop
cmp
jp
call
mov
sar
cmp
sub
lods
das
cmp
mov
pushf
jnp
dec
outs
sbb
cld
aad
loop
je
lods
aaa
ret
xchg
call
js
jmp
push
ss
ins
inc
cmp
fld
iret
jno
sbb
add
xchg
pop
xchg
mov
pop
inc
aam
cwde
fisttp
iret
rcl
dec
ror
ror
mov
dec
dec
(bad)
jns
pop
aad
xor
inc
xchg
xchg
pop
xor
mov
gs
fwait
jmp
mov
xor
sbb
sbb
stc
movs
mov
out
retf
pop
out
add
jnp
xchg
leave
call
outs
mov
rol
repnz
lods
lods
push
rcr
sar
push
dec
repnz
ror
cdq
fldenvw
fld
mov
jbe
sub
call
sub
fnstenv
mov
ret
add
aam
xabort
xchg
cli
fsub
imul
loop
and
in
(bad)
movs
test
dec
fisubr
retf
loop
jbe
sahf
pop
push
adc
jne
fmul
ins
test
dec
lods
lods
add
scas
jg
dec
enter
mov
mov
cwde
sbb
lods
aaa
fild
adc
std
(bad)
mov
in
fs
in
xlat
out
jo
sub
js
mov
in
dec
arpl
in
sub
xor
fisttp
lahf
in
adc
mov
jns
dec
xchg
(bad)
rol
mov
rcr
xlat
jge
pop
test
pop
in
iret
cwde
arpl
xor
inc
push
ss
sbb
int3
popa
aam
xchg
ja
movnti
rol
inc
movs
xchg
adc
shl
push
push
fnstenv
pop
ficomp
push
ret
lock
push
xor
mov
lock
xlat
lods
mov
js
(bad)
sbb
sub
adc
inc
jmp
jno
add
mov
mov
dec
and
iret
scas
and
xor
ror
add
test
ret
outs
mov
popa
fs
jae
lock
mov
sbb
loope
outs
int3
xor
jl
dec
fbstp
fst
add
sub
xor
xor
cmp
ins
jl
lods
inc
int3
push
lea
push
sub
scas
adc
hlt
neg
lods
push
add
pop
cdq
sub
pop
cld
mov
rcl
jmp
js
push
lds
or
add
sti
push
adc
imul
test
fisubr
dec
or
jmp
push
adc
mov
movs
aaa
sub
hlt
lods
repnz
pop
xchg
sar
outs
call
push
dec
xchg
push
loope
repnz
dec
jl
cmp
push
and
cwde
cli
xchg
add
adc
push
bound
xor
push
mov
jns
fld
sar
pop
pusha
add
mov
pop
jmp
sbb
cmps
sbb
adc
push
mov
jnp
int
ret
inc
or
iret
mov
loop
xor
aas
xchg
pop
test
in
xor
sbb
out
inc
mov
jb
daa
inc
add
sar
mov
pop
out
cmp
movs
push
mov
clc
in
sub
mov
inc
push
das
mov
dec
xchg
inc
adc
sub
add
(bad)
dec
imul
or
push
jmp
shr
mov
jmp
push
adc
je
or
mov
icebp
(bad)
repnz
pop
fmul
ror
sbb
fdivr
cmp
adc
jmp
jle
xchg
jno
shr
repz
inc
mov
sub
jecxz
xor
dec
xchg
xor
and
fwait
xchg
lods
fwait
cmp
mov
shr
sub
jmp
fldenv
xchg
fst
jnp
pop
dec
out
or
shr
or
std
jmp
adc
pop
scas
and
push
inc
mov
out
aaa
scas
repz
adc
xchg
dec
pop
sbb
jp
fs
dec
jecxz
test
jp
aad
xor
fadd
inc
movs
xor
stos
popf
ret
mov
cdq
imul
xchg
sbb
popf
xor
and
fs
cmc
adc
gs
imul
(bad)
shl
and
mov
or
ret
cld
scas
js
and
aas
xchg
pushf
pop
clc
jl
or
clc
hlt
cmp
dec
jle
push
cmp
dec
inc
movs
mov
and
std
(bad)
cli
and
pop
aam
xor
int3
fwait
fwait
mov
pop
pop
lds
sbb
nop
jne
hlt
(bad)
push
push
mov
stos
inc
pop
ss
jo
lock
adc
sbb
aad
mov
sub
es
xor
ins
retf
sti
loope
adc
xchg
jge
cmp
nop
ficomp
push
add
cmps
repz
data16
push
mov
loop
enter
cmp
jge
xchg
xchg
test
sbb
pushf
in
mov
xlat
ror
mov
or
aad
aad
jl
mov
jb
popf
adc
fidiv
mov
aaa
scas
jmp
mov
mul
fnstcw
ds
test
shr
mov
lods
les
call
mov
push
sbb
es
inc
std
inc
pop
call
cli
mov
imul
sub
je
fdivr
sub
push
push
stc
(bad)
frstor
scas
add
or
sahf
ss
int3
sahf
inc
call
dec
xor
addr16
inc
adc
sbb
ds
out
push
jecxz
inc
dec
sub
retf
xchg
inc
pop
sbb
mov
and
cli
jmp
aam
ss
push
add
dec
inc
cmp
mov
mov
push
inc
or
xlat
fwait
mov
mov
sar
hlt
pusha
push
outs
sbb
adc
icebp
fmul
and
mov
lahf
bound
xchg
mov
popa
stos
pusha
jne
adc
les
push
lds
sub
jns
into
mov
cs
fidiv
sub
retf
and
es
push
or
test
dec
nop
out
and
ins
dec
fstp
mov
lahf
pop
push
aas
cmp
dec
pop
push
add
(bad)
popa
mov
stos
mov
inc
out
adc
and
pop
mov
xchg
jnp
shr
jg
push
repz
or
lahf
test
xor
push
pusha
inc
lds
xor
imul
pop
push
mov
in
cmp
inc
cdq
pop
or
cmps
rcl
or
test
push
mov
lods
jbe
test
retf
ret
mov
add
sbb
sbb
push
jbe
in
jmp
mov
imul
mov
adc
sub
cld
out
mov
pop
daa
push
aaa
pop
push
into
shl
rcl
(bad)
dec
dec
jge
lds
int
leave
xchg
inc
fwait
jo
pop
adc
addr16
cmp
inc
or
adc
mov
add
fldlg2
mov
loop
call
mov
out
mov
or
(bad)
dec
xchg
jecxz
mov
pop
js
or
scas
pop
cmp
fidivr
test
add
mov
inc
mov
ret
sbb
(bad)
test
push
dec
gs
and
lahf
ss
adc
je
mov
outs
sbb
fs
sbb
mov
fbld
pop
stos
loop
retf
cdq
repz
mov
sbb
mov
add
jg
int3
xor
in
aaa
test
aam
mov
or
retf
mov
ret
dec
rcl
pop
jne
xor
jae
mov
add
stos
jb
scas
mov
cmc
loop
adc
cmp
std
adc
push
mov
(bad)
xor
nop
iret
popa
lods
ds
scas
lahf
int3
cmp
test
aam
dec
mov
in
in
outs
dec
sbb
test
inc
sahf
icebp
mov
arpl
sti
xor
fisttp
pushf
ror
ja
mov
lahf
jl
jmp
mov
push
mov
xchg
cmp
mov
sub
gs
push
and
sub
cmp
pop
test
fdiv
pop
je
jae
stos
and
xor
jnp
popa
rcl
jo
xor
pushf
popf
cmp
out
lahf
jmp
xchg
mov
pop
lods
lods
popf
adc
aaa
rol
ja
ja
adc
(bad)
mov
not
ror
das
popf
daa
nop
fdivr
mov
sbb
pop
(bad)
movs
loopne
sub
stc
adc
dec
dec
add
fidiv
aad
mov
das
and
bnd
dec
or
add
daa
stc
lods
xchg
xchg
data16
in
mov
imul
retf
clc
mov
shl
inc
mov
inc
in
dec
pop
pop
jae
mov
xlat
mov
dec
xor
leave
pop
scas
jle
mov
fidivr
std
(bad)
mov
jle
jl
add
cmp
jecxz
hlt
iret
pushf
dec
popa
mov
(bad)
pop
mov
mov
inc
mov
ret
mov
inc
cmc
js
fadd
push
or
shl
cmp
mov
sti
lock
jbe
movs
aas
mov
xchg
fcomip
push
dec
mov
mov
mov
adc
cmp
pop
inc
cs
xor
test
add
or
mov
inc
popa
rcl
sub
into
sub
loop
ds
aaa
or
jno
dec
push
fmul
fwait
xchg
(bad)
ror
outs
(bad)
out
dec
scas
in
jbe
sahf
nop
add
and
xlat
dec
sbb
popf
add
fsubr
mov
add
jmp
sbb
lahf
inc
mov
or
and
mov
fs
sbb
cmps
jp
fnstsw
sub
lahf
sbb
push
jno
aad
ja
(bad)
fwait
xchg
jo
neg
or
xchg
jle
pop
ret
(bad)
mov
mov
pushf
jl
pop
add
mov
mov
sub
dec
push
test
dec
mov
test
add
in
mov
push
mov
gs
push
jle
jae
pusha
ret
adc
dec
mov
int3
and
sbb
and
or
xchg
rcr
leave
cmp
sar
test
xor
push
sub
or
std
adc
(bad)
frstor
lods
or
(bad)
pusha
jae
retf
leave
or
cmp
cmps
fs
or
mov
rcl
xor
lds
lods
xchg
repz
mov
add
dec
leave
push
cs
lods
adc
pop
das
adc
mov
in
jmp
pop
push
(bad)
dec
(bad)
adc
dec
mov
push
inc
or
out
jg
into
xchg
jecxz
sbb
sub
movs
and
jo
test
cmps
inc
stc
scas
xchg
cmp
faddp
pop
out
jmp
lds
xor
fidiv
imul
enter
jae
cmp
mov
(bad)
fcom
pop
pop
sub
into
test
(bad)
cmp
dec
xchg
scas
mov
data16
push
stos
xchg
sti
dec
ret
xor
xor
lahf
pop
or
test
imul
mov
cmp
add
adc
sbb
lods
shl
out
(bad)
pop
sbb
jnp
rol
mov
or
in
pop
je
mov
push
ret
mov
push
call
add
les
into
add
inc
lahf
or
(bad)
int3
les
ror
sub
sub
cmc
sar
repz
mov
pop
push
sbb
rcr
xchg
sbb
mov
das
in
push
pop
cld
aad
les
inc
mov
int
add
xchg
sub
retf
sbb
adc
fcomp
ss
lods
cld
div
mov
pusha
imul
or
lea
lods
lods
sub
mov
pop
cli
loope
sbb
fiadd
das
std
jmp
test
rcl
adc
xchg
mov
popf
xor
in
xchg
fs
jmp
add
inc
add
int
sbb
imul
out
inc
add
push
test
imul
or
ss
pop
cmps
push
inc
(bad)
ja
lock
xchg
pushf
cmp
(bad)
xchg
mov
jmp
cmp
jecxz
lods
jle
arpl
fdiv
test
pop
fiadd
scas
adc
sub
jecxz
pop
scas
jnp
lds
(bad)
adc
mov
dec
add
sbb
call
lea
pcmpeqb
stos
in
test
cmps
mov
data16
sbb
inc
push
mov
cwde
push
xor
out
cmps
jbe
outs
pop
daa
gs
(bad)
daa
leave
xchg
add
fisttp
inc
ins
mov
sbb
je
and
fcmovnu
push
jmp
lods
out
retf
push
jge
sahf
jg
push
sbb
xchg
pop
not
mov
test
ror
inc
fcmovu
ror
and
adc
daa
push
xor
or
and
jmp
mov
enter
mov
cmc
sbb
lahf
inc
xor
dec
ror
sub
repz
push
jle
(bad)
mov
adc
lock
aad
xchg
cwde
push
daa
and
ror
lods
xor
ret
or
xchg
arpl
jns
xor
lds
test
cwde
sbb
out
pop
push
loop
push
mov
fdiv
shl
xor
or
jl
inc
fstp
add
jg
ss
dec
(bad)
jp
push
test
cmp
xchg
ficomp
test
adc
(bad)
adc
dec
(bad)
push
nop
jno
dec
mov
sbb
jle
rol
or
fstp
lods
test
imul
sbb
out
lds
aaa
jecxz
lods
push
enter
mov
aaa
ret
daa
(bad)
test
adc
pop
movs
scas
in
lods
xchg
pop
xchg
js
and
aas
pop
mov
loop
je
inc
sbb
mov
mov
push
data16
test
mov
retf
push
sub
je
jl
mov
jl
sti
icebp
jne
in
out
mov
dec
(bad)
dec
iret
stos
cmps
daa
popf
test
cbw
dec
scas
not
lahf
in
movs
mov
das
xlat
and
aam
stos
out
add
hlt
into
idiv
mov
xchg
nop
pop
data16
aam
jae
xchg
sti
call
jge
adc
js
(bad)
cmp
jne
inc
xchg
sbb
mov
imul
call
adc
push
mov
mov
dec
xor
rol
out
xchg
push
pop
sar
loope
das
mov
sbb
xchg
in
add
scas
jecxz
push
pop
jbe
lea
xchg
repnz
fld
jae
dec
inc
(bad)
mov
dec
adc
les
push
pop
idiv
jg
daa
imul
loop
mov
pushf
and
push
or
pop
sti
adc
lea
inc
cwde
inc
fs
cmps
mov
push
xchg
and
sub
stos
cdq
lahf
(bad)
popa
ins
dec
jmp
fisttp
jg
(bad)
(bad)
sahf
aam
jge
xor
ins
xor
aas
std
ffree
or
nop
push
jge
loop
or
fistp
out
iret
call
int3
push
dec
movs
or
sub
aam
jle
dec
xor
mov
jae
jp
push
dec
sub
pop
jmp
shl
mov
cmp
dec
test
and
lods
add
inc
add
out
push
mov
inc
mov
push
es
retf
adc
leave
sub
or
mov
sub
call
test
cs
jmp
push
popf
dec
pop
lods
xchg
dec
push
mov
(bad)
mov
xor
mov
dec
jle
dec
mov
and
inc
or
mov
cmp
shl
repz
sar
repnz
pop
shl
fiadd
sub
call
sub
out
inc
add
jb
cli
jg
sbb
add
sti
daa
in
add
or
mov
dec
fwait
cmp
jp
jmp
pusha
nop
loope
mov
sub
outs
fistp
movs
push
mov
jbe
lahf
pop
mov
jecxz
adc
cdq
loop
jne
out
add
jge
outs
dec
inc
in
call
add
cli
shr
sti
add
test
jecxz
add
mov
inc
stos
daa
nop
mov
mov
pop
ficomp
mov
ret
mov
jg
push
xlat
sbb
xchg
iret
inc
test
lods
push
dec
rcl
mov
dec
jl
sbb
inc
mov
xor
dec
xchg
cmp
pop
(bad)
jecxz
xchg
rcr
(bad)
leave
pop
pop
jmp
jmp
das
rcl
mov
aam
inc
adc
cmovg
sub
dec
lods
pusha
out
inc
xchg
pusha
outs
es
sub
sub
stc
movs
jmp
and
cmp
cli
ror
fcomp
arpl
pop
mov
lods
xchg
and
cmp
push
mov
js
aam
js
call
sub
mov
push
xchg
imul
cmp
out
cld
(bad)
imul
sub
xchg
movs
dec
mov
jmp
push
jmp
stos
lock
iret
cmp
mov
xchg
pusha
ffree
loop
in
fidiv
pop
out
dec
mov
std
rcr
xor
ja
mov
pushf
js
hlt
pop
xchg
sbb
xlat
and
cmps
dec
or
jmp
mov
fs
or
inc
fbstp
repnz
adc
scas
ret
sbb
clc
sti
out
sub
xor
dec
cdq
shr
mov
repz
mov
jmp
inc
adc
push
and
dec
int
mov
inc
push
mov
or
push
and
arpl
or
scas
movs
xchg
movs
xor
leave
sbb
sub
mov
dec
jmp
mov
pop
je
ja
cmp
adc
rcl
inc
or
fimul
lahf
and
dec
leave
fimul
xchg
mov
arpl
daa
add
ficom
nop
xor
adc
mov
fs
cmp
ret
ret
cmp
cmps
and
data16
pop
cmp
daa
retf
mov
mov
pop
leave
arpl
(bad)
scas
js
test
sbb
sbb
push
pusha
adc
dec
jmp
sbb
sub
neg
add
in
push
xor
or
mov
push
sbb
not
lock
pusha
pop
dec
add
mov
mov
scas
and
popf
mov
sar
pop
test
xchg
dec
(bad)
push
pop
mov
outs
xchg
inc
sub
fist
and
sub
xor
xchg
les
mov
aas
xor
shl
test
sub
cdq
lods
mov
add
sub
in
lods
sbb
icebp
neg
(bad)
cdq
xchg
sbb
jp
addr16
add
mov
in
inc
jnp
(bad)
sbb
and
jl
dec
inc
retf
push
jecxz
mov
loopne
arpl
cdq
jmp
cmp
std
into
test
xchg
pop
adc
add
ja
sahf
or
or
lock
adc
ins
sbb
inc
push
lahf
aaa
in
mov
and
inc
popa
sub
mov
push
xor
imul
shr
cwde
mov
xchg
ja
aas
std
mov
int3
inc
nop
add
xchg
loope
xor
jns
add
sahf
dec
lods
cld
push
inc
into
add
pusha
xchg
ja
leave
test
push
sbb
and
push
and
sti
mov
fst
fadd
push
dec
ret
fidiv
out
inc
cmp
repnz
sub
sub
inc
pop
fild
xchg
dec
je
addr16
jge
arpl
jmp
jbe
fnstenv
sbb
dec
and
inc
mul
and
mov
les
pop
xor
stos
and
jecxz
sbb
xchg
fldenv
les
xor
mov
aaa
xchg
call
fsubr
sub
pop
mov
adc
and
cdq
out
push
push
jno
shl
clc
fmul
inc
xchg
outs
int3
fwait
mov
cmp
add
imul
shr
add
imul
sub
mov
aam
hlt
pop
xor
adc
(bad)
xchg
sbb
jbe
dec
dec
dec
inc
inc
adc
pop
int
sahf
hlt
inc
imul
push
setns
pop
test
neg
push
push
aad
out
add
sahf
popf
xchg
or
dec
or
pop
sub
clc
cmp
clc
dec
sub
test
out
fnsave
mov
xor
sbb
sbb
mov
push
stos
mov
std
sahf
aad
xchg
mov
mov
lods
pusha
jbe
pushf
xor
inc
xchg
pop
fnsave
fisttp
ds
sub
dec
adc
push
jp
shl
xchg
retf
das
jbe
or
dec
push
aas
mov
es
call
jo
arpl
mov
adc
adc
adc
repz
cmp
sbb
aas
pop
in
and
test
add
es
leave
or
test
xchg
loope
xchg
and
fsub
or
es
xor
out
lods
daa
es
cmp
pop
dec
inc
pusha
xor
adc
jae
add
sar
adc
fdivrp
(bad)
enter
jle
and
neg
xchg
les
in
nop
retf
repnz
mov
fdiv
dec
xchg
inc
inc
add
pop
cmc
push
rcr
jns
and
dec
dec
pop
push
sahf
dec
sub
ret
popf
out
push
mov
mov
fwait
jno
pop
lods
loop
out
xchg
mul
(bad)
fldcw
call
dec
mov
push
sbb
outs
add
sbb
loope
cmps
cmps
jno
sbb
imul
(bad)
fiadd
or
adc
pop
and
fucomip
sahf
push
jbe
mov
jne
retf
nop
enter
xchg
std
inc
push
lock
scas
pop
sti
sbb
ror
dec
push
loop
cdq
xchg
and
(bad)
mov
pop
fcmovb
sub
sbb
push
push
(bad)
test
lods
ficomp
js
push
dec
(bad)
push
mov
adc
sbb
(bad)
ins
push
inc
adc
fnstcw
inc
xchg
sar
xchg
sub
in
(bad)
pusha
adc
or
push
and
sbb
inc
fs
into
out
push
inc
jle
loope
add
inc
cs
push
test
push
xor
dec
sahf
mov
adc
xchg
addr16
sub
jge
push
push
js
inc
mov
lock
push
bound
iret
mov
and
jmp
cmc
mov
inc
ret
jno
ja
aas
imul
retf
clc
into
cld
test
add
push
push
xor
fcmovnu
jmp
scas
mov
leave
std
pop
mov
les
jmp
mov
sbb
pop
inc
mov
add
das
ins
lods
aam
test
rcl
and
mov
pusha
mov
xor
mov
mov
jnp
daa
dec
dec
aam
inc
adc
xchg
ja
dec
ror
(bad)
mov
add
dec
mov
ins
mov
(bad)
pop
xchg
repnz
hlt
jnp
and
imul
jecxz
loope
dec
adc
adc
sbb
and
popf
out
inc
std
cmps
adc
mov
test
dec
iret
shl
lock
mov
dec
adc
mov
lahf
adc
or
stos
repnz
cmp
mov
push
pop
jo
arpl
push
cdq
pop
sahf
test
add
pop
sbb
mov
sub
test
or
and
mov
mov
push
pop
daa
popw
adc
mov
les
adc
xchg
sbb
push
mov
fidiv
pushf
lock
xchg
(bad)
cmp
inc
in
mov
gs
sbb
retf
int3
loope
sub
popa
jge
inc
inc
push
xor
xor
mov
xchg
and
(bad)
xor
out
call
repnz
fstp
mov
dec
fsubp
pop
test
push
bound
cli
ret
or
sbb
mov
int3
sar
pop
push
or
mov
or
in
mov
or
jmp
(bad)
or
push
loop
add
sub
inc
clc
jnp
in
jg
pusha
jg
fcom
and
jns
xchg
cld
clc
mov
pop
ret
push
daa
hlt
push
lods
dec
xchg
scas
and
sbb
and
push
xor
sbb
loopne
gs
das
addr16
push
xchg
mov
inc
daa
dec
jp
aad
jg
icebp
jne
xor
mov
pop
sub
lods
mov
scas
aam
rcr
iret
dec
ficom
cdq
out
mov
ja
inc
cmp
mov
push
fadd
out
data16
pop
inc
in
iret
and
imul
cdq
jp
mov
fsubr
retf
jnp
outs
aad
push
cli
adc
xchg
mov
dec
dec
pop
sbb
lea
outs
xor
inc
loop
gs
push
cs
mov
push
inc
mov
or
sub
or
pop
in
(bad)
push
ds
call
pop
cmp
sar
and
push
fistp
and
ret
jl
sub
pop
xor
and
push
mov
je
nop
jmp
test
pop
mov
inc
mov
inc
movs
push
fisub
pop
push
mov
in
movs
lea
push
leave
inc
jns
jnp
jno
push
mov
arpl
push
mov
push
aad
mov
push
push
mov
or
in
inc
test
stc
pop
push
xchg
pop
out
and
pushf
test
and
push
or
mov
mov
add
aad
sbb
pop
test
add
pop
aad
xchg
movs
cmp
es
loope
(bad)
mov
mov
mov
inc
fist
(bad)
push
sub
js
lock
cmps
sbb
xlat
push
test
mov
cld
pop
mov
sahf
ds
xchg
scas
in
push
mov
pop
mov
jmp
aam
shl
je
retf
dec
ins
scas
fld
mov
push
repz
mov
mov
movs
popf
test
push
mov
add
shl
push
add
inc
adc
repz
fnstcw
jl
popa
lock
mov
pop
bound
or
nop
jno
adc
pop
mov
sub
adc
or
movs
sbb
jno
lods
aad
jb
pop
pushf
mov
dec
ss
push
(bad)
pop
lahf
pushf
sbb
jmp
mov
out
or
fucomi
adc
jmp
pop
cmp
push
xlat
fisubr
xchg
in
retf
mov
mov
dec
cmps
sar
dec
jb
mov
femms
into
jge
movs
mov
cmp
(bad)
fndisi(8087
hlt
jo
gs
push
and
(bad)
out
(bad)
push
fs
xor
mov
ins
pop
push
in
loop
adc
int
and
loop
jg
push
lahf
add
bound
and
dec
jo
sub
xchg
leave
xchg
inc
out
jmp
(bad)
je
cmp
fld
jecxz
jle
jb
push
pop
sub
(bad)
and
sbb
retw
ret
or
adc
jle
cmps
jne
arpl
pop
mov
out
xchg
stc
sub
es
dec
outs
pop
dec
je
fwait
je
mov
jmp
mov
adc
pop
pop
and
push
popa
xchg
cmp
cli
xchg
stc
adc
adc
sub
bound
arpl
adc
in
xor
sub
or
jg
xchg
xchg
mov
mov
jge
xor
and
or
repz
cli
inc
jmp
pop
and
mov
inc
sahf
out
adc
add
minps
dec
cmp
jl
mov
inc
push
fidiv
into
div
inc
ds
outs
or
sar
scas
mov
lds
push
push
jno
and
mov
mov
sbb
push
(bad)
div
das
add
jp
test
hlt
xor
popf
in
jbe
jb
clc
icebp
xor
in
jno
sub
cmps
gs
retf
(bad)
pop
bound
dec
xlat
jp
ds
pop
push
inc
cmp
push
xchg
gs
nop
call
xor
pop
pop
sub
mov
jb
or
mov
xor
fs
je
jae
xchg
dec
pop
outs
loope
lahf
cmp
rcl
sbb
inc
stos
ret
lock
mov
mov
loopne
mov
(bad)
wbinvd
test
add
mov
test
call
out
pushf
or
enter
xor
sub
fist
ficomp
cmp
adc
xchg
ds
call
(bad)
push
add
cmps
popf
fmul
aad
dec
pop
and
cli
mov
mov
clc
mov
(bad)
sti
inc
pop
add
mov
xchg
outs
in
xchg
jno
sbb
pop
mov
mov
adc
or
mov
fidivr
shl
dec
pop
jmp
enter
jb
dec
cmp
dec
arpl
jl
retf
mov
cwde
shl
(bad)
inc
lods
mov
mov
mov
xchg
retf
movs
sar
or
xor
or
xor
ficom
cs
push
pop
push
xor
sbb
mov
outs
(bad)
xor
cmp
add
push
inc
jp
mov
cs
adc
cmc
push
mov
(bad)
cmps
xor
bound
xor
arpl
and
call
xor
(bad)
mov
es
and
test
mov
test
lds
and
lods
or
fs
scas
int
mov
jnp
in
(bad)
adc
test
retf
or
loop
jbe
xchg
pushf
pop
gs
sbb
jle
sbb
dec
mov
repnz
into
adc
test
mov
je
mov
lock
cmp
sar
(bad)
lods
xchg
jmp
pop
mov
sti
enter
aad
fnstsw
mov
leave
sbb
jno
jmp
adc
xlat
pop
push
jle
mov
jne
sub
ins
pop
or
sub
call
mov
movs
das
into
ds
dec
pusha
mov
xor
sbb
in
lock
fidivr
mov
jg
icebp
(bad)
jl
ror
(bad)
das
out
add
sbb
sbb
popa
test
push
out
aam
scas
mov
inc
sub
(bad)
dec
xor
retf
pop
outs
cmp
xor
test
mov
cmp
hlt
test
bnd
cmps
jns
lods
mov
(bad)
mov
lahf
jg
jns
mov
cli
fst
cmp
les
pop
fild
sub
in
mov
call
jo
xor
loop
jmp
cmp
inc
gs
outs
inc
pop
add
fidiv
jg
inc
or
mov
std
je
mov
pop
xor
test
ret
cwde
jns
call
out
sbb
std
pop
mov
stos
addr16
mov
clc
dec
icebp
aam
xor
sbb
cwde
push
sbb
(bad)
ret
mov
inc
cld
push
cmp
fwait
scas
aam
jmp
pop
or
stc
pop
outs
xchg
inc
ret
and
(bad)
movs
fbstp
cli
bound
mov
xchg
xchg
les
jmp
xor
outs
clc
push
mov
jne
mov
xchg
mov
dec
ds
dec
sub
and
std
push
jle
add
stc
out
pushf
js
pop
xchg
ror
cs
addr16
pop
pop
sbb
sub
mov
xor
(bad)
cli
dec
mov
daa
add
vandps
cmp
adc
cmp
fstp
inc
mov
adc
shl
adc
mov
movs
ds
cwde
dec
sub
push
xor
and
dec
sar
fstp
jl
sti
(bad)
sti
xchg
mov
and
inc
dec
fimul
add
aaa
(bad)
loopne
dec
movs
test
adc
aad
xchg
mov
mov
fwait
mov
loopne
push
add
jp
sbb
movs
icebp
jmp
adc
scas
retf
cmp
ret
lock
cli
aad
cmps
popa
jmp
pushf
inc
stc
js
cdq
sbb
jae
fidivr
jge
jns
xchg
pop
mov
jl
test
xor
fs
sbb
sbb
scas
mov
call
fisttp
push
inc
xchg
push
cmp
cmps
push
dec
inc
xchg
loope
movq
or
je
jns
mov
mov
and
ja
fcom
dec
xor
cld
add
and
mov
mov
pushf
fcom
cld
sahf
in
loope
arpl
stos
and
minps
add
lahf
loop
xchg
dec
repnz
inc
popa
push
add
add
test
in
jbe
cmps
jg
adc
arpl
out
shr
loop
add
test
sbb
jae
push
test
shl
aad
xor
fidiv
inc
xchg
pop
loope
pop
dec
stos
pop
std
popa
stos
(bad)
sbb
cmp
stos
mov
fldenv
stos
dec
retf
(bad)
xchg
idiv
jne
sbb
rcl
mov
inc
(bad)
push
mov
je
(bad)
jno
mov
pop
(bad)
sti
mov
popf
mov
mov
cmps
repnz
fs
pop
mov
cli
sub
stc
stos
jmp
or
emms
ror
mul
xor
fdiv
push
sahf
xchg
sbb
jno
test
cmps
icebp
sub
jnp
lods
out
clc
sub
cli
push
adc
xchg
push
fmul
lds
or
sbb
dec
stos
push
jmp
and
xor
lods
or
test
jnp
pop
test
inc
dec
test
push
xor
mov
and
dec
xor
aad
or
pop
xchg
idiv
xlat
lods
inc
cmp
mov
test
leave
ja
mov
ins
sub
cld
test
push
mov
dec
mov
mov
mov
enter
std
sub
retf
push
push
gs
rcl
addr16
pop
std
shl
nop
ja
sub
add
outs
mov
xchg
dec
stc
xlat
fisubr
mov
xor
pushf
or
movs
(bad)
xchg
ret
jne
mov
mov
cli
inc
test
xchg
and
pusha
shr
je
outs
pop
outs
out
add
pop
das
cmp
cli
add
xor
mov
fst
ret
rol
loop
adc
sbb
call
pop
aam
movs
xor
push
lds
sub
jle
pop
out
lds
enter
lods
leave
mov
jmp
scas
and
mov
sub
ds
into
cmps
xchg
lock
xchg
fidivr
shl
push
test
movs
pop
mov
cli
or
mul
inc
test
ss
nop
sbb
stos
arpl
cli
xor
jo
or
push
or
repz
xor
scas
push
test
push
sub
sub
stc
popf
mov
dec
ret
ins
icebp
xchg
jg
pop
add
jne
jbe
mov
sti
icebp
or
stc
jle
xor
fcmove
icebp
jge
sbb
test
pop
sahf
out
jns
and
aam
jecxz
call
cmps
outs
cwde
xchg
enter
and
cmp
leave
les
mov
xor
mov
movs
enter
mov
cs
cld
pop
pop
dec
out
or
pop
(bad)
adc
xor
mul
cmp
push
xor
popf
lods
mov
lea
dec
xchg
sub
int3
call
fisttp
xor
iret
sub
fstp
div
push
sub
dec
or
fadd
or
shl
pop
mov
sub
jl
jp
dec
nop
(bad)
sar
and
mov
push
xlat
fisubr
or
add
xor
jnp
mov
mov
mov
stos
outs
je
out
data16
adc
(bad)
test
dec
mov
jmp
mov
adc
dec
inc
(bad)
sahf
call
push
jae
inc
sub
add
or
xor
xchg
mov
mov
ins
and
add
cdq
call
mov
sub
mov
ss
cmp
sbb
lea
outs
call
inc
fs
sti
sbb
stos
cmps
xor
sbb
leave
ret
ror
lods
xchg
rol
loopne
mov
xlat
std
xchg
sbb
shr
cmc
mov
mov
dec
push
out
add
or
push
pop
or
hlt
push
jl
push
push
(bad)
shl
jno
lock
in
int3
cmc
sub
inc
mov
xor
xor
mov
(bad)
popf
enter
and
dec
(bad)
fldenv
inc
fnsave
pop
loopne
loopne
jb
cmp
test
loop
fdivr
ds
mov
or
push
test
sbb
pop
test
xlat
imul
aaa
imul
mov
dec
and
sub
or
mov
stos
stos
cmp
cmp
mul
call
push
sub
xor
xchg
repz
popa
add
sub
(bad)
inc
cmp
fwait
pop
leave
xchg
(bad)
inc
lahf
fnstenv
iret
pop
jp
xchg
rcr
mov
pop
sbb
cmp
dec
jp
or
retf
ret
push
das
adc
add
sbb
mov
mov
xchg
popf
push
les
xchg
cs
jnp
ja
mov
mov
and
fucomp
test
sbb
jp
stos
add
int
int3
in
and
cli
repz
lods
mov
and
push
into
adc
xor
or
cmps
pop
or
or
mov
dec
cmps
fnstcw
scas
ds
test
(bad)
push
popf
mov
das
int3
fcmovnbe
(bad)
mul
fidivr
pop
div
jae
(bad)
cmp
fsubr
jo
popa
iret
cmp
fiadd
sbb
(bad)
fcmovb
and
xlat
je
pop
stos
add
adc
or
cmp
retf
jo
(bad)
les
push
dec
push
xchg
fdiv
pusha
jp
adc
cmp
or
js
out
xchg
adc
mov
cs
test
iret
mov
mov
inc
clc
cmp
jle
(bad)
jmp
lods
outs
cmp
out
push
or
imul
cmp
or
lock
cmc
add
movs
push
mov
leave
test
jg
in
out
stos
sar
push
adc
shl
scas
sub
test
shr
test
in
aaa
imul
out
daa
sub
sub
sub
mov
out
(bad)
leave
daa
xchg
test
mov
ja
ror
add
ja
sahf
test
lods
and
pop
xchg
popf
rol
mov
outs
push
fistp
sub
push
retf
and
int3
jbe
jmp
mov
push
adc
jb
rcr
xor
(bad)
adc
sar
sbb
jecxz
les
and
loop
cmp
xor
xor
xchg
iret
xchg
outs
and
sub
xor
stos
dec
xor
in
cld
js
push
(bad)
movs
inc
push
xchg
dec
add
inc
push
mov
ss
into
imul
lods
xchg
and
pop
loop
pop
mov
vandps
nop
mov
lahf
(bad)
arpl
jo
mov
push
jns
adc
fmul
mov
adc
les
cmp
mov
cmp
jb
cmp
imul
mov
or
movs
dec
outs
pop
js
jecxz
scas
lods
add
jnp
pop
xchg
lea
aas
(bad)
jb
lds
jmp
mov
sub
or
mov
cs
aad
add
cmp
jno
or
fcmovu
xchg
loopne
test
jnp
dec
cwde
inc
test
lea
push
jecxz
add
pop
repz
arpl
dec
repz
dec
je
or
inc
popa
inc
loope
retf
add
xor
adc
frstor
xor
pop
int3
push
or
jbe
jno
fldcw
push
or
lahf
(bad)
out
and
inc
inc
cli
inc
scas
jo
mov
inc
adc
dec
jae
cmp
sahf
xor
test
loop
cs
enter
lods
aam
inc
dec
jo
fistp
jnp
jnp
cmp
mov
aas
imul
jmp
retf
or
jno
ret
xchg
(bad)
dec
add
mov
(bad)
out
dec
popf
retf
or
add
out
stos
push
pushf
add
frstor
sbb
ret
add
mov
push
mov
mov
shr
in
mov
imul
ins
pop
xchg
repnz
push
js
or
sub
mov
adc
not
imul
mov
adc
js
stc
rol
inc
repz
pop
xor
test
adc
add
aad
mov
aaa
addr16
adc
lahf
jns
pop
xchg
and
lods
add
jl
cld
sub
aas
dec
dec
cmps
ss
pop
aaa
lea
in
mov
fsub
mov
or
sbb
(bad)
cwde
ret
xchg
mov
dec
xchg
mov
inc
into
push
xchg
jno
ins
daa
xor
cs
add
xor
scas
repnz
pop
test
int3
jg
cld
push
enter
push
addr16
cdq
shl
outs
fwait
(bad)
shr
pop
retf
pop
push
mov
(bad)
mov
fmul
fsub
xor
cmps
leave
je
fwait
cmp
outs
das
gs
mov
gs
mov
aaa
jnp
push
mov
xor
dec
dec
xchg
jg
and
outs
xchg
in
(bad)
jo
xchg
std
dec
clc
add
fcmovnu
in
inc
ja
outs
std
scas
mov
jns
cmp
push
std
ins
out
sbb
pushf
imul
xchg
pop
retf
adc
sar
inc
sub
test
jge
pop
push
pop
pop
sti
pop
push
mov
and
xchg
or
icebp
push
das
add
enter
repz
mov
icebp
outs
dec
and
rcl
scas
pop
inc
xchg
div
sti
add
leave
sahf
sbb
sbb
dec
in
or
out
cli
cmp
ja
jg
cmp
and
cmps
fwait
push
int3
sahf
jp
call
repnz
jmp
int
push
pop
(bad)
shl
loope
inc
jmp
das
mov
and
int
or
sbb
mov
jb
mov
das
xchg
bound
or
and
adc
fwait
dec
pop
adc
xchg
xor
out
push
pushf
mov
ins
retf
pushf
jae
or
mov
sbb
adc
dec
(bad)
enter
or
mov
jge
test
jp
add
mov
cmps
and
and
sub
mov
fwait
mov
xchg
test
add
loope
pop
xchg
mov
or
push
mov
int3
cld
test
mov
fidiv
jle
add
(bad)
mul
adc
sbb
jge
aad
jb
(bad)
mov
push
dec
ss
inc
push
outs
sub
ret
add
and
stos
cwde
cs
aas
retf
pop
xor
cmc
pop
lahf
retf
sti
jne
sub
cmps
rol
xor
jp
rcr
pop
sub
cdq
test
fisttp
jbe
retf
jnp
scas
adc
popf
ds
jbe
mov
xlat
cwde
js
sahf
push
movs
sahf
int
out
and
xlat
pusha
push
retf
jmp
and
add
cmp
cmp
aad
dec
sub
inc
push
mov
je
pop
jge
enter
push
fisttp
daa
xchg
outs
xor
pop
fstp
(bad)
mov
cmc
call
pop
and
jl
(bad)
aam
or
add
stc
cmp
sub
jb
lods
inc
fwait
pop
popf
xchg
xchg
pop
and
add
inc
jno
in
stos
imul
sub
pop
mov
sub
mov
(bad)
test
sub
(bad)
adc
pop
xchg
sbb
aad
pop
xchg
cs
push
ja
push
xor
push
add
(bad)
iret
mul
leave
push
xor
stc
aam
push
retf
fst
fisubr
inc
push
mov
lods
div
aam
cmps
inc
aad
div
in
mov
pusha
jns
sti
mov
lods
mov
or
stos
push
es
into
add
mov
or
and
cdq
aas
lahf
push
jmp
add
adc
mov
nop
pop
icebp
hlt
scas
or
sub
(bad)
aad
out
xor
cli
cmp
adc
jb
rcr
popf
mov
aaa
jbe
gs
mov
popa
or
push
shl
xchg
cmp
jmp
inc
ret
xchg
sbb
fs
nop
mov
jae
mov
adc
jb
mov
adc
sub
test
push
sbb
adc
sub
movs
mov
add
out
ss
test
or
mov
mov
cmc
or
push
shld
imul
adc
adc
mov
mov
(bad)
sar
mov
lea
jmp
loopne
xor
sub
add
sbb
lea
scas
test
mov
(bad)
cmps
cmc
adc
ds
push
xchg
les
mov
cli
or
push
mov
sbb
add
scas
(bad)
mov
into
xor
aam
cmp
repnz
aaa
popf
inc
xor
mov
std
cli
push
fs
dec
in
sti
adc
adc
clc
or
je
cmc
or
sub
add
lahf
mov
fnstenv
outs
adc
lahf
sbb
loopne
jne
inc
retf
adc
push
cli
or
test
lods
daa
mov
cld
dec
inc
in
inc
mov
pop
out
repnz
adc
stos
(bad)
je
adc
pushf
pop
and
xchg
xor
pusha
popf
out
jg
or
push
test
inc
sub
pop
adc
jge
pop
mov
imul
jbe
pop
pusha
mov
mov
arpl
es
data16
xchg
push
mov
(bad)
iret
mov
mov
pushf
mov
xlat
mov
imul
inc
stc
aaa
xor
and
out
mov
sbb
repz
and
stos
cmps
mov
nop
mov
ds
bound
out
aam
or
mov
bswap
mov
dec
mov
jecxz
clc
lods
inc
push
test
mov
xor
add
or
nop
add
clc
sub
fnstenv
mov
dec
push
sbb
pop
xchg
(bad)
xor
pop
sub
mov
cmp
in
cmps
in
(bad)
jb
push
cmp
mov
icebp
aaa
xchg
xchg
test
xchg
lahf
sbb
test
sub
lods
stos
call
cmp
xor
dec
(bad)
in
out
jmp
(bad)
(bad)
cmp
in
push
test
int3
cmp
pop
or
mov
adc
(bad)
popf
inc
jg
inc
xchg
(bad)
in
xchg
enter
pop
imul
popf
mov
pushf
mov
mov
and
xchg
mov
adc
mov
mov
sete
sahf
or
lea
add
retf
and
fadd
cmp
fsubr
sub
jl
xchg
sub
shl
mov
cmp
mov
into
icebp
fisubr
and
adc
pusha
fsubr
dec
jae
jecxz
out
jns
jbe
sbb
or
push
aad
xchg
lock
adc
pop
mov
jb
push
dec
push
stos
popa
stos
inc
aas
push
sbb
mov
add
imul
push
inc
je
xor
sbb
es
xor
sbb
jnp
jnp
call
sbb
mov
mov
cmp
stc
xor
in
mov
xchg
fiadd
into
repnz
mov
ds
or
shr
pop
adc
jne
movs
cmc
stc
cmc
mov
mov
push
push
les
cmc
push
aaa
cmp
daa
sub
ss
dec
sub
mov
scas
sub
cmp
push
xchg
je
popa
push
mov
sbb
out
xor
pop
xchg
push
cwde
das
cmp
mov
mov
inc
sbb
(bad)
les
arpl
pop
sub
inc
fdivr
inc
cdq
repz
xchg
out
loope
pop
addr16
dec
pop
iret
cld
ds
add
and
fs
pop
mov
add
pop
fld
mov
inc
enter
call
popf
aad
iret
mov
dec
inc
sub
adc
dec
fcomp
adc
fld
sub
adc
mov
adc
push
into
mov
dec
sub
add
xor
sbb
je
shl
jne
call
dec
mov
jmp
mov
adc
jle
mov
ins
add
unpckhps
lds
jmp
hlt
mov
mov
dec
test
cmps
or
neg
in
in
repz
repnz
push
push
fsub
push
mov
scas
or
pop
aaa
movs
xchg
sahf
jo
lods
cld
sbb
scas
push
jl
push
dec
push
sbb
out
ins
push
repnz
jnp
adc
mov
push
jl
cwde
ret
fdiv
dec
push
call
loopne
mov
jno
and
jo
je
or
test
cwde
sub
cmp
lahf
adc
jae
dec
dec
mov
pop
repz
daa
popa
test
or
mov
fwait
inc
je
loopne
dec
cld
(bad)
adc
stos
sub
mov
adc
cmp
xchg
push
add
mov
ins
sub
test
scas
mov
stos
jne
call
cmp
mov
sub
push
mov
imul
ss
and
mov
adc
daa
fsub
lahf
rcl
and
ret
and
in
adc
std
in
fild
fs
dec
mov
or
mov
and
hlt
test
mov
add
push
xor
cmps
and
push
test
aaa
jmp
push
out
gs
int
dec
scas
jae
icebp
mov
or
aad
xchg
stos
jo
in
sbb
cmovge
mov
rcr
mov
push
xchg
jmp
jl
icebp
push
jmp
pmulhw
test
inc
outs
pop
adc
loopne
loopne
xchg
cmp
push
mov
dec
mov
das
and
test
in
mov
dec
jne
ins
jne
add
jge
xor
sahf
jo
and
adc
in
sbb
or
mov
shl
movs
stos
adc
push
repz
and
int
inc
mov
jmp
mov
or
jge
cld
xchg
jns
mov
(bad)
sti
fisub
outs
xchg
add
jbe
pop
xor
dec
sbb
jg
pop
in
iret
mov
fcom
fnstsw
or
int3
outs
cld
(bad)
xchg
outs
ficom
out
clc
fld
lahf
sbb
and
fcmovbe
sub
iret
loop
mov
mov
out
dec
ins
loop
or
in
rcr
cmp
push
add
aad
sub
jmp
sbb
mov
out
inc
inc
mov
jle
mov
ins
dec
in
push
adc
inc
shl
mov
scas
cli
lock
jb
scas
std
push
imul
imul
es
test
xor
xchg
push
and
pop
ror
pop
push
sar
jl
sbb
retf
test
es
int
(bad)
in
mov
rep
adc
xor
or
sar
mov
inc
cmc
and
push
call
jp
cmp
pop
ret
xor
loop
fisub
cmp
and
pushf
in
pop
ret
popa
sbb
xchg
ret
scas
popf
or
xor
pop
fs
dec
scas
cmp
jl
xor
cmc
ss
test
sbb
mov
stos
push
jb
jne
test
arpl
lock
(bad)
mov
dec
pop
sbb
out
fadd
ins
sub
mov
rcr
xchg
push
in
std
popf
int3
dec
cmps
sbb
mov
fisub
repz
je
pop
sub
mov
jmp
mov
xchg
mov
ret
into
(bad)
sbb
jecxz
arpl
sar
fsub
xchg
fist
imul
cmp
jno
shl
xor
mov
xlat
(bad)
int
mov
ins
sub
fldcw
dec
cmps
xchg
pop
movs
xchg
stos
mov
data16
lahf
dec
push
fadd
jl
mov
int3
sbb
mov
pop
cmps
dec
xchg
ret
jno
adc
xchg
pop
in
call
movlps
out
(bad)
std
push
ret
call
sbb
(bad)
sbb
into
je
mov
mov
test
sbb
adc
jmp
popf
(bad)
xchg
dec
pop
in
push
addr16
add
mov
xor
mov
cmps
jl
daa
cmp
(bad)
jecxz
in
in
xchg
gs
cmp
mov
cwde
push
imul
fdivr
inc
jmp
ds
inc
hlt
ret
mov
pusha
or
and
ret
sub
push
cs
mov
sub
or
mov
sti
gs
mov
addr16
pop
ins
retf
clc
push
call
push
(bad)
fimul
pusha
into
cmp
loop
lods
in
pushf
cmc
leave
push
int3
test
scas
mov
push
xor
shr
sbb
(bad)
pushf
push
call
retf
cmp
sub
mov
cmp
xchg
div
iret
xor
(bad)
mov
test
shr
pop
in
test
pop
jmp
pop
or
out
cld
mov
addr16
or
jge
push
ins
in
in
sbb
and
and
retf
test
call
and
mov
push
or
mov
int3
fisttp
adc
inc
add
push
pop
adc
mov
dec
test
mov
scas
test
scas
mov
jbe
(bad)
mov
cmc
test
mov
popa
mov
mov
dec
retf
mov
and
inc
jno
inc
ins
jmp
mov
js
xor
lea
imul
pushf
and
gs
pop
add
mov
mov
xchg
test
push
fdiv
rol
int3
and
adc
ret
dec
jb
xor
mov
bnd
mov
add
push
ret
push
cmp
pop
sub
jne
push
push
sub
or
scas
cs
pop
mov
dec
mov
add
loopne
imul
sbb
mov
xor
imul
scas
enter
sahf
idiv
mov
mov
xor
jno
daa
fisubr
mov
jl
xchg
mov
ret
and
ins
ins
push
jmp
gs
push
xchg
push
xor
mov
mov
xchg
xchg
int3
(bad)
sbb
scas
mov
dec
mov
jecxz
lods
sub
scas
cmovo
into
fs
mov
jp
mov
xchg
dec
pusha
jo
inc
fild
cmp
fbstp
pop
cmp
cmc
mov
arpl
gs
mov
into
xchg
jg
mov
cmp
or
and
push
sbb
cs
adc
std
ds
and
cmps
sbb
lods
sbb
mov
cmp
add
ret
and
ldmxcsr
sub
lods
popa
cld
xchg
lea
ins
scas
xor
add
push
cmp
adc
push
push
aaa
xchg
mov
or
pop
cmp
dec
bound
std
das
cmp
dec
inc
xlat
(bad)
repnz
mov
fistp
aas
sub
call
bound
cmp
adc
das
and
js
mov
cdq
fnsave
dec
addr16
lea
aas
je
and
jle
retf
mov
jg
or
pop
stc
lods
mul
add
test
sub
fwait
aad
ret
or
fistp
mov
(bad)
adc
imul
icebp
not
jmp
ret
call
mov
ja
jnp
mov
jg
ret
cdq
push
mov
mov
pop
call
enter
movs
int
and
add
mov
mov
cmp
aas
out
fcom
in
pop
bound
aas
fs
pop
add
xchg
xchg
es
clc
in
and
inc
repnz
int3
lahf
jbe
test
test
mov
test
jmp
aad
pop
mov
ins
shr
cmp
inc
sbb
fwait
rep
outs
or
push
jp
inc
mov
inc
mov
mov
pop
jno
or
scas
mov
stos
cs
push
pop
jne
jl
add
pop
js
dec
mov
ins
fist
xor
les
rcr
sub
mov
adc
mov
lods
and
push
mov
xor
dec
jmp
jo
mov
ins
xor
int
adc
scas
ss
mov
adc
jns
cld
popf
cmp
not
mov
stos
mov
enter
sar
fwait
call
pop
jbe
sbb
cmp
fbld
mov
xchg
retf
jmp
inc
jge
(bad)
mov
fmul
std
mov
popa
adc
sbb
int3
or
adc
dec
rcr
cmp
stc
lds
xchg
popf
adc
sub
mov
mov
fdiv
add
cwde
or
inc
push
mov
retf
loop
pop
mov
or
aad
xchg
(bad)
and
imul
add
test
dec
adc
js
ror
test
push
add
sub
fsubr
imul
mov
mov
clc
(bad)
mov
lea
sahf
sbb
scas
or
jno
sub
mov
mov
and
in
fldenv
xchg
mov
and
push
(bad)
mov
int3
mov
icebp
int
xor
cmp
adc
lods
mov
cmp
and
test
and
cwde
or
cs
cdq
push
xchg
out
and
xor
retf
xchg
out
jp
pop
xor
(bad)
push
cld
jb
jl
test
(bad)
loop
les
(bad)
rcr
cmp
mov
sub
pop
aam
pop
jb
push
push
into
lods
test
mov
dec
push
je
into
scas
sub
(bad)
cs
ja
mov
mov
ins
and
adc
pop
mov
movs
sbb
jo
sub
sbb
add
push
imul
adc
jae
out
(bad)
cdq
cmp
mov
pushf
out
xor
rol
into
ins
fisub
loop
or
dec
lea
sar
mov
stc
imul
dec
and
rcr
ins
jmp
jg
pop
daa
xor
adc
cmps
add
sti
pop
inc
loopne
movs
inc
imul
mov
test
sub
cli
hlt
iret
addr16
mov
repz
push
(bad)
pop
sbb
pop
pop
push
adc
cmp
sub
fwait
xchg
aad
jo
adc
in
mov
sub
cs
dec
push
and
push
mov
loopne
add
mov
cmp
add
js
test
fldcw
fcom
push
(bad)
out
cmc
mov
dec
int3
add
jge
push
mov
xchg
das
pop
in
lods
mov
mov
pop
jmp
mov
sbb
xor
mov
(bad)
mul
or
push
cmp
jmp
and
out
sahf
or
nop
into
jmp
bound
repnz
lock
test
add
cmp
cmps
xor
idiv
ret
icebp
sti
or
in
pavgw
dec
or
push
and
jnp
cmp
ret
mov
ss
or
test
nop
repnz
aas
xchg
scas
pop
sbb
scas
fisubr
mul
cmp
cmps
movs
push
(bad)
out
inc
mov
in
aaa
jmp
or
retf
daa
scas
out
mov
loop
popf
mov
cmc
enter
xor
jmp
rcr
xchg
outs
jl
mov
outs
loope
jg
push
jb
adc
out
call
pop
add
adc
fst
js
jle
sub
arpl
in
adc
daa
lahf
pop
dec
ins
pop
inc
in
loope
jp
sub
sbb
push
xchg
or
cwde
fdivr
push
sbb
in
sbb
push
(bad)
loopne
popf
push
sub
dec
cmp
xchg
xchg
dec
stos
fdivr
imul
div
repnz
sbb
mov
fs
sub
aaa
pop
push
stos
pop
xchg
popf
inc
mov
dec
jmp
xchg
loope
cli
pop
iret
aad
push
adc
cmp
aas
mov
cmp
sbb
lds
inc
lods
stos
ja
pop
pop
pushf
pop
stc
and
mov
or
lock
pusha
push
js
xchg
loop
mov
shr
cs
push
mov
jb
adc
jl
clc
push
add
rol
pushf
add
inc
or
fmul
es
dec
dec
dec
pushf
leave
cmp
pop
push
mov
xor
pop
dec
cmc
das
retf
cmp
jo
dec
repz
sti
inc
jmp
push
mov
fadd
mov
jbe
fistp
jle
(bad)
cmp
pushf
jbe
xor
fisubr
cmp
stos
das
xor
push
push
hlt
faddp
fisttp
mov
aam
adc
adc
(bad)
out
dec
xchg
fcom
cmp
adc
and
popf
fst
sbb
xchg
js
inc
or
data16
stos
cmp
je
cmp
xor
pop
daa
cs
add
jecxz
outs
fwait
lods
cmp
and
div
lea
dec
jbe
stc
pushf
sub
fidiv
fwait
xor
call
retf
push
nop
push
push
sahf
sar
dec
mov
adc
adc
mov
push
mov
push
sub
sbb
ja
mov
pop
mov
pop
inc
jl
nop
retf
xchg
or
cdq
mov
inc
pop
mov
jno
scas
fcom
xor
lea
mov
lods
jg
fs
or
sbb
outs
xchg
sbb
mov
mov
cwde
and
sbb
fwait
xchg
stos
(bad)
fnstcw
int
lea
jmp
and
enter
sbb
out
and
mov
and
test
xchg
sbb
fmul
inc
and
cmp
mov
fs
sbb
xchg
loopne
les
sbb
adc
inc
xchg
mov
and
int3
cmp
pushf
jp
or
push
movs
sub
pop
stos
add
and
pop
mov
xor
pusha
enter
stos
xchg
cwde
(bad)
mov
scas
jns
mov
ins
sub
jmp
or
mov
test
clc
xchg
aad
push
or
test
lds
pop
lods
dec
dec
test
xchg
and
movs
pushf
test
js
inc
pop
dec
jl
jo
push
mov
loopne
arpl
inc
mov
out
inc
sbb
xchg
movs
and
cld
jb
inc
inc
lock
jb
jo
jp
and
push
xor
sbb
or
out
pop
fs
inc
xchg
sub
or
jnp
das
add
outs
mov
xchg
rcl
pop
add
add
dec
adc
or
sub
stos
jmp
arpl
mov
pop
inc
loopne
jns
rol
shr
sub
jp
fwait
outs
cli
inc
or
cmc
add
(bad)
mov
(bad)
lods
xor
test
push
stos
pop
ret
xchg
cs
fwait
push
pop
fbld
inc
inc
popf
jo
mov
mov
stc
das
sub
shl
fcomp
sti
push
push
and
dec
cdq
or
xlat
jo
inc
add
dec
mov
int
jl
jae
jns
ds
test
arpl
rcl
add
lods
imul
test
mov
pusha
stos
jns
sti
movs
pop
hlt
ds
pop
mov
addr16
loope
add
xchg
xor
xchg
adc
outs
repnz
inc
scas
cmp
sub
cld
ret
mov
cmp
std
jb
and
pop
call
or
and
or
fadd
ins
adc
pop
(bad)
mov
out
sbb
or
inc
pop
loopne
mov
aam
out
and
imul
xor
dec
jmp
mov
mov
push
jl
jne
adc
push
ret
stos
jns
push
or
adc
dec
popa
cmp
mov
call
pop
mov
mov
adc
cmp
outs
fs
cli
lods
jle
pop
or
xchg
in
call
jmp
inc
pushf
push
pop
mov
add
js
std
mov
in
mov
xchg
gs
fistp
sbb
or
iret
out
xor
push
(bad)
adc
rcl
cld
test
and
sub
in
clc
sbb
scas
aaa
sub
mov
daa
repz
cwde
rcl
or
faddp
adc
mov
pop
das
or
imul
test
(bad)
test
jecxz
aam
daa
add
into
add
imul
xchg
stos
sti
ja
mov
cli
mov
lea
fs
aaa
lods
outs
xlat
repnz
aad
inc
push
jle
out
movs
(bad)
dec
ss
cmp
adc
jb
js
cli
loop
ror
mov
pop
mov
pop
scas
mov
dec
xchg
mov
mov
xor
inc
retf
inc
mov
idiv
popa
sub
shr
das
movs
stos
inc
mov
xor
dec
xlat
sbb
cmp
push
fcmovbe
test
xor
push
xchg
add
retf
sub
inc
adc
mov
sbb
jecxz
cmp
inc
cmp
js
mov
dec
retf
jmp
lea
dec
iret
pop
nop
jecxz
dec
xchg
fstp
in
sub
adc
adc
cmp
inc
in
add
icebp
sub
jbe
out
adc
lods
mov
adc
jb
pop
cmps
aad
sub
sbb
mov
sahf
cmp
sar
cmps
mov
ret
shl
jne
fwait
in
sahf
mov
mov
ficom
inc
mov
and
xor
sub
xchg
pop
fimul
push
xchg
in
inc
ficomp
scas
mov
movs
js
xchg
mov
add
retf
ss
push
pop
out
push
ja
xor
repz
push
fistp
in
mov
jne
cmc
jmp
xor
jb
adc
(bad)
das
movs
mov
outs
cmp
dec
outs
lahf
push
add
cmp
cmp
jb
rcl
or
or
fcmovnbe
vmovlps
das
call
(bad)
or
push
and
arpl
and
(bad)
jne
ret
mov
and
sub
xchg
int
fdivr
cmp
hlt
les
shr
or
jnp
call
call
fwait
sbb
leave
pop
sub
xchg
es
jbe
aaa
xor
dec
call
addr16
nop
mov
fs
xor
ja
jno
jmp
pop
aaa
lods
mov
pop
hlt
(bad)
int
pop
sbb
lea
sub
std
(bad)
push
inc
(bad)
fst
fadd
inc
pop
shl
add
stc
add
repz
adc
jno
dec
mov
inc
adc
mov
fldenv
popa
je
sbb
xor
mov
ins
sub
mov
push
mov
fs
dec
inc
psubd
jmp
ins
inc
cld
out
call
popf
(bad)
mov
test
ret
sub
sub
ins
sbb
mov
add
push
nop
into
pop
loopne
out
and
jo
imul
push
push
test
or
pop
in
jg
ins
and
les
and
pop
xor
sub
xchg
cmp
or
neg
loope
adc
cmp
mov
fstp
and
push
neg
jg
adc
xor
imul
fimul
enter
mov
xor
mov
jnp
lahf
jne
mov
loopne
into
(bad)
cs
(bad)
icebp
and
xor
cmp
or
inc
dec
push
add
dec
lock
jecxz
in
jmp
aad
sub
jno
mov
scas
mov
xor
xchg
cmc
cmps
mov
jecxz
(bad)
mov
adc
pop
push
fild
cmp
movs
sub
mov
scas
push
dec
sub
(bad)
stos
outs
(bad)
and
inc
dec
push
mov
stc
out
mov
test
std
xchg
(bad)
fcomp
mov
repz
cdq
pop
push
call
cmp
outs
aas
(bad)
call
xchg
outs
jb
mov
pop
outs
movs
fs
daa
cmc
dec
les
out
adc
test
push
sub
js
mov
out
movs
in
and
jecxz
or
dec
jle
mov
test
ins
inc
jno
jno
mov
mov
pmullw
fcmovnbe
fdivr
jmp
lock
popa
dec
test
pop
(bad)
mov
je
(bad)
mov
mov
(bad)
cld
out
mov
fcomp
inc
xor
in
sbb
mov
add
cmps
xor
ret
jne
adc
mov
call
in
and
xchg
(bad)
shl
xlat
(bad)
cmp
loopne
rol
in
daa
jl
push
ds
lods
iret
pusha
mov
mov
fs
add
mov
xor
std
cmp
cwde
jb
or
inc
adc
ret
xchg
push
and
mov
rol
and
gs
and
sub
add
xor
stc
dec
cdq
pop
adc
mov
xor
adc
mov
ss
in
mov
in
iret
mov
int
shl
pushf
or
movs
ja
mov
ins
add
push
imul
fild
pop
xor
call
aaa
pushf
jecxz
ja
shl
mov
stc
aaa
call
ss
ins
inc
jecxz
sbb
sbb
dec
sub
frstor
dec
jns
pop
or
ret
mov
mov
sti
cs
sar
xor
dec
lahf
push
push
and
imul
cs
or
and
xchg
jae
add
int
(bad)
lds
adc
mov
(bad)
mov
sti
dec
push
xlat
jge
int
cmps
aaa
sub
fstp
xchg
inc
arpl
push
xchg
and
out
or
bswap
pop
sar
shr
(bad)
push
mov
int
pop
and
test
cwde
stos
int3
dec
pop
xor
mov
ret
or
inc
jl
mov
aad
sbb
inc
icebp
cmp
lahf
lds
in
inc
push
sbb
mov
enter
and
xor
sbb
sub
and
cmps
mov
or
test
cli
in
lea
sahf
fwait
cmp
aaa
ds
dec
and
mov
dec
out
out
mov
mov
dec
test
jmp
mov
cmc
cmp
dec
loop
mov
icebp
sub
pusha
cmp
mov
push
xor
cmp
and
adc
(bad)
shl
push
mov
in
mov
or
jnp
pop
in
nop
jmp
std
enter
inc
dec
mov
push
xchg
mov
(bad)
faddp
pop
mov
lods
xor
cdq
push
imul
push
mov
outs
iret
xchg
xchg
and
outs
inc
inc
adc
test
or
push
in
sar
sub
dec
rcr
out
outs
(bad)
push
mov
xor
mov
pop
in
mov
pop
lods
scas
call
cld
out
jl
adc
sub
sti
push
cli
out
and
sbb
jge
inc
call
ins
mov
pop
xchg
imul
cmp
cld
mov
mov
lock
xchg
pop
jb
inc
pop
movs
mul
sbb
fidivr
cmp
xchg
dec
imul
cwde
mov
or
cmp
cmp
push
push
mov
jp
es
cmp
pop
cmp
pop
fstp
add
bound
add
enter
lods
mov
loopne
adc
push
outs
push
pop
idiv
aad
jnp
into
lahf
adc
mov
and
test
add
cmp
pop
sub
jns
sbb
iret
ret
jnp
cmp
pop
test
icebp
imul
sbb
lods
hlt
(bad)
fcom
mov
(bad)
dec
inc
or
jne
stos
mov
ret
ja
(bad)
rcr
cmps
out
call
and
jne
push
and
push
adc
jnp
sub
loopne
push
adc
mov
ins
mov
mov
cdq
dec
sub
in
xor
shl
ds
div
rcr
xchg
aas
ss
(bad)
ja
mov
inc
xchg
fild
xor
adc
inc
dec
call
jmp
inc
jb
adc
pop
clc
inc
cmps
and
xchg
cwde
es
push
fstp
arpl
outs
xor
mov
mov
clc
lea
push
mov
jmp
aam
cmp
shl
or
(bad)
icebp
push
cmp
icebp
lock
mov
pusha
xor
je
sub
mov
loope
mov
sub
adc
movs
inc
inc
cld
mov
loope
dec
fcomp
sub
push
inc
mov
xor
xor
fisttp
ret
push
test
arpl
mov
mov
xchg
xchg
add
bound
sub
jecxz
test
pop
cs
test
enter
lea
aam
mov
aaa
cdq
fnstcw
mov
mov
dec
push
sub
sub
cmps
jae
dec
sar
mov
jno
aad
int3
aaa
stos
gs
cld
daa
pop
sbb
jb
cli
or
lock
repz
inc
push
and
push
inc
test
jmp
or
popa
dec
pusha
xor
adc
movs
shl
push
mov
cmp
xchg
sub
jo
test
xlat
cmp
sub
or
(bad)
adc
jns
mov
loopne
rol
xor
jecxz
sub
cli
dec
f2xm1
cwde
fisubr
ror
xor
aad
outs
sbb
push
xor
cmp
je
inc
pop
fs
(bad)
scas
enter
enter
movs
add
cmp
xchg
clc
retf
loopne
hlt
push
scas
push
imul
pop
and
mov
inc
dec
fs
push
mov
ret
adc
cld
adc
mov
(bad)
jmp
fistp
movs
mov
movd
mov
mov
or
pushf
ret
fcmove
cmp
mov
in
sbb
jns
ins
cmp
adc
stos
iret
cdq
rcl
mov
adc
mov
les
xchg
xor
lock
add
mov
pop
sbb
es
mov
push
pop
adc
jae
adc
mov
mov
neg
std
repz
ins
mov
dec
inc
xchg
pop
sub
add
les
and
(bad)
retf
mov
ins
daa
and
push
mov
push
int
adc
cmp
sub
pop
mov
inc
cmp
add
ja
fsubr
(bad)
adc
fwait
and
sbb
cld
mov
cmp
mov
cs
in
cmc
test
mov
mov
cmc
repz
leave
icebp
cmc
imul
or
frstor
js
adc
dec
retf
call
sahf
add
pop
pushf
push
pusha
sbb
jle
adc
jmp
fimul
dec
xlat
jmp
pusha
xlat
(bad)
sbb
inc
jae
mov
mov
jmp
and
int
mov
imul
retf
push
in
adc
mov
aas
jmp
pop
cmps
sbb
xor
jg
xchg
xchg
xor
xchg
dec
leave
mov
fnstsw
das
jle
pop
mov
cdq
and
jmp
aas
je
mov
jl
and
dec
popf
xchg
cmp
add
(bad)
jl
and
rcr
arpl
pause
push
or
icebp
popf
push
mov
fnsave
jle
xchg
or
clc
push
mov
mov
mov
repnz
mov
fnstenv
test
cld
scas
xchg
jne
add
loopne
aas
and
mov
xor
cdq
push
jmp
cmp
adc
cli
sbb
sti
or
pushf
pop
les
jecxz
call
xor
les
gs
pop
ss
push
lods
(bad)
push
lock
pop
or
jge
push
pop
imul
ret
sub
xor
fadd
icebp
mov
push
fist
pushf
outs
push
inc
les
imul
mov
dec
mov
xchg
(bad)
icebp
mov
test
dec
leave
(bad)
in
jae
outs
sub
and
popa
jl
fadd
jecxz
adc
lds
dec
dec
mov
pop
std
adc
retf
fst
les
cdq
enter
imul
jno
push
sub
out
sbb
lods
and
cs
data16
adc
aad
mov
xor
std
mov
ss
or
push
sbb
mov
dec
lock
push
pop
aad
push
rcl
push
pushfw
sbb
(bad)
sbb
adc
cmp
fmul
fmul
xchg
push
mov
sub
xor
or
jae
leave
scas
call
mov
or
xlat
fidiv
pop
add
mov
push
xor
mov
xchg
test
xor
adc
jno
inc
mov
xor
repz
into
mov
in
(bad)
add
(bad)
shl
(bad)
into
retf
inc
add
paddw
cmp
lods
out
xlat
inc
fcomp
cmp
adc
call
lds
cmc
cmp
int
push
sub
jno
lock
inc
scas
ins
fs
xchg
repz
sub
pop
test
(bad)
or
pop
adc
sahf
jne
leave
push
sub
pop
and
xchg
rep
xor
ret
js
sub
mov
pop
jg
and
pop
push
sub
fucom
sahf
xor
jns
jne
cmp
mov
inc
mov
ret
mov
adc
fidivr
jmp
les
loop
movs
ins
mov
xchg
xor
aaa
icebp
(bad)
imul
sar
push
fcom
adc
sub
push
iret
outs
ret
and
mov
push
pop
iret
out
fistp
add
outs
leave
add
jge
mov
push
add
mov
xchg
xor
lock
xchg
push
sbb
cld
(bad)
cmp
movs
les
aad
leave
and
int
xor
fwait
test
inc
inc
jo
mov
cmp
xlat
test
push
and
out
mov
hlt
ins
adc
aam
adc
fild
into
xchg
in
adc
enter
cwde
pushf
stos
jle
addr16
jb
dec
retf
(bad)
(bad)
pop
push
mov
pop
add
push
pop
(bad)
dec
mov
and
je
adc
fsubr
pop
dec
movs
idiv
ins
popa
retf
sub
imul
sub
adc
cmp
push
stc
push
xchg
pop
sub
and
adc
retf
out
dec
aad
movs
loop
sbb
lock
mov
xchg
dec
pop
loopne
scas
jo
ret
neg
push
xor
sub
sti
mov
int3
in
sbb
adc
sbb
lahf
add
adc
pop
data16
push
jb
out
ret
and
pop
add
in
and
adc
cmp
mov
in
bound
pop
cmp
push
shl
fld
mov
mov
sti
call
rol
xor
into
pop
jo
out
(bad)
fs
pushf
jmp
cmp
vaddps
push
ror
popf
cmp
imul
cmp
push
sahf
push
(bad)
bound
xchg
nop
adc
stos
cmp
mov
scas
jmp
in
xchg
nop
xor
pop
hlt
and
rol
cdq
push
dec
fdiv
jnp
(bad)
mov
jbe
inc
lds
popa
mov
fwait
movs
lods
push
js
gs
dec
hlt
jecxz
nop
add
mov
ret
xchg
out
or
clc
test
pop
add
jno
ja
mov
imul
dec
fwait
push
add
movs
push
pop
(bad)
xor
iret
pop
xchg
push
sbb
in
jmp
out
dec
jb
aad
xchg
mov
sbb
cmp
sub
pusha
adc
sti
fsubr
add
popa
je
bound
mov
aam
sbb
daa
test
push
ins
cmp
dec
dec
gs
in
loop
mov
and
pop
cmp
inc
pop
jg
shr
push
call
fwait
inc
jno
sub
jmp
stc
(bad)
sbb
mov
neg
or
add
jecxz
mov
hlt
xlat
cmp
inc
xchg
xchg
jne
iret
sbb
popf
ds
leave
sahf
lock
mov
sbb
les
ret
pop
xlat
xor
push
jg
pop
mov
push
stos
ss
lods
ret
push
in
das
xor
sti
into
mov
pop
cs
sahf
pop
shr
(bad)
push
int3
mov
test
pushf
movs
(bad)
xor
cs
arpl
sub
mov
int
mov
test
out
ret
cmp
stc
fldcw
mov
xchg
push
aaa
or
mov
fdivr
sar
test
push
movs
ja
inc
cwde
iret
sub
add
out
xor
jbe
mov
(bad)
adc
lahf
sbb
outs
dec
inc
leave
dec
iret
fs
outs
and
(bad)
ss
fadd
lock
test
adc
icebp
add
repnz
leave
call
push
xchg
jb
test
test
lahf
adc
mov
xor
pop
pop
mov
push
push
xlat
in
ins
in
adc
ret
cmp
frstor
pushf
imul
mov
mov
sbb
int3
or
jge
pushf
fiadd
add
lea
in
and
cmp
or
in
cmp
pop
ficomp
outs
idiv
ja
xchg
jmp
mov
lds
call
jb
or
add
xchg
sbb
mov
into
out
mov
push
cmps
sub
add
in
call
add
outs
mov
cmc
cdq
rcr
jmp
jb
jp
mov
outs
sbb
mov
sbb
mov
frstor
xchg
fiadd
sub
dec
push
cdq
mov
aam
jg
mov
outs
pop
or
mov
mov
(bad)
arpl
add
out
xchg
sti
cmp
js
sbb
jle
scas
mov
xchg
or
inc
cdq
inc
pop
lods
cmp
fwait
stc
ja
push
clc
jmp
cmp
mov
lods
ds
mov
mov
inc
xor
jo
mov
pop
(bad)
fadd
fisub
push
aas
repz
push
vcvttsd2si
xor
push
mov
bound
inc
mov
push
or
dec
mov
outs
fadd
cdq
adc
fldenv
clc
xor
cmc
xchg
and
pop
push
sbb
mov
mov
jbe
cmp
call
es
push
mov
push
mov
retf
adc
mov
push
addr16
iret
and
add
imul
int3
fndisi(8087
add
loopne
ret
push
mov
lea
xchg
jnp
xchg
cmp
lods
pop
dec
daa
jno
push
mov
adc
push
push
aad
xchg
dec
dec
push
int
sbb
into
or
(bad)
lods
jl
push
iret
ins
movs
sti
popa
mov
mov
jno
loopne
mov
jmp
pushf
inc
jl
push
and
mov
pop
movs
test
sbb
sbb
js
fisub
shl
sub
add
dec
adc
push
sbb
and
scas
mov
mov
ins
pand
sbb
je
push
adc
movs
push
xor
pop
add
enter
inc
pusha
je
jne
mov
xchg
jmp
popa
mov
xor
push
pop
popa
or
pop
add
retf
inc
js
in
fmul
inc
mov
dec
and
into
dec
xchg
stos
adc
pop
sub
cmp
fnstenv
loope
imul
mov
inc
pushf
or
mov
pop
ins
mov
push
and
adc
pop
inc
mov
jl
mov
cmps
imul
mov
shr
and
iret
jno
and
(bad)
push
dec
out
shr
or
mov
push
inc
jg
int
dec
pop
addr16
mov
mov
fcom
test
js
shr
int
movs
lahf
test
cmp
test
fdiv
mov
jge
rol
sbb
jbe
jo
cwde
xor
pop
or
cmps
ret
mov
fs
push
or
adc
repnz
pop
jp
cmc
test
jg
xor
ror
fs
jnp
test
fs
imul
aad
repz
jb
inc
jno
jg
jns
mov
jge
add
inc
shr
inc
daa
sbb
mov
push
mov
iret
dec
out
lahf
add
mov
cmp
jge
pusha
je
repnz
push
cmp
adc
and
adc
in
pop
out
inc
mov
fild
or
cdq
scas
sub
aaa
lock
pop
and
(bad)
lock
cmp
sub
ins
add
mov
or
pop
xor
jl
data16
es
mov
(bad)
jecxz
arpl
loopne
in
ins
test
shr
test
or
arpl
lock
add
xor
psubq
jmp
mov
push
cvtpi2ps
jle
or
jge
push
rol
icebp
sbb
mov
loopne
mov
ja
sub
dec
push
sub
adc
mov
scas
mov
xor
ja
lods
jmp
aaa
dec
outs
imul
add
pop
jbe
in
cmp
mov
movs
out
and
ins
les
xor
xchg
sub
hlt
cld
or
mov
es
aas
inc
pop
add
mov
dec
popf
sahf
push
ficomp
and
sub
pusha
jge
xlat
push
sbb
and
push
inc
dec
inc
inc
loopne
adc
inc
add
mov
pop
xor
sbb
loopne
pop
jg
ficom
dec
add
shr
ret
cs
inc
mov
mov
lahf
daa
in
or
mov
xor
dec
cmp
dec
jmp
inc
scas
retf
cmp
das
mov
or
test
mov
test
retf
xchg
pop
push
add
jmp
ret
push
lods
and
das
mov
popf
jnp
sbb
xor
call
cs
xchg
pop
in
(bad)
or
jmp
sub
jmp
in
(bad)
pop
adc
mov
jne
aam
mov
jo
(bad)
fs
add
test
dec
loopne
pop
sub
mov
mov
dec
sub
sar
adc
lea
xchg
(bad)
jmp
gs
movs
hlt
sti
inc
call
mov
icebp
aad
jo
mov
xchg
aas
and
pop
sub
inc
sub
pop
jno
inc
mov
inc
inc
(bad)
jnp
push
or
lods
or
sbb
jge
test
xchg
pop
js
dec
test
sub
or
outs
inc
repz
cmps
int3
js
jp
iret
sbb
stos
pop
enter
jno
xchg
pop
mov
xchg
aaa
std
inc
mov
and
xlat
lahf
retf
mov
(bad)
mov
scas
loopne
gs
shl
sbb
into
daa
mov
rol
jo
inc
movs
fistp
jge
mov
and
inc
lea
adc
adc
fisttp
xchg
fcmovb
push
mov
push
push
test
push
fwait
mov
xchg
outs
test
imul
or
aad
ss
mov
daa
cmp
add
imul
xchg
jae
mov
xchg
push
cwde
(bad)
aas
div
push
fsub
repnz
xor
std
jg
pop
lds
lods
pop
push
test
and
jmp
aas
push
cmps
sub
ss
fadd
pop
rcl
or
hlt
int3
sbb
push
outs
nop
jmp
mov
inc
leave
mov
pop
xor
hlt
xchg
arpl
stos
ja
adc
xlat
ins
dec
pop
pop
mov
in
lds
mov
push
adc
js
dec
jb
dec
ins
aam
or
fwait
inc
or
pushf
movs
outs
xor
test
stc
test
cmp
outs
rcl
mov
pop
out
arpl
jnp
cmp
and
mov
pop
iret
pop
or
xchg
sbb
out
ja
imul
aad
push
xchg
shl
in
(bad)
gs
dec
movs
xor
push
mov
jle
repz
pop
dec
int3
and
mov
aaa
mov
push
mov
lahf
sub
jecxz
sub
xchg
push
push
mov
sbb
ret
sti
stos
outs
test
(bad)
shl
mov
pop
cmc
retf
mov
mov
mov
hlt
fwait
lods
outs
mov
into
call
stos
sbb
mov
mov
jnp
mov
mov
cmp
xchg
xchg
addr16
mov
cmp
mov
fistp
mov
in
inc
lods
push
iret
in
sub
jg
arpl
pavgb
and
jne
add
sbb
xor
pop
ret
lods
ja
out
(bad)
loopne
out
adc
cmp
scas
xchg
popf
pushf
ds
lods
(bad)
cwde
xchg
or
push
mov
jne
lea
shl
lods
stc
cmp
and
test
pop
sbb
scas
out
repz
rcl
arpl
(bad)
xor
ret
pushf
jb
push
stc
adc
int3
xchg
(bad)
inc
es
sbb
xor
sub
mov
xor
js
loope
int
fadd
fwait
push
push
mov
xchg
mov
inc
push
lds
cmp
xchg
xor
xor
cdq
mov
sar
dec
cmp
pop
push
sub
mov
or
sbb
jbe
sub
xor
aam
jge
stc
jo
aad
cmp
push
add
fidiv
popa
in
xchg
fild
inc
mov
pop
fwait
ss
push
shr
fiadd
retf
sub
fimul
loope
push
inc
(bad)
xchg
sbb
add
add
sbb
mov
fistp
sbb
pop
sahf
jmp
and
jecxz
lock
lahf
and
jbe
add
fist
jl
or
loopne
mov
jb
mov
into
ret
push
and
sub
out
(bad)
xchg
(bad)
(bad)
call
ins
pop
mov
mov
fnstenv
xor
cmps
mov
inc
clc
xchg
xor
inc
fdiv
pushf
cli
xchg
pop
push
mov
push
ficomp
adc
push
sub
scas
outs
pushf
ret
lods
or
adc
cmp
gs
add
pop
out
lods
ds
xor
(bad)
aad
xor
jmp
and
lds
cmps
pop
into
sbb
mov
mov
adc
push
or
in
jl
and
pop
ss
mov
mov
inc
cmps
ins
push
and
or
or
mov
fdiv
adc
lock
ins
and
cmps
mov
mov
dec
jne
mov
add
jae
repnz
and
std
jo
mov
jmp
jmp
shl
rol
aad
xor
ins
lock
xor
push
cmc
mov
hlt
cs
inc
shl
repnz
popf
jbe
es
nop
aas
(bad)
ret
or
gs
stc
push
and
jns
repz
ja
repz
int
push
in
xor
and
xchg
pop
push
adc
(bad)
mov
push
cli
mov
push
bound
adc
push
fist
jmp
movs
add
jo
xchg
inc
push
loop
cld
jmp
push
aad
popf
or
icebp
std
sar
mov
jp
ss
enter
and
mov
cmc
lock
pop
icebp
sbb
sbb
scas
cmc
hlt
or
imul
icebp
pmuludq
mov
push
clc
ins
jno
cdq
jle
sahf
gs
dec
mov
and
cmp
push
inc
mov
test
add
leave
cs
pop
ins
movs
pop
inc
xor
cwde
cmp
aas
(bad)
push
into
shl
loopne
add
add
mov
adc
repz
int3
jns
out
jge
or
icebp
sar
rcr
gs
test
pop
ss
cmps
jne
mov
outs
(bad)
fnstenv
jns
jg
inc
mov
add
cld
xor
and
dec
out
aad
jg
fist
or
in
mov
mov
xor
jns
loope
push
jns
arpl
cmp
inc
mov
(bad)
mov
push
test
inc
inc
pop
ret
ret
or
clc
jb
mov
out
sbb
or
std
xchg
or
aam
loopne
test
sub
mov
sub
daa
sbb
out
fisub
pop
pop
and
arpl
lahf
cdq
ja
das
(bad)
das
rcl
adc
jle
push
jnp
out
cmp
stos
push
or
pop
dec
cli
sbb
push
mov
mov
sub
sub
jge
repnz
push
xor
xlat
xlat
jno
xor
add
popf
ret
(bad)
or
lock
ss
mov
imul
or
and
jb
jmp
in
ss
push
scas
push
mov
neg
(bad)
popf
ja
or
adc
fistp
pop
js
call
pop
jns
cmp
in
lock
sahf
enter
bound
mov
xchg
dec
inc
pop
and
inc
push
xor
(bad)
stos
clc
mov
dec
jnp
jnp
sar
mov
mov
xor
pop
sub
inc
cmp
mov
leave
mov
shl
icebp
aad
fcom
pop
daa
(bad)
sbb
push
pop
xor
sub
mov
adc
mov
fiadd
leave
das
mov
push
xor
(bad)
icebp
cli
test
mov
shl
mov
jmp
ss
aas
or
jecxz
mov
xchg
mov
push
(bad)
stc
inc
add
out
aas
cdq
ja
fidivr
(bad)
mov
repz
xchg
jmp
ret
pop
adc
int3
out
loopne
add
push
dec
outs
popa
fisubr
scas
mov
adc
push
loop
repnz
mov
dec
jnp
in
ret
sti
cmps
cmc
inc
push
jno
mov
dec
push
jo
cmps
popa
pop
movs
inc
inc
rol
dec
push
int3
mov
mov
gs
sbb
lahf
pop
dec
mov
clc
enter
addr16
dec
mov
mov
and
sbb
pop
ja
loop
das
jecxz
repz
(bad)
ret
mov
es
cld
jmp
pushf
es
or
xchg
add
mov
ret
retf
mov
inc
in
add
aam
rol
sub
fidiv
inc
xchg
(bad)
jl
xor
(bad)
dec
cmp
out
out
mov
add
mov
adc
push
mov
mov
aas
inc
inc
imul
add
arpl
test
mov
sbb
in
push
fs
enter
or
jne
(bad)
loope
fs
adc
inc
add
mov
mov
inc
fidivr
mov
lahf
push
add
scas
adc
rcl
dec
icebp
fdiv
pop
lea
nop
pop
sub
in
ins
cld
int3
dec
gs
cmp
stc
inc
add
aad
jp
push
pop
add
repnz
dec
adc
sbb
pop
mov
sub
jno
xor
call
loop
pop
pop
xchg
imul
xchg
outs
loopne
aas
mov
jecxz
or
dec
or
mov
and
shr
data16
and
hlt
dec
cmp
mov
jnp
fsub
(bad)
jge
mov
js
add
push
popf
pop
inc
push
cmc
mov
xchg
fild
and
inc
mov
scas
data16
out
fmul
add
xchg
mov
adc
mov
stos
test
jmp
sub
mov
les
fld
add
out
mov
out
or
lds
mov
iret
and
outs
cmc
daa
xor
loope
jae
(bad)
std
xor
dec
cmps
test
shl
jno
mov
mov
inc
pop
loopne
mov
movs
push
pop
xor
xor
lar
sbb
add
cwde
push
std
ret
xor
movs
aad
add
ret
call
stos
ja
pop
lahf
cs
dec
jbe
mov
addr16
leave
aad
push
cmp
adc
mov
add
cwde
or
cld
xor
and
arpl
add
cli
and
aaa
adc
cmc
outs
das
sbb
cmp
mov
les
cli
out
cwde
sbb
call
push
or
mov
cmps
cli
les
sub
das
dec
popa
scas
or
movs
adc
mov
mov
jmp
xor
pop
das
dec
stc
bound
fwait
pop
mov
out
lock
xor
pop
test
sbb
ds
fcomp
rol
leave
lahf
out
jl
retf
add
sub
out
in
mov
add
lods
call
mov
cmp
push
pusha
scas
cmc
add
jb
stc
adc
dec
stc
adc
out
pop
ja
mov
and
inc
(bad)
div
lods
ja
test
xchg
inc
adc
jo
push
mov
shr
loope
fldcw
inc
sub
xchg
add
je
lock
add
fidiv
lea
sbb
iret
loope
sbb
in
(bad)
sti
jno
addr16
xchg
fsub
pop
and
push
or
loop
pop
aam
pop
bndldx
pop
in
pop
xor
push
test
fwait
mov
pop
fidivr
out
test
dec
pop
jno
pop
test
or
in
in
out
test
ret
jb
in
adc
sti
call
and
mov
jge
in
sbb
dec
cwde
(bad)
jge
dec
ins
outs
dec
dec
iret
or
ds
xchg
arpl
jbe
fstp
xchg
jmp
retf
or
fs
inc
sbb
sub
xchg
das
add
jg
out
in
inc
mov
mov
mov
and
jmp
adc
jmp
es
and
out
aaa
repz
cmp
in
xchg
inc
mov
cmp
jns
int3
dec
ror
rol
pop
mov
(bad)
movs
or
xchg
dec
xlat
or
sti
cmp
js
jl
mov
cmc
add
jp
test
add
loopne
and
cwde
cs
out
sahf
in
fild
jmp
rcr
and
daa
(bad)
gs
ins
xor
aad
xor
sbb
repnz
xor
mov
pop
add
mov
xor
or
jecxz
in
lods
inc
sub
aam
xchg
jbe
pop
xchg
dec
xchg
mov
xchg
sti
pushf
mov
in
cmp
mov
sbb
sub
jne
mov
aam
pop
mov
jae
push
ja
sti
adc
(bad)
xchg
lock
adc
add
push
push
xor
outs
or
popf
or
pop
jecxz
xchg
es
mov
adc
loopne
cmp
dec
cmp
adc
mov
addr16
jecxz
and
mov
(bad)
ror
into
ret
aas
clc
pusha
mov
pop
pop
dec
in
fcmovnb
shl
inc
mov
pop
rcr
out
inc
xchg
and
test
fs
sub
push
jns
rcl
mov
cmp
mov
(bad)
fadd
in
mov
(bad)
add
icebp
mov
leave
sub
cmp
push
xchg
mov
aad
dec
or
dec
rcr
mov
or
ficomp
leave
test
sti
and
repz
pop
pop
mov
int3
sub
push
pop
jmp
pop
sub
sub
mov
and
jno
outs
ficomp
or
sti
pop
mov
push
mov
loop
mov
(bad)
xlat
int
jnp
les
and
fdiv
add
pop
pushf
jmp
add
cmp
out
je
nop
in
xchg
setns
ficom
xchg
adc
test
in
in
lods
mov
mov
scas
fs
loopne
movs
push
or
jno
das
fldenv
push
(bad)
add
or
aam
jno
xor
in
jae
and
shr
jmp
push
retf
pop
add
iret
inc
and
out
cmc
(bad)
test
lahf
or
cli
mov
ret
das
dec
hlt
(bad)
cs
dec
push
and
and
fiadd
mov
sahf
cmp
inc
lds
push
pop
ins
out
sbb
loop
imul
mov
push
inc
add
mov
sbb
ins
movs
stc
jae
jmp
or
sub
fnstenv
mov
scas
xor
push
pop
(bad)
out
adc
jle
sbb
mov
in
lods
mov
pusha
test
ret
xor
xor
hlt
and
sbb
mov
cli
cmp
sti
and
mov
adc
sub
cmc
jns
into
push
push
fbld
(bad)
adc
lea
stos
sbb
inc
fdivrp
cmc
cmp
out
and
cmp
jl
sti
lahf
cmp
scas
cdq
mov
mov
(bad)
retf
inc
cmc
push
mov
cmp
sub
jbe
mov
push
sub
imul
xor
rcl
cs
pop
(bad)
les
pop
xchg
cmps
lock
cli
mov
sbb
mov
fsub
adc
ja
mov
sub
int3
cmp
sub
(bad)
dec
les
arpl
mov
jecxz
call
shl
jns
test
xor
add
int
mov
or
xchg
jno
es
xchg
mov
dec
call
retf
mov
jmp
imul
fisttp
xchg
retf
push
dec
push
arpl
sahf
xchg
arpl
xchg
mov
mov
xchg
mov
push
(bad)
sbb
cmps
mov
shl
add
mov
lock
mov
dec
sbb
jecxz
adc
js
ins
cmp
or
pop
adc
repnz
add
jle
add
mov
or
leave
mov
pop
lahf
push
aad
pusha
call
add
vpsllw
and
inc
inc
rcr
push
rol
cmc
sbb
es
sub
pop
loop
and
push
dec
into
arpl
cmp
mov
add
sub
(bad)
pusha
xor
dec
inc
test
arpl
test
push
cmc
popa
stos
sahf
mov
cld
dec
cmp
or
rcl
inc
(bad)
add
xor
je
iret
neg
loopne
xchg
(bad)
in
or
pop
add
fs
shr
lock
daa
cmp
xchg
mov
les
adc
cmp
aad
test
xlat
aam
fcmovnu
mov
push
mov
mov
xor
push
cs
dec
out
xchg
lds
test
jle
(bad)
aam
push
ja
rcl
sub
fs
neg
push
xor
cdq
sub
enterw
xchg
mov
loopne
jle
mov
mov
jo
add
stos
jmp
test
fdivp
pusha
jmp
push
rcl
pop
fwait
pop
test
xchg
jno
push
stos
pop
xor
xchg
in
pop
or
movs
sub
cmp
add
xor
sub
dec
das
inc
cmp
iret
sub
adc
imul
mov
rcl
(bad)
jecxz
mov
push
rcl
inc
push
cmp
int3
cmp
pop
ins
loopne
mov
fsub
sub
push
push
fadd
push
adc
xchg
mov
cmps
push
pop
xchg
popa
loope
daa
ret
cdq
jae
add
and
or
ja
sbb
mov
push
dec
push
test
stos
xchg
sub
pop
outs
xlat
pop
mov
push
fild
cmps
lahf
fs
ins
out
mov
lea
mov
aas
jnp
loope
sbb
or
js
mov
xor
data16
fwait
mov
dec
mov
inc
retf
std
test
repnz
xor
(bad)
sub
ins
stos
mov
sbb
xchg
inc
add
lahf
xor
xchg
je
sti
out
xchg
shl
add
pop
pop
adc
jmp
mov
inc
dec
sub
xchg
jmp
cmps
or
pop
int3
dec
sbb
cmp
xchg
in
test
stos
cmps
es
or
push
arpl
mov
or
push
shr
dec
repz
retf
and
pop
shl
xor
or
fsub
mov
and
je
sbb
jecxz
icebp
dec
in
mov
xor
jbe
xchg
fcomp
mov
stc
call
scas
push
mov
lds
out
aad
fidiv
sub
mov
dec
xchg
mov
(bad)
cmp
push
cmp
mov
xchg
in
mov
stos
mov
in
jb
inc
and
imul
inc
mov
push
sub
push
mov
jbe
movs
add
pushf
cmp
jnp
pushf
(bad)
push
jmp
sub
xchg
dec
cmps
rol
mov
fld
jns
jo
sbb
push
xor
xor
xor
mov
mov
xor
push
cmp
call
call
push
jl
xchg
ja
outs
mov
mov
xchg
mov
push
dec
sbb
icebp
ja
sub
inc
xchg
aaa
mov
push
cmps
pop
push
loope
adc
inc
pop
adc
leave
push
jno
mov
mov
mov
movs
xchg
xchg
pop
mov
jmp
xchg
xchg
jb
inc
lods
dec
xor
push
(bad)
std
pop
sub
sub
xchg
dec
jmp
lea
ja
mov
jb
xchg
out
cwde
movs
mov
mov
push
leave
push
mov
adc
push
xor
mov
test
(bad)
inc
jl
mov
sub
cld
jno
mov
popa
jecxz
pop
adc
int
adc
cmps
bound
mov
adc
vdivps
mov
stos
mov
pop
push
(bad)
jp
and
adc
inc
sub
mov
mov
mov
jo
js
jge
push
push
shl
mov
fdiv
jmp
rcr
mov
inc
hlt
test
fst
pushf
aam
xchg
push
je
(bad)
jmp
cmp
loop
push
jb
popa
pop
mov
sbb
and
or
cmps
or
loopne
(bad)
inc
mov
dec
push
cli
jmp
fistp
push
cmp
or
fsubr
jbe
inc
fs
lods
inc
fs
dec
jne
push
jae
pop
mov
pop
stc
pop
(bad)
mov
jl
iret
xchg
cld
and
mov
int3
out
gs
(bad)
aam
or
jbe
sbb
jmp
mov
push
fs
std
retf
test
adc
xchg
jecxz
dec
mov
push
jo
loope
pop
xor
lahf
les
adc
dec
push
push
sbb
cmps
mov
xchg
fild
push
sbb
aam
ret
add
mov
fs
cmp
dec
fsubr
popa
mov
jns
std
fwait
sub
fisttp
sub
shl
and
mov
xchg
adc
adc
scas
stos
fdivr
cld
addr16
test
add
xor
cwde
lods
ds
movs
push
push
pushf
jnp
mov
push
jne
in
inc
push
mov
ja
ret
lock
xchg
call
test
nop
in
sub
pop
jo
outs
test
inc
in
add
jmp
scas
cmp
push
inc
leave
jmp
sbb
xchg
dec
repz
test
add
and
push
mov
lods
(bad)
stc
lods
or
inc
mov
stos
outs
mov
(bad)
jmp
imul
and
shl
stc
sbb
ins
lods
xchg
mov
cld
adc
cmps
adc
call
in
out
sbb
(bad)
fs
inc
loopne
std
mov
xchg
clc
loope
(bad)
fdivr
and
ret
mov
dec
and
push
push
in
mov
mov
addr16
js
cwde
xchg
ja
ret
mov
test
and
iret
cmp
out
lea
test
gs
(bad)
push
cmps
dec
xor
inc
ins
xor
(bad)
retf
mov
and
adc
test
out
sbb
add
test
mov
add
aam
push
sbb
fcom
push
call
aam
int
xchg
dec
and
ins
ret
mov
jae
mov
sbb
sub
js
add
pop
js
fmul
pop
inc
sbb
xor
ret
xchg
sub
lock
retf
pusha
mov
xor
and
mov
sar
mov
and
js
dec
hlt
data16
xchg
imul
sub
dec
retf
sbb
loope
lahf
shr
shr
sub
ss
xchg
mov
out
ror
dec
sbb
ss
mov
std
xlat
js
mov
add
retf
fdiv
(bad)
jnp
test
ror
out
fst
out
push
mov
xchg
(bad)
push
popf
ret
inc
into
mov
mov
sub
pop
lds
push
das
mov
sahf
mov
mov
xor
pop
mov
add
add
fcom
(bad)
(bad)
push
leave
adc
and
das
xchg
add
sub
pop
es
jne
iret
fstp
cli
sar
or
inc
jno
mov
mov
push
repz
xor
cmp
add
pushf
add
xor
pop
jmp
psubusb
and
push
mov
xchg
and
dec
fisubr
pop
mov
jmp
xchg
popf
test
mov
jnp
adc
jo
cmp
push
dec
es
cmp
repnz
or
add
cmps
add
mov
pop
xchg
cmp
daa
push
ror
adc
and
xor
and
and
iret
push
pusha
mov
movs
mov
sbb
shl
mov
ds
ss
jmp
pop
inc
xor
cli
sub
cwde
xchg
mov
xchg
add
sbb
lods
fld
dec
and
icebp
inc
jbe
mov
cli
retf
call
push
sbb
dec
movs
pop
jg
mov
jg
mov
add
mov
jnp
nop
mov
outs
add
(bad)
jnp
adc
mov
xchg
je
pusha
out
xor
sahf
add
cmp
xchg
sub
or
mov
mov
or
adc
mov
not
dec
mov
xor
push
mov
or
hlt
push
inc
movs
and
clc
cli
dec
fiadd
ret
loopne
mov
xchg
movs
test
aad
cli
xchg
mov
daa
outs
or
scas
jns
pop
xor
in
cmp
xchg
xor
mov
adc
adc
push
inc
gs
leave
(bad)
jecxz
mov
in
pop
mov
enter
pop
jne
mov
enter
pop
push
sub
push
inc
into
add
ins
adc
jns
adc
jno
cmp
into
adc
imul
test
cwde
add
imul
fistp
aam
dec
adc
popa
mov
adc
in
xchg
mov
loop
in
add
mov
aas
lods
mov
retw
cdq
inc
rcr
mov
adc
push
mov
loop
or
mov
jmp
mov
pusha
xchg
icebp
mov
test
adc
or
es
pushf
adc
sub
push
mov
sub
or
add
push
or
(bad)
bnd
aaa
ret
(bad)
out
jbe
(bad)
not
mov
add
xor
inc
aad
iret
jle
inc
mov
ror
jecxz
rcr
and
pop
into
xor
jle
idiv
test
popa
jp
scas
mov
xchg
into
dec
dec
std
loope
fstp
xor
push
add
dec
push
xor
jbe
xchg
inc
outs
lock
mov
xchg
and
popf
push
pop
lods
cmp
nop
mov
shr
mov
mov
clc
mov
mov
out
popa
repz
mov
ja
sub
mov
jae
scas
xor
xchg
jmp
test
ss
repnz
jecxz
(bad)
pusha
hlt
aaa
push
xchg
and
mov
hlt
push
popa
cmp
jg
iret
sti
xchg
dec
(bad)
pop
sbb
ja
in
scas
xchg
push
jmp
mov
mov
adc
adc
sbb
push
jnp
jne
adc
movs
jl
repnz
dec
adc
push
pop
push
pop
test
imul
sub
inc
or
jae
mov
mov
jno
add
xchg
add
push
jmp
mov
shl
cmp
stos
shl
cmp
arpl
sub
out
repz
iret
icebp
int3
sub
loop
outs
mov
push
xchg
iret
pop
xor
and
or
mov
sbb
icebp
push
(bad)
aas
cld
lahf
int
bound
or
xor
int3
add
neg
lods
pop
push
mov
push
inc
or
int
int
iret
and
ret
(bad)
sar
xor
xor
retf
adc
jg
pop
loopne
mov
jmp
icebp
push
(bad)
out
fs
cwde
sbb
jae
sub
int3
sbb
adc
popf
iret
inc
mov
ffreep
xor
push
adc
imul
jne
adc
pop
leave
out
cwde
loop
cmps
mov
fwait
jp
push
je
push
ret
mov
xlat
cmps
call
pop
mov
outs
test
pop
mov
jo
icebp
(bad)
hlt
jns
cmc
ins
movs
rol
imul
push
div
out
loop
rol
sub
in
xor
pop
int3
enter
cmps
jp
int
push
mov
movs
mov
mov
jl
jnp
mov
jmp
inc
fadd
fldlg2
aad
test
and
icebp
add
mov
mov
test
ins
add
loop
popf
adc
cmp
shl
jg
scas
iret
pop
not
jmp
stos
push
xlat
ret
gs
jmp
add
mov
cmp
xchg
jmp
lods
icebp
mov
dec
jae
inc
pushf
repnz
cld
sbb
push
test
popa
and
ret
add
loopne
mov
gs
idiv
pusha
mov
pop
add
out
je
dec
les
pop
out
cmp
push
sbb
stos
push
xor
outs
stc
imul
or
cmp
add
cmp
cmps
aas
(bad)
sbb
add
fadd
adc
xchg
pop
in
xor
cld
int3
aam
fistp
test
dec
in
push
ins
push
aad
sub
jbe
scas
add
jnp
mov
inc
xchg
inc
mov
fld
push
jg
inc
xor
xchg
ds
or
or
sbb
push
adc
es
out
pop
cmp
adc
or
pop
pop
cmp
enter
pop
cmc
xor
mov
pop
mov
addr16
test
popa
and
iret
mov
dec
(bad)
lds
sar
xor
pushf
addr16
push
popf
mov
aam
shl
dec
fdivr
cmp
dec
mov
push
test
out
push
gs
sub
sub
pop
jecxz
rol
jb
and
pop
fwait
test
jge
inc
and
fxtract
cdq
das
stos
dec
cld
arpl
fadd
dec
sbb
inc
mov
ins
and
arpl
popf
std
fs
xchg
xor
stc
dec
dec
stos
sub
arpl
lods
jbe
jmp
mov
outs
push
movs
out
mov
sbb
dec
mov
add
ret
lea
jl
mov
pop
lahf
shl
add
inc
mov
sbb
mov
mov
sub
std
dec
imul
lds
xchg
hlt
aam
js
test
pop
mov
ja
sbb
popf
outs
loope
pop
imul
inc
pop
pop
and
push
in
jmp
ror
sahf
int3
mov
fld
or
aaa
cdq
aam
pusha
mov
imul
in
mov
mov
cmps
cmp
adc
adc
cld
and
sbb
pushf
xchg
push
clc
popf
lahf
add
xchg
dec
push
out
inc
dec
mov
inc
push
pop
push
loope
fld
jge
std
(bad)
sti
stc
mov
call
and
data16
mov
sub
add
out
leave
(bad)
jno
inc
add
inc
into
ret
in
jo
push
xchg
xor
popf
cdq
stc
jmp
xor
push
adc
out
xchg
xchg
dec
sbb
pop
lods
ret
xor
jno
je
jae
clc
loop
sbb
mov
out
cmps
mov
mov
add
fst
fincstp
xchg
push
out
nop
daa
pop
pop
popa
out
rcl
je
xor
mov
push
mov
loopne
dec
dec
xor
(bad)
pop
int3
call
mov
jbe
push
xor
imul
sub
pop
int3
shl
(bad)
pop
rcl
pop
movs
xor
fiadd
dec
(bad)
pop
push
mov
imul
icebp
pop
inc
push
sti
test
pop
xchg
sahf
or
mov
test
movs
lea
mov
jo
movs
cmp
jmp
or
mov
stos
adc
mov
cli
lods
xor
lea
mov
cmp
call
repz
xor
push
sub
or
shl
stc
js
xchg
and
pop
icebp
repz
call
inc
jns
pop
imul
or
sub
stos
in
lea
sti
jmp
cmp
mov
dec
xor
in
js
mov
lahf
outs
add
jne
fstp
mov
jo
pop
mov
(bad)
out
push
inc
pop
(bad)
leave
cmp
dec
push
int
pop
daa
cli
add
in
or
xchg
xchg
push
cmps
out
jp
shr
jle
xchg
inc
lds
sbb
pop
dec
dec
sub
sti
push
mov
jge
js
pop
xor
add
or
jmp
dec
je
nop
cmp
inc
xchg
inc
or
xor
xchg
stc
icebp
int3
pause
cdq
and
jecxz
dec
fwait
xchg
adc
cmp
or
mov
mov
js
hlt
mov
push
(bad)
cmp
mov
inc
rcl
aaa
cmp
shl
cmc
inc
add
or
push
rcr
push
jge
inc
fstp
mov
cli
pusha
jg
and
cmp
cmc
enter
cli
inc
jns
add
nop
mov
shr
lahf
ds
pop
push
repz
and
sbb
dec
or
inc
pop
xor
sub
inc
pop
and
sub
mov
sub
data16
shl
xchg
sub
jbe
sub
cdq
dec
jne
sti
loopne
sbb
jns
mov
cdq
imul
push
add
(bad)
out
aaa
dec
les
push
inc
inc
int
xchg
aam
daa
dec
jge
sub
clc
push
jbe
retf
(bad)
or
adc
(bad)
and
push
jo
test
hlt
das
addr16
jmp
sti
dec
std
add
lods
or
and
push
imul
pushw
and
(bad)
xor
icebp
daa
cmp
mov
pop
loopne
xchg
mov
jo
jp
neg
or
adc
js
add
ss
movs
shl
and
jno
jg
(bad)
mov
and
dec
out
mov
arpl
push
ss
and
xchg
inc
addr16
mov
xchg
js
xor
call
sbb
dec
leave
lods
ja
mov
in
ins
inc
pop
fisubr
jbe
(bad)
shl
and
dec
jecxz
movlps
ret
in
sbb
cmps
ret
(bad)
xchg
fidiv
je
mov
ret
std
(bad)
fwait
mov
pop
sar
nop
mov
je
push
jecxz
aas
push
leave
adc
je
popa
lahf
js
outs
repz
cmp
cmp
test
and
clc
mov
pop
mov
stos
not
dec
pop
adc
jnp
in
ds
or
mov
jbe
cwde
mov
cmp
ins
test
xchg
mov
cdq
dec
in
jo
dec
push
rcl
lds
jbe
xlat
adc
mov
loope
jmp
sbb
mov
xchg
jns
adc
adc
pop
jb
pop
out
dec
aad
xchg
inc
inc
dec
mov
pop
pop
or
lods
jp
ficomp
jmp
cld
adc
xor
xor
std
and
repnz
inc
cwde
shl
mov
es
js
sti
sti
fsub
cmp
in
(bad)
or
xchg
push
mov
out
jmp
test
lods
retf
jecxz
mov
ss
dec
mov
dec
mov
add
xchg
mov
mov
sub
js
jmp
daa
imul
shl
popa
clc
loop
sbb
or
js
jae
ret
(bad)
test
pushf
and
cdq
sbb
pop
dec
lds
jecxz
sbb
mov
fsubr
cmp
fnsave
xchg
push
or
cdq
into
add
xchg
in
pop
mov
stc
scas
sti
outs
in
gs
dec
hlt
jbe
push
or
out
add
nop
cli
jle
cmp
dec
das
adc
int3
ins
jno
or
mov
in
ins
mov
xlat
xor
cmp
sbb
int
dec
mov
loopne
rcl
pop
pop
mov
loope
mov
lods
dec
(bad)
mov
mov
add
aas
test
pop
int
mov
inc
push
mov
outs
loop
movs
push
not
out
scas
out
mov
inc
lea
cmps
cmp
xchg
std
call
sub
jb
movs
lds
movs
push
test
call
(bad)
jno
push
jle
mov
mov
popf
fcomi
fs
imul
lock
sbb
push
add
jl
push
dec
pop
sbb
test
mov
int
sub
into
pop
mov
mov
and
pop
jl
adc
lock
ret
sub
mov
(bad)
mov
psrld
push
sbb
jle
sbb
test
add
adc
jmp
xor
sbb
rol
cld
inc
push
cmp
neg
push
and
(bad)
mov
ret
mov
lds
sbb
out
xchg
pusha
neg
sub
shl
dec
xchg
fisttp
push
push
mov
push
or
add
stos
cs
pop
(bad)
mov
fdivr
mul
(bad)
ins
jl
xchg
jmp
shl
pop
das
or
pusha
inc
or
jno
popf
imul
push
xchg
out
or
lea
dec
aam
nop
es
jb
sbb
call
push
scas
inc
adc
loop
xchg
xor
mov
out
add
icebp
mov
fucom
lock
iret
pop
lahf
call
cmp
jg
test
adc
loopne
cmp
adc
(bad)
cmc
movs
adc
(bad)
and
lods
rol
sub
sub
jno
jns
mov
jge
jb
add
add
mov
add
dec
ins
ss
adc
jmp
pop
lea
repnz
dec
mov
sbb
mov
ret
mov
lds
add
lock
popa
test
xor
pushf
pop
or
rol
fisubr
sbb
mov
bound
sub
cmp
(bad)
aaa
test
mov
popa
ja
test
xchg
hlt
cli
pop
sbb
cdq
outs
stos
xor
pop
jo
fimul
and
pop
(bad)
aam
jae
mov
popf
ret
rol
mov
int3
les
pop
test
dec
push
aaa
sub
leave
scas
mov
and
pop
dec
pop
data16
or
mov
test
adc
ret
pop
repnz
mov
pop
shl
mov
adc
bound
sub
(bad)
mov
adc
fbld
jl
xor
(bad)
mov
addr16
xchg
mov
iret
push
cmp
xor
add
dec
fld
lea
mov
push
pop
hlt
enter
sub
and
push
imul
jmp
add
sbb
dec
pmaxub
int3
aad
sub
dec
call
data16
xchg
sar
ja
or
push
mov
and
jp
cmp
cmp
out
or
add
popf
fst
rol
rcl
ss
inc
push
dec
or
(bad)
mov
test
adc
jl
push
(bad)
bnd
inc
inc
sbb
es
out
pop
push
or
(bad)
aam
test
les
dec
rol
mov
push
xor
pop
jp
pop
int
sar
pop
cmp
dec
sub
jecxz
jae
call
sbb
loopne
pop
jle
xchg
(bad)
cmp
outs
cld
imul
(bad)
hlt
pop
and
mov
jb
pop
int
sub
out
stc
adc
popf
(bad)
xchg
jg
ror
and
leave
mov
jo
sub
jl
xchg
scas
push
mov
nop
or
lahf
neg
clc
fs
mov
sti
sub
add
aas
mov
jnp
(bad)
clc
(bad)
pop
jl
sub
cld
and
in
xor
and
cdq
ja
shl
sbb
cmp
or
adc
test
inc
mov
mov
sbb
js
jmp
xchg
daa
mov
adc
ja
ds
pop
jae
mov
push
push
jle
dec
cdq
fld
pop
in
popf
mov
mov
mov
jmp
push
xor
add
sbb
sbb
sub
fisttp
inc
sbb
add
pusha
loop
ret
iret
cmp
outs
mov
arpl
call
std
mov
mov
cs
je
das
add
push
pop
xchg
in
enter
cwde
or
and
adc
xchg
ret
xor
cmp
iret
jmp
lods
retf
pop
mov
or
push
in
hlt
or
loop
cmp
push
leave
js
loope
lods
mov
out
jne
jg
cmp
outs
(bad)
stos
pop
or
mov
rcr
push
sub
loope
shr
(bad)
xchg
popa
pop
sbb
outs
test
popf
mov
mov
fisttp
mov
sub
mov
fld
out
push
popa
adc
in
es
dec
lea
cmp
pop
xlat
mov
out
scas
sar
int
aam
pusha
inc
call
xor
(bad)
xor
xchg
mov
ficom
aad
mov
es
or
scas
ins
in
dec
test
ret
push
mov
lock
test
xchg
test
mov
push
mov
inc
pop
and
aad
ret
retf
cmp
cmc
mov
mov
out
push
mov
aam
movs
ds
jge
aad
ds
idiv
in
xor
imul
cs
loopne
add
out
xor
lahf
repz
mov
pop
clc
pop
xor
sbb
movs
sbb
ror
cmp
push
aam
cwde
js
add
imul
push
mov
shl
aam
mov
aas
jmp
(bad)
ins
jb
popf
mov
mov
aas
pusha
xchg
pushf
outs
cmp
movs
xor
movs
(bad)
and
ss
xor
cmp
sbb
outs
jb
fsub
push
cmp
push
les
(bad)
pop
jae
add
push
cli
adc
push
push
test
mov
sub
mov
call
adc
pushf
jne
ror
daa
inc
fnstsw
movs
jmp
inc
test
ret
int3
jo
shl
mov
sbb
bound
test
lahf
clc
repnz
retf
leave
cdq
(bad)
fcomp
fdiv
or
lahf
lods
or
or
push
rcr
pop
movs
scas
loope
pop
and
cmp
cld
mov
bound
call
jne
es
test
xchg
cwde
or
mov
test
cmp
and
fwait
movs
mov
xlat
fadd
inc
movs
outs
cld
jmp
mov
or
or
sub
inc
inc
mov
inc
rol
iret
push
sub
cwde
push
sti
jb
ins
test
cmp
ds
mov
push
cli
jg
(bad)
sahf
jg
mov
rcl
jmp
in
adc
sbb
mov
in
or
movs
mov
fwait
in
out
sahf
add
stos
ins
jmp
push
jg
lods
and
jmp
jl
mov
xlat
push
out
enter
test
mov
or
rol
stos
jle
mov
and
shr
pop
retf
mov
stos
repnz
push
mov
sahf
pop
(bad)
mov
inc
and
call
jp
push
xor
ds
in
jns
sbb
sbb
out
and
push
test
pop
(bad)
out
push
cmp
jns
(bad)
or
xchg
es
sbb
and
bnd
sbb
ss
mov
adc
(bad)
mov
js
shr
cs
sub
mov
xor
push
repz
jne
lods
mov
jne
shl
dec
fcom
out
and
sub
sbb
pusha
xchg
outs
pop
lods
pop
dec
repnz
xor
cmp
dec
lea
in
lods
add
mov
shr
sub
fmul
shl
adc
mov
daa
xlat
add
push
dec
nop
scas
loope
mov
jns
clc
jg
rcl
adc
jecxz
fs
(bad)
adc
mov
iret
jno
mov
imul
mov
mov
xchg
or
or
xchg
inc
stos
xor
xchg
test
or
sar
cmp
mov
xchg
jae
pop
dec
in
xchg
lods
lds
jmp
fmul
jge
adc
repnz
cmps
ins
cmps
int
and
in
pop
xor
cwde
and
fnstenv
pushf
repnz
ror
or
inc
adc
mov
xchg
sbb
push
arpl
adc
jmp
je
jmp
test
iret
push
sub
adc
lea
arpl
inc
push
js
and
mov
into
or
call
cs
push
out
xchg
movs
push
xor
sar
mov
imul
fcomp
push
pop
add
pop
push
js
and
fcomp
xor
xor
fcomp
shl
outs
jl
enter
mov
cmps
in
or
pop
daa
push
jmp
test
xchg
(bad)
stc
pop
xchg
clc
in
jp
std
in
stc
mov
out
xor
lods
loope
sbb
sbb
pop
add
into
dec
cld
xor
lods
add
arpl
push
(bad)
mov
sbb
mov
pop
ins
pop
sbb
xchg
test
push
push
popa
shl
cmp
pop
dec
adc
jno
not
xor
test
xor
pop
xchg
icebp
push
hlt
mov
dec
jae
xor
jecxz
call
pop
cmp
sbb
push
enter
aam
and
mov
jge
div
and
mov
jecxz
fsub
mov
xchg
cli
sbb
mov
pop
lahf
xor
gs
mov
shl
or
or
in
dec
inc
sub
jecxz
stc
dec
adc
outs
cdq
iret
cmp
out
out
inc
xor
sub
arpl
retf
and
loope
cmp
clc
mov
push
loop
sti
call
mov
jbe
cwde
push
sbb
scas
and
shl
inc
movs
ror
inc
das
ss
jp
push
sub
xchg
lods
shr
adc
push
mov
xchg
jnp
imul
aam
or
sbb
cli
int3
xchg
xchg
xor
jp
fistp
xchg
bound
mov
cmp
mov
clc
push
inc
out
ror
cmp
xor
fnsave
imul
add
adc
dec
add
repz
(bad)
cld
in
add
add
cmp
ss
and
sub
add
push
xchg
frstor
mov
push
mov
xchg
pop
push
and
sbb
mov
add
inc
push
xchg
loop
stos
jbe
iret
jp
div
sbb
cld
or
xor
int
push
jnp
sub
and
pusha
lds
ss
out
sub
cmps
jecxz
or
inc
loop
and
xchg
icebp
dec
dec
inc
pop
in
or
out
ins
or
inc
cs
aas
(bad)
mov
jg
jno
and
nop
sbb
pop
out
test
push
and
lods
pusha
fnstsw
sub
push
sbb
iret
cmps
in
dec
mov
ja
inc
outs
add
pop
pop
cmp
pop
call
sbb
dec
pop
cmps
inc
fcmovnu
shr
sub
cwde
or
or
xchg
ja
lahf
dec
repnz
push
or
pusha
cmp
add
lods
gs
jp
sub
push
or
call
mov
ja
jnp
pop
add
das
ja
call
lahf
adc
mov
rcr
cmp
and
dec
(bad)
mov
sbb
popa
hlt
mov
pop
outs
and
mov
js
fimul
pop
cwde
test
das
sbb
pop
cmp
ret
loope
(bad)
cmc
mov
mov
sbb
pop
xchg
mov
mov
cmp
jo
aad
xor
push
icebp
pop
xchg
mov
neg
and
movs
loopne
xchg
pop
or
ret
call
in
stos
retf
aas
jg
iret
fmul
fdiv
lahf
pop
loope
cdq
mov
mov
mov
repz
ror
pop
movs
mov
push
scas
dec
pop
stos
call
icebp
repz
sbb
loope
dec
adc
fiadd
jl
add
imul
inc
dec
enter
xchg
(bad)
(bad)
ficom
xor
in
push
cmp
xchg
cld
jge
jno
div
arpl
push
clc
je
test
repz
dec
cmp
int
rol
pop
sub
cmp
loopne
sahf
jp
xor
arpl
inc
jne
mov
repnz
inc
repnz
sub
xchg
jnp
and
fwait
or
inc
mov
add
out
out
scas
lahf
mov
xchg
jbe
icebp
mov
ja
fdivr
jae
push
dec
idiv
and
data16
imul
sti
pop
xor
push
ss
pop
jle
ds
mov
outs
test
sub
adc
sbb
xor
test
mov
mov
aaa
call
leave
jmp
stc
dec
inc
ror
in
or
mov
mov
mov
lock
xor
inc
or
retf
mov
stos
adc
xor
inc
mov
mov
enter
dec
stos
xchg
test
pop
and
push
loop
shr
pop
stos
pop
js
inc
cmp
not
sbb
je
les
and
add
ror
iret
sbb
rol
imul
pop
in
in
fwait
or
fwait
in
push
(bad)
cwde
cmp
mov
or
cmp
mov
fsubr
nop
loopne
mov
mov
and
lds
(bad)
int3
enter
xor
aam
movs
in
mov
sub
ja
int
xor
and
inc
movsx
ret
pop
iret
add
add
daa
and
adc
movs
inc
call
sbb
fadd
lods
jbe
int
sub
movs
retf
repnz
leave
pop
cwde
(bad)
push
xchg
xlat
xchg
xchg
add
dec
jg
retf
pop
sbb
sub
lods
push
mov
sub
dec
adc
mov
mov
mov
push
cmp
jmp
mov
dec
out
sbb
and
lea
and
and
clc
xchg
aad
cmp
scas
adc
mov
jb
(bad)
test
std
and
int
mov
cli
cmp
out
cmp
jbe
fdivr
test
jl
(bad)
pop
mov
dec
add
push
push
or
inc
push
push
addr16
adc
call
lock
loope
dec
retf
jmp
jno
jmp
aas
push
popa
(bad)
jmp
cmp
cmp
inc
fist
push
mov
adc
xlat
sbb
or
(bad)
push
inc
std
repnz
test
and
or
xchg
pop
and
inc
push
xchg
mov
mov
pushf
rcr
rol
je
jl
daa
in
adc
stc
xor
enter
and
jmp
push
push
mov
bound
(bad)
sub
or
(bad)
sub
push
cmp
loope
jmp
aad
cmp
xchg
add
sti
in
addr16
int3
mov
cmc
bound
loop
ja
cmp
js
bound
push
inc
or
xchg
push
mov
mov
dec
outs
push
test
test
cmp
cwde
test
aam
mov
ror
pop
das
dec
fsubr
aaa
and
imul
adc
or
cld
pop
sub
ins
inc
stos
(bad)
or
add
xor
aas
rol
add
imul
add
adc
dec
frstor
sahf
les
mov
add
or
gs
push
cmps
test
fwait
arpl
adc
and
xor
pop
and
dec
inc
cmps
js
lea
pop
ret
mov
or
inc
xor
inc
dec
xchg
jge
mov
out
addr16
jae
dec
adc
stc
push
lods
xchg
xlat
xchg
cmp
xchg
aam
pop
push
jl
mov
ret
pop
fidiv
es
shl
xor
mov
ss
ret
mov
mov
popw
xchg
pop
dec
in
shl
dec
adc
mov
fdivr
inc
lock
(bad)
jge
xor
mov
fld
sub
add
addr16
and
pushf
sbb
std
mov
xor
les
or
in
sbb
out
or
in
push
or
mov
inc
lods
sub
fwait
mov
aas
inc
dec
pop
das
mov
mov
js
pop
enter
lahf
out
ds
add
xchg
add
cmps
jge
lock
cmc
ss
xchg
and
push
mov
mov
inc
sbb
in
stos
jl
pop
xchg
add
pusha
cmp
ins
jp
movs
or
push
jmp
xor
rol
xchg
jmp
add
stos
or
scas
mov
cmps
aad
jmp
jb
sub
xchg
or
call
fwait
xor
and
add
sti
enter
add
js
add
movs
and
mov
adc
out
mov
push
cmp
cmp
(bad)
jg
sub
xchg
shr
mov
ins
pop
jge
mov
fld
pop
fsub
mov
movs
lds
fsubr
ds
outs
dec
adc
aaa
rcl
scas
sti
test
push
ins
adc
test
xchg
mov
inc
dec
sbb
mov
jne
adc
mov
mov
test
mov
push
mov
call
and
in
arpl
xchg
pop
add
inc
(bad)
sahf
bound
addr16
out
call
mul
loope
xor
pop
movs
mov
sahf
or
cmp
push
(bad)
sbb
rcr
arpl
mov
mov
sbb
leave
aad
pop
pop
out
jbe
push
push
ds
adc
mov
mov
and
out
(bad)
aad
or
add
(bad)
xor
pop
mov
jp
inc
or
xor
addr16
sbb
std
push
xchg
xor
ins
push
add
adc
jp
jbe
rcl
inc
pop
and
mov
sub
jae
addr16
sub
jmp
mov
repz
push
ja
into
ds
inc
data16
bswap
sub
cmc
and
xchg
out
fsub
add
xor
pop
or
std
pminub
cli
push
jp
hlt
ss
int3
test
scas
or
sbb
mov
iret
and
data16
push
and
rcr
adc
cmps
das
xchg
mov
fdivr
fisubr
pop
sub
jge
xchg
ret
sub
xchg
mov
mov
pop
shl
ja
outs
push
in
mov
dec
ret
(bad)
adc
mov
sar
and
push
xchg
pop
adc
mov
pop
test
push
pop
cmp
jb
clc
inc
fmul
adc
pop
call
sbb
test
dec
xor
pop
pop
sub
mov
fldenv
sub
xor
jb
sub
cmp
jmp
mov
repnz
pusha
pop
dec
xor
mov
mov
ins
cmp
data16
out
(bad)
sti
lds
(bad)
les
pop
push
call
and
xlat
cli
xchg
loop
js
mov
hlt
cli
or
or
jge
das
in
sar
mov
xchg
and
mov
ss
fcomip
ret
push
ret
icebp
adc
(bad)
xor
idiv
push
or
xchg
das
clc
fst
xchg
out
hlt
lods
push
lds
pushf
sub
outs
mov
fwait
in
jbe
js
adc
popf
sar
xor
xchg
sub
fisubr
les
add
call
inc
add
sbb
enter
jnp
dec
test
adc
retf
xor
scas
mov
jle
test
loopne
and
inc
xchg
sub
call
push
adc
rcl
retf
mov
xchg
cmc
test
das
inc
fdiv
jnp
dec
sub
mov
inc
add
rol
adc
and
mov
mov
repz
dec
repz
dec
scas
int3
pop
inc
jns
in
(bad)
fisttp
inc
jb
out
xor
imul
ret
loop
xchg
sub
(bad)
pop
call
pop
aam
jmp
fidiv
cmc
(bad)
pop
scas
cmp
or
repz
out
fwait
lds
xor
dec
ins
adc
aad
jmp
nop
cmovo
pop
fstp
cmp
aas
jae
pop
jb
add
bnd
stc
fwait
xor
dec
imul
js
cs
imul
lods
mov
mov
cs
out
popa
xchg
stc
inc
stos
pop
mov
rol
lahf
cmps
gs
les
cmps
outs
mov
push
test
cli
push
push
mov
and
lods
inc
and
out
pushf
mov
(bad)
neg
(bad)
xor
rcr
push
shl
xor
sub
lods
shl
mov
or
fcmovu
adc
iret
xchg
imul
or
mov
or
imul
stos
adc
(bad)
pop
pop
cld
xor
or
and
pop
ret
inc
mov
enter
and
dec
popf
fnstsw
aas
xchg
(bad)
call
fist
mov
dec
js
int
popa
pusha
sbb
jo
(bad)
xchg
ret
ja
dec
mov
fwait
mov
(bad)
adc
jnp
jb
jmp
mov
inc
adc
xor
mov
data16
out
fst
mov
mov
jecxz
cwde
or
cmp
cmps
popf
jmp
pop
sahf
in
pop
sbb
addr16
push
popa
(bad)
loope
inc
dec
fstp
cmp
push
out
jle
dec
and
fiadd
pop
inc
jo
mov
cli
sub
dec
outs
mov
or
(bad)
mov
inc
imul
cmp
clc
push
cmps
jbe
add
xchg
adc
add
scas
sub
test
xchg
sbb
shl
pusha
lods
loop
mov
xchg
jg
movs
fistp
shl
mov
push
(bad)
aam
push
adc
je
out
lock
lods
jg
and
mov
sbb
mov
fidivr
push
jecxz
xor
add
icebp
sub
and
push
test
scas
call
imul
add
enter
mov
jo
add
mov
ins
jmp
sbb
(bad)
ror
jp
and
pop
mov
pop
mov
mov
adc
adc
les
adc
std
jnp
xlat
dec
cmc
push
fwait
pop
gs
iret
outs
mov
adc
mov
pop
ss
movs
push
stos
imul
in
and
mov
in
je
(bad)
push
mov
out
jne
int3
pop
mov
mov
adc
aad
mov
or
jno
pusha
test
mov
cmps
push
xchg
mov
push
retf
inc
dec
dec
jecxz
mov
add
adc
rol
out
lds
out
or
pusha
je
jle
push
push
and
ss
sahf
lea
mov
lods
lahf
sbb
ret
xor
loope
(bad)
pop
xchg
cmp
repz
rcl
xchg
jg
call
retf
mov
jns
lods
imul
(bad)
(bad)
clc
push
sar
mov
sub
mov
test
test
mov
es
inc
stc
jnp
xchg
sub
shl
shl
ror
iret
pop
sar
and
iret
fisttp
mov
or
pop
mul
cmps
punpckhbw
adc
retf
add
aas
cmp
sub
jmp
mov
(bad)
push
pop
push
and
xchg
imul
es
push
loope
dec
das
sbb
call
jmp
mov
mov
cmp
push
mov
xor
(bad)
outs
sub
cmp
inc
mov
loopne
fsubrp
into
sbb
push
bound
add
mov
add
cwde
call
cld
and
mov
xlat
mov
imul
cmps
adc
mov
rol
test
sbb
pop
jnp
inc
int3
adc
stc
inc
cmps
in
fldcw
adc
shl
cmp
(bad)
fmul
inc
jne
lea
call
push
ja
gs
(bad)
fwait
popf
nop
xor
xor
jb
in
leave
adc
jge
pop
xchg
inc
rcl
and
jo
jmp
das
rcl
mov
sub
adc
shl
mov
int
adc
(bad)
sbb
dec
rcl
dec
adc
or
lock
push
push
xor
push
jae
daa
icebp
lods
adc
cld
inc
mov
xchg
fild
dec
and
mov
and
or
jmp
xchg
jns
idiv
mov
dec
stos
inc
inc
in
and
test
push
inc
lods
icebp
out
mov
(bad)
and
sbb
inc
cmp
mov
mov
jns
rol
test
jae
inc
inc
sar
inc
add
xchg
pop
push
push
aam
loop
dec
ret
in
mov
fild
mov
dec
test
stos
dec
test
inc
retf
in
sbb
lea
jo
adc
fild
sbb
or
add
adc
xchg
pop
test
sbb
pop
das
and
out
mov
stc
fld
add
inc
mov
(bad)
div
pop
leave
jge
lea
add
push
mov
or
out
fcom
mov
or
xchg
mov
mov
movs
imul
mov
mov
xchg
add
add
stos
dec
sahf
arpl
adc
inc
pop
pushf
mov
pop
jnp
xor
mov
mov
dec
or
mov
cmp
sub
pop
adc
js
pop
movs
mov
cmp
jecxz
leave
dec
(bad)
sti
loope
inc
inc
xchg
mov
ds
sbb
dec
in
popa
and
test
mov
retf
mov
mov
push
stos
add
out
daa
dec
xor
xor
push
out
inc
sub
jle
and
dec
cld
cmp
not
xor
jns
fwait
stc
add
test
(bad)
mov
cmps
push
rol
mov
xchg
mov
sub
pop
and
jl
push
push
stc
xor
xchg
cmc
sbb
adc
mov
ret
sbb
inc
mov
inc
dec
ret
or
out
push
das
shl
sub
int
mov
retf
jmp
or
hlt
xor
fadd
push
and
xchg
sahf
icebp
mov
retf
mov
imul
inc
shl
bound
push
jmp
sbb
xor
dec
(bad)
jg
mov
push
dec
sbb
inc
push
movs
pop
cdq
push
xor
fwait
sar
xor
cmp
and
es
push
xchg
jmp
adc
mov
stos
pop
inc
inc
xor
mov
sbb
jns
cmps
int3
stos
pop
test
in
loopne
inc
xor
sbb
out
add
and
mov
(bad)
adc
mov
popf
jnp
push
jmp
scas
mov
stos
shl
pop
fidiv
cmp
out
jne
inc
add
je
jnp
pop
sbb
cmp
jae
pushf
mov
les
xchg
int3
jae
xchg
and
jno
scas
(bad)
dec
sub
dec
pop
or
ficomp
fbstp
jle
jne
int3
sbb
or
out
sbb
test
popa
cmp
stc
cmp
movs
push
sub
(bad)
ja
mov
jmp
fwait
and
(bad)
retf
fsub
movs
and
pop
xor
in
sahf
fwait
mov
(bad)
(bad)
aaa
push
ret
rcr
std
rcr
lea
mov
jb
xchg
pop
dec
adc
jbe
mov
pop
jecxz
xchg
pop
push
jmp
cld
icebp
jo
jp
push
mov
mov
dec
jg
jmp
and
mov
loopne
shl
imul
and
stos
mov
sbb
mov
jle
mov
jle
outs
inc
lods
mov
cmp
cmp
cli
sbb
dec
xor
popf
fs
cmp
or
adc
into
rcr
mov
jecxz
in
dec
pop
and
jo
sbb
dec
popa
fdiv
in
adc
clc
inc
jmp
(bad)
lock
enter
ficom
add
cmp
movs
ffree
xchg
cmps
xor
inc
fild
int3
imul
xchg
scas
xor
in
jmp
jmp
stc
inc
mov
inc
push
pop
or
xchg
cmp
in
mov
nop
cmp
clc
push
inc
outs
xlat
sbb
ds
xor
lods
xchg
loopne
xchg
ins
js
xchg
mov
or
or
inc
imul
hlt
adc
ins
dec
enter
mov
cmp
lea
cs
or
cdq
sub
sub
dec
and
es
add
xlat
lods
clc
iret
movs
pop
sbb
fild
sar
test
(bad)
mov
je
popa
fsubr
lock
sub
shl
js
jb
push
sub
pop
mov
test
ins
jnp
mov
and
dec
jno
lock
fidiv
pop
push
push
cs
outs
inc
pop
jmp
dec
test
and
and
out
int
jae
cmp
fisttp
mov
loop
jne
(bad)
pop
retf
push
mov
cwde
jmp
inc
bound
shr
push
mov
retf
mov
add
push
icebp
pop
mov
or
mov
ret
cwde
dec
aam
xlat
adc
cwde
push
inc
cmp
mov
xchg
sbb
hlt
ss
hlt
sub
fisubr
ins
stos
mov
inc
imul
xchg
jnp
sahf
jns
aas
mov
shl
push
and
pop
cmc
or
xor
push
inc
xchg
mov
je
nop
mov
adc
cwde
out
fwait
jmp
xchg
dec
aam
outs
fsubr
fmul
mov
and
ja
xchg
sub
adc
sub
repz
adc
pop
inc
ds
pop
jbe
mov
aas
ss
cmps
int
sti
cmovs
jle
mov
lods
test
mov
mul
adc
out
imul
pop
shr
xor
push
ins
inc
mov
movhps
or
cmp
add
in
outs
call
jo
(bad)
push
jle
les
dec
int3
sub
push
movntq
aad
push
mov
aaa
jmp
sbb
int3
bound
pop
push
(bad)
dec
mov
mov
fucompp
or
mov
sub
xchg
fs
int
jp
jge
sar
and
adc
std
mov
cmp
and
xchg
dec
push
int
cmp
push
cmps
add
xchg
pop
aad
push
(bad)
aad
sbb
mov
xor
movs
add
pop
xchg
ret
sub
xor
sbb
mov
test
clc
mov
jne
inc
loopne
ret
repnz
mov
dec
pushf
mov
cmp
out
loopne
iret
aaa
sahf
sub
pop
mov
adc
js
popf
mov
adc
or
(bad)
ficomp
sbb
jge
mov
(bad)
push
out
mov
aam
cld
mov
ja
call
ror
cs
ret
or
xchg
out
nop
sub
stos
cmp
(bad)
fs
pop
das
jne
imul
fucomp
int
enter
dec
xchg
sbb
shl
imul
(bad)
cli
xchg
rol
inc
push
adc
cmp
mov
test
aas
lods
frstor
xor
cmp
pop
cmps
lahf
aam
cs
cdq
pop
repz
dec
xchg
movs
xchg
dec
xor
in
sub
inc
aam
cmp
outs
fistp
div
sbb
and
loop
loope
pmulhw
test
(bad)
and
xor
jle
dec
and
mov
(bad)
push
mov
dec
int3
adc
(bad)
scas
xor
pop
inc
movs
in
enter
gs
stos
or
xchg
loop
das
jecxz
es
jle
rcl
cli
lods
nop
cmp
out
inc
rcl
fmul
repz
cld
shr
push
arpl
shl
sahf
repz
(bad)
aas
cmp
iret
loop
and
xor
ror
mov
push
cwde
popw
inc
jns
in
adc
cwde
sbb
add
jae
je
cmps
cld
push
push
pop
mov
xor
pop
sub
xchg
in
out
in
into
mov
pop
lea
bound
into
in
stc
jl
call
dec
cmps
pop
in
push
pop
cld
in
sbb
sar
and
cmps
push
xor
inc
cmp
xor
pop
shl
retf
jns
cmp
xor
inc
sub
sar
sar
mov
dec
in
mov
pop
add
cmp
add
push
pop
mov
adc
sbb
inc
cs
jmp
scas
inc
enter
adc
sub
jnp
gs
(bad)
xor
add
push
inc
test
lds
xchg
(bad)
add
push
fwait
dec
mov
or
pusha
sbb
(bad)
sbb
pop
mov
fs
mov
pop
pop
retf
(bad)
fidivr
or
inc
push
mov
mov
jmp
adc
sbb
(bad)
cmp
mov
in
in
pop
sbb
lds
(bad)
outs
not
aad
cmps
sbb
xor
lods
cmp
or
scas
ss
xchg
xchg
test
pushf
or
mov
sahf
xlat
jmp
add
jg
add
mov
mov
add
xor
cs
sbb
shl
ss
fwait
fwait
cmp
jne
aaa
ror
inc
lods
es
xor
and
mov
mov
mov
rcr
out
imul
xchg
mov
adc
jmp
adc
hlt
mov
movs
xor
icebp
int
aaa
mov
xor
(bad)
mov
aad
xchg
cld
sub
(bad)
fdiv
cmp
ins
pop
dec
add
xor
mov
sub
sub
call
mov
(bad)
popa
push
pop
popf
popf
xchg
inc
pop
pushf
sub
push
jecxz
imul
addr16
adc
xchg
das
test
push
cli
xchg
inc
sub
add
lock
and
into
inc
pop
out
dec
push
lods
xor
adc
cmp
cmp
out
and
in
mov
mov
mov
(bad)
out
push
mov
push
dec
mov
out
(bad)
leave
fld
les
adc
push
outs
sahf
sbb
stc
cmp
push
dec
mov
pop
stos
xchg
test
jns
in
rol
addr16
(bad)
mov
push
push
stc
jmp
ins
add
or
pop
and
or
inc
adc
fdivr
out
jmp
mov
pusha
sub
(bad)
mov
div
out
ja
das
push
jne
jp
mov
cmp
jns
or
push
cli
popf
mov
out
pop
or
push
div
sbb
imul
lock
sub
test
retf
fdivr
cld
cli
push
lock
cmc
and
das
mov
dec
xchg
cmc
dec
mov
movs
push
or
or
xchg
adc
and
xor
and
in
sub
iret
mov
or
sbb
pop
push
retf
stos
test
dec
and
arpl
int3
cmp
xchg
pop
pushf
xor
ss
outs
aam
cmp
and
arpl
lods
cmps
imul
and
jae
jecxz
sub
and
push
mov
inc
fimul
xchg
call
push
jae
shl
push
inc
or
add
dec
(bad)
adc
dec
dec
out
cmp
fadd
sbb
pop
xchg
add
es
sbb
dec
into
jo
(bad)
aas
pop
lahf
repz
push
mov
ins
fcom
pushf
mov
push
push
mov
mov
jnp
mov
cld
sub
xchg
inc
jecxz
sbb
pop
cmp
xchg
shl
xor
dec
dec
add
mov
xchg
add
daa
daa
lea
mov
adc
daa
pop
in
or
jnp
or
inc
les
or
mov
fsub
pop
pop
nop
push
sahf
xchg
push
movs
xchg
fidivr
mov
stos
inc
scas
ret
push
adc
test
test
scas
push
mov
inc
cmc
ret
or
mov
xor
jno
mov
dec
shr
add
(bad)
in
in
retf
add
sub
pop
push
jnp
lahf
je
add
outs
fwait
imul
cli
outs
jb
int
out
lock
jle
xor
dec
mov
push
sbb
jae
(bad)
push
mov
sar
push
jle
lock
add
movs
or
push
inc
cmp
in
dec
frstor
push
lock
or
and
mov
cli
mov
loop
cmp
push
out
jecxz
xchg
cmps
scas
dec
hlt
or
sbb
adc
jae
out
in
ds
lods
sbb
(bad)
mov
or
fist
loopne
mov
mov
jg
rol
xchg
add
push
xchg
clc
and
fisttp
or
mov
scas
cmps
lock
push
dec
mov
add
enter
mov
repz
push
loop
cmp
cmps
xchg
cmp
pop
or
dec
inc
mov
nop
or
ret
mov
xchg
in
xor
dec
and
cmp
pop
neg
je
mov
xchg
fbld
add
push
xor
popf
enter
mov
(bad)
pusha
adc
hlt
mov
leave
mov
addr16
xor
pop
inc
stos
into
jns
and
sbb
dec
aaa
call
mov
lds
mov
jle
test
test
dec
repnz
jmp
stos
jno
xchg
sar
sbb
dec
pop
arpl
cmc
inc
jb
mov
cmp
sub
mov
retf
outs
xchg
movs
xchg
push
xchg
inc
outs
lea
out
hlt
mov
test
dec
test
imul
scas
outs
xchg
ins
dec
cwde
outs
xchg
aas
push
gs
add
and
push
shl
stos
pop
scas
clc
inc
cmps
add
mov
cli
xchg
movs
and
aad
pop
enter
cmp
cmc
leave
xchg
into
and
cwde
mov
push
je
sbb
or
cmp
movs
lea
pop
out
inc
ret
dec
scas
jl
stc
mov
cdq
repnz
ror
and
fcom
in
into
jae
aas
inc
sar
mov
and
jmp
xchg
xor
sub
mov
inc
arpl
stos
in
inc
and
fistp
test
popf
push
jae
sbb
xchg
adc
movq
cmp
pop
je
xor
repnz
dec
pop
inc
jmp
loop
push
into
sub
sbb
in
cmp
std
jns
mov
fucomip
scas
(bad)
aas
out
mov
sti
mov
out
inc
mov
outs
dec
pop
stos
imul
xchg
sbb
imul
shr
test
pop
loope
aas
stos
dec
xlat
or
shl
rcr
aaa
sar
ins
sub
repnz
and
inc
iret
dec
push
fs
mov
aas
jp
add
xlat
cmp
ror
pop
jecxz
dec
mov
mov
push
aad
jmp
mov
popf
jne
and
jmp
pop
pop
push
dec
aam
out
in
xlat
shl
in
dec
clc
xor
(bad)
(bad)
sub
push
xchg
dec
and
adc
xchg
ret
dec
es
sbb
push
inc
pop
leave
mov
out
sub
xchg
leave
inc
adc
pop
or
mov
mov
sbb
int
sbb
pop
fistp
repnz
pop
shl
out
lods
(bad)
and
mov
aam
jae
jle
stc
scas
scas
jae
pop
and
test
jl
lds
into
xor
inc
adc
sub
fild
or
or
clc
adc
mov
adc
pop
pop
mov
xchg
into
lahf
mov
mov
call
adc
sbb
push
aam
test
cmp
push
push
adc
lods
rcl
xchg
addr16
sbb
cwde
aam
add
cmp
test
mov
fmul
inc
or
arpl
pop
dec
fs
sbb
adc
xor
movs
enter
cmp
mov
dec
retf
fwait
jae
xchg
or
out
pop
stos
clc
(bad)
mov
xor
gs
mov
sub
sahf
mov
xor
jns
inc
dec
push
pop
and
fs
cwde
and
jp
outs
out
sbb
cmp
push
and
pop
push
mov
loop
outs
or
sbb
mov
fild
fild
loope
fwait
adc
cli
pop
scas
int3
sub
or
xchg
mov
div
jg
call
dec
lahf
mov
test
sbb
mov
pop
stc
cld
sub
into
and
arpl
dec
scas
bound
out
mov
iret
cmp
test
lods
loopne
and
push
je
pop
shr
sbb
into
in
jl
aas
movs
ret
adc
push
scas
out
mov
ret
shl
int3
gs
sub
adc
push
aam
sar
xchg
sub
mov
aam
cmp
dec
aas
push
bound
add
sbb
out
push
dec
outs
popf
outs
jns
ss
aaa
cwde
enter
xor
adc
pushf
call
imul
mov
and
in
dec
movs
xchg
mov
mov
sbb
cs
sbb
pop
sbb
dec
jge
es
jge
repz
jmp
mov
inc
mov
cmp
mov
jmp
mov
cmps
dec
cmp
jle
push
jo
fs
leave
mov
mov
jecxz
movs
in
cwde
dec
sbb
adc
push
(bad)
jae
rol
andps
xor
xchg
rcr
sbb
push
fcmove
jl
stos
xchg
mov
retf
out
inc
cmp
iret
pop
call
sahf
repnz
fidiv
icebp
sbb
sub
jg
in
cmp
stos
into
loopne
add
push
loopne
mov
xor
lea
jp
push
out
movs
mov
mov
jo
(bad)
cmp
fstp
inc
stos
pusha
xchg
(bad)
aaa
aam
mov
and
sbb
lock
mov
or
stos
out
rcr
pop
retf
fild
ins
xchg
mov
or
inc
test
cwde
in
dec
lods
add
shr
mov
sbb
push
jae
popa
add
jg
dec
adc
adc
frstor
out
sahf
adc
repnz
xor
pop
and
push
add
stos
out
sub
lock
push
imul
pusha
sbb
mov
out
fyl2x
xor
ret
icebp
imul
and
push
jmp
cmps
inc
cmp
xlat
hlt
enter
clc
adc
adc
cwde
stos
mov
popf
adc
mov
retf
xlat
pop
sub
mov
or
sbb
add
(bad)
(bad)
push
sub
or
inc
cwde
add
enter
sub
and
xor
adc
int
ja
loop
inc
(bad)
retf
in
int
add
xchg
sub
mov
les
iret
shl
test
lods
in
in
xchg
xor
mov
(bad)
sti
inc
mov
std
inc
cli
or
sbb
dec
push
mov
xor
shl
loope
(bad)
mov
lahf
xchg
mov
test
ds
xor
jmp
push
xor
mov
mov
pop
or
ss
test
repz
pop
and
iret
sahf
pop
or
rol
mov
iret
fimul
mov
and
data16
dec
or
mov
jle
inc
sbb
out
mov
inc
jo
(bad)
mov
(bad)
bswap
scas
or
mov
cmps
and
mov
push
nop
xchg
retf
outs
cdq
jmp
je
fist
dec
ret
xchg
xor
mov
xor
fcmovne
ror
jl
xor
call
add
call
in
rcl
push
xchg
mov
(bad)
movs
(bad)
lock
jne
sbb
scas
xor
mov
pop
jns
imul
mov
dec
les
xchg
jle
adc
fsubr
pop
push
xchg
fbld
mov
mov
popf
popa
add
movs
jo
sbb
enter
and
dec
adc
imul
or
mov
ret
jle
icebp
and
or
sbb
xchg
mov
lods
stos
and
popf
imul
mov
cwde
fdiv
stos
mov
in
or
or
std
jnp
jmp
jp
data16
int
hlt
fwait
cmp
leave
jmp
(bad)
xchg
jecxz
add
or
adc
push
fdiv
cli
test
(bad)
or
test
sub
jmp
xchg
je
adc
push
and
and
sub
mov
mov
enter
stc
ja
mov
mov
popf
xor
add
sub
add
mov
jb
pop
and
pop
sar
arpl
cmps
popf
mov
push
in
pop
int
xor
mov
loop
jg
popf
out
pop
or
xor
sbb
pop
adc
cmps
push
sbb
shl
xchg
stc
dec
sub
imul
neg
dec
and
or
cmp
pop
ret
sbb
mov
and
pop
sbb
xlat
lods
dec
retf
(bad)
sbb
jmp
sub
(bad)
jmp
in
pushf
dec
pop
cwde
sbb
mov
mov
xchg
lock
(bad)
movs
jmp
jecxz
mov
cmp
inc
scas
add
rcl
shr
cwde
adc
vaddsubpd
(bad)
pusha
lods
out
add
je
push
out
iret
jnp
dec
cmp
in
daa
xlat
add
cwde
fisttp
clc
add
push
xchg
push
imul
xor
mov
push
dec
mov
daa
cld
adc
jnp
cmp
not
ret
imul
arpl
lea
je
cmp
dec
mov
lods
popa
outs
clc
loope
mov
xlat
mov
leave
sbb
mov
rcr
dec
xchg
dec
repnz
sub
push
and
adc
fldcw
jae
inc
mov
loopne
popf
jg
push
jbe
test
test
test
add
sub
(bad)
cmp
shl
sar
cmp
in
jp
mov
outs
adc
pop
mov
xlat
jnp
add
call
mov
or
(bad)
arpl
push
add
or
adc
data16
push
jle
dec
sub
dec
dec
mov
xchg
cdq
add
and
jae
mov
xor
(bad)
mov
sub
and
cmc
mov
lahf
pop
push
scas
cli
mov
mov
xchg
mov
add
sahf
das
in
pop
pop
loope
inc
clc
and
aam
xchg
mov
ret
mov
test
cld
xor
(bad)
mov
jecxz
mov
mov
dec
inc
jmp
hlt
and
test
sub
jmp
in
je
jecxz
cmps
dec
test
and
xlat
test
jmp
sub
jne
lods
outs
cmp
pusha
sbb
push
cmps
sub
sub
shl
mov
loope
std
fdivr
or
out
scas
adc
add
arpl
jb
push
xlat
repz
mov
add
adc
mov
sub
test
(bad)
fdivr
push
jl
xor
mov
add
inc
sub
das
mov
pop
lods
jo
mov
inc
xchg
push
test
inc
jne
inc
je
jg
je
imul
fld
sbb
ss
inc
movs
fstp
ins
mov
xchg
and
ret
in
adc
outs
lods
ins
adc
jbe
das
and
xor
aad
data16
mov
pop
xor
sti
mov
jo
push
or
lahf
jmp
xchg
push
xchg
and
adc
mul
stos
cmp
add
cmp
fist
sub
ret
nop
movs
pop
(bad)
adc
cmp
add
test
mov
pop
inc
jmp
xchg
sar
imul
pop
(bad)
rcl
call
push
dec
or
popf
xor
(bad)
xchg
xor
inc
js
cmp
gs
cmp
pop
aas
pop
lods
jb
jmp
stos
iret
mov
ret
xchg
inc
mov
aas
retf
xor
outs
in
jmp
pop
popa
arpl
xchg
dec
int
sbb
aam
outs
mov
(bad)
nop
mov
cmp
lods
idiv
ja
dec
mov
or
popf
ins
cld
pop
imul
leave
add
adc
inc
movs
mov
or
dec
clc
jns
dec
inc
mov
dec
push
pop
call
icebp
imul
adc
scas
inc
xchg
movs
mov
int
jecxz
das
pusha
cmps
cwde
shl
ret
test
mov
dec
loopne
test
rol
scas
mov
cwde
loope
xchg
outs
outs
sub
shl
or
ins
or
daa
xor
xchg
xchg
lock
das
cmp
xchg
jp
out
fisubr
aad
dec
dec
xchg
push
in
int3
adc
mov
sar
xchg
data16
fnstcw
jg
xchg
jns
adc
push
lock
loop
test
sub
fdivr
adc
ja
repz
inc
lahf
and
out
ins
(bad)
sbb
(bad)
pop
inc
fld
push
test
pop
imul
adc
cmp
sti
gs
fsubr
cmp
lahf
cmp
repz
mov
and
shl
and
add
push
sub
inc
push
je
mov
popf
jo
sub
sub
jp
jg
ficomp
jae
and
fnstenv
movs
je
mov
pop
sub
ja
pop
add
cmp
or
push
jbe
test
cmc
sbb
push
std
add
mov
into
popf
add
pop
push
push
scas
add
ins
in
daa
pop
pushf
xor
add
push
cmps
out
xchg
xor
xor
push
aaa
adc
enter
sti
jg
pop
sub
es
xor
and
jmp
lds
pop
adc
dec
std
add
ss
fcomip
push
daa
push
lods
mov
push
xor
ja
sub
mov
scas
mov
aas
movs
dec
or
jns
sbb
pop
mov
imul
add
xchg
in
outs
(bad)
pop
sahf
cmps
data16
jo
cmp
jbe
out
sbb
pop
mov
sbb
pop
adc
cmp
jg
pushf
test
mov
xchg
sti
push
mov
hlt
cs
(bad)
xchg
data16
jp
dec
jg
clc
xchg
idiv
pop
js
in
mov
pop
sahf
cwde
add
inc
inc
and
cs
jle
ins
or
repz
pop
aam
loop
adc
not
mov
adc
mov
jnp
in
inc
int
mov
add
(bad)
jle
jno
adc
aas
cld
je
pop
(bad)
cmps
sub
mov
mov
adc
inc
add
or
xor
add
fdivr
and
(bad)
jo
and
jp
push
jnp
lods
jl
movs
inc
xchg
inc
mov
data16
retf
les
add
add
xchg
jnp
jae
mov
div
out
fcomp
pop
aaa
xchg
addr16
mov
inc
in
push
sar
fisttp
test
out
retf
push
push
dec
mov
mov
fld
fs
pop
xchg
out
jne
jp
adc
jle
mov
cmp
in
ja
fdiv
js
aaa
xor
jno
cwde
inc
sbb
xchg
rcr
adc
pop
ret
in
cmp
adc
sbb
pop
loope
cmp
adc
xchg
push
arpl
jnp
sub
fcomp
jl
and
xor
push
mov
sbb
test
daa
cmp
in
or
pop
push
jp
add
push
test
or
jbe
fmul
test
mov
imul
pop
mov
jg
dec
movs
mov
sahf
sahf
lock
sbb
pop
rol
(bad)
xor
adc
adc
cmp
mov
std
or
pusha
sub
or
ja
dec
fnstsw
out
xchg
inc
cmp
(bad)
leave
mov
out
inc
sbb
adc
xchg
mov
icebp
movs
movs
xchg
rol
and
jmp
outs
mov
inc
xchg
mov
xchg
inc
adc
ss
mov
outs
ins
xor
sar
pop
in
sbb
ret
xchg
cs
mov
loopne
mov
mov
cmp
mov
ret
push
cmp
xchg
xchg
and
iret
adc
shl
mov
sbb
and
ins
ins
fstp
adc
into
mov
iret
call
push
xchg
cmp
int
jg
add
jmp
inc
outs
mov
daa
jns
or
repz
inc
pop
imul
adc
sbb
pop
pop
xlat
mov
inc
add
(bad)
in
stos
test
mov
or
mov
mov
xor
sbb
xlat
pusha
call
outs
test
or
test
sub
cmp
jmp
lods
(bad)
arpl
mov
loop
or
bound
or
popf
nop
int
rol
cmps
jl
daa
xchg
retf
pop
dec
je
mov
jmp
jae
jb
or
add
jns
add
fdivr
ins
(bad)
(bad)
sbb
test
imul
ror
mov
mov
movs
inc
push
sub
ror
(bad)
jecxz
push
or
push
jnp
xchg
icebp
imul
shr
ret
pop
mov
stos
cdq
stos
je
pop
fcomp
pop
not
(bad)
fwait
inc
xchg
push
lds
scas
mov
mov
(bad)
mov
or
mov
inc
fs
dec
ret
xor
ror
push
es
dec
mov
(bad)
sahf
fsub
or
(bad)
(bad)
loopne
push
pop
sbb
ret
and
imul
xor
and
sub
xor
mov
push
addr16
in
push
clc
in
(bad)
shl
cmp
retw
in
jbe
shl
fld
add
test
xchg
cmps
pop
xor
jmp
mov
sub
(bad)
fadd
ss
jne
fbld
push
push
rcl
jne
ret
or
daa
ret
fs
scas
dec
rcl
call
sub
pop
call
scas
cmp
jo
push
mov
sti
movs
retf
les
out
ss
inc
(bad)
out
pop
sti
(bad)
shl
(bad)
push
add
pop
mov
shl
or
dec
or
xor
or
and
xchg
in
mov
add
(bad)
adc
push
out
pop
ins
mov
mov
fisttp
mov
loopne
pop
pop
xchg
pop
xor
mov
imul
add
test
pusha
mov
xlat
mov
hlt
rol
mov
jbe
out
loop
push
sar
mov
or
jp
jle
jae
ror
sbb
das
icebp
push
ds
xor
and
sti
out
popf
stos
fwait
inc
aas
or
add
mov
add
jmp
xchg
arpl
jl
out
inc
sub
jnp
aam
bound
and
scas
xchg
add
mov
(bad)
dec
xchg
cmps
cmps
mov
nop
mov
outs
add
xchg
cmp
pop
pop
inc
mov
push
mov
addr16
inc
scas
cwde
(bad)
xor
icebp
mov
push
xchg
es
pop
push
cld
test
cmp
sahf
pop
(bad)
jae
mov
fcmovbe
call
jne
sub
cmc
mov
out
adc
xchg
jmp
sub
dec
inc
and
stc
push
mov
mov
sbb
push
sub
cmc
(bad)
mov
xor
jge
push
ja
ror
and
xor
push
xor
out
sub
sub
fsubr
mov
adc
dec
test
(bad)
call
dec
sub
jmp
div
data16
cmps
push
jmp
les
out
lods
bound
jecxz
out
mov
and
jno
test
repz
imul
jge
dec
xchg
push
push
jle
inc
push
xchg
cmp
retf
(bad)
lds
fucomi
jecxz
jg
test
mov
and
sub
fadd
fiadd
jg
sahf
out
test
ins
jns
fwait
cmps
(bad)
out
mov
pop
jmp
jne
push
arpl
jae
xor
pusha
adc
and
adc
sub
in
mov
shr
xchg
xlat
loope
aaa
sub
mov
mov
dec
test
or
fidivr
xchg
in
js
dec
push
cmc
and
idiv
inc
add
and
mov
in
or
ins
cmp
les
inc
aam
push
mov
ins
xchg
jmp
jecxz
mov
call
pop
out
in
cmps
adc
mov
cwde
push
(bad)
pushf
stc
icebp
sub
xor
jmp
mov
repnz
mov
out
xor
cdq
test
sub
push
pop
jbe
sub
push
push
enter
mov
mov
scas
clc
arpl
sbb
jmp
ror
and
xchg
fisttp
ins
cmps
or
dec
sub
retf
(bad)
adc
into
fincstp
jbe
sub
gs
loope
or
and
lahf
inc
std
stos
and
or
in
(bad)
and
jp
add
jns
dec
movs
or
xchg
rol
loope
aam
sbb
sti
aad
adc
xor
push
inc
stc
and
movs
pop
xor
mov
inc
xor
dec
adc
int
pop
(bad)
ins
or
js
dec
test
pop
inc
mov
repz
and
stos
sbb
xchg
jge
xchg
mov
xor
inc
inc
pop
ror
cmp
push
pop
and
dec
cmps
sub
sahf
into
call
jl
jg
and
pop
das
mov
shr
xor
mov
push
push
int
adc
mov
(bad)
das
adc
jmp
sbb
or
ror
pop
cmp
addr16
lea
or
out
fstp
aad
mov
cmp
pop
iret
sbb
lock
xor
test
xchg
xchg
jno
pop
dec
push
inc
mov
fwait
lahf
and
pushf
fidivr
stos
(bad)
in
adc
retf
xor
das
jmp
xor
pushf
imul
xor
sar
push
test
outs
mov
inc
bound
hlt
sub
cmc
push
mov
(bad)
out
fmul
cmc
(bad)
repnz
pop
in
shl
inc
outs
inc
cmp
dec
jge
inc
popa
or
jecxz
js
and
cli
pop
neg
stos
add
ss
pop
jnp
repz
ja
mov
sbb
sub
aas
dec
fs
push
sbb
mov
xchg
jmp
push
xchg
aam
fs
mov
(bad)
imul
repnz
sbb
cli
sub
in
mov
sub
dec
sti
jp
add
dec
and
mov
(bad)
shl
mov
mov
and
fisubr
cmp
aad
rcr
mov
fwait
cwde
add
xor
add
aaa
hlt
or
je
mov
xor
fistp
ins
sbb
js
add
mov
push
xchg
add
xchg
push
jl
adc
or
xchg
(bad)
jbe
aas
retf
(bad)
sahf
xor
sbb
(bad)
xlat
or
and
mov
cmps
mov
call
arpl
nop
pop
push
pop
stos
pop
mov
mov
xchg
lods
mov
mov
fs
xchg
aas
mov
fst
mov
cli
adc
mov
mov
fadd
mov
jl
xchg
inc
into
xor
inc
cmc
xor
xchg
pop
xchg
aam
xor
xchg
or
dec
pop
xlat
mov
outs
ja
(bad)
mov
fld
mov
sub
js
xchg
mov
sti
cmp
fs
pop
ret
push
out
mov
pop
je
xor
push
icebp
xchg
loopne
inc
add
mov
jg
sbb
div
int3
inc
mov
xor
nop
xchg
sub
cmp
jl
fsubr
movs
lds
je
xor
loopne
xor
stc
sar
div
sbb
ss
push
in
sbb
jbe
pop
sbb
mov
cli
cwde
mov
and
jmp
and
cs
mov
pop
sahf
mov
mov
push
rdmsr
fwait
hlt
sbb
sbb
sub
jno
push
(bad)
ins
xchg
sahf
(bad)
aaa
cmp
cdq
rcr
rol
sub
cmp
adc
imul
in
sbb
cli
jb
add
jmp
push
mov
jae
mov
call
out
pop
ds
xor
mov
(bad)
repnz
and
sahf
lea
out
es
sub
sar
push
movs
pop
rol
mov
add
stos
sub
sbb
inc
movs
(bad)
out
jnp
dec
(bad)
jnp
mov
pop
pop
or
jmp
cmps
sub
std
mov
ror
xor
nop
hlt
jnp
ret
jmp
jmp
adc
sub
sub
jnp
ja
stc
push
pusha
ret
xor
test
in
cmp
in
leave
imul
xchg
jmp
sbb
hlt
imul
aaa
pop
sub
test
sub
je
mov
mov
cmp
push
dec
(bad)
sub
mov
into
cmp
or
jno
pop
cs
imul
ret
les
mov
sub
or
and
push
push
or
idiv
push
bound
adc
fwait
jnp
xchg
sbb
loopne
movs
jmp
fidivr
cmp
ret
xor
sub
mov
push
sbb
leave
and
pusha
and
ror
es
int
cmp
inc
pop
aad
aaa
jmp
int
lds
and
xchg
ds
(bad)
or
paddusb
sub
cmp
mov
lahf
movs
cwde
mov
jnp
or
imul
push
jg
push
jne
lods
jne
mov
ja
fwait
inc
jmp
sbb
(bad)
fsub
inc
fisttp
cs
fadd
fisub
add
jnp
cmp
scas
sbb
inc
lahf
idiv
pop
mov
rcr
fnstcw
mov
arpl
xchg
or
in
icebp
sbb
inc
mov
mov
sub
enter
scas
cmc
mov
sub
pop
test
loop
dec
cld
mov
repnz
xchg
jb
clc
ret
scas
xchg
cmp
repz
adc
push
pop
stos
int
jp
inc
mov
ret
mov
ret
xlat
sbb
xchg
aas
int3
push
or
xor
std
test
push
sbb
fwait
(bad)
lock
jns
adc
arpl
dec
mov
ficom
popa
jmp
je
lods
inc
and
xchg
mov
rcr
stc
outs
cmp
fcom
ins
(bad)
stc
jns
jnp
mov
popa
mov
mov
daa
push
or
jbe
dec
pop
shl
lods
xor
push
mov
dec
add
inc
daa
lods
loop
fwait
sub
add
pop
mov
cld
xlat
fwait
aaa
cmp
adc
mov
js
mov
jno
daa
das
nop
aad
retf
pop
imul
mov
repnz
mov
cwde
pop
addr16
mov
add
pop
fild
inc
or
or
pop
test
jecxz
or
arpl
int
fistp
rcr
xchg
pop
call
push
dec
sub
jb
int
je
out
jb
pop
nop
cmp
jo
pop
cmp
loope
xchg
mov
inc
sub
stc
test
sahf
or
mov
imul
clc
fwait
sbb
sbb
dec
inc
push
outs
xchg
or
in
push
xchg
jne
sbb
bound
push
daa
push
fnstsw
dec
sar
dec
inc
pushf
sbb
mov
(bad)
jns
call
or
xor
pop
jo
int
stos
sbb
push
not
scas
aam
pop
data16
xchg
pop
push
lahf
mov
xchg
and
es
add
out
ds
dec
jnp
cs
stc
test
sbb
add
jo
push
shl
sub
vpshad
cmps
aaa
test
pushw
sbb
mov
cmp
sbb
mov
mov
dec
mov
xchg
test
push
jno
mov
push
fucomip
xor
xor
outs
movs
inc
jnp
inc
xchg
popa
mov
mov
nop
adc
mov
fs
pusha
scas
in
mov
inc
fmul
in
fs
and
pop
xrelease
add
rcr
jle
jns
push
pop
sub
pop
mov
fisttp
cmps
fsubr
add
and
sahf
(bad)
aam
inc
cmps
pop
pop
lods
fild
in
stos
cdq
test
adc
jg
sbb
loope
loope
out
call
out
lods
push
sbb
aam
lock
int
scas
lods
push
pop
mov
shr
inc
stos
scas
pop
(bad)
cmps
cmp
mul
pop
and
scas
or
sbb
shr
dec
xor
push
daa
xlat
mov
retf
inc
enter
call
dec
add
ret
xlat
dec
out
clc
out
xchg
push
and
add
(bad)
and
imul
std
xchg
jbe
dec
dec
sub
xchg
mov
shl
mov
dec
add
je
dec
ins
xchg
push
mov
add
dec
pop
xchg
cwde
adc
push
in
bound
push
push
and
(bad)
aam
cmp
nop
loopne
push
test
push
push
xor
xor
stc
icebp
shl
push
es
int3
push
int3
out
push
cmp
outs
jb
cmc
rcl
adc
(bad)
in
mov
and
mov
or
pushw
rcl
dec
fdivrp
ins
stos
xor
sbb
ja
xchg
out
add
jns
mov
mov
loopne
je
in
xchg
sbb
push
ins
xchg
std
jbe
jl
dec
xchg
or
jae
ret
and
and
jns
push
(bad)
call
and
fstp
dec
pusha
sbb
sbb
sub
cmp
clc
sub
adc
pushf
shl
mov
stc
fwait
cmc
shl
jnp
and
dec
lods
in
(bad)
das
sbb
aas
leave
in
push
mov
test
arpl
call
cmc
pop
add
(bad)
std
cmp
int3
jecxz
xor
push
adc
aas
jno
loop
push
sub
out
push
test
aas
sti
mov
jl
jno
je
dec
retf
mov
mov
inc
sbb
pop
jl
rcl
add
push
push
cmp
popa
dec
mov
adc
cld
jl
mov
sub
pop
add
stos
lahf
sbb
inc
aas
add
sbb
sbb
call
int
or
sub
jg
out
mov
sub
out
aam
mov
rol
fldcw
inc
pop
test
es
or
pusha
mov
sub
scas
(bad)
fadd
xchg
pop
mov
dec
neg
or
push
lods
xchg
jg
add
mov
gs
stos
ret
sub
inc
push
call
xchg
or
(bad)
push
(bad)
stos
or
xor
rol
sub
xchg
popf
or
arpl
jle
sbb
mov
push
mov
or
add
test
int3
sub
jb
mov
adc
cmp
out
fild
rol
lahf
dec
retf
push
imul
and
call
out
mov
lods
and
mov
cmc
lock
push
rcr
data16
sub
test
(bad)
mov
pop
jb
es
xchg
cmp
(bad)
out
or
push
push
add
xor
pop
scas
push
inc
inc
ret
dec
retf
ret
push
jmp
test
dec
stos
jno
dec
xlat
in
mov
dec
pop
in
adc
cs
xor
in
stos
inc
stos
pop
popf
cmps
jo
push
(bad)
mov
sti
test
stos
rcl
add
ins
sub
ror
rcl
sub
jb
test
xor
sbb
xor
mov
push
inc
inc
dec
mov
iret
xchg
xchg
inc
jno
pusha
push
sbb
or
movs
mov
mov
sub
dec
ror
or
add
into
fisttp
dec
and
int
fisubr
dec
imul
xlat
sub
sti
pusha
push
push
fist
push
jmp
scas
out
mov
subps
mov
push
bound
jns
mov
ins
hlt
add
out
adc
mov
cdq
repz
(bad)
mov
mov
sbb
aam
adc
or
push
ret
mov
ffreep
sub
fldenv
call
outs
mov
sub
out
iret
lods
sbb
mov
add
icebp
pop
aad
mov
sub
loop
bound
retf
sti
arpl
xor
loop
push
loop
rcl
iret
ret
dec
mov
dec
sbb
jge
sti
mov
icebp
pop
movs
xor
out
cmp
push
in
repz
mov
jnp
mov
ins
fcomp
inc
(bad)
test
adc
retf
fcmovbe
add
enter
push
and
sub
jle
xor
add
or
int
movs
retf
movs
sbb
test
push
inc
jno
sbb
xchg
pop
ja
cmp
xchg
mov
stos
xchg
fmul
stos
adc
jp
jle
xor
nop
jnp
xchg
iret
call
sub
sub
test
call
sub
neg
(bad)
cdq
cmps
dec
popf
sub
mov
pop
fisttp
(bad)
xor
dec
movs
cs
mov
add
(bad)
push
movs
and
mov
mov
imul
fbld
std
jne
dec
inc
pushf
mov
dec
(bad)
xchg
popf
ja
add
sbb
adc
in
sbb
(bad)
aam
ret
pop
fsub
ins
mov
mov
add
jmp
in
pop
ins
movs
jo
mov
lock
sub
out
xchg
xlat
add
jb
shr
pop
dec
lahf
lods
es
repz
push
sbb
leave
(bad)
fisubr
inc
sbb
mov
add
repz
sar
stos
xor
push
es
out
call
xchg
popf
fld
sub
stc
mov
xchg
inc
mov
jns
dec
push
repz
jp
bound
jno
ins
movs
scas
inc
or
sub
fs
sbb
jecxz
mov
add
mov
xchg
pop
dec
add
js
fisttp
add
push
add
inc
dec
fcmovb
fst
rol
dec
sub
clc
stc
daa
pop
push
mov
nop
mov
stc
xchg
push
imul
call
and
dec
loop
loopne
out
test
push
xchg
test
out
iret
and
xor
push
adc
imul
pop
loopne
or
add
les
jne
mov
jecxz
push
or
add
sub
out
inc
xchg
and
imul
mov
mov
ins
hlt
or
jo
iret
mov
and
daa
stos
push
das
cmp
mov
or
push
je
out
movs
jmp
dec
or
adc
sub
(bad)
mov
xor
mov
cmp
inc
ds
jbe
jg
push
fwait
cli
dec
cld
mov
and
js
xor
cld
pop
inc
bound
lds
mov
mov
sbb
add
push
and
shr
test
jno
xchg
aaa
xor
stos
mov
xlat
push
xor
lock
push
mov
arpl
add
push
inc
not
cmp
cmp
xchg
repnz
sahf
aam
mov
retf
movs
cmp
cmp
sbb
mov
in
mov
shr
adc
sbb
push
cmp
jmp
aam
jp
retf
fisubr
mov
aam
push
icebp
js
(bad)
dec
jp
pop
in
stos
xor
sub
movs
aad
add
mov
dec
jno
aaa
enter
mov
and
sbb
pop
xchg
frstor
hlt
out
cli
mov
inc
test
in
pushf
mov
sub
and
jno
adc
aam
das
push
sub
xchg
fmul
xor
push
call
sub
loop
sbb
aaa
cmp
(bad)
cdq
mov
mov
push
and
lea
pop
sub
sub
jg
xchg
mov
inc
mov
adc
std
push
(bad)
rcr
jbe
xchg
popf
cmps
sbb
addr16
jle
xor
sbb
mov
cmp
lea
jmp
xchg
jo
sbb
mov
fmul
sbb
pop
xor
mov
clc
fisttp
or
mov
jg
push
mov
int3
cli
mov
sub
outs
mov
(bad)
jns
cmp
adc
sbb
cmps
pop
mov
inc
sahf
xchg
call
cmps
xchg
and
inc
inc
push
xor
in
dec
scas
hlt
stos
fwait
adc
pushf
jle
jmp
mov
dec
cmp
(bad)
sbb
adc
mov
icebp
popf
push
inc
xchg
cmc
sub
ficom
inc
xchg
jg
pushf
mov
push
popa
jmp
lock
pop
xchg
test
iret
int
ror
gs
mov
ss
lods
(bad)
mov
test
aas
lock
(bad)
int
add
stc
loope
or
mov
or
xchg
and
mov
in
fwait
push
rcr
pop
test
add
jmp
out
icebp
push
xor
jno
cs
(bad)
jge
mov
or
and
push
mov
mov
(bad)
jno
frstor
gs
push
push
adc
lahf
hlt
add
push
inc
hlt
out
push
ja
loop
stos
cmp
push
pushf
ffree
mov
fld
ret
enter
cs
dec
push
sbb
fidiv
add
push
or
loop
scas
dec
fst
pop
aaa
movs
fstp
push
popf
jp
add
or
mov
ret
or
ja
clc
or
and
push
jno
add
(bad)
inc
add
adc
and
adc
ja
(bad)
in
repz
xor
sbb
xor
jg
xchg
inc
sbb
sbb
mov
outs
scas
lea
retf
mov
sub
scas
mov
jg
gs
stos
out
mov
xor
scas
scas
adc
cmp
cmp
cmp
inc
fadd
(bad)
hlt
dec
fsubr
neg
jmp
div
mov
test
sbb
xlat
pop
cmp
jl
gs
out
into
ds
out
add
jmp
fsubr
popa
aad
push
xor
rol
and
cmp
sbb
lods
pop
sbb
dec
cmps
or
leave
in
repnz
cmp
push
push
dec
jge
cmp
sub
rcl
pop
inc
mov
daa
mov
mov
es
xchg
out
pop
pop
sub
lds
mov
mov
cmp
or
lods
and
(bad)
out
out
inc
loope
cmp
add
out
pop
mov
or
push
cmp
cli
in
sbb
bound
ret
sbb
outs
cs
mov
retf
jl
xlat
xchg
push
stos
hlt
clc
inc
dec
cld
into
adc
sub
jbe
jle
xchg
push
fcom
cld
dec
jmp
mov
pop
inc
mov
out
or
ds
popf
adc
mov
aas
sbb
addr16
dec
mov
mov
repnz
into
inc
imul
pop
scas
dec
ficom
cmps
imul
inc
or
xor
sbb
xchg
mov
das
push
in
mov
jno
mov
iret
pop
xchg
bound
sahf
cmp
jmp
and
mov
daa
dec
data16
jo
aas
or
test
test
das
push
pop
rcl
aad
dec
dec
sbb
in
dec
jge
mov
cmp
cmc
loop
push
sbb
pop
sahf
and
push
xor
push
rcr
pop
aad
retf
pop
pop
dec
jmp
and
dec
jne
jmp
cmc
(bad)
pushf
xchg
add
sahf
loop
or
dec
jmp
dec
inc
mov
cmc
mov
cmp
nop
adc
shl
or
jno
and
push
mov
(bad)
ins
scas
call
rcr
ins
mov
xor
fdiv
push
lods
int3
loop
mov
out
inc
cmp
sub
or
mov
mov
sub
push
sub
mov
pop
outs
pop
lahf
and
popf
mov
or
in
repz
cmc
je
ror
jge
(bad)
popa
add
add
add
sbb
pop
hlt
imul
push
mov
cmp
ins
movs
cmp
mov
mov
sbb
idiv
pop
push
xor
lods
lods
add
sub
call
(bad)
cmp
(bad)
inc
retf
fbld
adc
nop
iret
lods
dec
jb
pop
fwait
pop
cmps
(bad)
jl
test
xchg
mov
dec
js
clc
pop
adc
or
mov
aad
mov
test
push
jmp
in
rcl
loope
pop
jmp
aas
sub
idiv
mov
aam
sbb
jp
pop
add
repnz
mov
sti
push
lods
mov
cdq
xchg
scas
jmp
pop
mov
aas
and
sbb
cmc
and
mov
or
pop
sub
or
pushf
ret
aaa
sbb
mov
les
pop
and
or
out
mov
xchg
cmp
test
sbb
mov
cli
(bad)
ins
cld
pop
xchg
cli
es
cmc
jae
jg
cmp
sbb
rcl
leave
dec
jle
add
fdiv
xor
pop
nop
scas
mov
mov
out
inc
mov
lahf
sub
out
rcl
mov
jge
rcr
in
xchg
or
ins
sbb
jne
mov
into
inc
fs
jno
imul
enter
sub
in
dec
mov
mov
or
mov
jne
cld
cmp
scas
push
sub
(bad)
mov
mov
mov
and
jmp
pop
imul
mov
dec
scas
out
sub
js
push
adc
dec
xchg
sbb
adc
mov
jb
sbb
inc
sti
cmp
lahf
pop
mov
add
adc
sub
jecxz
jmp
out
outs
mov
lods
test
push
loopne
fidivr
sub
or
gs
arpl
sub
imul
mov
loope
jb
pop
push
shl
lock
push
inc
popa
mov
sub
fist
mov
sub
aad
add
xchg
pop
ins
mov
pop
sub
mov
sub
loope
dec
popf
mul
mov
test
ret
fild
mov
ja
mov
mov
mov
mov
xor
push
and
cmp
popf
fmul
pop
aam
add
xor
jle
xor
mov
icebp
scas
rcr
daa
shl
fsub
mov
xor
mov
scas
mov
mov
ds
pop
test
rcr
adc
ins
push
popa
test
add
stos
popa
(bad)
enter
ins
and
pop
shr
and
mov
dec
inc
jg
mov
outs
(bad)
xchg
fnstenv
not
aas
mov
loop
sub
iret
push
addr16
jge
push
push
adc
(bad)
sbb
push
push
outs
adc
inc
inc
sub
xor
bsf
or
gs
xchg
je
xchg
fcom
ds
pushf
mov
jbe
adc
sub
out
or
gs
jns
lds
mov
stc
adc
rol
push
jns
xlat
outs
les
pushf
mov
jb
neg
sub
jae
mov
rcr
sbb
cmc
or
movs
aas
jl
je
icebp
cli
jmp
adc
stc
mov
out
adc
and
cdq
pop
jge
nop
stos
push
sub
pop
fnsave
outs
push
js
xchg
(bad)
or
in
ret
cld
push
sbb
mov
(bad)
adc
pop
out
push
xlat
div
loope
fist
mov
addr16
sub
inc
cmp
push
adc
and
clc
leave
push
lds
nop
inc
stc
test
jl
push
push
and
mov
mov
sub
mov
ret
pop
xor
adc
xor
outs
add
jecxz
in
adc
cmps
inc
xchg
inc
jno
dec
mov
mov
jecxz
xor
sahf
popf
and
inc
fisubr
test
out
idiv
in
push
call
das
jo
jo
scas
clc
pop
js
xchg
sub
inc
or
inc
and
addr16
xor
mov
xor
ficom
jbe
add
(bad)
frstor
bound
mov
(bad)
repnz
(bad)
les
cmc
icebp
mov
xchg
sbb
jecxz
bnd
push
or
je
push
scas
stos
or
inc
ror
aaa
add
adc
jge
xor
jo
adc
mov
das
cmp
cmps
ja
std
pushf
push
nop
dec
mov
cmc
jne
cmp
xchg
mov
(bad)
ret
setle
call
das
rcr
pop
repz
jbe
es
jmp
sbb
leave
cvttps2pi
js
pop
mov
cmp
mov
adc
fdivp
dec
pusha
mov
imul
syscall
mov
(bad)
jge
add
jne
fcom
dec
inc
cwde
repnz
(bad)
mov
add
into
push
or
xchg
mov
shl
popf
icebp
mov
test
pop
lock
jno
fist
shl
mov
stc
add
ret
ror
jge
mov
fdiv
push
pop
ins
xchg
fbld
mov
(bad)
(bad)
iret
lea
ins
inc
popa
add
outs
fisubr
out
mov
push
repnz
data16
push
in
cwde
mov
push
xchg
repz
popf
scas
push
sub
(bad)
in
rol
jo
sub
pop
sbb
inc
retf
pop
cmp
into
enter
push
arpl
jg
mov
ror
sbb
js
add
jb
icebp
and
scas
inc
push
push
aad
out
push
mov
sbb
push
das
and
cmp
pop
jns
ret
jmp
adc
ja
ins
add
mov
mov
shl
mov
or
ins
rol
inc
imul
pop
sar
mov
jo
dec
bnd
add
add
aad
or
pop
out
sbb
int
and
xchg
into
push
dec
mov
ffreep
push
ins
repz
stos
sub
shl
adc
imul
daa
mov
(bad)
inc
shl
or
pushf
inc
popf
cmovp
or
retf
push
xchg
das
daa
scas
xchg
clc
or
push
das
inc
dec
xlat
(bad)
adc
sar
clc
cmp
pop
inc
mov
fmul
adc
ret
test
cdq
xchg
in
sbb
or
inc
jnp
adc
test
lahf
jp
les
push
sub
retf
push
cmp
lock
jmp
jne
retf
mov
aas
xor
retf
(bad)
mov
aas
cmp
push
jbe
add
and
imul
dec
scas
repnz
adc
mov
not
dec
lds
in
mov
loope
and
inc
enter
popf
push
pop
mov
das
or
hlt
movs
add
sbb
sbb
jl
scas
inc
outs
mov
lods
pop
test
movs
jg
adc
add
pop
jo
push
mov
xor
lds
or
inc
mov
pop
mov
xor
dec
sbb
mov
hlt
jmp
mov
sub
jl
pop
call
sub
(bad)
jbe
fst
test
or
jl
repz
stc
gs
bound
mov
dec
cmp
mov
push
(bad)
cmc
jl
leave
push
test
call
jge
mov
jecxz
xchg
inc
jg
int
xor
outs
xchg
push
jmp
xchg
imul
mov
std
mul
imul
loope
add
lea
lods
test
xchg
mov
cmc
outs
pusha
push
movs
gs
jecxz
test
add
test
outs
and
dec
pop
in
call
les
int
mov
stc
hlt
cmp
pop
mov
lods
(bad)
cdq
scas
cld
or
cdq
xor
jecxz
push
mov
and
arpl
sbb
ret
call
stos
and
into
xchg
scas
cmc
imul
xor
sti
lds
cli
add
movs
push
pop
xor
dec
fnstenv
cmp
ins
dec
jo
mov
dec
imul
push
(bad)
in
pop
xor
push
jmp
aas
push
and
loope
popf
inc
mov
cmp
inc
fdiv
adc
mov
sub
popf
add
cmp
fsub
pop
test
xor
cld
popa
add
sub
sbb
daa
add
lock
call
mov
add
ja
xor
and
inc
les
jge
jle
pop
push
push
test
(bad)
jmp
test
xor
sbb
in
xor
popf
test
jns
outs
ins
sub
push
inc
dec
aam
push
push
jmp
test
add
mov
data16
and
xchg
(bad)
cmp
push
or
(bad)
out
gs
push
shl
jle
cmp
xchg
iret
pop
call
cmps
adc
pushf
mov
ss
call
jmp
(bad)
aad
push
and
inc
test
cmp
js
push
jne
mov
into
jp
pop
cmp
maskmovq
neg
inc
out
xor
add
into
cmp
pop
mov
std
add
xor
ins
cmps
cmp
icebp
mov
mov
push
nop
hlt
into
ins
push
fwait
jle
mov
pop
dec
mov
jo
dec
sub
or
movs
mov
std
popa
call
adc
shr
cld
dec
sahf
shl
rcl
jl
js
(bad)
inc
aas
rcr
mov
(bad)
arpl
cmc
jl
jo
and
jb
sbb
xor
jmpw
mov
dec
dec
cmps
imul
push
pop
pop
movs
int3
not
scas
mov
ret
pop
leave
dec
ins
idiv
(bad)
sbb
ds
xor
pushf
adc
(bad)
pop
sbb
je
push
add
mov
inc
cld
mov
or
mov
pop
rcr
push
iret
es
xor
xlat
jne
jbe
retf
inc
adc
xchg
arpl
mov
mov
mov
jg
cmp
icebp
dec
int3
push
cmp
gs
cmp
out
mov
dec
cwde
push
inc
mov
mov
fs
xlat
cmps
or
jg
mov
jnp
mov
inc
out
xchg
rcr
loop
jp
mov
(bad)
imul
clc
das
jecxz
sti
cs
scas
mov
jnp
hlt
mov
out
adc
xor
call
xchg
jl
or
ins
pop
popf
fs
sbb
sahf
das
inc
mov
test
mov
mov
test
xor
jae
nop
daa
push
or
jne
adc
adc
mov
out
xlat
sub
ret
add
ret
cmps
push
test
ret
or
dec
les
aaa
mov
sbb
add
cmc
mov
inc
outs
int
and
add
cmp
inc
jg
xlat
sub
or
(bad)
pop
(bad)
xchg
frstor
pop
jg
jbe
xor
push
inc
lock
push
xor
push
mov
adc
pop
mov
data16
mov
push
fldcw
add
sbb
and
pop
push
inc
mov
adc
lds
dec
repnz
pop
inc
movs
sahf
ins
aaa
rcr
mov
(bad)
mov
push
adc
aad
scas
cmp
sbb
add
push
std
mov
jg
ret
test
cli
adc
int3
outs
shl
mov
sub
xlat
outs
pop
or
sbb
loopne
xor
ret
xor
cmps
das
outs
(bad)
je
stos
inc
jno
push
pop
dec
inc
pushf
jbe
adc
inc
push
xchg
xchg
ins
dec
mov
out
ds
aam
xor
out
add
jl
and
mov
sti
ins
cmps
outs
fisttp
mov
sahf
icebp
cmp
ret
fdiv
sub
xchg
and
cli
jg
ret
and
sbb
mov
lock
mov
xlat
adc
pushf
add
push
icebp
mov
loop
mov
pop
test
mov
push
lock
xor
inc
xor
(bad)
call
cmp
mov
mov
cli
mov
leave
lds
xchg
add
mov
les
inc
cdq
push
cmp
fld
sti
mov
adc
push
and
sbb
xchg
and
inc
mov
out
wrmsr
sbb
lahf
add
fisubr
push
(bad)
dec
mov
pop
push
jnp
cmp
loopne
test
enter
(bad)
je
mov
pop
aad
or
adc
mov
pusha
jb
bound
jmp
fcom
push
pusha
pop
sub
cmp
inc
and
xor
add
das
cmp
fstp
lock
je
xchg
fisttp
xchg
cs
sub
test
dec
fldcw
stos
cmp
in
push
lods
mov
out
and
inc
jl
popf
cmp
std
(bad)
jae
fsub
int3
pop
scas
pusha
jno
sub
mov
inc
inc
pop
adc
mov
imul
push
xchg
jae
xor
sub
add
push
(bad)
mov
sbb
adc
and
xchg
aaa
inc
sub
adc
push
xchg
in
xor
xchg
pop
mov
dec
in
enter
xchg
add
inc
jp
xchg
sub
mov
lock
cmp
(bad)
mov
mov
jno
les
dec
and
ds
(bad)
into
jae
leave
xchg
jno
jle
stc
sub
test
jle
sub
mov
rcr
or
xchg
mov
jo
push
dec
mov
ret
shr
ret
push
push
cs
call
adc
sub
stos
retf
adc
sar
out
retf
leave
les
push
lock
xchg
and
nop
fnstsw
test
adc
stc
jle
popa
jge
jge
dec
in
cmps
enter
push
pop
(bad)
adc
daa
ret
mov
pusha
jae
lea
cdq
xchg
test
shl
movd
xor
out
enter
pop
push
sbb
adc
ins
pop
jmp
aad
jge
out
rol
mov
loop
test
ror
cmp
xchg
jp
aas
xchg
sbb
arpl
enter
add
out
pop
jg
push
add
add
repz
add
cmps
sub
mov
xor
jl
and
push
sbb
sub
mov
in
arpl
call
mov
push
mov
std
dec
popa
xchg
jecxz
add
scas
sub
aam
cmp
mov
mul
repz
or
rol
xchg
jmp
lea
push
sti
shl
add
adc
ja
sub
pop
and
mov
xchg
pushf
pusha
addr16
enter
add
and
js
movs
imul
inc
addr16
mov
xor
or
or
dec
mov
popf
rcr
mov
stos
lahf
mov
int3
popf
ins
mov
jnp
cmp
inc
sar
dec
pop
inc
das
aaa
pop
and
jp
adc
xchg
and
call
shr
inc
xlat
test
mov
xchg
dec
xchg
mov
push
fnstenv
(bad)
les
adc
outs
stc
jge
cwde
jnp
rcl
push
js
sbb
push
mov
push
out
lods
and
hlt
adc
not
mov
out
jae
and
loopne
test
inc
in
rol
aaa
rcl
mov
and
rcl
push
mov
int3
int3
pop
sbb
pushf
cs
mov
xor
mov
or
adc
dec
sub
and
and
mov
add
into
call
dec
imul
mov
ficomp
and
(bad)
sub
pop
mov
add
and
mov
(bad)
push
aam
push
fiadd
mov
or
icebp
or
xor
call
jae
mov
mov
and
lea
nop
inc
add
pop
mov
adc
pop
xchg
pusha
jbe
int
pusha
in
dec
in
imul
xchg
iret
adc
lea
movs
pop
cmp
imul
push
sub
mov
or
xchg
addr16
jmp
mov
call
and
adc
push
pop
lds
dec
xor
mov
cs
in
(bad)
mov
sbb
jl
push
push
mov
cmps
or
sbb
or
ins
stc
sub
fcmovnu
cmps
and
mov
idiv
jns
cmp
pusha
pop
dec
mov
retf
or
add
ret
push
pop
gs
push
sahf
arpl
sbb
out
pusha
sti
(bad)
xor
je
test
enter
shl
data16
mov
push
aaa
test
xor
adc
aad
loope
or
xor
movs
fisttp
add
cmc
mov
aaa
mov
inc
dec
sub
fcmovu
cmps
inc
inc
dec
call
jle
stos
pushf
jnp
ret
xchg
and
push
(bad)
mov
jg
retf
sti
xchg
mov
jo
inc
cmp
dec
lahf
cmp
dec
fdivr
sbb
cmp
cmp
(bad)
gs
in
mov
sbb
out
jge
movs
and
jmp
arpl
and
adc
sub
push
dec
inc
shl
add
sar
mov
ja
ins
adc
cmp
hlt
cmp
inc
sbb
mov
inc
push
bnd
je
stc
adc
outs
test
jno
mov
pop
mov
in
repz
cmp
bound
loop
pushf
inc
call
fisubr
jno
les
out
and
add
jne
xor
sbb
jae
aaa
gs
leave
pop
mov
xchg
std
shl
xor
mov
sar
lds
hlt
mov
adc
add
stos
sub
sbb
(bad)
mov
neg
ins
data16
call
adc
movs
sbb
pop
inc
stos
inc
(bad)
push
add
fwait
sahf
ss
or
add
ficomp
sbb
rcr
xlat
push
mov
jne
inc
mov
ss
icebp
or
jnp
out
push
add
jp
adc
div
lea
or
adc
cmps
inc
adc
mov
jno
es
inc
or
lods
(bad)
imul
popa
sbb
aad
sbb
ins
iret
ss
ret
push
ret
sbb
js
addr16
push
test
push
sub
add
imul
bound
int
mov
xchg
jbe
inc
lods
test
js
fs
jne
and
dec
repnz
push
xor
mov
push
inc
jmp
adc
loope
or
addr16
scas
mov
and
xchg
cdq
pop
mov
aam
push
outs
add
mov
test
pusha
push
rcl
or
jle
loopne
popa
dec
mov
jecxz
jno
mov
rcl
hlt
aam
dec
xchg
(bad)
popf
mov
loop
in
sbb
dec
jecxz
xchg
(bad)
je
(bad)
fadd
popf
add
dec
lods
bound
ds
std
dec
xor
sti
and
call
cmc
dec
dec
sbb
sub
dec
and
in
test
or
popa
scas
cld
and
outs
lahf
(bad)
call
cmc
xchg
jmp
repnz
jge
xor
mov
loop
mov
dec
arpl
mov
fmul
inc
add
(bad)
fdivr
fwait
mov
pop
movs
push
jg
aad
and
sbb
aas
(bad)
xchg
mov
fst
and
push
in
sub
xor
(bad)
push
adc
dec
movs
fwait
loope
ret
(bad)
fnstcw
nop
cmp
imul
repnz
mov
test
inc
xchg
mov
jns
cmp
fs
in
mov
pop
cmp
lea
pop
movs
(bad)
jbe
addr16
int
int
(bad)
es
lock
call
xchg
adc
xor
mov
stos
les
xor
cmps
fwait
stos
js
xchg
mov
xor
mov
out
js
(bad)
pop
ins
(bad)
xor
out
jmp
pop
xlat
lods
mov
shr
xor
mov
retf
mov
leave
into
push
or
es
cmps
sub
inc
or
cmc
neg
repnz
dec
mul
mov
aad
mov
mov
sbb
inc
je
sub
loope
mov
xlat
jmp
cmp
or
pushf
jno
ret
cmc
loopne
gs
add
ror
push
or
adc
xor
jmp
dec
fst
out
ins
fucompp
adc
pop
mov
sbb
fcomp
sahf
cmps
mul
in
mov
outs
dec
jle
retf
adc
mov
push
shr
call
(bad)
or
(bad)
cmp
or
ja
rol
add
outs
pop
outs
xor
out
(bad)
in
(bad)
mov
test
sub
dec
xor
xor
imul
pushf
xor
cmps
mov
retf
pop
fdiv
pop
push
repz
lds
mov
div
test
add
shl
mov
mov
pusha
pop
adc
test
sub
sahf
sbb
not
cmps
jge
mov
push
aam
xchg
mov
mov
jg
adc
sbb
push
ins
add
xlat
(bad)
push
inc
(bad)
cmp
outs
xor
(bad)
fmulp
push
mov
cmps
(bad)
jp
clc
adc
fdiv
clc
pop
loop
mov
and
pushf
pop
adc
mov
gs
push
xchg
and
cmp
cmp
cmp
sbb
lahf
xchg
xchg
jb
pop
sahf
aad
jbe
(bad)
dec
cmps
repnz
ds
jae
xor
push
test
sub
adc
test
add
dec
lock
pop
fadd
add
xchg
pop
call
mov
or
mov
fwait
into
aaa
adc
mov
mov
aaa
mov
push
and
push
sub
inc
std
retf
cld
cli
fimul
push
aaa
pop
sbb
ficom
jo
shl
lods
stos
ror
xchg
jl
mov
mov
pusha
dec
adc
aas
adc
in
inc
loope
loope
retf
jns
jb
sbb
into
out
pop
int
push
outs
mov
loop
jae
mov
in
jl
outs
and
(bad)
jnp
or
inc
cmps
add
or
adc
hlt
mov
sub
xor
push
push
out
jmp
lahf
dec
xchg
icebp
push
(bad)
movs
inc
dec
mov
xchg
sar
or
and
add
inc
fidivr
movs
fwait
push
cmp
in
mov
cs
sub
push
jmp
push
retf
mov
subps
mov
rol
icebp
push
cmp
push
das
lds
push
push
xor
(bad)
sbb
(bad)
nop
cmp
mov
jb
jae
(bad)
fcom
add
inc
fisub
dec
push
inc
cli
out
mov
jl
(bad)
or
xor
pop
xor
jmp
fmul
loop
loop
sbb
mov
xlat
in
je
adc
ret
jne
or
mov
cmps
xor
inc
out
js
dec
mov
mov
push
mov
dec
fnsave
movs
sub
mov
sbb
jno
cmp
adc
jge
std
cmp
arpl
jg
sbb
pop
(bad)
loopne
or
mov
jnp
mov
mov
adc
mov
pop
dec
sti
js
pop
ror
ds
and
dec
xchg
xor
adc
xchg
popa
jbe
shr
adc
call
mov
ret
adc
rcr
fs
shl
jns
push
mov
inc
outs
pop
or
imul
pop
aam
xchg
aas
repnz
(bad)
(bad)
ins
mov
xchg
sub
xchg
mov
mov
inc
sti
add
lock
pop
mov
ins
ror
xchg
jp
xchg
scas
bound
pushf
shl
lahf
imul
int3
test
xor
inc
and
iret
push
dec
dec
push
ds
xor
retf
pushf
cwde
fsub
ret
jl
mov
(bad)
mov
jmp
xor
mov
inc
aad
test
adc
sub
xor
daa
add
aas
and
push
sub
ss
jge
repnz
fst
(bad)
sbb
mov
je
in
and
and
mov
inc
xchg
mov
and
mov
mov
into
das
xchg
jns
lods
iret
and
or
mov
pop
sub
cdq
(bad)
mov
inc
lods
pop
inc
pusha
cmp
inc
shr
or
in
mov
xchg
push
jg
push
fidiv
inc
sub
rol
inc
jb
mov
mov
and
inc
sbb
out
movs
mov
iret
xor
xchg
mov
add
xlat
(bad)
sub
xchg
retf
inc
cmp
cmp
jb
and
jp
mov
push
push
xlat
xor
(bad)
mov
(bad)
stos
cmp
dec
sbb
outs
dec
imul
and
cmps
jmp
(bad)
inc
retf
sti
jnp
pop
xchg
sbb
sbb
jno
add
aad
push
push
add
outs
iret
ins
mov
stos
rcl
mov
pop
sub
add
mov
mov
mov
mov
shr
or
push
ja
leave
xchg
sub
lods
push
inc
and
enter
mov
xor
push
dec
and
sub
stos
adc
cld
stos
jne
jmp
call
sub
xor
in
push
aam
mov
cmp
xor
cmp
xchg
mov
(bad)
cmp
adc
es
xchg
gs
lahf
retf
adc
mov
mov
mov
xor
sti
clc
and
loopne
and
mov
int3
xchg
dec
fiadd
mov
hlt
jg
cs
jmp
push
ret
push
call
push
loope
xchg
add
in
push
iret
mov
ror
jge
loopne
sti
mov
push
xchg
jl
aam
retf
xchg
xchg
nop
and
imul
xor
fs
xor
mov
add
mov
mov
in
dec
sbb
pop
adc
push
imul
jbe
mov
je
mov
sbb
push
adc
cmp
inc
cmp
mov
pusha
dec
mov
pop
(bad)
jmp
mov
jl
and
sub
mov
sub
inc
ins
ret
(bad)
scas
xor
daa
xchg
jge
mov
pop
cs
mov
pop
xchg
xor
cmp
mov
pushf
std
add
and
cmovb
ins
inc
or
stc
out
sub
scas
call
mov
xchg
xchg
add
jo
rcl
cmp
repz
pop
fstp
push
or
leave
daa
nop
jnp
popa
invd
mov
pusha
jge
push
int
ds
mov
add
retf
jb
xchg
(bad)
push
xchg
cmp
mov
jl
xor
imul
xchg
dec
fdiv
xchg
(bad)
sbb
sbb
sar
loop
adc
ins
das
lea
sti
fisttp
push
sbb
jae
sbb
cs
pop
mov
pop
mov
pop
(bad)
sbb
or
cli
and
enter
xchg
pop
and
jnp
mov
and
int
js
(bad)
call
ss
and
cmp
aas
mov
pop
cmps
les
fldenv
mov
daa
mov
aam
and
cmp
cmps
test
sub
inc
iret
jae
cwde
or
rcr
add
inc
sbb
jo
sub
cdq
jecxz
ja
lea
ins
sub
inc
inc
add
xor
aad
out
pop
in
ror
push
add
jp
mov
pushf
je
push
cmc
mov
push
movs
inc
daa
inc
inc
xlat
push
je
mov
mov
loopne
push
iret
mov
fcmove
xchg
int3
aad
add
jnp
dec
bound
cmp
out
jp
sbb
shr
out
cmp
fs
aas
xlat
aas
mov
jmp
adc
fwait
mov
daa
pop
retf
stos
jg
sub
and
(bad)
(bad)
mov
jns
rcr
push
rol
adc
shl
fisttp
iret
xchg
lods
add
mov
fcmovnu
inc
aaa
in
out
gs
sbb
and
sub
add
daa
fwait
imul
stos
sbb
lods
adc
lods
pop
imul
fcmovnb
sbb
mov
xor
out
mov
fdiv
xchg
imul
mov
imul
pop
lods
dec
outs
inc
loop
div
add
fwait
dec
sahf
iret
xchg
push
add
or
xchg
xchg
(bad)
cmp
jmp
sahf
bound
sub
out
repnz
add
mov
dec
jl
cmps
and
push
into
xor
mov
xchg
movs
arpl
pushf
retf
push
pop
and
cdq
mov
pop
cmp
rol
sub
test
pop
leave
cmp
repnz
aad
cld
mov
pop
outs
cs
jbe
lods
imul
push
dec
or
sub
dec
xchg
jbe
mov
sbb
lds
mov
mov
loop
adc
push
cmp
cmp
mov
fistp
adc
push
out
and
fisubr
push
call
pop
cdq
add
fdiv
mov
push
sbb
or
mov
lock
mov
xlat
push
test
cwde
jae
mov
mov
mov
les
push
movs
loop
xchg
imul
adc
jp
fs
out
cdq
and
sub
mov
(bad)
repz
mov
sbb
xchg
inc
arpl
es
mov
pop
push
iret
push
jns
adc
daa
imul
inc
push
sub
or
mov
jp
loope
inc
hlt
sub
arpl
push
add
xchg
or
inc
xchg
push
inc
mov
sbb
dec
cwde
xchg
mov
mov
retf
fcmovbe
loop
pop
adc
mov
sub
xchg
xchg
mov
movs
repz
or
arpl
sbb
fisub
mov
jl
sbb
aad
mov
shr
lahf
je
out
mov
mov
daa
add
inc
cmps
in
fs
cld
mov
adc
loopne
sub
lock
xchg
bswap
pop
xchg
push
inc
jbe
mov
fist
xchg
jno
scas
or
stc
les
fdiv
sahf
cmp
test
jmp
jo
adc
cmp
loope
ret
cwde
xchg
cmp
dec
scas
stos
enter
aas
cmc
mov
mov
dec
dec
ret
jae
lds
inc
loope
repnz
pop
lea
clc
xlat
loopne
ret
outs
jbe
mov
push
sbb
aam
ret
arpl
popf
lea
aas
pop
push
outs
and
mov
retf
sub
inc
xchg
daa
push
popf
ror
hlt
cmp
cmp
jnp
sbb
jp
push
pushf
sbb
mov
push
ins
into
mov
popf
leave
cmp
lods
cmp
and
(bad)
push
loopne
cmp
inc
pop
fbstp
xchg
mov
sbb
lock
outs
and
push
mov
ret
push
ret
inc
jmp
adc
stos
push
push
shl
ret
mov
aam
mov
dec
ds
xchg
iret
call
sub
sar
in
leave
push
scas
push
dec
adc
es
jg
cmp
add
pop
jo
pusha
jle
inc
ret
xchg
mov
inc
sub
jmp
mov
repnz
and
(bad)
in
lods
das
in
out
scas
add
cld
(bad)
sub
xor
xchg
pop
xor
mov
push
mov
jns
outs
mov
dec
dec
test
cmp
inc
outs
add
dec
jmp
js
or
repz
adc
jl
(bad)
daa
loopne
addr16
mov
das
test
fcmovne
dec
jbe
push
icebp
xchg
outs
add
xor
cmps
dec
loope
sub
lock
xchg
hlt
out
mov
pop
out
fs
add
mov
cli
and
adc
mov
enter
adc
popf
pushf
(bad)
cmp
sbb
or
add
sub
add
enter
jge
aas
dec
xor
inc
shl
sti
xchg
add
(bad)
pop
fucomip
mov
dec
xchg
xor
imul
sti
sbb
push
or
pop
push
loopne
lock
in
fadd
dec
mov
lea
jbe
dec
call
inc
mov
push
or
cmp
stos
sub
les
(bad)
pop
mov
ja
out
in
jne
loopne
push
nop
mov
and
xchg
pop
lods
mov
(bad)
xor
sub
or
pop
and
mul
or
cmp
call
push
and
fdiv
mov
not
into
neg
and
adc
cmps
leave
mov
xchg
xchg
or
arpl
pop
in
(bad)
pop
sti
add
mov
js
scas
nop
sbb
xor
inc
ret
mov
into
lods
pop
dec
clc
dec
fild
cdq
out
es
outs
or
xchg
xor
lea
cs
out
mul
imul
pop
mov
cmp
cld
iret
shr
pop
and
out
fist
sar
mov
inc
in
cmp
xor
aaa
lds
retf
ficomp
adc
fsubr
xor
inc
loopne
lods
fcomp
lahf
pop
jbe
mov
retf
lods
cmps
stc
movs
jmp
xchg
cmp
sub
out
pop
or
call
or
call
call
push
xor
xlat
ret
xchg
stos
mov
and
adc
add
in
cs
inc
push
call
div
push
cmp
jg
mov
jae
cmps
into
xor
or
xor
std
push
mov
adc
(bad)
stos
dec
sub
jns
test
cmps
(bad)
je
test
aad
dec
cmc
sbb
stos
sahf
sub
add
int
sti
in
aad
movs
hlt
or
sbb
out
inc
stc
pop
pop
sub
loop
or
push
(bad)
into
sbb
or
jp
xchg
cmp
mov
add
sar
dec
rcr
lods
adc
out
mov
jbe
fdiv
mov
jmp
cli
aam
int
es
add
gs
dec
clc
jmp
and
inc
ins
outs
aaa
aad
xchg
dec
xor
mov
call
fld
fmulp
sbb
push
enter
jbe
aam
or
in
dec
and
adc
stos
aad
in
inc
push
mov
add
pop
sti
lea
fwait
div
sti
(bad)
sahf
pop
imul
retf
sub
add
dec
mov
ficomp
lahf
test
out
enter
pop
jmp
pop
and
add
daa
cld
jns
stc
jb
imul
cmp
xchg
sar
xor
daa
dec
cmp
and
cmp
adc
mov
bound
repnz
test
inc
or
xor
das
mov
push
xchg
and
xor
pop
pop
dec
dec
in
jl
mov
push
lea
mov
jmp
jbe
or
mov
mov
xchg
mov
hlt
mov
mov
pop
aad
enter
retf
mov
movs
lods
ins
into
add
sti
add
mov
push
daa
lock
xor
mov
push
mov
pop
scas
add
xlat
rcl
push
ret
cmp
jmp
cmp
outs
push
in
sub
jg
and
mov
(bad)
gs
popa
cmp
sub
imul
les
xchg
cli
and
cs
int
lods
xlat
aas
pop
pop
mov
test
inc
mov
sahf
cdq
ficomp
frstor
jo
daa
aad
(bad)
inc
xchg
lea
dec
mov
pop
retf
pushf
mov
or
jl
test
xchg
inc
jnp
in
pop
mov
push
jl
xchg
inc
sar
xchg
test
or
ja
inc
xchg
pusha
in
cmp
cmc
rcr
sbb
dec
jb
std
and
std
sub
pop
pop
imul
inc
inc
std
adc
fwait
clc
fdiv
ficomp
mov
pop
cdq
mov
out
mov
adc
xor
iret
or
lea
pop
add
in
stos
leave
push
cmp
lea
ins
add
jbe
(bad)
rol
jmp
call
mov
push
lds
sub
lods
movs
cmp
cmp
mov
retf
pop
xor
mov
ds
push
mov
mov
dec
in
inc
add
xor
jmp
in
outs
adc
mov
ins
dec
sub
scas
ror
dec
fcom
int
sahf
test
stc
mov
out
in
add
xchg
mov
sub
xor
retf
or
xchg
cdq
enter
push
xchg
imul
pop
lea
inc
adc
int3
jne
mov
cmp
icebp
xchg
fs
adc
dec
rcr
in
mov
ror
sti
jmp
mov
add
ins
leave
leave
jo
xor
pop
(bad)
retf
icebp
push
dec
cwde
xchg
and
imul
sbb
(bad)
addr16
push
shl
sub
fwait
cmps
jp
lds
xor
dec
add
rol
or
test
jge
inc
inc
or
pop
adc
jns
pop
xchg
jno
jns
sub
adc
mov
aaa
and
jo
iret
pop
test
jb
rcl
icebp
enter
repz
daa
xor
push
dec
adc
pushf
pop
leave
in
(bad)
loopne
add
inc
pop
dec
push
shl
adc
xor
inc
add
pop
(bad)
test
ins
adc
cmp
jl
popa
push
je
rol
loopne
mov
dec
push
or
push
pop
jno
movs
dec
and
xchg
sub
ret
adc
xor
inc
int3
bound
cmp
inc
outs
ror
(bad)
lea
mov
cmp
push
inc
(bad)
mov
rcr
mov
in
fcomp
jne
push
(bad)
out
fidiv
and
inc
adc
mov
(bad)
and
add
sub
mov
(bad)
push
in
jp
xchg
icebp
cdq
jae
or
int3
and
sub
mov
movs
pop
test
adc
sub
lds
and
(bad)
shl
pop
repnz
sbb
call
call
jbe
pop
sub
ins
cmp
or
xor
and
or
jno
xchg
xchg
movs
int3
add
xchg
sbb
repz
cmp
or
gs
out
pop
retf
pop
cmps
push
loop
sar
xchg
mov
and
repz
or
jmp
ret
jbe
and
dec
ins
mov
pop
xor
dec
lds
inc
dec
sub
and
call
xchg
scas
loopne
fs
div
fstp
jle
cmp
std
fcmovne
ret
push
data16
mov
jg
inc
mov
push
dec
cmp
mov
mov
pop
mov
retf
out
mov
pop
push
sub
(bad)
pusha
loope
push
in
in
pusha
mov
pushf
cmp
add
dec
loopne
xchg
push
(bad)
xor
sahf
shl
pop
lods
jle
fnstsw
add
xchg
mov
sbb
retf
cmp
cld
ret
clc
mov
sbb
scas
in
sub
shl
mov
mov
jp
mov
stos
push
(bad)
pop
jb
sbb
sub
retf
jle
daa
mov
push
add
hlt
gs
addr16
fisub
aad
retf
pop
lock
int
(bad)
adc
add
es
in
jnp
push
ss
cld
xchg
pushf
push
jmp
pop
retf
inc
or
jns
push
jp
ret
je
push
shr
cmp
pop
cmc
sbb
cmp
or
fdiv
dec
xlat
push
into
cli
dec
aas
ret
pushf
sbb
(bad)
lahf
mov
cwde
pop
push
outs
or
push
push
pop
out
cmp
jecxz
pop
popa
jmp
sbb
or
aas
add
scas
test
jnp
and
or
xor
pop
inc
dec
jbe
sub
sub
xor
rcl
sub
adc
pop
rcl
xchg
mov
push
(bad)
pop
add
cmp
jae
cmp
jmp
aaa
lds
sub
dec
leave
mov
add
iret
jmp
in
push
sub
out
inc
gs
mov
push
fild
sub
ds
inc
in
mov
pop
sbb
clc
push
imul
lahf
iret
mov
dec
xor
neg
xchg
popa
cmp
retf
(bad)
xchg
jmp
adc
pop
push
jnp
scas
test
push
popf
(bad)
pop
(bad)
sub
js
adc
mov
aam
jl
add
ins
jmp
mov
shl
sub
sar
cmps
lahf
fwait
or
popf
mov
test
jmp
inc
dec
xor
lods
jmp
add
xor
pop
rol
jecxz
call
mov
xchg
or
in
fsubrp
scas
ss
jl
xchg
xor
sbb
fwait
ret
cdq
pop
or
aas
outs
fisubr
nop
add
test
lds
lods
push
mov
rol
push
dec
sbb
in
cmp
add
fiadd
push
pop
xchg
xchg
aam
sahf
repnz
ror
mov
test
cmp
dec
dec
ins
jp
in
xor
adc
adc
jno
xchg
add
inc
push
xor
jge
sub
jp
or
aam
fsubr
aad
add
push
add
mov
test
clc
fdiv
(bad)
scas
xor
dec
mov
enter
mov
jbe
mov
rcr
push
and
inc
fstp
pusha
not
push
jb
add
xor
pop
shr
(bad)
sub
mov
cmp
ja
pop
sub
cmp
shl
dec
pop
push
mov
mov
mov
adc
test
xor
ficom
and
jb
xlat
pushf
sub
dec
xor
stos
or
xchg
retf
sbb
imul
xor
clc
inc
xchg
aad
inc
loop
xor
test
cmp
cmp
std
mov
cli
cdq
push
inc
push
jge
pop
or
and
inc
clc
shr
and
nop
mov
push
cmp
push
icebp
and
and
loop
(bad)
je
xlat
daa
sti
outs
sub
sbb
sahf
ins
pop
rol
shr
inc
inc
sbb
adc
mov
add
push
push
xchg
jecxz
and
pop
fstp
xchg
adc
mov
xchg
xchg
push
xor
hlt
push
aam
xor
mov
inc
fcomp
cmps
sub
aaa
pop
and
shl
dec
mov
xchg
imul
je
cs
or
cld
and
(bad)
xor
aam
test
std
inc
sbb
jnp
add
mov
arpl
add
mov
or
cmp
hlt
iret
sub
jle
sub
movq
sub
jmp
adc
cmp
bound
outs
mov
pushf
dec
push
sub
sub
xchg
cmp
mov
adc
imul
jmp
hlt
jmp
push
test
in
test
jge
int3
clc
or
add
lahf
jle
shl
std
pop
(bad)
jp
outs
pop
imul
(bad)
fistp
sar
pop
cmc
sub
push
enter
mov
inc
adc
popa
jo
in
jmp
mov
cmp
xchg
jo
(bad)
in
cmp
stos
lods
xchg
mov
and
in
and
sbb
clc
scas
jle
mov
iret
xchg
repz
jecxz
imul
sti
xchg
push
dec
out
pop
add
push
sub
cli
pusha
sbb
pop
leave
push
jmp
push
iret
outs
xchg
push
jg
jb
leave
fs
dec
jecxz
pop
dec
(bad)
out
jecxz
cmp
cli
aad
xor
addr16
sar
sbb
inc
dec
xor
arpl
add
dec
or
adc
sub
stos
cli
jge
pushf
jle
scas
sub
sahf
daa
ret
repz
shl
push
aam
xor
mov
outs
out
adc
lods
ftst
dec
retf
mov
cmp
sub
ret
jae
add
mov
rol
push
(bad)
arpl
pop
pop
(bad)
stc
test
jge
pop
movs
add
ret
fimul
jmp
retf
xor
dec
(bad)
scas
cwde
or
gs
pop
es
fdiv
xor
imul
out
out
(bad)
(bad)
out
mov
ret
pusha
call
mov
adc
fs
aad
jmp
rcr
or
test
ja
sub
sbb
dec
push
lea
jbe
int
in
cmp
pop
push
data16
mov
cdq
mov
movs
fwait
cmp
aam
pop
out
scas
add
fdiv
jns
(bad)
loopne
std
daa
jne
pmaddwd
add
outs
fwait
in
sub
xor
push
inc
xchg
stos
rol
test
cmp
imul
(bad)
jmp
es
lahf
(bad)
xor
and
sub
xchg
pop
and
inc
repnz
ja
dec
dec
jbe
sar
test
or
shl
lea
mov
test
out
lock
push
jle
xchg
loope
test
jmp
mov
mov
shr
xchg
icebp
mov
dec
ss
in
push
call
mov
(bad)
out
jno
pushf
mov
cmp
mov
cmps
imul
je
adc
addr16
cmp
xchg
ret
inc
rcl
inc
inc
dec
pusha
jno
or
test
xlat
jle
jg
sbb
inc
push
adc
and
push
js
cmp
and
mov
(bad)
fcomip
aas
lods
mov
rcl
loope
pop
jle
mov
jmp
loope
adc
push
dec
sub
xor
push
adc
mov
mov
adc
hlt
push
div
iret
lods
inc
mov
mov
xlat
ss
adc
cs
or
fdivr
mov
fist
test
int
es
rcr
push
ret
mov
cmp
(bad)
pop
push
out
dec
dec
jecxz
lahf
mov
(bad)
out
cmp
mov
mov
adc
cdq
inc
mov
add
sub
xchg
leave
mov
inc
jb
mov
fldcw
mov
aam
xchg
stc
aas
pop
int3
in
mov
mov
add
fcom
daa
sub
inc
ret
(bad)
nop
inc
xor
lahf
jbe
(bad)
call
sbb
xor
xor
sbb
in
fld
sub
test
leavew
sbb
push
push
sub
mov
jno
aam
mov
jge
test
or
pop
xchg
shr
pusha
mov
lods
scas
fldcw
scas
xchg
inc
jp
rcl
fstp
mov
outs
shr
dec
in
pop
inc
jbe
xlat
inc
fnstcw
retf
icebp
cli
std
mov
cli
lods
int
aas
popf
or
stos
push
mov
sbb
fisub
(bad)
out
dec
popa
arpl
cmp
and
mov
adc
mov
daa
inc
and
lods
pushf
popa
das
push
outs
rcl
stc
fnsave
dec
cmps
cmp
jmp
jb
lds
mov
sbb
pop
stos
int3
lds
call
aas
add
lods
xor
mov
mov
outs
iret
sbb
mov
mov
inc
iret
arpl
in
sbb
pop
iret
cs
movs
or
(bad)
retf
daa
(bad)
xchg
add
ins
mov
ror
mov
sub
scas
(bad)
retf
es
test
xor
cmp
jne
out
sahf
push
pop
lods
aas
or
daa
(bad)
mov
push
cli
fisttp
sbb
cmp
pop
add
stos
mov
jb
add
xchg
out
mov
push
xor
cmp
adc
movs
and
into
or
loope
cmp
idiv
leave
js
sub
js
push
xor
(bad)
sub
pop
inc
lds
repnz
add
hlt
std
xlat
leave
daa
fcomp
fisttp
xchg
adc
pop
in
inc
cmp
pop
inc
pop
dec
lods
stos
imul
iret
cmp
(bad)
mov
jmp
sub
cmp
push
aaa
ret
pop
push
sbb
(bad)
pop
inc
push
add
push
loope
inc
mov
mov
cmp
dec
adc
jmp
dec
loopne
in
or
pop
jmp
lock
jmp
mov
inc
mov
cli
enter
ins
imul
add
ins
mov
pusha
stos
or
retf
bound
mov
inc
ret
xchg
in
bound
push
add
fcomp
inc
in
js
ss
lock
xchg
add
sub
sbb
cmp
fwait
jno
adc
stc
inc
enter
shl
mov
mov
cli
cli
sbb
or
xchg
dec
push
pop
and
xchg
mov
fcomip
enter
cmps
dec
sbb
enter
pushf
ret
cmp
xchg
mov
sub
imul
scas
mov
je
adc
ins
mov
add
push
xchg
fwait
repz
adc
mov
jne
sbb
sub
sub
neg
lods
not
adc
iret
dec
enter
jo
sbb
cli
jb
and
or
int3
ja
imul
pusha
xor
xor
bound
ret
sbb
adc
in
mov
movs
(bad)
(bad)
adc
std
fwait
cmps
fucomip
inc
and
das
jo
aas
daa
xchg
mov
or
inc
mov
mov
mov
push
jle
push
fist
pop
test
test
mul
test
fbld
popa
(bad)
icebp
push
repz
in
mov
mov
mov
fs
ins
add
test
push
xor
mov
jns
psubq
test
std
(bad)
jecxz
es
dec
push
dec
add
repz
adc
mov
loope
mov
jbe
rcr
arpl
mov
jno
xchg
clc
mov
push
sbb
dec
cmps
inc
mov
cmc
data16
add
cmc
cmps
mov
jno
xchg
retf
mov
add
mov
xlat
rol
xor
xchg
xchg
popf
aam
repnz
ss
push
sbb
xor
daa
pop
jb
sahf
imul
pop
and
jae
push
retf
xor
push
imul
push
inc
outs
(bad)
aaa
sar
in
push
inc
(bad)
js
jne
ins
mov
dec
stos
mov
dec
mov
jl
das
out
mov
mov
adc
in
xchg
into
dec
add
ja
jmp
xor
pop
sbb
mov
adc
jmp
push
xchg
jbe
arpl
cmps
push
daa
adc
retf
clc
mov
mov
fst
jg
into
aam
aaa
inc
mov
pop
add
dec
mov
push
xchg
into
push
and
and
out
imul
inc
sub
cmps
mov
shl
jmp
xchg
or
out
arpl
call
into
sub
stc
test
jg
fwait
mov
gs
das
es
ffree
pop
imul
retf
mov
inc
outs
push
xor
int
lods
push
les
popa
fist
dec
outs
dec
mov
push
mov
lds
dec
xchg
dec
dec
movs
cld
or
les
xchg
cmp
mov
fucom
adc
mov
dec
pop
fmul
loopne
pop
or
sahf
aaa
mov
mov
outs
imul
ret
jmp
jb
jmp
popf
faddp
jmp
xchg
inc
aad
mov
push
dec
pusha
retf
pop
cmp
or
scas
and
and
jl
stos
dec
js
xor
test
xchg
mov
sbb
sti
in
leave
sub
movs
xor
loop
aam
pop
add
jg
push
adc
sbb
xchg
nop
or
pop
xor
jae
sbb
mov
add
push
or
ret
pop
jge
cld
inc
cmc
aas
cmps
or
mov
loopne
hlt
ins
mov
push
shr
mov
push
fld
ins
and
xor
(bad)
xor
or
or
cmps
hlt
add
cmp
(bad)
into
xlat
xor
iret
jge
out
aam
xchg
mov
(bad)
sub
dec
ret
jp
loop
rcl
lds
pop
scas
cwde
xor
xchg
inc
adc
mov
xchg
gs
icebp
and
out
out
push
hlt
jmp
push
mov
out
(bad)
mov
loopne
add
dec
push
ja
cld
pop
sub
cmp
fisubr
and
mov
(bad)
in
jo
stos
loope
pop
jnp
popw
lods
cld
and
imul
xchg
jnp
leave
jmp
push
sub
pop
ror
inc
push
stos
dec
test
sub
js
sbb
push
mov
push
js
adc
mov
jecxz
cmp
sub
mov
or
test
into
dec
jle
test
cs
fldenv
(bad)
sbb
push
pop
sbb
pop
fdiv
sbb
dec
dec
dec
cld
movs
or
xor
or
pushf
sub
ins
jecxz
push
ins
add
xchg
les
iret
sub
jae
test
icebp
cmp
test
xchg
arpl
jp
dec
inc
or
jae
dec
push
pop
das
retf
jp
cwde
in
push
mov
mov
scas
cmc
mov
xchg
cli
hlt
mov
mov
push
mov
(bad)
xchg
in
int3
xchg
or
aam
lods
inc
push
gs
nop
les
pop
clc
into
rol
add
adc
das
mov
inc
dec
test
dec
cmp
dec
call
xchg
mov
fld
xlat
or
test
shl
test
cmp
arpl
pop
out
or
jle
mov
pop
push
out
mov
fyl2xp1
out
gs
push
mov
clc
pop
or
xchg
fcomip
arpl
dec
imul
lahf
lods
cmps
xchg
push
pop
fadd
and
or
dec
test
fcomp
pop
lock
bound
or
dec
sbb
sbb
outs
(bad)
cmc
dec
pop
mov
mov
or
icebp
cmp
mov
and
sbb
(bad)
fstp
jae
enter
xchg
add
ds
push
cmp
cmp
imul
push
push
lds
push
leave
push
je
jecxz
push
out
cmps
dec
scas
mov
les
hlt
call
sbb
sub
ins
inc
outs
test
(bad)
adc
fnstcw
mov
dec
push
cmp
lea
dec
retf
int3
stos
fstp
push
add
push
aad
or
dec
mov
(bad)
or
adc
pusha
pop
shl
jge
jno
inc
xchg
mov
int3
inc
jp
outs
mov
push
push
xor
call
and
add
int3
out
push
or
mov
cdq
call
mov
mov
jo
outs
add
or
aad
fld
in
ret
push
hlt
test
pop
std
pop
inc
aaa
rcl
invd
add
setnp
and
imul
in
(bad)
fidiv
dec
out
and
leave
test
popa
stos
push
test
cmc
mov
add
xor
or
imul
inc
popa
loope
xchg
push
inc
outs
mov
(bad)
retf
aam
imul
sti
stc
jb
xchg
es
or
dec
stos
retf
cmp
out
and
cmp
mov
dec
dec
mov
inc
jae
retf
outs
cld
dec
gs
fsub
out
push
cmp
mov
stc
fsubp
sahf
ffree
addr16
das
sbb
and
test
aas
repnz
rcr
call
dec
(bad)
jge
test
pop
stc
add
call
cmp
jle
dec
les
push
test
jae
mov
mov
mov
sub
mov
add
sub
repnz
idiv
scas
mov
cdq
sahf
mov
adc
jmp
sub
bound
xor
jmp
or
pop
jnp
data16
jns
ins
adc
dec
push
sbb
std
or
test
iret
icebp
xlat
mov
dec
hlt
jmp
cmp
sbb
ds
das
imul
repnz
scas
leave
adc
jbe
js
push
into
xchg
out
xchg
xchg
sub
cmps
add
or
ins
mov
cmp
cmps
inc
in
popa
push
xlat
jnp
cmp
hlt
lock
sbb
fdiv
dec
xchg
mov
stc
shl
push
js
out
daa
and
dec
xor
xor
test
ss
lods
pop
pop
popa
xchg
xchg
(bad)
lock
fcomp
shl
scas
gs
clc
sbb
adc
jecxz
dec
sub
cmp
popa
pop
cmc
shl
xchg
stos
cmp
repz
sti
mov
inc
dec
pop
ins
mov
xor
(bad)
out
cmp
fucomi
push
cmp
mov
xor
movs
inc
bnd
inc
mov
pushf
and
dec
cmovge
call
call
sub
push
or
jno
mov
cli
lahf
mov
retf
push
(bad)
sbb
loop
jmp
lods
add
mov
add
dec
adc
push
clc
fdivr
ror
into
call
cmp
stc
xor
imul
cmc
call
mov
out
cmp
movs
push
outs
pop
and
jmp
mov
or
lahf
inc
adc
adc
sub
or
and
mov
je
or
movs
pavgw
adc
inc
mov
movs
js
xor
pop
xor
push
shl
sar
sub
push
je
imul
xchg
xor
loop
xchg
imul
js
icebp
adc
mov
daa
lea
cdq
fbstp
and
scas
loope
cwde
push
or
xor
popa
ins
push
mov
dec
retf
adc
and
sti
xchg
mov
ret
(bad)
cli
sub
int3
jb
mov
in
pop
xor
sbb
dec
(bad)
outs
clc
or
pop
out
mov
adc
mov
jl
fcmove
dec
pop
pusha
ficom
scas
fsub
iret
lahf
push
nop
sbb
cmp
clc
arpl
dec
or
ds
(bad)
in
ds
or
jne
adc
sub
dec
pop
ss
cwde
clc
pop
xchg
jbe
pop
js
xchg
add
mov
push
mov
(bad)
movs
int3
ret
call
pop
in
jge
or
sbb
adc
bound
cdq
cwde
int3
xchg
fs
arpl
push
sar
and
jmp
or
push
mov
and
clc
retf
pop
arpl
imul
jae
lock
repz
and
inc
les
add
jne
ret
mov
mov
shufps
mov
pop
or
hlt
cmp
(bad)
in
xchg
rcr
and
fdivr
fcomp
mov
add
jo
pop
scas
mov
cdq
xor
shl
add
int
dec
aaa
and
jl
and
mov
mov
das
fld
shr
fld
dec
addr16
sbb
ja
mov
jmp
cmps
jle
and
push
sbb
mov
ret
xchg
mov
call
add
sub
fadd
ins
dec
fadd
xor
fisubr
jae
or
and
mov
not
shl
push
fisttp
push
call
adc
in
fldcw
mov
adc
shl
sbb
jle
and
mov
ret
jp
stos
cmp
add
icebp
cmps
call
mov
xchg
fisttp
cmc
cmps
ret
sub
xchg
sub
mov
sub
sub
or
arpl
in
mov
or
cmps
jge
in
data16
(bad)
mov
dec
pop
cmp
pop
xchg
xor
aaa
cmc
rdmsr
lea
cdq
ja
ror
idiv
jecxz
mov
xor
mov
xor
int3
jg
add
fldl2t
gs
out
xor
xor
dec
sbb
jecxz
or
cwde
adc
mov
retf
cmps
fisttp
pusha
pop
icebp
fdiv
repz
scas
gs
pop
sub
sbb
xor
movs
mov
mov
shr
cmp
inc
jo
loope
dec
popa
jo
ret
push
xchg
dec
xchg
inc
xchg
data16
(bad)
mov
dec
xor
mov
and
fisttp
(bad)
sub
loop
int3
icebp
sub
pusha
loop
test
bound
mov
icebp
(bad)
jae
test
cmc
pop
ror
mov
int3
sar
dec
inc
nop
sti
lods
(bad)
dec
adc
push
daa
xor
call
aaa
inc
ret
(bad)
cld
or
adc
out
mov
stc
stos
push
pop
xchg
ret
arpl
fs
and
(bad)
fnstenv
cmps
sbb
dec
in
adc
inc
xor
stc
jns
adc
or
pop
or
mov
and
mov
cld
les
add
sub
sub
ins
fbstp
dec
sbb
js
add
dec
test
imul
pop
test
mov
xchg
mov
mov
(bad)
pop
push
pop
cli
dec
adc
add
xor
in
bound
push
inc
fneni(8087
rcpps
arpl
mov
leave
mov
jbe
sub
mov
ret
cmps
lds
ins
push
add
sbb
push
lds
pop
adc
gs
jnp
cwde
mov
fst
mov
hlt
push
aaa
fidiv
enter
sub
sub
sbb
inc
das
call
mov
xchg
adc
add
test
nop
dec
add
lods
fs
js
push
aad
jl
iret
pop
mov
cmc
outs
lds
push
inc
mov
pop
hlt
jo
je
outs
cmps
stos
jp
and
not
and
gs
jmp
rol
and
idiv
cmp
call
aad
and
push
loop
sbb
dec
inc
sub
xor
in
adc
aas
pop
push
push
cwde
pop
dec
test
sbb
loopne
mov
shl
rcr
or
popf
iret
jmp
ins
jmp
pusha
jno
ror
gs
je
fld
ret
cmc
call
rcr
inc
jo
jg
jns
jno
sahf
test
inc
les
loope
jo
in
add
add
xor
fisubr
ror
cmp
jecxz
movs
inc
sbb
fbstp
lahf
xchg
inc
sub
imul
and
sub
cwde
jbe
mov
int
nop
and
out
data16
add
daa
loope
pop
jb
pop
sbb
or
aad
xchg
out
xlat
and
push
push
arpl
cld
push
pop
sbb
adc
xor
hlt
(bad)
shr
adc
ret
jmp
jl
sahf
sub
mov
hlt
adc
jae
test
mov
pop
mov
adc
jmp
retf
lahf
xor
cld
inc
cmc
repnz
push
out
nop
ror
push
inc
sahf
or
pop
int3
push
popa
push
sbb
pop
jecxz
out
inc
es
mov
cmp
enter
mov
xor
sub
or
call
(bad)
adc
ret
or
out
test
and
rol
adc
ficom
pop
dec
xlat
cld
neg
jae
sbb
movs
dec
mov
push
jle
xchg
xchg
int3
scas
cmp
call
(bad)
sar
mov
sub
mov
mov
xor
or
in
ror
ficomp
jns
rcl
pop
cmps
test
sahf
jbe
push
pushw
aaa
cmp
jmp
sbb
lahf
mov
leave
je
lea
mov
adc
mov
(bad)
pop
pushf
and
inc
int
loop
mov
fsub
mul
lods
shl
fstp
lock
in
xchg
(bad)
ja
push
xor
xchg
inc
xchg
in
sahf
and
fwait
std
bound
sti
and
dec
mov
sub
lock
sub
add
(bad)
fisttp
es
xchg
push
jnp
sbb
retf
sbb
jle
push
add
pop
add
pop
pop
adc
sti
push
sbb
aas
stos
sub
lahf
push
fdiv
int3
nop
adc
(bad)
mov
sbb
ja
push
repnz
lock
xor
les
je
sub
mov
mov
call
neg
shl
(bad)
pop
jmp
xor
nop
(bad)
mov
xor
pop
and
adc
inc
rep
fisubr
jbe
sub
rcr
sub
imul
call
mov
(bad)
sub
and
retf
call
aas
(bad)
cmp
jno
mov
pop
mov
popa
jnp
out
lahf
retf
icebp
cli
lock
sub
rcl
std
sub
pop
repz
mov
gs
jp
ds
ret
call
adc
cmps
std
nop
inc
setne
pop
cmc
jbe
in
in
xor
stos
pop
test
jg
cmps
add
cmp
xor
lea
add
and
pusha
int3
mov
not
repnz
int3
test
and
pop
(bad)
sbb
push
jp
sub
push
out
xor
shr
test
aas
leave
or
and
bound
sub
mov
fild
in
adc
cdq
push
cmp
into
and
add
push
push
clc
sub
sub
mov
arpl
adc
sub
adc
dec
jb
dec
jmp
int
xchg
xabort
rcr
sbb
sbb
lds
or
add
mov
jp
mov
cmp
inc
and
js
xor
int
loope
addr16
mov
addr16
dec
jmp
and
outs
pop
mov
frstor
inc
mov
mov
repnz
sti
sbb
shr
add
mov
pop
xchg
test
pop
rol
mov
ins
push
push
add
pushfw
mov
mov
fs
aam
data16
lea
mov
gs
mov
pop
pop
outs
push
cmp
pop
mov
fldz
lock
icebp
mov
dec
jg
popa
jmp
aam
ds
adc
ins
xor
(bad)
mov
inc
sub
repz
adc
cmp
clc
repz
mov
in
push
(bad)
aad
stos
push
dec
push
sti
adc
and
sub
dec
mov
mov
jns
adc
ss
xlat
xchg
rol
sub
(bad)
(bad)
scas
adc
outs
mov
and
or
pusha
cmp
mov
div
jnp
call
cmp
and
outs
data16
ret
addr16
push
sbb
lods
cld
xor
push
adc
iret
add
push
pop
add
cdq
pslld
cmp
inc
fcomp
xchg
xor
in
inc
enter
sub
sub
sbb
ret
dec
loopne
rol
pop
dec
fidiv
sbb
lea
xor
jle
push
adc
xchg
mov
mov
cmp
repnz
dec
push
(bad)
pop
push
inc
test
jge
(bad)
loope
rol
inc
mov
add
(bad)
outs
inc
fist
pushf
clc
xchg
adc
(bad)
push
popf
test
mov
push
dec
loopne
stos
push
mov
in
sub
push
and
int
add
adc
mov
ins
jmp
pop
mov
xchg
psrlw
or
xor
repnz
jbe
int3
ret
push
les
jg
cmps
(bad)
mov
lahf
jnp
inc
out
mov
jmp
dec
ins
xor
int3
scas
xchg
shr
jae
mov
add
mov
mov
mov
sbb
mov
shl
sahf
out
push
stos
xor
imul
xlat
mov
xchg
popf
sub
pop
adc
dec
jle
adc
lahf
mov
mov
mov
outs
stos
jo
daa
out
fld
dec
shl
rcl
pop
shl
cld
(bad)
inc
push
push
outs
popf
pop
mov
sub
in
adc
in
push
in
mov
or
leave
xchg
les
das
ins
jbe
sub
das
cmp
cld
xor
push
pop
jl
and
mov
or
xchg
push
repz
xchg
into
pop
cld
inc
mov
mov
sub
aas
and
pop
dec
cmps
cld
mov
icebp
test
mov
fwait
mov
or
call
stc
inc
push
in
test
and
pushf
xor
add
mov
cdq
add
movs
jb
movs
sub
jmp
hlt
mov
sub
push
inc
retf
push
cmp
retf
jecxz
in
nop
sbb
mov
call
dec
sub
add
cmc
fxtract
mov
sbb
xchg
xor
cmps
dec
je
mov
pop
cwde
(bad)
push
xor
xor
out
pushf
sbb
jmp
pop
daa
je
push
(bad)
adc
mov
mov
sbb
mov
fsubp
cdq
imul
retf
(bad)
cld
dec
inc
xchg
loop
jae
imul
sub
pop
adc
push
ss
jne
inc
aas
iret
push
hlt
(bad)
mov
sub
mov
or
(bad)
xlat
fmul
xchg
scas
test
dec
jb
cmp
in
xchg
mov
cmp
sbb
enter
stos
loop
jp
lea
enter
push
dec
imul
add
loopne
repnz
jle
arpl
fild
aad
mov
mov
je
mov
inc
out
jp
retf
pushf
and
call
dec
push
sbb
jns
or
in
stos
mov
mov
and
dec
and
stos
xchg
pushf
(bad)
mov
xchg
jg
mov
pop
bound
test
mov
fst
lahf
mov
jbe
jb
cs
in
pop
mov
std
push
dec
nop
mov
mov
aas
mov
xor
test
or
nop
push
jge
or
sub
adc
imul
(bad)
sbb
push
mov
outs
cli
int3
or
and
popf
sbb
xchg
push
retf
clc
cmp
pop
and
cmp
jbe
sbb
lods
fsub
sar
mov
repnz
es
jge
adc
or
fiadd
popf
inc
mov
cmp
adc
sahf
cmp
(bad)
push
ins
adc
jb
jmp
movs
pop
and
xchg
sti
cli
ret
arpl
mov
pop
dec
dec
(bad)
jp
add
ret
push
shl
push
pop
xchg
pop
and
test
xchg
sub
push
inc
fcom
outs
jp
fcom
and
xor
xor
movs
dec
mov
sub
inc
ja
jp
cmps
pusha
mov
jmp
mov
stos
pop
cmc
outs
(bad)
popf
pop
mov
jne
inc
push
xchg
mov
lea
mov
inc
(bad)
or
cmc
inc
sub
mov
shr
adc
and
test
sub
imul
fnsave
cmps
retf
aad
lahf
lea
lods
or
fs
push
jecxz
mov
pop
dec
ror
mov
mov
sahf
scas
mov
loop
(bad)
das
fsub
push
push
xor
je
fdivr
gs
fcmovu
(bad)
fstp
enter
adc
popf
div
loopne
pushf
dec
(bad)
int3
mov
(bad)
and
inc
imul
rcl
dec
inc
rcr
pushf
fbstp
mov
jo
mov
adc
adc
mov
in
mov
add
sbb
in
cld
xlat
(bad)
dec
aam
xlat
sbb
xchg
xor
push
mov
pop
fcmovu
pop
jo
mov
imul
fcomi
sbb
rol
xchg
xchg
mov
push
test
out
adc
fisttp
cmp
sahf
loope
out
dec
es
sub
jecxz
xchg
jno
push
movs
dec
cmp
fs
push
jl
mov
cmp
mov
lahf
dec
sbb
bound
movs
arpl
ficom
mul
cmp
call
sar
jne
xchg
dec
int
or
inc
call
and
movs
out
nop
fucom
arpl
ret
jmp
jmp
loop
adc
and
add
cdq
nop
retf
pop
mov
sub
mov
push
mov
dec
inc
cld
xor
add
scas
enter
mov
sbb
es
sbb
add
(bad)
aam
xchg
ret
or
out
inc
test
adc
out
call
(bad)
jecxz
jmp
push
pushf
dec
addr16
mov
arpl
mov
sti
mov
iret
addr16
inc
cld
xlat
lahf
add
inc
pop
sti
and
sub
pop
outs
xor
fcomi
jne
push
in
add
movs
push
hlt
jmp
adc
mov
push
pop
jecxz
test
ret
xor
mov
inc
mov
push
and
cmp
fwait
je
jmp
pushf
(bad)
into
dec
(bad)
retf
and
movs
mov
mov
stc
and
and
int
mov
push
adc
daa
movs
or
xchg
jle
pop
add
dec
loope
imul
jo
jb
(bad)
clc
or
and
aam
and
sub
inc
inc
out
pop
mov
xchg
xchg
push
cmp
or
xor
sbb
sub
repnz
stos
in
sbb
push
add
jae
call
(bad)
aad
(bad)
imul
scas
mov
ins
pop
pop
add
fild
dec
loop
out
popf
and
shr
adc
or
sti
inc
mov
es
adc
add
test
jbe
jns
(bad)
mov
jns
or
mov
pop
adc
stos
jbe
adc
or
sub
cmp
(bad)
(bad)
sub
scas
jecxz
adc
jle
mov
jg
xchg
fistp
js
sub
lods
lods
repz
mov
sar
mov
ins
out
cs
in
test
call
stos
jmp
sbb
cmp
sub
cld
(bad)
and
inc
cmp
outs
sahf
xchg
and
pop
mov
xchg
dec
lea
stos
sub
inc
dec
shl
adc
pusha
inc
push
xor
pop
jne
rol
mov
and
mov
or
adc
and
and
cmp
test
add
mov
push
leave
pusha
push
retf
or
imul
mov
loopne
fstp
or
jne
int3
sbb
jbe
bound
xor
sbb
push
inc
scas
hlt
xchg
adc
mov
outs
imul
fmul
gs
pop
popa
adc
into
outs
add
stc
cmc
ret
inc
test
xor
and
adc
dec
pop
mov
xor
mov
dec
arpl
retf
retf
das
sbb
stos
(bad)
loopne
ins
ror
and
mov
loope
or
in
push
jle
jae
mov
jne
pop
jge
jo
gs
push
jecxz
pusha
rcr
dec
gs
inc
outs
ret
sub
fist
movs
jnp
inc
xchg
jns
xor
jbe
std
jo
mov
lds
mov
repz
mov
jmp
shr
or
ds
cmp
test
(bad)
jg
dec
xchg
adc
std
pop
stos
js
pushf
sub
inc
xchg
stos
lods
mov
js
xchg
out
mov
pop
adc
scas
jno
lods
les
sub
xchg
shl
sub
bound
jbe
nop
cmp
(bad)
mov
dec
push
pop
xchg
retf
out
fsubr
cmp
mov
sub
es
inc
fcmovu
or
out
repz
pop
xor
push
jbe
jno
jb
shl
shl
fiadd
loope
dec
mov
scas
adc
out
mov
hlt
push
outs
mov
ins
mov
mov
(bad)
das
jg
adc
nop
push
retf
mov
add
and
mov
jge
ret
jo
(bad)
jo
sub
aad
leave
movs
ins
jp
es
mov
xlat
cdq
mov
mov
xor
push
mov
pop
mov
push
jl
hlt
add
retf
push
sbb
push
push
or
loop
xchg
push
cmp
push
outs
iret
and
imul
imul
or
jns
pcmpeqw
adc
lea
stc
mov
adc
daa
ss
mov
cdq
or
shl
sbb
adc
push
dec
stos
push
mov
movs
mov
push
sub
mov
fstp
sub
cmc
inc
fmul
add
mov
das
call
inc
imul
and
and
inc
cmp
paddusw
popf
int3
adc
push
add
std
retf
add
mov
sbb
xchg
or
add
sub
push
dec
(bad)
aad
dec
add
and
inc
mov
mov
sbb
pop
repnz
loope
mov
call
add
xchg
jp
push
cmp
cmp
xchg
into
adc
sub
mov
stos
or
scas
jno
push
and
imul
xchg
inc
rep
pop
jb
test
retf
or
std
cmp
cmp
fdivr
add
cmp
jo
inc
pushf
sbb
cmp
inc
or
test
pop
les
test
jge
jae
leave
hlt
or
(bad)
neg
sbb
lock
test
mov
ror
repnz
pushf
jle
inc
(bad)
or
push
sub
add
mov
and
cmc
add
out
xor
loop
jno
inc
xchg
inc
sbb
das
(bad)
xor
inc
jle
movs
shr
and
push
or
adc
dec
xor
je
sub
inc
std
lods
or
sbb
push
cli
test
or
cld
fwait
repnz
popf
push
jl
sahf
sub
int3
cmp
xchg
lahf
mov
repnz
jae
jns
sub
xor
clc
cmp
dec
xor
push
or
stos
gs
mov
(bad)
sbb
and
jmp
jp
inc
dec
inc
aas
xchg
and
xchg
dec
cwde
iret
sahf
imul
push
fdiv
jne
pop
xchg
or
fisttp
cld
cmc
xor
pushf
pop
push
or
mov
in
das
mov
je
inc
xlat
mov
test
push
adc
jno
adc
mov
jbe
pop
stos
mov
ss
xchg
mov
push
call
sbb
sbb
pushf
loope
cld
jge
lahf
popf
jge
push
cmp
call
(bad)
es
or
rol
imul
push
inc
repnz
or
fisttp
mov
bound
dec
or
and
je
push
loope
add
(bad)
jp
mov
(bad)
test
sub
lods
push
aam
pop
mov
(bad)
mov
add
sub
and
in
xchg
or
mov
aas
out
inc
inc
push
nop
pop
rcl
ret
jmp
or
cld
fs
(bad)
xchg
ins
popf
es
xor
scas
arpl
out
jbe
pop
int3
(bad)
dec
int
leave
and
cld
retf
cvtpi2ps
lods
adc
dec
or
cli
push
inc
xor
add
jae
xor
mov
xchg
shr
sbb
xchg
nop
pushf
xchg
cdq
cmp
(bad)
clc
add
sar
dec
lock
sub
push
fidivr
cli
call
clc
test
and
repnz
subps
or
xor
xchg
jmp
lock
sub
fs
push
sub
adc
sti
mov
in
clc
aad
(bad)
jne
jo
hlt
mov
inc
pop
lods
test
xor
shr
clc
xchg
ja
pop
bound
fidiv
xor
movs
imul
dec
jmp
lods
fwait
out
pop
retf
push
mov
and
dec
fild
popa
rol
pop
das
xor
push
out
xchg
mov
call
lods
shr
add
pusha
repnz
xor
clc
sub
jge
mov
leave
inc
jmp
push
or
pop
loope
xchg
lds
adc
and
push
fst
sar
push
test
adc
push
pushw
sbb
push
popa
and
inc
xor
int3
movs
push
xchg
call
sub
mov
mov
jle
sub
movs
push
pop
pop
jge
bound
inc
in
leave
hlt
enter
cwde
shl
aam
cmp
dec
fistp
jno
and
out
jmp
scas
add
pop
inc
add
mov
imul
push
sub
mov
xchg
sub
xlat
cmc
lea
inc
test
clc
fdiv
retf
(bad)
pop
sti
(bad)
jge
add
int
aaa
fld
adc
daa
inc
ret
push
dec
dec
jne
or
push
and
mov
movs
and
ficomp
stos
movs
dec
push
cmp
pop
(bad)
fisttp
sbb
fwait
cmp
xchg
repz
pop
cmp
das
ins
mov
lods
dec
jns
je
repz
xchg
and
mul
addr16
or
int
pusha
cmp
mov
sub
jns
adc
pop
hlt
lock
int
and
sub
iret
repnz
(bad)
fidiv
pop
inc
aam
(bad)
mov
mov
inc
outs
lods
pop
fld
imul
pop
mov
xchg
enter
gs
add
mov
xor
repz
or
dec
retf
shl
xchg
jnp
jbe
push
adc
pop
sbb
js
or
adc
push
je
adc
mov
mov
sub
mov
mov
pop
and
call
pop
jne
mov
inc
div
push
xor
lock
push
mov
sub
inc
pop
pop
mov
test
mov
mov
or
call
cmp
loopne
xchg
and
add
adc
adc
inc
mul
sub
mov
jl
and
push
mov
or
sahf
xor
sbb
ins
lahf
inc
icebp
daa
and
dec
add
jg
mov
in
xor
push
and
push
scas
inc
iret
aaa
(bad)
out
sar
cmp
xchg
(bad)
or
jmp
(bad)
adc
or
sbb
sub
or
pop
retf
jne
pusha
jmp
mov
mov
ins
in
dec
clc
push
imul
retf
(bad)
mov
pop
daa
dec
sbb
out
mov
sub
into
test
xor
add
sar
pop
xor
jl
jmp
lock
ret
fst
push
test
daa
mov
xor
dec
jae
arpl
ret
xchg
pop
popa
out
xchg
mov
pop
pop
sub
pop
test
xchg
sub
xor
loop
or
mov
out
mov
ins
pop
bound
xchg
call
sub
imul
(bad)
cs
mov
mov
fisubr
in
jb
movs
jno
dec
loope
fisubr
retf
lock
dec
sbb
lds
adc
xchg
fs
jo
or
mov
jl
pop
xchg
shl
xchg
(bad)
cmp
arpl
fcomp
inc
pop
xlat
pop
lods
sbb
popa
pop
lock
in
std
sti
and
sbb
adc
movs
(bad)
(bad)
stos
mov
movs
lds
lods
cmps
hlt
clc
clc
js
mov
test
and
jle
rcl
sub
mov
popf
jae
fdiv
stos
mov
jno
loopne
jo
addr16
jns
jg
imul
mov
enter
imul
call
scas
mov
call
or
push
inc
or
adc
cmp
ror
dec
pop
call
mov
dec
ret
enter
push
icebp
mov
cmps
pop
sub
xor
mov
mov
ss
cdq
dec
sub
cmps
adc
jp
or
push
call
xchg
push
or
and
test
iret
adc
xchg
in
leave
call
scas
retf
inc
and
and
out
mov
out
jo
dec
iret
dec
stc
xor
xchg
xor
aas
jb
mov
and
retf
ja
jb
lahf
jae
or
dec
add
loopne
fild
inc
sar
dec
push
cmp
scas
adc
outs
aad
sub
or
jns
xchg
dec
push
loope
fxch
sub
and
aad
inc
leave
ins
add
leave
jnp
push
ret
inc
aad
pusha
js
pop
loopne
mov
jno
stos
pop
mov
loop
rol
dec
mov
in
mov
push
add
(bad)
clc
mov
imul
jmp
sti
imul
mov
into
or
dec
cmp
out
cs
push
and
out
or
inc
cdq
cmp
ins
jmp
inc
aam
movs
jno
jmp
mov
pop
test
xchg
sahf
fst
dec
mov
xchg
cmp
imul
dec
pop
xchg
adc
lds
sub
test
xor
div
push
(bad)
xor
mov
out
inc
xchg
inc
mov
cli
mov
mov
sub
lods
std
imul
dec
mov
dec
jg
mov
(bad)
dec
out
pop
out
jl
retf
xchg
add
daa
xor
out
fdivr
fst
retf
push
xchg
ins
outs
shl
pop
sbb
pop
mov
out
sbb
jb
pusha
jmp
fucomip
inc
into
dec
mov
jmp
fwait
mov
inc
loopne
xchg
inc
pop
fwait
or
mov
mov
addr16
fcomp
push
pop
pop
and
or
adc
mov
leave
test
std
mov
xlat
sbb
popf
div
stos
add
mul
xor
jns
sbb
xor
ins
daa
js
xor
and
dec
call
jne
sti
jl
nop
(bad)
pop
ss
push
and
jae
push
or
cmps
pop
(bad)
lock
retf
push
push
test
sbb
fs
stos
cmp
sahf
push
out
jb
xchg
pop
retf
dec
and
cmps
movs
imul
mul
int
sbb
mov
pop
cmp
xchg
or
sar
sbb
and
loope
cld
jno
or
xor
mov
mov
lods
(bad)
sub
(bad)
push
addr16
outs
lds
imul
imul
popf
push
sub
jge
ja
stos
sbb
test
icebp
pop
cmc
enter
and
jmp
xrelease
adc
lds
jnp
dec
int3
inc
leave
and
jecxz
inc
(bad)
or
push
mov
push
jge
jmp
scas
in
push
iret
jle
lods
jl
jg
push
leave
add
and
sbb
aas
in
xchg
xchg
inc
ins
call
mov
mov
dec
fdivr
fst
imul
jnp
add
nop
push
mov
popa
mov
test
push
pop
imul
add
bound
rcr
lods
pop
mov
pusha
call
(bad)
mov
mov
fwait
dec
xchg
icebp
pushf
jge
xchg
inc
ja
and
mov
jnp
(bad)
(bad)
mov
cli
and
inc
adc
out
sti
test
addr16
leave
mov
loope
dec
es
and
xor
pop
(bad)
sbb
add
ja
jg
shl
sub
jbe
xor
xor
pop
lock
stc
mov
sbb
pop
loopne
es
sub
(bad)
xor
in
push
fdiv
(bad)
sub
adc
xchg
push
rol
mov
push
dec
add
ins
sub
fdivr
push
cmp
push
cmp
jge
ins
data16
mov
xchg
sub
mov
fwait
mov
stc
and
cdq
adc
hlt
push
je
out
mov
jl
adc
cmp
and
pusha
jb
(bad)
loopne
jo
mov
out
nop
sbb
cli
pop
mov
and
jne
rol
fwait
mov
sub
in
mov
mov
in
loop
out
xor
das
jo
push
jne
cs
rol
jbe
int3
cli
fisub
outs
mov
mov
sub
mov
jb
loopne
or
inc
popa
in
adc
fwait
call
dec
aam
push
out
cmp
pop
jg
inc
sbb
fcom
gs
out
shl
sbb
imul
cld
dec
push
push
lds
repnz
cli
jno
iret
mov
in
add
mov
xchg
cld
in
hlt
mov
push
in
mov
mov
pop
popa
sub
add
stos
pop
xor
stos
stc
add
gs
push
mov
jmp
xchg
adc
aaa
lds
push
fcmovnu
jp
in
sbb
add
out
adc
stos
adc
jecxz
pop
jecxz
repnz
mov
sbb
and
and
push
cld
sahf
mov
cmp
adc
sub
sbb
cli
imul
repz
pop
clc
leave
pop
cld
and
neg
outs
sub
cmp
fcom
jp
inc
(bad)
call
popf
repnz
cmps
add
call
and
(bad)
or
sbb
pop
inc
sbb
repz
jnp
cli
and
push
je
xor
popa
cmp
dec
push
bswap
inc
popf
dec
inc
xchg
js
out
sbb
push
mov
dec
cmc
xchg
out
pop
std
pop
ins
cdq
jnp
test
jge
ror
lock
jle
fwait
mov
cmp
das
xchg
xchg
ja
rcr
xor
xor
fld
jmp
add
fcom
or
test
mov
movs
(bad)
dec
dec
int3
fwait
push
cmp
push
cwde
push
add
nop
adc
jp
jg
rcl
xchg
loope
jo
lods
leave
mov
pop
or
mov
lock
xor
test
sub
jnp
sub
loop
lahf
sub
daa
sub
push
jle
(bad)
sub
and
and
lods
sub
mov
mov
push
stc
cmp
mov
push
leave
repnz
or
pop
aam
scas
lds
sbb
mov
stc
aaa
aaa
hlt
ss
aas
cld
sbb
xlat
cli
cmp
xchg
call
sub
aaa
out
jle
pushf
sbb
mov
dec
push
xor
pop
adc
(bad)
adc
xchg
cmp
sbb
stos
cwde
xor
es
test
sub
ja
pop
aaa
shl
retf
xchg
retf
lahf
stos
add
xor
and
leave
inc
mov
test
je
inc
dec
inc
in
jmp
sub
or
mov
fnstenv
mov
mov
pop
cmp
repz
mov
cld
adc
outs
inc
sti
sbb
arpl
inc
popa
cmp
xchg
cmps
adc
cld
sub
repz
ins
arpl
sbb
sub
or
jae
je
aam
(bad)
pop
pusha
add
xor
inc
(bad)
stos
sahf
or
mov
and
(bad)
mov
push
in
sbb
fidivr
jmp
and
out
icebp
ins
mov
ds
cmp
add
repnz
bound
push
je
xchg
int
or
mul
cli
clc
and
pop
add
inc
out
fdiv
push
icebp
das
hlt
scas
sub
fs
adc
cmp
ins
xchg
xchg
loope
or
shr
sbb
push
or
enter
rcl
test
shl
sub
enter
out
mov
ret
lock
xchg
push
pushf
xchg
sbb
ror
pop
cli
daa
scas
imul
retf
cmp
mov
cld
in
movs
xlat
call
or
mov
push
sbb
add
xchg
mov
sub
(bad)
pop
push
les
jbe
cmp
into
pusha
or
inc
sub
pop
mov
sbb
or
sbb
mov
mov
push
loope
adc
mov
rcl
mov
lds
cmc
and
add
or
shl
and
ss
pushf
aad
pop
inc
aam
out
pop
into
pusha
adc
or
imul
mov
cmp
scas
push
cmp
popa
push
cmp
jb
push
mov
shr
sbb
maxps
ss
push
sahf
cmc
jns
sahf
or
nop
inc
lahf
stos
mov
int3
add
push
pushf
push
retf
int
(bad)
mov
add
xchg
and
int
(bad)
cmp
jg
ja
pop
adc
dec
clc
les
repz
ret
sub
cmp
mov
mov
arpl
popf
inc
test
push
adc
mov
cld
es
pop
stos
push
movs
shr
ror
mov
xor
or
and
or
cmps
lods
sbb
hlt
inc
les
sub
cld
pop
nop
gs
and
es
mov
outs
mov
outs
push
and
mov
inc
cmp
push
int3
repz
push
jle
pop
dec
je
nop
mov
add
es
cmp
push
jg
pop
iret
js
xor
pop
ds
push
inc
fs
bswap
fwait
mov
adc
and
mov
add
jbe
loope
sbb
or
pop
lods
outs
lods
arpl
pop
xlat
jnp
rcr
push
mov
ss
mov
mov
pop
dec
aas
adc
or
sti
push
mov
and
jg
mov
stos
xchg
lea
sti
and
mov
xor
xchg
mov
ja
fs
mov
scas
js
movs
mov
pop
js
test
jg
int
inc
mov
clc
inc
xchg
inc
jp
inc
sub
add
hlt
and
mov
lahf
xor
cmp
mov
push
push
dec
ficom
sbb
jmp
push
cld
mov
push
mov
int
in
fnstsw
out
jae
cmp
ins
push
xchg
add
lods
mov
xor
or
inc
retf
lahf
retf
xchg
addr16
adc
pushf
icebp
mov
int
adc
and
add
test
adc
fwait
or
std
add
push
xchg
(bad)
pushf
cmp
or
add
pop
in
sub
loopne
imul
pop
jl
icebp
test
(bad)
dec
lods
pop
pop
inc
aas
mov
pop
add
cs
xchg
inc
data16
outs
mov
fdiv
dec
push
cli
and
add
sbb
bound
stos
ror
es
jg
push
js
push
xlat
(bad)
outs
adc
dec
movs
and
jg
in
add
cmp
jp
mov
fcomp
jl
dec
jnp
dec
movs
mov
aad
test
std
in
(bad)
fist
stc
push
fld
pop
push
rol
push
jmp
jne
ret
pusha
int
mov
sar
fistp
fmul
jno
ins
and
mov
lahf
mov
add
lock
test
fcomp
addr16
setne
mov
push
pop
push
jno
test
ins
aaa
mov
sti
xor
mov
aam
movs
test
(bad)
stos
movs
mov
and
add
in
leave
sub
pop
adc
add
sub
movs
rol
jo
fwait
retf
mov
mov
in
out
inc
lds
mov
pusha
xchg
or
or
inc
pop
add
test
(bad)
loopne
cmc
mov
in
push
sub
in
add
ds
pop
rcl
cmc
mov
add
or
mov
xchg
iret
cmc
repz
js
cmp
sbb
ret
dec
mov
mov
push
in
(bad)
fwait
loope
pop
call
cs
jmp
ins
into
xor
mov
push
push
jno
jp
test
mov
inc
ds
mov
dec
pop
or
js
jae
rcr
adc
div
outs
mov
jmp
call
push
aam
fist
es
jmp
test
mov
sub
fist
data16
leave
jnp
ffreep
pop
shl
sbb
mov
ja
iret
std
pop
call
rol
test
cli
sub
data16
add
mov
jle
outs
mov
jae
mov
mov
cld
loop
aam
push
das
xchg
rcl
add
(bad)
hlt
xchg
jmp
test
shl
lods
jns
std
mov
jbe
xchg
pop
out
inc
mov
stos
mov
frstor
cmp
inc
mov
mov
inc
loope
hlt
cmp
bnd
sbb
pop
rol
aam
loop
mov
retf
cwde
repz
xor
pop
or
sbb
ret
fmul
add
or
cmp
adc
push
or
or
jo
push
call
mov
mov
outs
idiv
dec
call
push
into
sub
div
or
sub
jg
sbb
shl
out
and
repnz
lahf
fldl2e
or
dec
xchg
call
loope
pop
adc
pop
cmp
and
push
or
and
jo
aas
adc
mov
addr16
mov
and
add
pop
fild
mov
repz
sub
mov
pop
pop
adc
cmp
je
popa
mov
add
mov
push
jmp
push
or
outs
add
push
and
xchg
icebp
shl
push
fsubr
(bad)
lods
sub
int3
pop
xchg
mov
cmps
aaa
inc
inc
cmp
stc
mov
xor
jae
pushf
test
outs
imul
or
and
mov
leave
shr
push
in
inc
repnz
cmp
sub
scas
clc
lock
cmc
dec
xlat
xor
out
stos
mov
lods
dec
mov
jae
xchg
in
test
mov
stc
pop
push
xor
movs
outs
sub
sbb
pop
xor
sub
inc
cmp
in
rol
dec
call
cmp
sar
or
add
sbb
add
fidivr
mov
hlt
cmp
movs
mov
push
aam
bnd
in
mov
call
out
iret
xchg
aam
cmp
imul
addr16
xchg
(bad)
cmp
ins
dec
call
xor
mov
repnz
(bad)
mov
mov
mov
xchg
xor
xor
repz
es
(bad)
clc
mov
add
mov
mov
into
dec
push
inc
out
sti
sbb
jo
stos
xchg
add
jle
xor
stc
xchg
jl
aas
inc
cmc
and
pop
mov
mov
dec
xor
in
pop
mov
pop
fnstenv
movs
lock
push
mov
loopne
repnz
mov
mov
xor
pop
dec
pop
enter
imul
aam
scas
xor
iret
cmp
pop
dec
xor
out
loop
sti
ss
in
inc
cmps
bound
icebp
xor
pusha
movs
in
(bad)
rcl
xchg
or
cmp
(bad)
outs
loope
cmp
pusha
mov
adc
and
adc
pop
in
ja
retf
aad
lods
mov
dec
pop
test
cmp
jp
xor
imul
mov
xor
shl
(bad)
xchg
outs
push
cwde
call
sub
cli
push
jnp
xchg
mov
mov
enter
std
in
stos
jno
cmp
adc
(bad)
out
pop
dec
test
test
in
scas
icebp
xor
push
add
outs
fld
and
or
push
cmp
mov
clc
and
pop
pop
sahf
push
and
fsub
mov
iret
xor
xchg
jmp
in
pop
dec
bswap
jae
push
test
cmp
repz
jmp
aad
sbb
fld
push
xchg
popa
push
out
and
mov
pop
push
mov
fcmovb
inc
jecxz
cs
dec
test
in
cmp
adc
dec
das
and
jmp
clc
sahf
adc
arpl
sti
pop
jmp
inc
rcl
add
mov
loopne
mov
push
in
pusha
dec
retf
inc
pop
xchg
test
dec
mov
xlat
or
adc
retf
jmp
nop
jl
pxor
xchg
imul
sbb
xor
js
aas
outs
jecxz
ins
push
xchg
jle
hlt
push
push
mov
cmp
dec
jp
popa
call
dec
rcl
or
popf
ror
mov
mov
(bad)
mov
mov
pop
test
sub
fisubr
fsubr
sbb
arpl
and
adc
push
(bad)
ds
pop
lahf
xor
xchg
je
loop
jns
dec
push
jbe
ret
mov
jns
lahf
int
push
xbegin
scas
pushf
lock
shl
push
inc
jle
jmp
int3
cld
(bad)
adc
out
mov
popf
enter
push
imul
(bad)
fcomi
imul
jo
lods
loope
(bad)
fyl2xp1
hlt
sub
cmp
jne
pop
inc
test
jbe
test
adc
fstp
or
push
rol
inc
and
addr16
lds
sub
and
data16
(bad)
cmc
fsub
xor
ss
fcomp
pop
inc
ffree
push
ror
ds
dec
push
ret
out
or
mov
into
sahf
xchg
add
mov
shl
fdiv
fisttp
xchg
push
jne
mov
test
adc
fs
push
and
pop
leave
cld
arpl
pop
xor
jns
popf
loop
test
retf
fdiv
adc
test
xchg
nop
sub
lock
mov
jmp
ss
jb
stos
jmp
jbe
mov
and
mov
fwait
jge
push
sub
(bad)
cli
cmp
sti
push
fsave
mov
loop
ins
inc
lods
dec
fstp
movs
div
push
xchg
pop
mov
and
add
inc
pop
(bad)
and
mov
sub
dec
imul
mov
inc
call
xchg
mov
sbb
push
mov
mov
push
icebp
xor
mov
stc
mov
mov
mov
jns
and
js
mov
cmp
push
movs
xchg
xchg
or
jns
retf
sub
or
mov
lods
int3
cdq
dec
ins
retf
and
vcomisd
loop
fnstsw
dec
test
ja
jp
shl
sahf
test
scas
retf
fld
add
add
pop
sahf
test
mov
mov
mov
adc
mov
mov
push
pop
xchg
stos
mov
mov
pop
push
into
sub
mov
jnp
mov
sbb
pop
cmp
arpl
xlat
pop
sub
dec
mov
dec
or
jo
sub
xchg
dec
mov
sbb
loop
ss
sbb
fadd
push
mov
xor
loope
das
bound
fwait
jge
addr16
retf
mov
je
js
jecxz
mov
sti
cdq
and
add
ror
fs
nop
cmc
add
mov
aaa
out
repnz
jp
ds
call
test
lahf
imul
ficom
mov
mov
mov
sub
out
add
sub
mov
xchg
mov
xchg
(bad)
shr
loope
mov
xor
dec
in
add
rol
xchg
in
outs
in
push
std
cld
xor
pop
lds
add
push
lods
adc
dec
jecxz
retf
hlt
out
cmp
or
mov
cmc
mov
scas
fld
or
ficom
xchg
pop
icebp
dec
(bad)
lods
mov
jle
dec
xor
cwde
lods
pop
ror
mov
call
adc
(bad)
shr
push
mov
in
or
sbb
ret
int
cwde
imul
je
jne
(bad)
fsubr
fucomip
xchg
xchg
idiv
leave
push
ins
aas
leave
ficom
(bad)
fistp
retf
in
ja
js
mov
sbb
add
dec
xlat
or
mov
lea
clc
int3
ss
pop
xchg
dec
mov
rol
retf
pop
retf
push
lods
ins
or
pushf
dec
leave
lea
imul
lahf
mov
adc
stc
push
mov
jns
xchg
aam
and
sbb
not
clc
outs
imul
lock
cmp
and
or
inc
rol
loop
outs
add
xchg
jl
ins
push
pop
mov
ins
adc
ss
add
push
test
shl
aas
or
mov
lea
pop
pop
call
stc
inc
cmp
sub
xor
and
sahf
or
inc
pop
out
cmp
repnz
sub
mov
mov
outs
rcl
mov
cdq
test
clc
or
and
dec
push
sbb
call
call
xchg
cdq
loope
je
jne
add
pop
adc
ins
cmp
xlat
inc
sbb
or
inc
ds
pop
mov
lock
lock
and
add
aas
mov
mov
mov
pushf
dec
lods
fs
adc
jo
mov
aad
inc
cmp
mov
xchg
pop
sahf
xchg
mov
jge
pop
add
xor
and
pop
cdq
adc
ja
xchg
xchg
cdq
mov
cmp
push
cld
nop
out
mov
push
mov
lea
mov
scas
pop
es
inc
leave
fs
dec
stc
add
xchg
and
ret
mov
icebp
in
sub
imul
and
das
mov
shr
aas
xchg
dec
sbb
jne
fsub
sub
inc
xchg
jbe
or
mov
popfw
jb
pop
lea
aad
xchg
ins
jp
xchg
pop
cli
in
ds
adc
and
mov
in
xor
popa
sub
pushf
jb
pop
in
inc
cmp
cli
add
jmp
(bad)
les
test
stos
jbe
mov
pushf
mov
jmp
das
(bad)
sub
add
fild
push
(bad)
test
and
call
xchg
ins
and
push
cwde
xchg
cmps
dec
in
lods
xchg
xchg
pushf
mov
aad
xor
lock
push
jne
mov
sub
dec
es
ret
sub
mov
xor
mov
out
mov
push
jns
inc
pop
jl
jl
(bad)
jmp
cmp
pop
sbb
ins
in
fnstcw
jae
lods
push
fwait
loopne
adc
retf
lea
loop
int
pop
in
ret
jecxz
movs
out
das
mov
mov
sub
imul
sar
fs
add
or
add
sub
push
xchg
and
adc
sbb
pushf
fistp
ficom
sbb
adc
daa
jbe
mov
inc
sub
stos
pop
call
movs
or
cdq
push
call
js
pop
add
dec
sub
cmc
xor
adc
push
mov
push
mov
push
push
dec
xchg
stc
push
sbb
mov
cmc
jo
inc
xor
aaa
cmp
popf
frstor
repz
cmp
jbe
fnstenv
adc
pop
pusha
pop
sub
jmp
mov
sti
adc
outs
sub
or
imul
sbb
push
test
mov
retf
aad
xchg
das
movs
push
jecxz
jbe
jno
test
cmp
stos
inc
sahf
rcr
or
fild
out
rcl
dec
and
outs
pop
push
aaa
sub
adc
int3
fldenv
cmp
std
pop
arpl
js
or
test
jge
shl
scas
xchg
pop
je
stos
dec
cmp
(bad)
cmp
push
int
sti
ins
or
popf
cld
add
test
push
dec
rcl
sar
jb
dec
outs
repnz
sbb
sti
jmp
out
aam
ret
inc
pop
dec
ds
cwde
icebp
imul
cmp
push
(bad)
adc
call
mov
add
mov
jo
mov
inc
jmp
inc
add
adc
scas
iret
sbb
push
sbb
push
stos
lea
mov
jle
cld
sbb
mov
cwde
cli
mov
test
ins
sti
push
cmp
sub
ret
stc
mov
ror
mov
out
ret
or
mov
or
dec
adc
jno
jb
xor
fisttp
clc
and
(bad)
sub
movs
mov
dec
(bad)
fbld
add
jecxz
loope
(bad)
movs
jp
xchg
jg
inc
and
rcr
jle
data16
mov
cmp
mov
aad
push
xchg
push
inc
jbe
xchg
mov
loope
pusha
(bad)
add
mov
outs
hlt
dec
fld
lahf
pop
popa
and
sub
rol
sbb
mov
jmp
cmc
add
cmc
push
add
inc
pop
loop
repz
or
test
cld
cmps
lods
repz
pusha
inc
scas
stc
ins
out
sbb
cwde
dec
push
inc
imul
out
xor
cmp
inc
scas
fisttp
adc
mov
out
sbb
ficomp
fstp
push
dec
push
fdiv
aas
mov
repnz
xor
jecxz
sti
das
cmp
mov
or
dec
pop
mov
xlat
jmp
out
jmp
push
cs
fild
je
cli
xchg
push
mul
pop
cdq
xchg
out
out
push
or
pop
les
imul
clc
xchg
jmp
xor
xchg
cmp
sti
ins
pushf
pop
mov
inc
inc
sub
jle
pop
dec
fstp
das
shl
and
jb
sbb
aas
push
inc
jo
mov
mov
lea
test
cmp
mov
mov
std
fidivr
gs
fnsave
cmp
xlat
jbe
xchg
fwait
out
ret
adc
jmp
int3
add
jno
dec
xor
pop
repnz
fistp
or
lods
shl
retf
sub
jle
xor
mov
aam
bound
lea
test
shr
out
fdiv
iret
push
or
in
mov
mov
mov
in
cmp
and
test
adc
push
dec
shl
mov
nop
ins
das
or
pusha
out
push
out
loopne
(bad)
(bad)
retf
sti
(bad)
mov
cmc
out
jmp
(bad)
xor
or
popf
movs
icebp
adc
xchg
add
mov
mov
pushf
mov
not
retf
sub
ror
(bad)
sbb
in
mov
inc
pop
inc
pop
cmp
push
mov
call
dec
mov
into
push
jb
ss
xchg
cmp
cmp
dec
xor
jb
shr
(bad)
ins
out
stos
enter
in
ret
pushf
(bad)
addr16
xlat
jle
inc
mov
dec
lahf
push
jns
fistp
aaa
pop
mov
pushf
pop
xor
xchg
aam
popf
xor
pop
ret
push
cmp
mov
imul
jg
mov
jne
test
mov
mov
es
mov
aam
and
fisub
jae
sub
call
adc
or
or
aad
adc
add
jne
ror
pop
cmc
out
nop
push
mov
push
and
cmps
inc
jnp
xchg
mov
sti
jmp
jl
inc
jns
mov
sbb
xor
mov
cmp
clc
adc
and
ins
int3
sub
sbb
jno
push
adc
retf
mov
ror
mov
mov
js
sbb
fnsetpm(287
das
cmp
mov
clc
stc
dec
call
stos
sub
pop
shl
imul
mov
xor
mov
cmps
xor
int3
mov
in
sub
push
stos
mov
dec
and
clc
mov
in
push
in
xchg
ds
int
div
(bad)
pop
arpl
(bad)
mov
outs
xchg
mov
jns
or
mov
(bad)
or
mov
pop
xor
scas
mov
mov
mov
push
and
push
adc
push
nop
inc
adc
sahf
aaa
adc
fbstp
lahf
dec
cs
int
ss
jle
mov
cmp
and
into
push
cmp
cmp
sahf
sbb
push
aaa
stos
mov
sub
xor
add
icebp
rcr
test
mov
clc
mov
ins
outs
out
dec
imul
out
inc
outs
out
xor
leave
js
lock
fld
mov
and
jg
mov
xor
add
and
aas
adc
retf
inc
es
ja
jno
cmp
test
pop
sub
cmc
test
mul
test
(bad)
fsubr
add
popa
cmc
push
js
xor
or
push
jge
jmp
xchg
xchg
out
jg
out
xor
cmp
out
ins
xchg
mov
add
ins
inc
ficomp
test
add
pop
(bad)
sbb
ds
adc
add
jae
cmps
loopne
jmp
lahf
dec
push
xchg
js
loope
and
arpl
test
sar
in
add
xchg
jo
cmp
clc
cdq
ja
mov
dec
pop
test
repnz
pop
sub
(bad)
nop
ja
xchg
mov
cmc
call
jb
jnp
ror
pop
and
mov
rcl
mov
popf
fucomi
jnp
jno
and
movs
paddb
rdmsr
mov
xor
bnd
push
mov
retf
mov
into
aaa
je
adc
lods
add
mov
push
adc
shld
inc
cs
jle
mov
cwde
popf
cs
std
lahf
xchg
iret
xchg
jge
daa
xor
enter
pop
sub
aam
lods
xor
and
inc
sbb
out
xor
idiv
movs
out
retf
mov
fs
dec
pop
in
lock
retf
ins
(bad)
ss
jae
inc
fs
add
jmp
jbe
rcr
or
sub
inc
(bad)
mov
mov
out
mov
aaa
dec
mov
inc
pop
cmp
pop
pop
loope
add
test
adc
data16
in
movs
cmp
sbb
mov
pop
loope
adc
sbb
dec
sbb
vmovsldup
fwait
push
mov
inc
xchg
pop
xchg
(bad)
sbb
lahf
jecxz
adc
add
jno
mov
fnstenv
das
es
push
or
aad
sbb
cmp
in
mov
cmp
(bad)
fmul
or
push
mov
jnp
cmp
call
lea
out
fnstsw
aam
push
pop
xchg
adc
mov
sub
mov
lock
sbb
aaa
cld
mov
call
popa
imul
stos
dec
cld
scas
into
bound
arpl
fist
jl
lds
inc
mov
and
(bad)
jmp
les
outs
iret
aaa
in
mov
sbb
ficomp
call
add
jmp
cwde
add
adc
dec
(bad)
fdivr
les
(bad)
fmulp
cmps
test
mov
outs
ja
lock
cs
out
(bad)
enter
shl
push
lock
in
mov
rcr
leave
out
jge
out
jmp
das
jno
jae
out
sar
jne
hlt
jno
fucomp
mov
sbb
adc
fidivr
(bad)
fidiv
inc
add
das
and
jmp
pop
pop
xchg
pusha
mov
or
dec
mov
sub
sbb
cmp
jp
or
test
inc
imul
inc
cmc
arpl
sbb
cmp
sub
or
jecxz
push
mov
cmp
icebp
mov
sub
mov
mov
and
adc
scas
inc
sub
test
add
jns
sbb
in
fist
ficomp
mov
les
or
cmc
jmp
add
or
fisttp
cwde
xor
scas
cmps
fidivr
jae
xchg
add
dec
jno
(bad)
in
ret
add
sbb
sub
mov
idiv
xor
stos
push
pop
mul
scas
sub
push
ja
fdiv
js
stos
mov
lods
gs
xchg
jecxz
adc
xor
shl
pop
in
je
inc
pop
inc
cmp
pop
loopne
jbe
lahf
call
sub
ja
enter
rol
add
sub
test
cmp
mov
push
or
xchg
push
pop
loop
(bad)
loopne
pop
jb
xor
inc
jg
sahf
add
movs
inc
dec
mov
cmps
loope
test
ss
call
sbb
inc
push
pop
in
retf
pushf
xchg
xor
stc
mov
je
jecxz
mov
xchg
test
ja
das
out
mov
call
sbb
mov
and
sbb
jge
outs
ja
sbb
adc
(bad)
das
aad
mov
jo
int
sub
test
cmp
data16
inc
nop
push
lahf
je
sbb
push
cmp
leave
repnz
or
shr
jle
sbb
jecxz
leave
cmc
rep
jmp
test
ficom
retf
mov
xor
and
or
lock
fcom
dec
jge
mov
call
jecxz
mov
mov
(bad)
sar
sbb
jmp
adc
loopne
dec
inc
and
scas
movs
dec
test
repnz
xor
or
stos
int3
jl
test
dec
cmp
xchg
imul
jmp
jnp
in
push
jecxz
inc
lds
jnp
inc
pop
in
mov
(bad)
push
xchg
loopne
(bad)
lock
pop
in
loope
mov
pop
jge
push
mov
shl
sahf
and
out
dec
pop
mov
inc
int
ds
stc
xchg
test
pop
sub
cmp
pushf
in
daa
cli
cmp
(bad)
fst
inc
fxch
and
rcr
jmp
mov
cmps
es
jl
retf
pop
dec
retf
xchg
add
or
leave
mov
pop
lds
rol
mov
imul
mov
movs
mov
push
cld
mov
push
int
daa
imul
outs
leave
ret
out
dec
jbe
jl
mov
add
or
add
sbb
jnp
test
push
xchg
cmp
mov
cs
xor
mov
movs
in
add
test
test
add
(bad)
dec
cmp
lahf
pop
inc
mov
pop
add
fild
cli
pop
cmp
jb
cli
imul
dec
mov
ret
xor
push
xchg
push
loopne
add
dec
popf
iret
sbb
repnz
cmp
scas
jge
mov
pop
cli
xor
ret
dec
dec
retf
sub
shl
xor
mov
xchg
outs
loop
mov
popf
jmp
cmp
push
(bad)
mov
js
sbb
adc
add
adc
pop
test
std
mov
jb
dec
cwde
hlt
dec
adc
sbb
loop
pop
or
out
mov
pop
iret
popa
scas
or
lds
mov
add
inc
out
fmul
lods
mov
cdq
or
jo
sub
jns
rol
dec
cmp
aam
dec
rcr
in
(bad)
pusha
outs
loop
fldcw
cmp
or
lods
cmp
push
cwde
ja
inc
add
sub
or
lds
lds
jnp
jle
fidivr
cmps
outs
jmp
into
pop
outs
mov
inc
sti
sahf
mov
sub
xchg
mov
jne
sub
inc
or
xchg
rol
sti
mov
and
xchg
psubd
out
sub
adc
inc
cmp
into
sub
jg
outs
dec
jnp
ret
sar
mov
in
sub
xchg
cmp
mov
icebp
sub
xor
adc
je
cmp
mov
sbb
push
fisubr
daa
jne
shl
pop
les
mov
sub
mov
dec
dec
inc
(bad)
call
hlt
mov
sub
sbb
and
mov
pop
dec
mov
out
loope
jns
and
cmp
push
loopne
jp
shr
mov
(bad)
(bad)
and
cwde
(bad)
in
jo
mov
fmul
sbb
inc
push
popf
jp
iret
pusha
cmp
xchg
mov
lock
sub
cmps
movs
cmp
mov
and
inc
imul
xchg
mov
or
xchg
push
in
call
ins
call
xor
sar
rcr
aam
shl
jg
cdq
int
sahf
adc
and
xchg
retf
cmc
int
iret
xchg
mov
adc
fild
loope
mov
popa
pop
dec
xchg
clc
pusha
inc
mov
pop
sbb
out
inc
xor
fcom
sbb
mov
cmp
cli
nop
jg
fiadd
cmp
add
adc
stos
outs
jmp
les
enter
ret
mov
mov
jle
lods
jmp
inc
add
(bad)
push
into
push
fld
enter
js
mov
inc
sub
push
dec
inc
mov
mov
mov
mov
sub
aas
push
bound
ficomp
pop
into
cmp
mov
xor
mov
retf
inc
cmp
fdivr
cmps
repz
sti
dec
and
test
or
or
jo
jecxz
mov
adc
add
mov
pop
mov
jb
mov
not
mov
mov
xchg
dec
fsubrp
pusha
sub
cdq
icebp
sub
pop
loope
jmp
cdq
add
cmp
cmp
mov
push
scas
jle
and
stos
mov
aam
mov
adc
xor
scas
xlat
inc
cmps
mov
mov
retf
ins
mov
int3
cmps
sub
mov
cmp
(bad)
jns
pop
cmps
cmp
imul
or
push
inc
mov
cs
xchg
mov
div
fcmove
lea
push
jl
imul
test
pushf
in
jmp
sbb
je
dec
fs
ret
(bad)
fbld
mul
(bad)
sub
movs
push
xor
xchg
push
mov
jbe
dec
cld
mov
or
test
mov
pop
paddsw
sub
xchg
pop
inc
and
mov
push
mov
in
mov
mov
xchg
push
int
inc
dec
mov
or
fldenv
mov
add
pop
arpl
mov
outs
mov
sub
dec
fsubr
mov
mov
inc
ret
cmp
jl
dec
dec
push
mov
push
stos
push
in
xchg
rcr
mov
jp
call
cmc
xchg
gs
call
inc
in
sub
mov
popa
jae
add
xor
aas
xor
inc
mov
xchg
xor
xor
rcr
iret
add
jo
xchg
xchg
push
rol
push
outs
es
enter
in
ins
fisubr
jbe
mov
cmps
cld
cmp
jb
cdq
push
jp
inc
sub
jns
jl
aam
adc
js
std
(bad)
pop
scas
sahf
in
or
jle
and
in
mov
std
int3
mov
std
jge
pop
dec
shr
retf
mov
mov
push
xchg
mov
dec
push
push
in
jbe
xor
aaa
mov
pusha
xchg
sbb
add
fild
fwait
movs
push
pop
idiv
or
pop
test
or
push
add
jle
shl
inc
cwde
pushf
push
iret
movs
jmp
out
or
jmp
loope
jg
ins
jg
cmps
or
adc
fwait
sbb
xchg
dec
push
xor
jns
lock
mov
add
mov
into
cld
ud2
cli
cmp
sbb
cmp
sub
outs
out
stos
xchg
(bad)
or
movs
daa
push
jmp
or
and
mov
(bad)
ret
mov
and
fisttp
dec
and
ret
fmul
loopne
ror
cmps
(bad)
pop
jg
pushf
loope
mov
out
pop
jmp
sub
sub
mov
sub
adc
jmp
push
aas
stos
xor
arpl
inc
lods
add
dec
sbb
cmp
and
aam
loopne
in
mov
outs
xchg
imul
adc
mov
dec
arpl
arpl
sub
pop
imul
sub
popa
sahf
les
imul
dec
stos
addr16
push
mov
lea
das
es
inc
mov
movs
add
inc
inc
neg
dec
xor
inc
add
scas
scas
inc
iret
test
mov
pop
sub
movs
push
jo
(bad)
das
and
and
inc
mov
and
and
imul
dec
inc
cmps
scas
inc
inc
push
shl
stos
inc
sub
xchg
adc
xor
adc
pop
test
inc
inc
les
call
adc
dec
mov
addr16
loop
icebp
adc
sbb
add
add
repnz
shr
fld
dec
int
jecxz
inc
inc
mov
pop
scas
mov
add
push
adc
sahf
adc
add
icebp
or
and
repz
inc
push
iret
mov
out
leave
and
bnd
int
enter
pop
int3
jnp
jae
push
inc
das
mov
jae
cdq
loope
pusha
imul
sub
inc
push
jmp
jne
jns
xor
stc
add
lods
test
mov
adc
jo
push
dec
adc
cmps
mov
lods
xchg
out
push
int3
in
mov
mov
mov
outs
mov
hlt
xchg
xor
enter
dec
cmp
and
cmps
ja
push
dec
sbb
stc
and
mov
push
stos
xor
cwde
jecxz
sbb
jo
jne
push
or
loop
and
xor
dec
test
ret
inc
jno
jne
push
sub
arpl
lods
inc
gs
in
sbb
test
and
or
imul
mov
loope
(bad)
arpl
mov
or
pusha
movaps
leave
fs
out
icebp
nop
ret
xchg
cmc
clc
xor
jg
in
sub
outs
inc
sub
(bad)
popf
repz
mov
stos
adc
in
sub
pop
not
dec
dec
mov
lahf
push
mov
inc
jecxz
jne
sbb
jae
fsubr
shl
sbb
jae
leave
ret
jg
sub
jne
jnp
in
add
xchg
stos
push
push
sub
(bad)
lea
cmp
repnz
lds
into
xlat
inc
push
or
in
pop
cmps
or
js
popaw
xor
pop
jecxz
and
inc
movs
retf
xchg
js
xlat
pop
xor
push
sahf
jl
popa
dec
outs
adc
std
cli
mov
adc
test
iret
pop
outs
out
and
hlt
cmp
lods
jo
(bad)
test
les
leave
jae
inc
in
mov
or
test
fadd
inc
fsubr
mov
push
mov
and
fist
jae
and
add
fnsave
dec
in
lahf
je
xor
retf
aad
xchg
mov
ins
or
mov
push
lahf
xchg
not
popa
ret
rcl
(bad)
pop
neg
lock
rol
mov
mov
push
jle
jnp
xor
das
dec
dec
dec
fnstsw
mov
add
(bad)
icebp
sbb
ins
pop
out
cmp
mov
dec
adc
sbb
lock
and
shr
jno
shr
sub
mov
xor
sbb
xchg
out
fwait
iret
bound
push
sbb
test
lock
(bad)
test
pop
scas
mov
cmp
popf
add
adc
dec
ffreep
in
enter
mov
sbb
lahf
adc
cmps
in
fsubr
arpl
fs
mov
add
mov
popf
push
dec
jg
adc
bound
jle
loope
inc
sahf
aaa
and
or
lods
mov
in
and
shl
cld
adc
mov
call
cmp
nop
enter
nop
sbb
int
jge
sahf
mov
mov
repz
pop
dec
mov
mov
mov
test
lea
loopne
push
cmp
push
aaa
mov
loope
mov
and
sbb
inc
out
js
cmp
inc
push
mov
xchg
cmc
sub
or
inc
xchg
add
mov
push
jbe
js
sub
xrelease
push
(bad)
das
add
and
(bad)
mov
or
add
cmp
push
repz
lods
mov
leave
pop
xchg
cmp
add
jbe
mov
adc
and
or
sbb
fld
das
lods
mov
dec
data16
ss
fwait
push
mov
js
int
fs
inc
stos
repz
mov
mov
push
xchg
xchg
sar
sti
xor
inc
int3
pop
jae
fxch
mov
loop
jb
cmps
xchg
and
std
mov
into
imul
mov
shl
or
mov
add
cmp
movs
jns
cmp
psubq
ss
xchg
inc
or
mov
xchg
pop
test
enter
dec
sub
stos
or
xor
out
jmp
lea
push
mov
pop
data16
cwde
(bad)
cld
and
push
scas
lock
ss
inc
clc
inc
cmps
and
cmc
fs
aam
push
cmc
pop
test
pop
or
ret
push
popa
push
(bad)
(bad)
cld
mov
pop
int3
pop
in
jo
enter
add
jmp
gs
adc
sbb
imul
je
(bad)
sbb
mov
repz
pop
push
cmp
sar
and
(bad)
lock
outs
mov
pop
lock
sbb
or
mov
data16
in
and
or
(bad)
push
(bad)
or
scas
cmp
push
std
shl
sub
pop
sbb
and
jb
adc
sbb
sbb
pushf
shr
push
push
test
aad
mov
in
aas
adc
adc
out
lods
and
xchg
das
arpl
bound
jge
jl
cmc
mov
out
(bad)
cmp
js
push
enter
dec
pushf
mov
push
cmp
push
sbb
inc
enter
or
push
arpl
fisubr
jne
cdq
fidivr
imul
mov
stc
mov
(bad)
scas
shl
mov
daa
inc
or
jmp
add
pop
scas
into
repz
and
dec
mov
mov
(bad)
xchg
cmp
rcl
sahf
mov
add
pop
xor
xor
cmps
idiv
inc
loop
sub
into
call
push
arpl
sbb
jnp
fs
jge
jb
jae
jecxz
push
jbe
in
lock
mov
cmp
fs
push
fs
xor
cmps
xchg
std
arpl
cmp
clc
add
cwde
aam
rcr
adc
mov
pop
adc
sub
dec
repnz
or
dec
pop
sahf
dec
aas
test
test
sbb
cld
dec
mov
out
mov
out
dec
and
sub
ins
int3
sub
jb
sub
pop
mov
aad
push
and
xor
out
fstp
and
mov
mov
or
mov
push
iret
mov
dec
cmp
(bad)
retf
jecxz
mov
mov
fldenv
add
jb
adc
sub
fwait
mov
jle
adc
fnstcw
sbb
dec
or
clc
xchg
push
jp
mov
(bad)
sub
ror
cmp
stc
nop
sub
add
jno
adc
jno
mov
sbb
cli
xor
dec
repz
mov
mov
icebp
mov
xor
fucomp
add
aaa
sub
leave
push
inc
mov
dec
lahf
outs
arpl
enter
in
or
stc
in
into
jae
mov
dec
xor
shl
cli
out
jnp
rol
scas
cs
retf
pop
dec
jp
xor
lds
sar
push
jg
xor
mov
pushf
pop
add
pop
add
jle
pushf
rcr
xchg
test
mov
pop
mov
fild
leave
sbb
lods
ins
sub
cmp
or
(bad)
jb
cmp
sub
stos
not
scas
sub
rcl
add
pop
xchg
out
or
cld
mov
in
add
imul
xor
call
mov
ror
in
stos
pop
pop
xor
jmp
stc
outs
je
fisub
call
adc
dec
inc
fnstsw
cs
mov
xor
pop
push
call
sub
mov
out
daa
stos
cli
and
mov
pop
shl
movzx
adc
xor
cmps
or
dec
jmp
cmp
movs
sahf
sub
and
mov
bound
les
pop
xlat
xchg
xchg
sub
mov
fisttp
inc
shl
in
jmp
adc
jge
cmp
and
stos
sub
or
mov
cmp
inc
and
out
xchg
repnz
inc
or
pop
out
fwait
cmp
mov
pop
dec
adc
xchg
arpl
icebp
jmp
(bad)
test
(bad)
xchg
xchg
push
push
jns
add
outs
xor
arpl
test
or
retf
imul
add
cmps
mov
mov
mov
ins
mov
cmp
jp
in
pop
jle
es
movs
call
jb
inc
cmp
pushf
cmp
aas
cmp
xchg
sbb
adc
addr16
xor
xor
xor
in
add
ds
outs
js
movs
sub
xchg
dec
cmp
sub
jg
arpl
scas
pop
shr
fistp
mov
jle
jo
mov
aad
fs
sbb
jp
int3
mov
(bad)
and
pushf
or
sbb
out
mov
adc
cmp
scas
xor
test
jno
jne
push
cmps
(bad)
fimul
(bad)
pop
shr
inc
inc
fild
mov
add
push
test
mov
lods
mov
fld
cmp
mov
pushf
jecxz
shl
xchg
jns
test
or
mov
xchg
pop
inc
iret
in
ffreep
and
adc
jle
fsubp
int
in
fcmovb
(bad)
mov
mov
mov
jmp
into
cld
out
test
cmp
mov
and
enter
dec
inc
or
vpor
cs
xor
jecxz
cmp
repz
lods
das
xchg
mov
push
jnp
hlt
lock
xchg
scas
outs
adc
popa
lock
aam
call
jns
lds
or
(bad)
pusha
mov
sub
sti
add
cmps
push
and
pop
adc
in
jns
scas
jno
repnz
add
loopne
jnp
jp
repnz
push
(bad)
xchg
dec
mov
or
adc
lods
in
pop
popf
aaa
repnz
stc
not
stos
cs
lahf
push
push
add
sub
cdq
call
jmp
rcr
and
es
push
clc
inc
das
mov
adc
jg
retf
les
push
push
or
xchg
sti
jp
add
inc
pop
mov
xor
bound
shl
out
inc
ffreep
sub
sub
adc
jbe
rol
es
not
lds
popa
sub
or
ficomp
jmp
repnz
movs
mov
daa
das
and
mov
popf
aaa
ret
sti
test
jp
inc
sub
in
mov
stos
push
pop
and
push
ja
(bad)
sub
sbb
(bad)
cmp
test
mov
gs
push
adc
cwde
shl
mov
and
dec
stc
jne
retf
out
pushf
jle
shl
cwde
lock
sar
xor
ret
lahf
dec
fimul
dec
pushf
je
jle
xor
cdq
jns
jnp
cmps
lods
int3
stos
mov
dec
and
mov
iret
adc
loop
(bad)
ficomp
add
jp
sub
xchg
pusha
movs
addr16
int
cmp
mov
mov
imul
mov
rol
lods
or
add
and
idiv
inc
add
add
xor
daa
sub
push
cmp
leave
and
mov
mov
jmp
mov
jne
or
xchg
popf
shl
jae
je
cmp
out
sahf
in
or
repnz
jns
xchg
fwait
je
push
sbb
idiv
js
pop
arpl
mov
fadd
mul
enter
or
iret
int
test
jne
cmp
retf
or
std
lds
dec
pop
ss
sub
sub
inc
pop
test
out
jg
lods
push
outs
lods
pop
pop
push
mov
into
adc
gs
inc
out
inc
push
shr
fs
clc
outs
add
es
xor
adc
call
pop
sbb
sbb
dec
fnsave
jle
dec
fiadd
mov
(bad)
pop
outs
fucomi
push
enter
adc
adc
ror
arpl
aam
stos
mov
dec
mov
jp
mov
aaa
sar
xchg
mov
inc
hlt
mov
add
cmp
inc
sbb
sbb
repz
mov
pop
mov
mov
add
sbb
xchg
icebp
pushf
das
jns
dec
loope
inc
dec
lods
mov
icebp
jnp
retf
fiadd
xor
(bad)
mov
out
dec
adc
lods
shl
sbb
cmp
loopne
js
or
stos
pop
inc
pop
mov
in
cmp
jp
stc
data16
pop
test
jb
add
fcmovnbe
test
inc
adc
clc
pop
popa
and
cmp
jle
js
mov
jp
test
jl
paddb
cwde
inc
dec
jmp
cmp
mov
mov
lds
out
retf
sub
dec
push
jbe
mov
out
mov
mov
push
daa
push
inc
mov
sub
pop
dec
es
cmc
add
or
dec
push
cdq
bound
mov
in
(bad)
mov
ficomp
lods
mov
retf
inc
pop
sbb
mov
bound
jns
std
sub
mov
ror
mov
push
in
inc
sub
adc
add
add
out
std
dec
lods
add
cmps
sub
lahf
test
or
fst
xchg
and
out
adc
sti
or
loop
jmp
cld
cmps
cmp
cmp
enter
loop
loop
adc
cmp
outs
sar
adc
test
cmp
sbb
in
pop
not
ins
scas
ret
test
and
ins
out
sar
ds
sbb
cmp
les
rol
iret
loope
enter
add
xlat
repz
or
fdiv
cmp
ret
push
pop
fld
call
sub
popa
stos
cmps
shr
inc
mov
xor
aam
push
inc
xchg
ret
int
addr16
in
(bad)
pusha
lahf
pop
cmp
lods
cdq
inc
cmc
or
jmp
pop
test
sbb
jecxz
(bad)
cmp
jl
jmp
mov
cmp
dec
jl
xchg
jno
std
cmp
lods
nop
xor
adc
jns
xor
test
(bad)
movs
or
dec
jmp
cs
or
mov
test
mov
push
pop
cdq
inc
push
pop
xor
sbb
push
adc
(bad)
pop
adc
mov
and
dec
mov
or
adc
mov
and
lahf
mov
xchg
test
test
test
and
jmp
xor
adc
mov
out
leave
push
pop
(bad)
das
jmp
ret
es
das
les
ss
and
mov
sbb
gs
mov
retf
ds
in
into
jno
imul
(bad)
daa
pop
pusha
mov
add
popf
inc
and
cs
push
dec
shr
mov
pop
es
sub
aaa
popa
mov
push
lods
mov
sti
bound
ret
cs
jmp
mov
push
xchg
jno
xchg
stos
das
or
cs
imul
push
sub
lahf
mov
enter
pusha
les
enter
fwait
lock
mov
cmp
pop
mov
(bad)
lods
ins
lock
out
and
mov
mov
out
cmp
test
mov
or
shr
pop
or
mov
hlt
mul
repnz
fs
mov
mov
leave
retf
loope
mov
ret
fs
push
mov
or
jge
jmp
jae
jns
jp
push
clc
fyl2x
mov
cld
jle
stos
inc
rcl
fcom
das
cmps
inc
push
push
add
pop
push
popf
xchg
aam
xor
mov
or
call
cs
(bad)
in
in
movs
or
imul
xor
jg
lahf
dec
pushf
mov
adc
or
xor
enter
fadd
jmp
lea
cmps
ds
shl
dec
add
sub
sub
call
jmp
xchg
std
fwait
rcr
retf
pop
in
aaa
sub
or
(bad)
push
int3
fstp
ss
(bad)
test
pop
pop
in
call
bswap
xchg
xor
call
in
mov
ret
push
fs
jle
vpsubsb
inc
pop
ja
hlt
adc
jnp
hlt
inc
or
push
add
jl
(bad)
data16
test
das
push
pusha
jl
xor
jns
lods
dec
ret
inc
adc
or
ja
xchg
in
add
xchg
sub
jae
jns
cdq
jle
push
repz
(bad)
mov
xchg
test
dec
xchg
ret
cmp
movs
jmp
test
or
dec
ss
inc
inc
clc
aas
in
fsubrp
jl
loope
(bad)
add
mov
add
mov
xor
fwait
sti
fwait
push
adc
stos
mov
sbb
xchg
jno
loopne
jne
sbb
lahf
and
or
sahf
mov
(bad)
xor
dec
jmp
pop
cs
cmp
popf
mov
dec
mov
ins
add
outs
fwait
jl
arpl
mov
mov
jmp
add
scas
dec
jecxz
sti
fdivr
in
popa
sbb
jno
mov
push
sahf
repnz
das
test
dec
js
push
or
sub
inc
adc
cwde
jbe
xchg
repz
pop
leave
test
leave
sahf
push
mov
jl
out
popf
jl
sub
loope
or
retf
mov
int3
and
and
jno
icebp
jno
sub
dec
hlt
xchg
ret
mov
mov
aam
ss
je
jne
dec
pop
ret
rol
pop
aam
dec
hlt
dec
(bad)
(bad)
fdivr
popf
cmps
loopne
xor
sahf
dec
xchg
shl
adc
pop
pop
aam
or
add
out
out
sahf
call
push
cmp
repz
push
xchg
cmp
jmp
in
divps
int
cmp
mov
(bad)
scas
cmc
mov
inc
xchg
and
push
dec
shl
and
jg
fistp
sub
(bad)
sbb
lock
ret
test
xor
clc
adc
shl
into
dec
jmp
inc
retf
cmp
push
pop
in
jne
sbb
cmps
jns
mov
sbb
push
inc
xchg
int3
mov
nop
ret
lahf
(bad)
aaa
jne
dec
repnz
sbb
mov
movs
xchg
or
dec
iret
out
jo
push
jno
dec
fist
loopne
mov
sahf
outs
add
mov
aam
sbb
loop
mov
leave
(bad)
fldcw
retf
adc
aad
mov
xchg
mov
sub
ins
fs
xor
shl
repz
and
leave
jge
sahf
aam
loopne
shr
add
push
aad
test
dec
in
mov
pop
inc
sar
inc
inc
hlt
movs
ins
dec
sbb
fisttp
pop
push
test
adc
test
xor
or
loop
xor
pushf
ret
cwde
popf
mov
mov
fild
xchg
mov
(bad)
in
xor
mov
push
add
clc
out
or
cmp
xor
mov
test
xchg
stc
jae
sbb
repnz
jg
outs
das
mov
jne
adc
stc
jnp
ror
test
push
inc
add
and
(bad)
mov
pop
loopne
xchg
icebp
ret
dec
int3
in
pushf
fwait
and
repz
loope
pop
jmp
inc
icebp
aas
pop
push
out
hlt
adc
or
ret
(bad)
gs
fidiv
in
(bad)
out
addr16
arpl
xchg
and
mov
repnz
fidiv
mov
lds
int
xchg
and
xchg
icebp
xchg
jb
call
lahf
xlat
fcom
cmc
lahf
push
ins
out
frndint
pop
add
fisubr
or
aas
scas
jmp
mov
sub
mov
ins
pop
xchg
sub
imul
cmp
mov
vpshufd
cmp
push
xor
mov
mov
and
lods
mov
and
cmp
mov
daa
stos
xor
mov
mov
jne
xor
lea
cmp
(bad)
out
loope
pop
frstor
shl
ja
mov
dec
or
sbb
sub
test
jge
jno
cmp
cmps
add
call
sti
mov
arpl
push
push
inc
push
ins
jns
dec
dec
mov
enter
ror
fidivr
or
push
(bad)
(bad)
out
rcr
xlat
inc
repz
fcmovu
push
pop
aad
pop
aad
inc
pop
movs
gs
popa
push
fdiv
test
cwde
pop
adc
pop
mov
es
test
outs
mov
iret
in
jnp
dec
ret
rol
outs
outs
mov
push
mov
fadd
btc
sbb
sahf
jecxz
mov
and
shl
mov
add
shl
call
cmc
leave
pop
ret
add
stos
cmp
adc
gs
out
cmp
mov
mov
int3
fcom
sbb
or
gs
and
jae
imul
(bad)
(bad)
out
rol
adc
cmp
adc
sub
xor
inc
sbb
push
xchg
xor
jge
(bad)
sahf
retf
cmp
jb
sbb
repnz
popf
or
pop
in
not
fsubr
outs
inc
out
js
das
in
repnz
sbb
pushf
jmp
mov
ret
jno
pop
jno
jmp
outs
or
loop
loop
out
ror
dec
(bad)
jecxz
aaa
jg
adc
or
push
out
out
jb
daa
adc
adc
test
or
int
outs
pusha
movs
cmp
je
rcl
sub
cmp
lds
daa
out
loope
pop
jmp
in
je
push
mov
xor
dec
jg
push
adc
mov
xchg
dec
loope
fwait
je
push
jg
ficom
daa
mov
mov
ror
leave
cmps
mov
ret
jnp
mov
push
adc
or
sbb
ja
imul
icebp
fwait
adc
ins
jle
dec
xor
js
pushf
or
out
jecxz
push
mov
enter
fld
dec
jno
xchg
shl
js
jae
push
xchg
pop
jnp
push
sbb
adc
pop
push
sbb
jle
jg
push
call
ja
push
or
fimul
mov
fisubr
stc
xor
dec
icebp
mov
sub
cmp
fsubrp
xchg
mov
and
(bad)
in
test
cmp
push
stos
push
or
dec
cmp
jmp
je
xchg
test
lds
sbb
stos
xchg
(bad)
das
cmp
sub
jns
das
xchg
sbb
lea
(bad)
clc
test
xchg
rcl
popf
jecxz
cld
ss
cmp
pop
cld
xchg
mov
sub
jl
sub
fdiv
xchg
pop
pop
sbb
xor
adc
and
(bad)
in
mov
dec
or
mov
mov
(bad)
and
dec
jnp
jae
adc
iret
lods
pop
xor
(bad)
mov
bound
daa
and
and
cmp
pop
adc
sbb
or
sbb
sbb
xor
arpl
lock
jl
retf
(bad)
adc
in
mov
mov
idiv
mov
in
adc
ds
movs
or
mov
outs
fcmovu
add
and
retf
loopne
inc
jmp
sahf
or
cs
ss
or
xchg
inc
and
jmp
jle
and
sbb
icebp
scas
jo
jo
ficomp
imul
psrld
xor
sar
push
sub
push
iret
in
pop
mov
push
mov
mov
sbb
jle
mov
pop
adc
jo
or
ss
cdq
adc
sub
stos
mov
xor
lds
aas
jl
add
mov
inc
js
pushf
fisttp
xor
pushf
cwde
sub
xor
lahf
mov
lods
inc
mov
xor
pop
fidivr
loope
and
mov
cmp
je
popa
inc
stos
adc
int
sub
lods
push
cs
sub
jo
mov
mov
mov
(bad)
out
xor
notrack
(bad)
lods
xchg
inc
test
dec
lea
and
pop
mov
lahf
mov
sub
bnd
rcr
sub
or
xchg
mov
sub
ror
xchg
hlt
adc
jne
jge
mov
cmp
mov
scas
add
std
int
mov
pop
jmp
fimul
cmps
pop
int3
inc
stos
pushf
jge
fwait
adc
pusha
mov
lahf
or
das
gs
pop
test
fwait
mov
retf
adc
or
mov
ins
mov
stos
inc
mov
mov
cs
(bad)
aad
lods
jle
or
daa
inc
lea
push
ror
xchg
sub
arpl
pop
xchg
(bad)
and
sbb
sub
jae
fwait
sbb
xchg
lea
pop
lock
js
dec
daa
xchg
inc
add
jb
ins
dec
jge
loop
xchg
mov
lds
mov
je
jo
retf
ja
xor
jmp
inc
sbb
cmps
pushf
push
rcl
int3
push
ror
loop
(bad)
sbb
inc
cmp
mov
out
pop
loopne
pop
sbb
inc
pop
pop
retf
pop
sbb
clc
pop
out
scas
call
hlt
xchg
or
or
ror
and
jmp
jecxz
cwde
adc
jns
xchg
pop
sbb
adc
jecxz
jmp
ins
pop
ror
mov
or
cld
xor
xchg
loop
imul
push
or
fidiv
lahf
xchg
jbe
test
pusha
pusha
or
pop
adc
sbb
xor
add
pop
xchg
mov
loopne
rcr
(bad)
jnp
jbe
sar
inc
mov
cmp
mov
mov
push
arpl
popa
sbb
aad
xor
dec
stc
cli
test
mov
cld
sbb
cmp
call
fcom
or
stos
cmps
rcl
leave
add
push
jnp
jo
and
aad
and
jl
sub
jae
dec
add
push
repz
cmp
mov
(bad)
mov
movs
les
std
mov
retf
test
push
jmp
or
mov
sahf
pop
cmp
out
xchg
inc
nop
(bad)
and
fs
data16
fwait
daa
pop
jg
mov
jmp
sub
js
mov
mov
pop
xchg
sub
ficomp
call
scas
sub
in
push
data16
std
(bad)
jecxz
mov
jp
imul
loopne
sub
add
add
cmp
xor
fnstsw
inc
jecxz
cmp
aad
sbb
les
xchg
cmps
xchg
movs
es
in
mov
xchg
stc
ja
inc
push
jo
lods
mov
fimul
(bad)
aad
icebp
adc
xor
mov
push
ds
push
mov
psllq
(bad)
inc
and
push
lods
out
xor
add
mov
leave
test
push
xchg
mov
dec
push
stos
loopne
dec
(bad)
jae
cdq
arpl
ins
dec
mov
xchg
add
pop
xor
loope
cwde
repz
adc
xchg
mov
or
das
out
and
jle
xor
inc
pop
mov
(bad)
(bad)
dec
ins
xor
outs
jmp
retf
fdiv
push
loop
sub
nop
daa
ja
ins
ret
mov
push
add
xor
shl
or
adc
dec
ja
pop
sub
addr16
add
or
lods
pushf
into
(bad)
lods
xchg
test
or
push
rcl
jno
dec
in
in
mov
mov
lods
mov
and
adc
dec
pop
cmp
and
cld
jmp
xchg
inc
pop
mov
xchg
push
gs
imul
adc
or
sub
xchg
jmp
dec
fidivr
jecxz
stc
push
popa
rcl
mov
js
out
call
jge
push
imul
imul
mov
inc
cmc
mov
ins
sti
jge
arpl
jge
adc
dec
cmp
mov
lea
imul
aam
into
icebp
cmps
addr16
mov
sub
ins
pushf
movs
jp
jbe
dec
loop
jno
cmp
mov
push
xor
test
(bad)
jmp
outs
adc
xchg
pop
lahf
gs
in
and
in
jae
nop
mov
js
fisttp
rcl
mov
sbb
(bad)
sbb
int3
cmp
pop
fld1
adc
ins
cli
jle
(bad)
aaa
mov
jge
inc
mov
dec
int
lods
xor
or
mov
(bad)
pop
(bad)
ror
js
sbb
vunpckhps
aad
ret
push
inc
or
add
nop
cmp
inc
imul
jge
les
loope
sbb
pop
fucomip
loop
mov
mov
add
aad
loope
adc
dec
in
mov
dec
(bad)
mov
mov
push
pop
jbe
fcom
jne
pop
jb
jge
jmp
jnp
sub
jmp
imul
ins
or
les
push
dec
mov
xchg
mov
adc
in
inc
sbb
cmp
pop
test
(bad)
fsub
not
mov
push
pop
dec
push
stos
push
or
xor
aaa
lods
popf
mov
sbb
call
adc
ja
fiadd
mov
aad
shr
mov
sub
pop
add
and
cmps
sub
ret
cmp
pop
mov
mov
test
test
lahf
push
push
jl
(bad)
jnp
rol
or
jnp
mov
or
leave
rol
sbb
fstp
je
stos
xchg
inc
aas
pop
mov
push
sub
or
movs
pushf
add
push
pop
or
and
out
adc
out
(bad)
dec
retf
sar
ret
jp
js
dec
daa
xor
xchg
inc
popa
popa
daa
dec
pop
jge
fwait
fs
retf
xchg
sbb
sahf
dec
mov
(bad)
pop
xchg
aam
hlt
jg
lds
retf
fucomip
push
out
test
sub
cmp
inc
jmp
retf
movs
push
fistp
sbb
mov
xor
jne
jns
pop
(bad)
adc
jne
add
and
dec
or
add
pop
retf
xchg
push
or
xlat
fldpi
push
jnp
inc
and
ins
push
jae
sub
das
fld
cmp
jge
mov
jne
sbb
xchg
cmp
in
inc
or
sub
cmps
fnstsw
les
stos
inc
jo
(bad)
jns
inc
icebp
inc
scas
xor
nop
data16
push
inc
test
xor
jno
sbb
xor
jae
stc
repnz
ja
add
pop
sbb
cwde
jp
loop
outs
loop
push
stos
mov
mov
push
adc
rcr
popa
fwait
stos
pop
xor
xor
ror
xchg
sbb
and
xor
daa
enter
rcl
ss
cmp
mov
sar
in
adc
sbb
movs
push
inc
fstp
push
jmp
mov
mov
out
leave
sti
int
pop
in
xor
cli
fsub
(bad)
(bad)
lahf
sar
neg
mov
ss
or
mov
sub
or
mov
add
repnz
scas
cdq
sbb
adc
pop
push
out
pop
call
(bad)
mov
mov
mov
stc
xor
imul
(bad)
scas
jecxz
daa
loopne
aam
sub
retf
idiv
(bad)
popa
popf
scas
dec
aaa
aaa
adc
or
mov
and
jnp
pop
outs
inc
stc
jo
cmp
sub
(bad)
inc
mov
outs
xchg
mov
mov
pop
psubsb
push
xchg
and
xchg
(bad)
imul
mov
loope
or
inc
stos
mov
mov
add
and
in
out
jnp
add
das
mov
retf
(bad)
mov
ja
adc
jle
cs
pop
iret
or
aam
jp
js
adc
enter
imul
rol
jmp
sbb
inc
xor
push
mov
imul
mov
xor
mov
hlt
jp
push
(bad)
out
mov
loope
retf
(bad)
xchg
sub
stos
pop
push
jbe
inc
push
scas
shl
hlt
mov
sar
dec
es
and
cmp
(bad)
out
fld
jge
xor
test
call
push
lds
jne
into
mov
push
(bad)
add
sub
pop
sahf
loopne
dec
add
aad
jle
ror
cs
stos
out
mov
xchg
xor
dec
or
dec
data16
lods
xor
push
out
pop
fdivr
inc
mov
mov
mov
mov
adc
pop
mov
pop
pop
mov
stos
popf
sbb
sar
adc
mov
ror
retf
in
xchg
inc
test
aaa
inc
pop
int
jle
sbb
sub
dec
and
sbb
fcmovnbe
sbb
push
fadd
pushf
push
sbb
(bad)
fadd
call
out
mov
push
ffree
pop
xor
pop
mov
adc
jmp
out
push
mov
mov
pop
bound
daa
ja
mov
jl
mov
xchg
fs
mov
jmp
mov
out
movs
or
inc
push
int3
fbstp
(bad)
gs
push
inc
mov
aam
stos
in
xchg
or
dec
sbb
jbe
jmp
mov
pop
mov
push
push
outs
xor
mov
fdiv
nop
inc
data16
cmp
retf
and
popf
sub
(bad)
or
sahf
jo
in
into
fbstp
push
add
xor
push
jae
mov
stos
pop
jmp
sahf
test
mov
sbb
mov
pop
mov
jno
adc
mov
sub
bound
sub
inc
add
mov
jecxz
test
fs
mov
fwait
adc
mov
add
or
mov
add
mov
aaa
and
mov
mov
inc
pop
enter
jnp
push
ret
add
retf
push
(bad)
mov
frstor
(bad)
push
pop
mov
sar
xor
into
mov
fimul
(bad)
pop
out
adc
pop
movs
ss
sub
cmp
aad
scas
cmp
popf
mov
(bad)
mov
sub
dec
hlt
dec
dec
cs
xor
mov
xchg
push
adc
cmp
movs
cmps
push
xor
and
fld
pop
sbb
push
or
sub
inc
fnstsw
mov
lods
(bad)
cmp
jns
mov
xchg
jecxz
sub
push
ret
inc
cdq
(bad)
sbb
pushf
fs
push
dec
inc
sub
js
inc
sti
xor
xor
adc
stos
adc
xchg
push
inc
lea
mov
mov
lahf
adc
retf
mov
cdq
enter
xchg
(bad)
cli
mov
retf
dec
adc
jg
xchg
lea
cs
data16
fild
loope
sub
cmovle
lds
add
pusha
nop
ja
push
stos
adc
push
sub
pop
push
pop
(bad)
dec
inc
push
or
dec
pop
nop
sub
ins
ds
gs
fist
fistp
cmps
jmp
or
les
jmp
(bad)
cmc
sar
jbe
push
aad
icebp
adc
sbb
stos
jg
mov
out
(bad)
repnz
cdq
pop
enter
mov
dec
xchg
test
out
push
jne
mov
outs
mov
mov
std
push
cmovb
fadd
jb
je
push
test
(bad)
dec
(bad)
fild
hlt
cld
movs
pop
cld
aas
out
scas
pop
xchg
data16
pop
push
clc
(bad)
pop
pop
pop
and
sbb
xor
inc
inc
mov
push
aas
in
out
adc
push
sbb
or
adc
adc
jno
imul
aam
push
sbb
xchg
pop
popf
xchg
dec
push
push
mov
mov
pop
cli
xor
int
and
in
int
cli
inc
dec
rcl
jp
and
stc
out
and
mov
pop
jl
das
pop
or
jle
jb
sbb
adc
pop
pop
xchg
jnp
mov
bound
jnp
stos
mov
out
push
xor
stc
je
das
sbb
dec
push
xchg
pop
mov
jns
xchg
mov
das
cmps
pop
sub
pop
or
inc
js
(bad)
jmp
sub
dec
in
mov
es
ret
ins
or
imul
rol
test
lock
xchg
jae
sub
lea
push
sbb
push
ret
jg
imul
push
(bad)
and
lods
and
dec
lds
cmp
retf
fs
xchg
fld
dec
jb
es
out
xor
xchg
pop
mov
dec
ins
stos
rcl
mov
fidivr
call
jmp
xor
nop
lea
outs
mov
out
gs
cmp
pop
mov
add
jmp
dec
jb
rcl
add
xchg
cld
out
ins
mov
add
loop
and
jl
rol
stc
in
ja
xchg
(bad)
pop
adc
ins
dec
repnz
test
ret
jge
mov
sub
push
and
pop
mov
mov
test
push
sub
cmp
stc
jno
popf
fdivr
or
and
sbb
out
mov
ins
ds
mov
add
pop
mov
cli
fs
mov
sbb
fcom
retf
pop
sti
movs
push
clc
ins
shr
jg
mov
pop
fdivr
scas
dec
add
rdtsc
les
cmp
stc
cmp
lea
mov
das
ja
adc
(bad)
jbe
sbb
or
inc
stos
cmp
pop
out
lea
and
mov
(bad)
mov
fstp
add
dec
mov
repz
test
shl
bound
add
cmps
xlat
push
xchg
mov
fsubr
imul
inc
int
or
dec
push
sahf
retf
jmp
hlt
push
arpl
pop
xor
nop
or
jbe
sbb
lock
push
mov
(bad)
mov
push
jmp
xor
and
aad
add
mov
sub
mov
jne
push
or
fcmovu
les
in
lods
mov
(bad)
xor
inc
lock
ins
movs
mov
into
push
pushf
aam
mov
mov
ret
and
add
add
loopne
mov
repz
lock
inc
dec
ins
inc
popf
adc
fwait
mov
icebp
or
das
movs
cwde
pop
xor
jo
dec
imul
rcr
cmp
sti
and
stc
(bad)
inc
sub
adc
push
jno
mov
inc
mov
imul
gs
out
test
das
pop
ins
and
out
pushf
cs
jl
sti
sub
out
cld
popf
hlt
pop
add
call
xlat
lahf
loope
mov
and
in
mov
les
jb
jecxz
adc
shr
jo
jecxz
out
mov
mov
add
mov
cmp
or
sub
jne
arpl
jp
push
(bad)
retf
and
and
jmp
mov
mov
pop
pusha
xchg
jecxz
sub
shl
mov
cmp
in
sbb
mov
sbb
jecxz
sub
mov
xchg
pop
das
(bad)
out
ins
out
das
cdq
xor
xor
test
mov
mov
inc
xor
aam
(bad)
out
xchg
mov
fwait
and
iret
cmp
and
inc
iret
shr
loopne
fnsave
pop
retf
mov
in
fldenv
fwait
out
fs
adc
push
jl
sti
sahf
nop
test
outs
mov
and
movs
mov
or
xchg
dec
or
inc
mov
or
data16
mov
retf
cmp
not
mov
sar
jbe
pop
icebp
jmp
inc
or
pop
ror
(bad)
rol
fiadd
or
sbb
lds
fs
jg
and
fdivr
in
out
ins
jne
stos
ret
xchg
sbb
mov
sub
jno
inc
popf
loope
test
xchg
jp
mov
or
inc
push
enter
sub
and
jbe
out
movs
adc
mov
mov
cmp
pmulhw
jge
ss
int
mov
rcl
pop
dec
xor
push
pop
push
cmp
fst
xor
test
into
fld
inc
in
jne
ins
jl
pop
pop
lahf
dec
(bad)
stos
mov
int3
adc
cmp
adc
fdivr
jge
ret
dec
jae
comiss
ds
stos
and
dec
mov
loop
loope
rcl
sub
cmp
fcom
icebp
fsubr
jmp
arpl
mov
ja
call
and
or
sub
add
mov
fwait
cmps
loopne
and
pop
inc
(bad)
lods
lods
test
nop
in
add
pushf
fucomi
pop
xor
addr16
loop
push
loope
call
mov
pop
xchg
scas
lds
sahf
iret
mov
dec
ins
mov
and
shr
cmps
fadd
xchg
inc
or
adc
mov
dec
pop
xchg
int
mov
add
push
pop
iret
aad
cmp
ret
jnp
dec
lahf
std
inc
(bad)
cmp
jle
mov
mov
pop
adc
lock
fmul
enter
js
jg
mov
mov
mov
pop
mov
(bad)
or
ret
ret
pop
pop
inc
popfw
pop
loop
(bad)
inc
scas
in
ss
pop
jno
jmp
push
cmp
sub
(bad)
imul
out
inc
xchg
push
xor
push
pop
or
xor
loopne
fidiv
pop
ret
inc
je
xchg
jno
jge
or
cmp
pop
and
retf
test
out
(bad)
mov
mov
mov
xchg
adc
shr
dec
mov
fdivr
xchg
xchg
out
ret
or
inc
push
and
scas
push
jecxz
dec
jg
fcmove
pop
sbb
mov
outs
xchg
mov
(bad)
mov
ins
inc
in
aas
mov
out
cmp
push
inc
repz
ja
shl
imul
pop
dec
in
jns
sub
sbb
fwait
xor
out
enter
and
cld
xor
pop
inc
jge
retf
sub
fsub
(bad)
scas
and
retf
pop
push
rcl
adc
xor
dec
in
je
dec
xchg
mov
and
stos
adc
mov
loope
ret
xchg
addr16
mov
ss
push
ss
hlt
les
xor
aam
dec
lahf
push
and
and
int3
pop
mov
stos
sub
pusha
loopne
or
(bad)
mov
pop
adc
mov
push
daa
inc
pop
bound
pop
bswap
adc
dec
jmp
ret
xlat
outs
add
add
lock
into
jb
fisubr
out
jl
movs
ins
dec
xor
xchg
xor
imul
lahf
sub
mov
lahf
mov
std
and
out
ret
out
or
std
pushf
imul
dec
sub
dec
mov
inc
xchg
js
icebp
lods
test
(bad)
mov
mov
xchg
aas
push
(bad)
inc
dec
push
enter
in
aaa
xor
inc
shl
push
shl
call
cmp
jmp
sbb
add
and
test
jbe
xor
test
adc
mov
adc
cmp
stos
add
test
xchg
repnz
xchg
sti
nop
(bad)
xlat
ins
or
xchg
jg
mov
jae
add
jmp
ds
jnp
mov
mov
sub
push
(bad)
and
mov
retf
sub
dec
sbb
pop
xchg
adc
pop
xchg
je
cmp
loopne
into
sbb
push
retf
shl
and
loop
je
cmps
scas
fst
pop
sub
daa
imul
fstp
iret
cli
lock
fcmovb
mov
mov
dec
out
aas
pop
cmovle
fcom
mov
std
es
cdq
lock
mov
jae
lea
neg
out
lods
pop
cdq
and
movs
test
mov
add
aaa
push
mov
jns
stc
aaa
call
inc
or
les
int
(bad)
adc
dec
(bad)
leave
pushf
inc
inc
popf
push
in
xor
inc
dec
fiadd
outs
adc
xchg
push
mov
xchg
call
add
mov
sub
cdq
lahf
push
test
push
inc
jmp
enter
stos
ins
and
dec
icebp
dec
and
cs
pop
pusha
outs
test
in
and
and
lods
rol
retf
aaa
and
inc
mov
jno
cmp
loopne
pusha
test
cmp
push
and
aam
lahf
div
shl
mov
mov
ficomp
sub
cmc
clc
xlat
sbb
lods
inc
ret
mov
jecxz
xchg
inc
retf
lea
dec
daa
mov
mul
stos
fnstcw
daa
retf
jns
push
pop
add
(bad)
lock
pop
jbe
add
push
jae
(bad)
aad
xchg
pop
fidiv
mov
mov
cmc
xor
cmp
test
ret
and
sar
lds
add
les
adc
cmp
sbb
les
mov
adc
(bad)
cli
cmp
add
sub
cmc
(bad)
sbb
push
outs
jp
loop
pop
and
inc
add
mov
jbe
clc
dec
pop
int
rcl
pop
sahf
test
rcr
mov
inc
jmp
fucomp
xchg
sub
rcr
scas
and
cs
or
imul
or
mov
jno
out
fisttp
sbb
jae
jl
pop
mov
cmps
jno
mov
loop
mov
das
sbb
cmps
mov
cmps
repz
scas
sbb
sbb
adc
push
repnz
arpl
gs
movs
mov
pusha
cmp
inc
fisubr
dec
out
mov
push
scas
not
dec
(bad)
daa
push
inc
push
jns
cld
xchg
cmp
or
es
adc
je
xor
dec
popf
cmp
fstp
dec
add
xor
pop
(bad)
jb
int
pop
out
xchg
fs
pop
xchg
xchg
nop
sub
mov
and
mov
mov
jmp
xor
or
es
cwde
loopne
push
div
arpl
add
clc
mov
dec
nop
jno
add
dec
xor
ins
popf
cwde
enter
xor
push
adc
ja
(bad)
dec
lods
shl
mov
retf
pop
or
and
dec
mov
sbb
adc
inc
js
xchg
mov
or
mov
int
gs
not
in
jb
ins
xchg
and
mov
and
mov
bound
daa
iret
rcl
movs
jp
daa
or
dec
and
rcl
pop
jge
(bad)
push
and
mov
mov
xor
mov
xor
(bad)
js
lea
pop
add
adc
hlt
movs
outs
lods
cmc
push
jno
(bad)
mov
dec
sub
add
or
cmp
pop
add
pop
xor
out
push
stc
adc
sbb
jmp
xchg
push
xor
mov
jl
nop
cdq
out
out
sub
mov
push
inc
mov
or
push
xor
mov
cmc
and
xchg
lods
mov
repnz
mov
ja
shl
jg
inc
sub
test
rol
sbb
js
or
or
cmp
imul
adc
popa
mov
inc
push
xchg
mov
push
je
(bad)
fnstcw
push
or
inc
mov
add
xchg
out
mov
jg
sub
arpl
sbb
fs
jns
jo
cmp
mov
pop
inc
inc
pop
les
mov
adc
sub
xor
popa
in
xor
jecxz
add
dec
cmps
movs
adc
jecxz
pop
push
fstp
pop
(bad)
out
in
pop
out
pop
fmulp
jl
and
inc
pop
rol
cmp
sahf
jmp
mov
aas
jnp
(bad)
ret
dec
mov
mov
jne
mov
mov
dec
adc
inc
push
(bad)
rol
fsubr
sbb
ja
shl
sub
inc
cmp
in
xchg
bound
aad
cmp
fidivr
add
cs
dec
test
pop
aam
cmp
sahf
pushf
pushf
ret
add
dec
ins
ja
mov
sbb
cmps
xchg
dec
push
add
cmp
popf
sti
cmp
aam
or
xchg
mov
push
lods
cmp
stos
rcl
arpl
imul
bts
test
aam
push
dec
xor
cmp
les
fdiv
(bad)
scas
jl
arpl
fstp
cdq
retf
in
mov
or
mov
dec
lahf
push
sub
jo
or
jmp
dec
xor
imul
mov
pusha
aam
fild
pop
mov
imul
pop
cwde
ins
outs
jne
aam
lahf
cmp
mov
xor
inc
arpl
loop
jno
(bad)
fimul
jns
(bad)
aad
in
pop
(bad)
ins
pop
cmps
fisttp
pop
(bad)
pusha
or
pop
loope
add
adc
pop
mov
(bad)
or
mov
(bad)
ds
xor
jo
dec
mov
add
sub
cwde
sub
and
pop
lea
push
push
in
test
mov
icebp
push
push
lahf
sub
mov
das
push
inc
fcom
mov
inc
pop
mov
inc
xor
gs
pop
dec
jne
mov
imul
push
int
rcr
dec
sbb
push
les
mov
and
sbb
je
pop
and
stos
hlt
push
test
mov
add
mov
int3
mov
or
loope
lds
jmp
rcr
push
ins
adc
cs
xor
lods
dec
inc
test
inc
dec
fwait
sysret
push
ss
out
lods
retf
lea
aad
sub
adc
pop
mov
sub
jmp
es
or
enter
ja
stos
cdq
cwde
daa
outs
and
sub
adc
out
shl
rcl
inc
push
mov
(bad)
ins
cmps
enter
lea
and
and
or
das
mov
int3
mov
stos
add
mov
add
call
pop
pop
fldenv
popf
sub
loope
jnp
xchg
scas
scas
fwait
sub
rol
pushf
mov
gs
mov
mov
push
or
ret
mov
cmp
fcom
sub
mov
int3
push
inc
add
add
je
push
bound
mov
movs
icebp
lahf
aad
push
mov
adc
sar
mov
dec
pop
adc
movs
mov
stos
dec
aam
adc
sub
pop
popa
bound
bound
int3
icebp
sbb
sahf
out
popf
add
xchg
std
std
cs
sub
xor
in
loopne
push
sbb
push
sti
aas
scas
mov
jne
push
mov
inc
repnz
fidivr
and
mov
das
xchg
cdq
mov
xor
mov
pop
aam
or
push
push
inc
pop
in
adc
mov
jns
cs
mov
mov
add
cmp
scas
mov
mov
movs
lahf
sar
jecxz
mov
rol
or
ficomp
adc
arpl
test
adc
adc
jo
jl
sbb
add
fchs
nop
or
push
and
jge
mov
mov
mov
pusha
scas
in
jmp
lods
inc
movsx
jno
nop
int3
mov
and
mov
xor
or
pop
mov
inc
cwde
push
mov
popf
adc
test
retf
jp
shl
push
add
test
repz
xor
add
cmp
dec
int3
sub
cmp
xchg
sahf
push
push
xchg
add
mov
cmp
push
xchg
mov
sbb
retf
or
jmp
xchg
push
add
pop
imul
mov
mov
sbb
push
pusha
fiadd
xchg
and
xchg
iret
(bad)
cmp
lea
xor
push
jmp
call
retf
pop
cmp
repz
sbb
sub
push
les
scas
test
ins
and
jecxz
hlt
or
mov
cdq
jne
add
jmp
pop
dec
pop
inc
mov
push
mov
scas
pop
stos
shr
sub
push
mov
bound
cmp
mov
nop
xor
sub
adc
push
adc
call
push
jl
retf
(bad)
and
sub
add
jo
repnz
push
cs
dec
pop
ss
cli
xchg
clc
sub
pop
sub
in
mov
push
add
push
push
repz
leave
cmp
xchg
mov
xor
out
adc
dec
xchg
enter
scas
adc
leave
call
je
dec
(bad)
pop
push
jne
jns
xchg
cs
mov
inc
(bad)
push
sbb
stos
add
rcl
mov
adc
add
cmp
pop
mov
mov
mov
pop
mov
jae
jnp
dec
xlat
dec
push
push
lods
test
push
mov
cmp
pushf
push
xor
aad
aaa
mov
jns
aas
cmps
sahf
shl
fidiv
inc
gs
pop
fisttp
jbe
repz
xchg
push
mov
imul
sbb
jbe
je
dec
dec
ror
or
xchg
sbb
nop
jl
xchg
idiv
(bad)
and
sbb
pop
leave
ror
sub
fs
sub
std
scas
mov
mov
dec
xchg
mov
and
icebp
xchg
sub
shl
mov
mov
sub
mov
push
adc
pop
mov
stc
pop
adc
pop
xchg
adc
xchg
cld
ss
mov
jg
fwait
pusha
jns
sub
cmps
cmp
dec
aaa
aad
add
movs
fld
pop
sbb
cdq
cmps
mov
popf
pop
mov
pop
loop
pop
jns
pop
out
call
nop
aam
lock
mov
push
bound
push
fs
retf
ja
in
sbb
lock
test
in
mov
cdq
inc
and
jge
mov
xor
fadd
fwait
lea
cmp
shr
and
inc
mov
outs
cmp
xchg
jno
loope
adc
mov
bound
ins
call
jmp
out
and
aaa
add
daa
lahf
and
popf
xor
xlat
(bad)
jg
fwait
jge
pop
sahf
jge
jbe
cmp
inc
pop
push
arpl
sar
pop
sahf
mov
fwait
add
mov
sar
stos
clc
lds
and
aaa
jmp
test
ins
(bad)
dec
cmp
mov
inc
adc
jecxz
outs
inc
ret
pop
sbb
inc
ficomp
xor
jge
(bad)
jb
jno
or
int3
gs
call
inc
in
(bad)
push
jae
sbb
and
out
(bad)
xchg
jmp
cmps
in
xor
aas
jne
jl
mov
inc
xor
cmp
movs
dec
mov
xor
dec
add
dec
mov
pushf
lods
xor
fcom
paddd
cmp
hlt
jae
cmp
neg
adc
fst
cmps
sbb
pop
xor
js
inc
cmp
pusha
mov
jmp
(bad)
addr16
das
xor
out
fiadd
mov
call
aaa
call
fcmovu
into
retf
pop
sbb
dec
pop
mov
sbb
pop
jo
pusha
pop
lea
bnd
pop
leave
ins
xor
lock
test
mov
mov
jmp
mov
sub
mov
xchg
icebp
stos
inc
xchg
outs
pop
cmc
(bad)
(bad)
iret
jo
sbb
sub
push
add
add
xor
scas
(bad)
cli
mov
int3
test
dec
sbb
push
cli
sbb
mov
xchg
mov
mov
inc
sti
daa
lods
xchg
fcmovnb
inc
in
and
scas
push
jge
mov
sbb
xor
neg
jo
jmp
stos
fisub
ds
pop
ins
cmp
xchg
ficom
cwde
push
mov
ins
jecxz
inc
jne
gs
fs
push
cmp
jp
popa
lea
or
mov
add
imul
mov
jge
pop
mov
inc
xchg
aaa
jge
add
dec
push
and
bound
lock
mov
clc
xor
mov
out
jge
jbe
jno
add
out
loop
(bad)
jl
lea
xchg
mov
jl
push
inc
push
call
jnp
sbb
pop
jmp
add
sbb
jecxz
fldcw
jmp
sub
dec
aam
retf
xchg
retf
jecxz
inc
ror
dec
lea
mov
and
test
in
mov
jne
hlt
mov
mov
popf
cld
(bad)
shr
pop
push
cwde
and
popa
fidiv
in
and
cmp
out
sbb
fnstcw
xchg
mov
shl
retf
std
or
out
hlt
dec
(bad)
call
aaa
das
jl
mov
pop
and
sbb
or
fld
sub
dec
or
jmp
mov
and
mov
dec
adc
dec
or
xor
lock
xchg
test
dec
popf
dec
dec
arpl
mov
scas
ror
pop
daa
jno
xchg
push
in
test
aas
mov
pop
dec
add
pop
in
mov
push
mov
pop
mov
xchg
sbb
adc
push
repnz
jl
add
je
jne
inc
push
repnz
into
cs
jmp
mov
add
test
inc
sbb
sbb
fs
add
and
mov
push
aad
cmp
inc
mov
or
pop
fs
(bad)
popf
out
ss
call
jb
jle
adc
das
pop
mov
inc
cmps
pop
dec
rol
push
sbb
fisub
dec
fidivr
jb
mov
pop
div
ficomp
inc
cs
lods
(bad)
fs
push
retf
mov
push
jae
nop
mov
xchg
xchg
loope
dec
js
bnd
xor
dec
mov
sar
dec
cmp
xor
jp
sbb
inc
inc
out
arpl
addr16
das
push
mov
lahf
mov
pop
test
repnz
or
sbb
test
sahf
repnz
jmp
push
and
xchg
aaa
pop
push
out
jb
xor
rsm
ins
aas
xor
jl
push
imul
cs
movs
push
adc
sub
and
test
nop
fadd
and
pusha
mov
inc
mov
les
shr
mov
test
add
sub
and
inc
xor
ret
movs
scas
xchg
jae
test
lock
repnz
dec
ret
pop
gs
enter
bound
dec
cli
aam
xchg
push
aam
movs
out
sar
inc
das
add
mov
mov
xlat
mov
sbb
jno
(bad)
popf
jge
retf
sbb
jo
cmp
push
lds
adc
mov
dec
fdiv
retf
push
sub
push
addr16
pop
pusha
(bad)
sahf
dec
test
pop
push
xor
pop
xchg
mov
xchg
mov
add
imul
les
jmp
movs
pop
scas
leave
or
or
iret
mov
mov
je
jne
lds
jge
(bad)
xlat
and
or
mov
jecxz
sub
push
sbb
and
lock
push
jmp
outs
sbb
rcl
inc
hlt
and
ja
cld
ins
and
fnstenv
sbb
xor
fild
xor
loope
xor
pop
mov
jecxz
cmps
gs
xchg
add
pop
fisubr
push
push
ins
or
cmp
add
mov
add
repnz
repz
cmp
data16
in
lods
stos
icebp
pop
int3
add
push
out
das
mov
inc
xor
adc
jb
xor
jge
adc
and
jae
scas
push
shl
enter
push
add
add
call
lods
or
lods
xor
dec
pop
(bad)
adc
mov
jp
mov
(bad)
retf
ss
jg
test
js
mov
es
js
cmps
repnz
enter
jle
pop
pop
xchg
rol
loopne
jmp
call
push
pop
mov
dec
(bad)
pop
xor
xor
rcl
je
shl
imul
jb
ficomp
addr16
pushf
add
cwde
pop
bound
push
add
xchg
inc
es
fsub
xchg
add
pop
fsubr
inc
es
cld
xor
adc
mov
sub
push
inc
les
mov
fcomp
outs
jo
ja
pop
or
call
jno
ret
mov
in
pop
mov
mov
out
ror
inc
pop
daa
mov
in
inc
ss
xor
inc
test
and
inc
jmp
es
pop
pop
inc
pop
sbb
cmp
hlt
add
fwait
sbb
pop
out
cmp
test
jno
aad
scas
sub
mov
cmp
cmp
je
daa
and
or
call
pop
inc
retw
push
iret
pop
lahf
ret
imul
mov
jle
xchg
arpl
xor
sub
and
fild
cmp
aam
movs
shl
jp
test
in
sbb
add
ins
aam
cmp
inc
jmp
mov
mov
mov
pop
mov
xor
mov
xor
std
retf
sbb
cwde
dec
clc
cli
add
push
mov
dec
xchg
dec
xor
lods
sub
fstp
mov
add
mov
cmc
push
sub
(bad)
and
push
pop
into
in
aam
xchg
aaa
mov
(bad)
out
inc
pusha
dec
fsub
outs
daa
lods
sub
les
fs
mov
pushf
dec
sbb
xor
in
sub
xor
jne
into
or
xor
lds
fcomp
int
popa
stc
sbb
mov
leave
jge
xchg
imul
add
jl
rcl
pop
cs
or
xor
sahf
call
cmp
mov
mov
fiadd
lahf
(bad)
jl
fdivr
mov
iret
outs
push
leave
jge
(bad)
sub
jecxz
mov
test
rol
dec
sub
adc
inc
shr
add
(bad)
jmp
(bad)
call
hlt
inc
out
and
sbb
lds
ins
in
mov
into
cmp
or
add
mov
xor
test
pop
dec
fs
test
out
cmps
inc
sahf
push
inc
push
ins
mov
(bad)
sbb
(bad)
sub
mov
dec
lds
or
mov
loope
mov
mov
xlat
hlt
jp
dec
fidiv
sbb
xchg
fwait
jae
ret
jg
mov
stos
xchg
aam
stc
mov
ja
test
mul
in
inc
xor
fs
and
cmp
aad
add
xchg
lea
(bad)
call
out
hlt
in
test
in
xor
mov
jecxz
dec
fdivr
xor
pop
mov
and
leave
jns
shl
popf
aas
cli
(bad)
loop
mov
leave
xchg
fdiv
or
xor
adc
add
mov
push
cmps
inc
sar
out
shl
jmp
xchg
cmp
jg
aaa
dec
jo
ret
nop
mov
and
push
ror
ins
cmps
jg
test
pop
in
adc
xchg
push
dec
call
data16
aas
jp
imul
dec
mov
pop
popa
push
test
adc
push
popa
fadd
adc
push
cmp
scas
dec
imul
inc
outs
sbb
xchg
mov
mov
cs
mov
ffreep
and
into
or
xor
sub
xor
inc
shr
test
std
aaa
lds
js
inc
jle
leave
mov
push
push
leave
fiadd
xor
xchg
mov
sbb
pusha
inc
in
jecxz
sbb
push
ds
cmp
mov
dec
mov
out
les
cmp
mov
fldenv
aam
movs
or
into
stos
cs
add
xor
or
test
add
sub
add
dec
cld
cmp
or
shl
jge
xchg
pop
adc
loop
fcomi
mov
mov
mov
lods
xor
mov
adc
sbb
lods
inc
les
sub
shr
fwait
pop
retf
dec
xor
fld
add
nop
sbb
sub
aas
fild
sub
mov
enter
jb
cmps
call
outs
xor
and
fs
pop
and
push
and
cmp
lahf
sub
or
jae
ja
popf
mov
fwait
stos
add
movs
scas
mov
mov
cmp
popf
dec
adc
mov
cmp
aad
push
(bad)
(bad)
mov
mov
and
add
loope
xchg
mov
mov
data16
mov
xchg
or
retf
sub
aad
mov
stc
mov
sahf
jae
js
mov
into
xlat
add
stc
or
sbb
sbb
and
jge
add
loopne
(bad)
ja
pop
xor
outs
ja
mov
or
outs
into
dec
cmps
out
ret
mov
mov
aad
inc
rol
and
outs
pop
loopne
cmp
inc
rcl
add
inc
mov
mov
sti
shl
mov
push
mov
inc
fs
movs
enter
nop
mov
sub
ret
daa
dec
jecxz
mov
push
ins
(bad)
and
movs
and
cmp
dec
fmul
cmc
outs
cli
mov
cmp
ja
cdq
(bad)
push
dec
adc
mov
adc
sti
mov
out
xchg
test
shl
and
fld
push
pop
cmps
sbb
sbb
sbb
mov
lea
js
movs
sar
xchg
cld
lock
sbb
dec
nop
int3
lods
cmp
xor
add
or
(bad)
out
scas
fsubr
xor
adc
jecxz
or
sbb
adc
cwde
sbb
mov
outs
(bad)
dec
fstp
into
xor
mov
push
xor
mov
pop
bound
jns
xor
inc
pop
out
cmp
movs
jecxz
pop
inc
or
es
shl
push
mov
xor
jmp
stc
jnp
shr
mov
lods
xchg
call
jnp
and
enter
mov
aad
push
jo
scas
and
(bad)
or
mov
mov
fld
mov
mov
jo
cli
sub
mov
setge
repz
pop
cmc
or
fisub
fldcw
repnz
(bad)
lahf
retf
jmp
rsm
gs
(bad)
inc
out
fild
mov
in
(bad)
push
jecxz
out
mov
ret
hlt
cmps
jp
repz
push
add
dec
dec
push
aad
sbb
dec
scas
mov
movs
daa
lahf
cmp
jnp
popfw
mov
fld
inc
imul
je
inc
add
cmp
addr16
mov
or
jl
js
in
je
movhps
inc
test
fidiv
sbb
(bad)
dec
push
(bad)
push
pop
xor
stc
push
sbb
cmp
mul
add
cmp
les
mov
fdiv
mov
fild
jbe
aaa
xor
add
dec
fstp
lds
cdq
fld
dec
data16
jmp
adc
(bad)
fdiv
and
mov
inc
cmc
xchg
fnsave
aam
xchg
push
nop
jmp
test
imul
xchg
cld
shr
push
in
(bad)
inc
sub
ins
mov
data16
push
adc
imul
aaa
fcom
push
add
mov
mov
mov
icebp
inc
cmp
mov
adc
imul
adc
mov
jb
mov
xor
push
cli
(bad)
xchg
pop
cmps
sar
fidivr
std
(bad)
sbb
cdq
and
ret
pop
add
push
inc
cmp
vmovdqa
ja
adc
gs
adc
or
and
inc
rcr
dec
out
mov
mov
and
sbb
sbb
jle
scas
cld
mov
bound
(bad)
jl
sub
sbb
cwde
gs
imul
aam
sbb
mov
cdq
add
add
mov
and
pop
push
lds
mov
call
sub
push
mov
cmp
and
lds
and
add
jae
mov
jle
out
stc
inc
loop
popf
fcmovne
cmp
jge
mov
xchg
jo
je
and
lods
mov
mov
retf
or
daa
neg
stos
xlat
xlat
sub
retf
cmp
dec
cmp
push
add
jge
sahf
cdq
scas
mov
xor
cmp
std
pop
mov
add
(bad)
or
adc
inc
cwde
int
mov
and
jl
popa
mov
jae
mov
xor
push
repz
push
mov
jbe
mov
sub
and
add
outs
into
movs
outs
in
and
xor
cli
pop
mov
jmp
cwde
mov
js
cs
xchg
popf
dec
std
repz
adc
sahf
jo
test
and
mov
pop
mov
mov
mov
mov
scas
xchg
xlat
lahf
sti
or
inc
call
mov
(bad)
out
clc
enter
add
dec
repz
pushf
mov
inc
stos
pop
test
jbe
pop
fs
inc
dec
xchg
test
cmp
dec
and
pop
cmp
icebp
jae
loop
push
cmps
push
in
xor
mov
and
mov
fwait
mov
add
xchg
repnz
jg
inc
mov
jo
mov
xchg
inc
push
(bad)
push
loope
sbb
int3
dec
and
cmp
xor
dec
or
or
xchg
cmp
fdiv
popf
xor
jl
jmp
adc
mul
push
test
dec
int3
rol
dec
addr16
adc
or
cmc
in
jecxz
pusha
test
(bad)
ins
inc
mov
jo
mov
hlt
add
idiv
adc
push
sub
pop
ins
enter
aaa
jg
pop
stos
inc
jb
sub
pop
jp
cs
je
aaa
push
js
cmp
in
sbb
shl
ds
lahf
fs
push
icebp
fs
dec
loop
lds
clc
add
or
mov
aaa
scas
inc
(bad)
nop
jno
push
mov
push
pop
mov
cmp
lods
sahf
imul
xchg
cdq
out
sti
dec
imul
test
mov
xchg
shl
gs
xchg
popa
jge
icebp
inc
inc
jnp
mov
iret
pop
xchg
jb
xchg
dec
xor
out
cld
jp
mov
pushf
cmp
jp
inc
mov
test
cmp
lds
call
push
inc
mov
push
sbb
aam
pop
mov
xchg
repz
fadd
mov
mov
cmps
xchg
inc
add
dec
fisttp
pop
les
cmp
scas
mov
or
inc
adc
or
lds
sbb
or
and
inc
dec
push
outs
repz
mov
int3
outs
in
stos
dec
mov
sbb
stos
mov
idiv
repnz
sahf
inc
mov
add
(bad)
pop
dec
cmp
ret
jmp
ror
(bad)
mov
cmp
sbb
(bad)
pop
gs
sub
pop
outs
mov
aas
fcomp
and
int3
out
icebp
js
sbb
inc
ret
mov
test
aam
iret
ja
mov
sub
aas
movs
mov
movs
and
dec
jle
fisubr
ins
push
out
dec
dec
int
sar
dec
pushf
jno
pop
es
mov
outs
or
clc
call
push
mov
imul
and
and
sahf
pop
mov
xchg
adc
push
loopne
loopne
push
test
mov
cmp
popf
lea
aas
sbb
movs
fcmove
nop
jbe
mov
pop
jecxz
lock
xor
dec
aas
add
xor
(bad)
das
in
wrmsr
pop
mov
out
xchg
push
pop
pop
(bad)
cmp
repz
call
gs
jns
test
mov
adc
pop
xchg
ds
jmp
mov
sub
mov
xlat
sbb
int3
pop
dec
inc
movs
imul
rol
movs
lea
mov
lods
cmps
jg
rol
dec
dec
in
jbe
into
lahf
mov
cmps
clc
test
aaa
mov
movs
push
int3
or
mov
or
test
mul
mov
(bad)
clc
js
jecxz
xchg
push
jle
bnd
dec
push
ins
mov
push
push
sbb
pushw
stos
push
push
sub
ja
jmp
neg
cmp
or
dec
(bad)
xchg
sbb
mov
jno
int
sub
pusha
in
icebp
in
call
dec
xor
in
mov
shr
in
dec
push
cld
(bad)
or
ja
push
push
jb
adc
xchg
stos
xor
scas
inc
std
pop
fidiv
dec
add
clc
ret
(bad)
adc
jmp
sbb
stos
test
cmp
gs
xlat
ins
out
mov
add
pusha
(bad)
lods
jne
adc
cmc
into
scas
outs
dec
fcmovne
fs
test
(bad)
adc
lods
scas
shl
pop
jle
xchg
call
xchg
push
popf
retf
mov
js
mov
shl
cli
scas
outs
addr16
ficomp
push
mov
mov
mov
out
ins
pop
rol
adc
xor
cmp
jecxz
mov
push
jb
mov
jbe
mov
mov
(bad)
cdq
sbb
fadd
adc
loopne
retf
jne
cli
hlt
shl
rcl
inc
xlat
inc
sub
mov
mov
cmps
sbb
pop
in
xor
cwde
fs
inc
and
cmps
stos
fldcw
pop
lea
shl
pop
jge
rcl
jns
and
in
test
add
fnstcw
retf
sar
outs
fisubr
js
xchg
ss
sahf
ins
add
jp
sbb
add
(bad)
pop
mov
ds
repnz
pop
imul
mov
in
jmp
sar
scas
dec
mov
jno
test
jmp
adc
mov
in
jns
pop
cmp
jg
add
data16
jbe
xor
mov
mov
ins
test
cmp
scas
mov
and
rcr
js
ins
rcr
jbe
mov
xchg
mov
call
rol
inc
popf
ret
mov
pop
in
mov
sub
jmp
cmp
dec
inc
ss
mov
aam
lds
dec
(bad)
pop
add
pop
jmp
pop
(bad)
sub
shl
push
cpuid
pushf
jmp
inc
icebp
dec
mov
dec
sti
out
cmp
aaa
mov
push
mov
pop
ret
xor
fbld
shl
sub
repnz
push
shr
mov
repz
push
addr16
xchg
mov
cmps
mov
cli
sub
stc
sbb
fisubr
push
in
(bad)
jb
mov
or
(bad)
adc
jge
mov
and
std
rcr
repnz
pop
aam
sub
jg
xchg
nop
cwde
pusha
fst
call
aad
aad
out
mov
xchg
xchg
push
movs
and
ins
mov
sbb
mov
adc
movs
iret
push
iret
imul
ins
sbb
lock
fs
test
pop
sbb
and
xor
js
(bad)
aam
sbb
lods
xchg
cmp
xor
mov
data16
dec
pop
mov
adc
mov
cwde
ret
mov
jbe
stos
stos
aas
mov
in
outs
push
repnz
sbb
ds
jmp
(bad)
in
and
xchg
loopne
test
in
sbb
pop
into
fdivr
ins
jne
xor
call
xor
ja
sub
mov
and
rol
(bad)
pop
rol
mov
adc
mov
int
popa
test
fst
add
sbb
outs
lea
out
lea
adc
lahf
inc
cmp
or
out
call
xor
jle
dec
fldenv
in
xchg
and
enter
add
sbb
cmps
aam
enter
jmp
add
add
imul
daa
shl
mov
aas
repnz
cmp
inc
ret
push
arpl
daa
fimul
sbb
ins
mov
mov
dec
(bad)
add
jmp
pushw
dec
imul
cmp
xor
rcl
push
or
aaa
int3
or
dec
cmp
ins
xchg
fwait
je
call
cmp
inc
add
xor
add
pop
or
inc
iret
int3
mov
(bad)
mov
aam
outs
mov
push
fs
sub
mov
daa
cmp
fs
in
ror
in
jg
inc
mov
cmp
adc
in
outs
xchg
repnz
loop
fiadd
shl
loopne
jmp
(bad)
push
sub
stos
jecxz
push
and
jb
cmp
pop
mov
enter
retf
add
sub
sar
ins
je
add
stos
mov
cmc
les
push
ficom
mov
and
mov
stc
ficomp
inc
jmp
add
pop
leave
and
mov
xor
xchg
jmp
shl
test
mov
ins
adc
pop
jg
cmps
pop
ds
push
imul
and
mov
loop
nop
and
adc
(bad)
xchg
in
adc
retf
mov
cmp
mov
dec
xor
addr16
sbb
ror
or
jbe
mov
xlat
or
pop
movs
inc
push
xor
jp
outs
aaa
and
sbb
enter
sub
inc
add
hlt
mov
mov
retf
xchg
push
stos
cli
mov
fnsave
mov
push
(bad)
clc
xor
lahf
jbe
loope
rcl
cwde
mov
add
cmp
mov
add
loope
mov
lea
mov
mov
push
mov
inc
push
push
in
fisub
int
hlt
in
mov
sub
iret
rcr
adc
jbe
fxam
enter
test
arpl
(bad)
jo
cmp
call
jp
mov
lds
dec
(bad)
clc
fs
mov
xchg
imul
ss
sbb
bound
gs
lods
add
imul
jb
cmp
fsub
or
inc
dec
xchg
jge
mov
cmps
push
dec
popa
pusha
(bad)
sub
rol
jp
sub
sub
loopne
scas
(bad)
sbb
cs
push
adc
pop
sti
shl
mov
adc
adc
je
addr16
inc
int
or
xlat
mov
jp
repnz
nop
mov
bound
in
inc
out
(bad)
jbe
push
sub
mov
es
js
loope
push
mov
(bad)
sbb
(bad)
fldcw
rcl
test
cmc
inc
ds
mov
popf
jle
loope
sahf
jge
sub
in
inc
adc
dec
mov
mov
mov
mov
push
or
shl
and
movs
shl
hlt
jae
sti
xchg
aaa
or
stc
and
adc
sbb
push
pop
into
jno
ror
test
inc
add
test
inc
es
push
xchg
mov
add
int
push
rcl
jle
shl
div
push
add
push
loope
mov
dec
or
nop
pop
aaa
sub
gs
mov
int
imul
sbb
pop
push
or
ss
pop
push
dec
rol
xchg
in
inc
gs
rcr
imul
inc
dec
ins
(bad)
jno
inc
push
jo
cwde
les
ror
fsub
jne
adc
add
adc
mov
cmp
test
sub
arpl
and
mov
xchg
add
pop
xchg
hlt
xor
mov
idiv
jo
dec
dec
mov
mov
and
les
lea
icebp
xchg
push
(bad)
loopne
mov
or
mov
and
jge
mov
imul
(bad)
inc
push
ja
arpl
mov
jp
add
xchg
and
sahf
sub
das
xchg
inc
push
cdq
ret
adc
jl
mov
mov
jae
std
lock
shl
inc
pop
ffree
aas
bound
pop
daa
sbb
mov
cmp
dec
aaa
xchg
dec
pusha
and
jae
add
sub
cmp
push
or
cdq
pop
mov
xchg
loope
fdiv
aam
call
push
cwde
inc
lds
xchg
inc
xor
mov
pop
inc
daa
and
stc
adc
mov
ins
int
ret
xchg
repz
pop
push
retf
leave
mov
or
jecxz
mov
(bad)
xchg
jbe
aaa
imul
push
adc
xchg
fisttp
adc
out
inc
shl
frstor
test
(bad)
movs
jmp
jecxz
(bad)
jle
int3
add
xor
jae
sbb
xchg
xchg
cmps
stos
call
inc
loope
lods
pop
mov
mov
ja
jmp
hlt
mov
test
mov
sbb
mov
xchg
jno
test
mov
jp
sub
push
xor
icebp
pop
lods
mov
and
sbb
scas
call
mov
les
stc
inc
pop
pop
(bad)
mov
cli
les
shl
rcl
jecxz
and
jo
jb
ins
stos
pop
and
pop
jg
stc
into
and
jmp
xlat
out
adc
mov
inc
rcr
or
in
aad
mov
pop
test
dec
add
jp
in
cmp
xor
test
pop
(bad)
add
jp
mov
or
jecxz
xchg
int
leave
mov
mov
add
jns
mov
ret
out
retf
mov
xchg
push
imul
push
mov
mov
xchg
sub
push
adc
sub
loopne
mov
pop
(bad)
push
cmp
ror
xchg
push
inc
in
adc
ret
or
in
fcmovnu
jae
xchg
adc
ja
rcr
jge
retf
mov
pop
ret
das
bound
test
push
shl
dec
mov
ins
add
inc
sub
rcl
mov
nop
pusha
enter
(bad)
retf
div
mov
pop
mov
into
jp
mov
scas
or
pushf
cmp
push
mov
rdpmc
test
shl
push
rcl
cmp
inc
in
test
mov
or
pop
ins
call
jo
fmul
adc
jmp
rol
mov
and
daa
addr16
mov
leave
loopne
pop
call
in
sub
scas
mov
outs
cdq
adc
pop
mov
add
popa
adc
fs
cmp
mov
push
pop
add
mov
out
adc
jb
call
loopne
and
inc
cmps
int
xchg
jmp
(bad)
call
call
inc
imul
mov
push
jl
fnsave
(bad)
or
mov
ins
mov
loop
inc
cdq
add
fidivr
push
xlat
adc
cmp
gs
cs
ja
push
dec
fadd
push
dec
sub
pushf
aam
scas
cmps
pop
sbb
(bad)
fcomp
clc
mov
jle
ror
ss
xor
sbb
mov
call
jns
fs
iret
mov
in
push
mov
inc
xchg
mov
movs
lock
shl
or
add
in
test
dec
xlat
out
jmp
push
pop
mov
scas
or
int
inc
or
ja
dec
add
mov
lds
lods
aad
es
dec
jbe
dec
push
pop
mov
scas
lods
mov
sub
je
or
(bad)
jns
xchg
shr
retf
sbb
mov
retf
mov
sti
retf
sar
mov
jae
sbb
push
xor
hlt
and
stos
and
and
push
cmc
dec
mov
mov
jl
rcr
add
int3
sub
mov
cs
scas
test
add
mov
test
xchg
pop
dec
dec
mov
mov
dec
sbb
sbb
pop
call
ret
cli
imul
and
clc
jae
or
jno
mov
lahf
sti
les
pop
sub
or
cmp
pop
test
or
(bad)
xchg
mov
mov
xlat
pop
pushf
fldcw
and
dec
(bad)
and
jo
push
sbb
jp
cmp
iret
add
dec
adc
dec
retf
push
ins
mov
mov
push
pop
mov
imul
inc
imul
in
pop
push
cmc
or
leave
loopne
jmp
sbb
mov
jne
mov
dec
daa
cmp
pop
mov
add
add
add
jbe
fisubr
sahf
mov
mov
jge
xchg
xchg
mov
int3
inc
dec
aam
cmp
dec
jnp
add
mov
jae
out
mov
add
add
sahf
add
shr
fbstp
call
fcom
xor
cmp
(bad)
pop
and
mov
dec
fs
bound
(bad)
(bad)
push
add
push
inc
inc
cmp
leave
xchg
cmp
fisttp
adc
shl
les
add
push
adc
adc
je
cli
loope
jge
mov
ds
pop
cmp
int3
sub
push
jl
hlt
lahf
clc
(bad)
out
or
in
push
int3
mov
cmp
jle
lods
out
das
ins
xchg
and
mov
push
dec
aaa
retf
fldenv
repz
dec
hlt
pop
inc
mov
mov
inc
daa
xor
pop
(bad)
sbb
cs
mov
ins
push
inc
lahf
aaa
jb
ss
hlt
retf
add
cmp
ret
pop
mov
push
or
call
adc
or
idiv
in
adc
movs
inc
mov
add
adc
xchg
pop
inc
add
aad
xor
jno
xor
adc
or
xor
xchg
icebp
int3
repnz
mov
adc
pop
stos
mov
dec
dec
pop
jp
gs
cli
call
push
outs
js
mov
jb
loope
pop
add
fld
ins
mul
retf
addr16
inc
nop
sahf
mov
jle
push
jg
in
add
cmps
mov
jne
cmp
ja
mov
mov
jl
mov
nop
nop
fst
sub
retf
aam
push
cmp
cdq
adc
pop
xchg
cmp
cmp
sahf
mov
cwde
xor
test
mov
cmc
aas
rcl
mov
mov
outs
fsubp
cmp
retf
cmps
daa
pop
sbb
(bad)
jmp
imul
add
popf
iret
lahf
push
and
mov
and
or
sub
sub
inc
(bad)
xor
inc
call
das
mov
jl
mov
in
lahf
push
fstp
xor
jb
je
add
lock
mov
pop
xchg
pop
inc
icebp
add
das
addr16
jnp
push
test
outs
daa
inc
mov
push
inc
cwde
cmps
sahf
xor
loop
adc
xor
repnz
pop
mov
stos
mov
rol
in
sbb
sahf
xchg
push
inc
xchg
or
data16
retf
pop
fidivr
(bad)
cmp
sbb
mov
fdiv
inc
adc
pop
mov
mov
iret
inc
dec
sub
dec
xchg
int3
xchg
inc
sbb
push
pop
ss
cmps
dec
int
and
inc
pushf
fwait
sub
test
test
cli
jae
jnp
pop
(bad)
pop
cmp
jbe
fist
cdq
push
dec
mov
push
int3
jns
sbb
popa
jecxz
mov
xchg
pop
rcl
or
jb
jno
hlt
out
(bad)
shl
push
mov
outs
and
stos
ror
mov
std
leave
sbb
add
int3
or
mov
dec
dec
in
je
or
ins
sti
data16
pusha
fisttp
movs
out
push
sar
add
sub
xchg
scas
ins
add
rol
arpl
sub
loopne
sbb
push
(bad)
jb
xchg
mov
js
(bad)
and
add
movs
or
jae
addr16
push
inc
lea
adc
jns
in
(bad)
adc
jno
fisttp
test
push
mov
aaa
hlt
movs
or
jno
fs
add
sub
push
test
push
inc
mov
(bad)
push
sbb
test
ins
jp
mov
mov
dec
test
test
addr16
xchg
push
int3
shl
mov
retf
rcl
xlat
das
mov
and
sbb
movs
cld
shl
cmp
repz
rcr
or
pop
das
sti
js
inc
mov
mov
sbb
js
movs
pop
sahf
jge
adc
push
cli
mov
xor
popa
outs
jp
or
cwde
dec
aaa
cmp
xor
hlt
popa
cmp
and
adc
inc
ins
cmc
ficom
jmp
adc
xor
xor
(bad)
mov
cmps
xchg
movs
jbe
sahf
xlat
pop
data16
call
in
and
push
imul
repnz
scas
call
mov
(bad)
pusha
add
push
aam
and
ss
mov
and
fldcw
rol
push
retf
fwait
test
enter
and
sbb
cs
ds
loop
inc
or
xchg
shl
push
int
pusha
aam
push
gs
and
lgdtd
test
stc
add
ds
shl
movs
dec
push
xor
mov
cmp
jg
add
dec
xchg
sub
jmp
adc
mov
push
push
add
dec
adc
lods
and
jmp
pop
xor
pushf
lock
nop
(bad)
fdivr
sahf
icebp
mov
je
(bad)
dec
repnz
mov
jae
addr16
cmp
aas
enter
pop
call
ins
mov
rol
cmp
sti
pop
(bad)
jno
jmp
fs
add
jle
gs
fwait
addr16
xor
ins
inc
pop
push
pop
pop
sbb
test
push
mov
fidivr
mov
in
les
pop
gs
push
jge
push
cs
ret
push
aaa
cmp
xchg
pusha
cld
sbb
push
fcmove
stos
mov
fisttp
xchg
cli
nop
xchg
jne
mov
push
out
adc
clc
adc
mov
pop
bnd
and
shr
test
mov
sub
and
aad
ja
inc
aam
sti
sti
lahf
sub
int
cmp
pop
cdq
jns
push
or
jo
inc
cdq
mov
ds
dec
xchg
xchg
mov
cmc
push
adc
test
inc
xor
dec
jmp
jge
inc
movs
pop
(bad)
ret
jns
xchg
mov
add
or
xchg
jp
scas
sub
and
addr16
in
or
xlat
int3
push
push
mov
out
fcmovnu
(bad)
push
push
mov
push
sbb
(bad)
push
fadd
push
add
or
(bad)
dec
mov
sbb
push
fcomi
and
push
daa
dec
fisubr
xor
(bad)
int3
mov
mov
mov
(bad)
dec
mov
inc
aas
push
in
jae
js
rcr
pop
call
fwait
daa
xchg
push
call
pushf
sbb
dec
xor
lock
jmp
jns
idiv
gs
ins
inc
into
fisub
rcl
imul
(bad)
mov
movs
and
clc
sahf
pop
pop
mov
or
jmp
cmps
push
pop
in
sub
xchg
shl
push
enter
sbb
pop
scas
pushf
div
mov
mov
stos
mov
ret
mov
cwde
sub
add
fist
jl
stc
in
test
xor
out
out
mov
stos
int3
icebp
in
icebp
pusha
or
mov
adc
dec
mov
cs
lods
test
aad
jb
push
inc
jns
mov
cli
xlat
stos
or
ja
scas
jns
(bad)
jle
int3
movs
pop
cli
sub
mov
cmp
sub
add
cmp
(bad)
jae
(bad)
push
(bad)
and
and
call
js
or
inc
add
fiadd
aad
and
jmp
fcmovb
xor
jl
xor
dec
xor
or
mov
mov
xor
jns
arpl
pop
fwait
ja
idiv
ja
or
icebp
xchg
adc
(bad)
lds
or
retw
push
inc
aas
enter
ins
sahf
nop
in
dec
cdq
imul
arpl
fldcw
leave
mov
sub
xchg
cld
push
dec
dec
imul
rcl
xchg
xlat
lea
jo
cli
js
and
push
daa
jbe
in
clc
gs
xlat
cld
(bad)
and
jge
ds
test
das
xor
mov
ficomp
mov
push
std
cmp
adc
cmp
xchg
sub
mov
adc
sub
inc
(bad)
push
push
ins
inc
mov
scas
sub
mov
(bad)
leave
std
imul
leave
stos
aad
call
jnp
cdq
fiadd
stc
mov
(bad)
adc
mov
push
repz
stc
jae
cmp
ret
fdiv
into
(bad)
adc
mov
and
xchg
adc
icebp
jo
cmp
or
inc
xor
jnp
xchg
sbb
sbb
xlat
cs
lods
jmp
xchg
ret
aam
int3
out
jmp
add
push
inc
jne
xchg
pusha
jne
es
xor
pop
cmp
(bad)
or
ss
(bad)
sub
in
cld
mov
and
lods
cmps
sahf
cmp
rcr
mov
pop
pop
pop
xchg
jmp
call
push
sub
cmp
fsub
xchg
mov
and
mov
mov
scas
and
mov
adc
frstor
ret
xor
rcl
mov
outs
mov
in
xchg
mov
adc
movs
hlt
inc
out
cmp
jnp
mov
cmp
neg
inc
or
sub
je
or
pop
pop
xchg
pop
sbb
add
fdivr
xlat
xchg
add
in
adc
add
cmp
push
mov
out
or
cmp
repz
mov
mov
in
addr16
lock
push
push
and
and
or
in
pop
inc
push
adc
xchg
pusha
mov
add
out
shl
das
in
test
shl
(bad)
dec
adc
sub
cld
fimul
xchg
mov
push
icebp
std
scas
rol
dec
jp
imul
ss
call
call
rol
int
aaa
mov
test
imul
inc
xchg
out
cmp
jae
mov
fist
stos
add
sbb
mov
xor
cmp
stos
push
push
pop
nop
or
das
mov
inc
push
mov
inc
int
mov
push
icebp
lods
imul
test
ins
pop
cmp
sub
mov
sbb
arpl
jns
lea
xor
call
dec
in
jg
push
jae
and
in
ss
cmp
hlt
mov
addr16
mov
sar
add
in
push
mov
dec
aas
add
and
cmp
inc
(bad)
jle
push
jle
aad
add
pop
pop
mov
mov
aas
ins
push
icebp
int3
add
jnp
popa
adc
es
adc
sahf
sub
popf
dec
xor
mov
pop
das
rol
jmp
cli
cwde
fsubr
mov
retf
and
mov
mov
mov
jecxz
arpl
or
outs
sti
ficom
rol
mov
aad
xor
and
push
test
sahf
call
push
aad
ja
mov
iret
xlat
or
es
loope
mov
push
test
movs
sbb
adc
cmp
gs
daa
inc
sbb
lods
neg
pusha
sub
dec
imul
into
sbb
repz
das
or
cmc
rcr
or
pop
jmp
push
sub
mov
sbb
mov
push
les
mov
mov
out
jle
(bad)
adc
mov
sub
pop
mov
mov
and
xchg
sbb
pop
cmp
or
inc
mov
and
fcmovb
cdq
test
pop
add
in
mov
test
sbb
outs
xor
dec
retf
inc
cmc
pusha
push
out
inc
data16
iret
in
sbb
inc
sub
in
or
pop
dec
mov
jle
mov
popf
sbb
sub
xchg
adc
movs
xchg
add
shr
add
pop
popf
dec
xor
xlat
sbb
xor
push
mov
movs
imul
fs
sbb
stc
or
fucomi
dec
xchg
lock
fs
(bad)
fstp
aam
daa
cmp
sub
into
das
mov
movs
movs
push
pushf
mov
and
test
sub
pushf
xchg
test
push
adc
mov
dec
cdq
add
mov
int
dec
xchg
repz
popa
add
jecxz
jle
int
mul
add
rcr
stos
aaa
mov
ins
rcr
push
or
rcr
scas
sbb
jg
clc
nop
movs
inc
sub
(bad)
jmp
push
cmp
fistp
mov
add
inc
cli
retf
(bad)
ret
shl
dec
xlat
shr
jbe
push
imul
mov
nop
lods
sub
and
fcom
sbb
fcmove
call
js
(bad)
fsubr
jecxz
rcr
test
or
add
repz
imul
cwde
cmp
js
mov
add
mov
cmp
push
loop
ss
ret
cmp
sub
fisttp
inc
cmps
jb
inc
outs
dec
cdq
call
jns
or
xchg
xor
adc
mov
hlt
xchg
mov
mov
dec
jp
add
aas
fidivr
sbb
mov
xchg
bound
jb
imul
mov
jne
sbb
add
sub
fstp
das
ficomp
push
in
push
(bad)
(bad)
ja
jae
mov
call
out
adc
aaa
dec
inc
cmp
(bad)
adc
mov
mov
rol
inc
xchg
nop
mov
and
push
aas
shl
cs
fadd
sbb
pop
cmp
into
pop
inc
add
sbb
pop
and
cmp
sbb
or
or
stc
xchg
pop
repnz
mov
cmp
pushf
jo
push
dec
add
lds
adc
sub
add
jns
cmps
push
jae
les
push
xchg
std
arpl
xor
leave
jnp
(bad)
js
ret
mov
xor
xor
in
jno
mov
aas
mov
xchg
push
cdq
dec
or
or
jle
mov
and
aam
cmp
shr
dec
sub
mov
sar
movs
push
push
mov
xor
pop
jmp
test
and
mov
out
cwde
mov
loopne
mov
ror
cmp
pop
fldcw
enter
push
add
mov
cmps
shr
shl
jno
mov
xchg
ret
jge
jmp
mov
push
lea
pop
sar
jmp
imul
call
lea
add
pop
push
sti
inc
not
clc
arpl
std
retf
inc
loop
inc
pushf
push
add
xchg
aaa
ror
ins
mov
adc
(bad)
sub
xor
test
inc
les
test
ins
cmp
out
aaa
cmp
mov
cmp
idiv
imul
addr16
sub
xchg
push
lahf
div
sbb
cmp
mov
dec
inc
push
mov
out
outs
shl
adc
mov
jns
in
icebp
sbb
mov
hlt
xchg
rcr
push
adc
pop
(bad)
mov
and
(bad)
in
xchg
mov
sbb
or
lock
mov
ja
mov
cmp
test
xor
inc
lods
mov
and
push
xchg
leave
xchg
out
fidiv
mov
test
test
jp
push
ja
ret
push
and
xchg
js
mov
jmp
(bad)
stos
xor
popa
call
adc
mov
ss
pop
push
lods
jmp
dec
test
or
xor
rep
pop
pop
fwait
dec
pop
xor
out
jl
xchg
mov
xchg
or
inc
sar
xchg
dec
add
cli
call
fcomip
add
xchg
cdq
aaa
mov
imul
lods
fsubr
pop
jl
xchg
rcr
div
pop
pop
ret
mov
mov
test
mov
in
jmp
sub
cli
(bad)
lds
mov
(bad)
pop
jp
pusha
stos
rcr
inc
pop
xchg
jmp
sub
repnz
stc
test
rcl
push
xchg
fcom
cld
jb
jbe
xchg
and
push
xor
or
mov
(bad)
inc
stc
imul
inc
lods
push
and
push
pop
mov
arpl
int
mov
adc
icebp
scas
sbb
je
inc
loope
mov
or
xchg
xchg
fadd
mov
mov
add
pushf
jmp
ret
fucom
pop
gs
in
cmp
(bad)
nop
adc
push
cdq
jmp
xchg
loope
dec
jno
or
xor
push
imul
(bad)
lds
and
or
gs
dec
adc
inc
clc
dec
inc
jp
add
cmps
dec
lea
cmp
das
xlat
mov
(bad)
xchg
imul
sti
call
repz
daa
and
xchg
cdq
es
dec
and
add
push
(bad)
mov
lods
js
jp
iret
sbb
imul
imul
shr
call
cmp
xchg
and
mov
stos
call
popf
jo
in
dec
test
ret
push
mov
jp
mov
mov
ret
jg
cli
rol
cmpxchg
jp
call
das
aaa
rcl
add
scas
lods
repz
test
mov
pop
js
popa
push
sar
stos
push
jb
outs
push
sub
pushf
lahf
mov
stc
(bad)
mov
push
rcr
jo
in
retf
imul
js
pop
call
enter
pop
out
jecxz
cmp
ins
mov
or
setb
dec
cmps
lds
aaa
imul
scas
inc
ss
mov
adc
stos
cli
scas
je
rcr
sub
fcomp
shl
inc
leave
cmp
mov
push
dec
(bad)
rcl
jae
sub
mov
(bad)
imul
test
sbb
(bad)
sbb
dec
adc
aaa
xchg
in
scas
sbb
adc
cmc
js
shr
or
and
sahf
sbb
pop
dec
cmp
jae
sub
cmp
in
imul
adc
jnp
das
and
jmp
ret
cmps
(bad)
(bad)
in
lahf
pop
icebp
xor
cmp
jns
out
inc
je
sbb
(bad)
out
shr
cwde
cli
sti
jmp
mov
test
hlt
jae
fist
dec
in
outs
int3
add
push
in
add
pop
jg
push
mov
and
shl
mul
or
test
jno
mov
adc
push
push
xor
jle
retf
shl
xor
mov
add
mov
inc
ret
ret
inc
test
or
jecxz
dec
(bad)
mov
pop
dec
dec
shl
cld
outs
in
cs
cmc
pop
sub
mov
cmc
outs
push
adc
xlat
cmp
jmp
inc
or
xchg
mov
inc
push
xchg
dec
lock
repz
inc
push
jmp
inc
(bad)
mov
adc
mov
popf
cmp
push
pop
addr16
aad
push
outs
nop
push
push
ds
mov
into
mov
sbb
mov
ret
xlat
mov
or
or
fcom
pop
in
push
mov
xor
in
inc
ud1
aad
daa
jb
adc
push
test
jl
cmp
sbb
leave
fnsave
cmp
mov
inc
mov
call
test
pop
jmp
rol
lods
mov
jecxz
frstor
ss
add
shr
in
out
mov
xchg
ret
repz
push
push
adc
neg
popa
dec
ret
in
cmp
call
sub
jle
xchg
or
ja
mov
sub
push
mov
add
clc
(bad)
es
push
shl
sub
xchg
xchg
push
clc
sar
test
adc
out
mov
cmp
ja
out
punpckldq
int3
(bad)
(bad)
je
repnz
mov
jbe
mov
add
sub
or
icebp
dec
addr16
xchg
push
cdq
fwait
ss
push
mov
test
and
xor
jmp
dec
ds
fstp
sbb
std
call
jl
pop
cld
leave
ins
pop
push
and
lea
cmp
xor
add
cmc
mov
and
out
inc
sbb
mov
cmps
sub
retf
xlat
daa
mov
mov
adc
rol
and
jne
xchg
popa
cld
push
push
pop
and
inc
shr
adc
cmp
xor
out
inc
or
add
dec
mov
popf
ins
dec
repz
jecxz
aam
daa
sub
mov
std
add
mov
inc
loopne
jmp
rcr
lock
mov
das
jmp
lods
repnz
icebp
push
gs
mov
xor
popf
gs
enter
jns
movs
test
sub
into
cmp
adc
loop
lods
in
adc
mov
repz
inc
mov
push
push
xchg
ret
jns
xor
push
shl
rcl
sub
jle
inc
mov
stc
popf
call
in
imul
jmp
lods
int3
cmp
mov
mov
jecxz
aad
xor
pop
mov
mov
movs
dec
cdq
xchg
push
inc
js
inc
enter
cld
mov
mov
xor
push
es
adc
jmp
sub
mov
pop
push
xor
jae
test
xor
push
icebp
inc
fdiv
data16
les
push
sbb
inc
iret
jg
pop
in
pop
(bad)
sbb
or
test
fdiv
fsub
vcvtpd2ps
arpl
pop
dec
xor
xor
inc
push
fsubr
imul
not
dec
jl
fidiv
aad
sub
(bad)
mov
pop
retf
ds
cmp
and
icebp
ror
outs
mov
cmps
iret
cmp
daa
imul
mov
neg
sti
jmp
mov
aam
mov
daa
loop
jno
(bad)
lods
fwait
mov
fnstenv
cld
rcr
arpl
sbb
out
jbe
test
xchg
mov
xlat
inc
dec
push
mov
jg
mov
push
mov
jbe
cmp
dec
(bad)
repnz
cmp
xor
adc
dec
mov
adc
in
ret
jmp
sbb
xor
mov
cld
xlat
clc
inc
cmp
push
adc
aad
daa
test
sub
outs
(bad)
jp
cli
inc
inc
and
movs
imul
fisubr
ret
(bad)
dec
call
fcmove
out
mov
pusha
mov
sub
fs
test
add
jno
push
dec
cmp
or
xor
xchg
jb
mul
cmp
fs
(bad)
cmps
dec
cld
or
dec
xchg
sub
movs
fs
mov
scas
push
ret
inc
imul
mov
cdq
fst
iret
shl
loop
add
mov
(bad)
lods
sbb
daa
pop
mov
pop
retf
pop
sbb
and
dec
test
in
mov
loopne
pop
jbe
jae
shr
sub
in
add
shl
mov
hlt
icebp
jne
xor
dec
sar
xchg
ja
rol
cld
dec
add
jl
add
sub
or
test
hlt
xchg
adc
pop
(bad)
fst
(bad)
and
cmp
xchg
mov
ins
sub
push
inc
mov
neg
int
arpl
xor
dec
aaa
repz
les
cmps
(bad)
fstp
jo
jne
mov
cmp
mov
fmulp
retf
cwde
jecxz
mov
enter
mov
xchg
ins
ss
test
sbb
stos
rcr
pop
arpl
stos
pop
pop
int
out
sbb
outs
push
push
int3
jmp
out
push
fistp
jne
aam
mov
dec
xchg
stc
mov
sub
mov
push
jge
push
aam
mov
mov
ins
fwait
dec
and
and
in
fdivr
push
add
add
imul
fld
mov
sbb
jnp
sub
dec
lds
mov
imul
mov
mov
(bad)
arpl
in
aad
push
dec
mov
or
and
imul
xor
stos
prefetch
add
mov
xchg
xchg
rol
fidiv
ja
out
or
cmp
das
ins
in
push
dec
(bad)
dec
mov
fwait
mov
adc
enter
gs
jbe
sub
adc
push
jb
xchg
imul
rol
mov
or
and
rol
mov
repnz
mov
mov
mov
mov
in
xchg
scas
and
test
retf
fldenv
mov
scas
jo
les
pop
inc
cmps
ficomp
in
in
push
das
cdq
add
sub
pop
push
mov
jne
xchg
dec
cmp
mov
mov
jge
push
and
(bad)
out
xor
rol
inc
adc
push
arpl
lock
sub
and
(bad)
pop
leave
nop
fisubr
pop
cmp
cmps
ins
inc
xchg
mul
ret
(bad)
pop
into
add
(bad)
pop
test
leave
adc
sbb
push
xchg
js
jnp
adc
and
sub
xchg
xchg
fbld
cwde
fnstenv
ror
jo
popf
sub
add
mov
pushf
call
imul
sbb
fsubr
dec
out
lods
scas
pop
mov
movs
sub
add
xor
dec
mov
(bad)
fld
in
inc
xchg
popa
inc
retf
cmp
bound
jle
jl
jae
dec
inc
add
cli
cmp
mov
pop
pop
and
xlat
dec
xor
xchg
mov
mov
(bad)
pop
les
dec
loopne
jp
imul
ja
pusha
sar
pavgw
shl
dec
mov
pop
push
pop
pop
das
cmc
and
pop
into
adc
in
cmp
hlt
das
iret
cmp
bound
pop
outs
push
or
mov
mov
jmp
dec
push
xor
inc
daa
imul
(bad)
jbe
pop
mov
or
xor
rcl
push
loopne
and
push
pop
loope
in
loope
cli
cmp
push
mov
xchg
dec
test
out
jnp
js
xchg
scas
pusha
pusha
iret
pop
inc
aaa
imul
or
adc
dec
(bad)
pushw
jae
test
push
stos
cwde
push
pop
ret
inc
test
sbb
repz
or
shl
nop
mov
sub
adc
add
sub
mov
pushf
mov
ins
xchg
and
inc
ja
pop
dec
clc
leave
pusha
pop
or
shl
in
inc
(bad)
in
shl
jp
das
and
or
repnz
or
dec
lock
int
jg
repnz
dec
popf
jno
mov
dec
inc
and
inc
and
jle
adc
jno
lock
in
outs
push
sub
outs
out
mov
rcl
cmps
push
mov
dec
daa
dec
aad
pop
sbb
scas
push
hlt
arpl
int3
xchg
je
out
pusha
push
cmp
pop
mov
dec
ss
fisttp
mov
jmp
call
xor
adc
push
pop
(bad)
lds
(bad)
mov
xlat
mov
imul
ror
sub
addr16
fdiv
mov
jo
jl
jbe
push
shl
jmp
aad
push
push
xchg
scas
in
(bad)
push
push
mov
out
sbb
add
cmp
int3
jmp
popf
sbb
mov
mov
loopne
pop
sbb
ins
mov
push
lods
xor
ret
and
lods
sbb
mov
je
test
js
ds
jb
adc
and
fistp
aaa
pop
das
xchg
push
jg
xchg
sub
ja
fbld
cli
sub
mov
fs
add
push
movs
mov
rol
leave
sbb
lea
xor
das
scas
stos
js
inc
rol
pop
loop
dec
mov
out
mov
xor
call
ins
in
sub
loope
aad
push
adc
ret
loop
add
sti
dec
push
leave
inc
mov
lods
test
fisubr
lock
gs
gs
inc
test
and
mov
jb
gs
bound
dec
ficom
iret
mov
xlat
add
imul
imul
rol
or
or
fdiv
mov
jg
add
leave
cmp
jmp
and
sub
(bad)
mov
pop
pusha
sti
xchg
and
mov
mov
mov
outs
cwde
push
sub
dec
add
das
jmp
scas
pop
jmp
mov
clc
xor
xchg
xor
sub
sahf
lods
mov
push
inc
fsubr
push
jmp
inc
test
mov
push
aam
cmp
cld
fcomp
adc
(bad)
and
loop
gs
imul
cwde
jns
xchg
push
mov
add
loopne
jno
mov
dec
jae
gs
mov
xchg
js
ins
lds
into
call
jle
test
cwde
add
mov
pop
iret
push
push
rcr
in
(bad)
sub
push
inc
dec
cdq
or
cli
xor
out
dec
mov
test
pop
pop
xor
pop
jns
sti
outs
out
jo
or
inc
xor
push
jns
idiv
mov
lea
in
xchg
mov
xor
ja
mov
add
pop
pop
sbb
inc
in
outs
xchg
dec
out
jnp
aad
jmp
inc
xor
sbb
xor
hlt
ret
pop
inc
or
imul
lds
fcmovb
(bad)
jp
sar
cdq
(bad)
mov
retf
pop
out
push
int3
ins
push
ss
(bad)
dec
ins
sar
test
push
jnp
sti
ret
push
mov
ficomp
or
(bad)
out
nop
cmp
xor
adc
push
cs
and
cs
or
xor
dec
outs
mov
jle
xchg
sar
fstp
(bad)
sbb
jge
addr16
mul
pop
js
int
shr
xor
retf
adc
sbb
mov
ret
fadd
call
pop
dec
xor
iret
retf
fst
jg
stc
les
mov
sar
fdiv
adc
movs
inc
mov
cmp
ficom
enter
jg
xchg
push
aas
scas
mov
jo
sbb
push
call
sub
addr16
cmp
int3
sbb
mov
ins
jmp
inc
ror
stos
js
fcom
pop
add
jp
push
mov
cwde
jbe
fdiv
mov
mov
adc
mov
or
pusha
xlat
cmp
dec
neg
mov
dec
int
repnz
dec
ds
ins
mov
cmp
in
pushf
mov
retf
punpckhdq
cwde
dec
in
lock
add
mov
jae
add
xchg
jb
pop
or
std
sub
in
add
shl
mov
xchg
(bad)
(bad)
cld
adc
stc
mov
xchg
and
adc
stos
dec
sbb
inc
nop
sti
idiv
sbb
fwait
jo
xchg
ret
scas
mov
push
cmp
iret
test
add
and
nop
icebp
loope
clc
lds
fs
xor
mov
test
sub
jne
adc
push
add
test
adc
mov
push
mov
ret
mov
pop
rol
bound
dec
xor
fidivr
mov
xor
pop
jmp
pop
sbb
mov
dec
int3
rcr
das
aas
mov
outs
sbb
aas
jae
les
mov
ja
test
xchg
repnz
cmp
(bad)
cwde
mov
int
(bad)
xchg
arpl
ret
nop
pop
push
cmp
cmps
mov
mov
push
test
inc
mov
mov
lahf
imul
sub
(bad)
movs
xchg
inc
jecxz
(bad)
call
xchg
es
push
pop
and
add
push
test
rol
jmp
jmp
mov
dec
mov
sar
arpl
(bad)
ss
and
out
lahf
add
pop
cld
lods
pushf
inc
sub
dec
sub
mov
loopne
push
mov
add
into
test
loope
test
dec
in
mov
pushf
jno
(bad)
sbb
ja
mov
int
inc
loopne
fdiv
push
into
movs
dec
call
sub
sub
ror
cwde
dec
xchg
hlt
cmp
outs
lods
and
sub
mov
mov
sbb
popa
dec
shr
fild
xchg
mov
outs
or
lock
sub
jl
pop
stos
inc
in
inc
(bad)
pusha
mov
rcl
inc
cmp
push
push
push
sti
out
ret
push
inc
lock
scas
ficom
test
and
ja
adc
int
mov
dec
fs
xchg
xor
jae
push
in
xchg
jnp
dec
xchg
lea
or
test
sub
cmp
xchg
ror
dec
sar
fdivr
pop
xor
imul
aam
xchg
sbb
loop
les
push
cmc
jbe
cmp
scas
fcomp
or
pop
stos
and
iret
loop
sbb
add
push
int3
ficom
push
jecxz
push
xchg
outs
mov
or
cmp
stc
adc
pop
scas
in
popf
xchg
mov
mov
mov
bound
and
rol
mov
mov
shr
cs
mov
in
aaa
xor
lods
dec
jmp
pop
cmps
and
jmp
cmp
cdq
adc
aas
icebp
xchg
and
repnz
test
sbb
retf
or
fild
leave
mov
scas
js
fldenv
sub
mov
fadd
(bad)
or
popa
sub
aam
sar
dec
lea
test
mov
into
out
lahf
test
xor
push
xchg
ins
fsincos
inc
fldenv
mov
mov
mov
nop
idiv
ja
add
test
cmp
retf
stos
(bad)
jle
retf
in
cwde
mov
jb
into
xchg
sbb
xchg
mov
or
lods
retf
push
sbb
and
ror
or
ss
mov
mov
fwait
xchg
add
adc
dec
test
cmp
or
jo
sub
and
xchg
les
push
inc
push
std
pushf
jb
gs
lods
dec
xor
repz
call
iret
cmp
out
ror
sub
fnstenv
fwait
adc
push
movs
xor
call
dec
push
cwd
push
jl
jecxz
jl
mov
xchg
mov
add
inc
lods
mov
mov
jp
(bad)
(bad)
xchg
push
adc
cli
adc
adc
loopne
push
rcr
stc
cmp
(bad)
and
sahf
xchg
popa
iret
adc
xor
jne
dec
aam
xor
adc
popf
das
dec
mov
mov
adc
jg
or
fnstsw
mov
mov
sub
in
push
xchg
dec
inc
gs
loope
mov
(bad)
std
xor
jge
ret
cmp
imul
add
cld
dec
dec
lods
push
dec
inc
jmp
ss
mov
mov
adc
ret
mov
push
mov
pop
mov
mov
movs
inc
adc
retf
ret
inc
fcmovb
into
push
aas
fucomi
inc
int
js
in
jbe
fistp
sub
outs
adc
ss
and
pop
mov
push
mov
mov
movs
sbb
leave
dec
bound
push
adc
xchg
xchg
lods
add
mov
push
pop
pop
ret
sti
movs
or
and
push
xchg
std
je
loopne
pop
push
mov
scas
pop
or
jg
lahf
dec
mov
in
sti
loope
test
fild
push
rcl
jns
mov
mov
cmc
test
aas
lods
imul
lds
sbb
into
add
adc
jns
add
aam
inc
popf
clc
adc
fdiv
mov
fadd
in
pop
mov
mov
mov
mov
(bad)
or
jb
pop
fwait
xor
fisubr
mov
add
mov
aad
xchg
xchg
jnp
outs
pusha
in
mov
fst
cmps
les
arpl
push
mov
inc
leave
pop
mov
pop
nop
or
loope
lahf
int
adc
dec
dec
pushf
aas
icebp
sahf
jno
cs
imul
ja
jnp
mov
xchg
xchg
push
rcr
scas
inc
jp
outs
cs
mov
mov
mov
mov
cmc
icebp
mov
sti
xor
dec
jge
cld
loop
shr
push
dec
dec
pop
xchg
bound
aad
lds
movs
jmp
lahf
pushf
push
nop
bound
lds
loopne
sbb
mov
pop
es
cmp
loop
pop
fwait
outs
mul
pop
rcr
dec
xor
jo
mov
cmp
(bad)
mov
push
mul
out
icebp
cmp
or
mov
rol
add
xchg
les
outs
or
adc
add
mov
cmp
jb
push
or
mov
test
out
ins
mov
ins
xchg
popa
mov
add
dec
and
ds
jno
pop
and
mov
jmp
adc
out
rol
push
movs
xor
xor
mov
push
loope
and
test
sub
test
jge
lds
xlat
push
mov
arpl
push
into
pop
mov
das
cmp
fld
(bad)
shr
test
mov
fbstp
clc
enter
pop
mov
add
mov
jns
or
adc
into
xor
fdivr
sbb
inc
das
shl
pop
mov
test
sub
(bad)
push
dec
sub
into
xor
push
adc
dec
xchg
rcr
cmc
enter
popf
call
jne
out
add
lds
sbb
mov
cdq
cli
ds
sub
adc
stos
rcr
std
pop
pop
pusha
pop
sbb
xchg
adc
mov
mov
repz
aas
cmp
cmp
jmp
loop
mov
jbe
and
and
pop
aaa
sbb
stos
cs
adc
sahf
fdiv
adc
adc
sti
push
ins
iret
mov
push
call
les
popf
mov
retf
jl
pop
mov
enter
jns
jp
xor
ins
nop
push
or
jae
and
mov
pop
lea
cld
stc
cmp
dec
dec
nop
or
push
fadd
sub
jge
inc
mov
push
bound
shr
test
gs
ins
mov
retf
pop
call
add
and
mov
push
push
cmps
stc
inc
jmp
pop
(bad)
fsubrp
adc
popa
dec
mov
jecxz
scas
loopne
sahf
and
mov
addr16
fiadd
jg
mov
fld
mov
cli
es
test
cmc
jmp
or
and
addr16
sub
mov
out
ret
fs
pop
mov
iret
mov
imul
into
(bad)
xor
adc
cmp
hlt
add
xor
xchg
mov
xor
psubb
(bad)
pop
xor
sbb
fldcw
fs
dec
nop
popf
lds
ret
mov
push
push
sub
push
fild
arpl
mov
mov
nop
shr
dec
sub
cwde
(bad)
push
mov
mov
ss
or
(bad)
movs
push
frstor
test
mov
movs
mov
adc
jno
test
add
aaa
gs
mov
adc
pushf
jno
adc
das
pushf
adc
add
cwde
mov
pop
fldcw
dec
jp
bound
out
xor
loopne
sub
scas
(bad)
jmp
pushf
cmp
adc
cmc
fdiv
mov
and
sub
test
lea
fnstcw
push
push
scas
imul
hlt
mov
(bad)
pop
out
icebp
sti
outs
mov
mov
mov
push
mov
and
icebp
cld
mov
mov
(bad)
cli
lock
pop
mov
mov
pusha
cmps
pusha
leave
mov
dec
std
or
fwait
in
es
dec
aad
jge
xor
(bad)
bound
jmp
jae
ror
xchg
cmp
loopne
ins
dec
dec
push
ja
pop
aaa
xor
xor
test
sub
mov
pop
std
int
fidivr
pushf
mov
add
les
xchg
cs
or
out
(bad)
cld
leave
fcom
cli
mov
xor
push
int
scas
jge
cmp
push
(bad)
iret
sub
mov
jnp
jmp
cmc
add
mov
es
pop
imul
sahf
sbb
mov
adc
dec
inc
sti
daa
movs
inc
fist
pop
mov
jmp
out
xchg
sbb
xor
or
in
cli
pop
pop
push
(bad)
outs
jg
push
sbb
add
aam
sub
test
cmc
imul
mov
add
stos
mov
sub
adc
inc
arpl
je
sbb
cmps
mov
movs
fwait
and
mov
sbb
add
pop
mov
fidiv
aad
dec
or
jecxz
push
mov
into
dec
mov
pop
mov
inc
mov
pop
mul
sbb
xchg
call
xchg
jmp
repnz
jecxz
cmp
inc
jle
movs
xchg
adc
adc
data16
xchg
in
mov
sbb
jge
add
push
bt
call
mov
adc
sbb
into
ret
jae
arpl
outs
imul
shr
push
sbb
outs
sbb
mov
push
jbe
das
pop
jbe
inc
out
test
(bad)
fstp
aas
idiv
daa
jge
pop
mov
loop
xchg
sbb
xlat
in
push
cmp
inc
retf
std
xchg
adc
std
push
or
es
lock
jno
(bad)
fisttp
clc
and
mov
add
sub
fs
dec
imul
cmp
movs
adc
popa
push
jne
clc
adc
dec
test
outs
mov
or
dec
cld
out
scas
dec
pop
jle
daa
mov
adc
xor
xchg
movs
push
sbb
je
(bad)
aad
push
mov
fadd
ins
arpl
rcl
xchg
mov
sbb
push
sbb
pop
sahf
imul
div
cmp
cwde
mov
fidiv
fbstp
mov
ror
lahf
in
cmp
(bad)
into
cwde
ss
mov
pop
cmps
adc
or
sub
xchg
lods
fnstenv
not
mov
mov
bound
clc
xchg
mov
loop
mov
test
mov
inc
imul
mov
icebp
call
cmps
jbe
cmp
scas
push
xchg
mov
bound
xor
pop
mov
mov
mov
shl
push
sbb
push
ret
ret
jmp
outs
pop
jbe
adc
and
dec
out
jmp
xor
mov
dec
leave
sbb
jecxz
xor
pop
out
movs
push
cmp
sub
mov
adc
lock
jp
mov
fs
inc
cmp
fwait
adc
js
jno
pop
add
daa
sbb
pushf
or
pop
dec
xchg
in
lods
cmp
adc
xor
dec
nop
iret
pusha
stos
inc
mov
int
fistp
ds
ins
sbb
popa
xchg
adc
ds
test
adc
cwde
pop
sub
mov
mov
mov
in
test
inc
in
(bad)
xchg
add
pop
fwait
jle
sub
push
mov
adc
mov
push
ret
dec
mov
ficom
adc
test
sub
bound
dec
ret
iret
scas
test
icebp
xchg
or
test
(bad)
cmp
test
jmp
iret
into
adc
inc
dec
pop
fs
dec
add
addr16
xchg
pop
add
cmp
mov
add
fnsave
(bad)
and
push
adc
xchg
test
imul
ss
cmp
xchg
cwde
or
sbb
cmp
(bad)
cld
inc
pop
aaa
mov
sbb
jg
lods
adc
push
(bad)
push
lods
ins
sahf
mov
inc
pop
adc
xor
push
call
push
sahf
std
jno
sub
stc
cwde
sub
add
push
aas
fsubr
xlat
(bad)
das
arpl
dec
mov
and
dec
sub
dec
dec
popf
fstp
sti
xchg
call
lods
xor
std
sbb
sub
hlt
mov
outs
cld
outs
cmps
jl
dec
cmps
test
push
jge
cmp
shl
adc
sahf
push
es
and
cmp
fsubr
mov
mov
fxch
cmps
and
(bad)
fnstcw
retf
stos
push
pop
cmp
fadd
fs
push
sub
arpl
sti
mov
inc
add
scas
shr
adc
jo
push
mov
mov
lods
aas
xchg
ret
jge
jp
ds
xor
leave
mov
jo
jmp
ret
or
mov
pop
mov
jns
test
idiv
hlt
sbb
sbb
out
xor
fldenv
js
mov
push
pusha
jecxz
pop
int
cmp
xchg
inc
add
stos
je
cs
adc
or
and
dec
repnz
gs
fld
cmp
mov
aam
int
adc
scas
jns
clc
xchg
xchg
out
test
mov
into
sub
inc
repnz
test
imul
sub
das
mov
cmp
les
and
movs
jl
test
inc
mov
xchg
push
loop
movs
psubsb
and
sub
add
mov
mov
sbb
dec
mov
fmul
push
add
sbb
shl
xor
add
fbld
dec
dec
dec
ror
xchg
pop
test
mov
js
pushf
push
inc
push
dec
icebp
jmp
adc
in
sub
mov
add
jnp
adc
or
xchg
mov
push
retf
pop
pop
dec
sub
and
jge
mov
pusha
not
and
adc
xchg
fcomp
adc
adc
ret
jne
mov
inc
sub
lods
shl
gs
(bad)
out
dec
xlat
mov
inc
stos
mov
pop
jmp
mov
mov
jae
stos
mov
ins
sub
shl
inc
adc
pop
lods
jno
mov
(bad)
cmc
push
pop
sbb
cmp
fs
cli
std
xchg
or
test
jle
adc
arpl
pusha
mov
sub
sub
pop
lods
mov
dec
adc
pop
repnz
stos
std
mov
cmc
ins
arpl
mov
aas
pop
dec
inc
cli
pop
fnstsw
retf
mov
stos
(bad)
mov
shr
xchg
fild
test
add
cmps
mov
shl
jae
push
xor
pop
cmp
fidiv
fldcw
cmp
lods
jmp
xchg
daa
(bad)
popf
jb
xchg
les
mov
je
mov
add
xor
popf
ins
mov
lods
gs
mov
push
dec
nop
push
pop
push
enter
dec
sub
sub
jbe
(bad)
xchg
add
ret
jbe
ret
arpl
fdivr
cmp
xchg
nop
(bad)
fucom
mov
sub
leave
jg
push
stc
sub
cmp
retf
nop
pop
add
lds
and
jge
cmps
inc
iret
rcl
icebp
mov
ins
and
sahf
and
jo
js
push
cmp
mov
mov
xchg
dec
mov
cdq
imul
ret
ds
hlt
sbb
clc
out
jae
push
push
mov
push
xor
jns
pop
ftst
push
and
retf
dec
push
sbb
mov
jl
arpl
int
fucomip
movs
mov
fsub
inc
rcl
fistp
jb
add
imul
inc
cmp
xchg
mov
das
sub
cdq
pop
test
pop
xlat
pop
jae
jnp
adc
cmp
shl
jmp
or
add
xor
push
out
xor
aam
cmp
adc
cmps
call
pop
mov
hlt
cmp
js
(bad)
sbb
outs
add
iret
push
loopne
adc
aam
sbb
jp
test
in
ds
cdq
ins
cmps
ds
shr
push
or
lock
add
test
jo
ret
cmps
dec
jl
call
xor
xchg
pusha
pop
adc
xchg
mov
xchg
sbb
xchg
lds
push
mov
imul
xchg
sbb
xchg
push
hlt
fisubr
jecxz
pop
inc
and
mov
cmovg
cwde
iret
test
inc
xchg
pop
in
mov
cli
sbb
mov
leave
(bad)
leave
xor
ja
jnp
outs
popa
aam
jecxz
xchg
adc
push
fucom
stos
xchg
retf
push
lea
adc
pushf
aas
iret
xchg
lahf
outs
addr16
push
in
outs
jl
out
movs
rol
movs
rcl
mov
ror
pop
cmps
jge
pop
cmp
xchg
sub
stos
(bad)
and
mov
jp
in
repnz
mov
fs
cwde
mov
lea
jb
ror
push
leave
cmp
into
punpckhwd
pop
sub
pop
mov
cmp
mov
addr16
cmp
xchg
pusha
hlt
gs
test
jnp
or
push
in
jno
cmps
push
cmp
jmp
stos
rcr
es
inc
ret
mov
out
mov
xor
mov
out
xchg
ret
and
adc
pushfw
inc
jmp
jecxz
jne
mov
outs
sar
jmp
mov
jns
sti
pop
fbld
stc
imul
pop
pop
inc
dec
mov
lods
jmp
push
mov
lahf
mov
ffreep
mov
adc
das
imul
popa
les
mov
or
ret
jg
out
les
or
mov
sbb
js
xor
test
add
icebp
int3
jb
jecxz
sbb
test
jmp
adc
call
gs
adc
bound
test
scas
jnp
pop
scas
push
arpl
fldcw
xchg
mov
add
inc
inc
pop
inc
mov
imul
ds
cmp
shl
add
retf
lea
sub
push
pop
sbb
jns
push
call
push
pop
enter
xchg
daa
inc
push
push
mov
outs
sub
loope
call
xchg
and
add
bound
adc
movs
sti
test
rcr
push
add
(bad)
inc
mov
pop
xchg
sahf
in
cmp
outs
scas
cld
out
fsubr
lods
not
mov
aaa
int3
jge
in
mov
(bad)
in
outs
out
pusha
fnsave
aas
add
jmp
cmps
cld
frstor
mov
scas
test
mov
sub
lds
jmp
mov
add
cmp
lahf
out
xchg
xchg
mov
mov
push
popf
inc
sub
pop
(bad)
sub
aaa
or
daa
jmp
add
cmp
sbb
outs
dec
jg
into
mov
mov
or
ficom
lock
test
icebp
clc
sub
adc
push
call
scas
sti
jecxz
mov
pop
adc
aam
and
shl
push
xor
inc
jmp
jmp
test
les
jo
call
or
sub
test
dec
rol
scas
sbb
mov
adc
jne
test
sub
repz
jl
ins
lods
mov
pushf
popa
cmp
(bad)
test
repz
mov
movs
test
inc
retf
sbb
inc
mov
and
fdivr
mov
push
ins
adc
xchg
mov
mov
pushf
loopne
pop
js
mov
fisttp
push
xor
jecxz
pop
outs
sub
out
sbb
xor
ror
xchg
add
fcmovnu
jmp
mov
shl
jge
sbb
cmp
aas
push
inc
scas
shl
jnp
pop
xchg
ret
xchg
outs
clc
out
mov
pop
jmp
stos
enter
sbb
cmp
jno
in
cmc
inc
xchg
push
ficomp
or
fisttp
scas
fld
fldenv
sub
pop
dec
or
xlat
ret
pop
xor
out
add
inc
xor
fdiv
mov
push
jo
inc
dec
sub
jmp
cs
and
retf
pop
out
imul
xchg
std
xor
lods
fisubr
(bad)
out
add
sub
mov
ss
mov
sbb
and
inc
in
pop
(bad)
addr16
out
dec
repnz
aaa
ins
div
pop
sub
push
pop
ficom
rcl
ret
or
add
enter
lods
sub
cmp
jae
(bad)
xchg
shl
dec
call
adc
mov
add
and
int
fcmovne
movs
jle
inc
pop
js
dec
cmp
xchg
out
mov
inc
popf
movs
cmp
sbb
iret
and
out
inc
cmps
ins
mov
dec
mov
mov
int
and
dec
cmp
in
sub
push
mov
jge
and
xchg
out
dec
sbb
cmp
loope
push
or
popf
cmp
lock
inc
aas
(bad)
adc
xor
sbb
shr
sub
jmp
in
mov
fld
rcr
loope
push
jo
imul
inc
jecxz
or
sub
sub
push
or
daa
xor
out
(bad)
fcmove
push
cs
pusha
test
stos
arpl
jo
push
mov
repnz
jnp
mov
cli
dec
hlt
push
sub
xchg
add
jb
inc
mov
(bad)
xor
frstor
adc
mov
and
pop
stos
adc
ret
movs
xor
sbb
aas
adc
cmp
repnz
pop
cmc
push
xor
rcl
push
fcomp
xchg
pop
cmp
pop
nop
pop
lea
and
fstp
cmp
(bad)
inc
xchg
adc
jnp
popa
test
or
imul
cmp
dec
mov
movs
(bad)
cmp
mov
adc
aam
addr16
aam
cwde
mov
sbb
xor
xchg
jo
jne
fcom
sbb
cld
dec
test
(bad)
in
or
xchg
(bad)
cli
push
mov
lock
mov
test
test
push
cmp
cs
aas
ret
in
in
xchg
push
and
mov
sbb
cmps
loop
xchg
sets
test
repz
scas
inc
adc
jbe
cmp
ja
not
cwde
push
rcl
lods
push
fcom
cmp
outs
sub
ins
outs
fidivr
stos
pop
push
or
outs
out
call
mov
add
movs
mov
fst
dec
loopne
cmp
fcom
xchg
sar
cmp
or
test
(bad)
into
and
xor
(bad)
stos
jg
mov
shl
call
outs
rcr
jg
nop
sbb
pop
repnz
test
ficomp
jecxz
xchg
stos
mov
xchg
inc
xlat
pusha
add
mov
test
jns
nop
mov
js
in
sub
scas
sub
lods
add
push
sub
dec
push
dec
lods
pop
mov
cld
faddp
ds
pop
add
scas
cmps
pop
loop
es
in
ss
pop
xor
cmc
jmp
(bad)
(bad)
mov
daa
adc
(bad)
bound
aad
or
xchg
add
lods
shl
rcl
add
push
xor
mov
push
push
inc
dec
pop
inc
leave
or
xchg
(bad)
cld
test
xlat
popa
cdq
and
(bad)
outs
loope
mov
jle
inc
int3
call
addr16
cmp
xchg
pusha
test
xchg
cmps
pop
jle
push
cmps
pop
push
nop
push
cmp
ins
push
or
cmc
push
sbb
into
es
scas
inc
jge
sub
inc
cmp
fidivr
dec
cmps
adc
jne
dec
add
shl
lods
cmp
cmp
mov
call
scas
jmp
ds
sub
ret
fdivp
xor
arpl
pop
es
mov
adc
push
pop
or
mulps
xor
pop
mov
stos
push
scas
cmp
nop
fstp
or
push
es
cmp
xor
pop
mov
mov
inc
lds
in
add
add
push
dec
addr16
rol
push
into
cmps
xchg
and
pop
imul
loope
outs
mov
test
mov
inc
retf
test
outs
(bad)
in
(bad)
sti
and
std
ja
es
gs
je
push
push
add
cdq
jno
push
push
inc
cmp
(bad)
mov
in
cmp
sbb
sub
mov
test
(bad)
pop
mov
inc
pop
pop
je
pop
xchg
sbb
mov
pop
xor
test
out
call
jbe
imul
xchg
call
add
xchg
or
inc
add
addr16
dec
arpl
pop
int3
jns
std
push
pusha
adc
test
mov
sbb
xchg
stos
pop
inc
pop
xlat
lods
jae
daa
(bad)
push
cmps
sub
pop
sbb
xchg
mov
or
pop
ret
pop
adc
hlt
(bad)
daa
mov
sbb
arpl
or
dec
ret
inc
out
xchg
popf
pop
sar
out
cwde
sti
hlt
movs
or
cli
push
outs
daa
fisubr
push
mov
push
sbb
dec
sbb
out
stos
inc
inc
out
test
push
mov
inc
daa
xchg
sbb
fmulp
popa
add
pop
sub
xor
push
stos
mov
push
xchg
mov
mov
sub
inc
jmp
mov
and
push
mov
repz
mov
inc
cmps
into
pop
lahf
popa
sbb
out
test
mov
fcomp
sub
sub
fstp
or
cmp
mov
idiv
sbb
pusha
ins
push
out
ret
and
mov
push
rcr
and
int
(bad)
push
and
clc
movs
mov
xchg
in
cmp
or
xchg
and
pop
sbb
retf
dec
xor
sbb
mov
add
fmulp
xchg
jmp
pushf
lods
fs
scas
and
aam
jle
mov
stc
adc
fild
push
or
inc
and
cld
repz
adc
add
and
ret
mov
push
push
pop
cmc
ins
(bad)
pop
or
stc
arpl
enter
dec
adc
or
scas
(bad)
pop
pop
inc
imul
scas
sahf
xor
retf
pop
je
xor
int3
(bad)
cmps
cmp
mov
imul
(bad)
stc
hlt
mov
mov
push
aad
std
dec
or
out
jge
ficomp
inc
mov
cwde
add
leave
iret
test
jbe
sbb
xor
lahf
ss
push
cmp
aam
fld
add
iret
pop
out
add
scas
out
lock
pop
scas
stos
adc
sub
or
test
cs
cmc
mov
bound
icebp
aaa
fadd
inc
retf
rcl
xor
fimul
loopne
cs
cli
xchg
loopne
adc
cmp
xchg
mov
fstp
ror
jns
fild
(bad)
call
movs
arpl
faddp
or
(bad)
loope
ins
mov
std
xchg
cs
jle
cmp
ins
int
xor
out
mov
cmps
cmp
mov
pusha
aad
sti
cmp
inc
cmps
ss
jb
sub
pusha
push
loop
clc
mov
hlt
jge
les
cmc
iret
xor
sub
iret
out
aas
ror
xor
add
hlt
add
inc
popf
call
sub
jne
or
or
pop
or
mov
mov
into
aaa
cmp
dec
js
cmps
mov
sti
out
iret
ret
leave
rcl
inc
pusha
aas
(bad)
sub
int3
or
movs
dec
and
sub
xchg
xchg
mov
inc
pop
fcom
pop
lods
mov
push
push
push
push
pop
outs
inc
xor
push
jnp
jp
data16
test
jno
mov
or
pop
dec
push
cmps
cmp
dec
pusha
aam
or
cld
xor
out
push
inc
add
pop
cwde
aam
rdpmc
mov
retf
int3
iret
in
jle
and
ja
aaa
mov
rcr
mov
into
sbb
clc
inc
cmp
aam
ss
mov
out
pop
stos
or
aad
pop
push
stc
dec
sub
or
test
retf
sbb
leave
fidivr
icebp
out
jne
and
mov
add
pop
xor
jno
mov
std
fwait
clc
js
fisttp
loopne
lock
xlat
or
movs
push
loopne
pextrw
mov
fisubr
cdq
mov
std
test
inc
pop
mov
jne
ret
mov
jp
jns
popa
stos
jb
xor
add
retf
iret
das
jle
(bad)
and
and
mov
addr16
adc
dec
cmp
add
mov
aaa
pusha
and
jg
push
cmc
fimul
jg
test
mov
cdq
xchg
or
adc
push
jnp
into
lods
dec
and
mov
xor
cmp
les
dec
jg
scas
arpl
push
dec
imul
xor
sahf
adc
call
fidivr
(bad)
push
pop
inc
ja
add
clc
and
test
mov
fld
cld
rol
or
mov
and
fld
adc
cmp
adc
aaa
int
shr
mov
mov
add
pop
mov
mov
mov
data16
mov
outs
push
pop
ins
jmp
shl
adc
xchg
dec
sub
test
(bad)
sub
je
push
fs
test
std
pop
popa
mov
in
iret
jmp
or
or
jae
fild
adc
mov
mov
and
loop
pop
rol
(bad)
jb
inc
mov
inc
push
aaa
add
hlt
mov
out
pop
push
or
je
leave
fwait
arpl
outs
neg
jmp
dec
call
cmc
shl
int3
out
inc
aam
ds
mov
ja
test
mov
adc
stos
ss
(bad)
jg
adc
stos
dec
popf
aad
mov
mov
repnz
ret
xchg
loopne
and
xor
sar
push
jl
aad
test
cld
inc
stc
pop
push
fisubr
xor
ss
cmp
clc
retf
cs
into
mov
in
shr
push
scas
mov
clc
fidivr
shl
pop
pop
xor
inc
and
push
lods
stos
loopne
out
or
dec
dec
mov
lock
fnsave
cmp
inc
cs
idiv
sbb
in
rcr
and
inc
pop
pop
adc
les
sbb
cmp
push
and
xchg
int
xor
sbb
dec
jne
movaps
sbb
cdq
call
fs
(bad)
or
movs
push
aam
ror
movs
loop
mov
mov
in
xor
lods
cmp
loopne
adc
push
mov
or
and
data16
push
mov
dec
test
(bad)
push
scas
outs
cdq
jnp
ins
fsubrp
push
dec
out
pop
cmc
add
and
aaa
hlt
dec
outs
push
cs
xchg
lock
les
pmaxsw
cld
cli
ror
aaa
push
lods
adc
mov
icebp
jbe
jns
mov
and
jb
mov
xor
mov
loope
movs
(bad)
or
retf
xchg
push
int
and
add
mov
rcl
push
jo
mov
push
pushf
jno
push
pop
iret
sbb
jmp
imul
and
xchg
lahf
adc
div
fisubr
jns
out
mov
xor
fsubrp
shl
lock
jbe
push
sbb
fnstsw
add
sub
pop
xchg
das
pop
cmps
pushf
nop
pop
fcom
das
jle
shl
add
std
retf
sub
(bad)
mov
xchg
shl
jecxz
add
out
push
mov
ret
sub
xchg
add
(bad)
and
pop
iret
sub
addr16
stos
jae
ins
jo
jle
imul
ja
ja
sahf
adc
jbe
sub
mov
das
dec
push
test
out
xchg
xor
jg
stc
std
outs
dec
mov
adc
dec
push
aaa
nop
lock
outs
ds
aaa
(bad)
or
or
arpl
gs
sub
fistp
into
sub
xor
imul
ret
and
aaa
and
push
xor
xor
xor
push
into
mov
mov
adc
lea
and
clc
push
rcr
inc
in
in
fisttp
lods
mov
movs
dec
and
icebp
jmp
xchg
pop
xlat
ins
mov
addr16
pop
inc
push
das
stos
inc
jmp
rcl
push
js
cmp
ja
pusha
fisub
nop
pop
mov
push
xlat
mov
(bad)
adc
std
imul
cmp
xor
in
lds
mov
imul
cmp
cmc
or
imul
push
add
out
cld
imul
adc
jmp
cmp
mov
dec
das
xchg
scas
sub
xchg
dec
(bad)
fsubr
fimul
ror
jg
mov
jae
pop
sub
cmp
mov
rcl
stos
mov
push
inc
retf
dec
leave
xchg
jg
cld
ins
pop
dec
loop
fstp
or
or
pop
or
xor
imul
aas
cmps
mov
aam
test
or
push
pop
fwait
xchg
iret
fldcw
push
(bad)
jp
retf
dec
mov
out
sub
in
call
mov
and
(bad)
xchg
mov
rol
das
pop
movs
adc
idiv
sbb
aas
repz
test
push
add
(bad)
out
or
out
or
data16
mov
push
leave
or
outs
mov
adc
pop
inc
inc
push
pushf
cmp
outs
jb
fsubr
stos
xchg
and
sub
retf
push
shl
push
pop
test
xlat
sar
inc
xor
mov
imul
pop
sbb
add
scas
cs
cmp
test
jmp
addr16
push
not
not
mov
aam
pusha
mov
addr16
out
(bad)
(bad)
mov
fld
cmps
xor
fidivr
call
jmp
in
sbb
adc
js
fs
pop
cld
sar
pop
adc
mov
mov
test
gs
sub
stos
jp
(bad)
cli
lods
mov
rcl
xchg
push
push
jge
(bad)
ffree
mov
push
adc
mov
daa
sbb
dec
mov
not
sub
clc
out
pop
mov
or
sar
or
cmps
es
ja
adc
test
xchg
inc
cmp
push
cld
cmp
mov
mov
xor
popf
push
mov
jne
push
pop
xchg
iret
push
loope
sub
and
add
adc
xor
or
pusha
xchg
add
lods
(bad)
pop
mov
cs
test
ret
dec
mov
jmp
mov
test
rcr
jb
pop
cmps
jmp
xchg
fnstenv
fs
in
mov
gs
popa
sbb
and
sbb
dec
adc
cli
jns
jae
mov
mov
outs
xchg
jno
jns
aad
pusha
outs
shl
scas
aas
or
adc
dec
jae
pop
xchg
mov
mov
enter
fldenv
sbb
xor
dec
fist
dec
cmp
into
arpl
pop
jl
stos
sbb
(bad)
mov
loope
fist
mov
cwde
inc
sbb
xor
inc
out
lods
dec
stc
or
ficomp
je
fwait
jecxz
push
movs
sub
pop
mov
mov
mov
jge
add
jmp
and
add
movs
inc
jge
jno
(bad)
(bad)
aad
mov
call
lods
adc
ja
mov
mov
pusha
sbb
popf
shr
jo
or
mov
cmp
dec
repz
inc
es
xchg
xchg
(bad)
mov
daa
mov
dec
int3
add
pop
ret
mov
outs
pop
xor
inc
and
push
(bad)
cdq
or
loope
sub
std
sbb
mov
popf
out
mov
btr
lahf
arpl
xchg
mov
push
cdq
adc
fsubr
dec
sahf
retf
(bad)
adc
xchg
dec
je
jo
sub
pusha
lock
add
mov
add
cmp
mov
sub
jnp
aas
addr16
repnz
fwait
test
push
stos
inc
cdq
mov
cmp
mov
loopne
addr16
add
mov
(bad)
and
xor
stos
push
pop
stos
ret
fld
retf
mov
and
mov
sti
mov
outs
pop
pushf
cmps
and
nop
mov
mov
jl
bnd
movs
sub
data16
stc
movs
mov
jl
bound
cmp
out
icebp
cmp
into
out
mov
jns
add
xor
dec
mov
inc
or
lds
shl
int3
outs
cmp
mov
lods
jecxz
nop
into
jbe
lock
mov
and
inc
inc
jp
jecxz
nop
sub
jns
and
gs
jno
mov
cmp
or
cmp
stos
fwait
dec
leave
push
adc
xchg
sahf
cmps
int
mov
pop
dec
adc
mov
mov
sbb
mov
and
mov
jo
sbb
cdq
jmp
rcl
inc
adc
ret
jle
outs
enter
nop
cmp
inc
dec
or
lods
and
iret
sahf
mov
lods
push
jbe
lahf
clc
and
add
xor
jb
(bad)
hlt
jg
or
sub
ss
jbe
mov
add
dec
sbb
xchg
sub
inc
push
jnp
repz
sbb
pop
mov
cmc
out
push
add
sbb
(bad)
shr
xchg
scas
loope
inc
xchg
aas
retf
outs
cli
out
or
ins
aaa
iret
adc
or
enter
jmp
rcr
mov
in
cld
ss
mov
inc
cmp
fdiv
jo
adc
outs
aad
push
mov
test
sub
cmp
cdq
mov
inc
mov
push
mov
aas
scas
push
inc
sbb
xchg
inc
mov
push
push
push
jno
mov
sbb
add
inc
add
push
pop
sub
xor
inc
inc
int
xchg
or
sub
sar
pop
jge
rol
popa
cwde
pushf
rol
mov
cmps
(bad)
adc
mov
xlat
out
sub
cld
sbb
xchg
int3
call
ret
and
fs
rcl
mov
mov
enter
fnsave
pop
jno
cmp
jmp
and
push
iret
cmp
xlat
add
popa
ret
cmp
xor
aaa
adc
sbb
xchg
xlat
push
inc
xchg
sub
fsub
nop
jmp
shl
lahf
xor
inc
retf
sub
push
test
es
hlt
xchg
xchg
jmp
(bad)
or
pop
inc
movs
mov
je
dec
int3
aad
loop
cdq
fsubr
test
(bad)
in
daa
xchg
cmps
mov
push
cmp
push
out
mov
jmp
xor
jl
push
push
xchg
dec
xchg
adc
test
jb
(bad)
repz
arpl
jo
test
sti
adc
mov
retf
cmp
dec
xchg
test
es
ret
add
shr
jmp
das
dec
xor
(bad)
in
or
inc
xchg
(bad)
aas
or
push
fild
xor
pop
(bad)
jns
mov
push
push
fnstenv
cmp
xchg
xor
fldenv
and
in
and
mov
and
push
jne
out
inc
cmp
neg
sbb
dec
and
mov
xchg
mov
push
sti
inc
add
sti
(bad)
mov
push
add
xchg
sbb
mov
mov
pop
dec
lods
lds
sahf
movs
pop
add
dec
ror
sub
or
jnp
xor
jl
sub
aas
mov
lods
fwait
xor
mov
and
and
aam
shr
cmp
mov
jno
call
lock
pop
mov
push
gs
stos
xchg
ss
pushf
mov
jl
js
sbb
sub
jp
or
(bad)
pop
mov
or
push
iret
shr
dec
mov
push
out
mov
rcl
dec
cli
or
push
in
jo
fs
in
pop
ja
inc
adc
js
mov
add
xor
sub
int3
call
xchg
push
inc
pop
rcr
mov
lods
stc
mov
push
(bad)
xchg
push
cmp
dec
xor
or
jns
jmp
push
sar
pop
xor
loopne
(bad)
cmp
pop
mov
pop
jl
test
and
pop
sbb
popf
xor
pop
dec
ins
shr
cmp
inc
inc
nop
ins
xchg
mov
cwde
in
dec
ror
lea
dec
xor
daa
cdq
ins
loope
or
lea
jp
pop
add
pusha
cli
cli
lahf
test
shl
mov
hlt
dec
pop
pop
ins
cmp
pop
mov
inc
xor
jmp
push
lds
shl
sbb
movs
call
sub
add
addr16
mov
adc
sub
xchg
cmps
mov
out
and
aam
cmp
pop
mov
xor
loope
cmp
(bad)
rcr
dec
mov
or
imul
pop
stos
or
pop
test
jnp
adc
std
aas
and
call
mov
lods
enter
fwait
into
daa
loopne
xchg
ins
inc
mov
pop
sbb
hlt
retf
daa
jb
mov
outs
mov
sahf
jge
retf
in
add
add
sar
daa
popf
stos
add
fidiv
call
outs
(bad)
inc
xor
imul
add
xchg
lods
(bad)
fcmove
enter
lock
ficomp
sub
jnp
mov
mov
lock
mov
mov
ret
int
das
jle
aam
jg
popf
rol
xchg
xchg
je
push
jns
cwde
inc
push
mov
pop
je
sub
xchg
icebp
shl
xor
mov
mov
mov
into
call
mul
popa
loopne
cld
add
jp
pop
or
int3
xchg
adc
lahf
push
push
das
jg
and
or
xor
mov
xchg
scas
test
ret
inc
adc
cwde
jbe
mov
stos
xchg
pmulhuw
mul
dec
inc
xor
inc
xor
ja
mov
sbb
dec
ss
retf
mov
clc
or
lds
test
push
fwait
arpl
pop
movs
xor
sub
push
sti
mov
mov
test
fsubr
inc
je
popf
jbe
push
sbb
dec
sub
outs
jecxz
jg
in
call
retf
ins
out
pop
sbb
push
mov
test
mov
mov
mov
adc
enter
(bad)
imul
bound
leave
les
mov
mov
xor
jns
pop
dec
popa
mov
xchg
push
lock
js
hlt
mov
movs
add
jmp
shr
(bad)
les
add
xchg
inc
xchg
shl
lds
fwait
xchg
mov
bound
mov
movs
or
neg
outs
ins
in
cmp
push
dec
xchg
fiadd
aam
ds
fist
xor
mov
fdivr
icebp
call
(bad)
mov
cmc
push
dec
sbb
or
hlt
jb
addr16
mov
mov
xchg
and
loop
test
fild
ins
or
out
cmp
not
pop
cwde
shl
xchg
or
dec
add
jno
mov
into
mov
fidivr
scas
(bad)
lock
sub
mov
leave
xlat
sahf
xchg
push
popf
(bad)
jecxz
cmp
fwait
inc
repnz
imul
lahf
rcr
loop
cdq
sub
repz
das
jl
xor
ins
jl
pop
ror
out
es
jo
and
xor
scas
cmp
lock
in
test
es
xchg
push
inc
mov
sub
xchg
add
aad
push
and
jmp
addr16
mov
inc
out
out
pop
pop
mov
xor
pop
fsub
(bad)
das
retf
jae
leave
dec
es
fst
out
and
cmp
xor
retf
rcr
or
idiv
test
jo
mov
loop
cld
lods
push
mov
fnstcw
popf
call
cmps
xor
pushf
sbb
ret
mov
mov
add
into
cmp
and
push
inc
rcl
cmps
pop
sub
lds
and
mov
cmp
test
sar
jg
outs
and
in
out
arpl
ja
mul
shr
pop
cmp
and
or
adc
shl
adc
and
inc
mov
fist
lea
call
daa
outs
add
(bad)
in
xchg
repnz
ror
dec
bts
adc
or
mov
pop
enter
or
cld
xchg
jo
and
stos
mov
into
and
push
enter
sbb
loopne
xlat
(bad)
(bad)
mov
and
nop
and
fcmovne
sbb
scas
jl
xchg
bound
add
dec
nop
mov
add
sti
shr
stos
push
dec
sub
cmps
ja
lods
outs
shr
mov
mov
es
sub
and
retf
jl
mov
cs
dec
pop
clc
dec
and
push
in
repnz
in
mov
or
lea
mov
adc
lahf
sar
rcl
loop
ret
push
lods
and
pop
outs
mov
pusha
and
pop
jae
lods
xor
xchg
jno
lahf
fcmovnbe
test
dec
popa
fist
dec
sbb
in
movs
hlt
into
push
enter
add
dec
mov
inc
or
stos
cdq
mov
sar
lea
ja
aam
jno
cmps
das
and
cld
adc
push
(bad)
mov
out
sbb
fs
adc
xchg
inc
js
sub
test
xchg
pop
adc
rcr
push
or
sbb
mov
dec
icebp
lock
fcmovu
jl
idiv
jmp
lea
movs
test
cdq
(bad)
imul
loop
lock
fcomp
dec
push
in
mov
ret
enter
push
xchg
mov
adc
(bad)
bound
shl
fsub
stos
call
fstp
push
int3
xchg
lods
push
rcl
inc
dec
jg
xchg
mov
mov
pusha
imul
xchg
lock
pop
loopne
lahf
retf
imul
mov
repz
mov
mov
and
inc
cmps
test
ins
loop
dec
je
mov
sbb
jbe
add
adc
stos
push
cmp
gs
add
xchg
mov
xchg
fsub
call
sbb
out
dec
test
ficomp
aam
mov
and
add
inc
pop
sbb
gs
jb
xchg
sub
dec
or
out
adc
shl
je
and
aas
push
loope
xchg
and
(bad)
cli
push
cdq
xor
push
data16
cmp
jle
jno
retf
stos
scas
hlt
bts
inc
js
or
aaa
out
dec
push
mov
dec
jbe
push
rol
sbb
dec
push
aad
outs
jb
sub
add
movs
in
sti
pop
ja
test
ins
dec
ja
jmp
xchg
pop
mov
ins
ja
xor
sub
mov
addr16
push
pop
add
sub
nop
jg
push
es
sbb
ds
mov
or
out
push
mov
push
div
ins
jbe
scas
std
add
xor
inc
add
fld
push
pop
clc
xchg
sub
cmps
cmp
mov
outs
rcr
mov
cmp
call
add
aaa
push
cmc
bound
shr
scas
gs
jmp
sti
dec
scas
repz
mov
int3
jge
mov
popa
cmps
retf
mov
jmp
(bad)
fmul
lea
inc
into
push
mov
or
jge
fs
ins
cs
jno
dec
push
sbb
shl
adc
mov
lods
sub
out
retf
add
jp
add
mov
dec
push
ror
aas
lock
fsubr
clc
or
mov
xor
nop
call
bound
xor
int3
int
imul
mov
test
stc
sbb
div
das
jns
test
je
adc
cmp
imul
sbb
pop
pop
call
lock
jmp
cwde
inc
jge
and
push
and
lods
or
div
sub
jo
lods
lea
stos
out
mov
and
push
and
fnstsw
sbb
mov
jnp
inc
nop
add
or
jnp
rcl
in
out
movs
cdq
or
push
dec
in
cld
jmp
push
push
jg
out
or
mov
pop
pop
xor
xchg
xor
lods
or
ror
xchg
jne
lock
sub
in
xchg
jnp
and
push
ja
scas
add
fs
fdivr
imul
out
dec
inc
ds
xor
or
jno
aad
cwde
sbb
out
outs
inc
test
in
stc
es
scas
fild
not
clc
pop
mov
pop
out
inc
pop
sbb
lock
into
fld
mov
and
adc
inc
or
aad
aaa
sbb
pop
xchg
bound
stos
push
cli
sub
aad
push
js
in
mov
push
fdivr
push
push
pop
ret
fld
pop
jnp
sbb
add
movmskps
or
adc
xchg
mov
add
cld
inc
adc
cmp
sub
icebp
clc
mov
cs
or
lahf
(bad)
inc
shr
es
test
mov
shl
jb
mov
jl
xor
outs
xchg
sbb
mov
xchg
jmp
mov
dec
mov
push
add
or
pusha
push
xor
inc
in
movs
dec
xchg
or
dec
pop
aaa
push
dec
in
xchg
stos
sub
add
inc
xor
les
scas
adc
mov
inc
xor
cmc
adc
jp
push
adc
add
and
inc
hlt
mov
test
and
test
sub
ja
aas
lods
pop
inc
pop
inc
push
add
pop
dec
mov
loope
repz
push
xchg
stos
stos
icebp
mov
pop
xchg
jnp
inc
loope
int
mov
mov
idiv
pop
mov
cmp
and
or
inc
fcom
ret
cwde
sbb
add
adc
pop
push
and
mov
xor
push
cmp
xchg
sahf
xor
fsubr
(bad)
push
xchg
xor
jp
push
mov
mov
retf
jecxz
lock
mov
lods
push
cdq
cmp
inc
pop
add
retf
add
sbb
int
test
dec
setns
xor
sub
mov
mov
test
inc
and
jno
jb
fiadd
and
mov
mov
pop
mov
sub
dec
out
cmps
aaa
pop
push
and
jae
mov
xchg
test
mov
inc
aaa
jecxz
jmp
xchg
scas
in
jg
stos
cdq
and
xlat
in
cmp
push
dec
mov
mov
stos
push
cmps
cmp
sub
mov
add
(bad)
mov
shr
mov
je
and
add
xchg
mov
jle
push
pop
iret
push
imul
(bad)
jno
repz
xchg
pop
test
jp
iret
pop
xchg
fstp
add
(bad)
in
push
jnp
cmc
add
mov
les
or
xor
test
sahf
dec
jmp
pop
mov
stos
pop
jb
call
test
sub
int
rol
xchg
sub
pop
inc
aas
pop
jg
(bad)
or
nop
jmp
test
jbe
dec
inc
xchg
sbb
(bad)
xor
bound
adc
ja
fsubr
cmps
or
sbb
dec
and
push
popa
push
in
mov
xor
push
add
dec
das
xchg
xchg
add
adc
repz
imul
out
mov
js
lods
mov
dec
fbstp
(bad)
cmp
mov
jl
outs
lock
call
add
sbb
aas
mov
cdq
jmp
mov
jbe
loopne
repnz
rcr
fucomp
pop
jmp
int3
loopne
mov
stos
loopne
ss
add
xchg
call
jmp
mov
lds
icebp
cmps
call
call
jne
outs
jmp
and
push
loopne
and
fcomp
mov
sbb
sub
popf
add
addr16
xor
(bad)
popa
jnp
(bad)
ror
push
out
cmps
inc
fstp
add
adc
adc
movs
mov
cmp
int
nop
rcl
ret
and
sahf
pop
pop
pop
sbb
cmps
test
fnsave
and
add
(bad)
neg
out
(bad)
daa
sub
pop
fwait
xchg
sbb
pop
add
retf
dec
pop
enter
pop
pmaxsw
ins
inc
out
jns
mov
mov
inc
mov
sbb
call
jge
ret
adc
(bad)
mov
jp
ins
mov
lods
clc
hlt
call
bound
call
fimul
(bad)
jno
push
cmpps
js
pop
jnp
into
add
sbb
or
mov
inc
mov
add
and
js
imul
lods
lods
loopne
das
sbb
cmp
pusha
xchg
pop
outs
mov
inc
test
sub
or
mov
ja
sub
bound
add
mov
inc
js
stc
bound
fnsave
xchg
xor
ins
fsubr
sbb
add
(bad)
retf
out
int
lea
out
cmc
adc
int
cmp
add
dec
sub
lock
lea
(bad)
jmp
(bad)
ds
pusha
jl
xchg
jmp
sbb
sbb
add
test
and
scas
rol
clc
stos
push
ja
loop
sub
mov
int3
lods
add
inc
nop
mov
jmp
mov
push
cmp
cmps
repz
or
mov
fnsave
or
jp
add
(bad)
push
retf
inc
dec
xchg
adc
pop
outs
mov
sub
xor
inc
adc
call
jl
sub
fst
pop
test
inc
ds
daa
pop
aad
daa
(bad)
push
nop
aad
int3
mov
outs
icebp
ja
call
and
jbe
pop
push
scas
out
outs
xchg
rol
dec
inc
out
mov
push
fcomp
or
leave
call
mov
das
add
outs
fadd
sbb
pop
xor
mov
push
xchg
stc
aaa
mov
cs
cdq
mov
scas
cli
lock
dec
std
arpl
lds
mov
popa
inc
mov
je
in
cmp
inc
jo
shl
mov
fistp
xor
dec
xor
and
test
imul
int3
pushf
test
idiv
inc
inc
ins
jl
mov
(bad)
pop
inc
or
xor
jecxz
inc
jns
jmp
fdivr
int
mov
sub
mov
int3
jo
sub
stos
pushf
jg
(bad)
in
popa
push
pushf
sub
sub
rcl
cdq
inc
push
pop
scas
sbb
pop
add
add
shl
jno
xlat
push
shr
jmp
nop
popa
(bad)
les
add
cmp
or
jno
push
adc
int
ficom
mov
jb
fsubp
les
sti
and
mov
cmp
or
mov
jmp
xor
pop
cmp
jge
mov
data16
or
inc
loopne
pop
mov
loop
loop
xchg
add
aam
inc
jg
cs
adc
inc
xchg
jns
push
push
test
xlat
out
fcomip
mov
ss
and
jb
push
adc
(bad)
fidivr
popf
sub
jae
xchg
sub
jmp
sub
mov
mov
jo
mov
fidiv
in
movs
out
jg
icebp
loop
xor
enter
jb
dec
arpl
mov
ror
xor
dec
iret
shl
adc
retf
loope
mov
adc
push
pop
das
pop
int3
fwait
mov
popf
cwde
test
sub
clc
sbb
add
fst
aam
add
in
mov
out
mov
stos
sti
and
xchg
rcr
add
mov
or
inc
xchg
cwde
adc
cs
cmp
push
jae
ror
inc
dec
aad
sub
leave
jle
in
pop
arpl
cmp
mov
pusha
into
fild
inc
cmp
lods
(bad)
pop
in
pop
fimul
push
mov
jg
nop
pop
pop
mov
lods
or
adc
nop
or
fwait
test
jg
cli
or
fnstsw
sbb
ret
pop
sub
mov
fst
mov
rol
sub
shr
adc
inc
sub
add
sti
loope
iret
jp
mov
lds
mov
or
dec
jmp
hlt
sbb
out
dec
inc
sub
outs
icebp
sbb
jbe
mov
dec
push
dec
js
or
test
sbb
mov
or
xor
test
adc
push
out
adc
sbb
inc
movs
push
ror
dec
mov
gs
lock
or
(bad)
add
add
inc
mov
fwait
lods
pop
jb
lods
aam
mov
sub
lahf
int
retf
iret
stc
test
adc
pusha
loop
std
cmps
add
mov
jp
mov
jno
ja
cmp
push
imul
pop
imul
pop
cli
outs
xchg
sub
adc
xor
cdq
fnstenv
stc
sbb
bound
xchg
outs
js
mov
cmp
xchg
jl
xor
imul
(bad)
cld
push
stos
enter
(bad)
mov
outs
cmp
pop
inc
dec
mov
push
mov
retf
add
bound
dec
push
(bad)
cmc
cmps
fwait
pop
cmp
leave
xchg
xor
scas
les
xor
pusha
(bad)
ja
lea
sbb
mov
test
jmp
mov
xor
std
call
xchg
dec
enter
mov
add
mov
push
dec
daa
push
into
and
adc
dec
addr16
inc
sahf
movs
cmp
sbb
push
lods
leave
iret
outs
call
xor
pop
dec
shl
pushf
pop
call
es
mov
je
cmc
cld
and
scas
jns
push
frstor
pop
icebp
(bad)
call
dec
sahf
mov
dec
(bad)
ds
sbb
add
cld
fidivr
test
stos
sub
in
mov
mov
sub
sub
dec
and
mov
ret
jbe
ins
push
push
pop
jecxz
push
mov
inc
and
xor
mov
xor
xchg
dec
jp
cmp
sub
cmc
mov
pop
dec
stos
bswap
es
ins
out
gs
dec
mov
add
mov
jnp
cdq
scas
cwde
(bad)
mov
and
ins
lds
mov
call
in
push
xchg
jns
mov
and
nop
adc
dec
(bad)
xlat
mov
arpl
or
add
adc
mov
retf
sbb
test
push
mov
sar
sti
not
dec
(bad)
jno
ds
mov
mov
cmp
and
and
mov
push
mov
sub
mov
jae
push
sbb
mov
push
cmp
retf
push
jo
inc
loope
inc
and
and
mov
cmp
sbb
nop
sar
adc
clc
es
daa
push
pop
loop
fstp
imul
enter
push
xchg
dec
ds
pop
mov
dec
lahf
xchg
xchg
mov
or
cmps
sub
push
repz
sub
pop
sar
repz
xor
xlat
dec
movs
ret
cmps
fdiv
cmp
add
sub
dec
aad
sahf
dec
pop
data16
and
mov
lods
lods
(bad)
repz
and
fwait
xchg
dec
push
ins
inc
fild
fisttp
dec
cmp
stc
and
repz
into
out
xor
movs
rol
ins
add
out
mov
bnd
xchg
jb
inc
sahf
int3
sub
cdq
adc
sbb
add
inc
inc
jge
sbb
sub
sahf
mov
inc
ret
or
xor
sbb
int3
mov
mov
scas
adc
push
cmc
or
shl
sbb
xlat
xor
gs
sar
pushf
and
inc
call
imul
mov
(bad)
xor
jno
sub
adc
les
mov
test
jne
retf
(bad)
push
(bad)
sub
xchg
cmp
(bad)
sbb
outs
bound
fs
ficomp
int
jg
xor
test
and
data16
fiadd
mov
lock
mov
add
pop
frstpm(287
out
mov
inc
loope
(bad)
stc
cld
jno
aas
xchg
sbb
test
(bad)
data16
rcl
sbb
push
add
call
scas
mov
adc
fldenv
jp
cmp
jo
pushf
sbb
push
cmps
cmps
and
inc
mov
fstp
ret
sub
je
outs
mov
push
in
mov
iret
ss
rcr
popf
mov
sahf
pop
or
stos
jno
xor
adc
sub
inc
xor
dec
dec
adc
pop
xor
and
arpl
fsubrp
xchg
jl
shl
jg
and
test
sbb
data16
sub
fucom
dec
mov
in
xchg
or
push
lahf
repz
call
addr16
imul
inc
sbb
out
lea
sahf
(bad)
jg
leave
mov
xchg
jg
push
mov
jo
bound
(bad)
jb
imul
cld
inc
icebp
inc
lea
xchg
jp
js
aaa
cdq
enter
cmp
fld
cdq
push
test
pop
jp
cli
xchg
jne
aam
jl
adc
sti
xlat
mov
sub
xchg
xchg
sub
and
neg
add
jl
mov
pop
dec
add
shl
jmp
and
aaa
cmps
push
nop
xor
enter
rol
xlat
shr
ret
movs
xor
loopne
mov
dec
popf
add
addr16
inc
rol
sub
sahf
hlt
and
push
int
inc
push
dec
push
push
mov
mov
pop
inc
and
test
sbb
ins
add
sbb
mov
dec
fnstenv
stos
rcl
sbb
pop
aam
outs
int3
(bad)
xlat
mov
test
add
in
nop
inc
jb
push
mov
push
xchg
inc
mov
jb
cmp
stos
sub
stos
leave
nop
jb
mov
dec
and
outs
dec
lods
fs
inc
(bad)
jmp
adc
mov
mov
mov
push
jmp
jnp
sbb
adc
mov
lock
js
loope
or
cli
loopne
sub
jae
add
icebp
push
inc
pop
call
(bad)
loope
push
je
(bad)
cdq
cdq
pushf
cmp
mov
mov
ja
adc
adc
sbb
ds
rcl
or
mov
push
ins
xor
fld
(bad)
mov
xor
xor
pushf
xor
(bad)
fcom
movs
jae
jl
inc
into
(bad)
movs
push
arpl
adc
iret
scas
xor
jno
iret
(bad)
int3
popf
xor
dec
pop
add
mov
sbb
lock
das
lock
pop
pop
mov
mov
and
xlat
or
push
cmc
into
iret
out
std
push
jle
sbb
std
in
dec
push
aad
jne
jb
fdiv
jecxz
(bad)
adc
or
xchg
mov
mov
and
and
fwait
jle
and
ss
dec
jns
and
adc
cli
(bad)
repz
and
test
jne
aas
rcr
mov
xor
mov
pop
mov
movs
pop
xor
mov
hlt
or
in
push
pop
shr
arpl
ins
out
xor
add
lods
push
out
dec
dec
inc
xchg
lock
sbb
push
rcr
add
retf
add
aad
mov
popa
jecxz
nop
bound
dec
lods
push
(bad)
dec
mov
inc
push
adc
ins
mov
and
pop
shr
pop
scas
sbb
jns
popa
test
xchg
adc
ret
imul
jns
cs
stos
lahf
out
retf
adc
daa
sbb
pop
enter
mov
push
in
xchg
dec
mov
push
out
jmp
imul
scas
cmc
dec
xchg
xchg
adc
xchg
popa
shl
mov
dec
cmc
in
or
xor
and
push
and
cmp
adc
xchg
mov
adc
call
sub
js
jge
imul
mov
aas
adc
fwait
or
(bad)
(bad)
loopne
xlat
push
push
std
jmp
or
clc
sub
and
mov
push
inc
(bad)
pop
sub
jle
mov
popf
and
mov
sub
jmp
xchg
add
out
pushf
(bad)
jne
push
ins
xchg
jne
jno
jbe
push
ret
pop
add
loopne
jmp
inc
popa
jnp
push
sub
xchg
jecxz
pop
cmps
add
data16
fwait
or
cmp
mov
cli
xlat
lea
ins
add
mov
lea
fldcw
loope
test
sti
or
xor
xlat
les
ror
out
dec
mov
ins
xchg
in
sub
and
cs
mov
movs
inc
lods
loop
enter
xchg
adc
inc
or
sbb
xchg
xor
std
mov
jo
and
stos
ret
pop
push
jae
push
(bad)
xchg
push
imul
jb
push
jle
std
aas
add
cmps
inc
out
xchg
push
inc
addr16
xor
lock
inc
push
mov
jne
push
test
inc
jo
int3
jp
add
jb
outs
cmp
mov
push
sti
hlt
cmp
push
out
mov
jmp
xchg
or
inc
test
pop
pusha
jae
xchg
or
xor
sahf
in
mov
retf
adc
aam
lds
je
ret
pop
test
or
xlat
test
shl
cs
mov
and
ss
mov
or
push
out
xor
loope
dec
pop
jbe
pushf
mov
or
imul
dec
int
je
gs
retf
iret
cmp
mov
or
int3
mov
icebp
dec
(bad)
cmp
(bad)
cmp
(bad)
adc
jb
and
dec
adc
mov
push
push
ins
pop
xor
and
jno
out
aad
jns
mov
mov
jmp
not
and
ret
pmulhw
out
pop
pusha
cmp
sbb
test
mov
and
sub
xchg
aas
inc
xor
cmps
add
pop
add
cmp
jle
dec
dec
cmp
pop
xlat
sub
xchg
stos
mul
or
je
nop
sbb
pusha
xor
and
sub
cdq
mov
mov
inc
cmp
ss
jmp
mov
inc
jp
jmp
mov
pop
movs
neg
push
loopne
mov
scas
and
xor
lods
test
xor
mov
es
sti
js
(bad)
cmps
mov
stos
cmp
in
ror
inc
mov
mov
popf
mov
in
mov
or
shl
popa
pop
push
mov
and
or
(bad)
xlat
mov
nop
jnp
and
mov
jmp
je
arpl
mov
mov
push
rcr
inc
sbb
shl
push
shl
pop
adc
aad
add
hlt
fs
add
sbb
add
jecxz
sub
test
inc
cld
push
mov
xchg
mov
js
ret
lahf
cli
fidiv
dec
std
xor
call
or
popa
xor
pop
jl
jge
jecxz
ret
mul
mov
push
test
ins
add
das
cmp
jmp
add
mov
mov
mov
add
xchg
mov
fidiv
repz
mov
test
and
adc
ins
repnz
lock
push
push
outs
dec
xor
sub
pop
push
js
or
addr16
jmp
aaa
mov
inc
bound
fstp
push
pop
inc
fisttp
ror
jp
push
ja
outs
xchg
ret
inc
cwde
daa
inc
rcl
shr
jmp
lea
pop
jne
jae
push
pop
adc
jg
pop
fld
scas
mov
(bad)
xchg
aam
jbe
push
push
sbb
pop
sbb
dec
mov
push
mov
aam
lahf
push
and
div
call
mov
imul
pop
jp
mov
cmp
int3
sbb
xchg
and
stos
cwde
pusha
shrd
shl
out
mov
inc
int3
mov
push
sahf
in
jmp
inc
mov
int
jge
jb
xchg
jmp
out
jo
movs
popa
xor
js
dec
scas
sbb
in
dec
sar
imul
fld
push
scas
out
int
xchg
jmp
mov
scas
adc
(bad)
mov
or
mov
pop
outs
jmp
les
retf
std
stos
jo
retf
rcl
add
sub
xchg
inc
jp
scas
sbb
sub
mov
mov
ss
in
cmc
lock
stos
imul
(bad)
jns
xor
mov
inc
add
loope
cmp
mov
(bad)
setne
mov
scas
inc
xchg
shl
je
push
and
(bad)
mov
out
jl
pop
fwait
dec
mov
mov
aad
mov
push
jmp
pop
shr
push
adc
stos
mov
push
xor
mov
push
pushf
pop
fisttp
pop
mov
cs
not
in
push
push
and
mov
fisubr
xor
mov
inc
push
inc
xchg
or
xor
sub
push
mov
push
adc
aas
sub
in
pop
push
jg
xor
push
ins
cwde
fimul
outs
pop
mov
or
aam
mov
out
(bad)
dec
mov
push
sbb
clc
jge
sub
ret
ror
ficomp
or
icebp
pop
ficomp
jge
pop
or
inc
add
xchg
adc
rol
loope
xor
pop
iret
js
out
shr
(bad)
fscale
sbb
stos
stos
cmp
sub
lahf
mov
adc
inc
stos
xchg
sub
jo
add
mov
jae
pusha
push
push
xchg
(bad)
rcr
jmp
mov
iret
mov
pop
test
mov
hlt
jbe
dec
and
or
test
repnz
into
(bad)
mov
(bad)
ficomp
jb
repnz
repnz
push
lods
mov
pop
je
inc
aaa
xchg
lods
pushf
lods
jnp
retf
rcl
cmp
mov
jmp
push
xchg
and
bound
pop
pop
daa
jge
fbld
add
dec
scas
loop
sbb
retf
pop
scas
gs
pop
pop
in
cmps
out
pusha
icebp
adc
pop
enter
mov
nop
dec
rcl
dec
push
ds
ds
cmps
jg
cmp
and
push
fist
adc
rol
dec
sbb
arpl
sahf
mov
test
imul
int
imul
pop
sbb
pop
jo
mov
call
es
mov
out
int3
fnstsw
popf
aas
mov
cmc
jae
retf
jle
test
stc
or
outs
inc
pop
inc
xlat
sbb
pop
stc
adc
inc
imul
inc
inc
sahf
mov
xor
imul
pop
loop
xchg
inc
adc
aas
dec
retf
jb
movs
cld
sub
sbb
cwde
cmp
dec
pusha
inc
jmp
jno
xchg
push
stc
fmul
scas
adc
sub
jmp
retf
mov
or
push
xor
xchg
add
mov
and
daa
stos
nop
jb
test
mov
test
(bad)
(bad)
ja
mov
bound
icebp
sub
mov
pusha
add
fs
call
mov
pop
inc
mov
ja
imul
lock
cmp
mov
inc
and
pop
mov
test
cmps
bound
not
shl
fisub
ja
mov
jle
shl
adc
dec
iret
rcl
xlat
scas
mov
add
fsub
mov
push
iret
ins
in
ret
inc
adc
push
sub
push
dec
jne
xor
ins
mov
btc
jecxz
xchg
push
je
or
xchg
cwde
jl
jbe
adc
(bad)
scas
js
jle
int
std
dec
inc
mov
dec
scas
in
jbe
mov
adc
add
popa
pop
xchg
push
or
movs
and
push
shl
push
adc
add
outs
push
ss
sub
jge
and
mov
jb
mov
ror
cmp
xor
sbb
xor
sub
stos
mov
outs
scas
or
dec
mov
push
mov
outs
jb
push
stos
or
fprem1
nop
sub
lea
lods
sbb
(bad)
not
movs
hlt
cmps
outs
test
xor
iret
mov
in
stc
rcl
xchg
xor
addr16
pop
add
fld
hlt
xor
in
test
cmp
inc
cmps
mov
sbb
inc
dec
inc
in
cmp
fstp
push
jmp
push
pop
add
mov
add
push
xchg
push
loopne
out
push
cld
clc
pop
nop
push
cs
daa
inc
mov
out
and
into
ja
cmps
adc
mov
(bad)
movs
jecxz
xlat
je
mov
pop
shl
lods
aaa
inc
sbb
repz
ffree
stc
pop
cli
and
pop
cs
inc
push
jne
test
clc
imul
fdiv
sbb
addr16
dec
sbb
jge
js
in
push
mov
inc
lock
iret
repz
jne
cmp
jmp
cdq
hlt
aad
bnd
cmp
test
mov
fdivr
jp
bsr
outs
pop
pop
mov
jbe
test
ret
test
rcl
sbb
in
xchg
inc
or
xchg
in
enter
push
mov
arpl
fisub
cmp
xchg
arpl
mov
aas
jle
lahf
adc
jae
xchg
push
and
(bad)
(bad)
das
adc
ss
sub
pop
(bad)
loope
sbb
daa
and
ins
mov
cld
loopne
xlat
(bad)
outs
(bad)
xchg
add
inc
mov
hlt
mov
lods
add
adc
(bad)
push
nop
outs
fwait
fwait
shl
dec
inc
shl
dec
mov
lahf
jle
dec
test
pop
and
jp
mov
sar
(bad)
out
cmps
or
fnstcw
add
xchg
lahf
cmp
ret
push
pop
jae
or
mov
lock
inc
retf
mov
(bad)
push
add
add
fs
push
mov
lods
lods
data16
sbb
pop
pop
mov
jb
cmp
mov
inc
mov
into
and
lea
mov
js
mov
fsub
ins
popa
sbb
fst
or
and
mov
xchg
push
push
pop
cli
fistp
out
mov
lock
pushf
bound
movs
push
push
mov
mov
fbstp
xor
ret
xor
cmp
pop
add
imul
je
mov
cmp
mov
in
dec
fiadd
cwde
movs
(bad)
in
dec
std
jmp
mul
or
push
cli
and
ins
jbe
push
fsubr
nop
nop
inc
mov
inc
mov
xor
push
loope
or
add
dec
ret
pusha
fnclex
sub
cmp
mov
jle
imul
adc
mov
mov
into
push
pusha
pop
mov
xor
sahf
adc
sub
inc
mov
retf
push
fs
rcr
cmp
xchg
dec
add
ss
xor
jmp
or
lods
sbb
mov
sub
fstp
arpl
test
es
mov
es
dec
adc
fldenv
mov
push
dec
mov
jle
test
lods
adc
cwde
mov
out
cmps
sub
sub
int
rol
retf
and
retf
shr
inc
ins
lods
enter
or
push
fidiv
mov
(bad)
movs
inc
sub
es
xor
leave
jecxz
add
fmul
adc
add
add
and
or
aad
je
(bad)
mov
inc
adc
pushf
dec
pop
xor
mov
cmp
bts
pop
out
iret
stc
sbb
sub
dec
ja
xchg
popa
lock
popf
pop
push
push
aam
in
dec
loop
rcr
stc
push
inc
retf
mov
mov
add
std
(bad)
leave
cmp
dec
popf
xor
lods
shr
mov
stos
cmp
push
pop
aad
out
xchg
jne
push
jae
or
sbb
push
xchg
xchg
mov
std
ja
shl
cmc
mov
pop
or
sbb
push
cmp
outs
pop
push
sbb
nop
pop
push
pop
adc
cmps
(bad)
in
sti
mov
push
pop
pushf
movs
enter
push
push
ins
lea
or
ins
or
fmul
stos
add
pushf
or
scas
imul
es
jo
mov
int
fcom
mov
pop
sub
xlat
inc
lea
add
pop
ror
mov
pop
pop
retf
rcr
add
mov
out
hlt
aad
test
mov
mov
test
pop
sub
sub
cmp
repnz
jmp
out
adc
das
cdq
iret
cmp
xchg
or
dec
add
test
sbb
xor
pop
test
jmp
pop
dec
stos
xor
scas
mov
mov
xor
adc
ins
jns
and
in
pushf
mov
mov
(bad)
dec
in
sub
lock
jne
dec
and
sub
retf
imul
mov
aad
push
mov
or
xchg
sbb
sub
and
inc
add
jbe
int
push
sub
and
enter
fwait
push
pop
xchg
mov
(bad)
stc
lds
mov
aas
movs
jecxz
sbb
sub
push
cmc
retf
jbe
sbb
sbb
add
jmp
push
pop
jge
pop
ret
jge
push
or
lods
mov
pop
dec
sbb
aad
rol
inc
cwde
add
fimul
or
mov
iret
movs
gs
pop
sbb
cli
out
es
mov
and
adc
sbb
test
pop
retf
out
mov
inc
repnz
js
out
mov
lea
shl
cs
xor
out
xchg
mov
sbb
icebp
out
sbb
fcmovnbe
pop
(bad)
mov
or
jmp
adc
das
sbb
mov
in
loop
sar
xchg
aam
and
test
fcmovu
cwde
aam
lods
sub
aas
pop
jne
push
jge
pop
dec
inc
dec
outs
mov
cmp
lahf
shl
pop
sub
repnz
call
int
jge
out
call
fadd
pushf
xor
mov
cwde
mov
mov
and
rcr
sub
xchg
rcl
adc
das
test
pop
scas
xchg
clc
jmp
mov
push
xchg
and
movs
cdq
add
jp
hlt
cld
cmps
push
sbb
pusha
mov
daa
aad
inc
add
jbe
add
jecxz
les
sub
pop
push
mov
shl
cmp
loop
in
push
cmc
das
adc
jmp
inc
mov
test
loope
mov
jecxz
cs
ss
mov
adc
aas
daa
or
add
or
mov
sbb
or
jmp
std
out
sbb
jae
movs
scas
scas
xor
ins
or
or
push
loopne
mov
ret
mov
sub
xchg
mov
jns
mov
pop
scas
mov
ins
xor
cs
fstp
(bad)
enter
xor
stos
jecxz
jae
stos
rcl
adc
mov
mov
leave
int
mov
in
or
rcr
inc
sahf
bound
push
push
push
test
cmp
mov
scas
stos
aas
shl
iret
mov
jo
in
xchg
pop
in
or
push
fist
inc
(bad)
fisubr
cmp
ror
and
adc
and
pop
jg
xchg
mov
adc
ins
fist
push
icebp
sub
and
mov
popa
dec
pusha
aad
xchg
sar
es
in
dec
movs
(bad)
scas
or
mov
mov
dec
(bad)
push
in
pop
jle
mov
xchg
push
js
push
push
(bad)
retf
pop
jnp
cs
mov
ret
jo
aaa
js
and
jmp
and
xor
lahf
movs
mov
sbb
les
call
popa
fisttp
mov
lds
aam
or
push
push
or
test
and
xor
inc
and
ret
jb
fdivr
shl
jl
cwde
jo
inc
neg
in
push
mov
popa
sub
mov
repnz
mov
inc
int
or
inc
in
outs
(bad)
daa
adc
cmc
scas
pop
mov
dec
xchg
and
xchg
pop
push
and
out
mov
mov
cmp
jp
fld
ins
pop
dec
scas
ja
dec
jmp
push
out
fwait
test
out
aad
jge
jno
sbb
fisubr
fld
jp
or
mov
mov
or
add
rcl
sbb
ret
out
xchg
int
xor
mov
pop
in
push
stc
gs
addr16
pop
ror
cli
and
test
pushf
popf
or
adc
jl
inc
mov
popa
cmp
pop
xchg
jl
lods
fcmovbe
call
xor
test
jo
jp
cdq
push
and
jae
sbb
retf
fcomp
add
fwait
inc
in
xlat
dec
jmp
add
out
push
lods
fucomip
pop
mov
jp
stos
dec
fstp
cdq
call
sbb
stos
rcr
div
cmc
fwait
je
int
out
mov
pop
jl
jae
mov
out
out
into
and
or
jno
sub
inc
xor
jp
push
(bad)
sub
lea
stos
shl
xchg
pop
adc
add
ret
(bad)
mov
(bad)
cmc
mov
and
dec
loopne
lahf
lods
inc
bound
xor
retf
mov
imul
cmp
ret
int3
(bad)
arpl
inc
rcl
lods
lds
movs
lds
sbb
dec
scas
pop
lods
fwait
or
sti
popa
mov
mov
jle
fcom
inc
stos
aad
pop
stos
out
mov
jecxz
mov
frstor
addr16
xchg
sub
push
jbe
std
jno
sub
mov
mov
cmp
or
loopne
shr
push
cli
test
pop
or
mov
shr
xlat
mov
or
das
jg
inc
fcmovu
retf
sub
pop
imul
add
mov
nop
pop
xor
xchg
mov
je
mov
outs
dec
xlat
and
mov
jno
inc
cmp
(bad)
cmps
dec
xor
jbe
aam
xchg
jle
pop
mov
je
fs
or
cwde
cmp
xor
mov
and
ret
das
(bad)
daa
mov
icebp
and
inc
stos
in
mov
pop
xor
stos
jge
dec
adc
into
xchg
pop
lds
lahf
jmp
retf
in
popa
sub
(bad)
iret
cld
retf
out
sbb
jge
sbb
jmp
adc
push
ja
pushf
(bad)
push
adc
push
in
not
mov
xor
(bad)
fs
lods
fbstp
test
int
(bad)
push
cmps
(bad)
xor
pop
add
lods
mov
cmp
sub
dec
inc
sub
loopne
jnp
cdq
cmps
pop
and
xor
or
jp
(bad)
in
imul
popa
ja
test
rol
fwait
mov
dec
and
enter
mov
push
sub
dec
fisttp
icebp
imul
push
fldenv
movs
(bad)
outs
push
pop
jne
adc
sub
lds
cmp
imul
push
jg
or
ins
dec
mov
mov
cmc
add
lock
or
aaa
int3
mov
ja
xor
mov
out
pop
xchg
push
ds
hlt
jmp
mov
sub
sub
inc
cld
inc
mov
pusha
(bad)
sahf
rol
addr16
ret
pop
cmovno
in
call
push
sub
xchg
inc
and
repnz
inc
(bad)
mov
icebp
push
lea
or
fsub
sbb
cmp
add
aam
sbb
fmul
mov
cwde
sbb
inc
or
sub
jmp
je
out
jecxz
dec
cmp
cdq
xchg
jae
mov
lea
push
mov
jb
enter
(bad)
xor
sbb
xor
inc
ins
dec
mov
xor
fstp
call
push
inc
stos
retf
or
sub
mov
in
retf
mov
shr
clc
xchg
outs
stos
aaa
retf
jne
mov
xchg
cwde
sub
xor
or
jbe
add
mov
pop
push
cmc
mov
sub
test
(bad)
jne
fild
adc
push
rcr
rol
adc
xchg
(bad)
xor
dec
sub
xchg
fiadd
adc
test
(bad)
jo
(bad)
cwde
idiv
or
and
ret
xchg
push
and
and
and
ret
movs
xchg
and
and
sub
(bad)
xor
push
adc
push
stc
mov
mov
and
cmp
add
fst
push
rcl
sbb
call
test
retf
mov
cld
mov
sbb
inc
stos
or
jae
mov
or
daa
add
jg
(bad)
out
hlt
inc
adc
cmps
hlt
dec
jg
xor
xlat
in
shl
pop
mov
mov
inc
or
pushf
pop
xchg
pop
into
int3
movs
in
and
inc
(bad)
sub
jo
jl
mov
push
in
push
arpl
pop
pop
loopne
(bad)
call
cmps
push
ret
in
(bad)
xor
jae
ins
call
sub
mov
int
mov
ds
(bad)
cmp
mov
inc
(bad)
test
xchg
xor
ret
stos
imul
mov
fcmovnbe
jle
xchg
push
add
std
pop
add
shl
lods
add
or
mov
and
movs
inc
cmps
jmp
mov
jbe
xor
or
jmp
or
lods
pop
push
and
mov
adc
clc
scas
pop
shl
mov
cs
jl
xor
dec
inc
and
mov
sub
fldcw
mov
push
jbe
fisub
sub
sub
gs
inc
pminsw
lods
and
pop
sbb
adc
adc
or
jbe
loopne
lods
xor
and
das
js
push
repz
rcr
je
mov
(bad)
adc
retf
sbb
adc
mov
call
pop
mov
sbb
std
xor
sahf
push
mov
inc
jne
and
xchg
jb
int
imul
enter
aas
outs
dec
dec
out
add
shl
fstp
int3
mov
inc
inc
jo
pusha
cld
ret
mov
lea
in
cmc
inc
or
test
shl
ds
es
dec
mov
cmp
jmp
fwait
nop
repz
ins
repz
pop
push
inc
retf
mov
pop
mov
imul
mov
sti
or
fadd
adc
mov
sub
fcom
in
test
xchg
xchg
(bad)
fwait
push
mov
xchg
div
add
jecxz
in
mov
lds
xchg
ror
mov
lea
xor
or
sti
aad
in
dec
in
mov
add
mov
mov
lods
or
call
mov
cs
loope
jns
test
dec
fwait
sub
mov
dec
nop
inc
jp
jb
sub
(bad)
call
add
pushf
pop
pushw
hlt
fs
mov
pop
lods
mov
xlat
out
add
aaa
adc
xlat
cmp
xor
stos
je
fs
test
ins
adc
sbb
xchg
in
es
push
inc
and
dec
fistp
lock
ret
mov
cmp
addr16
or
jmp
mov
cwde
pusha
outs
rol
ins
mov
movs
fldcw
add
pop
inc
mov
test
int
push
mov
mov
inc
jp
leave
sub
or
sub
fstp
mov
inc
push
adc
fwait
xor
mov
adc
jge
add
pop
stc
(bad)
cwde
pop
fstp
mov
mov
xchg
ins
cmp
fwait
test
inc
push
ins
jg
push
pop
push
push
repnz
pop
(bad)
push
cs
cmc
fcomip
sbb
cmp
push
cs
mov
stc
push
rol
ds
mov
dec
pop
(bad)
imul
jecxz
in
clc
and
stc
pop
inc
retf
sbb
scas
mov
pop
jo
sub
xchg
test
jne
and
xor
inc
jns
adc
add
cmp
adc
in
push
pop
sub
fild
sbb
push
fadd
dec
xlat
inc
shr
add
pop
push
sub
mov
cmp
inc
retf
mov
outs
pop
(bad)
aam
jp
popa
enter
and
and
sub
lods
or
pop
mov
pop
stos
add
and
inc
mov
pushf
jg
inc
push
mov
dec
shl
sbb
in
xlat
mov
push
push
adc
mov
pop
icebp
in
fstp
inc
sub
cwde
test
mov
cmp
cmps
xchg
dec
push
add
adc
push
dec
jno
jne
xor
xchg
fcomp
mov
pop
sub
mov
in
(bad)
call
cdq
stos
lea
push
add
jecxz
xor
push
scas
lods
jo
shr
aam
test
mov
push
jbe
test
loop
push
sub
or
sbb
aaa
mov
outs
pop
mov
popa
movs
enter
hlt
push
jge
mov
jmp
(bad)
(bad)
lahf
mov
jmp
mov
popf
push
pop
dec
scas
mov
cs
lods
adc
jecxz
or
(bad)
add
pop
mov
cmp
clc
mov
imul
bound
dec
fmul
cmps
push
(bad)
push
dec
jno
cmps
(bad)
pop
mov
adc
xor
push
xor
add
imul
pop
movs
push
mov
in
fisub
xchg
movsx
xchg
je
lds
or
cmp
adc
in
and
aaa
ja
iret
mov
add
shr
popa
or
scas
adc
out
sysret
cmc
(bad)
loope
cmp
pop
das
add
push
pop
sub
test
pusha
sub
out
push
mov
pop
loopne
les
xchg
popa
int
sub
movs
icebp
or
jecxz
xor
jae
dec
dec
mov
xchg
xor
pop
cs
mov
es
jl
cmp
retf
nop
fnsave
sbb
les
call
icebp
(bad)
ffreep
test
adc
out
call
cmp
(bad)
sub
pop
mov
mov
pop
(bad)
pusha
jo
jp
out
mov
ja
fcom
pop
add
test
(bad)
jno
fdiv
popf
ds
xchg
and
in
sbb
ss
cmp
mov
xchg
mov
xor
cld
and
push
cwde
xor
(bad)
and
scas
lods
ds
cli
dec
jns
aaa
je
mov
add
mov
pusha
jecxz
inc
pushf
imul
ss
lahf
mov
jbe
icebp
pop
mov
dec
sbb
mov
jg
and
sbb
push
sub
fimul
cmp
push
or
cmp
add
sub
in
loop
pop
iret
(bad)
icebp
fld
cmps
pop
jl
mov
sar
pop
and
inc
ficom
mov
fwait
cmp
push
jecxz
xchg
mov
push
xchg
nop
dec
daa
retf
mov
jnp
iret
enter
add
cli
test
lods
or
out
movs
sti
xlat
mov
push
data16
cdq
sar
lods
or
fidiv
pop
sub
pop
inc
retf
unpckhps
repz
mov
pop
lds
xchg
movs
rcl
inc
movs
test
mov
xchg
xchg
clc
mov
mov
jbe
dec
stos
jb
fcomip
pop
jle
jl
mov
adc
imul
fld
fwait
repz
push
aad
in
ss
and
iret
mov
inc
and
and
mov
je
arpl
inc
jl
stc
dec
mov
fwait
mov
movs
xlat
ret
lods
sbb
adc
sbb
cmp
retf
es
ret
mov
push
int
push
pop
push
xor
fld
lods
lods
xchg
jp
jecxz
mov
loopne
jmp
icebp
gs
pop
call
xor
pop
jecxz
sub
inc
pop
pop
shr
jne
inc
das
ret
jmp
xchg
mov
jmp
(bad)
xchg
xchg
(bad)
aas
je
xlat
pop
pop
popa
scas
bound
mov
sti
xor
pop
jae
(bad)
(bad)
mov
movs
and
jno
dec
jle
inc
sbb
sub
call
mov
mov
cmp
inc
inc
jnp
xor
and
int3
je
js
jp
jmp
inc
mov
or
call
retf
out
aaa
mov
mov
jne
fldcw
popa
jmp
pop
xchg
dec
hlt
icebp
daa
cmp
mov
cdq
sar
fsubp
stos
xchg
push
comiss
retf
test
retf
sbb
mov
sbb
aad
or
jp
cmps
fsubr
lea
std
(bad)
and
push
fist
pop
pop
push
pop
xor
idiv
sbb
cmp
sbb
pop
in
fwait
idiv
dec
out
sahf
and
cmp
xchg
mov
fcomp
adc
jg
pushf
add
test
inc
fcomp
lods
xor
test
mov
enter
jmp
popa
out
mov
mov
mov
mov
mov
jmp
inc
xor
sub
adc
mov
pop
jmp
icebp
sbb
pop
sub
dec
(bad)
(bad)
ja
int
push
or
cdq
ins
sub
(bad)
push
dec
sbb
popa
jge
cli
lods
push
hlt
inc
outs
(bad)
fimul
movs
push
lds
bound
aas
mov
cmp
sub
ins
icebp
loop
mov
xchg
or
mov
lahf
addr16
push
ret
pop
imul
adc
ins
inc
push
shl
mov
aad
or
and
data16
repnz
mov
movs
xchg
cmp
sub
xchg
test
or
adc
addr16
cmp
jnp
and
addr16
neg
add
hlt
or
xchg
(bad)
dec
push
push
sub
push
mov
fistp
ss
inc
aaa
sbb
dec
hlt
addr16
cmp
push
push
hlt
mov
mov
cmp
daa
mov
gs
fsubr
cli
imul
xchg
data16
fstp
fcmovnu
loope
or
push
xchg
scas
inc
cmc
sub
cdq
inc
call
dec
mov
jmp
adc
sbb
push
call
cmp
pop
jl
sahf
test
pushf
inc
repz
or
inc
test
aad
inc
pop
mov
jb
arpl
pop
mov
add
inc
(bad)
sbb
or
or
shl
jp
cs
sti
pop
push
pop
paddq
jecxz
mov
mov
push
inc
jle
xor
pusha
ss
push
mov
pop
xchg
mov
xor
push
sub
hlt
jl
outs
pop
and
and
jno
into
sub
mov
rol
jno
ss
aas
fsub
pop
daa
test
add
imul
pop
mov
aas
packssdw
ret
push
xor
mov
(bad)
addr16
push
pop
sti
add
fwait
dec
cmps
pop
rol
mov
dec
imul
lahf
icebp
inc
inc
out
imul
les
mov
xchg
(bad)
rcl
daa
jae
std
cwde
mov
push
mov
shr
add
out
add
cli
mov
xor
sbb
pop
mov
sub
jae
arpl
cmp
jmp
imul
xchg
aaa
daa
push
and
cmp
or
push
rcr
mov
call
in
ds
xchg
cmps
pop
dec
aam
push
dec
xchg
test
sti
imul
mov
jns
xchg
adc
push
bound
dec
sbb
pop
nop
inc
ins
mov
jge
add
sbb
fisubr
(bad)
xchg
(bad)
mov
(bad)
jbe
adc
into
or
bound
or
jno
test
xchg
test
in
fcmovbe
call
mov
ja
cmp
inc
enter
das
imul
xchg
or
(bad)
fadd
jecxz
sbb
inc
inc
(bad)
hlt
repnz
repz
bound
dec
imul
pop
imul
cdq
ds
(bad)
aas
xor
mov
call
mov
ss
pop
stos
cmp
mov
in
call
lods
xchg
lds
mov
sbb
mov
xchg
sahf
aad
fwait
in
shr
cmps
adc
fisub
fadd
jg
lods
fistp
adc
test
xchg
dec
mov
and
adc
pop
inc
jp
aam
xor
sbb
pop
or
mov
ins
cmps
ret
add
mov
jo
clc
add
nop
cmp
int
dec
mov
mov
jns
jns
xchg
lahf
cmp
(bad)
cmp
jg
dec
lods
jl
fs
jns
js
ret
xor
leave
and
loopne
popa
jbe
push
or
push
add
xchg
mov
or
loop
shl
add
push
scas
jnp
xor
call
fcom
xchg
into
call
fild
sti
pop
dec
nop
dec
sub
dec
mov
dec
(bad)
cli
sbb
scas
cli
not
mov
aad
sub
sub
(bad)
in
movs
sub
rcl
cld
pop
outs
sub
(bad)
imul
adc
xor
inc
jne
cmp
push
(bad)
shr
sti
gs
push
pop
cmps
xor
int
or
inc
out
(bad)
(bad)
sbb
call
jmp
mov
sbb
(bad)
icebp
outs
loopne
pushf
and
and
xchg
push
adc
jno
popf
adc
push
push
imul
hlt
lods
mov
lea
fs
fldenv
enter
ret
add
retf
sahf
push
mov
in
jl
ret
push
stos
push
mov
cmp
jo
add
ja
dec
movs
retf
mov
outs
add
or
dec
cmp
cmp
push
adc
inc
cmps
enter
sbb
jmp
shr
mov
fisubr
sti
scas
xchg
bound
fadd
arpl
sbb
ins
mov
sete
scas
jmp
test
aad
lods
jnp
ror
mov
fmul
mov
mov
xor
stos
adc
cmp
sub
scas
scas
jns
cmp
inc
mov
shl
outs
retf
fwait
add
inc
add
in
int3
jmp
clc
lods
icebp
mov
adc
ret
dec
cmp
sub
push
xlat
mov
fsub
rol
push
pop
add
push
jmp
stos
loop
jnp
ja
push
mov
das
call
or
mov
or
jge
inc
inc
movs
pop
leave
jl
pand
and
ffreep
aam
gs
fadd
call
pusha
xchg
(bad)
or
mov
mov
sub
outs
mov
(bad)
sub
nop
test
and
and
dec
or
adc
pop
out
push
cmp
adc
adc
sbb
out
pop
cmps
and
stos
xchg
data16
ficom
popa
add
mov
pushf
clc
xchg
and
out
(bad)
xchg
int3
loop
sbb
mov
jl
xor
sub
sub
and
cmp
sub
ins
xor
test
mov
cmc
mov
into
ret
add
ret
xor
out
pop
mov
daa
in
icebp
jae
sbb
out
mov
dec
xlat
cwde
sbb
or
inc
lds
add
jae
ss
fldcw
aam
lahf
inc
cmps
and
xchg
cdq
mov
int3
xchg
cmc
adc
lds
stos
xchg
scas
dec
sub
adc
cmc
and
(bad)
add
dec
div
ins
loop
cmp
int3
fs
dec
(bad)
rcr
jge
xor
push
cmp
div
mov
jle
mov
mov
or
pop
add
jbe
mov
mov
jecxz
aam
dec
imul
xchg
stos
das
cmp
xchg
leave
dec
mov
sub
idiv
fnclex
(bad)
mov
mov
and
add
adc
pop
sub
xor
jl
inc
cdq
icebp
pop
dec
clc
movs
mov
shl
jg
loop
outs
sbb
cmp
ss
dec
bnd
mov
push
pop
mov
cdq
idiv
cmp
popa
jo
push
sti
xchg
mov
mov
inc
arpl
sub
sar
push
sub
or
mov
sub
mov
xchg
mov
sahf
xor
mov
frstor
pop
cmp
mov
in
movs
and
fs
movs
pop
jne
push
xor
xor
test
pop
loope
dec
and
and
popa
cmps
push
adc
in
and
loopne
sbb
outs
jp
mov
(bad)
dec
and
inc
xor
aas
(bad)
retf
call
stos
inc
movs
jp
mov
stc
loope
adc
imul
xor
xor
mov
sub
inc
jmp
rol
inc
and
pop
xor
cs
pusha
or
and
xchg
add
hlt
push
in
sub
imul
and
arpl
jb
jp
or
add
jmp
in
into
pop
mov
push
pop
jno
mov
sub
into
je
out
add
fdiv
inc
test
mov
test
mov
(bad)
sbb
hlt
adc
xor
outs
les
or
sbb
int3
arpl
int
inc
in
mov
gs
arpl
std
add
das
adc
cli
loope
mov
mov
push
out
dec
cmp
cmp
xor
mov
or
xchg
fidiv
inc
or
dec
sahf
sub
cmp
pop
les
loope
ret
sub
or
lods
lock
rol
sbb
jns
cld
jecxz
push
fist
push
and
jbe
mov
fld
jno
jno
cld
cmp
ret
push
mov
cmp
jg
test
mov
outs
mov
sbb
xchg
push
lods
inc
cwde
push
sti
shl
cmps
push
outs
adc
je
enter
dec
out
daa
pop
fbstp
push
cdq
add
sub
sub
or
loopne
das
inc
lds
and
repz
xchg
sub
xor
iret
stos
scas
pop
rcr
in
hlt
mov
mov
das
dec
clc
(bad)
add
shl
sahf
rcr
call
mov
popa
je
push
hlt
add
mov
ds
mov
pusha
retf
jo
add
jmp
and
mov
or
xor
adc
push
lea
es
in
mov
neg
outs
idiv
push
bound
gs
sbb
dec
adc
(bad)
cs
outs
jb
fwait
cmps
js
mov
adc
push
lods
push
loop
add
pop
fild
jo
xchg
outs
dec
mov
sbb
lahf
fwait
sbb
test
out
pushf
and
jae
nop
movs
ds
gs
sbb
cmp
or
pop
inc
inc
cli
jp
or
(bad)
mov
loope
loope
push
mov
and
enter
dec
push
push
or
test
fist
sbb
ja
inc
repnz
js
iret
lock
bound
push
loope
int
sbb
pop
xchg
sub
aad
dec
adc
sub
cmp
xchg
mov
(bad)
dec
gs
not
mov
add
test
cmp
jnp
jne
sbb
fadd
daa
dec
pop
shr
shl
pop
enter
popf
and
call
shl
sbb
cmp
and
call
or
dec
dec
xchg
sub
lahf
mov
mov
add
shl
dec
mov
fmul
pop
sub
sub
in
test
xor
ret
xchg
out
jo
daa
scas
sub
push
push
push
adc
cmp
adc
pusha
jnp
mov
sbb
dec
pop
adc
xchg
sbb
das
ins
add
adc
xchg
pop
and
ss
mov
pop
dec
adc
sbb
lds
push
ins
(bad)
pop
(bad)
jnp
jecxz
lds
(bad)
jmp
lock
jne
sahf
stc
push
push
xchg
or
add
ficomp
sbb
sar
dec
push
jle
and
xor
push
inc
test
jp
pop
push
jle
dec
push
xchg
xchg
mov
xor
fst
pop
jne
jmp
inc
push
or
adc
iret
adc
adc
call
jp
sbb
cwde
pop
mov
or
mov
cmp
pop
out
and
shl
inc
shr
pop
movs
jnp
adc
xor
daa
mov
dec
int3
xchg
mov
fsub
pop
fs
sub
clc
loopne
(bad)
daa
mov
es
ret
call
call
or
(bad)
cwde
push
jns
mov
inc
add
fwait
pop
jne
stc
push
iret
ret
fwait
(bad)
lods
mov
sbb
push
out
inc
mov
mov
lods
pop
dec
xchg
lods
push
cmps
sbb
shr
pop
fild
and
cmp
and
sub
xchg
or
iret
cmp
xchg
sub
mov
test
adc
popf
out
pop
aad
sbb
mov
aaa
mov
cmp
push
mov
xchg
sbb
aas
std
adc
sbb
cwde
int3
cmp
push
dec
fstp
cmps
scas
loopne
inc
mov
lock
aas
xlat
(bad)
jmp
or
ret
loope
mov
imul
jb
mov
bswap
popf
mov
cmps
scas
fsubr
inc
dec
mov
bound
cmp
sbb
pop
inc
cmc
shl
mov
sub
cmp
jno
(bad)
pop
push
das
fnstenv
repz
data16
arpl
add
and
fistp
sar
sub
adc
xchg
mov
out
jge
mov
sub
dec
cmp
arpl
fmul
sahf
mov
cmp
xchg
cmp
sub
mov
mov
loope
sbb
ds
cwde
dec
repz
lock
out
loop
jno
pop
out
in
jb
jle
std
adc
sbb
push
cmp
jl
lock
hlt
ror
ja
sub
repz
addr16
mov
daa
or
cmc
call
sbb
mov
mov
cmp
cmps
inc
or
pusha
jno
or
jno
adc
movs
cmp
dec
push
hlt
lods
in
in
push
cmc
adc
add
(bad)
fs
shr
adc
cli
push
dec
xor
movs
sbb
sti
push
fwait
pop
inc
or
test
call
into
lods
mov
cmp
outs
xor
xchg
shr
retf
mov
adc
jecxz
adc
and
lods
aad
test
inc
sub
inc
xor
sub
pop
or
jecxz
sahf
mov
sbb
div
stc
test
xchg
mov
cmc
mov
jg
dec
inc
fstp
add
hlt
shl
cwde
and
push
popf
push
jle
pop
ins
push
lea
test
mov
inc
aam
xor
call
ret
add
lods
mov
std
mov
(bad)
lods
push
mov
xchg
inc
and
adc
cli
mov
jno
cmp
sbb
adc
popa
fldcw
add
jmp
dec
push
mov
push
retf
pop
fs
jge
hlt
pop
pop
enter
call
lods
dec
xchg
ins
pop
cs
push
ret
mov
in
or
mov
retf
adc
pop
xor
je
dec
aam
cwde
rcr
sub
stos
inc
fild
sbb
repz
faddp
pop
or
push
(bad)
in
jmp
fstp
pop
mov
pop
push
(bad)
(bad)
icebp
ret
in
fs
xor
push
jmp
fimul
movs
fwait
inc
mov
jge
imul
int
arpl
mov
xor
push
retf
add
loope
sbb
out
ss
add
lock
fst
and
mov
push
dec
and
in
repz
dec
imul
sub
cmp
cmps
pop
mov
cmp
movs
sbb
pop
sar
data16
jnp
xchg
add
(bad)
pushf
lods
icebp
mov
cmp
enter
push
arpl
outs
scas
mov
xor
fld
push
inc
mov
out
test
jb
or
push
jl
lahf
push
repz
neg
xor
scas
scas
test
inc
push
std
repz
shl
and
rcr
sar
mov
mov
lock
inc
rol
inc
adc
push
popa
xchg
daa
lea
(bad)
push
dec
rcr
mov
(bad)
in
movs
push
push
inc
imul
xor
js
popf
loopne
add
(bad)
repz
xchg
push
loope
icebp
call
rol
fistp
xor
push
test
test
mov
cmp
inc
or
(bad)
cmp
jne
mov
and
mov
sub
jp
fiadd
stos
mov
mov
loop
jnp
add
cld
adc
jmp
cli
mov
bound
mov
sub
xchg
mov
adc
cmp
rcl
jbe
mov
loop
push
lock
mov
or
dec
cmc
mov
sti
pop
sahf
sti
or
mov
shr
dec
stos
mov
dec
dec
push
cmp
sahf
lds
adc
mov
cmp
pop
loop
mov
inc
inc
in
sub
sbb
cmp
leave
cmp
(bad)
loopne
mov
test
add
fstp
dec
pop
movs
lahf
jb
aaa
sub
into
and
bound
add
outs
adc
mov
lock
jno
add
xor
sub
into
jle
stos
fild
push
lods
adc
mov
and
ins
scas
xchg
push
pusha
mov
sbb
out
jg
enter
int
xor
fnstcw
or
icebp
mov
shl
cmp
inc
jmp
jb
lahf
push
ror
add
loop
adc
or
lock
hlt
mov
fild
adc
pop
ss
mov
jp
test
push
pop
and
and
in
sub
pop
lock
jb
pop
jp
fstp
push
popa
in
and
sbb
push
in
xor
pushf
bound
out
ficom
inc
cmps
cwde
jmp
ror
or
mov
test
adc
xor
enter
mov
xchg
cmp
lods
movs
in
xor
dec
inc
inc
outs
dec
or
pop
out
push
int3
xchg
cld
cwde
dec
retf
aaa
outs
adc
xchg
fcmovnb
xor
dec
mov
out
sbb
out
repnz
mov
xchg
ja
outs
scas
cmc
sub
sub
mov
gs
sub
fwait
shl
push
ret
clc
iret
dec
dec
int3
imul
push
and
(bad)
std
mov
pop
mov
or
xor
mov
ins
shr
jae
add
retf
adc
scas
and
call
mov
cs
iret
xor
cmp
dec
out
enter
xchg
aaa
adc
sbb
fimul
repnz
inc
xor
mov
nop
lods
bound
daa
(bad)
int3
inc
in
or
mul
cmp
std
xor
cmps
adc
lods
sahf
pop
ss
call
mov
cld
push
mov
pop
mov
add
popa
add
retf
adc
mov
add
aad
push
cli
xchg
shl
int3
lea
mov
mov
jo
repz
adc
jnp
inc
push
(bad)
and
ins
fcomp
jae
xor
loop
ins
imul
jmp
ret
add
mov
das
xor
adc
jno
pop
in
mov
mov
sub
dec
scas
les
jno
clc
ss
pop
xchg
xor
in
popa
add
sub
mov
push
(bad)
mov
mov
daa
xchg
dec
add
xchg
int3
xchg
pop
pop
bound
adc
xchg
aas
add
pop
fisub
push
and
sbb
fisttp
cmp
aaa
(bad)
aad
clc
mov
jl
pop
lsl
sahf
fdivr
fs
adc
ret
(bad)
and
imul
xor
sbb
mov
jecxz
outs
sbb
call
and
jns
mov
jmp
jmp
push
jg
jp
aaa
fwait
bound
xor
std
mov
gs
into
pop
in
pop
adc
outs
xor
xchg
out
add
add
xor
ret
rcr
rcr
movs
or
jo
mov
mov
lock
shl
or
aas
push
adc
in
ja
jne
mov
dec
mov
or
xor
jmp
dec
int3
adc
jno
shl
les
(bad)
rol
jl
pop
pop
or
ds
mov
inc
sbb
cli
or
cmp
div
xor
int3
ret
(bad)
mov
inc
movs
pop
xchg
(bad)
dec
popa
mov
ins
mov
sbb
imul
cwde
out
dec
and
xchg
xor
outs
pop
sub
push
xchg
mov
movs
out
push
clc
nop
je
out
sti
jge
xor
in
pop
clc
cmc
and
in
int3
js
or
jne
add
fdiv
add
sbb
test
call
push
xchg
cli
ins
dec
xor
ja
in
and
adc
std
cwde
pusha
jmp
jno
xchg
push
push
inc
adc
xor
mov
sbb
(bad)
frstpm(287
enter
loopne
xchg
mov
mov
loopne
lahf
lods
pusha
and
adc
loopne
aas
inc
cmc
cli
jb
adc
push
dec
inc
pop
mov
sub
add
clc
push
mov
adc
xchg
lods
sbb
adc
cli
mov
xchg
mov
out
mov
repz
test
dec
int3
pop
pop
sub
add
xchg
popf
rol
in
stc
add
push
lock
(bad)
leave
fcomp
jne
dec
jno
and
outs
or
daa
fnsave
mov
pop
das
mov
fadd
pop
jmp
mov
inc
inc
test
cs
out
int
and
(bad)
push
xchg
pusha
add
ja
fisub
xlat
scas
xor
or
jbe
das
sahf
xor
xor
repz
sbb
adc
or
ficomp
and
jmp
add
daa
mov
int
xlat
xlat
icebp
(bad)
out
jns
push
enter
ret
xchg
repz
out
pop
loopne
push
jg
jmp
pop
lds
outs
dec
xchg
or
mov
adc
js
gs
inc
fst
into
or
daa
mov
fisubr
arpl
or
cmp
pop
sub
jle
mov
popf
sbb
test
ret
sub
xor
test
jge
clc
xor
aaa
cmc
aad
jb
dec
(bad)
mov
dec
sbb
pop
in
push
mov
mov
or
dec
xor
imul
mov
jle
mov
xor
or
mov
jge
lods
push
jnp
xor
out
rcr
adc
mov
xor
inc
inc
inc
cmp
sub
add
jge
add
jne
cmp
push
ror
call
adc
mov
xchg
and
rcr
or
sbb
in
loope
dec
cli
ficom
aad
lods
jge
xor
pusha
xlat
push
repnz
rcl
and
outs
and
frstpm(287
inc
cmps
mov
push
gs
cs
loope
dec
outs
cld
out
or
test
mul
int
or
rcl
and
cmp
test
(bad)
adc
pop
sbb
test
pushf
sub
ror
cdq
aad
dec
aaa
rol
rcr
mov
fwait
pusha
call
xlat
sahf
ins
call
pop
scas
gs
outs
xor
push
adc
es
scas
mov
xchg
ror
mov
adc
cmc
push
aas
jnp
push
pop
sbb
retf
xor
es
sub
xchg
shl
test
push
xor
jp
fld
push
and
cmp
xor
aaa
dec
cmp
and
les
xchg
or
addr16
and
jae
pop
and
sbb
pusha
cdq
outs
repnz
cmc
(bad)
mov
clc
cmc
dec
sti
rol
and
push
jl
inc
int
sub
repz
cmp
push
adc
cmp
std
or
in
hlt
and
int3
int3
or
xchg
retf
push
sbb
or
and
add
pop
korb
jp
cli
cli
addr16
push
adc
xchg
or
call
test
rol
inc
neg
xlat
dec
mov
mov
aam
add
lods
fnstenv
loope
cmp
xchg
add
in
or
adc
jmp
out
out
xor
sub
in
mov
cwde
daa
sti
fiadd
cwde
repz
loopne
xor
xchg
ja
fwait
sti
mov
sub
pavgw
jp
inc
sahf
dec
(bad)
fadd
add
dec
add
scas
lods
jo
stc
inc
push
addr16
test
shl
cdq
jle
movs
in
into
or
xchg
(bad)
pop
ss
retf
lods
mov
(bad)
jmp
push
cdq
dec
out
push
add
xor
dec
or
(bad)
mov
or
xlat
mov
test
std
or
icebp
(bad)
push
je
mov
jne
pop
jmp
arpl
dec
call
add
adc
ja
in
pushf
sbb
jle
and
push
cmp
mov
inc
(bad)
mov
repz
mov
dec
mov
pop
xchg
(bad)
mov
mov
add
into
jl
mov
or
cmp
push
sub
sahf
bound
(bad)
cmp
sub
push
xor
dec
push
pop
shl
pop
stos
push
cmp
stc
lods
out
jbe
dec
sti
dec
outs
vrcpss
jl
dec
cwde
arpl
jo
cmc
call
into
cmp
jle
sbb
out
mov
daa
into
sub
sbb
sahf
jp
aad
mov
mov
push
out
mov
push
push
dec
xor
es
mov
enter
into
popa
push
(bad)
xlat
sbb
in
jbe
jge
sar
fisubr
call
addr16
call
sub
lods
in
cmp
shr
jne
mov
(bad)
jp
es
xchg
xchg
fnstcw
push
fs
mov
cmp
push
jmp
xchg
in
icebp
inc
adc
dec
sti
pop
test
in
mov
add
or
out
sub
or
fcmovnu
mov
gs
in
xor
ret
faddp
or
dec
call
in
aam
xor
lods
lahf
pop
adc
mov
adc
and
sbb
push
enter
adc
cmp
pusha
test
cmp
push
arpl
adc
mov
sbb
js
fldcw
jle
scas
fist
retf
stc
or
shl
adc
enter
sbb
pusha
lods
sar
int
xlat
inc
mov
js
imul
or
dec
gs
push
arpl
out
arpl
pop
inc
out
cmp
or
mov
ins
clc
cli
pop
mov
(bad)
neg
push
aas
aam
xchg
pop
xchg
mov
int3
pop
push
(bad)
es
lods
(bad)
mov
fistp
xchg
daa
mov
es
pop
mov
les
fs
cli
into
mov
mov
into
jbe
mov
push
shl
js
shr
mov
xlat
sahf
mov
test
ret
stc
mov
jmp
push
call
xor
lods
(bad)
cld
mov
sub
pop
adc
mov
push
mov
adc
push
fwait
fwait
inc
call
dec
or
or
sbb
fdivr
fbld
movs
jne
dec
jmp
sbb
sahf
(bad)
out
inc
adc
pushf
push
add
jb
loope
jno
xlat
mov
pop
adc
and
add
and
jno
push
and
in
cmps
sbb
sar
push
lods
call
repz
or
shl
push
adc
aaa
scas
push
jl
gs
sbb
xchg
sub
dec
cmps
mov
and
xor
sbb
movs
int3
inc
cmp
pop
in
int
mov
cmp
movs
and
mov
aas
fdivr
adc
adc
inc
stos
or
sti
outs
in
mov
dec
stc
retf
popf
fwait
cmp
aas
sub
fdivr
adc
rcl
fisubr
fucomp
in
ret
cli
(bad)
(bad)
mov
aad
mov
mov
stc
arpl
push
pop
leave
fidivr
xchg
sbb
mov
cmp
mov
mov
mov
sub
ret
mov
iret
or
mov
in
ret
jo
out
mov
xchg
ret
pop
adc
scas
mov
dec
cmp
jp
pop
mov
jne
outs
pop
pop
adc
loop
mov
and
or
lods
sbb
jns
scas
out
adc
daa
inc
and
push
dec
(bad)
out
push
cmps
test
cmpxchg
and
cmp
shl
sub
mov
adc
ja
add
or
ret
pop
cmps
and
(bad)
adc
inc
pop
ret
push
aam
mov
call
and
cdq
arpl
ins
push
bsf
cdq
add
xlat
xchg
fs
or
rcl
jecxz
clc
movs
xchg
fild
xor
lock
pop
lock
push
push
scas
lock
push
sbb
fmul
dec
test
dec
lds
ret
fld
sub
lahf
jbe
xchg
test
lds
retf
mov
pop
push
cmps
sub
adc
pop
aam
out
repz
test
es
pop
std
pop
jl
dec
fild
sbb
lds
push
sbb
fst
enter
mov
in
sar
gs
mov
imul
fisttp
dec
js
call
push
cmp
jnp
jl
mov
xor
rcl
mov
fwait
push
mov
push
jne
dec
or
test
ffree
cmp
push
xchg
mov
rol
mov
pop
xlat
addr16
call
in
test
(bad)
mov
push
jno
stos
bnd
cmp
xchg
je
mov
rol
jmp
xor
pop
xchg
and
cwde
xchg
pop
inc
aaa
push
aam
pop
jbe
in
xor
pushf
nop
das
imul
ret
mov
mov
or
movs
lods
sbb
mov
jne
or
lods
je
mov
jne
rcl
push
cmp
retf
and
jp
jbe
nop
xchg
adc
rcr
add
push
push
push
mov
in
cdq
es
icebp
mov
push
jae
pand
mov
jo
mov
clc
les
(bad)
out
mov
add
push
ret
or
dec
or
and
cmp
sub
test
lea
arpl
sub
inc
shr
popa
les
ja
jno
mov
test
xor
out
xor
sahf
scas
mov
scas
inc
cdq
pusha
xchg
xor
jmp
or
jle
call
sub
sub
jnp
sahf
adc
push
cmc
xor
mov
or
in
dec
cmps
nop
sub
adc
scas
scas
pop
push
mov
dec
in
lock
outs
ins
push
mov
pop
sub
call
and
lock
arpl
mov
sub
in
mov
mov
sbb
dec
retf
test
inc
jnp
std
and
sbb
nop
or
push
imul
dec
xchg
cmp
or
push
(bad)
je
stos
and
jb
fwait
or
repz
bound
aaa
and
jne
lods
cld
push
mov
jle
test
and
shl
cmp
mov
xor
jns
out
and
sti
push
mov
xor
cmp
test
(bad)
rcl
scas
jbe
push
xchg
fild
cmp
bound
mov
xchg
nop
aas
rcl
dec
shl
xchg
mov
arpl
popf
xchg
xor
cwde
int3
loope
jmp
into
push
xor
adc
mov
jb
fdivr
mov
cld
adc
mov
xchg
in
mov
and
mov
sub
outs
fdiv
dec
aas
ret
or
fwait
andps
sub
mov
or
popa
fs
out
popf
lods
jns
mov
pop
scas
pop
test
out
cmp
dec
xor
mov
jle
into
mov
dec
or
(bad)
xor
or
pop
pop
mov
mov
push
mov
call
add
pop
ret
xchg
pop
(bad)
xlat
or
lods
push
adc
ret
mov
popa
pop
test
sub
es
xchg
jle
adc
xor
jmp
pusha
outs
sub
adc
les
adc
aaa
mov
dec
sar
sbb
shr
(bad)
pop
rcl
or
mov
lahf
(bad)
stc
xor
das
mov
mov
ss
cwde
jae
sti
mov
ds
ror
outs
or
dec
mov
lea
call
push
shl
inc
shl
lahf
and
or
popa
pop
stos
dec
xchg
inc
(bad)
aaa
hlt
xchg
dec
adc
mul
pop
cmp
push
jmp
cmps
jns
test
mov
rol
mov
xchg
cs
mov
or
out
jle
sar
sbb
les
jmp
ds
xchg
outs
outs
mov
stos
lahf
dec
mov
cmp
push
and
sbb
push
shr
jbe
or
push
mov
(bad)
es
fsubr
(bad)
push
test
mov
ins
cs
and
mov
jae
(bad)
cld
stos
xor
cld
test
dec
jmp
ret
bound
aaa
sbb
add
dec
mov
mov
jae
pop
dec
in
push
mov
inc
retf
pop
(bad)
in
jb
aas
or
add
pop
fwait
sub
out
sub
shl
add
push
mov
adc
jb
jp
xchg
aad
ret
ret
loopne
loope
pop
mov
test
mov
mov
jae
mov
(bad)
int3
stos
imul
adc
inc
sub
fldcw
jb
jle
ret
shr
or
cwde
lock
iret
sub
cmps
cwde
push
cmp
push
adc
ins
shr
cmp
clc
or
dec
inc
add
imul
ins
aam
imul
loopne
add
pinsrw
ficomp
sub
xor
fcomip
aam
jae
cld
pop
test
mov
movs
mov
dec
jo
mov
xor
xor
adc
jmp
push
xchg
push
dec
in
popa
(bad)
loopne
sbb
mov
stos
dec
mov
mov
clc
arpl
cmp
ja
cld
cld
mov
mov
mov
pop
ss
sub
fsubr
repnz
xchg
ss
fld
rcl
aad
adc
pushf
sbb
or
repz
dec
(bad)
fcom
call
push
push
push
or
xor
and
xor
pop
call
inc
bound
stos
cmp
mov
and
xchg
jne
inc
push
push
pop
dec
stos
aam
jno
sbb
adc
cld
mov
test
(bad)
pop
inc
ja
adc
cmps
sbb
in
dec
inc
inc
in
mov
mov
ja
inc
arpl
mov
dec
es
cmp
xlat
adc
jns
cwde
mov
pop
into
fsubr
and
pop
add
bound
jns
test
imul
push
je
mov
sub
div
cdq
xchg
loop
stos
jmp
aam
xchg
sub
xor
lods
mov
inc
inc
mov
cmc
les
nop
push
daa
cs
pop
cmp
pop
out
jge
(bad)
jns
mov
or
test
scas
mov
mov
add
imul
inc
jmp
pop
adc
cmp
mov
mov
sti
bound
mov
jnp
adc
das
gs
jg
cmps
repz
fld
xor
or
mov
test
xabort
and
mov
mov
loop
dec
movs
add
mov
or
(bad)
adc
xchg
cmp
or
or
mov
adc
adc
jb
(bad)
lahf
jmp
and
(bad)
and
es
xor
or
stos
jne
cmp
loope
ins
ins
jmp
cmp
std
sub
ror
xlat
mov
jl
inc
mov
dec
mov
sub
(bad)
popa
dec
in
into
lock
inc
cmp
mov
mov
lods
adc
push
mov
repz
xor
inc
into
rol
inc
xor
sbb
push
fadd
or
pop
imul
mov
ja
dec
arpl
pop
cmp
popa
jns
xchg
fdiv
mov
jns
imul
inc
mov
push
cwde
je
xor
int3
js
stos
aas
push
retf
xchg
aam
rcr
push
xor
outs
cwde
sub
popf
or
cmp
pop
popa
lock
cmp
xor
pop
cwde
xchg
and
jns
clc
out
xor
jmp
neg
fist
test
and
inc
ret
pop
fistp
mov
ins
mov
lahf
mov
call
es
xor
retf
add
xor
pop
sbb
xor
(bad)
pop
pop
ffree
mov
push
fisttp
pop
or
leave
xchg
adc
adc
or
sbb
lods
mov
jp
(bad)
pop
xchg
popa
and
imul
repnz
push
adc
daa
fwait
xor
cmc
mov
pop
lock
jl
xchg
xchg
pop
ja
xchg
in
sbb
sahf
inc
fadd
adc
xchg
sbb
and
lea
out
inc
fwait
pusha
pop
mov
lods
imul
in
sub
mov
push
inc
dec
into
into
bound
cwde
sbb
repz
cmp
int
stos
jmp
ins
jo
jae
popa
dec
mov
jmp
bound
icebp
sub
or
and
sub
enter
in
mov
mov
mov
sbb
popf
not
jg
push
out
push
mov
xchg
sbb
jp
lods
fmul
inc
scas
xor
or
mov
das
(bad)
jae
and
retf
mov
loopne
lods
pop
movs
mov
ror
fidiv
lahf
std
mov
ret
test
push
mov
jnp
call
mov
adc
outs
int
add
call
cdq
scas
jns
mov
jno
push
test
mov
in
jle
pusha
push
outs
dec
cmp
cmps
sub
push
sti
sub
pop
into
xchg
repz
mov
sub
sti
xchg
jae
mov
sahf
pusha
mov
pop
cmp
xchg
xor
movs
xor
cwde
cwde
ret
sbb
jae
(bad)
aad
jbe
jnp
mov
sahf
lea
adc
movs
push
aad
jno
mov
inc
out
pop
or
gs
or
inc
xchg
fild
nop
xchg
xchg
cld
adc
pop
jne
inc
cmps
in
out
xchg
in
mov
daa
leave
loop
inc
fild
ins
pop
pop
imul
in
lds
sbb
dec
jmp
sub
into
enter
call
xchg
jne
ret
iret
sti
mov
pop
push
les
scas
lock
loopne
retf
or
sbb
rcr
cmp
jp
inc
dec
pushf
cmp
mov
cmps
repnz
dec
jns
and
pop
jecxz
push
push
lods
cmp
mov
push
dec
cmp
lahf
adc
in
xchg
(bad)
dec
retf
js
cmp
aam
(bad)
jmp
jne
xchg
das
or
int3
push
aad
das
inc
dec
dec
sbb
ds
fisub
out
in
out
(bad)
mov
in
test
les
lods
mov
sub
push
es
add
bound
sbb
xchg
ror
imul
mov
cmp
test
std
hlt
(bad)
call
xor
cdq
mov
pop
ins
sub
mov
jl
or
cli
cmovle
sbb
or
nop
ins
add
in
mov
sub
pop
fst
stos
jmp
lahf
jno
pop
jmp
push
adc
push
stos
int
imul
movs
dec
ja
mov
inc
inc
mov
ds
idiv
movs
call
shr
lods
div
mov
and
jne
pop
shr
(bad)
xchg
and
ins
iret
xchg
imul
mov
push
inc
jp
sbb
push
fisttp
cli
lods
sub
mov
js
dec
push
sbb
push
(bad)
sbb
test
dec
sbb
cmp
sbb
sbb
stc
and
outs
in
shr
mov
scas
or
push
adc
adc
adc
lea
jb
cmp
cwde
or
retf
xchg
pop
enter
jge
mov
mov
sub
movs
pop
inc
dec
cmps
and
into
cmp
sahf
das
retf
in
leave
jg
daa
rcr
retf
(bad)
jp
test
adc
or
or
ja
fadd
mov
pusha
pop
inc
scas
inc
pop
dec
pop
jb
adc
ins
fwait
ins
adc
or
inc
inc
cmc
push
mov
scas
iret
out
jge
mov
adc
jb
cmps
repz
add
mov
pusha
xchg
out
sahf
clc
pop
scas
xchg
in
xchg
push
lock
scas
(bad)
or
ds
cmps
fwait
or
add
pop
xchg
mov
pushf
sbb
iret
dec
je
loope
cmp
cmps
mov
retf
bound
push
jnp
lock
pop
aam
inc
jecxz
or
movs
sub
shl
adc
loope
lock
sub
add
mov
aad
(bad)
xor
jo
or
mov
cwde
xchg
xchg
clc
mov
loope
xor
cli
js
pop
ss
xor
fld
ins
mov
push
mov
push
pop
push
cmp
out
or
push
jne
adc
pusha
(bad)
jns
stc
dec
dec
neg
sub
js
pusha
retf
inc
sti
mov
mov
xchg
test
jecxz
mov
hlt
pop
add
(bad)
loopne
ret
stos
add
lock
mov
popa
dec
push
in
and
call
sar
cmp
call
dec
ficom
push
call
pmovmskb
repnz
cwde
mov
sbb
push
jbe
stos
pop
iret
aam
mov
fadd
ss
iret
add
and
(bad)
in
sub
xchg
adc
add
dec
daa
jg
mov
je
into
fucom
mov
adc
mov
stc
cmp
loopne
sub
jo
push
push
add
ins
sub
add
jg
cmp
fmul
dec
sub
iret
inc
fs
inc
lods
cmovno
or
pop
sub
aaa
sbb
dec
xchg
out
imul
xchg
add
sbb
add
jge
sbb
add
xchg
repnz
movs
push
cld
aad
outs
or
sbb
and
or
cwde
jns
aas
jecxz
or
js
mov
adc
xchg
inc
outs
retf
icebp
xchg
jmp
sub
hlt
mov
dec
xor
(bad)
mov
push
sub
inc
xor
push
in
mov
mov
push
arpl
mov
cmp
jmp
pop
mov
mov
mov
dec
jg
hlt
cmps
xor
inc
scas
out
pop
pop
(bad)
fmul
sbb
in
cmp
fdiv
inc
fwait
xchg
push
xchg
pusha
add
call
cmps
cmp
jns
ffree
inc
jl
neg
or
test
aam
mov
popa
lds
or
xchg
mov
(bad)
dec
int
addr16
(bad)
shr
fadd
or
mov
mov
retf
jnp
test
movs
or
pop
mov
cmp
cmp
push
in
in
mov
mov
jne
jne
and
popf
sbb
sbb
ror
mov
popf
rcl
out
jmp
mov
pushf
and
popf
mov
pop
pop
mov
mov
add
std
push
leave
call
test
dec
arpl
xor
shl
cwde
xchg
fnstcw
into
and
je
mov
leave
and
icebp
xor
fild
inc
mov
hlt
popf
out
and
push
sbb
sbb
int3
dec
inc
sbb
popf
aam
mov
sbb
pop
retf
mov
inc
pop
xlat
xor
in
jb
dec
cmps
inc
mov
js
(bad)
std
shr
inc
sbb
mov
pushf
js
ficom
ret
cmp
pop
xchg
aad
imul
std
jl
or
mov
sub
sub
cmp
shr
in
packuswb
mov
out
jmp
mov
push
mov
icebp
cli
stc
mov
stc
cld
jb
push
dec
mov
xchg
repz
movs
out
arpl
sub
js
sbb
and
xchg
add
je
or
scas
xchg
rcr
push
add
xlat
sbb
mov
sbb
loope
xor
pop
(bad)
xor
test
cmp
add
iret
jno
push
ds
test
mov
jns
xor
mov
mov
stos
into
pop
xor
stos
jmp
pushf
jno
stos
sub
je
mov
push
cli
mov
popf
sub
mov
ds
mov
jl
pop
leave
sbb
leave
ret
stc
adc
retf
loopne
cld
sbb
jb
xor
and
jno
ds
jp
adc
sbb
mov
mov
mov
and
cdq
dec
aaa
and
or
hlt
or
and
ss
push
repnz
int
pop
es
jno
adc
out
enter
xlat
mov
idiv
fistp
jl
sbb
cmp
sbb
arpl
xor
aam
push
sahf
rcl
es
int
ins
xchg
sub
or
outs
and
repnz
out
sbb
mov
jg
bound
xchg
ja
adc
cmps
nop
cmc
(bad)
in
rol
ret
cld
dec
sti
jae
and
rcl
and
stos
iret
push
gs
cs
lods
sar
pop
mov
jae
jge
sub
loop
dec
cmp
adc
cld
test
pop
into
js
mov
imul
scas
imul
inc
or
cld
dec
push
or
(bad)
pop
sub
cdq
ret
push
(bad)
cmp
cmp
aaa
arpl
push
push
rcr
mov
in
pop
popa
or
(bad)
out
sbb
xor
pop
stos
in
sti
lods
ficom
lahf
inc
call
shl
test
pop
arpl
xor
sahf
adc
cmp
xor
dec
cmp
mov
sbb
sbb
in
mov
cdq
add
push
leave
fidiv
xor
in
push
adc
adc
aaa
xchg
sbb
ins
in
ret
aad
les
sbb
xor
mov
push
aas
test
movs
not
inc
ins
add
lock
push
in
sbb
scas
cmp
cmp
retf
and
movs
dec
stos
out
(bad)
xor
jg
iret
xor
movs
(bad)
xchg
push
(bad)
in
pop
stos
sbb
or
xchg
push
int
xor
les
mov
xor
test
std
mov
lods
mov
ja
outs
test
test
cli
adc
sti
push
lock
inc
into
je
or
xchg
(bad)
pusha
adc
in
popf
dec
ja
in
sub
xor
jmp
cmp
dec
in
js
movs
pop
dec
push
xor
jl
push
dec
(bad)
ins
in
ret
mov
cmp
jne
test
repnz
fidiv
inc
jb
or
out
push
fldenv
xchg
aam
push
aam
add
(bad)
cs
lea
push
jge
mov
or
xchg
clc
fidivr
or
fnsave
int3
das
fidiv
sbb
mov
jmp
repnz
sbb
push
xor
inc
pop
mul
add
mov
xor
pop
clc
test
add
fmul
(bad)
sbb
mov
lods
cmp
popa
pop
(bad)
shl
ss
enter
pop
adc
jnp
lds
inc
out
(bad)
ret
xchg
ror
outs
mov
mov
out
jecxz
dec
or
clc
popa
outs
popa
ret
sbb
mov
(bad)
popa
jp
nop
fadd
and
cmp
aam
lock
hlt
sub
out
test
enter
push
push
jg
(bad)
lds
stos
out
cs
mov
rcr
xor
mov
les
out
test
dec
ror
cs
mov
xor
inc
xchg
(bad)
jle
js
mov
loop
test
or
xchg
xor
push
mov
lahf
xor
sub
xchg
clc
dec
in
popa
cli
int3
in
push
pop
or
push
into
ins
jge
fdiv
ds
cmp
jg
pop
inc
sub
loop
sti
xor
and
sbb
lods
mov
xlat
(bad)
jle
cld
mov
dec
ffreep
lods
push
or
mov
jne
mov
dec
add
fwait
ret
ffreep
inc
push
addr16
adc
jmp
aaa
shr
mul
ficom
or
or
add
data16
out
(bad)
adc
pop
ins
retf
ja
ret
cdq
xchg
jl
or
xor
scas
adc
push
inc
ja
ins
int3
stos
xchg
or
out
les
jne
cmps
loopne
mov
add
pop
je
jecxz
imul
mov
inc
pop
jb
rcr
imul
sti
stc
jecxz
push
cmp
or
stc
pop
xchg
imul
pop
out
fdivr
adc
inc
mov
jbe
sub
jne
xchg
jnp
rcl
imul
mov
push
jae
mov
scas
mov
mov
cli
jnp
aas
in
rol
mov
mov
fstp
cmc
iret
add
out
adc
in
jae
adc
bound
(bad)
retf
mov
call
xor
ffreep
fcomp
hlt
repz
repnz
cmp
mov
or
cmc
mov
pop
popfw
jno
(bad)
jbe
jae
xchg
xor
push
loope
mov
out
and
out
out
mov
cmp
jg
jle
(bad)
mov
adc
out
cmps
cmp
mov
sub
xor
xchg
inc
in
fadd
in
xor
mov
cld
add
adc
fistp
aad
and
mov
rcr
retf
adc
pop
push
sbb
ins
cmc
pop
adc
add
dec
push
push
int3
loop
xchg
fnsave
adc
pop
movs
push
or
scas
stos
jg
ja
int3
push
retf
fs
lds
repnz
pop
pop
arpl
mov
jmp
adc
imul
adc
outs
call
pop
es
movs
loopne
dec
push
out
(bad)
xchg
scas
or
cmp
and
or
or
shl
cmp
push
push
add
xchg
cli
nop
test
dec
pusha
add
and
add
inc
adc
push
(bad)
cmp
dec
repz
and
xor
dec
lods
xchg
adc
add
in
(bad)
aam
xchg
and
mov
xor
push
and
(bad)
and
std
es
outs
mov
sub
mov
xchg
out
and
fstp
or
jae
mul
mov
data16
and
push
jle
sbb
retf
add
push
pop
or
or
inc
adc
pop
xor
int
pop
sar
push
ss
sub
fiadd
in
and
xchg
sub
dec
clc
push
mov
out
xchg
add
test
inc
les
or
fcomp
jbe
aaa
push
jbe
push
mov
mov
out
cmps
arpl
dec
lds
cmp
mov
xor
aas
cmp
mov
out
xor
sub
cmps
cs
sahf
push
retf
cs
adc
sbb
leave
rcl
push
test
xor
push
mov
clc
repz
mov
xor
pop
adc
jae
(bad)
push
xor
or
add
mov
es
(bad)
sbb
aas
cmp
mov
cmps
add
push
std
mov
push
call
pop
mov
int
daa
je
int3
jp
mov
mov
stc
mov
test
loopne
(bad)
dec
xchg
js
xor
test
pop
push
mov
push
dec
jge
iret
sahf
pop
jp
outs
imul
sub
fild
das
push
inc
xor
es
(bad)
pop
test
pop
outs
(bad)
js
cwde
test
jecxz
push
mov
sar
xchg
sub
imul
mov
lahf
xor
jbe
es
add
data16
and
mov
push
add
sub
push
jnp
pop
pop
bound
cmps
into
jbe
out
push
push
lds
xor
out
int
aad
fdivr
jb
mov
cmp
fdivr
xor
xchg
clc
in
cmc
cmp
mov
sub
test
add
inc
cmp
fimul
iret
mov
(bad)
mov
sub
sbb
jno
shr
stos
xor
adc
into
std
repnz
and
loope
in
mov
ret
(bad)
int
push
cmp
imul
pop
cmc
mov
xor
dec
inc
ss
adc
inc
repz
sar
retf
adc
out
push
retf
or
and
push
outs
or
cmp
add
mov
sbb
ja
fst
cmp
xlat
sub
gs
retf
cmp
and
push
jg
dec
adc
mov
cmps
int
jg
lahf
push
jmp
aad
xlat
bound
call
fs
dec
lods
mov
neg
cmp
add
int3
rol
aam
(bad)
out
xlat
sub
push
shr
int3
push
pop
mov
ret
iret
ja
jo
aad
push
in
lock
fbld
cmp
sahf
add
jg
ds
retf
cmp
iretw
out
das
dec
call
out
in
xor
pop
fdivr
mov
fwait
cmp
xchg
mov
stos
movs
arpl
imul
inc
js
lods
jns
adc
popa
sub
pop
mov
leave
jno
ins
push
add
lods
push
es
jns
pop
call
(bad)
fisub
je
ins
shl
not
fisubr
in
lds
repz
hlt
aad
mov
dec
retf
mov
out
xor
mov
call
test
push
int
or
aaa
jmp
mov
dec
aas
sbb
mov
cmp
dec
imul
push
jge
inc
xlat
out
add
add
and
scas
lahf
push
pop
inc
loope
in
sub
imul
lds
data16
jmp
sub
cwde
enter
jns
pop
push
mov
pop
sahf
(bad)
test
iret
gs
adc
test
mov
data16
out
stos
int
add
mov
push
(bad)
push
pop
arpl
pop
mov
call
jnp
or
pop
xchg
adc
sub
push
scas
mov
inc
cmp
es
jmp
repnz
jle
fwait
ror
cmp
in
ficomp
pop
jnp
fmul
repz
xor
jge
aad
add
xor
mov
movs
push
mov
dec
ret
adc
push
dec
ins
pop
adc
sysexit
test
sub
add
or
cwde
inc
xor
mov
(bad)
arpl
xchg
and
xchg
aam
lea
mov
inc
cmp
ss
push
daa
cmp
sbb
or
shl
xor
out
test
mov
fwait
xor
mov
out
int
mov
sub
jl
shr
sub
cmps
sbb
dec
cmp
into
or
int3
rol
pop
icebp
aam
call
repnz
sub
movs
iret
push
mov
ja
test
cmp
andnps
aaa
add
adc
repz
rol
inc
push
cmp
mov
fstp
push
data16
pop
sub
xchg
sbb
dec
push
aad
xchg
jg
loop
mov
sub
pop
and
xchg
lea
cmps
test
and
loopne
jmp
and
xlat
and
ret
adc
ja
je
mov
push
inc
cmp
cli
pop
ja
not
cmp
jg
adc
or
rol
fisubr
jne
push
sar
mov
push
adc
push
push
aam
jmp
jle
out
inc
push
(bad)
test
in
pop
jmp
pavgb
fdiv
movs
cld
adc
adc
aaa
add
cmp
sar
into
inc
and
or
leave
stc
mov
aas
test
repz
jecxz
jp
fcomp
sub
aas
xor
and
rcl
(bad)
fsubr
pop
pop
sar
mov
mov
mov
(bad)
(bad)
(bad)
fisub
lahf
cld
mov
xor
ins
imul
push
(bad)
xor
aad
and
cmp
sbb
push
xor
jl
es
or
cmc
push
ss
inc
icebp
and
inc
add
mov
je
test
mov
mov
pop
daa
mov
dec
and
retf
jmp
push
push
dec
fwait
xor
imul
lods
or
cmp
imul
mov
mov
sbb
or
rol
xor
test
icebp
sbb
idiv
inc
out
retf
pop
stos
daa
ins
or
daa
shl
push
int3
hlt
or
cmp
je
pop
add
(bad)
and
cld
leave
inc
xchg
xchg
cmc
cmps
xchg
mov
out
pop
stos
jo
pop
cmp
aaa
cdq
lds
push
pop
sbb
dec
les
dec
pop
pop
add
xchg
repz
push
sbb
rcl
jo
xchg
sbb
test
aad
popf
ss
pushf
push
sbb
cli
in
fmul
cmp
(bad)
jne
fcomp
sahf
aas
add
(bad)
ror
sbb
pop
cmps
mov
in
sbb
aam
dec
add
mov
mov
(bad)
enter
cmps
dec
lahf
pop
repnz
add
mov
push
ja
jmp
loop
(bad)
fidivr
lahf
sahf
mov
jg
cs
std
lods
xor
hlt
push
mov
out
imul
dec
or
pop
cmp
xor
cwde
and
in
je
xchg
lods
sar
cmps
data16
jl
sbb
bound
pop
cli
mov
repnz
(bad)
aaa
adc
rcl
nop
or
lods
or
lock
xor
push
(bad)
mov
(bad)
loopne
js
dec
add
jl
mov
stos
adc
out
xchg
js
pop
retf
and
pop
repnz
add
mov
fdiv
sbb
(bad)
idiv
sahf
pop
mov
push
xchg
pop
ror
(bad)
pop
scas
sti
mov
pushf
sbb
clc
dec
pop
mov
stc
fucomp
dec
cmp
push
xchg
call
and
or
(bad)
mov
cmp
retf
shr
push
mov
xchg
lds
(bad)
fsub
adc
add
imul
mov
mov
mov
jmp
movs
mov
cmc
mov
add
xor
shl
push
and
shl
push
xor
push
sbb
fcmovnb
cmp
jnp
jne
cli
fdiv
push
sub
leave
out
mov
or
outs
and
out
ret
cmp
test
icebp
push
jno
mov
in
std
jmp
add
xchg
aaa
sub
xchg
enter
icebp
stos
outs
cmp
add
repz
mov
mov
push
mov
test
shr
add
jno
enter
push
or
std
fsubr
xor
test
push
out
pop
and
scas
pop
push
test
dec
call
jmp
fcmovnbe
pop
jbe
push
and
mov
xchg
push
stc
xchg
jb
cld
push
xor
frstor
mov
cmp
push
test
or
loop
je
or
stos
and
cmps
iret
sub
rcr
lds
popa
out
imul
add
push
push
lahf
call
shr
mov
cmp
ja
push
push
loope
mov
and
out
mov
inc
sbb
ret
pop
outs
hlt
pop
aad
popw
pusha
jo
mov
movs
and
push
sar
out
fbld
mov
ss
mov
sbb
mov
pushf
xchg
cmp
out
sub
lods
adc
pop
pop
ret
cmp
ds
dec
inc
add
fistp
and
jle
aam
or
jg
sbb
xor
or
scas
and
xor
push
dec
or
int3
or
xor
call
pop
cmp
jmp
out
fimul
xchg
imul
loope
sub
mov
adc
xor
add
add
and
mov
jmp
loop
pop
push
or
or
hlt
out
enter
jnp
aaa
add
fucomi
lds
push
cmp
aas
mov
xlat
xchg
imul
call
aad
ret
cld
add
jmp
movs
fistp
ficomp
call
or
add
pop
or
add
imul
inc
cmp
mov
imul
sub
aad
mov
jbe
xchg
call
push
dec
pop
mov
and
in
cmp
and
sub
add
ret
mov
clc
rcr
jno
push
cmp
mov
clc
xchg
iret
push
jp
fmul
xor
(bad)
mov
sbb
lock
push
mov
jb
push
xchg
inc
sbb
sbb
mul
test
mov
aas
cli
inc
es
clc
iret
xchg
sbb
mov
and
and
adc
cli
mov
cmps
xchg
fwait
sar
popf
movs
mov
mov
push
enter
mov
adc
fstp
push
imul
xchg
inc
retf
cdq
cmps
add
out
iret
sub
mov
push
fwait
or
dec
popf
ins
(bad)
push
popa
xchg
sub
xor
dec
sbb
jbe
pop
xlat
mov
sub
nop
daa
retf
mov
xlat
pusha
idiv
call
inc
cld
mov
sbb
adc
sbb
sub
inc
xor
pop
and
push
mov
sbb
out
sub
fnstcw
leave
push
add
dec
rcr
xor
cmp
scas
xor
popa
xchg
and
(bad)
mov
dec
fld
sub
leave
repnz
aam
pop
in
pop
mov
imul
int
pop
sbb
pop
fidiv
mov
dec
xchg
inc
lods
cmps
clc
lahf
in
outs
mov
push
les
sbb
and
cmovo
and
pop
ins
hlt
stos
adc
add
mov
pop
cmp
dec
jg
rcl
ffree
rcr
and
xchg
syscall
mov
adc
scas
(bad)
jge
dec
xchg
dec
hlt
sub
or
adc
or
xor
neg
adc
mov
shl
nop
mov
es
cmp
dec
jmp
push
aas
and
or
dec
cmp
and
mov
test
(bad)
jecxz
add
cmp
cmp
jbe
xchg
lock
fmul
cmp
(bad)
lods
mov
ficom
xchg
sbb
mov
and
scas
sub
test
aad
jmp
sar
pop
jg
jbe
stos
mov
jne
sahf
test
cmp
dec
test
add
xor
aad
fdivr
ficom
rol
dec
movs
mov
cmc
jle
pop
mov
enter
fld
mov
jnp
inc
cmovs
ror
lock
int3
mov
scas
inc
or
dec
pop
stos
sbb
popf
xchg
loopne
int
popf
and
adc
cmp
popf
iret
ja
sbb
mov
pop
shl
aam
int3
dec
xor
pop
mov
in
sbb
cmp
cmp
jp
repz
jg
sbb
jge
pop
mov
out
lods
xchg
mov
repz
aaa
mov
cmps
cmps
repnz
ds
or
(bad)
icebp
mov
dec
mov
fst
sub
or
jb
lock
dec
xor
les
mov
outs
nop
jle
sbb
push
out
(bad)
xor
gs
or
hlt
cmovl
mov
stos
mov
xor
sbb
clc
pop
mov
ret
adc
jmp
mov
or
pop
rcl
out
mov
sub
jl
test
adc
cmp
in
cdq
(bad)
inc
mov
pop
fwait
js
sub
daa
mov
icebp
idiv
cmp
push
cld
mov
jmp
lock
icebp
jp
inc
add
icebp
stc
dec
jns
scas
js
xor
retf
iret
xchg
mov
rcl
inc
mov
mov
cmps
std
out
mov
jo
fbstp
fcomp
ins
jo
mov
push
arpl
adc
pop
repz
or
test
(bad)
aaa
mov
loopne
add
lea
stos
jmp
iret
cmps
mov
jecxz
push
jb
int
mov
mov
addr16
iret
adc
lods
pushf
pop
ret
cdq
out
pop
xchg
sub
sbb
data16
sub
xor
xor
jl
jg
dec
xchg
into
cmps
ficom
sbb
loope
inc
arpl
lods
mov
jns
pop
push
mov
pop
stos
retf
and
fld
into
push
retf
cmp
add
hlt
or
(bad)
(bad)
aad
push
jmp
aas
xor
mov
retf
jmp
cwde
or
arpl
fidivr
ss
icebp
adc
dec
sbb
mov
rol
frstor
push
and
fwait
jns
js
or
pushf
push
push
fwait
sbb
test
pop
mov
les
jo
pusha
xor
sbb
(bad)
iret
sub
push
out
mov
xor
xchg
call
pop
test
inc
adc
push
mul
stos
inc
ins
test
or
mov
fsubr
jnp
xchg
or
inc
dec
xchg
inc
sar
xchg
sub
mov
cmps
push
add
jge
call
movs
out
xor
outs
pop
jmp
mov
xchg
xchg
mov
xchg
xor
and
loop
ds
repnz
adc
or
xchg
loope
mov
movs
(bad)
dec
popf
in
jne
xor
(bad)
add
(bad)
sub
mov
popf
mov
adc
(bad)
xor
mov
test
lea
loopne
mov
push
daa
call
jmp
fwait
(bad)
mov
mov
push
scas
loopne
sub
sbb
daa
stos
jno
fwait
out
pop
dec
cld
popf
sar
mov
dec
and
jl
mov
fiadd
psadbw
mov
(bad)
int
rol
jne
(bad)
std
cdq
add
mov
jo
dec
xchg
out
mov
pop
fcmovb
popf
mov
xchg
fadd
pop
pushf
fcmovnbe
icebp
xchg
jns
and
bound
jmp
push
jle
cmps
std
mov
push
sbb
int
add
popf
cmp
sub
xor
loop
cmp
out
ins
(bad)
or
or
in
adc
dec
sub
arpl
test
pop
jge
in
cdq
inc
aam
cmp
ss
xor
mov
and
scas
cmp
add
pop
mov
ds
mov
and
push
stos
ror
lahf
mov
ret
gs
lods
dec
mov
(bad)
shr
cmc
pop
enter
and
sbb
inc
clc
inc
mov
sbb
stc
ret
sub
sahf
push
arpl
loope
icebp
leave
cmp
outs
jae
xor
xchg
shl
leave
idiv
shl
fcomp
outs
xor
cmp
inc
inc
mov
(bad)
int3
ret
retf
pop
add
ret
push
jmp
retf
jmp
stos
mov
add
push
in
cs
inc
jmp
push
lods
or
(bad)
rep
out
add
sbb
ins
mov
sub
out
ins
pop
jne
jmp
in
xor
(bad)
sbb
mov
les
push
dec
(bad)
push
lods
cmps
cmc
(bad)
jno
das
push
shr
xchg
sub
mov
cdq
xchg
ss
nop
sub
push
dec
mov
int3
mov
mov
inc
jnp
dec
push
add
jnp
mov
std
inc
jl
dec
fimul
pushf
mov
cli
mov
cmc
push
mov
push
loop
add
mov
enter
std
and
inc
lock
aam
imul
push
ret
push
loop
pop
in
mov
pusha
mov
mov
jmp
mov
push
iret
adc
cld
mov
jg
pop
repz
jmp
xchg
test
and
pop
mov
ins
frndint
cmp
dec
pop
push
adc
pop
fwait
iret
sbb
(bad)
cmps
sub
sub
mov
pop
daa
movq
cwde
inc
push
pop
mov
xor
retf
xchg
ror
cmc
pop
sbb
sbb
and
dec
sub
mov
mov
push
mov
mov
mov
push
pop
dec
xlat
push
jmp
pop
mov
(bad)
push
inc
retf
jmp
test
sub
adc
cmp
or
(bad)
icebp
idiv
mov
dec
push
call
ins
and
lods
mov
fsubr
sbb
call
add
dec
lahf
inc
cdq
inc
mov
sub
jo
mov
in
sub
inc
mov
mov
pop
cmps
jle
sbb
pop
adc
jb
imul
pop
stos
call
dec
xchg
lahf
pop
push
xor
cld
sub
jnp
mov
mov
inc
adc
cmc
sbb
leave
pop
repnz
loopne
jne
lods
mov
jecxz
je
in
jns
mov
sbb
push
jb
jne
bound
inc
cdq
mov
sbb
punpckldq
arpl
jne
dec
inc
cmp
jnp
mov
dec
add
jb
pop
scas
je
adc
ret
ret
int
in
lahf
fnstcw
or
dec
and
out
outs
xor
dec
xor
or
ret
inc
and
jno
xchg
mov
add
mov
xor
adc
adc
jne
adc
outs
dec
test
imul
leave
push
lods
sub
add
dec
mov
dec
jle
push
add
into
int3
xchg
inc
int
xchg
add
dec
sub
dec
push
pop
cmps
mov
push
out
adc
push
fdiv
and
xchg
cmp
call
mov
not
adc
cmp
scas
iret
leave
clc
sub
pop
inc
ja
or
into
mov
lods
fimul
add
or
rol
fs
call
mov
mov
jecxz
stos
pusha
das
push
ret
sbb
jl
icebp
stos
out
mov
xchg
mov
(bad)
xchg
push
retf
push
or
mov
sbb
pop
push
fwait
popf
mov
int
div
xor
adc
cmp
aad
rcr
fiadd
xchg
lods
addr16
lock
adc
add
ja
in
inc
pusha
into
xchg
das
aaa
cmp
shr
push
xchg
xchg
out
enter
mov
inc
jmp
push
test
and
pop
scas
imul
push
in
jns
mov
adc
int
xchg
push
repz
aam
iret
pop
loop
cmp
stc
mov
addr16
push
shl
(bad)
sub
jbe
in
adc
jae
outs
jo
iret
je
stos
shl
loope
pop
cld
pushf
or
mov
in
or
cmp
(bad)
inc
jb
xchg
fstp
mov
xchg
test
cmp
test
shr
fwait
call
mov
(bad)
repz
sahf
jne
pusha
sar
xchg
popa
iret
jno
ror
mov
add
inc
and
adc
nop
popf
fsub
loope
lods
inc
xchg
mov
xor
mov
pop
xor
in
push
ret
add
call
(bad)
mov
and
cmc
add
sub
lea
jno
out
aas
mov
add
add
mov
icebp
in
fnstsw
jbe
dec
adc
fsubr
adc
adc
push
adc
cs
inc
test
sbb
push
push
fwait
lods
cmp
test
lea
lods
mov
sbb
loope
movs
sub
mov
xor
repz
xor
xor
test
push
sub
repz
retf
inc
ror
(bad)
cli
fs
loopne
jl
and
mov
ja
mov
jmp
and
fild
mov
pop
inc
cld
bound
cmp
je
les
jmp
jge
mov
xchg
icebp
mov
inc
xor
fmul
arpl
mov
jge
jbe
mov
cmps
mov
les
lods
pop
sahf
cmp
(bad)
mov
jb
dec
jecxz
xchg
mov
cdq
ds
cld
mov
adc
pop
in
retf
daa
dec
ds
mov
adc
push
push
jbe
ret
xor
push
lahf
add
stos
es
push
arpl
call
adc
jp
(bad)
fcmovnbe
mov
jne
test
sbb
inc
aad
push
in
add
jo
cmp
fwait
or
scas
aad
add
das
pop
mov
adc
addr16
les
adc
adc
mov
jmp
test
pusha
or
sbb
lds
pop
jne
je
or
fistp
jg
cld
mov
mov
mov
sub
lods
sbb
cmp
mov
xor
mov
push
push
pop
adc
cmp
(bad)
cmp
test
psraw
ins
dec
push
or
call
je
mov
jno
and
inc
jecxz
pop
jbe
fsubr
inc
mov
retf
std
and
cli
adc
fdiv
lock
call
daa
ret
loopne
add
in
jnp
xor
cmp
pushf
test
lods
add
push
xor
test
xor
fnstenv
dec
ror
jne
jmp
inc
pop
lahf
dec
ss
pop
mov
cdq
adc
std
sub
inc
pop
enterw
dec
and
movs
or
test
ja
sub
das
add
and
jg
inc
mov
push
sahf
out
adc
popa
cmp
lea
aaa
push
add
xchg
jne
adc
add
shl
sub
dec
jg
popf
ror
pextrw
mov
mov
mov
mov
das
dec
retf
mov
or
es
mov
jno
sar
jmp
pop
xor
push
fs
fdivr
retf
in
mov
mov
ds
dec
sub
rcl
dec
xor
nop
fst
sbb
and
not
dec
adc
imul
xor
xchg
xchg
popa
jg
or
sub
jl
bswap
ror
fwait
dec
pusha
pop
mov
xchg
cmp
fcom
ins
adc
(bad)
inc
imul
inc
jle
inc
xor
xchg
pop
pop
add
pop
ja
inc
(bad)
nop
bound
popa
push
cmp
lea
mov
ja
test
std
addps
inc
into
ret
or
pop
dec
addr16
shl
fild
clc
inc
aas
loope
fstp
(bad)
(bad)
lahf
ret
dec
xor
ror
and
outs
lahf
inc
test
fstp
xchg
fist
in
mov
in
and
push
pop
or
inc
mov
mov
movs
pop
sbb
or
(bad)
adc
not
and
iret
mov
xlat
repz
sahf
stos
xchg
jnp
ss
(bad)
aad
sub
lds
and
add
fistp
jecxz
adc
jl
xor
jp
cld
mov
jno
out
in
dec
leave
ja
sahf
pop
aad
add
imul
in
jmp
dec
dec
cmp
shl
xchg
jecxz
dec
push
fnstenv
or
jp
frstor
lods
dec
push
adc
and
dec
enter
jmp
cmp
sub
clc
mov
out
jnp
(bad)
inc
jns
fs
clc
sub
mov
jmp
mov
rep
icebp
lods
out
in
mov
cli
xlat
nop
sahf
lock
fbld
dec
add
test
jo
shl
in
(bad)
in
int3
xchg
push
cld
inc
(bad)
or
jle
pop
outs
mov
or
push
scas
imul
clc
inc
outs
inc
or
(bad)
mov
stos
inc
std
inc
xor
add
dec
adc
lods
xor
outs
cmp
jle
pop
mov
int
sub
repnz
and
cdq
add
push
xor
icebp
ror
leave
jg
es
fist
retf
pop
in
in
jge
xor
mov
mov
mov
jnp
out
cld
dec
imul
rcl
fild
dec
test
mov
adc
pop
xchg
inc
test
mov
pop
and
pop
xchg
call
sbb
push
out
xor
mov
lods
lahf
stos
(bad)
mov
lock
inc
push
faddp
or
jae
cwde
mov
mov
mov
pushf
cld
or
in
sub
frndint
sub
jmp
jmp
jae
cmp
jmp
mov
mov
mov
and
loope
out
inc
mov
cs
mov
(bad)
jmp
and
sbb
sbb
jmp
mov
xchg
js
cdq
imul
adc
jp
pusha
lods
mov
jmp
cdq
add
mov
mov
cmc
sub
mov
mov
call
sub
mov
xchg
push
push
and
dec
mov
adc
sahf
ja
les
ja
jp
mov
add
xor
dec
add
or
shr
lods
es
stos
clc
cmp
jb
in
push
dec
repnz
retf
gs
and
jl
cmp
xor
call
and
mov
into
inc
pop
pop
out
imul
fcomip
inc
cdq
push
pusha
(bad)
fucomp
push
stc
std
rcr
add
xchg
mov
sub
xor
enter
add
sbb
jnp
sub
ins
cmp
and
jo
push
mov
xor
int3
jp
aaa
repnz
xor
aaa
adc
xchg
and
sbb
xlat
repnz
sub
idiv
cmp
daa
or
fisttp
mov
sub
dec
add
enter
int
mov
cli
jmp
lods
jge
pop
test
mov
jne
pmaddwd
ds
or
push
sar
retf
ret
hlt
into
jl
mov
inc
(bad)
(bad)
and
mov
dec
call
(bad)
jge
adc
cmp
pop
mov
and
(bad)
push
mov
dec
cmp
pop
pop
lods
test
mov
mov
mov
jmp
xor
mov
cdq
xchg
push
loopne
in
sub
das
xchg
test
mov
shl
enter
xor
sbb
imul
cmovo
test
in
dec
gs
adc
es
sub
push
mov
mov
xor
lea
mov
das
cmp
mov
jecxz
dec
mov
inc
mov
xchg
fwait
lock
repnz
xchg
ins
sub
push
call
mov
or
sbb
and
test
push
adc
mov
imul
jb
xor
mov
sar
ja
inc
into
shl
inc
lds
mov
lods
mov
dec
data16
je
les
popa
xchg
xor
mov
leave
fistp
ror
push
in
push
jb
call
jp
lds
push
fwait
shr
inc
icebp
push
aas
add
aaa
sar
stos
xchg
jmp
xchg
push
iret
mov
sub
std
fwait
add
cmp
test
inc
cmp
inc
adc
(bad)
mov
cmp
adc
xlat
fdivr
cld
adc
or
ret
inc
mov
dec
test
add
sar
push
xchg
and
jecxz
fs
sbb
js
mov
sbb
sub
push
mov
imul
and
mov
(bad)
(bad)
jb
inc
dec
shl
aaa
les
jge
dec
add
aas
add
push
or
xchg
fwait
add
cli
mov
xor
sub
sub
push
popf
aad
(bad)
or
pop
jl
mov
(bad)
aam
movs
(bad)
movs
lea
daa
not
shl
ret
mov
shr
lahf
pop
pusha
aaa
retf
out
push
(bad)
in
adc
bound
pop
popa
out
sahf
les
lahf
fs
xacquire
dec
or
lods
lahf
adc
mov
inc
add
shr
sub
jno
and
push
stc
mov
imul
xchg
fs
stos
add
adc
in
fcomp
js
pop
pop
jmp
jo
inc
fwait
daa
inc
push
in
jmp
test
(bad)
fst
mov
mov
cmps
lahf
lods
jge
push
push
pop
pop
push
xchg
xlat
and
push
pop
and
ror
stos
and
dec
cwde
push
inc
mov
mov
(bad)
gs
fnstsw
std
int
xor
pop
fmulp
scas
xchg
sub
xor
add
das
dec
cmp
movq
push
mov
pop
xlat
test
out
or
xor
lods
movs
add
inc
mov
jmp
(bad)
mov
cs
shl
inc
and
dec
mov
inc
sbb
in
pop
sub
sbb
imul
(bad)
jne
add
dec
sbb
cmc
pop
ins
pop
or
xchg
mov
sbb
setne
std
sub
in
jbe
add
aas
faddp
mov
push
in
jb
mov
int
add
or
mov
inc
cs
mov
fdiv
or
fnstsw
sbb
sub
in
ss
jg
test
mov
jnp
mov
xor
shr
sub
aas
lahf
add
adc
bnd
xor
test
mov
cli
mov
sub
cmp
loope
mov
jp
fwait
xchg
leave
pop
repnz
loope
in
inc
inc
call
jg
test
sub
push
jb
dec
and
into
sbb
movs
fwait
cmp
gs
outs
sbb
cmp
mov
pop
out
(bad)
mov
sti
or
sub
stc
pop
shr
cmp
xlat
pop
cdq
ds
fld
or
mov
in
xchg
or
imul
js
push
(bad)
icebp
cld
imul
outs
ins
xor
inc
in
cli
test
mov
sub
mov
cdq
nop
sbb
inc
and
repnz
pop
xor
dec
pop
arpl
add
ins
std
out
xchg
mov
cmps
or
xor
mov
(bad)
mov
mov
pop
arpl
lods
cmp
loope
call
mov
loopne
outs
fcom
scas
xor
xor
cmc
push
addr16
or
push
ins
adc
retf
jle
nop
dec
adc
xor
retf
add
adc
fsubrp
enter
sub
mov
pop
and
in
cmp
xchg
pusha
movs
sub
and
dec
jg
dec
mov
adc
jb
jg
lahf
jg
mov
jmp
mov
outs
push
out
mov
cmp
pop
mov
inc
pop
cmp
in
inc
daa
imul
imul
jnp
add
xlat
mov
(bad)
lods
mov
cmp
mov
test
mov
js
cmp
jns
pop
fld
cmovo
mov
in
xor
push
push
mov
mov
retf
mov
dec
pop
sub
shl
aad
ins
pop
sub
inc
jecxz
adc
or
jmp
les
jmp
or
inc
and
nop
aas
loope
loope
gs
add
bound
rcr
icebp
pop
shl
add
mov
clc
and
retf
es
or
mov
push
push
jno
sub
stos
(bad)
mov
jecxz
outs
jnp
add
mov
mov
cmp
iret
and
xor
jae
je
mov
mov
add
test
das
cmp
repz
outs
or
sbb
dec
or
dec
rcpps
faddp
(bad)
arpl
sub
das
mov
sub
mov
xchg
sbb
push
loop
push
pop
in
fiadd
shl
call
(bad)
sbb
dec
pop
push
retf
enter
out
mov
fcomi
out
imul
cli
or
inc
repz
sti
mov
popf
jb
pop
jns
mov
mov
das
jmp
arpl
in
sub
xor
xchg
jns
add
xor
ror
(bad)
cmp
mov
xchg
cmp
adc
xor
mov
(bad)
push
xor
sbb
or
push
mov
push
pop
into
pmaxsw
inc
pop
loopne
ret
out
pop
lods
in
leave
xchg
ret
xor
stos
jmp
xor
and
(bad)
(bad)
shr
(bad)
sbb
xor
and
sub
xchg
adc
and
push
test
ins
fild
aaa
dec
movs
leave
gs
inc
test
dec
fcomip
mov
add
push
xor
daa
xchg
sub
or
addr16
add
dec
shr
fcomp
jbe
std
push
push
dec
ret
mov
add
mov
jmp
push
test
mov
stos
dec
jnp
jae
cli
push
ins
jle
cmc
lds
fdiv
ds
or
ret
scas
cli
mov
and
add
lds
jnp
in
push
fist
jmp
call
repnz
cmp
das
jb
cdq
jl
jge
sbb
cmp
sub
(bad)
icebp
movs
sbb
cld
fistp
or
mov
jne
sahf
add
inc
pop
dec
pop
sub
or
dec
cmps
dec
stc
nop
lods
stos
mov
in
jg
mov
pop
cwde
cwde
and
cmp
pop
push
fild
push
outs
mov
and
outs
jo
lea
sub
repz
in
out
adc
imul
push
jo
cmp
mov
shl
(bad)
push
enter
cmp
sub
jmp
(bad)
cdq
sub
mov
shl
jle
jno
xchg
stos
imul
push
into
push
dec
icebp
cmp
int3
stc
fs
stos
sub
pop
push
sub
out
test
pushf
movs
xor
sbb
dec
movs
sub
and
jns
(bad)
sbb
mov
test
test
es
xlat
jl
ss
repz
jns
cmp
jbe
mov
mov
stos
xchg
cmp
dec
push
test
mov
jnp
ret
js
push
ss
mov
cli
stos
sub
pop
leave
nop
sbb
test
or
mov
dec
daa
cwde
cld
pop
inc
xor
sbb
xchg
aad
inc
les
call
or
sbb
cwde
movs
sub
cmp
xchg
jnp
cmp
fstp
stos
add
and
call
jp
add
popa
xchg
xchg
movs
icebp
xor
clc
pop
ss
xchg
clc
mov
pop
lahf
xor
pop
std
mov
mov
cmp
mov
pop
pop
pusha
(bad)
cld
jne
and
daa
outs
loope
xor
dec
rcr
loopne
dec
jecxz
rcr
js
inc
cdq
push
call
retf
outs
cmp
adc
les
mov
pop
push
jmp
nop
rol
mov
icebp
cmp
out
fstp
outs
mov
jo
add
add
dec
dec
sub
xlat
mov
mov
sahf
dec
pop
xchg
outs
pushf
loop
xchg
sub
xor
push
cmp
pop
or
out
mov
scas
cmp
sti
pop
icebp
jmp
pusha
call
sub
and
pop
sub
cmp
push
fsubr
sbb
jg
mov
inc
es
out
jns
leave
adc
jns
sahf
stc
xor
pop
or
sub
pop
mov
stc
ins
mov
popf
loop
hlt
fld
bound
inc
push
xor
xchg
push
test
push
(bad)
and
shl
adc
inc
dec
std
jg
cmp
pop
mov
stos
stc
add
adc
xlat
xchg
mov
imul
add
or
xor
arpl
mov
xchg
push
inc
cld
fstp
sar
cdq
xchg
sti
dec
sub
mov
dec
jns
dec
std
outs
add
loop
cli
push
idiv
imul
movs
inc
cmps
ret
gs
or
sub
fstp
pop
sbb
xchg
adc
xlat
test
and
dec
js
cld
jge
dec
addr16
out
data16
push
imul
cmp
mov
mov
jae
test
pop
xlat
fsub
add
aaa
pop
(bad)
push
mov
and
pusha
outs
or
mov
dec
mov
jl
fsub
pop
icebp
dec
mov
(bad)
fsub
cdq
xrelease
aas
repz
and
inc
loopne
push
ja
aam
cs
mov
xchg
aas
mov
mov
cmp
dec
cmp
sub
sub
je
ins
mov
cmp
jnp
mov
les
scas
inc
push
cwde
xchg
addr16
jp
shr
pop
mov
push
call
retf
xchg
xor
je
int
xchg
xchg
sub
lods
gs
enter
out
xor
inc
icebp
lds
js
jnp
mov
cwde
push
pop
jae
push
jnp
test
sbb
xchg
jno
xor
pop
mov
mov
stc
(bad)
mov
ds
arpl
mov
popa
call
adc
inc
jmp
cmp
push
frstor
mov
mov
shr
call
xor
and
pop
push
dec
aaa
mov
cmps
enter
adc
in
aas
mov
and
outs
call
stc
or
sbb
cmp
ffree
sbb
in
ins
mov
cmps
sbb
nop
(bad)
sbb
mov
ficomp
cld
leave
jge
pop
(bad)
pop
lds
xchg
mov
int3
mov
xor
shl
aam
push
ins
adc
in
stos
stos
fwait
rcr
lods
cdq
pushf
mov
fmul
dec
jns
ret
icebp
sub
call
jp
mov
cld
(bad)
hlt
cmp
jns
iret
fstp
cmp
pop
and
add
cmps
call
(bad)
cmc
ror
adc
mov
add
not
jbe
in
out
(bad)
adc
dec
aaa
mov
scas
ins
lock
daa
arpl
out
jb
das
dec
xor
aad
sahf
dec
and
sbb
sar
mov
fcom
jns
out
xchg
pop
dec
test
fsub
scas
fistp
call
fstp
or
mov
icebp
push
sub
xchg
clc
mov
xor
xchg
bound
and
jle
addr16
pop
nop
lods
and
push
inc
sbb
pop
enter
lods
hlt
dec
pop
pop
lds
retf
ins
mov
dec
add
sbb
fcomp
xor
retf
dec
clc
bound
adc
push
jmp
fdivr
push
sbb
out
xchg
mov
xchg
(bad)
push
add
lea
aam
add
outs
fiadd
mov
ror
aas
jge
and
and
pushf
rcr
mov
mov
hlt
lods
dec
xchg
out
mov
push
mov
hlt
or
std
pop
and
jmp
int
push
call
pop
ja
jl
inc
shl
jno
data16
pop
iret
cmps
cmp
(bad)
sbb
inc
sbb
sbb
ins
addr16
(bad)
jnp
xor
icebp
cmp
sbb
inc
std
and
pop
cmp
ds
push
sti
cs
fist
loopne
jno
popf
cwde
push
jns
(bad)
mov
or
pop
clc
in
and
bound
loope
das
sub
pop
jbe
repz
mov
and
mov
cmp
mov
aad
repz
xchg
pop
add
aad
popf
mov
mov
sub
dec
sbb
movs
movs
ror
pop
(bad)
clc
clc
pop
lock
jb
mov
test
dec
sub
ins
out
aaa
jmp
mov
or
inc
add
cmps
outs
adc
aad
dec
movs
sub
jmp
daa
mov
sbb
inc
imul
ja
out
cmp
clc
push
adc
rol
loopne
xlat
ret
ss
fbstp
rol
xchg
mov
sbb
cld
fdiv
sub
inc
xchg
lds
(bad)
(bad)
push
shr
outs
popf
loopne
adc
mov
add
mov
(bad)
xchg
sti
leave
xor
xchg
out
fadd
inc
test
mov
(bad)
xchg
sti
retf
shl
add
xchg
imul
add
fsub
lods
cli
mov
sbb
adc
shl
clc
movs
xchg
clc
jb
inc
sbb
mov
add
repz
inc
xchg
or
cmp
cld
and
add
outs
leave
cmp
outs
ins
jmp
dec
hlt
pop
adc
xchg
mov
mov
jp
mov
pop
cmp
movs
mov
mov
pop
dec
loop
loopne
xchg
cmp
inc
mov
adc
std
sahf
fistp
mov
shl
pusha
mov
fcom
push
movs
in
(bad)
dec
and
test
sub
sbb
push
sbb
lds
jnp
mov
mov
inc
sbb
jge
xchg
icebp
lods
inc
adc
pop
xchg
mov
mov
mov
sar
mov
(bad)
xchg
(bad)
dec
xor
xor
daa
test
fs
and
stos
fild
xchg
push
pmaddwd
adc
add
enter
pop
and
std
in
fbstp
(bad)
pop
cld
std
scas
mov
fsub
pop
jl
int
fiadd
jb
sbb
stos
idiv
sbb
out
test
loopne
mov
jmp
jns
jnp
xor
mov
dec
cmp
fnstcw
jge
out
jecxz
shl
mov
jnp
movs
and
cs
inc
xlat
mov
push
das
lods
ret
xor
call
push
mov
fdivr
mov
gs
das
pop
out
cmp
push
out
and
ret
mul
mov
sub
(bad)
std
xor
out
adc
test
outs
test
add
mov
popf
push
jb
mov
sbb
(bad)
xchg
xor
cmc
sti
xor
jp
xor
jmp
out
dec
stos
push
fstp
sbb
hlt
ins
xor
inc
add
aas
mov
and
(bad)
or
inc
fstp
mov
xchg
jnp
mov
pop
in
jecxz
pusha
cli
fistp
(bad)
jg
fcom
inc
imul
jecxz
xor
jae
pop
adc
sub
ret
jg
xor
(bad)
div
cmp
leave
jg
enter
popf
add
xor
movs
xor
push
mov
xor
adc
dec
xor
cli
inc
mov
xlat
cwde
(bad)
adc
mov
push
outs
mov
xor
mov
sbb
shl
icebp
(bad)
dec
repnz
shr
mov
jl
out
adc
add
outs
repnz
aam
ins
inc
aad
sti
mov
adc
inc
lahf
cdq
imul
scas
push
mov
(bad)
mov
jne
adc
mov
iret
xor
fst
pop
jno
ins
push
dec
add
mov
int
rol
nop
jae
in
sti
mov
or
xchg
jle
loop
xchg
mov
inc
mov
scas
arpl
pop
jb
lods
stos
aam
into
cmc
xchg
and
or
mov
dec
pop
mov
add
mov
ins
aam
sbb
movs
jmp
mov
fsub
aad
loopne
xchg
outs
das
hlt
or
cld
cmp
fisttp
xchg
or
fsub
push
stos
inc
ficomp
sub
repnz
sbb
cli
push
fbld
clc
jne
sub
js
cwde
mov
sti
cmc
mov
sti
sbb
cmp
sub
dec
pushf
cmp
rol
retf
xchg
xor
inc
inc
mov
jge
outs
ret
fmul
push
dec
and
mov
in
adc
push
addr16
or
das
dec
(bad)
xchg
mov
cld
add
or
pop
cmp
mov
sbb
stos
mov
iret
inc
mov
pop
mov
xchg
xchg
rcl
add
pop
cmc
out
push
dec
adc
mov
jle
es
push
jp
pop
es
sbb
fmul
jecxz
pop
mov
inc
cwde
fdivr
sbb
retf
jbe
popf
xchg
push
scas
repz
pop
and
aam
sub
pusha
mov
out
cs
mov
ins
add
mov
dec
jbe
js
or
iret
push
push
in
mov
push
imul
mov
pushf
clc
mov
inc
(bad)
adc
imul
pop
jp
xchg
push
icebp
adc
mov
je
lahf
in
or
movs
js
mov
and
int
xor
andps
add
es
pop
js
push
xchg
test
lahf
adc
in
cs
cmps
(bad)
les
add
pop
fwait
sbb
mov
sbb
call
mov
adc
pop
mov
push
sbb
adc
xchg
add
sahf
dec
jns
dec
xor
test
sbb
cmc
pop
push
jo
dec
inc
sub
lds
mov
test
rcr
push
cs
pop
bsf
test
and
arpl
and
stc
mov
jle
pushf
jg
mov
push
iret
test
xchg
out
bnd
ins
inc
mov
mov
jp
mov
xor
pop
ja
sbb
fld
or
lea
mov
test
mov
das
repz
push
xor
lea
adc
fsub
in
ret
iret
mov
in
dec
loopne
je
push
je
or
sbb
mov
add
mov
mov
out
pop
dec
iret
jnp
push
jnp
gs
jmp
pusha
mov
ja
imul
add
mov
repz
retf
dec
push
pop
cmp
xor
(bad)
stc
push
cmps
fnsave
jl
mov
mov
arpl
pop
loop
rol
xor
cmp
xchg
jmp
pop
outs
repnz
hlt
lea
cmp
or
sar
pop
jns
mov
ins
push
sub
es
ins
jmp
test
pop
or
nop
dec
push
jg
test
fnsave
jge
cs
aam
es
shl
test
xor
and
mov
adc
mov
pop
scas
sub
mov
cmp
fwait
or
out
inc
outs
inc
push
test
loopne
jmp
xchg
pop
cmp
and
inc
dec
cli
push
push
mov
loope
adc
sub
xor
inc
adc
test
shl
jo
jmp
cwde
cmp
shr
fcmovu
stos
sub
jmp
cs
push
das
mov
mov
imul
loope
mov
inc
cmp
mov
dec
inc
jmp
pop
adc
cmp
shl
(bad)
not
cmps
mov
(bad)
fdiv
dec
cwde
xchg
call
loope
clc
int3
jbe
mov
test
dec
sub
pop
stc
fsubr
push
test
(bad)
jnp
aad
or
mov
jae
in
fld
aam
or
lahf
jb
jle
push
leave
adc
dec
aas
sbb
dec
imul
xor
mov
add
in
arpl
inc
mov
adc
js
adc
clc
lods
cmc
sub
pop
mov
lods
inc
out
pop
add
lods
arpl
ror
dec
mov
sub
int
fnstsw
cmps
retf
mov
mov
sub
sbb
mov
fnstcw
sub
je
int
sbb
lods
in
retf
es
or
int
mov
pop
dec
add
pop
das
mov
adc
out
test
xor
aas
mov
inc
pop
sbb
lea
inc
sbb
jo
mov
aas
jmp
lahf
cmps
(bad)
jl
push
cld
movs
dec
pop
sbb
jbe
ins
lds
jb
(bad)
ret
and
stc
pop
sar
call
pusha
mov
out
xor
sbb
fisub
(bad)
push
jp
adc
rcr
pop
or
fnstcw
pop
pop
push
fmul
adc
mov
xor
push
scas
out
shr
mov
imul
sbb
scas
xchg
dec
or
mov
jp
mov
repnz
out
jl
mov
xlat
adc
addr16
adc
call
xchg
mov
(bad)
sub
push
pushf
sbb
mov
in
mov
(bad)
in
mov
iret
(bad)
cmp
xchg
fcomp
cmp
xor
and
pop
push
std
js
call
sbb
push
xor
mov
add
repz
sub
sub
in
popa
test
retf
test
sbb
add
and
ret
fadd
out
pop
push
aad
fst
in
std
cld
add
popa
pop
mov
js
shl
jge
xchg
iret
iret
mov
add
(bad)
sbb
mov
pop
in
adc
ffreep
xor
stos
ja
mov
inc
push
xor
jmp
out
fsubp
sar
popf
loop
loope
pop
cmp
js
push
scas
fwait
cli
rcr
loop
outs
test
sbb
aad
adc
sahf
ror
loopne
(bad)
push
sti
pop
repz
and
pop
cmps
xchg
xchg
aam
lock
add
or
jb
mov
cmps
pop
mov
or
sub
add
daa
(bad)
push
ss
push
loopne
mov
sbb
fist
ja
pop
leave
mov
ds
aad
test
xor
jnp
pop
div
dec
jae
inc
xchg
leave
cmc
retf
in
mov
sti
mov
shl
lahf
int3
jbe
cmp
lahf
xor
adc
adc
mov
cli
nop
adc
sub
mov
sbb
sub
xor
dec
iret
cmp
mov
mov
push
rcl
mov
push
mov
inc
clc
mov
cwde
ins
cwde
fcmove
xor
cmps
mov
add
xchg
pop
les
push
lods
mov
pop
sbb
sub
sbb
mov
aad
aad
cmp
imul
and
int
mov
imul
mov
leave
fmul
mov
pushf
push
std
shr
jae
jae
loop
cwde
scas
sub
scas
mov
je
xchg
iret
loop
jmp
out
xchg
mov
push
inc
and
sbb
leave
sbb
xchg
push
add
jp
pop
dec
(bad)
pop
in
jmp
lods
arpl
into
push
push
in
std
test
test
mov
cli
push
inc
mov
pop
(bad)
fucomip
mov
push
gs
xchg
lods
repz
popf
inc
pop
mov
or
adc
call
mul
pop
int3
shl
stc
dec
out
sub
xor
add
pop
retf
sub
cmp
jnp
cmp
cdq
in
fisttp
and
repz
ds
ins
hlt
in
jmp
(bad)
sar
dec
xchg
jmp
push
in
jnp
pop
jmp
sahf
sbb
in
xchg
xor
push
lods
adc
adc
mov
in
xchg
pop
loopne
xchg
cdq
sub
in
mov
and
jne
pop
push
xchg
out
dec
xchg
pop
push
in
adc
enter
sbb
cdq
mov
(bad)
push
cmp
mov
mov
outs
inc
sbb
xchg
dec
hlt
mov
rcr
nop
mov
out
stos
mov
xor
jo
pop
(bad)
int3
mov
pop
or
sbb
dec
mov
or
mov
enter
arpl
imul
mov
push
mov
das
pop
push
pusha
add
cmps
or
push
push
es
xor
cs
push
xchg
mov
ror
mov
sbb
pop
ret
xchg
(bad)
cmp
pop
cmps
push
js
sub
pop
(bad)
icebp
outs
call
cvtpi2ps
dec
mov
rcr
rol
sub
add
mov
xchg
test
jmp
adc
push
imul
test
mov
sub
int3
xchg
stc
std
arpl
cmp
mov
(bad)
xor
call
nop
shl
inc
fist
icebp
iret
in
ds
mov
cmp
ins
sti
std
xchg
retf
push
fst
sub
push
jo
ror
lock
bound
leave
std
fisttp
jb
cmp
sbb
push
mov
push
stos
adc
jb
mov
sub
movs
jmp
leave
in
icebp
dec
xor
jno
aam
or
icebp
repnz
xor
cmps
xor
add
xor
mov
jb
popf
lds
(bad)
movs
stos
jg
pusha
jmp
dec
xchg
and
fs
sbb
neg
pop
push
sbb
int3
repnz
add
jp
imul
mov
test
push
retf
aad
jmp
mov
pop
in
pop
sbb
xor
scas
pop
adc
mov
lea
in
add
jmp
ins
mov
imul
in
adc
ja
fistp
add
mov
inc
call
hlt
imul
into
lods
stos
out
add
add
and
lahf
pop
or
push
lods
(bad)
xor
pop
shr
lgs
or
mov
aad
adc
and
std
jl
fisttp
aaa
arpl
jl
xor
pop
add
ficom
mov
sbb
pop
mov
mov
enter
retf
mov
jecxz
adc
imul
daa
or
int
rcr
adc
lock
popf
add
aas
shl
push
mov
jno
aam
or
push
repnz
inc
sbb
lods
test
daa
cwde
push
stos
cdq
int
stos
cmp
stos
out
and
sub
imul
icebp
mov
inc
adc
xor
sbb
mov
dec
aam
out
imul
call
fnstenv
loop
xchg
repnz
jbe
fadd
movs
inc
push
mov
mov
test
movs
js
sbb
test
add
retf
rcr
dec
stc
xor
call
pop
xchg
push
xor
es
push
xchg
iret
mov
mov
iret
cmc
outs
mov
scas
add
or
jb
cmc
movs
cdq
scas
or
inc
xchg
cmps
push
mov
in
pop
fbstp
adc
push
inc
cmc
mov
jmp
ret
xchg
cdq
setb
stos
loopne
ss
rcl
mov
or
test
sbb
fsub
jne
dec
nop
lock
out
mov
sub
inc
cmc
mov
mov
lea
adc
fimul
adc
icebp
mov
rcl
inc
mov
clc
inc
mov
pop
or
in
push
jae
mov
or
push
jnp
lock
movs
adc
sar
mov
jbe
push
add
xor
shr
test
cs
mov
mov
neg
in
push
xchg
dec
sbb
adc
cld
retf
stos
pop
dec
shr
mov
mov
inc
or
adc
mov
(bad)
sti
sahf
xchg
mov
xlat
push
mov
sub
fs
int3
and
enter
xchg
xor
xor
inc
cli
jmp
fild
jae
(bad)
pop
xchg
add
dec
push
sbb
mov
imul
sub
mov
sub
xchg
xor
mov
pop
cs
dec
xchg
xor
pushf
std
scas
icebp
inc
mov
cmps
push
push
ins
fcom
dec
popf
mov
pop
mov
shr
loopne
inc
xor
inc
popf
add
sub
pop
ficom
ins
cli
inc
adc
add
mov
je
adc
add
fndisi(8087
js
push
mov
test
call
lock
adc
inc
inc
dec
add
lock
or
rcl
sub
lds
mov
sub
popa
loopne
sub
adc
dec
gs
adc
add
xchg
dec
sub
xchg
(bad)
(bad)
pop
xor
pop
enter
jbe
pop
popf
mov
mov
lods
lahf
xlat
or
lahf
xor
bound
ret
inc
inc
cld
mov
daa
xchg
add
or
lock
jg
movs
int
sar
sbb
repnz
mov
inc
mov
jle
xchg
cmp
je
(bad)
xchg
or
mov
add
ret
in
int
sub
mov
repz
xor
sbb
add
int
adc
cmc
nop
shl
cli
test
or
ins
dec
rol
mov
mov
ret
mov
std
xchg
sub
pop
or
lods
das
repz
push
and
and
push
in
lahf
push
hlt
push
sub
bound
jg
mov
and
adc
fst
ins
test
es
push
or
outs
xchg
cmp
pop
mov
xchg
add
sbb
loop
mov
cmp
sar
inc
mov
fadd
imul
push
sti
sub
mov
loopne
push
jmp
mov
cmps
cmp
jbe
adc
outs
sub
dec
jmp
add
push
adc
mov
jmp
int3
mov
xlat
(bad)
test
jg
mov
or
in
xor
jecxz
rcr
lahf
jmp
mov
imul
or
(bad)
mov
daa
jp
sub
int3
movs
sbb
inc
dec
mov
and
mov
pop
inc
push
sub
xor
and
and
fistp
push
movs
(bad)
mov
cmc
dec
stos
into
cmp
xlat
jne
xlat
ds
aad
ss
mov
inc
pop
push
cdq
pop
cli
jne
mov
dec
push
addr16
sbb
cmp
repz
into
movs
pop
lds
lods
fsubr
sar
or
mov
pop
pop
iret
push
ins
je
mov
ins
fist
push
mov
sar
push
and
or
pop
shl
rol
stc
xchg
sbb
leave
and
pop
repnz
aam
cmp
stos
inc
dec
(bad)
push
mov
mov
dec
cmps
pop
pop
(bad)
dec
mov
push
inc
popa
push
and
pusha
rol
outs
add
sti
sbb
cmp
repz
hlt
dec
icebp
out
cmp
sub
aas
inc
pop
test
nop
cmps
popf
add
and
ficom
loopne
lds
fistp
mov
icebp
mov
dec
push
(bad)
loopne
in
adc
or
(bad)
loopne
push
cwde
sbb
push
stos
mov
lock
dec
jle
add
jge
clc
fs
enter
add
jge
jae
or
call
scas
int3
xor
mov
dec
rcr
icebp
push
add
mov
sub
movs
lock
jae
lods
xor
dec
inc
in
loope
and
jbe
adc
into
cmp
test
movs
cmp
sbb
into
retf
lds
ret
and
sbb
jns
sbb
pop
in
jg
jmp
push
call
cdq
aaa
aad
add
sub
jno
mov
into
dec
nop
mov
shl
cwde
inc
mov
mov
add
dec
dec
or
xchg
xchg
dec
stc
ins
cmps
mov
dec
sbb
jne
mov
pop
std
and
xchg
push
loop
jmp
sub
adc
fisttp
cmp
add
push
or
xor
out
idiv
jmp
sbb
aaa
cmp
and
rol
bound
inc
xchg
retf
(bad)
mov
xchg
jo
sub
ja
inc
pop
repz
xchg
dec
ret
stos
scas
mov
pop
and
test
ret
lds
push
in
je
clc
and
xchg
xor
fdiv
test
movs
push
push
mov
and
mov
call
inc
dec
adc
ss
movs
cld
adc
push
cmp
in
idiv
sub
mov
inc
dec
enter
adc
pop
mov
inc
sar
mov
pop
int
pop
or
sub
jne
xchg
aad
jg
dec
push
aaa
sbb
mov
out
retf
adc
xlat
dec
push
icebp
cmp
xchg
iret
(bad)
fidivr
or
das
mov
call
aad
pushf
popa
mov
daa
mov
jge
adc
sti
push
dec
out
mov
cmp
pop
movs
xor
mov
(bad)
gs
sub
vmwrite
pop
ror
call
(bad)
iret
cmp
fnstsw
mov
inc
inc
and
retf
into
add
inc
mov
jns
pop
fisttp
pop
sub
jo
xor
jae
into
sahf
pop
cmovp
push
sub
popf
jmp
mov
and
cli
int3
ins
leave
retf
fsub
jno
jge
rcl
out
cmps
inc
shl
mov
xchg
pop
scas
pushf
mov
stos
inc
cmp
int
ins
mov
mov
movs
ret
stos
fwait
add
jo
test
jg
add
aas
fadd
push
mov
fs
test
sbb
loop
jmp
call
inc
xchg
lods
xsaveopt
push
push
pop
nop
sbb
push
xchg
scas
fistp
pop
mov
mov
or
jbe
out
cmp
dec
push
or
mov
add
or
sbb
cmp
lds
push
push
daa
mov
sub
mov
daa
sbb
sub
mov
out
into
dec
cmp
movs
fst
leave
(bad)
cmc
mov
dec
inc
adc
cmp
add
repnz
out
gs
outs
rol
or
pop
bnd
mov
int3
(bad)
inc
(bad)
jns
in
sbb
xchg
pop
mov
shl
lods
and
add
pop
lahf
rcl
jnp
or
inc
mov
jnp
fidivr
pushf
push
cmps
add
clc
xor
mov
jnp
pushf
mov
mov
lods
loopne
sbb
add
jno
sub
fld
dec
inc
movhps
adc
adc
ja
pop
ret
ret
push
je
iret
sahf
mov
cmp
(bad)
push
movs
pop
popa
(bad)
push
jl
or
lods
dec
sahf
stos
or
jecxz
jge
mov
adc
enter
(bad)
out
inc
mov
pushf
adc
pop
mov
sub
mov
mov
jecxz
jp
std
lahf
mov
test
dec
(bad)
sbb
or
sub
fild
xchg
push
push
adc
pop
sbb
xchg
es
test
aam
pusha
les
out
ret
add
aad
xor
js
addr16
(bad)
aad
fwait
stc
scas
mov
repz
hlt
jns
cmp
jo
outs
sti
sbb
jae
mov
shl
dec
add
mov
loopne
pop
xlat
mov
aas
ds
(bad)
lods
xor
ret
dec
imul
sub
mov
xor
outs
pop
jg
out
cmp
xor
pop
(bad)
sti
cmp
retf
push
test
cld
add
cmp
ss
sub
out
rcr
xor
int3
scas
repnz
or
jne
test
pop
addr16
dec
pop
xchg
push
gs
int
pop
mov
xchg
push
cdq
and
data16
ret
cmps
sub
or
shl
adc
into
mov
pop
cwde
dec
in
daa
jno
out
jg
lods
xlat
sbb
call
adc
lock
mov
repz
fld
mov
test
mov
frstor
mov
popf
push
scas
mov
imul
mov
or
in
xchg
js
loope
mov
add
or
and
mov
push
enter
jle
(bad)
retf
push
lods
or
push
call
fstp
mov
push
jne
add
adc
sub
imul
push
mov
int3
or
inc
add
cwde
sbb
arpl
and
xor
gs
xor
cmp
and
sbb
jae
jo
mov
test
std
and
imul
add
outs
call
jb
pop
lea
ret
pop
test
ds
aad
push
stos
fwait
inc
and
mov
jbe
push
jmp
mov
fwait
xor
jbe
pop
out
fsubr
pop
inc
les
gs
pop
aas
or
aam
dec
das
mov
sti
sbb
je
push
js
pop
push
xchg
fs
fild
dec
sti
lods
loope
test
repz
imul
xchg
shl
mov
mov
adc
xchg
ffree
mov
mov
aaa
bnd
xor
inc
push
dec
mov
test
ret
cmp
xchg
mov
ret
push
mov
xor
inc
rol
or
jne
inc
js
cmp
dec
stos
push
jecxz
je
pusha
mov
sbb
xor
mov
call
(bad)
fidiv
mov
push
lds
push
test
jp
lahf
push
pop
dec
pop
(bad)
and
sub
ins
add
nop
add
inc
or
pusha
ds
push
pushf
std
and
jecxz
es
jae
cmps
(bad)
jmp
in
daa
fld
jecxz
in
bound
mov
fbstp
imul
mov
pop
scas
test
xor
jmp
dec
popf
inc
into
xor
arpl
ss
(bad)
adc
push
xor
mov
ins
popa
in
cmp
pop
add
adc
mov
ret
icebp
stos
cli
xor
xor
ins
xor
jne
xchg
mov
mov
sar
add
mov
xchg
call
in
adc
dec
mov
out
mov
push
lock
adc
cmc
data16
pushf
xor
std
mov
inc
std
retf
loopne
daa
aad
dec
mov
pop
adc
dec
dec
sbb
outs
pushf
xor
mov
pop
push
in
mov
std
out
add
mov
out
rcr
cmp
call
mov
das
mov
jl
stc
out
in
add
add
ins
retf
lods
fs
jne
inc
sahf
inc
sbb
dec
pop
mov
pop
adc
hlt
mov
gs
imul
test
push
pop
cwde
rol
or
fld
push
cmp
pop
adc
push
pusha
jnp
mov
rcl
pop
loopne
cs
enter
movs
inc
and
fucom
inc
aam
retf
push
push
es
mov
cs
jp
xchg
sar
sbb
or
imul
jg
pop
repnz
cmp
stos
sub
jnp
arpl
mov
mov
(bad)
(bad)
jmp
fidivr
jp
sub
test
xlat
push
mov
push
aam
mov
xchg
pop
mov
and
push
cmp
pop
popf
lds
sbb
loopne
retf
jge
push
cs
cmp
push
sbb
jl
xor
les
sub
lods
push
add
aad
dec
lahf
das
and
lahf
sub
jb
rcl
adc
ds
cmp
sub
hlt
popf
rcl
mov
sar
add
cs
fdivr
iret
push
lods
push
jb
pop
nop
push
dec
inc
and
or
sbb
mov
stos
retf
popa
add
xchg
data16
xor
out
fisttp
push
xlat
hlt
sub
mov
aad
into
and
lea
mov
mov
mov
lock
(bad)
outs
mov
mul
sti
das
add
mov
mov
out
call
xor
pop
retf
xlat
(bad)
test
scas
cmc
inc
rcr
outs
(bad)
xor
xchg
ins
push
xchg
out
push
cmps
sbb
sub
cli
js
lods
mov
and
call
dec
inc
test
cmp
mov
es
loop
lea
iret
sahf
out
push
pop
push
fs
(bad)
imul
cmp
xlat
ins
stos
sti
push
or
mov
adc
jg
cmp
jg
in
retf
loopne
dec
stc
cmp
arpl
inc
out
xor
aam
push
retf
sub
jae
xchg
push
jecxz
clc
xor
sbb
lds
mov
sbb
add
add
xor
add
cs
and
dec
(bad)
out
and
mov
pop
sub
movs
xchg
xchg
xchg
inc
xor
(bad)
call
jmp
cmp
sub
sub
xor
adc
xchg
icebp
cmp
adc
in
adc
repnz
je
in
dec
(bad)
or
dec
inc
sub
imul
sti
int3
out
pop
dec
pusha
loop
mov
xchg
push
push
int
pop
retf
pop
cdq
jns
cmps
gs
sub
out
xor
loopne
push
lods
xchg
cmps
je
push
loopne
push
sbb
movhps
(bad)
push
(bad)
sahf
(bad)
and
pushf
jno
and
(bad)
adc
cmps
addr16
dec
or
pop
sbb
(bad)
ds
push
xor
inc
jge
pop
(bad)
jmp
lods
in
addr16
fs
push
mov
cmps
mov
fisttp
scas
movs
adc
or
aaa
mov
xor
pop
test
icebp
aam
cmp
cmp
push
mov
cmps
and
sub
mov
mov
movs
dec
call
mov
rcr
push
sub
fcmovnbe
mov
sbb
jle
imul
or
jge
xlat
xchg
test
sub
loope
int3
mov
movs
je
pop
xchg
xor
adc
scas
or
fcom
and
or
pop
mov
cwde
adc
sti
cmp
mov
inc
xlat
(bad)
mov
iret
pop
xor
ss
inc
sbb
push
xchg
or
xchg
(bad)
dec
mov
cmps
jecxz
ror
and
aad
out
and
retf
sbb
or
inc
popf
pop
lahf
lods
imul
popf
shl
adc
cmp
ja
sbb
adc
xchg
cmp
and
les
xor
pushw
dec
sub
adc
or
cdq
mov
or
ja
push
aaa
push
int
str
lahf
(bad)
in
cs
pop
(bad)
push
cmp
adc
cmp
ja
dec
cwde
nop
lds
xor
test
mov
xchg
push
push
imul
dec
xor
inc
outs
dec
xor
or
cmp
mov
retf
je
dec
mov
push
mov
xchg
dec
cmp
cli
(bad)
and
lods
cmps
xchg
pop
adc
mov
or
icebp
add
push
sub
adc
jle
lock
mov
aas
cdq
in
cmc
xor
ins
pop
add
push
ret
or
mov
ss
lods
ja
in
neg
cmps
or
xchg
addr16
std
popf
addr16
adc
adc
mov
pop
mov
push
fmul
ret
pop
pop
sub
je
aas
pop
mov
mov
inc
lods
cs
adc
popf
push
cmp
sub
mov
lods
fimul
dec
dec
scas
jg
push
imul
dec
lods
push
shr
push
jp
adc
sbb
mov
out
push
(bad)
lods
jnp
lds
js
pop
and
jge
sbb
adc
jb
or
add
aam
cmp
xchg
out
enter
inc
xchg
cmp
aad
push
aad
mov
adc
enter
lahf
test
jge
adc
cmp
jno
mov
movs
jbe
jno
adc
adc
pop
cs
cld
dec
jecxz
sbb
sbb
fisttp
dec
loope
sbb
mov
adc
pop
cmc
xor
mov
lods
jl
imul
stos
fmul
mov
popa
mov
stos
adc
sbb
cmp
and
idiv
jb
iret
pusha
cmc
fild
test
(bad)
imul
cli
cmp
jae
push
lods
sub
sahf
inc
add
adc
mov
cli
push
repnz
popa
mov
sbb
sbb
sub
sub
xor
repnz
jbe
xlat
mov
mov
out
push
lahf
push
repz
aas
and
sahf
pop
jb
xchg
leave
enter
bound
sahf
xlat
std
mov
mov
das
jge
leave
jmp
cli
pop
cdq
push
aas
xchg
adc
movs
mov
jne
pushf
mov
pop
or
sbb
shr
mov
nop
and
loopne
adc
stos
bound
fs
push
xlat
nop
add
arpl
push
push
mov
inc
or
mov
inc
cmp
xor
in
pop
mov
sahf
cmp
jo
jbe
xor
out
dec
(bad)
loope
xchg
lods
and
inc
jns
fnstenv
push
rcl
xchg
or
cmps
sbb
inc
les
cmc
in
daa
adc
push
xchg
jecxz
push
or
pusha
loopne
jmp
pop
push
test
jb
(bad)
push
shl
test
inc
loope
(bad)
jnp
or
leave
fwait
mov
pop
outs
inc
popa
sub
cmp
add
xchg
mov
hlt
ffree
push
push
into
test
push
dec
pop
lods
leave
mov
pop
loop
inc
adc
jp
(bad)
mov
add
xchg
push
retf
std
dec
call
dec
idiv
cdq
push
ss
outs
jb
neg
fisttp
outs
ins
(bad)
test
bound
xchg
mov
nop
mov
sub
cmp
or
push
pop
ret
fld
cld
pop
rcr
rol
push
outs
idiv
mov
mov
add
out
ss
(bad)
jecxz
gs
push
jge
in
ficomp
test
mov
mov
sbb
push
jb
data16
jo
data16
dec
mov
dec
sbb
mov
bound
dec
xchg
mov
adc
fst
shl
sti
xor
les
bound
lods
rcl
into
adc
sub
test
push
xchg
dec
out
cld
push
and
mov
int3
or
adc
in
ds
lock
vprotq
fdivr
ins
mov
mov
inc
sbb
cmp
into
outs
repnz
mov
xchg
push
push
sub
(bad)
lahf
lods
push
ds
imul
aad
mov
jp
fbld
aam
lea
aam
rcr
or
inc
dec
push
dec
(bad)
mov
sub
test
adc
cmp
mov
test
in
xor
inc
pop
mov
xor
popf
adc
jno
sbb
jbe
and
shl
sub
iret
neg
add
test
mov
hlt
xchg
aad
sahf
inc
ins
cmp
fdivr
je
dec
fcom
test
cmps
sub
mul
ja
pop
mov
inc
inc
xor
imul
ja
ds
aad
inc
test
and
push
mov
pop
mov
lods
or
sbb
dec
and
mov
pop
ret
cmp
lods
push
cmps
or
imul
cmp
sub
ss
dec
int
jnp
cs
push
call
dec
add
cs
cmp
jnp
pop
sbb
pushf
sbb
into
popf
fimul
mov
inc
repnz
pop
retf
stc
out
mov
push
push
aam
pcmpeqd
pop
adc
imul
in
mov
scas
and
sbb
inc
sub
pop
sar
imul
js
out
out
into
push
sbb
outs
popa
mov
jbe
(bad)
jle
push
mov
inc
pushf
scas
imul
shl
repnz
in
fmul
xchg
in
pop
aad
xlat
jmp
dec
pusha
sahf
leavew
mov
nop
xchg
(bad)
pushf
or
adc
sbb
(bad)
xchg
pusha
and
movs
aam
movs
jb
fwait
mov
xor
cwde
adc
lods
addr16
and
jp
into
jnp
jne
inc
cwde
retf
retf
data16
adc
jp
mov
test
and
(bad)
fild
cmp
leave
sbb
pop
daa
jno
leave
ins
aaa
lds
cmps
test
in
cvtdq2ps
fstp
lods
or
cmc
jge
dec
jmp
ja
xchg
pop
mov
jnp
pop
stc
pusha
inc
pop
jb
or
clc
cwde
push
jge
mov
ja
sub
adc
xlat
push
or
shr
ret
invlpg
dec
xchg
(bad)
and
dec
sbb
call
loop
ins
sub
dec
lds
mov
xor
mov
xchg
inc
xchg
clc
cs
mul
daa
cs
stos
sahf
pushf
or
push
sub
pop
mov
(bad)
push
mov
push
pop
int
frstor
rcr
in
mov
push
mov
dec
sbb
aaa
sbb
mov
cmp
mov
pop
out
xor
movs
jae
mov
rol
sub
into
pop
or
popf
fwait
repnz
mov
fbstp
int3
mov
push
fwait
add
push
arpl
inc
dec
test
test
mov
add
cmc
jge
cli
fwait
(bad)
push
jle
xchg
(bad)
iret
inc
dec
mov
mov
pop
mov
dec
push
dec
xchg
ds
movs
leave
xor
daa
fmul
(bad)
stc
std
pop
inc
dec
cli
into
xor
scas
adc
push
mov
adc
in
add
push
stos
adc
sub
ret
sub
pop
mov
jae
(bad)
loopne
pop
cmp
mov
xchg
mov
je
jo
cmc
xlat
jmp
(bad)
out
xlat
push
push
mov
cmps
cdq
pop
aad
dec
inc
add
repz
test
in
in
loope
ficomp
fmul
pop
xor
stos
pop
mov
pop
or
sahf
xchg
push
test
dec
cmp
ret
or
pusha
push
js
inc
fbld
jae
push
xor
mov
push
mov
mov
cld
retf
xchg
dec
mov
jmp
mov
out
cmp
fs
into
jo
cmp
pop
and
or
bound
inc
mov
out
test
in
xchg
cmp
stc
xor
mov
inc
jl
dec
(bad)
mov
sub
pop
and
bound
fistp
arpl
loope
pushf
pop
(bad)
jle
lock
cwde
mov
aas
pop
fucom
aad
add
mov
jns
fsub
mov
jle
iret
jle
add
xor
std
adc
add
mov
jecxz
int
mov
test
cmps
push
cmps
xchg
jnp
les
in
xor
sahf
add
ss
(bad)
xor
jp
or
repz
xchg
arpl
aad
int3
pop
int3
gs
sbb
xor
mov
xchg
pushf
leave
mov
jp
rcr
or
ss
push
movs
mov
leave
test
push
aaa
sub
sbb
mov
repz
shrd
sbb
dec
inc
or
xor
mov
mov
(bad)
loopne
retf
cmp
ja
xchg
fstp
add
jmp
fcom
(bad)
xchg
mov
xor
sbb
sbb
push
retf
scas
test
gs
or
dec
and
pop
sub
enter
mov
or
mov
test
push
sete
movs
xor
cmp
push
push
ss
out
add
jo
sbb
push
idiv
dec
pop
aam
in
clc
call
pop
scas
in
cmp
xor
adc
jbe
cmp
pop
inc
dec
out
test
push
jnp
inc
stc
xchg
ret
cs
rcl
cmp
xchg
xchg
adc
ret
push
popa
out
xor
push
xor
inc
popf
mov
fcom
lds
pushf
bound
hlt
mov
das
add
enter
mov
jmp
repnz
gs
imul
add
into
or
pop
nop
ja
rol
outs
push
cld
xor
dec
cmpps
imul
scas
sti
repz
in
enter
jmp
fmul
mov
adc
imul
cwde
out
xor
push
lahf
or
pop
int
test
mov
jno
xlat
int3
mov
es
mov
inc
and
cmps
loop
in
in
xor
pop
rcr
push
jmp
sub
xor
nop
cdq
lods
jecxz
cmp
std
fsub
fidiv
ror
push
in
dec
jns
xchg
mov
shl
jle
cdq
jbe
jmp
pop
aaa
popf
inc
mov
pop
jbe
movs
stos
jb
mov
aas
test
mov
sub
push
(bad)
xchg
dec
imul
and
jb
cmp
xor
mov
jns
adc
pop
addr16
mov
in
fadd
jmp
and
push
enter
(bad)
mov
or
push
popa
push
clc
pushf
repz
popf
xor
cmps
iret
pop
fdiv
sub
mov
cmps
mov
cli
push
nop
lea
jno
adc
push
cld
into
mov
ds
pop
jp
retf
pop
mov
xchg
jbe
and
push
mov
jg
cmp
loopne
sbb
mov
cmps
sbb
pop
inc
clc
dec
push
dec
sahf
inc
(bad)
fimul
sbb
sahf
fs
mov
push
dec
loop
pop
push
mov
(bad)
mov
jns
mov
(bad)
xchg
pop
xchg
mov
push
jmp
sti
dec
sbb
neg
ret
add
adc
push
outs
fimul
pop
xchg
inc
add
sbb
fstp
ficomp
maskmovq
test
(bad)
ror
sti
lock
enter
fdivr
aam
cdq
dec
mov
add
sub
xor
nop
call
push
or
test
loop
pop
lods
or
mov
mov
mov
pusha
and
aam
mov
test
stc
jne
inc
mov
ret
fiadd
jle
cmp
pop
sub
les
cdq
adc
in
cmp
jns
pop
int3
test
cmovg
mov
aas
mov
fwait
push
scas
push
jg
outs
xor
add
push
pop
dec
cmp
mov
shl
xchg
ja
ret
out
xchg
jo
adc
pushf
push
fisubr
retf
xchg
sub
fist
sbb
mov
in
sti
(bad)
shl
movs
push
mov
push
cmps
dec
mov
inc
jnp
xchg
mov
hlt
imul
jmp
gs
jne
(bad)
jo
sub
adc
add
mov
imul
shl
xor
lods
loope
out
jo
repnz
hlt
cmp
dec
push
fbstp
push
sub
int
dec
xchg
or
push
mov
addr16
push
daa
dec
bound
(bad)
js
int3
arpl
addr16
mov
leave
into
inc
movs
or
pop
test
sahf
inc
cs
scas
fild
mov
inc
sbb
int
jecxz
(bad)
aam
leave
sbb
ret
adc
cmp
sub
dec
shl
inc
in
xor
pop
push
jo
(bad)
cmp
adc
mov
es
clc
inc
cmp
mov
mov
cmp
jns
add
fcmovu
pcmpgtb
add
rcr
or
aam
adc
loop
es
sub
and
jae
inc
sub
fsubr
mov
fistp
(bad)
bound
mov
(bad)
mov
sub
out
push
out
mov
dec
clc
rol
mov
gs
loop
cli
idiv
jnp
out
fsubr
xor
bound
jne
mov
and
mov
inc
ret
dec
lods
retf
sti
and
cmp
jae
test
push
out
(bad)
(bad)
das
in
add
test
out
xchg
pop
outs
or
fdivr
out
test
gs
fld
repz
js
mov
ja
mov
sahf
mov
xchg
mov
mov
xchg
sar
inc
int
and
mov
arpl
in
add
jo
xchg
push
jl
mov
das
fld
shl
retf
xor
jle
xchg
mov
lods
(bad)
in
repz
or
loopne
nop
inc
fcmovne
jl
xor
pop
push
fnstcw
(bad)
xchg
icebp
lods
js
jge
mov
shr
retf
lahf
xor
fwait
cmp
adc
rol
hlt
sar
bound
xor
dec
popf
gs
lods
pop
push
mov
call
cmc
pop
cmp
dec
pushf
adc
in
push
pop
lock
jae
or
daa
xchg
mov
out
mov
xor
lods
sub
ins
out
iret
stos
out
scas
(bad)
cmp
arpl
xlat
(bad)
add
cld
nop
outs
out
xchg
sbb
push
mov
push
scas
push
neg
div
jle
xchg
int
mov
or
fcom
cmc
es
(bad)
adc
jns
cmp
adc
add
xor
dec
inc
add
in
push
cdq
fstp
std
inc
xor
stc
and
rol
push
sahf
in
jno
push
sar
std
imul
add
cmps
pop
mov
sbb
xchg
ret
jecxz
xchg
in
jbe
(bad)
adc
fild
pop
adc
(bad)
inc
xor
mov
and
out
add
pop
inc
xchg
push
mov
call
ins
xchg
data16
(bad)
mov
cdq
arpl
iret
mov
ret
add
test
shl
sahf
jmp
loop
or
pop
sub
daa
cmp
mov
ret
pop
jl
aad
inc
pop
inc
scas
xor
mov
mov
and
mov
(bad)
in
pusha
xchg
jg
cdq
pmulhuw
sti
add
outs
test
sar
jmp
call
data16
call
jle
rcr
jmp
leave
mov
jb
xor
xchg
mov
retfw
std
pop
cmp
pop
pop
int
int
inc
xor
shl
push
repnz
lahf
xor
es
jle
jg
mov
ja
test
in
sahf
push
push
ss
stos
jns
std
mov
adc
jb
sahf
xchg
cmp
jmp
and
popa
cmp
nop
pop
inc
push
add
arpl
aaa
add
fsub
fmul
push
imul
pop
pusha
ds
push
gs
test
xchg
adc
jae
test
xchg
je
(bad)
mov
and
sti
aaa
adc
jo
dec
dec
dec
cmp
test
adc
out
inc
outs
scas
add
fist
mov
push
dec
mov
inc
sbb
stc
jne
sbb
add
adc
jecxz
iret
lock
aad
gs
mov
mov
add
push
iret
push
adc
out
std
jmp
inc
push
jmp
xchg
xchg
not
cwde
ja
mov
or
add
mov
inc
outs
jne
retf
int
sub
les
xchg
or
sbb
mov
mov
and
(bad)
call
imul
dec
repnz
mov
push
call
inc
ficom
out
movs
cmp
ret
(bad)
push
leave
pop
xchg
addr16
js
ret
push
imul
sub
ss
jno
aaa
in
pop
loopne
mov
mov
jge
lock
pop
idiv
cs
sub
je
push
jg
outs
jecxz
ret
jp
cmp
jns
call
adc
xchg
ins
mov
cld
outs
cmc
scas
scas
xor
aad
jmp
lods
rcr
mov
push
loopne
out
xchg
push
jns
jmp
retf
xor
fwait
sub
rol
test
aas
rcl
xchg
fcomp
in
push
inc
popf
js
out
scas
push
and
and
or
(bad)
lods
test
(bad)
adc
sbb
ins
shl
addr16
out
mov
mov
dec
jae
mov
dec
xor
xchg
cmps
inc
add
pusha
sbb
sbb
mov
retf
mov
jnp
data16
add
cmp
cmps
leave
into
(bad)
loopne
ror
pop
add
mov
cdq
xchg
or
(bad)
jp
daa
add
dec
xor
cmp
ja
lahf
add
mov
dec
mov
stc
cmp
sub
cmc
push
inc
add
mov
cld
push
pop
aam
dec
add
dec
cli
inc
mov
in
mov
jecxz
inc
test
add
ins
inc
jnp
sbb
stos
add
std
cmp
xchg
in
aad
(bad)
mov
jg
ins
aas
fld
cwde
mov
hlt
xor
cs
mov
(bad)
mov
in
adc
imul
mov
(bad)
out
push
sbb
repnz
sti
mov
scas
pop
inc
retf
outs
out
push
js
or
sahf
pop
xor
jg
xor
jmp
xor
packssdw
nop
and
xor
repnz
or
ret
hlt
dec
pop
lods
dec
xor
dec
ja
popf
xchg
sub
retf
fcomp
add
cdq
test
xchg
mov
rcl
adc
push
rcr
aam
mov
cmps
lods
and
dec
sub
xor
paddd
or
test
ds
int3
loope
fbstp
sub
add
jnp
push
add
add
mov
cmp
xchg
jno
cmp
popf
push
loopne
pop
xor
ins
mov
aaa
rcr
xchg
xchg
out
outs
push
out
add
push
scas
mov
outs
ins
retf
ins
push
(bad)
xor
(bad)
fild
test
inc
clc
pushf
jg
dec
pop
movs
retf
ins
fmul
dec
ret
das
adc
imul
ret
pop
sub
jno
sbb
mov
out
retf
stc
and
lahf
xor
iret
lods
pop
jg
aas
jnp
jno
dec
push
sub
popf
jbe
push
nop
mov
xchg
and
sub
push
hlt
mov
mov
cmp
or
into
xchg
inc
ja
test
test
aam
mov
jp
mov
inc
sbb
sbb
mov
jl
and
call
test
xor
pop
dec
mov
pop
inc
pop
fisub
jne
out
loope
mov
lea
movs
dec
(bad)
mov
dec
in
xchg
cmps
fnstsw
lock
mov
int3
test
dec
dec
stos
jne
lock
sets
test
out
aad
arpl
inc
pop
add
cmps
aas
clc
into
sti
lods
mov
dec
in
call
ror
mov
ret
(bad)
loop
fs
dec
mov
and
dec
les
ss
rcr
das
and
lods
fcom
mov
or
xor
mov
xchg
sub
add
sbb
aad
push
xlat
adc
mov
and
daa
cld
ins
pop
inc
popf
adc
push
push
ret
(bad)
adc
push
or
add
mov
sub
sahf
dec
ficomp
add
leave
cs
jo
pop
sbb
adc
sub
call
ficomp
in
and
dec
or
jmp
mov
test
or
xchg
in
mov
cld
push
dec
(bad)
(bad)
test
inc
scas
mov
popf
mov
movs
push
idiv
adc
sar
(bad)
idiv
mov
adc
adc
cmp
push
and
into
ins
(bad)
or
(bad)
test
cmps
stos
cli
jnp
mov
mov
xor
dec
add
fld
dec
cld
sbb
adc
popa
xor
xor
jg
xchg
sub
popf
mov
cmp
pop
ins
sbb
jmp
and
jmp
and
lock
fadd
es
add
(bad)
aam
sar
shl
sbb
sbb
scas
ret
dec
sub
ret
movs
fcmovnbe
pop
jmp
icebp
fisttp
retf
sahf
xchg
les
lds
icebp
pop
std
sbb
call
fidiv
sbb
rcl
xor
mov
cmps
or
and
xchg
setl
es
xor
or
pop
lea
stos
dec
jmp
dec
sub
and
popf
and
ds
outs
or
jmp
xchg
mov
sub
mov
mov
push
xor
or
in
jb
rcl
loopne
ret
leave
mul
movs
movs
(bad)
(bad)
ficomp
fsubp
ja
push
outs
push
or
bound
dec
inc
ja
sub
push
cmp
out
cld
sbb
dec
ins
xchg
cmp
adc
cmp
jecxz
call
arpl
neg
ins
ret
sbb
xor
loop
es
stc
push
in
or
ror
xchg
or
lock
jno
pop
fwait
jmp
dec
test
ret
ror
or
repz
jmp
mov
mov
sahf
pop
mov
mov
nop
cmp
hlt
adc
popf
pop
icebp
inc
inc
push
arpl
lods
fisubr
sbb
pusha
sahf
mov
jp
inc
ja
cmp
dec
dec
shl
outs
pop
push
sahf
out
test
leave
adc
in
sar
mov
pop
xor
mov
mov
add
jecxz
aam
sub
stc
or
cmp
bound
(bad)
dec
repnz
ja
test
mov
cmps
inc
fisttp
mov
cmp
sub
imul
mov
and
aam
or
fwait
mov
push
sub
add
sbb
stc
stos
sti
push
sub
inc
jecxz
xchg
(bad)
(bad)
adc
cli
or
inc
loop
idiv
xor
xor
loop
sbb
out
sub
pop
adc
addr16
mov
or
out
and
test
cmps
adc
retf
hlt
std
in
jmp
lahf
cdq
push
imul
add
stc
fmul
adc
pop
ss
mov
push
adc
hlt
fdiv
jb
cmp
push
fistp
or
sbb
pop
xor
(bad)
fwait
hlt
aam
popf
add
mov
mov
pop
push
daa
(bad)
loop
fnstcw
cmps
mov
pop
adc
xor
in
and
inc
cmp
mov
pop
popa
inc
push
xor
add
push
xchg
xchg
movs
pop
mov
add
cmps
cmc
cmp
mov
popf
fwait
les
jmp
dec
xchg
xchg
scas
aaa
sbb
push
xchg
fmul
dec
push
fisubr
(bad)
cmp
dec
clc
mov
movs
or
fcomi
out
mov
inc
mov
imul
mov
mov
nop
add
repz
mov
xor
(bad)
arpl
sub
adc
les
daa
aad
enter
add
dec
mov
retf
jl
lods
mov
imul
es
jnp
push
mov
rol
scas
inc
xchg
mov
inc
mov
add
(bad)
push
mov
neg
lahf
shl
rcl
mov
cwde
in
xor
mov
cmp
(bad)
pop
repz
mov
mov
nop
sbb
sub
jo
pop
gs
retf
sahf
shr
aad
(bad)
lods
popf
jmp
mov
js
gs
test
shl
gs
pmullw
sbb
fwait
(bad)
jns
data16
mov
xchg
push
add
call
stc
jo
call
sbb
les
stos
arpl
cmp
sti
and
xor
adc
xlat
jecxz
sahf
add
sar
enter
dec
pop
cmps
xchg
mov
push
jo
aad
fnstenv
cmp
rol
rcr
mov
fist
(bad)
adc
in
stos
push
fisub
mov
in
xor
enter
shr
cmp
ins
xchg
test
outs
inc
mov
push
ins
fist
dec
or
stos
cmc
inc
ja
mov
xor
mov
call
in
repnz
clc
add
jns
cmp
adc
cmps
inc
scas
test
sbb
movs
jne
push
lock
or
fnstcw
js
sbb
(bad)
fst
adc
dec
clc
ins
je
mov
lock
jle
cwde
jo
adc
adc
dec
(bad)
jne
ins
ror
pop
ret
adc
imul
sub
push
xchg
cdq
in
es
or
pop
mov
scas
inc
adc
retf
mov
mov
sbb
mov
scas
pop
pop
jle
rol
adc
mov
push
dec
test
repz
jecxz
push
add
jns
xor
mov
lahf
sar
jb
mov
shl
dec
movs
dec
(bad)
std
mov
cmp
in
pop
mov
cmc
pop
or
sbb
test
xchg
or
push
lods
add
outs
cmc
mov
push
mov
pop
xlat
dec
popa
retf
cmc
clc
hlt
loop
sbb
cwde
out
pop
shl
rol
ins
lods
test
aad
add
cmp
movlps
popa
xchg
adc
pop
dec
out
(bad)
jno
mov
adc
push
pop
push
cld
xor
push
sub
cmps
call
mov
jb
aaa
sub
int3
xrelease
jae
push
adc
inc
mov
ja
mov
mov
in
movs
ins
mov
fwait
cmp
adc
rol
repnz
jmp
mov
mov
mov
pop
pop
xor
test
sbb
enter
dec
aad
dec
xchg
or
dec
sar
icebp
rcr
jmp
outs
inc
jmp
addr16
rcl
xor
les
sbb
jle
hlt
pop
inc
in
xchg
popa
fsubr
repnz
stc
or
mov
fistp
xchg
faddp
pop
(bad)
fidiv
out
mov
adc
push
xchg
ret
popf
push
retf
outs
lods
bound
fsubrp
fmulp
pop
mov
aam
dec
xor
inc
retf
jmp
gs
cmp
lahf
cmps
test
or
ins
xchg
ins
pop
pop
jecxz
in
mov
mov
mov
mov
adc
in
mov
jb
aas
sbb
and
shl
jmp
cmp
sub
mov
mov
inc
mov
or
mov
cs
fs
mov
iret
ficomp
pop
mov
retf
out
rcr
js
mov
sub
sbb
mov
add
cs
fmul
aaa
sbb
mov
cwde
(bad)
movs
push
xor
jns
movs
(bad)
ss
pop
mov
js
adc
retf
and
xchg
mov
add
jns
xchg
cmc
cli
mov
jns
outs
cmp
inc
lds
jle
jge
push
mov
jp
mov
push
fsub
mov
jae
ror
rol
lods
xor
imul
jg
pushf
loope
mov
ja
gs
call
fwait
arpl
out
sbb
fidivr
loopne
mov
jmp
aad
in
push
shl
cmp
div
xor
sub
or
les
dec
push
adc
or
pop
ret
inc
sbb
mov
or
pavgb
sbb
jp
mov
pop
fidiv
outs
pop
aam
imul
inc
or
aam
loop
sbb
push
pop
jge
out
push
pusha
psrld
or
jp
mov
pop
rcl
nop
jmp
mov
dec
mov
sbb
push
ins
mov
rcr
(bad)
xchg
std
outs
mov
inc
mov
and
xor
fst
cwde
push
push
hlt
idiv
jae
pop
loope
or
in
lea
cmps
mov
pushf
inc
mov
leave
stc
adc
mov
inc
fcom
cmp
mov
jp
pusha
add
inc
mov
gs
push
push
fsub
cmp
pop
arpl
rol
xchg
xor
in
test
dec
clc
mov
push
lods
and
push
repnz
imul
mov
add
sub
sub
xchg
push
cmp
outs
imul
mov
repnz
jb
sbb
push
jecxz
rcr
mov
fstp
push
sub
sbb
and
jo
lds
sbb
ja
std
jecxz
xchg
retf
dec
test
dec
out
cmp
xor
pop
mov
ins
mov
or
cmps
retf
std
je
lock
retf
addr16
sbb
cmps
dec
pop
prefetch
(bad)
pop
sub
stos
jne
in
sbb
sti
inc
pop
or
cmp
(bad)
lock
aam
call
mov
in
out
call
jl
mov
and
mov
arpl
mov
jne
outs
imul
push
movs
pop
mov
adc
cld
out
dec
into
ins
test
adc
loopne
xchg
jg
adc
popf
jae
push
in
pop
fisub
jge
mov
and
fwait
mov
int3
and
fistp
into
xchg
cs
sub
mov
jle
jb
int3
into
mov
(bad)
xor
shl
les
mov
scas
fimul
popa
repz
mov
mov
cdq
mov
cs
adc
rcl
jecxz
jmp
pop
inc
adc
xchg
or
add
adc
dec
dec
jp
es
movs
shl
jb
repnz
inc
movs
jnp
aaa
or
call
mov
sub
arpl
aam
aad
stc
sbb
test
test
pushf
adc
adc
pusha
cld
(bad)
sbb
pop
or
xchg
mov
pusha
out
jle
dec
inc
daa
enter
aam
in
pushf
mov
xchg
and
dec
cmp
sub
shl
fadd
dec
fwait
int3
arpl
bnd
out
dec
repnz
add
fstp
test
ret
mov
push
jg
pop
or
mov
push
pop
out
shl
mov
out
clc
dec
ins
pop
cmp
push
xchg
or
(bad)
int
mov
test
dec
test
fcomp
wbinvd
std
add
mov
sub
push
or
lock
and
(bad)
sbb
test
ret
cmp
cmp
cmp
sub
rol
xchg
dec
and
jmp
cmp
fcmovb
xor
inc
nop
inc
into
cmp
(bad)
in
ja
bound
inc
inc
push
gs
pop
mov
and
loopne
add
cs
mov
xchg
outs
stc
inc
pop
jmp
xchg
xor
in
icebp
stc
sbb
aam
adc
xchg
cli
and
mov
add
clc
ffree
ins
push
scas
hlt
inc
jo
push
mov
adc
xchg
xchg
adc
pop
xchg
call
cmp
xor
test
jmp
push
inc
xchg
sub
or
push
pushf
xlat
jne
adc
push
jno
ret
cmp
adc
jp
inc
xlat
pop
call
mov
cmps
daa
ds
pop
push
sub
xor
arpl
push
cdq
dec
xabort
jge
ret
mov
sub
cmp
jns
mov
fdiv
adc
sbb
sbb
jle
dec
add
lods
lods
push
stc
pop
sahf
popf
retf
inc
mov
mov
sub
jae
add
dec
adc
push
mov
inc
jp
bound
jl
fsub
movs
mul
jne
mov
push
rcr
stc
jle
jmp
loopne
jns
jl
cmp
mov
call
cmp
mov
jp
cmc
jae
mov
loopne
adc
jle
mov
push
inc
fdivr
iret
rcr
or
inc
mov
ret
jae
icebp
cmp
mov
mov
rcr
sub
mov
and
retf
fcmove
sar
daa
shr
mov
les
(bad)
addr16
sbb
cmp
in
lea
div
aaa
push
xor
jbe
test
push
cmp
call
(bad)
or
iret
call
mov
xor
bound
add
(bad)
out
and
pop
jl
je
shl
dec
iret
mov
sbb
shl
lds
mov
div
add
jae
add
mov
xor
je
xchg
jnp
clc
push
inc
pusha
add
(bad)
mov
imul
dec
lods
and
aas
jb
jno
(bad)
push
ins
xlat
sbb
adc
ins
add
aas
jns
repnz
arpl
jns
fisubr
aaa
mov
sar
jae
xchg
sbb
push
ss
pop
jno
push
xor
jmp
push
add
test
ret
dec
out
sub
jp
xor
outs
mov
cmp
test
mov
inc
lahf
dec
pop
jmp
sub
xor
mov
lahf
dec
sub
inc
jbe
pusha
jmp
jb
(bad)
jg
push
cmps
scas
call
mov
inc
mov
imul
sub
cmps
cmps
jne
mov
or
dec
(bad)
lock
sub
push
cmps
jb
loop
sbb
jno
pop
and
pop
jmp
xchg
pop
add
das
cmp
scas
and
add
mov
shr
sub
mov
inc
jge
lea
(bad)
int
sahf
mov
sbb
and
bound
jmp
cmp
mov
push
inc
je
retf
push
push
lds
bound
mov
ret
pop
jns
sti
stos
jbe
sbb
arpl
push
cmps
and
and
aam
shl
cmp
aad
sbb
add
sub
cwde
xchg
stos
in
adc
fld
out
popf
movs
pop
or
and
rcr
out
sub
jne
lahf
ret
dec
and
mov
push
out
adc
add
pop
mov
jecxz
aad
push
and
(bad)
mov
mov
add
gs
pop
daa
addr16
xor
xlat
sub
add
add
(bad)
mov
cmp
jg
div
fldenv
inc
mov
pop
dec
jo
sahf
push
retf
jmp
aad
pop
mov
xor
pop
fdivrp
les
lahf
in
scas
hlt
xchg
dec
adc
mov
jbe
mov
mov
jg
cmp
pop
jmp
cmc
adc
das
loopne
call
fs
or
les
aaa
in
or
mov
ret
xchg
cmp
jnp
inc
mov
aad
xlat
into
fwait
mov
shr
jne
shl
sbb
mov
inc
cmp
dec
add
add
mov
sti
aad
inc
push
push
mov
mov
add
sbb
ds
out
mov
cmp
nop
repnz
pop
rol
jne
cmp
adc
inc
mov
dec
ret
test
mov
jge
sahf
sub
jb
stos
ins
popf
fidivr
cmp
out
addr16
mov
test
xor
inc
xchg
or
inc
sub
xchg
and
jge
push
out
repz
sar
sub
mov
jl
jle
cmp
or
xchg
mov
and
inc
mov
cmc
and
add
or
sub
idiv
sub
xchg
inc
or
jp
push
mov
aad
jge
and
mov
dec
adc
test
jno
ss
pop
imul
into
xchg
(bad)
mov
push
push
pop
add
sahf
xchg
outs
in
mov
xor
pop
lahf
ins
sbb
test
adc
pushf
imul
jno
jp
daa
lock
mov
ret
in
inc
mov
mov
dec
and
cmp
inc
imul
push
lahf
les
xor
sub
gs
sub
sahf
or
fmulp
jmp
adc
sub
cld
outs
push
cmp
sbb
pop
popf
in
cmps
icebp
jg
aad
addr16
dec
loop
mov
lods
mov
mov
icebp
ret
sbb
ror
adc
inc
mov
xor
ret
aaa
scas
mov
xor
or
imul
in
imul
mov
pop
push
in
add
inc
mov
hlt
cmps
mov
sub
loop
fs
sub
sti
repz
daa
push
or
(bad)
call
pop
push
mov
movs
sub
in
ds
outs
mov
lods
loope
aas
iret
mov
pop
mov
neg
iret
mov
mov
(bad)
jmp
in
sbb
cdq
sbb
mov
dec
(bad)
test
pop
lock
add
xchg
push
pop
popa
call
pop
jle
int3
movs
adc
inc
xchg
and
out
int3
mov
jmp
pusha
inc
add
jae
ss
adc
ficomp
sub
or
pop
enter
mov
mov
mov
je
ds
mov
pop
sar
(bad)
cmp
int3
popa
inc
mov
fcmovu
xor
fimul
push
push
jl
mov
add
inc
pop
test
xor
jge
xchg
push
mov
push
adc
scas
dec
cld
sub
shl
scas
inc
xchg
mov
in
add
mov
into
ja
or
jo
test
lock
outs
shl
dec
inc
cmp
inc
imul
aad
mov
scas
jns
(bad)
leave
add
(bad)
jmp
test
fcmovbe
aad
popa
scas
loopne
pop
cmps
(bad)
out
inc
mov
xor
add
aam
add
xchg
pop
icebp
bnd
mov
mov
xchg
nop
jmp
pop
mov
mov
out
iret
dec
sub
stos
dec
or
imul
xchg
push
sbb
push
jb
or
xor
pop
std
adc
sbb
mov
sub
xor
xor
add
xchg
sbb
call
cmp
push
mov
inc
pushf
shr
or
inc
hlt
ins
sahf
(bad)
fnstsw
les
aaa
arpl
mov
push
mov
dec
or
mov
dec
xchg
jae
cmc
push
aad
addr16
sub
xchg
add
xchg
mov
repnz
dec
mov
ds
push
sbb
jnp
jle
fistp
int3
mov
mov
pop
mov
xchg
mov
push
loope
jmp
dec
aas
mov
inc
add
sbb
lahf
int
mov
fwait
(bad)
retf
push
cmps
test
xlat
jne
rcl
in
cmps
mov
out
or
xchg
or
pop
and
addr16
arpl
sub
ja
mov
sub
and
sub
mov
out
sbb
icebp
(bad)
fiadd
ret
outs
mov
jae
data16
inc
mov
or
inc
in
call
retf
sbb
xchg
xchg
das
inc
ins
jg
(bad)
xor
bound
jae
pop
xchg
pusha
popa
(bad)
rol
stc
lods
xchg
pop
mov
cdq
pop
adc
repz
fidiv
imul
jnp
std
pop
icebp
add
ins
mov
stos
aas
fld
repnz
mov
test
cdq
enter
ror
out
xchg
lock
(bad)
retf
ja
pop
cld
mov
arpl
sub
or
stc
adc
aas
nop
cvtps2pi
(bad)
jne
je
inc
pushf
mov
pusha
or
jl
xor
mov
hlt
icebp
adc
clc
movs
mov
popf
mov
push
dec
mov
hlt
aaa
pop
or
cmp
fidiv
mov
and
push
inc
and
pop
test
jb
add
shl
ror
xor
ret
out
mov
fld
sub
(bad)
push
js
jge
call
and
pusha
dec
xor
call
adc
push
clc
pop
jne
jne
jmp
jbe
jns
aad
cwde
(bad)
mov
pop
push
fstp
sbb
mov
int3
aad
xor
add
add
xchg
lock
push
jg
js
xchg
push
dec
xchg
jb
mov
gs
iret
xchg
push
pop
icebp
jno
fsubr
or
push
push
dec
jmp
jle
mov
hlt
dec
dec
sub
repz
leave
dec
ret
sub
shl
pop
dec
dec
push
mov
sub
mov
jecxz
div
retf
outs
and
xlat
pop
or
scas
cwde
in
pop
lahf
xchg
adc
(bad)
sub
repz
inc
mov
dec
cld
lahf
cmps
hlt
aam
dec
pop
jg
inc
mov
outs
jne
mov
and
les
aas
inc
sub
mov
scas
loop
and
sbb
les
std
adc
icebp
movs
cmps
inc
loopne
out
mov
ret
and
(bad)
mov
test
ror
push
xchg
in
bound
mov
fwait
pusha
(bad)
add
mov
mov
(bad)
sbb
enter
sub
ins
sahf
int
icebp
(bad)
adc
adc
fst
idiv
xlat
push
icebp
movs
pop
loopne
push
out
mov
and
xchg
push
inc
ja
out
pop
inc
aaa
icebp
int
sbb
out
sbb
or
in
xchg
(bad)
jns
not
inc
mov
(bad)
movs
mov
sbb
dec
push
popf
aas
xor
test
add
sub
call
loope
aaa
jbe
sub
(bad)
cmp
in
xchg
sbb
jmp
jge
jnp
jb
pushf
add
retf
jge
imul
mov
int3
mov
stos
sbb
xchg
jnp
(bad)
pop
loop
cmp
sub
in
(bad)
push
mov
pop
cwde
and
sub
aas
inc
xchg
push
add
mov
jbe
ins
jae
cmp
fisub
adc
retf
imul
cmpxchg
(bad)
aad
add
mov
add
add
dec
ja
enter
and
xor
jmp
int
and
mov
pop
out
les
mov
jecxz
nop
outs
inc
jnp
jae
sub
fmul
jecxz
ror
es
sar
dec
cmp
sub
jo
aad
punpckhbw
push
mov
aad
push
(bad)
fcmovnb
pop
mov
fsubr
jle
aad
adc
daa
(bad)
lds
dec
aaa
lods
pusha
or
repnz
test
retf
mov
push
mov
add
(bad)
stc
out
ror
cli
sub
arpl
pop
adc
push
in
movs
jo
jmp
into
cmp
(bad)
in
push
pop
sub
mov
repnz
xchg
jecxz
movs
pop
(bad)
sbb
or
jecxz
into
leave
mov
call
mov
test
imul
sub
iret
or
dec
push
je
ficom
data16
rcr
lock
cwde
or
stc
loopne
pop
icebp
popf
mov
jl
jae
adc
xchg
das
cmp
adc
lock
lahf
sbb
mov
bound
nop
and
jge
dec
iret
sahf
out
pop
jbe
xchg
dec
or
in
jecxz
(bad)
mov
frstor
lods
jmp
sbb
imul
retf
sahf
adc
daa
mov
xor
push
inc
mov
jecxz
imul
inc
arpl
jbe
push
fisub
mov
add
jno
cmp
movs
fnstcw
mov
pushf
int
sbb
jmp
(bad)
mov
bound
fldenv
loope
adc
and
clc
sub
(bad)
fiadd
push
sbb
out
ficomp
popf
and
cmp
das
sbb
adc
cmp
pop
or
int3
sbb
je
push
dec
sub
push
xor
mov
cmps
and
inc
and
test
scas
(bad)
test
bound
mov
dec
add
test
add
inc
dec
in
jmp
pushf
pop
or
movs
lds
push
aas
jbe
mov
ss
sti
sbb
xchg
ja
inc
mov
data16
fidivr
sar
jns
dec
push
pusha
xchg
sahf
mov
xchg
jecxz
imul
push
outs
add
retf
jp
jp
and
and
rcr
add
cmps
pusha
cli
adc
push
mov
cmp
xchg
div
push
jbe
jle
cmc
fldcw
std
mov
repnz
push
mov
(bad)
lods
and
aas
pop
hlt
cmp
mov
push
rep
mov
and
and
push
mov
cli
pushf
stc
gs
lahf
je
or
scas
jecxz
and
rcl
lds
or
mov
das
rol
inc
xchg
ret
ficom
jmp
push
adc
ja
stc
inc
xchg
js
sti
ss
addr16
add
xchg
sub
xlat
jl
cli
mov
cmp
dec
sahf
and
mov
xchg
adc
mov
cdq
sub
xchg
popa
arpl
and
push
inc
mov
mov
dec
aad
in
mov
loope
push
or
inc
(bad)
inc
(bad)
pusha
pop
and
in
mov
ja
cdq
inc
sbb
cmp
cmps
pop
hlt
ss
jmp
and
mov
lock
rcl
add
stos
inc
movlps
pop
pop
sub
mov
cld
xchg
in
sbb
mov
sbb
icebp
dec
push
xor
jns
in
mov
repnz
sub
es
push
(bad)
xchg
fiadd
or
cdq
rcr
enter
and
iret
push
cmps
jnp
pop
jns
mov
pusha
xchg
push
mov
pusha
jae
(bad)
sub
cmps
jecxz
jle
adc
out
pop
or
js
mov
sti
push
sbb
iret
inc
inc
rcl
(bad)
cs
loopne
sbb
sahf
xchg
adc
fidivr
mov
and
jo
popa
icebp
in
dec
add
call
mov
bound
loop
movs
movs
mov
fs
sar
jmp
mov
test
push
dec
les
retf
in
cmp
inc
jl
loop
add
push
retf
mov
dec
sub
jmp
and
cwde
mov
dec
pop
and
out
and
(bad)
mov
loopne
sbb
pop
cwde
dec
and
jo
sub
inc
add
fimul
pop
add
sub
and
inc
mov
push
js
test
add
and
fstp
and
test
lods
push
lea
mul
mov
mov
call
loopne
jae
(bad)
icebp
jb
or
data16
lea
mov
sbb
pop
sub
ds
jb
fistp
ins
dec
inc
lods
push
lock
(bad)
sbb
or
ins
pop
inc
push
daa
jp
sub
add
jmp
pop
inc
call
mov
add
jb
push
shl
adc
cmc
int
pop
hlt
pop
jle
lock
retf
(bad)
xor
inc
pop
xchg
mov
or
mov
fbld
mov
add
ins
xor
(bad)
cmp
(bad)
cmps
fsubrp
lods
retf
mov
dec
cmp
pop
jmp
ins
mov
mov
mov
add
cmc
or
xchg
xchg
mov
mov
fsub
xchg
lods
xchg
mov
pop
push
dec
sbb
js
push
sub
pop
int
xor
adc
rcr
dec
cmp
push
xchg
mov
test
stos
div
adc
inc
jns
dec
(bad)
and
mov
div
(bad)
push
ret
mov
test
popf
jl
ja
push
xlat
int
lods
xchg
cmps
sub
in
pop
cmp
cld
in
popf
xor
xchg
popa
(bad)
popf
inc
sbb
push
std
adc
arpl
push
popf
mov
xor
mov
fistp
lahf
mov
push
sbb
jo
das
or
cmps
adc
iret
mov
and
js
lea
bound
sbb
xlat
cmp
xor
lods
dec
dec
mov
add
and
jecxz
in
push
or
and
sti
jp
mov
mov
daa
sub
(bad)
or
ins
mov
jno
bound
mov
outs
call
arpl
jmp
rol
cmc
push
mov
in
jle
pop
cmp
and
push
add
(bad)
pop
inc
ins
push
sar
dec
in
retf
out
dec
sbb
push
repnz
stos
fmul
ds
imul
rcl
sbb
inc
push
xor
sbb
mov
inc
jmp
dec
(bad)
fst
or
(bad)
push
(bad)
test
inc
je
lea
jae
mov
add
jl
push
int3
jmp
inc
daa
mov
jb
xchg
dec
jne
or
fcomp
and
outs
inc
add
lods
dec
iret
into
mov
lock
outs
sar
pusha
jle
test
cmp
aaa
loopne
and
fdiv
lock
mov
sbb
bound
push
sar
fistp
sbb
dec
movs
mov
add
inc
xchg
pop
outs
addr16
sub
leave
iret
mov
fucomp
and
stos
dec
jb
mov
popf
fldcw
xchg
jcxz
dec
cli
dec
repnz
test
mov
jmp
mov
clc
jnp
add
jg
imul
out
jecxz
adc
inc
push
call
inc
sahf
xchg
sar
add
push
nop
pop
bound
mov
(bad)
dec
sbb
cmp
lods
mov
test
mov
xchg
fist
adc
inc
loopne
sbb
sar
sahf
lock
jecxz
es
neg
fist
cmps
sti
ror
icebp
enter
int
fidivr
inc
imul
or
cmps
jcxz
(bad)
in
arpl
das
cmp
mov
sbb
mov
push
mov
loop
ins
cmp
cmps
inc
mov
cld
nop
add
fwait
rol
xor
dec
sar
pop
jnp
pop
cmps
push
rcl
into
or
fidivr
jle
sahf
add
or
(bad)
jb
pop
inc
dec
xor
sub
outs
add
jmp
add
movs
push
and
mov
call
xchg
daa
out
pop
nop
les
or
loope
xchg
aas
adc
jnp
fbstp
mov
pop
xchg
dec
stc
mov
inc
dec
fs
fsubr
(bad)
xlat
adc
push
into
xor
out
popf
mov
pop
xor
test
addr16
mov
xor
out
loop
pmaddwd
enter
xchg
cmp
test
out
mov
jle
mov
push
(bad)
mov
jecxz
mov
outs
loopne
into
push
enter
cmp
mov
in
add
mov
cmps
xor
adc
loopne
shr
dec
daa
and
mov
adc
mov
push
clc
xchg
mov
imul
adc
xor
push
sbb
popf
or
fwait
sahf
fwait
and
retf
push
or
and
xchg
xchg
ins
inc
stos
sub
int3
inc
or
jb
(bad)
jge
pop
cld
fwait
sahf
xchg
retf
mov
jo
les
xchg
sbb
fs
dec
cmp
xor
gs
jg
xor
mov
in
xchg
ins
push
pop
push
jbe
jg
fcomp
jmp
mov
jo
cs
sub
mov
add
cmc
jae
test
jp
xor
call
mov
(bad)
nop
rcl
xchg
inc
cmp
and
emms
mov
dec
mov
call
sub
jnp
imul
dec
mov
nop
and
mov
sub
adc
jbe
or
jl
in
mov
test
sar
(bad)
test
aas
mov
int3
fisttp
inc
cld
inc
push
imul
push
bound
ret
xchg
(bad)
adc
dec
mov
jp
adc
lods
jmp
or
ss
xlat
movs
shl
bound
pushf
lock
add
xor
add
inc
push
jno
les
mov
pop
inc
dec
dec
sub
retf
test
inc
push
mov
push
jae
dec
das
sti
es
push
push
rcl
popa
cmc
popf
out
mov
and
inc
add
rcl
loopne
jmp
dec
xchg
test
imul
pusha
push
inc
mov
sub
ret
cmp
fcmovnb
add
ins
sbb
jne
jge
dec
ror
add
iret
adc
add
mov
mov
jp
stos
movs
add
push
sub
imul
push
cmp
mov
out
cmp
cdq
rcr
lahf
jae
movs
add
sub
ret
dec
inc
(bad)
ins
and
jno
pop
fst
fdivr
sbb
cmp
sti
cmp
out
fld
add
in
pop
ret
push
or
mov
inc
fnstsw
sti
ror
cwde
jnp
xchg
mov
xor
push
pusha
outs
(bad)
push
int
pop
fdivr
retf
add
aas
push
mul
and
loope
inc
ds
add
dec
xchg
push
jbe
test
jg
xlat
outs
sbb
xchg
cmp
push
ins
push
imul
adc
es
push
daa
add
jno
sub
mov
add
in
mov
mov
fild
mov
sti
out
push
icebp
shr
xor
jp
(bad)
pop
jae
add
pop
test
movs
adc
pop
ja
cmpps
adc
push
ins
shl
xchg
pusha
in
sbb
cmp
outs
call
stos
stos
xor
xchg
mov
xchg
or
nop
test
not
scas
mov
inc
mov
dec
xchg
dec
and
or
mov
jae
xor
mov
mov
add
xchg
sti
test
or
clc
push
das
fldcw
dec
inc
mov
test
fld
fnstcw
mov
call
push
aam
lods
fnstsw
mov
dec
mov
call
(bad)
(bad)
fwait
push
mov
dec
adc
sbb
and
int3
into
mov
cmp
int3
jg
inc
test
xor
add
sbb
xchg
rol
cmp
mov
add
pusha
fidiv
in
sub
dec
xchg
in
lods
xchg
add
fisttp
cmp
out
in
push
(bad)
pop
ret
stc
cmp
sbb
jg
mov
dec
push
cmps
test
ret
xchg
sbb
ror
fucom
ja
aaa
leave
pusha
test
sti
jge
inc
pop
add
cmp
dec
mov
repnz
out
cmovs
les
aam
test
pop
jno
add
dec
and
(bad)
in
inc
dec
inc
jno
xchg
in
mov
rcr
adc
jp
mov
imul
mov
add
cmps
aad
jo
sbb
sti
mov
(bad)
je
pop
enter
mov
jge
mov
(bad)
loopne
fwait
in
cmp
clc
xlat
ins
(bad)
pop
jp
mov
retf
mov
fadd
sahf
fsubr
push
pop
sbb
sub
test
scas
mov
jg
inc
clc
fld
adc
lea
push
nop
mov
xor
or
jp
jbe
sbb
jle
pop
pop
gs
jge
ficom
xor
adc
iret
es
les
mov
xchg
cmp
pusha
add
outs
fist
arpl
push
sub
mov
loop
jae
adc
sbb
or
arpl
xor
icebp
out
and
mov
sti
jae
popf
icebp
ins
mov
arpl
cs
rcl
adc
stos
aas
inc
cmp
push
lods
push
xchg
mov
iret
jbe
push
iret
(bad)
or
inc
mov
pop
cs
dec
or
push
stc
js
ret
jge
or
or
outs
push
mov
hlt
mov
fisttp
xchg
push
js
out
adc
mov
inc
pop
or
stos
test
iret
dec
repnz
ror
mov
mov
mov
mov
mov
fidivr
lods
inc
shl
(bad)
mov
js
imul
les
test
into
dec
loop
gs
es
lods
mov
dec
out
sbb
div
out
inc
jne
mov
int
push
cmp
cmp
add
push
sbb
aam
in
in
push
ret
xchg
mov
arpl
or
and
rcl
cmps
sbb
sbb
and
xlat
imul
jo
cmp
or
mov
sbb
push
fadd
push
aas
rol
addr16
mov
aam
in
in
and
dec
fcomip
cmps
sbb
inc
imul
call
in
inc
jg
xchg
push
sbb
imul
cmp
push
mov
shr
adc
or
or
xor
pop
mov
or
(bad)
stc
aad
mov
int3
dec
cdq
xor
or
and
in
inc
stc
adc
ins
add
push
xchg
jne
cs
das
int
aaa
fsubr
dec
inc
dec
pop
jb
(bad)
test
lock
or
mov
mov
jmp
mov
adc
push
hlt
je
inc
in
in
stos
in
jb
inc
jmp
sub
in
mov
cmp
mov
clc
jecxz
aam
mov
cld
push
jmp
fcomp
test
mov
dec
mov
sub
or
in
jbe
out
jae
and
pop
ins
push
dec
xor
jmp
adc
rol
mov
mov
push
test
jns
retf
inc
or
ds
jmp
clc
enter
xlat
mov
leave
scas
jmp
mov
adc
cmp
neg
fwait
xor
jnp
hlt
rcr
out
mov
ss
xor
pushf
std
into
jmp
int3
cmp
fistp
xchg
(bad)
imul
enter
xor
adc
inc
ret
jo
jb
dec
push
adc
or
push
lea
test
aad
push
je
mov
int
inc
js
retf
sub
sbb
pop
push
fbld
bound
pop
retf
repz
push
mov
cs
xor
mov
push
(bad)
mov
(bad)
scas
inc
(bad)
adc
pushf
idiv
sub
jns
jne
ja
ret
inc
imul
dec
xor
xchg
addr16
mov
repnz
mov
push
fninit
aad
test
iret
iret
adc
dec
add
cdq
xchg
mov
push
fbld
daa
fimul
fstp
xor
ret
jns
mov
fistp
adc
adc
push
push
test
jl
xchg
lods
int3
test
fild
clc
dec
xor
scas
cmc
inc
push
pop
test
mov
mov
enter
sub
or
mov
out
aad
pop
ror
jnp
mov
shr
cs
clc
ret
cs
and
aad
cmps
loopne
gs
aaa
movs
or
cld
or
push
mov
adc
and
push
xor
loope
push
fst
fcomp
jnp
out
ins
add
call
movs
cwde
aas
and
nop
cmp
add
xor
hlt
mov
jg
repnz
inc
stos
and
inc
lods
fdiv
out
fsubr
sub
add
popa
xchg
push
ret
ins
mov
retf
shl
push
call
push
xchg
test
lock
clc
inc
sub
inc
mov
dec
pop
push
iret
push
mov
sub
sar
or
xchg
aas
jae
popf
fistp
adc
or
mov
jl
pusha
pop
jmp
pop
iret
mov
inc
std
xor
in
inc
add
lea
or
mov
cmps
dec
jmp
int3
(bad)
pop
pop
sbb
sub
push
adc
jb
xor
in
imul
add
test
adc
mov
fcmovnb
cmp
popa
jne
sbb
cmps
xor
dec
scas
fcom
jmp
out
clc
mov
adc
push
daa
test
aas
ret
aam
jmp
fwait
xchg
call
scas
push
adc
lds
or
movs
xor
pop
retf
push
ja
test
ss
mov
retf
cmp
test
fisttp
out
mov
pusha
into
push
scas
and
jmp
or
popa
xor
xchg
retf
adc
xor
mov
or
dec
cmp
push
scas
call
add
inc
je
int
xchg
nop
fwait
add
and
out
xabort
lea
(bad)
retf
sahf
mov
movs
aaa
jns
hlt
dec
aas
lock
std
cmp
mov
les
mov
int3
inc
and
outs
(bad)
cmp
jb
or
pop
push
nop
movs
adc
mov
scas
int3
jno
cmp
sbb
popf
shr
div
push
xchg
call
repz
or
icebp
imul
ins
cmp
push
std
jb
xchg
test
mul
out
ins
lahf
pop
daa
int
pop
push
add
sub
addr16
mov
leave
or
out
mov
mov
stos
dec
or
sti
cli
pop
aaa
out
push
mov
sub
es
clc
gs
btc
imul
inc
retf
jbe
jecxz
pop
cmp
cli
arpl
rol
loop
ret
push
into
or
sub
pop
dec
les
dec
nop
mov
inc
(bad)
je
jmp
or
pmaddwd
out
mov
pop
push
mov
ja
test
dec
pop
std
repz
or
mov
xchg
call
rol
adc
into
ds
sbb
in
stc
repz
inc
push
pop
add
in
repnz
leave
(bad)
in
test
sbb
mov
sbb
jo
or
adc
xchg
bound
mov
push
enter
or
fstp
xchg
loopne
cdq
pop
mov
das
xchg
outs
retf
sbb
pop
push
fxch
push
je
in
xor
(bad)
in
xor
push
aad
cmp
ins
pop
mov
mov
leave
pop
mov
pop
pusha
sbb
cs
idiv
add
es
add
ins
ror
in
fdivr
dec
push
pusha
idiv
dec
push
(bad)
retf
sub
jge
std
jmp
xor
xchg
inc
sbb
pop
jae
sbb
mov
sbb
xchg
into
nop
(bad)
fistp
inc
mov
or
cli
sbb
daa
es
retf
or
es
push
dec
call
add
jl
cmc
fiadd
mov
xor
add
xor
cmp
xchg
or
fistp
mov
xchg
xchg
jmp
loope
icebp
mov
arpl
xchg
loop
xor
adc
ins
add
sbb
push
add
sub
mov
xchg
cld
adc
fadd
cmp
push
out
std
pop
jbe
movs
add
mov
pop
and
int3
or
xchg
mov
sub
inc
scas
jns
int3
dec
inc
lods
icebp
mov
dec
test
je
int
ret
sub
xchg
pusha
nop
mov
push
add
popf
popa
pop
pop
xchg
and
mov
sbb
int
pop
push
imul
fadd
jge
(bad)
in
or
bound
lahf
in
mov
mov
sbb
ja
out
jp
std
and
mov
or
jmp
push
jbe
add
dec
fwait
aaa
mov
int
sbb
jbe
ss
jmp
jmp
xchg
(bad)
aad
hlt
fwait
inc
(bad)
adc
popf
xor
aaa
stc
iret
icebp
cmps
and
pop
pop
std
cmp
cld
pop
sbb
xchg
xor
push
out
clc
jmp
stos
lock
jmp
rcl
sti
mov
add
xchg
mov
sub
dec
pop
or
cmp
mov
fcomp
sub
cwde
mov
or
mov
xor
mov
mov
xor
aam
jmp
and
or
mov
pop
fwait
add
pop
mov
(bad)
call
cmc
xchg
aad
cmp
test
aad
fcomp
cmp
mov
dec
fwait
call
or
call
dec
pop
stos
mov
push
pop
dec
fs
aas
ret
pextrw
js
pushf
jns
mov
xor
aaa
out
icebp
aaa
nop
dec
mov
cmp
stos
xchg
push
js
(bad)
push
in
add
(bad)
iret
(bad)
pop
jg
mov
in
div
ficom
xchg
pop
jno
iret
push
popf
fistp
push
into
pop
push
add
aaa
push
ror
mov
(bad)
cwde
add
sahf
pop
ins
icebp
xchg
std
cs
mov
cdq
lock
enter
mov
jle
in
xchg
add
mov
sub
xor
mov
xchg
mov
ja
mov
hlt
dec
sub
add
loopne
xchg
imul
rcl
push
sub
fnsave
pop
loope
jle
mov
test
push
das
cmp
imul
aad
je
adc
scas
sub
stc
pushf
jbe
sbb
mov
or
dec
jno
test
cmp
cli
lock
mov
push
mov
and
dec
cmp
ds
mov
jecxz
pop
js
ds
jns
into
fimul
pop
and
jb
dec
lea
cmp
jl
(bad)
cmovno
sbb
or
jg
sahf
(bad)
sar
add
popf
into
pop
mov
jmp
add
jge
jno
aam
loope
adc
sar
mov
mov
mov
jle
mov
je
push
call
fisttp
dec
mov
mov
dec
xor
xor
out
(bad)
jp
outs
dec
add
mov
jle
mov
push
scas
cmp
mov
push
jmp
mov
in
push
xchg
dec
(bad)
call
push
retf
adc
movs
into
loopne
vmovshdup
inc
inc
(bad)
xchg
adc
aad
mov
retf
rcl
xlat
adc
jp
and
repnz
push
sti
sbb
popf
and
jge
push
inc
jnp
mov
ins
pushf
pop
repz
aad
xchg
push
push
pusha
mov
sub
dec
mov
ins
push
enter
sub
push
push
ret
and
daa
xchg
inc
stos
popa
push
pop
sub
enter
fdivr
push
rol
(bad)
mov
jb
int3
hlt
pop
(bad)
sbb
je
out
adc
or
loop
punpckldq
mov
test
outs
scas
xchg
sub
test
xor
arpl
push
jg
(bad)
and
inc
pushf
xor
scas
sub
push
popa
push
push
pop
push
push
pop
into
push
inc
adc
fld
out
in
test
stc
movs
add
push
call
psrlq
retf
aaa
sti
(bad)
cmp
dec
leave
cli
retf
(bad)
and
mov
hlt
xchg
or
pop
shl
add
or
stc
mov
push
es
sub
inc
cmps
js
outs
addr16
sbb
mov
into
fimul
pop
mov
cmps
cmp
and
fst
call
lock
mov
dec
dec
enter
fsubrp
dec
jmp
icebp
inc
pop
in
pusha
rcl
adc
cmps
xor
sub
in
loop
leave
nop
aas
(bad)
mov
xor
fisttp
pop
mov
mov
or
nop
pop
xor
cmp
inc
push
adc
sahf
cmp
and
or
mov
pop
xchg
jmp
cmp
and
ret
sub
or
sbb
bound
xchg
mov
fsubrp
test
icebp
js
push
sbb
mov
jae
inc
mov
into
push
cmps
pop
int3
adc
ja
or
or
loop
cmps
iret
aam
pop
cs
pusha
cmp
test
inc
mov
bound
pop
ds
out
cmp
imul
or
pop
fdivr
movs
inc
adc
mov
lds
enter
sub
lahf
cdq
xchg
cmp
mov
mov
cld
pop
pushfw
or
arpl
mov
out
movs
or
mul
cmc
ds
pop
push
out
clc
cmps
add
mov
or
scas
add
out
add
pop
push
jno
xchg
or
cmps
xlat
loope
mov
(bad)
cmc
inc
mov
rcl
imul
fwait
dec
pop
(bad)
mov
jmp
push
push
cmp
inc
inc
lahf
sbb
gs
in
out
push
mov
xchg
daa
loope
and
enter
jo
and
jmp
mov
xlat
or
jmp
adc
cmp
jge
(bad)
dec
jno
adc
repz
test
ret
arpl
in
fwait
loope
stos
popa
out
add
adc
ss
pop
aas
push
outs
hlt
jecxz
xor
ja
xor
push
jmp
pushf
sar
popa
sbb
xchg
sub
fwait
inc
and
movups
retf
adc
xor
pushf
clc
push
movs
icebp
jmp
fadd
clc
out
aas
dec
jmp
push
sub
or
popf
xchg
push
jb
mov
clc
cmp
je
sbb
and
sub
rcr
pushf
ss
(bad)
(bad)
daa
push
jbe
xor
xchg
stos
mov
pop
fdivr
push
push
cwde
and
sub
push
xchg
push
or
scas
xor
outs
xlat
push
sub
add
dec
lea
sub
dec
out
aas
push
add
stos
push
cld
pop
mov
mov
xchg
jns
int
mov
xchg
fiadd
xchg
pop
out
add
ins
stc
push
(bad)
dec
aas
pop
dec
int3
lods
outs
add
push
add
(bad)
sbb
mov
test
ret
add
adc
pop
jge
ret
shr
fsubr
into
add
mov
xchg
dec
xchg
push
jge
push
mov
push
jmp
sub
retf
stos
mov
repz
pop
out
sub
or
in
fwait
inc
retf
jo
(bad)
adc
aaa
(bad)
adc
jae
in
les
cmp
jnp
mov
int3
ins
mov
adc
imul
iret
adc
dec
or
imul
nop
push
shl
adc
adc
jmp
out
fwait
inc
sub
mov
in
jo
lock
xchg
adc
fld
sub
cmp
dec
enter
xchg
xchg
je
jge
dec
(bad)
cld
cdq
mov
inc
cmp
aas
add
and
punpckhwd
mov
cwde
or
ins
add
cmp
cmp
mov
mov
dec
mov
inc
adc
mov
pop
mov
sbb
cmc
mov
jae
jmp
xor
fs
cs
ss
inc
jbe
call
shr
pop
rcl
repnz
ja
fs
(bad)
ficom
dec
xchg
jmp
ds
push
dec
popf
or
or
int3
inc
and
outs
adc
inc
mov
shl
mov
gs
(bad)
jmp
sub
in
cmp
cld
stos
push
push
and
stc
adc
stos
pop
ss
test
add
pusha
and
mov
adc
mov
push
cmp
shl
cs
push
jne
sbb
jge
retf
jp
in
test
inc
jle
mov
and
sub
xchg
das
call
xlat
mov
xchg
xor
rcr
scas
out
and
jne
enter
jno
push
inc
scas
sar
nop
mov
ror
push
pop
pop
xor
or
in
mov
cli
mov
hlt
imul
in
jl
add
inc
(bad)
mov
push
call
mov
cmp
add
pop
add
pop
mov
jge
stos
std
mov
or
popa
jg
mov
push
xchg
(bad)
push
add
cmp
sahf
pop
jbe
pop
mov
aas
adc
dec
pop
dec
shr
or
jae
jno
mov
add
je
push
(bad)
(bad)
mov
repnz
out
aad
leave
dec
or
or
cwde
add
aam
or
repnz
jle
sub
mov
add
pop
mov
(bad)
shr
cdq
fcmovbe
xchg
xor
xchg
(bad)
cdq
in
addr16
dec
dec
ror
dec
mov
mov
sub
and
shr
es
push
lds
js
mov
js
and
mov
xchg
dec
daa
mov
xchg
ret
mov
inc
mov
ins
dec
sbb
jg
add
inc
or
icebp
mov
je
cli
sub
adc
enter
mov
fldcw
clc
icebp
icebp
pop
sbb
mov
repnz
sub
repnz
or
fistp
fsubrp
jecxz
popa
push
sbb
pop
call
sti
shl
and
mov
add
pop
dec
test
push
out
cmp
dec
pop
frstor
iret
mov
mov
repnz
xchg
add
xchg
adc
test
adc
pop
xchg
ja
call
sub
popf
push
clc
rcr
adc
ins
push
dec
movs
out
ret
cwde
call
ror
(bad)
repz
adc
jle
jl
sub
clc
jne
mov
sub
gs
lds
imul
outs
ds
push
add
inc
(bad)
cmps
mov
inc
(bad)
in
dec
add
fcomi
mov
jmp
jmp
leave
push
push
jbe
repz
aas
inc
fimul
xor
inc
mov
out
xchg
xor
pand
daa
cmp
add
addr16
je
jp
inc
call
fwait
shr
jbe
or
adc
xor
retf
xor
jbe
inc
icebp
sahf
pop
or
push
das
push
inc
repnz
loopne
jae
int
rcr
inc
popf
mov
or
push
push
(bad)
jnp
xor
hlt
aaa
gs
aaa
test
and
xlat
mov
xchg
push
xchg
pop
loopne
es
mov
mov
ret
add
fwait
mov
in
inc
test
imul
jge
add
adc
jmp
ins
pusha
xor
xchg
mov
hlt
les
ret
push
sub
and
mov
push
scas
sub
in
movs
jb
cmps
sbb
and
pop
jl
ins
jbe
push
sbb
jp
add
sbb
push
xchg
sub
rcl
xchg
xor
lods
fstp
push
mov
dec
adc
dec
push
xchg
pusha
ret
or
or
mov
(bad)
aaa
cmp
mov
mov
pop
mov
pop
sahf
rcr
add
push
(bad)
jnp
pop
fst
aam
sub
mov
push
mov
je
inc
xchg
sub
pop
cmps
arpl
sub
aaa
cdq
inc
dec
fsub
jno
sub
(bad)
jg
xor
shr
sbb
inc
mov
and
jmp
jnp
ficom
lods
aaa
(bad)
iret
aad
dec
inc
and
push
cld
xlat
repnz
imul
dec
jne
icebp
push
rol
aaa
or
jno
dec
out
mov
pop
push
cmp
in
jp
mov
xchg
push
dec
xlat
pop
jp
push
lock
(bad)
and
shl
push
test
dec
xchg
and
cmp
sbb
sar
push
sub
push
(bad)
inc
ss
(bad)
loopne
cmp
cld
and
inc
xor
mov
jp
ja
movs
test
sbb
pop
je
jns
inc
call
add
in
xchg
daa
neg
jecxz
mov
add
fmul
ss
data16
adc
mov
scas
in
call
add
mov
push
inc
ins
dec
cs
cmp
lods
adc
scas
add
fistp
or
mov
push
sub
in
pushf
jb
test
push
adc
fsubr
cwde
xor
push
test
mov
enter
fs
push
mov
pop
cmc
xor
push
test
sub
ins
pop
not
out
out
xchg
lods
add
loop
test
scas
mov
pop
fwait
sub
pushf
sub
lock
or
fdiv
inc
test
cs
xchg
shr
ret
cmp
dec
loopne
imul
lea
ret
rol
jnp
jl
cdq
and
in
in
xchg
mov
aam
pop
retf
test
mov
inc
pop
xchg
xor
stc
xchg
movs
jo
(bad)
data16
aas
enter
sbb
mov
ret
fnstenv
subps
inc
call
cld
std
loopne
pop
jb
js
popf
sub
dec
bound
sub
lds
add
out
mov
sub
xchg
out
mov
add
pop
mov
xchg
iret
sbb
test
mov
leave
out
ins
movs
shl
xchg
mov
mov
push
push
xchg
je
xor
pop
mov
pop
cdq
mul
inc
stos
mov
in
fidiv
or
mov
push
dec
icebp
dec
jnp
mov
mov
jb
int
rcl
scas
cs
cwde
jge
add
mov
test
sub
jno
xor
push
(bad)
adc
inc
std
test
xchg
cs
lods
cmp
jae
mov
jbe
xor
neg
data16
mov
inc
sbb
jns
dec
cmp
in
cmp
sahf
mov
dec
dec
int3
push
pop
mov
sar
dec
xchg
or
les
(bad)
push
ds
pop
call
popa
add
sti
popa
fadd
mov
stc
add
or
jae
int
xchg
fidiv
push
jo
jne
push
sbb
xchg
outs
rol
xchg
mov
and
sub
imul
xchg
shr
pop
dec
adc
test
icebp
xchg
mov
push
test
adc
ins
cwde
adc
jb
xchg
or
fnstenv
push
repnz
or
in
mov
out
out
jmp
push
mov
rcr
sub
sbb
lock
int
cld
sti
call
and
jecxz
lds
cs
das
xlat
push
jnp
mov
fs
cmp
inc
call
leave
test
sub
stc
mov
(bad)
mov
rcl
icebp
add
sub
cmp
push
(bad)
shl
imul
mov
scas
fnstsw
add
sub
imul
cmp
nop
ficom
xor
mov
push
(bad)
xor
mov
xor
cld
mov
cmp
dec
xor
ja
sbb
cli
xchg
jmp
ror
lea
and
cmp
pop
imul
mov
or
cmovge
iret
sti
je
rcl
in
or
xchg
pop
(bad)
xor
shl
retf
not
dec
pop
mov
jp
cli
cmp
stos
xchg
fstp
xlat
push
jno
dec
inc
test
jne
sbb
iret
and
push
movs
ficomp
dec
fwait
arpl
push
int
xchg
sti
xchg
pop
xchg
and
mov
movs
dec
xchg
jle
enter
stos
and
cs
sub
in
mov
mov
xor
sar
(bad)
inc
loop
push
mov
imul
adc
in
imul
retf
mov
mov
shl
loope
mov
jo
mov
pop
sbb
(bad)
rol
jmp
and
int
pushf
adc
add
and
cmp
xchg
outs
pushf
outs
sub
mov
jge
mov
movs
idiv
outs
pop
add
inc
cwde
add
rcl
lock
inc
push
jmp
test
sub
mov
push
stc
fmul
sbb
push
xlat
clc
aad
stos
jns
(bad)
mov
stc
push
aam
jnp
call
test
cli
xchg
sub
inc
ins
cmps
aas
popf
inc
push
sahf
fbstp
cld
cli
retf
sub
push
cmp
mov
push
mov
fs
or
mov
jecxz
xchg
int
aas
aas
aas
daa
jge
mov
sbb
gs
clc
daa
fwait
sub
lods
jle
jecxz
push
push
and
out
ror
(bad)
push
dec
jne
loopne
(bad)
(bad)
cwde
cmp
in
imul
out
outs
call
jmp
inc
sub
and
sub
adc
test
je
adc
xchg
call
jnp
(bad)
adc
jl
add
push
test
add
dec
call
ja
aam
xchg
xchg
or
cld
int
or
mov
imul
fsubr
jle
inc
mov
loop
lds
mov
arpl
and
or
xchg
jmp
jbe
es
mov
mov
xchg
xor
pop
fwait
call
jmp
sbb
aas
mov
imul
(bad)
jle
dec
fcomp
fiadd
fcmovne
cmc
sub
cdq
pop
test
sbb
in
scas
push
call
fwait
stos
fldenv
fstp
inc
inc
mov
jmp
dec
xchg
push
sbb
mov
or
add
mov
sbb
push
mov
mov
js
push
sbb
xor
sbb
mov
and
pop
sbb
int3
jl
jge
pop
stos
mov
lahf
aaa
sbb
iret
or
xlat
xor
shl
add
cmp
(bad)
dec
leave
sbb
mov
pop
retf
dec
pop
sub
cld
adc
popf
pop
and
fwait
mov
leave
aad
into
push
mov
pop
dec
add
imul
and
push
cmps
and
test
js
test
pop
sahf
cmps
lea
mov
mov
or
sub
xor
sub
cmc
mov
movs
loope
mov
lock
in
dec
mov
mov
nop
pusha
out
jmp
in
outs
mov
hlt
ins
pop
or
scas
jmp
jbe
mov
mov
inc
jp
mov
ins
imul
int3
mov
stc
out
push
in
imul
jp
cmp
fs
sahf
xor
cmp
scas
jo
out
and
add
lds
push
mov
mov
test
fistp
mov
rcr
nop
ss
mov
xor
jnp
mov
movs
test
inc
lods
lds
jne
out
nop
lahf
popf
push
sbb
xchg
ins
sub
jae
shr
lea
cdq
aam
or
jle
jb
retf
or
mov
push
retf
lods
pop
jns
inc
(bad)
dec
or
retf
popa
jmp
and
data16
push
stc
sub
pop
or
movs
sahf
aaa
pop
leave
dec
pop
xor
aas
fnstsw
enter
and
inc
or
xchg
or
and
mov
or
dec
or
sar
jmp
adc
jbe
adc
jo
sbb
loope
lods
cdq
stos
ja
xor
push
addr16
mov
and
sahf
ss
loop
lock
div
and
inc
pop
ds
in
fs
repnz
mov
out
mov
jp
movs
push
push
jbe
sub
xchg
fldenv
push
les
and
or
or
or
retf
cli
bound
aas
or
aas
add
mov
dec
sub
sbb
mov
mov
enter
(bad)
stc
xchg
push
mov
int
inc
mov
xchg
pop
ja
xchg
xchg
cmps
in
adc
in
push
pop
mov
scas
pop
(bad)
(bad)
mov
mov
icebp
iret
mov
xor
repnz
imul
xor
sbb
sbb
mov
xchg
(bad)
mov
pop
aam
shl
pushf
add
(bad)
adc
pop
pop
rol
jmp
cmp
lds
adc
js
inc
in
add
and
scas
ret
push
test
dec
loop
mov
xor
push
rcr
mov
ret
int3
jns
data16
sub
fdiv
stos
loop
mov
or
pop
ret
mov
xchg
mov
ins
inc
retf
test
call
ret
(bad)
arpl
inc
inc
add
xor
cli
dec
out
inc
inc
shl
xor
pop
cmps
xor
ret
mov
and
lahf
leave
je
jmp
test
lods
jmp
test
fstp
xchg
lods
sub
sub
xchg
icebp
les
retf
dec
ror
add
int3
push
jmp
dec
inc
xlat
in
test
jecxz
jmp
jl
xchg
pop
shl
mov
fiadd
(bad)
imul
movs
xor
sahf
cwde
adc
ret
mov
jge
push
jecxz
(bad)
cld
dec
aam
ins
stc
bound
push
and
ja
sti
fstp
mov
sub
aam
jp
test
lea
jl
ja
(bad)
adc
push
stc
lods
fld
xor
bnd
jp
ret
cdq
jmp
or
mov
adc
xchg
daa
push
xchg
std
mov
ret
dec
adc
xor
adc
mov
sbb
pop
adc
jo
mov
imul
sbb
test
gs
inc
mov
clc
mov
ins
gs
pop
inc
inc
dec
ds
imul
adc
lods
ds
cmp
xchg
repz
adc
jbe
sub
mov
inc
daa
dec
pop
push
adc
inc
jp
fmul
call
ret
inc
pop
cmp
jg
popf
mov
test
dec
add
shr
or
adc
or
(bad)
sbb
retf
(bad)
in
push
push
scas
sub
inc
adc
mov
gs
fsubr
imul
pop
clc
ins
jno
pop
or
sub
(bad)
cmp
fldcw
sub
les
push
xchg
sbb
je
jg
jne
loopne
push
lods
dec
stos
aam
mov
mov
push
mov
pop
xchg
pop
mov
jg
clc
repz
and
jae
(bad)
in
cdq
mov
xor
dec
pop
dec
pusha
add
pop
ja
nop
mov
mov
inc
jmp
cmp
test
adc
push
je
mov
jp
stos
(bad)
pop
dec
xchg
sbb
sti
jb
mov
dec
sub
cmp
adc
xor
push
and
or
ss
(bad)
in
gs
mov
xor
cdq
ja
(bad)
out
and
in
and
in
sub
call
inc
xchg
daa
fld
fwait
sbb
cmp
and
jb
pop
xor
jno
cmp
ror
fnsave
ret
push
jo
add
mov
stc
jp
xchg
frstor
loop
aad
xlat
cmc
imul
sub
or
xchg
inc
mov
dec
lea
inc
je
ins
and
data16
dec
dec
pop
wbinvd
stos
outs
in
xchg
ret
xlat
int
xchg
mov
mov
clc
mov
repnz
pop
dec
mov
pusha
sbb
inc
dec
out
and
push
and
sbb
pop
dec
sahf
xor
jge
or
add
cwde
(bad)
cmps
jmp
cmp
mov
les
and
push
enter
fimul
push
dec
push
cmc
imul
jno
outs
jmp
mov
shl
pusha
inc
and
or
xchg
clc
push
dec
pop
pop
jmp
or
sub
es
ins
and
ffree
cdq
sub
jl
or
sbb
adc
dec
dec
icebp
outs
inc
bswap
xor
rcl
movs
aad
sub
fidiv
push
dec
adc
cmp
loopne
sbb
addr16
inc
pop
jp
(bad)
pop
clc
test
int
pop
jle
outs
mov
cmp
add
or
dec
cs
mov
jbe
adc
and
mov
cld
cmp
mov
fbld
push
mov
mov
hlt
dec
rcl
sar
out
add
xor
(bad)
and
dec
sub
test
push
adc
ffreep
aam
in
sahf
cmp
sbb
scas
push
push
or
js
sahf
inc
inc
inc
imul
xchg
pusha
cs
pop
mov
repz
out
jb
and
jmp
adc
or
outs
add
pop
pop
lahf
rcl
stos
scas
(bad)
mov
cld
xor
imul
sub
ds
outs
cdq
dec
push
jge
popa
pop
sub
inc
loopne
cmps
das
outs
test
mov
sub
sub
out
dec
mov
fiadd
shl
push
lds
dec
pushf
shl
mov
sahf
mov
or
call
jg
loopne
inc
cmps
addr16
outs
cmp
dec
test
shl
adc
jp
xchg
pop
ss
(bad)
jg
popa
push
je
inc
sti
mov
arpl
dec
xor
mov
jmp
rcr
call
aaa
pop
push
scas
sti
and
xor
jo
sti
stos
inc
push
bound
cmovne
mov
aaa
mov
jnp
pop
mul
sub
inc
xor
mov
add
and
out
cmp
cmp
pusha
lahf
dec
iret
cs
(bad)
js
push
pop
add
std
inc
mov
mov
and
or
xchg
and
loopne
sub
xchg
and
adc
inc
or
inc
popa
add
inc
cdq
xor
ja
clc
mov
adc
mov
fmul
dec
cmp
adc
int3
pop
or
inc
cdq
mov
cli
pop
mov
(bad)
stos
mov
mov
add
jns
cmp
(bad)
xor
sbb
fstp
int3
fdivrp
lock
mov
int3
leave
mov
xlat
cmp
push
push
pop
inc
cld
iret
cmp
movs
push
push
aas
jbe
scas
add
cwde
imul
mov
sahf
ret
sbb
mov
cld
sbb
pop
xchg
xor
clc
popa
loopne
fbld
pandn
(bad)
fiadd
mov
inc
sar
pusha
or
gs
adc
hlt
div
movs
mov
(bad)
std
aaa
jecxz
cmps
mov
xor
into
cmps
cmp
lock
pop
mov
stos
or
fld
movs
rol
rcr
adc
(bad)
mov
mov
adc
push
and
mov
mov
out
mov
xchg
cmc
sbb
repz
adc
ds
lock
pop
jmp
sub
adc
mov
xchg
mov
(bad)
sbb
pop
clts
push
push
push
pop
pop
push
loope
or
sbb
adc
stos
dec
fisub
test
sbb
popa
clc
leave
inc
xlat
push
pop
mov
sub
mov
push
out
push
adc
or
xor
test
mov
test
cmp
jecxz
mov
into
push
inc
outs
xor
daa
out
mov
into
push
in
sbb
popf
std
adc
adc
cmp
aaa
push
mov
push
push
cld
rcl
lds
mov
inc
pop
jp
mov
and
pop
push
(bad)
ror
and
in
test
sar
mov
sbb
adc
das
sbb
jmp
fisubr
mov
add
cdq
and
add
scas
cmp
push
xor
adc
mov
sub
cli
ret
rcl
sbb
in
sahf
cmp
dec
mov
push
cmp
pop
rcr
push
and
mov
pop
(bad)
imul
stos
pop
xchg
push
stc
es
mov
and
adc
jbe
loope
stc
cmp
inc
jmp
into
movs
mov
push
cmps
mov
pop
lods
pop
inc
(bad)
cmp
add
jnp
(bad)
dec
xor
mov
test
rol
ficom
inc
jl
retf
dec
outs
xchg
inc
ds
mov
adc
scas
nop
lods
(bad)
cwde
push
xchg
mov
fidivr
cmp
xchg
imul
lods
leave
fidivr
or
popf
mov
fdivr
adc
xchg
cld
(bad)
(bad)
(bad)
fmul
fstp
mov
cmp
mov
pop
mov
das
sbb
or
xor
jle
cmp
push
sbb
pushf
add
xchg
scas
sbb
(bad)
in
cmp
daa
sbb
loopne
imul
retf
mov
push
push
pop
adc
frstor
outs
pop
inc
bound
or
popf
cmps
dec
scas
pop
add
movs
test
sub
lea
xchg
ror
aas
add
stos
or
push
sbb
cmp
cmp
icebp
stos
lea
cmp
(bad)
out
lods
pushf
arpl
push
sar
adc
das
xchg
add
xchg
in
add
not
fdiv
pop
mov
sbb
jo
xor
adc
jecxz
mov
mov
push
adc
cwd
sub
xor
cld
xchg
outs
adc
xchg
stos
push
jne
jne
sub
pop
mov
(bad)
xchg
cmp
imul
cli
mov
mov
call
mov
aaa
cdq
add
sbb
cmp
jge
jmp
xlat
xchg
(bad)
lahf
mov
sub
jecxz
pop
sbb
icebp
cmps
pop
adc
jae
cmp
dec
xchg
jl
push
pop
mov
call
test
pop
scas
pop
add
mov
inc
cwde
scas
inc
(bad)
push
xlat
jl
sbb
and
and
sbb
stos
out
add
mov
cmp
imul
sti
add
loope
sbb
pop
test
or
fwait
inc
jle
mov
jno
cs
sub
push
jae
inc
jecxz
add
mov
popf
das
mov
inc
leave
cs
out
jmp
pop
mov
shr
adc
xchg
adc
mov
mov
xchg
mov
test
push
or
icebp
add
lods
mov
dec
or
test
mov
pusha
call
mov
mov
mov
(bad)
cld
fs
fs
inc
aad
(bad)
ja
xor
and
mov
push
inc
int
lods
fistp
test
(bad)
mov
(bad)
sti
xor
imul
mov
lock
clc
xchg
sub
iret
xor
pop
inc
sub
jmp
and
mov
jg
jle
adc
mov
sbb
pop
das
inc
dec
xchg
push
scas
rol
jge
adc
and
xchg
pop
cmc
or
mov
mov
inc
lea
add
(bad)
pop
dec
fidiv
loop
pop
mov
aaa
or
mov
test
mov
xchg
sbb
pop
arpl
mov
mov
(bad)
cmc
mov
fpatan
cmp
movs
pop
cmps
inc
or
jns
push
out
loope
cwde
pop
pop
add
jne
ds
jo
retf
fisttp
bound
pop
pop
pop
scas
pop
cmp
adc
mov
call
retf
sub
ins
add
loopne
fdiv
push
push
dec
out
iret
ror
add
sti
outs
aam
aas
sbb
hlt
out
fidivr
stc
mov
mov
ins
and
cmp
clc
(bad)
mov
std
adc
aaa
inc
rcr
cwde
cmp
jb
push
and
dec
cmps
ret
sub
ret
and
mov
add
es
(bad)
movs
in
test
mov
mov
adc
xchg
jmp
or
stc
inc
fisub
outs
aaa
sahf
or
stos
and
mov
lds
in
sbb
or
push
imul
push
and
addr16
lods
in
jnp
stos
test
xor
xor
fld
mov
xor
push
inc
loop
pop
push
out
push
xchg
xchg
jmp
test
and
adc
(bad)
fisttp
cmps
and
in
leave
stos
xchg
jae
jmp
into
aas
push
push
imul
xchg
pushf
and
ins
cmp
aas
js
jmp
jmp
sti
jmp
outs
or
fisub
mov
cld
push
fs
es
and
dec
jecxz
add
add
inc
out
pop
sbb
scas
lahf
inc
dec
(bad)
cmps
or
pusha
dec
add
cmp
sbb
xor
cwde
mov
call
out
(bad)
sub
xor
mov
retf
daa
sti
mov
push
xor
jns
cmps
in
in
xor
or
mov
jl
cmp
ret
arpl
ins
sbb
mov
sub
push
jne
lock
adc
dec
lods
push
jmp
popf
cmps
clc
(bad)
movs
ror
or
pop
pop
sbb
mov
loope
jns
push
xlat
lahf
in
gs
jae
jge
cdq
sub
fdiv
mov
je
(bad)
mov
lahf
jg
cmp
xchg
ins
rol
sub
xchg
sub
cmps
sbb
ficom
repz
xchg
and
loope
xor
mov
ret
enter
and
test
xor
adc
mov
xchg
sti
jmp
dec
jnp
lds
xchg
ret
clc
repz
pop
jge
xchg
into
nop
ds
outs
ds
push
int3
sub
repnz
xor
or
int
js
xlat
cld
mov
dec
inc
adc
je
mov
jle
xor
adc
shr
inc
scas
outs
je
aam
xchg
push
sbb
inc
loop
iret
repnz
jl
mov
inc
dec
int3
push
mov
inc
rcl
adc
retf
jb
jnp
jo
dec
mov
out
inc
inc
mov
das
jno
jmp
test
loop
add
movs
shl
repz
test
cmps
sti
inc
cld
sub
mov
enter
lods
cmps
xchg
outs
pop
and
mov
outs
iret
mov
pushf
fs
add
lds
sti
stos
rol
dec
ds
pop
or
loope
or
pushf
xchg
jmp
mov
cdq
cmp
xchg
je
ret
pop
cmp
and
(bad)
mov
cmps
mov
pusha
mov
xor
jecxz
rcr
or
xor
xchg
out
push
adc
mov
push
push
sbb
mov
(bad)
xchg
popa
call
mov
dec
std
push
repnz
ss
cs
(bad)
lods
cmps
add
mov
fidivr
rcl
daa
mov
imul
jp
xlat
add
in
retf
(bad)
outs
xchg
or
out
jae
daa
jno
outs
mov
inc
cmp
popf
push
push
add
mov
mov
jg
jb
mov
sbb
retf
rcl
cmps
and
dec
mov
inc
sbb
push
jno
jg
popa
lds
xchg
pop
fild
aad
test
int
in
dec
sub
mov
xor
inc
fisub
xchg
dec
in
sub
xlat
mov
ins
jo
vpsllq
pop
mov
in
outs
xchg
aas
mov
add
pop
outs
dec
into
movs
lock
(bad)
das
and
cmc
std
pop
(bad)
icebp
outs
mov
inc
mov
mov
adc
pop
hlt
in
pushf
or
add
out
lock
pop
and
pusha
cmp
fcmovnbe
sbb
add
jmp
push
out
ret
movs
and
stos
rcr
adc
xchg
in
cmc
xor
jns
inc
fiadd
ins
inc
mov
lods
aam
pushf
aaa
mov
xor
pop
dec
es
mov
rol
push
in
call
sbb
mov
mul
xchg
adc
cs
push
iret
not
js
sar
xchg
cmc
stos
inc
cld
or
mov
(bad)
icebp
imul
sti
hlt
sub
adc
ret
pop
das
movs
sbb
xchg
inc
push
in
movs
and
xor
xor
bound
and
pushf
ret
popf
sar
test
mov
in
sub
sbb
mov
mov
dec
jno
movs
cmps
xchg
rcl
sub
test
sbb
and
dec
aam
call
cmp
or
out
sub
imul
repz
or
enter
and
push
fstp
ficomp
shl
jmp
cmps
mov
aam
mov
in
push
or
add
xchg
pop
jnp
retf
mov
enter
dec
cmp
xchg
movs
out
push
jp
test
int
sbb
arpl
fsub
cmp
push
push
sahf
inc
ins
xor
xlat
cmp
inc
xor
inc
int3
mov
pop
pop
and
adc
rcr
and
add
inc
into
mov
pop
pop
or
mov
xlat
mov
out
sar
pusha
jmp
dec
mov
or
shl
and
hlt
jmp
into
mov
nop
push
adc
out
das
mov
or
into
ret
push
(bad)
jg
cli
and
ret
sar
sub
cmps
int
xchg
jae
jmp
lock
mov
mov
pop
ret
pushf
dec
fnstsw
lock
adc
rol
lahf
cmps
pop
daa
stos
mov
(bad)
lods
xchg
push
dec
or
sub
inc
ds
(bad)
pop
pop
stos
push
mov
and
dec
cld
pop
in
jmp
cmp
dec
leave
mov
aam
inc
push
jg
cmp
rcr
loope
out
idiv
into
sahf
arpl
jecxz
scas
xchg
(bad)
fwait
jmp
jns
aaa
pop
into
call
(bad)
cmp
leave
aaa
mov
jge
jle
pop
jmp
jecxz
dec
and
sti
repnz
lahf
dec
lea
test
scas
inc
dec
(bad)
in
adc
mov
jae
stos
or
dec
pop
mov
cmp
mov
ins
mov
xchg
imul
aam
pop
inc
mov
mov
mov
ftst
dec
mov
add
sbb
sar
push
jp
mov
ja
add
cld
(bad)
bound
ret
mov
xchg
xor
fild
scas
in
sub
inc
movs
push
mov
out
loop
(bad)
inc
push
jns
sub
jns
icebp
outs
popa
mov
imul
adc
sbb
in
fdivr
mov
push
xlat
inc
sub
xor
clc
jg
fsubrp
adc
div
push
pop
cdq
xor
or
mov
or
das
popf
lds
cmc
fnsave
xor
ja
or
mov
fcmovnbe
sbb
add
cmps
popa
adc
sbb
mov
xor
jno
ret
(bad)
out
or
jg
mov
cmp
sbb
fwait
lock
push
mov
sbb
xor
or
outs
jg
lds
dec
imul
dec
mov
push
mov
jl
xor
pop
push
xor
int
push
sbb
add
jg
lock
or
xchg
mov
outs
pop
and
pop
loope
mov
xchg
push
ret
ja
enter
popf
xor
call
or
stos
jmp
clc
imul
pushf
jae
jbe
push
sahf
shl
mov
into
push
push
mov
xchg
(bad)
fisttp
test
pop
mov
scas
cmp
pop
out
and
leave
daa
sbb
repz
or
loope
xor
push
lods
call
jecxz
push
mov
pusha
repz
les
inc
xchg
sbb
dec
ins
aas
jns
dec
push
xchg
sub
jle
jmp
stos
gs
mov
lods
int
(bad)
dec
ds
hlt
cmp
ror
stos
dec
js
fld1
pop
jnp
inc
jo
fnstcw
pop
and
push
test
sbb
pop
add
push
sub
dec
enter
retf
scas
rcl
retf
aas
mov
xchg
cld
inc
movs
icebp
les
mov
test
or
or
ins
or
ret
adc
out
(bad)
enter
pushf
ss
mov
scas
adc
xchg
fwait
xchg
mov
inc
add
aas
pop
jecxz
push
mov
retf
js
or
call
sti
mov
jg
scas
icebp
xchg
std
ss
inc
cmps
sbb
jle
dec
push
jns
clc
es
fldcw
push
ja
push
cs
mov
sub
inc
inc
inc
pop
mov
or
dec
test
inc
out
stos
xchg
mov
mov
sbb
rol
mov
xor
push
xchg
and
movs
icebp
popf
ins
(bad)
out
push
mov
test
(bad)
xchg
int3
in
fimul
and
dec
movs
in
sub
fidiv
mov
out
push
and
mov
das
outs
js
and
pop
loop
cmove
stos
arpl
sub
outs
jecxz
sbb
add
inc
jmp
pushf
adc
aad
and
or
mov
std
add
icebp
jae
leave
outs
fild
push
xchg
mov
scas
or
js
mov
mov
je
cli
sbb
mov
dec
fdiv
iret
out
fs
mov
xchg
cmps
sub
mov
shl
lahf
nop
jmp
inc
hlt
daa
xor
call
pop
test
loope
(bad)
mov
push
rcr
xor
push
mov
add
fwait
pop
test
inc
adc
bound
jns
jg
pop
add
scas
xchg
sbb
stos
adc
inc
and
xor
in
jecxz
int3
icebp
jp
jg
ins
das
adc
xlat
sahf
xchg
outs
test
retf
lods
sub
clc
cmp
mov
loope
std
jae
and
mov
xchg
fstp
jae
sti
push
into
fisub
pusha
in
xor
push
iret
sbb
pushf
inc
popf
sbb
mov
inc
sub
add
mov
cmp
aam
pop
jbe
std
scas
xchg
lods
loopne
fisub
jbe
popf
repnz
sti
je
adc
sbb
aas
std
xor
iret
xor
lds
add
lahf
repnz
mov
ins
dec
and
xor
js
xchg
adc
xor
or
pop
sub
and
mov
add
lods
lfence
add
jbe
(bad)
mov
jp
leave
dec
cmc
ret
cld
jo
sbb
(bad)
out
sbb
mov
into
(bad)
push
mov
jns
add
lea
pop
push
rcr
outs
ficomp
jnp
scas
lds
sti
int
or
leave
pop
xchg
jg
xor
pop
push
adc
dec
cmp
mov
ret
outs
mov
add
jnp
loop
pushf
cmps
cli
mov
scas
xor
mov
out
out
pop
int
jae
add
adc
inc
push
cmp
mov
cwde
jmp
or
mov
in
pusha
mov
aad
scas
add
data16
iret
inc
stc
repz
mov
mov
lods
mov
test
retf
cld
cmp
cmp
aas
out
mov
mov
fistp
jle
xor
push
in
je
dec
push
vsqrtsd
int3
dec
xlat
rcr
mov
cmp
outs
mov
out
sbb
adc
cmps
sub
ret
and
adc
mov
sti
clc
imul
sub
aad
push
ret
jp
jne
(bad)
adc
or
xchg
cwde
call
jge
push
in
sbb
retf
shr
xor
push
adc
imul
sub
ffree
retf
mov
jmp
push
mov
rcl
sbb
and
dec
jnp
loop
mov
aad
xor
aas
out
inc
or
dec
pop
dec
add
out
ror
lods
ins
adc
pop
imul
idiv
call
pop
inc
adc
add
jp
xlat
fsubrp
rcl
call
icebp
lods
jl
and
xchg
mov
lock
stos
and
cmp
mov
(bad)
aaa
shl
aad
push
mov
frstor
jmp
push
int3
jmp
pop
(bad)
push
pop
and
imul
sbb
pop
jns
cmp
jbe
cmp
das
rcl
ins
cmp
pop
xlat
or
sbb
outs
pusha
xor
jns
repnz
not
mov
pop
and
repnz
add
pop
aaa
dec
xor
push
arpl
popf
icebp
fistp
mov
(bad)
iret
jae
jns
scas
sahf
xor
popa
cmps
or
and
xchg
inc
inc
cmp
neg
aam
cmps
(bad)
das
mov
or
pop
pusha
movs
out
cmp
js
scas
in
lock
mov
lods
mov
jmp
or
add
iret
loop
gs
pushf
cdq
jns
out
imul
pusha
std
ins
shr
pop
lock
sub
stos
sar
and
mov
push
xchg
pop
xchg
scas
adc
dec
test
repz
movs
ins
aad
fsub
jg
mov
jbe
enter
xchg
lods
push
out
loopne
mov
push
fwait
sub
xchg
xor
imul
jl
mov
lock
shr
std
test
mov
or
out
fs
xchg
nop
push
rcr
adc
jl
sar
sub
xor
and
and
inc
repz
or
mov
mov
cwde
or
sub
(bad)
icebp
pop
pop
mov
mov
dec
and
mov
xchg
sub
cs
cwde
retf
pop
fist
cld
dec
sub
dec
in
mov
mov
pop
mov
and
xor
gs
imul
mov
sub
jl
popf
daa
mov
xchg
xchg
lds
sub
std
es
or
pop
cmp
push
cmp
push
sahf
xchg
add
cdq
mov
daa
mov
push
gs
push
cmp
sahf
sub
xchg
fucomi
pop
and
and
js
out
jne
test
pop
sbb
cmp
movs
(bad)
popf
inc
mov
xor
cmp
test
jecxz
out
sub
xchg
jno
and
fst
loopne
fwait
or
ins
shl
call
and
retf
aas
jb
push
jmp
nop
mov
xor
outs
or
mov
sbb
mov
retf
jnp
xchg
adc
cmp
mov
jo
pop
(bad)
xor
in
dec
inc
sbb
popa
dec
ret
add
shl
pop
mov
push
into
cmps
nop
aad
(bad)
cwde
lods
and
shl
je
cli
out
adc
mov
mov
rcr
jmp
push
rcr
(bad)
ret
stos
cdq
or
stc
out
out
xchg
or
or
shl
not
lock
push
mov
and
mov
loopne
(bad)
enter
push
xor
leave
test
mov
jge
push
mov
sub
push
icebp
push
pop
pop
pop
les
add
jo
add
daa
and
pusha
jmp
and
push
fmul
or
adc
sbb
jnp
adc
xlat
xchg
(bad)
xchg
arpl
test
sub
shr
push
retf
loopne
pop
sti
dec
push
sbb
retf
pop
rol
ins
adc
mov
aas
dec
xor
mov
and
mov
(bad)
out
psrlw
xchg
dec
(bad)
(bad)
mov
and
dec
dec
jle
cmp
pop
push
imul
or
in
adc
cmps
and
cli
shl
movs
call
es
mov
popa
cs
sub
leave
mov
push
mov
xchg
xchg
cmp
inc
jg
nop
jns
sbb
jl
lds
adc
in
int
mov
xchg
sbb
repz
mov
mov
pusha
xchg
pop
inc
mov
xor
rcl
jno
outs
(bad)
mov
ror
adc
sahf
cmps
or
fnsave
repnz
or
and
cld
xor
xchg
mov
cmp
inc
mov
jns
mov
cld
sub
(bad)
int3
adc
jns
adc
aam
mov
ret
shl
jno
cmp
fnstcw
mov
stc
xchg
push
jmp
and
imul
xchg
fld
(bad)
and
shl
clc
jnp
inc
lock
push
sar
cdq
mov
pop
cmps
int3
mov
imul
adc
dec
push
and
xchg
mov
xor
ret
adc
dec
cli
arpl
mov
out
fsub
cmps
cmp
fcomp
inc
test
ret
jno
(bad)
enter
shr
mov
dec
inc
out
jnp
dec
stc
lods
push
mov
rol
pop
or
aaa
test
fnstenv
mov
mov
stos
mov
and
mov
lahf
jno
jmp
lock
mov
fcomp
mov
rcr
cli
push
shl
ror
movs
fs
es
inc
rcl
(bad)
and
add
dec
lock
lea
pop
cmp
mov
icebp
lods
or
jmp
dec
shl
xchg
movs
cwde
test
test
int3
xchg
cmp
cmp
xchg
shr
pop
scas
outs
pop
movs
pushf
cld
icebp
lahf
jecxz
popa
pop
lock
into
not
imul
sub
jb
jnp
jbe
retf
out
leave
jecxz
and
aaa
jo
bound
out
jbe
or
sbb
mov
jne
xchg
out
mov
xchg
cmp
fist
and
rcl
jnp
xchg
dec
std
push
ret
sub
out
cli
fsub
push
int3
mov
call
dec
(bad)
sbb
push
pop
adc
repz
lea
pushf
sbb
and
mov
inc
mov
aad
pop
mov
push
fstp
fistp
xchg
out
outs
inc
adc
xor
cdq
cmp
xor
push
and
dec
retf
cmp
mov
mov
push
gs
adc
mov
fistp
mov
cmp
adc
repz
vpsrlq
(bad)
lds
ret
mov
outs
and
push
sub
test
mov
frndint
cld
sbb
or
jb
daa
loope
adc
xchg
(bad)
leave
xor
sub
ss
mov
pop
pop
or
push
movs
push
adc
jmp
dec
add
and
adc
cli
mov
cmp
xchg
call
jo
add
mov
mov
dec
out
xchg
push
sub
pop
bound
add
mov
xor
sbb
test
jl
aam
(bad)
shl
pop
jle
cmps
(bad)
pop
fidiv
pop
mov
jae
pop
jae
enter
js
cmps
xor
data16
xchg
(bad)
imul
xchg
outs
mov
jno
mov
xor
dec
mov
shl
into
jae
ins
inc
fdivr
push
rol
in
cmp
push
ucomiss
in
mov
push
push
xor
clc
test
mov
cmp
xchg
xchg
xchg
xor
pop
adc
ret
bound
in
sbb
lahf
test
mul
xchg
sub
push
cmps
jle
cdq
cmp
outs
retf
inc
test
or
dec
leave
xor
test
inc
push
sbb
imul
aam
xor
ret
cld
jb
int
sub
in
loop
ja
cli
popa
in
inc
fcom
sub
dec
data16
xor
ins
fdiv
mov
mov
fwait
mov
and
cli
popf
out
arpl
stos
fdiv
add
xor
pop
mov
test
mov
(bad)
aas
xchg
loopne
in
mov
mov
mov
xor
sub
ror
sbb
and
lods
test
inc
(bad)
xchg
daa
add
mov
sub
cmp
add
cdq
mov
inc
dec
or
std
(bad)
cmp
mov
leave
push
or
mov
lock
and
scas
(bad)
xor
(bad)
clc
std
repnz
adc
test
clc
enter
mov
add
cwde
cmp
adc
jae
sbb
pop
out
sbb
cmc
movs
fbld
iret
std
add
ret
mov
leave
dec
out
mov
inc
sbb
pop
leave
cdq
mov
popf
dec
cmp
je
jmp
test
inc
repz
jnp
pop
push
in
sbb
aam
fld
ins
jo
fcmove
dec
xchg
clc
pop
mov
mov
outs
jecxz
scas
jns
push
cdq
(bad)
and
xor
ficom
pop
jmp
push
shr
jp
sbb
mov
loope
mov
sbb
aas
ins
aad
inc
aaa
sub
push
mov
jo
jne
dec
jnp
sahf
jbe
dec
enter
stc
lock
jmp
bound
add
mov
mov
push
retf
imul
sub
push
ret
xor
neg
pop
and
jmp
pop
loope
out
cmp
inc
daa
popa
into
icebp
push
shl
leave
push
mov
dec
push
(bad)
out
shr
out
test
scas
mov
push
fisttp
sbb
mov
xchg
daa
jno
jmp
jo
and
sub
mov
xchg
add
xor
jnp
lock
jg
dec
retf
outs
rcl
adc
jo
mov
pushf
mov
sbb
imul
repz
and
cmps
inc
add
fdivr
popf
imul
and
call
imul
clc
adc
add
imul
in
jbe
je
pop
and
sahf
or
push
stc
inc
sbb
in
into
sbb
fidiv
mov
int3
inc
push
cmp
les
in
sub
pcmpeqw
test
cli
adc
icebp
add
cmp
cmp
sub
ds
mov
movs
fs
xchg
mov
mov
fs
call
ja
mov
xchg
cmc
js
xchg
leave
and
push
pop
test
jne
and
int
add
popa
cmp
or
cmp
lock
dec
inc
push
mov
jbe
pop
int3
daa
jle
sub
sub
out
add
dec
lahf
imul
lahf
mov
pop
fidivr
pusha
xchg
popf
or
fld
inc
mov
push
in
push
inc
cmps
mov
das
loope
mov
mov
dec
les
aas
jo
loope
pop
fisub
lods
push
sub
and
call
xchg
mov
lahf
adc
outs
inc
inc
inc
add
push
sti
and
(bad)
in
sbb
mov
adc
(bad)
and
ds
fisttp
repnz
vunpckhpd
das
jmp
mov
jbe
push
cli
test
(bad)
push
ret
push
clc
jge
aaa
cld
cmp
pop
popw
shr
mov
out
in
xchg
mov
in
call
adc
mov
and
xor
xor
test
inc
movs
clc
xchg
jnp
xor
bound
mov
xchg
pushf
add
dec
cmp
ss
arpl
retf
enter
add
addr16
add
push
mov
mov
ins
push
lods
ins
nop
sti
cld
movs
and
hlt
scas
add
addr16
add
pop
jb
pushf
xchg
scas
ss
jns
fldenv
adc
cmc
add
nop
cmp
je
pop
xor
imul
gs
outs
rcr
not
std
jo
push
xchg
pop
sbb
xchg
jb
mov
or
mov
push
pop
push
mov
xor
or
pop
mov
retf
jnp
cwde
pop
dec
inc
push
dec
cs
cld
leave
dec
sub
fdiv
push
sub
adc
mov
ins
pop
mov
loop
adc
out
and
lods
inc
fild
out
(bad)
sbb
test
ds
jne
and
dec
add
in
mov
mov
hlt
add
pusha
sbb
jae
lods
adc
lods
jecxz
cmp
inc
fidiv
ins
xchg
div
xchg
dec
ficomp
xchg
ret
in
dec
jle
das
sbb
xor
aaa
mov
das
dec
xchg
ret
add
stos
enter
adc
jnp
or
je
pusha
cld
or
imul
xchg
jg
jnp
cld
fldcw
mov
aam
and
or
(bad)
xchg
jge
push
add
fiadd
movs
mov
dec
fnsave
daa
repnz
sbb
cmp
jmp
(bad)
imul
sub
dec
mov
sub
mov
xchg
add
imul
int3
lea
pop
daa
jmp
inc
retf
push
shl
pop
jge
jbe
push
pop
jnp
pop
mov
js
fsubr
mov
mov
nop
sub
cmp
cld
pop
cdq
adc
das
add
adc
sbb
out
and
adc
ins
dec
inc
cdq
mov
out
pop
fcomi
repz
jbe
dec
test
call
fs
fld
(bad)
imul
bnd
mov
push
fnstsw
mov
mov
xor
cmps
fwait
adc
ja
ja
shr
in
ror
jge
xor
sbb
sbb
dec
adc
nop
sbb
sbb
test
stos
mov
sub
or
in
inc
je
rol
xor
xor
test
push
push
sub
aas
mov
xor
push
movs
mov
or
push
push
inc
aas
jmp
iret
(bad)
push
inc
imul
mov
xchg
cmps
dec
mov
xor
ja
cli
stc
test
ins
push
je
outs
jno
or
addr16
and
enter
or
sub
xor
stos
into
aas
and
or
mov
call
jnp
retf
mov
stos
push
aas
xchg
(bad)
push
fprem1
test
sbb
in
xchg
mov
or
pop
cmp
adc
rcr
mov
jle
shl
sbb
jae
sub
pop
outs
mov
in
pusha
ins
fmul
jns
add
and
cmp
cmps
mov
daa
pop
ins
mov
clc
in
mov
push
lea
outs
retf
add
mov
aas
xor
mov
sub
mov
in
ins
sbb
arpl
push
psraw
and
scas
adc
pop
std
and
jmp
pop
cmp
mov
mov
pusha
add
push
cmps
rcr
adc
in
push
leave
aaa
mov
mov
mov
jmp
mov
stos
jo
inc
nop
jge
add
cmp
rol
sub
sub
jg
pop
mov
add
test
mov
xor
cwde
pop
or
test
movs
rcl
sbb
xor
sbb
fnstcw
popf
xchg
mov
xor
or
mov
test
repz
jmp
stos
xor
(bad)
addr16
inc
cmp
xlat
push
out
or
mov
test
retf
(bad)
test
cwde
mov
test
in
jo
or
arpl
xor
cmp
adc
xchg
ds
(bad)
push
shl
aaa
fadd
out
inc
cli
and
retf
and
test
mov
arpl
stc
mov
sub
jno
cmp
dec
dec
dec
sbb
cmp
repz
retf
mov
test
jns
adc
jbe
gs
cmps
xor
popf
sub
iret
(bad)
lock
fst
xchg
xchg
ret
jle
fwait
dec
pusha
adc
or
jg
std
lds
xchg
xor
push
xchg
xor
je
daa
call
pop
mov
adc
add
sub
jge
mov
mov
pushf
inc
les
mov
jo
stc
pop
push
mov
pop
cmps
pop
cmp
jb
aaa
(bad)
adc
mov
movs
jl
rol
lock
adc
adc
adc
dec
outs
cmc
and
fistp
xchg
mov
and
ja
fist
arpl
mov
aas
jno
dec
shl
pop
leave
sbb
adc
mov
test
and
leave
inc
dec
add
mov
xchg
adc
push
pop
mov
push
(bad)
aad
push
adc
pop
push
sbb
popf
lods
rcr
lea
clc
inc
xor
push
in
mov
fistp
sbb
dec
push
cmp
mov
into
into
xor
jo
fwait
aad
clc
inc
xchg
sbb
mov
xchg
lea
mov
addr16
pop
and
ret
cmp
iret
or
cmp
push
aaa
jmp
ins
cli
mov
adc
sahf
push
and
test
in
xchg
mov
retf
add
push
aad
push
mov
addr16
shr
inc
dec
iret
jmp
cmp
cmp
dec
mov
iret
inc
jo
imul
retf
xchg
outs
leave
lea
mov
cmc
call
jmp
clc
cs
dec
es
add
add
add
aaa
mov
jb
sar
and
pop
loope
xchg
(bad)
sub
adc
ror
ins
leave
cmp
mov
pop
jle
sahf
sbb
and
sub
hlt
pop
sub
fiadd
sbb
xchg
mov
call
xor
mov
push
movs
inc
sbb
and
mov
dec
in
inc
into
lea
xchg
imul
adc
push
jne
push
das
mov
add
shl
ficom
sti
cmc
inc
mov
outs
loope
and
mov
push
aaa
pop
mov
shr
mov
xchg
loopne
push
pusha
push
imul
mov
repz
out
loopne
cmps
dec
and
inc
aad
repnz
and
loop
in
ins
call
inc
pusha
fcom
inc
in
cmps
ret
xlat
js
mov
rcl
cmp
cld
cmp
test
fsub
push
cld
sub
gs
add
inc
cwde
and
adc
mov
mov
push
sbb
add
cmp
(bad)
cld
repz
adc
sbb
aas
pop
lods
push
push
inc
lods
mov
mov
fsubr
addr16
mov
adc
ds
iret
icebp
repnz
sahf
leave
sbb
sub
push
inc
test
inc
push
push
push
cmps
xchg
inc
sar
jbe
test
cs
push
je
cdq
in
fwait
cmc
dec
or
mov
mov
jnp
and
imul
xlat
shr
scas
sub
or
imul
push
add
inc
push
outs
stos
mov
bswap
nop
jmp
mov
xor
enter
jae
lods
xchg
(bad)
dec
mov
daa
pop
adc
repz
dec
and
and
fist
pop
sbb
sahf
shr
mov
mov
idiv
(bad)
int3
pop
ret
mov
push
ins
outs
and
push
sub
push
gs
enter
addr16
stos
sahf
dec
iret
mov
dec
push
pop
adc
xchg
xlat
test
push
loop
mov
xchg
fadd
stos
pop
push
pop
or
aad
pop
outs
jl
xchg
mov
fwait
sbb
xchg
push
gs
pop
dec
(bad)
add
(bad)
mov
enter
adc
dec
or
in
xor
out
push
fistp
cmp
fs
add
mov
into
gs
pushf
fcmovb
xchg
std
mov
jl
add
lea
pop
push
mov
push
mov
lea
push
ins
inc
cmp
jg
sub
retfw
daa
or
ss
xchg
mov
and
fadd
outs
dec
jl
cmp
adc
arpl
ja
cli
mov
adc
mov
clc
jmp
jno
iret
lods
cmps
lods
jge
(bad)
cmc
fadd
push
sbb
pop
dec
jl
adc
mov
pop
jbe
add
lahf
inc
xchg
js
push
(bad)
pushw
xchg
in
mov
push
jmp
push
jnp
mov
mov
cmp
jae
push
in
jno
jno
rcr
or
mov
xor
jle
cmps
mov
cmp
add
shl
mov
loop
arpl
push
fwait
cmp
xchg
fnstenv
push
ja
lds
loop
and
and
mov
or
xchg
test
icebp
mov
loop
fdiv
(bad)
stos
mov
js
add
inc
cmp
(bad)
pop
test
sbb
test
xor
dec
and
sbb
pop
jmp
and
rcl
jo
adc
sahf
jecxz
sub
out
stos
ins
dec
sub
fs
shl
xchg
lods
inc
push
lods
xor
not
mov
xchg
(bad)
std
ror
xchg
xchg
pmaxsw
adc
int3
cmp
ins
and
pop
jecxz
loop
popa
xlat
cmp
jl
(bad)
(bad)
jl
iret
jae
in
(bad)
jmp
and
sbb
mov
push
rol
and
and
mov
cmps
fnstcw
add
ror
xor
in
push
and
enter
cmps
pop
jns
dec
imul
cmp
xchg
(bad)
and
adc
mov
push
jmp
clc
mov
jns
lock
xor
cmp
std
call
and
or
adc
aas
xchg
jle
jns
fsub
fidiv
jne
or
pop
cmps
loopne
and
pop
retf
arpl
icebp
stc
ror
cmp
jbe
test
int
inc
jge
mov
pop
call
or
xchg
sbb
imul
or
mov
imul
test
shl
fadd
push
fsubr
mov
mov
or
push
shl
cli
call
mov
mov
pop
jno
pop
ds
sub
dec
retf
js
arpl
push
mov
pop
inc
call
loop
out
test
cmp
retf
ret
ins
sub
mov
and
add
jp
pop
sub
pop
cmps
popf
mov
das
sbb
dec
jl
(bad)
push
jbe
lods
stos
adc
fwait
mov
test
in
cmp
pusha
sbb
mov
adc
mov
js
inc
cmp
jge
or
and
(bad)
repz
rol
in
rcr
(bad)
mov
in
cmp
jle
movs
repnz
cmps
out
(bad)
mov
stc
xchg
mov
out
mov
fdiv
imul
xlat
or
dec
push
outs
enter
bound
mov
(bad)
push
daa
pop
xor
lea
and
dec
fiadd
pop
and
pop
out
sbb
or
mov
cdq
stos
sbb
adc
lds
pop
xor
das
cmp
cmp
(bad)
mov
bound
enter
fcmovne
push
scas
leave
mov
arpl
mov
sbb
sbb
enter
retf
lahf
sub
xchg
adc
(bad)
(bad)
mov
cmps
mov
add
adc
ja
pop
(bad)
cld
(bad)
xor
inc
jmp
xor
outs
mov
les
inc
sub
mov
std
pushf
mov
lock
mov
adc
adc
xor
xchg
iret
ds
out
jmp
xor
mov
adc
or
ins
jl
sub
sbb
jae
ds
outs
cmp
xchg
into
fwait
dec
lods
jp
sahf
mov
ds
jnp
dec
es
pop
fild
stos
mov
imul
call
out
outs
or
cmps
test
pusha
stos
movsx
add
pop
push
add
shr
imul
cmp
cli
std
inc
retf
sbb
pop
inc
mov
jae
add
adc
aam
scas
test
ds
xchg
cli
dec
add
add
jbe
mov
in
push
dec
sub
test
mov
inc
cdq
(bad)
das
(bad)
fnstcw
dec
mov
lea
dec
dec
cmp
jge
jge
sbb
pop
enter
xchg
jp
mov
into
cmp
cmp
bound
rcl
sar
std
jo
test
sbb
int
stos
bound
push
mov
aas
or
push
call
pop
inc
fisub
mov
cmp
pop
(bad)
movs
jmp
sub
or
test
inc
adc
mov
mov
into
fwait
jns
pusha
inc
retf
mov
je
dec
inc
ja
dec
not
aas
js
sbb
jecxz
dec
mov
imul
or
jns
movs
sub
ja
cmp
mov
pop
lds
mov
test
hlt
ins
xchg
adc
imul
push
dec
out
adc
cmp
add
pop
xor
data16
sub
inc
mov
jp
mov
jl
jle
cmp
mov
call
sub
and
sbb
out
(bad)
dec
call
lods
xchg
or
inc
mov
shr
adc
scas
sub
jae
push
test
or
pop
sbb
and
shl
or
inc
inc
mov
iret
mov
sub
sbb
push
enter
dec
scas
es
cli
jecxz
lea
push
cmp
sbb
adc
jg
cmps
fcmovne
inc
add
add
(bad)
(bad)
(bad)
(bad)
icebp
xor
jae
cmc
test
adc
push
imul
retf
push
repnz
retf
lds
lods
mov
mov
ret
leave
push
xchg
pop
jne
icebp
jle
mov
inc
sti
sub
pusha
push
shl
shl
or
pop
mov
(bad)
bound
jle
or
es
and
movs
inc
daa
pusha
inc
cmps
or
or
repnz
test
mov
mov
push
int3
fwait
mov
(bad)
dec
scas
sub
dec
pop
cmp
mov
test
hlt
jmp
add
rcr
hlt
je
xchg
test
and
mov
test
and
pop
lahf
inc
dec
inc
pop
inc
sbb
mov
jno
jl
push
ret
push
jmp
jmp
mul
mov
leave
inc
and
out
aad
sete
aad
out
xor
add
pop
ret
mov
pop
test
mov
hlt
(bad)
cmp
or
and
mov
mov
(bad)
adc
cmc
xchg
stos
cmp
and
mov
adc
mov
fld
mov
mov
fwait
sbb
(bad)
mov
push
movs
push
dec
lods
out
push
xor
xor
xchg
sti
lahf
sbb
xor
fidivr
xchg
test
cld
pop
aaa
ret
ss
sub
sub
loopne
jae
push
mov
lock
mov
movs
ret
dec
xor
stc
adc
ins
mov
je
mov
push
push
fadd
shl
dec
xchg
mov
ror
push
jo
fstp
cmps
xchg
adc
cmp
pop
int
stc
test
stos
jl
lea
adc
jmp
xchg
jmp
mov
cli
jge
sti
inc
lds
movs
lea
lahf
push
cmp
cdq
mov
icebp
mov
icebp
dec
add
rcl
aam
cdq
or
fcmovnbe
xor
rcl
ds
cmc
jmpw
shl
push
jns
bound
lock
rol
outs
test
enter
mov
test
imul
aad
(bad)
xchg
mov
or
aas
aaa
lods
cmp
fs
sub
add
jb
bnd
inc
sahf
jbe
sbb
stc
add
mov
loopne
fcomp
add
cs
retf
cmp
nop
adc
sub
mov
cmp
mov
es
scas
repz
mov
mov
sub
sahf
fwait
cli
mov
jns
xor
mov
jmp
jl
mov
mov
pop
inc
imul
fwait
lds
div
sbb
add
xor
leave
push
stc
inc
push
push
outs
ins
jo
data16
int3
adc
mul
js
push
out
test
mov
sub
sub
mov
add
out
adc
icebp
mov
lahf
rol
stc
add
jne
xor
cdq
and
cs
loopne
dec
adc
mov
xchg
movq
xchg
das
(bad)
das
fldenv
mov
mov
xor
add
cmp
not
inc
ror
shl
int3
xchg
add
inc
sub
pop
cmps
into
add
xlat
bound
push
cmp
pop
cmp
ret
stos
std
xor
fld
dec
mov
(bad)
jmp
push
xchg
pop
mov
and
loopne
mov
stos
iret
jp
div
aaa
es
idiv
sbb
inc
sbb
inc
mov
lea
cmps
push
js
dec
cmp
stos
dec
add
or
stc
lahf
loopne
test
lods
fnstenv
in
mov
dec
pusha
imul
cli
pop
or
sub
lods
dec
mov
inc
inc
lock
out
jmp
sub
and
inc
pop
push
xchg
inc
and
ret
loop
shl
xchg
cmp
jnp
loope
jns
add
les
xchg
mov
push
adc
adc
sbb
xchg
sbb
push
iret
dec
ds
jg
xchg
pop
cmps
jbe
add
pop
shl
push
dec
cmp
xor
mov
jnp
cmps
add
pop
scas
sbb
jb
scas
aam
jge
mov
sbb
sbb
inc
or
adc
adc
cld
stos
out
outs
inc
or
pop
push
or
cmp
pop
push
iret
push
pop
sti
xchg
popa
push
out
pop
cmc
xchg
lods
mov
movs
push
retf
(bad)
fadd
movs
ffreep
dec
adc
lds
dec
xchg
cmp
popf
pop
xchg
fwait
daa
ret
cmc
add
dec
shl
in
jns
push
fsubp
outs
push
leave
es
xor
xchg
out
adc
ss
pushf
adc
and
mov
push
cmc
pop
or
gs
lods
push
xor
sbb
mov
or
mov
jle
pop
iret
movs
push
dec
adc
shl
std
jmp
ds
cld
pop
mov
hlt
adc
jno
clc
sbb
fwait
movs
mov
add
and
(bad)
fisubr
or
frstor
mov
sbb
int3
lea
sbb
in
test
mov
or
xchg
retf
jg
cmp
dec
test
aam
dec
aad
inc
fisubr
out
ins
loopne
(bad)
test
out
push
movs
fdiv
jne
push
fnsave
cmp
mov
rcr
add
adc
push
and
ja
jmp
idiv
sbb
push
call
jns
jmp
ret
push
gs
sti
mul
(bad)
bound
mov
push
rol
mov
jmp
lock
shl
jmp
push
jg
loope
(bad)
jmp
mov
dec
and
(bad)
and
loopne
mov
xchg
iret
sbb
stos
mov
cmp
aaa
push
fisub
push
loope
sub
mov
fnsave
pop
ficomp
mov
jnp
aad
lods
addr16
cwde
ret
repz
imul
mov
adc
rol
adc
push
mov
jnp
mov
xchg
mov
mov
loopne
ss
call
bound
jg
ds
push
stos
in
out
mov
inc
je
movs
inc
dec
loopne
mov
mov
retf
fnstenv
jno
xchg
mov
xor
shl
sbb
dec
fcomp
jle
pop
sbb
mov
lods
(bad)
div
in
into
jmp
test
jp
or
daa
fwait
(bad)
in
and
push
aad
inc
jo
in
push
xor
test
sub
repnz
fs
push
and
aaa
les
push
and
rol
mov
pop
adc
shr
shl
jl
bound
daa
bound
cmc
sub
fldcw
dec
clc
or
jnp
cmps
mov
das
shl
jmp
jecxz
idiv
xlat
xchg
dec
mov
jg
push
repnz
arpl
pop
jb
jne
sub
idiv
sub
push
dec
inc
inc
scas
add
idiv
mov
jne
sbb
(bad)
outs
adc
inc
sub
xchg
lea
mov
dec
mov
neg
and
mov
aaa
inc
and
jl
jmp
push
icebp
add
push
loopne
mov
push
lods
and
outs
data16
mov
sbb
sub
cmp
xchg
fs
lahf
ret
inc
pop
nop
inc
dec
push
ret
je
imul
dec
aam
mov
(bad)
mov
mov
cdq
test
pop
cmovb
pop
out
cmp
ficom
test
cmp
xchg
push
xor
jmp
cmp
dec
sub
mov
(bad)
shr
scas
mov
popf
xchg
das
(bad)
int3
adc
mov
cmp
push
xchg
push
adc
mov
lods
push
jmp
nop
imul
out
(bad)
fadd
sub
or
adc
mov
inc
repz
out
stos
in
mov
adc
out
dec
popa
ins
in
std
fstp
bound
in
xchg
call
outs
cmp
xchg
jne
xchg
xchg
repnz
fsubr
outs
idiv
std
sub
cdq
add
sbb
add
adc
adc
jmp
adc
ja
pop
xchg
ret
inc
mov
test
outs
pop
les
pop
loopne
aam
lahf
loopne
push
ins
enter
shl
(bad)
pop
lods
mov
xchg
mov
adc
sub
in
sub
mov
mov
jnp
jecxz
outs
push
scas
cmp
mov
add
sbb
rol
mov
clc
leave
sbb
inc
pop
fild
xor
push
cmp
or
mov
mov
loopne
sub
xchg
xchg
dec
in
call
cdq
xchg
outs
xchg
cmps
out
sbb
add
dec
daa
xor
pop
xor
push
and
fmul
test
pop
repz
shr
mov
mov
jle
push
lea
outs
xchg
daa
cmp
repnz
fist
sahf
inc
sub
sub
ss
fchs
push
jb
int3
fld
xchg
jge
and
mov
push
in
sub
pusha
jge
xchg
ret
dec
jno
lea
mov
shl
xchg
sbb
mov
addr16
mov
enter
loopne
fcomp
movs
leave
imul
xor
and
mov
xchg
jmp
ins
jne
les
or
or
enter
xor
sbb
int3
stc
push
adc
je
cs
sbb
cld
adc
mov
dec
arpl
enter
xchg
or
dec
call
xor
push
int3
test
pop
cld
push
and
cmp
sub
test
jmp
adc
cmc
loop
mov
fs
mov
xor
ins
pop
jl
movs
loope
adc
sar
cmp
jbe
clc
jns
sub
aas
call
push
and
fidivr
pop
nop
cdq
xor
xchg
pop
(bad)
pop
and
(bad)
mov
aad
jnp
jo
fdivr
lock
add
(bad)
in
inc
mov
mov
push
mov
and
xchg
aad
fidivr
je
xchg
or
mov
mov
lods
sbb
sbb
inc
out
cmp
ret
cmp
push
sbb
mov
xchg
repnz
pop
cmp
outs
jp
enter
inc
jmp
int
iret
popa
cmps
daa
int3
sbb
sbb
retf
in
adc
cs
push
cmps
mov
loope
fild
lds
out
adc
and
fs
xor
fistp
scas
(bad)
cmp
dec
dec
retf
inc
enter
jmp
div
sti
mov
xor
push
jmp
mov
call
sbb
cmp
cli
test
icebp
add
fbld
xor
mov
push
sub
dec
pop
sub
jmp
stos
pop
scas
int3
test
daa
or
(bad)
xor
push
jmp
ror
xor
sbb
bound
jge
dec
jmp
jmp
es
stos
xchg
mov
sbb
into
push
mov
gs
dec
stc
push
sub
and
movs
mov
stc
pushf
mov
adc
push
mov
add
sub
or
in
cmp
xchg
in
lahf
(bad)
xor
js
pop
sbb
adc
xor
push
ja
out
jge
jmp
call
mov
sub
dec
nop
int
adc
aam
pop
stos
popa
cmps
mov
dec
nop
dec
cmp
cmp
mov
call
fcomp
mov
fnstsw
add
add
sub
les
arpl
jbe
mov
(bad)
cwde
ffree
jle
dec
xor
lock
rcr
popa
pop
hlt
push
aas
mov
jbe
inc
pop
in
lds
mov
and
sub
das
inc
sbb
addr16
add
fcmovb
mov
jae
xchg
inc
ret
xchg
pushf
test
push
xchg
mov
push
ret
mov
mov
cmp
mov
cdq
test
or
mov
retf
mov
mov
rcr
fsubr
lods
mov
mov
push
xchg
xchg
or
adc
cli
cli
and
aam
adc
rcr
inc
push
dec
jno
xchg
(bad)
mov
xor
xlat
ja
ins
loop
inc
popa
(bad)
mov
and
int
push
ins
jge
shl
sub
dec
sbb
dec
mov
pinsrw
and
adc
das
pop
popf
cmp
xchg
xor
stos
jl
shr
lahf
mov
sub
stos
add
outs
cmp
cld
mov
push
ds
out
jne
inc
pusha
lds
cmp
mov
inc
sbb
xlat
push
lds
int
test
fcmovnb
jecxz
dec
sar
cwde
or
push
mov
add
mov
mov
retf
(bad)
cld
mov
dec
iret
mov
fcmovnu
xchg
pop
mov
mov
xchg
push
mov
fnstsw
mov
fwait
popf
jp
(bad)
cmp
jmp
or
mov
test
inc
xchg
not
pop
push
mul
pop
retf
mov
pushf
(bad)
mov
push
into
and
dec
jno
lods
or
lods
outs
lahf
jb
cmps
retf
pop
aam
repz
or
sbb
lahf
outs
sbb
in
js
jmp
and
cmovg
int
cdq
xchg
mov
xchg
std
(bad)
aam
cmp
into
or
fcomp
mov
fldcw
xchg
push
lods
mov
mov
pop
loopne
neg
mov
lods
dec
jnp
sbb
and
test
sar
aam
push
jg
out
push
ror
lock
icebp
fidiv
mov
pop
repnz
movs
pop
mov
outs
cmp
dec
into
sbb
shr
or
sub
fst
dec
repz
call
popf
push
ret
loope
in
mov
aam
pop
cli
sbb
test
xor
jg
jle
xchg
scas
fimul
cmp
sqrtps
fdiv
jno
pop
pop
lods
cs
push
pop
daa
pop
(bad)
mov
ins
jp
enter
jbe
jmp
sub
push
jbe
jle
pop
jl
(bad)
jb
lds
pop
imul
outs
in
popa
adc
cmp
sub
movs
(bad)
cmps
in
int3
fnsave
xchg
enter
inc
push
retf
fcmovnb
inc
jmp
add
outs
xor
addr16
mov
xor
cmp
pop
lea
pop
pop
cld
add
arpl
pusha
jg
mov
hlt
fist
or
add
arpl
mov
aam
xchg
mov
adc
punpckhwd
fnsave
not
in
push
fnstenv
(bad)
mov
les
and
dec
cmp
movs
jle
and
inc
push
call
jmp
fldlg2
cmp
aaa
(bad)
mov
arpl
shl
and
xchg
mov
and
push
jnp
jmp
jmp
aad
dec
test
cmps
stc
adc
mov
pop
js
(bad)
es
aam
push
not
jb
dec
repnz
repz
(bad)
fwait
int3
jecxz
aad
test
sbb
mov
xchg
mov
inc
sub
fst
cmp
push
stos
adc
in
ja
(bad)
in
and
mov
out
loope
mov
add
mov
cs
outs
fisttp
mov
xor
in
aaa
jbe
sbb
out
into
jecxz
sub
mov
sub
mov
pop
bound
sbb
cmp
push
lods
(bad)
mov
mov
aas
retf
mov
out
xor
pop
cli
fiadd
sub
inc
push
pop
idiv
add
pop
repz
cli
fsubp
neg
repz
pop
xor
push
sbb
or
rcr
cld
in
pop
xor
xor
mov
xor
ins
sbb
jmp
call
scas
cmp
sbb
jmp
xchg
sbb
stos
fild
add
adc
popf
test
mov
jns
sbb
pop
out
xlat
jbe
add
push
pop
cmp
ret
fxam
sti
div
icebp
pop
mov
jmp
outs
pop
cmp
std
mov
pop
std
inc
push
xchg
test
cmp
jb
mov
xor
psubd
stc
js
mov
cs
mov
xchg
es
sbb
clc
call
fldcw
mov
fild
push
nop
cdq
push
adc
je
mov
mov
pusha
stc
sbb
sbb
fistp
sbb
fmul
int
out
outs
ss
lea
sub
mov
out
mov
cli
lods
push
in
test
add
movs
cmp
mov
pusha
push
cmc
mov
xchg
pop
popa
not
xchg
push
ret
xchg
jle
addr16
adc
fdivr
lahf
sub
sub
and
jnp
mov
mov
add
shl
mov
dec
stc
popf
sub
call
scas
pop
fimul
pop
lahf
adc
out
das
jmp
mov
retf
dec
adc
xchg
lahf
push
sbb
or
cld
call
mov
mov
psrlw
shl
cmp
jecxz
repnz
cmc
icebp
xchg
dec
xchg
jmp
jmp
adc
ret
sbb
xchg
mov
xor
inc
xchg
jp
mov
or
push
cmp
out
inc
dec
test
cld
mov
(bad)
push
dec
leave
out
dec
(bad)
mov
jnp
xlat
imul
push
xchg
sbb
xor
(bad)
fwait
lods
sub
cmp
jnp
adc
pop
mov
push
mov
mov
fxch
xor
pusha
sbb
mov
jmp
cmp
scas
fidivr
dec
xchg
push
mov
or
pop
cld
call
adc
push
movs
adc
scas
and
sahf
(bad)
fs
leave
lods
fdivr
jae
jp
sub
fist
jne
iret
sbb
fnsave
mov
sar
js
out
shl
repz
jl
iret
dec
imul
jmp
push
and
jecxz
push
pop
dec
push
inc
(bad)
imul
pop
add
loop
and
and
dec
(bad)
std
mov
push
mov
aad
movs
bound
or
or
outs
sub
push
jnp
mov
cmp
push
push
jl
and
int
test
fs
jne
xor
mov
pop
lds
pop
pop
hlt
jmp
jecxz
test
(bad)
test
push
mov
adc
das
xchg
mov
sbb
jnp
(bad)
xor
ds
aad
or
retf
ins
and
pop
fwait
cdq
ss
ja
nop
jns
pusha
mov
rcl
in
sbb
jne
push
jo
add
dec
sbb
adc
jle
add
mov
mov
push
inc
call
mov
xchg
dec
stc
jl
xchg
push
dec
and
mov
mov
jmp
sbb
mov
sub
xchg
ret
daa
arpl
call
fdivr
arpl
mov
pop
adc
fs
jmp
push
mov
mov
cmp
psubsb
lods
xchg
retf
fldcw
cmp
push
in
jg
retf
call
push
scas
push
lods
xor
push
std
lock
sbb
pop
cmp
mov
cmps
fbld
stos
(bad)
hlt
inc
push
mov
retf
dec
in
or
sbb
stos
(bad)
mov
adc
cmp
mov
sbb
pop
call
push
add
inc
xor
cmps
hsubpd
(bad)
iret
jnp
xchg
or
pop
pop
sbb
scas
jmp
movs
stos
in
add
xchg
adc
pop
enter
jae
out
mov
cmc
inc
sub
sub
nop
dec
repz
out
lods
jmp
cli
dec
push
(bad)
cmp
or
dec
shl
outs
pop
sahf
sbb
cwde
das
mov
test
mov
xchg
mov
or
pop
out
sub
test
jle
push
adc
pop
pop
push
xor
cmps
adc
lods
xchg
imul
dec
popf
popa
jl
xor
out
ret
inc
and
inc
xchg
scas
cmp
scas
dec
outs
mov
sar
fisubr
adc
scas
loopne
test
jecxz
fst
div
(bad)
jle
jae
jp
or
jmp
mul
pusha
adc
jge
test
(bad)
jp
cmp
mov
xchg
sbb
sbb
sbb
or
inc
jno
xchg
fcmovnbe
xchg
or
mov
push
adc
push
loopne
cmc
mov
rol
call
dec
mov
call
jl
repz
outs
pusha
or
pop
add
sbb
adc
aas
fadd
xchg
jmp
(bad)
aam
fcomi
mov
cs
sti
or
imul
stc
mov
(bad)
jnp
rcl
xchg
rcl
jle
sub
je
cwde
and
or
mov
push
ror
add
hlt
cmp
call
iret
ins
out
xchg
xchg
dec
sbb
mov
mov
ins
aas
adc
push
fwait
(bad)
push
xor
loope
inc
cmps
test
dec
fisttp
fs
pushf
test
enter
inc
cmp
xchg
sub
jle
sti
stos
pop
cmps
jne
retf
fs
cmp
jecxz
cmps
cmp
fild
hlt
fisttp
dec
jecxz
push
xchg
fcmove
pop
jmp
(bad)
mov
test
iret
sub
xor
jae
jecxz
or
push
mov
std
mov
arpl
leave
push
dec
cmp
shl
dec
lahf
std
pop
jo
adc
out
pop
cmp
jae
or
dec
dec
mov
dec
lahf
arpl
pop
and
test
sti
sbb
lahf
in
and
jno
sbb
call
pop
mov
out
ss
pop
outs
dec
inc
pop
lea
or
jb
xor
not
test
je
sub
jb
sti
(bad)
(bad)
cmps
cmp
into
jnp
ja
fsincos
or
(bad)
sbb
mul
xor
mov
mov
and
imul
leave
mov
mov
push
aam
dec
sub
mov
or
xor
sahf
popf
in
add
sub
xchg
jp
mov
ja
mov
in
xor
add
stc
fistp
ss
cmp
jmp
cmc
ds
sbb
pop
bound
push
imul
cdq
cld
mov
pop
call
ret
or
pop
add
outs
lods
js
jge
adc
enter
(bad)
mov
sti
idiv
das
mov
shl
cwde
inc
and
lahf
sahf
imul
mov
nop
pop
jmp
pusha
icebp
(bad)
pop
mul
je
or
jo
mov
ds
xchg
jecxz
and
mov
xor
push
xor
mov
jne
sub
aaa
jnp
mov
neg
push
jmp
ret
adc
dec
pop
das
mov
sbb
jmp
mov
pop
and
cmc
mov
dec
mov
xchg
cmovno
push
fnstenv
push
rol
outs
mov
cmp
jecxz
es
loop
test
aas
inc
xor
in
out
gs
push
push
outs
sbb
pop
data16
int3
sub
mov
jnp
sbb
fs
shr
inc
push
or
mov
cdq
popf
fdiv
jnp
and
ss
xchg
and
out
aad
(bad)
push
adc
mov
add
or
cmps
cs
pop
iret
push
aas
scas
inc
xchg
je
loop
cmp
test
outs
push
mov
jbe
add
mov
pop
fild
ficom
pop
ss
sahf
popa
mov
pop
mov
add
push
adc
or
pop
movq
ss
ret
xor
ret
jl
aaa
pop
sbb
mov
inc
int3
ror
push
es
addr16
outs
hlt
jnp
scas
jle
sbb
inc
lods
not
dec
dec
lock
jnp
jne
dec
les
and
pop
dec
mov
(bad)
neg
jae
ins
sahf
es
mov
push
push
dec
xchg
sahf
pop
mov
je
pushf
mov
jbe
xlat
xor
fwait
pop
xchg
cmp
sbb
mov
and
mov
push
mov
mov
inc
mov
sbb
bound
fs
xchg
loop
inc
jp
(bad)
das
xor
adc
jle
test
inc
add
scas
jb
rol
out
jne
ins
imul
stc
(bad)
jl
(bad)
lea
adc
push
je
mov
retf
inc
out
iret
(bad)
sub
loop
and
das
add
test
ficom
add
pop
jmp
push
xchg
fbstp
aas
sbb
and
mov
inc
mov
mov
adc
call
or
push
es
std
add
xchg
les
imul
sar
repnz
cmp
cmps
sbb
xor
add
sub
jecxz
ret
ror
xor
lea
call
sub
in
aaa
ret
mov
mov
(bad)
pop
out
fdiv
dec
bound
iret
div
add
js
and
adc
adc
shl
push
sti
xchg
imul
ret
push
enter
mov
pop
push
xchg
add
pop
sbb
pop
dec
out
or
jp
mov
pushf
adc
je
push
in
mov
sub
mov
inc
push
ds
push
fmul
aad
popa
fisttp
enter
aad
lds
fiadd
xchg
push
popa
je
push
pop
push
push
aas
cs
jbe
out
and
out
cmp
push
rcl
int3
sbb
and
bound
pop
inc
mov
jl
push
ins
test
push
mov
pop
jns
dec
jo
test
(bad)
aam
je
stos
lahf
ss
movs
je
jne
(bad)
xlat
sbb
rcr
xor
scas
xchg
es
out
popa
lea
clc
iret
cmp
mov
popa
mov
xchg
retf
sub
stos
out
js
mov
jg
adc
cmp
inc
retf
cmp
jle
pusha
je
cli
shl
mov
mov
cs
in
cdq
sbb
lods
push
fisttp
mov
repnz
dec
dec
pop
rcr
pusha
cli
push
fisttp
mov
jecxz
push
jne
rol
or
fwait
popa
sub
ds
push
dec
and
cs
xor
shl
leave
fwait
inc
push
jae
nop
cs
imul
stc
pop
mov
lea
int
ror
fwait
xchg
cmp
cwde
test
hlt
aas
int
aam
imul
sbb
loope
inc
lds
fldenv
out
add
jmp
mov
jmp
sub
cmp
push
xor
out
test
add
int3
lds
aam
jns
mov
pusha
dec
cmp
outs
sbb
add
and
xor
and
es
mov
push
es
inc
mov
and
scas
add
xor
ret
loopne
icebp
pop
and
xchg
icebp
lds
ds
jnp
mov
jae
pop
sahf
ficom
mov
lea
call
out
mov
xor
imul
lea
gs
popa
scas
pop
dec
fidivr
in
xchg
pop
lods
cmp
scas
pop
in
ins
sar
test
sub
mov
mov
jmp
or
sbb
mov
rol
push
adc
ret
mov
push
je
jne
and
fs
cmp
cdq
adc
icebp
sub
inc
aas
mov
cmp
push
dec
jae
jge
sub
and
xor
aad
pop
test
push
xchg
adc
aaa
int
ret
mov
jg
add
pop
in
mov
or
sub
loopne
and
dec
inc
inc
pop
(bad)
sub
ret
dec
sbb
mov
jp
pop
outs
xchg
xchg
in
or
dec
mov
push
xchg
pop
(bad)
(bad)
adc
mov
arpl
mov
ins
call
ins
movs
fldl2t
sbb
jb
into
sub
psubusw
fbstp
pop
nop
add
jne
cmc
pop
movs
leave
jge
xchg
(bad)
nop
ja
fisttp
ss
pop
test
push
mov
or
mov
cs
mov
pop
jne
(bad)
hlt
mov
dec
fisttp
out
cmp
dec
rol
es
inc
std
xor
xchg
pop
sub
adc
mov
xchg
mov
imul
inc
jmp
cmp
xor
shl
fsub
lods
xor
mov
add
out
inc
cmp
lea
fisub
mov
push
call
cmp
out
sub
dec
inc
es
repz
daa
push
in
pop
mov
ss
sbb
mov
inc
sbb
adc
aaa
and
push
cmps
mov
xchg
sub
xor
mov
mov
mov
retf
cdq
ret
call
cmp
loopne
bound
jle
dec
std
pop
rcr
inc
stos
fldenv
xchg
int
imul
cld
or
mov
jecxz
pop
adc
sub
add
cmp
fldenv
cmp
pop
jecxz
add
mov
jle
cmp
int
jmp
jmp
out
mov
cmp
(bad)
aaa
fwait
(bad)
aam
and
or
in
std
push
retf
jmp
jmp
adc
inc
pop
bound
add
mov
pop
cmp
push
int3
push
pop
cmp
sar
jns
add
je
sti
movs
icebp
retf
ss
int
out
pop
cli
rcl
ds
(bad)
fsubrp
sub
add
cmc
sub
push
cmc
xor
ror
and
shl
sbb
lea
cmp
push
fldenv
cwde
into
sub
pop
dec
or
fnstsw
jo
out
(bad)
sub
out
mov
mov
mov
daa
cmps
adc
mov
test
mov
cmp
sti
out
and
mov
dec
sbb
mov
icebp
mov
popf
cdq
xor
mov
in
je
or
push
sub
mov
xor
imul
pop
nop
mov
xor
das
mov
imul
push
mov
jmp
inc
cmp
and
test
(bad)
in
push
push
out
jmp
or
mov
mov
mov
push
xor
mov
jle
xchg
dec
push
popf
dec
dec
ret
repz
je
es
or
les
(bad)
repnz
fwait
imul
aam
rol
xchg
ja
mov
cld
cmp
mov
in
and
xchg
sahf
test
int3
or
or
out
push
sar
popa
loop
sbb
sbb
dec
retf
jmp
ins
or
mov
sub
sbb
pop
fsubr
inc
add
dec
push
add
fs
add
outs
inc
xor
ja
(bad)
imul
mov
rol
mov
loop
pop
mov
push
xor
frstor
enter
sahf
pop
mov
lods
jmp
add
lock
adc
adc
lods
push
xchg
push
call
shl
test
lock
repnz
(bad)
mov
sti
dec
retf
jmp
cmps
into
sub
lds
push
cmp
and
rcl
mov
icebp
push
mov
jbe
out
xchg
iret
int3
loop
and
push
ins
loope
adc
mov
in
xchg
enter
lods
sti
mov
cmp
nop
ror
push
in
push
jecxz
xor
inc
and
push
inc
cli
mov
(bad)
dec
xchg
add
imul
jge
xchg
cmp
pushf
sti
mov
ror
les
push
scas
xchg
jnp
dec
inc
stc
sbb
cmp
test
sub
test
push
test
fadd
in
shl
add
ds
push
push
cpuid
adc
xor
ds
punpcklwd
dec
mov
push
cs
enter
mov
pop
mov
push
outs
sub
push
gs
jmp
jge
and
arpl
out
sub
fwait
shl
mov
mov
mov
addr16
fwait
mov
pop
sbb
je
retf
movs
mov
test
push
inc
cs
mov
xor
inc
jg
aas
imul
repnz
sub
scas
xor
aad
push
enter
movs
shl
mov
adc
inc
xor
xor
mov
pop
mov
imul
mov
mov
add
fwait
jl
ret
or
mov
cmps
iret
cmp
mov
icebp
dec
push
xchg
enter
adc
(bad)
jecxz
jo
jae
cmp
mov
pop
int
jp
xor
(bad)
fsub
xchg
jb
in
or
jae
dec
mov
cmp
add
sbb
repnz
gs
inc
adc
mov
scas
scas
jge
push
out
lahf
xchg
adc
fisubr
xchg
inc
cmp
or
sub
sbb
dec
jb
sbb
adc
mov
movs
pop
loop
mov
mov
mov
dec
mov
lock
movs
jp
jbe
inc
pop
jno
daa
mov
js
jbe
jp
pop
das
test
pop
jo
ins
(bad)
repnz
or
call
sahf
icebp
and
or
fs
mov
mov
pop
rcl
icebp
js
aaa
cmp
jbe
xchg
ret
daa
daa
and
push
adc
add
les
and
mov
ins
push
pop
cli
adc
sbb
adc
pop
pop
imul
and
fs
or
out
push
mov
outs
cmp
fistp
je
mov
add
inc
jp
xor
sub
es
dec
ficom
inc
sub
mov
mov
xor
pop
push
and
leave
fisttp
add
xchg
nop
dec
popa
stos
les
test
fwait
push
jmp
ins
pusha
dec
or
inc
lods
mov
push
out
add
push
ret
(bad)
jns
add
mov
mov
mov
dec
js
not
push
mov
aad
out
mov
in
push
jp
and
or
inc
xor
mov
ds
pop
in
xchg
pop
es
in
aas
jmp
pop
rol
fcomp
icebp
mov
test
add
out
movs
add
cmps
add
and
sti
mov
inc
icebp
jmp
je
pop
popa
mov
sar
pop
ret
jl
add
mov
cmp
xchg
mov
sbb
dec
jmp
push
xor
add
in
rcr
push
out
mov
cmp
lea
mov
ja
not
adc
dec
inc
jecxz
dec
and
adc
mov
mov
jne
xor
push
nop
or
fisttp
mov
movd
mov
push
inc
and
sub
xor
sub
jne
sub
or
cmps
jo
xchg
jbe
sub
add
inc
es
jb
fistp
into
sub
xor
push
stos
std
mov
cmp
lea
and
shl
imul
dec
pop
cwde
cmps
add
push
xchg
mov
mov
fucom
les
addr16
outs
enter
fdivr
(bad)
hlt
retf
pop
cmp
mov
fisttp
add
aam
push
xor
mov
sbb
pop
push
(bad)
mov
fld
push
mov
and
ficomp
dec
or
inc
jmp
add
push
int
adc
cmp
fstp
or
dec
fcomp
test
in
inc
mov
and
add
inc
mov
lock
dec
popa
out
cmp
xor
sub
add
jno
cmp
cmc
inc
inc
dec
addr16
pop
sub
test
(bad)
stc
outs
xor
retf
cmps
push
loope
sbb
push
lds
outs
lea
sub
in
mov
push
lock
in
addr16
and
pop
pop
push
adc
jge
je
popa
xlat
leave
jge
xor
sahf
jo
pop
out
ret
mov
int3
std
add
popf
mov
jl
inc
pop
(bad)
scas
xchg
ret
test
mov
repnz
xchg
(bad)
jg
jbe
inc
cmps
test
loopne
sti
iret
mov
sti
in
pusha
sbb
and
jmp
or
xchg
push
test
xchg
iret
mov
mov
jo
(bad)
xor
ret
mov
push
clc
daa
(bad)
and
pop
mov
std
ins
dec
movs
pusha
ja
retf
test
shl
xor
or
jbe
mov
call
out
dec
in
dec
pop
dec
es
jge
enter
lock
sar
add
unpckhps
sub
mov
cdq
push
xor
stos
inc
lea
retf
lea
movs
rcl
je
and
mov
(bad)
ficom
cmps
sahf
or
inc
pop
or
push
sub
mov
mov
(bad)
(bad)
dec
ret
mov
psubusw
ja
xor
data16
movs
jo
adc
mov
cmps
(bad)
and
je
sahf
sbb
inc
sbb
mov
push
or
ds
jecxz
nop
or
scas
inc
adc
dec
sbb
icebp
enter
dec
in
fcomp
ins
or
sbb
sub
mov
add
movs
daa
push
sbb
ret
lods
enter
cmp
mov
retf
clc
inc
mov
mov
repz
out
jmp
and
test
pop
inc
lods
clc
(bad)
and
pop
fsub
das
std
je
fld
xor
out
les
mov
or
(bad)
stos
es
nop
out
in
js
and
mov
or
daa
jp
cmp
repz
(bad)
into
mov
pminub
ffreep
out
push
out
in
outs
and
mov
(bad)
aad
test
mov
std
or
ds
mov
mov
xchg
aad
sub
pop
and
rcr
fidiv
jae
mov
sub
xor
mov
ins
and
cmp
push
xchg
(bad)
xor
mov
(bad)
mov
dec
scas
fidiv
and
cmp
push
xchg
mov
pop
and
cmps
ds
out
lea
cld
lods
or
mov
pop
das
ins
mov
dec
mov
std
hlt
pop
jg
jmp
outs
pop
test
cs
jmp
aas
test
mov
adc
and
inc
leave
popf
out
bound
dec
add
stos
lea
add
(bad)
out
jno
retf
int3
loope
movs
sbb
test
lahf
mov
mov
stos
mov
outs
jne
int
dec
mov
sbb
sar
es
pop
mov
and
adc
retf
in
adc
mov
cmps
sbb
mov
push
fdivr
mov
not
push
imul
add
and
out
js
cmps
mov
rcr
jb
sar
push
mov
mov
pop
movs
(bad)
adc
or
mov
out
fdiv
add
mov
clc
gs
xchg
call
mov
mov
in
test
retf
inc
into
gs
xor
dec
outs
mov
mov
loope
dec
pop
jo
arpl
mov
xchg
xor
daa
mov
in
cmp
mov
sbb
jnp
pop
jnp
dec
movs
xor
out
pop
and
scas
fisubr
and
xor
xchg
pop
adc
and
shl
int
cmp
jo
sbb
jno
cmps
or
and
dec
push
add
inc
push
enter
mov
loopne
mov
xchg
dec
mov
cmp
mov
ins
ror
lock
sbb
fdivrp
fdivr
xor
xor
leave
call
aaa
mov
sbb
fiadd
or
mov
dec
adc
pushf
cmp
and
xor
xchg
inc
mov
cmc
popf
nop
jge
mov
push
add
push
xchg
ror
push
fistp
mov
faddp
sub
dec
cmp
cmp
xchg
xor
mov
ror
sar
add
pop
adc
cld
test
mov
or
inc
xchg
icebp
sbb
stc
xchg
xor
push
jo
adc
xlat
cdq
(bad)
push
cs
push
das
mov
mov
jp
mov
lds
enter
xor
in
movs
pop
mov
pop
(bad)
scas
stc
call
push
(bad)
in
inc
retf
pop
test
lock
xor
jno
cs
push
add
mov
mov
push
xchg
pop
pop
mov
popf
lods
sbb
push
or
ds
xor
aas
mov
xor
add
sub
cdq
ja
cmps
jmp
or
mov
ret
sbb
imul
xchg
js
aas
xchg
data16
test
ficomp
or
mov
and
inc
inc
push
scas
ds
call
mov
fwait
mov
fisttp
cmps
ret
je
pop
ds
fst
xchg
or
push
out
aam
enter
push
(bad)
cmp
(bad)
mov
mov
sbb
ret
test
shr
xchg
sbb
iret
cmp
inc
xchg
adc
daa
dec
jae
pop
shl
inc
pop
xor
(bad)
mov
lods
idiv
(bad)
enter
es
mov
int3
sub
jno
or
push
enter
or
dec
dec
inc
call
cli
shl
(bad)
cli
mov
std
popf
ds
stos
aaa
out
and
stos
mov
adc
xlat
mov
mov
mov
fsubr
shr
and
dec
cmp
mov
dec
ins
jo
jg
xchg
pop
inc
in
out
push
fist
cmp
push
jge
in
cmps
iret
xchg
sub
sbb
dec
fwait
add
jae
in
(bad)
jno
lahf
call
enter
pop
lds
(bad)
lock
aad
push
cmp
out
add
adc
dec
dec
mov
xor
cmp
mov
in
out
(bad)
jmp
sbb
mov
scas
and
out
outs
xchg
pop
mov
inc
sub
inc
pop
mov
pusha
daa
(bad)
pusha
xchg
imul
sub
retf
push
sub
test
push
mov
mov
dec
adc
int
fdiv
mov
lods
sbb
or
in
sub
popf
jmp
les
or
push
fwait
cli
push
icebp
jmp
sar
sub
cmp
(bad)
loopne
icebp
jge
pushf
mov
inc
int3
inc
call
cdq
clc
int3
pop
fs
(bad)
and
loop
push
cmp
les
retf
out
jno
mov
mov
push
mov
adc
in
(bad)
xchg
dec
in
scas
pop
into
add
cmp
dec
js
movs
cmps
push
xchg
cdq
outs
and
pop
xor
sub
rol
push
add
outs
(bad)
fsub
jb
dec
adc
mov
jne
(bad)
movs
push
das
cwde
sbb
or
ja
push
ins
lock
lods
push
imul
cmps
sbb
stos
std
lods
dec
cdq
sti
push
push
in
repnz
stc
mov
cli
div
rcr
fwait
sbb
adc
ins
push
jae
ret
mov
mov
pop
cdq
xchg
inc
cmp
inc
jb
shr
mov
test
xchg
push
mov
or
pop
fild
push
mul
mov
sbb
call
out
mov
js
ret
adc
add
jbe
push
mov
fdivrp
or
cmps
inc
xchg
mov
arpl
xchg
mov
jp
aam
in
mov
add
sbb
mov
out
or
imul
addr16
push
ror
rcl
mov
(bad)
leave
adc
pusha
scas
leave
or
jmp
add
inc
jo
cwde
fwait
cmps
xchg
ficomp
(bad)
adc
in
push
addr16
jmp
inc
int3
loope
sub
in
iret
or
dec
push
mov
ins
dec
xchg
xor
jns
xlat
dec
pop
(bad)
fiadd
lahf
sbb
out
sahf
add
mov
ror
sbb
call
leave
adc
jle
sub
push
push
clc
sahf
cwde
loop
mov
je
(bad)
and
push
scas
push
lods
pop
xor
pushf
lods
mov
repnz
lahf
mov
inc
and
aaa
stos
jne
mov
xchg
xor
jl
pop
adc
mov
fstp
fsub
enter
mov
inc
sub
leave
mov
cmp
pop
sbb
leave
cmp
adc
pushf
jbe
ja
xor
ja
cdq
loop
pop
stos
pop
ficom
in
sub
mov
inc
and
shl
fwait
cdq
rol
push
add
inc
xor
je
aad
adc
leave
ror
push
mov
sub
push
sbb
cmp
sbb
test
mov
leave
cmp
add
mov
les
sbb
pop
pop
mov
js
imul
push
ror
adc
dec
leave
fisub
jmp
(bad)
dec
lods
and
pop
xchg
cld
cmp
jl
sahf
dec
pop
push
es
call
jmp
cld
inc
data16
and
fucomp
xor
and
addr16
hlt
cmp
lds
inc
pop
pop
in
cmc
out
mov
cmp
adc
aas
fisttp
aaa
dec
xor
xchg
dec
jp
add
add
das
repnz
xor
aad
out
aam
lahf
ret
ins
ds
inc
xchg
inc
mov
xlat
and
mov
out
call
push
cmps
lock
clc
outs
or
movs
mov
adc
mov
fucomp
sbb
ds
in
loopne
cmps
neg
and
add
out
jbe
test
sub
scas
fadd
mov
ror
sbb
jle
xchg
jp
scas
or
or
xor
xchg
imul
cmp
pop
sub
movs
mov
mov
dec
jmp
rol
cmp
cmp
call
and
jo
and
arpl
out
or
cmp
int3
fldcw
adc
retf
fdivr
fwait
jmp
gs
(bad)
aam
mov
mov
sar
in
jg
mov
psubsw
mov
popf
adc
out
sub
cld
mov
sbb
xchg
push
fsubp
adc
loop
es
mov
pop
xlat
fwait
loope
cmp
lds
adc
xchg
movs
add
and
lock
imul
push
lods
add
shr
mov
fiadd
std
movs
sbb
xor
aad
dec
int
ins
movs
fwait
push
out
je
nop
xor
add
mov
dec
fst
cmp
dec
ror
dec
sub
stos
leave
outs
mov
call
push
pusha
sub
aad
popa
push
xchg
jl
push
dec
leave
cs
jo
push
xor
ins
sbb
cmp
jmp
lea
sub
cmp
les
call
dec
std
ja
mov
aas
and
cmps
jbe
and
push
inc
in
popa
jnp
push
hlt
gs
movs
gs
stos
xchg
jp
sub
and
xchg
inc
mov
pushf
sub
add
(bad)
xor
sub
repnz
push
daa
pop
sbb
jp
jo
adc
inc
mov
add
jl
(bad)
push
dec
aad
xchg
jns
sub
(bad)
cs
test
sub
repz
in
mov
pop
jecxz
add
push
dec
leave
imul
and
xchg
xchg
repnz
(bad)
jnp
rcr
outs
ins
xor
shr
idiv
adc
push
add
movs
dec
jp
fsub
scas
je
cmp
ret
mov
cmp
push
(bad)
mov
and
inc
lods
out
push
mov
std
inc
popa
mov
cdq
xor
mov
pop
inc
fadd
bnd
outs
in
shl
or
rcl
mov
cmp
rcr
fdivr
inc
lock
les
imul
jb
xor
fs
arpl
pop
xor
sti
mov
aas
ins
add
std
movs
movs
inc
rol
mov
lea
bound
xor
push
jb
mov
pushf
scas
ja
and
ret
pop
icebp
or
jno
xor
jge
rcr
cmp
pop
call
hlt
pop
xchg
stc
test
inc
loop
cli
fbstp
adc
test
and
inc
jl
or
les
cli
lea
mov
call
add
adc
mov
jbe
scas
ret
loope
push
(bad)
ds
pop
jnp
sti
cmc
push
clc
sub
mov
vpmaddwd
in
aam
das
jbe
sbb
and
into
mov
nop
inc
xchg
movs
rol
iret
jle
xor
stos
pop
mov
popf
sub
clc
aad
add
in
sbb
retf
fidiv
loop
xchg
cmp
jmp
or
ret
sar
lods
push
sub
(bad)
(bad)
mov
nop
mov
bound
(bad)
cmp
inc
sub
xlat
sub
fdiv
gs
outs
inc
mov
es
dec
outs
cmp
add
lock
push
inc
sub
stos
popa
inc
push
add
lock
movs
add
rcr
push
sbb
daa
aad
sbb
add
fisttp
in
xchg
call
(bad)
in
in
add
int
mov
xor
ret
xor
pop
int3
mov
jbe
cmp
mov
pop
das
or
xor
ins
test
test
(bad)
movs
xor
xchg
add
test
cmp
iret
fsubr
and
sbb
push
jb
jmp
dec
std
in
loope
mov
jmp
daa
adc
inc
ror
pop
push
mov
mov
pop
nop
adc
and
popa
call
retf
popa
dec
mov
sbb
jns
pop
aaa
jne
fdivr
dec
push
lods
dec
data16
scas
outs
fsubr
pop
and
nop
mov
mov
pop
retfw
sbb
in
pop
jb
ins
push
dec
sbb
sub
xlat
mov
inc
(bad)
inc
push
xor
ins
fdivr
out
inc
cmp
enter
test
sar
leave
pusha
cli
or
sub
inc
jp
mov
mov
(bad)
js
cmp
out
fst
(bad)
mov
icebp
push
es
adc
(bad)
and
pop
cmp
mov
jnp
scas
sub
into
add
aam
inc
call
push
scas
cmp
test
outs
icebp
cmp
inc
scas
cmp
xor
push
xchg
clc
jns
ins
inc
or
fcmovne
xchg
and
adc
in
rol
shl
scas
mov
sbb
sbb
adc
aam
inc
dec
ins
xor
leave
mov
lods
je
pop
jns
mov
mov
mov
popf
js
sar
mov
clc
jmp
pop
repz
push
test
(bad)
jl
sahf
fnstenv
aad
loope
movs
mov
cmova
je
retf
and
pop
and
ret
shl
(bad)
loope
xchg
cli
pop
jne
mov
cmp
pop
test
cwde
into
and
cmps
inc
and
inc
add
mov
pop
sub
fwait
pop
pop
out
int
dec
jp
xor
nop
jbe
adc
int3
out
sahf
dec
(bad)
inc
lock
push
add
cdq
push
loop
dec
or
cmp
add
jg
faddp
add
repz
in
fisubr
xchg
pop
push
pop
lea
cmp
in
icebp
shr
in
mov
addr16
(bad)
in
hlt
inc
out
and
ss
fsub
nop
cs
hlt
lods
push
dec
jmp
(bad)
cmp
data16
inc
not
cmp
aas
ins
in
add
mov
cmp
mov
aaa
icebp
push
aaa
cdq
daa
je
add
nop
outs
stos
add
out
mov
xor
and
xor
in
in
jno
cld
fsubr
push
cmp
mov
imul
addr16
mov
icebp
push
or
ror
sbb
add
test
les
dec
jge
dec
cs
xlat
sbb
push
pusha
jbe
emms
inc
xor
push
dec
xchg
outs
xor
into
repnz
xchg
fs
imul
test
dec
mov
lahf
mov
dec
stos
pop
mov
cmp
xor
jmp
sbb
jae
outs
sbb
stos
dec
ds
(bad)
aad
stos
or
mov
cmp
ja
jae
add
test
hlt
pop
push
fisub
inc
dec
cmp
(bad)
push
mov
ins
sub
or
push
pop
dec
mov
pop
lahf
lock
test
out
repz
jb
mov
aad
jns
sbb
daa
cmc
arpl
xchg
icebp
data16
or
scas
mov
in
jmp
sbb
test
cwde
fimul
pop
mov
xchg
sbb
aaa
jo
push
mov
push
mov
add
in
adc
dec
in
or
popa
sub
mov
pop
stc
call
out
xchg
add
or
cmp
mov
loope
mov
add
mov
out
adc
ins
lock
mov
aad
mov
push
adc
test
ret
stc
movs
adc
cmp
int3
jns
dec
cwde
pop
imul
xchg
mov
push
out
(bad)
add
adc
icebp
out
loopne
retf
adc
imul
out
int
sub
push
sub
clc
std
jne
mov
or
add
cmp
shl
add
dec
mov
jle
rol
in
xor
loop
fbld
(bad)
and
neg
jp
dec
bound
pop
jmp
sub
mov
rol
and
clc
lock
mov
mov
ins
sti
es
push
cwde
jb
cdq
pop
retf
(bad)
aaa
lds
inc
into
out
sbb
fiadd
push
or
sti
out
cmp
and
push
mov
in
in
and
scas
xor
xchg
cs
loop
aas
push
in
jl
sahf
fld
sub
in
fwait
sbb
and
xchg
and
sub
cmp
repz
pop
jo
push
pop
jnp
jge
mov
lock
mov
clc
pop
jno
dec
ins
xchg
adc
sbb
mov
data16
jnp
bound
sbb
test
popa
fdivr
int
fsubr
jl
adc
es
fwait
xchg
jbe
in
xchg
pushf
inc
(bad)
je
xchg
jne
call
popf
jmp
mov
test
adc
outs
cmps
mov
push
or
ret
lods
int
mov
sub
les
inc
scas
and
cdq
arpl
mov
or
bound
mov
mov
xlat
rcr
cmps
nop
pop
xor
xlat
or
adc
mov
jg
iret
nop
int3
out
mov
outs
(bad)
dec
rol
pushf
and
ds
sbb
add
lods
rol
(bad)
sbb
mov
or
dec
aaa
jmp
or
pop
or
and
or
jmp
adc
mov
mov
push
cmp
and
pop
push
shr
xlat
fldenv
cwde
lea
aad
test
push
(bad)
jmp
or
sbb
(bad)
addr16
in
xlat
add
xchg
das
push
mov
int3
outs
mov
shl
out
add
cmp
ror
ins
inc
and
sub
cmps
fcomp
push
ret
jmp
xchg
or
cli
addr16
pop
call
ins
in
inc
test
call
jle
mov
add
je
jp
dec
out
cmp
adc
add
pop
mov
pop
adc
add
(bad)
sbb
jge
imul
call
or
add
jge
and
lock
(bad)
(bad)
jge
mov
hlt
cmp
pop
fcmovnbe
pop
out
push
cs
pop
stc
and
aad
jl
ins
movs
aam
popf
mov
push
dec
or
pop
pop
fcomp
test
mov
jge
push
(bad)
loopne
mov
xor
sbb
ja
fidiv
lahf
mov
xchg
add
ja
dec
shl
int3
sbb
add
popa
mov
push
jmp
jp
jae
out
pop
dec
cmps
sbb
imul
dec
sahf
gs
mov
jnp
aas
cmc
ss
pop
push
pop
lods
es
fwait
daa
daa
add
aam
jmp
iret
shl
push
fild
test
pop
jns
sbb
sbb
and
retf
call
mov
xchg
and
in
pop
iret
cmp
outs
jmp
sbb
or
out
js
mov
fisttp
or
mov
fsub
lea
(bad)
cmp
jae
cmp
cdq
mov
xchg
sub
mov
jo
fadd
jns
lock
pusha
add
mov
inc
jae
dec
xor
push
loop
mov
mov
or
mov
imul
clc
mov
inc
pop
clc
mov
rol
or
mov
or
arpl
and
push
jnp
pushf
add
in
std
gs
mov
test
sub
test
ret
clc
xlat
sahf
and
lock
cmps
clc
pop
sub
mov
xor
mov
pop
or
lea
pop
inc
xor
out
ret
test
stos
int
xchg
retf
sub
test
jb
cs
shr
retf
push
mov
dec
inc
fcomp
inc
pop
push
cld
shr
outs
push
int
aaa
and
leave
repnz
pushf
(bad)
pop
les
aad
push
jmp
push
test
popf
jb
dec
xchg
sub
in
fstp
pop
push
inc
stc
retf
mov
pop
ret
in
pop
xor
fisubr
bound
movs
cwde
mov
xor
loop
mov
push
mov
(bad)
dec
scas
int3
mov
mov
or
dec
rcl
lahf
mov
js
jge
retf
xor
fild
xchg
pop
stc
jg
pop
aaa
mov
sub
repz
xor
enter
iret
xor
sbb
aas
add
dec
mov
pusha
push
ds
xchg
les
repz
fs
scas
adc
push
inc
pop
sbb
push
leave
out
movs
hlt
outs
clc
ror
adc
push
(bad)
into
call
sbb
pop
jmp
xchg
stos
test
sbb
xchg
push
jno
sbb
aad
dec
call
xchg
push
leave
and
fimul
jmp
inc
xchg
fisttp
cs
cli
push
js
adc
xor
pop
je
rcr
cmp
les
jns
test
push
rol
pop
push
or
xchg
aas
cwde
out
aaa
movs
fisttp
pshufw
(bad)
adc
dec
sub
pop
sbb
clc
sbb
cwde
mov
outs
lahf
pop
retf
pushf
or
or
push
popf
fwait
jmp
mov
shr
dec
mov
in
clc
mov
test
movs
push
add
outs
int
xchg
hlt
into
xchg
les
rcl
loop
xor
add
cs
retf
cdq
out
(bad)
push
loop
movs
enter
inc
mov
xor
mov
mov
add
cmps
out
pop
(bad)
xor
pop
call
sbb
int
dec
aam
xor
(bad)
hlt
retf
add
dec
push
xor
movs
retf
and
jo
js
imul
popf
fisubr
lds
inc
ja
pop
fmul
xchg
adc
mov
jg
rcr
sti
(bad)
lods
mov
in
mov
repnz
pushf
jbe
mov
dec
mov
daa
dec
icebp
jecxz
inc
xor
xor
dec
cmp
icebp
shl
retf
xchg
call
xchg
outs
in
dec
je
add
jmp
xchg
add
hlt
fiadd
scas
out
dec
int
sub
aas
mov
sub
inc
or
xchg
xor
retf
mov
not
(bad)
dec
fistp
outs
or
repz
sbb
sbb
inc
fistp
(bad)
popa
sub
push
jnp
gs
stc
fcmovnbe
fld
pop
out
out
ret
adc
in
xchg
retf
mov
or
sbb
and
xor
out
xchg
pop
adc
adc
or
loop
sar
in
cmps
test
je
lahf
aaa
jo
retf
arpl
adc
add
dec
inc
enter
xor
xchg
in
in
dec
lock
retf
ins
lock
rcl
cmp
pop
pop
mov
pop
cmps
fwait
and
out
(bad)
pop
pop
jecxz
mov
sub
retf
xchg
faddp
mov
icebp
in
push
jmp
dec
add
clc
in
mov
ret
mov
adc
int
and
or
sub
repnz
lods
mov
cmps
aam
jle
jg
mov
push
cmp
outs
addr16
sbb
(bad)
xor
xor
test
fiadd
xchg
sub
pop
push
cmc
push
repz
sbb
ror
retf
stos
lods
adc
loopne
out
xchg
sti
inc
jl
fild
sbb
hlt
loopne
scas
sahf
xor
xchg
int3
enter
add
or
inc
std
inc
test
mov
jle
sahf
sub
cmp
dec
adc
pop
rcl
sub
jae
fwait
das
call
in
and
bound
or
add
and
rcl
les
call
sar
mov
mov
dec
pop
pop
push
gs
popf
sbb
xchg
mov
xchg
push
dec
cmp
test
(bad)
cli
int3
mov
xor
outs
shl
push
pop
fidiv
ret
push
sti
jg
push
je
add
and
les
fisttp
or
or
mov
iret
outs
bound
fwait
jnp
lahf
sbb
inc
out
repz
test
fsub
and
xor
adc
(bad)
pop
or
sub
je
mov
es
pusha
xor
sahf
ins
pushf
loopne
xchg
jne
jge
and
lock
pop
xor
icebp
sub
lds
sbb
add
inc
ret
push
sub
sar
retf
pop
les
push
push
cmp
les
lods
and
loope
dec
mov
xchg
adc
push
sbb
cmp
imul
dec
and
movs
push
sbb
div
mul
or
sbb
ret
dec
xchg
mov
sub
fisttp
xchg
lea
fnsave
scas
push
mov
or
mov
test
(bad)
jo
and
out
or
adc
js
sub
jo
(bad)
lahf
pop
stos
sub
scas
xor
inc
xor
inc
data16
test
inc
adc
mov
xor
shr
adc
aaa
popf
test
cs
in
push
ss
pop
lea
inc
jmp
jb
inc
dec
inc
rol
fld
pop
add
jmp
pop
jp
pop
inc
pop
lock
inc
pop
xchg
cs
jp
loope
in
fstp
sub
es
movs
push
jb
mov
in
(bad)
mov
adc
call
cmps
jb
jo
clc
pop
in
xchg
mov
dec
pop
mul
rcl
jo
ja
jno
aad
cli
mov
repnz
loop
daa
and
push
cmp
jecxz
lds
les
mov
pusha
ret
cli
stos
lods
fmul
cs
sahf
push
mov
mov
adc
xor
aam
into
inc
jl
pop
or
or
jmp
push
mov
loop
arpl
jbe
clc
cs
inc
outs
cmp
out
fcmovnu
push
dec
(bad)
stc
and
shl
and
add
arpl
sbb
clc
xlat
std
xor
sbb
jp
lods
arpl
mov
popa
xchg
xchg
fsub
retf
hlt
es
test
jne
cli
mov
xor
dec
xchg
sbb
mov
adc
test
aaa
push
inc
adc
xor
bsr
(bad)
inc
or
test
bound
imul
or
add
inc
retf
(bad)
lods
test
xchg
movs
int3
pop
mov
mov
dec
mov
add
inc
fidiv
jnp
mov
xor
mov
out
in
sbb
and
outs
mov
push
int3
xlat
pop
das
xchg
sbb
add
mov
inc
mov
add
inc
dec
mov
lock
ja
(bad)
push
(bad)
push
mov
push
push
repnz
arpl
pop
loopne
push
mov
sbb
ins
lock
out
add
or
sub
out
push
ins
cmp
add
pop
pop
(bad)
jecxz
test
dec
lds
and
mov
fwait
cwde
jno
sub
add
add
in
rcl
seto
pop
movs
fld
sbb
leave
xchg
jb
in
je
or
adc
adc
data16
lods
je
loop
sub
push
add
and
call
pop
pop
imul
sbb
out
sbb
jecxz
mov
cmp
retf
pop
add
test
aad
sub
mov
pop
sub
mov
or
enter
add
pop
sbb
mov
push
fistp
add
scas
pop
cmps
sar
call
cli
mul
repnz
dec
aad
mov
fild
jo
xchg
adc
aas
jmp
loopne
mov
dec
jp
adc
and
iret
out
mov
out
comiss
in
inc
test
sub
or
cs
jmp
mov
pop
sub
retf
loop
call
fst
push
jmp
jg
mov
sub
or
dec
scas
mov
add
movs
sbb
sbb
inc
in
xchg
jmp
xchg
gs
or
inc
push
scas
pop
mov
inc
stos
loope
jge
ins
push
shl
and
mov
mov
xor
mov
ds
into
and
and
lock
xchg
dec
arpl
add
scas
xlat
adc
add
test
sbb
jmp
xor
push
test
cmp
aaa
or
or
cdq
clc
and
aaa
jmp
das
adc
push
sbb
mov
fwait
mov
inc
not
jle
psubq
vmovss
inc
in
cdq
aam
imul
mov
stos
scas
pop
enter
adc
mov
gs
sbb
stos
jle
push
aam
das
push
jge
stos
(bad)
sbb
enter
int
frstor
test
cwde
push
fbld
sub
std
ror
imul
dec
cmp
cmp
sbb
mov
pop
xchg
popa
dec
and
pop
mov
xchg
(bad)
repnz
in
pop
out
sub
mov
mov
lahf
inc
arpl
xor
add
rcl
(bad)
or
and
push
push
sbb
mov
loop
stc
mov
ss
xor
mov
mov
inc
outs
(bad)
fnstsw
mov
repz
add
in
push
shr
into
movs
pushf
add
mov
clc
sub
cmc
mov
(bad)
xor
cmp
add
xchg
sub
mov
test
lds
jne
test
inc
inc
imul
mov
scas
inc
pushf
sti
(bad)
mov
cmp
into
lock
inc
ins
cmps
test
xchg
popf
(bad)
mov
sbb
or
sahf
clc
in
mov
cmc
cld
sti
push
stos
jmp
mov
dec
jno
sbb
retf
aad
inc
fwait
in
retf
pop
cmp
sti
daa
mov
sub
add
(bad)
mov
fs
pusha
xor
jne
mov
inc
les
pop
ss
clc
in
sbb
mov
shr
jg
mov
cmp
ucomiss
push
sub
and
dec
ror
pop
cmp
inc
inc
adc
out
sbb
push
dec
dec
out
push
iret
jl
pop
into
test
dec
les
jbe
add
call
push
xchg
ret
imul
popf
pusha
jl
and
mov
jg
in
xor
(bad)
fistp
add
inc
out
repnz
pop
push
gs
jnp
xchg
push
mov
pop
and
in
(bad)
jl
mov
fisub
xchg
sub
jmp
dec
sbb
mov
fldcw
and
outs
push
int3
cmp
add
jne
mov
mov
jmp
jnp
mov
inc
data16
dec
rcl
rcl
mov
into
dec
repnz
or
cmp
xor
xchg
xorps
repnz
push
sbb
(bad)
jne
pop
inc
pusha
xor
cmps
retf
je
cmps
inc
pop
popa
sbb
jne
jmp
ret
arpl
inc
lea
push
mov
mov
pop
lock
cmp
pop
sar
icebp
mov
addr16
loope
rcl
arpl
mov
lds
pop
mov
mov
adc
sub
xchg
mov
cmc
int3
imul
mov
cmps
addr16
jno
ss
inc
sub
pop
rcl
add
loope
xchg
mov
xchg
pusha
in
cmp
xor
cmp
sar
cmc
cdq
loop
shl
cmp
push
cmp
in
add
in
pop
inc
idiv
(bad)
dec
xor
or
mov
mov
push
ss
mov
sub
pusha
lahf
mov
mov
push
pusha
dec
or
outs
sbb
shl
fist
pop
repnz
arpl
jb
jp
arpl
pop
mov
(bad)
pop
loop
lds
xor
push
mov
and
sub
(bad)
retf
daa
fst
in
mov
imul
mov
(bad)
dec
jne
or
adc
or
test
push
inc
mov
xchg
mov
ret
mov
scas
cmp
push
sar
retf
xor
lods
mov
int
dec
retf
mov
in
push
push
std
add
out
jle
mov
push
jne
inc
je
jge
jbe
icebp
test
fnsave
mov
adc
pusha
push
cmp
loope
sub
sub
pop
pop
test
dec
stos
lds
call
mov
mov
and
pop
into
(bad)
fdivr
sbb
cs
sbb
mov
dec
pop
mov
(bad)
adc
xchg
or
mov
icebp
das
shl
shr
mov
cmps
mov
test
or
push
jp
fisttp
mov
mov
dec
jnp
je
pusha
test
mov
sahf
push
and
pop
out
sti
(bad)
jno
mov
nop
addr16
data16
cmp
js
ins
movs
pop
xor
xchg
mov
inc
inc
mov
inc
jl
test
or
jo
aad
add
cwde
push
mov
scas
or
addr16
add
stos
xor
and
or
jns
(bad)
div
ret
pusha
cmp
cdq
int3
fmul
cs
and
ror
dec
dec
test
(bad)
jae
sub
fild
jg
mov
dec
jmp
outs
mov
in
ins
push
outs
aas
out
adc
sub
fstp
(bad)
out
xor
jp
loopne
popf
dec
lds
in
popf
ins
jnp
test
sti
xlat
cdq
leave
add
stos
pop
mov
mov
push
retf
(bad)
pop
or
sbb
jmp
cmp
out
mov
out
(bad)
jge
in
xchg
mov
pusha
(bad)
pushf
pop
adc
and
(bad)
xchg
popf
ss
pop
inc
or
add
inc
sbb
fiadd
xlat
out
pop
sahf
mov
(bad)
hlt
and
cmp
aam
mov
outs
test
cmp
movs
test
lods
(bad)
out
les
mov
clc
iret
push
push
inc
imul
repz
popf
dec
hlt
aaa
in
xchg
pop
xor
push
dec
push
out
mov
xchg
inc
sbb
fcomp
test
xchg
sbb
mov
fadd
jle
sub
jge
jb
push
xchg
push
jno
inc
mov
ins
movs
movs
jno
dec
push
add
mov
aas
inc
xchg
sahf
outs
pop
retf
mov
jae
sbb
xchg
(bad)
cmc
sub
push
and
adc
jl
push
jb
fcomp
sbb
shr
shl
(bad)
or
lock
and
xchg
nop
cmp
sbb
push
cdq
mov
jecxz
pusha
push
inc
imul
mov
and
xchg
push
xor
mov
cmps
shr
repz
cmp
out
pop
rcr
pushf
iret
rcr
jmp
je
pop
adc
nop
out
cmps
mov
and
or
adc
jnp
movs
push
mov
fcmovnu
dec
rcl
into
xor
stos
aaa
xchg
xchg
(bad)
fdivr
test
arpl
movs
mov
(bad)
xchg
ja
push
cmp
lahf
imul
push
or
in
sahf
inc
xor
and
jno
fstp
stos
mov
pop
add
stos
cmp
mov
ja
dec
cli
ss
ins
xor
add
pop
cmps
dec
imul
movs
into
pop
retf
dec
mov
add
inc
ins
xchg
pusha
ss
test
mov
ja
scas
stc
xchg
fistp
repz
stos
mov
adc
xchg
xchg
mov
ins
dec
fld
std
pop
jnp
test
xor
out
pop
mov
sbb
aam
arpl
jmp
cwde
ins
in
jle
mov
or
jne
enter
dec
call
inc
aaa
idiv
inc
mov
sbb
out
pop
and
je
jl
and
imul
pushf
jns
mov
pop
dec
mov
dec
in
xchg
dec
int
test
jl
(bad)
rcl
xor
lahf
cwde
and
dec
retf
lds
jg
or
jno
fst
mov
pop
outs
add
stos
mov
lds
ja
sub
adc
in
cmc
ins
fs
mov
leave
test
in
cmp
aas
bnd
and
pop
stc
push
dec
sub
fwait
sub
fdivr
inc
rcr
cmc
movs
pusha
shl
icebp
cmp
or
ret
cmp
and
cmp
mov
pop
(bad)
mov
add
mov
jmp
std
jp
aam
rcr
push
xchg
push
(bad)
lahf
add
loop
ins
inc
mov
dec
xlat
and
cmc
rcr
jo
mov
push
sti
jae
push
or
daa
(bad)
out
fstp
push
xchg
in
sbb
jg
lea
cmp
pop
ins
adc
adc
mov
adc
aam
xchg
mov
neg
iret
(bad)
emms
xor
jns
sbb
push
(bad)
mov
das
(bad)
out
outs
fisub
in
aad
jmp
and
cmp
ins
inc
xor
sbb
inc
push
cmp
inc
fcomp
stos
outs
mov
bound
mov
int
cdq
inc
fmul
inc
fst
(bad)
mov
dec
repnz
outs
add
in
rep
lahf
sub
cld
pop
mov
bound
add
sbb
retf
jo
push
mov
mov
imul
adc
movs
jbe
dec
xchg
out
nop
in
clc
pop
shl
bound
leave
stc
mov
test
inc
(bad)
dec
test
push
sub
out
sub
test
out
or
inc
add
(bad)
clc
(bad)
and
dec
mov
jne
test
ds
pop
pop
cmps
lock
add
mov
mov
imul
int
add
outs
(bad)
ret
mov
mov
mov
icebp
dec
outs
in
or
shl
push
std
mov
fst
(bad)
sti
retfw
and
or
(bad)
push
adc
cmps
or
mov
mov
pop
mov
mov
mov
push
push
jnp
mov
cmp
or
lods
in
out
shl
add
xor
mov
xor
loope
aam
in
cs
lahf
and
pushf
int
mov
add
sub
pop
test
xchg
pop
jp
or
jge
mul
cli
shl
dec
or
jmp
pop
adc
inc
adc
hlt
inc
rol
test
fld
in
(bad)
repnz
pop
and
adc
mov
push
jl
into
inc
push
jle
xor
sub
xor
retf
cmp
inc
daa
and
in
and
out
pop
push
idiv
push
mov
clc
cld
cmp
cmp
adc
clc
nop
aam
mov
int3
sahf
and
js
(bad)
sti
xchg
inc
add
jbe
mov
jns
inc
ins
pop
mov
mov
sub
(bad)
cmps
cli
xchg
xchg
add
addr16
cli
into
loope
retf
jb
fadd
or
cwde
xor
popa
adc
jno
out
push
test
xchg
sub
add
adc
das
js
shl
cmps
xchg
push
add
jnp
add
dec
mov
bound
pop
lahf
mov
or
jle
(bad)
mov
cwde
inc
push
lock
(bad)
cmp
mov
mov
sub
cmp
sub
xchg
loop
arpl
dec
pushf
ret
jns
(bad)
es
div
movs
aad
ds
mov
test
int3
int
push
ret
jle
pop
inc
push
xchg
mov
or
in
jecxz
mov
repnz
test
xchg
inc
adc
adc
loop
imul
hlt
xor
loop
add
and
jmp
movs
mov
add
sbb
pop
std
(bad)
push
scas
add
mov
mov
sahf
sub
mov
cli
nop
vpsubusw
mov
pop
in
inc
aad
imul
xchg
dec
sbb
hlt
movs
mov
loope
jns
jmp
(bad)
jmp
cdq
ror
push
ret
sysret
jnp
mov
push
test
xlat
jle
test
push
dec
test
sub
pop
cmp
push
fisub
imul
xchg
xchg
mov
scas
sbb
js
inc
adc
pop
cmp
inc
pop
inc
xchg
pop
mov
in
jecxz
push
sbb
mov
out
std
cmp
sub
mov
push
xor
(bad)
adc
inc
add
push
mov
gs
mov
retf
punpcklwd
sbb
(bad)
scas
test
cld
in
sbb
lods
dec
stc
mov
jns
rcl
add
pop
or
shr
inc
sbb
call
xchg
adc
pop
sub
faddp
rol
fs
cmps
std
push
push
outs
dec
mov
sbb
jne
and
mov
add
shl
aad
loope
pop
jmp
(bad)
stos
inc
push
push
adc
retf
mov
or
inc
shl
jns
loop
sub
lahf
mov
xor
sub
mov
inc
fs
das
ss
rcl
movs
fsubr
jmp
inc
adc
nop
mov
jne
push
mov
mov
ds
std
outs
lahf
inc
mov
cwde
mov
call
push
loope
or
into
mov
jmp
mul
retf
pop
retf
and
int
popa
mov
mov
les
in
in
ja
add
push
xchg
pop
cmp
push
dec
inc
sahf
or
jl
or
fadd
pop
adc
pop
mov
mov
cmp
jle
xchg
test
cmp
mov
mov
fwait
leave
xchg
dec
pop
jmp
pop
in
cmc
or
and
js
scas
mov
inc
ficomp
cs
aam
mov
loope
in
out
adc
in
push
(bad)
dec
shl
and
push
push
add
test
sahf
jp
mov
into
cmc
scas
mov
je
or
leave
pusha
cmp
or
div
push
out
aaa
int3
jge
adc
pop
push
outs
enter
jg
jb
cli
pop
jp
fxtract
call
or
jne
in
into
mov
lock
jmp
jl
icebp
push
adc
test
and
xor
cmp
push
rcr
cmp
loopne
mov
cmp
inc
sbb
test
hlt
mov
cwde
test
mov
cli
sub
lds
cmp
jae
sub
les
stc
jmp
xlat
cmps
das
push
dec
js
nop
cli
vpshrdvd
mov
outs
cmp
mov
lods
ins
mov
adc
rol
std
cdq
xor
inc
add
push
push
inc
add
xchg
out
lods
mov
inc
stos
jo
jmp
clc
out
fwait
or
pop
adc
leave
aam
mov
jp
jp
fldenv
cmc
jecxz
push
cmps
sbb
(bad)
aaa
push
jne
dec
cmovae
pop
sub
lds
call
adc
xchg
adc
pop
adc
test
dec
mov
jne
mov
stos
leave
push
imul
cmp
fisub
fwait
push
pop
nop
iret
in
mov
xor
test
retf
mov
lods
jne
outs
sub
cmp
sbb
or
leave
dec
loopne
mov
fcmovb
movs
stos
mov
or
inc
and
aaa
dec
je
(bad)
jo
xchg
mov
stos
dec
call
mov
stos
js
mov
lods
cmps
rcl
pop
stos
lock
pop
loop
cmp
or
mov
fnstenv
(bad)
cmp
leave
cwde
out
and
push
dec
pop
retf
add
inc
pop
and
cs
call
lods
popa
fldenv
ret
and
div
in
mov
adc
fadd
cld
cli
int
add
idiv
jge
lds
mov
(bad)
fst
push
adc
sbb
or
(bad)
jbe
popa
pusha
sbb
icebp
pop
icebp
aaa
push
xor
out
popa
or
std
aad
out
bound
push
popa
mov
fst
push
pop
fmul
inc
lea
or
pop
mov
aam
(bad)
in
dec
adc
lock
fcomp
sub
mov
add
cmp
mov
not
arpl
xlat
mov
(bad)
sahf
bound
add
inc
adc
jb
xchg
sub
rcr
inc
and
and
mov
test
sti
clc
cs
inc
fadd
ja
inc
inc
outs
push
and
aaa
adc
add
sbb
loope
ds
jle
(bad)
in
pop
leave
dec
push
aam
setle
jmp
cwde
mov
hlt
sbb
fstp
pop
popa
add
jge
sub
push
xchg
and
fwait
dec
cmp
xchg
pop
mov
push
mov
loop
mov
and
mov
fbld
inc
sbb
or
push
push
xor
daa
adc
call
sbb
pop
stos
bound
inc
cli
jne
xchg
sahf
and
inc
mov
cld
jmp
dec
(bad)
push
push
call
jge
in
sahf
mov
adc
mov
or
xchg
das
fwait
and
cmp
(bad)
jl
sub
fidivr
mov
cmp
jge
sub
xchg
push
mov
jno
daa
(bad)
sahf
add
int3
jo
and
addr16
adc
fild
jnp
push
aaa
jae
and
and
cmp
in
xor
(bad)
stc
jno
call
mov
inc
pop
push
in
mov
out
je
inc
cdq
loopne
stos
pop
mov
sub
idiv
frstor
push
push
push
inc
scas
dec
ret
add
cmps
cmp
inc
call
mov
mov
das
pop
cmp
mov
mov
add
aas
adc
push
inc
in
lods
fdiv
dec
inc
outs
pop
jns
in
cmps
test
pop
fisubr
push
push
dec
sbb
enter
lea
dec
cwde
xchg
outs
cwde
dec
push
jg
lea
(bad)
mov
xchg
mov
inc
sbb
in
seto
test
jae
call
outs
pop
pop
in
mov
mov
adc
mov
xchg
fstp
and
xchg
mov
mov
xor
adc
adc
xchg
gs
push
adc
xchg
aad
mov
sub
and
inc
mov
or
dec
fwait
bound
xor
sub
addr16
jnp
es
mov
cmc
dec
inc
pop
dec
outs
pop
xor
das
pop
stos
mov
xchg
pop
retf
test
jp
enter
inc
or
xlat
aam
mul
ret
add
sub
loopne
sbb
mov
fcomp
movs
push
rcr
add
ja
add
pusha
xlat
push
jl
stc
xor
jp
or
cmp
(bad)
pop
call
pop
pop
sub
lock
jbe
leave
jne
xor
or
jecxz
xchg
(bad)
push
dec
mov
retf
outs
mov
fldenv
mov
adc
xchg
sub
fidivr
sbb
(bad)
mov
lods
cmps
aam
xchg
aad
retf
add
loop
inc
movs
sub
inc
pop
mov
or
xor
or
push
stos
mov
or
mov
mov
dec
sbb
out
(bad)
scas
push
retf
ja
inc
mov
mov
ja
jmp
dec
mov
std
shr
call
mov
mov
arpl
push
pop
pop
cld
cmp
mov
mov
test
rcl
or
aas
push
dec
cli
push
jmp
sbb
sub
movs
xchg
outs
lods
cli
dec
and
imul
and
xlat
dec
movs
test
loopne
call
int
dec
arpl
hlt
rcl
sbb
cwde
and
cmps
ss
push
or
nop
je
and
mov
jmp
cmp
jae
inc
fld
and
sar
adc
or
jo
inc
cmps
imul
sbb
mov
dec
lock
xchg
movs
mov
(bad)
jle
sbb
icebp
call
ins
sbb
leave
mov
mov
fdivr
imul
out
pop
sahf
inc
sbb
(bad)
stos
mov
test
movs
pop
call
out
popa
cmp
stos
adc
inc
or
in
mov
push
std
in
xor
arpl
loopne
mov
mov
or
mov
push
div
sbb
out
popa
js
iret
aam
das
pushf
pop
dec
fst
or
movs
dec
(bad)
pop
stos
jae
mov
inc
adc
ins
cmpxchg
push
xor
retf
mov
jmp
ret
outs
mov
cmp
pop
xlat
push
sub
mov
inc
in
cmp
mov
or
test
les
cmp
xor
mov
in
dec
sbb
mov
ss
or
jno
cmp
xchg
leave
inc
jns
not
test
jmp
cmp
inc
mov
and
adc
xlat
sahf
lds
push
push
xchg
mov
retf
pop
and
(bad)
enter
xchg
das
jl
sbb
or
mov
loop
mov
int
mov
or
mov
adc
cli
in
repz
adc
aas
std
add
shr
cdq
or
leave
sub
cdq
enter
mov
pop
cs
clc
sub
std
mov
cmps
push
mov
unpckhps
mov
add
mov
xor
push
sbb
ins
das
ins
xor
je
push
pop
sub
adc
lods
repz
push
cld
retf
div
pop
(bad)
mov
imul
imul
sbb
mov
adc
out
push
test
dec
jecxz
test
enter
adc
jmp
adc
cmp
movs
fimul
mov
addr16
xor
and
mov
adc
neg
popa
scas
mov
mov
sbb
xchg
or
mov
jns
call
mov
(bad)
popf
retf
ja
call
cwde
mov
fisubr
mov
jne
xchg
pushf
dec
sbb
mov
cmp
and
xchg
mov
call
inc
fbstp
inc
and
xchg
pop
xlat
and
add
mov
pop
cmp
xor
das
mov
mov
scas
cwde
cs
or
out
sahf
cwde
mov
mov
add
xchg
repz
jmp
mov
pop
cmp
dec
rcr
cli
cld
pop
mov
jb
(bad)
mov
call
aas
push
dec
pop
cmp
push
inc
mov
aad
ins
adc
in
push
les
cdq
in
or
or
pop
cmp
and
mov
jmp
fidivr
movs
mov
outs
(bad)
pop
inc
imul
sar
jge
stc
pop
lds
xor
xchg
mov
inc
adc
clc
cdq
mov
and
fiadd
xchg
inc
xchg
sahf
stc
shl
push
lods
test
outs
xchg
cmps
jb
add
dec
pop
push
aas
or
data16
gs
popa
pop
test
sbb
loope
mov
cld
ins
loop
add
sbb
popa
cli
push
icebp
stos
jne
ficomp
inc
lea
mov
jne
add
adc
mov
xor
and
out
xchg
leave
mov
mov
cmps
mov
popa
sub
jb
dec
sub
pop
jb
xchg
mov
cwde
lods
xchg
inc
sbb
jge
push
pop
ins
adc
rol
stos
sbb
(bad)
push
loop
jge
and
stos
ds
into
das
stos
jl
lds
mov
push
xchg
and
cmp
xchg
inc
dec
jno
mov
pop
sub
out
push
lea
repnz
fimul
fsubr
mov
sbb
mov
loope
ins
fcmovb
adc
es
add
pop
adc
jnp
pop
xchg
xor
mov
sub
js
inc
jecxz
jmp
aas
stos
jp
call
xchg
dec
stos
cmovl
jb
arpl
mov
sub
mov
add
dec
jmp
lea
jo
push
sahf
paddusb
in
imul
cs
aaa
jecxz
cmp
bound
cmp
mov
les
sub
or
dec
add
cmps
cmc
dec
push
(bad)
mov
int3
and
ret
lods
dec
int3
imul
push
test
push
imul
(bad)
adc
adc
dec
inc
mov
call
sub
outs
stc
dec
in
test
or
xchg
(bad)
xchg
daa
sub
repnz
iret
inc
retf
push
or
add
ror
push
push
out
sub
pop
shl
and
pop
mov
and
les
divps
fwait
mov
sbb
mov
cmp
jmp
xor
pop
mov
push
rcl
out
mov
xor
mov
test
or
jge
jle
push
and
jecxz
mov
and
stc
or
add
sub
xchg
loop
xchg
push
test
adc
jl
and
adc
mov
mul
xchg
xor
inc
mov
add
(bad)
xor
rcr
jo
rol
mov
push
ret
(bad)
sbb
loop
movs
(bad)
cwde
das
xchg
or
xor
retf
or
test
sbb
add
icebp
cmps
mov
ds
dec
sub
pop
fst
sub
or
push
jp
(bad)
adc
neg
add
ficom
fld
fisttp
mov
scas
add
push
xor
repz
rcl
adc
loop
add
dec
jnp
retf
adc
les
jbe
mov
aad
sti
rol
dec
push
movs
mov
pop
jae
outs
sbb
sub
mov
or
jb
lods
out
scas
xchg
xor
sbb
das
push
das
xchg
es
xor
repz
mov
dec
sbb
xor
shr
in
shl
and
jg
push
in
lods
dec
stc
sbb
cmps
mov
fs
jmp
and
into
or
pop
jne
cmps
stos
sbb
dec
jb
jo
in
and
push
ret
jno
stos
adc
push
cmp
xchg
add
retf
xor
inc
int
cmc
enter
das
loopne
(bad)
lahf
and
stos
xchg
mov
(bad)
push
jne
push
movs
or
lahf
sahf
jecxz
ja
push
(bad)
fcomp
sub
outs
adc
inc
(bad)
in
mov
mov
jp
inc
popa
jg
adc
pop
ins
push
mov
scas
jle
and
mov
pushf
and
pop
shl
ret
cmps
xor
lds
push
mov
enter
xor
push
loope
pop
addr16
sahf
xchg
ficomp
(bad)
imul
mov
jg
lods
push
test
ficom
add
push
arpl
dec
push
lock
aas
xchg
inc
call
mov
cli
call
mov
xor
call
movs
mov
and
inc
hlt
adc
ds
mov
jb
out
mov
mov
push
cmp
or
push
pushf
fwait
js
or
enter
retf
ins
sar
inc
fld
jp
sbb
in
jecxz
inc
scas
mov
xchg
not
arpl
push
push
enter
xlat
xor
dec
jge
mov
add
add
xor
cli
mov
mov
(bad)
mov
pop
mov
stos
outs
pop
mov
(bad)
push
push
loope
shr
int
or
outs
fst
fwait
pusha
mov
pop
(bad)
leave
and
mov
clc
cld
faddp
push
and
and
push
jne
mov
mov
mov
fild
push
stc
cld
nop
add
loopne
out
std
jb
sbb
inc
add
xor
dec
daa
js
fwait
xor
imul
sub
and
xor
pop
fs
xchg
std
and
inc
mov
aam
xchg
fdiv
mov
cdq
in
add
add
aas
in
int3
sub
inc
inc
(bad)
add
xor
push
(bad)
mov
sahf
ret
fdiv
outs
or
lock
inc
add
mov
mov
les
mov
dec
int
inc
stos
int3
leave
test
enter
inc
cmps
cwde
jae
bound
push
inc
push
call
js
pushf
jbe
mov
push
cmps
pop
scas
fnstcw
(bad)
enter
sub
push
mov
(bad)
xchg
push
jne
ret
sbb
inc
lock
enter
aam
(bad)
pop
xchg
pop
out
mov
pushf
adc
call
push
(bad)
jmp
xchg
xchg
fnsave
cmp
add
and
int3
or
ret
jge
xchg
jp
std
sbb
dec
mov
std
scas
stos
ja
add
and
pushf
cmp
in
int
into
pop
int
rcl
mov
in
sub
(bad)
loope
xor
xchg
mov
fwait
arpl
cmp
pop
pop
gs
and
stc
addr16
inc
cmps
cmp
iret
sub
mov
xchg
ret
jae
inc
sahf
adc
daa
jno
sbb
jmp
movs
fdivr
int3
into
call
mov
pop
mov
xchg
int3
ja
gs
pop
inc
call
and
mov
mov
mov
mov
and
sbb
xchg
xchg
jbe
lds
(bad)
xchg
mov
pusha
and
aam
xor
and
push
push
mov
cmps
(bad)
mov
push
shl
movs
cmps
bound
add
mov
cwde
pop
pop
addr16
xor
and
mov
(bad)
and
xchg
pop
scas
hlt
(bad)
mov
mov
mov
pushf
mov
rcl
nop
sub
cmps
fcmovne
xchg
sbb
inc
sub
loopne
aam
stc
shr
cmp
out
clc
cmc
jle
pop
scas
outs
rol
add
cmps
mov
or
je
test
xchg
mov
cld
jne
mov
mov
sbb
sbb
pop
in
xchg
dec
(bad)
mov
mov
mov
push
inc
(bad)
jle
pop
pop
sti
pusha
daa
in
call
add
dec
test
inc
mov
daa
inc
sub
pop
xor
mov
pop
fst
jno
shl
adc
rol
mov
(bad)
cdq
cmps
mov
sub
cmp
jb
(bad)
pop
push
popa
xchg
add
xor
aam
xchg
xor
push
lods
iret
fcmovnu
dec
lock
add
repz
dec
mov
cli
jo
mov
stos
jecxz
cs
(bad)
or
popa
imul
dec
sub
test
fcomp
retf
push
dec
je
mov
sahf
mov
aam
sub
daa
in
and
sahf
xchg
movs
or
sar
inc
sub
cmps
push
inc
mov
(bad)
int3
inc
iret
push
mov
dec
fisttp
xchg
sub
jmp
and
mov
hlt
mov
push
xchg
in
mov
dec
stc
lods
in
push
cdq
and
xchg
xchg
cld
scas
int
cmp
into
nop
add
adc
shl
test
xchg
push
je
push
and
inc
pusha
or
adc
sub
test
out
pop
dec
cmp
cmp
inc
cmp
cmc
rcr
scas
and
shl
fisubr
and
mov
rcr
sar
shr
out
jl
popa
inc
daa
add
daa
mov
pcmpeqd
pop
mov
mov
js
xchg
cmp
mov
int
pop
ret
add
mov
loopne
or
mov
mov
outs
idiv
pop
jb
cmp
ficomp
out
add
test
fsub
nop
movaps
inc
lock
xchg
aad
pop
mov
adc
xlat
push
sub
lods
das
sbb
sub
pop
jmp
jp
mov
not
call
lahf
jbe
imul
pop
cmp
mov
sub
aaa
jge
mov
mov
mov
jge
punpckhdq
inc
xchg
daa
push
inc
ret
fdivr
nop
scas
pop
adc
outs
mov
inc
jmp
ret
rol
jmp
jp
in
inc
(bad)
xchg
dec
std
stc
sub
pop
mov
repz
test
ja
or
dec
jp
das
sbb
add
retf
jb
jecxz
sub
and
mov
sub
cdq
adc
shl
mov
mov
addr16
sti
cwde
mov
cmps
jp
jae
loope
inc
push
pop
inc
out
inc
test
adc
std
inc
rol
mov
test
sbb
adc
aad
pop
in
pop
stos
lock
push
adc
jge
ror
rcr
mov
xchg
test
pop
jecxz
adc
pop
mov
call
add
fs
pop
mov
sub
in
jb
xchg
mov
jne
cmc
in
movs
ds
sbb
cmp
inc
jecxz
dec
mov
imul
jle
jl
cmp
loope
fs
fcom
popf
xor
cmps
sbb
mov
add
std
popf
jae
sbb
cmc
add
cdq
add
lock
loope
dec
ret
lahf
leave
inc
mov
aad
mov
loop
pop
or
arpl
retf
dec
fcmovbe
lods
or
lahf
mov
jmp
jns
inc
out
(bad)
scas
cmps
movs
and
xchg
xor
shr
mov
push
pop
pop
smsw
or
addr16
inc
sbb
ret
fs
push
outs
clc
adc
out
dec
mov
push
test
clc
mov
dec
xchg
ss
lock
movs
cmps
rcr
arpl
inc
cmps
stos
cdq
cmps
mov
push
xchg
sub
xor
xlat
les
fnstcw
xchg
ins
in
cdq
out
xor
imul
cwde
int3
sbb
inc
push
dec
in
loope
push
daa
out
pop
stc
and
and
jmp
fld
rol
scas
jle
jns
out
ins
push
jae
inc
mov
or
mov
mov
jnp
jb
jmp
xchg
add
push
sti
cmp
or
shl
aaa
or
popf
rcl
inc
sti
xchg
xlat
test
mov
out
stos
push
push
loopne
not
ds
xchg
jmp
fst
fisubr
shl
enter
xchg
pop
scas
cmc
icebp
and
mov
push
(bad)
and
sbb
and
xchg
jmp
test
inc
(bad)
jo
ss
cmp
mov
aad
sbb
test
ins
cmp
stos
(bad)
mov
mov
bound
movs
mov
aaa
xchg
lds
(bad)
lods
int
js
ret
xor
jle
dec
into
push
(bad)
(bad)
cli
stc
mov
jbe
dec
bound
push
mov
add
cmc
popf
shr
adc
popa
mul
popa
rol
es
mov
leave
(bad)
lods
js
hlt
jno
cdq
call
sbb
sbb
xor
retf
lods
adc
out
push
add
mov
push
jge
sbb
call
in
push
or
test
out
jne
adc
fisttp
push
push
mov
sar
(bad)
pop
jl
fmul
xchg
fsubr
push
or
test
mov
std
xchg
loopne
je
push
cmp
test
retf
add
hlt
or
repz
pop
inc
movs
mov
jge
pushf
or
outs
cmp
(bad)
fisubr
ins
lahf
or
inc
ja
aas
arpl
cmp
and
or
jo
or
push
adc
push
ins
call
xchg
imul
bound
push
rcl
pop
test
push
cmp
pop
sbb
dec
ins
mov
or
frstor
sbb
je
cmp
rol
mov
cwde
xor
push
js
(bad)
cmp
repnz
test
push
mov
loopne
dec
popa
xchg
lods
fs
push
ds
loopne
pop
adc
jb
cmp
jl
and
push
sar
and
mov
lahf
mov
or
mov
sar
adc
std
mov
mov
dec
add
sub
out
jle
popa
(bad)
out
lahf
jo
psrld
and
(bad)
mov
sbb
es
pop
lea
loopne
push
and
sbb
ins
jge
jne
(bad)
cmp
jge
arpl
mov
xor
mov
jne
mov
leave
or
mov
lock
ins
inc
push
adc
test
aas
cmc
inc
inc
clc
imul
inc
rol
retf
mov
daa
push
mov
lock
add
std
add
retf
mov
daa
int3
push
mov
cmps
ins
outs
jmp
std
mov
pop
mov
retf
adc
dec
aam
ret
push
stos
mov
mov
jg
push
cmp
ret
cmc
adc
jecxz
outs
jp
pop
sub
movs
pushf
ins
mov
and
(bad)
scas
call
gs
xor
hlt
cmp
sbb
pop
movs
xchg
adc
int3
jmp
pushf
mov
mov
mov
pushf
jmp
adc
xor
pop
adc
imul
inc
fisub
stos
ret
lock
in
out
jnp
bound
cmp
scas
dec
mov
into
push
and
repz
stos
cmps
repz
stos
cmp
std
mov
movs
cmp
(bad)
xchg
jbe
adc
test
stc
pop
nop
xlat
pop
sbb
daa
xchg
mov
push
shr
sub
aam
jno
dec
jbe
scas
sbb
lods
xor
icebp
add
dec
adc
mov
mov
xor
test
adc
mov
mov
xchg
inc
and
bound
sbb
imul
xlat
cwde
neg
fisttp
ror
jb
or
jmp
rcl
call
into
xor
sahf
mov
xchg
cs
test
fmul
push
pslld
(bad)
scas
jbe
cmc
(bad)
out
test
add
jl
mov
pop
mov
xor
and
shr
jno
(bad)
dec
cmp
aad
add
inc
sahf
jbe
int
sbb
cdq
mov
movs
pop
movs
lea
je
and
enter
lds
dec
cld
leave
xchg
scas
pop
xchg
fcom
data16
in
imul
in
cmp
xor
icebp
fwait
ss
cli
inc
wbinvd
mov
push
js
out
sbb
lahf
inc
xchg
popa
out
mov
push
retf
xor
xor
pop
xor
adc
add
jl
out
xchg
ret
mov
shl
rol
(bad)
cmp
aaa
sar
and
movs
loopne
lock
push
add
sti
shl
cs
mov
jg
push
inc
ds
xor
mov
retf
push
mov
jmp
adc
and
xor
and
repz
ins
bound
cmps
or
adc
out
lds
jbe
pop
stos
mov
in
loopne
jecxz
xor
(bad)
js
inc
add
je
adc
enter
jecxz
(bad)
jo
adc
push
add
sub
jns
shr
rcr
addr16
cmp
push
retf
inc
cmp
add
call
repnz
int3
push
lods
dec
outs
sub
push
xor
jl
mov
in
jecxz
dec
movs
mov
scas
jbe
xor
ret
call
test
mov
add
sar
mov
cwde
pushf
inc
xchg
clc
jae
adc
sub
inc
ret
pop
cmp
test
repnz
imul
(bad)
fst
xchg
out
jmp
xor
(bad)
push
and
or
mov
xor
out
mov
in
mov
sub
push
clc
imul
add
mov
adc
pop
xlat
cli
adc
inc
aam
dec
jb
push
repnz
or
jecxz
jno
(bad)
test
hlt
test
mov
ins
outs
xchg
jbe
div
cmp
sub
inc
add
push
aad
ins
bnd
imul
mov
inc
mov
out
jb
push
dec
mov
cdq
enter
sub
fmul
mov
sbb
inc
int
pop
mov
sub
aad
push
inc
inc
sti
in
cli
xchg
es
sbb
std
call
mov
mov
aaa
mov
mov
cmps
outs
push
push
and
add
dec
dec
fimul
(bad)
call
dec
jno
cdq
pop
dec
add
in
jmp
and
ss
cmp
jp
mov
int
and
(bad)
xor
(bad)
cs
mov
inc
mov
sub
mov
mov
ror
test
push
dec
inc
push
mov
in
jge
idiv
mov
fistp
pop
loope
aas
xor
les
sub
xor
sbb
adc
sbb
sub
mov
xchg
(bad)
rol
adc
pop
movs
hlt
outs
and
pop
dec
xchg
lea
mov
sub
(bad)
fisubr
sub
add
inc
push
sbb
mov
nop
enter
adc
jno
ins
mov
jmp
jp
iret
push
repnz
adc
mov
pop
push
push
ret
not
dec
(bad)
sub
cmps
and
or
out
dec
(bad)
and
test
sqrtps
xor
daa
retf
pop
pop
dec
(bad)
push
retf
rol
mov
add
ret
pop
push
fisubr
inc
mov
call
in
fadd
sub
(bad)
jae
jne
adc
fs
mov
jno
xchg
mov
inc
sbb
jg
mov
gs
xor
lods
inc
cmp
add
rcr
cld
sar
icebp
lods
fsub
(bad)
mov
pop
lods
or
xchg
inc
xchg
data16
cld
add
add
outs
push
adc
inc
dec
into
ja
lods
(bad)
jns
ins
xchg
(bad)
rol
out
imul
ret
movs
add
jno
mov
pop
pusha
xlat
icebp
call
lahf
js
push
sub
repnz
pop
xor
(bad)
cmc
inc
dec
nop
dec
dec
mov
cmp
ror
aas
imul
xor
xor
in
mov
hlt
xchg
je
adc
mov
mov
sub
out
xchg
mov
lahf
ja
cld
loopne
stos
aaa
sbb
cld
rol
xchg
dec
mov
repnz
call
jno
int3
std
jbe
dec
cmp
adc
movs
call
aam
(bad)
int3
jae
test
and
ret
(bad)
ins
lods
mov
push
inc
push
popa
mov
test
adc
xlat
cmovno
add
push
fld
mov
sbb
cs
out
jmp
stc
push
sub
cmp
jg
inc
push
in
(bad)
movs
movhps
(bad)
jmp
jns
inc
jmp
call
jb
push
sbb
add
data16
cld
es
cmp
sti
add
sbb
cmp
jno
mov
and
in
mov
and
sub
sbb
lods
cli
mov
or
push
pop
dec
cmp
jl
sub
scas
out
lods
mov
inc
aam
jno
sub
(bad)
mov
pop
shr
enter
sbb
pop
mov
jns
call
mov
sub
fwait
iret
push
fwait
fwait
movs
pop
movs
sub
push
popa
imul
pushf
les
mov
outs
sub
test
inc
xchg
fcomp
mov
xchg
sbb
pop
cmp
xchg
jnp
adc
push
push
mov
inc
fsub
mov
sbb
pxor
sbb
mov
test
rcpps
push
mov
cld
ss
cmc
xlat
jge
mov
mov
add
dec
mov
ss
ss
xchg
cmp
ja
stos
(bad)
outs
xlat
mov
arpl
inc
shr
adc
int
xchg
(bad)
mov
dec
leave
and
sbb
outs
je
lock
fst
pop
leave
add
mov
(bad)
outs
call
int
in
mov
mov
das
hlt
std
sub
add
(bad)
xchg
mov
mov
cmp
int
cmc
bound
imul
push
test
pop
cmp
int3
jmp
xchg
jge
inc
sbb
sahf
xchg
ja
and
rcr
xchg
fcom
xor
xor
jge
mov
out
jnp
mov
cmc
mov
jp
cdq
(bad)
sub
cs
and
aad
bound
mov
mov
loope
cmp
loopne
push
pop
or
cdq
mov
and
in
adc
ss
mov
inc
icebp
in
push
into
pop
adc
arpl
dec
popf
iret
popf
ret
inc
pop
or
cwde
cmp
pop
mov
test
xor
sti
xor
outs
sub
sahf
mov
jo
(bad)
imul
jecxz
aad
ds
sbb
mov
jo
je
cmp
mov
xchg
les
add
rcr
or
lods
push
mov
sub
aas
mov
and
inc
adc
shr
or
xor
adc
or
fnstenv
aaa
das
jns
(bad)
pushf
mov
popf
cld
xchg
xor
adc
pop
cmp
push
jecxz
stc
ins
adc
add
add
xor
sbb
call
movd
es
push
jne
fisub
lea
push
or
in
jecxz
test
aas
jb
addr16
pop
push
and
dec
imul
mov
pop
or
inc
lds
push
jns
lea
and
and
in
enter
(bad)
gs
mov
mov
pop
ja
repnz
xchg
shl
inc
push
cmp
inc
xchg
inc
call
sub
out
cmp
test
xlat
ficomp
xor
fsub
adc
xor
add
lock
and
lahf
adc
stos
mov
sub
cmp
fs
shr
ror
icebp
out
push
xchg
push
clc
movs
dec
or
jge
push
les
arpl
adc
out
and
xchg
cmc
es
outs
(bad)
pop
popa
cs
jbe
pushf
ss
sti
mov
xchg
mov
adc
jns
(bad)
fisttp
pushf
jb
ror
scas
push
bound
scas
iret
sub
mov
xchg
dec
cmp
enter
ret
scas
psadbw
fidivr
retf
shr
fistp
and
loope
(bad)
aad
mov
aaa
jno
add
shl
xchg
call
fsubp
lods
inc
mov
xor
cmps
push
pusha
cmp
jmp
out
push
test
pop
xor
(bad)
iret
mov
push
aam
jnp
(bad)
(bad)
dec
sbb
int3
(bad)
repz
int
test
push
pop
mov
nop
cmps
or
stos
fidivr
add
dec
call
mov
add
xchg
or
cli
ss
xchg
adc
sbb
cdq
mov
cmp
movs
mov
mov
push
mov
adc
repnz
test
scas
stos
cld
push
fistp
fdivr
mov
ss
cmp
pop
addr16
cmp
add
loope
mov
push
(bad)
aad
(bad)
xchg
(bad)
inc
push
arpl
adc
ret
mov
scas
retf
addr16
sub
call
pop
push
rol
stos
xor
out
xchg
sub
mov
(bad)
lahf
xchg
and
not
in
test
push
inc
pusha
sub
(bad)
adc
loop
and
mov
int
addr16
xor
int
cdq
ret
add
jl
test
pop
push
mov
mov
popf
pop
xor
sub
and
or
adc
add
and
mov
push
mov
not
push
pop
ror
lods
in
jmp
adc
and
xor
inc
and
jae
push
jp
dec
hlt
sbb
xor
jnp
jnp
dec
popa
jl
cmc
fcmove
fcmovbe
mov
(bad)
ins
push
add
outs
dec
inc
mov
rcl
shl
(bad)
cmc
add
jg
cmp
jno
jo
pop
mov
or
mov
mov
scas
(bad)
push
retf
imul
ins
adc
fsub
dec
dec
(bad)
or
rcl
jbe
xor
or
mov
les
lea
cmc
sbb
mov
arpl
adc
jmp
mov
loope
xchg
xor
mov
rcr
or
and
mov
dec
and
icebp
lea
js
mov
cmps
cmp
inc
add
sub
int3
dec
adc
popa
(bad)
pop
aaa
lods
sti
cli
ds
cmp
nop
pop
sub
loope
popa
repz
cmp
fld
xor
jecxz
fwait
gs
pop
push
fimul
cli
mov
push
adc
out
push
jbe
repz
adc
xor
adc
pusha
pop
aad
sar
mov
cmp
(bad)
push
icebp
arpl
pop
jb
pop
sub
dec
sbb
xchg
int3
call
cmp
and
add
popa
or
mov
and
xchg
out
mov
(bad)
sub
sbb
xchg
ror
out
and
mov
retfw
dec
push
adc
ret
cmp
sahf
retf
repnz
pop
jbe
sbb
dec
aaa
push
and
and
cs
jl
sbb
and
fistp
cmp
loop
dec
jns
cmp
mov
fstp
lods
nop
out
bswap
cs
out
adc
mov
mov
adc
pop
js
int
rcl
mov
jle
pop
and
in
leave
mov
data16
pop
push
ins
xor
adc
jge
pop
shl
in
mov
in
add
inc
enter
cmps
mov
sub
hlt
lods
cdq
aas
adc
mov
nop
adc
xor
icebp
mov
rol
sub
jp
sbb
data16
mov
mov
hlt
cmp
ror
adc
mov
in
shr
test
sub
pop
imul
sbb
add
inc
push
push
and
mov
xor
rcl
dec
xor
mov
fistp
fucomip
mov
sub
jmp
scas
hlt
sub
sub
bound
mov
leave
out
cdq
cmp
iret
cmp
inc
cmps
push
pusha
xlat
repnz
mov
inc
jb
js
ins
cpuid
dec
mov
outs
aas
mov
mov
cdq
xor
arpl
or
mov
add
loope
cmp
(bad)
jg
outs
mov
fs
repnz
jmp
iret
fcom
fsubp
adc
mov
pop
push
sub
cmp
xor
jo
setl
xor
leave
gs
mov
dec
xchg
aaa
or
xchg
mov
out
sbb
cmp
loopne
jecxz
push
test
cdq
pop
adc
jo
xchg
cmp
or
push
lods
xchg
fstp
(bad)
pop
add
push
call
push
cwde
in
jecxz
into
rdmsr
scas
lds
add
jns
jns
dec
(bad)
stos
imul
loopne
pop
outs
fbstp
mov
popa
cli
sub
sbb
retf
int3
xor
and
dec
mov
xchg
and
into
movs
sidtd
lock
mov
in
push
in
cmp
fwait
stc
mov
cmp
xor
add
sub
and
adc
sub
repz
cdq
mov
xchg
movs
jge
and
sub
mov
mov
inc
test
sbb
mov
je
inc
xlat
daa
jb
mov
je
cdq
arpl
test
scas
add
mov
clc
xchg
mov
inc
pushf
mov
in
jmp
inc
cmp
mov
mov
inc
shl
jbe
mov
pop
jle
mov
cmp
lea
jecxz
jae
aam
mov
push
jecxz
cld
sbb
push
enter
lahf
push
(bad)
jmp
mov
jle
leave
clc
scas
inc
mov
lods
out
add
loope
mov
sub
jl
aaa
or
and
fild
and
mov
cmp
leave
jae
lods
(bad)
xor
les
imul
frstor
jmp
fcmovnbe
cmp
fmulp
stc
add
test
adc
adc
nop
dec
ror
pop
xor
adc
mov
cmp
nop
out
or
hlt
inc
sbb
imul
cmp
bound
stos
mov
jmp
pop
sbb
xchg
dec
add
and
cmc
mov
inc
shl
adc
imul
retf
stc
js
sub
pop
je
int3
mov
xor
stos
test
retfw
xor
int
ins
in
clc
sbb
adc
mov
div
daa
loop
lods
mov
out
sbb
sbb
std
and
sbb
mov
retf
aam
and
xchg
xor
xlat
sub
das
xor
scas
adc
jmp
loopne
jge
fwait
ins
pop
pop
sbb
mov
add
daa
cwde
loope
jge
mov
pop
jge
push
std
out
push
movs
cmp
fnstenv
pop
int3
push
mov
pop
or
inc
cdq
ins
fwait
inc
xlat
retf
sub
in
lods
call
push
pushf
mov
mov
mov
jo
pop
out
popf
mov
push
cdq
jmp
mov
(bad)
shr
je
fld
or
hlt
pushf
or
mov
repnz
pop
in
dec
scas
inc
jo
pushf
mov
pop
sbb
sub
dec
mov
je
add
imul
jl
std
jp
movs
lds
adc
pop
pop
cmp
xchg
cwde
fisubr
pop
pop
scas
mov
pop
fimul
or
sahf
cmp
into
pop
test
test
stos
xchg
fwait
stc
shr
adc
sar
xor
(bad)
loop
add
movs
sbb
pop
pop
mov
xchg
mov
test
dec
in
in
in
sub
sbb
hlt
pop
dec
xor
xor
xchg
arpl
push
fcom
or
cs
cmps
loop
lea
mov
adc
jle
mov
fcomp
icebp
sub
jae
pop
add
xchg
std
stos
mov
jno
jno
push
push
test
push
pusha
enter
jae
push
out
and
cmp
mov
xor
jns
cmp
push
mov
mov
mov
ret
popa
test
hlt
ja
pop
unpcklps
cmp
stos
xchg
imul
test
mov
mov
mov
add
mov
dec
iret
sbb
add
cli
adc
imul
je
and
adc
fistp
rcr
adc
aas
xchg
sbb
jb
rol
xchg
loope
cmovns
push
mov
aaa
mov
jne
mov
adc
push
(bad)
test
push
ins
sar
jp
cmp
push
lds
js
adc
add
add
cmp
and
xor
rol
jo
sahf
pop
(bad)
pop
mov
and
mov
shl
arpl
sub
jg
sub
sbb
not
icebp
jmp
adc
out
xchg
shl
jg
into
adc
lock
jmp
ins
push
jae
fstp
xchg
inc
and
jmp
cmc
movs
fs
sbb
mov
dec
pop
push
push
xchg
add
xchg
mov
les
xor
movs
xchg
push
or
add
jge
(bad)
imul
stos
scas
jge
jg
in
push
jbe
out
icebp
sub
cmps
xor
les
cli
add
loopne
add
loopne
ja
and
fidivr
rcl
mov
push
retf
dec
pop
imul
ret
shl
mov
lods
shr
inc
int
pusha
popa
mov
push
push
fs
mov
adc
mov
xlat
test
leave
sbb
popa
shr
mov
outs
test
fist
adc
adc
adc
add
cwde
push
push
mov
push
gs
jo
bound
fnstsw
jbe
mov
out
mov
xchg
cld
pop
xlat
inc
pop
sbb
add
sar
fld
jp
fstp
pop
test
call
push
fisub
cmps
dec
jns
pop
loope
imul
or
ret
not
or
sbb
(bad)
call
jo
jle
ins
cmp
ficom
jmp
enter
sub
retf
test
ret
(bad)
sbb
mov
inc
out
mov
add
pop
mov
push
or
mov
sub
or
xchg
push
jae
je
pop
ror
mov
gs
xchg
jne
setge
into
cmps
mov
or
ret
cmp
addr16
test
std
push
retf
rol
push
mov
adc
jmp
fdivr
repz
fsub
push
and
jmp
les
push
loopne
inc
mov
retf
dec
pmaddwd
aad
shl
push
sub
call
add
push
call
add
stc
add
call
cmp
cmps
push
or
jnp
loope
pushf
pop
cdq
mov
jbe
test
adc
mov
cmp
movs
jecxz
and
icebp
adc
imul
jecxz
sbb
das
sbb
adc
jmp
fdiv
aad
push
mov
hlt
xchg
loop
out
(bad)
mov
and
movs
int3
cmp
repz
(bad)
rcl
jmp
push
fcomi
push
rcl
adc
ficomp
add
scas
xchg
add
(bad)
lahf
or
popa
sub
js
popa
mov
and
lods
pop
aam
dec
outs
sbb
dec
retf
lock
fs
cmc
out
outs
push
cli
mov
pop
mov
pop
int
icebp
pop
dec
jmp
stos
loope
mov
jp
xchg
push
test
add
int3
sbb
enter
inc
rol
fwait
mov
xchg
repnz
and
(bad)
fwait
shl
jae
adc
loopne
xchg
xlat
rcl
fdivr
xchg
(bad)
jge
icebp
xchg
add
sbb
das
or
aam
add
fst
mov
cmp
loopne
or
sar
int3
sub
repnz
push
mov
adc
nop
pop
fcmovb
and
sbb
mov
out
adc
call
sbb
rcr
push
inc
sar
xor
aaa
and
add
push
fdivrp
pushf
push
mov
sbb
add
rcr
fcomip
dec
mov
push
mov
or
or
lahf
push
sub
test
xor
cmp
or
xchg
(bad)
shr
inc
or
mov
jge
aam
imul
into
js
push
out
das
daa
adc
adc
cmc
pop
inc
adc
jmp
or
adc
adc
mov
pushf
adc
lds
push
cmc
out
imul
test
mov
pop
mov
ficomp
mov
inc
push
push
push
mov
jo
imul
clc
inc
xor
aad
xchg
out
loope
rcl
inc
test
pushf
sub
jno
retf
addr16
mov
mov
lds
outs
sub
mov
lds
aaa
mov
test
ss
sub
pop
pop
xor
ret
cmp
mov
mov
mov
inc
ins
push
pop
pop
cmp
pop
mov
in
sbb
cmps
gs
xor
(bad)
cmps
mov
add
mov
or
pusha
and
leave
pop
aam
repnz
inc
mov
push
cmps
call
add
gs
fdiv
int
rcl
(bad)
in
push
mov
and
sbb
mov
jne
xor
jno
retf
xor
push
fcmovnb
push
fstp
dec
arpl
xor
xchg
cld
xchg
pop
movs
push
mov
std
dec
xor
jecxz
mov
pop
into
lea
inc
fabs
addr16
inc
jp
(bad)
and
test
sbb
push
jmpw
retf
popf
push
push
cmp
pop
push
mov
cdq
xchg
adc
int
lea
add
jmp
inc
mov
pop
out
repz
jecxz
xchg
shr
in
fisubr
adc
out
pshufw
fdivp
inc
jecxz
or
jns
cmp
mov
loope
ins
fcomp
test
js
cwde
inc
inc
or
outs
(bad)
dec
outs
fldcw
cld
stc
mov
movs
mov
in
loop
jno
fdiv
pop
popf
iret
xor
stc
bound
mov
dec
ja
pop
imul
xchg
(bad)
cs
(bad)
jg
xor
ja
sub
cmp
fwait
mov
push
fxch
ret
data16
dec
xor
sti
js
(bad)
imul
jecxz
ss
xchg
adc
repz
add
outs
mov
dec
daa
mov
sub
mov
pop
inc
dec
sar
test
je
jle
xacquire
imul
gs
(bad)
jo
mov
and
add
mov
dec
xor
and
cmp
sbb
ja
push
jmp
sub
push
in
add
ins
mov
call
inc
push
mov
cmp
scas
mov
data16
(bad)
jg
push
push
jo
mov
jnp
xor
jmp
out
push
inc
mov
mov
mov
inc
ins
shl
pop
or
cmp
pushf
pop
and
xchg
inc
mov
js
sub
jno
cmp
xor
js
add
scas
in
pop
inc
adc
push
sub
lods
mov
bswap
out
jge
pop
and
push
scas
add
enter
fidivr
ins
push
xlat
imul
inc
pop
scas
jmp
je
pop
or
inc
pop
and
aad
jl
int3
lahf
mov
push
sbb
cmp
cs
sub
das
dec
mov
test
xchg
sbb
push
test
clc
inc
ds
sub
inc
xor
pop
iret
fld
sbb
sub
or
jl
mul
and
xlat
jmp
call
ret
loope
pop
push
mov
scas
loop
dec
mov
add
idiv
fnstsw
rol
mov
lods
cmp
add
sbb
mov
retf
hlt
lods
and
lds
cld
in
add
push
movs
sbb
loopne
mov
cmps
mov
stos
adc
out
xchg
scas
cmp
push
mov
stos
mov
xchg
jp
sti
xchg
(bad)
addr16
xor
add
fwait
out
or
bound
xchg
pop
mov
sbb
cmp
(bad)
mov
jp
inc
test
and
in
in
mov
mov
and
cmc
test
push
mov
ret
inc
and
jl
dec
mov
inc
fs
dec
movs
cmps
fadd
loop
xchg
das
pop
inc
ja
jecxz
dec
mov
mov
add
push
cli
icebp
inc
(bad)
sub
mov
or
stos
fwait
sbb
fsubrp
shr
xchg
push
mov
mov
and
in
add
pop
inc
gs
jecxz
fimul
gs
out
pop
jmp
call
jmp
or
jl
cmp
shl
push
pop
test
out
test
adc
adc
jns
jmp
cwde
mov
add
jnp
pop
dec
xchg
dec
xchg
hlt
repz
or
adc
and
jnp
adc
adc
sbb
sub
dec
and
xchg
adc
sbb
div
pop
mov
rcl
cld
popf
sti
cwde
xchg
mov
ss
sahf
sbb
data16
sbb
call
aam
add
cmp
pop
jle
jl
pusha
and
in
pushf
dec
stos
xchg
stc
in
add
dec
sbb
push
xor
into
xlat
pop
cmp
out
int3
cmp
pusha
mov
sar
dec
xor
push
shr
sub
jge
outs
add
jns
(bad)
movs
push
movs
pop
jge
hlt
scas
sub
out
inc
aas
lahf
ret
je
out
test
or
imul
sbb
jbe
mov
adc
repnz
pop
cmp
mov
int
xchg
nop
aas
ja
fdiv
loope
fst
aad
ret
mov
lock
dec
nop
scas
or
adc
enter
or
ins
fs
stc
call
lock
fdivr
lock
cmp
sbb
pop
int3
test
jecxz
out
xor
sbb
sahf
test
lock
add
inc
cmps
js
jns
cmc
test
fwait
jne
ficom
push
mov
mov
or
jae
jmp
repz
sbb
xchg
aam
dec
ret
xchg
inc
dec
(bad)
call
jmp
inc
std
push
xor
pushf
xchg
dec
ret
mov
inc
dec
mov
bound
mov
(bad)
into
pop
call
popf
inc
dec
jmp
cs
call
repnz
or
and
mov
or
inc
dec
sahf
aad
push
sbb
add
shl
pop
stos
or
pop
push
aad
xor
adc
enter
enter
xor
inc
pusha
std
shl
cmp
cli
pop
mov
dec
pop
mov
mov
push
pop
lock
fisub
out
test
cmp
fdiv
mov
pushf
das
nop
mov
ja
call
fcomp
mov
mov
call
dec
jae
shl
xor
jno
aad
iret
xchg
jmp
pop
ins
(bad)
(bad)
in
ins
dec
out
fsubr
jnp
stos
in
lahf
(bad)
mov
jg
cmp
fcmovu
repz
inc
cmp
(bad)
dec
cmps
fcom
xor
out
dec
add
dec
lea
jg
cmp
test
div
gs
cmp
mov
in
xchg
in
push
ja
dec
fadd
jnp
inc
push
dec
popa
fnsave
jl
push
add
ss
int
jp
call
push
loope
fstp
ja
jo
lds
cmp
sbb
popf
pop
stos
or
imul
js
push
fldenv
fs
add
adc
scas
hlt
mov
arpl
mov
pop
icebp
xchg
cli
in
and
mov
fisubr
cmps
inc
mov
jno
outs
int
mov
aas
xor
inc
repnz
jle
ins
jmp
lea
mov
imul
xor
imul
cmps
fucomi
scas
or
inc
xor
in
out
dec
mov
push
xor
xlat
call
fidivr
mul
jp
inc
sar
and
inc
movs
dec
popf
ins
sub
mov
xchg
outs
dec
mov
pop
pusha
fsub
xchg
jge
in
jl
cmp
ins
call
lods
(bad)
stos
and
movs
and
or
add
push
push
jp
push
dec
and
loopne
adc
out
ins
jns
psadbw
and
fidiv
jbe
clc
cmp
jmp
push
adc
jmp
sahf
leave
cmp
fmul
jmp
outs
inc
or
inc
cmp
es
inc
mov
pusha
mov
lock
cmp
push
dec
test
(bad)
mov
jge
jo
dec
call
mov
mov
popa
mov
push
loope
sub
or
sub
(bad)
push
(bad)
ja
jmp
aaa
loop
jbe
pop
xchg
retf
push
dec
test
in
scas
add
stos
mov
sub
test
fiadd
ror
shl
je
push
add
jne
loope
pop
out
out
sub
jo
pop
push
out
jecxz
jg
fdiv
sar
test
sbb
push
test
cmp
push
fsubr
cdq
rcl
push
sub
pop
(bad)
sbb
mov
shl
add
stos
dec
daa
xchg
fcomip
addr16
xor
jp
je
outs
pop
pop
es
and
mov
sub
test
sub
pop
pop
rcr
pusha
das
fidivr
cmp
mov
outs
test
sbb
adc
push
(bad)
(bad)
bound
fs
lahf
ja
xor
jle
daa
jb
rcl
mov
mov
cmc
xchg
mov
xchg
fs
push
inc
or
dec
dec
sahf
js
and
imul
sbb
add
call
xchg
pop
add
dec
jae
inc
rcr
loopne
xchg
adc
aas
push
inc
push
int
test
cmp
cdq
imul
pop
jae
dec
test
dec
dec
popf
neg
lods
call
sub
mov
addr16
fmul
cwde
call
sub
cmp
(bad)
push
je
retf
adc
(bad)
stc
fs
(bad)
adc
test
in
adc
add
nop
adc
popf
mov
fbstp
fist
enter
xchg
out
push
dec
cli
inc
mov
repnz
sti
loope
test
lods
iret
jne
jmp
lahf
lock
xchg
and
adc
add
maxps
imul
dec
das
in
sub
add
cmps
iret
and
push
int
inc
sahf
pusha
test
mov
xor
retf
inc
arpl
xchg
in
cmc
xor
push
rcr
pushf
sub
dec
jmp
sbb
cmp
jp
sar
and
dec
mov
ins
push
test
addr16
mov
repnz
push
pushf
sahf
mov
outs
(bad)
leave
(bad)
stc
or
cmp
outs
and
add
imul
pop
adc
jl
cmp
inc
fnstcw
inc
mov
hlt
jp
xlat
pop
call
pusha
and
push
jae
jmp
mov
ss
sahf
add
or
xchg
adc
sbb
pop
iret
imul
aam
xchg
rcl
arpl
stos
les
pop
lds
pop
push
and
add
ret
adc
mov
cld
retf
call
inc
mov
or
sbb
adc
inc
dec
xlat
pcmpeqd
call
and
or
push
jecxz
and
mov
inc
mov
mov
push
cld
out
cmp
jmp
inc
bound
inc
jge
call
bound
xchg
retf
mov
adc
sub
movs
sub
imul
es
or
pop
fsubr
pop
xor
rcl
xchg
stc
xor
not
aam
(bad)
sahf
mov
pop
xchg
add
inc
cmp
in
das
add
or
stc
mov
jmp
enter
loopne
rcl
outs
loope
inc
fidiv
(bad)
cmps
sbb
les
sar
stos
mov
sub
fxch
mov
in
rcr
shl
and
and
scas
add
sbb
scas
mov
push
clc
push
adc
push
mov
xchg
lods
aas
mov
jbe
dec
push
push
dec
cmp
mov
xchg
test
inc
ffreep
pop
or
fld
mov
sub
inc
popf
push
cmp
dec
js
or
jmp
aam
push
adc
in
cmps
pusha
pop
std
jle
fnsave
sbb
imul
mov
pusha
pop
in
cmc
and
and
fs
jbe
sbb
(bad)
pushf
out
pop
dec
cmp
or
xchg
dec
mov
jmp
xor
sti
push
mov
out
and
xchg
sub
jle
jecxz
test
fwait
lods
(bad)
in
adc
(bad)
xchg
loope
pop
or
pop
pop
lea
cmp
adc
js
popa
std
cmps
adc
bound
mov
push
out
push
push
outs
mov
sbb
xchg
dec
jne
pushf
call
jmp
sub
imul
scas
popa
xor
jl
push
mov
push
push
out
int
sbb
cs
cmp
loopne
pop
fbld
or
jmp
call
push
or
das
cdq
lahf
mov
jge
mov
es
pop
data16
popa
icebp
or
and
dec
cmps
mov
cmp
inc
adc
adc
std
add
sub
pusha
movs
jns
stos
std
dec
add
ret
cmps
cdq
or
push
outs
add
loope
and
adc
jne
jmp
jo
or
mov
pop
daa
call
dec
dec
xchg
imul
aaa
xchg
xor
mov
in
iret
cld
add
out
cmp
(bad)
js
loop
jno
pop
cli
out
mov
movs
sar
cs
outs
push
xchg
int3
ret
popa
add
ja
stc
mov
out
aad
adc
pushf
(bad)
clc
outs
ret
pop
add
jnp
hlt
sar
and
fist
pop
pop
arpl
pop
dec
mov
je
aad
stc
add
mov
lds
mov
mov
adc
sbb
adc
imul
test
xlat
sbb
mov
jle
stos
cmp
aam
stc
scas
cld
pop
aas
sbb
test
sbb
mov
retf
cs
repnz
fwait
jle
jle
push
adc
push
lds
ja
pop
rcr
stos
mov
pushf
cmp
xchg
adc
shl
or
adc
outs
loope
jge
out
in
mov
xchg
sbb
dec
popf
(bad)
repnz
enter
mov
jno
xor
lahf
mov
dec
movs
repnz
loop
shl
sub
dec
push
out
lea
loop
cmp
imul
jo
mov
mov
cmp
rcl
(bad)
cli
add
push
mov
cmp
dec
test
ror
iret
or
jge
aaa
test
int
xchg
popf
sbb
jecxz
sahf
mov
sub
loop
outs
pop
outs
stc
in
out
pop
cmp
mov
jge
mov
gs
mov
fnstsw
aas
cmps
dec
inc
add
test
(bad)
lock
xchg
mov
mov
inc
mov
and
mov
mov
cmp
les
dec
enter
ror
loop
and
and
arpl
push
cli
(bad)
stc
hlt
dec
bound
les
jl
inc
mov
cmp
icebp
cmp
out
inc
out
mov
pop
(bad)
xchg
cmp
ins
arpl
aas
or
int3
pop
inc
out
jo
jno
adc
xchg
out
cmp
aam
ret
sub
js
clc
xchg
(bad)
int
fistp
out
jno
hlt
ss
rcl
les
inc
icebp
daa
sub
and
enter
into
adc
add
scas
mov
nop
scas
jmp
sar
cld
inc
adc
int
mov
dec
jle
pop
sbb
jecxz
xchg
push
test
inc
jle
jb
lea
jp
push
mov
or
dec
and
mov
icebp
push
fst
sub
dec
pushf
mov
ja
sbb
ret
js
jbe
jne
push
and
push
or
mov
mov
xchg
mov
pusha
arpl
jnp
push
outs
xchg
mov
cmc
fwait
dec
mov
and
rcr
movs
cwde
sbb
jbe
cmp
(bad)
(bad)
xchg
add
(bad)
int
xchg
jecxz
imul
sub
jne
push
push
sbb
pop
icebp
mov
push
(bad)
out
mov
jge
ja
pop
mov
inc
xlat
imul
iret
add
lods
pop
mov
push
das
xchg
sbb
(bad)
push
mov
inc
inc
pusha
mov
and
push
aaa
lahf
out
fiadd
add
(bad)
xlat
and
dec
sub
and
xor
xchg
jp
jg
shl
gs
mov
jno
xor
shl
lea
pushf
ja
xor
pop
pop
in
mov
lds
xchg
cmc
shr
data16
loopne
(bad)
push
mov
in
jg
out
jecxz
scas
mov
jno
out
sub
xor
sbb
mov
pushf
mov
lea
dec
mov
test
mov
arpl
or
call
popf
mov
cmp
lods
pop
ins
mov
xchg
mov
pop
push
lods
dec
mov
ins
jnp
inc
(bad)
cs
pushf
add
mov
sbb
add
pusha
ror
or
lods
pop
pop
fnstcw
jo
fld
test
jl
int
or
ror
in
push
and
and
mov
inc
(bad)
cmp
fldenv
fwait
and
test
rcl
jecxz
or
(bad)
(bad)
pop
mov
inc
pop
sti
jp
mov
into
fdiv
sub
add
repz
cmp
and
arpl
iret
mov
repnz
jno
sub
std
add
push
in
iret
add
ret
xor
dec
add
or
or
jo
dec
ss
lahf
ret
xchg
cmp
add
ss
sub
pusha
lea
mov
adc
dec
mov
loopne
(bad)
or
retf
xor
int
daa
movs
ret
shl
pop
jno
dec
adc
ror
(bad)
or
fwait
jmp
mov
in
out
das
test
xchg
cli
mov
jmp
sbb
sub
je
fnsave
scas
and
jp
idiv
mov
or
jg
shr
loopne
arpl
mov
inc
out
sbb
call
cld
shl
sahf
and
pop
ins
pop
push
cmp
sbb
jne
jp
(bad)
popa
xlat
mov
repnz
leave
daa
(bad)
loope
adc
shl
dec
pop
mov
cli
and
stc
sbb
out
push
js
(bad)
sub
xchg
scas
xchg
stc
popa
loope
adc
inc
sbb
(bad)
push
mov
prefetch
repnz
mov
(bad)
rol
xchg
ds
and
scas
dec
mov
sub
mov
sbb
xor
and
push
mov
repz
outs
mov
jb
inc
iret
pop
push
sbb
mov
ds
mov
jmp
ret
pop
xchg
imul
outs
adc
lds
shl
mov
jno
ins
shr
or
stos
jle
xchg
fsub
retf
(bad)
mov
add
scas
mov
hlt
int3
cmp
lds
xchg
out
xchg
mov
imul
mov
pop
cwde
mov
into
mov
movs
adc
fisttp
pop
cli
pop
mov
mov
pop
pop
lea
push
cmp
cmp
adc
and
cmps
jns
cs
gs
push
xchg
cdq
scas
push
and
xchg
loope
pusha
sbb
mov
sub
xor
(bad)
adc
shl
adc
xlat
test
pop
int
sbb
jo
mov
ret
test
iret
(bad)
sti
in
lods
xor
clc
and
mov
je
movs
sub
and
(bad)
or
xchg
pop
out
inc
loop
adc
sbb
mov
xchg
in
cmps
cmc
push
(bad)
repnz
mov
rcl
inc
fmulp
(bad)
out
popa
test
jecxz
mov
jecxz
sar
and
and
imul
dec
xchg
inc
jnp
and
call
cmc
or
stc
shl
and
mov
push
cmc
ss
cmp
in
retf
icebp
fcomp
add
and
push
lds
jo
inc
adc
js
bound
push
or
jg
push
lea
cmps
sbb
rol
cwde
xor
into
scas
mov
push
cmp
cli
and
fnstsw
repnz
add
cmp
cmp
dec
sub
int
push
stos
mov
in
loop
pop
mov
cdq
mov
sub
sbb
pop
cmp
mov
jmp
add
mov
xchg
stos
fwait
xor
repnz
xchg
and
mov
ret
call
fmul
dec
cmps
jmp
jne
mov
fwait
pop
xor
test
jns
inc
movs
adc
test
push
push
add
test
sbb
jl
and
sbb
in
into
jb
lock
iret
xchg
inc
push
jae
xchg
push
pop
mov
sti
mov
ret
cmps
movs
cmp
ret
gs
mov
daa
sbb
bound
push
(bad)
jg
mov
mov
sbb
push
mov
js
fwait
jp
mov
add
mov
pushf
adc
out
adc
mov
bound
inc
adc
pop
xor
cmp
gs
mov
leave
jp
cld
mov
stc
dec
hlt
cwde
fwait
mov
or
adc
imul
call
js
mov
les
dec
sti
mov
and
pop
push
int3
repnz
cmp
add
std
or
jle
inc
add
rep
in
cli
mov
mov
lea
xchg
gs
push
out
hlt
mov
shr
mov
lea
and
(bad)
and
loope
sbb
in
ins
pop
push
jmp
mov
out
xor
mov
(bad)
test
aad
loop
fst
cmc
ret
(bad)
das
les
xchg
jno
lods
js
sar
sub
jne
mov
sti
and
xchg
push
ja
rcl
pop
mov
jp
les
or
mov
shl
mov
out
imul
int3
jnp
mov
xchg
jno
or
or
test
test
call
fild
(bad)
pop
mov
xor
and
pop
push
ds
dec
jmp
sbb
(bad)
pop
mov
inc
mov
out
leave
cmp
mov
mov
xchg
jne
leave
pop
lods
loopne
pop
test
jbe
daa
xchg
mov
or
jns
xchg
dec
mov
outs
sub
dec
sub
sub
or
sbb
int3
div
push
nop
scas
sbb
fwait
lds
loope
popf
adc
mov
adc
popf
fnsave
jno
mov
push
out
daa
add
jno
out
sbb
cli
ins
add
mov
sub
test
fcmovu
jmp
ja
mov
mov
add
(bad)
out
adc
or
jb
mov
arpl
inc
sbb
mov
int
inc
cmp
cmp
fiadd
cmp
aas
xchg
paddw
cmovno
sub
cmps
adc
mov
enter
and
daa
add
imul
or
cmp
add
jno
pop
cmp
adc
lea
sbb
cmps
jl
or
fnstsw
mov
jp
mov
sub
retf
dec
add
mov
into
div
adc
and
inc
ror
pop
ds
adc
mov
fadd
push
mov
ror
dec
mov
fld
je
pop
adc
stc
and
in
cdq
and
icebp
pushf
push
mov
sbb
mov
cmp
iret
dec
sahf
xor
cmp
push
push
xchg
lahf
or
dec
push
dec
call
dec
jne
or
mov
ret
push
dec
or
sbb
and
add
mov
push
fist
add
cmc
in
rol
push
fdivr
mov
cmp
sbb
and
cmps
daa
test
lds
add
pusha
ficom
jp
popa
lods
jmp
neg
adc
pop
lock
xchg
fs
in
jle
shl
pop
int3
test
je
shl
pop
or
repz
mov
cwde
pop
mov
jle
lock
ins
in
inc
pop
shl
std
call
arpl
imul
jle
xor
repnz
js
pushf
pop
call
lods
out
mov
mov
jno
mov
jg
out
ret
adc
ins
(bad)
pop
mov
sar
scas
pop
aam
ins
xlat
jg
in
dec
dec
(bad)
pop
xchg
push
xor
mov
(bad)
sub
mov
out
retf
jmp
xchg
clc
daa
(bad)
stos
dec
fidivr
stos
cwde
push
in
push
jne
ins
(bad)
rcr
fnstcw
sub
imul
mov
xchg
in
and
sbb
iret
cmp
xchg
out
or
push
aaa
out
push
cld
hlt
int3
push
or
push
stc
ja
aam
push
jno
inc
adc
cmp
sbb
aas
xor
pop
or
test
xchg
pop
pushf
lea
in
cld
jno
ret
fs
bound
or
std
popa
xchg
stos
push
dec
outs
jmp
(bad)
push
jns
or
pushf
sbb
fidivr
in
push
sbb
or
ret
fsub
fisubr
arpl
pop
cli
mov
mov
and
pop
callw
inc
dec
xchg
push
sub
xchg
ret
or
xchg
mov
lds
or
sub
xor
or
xchg
shl
or
cld
pop
mov
jnp
cmc
retf
pop
ja
jmp
jmp
repnz
retf
out
add
fs
mov
in
sbb
mov
loop
jne
and
fldenv
lds
aam
mov
ret
adc
mov
rol
xchg
shl
clc
sbb
imul
mov
push
push
jle
dec
push
pusha
mov
xor
or
mov
cmc
cmps
sbb
adc
gs
(bad)
cs
movq
test
cmps
jge
sbb
jne
(bad)
icebp
mov
mov
test
pop
movs
xchg
js
fs
cmp
mov
and
sahf
fcmovnb
pop
call
hlt
nop
movs
pop
in
cmp
in
loope
or
sti
repz
lea
lods
push
push
adc
lahf
fnstsw
(bad)
lds
(bad)
jmp
(bad)
mov
mov
nop
jmp
push
test
aam
sar
xchg
and
test
push
adc
(bad)
lods
sub
iret
daa
rol
mov
and
or
scas
or
into
cld
clc
jp
in
jmp
dec
test
dec
mov
xchg
inc
mov
mov
cmp
sbb
mov
cli
lods
pop
cli
mov
imul
jnp
lock
daa
push
sub
xchg
pop
arpl
aas
add
cmp
into
mov
and
js
or
test
cmc
xchg
mov
in
cmp
inc
call
sub
jns
and
mov
js
push
in
fist
jle
loop
sbb
cmp
xchg
loopne
mov
movs
xor
mov
je
mov
js
lock
pop
(bad)
fbstp
std
sar
in
xchg
(bad)
xchg
mov
pop
seto
aaa
loopne
loopne
aaa
pop
imul
fidiv
mov
pop
jno
imul
adc
xor
jbe
es
pop
mov
fstp
cwde
mov
dec
pusha
inc
jne
sbb
add
mov
xor
std
add
mov
adc
scas
pop
xchg
dec
and
xor
repz
mov
in
jl
data16
push
cmc
(bad)
jmp
mov
inc
call
into
daa
mov
and
cmp
pusha
stos
out
push
push
and
rep
push
ins
mov
pop
mov
movs
and
cli
jecxz
cmp
sar
ss
outs
jmp
mov
pop
out
aad
test
sub
data16
int
sbb
pop
dec
jbe
pop
out
push
(bad)
mov
fcomp
jae
dec
in
and
fcmovu
aam
jb
pop
mov
enter
adc
gs
jo
xchg
mov
test
or
aad
popf
pop
cmp
ret
test
add
sbb
cmp
idiv
dec
jno
out
in
imul
pop
jo
xor
xchg
mov
and
xchg
or
cwde
or
mov
adc
jns
stc
or
test
xor
scas
jge
cdq
sbb
and
jmp
add
lods
mov
xlat
sbb
pop
sub
mov
(bad)
add
rol
jmp
jmp
into
in
dec
lods
aad
mov
mov
mov
adc
icebp
push
pop
mov
iret
in
test
xor
sub
aaa
sbb
neg
lock
test
pop
push
and
sub
jae
xor
jmp
ja
div
xlat
jns
test
jg
inc
bnd
cld
hlt
xchg
lds
add
gs
out
xchg
fwait
and
fistp
cli
add
leave
jne
push
add
mov
int
lods
push
sbb
pusha
pop
out
dec
popa
jns
ror
test
jmp
mov
xchg
xchg
push
mov
mov
rcl
fs
fs
test
pop
inc
push
adc
iret
jo
aam
pop
lods
or
mov
data16
and
mov
das
add
jb
push
dec
(bad)
cmc
mov
fcmove
jle
mov
cwde
out
inc
or
test
mov
mov
cmp
cmc
loope
pop
rcr
and
(bad)
outs
js
xchg
jle
in
pop
pop
mov
pop
out
push
out
sti
in
xchg
or
xor
pop
int
adc
adc
mov
pushf
fistp
ret
(bad)
mov
inc
pusha
push
cmp
cmp
pop
mov
adc
rcl
add
inc
pusha
push
sahf
sahf
mov
push
push
xchg
fld
test
cmp
cli
scas
push
(bad)
(bad)
ds
push
repz
xlat
ret
das
add
out
mov
sub
add
cmp
iret
lock
cmc
jle
jnp
neg
sbb
jecxz
mov
ins
pusha
(bad)
test
fmul
hlt
dec
data16
mov
xchg
or
mov
jmp
or
jge
jg
cwde
push
pop
inc
in
jb
ficomp
jb
jecxz
xchg
cmp
in
sbb
outs
push
adc
stos
xor
xchg
and
fsubr
iret
ss
and
nop
push
mov
sub
rcr
sbb
aam
in
pop
cmp
jb
xchg
sub
xor
inc
shl
repnz
jo
xor
ins
adc
enter
mov
das
jae
mov
ins
int3
jo
xchg
test
adc
xchg
or
pop
outs
or
ins
mov
popa
xchg
mov
test
test
in
loope
fs
(bad)
rcr
push
sbb
push
bsf
retf
push
add
loope
push
inc
loope
pusha
mov
pop
push
test
sti
call
push
gs
sbb
inc
jns
out
dec
std
xor
mov
dec
xchg
enter
jb
cmp
jmp
mov
ret
mov
mov
aaa
inc
push
jb
in
outs
pusha
and
or
pusha
and
das
push
jno
xchg
xor
ins
int
push
gs
repnz
leave
mov
push
fld
push
fnsave
jl
add
jo
and
cwde
leave
call
mov
pop
fsubr
shr
into
xor
inc
jg
imul
je
out
int
je
mov
xchg
xchg
dec
rcr
jecxz
fistp
iret
loope
bound
push
les
pop
scas
out
lock
xchg
xor
mov
pop
inc
push
das
jl
adc
out
ja
movs
je
addr16
fnstcw
inc
stos
aaa
push
xlat
mov
mov
movs
inc
jbe
sub
fwait
sbb
cdq
push
fnsave
inc
mov
and
aaa
lods
and
mov
out
sub
push
addr16
pusha
cmp
add
mov
in
mov
cld
and
fimul
inc
loope
loopne
fistp
popa
sbb
or
shl
mov
jl
jbe
xor
mov
test
aas
sahf
jae
and
inc
aas
dec
mov
cmp
out
inc
ins
sysexit
ins
xor
clc
cmp
stos
xchg
pop
jnp
addr16
push
dec
ds
int3
lods
pop
retf
idiv
call
daa
mov
jecxz
or
sbb
movs
dec
and
sub
js
(bad)
xor
cdq
mov
xor
cld
or
cmp
add
pop
daa
int3
ins
sbb
inc
cmp
sahf
add
jno
xor
cmp
outs
xchg
retf
add
sub
mul
fs
std
arpl
sub
mov
movs
xchg
cmp
mov
pop
in
pop
xchg
ins
nop
aaa
add
jl
or
xor
movs
cmp
pop
sti
jl
jle
shr
lods
neg
pusha
add
lea
push
pop
arpl
fld
lock
mov
bnd
rcl
mov
jns
sbb
xadd
ins
dec
cmovle
stos
loop
(bad)
test
sahf
shl
lfs
leave
push
sub
jp
add
frstor
cmp
mov
inc
adc
jmp
mov
sub
pop
or
push
je
mov
mov
(bad)
cli
pop
dec
scas
rol
aaa
mov
and
xor
jmp
lds
push
cld
add
pop
jl
call
movs
lods
sub
ins
push
xchg
inc
jae
mov
out
retf
cmps
and
std
xchg
in
sbb
mov
pop
push
mov
xchg
cwde
retf
jmp
(bad)
js
aam
xchg
pop
dec
ja
jg
push
and
push
dec
neg
test
fbstp
mov
fsub
sbb
fcmovbe
dec
movs
add
jae
or
or
jno
cmps
mov
lea
lock
inc
(bad)
mov
adc
sub
pusha
add
mov
jne
and
pusha
aam
gs
dec
jl
arpl
fsub
fstp
stc
inc
int3
or
test
pop
addr16
jmp
enter
fdivr
hlt
sbb
enter
scas
jecxz
xor
jne
xor
enter
pop
push
push
ds
bound
mov
sub
pop
ins
fidivr
cmps
lods
pop
mov
ja
jb
popf
iret
imul
and
je
das
pop
dec
test
jp
hlt
inc
jns
dec
xor
xor
add
mov
xor
test
or
repz
test
inc
sbb
xlat
pop
dec
fwait
lock
jmp
call
or
sbb
fnstcw
mov
mov
call
adc
cwde
enter
dec
cmc
sub
jle
pushf
or
xor
inc
imul
mul
mov
jmp
iret
sbb
xchg
mov
mov
mov
lods
cmps
ret
and
loop
repz
scas
mov
push
xchg
out
clc
loope
test
and
push
(bad)
sar
jle
pusha
sbb
shr
stos
call
imul
push
outs
enter
push
stos
arpl
arpl
mov
mov
and
pop
lea
mov
pop
jne
(bad)
xchg
adc
not
xlat
adc
xor
pop
rol
cmp
jecxz
popf
dec
dec
loop
pop
push
icebp
push
test
outs
mov
inc
ds
pusha
rcl
push
sub
jge
sahf
mov
mov
mov
in
popa
pop
mov
mov
in
dec
stc
fmul
inc
popf
dec
mov
jb
ins
mov
or
push
pop
lahf
sub
loop
mov
popa
mov
cmc
(bad)
push
cmp
pop
out
mov
stos
into
dec
xchg
mov
inc
sahf
arpl
mov
mov
adc
shl
movs
loopne
xchg
xor
mov
xor
test
sub
jnp
es
or
add
pop
jg
mov
fsub
jle
xchg
cmp
test
push
daa
je
loop
arpl
cmp
push
push
push
jmp
add
mov
pop
xchg
je
hlt
das
xchg
adc
(bad)
adc
pusha
test
dec
pop
push
fwait
mov
xor
inc
in
pmaxsw
mov
lods
jb
pusha
xor
mov
retf
jbe
aad
adc
and
mov
cmp
ficomp
push
add
pushf
and
sub
data16
mov
mov
dec
push
sub
in
popa
jle
(bad)
(bad)
and
sub
mov
cld
test
push
xor
and
adc
jge
and
xchg
cmp
mov
sub
xor
inc
ja
fst
xor
lods
icebp
js
jnp
das
mov
cmp
push
xor
inc
repz
bound
aam
mov
jno
or
hlt
jl
push
pop
xchg
fsub
jbe
out
sbb
mov
fisubr
mov
(bad)
in
pushf
mov
pushf
arpl
sbb
xchg
inc
dec
or
or
rol
and
pop
push
mov
sub
dec
jle
loopne
or
pop
and
out
cmp
push
das
mov
mov
mov
clc
jmp
out
fprem1
sub
pop
mov
pop
or
imul
sub
cwde
cmp
stos
pushf
mov
(bad)
loop
push
scas
fsubp
pop
iret
add
inc
retf
(bad)
push
jle
xchg
popf
das
icebp
xchg
adc
(bad)
push
add
jmp
int3
fs
(bad)
sbb
loop
test
aad
rcr
fld
jp
jge
jne
add
jmp
in
fwait
dec
jl
lds
xor
xor
ja
lahf
cwde
test
jbe
in
and
add
cmc
stos
addr16
test
aam
sub
jmp
mov
sub
or
and
outs
(bad)
outs
adc
test
rcr
fs
std
pop
mov
mov
out
mov
shl
jb
scas
push
mov
push
mov
mov
xchg
add
mov
fdivr
lods
sbb
call
xchg
cmc
push
add
rol
jge
cmp
fcom
fisttp
pop
or
cld
fincstp
movs
add
aad
xchg
shr
mov
pop
push
fstp
push
cmp
lahf
dec
sbb
pop
pop
nop
hlt
mov
inc
jl
cdq
stos
pop
xchg
mov
pushf
lock
inc
mov
mov
test
add
pusha
imul
xor
jnp
mov
adc
ss
ficomp
mov
shl
jno
or
adc
mov
mov
cmc
and
ja
or
mov
in
push
and
pushf
pop
cmc
outs
dec
jecxz
or
dec
mov
sbb
lea
adc
dec
pop
cmp
or
adc
xor
outs
fisub
test
dec
or
(bad)
mov
pop
repz
mov
sub
xchg
sbb
mov
pop
jmp
retf
adc
shl
test
aad
inc
xchg
pop
xor
xlat
in
pushf
scas
mov
stc
(bad)
xchg
ficomp
add
mov
fwait
lds
xor
popf
fdivr
in
and
adc
jecxz
inc
aas
fs
pop
ins
fisttp
sub
lea
pop
pop
jge
lods
and
mov
shr
mov
std
add
sub
jbe
mov
pop
add
sbb
inc
add
stos
inc
ds
jge
or
js
in
fisub
push
xchg
cld
sub
int
repz
cdq
add
adc
push
push
retf
add
rcl
out
mul
jbe
repz
scas
xor
push
sahf
test
push
adc
xchg
lds
adc
ins
outs
in
ret
ins
and
sub
(bad)
mov
pop
enter
rol
mov
ja
fild
add
push
inc
sbb
mov
mov
cwde
into
xor
and
icebp
imul
loopne
fidiv
jmp
(bad)
call
or
xlat
cmp
imul
daa
jle
mov
pusha
jne
xor
out
call
or
inc
popa
jno
adc
add
or
jp
mov
mov
mov
inc
or
pop
dec
jno
push
in
dec
mov
xchg
hlt
mov
or
retf
push
mov
inc
or
out
imul
cdq
xlat
xchg
push
xor
out
(bad)
sub
inc
jecxz
je
pop
ret
or
mov
cmps
or
in
dec
imul
jmp
outs
jns
and
push
add
ja
aad
loopne
adc
push
push
mov
sbb
inc
xchg
movs
or
xchg
addr16
scas
dec
addr16
and
sti
add
gs
into
loope
jns
mov
push
or
in
mov
addr16
jb
mov
push
in
adc
imul
pop
scas
sub
inc
and
loope
loop
xchg
(bad)
in
mov
xlat
push
cdq
clc
mov
imul
shr
jl
adc
inc
aaa
stos
bound
adc
adc
(bad)
rcr
sbb
pop
sbb
and
cdq
fmul
dec
lock
dec
push
mov
mov
or
add
enter
fiadd
jnp
dec
jl
fst
jmp
mov
mov
ins
je
sub
xor
xor
call
adc
js
mov
js
jmp
sbb
jg
mov
pop
in
add
sbb
jecxz
cmp
mov
adc
test
sbb
ror
test
mov
jo
jg
shl
xchg
mov
mov
xor
cmp
sub
push
das
mov
xor
leave
pusha
and
scas
mov
sub
lds
xor
fld
sbb
icebp
int
data16
add
lods
cld
pop
sub
pushf
jge
ins
push
jo
mov
pop
sub
popf
xchg
push
xor
inc
pop
pushf
dec
jmp
dec
push
xor
idiv
pop
inc
push
pop
mov
sbb
and
mov
lock
cmp
cmc
sbb
xchg
loopne
cmp
test
cmp
(bad)
xchg
int
cmp
retf
xchg
adc
cmp
(bad)
outs
mov
mov
push
stos
mov
iret
rol
cmps
inc
adc
(bad)
shl
hlt
jp
jge
fist
sub
pop
ss
sbb
adc
ret
je
xchg
ins
xchg
nop
add
pop
popf
inc
sbb
sbb
shr
adc
cli
je
imul
mov
popf
in
dec
jg
add
pop
xchg
jo
mov
stos
pop
imul
pop
aaa
repz
dec
mov
pushf
rcl
adc
xor
mov
inc
xchg
push
mov
inc
mov
mov
xor
lea
adc
out
leave
and
pusha
(bad)
fisubr
dec
popa
xchg
sbb
in
scas
dec
es
ror
push
stc
push
adc
pop
out
xchg
jns
retf
jmp
pop
pusha
jl
rol
(bad)
mov
outs
inc
pusha
not
mov
outs
or
ror
mov
push
mov
mov
rcl
mov
inc
and
shr
(bad)
xchg
ficomp
jl
fsub
sti
test
in
push
in
ret
xor
icebp
pop
mov
dec
or
popf
mov
jg
int
adc
jmp
je
and
cli
hlt
out
popw
mov
fld
adc
test
sti
shl
mov
(bad)
xor
or
out
jb
sub
xor
push
pop
enter
dec
pop
neg
add
push
add
imul
cld
test
rcr
dec
adc
test
in
and
jge
fld
mov
add
sub
mov
dec
in
out
les
cmps
xor
data16
outs
mov
imul
xchg
movs
or
push
xchg
fwait
dec
fwait
mov
cmps
in
pop
rol
mov
in
test
mov
mov
xchg
cmp
xchg
mov
out
jg
(bad)
test
jb
adc
retf
mov
xchg
sub
fmul
mov
ret
xchg
cdq
adc
mov
mov
adc
cs
mov
fadd
sbb
and
add
and
or
pushf
sub
nop
or
std
jae
outs
int3
aaa
adc
(bad)
push
cmp
fnstcw
(bad)
cli
rcl
fldenv
add
xchg
sbb
pop
shl
sub
mov
cdq
lock
pushf
aas
mov
stos
pop
ret
xchg
jmp
adc
mov
or
jo
cli
xchg
adc
std
fist
ficomp
sahf
std
data16
fwait
jl
mov
or
pop
mov
enter
je
int3
push
mov
inc
aaa
nop
mov
sub
lods
stc
add
pop
test
push
dec
fist
push
inc
movs
add
scas
or
shl
mov
xchg
lods
daa
loope
push
mov
push
outs
fwait
movs
popf
(bad)
sbb
adc
sub
shr
jnp
mov
add
test
xor
or
pop
outs
or
nop
jg
dec
loope
sub
mov
inc
ins
inc
sbb
js
ror
add
jp
arpl
mov
and
pop
repnz
in
xchg
fmul
pusha
nop
(bad)
pop
or
and
jo
test
push
out
mov
xchg
push
(bad)
cli
sub
rcl
lds
loope
loopne
xchg
test
int3
and
bound
push
movs
loopne
stos
or
outs
sub
clc
inc
jbe
push
lds
sub
jno
sub
sub
push
bound
imul
xor
jl
loopne
mov
outs
cmc
cdq
adc
mov
outs
sub
jmp
jae
mov
xor
push
rcl
outs
int3
nop
lea
movs
mov
ss
mov
jmp
(bad)
mov
aad
ins
pop
or
inc
sbb
aaa
jmp
ror
(bad)
mov
push
and
cmp
push
mov
dec
mov
cmp
shl
jmp
dec
cmc
cs
push
lds
aad
popf
push
push
push
xchg
and
test
or
cmp
mov
mov
adc
dec
jl
mov
inc
jp
(bad)
push
repz
aas
call
add
adc
jecxz
(bad)
push
sbb
mov
bound
xor
add
mov
das
mov
pop
sti
pusha
mov
dec
jmp
int
ins
pop
mov
jge
sbb
cmp
ror
ret
pop
adc
and
pop
add
lock
adc
or
lods
jns
sbb
sbb
adc
cmp
xor
xor
call
mov
rol
fild
lock
mov
or
aaa
or
sub
push
call
leave
mov
jecxz
enter
inc
aas
movs
les
dec
cmp
pop
mov
das
lods
sub
and
jb
cmc
xchg
cmp
mov
sahf
pop
mov
mov
test
inc
ret
enter
cmp
ss
test
push
in
ret
popf
out
retf
(bad)
jmp
adc
sahf
ret
inc
sbb
ficomp
mov
outs
jb
mov
loope
adc
adc
pop
inc
and
out
pop
sbb
cmps
cmp
xchg
nop
xor
in
test
xlat
sbb
mov
cdq
pop
neg
xchg
shl
push
xchg
xor
or
(bad)
cmp
das
sub
mov
xchg
mov
inc
fnsave
jg
jge
sbb
hlt
test
cld
out
xchg
push
enter
or
inc
push
dec
lahf
jo
out
xor
jns
mov
sti
ret
int3
or
dec
sbb
xor
sub
mov
mul
popa
push
call
ror
xchg
sub
rcl
cmps
les
(bad)
je
xor
inc
mov
cmp
scas
nop
std
mov
(bad)
repz
mov
mov
imul
mov
pop
or
dec
data16
mov
xchg
sbb
movs
xor
cmp
in
dec
add
enter
loopne
enter
sbb
mov
xchg
fs
push
sti
xchg
mov
add
loope
movs
arpl
popf
ret
cld
ror
imul
in
mov
pop
cs
rcl
add
jl
call
mov
into
sub
ret
adc
cmp
mov
adc
push
push
mov
and
jmp
lods
or
add
aas
push
popa
sub
xor
xchg
das
jge
jmp
push
fst
aaa
xchg
movs
inc
xchg
and
mov
mov
pop
add
pushfw
jmp
int
icebp
inc
and
iret
cli
lea
movs
sub
cld
daa
ins
bound
dec
out
(bad)
sbb
hlt
push
mov
and
push
sbb
loopne
xchg
call
adc
ja
js
(bad)
mov
movs
cdq
push
push
cmp
jmp
loope
ds
rol
popa
fiadd
adc
es
ins
loope
lods
adc
jmp
ret
fcom
push
out
mov
and
clc
cmp
sbb
mov
xchg
fiadd
xchg
xchg
out
retf
push
stc
jnp
push
sahf
sbb
push
out
int
xlat
sbb
pop
mov
and
repnz
sub
dec
dec
add
add
xchg
xor
out
test
mov
retf
loope
mov
pop
pop
movs
xlat
mov
out
sbb
loopne
xor
test
in
pop
daa
sti
mov
xor
xchg
loopne
jp
sbb
cmp
fisub
loopne
pop
js
mov
dec
or
lahf
rcr
(bad)
movzx
fmul
push
xchg
aaa
(bad)
xchg
es
sti
mov
inc
movs
ins
pop
pop
fistp
push
dec
xlat
gs
jp
adc
ret
or
sub
test
aaa
and
lea
xchg
cs
push
lock
jns
add
mov
icebp
(bad)
stc
movs
xchg
data16
sti
test
jne
lods
mov
aam
sbb
jo
test
dec
pop
iret
shl
rcr
pop
mov
or
(bad)
pop
mov
out
pusha
inc
xchg
cdq
sbb
outs
data16
mov
gs
leave
call
outs
nop
hlt
and
call
aad
scas
pushf
ja
fsub
mov
mov
rol
mov
xchg
mov
cli
lock
dec
aaa
imul
outs
lock
jns
mov
stc
aam
xor
pop
jne
xor
fdivr
movs
mov
xlat
cdq
pushf
push
aam
inc
adc
(bad)
fdivr
lahf
mov
jae
sbb
mov
xor
cld
cmc
or
je
adc
aas
outs
mov
das
setne
inc
pop
in
lods
pop
or
and
fstp
mov
cmps
mov
jo
cwde
push
aam
(bad)
test
sub
cmc
stc
repnz
cmp
jmp
(bad)
lock
or
stos
adc
xchg
lea
seta
pop
push
xchg
mov
xor
xor
hlt
mov
xor
push
jl
call
push
fwait
or
pop
mov
out
das
push
jbe
mov
cld
out
pop
das
mov
ror
or
fcom
repz
repnz
mov
sbb
jp
cmp
movs
jae
mov
pusha
movs
mov
clc
mov
push
pop
(bad)
fwait
hlt
inc
stos
shl
std
ret
rol
ins
cmp
retf
leave
stc
movs
jae
xchg
mov
xchg
mov
jmp
adc
push
jb
stos
jle
mov
call
(bad)
adc
xor
in
icebp
inc
enter
cmps
pop
pop
inc
sti
cmp
jl
shl
imul
xchg
aam
sbb
pusha
or
mov
sbb
mov
and
xlat
and
add
mov
int
dec
xor
sub
jmp
dec
jmp
jbe
sbb
mov
pop
inc
pop
jb
icebp
pop
mov
rcr
dec
push
jnp
shl
pusha
sbb
test
jne
push
test
frstor
add
(bad)
jmp
in
mov
imul
and
jbe
aaa
fidiv
inc
mov
sbb
lock
mov
cmp
fwait
rcl
movs
sub
movs
and
cmps
es
push
push
add
les
test
inc
imul
(bad)
loopne
xor
pop
and
mov
neg
pop
fisub
retf
sub
sar
pushf
pop
add
es
xchg
cmp
push
pop
xchg
push
inc
mov
dec
iret
shl
sbb
daa
xlat
test
xchg
data16
jecxz
mov
les
mov
scas
push
jl
jnp
or
scas
mov
loopne
xchg
sahf
inc
sub
push
add
movs
adc
outs
cld
inc
arpl
jmp
ins
lock
popa
push
aaa
int3
js
push
dec
out
xor
popf
call
jg
stos
daa
or
call
scas
test
sub
stos
mov
fwait
sbb
in
movs
in
jle
mov
lahf
mov
test
scas
rcr
call
sub
nop
adc
pushf
cmp
jle
mov
adc
mov
(bad)
cmp
fcomp
mov
xchg
mov
inc
push
int
in
jp
(bad)
clc
mov
call
xlat
loop
and
add
fist
stos
inc
jg
jno
int
adc
and
scas
aam
test
loopne
aad
call
xor
or
xchg
xchg
sub
cmps
mov
xor
outs
in
pusha
mov
mov
(bad)
cmp
divps
fwait
cmps
push
push
push
jmp
movsx
mov
or
mov
test
jae
psubw
cs
int
push
and
je
mov
or
mov
mov
les
fcomp
arpl
push
xchg
xchg
sbb
mov
and
cld
lods
pop
mov
mov
cmp
lahf
fcomp
ss
std
dec
je
adc
add
mov
fidiv
mov
aam
jge
out
jg
nop
(bad)
xchg
adc
fisub
pop
mov
jecxz
out
and
in
inc
in
out
int
adc
(bad)
push
int3
dec
push
mov
(bad)
jmp
scas
or
aaa
jne
(bad)
loope
(bad)
retf
fwait
jns
sub
test
fdivr
enter
test
repz
jle
push
outs
or
sahf
or
scas
xor
(bad)
fnstenv
cmp
in
sub
in
out
out
mov
popa
int3
imul
pop
adc
daa
jmp
xchg
adc
inc
xchg
out
sub
add
out
or
into
sahf
lds
sub
inc
mov
clc
push
(bad)
call
into
mov
pop
xchg
fst
stos
add
mov
div
xchg
popa
mov
stos
clc
in
je
mov
add
mov
push
or
gs
and
aam
mov
bound
sar
jno
xor
xchg
scas
mov
stc
out
or
xor
jge
call
dec
hlt
fstp
mov
aad
push
jecxz
ins
xchg
adc
push
sbb
movs
ins
cmc
lea
jge
jle
lea
rol
out
outs
inc
cs
jnp
mov
push
cmp
hlt
dec
xchg
sbb
arpl
(bad)
in
mov
push
cmp
mov
mov
jno
mov
push
push
sbb
mov
pop
mov
outs
sub
stc
push
xchg
cmp
test
mov
clc
and
xchg
ds
pop
aam
mov
stos
in
add
popa
dec
push
pop
or
jbe
(bad)
xor
lea
mov
dec
sub
dec
int3
stos
xchg
mov
xchg
(bad)
idiv
pop
jg
out
xchg
xor
(bad)
psubw
hlt
pop
mov
outs
mov
sbb
dec
inc
ins
adc
mov
dec
mov
xchg
mov
and
in
cmc
test
cmp
adc
adc
cmps
add
aam
push
icebp
pop
imul
or
add
mov
and
pushf
repz
dec
rcr
lock
mov
push
out
lods
add
jle
mov
xchg
mov
adc
shr
mov
jns
scas
ficomp
mov
in
push
mov
or
xchg
test
cmp
adc
and
int
push
nop
in
hlt
fild
add
add
cmc
mov
retf
mov
int
repnz
hlt
or
push
dec
aaa
fwait
inc
or
movs
sub
pop
fidiv
jg
(bad)
shr
pop
or
jbe
shl
push
jmp
mov
mov
movsx
iret
xor
dec
or
pop
fs
iret
push
mov
clc
cmc
repnz
pop
dec
sar
dec
and
sub
lahf
xchg
in
(bad)
xchg
jbe
loop
aas
or
and
inc
fwait
test
and
jo
sub
push
lods
ss
push
mov
xor
popa
fdivrp
iret
psubq
sbb
cmc
inc
imul
bound
mov
ja
test
pop
and
int
test
dec
ds
in
pusha
mov
in
inc
call
ja
pushf
and
stc
lock
(bad)
jmp
mov
dec
test
outs
push
dec
push
test
sub
(bad)
aam
add
lods
push
pop
inc
adc
fbstp
xchg
xor
dec
pop
fsubr
and
mov
scas
sbb
mov
repnz
clc
fwait
call
mov
leave
inc
icebp
xchg
call
loopne
jg
adc
cs
add
push
jo
pop
inc
mov
sbb
lahf
fisub
cmps
data16
inc
jb
pop
mov
cmps
or
jno
cs
lods
sbb
pop
sub
cmp
or
test
sbb
popf
mov
fild
(bad)
daa
retw
adc
lahf
mov
inc
test
(bad)
int3
adc
aaa
pop
jmp
mov
mov
test
shl
or
outs
out
repnz
xor
and
cli
mov
adc
loope
cld
xchg
mov
cmps
ret
pusha
loope
mov
jno
stos
bound
ds
xor
sub
mov
repz
adc
iret
xchg
mov
add
jecxz
dec
xchg
aaa
cmps
stos
outs
out
sub
xchg
pop
stos
add
jne
jne
mov
cmps
popf
pop
addr16
in
cld
pop
and
adc
or
cmp
sub
call
pusha
mov
dec
fidiv
nop
je
rcr
aad
cs
test
enter
pop
cdq
adc
scas
pushf
psubw
loopne
cmp
(bad)
pusha
jae
repz
fisttp
mov
cs
jecxz
into
fs
cmp
or
or
mov
in
pop
cmp
or
repz
mov
jns
ret
in
inc
lea
(bad)
into
pop
jmp
dec
pmulhw
add
stos
sub
pop
add
inc
push
jmp
ds
mov
mov
scas
outs
pusha
lock
es
pop
test
test
pop
cli
jno
retf
xor
and
xor
lock
fst
cdq
aas
xchg
arpl
and
out
gs
fadd
int3
je
xchg
jp
push
pop
push
jb
stos
mov
and
ds
cwde
mov
sub
lock
sbb
lahf
mov
rcl
dec
shl
mov
jbe
outs
js
mov
and
ja
mov
mov
mov
movs
popf
daa
xchg
and
sahf
repz
mov
icebp
jle
inc
sbb
or
mov
(bad)
adc
or
pop
not
and
cmp
sbb
xlat
(bad)
adc
push
(bad)
mov
add
pop
jmp
jge
je
xchg
popf
sbb
inc
movups
(bad)
inc
(bad)
lock
add
cmp
jae
mov
jle
jmp
jo
das
or
imul
pushf
sar
outs
stc
mov
add
mov
cmp
and
jne
mov
scas
push
sub
clc
jmp
sbb
xor
jae
mov
fsub
bound
dec
out
sub
std
fidiv
daa
and
mov
retf
inc
fsubr
pop
jne
mov
fistp
push
mov
ins
out
cwde
dec
inc
and
les
or
jle
push
cli
movs
shl
sub
idiv
pop
stc
jg
test
mov
rcr
cs
in
aas
clc
sub
adc
jle
ins
aad
inc
xlat
fiadd
jmp
in
cmp
retf
jmp
cmps
loope
(bad)
fcmovnu
out
mov
and
mov
sub
sbb
mov
mov
shr
and
pop
or
shr
push
xchg
mov
jno
or
in
jmp
mov
aaa
popf
enter
imul
push
dec
mov
cmc
movs
xor
and
xor
sbb
inc
rol
out
aas
jns
push
cmp
inc
stos
jbe
mov
inc
int3
lods
loop
pushf
mov
dec
push
mov
jecxz
nop
cmps
pop
cdq
lds
inc
nop
aam
mov
push
jmp
adc
mov
shl
jle
loopne
loopne
adc
dec
(bad)
(bad)
xor
dec
sub
je
cmp
popa
dec
dec
ror
clc
push
sahf
inc
jbe
adc
inc
div
cmc
dec
icebp
push
lahf
test
mov
pop
pop
adc
mov
cs
dec
dec
retf
cmp
pop
mov
dec
add
popa
push
out
xor
inc
pop
push
and
pop
xchg
xchg
push
sub
sub
ror
mov
jp
or
js
mov
sub
fisubr
jns
lds
fs
sbb
pop
mov
(bad)
and
xchg
xor
addr16
mov
idiv
(bad)
push
jmp
mov
clc
ss
push
adc
mov
adc
pop
mov
add
outs
jp
(bad)
jo
mov
lahf
(bad)
enter
sbb
push
repz
adc
push
pop
imul
add
jnp
push
push
pop
arpl
adc
adc
dec
sbb
mov
cmp
xchg
out
daa
sbb
push
or
push
mov
aas
jne
dec
scas
popf
es
mov
inc
call
in
pop
sar
call
push
sub
scas
adc
pop
out
cmps
data16
(bad)
sti
jmp
lock
inc
cmps
mov
xchg
ja
mov
int
scas
or
ins
or
outs
lods
aam
(bad)
xchg
cs
into
fadd
pusha
lahf
adc
mov
retf
pop
inc
or
lahf
mov
and
stos
loopne
movs
aam
sub
cmp
sbb
cwde
stos
jnp
add
cmp
dec
outs
pop
das
dec
and
cmp
ss
or
pusha
dec
out
xor
xchg
(bad)
out
daa
daa
ds
bound
jecxz
in
ja
push
or
fnstcw
adc
imul
jae
or
mov
test
add
pop
pop
mov
mov
push
mov
cmc
and
xor
jg
cs
or
push
lods
push
ins
js
mov
imul
clc
(bad)
call
jbe
neg
mov
lods
ja
mov
add
(bad)
icebp
nop
shr
inc
in
dec
popa
lods
or
lods
rcl
icebp
bound
lahf
inc
fild
pop
sub
cmps
rcl
mov
jmp
xor
pop
push
lds
hlt
cmp
adc
push
test
test
mov
mov
int
jmp
cmp
cmc
dec
imul
(bad)
sub
fnsave
jmp
xchg
stos
mov
scas
and
mov
cmp
cld
push
sub
js
aaa
or
mov
mov
arpl
call
je
hlt
jno
sub
inc
sbb
test
out
cmp
sub
push
sub
push
rcr
sti
push
and
out
push
xor
and
pop
push
aad
aas
dec
sub
jo
aas
lods
sub
sub
test
outs
pushf
es
(bad)
sbb
aas
mov
ins
mov
push
xchg
mov
sbb
inc
idiv
addr16
call
les
hlt
add
das
inc
pop
jmp
push
test
icebp
sub
pop
arpl
jp
mov
gs
lods
sbb
jns
packsswb
cld
bound
dec
dec
cmp
mov
or
fbld
pop
imul
fs
push
out
cmc
xor
in
test
pop
pop
push
and
mov
call
xor
test
(bad)
inc
int3
xchg
inc
xchg
dec
inc
cld
adc
dec
push
xlat
xor
ret
mov
mov
mov
cld
jecxz
push
aas
or
out
out
jg
mov
sbb
cld
xor
mov
mov
scas
cmps
sti
or
sahf
out
mov
fbld
test
mov
sub
xor
inc
movs
mov
jp
repz
(bad)
movs
dec
xor
sbb
jmp
cwde
dec
push
gs
out
popa
shl
xchg
mov
pop
leave
sbb
jp
pop
jmp
cmp
dec
imul
sbb
iret
hlt
loopne
dec
mov
or
and
pushf
push
inc
dec
dec
push
js
mov
mov
pop
and
xor
cmp
inc
mov
inc
and
xor
nop
xor
mov
push
or
lds
enter
ins
and
adc
(bad)
pop
fidivr
outs
inc
ret
aas
jp
mov
jae
stos
xor
arpl
push
inc
pop
add
mov
dec
cwde
loop
sbb
retf
pop
hlt
mov
fisttp
stos
jle
or
stos
bound
imul
loopne
mov
jecxz
rcr
sar
xor
and
mov
es
arpl
jmp
out
hlt
xor
mov
out
sub
iret
xlat
mov
cmp
not
lahf
pop
call
adc
std
pop
mov
sub
scas
mov
pop
xchg
jne
js
rcr
xor
sub
xchg
inc
les
lock
loope
pop
sahf
out
xchg
lods
xchg
mov
mov
dec
cmc
sub
test
ret
ret
cwde
sub
clc
push
jmp
mov
jecxz
stc
out
outs
(bad)
mov
pushf
cmp
rcl
mov
shl
fist
or
jno
push
push
dec
pop
(bad)
jb
dec
or
push
xor
stc
fs
outs
fimul
stos
into
ins
or
loope
xchg
je
xchg
xor
inc
pop
jmp
aas
stos
aad
popf
fistp
dec
gs
add
test
add
fwait
in
push
fwait
or
out
mov
retf
dec
int
pop
jo
xchg
mov
popf
cs
and
retf
and
xor
push
out
inc
fsin
jecxz
stos
int3
push
pop
and
ins
mov
or
push
(bad)
cmc
jp
out
imul
dec
push
mov
out
and
and
cmp
sub
lea
inc
js
cld
add
test
movs
outs
push
(bad)
inc
mov
mov
jmp
into
iret
xor
xchg
lahf
sub
movs
push
bound
scas
ins
add
(bad)
popa
dec
dec
fist
push
int
mov
ret
out
sub
es
ffreep
call
pop
sar
std
fsub
inc
dec
in
pop
and
in
jp
mov
and
mov
xchg
addr16
and
in
pop
inc
pop
outs
xor
dec
sbb
js
loop
ret
(bad)
loop
in
mov
inc
or
cs
ds
and
cs
aas
add
jmp
pop
pop
cwde
dec
sub
xchg
test
fadd
mov
adc
icebp
sahf
hlt
mov
bound
movs
cli
ins
popf
scas
and
lahf
push
sub
xor
dec
test
pop
stos
stos
mov
jnp
mov
sbb
data16
mov
fidiv
sub
movs
push
push
adc
sti
int
cld
mov
sub
dec
mov
adc
adc
cdq
xlat
jno
mov
lods
jg
movs
jmp
pop
pop
add
jp
push
xchg
pusha
mov
lock
dec
jmp
cmc
add
stos
jmp
lods
push
xchg
push
mov
aam
es
adc
pop
cmp
or
xor
sub
jp
mov
push
mov
push
out
out
test
(bad)
pop
inc
and
adc
outs
xchg
out
mov
out
jg
sbb
mov
fstp
inc
les
test
inc
out
inc
ins
sub
inc
movs
pop
push
push
push
out
pop
in
hlt
gs
imul
sub
jne
mov
pushf
xchg
mov
js
push
pop
xchg
inc
mov
test
mov
sbb
cmp
pop
pop
out
adc
sar
add
cmps
and
push
loope
mov
inc
nop
inc
movs
rcl
cli
push
jmp
mov
lods
sub
adc
je
rcr
inc
push
lods
pop
stc
mov
sbb
cmp
into
pop
or
pushf
aaa
push
xor
or
test
pop
sub
(bad)
daa
sub
fstp
pop
jge
mov
mov
jae
mov
sbb
and
clc
popf
aam
outs
lods
push
call
sahf
repz
div
or
bound
add
and
ficom
push
pop
sbb
loopne
(bad)
mov
and
jmp
test
fsub
mov
cmp
mov
xchg
adc
mov
scas
clc
pop
push
aad
cmp
add
pop
jp
ror
fstp
adc
ins
fdivp
cmps
ins
ror
mov
cmp
in
inc
inc
aam
cmp
in
(bad)
repnz
std
sub
fxch
adc
rcl
pop
dec
repnz
int
ja
mov
xor
inc
xchg
cmp
mov
test
xor
stos
ja
popf
ins
cdq
cwde
ret
fwait
cwde
add
jo
xlat
in
jmp
or
bound
xor
retf
sbb
repz
mov
(bad)
cmps
mov
mov
dec
cmp
pusha
cmp
sahf
inc
mov
inc
mov
cmp
mov
push
add
mov
push
or
and
add
xor
dec
mov
out
ds
push
inc
sbb
icebp
(bad)
pop
push
int
adc
test
outs
lods
xchg
pushf
push
cmp
mov
call
ss
push
fdiv
xor
mov
retf
sahf
ins
jno
push
xlat
(bad)
aad
pop
sbb
sbb
jg
fcom
add
and
cmp
shl
fild
push
retf
mov
jge
(bad)
mov
mov
sub
cs
xchg
adc
daa
and
cmp
lods
jbe
mov
add
fdiv
push
js
mov
cld
mov
movs
(bad)
pop
test
dec
addr16
rcr
cmp
and
sbb
add
test
fadd
mov
xchg
xor
loopne
inc
lahf
inc
push
jg
pop
xor
cli
popa
jmp
mov
sbb
mov
out
mov
fwait
int
mov
xchg
lds
into
nop
out
add
and
loope
pmovmskb
push
hlt
ror
adc
jns
cli
xor
jle
(bad)
push
in
mov
outs
fcom
fbld
push
mov
loopne
(bad)
and
sbb
mov
jmp
jb
icebp
pop
retf
cwde
mov
xor
xchg
retf
ins
xchg
psubsw
dec
movs
jno
push
pop
cmp
mov
es
jmp
out
sbb
ja
fisub
jnp
mov
or
les
xor
inc
dec
cli
aas
adc
es
arpl
mov
jae
popa
jno
lahf
in
or
lock
and
fsubrp
jmp
cli
mov
mov
xchg
test
fsubr
add
stos
sbb
jne
jp
cmp
in
cli
xor
daa
ins
inc
mov
mul
leave
xchg
or
xchg
pop
test
and
fcomp
dec
inc
lahf
pop
stc
popf
push
push
outs
xchg
sahf
cwde
push
shl
mov
push
cmps
sahf
fisubr
mov
out
aaa
and
leave
pop
inc
adc
adc
enter
add
cmp
movs
lds
in
adc
xchg
fisttp
sbb
and
adc
leave
jle
xor
pop
inc
sub
icebp
sbb
out
push
hlt
out
cmp
inc
stos
test
inc
inc
(bad)
xor
xor
xor
loop
(bad)
or
jo
in
cld
pop
sub
shl
mov
sbb
aam
loopne
aas
mov
push
(bad)
in
xor
repz
mov
fidivr
aaa
inc
sbb
jo
test
inc
jnp
ret
pushf
mov
push
ins
pop
cmc
test
sti
dec
aad
mov
movs
ret
mov
sbb
mov
mov
pop
scas
rcr
dec
or
jbe
ss
call
(bad)
mov
push
fs
xlat
pop
cmp
lock
jae
sub
push
and
es
(bad)
push
dec
out
popf
adc
and
in
and
mov
in
outs
mov
call
mov
push
jns
mul
fistp
cdq
aam
mov
mov
retf
in
(bad)
in
inc
inc
pop
xchg
test
cmp
and
dec
jne
cdq
lock
test
pop
jb
nop
(bad)
call
mov
rcr
cmp
add
cmp
sbb
data16
ss
jecxz
mov
mov
sub
pushf
mov
out
cld
into
dec
cmps
and
(bad)
pop
xchg
cmp
mov
aam
ja
xchg
and
pop
pop
aaa
sbb
loop
inc
out
rol
outs
test
outs
fdivr
adc
mov
push
xchg
jne
lea
enter
nop
fdivr
fadd
mov
ret
sbb
or
fild
inc
in
sub
fsub
xchg
pushf
fdecstp
fbld
adc
jo
push
std
lock
cld
imul
xchg
xchg
and
call
sub
mov
lea
mov
fndisi(8087
mov
fs
xchg
test
sbb
add
or
gs
sbb
mov
cld
popf
xor
sub
push
adc
xchg
sbb
lea
push
test
fimul
(bad)
jmp
sbb
cmp
aad
dec
push
xor
out
sbb
retf
dec
cmp
jp
(bad)
(bad)
aam
pop
mov
les
sbb
pop
jns
loopne
xor
(bad)
not
hlt
pop
dec
ret
mov
or
pop
mov
fcmovne
adc
loop
mov
xor
mov
inc
(bad)
cs
mov
fcomp
das
dec
mov
movs
and
retf
adc
xchg
ret
sub
loopne
jp
lahf
pop
mov
aad
xor
jle
sbb
mov
sahf
fs
inc
movs
sub
mov
mov
cs
les
mov
bound
cld
dec
cmc
mov
call
aaa
shl
cli
add
dec
ss
(bad)
popa
xchg
xchg
addr16
jle
popa
ins
pop
mov
jl
jmp
(bad)
sbb
das
dec
scas
cmp
pop
shl
jo
(bad)
in
xchg
mov
sbb
push
mov
or
dec
pop
aam
(bad)
addr16
xchg
mov
ret
push
hlt
inc
or
xchg
cld
popf
loop
jno
and
test
in
fldcw
icebp
add
inc
add
imul
std
shl
mov
clc
iret
adc
retf
fcom
es
in
mov
jle
sbb
aam
jnp
mov
shr
movs
adc
xor
xchg
iret
in
inc
clc
inc
jae
or
jp
sbb
sub
and
adc
(bad)
mov
bound
sbb
movs
inc
stc
sub
and
and
push
jmp
xor
dec
in
cmp
or
fst
mov
loopne
cmps
mov
int
push
add
jns
push
xor
or
mov
sbb
mov
mov
icebp
pop
repnz
inc
(bad)
dec
inc
adc
arpl
push
pop
adc
in
adc
repz
ja
dec
pop
inc
jo
inc
cwde
push
inc
or
cld
test
jle
outs
ja
jl
mov
in
adc
jae
dec
test
or
popf
sbb
inc
cmp
pop
jbe
mov
jbe
lock
stos
enter
cmp
inc
in
cmc
div
fcom
int
adc
pop
inc
pop
jne
call
loopne
cmp
cli
(bad)
aam
fs
fdivr
and
loope
rcl
out
or
jle
pop
cmc
(bad)
cmp
inc
mov
js
mov
inc
in
shl
mov
(bad)
or
cli
inc
addr16
pop
pop
das
icebp
leave
fwait
leave
mov
jnp
sbb
aam
jne
inc
ds
jmp
cwde
rcr
push
movs
sbb
loope
xchg
inc
pusha
mov
dec
imul
fisubr
mov
mov
xchg
jnp
sbb
push
imul
pop
add
dec
iret
xchg
movs
xchg
jg
and
lods
and
fcmovu
mov
inc
call
in
stos
(bad)
mov
or
mov
scas
cmp
mov
lods
add
stos
push
mov
loop
fld
call
jbe
or
inc
repnz
enter
pop
fld
fmul
dec
mov
mov
jle
out
mul
cmp
sbb
xchg
dec
xchg
add
das
movs
js
mov
movs
aam
xchg
adc
sub
cli
fbld
les
test
or
mov
and
pop
(bad)
jp
mov
mov
mov
sbb
xchg
sbb
and
retf
mov
cmp
stos
dec
pushf
mov
jecxz
(bad)
rol
hlt
iret
pop
jns
xchg
sbb
ds
fimul
xchg
int3
into
cmps
mov
sub
jle
enter
mov
mov
out
mov
sub
scas
jle
stos
das
xchg
sub
mov
mov
test
inc
sbb
jge
mov
push
adc
fs
stos
icebp
out
jle
not
mov
or
mov
adc
xor
int3
fs
pushf
jge
and
inc
push
jle
jbe
mov
es
or
stos
pop
push
or
xor
stc
imul
aam
mov
cmc
loope
jno
jb
and
out
pop
sar
dec
or
inc
cmp
inc
rcl
sub
or
stos
or
push
gs
adc
dec
mov
and
clc
retf
jnp
addr16
jl
and
arpl
retf
mov
inc
aad
dec
jo
xchg
jne
sub
sbb
jmp
xor
(bad)
in
push
or
sbb
add
mov
and
push
stos
mov
in
stc
cdq
das
fwait
push
lods
lea
aaa
cmp
call
inc
dec
pop
lea
outs
xchg
adc
sub
sub
sbb
fwait
jecxz
int3
mov
lahf
xchg
push
clc
ins
int
arpl
push
and
dec
push
test
xor
inc
js
fwait
adc
inc
jno
sbb
scas
add
mov
jmp
loopne
cdq
push
ja
mov
pop
adc
call
sub
stos
cmps
dec
inc
fchs
jns
rcl
xchg
mov
push
xor
cmp
pop
sbb
or
in
inc
cmp
cmp
pop
hlt
rcr
into
or
sub
push
test
shl
cmp
ret
out
test
add
mov
add
and
int3
cmp
push
into
in
in
pop
aam
inc
div
rcr
bound
adc
xchg
pop
jmp
std
jns
xchg
aam
loope
inc
aam
dec
mul
xchg
inc
xlat
cli
hlt
xor
jbe
push
ins
outs
push
push
add
cwde
inc
pop
push
(bad)
in
outs
dec
shl
mov
pop
pop
push
jle
jnp
xchg
pop
dec
call
retf
les
jb
mov
dec
dec
add
ror
cmp
call
sub
mov
jecxz
pop
mov
pop
rcl
mov
addr16
or
mov
add
sub
cmp
loopne
jno
shl
(bad)
rcr
cdq
pop
dec
inc
mov
xchg
in
mov
adc
push
lea
mov
scas
ja
or
shl
or
fidivr
popa
xor
add
test
pop
dec
ins
repz
out
pop
and
test
inc
sbb
pop
popa
in
pushf
neg
aam
xchg
xor
adc
mov
call
lahf
xor
xchg
jg
inc
push
push
inc
sub
xor
mov
mov
pop
adc
lods
inc
rol
xlat
jnp
dec
push
sbb
sub
test
daa
or
in
push
or
add
aam
and
push
add
fisubr
test
mov
lods
ret
push
mov
(bad)
fwait
daa
sbb
pop
inc
out
loopne
cmp
xchg
lock
sub
mov
ja
test
and
scas
fcom
lods
mov
pop
loop
aam
repz
inc
xor
add
cmp
jae
jo
add
sub
sti
pop
sbb
gs
scas
shr
ret
adc
retf
ror
shl
cdq
stc
aam
jne
scas
adc
xchg
adc
imul
shl
cmps
push
sub
mov
add
add
push
xlat
lahf
dec
ss
adc
push
xchg
data16
in
mov
aad
cmp
fdivr
dec
pushf
add
(bad)
pop
adc
cmps
jl
in
and
jmp
sub
push
mov
fst
jne
sbb
jb
mov
and
ins
xor
test
mov
es
test
lahf
xor
dec
xor
mov
scas
or
adc
scas
and
jne
push
inc
dec
xchg
imul
addr16
inc
mov
imul
push
test
xor
nop
cli
pop
push
movlps
ret
sub
cmps
cmps
mov
pop
popa
popa
cdq
js
mov
aas
cmp
mov
cmp
mov
cs
and
ror
dec
push
or
pusha
call
push
jecxz
sar
mov
pop
jg
mov
mov
gs
dec
mov
(bad)
or
pop
dec
mov
jns
cld
inc
mov
pop
fisttp
inc
call
sbb
or
hlt
fidivr
inc
call
jb
push
outs
mov
cld
ror
and
xchg
and
inc
cs
dec
pop
ins
ffree
jnp
mov
cs
lds
fs
or
ins
cmp
push
pop
dec
repz
ret
imul
jg
fld
pop
mov
jmp
mov
(bad)
xor
movs
ret
adc
push
daa
lds
inc
out
sub
mov
xor
int3
int3
rol
mov
das
aaa
inc
hlt
and
and
xchg
(bad)
mov
call
outs
nop
pop
jmp
test
mov
or
xor
lea
div
aaa
cli
clc
dec
inc
gs
mov
scas
iret
cmp
or
test
sbb
push
loope
sbb
jo
sahf
popf
pusha
add
jb
das
mov
inc
les
sbb
ins
or
leave
adc
adc
pop
(bad)
movs
jmp
add
sub
jp
xchg
shl
es
add
dec
out
mov
inc
xchg
mov
mov
retf
loope
sub
dec
fld
sbb
rol
or
shl
pop
jns
les
sbb
rcl
inc
and
push
lea
xchg
pop
imul
cmc
or
shl
stos
pop
mov
fisubr
xchg
fsubp
ins
test
push
mov
add
sti
push
push
cs
out
(bad)
(bad)
fprem1
mov
mov
data16
mov
jl
adc
add
xor
jns
sub
lods
pop
push
mov
fdiv
xor
in
inc
out
mov
(bad)
ds
xor
test
mov
inc
or
cld
or
repz
dec
nop
add
sbb
mov
jbe
sub
adc
push
inc
xchg
mov
ja
imul
clc
popa
dec
jns
inc
pushf
fcomip
sbb
mov
mov
or
sub
and
sub
xchg
xchg
(bad)
mov
sbb
sbb
mov
pop
ins
std
test
data16
inc
dec
aam
jp
lods
mov
pushf
nop
jo
out
cs
mov
xchg
mov
fwait
fwait
jecxz
or
inc
jb
mov
xchg
xor
add
jge
pusha
and
icebp
rcl
cdq
fistp
jp
jl
out
pop
xchg
(bad)
inc
in
(bad)
scas
mov
nop
dec
adc
(bad)
push
dec
push
pop
rcr
loope
(bad)
adc
xor
add
xor
add
xor
pop
mov
cmp
mov
xlat
mov
jnp
inc
scas
dec
xchg
mov
bound
jmp
scas
into
out
neg
lgs
jg
out
xor
cmps
add
inc
in
cmc
test
sbb
test
push
push
daa
aas
(bad)
aaa
mov
fiadd
push
fnstsw
ins
(bad)
cmp
ucomiss
mov
mov
sbb
test
je
mov
jg
dec
mov
jno
cmp
pop
push
leave
lea
pushf
mov
ret
inc
retf
test
xor
push
in
add
sbb
push
repz
mov
lds
outs
dec
out
push
pop
out
pusha
loopne
pusha
js
lds
cli
push
(bad)
mov
xchg
jle
bound
aas
aas
push
les
popf
imul
and
cs
nop
jle
mov
(bad)
push
add
imul
imul
in
add
test
mov
push
icebp
pop
sub
in
jp
xchg
pop
aas
scas
jl
bound
mov
dec
les
call
dec
xchg
pop
inc
test
in
pop
and
ja
sub
call
xor
mov
xchg
test
sbb
loope
call
push
mov
(bad)
mov
test
shr
xlat
jle
xchg
fiadd
mov
retf
push
mov
add
cmc
xchg
add
int
lea
je
ds
mov
mov
push
stos
jae
scas
(bad)
mov
movs
mov
inc
cmp
jae
ins
js
ror
add
mov
xor
movs
das
scas
pushf
loopne
pop
dec
cmp
mov
sbb
adc
and
imul
adc
imul
mov
pop
cmp
fs
movs
ret
shl
jno
lods
mov
out
sub
bound
test
retf
xchg
repz
or
fsub
xchg
jnp
mov
in
lods
(bad)
ret
ds
mov
adc
dec
cmp
xor
push
(bad)
mov
xchg
(bad)
ss
add
xor
mov
and
pop
mov
loop
dec
adc
hlt
icebp
ss
fdiv
ja
mov
shl
push
aaa
sbb
jl
push
mov
div
lods
push
rcl
lock
jp
fnstsw
ss
jae
test
leave
stos
repz
inc
leave
inc
int
push
adc
inc
mov
(bad)
cdq
jmp
movaps
test
out
push
fdiv
push
adc
mov
test
xchg
or
repz
or
or
and
int3
inc
mov
fldenv
pop
std
mov
or
cmc
cmp
jno
inc
push
in
adc
mov
and
dec
mov
xchg
push
mov
in
adc
mov
(bad)
ja
mov
dec
pusha
fidiv
mov
lea
inc
push
or
stos
mov
jmp
iret
lds
add
xchg
add
retf
dec
mov
inc
mov
sbb
sbb
cmp
inc
jnp
iret
popa
mov
push
ja
or
out
jbe
add
retf
test
mov
js
pop
sbb
sbb
push
into
retf
or
jno
jns
out
std
inc
out
jnp
stc
mov
jmp
lahf
jg
stos
xchg
les
inc
xchg
pushf
jbe
dec
push
stos
pop
mov
hlt
cwde
jo
cmp
imul
mov
into
pop
xor
js
jno
fwait
lods
and
into
aam
sti
push
push
xchg
pop
adc
fisubr
retf
mul
imul
xchg
test
jo
out
or
sub
out
inc
mov
bnd
cmps
ins
aas
addr16
jmp
mov
mov
mov
retf
les
in
xor
mov
test
mov
icebp
push
test
sbb
clc
into
push
and
sub
shl
pop
sub
add
fcmovb
mov
stc
xor
rol
mov
ror
sbb
sub
push
mov
loop
xlat
test
pop
cmp
(bad)
mov
cmp
sub
add
and
sahf
jmp
mov
in
lods
pop
inc
fdivr
ffree
adc
test
jb
mov
sar
dec
xor
rcl
out
fisubr
aaa
mov
mov
out
cmp
adc
mov
pop
cmp
or
not
and
add
(bad)
call
hlt
mov
pop
push
xchg
cmp
ins
dec
inc
sub
and
inc
ins
or
fucomip
jg
dec
jge
sar
mov
popw
popf
lea
into
int
out
arpl
jae
xchg
xor
or
add
sub
fiadd
aad
dec
daa
cdq
arpl
push
stc
popa
stos
(bad)
movs
out
mov
xor
mov
push
or
mov
push
sbb
les
jge
gs
add
mov
push
and
ret
and
add
sub
sub
inc
sbb
or
call
lods
lods
(bad)
iret
scas
adc
inc
jnp
cmp
out
pushf
xor
addr16
pop
ret
xchg
mov
cwde
or
dec
inc
outs
cdq
test
dec
mov
ret
(bad)
push
cmp
pop
push
inc
retf
js
aam
xor
xor
or
jmp
cmp
lahf
lds
mov
sahf
ds
xor
dec
cmp
cli
icebp
add
retf
and
mov
iret
outs
sbb
adc
xor
loopne
pop
lea
jno
adc
cmp
sub
fld
sbb
push
mov
jns
test
dec
ret
cmp
or
stos
test
rcr
cmp
ret
sar
xchg
cwde
test
loop
xor
push
jb
scas
stc
inc
and
stos
in
movs
jne
mov
int
mov
out
fadd
sbb
cmp
into
aas
adc
ss
sbb
mov
test
sbb
xchg
(bad)
jnp
dec
dec
gs
or
call
lock
ror
xchg
mov
pop
fcmovnbe
pop
mov
es
nop
mov
sub
fsubr
xor
aaa
shl
cmp
rol
push
fnstsw
dec
scas
jp
push
inc
or
movs
push
outs
pop
xchg
mov
cmp
cdq
pop
out
mov
and
rcr
(bad)
mov
(bad)
inc
(bad)
cmps
or
sub
push
nop
pop
nop
mov
int
fwait
xchg
psadbw
push
fs
dec
jae
inc
gs
or
out
enter
pop
jo
loop
inc
rcr
cmp
xor
lods
dec
lods
or
rcl
and
imul
sbb
test
mov
dec
or
(bad)
icebp
outs
imul
not
leave
popf
mov
je
jns
push
pop
push
jb
push
lods
cmc
fdivp
and
inc
adc
pop
sti
sub
and
xchg
push
add
xor
clc
push
movs
test
push
jmp
pop
mov
loopne
cli
push
or
in
call
push
shl
pop
xor
xchg
inc
adc
xor
or
cmp
imul
imul
fisttp
hlt
xchg
jo
inc
or
shr
adc
xor
mov
jp
inc
repz
or
push
retf
sbb
cmps
cs
jbe
jno
xchg
cmp
cmps
xor
xor
fmul
sti
stos
mov
pop
test
loope
pop
test
jo
push
sub
inc
ja
pop
ror
imul
pop
icebp
test
adc
in
retf
ja
daa
(bad)
mov
xor
ins
pop
(bad)
xor
sbb
cmps
repz
mov
adc
(bad)
(bad)
es
retf
dec
stos
out
add
rol
lea
dec
call
inc
mov
xchg
sbb
inc
movs
jbe
cmp
sub
push
cli
test
scas
xchg
adc
ds
cs
dec
and
ret
fdiv
dec
mov
and
mov
mov
(bad)
shr
jb
mov
popa
add
idiv
mov
mov
nop
add
jnp
dec
dec
adc
xor
xchg
jnp
leave
pop
jg
cwde
cmp
jl
and
mov
aad
pop
mov
sbb
lods
inc
inc
not
call
int
cmp
inc
add
call
scas
aad
push
inc
inc
mov
repz
dec
mov
add
(bad)
push
inc
shl
loope
jmp
mov
pusha
lods
inc
gs
dec
frstor
xchg
cwde
jl
dec
jne
cmp
out
mov
(bad)
mov
mov
jmp
loop
dec
mov
neg
mov
push
test
add
push
aad
je
mov
xlat
loopne
clc
sbb
or
adc
jae
add
mov
sub
es
cmp
mov
mov
dec
loop
out
push
add
mov
gs
fiadd
ins
movs
lock
ret
test
xchg
test
lods
xchg
sub
addr16
mov
inc
xor
adc
pop
pop
retf
push
adc
lock
int
inc
retf
push
jmp
add
add
and
loop
in
cmp
jp
xchg
loop
popa
ret
rcr
ret
mov
ret
dec
pop
push
jbe
mov
bound
inc
lds
push
inc
adc
aas
mov
jns
sahf
jg
jl
sub
arpl
push
shr
ss
repz
mov
push
pop
jne
repz
jl
add
fldcw
fiadd
into
inc
pop
popf
fsubp
outs
push
sbb
test
bound
xor
xor
adc
cmps
fsubp
leave
xchg
lds
cmp
gs
push
mov
push
inc
jmp
jl
fnstcw
adc
jle
shl
mov
jb
push
imul
shl
out
mov
cmp
xor
sbb
sub
mov
push
daa
adc
clc
adc
mov
ret
(bad)
pusha
pop
ret
pop
push
pop
jbe
add
ror
rol
mov
dec
mov
fwait
jb
arpl
pop
sub
mov
data16
push
out
(bad)
push
mov
cmp
add
push
jno
data16
mov
and
jo
(bad)
mov
inc
xchg
lea
sub
cmp
and
pushf
mov
ror
or
lds
inc
adc
ds
ins
loope
mov
rcl
out
xchg
add
fs
cmp
cli
out
jo
in
retf
lds
or
leave
and
pop
jmp
adc
loope
movs
cmp
dec
cmc
cwde
call
push
pop
jmp
jl
jp
cmp
mov
popf
arpl
push
sti
jl
jmp
test
(bad)
js
xchg
scas
or
xchg
inc
in
sbb
into
loopne
out
into
lods
pusha
mov
sbb
fbld
xchg
add
sub
movs
cmp
adc
adc
iret
pop
shr
sbb
mov
lds
(bad)
jnp
cmp
mov
fbld
sub
retf
in
retf
push
mov
mov
(bad)
stc
or
xchg
jle
adc
mov
sbb
popf
mov
inc
scas
push
in
test
pop
sub
lea
cmps
out
push
mov
or
mov
jmp
jmp
push
xchg
call
sub
add
(bad)
pop
pop
inc
or
lahf
jge
stc
or
loop
pop
pop
push
cmps
pop
sub
mov
mov
pop
int3
xor
xor
xor
mov
push
out
xchg
movs
scas
sahf
cs
addr16
or
and
enter
pop
pop
js
jmp
loope
fst
xor
rcr
jns
cmp
out
push
in
push
mov
aad
sub
xchg
repnz
mov
adc
mov
iret
push
movs
sar
dec
mov
pop
and
enter
mov
out
enter
fistp
or
cmps
pop
ds
xchg
push
xchg
in
or
mov
and
mov
icebp
dec
stc
jnp
sti
icebp
outs
outs
icebp
lds
or
neg
das
pop
push
mov
loopne
retf
inc
push
sbb
and
vpshlw
out
push
fs
push
leave
fcom
inc
(bad)
loopne
inc
pop
fwait
or
iret
fwait
jl
dec
dec
fwait
shr
sti
mov
imul
push
mov
retf
xor
rol
data16
sbb
pushf
sbb
sbb
call
and
xchg
sub
mov
sbb
push
jns
pop
jecxz
and
jecxz
adc
cld
jg
push
lock
das
xchg
mov
xchg
xor
adc
adc
or
sub
push
mov
nop
stc
pop
fisttp
adc
repz
push
jbe
gs
xchg
pop
sub
xor
inc
data16
leave
nop
mov
lods
or
int3
cmp
mov
push
scas
in
push
mov
cdq
add
out
pop
in
dec
mov
(bad)
into
mov
arpl
inc
sub
aaa
jmp
inc
and
dec
xor
call
xchg
jle
ins
jecxz
aad
sbb
jp
es
cmp
pop
imul
push
mov
xor
inc
jp
mov
cmps
or
aad
inc
iret
daa
inc
(bad)
repnz
inc
test
xor
sub
fsub
leave
adc
popa
loope
add
jne
fisub
ret
call
bound
icebp
out
lods
mov
mov
xor
sahf
or
or
xchg
les
mov
add
push
retf
in
pusha
mov
sbb
jg
push
sar
inc
dec
push
or
xor
daa
jno
xchg
mov
pop
in
ret
test
sbb
into
mov
push
test
jp
out
in
pop
les
jmp
in
(bad)
mov
add
mov
xchg
or
xchg
xchg
loop
ss
mov
inc
xchg
popa
sahf
lods
out
loopne
loopne
test
hlt
hlt
js
repnz
cmp
cmp
xchg
mov
loop
mov
imul
inc
aaa
xor
mov
mov
xor
xor
cmp
scas
pop
mov
out
push
test
jno
test
mov
push
nop
jnp
sbb
cmp
adc
push
pop
pop
mov
jno
out
out
push
jae
(bad)
cli
inc
push
std
dec
jno
dec
retf
sti
js
cwde
rcr
dec
inc
lds
mov
mov
or
jne
repnz
push
and
fbstp
lock
movs
out
xchg
jmp
test
in
shl
rcr
pop
enter
sub
dec
cdq
lahf
pushf
scas
fsubr
mov
pop
inc
in
fcomp
push
jmp
sti
fist
ds
xchg
pop
push
(bad)
(bad)
jns
push
adc
adc
sub
call
lods
in
or
addr16
jmp
ins
pop
mov
call
(bad)
jg
mov
in
cmps
jmp
test
arpl
xor
adc
xor
and
movs
dec
pop
and
xchg
pop
(bad)
fidiv
(bad)
mov
ins
pop
test
and
in
dec
ds
data16
adc
xor
pop
and
daa
mov
call
aaa
adc
dec
outs
xor
out
mov
xchg
arpl
je
repz
pop
add
xchg
rol
hlt
mov
jg
iret
in
and
mov
outs
stc
xor
imul
cmps
pop
push
out
sbb
or
or
nop
cmp
rcr
enter
pop
mov
cmp
fdivr
xor
(bad)
inc
cwde
pop
scas
sub
mov
leave
add
cmp
or
lahf
ror
adc
sub
mov
xchg
sbb
sub
sub
std
fldcw
push
(bad)
sti
leave
push
mov
xchg
rol
inc
pop
lahf
mov
repz
(bad)
int3
jp
cmp
out
xchg
push
test
das
pop
push
adc
pop
push
xchg
push
call
test
daa
stos
add
js
xor
loop
lock
sub
sbb
imul
int3
addr16
or
test
fisttp
xchg
adc
mov
jo
xor
and
sbb
nop
mov
aam
mov
fnstenv
repnz
pop
xor
mov
daa
dec
inc
cmp
out
xor
cmp
popf
fistp
movs
cmp
cmps
(bad)
movs
mov
es
in
lods
xchg
cld
add
adc
mov
mov
sbb
xchg
cdq
shr
retf
add
cs
inc
fld
jg
fld
mov
ss
inc
mov
fs
rcr
mov
sbb
jp
fist
adc
push
inc
xchg
mov
aas
jmp
hlt
dec
fist
mov
loopne
push
mov
sbb
jl
mov
pop
push
xchg
adc
sbb
dec
push
pop
sahf
and
cmp
pop
sbb
popf
scas
cwde
or
fidivr
jnp
es
ins
fild
and
add
(bad)
jge
dec
ss
retf
out
retf
aaa
aam
xchg
fcomp
adc
mov
les
inc
movs
mov
push
or
mov
adc
xchg
jl
and
fsubr
fsubr
pushf
loope
enter
dec
sbb
int
in
lock
sbb
enter
clc
pop
xchg
mov
jb
out
icebp
pop
nop
mov
shr
aaa
add
stc
pop
jle
call
stos
test
sbb
call
scas
mov
cli
setl
enter
dec
(bad)
sti
sub
jmp
shl
xchg
fdiv
retf
sbb
repnz
jmp
jp
into
imul
or
cmp
sub
int3
mov
jp
lds
cmps
jbe
js
add
sub
lahf
sbb
adc
push
jno
mov
cmc
or
push
aas
and
out
xchg
push
sahf
cmps
dec
inc
mov
pop
jle
aas
push
xchg
jb
test
pusha
or
pop
adc
lahf
cmp
scas
cmp
movs
and
lods
idiv
test
mov
lea
and
inc
push
jl
js
into
cld
xlat
sbb
outs
xchg
ds
sbb
and
stc
mov
rcl
jge
push
scas
mov
ins
dec
lods
push
out
popf
jne
xchg
jmp
leave
loop
push
test
popa
shl
mov
add
mov
jb
jle
je
pop
(bad)
nop
out
push
push
add
xor
and
scas
(bad)
in
fxtract
leave
pop
pop
jge
add
addr16
mov
data16
mov
int3
cmps
push
ret
inc
xchg
mov
dec
outs
push
fidiv
mov
imul
pop
ffree
pop
mov
ret
cld
lds
add
fmul
mov
and
cmp
aaa
addr16
jb
xor
mov
sti
out
nop
mov
xchg
std
out
daa
nop
loopne
mov
ret
adc
xchg
(bad)
enter
xchg
mul
sahf
imul
jmp
add
icebp
mov
(bad)
xor
add
fcmovnbe
fld
call
cmp
dec
in
stos
cld
fadd
pop
popf
inc
lods
jb
push
dec
dec
and
mov
mov
and
cwde
shr
or
sahf
test
sub
pop
shl
mov
inc
xor
or
js
cmps
out
out
fsubr
dec
jl
adc
retf
sbb
sub
mov
adc
fisubr
sahf
jp
(bad)
lock
inc
dec
jne
xchg
sub
or
mov
imul
retf
imul
icebp
scas
dec
or
lahf
push
dec
cli
push
(bad)
popa
loop
jle
and
imul
pop
out
push
dec
fistp
dec
fcom
sbb
xchg
das
mov
shl
cli
adc
jg
xchg
add
clc
fild
push
sahf
adc
cmps
dec
(bad)
repz
or
test
je
dec
xchg
rcr
bound
out
test
and
sbb
mov
dec
inc
btr
fwait
sbb
aaa
xor
leave
test
mov
test
xchg
or
icebp
out
and
dec
add
scas
enter
cmp
jp
test
dec
cmps
dec
movs
sub
pusha
lds
shl
in
xchg
pusha
xchg
dec
pop
cdq
pop
inc
sbb
jmp
enter
xchg
ret
mov
push
xor
mov
scas
dec
inc
mov
xchg
add
stos
push
jne
clc
pusha
mov
clc
das
cmps
clc
mov
pop
in
sbb
imul
stos
cmp
or
pop
mov
and
dec
popf
scas
cmps
arpl
push
ret
push
and
cs
into
mov
sbb
(bad)
(bad)
test
mov
mov
push
mov
jmp
popa
and
mov
adc
fcom
xchg
ror
fldenv
add
inc
sub
dec
inc
push
(bad)
out
retf
in
push
mov
(bad)
jb
inc
jo
push
leave
jmp
pop
mov
pop
add
push
dec
inc
xlat
les
sahf
(bad)
pop
mov
xlat
push
pop
cmp
(bad)
sub
ins
in
(bad)
aam
dec
rcl
cmc
lods
dec
xor
shr
aam
pop
jmp
sub
jae
push
jae
cdq
sub
sbb
ja
pop
cli
push
inc
and
sub
jnp
out
mov
call
lahf
out
nop
cld
sub
sub
inc
call
push
pop
ret
lods
push
es
clc
retf
gs
mov
mov
push
and
retf
jbe
jmp
rcl
in
xchg
mov
loopne
mov
adc
sbb
fidivr
shl
adc
adc
frstor
lahf
xor
ficomp
sub
inc
sub
xor
dec
inc
ja
pop
jl
pop
dec
xor
push
(bad)
adc
imul
pusha
mov
mov
scas
dec
sub
push
loope
pop
outs
mov
inc
ror
xor
pop
mov
xchg
mov
repz
xchg
test
cmps
jmp
push
or
jo
add
jle
pop
rcr
cmp
inc
stos
pop
mov
sub
pushf
movs
and
jae
add
push
cmp
sbb
pop
inc
test
push
jmp
cmp
inc
cmp
dec
mov
loopne
add
aad
pop
into
adc
cmp
sub
add
sub
sbb
and
out
mov
sbb
mov
push
loop
adc
ja
mov
xchg
int3
les
jnp
jb
sbb
js
loope
sahf
in
mov
mov
xchg
fidiv
xor
or
inc
scas
out
push
pop
sub
imul
ja
xor
push
jb
lock
outs
push
cwde
dec
js
push
add
mov
ret
xor
push
mov
fisttp
or
daa
or
dec
sahf
push
push
mov
stc
inc
push
and
or
(bad)
xor
repnz
xor
add
adc
push
pop
das
mov
xor
or
hlt
call
lods
in
lock
jbe
mov
ss
mov
stos
jbe
push
arpl
pop
pop
call
pop
loopne
push
test
ds
xor
cmp
mov
adc
jmp
pop
in
nop
jne
inc
shufps
mov
dec
(bad)
cld
xor
xor
gs
jae
sub
cmp
popf
fwait
dec
push
jmp
cmp
inc
jmp
sub
inc
adc
xchg
adc
inc
sub
jge
xchg
mov
div
(bad)
or
xchg
das
ins
mov
out
add
and
jns
ins
lea
xchg
shl
outs
jl
push
repnz
ins
int3
mov
and
push
call
in
mov
mov
push
add
in
fistp
xor
mov
xchg
or
jo
cld
xor
sub
outs
pushf
ins
inc
add
pop
mov
pop
stos
sti
outs
mov
movs
and
div
mov
jns
inc
dec
rcl
aas
and
push
mov
jns
fld
mov
pop
or
cmp
dec
and
rcl
sub
cli
sbb
adc
xchg
test
dec
loop
cmp
lea
mov
cdq
sti
and
stc
pop
push
das
lods
sbb
imul
push
loop
jb
clc
shl
mov
add
sub
jnp
fmul
mov
fs
push
mov
push
mov
xor
and
push
sbb
push
xor
test
jp
fcmovnu
mov
push
mov
mov
pop
das
add
popf
sahf
jne
fsub
jno
jp
aas
nop
pop
jg
call
std
(bad)
fistp
pop
dec
shr
inc
mov
shr
test
rcl
mov
sub
retf
das
cmp
je
mov
mov
push
(bad)
ret
sub
(bad)
jecxz
addr16
mov
test
pop
imul
(bad)
retf
inc
sub
sub
fs
sar
mul
sbb
pop
pop
popf
rol
stc
mov
bnd
inc
sub
iret
or
das
dec
enter
xchg
and
scas
add
test
xor
inc
outs
sbb
xor
jg
push
call
cmc
(bad)
rcl
and
mov
popa
mov
jne
je
movs
xor
je
outs
das
cmc
fwait
push
cmovo
ret
in
xor
repnz
sbb
mov
aad
push
sbb
scas
fst
adc
fcomp
sub
xchg
int
mov
dec
or
xchg
xchg
movs
mov
inc
(bad)
repnz
inc
int3
jle
push
or
sbb
push
push
cli
das
nop
ds
in
pop
stos
mov
ret
push
(bad)
sbb
xchg
repz
rcr
adc
xchg
add
sbb
mov
mov
cmp
xor
add
arpl
push
mov
or
or
imul
lahf
jp
jle
mov
sub
sub
inc
mov
scas
(bad)
leave
(bad)
pop
sub
or
outs
lods
enter
fistp
fs
dec
or
xchg
push
mov
mov
ins
sbb
mov
or
mov
jb
sbb
aad
hlt
gs
retf
stc
xor
push
int
mov
push
imul
ds
mov
cmp
and
scas
ja
aaa
es
fild
pop
inc
loope
icebp
scas
inc
popa
cli
fmulp
jmp
jp
arpl
mov
xor
cdq
aad
iret
mov
das
retf
pusha
fisub
push
(bad)
out
mov
sbb
outs
jns
(bad)
in
mov
ss
neg
es
or
test
out
push
scas
pop
and
fisubr
cmp
sbb
nop
iret
jle
xchg
js
pushf
cmp
mov
(bad)
xchg
icebp
jl
aas
sub
pause
push
dec
xor
push
sub
adc
out
jecxz
pop
or
adc
inc
mov
aas
outs
mov
not
add
sub
adc
cmp
(bad)
std
cmps
mov
outs
jne
data16
or
inc
out
mov
imul
or
dec
sti
add
push
into
mov
xchg
and
lahf
popa
pop
arpl
xor
mov
add
fbld
sub
and
test
pusha
and
sub
cmps
in
retf
mov
outs
dec
pop
push
cmp
push
pop
lods
add
cmp
(bad)
std
aaa
mov
add
shl
jmp
loop
ret
mov
pop
addr16
mov
ret
inc
inc
das
adc
out
add
xlat
and
mov
sub
push
or
int
xor
mov
hlt
cmp
mov
add
jb
inc
jbe
adc
fcom
push
into
enter
retf
cmp
mov
and
cmp
dec
and
div
scas
and
retf
cmc
add
add
scas
mov
pushf
or
loop
push
gs
inc
test
outs
in
aas
jmp
xchg
ja
shr
dec
aam
pusha
(bad)
fsubr
jns
lods
cs
mov
lock
pop
push
(bad)
ds
mov
inc
test
adc
pop
imul
mov
pop
pop
adc
fbstp
call
test
add
dec
jo
int3
cmps
mov
xchg
outs
jne
mov
or
ret
sub
(bad)
jge
mov
xor
or
fld
sbb
mov
cmp
outs
pop
mov
add
sbb
xchg
js
out
jb
mov
ins
xor
lock
daa
out
jnp
lds
jbe
mov
add
add
xchg
pop
in
ret
jge
leave
mov
xor
daa
or
xor
xchg
int
movs
inc
sub
imul
or
add
push
push
jae
cld
push
stc
popf
jo
jnp
mov
or
mov
pop
retf
ds
add
sub
xchg
xchg
loope
test
aaa
enter
cli
fmul
add
loopne
and
(bad)
jg
(bad)
pop
ins
cmp
aaa
outs
jp
je
mov
jnp
xchg
sbb
adc
mov
and
clc
daa
pop
mov
jo
cld
loope
aaa
sar
jle
cmp
sub
shl
fcom
mov
sub
cdq
dec
inc
mov
sbb
cdq
stc
mov
or
adc
movs
(bad)
push
lods
jnp
ja
inc
movs
mov
movs
mov
inc
xor
sub
stos
lea
mov
fistp
xchg
pop
mov
xor
and
and
and
lods
out
sub
arpl
pop
test
fsubr
imul
mov
dec
outs
sbb
lahf
adc
inc
movs
and
xchg
pop
ja
cs
retf
into
stos
or
rcr
popa
lods
repz
shr
shr
stos
xor
cmp
ficom
repnz
xchg
lds
mov
aas
mov
in
pop
jae
jns
cmp
nop
fcomp
adc
scas
stos
fsub
adc
cwde
mov
ins
repz
pop
imul
or
push
retf
aam
lods
in
mov
fadd
outs
dec
pop
bound
fnstsw
adc
pop
aaa
mov
or
pop
jg
adc
loop
push
pop
xor
pop
sahf
cwde
cmp
cmp
jbe
in
fimul
out
(bad)
xchg
addr16
adc
shl
xlat
scas
push
jnp
fst
inc
sub
cmc
add
inc
mov
fs
jle
scas
mov
mov
fsubr
push
xor
cmp
push
leave
loope
cmps
push
fist
xor
fidiv
jl
mov
mov
mov
lds
dec
pop
dec
ret
inc
push
mov
popf
cmp
mov
mov
in
mov
mov
push
movs
in
cmp
ja
lds
movs
ret
ret
(bad)
inc
or
(bad)
fbstp
fild
adc
push
inc
aam
inc
(bad)
loopne
shl
sbb
xor
rcl
data16
xchg
inc
xor
add
pushf
imul
inc
mov
cmp
(bad)
mov
vmwrite
stos
adc
leave
xchg
loopne
les
outs
push
aaa
mov
cwde
call
xchg
cli
sub
pop
mov
mov
daa
gs
shl
dec
dec
or
cmps
sbb
mov
loopne
inc
movs
(bad)
sbb
ins
mov
push
test
dec
or
or
bound
mov
add
pushf
movs
pop
sbb
jg
or
(bad)
ins
shl
imul
popf
(bad)
fs
(bad)
(bad)
and
inc
ficomp
ja
dec
add
cmp
lock
stos
fwait
pop
aaa
cld
icebp
outs
outs
jmp
mov
test
fs
scas
mov
lods
inc
int3
(bad)
fdivr
pop
mov
test
inc
repnz
sbb
shr
push
sahf
mov
hlt
mov
pop
retf
ficom
inc
or
pop
ins
adc
je
add
mov
pusha
mov
aad
xchg
and
outs
adc
xchg
fnsave
lods
jnp
sub
dec
mov
xchg
imul
pop
enter
call
imul
ss
popa
lds
push
jmp
out
icebp
cld
pop
xchg
sbb
dec
sbb
xor
xor
ret
loopne
adc
jmp
or
adc
movs
retf
popf
test
xchg
aad
mov
push
add
or
mov
cmp
sub
or
lock
sahf
(bad)
push
cmp
repnz
sahf
push
add
nop
pop
out
shr
dec
mov
fxam
sub
loope
ret
inc
retf
adc
inc
test
sbb
rol
mov
ret
dec
hlt
imul
cmps
jno
pop
xor
mov
mov
sub
stc
jno
cmp
fidivr
xor
cmp
scas
inc
adc
jle
or
mov
retf
outs
jl
or
aam
loopne
adc
add
cmc
jb
movs
test
fist
addr16
mov
mov
mov
lds
mov
cmps
pop
mov
cs
cmp
mov
mov
inc
push
adc
aam
jmp
je
(bad)
sbb
pop
test
mov
mov
mov
sub
pop
pop
popa
lds
or
test
dec
je
xchg
dec
and
xchg
test
and
lods
mov
or
jmp
inc
cmp
mov
adc
out
loop
fnsave
stos
movs
add
mov
(bad)
xor
jg
lods
shl
mov
mov
cmp
mov
iret
sbb
ins
jecxz
div
inc
mov
data16
loopne
arpl
(bad)
adc
(bad)
cli
or
shr
mov
int
fld
repz
cmp
in
in
test
(bad)
stos
lea
ja
mov
call
mov
sub
and
int3
retf
inc
in
nop
aam
adc
push
xchg
adc
inc
mov
lahf
inc
fdivr
arpl
cmp
push
test
mov
jb
inc
xchg
cmp
into
add
rcr
xor
scas
stc
shl
sub
jmp
call
sahf
jo
sbb
inc
aas
fnstsw
sbb
mov
loope
inc
test
jle
inc
int
inc
cs
push
jb
setns
data16
push
push
xchg
cwde
sub
sbb
add
test
leave
cli
(bad)
repz
idiv
xchg
ss
mov
cmp
in
mov
sbb
jmp
xor
mov
stc
jecxz
push
fdivrp
pop
fdivr
es
mov
xchg
jp
(bad)
in
call
sbb
in
movs
jae
ror
ja
(bad)
js
mov
sbb
xchg
push
or
and
sbb
pushf
inc
pop
inc
mov
test
shr
cdq
retf
pop
push
sub
pop
xchg
mov
ds
(bad)
sbb
jb
aad
mov
pop
mov
xchg
in
loope
xchg
(bad)
dec
or
jg
mov
aas
in
jp
xchg
popf
arpl
loop
shr
loopne
rcl
imul
push
out
dec
stc
neg
fidivr
cmp
sub
shr
and
lock
mov
xchg
cmps
xor
mov
into
cld
xchg
jbe
jno
jg
xor
dec
mov
outs
pushf
in
loopne
jne
test
lods
jbe
xchg
push
or
fwait
push
push
mov
fisubr
dec
int3
or
mov
add
cmp
and
sti
add
mov
inc
ins
pop
stos
pop
inc
mov
lds
cwde
retf
mov
cmp
popf
lds
sub
shr
mov
push
cmps
gs
ror
and
fisttp
ins
jmp
mov
mov
(bad)
xor
enter
xchg
xor
mov
mov
sbb
mov
adc
mov
(bad)
xor
test
mov
into
jno
jo
jp
ins
xor
ret
in
mov
sbb
jp
xchg
cmp
push
and
xor
sbb
sbb
pop
aad
pop
out
mov
add
fs
mov
xor
cwde
jle
nop
sbb
or
xor
adc
int3
icebp
jecxz
or
pop
and
or
mov
jl
stos
ja
loope
mov
sbb
dec
ror
js
or
mov
lock
mov
ss
arpl
adc
push
xchg
push
push
dec
xor
pop
iret
or
popa
pop
mov
mov
sub
jo
pop
cmp
into
push
mov
sub
cld
ror
pop
xchg
arpl
jno
cdq
arpl
mov
sub
mov
dec
hlt
xor
arpl
pop
cmp
xor
nop
xor
jno
lock
adc
xchg
xor
add
test
in
mov
sbb
inc
xchg
ret
jp
shl
mov
xchg
fadd
stc
push
sbb
sub
sbb
mov
jp
jnp
jns
movs
rcr
call
dec
cs
fcmovnb
xchg
in
xchg
adc
sub
ins
push
jmp
sbb
loop
xor
mov
mov
inc
ss
enter
js
test
cld
shr
dec
push
test
jne
clc
or
int
mov
hlt
out
adc
adc
adc
cs
outs
adc
lods
jl
aaa
int3
pop
push
jg
cld
xor
push
mov
mov
jmp
xlat
into
lds
das
shr
push
pop
shl
div
pop
mov
push
pop
push
or
or
push
push
gs
xchg
(bad)
test
sahf
and
cmovnp
mov
ret
xchg
mov
aas
inc
cmp
or
scas
sub
mov
les
retf
fld
mov
rcl
outs
bound
push
inc
and
fstp
xchg
jno
les
jae
sbb
pop
push
and
(bad)
stc
scas
(bad)
fsub
inc
fmul
xchg
push
movs
sti
xchg
sub
sahf
xchg
push
push
gs
jae
mov
and
push
mov
pop
push
rcl
jmp
cli
mov
into
pop
(bad)
and
js
retf
in
add
push
xor
lods
int
mov
xor
adc
mov
push
cli
mov
imul
(bad)
sub
mov
push
stos
jmp
dec
xor
push
cmp
jnp
sar
dec
inc
pop
cli
push
mov
push
out
xchg
cmp
mov
nop
adc
cmp
mov
cmp
jnp
loop
pop
call
dec
inc
push
popa
rcr
ins
sbb
(bad)
or
hlt
sub
sub
je
aaa
dec
ret
cmc
pop
cs
mov
inc
jb
shl
repz
ins
sahf
aas
mov
dec
pop
(bad)
sbb
aam
cmp
aam
push
mov
mov
icebp
mov
adc
cmp
adc
cld
not
rcr
popf
add
das
cwde
jp
jl
add
sub
rol
retf
xchg
or
(bad)
sub
mov
pop
pop
dec
test
jno
out
in
pop
mov
xchg
push
push
push
mov
push
retf
xlat
js
js
mov
add
lds
sub
das
push
mov
pop
dec
pop
imul
sbb
jmp
imul
in
lahf
inc
loope
out
pop
js
icebp
(bad)
push
pop
loopne
lods
dec
into
jp
fwait
and
sub
repz
call
in
nop
mov
shl
and
ror
enter
mov
in
sub
mov
add
add
call
inc
arpl
adc
inc
pop
in
push
pop
outs
movs
test
mov
lds
push
pop
out
mov
mov
push
jo
mov
mov
rcr
sbb
cmp
cmc
lea
jne
add
mov
add
cmp
sbb
addr16
sub
push
adc
mov
jno
sbb
pop
test
xor
mov
test
popf
popa
cld
cld
lods
test
in
mov
es
xchg
fild
jne
loope
sti
sub
sar
and
add
int
(bad)
mov
ja
push
icebp
fimul
ror
fiadd
jge
leave
mov
sbb
imul
jp
add
or
dec
std
cmp
icebp
psubsb
xchg
sbb
aas
out
in
or
imul
mov
sub
cmps
ins
pop
add
pop
xchg
push
pop
mov
mov
shl
aam
(bad)
out
aam
inc
popa
scas
mov
mov
sub
jae
cmps
outs
pop
js
sbb
sbb
dec
fbld
daa
jae
test
inc
cmps
retf
pop
movs
pop
pop
in
ins
mov
out
pushf
xchg
ss
xor
es
inc
sbb
in
ret
cmc
xchg
test
cdq
mov
iret
popf
mov
pop
mov
or
arpl
sub
add
(bad)
lods
add
lods
pop
repz
xor
cmps
jae
lea
addr16
fld
in
bound
stos
gs
pop
sbb
ds
cmp
sbb
xchg
push
inc
or
or
loop
jg
jecxz
int3
scas
inc
push
push
push
mov
push
mov
add
arpl
fild
jb
pop
cmp
or
or
stos
ret
mov
mov
mul
mov
jge
push
mov
mov
mov
lods
sti
xor
cli
adc
xchg
xchg
lahf
mov
mov
in
ret
mov
lods
xor
jo
bound
jge
push
pop
xor
pop
push
or
ror
or
repz
mov
mov
dec
jmp
in
ds
jno
dec
pop
jl
cs
and
fidiv
arpl
add
mov
das
stc
scas
into
loopne
pop
ds
data16
mov
retf
sbb
in
popa
xor
pop
lds
inc
push
les
cdq
mov
out
daa
push
dec
idiv
lea
sar
dec
push
mov
add
test
push
jmp
adc
pop
jge
fisttp
fdivrp
or
and
test
outs
inc
rol
sbb
jne
mov
xchg
cld
dec
dec
scas
mov
xchg
popf
pop
ror
xchg
scas
aaa
mov
adc
mov
pop
jmp
and
sqrtps
mov
int3
shl
mov
jecxz
jmp
mov
sbb
xchg
adc
lods
mov
ret
into
and
rcl
sub
adc
cld
fnstsw
mov
sub
jmp
cmp
jno
es
call
cmps
cmovno
fld
jl
out
or
ss
inc
sar
bound
xchg
(bad)
test
xor
jecxz
je
xchg
pushf
mov
mov
jg
sbb
in
(bad)
xor
xchg
fwait
sbb
stos
in
ret
xor
mov
aad
es
daa
adc
jae
inc
inc
inc
jmp
and
jnp
sbb
add
cmp
mov
into
(bad)
cmp
mov
pop
fistp
cs
mov
jg
enter
xchg
adc
and
jns
ins
ss
fidivr
mov
aaa
shl
or
scas
or
mov
mov
xor
lahf
add
fldenv
dec
fwait
test
in
xor
xor
jns
jmp
xchg
dec
movs
repz
mov
dec
sahf
je
inc
sbb
(bad)
cmp
icebp
push
mov
and
jae
int
xchg
sbb
pop
fsubrp
retf
sbb
lds
cli
and
cwde
xor
mov
xchg
pop
cmp
int
ja
or
sub
ret
xchg
dec
popa
inc
out
arpl
push
sar
xor
sti
aas
imul
push
(bad)
out
sbb
inc
shr
dec
repz
movs
mov
not
adc
xchg
cmps
test
ret
int3
adc
outs
fwait
mov
cld
mov
inc
fwait
cmc
cmp
out
adc
inc
xor
adc
loope
lds
les
(bad)
sbb
test
push
into
sub
xchg
sub
sub
addr16
ins
rcl
rcl
jns
(bad)
(bad)
pusha
add
iret
rcl
cmp
mov
pop
fwait
retf
(bad)
push
bound
pusha
add
sub
cdq
xor
add
lods
inc
loopne
js
dec
arpl
xchg
nop
push
retf
cs
ret
lea
jmp
jmp
das
stos
mov
loopne
push
das
in
jl
lods
popf
lock
jns
call
int
js
pop
pop
popf
mov
test
jae
stc
mov
jecxz
add
jnp
cmp
fdiv
sub
push
retf
fcom
jmp
outs
in
add
sub
pop
cmpxchg
jp
fwait
stos
bswap
cmc
in
mov
repnz
cld
daa
pop
and
sbb
mov
pop
aad
dec
inc
outs
adc
sar
dec
inc
inc
data16
scas
adc
hlt
ja
push
das
push
test
test
pop
pop
or
pop
and
cmps
stos
xchg
repnz
shr
xor
jmp
cli
fstp
(bad)
mov
add
aas
and
mov
pop
fld
xchg
pop
adc
cmp
xchg
mov
imul
mov
push
jl
(bad)
jecxz
push
xor
jmp
repnz
retf
mov
xor
and
sbb
xor
dec
jmp
dec
sbb
add
mov
sub
mov
pop
pop
cmp
shl
adc
mov
xchg
inc
cmp
jle
rol
push
sub
fisubr
lods
(bad)
or
jl
sbb
cmp
lds
push
popf
cmps
mov
ror
or
adc
or
xor
ret
jbe
sbb
add
gs
sub
fmul
xchg
fs
sub
js
pop
push
mov
arpl
push
adc
shl
cmc
repz
out
imul
jmp
lods
call
inc
aas
pop
dec
popa
xor
and
add
xchg
mov
fiadd
out
movs
sbb
std
dec
push
cmp
movs
mov
jmp
(bad)
hlt
outs
enter
add
fisubr
jbe
xchg
stc
outs
fwait
fs
push
(bad)
fwait
sahf
sub
lea
dec
cs
add
xchg
ret
push
xchg
add
popf
test
icebp
adc
xchg
loop
sbb
jb
add
xlat
sub
sub
mov
jno
lea
mov
je
and
outs
mov
adc
dec
add
xor
xor
mov
mov
ja
bound
sar
jecxz
jle
dec
cdq
add
xor
dec
or
shl
cmps
leave
(bad)
mov
out
sbb
sub
jge
and
and
add
push
push
lds
sub
ficom
push
in
fwait
mov
sbb
enter
mov
mov
mov
xchg
xchg
sub
pop
jnp
fstp
fiadd
dec
mov
out
sbb
xor
mov
arpl
or
mov
jl
dec
iret
jmp
sbb
fist
mov
adc
clc
jle
cld
jno
retf
pop
les
mov
gs
push
mov
fsub
pop
lahf
and
imul
repnz
jge
imul
adc
pop
cmps
xchg
fcomp
push
or
test
aas
pop
out
(bad)
sbb
adc
mov
out
push
loop
inc
fisub
cmps
xchg
push
dec
test
add
cmp
in
int
outs
xchg
inc
mov
scas
cmp
scas
xor
adc
jmp
pusha
rcr
adc
cmp
lahf
mov
out
sbb
in
push
xor
dec
(bad)
lahf
fs
fisttp
aaa
adc
lahf
or
aaa
pop
or
pop
mov
rep
es
out
out
mov
sbb
int3
cmps
jle
out
outs
or
sub
ja
clc
clc
bound
aas
sub
nop
cmps
xor
jnp
imul
jp
cmp
mov
je
repnz
mov
sub
outs
xor
shl
das
cmovae
mov
pop
or
mov
aas
rol
repz
stos
lods
jmp
jle
dec
pop
mov
test
les
rcr
stc
dec
cmp
inc
dec
shr
or
xor
int3
and
lods
pop
and
rcr
out
dec
jae
sti
xchg
outs
push
mov
(bad)
nop
js
out
add
mov
xchg
add
or
(bad)
fdivr
imul
dec
movs
loopne
lahf
retf
sub
ror
stos
int3
mov
and
pop
loopne
retf
fwait
repz
enter
shr
and
(bad)
xor
pop
sub
call
push
stos
dec
fnstcw
mov
inc
int
jmp
jp
cli
loop
fidivr
xchg
cli
call
in
popf
sbb
mov
in
mov
cmp
ret
cmp
hlt
xchg
popa
mov
lea
imul
sbb
fisub
cmp
pop
push
int3
lea
mov
cld
and
and
mov
bound
jb
(bad)
(bad)
fmul
fcomi
pop
out
push
and
sbb
jl
mov
and
and
and
int3
js
sub
popf
leave
sub
sub
push
sbb
mov
and
add
mov
and
jl
mov
movs
movs
push
scas
icebp
add
stc
jbe
jae
inc
lea
mov
cld
mov
mov
shl
or
int
xor
cwde
xchg
test
push
inc
fmul
xor
loop
out
sbb
and
mov
dec
std
sbb
xor
es
cmps
pop
xchg
movs
jb
push
sahf
mov
popa
clc
aas
pop
push
push
or
xor
call
sbb
aam
or
jg
jp
clc
test
sbb
fcom
repz
pop
cmc
pop
stos
es
and
cmp
js
div
ins
int3
lock
push
fistp
out
popa
cmp
or
push
pop
mov
add
xchg
enter
js
retf
sahf
push
mov
rcl
cmp
xchg
aas
(bad)
loop
mov
loope
leave
pop
jp
jnp
mov
mov
push
in
emms
xchg
lods
adc
cdq
clc
inc
shl
cwde
mov
cmp
adc
push
xchg
mov
(bad)
mov
ins
xchg
rcl
addr16
ins
sbb
xlat
jns
leave
cmp
mov
(bad)
mov
or
sbb
and
mov
dec
sbb
movs
push
sbb
test
push
in
retf
loopne
inc
(bad)
sub
sbb
into
lods
outs
inc
xchg
stos
xchg
mov
sbb
xchg
cwde
mov
or
cwde
push
(bad)
cmp
pusha
es
mov
retf
add
adc
adc
movs
inc
popf
jno
aas
out
fimul
ret
(bad)
cmc
icebp
or
jle
inc
xchg
ret
cmp
aaa
dec
jp
mov
cli
dec
hlt
mov
je
dec
dec
scas
(bad)
idiv
jbe
xor
jne
jmp
scas
shr
mov
retf
sbb
sahf
cli
and
pusha
stos
xchg
jecxz
(bad)
dec
mov
xchg
sub
adc
popf
pushf
cmps
mov
mov
(bad)
cld
xchg
ja
out
lods
pushf
add
test
sub
call
jle
sti
out
imul
xor
adc
push
jbe
test
mov
cmp
dec
mov
popf
aam
or
test
cli
hlt
sub
cmps
inc
jl
inc
inc
sub
sar
fcomp
push
push
or
jp
adc
fistp
or
pusha
pop
sbb
dec
imul
sub
in
cdq
enter
push
aam
xchg
mov
pop
gs
pop
out
es
sbb
cmps
std
mov
mov
test
fs
scas
or
sti
mov
aad
jne
mov
or
dec
pop
ror
push
shr
cld
pushf
sub
dec
icebp
ins
call
fcomp
push
push
mov
sub
mov
sub
mov
ss
adc
add
sub
xor
pop
femms
mov
imul
(bad)
je
sti
sbb
outs
pop
jae
push
xchg
add
sbb
jg
jmp
retf
adc
mov
xchg
or
movs
dec
fsub
jge
out
in
div
and
(bad)
fnstsw
ss
aam
pop
aaa
jnp
cmp
sahf
xchg
lock
ins
in
push
xchg
or
xchg
and
inc
and
ins
sub
sti
fimul
fsubp
pusha
hlt
mov
cmp
sub
add
lea
dec
test
repnz
or
pop
add
fcomp
test
jecxz
lds
dec
adc
xchg
push
sti
xchg
adc
popf
pusha
retf
xor
and
fild
lahf
sub
jbe
int
mov
mov
pop
adc
mov
push
cmps
icebp
pop
push
ja
fnstsw
mov
jmp
jae
and
and
mov
shr
loope
mov
shr
into
inc
scas
or
ss
cs
stc
mov
xor
cmp
add
lahf
sub
cmp
stos
jae
push
fistp
stos
jl
ret
cmp
shl
addr16
loop
cdq
mov
jo
shl
les
xchg
enter
cmp
out
clc
out
test
inc
rcl
(bad)
shl
jl
add
sbb
sub
aas
cdq
xchg
jmp
in
daa
add
pop
xchg
cmc
sub
js
and
gs
aas
push
add
jae
jno
add
mov
inc
outs
ror
jp
addr16
mov
and
lea
xchg
jmp
scas
xchg
out
mov
sahf
sub
inc
mov
inc
fist
scas
fisubr
loope
neg
daa
(bad)
enter
mov
mov
cmp
(bad)
js
xor
faddp
(bad)
sti
pop
cmp
(bad)
fcmovnb
dec
(bad)
push
ds
dec
das
sub
pop
(bad)
cld
xor
jo
inc
mov
aaa
test
leave
adc
les
mov
stos
push
push
mov
or
fcmovnbe
mov
scas
mov
push
repnz
push
rcr
mov
fstp
cmp
(bad)
call
(bad)
in
sbb
dec
push
in
pop
or
xchg
sub
push
dec
cmp
or
arpl
cmps
push
fabs
mov
repnz
push
pop
inc
lock
scas
push
jo
mov
inc
aas
push
in
dec
mov
shl
in
(bad)
cdq
loope
adc
or
xchg
mov
test
push
mov
mov
dec
adc
call
jnp
popf
xchg
ins
push
jo
xchg
jl
shl
mov
data16
cmp
in
mov
pop
test
lea
xchg
call
repz
adc
stos
jecxz
ins
sbb
in
int
stos
into
sbb
dec
clc
rcr
das
dec
dec
add
stos
push
cs
retf
nop
cmp
movs
das
sbb
push
fstp
adc
inc
jae
jp
xor
pop
mov
scas
rcl
and
push
jno
push
ins
lahf
int
stc
or
pop
outs
movs
xor
cmps
outs
and
inc
add
or
pushf
sbb
and
cmp
mov
dec
pop
lahf
ss
adc
pop
xchg
lahf
lahf
pushf
xchg
inc
push
aas
iret
xor
sbb
inc
fadd
and
(bad)
call
not
dec
cmc
in
push
xchg
mov
mov
mov
sub
push
adc
push
nop
mov
sub
rcl
pop
test
jmp
sbb
(bad)
into
int
movs
push
cmp
(bad)
and
jne
add
add
mov
imul
shr
pop
push
mov
inc
inc
add
and
cmp
in
cmps
dec
retf
pop
xor
xchg
rcl
fbld
pop
stos
fldenv
paddusb
lahf
loop
js
js
pop
in
cli
es
xor
je
leave
test
dec
(bad)
xchg
nop
pop
jo
lods
adc
mov
add
cwde
jecxz
ja
shr
push
add
dec
xchg
ficomp
adc
(bad)
jae
(bad)
popf
xchg
fld
jae
push
test
fsub
rcr
add
loope
xor
adc
popf
cmp
inc
mov
push
add
int
jge
rcr
ret
push
je
jmp
loope
mov
stc
ins
cmp
dec
repnz
rcr
dec
rcr
sub
push
adc
cdq
mov
aaa
and
sbb
sar
xchg
int
sub
ins
popa
arpl
and
pop
inc
inc
es
movzx
popf
ja
xchg
clc
mov
mov
push
add
add
loopne
lock
sbb
ds
push
push
jb
test
cmc
mov
sub
jne
sti
pushf
lods
and
dec
cdq
cld
int
adc
xor
jno
xor
outs
and
mov
adc
aaa
daa
ins
xchg
cld
sbb
cs
movs
inc
xchg
addr16
jecxz
and
fnstsw
xchg
adc
retf
or
ins
int3
sub
rcr
pop
xchg
inc
xchg
pop
sbb
and
dec
and
leave
mov
retf
cmp
(bad)
enter
mov
pop
cmp
bound
mov
fwait
mov
call
sub
sbb
mov
aas
inc
shr
sub
out
daa
adc
sub
xchg
out
mov
jmp
cmp
or
mov
les
jae
xor
loope
jle
mov
jmp
sub
xchg
push
pushf
sub
xor
mov
mov
or
loop
arpl
add
xchg
aam
push
addr16
mov
aad
jae
add
stos
mov
movs
cmp
cmove
jno
or
cmp
mov
adc
cs
push
jl
outs
push
ret
jae
test
mov
adc
dec
int
aas
lea
jl
xchg
push
(bad)
mov
dec
adc
mov
(bad)
adc
pop
xor
cmc
cdq
cmps
pop
into
inc
outs
mov
jnp
xor
dec
movs
aad
test
int
hlt
jo
xor
add
fxch
xor
jmp
dec
int
rcr
ret
mov
aam
lea
mov
pop
ja
and
cdq
jno
imul
lock
ja
pop
cmp
int
mov
retf
scas
cmp
out
aad
fsubr
ins
cld
out
cmp
movs
pop
icebp
cmp
repz
push
retf
push
stc
cs
in
and
mov
out
pop
cmp
jg
adc
pop
dec
xchg
ds
retf
and
(bad)
xor
leave
dec
mov
cmp
out
out
or
add
aaa
mov
test
jl
loop
jae
xlat
push
(bad)
sbb
mov
xchg
cmp
in
iret
les
xor
pop
jmp
mov
xchg
outs
clc
stos
and
int
dec
fs
xchg
cwde
popa
outs
or
mov
mov
push
mov
outs
xchg
mov
pop
dec
jl
push
push
aaa
inc
cli
lahf
test
add
push
ins
push
in
sti
mov
mov
sar
fdiv
push
test
int
rol
mov
and
repnz
pop
scas
fsub
push
jb
jg
push
mov
ins
ja
xchg
loop
adc
mov
fcomip
fcom
pushf
cmovnp
xor
retf
movs
test
repnz
mov
and
imul
ins
cmp
imul
cmps
out
sbb
xlat
push
call
xor
(bad)
stc
pop
and
push
(bad)
adc
popa
pusha
pop
xor
add
out
stos
int3
popf
add
inc
sbb
ins
or
jl
sub
pop
jno
cmps
pop
sahf
and
pop
movs
cmp
fwait
sbb
dec
ins
mov
rcl
xor
mov
jbe
dec
shl
pusha
jg
jle
dec
lds
(bad)
xchg
cmp
popa
jmp
test
data16
mov
jmp
inc
sbb
gs
mov
adc
or
div
cmps
outs
(bad)
xchg
add
pop
(bad)
lods
mov
xchg
sbb
sbb
inc
or
push
pop
fcmovnu
xor
pop
int3
aad
inc
or
sbb
(bad)
xor
ins
nop
cmps
test
dec
imul
cdq
dec
ret
stos
scas
out
sahf
and
or
jmp
das
mov
mov
dec
fbstp
not
mov
out
mul
push
(bad)
daa
ins
mov
adc
dec
arpl
popf
mov
sbb
add
(bad)
in
daa
mov
mov
cmp
lods
loopne
add
sub
mov
lods
(bad)
and
lds
or
pop
push
or
retf
mov
popa
mov
push
sub
jg
sub
aaa
fld
xchg
ss
mov
ror
loopne
and
dec
aam
bnd
fsub
adc
jo
sub
out
lds
push
aaa
outs
inc
or
jl
int
cmp
mov
add
adc
pop
push
mov
icebp
(bad)
leave
lea
(bad)
jo
dec
push
and
or
mov
inc
and
aaa
clc
ins
(bad)
popa
sub
jae
cmp
imul
push
sub
push
int3
ins
fst
sbb
dec
push
jg
push
out
jbe
mov
add
jno
mov
pop
push
push
scas
xor
mov
or
inc
pop
lds
sub
cmp
mov
cmc
lods
mov
mov
pop
mov
lahf
cs
mov
and
mov
test
add
xor
dec
jnp
inc
inc
hlt
push
enter
fbld
lods
sub
sub
and
sbb
mov
test
ins
jo
pop
mov
call
int3
xor
mov
fmul
aas
and
dec
test
fdivr
mov
xchg
int
jns
rcl
les
dec
sbb
xchg
into
je
mov
or
leave
xor
mov
pop
jmp
mov
in
jo
sbb
jns
gs
and
(bad)
loop
sbb
aaa
sbb
movs
mov
leave
push
enter
xor
sar
xchg
add
xchg
jb
mov
jbe
(bad)
ds
repz
fild
add
xor
inc
add
and
xchg
(bad)
add
pop
imul
cmp
fs
cwde
out
lock
xchg
push
inc
imul
push
scas
jns
dec
cli
jmp
xchg
neg
ja
ficom
mov
xor
mov
popf
pop
xlat
dec
push
add
lods
xor
push
loop
jae
push
cs
add
rcr
dec
lods
div
in
mov
repnz
add
ret
mov
ret
(bad)
stc
adc
out
inc
and
clc
add
jg
pop
(bad)
faddp
jno
cdq
call
cmp
cmp
add
push
push
cwde
aam
lds
add
dec
retf
in
arpl
test
stc
inc
push
int3
push
std
add
aas
jae
xchg
pop
imul
adc
or
arpl
cli
cli
add
pop
clc
rol
xor
hlt
cmp
stos
xchg
jno
stos
push
repnz
test
dec
inc
je
(bad)
fsubrp
add
add
dec
and
jae
pushf
mov
xchg
imul
cmc
inc
aas
jg
inc
push
or
xchg
inc
and
and
pop
xor
out
ins
mov
push
and
sub
fwait
sub
imul
loope
pop
dec
add
xor
sub
push
adc
ret
popf
push
in
retf
aaa
(bad)
addr16
jae
pop
scas
fist
in
jns
ror
aam
xor
clc
xor
pop
fisubr
inc
jle
mov
js
scas
mov
(bad)
sbb
mov
test
aas
and
test
jle
repz
cld
sub
(bad)
push
adc
mov
pop
mov
loope
pop
jbe
xchg
inc
and
stos
inc
enter
loop
xchg
jmp
das
ins
xor
xchg
or
and
out
loopne
(bad)
sar
jmp
or
xchg
mov
pushf
pop
repnz
mov
mov
or
xchg
mov
call
dec
and
cmp
cmps
stc
retf
subps
inc
pop
jmp
mov
xchg
adc
sahf
pop
push
sub
cmp
mov
mov
scas
cmp
mov
mov
or
fdiv
mov
mov
mov
and
jne
icebp
mov
xchg
cmp
int
cmps
cld
or
lods
dec
outs
dec
out
sbb
es
mov
pop
shr
pop
outs
aaa
push
sbb
and
out
(bad)
jne
xchg
mov
gs
mov
leave
cli
jmp
gs
push
mov
fwait
(bad)
xchg
xor
inc
sub
aam
in
xor
sub
ret
push
xchg
mov
pop
pop
repz
push
fisttp
movs
mov
add
push
jp
lock
rcr
add
stos
push
daa
mov
add
mov
cmps
cmp
ss
cmc
cmp
xchg
cmp
sbb
jnp
inc
ret
sub
xchg
imul
xchg
fsubrp
data16
mov
mov
pusha
fld
adc
adc
(bad)
retf
adc
ret
add
jno
sbb
fcmovnbe
std
iret
and
addr16
fidivr
mov
fidiv
dec
add
fnsave
gs
nop
cmp
mov
mov
scas
(bad)
mov
int
lods
mov
ja
shl
jmp
jne
dec
push
mov
pop
not
leave
mov
in
retf
pop
loopne
cmp
mov
pop
es
cmp
sub
loope
mov
add
aad
stos
test
dec
aas
pop
xlat
sahf
mov
stos
outs
mov
mov
cmp
repz
je
jno
or
fcmovbe
(bad)
stos
call
cli
jmp
imul
retf
cmp
repz
add
inc
add
test
push
sub
rol
lods
push
lds
retf
scas
(bad)
add
add
mul
add
sti
push
xor
sub
push
enter
xor
push
lods
loopne
es
sub
inc
xlat
push
and
xor
sbb
sbb
dec
in
jns
jmp
cmp
jge
jne
cmp
in
das
fs
dec
jg
fsub
xor
or
pop
in
push
outs
cmc
mov
cmp
and
pop
adc
mov
ret
mov
cmp
xor
jbe
inc
sbb
dec
jmp
pop
fldcw
dec
mov
jnp
les
jno
mov
cmp
mov
cwde
inc
outs
lds
jae
mov
cmp
pop
mov
jno
push
les
xchg
mov
gs
loope
cld
xlat
aas
cld
mov
rcr
aam
pusha
mov
jp
nop
loop
pop
aaa
sbb
ins
mov
cmp
clc
xchg
and
push
packuswb
in
scas
sbb
and
pop
call
mov
movs
dec
cmp
int3
jecxz
jb
leave
repz
and
imul
cmp
nop
dec
dec
mov
aad
popa
loop
cmp
push
stos
sti
dec
dec
clc
cmp
adc
sbb
mov
mov
aad
mov
pop
rol
imul
ret
mov
imul
loopne
lock
cmps
data16
sub
retf
fmul
fsubr
mov
push
das
aad
push
addr16
das
sbb
jno
xchg
mov
jl
inc
pop
jae
sub
(bad)
jmp
sub
ror
jne
dec
test
push
inc
rcr
jge
std
sbb
jno
cmp
dec
repz
cdq
or
mov
rcr
out
and
push
dec
cmp
xchg
hlt
sar
inc
test
addr16
psubsw
adc
(bad)
adc
sbb
jg
pop
(bad)
push
and
xchg
push
xchg
pop
ret
iret
shr
les
adc
push
ret
dec
ins
mov
inc
jnp
dec
dec
mov
mov
inc
and
dec
pop
xor
jecxz
dec
test
jnp
retf
retf
xor
test
loop
xchg
outs
idiv
scas
fisttp
jns
sub
pop
sbb
or
cmp
or
std
inc
jnp
adc
(bad)
push
iret
sub
js
data16
dec
repz
sbb
mov
jns
sar
test
(bad)
jmp
mov
dec
xor
lods
test
adc
movs
lods
shr
sahf
xor
cmps
ror
fdiv
cmp
addr16
fwait
sbb
dec
adc
test
and
push
sub
in
dec
xor
xchg
or
pop
xchg
mov
lea
mov
loop
xchg
cmp
xor
push
sub
mov
mov
dec
lods
ficom
sbb
xlat
mov
push
mov
bound
cmp
inc
and
dec
jno
sub
mov
jo
jnp
not
mov
fadd
xor
stc
(bad)
and
aas
add
test
mov
sbb
(bad)
enter
mov
mov
adc
cmc
das
mov
pusha
add
icebp
push
sbb
cmp
xchg
xchg
add
xchg
pop
icebp
xchg
out
mov
sub
mov
fsubr
lahf
jmp
inc
sub
(bad)
outs
pop
(bad)
jmp
dec
in
add
push
shr
or
mov
enter
aas
jecxz
mov
or
or
sub
and
int3
rol
inc
sub
mov
dec
mov
adc
pop
mov
jmp
outs
daa
lock
daa
xor
cmp
ins
bound
pop
iret
or
dec
adc
mov
movs
hlt
fucomi
ja
xor
(bad)
fst
mov
arpl
in
cdq
fild
cdq
push
stos
in
in
leave
push
xor
fwait
jns
stos
jno
test
push
mov
cmps
jp
xor
call
and
lahf
pop
nop
mov
xchg
push
retf
sub
cmp
add
pop
or
sahf
xchg
jno
cwde
add
fcmovu
mov
sbb
fnstsw
xchg
shl
ret
or
cmp
mov
test
add
nop
or
push
push
fdiv
test
test
outs
ja
mov
cmp
std
inc
mov
sbb
bound
popa
xchg
jae
jb
pop
dec
frstor
retf
rcl
fwait
mov
jns
ret
mul
icebp
sub
push
pop
push
or
or
sub
xlat
cdq
pushf
dec
sbb
aad
adc
push
fld
sub
nop
mov
cmps
pop
into
fidiv
call
out
push
fild
dec
cli
retf
pop
mov
jge
mov
add
call
sti
mov
inc
dec
add
or
mov
stos
mov
neg
lods
mov
imul
xchg
dec
enter
jg
dec
inc
test
jmp
and
repz
sub
sub
fwait
mov
stos
cs
xchg
cmp
and
movntps
mov
test
jmp
jnp
or
jge
rol
pop
inc
adc
aas
mov
ja
xor
jg
test
pop
adc
jmp
mov
outs
mov
mov
cmp
pop
jb
cli
scas
movs
or
sti
xchg
jp
outs
sub
pop
add
out
rol
cmc
stos
aad
cmp
test
xchg
jl
pop
sub
mov
gs
xor
out
dec
fisttp
push
and
inc
jp
xor
test
xor
jnp
or
pop
addr16
je
pop
scas
and
in
fs
in
out
xlat
xor
mov
jb
push
add
jb
test
vmovapd
outs
mov
mov
ins
jecxz
push
addr16
cmps
dec
mov
xchg
sub
pop
aaa
xor
pop
sub
mov
or
and
jl
dec
(bad)
xchg
out
daa
std
mov
push
je
or
or
mov
dec
pop
js
push
mov
inc
ins
(bad)
cmps
(bad)
stos
sahf
jg
cld
mov
stos
loop
mov
pop
push
cmp
lea
sbb
int3
mov
outs
pop
jnp
jno
cmp
xchg
ins
adc
in
lea
pop
xchg
mov
xlat
(bad)
push
into
push
inc
enter
sahf
xchg
inc
bound
dec
sub
out
cmp
sbb
in
cwde
repnz
aas
mov
dec
aam
popf
(bad)
repnz
enter
dec
loop
lds
pop
inc
pop
pop
rol
or
mov
jle
(bad)
retf
push
dec
test
cdq
lods
jecxz
test
jmp
sub
jns
dec
ins
pop
mov
push
mov
loop
bound
pop
cdq
jmp
mov
xchg
mov
retf
leave
inc
dec
pop
mov
jno
stos
(bad)
loop
jno
mov
xchg
daa
pop
or
ins
iret
push
xchg
test
pop
pop
pusha
push
shr
sub
aas
mov
push
pop
cs
icebp
pop
test
pop
retf
sub
aaa
lock
mov
xchg
sbb
imul
ds
mov
loope
mov
xchg
xor
sbb
imul
jecxz
cmp
dec
pop
leave
div
pop
mov
shl
cwde
jbe
aam
and
xchg
call
or
fstp
hlt
ret
or
lods
ss
xchg
or
jo
aam
ret
pop
mov
cld
out
or
loop
movs
mov
xor
js
mov
out
add
nop
call
ss
in
jg
add
mov
(bad)
inc
scas
cmp
arpl
adc
js
dec
shl
push
cdq
xchg
inc
jp
outs
push
add
pop
sahf
call
sub
stc
inc
jp
jl
cs
sahf
div
jnp
outs
rol
in
shl
xor
js
or
adc
jle
lods
adc
cmp
add
idiv
sbb
jns
(bad)
fild
rcr
add
inc
add
addr16
mov
adc
inc
shl
test
jp
or
movs
les
ror
mov
push
push
pop
test
int3
inc
adc
inc
dec
leave
mov
pop
cmp
call
pop
ret
and
dec
mov
mov
inc
mov
cmc
dec
rol
and
std
pop
mov
dec
mov
mov
or
aam
adc
mov
aad
sub
or
clc
fild
mov
cmp
pop
inc
sti
test
or
std
xlat
pop
sti
rcr
in
dec
mov
mov
aas
add
(bad)
in
sub
cmps
push
pop
sbb
add
jl
loope
mov
pop
sub
shl
xor
mov
mov
cmp
lahf
jecxz
inc
repz
das
(bad)
or
mov
jbe
mov
arpl
shl
fs
mov
test
fbstp
push
icebp
jmp
and
dec
mov
and
and
cmp
loop
push
add
mov
add
pusha
mov
(bad)
and
and
push
xchg
fcmove
xor
call
inc
sbb
mov
sti
shl
mov
cmps
dec
xor
xchg
fst
mov
lds
xor
jge
jecxz
xchg
jg
pop
pushf
addr16
pop
jo
push
jnp
push
dec
mov
dec
sub
cmps
dec
cdq
mov
fidiv
jne
call
mov
jno
lods
mov
fdivr
inc
xchg
imul
jg
sub
loop
jnp
imul
cdq
mov
jge
inc
sahf
imul
xchg
push
push
popa
iret
lods
loope
sub
in
xchg
sbb
fiadd
in
pop
mov
cmc
div
pusha
cld
inc
or
mov
nop
call
sbb
adc
out
dec
push
fcomp
nop
cld
mov
xor
(bad)
pop
xor
shl
sub
leave
ins
icebp
sbb
sub
jmp
inc
push
enter
(bad)
lods
leave
adc
ret
(bad)
icebp
cmp
outs
jmp
dec
int3
fwait
mov
out
stc
std
fmul
cs
jg
cmp
push
dec
lahf
push
pushf
push
imul
ja
in
mov
xor
adc
scas
xlat
cwde
aad
cmps
or
dec
xor
cmp
and
cmp
in
xchg
sub
jmp
sub
cwde
cmp
out
cmc
cmps
pop
icebp
out
(bad)
aad
out
add
call
mov
and
ja
cli
rep
mov
and
fs
sub
fwait
mov
fadd
xchg
movs
inc
cwde
adc
push
xor
scas
and
popa
rol
dec
and
and
(bad)
hlt
jae
mov
adc
xchg
out
pop
pop
scas
xchg
push
sar
std
lea
inc
ret
xor
test
jnp
sub
sar
push
pop
mov
enter
jne
std
mov
xchg
ficom
inc
pop
jp
jge
adc
mov
fs
add
enter
ins
or
ret
fldenv
and
movs
clc
xor
outs
lds
cmp
ins
jmp
adc
cwde
pop
ins
rcl
pusha
sub
ret
clc
cmps
sbb
mov
mov
jmp
cwde
dec
dec
mul
in
inc
xchg
mov
fcom
adc
rol
ja
sbb
cli
mov
pop
pop
aaa
cmp
hlt
sahf
popf
sbb
pop
inc
out
dec
fcmovu
xchg
iret
lods
je
push
sbb
retf
xor
in
dec
jg
xor
jae
fnsave
fwait
xor
daa
and
mov
and
sbb
test
hlt
inc
das
xchg
outs
xor
shl
mov
jne
mov
(bad)
and
in
ror
in
popa
out
jecxz
cmc
popa
add
in
inc
cmps
inc
xchg
mov
(bad)
pushf
fcmovnb
popf
fimul
repz
cmc
test
fcom
gs
pop
mov
inc
lock
jl
mov
bound
lods
add
cwde
jmp
xor
push
lods
retf
lock
aas
sub
xchg
cmc
push
ficom
pop
cdq
scas
retf
imul
in
push
xchg
and
fsubr
test
into
dec
jne
enter
int
pop
add
add
add
(bad)
pop
cmps
push
into
push
sbb
ins
push
pop
sbb
cmc
xchg
(bad)
ds
jns
xor
and
jns
cmps
adc
mov
int
out
xor
inc
call
or
push
xchg
cmp
push
sub
jle
push
test
mov
mov
inc
add
jg
sbb
cdq
push
add
fidiv
(bad)
icebp
cmp
dec
ds
cmc
outs
mov
mov
xchg
adc
mov
add
(bad)
jmp
stos
pop
out
call
shl
and
cvtps2pd
jg
inc
pop
jp
cli
neg
call
and
sahf
js
in
pusha
repz
ja
cmps
xchg
repz
and
fsubr
cld
inc
sub
inc
push
pop
loop
xchg
or
sar
movs
fld
push
xchg
bound
mov
mov
mov
pusha
popf
and
mov
add
loope
enter
mov
sub
or
mov
xchg
stos
sub
or
jp
xor
aaa
fnstsw
xchg
stc
loop
lods
mul
add
and
movs
test
jno
adc
adc
fadd
xlat
xchg
mov
cmps
bound
xchg
rol
jb
repnz
dec
cli
xlat
push
mov
pushf
test
mov
jnp
cmps
mov
mov
push
iret
pop
push
push
cmp
push
and
jo
or
xor
call
cmp
sub
in
and
dec
adc
out
xlat
leave
cmps
sbb
adc
inc
sbb
cmp
bound
iret
shl
scas
in
jnp
inc
aaa
mov
push
jg
mov
xchg
out
pop
mov
push
in
sbb
das
or
mov
enter
sub
cs
push
or
xor
or
dec
xchg
xchg
repz
repz
sub
test
pushf
push
cmp
dec
hlt
xchg
sub
push
push
sbb
push
outs
aam
lea
push
mov
sub
(bad)
(bad)
mov
pop
lea
and
mov
daa
clc
pop
imul
sbb
push
cmp
mov
cwde
mov
ret
imul
movs
(bad)
push
sti
data16
lods
icebp
(bad)
std
or
call
test
pop
arpl
clc
inc
jae
pop
jle
xor
sub
inc
dec
(bad)
sub
cmp
stos
mov
push
push
jbe
dec
sbb
or
mov
jnp
cli
(bad)
(bad)
aam
iret
daa
call
clc
sbb
neg
lds
xchg
aaa
aad
inc
daa
and
aam
sbb
xchg
movs
hlt
bound
inc
or
pop
(bad)
call
imul
jno
addr16
push
jbe
mov
push
fisub
lea
push
xor
mov
scas
add
mov
fld
mov
dec
add
cmc
repz
test
ret
les
ss
mov
movs
lods
and
ret
(bad)
pop
push
inc
inc
or
aam
push
(bad)
pop
(bad)
clc
dec
sbb
orps
pop
lods
fcmovnbe
outs
pop
fldcw
in
cld
movs
pop
loopne
pop
cmc
fninit
in
sub
outs
jl
popf
test
or
add
sub
pop
jge
push
idiv
add
push
ins
sahf
into
loop
inc
pop
mov
and
ds
in
push
(bad)
jle
rol
dec
aad
mov
cmps
adc
mov
inc
icebp
bswap
xor
inc
xchg
das
ins
ds
lods
ficomp
mov
pop
or
retf
push
mov
push
mov
ret
repz
cdq
dec
pop
sbb
mov
xor
mov
iret
sub
jno
jnp
cmp
sahf
push
rol
mov
lock
test
or
test
and
jecxz
outs
cmp
int
pop
sbb
xor
movs
xchg
enter
sbb
pop
hlt
adc
movs
sahf
mov
cmp
scas
xchg
jno
mov
mov
fdivr
jmp
mov
sub
ss
push
movs
push
add
and
int3
sub
cli
jbe
popf
in
fcmovnb
out
xor
push
blcfill
jns
loop
mov
cmp
mov
ret
mov
xchg
ffreep
sub
imul
xchg
shl
fmul
jne
inc
adc
pop
mov
push
push
add
add
jnp
xchg
inc
cmp
or
cs
cmps
mov
mov
push
movs
jmp
loopne
and
mov
adc
hlt
or
enter
push
mov
not
mov
repz
call
cmps
lahf
fisttp
xchg
mov
xchg
xchg
cmp
mov
(bad)
add
jmp
mov
xor
dec
retf
ds
lods
xor
mov
retf
stc
dec
jle
add
pop
fdivr
dec
dec
pusha
shl
scas
add
xlat
mov
mov
rcr
cmp
sar
fist
inc
xchg
rcl
shl
scas
xchg
sub
mov
clc
mov
sub
int
add
cli
xchg
pop
mov
mov
push
call
sub
adc
or
add
xor
cmp
cmp
dec
push
xchg
test
push
cmp
(bad)
push
icebp
repz
hlt
ret
test
sbb
dec
movs
ror
loope
jnp
and
jb
fbstp
out
sub
aaa
jle
mov
and
cmc
inc
mov
adc
mov
or
pop
ja
mov
jge
sti
arpl
movs
test
xor
arpl
arpl
jmp
shl
mov
test
mov
adc
in
sar
nop
call
sbb
jmp
cmp
push
jno
xchg
in
lahf
and
in
mul
pop
fdivp
cmps
inc
movs
push
fnstsw
rcr
stos
fnstenv
aas
xchg
push
cmps
je
mov
mov
and
loope
in
popf
jne
sbb
push
std
and
mov
mov
(bad)
sub
sahf
mov
inc
mov
aam
loope
(bad)
xchg
sub
arpl
adc
mov
js
hlt
js
in
xchg
std
stos
add
mov
cmp
mov
outs
xchg
int
sub
jbe
lock
mov
adc
out
aas
mov
js
scas
(bad)
inc
call
or
js
jmp
jp
fnsave
pop
in
sahf
retf
jge
push
popf
(bad)
stos
int
fsub
cmps
sbb
shr
push
out
rcr
sahf
or
mov
stc
movs
lods
cwde
movs
out
or
or
fild
(bad)
pop
dec
pop
push
(bad)
jnp
dec
inc
fisub
push
mov
jns
mov
repz
fdiv
hlt
into
call
jg
std
test
jno
jecxz
hlt
and
pushf
fimul
inc
movs
pop
mov
dec
xor
xor
stc
cdq
into
mov
dec
ins
pop
pop
mov
aas
cmp
adc
bound
and
dec
(bad)
adc
call
in
or
sbb
xchg
das
scas
adc
dec
test
cmp
fs
das
(bad)
leave
mov
loop
ds
push
xchg
shl
and
sahf
call
clc
movs
xchg
xlat
test
pop
mov
retf
stos
mov
icebp
sbb
bnd
dec
in
add
and
mov
out
or
(bad)
movs
sub
pop
les
inc
cmp
scas
cmp
jae
out
ins
cmp
push
xchg
mov
ret
jnp
shl
ins
xor
sub
pop
repz
clc
sbb
out
addr16
add
sar
mov
pop
loopne
test
pop
mov
dec
xchg
loopne
outs
icebp
mov
xor
mov
or
rol
shl
out
pop
inc
mov
ss
sbb
dec
mov
jl
call
(bad)
dec
sub
je
add
int
pop
push
and
mov
stos
cmp
(bad)
clc
loopne
cmps
mov
push
popf
xor
jbe
clc
mov
das
push
lea
and
sti
mov
push
popf
pop
cli
mov
mov
aam
mov
cmp
inc
push
out
add
mov
push
bound
mov
daa
xor
(bad)
(bad)
stc
sub
mov
bound
hlt
(bad)
and
inc
cmps
mov
push
mov
jl
call
lock
pop
jle
push
test
(bad)
out
call
dec
cmp
cmc
jmp
push
clc
jns
sub
sub
sbb
into
mov
in
fadd
(bad)
cmp
sbb
loope
mov
cld
call
pop
pusha
jl
push
in
cmp
(bad)
hlt
and
mov
packsswb
in
add
out
or
lods
xor
xor
xchg
adc
pop
dec
pop
push
pop
pop
mov
mov
mov
jge
daa
sub
pop
clc
push
push
lods
push
fiadd
mov
aam
loope
cmp
loop
js
stos
les
sbb
jmp
sub
adc
pavgb
sti
dec
mov
mov
pop
dec
inc
sbb
and
sti
jbe
push
call
fsubr
dec
in
ss
adc
or
dec
jl
stos
xchg
ins
les
mov
in
or
ja
mov
movs
mul
mov
js
xor
jge
inc
pop
mov
fldenv
bndldx
retf
fdecstp
xlat
stc
xchg
clc
pop
loop
in
in
mov
and
fidiv
adc
mov
scas
fsubp
and
les
loope
imul
sbb
into
movs
or
pop
mov
mov
xchg
push
sub
xchg
sbb
cld
pushf
fcmovnb
cld
mov
dec
pop
ss
in
cmp
retf
jp
fcmovnb
and
rcl
or
and
(bad)
xchg
and
xor
pop
ret
xlat
sbb
rol
xor
dec
jbe
mov
pop
arpl
stc
fadd
leave
push
rol
ret
sbb
fcomp
inc
ret
or
adc
mov
inc
jne
test
mov
rcr
cs
xchg
loop
lock
jns
jg
dec
mov
popf
sub
mov
cld
adc
or
shl
(bad)
pop
stos
pop
xor
jmp
sbb
lahf
mov
repz
call
and
(bad)
cmp
dec
call
adc
push
mov
pop
clc
cmp
hlt
jne
arpl
bound
in
xor
lock
inc
sub
mov
out
in
and
pop
jns
pop
pop
aam
or
pop
leave
movs
cwde
loopne
movs
mov
mov
ficomp
in
sub
pop
cdq
adc
xchg
xor
popa
dec
and
jle
jns
inc
int
push
lea
push
fwait
xchg
xchg
jmp
leavew
cmc
inc
jns
je
xor
sbb
cmc
pop
dec
and
test
lods
push
add
out
add
and
sbb
fiadd
outs
jo
xor
in
jb
popf
pop
lar
mov
movs
adc
scas
movs
push
ins
mov
cdq
or
jmp
cmp
ins
and
ficomp
dec
push
add
sbb
mov
shl
dec
enter
push
jae
add
(bad)
mov
inc
xchg
js
nop
push
sar
xor
pop
mov
pop
or
cmp
sub
repnz
push
push
and
loopne
je
clc
pusha
out
xchg
adc
jae
xchg
repz
xor
or
aam
and
sbb
xchg
call
arpl
je
das
mov
(bad)
or
fwait
leave
imul
enter
xor
icebp
outs
add
test
test
inc
cmp
inc
jmp
jne
mov
imul
into
sbb
jae
cmp
idiv
mov
or
hlt
sbb
xchg
int
dec
loop
pop
(bad)
jmp
inc
mov
mov
call
sbb
daa
movs
js
ja
out
xor
repnz
adc
pop
dec
mov
sub
dec
cmp
sub
repnz
pop
dec
aaa
sbb
cli
sub
mov
push
movs
inc
sub
popf
cdq
fwait
or
add
xor
jp
ret
xchg
pop
daa
cdq
(bad)
and
rol
xchg
add
dec
in
add
push
pop
out
mov
xchg
sub
rcr
stos
add
cmp
dec
dec
pop
adc
sub
std
cmp
dec
ds
mov
and
popf
pop
ss
je
or
dec
pop
cmp
fidivr
or
std
jno
pop
fisubr
push
adc
int3
shl
jno
fcmovu
popf
pop
aaa
sar
ss
mov
sbb
enter
xchg
adc
jg
jle
repnz
xchg
xchg
cmp
sub
mov
mov
in
jmp
mov
test
stos
push
nop
fidivr
lods
inc
aam
dec
sbb
aad
outs
cmp
push
inc
or
and
dec
dec
aam
mov
repz
sbb
lea
lods
aaa
push
pop
dec
or
sbb
sbb
popf
retf
mov
das
ins
mov
cmp
idiv
lds
sbb
xor
imul
scas
xchg
xchg
jmp
mov
std
cmp
popa
and
xchg
xchg
or
retf
mov
cmps
fcomi
das
add
icebp
inc
jae
push
call
push
aad
cmp
loope
mov
xor
arpl
and
call
mov
(bad)
imul
sbb
mul
jmp
jp
ret
test
(bad)
jmp
pop
test
retf
lds
lea
stos
pop
inc
jecxz
sbb
jnp
mov
int
or
push
pop
ror
mov
jns
fdivr
cmp
or
push
mov
xor
or
xchg
popa
lods
sti
xchg
mov
sub
sub
xchg
retf
inc
inc
ins
lods
dec
xchg
xor
movs
(bad)
stc
and
and
int
out
jmp
mov
mov
mov
nop
imul
mov
test
iret
push
cwde
mov
(bad)
data16
ror
push
ds
add
pop
push
add
push
test
and
push
fist
mov
repz
outs
mov
stos
pop
js
adc
outs
pop
in
mov
fidivr
cmp
xchg
movs
cmc
(bad)
out
xchg
out
aam
push
pop
enter
js
scas
je
sahf
or
sub
dec
push
test
dec
pop
clc
xor
dec
test
add
push
sahf
pop
loopne
popf
push
cmp
fcomp
(bad)
hlt
in
push
xor
aas
dec
pop
push
jb
pop
xor
push
cld
pop
jle
dec
jmp
pop
inc
int3
jmp
push
(bad)
cmps
add
scas
fdivr
or
dec
rcl
xchg
xor
inc
mov
jmp
push
ror
mov
mov
cmps
sbb
inc
(bad)
fstp
aas
fld
pop
out
push
nop
std
mov
ins
push
add
sbb
retf
sub
retf
loop
sbb
fwait
popa
push
and
pop
cmp
leave
je
jmp
or
sub
dec
cmp
cmps
loope
in
shl
aam
cli
pop
outs
in
sub
imul
fistp
sbb
pusha
inc
pop
push
cmovno
test
shl
cld
mov
pop
out
lahf
cmp
push
cmp
(bad)
or
arpl
inc
loop
in
xchg
mov
popa
mov
push
mov
jbe
xor
jl
les
push
jns
cmc
fldenv
lock
sub
hlt
add
jnp
test
sub
call
sar
and
inc
pop
mov
xlat
xchg
cmp
bound
pop
add
inc
jb
sar
loope
ss
pop
mov
(bad)
cld
mov
and
clc
addr16
fadd
cli
dec
xlat
inc
pop
dec
xchg
rcl
mov
adc
xlat
or
mov
loope
leave
call
pop
ds
jnp
lahf
cmps
aam
xor
pop
mov
pushf
jg
add
aam
jb
jb
mov
mov
cmp
and
and
mov
test
nop
loope
mov
rol
push
mov
retf
jecxz
lock
jae
push
dec
outs
loop
movs
cmp
pop
push
test
sub
cmp
out
imul
add
enter
mov
cmc
xchg
add
fs
dec
enter
jns
and
add
test
shl
push
sub
out
pusha
loop
adc
in
fsubp
adc
xor
out
inc
fidiv
pop
leave
and
pushf
sub
std
aam
addr16
jnp
fwait
cmp
or
jb
retf
fcom
les
mov
es
xor
fnsave
dec
repz
je
fs
push
mov
xchg
push
hlt
es
mov
push
xor
aaa
test
cmp
jmp
inc
call
out
cwde
dec
and
(bad)
and
dec
stos
fild
xor
inc
jl
cmp
sahf
jb
pop
cmp
sbb
pop
xchg
inc
hlt
mov
mov
fisttp
fidivr
xchg
mov
xor
bound
push
or
sar
add
xor
sbb
fild
fdivr
(bad)
shl
jo
mov
sub
in
scas
xchg
sub
clc
sub
cmp
mov
std
cmps
pop
push
dec
lods
clc
pop
add
ins
fcom
fild
add
jmp
stc
jae
imul
lock
xchg
retf
xchg
adc
mov
stos
ds
push
and
pop
pop
dec
xchg
jp
scas
mov
fadd
cmps
mov
lahf
fdivr
nop
or
arpl
cwde
out
lahf
jle
stc
and
movs
hlt
mov
xor
stc
fwait
in
scas
cld
dec
xor
push
cmp
add
cmps
cld
push
mov
mov
cwde
mov
loopne
enter
test
sbb
jbe
mov
xchg
cwde
fcom
mov
sbb
cmps
enter
cmp
xor
or
jle
jnp
das
in
jne
or
push
je
sub
retf
mov
cmp
fist
jnp
cmp
cmp
xchg
jp
dec
mov
push
pusha
or
jmp
pop
add
ror
sub
imul
shl
xor
imul
ja
jno
imul
es
ret
and
mov
push
add
cmp
xchg
jb
xchg
test
out
sbb
rol
xchg
xor
adc
mov
jmp
sub
(bad)
out
in
jae
aaa
pop
aaa
ror
jle
cmp
repnz
test
std
fsubr
xchg
add
xor
dec
jmp
mov
sbb
jo
out
add
outs
jp
pop
scas
js
in
call
adc
mov
add
sbb
test
inc
or
and
sbb
lods
or
cmp
gs
mov
jne
adc
sbb
mov
mov
aaa
ret
inc
daa
out
dec
fsubr
lds
popa
clc
mov
repz
lahf
cmp
rol
sbb
cmp
or
test
cmps
call
loop
cmp
cld
jns
cmps
mov
and
rcl
xchg
xor
(bad)
and
push
mov
das
bound
xor
mov
imul
test
adc
div
xlat
push
dec
adc
or
pop
xchg
mov
and
scas
jge
pop
repnz
mov
mov
mov
iret
pmaxub
cdq
or
les
enter
mov
xchg
sub
arpl
mov
push
(bad)
into
je
push
js
rol
scas
test
add
cmp
scas
movs
push
pushf
sahf
mov
dec
(bad)
clc
cli
loopne
aaa
inc
jp
jle
inc
aam
mov
shl
sahf
shl
rol
psubsb
xchg
mov
ds
fwait
mov
mov
setno
sub
xor
jne
mov
pop
mov
cmps
sbb
mov
test
les
jbe
in
xor
ror
mov
pop
sub
test
js
jbe
shl
sbb
xor
pop
(bad)
nop
and
add
lods
pop
fwait
dec
call
jecxz
ret
sbb
loopne
loope
pop
or
fcmove
mov
or
(bad)
ins
mov
jnp
push
sti
mov
retf
(bad)
in
adc
loope
pop
push
ds
fwait
jecxz
xchg
xchg
scas
dec
mov
imul
lods
mov
ss
xor
clc
out
bound
dec
or
inc
sub
adc
add
push
sbb
stos
push
xchg
lods
mov
xor
xlat
sub
in
lds
lea
mov
stos
inc
fdiv
mov
pop
idiv
push
pop
mov
dec
out
inc
outs
fdiv
shl
mul
mov
jo
push
pusha
outs
adc
xchg
cmp
(bad)
rcl
pop
test
dec
mov
xchg
xor
and
xor
inc
out
test
pop
fs
add
sub
loope
add
in
cmp
mov
push
add
pop
jmp
lods
cmp
imul
adc
push
outs
test
repnz
dec
mov
mov
cmps
fwait
xlat
dec
mov
xor
shl
sbb
fiadd
bound
xchg
aam
aam
push
daa
jb
jbe
lods
jnp
ins
shl
dec
ret
push
cdq
push
sar
sub
(bad)
xchg
test
or
and
rol
stos
fwait
pop
or
jmp
push
pop
mov
mov
in
mov
shr
sub
inc
add
adc
dec
pop
(bad)
cmps
sub
adc
push
(bad)
xor
lods
inc
out
jge
pop
xor
xchg
or
push
clc
xchg
packuswb
bound
cmp
test
movaps
jns
daa
sub
sbb
dec
sti
lea
dec
ja
in
mov
add
ins
push
jo
inc
fwait
std
xor
mov
sbb
les
rep
mov
xlat
bswap
test
sbb
into
cmp
stc
pop
and
ins
mov
mov
adc
cmp
cmp
xchg
pop
xlat
ja
and
mov
ss
jmp
movs
fld
or
add
scas
mov
add
int
mov
pushw
pop
xchg
push
ror
scas
mov
or
xor
bound
stos
test
pop
mov
lods
repnz
gs
and
aaa
mov
push
out
test
cmp
imul
cli
dec
ins
adc
xor
lea
andps
push
mov
mov
jae
jg
test
dec
(bad)
loop
jnp
cmp
retf
jp
add
jl
xchg
jne
dec
movs
jns
in
out
cld
mov
mov
sbb
emms
std
dec
lea
cmp
lds
xchg
xchg
icebp
adc
xor
(bad)
hlt
cmp
sbb
pop
pop
int
push
or
jae
popf
sub
and
pop
dec
shr
hlt
and
inc
cmp
and
lds
shl
repnz
jb
pop
outs
sti
lea
icebp
leave
ret
shl
push
adc
jmp
inc
ds
jno
adc
cwde
mov
ror
aam
mov
adc
xor
fist
and
loope
jmp
push
std
cmps
and
pop
add
xor
aaa
outs
leave
ror
jge
retf
fwait
mov
jnp
dec
inc
xchg
jnp
xor
data16
ss
jmp
jmp
bound
ret
jg
xor
jae
sbb
sbb
xor
(bad)
aas
push
xchg
fst
mov
aaa
sbb
lods
xchg
mov
and
movs
xchg
pop
or
mov
popa
xchg
jle
pop
mov
pop
mov
cmp
fild
add
clc
mov
add
in
out
out
out
scas
cmp
aaa
stc
sbb
sbb
push
pop
xchg
pop
je
or
das
mov
jmp
inc
cli
jge
jbe
inc
(bad)
mov
cmp
and
jae
or
mov
pop
das
xchg
loop
xchg
or
outs
stos
imul
sub
push
cmp
push
fwait
sbb
retf
cmp
fnstcw
jb
jecxz
mov
retf
das
fcomi
popa
xor
sbb
(bad)
fcmovu
loopne
mov
clc
inc
mov
popf
jp
fistp
cmc
fmul
push
pushf
pop
repz
sub
nop
fld
pop
arpl
push
jg
dec
lea
mov
mov
je
sti
xchg
ja
dec
movs
cmp
mov
adc
mov
and
sbb
ins
cld
iret
sahf
xchg
mov
ret
les
gs
pop
nop
push
inc
mov
mov
popf
mov
add
jmp
xchg
dec
pop
xchg
lock
xlat
cmp
lods
push
pushf
jbe
test
mov
retf
push
push
push
pushf
test
push
add
and
sbb
ins
sahf
enter
and
in
mov
je
out
push
pop
xchg
pop
jmp
fidivr
push
std
popf
push
mov
out
int
add
mov
mov
lods
gs
ret
outs
dec
lahf
test
(bad)
int
push
repz
sbb
xor
mov
cmp
mov
inc
in
ret
ret
jae
adc
nop
cmc
or
out
test
adc
mov
ja
gs
fdiv
rol
shl
enter
ret
and
jmp
or
xchg
das
inc
mov
in
sbb
jae
xor
sbb
jae
or
shl
jbe
xchg
stos
pushf
add
and
fldcw
mov
mov
mov
and
test
sbb
in
aam
sub
push
call
cli
ret
(bad)
in
aad
xchg
mov
cmp
cmc
xor
outs
daa
popa
pop
stos
xchg
pop
inc
call
cmp
and
(bad)
or
push
mov
jg
cwde
mov
jp
jae
add
pop
clc
loop
inc
stos
retf
retf
les
dec
mov
fisttp
test
scas
inc
out
mov
mov
jb
adc
imul
push
dec
neg
mov
xor
out
push
jmp
sub
ss
add
cli
je
icebp
mov
stc
je
xor
mov
stc
adc
mov
mov
inc
retf
pop
out
xchg
cwde
and
aaa
xor
xchg
sbb
lahf
shl
xor
repnz
lea
jno
dec
push
imul
jp
lods
push
xchg
ds
(bad)
ror
fs
dec
cmps
push
daa
mov
cdq
xor
bound
add
push
or
mov
dec
mov
jecxz
dec
out
retf
mov
push
cs
jae
push
das
xlat
std
imul
jp
push
push
addr16
xor
scas
jmp
cld
adc
shr
cmps
std
call
add
std
movs
sbb
daa
jecxz
mov
scas
fwait
and
cmp
mov
in
daa
(bad)
aaa
aam
into
xchg
push
int3
or
popf
xor
push
outs
dec
js
pop
jmp
xor
pop
mov
icebp
ins
shr
ds
push
test
cld
push
int3
es
mov
out
sub
add
xchg
fisubr
adc
sbb
inc
xchg
sbb
rcr
movs
in
ror
xor
mov
mov
mov
dec
shl
pop
stos
adc
(bad)
or
rol
jno
ds
adc
and
sbb
sub
adc
push
cld
mov
scas
mov
es
ret
push
out
(bad)
out
cmp
hlt
(bad)
xchg
out
fistp
push
jns
(bad)
jmp
cli
adc
aaa
(bad)
mov
inc
jae
inc
push
test
test
test
and
cmps
in
adc
mov
in
push
jmp
pusha
sub
cmps
fdivr
data16
mov
ins
xchg
jle
pop
hlt
sub
out
or
xor
xchg
dec
enter
xor
outs
addr16
jmp
rcl
fs
jp
push
iret
int3
ins
lock
inc
xchg
rol
mov
add
fs
xor
pushf
dec
sbb
je
and
mov
in
push
retf
and
and
xor
cmp
popa
enter
out
push
enter
push
outs
rol
jecxz
repz
mov
mov
stc
mov
sti
ret
add
dec
rep
(bad)
not
add
pop
pop
rol
enter
div
outs
fucomip
mov
(bad)
dec
jmp
retf
ret
cmp
aam
xchg
pop
rcr
jne
pop
shr
jmp
or
mov
shl
mov
outs
jo
xchg
cmp
fmul
and
inc
stc
mov
div
mov
mov
mov
hlt
dec
push
std
fcomp
fwait
sub
mul
lea
test
mov
cmps
in
call
lock
push
sahf
pusha
rcl
push
jbe
fiadd
daa
xchg
xchg
arpl
pusha
jmp
test
shr
in
push
pusha
cmp
(bad)
outs
idiv
pop
daa
dec
add
call
test
or
(bad)
out
add
add
sbb
sub
add
or
(bad)
mov
xor
cmp
mov
outs
and
mov
mov
js
pop
lahf
xchg
cld
test
ins
shl
sbb
je
xchg
xchg
repz
lds
cli
imul
add
adc
cmp
xchg
xchg
pop
adc
dec
mov
pop
mov
mov
es
es
ins
rol
xor
out
or
scas
sub
jae
push
xor
push
push
xchg
xor
mov
adc
or
jmp
cmp
sub
xchg
shl
jecxz
dec
mov
hlt
daa
ins
or
pushf
scas
scas
loop
jbe
dec
arpl
sbb
inc
inc
xor
jmp
scas
imul
mov
rol
push
push
mov
or
iret
ds
cmp
rdpmc
outs
mov
xchg
or
adc
sahf
out
jns
push
sbb
push
(bad)
sbb
jns
fsub
inc
pushf
xchg
push
in
mov
cdq
pop
repnz
jge
jmp
in
cmp
lahf
stos
into
dec
push
outs
inc
inc
js
cmp
dec
add
pusha
cmp
jne
daa
es
mov
imul
test
push
and
es
cmp
add
pop
cli
lock
enter
dec
sbb
movs
outs
mov
cmp
inc
pop
ja
jnp
adc
inc
sub
sbb
movs
psraw
loope
call
adc
sahf
outs
push
jo
stc
mov
cmp
popf
mov
inc
jle
shl
neg
sbb
adc
ss
mov
stos
or
xchg
xor
test
mov
in
pop
cmps
cli
mov
xor
inc
mov
mov
mov
mov
clc
ins
sub
outs
addr16
dec
test
stos
test
mov
ins
sahf
xchg
jo
sbb
add
and
ror
frstor
dec
ja
or
int
jge
cmp
sbb
push
or
dec
rcl
into
fsubr
adc
popf
dec
adc
ins
pop
call
shl
dec
fs
in
xor
in
idiv
xchg
rol
dec
and
or
(bad)
aas
cmp
and
test
dec
mov
mov
dec
and
push
sub
add
test
adc
jne
push
mov
ret
dec
jno
popa
out
sub
es
adc
scas
cmc
out
icebp
pop
sar
jmp
pop
loopne
or
mov
not
enter
pusha
cmc
fld
xor
mov
mov
jl
inc
xchg
call
xor
sbb
mov
pusha
leave
(bad)
cmp
lods
scas
(bad)
(bad)
jbe
xor
into
add
add
aad
push
xchg
sbb
xor
lock
jge
jg
push
push
repnz
sbb
and
sub
pop
inc
test
inc
data16
js
sti
sub
cdq
pop
xrelease
xor
out
sti
rol
pop
mov
cmp
pushf
pushf
adc
shl
ins
or
stos
mov
int
cmp
fs
test
sbb
cmc
popf
add
xchg
sub
mov
pusha
repnz
xor
sub
int
xor
lahf
dec
xor
inc
std
js
enter
sbb
das
jle
add
test
sbb
call
stos
(bad)
xchg
and
loope
pop
jae
lods
xchg
sbb
out
cmp
sub
xchg
sbb
div
dec
(bad)
mov
scas
xchg
dec
shl
mov
mov
aas
mov
in
aaa
jecxz
dec
jno
push
into
inc
xor
fcom
cmp
ret
scas
aaa
jb
inc
lea
mov
xchg
(bad)
aam
xchg
add
xchg
dec
or
jb
cmps
jns
lods
mov
lods
xchg
imul
xchg
add
movs
xor
mov
fisub
add
lock
pusha
cmp
fwait
scas
fisubr
fimul
push
pop
push
ret
icebp
sub
mov
imul
xchg
cmp
inc
fwait
idiv
out
arpl
jns
mov
mov
gs
xor
or
sub
mov
shl
xor
in
in
xchg
push
push
int3
pop
fidiv
inc
call
ficomp
stc
jae
je
mov
jmp
aam
pop
jno
cld
mov
jge
call
ret
mov
mov
and
dec
pop
dec
lds
mov
jge
xchg
lds
jbe
cmp
xchg
or
push
push
sub
enter
call
sbb
retf
rcr
ins
pop
ds
add
popf
mov
pushf
iret
out
enter
test
loop
movs
ret
test
or
xor
ror
enter
cli
adc
push
fcom
push
ds
add
jb
sbb
jmp
sbb
inc
les
pop
cmp
inc
aam
push
dec
xchg
dec
int3
mov
ss
scas
mov
mov
push
fld
sub
in
loop
(bad)
xchg
add
fcomp
jno
mov
mov
outs
cmps
sub
aam
xor
xor
mov
frstor
rcl
xchg
jbe
xor
aad
cmp
pop
fmul
cmps
adc
and
mov
sbb
test
pop
jmp
inc
sbb
ss
push
pop
sbb
movs
pop
adc
mov
cwde
mov
inc
push
sub
and
sbb
mov
mov
je
push
movs
inc
and
in
pop
xor
and
jns
xchg
cld
inc
push
iret
sahf
mov
jb
aaa
cmp
push
pushf
pop
mov
push
mov
jg
and
jae
mov
xchg
popa
adc
mov
ins
mov
mov
out
dec
and
(bad)
xchg
in
fidiv
ret
lods
(bad)
es
mov
or
mov
inc
sahf
mov
pusha
xor
in
xchg
scas
mov
xchg
ror
mov
fbstp
xor
sbb
addr16
add
sbb
mov
scas
lock
ret
dec
test
outs
adc
push
std
push
in
mov
jle
loope
or
pushf
cmp
mov
jo
or
arpl
ret
sub
jge
retf
shl
dec
retf
push
ins
sub
fbld
jle
pop
pop
mov
loope
das
adc
push
mov
out
jp
call
xlat
lds
jge
pushf
lds
xchg
addr16
dec
in
or
scas
aam
pushf
imul
outs
add
je
cs
popf
inc
xchg
dec
adc
retf
ja
or
dec
outs
or
jno
jge
loopne
xchg
cmp
out
mov
mov
cmp
into
(bad)
mov
mov
jecxz
mov
push
fisubr
enter
push
shl
xchg
cmp
pop
inc
je
loop
hlt
shl
jne
lock
sub
jno
nop
sar
push
push
mov
jne
mov
xchg
push
and
push
cld
push
int3
movs
je
pop
enter
lods
sahf
in
lock
mov
push
mov
pop
sbb
test
sbb
scas
cmp
rcl
aaa
mov
push
cmp
add
inc
pop
loopne
enter
and
ins
fs
jbe
movs
dec
add
sub
sbb
add
mov
out
mov
es
loop
and
mov
sub
fwait
inc
ins
and
mov
cmp
xor
inc
icebp
or
cmp
cs
cmp
cmp
xor
mov
gs
jae
mov
add
add
xor
aam
jg
fnstenv
ror
movs
xchg
inc
xchg
xchg
mov
mov
stos
rcr
(bad)
jl
sbb
repnz
fiadd
mov
pusha
jp
mov
mov
mov
jp
shl
push
and
or
outs
in
imul
xor
adc
pop
push
mov
(bad)
mov
mov
in
sub
mov
mov
cdq
cmps
mov
scas
mov
pop
retf
mov
out
hlt
jecxz
xlat
mov
dec
adc
add
cmp
sti
lods
mov
pop
mov
rcl
rcl
pushf
mov
and
fldcw
out
xor
call
hlt
mov
add
push
pop
and
inc
jl
call
fidiv
aas
aas
adc
mov
mov
xlat
aam
cmp
loopne
jne
jl
sahf
sub
aam
loopne
sub
stc
sbb
rcr
(bad)
jecxz
mov
and
mov
push
xchg
aaa
push
rcr
int
xchg
lods
jg
cld
add
enter
movs
cmp
xor
inc
(bad)
mov
hlt
dec
mov
sub
and
mov
mov
sahf
push
cmp
cmc
mov
ss
inc
dec
ud2
iret
jmp
add
addr16
mov
call
rcl
ja
iret
cs
adc
test
mov
leave
and
inc
addr16
cmp
xor
or
das
mov
jns
lock
mov
div
jb
(bad)
cmps
stos
call
lea
sub
pusha
imul
(bad)
loopne
ins
ret
test
loop
xlat
sar
cmp
sub
jmp
sar
cmps
sbb
aas
pusha
daa
test
fisttp
ret
mov
push
add
push
out
pushf
or
loop
jp
test
mov
jae
jne
loop
cwde
mov
push
xchg
adc
jmp
mov
mov
xchg
scas
repz
mov
pop
ret
(bad)
dec
lea
sub
push
xchg
int
rcr
mov
add
popa
pop
pop
dec
(bad)
cmove
pop
fs
fwait
mov
mov
fsubp
and
gs
loopne
cmp
fld
(bad)
push
mov
or
call
add
mov
or
xor
sub
dec
mov
jns
push
ror
push
sahf
das
adc
dec
rcr
inc
scas
sub
cmp
jno
dec
test
icebp
adc
pop
mov
cld
clc
sbb
call
push
shr
ss
push
scas
adc
sub
sahf
mov
hlt
rcl
aaa
loope
dec
mov
xchg
xor
mov
aam
mov
or
daa
dec
test
out
pop
mov
arpl
mov
push
push
mov
frstor
jno
popa
or
pop
mov
(bad)
and
mov
scas
mov
add
in
(bad)
cmp
or
fwait
pop
popf
fprem1
idiv
inc
shl
lea
dec
ficomp
in
pop
push
or
test
daa
xchg
js
xor
cmps
sub
sbb
aas
fsubr
neg
shr
mov
scas
popa
out
jecxz
pop
shr
dec
in
pop
mov
dec
jo
in
jno
das
mov
cs
jecxz
fld
mov
(bad)
cwde
sub
pop
inc
jecxz
sub
js
mov
mov
movs
push
or
and
dec
mov
vpsubusw
lock
inc
mov
mov
mov
out
dec
inc
xor
scas
sbb
mov
xchg
aaa
lea
(bad)
sbb
inc
in
add
or
sbb
dec
and
fisub
int3
xchg
test
imul
mov
or
in
outs
cli
in
push
adc
cmp
push
je
sti
mov
mov
push
int
in
mov
aam
push
pop
(bad)
mov
push
or
jb
iret
pop
in
jno
ins
xchg
and
in
mov
xor
push
pop
xchg
cwde
js
ds
es
xacquire
nop
push
jl
mov
mov
add
mov
inc
pop
push
data16
ja
loopne
jbe
outs
call
out
les
sub
sub
jae
in
xrelease
stc
out
xchg
xor
stos
lods
dec
or
xchg
cmp
std
loopne
push
mov
xor
add
adc
dec
pop
pop
xchg
hlt
mov
adc
dec
push
and
add
and
call
cmc
mov
cmp
cmp
cmp
pusha
sbb
push
popa
mov
movs
push
cmp
imul
inc
out
push
out
pop
inc
xchg
(bad)
and
xchg
cmp
inc
mov
mov
div
pushf
jl
or
(bad)
cmp
int3
pop
out
bound
hlt
retf
sbb
pop
sbb
jmp
xchg
add
xchg
rol
mov
lds
inc
xor
imul
out
arpl
loop
and
in
cmp
jle
xchg
movs
xchg
mov
stc
in
adc
sbb
jmp
jns
adc
xlat
leave
push
retf
mov
inc
into
mov
(bad)
xlat
mov
loop
cmp
cmp
rcr
lea
jo
dec
pop
ins
sbb
jp
leave
hlt
cwde
push
imul
adc
jo
(bad)
clc
jnp
jbe
shl
into
stos
mov
sub
sub
mov
or
push
fmul
aam
aad
dec
xchg
adc
cld
(bad)
push
mov
mov
lahf
add
jno
movs
cmps
aad
sbb
jo
mov
pushf
sbb
(bad)
sar
icebp
mov
movs
arpl
scas
add
adc
fistp
pop
mov
out
jl
jg
shl
out
xchg
inc
test
jne
mov
mov
and
adc
pop
mov
call
and
sti
movs
adc
cmp
sub
push
scas
fprem1
jns
imul
and
mov
in
sub
ins
movs
sub
repnz
mov
sub
mov
aad
dec
fist
dec
add
fiadd
bound
iret
call
push
and
adc
dec
pop
jae
fwait
adc
pusha
xor
(bad)
mov
cli
mov
sub
cld
cld
mov
dec
cmp
popf
push
or
nop
cmp
xchg
adc
adc
aam
and
fsub
mov
add
lods
test
cdq
dec
xor
nop
sbb
fwait
xlat
pop
ss
sbb
cmp
sub
das
adc
xchg
repz
cmp
xchg
adc
pop
sub
outs
sti
fiadd
inc
ja
enter
test
cmp
pusha
cmps
xchg
arpl
dec
ret
sti
shl
aaa
push
sub
xor
lahf
inc
call
cmp
sub
call
loope
and
or
and
in
(bad)
adc
pusha
mov
neg
popf
in
aas
jo
scas
in
inc
lds
inc
mov
sub
cs
ins
dec
rep
clc
aaa
pop
loope
jne
cwde
xor
call
xchg
(bad)
mov
sub
loope
pop
pop
and
int
xchg
cmp
jo
repnz
add
fwait
push
inc
cmp
test
xor
mov
and
jnp
dec
xchg
xchg
dec
jge
imul
or
push
into
push
mov
not
mov
ja
xor
mov
jne
push
out
xchg
jg
xlat
out
(bad)
sti
mov
aam
stos
cmp
ins
fadd
mov
pop
je
adc
lahf
and
pop
add
test
mov
ja
test
inc
aas
scas
dec
hlt
push
xchg
push
inc
shl
adc
jecxz
test
mov
push
mov
sbb
xchg
cmc
popf
dec
inc
arpl
repz
mov
cmp
call
mov
jo
xchg
test
and
add
lods
sahf
dec
mov
ret
xchg
shl
sub
sub
adc
push
sbb
mov
lock
test
mov
mov
dec
(bad)
xor
mov
test
loopne
dec
pop
or
xor
adc
fnsave
aas
jne
stc
lods
dec
mov
ja
pop
mov
test
dec
xchg
mov
adc
aaa
addr16
imul
cmps
lods
lods
imul
sbb
out
cwde
and
bound
sub
(bad)
push
dec
lods
call
add
je
iret
ins
jae
sub
or
in
shl
sti
sbb
ja
(bad)
loopne
pop
and
push
xchg
lds
bound
popa
sbb
ins
pop
cmps
pop
pop
iret
cmp
jne
out
retf
inc
mov
pop
or
mov
inc
push
pop
enter
sahf
mov
out
xor
out
aaa
pop
popa
and
int
ss
mov
scas
daa
ja
xor
or
in
fsub
js
in
or
out
adc
repz
clc
push
inc
loope
inc
cdq
ficom
ror
in
cmps
arpl
xchg
push
push
mov
fnstcw
cmps
(bad)
sbb
arpl
xchg
je
aas
or
jbe
inc
inc
jbe
or
cli
(bad)
in
(bad)
mov
adc
inc
shl
in
mov
xchg
inc
sbb
arpl
dec
out
sbb
aaa
jg
pop
xchg
or
scas
iret
loope
mov
mov
aaa
repz
test
mov
jo
lahf
sbb
sub
jb
fs
aaa
inc
call
mov
gs
mul
scas
pusha
mov
xor
sub
in
mov
shl
xlat
mov
(bad)
ret
adc
ret
xor
std
jo
mov
test
stc
retf
sub
sar
xchg
or
jne
out
push
and
mov
dec
jbe
aas
xor
inc
imul
daa
lea
popa
imul
test
xor
mov
je
push
jo
xchg
cs
push
mov
stos
inc
arpl
mov
lock
cwde
int
(bad)
mov
mov
sub
not
jmp
in
pop
(bad)
jno
jne
push
jecxz
sbb
ja
push
ret
sbb
mov
(bad)
(bad)
mov
sub
mov
mov
stos
jge
fmul
rcl
mov
cmp
gs
mov
xor
aaa
test
pop
bound
hlt
iret
cmps
test
repz
cmp
sub
stos
das
in
jmp
jmp
cmp
pop
jmp
xchg
(bad)
inc
push
jns
pushf
movs
push
sti
jg
out
es
jp
mov
dec
test
mov
pushf
sub
jbe
and
lods
clc
loope
jmp
in
sbb
cmp
cmp
push
sub
xchg
or
rcr
into
mov
push
mov
pop
lds
enter
push
pop
or
jp
js
cld
inc
push
mov
sbb
mov
shl
aad
mov
sar
stos
jmp
fadd
xchg
add
ins
or
jg
outs
xchg
inc
cdq
push
adc
call
mov
(bad)
std
test
cmp
arpl
cmp
sub
and
push
pop
movs
mov
cmc
dec
pop
mov
add
mov
les
push
and
push
push
sub
dec
imul
std
ror
iret
js
jmp
nop
rol
dec
adc
xchg
pop
add
or
rcr
mov
mov
sbb
sbb
pop
out
add
fs
xlat
lods
mov
hlt
xlat
xchg
ret
(bad)
scas
in
lea
mov
jns
gs
inc
add
and
shr
sub
mov
cdq
clc
es
push
pop
enter
mov
or
je
or
popf
sub
sbb
stc
xchg
scas
adc
sub
sbb
(bad)
xchg
imul
xchg
pop
xchg
mov
jns
sub
addr16
mov
and
sub
push
inc
mov
hlt
sbb
jge
sub
inc
inc
xor
mov
and
cmps
iret
xor
mov
(bad)
adc
push
stos
xor
sbb
sti
sbb
ins
cli
cmps
mov
sti
sub
cs
sub
popa
mov
or
stc
sar
push
daa
out
psubb
fisttp
jns
rol
push
dec
add
or
cs
movs
pop
push
fwait
mov
and
or
stos
dec
add
fs
cmp
pop
xor
in
retf
dec
adc
or
pop
mov
mov
hlt
jmp
sbb
mov
mov
push
jno
cmps
dec
push
or
(bad)
int3
add
scas
call
ins
jae
neg
ins
inc
jbe
add
leave
lock
daa
dec
hlt
out
cs
setae
xchg
push
cmp
rcr
ja
movs
rcr
push
sahf
push
pop
jecxz
jae
xchg
sbb
cmp
js
xor
xchg
fwait
pop
push
xchg
jns
jmp
or
popa
add
cmp
xchg
cmp
mov
adc
cmps
xor
fidiv
adc
jne
pop
or
ret
add
or
imul
(bad)
cmp
mov
cmp
push
cli
addr16
in
adc
je
xchg
jecxz
pop
jbe
xor
fsubr
or
arpl
out
mov
int
and
outs
inc
ret
call
xchg
mov
adc
jmp
retf
imul
out
sahf
add
lds
scas
in
cwde
mov
dec
cmp
outs
mov
aaa
sub
pop
jl
dec
dec
in
sahf
push
hlt
dec
aaa
fstp
and
and
int
test
jnp
std
stos
mov
cs
cwde
nop
mov
icebp
push
ja
push
ja
lods
cwde
inc
jge
cmp
or
leave
aam
call
cli
not
test
hlt
enter
icebp
adc
in
loopne
mov
cmp
add
lock
xchg
pop
repnz
jnp
sbb
mov
xchg
jb
cwde
and
push
or
das
xlat
cwde
(bad)
and
les
push
push
mov
xlat
out
daa
in
outs
push
mov
repz
jmp
and
in
iret
cld
lahf
pop
popf
cmp
cmp
loop
aam
sbb
gs
dec
or
jge
cmp
ins
jo
fild
pop
or
shr
xor
icebp
sub
(bad)
mov
loopne
stos
push
inc
cmp
pop
dec
push
or
retf
or
ins
xor
ins
fisttp
inc
pop
mov
push
cdq
jmp
sti
jns
mov
into
mov
mov
retf
xchg
sbb
shl
jnp
push
stos
mov
cmp
imul
loope
push
fld
jge
or
cmp
mov
xchg
shr
mov
shl
(bad)
mov
pop
add
jne
xor
jb
and
push
jl
push
imul
aam
inc
out
scas
aaa
mov
pop
aam
jmp
inc
aam
mov
inc
fidivr
adc
jbe
jp
out
cdq
push
inc
sbb
pop
scas
leave
or
jo
mov
cs
xor
sub
cli
popf
push
(bad)
pop
test
or
aaa
jg
in
addr16
sbb
call
pop
data16
test
and
adc
sbb
sub
or
icebp
push
mov
dec
xchg
loope
push
ja
dec
inc
inc
mov
call
out
ja
sub
xchg
mov
dec
and
xchg
not
pop
dec
or
das
mov
sub
pop
mov
pop
mov
ror
ds
sbb
mov
or
sbb
out
dec
push
dec
(bad)
mov
repz
add
push
dec
aad
fist
std
push
movs
cmp
out
inc
loopne
push
cmp
fistp
into
xchg
mov
arpl
jmp
jnp
repz
push
pusha
or
mov
inc
cmp
xchg
je
mov
mov
mov
xchg
cwde
mov
ret
xchg
inc
loope
mov
sub
inc
sbb
loope
clc
dec
adc
ins
pop
std
push
add
test
xlat
ds
pop
js
or
scas
lods
xchg
sbb
mov
mov
mov
cmp
aad
aaa
sbb
xchg
mov
push
(bad)
mov
cwde
aad
add
sub
cs
xchg
xchg
lds
sub
(bad)
cmps
dec
mov
in
jno
fild
mov
in
pop
and
mov
mov
into
movs
pop
aaa
(bad)
(bad)
jnp
(bad)
adc
out
imul
fiadd
jbe
mov
outs
jmp
stos
fdiv
int3
push
or
inc
aaa
xor
aam
or
adc
test
xlat
mov
inc
retf
aam
adc
call
xchg
pop
xchg
in
dec
sub
inc
push
mov
ret
out
and
pop
mov
push
mov
sbb
jecxz
jo
xchg
(bad)
adc
aas
inc
fnsave
adc
or
add
repnz
dec
sub
call
sbb
aaa
gs
pop
push
cmc
ss
mov
adc
jecxz
stos
popa
(bad)
fxtract
push
je
int
imul
jle
sbb
jmp
sbb
cmp
pop
xchg
stc
add
xor
sub
call
adc
mov
iret
(bad)
cmps
sbb
das
sbb
ficomp
out
add
pop
(bad)
rcr
jp
in
rol
lods
pop
jge
fbstp
jmp
xchg
retf
rol
test
push
retf
into
call
sub
gs
jne
inc
push
sar
aas
mov
add
cmp
mov
mov
clc
or
sbb
or
lds
icebp
add
in
or
mov
cmps
jle
(bad)
jns
and
cmps
pop
(bad)
out
and
loop
dec
cmp
inc
fwait
xor
lds
mov
dec
icebp
jmp
mov
jmp
(bad)
(bad)
push
cmps
pop
mov
nop
and
or
daa
cli
int
ins
xchg
mov
div
bound
mov
add
xlat
mov
fild
popf
mov
je
mov
bound
leave
js
test
inc
ret
mov
and
and
dec
frstor
sub
movs
fistp
jno
hlt
scas
je
xor
retf
arpl
jne
dec
movs
xchg
sub
(bad)
mov
cmp
or
bound
nop
push
xchg
(bad)
in
js
mov
sub
stos
cmp
stos
or
iret
scas
xchg
push
enter
add
xor
cmps
mov
sub
mov
out
pop
dec
add
push
xor
push
inc
add
cli
aaa
ficom
jb
scas
xor
popf
xor
outs
sub
jge
int
fcmovne
adc
mov
adc
pop
fcomp
bnd
jmp
cmp
cs
push
fdiv
test
ds
ficomp
dec
cmp
mov
sbb
hlt
rcr
inc
cmp
adc
xchg
out
jge
inc
sub
fcom
sbb
dec
and
ja
and
and
cld
test
iret
mov
stos
outs
jae
sub
aaa
loop
jae
pop
out
mov
lahf
lods
aas
cdq
push
or
sub
pop
inc
cwde
(bad)
retf
xlat
and
dec
xor
xor
hlt
out
add
pop
jl
pop
push
jno
and
jno
nop
or
imul
push
adc
cmc
int3
push
sub
jnp
push
and
inc
repnz
sbb
push
push
sbb
xor
dec
add
std
iret
repz
sbb
les
jae
test
jle
xchg
call
ret
dec
or
cmp
ret
mov
leave
inc
jge
push
sbb
lods
jb
arpl
jl
(bad)
in
rcl
mov
stc
shl
cld
sub
xchg
cs
popa
cmp
idiv
jns
ds
sbb
sti
std
cmc
(bad)
xlat
out
xchg
and
mov
inc
mov
adc
(bad)
push
jge
mov
lock
rcr
arpl
rcl
jae
jb
sti
mov
add
jae
mov
mov
test
adc
mov
pop
retf
lds
add
rcr
cwde
mov
jnp
jb
mov
cmp
iret
cld
inc
popf
loop
jae
in
mov
imul
test
daa
pop
jl
repz
xor
ret
outs
push
jne
daa
mov
inc
dec
outs
add
fistp
cli
xchg
mov
lds
lahf
jge
es
int
xor
add
and
sar
mov
aaa
lock
das
jo
pop
loopne
inc
(bad)
out
sub
xor
aas
cmps
push
ja
mov
xor
pop
mov
std
cs
mov
inc
jb
push
pusha
adc
and
mov
and
rcl
pop
lds
xor
pop
jmp
sub
or
add
or
fdiv
stc
jmp
imul
inc
pop
dec
iret
in
cs
cmp
cli
add
mov
lea
push
mov
lock
aad
jo
pop
jmp
shl
mov
(bad)
out
adc
int3
inc
dec
adc
cmps
jnp
xchg
push
sub
(bad)
xlat
push
mov
pushf
jnp
psubd
ja
pusha
cmp
xchg
cmc
or
adc
sti
jae
mov
fdivr
xor
push
movs
cld
fsubr
lds
cdq
adc
mov
push
loope
inc
pop
add
leave
inc
inc
adc
js
xchg
mov
sti
push
mov
cld
cwde
sub
sbb
loope
(bad)
xchg
cmp
mov
enter
movsx
rcl
pop
ins
push
(bad)
call
dec
jmp
repz
or
mov
xchg
sub
call
push
push
sub
in
mov
pop
adc
or
pop
loop
add
ds
cmc
ret
sbb
out
xchg
hlt
mov
outs
leave
sub
mov
inc
jl
fadd
fwait
imul
cs
fwait
jne
jbe
xchg
fcomip
fistp
jno
sub
sbb
int
jno
mov
xchg
or
ret
or
inc
inc
call
fld
leave
sub
iret
inc
hlt
jp
aam
sub
jbe
mov
and
push
loope
scas
inc
out
pop
out
mov
ss
ins
les
sbb
push
jae
loope
sub
leave
jo
dec
add
repnz
icebp
xor
test
or
add
imul
fwait
pop
add
sti
sar
(bad)
(bad)
adc
add
pop
adc
movs
inc
mov
pop
fs
push
xor
pop
out
dec
out
pop
or
mov
mov
fmul
ds
int3
test
mov
cmp
in
xchg
add
push
ins
imul
jl
ins
mov
into
ror
push
adc
imul
call
mov
adc
or
pop
fcmovbe
daa
mov
loop
adc
icebp
int3
jne
aas
sub
add
push
sub
adc
gs
cmps
std
iret
test
ins
call
mov
rcr
jg
(bad)
mov
pop
cmp
jne
mov
sbb
fs
lods
rol
je
or
loope
inc
paddd
cld
icebp
sti
xor
test
iret
mov
xchg
xchg
sbb
cmp
xor
xchg
js
dec
push
retf
in
jne
inc
sub
in
dec
lock
add
jecxz
cmps
mov
mov
into
cld
pop
cmp
jns
cld
pop
shl
repz
mov
out
xor
fwait
mov
les
cmp
sti
mov
(bad)
jg
fimul
add
xor
cmp
aas
cmps
dec
pop
mov
and
lods
sub
repz
mov
cmp
xor
test
jne
ficom
cmp
fist
mul
push
mov
cmp
inc
jl
jmp
rcl
push
inc
push
mov
cmps
stc
mov
lahf
lods
jmp
in
dec
test
sbb
and
outs
loopne
mov
(bad)
fcom
in
inc
jle
sbb
pushw
mov
cmp
ds
les
dec
inc
sbb
pusha
fcom
cmps
pop
push
push
add
push
aas
dec
mov
fld
repnz
inc
test
or
inc
std
inc
cmp
loope
not
adc
cmp
fisttp
push
sub
cs
sub
fcmovb
movs
inc
or
fst
dec
pop
push
xchg
jg
in
mov
pop
(bad)
xor
push
clc
sbb
test
inc
add
pop
imul
fbstp
mov
cmp
in
xchg
leave
xchg
or
dec
lahf
sub
sub
lahf
inc
xchg
sar
inc
and
mov
mov
mov
push
mov
rcl
fist
add
push
and
shr
inc
icebp
mov
jb
mov
movs
lods
xor
jmp
(bad)
cmp
mov
das
mov
inc
js
pusha
mov
cmp
int3
iret
xchg
aas
dec
in
cmp
inc
popa
adc
imul
loop
push
mov
je
pop
push
mov
ins
pushf
add
dec
(bad)
sbb
into
cmps
jns
pop
es
cmp
dec
mov
mov
ins
add
mov
push
retf
fiadd
jle
fstp
sbb
fdivp
fisub
test
mov
loop
mov
xchg
pusha
cmps
add
lods
push
in
(bad)
cmp
and
jne
mov
mov
mov
ffree
jno
aaa
(bad)
nop
push
push
push
jmp
shl
out
push
repnz
xchg
movs
int3
cmp
jb
sub
or
mov
pop
mov
imul
inc
dec
sahf
or
loop
sub
repz
ins
or
test
inc
pop
mov
iret
push
pop
pop
shl
aad
mov
sbb
dec
sub
xchg
xor
xchg
mov
ss
pop
xor
sbb
or
hlt
xor
and
xor
sahf
mov
mov
jae
sub
push
vorps
xor
mov
lods
(bad)
mov
adc
sub
mov
mov
test
mov
sub
rcl
mov
xchg
inc
jle
jmp
rcr
fs
inc
mov
mov
shl
aam
mov
dec
fsubr
cmp
jecxz
arpl
(bad)
mov
ret
stos
test
sti
jne
rep
ss
clc
inc
pop
fidiv
adc
xchg
or
gs
sbb
hlt
sbb
mov
pop
and
das
shl
cmp
fldcw
dec
add
(bad)
and
sbb
shr
or
pop
ins
jnp
mov
movs
push
fisubr
das
jl
sar
jmp
pop
stos
cmp
les
sub
outs
sub
mov
psubusw
fld
push
in
pusha
and
addr16
test
retf
cmp
stos
aas
cmp
jae
arpl
xchg
xor
inc
repnz
inc
xchg
(bad)
sub
xor
mov
or
add
xchg
mov
xchg
jmp
pop
push
mov
xchg
inc
mov
enter
xchg
adc
jbe
or
push
cwde
and
test
out
and
aaa
cld
pushf
xchg
cli
adc
(bad)
imul
xchg
cmc
popa
aad
fstp
test
ror
shl
icebp
ficomp
push
fisubr
call
dec
pusha
or
pop
test
cmp
push
or
push
arpl
xchg
or
inc
mov
fisttp
push
xchg
jg
inc
or
sub
fld
pop
aas
xchg
inc
mov
sub
out
dec
rcl
cmp
in
xchg
popa
adc
fld
fmul
mov
lahf
into
inc
xchg
dec
ret
ins
push
(bad)
mul
mov
lods
dec
out
mov
mov
mov
cmp
inc
mov
sbb
dec
xchg
sub
sti
cmp
ret
pop
mov
sbb
and
push
dec
sub
dec
ja
xor
mov
clc
or
mov
ins
push
inc
or
bound
(bad)
call
ins
lahf
lods
fwait
aad
jge
mov
lods
mov
xchg
push
push
aaa
rcr
adc
pop
xchg
mov
mov
fadd
and
mov
cld
jmp
imul
xchg
ror
inc
xor
shl
push
inc
int3
add
into
call
push
mov
scas
leave
dec
xor
hlt
out
rcr
mov
mov
stos
jle
mov
and
xlat
sbb
test
jge
jbe
cmp
mov
pop
icebp
ss
xor
xor
xchg
fs
jne
xchg
inc
ret
xchg
cmp
scas
cmp
inc
outs
js
mul
and
(bad)
ss
jg
clc
rol
push
lods
mov
dec
add
adc
das
cmp
int3
ret
add
in
pop
xabort
cwde
inc
ds
lods
(bad)
cwde
ret
jo
aas
outs
mov
out
xlat
pop
movs
pushf
ss
sub
mov
ja
xor
sbb
sub
xor
jmp
xchg
mov
push
push
push
(bad)
sbb
push
cmp
sub
or
fnstcw
sbb
addr16
push
call
lea
xor
cwde
or
sahf
lds
sahf
or
inc
stos
xchg
xor
stos
mov
dec
ror
xchg
dec
in
dec
ins
iret
cmps
dec
lods
push
or
push
mov
(bad)
push
fimul
test
sbb
add
dec
ds
xchg
icebp
retf
outs
fidivr
or
jnp
push
push
mov
dec
jo
and
dec
adc
xor
je
das
and
ret
mov
inc
(bad)
leave
push
aas
(bad)
nop
xchg
stos
les
outs
shl
xchg
adc
push
ins
ret
mov
fwait
xchg
xlat
inc
icebp
or
mov
sar
clc
rol
xchg
lods
into
lds
mov
sbb
ins
mov
mov
(bad)
jns
mov
sbb
fisttp
lock
ins
xchg
cmp
into
mov
aam
xor
popa
ds
ins
push
mov
popf
add
cld
jns
push
les
or
sbb
dec
(bad)
cmp
fistp
dec
lahf
ds
jge
fnstsw
inc
sub
arpl
xchg
(bad)
cwde
jnp
add
int
mov
das
aas
add
pop
sti
cwde
mov
mov
dec
sub
movs
add
cdq
add
addr16
adc
mov
add
mov
sbb
div
jecxz
ja
mov
xchg
push
xchg
dec
mov
pop
inc
loopne
gs
sbb
test
cmp
(bad)
jns
loop
xor
jae
retf
es
not
aaa
fisub
and
mov
mov
cwde
jl
mov
or
adc
dec
out
xchg
adc
int3
xchg
cmp
cmps
cld
repnz
(bad)
cmp
sub
jmp
cmp
jno
test
push
sbb
into
mov
jae
mov
jne
xchg
ja
movs
sub
or
retf
pop
daa
adc
call
in
mov
test
adc
test
pushf
ja
inc
aaa
xor
lea
lea
sub
pop
out
outs
arpl
nop
jbe
gs
mov
inc
int
or
mov
and
mov
jae
push
mov
mov
or
cmp
fisttp
fnstcw
ret
out
ja
(bad)
je
cmc
les
add
out
fdiv
stc
daa
pusha
mov
and
mov
scas
lods
stos
mov
stos
and
(bad)
retf
mov
cs
mov
pushf
shl
sub
(bad)
mov
or
jmp
jnp
mov
and
xor
jno
shl
or
test
stc
lea
jg
cmp
fcomp
mov
fdiv
add
bound
push
(bad)
dec
push
aam
cmp
sbb
aad
jl
sub
add
enter
push
sti
fs
mov
repz
jo
or
das
je
inc
jmp
push
or
adc
adc
mov
cs
inc
pusha
(bad)
ins
jb
xlat
xor
retf
lock
aad
arpl
push
(bad)
scas
add
test
mov
sbb
movs
jl
pop
ret
shl
push
inc
out
ret
jl
leave
adc
xchg
out
jle
mov
test
aaa
repnz
hlt
in
or
add
(bad)
fnstsw
hlt
ror
mov
xchg
inc
dec
sub
daa
sub
ins
movs
jbe
add
jecxz
scas
adc
add
rcl
pop
sti
push
mov
imul
fwait
idiv
retf
mov
cmc
mov
mov
mov
xchg
pop
out
fstp
push
in
mov
jae
scas
aam
clc
adc
je
lahf
aad
ret
data16
ins
mov
sub
inc
mov
mov
movs
add
xor
add
sub
jnp
nop
repnz
sti
jb
lods
fucomi
sub
sbb
leave
in
(bad)
add
scas
mov
push
adc
jbe
cmp
push
test
push
mov
cwde
adc
into
push
dec
cs
rcl
ret
jecxz
mov
and
jmp
fcomp
test
and
iret
sub
arpl
mov
aas
retf
or
jg
xchg
mov
jnp
dec
sub
call
daa
xchg
dec
imul
retf
retf
jmp
xor
shl
sahf
jg
leave
adc
push
fwait
mov
xchg
mov
or
push
test
(bad)
fbstp
add
add
push
cdq
fwait
xor
ret
xchg
aad
adc
pop
loop
out
mov
mov
shl
cmp
cmp
rcr
in
sub
js
jg
xor
(bad)
fcomp
call
xor
dec
jle
imul
xchg
icebp
mov
push
xchg
adc
pop
jl
inc
jmp
(bad)
out
sub
mov
nop
push
push
fwait
pop
add
ss
dec
dec
xchg
ret
jl
xchg
test
in
adc
stc
scas
xor
push
(bad)
sbb
adc
xchg
sbb
test
adc
nop
adc
in
enter
dec
enter
push
xor
repnz
jecxz
dec
xchg
xchg
dec
loop
(bad)
and
call
je
xor
rep
dec
test
clc
out
icebp
add
mov
outs
push
cdq
scas
jbe
pop
retf
pop
idiv
cld
xor
mov
loop
dec
xor
lods
clc
pop
scas
jbe
dec
outs
cmps
cmps
adc
dec
and
adc
scas
jecxz
inc
into
xor
xor
js
cmp
mov
push
xor
hlt
addr16
(bad)
push
arpl
adc
shl
cmp
pop
jge
sbb
jg
fdiv
or
jg
jo
push
push
cwde
push
mov
fs
out
dec
sbb
mov
jmp
fs
arpl
cmp
gs
xor
aaa
push
adc
lods
adc
aad
push
jbe
test
jp
sar
pop
in
sbb
lods
push
adc
loop
mov
clc
dec
mov
stos
cmp
jl
test
push
mov
mov
mov
xor
cmp
mov
sbb
add
xchg
dec
stos
or
xor
add
and
icebp
push
test
pusha
ror
mov
xchg
into
dec
frstor
pop
ins
or
cmp
retf
mov
mov
adc
xchg
dec
data16
test
outs
mov
loopne
add
(bad)
pusha
sbb
lods
js
in
outs
ds
push
add
jnp
int
lods
dec
(bad)
lahf
sub
jmp
sbb
inc
cmp
out
or
pop
sbb
jno
fucomip
scas
imul
jmp
or
mov
gs
mov
cwde
movs
test
jns
mov
stos
imul
mov
outs
shr
and
rol
xor
adc
xchg
pop
xchg
outs
fcom
jg
lea
dec
push
stos
mov
loopne
sar
retf
fdiv
inc
dec
cmp
mov
lahf
inc
into
aaa
es
cli
(bad)
in
dec
push
lods
jl
fsub
pop
mov
out
icebp
dec
adc
xor
adc
push
add
pop
push
sbb
pusha
inc
mov
xchg
xchg
call
inc
iret
xchg
ja
repnz
xor
push
out
xor
xchg
movs
xchg
(bad)
icebp
mov
and
fadd
ror
rol
inc
out
cmovg
dec
mov
xchg
jge
push
lea
clc
int3
sti
jns
and
add
dec
or
nop
push
mov
xor
xor
popa
dec
cmp
call
outs
test
push
je
dec
ret
mov
inc
xor
cmp
dec
push
fistp
enter
mov
retf
adc
aaa
mov
dec
and
out
xchg
fidivr
imul
fisttp
outs
dec
outs
shr
test
xor
mov
data16
dec
mov
aad
adc
sub
repnz
xor
mov
sbb
scas
iret
ins
pop
scas
adc
inc
mov
icebp
pop
test
mov
not
inc
xor
xor
into
jp
scas
mov
add
sahf
and
aam
stos
fstp
mov
das
adc
mov
in
outs
out
stc
cmp
inc
push
pop
cmp
hlt
xchg
sbb
inc
je
stos
in
jge
xor
nop
xchg
jecxz
lock
fcomip
sbb
jne
arpl
xchg
xor
fcmove
not
iret
mov
add
outs
xor
outs
xor
cmps
ja
xor
dec
test
lods
inc
les
shl
aam
js
pop
pushf
dec
xor
outs
jns
jnp
outs
and
and
mov
popa
out
hlt
ficom
adc
fidiv
outs
(bad)
lods
cmp
adc
jbe
jge
and
inc
rol
cmps
mov
sub
or
inc
push
icebp
cmps
mov
fadd
sub
adc
and
jmp
leave
test
shr
test
xor
lods
push
test
xchg
(bad)
and
xor
xchg
loope
pop
loopne
xchg
mov
or
and
push
or
jbe
icebp
mov
leave
adc
mov
shl
fs
xchg
in
mov
push
aaa
inc
push
sbb
inc
rol
bound
in
and
in
dec
push
aas
call
je
jg
mov
je
adc
jmp
mov
aam
or
mov
add
pop
mov
fcom
ins
push
adc
aas
or
and
xchg
pusha
jl
push
(bad)
sub
push
ret
inc
std
cmp
xchg
mov
fist
mov
(bad)
mov
jbe
xor
outs
arpl
jmp
jp
mov
dec
or
cmp
loop
enter
jle
sbb
aad
(bad)
in
and
dec
jge
mov
cmp
xor
mov
adc
jmp
inc
push
(bad)
mov
and
mov
mov
outs
cs
sbb
push
fst
push
loope
scas
sub
push
push
adc
cld
rcl
mov
sbb
scas
xor
aam
icebp
push
jecxz
push
ret
out
(bad)
(bad)
cmc
or
imul
xchg
aaa
cmps
sbb
mov
ja
pop
jp
mov
in
ret
pushf
outs
jmp
mov
pop
jno
(bad)
ins
mov
sub
ja
fisttp
cmp
loopne
inc
inc
jne
sub
nop
xlat
outs
out
mov
lar
dec
fldcw
aam
push
loop
cli
xor
mov
sti
push
(bad)
sub
pop
mov
int3
(bad)
jnp
gs
shr
adc
fisttp
dec
std
pop
adc
retf
lods
popa
out
jo
mov
les
popf
mov
pop
xchg
mov
test
inc
sub
pop
lahf
xor
iret
jmp
retf
es
rcl
icebp
sar
push
jmp
mov
mov
add
popf
or
inc
(bad)
lea
xchg
mov
(bad)
ins
leave
lahf
sub
inc
sbb
pop
cmps
inc
jno
fdivr
mov
mov
(bad)
sub
sub
shl
jecxz
jnp
and
daa
sub
mov
mov
xchg
lea
mov
shl
aam
adc
cmp
xchg
pop
sub
(bad)
test
or
push
call
xor
mov
fistp
push
cmp
call
nop
xor
mov
imul
mov
jle
fidivr
lahf
pop
cmp
pop
and
xchg
push
(bad)
xor
imul
push
sbb
nop
call
pop
call
fdiv
ins
inc
xchg
mov
xor
jno
stos
inc
mov
into
add
mov
inc
jl
pop
sbb
push
test
mov
fisubr
jbe
jbe
sub
in
cmp
dec
aas
xchg
sbb
popa
fisttp
or
ret
inc
mov
mov
adc
and
lahf
dec
in
fistp
xor
test
mov
pop
retf
or
dec
outs
cmc
ds
jecxz
jns
js
xchg
push
mov
retf
call
push
push
mov
loope
inc
adc
dec
mov
(bad)
icebp
mov
xor
ins
mov
pop
leave
imul
xchg
out
pusha
mov
pop
mov
mov
mov
or
aad
pop
sub
stos
es
loop
cwde
fs
cmp
inc
cwde
shl
pop
mov
xchg
dec
dec
mov
cdq
adc
bound
outs
sar
add
loope
xlat
jecxz
mov
in
sub
arpl
cmc
inc
mov
mov
dec
loop
pop
mov
into
ficom
out
sbb
add
pop
sub
mov
jg
ret
loope
jo
scas
push
jecxz
add
aad
adc
dec
lods
xchg
mov
mov
xchg
jae
js
pop
repnz
sar
test
push
dec
xor
pop
push
sbb
adc
pop
inc
stos
mov
jle
scas
pop
and
add
and
psubsb
loopne
xor
cdq
fwait
add
xchg
dec
sub
push
rcl
aam
lods
inc
loopne
lds
shl
sub
leave
mov
dec
loop
out
pusha
nop
push
adc
mov
loop
adc
cmp
jg
popf
in
js
add
test
addr16
mov
cli
jne
movs
movs
ds
(bad)
outs
mov
sbb
ret
retf
imul
inc
push
xchg
paddd
in
mov
or
sub
add
(bad)
add
arpl
jo
(bad)
and
jne
les
dec
outs
inc
xor
or
call
sub
or
mov
cmps
call
sti
pop
and
dec
fnstcw
lea
push
imul
data16
ins
lock
jle
sub
ja
shr
in
je
cs
aam
mov
mov
jne
out
pop
xor
add
mul
loopne
xor
dec
mov
cmps
test
inc
in
cmp
repz
je
inc
in
in
cdq
in
stc
jge
mov
ror
jnp
inc
mov
and
inc
mov
push
(bad)
das
(bad)
cwde
loopne
jo
call
push
dec
jle
lds
(bad)
sub
push
icebp
mov
std
or
lds
sbb
inc
dec
(bad)
test
mov
xor
xchg
or
jne
dec
lock
jae
icebp
inc
mov
rol
push
loop
ror
or
sbb
add
mov
(bad)
mov
imul
adc
mov
add
xchg
xchg
ins
mov
sbb
rol
nop
shl
cmp
sub
(bad)
pop
mov
sub
pop
test
push
iret
fsubr
add
jp
enter
frstor
pop
jge
mov
retf
in
jle
mov
inc
inc
inc
outs
sbb
jae
test
aaa
call
fild
xchg
mov
in
or
repnz
cmp
iret
dec
fst
dec
jp
adc
fimul
mov
xor
(bad)
mov
iret
int3
(bad)
leave
dec
dec
sub
retf
loop
leave
data16
fadd
loope
iret
jno
pop
fwait
or
or
push
fsub
mov
xor
mov
cld
add
dec
out
int
shl
mov
mov
adc
ror
dec
add
out
mov
jmp
xor
jo
dec
jns
cwde
scas
cmc
test
div
ret
and
jno
push
popa
out
movs
daa
xchg
movs
add
stos
cmp
outs
sub
jmp
pop
xor
mov
mov
in
test
inc
cwde
int3
mov
cli
jp
lahf
fnstenv
mov
idiv
xor
fimul
mov
adc
push
mov
cmp
inc
test
pop
cmps
inc
dec
mov
push
push
das
lea
scas
movs
cdq
mov
add
mov
popf
inc
les
xchg
and
or
sbb
stc
fisttp
adc
fwait
sbb
sti
dec
retf
pusha
mov
add
pop
ret
push
(bad)
add
mov
inc
inc
push
lods
push
shl
in
push
sbb
stos
je
cwde
cmp
lds
repnz
pop
sbb
movs
add
sar
pushf
stos
sbb
inc
nop
sub
shr
sbb
adc
push
test
pop
xchg
ret
int
sbb
inc
lods
stc
xlat
mov
rol
dec
imul
sub
pop
enter
sbb
(bad)
call
mov
pop
mov
dec
jg
mov
and
jb
les
call
lahf
fcom
loope
mov
sub
jbe
add
test
in
shl
mov
adc
xor
std
add
push
mov
fs
pop
sub
add
sbb
xor
dec
inc
imul
imul
into
retf
enter
mov
jnp
fstp
sbb
pop
hlt
iret
mov
fimul
mov
int
pop
pmaddwd
dec
out
mov
dec
adc
imul
fucomi
sub
out
inc
cmp
push
pop
out
iret
cdq
test
or
ret
push
dec
pusha
gs
pop
into
cmp
mov
and
mov
lea
in
inc
test
retf
xor
ret
js
push
dec
test
cmp
out
adc
stos
retf
push
and
push
mov
test
mov
sahf
pop
mov
out
repnz
cmp
(bad)
ins
mov
shl
dec
in
sbb
mov
jle
mov
retf
inc
sti
icebp
pop
and
mov
stos
dec
mov
fimul
push
aas
cmp
hlt
mov
stos
xchg
hlt
mov
push
dec
xchg
stos
mov
sub
mov
fyl2x
mov
out
test
loop
add
and
iret
pop
rcl
pop
enter
imul
mov
arpl
mov
(bad)
lock
(bad)
push
aam
pop
outs
mov
inc
sbb
push
jo
jp
xchg
sbb
xor
xlat
mov
xchg
retf
sbb
pop
mov
idiv
dec
xor
push
stc
pop
inc
jnp
aad
pop
movs
lahf
add
repz
pop
iret
inc
push
lods
imul
(bad)
rol
sahf
fnstenv
adc
sahf
adc
movs
fstp
mov
repnz
jmp
adc
ins
dec
push
add
xchg
push
imul
clc
arpl
dec
test
cwde
sti
add
or
int
repnz
add
xchg
mov
(bad)
ficom
imul
cmp
jle
test
cmps
test
mov
xchg
popa
xchg
(bad)
xor
pop
or
jno
add
mov
mov
daa
push
push
xchg
nop
bound
jge
sbb
mov
mov
daa
jmp
lds
cmps
stos
pop
push
dec
aam
mov
and
cmp
lods
ficomp
sti
and
mov
cli
push
les
inc
mov
cmc
mov
dec
out
or
loope
xor
mov
(bad)
outs
loope
adc
gs
fcomip
stos
lock
cmp
and
pushf
xor
add
inc
out
pop
imul
ret
push
js
cmps
pop
pop
push
sbb
sti
dec
fsubrp
jl
adc
mov
push
sbb
mov
mov
icebp
call
push
into
inc
dec
pop
lods
mov
aam
inc
cmp
out
das
mov
add
jno
cld
and
icebp
jl
add
push
neg
into
cmc
lea
dec
rcl
push
inc
pmulhuw
jae
and
or
(bad)
push
jle
mov
or
dec
nop
loop
repnz
xchg
loope
fmul
into
mov
sub
adc
and
jns
pop
enter
imul
imul
cmps
mov
xor
in
sub
jb
inc
in
int3
sub
dec
in
aas
jl
pop
push
les
pop
es
pop
(bad)
leave
xor
bnd
or
jne
xchg
es
shl
inc
mov
xchg
daa
rcl
dec
push
lods
push
out
mov
stos
xor
mov
call
les
xchg
arpl
mov
dec
mov
not
iret
ins
push
aas
ror
xchg
ret
ds
cld
cmp
bswap
hlt
jecxz
mov
cmp
rol
mov
and
xor
cld
imul
push
adc
gs
jb
mov
push
xchg
(bad)
xchg
push
out
pop
jnp
add
pop
or
pop
test
and
xchg
adc
xchg
repnz
or
pusha
pushf
jb
test
adc
arpl
mov
shl
ror
enter
and
xchg
jns
mov
cmp
pushf
pop
repz
push
mov
cmp
jmp
in
inc
dec
or
test
(bad)
jmp
inc
sub
mov
sub
mov
push
scas
push
cmps
jmp
mov
mov
mov
dec
ror
fs
xchg
out
leave
retf
movs
scas
(bad)
mov
sub
xchg
lock
xor
xchg
push
pop
shl
xchg
xchg
lock
push
mov
xchg
cli
jae
stc
in
push
gs
dec
mov
inc
inc
pusha
cld
pop
adc
push
ins
dec
lds
ds
lods
in
inc
mov
mov
mov
mov
jae
push
call
cmp
cmp
inc
aad
or
mov
jmp
mov
sbb
fwait
xchg
psadbw
xchg
jmp
jne
cwde
push
in
popf
and
cmp
fstp
fnstsw
mov
push
xor
push
dec
xchg
dec
sub
jmp
sbb
das
loopne
and
shl
jecxz
icebp
data16
add
xor
popa
es
sbb
jns
aas
sbb
imul
rol
int
mov
lods
pop
jno
adc
sub
outs
inc
xor
inc
(bad)
outs
pop
cmp
or
pop
xchg
adc
loopne
dec
mov
sub
pop
jne
out
xor
data16
loope
mov
call
retf
aaa
ja
or
lock
je
clc
inc
in
nop
adc
rol
out
(bad)
mov
(bad)
push
mov
push
pop
test
cmps
cmps
sbb
add
in
hlt
pop
dec
sbb
cmp
and
mov
es
fisttp
add
dec
daa
popf
mov
xchg
(bad)
aam
sbb
out
cmps
call
repnz
int
add
cmovno
cld
out
and
test
addr16
loope
ror
pusha
xor
loop
xchg
ret
rcl
ret
pop
cmps
pushf
pop
mov
add
int
int3
cmp
cmps
(bad)
ret
mov
mov
movzx
call
xchg
jnp
je
xchg
retf
cmp
test
nop
shr
mov
inc
rcr
sub
movs
xchg
pop
inc
out
jae
addr16
sub
scas
pop
mov
cmc
push
pop
aad
mov
scas
sub
mov
idiv
test
dec
icebp
sbb
aad
scas
lds
xchg
repnz
(bad)
mov
(bad)
(bad)
arpl
pop
or
add
cmc
pop
cmps
mov
inc
inc
cld
test
mov
cmp
ja
frstor
mov
cmc
das
mov
jns
stc
int
pusha
mov
sub
jae
fild
lea
adc
(bad)
push
jbe
xor
repnz
xchg
xchg
sub
dec
pop
push
mov
mul
out
leave
push
jl
xchg
add
jne
fiadd
inc
sub
int3
aas
sub
push
or
stos
cmps
lock
out
scas
and
lahf
(bad)
mov
pusha
in
and
or
pop
retf
fld
mul
xchg
sbb
inc
cmp
cld
adc
mov
in
push
add
xchg
inc
and
cmp
fist
xlat
arpl
adc
sahf
push
mov
mov
repz
test
hlt
xchg
mov
js
mov
lods
jo
sbb
sub
cmpps
stos
fwait
pop
stos
sub
and
push
dec
ror
lods
and
je
pop
pop
or
push
add
not
sar
mov
pop
lock
movs
adc
stos
sub
push
or
ja
ss
and
ror
ror
xor
sub
push
inc
pushf
mov
jo
iret
les
push
iretw
call
add
ins
jns
fisttp
add
xchg
ror
sbb
cmc
repnz
ins
mov
faddp
cld
cs
dec
ds
pop
xlat
call
mov
frstor
stos
mov
loop
hlt
aam
pop
inc
xchg
cmovs
pushf
fcomp
inc
leave
inc
cmc
dec
inc
fld
in
xor
dec
or
mov
rcl
sar
lods
mov
and
xchg
xchg
xchg
push
xor
ins
in
sahf
gs
add
int3
leave
mov
rol
sub
jb
jle
(bad)
mov
test
(bad)
hlt
pop
nop
icebp
test
lds
ss
jmp
ins
push
outs
loope
mov
or
in
mov
xor
mov
cdq
cs
xor
pop
in
sbb
sbb
imul
cmp
sbb
adc
and
lods
add
loop
das
sahf
jae
or
cmps
pop
sub
(bad)
fadd
sub
jns
jg
mov
add
aad
mov
in
xor
dec
popaw
fisubr
push
movs
jnp
xor
pop
sti
lahf
imul
pop
pop
adc
or
data16
in
repnz
sbb
mov
jp
repz
mov
mov
pop
mov
or
not
mov
ins
es
call
aam
dec
sbb
lahf
push
out
test
cs
and
adc
movs
and
fs
and
test
in
fdiv
test
mov
in
test
jmp
inc
fiadd
jmp
(bad)
shl
adc
adc
loop
or
and
sub
push
stc
imul
cmp
mov
adc
dec
rcl
add
shl
jnp
adc
xlat
ins
adc
test
hlt
adc
fbstp
pop
mov
popa
push
inc
repz
cmps
ret
and
retf
into
adc
outs
inc
or
movs
mov
in
pop
sbb
add
ins
push
imul
and
or
mov
mov
push
fnsave
cld
push
push
sub
loope
sub
(bad)
cmp
shr
retf
fstp
dec
aaa
mov
pop
add
icebp
mov
aam
push
stc
sbb
repnz
adc
and
or
jg
dec
add
jnp
shl
dec
in
sub
outs
sbb
and
repnz
cwde
cld
imul
pop
cmovno
pop
mov
pop
fsubr
std
pop
push
push
popa
mov
sub
xchg
push
cmc
outs
popa
rcl
pop
xor
lahf
out
gs
leave
test
inc
call
fadd
or
or
retf
push
sub
ds
hlt
aaa
pop
aam
std
es
cmps
call
push
adc
(bad)
retf
lods
lock
add
lock
jae
jge
and
gs
int3
in
push
mov
stos
test
aas
adc
not
int
adc
mov
imul
mov
sbb
lahf
out
mov
retf
sbb
xor
jmp
xchg
(bad)
mov
pop
retf
aam
xchg
dec
cdq
xlat
push
imul
aam
or
push
mov
test
xchg
and
jecxz
xchg
sti
icebp
jbe
mov
je
test
ret
push
bswap
add
int3
mov
pop
icebp
stc
adc
cli
les
mov
mov
pop
pop
pop
push
imul
test
cli
push
add
dec
mov
adc
xchg
mov
or
and
pop
mov
cmc
jp
(bad)
cmp
mov
mov
xchg
mov
add
and
sub
inc
rcl
xor
push
fwait
sub
push
jbe
jp
or
pop
aas
inc
xchg
ficomp
ins
lods
(bad)
push
std
lea
mov
es
xchg
std
neg
xchg
cld
mov
pop
inc
inc
sbb
mov
icebp
and
mov
mov
push
out
imul
xchg
add
fisubr
mov
paddq
loope
aaa
xor
push
mov
dec
add
sub
ret
add
imul
imul
dec
pop
add
rcr
jnp
jmp
cli
rcl
cs
(bad)
lods
mov
nop
or
test
cmp
fwait
mov
outs
dec
add
xor
push
sar
or
lea
aaa
stc
js
cmp
aam
jnp
cs
add
arpl
out
jnp
and
js
push
sahf
push
add
fidiv
jg
inc
es
adc
fwait
push
repnz
jge
jp
rcl
push
adc
iret
pop
lods
hlt
pop
test
dec
and
sbb
xchg
dec
xchg
mov
sahf
and
sar
sahf
lock
xcrypt-ofb
cmps
in
into
sub
jl
paddusw
ficom
jle
and
icebp
jbe
jmp
in
icebp
ins
ret
cmp
push
mov
psrlq
iret
xchg
mov
int
lahf
push
repnz
pop
dec
dec
jb
std
dec
inc
int
pop
push
imul
cld
push
fisub
sub
mov
jge
jno
push
xchg
sbb
ds
jo
mov
push
ds
push
out
adc
test
sub
mov
int3
xor
and
xor
mov
sbb
add
mov
dec
call
imul
ror
and
daa
push
push
in
mov
sub
sub
ja
cmp
pop
retf
xor
mov
push
add
sub
ds
adc
and
xor
daa
cmp
push
pop
and
fwait
idiv
and
jmp
repz
dec
add
xchg
in
clc
sub
test
pop
push
sbb
push
mov
sar
or
inc
push
cmp
mov
das
and
xor
xchg
mov
cmp
scas
hlt
mov
cmp
mov
out
cmp
imul
xchg
xor
lock
mov
aas
push
sbb
inc
adc
push
popa
jno
sub
test
cmps
scas
fnstsw
add
std
and
test
pop
das
test
in
and
(bad)
jmp
loop
mov
inc
jne
pop
jg
aaa
push
jmp
ret
cwde
cli
adc
mov
arpl
popf
cs
and
imul
cld
jge
sbb
stos
iret
scas
dec
sbb
adc
shr
sbb
out
lock
lock
mov
xchg
or
xchg
dec
cmp
jmp
dec
ins
pop
sbb
cmp
xchg
hlt
jno
and
pop
fist
cmp
outs
scas
mov
inc
sub
fld
jle
daa
lods
jge
mov
ins
add
mov
jle
movs
shl
push
push
fld
xchg
aas
int3
sub
xchg
mov
adc
call
mov
fsub
pop
(bad)
repz
push
retf
and
enter
xchg
jo
fiadd
scas
clc
repnz
add
sub
mov
aas
pusha
outs
cwde
sub
or
inc
sbb
lahf
mov
jmp
xor
fs
jbe
sub
imul
jno
mov
clc
ret
mov
mov
daa
dec
clc
push
dec
test
fwait
ins
mov
mov
and
out
and
pop
in
fwait
enter
je
mov
xor
xchg
xchg
dec
movs
xlat
cmp
cli
ret
(bad)
fcomp
rcl
jmp
jle
retf
ret
ror
push
pop
inc
cmp
dec
sbb
jb
rcl
es
pop
push
xchg
in
mov
enter
jmp
scas
jae
push
nop
jg
pop
add
sub
ret
pop
pop
xchg
and
jmp
add
nop
pop
daa
cmps
push
mov
mov
stos
adc
mov
fwait
adc
jns
(bad)
push
por
jno
push
fucomi
sub
inc
dec
cld
or
add
push
mov
cmp
in
xor
lea
jmp
sub
das
inc
enter
xchg
pop
loopne
or
or
mov
dec
test
pop
std
add
inc
push
cmp
add
scas
cmps
cli
cmp
in
xchg
ror
and
test
(bad)
mov
mov
aad
inc
xchg
es
add
xchg
xor
xor
pop
jnp
je
imul
adc
call
inc
cmp
mov
ins
movs
xor
inc
ret
mov
sub
cmp
and
loopne
dec
sub
ins
lahf
(bad)
test
dec
mov
pushf
jge
mov
cmp
jae
imul
xchg
mov
imul
in
int3
mov
repnz
jmp
mov
inc
add
jns
test
and
fldenv
mov
pop
jb
inc
out
imul
mov
fnstsw
loop
mov
cmp
test
xor
push
jbe
adc
add
xor
lods
stc
mov
hlt
lods
pop
xor
(bad)
icebp
rcl
xor
rol
(bad)
mov
cmps
cdq
mov
xlat
or
and
leave
add
out
and
and
cmp
daa
(bad)
clc
fsub
cmps
outs
(bad)
out
jmp
sbb
test
inc
fwait
aam
mov
mov
aaa
rcr
pop
ret
sbb
sti
cmps
xchg
jae
cmp
imul
cmp
rcr
fidiv
movs
dec
mov
popa
xchg
jge
inc
dec
mov
loopne
movs
iret
pop
push
mov
xchg
sbb
mov
add
push
inc
xor
cs
adc
in
pop
in
sub
sub
add
lahf
shl
xchg
pop
arpl
sub
ret
ror
mov
or
inc
lahf
mov
jmp
(bad)
js
mov
inc
xchg
cli
loope
jne
jnp
(bad)
call
(bad)
sti
and
dec
test
outs
push
imul
jl
jbe
or
retf
into
jp
adc
push
or
add
push
out
dec
pop
adc
into
ss
test
inc
jg
xrelease
dec
mov
hlt
shl
cmp
(bad)
lock
iret
shl
pop
int3
sahf
adc
jbe
lods
jg
stos
cmp
and
ret
repnz
call
push
shl
loope
cmp
jbe
xchg
add
push
xchg
ror
into
cmp
cmp
ret
xor
stc
push
(bad)
inc
loop
push
dec
or
xor
out
jecxz
outs
(bad)
imul
adc
imul
pusha
mov
push
cli
or
cmp
gs
sub
xor
adc
adc
push
jle
mov
jmp
test
cmp
rcr
ja
pop
out
ds
mov
ja
sti
clc
jno
jmp
js
ins
and
fdivr
mov
sbb
retf
jnp
adc
or
sub
retf
(bad)
in
int3
or
push
rcl
ins
les
sbb
sub
test
das
stc
rcl
(bad)
pop
dec
and
jp
sbb
and
xor
rcr
xchg
aam
out
arpl
sub
loop
sbb
mov
and
sub
add
sbb
ret
out
or
pop
bound
inc
or
xchg
sub
daa
aas
add
push
and
cmp
out
jae
outs
cdq
sahf
sbb
cmp
cmp
add
mov
(bad)
inc
mov
mov
jno
push
ficomp
push
jbe
xor
ret
outs
movs
in
pop
xchg
hlt
sub
xor
sbb
mov
fwait
and
inc
movs
fdivr
add
(bad)
mov
mov
out
shl
call
(bad)
push
push
popa
sub
out
js
(bad)
xlat
sbb
push
push
jge
scas
int
outs
cmps
xchg
jo
loop
pop
retf
dec
js
adc
icebp
movs
das
or
xor
push
mov
mov
fldcw
hlt
sbb
jns
sub
cmp
pop
mov
dec
aam
pop
test
das
in
nop
gs
nop
pop
push
dec
xor
xchg
xor
cmp
icebp
cmp
lahf
sbb
mov
ds
inc
mov
aas
push
dec
sub
or
sbb
cmp
or
scas
sahf
mov
movs
fsub
add
dec
inc
mov
cwde
sbb
mov
and
adc
loopne
movs
xor
pop
aad
call
lods
pop
cmp
push
adc
iret
call
push
das
mov
jp
pushf
jns
cmps
shl
xlat
enter
outs
stos
in
xor
mov
cwde
(bad)
sub
inc
adc
dec
in
clc
ds
int3
call
cmps
aam
ficom
jne
pop
retf
lea
daa
movs
xor
pop
aas
xchg
adc
adc
push
mov
pop
imul
out
(bad)
test
fnsave
repz
retf
push
xchg
std
mov
push
xchg
fisub
out
in
ja
jecxz
out
sbb
push
pop
test
xlat
lea
je
ss
cmp
xor
and
mov
push
sahf
(bad)
ja
in
mov
push
xor
dec
ins
jae
jl
mov
mov
shr
mov
mov
or
aad
mov
movs
retf
dec
lahf
jae
inc
pop
jg
add
mov
jg
(bad)
and
jmp
pushf
jnp
or
nop
cmp
(bad)
jbe
cdq
adc
push
js
mov
lods
cmp
xchg
or
retf
dec
add
cmp
lods
call
(bad)
sub
in
bound
shl
mov
push
loop
imul
adc
pop
sbb
loope
popf
movs
cli
out
mov
into
cmp
mov
sti
xlat
jmp
adc
stos
or
addr16
jg
dec
mov
sbb
movs
jnp
mov
retf
mov
rcl
xchg
into
and
pop
push
inc
jge
mov
mov
pop
imul
in
jecxz
and
pop
mov
dec
popa
or
pop
xlat
push
repz
clc
cmp
sub
pop
loop
loopne
pop
lahf
pop
out
inc
pop
xchg
sub
lds
xor
out
inc
mov
and
jl
xchg
gs
test
xchg
jb
cld
js
pop
add
adc
imul
mov
in
adc
push
push
dec
add
outs
arpl
lods
push
inc
push
pop
sbb
dec
stos
push
(bad)
ins
sahf
fsubr
jl
mov
mov
test
mov
retf
jecxz
test
jnp
lods
bound
or
cmp
stos
pop
int
mov
jbe
pop
fs
movs
add
sbb
loope
push
sbb
add
arpl
int
jne
fdivr
into
jecxz
pop
pop
mov
adc
pop
xchg
frstor
out
push
fcom
jbe
and
jbe
and
push
bound
inc
and
in
adc
mov
enter
lock
mov
iret
outs
jl
gs
mov
add
call
rol
pop
adc
or
aam
mov
push
inc
ds
push
test
inc
movs
je
(bad)
adc
mov
sub
ds
sbb
in
cmp
imul
push
xchg
xchg
ss
inc
cwde
aaa
fist
js
movs
movs
xchg
mov
sub
popa
dec
mov
ret
adc
fld
sahf
or
mov
jge
sbb
call
stc
ja
xchg
ffree
and
aaa
das
mov
test
mov
test
mov
std
loope
xchg
test
add
(bad)
pop
and
or
xchg
shr
sbb
call
xor
movs
sbb
test
sbb
sub
fldcw
mov
fimul
sbb
leave
jge
loopne
dec
inc
xor
bound
jmp
dec
pop
inc
inc
sbb
dec
xlat
inc
push
pop
xchg
cmp
mov
or
cld
push
jecxz
jbe
dec
or
mov
rcr
mov
dec
(bad)
jns
stos
lods
lds
pop
add
or
mov
adc
adc
bnd
ficomp
rol
aas
lea
test
and
push
lock
loop
fidivr
pop
mov
outs
push
jno
cmp
mov
xchg
and
jp
sub
mov
jmp
mov
movs
(bad)
pusha
add
mov
in
mov
movs
add
xchg
xchg
cdq
jnp
ds
mov
addr16
loope
movs
push
pop
push
mov
jg
jnp
test
mov
and
cmp
inc
call
push
(bad)
fcomp
scas
xchg
xor
xchg
cmp
ds
mov
push
call
xchg
xor
int
push
aam
inc
push
popf
pop
mov
jmp
push
pop
iret
sbb
add
xor
jle
xlat
ins
mov
mov
and
nop
sub
cmp
add
mov
lock
jecxz
fdivr
mov
enter
scas
arpl
sbb
cmp
mov
jno
mov
(bad)
shl
jb
pop
ss
inc
dec
mov
pop
out
out
shl
inc
xchg
pop
test
xor
mov
pop
das
(bad)
movs
ds
adc
push
adc
cwde
xlat
rol
jg
mov
adc
add
push
sbb
mov
sbb
ss
jl
int
sub
(bad)
imul
(bad)
test
push
or
jmp
jnp
xchg
jnp
stc
cmp
jno
jo
sbb
nop
arpl
and
add
lock
retf
jbe
adc
dec
push
ret
movs
out
sbb
mov
cmp
test
mov
or
xchg
sbb
adc
and
jae
lods
sbb
mov
outs
rcl
lods
add
lds
push
or
xchg
aam
rcr
push
out
push
jno
test
cmps
xchg
dec
pop
or
adc
pop
add
mov
push
(bad)
jge
push
test
xchg
push
outs
lock
adc
test
loope
dec
test
or
(bad)
ret
jecxz
aaa
mov
mov
inc
into
scas
xlat
shr
and
pop
dec
cmp
jle
sahf
push
add
ja
cmp
retf
cmp
mov
and
push
ret
test
loopne
(bad)
mov
loope
aad
cmp
jae
dec
push
sbb
inc
bound
push
jnp
jo
jb
mov
(bad)
jo
(bad)
cmc
(bad)
sub
retf
loop
ins
dec
je
inc
mov
inc
retf
sub
and
jge
sahf
dec
adc
ficomp
dec
xchg
xchg
in
push
out
cmps
pop
je
sub
pop
add
add
(bad)
jmp
cmps
movs
push
pop
and
pop
fs
mov
ins
outs
xor
sub
repz
nop
inc
cmc
retf
into
idiv
jo
into
fwait
pop
push
cmp
dec
cmp
fs
jb
inc
fwait
sbb
xchg
and
(bad)
in
nop
idiv
div
or
fmul
adc
aaa
mov
dec
jg
sub
adc
(bad)
cmp
sub
sbb
jmp
xacquire
pop
push
clc
xor
jp
mov
mov
sub
xchg
rcr
sti
cs
jo
xchg
fldenv
mov
and
sti
icebp
out
ret
fs
dec
ret
in
or
xor
mov
mov
test
inc
dec
xchg
cmps
movs
push
xchg
sar
mov
popa
imul
cmps
movs
dec
adc
push
pop
adc
sti
(bad)
retf
cmp
cmp
jbe
jg
xchg
packsswb
movs
shl
js
fbstp
mov
push
std
ret
cld
popa
sub
loopne
push
xchg
and
fwait
sbb
(bad)
mov
sbb
mov
inc
test
shl
push
and
jecxz
jmp
(bad)
mov
fistp
mov
arpl
outs
int
sbb
scas
pusha
adc
les
sub
jmp
mov
jge
push
xchg
adc
(bad)
out
push
rcr
jg
adc
fs
cld
bound
adc
popf
out
outs
cmp
(bad)
(bad)
nop
daa
call
hlt
xlat
jne
ja
jae
cwde
jp
enter
cmc
mov
push
mov
cmp
(bad)
mov
shl
std
fldcw
or
aas
xchg
mov
out
xor
and
mov
ins
push
pop
mov
in
jp
mov
xor
sbb
mov
or
int3
and
retf
push
xor
ds
xchg
add
xor
dec
cmp
push
outs
mov
mov
movs
pushaw
pop
scas
xlat
mov
xor
pop
jecxz
xchg
ja
jne
push
pusha
fistp
ins
cli
cwde
inc
lea
test
and
mov
cmc
sub
adc
movs
lds
and
mov
out
(bad)
mov
cmp
jecxz
pop
jno
jg
xchg
ss
xchg
in
fwait
cld
call
(bad)
and
fwait
push
pop
jg
dec
cdq
fcomp
xchg
push
dec
mov
sbb
xchg
lock
icebp
mov
daa
rol
pop
mov
inc
add
xlat
add
pop
aas
cmp
xchg
mov
cmp
sbb
cmp
mov
mov
jnp
or
out
and
xlat
movs
rol
push
mov
mov
fldcw
(bad)
int
mov
inc
mov
push
mov
jg
loopne
sbb
cmp
dec
pop
xchg
adc
arpl
retf
mov
mov
dec
popa
test
rcr
mov
sbb
xchg
dec
mov
sbb
sub
out
ins
test
adc
xchg
pushf
mov
adc
mov
ins
push
dec
shr
pop
xlat
pop
jns
jle
inc
sahf
call
(bad)
stos
sbb
dec
push
pushf
sub
mov
mov
adc
inc
retf
push
mov
adc
push
stos
jae
mov
xchg
push
or
cmp
jge
jnp
mov
repnz
es
pop
sbb
int
bound
(bad)
or
(bad)
out
xor
fnsave
dec
mov
and
test
inc
lea
add
aas
push
push
mov
mov
inc
data16
addr16
pop
out
add
(bad)
lahf
das
cmps
jp
and
pop
or
jmp
ins
cmp
lds
das
retf
lea
int
add
or
and
mov
sub
out
movs
cmp
cmc
and
(bad)
push
scas
cld
(bad)
mov
js
imul
jno
sub
xor
add
push
pop
repz
arpl
adc
idiv
or
pop
dec
add
jns
lods
in
xor
jb
push
outs
push
loop
jne
psubsw
fsubr
adc
imul
les
or
int3
mov
mov
add
icebp
sbb
mov
mov
out
imul
sti
std
dec
test
pop
je
mov
mov
inc
ret
test
jmp
pop
in
pop
pusha
sub
push
xor
jge
(bad)
out
pop
mov
pop
xchg
shl
xor
inc
and
dec
cwde
ror
outs
and
cld
(bad)
mov
adc
mov
and
ins
mov
xchg
pushf
mov
popf
dec
push
adc
lods
mov
in
mov
fld
jno
xchg
ret
icebp
enter
in
mov
xchg
adc
or
dec
mov
lds
cli
das
add
jmp
fstp
ret
adc
jmp
push
repz
or
xor
(bad)
cmps
sub
sub
fiadd
daa
stc
lds
dec
xchg
outs
pushf
test
push
jbe
movs
add
dec
cs
sbb
pop
cs
stc
(bad)
cmc
sub
add
hlt
mov
rol
xor
test
pusha
in
mov
dec
and
cdq
push
xchg
stos
inc
dec
lods
ret
sti
push
dec
and
bound
fucom
ffreep
dec
and
pop
push
out
xor
scas
dec
sub
push
adc
enter
push
fcomp
sub
inc
cmps
jns
jle
das
sbb
jns
dec
mov
cmc
jg
ins
ret
add
test
add
dec
cmp
stos
or
xchg
mov
ret
pop
ins
and
std
lds
dec
pop
xor
pop
sti
mov
and
inc
sbb
mov
hlt
push
out
cmp
ins
shl
or
adc
add
sub
test
mov
push
pop
iret
shl
shl
ror
push
pop
cld
je
aaa
out
dec
inc
cmps
aas
pop
outs
dec
cld
call
arpl
out
inc
in
add
xor
stos
jo
sbb
jae
ret
stc
loopne
cld
repz
jmp
push
aas
outs
ss
icebp
in
addr16
dec
pop
cmps
add
popf
pop
test
mov
mov
fcom
xchg
adc
push
ins
xchg
cmps
jmp
cmp
xor
jns
mov
lods
and
aam
and
mov
cmps
sbb
mov
daa
or
sbb
pop
pop
fsub
cmp
fidivr
push
les
mov
xchg
ds
xchg
pop
inc
push
cmp
ret
stos
stos
and
pop
mov
stc
(bad)
inc
and
ins
(bad)
mov
inc
pusha
fisttp
cld
frstor
jp
enter
sub
lds
adc
sub
inc
fidivr
dec
movs
dec
mov
sbb
iret
les
test
jns
adc
out
lea
ins
lods
outs
test
xchg
addr16
sbb
int3
jl
or
leave
cwde
clc
jnp
out
daa
cwde
out
sbb
lds
arpl
fwait
adc
cmp
clc
cld
call
hlt
pop
push
aas
int3
clc
ds
add
gs
pop
(bad)
push
pop
mov
out
in
arpl
dec
ins
mov
in
int3
jns
inc
ins
add
scas
lock
jg
add
and
scas
dec
xor
pusha
pop
pop
call
fisttp
outs
add
call
pop
icebp
mov
sub
pusha
or
jp
cwde
mov
pop
adc
les
cmp
mov
call
fdiv
imul
mov
icebp
mov
jns
mov
enter
addr16
and
test
ds
std
pop
ss
call
enter
mov
jne
pop
scas
sbb
add
test
lock
xor
js
sub
or
call
add
mov
add
and
fist
jle
out
or
jbe
test
fadd
dec
(bad)
push
movs
pop
in
into
jo
fisttp
dec
xchg
out
sbb
sbb
sahf
jl
mov
fcomip
outs
inc
mov
mov
xchg
cmp
rol
bound
ror
popa
fadd
out
xchg
ja
fisttp
inc
pop
mov
adc
daa
ja
mov
mov
ret
and
jno
add
fst
(bad)
lock
pop
cmovs
xlat
jl
std
add
mov
out
ficomp
pop
call
cmp
dec
btr
push
mov
lds
imul
push
dec
push
sub
mov
cmps
imul
xchg
cmp
or
fwait
pop
cmp
adc
add
push
(bad)
xchg
sbb
sbb
xor
cmps
in
fmul
(bad)
in
cmps
je
xlat
dec
fsubrp
jl
sahf
mov
add
sbb
shl
mov
fidiv
imul
fldz
sbb
adc
mov
fs
and
or
ret
std
or
addr16
int
xor
inc
add
inc
lock
rol
cmp
loope
icebp
xchg
in
push
add
add
fst
sahf
loopne
mov
rol
fmul
push
add
test
aas
lock
xchg
lea
inc
mov
icebp
scas
add
aam
clc
in
cmp
jb
shl
mov
push
push
xor
xchg
ret
push
jo
jg
lock
scas
jecxz
arpl
xchg
cwde
fwait
stos
(bad)
shl
call
xor
jmp
add
sbb
xchg
xor
hlt
sbb
sub
add
out
jle
outs
sub
and
mov
aam
cmps
xchg
loopne
ficom
dec
out
dec
xor
mov
sbb
mov
imul
xor
or
and
in
shl
jbe
lods
daa
pop
inc
lods
in
cmp
test
test
cli
into
std
jmp
les
mov
(bad)
fwait
sar
in
(bad)
pop
out
adc
or
add
jne
push
xchg
xor
ins
push
or
fdivr
cmp
enter
cld
or
mov
and
jo
inc
sti
jns
mov
les
jae
int
mov
ror
in
lds
icebp
mov
mov
sbb
in
aaa
fdivr
adc
mov
dec
sub
cli
not
add
imul
lea
ins
ds
xor
(bad)
dec
icebp
pop
jge
cmp
cmc
arpl
push
fsub
xor
jb
out
add
push
(bad)
jnp
mov
rcr
in
sbb
fimul
rsm
loope
sub
jb
xor
jmp
dec
pop
daa
ins
in
xchg
aad
outs
ret
fisubr
jne
add
inc
imul
xor
loop
in
aam
cmp
movs
jecxz
in
mov
mov
sar
sub
sbb
aad
out
call
cmp
push
mov
fwait
pop
dec
cmp
movs
popa
ret
fcom
outs
lahf
imul
or
mov
jg
addr16
ss
sub
cld
das
mov
pop
fsub
inc
push
add
or
push
mov
or
test
push
stc
push
jecxz
mov
and
ret
retf
clc
mov
xchg
dec
push
push
nop
sub
test
and
push
sbb
sahf
xchg
mov
inc
sbb
add
jmp
fwait
cmp
pop
pop
pop
add
js
daa
dec
and
and
shr
adc
call
cld
stos
or
jne
lds
jmp
shl
int3
loope
cmps
cmp
sbb
in
fimul
popa
mov
cwde
or
cmp
test
push
test
aam
not
sbb
push
repnz
xor
out
lock
cmp
les
out
(bad)
cli
fnstcw
dec
inc
or
fist
in
add
sub
fisubr
jmp
push
out
push
scas
adc
adc
clc
push
mov
jp
in
popa
jbe
jmp
cmps
sub
jmp
lods
cwde
mov
and
push
adc
adc
mov
shl
loopne
ss
mov
xchg
outs
out
cmp
(bad)
and
daa
pop
lods
jl
inc
imul
pop
enter
aaa
push
mov
fcom
push
sub
pop
mov
mov
and
stos
push
sbb
cs
popa
dec
xor
sbb
pushf
lahf
add
sbb
call
xchg
into
mov
cli
test
test
pop
or
jp
popf
push
fnstenv
xchg
retf
outs
loopne
mov
inc
not
(bad)
lods
icebp
sbb
iret
sub
fwait
push
test
adc
inc
in
push
xchg
jbe
(bad)
push
ins
hlt
dec
(bad)
mov
daa
xor
in
cli
pop
jbe
lds
xor
pop
repz
leave
out
jecxz
les
mov
pop
mov
pop
fstp
mov
(bad)
fldcw
or
rol
push
xchg
daa
mov
jne
fwait
sub
(bad)
and
mov
push
pop
add
adc
out
sbb
push
cmp
adc
dec
dec
or
xor
les
add
xchg
aam
pop
in
aam
mov
js
mov
mov
adc
jecxz
xor
adc
inc
jb
sahf
mov
std
addr16
stc
push
rcl
lahf
mov
out
mov
clc
xchg
add
xor
aam
loopne
pop
call
int
fmul
xchg
adc
outs
iret
cmp
dec
stos
mov
repnz
jecxz
xchg
nop
int
sub
xchg
nop
dec
sbb
and
movs
popa
nop
cdq
mov
xchg
sub
(bad)
jbe
or
rcr
or
cmp
in
jbe
mov
add
data16
push
xchg
outs
xor
lds
mov
jmp
inc
(bad)
and
jnp
out
dec
xchg
fsubr
add
inc
xchg
cmp
movs
daa
ins
sbb
xor
sbb
cmp
cld
push
inc
xor
jbe
add
and
xchg
neg
ror
es
aaa
cli
xor
iret
push
ds
hlt
mov
js
fimul
fadd
imul
or
fst
out
sub
cmp
or
or
loop
cmps
sub
mov
fidiv
stos
adc
dec
jmp
xchg
pop
cmp
lods
test
add
pop
adc
push
fidiv
xor
adc
in
hlt
cmps
ss
test
imul
out
inc
or
mov
nop
sub
pusha
or
or
dec
out
push
loope
mov
(bad)
push
dec
cmp
cmp
std
or
cmp
sbb
shl
sti
jmp
add
stos
in
add
mov
mov
cwde
adc
or
bt
cmp
xchg
ins
retf
pop
mov
hlt
out
xchg
or
in
xchg
mov
ffree
aas
cs
inc
out
pop
imul
sub
push
popf
jmp
jbe
retf
cdq
retf
push
dec
xchg
dec
xchg
sub
cmp
ror
pop
outs
and
popf
sub
cmp
and
or
into
mov
cmc
dec
jmp
or
dec
and
fwait
xor
sub
push
icebp
dec
(bad)
mov
(bad)
in
dec
dec
adc
xlat
sbb
push
bound
push
push
aaa
iret
dec
xchg
push
ret
aas
xchg
stos
mov
out
data16
xlat
push
daa
cdq
pop
and
data16
call
out
call
scas
cmc
call
xor
cmp
jmp
sub
lods
add
jmp
aad
out
aaa
pop
popf
std
mov
rol
jb
loope
pop
xor
pop
ds
pop
jbe
scas
cmc
ret
loopne
retf
xor
test
mov
(bad)
scas
xor
jmp
test
mov
and
pop
xor
mov
test
and
jp
or
popf
cmp
div
and
inc
fs
cmp
mov
mov
lea
outs
sbb
or
xchg
out
out
into
xor
jno
hlt
sub
jmp
xchg
mov
push
xrelease
xor
xchg
xor
adc
sub
push
mov
mov
or
call
iret
call
push
adc
jbe
je
mov
dec
call
jg
sbb
mov
jae
nop
in
popf
test
lods
xchg
add
int
mov
ds
and
stos
adc
retf
add
in
mov
loopne
inc
add
(bad)
jecxz
ror
popf
iret
pusha
and
mov
dec
daa
push
ret
jno
sbb
loope
cmp
fimul
retf
and
(bad)
dec
popf
std
out
mov
jno
lea
std
pusha
(bad)
mov
xor
mov
sbb
sub
bound
jno
mov
sbb
call
cmp
and
sbb
lock
push
pop
ins
pusha
aam
arpl
popa
loopne
inc
jecxz
js
fistp
pop
jne
sub
outs
in
(bad)
or
pop
sub
scas
mov
push
jmp
mov
inc
je
jmp
xchg
ja
hlt
xor
pop
js
lock
scas
shl
lods
push
pop
retf
js
mov
xor
in
std
pushf
mov
scas
rol
aam
cdq
in
lods
test
push
or
cmp
es
arpl
fcmovu
adc
dec
int3
mov
rcr
(bad)
cmps
jmp
sbb
or
push
sbb
mov
test
mov
ficom
pop
or
mov
sbb
fisubr
cmp
je
and
inc
ror
push
loop
fwait
mov
xor
shr
lock
or
cmp
aas
adc
jle
and
cdq
sub
push
dec
test
stos
mov
jmp
sub
aaa
movs
outs
popa
rsm
fsub
arpl
pushf
inc
sbb
mov
sub
movs
sub
ins
js
cmp
and
syscall
jnp
sbb
pushf
push
adc
mov
cmps
pop
aas
adc
test
sahf
not
add
pushf
jmp
dec
fst
mov
lods
stos
out
adc
adc
test
pusha
add
mov
mov
imul
mov
dec
out
test
or
sbb
mov
jns
add
mov
es
mov
jmp
pop
push
je
mov
mov
dec
xor
and
scas
cmps
jecxz
xor
or
mov
outs
stos
mov
mov
mov
sub
fucompp
push
retf
dec
test
xchg
fwait
xor
lds
cmps
pop
inc
stos
xor
add
xchg
jge
or
int3
jae
jmp
mov
mov
repz
inc
jae
(bad)
cmp
fcmove
pop
jg
shl
pop
iret
mov
cmps
inc
sete
outs
outs
jp
xor
out
jecxz
dec
ds
bound
repz
inc
mov
jns
dec
retf
aad
in
lods
imul
je
xor
je
cwde
push
xchg
jae
jp
xchg
lds
scas
jbe
add
ja
movs
inc
cs
add
sub
sbb
es
call
jle
aas
mov
ins
xor
mov
jno
cli
test
jle
push
push
cmp
mov
jbe
iret
push
ficom
xor
scas
xchg
mov
jmp
ins
int3
mov
repnz
and
rcl
cmp
rcr
mov
xor
or
mov
xor
push
inc
xchg
push
mov
push
pop
xchg
retf
mov
mov
push
xchg
in
pop
jecxz
pop
push
ret
imul
cwde
ss
add
aad
ins
call
rol
pusha
xor
ins
setg
int
push
cmp
inc
movs
sbb
retf
ret
in
sbb
sbb
std
les
push
xor
aam
pop
jbe
sbb
mov
lods
cli
iret
sub
push
rol
mov
sub
mov
in
icebp
sbb
out
adc
call
in
cld
adc
sbb
sub
popa
push
jb
and
jns
bound
je
inc
mov
ja
ins
mov
nop
mov
mov
sub
and
bnd
and
adc
aam
dec
loop
fisttp
jnp
adc
xchg
lds
xor
fidivr
rol
push
push
inc
pop
sti
add
mov
pushf
jle
ss
mov
pop
pop
out
jae
adc
mov
mul
mov
cdq
sub
jg
repz
xor
loop
push
scas
cmp
cdq
pop
inc
aam
dec
mov
out
cwde
fiadd
sti
call
inc
cmps
or
push
mov
imul
mov
arpl
fldcw
sbb
xlat
and
adc
rep
popf
ficom
jge
loop
push
js
sub
mov
daa
ror
pop
loop
iret
xchg
mov
jbe
mov
or
fucomp
mov
imul
mov
lea
lods
(bad)
hlt
cmp
xchg
sbb
out
mov
mov
shl
and
fwait
add
sub
stos
cmp
fmul
je
cmp
adc
xchg
adc
xor
test
push
and
adc
int
mov
in
add
or
(bad)
(bad)
adc
mov
jge
or
mov
hlt
adc
inc
call
jae
daa
loope
or
jmp
imul
pop
mov
iret
(bad)
ins
xchg
adc
cmps
icebp
pop
ret
and
fdivr
xchg
mov
movs
adc
rcr
xchg
jmp
neg
pop
add
arpl
in
lea
mov
sbb
ja
mov
loop
adc
add
xchg
jle
inc
xor
fmul
pop
xchg
cmp
imul
dec
add
xchg
(bad)
je
dec
xor
push
jo
inc
pusha
inc
aam
mov
jmp
sbb
imul
pop
push
fist
adc
retf
(bad)
loop
mov
mov
cmp
pop
outs
pop
stc
jp
loop
(bad)
or
push
scas
cmp
sub
xlat
cwde
mov
push
call
sub
mov
clc
mov
cwde
das
adc
gs
cmp
dec
out
stos
lock
mov
in
jmp
cmps
sahf
xchg
mov
(bad)
jmp
cwde
sub
push
jecxz
cmp
add
adc
cld
into
rol
sub
loope
jb
xor
inc
push
add
xor
ds
inc
mov
push
or
and
xchg
jbe
leave
popa
enter
push
or
cli
pushf
cmp
mov
xor
pop
aaa
or
mov
or
pop
mov
shl
adc
jno
outs
cmp
xor
sete
mov
jns
sub
cmp
js
icebp
setg
rcr
mov
mov
frstpm(287
retf
dec
ins
push
push
mov
rol
(bad)
jmp
mov
int
bound
inc
(bad)
mov
mov
add
sbb
pop
aas
outs
emms
add
jae
loope
push
hlt
add
dec
jbe
mov
jmp
lea
adc
cmp
loope
add
into
mov
xor
(bad)
call
push
xor
imul
test
outs
dec
pop
mov
inc
shr
stos
sbb
sub
ror
pop
dec
jge
and
mov
sub
sub
pop
in
in
sbb
inc
xchg
add
lahf
test
std
pop
ss
or
sub
and
test
lods
cwde
outs
fs
js
xchg
inc
xor
(bad)
fld
fadd
outs
lahf
test
jne
mov
or
dec
xor
es
xchg
int
xchg
mov
sbb
inc
(bad)
ror
(bad)
gs
pop
push
fs
aam
xor
mov
sub
fistp
ret
xchg
out
sbb
in
fcom
call
xchg
cmp
sbb
mov
lods
jo
pusha
fld
mov
gs
jge
sti
cmp
or
clc
mov
pop
retf
loop
loopne
adc
inc
or
fild
test
enter
mov
push
lods
and
addr16
icebp
aam
bnd
jb
repz
mov
and
ss
adc
lahf
sbb
leave
das
aaa
pop
outs
mov
das
pop
aad
pop
mov
repnz
out
nop
or
sbb
sahf
lods
je
fcmovnbe
test
inc
cmps
ins
cmps
in
arpl
loope
pop
xchg
inc
cmps
outs
or
mov
sub
cmps
dec
aas
(bad)
arpl
jae
cld
dec
in
ds
pusha
cmps
push
and
mov
mov
xor
clc
sti
push
imul
(bad)
out
sbb
push
loopne
jge
lods
(bad)
adc
mov
mov
neg
xor
addr16
repnz
(bad)
pop
mov
call
or
and
stos
(bad)
cmp
cdq
push
leave
stc
mov
(bad)
dec
fisttp
ficomp
lods
add
and
call
dec
pop
and
arpl
jbe
in
mov
repz
xchg
adc
jge
outs
rcl
call
pushf
and
add
repnz
xchg
xchg
outs
lahf
neg
inc
out
mov
in
mov
adc
dec
cmp
mov
mov
cdq
gs
jae
ror
xor
imul
sbb
mov
or
inc
imul
mov
lea
sub
adc
mov
popa
add
cmp
call
xor
xor
call
push
sti
xor
out
lea
or
mov
out
or
arpl
in
and
stos
mov
or
(bad)
fisttp
nop
out
cmp
fs
div
sahf
cmp
cmp
inc
gs
push
mov
xchg
add
test
scas
xchg
xchg
push
sub
sub
call
push
jo
hlt
cwde
mov
push
jne
stc
sub
push
or
mov
std
ds
sbb
cmp
aas
pop
mov
mov
xlat
add
dec
inc
cmp
(bad)
adc
retf
sti
(bad)
jp
pop
ja
sbb
cmps
in
sub
push
mov
rcl
aas
mov
pop
pop
test
jmp
jae
call
mov
outs
out
and
movs
pop
inc
imul
(bad)
stos
lock
not
xchg
int
sub
cmp
jg
adc
or
mov
ret
loop
and
addr16
sub
sti
mov
rcl
mov
add
or
imul
add
clc
int3
(bad)
test
mov
jb
(bad)
mov
enter
repnz
std
retf
adc
aam
and
adc
sub
cmps
or
mov
addr16
inc
mov
push
lea
mov
(bad)
jmp
arpl
ja
int
mov
out
adc
xchg
adc
inc
cs
inc
popf
clc
mov
jo
std
jns
mov
or
push
mov
mov
repz
sbb
jae
fnstsw
and
push
lock
aad
adc
ins
pop
rol
adc
sub
aad
adc
mov
ret
or
inc
xchg
leave
mov
in
jne
lea
icebp
mov
stos
push
imul
shl
out
push
das
pop
cmp
popf
retfw
hlt
lds
cdq
rcr
out
rcl
mov
jmp
cmps
xchg
fucomp
add
out
xchg
cmp
rcl
das
fs
cs
into
jae
adc
sbb
stos
popf
fild
pop
mov
std
cmps
mov
data16
jno
pushw
dec
in
aaa
pusha
jne
mov
xor
mov
hlt
lock
out
ins
dec
mov
outs
jmp
jno
fyl2x
mov
mov
ret
lahf
js
jge
and
and
mov
mov
pop
mov
dec
aam
push
xor
je
mov
(bad)
pop
jmp
mov
xor
lds
addr16
adc
jg
inc
sbb
dec
leave
add
mov
pop
xchg
imul
push
data16
ss
test
xchg
inc
mov
shl
and
pop
adc
sbb
jl
dec
pushf
popa
mov
sbb
jg
pop
retf
mov
in
inc
adc
fcmovbe
test
cmp
cmp
dec
sub
add
dec
pop
js
adc
cmps
adc
out
fild
mov
pop
push
imul
mov
mov
fadd
jb
mov
lods
aad
mov
dec
sbb
hlt
dec
movsx
jmp
leave
popf
xchg
xor
pop
int
inc
push
pop
or
hlt
push
arpl
dec
fist
loopne
int
mov
in
push
cmp
dec
jl
mov
jmp
pop
test
test
rcr
addr16
jecxz
add
xor
mov
test
and
stos
das
push
dec
cwde
sub
inc
mov
adc
cmp
ja
enter
sub
int
(bad)
jmp
mov
adc
xchg
or
out
iret
and
xchg
inc
jle
(bad)
jg
jae
movs
(bad)
call
or
inc
stos
cmp
mov
aam
push
clc
xchg
sub
mov
and
(bad)
cs
mov
out
push
or
repz
inc
sub
and
call
adc
pop
clc
jmp
push
push
sbb
jg
in
mov
sub
out
scas
jle
daa
je
cmp
and
out
mov
aaa
xor
mov
arpl
repnz
mov
(bad)
and
add
pop
scas
and
adc
test
jo
icebp
aam
pop
xchg
mov
jmp
jns
inc
xor
jno
(bad)
jbe
or
xlat
out
test
or
dec
mov
call
imul
xor
ret
or
sub
xor
dec
push
add
cmp
sub
xlat
ss
stos
mov
mov
call
xor
adc
js
outs
or
sub
out
(bad)
add
pop
sub
dec
fild
ins
mov
jbe
loope
icebp
dec
std
sbb
push
shr
out
retf
pop
xor
lock
jp
cmp
lods
ins
(bad)
imul
lock
add
xlat
repnz
scas
xchg
mov
clc
mov
pop
ja
add
repz
lock
jbe
shl
sub
sub
pop
(bad)
ds
add
div
dec
outs
mov
clc
sub
int3
sub
fnstenv
ficomp
inc
dec
loop
into
cmps
xor
cmp
cdq
mov
mov
xchg
aas
out
outs
cmp
call
adc
xlat
cmp
mov
mov
cwde
test
aaa
jge
pop
loope
mov
ds
and
aas
imul
xor
or
jmp
cmp
push
push
(bad)
fdiv
mov
cdq
mov
in
and
out
mov
inc
test
lahf
lods
sbb
cmp
push
mov
xor
pop
mov
scas
dec
aas
mov
cmc
aam
imul
mov
push
dec
(bad)
xchg
mov
sub
inc
mov
fisubr
xchg
add
pop
icebp
push
sub
sub
cwde
hlt
call
mov
mov
mov
pushf
enter
cmp
cmp
xor
div
push
xchg
sti
mov
int3
xchg
dec
aam
pop
push
shr
sbb
test
rcr
xchg
jg
add
js
sub
sbb
add
pop
stos
cdq
jae
ja
sbb
xor
ficomp
es
popa
stos
mov
rcr
or
fiadd
or
sub
bound
xor
addr16
add
mov
(bad)
addr16
mov
mov
xchg
sub
sbb
and
push
or
scas
or
jp
addr16
inc
ror
mul
pop
or
cmp
jb
and
add
dec
daa
xchg
push
movs
lahf
jecxz
jecxz
adc
sbb
scas
aad
icebp
mov
lahf
pop
sub
mov
pop
repnz
adc
xchg
call
fsub
add
jnp
pop
xchg
pop
inc
(bad)
das
pop
mov
shr
mov
add
in
(bad)
mov
mov
shl
jge
inc
add
fcmovne
data16
stc
fs
aas
aaa
cmp
scas
add
sub
fucomi
aas
push
pop
daa
mov
lock
addr16
xchg
fs
and
sub
pop
xor
xlat
dec
rol
fld
jl
or
movs
in
mov
mov
imul
dec
add
fdivrp
inc
mov
push
mov
ret
call
add
or
adc
lahf
das
cdq
dec
add
vpsubsb
push
in
xor
je
add
mov
pop
data16
daa
imul
xchg
arpl
aas
or
adc
bound
or
(bad)
hlt
shr
mov
sub
xor
(bad)
mov
cli
inc
psrld
inc
ret
sub
and
jge
xor
(bad)
mov
dec
int
fist
sbb
sbb
bnd
pop
sbb
xchg
cmp
sti
lods
sub
and
mov
mov
aam
push
shr
pop
or
dec
imul
aaa
stos
js
movs
inc
jo
jle
repz
pop
jmp
jl
and
movs
pop
es
retf
std
pop
xor
adc
in
out
fs
pop
xor
add
data16
cmps
push
mul
rcl
shl
lods
iret
mov
out
push
xor
repnz
icebp
pop
shl
fdivr
ds
ss
imul
jge
jp
repz
sub
fld
push
fldenv
pop
dec
data16
or
inc
movs
addr16
jg
out
aam
sub
not
mov
xor
pop
mov
lock
call
xor
dec
out
or
call
xchg
into
mov
outs
in
sbb
data16
mov
popa
ins
cmc
jle
push
add
cmp
jg
push
pusha
je
mov
jo
int3
add
cmp
sbb
shl
jns
inc
pop
push
jae
pop
fiadd
out
sbb
outs
daa
mov
sbb
push
ficom
mov
push
xchg
jmp
scas
into
inc
icebp
out
sub
pop
ds
dec
and
stos
outs
out
push
cmp
(bad)
lods
xlat
jecxz
dec
pushf
push
stos
fiadd
mov
fcom
dec
jmp
jle
(bad)
stos
bound
jns
and
fmul
pop
inc
bound
lods
push
stc
cmp
out
mov
mov
aad
mov
push
bound
movs
arpl
jne
sbb
ins
mov
jbe
or
leave
stos
in
sar
mov
dec
arpl
fiadd
shl
push
sub
stos
inc
dec
stc
sti
push
xchg
xor
cmp
lmsw
inc
aas
addr16
jmp
mov
mov
sysret
sbb
mov
add
mov
(bad)
pop
push
(bad)
cld
push
jns
add
adc
mov
icebp
scas
mov
scas
mov
cmp
sbb
mov
aam
cmc
jno
repz
rol
iret
into
push
push
mov
add
into
shl
fwait
dec
add
leave
xchg
lock
inc
shl
push
retf
(bad)
mov
inc
push
fwait
mov
jbe
aam
sbb
retf
pop
hlt
imul
dec
jp
cwde
xor
pushf
inc
or
pop
adc
sub
mov
push
jle
(bad)
and
lds
dec
std
lock
cwde
dec
push
nop
dec
cmp
inc
dec
xor
dec
mov
adc
push
adc
stos
and
mov
cmp
push
pop
adc
xlat
xor
int
or
pop
dec
adc
daa
cld
ins
and
cmp
dec
ret
lea
or
mov
mov
(bad)
loope
mov
mov
mov
jo
pop
cmp
lahf
cmp
sbb
xchg
into
sbb
call
inc
jge
dec
adc
sub
shl
cmp
and
cmps
xchg
sub
add
or
shr
push
pop
retf
inc
not
jmp
add
xchg
add
inc
push
in
lods
shl
pop
add
loop
int
or
jbe
cmps
in
out
push
stos
jo
pop
xchg
pop
cmp
pop
jp
test
repz
sub
jae
adc
cmps
jns
sbb
scas
es
dec
daa
loopne
xchg
and
aas
sub
dec
pusha
xor
add
cwde
ins
mov
cmp
repz
ret
out
adc
xchg
and
dec
popa
pusha
add
outs
pop
ficomp
leave
push
or
inc
(bad)
fadd
icebp
sbb
cli
mov
ret
out
aaa
iret
(bad)
retf
pop
std
mov
push
push
push
(bad)
sub
in
loopne
lods
aaa
neg
pop
imul
jg
test
adc
and
mov
retf
add
popa
out
retf
lods
sub
inc
pxor
les
xchg
imul
lods
push
inc
(bad)
shr
sar
cmp
rep
std
ror
sub
pop
or
(bad)
push
mov
or
mov
push
add
jle
pop
pop
jae
dec
inc
and
add
ja
fcom
adc
cmps
mov
dec
sub
fstp
mov
stos
push
outs
and
sbb
or
in
dec
jmp
jmp
stc
dec
pop
push
cmp
les
xchg
inc
or
mov
xor
(bad)
xchg
xchg
ret
sar
and
xor
adc
mov
add
jge
sub
push
stos
out
xchg
ins
push
mov
push
cmps
jne
xchg
jmp
sbb
xor
or
mov
xlat
sub
pop
cli
(bad)
adc
inc
retf
or
sbb
cmps
not
scas
mov
ret
(bad)
mov
jno
mov
mov
cmp
and
push
cmp
sahf
xor
int3
mov
lahf
out
ret
enter
cmp
mov
aam
pop
push
clc
or
jge
pop
scas
sub
call
xor
ins
jo
sub
inc
cld
mov
stc
ins
imul
adc
inc
call
jge
push
xchg
xchg
pusha
mov
fisttp
jmp
push
aas
cmps
in
add
clc
jmp
repnz
js
mov
ins
cmp
aaa
gs
sbb
in
jmp
jmp
pop
add
mov
cld
xchg
jl
pushf
test
pop
cwde
out
into
xchg
lods
or
and
jecxz
or
fld
adc
mov
jno
cmc
enter
loopne
xlat
inc
push
iret
popa
and
push
mov
out
xchg
out
pop
jae
xchg
cmp
dec
xlat
dec
push
jmp
push
das
xor
jl
and
or
mov
je
push
lahf
repz
jmp
inc
movs
jns
int3
push
push
inc
mov
int
std
stc
outs
dec
test
add
jmp
adc
and
ret
push
inc
mov
dec
fs
fcmove
mov
xor
or
ins
mov
mov
sub
push
push
and
ret
shl
and
cmp
rcl
sbb
mov
lds
scas
and
inc
or
arpl
adc
daa
mov
das
pop
push
es
adc
ror
aaa
mov
aaa
adc
pop
dec
aad
mov
inc
stc
retf
pop
rcl
mov
xor
cli
popa
inc
cmp
(bad)
xor
retf
loope
fldcw
mov
nop
ret
adc
loop
cmp
test
cmps
jno
jo
ins
adc
ret
inc
add
or
add
dec
inc
pop
sbb
pop
das
adc
lods
xor
adc
mov
mov
add
dec
adc
mov
(bad)
sub
jne
test
jg
sbb
js
rcr
dec
dec
cld
push
shl
or
out
xor
sbb
cmp
ins
xlat
test
mov
push
push
nop
(bad)
(bad)
mov
adc
fmul
fnstenv
xchg
sbb
sbb
add
add
inc
out
lds
cdq
pop
jne
or
pop
scas
addr16
daa
push
mov
jecxz
xor
mov
xchg
jg
mov
sub
test
gs
in
sub
add
cmp
adc
test
sub
pop
and
icebp
adc
pop
cld
inc
or
pop
fwait
mov
ja
dec
add
xchg
sub
pop
jecxz
inc
icebp
clc
xor
dec
inc
or
(bad)
jmp
and
stos
call
sub
aam
jo
cmp
xchg
dec
ds
add
or
in
xlat
into
call
in
mov
movs
jecxz
sti
adc
lock
and
pop
(bad)
leave
dec
mov
mov
mov
iret
ins
xchg
jae
push
data16
ror
and
sar
pop
mov
and
sar
ds
pop
mov
mov
mov
lods
jns
inc
es
xchg
cmc
push
outs
mov
jns
mov
stos
daa
sbb
mov
jb
test
fisub
mov
js
out
(bad)
sbb
add
xchg
in
hlt
or
in
shl
xor
inc
mov
stos
jl
test
sbb
dec
push
arpl
cmp
add
pusha
xor
js
jno
xor
in
sar
popa
aas
mov
dec
inc
fdivr
xchg
inc
popf
aas
test
and
lahf
mov
jle
xchg
movs
or
gs
xor
ins
ins
pop
sbb
cmc
fdiv
jbe
jnp
rdseed
cmp
in
dec
daa
cmc
loop
xchg
js
ja
sub
ins
sbb
in
dec
jle
js
test
cmp
pop
pop
push
jmp
jmp
sbb
add
mov
call
push
std
(bad)
inc
fld
fptan
je
sub
stos
out
fldenv
inc
lods
inc
sbb
push
jbe
les
mov
adc
sbb
pop
inc
cmp
fiadd
cmc
xchg
adc
cli
addr16
push
test
aad
jo
(bad)
fisttp
pop
fisttp
xor
inc
push
loopne
popa
pop
lock
iret
out
mov
mov
mov
inc
call
std
sub
aad
pop
lea
call
movs
movs
mov
sbb
inc
sub
add
push
mov
dec
and
pop
pop
add
sbb
mov
(bad)
cli
inc
cli
fild
mov
mov
rcl
sar
sahf
and
or
mov
sub
iret
sub
mov
(bad)
rcl
ret
fsub
test
dec
mov
xor
and
xchg
ja
xchg
dec
test
jb
in
pop
repz
out
cmc
test
iret
and
stc
imul
pop
stos
pop
mov
inc
shr
(bad)
div
loope
cmp
mov
dec
mov
adc
pop
ret
scas
jmp
push
or
add
test
test
adc
aad
(bad)
pop
sub
sbb
mov
mov
test
imul
fs
mov
frstor
sub
push
dec
pushf
addr16
dec
mov
mov
jmp
mov
pop
ucomiss
addr16
fadd
mov
add
shl
shl
sar
pop
mov
jo
mov
call
(bad)
(bad)
xchg
data16
rcr
jl
and
aam
leave
adc
jnp
loopne
gs
lea
add
pop
mov
cld
or
sbb
test
retf
jo
mov
mov
push
ror
jmp
hlt
lahf
and
cmovne
and
in
cmps
cwde
sbb
pop
mov
in
movs
sbb
sbb
sub
inc
push
add
xor
mov
xor
sub
sar
xor
jno
clc
aas
in
mov
adc
jo
imul
or
fwait
xor
adc
mov
in
sub
jl
cmp
ins
dec
mov
pop
inc
mov
push
jmp
mov
inc
inc
pushfw
call
adc
mov
cmc
cmp
push
sbb
dec
jle
(bad)
sbb
pusha
adc
jnp
dec
mov
push
xor
icebp
out
pop
ss
pcmpgtb
ret
ja
jecxz
movs
xchg
pop
pop
cmove
sub
das
jmp
xchg
sbb
xchg
sbb
mov
ret
repnz
xor
cmp
pop
mov
and
stos
mov
push
dec
stos
xor
sub
dec
sub
outs
sbb
and
ja
mov
jae
or
mov
inc
mov
sar
aaa
out
test
sub
mov
mov
jmp
aad
(bad)
jmp
(bad)
fld
push
push
mov
fstp
push
aam
jp
(bad)
in
cmps
sub
push
pop
imul
ficom
cmp
mov
(bad)
(bad)
push
xchg
rcr
push
cmp
mov
and
pop
scas
sbb
fcom
cld
ret
cmc
aaa
push
pop
int
mov
mov
jae
test
cli
icebp
lds
div
dec
push
cwde
in
mov
adc
scas
test
neg
dec
or
bound
aam
daa
inc
arpl
pushf
sar
mov
mul
loop
pop
and
clc
push
cld
jne
leave
jl
nop
fidiv
cmps
or
dec
rcl
aas
gs
sbb
mov
cmc
sahf
push
push
jle
xchg
fmul
scas
and
fs
popf
jae
mov
dec
aaa
bound
ret
jno
sbb
xor
lock
inc
pop
pop
ja
es
and
lods
mov
dec
std
sbb
sbb
xchg
dec
add
push
mov
sbb
jno
out
add
pop
jnp
pushf
pop
inc
xrelease
(bad)
jmp
ins
push
add
aam
arpl
out
dec
lods
mov
xchg
shl
pop
js
xchg
dec
inc
mov
push
sub
ss
cmp
push
in
ret
mov
ficom
sahf
mov
mov
add
lahf
jne
call
sub
add
pop
fld
inc
pop
jnp
pop
pop
sbb
mov
fisubr
dec
xlat
outs
ds
cmp
adc
ss
inc
push
rol
add
call
popa
xor
out
add
cmps
ficom
mov
push
movs
or
ds
mov
jno
pop
sbb
test
outs
dec
fwait
shl
data16
inc
cmp
dec
dec
pop
add
jns
and
setb
and
std
inc
ror
adc
lock
or
out
mov
mov
xchg
inc
hlt
lahf
iret
mov
add
movs
scas
(bad)
inc
fist
rcl
push
retf
fist
inc
ret
mov
dec
popa
inc
(bad)
icebp
repz
pop
adc
jnp
mov
out
outs
scas
sub
push
and
jg
mul
fstp
xor
xchg
push
shl
fimul
sub
popf
mov
sub
or
mov
and
adc
jns
mov
mov
loop
mov
stos
aad
loop
jp
scas
psadbw
rcr
jecxz
movs
stos
push
neg
push
mov
mov
mov
push
enter
inc
mov
mov
int3
pop
es
mov
out
inc
out
add
push
cmp
cmp
jnp
out
std
ss
jnp
sahf
out
cmp
and
jmp
or
ins
jb
and
scas
or
sbb
or
jae
xchg
js
pusha
jecxz
and
nop
lods
popa
dec
cmp
js
retf
pop
rol
mov
add
dec
cmc
js
mov
mov
cmc
or
jge
fdiv
jbe
(bad)
xor
xsha256
cmps
xchg
dec
or
mov
lds
cmp
dec
adc
xor
or
xchg
(bad)
push
mov
mov
nop
or
adc
inc
leave
fidivr
mov
fnsave
movs
fcom
or
inc
lds
xor
call
(bad)
mov
fwait
arpl
xchg
out
pop
repnz
cwde
in
mov
mov
daa
(bad)
sbb
add
dec
in
ret
sbb
jmp
dec
call
test
(bad)
test
stos
call
mov
pop
sub
xchg
es
dec
lock
out
lsl
cs
shr
pop
ja
shl
mov
cmp
cs
mov
dec
jns
dec
push
cmp
jnp
fwait
cwde
iret
dec
in
push
js
add
cmp
mov
and
retf
and
mov
aas
sahf
mov
addr16
push
push
icebp
rcl
retf
jnp
xchg
sub
and
pop
not
push
call
adc
das
inc
sbb
jo
mov
or
(bad)
jecxz
movs
in
ror
xchg
pop
ret
xchg
test
test
and
int3
lods
sub
stc
les
adc
rcl
rdpmc
add
ficom
cmp
push
iret
push
lahf
out
dec
dec
xor
push
outs
loop
adc
(bad)
mov
in
in
add
and
clc
inc
retf
jae
or
cld
ret
pushf
xor
push
jbe
mov
xor
addr16
mov
addr16
inc
dec
and
or
mov
push
es
adc
lea
in
jge
sub
mov
in
mov
out
sub
mov
push
cli
adc
pop
loopne
add
mov
adc
mov
inc
sbb
leave
fs
das
inc
sbb
(bad)
sub
(bad)
pop
mov
fld
xor
cmp
fwait
scas
jp
xchg
push
addr16
pushf
pop
retf
jmp
sub
iret
ret
lods
test
xabort
iret
(bad)
not
cmp
cmps
mov
pop
movs
fld
clc
xlat
in
stos
add
sub
pop
inc
mov
push
push
mov
outs
jne
mov
and
ja
mov
cmp
mov
ja
jne
mov
lods
jmp
dec
push
fcmovb
std
add
inc
push
xor
mov
xor
fdiv
out
sbb
(bad)
inc
fldcw
mov
pop
xchg
pop
pop
int3
jns
pop
dec
(bad)
ss
xor
out
push
call
mov
and
mov
pusha
sub
mov
xchg
ins
in
lea
je
shr
jg
arpl
out
(bad)
mov
ja
fcmovu
dec
lock
xor
movs
dec
adc
outs
adc
mul
(bad)
pop
or
rcl
fdiv
jl
pop
arpl
ja
aam
lods
cmp
sub
xchg
mov
adc
or
mov
retf
jne
cwde
fwait
ins
mov
movs
cmp
xor
cmp
and
jnp
scas
jl
add
dec
out
into
mov
push
mov
aad
dec
fs
push
pop
fs
jnp
sub
(bad)
iret
dec
xor
js
aas
sub
cmp
xor
pop
dec
movs
inc
xchg
sub
or
aas
jle
cld
xor
push
fs
mov
and
pop
enter
mov
inc
and
xor
push
pop
xor
scas
dec
dec
or
mov
ret
leave
mov
jg
ins
and
pop
push
adc
mov
push
std
jge
sub
ror
push
inc
or
xchg
pop
push
xor
fidivr
adc
test
(bad)
hlt
jl
sub
(bad)
sahf
sub
sbb
repz
in
sub
push
mov
dec
push
xor
mov
mov
outs
aam
jg
xlat
cwde
call
mov
pop
or
scas
stos
inc
sbb
mov
(bad)
push
rol
push
cmp
movs
jmp
leave
fsubrp
mov
ins
fstp
sub
repnz
jo
notrack
and
iret
add
cmp
jp
and
and
mov
std
sahf
stc
xchg
xchg
retf
jnp
cwde
jno
bound
inc
popf
loope
mov
xlat
je
inc
xor
inc
scas
pop
aad
rcr
popf
inc
jle
test
cli
cmps
mov
pop
lods
mov
dec
adc
js
add
ja
out
push
dec
pop
add
inc
sub
pushf
mov
mov
(bad)
dec
(bad)
or
lahf
icebp
xchg
fsub
sbb
daa
inc
push
jp
add
jae
inc
add
push
cmp
addr16
imul
push
lds
lock
jl
mov
(bad)
pop
cmp
or
cmp
vpaddd
arpl
fcmovnb
arpl
xchg
jne
add
pop
mov
push
push
gs
cmps
fwait
rcr
popa
sbb
pop
in
fs
imul
ins
aam
addr16
xchg
xchg
adc
mov
and
pop
leave
movs
frstor
int3
pusha
mov
add
mov
inc
pop
enter
sub
(bad)
movs
aad
xchg
xor
in
cmp
mov
pusha
(bad)
push
mov
jno
cmp
or
shl
js
add
paddusb
cmp
push
sbb
jmp
sub
fs
enter
(bad)
loopne
inc
and
mov
push
jg
es
mov
fsub
loope
stos
mov
mov
mov
jbe
loopne
shl
pop
or
mov
inc
inc
or
jmp
scas
mov
ins
mov
cli
loope
sub
inc
repnz
test
dec
leave
sbb
call
xchg
imul
push
bound
in
lea
sti
dec
sub
mov
dec
sbb
inc
jg
adc
or
out
mov
xor
stos
push
outs
add
xchg
imul
repnz
ins
cmp
in
loop
pop
and
nop
iret
mov
push
jo
add
arpl
mov
inc
lods
aaa
cld
mov
das
add
shr
pop
dec
jmp
dec
je
mov
pop
int
or
cmp
shr
bound
inc
fmul
inc
int3
and
sub
das
fld
popf
(bad)
push
pop
xchg
jle
inc
aaa
das
dec
jns
inc
ret
lahf
les
mov
pop
imul
dec
mov
dec
push
shl
cmp
lods
adc
aad
fimul
gs
push
cmp
gs
xchg
mov
xchg
push
iret
sub
(bad)
mov
leave
das
cmps
rep
mov
test
sub
and
sbb
cmp
fucomp
mov
sub
lods
jnp
or
xchg
dec
pop
bound
fdivr
mov
sub
nop
mov
cmp
push
pop
retf
std
cmp
scas
or
dec
cmps
and
inc
mov
hlt
je
jg
or
jp
in
(bad)
lock
sub
xchg
dec
fistp
mov
es
in
add
js
jmp
xor
pop
fstp
jb
pop
or
sahf
mov
mov
dec
mov
es
sar
inc
pop
jp
xor
jno
mov
gs
out
out
adc
jno
and
push
lods
jmp
inc
in
pusha
ret
(bad)
adc
pop
jmp
test
or
dec
stos
enter
test
adc
mov
mov
inc
popf
aam
pusha
mov
fbstp
add
dec
xor
jne
push
rcl
retf
xlat
out
cmp
adc
retf
jbe
sbb
xor
jmp
fdiv
popf
dec
pop
xor
jns
jle
sub
cwde
lods
ror
pop
mov
inc
clc
das
fwait
inc
adc
std
add
loopne
das
mov
les
es
clc
rcl
fsubr
pop
imul
in
pop
sub
push
out
mov
and
lahf
outs
sub
fsub
xchg
pop
push
adc
aad
cmp
lahf
sti
xchg
stos
jp
mov
or
dec
cmp
or
mov
lahf
push
xchg
jmp
outs
cs
les
mov
or
sbb
out
xchg
dec
in
es
xchg
and
je
adc
adc
addr16
(bad)
out
(bad)
fmul
pop
and
lock
movs
add
fs
sub
stos
shr
and
xchg
jl
fadd
pusha
out
ud1
sbb
imul
push
cs
jecxz
into
stc
out
pusha
mov
dec
fcomp
add
mov
adc
leave
addr16
adc
stos
and
jmp
stos
xor
inc
xchg
clc
or
and
mov
add
push
xor
pop
mov
pop
rcl
rol
inc
adc
in
(bad)
and
or
dec
pop
fstp
fwait
and
xchg
(bad)
xchg
adc
sbb
push
fisttp
retf
and
mov
repz
in
inc
loop
cwde
loop
xor
add
lods
pop
mov
hlt
inc
jne
add
push
out
inc
pop
xchg
xchg
vmovlps
jno
daa
ret
(bad)
test
cmps
out
mov
mov
frstor
out
shr
push
sti
mov
cmp
repnz
push
fsub
(bad)
mov
stos
mov
pop
lock
adc
sub
jo
cld
or
or
loop
(bad)
(bad)
cmp
pop
addr16
push
and
movs
push
xchg
jbe
xchg
inc
mov
cmp
inc
push
push
adc
adc
xchg
out
mov
movs
arpl
xchg
mov
jne
jl
mov
outs
cmp
(bad)
sub
jae
rol
retf
ins
sub
xchg
pop
mov
retf
mov
fild
outs
xchg
mov
inc
cmp
or
aad
sub
mov
sbb
pop
push
push
mov
jmp
jg
pop
iret
cmps
xchg
(bad)
xor
repnz
cmp
xor
inc
pop
add
sub
outs
xchg
sbb
cmp
xor
mov
jmp
sbb
sti
xchg
stc
stos
div
test
mov
sbb
push
or
add
jne
fs
stos
jo
mov
aad
fucomi
shl
enter
pmullw
sub
mov
add
xchg
sub
into
outs
nop
stc
rol
push
mov
test
xor
push
sub
(bad)
xchg
mov
cmp
test
mov
sub
call
retf
xchg
xchg
sub
cdq
xlat
popf
into
inc
xchg
adc
push
imul
cmp
cmps
ins
push
mov
mov
mov
icebp
iret
jo
pop
lds
jmp
and
inc
repnz
xchg
stos
cmp
jo
add
(bad)
jg
mov
dec
inc
mov
popa
out
mov
mov
not
mov
mov
add
xchg
mov
pusha
xor
sbb
fnstcw
xor
mov
cmp
test
orps
dec
in
cmp
pop
and
inc
add
(bad)
jmp
jl
sub
inc
mov
idiv
mov
stc
loopne
pop
push
mov
dec
push
push
call
pop
test
jae
hlt
and
sbb
mov
mov
and
retf
mov
xchg
lods
cmps
jo
dec
aam
aaa
sti
sar
test
mov
push
push
pop
add
inc
aaa
push
ss
std
test
js
mov
xchg
jge
ss
cmp
mov
sti
in
lock
inc
sub
mov
and
xor
inc
js
test
cs
sub
int
or
adc
daa
(bad)
ficom
adc
je
xchg
xchg
repz
jp
push
pop
cmp
jb
dec
ins
xchg
out
dec
mov
sub
dec
stc
cmps
je
fs
(bad)
cld
pop
inc
jge
dec
ins
loop
and
sbb
das
xor
xor
aaa
shl
jae
inc
mov
sub
jg
pop
add
imul
dec
jns
and
out
test
or
sti
out
pop
mov
mov
mov
je
pop
or
pop
xchg
mov
ja
repnz
ror
pop
aaa
xlat
daa
ja
or
popa
mov
sbb
and
sbb
aad
and
jmp
xor
and
or
in
(bad)
fisttp
jge
inc
inc
inc
mov
xor
jle
es
sbb
(bad)
push
sysexit
xor
dec
jnp
adc
test
es
imul
test
or
out
adc
jmp
inc
and
cmp
movs
jl
mov
call
dec
repnz
in
add
xchg
add
pop
sub
mov
data16
mov
gs
cmp
xchg
ins
mov
aad
jmp
stos
pop
push
or
test
div
bnd
or
add
add
xchg
sbb
bswap
in
cmp
ja
cmp
jb
xor
mov
push
mov
(bad)
hlt
(bad)
sti
call
lds
pop
outs
adc
scas
scas
pop
cli
cmp
lahf
mov
or
imul
pop
std
pop
fucomi
mov
pop
jle
leave
aas
in
jg
ds
enter
ret
dec
gs
jmp
push
xchg
popf
add
mov
jnp
sbb
stc
in
retf
test
xor
sub
add
inc
cs
mov
mov
or
lods
rcl
adc
mov
sbb
sbb
dec
pop
mov
xchg
sbb
int3
gs
call
jae
and
jno
ret
inc
mov
fist
cdq
fadd
inc
mov
sbb
mov
cmp
inc
pop
push
ror
aam
dec
cwde
gs
push
or
push
cs
jl
rcl
pop
mov
mov
push
mov
or
push
popf
imul
fmul
cmp
fs
mov
loop
int3
mov
jl
rcl
push
lods
bound
cmp
data16
adc
shl
aaa
xor
xchg
cdq
push
xor
mov
or
mov
mov
movs
or
(bad)
lods
mov
movs
call
je
lods
mov
out
push
lds
retf
enter
aaa
mov
jae
xchg
ins
aam
pushf
lahf
and
in
cmps
xchg
sub
pop
mov
sub
mov
fisubr
push
repz
and
retf
ss
std
xchg
xlat
jg
(bad)
and
xchg
pop
into
dec
lea
not
jb
add
clc
push
jg
ficom
or
jge
cmp
lods
fnstsw
popw
stc
(bad)
(bad)
sbb
xor
aam
add
pop
push
jp
lea
repz
push
inc
mov
and
inc
add
adc
mov
ins
mov
inc
pusha
mov
fs
push
push
ret
or
test
cmp
and
sbb
mov
add
sahf
inc
je
mov
adc
sub
push
jo
aas
lds
fdiv
fsub
push
fist
lea
bound
loop
dec
dec
sbb
call
pusha
jp
xchg
pop
aaa
repz
pusha
out
shr
fmul
jg
test
stos
(bad)
cmp
mov
je
jmp
pop
out
jecxz
adc
(bad)
push
es
push
mov
cwde
ss
cmp
enter
cmp
div
mov
sub
imul
cmps
sub
inc
mov
mov
pop
cmp
das
(bad)
mov
sub
sbb
and
in
iret
dec
sbb
cmc
mov
ret
xor
adc
ss
inc
mov
jo
jecxz
rcr
jb
fisubr
cmp
pushf
test
mov
in
inc
inc
das
sub
cmc
push
add
and
xor
ins
ds
loopne
xor
jmp
mov
(bad)
sbb
push
pushf
ror
jmp
dec
adc
(bad)
jns
rcl
retf
loop
movs
xchg
mov
xor
jmp
pusha
sbb
push
js
outs
jge
scas
out
sub
aaa
pushf
icebp
cwde
dec
hlt
movs
mov
popa
repz
xchg
and
les
mov
rol
pop
dec
gs
inc
cdq
push
cmp
jle
test
and
clc
push
mov
xor
jns
xor
gs
push
dec
sub
nop
das
xchg
icebp
pop
push
cs
ror
mov
cmps
aaa
paddsw
sbb
jbe
daa
xchg
mov
dec
cmp
sar
fldcw
mov
xchg
xchg
int3
repnz
aaa
jbe
mov
aad
mov
clc
xor
add
mov
pop
fs
in
mov
pop
push
cs
push
dec
test
dec
jo
cli
cmp
sub
mov
cmps
test
addr16
xchg
pushf
pop
je
jl
cmp
mov
daa
mov
push
add
fcomi
call
pop
jl
pop
jmp
test
ins
jno
inc
dec
(bad)
cli
mov
sti
jg
xchg
or
push
cmps
cmc
mov
int
xor
push
(bad)
loop
inc
fld
daa
inc
pop
pop
aaa
iret
adc
repz
jno
jbe
xchg
inc
xchg
aas
jbe
sahf
pushf
add
pusha
call
sub
loop
xlat
repnz
xchg
test
or
push
inc
pop
add
fnstcw
test
pop
call
ins
mov
es
retf
movs
es
rol
loop
nop
rol
push
call
sbb
xchg
fwait
mov
push
sbb
sti
repnz
mov
dec
in
das
jno
push
rol
xchg
or
out
imul
adc
jbe
ds
push
xor
(bad)
imul
call
and
fpatan
push
lods
outs
test
test
ins
js
adc
stc
sbb
xchg
xchg
xor
mov
std
lods
jmp
sub
hlt
in
movs
mov
outs
push
jne
rcr
inc
addr16
nop
(bad)
js
je
adc
in
sub
dec
cvtdq2ps
(bad)
mov
cs
into
bound
xchg
or
iret
rcr
fldcw
scas
xor
enter
scas
dec
cmc
xchg
cli
repnz
pop
lds
mov
push
fiadd
jb
loopne
(bad)
lock
cdq
jp
rcr
jmp
daa
jo
cmc
pop
ror
pop
or
fcomi
jmp
test
dec
cmp
xchg
mov
arpl
mov
sbb
repnz
sub
cmp
mov
jecxz
out
fs
stos
adc
adc
mov
ss
enter
jo
mov
mov
(bad)
pop
jno
jle
mov
inc
sbb
sub
cmp
in
sbb
cwde
mov
fs
jnp
out
sbb
(bad)
xchg
fild
sub
adc
and
fld
and
xor
dec
ret
in
dec
sahf
not
jns
jl
arpl
cmp
das
inc
rol
dec
adc
test
popa
xor
mov
ret
out
rol
push
(bad)
aaa
lods
aaa
cwde
cli
aam
cmps
xchg
mov
mov
and
stos
jne
cmp
(bad)
imul
rcr
add
sahf
inc
int3
or
call
pop
pop
xchg
aam
loopne
pop
sbb
or
cmp
ins
loop
add
xor
and
stos
cmp
in
jg
(bad)
or
adc
nop
pop
pop
outs
inc
xor
lods
jecxz
rcr
jp
fmul
inc
shr
(bad)
jmp
pop
jnp
data16
or
xchg
dec
push
and
sar
lea
int
mov
dec
adc
dec
frstor
adc
ret
int3
adc
out
sbb
jmp
and
pop
in
sbb
mov
out
leave
sbb
and
mov
inc
xchg
or
outs
pop
xor
inc
outs
imul
add
mov
shr
or
daa
or
rcr
movs
and
sbb
sti
push
push
dec
mov
adc
or
cmps
int
jp
mov
ror
jnp
js
fcom
inc
cmc
popa
fimul
daa
outs
mov
scas
pop
imul
xchg
popf
das
daa
lods
sbb
aad
lods
mov
cmp
jg
sti
scas
mov
scas
and
and
mov
jmp
sub
jmp
nop
imul
repnz
mov
cmps
and
sbb
aad
test
add
jno
xchg
scas
sub
sub
jecxz
or
scas
pushf
test
mov
cli
inc
mov
imul
les
(bad)
push
add
lods
lock
shl
gs
in
(bad)
loope
xchg
and
or
ss
mov
movs
push
pop
(bad)
fdivr
mov
xchg
(bad)
pop
arpl
loop
jbe
push
xor
or
jl
mov
int
call
and
inc
inc
shl
mov
por
mov
loopne
sbb
test
cmc
call
inc
neg
(bad)
mov
enter
fs
std
pusha
(bad)
rcl
mov
(bad)
out
out
pop
or
es
outs
jge
dec
mov
loop
pushf
cmp
jle
add
add
xchg
cdq
icebp
sti
in
fsub
retf
jecxz
pop
jbe
cmp
lock
pop
adc
inc
arpl
xchg
div
sbb
mov
or
push
js
add
repnz
inc
mov
push
scas
rcl
getsec
xor
out
push
movs
inc
cs
int
xchg
sub
xchg
push
sbb
ss
xor
push
cmp
daa
fsubr
lods
mov
mov
fcom
mov
mov
cwde
jb
cmp
sbb
ss
mov
cmps
sti
xchg
movs
cmp
(bad)
out
or
sub
add
mov
push
loope
mov
sbb
ror
(bad)
lahf
inc
mov
lods
leave
lds
jno
dec
add
push
rol
or
ret
repnz
movs
fsubr
outs
shl
mov
inc
dec
pop
stos
mov
popa
imul
retf
push
push
add
dec
out
repz
aaa
cwde
(bad)
aad
jmp
stc
lods
push
jnp
pop
add
movs
sbb
cmp
aad
mov
(bad)
sub
sar
stos
mov
repz
dec
fidivr
cmp
hlt
out
mov
add
adc
adc
xor
call
das
mov
lods
fcmove
dec
fst
pop
adc
out
pop
xchg
xchg
and
pop
or
popf
pop
pop
sar
lahf
and
int3
cli
push
mov
add
shl
add
pop
and
cmp
in
sbb
push
jnp
ins
pop
popf
dec
repz
inc
imul
pop
rcl
cmp
es
aad
or
inc
adc
dec
cli
push
cld
jg
loope
les
(bad)
push
popa
adc
sti
leave
pop
pop
fstp
lods
jge
ins
iret
imul
pop
inc
mov
cld
adc
fsubr
pop
push
and
mov
push
popf
cmp
mov
jp
imul
or
fisub
or
daa
add
or
mov
(bad)
push
sub
mov
pop
movs
jp
jns
dec
popa
aam
movs
(bad)
cmps
xchg
daa
xor
mov
das
(bad)
out
fsubr
in
loop
mov
(bad)
cmp
in
test
dec
not
inc
sub
inc
mov
jp
sahf
inc
xor
repnz
retf
mov
xchg
out
inc
enter
les
test
jmp
es
pop
pushf
mov
loop
inc
pop
sar
fwait
(bad)
test
sbb
ja
push
xlat
inc
mov
push
loope
in
sub
jecxz
jg
(bad)
imul
stos
ret
adc
lahf
xor
inc
sti
jle
mov
xlat
cmp
mov
push
mov
mov
scas
ror
mov
and
cmp
int
sbb
enter
fild
fld
cmp
mov
aam
iret
mov
lods
imul
test
jge
inc
jge
mov
mov
inc
xchg
mov
outs
mov
mov
in
pop
clc
mov
dec
pushf
inc
mov
mov
xor
and
(bad)
mov
rcl
xchg
loope
cdq
cmp
daa
dec
clc
dec
mov
jg
out
xchg
sti
mov
add
cld
jl
dec
retf
ins
push
cdq
scas
icebp
test
imul
ficomp
jmp
push
cmp
push
mul
mov
mov
cmp
push
cmp
xchg
mov
jl
mov
xchg
inc
or
cmp
out
xor
push
inc
(bad)
icebp
adc
(bad)
outs
jmp
push
(bad)
mov
mov
ins
jae
sub
test
jns
jp
adc
cmp
pop
pop
sti
dec
call
cmp
mov
in
pop
jg
fnstenv
stos
add
jle
ret
mov
push
call
nop
loop
std
jns
popf
out
ror
cmc
cwde
ins
cs
mov
aas
lods
test
les
ins
iret
pop
cmp
ror
xor
mov
jg
into
mov
pop
movs
cmp
icebp
pop
gs
fisub
sbb
xor
in
sbb
adc
test
retf
pop
hlt
sub
arpl
and
jo
jno
inc
fisttp
nop
or
aas
sbb
out
xor
stos
xchg
ins
outs
pop
mov
pusha
mov
rcr
xor
clc
sub
idiv
cmp
xchg
dec
sub
sub
sbb
sbb
or
aas
and
dec
cwde
fadd
dec
popf
fdiv
sbb
or
adc
mov
popa
or
cmp
pop
pop
call
sbb
jne
mov
popa
cdq
shl
loopne
mov
shl
jne
pusha
lahf
or
movs
shr
aaa
xor
xchg
dec
xor
int
pop
xchg
push
mov
std
imul
mov
push
mov
mul
mov
jns
popf
cmp
inc
mov
arpl
jbe
shl
movs
pop
mov
add
xchg
sbb
es
dec
shl
mov
ds
mov
scas
cs
jg
lock
add
mov
adc
and
lods
xor
je
push
(bad)
fcomp
iret
xor
jmp
pop
in
jno
cmp
mov
sub
out
pushf
cmp
inc
imul
fyl2x
fsub
jbe
ins
scas
fiadd
int3
cmp
into
pop
loopne
mov
xor
jnp
push
xchg
sahf
test
or
jno
mov
(bad)
cdq
test
arpl
lds
cld
push
xchg
jmp
std
xchg
sub
bound
sbb
iret
dec
pusha
pop
int3
(bad)
je
(bad)
lods
push
mov
test
out
xchg
pop
pop
cmp
mov
mov
movs
xchg
push
pop
std
stos
xchg
dec
push
and
push
pop
icebp
xchg
retf
or
push
(bad)
lods
xchg
aam
xchg
mov
xchg
xchg
popf
lods
(bad)
stos
mov
nop
jmp
pop
mov
repnz
push
push
sti
mov
jl
or
rcl
scas
sub
sub
mov
dec
shl
test
or
dec
idiv
scas
pop
mov
jmp
dec
mov
or
pop
xor
xchg
and
movsx
rol
movs
xchg
xchg
mov
ins
ja
shl
mov
cdq
mov
inc
fidiv
xor
jo
fidivr
dec
(bad)
scas
rcr
movs
fcmovu
xchg
popa
ds
pop
sub
fwait
hlt
jbe
pop
push
int3
pushf
pop
call
iret
mov
stos
lock
outs
add
es
out
ins
mov
xchg
jb
retf
dec
loopne
inc
(bad)
jl
dec
pop
cmp
lods
retf
or
imul
and
push
inc
mov
push
lahf
aas
xchg
pop
jno
pop
stos
and
test
mov
test
adc
mov
clflush
jbe
xchg
jecxz
or
jmp
ins
das
repnz
xchg
retf
sbb
test
xchg
cmp
ficomp
not
(bad)
lods
pop
mov
fistp
ja
xchg
jl
mov
arpl
jecxz
xchg
xchg
pop
cmp
sbb
lock
cwde
call
mov
mov
add
mov
add
jmp
inc
out
cld
ds
sub
fbstp
das
jecxz
or
xchg
mov
fcomip
jns
xchg
add
out
fcomp
rcr
lods
ret
movs
clc
sbb
pop
or
push
aad
icebp
(bad)
jle
cmp
xchg
xchg
inc
mov
imul
repnz
dec
sub
sahf
add
xor
mov
push
fidiv
or
lea
popf
pop
movs
jne
sbb
frstor
jle
or
test
cmp
aam
pop
nop
push
movs
add
(bad)
ins
mov
xor
pop
stos
adc
jmp
stos
inc
bswap
pop
call
in
rcl
aad
or
mov
clc
arpl
mov
xor
scas
scas
adc
pop
sbb
and
cmc
fs
stos
fisubr
and
jns
(bad)
retf
aam
jne
jne
pop
mov
jecxz
outs
sub
inc
call
xchg
cmps
push
cmp
sbb
pop
sahf
jb
and
dec
lock
loop
loop
add
mov
fcomp
xchg
int
leave
sbb
pop
mov
clc
iret
fdiv
fwait
dec
mov
dec
fwait
inc
icebp
dec
lods
mov
jmp
bound
mov
dec
test
add
les
xchg
call
pop
mov
scas
inc
push
ret
xchg
rcr
(bad)
retf
mov
or
shl
inc
imul
nop
push
xchg
clc
jo
jecxz
cmc
push
sti
push
inc
std
and
or
mov
jp
cmps
icebp
adc
aaa
in
shl
xor
push
push
loopne
das
inc
in
rcr
inc
push
or
jp
or
mov
add
sbb
scas
div
out
mov
and
out
xchg
sub
pop
pop
mov
mov
aad
cmp
fwait
add
mov
inc
push
sub
fbstp
mov
jmp
mov
icebp
mov
adc
push
retf
arpl
jge
shl
jns
sbb
inc
or
sbb
mov
imul
pop
mov
aam
cmc
sbb
fs
imul
fs
push
movs
and
mov
mov
adc
fld
(bad)
dec
cmp
aad
add
icebp
hlt
cmp
aas
xor
movs
inc
cmp
in
and
push
or
ret
inc
dec
push
outs
out
dec
imul
push
test
push
out
xchg
test
add
cmp
fdiv
pop
mov
dec
add
add
sub
dec
sub
jl
(bad)
(bad)
repnz
test
data16
mov
jg
mov
mov
fsub
push
retf
sbb
jge
add
loopne
push
cmp
leave
pop
popf
mov
pop
mov
mov
xchg
dec
dec
xor
ret
inc
jp
and
xchg
push
(bad)
mov
in
nop
out
xor
push
push
jmp
(bad)
hlt
pop
or
jae
fld
dec
in
aaa
cmp
or
aaa
adc
and
loope
jg
test
jno
nop
dec
mov
dec
xor
jp
shr
(bad)
fisub
adc
xchg
call
jge
pop
hlt
out
(bad)
je
and
add
into
dec
cli
repz
arpl
jae
mov
pop
xchg
loope
bound
loop
push
shl
cdq
fyl2xp1
dec
cwde
jnp
les
jo
push
(bad)
sti
push
out
xchg
or
scas
sbb
mov
pop
mov
inc
cmp
scas
sub
out
mov
dec
outs
sahf
xchg
xor
jbe
div
mov
icebp
stc
test
inc
leave
fbld
retf
outs
push
pop
loope
add
in
movs
loopne
dec
jg
imul
shl
icebp
push
ret
xor
loopne
mov
xchg
ins
mov
push
jo
sub
or
std
cmps
je
ss
xor
add
dec
neg
jo
(bad)
shl
rcl
add
inc
mov
rcr
jl
mov
ja
and
cmp
inc
fidivr
push
xchg
cwde
(bad)
fcmove
fistp
xchg
add
mov
mov
fcmove
mov
or
jmp
or
xchg
jmp
dec
push
les
sar
out
movs
sbb
adc
data16
jbe
(bad)
push
cmp
(bad)
in
pusha
cmp
inc
les
cmc
or
div
repz
dec
mov
imul
out
jecxz
and
or
addr16
ror
sti
push
xchg
xchg
push
int
lods
xchg
mov
mov
cli
pop
(bad)
dec
add
lock
add
add
add
rcr
mov
stos
js
repnz
test
pop
test
out
and
mov
add
faddp
iret
cmps
jmp
lods
jge
clc
inc
add
pusha
bnd
inc
push
cld
inc
lds
jle
push
in
mov
sbb
in
jmp
ror
retf
call
push
xor
cld
mov
pop
cdq
lock
mov
adc
call
fmulp
fmul
shl
test
push
dec
lock
cmp
add
iret
cmps
(bad)
nop
mov
jmp
sub
cdq
pop
adc
sahf
or
mov
jp
into
xchg
and
cs
daa
fisub
adc
pushf
(bad)
push
add
into
lahf
mov
fiadd
mov
mov
jge
ins
call
push
movs
mov
popf
fdivr
pusha
(bad)
clc
sbb
mov
test
cmp
ja
mov
xchg
inc
mov
aam
xor
popf
sbb
scas
fbld
or
cmp
push
fs
push
aad
jmp
xchg
sbb
dec
sbb
mov
push
push
out
lds
in
jbe
cmp
imul
mov
pop
data16
cmc
push
aaa
outs
scas
hlt
jp
adc
lods
repnz
jmp
mov
aas
xor
or
and
xchg
shl
pextrw
inc
jb
inc
and
sbb
lea
shr
pop
dec
shr
xchg
sbb
pushf
shl
test
or
add
pop
pushw
adc
pop
fisub
fwait
inc
dec
cmc
leave
in
in
adc
out
or
(bad)
xchg
adc
dec
arpl
loopne
and
xor
popa
movs
lock
cmps
in
fadd
mov
call
scas
sahf
jae
pop
lock
(bad)
das
dec
in
inc
scas
pop
inc
jb
fidiv
das
inc
cmps
in
xchg
jb
add
in
pop
xchg
fwait
and
add
sbb
sbb
bound
or
nop
out
mov
out
fistp
fdiv
sbb
ret
xchg
dec
jp
push
fxch
mov
mov
stos
pushf
retf
cmp
push
fmul
and
iret
xchg
or
lods
in
and
mov
loop
out
add
into
cmc
jo
pop
jl
(bad)
rol
jg
pop
mov
dec
pop
ret
out
jae
pusha
pop
jmp
mov
movs
mov
sub
fisub
pop
mov
jl
dec
std
mov
xor
pop
(bad)
sbb
adc
out
sti
sub
enter
jbe
xor
sub
xor
and
mov
stc
gs
mov
out
test
xor
mov
sbb
mov
pop
xor
pop
lea
mov
stos
adc
(bad)
pushf
inc
inc
push
test
jbe
pop
and
lods
push
push
xchg
fwait
loop
push
sub
ret
mov
or
inc
aad
mov
pop
xor
ss
outs
and
sub
pop
and
mov
jne
cdq
in
sub
out
jns
call
ror
xchg
jae
inc
adc
sbb
xchg
rcl
cli
xor
xor
xchg
add
sbb
test
push
cmp
or
das
mov
pop
xor
pop
push
mov
sbb
in
jno
dec
shl
rol
daa
sub
aam
jmp
fist
dec
arpl
mov
(bad)
daa
push
adc
pushf
aam
daa
inc
mov
fcomp
xor
inc
in
pop
dec
je
je
aad
sbb
mov
push
(bad)
adc
and
js
and
cmp
cmp
sub
lods
test
in
clc
jnp
ret
imul
push
popa
dec
outs
data16
fild
shr
jno
and
(bad)
cld
adc
fist
sub
sub
dec
out
sbb
jp
fsub
xchg
test
mov
push
cmp
jnp
aaa
stos
sti
clc
daa
push
inc
pop
pop
test
jns
cmp
add
inc
mov
mov
sbb
inc
and
iret
ins
cld
(bad)
icebp
mov
lods
mov
psubusb
push
(bad)
lock
mov
call
or
sbb
ds
sahf
stos
or
cmp
and
divps
push
xchg
repz
sar
mov
(bad)
jp
bnd
push
jecxz
mov
retf
sub
imul
push
pop
ret
ret
loopne
cli
movs
and
push
scas
stos
lea
xchg
inc
fs
sbb
mov
pop
or
add
rol
fidivr
les
cmp
repz
(bad)
sub
mov
inc
test
inc
arpl
push
js
jle
(bad)
or
loopne
dec
mov
lea
sub
or
inc
or
mov
pusha
ins
push
mov
xchg
push
sbb
xchg
dec
mov
mov
ret
xor
fisub
mov
pop
fucomi
ret
push
frstor
ret
retf
cmp
inc
pop
dec
sub
retf
cmp
out
lods
jb
dec
sub
jge
loope
idiv
sahf
mov
pop
sbb
mov
(bad)
sbb
xchg
ficom
into
sbb
repnz
dec
mov
pop
adc
imul
lods
inc
fld
idiv
xlat
rol
mov
cmp
pop
mov
and
xor
push
cmp
push
(bad)
cld
ret
jecxz
mov
cmp
pop
pop
in
push
in
lahf
sahf
sub
mov
xor
jbe
stc
or
lea
cdq
mov
fwait
ds
mov
xchg
dec
retf
fbstp
hlt
jns
mov
ds
cli
adc
sbb
addr16
scas
push
es
push
lahf
sahf
inc
dec
sub
gs
cmp
(bad)
sti
inc
mov
mov
(bad)
cdq
adc
stos
scas
ja
scas
jge
or
mov
add
jne
pop
sahf
aaa
dec
push
mov
dec
outs
(bad)
add
xlat
nop
fisubr
inc
xlat
inc
popa
and
(bad)
fdivr
inc
js
push
sub
jp
aad
mov
dec
sbb
fidiv
cld
push
aad
inc
out
pop
mov
sub
mov
add
push
mov
ret
push
icebp
lock
sbb
test
leave
fild
imul
je
es
xor
mov
mov
adc
ins
shl
fs
sub
and
jmp
sub
sbb
dec
sbb
cmp
mov
pop
into
and
adc
out
adc
repnz
inc
enter
and
out
adc
dec
pop
retf
jg
push
fdiv
sub
cmp
jmp
mov
ds
fwait
(bad)
inc
pop
dec
mov
xor
sbb
mov
jo
pop
push
pop
adc
adc
pop
test
cmp
int
dec
ins
sub
jmp
push
adc
dec
jmp
or
imul
aaa
and
jmp
ret
mov
jb
nop
dec
lea
pop
and
jge
popa
sub
imul
gs
(bad)
push
icebp
jmp
xchg
ds
push
xchg
loop
loop
sub
dec
sbb
cmp
(bad)
out
xor
dec
test
loopne
imul
pushw
dec
xchg
sbb
mov
retf
stc
pop
xchg
fmul
xor
dec
jno
cld
pop
stos
(bad)
(bad)
sbb
movs
fnop
xchg
mov
ja
mov
sbb
cmp
or
jne
js
sahf
pop
sbb
adc
xor
mov
scas
inc
repz
jecxz
fistp
aam
push
xor
pop
and
or
push
pop
sbb
mov
pop
adc
add
das
(bad)
lahf
and
call
test
mov
inc
mov
ror
fisttp
cmp
jecxz
mov
stc
jbe
in
(bad)
pop
mov
cmps
enter
in
xlat
ror
addr16
add
add
add
(bad)
push
dec
adc
pop
cmp
add
cmp
jno
sub
jne
in
pop
inc
inc
push
test
pusha
sbb
shl
cs
sbb
mov
aaa
fwait
or
ret
adc
jmp
jge
xor
(bad)
repz
adc
push
add
mov
sahf
scas
jge
inc
out
adc
ins
or
xchg
stc
clc
inc
lods
and
or
or
xchg
mov
std
pop
outs
mov
mov
mov
or
inc
fs
in
sbb
push
pushf
or
pop
mov
cmps
fst
enter
xchg
or
in
enterw
adc
sub
push
scas
mov
adc
out
stos
pop
cli
fild
(bad)
cdq
mov
xor
jl
jl
xchg
mov
push
not
or
push
int
ins
dec
cmp
call
cmc
cwde
sbb
sub
ror
adc
pop
ins
ja
jb
mov
push
jae
and
and
and
sbb
out
dec
in
out
ror
adc
mov
add
into
jne
or
inc
ds
mov
(bad)
stos
sub
ret
ins
mov
pop
mov
mov
sbb
addr16
dec
push
mov
xor
adc
sbb
movs
mov
das
ret
popa
mov
retf
rol
popf
dec
cli
and
out
les
sub
push
push
push
cs
and
stos
cdq
or
enter
pop
adc
retf
add
ss
cdq
scas
repnz
out
cmc
(bad)
xchg
out
adc
adc
shl
and
pop
movs
idiv
scas
(bad)
clc
in
mov
sahf
jle
ja
xchg
add
xchg
in
inc
cmp
push
pop
cmps
xchg
inc
sub
adc
jl
mov
call
(bad)
pop
stos
retf
mov
xchg
cli
outs
mov
mov
push
mov
sub
add
fsub
stc
mov
mov
or
lods
enter
mov
xchg
xor
(bad)
jo
stos
mov
mov
aad
or
comiss
fwait
mov
icebp
fbld
(bad)
or
popa
ja
dec
hlt
mov
adc
(bad)
xchg
scas
neg
sbb
sti
aaa
int3
mov
rcr
mov
pop
out
jns
out
mov
cwde
int
cmp
sbb
cmp
adc
bound
loopne
and
aaa
mov
jg
fistp
mov
daa
mov
clc
dec
xchg
dec
inc
jge
retf
movs
push
mov
inc
not
add
imul
jns
sub
or
scas
stos
push
call
fmul
push
loop
mov
push
and
mov
in
(bad)
cmps
dec
sbb
xchg
fstp
div
push
dec
add
movs
and
jae
adc
mov
inc
ret
and
jnp
daa
je
fmul
out
test
mov
jle
jo
mov
inc
adc
push
call
pop
mov
or
mov
pusha
jae
test
adc
je
in
lock
scas
inc
inc
addr16
jns
sbb
lods
and
movs
mov
fadd
cmp
fsubr
adc
cmp
mov
push
in
add
push
ret
cli
aam
mov
outs
sub
pushf
pop
add
bnd
mov
in
push
or
daa
mov
in
lods
mov
inc
and
push
mov
sub
call
std
pop
imul
jmp
inc
cmp
and
mov
cmp
mov
imul
ds
mov
aaa
pop
shl
adc
stos
cmp
sub
mov
shrd
cmp
mov
dec
cmp
mov
lds
in
mov
xchg
adc
pop
js
scas
fcmovnu
cmps
aaa
jg
(bad)
ret
sub
movs
and
cwde
pop
mov
lahf
out
mov
jge
fst
cs
adc
addr16
addr16
mov
cmp
fmul
pushf
shr
jge
jnp
stos
pop
sbb
cmc
cmps
lock
cmp
mov
in
pop
and
shl
pusha
iret
icebp
stos
les
fisub
mov
icebp
test
xchg
ds
test
lock
push
ror
stos
jg
jo
adc
call
shr
icebp
xchg
push
xchg
cld
or
cmps
aaa
(bad)
xchg
jmpw
iret
cmp
mov
(bad)
imul
mov
or
pop
mov
cs
in
pop
ds
push
pop
sub
jg
sub
sar
cdq
sbb
sahf
mov
imul
dec
push
cmp
adc
cmp
aas
out
fistp
imul
adc
mov
mov
mov
call
jmp
dec
pop
rcr
imul
mov
fisttp
and
or
repz
icebp
adc
out
bound
fwait
leave
sbb
jo
xor
pop
inc
add
pop
cdq
(bad)
push
jl
xchg
lahf
sar
call
xchg
sub
neg
ret
pop
scas
xchg
daa
call
push
jo
data16
lock
push
bnd
xchg
gs
rcr
push
inc
push
add
mov
mov
stc
dec
mov
fwait
add
and
jne
mov
pop
xchg
hlt
or
xor
or
lahf
adc
inc
sub
loope
sahf
out
scas
or
xlat
or
jnp
mov
mov
pop
push
xchg
lock
mov
movs
xor
test
clc
jo
fwait
std
inc
mov
inc
sbb
mov
repnz
push
mov
and
fld
add
or
pop
stos
pushaw
push
loope
ret
icebp
xchg
das
hlt
dec
mov
loop
aad
nop
mov
cmps
xor
lock
xchg
adc
mov
add
push
retf
imul
mov
das
bound
jne
inc
push
push
jle
sub
jecxz
in
jp
and
xor
lds
jg
or
mov
dec
adc
shl
mov
mov
dec
sbb
push
ins
mov
bound
add
dec
xor
pop
aas
pop
jmp
xor
out
outs
out
adc
pushf
call
clc
adc
in
out
or
and
fldcw
or
add
push
fmul
and
scas
cdq
cmp
pop
jmp
mov
ins
sbb
fs
into
popf
dec
sbb
mov
jge
aas
pop
pop
push
push
adc
test
adc
and
pop
mov
xchg
fcom
mov
mov
enter
not
fimul
lds
mov
jle
cmp
lock
inc
call
fmul
mov
retf
cmps
inc
and
sub
mov
call
ret
divps
daa
adc
mov
ins
inc
jp
xchg
aad
pop
xor
lods
adc
cmc
push
mov
cmps
mov
in
arpl
pop
jge
ins
imul
sbb
or
mov
bswap
push
lods
lock
in
aas
mov
pop
cwde
push
cmp
mov
outs
xor
mov
dec
mov
cli
mov
dec
movs
imul
call
jge
pop
xlat
stos
push
jne
push
xor
jns
dec
mul
add
ins
pop
cmps
dec
mov
mov
dec
push
pop
lods
rol
hlt
clc
lds
mov
xchg
cmp
fstp
das
cmp
pusha
in
and
fiadd
mov
jo
inc
outs
add
inc
pop
test
stos
cli
(bad)
(bad)
cmp
and
je
pop
mov
mov
jo
jecxz
ficomp
inc
push
fdivr
xchg
adc
pop
mov
sbb
pop
out
aad
or
retf
xor
dec
aas
test
repz
jns
movs
cmp
ret
mov
loope
xor
push
cmp
add
jp
or
fimul
sahf
pop
lods
dec
inc
popa
jmp
retf
mov
ins
imul
bound
mov
sub
add
jnp
jns
push
loopne
aam
cmps
lods
xchg
add
repnz
jae
std
jge
sbb
pop
adc
or
adc
mov
sahf
in
mov
addr16
aaa
mov
pusha
mov
mov
xchg
loop
mov
in
in
(bad)
cli
lock
xchg
ja
add
out
outs
sbb
mov
sahf
call
cs
dec
cmps
and
jmp
mov
hlt
addr16
rcl
mov
cmps
push
jae
ins
xchg
fld
inc
repz
lea
js
lods
sub
pop
add
pushf
or
data16
xlat
imul
fidiv
mov
retf
add
leave
mov
loop
out
leave
jns
and
aas
not
aaa
jbe
fnsave
ficom
mov
jnp
jmp
aas
adc
push
xor
ret
stos
jge
(bad)
jbe
pop
stos
or
mov
in
movs
jns
hlt
shr
mov
push
jg
pop
push
pusha
gs
popf
sub
fistp
mov
pop
mov
mov
jns
ins
sub
test
data16
xchg
push
call
(bad)
push
movs
mov
fnstenv
jmp
dec
popf
pop
jb
and
stos
mov
or
or
inc
pusha
jg
or
repnz
xchg
das
mov
fidiv
inc
xor
(bad)
adc
cmp
dec
out
add
jbe
or
cmc
(bad)
jnp
mov
push
not
not
in
jo
(bad)
ins
repnz
fstp
std
mov
and
cmps
sub
lock
stos
pushf
cmp
arpl
dec
test
xchg
addr16
test
dec
(bad)
pop
and
xchg
lahf
push
cmp
ins
cmp
mov
mov
lds
test
fs
adc
jno
push
jmp
js
xchg
or
sbb
ficom
push
xor
or
aaa
or
cmp
jno
outs
stos
add
mov
jl
mov
cmp
inc
xchg
loope
push
movs
sbb
cmp
add
(bad)
(bad)
adc
add
inc
and
(bad)
cs
idiv
loop
xchg
cwde
sub
add
test
(bad)
das
inc
xchg
aad
dec
lea
adc
add
xor
ficom
jno
adc
mov
cmc
mov
adc
in
mov
mov
fmul
jge
adc
add
push
popa
adc
cwde
cmps
out
jbe
or
call
jmp
sbb
mov
cli
sbb
ret
dec
loopne
repz
pop
lds
or
inc
xchg
mov
xor
repz
repz
scas
inc
(bad)
mov
das
jle
and
mov
in
xchg
out
sub
ss
fcomp
ret
jb
call
jmp
bnd
out
sub
jnp
int
outs
cmc
out
xchg
test
pushf
sahf
cld
out
push
imul
sbb
push
cli
sbb
add
retf
mov
pop
sbb
fmulp
sbb
push
jbe
or
xchg
xor
push
(bad)
cld
mov
mov
in
xor
rcl
fcomp
mov
ins
paddd
mov
push
xchg
pop
inc
and
aam
es
mov
(bad)
push
clc
jne
pop
test
pminsw
xchg
jl
xchg
push
das
(bad)
jecxz
pop
push
iret
xor
sub
xchg
mov
ja
fnstsw
inc
mov
cmp
pop
shr
(bad)
je
cmp
dec
daa
popf
scas
in
stc
adc
in
pop
sahf
in
nop
adc
outs
nop
gs
add
addps
adc
lods
retf
ret
lahf
icebp
ret
push
cmps
fld
jmp
(bad)
in
sub
stos
dec
popf
popa
lds
loope
xlat
jns
adc
jns
cmps
stos
mov
mov
jne
loop
sbb
je
pusha
xchg
cmp
jl
dec
cli
adc
or
gs
aaa
xchg
adc
push
pop
not
jo
mov
(bad)
push
push
lea
pop
adc
sbb
jp
or
aaa
lods
push
in
xchg
fidiv
data16
bound
jmp
sub
cmp
inc
mov
adc
cmp
mov
push
sar
push
add
jp
or
adc
add
and
ds
adc
std
movs
push
lods
cmp
xor
push
push
add
and
cmp
lods
js
sahf
push
mov
pop
adc
xor
xor
loopne
call
repz
fnstsw
leave
mov
jb
or
mov
jb
popf
idiv
or
and
sub
ins
mov
scas
mov
sbb
jmp
mov
inc
adc
(bad)
gs
aam
and
and
cwde
and
test
xor
or
int
cs
test
test
jmp
cmp
or
cld
(bad)
aas
pop
jp
in
and
cmc
and
push
ret
adc
xor
push
cmp
jae
or
jae
add
inc
mov
pop
das
xlat
mov
or
js
je
jns
cdq
rcr
lahf
sub
or
add
popf
cmp
fdiv
sbb
bound
js
mov
cs
out
retf
sub
push
lahf
stos
and
ret
add
mov
inc
pushf
ins
enter
pushf
sub
(bad)
adc
call
dec
or
data16
cmp
sbb
adc
sbb
add
mov
lea
into
pusha
xor
mov
mov
hlt
test
mov
dec
dec
add
push
scas
xchg
pop
mov
sub
push
(bad)
dec
cmp
push
cmp
xchg
ror
in
jge
repnz
mov
sbb
invd
es
cmp
cmp
mov
push
or
lea
(bad)
scas
mov
shr
leave
out
hlt
(bad)
sub
(bad)
push
ss
loopne
dec
dec
data16
cmp
mov
dec
mov
iret
lds
mov
mov
jl
mov
sahf
jmp
jecxz
xchg
iret
outs
jle
ret
enter
push
call
push
add
pop
in
popa
pushf
in
dec
dec
sub
push
inc
scas
(bad)
sub
mov
pop
movs
jne
cdq
into
data16
ja
(bad)
dec
in
xor
inc
xor
test
cmp
adc
out
pause
sbb
and
inc
sti
sub
outs
xor
and
xchg
lods
ins
movs
popf
inc
mov
xlat
adc
ret
fcom
into
arpl
mov
xchg
mov
jae
shl
iret
cmc
mov
in
or
mov
jecxz
xchg
les
int3
mov
lds
cmp
push
int3
sub
sbb
dec
(bad)
aam
pop
shl
repnz
xor
stos
int3
data16
(bad)
dec
pop
mov
sbb
adc
nop
imul
gs
hlt
fwait
and
xchg
daa
mov
or
and
dec
mov
adc
out
jo
sahf
xor
lds
inc
mov
inc
jne
lods
cmps
mov
in
push
cmps
xchg
add
repnz
out
xor
xchg
and
push
mov
xchg
sahf
ss
out
hlt
pop
jge
imul
sbb
push
pop
cwde
leave
inc
pop
loop
xchg
call
add
push
mov
jns
aaa
int
in
push
jmp
xor
cmp
cwde
into
into
mov
mov
into
xor
movs
jg
test
or
mov
jmp
imul
stos
call
push
es
push
(bad)
rcr
call
popa
ror
inc
jl
xchg
arpl
mov
sbb
repz
cs
ret
mov
fldenv
test
cmps
shl
lahf
mov
adc
and
outs
dec
mov
xchg
push
into
xor
jnp
jno
fisubr
xchg
or
cmps
out
out
cmp
dec
jecxz
call
mov
aas
jne
in
sar
loope
and
push
shl
push
inc
clc
dec
fxtract
ret
pop
bound
vshufps
xor
lds
pop
test
outs
ds
je
je
mov
xor
adc
fwait
loop
loop
xlat
popa
retf
jbe
adc
push
enter
lods
jecxz
xor
fwait
cmp
or
pop
lods
push
mov
mov
loopne
out
push
into
outs
lods
icebp
test
push
rcr
sbb
outs
sub
mov
mov
(bad)
jp
pop
xchg
xchg
jbe
push
inc
ds
aaa
mov
push
addr16
scas
mov
jno
das
(bad)
mov
(bad)
jo
lds
(bad)
retf
inc
xor
pop
scas
hlt
or
mov
inc
pop
mov
cmp
leave
pop
adc
xor
add
pusha
and
stos
mov
retf
lods
adc
xor
xor
mov
shl
mov
mov
stos
pop
sbb
push
sbb
rol
repz
neg
test
call
xor
jge
mov
stos
push
mov
push
ret
mov
imul
rcl
cwde
xor
jb
inc
test
jecxz
imul
and
mov
dec
push
popf
leave
call
fimul
loop
inc
mov
sub
mov
out
mov
push
dec
mov
and
bswap
xchg
add
jo
sbb
outs
pop
mov
inc
add
adc
pushf
jmp
loope
adc
addr16
enter
(bad)
mov
std
cmps
xchg
and
mov
stos
xor
scas
sub
cs
push
or
xor
push
and
push
push
(bad)
sub
jnp
shr
pop
retf
pop
xor
xchg
xor
out
mov
push
call
dec
jno
push
sub
mov
lods
ret
fimul
xchg
add
(bad)
sbb
dec
mov
jle
xchg
das
loop
mov
xchg
imul
fldcw
ss
call
fnstsw
mov
(bad)
int
jns
dec
fimul
push
jbe
mov
out
out
pop
je
mov
inc
das
fcomp
jno
call
movs
int
stos
add
inc
aaa
imul
mov
or
fidivr
push
inc
jge
out
inc
imul
(bad)
cmp
xor
sub
movs
icebp
push
pop
popf
jle
or
push
and
adc
sub
jl
push
inc
shl
xor
rol
sbb
mov
adc
or
mov
xor
fadd
mov
mov
mov
or
jo
xchg
imul
arpl
(bad)
cs
out
fistp
fnsave
hlt
mov
sar
lods
xchg
and
mov
cmp
pushf
adc
xchg
fs
add
sub
outs
xor
jle
push
rcr
push
add
jnp
mov
enter
sbb
popf
jno
cwde
xor
aas
xchg
leave
je
lds
fistp
mov
not
icebp
dec
daa
cmps
ins
push
enter
pop
mov
fistp
pop
aad
dec
mov
imul
mov
pop
(bad)
jbe
push
retf
dec
push
test
into
fs
pop
add
int
test
cli
scas
jecxz
cmp
push
or
add
pop
imul
mov
xchg
iret
addr16
adc
les
mov
fldcw
sub
fnop
push
jg
jge
or
mov
mov
mov
clc
mov
imul
loopne
sti
cwde
hlt
mov
add
sbb
out
mov
sbb
sub
inc
gs
mov
(bad)
(bad)
or
(bad)
sar
dec
daa
rol
fst
jb
jmp
jl
ret
dec
addr16
mov
and
lds
or
add
mov
inc
aaa
dec
jns
adc
push
scas
push
mov
mov
add
adc
clc
jecxz
xchg
scas
adc
into
call
fisttp
mov
scas
loope
addr16
cwde
movs
push
pop
xchg
ins
mov
cmp
push
or
lds
sbb
sahf
mov
sub
sub
pop
jecxz
pop
jae
adc
sahf
push
xchg
std
bound
popf
fld
jne
clc
idiv
mov
xor
mov
jae
sbb
cdq
sub
shr
xlat
push
cmp
ins
mov
adc
inc
das
das
xchg
int
cmp
movs
inc
mov
jno
xchg
jae
int3
mov
gs
ror
xchg
fsub
xchg
jbe
cdq
jle
pop
dec
pop
ins
add
sub
adc
xchg
popf
pop
sub
(bad)
js
ldmxcsr
mov
sbb
fwait
inc
ins
mov
mov
mov
xchg
pusha
out
adc
xchg
inc
mov
and
nop
les
stos
mov
push
ja
aaa
popa
jo
cmp
mov
inc
dec
add
mov
pop
xchg
sub
pop
xor
jl
mov
(bad)
fwait
sbb
addr16
and
xor
shr
mov
xor
jmp
jbe
hlt
push
adc
fimul
jmp
push
jne
add
and
add
xchg
adc
mov
adc
push
ins
xor
lahf
sub
or
fidiv
push
mov
push
mov
and
xchg
and
js
pop
stc
push
push
xchg
mov
fs
jbe
sahf
xchg
or
outs
jne
data16
or
xchg
(bad)
enter
test
cmp
in
mov
je
mov
adc
loopne
adc
push
add
scas
retf
push
into
popa
add
and
mov
ret
adc
(bad)
icebp
ja
lahf
popf
nop
mov
lods
pop
jo
iret
dec
(bad)
xchg
outs
push
fcmovb
iret
push
cld
add
jmp
xchg
clc
sub
test
mov
xchg
inc
fmul
and
sti
mov
xabort
stos
les
in
sbb
mov
lods
jno
leave
fwait
sub
push
xor
xchg
ret
inc
fild
sbb
pop
add
sub
sub
adc
mov
ret
nop
sti
lea
scas
and
push
jne
adc
sahf
cmp
adc
xchg
sar
mov
mov
test
pop
sub
lods
mov
mov
mov
cli
jmp
jmp
xchg
add
sub
inc
leave
test
pop
xor
arpl
leave
push
lock
jecxz
adc
movs
push
dec
cmp
test
call
lods
lods
jne
sbb
jns
shl
pop
push
pop
test
mov
mov
mov
mov
inc
sbb
cmp
adc
mov
jmp
push
ret
mov
mov
pop
pop
adc
das
inc
inc
jg
pcmpgtb
out
stos
mul
xchg
jno
jmp
xchg
out
push
clc
idiv
jno
push
jb
sar
push
lods
jb
int
movs
adc
es
mov
(bad)
mov
lahf
add
mov
sub
and
in
xchg
push
add
inc
ret
les
mov
and
ja
xchg
and
mov
aad
in
push
add
push
and
mov
mov
test
ret
cld
test
mov
stos
sbb
adc
nop
loope
mov
scas
push
(bad)
jmp
cmp
arpl
add
push
sub
(bad)
push
push
out
push
sub
dec
push
sbb
arpl
lahf
cwde
jecxz
mov
mov
xchg
ror
xor
dec
dec
cmp
cmp
mov
xor
loopne
out
mov
fisubr
push
push
pop
adc
call
jl
inc
fstp
add
xchg
cmps
xor
aaa
push
aas
sub
out
mov
fimul
inc
pop
pop
popa
jmp
pushf
push
sti
fstp
(bad)
jle
retf
addr16
(bad)
int
xor
jno
xchg
arpl
test
cmp
push
scas
sbb
or
jae
imul
movs
repz
mov
test
push
xor
aam
pop
jns
sub
adc
cdq
shl
movs
aam
fstp
(bad)
push
adc
cs
clc
je
jge
sbb
push
xor
jp
pop
dec
pop
pop
fisub
retf
test
sub
ss
(bad)
dec
fwait
pop
in
xchg
dec
jb
pop
push
add
push
xor
shr
jecxz
arpl
dec
aad
imul
data16
imul
rcl
pop
pop
sub
push
es
dec
xor
out
adc
and
shl
dec
and
xor
push
icebp
jns
imul
add
mov
pmaddwd
mov
inc
add
mov
loope
inc
xchg
fnstenv
xor
mov
xchg
mov
inc
aad
imul
outs
addr16
jno
push
stos
mov
dec
fisub
(bad)
mov
bound
aaa
dec
sub
xor
(bad)
test
or
lods
sar
or
repnz
dec
dec
jge
int3
pop
lock
and
lods
packsswb
xchg
jmp
dec
fcomp
popa
xlat
dec
mov
sub
add
sbb
xlat
jo
mov
push
popf
ror
xor
mov
mov
cs
mov
outs
and
or
pop
cld
mov
adc
fsubr
addr16
pop
inc
sub
add
xchg
mov
int
test
sub
push
(bad)
out
fdiv
sbb
xor
rcl
or
pop
loopne
mov
mov
aas
ficomp
sub
mov
icebp
mov
cmp
adc
popf
jle
cmp
add
and
mov
inc
out
push
adc
jne
das
test
jg
jecxz
add
push
xchg
ins
dec
aaa
test
mov
repz
xor
arpl
add
(bad)
aam
bound
mov
jecxz
inc
retf
in
add
enter
cli
lea
imul
pushw
dec
es
mov
or
pop
dec
js
push
hlt
fisub
dec
div
jmp
dec
call
cmp
movs
cmp
repz
mov
stos
sahf
jns
pusha
xchg
ficom
dec
add
mov
pop
xchg
int
dec
dec
pop
xor
push
(bad)
fcmovb
adc
dec
mov
dec
repnz
dec
in
out
or
sbb
fstp
sbb
mov
es
inc
pop
inc
or
jl
mov
loop
enter
inc
xor
imul
cmp
and
test
push
cmc
adc
mov
icebp
imul
mov
daa
sub
fwait
xchg
adc
dec
repnz
(bad)
push
mov
xor
sub
pop
pop
movs
sbb
pop
jb
push
pop
sbb
pushf
fwait
js
(bad)
xlat
mov
ins
sub
sar
pop
loopne
out
dec
sbb
or
and
std
jmp
push
sub
rol
xlat
sub
jbe
cs
enter
sub
(bad)
mov
adc
add
xor
leave
lock
pop
adc
mov
jne
cmc
lods
(bad)
mov
mov
or
in
xor
add
cli
lds
or
bound
fmul
xchg
jle
lahf
enter
test
pop
xor
pop
outs
pop
jno
mov
into
mov
scas
mov
imul
jne
inc
aaa
mov
add
fcomp
xchg
mov
pop
fdiv
stos
push
in
adc
sar
push
xchg
out
std
lea
cmp
das
add
nop
outs
mov
es
and
xchg
jnp
inc
loopne
ins
inc
push
sub
fisub
ret
adc
out
mov
jle
hlt
adc
add
ins
pusha
push
loopne
fwait
mov
lods
scas
int3
in
fwait
sahf
mov
ins
fcomp
movs
cmp
sar
fld
lds
movs
sar
mov
push
sbb
popa
inc
das
cwde
aam
scas
sahf
lea
outs
sar
outs
adc
aam
addr16
or
mov
lds
inc
fwait
add
pop
xor
call
cmc
cmp
pop
hlt
jo
push
add
mov
push
movs
sbb
fnstsw
mov
sbb
mov
add
cmp
lds
jg
xor
mov
or
jmp
cs
pop
add
inc
lahf
mov
inc
stos
repnz
(bad)
out
cld
punpcklwd
and
lahf
inc
pop
popf
lods
daa
movs
popf
call
pop
out
loope
shr
clc
mov
jnp
retf
fcomp
mov
add
jns
mov
push
add
rcl
in
cld
fnstcw
cmps
cld
or
or
sub
adc
sti
sbb
stos
sti
outs
dec
cdq
mov
xchg
sahf
into
jp
and
fnstenv
out
inc
out
xchg
or
jae
aam
movzx
test
add
(bad)
mov
cli
scas
cs
mov
inc
push
js
mov
test
jecxz
push
div
mov
sbb
dec
test
dec
shr
or
pusha
outs
and
ror
pop
inc
lock
jne
push
inc
mov
shr
or
pop
test
mov
dec
mov
xchg
mov
aam
xor
jno
cmps
dec
frstor
mov
imul
je
ficomp
mov
mov
bound
inc
out
jmp
icebp
les
ss
or
xor
mov
ins
inc
jmp
outs
xchg
hlt
add
cmp
dec
gs
ss
sar
dec
inc
(bad)
test
cmp
cwde
repnz
dec
pshufw
scas
int3
repnz
mov
pop
fbld
frstpm(287
and
inc
sub
mov
cmp
out
aam
(bad)
xor
add
cmp
jp
fs
add
loop
mov
sub
stos
rol
or
pop
movs
add
(bad)
xor
jnp
push
cmps
movs
add
and
jge
xchg
sbb
push
shl
stos
and
std
mov
mov
lods
and
sbb
and
push
mov
fisubr
dec
scas
mov
sbb
cmc
fucompp
in
sti
sub
mov
int
(bad)
mov
sbb
jl
in
scas
xchg
jge
add
scas
imul
jns
mov
jp
(bad)
pop
pop
push
jne
fidiv
pusha
mov
jmp
jo
xor
mov
dec
ja
stos
mov
and
sbb
cld
jp
cmp
push
cmp
loope
pop
popf
lea
clc
shl
ss
jle
loop
mov
imul
(bad)
push
out
out
hlt
stos
add
mov
dec
xchg
pop
jbe
pop
cmp
movs
mov
aaa
adc
call
fchs
mov
inc
xchg
cmps
mov
out
out
loop
mov
sbb
jne
cmps
test
je
add
scas
push
cwde
sub
add
ds
test
popa
cmp
imul
inc
loop
push
(bad)
pop
pop
out
mov
ret
(bad)
bound
jne
adc
dec
cwde
es
out
push
aas
out
xchg
sub
enter
inc
pushf
(bad)
cmc
stos
mov
mov
mov
and
call
movs
pop
ret
stos
jnp
fs
push
cmp
mov
in
loop
adc
inc
fs
(bad)
and
lock
mov
push
or
pop
pop
jnp
jl
mov
push
xchg
adc
cmp
in
iret
mov
and
mov
mov
mov
(bad)
iret
dec
sbb
cmps
jecxz
(bad)
adc
movs
sti
or
cli
xor
and
or
inc
dec
push
outs
add
int3
loopne
pop
and
jbe
jo
inc
or
and
in
mov
jecxz
xchg
mov
lods
scas
jg
jle
test
cmp
pop
into
dec
jb
test
xor
cmp
leave
fcom
outs
and
cmp
mov
popf
es
mov
out
mov
pop
xor
ins
push
jne
stos
xor
sub
stos
pushf
push
sub
mov
lock
hlt
push
nop
fidivr
test
mov
lahf
xchg
jle
jecxz
movs
icebp
(bad)
outs
add
sub
fidivr
test
sbb
or
(bad)
pop
retf
js
sbb
xchg
(bad)
push
ret
lds
sub
cmp
inc
jbe
sub
js
fst
jge
cli
and
push
daa
xchg
pop
cdq
inc
sub
fsubr
in
sub
dec
push
adc
xchg
push
pop
iret
shl
popf
cmp
in
dec
xor
adc
lods
outs
fadd
mul
cmp
cmp
mov
fwait
cdq
repz
or
sub
cli
dec
cwde
leave
mov
clc
movmskps
ds
scas
stc
int
ds
pop
mov
es
xor
cmp
inc
xor
in
neg
mov
cmps
or
sub
int3
adc
aas
call
adc
enter
lock
sbb
mov
loop
cmp
dec
hlt
std
(bad)
mov
inc
sahf
pop
jecxz
lods
sahf
enter
aas
xor
dec
imul
test
jns
in
add
bound
scas
adc
mov
xchg
push
jp
ror
push
repnz
push
mov
and
icebp
in
add
(bad)
cmp
ficom
and
mov
add
mov
inc
je
test
pop
push
(bad)
nop
jg
fiadd
or
cld
rcl
sub
push
pop
ret
push
mov
mov
sub
jne
jmp
xchg
lock
mov
shl
js
and
xchg
test
pop
inc
mov
xchg
imul
fxch
push
cmp
mov
out
jns
shr
jbe
inc
(bad)
in
push
mov
fsub
je
mov
dec
imul
cmp
mov
movs
sbb
ins
and
inc
pop
ds
sbb
xchg
hlt
in
and
in
bound
add
fbstp
xor
push
xchg
add
retf
push
inc
inc
(bad)
ret
repnz
cld
push
push
sbb
adc
daa
cli
mov
out
or
js
fwait
cli
sub
or
xchg
sub
cwde
leave
mov
push
stos
js
mov
push
xchg
clc
repnz
das
rcl
xlat
arpl
ror
nop
pop
inc
loopne
inc
push
div
jp
sub
mov
xchg
dec
(bad)
imul
push
and
pop
cmps
sub
sub
sub
leavew
push
rcr
jb
sub
call
cdq
out
pop
enter
dec
out
pop
inc
stos
and
repnz
pop
data16
rol
add
sbb
(bad)
push
cmp
daa
jle
fcomp
ss
mov
in
push
or
sub
call
sub
and
inc
mov
push
test
movs
aam
inc
xor
and
les
cmp
data16
sar
cli
and
dec
aaa
jbe
pushf
xchg
ja
sbb
out
xor
push
push
js
sub
jne
pusha
inc
sub
imul
mov
xchg
dec
inc
or
mov
in
dec
adc
gs
and
pushf
retf
addr16
out
push
jne
mov
xchg
iret
cdq
fimul
jbe
stos
push
ret
nop
add
mov
or
and
sbb
sub
aad
or
ins
jl
outs
inc
adc
movs
in
dec
inc
nop
mov
ret
into
and
or
add
inc
sub
adc
mov
hlt
aaa
pop
lods
call
ror
xor
outs
(bad)
shl
je
cmp
sbb
and
or
jbe
stos
cwde
sar
xor
push
jl
rcl
and
daa
ret
or
xchg
lds
mov
xor
adc
adc
mov
lods
out
and
add
pusha
push
pop
outs
mov
mov
(bad)
fucomi
aad
not
pushf
inc
fiadd
sub
and
xchg
and
push
leave
(bad)
jg
jl
xchg
sbb
lea
inc
dec
ficomp
mov
call
in
sbb
jle
add
out
shl
push
ror
mov
sub
out
(bad)
jae
mov
push
call
frstor
inc
outs
push
or
lea
sbb
mov
inc
pusha
add
xor
fidivr
add
push
arpl
cmp
pop
mov
mov
jp
adc
push
pop
shl
inc
cwde
lds
aad
pusha
shl
scas
sub
mov
jecxz
lea
mov
mov
fld
icebp
xor
sub
icebp
lahf
(bad)
fmul
fdivr
push
popa
ins
and
ret
mov
mov
pop
sbb
cmp
push
lock
jle
or
(bad)
sub
stos
and
jmp
fwait
les
sbb
es
pusha
dec
pop
sar
sub
repz
push
popf
mov
out
repz
jle
or
cmp
arpl
les
nop
cmp
xchg
out
cmps
or
and
(bad)
clc
retf
cmps
dec
or
adc
in
jl
shr
lods
cmps
push
shl
push
jg
jl
add
lea
xchg
xchg
imul
push
cmp
cmps
std
push
lods
mov
jl
ja
sbb
mov
xor
add
add
sub
ret
in
add
pop
aaa
das
(bad)
add
adc
scas
mov
mov
je
sbb
cmp
fwait
retf
dec
in
pop
jmp
fucomi
push
mov
fst
int
out
and
shl
mov
inc
outs
repnz
fcom
mov
and
aad
loop
pop
das
mov
jae
and
aaa
jnp
test
in
xchg
call
pop
cdq
jae
push
lods
sti
pop
mov
dec
jmp
outs
cmc
into
fwait
mov
inc
jmp
xchg
fcmovbe
cmp
jmp
jge
mov
pop
syscall
sbb
je
fmul
sub
add
(bad)
test
dec
data16
ficomp
sti
jp
fiadd
sahf
push
mov
adc
or
mov
js
jbe
call
(bad)
xor
cmp
cmp
retf
div
push
call
loop
rcr
adc
pop
and
mov
xchg
pop
(bad)
adc
in
in
mov
stc
ret
xchg
std
jb
and
inc
sbb
enter
jmp
(bad)
xchg
lea
js
inc
pop
xor
in
add
pop
shl
pop
stos
xor
mov
pop
and
mov
ret
shl
jmp
ins
hlt
ret
movs
je
cmps
mov
or
adc
jge
mov
inc
sbb
push
xchg
ins
pop
xor
jge
mov
xor
fmul
dec
jp
in
mov
cmp
repnz
in
(bad)
adc
or
pop
leave
data16
test
sbb
pop
rep
jnp
sbb
push
outs
inc
fidivr
loop
mov
scas
mov
movs
xchg
and
sbb
pop
mov
(bad)
lea
int3
fdivr
sbb
cmps
out
or
sbb
ret
cmps
rol
mov
(bad)
sub
ret
xchg
dec
mov
jp
addr16
inc
jmp
adc
push
out
ds
mov
ins
inc
jmp
pop
push
inc
cmp
int3
call
fcom
in
cli
inc
xor
daa
jg
push
out
mov
out
sub
mov
(bad)
push
jge
push
pop
adc
ror
pop
inc
mov
clc
cmp
ins
pop
mov
pop
gs
lock
jb
test
ins
push
jbe
xsave
dec
add
jb
pop
in
lods
sti
mov
mov
mov
inc
aaa
xor
inc
pop
rol
mov
(bad)
jns
mov
retf
in
hlt
bound
dec
enter
pop
sub
test
loop
xlat
stc
xor
out
sbb
adc
cmp
in
lds
aas
pop
(bad)
sub
dec
sar
adc
test
mov
rcr
pop
out
pop
cmp
in
adc
in
arpl
dec
pop
pop
mov
jne
in
push
out
sbb
xchg
retf
dec
test
mov
and
pop
(bad)
jno
mov
dec
and
jge
iret
popf
push
lods
out
pop
mov
dec
(bad)
out
add
pop
out
int
pop
js
push
mov
jae
mov
mov
mov
xor
jns
push
js
pop
lods
mov
enter
inc
xchg
mov
cwde
(bad)
aam
sbb
cmp
jle
sbb
dec
stos
and
dec
sbb
pop
cmp
loop
popf
out
ins
das
jns
js
(bad)
cmp
inc
sub
imul
push
mov
out
(bad)
addr16
push
mov
mov
pop
std
int3
loop
enter
or
int
inc
sahf
es
mov
mul
jns
jp
dec
cmps
jg
mov
out
movs
(bad)
mov
fbstp
sub
(bad)
mov
push
pop
fcom
mov
es
mov
add
test
mov
mov
push
add
test
xchg
cmp
enter
pop
mov
inc
mov
ret
mov
pop
mov
ret
fild
repz
xor
pop
xchg
out
sub
adc
xchg
mov
lods
cli
jmp
jg
imul
movs
add
in
sub
shr
mov
hlt
and
std
cmp
loope
push
cld
in
mov
pusha
jl
push
dec
std
cmp
lods
(bad)
jl
and
(bad)
mov
jne
mov
adc
xchg
mov
shl
or
data16
mov
mov
mov
or
inc
lods
mov
cmp
or
lahf
sub
jge
and
cmp
pop
leave
sub
scas
loopne
gs
aas
repz
mov
lock
mov
jae
adc
add
jbe
sbb
mov
cmp
push
aas
mov
arpl
mov
cs
xchg
dec
sbb
stc
mov
sub
xor
aas
mov
xchg
std
inc
idiv
adc
xchg
rcr
sub
inc
sti
aaa
xor
test
fsub
jnp
push
and
test
inc
cmp
aaa
dec
int3
mov
daa
rcr
loopne
push
push
or
std
gs
adc
sub
sahf
shl
and
xchg
sbb
ds
xor
add
push
pop
mov
jb
push
pop
inc
cmps
sbb
mov
dec
push
test
and
in
pop
cmps
idiv
inc
ret
retf
test
dec
cs
mov
bound
sub
mov
mov
push
popf
mov
pushf
jge
jnp
pop
ror
and
loop
xor
mov
lea
daa
rcl
jmp
sub
inc
lods
jb
fild
dec
out
stc
sub
stos
jb
and
shr
inc
pop
pop
pop
mov
add
pop
sbb
sub
out
xchg
add
ret
in
iret
mov
pop
nop
or
std
inc
clc
ins
test
jmp
mov
aas
fdivr
push
pop
sti
loopne
jb
mov
js
and
iret
cdq
cli
cmp
je
cli
shl
ins
xor
mov
pop
(bad)
adc
mov
sub
call
inc
fcomp
xchg
pop
js
jmp
fnsave
aam
iret
lahf
jns
inc
and
mov
fist
inc
sub
fidiv
les
xlat
ja
test
push
jne
(bad)
jmp
jb
push
sbb
cmp
fucomi
aam
add
push
js
repz
outs
cmps
dec
aaa
ret
(bad)
pop
dec
dec
inc
adc
pop
xlat
sub
retf
push
xchg
mov
mov
and
jb
pop
ja
jo
(bad)
outs
xchg
jno
mov
mov
(bad)
out
dec
hlt
scas
xchg
or
push
rol
sbb
cs
adc
adc
dec
sbb
jg
sti
in
fwait
retf
(bad)
push
(bad)
call
xor
loop
sub
jnp
push
mov
push
es
retf
cmp
not
cmp
enter
enter
pushf
popf
push
xor
adc
das
sahf
repz
push
and
pop
add
inc
and
movs
rcl
fs
mov
ins
mov
sub
xor
test
cli
aaa
test
fs
mov
in
std
adc
jnp
mov
and
imul
dec
ja
pminub
lods
cli
mov
push
rcl
pop
gs
outs
jb
(bad)
test
scas
dec
popa
mov
(bad)
(bad)
imul
pushw
xchg
xor
aad
sub
or
sub
push
xlat
ret
mov
dec
leave
cmp
mov
cmps
inc
loope
shl
or
iret
out
(bad)
cmps
movs
sub
jle
dec
or
in
call
mov
pop
bound
lds
pusha
fucomip
mov
repz
dec
ret
ret
fdivr
imul
or
and
cmp
into
inc
xor
adc
mov
jg
cwde
mov
inc
(bad)
int
loop
(bad)
imul
cmp
je
pop
xchg
bound
inc
into
sahf
cmps
or
push
cmp
aad
sbb
in
jae
add
add
mov
mov
mov
mov
xchg
jns
jns
shl
add
loop
imul
sti
dec
mov
dec
lea
sti
sub
pop
mov
push
xchg
stos
fidivr
push
psllw
sub
rol
outs
mov
mov
test
sbb
add
jne
sbb
xchg
dec
fimul
aad
icebp
cmp
call
sar
lahf
adc
(bad)
sub
out
xor
and
push
out
or
test
inc
add
test
dec
ret
mov
dec
mov
(bad)
jecxz
hlt
lock
cs
inc
into
fdivr
fiadd
push
pop
inc
jge
rcl
jl
fidivr
xor
jge
jmp
xor
jnp
enter
nop
jb
lahf
cmps
and
push
cmps
push
cs
je
sub
push
add
jae
pop
imul
mov
test
pop
xchg
inc
sbb
in
xchg
cmp
mov
inc
push
mov
xor
je
popf
addr16
(bad)
rcr
jnp
ror
bound
(bad)
add
retf
xchg
ret
mov
jg
add
push
push
or
jg
mov
clc
ffree
outs
jl
or
mov
aas
stc
ins
fistp
mov
in
mov
call
xor
test
mov
push
dec
shl
inc
test
scas
(bad)
inc
inc
pusha
sub
ins
clc
push
push
dec
push
dec
div
test
push
jmp
data16
(bad)
jmp
xchg
mov
retf
pop
push
pushf
clc
into
sbb
retf
cmp
mov
cld
loop
fild
shl
adc
fcmovne
dec
inc
rcr
gs
nop
mov
push
unpckhps
push
add
stc
(bad)
mov
mov
xor
test
adc
into
push
retf
jbe
dec
cmc
call
outs
popf
neg
inc
int3
jo
push
jbe
sub
push
inc
cs
jge
xchg
lock
push
inc
adc
add
xor
aad
inc
rcr
mov
inc
xor
lock
push
push
pusha
in
jno
xor
je
lods
movs
aad
lods
mov
arpl
es
fist
cmp
stos
jno
jecxz
fdivr
xor
pop
cli
fnstcw
cwde
mov
sub
xchg
adc
ss
xchg
pop
mov
fcmovb
xchg
call
sub
push
xor
repz
hlt
daa
jne
or
outs
dec
repnz
stos
in
sbb
nop
test
jmp
enter
inc
add
and
pop
push
imul
jno
pop
mov
aas
cs
inc
retf
pop
lods
loope
push
sub
inc
div
dec
cwde
fidivr
or
scas
sbb
xchg
lods
xor
test
outs
sbb
sbb
mov
ins
mov
mov
mov
pop
mov
popa
lock
sbb
push
lds
inc
ret
mov
jle
std
(bad)
out
enter
jns
push
rcl
popf
push
test
pminsw
loop
mov
pop
and
pop
icebp
adc
dec
dec
and
mov
mov
mov
fwait
dec
sbb
test
push
pop
and
pop
sahf
(bad)
dec
inc
aam
sahf
sbb
fbstp
outs
aad
stc
cmp
jle
stc
jb
jo
sbb
mov
scas
dec
mov
mov
dec
lods
mov
mov
pusha
sub
sub
aam
mov
mov
dec
shl
mov
and
jge
push
pop
jo
aad
xchg
push
cmp
fcmovnb
lock
(bad)
clc
and
jbe
xor
sub
pop
and
or
fstp
mov
mov
rcr
into
stos
fdiv
stos
mov
popa
rcl
jl
ret
xchg
movs
loopne
cmp
ds
je
and
icebp
mov
ins
pop
movs
jno
mov
int
cmp
push
dec
dec
int
in
adc
mov
leave
add
jmp
test
gs
mov
and
rol
ja
in
das
fstp
mov
jnp
in
cmc
fstp
jb
inc
push
and
inc
icebp
lock
mov
(bad)
mov
xchg
movs
lods
test
mov
xor
dec
adc
(bad)
push
bound
push
or
out
outs
dec
repnz
bound
add
inc
icebp
stos
push
fstp
ja
adc
push
xchg
or
inc
arpl
outs
int
arpl
fimul
push
sti
push
outs
lods
mov
and
cmp
dec
addr16
inc
inc
push
popa
ja
sub
push
jbe
jo
test
inc
out
jg
sub
out
xchg
stos
outs
shl
inc
cmps
adc
and
cmp
imul
jecxz
push
cmps
stc
das
movs
cmp
jge
mov
mov
jno
std
inc
repz
test
aaa
cdq
jg
clc
xor
pop
mov
gs
sub
mov
sbb
mov
push
ret
ja
stos
adc
pop
push
fcomp
mov
and
jg
add
cmp
(bad)
repnz
pop
jecxz
add
(bad)
push
retf
push
stos
movs
sti
pop
xor
xor
pushw
xor
mov
sbb
cmp
mov
jp
scas
and
dec
pop
es
jnp
push
sbb
inc
(bad)
push
jecxz
mov
xchg
and
or
iret
pushf
loopne
jae
retf
xchg
pop
clc
mov
mov
jnp
aad
clc
jg
mov
jne
movs
sbb
cwde
xor
je
aas
xchg
xchg
cmp
pop
bound
cli
int
mov
and
dec
fs
loope
frstor
repz
nop
imul
cmc
xchg
ret
adc
jb
lahf
xor
mov
cmps
pop
inc
push
fcmovnu
mov
jecxz
xchg
or
push
movs
sub
sbb
mov
ret
ins
sbb
inc
cmp
(bad)
cmp
xor
lock
iret
cdq
pop
jp
jle
jp
into
sub
add
loopne
test
cs
cmp
and
cdq
repnz
stc
pop
shl
sub
adc
push
adc
pop
lea
and
and
je
or
movs
sub
inc
xor
adc
test
dec
je
nop
pushf
jmp
es
iret
sbb
ret
cmps
add
sbb
pop
cs
fld
hlt
adc
sub
sub
inc
cmp
push
js
add
fnstcw
add
mov
stos
mov
mov
clc
push
adc
rol
sti
jnp
dec
call
mov
pop
and
or
rdtsc
sbb
ss
retf
outs
sbb
adc
dec
xchg
lods
xor
jne
jb
int3
rol
cmp
lock
adc
push
retf
mov
xchg
pop
loopne
in
push
dec
mov
call
push
cmp
push
or
sbb
xor
mov
dec
xor
cwde
jae
mov
mov
int3
inc
xlat
pushf
jb
loopne
jecxz
push
into
rcr
xchg
dec
push
ins
loop
sub
stc
mov
mov
stc
mov
mov
cs
daa
lock
in
stc
push
scas
mov
addr16
push
adc
pop
and
addr16
popf
sbb
aad
call
enter
cmp
(bad)
xchg
xchg
add
gs
pop
mov
pop
pop
cdq
xchg
sub
dec
mov
imul
xchg
(bad)
sbb
jbe
int3
cmps
dec
les
jo
xor
sub
sub
dec
jp
mov
mov
cmp
inc
call
xchg
cmp
jl
lods
cmp
hlt
xchg
mov
jns
aaa
lods
dec
shl
xchg
fnstenv
jg
mov
repz
cld
push
pop
rcr
xchg
and
gs
push
aam
jnp
or
sub
pop
sbb
into
mov
ficom
outs
rcl
rep
inc
xchg
fiadd
shr
pop
retf
dec
pop
push
test
jle
mov
add
jnp
call
and
pop
movs
es
(bad)
xchg
and
es
inc
call
fsub
mov
dec
pop
fcomp
lahf
(bad)
int
pushf
xchg
jno
add
cmps
jmp
hlt
push
aam
lods
jmp
and
or
test
adc
test
pop
shl
jl
mov
sub
(bad)
dec
pop
sbb
jle
stos
into
push
jmp
in
adc
sub
mov
xchg
jmp
xor
call
push
les
mov
in
xchg
gs
(bad)
jmp
sub
mov
dec
sbb
inc
movs
pusha
pop
push
mov
xor
fiadd
mov
sti
pop
cwde
push
imul
mov
shl
inc
iret
inc
dec
push
mov
push
in
addr16
das
popf
add
mov
jmp
xlat
lock
lock
add
add
repnz
mov
out
aaa
daa
dec
jns
push
rcl
xchg
push
cmp
jnp
scas
cdq
jno
cmp
pop
aas
inc
push
inc
inc
dec
cmp
maskmovq
div
test
sub
mov
dec
out
retf
jno
xor
data16
cmps
mov
popa
push
push
push
lock
mov
sub
aas
mov
scas
xchg
pop
add
or
add
lds
neg
jo
int3
and
sub
mov
pop
stos
repz
mov
test
(bad)
aaa
sub
fs
jns
lock
inc
sbb
scas
mov
push
iret
mov
mov
dec
shr
dec
inc
jne
ds
aad
and
je
jno
cmps
retf
inc
mov
cmp
jmp
loopne
aad
push
test
xor
iret
aas
(bad)
dec
retf
ja
mov
popa
or
scas
xlat
inc
push
loop
rol
les
jmp
(bad)
(bad)
jp
xchg
int3
add
lods
dec
cmp
js
neg
cs
cmps
ins
aaa
add
shl
(bad)
loopne
xor
pusha
add
cmp
or
mov
sub
push
pusha
adc
add
bound
xchg
push
pusha
retf
idiv
sub
pushf
rcr
rcr
add
dec
pop
add
mov
inc
inc
in
mov
xchg
out
xlat
rcr
inc
movs
stos
aam
mov
sub
gs
fnsave
xchg
cmp
icebp
add
jl
(bad)
and
aas
call
rol
cmp
test
or
push
fwait
inc
add
adc
dec
dec
fld
mov
test
or
xchg
movs
push
loopne
mov
jmp
xchg
aaa
(bad)
int3
push
dec
xchg
cmp
add
and
jecxz
xor
push
mov
call
lods
test
cmp
sbb
and
in
loopne
mov
das
xchg
int3
xor
pusha
ins
add
aad
mov
gs
ficom
mov
in
stc
imul
movs
or
adc
inc
xchg
sti
xchg
jbe
pop
sbb
mov
dec
or
ins
inc
popf
(bad)
repnz
pop
pop
mov
inc
shl
idiv
jo
pop
hlt
outs
mov
inc
mov
retf
clc
retf
arpl
adc
sahf
lock
inc
jp
jmp
adc
mov
push
mov
int3
les
add
ds
push
loope
retf
or
(bad)
push
push
lea
stc
sahf
cmp
imul
push
and
adc
jmp
or
push
fucomip
adc
inc
loope
jnp
jmp
imul
in
add
out
dec
repnz
xchg
sub
xchg
or
clc
cmps
push
dec
jb
sub
or
xchg
repnz
mov
push
dec
inc
icebp
dec
mul
xor
add
stos
xor
jecxz
rol
cmp
movs
jne
pop
sbb
std
push
jae
xor
and
push
outs
adc
mov
jmp
ret
sub
xor
daa
mov
not
arpl
lahf
xchg
xchg
imul
fisttp
dec
add
jecxz
stos
iret
mov
sbb
leave
lods
mov
repz
or
repz
mov
mov
xor
out
add
or
out
sti
into
cld
hlt
or
(bad)
or
add
std
inc
fidiv
cmp
pushf
mov
pop
loopne
xor
cmp
xchg
inc
rep
enter
mov
push
and
popa
adc
pop
xchg
popa
mov
fistp
push
cmp
mov
cmp
std
nop
out
inc
pop
or
mov
sti
addr16
inc
mov
inc
fidiv
repnz
adc
ds
shl
(bad)
xchg
or
stc
sub
cs
sub
jle
scas
scas
icebp
xchg
cmp
arpl
sub
or
cmp
add
aad
pop
mov
iret
ins
call
enter
popa
(bad)
mov
sub
loope
dec
test
test
in
sbb
dec
or
outs
in
sbb
push
jmp
lods
sbb
pushf
cmp
cdq
pop
dec
mov
or
ret
cmp
cmp
sbb
push
jge
pop
es
enter
in
test
xchg
inc
xor
mov
das
into
xlat
call
movs
sbb
outs
push
fcom
jo
jecxz
das
dec
mov
jns
rcr
pop
mov
in
retf
fsubr
inc
int3
sbb
adc
retf
in
call
fwait
std
mov
inc
les
push
(bad)
in
xchg
call
jmp
xor
mov
mov
scas
jl
add
clc
fbstp
sbb
cmp
cdq
mov
imul
aam
jmp
jmp
xor
mov
pop
(bad)
movs
jecxz
jge
or
push
cmp
and
xchg
imul
fdivr
retf
pop
inc
mov
push
inc
mov
inc
int
enter
pop
sub
int
add
jp
push
sub
dec
pop
jne
push
call
hlt
mov
sub
clc
mov
jp
push
sbb
call
pop
pop
mov
jno
call
mov
in
mov
cmp
jns
pop
stos
cmp
rcr
cwde
sbb
cmps
aas
lea
sbb
mov
outs
and
push
add
movs
sbb
sub
iret
fdivr
and
lods
out
or
mov
jge
test
sub
mov
cdq
movs
iret
pop
iret
lods
aaa
xor
ins
xor
ins
jbe
push
dec
test
pusha
push
pop
sbb
jl
movs
bound
sub
inc
lea
sub
push
cld
and
ins
or
mov
push
sbb
popf
adc
cmp
(bad)
lahf
xor
push
xchg
jno
add
scas
in
push
loope
ret
push
test
ret
imul
outs
mov
mov
cmc
mov
stos
mov
xchg
xchg
pop
add
je
sbb
not
mov
adc
inc
or
mov
ret
(bad)
cli
loopne
movs
les
xchg
sbb
push
lds
push
and
fstp
mov
add
jo
and
out
add
dec
dec
mov
retf
and
sbb
mov
mov
dec
mov
(bad)
(bad)
mov
std
fistp
push
mov
jecxz
xchg
adc
xor
and
(bad)
or
mov
mov
jmp
aam
push
mov
jmp
ret
push
ins
and
fwait
mov
adc
setnp
addr16
pop
out
cmp
mov
inc
ja
adc
cmp
xor
aaa
into
lahf
push
(bad)
fcmovb
in
js
popa
push
stos
movs
imul
add
dec
sub
xchg
or
scas
jle
pop
ret
(bad)
or
and
xor
pop
push
fisub
(bad)
imul
dec
pop
popa
push
push
add
ins
push
inc
inc
and
cwde
dec
mov
mov
dec
dec
push
add
(bad)
sbb
arpl
or
ficom
fs
idiv
outs
enter
push
pop
pop
inc
pop
fs
sbb
and
aas
cli
in
mov
push
mov
out
jb
movq
ret
pop
ror
add
push
stos
add
repz
cld
pop
pop
jmp
push
lds
cmps
jbe
lods
pop
ret
into
shl
mov
je
xor
movs
dec
inc
outs
sub
gs
(bad)
je
pop
fadd
push
mov
mov
add
mov
push
popf
dec
push
xor
mov
cwde
inc
cmp
or
push
jmp
ds
sbb
test
pop
inc
inc
sub
out
out
xlat
int
adc
mov
(bad)
adc
lahf
mov
daa
enter
pop
and
call
aas
loop
int3
pop
repnz
add
nop
dec
hlt
div
mov
bound
(bad)
mov
pushf
sub
nop
fidivr
and
jmp
int3
dec
test
dec
mov
mov
nop
xchg
lea
repnz
and
add
dec
(bad)
adc
cwde
ret
cmp
push
(bad)
mov
das
gs
inc
cmp
bound
push
test
jne
push
ret
scas
push
jmp
xchg
adc
or
xchg
(bad)
dec
sub
mov
jl
dec
ja
test
xchg
in
dec
jmp
movs
cmps
adc
mov
in
and
xchg
clc
cmp
cmps
mov
sub
add
add
fld
out
jmp
loopne
sti
mov
movs
pop
sbb
push
cmp
icebp
pop
push
imul
dec
cld
(bad)
data16
and
int
test
bound
aad
ret
lds
push
inc
sub
jne
cs
shr
in
pop
ror
inc
lock
pop
bound
out
outs
jae
push
fwait
jae
pop
mov
or
xor
loope
xor
jl
jbe
ins
sbb
and
push
lock
mov
fiadd
sbb
sub
(bad)
repz
stc
xchg
addr16
icebp
mov
out
push
movs
lods
cld
and
loopne
ficom
mov
into
mov
inc
jne
mov
(bad)
jnp
xchg
or
or
inc
out
int
popf
mov
or
in
lock
cwde
dec
cmps
adc
mov
push
push
xlat
jb
inc
mov
push
aas
sbb
sub
inc
scas
clc
dec
and
retf
popf
lea
push
adc
icebp
mov
pop
sbb
sub
sub
retf
jno
adc
pop
cmp
fmul
add
aam
out
pop
sub
clc
mov
mov
pusha
fisubr
xchg
hlt
fadd
sub
repz
fisttp
inc
outs
jl
das
jg
push
mov
das
loopne
imul
aas
or
pop
inc
sub
sub
jae
adc
add
xchg
jnp
fxtract
outs
add
push
stc
sub
sbb
imul
movs
and
les
xchg
push
cmp
dec
sahf
cdq
jb
add
mov
mov
lock
(bad)
pop
sar
fwait
add
sar
ds
adc
push
pop
retf
add
pushf
jnp
icebp
jno
push
loop
out
cld
xor
lds
gs
(bad)
sar
shr
jmp
mov
outs
mov
cmps
cs
pop
arpl
dec
add
and
enter
dec
out
mov
xchg
(bad)
cmc
scas
adc
sbb
sub
mov
neg
pop
xor
rcr
push
xor
jp
mov
shl
xor
pop
(bad)
xor
cmc
xor
div
pop
jns
mov
mov
rol
add
fisubr
pop
enter
jb
cmc
test
int3
inc
mov
dec
xor
fwait
dec
pusha
js
jl
cli
cmp
(bad)
(bad)
mov
inc
push
or
(bad)
fidivr
out
cmps
pop
ficomp
adc
call
mov
cmp
cmp
push
jmp
retf
jmp
jmp
and
test
inc
xor
popf
push
ins
sbb
loop
(bad)
dec
inc
cdq
push
imul
adc
std
or
in
xchg
push
ds
or
inc
rcr
rol
jo
out
xor
jg
pushf
stos
dec
xor
xchg
jp
mov
mov
scas
cli
push
pop
lods
out
mov
(bad)
mov
xor
test
sub
pop
or
xor
jae
std
and
rcl
pop
mov
adc
fdivp
fcom
sbb
repnz
xor
sbb
xor
shl
cli
mov
fisubr
cmc
lds
(bad)
pop
pop
ins
ins
add
repz
mov
sub
in
outs
jne
mov
jle
mov
arpl
pusha
or
imul
sub
iret
clc
xchg
dec
xchg
mov
mov
test
dec
fnsave
out
or
jae
cmp
out
xchg
pop
(bad)
fadd
adc
xor
and
pop
xchg
daa
pop
pop
push
mov
jle
movs
cs
aad
mov
dec
scas
ror
cmps
bound
dec
aam
fcomp
or
inc
mov
sbb
pop
add
jbe
dec
mov
dec
int
iret
cmp
fild
outs
or
cdq
xchg
stc
sub
movs
jb
(bad)
jb
fild
cmp
clc
xor
lds
mov
xchg
cdq
int
in
xor
sbb
adc
mov
jne
xor
ret
scas
push
clc
loope
jbe
(bad)
addr16
das
fstp
dec
daa
mov
nop
inc
gs
cmp
dec
ss
and
fsubr
enter
cwde
inc
and
popf
clc
jbe
or
cwde
push
fimul
jge
pop
pushf
jbe
pop
pop
in
push
mov
and
stc
jne
mov
sub
jp
xchg
jno
push
jo
mov
out
bound
outs
sti
xchg
sbb
sti
stos
fdivr
and
add
out
sub
fsub
xor
mov
in
mov
and
push
pop
inc
push
je
mov
mov
cdq
add
loop
jne
js
call
aaa
retf
pop
imul
inc
cli
fld
cld
xlat
push
int
push
leave
ins
repz
popf
js
adc
out
(bad)
and
dec
(bad)
call
xchg
mov
lock
and
ja
dec
(bad)
jnp
add
jecxz
push
xor
mov
int3
jmp
fldcw
pop
ja
mov
idiv
lock
adc
cmp
lea
test
gs
div
xchg
fwait
jge
arpl
test
addr16
gs
nop
int3
add
ss
push
stos
xor
push
leave
mov
movs
aad
movs
jp
jmp
xchg
cli
out
pop
sub
lods
mov
mov
mov
dec
jp
dec
fsubr
jne
jecxz
adc
ficom
xchg
daa
repnz
inc
movs
and
int
pop
test
fs
xchg
jno
daa
fwait
dec
cmp
daa
add
mov
sub
imul
xor
mov
scas
loopne
sbb
out
popf
or
or
or
idiv
sbb
ins
stc
push
fmul
cli
mov
fistp
lahf
lods
cmc
call
mov
nop
jb
sub
in
cmp
adc
mov
and
push
inc
cmp
adc
sbb
(bad)
les
icebp
popf
xchg
loope
xchg
je
mov
rol
and
push
shr
lods
cmp
adc
mov
js
sub
push
add
push
mov
mov
sar
pop
pop
mov
cmps
out
inc
and
test
arpl
rol
in
mov
ret
cmps
repz
rcr
bound
pop
cmps
xchg
xor
(bad)
das
xlat
repnz
xchg
es
cmps
out
pop
sbb
mov
mov
pusha
int3
xor
loopne
repz
sub
push
jmp
xchg
adc
add
mov
out
shl
mov
dec
popf
fwait
jno
jp
bound
popf
in
pop
xor
xchg
xor
dec
test
push
xchg
test
cmp
cmps
xor
inc
stos
xlat
cmp
popa
pop
dec
mov
js
mov
mov
add
cmp
popa
imul
cld
adc
push
dec
test
fs
or
cmp
dec
repz
adc
pop
or
fbld
pop
xor
mov
cmps
fimul
retf
adc
inc
aam
retf
out
push
out
adc
mov
popa
or
xchg
mov
bound
adc
mov
popf
dec
lock
push
xor
jb
inc
inc
shl
ret
add
stos
icebp
jnp
outs
test
fidivr
clc
cmp
(bad)
outs
(bad)
pop
lahf
hlt
adc
ins
add
pop
xchg
jle
mov
adc
xchg
aaa
push
push
inc
ja
xchg
sub
mov
loopne
mov
push
cmp
movs
sub
ret
hlt
pop
jp
jo
shr
inc
adc
aad
push
jl
mov
mov
pop
ja
(bad)
push
push
pop
icebp
xchg
gs
(bad)
jo
pop
add
int
mov
les
mov
xor
inc
in
jae
fisub
inc
mov
mov
cmps
loope
or
cmp
test
stos
jb
loopne
xor
adc
jecxz
rcl
fisub
jl
jle
cli
out
jo
jno
or
std
(bad)
pop
test
sub
sar
jo
dec
mov
xchg
mov
pusha
test
lds
adc
add
cmp
sahf
sti
sti
cmc
cmc
(bad)
dec
sbb
in
stc
or
push
aam
adc
push
into
jge
push
or
fwait
inc
push
pop
mov
mov
mov
jns
inc
ret
aas
dec
fild
push
out
jbe
mov
jb
mov
sbb
(bad)
adc
scas
out
daa
push
xlat
push
stos
and
xlat
es
adc
(bad)
xlat
xchg
(bad)
sti
gs
repnz
movzx
out
loope
adc
gs
test
mov
cmp
jns
and
ror
(bad)
fidivr
les
daa
lods
push
in
sbb
jbe
and
fiadd
cs
mul
and
and
mov
xchg
popf
dec
ins
push
(bad)
bound
jp
neg
push
aad
jbe
int3
loope
pop
retf
movs
add
mov
inc
into
stc
mov
pop
cld
inc
hlt
push
in
sub
jb
pop
sbb
int3
ret
outs
pop
mov
ds
(bad)
jmp
retf
jnp
sbb
sbb
and
inc
mov
xchg
jmp
adc
cli
and
xchg
mul
push
(bad)
stos
or
jl
push
push
pop
imul
outs
sbb
test
dec
xchg
lods
cwde
and
mov
icebp
lea
jnp
aad
hlt
inc
cmp
les
xchg
dec
cmp
sbb
call
mov
retf
mov
out
lahf
mov
adc
push
or
push
dec
movs
and
std
or
mov
pop
xor
xchg
and
mov
stos
out
imul
icebp
inc
mov
movzx
test
adc
pusha
lock
or
push
or
jmp
ja
fiadd
hlt
mov
push
jmp
pop
adc
stos
jecxz
in
(bad)
sub
scas
adc
fsub
data16
lods
and
xchg
arpl
fsub
into
cdq
aam
aad
and
and
jmp
(bad)
jmp
pop
xor
inc
gs
jnp
push
aad
or
jle
jae
aad
sbb
das
fs
lods
movs
js
dec
es
jmp
outs
and
xlat
(bad)
pop
xchg
gs
int
loop
xchg
jno
push
lods
xor
jne
cmps
jmp
mov
call
scas
shl
ds
mov
ins
or
int3
lahf
pop
mov
add
pusha
xor
push
pop
jmp
fild
fcomp
test
mov
sbb
arpl
jbe
retf
sbb
jge
std
int
adc
sub
and
add
and
es
in
cmps
mov
mov
call
les
lock
xor
aad
lods
mov
dec
fbstp
cmps
mov
adc
jmp
add
je
lea
or
ror
push
out
xor
mov
mov
mov
mov
cmp
cdq
test
iret
cmp
cmp
sbb
outs
xchg
inc
aaa
push
test
ret
or
out
into
movs
push
leave
repz
ds
xor
pop
pop
sub
add
mov
sbb
sub
mov
inc
pusha
daa
cmp
and
mov
stos
imul
int
or
jbe
xchg
xchg
jb
int3
ret
and
sbb
mov
mov
in
jl
pop
inc
cli
shl
out
daa
fist
pop
test
(bad)
inc
sub
call
or
rcl
inc
lahf
ret
mov
mov
mov
rol
stc
inc
xchg
mov
mov
stos
stos
loopne
test
inc
add
(bad)
(bad)
mov
imul
xchg
pop
stos
sar
add
mov
cmp
mov
cmc
sbb
mov
mov
jecxz
add
aas
push
dec
sub
xor
das
sar
adc
fldenv
xchg
hlt
imul
imul
jno
inc
out
ins
inc
arpl
add
or
pushf
push
cmp
or
push
ja
addr16
ror
xchg
cmp
shr
repnz
jle
leave
mov
push
cdq
jl
outs
inc
lahf
int3
xor
add
ror
dec
scas
sub
enter
inc
std
pop
ror
inc
jbe
ret
push
sbb
xchg
popf
ret
icebp
lea
cs
add
mov
js
je
int3
scas
or
ja
push
cmps
and
pusha
sbb
(bad)
dec
cmp
or
loopne
shl
cli
nop
mov
inc
aaa
cmp
adc
cwde
test
sub
fsubp
xchg
aas
shl
popf
mov
outs
mov
xchg
mov
inc
lods
mov
and
inc
std
push
cmps
(bad)
sub
and
movs
inc
cmp
pop
mov
stos
mov
xor
sbb
repz
push
xchg
xor
inc
loope
inc
mov
push
cmp
mov
push
push
inc
mov
mov
xor
mov
mov
inc
arpl
cdq
outs
popa
inc
fstp
push
push
arpl
adc
popf
into
xchg
test
jmp
xor
loopne
cmc
and
inc
mov
inc
pop
push
fnstcw
cmps
movs
test
(bad)
mov
push
push
fdiv
rcr
stos
inc
pushf
dec
cwde
addr16
stc
mov
jns
call
xchg
pop
addr16
sub
retf
repnz
out
adc
lods
and
xor
and
xor
aad
pushf
aam
cmp
pop
mov
inc
push
gs
xor
mov
(bad)
into
and
mov
inc
mov
or
fsub
outs
ins
lods
aad
cs
jmp
aam
popf
mov
push
cmp
push
jge
mov
push
stos
inc
(bad)
stos
add
xchg
cmps
mov
ins
mov
ss
(bad)
aad
sub
sbb
jo
and
out
jg
xchg
xor
push
cmp
inc
pop
mov
pop
inc
mov
fld
xchg
and
scas
pushf
push
std
ret
xchg
sbb
imul
sub
xlat
das
cmp
gs
sar
je
(bad)
js
int3
popa
cli
mov
fisub
jg
inc
xchg
dec
hlt
jle
push
out
stc
xchg
retf
jb
xor
aaa
cmp
or
cmp
imul
ins
pop
mov
test
clc
and
xor
push
xlat
addr16
fisubr
cmps
inc
cmps
(bad)
push
add
mul
sbb
sti
retf
lods
(bad)
stc
xor
std
mov
out
hlt
cmp
pop
push
lods
imul
sbb
pop
bnd
idiv
mov
ins
retf
aaa
mov
xchg
call
cmps
xor
or
inc
mov
sub
xchg
je
push
cmc
xchg
mov
push
xchg
imul
imul
xchg
ds
xor
pop
lock
out
(bad)
sbb
inc
mov
xchg
inc
ja
shr
mov
into
ins
loopne
dec
mov
mov
cmp
xchg
(bad)
loope
xchg
(bad)
pop
and
js
pusha
jae
lea
bound
cmps
fcos
adc
dec
mov
mov
outs
test
push
jmp
nop
out
addr16
jbe
xlat
sbb
cmp
mov
add
mov
mov
push
in
xchg
adc
nop
mov
ins
test
mov
shl
xor
sbb
rol
popf
pop
cmp
push
xchg
fnsave
xchg
adc
xor
xchg
test
sbb
adc
ja
aam
repnz
call
sbb
fs
sbb
or
cld
gs
add
pop
fbstp
aaa
jl
dec
and
xor
mov
imul
in
imul
cmp
int
popa
xlat
lods
push
gs
mov
xor
(bad)
inc
dec
jb
bound
shr
and
jmp
adc
cmp
ficomp
and
mov
shr
ror
leave
sbb
(bad)
mov
retf
inc
shr
mov
movs
or
stc
sbb
scas
es
dec
fcmove
sub
sub
ror
jmp
mov
hlt
jle
mov
bound
movs
inc
adc
call
push
push
call
pop
inc
push
mov
das
pop
dec
sub
outs
mov
pop
and
ret
sub
pop
xor
dec
xchg
arpl
cmp
mov
inc
sti
dec
jl
sbb
sti
and
jge
test
loop
mov
cmp
mov
ins
mov
xchg
fdivr
ja
mov
or
ds
mov
movs
and
mov
clc
and
pop
mov
imul
popa
mov
or
inc
mov
in
loopne
inc
movs
iret
sbb
mov
xor
fidiv
cmp
cmps
(bad)
xor
iret
pop
sahf
inc
sub
idiv
out
out
lock
ds
and
lahf
xchg
jmp
movs
sbb
add
mov
out
in
jl
(bad)
in
cmc
movs
and
aam
mov
pop
cmc
je
xchg
jmp
nop
fdiv
fwait
jmp
mov
cmps
sbb
xchg
xor
mov
xchg
mov
popa
sbb
lods
mov
das
lahf
push
shl
adc
nop
cdq
push
popa
cmp
add
cmp
xchg
sbb
fld
sbb
lock
and
push
movs
inc
sbb
add
push
ret
ss
stos
or
rcl
popf
ror
loopne
loopne
aam
or
mov
outs
(bad)
out
(bad)
inc
js
(bad)
xchg
dec
lahf
test
dec
ss
and
mov
inc
jnp
add
jecxz
imul
add
test
pop
fmul
dec
add
ret
pop
ds
inc
push
xchg
inc
and
and
cmp
call
outs
(bad)
lds
pop
clc
jmp
mov
jmp
jbe
push
cmp
push
xchg
scas
and
cld
xor
fcom
jmp
sbb
imul
mov
outs
arpl
jns
std
xchg
mov
and
cmp
clc
ds
or
dec
xchg
jae
popa
rcl
cmc
sbb
repz
enter
mov
sub
pop
(bad)
push
es
pop
sahf
adc
inc
mov
stc
out
and
movs
cdq
aam
ss
aad
pushf
lahf
cmp
jnp
pushf
mov
inc
push
ss
jg
mov
dec
dec
or
and
jecxz
js
sbb
push
xor
jge
(bad)
loopne
cmps
mov
xchg
xchg
mov
fistp
or
imul
cli
mov
cli
das
jge
add
push
pop
add
mov
inc
pop
test
aam
rep
push
mov
(bad)
jmp
dec
sar
xor
cmp
nop
add
test
push
jo
or
out
cli
rcl
(bad)
pop
push
jl
addr16
xor
lahf
mov
test
jecxz
and
out
mov
mov
std
dec
div
inc
push
mov
mov
mov
mov
mov
lock
sbb
mov
clc
jmp
fsub
mul
aad
push
dec
leave
push
jb
mov
mov
into
lds
cld
in
mov
rcr
sti
jo
and
(bad)
popf
xor
nop
pop
(bad)
or
pop
add
int
ins
inc
push
xchg
sub
out
bound
xchg
jmp
xor
fdiv
shr
xchg
in
in
jle
cmp
inc
xor
fstp
kmovb
push
inc
movs
xchg
in
cwde
(bad)
jmp
dec
sbb
imul
jnp
out
outs
ja
mov
dec
or
fwait
dec
mov
inc
aaa
rcl
xchg
lods
mov
sbb
sbb
fwait
inc
mov
mov
xchg
pop
add
pop
jecxz
xchg
jae
call
jne
mov
sub
mov
loope
pop
js
push
fiadd
test
fdivp
jp
(bad)
leave
ror
fwait
addr16
ins
pop
pushf
test
and
mov
lock
mov
daa
(bad)
xlat
push
dec
mov
inc
sbb
pusha
inc
popa
retf
push
pop
cmp
jmp
outs
retf
jecxz
in
mov
call
test
pop
mov
or
add
(bad)
jp
push
call
mov
push
repz
fiadd
std
test
outs
pusha
sub
mov
lods
cmp
jg
mov
mov
jns
iret
(bad)
jne
mul
pop
test
mov
or
mov
call
ds
loopne
or
jb
into
adc
inc
push
(bad)
scas
nop
jno
adc
in
loopne
mov
xchg
cmp
or
addr16
and
mov
add
inc
js
and
mov
xor
sbb
mov
movs
movs
aad
repz
lock
push
mov
pop
xor
add
xor
mov
pusha
xor
arpl
dec
adc
int
cmp
mov
jnp
sbb
shl
jmp
push
jmp
movs
stos
xor
xchg
gs
sub
fild
inc
push
cmps
jecxz
clc
into
push
add
lea
sar
mov
movs
pop
scas
push
iret
push
sbb
sbb
fdivrp
mov
add
test
jbe
repz
popa
addr16
imul
cmps
ss
imul
addr16
aas
out
jmp
std
movs
fist
into
xchg
stos
add
push
icebp
sub
loop
(bad)
fwait
mov
test
rcr
jmp
and
fdivr
lahf
cwde
lods
adc
enter
push
or
call
jns
fst
push
icebp
aas
aas
jnp
dec
mov
or
ret
test
stos
adc
addr16
mov
mov
jnp
cwde
test
or
cli
fcomp
aas
pop
rcl
push
sub
pop
sti
cmp
add
xor
mov
mov
mov
clc
and
mov
sbb
std
mov
jno
xor
loop
lea
add
test
sbb
jmp
jmp
movaps
stos
cmps
sti
in
jnp
jecxz
in
mov
xchg
xchg
aaa
adc
nop
jo
das
out
movs
fnstenv
sbb
lahf
mov
cmp
neg
int3
pop
test
frndint
inc
pop
inc
dec
mov
fwait
mov
mov
pop
pop
mov
test
mov
jge
int3
jecxz
adc
das
xchg
nop
mov
xchg
or
(bad)
test
adc
and
mov
add
add
cmps
jmp
and
movs
neg
cmp
rol
adc
xchg
ds
add
mov
mov
xor
test
sbb
out
pop
push
call
xchg
sar
push
std
ds
ds
xchg
stos
cmp
pop
adc
or
fwait
ins
xchg
add
mov
movs
idiv
fimul
cdq
int
inc
adc
test
js
int
movs
adc
mov
test
ror
or
stos
and
popa
or
fdivr
cmc
sbb
sbb
dec
jns
aaa
retf
popa
mov
gs
clc
int3
les
mov
inc
jle
dec
jmp
dec
inc
test
rcr
pop
xchg
xchg
stc
jmp
es
outs
inc
mov
nop
fld
fdiv
cmp
dec
das
and
gs
test
dec
daa
xchg
fild
mov
in
or
aad
call
jo
xor
cmps
sub
mov
jg
inc
in
shl
add
adc
fiadd
neg
data16
cmp
in
xchg
inc
sbb
mov
popf
lahf
stos
and
fist
add
pop
lea
and
xchg
mov
push
cmp
loopne
mov
sti
sbb
add
xlat
jmp
ret
cld
adc
addr16
and
pop
cmc
cmp
stc
sub
mov
mov
mov
inc
mov
sub
add
out
movs
lods
mov
test
add
add
std
sbb
cli
dec
add
add
cmps
lods
out
imul
push
mov
sub
xor
add
push
inc
shl
iret
and
push
imul
push
add
xchg
inc
cmp
fcmovbe
ficomp
mov
mov
(bad)
adc
out
jnp
pop
sbb
xor
pop
lock
adc
fwait
cmp
std
adc
jne
inc
loop
nop
adc
lock
dec
pop
push
adc
xor
inc
jo
push
mov
add
mov
(bad)
ja
add
ret
loopne
jl
popf
ins
data16
jno
icebp
mov
imul
fbld
jg
rol
sub
push
test
push
or
mov
lock
cmc
in
adc
mov
or
push
xor
(bad)
mov
dec
mov
dec
(bad)
pop
mov
xchg
push
nop
hlt
xor
pop
in
adc
mov
cdq
sbb
(bad)
out
(bad)
fs
adc
(bad)
fstp
mov
mov
aad
cmc
xor
adc
ins
out
or
dec
movs
mov
inc
arpl
mov
cmp
test
push
sti
xchg
out
add
test
in
imul
mov
fmul
mov
jmp
push
push
inc
inc
data16
jecxz
popa
adc
jo
lock
mov
dec
popf
lds
mov
adc
xchg
call
je
push
sbb
imul
ficomp
add
je
(bad)
std
push
icebp
div
pop
add
cdq
jmp
lods
add
cmp
inc
dec
add
adc
mov
sbb
cmps
data16
iret
cmp
test
std
mov
cs
loopne
cs
out
jecxz
ins
(bad)
call
(bad)
js
push
add
outs
and
inc
xor
add
push
cmp
stos
es
jno
aad
mov
mov
pop
or
dec
cmp
clc
dec
cli
pop
into
neg
lahf
inc
es
arpl
ins
adc
(bad)
push
jne
mov
lds
les
jne
fwait
add
jae
and
ret
xchg
sti
pop
cmp
dec
xor
pop
stos
(bad)
mov
jns
daa
and
ins
and
test
sti
je
push
push
jne
retf
mov
dec
adc
mov
jns
scas
dec
sar
inc
xchg
pusha
popa
mov
and
xchg
push
fsubp
je
pop
bound
add
sbb
adc
sahf
das
adc
sar
pop
mov
bound
mov
(bad)
hlt
stos
cdq
movs
mov
in
xchg
ins
xchg
outs
xor
push
and
cmp
(bad)
jne
ja
inc
ret
inc
fistp
inc
pop
or
test
pop
(bad)
ret
leave
loopne
jle
cmp
fcom
mov
sbb
mov
pop
mov
ja
or
aas
ins
les
inc
ret
(bad)
pop
push
loope
jne
mov
iret
mov
mov
dec
inc
(bad)
clc
sbb
jle
shrd
outs
cmps
std
fdivr
outs
xchg
retf
push
mov
hlt
lods
out
ret
lods
pop
daa
aas
cli
fwait
xchg
sar
push
cmp
adc
fwait
adc
dec
pop
lea
cld
dec
pop
adc
pop
adc
fs
push
ins
adc
nop
or
aaa
sbb
sbb
sub
movs
lods
dec
jecxz
jb
sbb
cmp
int
pushf
and
arpl
jmp
or
sahf
sar
and
cld
dec
mov
or
xlat
(bad)
jmp
icebp
xor
fld
xchg
mov
(bad)
cmc
push
add
pop
test
jecxz
and
or
sub
jns
mov
ss
add
clc
lods
mov
add
cli
std
lods
(bad)
(bad)
fdiv
clc
sub
stc
das
mov
retf
add
sbb
aam
(bad)
mov
jae
adc
inc
int3
mov
ins
or
push
sbb
shl
push
pop
out
iret
jo
mov
test
idiv
iret
fistp
addr16
fldcw
mov
jns
adc
scas
jecxz
mov
sub
inc
mov
sbb
add
xchg
or
aad
mov
in
cmp
lods
add
mov
aad
xchg
adc
outs
cmps
test
mov
fsubr
scas
xor
mov
dec
clc
ja
xlat
cmp
nop
(bad)
pusha
or
mov
into
push
xchg
repnz
inc
or
sti
jge
add
and
sub
xor
jle
jmp
push
fld
cmps
jbe
pop
rol
inc
push
xchg
icebp
arpl
add
movs
push
cmp
into
ss
arpl
mov
jle
dec
xchg
push
fs
mov
xchg
into
arpl
jl
mov
adc
sbb
loopne
es
in
movs
sar
pusha
test
push
dec
outs
out
std
or
sbb
mov
cs
pop
cmc
dec
jmp
shl
stc
xchg
imul
int3
push
push
adc
push
cmps
pop
dec
hlt
or
int3
pop
sub
jmp
adc
xchg
push
mov
dec
lods
fwait
mov
hlt
inc
cmp
push
push
xor
and
nop
jb
add
push
retf
mov
and
cdq
iret
mov
mov
xchg
push
adc
out
imul
inc
int
pushf
adc
cdq
jg
sbb
hlt
mov
das
mov
adc
inc
mov
dec
fild
push
repnz
js
ins
loope
pop
xchg
pop
sub
sub
icebp
and
pop
or
rep
stos
mov
cs
sbb
das
daa
outs
jg
icebp
popa
pop
fist
popf
xor
sbb
pusha
pusha
and
sub
inc
add
ret
inc
add
stos
add
and
div
retf
jnp
shr
lahf
jmp
xor
in
push
cld
int3
loop
sub
daa
mov
pop
push
clc
leave
and
or
out
ret
rcl
push
inc
add
sbb
xchg
xchg
sahf
cmps
cmps
ss
xor
cdq
jae
lods
cmp
lds
adc
in
adc
mov
mov
xchg
iret
jle
push
cmp
adc
mov
adc
sbb
pop
scas
dec
movs
cld
stc
mov
dec
add
mov
and
stos
icebp
imul
sbb
out
inc
sub
add
adc
iret
push
repz
inc
outs
adc
ss
repz
cld
dec
dec
mov
fcomp
retf
xchg
jmp
int
fld
sbb
popa
shl
push
push
adc
ss
dec
ret
sub
rol
mov
mov
adc
imul
xor
loopne
adc
int3
mov
pop
inc
or
fdivr
pop
ins
inc
scas
xchg
push
pusha
dec
xor
lahf
inc
mov
call
je
fucomi
lods
shl
mov
mov
cdq
movs
push
dec
mov
or
jno
xchg
mov
ret
lea
mov
dec
ins
mov
in
xchg
lods
cmp
mov
add
pusha
jle
xchg
ins
test
jmp
xor
adc
xchg
fisttp
push
sub
stos
cwde
jl
fistp
mov
inc
ror
adc
loope
and
or
adc
(bad)
xor
sub
mov
and
pop
push
scas
(bad)
jbe
pop
add
fmul
ror
inc
lods
mov
sub
or
(bad)
scas
and
inc
lods
ins
out
stos
aad
jne
sahf
adc
xor
gs
(bad)
mov
int3
leave
dec
pop
retf
cmc
ins
mov
pop
aam
in
pop
jb
shl
xchg
or
test
push
shl
fsubr
pop
ret
mov
push
bound
or
out
ror
popf
dec
jbe
pop
and
inc
adc
je
or
sbb
pop
inc
out
dec
imul
sbb
adc
mov
shr
add
pop
pusha
xchg
push
and
adc
call
test
jp
pop
cmp
xor
inc
test
sbb
imul
mov
cmp
xchg
or
xor
add
pushf
dec
mov
je
and
inc
iret
cmp
and
dec
call
cmps
sbb
jae
lds
dec
leave
adc
fs
mov
outs
mov
repz
sub
mov
add
pop
movs
sbb
popa
scas
mov
into
or
ficom
jecxz
xor
outs
jg
cmp
xchg
pushf
sbb
int
ins
imul
add
in
test
cmp
cmp
lock
mov
cs
test
mov
mov
out
inc
mul
lock
movs
fadd
jg
mov
popa
or
xor
mov
sub
fcomp
add
mov
arpl
xchg
test
and
cmp
dec
cmps
imul
ret
arpl
retf
jae
cwde
and
(bad)
sti
and
add
jmp
xor
mov
das
jo
mov
shl
and
aaa
enter
inc
mov
mov
xor
pop
gs
mov
lahf
lods
gs
dec
xor
hlt
adc
inc
jae
out
mov
faddp
pop
scas
es
dec
pop
and
fst
inc
push
dec
add
mov
sub
dec
fstp
mov
mov
pop
jnp
inc
test
or
fwait
in
push
pop
hlt
jnp
shl
pop
cmp
aaa
mov
mov
cli
sbb
(bad)
jge
mov
inc
push
mul
pop
xor
test
out
inc
push
push
cmp
inc
xor
cmps
adc
call
rcr
add
lahf
jmp
and
sub
stos
xchg
or
aad
outs
dec
xor
push
sub
cmc
(bad)
xor
das
sub
ret
nop
mov
scas
xchg
push
adc
lahf
aaa
dec
test
imul
dec
in
(bad)
int3
dec
(bad)
in
fdiv
xor
cmp
stos
ds
inc
cmps
mov
imul
jne
xchg
mov
dec
sahf
xor
ins
dec
pop
jns
push
in
enter
loop
and
nop
test
mov
mov
sub
lea
mov
add
fsub
and
push
pop
jbe
mov
or
mov
retf
fsub
xor
pop
movs
in
jmp
call
outs
jo
cs
adc
pop
add
xchg
cmps
sub
mov
fisttp
bound
inc
mov
(bad)
xlat
in
jle
sub
mul
(bad)
gs
inc
add
out
sbb
jb
adc
or
cmp
push
push
pop
push
fmul
jle
fiadd
and
out
out
sbb
dec
outs
loopne
mov
mov
sbb
fld
pop
dec
jg
dec
or
popf
inc
and
outs
int3
dec
fst
js
mov
jo
dec
add
ret
icebp
or
lds
mov
aam
cld
lea
shl
and
cdq
add
add
add
adc
xor
scas
sar
lea
jbe
xlat
lahf
dec
cmc
rol
jecxz
mov
shr
add
loopne
fdiv
loope
scas
lea
lods
fist
outs
shr
sbb
in
add
sbb
icebp
mov
pop
fisttp
mov
push
jl
jb
mov
adc
imul
push
aas
push
call
adc
ror
stos
inc
(bad)
arpl
inc
fisttp
push
scas
sbb
xchg
ins
xchg
sar
push
jne
es
xor
push
pop
dec
push
pop
mov
leave
ins
or
add
add
lea
inc
xor
xlat
int
sbb
xchg
jl
fwait
adc
mov
aam
mov
icebp
pop
and
paddq
sbb
aam
cmps
shr
mov
shl
mov
push
sbb
mov
and
imul
mov
and
pop
fist
push
sbb
jl
adc
adc
or
bound
stos
dec
xor
pop
shl
and
(bad)
sbb
int
or
jnp
jo
dec
mov
jne
or
add
pop
into
jl
mov
mov
pop
mov
sub
add
mov
gs
sbb
add
add
mov
test
icebp
setne
xchg
je
addr16
pop
test
cld
and
adc
pop
popa
les
adc
(bad)
in
scas
daa
in
fcmovnbe
mov
dec
inc
mov
std
mov
xor
xor
mov
imul
mov
in
xor
loop
mov
cmps
and
retf
pushf
push
adc
cmc
retf
in
das
cmp
mov
fwait
in
sar
inc
stos
pushf
shr
cmps
fidiv
xchg
xor
pop
ror
clc
iret
leave
xlat
mov
in
inc
addr16
xchg
fcmovnb
outs
sub
and
aas
data16
xchg
pop
xlat
(bad)
cli
xchg
(bad)
out
xchg
call
mov
test
out
dec
mov
iret
jns
imul
leave
stc
mov
mov
aas
mov
jg
mov
mov
pop
jo
inc
stos
(bad)
scas
add
fimul
mov
or
pop
pop
jb
adc
loope
xor
xchg
xchg
(bad)
div
or
cmp
mov
jge
add
xor
enter
and
std
pop
mov
cmps
iret
movs
loopne
jno
cmp
popa
mov
or
and
nop
or
fld
adc
sbb
sub
je
imul
push
clc
outs
xchg
pop
jae
adc
sub
and
out
scas
test
es
jecxz
popa
mov
jns
add
jae
mov
ss
add
ins
dec
sub
dec
(bad)
push
dec
ss
push
dec
loope
jmp
retf
or
inc
adc
add
mov
pop
mov
fsub
push
add
mov
dec
mov
ret
pop
mov
cmps
scas
and
bsr
into
and
jmp
pop
ss
sub
mov
mov
outs
pop
loopne
or
adc
imul
add
xor
sbb
or
mov
stos
movs
push
and
addr16
es
ins
dec
(bad)
xor
pop
es
mov
cmp
pop
imul
mov
enter
jecxz
iret
mov
ins
add
std
dec
pop
cmp
cdq
push
push
loop
jmp
lods
or
popa
sub
push
inc
sub
js
cmp
fldenv
jo
mov
push
mov
pushf
pop
imul
push
js
jle
fdivr
fnsave
mov
leave
sbb
lock
fwait
lods
xchg
xor
icebp
fnstenv
push
lods
sbb
enter
lds
sbb
ins
pop
jo
adc
mov
inc
test
fidiv
test
mov
adc
lds
mov
imul
mov
popf
mov
enter
xchg
mov
and
in
and
and
in
xchg
imul
div
std
pop
jne
xor
sar
jbe
inc
mov
stos
adc
ret
aad
fwait
mov
in
bound
mov
sub
sbb
add
jns
mov
ja
fs
aas
mov
xor
cmps
or
repz
pusha
rcl
ret
ins
(bad)
cmp
popa
stos
jp
mov
push
inc
fnstenv
adc
call
movs
popf
stos
sbb
dec
hlt
sahf
or
imul
sbb
clc
je
fwait
outs
sub
inc
aad
adc
pop
out
test
loop
and
bnd
pop
fistp
fwait
mov
lds
add
div
leave
mov
das
sahf
pusha
mov
iret
fst
iret
or
jne
ja
rcr
addr16
sbb
mov
xchg
jp
sbb
adc
dec
(bad)
call
loope
or
fist
(bad)
xchg
mov
mov
sub
in
loopne
dec
and
xor
xchg
pop
pop
movs
sti
pop
xchg
jl
lea
stos
dec
push
mov
mov
push
call
push
inc
mov
push
cmp
aad
lea
pop
mov
xchg
mov
sbb
push
leave
(bad)
jae
pop
out
(bad)
mov
retf
pop
ret
mov
push
ds
jne
xor
mov
mov
inc
fwait
and
pop
gs
test
hlt
mov
imul
xor
mov
stc
rol
ficomp
adc
iret
inc
enter
daa
and
(bad)
hlt
loope
sub
sub
cmp
pop
fdivr
inc
jmp
ret
jle
cwde
aas
dec
cmps
cdq
jo
loopne
retf
mov
cmp
jl
cmps
lahf
movs
and
imul
shl
push
jb
test
mov
dec
test
sub
test
and
out
inc
hlt
xor
xor
xchg
xchg
arpl
inc
les
out
in
(bad)
leave
lea
or
cdq
xchg
push
div
das
push
fisttp
and
jne
je
es
test
lea
jbe
aas
hlt
bound
jp
das
add
add
pushf
lahf
(bad)
jo
xchg
dec
xchg
je
mov
(bad)
out
or
cmp
arpl
loopne
mov
cmp
movs
sbb
xchg
sub
mov
(bad)
icebp
push
mov
loopne
push
or
mulps
inc
inc
repz
adc
iret
jecxz
sub
pop
mov
enter
jns
loope
and
pushf
mov
sti
rol
leave
(bad)
and
cmc
lea
popa
iret
icebp
into
add
pop
add
inc
fidiv
cmp
ds
out
jmp
dec
(bad)
js
aaa
pop
inc
and
add
mov
cmps
outs
pushf
add
out
inc
sbb
xor
add
mov
and
cmps
iret
pop
jb
fs
test
mov
add
cli
test
pushf
pop
cmc
sub
dec
out
mov
cmp
fld
ds
mov
sub
jmp
lds
test
frstpm(287
ins
stos
fwait
int3
lock
test
mov
ss
add
xchg
cmp
mov
sub
enter
push
aam
pop
clc
fwait
test
add
not
out
mov
dec
xor
dec
ds
mov
push
in
retf
inc
cmps
add
add
cmp
loopne
push
xor
cmps
push
dec
in
rcr
sbb
bound
mov
pop
mov
(bad)
test
ins
cmps
xchg
xor
cli
cmps
cmp
add
in
jb
pop
inc
xlat
sub
mov
mov
mov
mov
call
jne
adc
shl
cld
or
sbb
cmps
and
mov
dec
jns
(bad)
fmul
inc
pop
addr16
stc
adc
pop
int3
inc
jp
js
jno
retf
xchg
adc
pop
mov
or
movs
sar
call
pop
push
xchg
push
mov
fld
cmp
mov
push
test
lods
and
cmp
cmp
xchg
repnz
fwait
fwait
aas
aad
test
test
cmp
xor
push
jmp
cli
adc
jne
ror
repnz
or
sbb
add
xchg
push
and
loop
jo
cs
lds
scas
adc
mov
or
and
cmp
lds
cmc
fs
push
jb
pusha
out
jl
std
mov
jl
cld
popf
push
jecxz
(bad)
aaa
cli
pushf
repnz
jno
fnsave
scas
cs
pop
retf
sbb
or
pop
adc
push
fadd
fsubp
mov
mov
pop
aaa
lea
std
data16
mov
mov
and
pop
xchg
sbb
loope
inc
scas
sysret
jl
xchg
(bad)
enter
and
xor
in
push
pop
xchg
sbb
hlt
gs
iret
in
mov
sar
jg
add
pop
pop
adc
jmp
sbb
jnp
xchg
jnp
rol
enter
mov
not
sbb
jle
shr
in
push
sbb
xchg
loope
inc
imul
pop
les
adc
mov
jae
sub
in
mov
and
cmps
mov
xor
stos
test
stos
mov
jno
jle
stos
sub
stc
in
test
add
scas
imul
xor
enter
fdivr
sar
iret
dec
std
sub
fst
adc
mov
popf
rol
pop
mov
pop
xchg
xchg
cdq
ss
pop
adc
aaa
xchg
(bad)
mov
sbb
ds
mov
sbb
add
es
dec
(bad)
in
xchg
mov
sub
dec
or
ins
jmp
xchg
pop
arpl
inc
imul
pop
fdiv
rep
js
sub
and
fcomp
sbb
push
xchg
lahf
lds
pop
js
jns
outs
jo
xor
push
cli
mov
mov
in
sub
(bad)
xlat
mov
dec
push
push
xchg
scas
ins
popf
push
hlt
aam
test
aaa
dec
pop
out
push
(bad)
jp
pop
(bad)
mov
pop
add
xchg
or
loop
shr
fwait
xor
push
jo
adc
stos
ret
add
xor
push
mov
xor
pop
out
psubsb
idiv
mov
dec
fs
pop
push
mov
mov
adc
or
loopne
adc
ins
sahf
fcmovb
jp
adc
cmp
mov
bound
jmp
xchg
or
ins
dec
lds
xchg
jecxz
xor
mov
retf
xchg
sbb
mov
sub
add
into
out
retf
or
pop
sub
cmc
mov
adc
jmp
mov
lock
push
sbb
push
ror
cmp
xor
sbb
mov
adc
rcr
fidivr
mov
add
mov
fs
adc
aam
mov
xor
out
inc
rcl
add
les
(bad)
ds
jae
mov
clc
jno
ret
jl
fs
cdq
mov
mov
dec
pop
in
test
lock
jmp
imul
ficomp
jno
push
dec
inc
ret
inc
pop
not
pop
js
pop
mov
lds
in
arpl
sub
sub
sub
iret
pusha
inc
jmp
aaa
outs
sbb
rol
(bad)
xlat
adc
jge
cmps
movs
push
shr
mov
pop
movs
jno
ret
dec
shl
xor
sbb
mov
add
sti
ds
mov
fdivrp
lock
retf
lods
sbb
jp
mov
test
jae
inc
mov
mov
xor
pop
sbb
mov
test
adc
push
ds
sbb
or
leave
stos
icebp
into
imul
out
movs
pop
in
fdivp
loope
retf
jg
pop
mov
sbb
out
pop
cs
mov
shr
xchg
(bad)
iret
fist
mov
mov
gs
add
jg
and
mov
out
xlat
push
mov
nop
cmp
jmp
mov
sub
pop
inc
enter
mov
mov
in
das
fcom
or
lock
test
cmps
jmp
in
sbb
or
fidiv
out
mov
pop
jns
fcomp
cmp
jbe
mov
dec
cmp
or
(bad)
lahf
sub
xchg
sub
imul
sub
jl
and
popa
mov
rol
inc
add
jge
ins
cld
inc
enter
ja
clc
outs
jns
inc
pop
jle
pop
mov
dec
add
rol
shr
mov
imul
xor
cmc
movs
xchg
into
mov
jae
inc
(bad)
sbb
push
xor
sub
(bad)
in
and
inc
dec
fdivr
jge
inc
das
and
retf
mov
fisttp
daa
int
add
sbb
sub
and
and
enter
and
fst
lods
ins
nop
int
sahf
mov
mov
xchg
pop
test
mov
xor
push
mov
push
in
loopne
clc
jbe
and
retf
xchg
lods
in
push
cwde
mov
xor
xor
clc
cs
cli
and
ja
push
enter
xor
xchg
mov
das
mov
sub
or
jmp
rcl
xor
ins
es
bound
in
inc
lock
loopne
pop
test
out
sbb
addr16
cmc
mov
pop
(bad)
cmc
push
lahf
pop
movs
dec
pop
std
cmps
popa
adc
test
fmul
fsubr
push
imul
pop
cmp
test
jle
retf
enter
call
cmp
push
out
or
js
cmp
bound
jmp
int
sbb
das
sub
adc
jge
inc
mov
add
xor
ss
test
push
repz
out
mov
shl
mov
jmp
(bad)
and
ins
jp
jl
dec
jge
lods
inc
repnz
mov
mov
jge
or
div
fs
scas
and
mov
test
stos
stos
outs
mov
pop
push
dec
stos
jmp
test
jmp
xor
pop
call
in
xor
jns
pop
leave
(bad)
shl
adc
ja
or
adc
ins
push
pop
sub
adc
daa
mov
inc
cmps
inc
mov
adc
hlt
or
je
rcr
or
mov
mov
jge
ret
cmp
sbb
and
mov
lods
rcl
in
in
cld
mov
mov
xchg
movs
cmp
lahf
(bad)
and
mov
ds
inc
(bad)
fild
cli
fild
xchg
fcomip
mov
inc
or
jecxz
outs
mov
mov
test
mov
pop
sub
inc
cmc
or
movs
jnp
shl
inc
mov
push
lahf
inc
repz
push
push
fwait
push
xor
das
or
mov
in
pop
and
ins
pop
xchg
mov
cmps
call
xchg
mov
mov
add
gs
xlat
or
ror
out
and
aam
xchg
xor
mov
sbb
jne
icebp
mov
dec
aaa
push
aad
iret
pop
loopne
mov
dec
cli
xchg
push
jb
popa
push
mov
mov
mov
sub
stos
out
ficomp
xor
jle
mov
pushf
and
sub
add
mov
mov
cmp
push
imul
lds
into
call
pop
push
inc
pop
test
push
int
aas
jmp
test
sbb
dec
lock
call
fiadd
mov
mov
mov
mov
enter
ds
scas
rcl
sub
stos
inc
lahf
cmp
nop
sbb
pop
out
pop
fmul
ins
mov
js
push
xlat
stos
es
sbb
push
jp
add
pop
adc
mov
bound
xchg
jo
push
clc
or
inc
fsub
xor
nop
(bad)
outs
jns
imul
loop
cdq
loopne
mov
fdiv
pusha
es
sti
or
imul
fdivr
daa
mov
rol
or
cmc
jg
icebp
popa
rcr
xor
push
adc
dec
inc
and
ins
addr16
sbb
movs
dec
adc
sbb
sub
adc
jne
or
xchg
push
mov
cdq
repnz
fdiv
iret
call
or
pop
xchg
sub
test
into
push
scas
lock
mov
sbb
out
mov
retf
sub
add
dec
enter
(bad)
sub
out
mov
ins
jge
push
(bad)
jecxz
clc
adc
aaa
repz
test
push
shl
test
int
sub
mov
and
inc
cmp
adc
lock
das
sub
mov
or
mov
nop
ss
sub
jmp
addr16
cmp
xlat
mul
or
jg
dec
mov
test
fild
push
in
call
adc
xchg
cmp
scas
mov
das
scas
cwde
fs
xchg
adc
jns
sub
(bad)
push
inc
enter
fidiv
sbb
mov
xchg
jle
popa
cmp
fwait
mov
push
scas
ja
cld
sbb
jmp
lds
leave
pushf
mov
outs
lahf
xchg
stc
push
mov
ror
movs
cld
pop
mov
fistp
fistp
test
sbb
out
gs
hlt
cs
or
les
call
cwde
jae
cmp
fstp
add
jg
cmps
mov
cmp
rcl
retf
sti
mov
or
mov
outs
mov
jns
push
out
sahf
sub
inc
dec
iret
dec
loope
xchg
dec
test
mov
imul
enter
(bad)
xchg
mov
jl
dec
or
mov
inc
iret
outs
cmp
ins
sbb
inc
or
xchg
push
or
pop
je
mov
pop
pop
mov
jbe
ss
fldenv
mov
inc
mov
jp
and
sbb
push
sub
and
pushf
inc
sub
(bad)
scas
mov
push
lods
push
adc
jmp
aad
in
xchg
into
lods
into
lock
push
ins
fs
(bad)
mov
aas
retf
sub
dec
lock
and
mov
mov
sbb
dec
fild
sub
lds
sbb
mov
add
push
mov
aam
sbb
inc
ror
imul
sub
push
fs
inc
sub
add
fistp
cmc
lods
clc
cld
push
mov
icebp
stc
mov
xlat
mov
inc
jle
sbb
pushf
add
sbb
and
int3
and
inc
add
cmp
adc
xor
mov
push
pop
mov
iret
scas
xor
sbb
mov
ins
out
and
xor
xchg
push
clc
xchg
push
add
mov
mov
sbb
add
and
std
cld
push
sub
xor
sbb
pop
cmp
inc
es
pop
imul
or
mov
mov
adc
in
(bad)
fstp
xchg
dec
push
mov
clc
mov
mov
std
sbb
and
adc
mov
jmp
fidiv
inc
repnz
push
add
mov
sbb
(bad)
sub
rcl
add
outs
and
cwde
jecxz
lahf
push
mov
repz
cmp
aaa
in
sbb
out
fidivr
jbe
inc
and
mov
adc
popa
cmc
pushf
adc
div
dec
(bad)
mov
xor
xchg
jae
pop
lods
cmc
rol
cmc
fdivp
push
inc
ds
mov
popa
stos
mov
iret
sub
push
lds
add
push
movs
inc
out
ja
loop
js
pop
out
fnstenv
pop
fidiv
scas
add
or
fs
xor
mov
jne
add
push
bnd
loop
jne
push
call
mov
lock
mov
int
in
out
call
ins
add
cmc
imul
shr
dec
pop
cli
(bad)
lock
add
mov
sahf
inc
jmp
xor
cmp
aaa
fbld
mov
sahf
movs
sbb
push
test
cmp
aaa
gs
mov
sti
fwait
sbb
sub
rcl
jb
mov
xchg
push
mov
jmp
call
inc
fistp
push
fs
cmp
inc
inc
sbb
inc
imul
ja
sub
aam
in
enter
mov
cmp
mov
jno
imul
cmps
push
loop
xchg
inc
jne
data16
push
test
dec
and
add
sub
lahf
inc
sbb
sbb
dec
lock
mov
push
pop
shr
scas
ins
fwait
mov
mov
arpl
clc
mov
jae
jno
mov
in
jecxz
jo
jg
cmp
stos
dec
push
rcl
(bad)
push
jecxz
xor
rol
popa
mov
jle
(bad)
and
and
mov
dec
xor
dec
bound
sub
pop
adc
dec
dec
sbb
int3
sbb
(bad)
mov
cmp
adc
std
(bad)
jne
stc
dec
pop
sub
repz
(bad)
jg
mul
retf
jmp
fdiv
loop
or
mov
add
pop
inc
imul
sbb
mov
dec
sub
aam
cmps
mov
push
sub
sbb
jle
xchg
ins
jbe
imul
xchg
jno
inc
inc
pop
cmps
aas
or
adc
add
inc
aas
sub
pop
xor
and
fdivp
xor
pop
fwait
xchg
in
lock
loope
neg
jl
mov
fdivr
fsubr
push
ja
push
xor
push
fadd
mov
dec
or
(bad)
dec
jle
dec
int
xchg
ja
add
outs
xchg
sahf
les
add
lock
sub
mov
imul
inc
nop
loopne
xchg
out
push
cs
mov
movs
xlat
dec
gs
adc
jae
out
stos
mov
xor
stos
inc
mov
and
iret
shl
jns
iret
mov
dec
or
push
mov
jno
mov
sti
dec
mov
adc
pop
repz
rcl
jmp
xor
mov
and
cmp
and
test
pop
loop
in
add
inc
fisub
cmp
mov
adc
shl
ror
ja
cmp
dec
repz
mov
sub
sub
loopne
mov
sub
fcomp
sar
and
ret
and
arpl
movs
fmul
pop
and
fwait
push
adc
xchg
(bad)
mov
jmp
dec
mov
inc
stos
xchg
and
je
xchg
cmp
pusha
cwde
sub
sahf
cmp
test
call
test
add
(bad)
xor
loop
dec
sub
shr
psubsb
jl
xlat
cld
jne
imul
mov
repz
aam
push
pop
inc
mov
test
ds
sbb
dec
fidiv
sahf
sub
out
add
out
inc
mov
cs
jno
jb
jb
scas
arpl
in
and
jecxz
sub
dec
cmp
push
lahf
fwait
jmp
cld
add
mov
or
popf
sub
inc
xor
loope
mov
jne
ja
mov
mov
mov
mov
sbb
(bad)
retf
sub
jbe
ffree
and
ds
sub
inc
adc
xor
(bad)
mov
out
cmp
out
cdq
jb
pop
call
sub
push
add
sahf
mov
jecxz
fwait
pop
cs
lods
and
rcr
es
shl
mov
xchg
jno
shl
cwde
movs
rcl
jmp
addr16
ja
push
call
jle
jmp
(bad)
sti
mov
nop
aaa
fwait
imul
xchg
in
pop
mov
mov
jp
push
je
imul
test
jne
aas
xchg
add
sbb
cmp
sbb
and
mov
les
in
jne
xchg
mov
pop
lods
mov
mov
fs
jns
test
sbb
lods
and
mov
fild
(bad)
dec
jg
leave
lds
out
lock
movs
scas
lods
imul
pop
push
stos
jl
xchg
inc
adc
ret
dec
(bad)
in
cmp
mov
mov
outs
mov
icebp
push
int3
mov
add
fsubr
pop
cmps
jp
push
out
sub
dec
jle
inc
jmp
add
mov
frstor
cli
sbb
mov
mov
push
sbb
inc
out
ins
fistp
adc
sbb
mov
sub
mov
jmp
inc
cld
inc
call
push
rcl
ss
inc
xor
mov
pop
mov
xchg
push
std
pop
movs
xor
add
ins
xchg
push
xchg
mov
sti
dec
adc
xor
inc
sub
inc
sub
push
retf
jno
add
in
sub
adc
ins
std
adc
jae
idiv
sub
out
out
xor
mov
mov
out
dec
dec
jnp
pusha
das
push
out
push
mov
pop
dec
in
push
add
(bad)
cs
(bad)
xor
xchg
dec
push
xchg
adc
cmp
(bad)
fs
jmp
add
lahf
jbe
rol
inc
es
sti
pop
cmp
test
fldcw
pop
(bad)
inc
ret
sti
and
int3
jmp
int3
cdq
adc
adc
leave
out
mov
aam
iret
sub
pop
sbb
xchg
push
dec
jb
add
ds
mov
mov
cmp
mov
and
fsub
jb
or
call
pop
shr
mov
rcr
mov
jnp
lods
mov
mov
mov
add
add
into
fsub
xchg
mov
sub
adc
push
push
mov
dec
and
add
out
leave
rol
or
cmp
push
cs
xlat
shl
icebp
ficom
pop
push
jnp
test
jns
inc
jle
cwde
test
pop
inc
call
mov
dec
xchg
pusha
push
fdivr
in
and
and
hlt
loope
dec
in
stos
cmp
xchg
cli
fwait
rol
lods
push
outs
cmp
and
gs
(bad)
aad
xor
mov
dec
loop
inc
test
cwde
inc
out
and
dec
ret
enter
lods
shl
and
push
addr16
lds
mov
mov
scas
xor
outs
out
enter
aas
leave
add
jl
into
in
inc
jp
or
or
movs
mov
push
or
popf
fisubr
fdiv
add
push
push
and
adc
int3
fstp
ficomp
xor
mov
mov
push
lock
repz
jb
mov
and
out
and
mov
pop
bound
icebp
fstp
inc
dec
push
daa
xor
das
popa
mul
fs
pushf
sub
cwde
popa
pop
and
mov
mov
mov
sub
sbb
push
pop
cld
mov
ds
js
test
fwait
test
mov
and
dec
dec
dec
add
mov
aas
lods
sub
mov
xor
sbb
xchg
shl
dec
ret
invd
pop
rol
dec
cld
je
pop
mov
stos
ins
(bad)
fadd
cmps
sub
xchg
inc
repz
jae
sbb
inc
fimul
jecxz
jbe
dec
jns
mov
jb
fistp
fist
mov
mov
mov
mov
ret
int
les
loopne
sub
push
jp
sbb
and
push
jb
daa
sbb
int3
mov
fstp
add
push
mov
fstp
ret
pop
lea
jp
mov
fldenv
aad
mov
inc
xor
dec
leave
movs
cld
fmul
dec
push
es
rcr
ja
cld
pop
push
mov
adc
jno
int3
ds
pop
sbb
imul
inc
fisub
jmp
repz
add
add
adc
cmp
je
fiadd
lock
fist
cmps
lahf
xchg
(bad)
gs
jb
jno
test
fwait
(bad)
push
xchg
xchg
jg
ins
inc
cli
mov
sub
xor
ss
mov
jnp
cmp
and
imul
push
leave
mov
push
jb
les
mov
(bad)
pusha
or
ss
aad
sub
int3
dec
rcl
mov
sub
out
xchg
adc
mov
mov
les
xchg
icebp
les
mov
lods
bswap
daa
dec
cmp
test
enter
pop
test
push
cmp
jp
xchg
les
les
xor
fisubr
sti
test
add
inc
ins
cs
xchg
pop
xchg
aam
daa
mov
add
push
lds
fsubr
movs
and
out
inc
and
ror
adc
xchg
push
add
jge
xor
xchg
push
cmp
cmp
movs
pushf
mov
jmp
xchg
pmulhuw
rcr
dec
cmp
cwde
xor
clc
fbld
pop
imul
add
idiv
sahf
cs
add
fcom
cmp
out
dec
ins
mov
pop
push
cs
xchg
std
jl
xor
xor
sub
dec
pop
mov
push
mov
pop
mov
sub
jecxz
ret
pushf
adc
cmc
pop
sub
fwait
mov
adc
jp
fiadd
mov
and
jno
inc
add
xor
jb
ror
scas
pusha
jmp
jno
loopne
je
mov
out
sbb
ret
sbb
or
mov
(bad)
in
add
add
or
mov
scas
test
jge
sbb
cmps
repnz
outs
sar
pushf
push
xchg
sbb
das
mov
mov
shl
adc
bound
jne
aam
add
cwde
push
jno
cmps
cmp
mov
cmp
repnz
rcl
xchg
popa
sahf
(bad)
rcr
mov
jnp
pop
adc
mov
in
push
mov
mov
xor
outs
iret
push
xchg
std
or
dec
pop
pop
pop
pop
popf
cli
mov
adc
mov
jnp
dec
adc
in
fidiv
mov
xor
jb
dec
sbb
inc
sbb
loopne
mov
dec
xor
sbb
push
movs
fs
xchg
outs
push
inc
xor
dec
scas
cmp
push
jmp
add
in
gs
cmp
neg
outs
and
push
push
add
sti
jl
stos
stc
ins
out
dec
jbe
mov
sbb
lods
cmps
xchg
sti
xchg
jp
or
jne
enter
and
fs
std
push
fcmovne
jno
movs
in
push
mul
sub
fsub
push
sub
pop
mov
mov
xchg
add
pop
addr16
out
jl
jo
inc
es
push
aad
inc
sub
out
mov
push
addr16
dec
mov
xor
push
inc
xchg
push
add
ins
mov
dec
retf
cmp
pop
std
in
pushf
xor
mov
test
push
lods
enter
cmp
enter
xor
stc
and
aas
test
or
jo
push
pop
inc
aad
hlt
mov
jecxz
dec
add
cmp
mov
mov
ret
dec
pop
inc
rcl
test
aad
xor
xchg
adc
mov
mov
mov
adc
test
or
cmps
push
xor
mov
shl
fdiv
add
pop
popa
popa
aam
push
fwait
test
cwde
(bad)
loop
popf
and
sbb
push
repz
jmp
and
cmovo
mov
(bad)
std
and
adc
leave
adc
fnstsw
mov
mov
dec
stos
add
js
xor
sahf
push
inc
mov
sbb
std
clc
mov
aam
xchg
fist
imul
cmp
imul
popa
add
scas
retf
cmps
mov
mov
mov
bound
and
push
ret
sub
test
lods
mov
sar
(bad)
es
mov
fwait
inc
mov
xchg
and
je
retf
xor
gs
add
pusha
cmps
mov
jno
cwde
jmp
fwait
xchg
cmc
or
or
sub
push
pop
stos
loopne
mov
movs
jo
xor
jnp
push
and
xchg
loopne
in
lock
adc
mov
(bad)
or
mov
inc
neg
pusha
jg
xchg
movs
fucomp
xchg
pop
stos
movs
bound
push
mov
push
out
test
out
mov
xchg
sbb
fdivr
mov
cld
sbb
dec
ins
or
(bad)
fist
jecxz
movs
and
push
adc
xchg
aad
lods
(bad)
iret
inc
aad
sbb
fst
or
movs
fs
retf
push
mov
push
xchg
jb
jo
jecxz
leave
or
push
std
sbb
in
mov
es
mov
cs
fild
fsub
jo
jge
test
into
and
or
mov
jge
adc
stos
push
xchg
or
cmp
push
mov
sbb
jl
es
xor
ins
leave
jae
adc
mov
jmp
and
fdivr
data16
cli
push
mov
test
adc
or
lock
cmp
jp
sub
lods
pop
and
and
add
nop
fucomp
ret
(bad)
js
test
mov
cmp
enter
adc
mov
add
jb
mov
mov
mov
pushf
mov
jb
mov
mov
inc
fs
mov
retf
fisub
outs
test
sub
jmp
cmp
inc
ret
cmp
mov
mov
cwde
inc
mov
enter
or
push
shl
in
xchg
lods
or
ins
mov
push
(bad)
(bad)
daa
jmp
leave
aas
mov
sbb
test
pop
inc
mov
aam
adc
fwait
iret
mov
scas
cmp
aam
stos
dec
hlt
mov
and
test
dec
imul
jo
and
jb
test
or
(bad)
sbb
add
movs
mov
mov
or
(bad)
arpl
(bad)
stc
or
fwait
cmp
shr
cmps
cmp
dec
mov
adc
sub
add
dec
push
es
pusha
(bad)
addr16
jecxz
lods
hlt
outs
sub
stc
cmp
adc
xchg
inc
push
dec
call
mov
inc
xchg
push
sbb
add
xor
(bad)
hlt
pop
test
in
fst
addr16
mov
fucom
cs
cmp
jp
mov
jns
sbb
jmp
cmp
push
or
jb
ins
je
sbb
sub
or
inc
(bad)
sar
xchg
stc
shl
sub
movs
out
jp
or
retf
(bad)
(bad)
stos
jecxz
mov
mov
inc
add
ret
jge
sar
lods
stc
inc
lods
push
icebp
push
int3
adc
jmp
sahf
bound
imul
ret
mov
imul
retf
mov
nop
fstp
loop
ins
pop
imul
inc
adc
xchg
push
sub
sub
cmp
cld
xor
test
sub
adc
jecxz
loope
pop
push
xor
sub
lahf
jge
or
in
pop
mov
aas
mov
sti
add
sub
arpl
cmp
test
xchg
clc
jnp
add
jno
xor
(bad)
jl
call
fsub
pusha
and
popf
xchg
push
sub
lock
mov
xchg
cld
repnz
mov
(bad)
pop
cmp
addr16
pop
pusha
fild
push
xor
lods
mov
xchg
imul
mov
lahf
mov
or
xchg
adc
repnz
xchg
adc
out
xchg
ret
sahf
adc
ss
daa
sub
or
pop
in
dec
sbb
dec
xchg
dec
stc
jl
inc
in
and
add
mov
fnstcw
push
ja
adc
movs
add
jne
pop
inc
xchg
mov
jae
cmp
pop
inc
loopne
lods
or
xor
pop
call
ins
and
xor
icebp
clc
ins
movs
adc
push
xor
mov
movs
(bad)
inc
fcmove
push
xchg
cmp
mov
mov
mov
push
sbb
pop
pop
dec
mov
lea
js
add
pop
adc
inc
fldz
scas
xor
pop
mov
cli
adc
mov
bound
push
rcl
adc
pop
daa
mov
or
push
xchg
xchg
dec
push
pushf
sub
xchg
sub
hlt
sbb
xor
dec
shr
loopne
std
scas
repnz
jns
test
gs
or
test
out
jmp
mov
push
xchg
test
in
repz
jge
loop
nop
imul
mov
push
jns
aas
inc
out
retf
jmp
inc
xor
pop
push
dec
(bad)
bound
and
sbb
xchg
neg
jmp
(bad)
aam
int
pusha
sub
jl
jecxz
cmps
mov
add
mov
out
and
push
retf
jmp
in
pop
pop
dec
retf
pop
fcomi
pop
(bad)
cdq
inc
xchg
adc
and
pop
loop
(bad)
(bad)
test
sub
aam
pop
xchg
cwde
mov
sub
fild
out
mov
mov
mov
push
pushf
xlat
retf
data16
dec
and
add
pushf
mov
and
push
adc
push
cdq
iret
add
adc
dec
push
repz
push
addr16
movs
dec
repnz
call
jmp
mov
dec
stos
jne
xchg
int3
xchg
arpl
and
lods
int
popf
ret
adc
addr16
cmc
cmps
ins
dec
mov
lea
es
gs
nop
xor
aaa
(bad)
popf
jae
mov
pop
popf
add
mov
adc
jne
sub
pop
pop
sbb
mov
sbb
out
xchg
ror
stos
inc
or
or
js
jbe
(bad)
into
xor
shr
pusha
pop
rcl
xchg
fsubr
push
test
mov
mov
or
mov
cmps
sar
push
mov
mov
xchg
push
rcl
jge
aas
into
push
add
pop
pop
arpl
add
mov
and
lods
jbe
outs
les
call
repnz
das
sbb
repnz
jno
addr16
ds
pop
pop
xchg
add
loope
cmp
xor
mov
sar
int3
test
aas
and
int3
fisttp
les
jbe
(bad)
lock
sbb
sbb
aam
mov
mov
jbe
mov
dec
mov
out
push
ja
ror
mov
or
outs
movs
stc
jae
jae
shr
lds
bound
or
ja
xchg
call
imul
loopne
(bad)
hlt
dec
adc
sub
xchg
arpl
inc
or
jnp
pop
mov
push
xlat
test
xor
dec
frstor
xlat
loop
das
adc
jnp
rcr
pop
pop
sub
pushf
imul
or
fs
xchg
cmps
xor
rcr
dec
fidivr
adc
movs
fwait
jp
shl
push
cli
cld
mov
adc
(bad)
sti
inc
pop
ja
push
jne
retf
test
push
les
adc
xor
push
fild
push
clc
push
mov
pop
inc
xchg
jge
add
dec
mov
div
mov
fldl2e
mov
adc
lea
out
xchg
test
movs
cs
mov
adc
add
loopne
nop
mov
adc
ja
xchg
xor
fwait
cmc
rcl
mov
ins
and
pushf
adc
rcl
ja
push
adc
mov
in
fidiv
dec
lock
out
mov
sbb
cmp
cmps
xchg
mov
or
inc
or
and
cld
add
enter
enter
sub
aam
mov
pusha
or
inc
ss
sub
inc
mov
add
xchg
mov
ret
xchg
push
out
xchg
sbb
dec
mov
aam
push
add
and
push
adc
sbb
xchg
ror
adc
pop
adc
adc
or
xor
hlt
inc
cs
sub
jo
cmps
cwde
sub
add
inc
jmp
mov
and
in
aam
cmp
ss
dec
xor
inc
add
popa
inc
int3
mov
cmps
fcom
mov
std
pop
movs
cmp
jg
mov
lods
mov
addr16
jae
xchg
(bad)
or
xchg
rol
sbb
xor
ins
int3
cmovnp
in
jns
lods
pop
loope
test
dec
mov
js
(bad)
xchg
adc
test
lods
pop
push
or
popf
jns
test
in
out
inc
push
fs
dec
stos
push
loope
iret
ins
cmp
cmp
inc
mov
adc
inc
test
pop
loopne
aas
and
mov
xchg
push
jp
adc
test
stos
jbe
cmp
rcl
push
shl
scas
addr16
shl
aaa
outs
ins
addr16
mov
xchg
outs
aad
int
add
adc
add
sub
stc
and
inc
mov
mov
and
push
add
push
les
aaa
inc
sbb
retf
dec
or
mov
addr16
lock
fsub
add
mov
inc
(bad)
out
les
fdivr
call
sbb
shr
sar
mul
cld
jg
cmc
call
dec
fwait
not
cmp
xor
cld
call
pop
pusha
bound
or
mov
data16
mov
popf
loope
xchg
scas
stc
out
sbb
inc
cmc
stos
jo
and
pop
mov
dec
xor
xor
ficomp
or
popf
lock
sbb
jp
repz
mov
ins
pop
cld
test
jo
imul
sbb
stc
sub
jp
push
xchg
enter
and
and
xlat
dec
push
lahf
cmps
gs
test
pop
sbb
test
stos
nop
mov
push
ins
xchg
les
or
mov
(bad)
ss
sub
mov
out
push
pop
imul
xlat
(bad)
dec
dec
cdq
mov
push
inc
imul
cmp
cmp
or
movs
out
sub
sti
inc
and
jge
push
and
mov
test
mov
jb
retf
adc
mov
inc
imul
adc
sar
fs
fistp
stc
pusha
cmc
bsf
lods
jl
imul
add
outs
mov
out
mov
xor
enter
xchg
scas
xlat
jge
shl
jbe
sar
mov
(bad)
out
pop
add
xor
sbb
sbb
scas
loope
clc
sub
je
psllw
pop
sahf
lahf
fs
sub
push
mov
das
add
addr16
ficomp
cli
out
adc
xor
push
pop
mov
js
es
outs
ins
pop
lea
inc
ja
or
pop
xor
lea
cmp
fwait
push
std
test
in
push
clc
cmps
mov
mov
fnstcw
enter
addr16
mov
jle
push
hlt
fisubr
repnz
mov
pop
int3
(bad)
dec
jno
ins
push
add
mov
inc
popf
out
adc
pusha
aas
inc
rcl
call
imul
and
stos
push
ret
ss
jae
and
sub
lock
(bad)
fist
test
xchg
sbb
sbb
dec
test
jl
jns
ja
jnp
xchg
sbb
jg
sub
dec
hlt
lea
sar
pop
daa
pop
ret
leave
inc
inc
adc
lods
and
pop
or
dec
sbb
mov
pusha
push
add
(bad)
cmps
push
inc
nop
(bad)
fcomi
cmps
and
cdq
out
push
add
cmp
inc
cmps
mov
nop
pushf
daa
call
xor
cli
pop
cmp
lods
std
cdq
std
stc
out
xchg
mov
hlt
aaa
fninit
pop
inc
mov
or
leave
jge
cdq
jns
mov
dec
mov
rcl
cmps
xchg
pop
mov
pusha
scas
stos
test
jp
loop
lds
cld
pop
cmps
xchg
es
push
push
mov
fidiv
jno
sbb
mov
jno
fbld
push
jmp
add
xlat
xchg
ror
xchg
daa
lea
(bad)
fisubr
std
idiv
cmp
shl
inc
cmp
inc
retf
cmp
mov
addr16
nop
mov
fwait
sub
or
shr
mov
fdiv
dec
call
sub
inc
das
mov
xchg
jmp
aam
and
bound
jbe
fmul
sub
retf
(bad)
cmc
(bad)
test
in
lock
sub
and
pop
add
arpl
cs
and
pop
stos
add
adc
loope
call
call
popa
retf
addr16
xchg
dec
cmp
lahf
dec
cli
call
or
je
test
jbe
ins
sub
xor
mov
lea
mov
jnp
aaa
pop
xchg
fdivr
pop
add
aam
cmp
arpl
popf
xchg
dec
add
lahf
xor
ror
mov
dec
mov
imul
ror
cmps
sbb
lods
inc
imul
cmp
dec
hlt
fnstenv
test
enter
cmp
shl
sbb
or
push
out
pop
sti
mov
add
cs
fwait
pushf
inc
push
nop
test
ficom
out
mov
mov
(bad)
jno
dec
outs
mov
shl
ss
xor
loope
inc
sub
mov
jne
xor
mov
xchg
inc
inc
xchg
in
push
and
popa
xor
pop
aaa
out
mov
inc
repz
hlt
mov
cmp
jmp
pop
sbb
xlat
inc
in
jge
je
cmp
jno
or
or
sub
retf
dec
dec
mov
dec
dec
mov
daa
push
mov
jns
or
enter
mov
dec
and
nop
push
add
popf
ds
lds
xchg
inc
mov
cmp
sub
push
(bad)
mov
movs
push
data16
adc
push
pushf
add
mov
inc
mov
adc
mov
mov
cmp
xchg
inc
fcom
outs
push
dec
or
mov
sub
mov
jno
fst
adc
repz
sub
lods
out
mov
aaa
ins
mov
subps
pop
out
add
lea
jecxz
lahf
inc
add
push
retf
retf
fwait
clc
add
xor
inc
dec
cmp
jo
cli
imul
jl
es
xor
pop
or
cld
pop
dec
sti
cmp
aad
jge
jge
enter
dec
mov
lock
in
and
ins
jl
cmp
mov
sub
rcl
sbb
pop
sbb
cld
adc
scas
out
adc
call
mov
in
sbb
push
cli
mov
mov
adc
gs
mov
jno
inc
neg
xchg
and
push
sbb
in
call
cwde
mov
dec
js
ins
je
stos
mov
pop
cmp
jo
push
jp
jg
adc
adc
sahf
lds
push
push
int3
fbstp
sbb
retf
mov
mov
test
jno
mov
and
push
adc
daa
jp
bound
inc
dec
ins
es
cwde
mov
in
mov
stos
fimul
imul
inc
pop
pop
outs
test
addr16
pop
jg
sub
inc
push
push
xchg
dec
mov
mov
sub
jns
daa
stc
loopne
clc
jle
adc
cmp
jg
(bad)
inc
and
sbb
jp
jmp
add
push
and
call
dec
ja
and
xor
add
ja
lods
inc
es
xor
fmul
test
and
mov
dec
(bad)
out
push
pop
shl
call
into
cmps
sub
test
sahf
scas
mov
xor
fmul
std
pop
call
in
cmc
cmp
mov
xchg
gs
lods
cmp
(bad)
test
cmc
test
in
push
adc
mov
scas
(bad)
dec
(bad)
pop
std
and
in
pop
inc
dec
in
test
pop
and
jo
jmp
pop
or
fs
adc
shr
inc
cs
xchg
fwait
adc
clc
cmc
leave
rcl
pusha
push
fnsave
clc
cmp
ins
outs
mov
es
loope
push
cmc
cmp
test
mov
push
dec
dec
sbb
leave
jmp
sub
add
int3
mov
scas
out
pop
outs
inc
mov
push
(bad)
shr
mov
mov
cmps
cmp
mov
ins
and
add
fcom
xchg
loop
inc
jbe
outs
cmp
repnz
xchg
cmp
xor
push
pop
adc
outs
cwde
mov
inc
push
push
adc
xchg
inc
jmp
push
cld
out
xlat
mov
sbb
push
mov
jp
mov
pmaddwd
adc
add
lds
enter
std
inc
jmp
or
out
lods
add
out
mov
sbb
es
jmp
xor
cmc
popf
sbb
cmp
bound
out
xchg
push
loopne
sti
jmp
or
ins
jo
test
dec
sbb
or
js
enter
dec
or
out
ret
daa
dec
xor
jge
adc
xor
aaa
ins
adc
popa
sti
inc
rol
sbb
(bad)
jb
retf
or
out
into
xchg
sub
fucomp
ja
cs
mov
dec
ror
jmp
enter
xchg
xor
(bad)
aad
es
adc
je
mov
addr16
popf
scas
sbb
mov
loopne
jo
mov
mov
pop
repz
jmp
or
dec
mov
push
push
ins
push
sbb
mov
sub
setp
shr
mov
aas
sar
leave
clc
add
xchg
dec
repnz
loope
ins
mov
sar
jnp
bound
sub
xchg
int
aaa
gs
pop
std
retf
inc
scas
enter
xchg
jno
pop
add
mov
and
mov
dec
adc
xchg
cmp
mov
push
sbb
or
aas
dec
push
or
inc
and
mov
push
push
mov
ds
mov
xor
push
lods
pushf
fmul
dec
inc
xor
sub
lods
xor
inc
aad
ins
mov
retf
maskmovq
sbb
jecxz
xchg
add
fwait
int3
adc
js
adc
cmp
out
jae
xor
retf
inc
mov
lar
sub
cmp
dec
mov
test
mov
fcmovnbe
and
adc
loopne
fisub
sub
dec
data16
cmc
dec
add
cli
xlat
jnp
and
es
inc
mov
xor
dec
pop
data16
retf
dec
and
sbb
lock
xor
es
fist
sub
cmps
out
ss
mov
jae
cld
movs
adc
mov
or
push
ins
movs
mov
cwde
rol
xor
xor
lods
adc
xor
jno
aad
imul
cli
inc
jmp
mov
push
jo
outs
aam
cmp
lods
loope
ss
(bad)
or
sbb
ror
xlat
xchg
push
push
test
push
movs
or
pop
imul
outs
cmp
cmps
and
jno
shl
je
adc
pop
retf
out
and
adc
retf
mov
jnp
push
cmps
jae
pop
not
and
xor
js
out
jo
mov
arpl
pop
arpl
fidiv
outs
ss
rcl
xor
mov
call
cmp
test
adc
mov
mul
adc
retf
xor
div
mov
scas
movs
mov
sub
retf
push
dec
leave
leave
lock
call
inc
das
sbb
dec
jbe
sbb
retf
or
retf
jg
sbb
pop
jmp
out
cmp
mov
mov
mov
loope
push
cmovl
retfw
push
retf
pop
std
jmp
xor
cmp
add
xchg
fidivr
adc
addr16
xchg
mov
nop
js
push
mov
daa
aam
aas
jp
xor
jge
fcmove
jne
stc
jmp
jae
or
push
in
repz
(bad)
out
imul
arpl
inc
dec
imul
add
js
movs
fidiv
push
mov
movs
mov
and
sub
xor
sar
js
or
cmovg
and
icebp
pop
cmp
inc
call
ret
popf
pop
inc
in
nop
pop
or
sub
mov
add
jne
mov
call
div
jle
mov
outs
jne
inc
enter
cmp
push
push
pop
sbb
(bad)
cld
jnp
sbb
mov
cmps
scas
dec
inc
ds
in
mov
push
add
push
mov
pop
xchg
out
fsubr
jae
lods
inc
sbb
int
xor
test
leave
xchg
outs
xor
sbb
mov
and
out
inc
sub
pop
fimul
push
adc
mov
xchg
daa
mov
pop
cmp
mov
int
mov
cli
hlt
and
es
dec
out
and
mov
sahf
push
add
jbe
out
inc
ins
or
pusha
mov
xchg
sbb
sub
add
and
xchg
(bad)
(bad)
mov
aad
sbb
(bad)
mov
je
dec
cs
scas
ds
mov
mov
out
cmp
adc
mov
jge
push
sbb
std
pop
fcom
mov
fisub
and
or
cmp
mov
push
push
ja
add
add
(bad)
into
lea
mov
sahf
sub
pop
sti
ins
ja
xor
pop
mov
sbb
inc
fimul
neg
popf
mov
je
xor
jle
ins
lods
ret
cli
arpl
arpl
mov
cs
fwait
jnp
(bad)
push
mov
or
fadd
pushf
or
movs
test
jl
and
ins
mov
pop
jle
daa
mov
in
in
add
int
mov
push
loop
jmp
mov
sbb
fild
mov
rcr
out
std
sub
fbstp
push
sub
sbb
dec
shr
mov
fist
cmp
pop
inc
cmp
and
cmp
dec
push
mov
iret
sar
mov
mov
int3
retf
mov
fstp
stos
arpl
mov
clc
pop
dec
shl
cmp
hlt
pushf
jne
adc
mov
cmp
data16
ja
cmps
lods
mov
test
push
sub
sub
js
push
pop
xor
pop
xor
xlat
push
jbe
dec
or
pusha
jbe
cdq
jg
loop
fdiv
in
retf
pop
xor
cmp
jns
inc
movs
add
fst
mov
or
not
clc
cmp
mov
xchg
xchg
mov
push
xchg
add
push
outs
jmp
add
sub
fldenv
pop
push
inc
enter
cmps
(bad)
or
in
cdq
enter
push
and
loop
loop
stc
inc
inc
test
jbe
pop
cmp
xchg
jmp
push
pushf
aaa
in
jbe
lods
sub
and
retf
into
cmp
(bad)
or
cmp
in
push
in
and
jle
out
stc
imul
add
les
mov
rcl
and
enter
out
out
bound
xchg
std
icebp
jno
inc
add
nop
push
or
dec
cs
xor
pop
repz
test
aas
pop
jae
or
sbb
adc
jecxz
es
fnstsw
pop
jae
cdq
sbb
sbb
nop
lahf
aaa
out
xor
aas
ficom
test
(bad)
retf
jnp
sar
xchg
push
cli
or
cmc
mov
or
pop
les
retf
dec
mov
into
add
push
dec
pop
lods
push
addr16
imul
mov
call
push
cdq
fimul
lds
mov
fdivr
mov
push
test
inc
mov
(bad)
fldcw
pop
(bad)
repnz
movs
jecxz
jge
test
scas
pop
(bad)
lds
out
xor
cmps
push
shl
jns
daa
jge
repnz
push
lahf
and
mov
and
fst
bound
sub
and
push
jmp
push
enter
push
xor
mov
jg
pop
into
in
adc
sub
(bad)
(bad)
arpl
mov
iret
les
neg
das
rol
inc
fild
aad
in
pushf
ds
outs
repnz
push
mov
test
loop
sub
adc
mov
dec
push
xrelease
jo
pop
call
or
mov
adc
inc
cmp
sbb
fimul
cmp
adc
repnz
dec
mov
mov
les
ficom
lods
cmp
and
out
push
lods
fimul
shl
pop
cs
add
pushw
mov
in
sbb
xchg
in
push
lock
jg
scas
push
push
stc
pop
out
js
jmp
shr
fwait
lahf
int
pop
xor
jmp
stos
mov
adc
add
cmp
ins
ficom
cmps
cmps
repz
(bad)
aaa
sub
pop
add
or
push
test
xchg
jmp
mov
mov
mov
adc
sub
jp
(bad)
push
mov
mov
mov
sub
xchg
mov
add
pop
pop
xchg
mov
xor
aad
ins
mov
sub
int3
mov
push
mov
sbb
inc
jg
mov
sub
push
and
(bad)
cdq
cmps
ret
fidivr
inc
mov
shr
adc
(bad)
jno
sbb
adc
aad
ins
add
sar
add
repz
jns
leave
(bad)
pop
adc
retf
fisub
inc
sbb
add
stc
icebp
xchg
jg
xchg
imul
pop
repz
sub
jmp
sar
push
sub
xchg
dec
or
adc
add
mov
jmp
aad
add
repnz
pop
inc
mov
push
mov
jmp
test
jg
je
xor
out
mov
cmp
leave
data16
and
dec
xlat
cmp
neg
sub
rcl
adc
(bad)
or
dec
add
jo
loope
arpl
push
sub
sub
sti
mov
es
jb
mov
cmp
add
das
cmp
fnsave
scas
cdq
cmp
jmp
mov
pop
ins
dec
sbb
add
inc
in
inc
push
retf
and
mov
in
or
mov
pop
add
(bad)
loopne
jmp
mov
aad
cmovnp
arpl
out
adc
cwde
shl
sub
mov
push
iret
cdq
mov
das
mov
leave
repz
aad
test
outs
and
mov
pop
pop
dec
shr
ror
je
xchg
and
dec
xor
scas
sbb
ficomp
ror
cmp
mov
xchg
daa
or
adc
push
xchg
cmc
xor
js
int3
in
add
ret
es
sahf
pop
sub
jmp
fidiv
xchg
xlat
ret
jno
inc
cmp
test
test
sub
data16
daa
inc
xor
or
push
or
jmp
es
mov
adc
pop
sbb
push
fcmovne
cmp
out
mov
inc
jae
mov
xchg
inc
xor
stc
les
mov
xor
dec
jb
ror
xor
stos
and
xchg
sub
adc
fnstsw
or
push
lahf
mov
(bad)
jp
cmp
push
xchg
imul
enter
test
adc
aad
mov
bnd
mov
mov
enter
jl
pop
ins
xchg
sti
aas
pusha
je
inc
je
in
shl
jmp
mov
mov
push
cwde
jbe
dec
cld
inc
xchg
adc
sahf
retf
cld
jecxz
aam
cmp
jg
mov
(bad)
(bad)
cmp
xchg
call
mov
sti
retf
adc
xor
xchg
or
cmc
dec
or
add
sbb
and
mov
and
pop
stos
pop
cmp
and
jns
push
inc
pushf
fist
addr16
loopne
fisubr
retf
lds
in
sub
mov
add
jae
pop
imul
pushf
mov
pop
jmp
push
test
lahf
cmc
add
cmp
mov
mov
std
stc
stos
push
xor
in
pop
leave
xchg
clc
mov
cmp
jnp
pop
scas
inc
xchg
retf
or
or
aam
retf
xchg
out
xchg
stos
imul
fxch
int
push
dec
dec
addr16
add
cs
cmps
inc
mov
jb
adc
rcr
in
sahf
mov
xor
ffree
mov
sub
and
or
adc
scas
test
leave
int
imul
test
dec
ret
sti
jo
cmp
mov
jne
enter
dec
xchg
lods
mov
mov
inc
test
test
push
jnp
repz
ja
ret
push
sbb
jecxz
push
jns
push
lea
rcr
rcl
or
cmps
repz
gs
out
call
jbe
inc
push
xchg
cdq
sahf
fwait
out
pop
out
mov
mov
outs
sbb
push
sbb
mov
or
ja
push
pushf
mov
cs
ss
cld
test
mov
mov
mov
aaa
dec
pop
mov
adc
dec
movs
mov
sbb
repz
aas
inc
push
mov
jno
adc
out
std
xchg
mov
lods
mov
mov
cmp
jg
fs
xor
stc
daa
imul
add
inc
adc
cwde
xchg
cmp
data16
cmc
cmp
dec
inc
cld
push
xchg
call
ret
shr
sbb
(bad)
inc
and
fstp
ss
mov
or
lea
aaa
shl
adc
cmp
es
pop
add
nop
and
mov
pop
xchg
test
jns
add
xchg
pop
and
mov
mov
jb
into
or
adc
aaa
adc
sbb
lods
and
or
(bad)
ffree
call
mov
dec
div
dec
js
cmp
mov
cmp
xchg
bound
or
int3
pop
movs
loop
fdiv
cmp
test
out
mov
inc
cli
arpl
mov
dec
test
push
out
mov
xchg
inc
mov
sub
xor
jl
and
js
jmp
(bad)
mov
xchg
aaa
(bad)
stc
inc
sbb
minps
clc
vcvtps2pd
in
inc
ss
scas
xor
icebp
lds
hlt
lds
push
pushf
iret
rol
xchg
(bad)
inc
rol
dec
push
outs
jae
addr16
out
imul
ret
mov
(bad)
pop
popf
into
sti
mov
or
jb
arpl
jae
cmc
inc
ffree
fdiv
mov
jae
int
cdq
test
dec
(bad)
in
fwait
(bad)
shr
iret
aad
pop
(bad)
outs
(bad)
nop
retfw
ins
jle
pop
cld
push
add
jo
hlt
push
xchg
(bad)
icebp
dec
je
shl
in
xchg
cmps
jbe
mov
mov
popa
inc
dec
jge
jno
iret
aaa
push
int3
sbb
adc
sbb
loop
fdivr
cmp
js
mov
and
fwait
sub
outs
jg
test
dec
and
inc
out
ficomp
mov
cmp
das
sub
and
ret
dec
jae
stos
sbb
jb
fwait
sbb
loop
inc
(bad)
push
dec
lea
ds
mov
sahf
mov
add
paddq
mov
cwde
stc
jne
cmp
push
mov
mov
and
dec
mul
or
or
scas
icebp
mov
add
jnp
ror
push
push
pusha
out
pushf
push
xchg
push
inc
cli
sbb
sbb
test
add
pop
adc
adc
mov
daa
loope
pop
je
(bad)
in
sub
dec
repz
(bad)
dec
(bad)
cdq
fld
pushf
cmp
stos
imul
cmp
xor
sbb
retf
dec
movs
ss
std
fstp
cmps
test
cmp
fisttp
pop
cmp
ror
xor
lock
xor
xchg
call
scas
push
js
adc
dec
jg
xchg
cmp
(bad)
sub
inc
(bad)
jecxz
add
aad
dec
push
pop
into
mov
adc
cmp
inc
mov
jbe
pusha
mov
dec
pop
xchg
mov
sub
or
pop
lea
dec
aaa
adc
mov
daa
pusha
mov
inc
push
cmp
cmps
test
(bad)
push
inc
jnp
bound
mov
retf
jle
out
sbb
sub
es
loope
xchg
xchg
xchg
int3
out
and
push
daa
test
adc
mov
(bad)
cmp
pop
lock
xchg
jno
xor
cmp
ins
push
retf
pop
jl
(bad)
scas
outs
jo
shl
inc
ins
sar
test
pop
pop
test
push
adc
cmp
xchg
jno
rcr
sbb
jl
mov
push
jp
rcl
sbb
fstp
sub
cmc
scas
loope
(bad)
inc
mov
cmps
aad
or
push
popa
sbb
pop
fdivr
mov
sbb
mov
imul
inc
pop
mov
repnz
adc
aas
mov
push
aas
sub
mov
test
div
nop
ret
sbb
and
add
jo
xor
lahf
shl
rcl
add
dec
pop
(bad)
arpl
daa
mov
cs
call
jne
adc
rol
inc
je
pop
push
mov
clc
mov
test
test
data16
or
es
inc
and
int3
mov
adc
aam
call
test
fist
jl
jns
test
lods
mov
call
rcr
jbe
cmp
mov
enter
fild
cmp
dec
xchg
dec
ret
cmp
dec
sti
push
cmp
adc
cli
push
inc
in
push
dec
mov
lods
sbb
nop
rol
dec
jae
mov
inc
adc
xor
add
scas
pop
in
leave
pop
repnz
es
(bad)
in
cmp
xor
retf
cs
sbb
sub
mov
int
push
rol
jae
das
push
xchg
setl
sbb
cmp
pop
jmp
pop
mul
xchg
mov
mov
sbb
cdq
sub
mov
mov
jmp
dec
(bad)
push
cmp
xlat
mov
mov
retf
xor
ret
shr
add
loope
sub
mov
sub
add
dec
xor
dec
xchg
lock
push
rol
mov
(bad)
div
daa
ss
mov
out
xchg
xchg
into
xchg
jne
lods
add
cli
aas
ficom
das
mov
(bad)
adc
xor
push
fsub
adc
push
xchg
retf
arpl
loopne
lahf
adc
outs
rol
dec
pusha
xchg
loop
xchg
aad
mov
scas
clc
xchg
lahf
mov
out
or
retf
repnz
lods
movs
inc
lock
sbb
fstp
daa
test
rcl
loopne
mov
and
dec
add
icebp
mov
sub
popf
xchg
xor
adc
cld
lods
sub
cmps
cmp
adc
xchg
jb
(bad)
mov
lea
aad
mov
lock
dec
int
xor
inc
retf
dec
jmp
jae
and
(bad)
int3
stc
test
sbb
adc
outs
sub
nop
cmp
int
mov
mov
dec
fldcw
mov
lods
cmp
(bad)
sbb
pop
fwait
push
lods
jb
cmp
push
mov
mov
sbb
jmp
push
mov
mov
xor
je
loop
out
jmp
pop
adc
test
imul
(bad)
ret
sbb
popf
(bad)
jb
mov
mov
xor
scas
mov
hlt
and
push
bound
ret
hlt
cwde
fistp
ret
leave
jo
enter
sbb
adc
test
out
fld
popf
and
idiv
scas
xchg
sbb
mov
loop
push
pushf
cmp
out
in
iret
push
pop
rdpmc
push
movs
cdq
jo
sbb
rol
sbb
fidivr
test
and
xor
mov
jp
or
lods
jnp
imul
jb
jg
cmc
and
push
adc
fs
push
sub
dec
inc
xchg
cmps
lds
mov
lds
jo
cmp
jl
ret
add
loopne
in
and
jbe
in
lea
scas
push
inc
ret
movs
or
mov
fisub
sub
pop
add
scas
xchg
cdq
add
test
add
out
adc
mov
mov
(bad)
cmp
mov
add
pop
push
dec
xlat
pop
gs
in
cmp
jmp
(bad)
shl
retf
xchg
xchg
enter
pop
sbb
fmul
dec
push
or
fistp
ficomp
and
jmp
call
xchg
ja
dec
imul
aaa
add
mov
shr
out
aas
push
in
and
aad
fistp
sbb
mov
std
dec
loopne
pop
mov
sbb
or
loope
mov
lods
push
into
mov
movs
push
cld
dec
xchg
xchg
idiv
pop
inc
cmps
pusha
ror
push
call
(bad)
fcomp
cmp
je
in
fsubrp
jp
and
jae
sbb
pop
(bad)
out
test
cmps
xchg
cmps
inc
in
cmp
ret
pop
inc
mov
inc
pop
mov
dec
jl
repnz
test
cmps
(bad)
sub
ds
dec
test
pushf
adc
(bad)
dec
outs
inc
xor
aam
dec
lds
inc
jl
(bad)
pop
sbb
xchg
fldlg2
or
retf
sti
jp
sub
push
das
in
add
frstpm(287
jns
(bad)
mov
sbb
push
je
pusha
cmps
push
outs
pusha
fisttp
mov
lea
xchg
dec
xchg
mov
xor
add
and
add
or
je
leave
inc
rol
mov
or
pop
sub
adc
jle
xchg
ss
sbb
call
shl
cmp
add
jmp
or
ret
mov
mov
push
pusha
std
mov
js
dec
xor
xchg
cvttps2pi
data16
ror
fwait
jno
in
aam
cmp
mov
dec
bound
push
inc
jecxz
inc
shr
or
lods
sbb
icebp
loopne
outs
pop
fsubr
xor
xchg
rol
mov
in
mov
clc
xlat
push
push
gs
cmp
rcr
add
in
or
test
scas
fsub
lods
dec
aas
cmp
fs
dec
push
in
sub
sbb
ja
add
dec
jnp
mov
jne
test
adc
cmps
push
xchg
je
(bad)
mov
mov
outs
dec
fistp
push
(bad)
xor
in
pushf
enter
adc
(bad)
jl
sbb
add
addr16
cmp
setbe
push
fbstp
mov
xor
sbb
pop
push
pop
cmps
jge
pop
dec
inc
cmp
push
cmps
inc
ins
mov
shr
hlt
add
inc
or
or
pop
ret
inc
lods
sahf
add
cmp
fcom
cmp
ds
repz
(bad)
sbb
xchg
add
dec
add
fisttp
aas
icebp
jae
std
inc
and
sbb
sahf
addr16
jg
ror
jnp
std
mov
pusha
clc
mov
lods
push
in
mov
aam
rcr
push
pop
xchg
and
add
pop
xor
cli
repz
retf
(bad)
lods
data16
test
into
sbb
cli
(bad)
mov
lahf
jmp
xor
cld
lds
ja
jmp
mov
cmp
add
pop
and
dec
in
jbe
or
sbb
fidivr
repnz
leave
pop
mov
sbb
(bad)
hlt
dec
aad
sbb
adc
sti
outs
or
ds
push
js
fidiv
adc
out
jo
cs
cmps
xchg
into
nop
mov
lahf
das
dec
adc
gs
jbe
mov
out
sub
lods
mov
xlat
in
daa
lods
ins
popa
mov
inc
scas
jmp
jmp
sahf
xchg
pop
mov
adc
ja
xchg
mul
cmp
mov
ret
imul
mov
push
mov
jnp
adc
mov
std
lock
out
lock
into
addr16
inc
sbb
fcmovu
mov
jge
aam
sub
cli
scas
adc
xchg
fcomp
push
repz
inc
call
mov
dec
cmps
mov
jnp
pop
iret
cmp
fsub
loope
sbb
add
shl
movs
shl
jl
add
dec
test
adc
or
xchg
xor
scas
xor
in
or
push
jp
and
pop
mov
arpl
int3
cmp
and
ja
rcpps
mov
jns
mov
dec
add
arpl
and
push
pop
pop
ffree
imul
pop
and
push
xchg
pop
dec
dec
push
fldenv
jge
sub
pop
jne
in
xchg
jno
cmp
mov
cmp
aaa
(bad)
aad
in
jl
cwde
add
mov
jnp
xchg
iret
jnp
daa
jp
aad
ret
les
daa
imul
fild
les
dec
test
pop
in
adc
aas
sub
add
neg
out
mov
outs
in
ins
mov
mov
arpl
std
mov
cmp
les
mov
dec
in
jle
fs
cli
push
mov
jbe
rol
je
mov
jp
(bad)
mov
mov
test
push
mov
mov
mov
mov
mov
popa
sti
push
je
mov
push
xchg
inc
jns
pop
hlt
pop
cmps
out
sbb
call
popf
mov
mov
and
or
inc
jge
in
push
mov
xchg
push
fld
imul
lea
(bad)
retf
call
push
mov
loopne
mov
lea
dec
lock
ins
jbe
cld
cmps
test
xchg
fucomi
lods
fwait
movs
mov
jp
cmp
out
xchg
aaa
movs
jb
(bad)
in
mov
icebp
xchg
sbb
sar
imul
cld
(bad)
frstor
inc
cwde
add
mov
xor
mov
ins
pop
ds
sub
adc
stos
xlat
(bad)
sbb
addr16
jb
in
loopne
aas
xchg
jbe
and
or
sbb
out
popw
sbb
loop
lds
repz
dec
cdq
cmc
and
and
movs
jecxz
mov
pop
lgs
pop
add
std
ins
cwde
retf
ins
mov
jecxz
jecxz
push
cmovne
push
enter
fprem
jnp
inc
cmp
xchg
outs
mov
inc
lock
das
shr
jle
sbb
jl
lea
jbe
adc
and
aad
mov
and
lods
aas
push
mov
inc
mov
sub
jae
ja
arpl
fisubr
fwait
mov
fcom
or
inc
dec
outs
cmps
rcl
add
leave
imul
sar
daa
in
out
loope
mov
mov
test
cmps
sub
xor
(bad)
add
mov
sbb
fidivr
push
xchg
cs
inc
arpl
jb
jnp
call
jmp
shr
in
add
inc
repz
and
mov
sub
cdq
les
cli
cmp
outs
jp
pop
je
dec
push
or
mov
(bad)
data16
loopne
or
and
jg
out
nop
or
les
jb
movs
lea
cmp
push
icebp
dec
fadd
xor
ds
or
sti
mov
xchg
mov
xchg
(bad)
aam
jo
loope
stos
mov
push
pop
push
jl
inc
push
fs
fucom
xchg
jno
mov
call
shl
pop
dec
mov
xchg
inc
xor
jmp
arpl
(bad)
fiadd
or
sbb
ins
popf
fidiv
sbb
push
mov
(bad)
loopne
jmp
aaa
and
push
addr16
fstp
movs
inc
enter
jmp
xor
stos
mov
mov
cwde
pusha
clc
call
cmp
add
jno
out
bound
sub
jbe
push
ins
push
movs
pop
or
dec
jmp
push
call
clc
in
or
(bad)
mov
(bad)
out
nop
mov
pop
enter
and
inc
mov
ins
add
outs
rcr
sti
aaa
(bad)
pop
push
push
test
xor
mov
sub
adc
xchg
aam
add
loop
mov
nop
dec
out
dec
stos
push
inc
out
hlt
out
imul
std
ficomp
pop
mov
mov
cmps
int3
ret
jge
out
pop
dec
push
push
into
sahf
jl
inc
jbe
jne
popa
sub
push
fild
rcl
xchg
inc
call
outs
xchg
sub
popa
xor
mov
xchg
f2xm1
idiv
xchg
cdq
jne
cmp
mov
sub
push
sub
mov
xor
imul
out
in
mov
adc
or
ins
xor
leave
jno
mov
inc
jo
call
out
movs
aam
je
push
movs
jns
push
sub
push
jmp
mov
call
xor
adc
iret
and
pop
mov
sub
cmp
jae
jmp
lock
push
pop
push
pop
arpl
sbb
test
shr
ret
out
and
push
xor
fisub
mov
daa
push
mov
sub
test
movs
dec
jl
fstp
add
mov
sahf
push
cmps
adc
aam
xchg
xor
dec
outs
mov
dec
sbb
push
inc
(bad)
in
xchg
stos
(bad)
out
out
(bad)
lea
xor
(bad)
or
mov
and
xchg
inc
jo
lahf
icebp
int3
sbb
lock
imul
xchg
dec
add
mov
jle
sbb
and
cmps
push
call
inc
cmp
lahf
sub
imul
nop
int3
mov
stos
js
pop
inc
adc
scas
inc
and
and
push
mov
(bad)
(bad)
(bad)
xchg
or
fdivr
mov
sbb
int
sbb
fsubr
jmp
adc
inc
das
push
or
fimul
call
jle
pop
push
fsub
jmp
fwait
popa
fdivrp
stos
pop
add
aas
adc
test
and
xchg
retf
jecxz
sbb
test
in
cmp
sbb
mov
pop
loope
jecxz
aad
cli
jmp
fadd
jae
mov
mov
fisttp
xchg
adc
movs
mov
cmp
sbb
js
cmp
and
popa
shr
sub
outs
call
daa
movs
rcl
lods
setp
(bad)
ds
test
rol
maxps
lock
out
push
int3
mov
cld
jl
push
repz
cli
mov
sbb
dec
xchg
push
fdiv
cmp
mov
aam
jecxz
in
sub
push
cwde
inc
xor
repnz
pop
jg
inc
nop
std
add
adc
or
je
retf
sbb
mov
add
or
pop
ins
jae
xchg
jmp
or
jecxz
jle
dec
sub
in
sub
jne
sub
ret
(bad)
cmps
dec
cmps
push
int
out
ins
fiadd
sahf
je
fwait
(bad)
nop
mov
int
push
adc
clc
mov
ret
ss
sub
push
inc
pop
aaa
xor
popf
sbb
xchg
inc
shr
mov
outs
mov
or
test
test
dec
cmp
adc
or
adc
xor
mov
sbb
sub
or
push
jbe
lods
jmp
scas
sar
adc
dec
xchg
mov
xor
jg
dec
xchg
sbb
cmp
in
pop
aaa
aam
push
mov
mov
popf
in
movs
out
out
push
mul
mov
rcr
sbb
mov
xor
sub
pusha
into
int
or
mov
jnp
retf
rcr
cmp
pop
ror
ins
sub
and
aad
or
cli
rcl
fild
popa
in
clc
or
dec
xor
out
jmp
push
movs
push
popa
add
stos
sbb
movs
popa
scas
jae
aaa
mov
adc
pop
or
jmp
shr
push
add
fist
and
jb
push
mov
dec
cld
adc
jbe
or
nop
mov
clc
scas
in
ffreep
and
fiadd
shl
into
mul
sub
test
not
and
jecxz
call
mov
push
push
nop
outs
mov
std
inc
mov
mov
aad
push
sti
adc
xchg
shr
jmp
sub
sub
adc
mov
cmp
mov
dec
xor
in
inc
in
fmul
mov
xor
popa
sub
faddp
in
jge
pushf
mov
call
in
xchg
call
adc
sub
(bad)
call
pop
jnp
mov
lods
mov
pop
cs
push
stos
das
bound
inc
push
pop
retf
sbb
and
pop
int3
push
jae
and
and
mov
ja
ins
adc
jle
xor
stos
jl
retf
test
dec
sbb
lds
lods
inc
in
lods
out
push
popa
sar
or
pop
mov
xor
push
xchg
jmp
in
sub
jno
xor
into
pop
(bad)
jg
push
pop
stos
ss
movs
movs
jge
jno
mov
ror
push
mov
pop
dec
jb
jp
add
add
mov
or
cs
push
push
sbb
jmp
pop
jns
scas
popf
adc
pop
mov
push
xchg
cmp
div
mov
inc
stc
sub
(bad)
repnz
ins
push
mov
xchg
adc
shl
pop
in
inc
mov
and
adc
cwde
into
jle
adc
test
push
cmps
inc
cld
dec
jo
fwait
in
cmp
test
xchg
ret
or
lods
dec
mov
xor
sbb
enter
aam
xor
dec
or
into
jne
pop
enter
and
inc
cmp
pop
mov
popa
jns
mov
lahf
jle
gs
pushf
sub
pop
dec
dec
shl
jl
adc
mov
sbb
test
mov
cmps
aas
ret
lock
sub
push
(bad)
int3
pop
push
jle
ja
or
call
scas
adc
(bad)
aam
(bad)
jmp
xor
push
dec
push
xchg
sbb
dec
scas
jae
enter
stos
call
cld
mov
not
jo
push
xchg
lods
stos
or
iret
push
cld
ins
in
pop
(bad)
xchg
push
div
inc
adc
in
inc
mov
int
clc
icebp
test
das
daa
addr16
rcr
xor
mov
out
jo
call
inc
adc
int
xlat
jmp
mov
test
or
les
mov
xchg
(bad)
test
mov
daa
adc
js
test
cmp
(bad)
pop
scas
jo
scas
out
mov
pop
xchg
dec
sub
stos
sub
scas
cli
mov
sub
nop
jg
ss
in
push
push
push
dec
outs
sub
mov
das
adc
or
in
mov
ret
inc
xor
scas
mov
mov
adc
jmp
mov
xchg
jmp
cs
in
popa
xlat
sbb
sub
sbb
clc
nop
pop
dec
xor
and
dec
sbb
jne
pop
xor
dec
dec
dec
mov
cs
out
icebp
nop
imul
cli
jnp
mov
adc
push
add
into
sub
lahf
cmp
lods
dec
jmp
mov
inc
sub
xor
scas
mov
in
xor
and
out
dec
cli
sbb
xor
into
cmps
dec
pop
pushf
add
push
push
mov
and
ss
adc
adc
rcl
dec
fcom
inc
cmps
out
mov
push
je
dec
xor
mov
sub
mov
enter
mov
sti
sbb
ja
push
ror
pop
sub
xchg
sub
call
pusha
mov
mov
imul
push
js
not
dec
jo
adc
sub
pop
jo
sub
jl
mov
bound
mov
mov
pop
and
imul
push
inc
add
ss
cmps
mov
sbb
and
and
mov
dec
lods
div
and
std
add
shl
leave
push
pop
call
or
or
inc
add
mov
pop
xchg
rol
out
fidivr
inc
jns
pop
lea
pop
mov
ret
fwait
jmp
js
das
cmps
arpl
inc
push
pop
inc
dec
push
push
cli
ds
push
lock
pop
mov
ror
outs
lea
and
int3
cwde
xor
and
frstor
add
rcl
sbb
cld
inc
cmp
or
test
addr16
xor
push
retf
jb
sar
outs
jnp
dec
out
out
mov
add
adc
fidivr
and
outs
and
daa
mov
fcomp
xchg
cmps
fmul
in
fidiv
jne
loope
test
xchg
xchg
imul
mov
and
inc
mov
(bad)
adc
mov
cmc
clc
mov
sub
das
push
into
add
mov
in
(bad)
cmp
xchg
out
mov
outs
or
scas
mov
inc
adc
(bad)
fdivr
bound
adc
pop
sub
mov
out
outs
in
cdq
add
mov
bound
pop
jo
cmp
mov
test
jae
sbb
dec
push
xchg
pop
push
sahf
jmp
mov
or
or
push
inc
lds
stos
call
out
out
push
(bad)
ins
test
cdq
fs
or
dec
repnz
fadd
popf
mov
sahf
aaa
mov
dec
jb
pop
out
mov
pop
dec
dec
fld
fld
cmp
in
mov
lock
mov
jne
jbe
pusha
data16
leave
daa
ret
(bad)
or
add
push
fimul
into
sbb
das
aad
jae
cld
mov
xor
xchg
jno
or
cmp
jnp
adc
test
(bad)
leave
iret
cmp
out
sub
les
mov
fs
inc
rol
stc
xor
int
mov
add
pop
and
cmp
mov
test
push
stc
and
clc
push
fsub
arpl
dec
sbb
push
lock
or
xor
out
fs
cmp
or
(bad)
aad
jg
shl
inc
mov
imul
adc
cmps
adc
push
adc
call
mov
sub
lds
pop
inc
out
mov
out
dec
test
push
sbb
pop
call
or
mov
stos
in
(bad)
(bad)
adc
xor
sbb
push
jbe
lods
and
adc
test
iret
push
sub
push
nop
in
loope
sbb
mov
add
scas
and
ins
mov
sub
or
add
(bad)
addr16
or
push
repz
shl
cmp
xchg
(bad)
cdq
xor
loop
js
mov
fwait
and
cs
(bad)
imul
fnstenv
and
jns
mov
and
sti
call
sbb
les
xchg
jge
pop
sub
xor
scas
in
xor
pop
xor
mov
dec
or
jno
jmp
movs
jne
test
jno
pop
jge
adc
shr
adc
or
test
ficomp
mov
pop
adc
ins
push
mov
dec
mov
ins
mov
jno
fxch
gs
mov
xor
push
adc
push
and
or
mov
daa
dec
jno
stc
sub
in
adc
push
mov
xchg
in
pop
add
in
push
inc
(bad)
sbb
adc
iret
shr
pop
retf
xor
scas
movs
pop
push
inc
retf
psrlw
pushf
dec
jge
lock
push
pop
xchg
add
and
adc
mov
mov
ss
fsub
mov
mov
inc
jo
adc
jb
leave
int3
loopne
mov
cmp
jo
add
imul
mov
mov
jmp
(bad)
repz
repnz
cs
out
mov
frstor
xchg
push
fwait
aad
loop
cmc
mov
mov
inc
(bad)
stos
cmp
inc
pop
and
adc
sar
lds
leave
jne
repnz
xor
retf
xchg
jne
(bad)
(bad)
cmps
cld
adc
pop
xor
je
push
or
inc
(bad)
xor
push
movs
inc
fwait
(bad)
or
mov
cmp
(bad)
xchg
jp
push
stos
mov
push
dec
mov
xchg
jbe
xchg
loopne
lods
in
sti
call
and
pushf
fbstp
(bad)
or
out
pop
call
push
nop
and
imul
cmp
jge
cmp
fwait
sti
add
inc
xchg
jo
pop
sti
stc
xor
cmps
(bad)
in
sbb
rol
daa
mov
into
adc
inc
icebp
out
dec
js
cli
jae
(bad)
and
dec
sub
xor
iret
inc
mov
and
xchg
add
dec
mov
mov
cmps
mov
or
mov
cmp
dec
mov
sub
fld1
mov
outs
dec
ins
add
mov
xor
pop
or
lods
cmc
rol
jne
rcl
push
mov
out
(bad)
ficom
arpl
mov
and
inc
jno
sub
mov
mov
test
sti
iret
or
imul
hlt
sub
pop
cld
jae
imul
stos
out
push
in
push
or
rol
sar
nop
cdq
add
movs
jge
ins
xchg
pop
or
jno
mul
xchg
aaa
imul
or
sbb
aas
fnstenv
sub
jg
idiv
stos
scas
nop
stos
ds
inc
xchg
repz
outs
imul
jmp
stos
dec
repz
rol
(bad)
xchg
into
ror
jmp
mov
mov
jae
repnz
idiv
retf
and
mov
cmp
cmp
call
ret
push
in
popf
daa
or
adc
mov
iret
iret
xchg
cmp
in
loop
xchg
cmp
in
sbb
out
fadd
inc
mov
xlat
adc
inc
sbb
sub
ja
(bad)
xchg
clc
jmp
aas
mov
clc
movs
and
sub
je
inc
mov
(bad)
movs
xchg
mov
mov
mov
das
sti
je
test
int3
nop
xchg
push
and
sub
ins
retf
lahf
sub
cmp
fld
in
pop
popa
js
scas
loope
xchg
sbb
jnp
mov
xor
icebp
mov
out
sbb
nop
xchg
mov
jp
cli
popa
sti
es
jmp
mov
mov
jbe
loopne
(bad)
enter
pushf
lds
push
jae
sub
xlat
movs
xchg
imul
je
xlat
data16
mov
int
xchg
mov
jns
cmp
es
enter
push
addr16
xchg
push
ret
daa
jmp
lds
inc
mov
sub
inc
sti
rcl
pop
mov
loopne
inc
push
push
repz
ins
mov
outs
cmp
xchg
push
test
std
fiadd
lods
inc
mov
lods
mov
pop
xchg
call
daa
bound
pop
mov
addr16
jl
es
sbb
popf
push
mov
pop
scas
outs
sub
mov
push
es
mov
add
pop
mov
push
cdq
xchg
inc
jnp
es
enter
push
mov
out
fsub
mov
add
push
jmp
inc
into
add
retf
or
mov
mov
daa
popa
fdiv
jl
mov
scas
mov
imul
and
leave
fisttp
mov
scas
ret
out
xor
pop
sbb
ins
sbb
int3
lock
mov
adc
dec
or
pusha
cdq
dec
cmc
cmp
and
push
scas
xchg
inc
sub
mov
xor
cs
xor
jbe
jl
dec
mov
ror
sbb
fdiv
fadd
push
(bad)
enter
xor
xlat
cmp
adc
out
mov
jbe
ret
inc
push
loope
int3
idiv
jnp
rcl
jo
jge
sub
loop
ins
(bad)
in
push
sub
xor
movs
ja
pop
or
mov
mov
mov
sub
add
xor
add
loopne
out
iret
cmp
je
mov
xor
popa
and
add
in
je
retf
cmc
cmps
lods
push
arpl
or
in
xchg
nop
outs
ror
pop
cmps
and
mov
gs
mov
aas
add
push
movs
iret
push
push
mov
sahf
xor
push
pusha
aad
add
add
or
ins
cmps
cdq
dec
ins
push
fst
test
inc
ja
add
push
mov
repz
or
dec
ins
sub
xchg
sbb
nop
aas
sbb
cmp
lea
inc
stc
out
inc
xchg
(bad)
mov
adc
mov
and
das
lock
or
cmps
dec
adc
int3
pop
xchg
sbb
imul
into
push
sbb
adc
sbb
mov
stc
js
lahf
add
not
adc
into
jbe
cmps
jns
adc
push
cwde
cmp
inc
jp
ffreep
add
adc
adc
loop
stos
xchg
loop
popf
test
xlat
xchg
jl
inc
xchg
mov
sbb
mov
and
clc
rcl
imul
mov
arpl
popf
mov
fmul
and
clc
(bad)
call
pop
les
arpl
sahf
sbb
pop
cmp
pop
fwait
pop
fisub
sbb
retf
mov
jl
xchg
int
nop
add
pop
aaa
mov
icebp
jmp
ja
pop
jnp
cli
clc
aam
push
pushf
aas
xchg
lods
inc
adc
xchg
push
leave
jmp
mov
ins
scas
add
xchg
rcl
mov
sbb
(bad)
cld
scas
cmp
push
dec
movs
or
and
adc
dec
leave
sti
add
xchg
mov
add
ja
in
in
xchg
adc
sub
not
push
in
(bad)
adc
dec
or
stc
in
add
test
mov
pop
mov
push
cmc
mov
push
or
ins
xchg
and
test
cli
ins
mov
pop
sbb
aaa
(bad)
cmp
cmp
leave
xor
xor
sub
or
inc
xchg
sahf
pushf
cmp
pushf
retf
mov
cld
mov
hlt
lods
out
cli
scas
ds
seto
and
pop
inc
sahf
or
adc
adc
call
mov
cld
push
mov
push
jecxz
loopne
pop
or
icebp
or
mov
or
cmp
jp
outs
fs
cld
xchg
in
pushf
or
scas
and
lock
in
xchg
jae
sbb
test
jb
jmp
push
stc
pop
std
popf
cmps
leave
adc
xor
jmp
xor
out
inc
adc
xchg
(bad)
sar
mov
icebp
(bad)
ins
bound
xchg
je
push
in
jl
and
inc
pop
mov
jmp
fidivr
pop
pop
sub
push
add
test
cli
jb
rcr
xchg
pusha
rcr
lock
in
mov
cmp
push
pop
mov
cs
mov
jl
test
test
add
scas
movs
pop
iret
nop
mov
or
fwait
mov
ja
out
jno
enter
sub
rcl
and
nop
mov
aam
jl
(bad)
or
push
mov
or
sbb
popf
call
pop
mov
in
loope
pop
push
cmc
aas
call
arpl
ss
mov
xor
test
inc
cs
sub
rcr
jbe
sub
stos
cmc
out
inc
or
or
pusha
jb
test
mov
ret
xlat
ds
ret
cmp
adc
jg
or
int
outs
lods
pop
mov
cmp
add
dec
or
mov
aas
cmc
and
mov
(bad)
add
push
jecxz
push
xchg
scas
test
iret
mov
add
lds
mov
push
jle
push
push
xor
push
pushf
movs
xchg
ja
gs
pop
bnd
or
pop
cli
cli
(bad)
jecxz
out
stc
jo
xlat
lods
outs
test
lods
and
add
inc
sub
cdq
pop
inc
or
pop
(bad)
js
pop
add
adc
movs
repz
bound
(bad)
rcr
jmp
sbb
lds
clc
pop
dec
xor
dec
stos
dec
cmp
shr
xchg
jg
dec
xchg
cmp
ja
sub
cmp
inc
pusha
retf
push
sbb
cmc
xchg
int3
cmp
sub
lahf
fcom
and
fwait
into
pushf
iret
cmc
jg
arpl
cmps
fld
loope
rcl
lods
(bad)
retf
icebp
and
rol
cdq
mov
loop
add
jae
lahf
sub
mov
fwait
lea
mov
sahf
fwait
(bad)
test
fdiv
(bad)
jnp
sar
out
(bad)
push
mov
(bad)
call
dec
pop
mov
add
or
test
test
dec
in
test
sub
retf
jnp
mov
ja
mov
ror
into
iret
inc
mov
hlt
pop
rol
repnz
or
cmps
mov
push
mov
or
xor
in
fsubp
pop
xor
pop
inc
icebp
popa
sub
sub
pop
scas
sbb
pusha
outs
(bad)
shr
mov
(bad)
je
clc
push
ss
aaa
scas
outs
aaa
pop
shr
pusha
in
nop
dec
jbe
gs
or
adc
or
test
fs
cmp
mov
std
cmp
retf
xchg
shrd
test
loope
daa
rol
dec
inc
dec
(bad)
ror
bound
clc
dec
cmps
push
xchg
jne
jge
fbstp
addr16
cmp
dec
jcxz
(bad)
adc
sub
jnp
(bad)
jmp
xor
js
mov
mov
test
rcr
lods
movs
xchg
pushf
mov
adc
int3
xchg
pop
pop
xchg
addr16
pushf
test
sahf
pusha
push
jmp
mov
pop
cli
push
dec
shr
sub
add
lds
add
mov
pushf
mov
in
mov
or
sbb
loopne
out
int
ds
data16
cld
or
ins
add
push
jo
inc
jg
inc
add
daa
(bad)
add
(bad)
push
pop
aam
or
out
fmul
xchg
and
push
xchg
inc
daa
pop
mov
add
xchg
mov
sar
or
cmp
xor
loop
cmp
imul
test
sub
movs
in
into
les
push
dec
aas
test
cli
iret
jbe
add
std
scas
addr16
or
ret
rol
pop
(bad)
clc
mov
and
mov
sbb
mov
or
cmc
mov
mov
sbb
lds
add
mov
popa
mov
(bad)
sahf
retf
mov
fs
ins
adc
cmp
sbb
mov
cmc
bound
mov
sbb
mov
push
mov
(bad)
shl
mov
movs
pop
cmp
clc
sbb
pop
lea
mov
test
pop
in
gs
sub
mov
jl
and
ins
sbb
stos
push
inc
lock
outs
jge
cmc
addr16
push
inc
ins
(bad)
mov
inc
sub
jmp
in
fnstenv
add
mov
pop
jmp
imul
pop
ins
inc
aad
out
jge
mov
test
aam
inc
cld
pop
(bad)
shl
mov
and
dec
out
mov
and
in
sbb
inc
mov
push
and
imul
repz
test
stc
popf
jl
js
pusha
lea
add
pop
inc
out
mov
mov
pop
jge
call
or
je
js
stc
push
rol
idiv
ins
retf
push
jp
sbb
pop
sbb
add
or
adc
in
push
jg
jae
ja
xchg
aas
sub
ror
mov
cmp
(bad)
cmp
stc
or
jmp
cs
movs
icebp
adc
in
jmp
out
test
lods
movs
xchg
cmc
out
rcr
push
push
mov
arpl
sub
xchg
push
sbb
mov
inc
idiv
lahf
lods
adc
push
sti
inc
sar
dec
movs
ret
and
jne
aam
dec
out
pop
sub
inc
outs
lock
lea
sub
push
jae
adc
leave
stc
repnz
xor
dec
ror
std
inc
mov
cmp
les
pop
xor
test
retf
outs
inc
test
mov
or
add
(bad)
movs
and
sub
inc
js
push
arpl
pop
cmp
mov
pushf
adc
(bad)
and
jmp
xor
mov
out
fs
stos
jp
not
push
jne
jge
test
or
xchg
xor
ds
test
sub
sub
je
mov
pop
or
sbb
in
dec
add
ret
jle
xor
icebp
mov
cmp
pop
xor
sbb
or
in
sar
mov
xor
scas
pop
daa
pop
dec
inc
dec
cdq
sbb
cmp
bound
sub
jecxz
movs
es
mov
push
add
sti
lahf
fisttp
js
dec
cmp
bound
inc
std
cmp
rcl
ss
xor
seto
popf
out
dec
scas
test
cdq
imul
call
fs
sub
clc
sbb
mov
or
sbb
cmp
cwde
push
xor
sbb
add
sub
and
or
sbb
xlat
or
inc
cli
push
push
pop
jmp
adc
fst
xor
mov
ss
lock
out
adc
mov
inc
sbb
jge
push
cmc
inc
jmp
test
imul
cld
jl
cmps
or
icebp
ss
int
push
pop
and
fcomi
std
je
or
lahf
shl
jnp
out
fst
mov
dec
inc
cmc
or
adc
mov
adc
adc
add
sti
mov
hlt
scas
sub
adc
or
loop
(bad)
xchg
dec
and
cdq
aad
pushf
xchg
and
push
pop
popf
js
xchg
adc
mov
dec
aas
add
add
xchg
push
mov
cs
scas
std
icebp
xchg
jno
adc
adc
cmc
cmp
add
gs
sub
push
or
sar
mov
cmp
mov
mov
mov
mov
mov
rol
call
adc
adc
ror
push
mov
pop
out
cld
in
sbb
xor
xor
pop
cli
mov
cmp
push
sub
dec
mov
in
pop
xchg
ficomp
imul
adc
gs
jle
jnp
rol
fs
push
lahf
jmp
inc
push
inc
aaa
movs
fist
out
pop
jmp
push
stc
or
cld
popf
(bad)
mov
lods
or
inc
or
push
scas
pushf
pop
jl
and
jmp
inc
push
cmps
push
xor
nop
ret
dec
adc
test
ret
mov
icebp
push
pop
fimul
jmp
nop
mov
ins
repz
js
ret
sub
lods
jns
retf
cld
adc
div
mov
lds
and
out
call
mov
pop
pop
shl
cmp
and
push
in
mov
inc
dec
mov
stc
mov
add
gs
packssdw
mov
test
into
xor
mov
cmp
(bad)
retf
mov
cmp
nop
hlt
arpl
iret
in
pop
fs
pop
jbe
retf
test
and
xchg
add
mov
ret
xor
fcomip
(bad)
xor
sub
sar
push
in
stc
cld
xchg
out
mov
bound
mov
mov
push
and
stc
cli
or
jecxz
leave
pop
mov
add
jmp
cmps
outs
mov
mov
and
loope
pusha
cli
mov
into
pop
jl
jle
enter
lahf
add
in
nop
mov
jl
mov
or
sub
scas
cmp
(bad)
cmps
push
and
jp
xor
je
lods
xchg
outs
and
mov
call
sub
popf
and
inc
call
cmps
or
sbb
out
shl
scas
shl
pop
sahf
pop
or
in
clc
fiadd
lock
sub
push
xlat
dec
push
nop
call
add
popf
inc
ss
imul
jle
and
mov
adc
mov
inc
sbb
sbb
jg
ss
std
push
out
imul
mov
xor
out
aad
mov
sahf
adc
fild
jmp
cld
adc
sbb
xchg
pop
xchg
cdq
iret
(bad)
lock
mov
adc
scas
cli
enter
cld
add
into
mov
or
leave
aas
movs
es
adc
mul
mov
ja
(bad)
sti
repz
jb
and
fdivrp
sub
mov
repnz
ss
outs
frstor
push
pop
(bad)
in
cld
cmp
shr
in
cmc
add
mov
movsx
movs
push
cmp
cmp
jnp
retf
fwait
push
push
add
sub
loopne
retf
dec
pop
mov
imul
mov
shl
cmp
das
mov
(bad)
in
mov
push
xchg
jmp
rcl
and
push
je
mov
in
cmc
mov
and
pop
push
imul
dec
mov
inc
pop
xor
retf
cmps
in
mov
std
nop
push
xor
xchg
shl
sub
pop
mov
dec
xor
(bad)
pop
mov
jg
or
sbb
jmp
(bad)
push
rcl
xor
movs
das
jno
data16
test
outs
in
pop
bswap
in
adc
inc
and
cmp
lea
and
mov
sub
sysenter
add
push
xchg
jg
and
mov
movs
sbb
xor
mov
xchg
mov
lds
and
mov
or
xor
retf
add
retf
mov
xor
stc
std
adc
ret
pop
jg
scas
std
mov
xchg
xor
lahf
lahf
dec
mov
pop
into
mov
cmp
mov
out
ins
jmp
xchg
imul
sbb
aad
push
sbb
out
outs
pop
into
mov
jns
dec
add
push
(bad)
aam
and
mov
sbb
daa
cmp
int
xchg
pusha
ficomp
mov
sti
fdiv
jge
lods
jb
cmp
test
in
in
inc
stos
lock
(bad)
push
push
mov
out
mov
pop
test
pop
in
push
push
fadd
xor
mov
jno
ss
aaa
mov
xchg
cmp
pop
pop
or
sbb
pop
mov
jl
call
ret
popa
sbb
fwait
pusha
movs
push
adc
movs
mov
inc
lods
nop
call
test
popa
call
jmp
cmc
icebp
data16
cmp
ins
int
arpl
push
add
mov
in
test
mov
add
(bad)
aas
out
jo
stc
(bad)
(bad)
fstp
dec
nop
adc
jle
ja
stos
cmps
ret
jns
push
fadd
mov
test
xor
pop
cmc
push
sbb
call
xchg
mov
jmp
movs
popa
fldcw
xlat
les
xchg
inc
clc
imul
or
ja
pop
mov
loope
jmp
fsub
cs
lock
sub
stc
mov
enter
dec
sbb
sub
call
mov
lods
add
xchg
aam
mov
dec
xor
sbb
aad
popa
stos
xor
xor
out
cmp
cmp
mov
mov
push
mov
inc
fidiv
xlat
sub
pop
add
fsub
xchg
mov
add
push
jle
pop
ret
xchg
cmp
jns
retf
and
imul
outs
cmp
int3
cli
shl
imul
sub
push
sbb
mov
retf
push
push
lods
jbe
and
enter
pop
dec
pop
iret
loopne
sbb
fstp
cmp
ret
dec
bound
loopne
sub
cwde
dec
jnp
fcomp
call
sar
add
sub
test
fld
call
adc
mov
xor
mov
cmp
aas
pusha
arpl
sar
sbb
leave
(bad)
fadd
loop
shl
mov
mov
push
out
add
retf
jb
or
fbld
jmp
lods
xor
push
and
mov
nop
sahf
or
or
dec
jno
imul
sbb
scas
iret
xor
hlt
mov
push
inc
sbb
dec
inc
mov
pop
adc
jnp
sar
hlt
loop
mov
in
popf
pop
xor
inc
stos
lods
push
pushf
sahf
jp
adc
je
cmp
push
xchg
jl
inc
inc
cmp
movs
inc
es
nop
adc
js
les
mov
ret
jge
mov
inc
mov
or
scas
adc
jb
push
jge
jecxz
into
movs
inc
shr
xchg
push
int3
imul
mov
aas
mov
mov
loopne
clc
push
sub
mov
pop
dec
jb
sub
pop
mov
mov
test
shl
jge
xor
xor
mov
and
movlps
jg
enter
scas
cmps
mov
cs
ins
push
mov
lods
nop
imul
cmp
xchg
xor
push
dec
and
rcl
pop
jg
jge
push
cmps
mov
cmp
or
sub
sbb
adc
sbb
fsubr
test
and
jnp
cmps
add
jmp
push
ja
mov
cwde
lods
(bad)
inc
pop
xor
ja
in
push
xchg
dec
retf
(bad)
test
cmp
mov
pushf
ror
call
addr16
push
adc
pushf
xor
pop
add
(bad)
pusha
icebp
imul
sbb
xchg
inc
xor
jg
stos
leave
xor
jmp
dec
push
and
lea
inc
sbb
cmp
imul
cmp
scas
pop
div
add
sub
mov
mov
test
mov
(bad)
ret
nop
or
test
lods
mov
je
mov
and
jns
sar
aad
push
lods
in
arpl
pop
add
int3
(bad)
hlt
sbb
ins
push
into
and
sub
mov
pop
pop
enter
jecxz
mov
movs
pmovmskb
pop
inc
xchg
push
cmc
stc
adc
repz
call
call
pop
outs
dec
inc
rcl
test
mov
xchg
pusha
lea
mov
imul
dec
cmps
(bad)
addr16
or
out
jge
(bad)
retf
ficom
push
jecxz
mov
jmp
and
mov
mov
(bad)
mov
jmp
idiv
inc
push
and
cmp
push
xchg
lods
daa
loopne
xor
xchg
mov
sub
sbb
arpl
in
add
xor
(bad)
jno
in
push
push
pop
dec
jo
push
test
(bad)
dec
(bad)
adc
mov
inc
mov
rol
jns
pop
adc
out
push
add
add
sbb
rep
mov
pop
fcom
js
or
not
xchg
movs
push
popw
fcomp
mov
sub
mov
stc
nop
cmp
lea
rcl
jg
add
aas
retf
cmp
mov
fcmovnbe
mov
sbb
ins
xor
(bad)
jmp
xchg
jo
cmp
fdivr
rol
jb
xchg
test
ja
mov
popa
sbb
mov
cdq
jmp
mov
rcr
push
inc
cmp
push
xchg
lahf
push
call
lea
cmc
sub
mov
and
mov
inc
adc
mov
jno
jnp
or
outs
jb
test
jmp
jne
add
loope
cwde
fidivr
push
(bad)
lods
mov
cdq
sub
test
(bad)
in
push
push
cmp
les
xchg
mov
shl
je
cmps
xchg
clc
mov
inc
sbb
aas
mov
add
in
ror
stos
jle
xor
jmp
dec
ret
dec
in
jbe
sub
jns
lock
adc
push
push
shl
jmp
adc
mov
lds
dec
xchg
pop
sub
shl
popa
adc
iret
mov
cmp
je
dec
in
mov
jne
sub
pop
xlat
add
push
cmps
out
dec
sbb
clc
xchg
mov
div
pushf
sbb
cli
ins
fcom
adc
outs
mov
fcmovne
dec
jecxz
(bad)
push
pop
ss
cmp
test
inc
repz
pop
lds
retf
leave
or
arpl
push
(bad)
cmp
mov
cmp
and
repz
cmp
inc
inc
cld
repz
cmp
push
and
sbb
fiadd
test
fwait
sbb
imul
ret
dec
rcl
lea
cmp
test
dec
retf
add
aaa
mov
aaa
add
pop
dec
retf
pop
xchg
(bad)
pop
xchg
das
aas
xor
jne
test
push
dec
js
push
xchg
mov
push
adc
and
sub
lahf
xor
push
push
jg
bound
packssdw
sbb
addr16
mov
jge
call
lahf
sbb
aaa
rcr
fst
sub
xchg
mov
or
inc
jmp
dec
push
jle
mov
jo
inc
sub
mov
fild
push
test
ret
loopne
cmps
and
das
cld
sahf
sub
fldcw
mov
aad
xchg
push
sbb
sbb
jge
cld
push
retf
call
or
dec
popa
addr16
sub
(bad)
xchg
xor
and
stos
mov
loop
hlt
pop
int
push
rol
sbb
sbb
mov
pop
scas
xor
imul
mov
iret
mov
ds
imul
dec
lahf
inc
ins
mov
pop
sahf
xor
sbb
add
xor
cmp
cmp
push
lahf
sbb
in
dec
std
aad
js
dec
mov
fwait
outs
inc
jbe
pop
pop
xchg
or
lea
sahf
cmp
cmp
sub
push
inc
sub
xchg
add
jmp
cmp
outs
arpl
xchg
neg
lds
out
maxps
push
inc
sub
aam
mov
mov
jmp
aad
jg
fwait
je
mov
sti
idiv
(bad)
cwde
mov
retf
cmc
mov
cli
mov
mov
pop
hlt
rol
lds
jecxz
or
fisttp
xor
mov
inc
mov
std
pop
and
xor
xchg
and
test
lds
pop
mov
or
push
mov
xor
pop
test
sbb
inc
inc
xchg
shl
(bad)
push
mov
mov
push
dec
dec
repnz
xchg
push
mov
and
leave
inc
pop
xor
jmp
gs
fxch
in
or
out
cmp
sbb
push
out
outs
arpl
jp
(bad)
cmp
push
sub
fdivr
add
js
bnd
repnz
cmps
lods
mov
retf
pop
cmp
xchg
mov
jbe
jno
push
call
xor
outs
and
adc
push
ror
sub
ss
jecxz
daa
adc
push
and
loop
cmc
push
cwde
arpl
add
gs
dec
and
ror
adc
push
mov
xchg
xlat
das
sub
and
arpl
xor
adc
or
xchg
movs
dec
xchg
xchg
int3
jl
lds
push
test
addr16
lods
push
cmc
pop
mov
push
sub
mov
sub
mov
mov
inc
lock
gs
mov
ja
lds
out
push
sbb
dec
sbb
cld
adc
sub
in
out
retf
pop
fs
gs
js
pop
ja
repz
loope
(bad)
push
shl
int3
push
mov
and
push
popf
shr
jg
xchg
mov
and
xchg
adc
xchg
xchg
loopne
cmp
cmp
xor
std
mov
jecxz
inc
add
sar
icebp
pop
out
push
inc
shl
int
adc
dec
adc
adc
retf
bound
jb
xchg
jb
jns
ret
cwde
sub
mov
pushf
inc
xor
or
mov
in
out
pushf
adc
inc
retf
add
xacquire
retf
cmps
sub
sbb
call
and
mov
retf
arpl
loopne
imul
push
fs
std
fwait
rcr
add
scas
retf
and
xchg
jo
adc
ror
jmp
and
loope
or
call
call
pop
xchg
push
(bad)
rcr
sub
outs
mov
dec
add
loope
dec
fldenv
rol
enter
xor
sub
cmp
cmp
or
mov
xchg
fsub
sti
outs
enter
inc
push
push
retf
(bad)
in
lods
or
cwde
test
and
add
shl
jmp
jnp
xor
dec
(bad)
sahf
popa
sub
mov
mov
add
jmp
lods
pmulhw
push
and
inc
jmp
fcmovbe
fldenv
dec
push
sar
(bad)
mov
jg
push
jns
dec
jp
xor
fsubrp
scas
adc
fisubr
loopne
sbb
pop
mov
mov
out
adc
ss
sbb
jge
inc
sub
mov
jge
sbb
ficomp
fs
inc
jmp
js
arpl
mov
fld
sub
xchg
movs
push
mov
in
lea
add
enter
jp
sub
push
add
mov
cmp
daa
mov
and
sar
jmp
cmp
test
int
shl
push
cmp
inc
xor
lds
das
add
jp
jb
jo
push
inc
pushf
adc
jmp
(bad)
pop
ret
cwde
movs
aam
gs
mov
mov
adc
xor
jmp
push
mov
fs
repnz
mov
loope
push
cmp
std
cmp
lods
inc
jmp
push
cld
cdq
sahf
out
ins
xor
mov
ins
(bad)
popa
xchg
(bad)
addr16
addr16
ins
adc
dec
loop
repnz
xor
test
mov
test
or
inc
jmp
fimul
fcomp
js
cmp
xor
xor
fnstsw
movs
addr16
mov
scas
sahf
jecxz
jecxz
and
mov
add
adc
pop
mov
mov
sbb
fwait
xchg
xor
mov
add
rcr
cmp
and
mov
cmps
adc
iret
sbb
call
xchg
mov
fistp
fisubr
push
sbb
shl
outs
call
imul
jl
cwde
push
sub
aaa
pushf
lock
repz
xchg
cmp
inc
xchg
jo
data16
add
inc
adc
mov
call
and
xor
pop
imul
pop
push
mov
ss
int
push
int
les
lea
push
mov
repnz
sbb
fild
push
pushf
lahf
cmp
ja
shr
es
sbb
add
sbb
mov
(bad)
out
cli
inc
test
(bad)
fimul
rol
test
sub
jmp
loopne
in
scas
sub
imul
(bad)
lock
sub
(bad)
add
jp
mov
inc
mov
repz
add
xchg
cli
mov
cli
ds
(bad)
popf
cdq
sub
and
adc
and
mov
ror
mov
loop
jbe
dec
test
data16
enter
fwait
xor
scas
dec
jae
cmps
dec
aaa
cmp
aas
xchg
mov
add
lds
mov
mov
push
xlat
mov
cld
psrlq
sub
push
dec
sub
cmp
nop
in
xchg
cmp
or
fiadd
add
movs
test
add
mov
pop
cmc
sub
loop
cdq
dec
sbb
test
cmc
pop
mov
int
push
sahf
xlat
mov
imul
rol
enter
pop
lea
add
push
push
hlt
and
test
lds
jmp
add
mov
adc
mov
and
cmp
mov
int
lock
addr16
nop
int3
add
push
pop
pushf
cmc
xchg
int3
cmp
sub
push
adc
push
leave
mov
adc
fiadd
xor
inc
sub
mov
ficomp
jmp
rol
cld
rol
outs
mov
loope
cld
sub
aas
jb
push
adc
xor
inc
jp
push
jl
icebp
fbld
hlt
out
lahf
push
xchg
test
sbb
out
mov
stos
mov
cmp
jl
pop
add
cwde
xor
shl
ret
test
nop
loopne
ss
mov
mov
(bad)
ficom
test
out
and
lock
rol
xchg
xor
cwde
xor
add
sub
inc
in
ss
xor
pop
fdivr
inc
adc
cmp
pop
mov
mov
cmp
test
pop
pushf
inc
f2xm1
sub
popf
inc
fs
aam
call
inc
out
sbb
out
not
ror
repnz
in
call
mov
pop
xor
outs
push
lods
cmc
hlt
out
mov
les
sub
jecxz
movs
loopne
xor
(bad)
xchg
push
push
test
popa
pop
cmc
nop
cmp
pop
(bad)
jno
ds
jae
mov
loope
lods
jle
push
pop
jl
cmp
(bad)
push
mov
xor
xor
test
cmps
fmul
sub
fild
mov
push
or
das
dec
das
imul
pop
inc
xor
das
xlat
in
mov
and
xchg
jg
push
mov
cmp
push
lea
sar
mov
push
in
out
cmps
xchg
push
pop
(bad)
repz
push
ret
adc
hlt
cli
xor
sbb
sub
ins
sbb
push
ins
aam
add
out
je
jae
mov
dec
fadd
clc
(bad)
sbb
xor
in
xchg
cmp
mov
fwait
add
loopne
int3
fs
imul
mov
in
call
and
icebp
adc
je
outs
xchg
shr
dec
cmp
xor
add
imul
and
mov
adc
xchg
ror
popf
jne
inc
jmp
xchg
lods
mov
xlat
fs
scas
push
(bad)
enter
pop
ss
mov
cmp
or
stos
mov
or
dec
lds
test
cmps
outs
mov
repz
mov
ficom
mov
xchg
sub
dec
outs
mov
ret
popf
mov
pop
clc
xor
aam
jne
jmp
cmp
ins
or
pop
out
loope
in
push
inc
imul
or
xchg
lods
mov
ja
fild
hlt
mov
add
jle
hlt
xlat
ret
pop
retf
xor
mov
(bad)
add
dec
xchg
jmp
(bad)
inc
repnz
or
fistp
shl
sbb
or
xchg
(bad)
dec
movs
les
push
cdq
ins
xchg
jne
jmp
inc
sbb
add
ins
adc
sub
sbb
sub
(bad)
dec
daa
adc
sub
fs
jnp
shr
adc
clc
mov
or
xor
inc
jo
int
push
loop
int3
inc
scas
push
push
sub
popf
xor
imul
xchg
pop
pop
bound
rol
ret
ins
push
les
mov
sub
clc
mov
xchg
jle
adc
jne
retf
sahf
xlat
addr16
cmp
jbe
or
mov
cmp
mov
movs
or
pop
adc
xchg
in
push
scas
jle
adc
and
scas
test
add
inc
push
ret
fwait
ins
lods
mov
into
stos
mov
pop
cmps
nop
popf
ss
adc
xor
enter
mov
or
xchg
sub
in
shl
(bad)
and
sar
and
js
push
mov
push
jp
add
push
pop
dec
or
jno
jbe
sbb
mov
push
aam
push
(bad)
or
retf
dec
fld
jge
out
stc
pusha
ins
inc
xor
enter
ins
cwde
rep
or
cmp
dec
mov
hlt
push
test
rcl
or
adc
fstp
shl
fstp
sub
ins
jp
dec
sbb
xchg
dec
add
out
rcr
js
push
je
repz
cmps
mov
sbb
sbb
mov
(bad)
in
xchg
and
add
xacquire
mov
or
hlt
fwait
ret
xor
je
fisub
in
add
loope
mov
ins
push
movs
or
push
pop
retf
push
push
dec
enter
clc
or
push
pop
ins
mov
call
mov
call
test
pop
ja
jmp
fadd
ins
push
push
xor
jge
adc
loop
aaa
stos
push
xchg
xchg
cmp
or
add
dec
in
fdiv
dec
dec
inc
sbb
adc
xor
ins
dec
lds
mov
ret
out
or
cmps
xchg
and
cmp
pop
or
icebp
add
pop
out
loop
mov
xchg
sbb
imul
dec
inc
pop
jg
jbe
shr
pop
loop
fisub
mov
and
xchg
mov
pop
jns
mov
adc
mov
jp
loopne
pop
push
shl
pop
rcl
mov
int3
sbb
ss
lahf
imul
jne
xchg
(bad)
dec
rcr
mov
popa
mov
ins
push
xchg
int3
aam
imul
pop
leave
call
mov
sub
jne
stos
add
test
cmp
pop
xchg
sbb
mov
ret
push
cdq
jmp
push
sar
add
ins
inc
(bad)
mov
std
retf
in
jl
or
xor
inc
xor
sub
mov
adc
je
push
cmp
or
jae
pop
(bad)
jmp
pop
ror
pop
push
sbb
ror
mov
mov
aaa
clc
mov
(bad)
mov
push
(bad)
aam
xor
(bad)
jle
jmp
jno
ret
std
aad
sahf
mov
xor
and
iret
cmp
mov
xchg
or
cmp
lahf
ins
push
pushf
jmp
dec
jno
mov
repnz
pushf
not
arpl
mov
add
jo
add
popf
dec
out
cmp
aad
xchg
adc
pop
pop
(bad)
jne
mov
loop
pusha
and
dec
(bad)
mov
out
in
icebp
mov
push
popa
lahf
xchg
dec
pop
(bad)
dec
mov
push
mov
dec
and
lock
jb
std
std
in
inc
dec
fmul
test
(bad)
stc
mov
xor
push
dec
xor
xchg
cmp
bound
pop
pop
push
pop
test
mov
cmp
(bad)
sbb
adc
push
cwde
push
pop
push
je
mov
inc
lds
add
jo
gs
xchg
test
out
addps
jmp
mov
mov
sbb
mov
loope
jb
pop
xor
ins
mov
mov
retf
sbb
jmp
cmps
pop
xor
add
loopne
jmp
in
mov
imul
jns
call
add
xchg
cmp
add
sar
mov
and
pop
inc
stos
scas
ficomp
mov
fnsave
pop
daa
xor
mov
cmp
rep
xchg
xchg
mov
aad
cmc
push
shl
fimul
stos
jp
inc
dec
jmp
imul
cmp
aaa
jb
mov
xchg
and
loopne
ss
pop
js
jno
daa
or
leave
repz
in
test
and
in
test
enter
shl
or
jnp
mov
push
pop
fwait
or
push
add
lock
jnp
dec
inc
test
ret
mov
fcom
(bad)
inc
add
enter
and
sub
into
call
push
and
xor
ins
enter
xchg
les
pop
xchg
test
and
push
repnz
sub
jge
jge
outs
mov
ja
outs
aam
ds
add
mov
aas
mov
addr16
pop
lds
mov
jmp
jmp
gs
cdq
xor
mov
hlt
jle
nop
into
fistp
dec
jmp
or
out
fsubrp
jnp
push
sar
cmc
inc
pop
mov
sbb
imul
dec
imul
xchg
adc
sbb
pop
pop
sub
fisttp
fild
dec
into
sub
cmp
mov
sbb
xchg
add
add
in
pop
push
and
sub
cs
dec
sbb
xchg
or
lods
xor
adc
jne
pop
out
xlat
adc
dec
out
xor
push
repz
sbb
dec
(bad)
ret
into
xchg
arpl
dec
outs
jp
add
jmp
mov
in
push
(bad)
or
dec
xor
or
dec
xor
xlat
jns
ds
or
sub
and
jae
jmp
call
ret
push
loop
and
xchg
inc
xor
or
js
push
xor
push
push
pop
sub
sbb
lods
arpl
push
mov
xchg
sub
ja
cld
inc
mov
mov
adc
adc
lods
sahf
xchg
aaa
ror
imul
pop
fisttp
js
aaa
(bad)
sub
fmul
xlat
icebp
xlat
mov
fs
add
ins
inc
mov
jmp
sbb
cmps
addr16
sbb
jbe
xchg
aaa
cmp
fadd
inc
inc
cmc
push
cmp
in
in
test
lea
loope
(bad)
mov
or
cmps
pop
jno
cs
call
lods
pop
sbb
add
jp
dec
cmp
dec
xor
clc
pop
sbb
adc
cmp
jmp
pop
push
jl
clc
std
xchg
in
inc
out
scas
dec
pop
and
jecxz
sbb
adc
inc
daa
cld
(bad)
dec
sbb
imul
mov
sbb
sbb
ror
xor
fiadd
and
push
push
fsubrp
scas
mov
mov
dec
not
sti
sub
inc
jo
retf
sbb
test
and
adc
sbb
pop
inc
imul
lods
xchg
inc
(bad)
cs
std
adc
xchg
lds
xchg
scas
inc
movs
sahf
dec
inc
lds
fstp
ror
add
pop
add
and
(bad)
adc
call
movs
xchg
pop
clc
add
(bad)
jl
mov
jnp
jecxz
push
jge
inc
or
mov
mov
pop
adc
js
int3
adc
mov
stos
(bad)
cdq
xor
cmp
inc
ror
or
or
jge
or
dec
fild
enter
aaa
mov
cwde
loopne
gs
lock
je
push
or
mov
call
add
fwait
es
ret
fistp
movs
std
mov
add
sbb
fild
push
out
xor
idiv
jae
mov
push
fldcw
leave
sar
sahf
cld
div
xor
dec
sub
leave
cmp
repz
xchg
imul
push
push
jmp
push
xor
xchg
pop
dec
stc
inc
mov
jmp
jmp
out
and
cdq
sbb
dec
aaa
xlat
jb
xor
add
ja
cli
jp
xchg
loopne
call
repz
sti
push
rcr
xor
push
addr16
jae
push
mov
jmp
inc
ss
and
xor
mov
xchg
movs
fild
aam
cmc
mov
cmp
sub
sbb
lock
push
jno
loope
pusha
pop
xchg
sub
shl
cmps
fucom
push
mov
retf
pusha
and
xor
or
popf
adc
jge
iret
sub
xchg
daa
repz
cmps
inc
xor
mov
neg
lods
push
or
xchg
dec
in
in
out
or
ins
cld
loopne
sti
ss
aam
push
outs
xchg
jp
and
rcl
cdq
pop
fist
lahf
inc
dec
int
and
jl
add
ret
in
into
loop
pop
add
jmp
pushf
iret
(bad)
out
push
push
jl
cs
es
sub
aas
stos
xor
or
nop
mov
mov
fs
and
pop
xlat
loopne
ret
mov
push
inc
aam
sub
pop
add
jnp
ins
outs
shr
imul
mov
adc
push
sbb
out
add
jle
and
ins
xor
and
daa
inc
pop
stc
pop
or
fcomi
sti
ins
cs
sti
out
mov
adc
inc
xor
fiadd
sub
imul
in
jae
cmp
ins
xchg
cli
in
scas
and
fisub
aad
cmp
inc
add
scas
pop
mov
or
cmps
inc
xchg
mov
jmp
add
push
in
ffreep
push
and
out
xchg
retf
inc
pop
mov
xchg
cmp
ins
sub
loopne
cmp
sub
call
cmp
fwait
mov
sub
jnp
mov
xchg
xor
aaa
call
mov
in
jns
mov
leave
xchg
cmp
or
ins
(bad)
cmp
das
inc
inc
sub
mov
mov
lds
and
rcr
cmp
jmp
cwde
adc
ins
nop
retf
outs
sysexit
xchg
push
jle
mov
jle
dec
sar
das
mov
imul
pop
imul
out
ss
push
lods
iret
sahf
ja
cli
push
mov
rol
xchg
les
sti
xor
lds
jne
pop
or
push
test
inc
cmp
pop
cmp
push
xchg
adc
cmps
cmp
xor
fidiv
clc
mov
xchg
and
adc
retf
or
xor
inc
mov
add
pop
pop
das
std
xor
rcl
retf
(bad)
dec
mov
mov
jns
inc
or
sbb
outs
jmp
inc
mov
xor
or
pop
push
dec
jle
enter
dec
mov
mov
sub
dec
fwait
loope
div
inc
mov
std
test
enter
mov
xchg
test
xor
jge
iret
aam
inc
add
popf
shl
test
xor
inc
mov
push
add
fsub
mov
rol
sar
pop
dec
cmp
(bad)
xchg
mov
pop
cmps
mov
cmp
(bad)
fdivr
jne
cmp
cdq
push
mov
test
xchg
jmp
add
mov
sahf
out
scas
clc
cmps
(bad)
(bad)
xor
jne
xor
add
sahf
jecxz
fucomp
push
push
imul
cmp
jb
jns
adc
test
or
cmps
test
mov
adc
sti
shr
ins
sbb
aaa
mov
in
ficom
daa
add
cmp
mov
in
mov
cld
sub
inc
mov
pop
xchg
sbb
call
retf
inc
cwde
aam
mov
sub
int3
pop
retf
es
jl
mov
popf
cmps
imul
into
mov
xlat
scas
arpl
cdq
popa
call
cli
leave
sbb
aaa
adc
mov
pop
mov
mov
fsubr
pop
fbld
icebp
ficom
xor
adc
test
cmp
in
jle
mov
data16
scas
ret
dec
xor
pop
xchg
jo
push
dec
call
das
add
shl
mov
movs
mov
leave
clc
loope
sub
jp
retf
pop
test
dec
ret
icebp
mov
fnstcw
stc
xchg
jno
iret
jne
cmp
cwde
xor
inc
(bad)
fdivr
ja
hlt
or
fstp
cdq
cmp
and
sub
xor
dec
mov
add
or
add
cmc
int3
pop
jmp
(bad)
and
stos
inc
jp
xor
lods
fcom
fdivr
mov
mov
loopne
into
je
cwde
data16
inc
sub
adc
or
sbb
dec
pop
neg
cmp
or
ja
lods
retf
(bad)
fadd
dec
lods
pop
cmc
(bad)
push
in
push
push
rcl
sub
sub
es
sub
adc
or
(bad)
jne
ins
mov
lock
pop
test
adc
(bad)
stos
pop
sbb
std
scas
xchg
xor
mov
out
fwait
cwde
or
popa
jmp
xor
pusha
add
push
mov
or
loop
mov
sub
mov
mov
mov
inc
in
add
(bad)
out
add
sub
cld
add
stos
int
jne
mov
mov
add
leave
and
jmp
out
push
pop
sub
addr16
sbb
(bad)
and
int
push
pop
mov
in
pushf
sub
jl
inc
dec
jmp
test
pop
xchg
sbb
add
mov
neg
xchg
xor
sbb
cmp
rcl
ror
add
outs
and
jp
loope
mov
push
inc
(bad)
cmp
jno
retf
and
mov
(bad)
mov
push
cli
sub
jl
out
mov
mov
mov
stos
clc
or
mov
jp
or
cmp
enter
jmp
xlat
xchg
ds
pop
inc
stc
jge
outs
inc
nop
lods
mov
inc
inc
repz
and
inc
xor
or
xor
and
push
sub
jo
movs
jmp
dec
mov
fimul
xlat
out
nop
push
xlat
xlat
mov
adc
push
pop
add
sub
pushf
loope
hlt
mov
mov
pushf
ja
(bad)
or
mov
mov
mov
adc
(bad)
xor
outs
cli
cli
fistp
in
xchg
sub
mov
test
jo
rol
pop
xchg
pushf
mov
mov
cmc
pop
lds
cmps
add
dec
test
push
inc
jae
sbb
div
and
shr
rcl
or
into
jp
enter
add
stc
fild
das
outs
lds
xlat
mov
sbb
outs
mov
and
mov
cld
xchg
fadd
mov
pop
xlat
loopne
ret
int3
(bad)
jl
jl
popf
jb
jb
inc
call
and
mov
sub
pop
test
xor
jecxz
mov
imul
pop
sub
stc
call
ins
xor
test
loopne
jmp
xor
les
cs
fmul
pop
std
and
ss
shl
sbb
call
push
rcl
pop
jl
cmp
outs
adc
inc
xchg
fwait
sub
mov
shl
outs
and
ss
push
and
xor
ret
cmps
pop
cmpxchg
jnp
in
pop
cs
retf
retf
sbb
add
bound
sub
dec
ins
dec
cmp
mov
push
xchg
or
mov
lods
xchg
mov
sbb
in
pushf
lods
pop
push
or
scas
int3
mov
call
lods
push
xchg
in
xchg
sbb
xor
and
mov
jae
sbb
cld
inc
retf
mov
lock
hlt
or
dec
imul
sti
mov
adc
sub
inc
add
dec
push
enter
pop
xor
(bad)
loopne
enter
inc
loope
(bad)
leave
nop
cmp
and
aad
add
xor
push
push
outs
cmp
xchg
jmp
xor
sbb
int
bound
(bad)
outs
xor
jbe
lock
pop
jecxz
fadd
xchg
pop
not
and
stc
repz
jmp
push
hlt
dec
test
or
repz
pusha
icebp
or
and
adc
fstp
lock
cmps
push
add
add
sahf
cwde
cdq
jno
add
je
and
mov
bound
in
shr
fstp
push
(bad)
loop
ret
add
js
dec
lds
xor
jmp
push
or
cmp
adc
std
mov
ins
mov
dec
jmp
or
cmp
jmp
int
outs
enter
pop
ins
jnp
imul
dec
mov
xchg
sbb
dec
out
fdiv
sbb
dec
data16
mov
hlt
fld
xor
das
ret
dec
cmp
int3
jb
mov
cmp
jp
add
loop
(bad)
push
xchg
ds
cmp
sub
or
push
sub
lea
mov
and
adc
sub
or
xchg
lods
sub
stos
or
inc
das
dec
or
fwait
in
xor
fsub
push
pop
fwait
outs
lods
sbb
in
adc
(bad)
and
pop
add
adc
stos
inc
test
rcl
mov
inc
add
mov
ss
sbb
into
xor
dec
push
lock
or
fsub
inc
mov
push
fdivrp
add
loop
scas
pusha
out
dec
data16
ss
fidivr
pop
js
inc
addr16
rol
sub
inc
outs
mov
rol
jmp
xchg
add
fcomp
mov
push
push
jnp
aaa
scas
repz
lds
push
and
mov
loop
aaa
ins
rcr
mov
pop
jmp
pop
movs
cmps
shl
mov
jbe
xor
shl
mov
and
mov
mov
xchg
(bad)
mov
mov
adc
std
jb
sub
loop
xchg
inc
and
push
gs
or
pop
aas
sub
xchg
pop
mov
je
and
leave
aad
movs
out
sti
and
jns
inc
retf
fisubr
jo
jmp
pop
jne
rol
sub
imul
jnp
xor
les
sub
and
rol
aaa
nop
jb
fwait
lods
mul
fidiv
mov
mov
mov
mov
jne
or
fwait
lods
xchg
cmp
pop
add
and
pop
call
add
stc
icebp
pop
fdivrp
or
sbb
fprem
sbb
mov
mov
fcmovnu
sti
mov
add
icebp
call
dec
jecxz
cmp
jae
mov
clc
or
fcmovnb
out
xchg
ret
xchg
add
fwait
popf
in
(bad)
mov
push
inc
jne
shr
pop
sahf
(bad)
jge
imul
shl
dec
(bad)
sbb
rcr
dec
pop
or
jne
mov
scas
jp
sub
call
ret
dec
fiadd
sbb
push
mov
sub
(bad)
jg
mov
in
daa
xor
cmps
repnz
sar
ss
lock
pop
addr16
outs
aaa
sbb
xor
loope
jns
pusha
inc
fisubr
mov
std
push
mov
dec
ss
in
fdivr
int3
mov
pop
std
adc
and
mov
clc
dec
retf
jecxz
and
mov
mov
leave
pop
mov
push
and
or
mov
add
shl
xchg
imul
push
enter
cmp
cmc
fisub
jmp
fmul
repnz
xor
call
(bad)
mov
sbb
loop
jmp
push
loop
inc
cwde
or
jp
push
sbb
es
xor
cmp
int
adc
xor
stos
icebp
xor
sbb
push
xchg
lds
addr16
bound
test
aaa
pop
mov
jmp
addr16
stos
cmc
sub
rcr
pop
(bad)
jge
mov
and
inc
ja
mov
cmp
aad
stos
fs
jge
fisttp
nop
mov
pop
test
stos
dec
rol
test
out
push
cld
out
das
call
ud0
lahf
cmp
sbb
push
repz
jns
movs
leave
jl
and
xor
rcl
sbb
(bad)
mov
lods
xor
popa
cmp
pop
cs
ret
sub
repz
pop
out
repz
aas
dec
shl
pop
inc
and
xchg
dec
lea
pmaxsw
pop
sahf
enter
add
or
sbb
arpl
imul
sti
dec
jae
or
(bad)
mov
sbb
ret
rol
jno
ret
sbb
xlat
adc
adc
mov
(bad)
push
cmps
jns
into
popa
stos
sub
pop
jno
mov
cmc
jo
or
gs
fidivr
and
sar
inc
jecxz
or
out
popa
xchg
add
xor
ret
dec
adc
fmulp
pushf
test
(bad)
stos
mov
ss
in
or
lods
inc
retf
pop
cmp
idiv
cmp
lds
sbb
ss
ret
clc
push
inc
xchg
adc
das
push
ds
mov
dec
jns
int
fsub
aas
pop
sub
icebp
xor
xchg
add
cmp
daa
scas
icebp
cmc
(bad)
pop
clc
sbb
in
popf
add
push
and
call
(bad)
in
mov
mov
jg
pushf
push
imul
sub
inc
push
gs
pop
jne
xor
das
addr16
fstp
pop
ins
xor
dec
cmps
sbb
add
scas
ins
adc
or
inc
into
sub
jl
adc
or
mov
pop
inc
std
xchg
jge
int
inc
bnd
mov
lds
je
jno
xlat
add
ret
inc
xor
mov
or
sbb
sub
and
mov
cmp
xor
dec
lock
inc
rcr
fs
inc
aad
pusha
push
jl
int3
ds
cwde
scas
fsub
push
sbb
xchg
jge
xor
xchg
frndint
or
out
dec
loope
push
mov
mov
mov
lea
test
jl
shl
movs
pop
cmp
xchg
add
pop
jns
mov
ds
dec
jo
cwde
xchg
add
ins
jae
out
xchg
xchg
pop
je
pop
rcr
stc
or
add
mov
sti
fcmovbe
ror
push
jecxz
sub
iret
add
or
sbb
dec
pop
retf
mov
movs
pop
mov
inc
les
push
movs
push
mov
loope
or
and
inc
inc
ret
gs
hlt
loop
sbb
add
sub
out
mov
shr
in
sbb
adc
cmp
shl
jmp
push
je
rcr
out
out
sbb
jb
es
mov
jns
jle
sti
adc
jns
out
mov
cmps
test
mov
push
dec
push
mov
psubq
test
loope
call
addr16
cs
mov
int
fstp
out
cmp
xor
mov
dec
inc
retf
jae
mov
inc
adc
gs
xor
add
dec
and
adc
leave
(bad)
cli
push
dec
inc
mov
fnstenv
inc
scas
or
stos
pop
inc
js
sbb
(bad)
cmp
pushf
popf
adc
mov
enter
push
sbb
lds
je
or
xor
fdiv
jb
sub
adc
mov
jne
add
xor
pusha
movzx
movs
mov
lahf
and
mov
cli
in
push
adc
aad
aad
jle
add
pop
sti
mov
hlt
push
dec
cmp
cmp
mov
hlt
sbb
pop
hlt
mov
mov
scas
stos
jecxz
mov
pop
add
xor
push
inc
js
(bad)
hlt
or
ins
or
mov
mov
push
outs
dec
mov
mov
inc
icebp
movs
into
in
jp
iret
imul
sub
sbb
pop
push
push
mov
fsubrp
mov
sbb
mov
out
inc
mov
(bad)
imul
push
cmp
jmp
adc
int
hlt
cmp
loopne
xchg
sub
push
and
lahf
xchg
or
adc
jmp
jge
xchg
in
mov
(bad)
lock
scas
pop
leave
cmp
and
popa
push
call
xchg
movs
sub
mov
sub
push
pop
setbe
ss
or
jl
dec
cs
mov
cmp
call
loope
out
ret
xchg
test
retf
iret
xor
or
movs
int
inc
xchg
int3
adc
cmp
fcmovnu
int3
mov
adc
mov
fadd
leave
int3
in
and
dec
inc
and
pop
cmp
in
mov
mov
int3
jecxz
loope
out
xor
xchg
iret
adc
or
jmp
jo
xor
mov
call
sar
pushf
into
pusha
aaa
ins
call
shl
inc
mov
aad
aas
or
in
sub
jno
adc
loopne
fcomip
mov
push
scas
retf
or
repnz
aad
jbe
push
dec
sbb
cmp
jle
lods
mov
ins
push
xor
mov
push
mov
xor
dec
sbb
gs
mov
mov
(bad)
jge
push
cmp
cmp
(bad)
daa
xor
stos
sahf
movs
arpl
or
scas
ins
pop
(bad)
and
inc
das
pop
ds
cmp
and
test
sub
inc
ins
and
fisttp
fld
(bad)
push
pop
mov
jnp
mov
pop
inc
jp
mov
and
jne
xor
ins
popa
dec
in
dec
jbe
fs
xchg
mov
aam
jp
pop
gs
fst
bnd
cmp
and
in
xchg
push
(bad)
call
jl
xchg
xlat
mov
inc
adc
jno
push
lods
(bad)
adc
fwait
inc
and
sub
ins
fisubr
push
cmp
sbb
mov
retf
mov
jp
mov
adc
fcmovu
push
sbb
lahf
jmp
xchg
sub
scas
xor
push
pop
or
ror
adc
xchg
movs
push
inc
xchg
mov
std
adc
mov
lds
in
fmul
sub
fwait
jmp
add
pusha
dec
in
mov
mov
xor
sahf
adc
dec
xchg
div
jbe
sbb
out
int3
and
call
cmp
int
in
dec
stos
jo
mov
rcr
sar
xor
push
fimul
mov
pop
cs
imul
inc
psubusb
dec
lds
push
shl
xchg
shr
call
(bad)
cld
pop
sub
xor
jnp
addr16
cli
sub
mov
sbb
ja
and
cmp
popf
mov
fcmovnb
push
or
lds
mov
ss
imul
pop
push
addr16
out
jb
mov
popa
mov
out
sti
mov
mov
jno
and
inc
loop
(bad)
mov
pop
imul
dec
push
lods
std
mov
push
dec
fwait
cmps
xchg
mul
pop
out
fisttp
add
add
dec
or
jae
sub
xor
rcl
mov
cld
iret
inc
adc
push
aam
push
cmp
lea
repnz
rcr
xchg
in
pop
cwde
push
loope
dec
mov
fisttp
pop
sbb
jmp
xchg
in
dec
inc
cmp
or
sub
daa
sti
movs
in
mov
xchg
push
push
push
xor
and
and
push
shl
add
(bad)
clc
push
(bad)
dec
retf
adc
or
out
inc
not
icebp
xchg
ins
dec
mov
imul
sub
popa
xor
push
sub
pop
stc
jno
sbb
jp
inc
push
mov
in
xor
inc
or
xchg
das
push
lea
rcl
mov
loopne
cmps
stos
push
in
test
adc
xchg
es
xor
mov
(bad)
ds
loope
popw
xchg
movs
push
leave
(bad)
pop
dec
or
pop
inc
fimul
in
cmp
aad
jae
push
out
aas
dec
xor
retf
xchg
pop
mov
jns
(bad)
aam
(bad)
mov
mov
div
dec
popa
shl
push
in
loop
imul
cmp
mov
mov
and
cmp
xlat
js
jl
sbb
mov
push
add
or
cmp
jbe
fwait
neg
jmp
add
jge
add
pop
fisub
push
push
xor
idiv
sbb
call
mov
mov
popa
inc
popa
xchg
mov
addr16
dec
cdq
retf
out
aam
xchg
out
jmp
mov
jae
outs
lahf
xchg
out
lea
xlat
cdq
mov
mov
pop
pushf
pop
arpl
fiadd
and
test
pop
push
cmp
or
mov
pop
pop
retf
dec
push
jmp
mov
mov
xchg
mov
mov
xchg
(bad)
test
fwait
inc
xchg
sub
push
nop
xor
and
out
(bad)
mov
mov
test
fwait
add
clc
xor
cmp
or
cmp
and
or
repnz
iret
(bad)
sti
fild
pop
pop
fld
call
popf
lds
adc
lods
imul
inc
mov
and
or
jmp
movs
push
mov
hlt
gs
and
sar
push
jne
mov
sub
ror
pop
idiv
adc
dec
mov
xchg
jp
ins
push
dec
mov
(bad)
pop
fisttp
imul
lea
jmp
push
mov
mov
jo
xchg
push
imul
(bad)
in
shl
sbb
push
push
mov
and
mov
pop
test
push
xchg
jmp
lds
mov
mov
dec
lods
sbb
adc
dec
dec
into
cld
imul
jno
cmp
test
xchg
mov
or
push
loopne
xlat
out
(bad)
out
mov
fimul
pop
cwde
arpl
push
mov
or
jbe
and
add
popa
pop
dec
iret
js
xor
call
aad
out
cwde
push
das
out
cmp
in
cmp
push
jae
int
movs
cdq
dec
mov
pop
mov
lds
cmp
dec
push
dec
xor
fsubr
lods
sbb
sub
ret
ds
jb
gs
mov
xor
push
pop
das
stos
mov
scas
mov
lods
ret
test
outs
ss
std
clc
fimul
pop
jg
daa
xchg
movs
xor
stos
mov
xor
pushf
mov
sbb
dec
loopne
sar
push
jo
ins
jle
in
movs
xchg
cs
inc
mov
push
jg
mov
sar
shl
(bad)
(bad)
ror
rcr
mov
mov
(bad)
push
sub
fist
mov
pushf
ret
sar
aad
lahf
or
mov
jg
nop
retf
les
out
outs
inc
(bad)
xor
(bad)
movs
stc
fnsave
cmps
add
push
pushf
nop
cmps
jge
xchg
rcr
cs
fstp
cs
dec
cmps
push
xchg
imul
cs
inc
outs
and
xor
inc
inc
push
xor
bound
addr16
and
jmp
or
dec
icebp
jl
(bad)
adc
hlt
jl
jbe
scas
xchg
xor
sbb
ffree
std
mov
stos
mov
jmp
(bad)
jge
test
add
nop
fisubr
sbb
jne
pop
lea
xor
das
inc
ret
test
je
mov
inc
scas
xchg
mov
sbb
xchg
into
jbe
lods
fdiv
loop
out
add
lds
out
mov
bound
mov
mov
bnd
or
xchg
lds
xor
hlt
jmp
mov
pop
fsub
not
jno
arpl
jmp
std
and
pop
call
mov
nop
sbb
icebp
xchg
test
xor
or
adc
jbe
popf
test
add
dec
loopne
sar
jbe
cs
mov
cmp
push
pop
lods
sbb
mov
jge
call
in
int
sbb
jl
sub
mov
jnp
shl
cli
shl
ins
cwde
cld
and
and
hlt
sbb
fnstcw
out
scas
fs
or
inc
push
loope
(bad)
cmp
pop
sti
adc
xor
neg
xor
jge
xor
sub
int3
inc
in
test
stos
ret
ins
mov
pushf
gs
movs
loop
cdq
retf
or
test
loopne
push
sub
and
ds
dec
push
jge
xor
xor
jbe
xor
jle
mov
and
(bad)
sub
shr
cdq
xor
push
rcl
ret
cmp
mov
fsub
outs
in
adc
sbb
loop
inc
ret
gs
fidiv
xor
jno
dec
or
aam
dec
dec
(bad)
cmp
iret
fs
rcr
(bad)
push
adc
cmp
outs
push
sbb
mov
adc
in
(bad)
xchg
push
mov
out
mov
sar
outs
add
xchg
adc
mov
nop
sbb
scas
xchg
adc
push
cmp
out
xchg
loopne
int
les
mov
jne
mov
sbb
sbb
xchg
or
sti
adc
sub
xchg
dec
sub
rcr
std
ror
or
mov
pop
cmp
jmp
addr16
pop
jmp
jb
pop
sbb
and
xor
mov
retf
daa
es
fst
dec
mov
adc
retf
lahf
pop
pop
ins
scas
xchg
pop
xchg
jae
cmp
mov
hlt
jecxz
dec
add
inc
sub
ja
xchg
inc
xor
(bad)
inc
jmp
cmp
cmp
pop
xor
xor
push
sbb
xchg
retf
std
clc
scas
and
sub
mov
xchg
icebp
jmp
pop
(bad)
pop
sbb
sbb
push
or
shl
in
aaa
loopne
adc
mov
push
es
inc
aaa
mov
jmp
inc
scas
popa
daa
call
push
inc
mov
(bad)
icebp
icebp
mov
(bad)
jp
lods
sar
jo
jmp
repz
dec
icebp
mul
inc
test
fsubr
cdq
pop
test
add
xlat
push
and
jae
inc
ror
xchg
push
mov
jae
retf
mov
push
fild
jnp
sbb
push
cmc
stos
ins
nop
push
and
sub
ret
cmp
sbb
sbb
mov
cs
and
jno
loopne
hlt
inc
cwde
ret
jae
push
xor
out
pop
mov
out
daa
call
mov
neg
jno
pop
loopne
jbe
adc
push
gs
dec
lods
or
mov
xor
push
rcl
or
sub
cmp
xor
mov
(bad)
jmp
test
aam
(bad)
test
loop
movs
jne
cmp
enter
cmp
enter
xor
mov
repz
sbb
mov
(bad)
add
popa
lods
shl
hlt
in
ror
cmp
push
int3
dec
cmp
rol
ds
lods
out
xor
out
cmp
jmp
mov
jb
sub
mov
loop
inc
repz
imul
loop
xchg
icebp
je
mov
mov
and
movs
call
leave
mov
fist
js
stc
fs
mov
push
out
dec
jg
pop
scas
sbb
inc
int
jge
push
mov
sbb
addr16
int
cmp
retf
push
sti
rol
dec
mov
arpl
xchg
mov
mov
ja
les
mov
scas
sahf
ret
fisubr
and
xchg
retf
fldz
shl
jge
mov
or
adc
mov
push
(bad)
iret
sub
mov
movs
mov
cmp
inc
and
inc
mov
dec
leave
and
out
sti
frstor
stos
ds
movs
sub
mov
mov
xchg
pop
lock
cmp
xor
shl
lea
dec
std
mov
rol
jo
inc
dec
int
adc
jmp
int3
in
lock
inc
test
add
inc
mov
push
and
not
pop
mov
and
repz
imul
add
sbb
stos
call
(bad)
jns
add
mov
mov
mul
add
xor
int3
(bad)
gs
xchg
out
sub
aam
repz
jnp
dec
jp
pop
dec
pop
ins
fwait
mov
dec
mov
(bad)
clc
movs
mov
ret
jl
cmp
es
mov
pop
lods
js
hlt
scas
adc
scas
cmp
test
xor
xchg
shl
push
test
jne
sbb
sti
or
inc
mov
cwde
test
xchg
push
aaa
jl
mov
mov
pop
test
jbe
ror
add
add
mov
push
adc
addr16
(bad)
(bad)
add
or
shl
pop
pop
sub
frstor
outs
cmp
sti
or
cs
scas
mov
fistp
cmp
mov
mov
loope
psadbw
lahf
xchg
je
dec
jb
mov
inc
xlat
aaa
(bad)
js
std
mov
and
adc
xchg
mov
xor
data16
jb
fsubr
mov
xchg
loop
addr16
sub
daa
popf
inc
lods
js
adc
sar
std
sub
cld
arpl
cmp
add
mov
loope
jo
xchg
rol
cmp
mov
inc
pop
into
push
mov
mov
sub
push
out
inc
or
sub
fdivrp
ret
sti
mov
cmp
mov
push
cmp
jp
mov
fsub
xchg
loopne
or
lods
gs
xchg
lods
pop
pushf
push
data16
cs
xchg
pop
jnp
xor
pop
ds
jae
iret
or
repz
and
movs
test
retf
test
sbb
pop
xchg
pop
mov
daa
movs
inc
js
dec
jge
mov
and
jmp
inc
test
jo
inc
dec
out
cmp
pop
jns
rol
xchg
mov
into
loopne
outs
fild
adc
and
jno
or
(bad)
(bad)
jge
(bad)
call
sub
shr
mov
rol
cmps
ds
sbb
fdiv
jne
xor
fwait
jb
ss
repnz
or
push
jge
rol
pop
test
add
cwde
and
adc
inc
and
mov
dec
xchg
scas
arpl
xor
fwait
dec
div
mov
mov
loopne
stc
mov
int
push
cmp
pop
push
jle
xlat
cmp
cmp
cwde
(bad)
aas
xchg
or
lods
pop
sub
sar
scas
add
adc
data16
add
cmp
inc
leave
or
out
mov
sahf
(bad)
retf
dec
adc
mov
xor
test
sub
adc
call
adc
jmp
dec
pop
cmp
adc
test
pop
pushf
sub
or
lea
sar
fs
test
adc
jmp
xor
cmp
inc
and
clc
and
or
and
pushf
mov
mov
movs
leave
jg
xor
out
lods
mov
pop
iret
xlat
xchg
xor
dec
mov
add
rol
adc
add
inc
hlt
pusha
retf
iret
test
outs
outs
std
pop
sub
jnp
adc
retf
leave
inc
aam
push
cdq
xor
push
push
hlt
push
mov
push
and
outs
(bad)
cwde
sub
adc
fdivp
xchg
int
jmp
lahf
inc
cs
jns
sub
and
es
fcomp
jl
xchg
fistp
loopne
xor
sub
ret
or
xchg
sbb
inc
xchg
jl
(bad)
iret
or
pop
(bad)
hlt
sub
adc
jmp
retf
jmp
dec
aam
enter
lods
sbb
mov
or
inc
aaa
cmps
inc
dec
dec
outs
pop
add
pusha
ins
std
push
push
jns
clc
popf
dec
sub
xor
in
jnp
daa
popf
jno
mov
ins
sub
cmp
jbe
stc
ror
mov
or
iret
dec
mov
mov
cmp
lahf
dec
cmp
ins
das
mov
(bad)
and
out
dec
push
fucomp
push
mov
jmp
mov
fsub
dec
mov
daa
mov
scas
push
mov
pop
xor
daa
inc
sub
sbb
mov
inc
imul
sub
pop
dec
sbb
icebp
data16
ret
nop
fld
stos
inc
dec
mov
xchg
scas
sahf
jp
adc
sbb
cmp
adc
mov
inc
mov
push
adc
int3
jno
mov
xor
dec
jmp
add
fs
xchg
loopne
push
and
mov
movs
test
adc
data16
sub
sub
cmps
leave
je
inc
clc
mov
cli
or
dec
pop
pop
add
mov
not
push
(bad)
push
sahf
aad
xchg
sbb
mov
xor
mov
out
iret
lods
xor
in
pop
dec
fwait
mov
jnp
imul
dec
mov
hlt
inc
sub
leave
adc
out
adc
int3
cmp
movs
sar
clc
sbb
retf
mov
adc
ds
aad
bound
dec
cmp
jp
pop
or
jbe
repz
popf
xchg
out
lea
bound
dec
inc
cmp
adc
out
mov
inc
mov
neg
mov
mov
push
pop
sbb
mov
sahf
call
gs
cmp
sbb
xor
adc
mov
(bad)
cmp
es
push
sub
xchg
push
mov
div
je
fidiv
push
xor
mov
mov
cmp
data16
sub
adc
out
xchg
test
call
sar
ret
les
lds
(bad)
mov
idiv
adc
sub
pop
cmc
lods
fimul
mov
adc
adc
pop
cld
push
sahf
jp
add
cmp
rcl
outs
outs
std
mov
pop
adc
inc
mov
mov
not
sbb
scas
push
dec
cmp
iret
loope
or
sar
adc
mov
push
hlt
push
(bad)
mov
jmp
pop
mov
sub
or
pop
adc
out
mov
nop
add
stos
xor
or
ins
imul
and
shl
outs
scas
pop
cmp
pop
and
and
arpl
push
push
fnstcw
fwait
test
(bad)
aad
addr16
fadd
sub
cwde
scas
mov
ins
and
push
dec
inc
aam
inc
jecxz
fucomi
cmps
inc
jbe
or
fisubr
not
mov
movs
jns
ja
mov
pop
push
and
retf
push
xor
addr16
lahf
mov
xchg
mov
les
adc
sbb
loopne
adc
test
mov
adc
push
mov
ins
pop
scas
xor
or
xor
inc
(bad)
mov
repz
xchg
(bad)
in
push
add
xchg
add
adc
adc
call
aas
jbe
popa
cmp
mov
adc
imul
movs
ficom
jmp
or
retf
jne
data16
add
adc
xchg
lods
mov
dec
mov
pop
or
cmp
pop
push
jge
xchg
sub
scas
and
xchg
stc
sbb
out
(bad)
outs
(bad)
pop
xchg
not
jo
push
adc
in
mov
cmp
arpl
imul
mov
cmp
sbb
adc
xor
out
js
test
ret
or
mov
mov
jbe
push
mov
pop
test
mov
inc
cmc
xor
xchg
stc
push
lock
push
imul
test
sub
mov
mov
dec
push
mov
jns
or
out
retf
ins
fstp
mov
and
dec
call
ds
mov
das
outs
mov
cld
and
retf
out
cmp
fidivr
ja
push
stc
push
repnz
xchg
mov
int
jmp
push
mov
ret
stos
scas
mov
out
icebp
stos
mov
add
inc
xchg
mov
es
xchg
imul
add
(bad)
lods
dec
rcr
jecxz
xchg
pop
ins
xor
popf
jb
xchg
inc
fs
inc
and
stos
xchg
cld
mov
inc
sub
fwait
xchg
fisub
or
sbb
vmwrite
int3
jl
lea
xlat
test
mov
fdiv
arpl
into
ss
push
(bad)
call
sahf
das
fsubrp
jae
retf
in
pop
pop
mov
cmp
xchg
(bad)
pcmpeqw
dec
enter
mov
jbe
int3
ins
add
aas
push
sub
dec
enter
daa
mov
push
mov
and
jp
clc
(bad)
stos
lods
cmp
in
into
sbb
cli
fisub
out
test
mov
nop
in
sbb
data16
xchg
cmps
mov
out
pop
stc
test
add
call
cmp
mov
ror
icebp
call
and
pop
inc
mov
inc
(bad)
jmp
std
dec
push
outs
stc
push
dec
pop
fs
movs
aad
fnstsw
pop
adc
or
or
xor
inc
retf
mov
popa
pop
test
sbb
xor
pop
jns
pop
daa
mov
hlt
pop
push
xchg
add
mov
inc
ins
dec
jle
std
push
(bad)
fs
push
mov
retf
mov
out
data16
ficom
mov
jecxz
add
push
addr16
or
xor
es
dec
mov
outs
sub
push
push
inc
fld
mov
outs
jg
out
jge
cmp
push
out
or
sbb
mul
mov
push
stos
inc
pop
test
jns
loop
fimul
push
and
mov
jmp
xor
jge
jg
dec
xchg
add
add
jecxz
out
pop
ins
mov
(bad)
shl
pop
leave
(bad)
cli
and
sahf
push
stos
dec
pop
shl
add
dec
add
jg
pop
ins
ret
test
clc
aaa
out
pop
add
mov
dec
loopne
or
fs
gs
jg
jmp
fcomi
enter
push
lahf
inc
ror
data16
sub
pop
xchg
adc
imul
and
sub
cmp
or
mov
adc
sub
(bad)
mov
jbe
(bad)
repnz
dec
fld
data16
xor
fs
push
xchg
mov
mov
(bad)
fisubr
add
xchg
(bad)
push
jae
or
cmp
pop
mov
fidiv
out
push
(bad)
popa
movs
push
pop
js
jns
xchg
add
sti
inc
mov
js
mov
push
jns
cmp
xchg
adc
jns
mov
push
and
fisttp
lds
mov
inc
or
gs
mov
addr16
into
cwde
sub
out
loope
cmc
push
scas
outs
cmps
movs
xor
sti
mov
fs
enter
dec
dec
(bad)
(bad)
dec
dec
scas
repnz
add
aad
or
out
jne
mov
data16
push
dec
pop
popa
fld
jbe
sbb
jp
xchg
dec
sti
jnp
sti
sbb
fwait
xor
add
ss
out
pop
leave
xor
(bad)
jl
dec
adc
adc
lahf
sti
add
in
xchg
sub
sar
sub
lods
bsf
(bad)
loop
mov
mov
cli
and
or
gs
scas
std
test
in
mov
test
das
clc
outs
loop
push
jno
dec
clc
(bad)
inc
mov
and
out
sub
and
lds
outs
cs
fiadd
das
stc
call
(bad)
sub
dec
stc
(bad)
jmp
idiv
fsub
retf
or
adc
xor
mov
push
push
outs
sahf
in
jp
jge
add
pop
xchg
ins
xor
pop
dec
and
sbb
dec
jle
mov
or
fbstp
popf
push
cmp
sbb
xchg
add
ins
sbb
add
mov
or
test
mov
inc
js
xor
cmps
jmp
gs
and
clc
ret
cmp
mov
in
pusha
push
xor
pop
push
and
xchg
and
sahf
das
mov
cli
stos
xor
es
and
sti
push
or
in
adc
xchg
mov
pop
xlat
adc
mov
test
inc
mov
call
dec
ja
dec
and
ja
icebp
lea
cmp
std
sbb
test
mov
pop
sub
stc
packssdw
mov
aad
push
sub
pop
xchg
out
pushf
loop
mov
xchg
mov
int3
jb
push
mov
cmps
sti
sbb
pushf
hlt
das
adc
pop
adc
fst
sub
cld
(bad)
cs
les
sbb
(bad)
(bad)
cmp
and
test
pop
mov
mov
cmps
ins
sahf
inc
cli
int
mov
adc
inc
jo
or
xchg
test
movs
xchg
(bad)
aam
cwde
outs
push
fnstsw
loopne
(bad)
xor
enter
rcl
int
jp
push
retf
lods
or
jb
add
dec
imul
int
fcomp
push
loop
mov
hlt
fs
jae
mov
inc
pop
mov
inc
fdivp
dec
sbb
sar
jmp
fadd
and
xchg
enter
sbb
clc
or
jge
div
mov
lods
jno
(bad)
and
add
jae
out
mov
pop
pop
adc
and
xchg
jg
ss
aaa
test
ins
das
adc
movs
sbb
retf
test
dec
iret
xchg
movs
lds
sbb
lods
add
enter
cdq
movs
loop
pop
sub
stos
push
push
pop
movs
inc
into
mov
das
jmp
cwde
sub
cmp
push
and
cmp
xchg
and
jne
or
movs
sar
std
in
sbb
inc
push
in
adc
sti
int3
jbe
add
add
cwde
cmp
imul
and
sbb
push
pop
(bad)
mov
push
test
mov
ins
cmp
adc
std
std
pop
xchg
mov
retf
leave
lahf
adc
and
mov
mov
jae
xor
inc
fadd
fild
ins
pop
and
jo
arpl
mov
loop
jg
in
int
mov
add
lods
jb
cwde
push
imul
xchg
out
mov
out
loop
ror
mov
clc
xor
ficomp
jle
mov
and
dec
pop
cld
mov
mov
movs
jne
mov
arpl
out
pushf
and
in
inc
pop
jo
mov
iret
adc
shr
add
fdiv
push
lods
dec
inc
or
call
mov
rcr
push
dec
fnstcw
jo
aam
addr16
lahf
xor
sub
rol
stos
and
pop
jl
and
pop
xor
addr16
mov
xor
sti
iret
xor
pushf
dec
je
daa
mov
inc
cmc
inc
and
rcr
push
nop
aaa
pop
jne
sbb
jp
test
pop
or
and
xchg
call
cmp
inc
pop
(bad)
jmp
pop
sbb
lods
xchg
push
out
aas
push
or
xrelease
xchg
jnp
sbb
outs
pop
enter
xor
cld
xchg
adc
in
pop
add
cwde
jne
sub
fmul
into
stos
jg
aam
mov
in
cmp
fcomp
jno
and
in
xchg
les
xor
mov
repz
out
sbb
sub
mov
and
push
cmp
out
hlt
(bad)
dec
ins
mov
push
pop
and
dec
stos
fidivr
jae
test
sbb
fcmovb
fstp
call
xchg
(bad)
arpl
shr
aam
xchg
movs
jl
xor
or
iret
ret
das
into
adc
loopne
pop
jmp
inc
push
jo
mov
pop
dec
xlat
sub
enter
and
jbe
adc
mov
cmp
xchg
xor
imul
push
aad
ja
sbb
pop
out
test
dec
js
movs
test
dec
cs
pop
out
lods
ss
mov
fidiv
mov
adc
hlt
pop
xor
(bad)
mov
sbb
mov
push
or
hlt
jmp
and
dec
pop
add
cld
loopne
out
sbb
(bad)
loope
xchg
movs
sub
push
pop
adc
mov
jg
ffreep
loopne
inc
fcomp
inc
or
and
xchg
aas
xchg
sbb
ss
popf
add
mov
pop
les
push
dec
scas
mov
leave
into
test
rol
pop
mov
jae
fs
mov
jnp
push
sbb
dec
sub
loop
and
shl
les
lahf
shl
retf
and
mov
mov
dec
cli
jnp
cmp
mov
add
outs
aam
and
push
add
je
shr
mul
push
(bad)
aam
jae
cmp
xor
jmp
add
sub
lahf
sbb
int3
cmp
nop
push
jmp
adc
jns
xchg
in
xor
imul
mov
rol
out
div
pop
je
pushf
pop
lods
pop
mov
jg
mov
lods
lods
imul
pop
jle
es
ret
pop
in
push
jns
pushf
pop
push
test
retf
sbb
in
in
lahf
stos
(bad)
adc
rcr
jmp
data16
movs
fimul
sub
jmp
and
movd
aam
shl
and
cmp
or
push
addr16
(bad)
arpl
out
mov
adc
outs
inc
outs
xchg
mov
add
or
je
in
lds
add
add
mov
mov
push
xchg
sbb
cmp
xlat
jmp
repz
out
popa
xlat
sub
xlat
or
(bad)
lods
nop
repz
ins
gs
imul
out
jg
movs
sub
enter
xlat
cmp
adc
mov
call
out
popf
sub
dec
(bad)
arpl
icebp
sbb
fs
fnstcw
stos
lahf
sahf
mov
inc
mov
adc
inc
(bad)
stos
out
icebp
(bad)
pop
int
rcr
sub
pop
adc
loopne
aad
mov
jg
pusha
sbb
shr
dec
pop
shl
mov
or
out
icebp
out
je
cdq
or
sbb
mov
rcr
stc
stc
mov
cmp
pusha
inc
push
(bad)
(bad)
das
adc
mov
jb
push
lahf
add
and
pop
clc
into
(bad)
sbb
lahf
xor
ss
or
push
jo
clc
loope
add
mov
mov
sahf
fucom
mov
and
call
xchg
pop
dec
imul
(bad)
shl
hlt
and
push
sub
cli
mov
jbe
gs
jmp
xchg
je
add
sbb
(bad)
repz
sbb
xchg
adc
xchg
rcr
dec
shl
jnp
pop
(bad)
add
jp
cli
mov
push
pusha
arpl
pushf
es
pop
lods
out
mov
fistp
add
sub
push
and
xchg
dec
or
add
cs
ins
push
pop
mov
cmps
mov
pop
hlt
rol
popf
repnz
ret
dec
xchg
jo
jne
jns
add
mov
add
sub
fwait
cs
sub
xchg
mov
pop
punpckldq
jp
sti
push
test
xor
sub
ret
jno
mov
hlt
test
mov
mov
dec
and
dec
mul
mov
pop
adc
pop
(bad)
in
xor
fistp
call
mov
pusha
idiv
std
aas
out
or
cmc
xor
jmp
jbe
enter
add
iret
call
jmp
and
cli
mov
adc
int
push
inc
adc
xchg
mov
push
popf
push
jg
mov
or
xchg
xchg
fcom
jp
pop
inc
xchg
pusha
test
out
or
jle
or
or
push
fidiv
push
cmp
sub
out
mov
mov
add
or
jl
push
inc
ret
jno
dec
sbb
jmp
test
jge
cmp
sbb
jle
jne
xchg
inc
out
iret
xchg
sbb
inc
retf
in
mov
or
mov
cmc
add
or
int
sbb
out
add
fcomp
not
xor
pushf
push
pop
mov
lods
inc
pop
(bad)
stos
enter
(bad)
retf
in
jle
adc
sbb
xchg
cmp
iret
cmp
ds
retf
add
push
daa
sub
pop
adc
pusha
inc
add
mov
xchg
and
mov
jns
push
icebp
mov
loopne
sub
jp
in
mov
xchg
(bad)
sbb
xchg
pop
std
mov
jle
mov
mov
stos
or
ss
and
pop
push
fbld
ret
pop
retf
pop
pop
cmp
push
(bad)
mov
xchg
cs
add
jle
lock
add
leave
jp
in
in
daa
jecxz
aad
add
pop
jo
push
sahf
add
je
xor
jmp
pop
xor
(bad)
pushf
(bad)
scas
add
push
pop
fistp
jmp
xchg
out
mov
cdq
ret
std
xchg
push
dec
scas
xchg
test
into
xor
ja
add
mov
jmp
jno
xchg
mov
loopne
push
jae
adc
inc
es
mov
lds
xchg
adc
ds
xor
ins
psubusb
pop
pop
inc
or
and
shl
cmp
or
adc
pop
in
jmp
es
les
cmps
add
mov
push
mov
jb
js
out
inc
mov
in
stc
adc
xor
or
cmps
or
or
repnz
jnp
jl
or
cmovbe
mov
adc
mov
dec
fnstsw
test
ss
daa
enter
pop
cmp
and
dec
fidivr
sub
mov
adc
mov
popf
pop
adc
popa
sbb
aaa
xor
iret
add
mov
mov
xor
inc
add
mov
outs
and
fsub
add
dec
push
jno
xor
and
out
cmc
mov
pop
or
out
sub
push
test
push
mov
bound
clc
int3
dec
imul
mov
in
add
test
imul
ja
xor
cld
das
ins
hlt
loopne
xchg
ins
cld
jle
sbb
mov
mov
xchg
adc
and
and
add
je
cs
inc
cld
or
mov
ss
(bad)
outs
cmps
sbb
or
dec
test
arpl
sbb
inc
mov
fild
sahf
std
mov
xchg
dec
push
aam
clc
pop
xchg
pusha
int
jo
cmp
popa
sub
adc
outs
in
ret
bound
add
inc
jo
or
dec
xchg
(bad)
or
jb
imul
call
hlt
dec
hlt
enterw
sbb
cs
push
add
pop
jl
jb
push
xor
push
xor
sbb
daa
xlat
adc
xchg
xchg
or
or
pop
sub
jae
xlat
mov
ins
shl
stos
fnstenv
mov
rcl
dec
add
icebp
dec
mov
call
adc
mov
lods
push
add
pusha
add
pop
sub
out
js
mov
imul
push
mov
mov
sti
in
(bad)
mov
dec
mov
inc
bound
and
push
and
mov
mov
ss
in
xchg
and
shr
jno
jle
add
inc
mov
adc
ror
sti
cmp
cmp
arpl
adc
out
cdq
call
je
call
cmp
add
add
repnz
mov
mov
push
stos
pop
(bad)
mov
pop
shl
mov
icebp
xchg
mov
aas
je
ja
dec
pop
fld
sti
cs
and
sbb
out
jle
mov
hlt
out
mov
fs
adc
shl
cmps
icebp
ret
out
xor
in
in
sub
add
dec
test
mov
retf
test
(bad)
adc
(bad)
xlat
sar
push
or
xchg
xchg
(bad)
pop
leave
retf
das
pushf
out
mov
lods
xor
push
and
pop
adc
mov
cmps
adc
dec
rcl
mov
dec
xchg
retf
popa
ficom
enter
or
out
pushf
pop
mov
aad
and
enter
loop
ins
mov
add
fwait
jp
xchg
fist
iret
jg
iret
sub
mov
mov
cmp
lods
loop
sbb
repnz
mov
xor
mov
fcmovnb
cmp
popa
pop
cmp
sti
sub
adc
jmp
jle
popf
or
mov
pop
call
gs
adc
ret
mov
repz
push
cmp
xchg
jnp
ds
das
push
jb
xor
adc
iret
sub
cmps
ds
dec
addr16
leave
add
movs
jp
pop
pop
mov
popf
or
je
xor
lahf
ds
mov
add
push
mov
shl
iret
and
push
xchg
mov
inc
dec
les
xchg
test
pusha
inc
or
pop
stos
outs
leave
xchg
jge
arpl
push
jle
call
add
test
scas
pusha
push
mov
aas
push
jg
pop
sub
mov
(bad)
fidivr
out
pop
int3
sub
imul
fnstsw
or
in
xor
jb
add
fadd
sbb
pusha
out
sbb
test
jae
call
inc
je
aad
dec
pop
add
sub
cmp
int3
or
ret
in
std
jle
dec
iret
daa
xchg
cmps
scas
and
sbb
dec
fwait
mov
iret
push
sahf
out
or
dec
lods
jmp
outs
and
fimul
dec
or
daa
and
ror
loope
inc
fild
mov
ins
and
push
leave
fwait
aaa
mov
sbb
inc
jle
sub
xchg
stos
shl
les
mov
fwait
(bad)
push
dec
mov
mov
out
push
jno
arpl
xchg
inc
push
jp
test
std
iret
pop
call
adc
jno
add
mov
adc
jl
inc
sub
mov
leave
dec
cmp
cs
xor
sub
xchg
fsubr
in
out
fwait
clc
or
scas
js
mov
mov
clc
in
push
push
jg
(bad)
sub
jmp
pop
lahf
pop
or
lds
mov
sti
les
fwait
ins
mov
adc
pop
lock
loopne
push
out
pop
test
and
mov
ins
and
mov
das
jmp
jno
shl
lock
bound
pop
popa
cmp
sub
ins
pop
xchg
pop
mov
test
ret
pop
inc
push
dec
jg
iret
inc
and
cs
sub
repz
xor
aam
pop
jne
outs
and
ror
push
pop
call
push
lds
(bad)
(bad)
xchg
jmp
inc
xchg
scas
shr
mov
mov
cwde
nop
mov
inc
jnp
add
cwde
ror
fmul
jg
in
xor
call
inc
push
add
call
add
nop
push
aad
and
mov
(bad)
outs
pop
mov
pop
hlt
xor
js
leave
mov
add
std
cmps
add
(bad)
jnp
mov
jecxz
imul
sbb
pop
jmp
stos
sbb
push
add
pop
mov
cli
ins
jge
js
pusha
mov
mov
loopne
pop
jno
jg
clc
test
daa
xchg
repnz
sub
and
jb
(bad)
jnp
loopne
pop
adc
enter
xchg
xor
mov
mov
pop
pop
mov
rol
mov
jp
mov
add
add
xor
dec
cmc
int3
popa
cmp
jo
loope
aaa
cdq
fcmovnb
or
pushf
adc
or
loope
lock
pusha
jne
ss
popf
pop
mov
push
ror
mov
sbb
and
mov
cvtps2pi
scas
loope
dec
inc
jno
retf
mov
xor
jns
jecxz
sbb
dec
dec
ds
call
push
fcomp
cmp
cmp
int
inc
mov
or
mov
icebp
mov
dec
xchg
and
cld
popa
test
sbb
mov
cmc
add
sub
pop
cmc
les
jb
and
pop
outs
aaa
sysret
or
or
mov
jp
add
and
jp
pop
xchg
push
jo
call
xchg
adc
xchg
dec
adc
outs
inc
mov
adc
ret
mov
in
sbb
add
push
xchg
add
test
test
dec
dec
xor
cs
aad
cwde
add
jge
hlt
pop
xchg
push
xchg
jno
gs
mov
bound
mov
cmps
sbb
arpl
jo
xabort
sahf
jmp
das
push
jmp
pop
icebp
or
test
nop
out
popf
std
mov
mov
mov
sbb
mov
js
and
neg
in
test
outs
ret
pop
pop
sahf
sub
outs
sbb
pop
es
retf
cmps
ss
sub
pop
add
mov
lea
mov
add
(bad)
das
jmp
adc
sbb
xor
sub
mov
mul
ins
pusha
imul
mov
ror
sub
adc
jl
dec
popf
loop
cld
pop
or
in
mov
inc
mov
jo
dec
je
stos
sti
mov
sub
les
mov
leave
mov
stos
push
sbb
adc
data16
sub
test
mov
pusha
(bad)
pop
in
clc
sbb
shr
or
mov
aad
jmp
and
mov
and
adc
rcl
data16
adc
adc
mov
call
(bad)
rol
fstp
pop
sbb
xor
das
mov
xchg
movs
dec
pop
jne
mov
cmp
aaa
and
dec
pop
xchg
jge
lds
sbb
fld
mov
inc
les
adc
sbb
test
cmps
dec
add
xchg
test
and
inc
mov
jle
adc
mov
mov
(bad)
pusha
jp
fcom
or
test
pushf
aad
pusha
movs
adc
add
sub
test
das
jecxz
inc
adc
jno
xor
cmp
ins
add
(bad)
dec
test
stos
lea
ss
dec
cmp
stos
sbb
pop
adc
jg
adc
sbb
xor
data16
imul
add
xchg
sub
adc
nop
mov
sahf
fwait
jmp
sbb
ret
push
clc
add
lahf
push
pop
sbb
stos
enter
cmp
shl
cmp
arpl
jo
fbld
dec
arpl
lods
fs
stos
retf
sub
mov
push
mov
dec
hlt
inc
mov
mov
mov
sbb
dec
mov
std
(bad)
fs
retf
jae
arpl
or
nop
fmul
add
lods
jecxz
dec
jb
add
mov
fisubr
dec
(bad)
dec
push
push
std
add
inc
ffree
push
shr
pop
stc
push
cmp
add
idiv
cwde
shr
jg
ds
adc
out
fmul
das
sti
and
in
(bad)
mov
jae
adc
mov
retf
or
fisttp
and
dec
cdq
or
icebp
or
add
stos
and
sub
push
pusha
xor
inc
jae
mov
loopne
(bad)
retf
scas
mov
or
add
mov
pop
cmps
xchg
imul
add
js
jbe
mov
and
inc
frstor
fnstsw
sub
mov
adc
gs
iret
shr
stos
js
xchg
push
repz
jg
jne
pop
and
xchg
sub
inc
pop
clc
aaa
aas
jge
jmp
loop
jmp
ret
jle
out
imul
push
gs
xchg
test
data16
xor
pop
retf
mov
sub
push
or
into
jg
das
rcl
sbb
nop
pop
js
sbb
ss
or
mov
call
fisttp
loopne
mov
and
retf
pop
or
loop
sub
pop
int
clc
inc
and
push
pause
mov
into
aas
fs
adc
or
push
retf
and
(bad)
push
fidivr
mov
mov
mov
mov
pop
sbb
das
lods
mov
cwde
mov
inc
inc
inc
clc
(bad)
fdivr
ins
push
add
mov
aas
lahf
push
jecxz
jnp
and
sbb
outs
cmp
movs
add
cld
pop
or
dec
shl
dec
int
jecxz
push
push
sti
or
dec
jl
inc
call
push
stos
mov
lods
loop
fmul
(bad)
jmp
aad
push
jnp
and
jno
push
cmp
ror
cmp
shr
into
and
xchg
add
movs
loope
adc
mov
fld
or
lods
int3
or
mov
js
dec
pop
jp
in
shr
mov
rcl
mov
and
mov
jnp
imul
out
jmp
sbb
arpl
fstp
mov
or
push
xor
js
cmp
inc
out
cwde
or
cdq
test
adc
cmp
xchg
inc
mov
fwait
cmp
cs
cmp
sbb
dec
ror
ror
in
jne
mov
test
faddp
aam
mov
outs
ss
or
mov
jp
(bad)
daa
mov
sub
into
xor
adc
xchg
imul
test
rol
inc
fisub
popa
mov
lds
push
bound
test
jp
loopne
fidiv
cs
addr16
or
dec
ret
jmp
and
jbe
call
mov
pop
xor
stc
inc
loope
data16
sti
stos
push
call
jae
xchg
xchg
xchg
call
loope
pusha
pcmpgtb
jmp
push
push
ins
or
shl
mov
ins
push
bound
out
mov
ret
les
loop
sbb
or
mov
out
pop
jns
cmp
out
dec
pop
cmp
outs
aad
rcl
pop
mov
(bad)
fwait
cld
or
jno
fs
in
call
sbb
push
add
cmp
js
xchg
xchg
fs
pop
jg
gs
in
fnstcw
jnp
aam
jl
push
dec
add
mov
arpl
outs
outs
sub
fcom
loopne
inc
pop
sub
(bad)
xor
outs
sub
into
sbb
pop
inc
xor
pop
repnz
add
and
or
ds
rol
adc
call
mov
xchg
aad
mov
or
(bad)
cdq
inc
mov
sub
jle
gs
push
xchg
push
scas
sbb
jmp
pop
mov
and
test
stos
xor
xor
mov
push
imul
leave
fwait
inc
adc
cwde
dec
in
call
cmp
or
cmp
sub
cs
jecxz
jnp
lock
int
mov
lods
pop
rcl
shl
test
push
out
and
pusha
ret
cs
add
cld
test
adc
retf
pop
aas
push
inc
les
lock
adc
cdq
push
call
push
inc
jno
cmps
inc
fwait
dec
pop
in
stc
ret
loopne
retf
sub
std
sbb
fs
cmps
xor
jmp
(bad)
call
mov
in
jge
movs
mov
pop
mov
cmp
sub
mov
shr
sbb
mov
sbb
mov
xor
pop
push
xchg
cmps
neg
xchg
pop
add
neg
movs
mov
rol
nop
adc
cmp
sbb
out
fmul
ret
add
ss
or
push
push
loope
sbb
aaa
sub
std
inc
cmp
mov
clc
mov
movs
retf
inc
data16
mov
cmp
xchg
mov
xchg
xor
cmc
sub
cmp
inc
inc
call
test
scas
xor
mov
data16
imul
add
lock
jg
xchg
mov
sbb
adc
sub
repz
outs
cmc
cmp
pusha
rcr
shl
xchg
sub
xor
push
popa
scas
movs
jmp
inc
sub
and
push
mov
adc
xor
inc
(bad)
jnp
popf
ror
js
hlt
movs
cmps
push
into
fisttp
popf
cmps
outs
xor
and
test
movs
jo
pop
imul
cdq
push
xor
adc
mov
(bad)
adc
shl
call
jmp
out
test
fwait
xchg
cmc
icebp
ret
cmp
mov
sub
pop
or
(bad)
repz
shr
inc
arpl
add
and
and
pop
push
outs
cmc
dec
addr16
sar
mov
adc
(bad)
scas
inc
xchg
test
ins
mov
out
fiadd
sub
imul
push
pop
xchg
out
loopne
push
(bad)
in
mov
adc
shl
and
jae
les
jge
or
outs
jnp
les
loopne
cs
scas
or
push
push
push
jle
xor
rcl
push
fnsave
push
sar
mov
(bad)
mov
shr
stos
cmp
or
daa
loop
inc
jmp
cmp
mov
xor
sbb
pushf
jns
jb
and
mov
hlt
push
das
add
dec
loop
lahf
(bad)
sar
push
inc
jl
fcmovne
enter
into
mov
lods
mov
and
adc
or
dec
cmp
pusha
mov
mov
pop
inc
xor
sbb
cmps
fcmovne
cmp
xchg
cmp
sub
shr
xchg
xchg
dec
push
bound
mov
jno
mov
xchg
push
retf
cmp
push
rol
sub
fmul
mov
movs
cmp
ret
push
cmps
push
and
mov
and
pop
ret
pop
sbb
fiadd
pop
enter
adc
aam
push
sti
int
mov
outs
int
test
jle
clc
mov
mov
inc
inc
retf
add
push
and
dec
mov
mov
test
jmp
mov
jae
dec
sbb
mov
sbb
push
adc
repnz
pusha
(bad)
pop
push
pushf
in
sbb
adc
popa
lods
rol
push
daa
mov
jnp
cld
fcmovbe
out
ret
mov
into
cmp
mov
add
bound
bound
push
or
adc
and
jns
mov
sub
mov
pushf
das
mov
aad
sbb
pop
or
clc
add
or
xchg
pop
cdq
test
push
ins
add
ds
iret
(bad)
in
xor
movs
jo
mov
cld
aad
clc
icebp
shr
xchg
movs
jl
push
inc
movs
int
aam
mov
or
mov
(bad)
push
xchg
pop
add
ins
movs
push
pop
les
dec
jno
mov
push
outs
jmp
cmp
push
push
push
and
pushf
rol
cwde
js
inc
sbb
aas
out
mov
ins
jmp
call
daa
iret
retf
es
mov
sahf
mov
pop
mov
call
fs
lea
mov
xchg
push
shl
jae
(bad)
ret
popf
xchg
fs
test
test
or
fild
fdiv
dec
aad
inc
pop
mov
jns
add
call
test
icebp
rol
mov
adc
scas
(bad)
repz
pusha
xchg
arpl
mov
nop
jge
ret
jae
dec
cmps
and
jp
jl
mov
cwde
in
adc
mov
call
lds
addr16
pop
pushf
xchg
or
adc
or
xchg
xchg
xor
cmp
imul
mov
cmp
push
sar
mov
out
and
ret
popf
push
jmp
dec
and
mov
retf
(bad)
push
pop
or
cmp
inc
arpl
dec
add
test
jnp
stos
retf
mov
jmp
cmp
mov
xchg
imul
pop
repz
mov
or
sub
fwait
pop
add
dec
lods
call
adc
mov
xor
shl
in
pop
pop
ror
aas
scas
push
les
sub
fistp
ss
pop
popa
xchg
(bad)
adc
stos
ds
lock
clc
mov
(bad)
mov
les
aad
sbb
dec
and
xchg
and
je
pusha
mov
adc
mov
push
pop
(bad)
jnp
mov
or
jns
out
sbb
adc
int3
pop
les
lock
jae
dec
xlat
xchg
hlt
in
lds
jmp
adc
lods
ret
mov
std
femms
mov
adc
leave
imul
dec
fsubr
jg
(bad)
aam
xor
and
push
icebp
add
cmp
mov
mov
aam
cmps
(bad)
xor
fistp
sub
into
push
mov
test
jne
les
push
cs
sbb
cmp
out
aam
lock
mov
jno
xor
xor
xor
inc
inc
xchg
out
hlt
mov
(bad)
stos
inc
in
mov
lahf
xchg
add
inc
push
stos
pop
push
int
adc
mov
loope
gs
push
dec
stc
shl
aad
clc
push
outs
mov
pop
emms
popa
sbb
inc
mov
mov
pop
sbb
lea
ds
rcr
imul
mov
push
lds
mov
or
lds
and
loop
aas
jecxz
mov
pop
xchg
pushf
and
xor
das
push
pop
(bad)
ins
add
fs
and
mov
xchg
scas
loope
jb
lds
jbe
(bad)
out
mov
retf
adc
popf
mov
pop
cmp
retf
retf
cmc
(bad)
cs
test
cmps
sbb
xchg
push
mov
sub
nop
sar
xchg
pop
sbb
cwde
cmp
xor
cmps
pushf
jmp
jno
test
dec
pop
stos
stos
cld
imul
and
test
add
xor
imul
xlat
adc
mov
dec
sbb
cmp
inc
xor
inc
push
mov
lock
jecxz
lock
sbb
jmp
lods
mov
retf
(bad)
(bad)
out
xor
sar
repz
movs
mov
fld
stos
test
enter
rol
outs
call
inc
mov
inc
rcr
xchg
ss
mov
mov
lock
gs
adc
addr16
rol
pop
outs
call
and
add
inc
(bad)
shl
dec
(bad)
sbb
std
es
jmp
cmps
sub
mov
jl
jno
inc
inc
test
xor
stos
(bad)
cli
inc
and
ror
inc
pop
ja
xor
pop
(bad)
xor
nop
xchg
jne
nop
clc
push
or
adc
lea
cmp
fsub
push
std
mov
xor
push
out
imul
fisttp
aad
dec
call
cs
push
mov
and
and
dec
add
xchg
into
jge
sahf
(bad)
jmp
sbb
pop
out
xchg
xchg
ret
lock
cld
cwde
inc
inc
mov
movs
adc
add
inc
or
xor
es
xchg
inc
bnd
or
push
or
xchg
dec
jno
mov
das
retf
(bad)
cmp
(bad)
int3
lds
xchg
retf
test
push
data16
mov
lea
jg
outs
sti
and
and
pop
jmp
out
pop
inc
mov
mov
pop
fidiv
in
mov
add
adc
jl
inc
out
retf
cmp
adc
mov
xor
arpl
fst
(bad)
pop
inc
call
mov
jae
push
stc
xor
jge
sub
cmp
test
stos
dec
mov
inc
out
cmp
inc
adc
pop
sar
dec
and
sbb
push
rcr
out
int
sub
aas
push
(bad)
mov
cwde
ja
sub
fwait
mov
xor
in
lock
dec
mov
enter
adc
jb
sbb
xor
cmps
sbb
push
aaa
jecxz
mov
jmp
enter
popf
dec
sar
jle
cmp
jmp
sbb
aaa
shl
jg
jne
test
mov
xor
ins
jo
pop
fidiv
(bad)
jmp
ss
fdiv
test
lods
sbb
lods
inc
rcl
out
pushf
xchg
es
retf
fiadd
je
cli
fst
rcr
mov
sbb
sbb
hlt
xor
cmp
(bad)
xor
loope
dec
dec
mov
adc
shl
daa
sbb
add
rcl
xchg
add
xchg
les
out
cdq
ficom
pop
xor
iret
cmp
icebp
leave
and
dec
adc
mov
xchg
adc
lods
xor
and
push
inc
jae
add
dec
push
mov
mov
imul
push
sbb
mov
and
xor
sti
xor
in
mov
push
jb
fistp
jae
retf
imul
lahf
xor
outs
sub
xlat
cmp
push
(bad)
enter
push
and
add
call
jb
jnp
mov
push
fs
fild
inc
xchg
daa
int3
retf
iret
or
pusha
call
mov
push
or
jl
and
retf
test
mov
mov
sub
lahf
ins
sahf
adc
pop
mov
in
xchg
pop
shl
inc
sub
mov
xlat
repz
pop
add
add
mov
std
mov
shl
fcomp
xchg
mov
cwde
call
fstp
ret
test
aas
inc
(bad)
cld
rcr
fmul
(bad)
dec
and
xchg
mov
dec
imul
and
cs
imul
push
mov
fsubr
imul
enter
dec
mov
cmp
pop
mov
movs
add
adc
aad
out
stc
dec
jo
dec
mov
mov
mov
push
push
mov
rcr
xchg
mov
js
mov
(bad)
mov
repnz
shl
out
mov
push
pop
xchg
mov
mov
call
ja
jl
ds
sti
dec
test
in
mov
mov
and
dec
or
mov
or
mov
test
or
cmp
cmp
jge
ret
mov
or
pusha
mov
sub
shr
and
fisttp
mov
push
add
jnp
mov
das
div
ins
out
sbb
inc
scas
add
outs
rcr
jno
mov
push
jb
out
mov
adc
push
add
int3
mov
jno
test
jg
sar
stc
sbb
pop
sbb
xor
xor
mov
cld
pop
and
clc
adc
xchg
aad
push
mov
setle
xchg
push
adc
sbb
xor
mov
inc
aam
adc
xchg
cwde
inc
aas
sbb
test
inc
test
call
sahf
es
adc
fimul
repnz
mov
add
pop
retf
xor
btc
push
push
mov
repz
call
dec
rcr
pop
mov
xchg
jl
movs
cmc
sbb
(bad)
sub
stc
retf
mov
int3
push
xchg
inc
mov
lock
inc
das
cdq
jmp
cld
mov
push
je
in
dec
mov
(bad)
fimul
inc
mov
leave
and
les
in
pop
imul
jmp
retf
mov
into
jmp
pop
dec
cmp
test
adc
fmul
js
mov
lea
mov
loopne
shl
daa
mov
sub
into
mov
enter
scas
movs
stos
pop
stc
or
push
pop
(bad)
sti
push
bound
aaa
les
les
retf
add
cld
pop
es
adc
fadd
jnp
cwde
(bad)
pop
out
ret
mov
mov
cmp
mov
xchg
js
jmp
pop
and
fwait
mov
out
mov
mov
adc
pop
js
(bad)
rcr
repz
dec
repnz
test
pop
sub
pushf
clc
inc
xor
icebp
test
and
mov
xchg
pusha
mov
cmp
xchg
es
add
mov
sbb
les
test
jno
loop
test
lods
outs
push
lods
or
mov
mov
js
stos
push
xchg
aaa
(bad)
sub
mov
mov
jne
std
out
imul
fst
aas
out
int
fnstcw
and
fisubr
mov
lds
pushf
call
out
movs
aas
push
mov
mov
mov
fmul
xchg
cmp
sub
ds
xchg
pop
mov
adc
push
fldenv
adc
jp
cmp
aad
out
push
ds
or
(bad)
push
xor
test
les
jecxz
or
jne
idiv
pop
xchg
ror
ret
rcl
and
cli
sub
mov
jg
mov
out
cmps
(bad)
mov
fisttp
(bad)
clc
lahf
ss
mov
mov
mov
jl
ss
or
mov
and
jo
mov
push
xor
sub
movs
outs
xchg
call
dec
fcom
dec
imul
adc
sbb
dec
stc
xchg
mov
test
inc
adc
nop
mov
cmp
cld
pop
jl
mov
hlt
mov
sub
sub
das
repnz
test
pop
mov
pushf
xchg
les
(bad)
push
cwde
mov
and
inc
dec
shl
test
xchg
xchg
and
repnz
cmc
mov
jge
pop
call
sub
mov
and
div
test
cs
loop
int3
in
xchg
in
add
pop
add
icebp
mov
out
sbb
pop
push
xchg
mov
mov
repnz
leave
(bad)
imul
jl
dec
jle
imul
ret
jle
push
or
xchg
hlt
adc
push
xchg
mov
mov
scas
xchg
in
add
mov
xor
push
pop
mov
(bad)
fcomp
push
push
neg
jecxz
repz
or
rcl
ret
jb
add
sub
push
jle
xor
in
in
dec
call
dec
xchg
loope
pushf
sti
fidiv
jo
jmp
stos
jp
jmp
xor
pop
popa
jg
xchg
or
or
cdq
adc
and
fidiv
sahf
push
(bad)
push
jbe
fidiv
rol
out
mul
icebp
mov
mov
test
stos
jmp
xchg
sbb
adc
stos
test
nop
or
int3
(bad)
out
test
xor
cmc
fnstenv
xchg
int
in
xor
pop
mov
xchg
mov
or
mov
mov
pop
and
iret
or
sub
mov
pop
cmps
sbb
test
xchg
repz
pop
(bad)
test
in
enter
ud0
pop
xchg
lock
cmp
jecxz
div
in
jns
push
mov
(bad)
(bad)
jle
add
ins
jecxz
pop
pushf
pop
jb
jmp
fistp
pop
jp
into
call
inc
adc
pop
out
jne
out
inc
jl
push
mov
mov
lds
add
shl
rcl
inc
mov
idiv
je
int
outs
dec
xor
shl
jge
fisttp
jmp
bound
cmp
loop
je
pusha
mov
push
jne
mov
cdq
pop
pop
xchg
test
lods
cmp
mov
and
inc
xchg
jge
pop
leave
pop
sbb
sub
xor
sbb
cmp
movs
(bad)
sub
sbb
dec
jno
push
pop
jns
retf
mov
fiadd
rep
mov
imul
inc
enter
push
rcr
ficom
adc
mov
xchg
nop
cli
sbb
getsec
in
loopne
or
or
cwde
inc
mov
jecxz
frstor
jns
das
mov
outs
aas
(bad)
xchg
sahf
pop
sub
mov
scas
cmp
mov
or
pusha
ds
cdq
mov
xor
inc
imul
fdivr
push
dec
ret
push
imul
xchg
and
and
aas
mov
hlt
stc
stos
add
lahf
clc
in
ss
imul
sub
xchg
and
xchg
jmp
gs
xchg
sub
jecxz
pop
lahf
popa
adc
mov
add
loopne
jb
aas
inc
test
add
inc
and
pushf
in
shl
dec
lock
shr
leave
xor
jne
je
pushw
mov
fnsave
fisttp
out
mov
and
call
add
sbb
outs
idiv
jecxz
adc
xchg
push
inc
pushf
add
mov
fadd
enter
sahf
retf
push
push
jno
xchg
aad
pop
imul
push
jne
sahf
mov
das
pop
daa
fmul
sti
add
jmp
xor
(bad)
or
fsubr
mov
dec
push
bound
or
in
xor
clc
pop
jge
mov
test
fsubr
lea
xor
sub
adc
xor
adc
add
(bad)
sahf
mov
xlat
adc
into
gs
das
xchg
(bad)
aaa
xchg
call
add
sub
push
sbb
pop
mov
pushf
sub
out
gs
mov
sub
inc
retf
pusha
into
je
call
and
nop
dec
xchg
push
mov
cmc
xchg
sbb
rcr
sbb
cmpps
push
mov
add
pop
aaa
push
cmp
sbb
and
xchg
xchg
push
sub
jns
and
mov
mov
arpl
test
inc
add
ins
sbb
dec
push
xor
and
bound
jmp
sub
imul
ss
or
pop
das
cld
(bad)
xchg
jmp
leave
jmp
lods
mov
xchg
in
push
push
stos
add
inc
sahf
fwait
mov
popf
shl
retf
xchg
addr16
cmp
int
(bad)
imul
and
in
mov
push
push
mov
fisubr
ret
imul
push
jecxz
ja
or
pusha
out
push
sbb
sub
cmps
test
xchg
mov
mov
cmc
(bad)
dec
jg
stc
jmp
jno
ss
cwde
jecxz
fs
mov
iret
sub
xchg
retf
ins
aas
xchg
push
cmp
popf
inc
stc
jo
mov
and
or
movhps
outs
imul
mov
movs
jb
aam
push
inc
pop
push
add
push
adc
xchg
pop
stc
dec
inc
out
shr
popa
pop
sahf
aam
fucomip
cmp
popa
clc
pop
in
adc
xor
jge
test
das
fisub
push
int
push
cmp
push
into
shr
mov
cmp
mov
retf
ins
mov
outs
fcomi
mov
ins
mov
in
movs
lock
sbb
sbb
add
loopne
inc
push
ins
inc
mov
scas
mov
xchg
fild
sbb
loop
aad
popf
enter
imul
and
dec
xchg
leave
mov
jns
jnp
in
push
add
in
outs
shl
lock
cmp
adc
pop
inc
lahf
(bad)
fisubr
cmp
jns
pop
cmps
mov
sub
shr
add
xchg
(bad)
xor
mov
(bad)
adc
jns
or
cmp
enter
or
pop
js
pop
and
arpl
mov
sub
movs
mov
outs
outs
push
jo
sti
cmps
xchg
out
fs
jmp
lods
xor
pop
jb
ins
sbb
vunpckhpd
sub
cmp
pop
mov
cli
lods
sub
and
cmc
pusha
in
leave
cmc
jmp
dec
arpl
fild
add
fadd
or
in
and
xchg
(bad)
clc
(bad)
pop
stos
out
fstp
or
push
loopne
mov
xor
les
dec
jmp
sbb
dec
dec
jp
adc
dec
das
hlt
test
call
xor
push
xchg
sar
and
cmps
dec
inc
in
add
sahf
and
mov
fisubr
mov
sbb
jne
jno
pop
mov
imul
mov
mov
lods
mov
xchg
inc
cwde
adc
sti
dec
jecxz
imul
imul
xchg
js
add
div
inc
pop
iret
jno
jae
ss
cs
out
call
call
mov
dec
cmp
or
inc
imul
out
inc
cmp
scas
gs
pushf
mov
push
addr16
cmp
pop
mov
fmul
not
out
and
ficom
sbb
dec
xor
mov
inc
fcom
es
int3
push
xchg
ja
ret
stos
sub
dec
out
outs
es
js
inc
sti
in
aaa
bnd
rol
loopne
fcom
punpckhbw
or
push
stos
xchg
xor
aam
dec
mov
test
int3
dec
push
add
int
mov
data16
stc
dec
test
push
add
leave
pop
inc
bound
jl
retf
repnz
cwde
scas
das
sub
push
(bad)
cli
jnp
sbb
ret
es
mov
xchg
and
adc
cmps
mov
inc
fidivr
cwde
push
sub
arpl
xor
fstp
add
jne
pop
cmps
cld
mov
and
jge
sub
gs
shl
or
js
adc
inc
bound
adc
add
into
neg
and
inc
call
xchg
(bad)
adc
mov
push
ja
pop
cmp
outs
xor
(bad)
push
fnstsw
outs
cmp
lahf
shld
mov
mov
push
cmps
inc
adc
and
ret
push
aam
push
enter
cmps
mov
scas
fcom
add
cs
adc
arpl
in
add
pop
and
pop
mov
sti
jecxz
adc
mov
sbb
push
test
cmc
jge
popa
in
add
dec
int
ja
enter
sbb
(bad)
xchg
leave
aam
xchg
aam
mov
call
sbb
cdq
jge
lods
xor
retf
ds
add
inc
jmp
call
rcl
and
fisttp
pop
adc
jg
mov
int3
loopne
sbb
xchg
push
daa
push
jge
sub
sub
test
or
sbb
adc
fwait
mov
ds
adc
push
cmp
xor
repz
pop
in
add
jmp
xor
add
adc
jns
xor
push
int3
and
(bad)
xchg
aaa
(bad)
adc
test
add
push
icebp
adc
jnp
scas
(bad)
aam
add
inc
ror
pop
scas
retf
sub
pop
mov
(bad)
rcr
loop
cmp
cmps
adc
or
sbb
mov
aaa
mov
dec
std
mov
jg
or
in
add
and
es
xchg
xchg
(bad)
in
out
pop
mov
fimul
push
or
or
call
les
xchg
or
sub
cmps
or
fidivr
mov
xor
bnd
mov
push
jb
gs
lahf
sbb
mov
sub
shl
shr
and
(bad)
cld
or
imul
call
push
inc
retf
mov
arpl
push
adc
movs
lahf
and
mov
jmp
ret
and
cwde
xchg
out
jge
xor
adc
sub
xchg
fndisi(8087
pop
and
(bad)
imul
cmps
jbe
inc
stos
fild
ds
js
out
or
xchg
jle
add
clc
jecxz
push
test
xchg
jo
cmp
push
rcl
mov
inc
in
fs
ret
imul
cli
xor
fldenv
pop
js
pop
xchg
(bad)
mov
push
add
ja
adc
fucomp
jmp
jecxz
xchg
ds
adc
je
sbb
mov
shl
fnstenv
sub
cmps
pusha
test
inc
imul
dec
cmp
(bad)
add
ficom
xchg
outs
jmp
adc
fs
sub
adc
cmp
jns
repz
imul
pop
mov
pop
sbb
and
push
mov
cmps
inc
in
mov
or
mov
push
jle
mov
fsub
adc
mov
mov
cmp
xor
cwde
test
and
xchg
cld
les
jns
jmp
sub
xor
popf
ret
or
cmovnp
cs
sbb
mov
mov
je
jg
xchg
cmp
shr
movs
jp
imul
inc
retf
or
pop
fcomp
push
bound
pop
xlat
push
sar
mov
cld
xchg
dec
into
cmp
xor
jb
and
push
es
adc
add
xlat
mov
dec
mov
push
adc
retf
(bad)
in
int
add
test
adc
in
and
es
cmps
icebp
or
or
mov
sbb
fisttp
out
call
xor
loopne
aad
call
aaa
or
lock
xor
jo
mov
mov
mul
push
cwde
stc
mov
cmp
and
sbb
mov
mov
icebp
std
ins
loop
pushf
push
ror
in
adc
jo
jg
or
sub
lock
inc
in
and
and
(bad)
arpl
shr
popa
cmp
mov
pop
push
pushf
xchg
add
std
cmp
mov
inc
mov
dec
inc
and
jmp
and
inc
cli
jl
in
mov
rol
or
push
xchg
adc
retf
push
std
out
push
enter
jge
lds
sub
jmp
rol
dec
rcl
push
pop
mov
and
inc
cmps
dec
(bad)
les
fsub
pop
xchg
clc
enter
sbb
xor
fs
push
inc
cmp
test
xchg
pop
sbb
pop
or
sar
out
test
aad
mul
add
pop
xor
popf
cmp
dec
sar
(bad)
shr
out
fnstenv
test
adc
jae
(bad)
and
sbb
shl
popa
jecxz
test
adc
cmp
pop
inc
fadd
mov
jae
mov
inc
ror
pop
sub
add
push
add
inc
imul
mov
fst
adc
hlt
cwde
test
ret
inc
sub
mov
pop
mov
ja
leave
adc
mov
dec
add
test
in
outs
fimul
adc
mov
lods
(bad)
cwde
jo
mov
std
inc
or
mov
xor
add
das
or
ror
inc
scas
out
shl
mov
mov
stos
xchg
inc
mov
mov
ret
fcomp
adc
pop
push
jne
out
out
sub
mov
jmp
jle
inc
jle
jb
push
xor
push
sub
cwde
cmps
jnp
push
jo
mov
stos
test
dec
outs
pop
outs
jnp
nop
add
pusha
sbb
loop
xchg
add
add
mov
mov
cdq
mov
or
mov
and
hlt
xor
pushf
stc
mov
ret
repnz
cmp
js
shl
sbb
popa
sub
adc
adc
in
test
pop
mov
or
shr
test
sbb
daa
xlat
dec
jne
add
hlt
(bad)
stc
test
popf
mov
ss
xor
push
cmp
inc
or
into
pop
ss
nop
loop
and
lods
xor
ds
outs
ja
xchg
or
xchg
push
inc
jge
and
mov
(bad)
ficom
in
jge
test
sbb
mov
scas
xor
xor
iret
mov
push
jl
ret
int
movs
dec
and
jmp
cdq
jnp
add
xlat
iret
test
push
fistp
xor
mov
pop
fdivrp
mov
das
mov
pop
sbb
push
fcom
ins
mov
pop
jbe
mov
jmp
jg
push
or
add
xchg
out
mov
push
shl
(bad)
(bad)
int
enter
pop
aad
xor
mov
and
inc
dec
fild
sub
pop
add
xchg
bound
(bad)
cdq
(bad)
std
jp
adc
jo
cld
sub
jmp
mov
xchg
in
cmps
scas
out
ins
and
fwait
dec
std
jg
mov
push
jecxz
aas
mov
retf
and
jle
fucomip
repz
icebp
push
shl
je
inc
sbb
(bad)
or
pop
test
pop
jae
and
inc
and
sbb
retf
imul
mov
fild
xor
scas
mov
fsubr
cmp
sub
(bad)
stos
jmp
dec
gs
bnd
jg
retf
pusha
fcomip
rcr
xor
ins
adc
jb
test
cmp
dec
pop
outs
or
cmp
adc
mov
sti
jge
sub
jbe
sub
fs
cmp
mov
pop
adc
sub
addr16
mov
stc
int3
repnz
mov
xchg
mov
jmp
adc
jmp
mov
adc
mov
test
idiv
fnstsw
shl
ds
pop
cmc
popf
sbb
adc
inc
dec
adc
data16
xchg
ror
push
fwait
and
inc
(bad)
pop
mov
push
pop
adc
xlat
jno
cdq
je
lahf
and
cmp
jnp
mov
fcomp
jge
pushf
es
ins
push
cmp
add
ss
xor
pushf
inc
sbb
retf
nop
dec
std
out
jmp
(bad)
mov
aas
dec
lock
sbb
jg
mov
aam
fwait
mov
shl
mov
into
aad
cmp
popa
imul
inc
fistp
mov
daa
retf
jnp
mov
stc
jmp
rol
pop
ror
stos
je
sub
add
lea
mov
cdq
out
and
jp
scas
sbb
add
mov
les
push
pop
rcl
std
imul
push
xchg
ss
jne
cli
test
mov
shr
aas
pop
retf
mov
dec
adc
ins
mov
jnp
jne
lea
addr16
stos
repnz
push
cmps
xor
dec
repnz
in
sti
jbe
push
push
mov
pop
ja
xor
pop
aaa
daa
test
pop
mov
jg
fsubr
mov
iret
out
mov
js
arpl
stc
shl
push
jbe
andps
daa
mov
add
mov
retf
neg
mov
xor
jbe
data16
and
mov
sub
adc
das
xchg
mov
rol
in
mov
jmp
mov
std
(bad)
add
push
jge
ja
rcl
xlat
or
or
mov
pop
push
das
aaa
icebp
popa
imul
inc
adc
push
add
sbb
cmp
or
jl
mov
leave
dec
inc
inc
sbb
push
sbb
sub
test
push
fs
jp
inc
int3
push
movs
jmp
shl
xchg
loop
je
dec
lods
pop
popf
inc
jno
clc
jne
jge
add
outs
adc
cld
pushf
mov
mov
outs
dec
and
adc
outs
ret
mov
iret
jae
mov
inc
sbb
cmp
push
jns
mov
dec
movs
sti
stc
sub
les
push
fild
and
push
adc
scas
sti
sti
out
rcl
inc
mov
push
mov
ret
nop
ror
into
jne
or
das
or
push
les
sub
dec
iret
(bad)
dec
push
dec
cmp
call
sbb
imul
call
std
sahf
push
cli
sub
cs
loope
out
and
vmovss
les
stos
retf
ret
cmp
pushf
mov
xchg
jno
mov
popa
ss
dec
das
leave
loope
push
aam
push
outs
cmovnp
jno
ficomp
outs
xor
sbb
inc
mov
or
jb
pop
jp
int3
(bad)
shl
mov
jl
push
in
or
mov
cmp
mov
lds
cmp
inc
adc
ror
mov
jge
xchg
int3
(bad)
or
pop
push
das
xor
push
loope
js
sub
outs
call
jnp
cmps
test
sti
gs
je
cwde
mov
sub
ins
test
sbb
push
cmps
jmp
add
push
clc
in
loopne
mov
(bad)
jg
jnp
les
mov
ins
rcl
mov
leave
repz
or
cmps
xchg
pop
xor
fdivr
ins
or
lea
push
je
int
dec
jno
dec
push
(bad)
punpckhwd
mov
and
loopne
sub
mov
retf
xchg
lahf
(bad)
sub
iret
fs
mov
jbe
adc
mov
push
(bad)
lock
pop
jmp
mov
repnz
call
in
lock
mov
push
mov
inc
mov
psraw
daa
bound
cli
or
test
or
dec
retf
sbb
retf
add
dec
and
xor
sysenter
sbb
dec
cmp
outs
inc
stos
leave
ins
fcomp
(bad)
dec
push
aad
lea
mov
jns
inc
mov
outs
gs
in
push
fsubrp
sbb
push
add
call
xchg
enter
cwde
mov
imul
mov
ins
mov
cmp
adc
aad
popf
ja
sbb
push
mov
(bad)
adc
aas
ss
call
sbb
pop
fst
xchg
aaa
sbb
xchg
pop
and
adc
pusha
(bad)
mov
xchg
fsubr
pop
push
mov
aas
mov
idiv
fisttp
(bad)
out
dec
add
test
fdiv
or
(bad)
clc
mov
mov
dec
idiv
fild
or
jae
(bad)
push
sub
add
inc
mov
or
bound
add
or
push
push
jae
mov
dec
cs
stos
and
mov
(bad)
add
in
add
dec
add
jnp
fnsave
outs
inc
fwait
mov
sub
popf
repnz
inc
in
lahf
jle
mov
loopne
sub
xor
or
inc
or
pop
jecxz
fistp
inc
sti
xor
push
push
test
pop
jb
mov
in
adc
push
add
out
retf
or
push
dec
jp
dec
(bad)
sub
daa
adc
mov
rol
(bad)
sub
mov
cmp
mov
or
and
mov
cmp
sub
jnp
push
xchg
pop
inc
repnz
push
mov
imul
fild
imul
stos
repnz
mov
mov
cmc
loopne
mov
xchg
hlt
adc
dec
shl
jl
movs
pop
xor
into
lock
xlat
in
ins
out
push
and
loop
loop
mov
adc
xor
std
and
dec
push
imul
jle
xor
jmp
and
pop
push
outs
and
cmc
or
ins
push
nop
sub
aam
xor
mov
xor
cmps
arpl
xchg
dec
sbb
cmps
repnz
mov
loope
sahf
in
jne
jns
sub
mov
xchg
shr
addr16
jge
cmp
sti
inc
xlat
adc
sti
mov
inc
cmp
das
xchg
inc
rol
outs
mov
cld
gs
or
or
cli
jne
test
es
dec
mov
xor
cwde
aas
sbb
dec
aad
dec
daa
push
inc
addr16
mov
push
sbb
xor
cmp
imul
push
and
arpl
jne
push
dec
ja
sub
call
das
cmp
inc
or
ret
lods
repnz
jg
(bad)
or
mov
pop
xchg
cmp
loopne
cld
cmp
xchg
sahf
shr
hlt
push
inc
repnz
xor
pop
retf
dec
ficomp
mov
or
xor
pop
fistp
jno
sub
popa
into
pop
inc
push
jb
repz
mov
xchg
mov
fiadd
mov
mov
push
or
push
ss
cmp
adc
cmp
hlt
dec
outs
sbb
xor
jle
mov
(bad)
aaa
(bad)
out
popa
jg
cmp
pop
cwde
outs
adc
jp
dec
push
es
sahf
aam
push
in
lock
fdivr
movs
push
sub
das
dec
mov
repz
outs
lods
ficom
retf
icebp
mov
test
cmp
xor
cmc
sbb
pop
int3
push
pop
test
addr16
repz
mov
call
popa
xor
inc
sar
lahf
push
in
or
jbe
inc
mov
fs
add
loopne
in
pop
frstor
push
add
stos
mov
xchg
js
out
cmp
xlat
add
xchg
push
inc
adc
and
jb
and
shl
ret
aaa
ret
inc
movs
pop
idiv
cmps
inc
je
push
or
jp
jns
sub
dec
push
out
ds
xor
adc
xor
mov
add
xor
xor
jb
imul
(bad)
mov
stos
clc
je
mov
aad
sbb
push
cmps
mov
in
push
sub
outs
dec
lods
cmp
cmps
pushf
gs
stos
scas
lods
xor
dec
test
sub
daa
add
pop
add
inc
jmp
hlt
mov
pop
popf
ins
cmps
mov
xchg
mov
icebp
and
sbb
sbb
push
mov
mov
call
cmp
pop
jmp
fcom
pop
call
and
and
mov
xchg
test
jecxz
(bad)
popf
jb
ror
mov
xlat
fs
pop
ret
jo
movs
cmp
fs
xor
clc
add
rol
repz
pop
jnp
push
dec
jae
inc
ins
sbb
dec
pop
ins
push
pop
pop
das
push
dec
pop
packuswb
aas
ja
mov
icebp
in
(bad)
into
inc
and
dec
pop
cmp
iret
bound
fcomp
in
jmp
leave
pop
dec
ins
cs
lods
sbb
adc
inc
jmp
outs
adc
jno
mov
iret
pop
test
push
mov
ror
rcl
or
fmul
sahf
mov
int3
mov
fldpi
inc
adc
(bad)
or
mov
sbb
adc
add
dec
shl
mov
mov
fsub
cmp
(bad)
in
cmp
sbb
cmp
mov
sub
jmp
lods
pop
call
adc
fist
and
jno
das
cmc
adc
mov
and
fiadd
add
and
push
xchg
mov
or
in
test
sub
mov
push
push
cmp
inc
nop
sub
out
jbe
xor
jmp
fs
je
sub
arpl
sub
cdq
pop
fimul
xchg
mov
xchg
std
mov
jle
inc
out
mov
and
and
mov
mov
add
test
pop
loope
push
sbb
sub
ret
and
sbb
pusha
test
xor
sub
push
mov
stos
or
dec
retf
and
sub
pop
leave
jbe
icebp
fcom
jnp
cmp
in
shl
xor
add
popa
jae
icebp
aam
int
sub
add
lahf
rcl
dec
or
or
mov
inc
dec
jo
into
inc
std
jbe
xchg
(bad)
xor
xchg
cs
sbb
mov
jns
ficom
mov
icebp
out
test
or
aas
stc
push
(bad)
aaa
sbb
arpl
and
out
mov
loop
arpl
dec
xor
cmps
loop
inc
leave
ds
xor
push
int3
inc
mov
mov
add
lods
cmp
cmps
cmp
mul
mov
clc
push
sets
fsub
lods
mov
pop
(bad)
out
cmps
pop
push
and
nop
mov
pop
add
jno
mov
add
push
fistp
aad
or
mov
dec
ins
jo
jmp
jge
mov
sub
call
pop
dec
call
mov
cmp
dec
pop
mov
push
sbb
pop
or
shl
cs
aad
aas
je
jg
sbb
xchg
ret
or
sbb
(bad)
shl
neg
xor
ret
(bad)
jg
jmp
(bad)
scas
or
jle
mov
cmps
jb
mov
das
sub
sti
jge
je
push
mov
mov
sub
jbe
xor
inc
dec
push
mov
iret
cmp
or
popa
fiadd
and
data16
out
dec
mov
xor
push
es
in
(bad)
movs
sahf
mov
aas
mov
xchg
push
cmp
dec
out
leave
xor
lods
mov
popa
stos
movs
dec
jne
fistp
inc
sbb
push
scas
inc
xchg
mov
and
movs
shl
out
into
xchg
lahf
mov
cmp
mov
adc
xchg
adc
xchg
adc
jl
fmul
add
(bad)
int
dec
push
bound
xchg
outs
mov
addr16
fst
fbld
xor
adc
mov
scas
lock
push
mov
pop
imul
in
pop
cs
iret
cmp
(bad)
jmp
mov
mov
test
movs
repz
test
push
adc
push
cdq
sub
sar
sar
and
sbb
stc
mov
cmc
push
sub
jmp
rol
sbb
mov
into
mov
add
adc
shl
retf
dec
inc
movs
in
mov
or
shr
sbb
out
mov
inc
movs
inc
ins
mov
cmp
(bad)
jle
out
sbb
adc
xor
out
cld
into
fwait
aam
pop
les
call
push
addr16
and
dec
mov
jmp
(bad)
cmps
sbb
adc
push
add
aad
fadd
xlat
push
pop
in
out
lea
push
fwait
mov
scas
sub
and
test
gs
mov
ror
jae
or
int
adc
jmp
cwde
call
rol
pushf
or
mov
ja
adc
imul
test
lods
push
pop
out
jne
cmps
scas
ret
pop
adc
stos
pop
repnz
arpl
mov
adc
adc
stc
retf
fs
or
or
fld
data16
sub
ins
into
and
xchg
jo
test
in
and
das
sar
dec
dec
or
lahf
jbe
or
ins
scas
pop
mov
(bad)
add
aaa
sub
pop
adc
xchg
out
(bad)
push
das
push
or
xor
aas
popf
cmp
dec
cmps
jb
push
into
add
dec
mov
jns
(bad)
out
je
call
adc
dec
mov
stc
rol
jne
mov
out
out
xchg
inc
add
mov
in
mov
psubb
clc
popa
add
pusha
lods
and
inc
push
push
or
push
mov
clc
mov
fstp
les
xor
sub
xor
sub
not
shl
jns
jmp
dec
fdivrp
call
int
vmwrite
sub
jle
cmp
inc
xchg
sbb
pop
xor
sbb
and
sub
mov
sbb
fisttp
push
push
cmp
fdivr
xor
and
sub
mov
and
fs
inc
mov
test
inc
jecxz
xlat
popw
pop
jnp
cmps
pop
rol
in
inc
ret
sbb
loope
push
fwait
pop
fimul
mov
jmp
adc
jnp
mov
leave
xchg
shl
data16
adc
cmp
pop
fidiv
sbb
jmp
retf
jecxz
and
fild
adc
lds
imul
or
std
cmp
int
aad
mov
adc
dec
loop
dec
sub
xor
dec
je
(bad)
mov
dec
xor
pop
add
dec
push
xor
mov
jmp
mov
into
pop
adc
dec
sbb
sbb
pop
ficom
movs
shr
rcl
ins
add
ror
jg
sbb
add
in
ss
call
jbe
cs
mov
cmp
mov
pop
pusha
jmp
ror
xchg
icebp
pop
int3
or
sub
in
mov
out
cdq
retf
jecxz
sahf
pop
pop
mov
add
pop
dec
imul
sub
xchg
xor
pop
test
icebp
cmps
mov
outs
das
cld
xchg
sub
dec
test
push
pop
stc
scas
pop
test
out
shr
push
fdivr
xchg
sub
mov
lea
retf
lods
and
icebp
xchg
dec
lahf
dec
and
imul
call
fldenv
shr
in
ja
and
mov
xchg
jmp
enter
out
pop
fnstsw
jmp
adc
in
ret
push
mov
cmp
test
(bad)
fneni(8087
fs
pop
cmps
loopne
pop
xchg
mov
call
repz
push
jmp
data16
adc
jl
rol
ins
sub
test
and
inc
or
pop
lods
ret
jmp
fst
(bad)
imul
mov
icebp
pop
mov
add
jne
pop
aad
jbe
pusha
rol
cmp
aas
xor
dec
lods
shl
mov
sub
pop
jg
mov
cdq
dec
cmc
outs
popa
retf
sbb
mov
cdq
call
or
push
xor
lock
ins
ret
or
xchg
sub
xor
je
pop
in
xchg
xchg
fs
(bad)
mov
mov
mov
ja
ss
sub
or
sub
pusha
hlt
(bad)
xor
jo
sbb
mov
mov
or
(bad)
xchg
cmc
fwait
add
scas
out
mov
mov
out
pop
jnp
out
dec
push
xchg
sbb
or
dec
fcom
or
ret
and
sbb
mov
js
xlat
scas
xor
and
test
add
call
or
cmp
dec
xchg
pop
in
mov
sub
sahf
ins
sub
repnz
jecxz
mov
in
ret
lods
mov
test
inc
mov
movs
sbb
jge
fisub
arpl
inc
stos
fst
pop
jl
and
push
pop
jb
jbe
cmp
jp
ret
push
std
mov
inc
stos
jne
inc
sub
cmp
jge
outs
push
call
jnp
pop
scas
adc
sbb
inc
adc
adc
add
mov
(bad)
xor
push
mov
jno
cwde
out
mov
inc
add
adc
test
xchg
push
lods
or
push
outs
mov
loopne
leave
(bad)
iret
fwait
out
rcr
test
pop
dec
shl
mov
pop
sub
mov
cmp
cmps
(bad)
clc
movs
in
mov
loopne
xchg
pop
std
push
stos
(bad)
and
add
add
test
or
cmc
dec
push
std
outs
xor
push
repz
push
fild
mov
pop
into
sub
sti
(bad)
push
adc
push
loopne
mov
cmovae
test
sti
(bad)
in
ror
in
push
rol
sar
mov
and
mov
or
mov
cmp
cmp
xchg
pop
cmps
cmp
jmp
in
or
push
test
test
loope
popf
mov
les
stc
xchg
and
ds
retf
mov
and
test
hlt
outs
js
mov
push
push
movs
jnp
sbb
out
mov
je
and
aad
int3
xor
nop
inc
lahf
dec
ins
(bad)
out
call
into
push
aam
mov
cli
cmp
stos
pop
imul
clc
imul
stc
dec
stos
mov
add
xchg
xor
stc
jo
mov
iret
xchg
outs
xchg
add
rcl
xchg
xchg
fwait
gs
sbb
adc
(bad)
ret
adc
mov
movs
dec
push
clc
mov
cmp
mov
std
imul
sub
pop
jnp
retfw
push
fwait
push
jo
fcomi
jecxz
(bad)
mov
pop
xchg
enter
into
lock
jns
mov
mov
imul
addr16
repz
jo
dec
mov
js
sti
stc
jnp
stos
xor
repz
(bad)
push
out
xor
dec
inc
add
repz
jg
sbb
sar
fnstcw
bound
ficomp
dec
pop
jp
cmp
icebp
test
test
les
mov
cld
xor
jge
pop
test
sbb
bound
sbb
les
aaa
dec
stc
cli
pushf
dec
pop
jmp
jp
outs
and
outs
stc
scas
arpl
(bad)
mov
ds
jmp
jne
sub
shr
dec
add
mov
mov
repz
jbe
test
dec
jb
(bad)
mov
imul
scas
pop
or
lock
lods
test
rol
push
ret
sbb
retf
in
push
inc
xchg
pop
pop
je
xor
lods
retf
jb
outs
std
pop
pop
dec
test
sub
fcomp
fcom
cmp
call
xor
stos
inc
adc
(bad)
mov
and
adc
jo
lock
dec
xor
dec
cld
jo
adc
retf
fadd
add
mov
cli
jp
test
aad
ss
add
in
push
rcr
pushf
popa
mul
inc
rcl
mov
stc
retf
in
or
sub
test
add
fist
mov
mov
mov
xchg
adc
and
(bad)
pop
in
dec
(bad)
les
mov
add
adc
loop
das
pop
scas
mov
test
or
ins
pop
(bad)
sbb
adc
and
xor
add
jno
push
adc
sar
fisttp
pop
mov
fwait
(bad)
popa
cdq
fisubr
adc
mov
xor
lods
pop
dec
push
push
das
loope
dec
adc
test
(bad)
cld
push
sub
xor
push
rcl
div
sbb
mov
adc
outs
lods
ds
or
into
pop
test
cmp
pushf
xor
fist
lods
pop
push
and
shr
pop
xor
pop
add
and
push
cdq
retf
sbb
addr16
xor
mov
fucomp
iret
sub
shr
jbe
loope
and
pop
mov
sub
add
push
xchg
push
out
nop
(bad)
cmp
aam
gs
(bad)
movs
in
sbb
xor
js
loopne
cmc
int3
add
mov
and
push
mov
xor
push
push
cmc
add
pushf
xor
sub
push
cmc
and
ror
xor
inc
jo
gs
cmp
xor
addr16
add
mov
pusha
mov
mov
push
in
cmp
dec
push
pop
jg
add
inc
cmc
mov
pop
and
sub
or
mov
lock
ret
and
lods
xchg
daa
inc
loop
sub
sbb
jge
(bad)
daa
movs
scas
scas
pusha
xchg
dec
(bad)
ror
jmp
jmp
sbb
stc
mov
cmp
xor
fcmovu
aaa
lods
cli
push
adc
lea
xchg
pusha
setge
cld
dec
dec
je
jp
cmps
lods
adc
mov
and
cli
mov
stc
sub
xor
imul
shr
in
cdq
fdivp
loope
mov
sbb
dec
lods
outs
jle
jle
or
cdq
or
add
or
sbb
mov
lods
retf
test
adc
jno
push
fiadd
sub
ret
push
(bad)
popf
mov
jno
mov
and
mov
(bad)
fmul
sub
cmp
(bad)
mov
imul
adc
add
ins
sbb
bts
fwait
ret
mov
das
or
dec
jno
cmp
mov
int
lods
mov
sar
xchg
dec
adc
pop
loope
test
xlat
mov
repz
js
and
leave
das
jp
xlat
(bad)
int3
pop
fistp
je
pop
out
cli
nop
int3
shl
dec
call
cmp
xchg
push
retf
popf
imul
out
cmp
stos
mov
inc
cs
add
into
fstp
jge
inc
sbb
aaa
mov
lahf
mov
dec
mov
adc
movs
sub
sbb
call
sub
xchg
inc
imul
in
shl
push
pop
out
mov
rcl
sub
ror
xchg
imul
inc
add
mov
push
push
inc
out
daa
shl
call
cmps
and
xchg
test
xlat
mov
add
inc
daa
push
and
fisubr
sbb
push
(bad)
sar
pop
test
mov
xchg
mov
mov
stos
neg
pop
sbb
test
push
fimul
es
cld
call
mov
xchg
out
loope
repz
cmp
sub
cmp
adc
lds
add
and
pusha
fstp
iret
or
inc
icebp
les
test
test
cdq
sbb
or
adc
jbe
js
adc
popa
pusha
mov
sbb
pop
dec
(bad)
hlt
je
jp
mov
rol
jle
cmp
loopne
jae
jnp
sar
or
rol
pusha
(bad)
jg
jnp
inc
sub
xor
jo
cmc
push
aad
ret
out
adc
sub
leave
pop
or
(bad)
sub
mov
xchg
in
icebp
jae
daa
sub
pcmpeqw
adc
es
std
add
mov
fadd
in
jp
clc
push
jmp
dec
aam
js
or
push
je
xor
addr16
mov
adc
aad
jbe
daa
mov
into
mov
cli
dec
int
js
movs
cmp
xor
jmp
adc
loop
and
int3
cdq
mov
in
push
adc
and
mov
inc
xchg
(bad)
mov
dec
sub
ret
lods
jl
mov
mov
rol
popa
mov
or
ins
or
test
sbb
mov
jecxz
xor
push
pop
out
jo
xlat
fwait
push
fidiv
cmp
xor
mov
jnp
add
rol
xchg
xchg
pop
imul
jp
hlt
lods
sub
xchg
pop
pop
ins
dec
jnp
es
jo
lock
adc
icebp
ror
cmps
jo
outs
push
pop
pop
add
loope
sar
jmp
xor
add
pusha
mov
jns
aas
aas
mov
mov
xor
mov
test
jp
test
fwait
retf
inc
fdiv
(bad)
and
std
add
loopne
(bad)
mov
mov
push
sbb
mov
cmp
in
cwde
xor
and
pusha
xchg
add
cmc
or
or
int
rcr
and
push
movzx
pop
cmps
mov
push
cdq
movs
or
jp
add
push
out
push
sub
and
and
addr16
sbb
mov
xor
cli
addr16
ss
push
mov
lahf
sub
aaa
sub
inc
xor
sub
pop
sub
dec
mov
sub
je
aas
jp
sub
cwde
in
outs
in
jns
xor
aad
add
and
mov
ins
int3
pop
jo
sar
hlt
mov
test
gs
jae
sysret
mov
stc
lds
es
(bad)
out
cmps
mov
mov
mov
adc
es
retf
and
das
mov
push
cmps
fcom
mov
jle
jmp
pop
xor
mov
js
icebp
scas
gs
pop
cmp
ror
cmp
pusha
jmp
popf
out
stos
xor
scas
jecxz
(bad)
scas
icebp
push
sub
and
aas
pop
inc
int3
xor
xchg
inc
loope
mov
enter
add
xchg
xchg
xchg
std
or
inc
xchg
push
mov
daa
stos
mov
and
out
push
aam
(bad)
sti
jo
cmp
and
ins
jmp
lds
ss
cmp
jl
sbb
cwde
mov
mov
aas
ds
and
inc
fstp
pop
sbb
loope
popf
leave
mov
jb
mov
pop
sub
add
and
cmp
xor
cwde
std
les
out
pop
pop
lahf
arpl
dec
fwait
sub
mov
pop
push
mov
xor
mov
call
das
call
mov
sar
xchg
fcmovu
mov
sbb
ret
mov
or
or
push
and
out
leave
ins
adc
push
or
mov
mov
and
mov
mov
pop
leave
pop
jae
cmp
pop
sbb
jge
outs
sbb
xor
jp
movs
test
loopne
dec
xlat
jo
push
jno
aad
push
stos
ret
pop
ret
fisubr
dec
int3
out
adc
ja
addr16
les
mov
pop
pop
dec
test
neg
dec
xor
lds
adc
push
pop
popa
mov
and
dec
sub
shr
and
jo
(bad)
pusha
mov
push
jmp
rol
cs
pop
add
xor
cmp
shl
mov
pop
scas
and
iret
mov
mov
xor
or
out
stc
outs
xchg
push
pop
fstp
test
ret
inc
push
push
test
xchg
aaa
jns
dec
(bad)
xchg
ds
pop
(bad)
mov
(bad)
xchg
and
add
aaa
and
fwait
lods
shr
push
and
and
add
movs
sub
fs
mov
out
push
jl
ins
hlt
push
test
imul
mov
xor
(bad)
je
mov
push
mov
loope
adc
jmp
xor
or
scas
retf
popa
mov
popa
ret
sbb
out
nop
cmps
in
xchg
and
jo
popa
and
rol
mov
ins
or
fwait
or
adc
jne
add
cs
add
addr16
adc
xchg
out
sbb
sbb
inc
mov
adc
in
push
mov
xor
add
or
adc
inc
inc
add
inc
mov
jo
outs
mov
cli
je
and
mov
xor
pop
test
lods
mov
repnz
shl
repz
or
scas
sti
je
pop
add
imul
pop
lods
pop
mov
cmp
pop
dec
mov
out
jecxz
gs
pop
cmp
or
jb
pop
jb
sbb
arpl
and
mov
mov
xchg
je
pop
lods
ss
fnsave
stc
sub
xor
mov
mov
mov
jnp
(bad)
stos
xchg
pop
sbb
call
outs
cli
and
stc
ja
fist
iret
mov
mov
inc
or
fs
sti
rcr
and
and
push
inc
or
xor
inc
outs
test
xor
bnd
xlat
push
push
sub
popa
pop
inc
adc
sbb
sbb
fisubr
and
rcl
mov
fist
mov
out
add
test
repz
test
fadd
popa
fstp
imul
jne
inc
gs
push
cli
(bad)
fist
je
adc
xor
and
adc
adc
mov
aaa
dec
pop
lea
xchg
sub
outs
data16
aaa
xor
or
stos
jle
dec
adc
and
call
(bad)
pop
inc
cli
fiadd
add
adc
into
adc
pop
xor
out
ret
cmp
sbb
pusha
mov
popf
mov
(bad)
push
adc
jno
fsubr
mov
jno
cmp
mov
loop
or
pop
enter
movs
push
adc
addr16
mov
daa
out
mov
scas
inc
jbe
in
jnp
out
(bad)
mov
fs
daa
inc
jbe
lea
add
repnz
int3
imul
add
imul
cmps
ds
pop
mov
dec
je
bound
test
xchg
pushf
dec
cld
mov
and
shl
imul
outs
shr
ret
lods
mov
jb
jl
xor
sbb
or
add
or
scas
pop
sub
mov
sahf
lods
mov
jmp
ret
mov
rol
(bad)
scas
arpl
dec
test
lods
mov
lock
pushf
rcr
outs
dec
or
mov
push
cmp
inc
and
shl
add
and
mov
mov
ret
(bad)
je
in
pop
into
dec
bound
pop
jge
jae
push
pop
jle
fild
retf
xchg
xchg
outs
hlt
xchg
push
das
(bad)
jl
js
jg
ficomp
lea
push
mov
pop
push
and
ret
ins
jns
div
aaa
pop
xor
jge
test
jae
test
push
mov
sar
test
sti
cmc
jae
hlt
or
push
jl
stos
sbb
jl
mov
cld
mov
fucom
add
imul
fist
jg
mov
push
outs
ja
test
push
cmp
cmp
cmps
lea
aad
cld
(bad)
fst
cld
pop
or
pop
pop
loop
mov
and
retf
nop
add
xchg
test
mov
sbb
aad
jno
jne
aam
fistp
mov
enter
in
xchg
xchg
xlat
les
movs
imul
rcl
scas
sar
scas
aam
arpl
xchg
stc
gs
lahf
add
int3
xchg
mov
mov
arpl
movs
xor
push
sbb
ret
and
dec
and
sbb
dec
push
js
and
xor
repnz
fs
movs
sbb
sti
and
icebp
outs
sbb
lahf
push
stc
frstor
sbb
loopne
dec
dec
imul
or
cli
lock
mov
movs
movs
xchg
push
cmp
fwait
xchg
push
mov
stos
rcl
lds
mov
sbb
outs
pop
xchg
push
ins
pop
std
aad
mul
dec
ret
or
ret
pop
test
iret
ins
(bad)
cmp
fsubr
loopne
dec
sbb
vpsadbw
retf
mov
lea
cli
(bad)
jbe
inc
or
push
mov
jae
push
mov
movs
jb
mov
jl
lds
fidiv
adc
stc
nop
and
adc
jnp
sar
imul
cs
fidivr
dec
jle
aam
lea
jb
jbe
push
repz
sub
imul
mov
mov
ins
push
inc
xchg
loop
arpl
mov
mov
adc
inc
xchg
push
stos
enter
xor
shl
int3
jecxz
xor
rol
cmp
jns
aam
stos
add
cmp
push
xchg
das
jecxz
adc
push
fs
sbb
repz
dec
enter
xchg
mov
pop
and
fcom
mov
inc
repz
(bad)
call
mov
mov
cld
imul
aaa
jnp
mov
fisub
data16
es
jl
out
and
lea
fdivr
mov
loop
and
movs
inc
leave
fsubr
(bad)
sbb
lods
pop
xor
loope
cmp
inc
aaa
fisttp
cmps
lods
fwait
out
mov
scas
inc
dec
xor
rcl
xlat
or
int3
xchg
lahf
lods
stos
dec
inc
retf
xchg
push
or
or
pop
add
push
call
inc
sbb
jg
rcr
data16
mov
adc
test
test
ret
mov
cmp
mov
cmp
aaa
imul
data16
das
and
fstp
mov
lahf
mov
and
jne
push
pop
mov
inc
loope
fsin
or
fist
add
rol
add
into
rol
and
(bad)
jmp
pop
pop
aas
and
xchg
aas
cmc
(bad)
adc
ss
add
jp
jp
adc
sub
adc
xor
jae
add
mov
push
mov
mov
mov
loope
js
pushf
aad
in
adc
mov
sbb
cs
(bad)
ror
xlat
push
loop
sbb
or
xchg
and
retf
ret
pop
movs
fidiv
test
dec
xchg
inc
cmp
and
lods
pop
in
and
int3
xlat
push
xchg
shl
mov
or
cmps
pop
retf
fldenv
imul
in
pop
sub
jnp
dec
aam
or
xor
iret
repz
and
or
adc
mov
pop
ficom
cmp
dec
dec
inc
std
(bad)
jecxz
ja
xchg
jo
add
pop
int
pop
in
iret
aam
outs
hlt
inc
cmp
push
mov
push
dec
inc
xor
retf
and
adc
mov
add
push
sar
push
out
cmp
in
aad
inc
add
mov
test
mov
fcmovb
mov
or
mov
ret
cmp
inc
test
or
stc
cmp
call
ret
push
js
xchg
mov
adc
retf
int3
pop
or
push
push
xchg
sub
enter
dec
sbb
out
sub
sub
shl
inc
pop
jmp
mov
dec
int3
adc
jge
jns
in
push
xchg
jecxz
pop
mov
mov
adc
not
sbb
push
mov
jge
add
in
repnz
lds
(bad)
ins
call
sbb
jo
jo
into
xor
push
cmp
stc
mov
jl
les
aaa
mov
sub
xchg
std
xchg
stos
pop
pusha
sbb
xchg
xor
aad
inc
and
sub
adc
jp
outs
es
sbb
add
out
loop
lahf
cmp
pavgb
mov
jmp
test
test
mov
test
add
scas
sbb
mov
push
sbb
jo
out
(bad)
ror
ficom
add
jmp
mov
inc
neg
and
jp
sahf
push
mov
or
push
into
inc
xchg
mov
and
mov
sahf
into
dec
mov
pop
inc
fnstenv
push
and
xor
mov
in
les
jne
int3
icebp
scas
cmp
(bad)
icebp
mov
fadd
xchg
enter
mov
imul
cmp
cmp
pop
adc
dec
adc
xchg
inc
cmp
add
(bad)
enter
fdivr
test
lahf
and
mov
push
scas
mov
push
cld
add
call
(bad)
in
xor
popa
in
sahf
(bad)
or
sub
sub
mov
outs
les
popa
sbb
cmp
and
xor
push
jge
add
lock
jp
push
push
lods
and
sbb
(bad)
sbb
sub
or
aam
pop
xor
not
jecxz
xlat
aas
mov
clc
sar
(bad)
mov
push
enter
xor
adc
call
out
cmp
scas
xchg
fadd
mov
xchg
cld
test
jmp
add
xlat
push
adc
push
imul
and
xchg
gs
and
push
jns
stos
xchg
mov
add
out
jno
inc
(bad)
jle
fcomp
xchg
retf
sbb
pop
xor
adc
inc
outs
mov
mov
lods
fwait
jg
lods
jg
mov
popa
sbb
sti
daa
jmp
add
jmp
sbb
test
cmp
mov
xchg
mov
jecxz
inc
or
pop
(bad)
stos
mov
sbb
cdq
add
jns
mov
mov
sub
pop
xchg
inc
or
and
mov
loop
cmp
aad
cs
cmp
sub
lock
or
aam
test
ja
add
ds
sub
mov
mov
or
xor
jmp
rol
ss
inc
and
icebp
test
xchg
inc
add
leave
pop
and
xchg
call
mov
int3
or
(bad)
int3
repz
fs
dec
fidivr
hlt
xor
out
mov
jecxz
ret
pop
xor
sbb
fcmovnu
add
cs
imul
fucomp
jbe
jae
push
(bad)
sbb
outs
jp
jbe
mov
popf
lahf
ret
cmp
bound
mov
jg
jnp
xchg
mov
add
aaa
rcr
fbstp
mov
fwait
cmp
cwde
lods
inc
lods
iret
xchg
add
out
arpl
pop
mov
test
lea
jae
and
cmps
or
xor
not
aad
mov
xchg
adc
pop
clc
(bad)
ins
mov
addr16
stos
int3
cmp
int
push
shr
pushf
dec
push
js
push
outs
and
xchg
sub
mov
cmps
xor
out
mov
out
shl
jno
cwde
push
jl
dec
xchg
or
call
mov
push
mov
aas
aaa
fistp
imul
push
sti
inc
fsub
daa
or
add
iret
mov
into
sbb
xor
ja
pop
out
push
fwait
dec
cs
mov
stos
f2xm1
jmp
adc
movs
ds
sub
aas
jnp
ins
adc
xchg
dec
pop
pop
mov
test
pop
(bad)
mov
imul
xor
ret
out
lock
pusha
lds
es
(bad)
cmp
mov
fstp
(bad)
stc
dec
outs
pop
mov
cmp
mov
neg
dec
dec
xchg
add
xor
loop
push
pop
pop
lods
mov
sub
jbe
sub
inc
out
xor
in
(bad)
push
inc
jo
cmp
adc
or
add
xchg
les
dec
mov
call
cmp
in
pop
jo
mov
in
sbb
mov
cmp
dec
inc
sbb
gs
les
ror
fmul
push
lods
fnsave
add
jmp
mov
ret
fucom
push
test
jno
pusha
in
mov
push
add
add
enter
xlat
sbb
mov
icebp
fistp
mov
out
(bad)
in
lds
pop
sub
shr
pop
adc
pop
jp
lods
ret
mov
mov
mov
jns
xchg
call
cs
aaa
imul
dec
fs
pop
lods
xchg
or
pop
mov
arpl
fwait
ror
popf
mov
cs
mov
nop
pop
jecxz
xchg
ds
stc
mov
mov
outs
xor
inc
dec
pop
je
push
cdq
dec
or
inc
pushf
(bad)
test
lea
shl
push
and
jl
push
mov
mov
or
mov
(bad)
out
adc
jmp
jae
mov
ror
jae
cmp
inc
sahf
sub
cmp
jae
sbb
dec
inc
jmp
pop
movs
adc
and
pusha
loope
sbb
jmp
dec
sbb
popa
idiv
ret
mov
fdiv
fnsave
xchg
jl
or
push
test
lock
mov
pop
and
outs
mov
div
mov
xchg
xor
push
out
push
or
jmp
xchg
push
add
pop
neg
aaa
pcmpeqd
js
clc
jb
mov
aam
fs
sbb
mov
pop
in
std
movs
xor
xchg
push
jmp
nop
icebp
test
sub
scas
inc
sbb
pop
ret
leave
jne
mov
push
jg
xor
mov
xor
fistp
mov
add
pop
inc
cmps
inc
dec
jne
ror
mov
jbe
sti
xor
sahf
push
cdq
pop
aad
inc
(bad)
cmp
mov
mov
jb
retf
sbb
cs
adc
xor
cmps
rol
jmp
ja
out
out
repz
into
jmp
pop
mov
push
pop
inc
je
fwait
mov
and
cs
jmp
sub
mov
loope
xor
imul
stc
aad
and
ret
add
xchg
mov
popf
or
mov
adc
sar
xor
cwde
jg
mov
push
pushf
cmp
test
call
mov
mov
pop
xchg
dec
mov
lods
nop
retf
adc
das
stos
and
sub
pusha
and
pop
inc
cmp
in
stos
neg
xor
test
sub
jns
fbld
sub
es
xor
neg
or
dec
aam
lahf
test
jmp
rcl
test
and
dec
iret
pop
sbb
daa
aam
or
push
ret
into
shl
fldcw
add
jecxz
add
mov
enter
call
adc
lea
mov
je
out
enter
push
or
icebp
movs
xchg
sbb
loop
sub
retf
and
(bad)
jbe
cmps
lds
mov
adc
cmp
xchg
test
cmp
and
jae
adc
dec
mov
pushf
mov
push
aas
call
mov
sar
retf
jno
mov
into
sub
ins
fs
add
aas
pop
mov
aas
jne
pop
int3
ficom
fbstp
das
dec
(bad)
ror
(bad)
jle
jbe
adc
test
add
fistp
call
and
jmp
sbb
fadd
popw
jecxz
shl
xchg
out
pop
xor
cld
aaa
outs
push
ret
mov
xchg
rcl
sbb
push
cmc
mov
xor
mov
cli
je
and
jne
jle
aad
test
push
scas
in
xor
imul
mov
dec
movs
cmps
xor
add
dec
mov
rcl
loopne
mov
mov
jmp
(bad)
xchg
inc
or
enter
mov
inc
mov
retf
inc
mov
out
std
inc
add
xor
xchg
jecxz
rcl
ins
in
xchg
std
jecxz
nop
hlt
sbb
cmc
xor
je
and
sub
in
stc
xlat
mov
jno
add
or
adc
pop
sahf
sub
or
scas
cmp
pop
icebp
loope
mov
xchg
sar
popa
pop
in
dec
add
mov
shl
lds
inc
ins
jp
data16
dec
jno
shl
lahf
and
aad
(bad)
adc
push
aas
mov
retf
pusha
inc
mov
pop
arpl
ss
jp
and
xor
outs
fistp
sub
es
scas
fbstp
arpl
xor
xor
adc
(bad)
(bad)
xchg
adc
mov
inc
xchg
(bad)
or
outs
enter
xchg
rol
retf
lods
les
and
loope
cmps
lahf
(bad)
sub
mov
xchg
mov
jo
ret
cld
pop
push
in
push
push
cld
jbe
jmp
out
fistp
pusha
rol
adc
jmp
xor
cmp
and
shr
lods
loopne
push
xor
or
push
in
movs
pop
cwde
dec
xchg
(bad)
icebp
rcl
xor
xor
xchg
mov
daa
outs
add
inc
dec
lods
sub
int
lock
clc
pop
mov
in
sub
pop
repnz
jo
addr16
dec
das
pop
jge
neg
dec
push
(bad)
(bad)
jg
cmps
adc
jl
xor
popf
sub
nop
sbb
push
(bad)
lahf
jae
dec
inc
dec
sar
outs
add
outs
adc
fiadd
push
std
inc
xchg
cmp
stos
(bad)
es
and
sbb
leave
mov
jl
rol
fnsave
imul
cwde
aam
xchg
or
call
mov
ss
sbb
cmc
sbb
cld
cmp
cmp
stc
mov
pop
mov
in
(bad)
adc
(bad)
mov
loop
pop
pusha
cs
pop
inc
bound
xchg
sbb
lea
xchg
push
jnp
shr
jecxz
add
push
sbb
mov
leave
cmp
int
mov
jno
test
pop
xchg
scas
mov
jo
dec
sub
ins
shr
inc
stos
sahf
scas
sbb
xchg
jb
mov
sar
push
imul
mov
inc
cmp
xor
nop
push
cmps
jno
call
jge
xchg
mov
inc
pop
push
sbb
idiv
push
jo
(bad)
and
call
mov
cmp
adc
scas
pop
cmp
std
scas
mov
mov
lock
movs
adc
ret
mov
add
mov
or
pop
icebp
dec
adc
and
cwde
mov
sti
jmp
sub
and
push
mov
fmul
scas
retw
mov
and
shl
xlat
dec
fsub
jo
(bad)
and
cmp
xchg
pop
test
cwde
cmc
push
ds
popf
imul
arpl
sub
cmp
jl
push
pop
ds
lea
and
dec
rcr
aad
mov
shr
inc
lea
rcl
fs
mov
xchg
pop
sub
cld
push
in
jle
push
xchg
pop
push
pop
test
mov
mov
out
out
xchg
mov
push
leave
and
cli
(bad)
scas
mov
sub
mov
sbb
(bad)
fwait
sub
push
jecxz
sbb
int3
cmp
(bad)
mov
mov
mov
push
pop
scas
cmp
in
push
pushf
xchg
scas
dec
push
xchg
adc
lds
jae
repz
mov
xor
mov
pop
jae
push
xlat
dec
pop
xchg
dec
fistp
pop
ja
scas
jmp
outs
arpl
push
xchg
jbe
mov
sbb
not
retf
or
cwde
lock
sbb
cmc
ja
lds
(bad)
sub
inc
arpl
sbb
into
je
ds
dec
jmp
es
pop
outs
push
inc
pop
loopne
out
aas
jae
adc
push
jbe
mov
mov
mov
cmp
stos
push
in
push
push
xor
or
add
(bad)
push
mov
iret
loop
test
fisttp
in
je
aaa
add
dec
xor
sti
pop
(bad)
jmp
xor
or
inc
leave
outs
pop
or
add
mov
dec
cwde
pushf
fdivr
and
mov
(bad)
sub
movs
sahf
nop
push
scas
frstor
jge
fld
sub
cdq
lods
and
in
mov
fwait
or
adc
jb
out
inc
push
xor
inc
cmp
das
mov
adc
inc
cmps
sub
xor
arpl
jne
xchg
lahf
adc
jbe
xchg
sub
sbb
hlt
push
imul
rcl
lock
adc
pop
lds
xlat
push
in
stc
dec
push
add
ss
clc
pop
icebp
mov
or
and
fisubr
popf
call
in
jno
fldenv
popa
push
push
xor
mov
jno
cli
push
push
sbb
inc
jae
ffreep
add
dec
ss
ins
repnz
or
addr16
add
movs
xor
and
fcom
adc
xor
mov
daa
jae
push
fnstcw
jl
imul
xchg
sbb
bound
ss
xchg
stc
mov
fstp
fldcw
jb
and
aam
imul
adc
xor
jo
push
push
xor
push
xchg
push
xchg
mov
dec
sub
dec
aad
fcom
inc
lds
adc
sbb
imul
lds
or
pop
sbb
add
ss
jle
ret
xor
mov
jge
(bad)
mov
test
(bad)
mov
push
mov
movs
ss
jne
sbb
retf
mov
sbb
rol
mov
sbb
inc
xchg
fwait
sar
repz
mov
mov
fucomp
imul
stos
ret
daa
add
push
pop
pop
or
sar
and
outs
fucomp
push
add
iret
cwde
in
pop
pop
repnz
xchg
mov
jl
push
movs
cmp
cmp
mov
cmp
cmp
or
cmp
push
test
push
add
mov
inc
mov
mov
mov
fistp
repnz
mov
fdivp
nop
iret
test
ds
mov
fstp
xor
xchg
jp
jns
xor
mov
jns
daa
shl
clc
pop
adc
xchg
cmp
push
or
xchg
(bad)
nop
mov
xchg
test
and
scas
mul
ds
mov
sbb
adc
outs
mov
aam
gs
inc
(bad)
repnz
cld
stos
dec
sub
stc
mov
call
add
add
mov
push
cmp
sub
adc
(bad)
aam
jle
mov
iret
pop
xchg
xchg
sahf
clc
js
test
outs
retf
push
pop
dec
or
retf
push
fldcw
sub
cmp
xor
sbb
es
ins
test
in
adc
push
popa
(bad)
movs
aas
sub
jg
sub
dec
in
add
(bad)
(bad)
fadd
retf
inc
inc
leave
(bad)
out
push
enter
push
sub
popa
push
cwde
inc
mov
pop
mov
into
neg
inc
xchg
xchg
mov
jae
bound
cmp
out
sub
gs
ret
arpl
sub
inc
jb
loope
xchg
jmp
dec
popf
xchg
cwde
es
mov
and
dec
pop
call
mov
stos
fild
addr16
lahf
add
xchg
fcom
call
add
xchg
int3
gs
mov
rol
fld
leave
(bad)
adc
aad
ret
retf
mov
mov
lea
hlt
aam
test
je
dec
(bad)
fisttp
pusha
retf
pop
cmp
test
fdivr
lods
outs
jb
xor
repz
sahf
dec
mov
mov
inc
and
rol
mov
xchg
or
add
ret
pop
sbb
xchg
xchg
xor
sbb
dec
fstp
mov
xchg
ret
loopne
int3
or
int3
test
js
repz
inc
push
in
lds
mov
dec
aad
sahf
loop
inc
sub
and
sbb
popa
dec
jg
dec
test
test
dec
mov
and
leave
push
out
inc
in
pop
rcr
(bad)
sub
sahf
cmps
lds
cli
add
hlt
imul
aad
and
repnz
and
hlt
fld
retf
adc
mov
int
fidivr
jno
mov
and
cmp
push
push
sub
push
mov
sub
add
xor
push
pop
jmp
jge
retf
sbb
add
data16
mov
aam
pop
stc
pusha
shr
bound
mov
lds
movs
and
dec
mov
outs
pop
out
adc
xchg
mov
dec
xor
out
pop
jnp
btc
dec
daa
xor
imul
addr16
jae
sub
pop
out
fdiv
xor
xor
jle
sahf
iretw
js
pop
cmp
inc
into
repz
jge
push
mov
dec
(bad)
lods
or
jecxz
loopne
push
push
or
cdq
or
and
or
test
call
data16
xchg
pop
out
mov
mov
dec
push
jne
ds
mov
inc
int
ja
js
cmp
cmp
add
daa
je
jmp
mov
cmp
movs
dec
push
or
sbb
outs
inc
mov
pop
jg
push
jne
cmps
adc
retf
push
ret
test
dec
sbb
rol
test
mov
dec
fmul
daa
jnp
and
fdiv
gs
movs
aad
sub
sti
imul
sbb
mov
nop
ja
mov
xchg
shr
pop
imul
jno
jo
outs
jge
(bad)
into
pop
loop
xlat
or
pop
dec
add
mov
sub
mov
mov
into
jb
push
sbb
jmp
retf
je
mov
dec
fs
dec
rcl
inc
jl
daa
mov
outs
jmp
xor
cmps
iret
push
cmp
test
pop
add
push
lods
dec
add
mov
inc
imul
jnp
lahf
cmp
mov
jge
pop
xchg
scas
xor
xor
jo
pusha
or
adc
push
scas
sbb
popf
(bad)
cmc
jl
enter
rcr
xchg
ss
xor
add
mov
adc
and
cli
ss
aad
cmp
cld
fldln2
xor
or
mov
enter
into
xchg
sbb
sbb
icebp
xor
jmp
js
pushf
addr16
xor
or
mov
stc
adc
add
inc
or
inc
xchg
je
or
arpl
dec
mov
mov
in
ss
retf
mov
cwde
bound
jne
xchg
xlat
push
movs
cmps
fidiv
mov
test
xchg
ins
sahf
mov
push
out
xor
mov
ret
lea
inc
test
sbb
adc
movs
rcr
xor
add
je
xor
xor
ds
xchg
scas
in
fimul
(bad)
icebp
sub
mov
inc
xchg
pop
sbb
or
pop
or
je
jle
dec
adc
cld
pop
jno
xor
cmp
add
add
push
pop
and
lahf
and
mov
cmp
out
scas
pop
in
gs
(bad)
xlat
outs
push
mov
outs
mov
push
sbb
sti
imul
(bad)
pop
pop
jae
dec
loop
or
jae
add
jb
inc
(bad)
and
xor
test
in
xchg
jle
test
arpl
dec
mov
add
sub
jmp
ds
popf
dec
and
mov
retf
in
dec
ficomp
cmp
int
scas
dec
and
push
aaa
dec
outs
std
imul
sub
sbb
hlt
(bad)
jmp
add
xchg
and
xor
sbb
mov
sbb
mov
fist
push
dec
dec
mov
cmc
and
imul
pop
ret
out
inc
lock
push
sub
jo
fst
rcl
lds
inc
sti
push
lods
xchg
xor
out
fwait
mov
addr16
popf
push
loopne
sub
in
hlt
mov
cmps
movs
adc
arpl
push
hlt
outs
js
mov
cmp
adc
jnp
sbb
dec
pop
ins
repnz
jmp
pop
pop
int3
and
call
push
jge
addr16
push
adc
push
nop
adc
push
nop
xor
xchg
push
xor
mov
xor
mov
aam
inc
scas
dec
cmps
ror
pop
pop
adc
fisubr
shl
inc
gs
jmp
mov
mov
popa
xlat
into
cld
add
repz
int
xchg
cmp
xchg
jne
icebp
xor
inc
ja
(bad)
in
shr
jecxz
out
jmp
and
in
ja
add
in
adc
sbb
loop
fdiv
enter
pusha
nop
repz
iret
sti
fld
test
dec
mov
or
lahf
ret
cs
leave
stc
pxor
shr
sub
push
repnz
push
add
sbb
addr16
push
shl
fdivr
xor
mov
xor
mov
(bad)
jg
es
mov
inc
shr
ret
mov
inc
call
pop
pushf
cmps
adc
push
aaa
inc
repz
push
daa
mov
lods
dec
jle
icebp
mov
mov
adc
les
movs
leave
xchg
push
cmp
mov
hlt
mov
retf
sbb
repz
xchg
push
arpl
clc
ja
jle
repnz
hlt
mov
fs
sbb
jb
out
fidiv
mov
fsub
in
and
ss
push
add
xchg
in
test
mov
in
jle
in
push
rol
pop
daa
sbb
sub
cmp
mov
xor
and
into
cmp
(bad)
(bad)
sub
popf
aaa
idiv
lahf
sbb
call
dec
aaa
and
sti
pop
adc
sahf
fisub
ficomp
pusha
add
xor
mov
cmp
pop
je
in
test
scas
and
push
inc
clc
mov
push
out
dec
and
scas
movs
into
and
and
out
fwait
imul
cmp
add
and
pop
pop
mov
inc
or
cmp
inc
push
shr
or
jecxz
push
mov
or
and
shl
sahf
(bad)
mov
clc
sub
or
aas
xor
(bad)
mov
pop
cs
cmps
fstp
fabs
hlt
jmp
shl
jle
jge
mov
jno
dec
or
push
mov
sbb
cmp
cdq
fs
mov
pop
(bad)
xor
cwde
and
mov
rcr
sbb
dec
aaa
loope
arpl
pop
ds
or
jecxz
and
cs
jo
imul
or
pushf
call
mov
dec
jle
inc
jbe
loopne
int
fmul
add
add
xchg
popa
adc
push
or
pop
(bad)
test
sbb
sbb
xor
(bad)
pop
mov
outs
gs
ficomp
pop
jl
repnz
jmp
or
repz
shl
fidivr
xchg
js
ret
add
xchg
out
cmp
mov
mov
(bad)
aad
pop
jns
xchg
call
jmp
ror
cmps
imul
xchg
into
dec
xchg
lds
and
bound
cmp
or
pop
push
pop
add
imul
fcom
das
sub
pop
cmp
dec
jae
pop
mov
movs
and
jecxz
xchg
mov
mov
repnz
enter
ins
int3
nop
outs
add
pop
lea
bound
icebp
sub
sub
and
dec
cwde
lock
out
cs
add
jno
ins
aaa
add
cld
or
jmp
jno
mov
cmp
push
adc
jecxz
aad
xchg
pop
scas
mov
dec
fst
pop
sbb
jnp
imul
or
enter
xor
add
pop
or
jmp
and
arpl
push
xor
inc
jle
sub
fisttp
push
data16
cli
(bad)
cmc
push
call
sbb
ret
hlt
cmp
dec
inc
(bad)
out
pop
mov
dec
adc
dec
pop
or
xchg
mov
push
mov
push
std
adc
ror
add
jns
mov
fbld
cmc
pop
push
push
xchg
xlat
cmp
aas
ins
cmp
push
xor
(bad)
call
or
inc
xor
xor
das
jecxz
mov
stos
imul
int3
mov
shl
jmp
mov
aad
outs
repnz
retf
dec
test
inc
dec
mov
test
pop
jno
sbb
and
add
sub
push
test
xor
fst
dec
dec
ret
jp
xor
mov
jns
mov
and
pop
xchg
inc
outs
mov
add
loop
sbb
ret
lahf
movs
xor
xor
(bad)
cmp
inc
push
jmp
sbb
cmp
push
push
mov
add
ins
mov
js
sbb
sub
mov
sub
ins
hlt
fadd
data16
pop
dec
js
mov
mov
ror
daa
imul
test
add
cmps
inc
cmp
mov
push
mov
adc
add
pop
out
(bad)
dec
pop
lock
js
lahf
leave
cmp
jbe
cmp
lods
ffreep
cwde
mov
mov
mov
test
cmp
mov
fs
leave
add
in
or
or
xchg
lahf
loop
dec
push
inc
cmc
inc
pop
add
icebp
ins
ins
or
dec
ret
sti
mov
imul
dec
test
xor
dec
or
mov
push
pop
jecxz
sub
dec
inc
aam
(bad)
out
inc
ret
leave
pusha
push
pop
dec
and
cmps
pusha
fs
ror
imul
inc
aas
xchg
or
xor
repnz
add
or
mov
xchg
or
inc
jg
stos
mov
push
addr16
and
inc
jae
fidivr
std
scas
aam
xor
(bad)
fs
push
call
pop
cmp
nop
idiv
jo
dec
loope
test
sbb
xchg
fidiv
stc
pop
out
fdiv
sbb
and
pop
sub
or
push
inc
dec
cs
dec
call
rcl
pop
daa
sub
inc
mov
ror
and
sub
das
sbb
rcr
or
fidivr
and
mov
(bad)
push
cmp
mov
sub
adc
pushf
mov
cmp
or
push
sub
xchg
inc
aaa
repnz
pop
jg
jge
dec
data16
push
xchg
test
je
jle
mov
and
jl
in
aas
or
mov
aas
push
push
xchg
loope
call
hlt
dec
daa
pop
pop
cmp
das
pop
adc
inc
pop
aas
mov
call
leave
xchg
xor
fldenv
dec
ffree
lock
lds
push
fsubr
jno
test
fdiv
in
push
outs
mov
adc
fcom
out
imul
push
mov
jle
movs
in
fdiv
sub
push
lods
mov
popa
mul
(bad)
jp
in
inc
or
shl
or
cmp
loope
xchg
out
movs
sar
and
and
adc
in
xlat
jecxz
jecxz
cmps
or
cmp
(bad)
xchg
mov
or
jnp
xor
jecxz
out
aas
jmp
adc
shr
mov
and
lahf
loop
sub
sbb
out
(bad)
bound
daa
add
dec
test
cmp
jmp
ret
test
pop
(bad)
adc
(bad)
in
push
xchg
inc
sahf
(bad)
pop
mov
add
xor
inc
add
dec
popa
lods
dec
aas
adc
(bad)
lahf
(bad)
pop
shr
shl
retf
movs
fmul
or
sbb
inc
mov
ja
js
and
out
ret
rcl
stos
fnstsw
jge
sbb
sub
mov
scas
mov
adc
pusha
xchg
mov
std
push
cli
and
iret
dec
ja
xor
jae
rcl
xor
jb
retf
xor
movs
repz
jp
dec
cmp
add
mov
es
ins
xchg
xor
lahf
mov
xchg
xlat
or
cmps
xchg
retf
lock
xchg
push
cwde
sbb
mov
(bad)
xchg
lods
mov
sbb
fstp
push
(bad)
stc
scas
lods
imul
mov
mov
adc
mov
bnd
sub
mov
pop
mov
xchg
outs
add
adc
stos
int3
dec
repz
aas
in
sbb
popf
cmc
push
sbb
jmp
add
fisub
ja
xlat
fistp
mov
jno
sub
int3
add
pop
pop
jns
mov
adc
retf
push
jmp
mov
jae
xchg
jbe
sub
pop
xchg
mov
jmp
pop
dec
ror
sbb
lods
dec
ds
loop
(bad)
mov
xchg
ss
inc
mul
out
xor
jecxz
mov
test
dec
adc
clc
jae
cmp
idiv
iret
call
lea
aad
psrlq
int3
test
(bad)
pop
mov
shl
sbb
aam
xchg
leave
adc
cmp
test
leave
pushf
jae
dec
adc
in
(bad)
popa
add
in
pusha
test
les
push
mov
imul
adc
mov
dec
add
in
(bad)
or
scas
mov
dec
push
pop
mov
inc
sub
inc
cmps
mov
sbb
jno
sub
pop
mov
ins
cwde
jnp
inc
fst
jb
jno
jne
push
stos
arpl
sbb
cmp
jp
pop
sub
popa
ins
out
scas
pop
or
fsubr
(bad)
or
call
mov
inc
(bad)
adc
dec
cmp
pop
ja
lods
or
push
scas
aam
ret
mov
bound
jle
pop
fcom
add
and
inc
out
ins
jp
jl
pop
push
leave
jmp
xchg
mov
neg
sub
pushf
ja
pop
adc
dec
or
or
stos
mov
in
js
cmps
cmp
cmp
add
mov
rcl
xor
arpl
movs
fisub
outs
in
add
shl
add
and
inc
ret
cmp
jmp
xchg
inc
mov
cmp
cli
cmp
push
xor
sbb
repz
push
pop
pop
cmp
pop
pop
idiv
inc
dec
dec
fidivr
lds
(bad)
xor
(bad)
in
add
mov
retf
push
cmp
dec
mov
jl
leave
addr16
call
adc
mov
lock
cdq
scas
inc
or
(bad)
scas
out
add
fld
lea
cmp
pop
ret
ss
dec
push
in
adc
or
retf
popa
jge
out
or
in
or
(bad)
mov
cmps
(bad)
aam
add
and
ror
aas
add
aad
ja
mov
and
cmps
jmp
jbe
loop
jb
sub
pop
scas
mov
add
ss
xlat
test
mov
mov
cmp
icebp
inc
imul
mov
or
ficom
xchg
test
dec
out
mov
inc
aas
push
ss
aad
pop
fiadd
scas
popa
pop
imul
test
outs
sub
mov
and
fbld
mov
jge
mov
icebp
push
popf
xchg
imul
xchg
daa
jmp
or
(bad)
out
mov
jo
es
mov
stos
sbb
(bad)
(bad)
div
dec
dec
inc
enter
cmp
test
ss
loop
rcr
(bad)
cmp
rol
xchg
mov
std
inc
xchg
das
adc
pop
or
mov
xchg
cmp
xchg
mov
jg
ins
in
mov
cmps
int3
mov
bound
sub
jo
or
ret
mov
popf
mov
int
push
int3
nop
sub
dec
loop
mov
add
push
sbb
mov
cld
or
or
and
push
not
cmp
addr16
data16
inc
movs
shl
jg
push
mov
or
mov
xchg
dec
rcr
bound
bound
lea
xlat
and
fdiv
mov
xlat
jns
mov
xchg
sbb
shl
pop
movs
mov
hlt
mov
loop
and
movs
jmp
ret
dec
sbb
jmp
jge
pop
psubsw
scas
enter
add
pusha
jnp
ins
jo
push
mov
cmovge
mov
xor
fild
(bad)
lods
into
add
jp
cmp
leave
mov
dec
aaa
daa
xor
xor
adc
fs
out
push
push
(bad)
cli
sbb
add
sub
push
pushf
pop
sub
jmp
outs
in
lahf
fisttp
sbb
jg
ret
(bad)
xchg
add
xchg
xor
not
cmps
sub
and
sub
popa
ds
stc
inc
retf
loope
repz
popa
jecxz
dec
pop
dec
and
popa
daa
jnp
mov
jmp
test
push
sub
jle
and
fisubr
lock
int3
push
pop
push
into
inc
aaa
pop
pop
in
inc
or
(bad)
mov
pop
lahf
xchg
jmp
cmp
loopne
in
fistp
jmp
lods
jae
lock
cdq
fcom
xchg
adc
repnz
mov
test
shr
push
dec
jns
xor
adc
pusha
sahf
or
and
push
(bad)
cwde
adc
fisub
cld
add
sub
xchg
dec
ins
in
pop
rol
cmp
ror
mov
cmp
imul
or
js
sub
iret
pop
push
pop
cmp
dec
xor
ins
jecxz
ins
into
sub
inc
sub
lahf
dec
repz
gs
xchg
adc
stos
and
inc
push
loope
call
out
xchg
mov
adc
and
nop
in
push
cdq
pop
addr16
inc
fldl2e
add
jno
ss
adc
and
(bad)
mov
and
dec
jmp
jl
dec
pop
mov
jnp
push
imul
mov
xchg
ficomp
(bad)
jge
hlt
jnp
out
add
xor
cmps
push
sub
test
arpl
pop
jge
movs
add
in
stc
cmps
fwait
mov
jno
cmp
mov
or
xor
ins
jae
test
cmp
shl
jnp
jns
or
cmp
std
jnp
push
cmps
fidiv
mov
lds
scas
and
mov
hlt
int3
clc
push
inc
icebp
cdq
sbb
dec
(bad)
addr16
jle
adc
dec
mov
pop
lds
imul
adc
or
fdivr
jge
mov
imul
movs
pop
fwait
xor
(bad)
sbb
pop
aad
mov
cmp
mov
mov
push
shl
ss
mov
call
dec
(bad)
aad
xchg
pcmpgtw
mov
out
(bad)
shr
lock
fisubr
add
cmp
mov
mov
test
adc
jp
inc
inc
ds
pop
test
add
xor
push
jmp
dec
lods
fisttp
cmps
sbb
xor
outs
mov
pop
push
inc
jmp
movs
loop
jo
sub
fiadd
ror
jne
mov
push
jae
mov
jmp
repnz
or
leave
out
dec
lock
xchg
ss
adc
sub
bound
add
mov
jns
push
or
add
mov
rol
shr
aam
fild
sub
xchg
and
fisttp
pop
and
pop
mov
stc
push
push
fwait
sbb
sbb
retf
lods
aad
mov
push
aam
push
xchg
mov
sbb
sub
mov
sbb
lock
sahf
mov
jl
inc
rol
pushf
mov
lock
int
add
loopne
aaa
and
push
aaa
lods
add
xchg
js
inc
cmp
adc
clc
retf
xor
arpl
mov
sahf
mov
outs
or
std
movs
adc
aam
ss
lock
inc
fld
cmp
sar
jg
aad
loopne
jmp
mov
dec
mov
rcl
add
push
mov
pop
hlt
cmps
in
mov
and
call
dec
sbb
shl
scas
adc
mov
push
aas
enter
fistp
lds
out
into
pop
jb
mov
rcl
rcr
add
into
ror
sti
dec
sbb
(bad)
(bad)
cmp
int3
dec
shl
fild
into
dec
jl
outs
mov
aas
data16
pushf
mov
fcom
pop
dec
xchg
adc
lods
ins
inc
aad
xor
pop
enter
iret
aaa
push
xchg
mov
dec
xchg
cmc
ror
cmps
adc
or
inc
ss
(bad)
movs
push
sti
lock
jmp
hlt
stos
out
(bad)
mov
fucom
jl
cld
adc
mov
sbb
mov
jnp
dec
out
push
adc
je
scas
xchg
dec
jmp
(bad)
in
and
sub
retf
pusha
push
mov
cld
sahf
xor
call
(bad)
xlat
jg
dec
adc
shr
(bad)
cmps
add
nop
imul
aad
jl
push
hlt
xor
fnstenv
sub
mov
push
push
retf
xor
cmp
addr16
sti
and
jecxz
les
aas
pop
add
fndisi(8087
rol
movs
jle
lea
outs
mov
stos
mov
jmp
mov
mov
xchg
test
jmp
mov
push
in
int3
(bad)
jl
cmps
pop
test
push
add
xor
pop
or
push
sahf
mov
pop
into
cmps
sbb
repnz
bound
aam
out
mov
pop
int
jle
pop
cmp
test
xor
push
dec
std
mov
jbe
xor
xchg
das
pop
mov
push
adc
mov
call
pop
inc
std
xor
mov
popa
mov
pusha
or
arpl
mov
rol
xchg
push
jnp
loopne
ss
push
popf
dec
idiv
inc
aas
inc
xor
xor
in
cmp
and
adc
push
mov
or
or
sub
arpl
xor
mov
fisub
fwait
movs
add
loop
retf
cwde
mov
inc
je
fstp
mov
cdq
dec
(bad)
add
imul
add
or
sbb
mov
int3
add
fwait
adc
aaa
mov
cmp
cmps
cmps
jns
fsub
add
jae
jmp
dec
retf
lods
mov
fild
sbb
pop
adc
sub
fisttp
daa
or
sbb
dec
xchg
xor
cmp
popf
(bad)
fistp
and
ins
lods
xchg
aad
jb
sbb
jg
fwait
push
clc
fwait
(bad)
retf
test
cmps
cmp
ror
push
cli
stos
sub
cmp
xchg
out
inc
dec
dec
cwde
loopne
sbb
pop
je
adc
push
bound
or
xchg
or
mov
clc
adc
jg
ret
retf
movs
dec
gs
fdivr
mov
lock
push
outs
stc
jnp
sbb
sbb
add
adc
cli
outs
push
xlat
jl
or
adc
xchg
pop
push
xchg
xchg
pop
inc
cmc
xchg
pop
push
in
loop
jnp
sub
aaa
(bad)
mov
add
test
lods
sub
dec
pusha
xlat
xchg
push
pushf
mov
outs
loope
sbb
es
add
clc
jne
jecxz
fmul
sahf
in
dec
lds
sub
(bad)
bound
retf
or
sbb
in
movs
adc
sbb
rol
retf
je
mov
xor
and
arpl
and
add
pushf
or
out
ror
clc
(bad)
adc
sbb
add
sbb
shl
push
add
div
lea
inc
pop
es
mov
push
jp
pop
dec
shl
mov
sbb
xchg
scas
call
push
add
ja
pop
push
(bad)
mov
(bad)
adc
mov
int3
fdiv
mov
test
mov
movs
dec
mov
lahf
cld
and
aam
pop
dec
mov
mov
fcom
push
mov
xor
mov
popf
ret
xchg
sub
jns
es
pop
test
add
and
cs
jl
gs
test
and
rcr
mov
jl
retf
jmp
cmp
lds
cmps
fdivr
das
cli
(bad)
push
popa
into
outs
pop
jae
add
fsub
xchg
inc
inc
sbb
and
mov
mov
sbb
in
cli
nop
dec
icebp
and
pop
mov
mov
mov
sbb
icebp
add
jb
repz
mov
push
sbb
movlps
mov
jmp
sub
cwde
es
or
ins
or
movs
stos
stos
enter
leave
and
shl
stos
repz
clc
movs
retf
adc
call
mov
dec
pop
mov
ret
cmp
fsubrp
push
pop
fsub
xchg
inc
add
jg
inc
xchg
gs
shl
lea
je
dec
cdq
inc
mov
cmp
int
lock
es
xor
mov
rcr
jmp
call
mov
jo
clc
push
jmp
jno
in
lods
outs
mov
mov
inc
cdq
cdq
or
push
shr
or
dec
mov
fidiv
hlt
sti
repnz
mov
ror
inc
xchg
mov
es
xor
outs
(bad)
enter
lahf
add
xchg
loopne
xchg
call
jns
add
bound
xor
jmp
iret
idiv
cmps
mov
push
sbb
add
sub
fld
xchg
je
retf
movs
mov
in
add
jl
cmp
push
pop
test
mov
stc
(bad)
sbb
mov
aas
sub
in
cmp
stc
mov
sbb
bound
mov
adc
out
cmp
clc
fbstp
ror
xor
cmp
add
sub
mov
es
stc
ret
mov
sub
xor
inc
xor
push
aad
mov
mov
(bad)
out
fwait
xor
push
jns
inc
bound
lahf
mov
ret
xchg
cwde
das
out
arpl
push
xchg
aas
sub
push
add
movs
ret
mov
(bad)
dec
test
xchg
out
adc
test
inc
xchg
or
(bad)
jecxz
push
rol
(bad)
jle
aaa
adc
clc
xchg
sbb
sbb
aad
inc
dec
iret
push
imul
out
sub
and
or
div
pop
mov
movs
or
and
cdq
adc
xchg
daa
(bad)
jns
cmps
lods
movs
fldcw
mov
test
fstp
cld
push
enter
add
fisttp
pop
xchg
inc
mov
imul
cmp
outs
mov
jo
loopne
mov
lods
out
jp
mov
mov
scas
fwait
push
xchg
mov
jo
outs
mov
ror
mov
out
nop
xchg
stc
jmp
push
shl
mov
fld
outs
sub
and
lods
and
mov
cs
loope
mov
push
jb
fnstsw
mov
pop
lahf
sub
nop
mov
pushf
mov
jo
inc
pop
fisttp
xor
aaa
sbb
push
popf
dec
(bad)
xchg
call
add
sbb
imul
pushf
dec
sbb
lock
adc
int3
icebp
lods
jnp
jne
fst
out
xor
mov
sbb
mov
sbb
in
cmp
aaa
pop
mov
mov
in
aad
fistp
pop
and
cwde
stc
xchg
cmp
(bad)
jg
out
shl
imul
sub
aas
(bad)
jmp
pop
js
add
int3
cs
call
or
jmp
dec
xchg
in
fidivr
push
mov
sbb
(bad)
clc
nop
div
pop
in
into
cmp
fsubr
int
fwait
test
sbb
in
adc
nop
lock
sub
ins
mov
inc
add
(bad)
sub
pop
je
jbe
in
pop
lods
xor
arpl
js
cmp
mov
test
add
mov
pop
pop
sbb
arpl
out
data16
jbe
ret
pushf
aam
add
xor
shl
(bad)
cli
ror
xchg
dec
mov
sub
mov
push
dec
xchg
dec
(bad)
iret
sti
mov
xchg
outs
into
bound
das
or
js
jle
push
mov
and
xor
mov
pop
aaa
nop
sbb
das
cmc
out
push
xchg
out
fidivr
sti
sbb
sub
lock
test
pushf
sub
aaa
loopne
cli
mov
mov
xchg
dec
std
mov
jmp
mov
xchg
nop
pop
jmp
loope
ja
push
xchg
ds
mov
sbb
fadd
mov
push
sub
mov
dec
rcl
xlat
bnd
sbb
sar
dec
(bad)
(bad)
aad
loope
not
sub
xchg
pop
xor
add
lods
push
ret
cdq
out
or
loope
inc
out
cmp
lods
push
int
add
ror
sbb
ins
mov
aaa
or
mov
rcr
test
sub
in
into
cmp
inc
mov
ins
ficom
jecxz
in
das
jnp
dec
xchg
(bad)
mov
pop
imul
mov
jo
push
test
xor
(bad)
mov
dec
gs
mov
test
push
fcmovnu
(bad)
out
cmp
call
pop
jbe
pop
rcr
pop
mov
push
xor
mov
fcom
lea
mov
inc
ins
shl
push
in
mov
mov
mov
jnp
cmps
sbb
ror
out
lahf
daa
call
rcr
(bad)
xchg
std
push
xchg
in
shr
pop
dec
cmp
and
mov
mov
cmps
inc
stc
je
inc
stos
mul
jmp
loop
inc
fwait
ds
movs
jae
xor
cdq
clc
mov
push
daa
inc
fsubp
(bad)
ins
jmp
push
out
pusha
xor
in
sar
in
and
sbb
pop
jbe
xor
mov
out
mov
enter
push
cmp
repnz
mov
out
push
push
dec
push
xchg
sbb
add
out
push
test
arpl
or
xchg
push
jmp
add
push
test
push
les
adc
paddq
cdq
push
ret
push
(bad)
fimul
cmc
iret
push
or
