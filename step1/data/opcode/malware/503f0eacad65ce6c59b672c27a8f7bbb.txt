mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
push
das
push
fcom
xor
(bad)
arpl
and
mov
retf
in
inc
push
call
push
fadd
inc
and
mov
jp
cmps
xchg
cli
out
cdq
cmc
cld
or
pop
sbb
repnz
(bad)
(bad)
push
(bad)
add
add
or
daa
inc
adc
(bad)
xchg
popa
sahf
(bad)
sbb
xchg
scas
jmp
jno
jecxz
xor
pop
ja
dec
sbb
aad
not
add
jge
jl
mov
lock
movs
or
pop
jmp
xchg
loop
fwait
retf
ret
pop
out
data16
mov
rcl
push
ins
jae
imul
(bad)
pop
scas
daa
pop
in
push
or
sbb
aam
arpl
xor
shl
stos
test
sub
cmc
jg
(bad)
and
sub
adc
ins
adc
jns
xor
add
enter
fst
ret
je
sub
adc
stos
sbb
ins
sbb
data16
lods
lds
and
sub
je
mov
sub
retf
xchg
loop
sbb
out
add
and
cwde
movs
in
shl
inc
cli
daa
add
fcomp
mov
leave
bound
sahf
pop
(bad)
push
xchg
push
or
sub
out
stos
dec
stos
loope
out
int
or
inc
mov
pop
pop
retf
mov
(bad)
aas
cmp
cld
mov
fdiv
push
les
mov
rcr
mov
and
(bad)
xor
call
dec
jle
aaa
jo
fsub
dec
fucom
or
in
cli
cmps
mov
lods
stc
cmps
inc
inc
xor
fiadd
rol
push
inc
repnz
mov
mov
int
out
or
sub
popa
aam
shr
lock
outs
call
outs
sub
js
jmp
mov
pop
repnz
data16
(bad)
jae
sub
and
data16
(bad)
cld
mov
jb
jbe
call
sub
inc
mov
or
mov
xor
adc
mov
hlt
and
neg
js
inc
lods
push
enter
mov
loope
xchg
pop
mov
dec
dec
and
mov
dec
repnz
cmps
mov
mov
std
cmc
imul
fsub
out
scas
jp
pusha
push
out
cmps
inc
fwait
dec
jg
popf
dec
lahf
lahf
dec
jae
ins
xchg
inc
jl
test
lods
ss
loope
push
pushf
lea
fwait
sbb
inc
aaa
pop
ds
jg
int3
jge
imul
popf
add
mov
xor
or
xchg
out
add
(bad)
jmp
stos
xchg
mov
jb
inc
sub
push
xchg
bound
fcom
cdq
shl
aam
cmps
inc
cmp
jo
icebp
inc
es
pop
ins
mov
pop
rcl
jns
add
pop
inc
pop
repnz
int
mov
mov
cwde
pop
repz
adc
mov
adc
es
outs
ret
addr16
and
sub
fstp
jns
fsubr
sbb
mov
movs
push
and
and
call
repnz
pusha
and
xor
cmp
sbb
imul
out
xor
nop
jmp
aad
mul
jg
add
mov
inc
xor
jmp
mov
fimul
test
movs
inc
(bad)
xor
inc
xchg
or
mov
xor
loope
sar
ss
mov
and
sar
rol
push
jl
das
mov
dec
sbb
subps
sbb
jno
mov
sub
inc
lods
fs
movs
hlt
fcom
mul
mov
shl
sub
test
popf
repnz
outs
mov
mov
xchg
popa
mov
adc
ja
lea
inc
ins
retf
adc
push
in
xor
pavgb
nop
fist
unpcklps
dec
ret
xor
popf
adc
leave
pop
cmp
mov
idiv
imul
das
inc
or
mov
or
(bad)
les
or
pop
push
call
xchg
stos
and
push
push
and
cmc
ret
jle
jb
add
popf
imul
and
(bad)
pop
fs
out
in
inc
mov
test
js
lods
jbe
fnstsw
inc
xchg
and
call
stos
out
sbb
pop
lods
sbb
aad
push
xchg
aaa
in
fsqrt
mov
int3
xor
pop
fdivrp
(bad)
xchg
mov
mov
jg
fwait
loop
or
mov
bound
jbe
push
pop
adc
pop
fdivr
mov
popf
sub
push
arpl
dec
movs
adc
dec
inc
sub
aaa
iret
outs
imul
add
aas
and
imul
daa
cmp
mov
xchg
cwde
cwde
je
inc
std
inc
test
jp
add
outs
sbb
or
inc
mov
add
test
sbb
leave
in
pop
adc
cmp
mov
sub
bound
icebp
mov
dec
jnp
or
aas
sbb
sti
and
gs
pop
fdiv
dec
or
stos
iret
out
push
jnp
mov
pop
pop
es
add
pop
sbb
xor
repz
popf
cld
push
ss
lea
stos
and
dec
mov
test
mov
jp
(bad)
loopne
ror
cmps
pop
add
dec
push
push
inc
mov
pop
mul
pushf
scas
lahf
pop
jnp
mov
xor
mov
or
mov
sbb
call
cdq
call
lahf
nop
add
lgs
gs
add
sub
iret
sbb
pop
fst
sar
adc
or
or
or
push
(bad)
jge
pop
cmp
stos
pop
out
xchg
xchg
stc
jno
cmp
mov
mov
mov
adc
jnp
sub
mov
sub
clc
fisubr
push
and
rcl
push
and
inc
and
and
push
arpl
lea
push
pop
cmps
jge
push
push
mov
ds
fs
xchg
shl
lock
mov
dec
hlt
into
in
lahf
sub
les
push
out
xor
cmps
dec
jns
retf
nop
push
je
adc
clc
xor
xchg
in
xchg
ja
and
pop
popf
cld
cmps
mov
nop
sbb
xchg
pop
in
test
(bad)
fisttp
mov
xchg
jmp
in
and
in
inc
mov
and
les
ins
movs
and
clc
pusha
ja
add
adc
jp
dec
cwde
add
fisttp
sub
repnz
ficomp
mov
adc
mov
inc
dec
pop
das
xchg
sbb
ret
jp
gs
fsub
or
ss
in
dec
jae
mov
mov
(bad)
sub
and
cmp
aad
js
les
jmp
ds
sub
outs
pop
pusha
cmp
push
imul
sti
xchg
sbb
mov
fdiv
sub
mov
pop
push
aaa
push
sbb
add
add
fsub
inc
inc
mov
xor
dec
sbb
popf
cld
rol
xor
pop
jno
test
sti
ja
mov
fisub
idiv
cld
push
or
scas
push
and
pop
cmp
mov
sub
sub
xlat
sbb
jns
inc
push
or
dec
adc
cmp
in
fsubr
and
test
jbe
outs
je
push
sbb
pop
sbb
aaa
int
ret
cmps
xor
jmp
loop
fidivr
xor
mov
xchg
pop
jo
cmp
sbb
jmp
inc
fld
cld
lods
jmp
mov
mov
mov
dec
mov
pop
scas
jmp
add
iret
sub
fsubr
jle
scas
inc
pusha
neg
out
ins
adc
xlat
dec
jmp
test
pop
lahf
pop
mov
and
xchg
dec
jbe
lds
ret
inc
je
cld
enter
loop
jnp
scas
jbe
mov
xor
aas
push
test
jle
retf
mov
pop
inc
inc
cwde
ret
sub
xchg
adc
xor
retf
mov
adc
push
jns
jmp
mov
into
mov
xor
ret
mov
sar
paddusw
sub
test
jl
mov
add
mov
stc
cmp
push
int3
fwait
or
inc
lar
test
inc
push
pushf
cmp
and
daa
fistp
retf
xchg
sub
adc
xor
mov
mov
or
jmp
cmp
iret
xor
jl
add
push
mov
stos
rcr
fadd
pop
sbb
fbstp
xchg
or
ret
jle
std
pushf
xor
mov
inc
out
dec
mov
lahf
iret
jb
rcr
call
aad
pop
dec
loop
or
xchg
inc
popa
das
adc
add
fmul
pop
loope
mov
test
pop
test
mov
sbb
mov
push
dec
movs
jb
cmp
mov
js
out
adc
pop
stos
jne
dec
js
popf
dec
bound
es
pushf
cmp
imul
iret
mov
inc
mov
aaa
das
lods
ret
pop
ret
stos
adc
icebp
movs
js
mov
(bad)
mov
scas
jmp
cmps
add
mov
ins
aaa
and
(bad)
call
or
pusha
(bad)
loopne
ins
adc
cmc
lea
inc
mov
push
test
cmps
in
sbb
out
sub
push
sub
adc
or
stos
or
jne
imul
dec
loopne
addr16
call
adc
xor
mov
fwait
and
jne
popf
(bad)
call
mov
addr16
sar
arpl
popf
xor
es
popa
dec
enter
dec
(bad)
retf
outs
push
sub
pop
adc
mov
mov
repz
test
and
lahf
mov
or
stos
adc
movs
je
mov
int3
fimul
(bad)
jae
shl
loopne
test
mov
cmc
mov
aas
adc
jmp
in
dec
xor
xlat
or
iret
jne
mov
mov
adc
xor
mov
mov
jne
cld
mov
pop
in
and
inc
cwde
add
movs
dec
push
in
push
mov
xchg
dec
or
movs
or
mov
test
(bad)
test
fst
xchg
jns
pushf
mov
sti
div
push
fwait
mov
or
sub
jecxz
fisttp
shr
inc
out
ss
rcr
jge
(bad)
cdq
je
(bad)
fnsave
add
mov
mov
rcl
(bad)
shl
xlat
imul
mov
or
fisub
sbb
sbb
mov
add
jle
pop
lds
fdivrp
loope
cli
pop
inc
sub
shl
frstpm(287
pusha
shl
out
add
dec
neg
mov
dec
pop
mov
xor
icebp
push
inc
sbb
dec
jp
mov
fs
mov
push
das
push
xchg
dec
mov
adc
scas
es
pop
cmps
popf
call
fisubr
mov
maxps
mov
jle
fcmovne
jl
push
call
out
sbb
clc
inc
dec
call
or
inc
cmp
pop
jns
pusha
and
xor
lods
call
aas
push
dec
xchg
in
or
mov
mov
fidiv
rcr
mov
inc
mov
lods
pop
hlt
movs
push
pop
push
movs
xchg
imul
(bad)
push
mov
xchg
pop
mov
xor
outs
icebp
pushf
fst
into
lahf
jle
in
push
retf
add
(bad)
lahf
rcr
adc
push
(bad)
adc
jne
sub
aad
(bad)
rcr
adc
adc
shl
mov
cmp
test
lods
out
sub
ficomp
lea
xor
fwait
arpl
repz
sub
pop
ja
dec
xor
mov
mov
xor
xlat
mov
sbb
and
mov
stos
jns
mov
lea
sbb
mov
adc
sub
xchg
mov
int
pop
pop
jmp
fnstenv
jae
xor
iret
jne
add
xchg
enter
mov
popa
adc
mov
add
pop
nop
stc
jl
clc
dec
pop
std
(bad)
out
stos
rcl
test
inc
out
jbe
aam
jae
mov
ins
sub
mov
adc
mov
aam
loope
adc
leave
jmp
adc
cdq
mov
imul
arpl
imul
dec
mov
loopne
cwde
fnstenvw
ror
icebp
fwait
lea
add
imul
mov
imul
cmp
int
in
xchg
neg
adc
xor
add
mov
xchg
pop
dec
ss
pop
xor
inc
hlt
jne
dec
or
mov
and
mov
shl
mov
mov
mov
mov
jae
cmp
leave
fstp
jno
sti
pop
fidivr
dec
test
call
loope
movs
xor
sar
xor
fiadd
retf
ret
adc
lods
adc
pop
push
sti
aad
and
cmp
outs
cmp
pop
cmp
inc
out
popa
sbb
mov
mov
mov
ss
(bad)
and
sub
sbb
mov
lods
js
fistp
or
dec
jl
fdiv
xchg
mov
inc
jp
ficom
mov
or
sub
sbb
sub
xlat
fsubr
out
repnz
loopne
test
sbb
push
sbb
jo
call
fmul
add
dec
ss
out
jmp
movs
pop
cdq
mov
sbb
test
aam
scas
aad
dec
sbb
cdq
inc
push
pop
imul
mov
mul
fidiv
jmp
sti
sub
lea
fnsave
shr
das
jno
and
mov
mov
cmc
ret
sahf
lea
outs
or
cmp
sbb
in
adc
and
fwait
aaa
cmps
pop
call
xchg
popf
inc
push
sub
push
aad
add
xchg
sub
inc
sub
pop
scas
mov
jns
shr
jg
popf
adc
outs
test
sti
dec
push
inc
fdiv
scas
std
pop
fcomp
xchg
popa
pop
sbb
out
arpl
scas
push
test
int3
and
popf
outs
adc
iret
push
in
outs
out
call
mov
pop
xlat
rol
jmp
and
xor
push
jae
les
xchg
dec
dec
push
jno
retf
daa
add
nop
inc
dec
(bad)
out
cmp
bound
loop
pop
mov
out
push
adc
es
(bad)
outs
mov
adc
sub
cmc
pop
fisub
pop
jge
pusha
repnz
cmps
adc
adc
mov
(bad)
aaa
mov
jnp
or
hlt
dec
je
adc
cmp
not
pop
test
add
cdq
enter
jbe
pop
add
iret
in
cmp
pop
in
mov
sub
push
jo
cmp
xchg
mov
xor
or
rcl
cmps
and
es
mov
movs
push
jl
pop
jnp
mov
mov
(bad)
out
sar
adc
dec
xchg
ss
mov
or
dec
nop
mov
pop
arpl
iret
jg
(bad)
hlt
(bad)
mov
xchg
mov
add
xor
out
and
add
cmp
sbb
test
xor
sahf
dec
je
(bad)
sbb
push
jmp
sub
inc
jnp
sahf
mov
add
jmp
movs
dec
and
cmp
mov
dec
repnz
pop
sbb
mov
xor
dec
in
adc
xor
je
push
mov
mov
mov
pop
xchg
jg
stos
cli
mov
add
inc
add
test
mov
test
dec
jbe
sbb
push
ret
jl
mov
and
neg
retf
cdq
das
in
and
(bad)
outs
sub
mov
dec
loopne
(bad)
repz
push
test
out
inc
mov
cmp
pop
sub
sbb
xchg
dec
int
(bad)
into
cmp
push
mov
dec
dec
fld
(bad)
or
leave
pop
mov
inc
dec
add
or
xchg
sbb
dec
push
dec
clc
pop
(bad)
ret
lods
call
xchg
jle
arpl
adc
shl
sbb
inc
jb
stc
aam
mov
push
sar
add
cmp
push
fistp
sahf
adc
adc
mov
pop
adc
pop
or
add
xchg
gs
movs
je
sub
mov
repz
aad
push
cmova
fwait
cmp
cmp
pop
pop
inc
imul
into
push
mov
inc
idiv
mov
shl
out
sbb
test
pop
(bad)
fs
aaa
shl
aam
(bad)
aaa
inc
fwait
dec
fdivr
sbb
dec
lock
stc
inc
dec
or
adc
jne
shr
test
push
movs
dec
(bad)
mov
cdq
jmp
sbb
sub
outs
sti
bnd
dec
imul
cwde
cmc
mov
fiadd
cli
loope
imul
rcr
pop
movs
test
ja
adc
xor
(bad)
mov
or
ret
nop
cmps
outs
mov
aas
enter
retf
in
sub
popf
add
pop
fldcw
push
in
movs
(bad)
cmc
and
cmp
push
call
sbb
inc
lahf
push
out
rcl
pop
push
or
push
stos
cwde
cs
mov
push
in
out
mov
(bad)
add
push
dec
add
int
dec
enter
mov
adc
inc
rol
mov
outs
rol
int3
jo
push
mov
shr
xor
mov
adc
jnp
add
adc
cdq
cld
loop
jne
sbb
adc
lock
call
xor
hlt
ja
or
test
in
fiadd
pop
hlt
jb
mov
call
jmp
fs
addr16
mov
or
dec
sub
xchg
dec
sub
xor
outs
push
lea
inc
mov
mov
dec
mov
mov
push
(bad)
xor
ins
dec
jne
addr16
lods
xchg
cmps
cmps
outs
pop
jbe
popa
retf
retf
gs
inc
xchg
mov
pop
jmp
pushf
psrld
dec
sbb
mov
mov
cmc
aaa
call
rol
dec
push
jnp
and
repnz
dec
sahf
and
fcomp
push
add
ins
addr16
clc
mov
ds
ins
mov
xor
lea
pop
pop
and
push
popa
cmps
mov
and
xor
push
push
shr
into
ret
adc
test
inc
xor
pop
push
mov
or
movs
cmp
xchg
or
xor
sub
sbb
push
jae
mov
aam
out
or
in
xchg
jge
mov
xchg
lock
add
pop
fucom
xor
dec
fsub
ja
sbb
add
mov
push
gs
mov
lods
call
inc
mov
lds
adc
je
stos
fs
sub
rol
call
push
ret
inc
(bad)
pop
xchg
jbe
pop
into
rcr
and
mov
dec
aaa
jae
lock
jle
fstp
and
cwde
aam
pop
in
hlt
pop
fcom
test
push
xor
repnz
out
xchg
xchg
mov
jne
mov
or
enter
xor
inc
sub
mov
shl
nop
movs
(bad)
movs
ds
add
jle
xlat
cmps
sbb
inc
pop
mov
and
outs
mov
out
call
xor
pop
(bad)
pusha
or
dec
scas
and
fisttp
test
in
mov
(bad)
cld
or
lahf
mov
xor
sbb
fs
push
inc
inc
inc
fild
stos
xor
mov
mov
and
test
daa
cmps
mov
add
outs
mov
std
sbb
sbb
test
out
jle
mov
push
mov
pop
jb
push
jle
push
xor
fsubrp
imul
dec
jl
in
mov
sbb
loop
pop
jle
es
mov
xor
test
popf
fwait
jne
jne
inc
xor
cmps
int
or
inc
mov
mov
mov
fs
xchg
push
js
mov
(bad)
pop
shl
stc
or
xchg
sbb
(bad)
out
mov
xchg
rcl
sbb
sub
pushf
leave
popa
jb
mov
adc
sbb
pop
hlt
aas
pop
outs
xchg
ja
push
adc
pop
xor
pop
jnp
sti
ret
shr
inc
test
movs
xor
adc
cmps
sub
fidiv
(bad)
mov
mov
outs
(bad)
xchg
dec
outs
sahf
movs
push
les
ret
mov
iret
mov
outs
dec
imul
dec
sub
pop
cs
cmp
movs
push
ret
cli
mov
lock
test
ins
jo
cs
popa
and
rcr
mov
stc
sbb
pop
xor
xor
ror
xchg
vzeroupper
mov
outs
jno
sub
dec
push
in
jg
push
mov
int
cmps
mov
push
lea
xchg
cli
sahf
(bad)
pop
pop
out
ret
fisubr
mov
xor
sub
or
pop
pushf
lods
and
mov
sub
push
popf
sbb
xchg
pop
mov
fs
inc
sti
daa
sbb
movs
xchg
mov
popa
xchg
jbe
test
adc
lock
push
ins
mov
hlt
sbb
(bad)
(bad)
pop
add
imul
cmc
jns
push
xor
dec
les
enter
jb
push
xchg
test
inc
adc
adc
adc
add
and
(bad)
cmp
mov
mov
xchg
add
cmps
jmp
mov
ret
pop
sbb
or
les
xor
arpl
adc
into
mov
scas
pop
mov
into
and
or
add
int3
jecxz
pushf
jg
push
mov
adc
mov
cmps
ds
push
adc
adc
dec
sub
stos
push
and
jo
or
stos
cdq
ret
fidivr
jmp
xor
addr16
mov
sub
pop
or
(bad)
stos
inc
push
jne
mov
out
xor
push
cld
shr
and
lds
xor
std
test
adc
enter
scas
aam
push
cwde
test
jecxz
and
cmp
sub
test
pop
imul
pop
rcl
dec
or
push
stc
fwait
sbb
out
sub
inc
stc
jmp
dec
fisubr
sti
dec
mov
je
xchg
shr
xor
xor
gs
icebp
inc
out
fisttp
scas
shl
cdq
rol
mov
stos
dec
(bad)
mov
jl
dec
and
push
mov
test
cmp
dec
cmp
les
loopne
ror
scas
sbb
test
xchg
pop
div
and
jbe
(bad)
iret
neg
(bad)
rcl
xor
std
nop
sub
mov
fsubr
push
fs
mov
pop
punpckhbw
add
jge
cmp
cld
aam
push
or
aam
inc
popa
jb
lods
dec
and
das
cmp
inc
mov
adc
adc
inc
xchg
loope
cs
loop
xchg
lds
dec
cmps
jns
fs
jecxz
xor
popf
mov
sub
out
adc
leave
test
mov
int
mov
mov
sub
sbb
lahf
or
cmp
loop
xchg
adc
xor
fist
push
shl
xor
push
cmp
inc
test
dec
or
jmp
lock
jae
les
mov
mov
jg
ror
add
and
mov
mov
mov
cld
mov
lods
xor
sub
sbb
jge
xor
clc
(bad)
dec
test
mov
lods
add
(bad)
out
mov
cmc
inc
repz
mov
out
ins
xor
out
pop
repz
inc
push
dec
fmul
icebp
in
sbb
jl
jns
cld
dec
sub
pop
jnp
sbb
sub
jmp
push
mov
add
sbb
(bad)
push
mov
mov
mov
int3
das
mov
movs
pop
scas
mov
adc
cmp
mov
loop
retf
into
fwait
dec
push
sbb
jg
loope
and
es
add
sub
sbb
push
cmc
mov
or
mov
fmulp
daa
mov
xlat
aaa
jmp
in
push
mov
lods
loop
(bad)
mov
cmp
ja
cmps
hlt
jae
mov
push
mov
cmp
call
sbb
push
dec
(bad)
adc
(bad)
push
jg
add
ret
daa
sbb
adc
inc
divps
xchg
lods
and
dec
scas
add
mov
cmc
pop
mov
push
xchg
xchg
sbb
call
aas
lock
add
pop
fucomi
mul
(bad)
xchg
sub
shr
enter
sbb
ss
das
in
push
gs
adc
fadd
mov
xlat
xlat
iret
cmp
mov
or
test
xor
add
push
xchg
mov
test
jnp
jmp
out
outs
in
sub
jnp
lods
mov
(bad)
lds
pop
and
mov
push
mul
xor
xchg
pushf
lahf
push
sti
xor
pop
cli
(bad)
rcl
jno
bound
sbb
sbb
adc
rol
es
into
push
xlat
jo
dec
bound
jne
cld
mov
jmp
pop
out
mov
push
jb
loop
dec
inc
ror
pop
jl
outs
pop
sbb
nop
jbe
inc
int3
push
sub
rol
inc
mov
pop
mov
mov
rcr
mov
pop
xchg
xchg
cli
mov
out
es
jmp
sub
addr16
mov
pusha
lock
or
cmp
sub
xor
or
lea
sub
push
ror
jo
out
cs
adc
adc
cmp
mov
sbb
pop
(bad)
ds
pop
push
sub
xor
push
mov
pop
imul
lock
loope
push
add
fcom
(bad)
in
scas
jmp
jbe
scas
dec
adc
js
and
or
mov
fcmovne
xor
adc
cli
adc
mov
sub
xor
jmp
dec
sub
xor
hlt
sbb
ja
lods
scas
dec
shl
ins
push
xor
xor
cmps
adc
test
sbb
call
loopne
pop
ins
pushf
mov
cld
aas
(bad)
test
fisttp
xchg
or
pop
test
enter
lock
lahf
cmp
and
in
js
jb
push
cmp
frstor
cld
daa
das
push
cwde
loop
arpl
jecxz
cmp
adc
fnstenv
adc
xor
xchg
mov
lock
imul
call
inc
fstp
jg
sti
dec
push
outs
mov
ss
sbb
push
lock
(bad)
lahf
adc
fwait
fwait
(bad)
jmp
mov
test
test
mov
adc
pusha
push
xchg
mov
outs
cmp
test
adc
test
xlat
push
mov
mov
xchg
dec
push
cdq
out
popa
or
cld
iret
sub
je
jg
(bad)
fnstcw
jnp
sub
cmp
test
cmp
add
add
pop
aas
xor
repnz
repnz
or
out
jo
mov
mov
aam
xor
jno
and
sti
inc
js
jno
sub
inc
sbb
aas
push
mov
add
push
mul
ja
arpl
ret
mov
jns
(bad)
rol
(bad)
cmc
cmp
and
aad
xchg
frstor
inc
mov
in
leave
xor
movs
inc
or
outs
mul
fcom
cmp
xchg
jns
sar
lahf
add
repz
mov
fisubr
mov
mov
add
xchg
loop
jae
inc
adc
ds
test
sub
sar
pushf
fidivr
xor
ins
or
xchg
mov
push
and
jns
test
mov
inc
cdq
shl
iret
cli
push
mov
stos
mov
mov
stos
les
test
or
or
fist
or
xlat
sti
lods
sub
test
or
xor
cmp
sbb
sub
in
mov
mov
(bad)
test
cmps
daa
fist
ret
xor
ret
hlt
adc
xchg
inc
sub
jmp
mov
fs
(bad)
adc
addr16
mov
lea
cdq
daa
and
mov
loop
mov
jns
vxorps
or
loop
repnz
cmc
jo
add
fimul
call
out
inc
cmp
and
mov
cmp
lods
mov
push
pusha
ins
dec
mov
ror
loopne
ret
aam
fldenv
mov
xchg
in
mov
xchg
jnp
xor
fstp
lds
arpl
jbe
mov
cmp
out
or
jb
push
dec
inc
or
and
jl
xchg
or
hlt
cmp
or
mov
or
aad
push
daa
sbb
das
into
xchg
divps
jecxz
xchg
jne
xchg
retf
loope
pop
fdivr
push
pop
pop
sbb
push
outs
stc
jbe
dec
idiv
mov
dec
cmp
dec
les
push
aaa
sub
aas
pusha
sub
pop
pushf
adc
and
out
sahf
dec
jg
test
dec
arpl
outs
fcomp
sahf
jnp
mov
push
loopne
xor
pop
fidivr
cdq
push
rol
mov
dec
jns
rcr
fwait
das
stos
(bad)
jae
xchg
dec
xor
cs
cwde
jmp
test
(bad)
ficom
mov
je
add
setns
test
inc
mov
cdq
in
into
pusha
push
imul
mov
dec
call
mov
(bad)
or
inc
adc
inc
cmp
xchg
fwait
outs
xor
jle
fidiv
sbb
imul
inc
ds
dec
out
inc
dec
je
sub
add
add
inc
mov
mov
enter
out
in
es
pop
retf
lock
retf
cmp
cmp
aam
fimul
push
cmc
dec
fdivr
jle
sbb
scas
sub
test
retf
ret
mov
adc
jb
test
push
xor
xchg
call
jno
enter
imul
sar
mov
mov
out
mov
ds
mov
fcomp
fld
push
or
js
lods
test
push
add
jge
enter
jmp
stos
adc
sbb
scas
and
lds
fnsave
dec
mov
sub
or
push
or
cmp
ins
mov
sahf
je
popf
mov
jne
xchg
xor
push
xchg
dec
mov
loop
or
aas
sub
mov
mov
xchg
mov
xchg
(bad)
out
mov
pop
pop
aaa
les
mov
mov
mov
pop
ret
leave
nop
(bad)
pusha
xor
xor
xor
push
or
sbb
sub
cli
pop
mov
adc
jmp
or
jge
jnp
ins
ret
xlat
in
lods
push
icebp
mov
inc
js
and
or
or
out
sbb
imul
jno
in
sbb
xor
stos
das
sub
cmp
enter
lahf
and
xor
cmp
cwde
lods
retf
push
inc
out
dec
(bad)
ins
bound
jb
mov
inc
stos
test
mov
loopne
sub
(bad)
loope
int3
xchg
adc
call
xchg
icebp
adc
mov
int
pop
int
sbb
jo
and
dec
in
sub
test
popf
cmp
jg
ds
call
mov
lods
push
cmp
fiadd
(bad)
cdq
sub
jae
or
cdq
ins
pop
inc
or
pop
mov
into
dec
std
inc
stos
in
scas
test
mov
adc
mov
shl
das
les
mov
loope
lea
popf
pop
(bad)
lods
pop
push
iret
call
dec
enter
sar
sub
add
ret
or
mov
daa
dec
mov
das
and
mov
and
inc
push
jmp
jecxz
retf
dec
sub
jle
sahf
ja
imul
inc
inc
into
add
fwait
jmp
or
sub
adc
mov
mov
mov
dec
xchg
stos
mov
cmp
xor
jg
jg
mov
pop
cdq
fldcw
mov
dec
push
or
xlat
fdiv
(bad)
rcl
xor
ins
add
iret
fistp
dec
ss
jecxz
(bad)
outs
push
dec
jl
adc
sbb
or
mov
jb
hlt
xchg
jle
in
sub
test
add
mov
shr
jnp
mov
(bad)
sub
bound
and
push
dec
(bad)
rep
ds
inc
mov
shl
inc
mov
inc
or
xchg
shl
add
outs
out
fsub
push
pop
out
outs
mov
cdq
outs
xlat
mov
cmps
or
dec
add
or
mov
push
sbb
test
fld
sub
jp
nop
es
sub
test
std
mov
sbb
js
bound
mov
mov
push
iret
mov
mov
stos
mov
cmp
adc
ret
sub
mov
int3
fadd
out
mov
xchg
loopne
pop
call
inc
jle
push
and
cmps
ror
rol
push
aam
popa
xchg
das
mov
addr16
add
sbb
fbstp
movs
mov
es
cwde
add
mov
dec
(bad)
push
out
dec
xchg
ins
and
and
dec
pop
sbb
in
add
je
imul
sbb
and
jmp
push
pop
add
jmp
xchg
retf
jne
pusha
pop
data16
rcr
ret
inc
push
nop
sub
loopne
sub
sub
int
xchg
sbb
aas
mov
aam
les
repnz
adc
into
sti
fld
sub
popf
movs
stc
or
lods
xor
rep
stos
mov
xor
xchg
into
cdq
pop
jmp
jnp
imul
xchg
popa
add
or
or
mov
fsub
ja
test
ror
jmp
xor
dec
in
fbstp
mov
dec
mov
add
enter
push
test
retf
mov
fisttp
lods
frstor
out
push
mov
jnp
push
mov
movs
cmp
int3
js
mov
jp
in
pop
retf
jb
ds
push
fwait
pop
jge
xor
pop
cwde
out
test
inc
ins
test
cs
neg
dec
mov
fsub
xchg
cmp
jmp
shr
les
in
xor
adc
aad
ins
pop
cmc
popf
push
(bad)
xchg
cs
push
or
jae
cs
mov
jmp
fst
mov
lods
ret
popa
push
cmp
pop
outs
xchg
and
sub
mov
jl
cs
xor
enter
mov
pop
test
lds
mov
out
pop
and
sbb
inc
in
in
sar
data16
js
cmps
mov
sbb
dec
(bad)
sub
pop
xor
jmp
ins
ja
outs
jge
sub
dec
sub
dec
and
out
fsubr
idiv
pushf
mov
clc
or
loopne
enter
sub
push
std
mov
cmp
test
js
loopne
add
xor
mov
int
aam
jno
and
dec
ret
xor
retf
aas
shl
mov
retf
popa
inc
xchg
pop
cmp
push
fiadd
lods
loopne
outs
push
stos
jb
test
jge
cmp
cmps
adc
jmp
or
test
mov
xchg
mov
mov
and
push
mov
in
mov
push
dec
dec
dec
xchg
push
mov
jne
ins
xor
mov
jbe
(bad)
sub
jns
stc
and
dec
ins
pop
sbb
int
cdq
sub
mov
test
(bad)
retf
pusha
inc
out
mov
loope
sbb
xchg
popa
outs
fild
mov
jp
jmp
aas
sbb
pop
mov
test
jo
mov
call
and
mov
xor
sbb
cmp
cmp
jmp
out
or
dec
in
add
sub
bound
retf
js
inc
sbb
cmps
xchg
addr16
jno
das
sub
or
rol
leave
shl
(bad)
pop
sbb
push
adc
mov
inc
(bad)
xchg
jp
test
push
movs
pop
push
mov
mov
dec
rcr
(bad)
pop
mov
popa
lock
rcr
cmc
in
xor
mov
imul
mov
cmps
push
xchg
lods
pushf
aaa
cmp
in
aad
push
adc
jge
sbb
call
adc
sahf
adc
xchg
ror
mov
jle
lds
leave
es
inc
and
or
lahf
stos
in
aaa
ins
iret
daa
sbb
arpl
fdiv
dec
lahf
and
push
imul
cmp
push
ins
inc
cld
mov
aas
xchg
jmp
shl
push
icebp
loop
mov
push
inc
cmp
mov
pop
movs
mov
adc
int3
sti
mov
pop
add
inc
cwde
jmp
inc
clc
rol
jmp
sbb
lea
dec
xlat
das
mov
cmps
pop
ja
fiadd
push
int3
sbb
mov
mov
popa
movs
jmp
adc
and
push
mov
xor
mov
(bad)
ret
inc
push
aaa
fadd
test
loopne
cdq
mov
push
stos
mov
test
and
lock
push
sub
in
mov
mov
(bad)
jmp
daa
out
adc
xlat
xchg
jo
pop
std
fst
xor
icebp
imul
pushf
std
mov
js
add
or
sub
cmp
pop
enter
pop
push
sub
xor
je
(bad)
std
sahf
neg
dec
jp
scas
lea
pop
push
clc
fnstsw
dec
(bad)
(bad)
mov
mov
xchg
sbb
rcr
nop
push
cli
or
call
xchg
or
xor
adc
xchg
enter
int3
(bad)
ja
mov
or
push
test
ss
loop
imul
and
hlt
or
or
ds
imul
cmp
aaa
int3
loopne
int3
mov
in
sbb
movs
or
ret
pop
xor
imul
test
ins
fnsave
test
sbb
dec
push
xchg
sbb
mov
fs
xchg
in
(bad)
xor
cmp
mov
shr
fs
xor
sbb
das
mov
mov
jecxz
or
leave
push
loopne
mov
ret
je
ds
mov
ins
and
stc
jbe
inc
xor
and
loop
xor
loop
call
and
jle
xchg
in
enter
imul
xchg
sar
sub
mov
and
es
leave
sbb
retf
retf
sub
cli
sbb
stos
and
fidiv
rcl
sti
scas
test
and
jl
loop
pop
mov
lock
js
push
sub
pop
xchg
adc
push
xchg
cmc
es
mov
dec
imul
xchg
in
xchg
sub
dec
lods
mov
sub
test
jp
jmp
push
fidivr
cmps
in
adc
adc
mov
mov
pop
add
inc
mov
addr16
fwait
mov
mov
ret
adc
je
adc
loopne
arpl
shl
adc
daa
mov
cmp
mov
sbb
dec
cmp
push
out
inc
cmp
jmp
fsub
out
mov
dec
and
push
jb
cmp
xor
cdq
dec
dec
add
adc
mov
or
jae
pop
(bad)
clc
sub
add
mov
inc
jle
inc
xchg
shl
int3
mov
aaa
push
clc
inc
(bad)
dec
cmp
fldenv
mov
jae
pshufw
dec
sbb
cli
cmc
cmp
mov
push
or
mov
sbb
stc
daa
add
push
xor
and
cdq
sbb
dec
out
jmp
in
es
inc
pushf
and
popa
scas
dec
or
jnp
stos
stc
jge
push
push
clc
inc
mov
pushf
out
and
xor
outs
int
imul
xor
xor
cmp
adc
scas
imul
add
ins
iret
jp
bound
inc
imul
mov
stc
push
div
mov
cmps
jnp
xor
out
mov
jns
daa
in
fs
lahf
out
xchg
les
imul
and
out
aam
mov
push
xchg
jge
cdq
ret
cmps
sub
cld
(bad)
out
cwde
jmp
cmp
loopne
lods
adc
mov
retf
or
xor
cmp
dec
add
xor
repz
cmp
adc
fwait
jle
xchg
mov
xor
mov
sbb
scas
cmp
int
(bad)
dec
xor
mov
push
or
or
dec
add
pop
test
adc
fsubr
cmc
out
lea
inc
xchg
jmp
jo
fimul
ds
jne
dec
push
jg
(bad)
push
pop
iret
out
cmp
add
cmp
sbb
and
das
jg
nop
mov
rcr
add
push
inc
dec
push
push
ins
sbb
adc
rol
xchg
push
push
nop
call
cmp
in
adc
call
hlt
xchg
in
aaa
std
lahf
lods
fnsave
test
icebp
push
inc
mov
mov
mov
sub
(bad)
cmp
dec
or
ret
pop
pop
pop
(bad)
jnp
test
lods
jge
dec
mov
ins
cs
mov
movs
mov
jecxz
addr16
imul
push
call
sbb
test
pop
mov
mov
js
xchg
leave
mul
pop
stos
mov
repnz
cdq
mov
movs
sahf
mov
sub
shl
sub
not
movs
and
shl
sahf
cs
not
push
(bad)
mov
lock
jmp
pop
pushf
(bad)
daa
xor
int
dec
sub
aam
test
xor
add
xor
aam
ret
sbb
mov
bound
mov
ds
ret
(bad)
jno
pop
add
jmp
arpl
retf
or
dec
adc
cmc
and
add
push
dec
dec
lahf
stc
fadd
jecxz
xchg
add
push
cmp
or
add
pop
cmp
sar
sub
rcr
mov
cmc
mov
pop
or
repz
push
inc
inc
ror
lea
stc
sub
xor
aam
scas
xchg
push
jp
sbb
sbb
out
je
push
popf
mov
mov
push
jmp
cmp
and
push
ret
arpl
shl
dec
xlat
or
out
pop
jne
jl
inc
jge
pop
xor
imul
leave
cmp
in
dec
loop
sbb
mov
inc
mov
mov
and
cmp
adc
sbb
hlt
dec
ins
cmps
sub
fadd
clc
dec
push
inc
ret
nop
mov
mov
jecxz
cmp
int
xor
(bad)
add
ret
fcmovnu
popa
sbb
dec
in
jne
and
das
inc
imul
ret
lea
or
adc
xchg
sub
mov
aam
jno
enter
adc
les
sub
ds
in
ds
inc
mov
out
loop
out
fwait
cli
xchg
movs
test
cmps
adc
fnsave
push
repz
jmp
fwait
dec
loop
sar
les
hlt
ins
lock
push
push
mov
cdq
sub
jb
inc
js
lea
out
adc
int3
lds
pop
jmp
adc
test
add
sbb
xor
jmp
sbb
push
fwait
cmps
dec
push
pop
or
xchg
push
(bad)
(bad)
jp
and
mov
jge
test
jbe
das
outs
movs
movs
xor
and
xor
call
test
adc
icebp
ret
add
and
stc
xor
out
call
test
(bad)
mov
pop
adc
jno
outs
inc
inc
cmp
push
pop
jns
inc
enter
add
js
and
sub
fwait
dec
in
imul
jecxz
(bad)
mov
or
sbb
rol
repz
pop
mov
dec
arpl
rcr
pop
mov
cmp
dec
add
test
lods
mov
lahf
adc
sub
leave
in
cli
inc
stos
popf
inc
mov
cdq
adc
push
dec
sub
pop
shl
ret
loope
add
mov
popf
gs
or
outs
mov
push
xchg
aam
cwde
or
adc
icebp
sbb
adc
scas
nop
sub
std
fsub
mov
mov
jo
sub
mov
(bad)
dec
add
aam
mov
or
dec
jl
fstp
or
add
push
pop
pop
fsub
inc
sub
daa
out
shr
jecxz
sbb
enter
cmp
pop
dec
outs
aas
shl
cmp
retf
leave
ret
sahf
int
mov
jg
pop
dec
fidiv
je
data16
mov
cmps
jno
mov
int3
add
daa
cmp
cmp
aaa
jg
ret
mov
mov
pop
fidivr
jo
iret
xor
jmp
out
aas
mov
jb
mov
popf
(bad)
sar
out
jmp
push
jp
jp
ret
call
xor
cmps
cdq
and
mov
inc
iret
sahf
dec
sbb
js
cli
mov
pop
retf
int3
inc
and
movs
in
jmp
xlat
mov
lahf
sub
mov
adc
push
js
xlat
test
xor
jnp
cmp
fadd
test
mov
and
in
adc
ficom
mov
and
adc
shl
stc
aam
shr
push
pop
leave
rcpps
ret
out
push
lock
jo
fimul
mov
add
dec
aam
aaa
add
test
pop
xchg
sub
adc
push
xchg
mov
mov
mov
aas
jbe
xchg
cmc
xor
ja
sar
xchg
cdq
xor
adc
mov
scas
popf
nop
adc
inc
add
nop
into
dec
xor
lods
scas
je
lods
xor
jo
popa
xor
loopne
sahf
dec
fldenv
repnz
in
rol
(bad)
aas
sub
imul
push
jbe
ins
xor
hlt
arpl
pop
inc
gs
pop
xor
repnz
mov
jns
xor
adc
cmps
pop
in
je
xor
add
rcr
test
ds
cwde
stc
test
mov
mov
adc
adc
cmp
jge
xor
cmp
mov
jno
daa
jmp
add
sbb
lea
mov
mov
inc
adc
lods
fcomip
cmp
or
or
lds
inc
push
jns
fidiv
lock
mov
cmp
add
mov
jg
lods
call
push
or
jns
inc
push
cli
push
mov
das
(bad)
scas
xchg
lea
jmp
fadd
movs
stos
xchg
ins
cmp
cmp
push
xor
xchg
dec
add
(bad)
sub
adc
icebp
mov
push
xor
imul
test
add
fndisi(8087
mov
fwait
sub
push
lods
inc
inc
call
ror
cmp
daa
fs
pushf
mov
jmp
lea
add
xchg
mov
test
sub
push
push
ss
daa
rcl
mov
test
dec
dec
sbb
pushf
adc
imul
push
cmc
sar
sbb
jmp
xor
mov
and
in
push
outs
jns
fisttp
jl
and
fild
ret
fmul
mov
rcr
nop
(bad)
cmc
push
xchg
and
inc
int3
out
ins
push
mov
ret
pusha
xchg
scas
and
stc
cs
mov
cmp
or
inc
sub
dec
xor
hlt
stos
sbb
mov
pop
loop
mov
int3
mov
je
bound
mov
inc
scas
cmc
xor
xchg
and
sbb
outs
inc
xchg
stos
bound
stc
sub
hlt
or
add
icebp
push
xchg
push
sbb
cmp
fst
dec
push
jno
push
test
add
ret
jg
jo
mov
les
add
mov
pop
mov
xor
push
mov
sar
lds
inc
and
fstp
int
sub
fimul
mov
ret
xchg
shr
mov
(bad)
xor
xor
imul
hlt
mov
int3
push
inc
add
test
data16
stos
dec
mov
xchg
jg
call
add
cld
mov
and
push
cdq
jge
push
pop
sub
jno
loopne
in
es
mov
stc
cld
jbe
xor
nop
jnp
push
stos
adc
jmp
xchg
cs
(bad)
cwde
in
jp
(bad)
xor
(bad)
enter
sub
xrelease
into
jmp
adc
or
pop
stos
and
icebp
push
call
bound
mov
hlt
push
or
xchg
or
nop
xchg
adc
and
push
add
(bad)
xchg
xchg
ins
scas
loop
arpl
push
retf
jnp
cmp
je
jge
mov
mov
rcr
xor
mov
add
add
push
mov
mov
cwde
and
das
sbb
mov
xor
lds
push
or
pop
cwde
push
mov
ja
mov
pop
sub
adc
jecxz
jo
push
enter
pop
cs
stos
pop
push
add
sbb
push
jae
push
pop
jb
daa
jne
scas
test
imul
add
push
mov
(bad)
pop
sbb
add
push
and
xchg
out
adc
xchg
jl
dec
daa
and
xchg
mov
aam
loopne
outs
into
fs
out
or
clc
pop
sub
and
ins
dec
pop
cwde
mov
outs
adc
xchg
add
mov
idiv
cmc
dec
fadd
add
pop
add
cdq
push
push
xor
addr16
sahf
or
sahf
xchg
mov
sbb
sub
clc
jnp
ins
cmps
js
movs
inc
sub
xlat
sub
in
adc
mov
adc
aam
lea
jmp
xchg
jne
xchg
ror
fmul
aad
sub
push
push
or
sub
xchg
push
push
bts
or
mov
xor
and
xchg
dec
jg
std
xor
inc
jb
(bad)
push
jno
(bad)
fistp
lods
(bad)
jle
adc
mov
sti
rol
imul
mov
adc
cmp
icebp
xchg
xor
stos
xchg
ja
ss
push
out
fldcw
pop
inc
add
(bad)
ja
dec
sbb
xchg
jmp
shr
push
xchg
add
jne
pop
cld
popf
dec
xchg
je
cmp
xlat
and
fisttp
pop
push
inc
xlat
and
std
mov
jmp
push
lea
push
and
test
mov
fiadd
mov
mov
(bad)
or
dec
mov
aad
push
shl
gs
xchg
mov
pop
pop
cmp
sahf
xchg
shr
cmc
aad
shl
inc
sbb
adc
es
xchg
sahf
repz
jmp
popa
icebp
inc
js
dec
popa
icebp
in
sbb
xchg
fs
push
mov
shl
xchg
enter
test
dec
add
cmps
mov
in
(bad)
loop
mov
xchg
test
das
push
(bad)
push
xor
(bad)
jp
cmc
jle
fcom
and
cmp
lea
push
test
lock
jmp
xor
mov
out
jl
mov
test
jnp
fist
aam
push
mov
shr
lahf
push
loope
mov
push
ds
sti
scas
mov
ds
mov
push
ret
and
shl
sbb
sbb
int3
rol
ds
lahf
dec
cmp
mov
in
neg
add
sbb
retf
lahf
pushf
dec
mov
jno
jle
jmp
mov
xor
xchg
xor
mov
adc
(bad)
dec
popf
repnz
cmp
test
cmps
stos
push
jecxz
shl
fwait
inc
ss
pushf
out
mov
mov
mov
jns
in
dec
xchg
(bad)
cld
xchg
lock
ret
or
test
jae
mov
jnp
and
test
mov
stc
mov
cmps
jecxz
dec
mov
movs
bound
pop
outs
addr16
movs
and
leave
xchg
repnz
lea
retf
das
jmp
aas
into
stos
scas
sub
jp
movs
cmc
int
cwde
std
inc
loope
inc
jg
sub
jmp
cmps
push
jecxz
adc
sbb
leave
or
scas
mov
xchg
sub
cmps
call
rcl
imul
cmp
shr
adc
inc
repnz
and
vpcmpgtd
jb
mov
(bad)
dec
inc
cmp
sbb
shr
cmp
xor
push
mov
mov
sub
push
dec
(bad)
imul
cmp
(bad)
mov
push
mov
popf
enter
fwait
in
xchg
xlat
adc
and
repz
mov
das
xor
into
(bad)
cli
paddsw
ja
pop
cmp
gs
adc
sbb
outs
les
push
xor
gs
xchg
pop
sub
sbb
dec
cmp
mov
test
mov
jne
inc
inc
jecxz
jne
sahf
jns
leave
jns
sti
test
xchg
mov
loop
dec
cmp
arpl
push
shl
pop
jmp
pushf
mov
add
sbb
push
clc
in
sub
or
lock
test
xor
pop
(bad)
inc
das
and
dec
and
ss
adc
test
(bad)
sbb
adc
popa
pop
cdq
xchg
adc
sub
sbb
mov
xchg
sub
in
or
add
std
retf
cmp
jmp
ins
xor
add
mov
fwait
adc
movs
in
mov
cli
shl
in
add
xor
cmps
adc
sub
call
out
xchg
jecxz
sahf
adc
jle
out
scas
test
(bad)
loopne
stos
lock
pop
retf
pop
aad
push
dec
xchg
daa
jle
ret
mov
ins
adc
adc
fnsave
dec
and
mov
std
mov
xchg
xchg
imul
int
pop
ret
jl
enter
dec
adc
inc
jne
cli
sbb
ss
mov
mov
xchg
or
push
mov
fsub
iret
xlat
ds
xlat
aad
dec
ficomp
fwait
popf
(bad)
pop
push
test
imul
cmp
jbe
mov
dec
(bad)
das
or
push
call
fadd
lock
pop
xor
add
frstor
mov
retf
arpl
lds
inc
jmp
ins
in
push
cmp
pop
jb
jle
xchg
push
imul
push
mov
stos
xchg
mov
out
rcl
adc
into
pushf
mov
inc
int
(bad)
push
or
ds
jo
and
rol
addr16
push
call
pop
or
add
cmp
enter
jg
jg
xlat
into
fild
adc
(bad)
add
div
cld
out
ret
in
cld
inc
fcomip
sub
and
mov
pop
addr16
xchg
sub
push
repz
jp
mov
pop
sub
jnp
pusha
(bad)
xor
cmps
sub
rcr
iret
sub
push
mov
add
lods
xor
je
mov
jge
push
xchg
mov
xlat
cwde
test
out
inc
(bad)
pop
pop
add
cld
xchg
and
cmp
loope
add
xchg
xchg
daa
aad
push
jmp
jae
sbb
and
mov
dec
neg
pop
push
cmp
fs
xor
jnp
mov
mov
sbb
dec
call
ret
fst
cmp
and
cmc
rcr
call
out
pop
xchg
add
jl
pop
jle
xchg
push
inc
daa
cmp
sub
fcmovnu
ja
xchg
xchg
sub
fs
pop
dec
jmp
inc
inc
cmp
sahf
pop
loope
ins
or
xor
xchg
push
int
or
lahf
push
imul
das
movs
stos
pusha
cwde
mov
sahf
sub
or
mov
scas
scas
ficom
lahf
and
and
cmp
push
sar
gs
push
out
add
sub
pop
pusha
imul
mov
adc
stc
mov
xor
repnz
dec
cmp
out
ss
lock
out
bound
jmp
jl
add
fidiv
mov
mov
cmps
mov
inc
xchg
mov
xor
or
in
lds
ficomp
sti
loopne
mov
cmc
mov
xchg
mov
mov
pop
mov
lods
push
push
add
outs
xlat
adc
dec
sub
xor
in
jge
test
bound
xchg
setge
pop
add
loop
loopne
scas
pand
mov
movs
enter
push
push
aas
int3
dec
mov
inc
fdiv
push
imul
jge
push
xor
lods
and
mov
and
mov
fistp
movs
(bad)
sub
lods
adc
mov
ret
sub
sbb
gs
js
lds
sti
inc
mov
jecxz
jge
sub
push
mov
sbb
cmp
xchg
lods
sub
mov
mov
mov
test
and
loope
inc
addr16
inc
inc
imul
jmp
(bad)
ds
les
push
sbb
sbb
pop
xchg
lahf
aaa
xchg
leave
inc
js
mov
stos
xlat
jle
int
cli
movs
mov
(bad)
fmul
mov
gs
loop
xor
mov
lds
ds
mov
jmp
cmp
add
push
fisttp
pop
ja
fmulp
mov
adc
jg
pop
call
jno
ror
loope
call
jbe
imul
call
aaa
enter
adc
test
inc
jae
(bad)
or
xchg
call
dec
imul
inc
mov
xor
test
mov
lahf
iret
mov
jns
inc
popa
adc
(bad)
inc
sbb
or
cmps
in
jle
(bad)
rcl
add
mov
fdiv
ins
jl
data16
xchg
les
xor
stos
fidiv
clc
dec
dec
sub
dec
pop
pop
cli
xor
jl
lds
adc
sub
leave
inc
push
lock
sbb
or
mov
jno
clc
daa
and
das
loope
add
mov
dec
adc
push
push
rcl
es
pop
push
scas
jmp
shl
sbb
lds
int
push
xor
xor
(bad)
xchg
mov
xlat
sbb
mov
icebp
adc
or
xor
sbb
pop
pushf
daa
sub
and
adc
sbb
mov
xchg
mov
mov
bound
sbb
mov
inc
sub
xchg
xchg
sbb
fbld
out
xor
and
mov
mov
stos
outs
add
lahf
mov
arpl
enter
retw
xchg
dec
ret
in
daa
dec
imul
add
mov
mov
std
dec
aas
or
fwait
push
sbb
push
mov
dec
das
out
shl
dec
loopne
mov
mov
ror
ss
or
push
xor
cmps
dec
mov
mov
or
ror
push
add
and
call
test
shl
jp
imul
xchg
sahf
inc
or
fbld
fcom
add
jp
retf
xchg
fstp
cmp
sub
pop
sub
jns
mov
fiadd
arpl
cmp
iret
outs
arpl
and
push
jmp
and
push
in
js
jp
or
ret
retf
jmp
mov
mov
rcl
push
inc
mov
mov
pop
test
jl
xchg
fbstp
and
in
stc
scas
cwde
repnz
sbb
icebp
stos
jmp
(bad)
ds
ja
push
sahf
(bad)
jb
adc
jne
dec
stc
adc
inc
dec
aam
jecxz
aaa
mov
mov
cwde
sti
adc
(bad)
out
in
and
sahf
out
fidiv
stc
das
mov
std
aaa
loopne
adc
inc
mov
push
test
sbb
jecxz
mov
or
or
retf
mov
push
push
(bad)
mov
pop
xchg
es
dec
aam
imul
or
lahf
ror
fld
xchg
mov
or
(bad)
(bad)
stc
test
call
fdiv
mov
inc
ret
push
lea
ror
sar
inc
test
loop
pop
inc
push
fucomip
xor
pop
sbb
cli
inc
fcom
fldenv
xchg
test
sub
mov
icebp
retf
ror
mov
ds
push
lods
cmp
not
mov
int
and
xchg
clc
shl
mov
aas
int3
xchg
sub
rcr
adc
in
in
es
xchg
adc
mov
mov
mov
into
inc
mov
dec
push
jge
add
sub
idiv
mov
or
ss
fs
imul
nop
xchg
xchg
enter
out
jge
ror
jl
hlt
(bad)
scas
fcomp
lds
pop
add
dec
mov
stos
xchg
xchg
mov
add
data16
adc
cmp
xchg
xor
adc
mov
dec
pop
call
rol
pop
leave
cdq
push
retf
cmp
xchg
inc
lods
(bad)
mov
test
sti
outs
add
iret
jno
movs
push
lahf
ins
std
xor
sub
jp
cmp
hlt
in
clc
ja
rcl
fwait
jne
ror
shl
fcomp
jmp
sar
mov
inc
(bad)
cmp
dec
sub
mov
sub
inc
(bad)
cmp
xchg
push
outs
sbb
add
inc
dec
push
or
dec
mul
(bad)
jle
movs
lds
cmp
jle
pop
stos
cmps
cmp
leave
pop
sbb
xchg
push
pushf
pusha
xchg
mov
sbb
fdiv
inc
mov
repnz
(bad)
in
arpl
out
dec
les
rcr
bound
je
mov
aam
mov
xor
rol
cmps
int3
mov
fxtract
xchg
repnz
les
nop
std
inc
hlt
fimul
hlt
xchg
xor
out
dec
xor
inc
xor
mov
cdq
mov
dec
in
jae
pop
mov
sub
cmc
mov
fwait
push
arpl
add
mov
inc
je
js
sbb
dec
sar
jge
and
xchg
fdiv
sbb
in
addr16
cmp
imul
and
mov
loope
fwait
inc
adc
aas
mov
push
jge
sub
hlt
pop
cld
cli
adc
arpl
mov
mov
pop
mov
ja
sbb
repnz
jmp
mov
adc
cmps
ret
xor
xor
cli
gs
sbb
outs
fst
ret
pop
pop
outs
mov
and
pop
jnp
inc
add
cmps
outs
lock
fmul
ja
adc
in
loopne
test
iret
jbe
fisubr
dec
call
andnps
sbb
mov
jp
sbb
mov
mov
dec
loopne
sbb
loope
xlat
movs
pop
out
int3
ins
xchg
sbb
jb
dec
in
jle
retf
xor
xchg
es
jb
jmp
rol
jecxz
outs
popf
adc
and
fdiv
jne
add
fld
push
in
mov
mov
das
lods
dec
add
test
ret
cs
cmp
add
xlat
sub
cmc
test
mov
jmp
aaa
mov
sbb
xor
inc
mov
mov
ins
pop
cld
cmc
mov
retf
xor
pushf
data16
add
xchg
xchg
js
stc
test
adc
adc
dec
fwait
je
xchg
jl
jl
mov
icebp
adc
mov
nop
push
jp
dec
xor
or
test
dec
adc
stc
leave
and
shl
xchg
jo
push
xchg
std
xor
scas
pop
mov
add
loope
jl
jae
adc
test
add
cmps
int
or
shl
pop
mov
xor
retf
ja
retf
out
and
test
fwait
stos
pop
lahf
inc
stos
xchg
(bad)
xor
cdq
jo
or
mov
mov
push
ja
dec
loope
sub
add
call
shl
movs
daa
xchg
mov
or
jb
and
retf
outs
cmc
out
or
dec
ss
mov
jb
dec
mov
rcr
jecxz
lock
mov
mov
jno
movs
aaa
push
mov
sbb
std
pop
sub
in
in
xor
push
mov
ins
out
adc
cwde
imul
mov
arpl
push
call
sahf
cmp
cdq
mov
popf
sahf
aam
inc
idiv
es
xor
mov
inc
repz
fmul
and
mov
sahf
ficom
sbb
xor
lahf
push
aam
imul
add
xchg
in
addr16
daa
add
div
xchg
pop
ja
pop
pop
jge
call
jle
aam
lock
jecxz
(bad)
in
rcr
ret
mov
fwait
jmp
ror
ins
xchg
adc
mov
or
icebp
push
aad
xor
mov
popf
pop
mov
jmp
mov
aam
pop
mov
pop
iret
test
mov
out
xchg
and
push
dec
jecxz
out
pop
cwde
es
test
jmp
jp
into
repz
jecxz
popa
adc
sbb
std
adc
and
retf
call
in
xor
loope
enter
mov
push
scas
dec
push
out
sbb
cld
fldcw
cmc
lahf
retf
push
ins
xchg
shufps
std
xor
adc
outs
mov
adc
jo
ins
mov
fs
stc
int3
inc
or
enter
inc
call
sbb
cmp
cs
cmps
push
cld
adc
sbb
gs
pop
cld
mov
fisubr
and
sub
aad
stc
pop
and
mov
popa
loop
mov
out
or
in
mov
ja
imul
iret
sbb
stc
cmc
or
jl
loop
adc
out
pop
popa
sub
xor
push
jae
js
in
add
push
not
dec
add
ss
sti
mov
dec
mov
aas
push
push
pop
daa
xchg
inc
pop
sbb
clc
in
mov
and
(bad)
xchg
imul
or
cmp
cdq
(bad)
xor
sar
pop
popf
or
popf
ins
fsub
mov
out
(bad)
jno
imul
mov
pop
dec
fwait
outs
gs
sub
je
xchg
pop
cmps
xchg
out
xchg
fldlg2
dec
mov
add
mov
pushf
mov
mov
mov
pushf
lock
arpl
and
test
jmp
cmp
add
push
cmp
cmp
rol
xchg
pop
jae
cwde
push
xchg
in
dec
xor
mov
test
sar
mov
cmp
ja
jae
and
push
mov
push
popa
sub
not
jle
das
and
mov
sbb
lds
wrmsr
loope
push
loope
adc
bound
sub
fadd
xchg
adc
sbb
ret
jmp
std
inc
and
cmp
addr16
fwait
stos
ror
mov
push
in
inc
add
aam
add
(bad)
in
xchg
and
push
mov
outs
fst
in
popa
into
sbb
cmc
jne
mov
and
mul
xchg
inc
test
jbe
jne
and
addr16
dec
(bad)
xchg
loope
dec
(bad)
sti
cmp
dec
pop
pushf
es
in
adc
add
inc
test
dec
sbb
movs
jne
xchg
add
(bad)
pop
dec
pop
xor
mov
add
scas
aad
xchg
test
inc
mov
xchg
pop
movs
(bad)
mov
jae
fs
push
lahf
inc
loopne
(bad)
retw
or
lea
ins
jbe
jmp
jmp
mov
mov
jmp
mov
outs
outs
sbb
mov
fwait
ins
mov
ret
and
add
gs
cmp
add
in
inc
pop
imul
and
int
adc
cmp
imul
jmp
sub
lods
loop
cmp
retf
fadd
enter
cdq
add
xchg
(bad)
iret
lods
mov
dec
ror
(bad)
lods
ins
mov
outs
pop
scas
movs
jp
test
enter
add
pushf
inc
pusha
dec
mov
adc
out
test
(bad)
rcl
pushf
mov
lahf
adc
cmc
out
cmp
fldcw
enter
lock
or
dec
addr16
stos
ss
xor
in
bound
dec
jo
and
sbb
ds
loopne
test
dec
icebp
pop
ret
jnp
add
rol
mov
mov
(bad)
jl
xor
add
pusha
add
xchg
in
mov
scas
stos
inc
stos
outs
and
push
popf
ja
cli
or
jmp
popa
pushf
dec
or
movs
pusha
sub
mov
pop
xor
mov
stos
xchg
sar
bound
fsub
test
fidivr
push
enter
mov
test
mov
xchg
sbb
leave
fadd
mov
and
mov
test
leave
(bad)
push
scas
pop
mov
scas
or
outs
movs
stc
std
in
mov
push
bound
jne
fistp
fcomip
mov
js
test
or
loop
vpacksswb
add
push
fmul
shl
out
sub
pop
sbb
mov
dec
out
pop
leave
push
mov
push
or
stos
pop
arpl
sub
gs
push
mov
mov
(bad)
cmp
push
xor
mov
mov
adc
out
or
push
pop
push
mov
shr
sub
push
jne
xchg
daa
or
sbb
jne
or
jmp
outs
xor
mov
pop
ror
movs
xchg
out
movs
clc
inc
xchg
gs
jmp
cmp
cmp
mov
or
mov
loope
call
mov
or
ja
pop
add
sbb
or
out
ds
mov
fwait
mov
mov
(bad)
shl
or
stos
in
pop
or
mov
enter
cli
loop
cmp
ret
ucomiss
mov
mov
pop
mov
std
std
fsubr
int
data16
cmp
call
retf
jo
(bad)
cmp
fwait
sub
mov
(bad)
stos
rcl
dec
add
jnp
fwait
in
xchg
ror
jno
xor
(bad)
and
mov
add
dec
(bad)
xor
cs
mov
lods
pop
(bad)
ret
inc
icebp
xchg
fcom
jae
stos
inc
js
pop
or
mov
stos
aad
mov
xor
push
cdq
jns
out
sub
sub
fstp
adc
out
movs
or
jp
stos
cmp
cmp
jge
mov
leave
sbb
cld
mov
not
in
outs
mov
xor
adc
test
mov
add
mov
shl
mov
push
aad
add
xor
or
faddp
jo
cmp
pop
jne
jns
push
lea
mov
and
mov
lods
mov
iret
jp
test
stos
repnz
mov
cmps
inc
movs
sub
push
xchg
loope
scas
cmps
cwde
scas
in
adc
int3
mov
rcl
cmp
jp
xchg
cs
cwde
pop
test
mov
fldcw
mov
mov
sar
push
jnp
xor
pop
ins
or
fwait
sub
cmp
mov
shl
push
jmp
mov
ficomp
setno
fcom
pop
sub
sub
push
or
sub
sub
push
pop
mov
aad
scas
pop
inc
ins
fidiv
(bad)
and
add
ficom
xor
adc
jbe
aad
arpl
ss
and
mov
sbb
pusha
cmps
idiv
jne
inc
dec
xchg
dec
inc
retf
sti
out
popa
aad
stos
pop
sahf
inc
jp
int3
fdivr
pop
mov
cmp
sbb
fnstenv
push
jp
idiv
or
test
xor
fisub
pop
fidiv
repz
mov
cld
fstp
pop
cmp
and
cmc
fisttp
jecxz
popa
sbb
retf
push
cmp
in
mov
ret
cmp
jp
xor
dec
scas
and
mov
push
std
cmp
sub
mov
out
jmp
xchg
nop
int
rol
pop
lahf
sbb
loope
sub
movs
inc
xchg
jg
cli
and
fadd
cmps
xor
pop
jl
pop
cmp
cmp
jl
mov
push
arpl
out
mov
loope
dec
mov
inc
sbb
fwait
ret
imul
mov
adc
xor
out
sbb
jp
inc
(bad)
addr16
sti
shl
fisttp
scas
xchg
sbb
lahf
jne
push
repz
cdq
mov
cmps
aas
pop
int3
call
pop
(bad)
fldenv
jno
cdq
out
or
stc
mov
xor
repnz
dec
retf
iret
dec
fisttp
mov
and
jne
sbb
mov
nop
fistp
fwait
or
mov
adc
dec
cs
(bad)
sar
outs
or
test
lods
hlt
imul
xlat
add
xor
push
je
mov
sub
in
mov
adc
dec
mov
jnp
scas
neg
xchg
jmp
mov
mov
cli
test
and
pusha
sar
inc
stc
mov
sub
lds
pop
inc
test
popa
(bad)
loope
adc
ret
stc
push
test
mov
mov
fldcw
rcl
daa
rol
or
sub
popf
adc
cmp
outs
or
outs
inc
mov
hlt
dec
lds
xlat
loop
mov
popa
out
inc
cmp
push
cmp
idiv
in
and
mov
xor
cli
scas
(bad)
test
lds
pandn
ret
xchg
test
shr
xchg
fidivr
pop
sbb
out
fs
dec
pop
adc
fcmovne
pusha
in
cli
loope
aas
push
retf
jno
icebp
push
cmp
repnz
repz
fdiv
in
xchg
sbb
loop
(bad)
sbb
push
(bad)
cmp
jmp
sub
cmp
add
test
jmp
je
sub
imul
cs
jmp
cmp
das
repz
stc
arpl
out
mov
test
int
inc
pop
mov
movs
pop
inc
jne
repnz
movs
int3
cs
test
sub
mov
mov
cmp
adc
jo
(bad)
(bad)
out
int3
neg
stc
mov
mov
xchg
pushf
out
or
in
inc
int3
mov
jecxz
mov
es
int3
movs
mov
mov
pop
addr16
push
adc
jle
xor
(bad)
sbb
fldcw
scas
mov
rcpps
push
test
iret
mov
and
js
mov
or
xor
push
jge
jnp
iret
sub
pushf
jae
repnz
and
push
jb
sbb
ins
mov
daa
out
dec
jge
imul
fldcw
push
pop
mov
jmp
pop
call
cwde
test
mov
xchg
lahf
and
or
mov
in
mov
sub
sub
xchg
jl
daa
sbb
mov
mov
sub
mov
pusha
cmp
das
xchg
icebp
xchg
cmp
xor
lods
mov
popa
mov
jmp
retf
push
xor
push
mov
fs
cmc
or
clc
xchg
push
pushf
sub
mov
dec
fstp
aas
xor
jg
dec
cmp
mov
adc
sbb
addr16
sub
add
xchg
lds
mov
pop
inc
(bad)
dec
mov
cmps
rcl
in
jb
jne
pop
into
stos
push
adc
xor
add
push
jne
ss
std
mov
ins
(bad)
xchg
adc
dec
mov
mov
jge
sahf
pop
fptan
fcmovbe
dec
es
adc
ins
daa
pop
data16
or
bound
loope
mov
and
jmp
add
adc
xchg
shl
adc
in
cmp
mov
pop
jge
or
scas
addr16
pop
sub
cs
push
or
das
mov
xchg
fdiv
shl
dec
dec
push
out
cmp
inc
jno
add
stos
xor
push
jae
cmps
sub
or
shl
out
xchg
fisubr
and
xor
xchg
data16
stc
arpl
fidivr
adc
mov
es
mov
movs
lea
out
mov
clc
push
ja
inc
pop
and
and
movs
pop
fwait
dec
mov
test
fmul
xchg
push
(bad)
pop
lods
in
cli
jmp
jb
pop
scas
cld
leave
popa
xchg
mov
sbb
call
ds
loopne
das
push
mov
add
cdq
inc
add
cld
cmp
js
mov
mov
or
test
cwde
and
mov
jp
(bad)
sub
out
push
xchg
pop
mov
cmp
test
and
ror
fcmovbe
lods
jns
std
aaa
in
pop
lahf
add
jmp
xor
aas
out
movs
aas
lods
mov
es
stos
xor
add
sub
xor
in
(bad)
addr16
(bad)
fidiv
int
xchg
cmps
push
stc
pop
dec
add
inc
call
pop
mov
imul
push
jg
and
gs
stos
jecxz
or
rcr
or
add
dec
xor
sbb
(bad)
daa
sbb
sbb
scas
mov
inc
sub
sar
add
jg
mov
xchg
loope
xchg
or
(bad)
ins
add
and
and
test
cmps
and
jl
sbb
out
ret
js
mov
lods
outs
xchg
pushf
adc
inc
mov
jae
in
(bad)
(bad)
cmp
shl
arpl
add
test
lahf
pop
inc
or
fdiv
add
or
dec
sar
mov
adc
imul
mov
mov
jg
dec
sub
inc
test
lds
push
and
sbb
xchg
pop
cs
cld
mov
movs
xor
mov
add
dec
in
xlat
in
fidiv
jae
mov
(bad)
cmps
dec
(bad)
jl
adc
mov
push
inc
xchg
pop
in
inc
rcl
mov
sbb
hlt
dec
fs
mov
jmp
sbb
xchg
xor
ja
ret
and
sub
jo
(bad)
jmp
push
scas
inc
push
cld
js
cmps
lea
test
sysexit
jbe
iret
xor
sbb
xchg
push
push
cdq
fild
leave
ja
adc
mov
movs
dec
xchg
jo
push
jo
pop
test
sub
popa
jnp
push
aas
pop
push
test
push
inc
sahf
sub
cmp
retf
mov
scas
push
ret
out
mov
jno
jmp
push
sub
xchg
and
xchg
xchg
push
or
cmps
stos
push
mov
adc
xor
ins
stc
jae
push
call
dec
dec
aaa
pushf
inc
bound
int
(bad)
pop
fidivr
xchg
cld
popf
and
retf
fisubr
outs
call
jmp
pushf
push
cld
sub
ins
sbb
std
lods
popa
cwde
add
(bad)
xchg
sbb
sub
push
je
xor
xchg
stos
imul
js
js
and
rcr
pop
mov
fs
lock
dec
sub
jne
mov
jns
jo
jne
mov
in
xor
ins
mov
test
test
outs
xrelease
add
lods
adc
or
cmp
pop
push
outs
add
mov
dec
adc
lahf
pop
sbb
sub
sub
movs
and
les
fld
stos
test
icebp
adc
pop
scas
ins
dec
mov
ror
data16
mov
(bad)
pop
mov
mov
in
pushf
frstor
int
std
or
movs
or
jecxz
pop
sbb
(bad)
jmp
mov
stos
lods
sub
push
xchg
out
mov
ds
into
aas
mov
movs
sbb
fs
ror
nop
jmp
jl
mov
icebp
jg
cli
cmp
pop
cs
sti
mov
ja
fild
mov
mov
jo
sub
jne
gs
daa
in
movs
or
(bad)
push
cmp
sub
popa
xlat
loopne
sahf
xchg
imul
clc
mov
call
into
les
cwde
fwait
js
gs
sbb
(bad)
bound
cmp
jnp
stos
add
add
and
push
xchg
hlt
jmp
js
ja
push
mov
adc
cmps
stos
shl
push
and
test
adc
pop
(bad)
mov
cmp
fdivr
push
mov
cwde
inc
cmp
mov
xchg
push
add
adc
pop
pop
mov
mov
xlat
inc
mov
daa
mov
pop
pop
das
fmul
sub
scas
(bad)
sub
pop
arpl
mov
cdq
ficom
rcr
mov
and
sbb
hlt
in
inc
retf
cmps
in
stos
and
add
and
outs
mov
outs
scas
push
xchg
mov
mov
inc
arpl
in
out
es
pop
cmps
dec
ss
push
jge
aad
out
jmp
cmp
stos
pop
xor
ss
xchg
stc
std
adc
xchg
mov
push
and
xchg
sbb
push
leave
lahf
fidivr
retf
or
cmp
ja
js
add
fnstsw
push
adc
jnp
jnp
dec
in
not
jbe
adc
dec
push
pusha
outs
inc
sub
int3
ror
push
push
cmp
jbe
imul
psubsb
repz
lods
dec
dec
mov
pop
dec
gs
sbb
mov
mov
mov
xor
mov
pop
jb
sub
test
dec
int
add
shl
sub
cmp
popa
std
jae
push
hlt
(bad)
aaa
add
out
push
rol
xchg
std
xchg
sub
aam
retf
push
xchg
in
icebp
out
lea
fnstenv
ss
or
dec
dec
retf
pop
inc
dec
shl
aaa
push
add
pop
jle
fisub
mov
inc
aam
loop
mov
mov
je
clc
xor
ins
ds
ins
sub
movs
add
cmps
mov
add
mov
cmp
pop
adc
sbb
cli
cmp
xchg
(bad)
mov
push
daa
xchg
fimul
ret
push
pop
or
xchg
mov
inc
fwait
test
rol
arpl
sbb
ss
loop
bound
fnstcw
lahf
and
jg
mov
inc
cmps
push
xchg
shr
add
retf
add
dec
xor
movs
xor
popf
mov
xor
and
add
and
test
mov
and
mov
cld
mov
sub
cmp
mov
int
inc
out
jecxz
mov
pop
mov
scas
retf
cmp
add
test
cmc
into
rcl
cmps
dec
hlt
jb
jne
xchg
ja
and
or
xchg
mov
xor
push
or
push
cwde
mov
out
xchg
jns
jge
sub
push
lea
mov
or
fwait
in
loop
rcr
push
arpl
push
stos
adc
sahf
loope
test
jne
jae
sbb
out
mov
xchg
imul
stos
call
cdq
adc
dec
lahf
mov
(bad)
dec
shl
nop
push
movs
leave
push
mov
std
mov
xor
pusha
mov
loop
xlat
inc
pop
lahf
xchg
out
add
(bad)
jg
jle
xchg
je
enter
mov
aaa
fnstenv
cmps
or
retf
add
dec
pusha
inc
push
add
dec
inc
xor
mov
(bad)
adc
in
xor
mov
jge
xchg
sub
gs
pop
add
dec
dec
mov
call
sub
pushf
push
call
addr16
xor
push
ds
adc
adc
leave
es
pop
add
push
mov
jae
cmps
mov
cmp
xchg
adc
fwait
jb
add
mov
pop
ret
imul
or
(bad)
int3
mov
cli
xor
ficom
retf
lods
leave
cmc
xchg
aaa
int3
pop
daa
adc
or
sub
ror
or
xchg
(bad)
push
mov
adc
hlt
fs
stos
sub
(bad)
mov
(bad)
dec
mov
call
or
iret
in
cmp
addr16
cmc
jbe
xor
dec
vxorps
shl
int3
inc
(bad)
sar
loopne
pop
xor
int
int
and
xchg
add
fisubr
sar
adc
dec
mov
inc
rcr
jo
stos
dec
lea
and
ins
jg
ins
jmp
fimul
ret
jl
sar
movs
cmp
clc
sbb
stos
retf
or
dec
je
(bad)
jecxz
idiv
loopne
cmp
mov
cmp
sub
(bad)
jnp
aam
add
cmp
pop
(bad)
mov
sti
mov
jmp
jne
outs
in
xchg
(bad)
sar
ja
gs
dec
xchg
in
(bad)
hlt
out
or
mov
ja
xor
and
lds
sub
in
mov
cmp
in
pop
loopne
(bad)
jp
movs
sub
mov
gs
(bad)
mov
push
push
mov
or
inc
push
jne
xchg
out
jmp
and
stos
mov
adc
mov
ja
dec
fldenv
mov
mov
das
mov
dec
cmp
pop
and
mov
fincstp
cli
cld
push
or
xor
mov
ret
in
adc
mov
retf
fisub
(bad)
popa
test
in
ins
mov
sub
out
mov
out
add
nop
aad
imul
pop
cmp
adc
mov
ret
mov
xchg
dec
sub
out
jg
push
stos
les
jg
adc
les
sbb
dec
test
in
cmp
jne
push
sub
mov
ffree
adc
daa
gs
mov
outs
popa
add
fadd
rcl
mov
push
iret
(bad)
push
neg
repnz
push
ja
push
add
pop
cld
int
fstenv
jp
push
and
and
xchg
cmc
shl
fimul
in
jns
jo
xlat
fcom
mov
adc
hlt
push
push
inc
mov
ja
mov
push
das
sub
sub
movs
sub
push
loopne
or
sbb
shl
or
xchg
or
lods
dec
inc
out
add
call
and
lahf
enter
das
fadd
retf
out
ins
push
fistp
inc
mov
aam
cmp
mov
xchg
dec
or
adc
ror
call
inc
loope
retf
test
in
pop
into
sub
xor
or
lods
push
jle
dec
lea
jmp
stos
or
sbb
les
inc
jne
jo
push
mov
push
and
sbb
out
push
mov
mov
std
inc
lods
cmps
stos
xor
push
gs
stos
test
nop
mov
nop
shl
scas
mov
sahf
ret
xor
mov
loop
dec
jecxz
mov
pop
push
dec
fldenv
adc
mov
sub
cmc
mov
shl
and
mov
out
int
cmp
jg
xchg
mov
outs
or
(bad)
fs
pop
sub
mov
out
push
ret
sahf
push
add
(bad)
stc
push
sahf
xchg
push
and
push
jns
xor
ins
test
push
mov
pop
leave
xor
loopne
and
and
mov
inc
or
add
xchg
clc
enter
mov
call
(bad)
lahf
daa
xchg
jnp
(bad)
xor
sub
div
xlat
js
inc
(bad)
mov
mov
test
jnp
ret
xor
in
add
pop
daa
xchg
or
cdq
movs
adc
aam
daa
xor
and
mov
test
mov
and
xor
shr
jg
jg
stc
inc
scas
ret
stc
inc
lahf
push
sub
mul
call
in
mov
idiv
popf
daa
dec
mov
sub
adc
xor
pop
inc
cli
gs
mov
lods
inc
push
stos
and
pop
lods
test
out
fmul
xor
repz
ss
xor
pop
(bad)
call
mov
xchg
sbb
and
bound
ret
(bad)
cld
dec
xor
ss
jae
pushf
and
pop
inc
std
push
or
or
push
les
sbb
daa
add
mov
lods
jl
or
clc
shr
int3
js
push
cld
in
pop
sub
and
pop
push
xchg
loope
jns
not
aam
addr16
lods
iret
jns
inc
cmps
test
pop
cmp
ficomp
add
movs
pop
imul
inc
rcl
ror
jg
jmp
fld
dec
fstp
adc
test
fcomp
pop
cmc
iret
jge
cmp
or
xchg
in
add
cli
mov
inc
stos
fwait
pop
call
aam
stos
stos
inc
sti
add
in
lock
imul
test
es
retf
out
scas
lahf
ret
aad
stc
fwait
shl
in
or
mov
cmp
or
call
jl
popa
(bad)
hlt
(bad)
adc
mov
and
ret
mov
xor
cli
ror
repz
or
push
leave
int
xor
xchg
inc
ret
loopne
push
repz
xchg
movs
bound
scas
call
and
ds
repz
lods
test
mov
adc
mov
adc
push
ins
push
pop
mov
pop
sub
loope
in
data16
es
push
cmp
mov
lods
sbb
jle
outs
adc
pop
movs
adc
jne
ds
sbb
sub
(bad)
mov
ror
scas
push
pop
inc
sbb
and
cmp
int3
lea
ss
fistp
test
xchg
ja
idiv
push
mov
sbb
out
in
push
scas
call
hlt
mov
xor
inc
inc
push
push
call
sub
push
je
mov
sbb
xchg
xor
ret
sub
pop
cmps
stos
je
jmp
fadd
test
in
xlat
(bad)
cmp
push
es
push
dec
pop
int
cs
mov
xchg
data16
inc
inc
sub
popf
push
xchg
retf
cmp
inc
mov
adc
xor
dec
inc
cmps
rol
xor
movs
sahf
stc
repz
and
mov
fild
lahf
pushf
call
(bad)
scas
mov
inc
je
mov
xchg
js
mov
adc
es
sar
add
mov
leave
aas
cld
jle
xor
cmp
jge
pop
push
sti
fistp
out
sti
pusha
in
and
sbb
iret
out
leave
mov
ins
cmp
scas
pop
cmp
clc
repnz
dec
fs
lds
cmp
cmp
pusha
mov
stos
stos
or
mov
or
jecxz
les
inc
shl
movs
loope
cs
call
cmp
pop
push
out
arpl
and
pop
ficomp
fcmovb
dec
xchg
ins
push
ss
test
int
cwde
cmps
jne
shr
in
test
lahf
cli
nop
sub
xor
setno
push
ror
cmp
sub
in
sbb
push
arpl
sub
shl
ins
jmp
inc
std
and
fiadd
jl
push
dec
jmp
bound
sub
lock
xchg
lods
loop
icebp
or
ficom
and
fsubr
fdivr
cmps
adc
add
xor
jecxz
ficom
jecxz
pop
or
or
or
shl
(bad)
out
lods
pop
cmp
rol
(bad)
sub
jne
retf
(bad)
xor
fbstp
repnz
neg
or
xor
mov
aaa
dec
or
xor
or
cmp
sub
arpl
jge
stos
sub
mov
or
mov
jo
cmp
aaa
xor
push
add
ret
(bad)
rcl
(bad)
(bad)
mov
inc
in
cmc
hlt
lock
xchg
mov
xor
push
cli
push
add
push
pop
mov
scas
inc
cmp
cli
pop
and
shl
push
mov
fcmovnb
ficom
enter
xor
xor
push
fwait
aaa
in
neg
sub
adc
pop
shr
add
pop
into
pop
fnsave
lahf
jge
xor
jnp
sub
xchg
(bad)
stos
xlat
ins
and
inc
mov
call
pop
sbb
mov
xor
cmp
in
mov
push
mov
pushf
aam
cli
mov
retf
inc
mov
mov
or
retf
ss
jb
push
xchg
mov
cmp
ret
rcr
int3
mov
sbb
mov
xchg
arpl
xlat
add
and
in
mov
fistp
(bad)
loope
je
xchg
or
rcr
xchg
hlt
scas
mov
xchg
cdq
pop
daa
pusha
xor
nop
sbb
mov
clc
adc
mov
in
lahf
cmps
or
popf
mov
nop
dec
ror
out
push
pinsrw
hlt
clc
xor
pop
adc
push
mov
loope
mov
or
stos
(bad)
and
sbb
dec
jb
mov
and
in
adc
enter
jge
mov
test
div
add
sahf
sbb
jnp
mov
mov
mov
lds
int
xchg
push
push
mov
test
iret
shl
jle
jmp
push
arpl
jmp
sbb
in
push
xchg
out
in
dec
pop
mov
xor
adc
cmp
push
js
cld
ficomp
out
fwait
std
inc
pop
aaa
clc
xchg
retf
adc
inc
adc
ret
fbstp
adc
icebp
push
addr16
mov
fcomp
fnsave
clc
pop
sub
(bad)
loopne
cmps
lods
pushw
(bad)
arpl
pop
pushf
ins
sbb
mov
ret
sub
push
xchg
push
push
ficom
lods
loope
(bad)
mov
test
fs
sbb
and
dec
aad
das
xor
cwde
mov
test
jb
adc
add
das
test
mov
lds
sbb
adc
cld
add
pushf
dec
test
jmp
inc
ds
jle
or
mov
nop
push
or
lods
(bad)
pop
stos
cmp
or
add
cmps
xchg
add
add
jmp
cmp
loope
adc
icebp
hlt
mov
test
ins
aam
nop
mov
pop
cdq
gs
imul
xchg
jae
inc
pop
jns
cdq
daa
jno
adc
or
stos
jno
loop
and
loopne
add
mov
outs
ja
xchg
adc
test
push
int
lods
xchg
add
and
movups
lods
xchg
addr16
push
out
rol
in
pop
inc
test
push
add
pop
enter
push
dec
cdq
pop
inc
dec
xor
inc
add
push
popa
pop
scas
xchg
test
fs
fisubr
enter
fucomi
push
jo
lea
or
adc
int
dec
mov
jle
mov
ror
jo
and
xchg
or
test
lods
jp
cmp
cld
inc
jbe
popa
add
push
or
cmp
rol
call
mov
pop
xchg
mov
xchg
scas
mov
adc
mov
les
jmp
and
inc
xchg
jne
stos
adc
pop
aas
ins
mov
mov
sub
nop
or
aas
rol
jne
sti
in
call
and
xor
xchg
(bad)
std
aam
xchg
(bad)
sar
and
leave
shr
xor
iret
xchg
imul
jnp
mov
pushf
inc
sar
xor
imul
xchg
into
dec
sub
or
fistp
mov
inc
mov
clc
(bad)
cld
cmp
call
js
ret
iret
stos
mov
enter
rcl
ins
leave
stc
cwde
retf
mov
sub
in
cmp
dec
sti
sub
ror
push
xchg
aam
sub
push
fadd
ins
std
sbb
pop
xchg
into
jnp
call
daa
or
stos
mov
aad
jecxz
dec
pop
scas
xchg
ss
fstp
mov
sbb
out
mov
xor
sbb
sub
add
fsubr
aaa
(bad)
pop
mov
sub
shr
mov
mov
subps
fmul
cmc
and
outs
fwait
neg
rcr
or
mov
mov
ins
jns
inc
add
mov
inc
hlt
test
mov
daa
lods
imul
jle
or
push
loopne
sub
addr16
jbe
mov
fimul
rol
cwde
aaa
in
mov
loopne
jmp
cs
push
pop
fsubrp
fwait
or
mov
xor
mov
sbb
mov
shr
cs
call
in
out
xchg
shr
xchg
push
bndstx
cmp
(bad)
lock
(bad)
jmp
rcl
sub
gs
ret
mov
pop
add
rcr
add
loop
adc
lahf
(bad)
jbe
scas
pusha
(bad)
xlat
xchg
retf
retf
pop
pop
lds
push
cmps
stc
push
inc
pushf
or
ror
xor
in
xchg
dec
jmp
mov
cmp
aam
or
neg
test
dec
sti
imul
mov
dec
and
push
jne
pusha
pop
jne
adc
mov
lods
and
pop
xchg
and
in
clc
xchg
cmp
addr16
or
aad
adc
sbb
pop
sahf
popf
pushf
pop
xor
(bad)
mov
ret
xchg
xor
outs
mov
jmp
imul
mov
jp
fsub
xchg
ret
js
or
mov
aad
mov
and
enter
jno
sub
push
dec
jns
dec
inc
mov
or
ds
mov
xor
stos
lods
mov
push
repz
jle
mov
mov
mov
(bad)
div
clc
daa
dec
sub
add
jnp
mov
mov
cli
jmp
ja
icebp
add
mov
leave
or
out
xchg
lea
test
inc
fdivr
add
test
sub
loop
arpl
fld
add
je
retf
jg
pop
das
fsubr
adc
inc
push
std
and
lods
inc
cmp
inc
inc
push
into
ret
popf
inc
add
daa
iret
mov
test
adc
jl
xor
and
dec
add
xchg
jmp
or
ficom
into
sbb
adc
add
jb
jg
inc
sbb
gs
pop
add
lods
xlat
mov
out
cmps
sub
dec
xor
dec
sbb
stos
ins
push
test
cmps
xor
dec
sub
inc
repz
push
jge
pop
hlt
pop
and
(bad)
jbe
js
enter
adc
cmp
push
xchg
(bad)
add
add
push
cmps
or
sahf
cld
dec
mov
dec
das
in
loope
sub
fldenv
nop
pop
mov
mov
dec
mov
loope
xor
jge
popa
sbb
(bad)
mov
jle
mov
jecxz
jmp
js
inc
in
mov
outs
jno
and
push
adc
popf
add
aad
hlt
push
rcr
leave
fldcw
sbb
jo
mov
cmc
in
lea
out
imul
rcl
mov
fidivr
retf
xor
mov
ins
in
aas
mov
jb
or
ret
pop
or
add
loope
cdq
xchg
and
dec
xchg
cdq
data16
repnz
pushf
push
cmp
push
mov
mov
pop
in
sbb
fwait
xchg
int
xor
jl
dec
mov
or
sbb
mov
mov
fwait
xor
inc
add
(bad)
loope
push
or
out
cmc
repnz
outs
out
xor
cs
aaa
mov
retf
xchg
int
pop
sbb
and
scas
imul
js
test
xor
in
int3
in
sahf
sub
dec
jmp
ret
ret
dec
push
pop
pop
aad
pop
dec
mov
jmp
in
jmp
jb
xchg
mov
pop
ror
jge
aam
bound
xlat
je
sub
scas
sub
fwait
addr16
popa
mov
add
(bad)
xchg
icebp
loopne
cmp
in
adc
je
dec
fnstsw
push
push
cmc
xor
dec
xchg
popa
out
push
cmp
ds
xor
stc
bound
stc
sub
shr
call
into
push
xchg
ja
jp
push
shl
out
adc
cdq
or
int
jno
ret
jno
jne
nop
test
adc
add
int
push
(bad)
mov
inc
std
cli
ja
cmp
mov
xor
push
xor
inc
cwde
mov
ins
test
ficomp
jns
and
out
or
gs
aaa
sbb
mov
imul
call
mul
adc
and
ret
cmp
(bad)
cmp
sbb
and
sar
ins
out
call
pop
out
dec
add
call
pushf
test
or
je
sti
fsub
push
shl
(bad)
xlat
pop
xchg
lds
and
aaa
out
fldcw
(bad)
mov
in
pop
inc
inc
dec
call
(bad)
and
jno
and
inc
les
mov
cld
jle
mov
dec
mov
xor
aas
and
dec
mov
dec
mov
jo
dec
ja
scas
imul
adc
test
stos
je
data16
mov
fs
in
push
in
dec
bound
ss
pop
popf
lods
add
xchg
jecxz
enter
stc
mov
push
push
xor
das
push
xchg
and
or
(bad)
mov
jbe
and
mov
push
or
das
pmullw
xor
jp
xor
jmp
aad
push
sahf
mov
cmp
xchg
out
cli
dec
or
sahf
fdiv
xchg
ss
cwde
push
mov
cmc
sbb
lods
push
xchg
iret
test
cmps
int3
xchg
pop
mov
jne
sbb
add
cmp
push
xchg
dec
out
fld
push
call
sbb
stc
sbb
cmps
mov
popa
cmc
jg
scas
repz
sub
mov
sbb
lds
out
(bad)
cld
dec
mov
ds
mov
scas
jno
cld
popa
fwait
mov
xchg
int
mov
pop
(bad)
ins
cmp
lea
arpl
stos
fstp
dec
jnp
sbb
je
rcr
fsubr
xchg
add
enter
xor
xor
mov
fcom
jae
loope
rcr
fstp
jno
lahf
inc
xor
xchg
dec
mov
pop
pop
push
ret
cmp
jo
xchg
stc
mov
ror
gs
mov
mov
jecxz
shl
adc
sbb
adc
iret
cmp
(bad)
(bad)
pushf
sbb
dec
pop
sbb
mov
jo
and
sbb
fwait
xchg
mov
aam
lea
mov
mov
or
std
aas
add
xor
test
xchg
push
test
retf
xchg
cmp
je
dec
sub
lock
push
call
jecxz
sbb
sub
pusha
rcr
push
aaa
add
adc
and
daa
or
xlat
or
lods
jo
xor
add
clc
into
sbb
xchg
adc
mov
fs
neg
jnp
xchg
lods
sbb
loope
arpl
sub
mov
scas
pop
in
icebp
mov
push
inc
mov
popf
inc
movs
std
loope
pop
or
mov
xchg
test
push
sbb
add
jbe
push
test
inc
int
shl
adc
cmc
in
mov
out
sub
mov
lea
sbb
das
bound
cmp
mov
cdq
sahf
neg
mov
shl
push
add
mov
data16
xchg
leave
cwde
sbb
mov
test
repnz
xchg
rol
push
push
out
pusha
dec
fcom
or
xchg
call
and
jns
jle
test
mov
inc
pop
call
ret
mov
rol
dec
(bad)
daa
xor
(bad)
(bad)
jmp
loopne
cmp
mov
mov
jno
sub
ret
pop
mov
and
sti
pop
sbb
fucom
add
xor
pop
enter
hlt
mov
ins
pusha
addr16
arpl
add
fbstp
pop
icebp
dec
xchg
jbe
in
and
jle
aad
lods
test
or
mov
into
retf
xor
outs
sahf
fidiv
xchg
dec
sub
jecxz
jb
jne
inc
xor
mov
cmp
fs
mov
and
loope
jno
bound
sbb
pop
pop
aaa
push
sub
sub
cmp
into
and
out
repnz
outs
in
clc
shl
sub
mov
pop
xchg
xchg
xchg
jecxz
jp
add
add
fdiv
push
into
pop
push
scas
jp
scas
inc
or
and
fisttp
adc
cmps
jp
int
repz
les
jmp
xchg
sub
sbb
js
inc
ja
mov
xchg
popf
jmp
popa
or
outs
call
arpl
in
jl
pop
sbb
sbb
sub
or
daa
aas
xchg
aad
add
fidivr
retf
test
mov
mov
repz
mov
mov
jg
fxch
dec
jnp
nop
mov
fs
mov
test
sub
sub
push
jb
call
aad
push
in
scas
retf
inc
in
stos
inc
ror
pop
fild
outs
stc
je
lods
mov
movs
jno
fimul
sub
dec
xchg
movs
mov
sbb
movs
mov
nop
sub
xor
(bad)
dec
shl
add
imul
lahf
dec
vpunpcklwd
jo
jge
dec
and
fsubr
cmp
xor
fnsave
iret
test
imul
sub
jl
pusha
pop
xchg
inc
neg
test
mov
ret
cmp
jmp
cmc
cmp
cmp
cdq
imul
dec
popa
into
add
pop
(bad)
(bad)
add
xor
push
cmp
mov
cmp
or
dec
test
lea
fsub
pop
xor
sti
int3
mov
jns
stc
push
repnz
hlt
push
mov
out
call
ja
dec
xor
lods
fmul
call
cmp
je
jo
jmp
(bad)
gs
outs
cmp
mov
in
fcom
or
sahf
or
adc
unpcklps
mov
sub
jne
ss
pop
sahf
mov
push
repz
inc
xchg
inc
cs
mov
mov
jo
cmp
iret
adc
in
mov
push
jae
pop
fistp
je
mov
test
adc
lahf
and
sub
lds
sbb
arpl
lods
in
mov
outs
xor
mov
outs
(bad)
cli
stos
popf
xchg
jge
and
xchg
jmp
adc
add
jne
dec
jns
mov
jmp
dec
ror
inc
cmp
push
fstp
cs
inc
inc
jns
retf
jmp
stos
push
mov
xlat
cmp
jb
(bad)
div
ds
dec
fimul
pop
shl
aaa
popa
pop
add
and
adc
mov
push
stos
jl
jb
mov
repz
je
in
adc
outs
cmp
mov
dec
inc
stos
stos
inc
(bad)
(bad)
in
mov
stos
lods
shr
xchg
(bad)
stc
xor
dec
pop
fdivr
pop
cmp
xchg
jmp
xor
rcl
mov
xor
xchg
pushfw
cli
or
xchg
lock
ss
jnp
rcr
in
or
loopne
xor
sub
adc
lea
add
pop
in
push
cwde
sub
fcom
jnp
test
cmp
nop
or
(bad)
hlt
daa
shr
lahf
dec
ds
sub
pop
stc
or
pusha
popa
aam
inc
adc
jl
sub
das
or
adc
push
sub
pop
clc
(bad)
ja
stos
and
ss
(bad)
daa
fimul
(bad)
out
inc
or
data16
sub
out
sti
ss
scas
or
xchg
xchg
mov
or
cmp
or
inc
mov
mov
mov
leave
xchg
outs
sbb
xchg
xor
xchg
idiv
in
push
dec
xchg
ins
pop
or
jmp
jmp
idiv
cdq
sub
push
and
add
jbe
mov
sub
inc
popf
fist
pop
out
pop
stc
cli
mov
mov
out
test
sub
nop
cmp
add
test
pop
adc
jb
pop
je
xchg
cmp
adc
ins
push
ins
xchg
mov
bound
mov
sbb
sbb
or
dec
mov
push
mov
std
jmp
ins
pop
jp
clc
dec
cmp
jecxz
xchg
les
mov
sbb
int3
xchg
mov
pushf
call
inc
cld
sub
adc
dec
pop
xchg
mov
adc
fmul
jno
xor
stos
inc
pop
xchg
adc
xchg
fisubr
adc
sbb
movs
stc
push
aam
mov
fiadd
rcl
test
adc
(bad)
cwde
test
les
int3
mov
shl
adc
mov
icebp
adc
mov
test
push
repz
cmp
inc
mov
(bad)
fwait
mov
pcmpeqd
jmp
xchg
pop
cld
daa
int3
sbb
loopne
mov
jle
cmc
or
mul
xchg
ret
repz
jbe
in
nop
lahf
mov
gs
cmp
aas
sbb
sar
push
das
stos
icebp
sbb
aas
sub
pop
js
push
dec
mov
mov
(bad)
in
popa
mov
pusha
retf
jecxz
cmp
fstp
push
jae
retf
sbb
jmp
imul
or
addr16
imul
mov
or
mov
(bad)
sub
(bad)
ficom
and
mov
mov
adc
mov
jge
pop
xchg
inc
xlat
or
and
je
enter
pop
sbb
pop
pop
sub
or
shl
fwait
xchg
das
jb
add
mov
or
test
imul
xor
aaa
fwait
sbb
sub
jecxz
aas
leave
pusha
xor
push
pusha
and
xor
das
stos
shr
je
ror
int3
in
fs
mov
aas
in
adc
mov
dec
add
sbb
out
xor
xchg
mov
cli
dec
gs
sar
mov
out
call
xor
inc
push
(bad)
popf
addr16
push
xchg
sbb
push
fwait
in
jmp
cmps
mov
sub
fwait
inc
jne
stos
pop
fs
and
div
cmp
mov
stos
sub
into
les
jno
dec
out
cmp
mov
push
pushf
daa
pop
mov
or
adc
dec
sbb
cmp
rcr
dec
ins
jmp
cmp
or
pop
dec
(bad)
and
adc
std
sbb
imul
imul
sub
ins
sbb
mov
jnp
push
dec
sbb
dec
adc
push
xlat
mov
movs
cmp
rcl
nop
push
lahf
push
jae
push
mov
dec
inc
jno
xchg
push
fist
ja
and
test
(bad)
ficomp
dec
jnp
rol
(bad)
sbb
sub
cwde
aad
mov
test
ret
call
adc
sub
jb
inc
loopne
pop
push
imul
push
or
cmp
jge
popa
push
adc
bound
cwde
pop
out
and
in
not
fld
add
in
sbb
rol
adc
test
repz
xchg
arpl
scas
xchg
es
sbb
test
test
nop
lods
lahf
arpl
fdiv
cmps
cmc
(bad)
or
jge
lahf
pop
mov
sub
add
fidivr
nop
mov
push
cmps
fcom
mov
test
arpl
cmp
mov
mov
mov
jb
fbld
or
dec
les
sub
xchg
mov
popa
xchg
mov
dec
movs
jne
cmp
ins
dec
movs
fs
mov
adc
mov
or
pop
mov
mov
push
mov
sub
xchg
test
stos
leave
call
adc
xchg
mov
pop
cmovge
push
pop
mov
sub
add
inc
or
dec
mov
add
or
aam
repz
cmp
xchg
(bad)
push
mov
stos
popfw
ins
ja
or
loopne
je
test
mov
sub
rcl
add
mov
inc
in
ins
jge
jb
out
or
sbb
sub
jmp
pop
ficomp
ins
das
ins
adc
or
imul
jmp
out
ja
mov
jg
add
sub
mov
add
outs
jb
lods
xor
in
(bad)
mov
jl
sub
mov
dec
sbb
mov
out
mov
mov
fcom
mov
scas
mov
mov
addr16
fsqrt
iret
pop
cld
sbb
push
(bad)
cli
gs
mov
sbb
les
mov
fbld
sbb
out
test
(bad)
jecxz
repnz
adc
into
mov
xor
inc
test
jnp
or
and
aas
cld
fcom
icebp
cld
xor
add
movs
push
add
int3
pop
jle
int3
clc
or
cs
jle
lods
adc
cmp
pop
repz
ds
ror
ins
jns
adc
sbb
ja
ds
jbe
and
mov
lea
lock
adc
hlt
sahf
idiv
lds
hlt
xor
mov
push
dec
lods
out
mov
shl
mov
dec
jae
inc
mov
(bad)
jmp
pop
pop
cmp
jns
cmp
xchg
cmp
in
and
stos
and
pusha
test
loop
js
outs
xchg
int
dec
sbb
fidiv
xor
sbb
mov
jmp
sub
or
xchg
mov
jl
leave
mov
jns
cmc
push
adc
daa
adc
adc
jne
sub
lods
ss
outs
xor
jp
and
sbb
scas
push
(bad)
push
test
idiv
pop
test
inc
push
outs
inc
cmp
mov
cmps
ret
movs
dec
in
or
enter
cmp
mov
sti
add
and
rol
pop
cmp
xor
pop
xor
sub
cmp
popf
dec
mov
inc
mov
das
mov
pop
in
xchg
call
inc
fmul
lock
xor
or
cmp
add
rcl
pop
scas
xor
fs
jp
xor
sub
dec
(bad)
add
aas
xchg
fdivr
adc
dec
fidivr
ret
and
xor
dec
mov
mov
mov
and
add
arpl
neg
popf
and
inc
mov
scas
sbb
inc
sahf
aad
add
xor
sbb
pop
or
sbb
mov
retf
mov
lds
mov
dec
sub
mov
inc
fld
jne
push
push
jno
inc
inc
sti
sbb
xor
mov
inc
test
add
xor
xor
adc
push
sub
pop
xchg
clc
sahf
xor
aad
stc
enter
fcomp
neg
pushf
arpl
call
pusha
in
(bad)
fist
jno
popa
mov
sti
ins
jns
sbb
xor
popf
sub
test
jnp
push
shl
inc
cmp
out
lds
int
sysret
out
jge
mov
loop
repz
dec
or
retf
movs
jmp
hlt
or
and
iret
jmp
rcr
pop
add
ss
frndint
call
mov
imul
pop
mov
int3
out
(bad)
pop
and
loop
dec
or
mov
call
lods
xlat
push
pop
push
fsub
movs
mov
jno
or
fst
ja
dec
xor
sbb
(bad)
add
iret
call
jo
and
and
inc
and
xchg
clc
mov
or
es
sti
pop
enter
cdq
pop
jbe
dec
xor
jp
lock
daa
dec
mov
xchg
pop
cmp
movs
pushf
ins
stos
sub
shl
and
xor
popf
je
ds
call
cmp
xchg
add
lods
test
mov
xor
xchg
mov
jbe
add
jb
and
es
inc
mov
add
xchg
popa
mov
add
leave
cmps
dec
mul
mov
mov
adc
es
cmp
and
repz
gs
test
xor
fs
outs
mov
loopne
loop
loope
ret
pop
gs
jne
ins
lods
scas
mov
lock
xchg
xor
and
jnp
mul
(bad)
outs
inc
pop
leave
push
sbb
xor
jp
mov
ret
cdq
or
mov
movnti
xchg
leave
add
imul
xchg
pushf
sub
ins
mov
or
jp
(bad)
shl
pop
outs
add
ja
sub
and
push
icebp
adc
and
les
jmp
push
or
arpl
inc
cmp
retf
fstp
popa
mov
addr16
jge
mov
test
xchg
jge
xchg
pop
fwait
mov
rol
jno
dec
xchg
es
jbe
std
std
ins
rcl
or
fsubr
dec
das
cmp
loope
popf
push
xchg
lahf
jmp
(bad)
dec
pop
fucomp
lods
adc
adc
test
pop
jmp
push
and
xchg
sub
hlt
(bad)
push
gs
xor
mov
inc
je
inc
movs
pop
out
xchg
neg
arpl
lods
pusha
nop
cld
shr
sbb
cdq
mov
dec
mov
jmp
hlt
fcomp
out
stc
dec
push
aad
mov
mov
push
daa
inc
ret
or
xchg
pop
ret
jp
dec
xchg
push
sub
nop
hlt
cli
aam
xchg
jge
mov
outs
xchg
sub
mov
cmc
ret
movs
sbb
add
ins
in
cmp
dec
icebp
sub
je
mov
mov
loopne
in
fwait
sbb
mov
xor
mov
fistp
sbb
daa
xchg
adc
dec
and
out
mov
movs
test
xchg
dec
out
leave
and
(bad)
fnstcw
dec
leave
xor
in
ins
dec
sub
imul
ja
sub
cdq
cmp
shl
and
jne
xchg
sub
cmp
cmps
inc
inc
xchg
bound
movs
cs
mov
iret
cli
sub
pop
ja
lock
xchg
push
mov
loop
es
pop
add
ret
fsubr
mov
dec
loope
imul
sub
fwait
mov
fimul
ret
inc
lahf
loop
je
mov
pushf
std
fcmovbe
mov
inc
in
mov
dec
inc
or
sbb
ret
push
jg
inc
fisttp
sub
js
xor
jnp
jmp
imul
ins
popf
mul
inc
xchg
aad
push
mov
addr16
out
dec
add
xchg
mov
jne
nop
mov
mov
das
ja
jle
call
retf
cmps
mov
jmp
nop
mov
push
dec
mov
pushf
lea
cld
and
adc
pusha
mov
or
imul
sub
fwait
mov
mov
push
sub
loope
ja
std
dec
cs
or
adc
pop
pop
dec
inc
in
pop
mov
cmps
lahf
mov
xchg
repz
test
mov
pushf
adc
adc
sbb
aam
je
mov
call
mov
outs
in
and
jns
rcl
add
pushf
mov
mov
and
push
fild
xlat
push
push
sbb
sbb
mov
stc
shr
ret
loope
sub
inc
and
sbb
cld
mov
call
pop
sbb
je
cmp
jbe
cli
test
cmp
dec
outs
and
cmp
push
jbe
repnz
outs
retf
loopne
in
loopne
addr16
pop
fist
inc
je
cdq
cmp
pop
cdq
and
pop
jae
or
movs
cli
cdq
cmps
xor
(bad)
xchg
into
cmp
into
mov
retf
test
or
out
push
adc
adc
idiv
gs
scas
and
mov
jmp
repz
fidiv
sub
jge
leave
cmps
and
rol
ror
dec
loope
mov
dec
cmp
mov
mov
ss
scas
sahf
mov
push
or
scas
cmp
push
add
enter
cmp
mov
cmp
sar
(bad)
dec
pop
js
mov
idiv
mov
fidivr
out
sbb
jecxz
jecxz
dec
sbb
pop
mov
and
sub
lods
mov
mov
xchg
push
jne
pop
cmps
mov
les
inc
or
push
and
out
push
ret
pop
push
mov
es
add
inc
adc
mov
test
mov
sahf
aaa
ret
pop
movs
mov
push
mov
jo
xchg
call
in
enter
xor
lds
in
push
mov
bound
fld
das
push
pop
fidiv
dec
mov
xor
int
call
add
sahf
mov
mov
mov
sahf
xchg
jmp
(bad)
repnz
mov
pop
push
shr
push
mov
test
dec
inc
dec
fimul
push
push
call
mov
ret
in
fldenv
cmc
mov
leave
mov
jg
xchg
inc
retf
push
sbb
cli
sbb
pop
or
sub
push
jp
push
lea
pushf
push
jle
jne
gs
fsubr
jl
call
retf
dec
xlat
jns
fidivr
aad
dec
and
sbb
jp
jmp
in
cmp
loope
ja
jns
mov
seto
xor
cmp
adc
out
sub
sti
or
push
sub
push
mov
xor
jmp
inc
dec
and
or
sti
mov
dec
xchg
sub
call
and
lds
leave
push
add
dec
mov
push
dec
int
xor
aas
push
xchg
inc
aad
add
sub
push
sub
outs
push
push
mov
mov
dec
mov
das
stc
clc
stos
std
jg
jne
jl
pop
out
fwait
ja
jge
cwde
clc
cdq
jae
xchg
dec
adc
or
mov
inc
push
nop
mov
lock
nop
cmc
loope
jmp
and
cmp
fidivr
jns
mov
daa
shl
mov
and
jno
mov
mov
or
xchg
pop
mov
sub
test
data16
jmp
pop
jg
mov
mov
mov
push
retf
int3
xchg
daa
pop
jp
lods
sub
icebp
inc
stos
test
retf
iret
mov
jbe
retf
loop
or
leave
mov
jp
aas
cdq
mov
das
aam
imul
jns
mov
out
sub
retf
movs
imul
jbe
add
mov
push
cmp
mov
cmp
add
into
or
and
lahf
out
jne
je
push
cmc
mov
rcr
cwde
gs
int
adc
lods
jecxz
es
aad
pop
or
xor
js
adc
mov
ss
xchg
ret
xchg
mov
inc
dec
rcr
push
inc
jg
jns
js
jo
jge
repz
loope
jmp
xchg
iret
xchg
(bad)
call
mov
jo
inc
shl
lahf
(bad)
push
and
xor
push
and
int
mov
aas
pop
sub
mov
enter
fld
xor
mul
outs
in
or
sub
mov
hlt
add
push
es
std
push
shl
sub
or
sbb
sub
add
xor
test
neg
test
jmp
pop
jnp
ins
adc
mov
fcomp
fmul
adc
imul
add
fwait
xlat
(bad)
in
sbb
push
mov
mov
sbb
imul
(bad)
outs
add
xor
clc
out
push
push
jmp
je
stc
push
cdq
push
xchg
loopne
jmp
or
adc
cmps
stos
mov
and
mov
fistp
sbb
jno
sahf
lds
mov
test
pop
fcom
std
and
push
xchg
loop
fisttp
mov
(bad)
xor
mov
aad
mov
sub
or
(bad)
fist
fdiv
or
out
repz
or
stos
xchg
lock
jns
xchg
loopne
and
pinsrw
in
jbe
les
iret
loopne
ja
and
scas
nop
imul
sbb
lea
dec
adc
rcl
ror
dec
jp
sar
ins
outs
dec
xchg
cmps
ins
idiv
sbb
push
jne
lahf
ret
gs
inc
cmp
ror
lea
mov
mov
add
ss
cmp
sub
std
pop
int3
movs
xor
ins
xchg
retf
xchg
fiadd
(bad)
fwait
cmc
movs
stos
gs
mov
push
stos
cmova
pop
sub
push
cmps
pop
leave
in
add
mov
dec
movs
adc
sti
dec
xchg
movs
push
sbb
jg
xor
pop
sub
or
jnp
lea
aam
ja
jbe
mov
in
mov
mov
(bad)
test
mov
cmp
in
mov
add
int3
daa
or
fild
sub
mov
mov
fisubr
mov
adc
cli
and
jb
loopne
pop
adc
fadd
adc
movs
or
fyl2x
xchg
lods
aam
aam
xchg
xor
add
jne
fbld
pop
aam
push
add
xor
test
(bad)
jl
inc
sub
pop
stc
out
jl
je
jo
xchg
pop
pop
adc
jns
dec
shl
in
rol
cmp
mov
fiadd
xchg
ret
dec
inc
rcl
pop
fimul
and
arpl
and
dec
and
add
xchg
pop
xlat
mov
retf
or
dec
inc
scas
clc
loop
shl
(bad)
fisttp
outs
out
sbb
icebp
jnp
fucomip
jp
pushf
aam
jl
or
sar
test
jge
iret
aad
inc
or
retf
push
hlt
mul
push
pop
jno
mov
cmps
dec
push
sbb
std
mov
dec
xor
mov
dec
out
sub
nop
add
shl
(bad)
mov
lock
pop
inc
test
pop
or
jae
pop
popa
mov
adc
sub
adc
pop
lahf
jp
and
fcom
push
mov
ins
lahf
outs
mov
jmp
(bad)
xor
adc
retf
stos
(bad)
pop
in
cmp
pop
sar
jbe
div
xor
push
out
inc
in
lock
xchg
sub
adc
sbb
cmps
jb
sbb
xchg
push
inc
sub
xor
bound
xchg
and
js
xor
repz
lods
add
outs
ins
push
fwait
nop
pop
clc
popa
js
test
lock
and
or
jnp
pushf
lds
or
aaa
test
jb
push
pushf
div
sbb
pusha
fcomp
popa
add
test
pop
xchg
loop
mov
fild
shl
pop
push
mov
mov
pop
and
inc
adc
xor
sbb
(bad)
sub
sbb
mov
xchg
xchg
or
xlat
ja
js
aad
mov
push
push
cmp
enter
scas
mov
or
int3
xchg
arpl
add
loop
shr
imul
fsub
(bad)
int3
push
jno
popa
dec
pop
imul
mov
repz
sbb
pop
pop
sbb
cmps
cld
xor
or
dec
jmp
sbb
daa
ret
fdiv
adc
fnstenv
adc
sub
popf
jns
jmp
add
shl
(bad)
dec
pop
mov
loope
sbb
adc
lock
arpl
mov
mov
sti
add
sbb
pushf
push
fwait
xchg
adc
icebp
(bad)
mov
xchg
push
dec
inc
icebp
or
push
sahf
mov
and
and
pusha
lods
jo
int
jge
and
pop
test
rcl
add
add
addr16
cmc
ss
ja
cdq
inc
pop
ret
stc
mov
arpl
add
mov
sub
inc
int
in
cs
add
mov
inc
daa
mov
xchg
sar
add
in
mov
push
les
outs
ret
fdivr
mov
imul
dec
xchg
dec
fisub
cmc
cmp
pusha
(bad)
push
adc
rcr
in
push
hlt
in
test
xor
xor
pop
jns
or
pop
pop
pushf
xchg
dec
outs
push
sub
daa
xor
xchg
ins
jmp
jg
(bad)
jmp
movs
dec
rol
jmp
xchg
jne
retf
lds
add
movs
xor
loopne
mov
fcom
ret
es
test
xchg
mov
add
lods
(bad)
mov
leave
inc
lock
shr
js
data16
inc
xor
cld
(bad)
mov
lahf
fsubr
mov
sbb
cmc
ins
(bad)
xchg
rcr
imul
rcl
mov
jne
inc
cli
movs
mov
dec
jg
pop
rol
push
fidiv
loopne
xchg
leave
ins
in
mov
dec
cdq
div
out
scas
cmp
sub
sbb
test
pinsrw
cmp
dec
in
(bad)
mov
pop
and
fidivr
punpcklbw
jne
adc
call
daa
fmul
adc
out
adc
jno
sub
leave
pop
leave
aas
xor
mov
gs
data16
jne
xchg
xor
and
iret
sub
mov
and
xor
sbb
mov
push
cmps
sbb
lds
sub
inc
push
cmp
setp
out
les
inc
xor
pushf
cmp
test
dec
sub
imul
cmc
(bad)
nop
mov
ja
bound
ret
adc
push
jp
dec
ret
push
imul
mov
add
sub
in
push
mov
sbb
jno
ret
fcom
sti
jge
in
rcl
cmps
pushf
jge
icebp
rol
jae
push
mov
movs
sbb
call
adc
retf
inc
sub
cmps
inc
dec
cmp
adc
push
fs
aad
mov
fucomi
push
add
mov
add
push
and
sbb
mov
xor
dec
out
lock
xchg
xor
movs
jo
mov
fisttp
repz
pusha
and
lock
pop
imul
cli
xchg
inc
pop
imul
(bad)
jmp
sbb
lods
lock
dec
sbb
inc
cmp
pop
stos
xchg
inc
xor
cmps
pusha
(bad)
and
mov
int
adc
ror
fsub
scas
pop
into
lock
adc
in
dec
dec
or
clc
xor
inc
mov
fidivr
ret
inc
ror
retf
lods
dec
push
pop
ret
cmp
push
jmp
or
int3
mov
iret
ins
je
retf
or
sbb
mov
adc
pop
dec
pop
pushw
adc
out
mov
add
(bad)
in
ds
xchg
in
mov
(bad)
mov
(bad)
fscale
push
popa
sub
aaa
(bad)
sbb
cld
mov
std
sbb
out
sub
enter
mov
call
loope
dec
movs
aas
jmp
cmp
rcr
xor
cmps
inc
(bad)
movs
mov
jg
test
mov
pop
ins
fcomp
add
clc
inc
ror
inc
add
sub
pop
jg
sub
into
and
sub
sbb
mov
sub
pusha
add
add
mov
outs
popa
stos
and
push
ins
pusha
inc
loope
stc
push
sbb
lods
push
add
jne
inc
out
ror
and
pop
dec
das
jns
(bad)
sbb
sub
popf
pop
and
or
xor
and
(bad)
dec
out
xor
mov
and
mov
in
sbb
xor
xor
pop
leave
ffree
mov
imul
or
test
mov
adc
icebp
jo
cld
lea
retf
enter
push
test
sbb
push
fs
pop
cmp
sub
add
shl
sbb
popa
jnp
inc
aas
push
in
cmp
adc
jno
mov
xor
mov
(bad)
push
sub
mov
(bad)
fucom
mov
int3
js
dec
lahf
cwde
sbb
inc
sahf
add
imul
dec
push
pop
stos
adc
sub
or
aaa
dec
daa
pop
aad
pop
imul
xchg
jl
jnp
add
push
push
lock
fs
fist
repnz
xor
sahf
ins
loopne
repz
aam
mov
and
jne
adc
mov
clc
fwait
cwde
jae
push
gs
inc
sar
mov
shr
sbb
(bad)
jb
lods
mov
add
mov
xor
ja
in
mov
test
fidivr
sbb
push
or
call
in
retf
enter
addr16
fst
std
xor
or
xchg
jno
(bad)
les
je
mov
jno
pop
scas
les
xchg
dec
sbb
pop
leave
dec
scas
jns
outs
iret
(bad)
out
jge
xlat
clc
and
std
test
fsubr
ret
push
inc
inc
xchg
cmp
xchg
rcr
cdq
std
push
sub
fnstcw
(bad)
xor
inc
xor
mov
ret
jle
xor
push
(bad)
sub
aas
jb
sbb
pop
jge
cld
xor
xchg
enter
mov
ret
or
repnz
pop
cmc
push
les
mov
lods
xchg
ins
call
jo
shl
sub
cdq
jb
je
push
mov
cmp
pop
icebp
pop
inc
inc
pop
xchg
daa
nop
cmp
jp
jge
mov
inc
fs
(bad)
aas
sbb
mov
adc
mov
out
push
ficom
stc
ins
pop
lahf
cmp
cmps
jg
gs
into
(bad)
sub
out
les
xor
and
mov
popa
mov
idiv
xchg
in
xor
aaa
jns
and
es
lods
cmc
neg
cld
cmps
mov
push
bound
inc
cdq
sub
loopne
fstp
cmps
add
jp
xor
add
daa
das
(bad)
mov
lods
out
pop
xchg
sbb
mov
gs
dec
or
cmps
cmc
mov
fs
repz
out
pop
xor
and
or
scas
ja
sbb
cmc
test
leave
push
dec
fcmovu
mov
push
xor
push
nop
sub
outs
inc
jo
movs
shr
pop
addr16
pop
inc
push
popf
mov
dec
repz
sbb
and
mov
push
pop
call
cmp
and
push
inc
ficom
mov
mov
scas
fwait
xor
mov
push
cmp
or
mov
xor
inc
inc
adc
ss
pop
inc
out
es
(bad)
fsubr
push
popa
push
mov
sub
lea
xor
sti
xor
adc
sar
arpl
sahf
in
test
xchg
mov
lea
jmp
mov
adc
daa
outs
rcr
or
mov
das
cmp
inc
mov
fcmovne
nop
arpl
cs
mov
test
inc
popa
aam
add
fdiv
mov
sar
jmp
xchg
das
sub
cwde
ins
movs
scas
pop
clc
sbb
test
push
sbb
aam
ins
dec
sub
fwait
xor
push
jns
movs
adc
loope
retf
(bad)
call
dec
jg
stos
(bad)
dec
xor
in
and
in
cmp
push
fs
mov
mov
add
mov
aad
fisub
and
nop
sti
adc
ror
nop
ins
dec
dec
cmp
mov
cmp
jle
jecxz
test
(bad)
jecxz
sub
push
ret
hlt
adc
pop
(bad)
adc
dec
or
and
loop
xor
inc
dec
mov
xor
add
dec
dec
add
inc
cdq
int
xchg
test
xchg
and
imul
fsub
scas
and
jae
mov
sahf
push
xlat
cs
aad
or
add
push
bound
cs
mov
xchg
add
push
loope
loop
and
les
lods
(bad)
out
out
aas
movs
xor
(bad)
aad
outs
in
(bad)
nop
in
es
mov
jb
retf
cld
xlat
(bad)
jg
mov
add
aaa
nop
and
movs
(bad)
xor
push
imul
loop
jmp
jecxz
in
loopne
lods
cmp
aam
sahf
les
xor
mov
mov
jecxz
xchg
in
test
(bad)
in
loopne
sub
aaa
rcr
mov
ja
bound
fild
and
adc
cs
call
jl
jge
repnz
mov
sub
adc
cld
out
mov
push
sub
add
push
mov
retf
inc
imul
pop
retf
xchg
sub
push
mov
sti
sbb
lock
pop
daa
xchg
cmp
fwait
call
(bad)
mov
push
fild
fist
dec
cdq
sbb
add
lods
cmps
in
xchg
nop
aam
and
addr16
mov
push
repz
ins
pop
xor
add
cmp
test
add
xor
fist
or
(bad)
mov
stos
lea
stos
adc
jmp
addr16
test
mov
pop
jno
pop
fistp
inc
test
cmp
retf
stc
scas
and
push
mov
ret
and
shl
ret
adc
inc
dec
sti
gs
retf
xchg
mov
pop
xor
popa
mov
popa
xchg
add
mov
rol
add
sub
addr16
popf
push
dec
sub
test
es
mov
loope
lods
iret
jge
push
(bad)
fstp
call
and
loopne
mov
and
push
clc
das
adc
(bad)
cs
mov
sbb
and
and
fidiv
inc
into
int3
fadd
push
or
jno
jecxz
fisubr
push
popf
jl
xor
mov
push
xor
pop
call
rep
cmp
iret
shl
jle
sar
pop
enter
packsswb
popf
inc
jmp
xchg
or
nop
mov
test
push
fild
pop
or
dec
adc
cmp
ficom
sti
ret
lods
and
cmps
or
pushf
repz
cmp
fs
mov
add
dec
dec
dec
jne
and
aaa
jmp
bound
in
jbe
xchg
jp
or
adc
cdq
dec
shr
mov
dec
and
imul
ficomp
sbb
mov
or
xchg
mov
lods
arpl
shl
fild
fistp
rol
sbb
js
and
iret
sbb
lea
retf
ret
aad
pop
in
push
jns
jge
mov
and
cmp
jecxz
mov
inc
inc
mov
cmp
jb
sub
arpl
call
push
jmp
aam
xchg
in
cli
scas
cmc
repnz
xchg
mov
add
and
jb
retf
push
mov
adc
pop
and
jl
mov
jg
xor
and
or
or
inc
mov
movs
push
cwde
aam
pop
dec
mov
sbb
in
push
out
data16
sub
sbb
push
push
jl
inc
jnp
mov
imul
(bad)
fisubr
dec
push
stos
stos
sbb
or
adc
popf
outs
dec
out
push
xchg
stos
dec
cmp
pushw
adc
xchg
jl
call
xchg
in
pusha
fst
retf
dec
sbb
xor
stc
out
fs
mov
(bad)
cmp
clc
aas
jmp
and
cmps
js
sub
lea
adc
jnp
cmp
idiv
leave
icebp
sbb
setne
push
ins
ficomp
dec
(bad)
rcl
push
inc
loop
xor
adc
mov
in
cmps
cwde
popf
int3
jmp
cmps
rol
push
cld
dec
rep
stc
and
ror
dec
cmp
retf
cmc
dec
enter
pop
jle
jno
jb
mov
dec
mov
and
mov
xor
nop
jge
(bad)
inc
das
or
pop
movs
mov
and
lea
sar
add
xor
out
sbb
cwde
adc
sub
add
fucompp
xchg
in
outs
sbb
test
sahf
mov
pop
inc
inc
enter
lods
not
pop
or
in
dec
dec
mov
es
cmc
dec
test
lock
jnp
stc
cmps
xor
add
push
jecxz
(bad)
div
and
iret
and
xchg
jb
popf
and
ds
push
stos
test
jnp
mov
shl
lock
hlt
loope
xlat
cmp
mov
dec
mov
and
iret
mov
pop
xchg
pushf
inc
or
jmp
shl
adc
push
dec
mov
fisttp
xor
cdq
dec
je
dec
push
adc
jle
add
nop
dec
push
hlt
retf
pop
add
cld
out
and
addr16
and
stos
movs
mov
mov
int
xchg
ins
cli
pop
lods
push
outs
cvtps2pd
ja
call
mov
xchg
mov
pop
push
adc
mov
xor
xchg
outs
into
inc
lods
fisttp
jge
rcr
mov
pop
std
inc
cmp
jnp
mov
jle
retf
jo
mov
jge
addr16
jle
retf
add
sub
jl
lahf
mov
popf
and
cmp
and
and
xor
jecxz
dec
ss
or
mov
(bad)
push
stos
or
es
sar
mov
repnz
jno
pushf
mov
leave
push
pop
cwde
mov
shl
sub
aas
ret
fsubr
fiadd
push
jns
xor
shl
xchg
xor
pusha
xchg
int
dec
xor
sub
jb
dec
es
jb
dec
sbb
jge
jl
xchg
or
mov
push
in
push
call
imul
inc
outs
hlt
push
mov
scas
fnsave
xor
add
jno
mov
xchg
mov
xor
lock
add
sub
(bad)
and
(bad)
sub
sbb
mov
mov
mov
jge
ins
xor
call
popa
and
sub
in
in
imul
mov
imul
mov
jae
mov
in
out
enter
xlat
and
mov
int
xchg
and
mov
xlat
push
and
push
adc
inc
ins
jb
daa
in
push
vpackssdw
mov
(bad)
jp
adc
sahf
xchg
sbb
adc
sub
jge
ds
ins
fwait
cmc
push
inc
loopne
jmp
mov
lods
sti
out
mov
fimul
sub
into
adc
dec
jge
(bad)
test
or
or
aad
xor
pop
and
in
add
push
push
add
popf
push
add
mov
jp
cmc
adc
or
adc
(bad)
push
clc
cli
aad
pop
sub
adc
pop
rcr
fs
adc
lods
mov
rol
and
mov
ret
cli
call
mov
add
loope
clc
iret
adc
push
jno
in
out
pop
lock
outs
ja
pop
outs
jno
xchg
sub
adc
leave
jmp
mov
adc
mov
bound
inc
cmc
or
pop
js
ret
gs
aam
xchg
push
outs
push
out
retf
cli
out
lds
imul
or
clc
stos
int3
in
iret
sub
jecxz
dec
adc
sub
pop
out
addr16
mov
es
or
lods
fcom
pushf
loope
ins
push
mov
lock
pop
in
mov
(bad)
xor
repz
dec
xchg
fstp
xor
mov
sub
cmps
dec
shr
bound
fs
shl
dec
mov
push
out
cld
hlt
sub
fidiv
cmc
sub
fs
jecxz
jae
jl
mov
xchg
loopne
out
jno
xor
pop
pop
ds
push
cld
inc
sub
rol
popf
or
or
and
sbb
xchg
arpl
cs
imul
pop
(bad)
push
cmp
addr16
xchg
pushf
add
or
jb
or
cld
lahf
leave
xor
cmps
or
les
push
jbe
add
sar
cmp
add
dec
dec
out
imul
lahf
lahf
mov
shl
xor
mov
mov
push
jnp
movs
jg
or
cs
sbb
mov
push
repnz
(bad)
in
jbe
and
sub
imul
inc
retf
daa
popa
add
or
adc
cmp
dec
mov
jb
and
and
mov
fwait
pop
call
sub
mov
cmp
sbb
std
xor
adc
and
push
add
pop
mov
loop
jns
loop
in
pminsw
pop
outs
pop
mov
pop
push
xor
repz
cmc
(bad)
adc
(bad)
mov
and
add
jecxz
adc
mov
mov
mov
imul
mov
cmp
div
rcr
stc
jbe
mov
fsub
xlat
push
adc
out
mov
shr
push
sub
repnz
sbb
aam
in
gs
stos
(bad)
adc
inc
pusha
(bad)
cli
xchg
fist
(bad)
pop
sub
pop
js
(bad)
pop
and
pop
mov
lahf
sahf
and
lods
adc
bound
mov
outs
rcr
jecxz
xor
ins
cmp
xchg
sub
(bad)
jo
push
fsub
rcl
xchg
jge
sbb
pop
aam
outs
or
stos
add
sbb
jns
adc
in
std
cmp
in
jb
(bad)
frstor
mov
clc
jmp
push
lods
xor
push
popf
ret
cmp
loope
ret
lea
aas
daa
add
cwde
fistp
inc
sbb
add
push
pop
mov
cmps
mov
daa
pop
(bad)
mov
mov
pop
dec
dec
int3
sub
cmp
add
icebp
push
div
xchg
bound
in
xchg
hlt
ja
(bad)
out
fldcw
inc
or
push
push
pop
shl
neg
sti
jnp
mov
repz
jae
shr
cli
adc
retf
sbb
push
setnp
mov
into
cmps
sbb
neg
pop
int
div
stc
pusha
adc
icebp
rcl
ret
lods
loope
pop
loop
mov
mov
jb
inc
js
cdq
dec
mov
loopne
jecxz
sbb
and
jo
jns
cmps
pop
call
mov
or
adc
push
in
pop
pop
push
jmp
shl
sub
movs
push
cmp
ret
xchg
xchg
loopne
(bad)
xor
cli
mov
cmps
aas
lahf
adc
jecxz
lock
inc
and
ds
dec
mov
ret
inc
rcl
nop
fsubrp
shl
leave
cmp
add
ins
xor
pushf
mov
fsubr
lods
arpl
mov
mov
xor
inc
and
or
mov
cwde
hlt
jb
rcl
or
test
jge
adc
retf
or
push
cmps
xor
lea
pusha
mov
adc
pop
push
pop
test
pop
shr
je
or
pop
cmp
cmp
mov
in
jo
pop
cdq
cld
inc
or
call
pop
xor
jae
lock
push
xchg
repnz
xchg
pop
dec
jne
es
repnz
call
fnstenv
fadd
bound
enter
retf
in
push
cmp
ror
fldcw
cmp
sbb
pop
xchg
mov
dec
cmp
daa
xor
cli
cld
pushf
pushf
call
pop
(bad)
(bad)
jge
jae
mov
push
call
jo
mov
pop
sbb
inc
jb
ds
in
push
das
sar
popa
dec
retf
dec
push
ins
dec
out
or
std
loopne
cwde
ins
adc
cld
fs
clc
je
enter
in
arpl
popf
test
inc
xchg
sbb
(bad)
jbe
popf
loope
mov
sbb
jo
adc
stos
and
push
jg
fst
repz
in
pushf
xchg
out
lods
or
movs
push
add
mov
adc
ja
xchg
scas
out
xchg
clc
pop
pop
ss
(bad)
hlt
push
sub
push
aad
(bad)
in
sbb
adc
inc
mov
cld
cwde
movs
xor
or
or
push
hlt
mov
pop
dec
cs
pop
movs
dec
hlt
nop
aam
(bad)
push
test
add
aam
out
gs
fs
inc
retf
xchg
fdiv
(bad)
ret
mov
jmp
loop
or
push
(bad)
or
test
sbb
push
cmp
fwait
xor
pop
(bad)
push
mov
fcmovb
cmp
int
xchg
sbb
or
jno
or
push
pop
cmp
das
cmp
jmp
jl
mov
push
out
push
dec
dec
push
in
stc
jmp
mov
inc
int
(bad)
in
pusha
idiv
clc
sub
cli
int
ret
sar
mov
movs
cmp
movs
ret
call
mov
hlt
inc
das
mov
imul
stos
mov
and
push
xlat
mov
(bad)
int3
adc
cmp
inc
(bad)
mov
pop
xchg
bound
mov
push
sbb
loope
pop
rol
xchg
xor
pop
imul
add
dec
les
push
call
adc
mov
test
pop
rcl
mov
int3
xor
loopne
add
xchg
xchg
jp
jecxz
or
sti
in
dec
lahf
cmp
mov
xchg
dec
adc
jno
or
mov
ficomp
sbb
push
push
test
push
inc
outs
add
outs
lahf
(bad)
inc
jge
jp
bnd
jp
cdq
and
pop
push
test
jo
addr16
es
jae
dec
adc
data16
jbe
pushf
in
test
in
mov
lods
movs
jb
int
xchg
dec
mov
ss
repz
mov
loop
jle
mov
jae
jb
cwde
dec
sbb
cwde
ret
sbb
cmp
mov
mov
or
retf
push
sahf
nop
stos
leave
inc
cmp
mov
mov
xor
shl
fwait
(bad)
jg
adc
or
and
cmp
cdq
enter
sahf
inc
retf
mov
jnp
(bad)
icebp
std
push
jl
je
push
int
inc
mov
or
repz
push
lds
adc
sub
pop
pop
shr
jmp
mov
adc
arpl
mov
fdivr
pop
or
xchg
adc
jbe
mov
ficom
mov
push
push
lods
push
or
and
ins
(bad)
in
pushf
xchg
call
cdq
jnp
imul
outs
inc
xor
sti
inc
loopne
xchg
(bad)
call
cmp
sbb
sub
cmps
inc
sub
inc
ins
lods
(bad)
cmp
sar
push
dec
or
jmp
pop
(bad)
pop
ret
cmp
loopne
clc
or
loopne
outs
xchg
mov
(bad)
jp
jns
mov
add
out
sbb
sti
mov
add
xchg
out
fldz
lods
xor
pushf
push
xlat
and
push
mov
cmovae
out
ja
jo
mov
es
aad
stos
clc
jnp
cld
xor
and
xchg
test
call
sbb
xchg
or
or
dec
into
inc
sti
inc
fisttp
jmp
sbb
xchg
dec
fld
mov
pop
ret
ja
jno
idiv
xchg
mov
adc
stos
cmps
int3
ja
mov
xchg
ins
int3
stos
adc
stos
jno
mov
adc
push
ins
add
daa
and
jae
push
ds
es
sbb
xor
xacquire
jns
sti
mov
mov
(bad)
loope
pop
push
out
pop
loop
jb
mov
cmp
aaa
jno
sbb
pop
push
fdecstp
bound
sbb
addr16
test
shl
fld
inc
pop
lock
pop
enter
dec
lods
mov
jmp
stos
(bad)
adc
mov
sbb
fwait
imul
inc
sub
aaa
inc
(bad)
lahf
inc
or
xchg
mov
push
sbb
xchg
arpl
inc
inc
or
inc
lahf
cmp
add
or
jno
lods
std
call
scas
adc
xchg
or
cmp
cld
mov
mov
jp
push
aaa
jno
sti
inc
and
adc
xor
push
cdq
cmp
sbb
(bad)
in
add
mov
stc
jbe
mov
add
jecxz
std
loopne
mov
jl
call
or
mov
dec
hlt
or
mov
scas
cld
test
es
dec
pop
addr16
stos
sbb
pushf
in
clc
xchg
rol
mov
sbb
xor
push
lea
push
mov
cdq
ret
jmp
sub
xchg
(bad)
leave
je
dec
in
mov
jnp
push
movs
stc
mov
cmps
jo
mov
pop
outs
jecxz
rcr
mov
push
pop
inc
add
mov
cmp
dec
mov
xchg
xchg
fmul
xor
pop
stc
enter
add
call
out
std
sbb
dec
pop
pop
inc
(bad)
fldenv
loopne
test
(bad)
retf
movs
retf
(bad)
cmps
ins
clc
cdq
add
pop
call
(bad)
outs
iret
xchg
cmps
dec
jo
into
(bad)
in
pop
(bad)
jecxz
sbb
hlt
and
or
xchg
dec
add
in
mov
add
mov
push
je
dec
out
popa
data16
ins
scas
xchg
push
outs
add
int
enter
lds
add
test
cmp
xchg
mov
and
popf
(bad)
stos
or
xchg
mov
cmp
mov
xor
mov
pop
dec
mov
mov
or
sbb
inc
leave
pop
ins
jp
movs
test
lea
ret
sbb
bound
(bad)
mov
sub
scas
pushf
mov
cmps
add
mov
xor
xchg
mov
fcomp
shl
pop
icebp
xchg
inc
push
hlt
adc
sbb
sub
or
repnz
aas
cwde
and
pop
push
sti
mov
jo
mov
jae
mov
dec
or
mov
aas
adc
call
push
push
sub
mov
repz
mov
sbb
loopne
cmps
push
loop
or
fcmovbe
xchg
(bad)
xchg
xlat
jp
cs
mov
sub
scas
fs
fistp
push
mov
mov
aaa
hlt
mov
cmp
cli
cwde
inc
push
mov
mov
mov
mov
stos
enter
inc
fild
jl
jns
pusha
mov
adc
iret
xchg
jp
stc
push
(bad)
jle
mov
outs
mul
into
dec
mov
ficomp
jmp
in
adc
cmp
mov
pusha
(bad)
mul
cmp
dec
pop
pop
add
mov
xor
mov
adc
ret
add
mov
xor
dec
cdq
pop
test
inc
pop
ficom
add
jno
repz
es
rol
sbb
pop
jns
daa
push
jns
fist
ja
mov
mov
test
sub
adc
neg
mov
adc
and
xor
lahf
rcr
mov
loop
iret
dec
xor
loope
mov
inc
add
inc
mov
pop
inc
ja
mov
dec
jo
xlat
adc
sub
adc
ror
dec
ret
mov
adc
inc
test
xchg
ret
fdivr
out
add
loop
fcom
jg
pop
hlt
xor
xor
cmp
or
add
pushf
dec
adc
aam
mov
xchg
icebp
in
cmp
retf
fstp
int
jp
and
mov
adc
inc
sub
pop
in
cmc
in
in
push
or
nop
dec
xchg
fadd
jle
xchg
mov
dec
xor
and
mov
push
mov
sti
call
rcr
movs
jg
rcr
cli
fcmovnbe
dec
fistp
(bad)
cs
retf
cli
and
scas
push
adc
and
loop
call
mov
adc
adc
(bad)
mov
dec
xor
addr16
xlat
mov
jnp
aas
repnz
push
(bad)
xchg
pop
mov
ja
cli
aaa
add
(bad)
cli
dec
lahf
arpl
cmp
push
dec
jle
push
pop
cmps
or
jmp
out
idiv
mov
stc
fbld
ror
jne
jge
fbld
mov
add
xor
xor
xor
fisttp
push
into
in
into
push
push
add
stos
or
add
push
ss
ret
push
and
mov
xor
sahf
outs
push
test
outs
pop
adc
nop
pusha
cdq
movzx
bound
jno
push
data16
sbb
retf
mov
jno
pop
jge
lods
stos
das
mul
jae
addr16
xchg
and
jmp
sub
lock
jge
xchg
pop
mov
mov
pop
inc
sub
sub
mov
add
sbb
ret
je
cmp
mov
xchg
or
jns
or
add
jecxz
mov
sti
leave
jb
js
in
dec
inc
cmp
int
fimul
push
push
dec
adc
into
sub
pop
out
addr16
sub
rcl
lods
inc
aas
lea
repnz
push
or
sbb
sub
leave
fstp
sub
mov
repnz
imul
sbb
retf
push
and
jne
sbb
inc
sub
fstp
sub
mov
adc
mov
ja
test
iret
inc
cld
and
mov
bound
push
adc
neg
pop
fbstp
rcr
xor
push
push
out
mov
sahf
adc
push
add
repnz
ins
sbb
xchg
jg
cmp
fstp
clc
push
mov
mov
cmp
loope
test
rol
xchg
ficomp
aad
fcomp
push
stos
dec
or
std
mov
pop
xor
mov
sub
sbb
xor
fist
lahf
or
sbb
or
mov
dec
xchg
mov
sub
enter
inc
xor
outs
inc
and
or
aas
xlat
xor
xchg
sbb
push
dec
cmps
dec
gs
dec
push
ins
sbb
pop
loop
jns
add
jg
push
dec
cwde
jbe
dec
pusha
cdq
dec
mov
mov
aam
sub
xchg
mov
cld
sbb
xor
pushf
(bad)
pushf
ds
lahf
clc
(bad)
retf
xor
les
in
xor
ror
inc
xchg
popf
fmul
mov
add
movs
add
sqrtps
jmp
dec
and
or
addr16
fisubr
cmp
fucom
(bad)
and
fcom
ror
add
mov
sar
sahf
xchg
cmps
cmp
(bad)
and
retf
(bad)
dec
fbld
icebp
clc
cmp
repnz
xor
imul
or
fnstcw
in
into
mov
aam
adc
or
xchg
fldenv
fmul
sub
jecxz
or
out
cmps
sub
lds
pop
cmp
push
stc
dec
aaa
pop
sbb
add
sbb
mov
stos
lock
or
call
lahf
xor
ss
pop
arpl
cwde
or
push
push
stc
push
xchg
les
pop
fcomp
adc
fwait
out
dec
js
jmp
cmp
sbb
sub
add
cmps
sub
repnz
adc
dec
ret
xor
scas
nop
inc
or
xchg
addr16
inc
ret
pusha
mov
dec
out
adc
xor
push
sbb
pop
clc
pop
loopne
minps
sub
dec
mov
mov
lock
data16
adc
mov
jge
imul
or
xchg
adc
pop
std
jns
xor
xlat
loop
inc
or
and
lds
sbb
push
int
push
retf
or
lods
out
pop
xchg
add
mov
(bad)
lds
fistp
stos
call
mov
inc
les
inc
adc
mov
mov
pop
mov
push
mov
dec
scas
aam
adc
pop
sbb
test
fild
ror
cmp
adc
push
cmps
inc
test
pop
adc
mov
(bad)
xchg
jbe
call
iret
repz
fwait
cmp
cdq
add
mov
or
xor
loope
daa
or
add
xchg
sbb
mov
bound
in
cmp
sub
sbb
jmp
or
jg
xlat
xor
adc
repnz
daa
push
jg
imul
xor
mov
adc
js
dec
or
adc
pop
ret
xchg
dec
or
lock
add
jbe
or
sbb
je
mov
jmp
xchg
mov
es
xor
xor
sbb
ret
call
pushf
(bad)
pusha
js
push
int3
iret
jmp
sub
or
scas
call
sub
cs
xchg
push
push
jbe
push
call
(bad)
mov
mov
or
adc
push
push
add
adc
pop
pop
dec
movs
stos
test
(bad)
pop
ins
enter
adc
popf
fldenv
stos
or
(bad)
fs
fcmovne
or
inc
mov
mov
xor
into
sub
call
xor
fimul
push
inc
and
jnp
gs
fstp
jge
xchg
pop
test
mov
cdq
out
fs
in
ja
xor
call
sub
inc
adc
movs
and
add
(bad)
adc
leave
test
mov
xchg
in
xchg
or
sldt
fmul
mov
stos
stos
int3
pop
jp
mov
jno
outs
inc
adc
lods
jnp
jle
loope
cmp
inc
dec
aad
mov
jns
xchg
sbb
mov
jle
repz
je
fisttp
adc
dec
cmp
adc
(bad)
scas
mov
pushf
cmp
stos
cdq
test
movs
fwait
outs
xchg
mov
adc
stos
push
sbb
xchg
jbe
jl
sbb
dec
int
push
or
pop
jp
jne
mov
sub
out
xchg
push
lods
xchg
stos
loope
enter
frstor
mov
xchg
xor
add
jl
stos
addr16
pop
popa
adc
push
repz
mov
mov
jp
call
add
mov
xchg
rol
repnz
aaa
das
jae
arpl
loop
das
ror
xchg
leave
movs
fiadd
push
test
push
push
(bad)
in
aam
cmp
cdq
imul
dec
data16
fscale
loope
mov
aam
sub
outs
fnstsw
xchg
sti
cli
or
das
je
jbe
jmp
jo
frstor
retf
mov
retf
cld
sub
fidivr
std
xor
add
movs
jg
ror
cld
add
cmc
push
mov
xor
sbb
test
xor
dec
xchg
(bad)
or
fidiv
or
jl
pop
out
mov
mov
push
sub
push
out
std
adc
mov
mov
fs
mov
xor
xor
xchg
fwait
cmps
inc
arpl
fsubr
mov
push
mov
push
sbb
bound
sbb
ds
inc
pop
adc
rcl
jp
movs
shr
adc
pop
mov
enter
adc
gs
push
jle
imul
repz
xchg
sar
sub
inc
xchg
cmps
test
add
jno
pop
call
sbb
(bad)
fadd
out
sbb
sbb
dec
loop
or
paddq
mov
add
mov
push
jns
push
sbb
clc
jb
xchg
loope
xchg
dec
mul
pop
lods
imul
pop
cmps
mov
pop
loopne
mov
mov
fimul
out
rol
or
pop
cmps
stos
mov
dec
fdiv
stos
or
push
and
data16
jmp
push
jl
mov
mov
mov
mov
lods
shr
jmp
adc
mov
mov
jg
or
inc
imul
aam
sahf
imul
repz
in
dec
(bad)
pusha
xlat
movs
fwait
cmp
or
jo
fsubp
(bad)
ss
adc
rcl
in
and
sub
pop
jnp
cmps
(bad)
test
cmc
shr
xor
mov
fldenv
push
shl
adc
push
jns
xor
jbe
inc
pop
mul
into
cmp
inc
and
popa
ret
pop
and
retf
add
add
leave
jecxz
sub
aam
or
rcl
test
mov
pop
lods
add
fild
push
in
jl
popf
icebp
nop
xor
pop
imul
push
ret
mov
out
sbb
mov
inc
pop
inc
xlat
outs
test
pop
retf
nop/reserved
loope
inc
mov
jmp
pop
xchg
add
fs
nop
scas
sub
(bad)
aaa
and
es
lods
icebp
addr16
lock
not
pop
stc
pop
out
ss
inc
dec
aaa
arpl
mov
xchg
mov
(bad)
jmp
push
add
or
xor
push
pop
jno
cmp
or
arpl
mul
jle
enter
pop
mov
jns
sbb
pop
ja
adc
adc
outs
adc
push
cdq
mov
xor
dec
push
xchg
cwde
jmp
sbb
jp
fsubr
dec
and
push
xor
scas
scas
xchg
inc
gs
push
mov
dec
xor
in
inc
ret
cmp
mov
leave
push
xchg
int3
(bad)
sbb
xor
sbb
sub
mov
push
adc
mov
inc
pop
stos
xor
pusha
dec
lea
stc
jno
mov
clc
data16
and
repz
xchg
movs
xchg
mov
pop
inc
test
cmp
jne
call
scas
aad
je
xchg
ret
mov
push
cmp
pop
pop
lods
mov
xchg
cs
mov
bound
inc
pusha
fldcw
stos
mov
cmp
ret
ror
fnstcw
adc
add
jmp
sub
and
dec
in
dec
ret
xor
loope
pop
adc
pop
out
out
mov
cmp
iret
cli
lods
fld
or
outs
retf
mov
sub
jo
out
xor
in
in
xor
lahf
mov
cdq
jge
dec
mov
ffreep
add
add
xlat
cdq
dec
cld
cld
rcl
mul
fcom
imul
in
add
jbe
xchg
sub
cli
popa
push
xor
push
push
mov
fadd
dec
cli
pop
in
xor
inc
lahf
scas
in
push
dec
outs
xchg
sti
dec
push
(bad)
cmc
loope
xchg
cld
ds
(bad)
imul
pushf
stos
adc
mov
mov
pusha
into
dec
(bad)
and
add
shl
jbe
call
or
(bad)
loop
lea
scas
scas
fld
rcl
mov
popf
mov
xlat
xchg
lods
enter
add
dec
lahf
jge
xchg
and
mov
jp
rcl
imul
mov
shl
inc
ja
xor
stos
inc
imul
mov
test
call
js
xchg
(bad)
ds
xor
sbb
mov
xor
inc
and
jge
imul
jmp
iret
stos
(bad)
sar
loop
das
sub
mov
cmp
inc
xor
sti
lea
push
dec
pop
iret
sub
cmps
retf
adc
sub
jb
call
pusha
test
sbb
xchg
sub
mul
jne
inc
mov
dec
repz
xchg
shl
mov
fnstsw
popa
push
in
stos
das
dec
adc
dec
and
test
out
int3
sar
ret
pop
inc
pop
sub
cli
rol
pushf
ins
cdq
and
or
std
hlt
fimul
scas
cli
cli
jns
mov
jae
jb
(bad)
movs
fld
int3
hlt
cmp
push
dec
jge
cwde
sub
adc
rol
jbe
pop
sub
sub
sbb
ret
sbb
(bad)
in
cmc
or
cs
pusha
mov
mov
data16
sub
outs
rol
mov
lods
inc
ss
push
loop
inc
dec
call
inc
fucomi
stos
retf
mov
imul
pop
adc
or
mov
loop
dec
gs
or
fsubp
loop
mov
fld
imul
ret
sub
lock
mov
pop
pop
dec
mov
mov
push
fcmove
ins
rcr
call
daa
jg
repnz
xchg
into
push
imul
inc
pop
xlat
sub
les
xchg
outs
cmp
fwait
imul
push
add
mov
pop
push
mov
adc
js
push
add
test
icebp
or
out
cmp
out
cmp
jge
inc
aas
push
scas
pushf
add
add
fisub
sub
ds
jmp
ror
and
sub
lods
cmp
das
jp
ret
pop
(bad)
fwait
js
cmp
aaa
mov
mov
jecxz
push
and
lods
es
popf
jo
sbb
mov
sbb
scas
ins
ret
cld
adc
sub
mov
cmps
mov
test
pop
mov
mov
push
sbb
pop
mov
mov
ins
jae
dec
rcl
dec
in
xlat
or
and
sti
fs
jne
push
gs
push
sbb
std
cs
fstp
dec
xor
ss
jns
(bad)
mov
sub
ret
aas
lock
jbe
sbb
ret
aad
test
sub
push
in
bound
sti
xchg
sti
test
ins
ret
loopne
jnp
xchg
fisubr
shl
or
jge
jp
xchg
loope
adc
in
es
inc
jle
jle
jg
mov
loop
mov
pop
stc
push
mov
mov
ficom
xchg
xchg
mov
int
jg
mov
out
loope
repz
retf
mov
stos
data16
ror
mov
loope
retf
xor
js
pop
jecxz
test
aas
(bad)
sub
ja
jg
out
and
imul
dec
mov
call
push
test
test
rcl
or
adc
sbb
mov
jne
adc
scas
dec
push
pusha
fistp
fisub
mov
inc
xchg
test
inc
mov
dec
jbe
xor
cwde
pop
adc
aas
mov
or
(bad)
mov
shl
mov
idiv
popa
cmc
dec
icebp
push
and
push
out
pop
cmp
jne
push
sub
enter
push
out
mov
mov
sub
test
mov
out
mov
js
test
aas
(bad)
cmp
sar
xor
or
mov
leave
adc
push
pop
popf
mov
and
(bad)
sub
jnp
mov
add
in
les
mov
cs
cmps
daa
xchg
mov
mov
jb
jns
push
xor
cmc
jbe
xor
(bad)
arpl
xor
and
sbb
dec
add
(bad)
pop
int
jb
dec
shl
cmp
cmp
push
cmp
(bad)
sar
xchg
call
sbb
jg
xor
mov
xchg
ror
ds
loope
xchg
push
jle
and
out
imul
cmc
jg
js
movs
pop
ret
fld
aas
inc
sbb
shr
or
xor
push
mov
outs
fs
test
cmp
iret
sub
in
inc
les
or
push
stc
pop
cmp
inc
icebp
and
shr
and
(bad)
fisttp
mov
pop
or
mov
sar
jle
fs
test
cmp
(bad)
arpl
nop
jae
jl
xchg
mov
mov
mov
push
pop
out
jge
aad
jmp
pop
aaa
out
enter
xchg
mov
daa
(bad)
fst
or
(bad)
enter
sub
mov
stos
fld
mov
shl
rol
frstpm(287
ins
cmp
adc
fisttp
cli
jo
jbe
pop
mov
dec
sahf
dec
add
aam
je
cmp
jae
aad
cmps
add
daa
pop
js
push
(bad)
movs
xor
jno
js
cld
xor
stos
mov
call
pop
pop
sbb
sbb
mov
cmp
std
rcl
scas
mov
pop
stc
(bad)
cli
es
xchg
test
les
mul
fsubr
(bad)
lods
cmp
mov
mov
daa
push
retf
stc
mov
mov
aaa
repnz
xor
test
stc
mov
popa
mov
aam
xor
loop
mov
jno
adc
mov
call
push
test
iret
xchg
mov
mov
dec
outs
or
cmp
xor
sub
popa
cdq
imul
and
test
jl
neg
(bad)
arpl
pusha
stc
dec
inc
sbb
enter
cmp
pop
mov
pop
sbb
out
cmp
arpl
out
dec
mov
push
mov
aas
inc
ja
push
push
popf
cmp
test
add
icebp
sub
popf
sbb
sbb
lea
scas
int
inc
pop
nop
bound
mov
aas
mov
in
mov
push
dec
mov
jmp
cs
jg
cs
call
sbb
outs
cmp
and
lock
dec
jno
add
mov
scas
xchg
fld
outs
sbb
and
std
sbb
pop
add
add
das
fmulp
lods
popa
sbb
xor
and
int3
add
inc
and
outs
xor
or
mov
hlt
aam
push
push
(bad)
retf
and
ror
adc
into
pop
fstp
lds
mov
pop
jmp
add
and
das
out
clc
lds
xor
or
sub
inc
jb
cld
jmp
push
cdq
and
dec
sbb
movs
in
retf
mov
and
aam
mov
ds
dec
mov
dec
dec
ss
xor
je
inc
popa
rcr
inc
or
clc
dec
leave
repz
jl
adc
(bad)
xchg
push
mov
adc
not
hlt
or
in
jbe
int3
push
adc
stos
push
and
fisttp
ja
lods
sub
sub
out
out
(bad)
in
jne
js
or
out
xor
pop
outs
dec
enter
push
in
xchg
mov
add
in
lahf
and
imul
pushf
inc
pop
mov
mov
adc
mov
xor
clc
mov
fst
or
aad
xlat
add
fwait
bound
push
sub
add
pop
push
pop
rol
ins
mov
out
dec
jae
pop
nop
xor
cmp
and
adc
je
lds
dec
test
dec
lods
xchg
mov
bound
test
lahf
test
mov
sub
retf
das
sub
cmp
jle
lahf
movs
inc
sbb
inc
mov
cmp
add
int3
in
adc
out
addr16
sbb
aam
sar
and
fnsave
push
xchg
es
dec
aam
cld
jne
js
push
push
daa
xchg
pop
shl
jmp
sbb
loope
and
xor
es
pop
inc
jge
mov
fs
int
push
mov
popf
xchg
jne
fstp
fdivr
scas
jmp
pop
aam
pop
jle
mov
mov
aad
test
push
xor
enter
push
sahf
xchg
movs
call
xor
push
jo
inc
fsubp
sub
jecxz
ror
jmp
mov
mov
dec
mov
outs
in
xchg
jne
loope
jmp
adc
jl
stos
lock
lock
pusha
xchg
xchg
push
(bad)
adc
xchg
cdq
popa
repz
mov
aas
add
or
cmp
sbb
(bad)
popa
sub
fsubr
adc
xor
outs
mov
in
mov
cmp
push
aas
xchg
mov
movs
clc
rcl
add
scas
stos
and
fdivr
loop
jp
repz
imul
(bad)
pop
sub
ror
dec
fdivr
fidiv
enter
xchg
and
loopne
aaa
jo
cmp
(bad)
mul
fcomp
mov
push
inc
mov
mov
or
mov
outs
sti
push
xchg
mov
dec
or
icebp
xchg
inc
pop
add
jae
pop
imul
mov
jno
push
jp
or
sti
dec
adc
xor
push
(bad)
or
sub
xchg
adc
ja
int
mov
out
cld
mov
and
sbb
retf
dec
xor
iret
sub
pop
pop
cli
pop
xchg
dec
push
mov
js
repz
xchg
mov
mov
jl
shr
rcr
out
dec
mov
ret
or
addr16
mov
std
pop
mov
add
cli
xor
dec
cmp
adc
bound
lods
or
add
shl
mov
aad
data16
hlt
jecxz
in
out
mov
lods
lods
(bad)
nop
cli
test
and
jp
pop
(bad)
mov
les
icebp
sbb
in
xor
adc
cmp
int
aaa
das
inc
or
and
jnp
push
fild
add
hlt
pusha
mov
cdq
push
adc
sub
cdq
jno
mov
push
jge
mov
pop
repnz
std
fwait
ja
add
jae
daa
cmps
push
je
jge
adc
push
leave
imul
out
fs
(bad)
int
fisubr
imul
test
xor
mov
sbb
pop
dec
add
push
pop
mov
into
into
xor
mov
sti
jne
lods
jne
mov
xchg
outs
mov
jmp
icebp
mov
jno
mov
and
push
popa
pop
and
gs
movs
pop
mov
lahf
out
test
sar
xchg
cmp
imul
das
mov
pushf
push
stos
retf
push
les
xchg
ja
mov
sar
out
dec
or
ret
adc
dec
mov
push
mov
push
cmp
scas
and
sbb
mov
inc
enter
ret
inc
cs
in
fs
add
cmps
lds
test
bound
inc
mov
and
test
add
movs
adc
imul
add
enter
pop
movs
jb
in
inc
pop
cwde
mov
aam
(bad)
sbb
xor
jl
mov
not
push
cli
fs
mov
loopne
jl
outs
stos
push
mul
dec
and
dec
das
aam
ds
sub
xchg
or
add
or
fs
out
mov
xchg
cmps
fcomp
movs
aad
jle
repnz
cmp
out
sahf
inc
scas
mov
cld
xchg
in
jle
pop
add
je
pop
xor
neg
mov
sbb
cs
jle
xor
pusha
and
jbe
outs
cmp
stc
xor
loope
xchg
shr
sub
inc
inc
out
scas
sub
in
pop
lock
add
mov
adc
adc
inc
xchg
jle
lods
cmp
cld
xchg
pop
cmp
dec
ins
mov
movs
std
mov
stos
test
mov
fidiv
test
jae
push
add
lahf
scas
jmp
(bad)
adc
rcl
dec
fwait
test
rcr
cmp
outs
popf
lods
xchg
push
fnstenv
test
inc
popf
in
shl
lea
add
ins
mov
fwait
add
push
pop
mov
out
add
sub
mov
sbb
mov
vmovapd
cmp
jg
imul
cmps
xor
loope
ret
pop
pop
sbb
out
cmp
(bad)
lods
push
and
xchg
in
stos
pop
jmp
movs
jecxz
pop
rol
lock
addr16
dec
stc
retf
push
cmps
jo
push
mov
push
pop
cmps
call
mov
cmc
mov
jmp
dec
lea
daa
sbb
pop
push
lahf
pop
arpl
xchg
sub
(bad)
in
sub
push
fdivrp
pushf
pushf
xchg
retf
jbe
cld
push
sbb
lods
test
cmp
push
push
jo
or
push
shl
adc
ret
cmp
jo
add
nop
sub
mov
pop
sub
xor
mov
sub
outs
std
xor
movs
push
xor
push
xor
cwde
aam
jnp
outs
fld1
sub
mov
lds
xchg
xchg
cli
or
fiadd
shl
out
xchg
inc
push
test
int3
push
repz
pop
mov
sub
fcomp
out
fs
xchg
xchg
push
push
loope
rol
sti
cmp
cwde
(bad)
fisttp
adc
ret
and
pusha
mov
jb
popf
cs
adc
call
and
mov
mov
ror
mov
inc
mov
and
xchg
mov
or
jbe
and
sahf
icebp
dec
jecxz
ds
repnz
repnz
sub
into
mov
pop
arpl
mov
adc
add
imul
ins
pop
mov
rol
bound
cmp
push
dec
arpl
inc
pusha
nop
scas
push
jb
sub
ds
test
add
fsqrt
adc
into
scas
ins
call
dec
aaa
call
imul
test
pop
(bad)
out
xor
stc
popf
loopne
(bad)
sbb
pushf
pop
les
inc
jb
dec
push
mov
mov
dec
pop
cs
out
(bad)
in
or
ret
fadd
cmps
add
das
mov
sbb
icebp
jl
outs
sbb
cli
clc
ficom
ja
jno
jnp
shr
into
push
loop
sub
sbb
push
icebp
or
movs
xor
adc
dec
js
addr16
jle
sub
call
dec
cli
imul
test
xchg
cmps
cmp
dec
xor
scas
sbb
inc
pop
push
cmp
enter
stc
add
jge
inc
pop
or
lods
je
sahf
iret
jmp
mov
pop
mov
or
lock
je
push
adc
xchg
xchg
popa
out
aas
inc
aad
mov
test
loop
sbb
dec
xchg
sar
aas
repz
stos
adc
mov
sar
imul
xlat
add
test
rcr
ret
sbb
cdq
loop
sbb
mov
dec
xchg
xor
pop
daa
repz
inc
cmps
test
adc
jg
sti
jnp
push
mov
test
cmp
mov
aam
xor
pushf
std
adc
or
push
adc
(bad)
nop
xchg
jns
dec
jnp
push
call
mov
nop
enter
sub
dec
aad
mov
add
xor
outs
cmps
stc
sbb
jle
sub
rcl
sub
sbb
xchg
sbb
and
test
addr16
pop
mov
test
mov
mov
jns
mov
and
(bad)
sub
int3
movs
inc
jge
outs
repz
ins
xchg
add
pop
push
inc
xor
cli
sar
cmp
lds
jg
xlat
cmp
icebp
popf
and
lods
dec
cmps
out
and
xchg
cdq
mov
jns
pop
div
loop
ds
cmps
daa
sub
int3
and
shl
mov
pop
sbb
jns
jno
sbb
fwait
cwde
mov
xlat
popa
or
add
das
adc
mov
imul
sub
and
pop
lock
pop
scas
adc
test
das
sub
fild
fild
aas
and
add
adc
and
sbb
jb
test
and
pop
push
pop
and
mov
ret
mov
ret
test
add
and
hlt
xor
movs
es
icebp
or
jbe
inc
xor
nop
push
pop
xor
icebp
push
sub
xor
adc
inc
cmps
mul
aas
and
push
dec
gs
inc
inc
hlt
dec
outs
icebp
ret
(bad)
cs
adc
stos
pop
lock
leave
sub
or
inc
push
fisttp
in
xor
scas
repnz
test
add
mov
outs
ja
test
dec
fwait
cmc
cdq
sub
push
cmp
add
pusha
ss
enter
movs
cmp
inc
push
xor
cmps
shl
xchg
(bad)
into
mov
push
mov
test
int
clc
aas
out
and
push
popf
pop
loope
sbb
and
iret
test
mov
out
mov
(bad)
jne
sbb
in
std
ss
mov
ds
xchg
jecxz
mov
arpl
jmp
int
out
fsub
or
es
push
pop
mov
mov
sbb
mov
sbb
jmp
push
iret
jecxz
cmp
les
lahf
push
movs
bound
mov
test
repz
outs
stos
jmp
pop
inc
mov
ret
sbb
jge
push
jbe
ins
mov
or
pop
sar
push
out
jb
and
das
scas
xchg
mov
cmp
fsubr
cmp
and
pop
sbb
mov
popa
retf
pop
out
retf
cwde
pusha
cs
test
test
std
mov
ror
cmps
ret
push
cmp
mov
dec
xchg
xchg
out
sub
jb
out
pop
xchg
jno
xor
or
fisttp
jmp
lds
loopne
fisub
inc
jno
cmp
sbb
cmps
mov
sbb
push
mov
push
push
ror
pushf
shl
mov
shl
mov
or
xor
jg
jp
test
dec
jmp
inc
mov
and
in
ror
pop
dec
pop
imul
outs
lea
fmul
jg
xchg
adc
push
mov
(bad)
jno
push
sbb
or
xlat
loop
add
xor
call
cmp
in
sbb
add
jo
cwde
inc
push
jg
jl
int
cmps
xchg
hlt
xchg
mov
loopne
sahf
or
push
ret
add
ss
dec
jnp
jg
dec
lock
fdiv
mov
push
dec
add
pop
dec
push
lods
xchg
adc
shr
xchg
fiadd
mov
xor
je
pop
jg
imul
fbstp
jne
call
pop
sar
jmp
adc
outs
retf
pop
push
loopne
popa
mov
cmps
inc
int3
pop
mov
ja
xchg
ret
mov
adc
push
retf
shl
mov
(bad)
retf
inc
mov
scas
or
xor
jle
push
lahf
jg
cmp
mov
in
mov
shl
xchg
mov
in
dec
xor
mov
mov
arpl
or
mov
jl
adc
push
cli
cmp
jb
aad
xor
shr
adc
jmp
sahf
or
shr
xor
ins
jne
adc
mov
mov
das
repz
sar
mov
cwde
push
rcl
or
enter
sbb
sub
or
add
fwait
scas
bound
mov
jbe
pushf
mov
jl
jecxz
cmp
or
mov
lods
test
add
mov
cmps
ficomp
aaa
in
std
jp
pop
arpl
(bad)
jns
jmp
mov
mov
je
inc
xor
repnz
mov
cmp
shr
mov
fs
scas
loope
mov
adc
pop
or
add
add
mov
jg
hlt
pusha
inc
fsubr
xor
adc
or
mov
popf
gs
sub
and
std
xor
in
daa
rcr
mov
rol
mov
pop
mov
push
inc
fnstsw
push
aam
sub
jb
dec
add
icebp
cmp
inc
push
(bad)
arpl
(bad)
pop
stc
aam
jne
mov
in
mov
dec
mov
(bad)
fwait
adc
lahf
push
gs
pop
nop
mov
and
add
pop
sbb
pop
shr
or
or
retf
mov
push
add
sub
jae
sub
or
dec
retf
push
adc
outs
adc
cdq
addr16
adc
cs
xchg
jo
mov
dec
pop
push
lea
cmp
rcl
repz
mov
sub
inc
add
js
xchg
inc
jb
js
ret
inc
js
aas
push
je
pop
pop
xchg
jl
shl
pop
mov
repnz
rcr
scas
pop
ins
or
and
rcl
test
xor
call
cmc
popa
mov
inc
retf
test
add
arpl
sahf
movs
push
rcr
int3
repnz
jmp
test
retf
addr16
mov
loope
sbb
or
mov
scas
sbb
dec
movs
mov
add
outs
mov
mov
test
and
test
push
adc
outs
aam
mov
xchg
shl
dec
cmp
sub
jmp
inc
push
dec
(bad)
retf
add
test
ss
lds
xchg
loopne
pop
pop
add
(bad)
out
mov
sbb
das
std
ror
psubq
and
ss
scas
aas
fiadd
dec
rol
add
and
xlat
cli
call
in
scas
ins
fild
data16
xchg
jl
lods
adc
jecxz
fisub
lea
test
jno
push
pop
and
push
jae
pop
adc
pop
pop
sbb
dec
dec
adc
daa
lods
xchg
repnz
sub
dec
cmps
cmp
rol
jp
mov
add
iret
dec
inc
mov
in
test
cmp
out
fcmovne
xor
test
retf
push
or
inc
rcr
xchg
clc
cmp
jbe
cmp
xchg
sub
dec
xor
adc
fs
movs
jecxz
jmp
jl
test
xchg
shl
add
(bad)
adc
sbb
mov
fwait
fwait
and
xchg
sbb
and
xchg
xchg
outs
pop
jg
pop
ds
inc
mov
leave
lods
cmp
stos
ret
aaa
sti
ds
call
fwait
adc
imul
out
dec
push
cli
sbb
hlt
xchg
dec
adc
and
mov
idiv
test
fadd
mov
dec
shr
sbb
test
fnstenv
inc
mov
ret
shr
or
push
xor
jno
jl
jmp
les
test
aaa
inc
mov
(bad)
jmp
push
push
add
ret
jbe
sub
aaa
aas
sbb
sbb
ss
or
in
adc
icebp
outs
pop
scas
(bad)
pop
daa
(bad)
mov
mov
loop
adc
retf
jg
xchg
fwait
push
je
les
je
int3
xor
jp
test
jbe
mul
pop
xor
sub
xor
mov
mov
pop
push
jnp
mov
in
les
scas
rcl
stos
push
mov
rol
sub
jbe
cmp
dec
push
mov
stos
mov
inc
lods
pushf
cmp
dec
xchg
test
add
(bad)
adc
sti
popf
stos
test
jmp
aaa
cmps
mov
in
xchg
aaa
test
das
movs
movs
pusha
(bad)
jnp
ret
sub
scas
scas
lock
std
mov
scas
xchg
mov
retf
jb
jecxz
mov
pop
inc
add
cdq
mov
add
repz
dec
mov
clc
inc
movs
test
add
ret
sub
jnp
dec
sahf
push
push
jmp
inc
mov
or
test
fnstcw
shl
pop
dec
sub
jecxz
arpl
fbld
jle
jmp
mov
mov
mov
sub
adc
or
retf
je
leave
push
mov
dec
inc
call
push
jnp
adc
in
cli
lahf
in
in
add
loope
add
adc
jle
dec
cli
scas
scas
dec
adc
adc
xchg
aas
and
cmp
dec
xor
repz
xlat
sub
or
(bad)
stos
scas
adc
adc
pop
add
inc
push
xchg
and
inc
xchg
mov
outs
dec
mov
mov
test
or
stc
inc
lods
mov
mov
rcr
retf
int3
(bad)
pushf
out
lock
sbb
inc
push
cdq
inc
sbb
ins
ret
jbe
test
jb
jo
ret
mov
retf
mov
xchg
mov
and
inc
fcom
push
push
xor
adc
(bad)
jge
jne
aas
add
loop
shl
das
cmp
test
into
rcr
push
mov
sub
es
xchg
imul
mov
imul
add
lock
push
or
mov
retf
pushf
(bad)
icebp
pop
inc
sahf
add
add
xor
jge
inc
xchg
mov
and
or
fstp
aaa
inc
call
mov
jne
int
ret
sub
ins
pop
sbb
movs
cmps
adc
and
dec
stos
sub
mov
mov
mov
pop
or
jle
fbstp
sbb
mov
sbb
jnp
add
fcmovu
pop
ficomp
inc
dec
mov
xor
sbb
pop
cmp
mov
arpl
test
sub
jmp
jnp
pop
shr
sar
sar
push
loopne
in
jae
into
mov
das
and
stc
movs
sti
xor
call
imul
xor
dec
(bad)
adc
cli
push
push
int
daa
xlat
pop
setge
sbb
and
jecxz
mov
mov
push
mov
dec
mov
inc
xor
push
and
sahf
(bad)
jmp
mov
aam
nop
add
cmp
test
sbb
push
pop
xor
(bad)
mov
pop
push
leave
dec
loop
les
inc
pushf
lods
fst
add
cmc
jnp
dec
jle
sub
xor
fcomp
mov
pop
or
xor
push
push
lods
jne
fiadd
jbe
mov
push
in
sbb
push
push
psrlw
sbb
sbb
loop
and
in
mul
xchg
push
in
push
adc
lods
bound
retf
inc
sub
inc
cmps
sti
retf
movs
and
mov
sbb
dec
nop
mov
movs
sahf
cld
adc
inc
mov
mov
mov
dec
cmp
fwait
mov
cwde
and
dec
mov
js
scas
push
(bad)
cmp
push
fild
push
test
leave
in
dec
out
fiadd
loopne
adc
jno
mov
or
cwde
sub
scas
push
push
iret
ror
ins
in
mov
mov
sbb
mov
shl
(bad)
xchg
xchg
bts
cmps
adc
push
sbb
push
loope
lea
jno
mov
push
adc
int
jmp
jge
add
fdiv
jmp
add
daa
add
or
fsubr
sub
cmp
cwde
or
test
push
push
xor
fdivr
(bad)
lock
je
pop
imul
icebp
fidivr
and
cmp
enter
shl
dec
dec
xchg
add
js
js
dec
push
(bad)
jns
aam
mov
arpl
jecxz
jb
jp
fdiv
idiv
out
sbb
cmp
dec
ins
sbb
stos
and
inc
outs
bound
inc
pop
push
mov
mov
into
pop
icebp
push
pop
retf
cld
sbb
push
xchg
pushf
xor
mov
out
mov
xchg
sub
push
jnp
test
lods
xchg
into
lds
iret
or
(bad)
push
jmp
pop
ror
scas
mov
add
add
jmp
cmp
sub
xchg
cmps
xchg
mov
dec
xor
out
scas
cmc
sbb
popf
sub
repz
mov
in
ins
sub
cdq
mov
inc
jmp
das
mov
scas
inc
(bad)
das
mov
fldz
mov
stos
and
push
fidiv
scas
not
loopne
mov
fld
test
mov
sti
mov
xchg
cmp
push
jne
iret
add
sbb
pop
clc
out
dec
adc
enter
repnz
jno
and
mov
xor
xor
loopne
cmp
lock
push
or
push
xor
cmps
aad
jne
mov
int3
lds
mul
movs
sub
cmps
dec
pop
and
aam
clc
jno
adc
call
mov
xchg
mov
xor
cmp
ins
popa
jno
jmp
jbe
mov
cmp
aad
xor
test
pop
sub
test
add
jns
mov
sbb
mov
and
test
jno
into
jns
mov
dec
sub
loope
and
movs
dec
pop
mov
daa
pusha
ins
jbe
call
push
cmp
fcom
push
jo
retf
push
sbb
sbb
lods
mov
or
cmp
sub
jl
movs
and
cmps
lds
mov
dec
sub
mov
push
stos
int
dec
jecxz
ret
sbb
inc
push
(bad)
ds
adc
outs
sahf
fadd
mov
sub
adc
or
inc
jge
push
and
sbb
cmp
xchg
dec
in
jmp
xor
cmp
xor
loop
stc
stc
mov
fisttp
dec
add
add
cli
mov
add
mov
sbb
mov
sbb
out
xlat
push
xor
fdivr
pop
mov
outs
out
xchg
imul
push
push
jo
mov
add
dec
pushf
icebp
sbb
adc
jecxz
data16
ficom
mov
int
jnp
pop
pop
outs
push
jno
mov
jae
inc
test
stc
xlat
in
test
fisttp
dec
push
call
cmp
retf
adc
mov
sub
int
outs
inc
jmp
cmp
cmp
cwde
mov
mov
sub
stos
repz
or
xor
pop
inc
call
imul
adc
jge
push
pop
popf
and
repnz
fxrstor
adc
xlat
outs
les
push
dec
add
retf
and
and
push
fidivr
imul
add
movs
daa
pop
movs
xchg
push
fwait
int3
int3
adc
ja
dec
rol
dec
in
loop
out
push
mov
pop
les
cmps
mov
pop
cmp
mov
stos
out
cmps
xchg
lahf
hlt
xor
fdivr
add
cmp
xlat
sub
dec
ja
repnz
(bad)
jg
aam
adc
cmps
(bad)
in
push
or
mov
lea
retf
in
cmp
repz
jae
sbb
jo
jbe
mov
icebp
mov
sub
int3
lea
cmp
rol
repnz
inc
sbb
ret
lea
ret
pusha
push
mov
scas
fabs
lahf
adc
sbb
adc
add
push
(bad)
cld
ss
pop
jecxz
inc
fcomp
xchg
mov
test
add
push
nop
dec
inc
bound
jbe
mov
cmp
stos
jb
mov
push
add
js
ret
out
outs
pop
dec
sbb
das
jbe
mov
leave
rcr
clc
out
pop
sahf
sahf
mov
(bad)
push
ins
cmp
mov
sti
xor
movs
xchg
jae
sbb
xor
out
neg
hlt
outs
je
xor
aad
fistp
inc
daa
inc
mov
add
cmp
dec
adc
out
mov
sub
push
(bad)
sbb
std
dec
ror
cmovb
jle
js
sahf
fild
or
sub
and
rcl
mov
out
dec
cmp
dec
mov
mov
fidiv
stos
fidiv
add
mov
into
cli
dec
js
xor
or
or
popf
mov
jne
xor
jmp
and
push
pusha
lds
std
adc
ins
ins
xchg
outs
retf
pop
daa
pusha
sub
push
call
ficomp
movs
test
call
ja
out
into
loop
mov
or
lock
stos
addr16
loope
jmp
pop
adc
leave
inc
pop
out
xlat
loopne
in
jle
scas
inc
adc
(bad)
addr16
inc
sub
cmc
xor
xor
push
dec
gs
or
jge
pop
div
lds
mov
cs
(bad)
stos
and
mov
sar
add
lds
push
fisubr
xchg
or
aaa
and
mov
push
sbb
bound
xlat
sbb
mov
adc
xchg
adc
imul
shl
sbb
rol
nop
fcomi
leave
jae
jle
or
pop
cmp
sbb
sub
xlat
arpl
or
dec
stos
shl
dec
push
pop
div
outs
(bad)
(bad)
cmp
or
mov
and
mov
cmp
inc
jle
adc
inc
out
and
jle
adc
out
sbb
aaa
inc
and
repnz
mov
mov
stc
out
inc
outs
in
cmps
ins
sbb
test
xchg
aad
mov
nop
push
cmp
xchg
ins
cmp
and
test
dec
adc
popf
das
fadd
dec
mov
xchg
adc
xchg
sbb
fadd
clc
das
sahf
shl
add
imul
shl
jge
xchg
out
or
add
leave
(bad)
test
adc
aaa
cwde
imul
jge
dec
into
test
inc
mov
test
mov
dec
adc
scas
into
mov
pop
xor
mov
jmp
retf
fisub
inc
add
mov
hlt
mov
inc
add
jne
xor
repnz
dec
ds
and
inc
mov
out
sub
add
pop
mov
mov
fs
stos
aaa
lods
and
inc
ins
pop
es
sti
popa
fstp
ficomp
and
leave
mov
jmp
mov
sbb
(bad)
gs
jns
mov
dec
cwde
daa
les
mov
mov
add
lods
push
adc
mov
cld
(bad)
and
xchg
cmpxchg
out
jns
adc
out
dec
dec
fdivr
fnstsw
mov
xor
test
sub
shld
scas
cmp
imul
(bad)
jno
mov
popa
ror
mov
add
adc
or
into
sbb
mov
dec
jb
scas
jae
push
neg
shr
aad
inc
xchg
pop
add
add
cmp
shr
clc
arpl
lea
xchg
sbb
mov
cmp
shr
mov
add
pop
cmp
sysexit
popa
gs
and
mov
or
xchg
scas
lods
jnp
xchg
(bad)
jo
cdq
adc
std
out
rol
fmul
jmp
out
sub
add
stc
es
and
jmp
sbb
sbb
mov
stos
scas
pop
ja
cmp
add
lods
push
or
lods
jbe
mov
add
test
into
and
pop
sub
stc
out
push
dec
pusha
imul
js
pop
dec
jo
add
rol
test
cmp
scas
dec
and
out
adc
push
jnp
jecxz
jnp
mov
or
sbb
or
ins
sbb
push
mov
pushf
imul
aad
inc
add
push
nop
mov
jne
rcr
fadd
out
arpl
xor
aad
dec
ret
popa
repz
(bad)
es
cmp
loope
call
imul
inc
dec
fsub
dec
dec
adc
ds
mov
cli
leave
fdivr
out
add
push
mov
dec
adc
xchg
adc
and
dec
pop
icebp
psllw
out
call
jl
es
xchg
int3
mov
stc
cmc
push
std
xlat
adc
mov
mov
or
fst
xchg
lahf
mov
clc
ins
push
sbb
mov
std
jo
sub
movs
stos
or
push
int3
pop
jne
cmp
push
push
mov
out
lea
push
movs
mov
add
xchg
dec
lds
js
xor
fs
cmp
stos
pop
sbb
mov
push
cld
pop
lods
mov
cld
push
nop
clc
sub
mov
fist
pop
enter
mov
retf
(bad)
cmp
fld
dec
xchg
or
mul
sahf
int
adc
jbe
inc
aaa
je
push
mov
xor
imul
in
sti
adc
add
jnp
push
jno
fist
rcl
aam
and
inc
adc
adc
pop
mov
std
push
sub
xor
call
push
inc
add
cdq
fcomp
jbe
xchg
jae
call
lahf
out
push
mov
pop
ins
(bad)
inc
cmp
imul
mov
ss
inc
scas
cdq
lds
pop
fst
dec
sub
mov
retf
out
mov
imul
mov
pop
movs
ret
data16
adc
in
lods
call
mov
(bad)
mov
add
or
push
dec
cmp
cmps
mov
xor
jle
or
iret
mov
pop
cwde
pop
shld
mov
stc
push
(bad)
retf
fnstsw
jns
add
sub
xor
and
pop
loope
call
xor
inc
inc
xchg
movs
leave
pop
jno
pop
sub
(bad)
mov
xchg
add
bound
add
push
xchg
sti
inc
shl
ins
adc
ins
in
push
xchg
movs
jp
loop
retf
lea
outs
mov
popa
jbe
into
aad
in
inc
push
or
sub
add
cs
repnz
dec
enter
les
ja
jns
rol
jge
bound
sti
lea
xchg
(bad)
xlat
test
mov
adc
mov
jle
loopne
vpmacswd
addr16
mov
fucomip
call
nop
add
mov
xor
and
clc
ins
aaa
adc
cmp
inc
rcr
jmp
lock
xor
or
jg
and
inc
xor
hlt
int
mov
(bad)
and
and
ss
cmp
jo
pop
mov
inc
fucomi
gs
les
jno
aaa
inc
mov
add
jp
fistp
js
es
iret
lock
sti
push
pop
neg
xor
ins
leave
pop
shl
iret
dec
mov
cmp
(bad)
sbb
and
mov
aam
xor
jp
aad
dec
and
add
shl
ins
jmp
cmps
sub
gs
movs
not
(bad)
sbb
add
in
sub
fsubr
jge
bound
lods
xor
cmc
jae
xor
dec
sahf
mov
push
(bad)
xor
jmp
cmp
add
test
sbb
out
sar
and
ins
pop
je
js
fild
inc
mov
ret
mov
movs
xchg
mov
and
movs
mov
push
jmp
mov
ror
inc
jg
loopne
retf
xor
fidivr
retf
shl
inc
call
dec
into
sbb
push
push
dec
push
jns
mov
inc
add
mov
inc
pop
jmp
jmp
inc
ds
pop
push
pop
pop
mov
fnstsw
cmps
add
cdq
cld
in
xor
stos
push
xchg
je
adc
jge
adc
pop
push
or
jg
scas
pop
cwde
push
xchg
retf
stos
xor
mov
shr
jmp
mov
popa
gs
or
mov
outs
push
and
lock
test
inc
push
mov
ss
jmp
sub
in
push
inc
mov
mov
xchg
push
push
pop
repz
(bad)
pop
push
sbb
sub
jp
jno
and
scas
in
push
cmps
call
inc
xor
imul
inc
test
pop
popf
jg
repnz
retf
outs
dec
xor
out
xchg
das
jae
and
sti
aad
in
inc
adc
(bad)
sub
sub
test
leave
std
iret
jno
mov
and
stc
dec
adc
jl
xchg
dec
xlat
repnz
addr16
ret
push
into
cmps
jl
shl
or
sbb
cli
sbb
pop
mov
aas
repnz
aaa
sbb
cmps
push
enter
jge
add
or
inc
adc
fisubr
outs
mov
push
push
cwde
fld
je
dec
scas
(bad)
aam
aas
push
cmp
cli
cld
mov
std
inc
jg
pop
dec
leave
xlat
iret
xchg
out
rcl
or
stc
dec
sbb
je
rcl
pusha
dec
xchg
test
frstor
sbb
cmc
stc
mov
mov
xchg
gs
clc
cld
pop
(bad)
inc
mov
pop
inc
mov
jae
mov
mov
push
and
ins
out
push
cmp
fwait
into
sub
fstp
sbb
and
(bad)
push
bound
xchg
pop
cld
mov
mov
and
push
fld
mov
or
jns
leave
mov
adc
pop
mov
call
sub
imul
jmp
mov
mov
out
jg
sub
xor
lods
inc
adc
aam
(bad)
(bad)
dec
jns
sub
xchg
adc
call
repnz
pop
mov
mov
mov
cmp
arpl
iret
xor
pop
nop
mov
addr16
and
movs
daa
add
or
cdq
cmp
pusha
les
imul
and
(bad)
jns
ja
pop
dec
outs
stos
pop
cmp
imul
cmp
mov
jns
inc
mov
or
adc
cmc
push
mov
data16
popf
sbb
mov
jb
stc
pop
cmps
cmps
push
mov
pop
pop
jae
inc
push
push
out
jb
xchg
dec
das
jnp
ds
dec
fild
ja
pop
loope
(bad)
call
mov
mov
mov
xchg
ja
jmp
(bad)
and
dec
xchg
loope
scas
gs
sub
pop
scas
mov
sbb
and
cli
div
and
adc
inc
xchg
or
mov
ins
sub
add
or
cmc
sar
and
mov
dec
fnsave
xor
jl
daa
dec
sar
dec
adc
mov
rcl
pop
popf
out
aaa
push
std
in
std
lock
mov
outs
repz
stos
fcmovne
sub
in
out
mov
pop
shl
in
imul
lahf
push
cmps
ret
sbb
sub
movs
cmps
dec
xor
arpl
add
int
fsub
sub
mov
mov
in
inc
xchg
and
hlt
out
jl
(bad)
pop
add
movs
movs
(bad)
call
xchg
cld
clc
(bad)
jmp
push
bound
test
and
mov
(bad)
outs
cmp
imul
daa
outs
shr
push
push
inc
pusha
outs
push
hlt
xchg
movs
and
mov
xchg
xchg
stc
xor
sbb
stc
pop
and
adc
inc
push
mov
xor
pop
sbb
lds
in
add
shr
ror
icebp
out
shl
and
xlat
int3
or
scas
int3
aas
dec
dec
stc
(bad)
cmp
jo
lock
in
leave
mov
(bad)
jo
dec
int3
out
hlt
pop
or
mov
arpl
out
dec
popa
pop
es
adc
mov
imul
add
pop
ds
add
inc
movs
xchg
xchg
or
adc
cmp
xor
push
jnp
jb
fdiv
xchg
iret
push
xchg
test
mov
outs
pusha
imul
adc
mov
pop
jmp
push
or
in
pop
inc
fwait
mov
or
mov
mov
sti
mov
xor
push
movs
cmp
lahf
jl
ffreep
pop
shl
cwde
fld
xchg
imul
(bad)
(bad)
or
pop
jmp
pop
daa
neg
push
clc
mov
fdivr
jp
sub
ficomp
ins
mov
ret
sub
sahf
jmp
cmp
mov
je
cwde
icebp
imul
xchg
cmps
push
lds
dec
cmp
mov
lods
(bad)
mov
or
inc
xor
push
inc
lea
add
and
push
pop
out
push
mov
arpl
jo
mov
cmp
out
mov
rcr
push
ret
inc
enter
jne
test
int3
xor
aam
loop
sbb
(bad)
call
add
inc
das
cmps
push
cmp
jp
sub
pop
test
cmps
sbb
jae
es
stos
out
jbe
ins
sbb
xor
add
sub
imul
inc
add
inc
jb
xchg
nop
pop
sbb
cwde
mov
mov
lock
jnp
lods
outs
mov
loopne
cmp
into
retf
jo
mov
xor
rcr
icebp
je
int
inc
cmps
das
lock
aas
and
or
sbb
sar
mov
mov
and
push
xor
xor
push
xor
mov
push
test
fmul
push
out
(bad)
aam
add
aas
mov
inc
(bad)
test
xchg
add
push
daa
fs
aas
sub
popa
lods
xor
sbb
shr
pushf
stos
ficom
mov
hlt
outs
mov
push
add
lods
and
inc
loop
ins
call
out
shr
mov
std
jae
aaa
adc
or
cmc
add
or
fstp
test
leave
add
push
mov
and
and
jmp
fwait
sbb
and
sub
dec
lods
mov
xchg
sbb
and
je
lods
(bad)
in
pop
pop
pop
or
frstor
cmp
ret
jg
sub
sahf
jge
retf
mov
and
mov
js
imul
jae
sub
(bad)
stos
adc
call
xchg
ret
push
adc
jecxz
adc
jb
cmc
shl
add
jae
mov
ja
jp
or
ret
mov
cmps
xchg
sbb
sbb
ss
sbb
shl
mov
inc
and
xchg
jbe
inc
mov
sahf
or
mov
out
icebp
pop
mov
or
std
inc
call
xchg
xrelease
mov
call
loopne
sbb
fldcw
xor
stos
push
jb
push
push
popa
loopne
add
push
inc
mov
fldenv
xchg
mov
retf
mov
xlat
xchg
jno
mov
sti
(bad)
mov
movs
pop
(bad)
jb
loop
mov
mov
ret
push
fs
lods
out
xor
js
ins
lds
and
dec
jno
ret
retf
push
inc
retf
jmp
test
fs
jno
jge
outs
cmp
and
(bad)
cmps
jmp
aas
test
sub
adc
xor
lea
mov
dec
sub
mov
sbb
cmp
(bad)
xor
scas
xchg
shr
ins
adc
retf
inc
in
push
inc
test
cs
mov
sbb
sar
jae
outs
sub
lds
pop
and
pop
fwait
xchg
push
inc
ja
test
gs
fnstenv
mov
ficomp
cmc
dec
les
mov
aad
dec
add
cmc
loope
lock
inc
push
mov
loop
idiv
xor
fdiv
xlat
cmps
mov
in
cmp
(bad)
(bad)
fst
dec
fcmovb
and
popa
jo
mov
repz
data16
rol
jns
daa
xor
jmp
rcl
add
mov
cmc
out
add
in
aas
dec
mov
and
retf
pop
inc
ret
dec
or
xchg
ficomp
xchg
outs
fcomp
bound
mov
pushf
arpl
int3
push
inc
lods
mov
aam
push
dec
mov
inc
cmp
or
js
adc
jae
ins
in
and
mov
loopne
pushf
fisubr
hlt
mov
std
xchg
cld
dec
push
sbb
jno
rcr
jmp
sub
cmp
and
movs
loopne
jo
js
push
and
outs
pop
aam
iret
pop
(bad)
jmp
inc
icebp
fisttp
sub
xor
ja
dec
fadd
daa
mov
stc
xchg
stc
push
push
lods
aam
xor
scas
pushf
cld
rcl
adc
push
mov
dec
pop
loopne
fucomi
sub
repz
leave
out
or
scas
movs
push
add
xlat
out
inc
scas
cmp
cdq
add
ins
push
sbb
or
test
sbb
push
scas
fsubrp
fiadd
pop
push
cli
or
fisubr
jae
mov
mov
ret
jne
and
lds
dec
jmp
jp
xor
adc
lods
add
cmp
movs
and
add
mov
inc
das
retf
loop
mov
faddp
test
adc
sbb
lods
and
and
pop
or
xchg
dec
add
cmp
sub
(bad)
out
ja
repnz
adc
fidivr
pop
xchg
pusha
retf
js
out
stos
sar
xchg
cli
aam
test
fwait
das
ret
out
addr16
sub
mov
inc
mov
pop
rcr
cmp
xlat
mov
rcr
mov
and
pop
ror
ja
inc
mov
inc
adc
or
mov
jbe
scas
mov
dec
mov
jmp
dec
or
pop
gs
jl
or
xchg
sub
mov
mov
lods
mov
push
retf
add
sbb
xchg
pusha
int3
movs
lea
mov
test
xchg
lods
jne
cmp
push
adc
sbb
adc
rcr
cdq
scas
out
imul
mov
test
arpl
mov
shr
xchg
ins
mov
mov
or
or
shl
cmc
fs
jnp
pop
outs
daa
(bad)
push
sbb
ror
(bad)
add
inc
retf
std
rcl
shl
mov
xor
jp
sub
sub
test
inc
mov
movs
mov
pop
jmp
push
adc
imul
xor
fxch
test
enter
mov
adc
or
loope
xchg
daa
gs
out
outs
cs
sbb
push
add
popf
and
or
mov
fisttp
xchg
call
mov
loope
int3
pop
and
add
lock
aam
inc
cmc
mov
push
mov
xchg
ds
mov
inc
outs
mov
neg
mov
mov
mov
pop
ins
sti
adc
inc
shr
test
ret
inc
jle
xchg
shr
push
ins
xchg
test
pop
les
inc
add
lahf
js
push
pop
test
dec
aam
int3
pop
jl
icebp
xchg
cmc
sub
out
int3
and
jl
sub
ret
fwait
in
push
icebp
jo
pop
test
fs
mov
fld
or
push
push
sbb
dec
mov
(bad)
retf
call
pop
lock
addr16
popa
mov
cmp
shl
stc
jne
xchg
loope
jnp
iret
repz
cmc
retf
aad
shl
push
ffreep
jecxz
push
or
adc
lds
adc
arpl
fisttp
push
inc
(bad)
data16
(bad)
mov
mov
(bad)
adc
and
(bad)
xchg
in
jle
sbb
mov
and
jle
xchg
adc
or
jne
cld
mov
js
inc
rcr
or
jge
inc
jno
xor
or
jg
sbb
push
inc
push
arpl
aad
sub
popa
sti
je
cmps
mov
fld
add
jge
sbb
pop
(bad)
push
and
fwait
xchg
adc
xchg
push
std
mov
xchg
outs
pop
sub
popf
pop
inc
mov
test
pmaxsw
test
aam
stos
mov
adc
and
xor
(bad)
and
mov
push
inc
nop
xor
lods
cwde
sub
std
push
push
jnp
mov
cmc
dec
xor
mov
ja
std
mov
push
dec
mov
test
aaa
adc
dec
leave
xchg
shl
and
dec
mov
dec
out
mov
sbb
add
adc
rcr
xchg
or
aas
sub
xor
xor
int3
pop
or
jp
jmp
out
pusha
push
aaa
xchg
call
cmp
addr16
push
scas
pusha
sbb
cmp
mov
enter
scas
push
in
xor
inc
lahf
jns
ja
test
push
mov
and
dec
push
(bad)
sti
(bad)
pop
ss
adc
retf
call
pop
clc
aaa
or
ins
pop
nop
jg
xlat
dec
clc
das
pop
mov
sahf
pop
inc
leave
sbb
stos
cli
mov
sbb
into
neg
loop
adc
sti
or
push
inc
adc
mov
sub
jge
dec
les
imul
out
retf
or
inc
pop
movs
call
bound
popf
mov
addr16
mov
imul
arpl
pop
jmp
cmp
je
pop
scas
dec
mov
pop
inc
xor
test
xor
test
pop
mov
ss
data16
lea
jo
push
xchg
in
jne
push
call
push
gs
jns
sub
mov
les
scas
imul
fisub
dec
movs
inc
aad
pop
movs
retf
xchg
inc
mov
mov
and
cmp
jmp
iret
ja
outs
mov
push
fs
(bad)
or
jo
(bad)
mov
mov
scas
xlat
pop
jbe
or
cwde
xor
mov
das
pop
retf
sar
pop
pop
lahf
adc
aaa
mov
push
xchg
das
sbb
xchg
cli
cld
push
shl
xor
in
pusha
fdiv
out
dec
jae
fidiv
fist
and
xchg
mov
lods
arpl
cmp
je
push
mov
pop
adc
mov
mov
mov
into
in
int
aad
or
add
aas
cmc
or
xchg
mov
test
xchg
icebp
retf
aam
dec
test
bound
dec
ins
mov
int
dec
sbb
(bad)
movs
adc
xchg
cmp
(bad)
(bad)
aad
lea
mov
loopne
stc
rcr
das
cdq
push
mov
push
jnp
add
pop
jl
cli
mov
lea
and
sahf
push
add
test
jmp
scas
(bad)
call
ss
cmp
shr
ds
stc
aaa
push
or
jmp
das
or
lods
dec
sbb
ja
jno
inc
push
lock
neg
stc
xor
loopne
ffree
leave
jge
add
(bad)
inc
add
clc
pop
pusha
fisttp
xchg
test
in
arpl
iret
sbb
aam
cdq
mov
cwde
add
xor
jg
adc
fstp
out
test
cdq
jb
(bad)
nop
sub
es
pop
add
pop
pop
out
out
sub
cmp
pop
in
push
or
mov
push
add
shl
cmp
aas
test
adc
dec
pushf
mov
or
pop
in
(bad)
mov
push
push
(bad)
cli
ret
xor
push
inc
(bad)
push
xchg
in
in
cmps
pop
inc
xchg
rol
jbe
mov
sbb
xor
sti
mov
jbe
push
push
xor
stos
mov
sar
pop
adc
cmp
in
pop
sbb
inc
mov
cmp
cli
adc
ret
fsub
sti
nop
jg
das
xchg
mov
add
lock
ja
test
push
aad
pop
push
cmc
jmp
aad
adc
int3
mov
stos
rcr
imul
nop
mov
push
outs
ins
aas
arpl
(bad)
rcr
dec
mov
daa
sbb
xlat
jecxz
aam
sub
xchg
out
out
mov
mov
test
lds
mov
and
imul
movs
retf
xor
adc
pusha
repnz
xchg
mov
ja
shl
imul
dec
ja
call
dec
bound
cdq
mov
xchg
sbb
loope
fld1
jbe
hlt
aas
ja
call
retf
neg
jp
fcomp
xchg
(bad)
inc
xchg
sub
in
shl
dec
jecxz
shl
arpl
ja
jmp
push
in
mov
dec
lods
mov
mov
rcl
in
add
inc
test
sub
push
inc
popf
or
adc
std
in
pop
aad
loopne
test
ins
sbb
xor
ja
div
add
mov
or
pop
stos
imul
adc
dec
and
fist
(bad)
in
rol
mov
outs
cmps
(bad)
and
jle
inc
xor
adc
dec
adc
add
ficom
cld
pop
or
(bad)
retf
movs
daa
and
add
sbb
test
sar
mov
into
sub
neg
xor
or
aad
(bad)
mov
cmp
mov
jmp
hlt
and
push
imul
mov
int
pop
stos
cmp
outs
inc
ds
mov
outs
jae
call
add
rol
or
mov
out
mov
loop
sbb
jno
fisttp
test
repnz
imul
popa
aaa
mov
push
mov
jecxz
cdq
loope
pop
xchg
lahf
repnz
mov
test
jl
mov
fist
sub
popa
movs
loope
or
xchg
mov
sahf
call
jns
or
mov
inc
mov
mov
popf
sbb
jmp
test
jmp
sbb
call
push
jge
cmp
jnp
(bad)
js
out
or
or
movs
pop
jecxz
add
sbb
xor
fyl2x
and
jne
mov
outs
(bad)
nop
xchg
stc
movs
add
out
jo
dec
mov
or
loop
pop
adc
sub
aad
(bad)
jge
fs
xchg
xchg
repz
ins
mov
adc
jl
movs
dec
inc
xchg
das
pop
sbb
in
mov
jno
xor
mov
lods
push
or
inc
movs
adc
int
cmp
mov
lock
sbb
fs
jge
stos
cwde
aaa
lock
mov
in
push
lods
pop
cmps
cmp
sub
ror
outs
lock
xor
cli
inc
(bad)
push
mov
rcl
(bad)
clc
and
out
stc
push
scas
add
add
mov
or
mov
jae
movs
and
mov
push
and
pop
mov
adc
sbb
dec
dec
sbb
ret
mov
cmp
retf
dec
psubusw
stc
sbb
arpl
mov
mov
fidivr
cmps
and
out
add
ds
xchg
test
pop
out
scas
mov
mul
push
shl
xor
jge
rol
jne
pop
frndint
ror
fld
aaa
and
jns
dec
ja
fldcw
push
mov
adc
fadd
cmp
inc
push
push
or
fmul
mov
inc
fimul
out
inc
push
xor
push
int
push
test
push
popa
mov
and
xor
and
loopne
fs
mov
ds
dec
out
add
inc
xor
fidivr
pop
dec
xchg
pop
outs
add
jmp
les
pop
or
jbe
or
pop
push
mov
xchg
lods
jbe
lock
mov
in
xchg
and
or
test
cli
xchg
popa
in
pop
fiadd
imul
in
div
sub
sbb
mov
jb
xchg
stos
fwait
mov
add
mov
jae
popf
push
lea
fistp
test
jmp
xchg
push
xchg
xchg
movs
add
mov
adc
add
(bad)
pop
cmp
cli
add
add
xor
retf
mov
repnz
add
inc
add
ret
or
sub
cmp
jnp
mov
in
cmp
outs
jmp
xor
dec
jmp
push
adc
ins
shl
sub
mov
push
jg
fld
call
imul
add
jg
mov
mov
cmp
pop
xchg
xchg
jg
sbb
jno
outs
mov
arpl
(bad)
and
stos
rol
cs
dec
jmp
mov
sbb
inc
dec
(bad)
imul
xlat
repnz
loopne
fdivr
push
adc
outs
xchg
(bad)
sbb
jp
cmp
and
mov
aad
fs
in
mov
sub
fistp
aas
repnz
loopne
ins
test
or
push
(bad)
cwde
pop
mov
dec
imul
inc
iret
pop
cmp
in
das
cmp
cmp
or
or
add
test
xor
call
push
fsubr
mov
test
loop
mov
sub
push
xor
retf
cmp
stc
(bad)
ficom
cmp
popa
push
add
int3
sbb
push
xchg
xor
scas
mov
dec
ret
pop
mov
mov
or
inc
fsub
mov
or
fidiv
or
(bad)
in
or
sar
in
mov
cmp
in
inc
jl
xor
xchg
xchg
arpl
cmp
or
pop
sub
mov
push
(bad)
(bad)
imul
xor
inc
jno
dec
nop
mov
jbe
in
cli
dec
int3
jmp
cmp
mov
or
sar
jb
push
mov
jecxz
stos
sbb
hlt
mov
clc
bound
sbb
imul
lods
push
xchg
jl
add
gs
shr
fld
and
jo
sub
fisttp
mov
stos
cmps
mov
test
push
push
adc
retf
mul
adc
add
scas
or
fimul
test
adc
fcom
add
push
inc
enter
ins
or
fcmovb
pop
in
icebp
sbb
pop
adc
hlt
sub
or
inc
(bad)
call
nop
or
lahf
mov
mov
cmc
aas
cmp
aas
add
cmp
in
sub
add
pushw
lea
aaa
lods
xchg
mul
or
add
sar
sar
in
pushf
int
in
cmps
xchg
fsub
xor
out
or
and
push
not
icebp
lods
scas
test
cmp
(bad)
mov
adc
push
mov
and
dec
add
std
mov
mov
rcr
dec
push
dec
cwde
das
mov
(bad)
pop
pop
jbe
push
sbb
imul
jo
adc
inc
inc
jmp
cli
in
(bad)
jmp
push
int
outs
pop
mov
pop
dec
call
cmps
sub
popf
mov
adc
les
(bad)
inc
(bad)
push
and
mov
repz
les
test
mov
fidivr
stc
imul
mov
add
rcl
ret
xchg
aaa
outs
icebp
jmp
inc
pop
dec
movs
sbb
push
adc
(bad)
add
add
je
cld
jl
cmps
aad
pushf
fs
loope
rol
push
pushf
pop
or
mov
cmp
std
(bad)
mov
add
pop
adc
js
mov
psubq
das
xor
lahf
rcr
shl
and
in
call
dec
int
push
sub
mov
iret
mov
mov
or
or
add
mov
sub
addr16
cld
popf
pop
rol
test
aam
in
add
shr
jmp
test
lea
jnp
mov
rcr
pop
push
jge
push
das
in
jb
aad
jmp
sub
sti
pusha
fwait
xchg
test
aam
(bad)
push
dec
ficom
xchg
fidivr
xchg
test
cmp
and
jg
cmp
xchg
(bad)
fs
and
pushf
mov
cmp
xlat
call
push
xchg
ss
leave
mov
xchg
cmps
sbb
xchg
xlat
arpl
sbb
add
aam
pop
je
lods
call
retf
imul
out
push
xor
ss
out
xchg
out
jge
(bad)
scas
mov
loope
das
push
ret
cmps
mov
std
stos
xchg
cmps
in
xchg
jp
pusha
cmps
add
dec
rcr
sbb
jbe
leave
xor
inc
dec
xchg
cmc
in
loope
lock
stc
cdq
mov
out
js
adc
data16
ins
and
retf
stos
ins
gs
cmp
push
xchg
mov
jg
sahf
dec
fmul
mov
and
or
sahf
in
fwait
pop
test
dec
xchg
loopne
(bad)
jle
fbstp
sub
out
push
pop
cmps
sbb
lods
iret
repz
loop
jmp
mov
sub
hlt
pop
xchg
sub
sbb
iret
adc
div
imul
jg
jnp
adc
pushf
popa
in
xor
je
arpl
clc
mov
adc
pop
jg
sub
and
sbb
addr16
push
push
jns
inc
int
mov
and
sbb
cwde
jne
adc
imul
mov
aaa
cmp
sbb
adc
jnp
cmp
ror
cli
jg
inc
sub
call
in
sbb
or
cmps
or
or
xchg
adc
stos
enter
(bad)
and
(bad)
cmp
or
retf
and
push
psubusb
mov
xor
or
js
xor
sti
push
fmul
inc
xchg
cmp
push
inc
xor
sub
mov
retf
fst
mov
jne
aam
xchg
lods
in
xor
ja
popf
rcl
add
(bad)
imul
imul
sbb
or
jmp
xchg
inc
repnz
call
retf
dec
sub
jmp
loop
jne
pop
adc
sbb
retf
mov
jb
xor
in
or
add
xor
retf
adc
mov
btc
cmps
aad
xchg
mov
scas
add
add
jg
mov
or
stos
retf
inc
data16
pop
mov
cmp
mov
enter
jns
das
cmps
xchg
xor
clc
add
stc
inc
cmp
(bad)
dec
(bad)
push
mov
inc
sbb
mov
cwde
add
xor
lea
inc
fsubr
cmp
out
xor
jbe
xchg
dec
sbb
push
test
dec
xchg
inc
push
add
(bad)
lock
pop
ret
test
fld
sub
leave
and
call
and
mov
add
ret
repnz
nop
mov
lods
lods
std
sbb
outs
cmps
out
cmp
(bad)
in
jecxz
cmc
and
cld
repnz
addr16
push
mov
inc
test
or
test
mov
test
(bad)
jg
hlt
jge
dec
out
test
hlt
push
push
push
pushf
jmp
popf
ror
sbb
aaa
retf
add
push
cmp
push
sbb
push
inc
std
mov
psraw
sbb
imul
retf
fnstcw
and
bound
stc
xor
xor
xchg
dec
je
xor
sbb
xor
arpl
jl
inc
dec
cmc
jmp
push
into
test
or
mov
mov
dec
loope
loopne
out
fdivr
js
test
in
xchg
dec
cmp
jl
in
mov
or
movs
mov
jg
jle
rcl
xor
adc
popa
inc
das
pop
cmp
loop
jmp
xchg
(bad)
out
pushf
mov
or
and
add
mov
leave
test
pop
add
or
mov
xchg
cmp
mov
xchg
jne
dec
cmp
cmp
test
js
jns
push
adc
xor
or
push
adc
test
cmps
xor
sti
add
icebp
fsub
and
sbb
fadd
pusha
push
mov
sub
inc
cmp
movs
ins
xchg
jbe
aam
pop
lods
lods
or
ret
scas
ret
jmp
jecxz
push
cmp
add
lds
loop
in
add
inc
mov
into
jo
xchg
inc
pop
or
mov
dec
cmp
inc
dec
or
mov
lds
cwde
mov
jmp
punpckhwd
aam
jmp
neg
ins
in
jle
push
xlat
and
add
fistp
push
cwde
or
jmp
cs
fs
inc
and
cdq
xchg
pop
int3
sub
push
std
repz
aaa
xchg
adc
jl
jno
fist
adc
jns
imul
dec
mov
jle
mov
lods
loope
cmps
imul
cdq
xor
aaa
or
lahf
pop
adc
or
test
and
adc
jnp
mov
add
sub
dec
iret
daa
ror
lds
cmp
jne
xchg
ins
xor
and
ds
push
fadd
movs
pop
lods
push
sub
pop
and
sub
outs
aam
jae
shr
setne
jb
pop
push
not
fs
cdq
inc
push
xor
jne
loop
(bad)
mov
rol
sbb
fdivrp
out
mov
mov
scas
movs
call
and
pusha
jmp
js
retf
push
jmp
inc
ss
push
mov
sub
icebp
sbb
outs
movs
cli
lds
pop
mov
push
cmps
in
dec
or
mov
adc
jne
mov
or
sbb
and
sbb
test
dec
call
fisub
scas
adc
fcom
(bad)
cmc
outs
imul
jmp
or
add
fdivr
xlat
outs
popf
adc
int
into
adc
clc
mov
xchg
inc
add
or
stos
sbb
push
cmp
pusha
ins
ins
addr16
mov
stos
fimul
or
xchg
fstp
ret
cmc
jnp
pop
ror
loopne
lock
in
repz
inc
mov
mov
sub
test
imul
jl
mov
inc
loope
dec
jg
dec
sar
pop
stc
aaa
cmp
mov
lds
arpl
pop
dec
sbb
lods
daa
and
pop
pop
jp
sahf
mov
mov
daa
pop
pop
adc
push
xchg
mov
push
push
into
jno
stc
(bad)
mov
ret
xchg
adc
sbb
hlt
push
cmp
and
loope
mov
add
inc
mov
push
sbb
ret
ds
xlat
add
jg
leave
push
cmp
fwait
shl
lahf
cmp
mov
ins
xchg
push
shl
lods
push
out
jge
idiv
add
test
std
or
mov
sub
cwde
and
dec
jbe
cmps
and
push
mov
inc
repz
jns
xlat
(bad)
or
xchg
nop
bound
sbb
fucomip
mov
mov
inc
aad
int3
xchg
jmp
pop
push
rcr
mov
or
div
data16
ins
mov
loopne
adc
inc
jp
xchg
xchg
push
repnz
xchg
push
pop
and
push
retf
shr
pop
ret
dec
loop
mov
outs
cmps
sti
push
int
and
ficom
ret
dec
inc
je
mov
push
sti
mov
xor
and
int3
cmp
pop
adc
adc
shl
cdq
(bad)
scas
cmp
xchg
sbb
mov
add
adc
in
jge
add
es
sti
stc
adc
and
xor
xor
xchg
cmp
inc
jo
daa
sub
cmp
cmp
mov
ins
and
jge
int3
sub
popf
dec
jae
and
sub
mov
shl
xchg
fst
dec
inc
ficomp
pop
cmp
adc
mov
punpckldq
cmp
xchg
fisub
mov
fidivr
outs
mov
pop
mov
xor
(bad)
fcomp
xor
inc
dec
cwde
(bad)
cmp
imul
mov
push
push
dec
mov
loop
loopne
leave
sahf
sbb
jmp
stc
call
aad
xor
mov
push
or
push
push
or
pop
popa
and
fidivr
cmp
call
dec
xrelease
jge
int
jae
ror
sub
push
retf
or
cli
stos
and
sub
push
and
leave
out
xchg
enter
scas
sub
pop
stos
sub
inc
mov
pop
mov
jmp
mov
ret
in
pusha
push
adc
mov
in
sub
inc
and
lahf
outs
sti
cmp
mov
mov
inc
cli
mov
js
add
ror
sbb
jle
mov
nop
cmp
inc
push
test
add
dec
cmp
rol
xor
mov
test
and
icebp
mov
mov
out
pop
loopne
daa
and
into
sub
add
jo
add
xchg
stc
mov
or
cs
js
xchg
mov
add
and
leavew
cdq
(bad)
sbb
push
ret
das
das
scas
dec
fld
mov
adc
stos
lea
or
push
retf
inc
mov
pop
xchg
test
jno
pop
loope
and
(bad)
or
les
ret
sub
je
adc
jmp
aas
fs
(bad)
dec
xchg
ins
xor
call
das
jle
imul
xor
push
in
mov
and
in
xchg
ds
aam
add
pop
mov
movs
icebp
shl
pop
fs
rcr
or
(bad)
(bad)
clc
mov
add
or
fld
stc
imul
pushf
es
jmp
(bad)
mov
icebp
xor
shl
in
push
mov
in
leave
add
lahf
jmp
xchg
test
mov
jp
or
call
lea
and
pop
in
add
inc
out
ins
out
push
or
add
cld
xchg
jb
(bad)
sub
adc
sbb
cmp
add
icebp
add
xor
(bad)
adc
sub
xchg
jne
cmc
inc
outs
fild
mov
add
fiadd
adc
inc
push
pop
mov
dec
jae
pushf
test
nop
in
aad
cmc
ror
movs
push
jge
add
lock
add
mov
into
and
sub
jecxz
aad
mov
add
ficom
mov
inc
add
(bad)
scas
mov
daa
lods
scas
sti
or
push
mov
movs
push
fs
test
jo
rcl
mov
dec
call
pop
xlat
xor
dec
imul
data16
or
(bad)
ficom
adc
push
daa
pop
ret
dec
xor
scas
xchg
jecxz
pop
xor
add
xchg
pop
addr16
xlat
add
movs
ret
mov
(bad)
fld
push
push
ss
(bad)
lahf
mov
add
add
xchg
xchg
xor
aam
(bad)
cvttps2pi
test
jecxz
mov
xchg
les
sbb
and
xchg
icebp
push
adc
sbb
fs
push
(bad)
cmp
mov
xor
xlat
repz
cmp
jmp
pop
xor
aam
or
jb
clc
jmp
xchg
mov
sub
sbb
mul
inc
inc
mov
aad
aad
and
mov
ss
lea
push
mov
nop
push
inc
imul
scas
mov
dec
(bad)
push
cmp
adc
cmp
lock
loope
into
pop
cmp
cmp
or
adc
nop
pop
mov
xchg
sbb
dec
jae
fist
les
pop
pusha
pushf
cmp
into
sbb
xor
mov
in
loope
and
lods
in
ret
xor
jns
cmp
int
lods
popf
mov
mov
repnz
mul
cmps
std
in
(bad)
cmps
jl
inc
icebp
xchg
and
inc
mov
dec
add
mov
xor
aad
fwait
add
mov
fcom
aad
mov
dec
or
xor
(bad)
aaa
fistp
ds
(bad)
(bad)
jmp
push
mov
pushf
dec
dec
fs
test
adc
das
cld
or
fild
fcomp
dec
mov
popa
inc
pop
or
aad
add
pop
xchg
imul
mov
jmp
adc
sub
fbstp
xchg
pop
sub
push
mov
leave
cmps
xor
jge
shr
jp
cmp
add
fcomp
stc
xor
scas
and
(bad)
pminsw
scas
clc
aas
out
fimul
mov
add
test
pop
cmp
gs
ror
mov
std
mov
dec
jb
ins
bound
sbb
jnp
dec
sub
and
push
fsubr
(bad)
xchg
push
arpl
mov
add
pop
mov
mov
stos
std
cmps
clc
jne
fld
and
sahf
push
push
mov
cmc
mov
in
ficomp
jecxz
inc
out
mov
daa
(bad)
rol
jge
mov
sar
adc
inc
and
cmp
shl
ffreep
dec
cmp
stc
stos
in
imul
or
imul
xor
mov
sub
inc
mov
mov
enter
push
sub
cmp
pop
cmp
add
cmp
adc
jecxz
xchg
ds
je
pop
ins
lahf
jbe
ret
ret
mov
pop
fwait
xchg
std
lahf
and
pop
bound
mov
xchg
jns
out
fsub
hlt
add
jp
adc
sub
loope
lods
aam
lods
jne
xor
dec
(bad)
movs
fidiv
pushf
inc
push
sub
xor
dec
cmp
and
xchg
in
test
sub
push
in
mov
adc
mov
cmp
push
test
dec
aam
mov
popa
push
jo
sbb
mov
addr16
push
push
sbb
mov
leave
(bad)
adc
xchg
add
xor
pop
add
xor
or
push
adc
add
push
call
push
sub
xchg
xchg
pop
mov
mov
ror
dec
adc
adc
pop
pop
je
pop
sahf
int
repz
test
jle
and
hlt
jno
cmp
dec
loope
or
xlat
mov
push
pop
(bad)
mov
ss
cmp
and
or
in
and
xchg
ror
movs
and
mov
push
sub
sti
pop
ins
adc
cmp
out
mov
movs
ss
fist
add
pop
push
cdq
xor
retf
clc
in
not
movs
cmp
fsubrp
push
sbb
mov
push
imul
mov
imul
rcr
or
adc
aas
fbstp
jno
or
pop
leave
add
mov
adc
nop
adc
jp
add
jno
(bad)
xor
or
nop
das
jno
ins
jp
and
cmp
sub
adc
arpl
sbb
sub
cld
adc
mov
mov
sbb
leave
cld
data16
sbb
daa
(bad)
lods
fadd
movs
pusha
mov
fist
cmp
call
int3
fist
jg
pop
xchg
ins
pop
rcl
inc
push
lds
div
mov
fadd
dec
mov
xor
add
pop
aas
and
outs
out
gs
lods
lea
inc
fild
dec
cli
aas
ret
xchg
jb
in
jnp
mov
into
loope
stc
inc
(bad)
cmp
clc
lods
pop
pop
xlat
and
setle
mov
mov
call
jl
(bad)
cli
cs
pop
inc
(bad)
popa
test
test
cmps
xchg
push
jge
(bad)
push
inc
ja
outs
pop
xchg
cld
dec
aas
xor
js
adc
movs
inc
rcl
lea
add
sub
xor
dec
sbb
adc
cmp
xor
into
test
sub
push
dec
push
xor
dec
fbstp
ficomp
push
leave
pop
adc
enter
jno
mov
fist
mov
repz
xor
scas
daa
clc
std
shr
mov
mov
fld
mov
push
imul
inc
cmc
xchg
ret
and
ss
test
mov
cmp
jns
sahf
xor
arpl
daa
jno
fnstcw
lods
pop
or
push
adc
repz
and
icebp
pop
fdivr
sbb
rcl
adc
std
xchg
fldcw
aas
dec
push
mov
sub
in
fisubr
stos
loop
lahf
inc
mov
repnz
jecxz
sbb
dec
int
(bad)
and
mov
out
ffreep
mov
cmp
sbb
cmp
out
in
mov
push
jne
jg
pop
outs
retf
call
test
lahf
js
fcmovne
lods
jl
dec
xchg
cmc
ja
stc
mov
sbb
fstp
cmp
ds
xchg
adc
sub
scas
sbb
jae
sbb
sahf
inc
xchg
fwait
mov
repnz
lea
pop
lahf
mov
ficomp
dec
and
pop
(bad)
dec
aad
push
jle
cmp
lahf
jecxz
sahf
push
jbe
dec
cmp
mov
jb
mov
test
sti
jl
fild
xchg
cdq
sub
imul
or
xchg
imul
ror
ins
push
test
jns
into
loope
and
dec
pop
mov
fdivr
add
fs
xchg
retf
add
cdq
aaa
fbstp
mov
mov
add
mov
(bad)
into
xchg
and
data16
xchg
cs
(bad)
push
mov
sbb
jb
pop
add
add
imul
mov
cmp
iret
xchg
fcom
fs
das
ins
add
push
pop
sub
push
test
pop
lock
int3
push
mov
push
div
add
idiv
xchg
add
ror
daa
xchg
pop
fsubr
and
push
(bad)
cli
or
movs
mov
pop
push
adc
frstor
push
mov
shl
pop
push
adc
popf
jbe
clc
(bad)
jp
adc
sbb
cmp
jbe
lods
aad
jae
outs
xor
jg
stos
stos
dec
mov
push
adc
mov
js
pop
adc
in
push
std
lahf
cmp
dec
popa
std
aad
dec
sti
(bad)
mov
hlt
mov
adc
lock
lods
xchg
mov
inc
xchg
leave
outs
mov
test
or
jl
call
jbe
into
push
mov
(bad)
fisttp
and
xor
add
lock
shl
push
mov
push
arpl
fld
int3
sbb
cmp
xlat
inc
ret
cmps
xchg
mov
addr16
(bad)
add
pop
imul
ins
jmp
add
int
sbb
test
xchg
jmp
repz
psubq
pushf
xchg
dec
fimul
inc
jmp
jle
mov
daa
pop
hlt
call
add
mov
sbb
(bad)
mov
test
inc
mov
mov
and
ret
cli
dec
sbb
loope
dec
and
out
jno
movs
and
outs
pop
pop
add
add
xor
into
icebp
pop
sub
jns
mov
xchg
(bad)
xchg
xor
mov
xchg
dec
clc
ds
cmps
test
jp
ret
adc
rol
sbb
pop
push
sbb
xor
into
sbb
into
sbb
mov
add
repz
xor
push
push
(bad)
mov
jne
xchg
shl
and
inc
dec
sbb
fdiv
mov
jp
shl
loope
std
or
std
mov
sbb
dec
iret
sub
or
stos
mov
popf
mov
cwde
mov
dec
mov
imul
sub
cli
mov
xchg
test
(bad)
xor
imul
jnp
fsubr
out
nop
das
(bad)
idiv
jmp
ss
cmp
fild
xor
mov
arpl
cs
xlat
jl
in
fwait
dec
fcomp
pop
pop
xchg
sub
jl
fimul
push
ds
gs
jnp
add
movs
inc
shl
das
jo
ss
nop
aaa
and
stos
loop
aam
rol
out
lea
mov
cli
push
sbb
mov
mov
(bad)
enter
mov
repz
xchg
jns
in
test
xchg
aam
mov
adc
xchg
cli
jp
test
shl
push
scas
adc
leave
mov
xchg
fnstsw
ficomp
sbb
fcmovbe
mov
ret
aam
loopne
repz
and
dec
and
jg
dec
xor
jne
and
pushf
aam
add
ds
movs
dec
lods
push
mov
out
stos
cmp
push
mov
rcr
daa
cld
out
aaa
gs
call
or
push
rol
aaa
dec
xor
jge
xchg
pop
lods
ins
mov
scas
std
cmp
daa
fwait
or
jo
jne
call
lods
icebp
and
ja
push
test
sbb
js
xchg
and
test
shl
inc
inc
xor
xchg
push
jnp
xchg
pop
xchg
mov
xchg
cwde
int
mov
ins
add
ficom
test
sub
cmp
scas
cli
outs
mov
sub
rol
jae
stos
data16
es
out
cmps
jmp
push
or
inc
outs
sahf
mov
pop
mov
adc
loope
sbb
test
lahf
stos
sub
out
cmp
in
cmp
jp
bound
inc
xchg
inc
cmc
outs
out
sub
mov
and
cmps
dec
lea
add
jmp
sbb
(bad)
hlt
jecxz
push
jl
inc
push
stos
fisubr
lds
leave
add
ja
inc
jbe
fldcw
mov
mov
or
push
jecxz
mov
hlt
jmp
push
adc
and
daa
or
stos
icebp
in
sub
mov
push
add
jo
js
lds
adc
aam
dec
jno
stos
cld
mov
mov
mov
fs
fdiv
mov
in
xor
push
jg
pop
or
adc
dec
sub
xor
fs
and
dec
rcl
push
ss
aam
sbb
stos
xlat
dec
inc
push
jecxz
jg
mov
adc
xor
pop
into
sbb
mov
push
xor
pop
stos
jmp
inc
std
lock
sub
add
mov
adc
repz
mov
out
cmp
das
leave
jnp
scas
and
test
mov
jae
outs
outs
sahf
pop
out
fnstsw
push
arpl
push
xchg
repnz
dec
push
imul
sti
fdivrp
mov
xchg
ret
fnstsw
mov
inc
jbe
cmps
sbb
not
fmul
retf
aam
daa
xchg
test
or
clc
imul
push
cmp
ss
sub
hlt
test
(bad)
outs
sbb
push
or
jmp
retf
adc
aaa
and
mov
test
xchg
movs
cld
sbb
push
movs
sbb
push
push
dec
adc
sub
push
cmps
sbb
in
sub
das
or
into
enter
sub
mov
das
cmp
pop
dec
arpl
mov
cdq
inc
test
out
sbb
in
cmp
push
fsub
cdq
mov
and
jp
mov
pop
mov
iret
adc
pop
jmp
cs
sti
push
pop
gs
mov
xchg
sub
xor
shr
scas
fild
nop
push
jle
pop
or
(bad)
jb
dec
sub
in
sti
sar
popa
dec
shl
ret
fcmovu
retf
sub
loopne
mov
ins
mov
lock
dec
ja
div
jb
dec
inc
test
retf
call
and
mov
xor
sub
stos
xor
and
push
fdivrp
dec
aaa
or
push
mov
adc
stc
sbb
push
lock
cmc
mov
icebp
sti
sbb
movs
push
or
shl
adc
repnz
mov
mov
iret
or
popa
jp
pop
shl
fcom
inc
mov
stc
or
addr16
dec
and
sbb
ret
add
xor
push
dec
imul
inc
mov
xor
loope
in
js
push
mov
fcomi
inc
inc
ds
(bad)
movs
jle
outs
loopne
mov
xor
xchg
mov
ins
xchg
adc
sbb
mov
and
bound
in
push
push
shr
mov
sbb
xor
in
test
add
aas
pop
add
sbb
adc
int3
cmc
adc
loopne
inc
lock
cmp
pop
inc
sbb
pop
jecxz
sar
int
sti
aas
leave
xor
out
jo
cmp
pop
mov
into
dec
(bad)
cli
cmps
fild
in
rcr
cmps
mov
int
sub
sar
mov
mov
xor
test
lahf
cdq
xchg
cmp
push
daa
movs
pop
push
xlat
enter
mov
(bad)
es
mov
sbb
inc
pop
push
add
das
sbb
dec
xchg
inc
jno
inc
cmp
add
movs
jnp
leave
fcmovnu
stos
sub
dec
mov
sbb
nop
sub
rcr
dec
add
sub
and
jb
call
out
adc
dec
out
adc
push
nop
inc
(bad)
neg
dec
mov
jo
shl
cli
ficomp
add
sbb
pop
ins
pop
movs
push
cmp
jle
stc
mov
jge
test
fld
mov
cdq
fs
fmul
pushf
adc
enter
inc
sti
sbb
stos
je
xchg
fld
mov
pop
pop
push
dec
push
push
cmp
mov
adc
rol
scas
mov
popa
or
pop
xchg
cli
ins
jecxz
xchg
cmp
push
nop
dec
in
das
pop
into
loopne
and
call
dec
arpl
mov
sub
jp
ret
dec
jne
mov
sbb
std
xchg
loopne
xor
pushf
bound
mov
cli
xchg
pop
idiv
mov
dec
adc
ret
push
add
xor
sar
stos
push
add
and
mov
cmp
call
push
cmp
or
ins
lea
sbb
mov
mov
sub
in
test
jge
and
pop
and
(bad)
inc
div
push
and
sahf
jno
out
sub
xchg
fnstenv
pop
dec
adc
pop
out
mov
loope
popf
sbb
test
cld
rcl
push
sar
push
mov
jmp
mov
jl
pop
call
leave
xor
hlt
push
scas
mov
leave
inc
xchg
xchg
cmc
pop
in
mov
jmp
in
cli
popa
and
sbb
in
nop
add
out
xchg
mov
mov
sub
cdq
cmp
mov
push
in
jb
dec
scas
add
aad
pop
test
sbb
and
push
push
mov
mov
mov
push
mov
aam
sub
pop
mov
aaa
fwait
xchg
imul
and
jb
ins
loope
inc
loop
push
jnp
fist
fsubr
or
xchg
in
ja
rcr
inc
cmps
test
push
inc
fidivr
xchg
and
jp
sbb
mov
rol
sub
and
cmp
setge
retf
sub
neg
mov
mov
add
ds
sub
inc
into
ins
jo
jle
fwait
adc
sub
or
sbb
push
mov
sub
fcmovnbe
je
icebp
jge
cld
fnop
and
shl
xchg
mov
push
xchg
test
or
adc
pop
mov
jmp
jmp
call
dec
cmc
xchg
add
ss
nop
leave
inc
add
in
add
sub
add
and
(bad)
mov
mov
adc
inc
icebp
mov
loopne
or
push
fild
(bad)
stos
mov
imul
cmc
pop
(bad)
out
test
add
and
mov
(bad)
fcmove
jae
xor
(bad)
lock
mov
(bad)
inc
push
jbe
dec
not
cmp
repz
mov
jl
in
inc
xchg
mov
fwait
or
aad
fiadd
movs
nop
jb
shr
cmc
mov
jae
fwait
aas
pop
out
movs
mov
inc
imul
lock
and
mov
das
dec
shr
(bad)
stc
rol
(bad)
call
jne
dec
out
fwait
mov
jmp
test
in
mov
pusha
cmp
rcl
inc
pop
push
arpl
fdivr
mov
popa
mov
aaa
iret
mov
in
imul
(bad)
fstp
inc
add
mov
movs
push
mov
fisttp
jmp
cs
jge
sti
mov
mov
shl
fisttp
mov
push
es
adc
scas
and
adc
or
clc
adc
loop
lods
inc
add
fisttp
sar
xor
jge
mov
loope
pushf
cwde
and
inc
ror
dec
xchg
xor
xchg
std
push
stc
das
or
test
sbb
adc
sub
ret
mov
mov
enter
mov
enter
les
sub
xchg
xchg
jg
xor
cmc
cmp
mov
lods
jle
scas
inc
push
mov
inc
xor
xlat
ss
(bad)
dec
xchg
add
out
lahf
imul
int
rol
jmp
xor
push
in
(bad)
xchg
std
fist
sbb
in
call
adc
or
cmp
fbld
xchg
xor
lea
inc
div
dec
sub
adc
stos
pop
mov
mov
xchg
push
les
aam
aas
and
xchg
xchg
imul
stc
lods
and
xor
jl
cmp
aas
adc
lock
adc
dec
gs
pop
in
jge
popa
or
mul
xchg
xchg
gs
adc
fmul
inc
outs
clc
enter
stos
cmp
outs
lods
mov
xlat
lahf
aad
mov
js
mov
retf
cmc
ins
sbb
mov
xchg
stos
jne
fisubr
test
addr16
jb
lock
xchg
loope
jae
leave
jle
jmp
push
ja
xchg
pop
sbb
int3
enter
adc
mov
fimul
mov
push
clc
mov
xor
xchg
and
add
sti
cmc
cld
ror
dec
(bad)
mov
xor
mov
lea
mov
imul
outs
es
lahf
test
(bad)
test
cmp
mov
js
pusha
jmp
jnp
enter
sub
or
popa
xchg
imul
lea
outs
push
jbe
in
lds
adc
xchg
lahf
(bad)
pop
jbe
push
repnz
pusha
adc
sub
sub
pop
push
xchg
mov
xchg
stc
aad
aam
adc
cmp
in
mov
push
movs
push
or
and
ficom
clc
test
fsubr
out
repz
in
and
mov
add
arpl
ror
jg
or
xchg
out
add
dec
dec
or
jg
jmp
mov
push
aad
scas
lods
cdq
push
sahf
and
das
les
lahf
lea
or
sbb
xor
mov
lea
outs
bound
fidivr
test
lock
sbb
retf
dec
xchg
dec
cmp
xchg
and
mov
dec
jge
ror
mov
gs
mov
iret
les
cmc
inc
xchg
adc
add
fld
or
in
push
pop
lea
(bad)
pop
cli
inc
std
mov
cld
dec
stc
mov
mov
push
outs
add
xor
inc
or
jmp
stc
xchg
test
mov
in
test
adc
in
movs
cdq
enter
outs
pushf
dec
fmul
aas
sub
xchg
cwde
fistp
adc
cmps
je
call
retf
dec
ins
mov
xor
rol
sbb
pop
dec
(bad)
fldenv
jns
sub
outs
xor
mov
sbb
iret
inc
inc
mov
dec
hlt
outs
mov
retf
and
pop
(bad)
data16
sub
inc
and
ret
call
imul
add
dec
inc
ret
cmp
(bad)
cmp
cld
shl
xchg
add
push
push
mov
lods
mov
sub
cdq
xor
mov
ret
mov
sub
sbb
stos
aam
jl
inc
rcr
mov
adc
cmp
pop
popa
pop
dec
dec
(bad)
movs
repz
cmc
nop
lods
dec
cmp
push
mov
test
pop
int3
test
sbb
sbb
clc
rcl
es
sub
mov
xchg
stos
ins
mov
sub
outs
inc
fsub
lods
pushf
mov
mov
sbb
adc
and
push
sbb
xor
dec
mul
fidivr
popf
add
daa
popa
push
jecxz
test
jmp
and
pusha
push
pop
mov
xor
ss
or
or
push
sbb
add
xlat
inc
cs
rol
popf
mov
mov
stc
jmp
ret
fwait
call
push
leave
inc
inc
xor
or
bound
fwait
mov
cmp
ins
popa
sub
stc
lods
add
fld
xchg
or
dec
jo
int3
jnp
fidivr
adc
and
call
cmp
sub
out
lea
push
div
dec
cmp
or
fisub
scas
cmp
fwait
rcr
mov
sbb
or
push
je
sub
pop
dec
sbb
stc
sbb
push
sbb
jge
addr16
clc
mov
mov
shl
int
xchg
fs
test
(bad)
shr
cmp
sub
jmp
sbb
jmp
jmp
loop
sub
mov
in
add
fstp
fucomi
xchg
adc
mov
cmps
bound
jecxz
jno
jbe
and
out
loope
inc
pop
imul
fs
(bad)
arpl
in
icebp
cs
outs
mul
test
test
sbb
pop
adc
inc
(bad)
ds
js
ret
adc
inc
out
xchg
aaa
sbb
stos
leave
ins
mov
loopne
jl
pop
call
mov
mov
(bad)
call
xor
into
push
push
bound
or
in
jbe
retf
fwait
arpl
gs
mov
je
shl
push
idiv
dec
and
imul
scas
adc
pop
pop
mov
fdivr
outs
repnz
and
scas
mov
fcom
into
(bad)
pop
stc
dec
imul
mov
mov
adc
stos
test
pop
cmp
fwait
imul
loop
arpl
dec
cmp
arpl
or
xor
mov
jo
push
pop
loopne
jle
mov
bound
dec
push
mov
dec
push
ror
fidivr
pop
mov
mov
jmp
adc
cmp
xor
stc
sub
push
add
aas
jne
sbb
in
pop
retf
(bad)
loope
xor
fmul
out
jno
movs
jmp
jbe
mov
push
add
fwait
call
mov
xchg
cli
pop
or
and
pop
not
mov
xchg
mov
ficom
pop
mov
pusha
mov
sub
shr
add
js
mov
mov
dec
aas
xchg
add
mov
push
dec
outs
sub
or
mov
sahf
mov
add
add
test
adc
fmul
mov
call
ss
cmc
(bad)
mov
in
(bad)
mov
xor
(bad)
fsubrp
jmp
dec
xchg
gs
popa
jno
or
jbe
test
hlt
stos
push
xor
pop
les
in
in
shr
jmp
and
int3
adc
imul
cdq
pop
call
outs
repz
cmp
pushf
or
sbb
adc
add
gs
lods
add
jb
and
fild
cwde
cwde
push
lahf
fmulp
(bad)
sub
lods
sub
xor
ins
lahf
push
test
(bad)
xor
inc
sbb
arpl
or
(bad)
fsubr
mov
push
jge
mov
dec
mov
mov
mov
jae
xchg
mul
out
iret
adc
or
and
mov
inc
call
and
test
sub
xchg
mov
mov
mov
rcl
push
aaa
sbb
fwait
outs
fist
out
mov
or
mov
push
cmc
jg
xchg
lods
fwait
ss
(bad)
repnz
inc
sbb
iret
and
in
cdq
inc
int
push
dec
cmps
push
dec
mov
adc
rcr
retf
adc
cmps
jne
mov
ins
stos
xchg
(bad)
(bad)
mov
adc
test
dec
loope
mov
addr16
dec
in
sbb
jl
and
mov
(bad)
es
xor
and
dec
in
(bad)
rcr
push
mov
mov
jl
and
mov
fwait
ins
mov
xor
mov
jmp
push
and
push
jb
xchg
(bad)
fxch
or
lods
ins
mov
(bad)
(bad)
hlt
sbb
push
retf
inc
sub
dec
add
add
(bad)
(bad)
sahf
(bad)
sar
sub
imul
hlt
dec
stc
fwait
xor
push
(bad)
(bad)
repnz
je
daa
fnstenv
dec
jmp
lahf
sahf
jge
xlat
jge
inc
inc
push
jp
xchg
xlat
mov
loop
call
stc
outs
push
mov
test
mov
imul
movs
add
gs
clc
mov
lds
iret
mov
cmp
outs
or
(bad)
cmps
stc
xor
push
xor
shld
les
adc
mov
outs
xor
nop
lahf
arpl
call
ficomp
mov
sahf
les
adc
xor
inc
or
jno
jp
pop
ds
icebp
les
ds
inc
aad
pop
imul
jmp
push
(bad)
dec
ret
retf
mov
stos
fs
test
fwait
sub
data16
pop
cmp
mov
mov
ins
aas
xor
push
mov
sahf
xchg
adc
into
scas
popa
adc
xchg
and
data16
mov
jo
sub
xchg
jb
(bad)
xor
out
popa
mov
or
sub
pop
repnz
fldenv
outs
test
mov
loope
lahf
mov
add
in
add
pop
pop
sbb
call
int
inc
inc
push
and
hlt
mov
dec
xchg
out
ss
push
inc
call
or
adc
inc
push
je
xor
shr
and
sti
nop
pusha
dec
je
add
ds
and
inc
jmp
add
pop
inc
xor
xchg
xor
pop
mov
inc
or
adc
mov
mov
and
call
clc
retf
cld
stos
jecxz
push
into
nop
xchg
push
gs
mov
out
inc
sbb
adc
call
inc
cmp
xor
pop
dec
call
lods
cmp
xchg
daa
(bad)
mov
xchg
push
(bad)
pop
jb
xor
js
cmp
lahf
add
push
push
sar
rcr
inc
sub
mov
retf
push
fisub
test
fadd
loopne
dec
cmp
cmp
mov
les
nop
xor
loop
nop
jge
cmp
mov
xor
add
mov
inc
mov
bnd
mov
int
pop
add
and
jmp
adc
xchg
dec
(bad)
repz
jo
and
int3
clc
aad
inc
test
sar
fs
dec
ins
xor
out
push
pop
add
repz
fsubrp
pop
sbb
hlt
jb
pop
ret
inc
adc
push
stos
push
ror
(bad)
bound
popa
imul
mov
aas
xlat
es
xchg
push
pop
fidiv
iret
stc
pushf
stc
imul
cmp
add
out
sbb
sbb
pop
ins
pop
pop
fiadd
jmp
mov
pop
int
aad
imul
xor
shl
in
push
ror
xchg
inc
jg
mov
test
ror
clc
sub
jl
out
cmps
push
out
xlat
cmp
sub
mov
or
add
das
cld
jg
mov
sub
or
and
mov
pop
das
sub
pop
adc
jmp
jne
pop
movs
adc
adc
push
lahf
int
fwait
movs
add
faddp
cmps
add
push
out
jmp
mov
push
(bad)
cmp
test
inc
inc
push
test
pop
iret
mov
jae
lds
push
mov
cli
mov
call
loope
and
push
pop
dec
jg
cmps
or
jmp
mov
dec
mov
cdq
(bad)
fidivr
inc
mov
pop
loope
neg
sub
es
xor
mov
(bad)
push
or
xor
cmps
mov
ins
cdq
mov
cmp
stc
clc
out
jg
cmp
mov
enter
mov
stos
pop
sbb
loopne
pop
(bad)
aam
jle
cmp
iret
div
cmps
pop
xchg
out
push
sbb
pop
cmp
mov
mov
jmp
or
ret
ds
pop
inc
sbb
icebp
or
adc
adc
jo
inc
popa
inc
(bad)
imul
out
pop
inc
or
pop
and
ins
mov
mov
dec
mov
ud2
nop
pop
push
jl
loop
test
cmps
jo
xor
lods
loope
or
in
cmp
push
mov
(bad)
(bad)
jecxz
xor
test
or
push
xor
mov
inc
mov
jge
or
xor
loope
test
cs
out
cmps
add
in
jno
int
imul
call
add
pop
cmp
sub
jbe
lods
aad
popa
push
sbb
ds
push
and
out
aaa
xchg
loopne
test
retf
xor
cmp
dec
aad
pop
imul
test
imul
sbb
jb
hlt
fld
dec
push
fiadd
cmp
lahf
test
iret
sub
and
popa
leave
and
pop
dec
call
fsub
adc
ds
leave
aad
out
push
shl
mov
pop
inc
mov
scas
xor
mov
(bad)
rcr
sub
adc
xorps
mov
pop
cmps
fadd
movs
scas
pop
fadd
shl
es
xchg
pusha
mov
pop
ins
push
(bad)
call
jmp
and
xchg
repnz
xor
push
dec
jl
adc
mov
je
shr
inc
dec
xchg
pop
inc
loope
aas
in
retf
push
xchg
jo
push
mov
and
cmps
mov
fild
pushf
mov
and
pusha
fidivr
inc
jmp
dec
fcomp
sahf
push
jns
fbld
or
movs
add
mov
and
mov
hlt
cmp
adc
mov
fs
jg
jle
xor
push
inc
mov
int3
or
shr
dec
(bad)
in
inc
sbb
jne
rcr
into
mov
xchg
(bad)
add
or
jnp
mov
dec
repz
dec
inc
aaa
les
mov
psrld
(bad)
mov
dec
mov
inc
and
scas
mov
xchg
ja
(bad)
ret
inc
sub
pop
clc
psraw
dec
inc
test
aam
js
cmp
cli
and
test
mov
or
call
das
mov
cli
cmp
mov
daa
jmp
fs
hlt
pop
mov
pop
(bad)
sar
fmul
pop
adc
dec
xlat
mov
push
mov
xchg
and
or
sub
es
out
in
push
sahf
popa
dec
sbb
pop
stos
sahf
fistp
aas
mov
arpl
and
pop
cdq
aad
push
loopne
test
cmp
cmp
inc
cmp
pop
test
call
enter
fucomip
inc
xchg
test
xchg
sub
gs
jb
dec
fsub
pop
lds
scas
jmp
mov
js
aaa
sbb
push
and
ins
out
gs
sbb
push
shl
cmp
inc
icebp
frstor
mov
inc
push
loopne
js
stos
loope
mov
xor
ja
sub
mov
jl
test
jmp
ret
push
pop
and
add
fwait
mov
mov
adc
test
xchg
test
call
adc
iret
mov
push
loopne
and
lods
cli
cs
push
mov
mov
call
sahf
enter
(bad)
test
sbb
or
es
pop
daa
cmp
lea
lock
jecxz
adc
test
mov
add
mov
xlat
cmp
fisttp
leave
sbb
cmp
mov
fld
jo
stos
sar
int
das
dec
int3
xor
(bad)
mov
dec
(bad)
out
retf
push
fdiv
into
shl
push
int
jge
lds
mov
outs
iret
jo
pusha
js
pop
or
stos
shl
jle
push
jo
lods
mov
mov
adc
(bad)
fild
push
mov
repnz
jb
ds
dec
sub
xchg
add
les
dec
js
xlat
cmp
in
out
pop
jl
jmp
or
nop
sbb
js
xchg
cmp
mov
add
pop
mov
xor
sbb
pop
jns
jo
or
fcom
mov
pop
(bad)
lea
mov
mov
shl
(bad)
cli
test
cwde
out
imul
or
jmp
int3
aam
ja
xor
adc
and
in
lods
test
repz
xor
sub
ficom
ja
aas
pop
and
mov
call
outs
ret
add
inc
jmp
xlat
and
add
mov
rcr
fidiv
shl
pop
out
cmp
jecxz
jle
jae
daa
stc
cmp
dec
or
stc
jnp
jns
scas
ja
js
mov
enter
dec
sbb
mov
jl
push
test
daa
fmul
mov
or
popa
sub
pop
clc
test
fsub
sbb
add
jns
add
push
ds
movs
call
jp
push
loopne
fnstsw
cld
xlat
cmc
pop
dec
clc
(bad)
mov
pop
stos
push
pop
sub
cmp
xchg
cwde
dec
std
inc
add
mov
mov
iret
dec
or
xor
xchg
loop
and
dec
mov
cs
add
xchg
jge
mov
and
or
xchg
mov
dec
add
jne
xchg
pop
stos
jo
inc
xchg
test
lahf
cmp
cmp
add
fprem
mov
sbb
xchg
cld
inc
sub
fsubr
sub
mov
imul
je
loop
sidtd
jo
add
add
in
mov
std
mov
xor
cdq
clc
and
out
test
xor
int3
xlat
lods
out
jb
test
mov
aaa
gs
mov
adc
mov
leave
xchg
mov
clc
or
js
fidiv
mov
jo
lds
movs
xchg
and
sub
rol
sbb
gs
rep
dec
fld
jae
neg
enter
or
aad
retf
adc
(bad)
mov
call
sbb
call
test
push
dec
or
lahf
push
push
in
push
stos
mov
icebp
push
bound
sub
cld
cmp
test
(bad)
movs
mov
pop
xchg
or
and
pop
js
add
mov
pop
and
add
pop
out
xor
xor
push
sbb
aas
int3
int3
icebp
aam
adc
xchg
dec
loopne
cdq
mov
dec
scas
xchg
or
cmps
aas
pop
pop
inc
mov
jle
pop
sub
mov
xchg
cdq
jbe
mov
imul
adc
retf
out
ss
xor
shr
inc
arpl
jnp
(bad)
stos
sub
rcr
jg
loop
mov
in
and
xchg
aad
add
rcr
lahf
test
push
or
cmps
xor
cmp
sub
das
(bad)
addr16
mov
mov
add
int
push
mov
into
adc
mov
fwait
stc
mov
sbb
in
test
sbb
sub
dec
fiadd
xlat
push
enter
xchg
add
sub
add
push
repz
imul
in
cmp
jmp
mov
loopne
xlat
cmps
add
lahf
sti
into
ror
add
leave
push
dec
cdq
outs
pop
fnstenv
jnp
cs
jb
loop
and
shr
les
scas
fadd
inc
outs
adc
adc
sbb
repnz
jae
jg
loope
stos
pop
retf
or
stos
cmp
js
in
pushf
pop
jno
nop
sbb
mov
sbb
ror
pop
stos
add
pop
fs
sub
mov
mov
es
inc
(bad)
pop
inc
sub
ss
retf
ins
leave
xchg
inc
lods
call
clc
call
loopne
jge
push
ds
push
jb
cmp
mov
cmp
js
fst
test
mov
stos
mov
xchg
xor
cmps
push
cmp
or
adc
pop
or
fldcw
repnz
pop
loope
mov
repz
push
lods
push
mov
add
xor
pop
mov
mov
jp
xchg
movs
mov
clc
inc
cwde
ins
xlat
push
sub
mov
mov
rol
fstp
dec
or
push
stos
test
mov
xlat
inc
push
fucom
mov
xor
push
mov
push
out
(bad)
xchg
sbb
je
leave
xchg
mov
and
adc
into
and
push
out
xor
jne
xor
inc
or
mov
xchg
mov
aad
ror
popf
mov
sbb
and
sbb
push
dec
xchg
add
das
push
jnp
shr
dec
and
cli
lds
(bad)
sub
or
stos
popf
fldcw
cmp
dec
(bad)
push
cmp
mov
or
xor
cmps
push
adc
nop
inc
pop
stc
inc
push
je
(bad)
mov
je
les
mov
cmp
push
loop
movs
xor
mov
dec
jno
rcr
mov
call
ins
jno
call
push
dec
cmps
mov
jne
xor
popf
popa
sub
pop
ficomp
jg
and
mov
sti
lods
mov
imul
repz
scas
pop
mov
add
aas
or
jnp
xchg
push
rol
sbb
imul
pop
lock
jmp
lds
adc
xchg
push
dec
sar
fwait
jecxz
lahf
stc
sar
push
cmp
mov
dec
pop
dec
ret
pushf
xor
mov
xor
stos
push
fsubr
fnstenv
clc
aad
push
movs
rcl
rcl
mov
inc
push
push
(bad)
xor
and
push
lock
test
(bad)
iret
call
ins
push
sbb
sub
out
pop
in
pop
or
push
clc
add
mov
fcmovnb
jno
mov
jb
pusha
xchg
push
hlt
xor
(bad)
loop
pusha
adc
mov
aad
div
out
mov
inc
jp
ds
rcr
push
or
mov
test
dec
lahf
push
xchg
push
dec
or
mov
ds
sbb
xchg
cwde
mov
fwait
ret
mov
mov
xchg
mov
inc
arpl
pop
push
sbb
mov
ins
jnp
ja
mov
add
(bad)
aad
clc
dec
pop
jmp
xor
push
sbb
aas
or
imul
(bad)
(bad)
mov
adc
rcr
mov
nop
dec
mov
add
cmps
clc
jae
ds
jns
and
adc
cmp
ins
xlat
outs
cmp
lods
shl
test
and
dec
add
in
and
cmp
in
int
pushf
popa
jge
into
mov
hlt
(bad)
adc
adc
scas
jecxz
pop
jecxz
xor
test
pushf
(bad)
push
cld
or
adc
popa
or
adc
pop
in
aaa
pusha
inc
push
sbb
add
(bad)
xchg
jg
mov
fs
xchg
add
outs
xor
mov
arpl
cmp
inc
cmp
jne
push
dec
lds
add
je
xchg
push
nop
sub
dec
lds
jmp
outs
sar
lods
(bad)
ja
stc
(bad)
mov
fwait
mov
sub
cmps
in
push
gs
fild
pop
aad
adc
imul
jge
jo
xchg
outs
pop
pop
sbb
dec
sbb
xor
jno
hlt
fwait
xchg
cli
out
(bad)
lods
and
leave
cdq
mov
test
add
mov
pop
fadd
jb
inc
ss
push
inc
fcomp
cmp
popa
dec
dec
popf
loop
jmp
aam
pop
sub
add
and
call
stos
fmul
mov
mul
dec
mov
int3
adc
xchg
push
pop
daa
xor
nop
mov
aam
icebp
sbb
add
stc
cmp
cmp
add
popa
adc
fs
jnp
in
inc
add
sbb
(bad)
ins
sbb
imul
push
cs
xor
xchg
in
or
adc
sub
callw
outs
xchg
in
shl
loop
sbb
dec
out
mov
jmp
adc
fsubr
mov
mov
mov
pop
jb
clc
inc
dec
push
mov
cmp
inc
mov
adc
addr16
xor
(bad)
mov
clc
cmc
xor
xchg
cmps
inc
mov
mov
push
jge
ins
dec
push
mov
leave
push
dec
jb
fisubr
fs
add
push
mov
loopne
xor
xchg
call
rol
je
push
sahf
mov
out
(bad)
std
jo
cwde
adc
dec
outs
sbb
out
sbb
xchg
mov
or
popf
xchg
lods
jmp
xchg
xlat
loop
aas
adc
aaa
push
mov
arpl
inc
bound
lods
outs
adc
jmp
pop
fwait
movs
sar
mov
stos
cmp
scas
mov
inc
mov
jne
sub
xor
ss
ins
pop
dec
retf
loop
rcl
xchg
std
ins
inc
test
loop
aad
mov
sbb
addr16
ds
sbb
lods
mov
pop
rcr
push
pop
loopne
push
push
dec
push
mov
call
jns
das
sahf
mov
inc
je
out
jmp
jp
xchg
sbb
rol
sbb
jecxz
xchg
outs
and
adc
scas
jns
je
add
and
fldcw
pop
leave
xor
les
imul
loope
into
jnp
fld
or
push
mov
shr
loope
cmp
gs
cld
sub
clc
push
mov
and
mov
outs
(bad)
jmp
inc
lahf
int
ret
aaa
mov
or
mov
(bad)
fisttp
pop
mov
sub
test
jecxz
inc
jmp
pop
mov
imul
or
and
addr16
cmc
call
mov
pushf
xchg
movs
cld
data16
push
mov
aad
mov
mov
in
mov
mov
fdivr
inc
push
fmulp
retf
xchg
sbb
test
mov
xchg
pop
bound
in
add
mov
(bad)
inc
mov
pop
fsubr
rol
cmps
push
mov
mov
lods
add
retf
cdq
psubd
push
push
adc
jne
inc
repnz
repnz
dec
in
xchg
jecxz
jno
iret
cmp
sub
mov
je
cmp
mov
outs
adc
outs
out
jp
pusha
adc
push
mov
sbb
(bad)
sub
std
(bad)
and
inc
sub
call
bound
not
pop
mov
mov
cwde
jb
nop
mov
or
jo
int
push
jl
sbb
push
sbb
cmc
imul
int
mov
mov
pushf
nop
sbb
gs
jmp
and
ret
hlt
fsub
dec
enter
mov
cli
sahf
pop
sbb
and
pop
shl
mov
mov
fiadd
outs
mov
scas
cmc
cmps
push
adc
adc
push
sti
xchg
aaa
dec
mov
cmps
fs
jno
int3
bound
cmp
xor
fidiv
data16
bound
cmp
mov
or
pop
xchg
mov
adc
dec
pop
mov
add
and
jle
or
push
in
pop
int3
sti
(bad)
in
xchg
xlat
popf
inc
arpl
(bad)
pop
inc
int
pop
mov
lahf
jge
(bad)
lods
xchg
mov
mov
fucomip
arpl
out
and
shr
xchg
je
and
aam
sar
mov
data16
jbe
outs
sti
out
xchg
std
iret
xchg
jnp
adc
in
stos
cdq
mov
sar
jnp
push
pop
cdq
pop
ret
sbb
arpl
fs
xor
mov
ins
inc
mov
push
pop
cmps
sbb
xor
adc
int3
ins
div
xor
ja
outs
adc
push
lds
pop
cmp
std
jae
nop
ins
jecxz
ror
xor
bound
mov
call
add
xchg
popa
mov
clc
int3
(bad)
adc
mov
push
jmp
cmp
test
call
loope
push
pusha
scas
pop
mov
sbb
test
clc
aad
adc
scas
push
xor
fidiv
jmp
jns
sbb
(bad)
mov
loopne
push
mov
fiadd
jnp
das
cmp
ja
popf
jg
leave
mov
sbb
mov
es
adc
fcomp
retf
sbb
xor
outs
inc
mov
xchg
or
sub
ds
push
inc
data16
jmp
dec
stc
dec
push
mov
cmp
js
adc
pop
repz
adc
mov
loope
ret
in
mov
or
cwde
fnstsw
or
fwait
in
and
xor
or
inc
ja
lods
jl
jmp
pop
push
cmp
jle
dec
sbb
cli
fadd
sub
bound
jmp
out
jmp
xor
push
inc
popa
mov
sbb
daa
dec
jo
enter
sbb
sbb
retf
scas
(bad)
push
mov
not
int
scas
cs
cli
cmp
push
xor
pop
mov
push
lods
pop
ffree
sub
cmp
inc
aam
imul
push
add
imul
or
pusha
mov
pop
jg
pusha
xchg
fucomp
vpmacsswd
gs
jae
pop
gs
cmp
clc
push
ret
iret
adc
mov
or
pop
jmp
pop
aas
pop
fdiv
dec
xlat
xchg
and
jno
push
push
rol
fwait
ror
movs
or
gs
int3
outs
out
mov
cli
loope
mov
push
inc
sbb
pop
cdq
jecxz
pop
test
mov
or
(bad)
cli
js
push
leave
inc
mov
sar
xlat
mov
and
daa
push
imul
and
lods
mov
xor
mov
pushf
jmp
xchg
imul
imul
jp
sub
and
lods
lea
test
int
mov
cmp
push
pop
dec
xor
fcom
cmc
into
jg
push
fucomi
shl
in
jns
das
xor
cmps
retf
push
and
mov
pop
aaa
scas
sbb
jb
outs
sub
sbb
mov
push
adc
and
mov
aam
mov
dec
push
(bad)
mov
hlt
adc
dec
or
mov
cmp
jnp
add
mov
sub
ss
ins
and
inc
mov
cs
push
adc
xor
fsubr
or
(bad)
or
arpl
retf
xchg
xor
cmp
push
lahf
and
ds
pushf
ins
mov
mov
icebp
ror
xor
xor
xor
sbb
fnstsw
push
pop
dec
loop
cmp
xchg
adc
and
movs
pop
inc
jmp
cmp
fisttp
fs
ret
shr
pop
sbb
push
jne
xlat
fmulp
lds
dec
add
cmp
(bad)
lahf
and
sbb
jnp
outs
mov
sub
push
daa
(bad)
inc
pop
push
xchg
ins
std
stos
mov
bound
and
xchg
jl
test
loopne
nop
call
adc
out
sub
sar
pop
add
cmp
ror
sbb
xchg
out
clc
cmp
mov
pop
icebp
cmps
cmp
popa
adc
push
fisub
add
fcomp
ins
test
(bad)
call
add
xchg
push
or
add
jb
sti
adc
push
lea
test
es
xor
cli
push
mov
stos
or
(bad)
ret
push
inc
dec
jb
and
in
cs
push
inc
rcl
jg
lahf
sbb
and
sbb
dec
imul
out
xchg
cmps
inc
cmp
clc
test
jb
cmps
adc
fisub
std
mov
sti
push
ins
push
or
jecxz
or
sbb
sub
dec
mov
push
daa
mov
js
es
aaa
jp
jmp
loope
xor
mov
ja
mov
jno
mov
ja
fnsave
div
sbb
dec
sbb
add
push
jecxz
stos
aad
jne
mov
sbb
leave
push
push
sub
or
stc
arpl
bnd
jno
sahf
addr16
add
stc
push
cmp
and
mov
daa
ins
mov
jp
fmul
or
iret
shl
dec
popa
dec
aam
scas
arpl
(bad)
add
arpl
cmp
int
shl
push
inc
and
sbb
inc
nop
xor
retf
(bad)
adc
adc
dec
push
cld
popa
lds
sbb
mov
mov
mov
fstp
jns
jbe
fldenv
repz
mov
ret
jo
sar
mov
into
pop
push
pushf
xor
push
pop
inc
add
pop
sbb
fbstp
pop
push
aad
out
mov
clc
add
mov
mul
and
lock
xchg
push
repz
enter
jnp
inc
xchg
mov
dec
shr
inc
fimul
adc
sbb
cmc
mov
sub
ins
push
test
jmp
add
ror
fild
js
push
jae
les
xchg
(bad)
popf
adc
jmp
xor
jp
ins
mov
ror
dec
or
adc
inc
test
push
outs
mov
mov
xor
aam
imul
inc
inc
sti
add
push
shl
pop
cld
push
pop
sbb
test
cwde
rcr
inc
cmc
repnz
call
xor
inc
js
jmp
in
mov
pop
mov
adc
ins
movs
(bad)
push
(bad)
mov
arpl
xor
pushf
xchg
repz
jno
adc
cli
and
push
lds
ss
lock
sub
cld
lods
call
je
loope
or
adc
sahf
nop
out
mov
mov
cld
add
cmp
gs
lock
push
repz
pop
dec
(bad)
retf
mov
cs
dec
xor
ss
dec
bound
adc
mov
dec
push
pusha
fadd
(bad)
xor
mov
imul
xchg
mov
adc
pop
imul
mov
mov
retf
es
test
inc
repnz
fld
dec
push
push
mov
cmp
mov
inc
jl
(bad)
lds
bound
xor
fst
cmps
pop
lock
mov
lods
daa
pop
fstp
and
test
mov
cmp
add
mov
or
xor
jno
sbb
cs
test
add
test
sbb
mov
cmc
(bad)
aaa
and
adc
loope
(bad)
sub
dec
and
lds
out
cmp
xor
jle
or
cmps
les
mov
js
mov
push
add
das
inc
pop
imul
mov
mov
mov
(bad)
or
jmp
les
pop
rol
enter
fld
in
jnp
in
mov
jle
push
push
sub
inc
mov
adc
shr
sbb
xlat
test
ds
cwde
imul
pop
or
aas
or
mov
push
lds
pop
aas
(bad)
pusha
iret
in
repnz
dec
mov
sbb
add
inc
and
popa
push
and
in
mov
cmps
(bad)
scas
movs
leave
test
cmc
call
add
jns
outs
data16
pop
out
push
xchg
jle
dec
cmp
sbb
xor
inc
cli
(bad)
fsub
out
fisttp
push
add
pusha
ds
imul
inc
jp
stos
mov
jb
ficomp
fisubr
pop
push
mov
shl
add
adc
cmc
or
test
inc
fwait
xor
sbb
fucomi
mov
popf
outs
fst
mov
ret
jae
shl
cmps
mov
shl
stos
inc
pop
adc
sbb
movs
sbb
add
(bad)
mov
ds
mov
push
lods
sbb
xchg
(bad)
cli
les
repnz
add
push
inc
adc
ins
hlt
retf
loope
gs
inc
xchg
adc
push
xchg
inc
fdivr
mov
inc
pop
pop
mov
retf
rdtsc
retf
or
(bad)
cmp
cmps
pusha
loop
adc
dec
mov
cld
xor
push
mov
sbb
jne
(bad)
cmp
sbb
add
jbe
(bad)
and
sbb
mov
push
stc
mov
shr
fwait
and
je
fstp
cmp
fs
mov
div
jle
movs
dec
xor
or
jns
mov
push
leave
loope
xchg
push
push
mov
inc
and
mov
loope
inc
movs
in
dec
sbb
sbb
dec
jp
cmp
out
pop
sub
push
add
out
fucomip
ss
es
pop
leave
lods
mov
daa
add
iret
icebp
sub
repnz
dec
sahf
fs
test
repnz
shl
rcl
and
stos
xor
mov
inc
jo
fsubr
xor
pop
pop
hlt
cdq
mov
adc
xchg
mov
and
mov
idiv
sbb
jb
pop
lods
mov
mov
repz
xor
push
in
cmc
fld
mov
arpl
lods
mov
shl
repz
sbb
stos
mov
jmp
cs
xor
sbb
outs
stos
jg
jmp
daa
push
jae
mov
scas
enter
adc
add
adc
xchg
mov
dec
repz
pop
push
dec
sub
or
mov
cmps
pop
enter
jne
add
mov
hlt
pop
in
int3
add
in
pop
and
ret
adc
jecxz
pop
pop
leave
scas
and
mov
lods
and
fwait
push
cdq
pop
push
in
push
addr16
xchg
cmp
sbb
and
(bad)
xchg
stos
jmp
xor
retf
pop
mov
cwde
ror
mov
scas
push
xchg
sub
and
cmps
adc
push
pusha
(bad)
mov
jbe
outs
fidiv
(bad)
pop
xchg
fistp
(bad)
rcl
fsub
mov
in
mul
jmp
pop
cmp
fiadd
pop
outs
mov
jmp
jp
(bad)
fld
int
cmps
mov
pop
xchg
mov
sti
adc
jecxz
jnp
dec
push
or
jecxz
fyl2x
xor
pop
and
(bad)
pop
les
aaa
std
retf
rol
mov
sbb
push
aam
sub
jg
adc
nop/reserved
sbb
mov
(bad)
rcl
sahf
cmp
repz
adc
push
jl
fdivr
sbb
icebp
or
jmp
mov
push
xchg
dec
add
inc
mov
cmp
dec
adc
and
sub
addr16
pop
dec
sahf
jo
movs
xchg
cdq
ficom
mov
jl
ds
mov
jl
mov
dec
repnz
add
ret
scas
sub
in
rcr
pop
sub
cld
dec
cwde
retf
xor
loope
icebp
into
fmul
and
xchg
leave
ret
or
test
and
retf
and
add
mov
cmp
(bad)
pop
pusha
mov
nop
and
sbb
adc
test
jae
(bad)
jmp
dec
and
stos
push
mov
and
test
or
mov
mov
lds
cld
js
fistp
movlps
in
addr16
fmul
dec
dec
nop
push
fwait
mov
pop
js
mov
sub
das
int
push
cmc
xchg
fs
mov
lahf
pop
lea
retf
fldenv
stc
in
sub
fcomp
js
test
das
and
fnstsw
mov
mov
mov
out
jns
adc
jbe
out
out
retf
mov
in
jecxz
jmp
and
mov
retf
jp
movs
adc
jmp
(bad)
(bad)
xlat
push
(bad)
cli
sub
movups
and
xor
jns
pop
or
sbb
ins
lods
loop
aaa
mov
ret
ins
or
mov
add
inc
sbb
outs
adc
adc
data16
xor
or
pusha
into
xchg
pop
aas
arpl
leave
add
xchg
aaa
dec
(bad)
mov
ins
mov
ja
stos
leave
std
mov
fld
data16
and
aaa
xor
in
inc
cld
hlt
movs
or
lock
mul
pop
scas
ss
push
pop
sub
inc
pop
fbstp
sub
fst
mov
outs
stc
lsl
xchg
cmp
push
fwait
(bad)
jnp
das
(bad)
mov
std
xor
dec
movs
mov
pushf
scas
out
sbb
hlt
jle
xchg
test
inc
int
sbb
pop
and
gs
dec
fiadd
into
mov
(bad)
dec
or
and
xor
fistp
dec
jmp
loope
jnp
imul
xor
mov
mov
jg
(bad)
(bad)
mov
mov
xlat
xchg
std
jb
bound
mov
cmp
push
jbe
add
jae
jge
out
loopne
outs
sub
mov
or
dec
test
xchg
pop
out
inc
gs
inc
ret
ja
jo
mov
xor
push
mov
(bad)
scas
mov
in
cli
fs
sbb
xchg
sbb
cwde
and
int3
add
mov
in
adc
cmp
xor
loopne
mov
in
xor
mov
cwd
xchg
xor
adc
lods
cmp
push
mov
jp
push
ror
inc
xchg
in
in
lea
(bad)
sbb
ja
ins
xor
pusha
add
mov
and
repnz
fnsave
sub
inc
ds
loope
pop
sub
mov
out
and
pushf
push
xor
retf
push
xor
scas
(bad)
dec
push
mov
cmp
idiv
ret
imul
and
enter
jle
adc
aaa
in
push
mov
ins
cmp
jb
dec
xor
mov
and
mov
sbb
pop
xor
ror
add
inc
dec
mov
and
dec
leave
jnp
xlat
adc
xor
ret
add
jmp
repz
dec
(bad)
(bad)
test
imul
loopne
jmp
lock
test
adc
push
das
push
adc
stos
ds
nop
ror
xor
out
mov
dec
mov
pop
add
push
pushf
add
inc
inc
in
cmc
xchg
and
lds
sbb
adc
ins
in
cmp
stc
jno
mov
call
aaa
lock
or
(bad)
jmp
(bad)
enter
inc
ins
pop
sbb
sahf
push
jne
mov
test
mov
out
(bad)
leave
sbb
push
adc
stc
push
ret
cmp
movs
add
xchg
push
sbb
mov
jp
xchg
sub
stos
jecxz
push
or
retf
adc
inc
bound
mov
mov
data16
std
scas
loopne
xor
add
(bad)
iret
lock
in
div
pop
fstp
stos
push
neg
mov
gs
sub
(bad)
dec
pop
lea
es
aad
xchg
pop
in
outs
dec
mov
push
mov
div
inc
push
push
push
enter
jo
out
clc
jne
aaa
mov
mov
mov
cmp
(bad)
into
pop
and
add
lods
pop
add
fcom
cmp
xchg
add
xchg
test
mov
or
sbb
out
cld
lods
adc
loop
adc
dec
xor
inc
xor
hlt
scas
jl
cwde
xchg
(bad)
push
adc
loopne
and
retf
mov
pop
scas
dec
jno
pop
fbld
inc
fs
cmp
adc
pop
pop
xor
sub
fs
lds
mov
repz
in
cmp
(bad)
or
push
cs
pushf
gs
sub
mul
imul
cmps
stc
mov
xlat
push
ja
in
repnz
xchg
imul
jae
xor
push
xor
sub
call
call
adc
mov
clc
les
es
(bad)
aad
ret
cmp
xchg
int
pop
sbb
les
and
rcl
mov
push
push
cld
fwait
jne
inc
inc
hlt
pop
es
and
mov
jl
rcr
adc
push
fisub
and
sbb
fdiv
jne
int
mov
icebp
sub
sub
(bad)
fisubr
mov
sbb
(bad)
mov
fs
sahf
(bad)
cmp
dec
push
stos
(bad)
xchg
mov
jecxz
dec
adc
fcmovb
neg
dec
shr
xor
retf
jmp
iret
inc
add
inc
popa
repz
mov
sub
out
inc
test
pop
out
jno
mov
mov
mov
fsubr
sbb
cmps
pop
retf
inc
lds
rcl
add
pop
lods
xor
ja
mov
xchg
mov
and
xchg
inc
fmul
adc
sbb
in
xchg
sbb
hlt
and
icebp
sbb
(bad)
mov
js
out
ficomp
out
sbb
nop
adc
fldcw
(bad)
and
mov
jne
cmp
inc
call
bound
push
cmp
cwde
push
outs
stos
pop
ficom
gs
dec
popa
fidivr
nop
cmp
xor
sti
mov
je
retf
in
mov
mov
loop
xchg
cdq
leave
out
or
dec
xor
inc
sub
cmp
fstp
js
jno
fucomip
mov
jns
ret
mov
aam
push
fs
cs
mov
mov
and
out
loop
add
movs
stos
fsub
lahf
nop
pop
mov
xor
dec
inc
mov
mov
xchg
or
jmp
xchg
and
add
stos
ss
jb
jl
fisub
xchg
test
jg
shr
aaa
mov
cmp
xchg
xor
sub
outs
shl
adc
rol
mov
push
repnz
hlt
(bad)
sbb
leave
pop
push
test
ins
test
xchg
jno
lods
inc
scas
adc
jmp
or
jno
add
inc
cmp
mov
and
mov
pop
pusha
mov
mov
cmp
je
(bad)
sbb
dec
xchg
rol
outs
pop
mov
pop
mov
out
mov
xor
cli
pushf
cdq
data16
arpl
(bad)
icebp
leave
movs
test
mov
out
inc
inc
or
in
aas
mov
xchg
outs
jl
or
sub
dec
arpl
data16
sub
pop
xor
jb
pop
in
ins
mov
jge
mov
in
sub
dec
stos
jnp
(bad)
jl
dec
sub
(bad)
pop
gs
jbe
ins
enter
daa
xor
mov
jnp
push
rol
inc
inc
and
stos
push
jmp
jo
xchg
mov
in
enter
ds
cmc
pushf
enter
jl
sub
sub
xchg
push
or
xor
nop
add
nop
adc
jle
aam
(bad)
stc
mov
fdiv
cmp
stos
jbe
sbb
mov
bound
ret
inc
sahf
xchg
out
xor
scas
int3
xchg
jns
sahf
mov
lods
nop
ja
das
push
lahf
(bad)
xchg
les
ja
std
pushf
mov
pusha
lods
inc
jmp
out
add
in
out
hlt
mov
in
push
out
(bad)
sub
cmp
push
jae
or
mov
xchg
inc
cmp
fisttp
add
pop
xor
mov
popa
(bad)
retf
adc
or
rol
sub
lds
xor
sar
cmp
jne
les
mov
pop
mov
pop
shl
cwde
ja
push
sar
xchg
test
gs
gs
sbb
jb
daa
in
call
js
mov
rcl
jae
retf
lea
mov
cmps
out
xchg
fdiv
stc
out
aad
or
shr
xchg
jno
gs
jmp
mov
rcr
or
in
es
ret
fadd
leave
(bad)
cmp
fadd
push
mov
(bad)
rcr
pop
repz
fstp
lock
rcl
in
clc
jmp
cmp
xchg
xchg
adc
jb
loop
mov
and
inc
mov
aas
xor
aas
inc
fdiv
pop
add
loop
adc
mov
(bad)
jl
(bad)
jno
mov
lods
aas
xor
push
loop
in
fisttp
movs
push
add
jno
call
sub
pop
cmp
pop
retf
das
shl
lahf
mov
push
inc
imul
sbb
pop
jge
in
push
jb
pop
(bad)
jge
sub
cmps
les
xchg
or
fnstcw
add
sub
add
xor
cmps
mov
psubsb
mov
(bad)
mov
push
daa
mov
test
push
pop
into
or
dec
mov
ins
ins
test
push
sub
(bad)
xchg
xchg
inc
outs
pop
lds
out
sbb
loope
push
loope
sete
xchg
test
jo
add
mov
cmp
out
imul
aad
aaa
jle
ror
and
lahf
lea
dec
clc
pusha
jmp
xor
mov
cwde
cmp
aas
mov
xor
jnp
push
sbb
add
int3
stos
aas
cmc
aam
leave
test
and
push
cmp
sub
add
xlat
jnp
mov
js
cmp
xor
clc
repz
mov
pop
xor
imul
ret
ficom
sub
sub
sub
jnp
xor
repnz
dec
dec
sub
sbb
(bad)
stos
add
pop
(bad)
imul
in
je
cmp
data16
(bad)
sar
loop
call
xchg
test
push
scas
leave
and
adc
add
mov
pop
jle
or
mov
scas
fsubp
lea
ret
jge
fwait
nop
stc
enter
mov
sub
in
add
idiv
scas
int
adc
imul
fist
int3
dec
xor
inc
outs
mov
mov
popf
or
jae
xchg
pusha
fcomp
fdivp
xchg
pop
inc
push
xchg
and
(bad)
cld
shl
outs
sub
dec
sub
jmp
ret
xor
inc
mov
das
pushf
stc
jecxz
xor
push
dec
mov
fdivr
movs
mov
add
cmps
inc
and
lds
imul
loope
jae
sub
cs
inc
mov
pop
pop
push
add
xor
cmp
pop
pop
lahf
add
es
push
retf
adc
dec
(bad)
xchg
test
pop
add
push
mov
pop
dec
pop
push
jae
ds
(bad)
cli
cmp
sub
mov
(bad)
std
stos
jo
sti
cdq
je
fcmovbe
adc
push
xor
push
fld
test
cmp
sbb
out
ja
sub
imul
stos
push
ins
popa
inc
cmp
outs
cmp
sub
sbb
daa
sbb
outs
mov
inc
pop
cmp
xchg
in
aad
cli
sbb
pop
xor
mov
mov
sahf
jge
inc
ja
test
js
dec
mov
push
cwde
rol
or
xor
inc
xchg
enter
adc
lods
arpl
push
loope
movs
dec
jp
adc
iret
hlt
jle
imul
(bad)
cmp
enter
pop
sub
inc
cld
cmp
pop
cmp
test
push
inc
mov
mov
imul
out
and
lahf
lahf
mov
inc
mov
or
or
sbb
sahf
mov
mov
jo
push
jge
movs
outs
jmp
rol
test
cmps
mov
in
retf
(bad)
sbb
retf
pop
cmp
mov
repz
mov
aas
cli
push
out
(bad)
xchg
mov
das
cmps
xor
push
outs
fadd
daa
and
out
das
xchg
cmp
lods
cs
std
jne
pop
pop
pop
popf
adc
inc
jno
inc
pop
jne
inc
cdq
fwait
mov
xchg
dec
mov
(bad)
stc
jns
xlat
xchg
gs
fcomip
and
rcl
repz
cmps
cs
mov
imul
call
jle
mov
jb
jb
(bad)
sti
es
mov
inc
lods
or
fild
and
sub
jle
scas
mul
fisub
push
or
lods
(bad)
repnz
mov
jmp
cmp
xchg
(bad)
stc
lock
adc
rcr
jno
iret
test
fild
xchg
faddp
and
cs
fbstp
mov
test
sbb
call
dec
gs
test
dec
jno
leave
sbb
aaa
and
movs
mov
call
jmp
mov
jl
push
out
retf
pop
shr
add
stos
dec
loop
jp
pusha
push
pop
jmp
mov
pop
outs
ins
les
(bad)
pop
add
repnz
mov
dec
mov
test
shl
test
cmp
int
aad
adc
mov
cmp
xchg
jl
sbb
xor
jecxz
mov
add
push
jae
dec
out
js
nop
push
pop
call
int3
int3
xchg
dec
popa
pusha
leave
cmc
in
lds
or
sub
scas
jno
cmp
test
pop
xchg
push
fidivr
cdq
sti
cld
jne
sti
cmps
xlat
pop
fadd
push
push
mov
leave
dec
jmp
push
sub
outs
pusha
push
inc
movs
xchg
daa
ins
sub
xchg
dec
add
cld
stos
arpl
cmp
push
or
push
cmpxchg
mov
mov
stos
xchg
fwait
mov
fdivr
add
jmp
mov
mov
xchg
or
dec
retf
lds
push
lds
cs
in
(bad)
stos
mov
outs
xchg
xlat
jae
or
fs
out
in
psrlw
jge
dec
xor
mov
xchg
adc
aas
push
rcr
fild
jmp
jge
ret
jmp
push
sbb
hlt
push
mov
push
add
mov
adc
fs
and
sbb
sub
mov
mov
out
pop
out
lods
mov
aas
(bad)
jmp
cmp
dec
fs
mov
and
push
jb
mov
inc
push
push
das
cs
sbb
sbb
sub
pop
or
popa
sub
mov
pop
jecxz
scas
mov
add
jl
sbb
mov
loopne
dec
mov
adc
and
add
stc
out
daa
ret
mov
sbb
add
nop
push
mov
mov
sbb
aad
mov
jae
iret
adc
mov
movs
jge
popa
push
ret
je
rol
lods
pop
aad
push
test
dec
int
loopne
std
jmp
jmp
push
jnp
sbb
enter
mov
stc
mov
adc
idiv
js
jl
pop
add
clc
xchg
stc
pop
push
pop
mov
outs
out
inc
jge
add
std
pop
fcomp
test
repz
and
mov
(bad)
cmps
cmp
pushf
(bad)
into
cmps
cmps
into
and
cmc
mov
pop
pop
mov
xor
pop
xchg
pusha
bound
adc
mov
clc
pop
or
inc
jns
outs
aas
sbb
sub
pop
push
add
mov
clc
loop
pop
xor
mov
sahf
stos
push
pop
pop
xchg
stc
lea
fistp
icebp
jae
cwde
mov
ficom
sti
(bad)
stc
mov
jecxz
fsub
jg
(bad)
sahf
cmp
sbb
bound
fstp
mov
sub
xor
leave
test
fild
mov
jg
adc
test
pop
std
std
mov
popa
cmps
nop
imul
adc
pop
push
in
sub
cpuid
jmp
xor
cmp
xchg
jp
rcl
sti
stos
test
xor
mov
pop
lds
cmp
cmp
hlt
pop
stos
mov
adc
(bad)
lock
cld
sbb
jbe
dec
sbb
arpl
mov
fisttp
loope
nop
inc
xor
inc
or
xor
sbb
loopne
imul
int
mov
fdiv
mov
idiv
loopne
pop
out
dec
dec
pop
mov
or
xor
or
dec
pop
leave
mov
mov
jbe
xor
fld
pusha
xchg
ror
jge
int3
bnd
out
adc
jmp
cmps
pop
stos
push
mov
popf
cs
or
and
mov
loopne
xlat
cmc
or
push
pand
fs
add
mov
or
loopne
cmc
cmp
(bad)
dec
mov
and
movs
or
test
cmp
push
xchg
ja
js
stc
call
push
xchg
and
xchg
or
push
xor
in
mov
sbb
pop
out
adc
fwait
sub
cmc
in
cwde
test
dec
aaa
lods
xor
dec
loop
enter
jb
adc
ja
cmps
ret
pop
sbb
fmul
add
push
icebp
adc
int3
adc
and
sbb
cmp
jo
aam
mov
add
xlat
sub
and
cs
shl
adc
outs
dec
repz
jne
cmp
xchg
lds
mov
nop
inc
pop
dec
call
in
jl
adc
sbb
loop
cmps
add
jl
cdq
mov
mov
ins
sar
mov
gs
neg
lods
in
and
lahf
mov
sahf
movs
xor
aaa
dec
mul
int
mov
lahf
movs
xchg
push
das
jl
(bad)
cs
pusha
cld
push
sbb
movs
outs
cwde
leave
push
movs
add
cmp
push
pop
add
nop
je
mov
or
mov
mov
ss
(bad)
int
mov
stos
adc
es
into
mov
stc
xchg
inc
stos
clc
sbb
jecxz
xor
mov
ret
test
(bad)
mov
call
dec
pusha
or
fs
das
xor
leave
out
and
aas
mov
and
sti
jmp
sub
inc
sbb
jnp
imul
lahf
repz
lods
add
aaa
sbb
sbb
cmp
mov
fistp
xchg
sar
inc
mov
loope
dec
aam
xchg
xchg
xchg
(bad)
repz
hlt
fmul
imul
mov
mov
push
mov
xchg
adc
outs
mov
cmovs
(bad)
in
mov
add
adc
mov
mov
mov
movs
push
cmps
add
shl
lds
cmps
aas
sbb
cli
push
and
add
xor
out
push
leave
rcr
sbb
mov
xor
adc
jle
ds
movs
pop
mov
push
mov
sub
aas
jecxz
fsubr
xor
sbb
bound
js
push
push
and
xor
jb
cmp
gs
outs
sbb
mov
mov
sar
pop
les
jae
xchg
jae
outs
inc
clc
aam
mov
enter
mov
in
popf
fstp
popa
ret
out
sub
jo
clc
adc
xchg
lea
shr
in
sti
pop
test
adc
imul
mov
mov
and
cmp
enter
lock
xor
std
out
rcr
sbb
out
test
xchg
sub
jo
outs
movs
inc
addr16
movs
jns
icebp
fld
stc
inc
push
cld
xor
xchg
lahf
mov
mov
cld
sbb
(bad)
out
or
lock
push
aaa
leave
and
retf
jle
jb
sub
fidiv
std
sti
(bad)
cwde
js
outs
xchg
loopne
xchg
jp
inc
icebp
jecxz
dec
dec
(bad)
out
pushf
add
push
retf
mov
mov
push
rol
stos
jecxz
xchg
fcmovb
adc
cmps
(bad)
push
shl
push
movs
inc
push
push
stc
arpl
cwde
rol
repnz
adc
cmp
enter
push
push
fidiv
mov
popf
push
aaa
fwait
xchg
gs
scas
js
fiadd
inc
(bad)
lods
into
push
lgs
xchg
sub
or
or
push
mov
adc
pop
jmp
or
and
leave
inc
push
cmps
jb
ins
mov
sub
test
xlat
dec
cmp
sub
lods
sub
gs
mov
mov
mov
mov
sbb
(bad)
sbb
movs
shl
imul
mov
dec
loop
retf
mov
and
and
or
mov
mov
push
sub
loopne
cwde
ins
sbb
mov
cmp
cmp
ret
popf
mov
(bad)
mov
mov
mov
sub
rcl
std
add
inc
sub
mov
je
jg
mov
dec
sub
pop
cmps
xchg
iret
inc
imul
jge
dec
sub
xor
cmp
inc
ret
push
mov
pop
in
outs
sub
adc
jo
xchg
xor
std
jle
push
xlat
push
push
inc
adc
mov
cmps
jb
fdiv
dec
scas
xchg
call
and
xchg
leave
dec
jle
sub
mov
jge
pop
ret
inc
sub
ins
xchg
sbb
std
loop
lahf
inc
movs
add
aad
shl
jle
and
hlt
cmp
push
xor
push
xchg
lahf
out
inc
sub
loop
(bad)
jno
mov
mov
mov
mov
dec
sahf
sbb
int
push
add
cmp
inc
inc
add
outs
adc
fwait
push
inc
push
and
sbb
xchg
push
push
(bad)
aaa
mov
and
inc
jae
shl
call
ins
aad
dec
jmp
mov
push
cmp
aas
or
les
fisub
mov
call
fld
push
push
popf
dec
jge
mov
mov
xor
inc
xchg
add
loop
xchg
es
inc
(bad)
in
nop
cdq
sub
scas
inc
sar
in
sahf
pop
repz
mov
sbb
mov
leave
sbb
mov
sbb
mov
jno
sahf
dec
sar
lahf
adc
xor
pop
ret
mov
mov
jp
mov
fbstp
or
xchg
retf
push
xor
jmp
fldcw
push
mov
sbb
leave
add
rep
mov
jl
push
jecxz
mov
mov
pop
cli
jge
xchg
in
inc
pusha
ja
in
jmp
push
scas
scas
or
jle
in
and
push
xchg
dec
pop
or
inc
ja
xor
mov
cmp
iret
cmp
stc
sbb
dec
arpl
dec
in
pushf
das
shl
(bad)
mov
lods
(bad)
neg
inc
ret
cld
mov
fwait
jo
mov
pop
push
int3
(bad)
lods
mov
push
clc
in
push
sub
jo
enter
cwde
rcr
rcr
mov
aaa
mov
mov
or
mov
mov
sbb
or
xchg
jbe
mov
mov
push
dec
push
sub
cli
dec
cmc
inc
lods
scas
push
lock
mov
cwde
out
mov
call
inc
lock
push
sbb
fdiv
rcr
rcr
adc
int
cld
sbb
push
push
ss
add
dec
xchg
xor
call
outs
(bad)
fdivp
out
popa
stos
es
add
sbb
push
ds
push
ins
dec
dec
cmp
or
jl
dec
xchg
mov
imul
fcom
lods
mov
pop
movs
imul
pop
sbb
leave
out
call
sahf
add
shl
adc
mov
data16
loope
jno
push
lock
jb
popf
dec
lods
xor
jbe
inc
fnstcw
jecxz
in
push
ss
into
and
pop
and
lahf
sti
aam
push
and
imul
push
cmp
mov
out
pop
test
adc
mov
adc
stos
mov
cmp
imul
mov
aas
jle
clc
in
jle
jns
jp
sub
cmp
ins
stc
enter
xor
add
ss
push
scas
cmp
ret
xchg
loopne
js
pop
loopne
in
cmp
test
pop
bound
push
rcr
jb
jnp
inc
lahf
mov
jg
ja
pop
retf
xor
mov
or
lock
repz
fs
jne
xchg
inc
dec
sbb
into
sub
add
push
push
in
mov
pop
lock
test
and
ins
imul
fcmove
fild
mov
cmps
fstp
dec
mov
pop
nop
addr16
cdq
or
pop
jns
shl
lds
pop
fs
mov
dec
call
dec
loopne
js
xchg
lods
push
pop
dec
pop
add
pop
mov
bound
and
sbb
push
cmp
and
pop
cli
push
mov
inc
mov
mov
fs
aam
popa
jne
or
bswap
push
loope
push
stos
retf
or
pusha
mov
int
les
scas
aaa
inc
stc
ds
mov
pusha
das
and
sub
addr16
mov
push
dec
inc
adc
add
xchg
icebp
pop
cmp
mov
loop
push
(bad)
dec
push
sahf
add
repnz
sub
cmp
je
std
mov
mov
int
mov
cmp
xlat
add
(bad)
dec
aam
int3
ins
rcr
pop
jmp
daa
mov
or
and
test
sub
sbb
mov
or
ror
dec
push
or
shr
push
xchg
xchg
pop
int
jg
inc
popa
mov
test
repnz
hlt
repz
ficomp
dec
test
push
ins
test
(bad)
test
mov
push
adc
xchg
pop
jmp
sbb
(bad)
mov
cmp
mov
mov
add
and
jnp
push
ja
push
loop
retf
and
(bad)
in
call
xor
shl
cmps
cld
mov
jbe
je
fdiv
xor
dec
lock
call
popa
cli
add
mov
xor
jecxz
mov
inc
and
jae
push
imul
mov
mov
mov
(bad)
in
pop
cmp
pushf
push
inc
push
mov
pop
mov
pop
or
mov
aam
retf
mov
(bad)
fnsave
sbb
in
xor
pushf
sbb
aas
cmp
cwde
fs
dec
neg
call
scas
nop
dec
pop
jecxz
mov
std
sbb
cdq
loop
daa
push
addr16
jge
mov
rcr
mov
sbb
bound
outs
inc
xchg
popf
xor
sbb
sub
retf
push
ficomp
pop
adc
sub
outs
dec
push
pop
aaa
daa
jns
fsub
push
xchg
das
test
xchg
pop
lock
es
inc
xchg
push
and
xchg
mov
sub
sbb
mov
fisttp
mov
inc
push
push
push
sub
out
inc
push
fnsave
inc
sbb
cmc
ins
and
adc
push
mov
sub
mov
scas
enter
das
mov
movs
xor
loope
xchg
sbb
jg
dec
adc
test
in
(bad)
push
adc
clc
lock
add
xchg
out
bound
add
pop
mov
cmp
sub
icebp
xchg
and
call
stos
and
xor
dec
jo
mov
cmc
sub
xor
cmp
mov
jmp
int
cld
enter
bswap
sub
push
aaa
mov
mov
cmp
mov
sub
xchg
jno
cmp
les
push
je
mov
fidivr
mov
int
pop
sti
pop
xchg
push
push
jl
rcr
rcl
dec
mov
adc
jae
retf
jnp
sub
or
xchg
mov
iret
add
aaa
adc
es
outs
add
sbb
xor
push
popf
xchg
xor
call
push
mov
cmp
popa
xlat
xor
pop
int
cmp
mov
and
in
push
mov
enter
mov
retf
mov
ss
or
sbb
mov
stc
mov
pop
jns
js
popa
xor
xchg
mov
shl
push
sbb
shr
xchg
les
mov
and
lods
lahf
mov
dec
lahf
adc
fistp
mov
add
cli
mov
nop
push
pop
and
inc
je
pop
imul
ror
mov
(bad)
cmp
dec
in
add
fld
cmps
jne
jno
push
push
(bad)
jl
cli
imul
xchg
dec
enter
push
arpl
or
push
push
xchg
add
adc
popa
rol
imul
ins
cmps
clc
outs
push
test
pop
pop
sbb
dec
fimul
dec
sti
aam
dec
cdq
cwde
dec
icebp
mov
push
dec
fcomp
scas
stos
mov
in
enter
mov
lods
stc
cmp
test
das
and
(bad)
inc
inc
or
mov
ins
pop
jl
xlat
(bad)
data16
loopne
cmp
xchg
xchg
sub
inc
(bad)
and
mov
in
dec
cli
lea
fs
dec
and
mov
push
test
cmp
outs
fbstp
add
lods
fstp
inc
jmp
sbb
scas
pop
adc
out
xor
mov
dec
and
sbb
dec
adc
add
sub
mov
push
std
ins
xchg
jl
jp
xchg
es
(bad)
sti
mov
sbb
mov
xchg
mov
pop
int3
shr
jl
hlt
xor
lds
adc
sbb
mov
inc
pop
ss
das
hlt
dec
aad
mov
xor
inc
icebp
mov
mov
dec
shl
cmp
dec
lock
add
or
je
dec
push
sbb
adc
xor
push
or
jne
mov
pop
ja
test
imul
or
and
sub
mov
iret
inc
test
idiv
imul
shr
sbb
imul
jp
repz
ror
push
das
add
push
cld
jp
inc
xchg
inc
sub
in
gs
jp
mov
mov
adc
fsub
dec
or
loopne
in
sahf
mov
and
in
(bad)
pop
rcl
addr16
cmp
inc
iret
xchg
mov
xor
mov
mov
lahf
(bad)
jmp
mov
push
inc
sbb
inc
retf
add
mov
outs
lock
mov
mov
lods
repz
sub
test
mov
lods
ds
(bad)
ins
xor
xchg
ds
cmp
aas
adc
fdivr
dec
movs
or
mov
lea
(bad)
sbb
and
stos
inc
xor
jle
mov
stos
fstp
ja
jmp
mov
adc
lea
cld
in
jne
xor
or
in
jbe
mov
int3
and
test
stos
sbb
mov
sbb
sub
out
cld
mov
xchg
xlat
nop
push
xor
and
ins
in
movs
dec
or
jmp
(bad)
aas
mov
retf
std
arpl
mov
in
aam
dec
cld
xor
in
cmp
mov
loope
mov
jno
sahf
dec
pop
adc
jp
adc
rcl
cmp
div
repnz
dec
popf
inc
ret
in
cmp
and
push
inc
test
fsubr
xor
mov
aaa
pop
xchg
push
jmp
fcom
adc
dec
cmp
sbb
dec
sbb
add
aas
lock
xor
shr
pop
lea
cmp
mov
jo
push
int
mov
dec
mov
das
or
adc
jae
cmp
mov
cmps
add
aad
xchg
dec
and
sbb
test
pop
sbb
fsubr
shr
add
stos
loope
and
test
adc
push
mov
and
bound
iret
out
jnp
dec
inc
xchg
inc
test
into
or
in
mov
fdiv
enter
and
adc
inc
dec
or
jb
xor
iret
gs
jl
sbb
pushf
jecxz
inc
ret
cmp
mov
mov
repnz
inc
mov
jo
lock
cmp
mov
sub
aaa
pop
add
in
add
pop
dec
stc
and
mov
or
inc
pop
jmp
sbb
je
sub
rol
mov
cmp
and
lods
data16
lahf
sub
cmp
data16
test
cwde
fild
les
cmps
sbb
jne
outs
shl
dec
jmp
jecxz
dec
cwde
stos
xor
pop
and
(bad)
dec
pushf
cmc
scas
es
pusha
mov
sbb
mov
xchg
jno
sar
imul
fstp
adc
xor
js
hlt
jmp
pop
jg
mov
fstp
xor
jp
push
rcr
push
std
xchg
pop
cmp
sub
rcl
or
or
loopne
and
out
mov
cs
into
stos
ja
ss
(bad)
cli
jae
mov
enter
dec
in
dec
add
cld
sti
jge
ins
inc
sub
test
dec
idiv
fstp
inc
fwait
inc
mov
fidiv
fsubr
pop
sbb
jb
sbb
push
jle
repz
mov
dec
aas
call
pop
fwait
(bad)
out
cdq
in
jns
cmp
cmps
xchg
dec
(bad)
fild
mov
jmp
mov
mov
cdq
jge
inc
out
jae
mov
fidiv
fwait
gs
ffreep
jbe
sahf
scas
sar
fcom
inc
hlt
in
cmp
mov
daa
xor
dec
or
sbb
xchg
jb
cmp
aam
repz
popf
inc
push
popa
out
mov
xor
cbw
inc
repz
pop
dec
mov
dec
sbb
out
and
sub
push
mov
mov
test
sub
sar
pop
xchg
push
pop
mov
xor
int
jp
mov
rcr
dec
mov
push
shr
add
sbb
or
push
inc
int
(bad)
mov
jo
push
test
data16
in
mov
xchg
scas
cmp
inc
xchg
jne
cmp
in
adc
jle
movs
or
inc
mov
in
addr16
sbb
int
jle
add
lahf
mov
dec
cmps
adc
mov
cmp
in
add
sub
iret
aam
mul
xchg
adc
inc
push
mov
mov
xchg
or
mov
inc
test
jbe
daa
inc
std
arpl
xor
and
push
ins
outs
mov
jmp
sub
xchg
add
mov
sub
mov
mov
repnz
movs
push
jg
into
adc
or
push
mov
loopne
into
retf
adc
rol
cld
pop
in
mov
gs
(bad)
or
mov
add
outs
adc
imul
pop
xchg
iret
push
pop
pop
sbb
jle
stc
inc
adc
jo
ins
int3
jno
xor
xorps
dec
mov
inc
jne
xchg
retf
dec
push
dec
xchg
mov
retf
pop
xchg
inc
js
daa
loopne
pop
rep
sbb
mov
mov
sub
cld
out
test
xor
lds
fst
inc
fs
xchg
ret
mov
dec
loopne
xchg
push
adc
sbb
loop
das
aaa
aaa
add
cmp
xchg
fdiv
rcr
pusha
mov
or
or
sbb
int
jbe
jae
push
mov
clc
add
lods
add
out
mov
sahf
mov
dec
cmp
fidiv
fbstp
jge
ret
mov
aam
call
pop
mov
movs
add
push
cmps
sbb
jne
push
xchg
aas
stos
loop
imul
pop
and
(bad)
jmp
jmp
sbb
or
nop
xchg
data16
dec
jo
hlt
sub
mov
pop
lock
stos
sbb
lods
and
ins
ret
mov
xor
xchg
pusha
gs
mov
faddp
cwde
mov
mov
outs
dec
jno
scas
push
call
data16
lea
jnp
xchg
in
cs
movs
dec
pop
xor
mov
sbb
dec
push
sub
test
daa
jle
mov
sahf
jp
scas
popf
not
fiadd
push
dec
int
xchg
enter
dec
mov
fisub
xor
repz
movs
mul
in
pop
jo
pusha
fs
mov
inc
mov
xchg
stos
les
adc
fsub
mov
ja
outs
sbb
inc
mov
adc
or
movs
jge
xchg
push
(bad)
loope
push
sbb
sar
cmps
xchg
mov
iret
add
adc
push
pop
mov
jbe
or
rcl
repz
fisubr
jl
push
ins
xchg
push
scas
repnz
std
pop
inc
cmp
jmp
js
cmp
pop
into
push
shl
xlat
mov
dec
adc
push
aas
jbe
cmp
fwait
cmp
test
xchg
nop
fstp
retf
cli
jbe
popf
scas
push
xchg
cli
push
outs
rol
rol
lods
sbb
push
xchg
cli
mov
add
cmp
rcl
pop
ds
mov
lea
retf
mov
cs
stos
aas
xchg
fwait
mov
adc
xor
sti
les
pop
fistp
(bad)
test
push
cli
cmps
mov
push
or
neg
inc
xchg
xchg
jmp
mov
rol
mov
xchg
push
push
das
jg
mov
leave
jmp
mov
dec
push
inc
xchg
dec
pop
or
push
inc
fucom
push
std
mov
sub
lea
mov
out
and
xor
mov
xor
retf
cmc
sbb
jle
test
adc
test
cdq
push
stos
mov
jb
pop
mov
repz
xchg
or
ds
repz
inc
jmp
or
mov
fcmovu
push
xchg
adc
sbb
scas
inc
call
lock
dec
scas
cwde
inc
and
lods
jno
cli
push
mov
rcr
ds
pop
lea
movs
ret
cmp
jmp
out
hlt
and
xchg
lods
xor
scas
mov
data16
arpl
pop
pop
in
jle
stos
cmp
or
imul
mov
jp
push
push
mov
lods
ins
dec
dec
mov
add
pop
sub
inc
lock
xchg
ficom
push
sbb
out
movs
xchg
call
outs
push
mov
adc
fbstp
sbb
cmp
or
out
jg
and
in
fdiv
adc
mov
sbb
repnz
lods
shr
cmp
sbb
dec
mov
enter
inc
(bad)
inc
dec
pop
inc
mov
retf
test
cmp
cmps
(bad)
dec
mov
out
pop
ja
cmc
lock
scas
push
retf
rcl
cmps
push
leave
sub
outs
hlt
in
dec
mov
icebp
in
xor
cmp
mov
push
or
test
mov
pop
jns
pop
mov
aad
iret
add
xchg
es
push
cmp
std
jns
jle
in
cmp
inc
mov
or
(bad)
imul
jmp
out
leave
mov
jle
jge
inc
xor
pusha
pop
xchg
clc
cmp
ins
sbb
mov
repnz
(bad)
jmp
inc
fcomp
mov
mov
js
rol
mov
rcl
dec
sub
pop
push
push
(bad)
stc
out
packuswb
lods
test
cld
xor
ins
pop
arpl
jmp
mov
movaps
outs
pop
xchg
fadd
jbe
and
xchg
ror
mov
push
fst
push
mov
imul
lods
cmps
not
xchg
and
fisub
mov
retf
ins
cmp
pop
add
pop
cld
ins
xchg
xchg
outs
and
jno
and
fs
push
adc
fiadd
xchg
in
leave
inc
cli
call
jg
add
in
lock
jp
mov
(bad)
sbb
pop
pop
rep
fnsave
sub
inc
cli
repz
rcr
sub
mov
jmp
mov
int
fnstsw
jmp
fisttp
xor
push
pop
add
and
mov
jb
iret
div
std
jge
and
pop
aam
pop
movs
cmps
mov
mov
imul
test
jno
sbb
add
int
pop
jne
and
nop
inc
out
pop
jo
inc
mov
cmps
and
mov
sti
js
jle
test
scas
(bad)
cmps
mov
leave
jmp
push
outs
or
mov
push
imul
push
dec
xchg
(bad)
enter
jp
pushf
ins
out
lds
xchg
mov
ins
cld
push
sti
into
inc
adc
pop
sahf
pop
mov
aas
push
imul
pop
int3
push
rcl
inc
cld
mov
xor
out
clc
mov
call
sbb
retf
idiv
ds
ror
xor
sar
cmps
cmp
mov
int
test
push
int
addr16
cmp
jg
pop
out
loope
dec
push
inc
jecxz
fwait
icebp
popf
jmp
mov
js
jno
sub
cs
jg
(bad)
add
outs
daa
pop
cmp
push
sar
xor
ss
cli
jns
test
rep
cli
addr16
inc
test
sbb
stos
or
rol
add
leave
sbb
mov
mov
enter
test
jns
movs
xlat
dec
and
push
jns
and
es
or
cmp
and
mov
mov
in
xchg
jmp
test
es
xor
test
xlat
cdq
fldenv
repnz
jmp
cmp
ror
xchg
jno
test
mov
adc
pop
fld
ficomp
(bad)
adc
test
addr16
jb
jo
mov
or
sbb
and
div
jae
fsubp
lea
push
inc
into
mov
inc
xchg
cmps
push
push
xchg
pop
jnp
mov
out
addr16
adc
das
add
xor
clc
nop
ins
ds
add
ds
dec
mov
xor
xor
int3
(bad)
xchg
inc
pop
mov
lock
mov
shl
pop
lock
mov
aad
dec
pop
jbe
aaa
pop
sbb
retf
(bad)
and
popa
push
pusha
icebp
daa
push
push
pusha
adc
lahf
outs
arpl
sbb
dec
xchg
pop
or
jns
adc
pop
xor
imul
pop
cmc
psubusb
int
sahf
pop
shl
out
add
cmp
ins
jecxz
mov
out
sub
jns
mov
jmp
ficom
push
ss
popa
jmp
and
popa
ins
xor
scas
xchg
rol
shl
hlt
(bad)
dec
iret
mov
fist
fadd
int3
dec
into
out
sbb
cmp
mov
test
sub
ss
sti
push
retf
or
stc
out
sub
mov
out
sub
dec
mov
mov
shl
and
ds
mov
mov
(bad)
jmp
lds
sbb
sbb
aad
add
sar
mov
dec
sub
jmp
out
jecxz
hlt
das
mov
dec
test
jae
test
mov
push
jbe
stc
adc
mov
out
aad
cmp
sub
arpl
out
inc
ret
mov
scas
jmp
int3
inc
jecxz
pusha
mov
popf
dec
adc
mov
fcmovnb
fimul
popf
fidiv
das
cdq
jnp
xchg
sub
call
sub
push
fcomp
in
add
in
jmp
hlt
add
mov
loopne
iret
and
jae
outs
xor
pop
arpl
pusha
adc
nop
mov
sbb
inc
adc
movs
outs
jl
and
add
ins
inc
xchg
adc
mov
inc
or
nop
jb
and
jg
aaa
jl
out
sub
adc
hlt
test
and
pusha
mov
push
popf
sub
push
add
cs
push
jmp
lods
push
not
xchg
loopne
test
int3
sti
imul
dec
aad
sub
shl
dec
fs
ss
(bad)
dec
pop
jnp
xchg
sar
mov
push
mov
adc
dec
out
movs
mov
not
inc
repz
test
arpl
mov
mov
lock
ins
xchg
pop
ror
xchg
jcxz
adc
sub
pop
adc
sbb
and
loopne
sbb
das
push
add
xlat
push
jle
iret
xlat
sar
cmp
jle
dec
mov
sub
sbb
call
cmp
xor
rcr
sub
imul
inc
std
inc
pusha
dec
imul
sahf
outs
dec
push
sub
sar
push
cmp
xchg
mov
pop
push
adc
jp
sahf
cmp
rcl
ss
xor
xchg
push
daa
sbb
mov
inc
mov
dec
adc
jmp
cmp
call
test
push
ror
or
jp
or
cdq
adc
sub
and
jnp
retf
(bad)
in
sbb
out
mov
add
outs
in
adc
test
cmp
mov
sub
int
and
nop
ss
clc
xor
outs
cli
(bad)
jmp
das
sbb
mov
psrlw
ins
fisubr
sar
fcom
pop
shl
sbb
or
mov
pop
(bad)
cwde
sbb
test
mov
stos
shl
or
sar
or
xor
dec
inc
adc
sbb
loop
gs
cli
pop
adc
test
sub
loopne
rcr
test
push
pop
std
(bad)
xor
iret
add
push
pop
mov
(bad)
xor
data16
push
(bad)
stos
mov
call
sbb
cmp
aaa
pop
retf
pop
shr
cdq
nop
out
cmp
mov
out
xor
add
(bad)
ss
ds
sub
dec
daa
push
push
push
pop
dec
sbb
cmp
aam
les
in
daa
repnz
scas
sub
in
aaa
pop
imul
xor
loopne
out
mov
push
mov
jecxz
xchg
sti
sbb
in
or
dec
jecxz
mov
dec
fiadd
dec
mov
inc
mov
call
cmps
pop
ds
inc
fisubr
int
retf
inc
fidiv
dec
nop
ins
xor
xor
fnstcw
pusha
repnz
aam
dec
addr16
mov
or
push
sbb
(bad)
sub
xchg
pop
outs
xchg
cmps
movs
lock
inc
lods
pop
mov
aad
adc
out
dec
enter
out
dec
cmp
mov
out
into
rcr
adc
lds
mov
hlt
aad
xor
dec
cmp
mov
iret
pop
adc
ficomp
mul
pop
add
or
cmps
or
cmps
test
pop
mov
lock
sahf
(bad)
mov
daa
(bad)
xor
not
push
inc
or
retf
pop
leave
mov
xor
fwait
mov
cmp
jmp
in
dec
(bad)
adc
ret
cdq
test
inc
xchg
inc
rcr
sbb
les
mov
ins
bound
sar
mov
sahf
jno
adc
push
fisub
or
xchg
jge
or
sbb
outs
add
dec
es
aaa
shr
and
fldcw
or
sti
cmp
add
(bad)
jp
inc
daa
inc
sbb
mov
ja
pop
or
and
sbb
adc
imul
adc
stos
repz
and
jb
mov
sbb
imul
push
pop
pop
cmp
sbb
rol
add
out
xor
mov
xor
idiv
iret
movs
aam
xor
and
jl
leave
and
or
mov
dec
call
repz
es
adc
mov
out
xor
clc
push
repnz
(bad)
out
sbb
inc
adc
stc
js
dec
(bad)
shl
outs
vpshlq
loop
push
jne
xor
loop
xlat
in
push
mov
ror
ror
push
retf
add
shl
rcl
pop
cmp
sub
fisttp
test
ins
inc
jge
dec
out
imul
jmp
gs
stc
xor
inc
call
sub
mov
retf
imul
mov
jbe
add
fst
fadd
sahf
or
call
jmp
test
mov
and
(bad)
mov
jbe
push
cmp
or
(bad)
push
addr16
sub
es
clc
div
sbb
aas
gs
mov
lock
fwait
cld
fiadd
or
push
xchg
cwde
mov
push
shl
daa
jbe
bound
mov
xchg
mov
add
jp
push
xchg
call
jmp
dec
xchg
xchg
jmp
aam
js
cld
sbb
dec
in
mov
xchg
lods
aaa
adc
pop
jg
push
bound
mov
xchg
jp
imul
loope
dec
pop
in
rcl
repz
mov
in
cmp
mov
aaa
add
rcr
mul
push
loop
pop
cmps
aam
(bad)
hlt
stos
js
(bad)
pop
(bad)
rcr
push
in
cmp
(bad)
clc
test
dec
cld
fst
cdq
mov
leave
cmps
jg
scas
aad
js
jecxz
add
mov
mov
or
div
(bad)
test
cmp
sub
inc
fadd
int3
jg
cld
jl
pop
repz
rcl
pop
arpl
and
mov
inc
cld
jb
xchg
fsubr
ins
mov
scas
fsubr
xor
nop
mov
outs
lock
scas
mov
xor
jp
or
ret
pop
mov
sub
(bad)
fs
push
push
sub
sbb
dec
and
sub
movs
dec
jmp
or
mov
test
das
leave
jnp
ds
mov
mov
into
mov
or
push
fyl2xp1
xlat
or
add
sub
jl
imul
int3
push
dec
pushf
add
jnp
jmp
sahf
jns
adc
fist
cmp
inc
or
dec
sub
cmc
call
call
les
hlt
dec
and
xor
loopne
and
or
inc
(bad)
jl
jle
ins
jae
(bad)
jb
call
sbb
mov
adc
popf
inc
sbb
popf
and
dec
out
adc
imul
dec
mov
sbb
mov
ror
xchg
test
shr
ds
out
test
ss
and
mov
pop
sub
in
jg
stos
push
lahf
ins
jp
popa
(bad)
mov
imul
bound
fiadd
mov
dec
xor
mov
(bad)
int
push
addps
sbb
xchg
xchg
pop
mov
sub
enter
cwde
mov
js
lds
push
ret
ficomp
imul
mov
mov
jmp
popf
xchg
jne
cwde
das
ds
mov
add
call
outs
leave
sub
push
je
(bad)
retf
test
ror
dec
sub
sub
push
jmp
push
xor
sbb
pop
fst
fmul
arpl
loopne
addr16
int
loope
lods
add
pushf
test
inc
inc
fstp
push
xchg
inc
jbe
sbb
cmp
inc
push
ds
add
idiv
push
pop
loopne
jge
xchg
xor
dec
mov
sbb
push
call
sti
dec
(bad)
shufps
icebp
aas
xchg
test
jne
in
lods
lahf
cmp
or
test
sub
cmp
fidivr
int
mov
mov
xchg
inc
lea
jp
mov
mov
xlat
mov
lods
retf
(bad)
sahf
(bad)
sbb
and
jmp
pop
and
popa
or
lods
cwde
jl
arpl
inc
icebp
iret
call
in
scas
xor
movs
inc
retf
cvtpi2ps
fmul
bound
xchg
jns
(bad)
fisttp
sti
mov
fbld
imul
(bad)
imul
jmp
aas
in
std
push
mov
inc
push
test
pop
lods
sbb
push
pop
xchg
(bad)
push
sub
loope
rcr
mov
ret
test
jbe
std
jmp
mov
or
test
(bad)
in
mov
push
aad
xchg
lds
push
inc
fld
cli
sbb
jmp
out
nop
jae
jno
inc
mov
aas
jae
push
dec
or
icebp
jne
jns
jmp
inc
mov
sub
sub
pop
xchg
shl
bound
ret
and
mov
mov
mov
icebp
ret
scas
stos
(bad)
and
cmp
in
jecxz
xor
mov
push
ror
sti
fistp
jb
mov
sbb
cmp
movs
inc
rcr
dec
js
mov
mov
frndint
sbb
or
jno
lds
sbb
rol
shr
movs
lahf
fidiv
xor
mov
outs
jne
xchg
push
cld
cmp
in
cmp
inc
mov
imul
ds
xchg
in
jae
cmp
mov
adc
inc
push
jl
int3
cmp
and
add
test
ins
or
xchg
cmps
xor
scas
mov
fiadd
sbb
(bad)
out
and
popa
mov
inc
adc
push
inc
or
in
mov
inc
dec
imul
out
jb
jmp
iret
imul
pop
and
fisttp
push
stos
push
jl
out
mov
dec
fdivr
ds
cdq
hlt
sahf
xor
mov
aas
rcl
pop
std
sub
stos
shr
mov
std
xor
iret
jmp
jae
jne
mov
scas
dec
cmc
or
cli
cli
lods
add
ret
into
aad
stos
jne
xor
dec
aam
pop
mov
in
fdiv
movs
test
inc
push
imul
aas
mov
inc
fnop
jge
mov
mov
mov
or
cmps
test
cmps
cwde
xchg
inc
add
dec
add
fsincos
xchg
pop
ds
out
movs
loope
push
add
ss
mov
icebp
pop
les
out
mov
xchg
inc
sub
loope
mov
add
mov
xor
adc
add
mov
or
mov
into
xchg
jmp
push
lods
cdq
jp
lods
ds
gs
mov
pop
dec
cmp
jns
addr16
daa
mov
sub
mov
loope
push
out
push
fbld
cmps
in
pop
stc
mov
jmp
xchg
sub
(bad)
outs
enter
pop
inc
push
rcl
sub
add
popf
lea
icebp
sbb
lock
iret
mov
inc
(bad)
xchg
lods
add
loop
push
scas
xlat
push
(bad)
sti
or
in
bound
sbb
aad
xchg
imul
in
jle
pop
int
(bad)
inc
sbb
(bad)
out
mov
sar
push
gs
add
outs
je
repz
gs
pop
(bad)
adc
nop
and
cs
adc
dec
push
push
dec
loopne
test
xor
stc
push
dec
or
add
jg
loope
and
test
dec
js
ja
pop
ins
mov
lahf
js
mov
dec
sub
repnz
out
xor
pop
movs
push
imul
xor
pop
imul
jno
in
hlt
xchg
xchg
push
and
(bad)
rcl
sub
dec
push
cmp
sub
sar
xor
ins
ja
or
scas
jg
paddd
inc
add
sahf
iret
mov
fldcw
inc
push
(bad)
push
mov
mov
and
pop
pop
std
adc
out
mov
mov
sti
movups
ds
xchg
mov
enter
adc
inc
pop
lods
ins
jp
inc
add
call
mov
pop
jo
neg
adc
inc
xchg
fst
pop
stc
std
mov
imul
test
mov
jp
dec
fwait
sbb
lea
imul
pop
or
mov
dec
mov
mov
lock
and
iret
xor
lods
movs
cmp
mov
andnps
sub
ins
xchg
test
(bad)
mov
rcr
or
fs
int
jmp
mov
push
aam
inc
lea
pusha
cld
push
mov
sub
push
inc
popf
or
push
jns
ja
xchg
sbb
outs
int
pop
mov
cmp
std
repnz
mov
test
sbb
and
js
pop
ucomiss
test
mov
aam
jmp
aas
adc
push
cwde
loopne
fistp
imul
push
sub
test
or
retf
scas
dec
add
aas
mov
movs
xchg
call
sub
cdq
fistp
and
stos
push
ins
mov
outs
shl
mov
(bad)
out
js
adc
cs
leave
xchg
pop
(bad)
jge
or
shl
aam
mov
add
ret
fldcw
cmovo
lahf
cmp
mov
push
js
cmc
movs
out
fmul
dec
dec
aad
mov
pop
movs
dec
enter
stos
or
dec
jmp
pop
ins
cs
jle
retf
gs
cmp
(bad)
cmp
mov
sub
std
or
outs
imul
and
test
xchg
ins
scas
adc
xlat
shl
adc
pop
jbe
sub
add
add
push
push
sub
bound
xor
jb
xchg
and
shl
or
neg
mov
mov
xlat
pop
sbb
int3
clc
out
lea
outs
adc
out
mov
and
scas
ds
push
mov
(bad)
and
or
jno
push
xor
mov
add
jns
sub
xchg
cdq
imul
scas
pop
lahf
jo
sub
scas
sbb
xor
rcr
(bad)
jmp
add
push
jns
mov
mov
jmp
cmp
adc
dec
jb
mov
nop
addr16
sbb
sub
stos
test
inc
pop
bound
add
mov
xchg
pop
pop
ins
adc
shl
pop
pop
and
js
push
inc
pop
and
jnp
push
xchg
ins
mov
cmc
mov
push
mov
add
sbb
adc
xor
or
in
cs
stc
and
daa
and
js
sub
or
xchg
cwde
loop
cmp
fisubr
adc
mov
and
mov
ins
mov
cmps
mov
or
dec
mov
xchg
jmp
into
es
jne
xor
mov
dec
shl
mov
push
shl
pop
pop
push
add
xchg
adc
mov
xor
push
sub
sub
scas
aad
mov
push
mov
and
jne
push
mov
xchg
xchg
xchg
xchg
loope
stos
xchg
or
test
ins
rcr
shl
adc
push
adc
daa
mov
repz
or
es
pop
sbb
inc
mov
lods
retf
ins
lds
loope
cmps
dec
dec
cmp
movs
mov
jmp
jl
jg
cwde
adc
push
pop
aaa
icebp
test
jmp
retf
mov
dec
aad
push
icebp
loop
sar
and
adc
imul
or
sub
sub
add
xchg
mov
nop
cmp
(bad)
mov
pop
rcl
loope
into
and
test
(bad)
cmc
dec
jmp
scas
(bad)
gs
lahf
sub
mov
fwait
jne
or
jecxz
pop
adc
sbb
xchg
das
cmp
xlat
or
push
cs
xor
int3
push
and
std
loopne
sub
xchg
pop
sub
xor
mov
or
lahf
or
dec
fistp
sar
pop
movs
inc
sub
pop
adc
mov
fucomi
mov
daa
inc
adc
xchg
fisttp
or
adc
cmp
xchg
(bad)
hlt
and
daa
jle
shl
imul
jnp
mov
stos
ror
imul
(bad)
(bad)
out
mov
pop
mov
mov
mov
cwde
imul
jnp
data16
dec
ins
sar
dec
idiv
and
pop
and
jno
hlt
aad
push
mov
stos
mov
lods
stos
imul
inc
sbb
mov
xchg
add
inc
mov
jmp
aad
out
xchg
ds
gs
mov
pop
rcr
push
mov
adc
call
imul
fld
mov
pop
push
lahf
mov
std
mov
aaa
ror
in
jmp
cmp
icebp
fst
cmp
xor
loopne
scas
aad
push
xor
pop
add
dec
icebp
inc
add
cld
inc
lds
nop
sbb
cdq
or
sub
pop
out
std
push
push
arpl
adc
ret
(bad)
sub
jb
call
jae
xor
push
pop
(bad)
imul
xchg
and
push
adc
push
cmc
out
popf
test
call
(bad)
repnz
lea
shr
xchg
xchg
sub
aas
add
in
xor
jecxz
popf
mov
pushf
xchg
pop
mov
scas
cmps
sar
dec
cs
adc
xchg
fisubr
loopne
lds
cmp
cwde
xchg
mov
call
push
mov
xchg
add
fmulp
(bad)
or
pop
mov
push
dec
push
adc
(bad)
fs
xchg
cmp
test
out
and
cmp
jecxz
in
pusha
movs
test
jl
add
pop
push
icebp
sahf
sbb
mov
push
push
or
(bad)
dec
pop
cld
jo
xor
mov
ja
icebp
ret
std
xor
add
inc
dec
int
imul
mov
cwde
je
div
push
pop
out
mov
stos
push
push
jg
(bad)
movs
mov
fprem
pop
sbb
ret
pop
jge
mov
and
xchg
or
(bad)
xor
cmp
inc
pop
ret
in
icebp
xlat
pushf
mov
cmp
cld
mov
retf
leave
(bad)
mov
sbb
cmp
mov
mov
jge
in
nop
pop
test
mov
(bad)
sbb
inc
cvtps2pi
cdq
push
sub
xor
mov
shl
imul
mov
js
pop
dec
xchg
add
fistp
inc
add
inc
inc
mov
and
mov
retf
inc
loop
loop
cmps
fldenv
(bad)
xlat
mov
les
mov
xchg
jmp
adc
mov
xchg
imul
jge
inc
and
xchg
push
popf
xchg
inc
in
icebp
add
xchg
push
in
dec
jbe
stos
pushf
nop
mov
dec
ds
scas
add
add
lahf
sub
cmp
sbb
test
sbb
imul
cli
ror
fbstp
nop
das
sbb
cli
fdivr
jg
outs
int3
pop
sbb
sub
push
push
xchg
imul
clc
pop
jmp
adc
push
sub
test
sti
cld
cwde
jns
inc
int
stos
or
rcr
popa
retf
pop
int
mov
jle
clc
into
sub
and
(bad)
outs
test
or
lds
xchg
std
ret
gs
push
imul
dec
aad
mov
data16
ja
test
and
fs
push
push
addr16
dec
jno
fnstcw
mov
cmc
retf
cld
cmp
xor
xchg
sbb
sub
add
into
fisttp
(bad)
xor
dec
in
shl
fimul
sbb
pop
fsub
jl
retf
mov
fs
inc
pushf
ja
cmp
ins
cmc
icebp
jecxz
xor
aad
iret
push
inc
mul
push
jmp
adc
jne
(bad)
aas
add
cmc
aas
add
stc
lahf
sub
jo
push
or
stos
pop
sub
inc
icebp
in
jnp
push
push
adc
bsr
mov
repz
mov
fwait
loop
aam
out
lahf
mov
jmp
retf
cs
cli
mov
arpl
xchg
jle
add
dec
jns
(bad)
sbb
push
xor
mov
nop
inc
dec
xchg
lods
mov
out
int3
cmp
fmul
stc
ins
adc
sub
dec
dec
and
scas
adc
ficom
test
scas
mov
je
(bad)
mov
sub
sub
push
xchg
sahf
cld
(bad)
ret
(bad)
rcr
popf
mov
add
mov
pop
push
cmc
daa
hlt
or
sbb
js
ror
xchg
xchg
call
sbb
loop
les
or
es
and
mov
sbb
bound
sbb
repz
add
dec
cmp
xor
cmp
in
cdq
mov
jo
adc
mov
push
jae
xchg
cld
retf
ror
stc
mov
mov
(bad)
icebp
or
mov
scas
mov
pusha
dec
xor
sbb
movs
add
adc
xchg
jns
push
daa
icebp
xchg
mov
jle
adc
rcr
stos
stos
xor
mov
addr16
repnz
stc
ret
cmp
int3
or
cmp
enter
stos
int3
imul
inc
jge
cmp
int3
inc
in
rcl
leave
sbb
adc
stos
int
dec
bound
shl
pop
jno
mov
add
adc
push
xchg
cmp
test
ja
xchg
xchg
fstp
jmp
mov
sub
out
icebp
int3
in
nop
cli
sbb
fldcw
repz
inc
loop
cli
sub
nop
test
xchg
jg
lods
std
rol
(bad)
mov
into
mov
mov
jp
xchg
sbb
stc
and
sbb
xchg
push
sbb
dec
shl
mov
iret
bound
ins
int
xchg
cmp
and
pop
ds
jo
mov
stos
lea
mov
push
pop
add
fiadd
or
js
push
inc
loop
dec
ss
add
stos
fisub
mov
call
movs
out
push
ins
aaa
lods
aas
push
mov
lahf
mov
inc
mov
sar
or
stos
lea
into
xchg
int
jg
pop
cwde
movs
repnz
call
cwde
dec
movs
rol
fcom
ins
loope
xchg
out
xor
stc
push
lods
inc
popa
jg
out
test
int3
or
or
shl
mov
fadd
loopne
add
inc
sbb
rol
pop
imul
or
push
push
adc
fwait
sub
mov
cmp
xor
cmps
push
xor
bound
loop
jge
cmps
bnd
mov
ds
dec
or
shr
add
aas
dec
gs
outs
sub
push
in
je
retf
gs
stos
and
enter
gs
sbb
cmp
cmp
mov
inc
push
pop
cmp
pop
push
and
add
pop
iret
dec
mov
sub
add
sub
movs
xlat
or
sbb
ins
scas
fdivr
sub
shl
mov
push
and
fs
out
or
(bad)
push
out
mov
mov
push
xlat
dec
leave
or
lods
push
inc
adc
lahf
lods
(bad)
push
xchg
xchg
ror
mov
jmp
pusha
xor
cdq
push
cmc
adc
jbe
xor
add
dec
adc
(bad)
outs
and
js
bound
call
je
inc
popf
xchg
jle
add
sub
sbb
stos
or
dec
into
popa
or
cmp
cmps
inc
pop
je
mov
popa
jo
lea
fistp
dec
out
xor
xor
cmc
iret
sbb
add
arpl
adc
imul
pop
repz
data16
cwde
popa
xchg
inc
js
pop
hlt
out
mov
aad
or
dec
ss
and
cmp
addr16
movs
rol
leave
fistp
adc
ret
repz
push
cdq
or
and
xor
inc
xchg
xor
jo
pushf
add
mov
mov
scas
test
mov
sbb
in
cs
das
sub
daa
add
mov
pop
mov
mov
inc
rol
and
xchg
dec
repnz
dec
mov
xor
pop
je
adc
shl
aad
push
adc
lahf
rol
dec
pop
pop
jg
in
xchg
scas
mov
loop
out
inc
ret
nop
je
cld
xchg
dec
adc
stc
mov
test
mov
outs
push
call
cmps
inc
int
data16
jp
dec
ss
or
jnp
pushf
repnz
mov
mov
inc
mov
(bad)
mov
xor
std
sbb
xchg
test
and
(bad)
sti
imul
inc
push
adc
and
sub
in
jp
sbb
int3
mov
and
mov
sub
shl
push
or
sbb
push
ss
rol
repz
cli
or
sub
lock
out
test
push
adc
mov
hlt
int3
or
jg
les
jle
test
ror
add
adc
(bad)
ds
inc
aad
data16
repnz
and
push
add
push
xchg
jmp
cmp
int3
jb
sub
(bad)
sbb
retf
sbb
icebp
cs
mov
xchg
add
test
cmp
push
and
je
fmul
mov
mov
xor
in
add
sub
inc
push
jnp
xchg
adc
loop
xchg
xchg
dec
rol
mov
or
push
push
add
rcr
jmp
int
mov
xor
fwait
cdq
jecxz
daa
jmp
sbb
out
mov
pop
(bad)
mov
lahf
popa
push
cs
sbb
test
cmp
leave
fwait
mov
out
lods
push
add
and
dec
les
outs
daa
mov
into
push
rol
push
loop
and
sub
arpl
mov
lods
retf
dec
xor
push
cmp
(bad)
neg
push
or
push
std
sbb
xor
pop
(bad)
mov
mov
adc
test
movs
mov
mov
and
inc
pop
(bad)
sbb
adc
add
rcr
xchg
or
or
ror
sbb
cwde
add
test
cmp
mov
pop
imul
retf
fs
xchg
aaa
xchg
dec
imul
rcr
cli
mov
mov
ret
pop
fnsave
scas
std
dec
mov
mov
mov
(bad)
push
add
test
loope
scas
mov
(bad)
(bad)
mov
lods
mov
cmp
pop
and
mov
xor
loopne
push
fiadd
ret
jo
test
mov
sbb
mov
jg
and
lock
cmp
ss
adc
cmc
mov
jl
int3
jnp
push
enter
icebp
dec
or
add
loope
xor
add
aad
inc
movs
add
pop
out
loop
scas
rcl
mov
and
jbe
and
(bad)
mov
sub
arpl
in
sar
sbb
test
push
xor
test
pusha
sub
fwait
mov
leave
xlat
dec
cli
int
dec
mov
loope
jns
in
ins
pop
test
push
hlt
mov
outs
lahf
retf
push
mov
fisub
jecxz
clc
push
xor
xchg
mov
xchg
jo
mov
imul
mov
push
dec
inc
int
pushf
inc
jnp
add
mov
add
ds
or
imul
pop
sub
(bad)
out
mov
retf
and
in
shr
jle
cmp
push
scas
lds
fadd
mov
lods
xchg
popa
ret
retf
dec
mov
adc
adc
daa
jge
mov
lahf
std
popa
xor
and
pop
scas
movs
retf
sar
xor
dec
cmps
retf
lods
dec
bound
jo
add
xchg
pop
inc
test
jp
and
movs
mov
mov
xchg
inc
mov
dec
cwde
out
test
xor
or
sbb
icebp
scas
test
ins
bound
ins
mov
mov
(bad)
jp
sti
aaa
in
mov
add
adc
push
in
xor
ins
std
scas
(bad)
push
fidiv
inc
out
fxtract
in
inc
mov
sbb
and
adc
lahf
bound
ins
sar
mov
leave
mov
xor
stos
nop
cli
jb
inc
xlat
sub
jg
repz
mov
sbb
fimul
sub
test
in
jl
icebp
inc
scas
ret
imul
mov
mov
(bad)
pop
(bad)
fnstsw
scas
mov
sbb
bound
mov
iret
xlat
stos
and
ja
out
repz
cld
mov
inc
mov
adc
and
cmp
pushf
adc
stos
pop
mov
imul
call
mov
pop
adc
jb
mov
and
ret
sub
mov
pop
repz
fs
add
mov
sub
jge
xor
jns
call
(bad)
call
cmc
mov
xchg
outs
and
xchg
loope
sub
dec
xchg
fs
sti
or
mov
xor
mov
aad
clc
pushf
imul
or
rcl
ins
std
mov
retf
dec
or
mov
lahf
lock
ds
jmp
or
out
jns
push
(bad)
xor
pop
shl
mov
pop
xor
ins
inc
lea
dec
xchg
sbb
sub
jg
xchg
inc
mov
cli
fld
inc
mov
push
jp
xchg
ja
push
hlt
fcom
pop
int
test
ret
movs
movs
movs
sbb
xchg
dec
jg
adc
mul
xor
shl
in
mov
sbb
pop
xor
xor
mov
xor
ret
ds
add
es
and
leave
jge
dec
mov
mov
cmps
jns
cli
inc
(bad)
in
outs
jle
mov
mov
push
out
adc
and
stos
sbb
ss
dec
dec
sub
push
das
inc
(bad)
pop
jns
cmp
test
ficom
scas
mov
js
sbb
pop
xchg
and
gs
shl
scas
out
push
mov
popa
daa
jle
fdiv
stos
int3
enter
jns
cld
clc
ja
mov
jl
jp
jg
sbb
loopne
inc
daa
xor
or
retf
outs
(bad)
js
cmps
mov
pop
mov
add
dec
packuswb
fnstcw
sbb
cmc
push
pushf
loopne
inc
dec
imul
mov
int3
jmp
jae
or
mov
cmps
cs
jp
xchg
inc
shl
js
(bad)
loop
lock
dec
je
popf
lock
xchg
cwde
xor
movs
lods
dec
push
icebp
push
pop
xchg
pop
push
sbb
fisubr
aaa
mov
rol
jns
mov
data16
pop
sub
sub
aas
xlat
sbb
pop
lods
cmps
ins
mov
mov
push
mov
cwde
retf
and
or
dec
out
mov
bound
push
push
fwait
mov
outs
fdivr
mov
jns
xor
mov
neg
xchg
jne
inc
adc
jo
mov
cld
jnp
adc
jnp
cmps
dec
sar
xchg
push
std
jecxz
mov
add
sbb
jmp
cmp
daa
ret
push
popa
out
push
ror
cs
xor
stc
out
mov
call
cmps
pop
add
jo
fist
mov
push
jnp
push
hlt
mov
push
mov
dec
jo
ret
loop
cmp
(bad)
pop
test
sub
arpl
mov
adc
sbb
xor
mov
pusha
dec
stc
fwait
cli
es
data16
push
in
lea
popf
gs
outs
cmp
fstp
mov
fs
sub
cmp
ss
dec
fstp
xor
in
test
data16
aas
add
or
xlat
adc
adc
retf
in
cmp
(bad)
dec
pop
xchg
mov
lods
(bad)
jae
out
cmp
and
or
mov
dec
cmc
mov
jecxz
add
jmp
(bad)
fsub
aas
mov
xchg
mov
xlat
movs
pop
popf
enter
clc
mov
or
adc
sbb
sbb
inc
push
test
cmp
sub
xchg
cmps
rcl
jmp
test
pop
int3
cwde
or
xchg
or
dec
pusha
addr16
mov
mov
fsubrp
fidivr
jmp
ins
cwde
pop
stc
loope
sub
mov
and
test
sbb
fldenv
je
xor
outs
or
mov
xor
xor
mov
cmp
(bad)
dec
sti
sbb
push
(bad)
in
add
push
sub
or
xchg
outs
(bad)
std
es
mov
cwde
xchg
clc
cmp
rol
adc
dec
sub
sub
jecxz
pushf
(bad)
or
mov
jns
lock
test
ss
enter
mov
jle
in
mov
or
lahf
mov
(bad)
inc
xchg
rol
in
push
mov
fwait
mul
lahf
leave
sbb
inc
in
dec
add
pusha
cmp
push
test
pop
(bad)
dec
mov
outs
xlat
in
pop
int3
ret
adc
inc
int
out
imul
ins
jb
push
aam
xor
push
repz
cld
sub
test
ror
out
dec
xchg
cmp
test
ja
lahf
inc
pcmpgtw
jge
and
push
scas
mov
jne
or
cwde
cmp
test
inc
or
mov
xlat
pop
xchg
outs
xchg
add
cwde
lods
sti
call
push
(bad)
fucom
mov
lods
xlat
cmps
jae
sahf
lods
jl
popa
jmp
xchg
les
pusha
or
pop
jle
enter
push
repnz
int
add
pop
pop
fs
(bad)
loopne
out
lods
or
fldenv
sbb
in
repnz
sub
inc
mov
iret
enter
stc
data16
bound
xchg
daa
cmc
xchg
shl
out
mov
push
call
push
mov
inc
mov
add
mov
sar
retf
out
ret
add
imul
pushf
bound
lea
cvttps2pi
xor
cmp
repz
inc
ret
push
push
int3
push
xchg
jno
cmp
jecxz
xor
adc
sbb
add
add
lods
movs
fs
xlat
and
pop
fsubr
jo
pusha
addr16
(bad)
jp
inc
sbb
rcr
xor
and
pop
xchg
clc
or
xchg
(bad)
in
fs
ffree
lahf
pop
out
lods
fdiv
fisttp
dec
out
pop
das
adc
pop
pop
xchg
jmp
outs
dec
and
std
adc
movs
sbb
pop
inc
xlat
std
popa
dec
jl
in
shl
sub
xor
call
xor
mov
mov
test
cmps
jno
cmp
int
out
cmc
sbb
out
push
imul
push
icebp
or
jae
cs
jo
sub
mov
jbe
push
inc
push
pop
mov
outs
and
cmc
mov
jb
in
cdq
lds
mov
inc
dec
cmps
mov
pop
cmp
loop
mov
add
or
test
enter
jl
dec
loope
and
xor
sub
xor
fwait
dec
in
es
sahf
add
(bad)
dec
and
xor
jecxz
jp
out
dec
jmp
sti
mov
popf
mov
in
or
ja
test
adc
popf
mov
add
ins
mov
sar
mov
out
jo
popa
sbb
test
leave
loopne
jno
aas
out
mov
jg
pop
mov
(bad)
sar
and
out
ret
fwait
mov
out
dec
jne
push
jnp
in
lahf
sbb
(bad)
adc
dec
push
mov
movs
ja
outs
fdivr
fmulp
cmp
mov
mov
jnp
pop
push
js
mov
or
je
ror
mov
add
outs
pop
mov
call
xchg
fist
push
xlat
in
xchg
sub
cmp
adc
(bad)
lods
mov
dec
cdq
xchg
cdq
rol
mov
cmp
(bad)
add
push
push
imul
xor
adc
ss
inc
lock
jecxz
push
lahf
in
cmp
mov
add
ret
pop
fsubr
and
movsx
fisubr
(bad)
jo
inc
jg
xchg
clc
or
fucomi
sub
push
(bad)
mov
cmp
(bad)
push
(bad)
jo
mov
loop
repnz
pop
mov
test
push
bnd
dec
data16
(bad)
xchg
fisubr
test
push
mov
sbb
iret
lock
in
movs
cld
xor
(bad)
aad
pop
sahf
(bad)
shl
mov
xor
iret
test
adc
retf
int
out
retf
fwait
dec
ret
stos
ss
(bad)
les
mov
inc
lock
loope
or
cmp
ins
fmul
lods
pop
jb
add
rcr
shl
inc
mov
add
nop
das
mov
out
push
inc
je
cmp
inc
cmpneqps
sub
jae
je
xchg
jp
inc
icebp
(bad)
in
xlat
shl
cmp
retf
lods
cld
fiadd
xchg
icebp
test
cwde
arpl
xor
jmp
sahf
push
and
fist
mov
inc
push
cmp
out
mov
push
loopne
fbld
js
pop
out
add
in
adc
dec
std
sar
sbb
mov
inc
cmp
push
jl
mov
push
add
addr16
xchg
sbb
cmp
clc
inc
push
(bad)
movs
(bad)
call
or
pusha
shl
jae
jmp
add
adc
and
or
inc
cmp
pushw
or
adc
dec
leave
adc
mov
pop
test
ins
push
push
inc
cmpxchg8b
(bad)
leave
cmps
and
push
push
push
adc
sub
(bad)
imul
movs
jb
sbb
push
add
add
pop
ficomp
sub
push
out
shl
inc
data16
arpl
add
sbb
repnz
aam
test
sub
sub
mov
or
push
xor
ds
sub
(bad)
mov
ret
pop
cmp
fcomp
push
inc
inc
jne
sub
add
adc
sub
xlat
cmp
dec
mov
or
jge
ja
jecxz
pushf
mov
and
jg
cmp
ror
and
pop
nop
cmp
jle
ret
jp
jmp
inc
sub
sbb
or
mov
mov
out
add
pusha
cli
retf
ds
gs
cdq
cmp
popa
lods
add
mov
xor
mov
push
rol
repnz
repz
outs
pushf
sub
pop
cmp
xor
pop
jge
mov
xchg
stos
sub
mov
daa
xor
inc
or
mov
mov
imul
hlt
mov
inc
mov
loopne
mov
mov
jo
jg
push
dec
mov
jns
jae
mov
mov
movs
pop
loop
mov
fcom
xor
sbb
inc
push
mov
leave
int
pop
inc
sbb
mov
mov
jae
es
push
push
mov
je
pop
gs
lock
inc
movs
push
das
adc
pop
call
mov
jecxz
mov
inc
adc
out
mov
add
pusha
ret
ins
push
rcr
mov
je
adc
sbb
pop
sbb
test
push
(bad)
dec
adc
xchg
mov
jmp
push
(bad)
push
scas
nop
inc
test
adc
out
(bad)
int3
and
mov
or
out
pop
inc
or
iret
pop
stos
addr16
call
outs
rcl
and
sbb
dec
dec
enter
je
and
inc
sub
sub
aas
inc
xor
in
xlat
popf
sbb
daa
push
jecxz
aaa
not
movs
adc
sbb
je
adc
mov
adc
popf
and
loop
int
not
rol
fistp
dec
std
outs
imul
loope
dec
into
mov
inc
add
xchg
or
jg
mov
fisttp
jle
sbb
sbb
cmp
adc
icebp
cmp
outs
mov
(bad)
pop
xchg
adc
pusha
lods
into
test
lock
sbb
cmps
or
jb
pusha
adc
pop
mov
dec
fadd
jge
or
jge
in
in
stos
(bad)
sti
jmp
stos
loopne
test
inc
xor
fstp
scas
jno
mov
out
mov
pop
sub
inc
dec
popf
(bad)
(bad)
adc
ror
cs
fwait
sub
jnp
pop
call
jno
mov
popf
dec
and
bound
std
sub
rcr
in
ret
add
lods
xor
sbb
(bad)
dec
cwde
in
cmp
or
push
cmp
cmps
push
jmp
out
ss
mov
(bad)
stos
jmp
sti
in
cmp
movs
mov
pop
int
jle
or
imul
mov
sbb
pop
fimul
dec
js
mov
stc
sub
or
mov
arpl
mov
sbb
cmp
mov
jno
or
leave
pop
jp
and
lods
retf
pop
push
test
arpl
lods
out
lahf
mov
cld
test
jg
popf
sbb
adc
rol
stos
shl
movs
ja
rcl
xchg
pop
mov
das
fidiv
inc
out
cmps
dec
inc
sub
mov
xor
lock
sti
jmp
jnp
mov
sub
mov
pop
mov
imul
in
retf
jp
test
(bad)
lds
inc
push
mov
dec
adc
jns
mov
iret
cmp
in
das
and
daa
cmp
lods
cmp
jge
loope
pop
sub
and
mov
mov
add
mov
clc
pop
pop
and
shl
adc
mov
jp
jmp
ds
inc
jbe
sub
mov
inc
out
iret
xchg
ja
fild
sub
(bad)
scas
mov
sbb
call
inc
jns
sub
clc
cld
xor
add
mov
fnstcw
pop
fisttp
mov
inc
vmovntps
xchg
push
mov
mov
dec
and
test
dec
mov
shl
es
fs
adc
push
ins
jg
sbb
(bad)
mov
out
inc
leave
adc
lods
js
sbb
in
cwde
or
dec
(bad)
scas
lahf
xchg
out
and
dec
push
add
mov
enter
mov
sbb
int
loop
ja
push
push
mov
xor
dec
lahf
cmp
and
popa
push
xchg
jb
scas
mov
iret
lods
and
call
mov
cmc
imul
add
sbb
mov
js
sub
cmp
mov
adc
shl
xchg
sub
sbb
ds
or
call
into
cmc
fstp
mov
sub
inc
out
or
ds
repz
dec
dec
push
jle
jb
test
dec
retf
xchg
push
lock
cwde
cmp
repnz
xor
fwait
imul
and
mov
stos
pop
inc
test
(bad)
inc
(bad)
retf
std
dec
sbb
dec
push
xor
scas
add
mov
test
cmp
push
jl
and
fnstenv
xchg
jmp
xchg
adc
cmp
icebp
add
dec
hlt
xor
jb
ss
xlat
cdq
sub
and
dec
dec
dec
mov
add
lock
xor
cli
aaa
or
adc
mov
call
add
pop
out
inc
test
xor
pop
xor
xor
fsub
cli
shl
and
cmps
and
aaa
or
push
icebp
pop
sbb
mov
aam
lods
add
retf
xor
lods
mov
hlt
and
das
mov
pop
jmp
bound
mov
push
loope
cvtps2pd
icebp
sub
sub
enter
ret
aaa
cdq
in
jo
add
cmc
dec
xchg
test
and
mov
dec
and
ins
cmp
pop
push
repnz
xor
jae
lahf
push
sar
inc
inc
sub
mov
push
pop
sahf
addr16
push
fs
xor
and
dec
lods
sub
pop
xchg
inc
adc
les
push
or
fdiv
cmp
sbb
fsin
jno
stos
adc
pushf
loop
outs
cld
cs
in
add
shr
mov
pop
(bad)
push
inc
pop
push
loopne
fucomp
mov
repnz
xlat
cmps
clc
lods
into
fcom
pushf
retf
sbb
mov
xchg
mov
stc
fmul
add
and
pop
aas
cmp
cli
xchg
ds
je
jne
push
jmp
call
mov
jg
pop
loop
ins
nop
cld
dec
test
pop
jle
fsubp
cmc
fs
mov
fldenv
jmp
cmp
cmps
cmc
int3
xchg
mov
fidivr
leave
aad
test
sub
jns
outs
call
xchg
xchg
xchg
or
mov
(bad)
int
mov
(bad)
push
pop
cmps
inc
lahf
jl
xlat
inc
in
mov
(bad)
out
add
pusha
xchg
shr
add
mov
cli
mov
jbe
out
fnstenv
mov
cwde
mov
popf
xor
inc
ficom
call
jnp
in
and
mov
push
es
or
and
add
inc
std
mov
push
loope
sbb
pop
mov
loope
xor
dec
gs
jno
clc
mov
jl
repz
es
mov
enter
dec
xlat
or
xor
es
pop
loope
fdivr
pop
mov
xchg
xor
sahf
ja
and
gs
push
xchg
pushf
jp
cdq
cmps
sti
sub
sti
jae
repz
fidiv
mov
pop
pushf
push
out
test
mov
leave
cmps
(bad)
push
or
mov
add
mul
out
mov
and
jmp
sbb
dec
mov
sub
jle
aam
fadd
iret
inc
jl
mov
pop
dec
fadd
fsub
sub
cmps
loop
cmp
and
pusha
stos
mov
xlat
cmp
outs
dec
push
out
jle
jne
(bad)
xlat
test
sub
xchg
jae
dec
fcmovb
mov
push
ins
stos
scas
ss
in
fist
sub
mov
jmp
das
push
or
sub
lock
neg
dec
xlat
lahf
arpl
sbb
push
add
mov
movs
push
std
jg
outs
sbb
jl
loopne
jo
ret
xchg
std
or
div
int3
(bad)
cmp
mov
test
jecxz
icebp
stos
and
mov
mov
sbb
jnp
add
add
mov
mov
jns
fcom
ja
lods
add
mov
lea
adc
hlt
loop
dec
dec
dec
pop
jbe
xlat
and
out
sahf
or
jg
jo
pop
sbb
hlt
outs
xor
cmp
ret
mov
xchg
jg
jle
xchg
fimul
xchg
test
xchg
movs
sahf
rol
popa
lods
jp
dec
xor
mov
and
xchg
pop
aas
or
mov
jecxz
mov
leave
mov
clc
sub
xor
nop
xor
(bad)
stos
mov
fwait
pop
sub
push
jp
lahf
pop
jle
mov
fst
jl
push
sbb
cmc
test
fbstp
adc
lods
stos
retf
sahf
bound
jmp
lock
sar
loopne
(bad)
aam
scas
dec
stos
dec
pop
pop
and
push
(bad)
fwait
ror
jmp
lods
in
push
icebp
adc
test
mov
adc
lea
shl
jecxz
pop
push
daa
sbb
jae
jnp
outs
pop
pop
fs
xor
dec
aaa
jecxz
jnp
push
imul
test
pop
mov
imul
push
push
cwde
clc
fidivr
hlt
dec
mov
mov
jecxz
(bad)
fstp
mov
inc
les
ins
sub
gs
retf
push
push
cmc
popa
nop
fimul
sbb
fcom
jecxz
mov
mov
or
data16
in
lock
push
ret
pop
rol
push
das
inc
jmp
jg
sahf
stc
frstor
mov
inc
outs
dec
inc
cmc
xor
mov
inc
push
ja
iret
inc
jnp
mov
jmp
push
inc
jecxz
test
mov
retf
test
sub
mov
jne
and
aaa
(bad)
mov
cmp
imul
sbb
test
jb
adc
imul
and
mov
call
lds
mov
loope
sub
fwait
adc
push
ja
add
(bad)
pop
inc
sbb
movs
jae
or
imul
xor
and
mov
adc
(bad)
ins
cdq
jg
lods
(bad)
aas
pushf
jo
mov
stc
out
sbb
jl
fstp
in
inc
mov
mov
push
pop
mov
ins
fcomp
mov
mov
cmc
(bad)
jmp
rcl
fwait
and
or
adc
dec
push
inc
test
mov
mov
and
out
icebp
mov
xchg
aad
ret
ins
xchg
push
push
mov
mov
dec
lahf
fisub
call
in
ror
(bad)
mov
or
push
xor
push
push
cmp
add
push
je
dec
outs
aas
push
pop
dec
retf
mov
inc
sahf
outs
mov
push
xor
outs
ds
push
dec
xor
jne
add
scas
dec
pushf
ret
push
cmp
lods
push
sub
mov
ret
data16
pop
retf
repnz
into
(bad)
(bad)
pop
outs
into
inc
je
inc
cdq
mov
fdivrp
into
outs
ins
push
mov
sbb
mov
int3
push
xlat
gs
jns
mov
sbb
ret
test
mov
div
dec
stc
int3
jg
imul
or
test
leave
mov
sbb
out
mov
jbe
and
push
xor
nop
xchg
xchg
push
inc
cmp
repnz
mov
push
mov
jg
jmp
out
pop
in
xchg
sbb
cmps
push
arpl
es
scas
cwde
adc
retf
push
idiv
jge
jne
repz
and
cmc
dec
add
and
and
mov
jne
push
std
scas
retf
es
inc
xchg
adc
iret
daa
into
aad
mov
leave
sti
fistp
dec
ins
add
adc
push
ins
adc
lods
xchg
addr16
inc
and
das
gs
or
jle
std
dec
cmps
or
(bad)
fs
mov
aaa
dec
test
push
cwde
repz
aaa
cmps
jmp
pop
loope
jle
popf
rcl
push
repnz
stos
aad
rcr
retf
mov
loopne
jl
mov
jmp
stc
js
push
and
jo
or
call
(bad)
xlat
(bad)
fisttp
retf
and
pusha
inc
lods
inc
jo
cmp
pop
xchg
or
(bad)
and
mov
pop
mov
push
scas
cmp
mov
mov
add
aam
jge
jns
outs
mov
xchg
jg
jecxz
and
ficomp
in
movs
or
mov
add
stc
leave
or
lahf
jmp
and
cmp
xchg
fs
pushf
jbe
call
fdiv
jns
mov
push
sub
adc
jbe
pop
arpl
or
cmp
ficomp
inc
xlat
inc
xchg
dec
push
iret
loope
xor
ror
mov
fucomp
xchg
xchg
outs
xor
sub
es
ret
xor
sub
lahf
test
mov
inc
pop
push
mov
inc
or
ret
sbb
movs
dec
cmp
popa
int
cmp
sahf
sub
nop
pop
pop
sub
jp
jae
jne
or
clc
fimul
lahf
data16
cwde
(bad)
and
inc
jnp
in
movs
nop
and
jne
sub
mov
je
bound
pop
add
sar
jecxz
mov
cwde
sub
ins
mov
fdivr
jecxz
jne
and
mov
mov
pop
lods
sub
add
int3
sahf
push
cmc
xchg
int3
aas
rcr
and
ficom
fcom
sar
scas
in
adc
jecxz
nop
mov
mov
movs
sub
sbb
mov
xchg
das
cld
je
cmp
inc
add
jge
and
(bad)
dec
mov
cwde
dec
jbe
in
pop
push
test
(bad)
inc
lock
sar
mov
shr
sub
push
adc
fimul
pop
or
pushf
cmp
inc
and
push
sub
jae
or
inc
push
pop
sbb
cdq
cmp
fmul
inc
adc
push
repz
in
test
push
xor
fdivr
sbb
mov
push
xor
mov
or
dec
jmp
dec
call
xor
sub
xchg
and
out
ret
scas
fwait
mov
and
outs
mov
adc
ds
cmp
pop
dec
cmp
jmp
xchg
jmp
mov
movs
(bad)
fisub
push
adc
pop
test
sbb
dec
xlat
mov
or
cmp
xchg
mov
je
pop
xor
xor
lea
pop
and
dec
fisttp
ds
adc
and
xor
out
sub
loopne
or
pop
or
lahf
ss
xlat
aad
jmp
movs
sub
das
add
cmc
jl
mov
fiadd
loopne
fst
outs
outs
std
loopne
ins
xchg
mov
adc
sub
jecxz
add
jae
imul
push
pop
inc
dec
(bad)
ds
inc
rcl
aas
cmp
or
je
jp
mov
inc
cmp
enter
repnz
mov
ins
and
mov
push
aam
cmp
je
in
mov
(bad)
int
sub
inc
push
jo
and
loopne
pop
mov
pusha
in
popf
mov
mov
mov
dec
div
jl
lods
add
fdiv
sub
inc
add
(bad)
not
nop
ret
mov
repz
test
adc
in
aas
(bad)
cli
inc
jbe
jno
sub
sub
loope
pop
ja
fisubr
test
data16
sbb
cmp
(bad)
scas
mov
ret
mov
pop
dec
retf
scas
sub
cmps
ins
ret
fs
xchg
lds
pop
int3
dec
sti
repz
cwde
(bad)
fsubr
cmps
mov
and
xor
repz
mov
mov
pushf
xchg
add
enter
xor
fs
and
(bad)
and
cld
jnp
in
inc
xor
adc
push
xchg
adc
push
mov
and
fstp
mov
shr
mov
mov
jae
in
movs
test
push
je
sahf
or
cmp
jbe
mov
or
aas
aam
loopne
push
mov
repnz
sub
pop
jo
sub
mov
mov
(bad)
loopne
mov
outs
daa
mov
icebp
in
jp
cmps
cmp
ret
and
or
rcr
adc
fs
pop
sbb
jg
out
sub
xor
mov
ror
and
jne
test
mov
movs
gs
xchg
inc
stos
xchg
sar
stos
icebp
lods
scas
lods
out
movs
jmp
sbb
std
xor
sbb
push
sbb
jmp
xchg
outs
add
in
jmp
xor
leave
cmp
cli
pop
jns
or
dec
rcl
in
enter
js
repnz
imul
inc
xor
cmp
dec
sti
xlat
test
pop
int3
ss
imul
pop
fwait
or
retf
jmp
jle
sub
push
popa
cld
cmc
addr16
xchg
dec
imul
mov
sti
fnsave
cmps
ret
mov
outs
in
test
mov
inc
cdq
je
jg
jns
xor
jbe
clc
mov
and
in
ja
cdq
and
sbb
adc
ja
jp
call
fcmovb
sbb
pop
fs
push
mov
sbb
movs
pop
cwde
clc
dec
in
xor
ret
add
inc
mov
xchg
pop
adc
into
cmc
sub
mov
pop
and
pop
shl
jg
rcr
int3
popa
or
add
popf
fild
sub
mov
ds
lea
imul
lahf
retf
fild
lods
cld
jne
scas
jnp
sbb
(bad)
sar
adc
nop
mov
shr
sbb
mov
cmp
scas
dec
xchg
dec
mov
sti
fwait
les
int3
icebp
cmc
xchg
dec
in
cmc
cdq
shl
inc
stc
xchg
mov
fwait
shl
or
lea
add
cli
jp
mov
cmp
jno
dec
inc
cmp
jecxz
sub
xchg
mov
inc
jmp
mov
clc
xchg
popa
scas
shr
xchg
cmp
stos
ds
movhps
bound
sbb
inc
or
popf
inc
xor
push
sub
push
mov
test
rcl
cdq
cdq
int
dec
adc
pop
add
arpl
jmp
test
das
sbb
icebp
sbb
pop
hlt
pop
aad
cmp
movs
and
fcomi
loopne
cmp
lea
rcl
call
(bad)
jmp
or
stos
jl
outs
(bad)
mov
add
int
(bad)
shr
fs
jbe
pop
jecxz
lock
scas
adc
push
xor
adc
fiadd
and
ja
fwait
pop
arpl
jne
dec
push
jns
bswap
mov
aad
xchg
out
push
out
add
pop
add
ret
adc
adc
push
leave
xor
push
and
pop
and
dec
mov
popf
and
mov
mov
in
out
int
pop
push
jg
ret
into
movs
pop
adc
mov
mov
and
aas
addr16
out
push
out
cmc
lods
outs
dec
ret
ss
fist
out
not
pop
call
jge
gs
jnp
imul
out
(bad)
add
inc
jg
(bad)
cdq
sar
imul
enter
sub
inc
pushf
out
push
out
pop
jge
jp
out
adc
pop
ja
out
adc
mov
icebp
sub
mov
jmp
add
mov
sar
cmp
adc
add
pop
mov
cmps
dec
dec
out
aas
pop
jg
xlat
idiv
frstor
stc
daa
push
sub
and
or
(bad)
cdq
jno
cmc
and
and
cmp
pusha
rol
fidivr
add
out
ret
std
hlt
std
shl
xor
xchg
out
add
call
and
cs
fmul
jmp
fwait
mov
pop
push
(bad)
aam
cmp
out
sbb
pop
dec
sub
retf
out
cmp
call
hlt
cwde
ss
xchg
mov
jmp
fstp
fucomi
std
add
xlat
loop
xchg
nop
dec
fidivr
or
inc
push
or
dec
or
adc
test
pop
pop
dec
in
jne
pavgw
xor
outs
mov
mov
and
jg
ss
mov
outs
add
or
ja
inc
test
movs
loop
(bad)
(bad)
jmp
dec
sbb
fimul
push
bnd
pop
lea
mov
gs
push
sti
shl
inc
sbb
pop
add
(bad)
repz
dec
cmp
out
dec
or
scas
jmp
out
xor
jns
push
stos
and
mov
leave
ja
dec
sbb
aam
imul
and
test
inc
ss
jl
add
lea
xor
or
dec
sub
and
sub
add
sub
jns
pop
fwait
mov
retf
inc
clc
shl
sbb
or
bound
jnp
pop
xchg
addr16
aad
push
in
mov
cli
dec
pusha
clc
mov
fs
mov
add
adc
clc
cs
jecxz
into
cmp
aam
fisttp
pop
test
call
jo
xor
jg
cld
daa
mov
mov
js
outs
cld
xor
adc
and
push
and
push
push
ins
inc
rcl
sbb
std
daa
or
call
(bad)
call
jecxz
push
sub
imul
pop
dec
mov
scas
inc
imul
mov
sti
xor
in
inc
jp
sbb
icebp
addr16
cld
push
loope
aad
dec
dec
data16
dec
outs
add
in
in
xor
push
pusha
popa
lds
dec
sbb
std
xlat
mov
out
mov
fnstsw
(bad)
pmullw
sbb
adc
in
sub
sbb
test
pop
out
inc
cmp
cmp
add
cmp
out
ret
in
push
mov
outs
inc
mov
mov
jns
test
mov
add
pop
pop
add
fldcw
cdq
hlt
cmps
push
scas
in
xchg
mov
stc
fs
sub
push
in
push
test
add
push
inc
pop
push
mov
fidivr
pop
cmp
dec
push
and
cmp
mov
sub
push
cdq
data16
add
mov
cdq
mov
xor
loop
rcr
or
repnz
adc
mov
push
pop
cmp
sub
out
out
into
hlt
mov
dec
push
call
inc
sbb
mov
pop
rol
jge
lea
cmp
fld
jae
stos
icebp
cmc
retf
or
idiv
(bad)
ss
mov
push
inc
ins
push
sbb
(bad)
loop
xchg
ins
jle
and
and
cmc
add
mov
cmc
pop
leave
int3
out
out
jmp
lock
xchg
lahf
cmps
mov
fwait
out
and
hlt
add
push
inc
jo
sub
aam
jp
push
arpl
sahf
es
(bad)
cmp
enter
scas
jns
cmps
pop
aad
xchg
adc
(bad)
cmps
test
jp
sub
loop
fdiv
inc
out
ret
cwde
clc
mov
pop
mov
bound
outs
das
and
add
out
retf
mov
outs
mov
pop
hlt
inc
sub
pop
hlt
pop
sbb
enter
in
pop
pop
push
lods
shr
retf
jle
out
rcr
cmc
fisttp
imul
cmps
js
adc
fild
and
and
aaa
imul
push
sbb
mov
pop
and
(bad)
in
enter
mov
or
outs
cli
inc
push
nop
rcr
sar
in
or
cs
daa
lds
div
inc
push
push
stos
sbb
jg
mov
call
jbe
push
xchg
cdq
sub
lods
dec
lds
sub
xchg
retf
dec
(bad)
sub
cmp
aam
push
ror
or
and
cmp
loop
add
inc
sub
jecxz
imul
push
outs
cmp
mov
(bad)
pop
inc
cli
xchg
nop
mov
xor
inc
loop
pop
xlat
xchg
data16
fld
jns
mov
addr16
and
push
into
int
int3
loope
fimul
adc
push
pushf
push
lahf
adc
mov
push
stc
outs
jl
push
test
test
adc
xor
jmp
sub
daa
sub
call
jg
push
scas
push
adc
popf
mul
popa
std
out
(bad)
popf
cmc
loop
jno
frstor
imul
out
retf
mov
popf
ret
pop
sar
aad
daa
mov
fcom
sub
jbe
pop
dec
inc
(bad)
xchg
aas
jmp
out
mov
hlt
mov
call
les
les
sbb
out
fcom
pushf
ins
xor
sub
test
imul
mov
xlat
es
mov
adc
movs
mov
push
lods
and
pop
mov
(bad)
or
(bad)
div
xchg
inc
pop
push
loop
push
mov
cmp
stos
push
pop
mov
sbb
test
in
fcom
jae
adc
sahf
js
ins
push
adc
jge
xchg
cld
push
sbb
mov
pop
and
cld
ror
js
inc
sub
fcomp
mov
ja
dec
ins
(bad)
jb
int
mov
repnz
cmp
add
cmp
out
clc
scas
or
rcl
ss
retf
cwde
dec
add
cmps
push
inc
idiv
cs
push
cld
xchg
pop
push
aas
or
jns
in
xor
cdq
fld
stc
sbb
mov
and
cmps
test
dec
xor
xchg
jno
xchg
jle
iret
lea
jo
es
xor
es
int3
mov
xor
sub
dec
ffree
ds
mov
imul
push
adc
jns
(bad)
xor
and
xor
popa
fs
adc
test
repnz
fsub
mov
cmp
mov
retf
jp
test
adc
jae
and
in
loopne
add
pushf
or
add
push
jns
(bad)
outs
sahf
xchg
lods
or
adc
pop
xor
rcl
xchg
stos
(bad)
pop
fadd
leave
in
iret
push
sub
jmp
and
xor
pop
xchg
dec
dec
jno
bound
sub
jns
pop
adc
test
addr16
bound
in
stos
adc
shl
popa
(bad)
adc
std
mov
xchg
mov
sub
adc
sub
jbe
in
sbb
stos
and
mov
js
add
rcl
test
ins
sbb
pop
mov
jl
lock
aam
mov
(bad)
xor
fs
in
fild
xchg
test
repnz
push
pop
push
jg
scas
jmp
out
mov
xchg
inc
or
add
sbb
sbb
movs
dec
sbb
fs
sahf
push
cwde
mov
retf
pop
sti
pushf
cmp
stc
repnz
je
mov
popa
push
loop
dec
loope
fst
ins
lods
xchg
xchg
sbb
int
xlat
movs
jmp
lods
mov
pop
and
imul
mov
push
ret
xor
dec
dec
sbb
out
sub
cmps
sbb
xor
jmp
hlt
push
and
xchg
inc
int
inc
inc
xor
sub
add
adc
xchg
sti
xchg
arpl
xor
sahf
xor
cmc
cwde
xor
aad
mov
movs
mov
iret
stc
retf
adc
jmp
aam
push
aad
mov
mov
jl
lods
adc
and
sbb
cs
(bad)
loop
jb
mov
pop
pop
mov
inc
adc
jb
test
add
push
adc
arpl
dec
bound
dec
jbe
mov
and
xchg
pop
push
mov
inc
push
or
mov
into
pop
in
inc
mov
adc
dec
xor
xor
add
fxtract
test
mov
loop
sbb
imul
push
inc
fisubr
cs
sbb
adc
or
fdiv
out
xlat
mov
pop
push
(bad)
js
jae
push
mov
xchg
mov
mov
push
adc
sbb
imul
in
loop
daa
xchg
out
push
jb
mov
pop
push
xchg
mov
cmp
adc
pop
jp
(bad)
xor
sub
sbb
or
ja
shl
push
sbb
jne
mov
addr16
mov
or
jne
ret
and
sar
das
cmp
pop
mov
in
pushf
cmps
sub
dec
jl
mov
test
jmp
int
mov
aaa
jmp
pop
movups
imul
mov
pop
sar
xchg
mov
mov
je
popa
mov
sbb
ret
cs
xchg
sbb
out
iret
cmp
ret
fild
daa
stos
lods
pop
sbb
sub
test
sti
sti
retf
inc
xor
iret
adc
mov
add
mov
stos
pop
movs
test
lods
jb
adc
shl
dec
push
push
call
pop
lea
mov
push
mov
mov
push
inc
adc
cli
mov
int
pop
js
test
adc
xor
mov
cmp
cld
dec
xchg
lahf
pop
sahf
icebp
dec
sbb
and
jmp
stos
cdq
add
in
xchg
cmc
push
test
call
lahf
xor
dec
push
mov
(bad)
xchg
mov
mov
test
push
iret
ins
xor
xlat
call
xchg
sbb
push
inc
aad
ffreep
rcl
jns
cmc
scas
jno
xchg
fcmovbe
sbb
xchg
mov
cwde
add
movs
or
adc
sar
aaa
mov
(bad)
mov
pop
in
sub
enter
and
out
mov
dec
cmc
and
or
out
int
push
and
mov
rcl
sar
mov
ins
sbb
mov
icebp
stos
jns
cmp
or
add
dec
rcl
aad
mov
xor
and
(bad)
(bad)
out
adc
les
out
mov
jnp
das
xchg
pop
sub
mov
test
pop
ins
mov
push
push
mov
jecxz
mov
xchg
clc
cmp
test
addr16
xor
je
xchg
push
and
lds
and
out
xor
add
and
jnp
leave
push
cld
xchg
pop
xor
jmp
out
pushf
std
mov
cmp
or
or
fcmovnb
mov
test
cmp
ret
pop
lahf
sub
jmp
loope
addr16
cmps
into
jecxz
jb
pop
scas
fild
cmp
xor
and
movs
push
ficom
in
pop
sub
push
(bad)
push
int3
rcl
xlat
call
mov
sahf
ret
xchg
sbb
pop
push
(bad)
int3
mov
or
fisttp
xchg
mov
enter
mov
fdiv
dec
cmp
dec
push
fdivp
cli
and
hlt
fsubr
xchg
test
daa
mov
or
add
out
inc
(bad)
sbb
scas
mov
or
repz
push
pop
imul
in
int
int
(bad)
jge
or
mov
xchg
cmp
fld
enter
jl
je
sub
leave
test
inc
loop
sbb
or
pop
and
push
out
xlat
repnz
jae
movs
popf
jl
stos
mov
ja
mov
test
(bad)
jle
pop
call
outs
jmp
not
cs
clc
or
xor
or
push
outs
mov
and
dec
inc
ds
push
pop
icebp
out
mov
dec
lods
pop
or
adc
ror
jb
jmp
setp
pusha
mov
mov
pop
sub
rcl
push
inc
lea
xchg
jne
add
ins
mov
lods
pop
jmp
cld
into
loop
cmp
(bad)
sub
js
es
les
inc
rcl
movhlps
mov
jle
pop
mov
inc
out
cmp
mov
mov
mov
leave
pushf
ins
sub
mov
inc
or
dec
popa
int
inc
js
test
and
cmp
fwait
je
out
add
inc
hlt
clc
xchg
fmulp
or
lahf
push
or
(bad)
xor
mov
or
out
mov
mov
nop
hlt
xchg
adc
cli
push
push
mov
rcr
sbb
lahf
inc
mov
arpl
xchg
mov
mov
stc
imul
adc
add
xor
je
mov
mov
dec
popa
pop
movs
outs
lock
shr
pop
mov
out
adc
arpl
xor
adc
rcl
adc
in
and
xchg
cmps
in
sbb
xchg
and
fdivr
adc
xor
jmp
add
and
in
fs
and
or
rep
mov
addr16
retf
test
pop
dec
hlt
inc
mov
loope
sub
dec
jp
dec
lods
sub
imul
sar
stos
aam
mov
inc
add
sar
mov
jnp
fdivp
popa
xchg
(bad)
xchg
dec
dec
cmp
dec
mov
lds
xor
jae
jp
mov
push
addr16
test
adc
sub
jns
fwait
dec
cld
pop
pop
test
rol
imul
out
sbb
xchg
sar
daa
pop
popf
cmp
jge
jmp
xchg
inc
mov
mov
sbb
dec
mov
mov
cmc
pop
std
sar
(bad)
xchg
scas
dec
pop
lods
jae
mov
xor
sbb
ret
xor
jmp
pop
mov
stc
(bad)
fistp
jnp
sbb
adc
aad
xor
pushf
adc
xor
mov
push
jb
jae
fdivr
mov
lea
js
out
pop
sbb
scas
sbb
push
shr
gs
mov
mov
or
popa
push
push
ja
inc
scas
add
repnz
mov
(bad)
loopne
fst
xor
in
jb
pop
sub
mov
and
inc
sub
xor
in
test
addr16
inc
inc
pop
clc
mov
cmp
arpl
adc
xchg
mov
push
jnp
xor
aaa
adc
adc
ins
and
je
int3
js
sahf
hlt
fwait
aas
ins
or
fs
pop
pop
mov
(bad)
int3
mov
cmp
pop
lods
sbb
outs
sub
xchg
pop
in
ins
rcl
stc
mov
vmovntpd
or
pop
sbb
add
push
icebp
sar
sti
mov
call
lods
data16
cmps
(bad)
int3
call
hlt
xchg
enter
and
cli
and
add
jl
jo
imul
push
out
xchg
aas
clc
test
xor
iret
enter
pop
repnz
push
fwait
push
(bad)
mov
adc
dec
or
fisub
jmp
pop
rol
push
sub
push
fstp
fnsave
xchg
outs
adc
pop
cmp
mov
fucomi
gs
push
cmp
add
fisub
pop
jle
jmp
sub
mov
cdq
add
xacquire
ror
adc
dec
test
enter
fs
fs
lock
mov
and
push
bound
jo
js
mov
ror
icebp
jo
inc
(bad)
and
in
ins
mov
mov
xlat
icebp
mov
scas
mov
inc
pop
cmp
std
aam
and
popf
or
pop
push
push
pop
inc
mov
pop
xor
out
aaa
add
sbb
sbb
and
inc
sub
pushf
dec
push
stos
adc
inc
sar
jns
sbb
jnp
rol
loopne
pusha
inc
jns
add
test
or
jp
inc
imul
into
in
sbb
shr
fld
mov
retf
mov
lods
sbb
cmp
jmp
cs
ja
inc
dec
mov
popf
out
in
mov
inc
sbb
push
dec
pop
fistp
outs
sub
xlat
dec
mov
inc
ss
cdq
xchg
push
dec
dec
mov
ds
(bad)
push
cmc
dec
(bad)
aad
mov
cmp
leave
mov
loop
jbe
fdivr
xchg
and
sbb
frstpm(287
jbe
add
xchg
aam
fs
imul
(bad)
jmp
mov
ins
mov
out
xor
pop
xlat
xor
adc
jmp
sahf
jmp
cld
gs
push
mov
int
mov
mov
gs
fiadd
lea
out
xchg
push
leave
jno
xor
pop
dec
adc
clc
in
clc
inc
jb
ss
in
addr16
call
inc
mov
je
jne
icebp
mov
outs
ins
outs
test
push
jl
sub
scas
jge
out
(bad)
push
(bad)
out
mov
or
push
pop
(bad)
xchg
movs
test
push
dec
sbb
jno
outs
movs
xchg
mov
xchg
scas
xlat
and
cwde
or
jne
adc
inc
jo
(bad)
in
loop
xchg
out
inc
sub
or
test
popa
das
in
and
ss
xchg
mov
repz
dec
(bad)
cmc
xchg
xchg
retf
nop
test
cmp
mov
xor
test
pop
lea
or
iret
mov
mov
adc
int3
xor
pusha
cmc
inc
ins
inc
loop
jge
inc
inc
mov
ror
(bad)
push
or
ins
rcr
jne
(bad)
sbb
or
sahf
pop
pop
xchg
cmps
mov
shl
mov
add
out
jae
xchg
loop
xor
cmp
mov
lds
mov
in
je
or
and
pop
jb
cdq
adc
test
sbb
cs
jae
outs
mov
jl
aam
mov
mov
and
mov
movs
inc
in
and
sbb
sub
xor
inc
inc
inc
push
inc
inc
xchg
std
push
aad
add
(bad)
cli
pusha
xor
div
in
sub
xor
test
and
daa
sbb
mov
aad
sbb
mov
pop
stos
and
adc
stos
sbb
(bad)
inc
cmp
sbb
out
cmp
lds
ins
pop
inc
call
retf
or
adc
iret
mov
movs
push
jmp
jmp
int3
push
and
(bad)
jno
(bad)
imul
cld
jmp
inc
dec
adc
mov
dec
lods
hlt
ja
mov
retf
inc
jp
adc
cmp
adc
into
adc
mov
and
mov
mov
xchg
jno
hlt
ins
or
jae
xor
call
xlat
or
lahf
fadd
imul
mov
pop
cmp
push
xor
pushf
adc
cmc
ss
jns
mov
inc
push
inc
pop
(bad)
int3
mov
cmp
mov
pushf
sbb
or
movs
sub
cmc
xchg
mov
cdq
dec
dec
jnp
push
loopne
cmp
cwde
sub
pop
jmp
jnp
pop
je
fcmovu
jnp
or
jg
xor
pop
push
jge
mov
in
adc
mov
test
mov
sahf
add
xlat
lods
bnd
sbb
jecxz
bound
mov
inc
cmps
and
shr
push
(bad)
jmp
es
mov
stos
mov
aam
rol
sbb
mov
ret
and
xchg
pop
scas
mul
push
test
xor
add
pop
mov
inc
mov
addr16
add
scas
scas
mov
jb
push
push
adc
jnp
into
pop
loope
or
cmc
shl
push
call
push
mov
lds
sbb
or
jo
adc
fcmove
add
cmp
pop
leave
ins
push
shl
enter
or
xor
outs
mov
xchg
or
adc
mov
mov
leave
ja
idiv
jo
push
icebp
test
rol
pop
scas
or
or
retf
hlt
cmps
pop
test
add
mov
mov
shr
movs
retf
or
cmp
sub
sbb
pop
xor
ins
push
jge
xor
loope
idiv
stos
outs
mov
mov
jl
in
and
push
dec
pusha
jmp
cs
loopne
data16
adc
adc
pop
cs
jo
jo
outs
cmc
jns
adc
fwait
pushf
ret
clc
shr
icebp
aas
inc
jmp
and
mov
pop
push
jmp
(bad)
cmps
mov
(bad)
(bad)
pushf
lock
cwde
add
add
mov
daa
(bad)
not
push
lea
es
push
mov
jp
adc
add
mov
and
fsubr
mov
fcom
inc
mov
xchg
cdq
in
in
and
gs
rcl
ins
xor
adc
pop
retf
mov
retf
jne
pop
leave
loopne
pop
dec
call
imul
movs
rol
std
inc
mov
push
adc
popa
inc
mov
ins
jae
je
stos
aas
and
and
pop
pop
in
cmp
popf
(bad)
int
or
mov
xlat
dec
call
push
shl
mov
pop
not
inc
mov
jmp
das
add
adc
cdq
mov
out
xor
mov
xor
ja
mov
dec
imul
xchg
popa
pop
or
out
adc
mov
mov
xchg
or
xchg
mov
shl
inc
rcr
or
hlt
loop
ins
xor
mov
pop
enter
and
inc
pop
jae
mov
fmul
sar
aaa
mov
sbb
push
lods
cmps
popa
cmc
fmul
xchg
inc
iret
cmps
enter
div
icebp
sub
add
add
fcomi
mov
call
sbb
rol
dec
imul
ja
mul
pop
push
sub
std
rcl
js
dec
cmp
outs
in
sar
pop
push
cmp
mov
aaa
fs
xchg
or
pushf
xchg
loop
les
out
xor
sahf
lds
jmp
sub
jecxz
or
or
mov
jae
adc
fs
fldlg2
(bad)
ins
cld
aam
jmp
das
cmp
and
push
sub
fsub
push
imul
adc
mov
mov
lods
sbb
sbb
rcr
test
cdq
popa
sub
xlat
xchg
adc
cmps
add
or
fiadd
scas
out
and
cwde
dec
leave
push
sbb
(bad)
cmps
fimul
jmp
add
adc
vhaddpd
sub
out
dec
mov
sub
test
adc
push
xchg
jbe
adc
cmp
sub
aas
inc
lea
push
(bad)
push
int3
inc
xchg
mov
mov
nop
pop
xchg
fwait
xchg
push
in
mov
es
(bad)
fwait
or
dec
(bad)
push
into
sub
inc
out
dec
hlt
popf
jmp
shl
sub
jb
jno
or
mov
inc
jmp
out
sub
pop
lea
or
sub
cld
cli
iret
adc
sbb
sub
outs
jl
xchg
stos
push
ss
xor
push
mov
imul
repz
mov
mov
jge
inc
lods
xchg
cmc
cmps
jne
mov
add
aas
mov
into
cli
adc
dec
cwde
cmps
sub
push
xchg
daa
sub
stc
leave
sub
arpl
mov
inc
and
sub
sbb
xchg
mov
das
mov
in
push
rep
sub
pushf
shl
shl
cmp
xor
pop
mov
out
mov
xchg
pop
adc
sub
jmp
cmp
cmp
repnz
add
adc
or
sbb
retf
mov
in
in
popf
stos
xchg
sbb
dec
popa
or
pop
sub
jmp
mov
sub
(bad)
cmps
scas
pop
out
sub
mov
sti
mov
int
mov
jge
or
in
mov
js
jp
xor
pop
sub
pop
xchg
adc
push
je
sbb
and
cmp
mov
sti
es
add
test
into
scas
loope
retf
xchg
dec
cmp
xchg
mov
cmp
cs
or
mov
cld
push
sub
xor
fsubr
retf
xor
jg
shl
sahf
sub
and
mov
int3
fwait
mov
xchg
pop
fst
or
push
xchg
stos
mov
pop
dec
cs
lahf
sub
jo
inc
loope
jge
sar
mov
bound
test
jae
or
movs
popf
popa
xlat
data16
fld
pop
mov
outs
inc
in
jl
les
jbe
fidivr
cmps
push
sub
jmp
inc
loopne
pop
sub
and
push
dec
push
addr16
pop
sub
push
shl
xchg
mov
stos
adc
xor
xchg
add
cmp
push
test
dec
jecxz
call
adc
cmc
jb
and
(bad)
jge
test
std
inc
dec
(bad)
xchg
dec
mov
rcl
and
addr16
ss
(bad)
out
jo
sbb
add
xchg
and
and
movs
jno
xchg
pop
cmp
mov
dec
ror
clc
jmp
inc
adc
or
imul
ds
mov
cmp
sahf
jbe
out
pop
es
out
xchg
xor
adc
ret
and
mov
stos
push
fnstsw
xor
mov
jmp
shl
popa
mov
or
add
repz
mov
mov
mov
xchg
jmp
and
mov
outs
xchg
les
call
sub
out
sbb
push
xchg
test
icebp
push
pop
and
inc
adc
aad
mov
hlt
ret
or
mov
dec
retf
lock
aaa
xlat
push
or
adc
addr16
test
lahf
mov
(bad)
pushf
mov
icebp
xchg
xchg
pushf
xor
xor
ja
lods
push
or
xchg
xor
jne
mov
xchg
mov
mov
addr16
cmp
push
jmp
push
std
pop
push
pop
sub
push
repz
outs
inc
jno
jb
inc
test
in
cmp
push
adc
mov
sub
and
gs
jg
xor
mov
mov
stc
and
xlat
push
or
(bad)
mul
xor
pushf
pop
xchg
or
mov
jg
xchg
int
iret
fucomip
mov
fisubr
arpl
mov
push
adc
les
fs
cmp
loope
dec
mov
jle
imul
xor
cmp
das
test
mov
std
adc
adc
mov
in
jg
sub
test
jmp
mov
(bad)
in
inc
sbb
inc
or
cli
push
fmul
xchg
and
repz
mov
stos
mov
movs
sub
scas
aam
fwait
xlat
sti
pop
lods
sbb
aam
pop
sahf
xor
sub
neg
add
pop
jmp
jno
mov
ret
nop
add
xor
cmps
shr
inc
fadd
movs
mov
sub
mov
fisubr
cmps
lock
inc
inc
cmps
jmp
pop
ins
(bad)
out
mov
mov
sbb
push
frstor
into
push
fild
push
jbe
cmp
pop
sbb
(bad)
jne
xchg
out
xchg
stos
sahf
adc
imul
adc
outs
(bad)
ror
lods
mov
pop
cmps
sub
cdq
imul
mov
jge
and
in
inc
popf
sti
xlat
or
jnp
mov
push
fbstp
inc
xchg
lods
bound
and
inc
fidivr
inc
sbb
and
xor
push
cdq
(bad)
das
fadd
sbb
out
in
xchg
sahf
adc
rcl
call
mov
push
retf
movs
loopne
jge
mov
dec
xor
xor
sub
(bad)
in
movs
xchg
xor
cwde
push
xor
push
jmp
and
movs
jae
pusha
in
(bad)
mov
dec
mov
ds
(bad)
cdq
push
cs
popf
jl
test
push
je
sub
jnp
dec
inc
cmp
out
adc
std
adc
push
jbe
xor
sbb
popf
or
sbb
fldcw
pop
test
sbb
pushf
loopne
scas
int3
repz
xchg
iret
ins
adc
fistp
xchg
sbb
sbb
popf
je
pop
test
hlt
and
xor
out
pop
sti
mov
aam
inc
cmp
sub
adc
add
into
out
or
mov
repnz
push
sbb
sbb
inc
std
mov
xchg
dec
lahf
cmp
aad
hlt
mov
pop
into
dec
push
xor
sbb
dec
jbe
or
sbb
out
outs
(bad)
in
daa
push
mov
dec
adc
shr
lea
sub
sub
fcmovu
pop
xor
inc
and
(bad)
cwde
xchg
out
test
and
fld
ja
mov
pushf
(bad)
dec
hlt
adc
jle
subps
pop
adc
pop
sub
rcl
movs
aaa
xchg
pop
fs
in
lahf
enter
enter
movs
mov
add
test
add
mov
jmp
fld
xor
shr
jg
or
mov
ja
fwait
pop
mov
retf
mov
mov
pusha
dec
or
rol
jmp
es
jnp
dec
inc
sub
rcr
xchg
inc
jbe
mov
mov
or
leave
inc
stos
loopne
xchg
jbe
mov
push
jecxz
and
clc
inc
jmp
adc
mov
xchg
pop
(bad)
push
cmp
jl
cmp
add
sahf
mov
outs
mov
pop
mov
outs
scas
push
js
cmp
cdq
mov
jg
mov
add
inc
stos
imul
or
loop
push
mov
in
mov
adc
repnz
dec
rcr
mov
nop
adc
xchg
lock
pop
out
imul
mov
mov
repnz
push
jo
cmp
fwait
sbb
(bad)
xchg
sar
pop
int
xor
ret
ds
dec
mov
xor
or
(bad)
jbe
movs
call
jmp
push
mov
rol
xor
jmp
fimul
cmc
and
jg
aaa
ds
or
sub
clc
ret
add
xor
test
add
xchg
pusha
hlt
inc
js
xor
push
push
movs
(bad)
sbb
mov
inc
mov
sbb
sbb
enter
add
sub
movs
imul
iret
(bad)
fdivr
xor
movs
scas
sub
mov
jge
aad
aas
and
cmp
cs
imul
mov
jne
inc
(bad)
repnz
imul
adc
into
(bad)
push
sbb
sub
jmp
adc
shr
in
and
in
cmp
jmp
push
in
fld
xor
lock
mov
mov
pop
mov
imul
lods
das
push
aam
dec
in
in
(bad)
lock
or
out
movs
cmp
stos
(bad)
fst
jle
jl
mov
ror
sub
repnz
ja
xchg
(bad)
xchg
mov
rcr
fmul
(bad)
into
sub
or
scas
mov
push
pop
push
cmps
popf
mov
ins
aam
lods
outs
ins
fimul
mov
shr
es
loop
dec
test
in
imul
or
pop
pop
jno
pop
inc
ror
sub
enter
xlat
mov
cdq
int3
and
fdivr
(bad)
ror
sbb
sbb
pop
or
mov
adc
mov
mov
jmp
and
stc
inc
ja
jle
mov
loopne
mov
jb
adc
ins
xor
iret
and
pop
clc
iret
push
add
mov
outs
xchg
prefetch
shl
push
jle
mov
push
fcomp
sub
lods
dec
imul
ret
xchg
popf
jbe
and
dec
aas
push
fadd
lods
jl
jp
and
mov
pop
lock
mov
fcmovnb
adc
ja
in
cmps
push
jecxz
push
or
imul
cmp
push
and
adc
sub
sub
outs
mov
ins
int
lods
ss
lods
dec
shl
iret
loope
mov
out
ja
jp
test
pop
fbstp
pop
not
shl
xor
rol
xor
(bad)
fsub
test
xchg
in
std
ficom
push
in
fld
outs
mov
loop
mov
fs
cli
jmp
imul
and
add
pop
pop
pop
cs
adc
test
xor
push
add
add
add
es
mov
adc
xor
xchg
in
(bad)
enter
dec
retf
std
mov
mov
sub
aaa
jae
shl
fimul
inc
adc
jo
push
sbb
mov
fadd
jg
cmps
or
dec
movs
ss
push
xchg
xor
out
jbe
mov
xor
outs
movs
inc
movs
add
retf
mov
pop
push
repnz
mov
push
data16
inc
ret
mov
mov
and
les
push
(bad)
scas
mov
lods
shl
inc
pop
pop
hlt
cmp
push
xor
push
ror
cli
jl
loop
jge
test
push
jmp
jl
or
movzx
xchg
cmp
ret
mov
in
fs
repz
leave
cs
cmps
adc
int
into
icebp
pop
cmc
or
loop
or
in
adc
adc
adc
mov
out
fmul
jmp
sub
fwait
iret
xor
mov
dec
jae
lock
jl
push
aaa
repz
(bad)
into
add
shl
mov
xchg
scas
dec
and
add
sbb
xchg
retf
out
fcomp
ds
adc
(bad)
daa
(bad)
pop
sub
ins
cmp
fidivr
jmp
jno
pushf
mov
dec
sub
mov
jnp
pop
repz
add
xor
cmp
inc
lods
les
mov
xchg
inc
out
sub
mov
fiadd
hlt
aas
cmc
inc
dec
pop
inc
les
and
(bad)
loop
inc
pop
inc
pop
jecxz
adc
dec
loop
jns
outs
and
outs
in
mov
inc
mov
inc
fs
xchg
xor
sar
dec
xchg
jns
rcl
(bad)
mov
dec
inc
cmps
and
and
cmp
popf
mov
daa
lea
clc
lock
jb
movs
scas
cdq
stos
mov
and
jae
dec
push
jno
xor
fsubr
gs
push
push
add
aas
mov
adc
mov
adc
sub
arpl
pop
inc
inc
movs
pop
test
cld
xor
xchg
cmp
adc
xchg
mov
jg
sub
ficomp
add
add
das
push
add
hlt
repz
push
movs
cdq
(bad)
(bad)
xchg
xor
mov
sahf
push
mov
and
mov
add
retf
inc
mov
push
fdivr
lods
(bad)
fild
repnz
test
dec
inc
mov
jmp
fdivr
out
fiadd
pop
call
or
mov
jmp
push
adc
dec
fsubr
out
pop
dec
push
push
or
or
fcom
mov
cdq
jae
test
icebp
push
ss
sub
pop
add
cdq
(bad)
or
add
fcom
aaa
pushf
loop
shr
scas
es
sbb
sub
call
sbb
mov
inc
push
cmps
bound
cs
test
mov
mov
test
test
inc
sub
(bad)
mov
jae
repnz
sub
cli
rcr
mov
add
mov
das
ins
mov
add
xchg
sub
dec
imul
cwde
pop
imul
inc
cmp
xor
cmp
pop
push
imul
jae
xor
cmp
mov
push
cdq
pushf
iret
jae
js
mov
mov
dec
pop
cmp
add
and
scas
popf
xchg
mov
pop
jo
inc
add
in
mov
popa
mov
push
adc
js
sbb
xor
fdivr
stos
cmp
fcomi
mov
sbb
dec
arpl
adc
mov
mov
xchg
arpl
int
mov
clc
lock
jmp
pop
sbb
cs
mov
and
mov
dec
inc
adc
int3
jge
mov
fcomi
xchg
or
in
dec
mov
sbb
mov
test
mov
jmp
push
pop
sub
test
pop
call
popa
jns
or
xor
xchg
cld
push
jle
cmp
jle
cmps
dec
rcr
jno
les
dec
sub
jmp
jle
out
push
jbe
inc
das
mov
rcr
xchg
dec
pop
cmp
lea
push
sub
mov
push
mov
mov
les
and
shr
ds
fcomp
mov
out
popa
test
in
daa
lock
jl
es
aad
xchg
or
cmp
and
push
pop
and
popa
scas
ja
adc
ds
aam
push
sahf
std
leave
and
scas
lahf
ds
and
cs
push
or
outs
jne
nop
pop
hlt
or
out
(bad)
stc
mov
test
xchg
xlat
pop
lods
sub
retf
or
cmp
fwait
je
stos
test
fwait
pop
pop
xchg
div
jbe
mov
mov
sbb
sub
mov
xchg
mov
push
dec
loopne
pop
in
sub
mov
fild
in
ins
rol
adc
pop
iret
or
sbb
xor
dec
push
cdq
aaa
(bad)
das
or
jmp
pop
arpl
push
xchg
sub
popa
(bad)
movs
ficom
jge
gs
adc
ficom
sti
xchg
mov
lds
lea
and
xchg
add
sub
push
mov
into
sahf
add
lods
pop
add
out
ret
mov
ds
rcl
inc
xchg
push
push
jne
out
mov
xchg
out
std
rcr
stos
and
out
aad
or
aas
push
mov
cmp
push
add
fnstcw
out
jnp
jo
jp
out
imul
outs
dec
pop
and
jmp
retf
mov
xor
sbb
xchg
inc
movs
imul
outs
ss
mov
push
(bad)
out
mov
(bad)
push
outs
cli
(bad)
idiv
shl
jno
(bad)
jbe
addr16
ja
rol
in
pop
retf
out
fisttp
sahf
add
xor
and
sub
cs
push
sbb
xor
or
lods
dec
movs
mov
loope
push
ins
test
in
loopne
fs
(bad)
into
stos
imul
push
sbb
mov
dec
mov
sub
ret
(bad)
sahf
pushfw
(bad)
ins
mov
pop
or
test
sbb
dec
cmp
mov
out
adc
mov
jmp
into
out
sbb
shr
js
xor
retf
aam
in
sbb
push
int3
sbb
shr
jp
es
inc
cli
pop
mov
push
jmp
not
call
test
(bad)
jl
(bad)
push
outs
push
out
mov
mov
mov
fistp
outs
imul
fbstp
cmp
pop
jmp
in
(bad)
mov
mov
test
cmps
or
ja
and
ins
outs
mov
mov
add
test
and
(bad)
push
js
inc
dec
test
inc
or
jge
xor
mov
push
ja
fsubr
pop
xor
dec
jecxz
stc
aam
fcmovnbe
stos
jo
pop
retf
int3
mov
pusha
jmp
enter
mov
and
mov
fidivr
call
push
in
cmp
aam
fiadd
adc
sbb
shr
cmc
lock
jecxz
sub
jo
movs
add
pop
aad
jbe
mov
in
dec
add
sar
popa
cwde
mov
add
arpl
hlt
je
mov
sub
in
sub
jae
push
cmps
and
in
pop
rol
fucomip
xlat
fidiv
adc
dec
cwde
cmp
adc
inc
ins
push
or
fistp
aad
sbb
sub
xchg
or
out
push
sub
jae
xchg
sar
(bad)
xchg
add
shl
sti
add
mov
add
sub
cmp
inc
inc
mov
retf
sub
mov
jnp
xor
xchg
adc
push
ss
imul
(bad)
in
imul
xor
add
sbb
(bad)
cmp
mov
jo
pushf
fnsave
leave
fistp
sbb
pop
and
mov
(bad)
loop
push
sbb
ins
out
push
mov
fldcw
push
ror
jno
sbb
mov
mov
loop
retf
mov
mov
mov
aad
or
test
iret
and
gs
pusha
nop
rcl
lods
inc
inc
sbb
(bad)
sti
arpl
inc
inc
fistp
outs
nop
adc
add
push
pop
retf
cld
dec
inc
loop
nop
sub
mov
or
jl
gs
mov
cmp
ds
ret
sub
outs
dec
mov
and
push
sahf
mov
push
jl
outs
pop
sbb
dec
sbb
jo
jb
enter
mov
movs
ret
cmps
fwait
xchg
dec
sahf
add
idiv
and
cli
dec
pop
adc
cmp
scas
fs
xor
xlat
push
push
loop
mov
push
mov
lock
xchg
rcl
pop
in
(bad)
push
cmp
adc
adc
mov
repnz
hlt
ins
aaa
and
js
jmp
call
neg
pop
enter
add
jb
mov
mov
xor
sbb
jp
sbb
sbb
dec
test
lea
add
sbb
push
out
pop
cmp
push
out
lock
in
fsubr
ror
xchg
mov
dec
sbb
dec
push
inc
loopne
jnp
adc
sti
or
stc
add
push
clc
or
int3
sub
push
sti
or
pop
sbb
rcl
ret
add
sub
pop
inc
cs
outs
ds
push
inc
jecxz
sub
cmp
movs
add
mov
(bad)
out
fiadd
inc
or
cmp
cwde
pop
inc
dec
cmc
jg
jge
push
mov
fadd
jmp
popa
cmp
xor
dec
test
cmp
add
ret
fdivr
push
ins
mov
les
or
or
jnp
adc
and
pop
add
add
test
leave
in
int
jp
sar
ret
mov
jmp
pop
outs
inc
jmp
(bad)
imul
addr16
(bad)
lahf
repnz
push
inc
cwde
aam
and
scas
cmps
sub
jbe
pop
sbb
js
int3
loop
rcl
mov
call
cmp
fcom
ret
jno
jo
sub
loopne
jmp
jp
inc
inc
and
sbb
lods
and
xor
nop
jle
rol
add
cmp
sbb
int
sub
scas
dec
mov
dec
adc
mov
rol
cwde
push
(bad)
sub
int3
or
and
icebp
shl
add
call
rcl
repz
sti
pop
mov
add
jo
hlt
lahf
nop
lods
sbb
mov
pop
fist
bnd
cmp
xor
mov
and
fldcw
jae
xchg
pop
fyl2x
sbb
sbb
pop
jbe
jle
stos
(bad)
mov
sub
into
xchg
sub
ret
das
pusha
cld
mov
inc
lea
adc
call
xchg
ret
stos
adc
push
pusha
xlat
sub
dec
aaa
mov
pop
dec
iret
adc
xor
cmp
pop
mov
int3
add
shl
sbb
sbb
and
mov
or
xchg
call
data16
aaa
cmps
pusha
or
sbb
adc
mov
addr16
out
(bad)
loope
add
dec
std
add
pop
sbb
js
jnp
imul
jg
movs
pop
call
addr16
loopne
lea
fdiv
pop
jmp
jo
clc
or
fcomp
(bad)
fcom
adc
call
nop
gs
repz
push
jmp
or
stos
loopne
jp
js
ins
fcmove
fsub
inc
lods
(bad)
retf
add
push
sub
mov
inc
push
mov
cli
int
mov
and
push
mov
adc
mov
sbb
retf
shl
repnz
push
out
mov
shr
lods
mov
mov
ror
fdivr
repz
dec
cmp
push
mov
fidiv
jae
ficomp
xor
add
xor
in
popa
push
pop
mov
inc
iret
ss
inc
jp
cs
adc
cmps
imul
and
test
out
jno
loopne
fnstcw
dec
ret
das
retf
push
dec
jecxz
inc
sbb
int3
daa
push
dec
fld
adc
mov
or
call
xchg
rcr
mov
mov
inc
sbb
mov
inc
xor
movs
inc
sbb
dec
push
jne
ret
inc
dec
aas
mov
sbb
jbe
test
cmc
jo
inc
mov
test
lock
fimul
inc
xchg
cmp
pop
jle
sbb
repz
push
jns
lahf
pop
mov
fs
mov
xor
inc
fidiv
scas
sbb
dec
add
push
in
js
mov
mov
sbb
jmp
add
sbb
xchg
lock
sub
dec
xchg
cmps
mov
sub
xchg
and
dec
push
jmp
rol
jmp
fisub
outs
xor
add
popf
push
cmps
cli
mov
popf
inc
mov
mov
(bad)
ins
sbb
add
adc
xchg
xor
mov
aas
addr16
nop
cmp
(bad)
sti
pushf
imul
jle
push
ficom
fcmovne
ins
call
dec
call
repnz
loop
and
jle
inc
mov
xchg
or
jle
out
in
ins
fldenv
sub
(bad)
mov
sti
aad
jne
xchg
push
lods
in
inc
aas
mov
stos
pop
leave
out
in
pop
nop
cs
mov
adc
or
pop
inc
shl
(bad)
repz
js
cwde
xchg
out
ror
stos
in
adc
dec
fidiv
and
push
and
xor
(bad)
mov
dec
or
outs
rcl
scas
shr
lahf
mov
cmps
les
cli
xchg
cmp
leave
mov
inc
pandn
pop
mov
scas
rol
(bad)
cmp
lods
mov
mov
pop
in
add
repz
mov
mov
lahf
xor
xlat
adc
mov
inc
jnp
mov
in
std
lea
movs
ficom
sbb
mov
inc
loop
clc
mov
mov
call
mov
cmp
sbb
(bad)
adc
(bad)
jge
(bad)
jl
inc
fidiv
enter
daa
pop
sbb
mov
sub
add
push
mov
arpl
cmove
jp
(bad)
mov
mov
loopne
push
mov
mov
pop
dec
frstor
xor
cs
mov
inc
and
mov
adc
arpl
cmp
jae
out
sbb
mov
jmp
mov
xor
out
xchg
addr16
std
mov
cmc
xlat
xchg
daa
inc
adc
cwde
or
xchg
int3
jmp
pop
(bad)
mov
sti
in
mov
ins
adc
mov
ret
adc
clc
push
cld
inc
jns
scas
cli
repz
mov
bound
add
adc
pop
arpl
loope
jno
pop
xchg
mov
xor
les
jne
mov
push
push
lahf
sub
xchg
xchg
xchg
(bad)
lods
leave
clc
xchg
mov
jbe
xchg
rcl
(bad)
leave
mul
push
in
mov
repz
adc
or
stc
jecxz
jae
ds
loop
fimul
and
in
jae
std
mov
es
outs
mov
popa
pop
sbb
fcmove
adc
xlat
imul
cmovne
test
fwait
test
cli
push
push
jle
push
mov
add
aad
cli
ret
sbb
stc
(bad)
out
ins
leave
call
cwde
daa
in
jns
add
inc
adc
add
test
pop
out
sbb
jno
and
sub
adc
jo
pop
jb
aas
sub
(bad)
push
shl
mov
mov
aas
sahf
dec
loope
sbb
cmp
xchg
jns
retf
sub
sbb
lds
push
and
mov
sbb
push
sbb
es
imul
and
jmp
adc
or
stos
dec
lahf
push
or
xchg
arpl
add
xchg
inc
inc
das
jl
cdq
xor
dec
jge
in
mov
dec
pusha
jb
test
adc
je
scas
test
cmps
shl
sahf
mov
retf
lds
fwait
aaa
mov
mov
push
add
mov
lahf
loope
sub
scas
xlat
push
stos
xchg
pop
cmp
outs
ficomp
out
sbb
aas
mov
data16
jmp
rcl
bound
ins
sti
movs
cli
out
mov
leave
inc
jp
es
dec
pop
rcl
not
jns
in
dec
push
aas
mov
add
inc
and
mov
mov
cmp
rcr
popf
jns
test
push
icebp
mov
imul
loop
mov
jmp
shl
mov
sti
sub
or
in
mov
movs
push
pop
cmp
ret
xor
mov
push
repz
fptan
std
adc
jno
sub
stos
cwde
cwde
movntps
es
mov
push
ret
xchg
mov
sbb
(bad)
sti
in
popf
add
mov
clc
ja
retf
mov
adc
cmp
adc
arpl
adc
fs
test
or
fisttp
mov
and
out
ss
push
cwde
jo
and
push
inc
mov
test
jmp
shr
int
mov
pop
mov
ja
sbb
fidiv
std
in
imul
out
in
dec
xor
pop
mov
or
test
ins
or
rol
in
fisttp
and
in
dec
mov
sbb
cld
sub
mov
push
pop
in
sbb
(bad)
push
lods
mov
mov
bound
test
es
xchg
adc
mov
les
mov
lea
or
test
fs
inc
and
loope
cmp
xchg
and
sahf
sbb
fnstcw
sbb
call
pop
lea
and
jbe
cwde
inc
xor
int3
add
or
pop
xchg
nop
neg
xchg
enter
pop
jp
(bad)
scas
not
adc
(bad)
fsub
in
push
cmc
pushf
(bad)
clc
mov
push
push
xchg
xchg
loopne
cmp
or
push
sar
dec
scas
mov
push
(bad)
fcomp
xchg
xchg
in
loopne
xchg
in
mov
sar
mov
fptan
pop
lods
cmp
ja
jnp
dec
fnsave
mov
mov
pop
mov
aaa
sub
and
lods
push
push
and
push
xor
jmp
mov
or
ss
mov
dec
mov
mov
int3
sbb
mov
fadd
and
int3
adc
stos
jl
jl
ins
jnp
es
jo
and
jmp
mov
ror
sbb
inc
arpl
rol
mov
mov
lods
js
push
pop
(bad)
cmp
cmp
out
inc
jecxz
sbb
push
iret
adc
mov
or
adc
call
jl
in
xchg
add
xchg
sbb
add
mov
or
push
xor
(bad)
shr
inc
fld
in
mov
pop
mov
adc
fstp
xchg
xchg
pop
(bad)
or
adc
mov
dec
test
ficom
js
sub
int
pop
push
shl
sub
test
icebp
push
sbb
call
loope
nop
lods
movs
adc
xchg
popf
leave
adc
dec
or
xor
push
inc
outs
push
ds
stc
lods
jno
cmp
je
les
cmps
gs
loopne
js
sti
popa
(bad)
cmp
push
iret
gs
adc
jno
jle
jb
cmp
stos
mov
outs
sub
mov
outs
jmp
enter
push
leave
sbb
cli
in
outs
in
xchg
jmp
test
jnp
lahf
and
xchg
dec
mov
pusha
std
xor
jo
pop
jmp
or
pop
mov
inc
xchg
cmc
mov
pop
and
js
inc
dec
cmps
ret
xor
shr
add
jg
int3
test
pop
imul
outs
addr16
aaa
dec
mov
ja
imul
fneni(8087
aam
ret
cmp
cdq
sub
mov
jmp
outs
cmc
pop
inc
nop
pop
mov
ss
xor
dec
in
mov
or
lock
add
adc
pop
stos
jl
data16
sub
repz
pcmpeqd
jg
stos
sbb
rcr
inc
jne
ins
pop
and
xchg
shl
outs
xchg
and
pusha
es
jb
arpl
mov
mov
psubq
sbb
or
and
cmps
dec
and
mov
cmc
sbb
sub
mov
imul
sub
xchg
dec
fwait
popf
xor
out
push
jmp
mov
xor
mov
mov
sbb
pusha
int3
push
pushf
stos
test
cmp
push
pop
inc
xor
cwde
test
or
fisub
pop
dec
inc
push
cs
xchg
mov
mov
repnz
inc
jl
push
dec
inc
sub
sbb
lahf
in
aas
and
or
rcl
imul
fistp
push
push
(bad)
js
jmp
movs
mov
jp
xchg
loope
or
mov
push
push
scas
push
mov
mov
stos
xchg
mov
stc
dec
add
lods
push
es
(bad)
test
in
add
movsx
xor
je
pusha
(bad)
loopne
pop
aad
or
and
push
ficomp
xchg
retf
xor
cld
pusha
push
add
push
and
cmp
cmp
jle
push
cmp
call
or
rol
nop
sti
push
out
out
xchg
adc
or
or
dec
shl
out
out
mov
push
mov
fidiv
retf
push
sbb
clc
aad
jbe
lea
sbb
std
lods
pusha
adc
(bad)
cld
jl
leave
cmp
pop
sub
and
je
shl
xor
(bad)
fmul
lds
movs
mov
popa
cdq
sbb
inc
jle
jge
sbb
adc
xor
push
bound
iret
push
sti
push
jl
push
xor
aaa
fdivp
push
cmp
es
je
fs
pop
in
jge
add
rcl
repz
xchg
aam
inc
ror
jmp
push
retf
xor
inc
sbb
jecxz
add
rcr
pop
and
int
mov
and
loope
jo
push
shr
jmp
scas
mov
xor
jno
ror
mov
push
sbb
int3
and
loop
(bad)
mov
hlt
push
pop
cs
or
mov
cmps
popa
sahf
in
or
inc
popa
mov
mov
mov
inc
daa
ret
mov
call
push
dec
push
test
cmps
cmp
cmp
jnp
xchg
mov
addr16
and
sub
mov
dec
fst
cs
push
adc
dec
das
sub
cmp
mov
mul
(bad)
cmp
push
xchg
xchg
in
xchg
pop
cdq
arpl
lock
ror
aad
mov
in
add
ins
or
das
mov
mov
cmp
push
cmp
pop
pop
push
int3
push
jb
into
mov
mov
add
aad
nop
fsubr
push
int3
aam
jl
cmp
mov
mov
mov
fisubr
popa
lods
enter
jo
cmp
sahf
sbb
mov
fiadd
dec
cwde
cmp
push
pop
xchg
out
adc
cmc
ins
sbb
xor
ins
f2xm1
icebp
idiv
sar
xchg
pop
push
mov
push
int3
mov
rol
xchg
cmps
and
cwde
fild
sar
dec
add
adc
sub
cmp
adc
loopne
xor
dec
sti
lods
xor
jmp
movs
(bad)
inc
addr16
les
(bad)
push
jmp
mov
and
fdivr
push
imul
ss
ret
inc
mov
(bad)
test
pop
jg
dec
nop
icebp
aas
inc
sahf
sub
leave
or
inc
cmps
mov
lock
mov
xchg
inc
inc
cmp
lods
sub
xchg
in
sbb
lahf
cmp
jb
loope
out
clc
mov
sahf
retf
inc
mov
cmp
and
fwait
loopne
in
(bad)
jns
cdq
icebp
dec
test
fild
xchg
mov
and
xor
or
lock
xor
arpl
push
sub
inc
jbe
rcl
jae
daa
xchg
cmp
add
add
cwde
xchg
cmp
test
sub
loopne
inc
(bad)
mov
ror
jp
js
mov
inc
sahf
mov
fldz
int
or
scas
cmp
data16
cld
add
iret
dec
dec
xor
or
mov
or
xor
test
jge
mov
lods
push
push
arpl
imul
cmp
pop
into
or
jb
jns
stos
xchg
xor
call
add
inc
sti
movs
lock
sub
inc
jecxz
adc
jecxz
mov
inc
clc
test
sub
push
xchg
cs
aaa
xor
outs
adc
loop
inc
sbb
pop
repz
or
jmp
mov
shr
dec
pop
sub
dec
sub
test
xor
jmp
mov
std
cs
sbb
stc
fist
dec
mov
xor
push
std
inc
add
stos
jg
popa
cmps
sub
sbb
sti
pop
mov
add
inc
je
mov
fistp
xor
sbb
rol
iret
outs
cmp
adc
mov
out
jge
aam
test
pusha
leave
cmps
int
sbb
ds
push
lods
lea
xchg
sbb
lock
xchg
nop
xchg
aas
in
popa
nop
enter
mov
cld
sub
adc
out
sub
out
pop
or
popf
ret
and
jns
arpl
repnz
jp
dec
pop
cmps
shl
push
sub
cmp
add
dec
pop
stc
pop
jge
mov
inc
mov
jb
in
adc
cmp
es
ins
cld
fmul
ret
neg
mov
jns
xor
add
test
cmp
fxch
repnz
pop
xor
push
(bad)
mov
pop
outs
inc
jecxz
push
inc
xchg
pop
jb
sbb
xchg
or
imul
enter
mov
sub
ins
inc
mov
call
xchg
loope
pop
cmp
cmp
sbb
gs
in
mov
inc
jbe
push
retf
add
xchg
sbb
mov
call
mov
sbb
push
imul
sub
xlat
mov
es
mov
(bad)
and
inc
inc
mov
jg
adc
test
stos
cmp
pop
inc
push
sbb
ja
leave
std
dec
cmps
lods
fwait
adc
vstmxcsr
lock
lods
pop
(bad)
not
sbb
jmp
pop
mov
loopne
repnz
jl
rol
leave
add
add
cmp
adc
jle
dec
sub
jae
mov
pop
xor
cmp
mov
ins
test
xchg
sbb
lods
xchg
push
sbb
rcl
int
inc
aad
dec
sti
sub
scas
addr16
mov
push
fcmovb
cmps
loop
ret
or
xor
(bad)
call
sbb
in
pop
mov
cmp
out
jg
shr
jnp
movs
cmp
push
mov
ins
ss
(bad)
cmp
mov
jno
inc
out
mov
aam
cmps
and
pop
mov
rep
enter
cmc
push
mov
adc
mov
push
daa
sbb
repz
mov
xor
in
push
dec
adc
mov
adc
mov
cs
ret
add
fs
mov
jno
adc
xor
push
cmp
push
(bad)
pop
cmp
loop
mov
test
mov
jbe
mov
cmp
sahf
pop
mov
mov
loop
mov
push
jbe
retf
into
ret
(bad)
jnp
sar
jb
mov
and
cmps
add
sub
push
sar
or
mov
sbb
inc
jno
mov
inc
add
call
inc
inc
ret
xchg
sbb
add
not
add
jecxz
and
push
sub
sti
movs
cwde
js
pushf
add
jge
out
sbb
mov
jp
mov
mov
mov
inc
fdivr
loope
xchg
mul
add
data16
or
xchg
mov
test
es
pop
cwde
jmp
(bad)
call
fsub
iret
adc
fadd
inc
(bad)
xchg
jmp
or
jnp
and
fcom
stos
call
orps
mov
ret
imul
mov
sub
sbb
dec
mov
push
mov
xor
mov
xchg
inc
jle
sub
push
pop
cmp
xchg
mov
xchg
scas
cmp
dec
and
call
or
fidivr
lods
(bad)
shr
adc
pop
inc
leave
mov
jnp
jne
lods
cwde
aad
push
fldenv
sub
outs
push
add
cmps
xchg
pop
xchg
cmc
sub
jb
cmp
mov
sub
mov
loop
add
lods
sbb
push
mov
push
adc
bound
mov
aad
pop
into
popf
xor
dec
retf
fldenv
mov
pop
bound
adc
or
adc
sub
aam
and
sub
pop
xor
or
pop
pop
push
outs
cs
mov
ret
cmp
cmp
jnp
mov
sbb
or
(bad)
pop
xchg
push
lods
mov
jne
push
xchg
clc
push
out
into
data16
dec
ret
push
push
inc
push
dec
sbb
dec
fadd
in
cmp
dec
sbb
xchg
sub
leave
mov
xlat
shl
push
mov
retf
sbb
shl
jge
sub
push
cmps
enter
adc
or
mov
(bad)
xlat
imul
add
add
mov
daa
imul
sbb
bound
cli
and
jmp
or
mov
mov
sbb
xor
xchg
sub
mov
ret
inc
jge
ins
fdivr
cmp
in
loope
es
fbstp
mov
jmp
sbb
sub
je
inc
and
xor
out
inc
(bad)
aam
add
mov
or
popf
mov
popf
mov
xchg
test
and
lock
int3
cwde
mov
mov
sub
adc
ins
fwait
das
aas
or
scas
mov
inc
inc
cdq
dec
add
scas
daa
jge
dec
pusha
test
cmp
sub
xchg
daa
shr
xchg
dec
cmp
or
xchg
add
addr16
inc
ss
sbb
cmp
repnz
in
dec
inc
lahf
lahf
pop
nop
loopne
or
pop
sub
call
adc
dec
mov
xchg
and
lahf
xor
cld
push
add
imul
loop
inc
stc
rcr
push
xor
jo
sub
out
fistp
es
dec
fbld
pop
or
popf
xor
pushf
pop
in
inc
test
retf
fsubr
mov
pop
ds
out
add
mov
aaa
adc
pushf
int3
retf
cs
xchg
pusha
mov
jg
hlt
pop
cwde
sti
mov
xlat
cmp
les
or
in
dec
push
mov
call
jae
sar
ja
and
sub
xchg
mov
inc
dec
aad
adc
jg
add
pop
mov
in
retf
aaa
sbb
mov
and
push
inc
rcr
mov
dec
jb
cmps
clc
jl
xchg
sbb
push
mov
xor
mov
cmp
retf
add
mov
xor
mov
and
jae
mov
push
clc
push
or
mov
mov
cld
dec
jp
ret
mov
cld
loopne
xor
or
pop
neg
jbe
outs
stos
pop
pop
add
aam
add
sbb
add
out
inc
or
enter
fidivr
mov
push
ins
inc
repz
jmp
hlt
and
inc
(bad)
das
xor
ins
dec
jnp
sbb
pop
mov
jmp
dec
adc
add
jecxz
out
push
adc
movs
dec
stos
pop
scas
nop
outs
or
int3
vunpckhps
pop
xor
inc
fild
fs
xor
out
and
rol
inc
and
pop
loope
sub
add
sub
test
push
lods
fdiv
dec
hlt
lock
xchg
sbb
mov
xchg
push
aaa
pop
adc
adc
jmp
xor
jae
mov
xchg
xor
and
fcmove
xchg
dec
mov
lods
jns
xor
outs
pop
jb
in
mov
fcmovnb
(bad)
inc
inc
sub
lahf
jb
int3
add
in
clc
fsqrt
jg
mov
xchg
inc
or
dec
mov
nop
add
lods
adc
xchg
ins
jge
adc
out
enter
inc
stos
mov
cwde
mov
ss
ret
mov
xchg
scas
mov
dec
loopne
mov
mov
cmp
cs
and
sub
pop
xor
clc
push
dec
dec
jnp
jmp
mov
cmp
in
xchg
arpl
mov
inc
popf
js
aaa
leave
scas
cwde
wrmsr
into
jge
ret
jle
dec
cmps
jbe
jbe
xchg
cmp
aas
mov
push
inc
add
dec
or
add
push
cli
adc
add
gs
aas
sbb
jo
xor
shr
popf
fwait
xchg
jmp
call
int3
sub
inc
fwait
(bad)
xor
add
cwde
jbe
(bad)
xor
(bad)
sbb
mov
or
sahf
mov
scas
xchg
ja
mov
retf
push
adc
fist
push
out
and
enter
sbb
add
clc
cdq
adc
push
cmc
std
mov
sub
or
mov
pop
iret
and
rol
mov
and
xor
mov
loop
sbb
push
mov
pusha
mov
fs
and
sub
fsub
xor
cmp
test
lock
mov
ja
inc
out
sub
cmp
xchg
adc
xor
pop
mov
shr
dec
xor
inc
lods
jmp
pusha
div
pop
and
or
fwait
movs
(bad)
sti
movs
adc
cdq
sub
sub
rcl
mov
cwde
push
aad
adc
jnp
inc
dec
sub
add
xchg
outs
cdq
xor
add
das
jne
hlt
nop
daa
xor
xchg
pop
push
inc
xor
adc
sub
push
jecxz
xor
mov
jle
mov
call
push
xchg
popf
xchg
xchg
and
dec
and
xor
add
dec
movs
push
stos
sub
mov
adc
mov
inc
in
push
(bad)
sahf
stc
jp
push
dec
xlat
scas
mov
jnp
xor
jb
or
(bad)
mov
shl
cmc
mov
sbb
jns
js
into
lahf
add
scas
rcl
pop
inc
call
imul
add
dec
hlt
in
sar
or
mov
sbb
aaa
push
xchg
pop
aad
ja
dec
mov
jge
mov
pop
inc
cli
das
pop
fwait
jne
or
cmps
scas
adc
lea
mov
mov
push
in
idiv
(bad)
cmps
or
rol
mov
adc
std
fcmovnb
mov
lds
mov
jne
movs
and
xor
add
pop
in
xchg
or
xchg
mov
xor
sbb
dec
cld
movs
mov
mov
jo
inc
fmul
test
pop
(bad)
loope
imul
dec
jecxz
cwde
xchg
stos
xchg
sub
push
aam
xor
xor
aad
push
imul
test
fldenv
shl
sti
shl
test
xor
add
icebp
js
add
push
(bad)
loopne
adc
mov
adc
loop
mov
inc
sub
sbb
and
cmp
mov
push
repnz
sbb
(bad)
ins
pop
mov
leave
and
aam
(bad)
cmp
jb
add
or
cld
aas
gs
pop
popa
repnz
jge
out
ja
jl
outs
out
inc
ins
sub
push
jecxz
inc
imul
sbb
dec
or
pop
rol
adc
xchg
jnp
(bad)
in
add
pushf
cmp
cmp
scas
in
test
xchg
dec
xor
mov
xor
cmp
jle
pop
jo
xchg
mov
mov
lock
mov
sub
mov
xchg
xor
xor
cmps
mov
inc
push
push
into
test
jle
fisub
repz
ficomp
jmp
mov
mov
test
in
ins
outs
push
add
out
adc
push
sub
lea
push
js
dec
mov
add
idiv
imul
xor
stc
movs
cmp
cs
lock
mov
inc
pop
cs
call
stos
inc
mov
inc
call
test
adc
ds
int
cmps
imul
out
mov
push
les
cmp
sub
cld
pop
inc
test
xchg
loop
add
repnz
sbb
in
or
or
xchg
inc
nop
add
or
loopne
and
sub
jl
mov
ins
dec
adc
lea
fisubr
test
add
aam
xor
dec
enter
fcmovne
mov
fs
aam
popa
push
test
xor
push
push
lods
cld
jmp
or
sbb
cs
dec
pop
xor
enter
repz
fldz
add
inc
ror
cmp
mov
xchg
push
std
jmp
mov
call
jne
loop
pop
lds
push
sub
add
mov
sub
xor
enter
add
sbb
in
jae
ins
push
test
push
cmp
mov
pop
scas
bound
loope
fprem1
mov
mul
or
mov
and
out
(bad)
dec
fld
and
dec
xchg
mov
xor
in
xchg
pop
rcl
or
xor
and
push
dec
mov
enter
je
add
or
popf
repnz
jecxz
aaa
mov
movs
xchg
cdq
hlt
mov
lahf
or
fidiv
mov
dec
cmps
xchg
push
push
neg
mov
push
inc
dec
sub
inc
vcvtsi2sd
add
push
add
mov
cmp
out
adc
xchg
xchg
jno
(bad)
cmc
(bad)
pusha
mov
mov
and
test
loopne
inc
push
stos
add
cmp
addr16
scas
out
inc
mov
in
stc
push
outs
outs
ins
nop
lea
pop
jnp
mov
inc
ds
imul
adc
mul
je
push
std
data16
xchg
test
popf
cs
cmp
sbb
push
fs
inc
inc
mov
lods
jb
xchg
add
jnp
shl
in
push
fmul
xchg
shl
cs
sbb
out
fs
dec
fmul
jo
mov
inc
and
dec
mov
out
mov
fdivp
stos
out
jmp
push
cmps
(bad)
ins
lea
jns
test
push
rcl
dec
loop
mov
loop
jno
pop
xchg
push
out
stos
push
ins
call
jno
and
xchg
packuswb
repz
mov
out
adc
or
push
jecxz
clc
add
fimul
mov
xlat
xor
das
jge
inc
mov
cmp
popa
test
fild
jmp
in
call
add
push
imul
imul
repnz
loope
cmp
ret
push
imul
add
fcmovu
xor
aaa
stos
aaa
push
jmp
retf
imul
mov
inc
out
iret
inc
outs
xchg
inc
push
cmp
lea
add
pop
imul
cmp
(bad)
mov
lea
outs
enter
mov
call
popa
add
mov
sub
int
jl
or
add
hlt
js
mov
popf
sahf
sbb
jnp
pop
sar
shr
push
bound
dec
in
enter
test
mov
dec
jbe
(bad)
in
adc
mov
dec
outs
fmul
xor
and
or
mov
cdq
mov
ins
std
inc
aas
mov
adc
mov
leave
inc
and
lods
clc
xchg
pop
or
push
and
xchg
fucomi
repnz
inc
fisubr
adc
mov
push
popa
cmp
rcr
call
retf
out
cmps
clc
das
test
jmp
leave
mov
sbb
sub
loop
out
push
enter
jle
mov
sub
add
dec
aam
xchg
inc
inc
imul
in
cmps
xlat
xor
and
outs
dec
xor
jl
mov
or
push
jb
pop
xor
sub
pop
aad
push
dec
pop
bound
xor
movs
rcl
sahf
pushf
fisub
adc
dec
out
popa
mov
pop
lea
jge
fs
not
mov
test
adc
out
dec
sub
push
mul
xor
pop
dec
into
idiv
sbb
xchg
push
icebp
cmp
lods
dec
pop
sbb
repz
movs
ja
inc
pop
(bad)
push
adc
dec
cs
jmp
mov
shl
cs
jg
mov
pop
dec
imul
adc
fs
dec
(bad)
adc
push
add
push
xor
or
(bad)
mul
(bad)
in
scas
mov
mov
iret
sbb
mov
in
jmp
lahf
inc
test
dec
mov
sub
test
test
outs
cs
inc
add
push
and
adc
push
fistp
add
add
pop
xor
xchg
inc
shl
jg
mov
fnstenv
dec
cmps
mov
into
dec
xor
sbb
aam
pop
icebp
(bad)
lods
jne
dec
(bad)
or
xchg
out
dec
push
push
adc
sbb
mov
mov
inc
xor
sub
fnstenv
(bad)
jno
es
or
and
popf
jmp
cmps
pop
inc
cmps
stc
adc
in
test
sbb
mov
cld
loop
push
js
xchg
fldenv
dec
xor
call
movs
dec
adc
ss
lahf
jle
pop
dec
or
mul
les
sahf
imul
push
shr
push
mov
dec
inc
into
dec
push
inc
hlt
mov
sbb
pop
inc
aas
repnz
outs
sub
nop
ret
sub
std
cmp
je
loop
push
or
jbe
cld
lahf
sub
dec
scas
imul
jp
add
jo
xchg
stos
xchg
sbb
pop
lea
pop
fidivr
mov
mov
sub
std
push
fwait
dec
cmps
ret
test
mov
xor
mov
loop
pop
add
cld
adc
fs
not
mov
cmp
jp
not
sub
lock
add
push
mov
fimul
jmp
fmul
or
aaa
cmps
pop
shl
inc
sti
adc
bound
or
ficomp
mov
daa
(bad)
test
cmp
loopne
loope
imul
and
mov
inc
movs
mov
jo
out
jne
outs
add
push
xor
stos
mov
push
clc
mov
jle
or
shl
mov
outs
mov
jmp
lds
outs
pusha
mov
xchg
or
outs
rcl
(bad)
dec
ss
pop
cdq
sbb
xlat
je
push
out
inc
sub
and
imul
sbb
pop
scas
fwait
iret
push
xchg
add
and
xchg
cmps
icebp
mov
dec
dec
into
push
add
mov
in
in
add
xor
loopne
cmp
dec
int
xchg
inc
imul
mov
mov
jo
push
out
push
hlt
fnstsw
mov
adc
mov
xor
xchg
ret
gs
sub
xchg
in
popf
adc
imul
aam
into
cs
(bad)
ja
loopne
push
cmps
cmps
sub
ret
push
jle
cmp
xchg
mov
out
sbb
inc
and
jae
bound
hlt
fidivr
cwde
ret
movs
mov
mov
ins
mov
ret
jp
out
push
pushf
xchg
jg
xchg
mov
xor
retf
dec
sbb
lahf
jl
mov
nop
sub
je
and
ss
scas
jmp
stos
push
jo
arpl
xor
jno
dec
jmp
cmp
das
outs
mov
bound
enter
pop
ins
mov
xchg
fwait
nop
xchg
pop
(bad)
add
mov
jae
adc
add
out
mov
mov
xchg
jmp
push
aam
mov
mov
(bad)
test
cmp
ror
or
inc
jae
rcr
mov
rcl
jmp
imul
adc
cwde
jae
dec
adc
mov
or
mul
fnstsw
add
mov
mov
call
fdivr
es
pop
js
jnp
sti
xchg
neg
jmp
dec
aad
xor
dec
push
and
jmp
mov
and
dec
test
and
ret
pop
in
loop
cmps
mov
int
add
cmp
stos
xor
add
jno
pop
in
in
mov
rcr
shr
fild
loopne
mov
je
mov
retf
mov
push
cli
mov
dec
pop
push
out
xor
ret
push
cli
fldlg2
jo
push
add
jno
loop
sti
jnp
into
or
js
sbb
jmp
je
dec
icebp
ds
mov
jmp
fstp
fild
es
arpl
popf
xchg
sbb
ins
mov
test
xchg
adc
jl
inc
sub
out
adc
sub
iret
mov
and
call
and
ret
sub
xor
push
enter
stc
xor
push
sub
mov
iret
jecxz
pop
pop
lock
stos
inc
pop
fist
push
pop
push
retf
xchg
arpl
ror
jmp
jbe
ins
cmc
out
mov
test
push
aam
iret
(bad)
mov
xor
pop
add
and
jg
mov
(bad)
pop
jmp
lds
aas
lods
(bad)
pop
test
out
out
retf
int3
test
pop
xchg
push
lea
mov
daa
mov
mov
ins
test
sub
dec
sub
retf
loope
inc
call
arpl
push
ins
adc
out
lods
lods
dec
stos
movs
fcom
sahf
test
pop
sahf
cmps
aas
loope
addr16
int
call
mov
mov
test
dec
mov
push
xchg
(bad)
cmp
and
xor
push
cld
inc
jo
imul
mov
repnz
cmps
cwde
xor
jns
nop
call
test
xchg
xchg
xor
xchg
push
mov
xchg
and
call
adc
or
mov
xchg
das
iret
and
mov
leave
inc
cmc
shl
jae
in
je
out
add
cdq
das
es
adc
push
div
test
lds
push
sub
xor
pop
xchg
cld
or
push
mov
xchg
xchg
and
ss
or
repnz
lahf
jmp
out
and
mov
lods
sar
dec
call
jne
test
jmp
mov
mov
cmc
xchg
stc
repnz
cdq
mov
cmp
push
(bad)
pushf
mov
sbb
sub
ja
stc
addr16
sbb
adc
and
int3
dec
adc
int3
push
xchg
dec
je
ds
inc
jg
xchg
push
mov
jnp
add
pop
(bad)
xchg
mov
loope
push
inc
and
push
and
lock
jns
add
push
push
in
or
mov
aas
rcl
je
mov
mov
mov
mov
(bad)
nop
mov
das
neg
aaa
xor
cmp
int3
ficom
scas
dec
sti
lock
mov
cmps
in
stos
sub
or
out
mov
push
pop
jg
and
cli
and
xchg
push
sar
(bad)
nop
lock
inc
cmp
mov
jae
adc
mov
pop
cmps
fbstp
and
pop
sahf
add
out
dec
push
sbb
in
jno
leave
push
mov
mov
retf
mov
or
and
iret
push
aaa
and
je
inc
push
leave
cmp
in
xor
add
mov
sbb
mov
and
test
sub
or
push
ss
stos
mov
out
rcl
pop
sub
cmc
repz
jge
dec
cmps
outs
cmp
imul
jae
call
rcr
dec
dec
xchg
push
mov
mov
test
out
aam
popa
mov
mov
cmp
push
push
push
push
repnz
rol
sbb
and
repnz
mov
mov
out
scas
add
in
jl
push
addr16
int3
fisub
lahf
pop
in
jae
lea
sub
sti
xchg
mov
retf
xchg
(bad)
fisttp
loopne
jmp
out
setl
mov
data16
in
sub
or
cmp
inc
push
jecxz
cwde
inc
jbe
out
int3
shr
xchg
adc
fxch
cwde
das
loope
stc
inc
jge
stos
mov
push
and
mov
(bad)
fmul
adc
cmp
popa
mov
imul
push
xchg
adc
ja
inc
xchg
and
xchg
repnz
sbb
adc
jbe
(bad)
les
leave
std
fs
and
add
retf
int3
mov
dec
push
jmp
inc
std
call
call
pop
push
dec
inc
push
in
mov
push
add
jbe
xor
ret
rol
jb
repnz
rol
fmul
cmp
sbb
and
xchg
dec
loope
adc
je
in
out
loopne
xchg
pushf
mov
pop
xchg
or
sbb
fcomp
stos
cmp
add
sub
ret
retf
adc
leave
(bad)
in
pop
sub
jecxz
xor
inc
and
bound
push
sahf
cmp
cdq
retf
push
cmps
js
daa
(bad)
js
mov
and
inc
cmp
xor
cmps
xor
jl
mov
mov
outs
sets
push
mov
mov
(bad)
sahf
adc
movs
in
pop
dec
cmp
mov
and
dec
xchg
cmp
mov
push
mov
pop
jmp
xor
xchg
adc
cdq
fwait
pusha
enter
imul
xchg
(bad)
loope
cmp
jmp
jl
mov
xchg
pop
jg
xchg
icebp
popa
mov
outs
push
icebp
iret
shl
ror
dec
xchg
sub
inc
cwde
pushf
mov
push
movs
xchg
mov
sbb
mov
icebp
pop
push
or
inc
mov
mov
cdq
fidivr
nop
fimul
call
scas
int3
fs
xchg
pop
ret
mov
test
inc
jecxz
out
jno
push
ret
mov
sar
adc
(bad)
adc
add
or
cli
ret
lods
int3
pop
sub
inc
(bad)
std
xor
sub
shl
pop
iret
mov
mov
sbb
inc
sti
sub
pop
mov
jp
aad
jne
repnz
lahf
pushf
data16
pushf
bound
into
mov
ins
movs
and
dec
call
shr
dec
int
sbb
mov
(bad)
lea
popf
mov
das
xchg
add
sbb
adc
mov
jnp
cmp
pop
les
mov
pop
in
int
out
cmp
pop
imul
pop
cmp
js
js
rcl
cmp
sub
xlat
mov
test
test
jae
sbb
and
popf
pop
(bad)
and
lds
mov
paddsb
jb
popa
mov
mov
loop
sbb
add
rol
dec
mov
sbb
test
pop
jl
data16
pop
ins
jnp
fnsave
lea
pop
push
out
cmc
in
push
adc
push
outs
mov
add
ror
rol
movs
inc
and
jmp
or
lds
clc
sar
mov
ret
dec
call
sbb
das
dec
sahf
or
stos
imul
pop
xchg
imul
(bad)
sahf
and
movs
pop
sbb
cld
cld
outs
xor
shl
or
inc
adc
push
push
dec
sub
jnp
popa
div
mov
jmp
mov
mov
imul
push
add
imul
fiadd
mov
in
push
mov
xchg
mov
cmp
ins
fisttp
int
push
inc
mov
inc
mov
imul
inc
sbb
ss
push
(bad)
loop
jns
popa
es
cmp
push
inc
add
rcl
int
add
mov
aas
cli
shl
sbb
cmc
cdq
fidivr
add
ret
cs
daa
imul
(bad)
scas
and
push
and
mov
inc
clc
xchg
sar
jb
ror
mov
xchg
ins
and
or
pop
xchg
mov
xor
mov
fmul
ret
or
ret
(bad)
jno
sbb
cmp
xchg
xchg
mov
mov
push
ret
adc
stos
(bad)
push
sub
enter
aaa
jg
ins
test
adc
retf
xchg
sbb
stos
and
mov
jle
or
cdq
es
xchg
fidiv
xor
dec
inc
jmp
dec
pop
lds
test
cdq
mov
scas
xchg
aaa
pop
out
inc
pushf
aas
add
push
cmp
test
les
(bad)
cdq
mov
mov
arpl
aam
and
mov
aad
xchg
push
neg
inc
jmp
cmp
push
adc
test
and
shl
mov
inc
pop
ins
outs
jb
xor
js
loope
daa
leave
push
call
sbb
or
mov
mov
stc
jecxz
out
inc
test
pop
addr16
inc
push
loope
test
sub
gs
fidivr
lock
cmp
movsx
inc
add
cs
test
(bad)
std
ret
pop
xchg
pop
std
aaa
dec
ins
push
and
xchg
or
mov
movs
es
(bad)
mov
and
sbb
jmp
xchg
mov
mov
push
sub
and
mov
sub
mov
sar
lahf
je
cmp
pop
mov
icebp
(bad)
xor
pop
push
inc
jno
pop
add
mov
cdq
sub
inc
push
add
js
scas
jo
dec
icebp
rcr
(bad)
sbb
push
inc
pop
mov
out
jle
repnz
movs
push
rol
xchg
adc
stos
hlt
add
sub
sbb
lods
addr16
hlt
ret
aad
adc
pop
xchg
mov
and
fcmovnu
push
jnp
xlat
mov
out
pop
jmp
sbb
sub
fwait
call
inc
in
daa
rcr
add
in
fwait
in
pop
add
jmp
xlat
outs
lea
xor
bound
mov
sbb
jno
push
call
test
setb
and
mov
test
mov
fsubrp
cmp
dec
sbb
ror
lea
imul
and
popf
xor
pop
jmp
and
mov
push
andnps
push
cs
cmp
pusha
add
in
out
fild
sub
mov
repnz
mov
adc
retf
or
jl
mov
cli
mov
add
jnp
xchg
sbb
ds
cmp
fst
and
aad
sti
(bad)
(bad)
mov
addr16
stos
add
push
scas
(bad)
sbb
mov
lods
cmp
mov
xor
xor
adc
dec
and
mov
or
das
cmp
mov
loope
adc
cmps
into
test
adc
add
mov
xchg
test
fs
pop
mov
cmc
frstor
add
test
jp
cmp
pop
mov
jno
xchg
lods
mov
mov
mov
add
mov
sahf
and
das
add
add
sub
arpl
and
sub
loop
sub
jns
arpl
pop
and
cmps
and
ss
lahf
push
icebp
cmp
push
jae
dec
hlt
jnp
data16
test
and
sbb
or
dec
push
push
xor
or
and
jno
pop
push
scas
fisub
dec
jmp
pop
call
(bad)
ins
mov
mov
fcmovnu
test
ror
pusha
sti
xchg
cmp
lds
popa
imul
test
xor
mov
mov
add
sub
outs
bndldx
pop
fisttp
repz
push
leave
and
mov
sti
into
sbb
in
mov
inc
sbb
add
xor
stos
mov
inc
dec
pop
xchg
inc
xchg
push
mov
xchg
std
pop
xchg
jno
adc
inc
enter
inc
test
mov
xchg
mov
and
xchg
mov
jge
pusha
pop
js
jmp
push
cmp
je
push
rcl
jo
mov
arpl
xchg
cwde
sbb
aad
pop
cmp
push
add
clc
jne
add
rcr
xchg
jnp
lods
mov
jbe
add
xor
push
sahf
and
or
int3
adc
adc
addr16
mov
add
ficom
xlat
popf
sbb
pop
pop
jae
cmps
mov
cmp
mov
inc
pslld
cmp
cmc
pop
push
jo
cmp
cmp
cmp
enter
out
call
add
inc
lahf
dec
push
sbb
dec
adc
push
push
pop
push
ja
in
mov
iret
inc
mov
inc
jo
ret
jbe
cmp
dec
xor
hlt
inc
mov
cmp
fcomp
popa
mov
test
pop
aad
test
ret
repnz
lods
jp
jmp
pop
je
xlat
aas
outs
mov
lea
add
ins
pop
push
cmps
jg
aad
ror
sub
mov
inc
xchg
inc
pushf
sbb
cmp
xor
scas
pop
push
jg
lahf
dec
inc
gs
rol
dec
(bad)
pop
mov
pop
cmps
sub
daa
jle
sahf
rep
push
jnp
pop
test
dec
push
pop
push
sub
addr16
sbb
hlt
push
scas
dec
daa
iret
int3
xor
ja
sub
sbb
in
jmp
xor
jp
fsubr
dec
cmp
xchg
clc
xor
jmp
mov
inc
retf
and
and
mov
aas
add
addr16
inc
fsub
cmp
sbb
cs
push
xor
arpl
leave
xor
or
inc
push
movs
and
call
cwde
xor
into
push
dec
in
(bad)
mul
adc
sub
enter
in
fs
jp
adc
adc
xor
test
sub
adc
out
fimul
fcmovbe
jns
leave
jae
sub
movs
push
push
outs
dec
sar
cmc
xlat
xchg
xlat
or
push
or
push
into
mov
movs
mov
pusha
push
jnp
push
call
sahf
mov
add
ret
xchg
and
mov
cmp
cli
(bad)
popf
call
loope
lea
jl
popf
inc
aad
mov
cmp
or
icebp
push
fs
lahf
jg
lock
stc
mov
pop
add
rcr
into
and
xchg
xchg
xchg
jg
mov
ds
mov
mov
lea
xchg
in
push
mov
cmp
movs
xchg
cmp
xor
push
daa
sbb
sbb
sub
leave
push
nop
sbb
xchg
mov
pop
adc
xlat
iret
xchg
xchg
or
cmp
sbb
adc
fisttp
sbb
inc
jle
mov
icebp
cmp
(bad)
mov
mov
cld
adc
cmp
in
popa
mov
xor
fidivr
inc
jp
sbb
into
dec
sub
mov
fst
inc
rol
idiv
adc
xor
jge
inc
std
mov
cmp
adc
je
rcr
and
loop
retf
pcmpeqw
xor
xchg
sub
mov
pop
scas
inc
mov
jle
(bad)
jno
inc
(bad)
rcr
pop
ja
aaa
push
adc
dec
push
rcr
sub
dec
aam
in
(bad)
cwde
sahf
adc
or
ins
xor
xchg
sub
sub
and
or
nop
mov
mov
xchg
adc
dec
jmp
sub
add
mov
jle
sar
dec
pop
enter
imul
int
sbb
lods
outs
aam
cmc
adc
inc
xor
in
dec
lds
mov
in
cmc
mov
mov
dec
inc
xchg
dec
or
call
push
js
mov
dec
inc
dec
out
aas
sbb
mov
enter
mov
cwde
jg
cld
sub
movs
je
in
sub
(bad)
bswap
dec
fsubr
rol
hlt
(bad)
(bad)
cmp
into
add
sbb
iret
cmps
stc
jge
fst
dec
sub
mov
inc
shr
or
mov
aas
xchg
inc
push
jns
pop
add
mov
stc
loop
retf
adc
jmp
aas
(bad)
jecxz
enter
(bad)
xchg
jmp
push
add
aas
push
jmp
(bad)
pop
scas
(bad)
add
mov
push
call
stos
add
jb
pushf
(bad)
push
ins
adc
ror
and
push
pop
mov
inc
sar
push
shl
jne
das
movs
xchg
and
sbb
mov
push
dec
mov
pop
stos
inc
test
retf
cmc
cmp
xchg
pop
(bad)
pushf
cld
adc
sub
push
outs
jl
push
mov
movs
inc
ret
mov
sbb
cmp
test
rcr
xchg
mov
shl
xchg
inc
lahf
gs
lock
enter
dec
adc
inc
sti
loope
pop
or
pop
fild
test
and
cmp
cmps
cli
mov
retf
out
sbb
pop
ja
addr16
loop
jmp
push
test
fucomip
xor
ja
mov
hlt
mov
shr
mov
cli
daa
xor
xlat
arpl
sbb
sbb
jl
mov
ficomp
addr16
jp
pop
imul
int3
ds
imul
sbb
cs
mov
inc
lahf
dec
mov
mov
adc
jmp
mov
loopne
out
neg
mov
adc
jae
(bad)
inc
adc
movs
inc
push
mov
add
ins
pop
clc
xlat
pop
adc
mov
sub
or
cmp
lods
jmp
clc
scas
mov
retf
int3
stos
mov
and
bound
pop
adc
add
sbb
inc
fdiv
les
aaa
loopne
and
ins
xor
ins
imul
add
dec
into
pop
movs
push
les
jae
cmps
sub
jecxz
fcomip
cmp
lea
clc
sub
loop
sub
dec
pop
or
xor
sub
ffree
in
lea
mov
test
sub
not
mov
inc
test
int
mov
mov
dec
add
xor
xchg
sar
lds
aad
push
sbb
mov
xchg
in
push
js
(bad)
cli
and
cmp
repz
mov
mov
pop
jmp
int
mov
pop
mov
xor
cwde
mov
call
arpl
pop
push
rol
test
lock
loopne
loope
popf
add
mov
pop
repz
dec
ins
jns
loope
out
jl
dec
pop
xor
inc
jmp
cmps
mov
imul
jae
sbb
jne
inc
das
fwait
and
sar
push
sbb
sub
test
fisub
mov
mov
sub
mov
jge
sub
clc
lds
lahf
shl
cmp
jns
test
xor
adc
int3
adc
pop
int
pop
add
sbb
rcr
dec
out
vmwrite
push
stc
je
cvtdq2ps
jns
mov
out
pop
dec
mov
loopne
cmp
xor
xor
push
pop
push
add
or
mov
push
inc
sbb
ss
mov
pop
test
and
sub
and
cmp
add
fbstp
xlat
cdq
cli
mov
stc
imul
out
loop
mov
inc
dec
int
and
push
jg
out
and
cmp
add
sub
addr16
xchg
aad
sbb
push
add
xor
inc
xlat
pop
scas
sbb
mov
std
scas
add
out
loopne
mov
or
sub
or
push
sbb
ret
or
retf
iret
inc
rcr
cli
hlt
jbe
pop
ins
cmps
ret
jbe
sub
fidiv
in
adc
mov
retf
mov
inc
sahf
xlat
xchg
mov
pop
cmp
sti
frstor
fidivr
pop
mov
test
ins
jbe
(bad)
lods
mov
mov
fiadd
jbe
cld
sub
push
mov
jnp
in
xchg
in
imul
push
xor
stos
sahf
or
inc
push
sbb
sub
dec
push
mov
adc
mov
sbb
test
pop
adc
out
test
dec
inc
dec
int
mov
ror
movs
sub
jmp
push
int
aad
pop
pusha
add
inc
loope
in
mov
mov
adc
mov
pop
mov
xchg
xchg
repnz
mov
ja
into
pop
jbe
adc
movs
icebp
int3
xchg
das
sub
mov
es
bound
(bad)
xchg
sub
fist
lods
loope
pusha
inc
mov
cli
mov
inc
cmp
movs
scas
mov
pop
push
jnp
cmp
into
test
test
ret
dec
cmps
and
or
and
imul
xchg
ss
add
enter
push
sub
popa
pop
pusha
jnp
out
stc
fidiv
xchg
adc
lock
pusha
mov
jge
inc
fcomp
(bad)
bound
hlt
jle
jno
nop
cmp
pop
jmp
jl
jle
push
call
sbb
sbb
ins
enter
sub
lods
adc
ds
retf
mov
jae
and
pop
das
push
(bad)
stc
jmp
aaa
pop
mov
and
arpl
and
fwait
sub
rcr
ins
clc
outs
out
ror
push
scas
dec
fwait
pop
aad
pop
push
push
es
fnsave
dec
lea
nop
inc
in
test
xchg
push
movs
outs
pop
enter
jns
fstp
std
dec
hlt
lea
daa
movs
in
inc
fmul
outs
test
xchg
leave
sbb
les
or
dec
jo
aad
push
add
test
loope
arpl
mul
fabs
mov
leave
xor
(bad)
arpl
ins
and
xchg
push
ficom
mov
and
ja
out
je
stos
int3
push
ds
mov
jp
(bad)
cmp
hlt
pop
into
and
add
aam
push
clc
adc
stc
cli
inc
es
test
pop
xor
jle
xchg
adc
push
xchg
cmc
(bad)
jmp
lods
push
mov
shl
stc
and
adc
icebp
push
push
xlat
pop
test
and
inc
stos
in
sub
repz
jae
shl
sub
sub
repnz
cmp
pushf
pop
add
mov
imul
inc
adc
frstor
leave
mov
push
xor
(bad)
add
ret
sahf
or
out
dec
(bad)
es
stos
cmp
mov
mov
fyl2xp1
cwde
pop
push
mov
and
call
fcomp
and
inc
fcmovbe
pop
pushf
mov
ret
or
cdq
(bad)
jge
mov
(bad)
mov
pop
test
lods
ja
inc
push
inc
out
popf
aad
pop
cld
and
stc
lock
push
inc
stc
ja
cdq
adc
mov
retf
test
pop
dec
outs
sub
sub
sbb
mov
jne
ret
dec
je
test
xor
push
xchg
repnz
movs
xor
(bad)
push
mov
mov
xor
mov
xor
xor
mov
mov
xchg
add
mov
aam
in
shr
dec
maskmovq
idiv
popa
addr16
jge
mov
pop
pop
pop
cwde
add
aad
rcl
leave
stc
xor
xchg
jle
pop
sub
push
ja
and
adc
jns
jmp
and
mov
mov
repz
pop
mov
loope
add
aam
rol
cmp
sub
xor
dec
dec
push
jbe
inc
pop
jnp
inc
or
push
jg
pop
mov
xor
fst
add
add
dec
pop
aad
imul
jmp
sahf
sbb
or
aas
ins
cmp
and
(bad)
adc
movs
push
add
inc
push
mov
lods
inc
scas
lods
add
xchg
outs
test
test
test
push
daa
or
or
pop
stos
(bad)
hlt
xor
lea
fisub
adc
adc
mov
jns
mov
sbb
ins
push
mov
mov
dec
popf
cmps
nop
cwde
call
clc
mov
xchg
popf
cmc
or
jbe
outs
cmp
arpl
cmps
or
jno
test
nop
adc
rcl
pop
xchg
push
ja
mov
or
test
shr
repz
retf
sar
call
mov
xchg
in
dec
jbe
ss
add
push
daa
arpl
jmp
pusha
aas
jmp
lds
xchg
add
cdq
das
mov
mov
push
data16
dec
enter
xchg
mov
retf
push
popf
and
lods
popa
fcom
repnz
out
jp
jp
retf
mov
test
cld
pop
pop
mov
fwait
xchg
cmps
imul
iret
jnp
fnstsw
push
inc
xchg
stos
fwait
stos
xchg
ror
push
jae
fcmovb
or
sub
sar
(bad)
xor
sub
(bad)
in
ja
push
adc
mov
xor
dec
adc
stos
int
jno
shl
fdiv
mov
mov
cmp
dec
and
ret
jo
mov
jne
repz
mov
fs
sar
add
cwde
add
mov
je
in
loop
and
mov
ror
test
pop
dec
cmp
inc
push
jno
fdivr
gs
idiv
mov
inc
mov
or
in
or
mov
aam
daa
call
inc
retf
ror
push
(bad)
mov
scas
out
lods
jae
pop
push
ror
mov
sbb
sahf
(bad)
mov
dec
lock
fs
outs
adc
and
jge
sbb
add
loop
mov
sbb
jmp
adc
mov
dec
or
rcr
pop
xchg
mov
and
inc
and
out
in
shl
adc
loope
ss
xchg
sbb
jns
cmp
pop
test
xor
push
jmp
ins
lea
movs
add
xchg
inc
add
cwde
and
into
dec
mov
(bad)
mov
cmps
hlt
adc
cmp
ja
cld
add
lds
ror
outs
sbb
mov
scas
and
sub
adc
ins
and
jmp
or
push
cmp
add
imul
pushf
cld
or
dec
add
lods
movs
ret
pop
aaa
ret
xchg
retf
mov
pop
sbb
mov
mov
add
adc
into
scas
arpl
mov
fstp
add
jmp
pusha
movs
(bad)
loop
sahf
into
jb
pop
movs
mov
jg
or
arpl
fisubr
repnz
out
jp
or
adc
push
add
in
lock
push
xor
mov
pop
mov
iret
xchg
pop
mov
popa
and
push
clc
and
add
data16
fcomp
iret
adc
add
iret
mov
outs
sti
call
adc
mov
mov
add
test
cmp
xchg
pop
sub
data16
cmp
in
xor
popf
out
retf
les
mov
add
ss
test
aam
shr
mov
aam
pop
cmp
scas
mov
in
sub
push
push
enter
dec
retf
mov
jo
sahf
ins
jbe
add
stc
(bad)
push
xchg
dec
inc
or
pushf
mov
sub
pop
add
pop
cmp
mov
mov
sub
sub
push
inc
out
retf
mov
mov
or
mov
xchg
in
hlt
scas
cs
(bad)
and
lods
retfw
pop
into
iret
repnz
imul
xchg
jnp
and
mov
(bad)
sub
mov
imul
push
mov
arpl
dec
add
out
call
or
mov
add
xchg
xchg
lahf
xchg
call
cmps
xchg
movs
ret
mov
fadd
iret
pop
lock
push
push
push
shl
out
push
mov
push
loop
lods
or
ret
pop
jecxz
mov
or
test
xchg
out
nop
loop
xchg
or
adc
gs
outs
aaa
les
aaa
cli
mov
adc
aas
(bad)
aad
sbb
add
xlat
stos
ret
(bad)
dec
inc
cdq
std
icebp
loop
xchg
adc
sbb
out
inc
push
jb
mov
ss
xchg
xchg
cmp
mov
jge
mov
dec
out
and
inc
cmp
pop
pop
repz
loopne
jmp
dec
fisttp
(bad)
push
ss
outs
jmp
inc
sbb
outs
sub
push
or
inc
inc
mov
sbb
inc
ins
and
push
das
retf
and
pop
or
in
mov
js
js
cdq
jl
or
xchg
pop
mov
cmp
mov
add
jl
xchg
jmp
inc
mov
cli
pop
push
jp
aam
xor
sbb
and
(bad)
sbb
jle
cli
jo
add
push
jl
sbb
inc
push
push
xor
sub
mov
or
ja
or
mov
sbb
rol
pop
mov
dec
mov
sub
push
push
movs
lds
mov
fadd
jl
pushf
out
mov
loope
push
xchg
xchg
cwde
iret
aaa
int
ja
clc
mov
jmp
add
mov
add
add
repz
sub
cmp
and
jecxz
xor
lods
cmps
dec
into
jle
jne
aad
and
hlt
push
loopne
mov
in
ret
inc
mov
push
push
es
sbb
pop
fwait
sbb
or
stos
sub
mov
pusha
jg
mov
retf
pusha
fs
addr16
je
outs
pop
adc
jecxz
mov
(bad)
pop
(bad)
out
adc
xlat
cdq
ret
and
adc
mov
and
push
pop
mov
mov
adc
push
arpl
push
adc
stos
lea
sbb
mov
jmp
fdivr
mov
and
mov
xor
rcl
cmp
xor
bnd
and
mov
hlt
ja
outs
clc
aam
cmp
retf
jnp
add
shl
fs
pop
outs
sub
test
sbb
(bad)
inc
cmp
stos
lods
int
fs
sbb
mov
ja
fild
jbe
xchg
mov
push
cwde
retf
(bad)
push
fwait
(bad)
xchg
xor
mov
scas
inc
pop
push
loop
jmp
pop
and
enter
std
cmp
test
imul
(bad)
lsl
clc
popa
jo
xchg
repnz
int
lds
pop
or
dec
inc
mov
push
test
loop
sub
adc
mov
mov
mov
adc
lahf
inc
push
ret
mov
inc
mov
ja
icebp
retf
sbb
retf
stos
pop
cmp
mov
sbb
cmp
mov
lahf
call
data16
mov
nop
mov
jmp
ja
add
call
test
jle
loopne
lds
rol
js
adc
shl
pop
enter
mov
xor
or
mov
mul
fldenv
sbb
call
retf
lea
sbb
push
cmp
addr16
shr
ds
xor
or
mov
dec
dec
(bad)
retf
jp
aad
jle
mov
retf
jmp
pop
icebp
hlt
mov
aas
or
adc
div
xor
mov
ret
xchg
and
jmp
push
jmp
iret
cmp
bound
(bad)
mov
cld
arpl
cmp
shl
mov
shl
lea
out
jnp
add
adc
and
xchg
sub
jne
cmp
cmp
push
pop
retf
push
sbb
and
enter
rol
pop
adc
sbb
add
jp
loope
and
lods
mov
sub
mov
enter
es
and
fisubr
pop
xchg
popfw
fs
out
and
and
cmps
lds
pop
push
dec
xchg
fld
fs
dec
jmp
icebp
out
push
ds
jne
inc
repnz
enter
pop
jmp
scas
retf
cmp
xor
or
loop
add
(bad)
mov
mov
jne
daa
xchg
out
mov
xor
push
pop
push
push
jp
push
and
ja
sbb
mov
mov
cld
mov
in
(bad)
cmc
and
push
mov
test
add
xlat
dec
mov
cmp
or
jge
xchg
loop
hlt
add
pop
push
inc
jo
int
stos
retf
loope
call
shl
add
je
sub
pop
adc
test
arpl
mov
mov
cmps
or
mov
mov
es
les
inc
(bad)
jno
inc
mov
jge
jg
(bad)
jmp
adc
daa
lods
mov
pop
movs
xchg
and
iret
pusha
fdiv
inc
pusha
(bad)
mov
xchg
(bad)
mov
dec
mov
repnz
aam
jb
cmp
das
in
mov
call
ins
add
push
jo
and
dec
jae
lods
mul
stos
retf
aad
mov
add
sbb
mov
mov
ja
jp
push
out
mov
xlat
in
into
ds
lea
jo
add
xor
sbb
cmp
mov
pop
(bad)
push
push
cmps
arpl
shl
into
push
dec
fstp
into
or
inc
out
loop
sbb
(bad)
std
mov
fsubr
lock
inc
std
stos
sbb
bound
jo
rol
fld
clc
push
adc
(bad)
clc
push
dec
data16
test
lock
(bad)
pop
pop
leave
and
add
mov
inc
dec
lock
rcl
fbld
xor
movs
add
push
pop
test
fwait
mov
jecxz
jno
sbb
movs
in
push
xchg
les
jmp
ja
or
stos
mov
inc
adc
addr16
(bad)
pop
popf
dec
mov
lods
dec
sti
dec
jo
dec
stos
stos
sub
jle
mov
jl
add
in
scas
rol
out
movntps
frstor
cmps
aad
ins
or
mov
sub
pop
gs
xchg
ins
jbe
and
ja
push
test
mov
inc
or
inc
mov
inc
sbb
in
and
bound
jae
mov
push
mov
out
(bad)
xacquire
xor
mov
stos
xchg
jns
dec
adc
push
out
xor
les
fstp
in
mov
xchg
mov
xchg
jmp
xchg
mov
iret
xor
scas
outs
jmp
inc
scas
add
xor
cld
jp
xor
(bad)
retf
sub
(bad)
jmp
aaa
mov
das
fdivr
or
jb
jno
(bad)
inc
iret
cmp
inc
mov
cmp
cwde
sahf
cmps
stc
xchg
mov
call
into
sbb
inc
mov
jne
sub
stos
shr
test
inc
cmp
jmp
cmps
xchg
sbb
test
mov
cmc
pop
jl
retf
pop
popf
xor
mov
int
lods
pop
push
adc
sbb
mov
sbb
rol
fmul
daa
xor
std
hlt
data16
fadd
and
xor
in
das
fwait
adc
daa
mov
jg
xchg
popa
retf
mov
scas
dec
xchg
mov
lock
cmp
movs
jae
fld
popa
mov
shl
(bad)
icebp
movs
gs
test
or
and
mov
adc
pop
idiv
jecxz
pop
or
out
pop
jmp
pop
pop
mov
nop
mov
cmp
sbb
cmp
push
cmovge
in
xor
pop
clc
adc
xor
jno
ss
pop
mov
jge
fdivr
lahf
xchg
pop
in
jg
sub
test
cmp
sti
test
cmp
(bad)
mov
inc
cmp
retf
cmc
clc
rcl
ud2
ret
sub
loopne
adc
retf
cmps
in
sub
in
dec
push
inc
and
xor
mov
cmp
add
mov
jmp
pop
fld
dec
push
ror
cdq
ror
scas
mov
mov
mov
jne
xchg
std
ja
sub
das
ja
not
retf
out
fs
sti
gs
inc
push
jb
cwde
push
xlat
adc
je
xor
push
mov
rcl
sbb
leave
sub
jbe
push
ins
pop
xor
or
lods
mov
mov
into
dec
movs
mov
or
(bad)
in
adc
cmps
add
add
ss
mov
int3
mov
or
jmp
push
push
fidiv
arpl
mov
repnz
inc
push
xlat
not
aas
xchg
add
les
retf
fisubr
xchg
mov
adc
leave
int3
rsqrtps
mov
div
pop
pop
lods
xchg
repz
pop
mov
jmp
daa
sub
xchg
lods
leave
push
idiv
mov
cmp
pop
aam
icebp
aam
(bad)
cld
inc
retf
test
inc
hlt
jmp
xor
lahf
je
xor
sub
cmps
outs
xchg
outs
dec
xor
dec
xor
and
js
das
xchg
sub
cdq
mul
mov
daa
arpl
test
fwait
cmp
sub
pop
adc
movs
push
adc
push
fs
pop
imul
push
push
aaa
push
add
ss
(bad)
mov
js
or
xor
test
rcr
or
loop
rcl
mov
mov
test
dec
jne
test
mov
mov
xor
popf
inc
je
xchg
mov
clc
mov
jg
or
out
ds
xchg
dec
or
jo
or
out
jbe
cmp
mov
outs
adc
pop
pop
scas
sbb
mov
mov
sub
xor
out
mov
dec
icebp
ret
leave
jl
push
out
sbb
outs
neg
in
add
cmp
(bad)
sbb
out
or
mov
sti
push
out
jb
sti
jle
in
sbb
retf
(bad)
mov
pop
fsub
fstp
movs
mov
out
imul
mov
sbb
js
mov
pop
pushf
adc
fmulp
cli
push
mov
pop
pop
(bad)
bound
(bad)
mov
pop
cdq
icebp
pusha
rcr
mov
ret
out
mov
xor
aas
add
add
shl
cld
retf
cmp
xchg
lods
gs
out
jp
mov
pop
add
sahf
dec
adc
mov
dec
dec
mov
sbb
xor
jle
dec
fiadd
mov
xchg
inc
out
cli
(bad)
and
addr16
popa
popf
mov
das
mov
and
jp
loop
dec
ja
sbb
pop
mov
jae
loop
push
sbb
popa
stc
call
(bad)
xor
jg
shr
pop
and
push
stos
(bad)
push
xchg
bound
out
icebp
cmps
push
loope
fsub
mov
out
sub
sahf
mov
aas
adc
push
sub
sub
stc
stos
xor
rcl
int
outs
add
push
or
mov
inc
mov
movs
fcomi
push
pop
int
pop
popa
js
mov
jge
nop
or
sub
dec
cmp
ret
pop
hlt
sub
sar
xor
adc
sub
into
aas
sub
je
call
xchg
aad
clc
arpl
scas
inc
leave
pop
inc
cmp
out
xchg
jmp
add
push
(bad)
jo
in
mov
inc
or
mov
dec
push
shl
ins
adc
push
xlat
cwde
inc
mov
and
sbb
adc
out
mov
ins
sub
fnstcw
mov
mov
loop
dec
sub
fld
test
and
add
xchg
jnp
imul
aaa
lahf
inc
movs
inc
dec
scas
sbb
stos
(bad)
cmps
adc
div
mov
nop
jg
adc
dec
push
or
sub
or
mov
ja
mov
push
inc
dec
push
mov
inc
cmps
loope
(bad)
fnsave
inc
fxch
cmp
jne
loopne
jl
ret
and
sbb
stc
shl
pop
jbe
ds
imul
jae
jns
xor
nop
sbb
add
adc
ret
mov
pusha
push
outs
clc
lods
add
adc
cmps
mov
pop
sub
xchg
in
ret
es
leave
imul
mov
jb
pop
aam
cs
dec
push
(bad)
ds
or
dec
aaa
mov
in
gs
push
dec
sti
imul
jae
adc
and
pop
cld
sub
inc
jns
and
adc
mov
jmp
pop
js
ret
pop
inc
imul
les
cmp
jae
push
dec
mov
nop
ins
jmp
add
pop
cmc
or
ss
dec
xchg
cwde
into
xchg
inc
stc
sub
repnz
adc
sub
mov
int
dec
mov
outs
push
xor
(bad)
push
mov
ret
mov
add
dec
jno
jns
test
ror
ss
mov
mov
mov
pop
jmp
jmp
ds
mov
call
push
in
adc
retf
test
lea
jne
lahf
(bad)
imul
jp
add
mov
or
or
inc
inc
mov
jmp
retf
and
xchg
lahf
jl
sub
mov
pusha
das
dec
out
xor
pop
dec
inc
jno
cli
je
daa
xor
(bad)
mov
add
inc
push
cdq
repnz
pop
shl
cmps
inc
xor
ins
test
push
stos
mov
test
outs
jo
jmp
mov
arpl
cmps
adc
xor
div
leave
push
pop
enter
(bad)
xor
retf
push
div
sbb
mov
xchg
mov
fdivr
sbb
test
aam
jmp
in
mov
fadd
stos
shl
push
push
aad
es
scas
sub
nop
test
(bad)
push
shr
push
xor
mov
cld
test
loope
fucom
ret
jecxz
call
adc
sub
call
int3
jae
out
loope
test
push
sub
dec
imul
das
mov
inc
xchg
inc
stos
adc
mov
aad
loope
out
mov
lahf
add
test
bound
or
inc
fsubrp
outs
adc
mov
push
clc
add
aam
cmc
div
mov
loope
add
dec
rol
mov
popf
cmp
lods
add
and
mov
xchg
dec
mov
xchg
mov
jge
rol
repz
adc
and
cmps
adc
pop
pop
rcl
sbb
jmp
jl
retf
lea
popf
lea
leave
push
in
leave
ret
and
fld
mov
imul
adc
sar
test
gs
cmp
xchg
sahf
cld
cmp
out
ins
and
sti
add
aaa
xlat
mov
pusha
aaa
mov
iret
pop
icebp
pop
sub
stc
test
xor
inc
sar
mov
jp
loope
enter
and
mov
ins
nop
cwde
xor
(bad)
sub
xor
ss
mov
mov
jle
sahf
mov
sbb
jge
js
cmp
cmp
fistp
call
sbb
pop
in
sub
cmps
hlt
aad
jae
sahf
pop
retf
out
cmp
sub
push
sbb
inc
push
push
aaa
call
mov
sbb
(bad)
es
inc
sub
cmp
test
out
retf
sahf
and
movs
mov
fsub
push
loope
pop
adc
mov
sbb
sbb
sti
push
push
fs
ret
sbb
lds
and
lahf
fwait
push
mov
jae
jl
icebp
sbb
ja
loope
xor
dec
shr
lock
jge
adc
js
mov
mov
jns
mov
lock
fwait
xor
out
fwait
push
xlat
jmp
int3
rol
popa
jne
inc
inc
jmp
mov
xchg
mov
pop
in
test
mov
rcr
mov
xchg
outs
dec
test
xchg
jbe
push
sub
inc
icebp
bound
sub
rcr
or
jmp
mov
mov
clc
bswap
fidiv
adc
jo
push
or
and
sti
inc
inc
lods
sbb
xchg
and
mov
lahf
jmp
arpl
mov
cmp
das
dec
das
out
fdivp
sbb
jns
sbb
test
jo
cmc
jno
jecxz
aad
cmp
movs
lea
push
adc
inc
std
sbb
scas
idiv
push
mov
and
sub
out
xor
movs
popf
xor
cwde
xchg
adc
ror
dec
aas
xor
push
ror
xor
sar
lods
pop
cs
bound
pop
xchg
inc
xchg
dec
int
lods
cmp
inc
repz
fisub
aaa
test
sub
inc
or
dec
xchg
push
fadd
(bad)
fisubr
inc
jae
pop
repz
movs
xor
cmp
(bad)
out
xchg
cmps
adc
cmp
mov
lds
neg
dec
shl
sbb
retf
clc
outs
retf
mov
(bad)
xchg
gs
fdiv
cmps
push
push
sbb
jl
movs
clc
ret
dec
ins
(bad)
inc
jmp
test
and
int3
sub
(bad)
fs
call
in
fadd
retf
cs
jb
dec
les
mov
add
movs
outs
xchg
pop
xchg
and
imul
test
jb
push
cld
jle
xor
sub
sahf
mov
mov
push
xchg
popa
sysret
xlat
fsubr
inc
push
jne
(bad)
imul
test
sbb
xchg
jns
and
mov
out
aaa
fadd
fmul
jl
inc
mov
or
dec
lahf
jno
xchg
pop
xor
jae
popf
sbb
imul
fs
mov
xor
inc
cli
add
js
lahf
arpl
adc
stc
or
inc
mov
cwde
xor
xchg
and
cmp
dec
xchg
xor
and
(bad)
ficom
mov
xchg
and
imul
std
inc
sub
or
rcr
sahf
cmps
sub
mov
cmc
jae
mov
jmp
aaa
inc
hlt
leave
or
push
shl
mov
shl
dec
movs
iret
fsub
xchg
cld
mov
les
mov
jnp
mov
sub
pop
mov
mov
adc
je
adc
enter
aam
and
fisttp
add
inc
and
pop
add
(bad)
jge
fnstenv
pop
jle
sub
(bad)
in
and
fwait
loopne
push
and
jnp
cdq
push
std
stc
lods
xchg
das
jns
and
in
(bad)
out
jg
push
retf
ss
inc
aam
jecxz
sub
push
ror
jge
add
sbb
dec
jmp
daa
pop
jmp
jo
push
fucomip
jmp
inc
add
push
xor
inc
test
sub
pop
sbb
shr
mov
push
and
out
and
(bad)
cmc
mov
mov
add
cmp
xor
jecxz
fnstenv
cmp
neg
in
xchg
mov
mov
fdiv
aaa
mov
xchg
or
cmp
mov
mov
pop
sbb
scas
and
inc
dec
dec
shl
lods
sub
sbb
push
fs
clc
jo
sbb
sti
add
adc
rcr
jnp
mov
xor
hlt
out
in
mov
inc
cmp
std
push
mov
push
ror
push
ficom
sbb
or
xlat
push
jle
call
lahf
cmp
mov
(bad)
xor
rcr
xchg
fistp
retf
out
cld
pop
inc
retf
xor
bound
mov
pop
and
jbe
sti
imul
pop
xchg
adc
lahf
arpl
push
rcl
pop
enter
mov
cmp
repz
ret
push
jmp
inc
inc
jae
fistp
push
in
push
pop
out
cmp
fsqrt
fwait
pop
retf
cmps
and
mov
test
cmps
mov
adc
inc
outs
stc
xchg
fdivr
mov
sub
cmp
leave
outs
lods
aad
xchg
cmp
stc
hlt
jnp
mov
dec
cmps
xchg
hlt
cmp
inc
xchg
push
jnp
and
mov
int3
cmp
mov
jb
xadd
cmp
hlt
jae
loope
clc
or
mov
out
out
ja
or
lock
adc
mov
xchg
int3
mov
xchg
test
pop
neg
fdiv
adc
adc
sahf
xchg
or
je
gs
test
xchg
pop
ficomp
leave
cs
test
push
call
adc
adc
mov
push
int3
dec
loope
cmp
mov
xor
aas
xchg
jp
cs
push
push
(bad)
std
ins
push
aad
or
push
push
inc
mov
jle
cmp
xor
inc
adc
scas
jo
jne
cmp
xchg
aad
cmc
or
xor
rcr
mov
ret
xchg
aad
dec
add
pop
or
adc
xchg
lahf
ins
shl
(bad)
sub
loopne
mov
xchg
dec
lds
iret
imul
fnstenv
ret
sbb
call
pop
xor
jb
adc
frstor
shl
pop
pop
repz
fs
xchg
push
imul
xchg
out
out
or
data16
jne
mov
push
ins
inc
sbb
sbb
icebp
push
and
(bad)
icebp
xor
push
mov
dec
mov
js
rcr
pushf
shl
pop
adc
hlt
cmp
inc
cmps
in
or
gs
add
mov
fbstp
fmul
jb
xor
jmp
mov
(bad)
(bad)
cdq
sbb
cdq
in
dec
cdq
xchg
inc
xor
xchg
mov
(bad)
mov
mov
(bad)
hlt
push
jae
(bad)
aas
(bad)
repz
bound
imul
cmp
mov
(bad)
movs
mov
pop
ror
inc
and
add
jo
in
out
ja
enter
xlat
xlat
inc
push
jp
popf
je
cmp
pop
jo
pop
cli
aaa
scas
shr
mov
inc
xor
mov
mov
ins
int3
push
mov
std
fs
loop
dec
into
mov
lods
push
dec
pusha
xor
and
mov
push
out
into
add
dec
push
dec
pop
sub
(bad)
retf
push
and
pop
fs
push
pop
stos
je
int3
loopne
shr
mov
cmps
cwde
pop
scas
je
mov
cmp
stos
and
sti
scas
rol
dec
sahf
call
addr16
adc
pop
xchg
jl
loop
or
push
leave
lock
in
sub
dec
cmps
adc
and
add
and
inc
push
repnz
stos
retf
fwait
cs
int
pop
or
mov
sbb
popf
aam
fdivr
int
movs
test
mov
outs
dec
test
and
shl
mov
mov
adc
imul
lahf
push
or
or
sub
jg
sbb
sbb
ffree
add
popf
pop
push
sbb
xor
xchg
pop
pop
jmp
test
mov
cmp
mov
cmp
and
popf
push
xchg
push
loope
pusha
pop
sti
hlt
aas
outs
inc
xor
into
shl
lock
jmp
sub
jmp
or
scas
mov
or
adc
cmp
(bad)
std
retf
xor
jns
or
push
movs
jge
pop
mov
rcl
mov
sti
inc
les
lock
arpl
out
dec
dec
inc
loop
icebp
adc
xor
jecxz
adc
call
test
addr16
arpl
test
jle
mov
loope
jns
and
aaa
rcl
sbb
and
inc
(bad)
cwde
(bad)
aaa
imul
movs
and
inc
das
mov
into
in
loope
test
mov
adc
fisub
push
sbb
xlat
repnz
xchg
xchg
and
sbb
or
cmp
into
adc
outs
mov
repnz
cwde
std
in
add
(bad)
outs
xchg
in
mov
bound
pop
ret
sub
sub
test
or
xor
cmp
mov
daa
xor
ret
les
call
pop
and
and
mov
inc
rcl
ins
cmp
and
out
mov
aas
fcom
addr16
ja
dec
lea
xor
mov
addr16
das
adc
retf
(bad)
add
xchg
(bad)
xor
test
ret
in
sbb
out
fwait
shl
fdivr
(bad)
data16
mov
push
arpl
xchg
push
(bad)
shl
in
shl
mov
nop
add
xor
or
xor
xchg
es
and
icebp
xchg
push
push
dec
inc
or
mov
xor
mov
inc
jbe
mov
sbb
loopne
add
push
call
repz
xchg
rcl
dec
cdq
into
jbe
rcl
dec
xor
mov
call
sub
dec
mov
sti
mov
inc
adc
mov
sahf
sub
inc
aad
mov
cld
dec
xchg
pop
mov
or
into
daa
outs
pop
(bad)
push
jmp
or
xchg
pop
fadd
mov
inc
xor
sub
stos
call
and
sbb
add
dec
repnz
cmp
hlt
call
xor
(bad)
ret
mov
xlat
outs
movs
push
fcomp
out
add
or
xor
cmp
(bad)
cdq
sbb
ins
ss
js
cld
jnp
dec
stc
(bad)
cwde
or
xchg
sbb
in
jecxz
pop
bound
in
mov
adc
leave
lods
sub
or
cld
lahf
mov
das
add
mov
int
mov
ficom
repz
dec
cmp
xor
dec
add
cld
or
jmp
arpl
push
push
add
je
fnstenv
xchg
or
inc
jl
aas
js
neg
int3
retf
adc
add
inc
adc
push
retf
sub
cdq
out
and
lock
jae
jmp
mov
sbb
jge
adc
rol
test
mov
push
or
mov
scas
pop
add
cmps
mov
xor
adc
(bad)
je
push
inc
js
les
mov
ds
(bad)
dec
fsubr
inc
mov
into
push
lahf
loope
popa
jle
dec
add
out
in
icebp
push
and
test
push
icebp
outs
repz
jge
out
push
mov
sub
fsubrp
pop
mov
cmp
imul
xchg
mov
cli
jg
fidivr
mov
and
cmc
jbe
lahf
in
ins
push
stos
(bad)
imul
test
js
cmp
and
add
ret
ins
repz
test
xchg
call
ins
add
fldcw
jle
pop
in
hlt
jmp
stos
in
add
movs
stc
pop
daa
mov
adc
adc
lods
push
or
dec
mov
mov
xor
mov
xor
or
test
push
sbb
or
int3
cdq
dec
push
push
test
sbb
adc
jo
lock
mov
arpl
in
scas
jmp
adc
into
sbb
mov
mov
push
int3
ins
ins
ret
xchg
fild
add
mov
les
jge
mov
cmps
icebp
sbb
scas
cmp
fimul
test
jo
mov
add
outs
inc
dec
xor
enter
cmps
mov
push
xchg
fdivr
mov
test
mov
mov
sub
sub
or
iret
pop
xchg
and
mov
outs
fisubr
scas
popa
mov
adc
dec
xor
jecxz
lea
cs
fs
adc
popf
movs
jl
ins
sub
inc
xor
out
sti
out
pop
pusha
pusha
sbb
shr
push
out
jecxz
xor
lods
shl
jmp
ins
out
out
cmp
and
xchg
jecxz
dec
push
add
mov
cmp
and
aaa
lods
fild
int
and
fdivr
loope
pusha
push
sbb
mov
(bad)
adc
xor
not
mov
inc
push
jg
and
sbb
mov
jmp
sahf
imul
enter
ja
shl
fstp
inc
sbb
mov
sub
rcr
out
fmul
call
push
rcr
mov
daa
std
scas
jmp
push
jmp
shl
retf
imul
mov
mov
push
setb
xchg
mov
adc
daa
mov
nop
mov
mov
dec
add
lods
dec
shr
je
test
or
aas
xchg
(bad)
cld
ins
cmp
sub
daa
cmovg
add
pop
sub
call
js
ins
jmp
pop
sti
loopne
lock
xchg
dec
lods
mov
scas
pop
mov
stos
loopne
mov
cmp
lahf
imul
pop
add
jecxz
xor
adc
xchg
or
jmp
jno
cdq
sub
sub
sbb
push
jnp
jbe
xchg
jnp
out
pop
cmp
fcom
arpl
xor
(bad)
popa
(bad)
(bad)
movs
cmp
push
mov
xor
xchg
leave
pop
and
aaa
mov
xor
pop
mov
cli
and
pop
sub
push
mov
sub
sti
ss
add
in
dec
push
add
fs
mov
mov
aas
scas
xor
retf
and
inc
push
cld
ss
pop
push
rcr
sbb
adc
int3
sbb
jno
mov
jge
mov
leave
out
dec
dec
call
push
adc
cli
rcl
fcmovnbe
aad
cmc
inc
retf
jo
das
push
sub
in
inc
mov
sahf
inc
mov
shr
mov
movs
das
loope
stos
(bad)
dec
cmps
cmc
iret
mov
jne
fnstenv
retf
fldenv
test
jecxz
cmp
ins
or
shr
stos
xchg
mov
mov
fistp
test
(bad)
xor
mov
inc
(bad)
ret
or
dec
ss
adc
scas
arpl
outs
mov
add
fdivr
mov
shl
stos
fild
mov
pop
xchg
aam
shr
stc
sub
pop
xor
ins
ds
adc
xchg
fst
jae
(bad)
cdq
jecxz
ret
out
fidiv
test
in
outs
stos
jge
out
out
sub
in
push
inc
fmul
dec
adc
push
adc
mov
scas
test
imul
retf
sub
(bad)
cli
test
(bad)
mov
add
test
mov
popf
(bad)
jecxz
push
addr16
loopne
(bad)
push
add
lea
inc
push
cld
push
pop
lods
pop
nop
push
add
test
test
and
sub
mov
mul
xchg
out
jge
mov
pop
(bad)
fwait
addr16
jl
pop
nop
stos
mov
int3
adc
pop
adc
xor
inc
pushf
sar
(bad)
scas
xor
mov
dec
xor
cmp
outs
clc
jno
mov
test
adc
(bad)
(bad)
in
ror
repnz
loop
mov
movs
mov
stc
clc
sub
hlt
js
out
enter
lods
retf
bound
or
test
cmp
and
imul
push
xchg
fldenv
dec
bound
xor
ficomp
add
cwde
int
cmp
je
push
je
jl
mov
test
sub
and
data16
mov
test
push
mov
push
outs
mov
pop
std
inc
push
sbb
cmp
cmp
add
mov
sbb
sub
pusha
xchg
(bad)
stc
stc
popf
cmp
push
in
fsubr
fnstenv
and
pop
mov
enter
stos
adc
int3
ja
loope
xor
call
out
push
dec
rcr
add
mov
cmp
cmps
addr16
or
hlt
adc
sub
and
pop
push
pop
outs
mov
and
mov
xor
sbb
arpl
int3
retf
mov
arpl
imul
imul
fidivr
test
adc
dec
cmp
sub
dec
data16
xor
(bad)
out
pop
in
cmc
enter
xor
in
(bad)
enter
cmp
mov
push
cmps
aam
adc
dec
xchg
jmp
inc
addr16
movs
adc
xor
jmp
sub
add
jne
and
jp
xchg
cli
push
jb
pop
addr16
jmp
scas
push
fild
imul
push
xor
mov
bound
xchg
mov
pop
fsubr
jg
pop
push
push
aas
jge
mov
dec
in
call
xor
ds
aaa
cmp
sub
in
sahf
jb
jae
lea
ins
out
pop
inc
sar
push
add
pop
icebp
(bad)
dec
sbb
jae
pop
push
or
mov
mov
enter
jmp
out
mov
xor
lahf
adc
mov
mov
fwait
mov
mov
dec
adc
mov
sbb
retf
sahf
xor
jb
mov
cmp
scas
es
push
mov
pop
pop
sar
rcr
dec
mov
cmp
sub
loope
retf
xlat
gs
movs
pop
xor
pop
mov
test
ins
loop
jle
arpl
movs
cmps
or
loopne
xchg
cld
outs
icebp
mov
jmp
pop
or
rcr
movs
out
pop
xchg
push
div
daa
test
xchg
leave
and
int
inc
loop
mov
mov
mov
sbb
mov
lods
mov
push
ret
dec
(bad)
repz
jp
leave
add
popa
push
out
leave
push
in
xor
data16
add
mov
das
popf
xlat
sti
dec
push
je
cmps
inc
mov
jo
movs
ror
js
and
xchg
sub
call
cmp
stos
sub
or
lahf
sub
push
add
stc
je
cwde
and
ja
es
in
leave
sbb
(bad)
idiv
loopne
push
pop
ss
mov
or
xlat
mov
into
mov
out
fist
imul
lahf
push
xor
ins
mov
js
(bad)
xlat
push
cmp
sahf
cli
outs
jae
fst
add
jecxz
xor
push
cmp
enter
cmp
add
pop
fadd
and
cdq
mov
cli
jmp
pusha
fwait
inc
rcl
adc
push
cmp
mov
in
sub
addr16
or
sbb
sub
call
leave
stos
cmp
pop
fcomp
cmp
mov
mov
inc
addr16
mov
js
(bad)
push
ds
aad
pop
aad
push
test
mov
enter
sub
jecxz
push
(bad)
rol
mov
sub
jmp
test
(bad)
aaa
fist
scas
add
mov
xchg
sub
sub
xor
and
jge
out
mov
cmc
fnstcw
xchg
mov
or
imul
xor
mov
sbb
shl
popa
sbb
inc
mov
add
ss
repnz
fist
fsub
jl
push
repnz
(bad)
fucomip
cmp
pop
xor
cmp
xchg
out
add
loope
inc
test
sub
imul
sbb
addr16
ret
rcr
fld
inc
and
mov
dec
jo
js
and
ret
cmps
fsubr
sbb
in
xchg
stos
adc
xor
mov
adc
lea
hlt
pop
lahf
and
repnz
cwde
or
sbb
cmp
sar
mov
or
cwde
dec
mov
inc
dec
(bad)
sub
pop
jge
sbb
cdq
push
test
xchg
inc
lahf
hlt
adc
dec
sbb
cmps
jne
mov
shr
cmp
mov
add
ret
inc
test
mov
adc
repz
mov
aaa
pop
mov
dec
lock
and
mov
cmps
sub
and
rol
stos
inc
rol
cmps
outs
mov
test
mov
jge
jbe
dec
(bad)
outs
loope
pop
inc
cmps
retf
and
std
out
jge
sbb
cli
test
mov
popa
mov
sar
das
add
test
and
adc
sbb
xor
sub
mov
jl
push
sbb
aas
retf
jns
and
cmp
push
daa
clc
test
mov
dec
js
push
sub
mov
inc
jae
sbb
pop
dec
mov
les
pop
shr
and
out
lock
push
ins
mov
loope
pushf
into
dec
test
jns
call
sbb
cmp
sub
add
dec
or
adc
aam
int3
jmp
cmps
int
leave
sbb
shr
int3
inc
leave
jmp
xlat
push
cdq
sbb
test
test
inc
xor
shl
sbb
movq
jne
test
xor
dec
cmp
scas
add
in
mov
aad
xchg
push
cmp
stc
xchg
and
outs
leave
dec
jmp
jp
sub
jecxz
(bad)
mov
sbb
push
jo
ficomp
and
inc
and
or
cmp
out
sbb
xor
adc
in
mov
int3
pop
and
pop
leave
push
dec
aad
cld
push
fcmovbe
dec
in
pop
mov
xor
mov
mov
xor
(bad)
pop
cs
push
sub
and
arpl
dec
std
scas
inc
cld
cmps
cmp
cld
or
not
loope
push
in
ret
mov
out
mov
cmp
sbb
rcl
sbb
xlat
push
call
aad
and
mov
inc
ss
and
xchg
dec
loopne
add
cmp
mov
jecxz
mov
out
or
or
or
icebp
pop
dec
or
aam
cmp
jl
test
ins
push
movs
push
test
mov
mov
xchg
and
inc
or
cmc
dec
mov
push
popf
push
fidiv
xor
adc
retf
stc
sbb
cmp
and
jb
pop
mov
fbld
rcl
adc
aad
push
(bad)
les
jbe
call
pushf
fnstsw
add
mov
cli
int
push
dec
mul
xchg
mov
and
jno
ins
dec
stos
jno
(bad)
cdq
retf
pop
popf
mov
push
ss
pop
push
ret
aaa
ins
mov
adc
or
aas
(bad)
imul
jmp
int3
pop
and
jecxz
mov
cmps
cmp
lods
lods
lods
int3
push
(bad)
repnz
sub
dec
out
push
out
ds
or
xchg
sar
mov
sub
mov
adc
push
cld
dec
leave
icebp
xor
pusha
popf
(bad)
jnp
bound
sbb
fld
outs
nop
repnz
jecxz
addr16
xchg
adc
pop
mov
pop
mov
enter
xchg
retf
or
hlt
mov
fwait
call
cld
int
mov
push
push
fdiv
jmp
ds
push
les
xor
mov
xchg
test
je
inc
in
ins
pop
mov
mov
mov
adc
out
adc
seta
fsub
xchg
leave
pop
add
and
add
stos
xor
cmp
pop
movs
xchg
leave
leave
add
add
fsubr
js
das
fild
rol
push
fbstp
das
xchg
cmp
std
(bad)
ins
(bad)
pop
mov
cli
jge
xchg
sahf
test
cmps
sti
dec
pop
jecxz
(bad)
imul
repz
jae
push
cwde
test
es
enter
enter
or
sub
into
or
cld
jnp
dec
rol
dec
pop
push
in
mov
jge
inc
mov
jne
in
cdq
sbb
mov
jae
popa
aam
or
aas
dec
data16
aas
test
fadd
and
movs
outs
mov
sub
cmp
add
stc
fsubp
xor
mov
push
mov
jp
nop
loope
mov
je
sbb
mov
xor
mov
push
fnstcw
ja
into
int
das
cli
add
xchg
cld
or
xchg
stos
repnz
test
mov
retf
(bad)
cmc
shl
cmp
cld
fldenv
mov
and
popf
mov
mov
mov
fdivr
sti
shl
adc
mov
xor
arpl
retf
icebp
dec
(bad)
std
sahf
or
sbb
lods
sub
or
dec
out
outs
cli
int
cmps
xor
push
ret
mov
nop
hlt
sbb
in
pop
sub
mov
fild
repz
les
movs
sbb
xlat
ret
push
(bad)
int
pop
aad
push
xor
sbb
and
jp
sub
cwde
mov
aad
ss
pop
sbb
mov
mov
call
mov
pop
pushf
sbb
repnz
outs
push
cli
dec
mov
and
stos
aam
jge
call
sbb
cmp
pop
or
icebp
lods
sbb
push
sub
sbb
push
mov
stos
xor
or
repz
shl
xchg
fwait
jne
mov
mov
rcl
out
clc
dec
sbb
cmps
scas
jg
sub
call
add
stos
leave
add
sub
xor
or
dec
mov
std
xor
pop
and
test
loopne
or
jecxz
push
xchg
pop
add
pop
mov
fsubr
imul
jbe
aad
push
xchg
ins
dec
sub
addr16
or
mov
in
and
xor
loopne
dec
xchg
mov
icebp
call
leave
mov
es
outs
arpl
mov
cli
js
dec
adc
cmc
call
cmp
arpl
in
pop
sbb
xchg
pop
out
inc
sub
sbb
jle
sbb
shl
outs
dec
pop
mov
sbb
stos
jle
repnz
popf
or
cmp
mov
jmp
jecxz
mov
push
fnstenv
jae
out
int3
xchg
test
jmp
scas
dec
pop
push
and
push
mov
mov
call
add
sbb
jmp
jmp
sbb
add
cwde
pusha
add
add
mov
shl
lods
pusha
sbb
test
call
and
cmp
jecxz
nop
push
cmp
cmp
jns
push
push
and
or
mov
mov
fcomp
push
adc
sub
je
mov
add
jnp
es
or
(bad)
fcomp
mov
scas
pop
loope
xor
mov
enter
lds
adc
and
xchg
pop
call
and
xchg
in
xor
mov
inc
push
cli
fwait
xor
pop
retf
sub
ins
sahf
jb
mov
out
xor
jmp
push
xchg
(bad)
mov
xchg
imul
inc
sbb
fidiv
push
inc
mov
ins
sbb
pop
ins
or
fimul
retf
mov
mov
neg
mov
adc
loopne
pop
inc
xchg
mov
adc
test
mov
call
aas
fs
pusha
pop
scas
sbb
push
in
or
fild
and
das
out
outs
push
cmp
pop
mov
cwde
pop
xchg
vmread
jl
and
cmp
jae
in
dec
stos
fisubr
sub
sub
cmp
pushf
out
dec
jae
fcmovnb
cmp
outs
mov
jnp
xchg
aam
shl
fsubr
mov
in
je
dec
push
rcr
imul
sbb
loope
stos
shl
call
mov
jecxz
mov
inc
sbb
inc
imul
ror
ficomp
inc
jle
repz
sub
cdq
xor
jl
pop
test
addr16
jle
repnz
es
sub
add
aad
and
ins
mov
(bad)
xchg
adc
or
mov
sti
adc
pop
jae
adc
push
rol
cmp
rcl
(bad)
cs
mov
outs
cwde
mov
js
popa
aam
cmc
or
xchg
mov
(bad)
cmp
leave
lahf
adc
loope
inc
push
cmp
clc
cs
adc
das
and
out
int
ret
fs
fs
lds
out
pop
ins
and
mov
sbb
out
dec
iret
nop
mov
test
mov
cmps
push
or
sub
in
mov
or
arpl
js
scas
test
lea
sub
fstp
fsubp
nop
mov
call
jmp
jl
mov
cmps
lods
cmp
pop
fidiv
bound
cmp
sbb
movsx
aad
adc
sbb
xchg
push
pop
mov
mov
mov
sbb
ss
mov
ja
nop
je
(bad)
jbe
jp
outs
ins
sub
fnsave
test
add
daa
jo
stc
jnp
out
loope
cli
add
jle
fidiv
lods
xchg
test
mov
ret
jnp
leave
cmp
fdivr
fisub
loope
pop
inc
or
leave
test
xchg
stos
cmps
push
imul
mov
lods
adc
xchg
mov
scas
xor
popf
sub
push
(bad)
add
int
pop
retf
clc
or
add
mov
(bad)
shl
or
mov
xor
push
push
leave
mov
mov
aas
xchg
dec
jbe
or
mov
call
xchg
jnp
push
sbb
and
mov
ror
into
push
sbb
cdq
mov
stos
add
retf
adc
pop
xor
lock
les
fwait
sub
xor
push
sar
push
mov
mov
lods
sub
cmp
xor
ins
aaa
pop
clc
add
test
lds
sub
jle
jne
clc
rcr
inc
scas
jae
mov
push
pushf
push
sbb
imul
movs
xor
add
stos
test
shl
fild
std
jns
xchg
add
(bad)
sub
adc
inc
pop
stc
cdq
dec
inc
adc
(bad)
aas
inc
sub
push
sub
jnp
jmp
mov
jle
sahf
int
push
add
xchg
and
(bad)
cs
retf
push
push
jae
dec
imul
adc
int3
sbb
fwait
xchg
adc
adc
inc
dec
dec
aas
scas
dec
sub
hlt
fst
xor
mov
daa
push
dec
hlt
or
adc
scas
push
in
xchg
nop
push
inc
jge
(bad)
mov
lock
into
je
push
xchg
iret
mov
dec
adc
popf
arpl
xor
test
out
jnp
fiadd
mov
mov
mov
arpl
xor
xor
je
loope
inc
ret
(bad)
in
pop
and
mov
mov
fdiv
jne
clc
add
push
pop
aad
cmc
(bad)
hlt
enter
push
mov
xchg
push
adc
push
xor
jns
jge
(bad)
lahf
popa
cmp
in
gs
cmp
(bad)
lods
mov
push
xor
inc
jmp
rol
mov
mov
mov
mov
xchg
mov
cmp
pusha
pop
jns
je
cld
ss
imul
je
loopne
or
pop
and
pop
and
movs
sti
inc
mov
std
arpl
push
sbb
jp
xor
mov
mov
jns
push
out
jno
into
aad
push
jl
inc
stos
adc
and
sahf
push
pop
lock
push
and
daa
inc
lods
loope
push
(bad)
jmp
je
mov
adc
enter
clc
push
push
inc
jecxz
popa
(bad)
and
and
adc
push
out
loope
dec
outs
mov
test
aaa
out
push
mov
sti
les
in
lock
mov
lods
xor
mov
shr
les
movs
inc
cwde
test
mov
add
jmp
push
pop
test
push
leave
aaa
lods
and
mov
cmp
xchg
xchg
ss
mov
push
std
jb
push
sbb
push
inc
pop
xchg
fimul
pop
jae
push
retf
in
(bad)
fld
fs
mov
popf
adc
bound
jecxz
retf
sbb
cmc
xor
push
call
outs
mov
push
test
retf
leave
mov
ret
aaa
cmp
jbe
int
jge
mov
ret
retf
mov
or
pop
mov
mov
pushf
popa
clc
rol
in
add
pop
in
aaa
cmp
imul
loop
or
xlat
imul
xchg
cmp
push
outs
lods
push
push
pushf
arpl
(bad)
(bad)
repz
movs
xchg
sub
pushf
fsubr
inc
ss
jge
lds
push
(bad)
jmp
scas
inc
aas
mov
sti
std
cs
test
fist
xchg
jp
sub
pop
and
mov
mov
pop
ror
jmp
pop
(bad)
into
lods
sbb
cmp
mov
ret
add
jl
xchg
push
mov
pop
sti
aas
xor
neg
test
call
jne
dec
cs
or
aas
inc
sub
dec
or
enter
sahf
add
dec
test
mov
jno
add
pop
push
or
add
fwait
pop
out
stos
and
in
(bad)
arpl
or
mov
es
dec
retf
pop
(bad)
sbb
fistp
pop
les
cmps
imul
cmp
aas
cld
sub
call
imul
hlt
(bad)
movs
pop
jmp
dec
mov
or
aad
mov
pop
mov
inc
and
jmp
and
cmps
(bad)
shr
sbb
ins
add
push
outs
add
test
lock
out
iret
fistp
lea
aad
mov
mov
shr
push
mov
mov
push
sbb
adc
hlt
xchg
adc
sub
(bad)
jnp
mov
sbb
fldenv
in
(bad)
push
adc
rol
jecxz
cld
lock
inc
xlat
fwait
(bad)
(bad)
stc
xor
and
out
jle
fbstp
movs
test
data16
out
(bad)
cmp
mov
daa
(bad)
not
jge
cmps
push
pushf
pop
mov
lock
ret
sbb
mov
mov
mov
push
daa
xor
fstp
mov
jb
mov
mov
ja
lods
fs
cmc
sub
stc
push
stos
loop
adc
je
shl
push
stos
lea
sub
test
jg
add
dec
in
movs
xchg
ret
iret
mov
jb
cmc
outs
pop
and
dec
push
fdiv
jae
outs
ss
inc
jl
sbb
sub
and
jecxz
nop
lahf
mov
push
lock
dec
or
xchg
sbb
rcr
jge
jb
dec
or
ins
xor
push
rcl
cmc
ret
(bad)
cmc
in
test
adc
sub
fcom
shl
push
add
push
out
mov
fs
mov
dec
data16
(bad)
jl
cmp
shl
mov
mul
dec
int
mov
pop
mov
dec
ins
or
xor
cli
cmp
mov
fs
out
ret
pop
int3
ins
dec
xchg
js
loope
inc
and
sbb
jmp
jmp
sahf
jo
loope
ret
mov
mov
jecxz
push
mov
jecxz
addr16
and
sbb
test
fdivr
xor
cli
pop
mov
js
inc
rcl
sbb
mov
stos
pop
mov
add
pop
mov
adc
push
mov
outs
jnp
btr
jle
sti
mov
jno
bound
xor
sbb
repz
jge
sbb
push
cmp
(bad)
cmp
adc
pusha
xor
test
js
(bad)
dec
sbb
xchg
(bad)
xchg
loope
mov
xchg
and
dec
outs
sbb
xor
push
aas
sub
pushf
sub
dec
push
pusha
aas
jmp
dec
jo
(bad)
sbb
movs
test
(bad)
mov
gs
cmc
push
cmp
sbb
nop
jnp
jl
dec
push
es
push
xchg
out
stos
ret
cwde
jae
mov
lahf
adc
fnstenv
lods
push
cmp
cmp
es
popf
xor
test
jo
mov
pop
xor
and
sbb
pop
nop
or
mov
dec
jbe
add
pop
rcr
rol
sahf
cmp
fistp
ret
shl
jp
jl
mov
popa
ret
dec
mov
movs
rcl
xchg
leave
ss
rol
ins
scas
hlt
inc
sbb
jo
or
in
dec
sbb
sub
test
outs
push
sub
mov
add
pop
movs
mov
adc
cdq
mov
jae
sbb
outs
xor
mov
std
add
jbe
dec
gs
aaa
aam
add
jp
and
cmp
daa
add
gs
add
sbb
(bad)
seta
pop
or
xchg
retf
jo
nop
jg
in
pusha
neg
push
leave
test
call
(bad)
adc
mov
mov
xor
popa
cwde
xor
cmp
ret
jns
add
mov
ins
and
pop
aaa
fiadd
sti
sbb
sbb
mov
lods
jns
neg
std
cmp
xchg
mov
fwait
cli
fwait
call
xlat
xor
loope
push
fstp
retf
jbe
ins
div
fidiv
mov
bnd
jne
and
jbe
das
mov
mov
jl
movs
gs
add
lea
xor
ins
mov
in
add
lds
sub
pop
cli
loopne
jnp
xchg
pop
mov
push
pop
loopne
ds
imul
jo
push
jbe
pop
pop
jmp
sub
lea
popf
push
out
sub
int
dec
cdq
movs
xor
inc
mov
ss
scas
dec
es
inc
mov
aam
mov
push
lods
xor
ja
mov
shr
pop
fisttp
xchg
pop
rsqrtps
scas
xlat
dec
in
add
push
jmp
lods
inc
pop
adc
sbb
xor
movs
adc
mov
push
and
rol
fimul
and
lea
xor
dec
cmp
inc
stc
or
(bad)
fisub
mov
inc
xchg
push
and
fild
sti
(bad)
push
mov
xchg
jmp
and
clc
dec
imul
jbe
add
ins
iret
dec
cmp
add
(bad)
dec
and
pop
sub
shl
loopne
mov
int
mov
mov
rcr
sub
add
jb
out
inc
pop
push
aas
data16
gs
jnp
or
(bad)
push
dec
(bad)
into
jnp
or
add
rol
aas
xchg
jns
jnp
movs
adc
sbb
add
sti
iret
push
frstor
clc
jns
imul
pop
icebp
imul
sub
dec
or
cmc
(bad)
pushf
pop
push
jns
push
out
add
stc
sbb
mov
push
cs
pop
pop
adc
jecxz
xchg
call
inc
sbb
in
imul
jl
dec
xchg
out
and
repnz
fdiv
jb
dec
adc
lea
add
shl
call
sbb
ja
fs
inc
fs
adc
sub
popa
jmp
cmp
adc
lods
mov
cmc
inc
push
lea
mov
push
mov
ins
aas
dec
cld
rcl
rcl
mov
call
mov
clc
retf
sti
addr16
in
repz
mov
jbe
cld
stos
adc
js
hlt
xor
mov
ins
sub
out
xchg
cmp
xchg
pop
jmp
out
adc
cwde
dec
pop
jmp
cmp
fild
lock
jae
inc
(bad)
bnd
adc
ins
mov
jle
repnz
fistp
lahf
dec
jae
out
sub
call
mov
(bad)
push
(bad)
inc
inc
push
and
pop
mov
mov
and
xchg
(bad)
mov
cmp
or
cmp
jnp
mov
sbb
mov
dec
mul
test
xchg
(bad)
inc
aam
(bad)
fidivr
sub
cmps
shl
imul
les
xlat
cmps
retf
leave
fmul
in
and
mov
int
lds
xor
inc
cli
mov
jno
lds
jp
ins
cmps
bswap
pop
dec
or
dec
clc
shl
jecxz
jl
or
mov
mov
cmp
or
xor
cmp
fisttp
idiv
mov
fsubr
imul
pop
mov
movs
(bad)
or
dec
jo
push
ins
(bad)
cmp
pop
neg
test
test
add
and
sub
cmovno
(bad)
fmul
daa
or
movs
fwait
(bad)
shr
jbe
mov
jne
cld
push
add
sti
and
add
mov
bound
das
dec
js
jp
sbb
add
add
mov
sub
(bad)
adc
pop
sub
enter
sar
(bad)
cmp
inc
mov
inc
jge
xchg
mov
inc
jp
push
pop
ins
push
mov
inc
sbb
jno
push
cmps
dec
cmp
sbb
add
rol
sbb
repnz
adc
adc
mov
mov
jmp
enter
sub
ins
adc
sub
cwde
int3
xchg
dec
mov
inc
int3
push
push
sbb
lods
(bad)
mov
pop
add
into
cmps
jge
pop
mov
ins
shl
and
adc
cwde
pop
rcr
(bad)
(bad)
fbstp
cli
xchg
rcl
in
lods
jns
xchg
clc
cmp
int3
mov
gs
sub
sar
mov
das
inc
xor
mov
jb
fwait
cmp
pushf
jge
repz
and
mov
aam
ss
pop
pop
cmc
mov
pusha
xlat
aam
mov
test
xchg
ficomp
jo
ins
test
fimul
inc
or
jl
add
ror
jcxz
push
ror
jle
test
ja
movs
scas
sbb
push
lea
test
or
cmp
arpl
inc
cmp
xchg
loopne
les
fwait
jle
adc
lods
inc
xor
mov
rcl
mov
add
ins
call
mov
push
fmulp
pop
and
cs
sar
mov
jbe
xchg
ins
shr
mov
into
ins
add
test
icebp
inc
stos
xchg
leave
stos
mov
dec
stos
sbb
ds
mov
lds
adc
ins
repnz
stos
cmp
jbe
inc
mov
adc
pop
ret
and
es
sub
dec
cwde
jb
jo
aam
push
(bad)
sti
mov
mov
sbb
aaa
mov
mov
xchg
push
ficomp
adc
add
out
cld
fcmovnu
push
mov
cmp
cmp
cmps
test
dec
int3
cmp
xchg
pop
inc
cmps
cli
or
jl
push
push
fs
jb
and
loop
aam
fwait
mov
mov
xlat
jno
sbb
sbb
lock
sub
retf
rcl
mov
test
dec
jmp
xchg
ins
test
popf
mov
idiv
sbb
push
ds
cwde
scas
push
dec
push
popa
out
loope
add
mov
sub
fbstp
add
sbb
jno
out
cs
jp
ficom
enter
jae
or
cmp
call
in
rcr
(bad)
push
imul
jg
mov
std
loop
scas
mov
std
add
cmc
xchg
ja
(bad)
ins
mov
aas
pop
push
iret
sub
mov
loope
popf
stos
mov
push
jne
stos
aas
fcom
in
cmp
pop
adc
push
mov
dec
pusha
lds
adc
cwde
test
adc
(bad)
xchg
push
and
inc
push
push
aas
xor
jmp
aaa
mov
daa
dec
pop
std
js
(bad)
inc
cmp
sbb
xor
arpl
mov
les
je
shl
bound
push
(bad)
sbb
push
xchg
call
and
cmp
loopne
sbb
xcrypt-ecb
cmps
mov
div
push
xchg
ds
fmul
adc
xchg
adc
xchg
jae
push
dec
push
push
mov
xor
jne
sub
mov
into
or
ss
mov
pusha
clc
dec
xchg
mov
out
fstp
xchg
call
inc
pusha
mov
xchg
jle
xchg
jbe
xor
xchg
retf
push
out
add
ds
mov
fdiv
in
cmps
test
fisub
adc
cs
mov
sbb
push
movs
ins
hlt
outs
mov
ror
push
or
outs
push
add
inc
push
mov
inc
shl
push
into
add
jae
ins
fsub
cmp
imul
inc
test
ret
cmp
and
lods
and
movs
dec
inc
in
shl
cmp
sbb
mov
dec
cmp
and
stos
cs
clc
jle
ror
jmp
jmp
cld
xchg
fisubr
outs
jp
push
outs
call
push
leave
mov
pusha
and
out
mul
or
cld
jl
scas
rcl
or
add
les
xchg
inc
push
xchg
fist
xchg
ja
aad
jg
jo
(bad)
mov
fstp
jp
mov
or
in
scas
fiadd
dec
xchg
fcmovu
daa
or
and
std
arpl
ja
inc
xchg
fdivr
jnp
pop
retf
dec
test
xor
mov
jne
xor
cwde
in
in
dec
xor
fwait
or
test
xchg
push
inc
dec
mov
pop
sub
xchg
(bad)
jmp
fs
xor
ins
xchg
gs
popf
pop
rcl
push
mov
pop
xor
push
in
je
scas
dec
jae
jne
mov
std
(bad)
hlt
lds
or
test
push
loope
fisttp
enter
icebp
call
mov
clc
popa
mov
cmps
movs
sub
adc
xchg
sub
push
sub
push
xchg
jle
inc
or
js
push
add
call
push
adc
jo
stos
jecxz
xchg
vpshlb
imul
fmul
push
test
add
add
lock
cmp
loop
mov
imul
(bad)
and
push
or
cmc
push
lds
ss
mov
jae
pop
cwde
dec
repz
mov
mov
add
xchg
data16
add
lahf
iret
shr
in
jae
jae
cs
je
sbb
push
xor
int
lds
dec
inc
xchg
pusha
cmps
dec
mov
cmp
iret
stos
(bad)
jae
ds
sub
xchg
(bad)
adc
pop
inc
pop
inc
(bad)
out
mov
inc
cwde
sub
lods
(bad)
sub
xchg
int3
rol
(bad)
sti
inc
sub
inc
sahf
inc
sbb
sub
sahf
scas
dec
retf
jae
popf
aam
dec
out
xchg
lds
jmp
xchg
cmp
mov
nop
loope
push
push
(bad)
push
inc
mov
push
shr
clc
push
loop
fmul
dec
lahf
in
sbb
dec
cwde
jp
jo
mov
mov
stc
les
or
jl
sub
pop
aaa
cmps
mov
cmps
in
cdq
mov
cmps
sbb
pop
xchg
les
pop
stos
pushf
sub
sbb
sub
ja
sub
sbb
jb
out
loopne
jbe
imul
popa
neg
mov
inc
jecxz
lods
(bad)
mov
in
test
xchg
cmps
loop
mov
and
das
(bad)
inc
push
push
sub
xchg
push
dec
into
jl
fbld
fcompp
push
dec
icebp
xchg
fiadd
xor
jne
cmp
pop
scas
adc
dec
inc
mov
cmp
sbb
pop
(bad)
or
sub
add
and
call
je
dec
sub
pusha
rcl
cmp
mov
lock
aad
jnp
pop
sbb
add
outs
mov
jge
mov
push
jg
ins
cmp
sbb
ins
pop
or
adc
inc
(bad)
fld
and
in
mov
lods
and
add
mov
jmp
cmps
mov
push
das
sub
sahf
xlat
inc
addr16
shl
enter
(bad)
mov
test
dec
(bad)
cli
out
(bad)
ret
data16
jecxz
push
mov
mov
mov
or
mov
mov
vpsrlq
xchg
sub
dec
or
lods
mov
xchg
dec
aam
int
in
retf
jmp
dec
loop
mov
push
clc
cli
or
add
lds
data16
clc
jmp
sub
or
push
arpl
sbb
mov
inc
jle
jmp
adc
dec
pop
cmp
mov
sti
push
cmp
inc
retf
jl
call
xchg
loopne
neg
test
fs
and
retf
jno
outs
or
lahf
dec
ret
pop
and
mov
ss
sub
inc
loopne
out
rcr
mov
retf
xor
sbb
cmp
mov
cmps
mov
movs
lea
pop
mov
arpl
clc
sub
pop
icebp
pop
pop
vmaxps
fwait
fwait
sub
scas
sub
cmp
imul
mov
pushw
jb
js
inc
mov
inc
mov
out
sidtd
push
daa
ror
or
xchg
fcomip
push
inc
inc
push
iret
lods
add
or
xchg
out
pop
clc
xchg
sbb
(bad)
mov
jg
call
cs
xchg
or
inc
sti
adc
sbb
or
imul
mov
push
dec
sbb
push
or
add
(bad)
sti
xchg
push
jne
xor
sub
loopne
loope
add
mov
sbb
push
sahf
cwde
addr16
or
out
loop
inc
and
sub
jbe
xor
rcr
jns
mov
mov
inc
and
fistp
push
data16
mov
inc
dec
jns
out
out
adc
or
pop
sahf
cdq
scas
stc
bnd
push
neg
push
cmp
stos
sbb
fnstsw
sub
or
mov
mov
dec
push
adc
mov
adc
jno
cmps
inc
and
div
push
pop
jmp
ret
adc
adc
aam
xchg
cdq
xrelease
lea
sbb
xchg
xchg
cli
add
sbb
cwde
dec
into
jmp
sub
(bad)
outs
test
sub
scas
retf
enter
push
mov
sbb
lock
push
sub
dec
push
pushf
(bad)
stos
ror
inc
push
xlat
shl
adc
jl
nop
xor
xchg
push
jecxz
xchg
call
mov
push
and
dec
add
jae
push
shl
jae
lahf
and
push
add
pusha
xadd
test
dec
xchg
inc
rcl
mov
popa
out
mov
adc
retf
dec
bound
test
pop
fwait
js
stos
pop
jge
mov
inc
(bad)
jmp
push
pop
lds
and
cmp
pop
dec
mov
adc
sbb
pusha
addr16
adc
outs
pop
imul
scas
aad
dec
int3
sub
cdq
xor
adc
cli
(bad)
push
outs
outs
(bad)
dec
call
stos
mov
mov
sbb
sbb
jle
ret
push
loopne
scas
mov
or
jl
jae
jle
xchg
push
popf
or
iret
test
cmp
add
imul
stos
pop
cdq
icebp
outs
jo
lock
push
bound
jp
xor
pop
pop
pop
je
bound
les
inc
imul
imul
sub
dec
push
cmc
sub
push
push
pop
jae
cmc
ror
adc
dec
add
add
adc
push
sbb
mov
adc
pop
fsubr
jmp
sti
es
jg
or
mov
aad
(bad)
jnp
push
gs
sub
mov
jns
test
push
(bad)
hlt
pop
aam
inc
enter
pusha
fld
mov
ret
test
jp
or
and
test
inc
ficomp
inc
xor
hlt
call
jmp
sbb
mov
xchg
repz
or
(bad)
in
test
aad
push
pop
ja
out
mov
out
mov
das
int
lahf
push
inc
das
cdq
mov
push
xlat
outs
xchg
inc
sub
enter
sbb
sbb
retf
popa
mov
das
jmp
sub
jge
retf
pop
pop
das
sbb
(bad)
sti
(bad)
ja
fcomi
mov
xor
add
sbb
ss
mul
push
rol
mov
add
mov
xor
iret
mov
pop
mov
loope
xor
xor
fild
and
repz
mov
cmp
adc
push
call
call
xchg
ror
sub
cwde
xchg
loope
xor
repnz
jns
aas
lods
and
pop
jo
mov
idiv
test
sub
es
das
xor
iret
in
jg
iret
mov
clc
mov
(bad)
sbb
xor
mov
neg
loopne
sub
pop
xchg
lock
adc
dec
cwde
mov
fisttp
scas
jo
mov
mov
lods
fwait
int3
test
nop
pop
outs
dec
fldenv
(bad)
inc
loope
call
into
scas
in
dec
inc
push
sti
loope
jp
dec
std
cdq
dec
xor
adc
mov
push
fidiv
sub
adc
ja
jle
adc
stc
cmc
jbe
ja
out
out
add
psllw
pop
retf
adc
and
scas
jo
clc
jmp
dec
sub
dec
jae
out
cwde
fdivr
lods
push
mov
xor
in
inc
cs
inc
cmp
int3
daa
mov
das
mov
mov
not
adc
data16
out
int3
test
fs
cli
mov
dec
sahf
iret
shl
and
xchg
es
sub
push
or
cmp
lea
repnz
rol
and
pop
pop
(bad)
popf
mov
ins
jle
pop
push
add
jl
mov
pop
add
and
icebp
xchg
and
std
int3
scas
cmp
adc
movs
fs
mov
or
outs
xchg
ret
imul
dec
lods
mov
daa
add
les
cmps
dec
test
mov
jae
(bad)
jo
mov
mov
push
in
sbb
rcl
lods
sub
pop
sar
fmul
dec
(bad)
int3
and
push
sahf
mov
call
clc
sti
push
mov
and
mov
imul
test
push
mov
adc
xor
shl
adc
xchg
adc
push
mov
push
inc
cmps
push
adc
cld
fistp
add
fidiv
cwde
jp
mov
sbb
inc
pusha
push
inc
test
inc
ins
inc
aaa
fs
aaa
jle
call
icebp
test
out
cmp
mov
jo
push
and
cli
adc
ss
xchg
aad
call
mov
test
pop
shl
loope
inc
ds
inc
and
pop
data16
int
xor
sti
inc
(bad)
cld
cmp
xchg
mov
addr16
outs
push
(bad)
xchg
imul
dec
push
mov
mov
and
lahf
adc
ds
mov
(bad)
xlat
leave
xlat
cmps
sub
inc
mov
int3
xchg
std
data16
in
inc
and
sub
pop
(bad)
loope
sub
inc
mov
xchg
ret
mov
(bad)
xchg
leave
js
xlat
jg
daa
aam
sbb
fiadd
(bad)
in
adc
mov
fs
push
add
mov
retf
into
jb
dec
sub
xor
or
dec
cmovs
scas
push
mov
fcom
aas
mov
jne
sub
adc
cld
out
fdiv
(bad)
jl
jo
call
sub
fild
fcom
inc
jge
mov
lods
sub
push
dec
fiadd
mov
mov
sbb
out
xchg
frstor
mov
mov
mov
clc
sub
mov
and
imul
xor
adc
out
test
and
cmps
adc
and
push
mov
cmp
call
jae
add
mov
sub
fiadd
(bad)
(bad)
les
or
add
or
in
or
loopne
pop
sub
out
clc
inc
rcr
or
push
stc
or
xor
enter
adc
xchg
jmp
push
jae
inc
das
mov
push
inc
jne
add
mov
xchg
pop
aad
andnps
rcr
pushf
and
sub
xor
or
ins
cdq
ins
ds
sbb
movs
add
dec
and
int3
ror
push
loopne
xor
(bad)
sub
mov
mov
jmp
in
xor
ja
cli
mov
fild
fsub
dec
shl
xor
push
jns
push
adc
arpl
lock
gs
lahf
dec
pop
cmp
cmp
lods
out
into
inc
pop
dec
and
imul
xor
(bad)
popa
cwde
out
mov
add
repz
addr16
mov
sub
push
mov
jecxz
dec
pop
cdq
test
xchg
(bad)
sbb
jle
call
gs
sbb
cmp
outs
jg
xchg
test
stc
cmc
mov
dec
push
xchg
test
(bad)
in
bound
mov
push
pop
cld
inc
xor
cmps
inc
in
dec
pop
jo
jo
dec
pushf
aaa
pop
xchg
add
push
rol
inc
push
lock
push
add
cmp
dec
cmp
mov
push
outs
jne
dec
cs
adc
jg
adc
in
dec
jge
(bad)
xor
xchg
(bad)
dec
lock
adc
retf
and
push
xor
pcmpgtb
ss
jb
sub
or
out
pop
or
xchg
fisub
cmp
mov
shl
fild
mov
shr
and
xor
push
dec
dec
push
push
dec
jecxz
xchg
dec
out
dec
(bad)
mov
push
and
fdiv
cmp
and
lahf
xchg
cmps
retf
shl
dec
cmp
push
ins
imul
xchg
movs
std
(bad)
fist
ret
push
daa
pop
adc
or
inc
stos
xchg
lds
sub
inc
sub
std
loop
or
jns
and
jle
push
idiv
shr
or
mov
xchg
push
push
(bad)
cmp
or
movs
jae
mov
mov
inc
pop
xchg
int3
dec
cmp
push
push
mov
and
pop
loopne
test
dec
shr
ffreep
xchg
arpl
(bad)
ins
test
test
ror
(bad)
xchg
aas
rcl
jp
jbe
cmps
les
cld
xchg
jo
in
sti
icebp
push
xchg
jae
fisubr
and
dec
retf
retf
dec
push
mov
pop
mov
es
push
stc
jnp
movs
xchg
push
stc
xor
stos
(bad)
jns
push
mov
fadd
cmps
mov
(bad)
mov
fwait
sub
jmp
or
xor
(bad)
dec
ss
lock
lock
std
ret
(bad)
in
adc
outs
and
jge
cli
sub
in
xor
add
test
mov
mov
mov
call
rcl
inc
pmaxsw
fldpi
(bad)
rol
mov
(bad)
daa
inc
mov
enter
sub
nop
dec
dec
and
lods
or
adc
test
in
sbb
inc
push
pop
adc
and
dec
sub
pop
fild
in
inc
adc
aaa
sbb
dec
data16
aad
cmp
adc
in
jmp
test
ins
or
jmp
cmp
popa
mov
sbb
dec
gs
mov
movs
aam
stc
rcl
push
pop
shl
(bad)
mov
fdiv
lea
lahf
int3
std
je
and
shr
dec
ret
mov
and
mov
gs
push
movs
scas
push
imul
ss
ficomp
cld
xlat
dec
dec
sbb
popa
sub
jae
cmp
rcl
cmps
pop
mov
cmp
clc
add
(bad)
popf
aaa
mov
pushf
xchg
jl
jp
nop
test
sahf
mov
push
std
in
pop
sub
adc
aas
fdivr
jge
xchg
ja
adc
out
add
int
push
scas
in
sahf
pop
ins
mov
push
sub
fldcw
test
push
mov
nop
repz
sbb
aaa
repnz
push
adc
mov
add
fbld
sub
sub
or
sub
and
xchg
add
mov
gs
pop
std
jne
repz
cmc
in
int
mov
cmc
push
pop
movs
mov
stos
fstp
and
sub
shl
sahf
(bad)
rcr
jae
lahf
out
gs
test
adc
or
rol
mov
into
jecxz
jbe
dec
inc
adc
in
aas
iret
xor
pop
sub
xor
inc
mov
fnstsw
dec
mov
inc
cmp
mov
dec
push
cmps
and
ror
sbb
inc
add
gs
adc
out
jae
cmp
inc
mov
popa
retf
scas
rol
mov
mov
imul
or
ret
mov
shl
mov
mov
and
in
sub
or
cdq
mov
xchg
ss
jmp
out
mov
cmp
fwait
ret
xor
cmp
mov
scas
pop
push
call
adc
jmp
xlat
data16
jmp
xchg
pusha
push
cmp
push
mov
xchg
dec
fcomp
ret
call
(bad)
std
and
inc
outs
mov
jmp
cld
cmp
pushf
(bad)
fnsave
test
fmul
xor
(bad)
aaa
ret
cmp
ret
leave
adc
lds
icebp
dec
and
int3
das
push
jle
pop
fmul
push
js
xchg
retf
xor
gs
and
cmp
inc
jle
mov
(bad)
fst
lock
popf
jmp
cmp
sahf
mov
mov
or
inc
loopne
sbb
adc
xor
stos
std
shl
lds
push
mov
xlat
retf
pop
ret
fcomp
mov
repz
dec
mov
idiv
sub
adc
popf
sbb
inc
cmp
add
jg
fstp
sub
loopne
lahf
push
xchg
or
jns
mov
add
fsubr
sbb
pop
adc
cmps
mov
loop
mov
cdq
and
ss
mov
cmp
ror
cld
xor
and
jp
setp
addr16
mov
sub
and
movs
adc
outs
sub
fmul
out
mov
push
sub
push
dec
dec
gs
sub
sub
adc
neg
stos
sbb
movs
pop
jg
jg
(bad)
rol
addr16
test
shr
fiadd
movs
outs
sbb
aam
and
dec
push
test
xchg
fdivr
xchg
xor
inc
daa
push
ins
sbb
rcl
nop
mov
and
and
pop
jle
or
aaa
or
xchg
(bad)
or
jo
out
sbb
pop
bound
cmp
jp
mov
jno
fmul
xchg
dec
cmps
sub
mov
jmp
ja
pop
jge
push
repz
inc
inc
jg
dec
loope
jmp
or
imul
rol
out
mov
xchg
sub
pop
pop
add
jbe
mov
inc
xchg
out
hlt
ja
xchg
out
add
fistp
aad
out
jl
movs
add
push
or
adc
cmp
pushf
es
popa
(bad)
out
sti
in
pop
xor
dec
dec
xor
iret
mov
dec
mov
lds
add
mov
icebp
ror
mov
loope
ss
push
pop
inc
sub
xchg
xchg
add
retf
rol
add
in
popf
(bad)
xor
mov
cmc
dec
aas
and
dec
lods
aas
cmc
jnp
push
pop
movs
and
ja
add
xchg
mov
jl
js
xcrypt-cbc
cmps
xlat
mov
cmp
pushf
leave
leave
xor
add
sub
sub
push
in
fidiv
test
into
adc
arpl
inc
cmp
pop
mov
movs
cld
adc
mov
in
adc
inc
or
les
jnp
jbe
not
sub
pop
add
aaa
push
ins
test
popf
into
adc
add
retf
jmp
mov
fadd
mov
cmp
mov
fcmovnbe
shl
inc
xlat
jbe
scas
(bad)
push
nop
outs
and
mov
aas
icebp
lds
dec
dec
mov
sbb
push
push
cmp
cmp
lods
out
pusha
xchg
cld
adc
mov
(bad)
sub
mov
jne
sbb
pop
mov
sbb
pop
lods
cmp
mov
loope
clc
das
xor
adc
outs
jmp
xchg
je
sub
mov
sbb
adc
inc
in
int3
bound
sbb
mov
in
and
iret
jbe
and
or
clc
(bad)
out
das
jp
sbb
loope
add
push
dec
mov
mov
shl
cmp
adc
cmps
retf
or
cmp
inc
int
ja
ins
addr16
push
mov
dec
jmp
call
cli
and
cmc
ins
ss
jl
or
xchg
inc
add
fs
mov
enter
outs
(bad)
or
xchg
mov
jbe
scas
xchg
sub
mov
in
pop
or
push
and
retf
cmp
sti
ins
xchg
iret
test
aaa
clc
ins
or
and
inc
test
and
sub
xchg
adc
mov
mov
cmp
mov
bound
jg
fcmovb
or
add
scas
mov
ja
jl
es
push
xor
mov
sbb
jmp
mov
xor
cmps
mov
jmp
loop
loope
mov
scas
fisubr
(bad)
cmp
pop
jle
xor
jbe
daa
cmp
in
sti
in
daa
loopne
cmp
cmp
pusha
(bad)
out
je
inc
lock
and
dec
shl
data16
aam
popa
mov
push
xchg
pop
icebp
xchg
daa
sar
dec
mov
(bad)
retf
enter
mov
pushf
cmps
and
lock
inc
mov
mov
xchg
and
aad
and
xor
adc
dec
jbe
je
and
or
rcr
push
in
and
sar
ret
mov
hlt
add
dec
sbb
push
xor
(bad)
push
add
adc
pop
add
cmp
icebp
retf
jns
outs
sbb
je
les
push
push
(bad)
cwde
sti
xchg
cmps
inc
outs
jbe
xlat
push
sbb
sbb
ret
sbb
jle
mov
in
(bad)
sti
and
imul
lock
sbb
sub
call
push
push
inc
and
jl
mov
xchg
mov
and
loop
js
repnz
clc
sar
sub
jmp
xor
push
lds
scas
hlt
ror
inc
std
mov
mov
fimul
xchg
test
or
adc
pop
xchg
adc
loop
es
cs
sbb
xchg
lahf
sub
inc
fcmovu
pop
imul
add
les
xor
adc
bound
xchg
lea
call
and
stos
sbb
fs
in
std
xchg
loop
pop
sbb
movs
imul
rcr
adc
mov
lea
aas
add
jbe
mov
lea
or
aam
out
mov
aam
xchg
pop
mov
enter
xor
sbb
xchg
test
inc
shl
jmp
shl
push
sbb
mov
repnz
jns
sub
pop
stos
imul
(bad)
sti
push
pop
dec
xchg
inc
rcr
imul
outs
dec
ja
pop
and
xor
xchg
sahf
sbb
xor
pop
mov
stos
pop
mov
ds
enter
je
cld
bound
inc
sbb
or
arpl
std
lahf
mov
sub
mov
nop
mov
xlat
jl
sub
int3
add
into
test
out
sub
test
xor
psrlq
ds
test
faddp
push
sub
call
in
xor
jge
push
cwde
clc
xor
jp
enter
jmp
pop
std
pusha
add
in
pushf
scas
pop
pop
add
push
inc
ins
inc
lds
xchg
or
dec
mov
cmps
xchg
dec
pop
std
fs
aad
(bad)
mov
ret
cmp
lahf
jbe
push
call
or
stos
push
int
inc
or
mov
push
dec
(bad)
aaa
cdq
jg
xlat
es
into
jle
mov
inc
xor
retf
xchg
add
or
inc
mov
dec
in
xor
or
add
mov
cmp
sub
movs
mov
mov
mov
and
pop
test
dec
xchg
cdq
inc
mov
ins
inc
aaa
(bad)
and
movs
(bad)
scas
add
mov
cmp
fistp
jae
pop
lahf
out
cs
sub
cmp
and
outs
gs
jmp
xlat
addr16
sub
cmps
cmp
inc
mov
lahf
pushf
retf
or
setb
cwde
mov
ins
xor
lods
mov
mov
cld
neg
test
pop
aam
fnstcw
cli
pop
adc
in
inc
inc
xchg
sub
jecxz
mov
jge
aaa
add
fimul
outs
add
loopne
test
data16
loopne
mov
jecxz
push
iret
sti
inc
fist
cli
pop
xor
jmp
add
outs
stos
nop
hlt
push
jno
imul
adc
xchg
js
jo
test
daa
lea
sbb
jae
pop
push
daa
mov
out
mov
out
loop
pop
ja
shl
sub
ins
dec
jo
pushf
jnp
push
cwde
xlat
(bad)
push
pop
xchg
popa
dec
adc
cpuid
test
les
xchg
push
fdiv
inc
push
mov
push
mov
jne
pop
mov
ret
push
push
bound
jmp
inc
in
jle
(bad)
aas
arpl
aas
lock
pop
outs
aad
cmp
hlt
cdq
jnp
xor
cmp
inc
repz
cmp
push
(bad)
mov
xchg
sub
push
neg
xchg
imul
add
aam
xchg
xchg
out
fs
jnp
cmps
mov
jae
cmp
jae
repnz
and
rcr
rcr
outs
mov
xchg
pop
stos
dec
movd
in
push
sbb
aam
mov
int
mov
xor
retf
xor
xlat
mov
cmp
mov
movs
inc
mov
xor
ror
ret
add
outs
or
pop
fstp
cdq
stos
mov
push
add
dec
mov
mov
mov
nop
je
jne
dec
std
pushf
ret
inc
push
push
sar
add
sbb
adc
test
movs
sbb
sub
jp
jbe
ja
or
mov
jmp
lds
jo
adc
cmp
adc
test
adc
xchg
lahf
imul
movs
lock
push
xchg
lods
pusha
dec
jne
loop
fisub
mov
repnz
mov
iret
pop
popa
xchg
dec
fidivr
add
scas
stc
shl
ret
add
sbb
in
mov
mov
lea
mov
out
pop
fstp
movs
mov
cmp
push
rcl
(bad)
push
sbb
and
and
mov
icebp
mov
lods
adc
mov
add
call
ret
mov
ror
test
fs
push
and
call
add
das
xor
rcl
jmp
sbb
rcl
pop
jge
pop
mov
sub
push
rol
daa
jmp
mov
dec
push
mov
xchg
jmp
int
aad
repnz
cmp
test
scas
sub
nop
or
imul
lods
adc
xlat
pop
adc
mov
cmp
call
rol
inc
mov
cli
add
movs
clc
mov
loope
sti
xor
cmc
mov
xchg
jmp
jo
rcl
push
outs
mov
dec
mov
or
inc
mov
cmp
es
jns
test
or
and
aas
pop
xor
inc
jecxz
xchg
or
and
fisttp
fs
push
je
jg
es
mov
pop
push
add
(bad)
mov
add
inc
mov
push
and
call
xor
test
pop
jmp
lock
xor
xor
call
jg
sti
adc
ds
mov
pop
mov
ds
inc
inc
cmp
mov
mov
inc
xlat
inc
mov
pusha
dec
stos
mov
inc
das
leave
inc
xchg
add
xor
pusha
shl
jle
push
dec
int3
sahf
ins
cmps
xor
(bad)
loope
pusha
xor
pop
jb
jbe
add
test
fdivr
jne
add
(bad)
mov
addr16
mov
cwde
lock
push
ins
pop
pop
lahf
ja
cld
inc
rcl
pop
cld
repz
call
and
xlat
popa
mov
sbb
lea
mov
fwait
mov
pop
ds
adc
hlt
sub
(bad)
dec
jmp
(bad)
mov
mov
inc
mov
sti
add
jno
neg
cmp
push
ret
stos
xchg
xor
int
(bad)
test
mov
stos
sbb
and
int3
data16
mov
dec
xchg
xchg
call
fimul
in
outs
inc
stos
pop
mov
fnstcw
mov
cmp
jns
jg
jne
daa
xlat
stos
cmp
sub
inc
mov
cmp
or
mov
into
retf
mov
shr
xchg
outs
movs
push
retf
cwde
push
test
and
loop
inc
or
in
rcl
inc
cmp
loop
sub
adc
addr16
mov
ss
out
inc
jb
out
mov
out
mov
jg
dec
not
scas
cwde
xor
adc
movs
cmp
ja
enter
cdq
add
or
mov
cmps
call
call
iret
xor
fsub
ins
mov
inc
and
arpl
push
jb
or
std
lods
push
push
(bad)
movs
loop
(bad)
pop
(bad)
sub
xchg
retf
loopne
call
or
hlt
scas
imul
movs
mov
xchg
add
mov
cmovle
loop
pop
das
lock
js
stc
push
inc
or
sar
mov
pop
add
ja
pop
jnp
addr16
scas
mov
fisubr
(bad)
fs
mov
xchg
push
shr
push
push
in
xchg
pop
das
and
sub
add
pop
mov
(bad)
data16
lds
imul
int3
mov
stos
outs
aaa
data16
aad
arpl
dec
or
gs
aas
and
jle
jno
sbb
add
inc
iret
or
xlat
outs
xchg
dec
sbb
test
frstor
jnp
mov
fwait
inc
xor
jecxz
mov
test
mov
ss
fucom
sub
out
inc
xlat
dec
xchg
mov
mov
mov
out
test
and
dec
out
out
pop
xor
mov
jmp
sub
shl
cmp
dec
ret
les
outs
push
stc
mov
loopne
fcomp
mov
loope
and
loopne
cwde
aas
cwde
in
leave
or
jne
ret
sbb
cmps
or
cli
rol
push
dec
or
call
stos
xor
cld
lock
stc
dec
cli
xor
sbb
mov
jmp
in
enter
mov
shr
dec
cli
inc
jl
dec
js
or
retf
(bad)
sub
shr
cld
mov
adc
xlat
repz
popf
pop
hlt
dec
or
push
adc
lahf
push
xchg
loope
dec
mov
daa
sbb
(bad)
pop
shr
xchg
dec
jo
mov
cmp
(bad)
adc
sbb
sub
sahf
aaa
xchg
mul
jbe
mov
lock
add
add
retf
pop
push
mov
add
cmc
adc
ror
mov
mov
jb
dec
(bad)
iret
lock
mov
into
xchg
das
cmps
cmps
and
bound
lds
lods
clc
ret
xor
outs
inc
dec
repz
icebp
ja
sar
mov
ret
sahf
cmp
inc
bsr
or
push
sub
cs
out
fistp
jl
aaa
rcl
or
or
push
xchg
or
sub
cmp
xchg
mov
outs
jecxz
mov
fisttp
pop
push
push
xor
push
ror
sahf
ret
sbb
pusha
inc
xchg
je
or
rcl
xchg
mov
(bad)
or
inc
sbb
mov
jl
add
out
retf
push
cli
aam
sub
dec
movs
cmp
cmp
pushf
movs
je
mov
mov
lods
ins
daa
jno
jmp
push
pop
xchg
div
mov
int
shr
lds
enter
sbb
push
inc
leave
push
int3
adc
fadd
push
ret
nop
gs
add
dec
loop
(bad)
hlt
or
dec
push
pushf
popw
in
lea
mov
adc
mov
ror
lods
fisub
sub
sub
idiv
push
int
xchg
dec
mov
stos
xor
test
loopne
sti
jno
scas
popf
mov
lock
mov
push
inc
mov
xchg
xchg
adc
fbstp
cwde
xchg
mov
shl
out
mov
js
cmp
pop
jbe
or
add
jo
pop
adc
mov
int
sub
stc
in
cs
ficom
es
outs
sub
in
pusha
imul
mov
dec
push
addr16
cwde
push
lock
in
ds
mov
push
dec
sti
mov
xor
cmp
test
int3
mov
or
xlat
inc
sub
enter
jmp
aad
in
retf
inc
adc
fist
inc
repnz
or
fsubp
mov
daa
pop
pop
xor
hlt
test
sahf
dec
jecxz
and
div
or
sbb
aad
mov
(bad)
sbb
push
cmc
or
mov
outs
and
or
push
adc
movs
jle
sbb
arpl
mov
xchg
jg
jecxz
push
ins
out
adc
cmp
iret
fist
loope
dec
cmp
fbld
ror
cmp
jbe
in
or
sbb
inc
xor
jo
aas
cli
jg
dec
je
cli
je
dec
mul
jbe
ret
push
loop
mov
mov
fcomp
dec
lds
mov
add
mov
mov
jge
aaa
fwait
or
mov
xchg
test
les
mov
popf
loop
pop
mov
inc
xchg
add
nop
or
enter
and
cli
outs
mov
xchg
mov
pusha
pop
jl
adc
(bad)
pop
pop
inc
movs
adc
xor
loope
or
or
jne
repnz
and
pusha
(bad)
aas
cmp
ret
dec
mov
mov
or
stos
(bad)
fdiv
and
push
rcr
retf
fisttp
add
push
pusha
movs
xor
(bad)
pop
cmps
pop
cmc
mov
pop
aaa
ja
jg
mov
push
call
xor
xor
adc
mov
movs
mov
sbb
push
and
mov
sbb
and
aas
dec
stos
clc
arpl
add
and
sub
clc
dec
out
test
int3
pop
cmc
popf
in
mov
shl
imul
fidiv
jmp
hlt
repz
sahf
test
test
inc
cld
sbb
not
pop
mov
lea
dec
jns
bnd
mov
cmp
inc
push
out
sbb
mov
test
rol
jg
cmp
pop
pop
xor
push
and
cmp
pop
jns
xchg
cmp
sub
ja
aas
jae
loopne
push
ds
xor
push
aad
movs
and
loope
int3
pushf
or
dec
adc
aam
fild
mov
aaa
xchg
std
xchg
push
jg
test
std
xchg
mov
xor
or
rol
xor
retf
scas
and
jmpw
jne
mov
fwait
enter
es
repz
push
mov
ret
push
jge
push
dec
jb
mov
outs
fcmovnb
loop
cmc
sbb
gs
or
push
mov
mov
mov
lods
repnz
mov
xchg
outs
in
call
not
cmp
mov
ror
fucom
inc
shl
add
(bad)
jbe
cmps
mov
cmc
out
push
lds
cld
jg
xchg
mov
aad
sti
and
sub
out
sub
dec
lock
sahf
lods
sub
adc
dec
pop
fwait
inc
ret
cs
(bad)
and
repz
adc
test
shr
iret
and
hlt
dec
in
inc
jno
push
xchg
aam
mov
mov
mov
test
mov
mov
les
push
adc
cmp
out
sar
mov
inc
mov
stos
loop
sub
xchg
push
test
jp
xor
call
add
or
pop
shl
sub
icebp
fwait
outs
pushf
add
dec
jae
ror
adc
loopne
call
xor
and
mov
cld
sbb
cmp
lods
push
mov
xor
sbb
js
in
adc
xlat
push
add
clc
cmc
mov
data16
push
ins
mov
stos
push
cmp
stos
pop
xchg
daa
mov
dec
cmc
mov
clc
dec
fsub
retf
loope
adc
sbb
enter
jo
fdivr
test
push
call
and
jmp
fdivr
(bad)
lock
jne
(bad)
in
movs
(bad)
in
ins
sub
jmp
test
stc
nop
xchg
clc
test
adc
pop
adc
cmp
sub
cs
push
adc
je
movs
stos
add
retf
in
daa
cwde
pop
popf
jns
mov
sub
mov
cmp
mov
or
mov
adc
add
mov
add
push
dec
sar
xor
movs
mov
pushf
stos
push
cdq
ret
mov
mov
ss
push
cmp
mov
lods
xlat
push
cmp
les
mov
push
les
hlt
gs
dec
outs
in
fcom
cwde
mov
mov
fistp
(bad)
out
(bad)
mov
fcomi
push
int
stos
addr16
daa
pop
outs
call
scas
cmp
jmp
aam
out
and
pusha
fs
xchg
mov
test
cmp
push
sbb
in
arpl
pop
xor
into
sub
sar
(bad)
out
lods
ficomp
das
lea
or
movs
jecxz
mul
adc
stos
xor
jno
adc
rcr
aad
test
xor
pop
xchg
aaa
(bad)
test
add
xchg
cwde
push
add
leave
ror
push
and
jo
fdiv
pusha
(bad)
ss
and
out
cwde
lods
inc
lods
jns
(bad)
ret
mov
mov
imul
push
nop
pop
out
dec
xor
sbb
loope
xchg
adc
ror
cmp
lods
fimul
sbb
xlat
je
xor
jns
or
xchg
jmp
sbb
fs
jb
out
shr
icebp
dec
sti
inc
mov
pop
add
(bad)
sbb
sar
fbld
or
jecxz
mov
mov
les
movs
mov
ror
xor
mov
xchg
xor
cmp
push
cdq
in
push
mov
rcl
xor
call
jecxz
add
icebp
ja
int
and
xchg
ins
mov
dec
fisttp
or
adc
bound
movs
loop
sti
mov
xor
loope
ja
xor
mov
sbb
jmp
rcl
jbe
sub
or
pop
sub
fidivr
dec
jecxz
cwde
cld
vaddsubpd
push
stc
jg
test
cmp
cmc
add
test
dec
mov
ret
clc
aam
pop
ret
sbb
pushf
sbb
loopne
mov
xor
or
in
and
cmp
pop
movs
xor
js
ss
inc
dec
adc
sahf
sbb
push
in
scas
xchg
loope
mov
stos
dec
mov
adc
inc
bound
repz
ds
addr16
cs
arpl
mov
xor
mov
or
or
cmp
xchg
aas
cmc
retf
mov
in
push
imul
es
retf
shl
call
jno
cmc
ficomp
mov
pop
add
imul
push
int3
push
sbb
aas
dec
fwait
push
pop
mov
dec
cmp
cmps
div
into
mov
push
mov
xor
pop
push
sbb
into
sub
and
push
inc
sub
push
push
shl
dec
xchg
and
test
rcr
pop
out
pop
mov
jae
loope
test
xor
jle
dec
sub
sahf
and
es
mov
or
jb
cmps
jle
cmp
cmp
fisubr
add
cmps
js
movs
or
fs
cmc
(bad)
test
lahf
push
push
and
inc
mov
bnd
xchg
std
retf
xchg
ja
sub
inc
ds
sub
cmp
jae
push
(bad)
jnp
stc
ret
scas
jbe
mov
xor
in
sub
mov
push
rol
lock
sbb
mov
xchg
jg
push
inc
sub
mov
push
xor
push
js
dec
aam
ret
ja
jbe
rcr
and
sahf
push
jne
mov
jb
mov
xchg
push
pop
mov
pop
xor
jecxz
xchg
pop
inc
(bad)
adc
xchg
adc
es
mov
xor
inc
or
shl
sbb
mov
rcr
test
fld
(bad)
mov
mov
fcmovnbe
call
mov
das
cli
rcl
ins
cmp
xor
loope
into
repnz
cmp
push
mov
jnp
stos
sahf
test
(bad)
retf
mov
int
cmp
pop
mov
leave
or
inc
icebp
sub
repnz
sub
in
call
dec
lahf
pushf
push
stc
mov
fwait
pop
loope
jns
aad
dec
pop
dec
jnp
rol
aaa
xor
pusha
test
xchg
mov
mov
add
lock
mov
cmps
dec
hlt
xor
mov
mov
pop
push
test
dec
sub
outs
fisttp
bound
mov
aad
out
addr16
or
rcr
les
outs
pop
and
jle
xor
jbe
shr
lds
sti
dec
jl
ins
pop
sbb
cmps
xor
dec
push
enter
(bad)
pop
iret
(bad)
pop
rcr
dec
cdq
fcmovbe
clc
test
mov
std
lods
mov
in
stos
pushf
add
push
mov
retf
pusha
loop
test
ret
add
and
xor
sbb
mov
jmp
jp
jg
test
xchg
jmp
dec
mov
test
scas
cwde
dec
fiadd
in
shl
add
inc
cmp
cmp
clc
push
or
or
and
(bad)
cmp
xchg
stos
and
js
jle
les
stos
(bad)
js
xchg
mov
inc
loopne
stos
loopne
mov
mov
sub
pop
inc
cmp
mov
frstor
in
call
xor
out
ins
cli
or
sahf
(bad)
sar
inc
aas
lock
fdiv
mov
test
cdq
pshufw
(bad)
and
and
rep
cld
loope
xor
or
cmp
mov
adc
mov
sub
mov
cmp
mov
fwait
retf
push
jecxz
jne
outs
pop
xor
test
repz
mov
sbb
dec
cmp
mov
in
dec
mov
xor
jp
repz
jne
jne
or
push
xor
jne
adc
push
mov
add
fdiv
ror
dec
repnz
pop
outs
pop
and
push
fwait
mov
push
inc
mov
or
call
mov
cmp
add
lds
pop
add
xor
adc
ror
div
mov
jnp
fidivr
push
adc
sub
std
loope
movs
and
mov
popf
jmp
adc
ins
cmps
inc
jge
scas
repz
outs
cld
aad
add
outs
xor
mov
push
mov
loope
je
jg
push
xlat
mov
inc
(bad)
popa
ret
sub
aam
add
inc
cmove
fadd
pop
xchg
sti
mov
sbb
mov
inc
int3
dec
xchg
dec
mov
pop
inc
call
shl
leave
mov
sub
ja
out
mov
outs
mov
test
add
push
xor
mov
clc
hlt
repnz
mov
call
or
sub
das
adc
xchg
xor
sbb
sub
rol
mov
cmps
test
fs
and
sbb
pop
mov
sub
enter
dec
xlat
ja
mov
jns
cmp
es
mov
adc
int
add
add
pop
call
loop
stos
pop
or
ja
xchg
mov
dec
and
sub
int
and
xor
push
sub
xchg
xor
jnp
lahf
call
xchg
mov
xchg
out
out
test
out
mov
xor
aam
jmp
out
cmp
mov
int
std
dec
cmps
dec
div
xchg
inc
dec
cmps
and
cwde
mov
jle
arpl
mov
neg
stos
add
jl
xchg
adc
push
(bad)
ss
(bad)
mov
push
mov
and
add
out
and
sbb
test
cmps
imul
movs
pusha
aam
inc
add
rcl
mov
pop
rcr
aad
shr
cmp
jl
mov
jb
xchg
jmp
aam
sbb
jg
std
mov
push
pop
sub
jbe
pushf
adc
xor
popa
mov
push
aaa
inc
add
nop
iret
aas
fnstcw
xor
or
mov
test
mov
pop
cmp
loop
push
mov
or
push
mov
push
daa
mov
jp
cld
mov
cmp
pop
mov
pushf
jle
pop
lahf
fwait
repnz
or
rol
jmp
jge
mov
pop
(bad)
and
test
push
jbe
leave
loopne
dec
xchg
sbb
mov
imul
mov
rcl
loop
clc
cwde
out
shr
imul
mov
cmp
stos
lods
cmp
dec
ret
fmulp
mov
sti
call
test
jnp
sub
movs
cmps
push
rol
inc
loopne
test
adc
sti
(bad)
push
cli
inc
enter
xor
jae
xor
(bad)
adc
ins
(bad)
pop
dec
or
sub
cmp
in
into
pop
scas
int
hlt
inc
popf
xchg
dec
push
jns
cmp
xchg
xchg
lock
add
jg
test
cld
pop
test
out
ss
xchg
xor
pushf
cwde
loope
(bad)
mov
dec
adc
mov
test
dec
je
ins
mov
mov
mov
ins
shl
inc
push
sub
mov
stc
push
movs
fstp
pop
and
outs
loopne
repz
inc
scas
xchg
cmp
jmp
lahf
cld
sbb
fmul
call
sbb
das
sbb
aaa
cmps
scas
popf
push
in
xchg
pusha
cmp
retf
scas
ss
aad
or
push
pop
xor
addr16
fdiv
popf
push
popa
jmp
xor
aam
cmp
in
cmp
out
mov
test
ja
jge
jns
mov
mov
test
in
stos
fwait
push
or
cmc
inc
xor
into
xor
sub
pop
test
cmp
aas
inc
repnz
test
scas
jl
sub
adc
and
mov
retf
inc
ret
cld
scas
movs
xchg
jno
add
jne
repz
test
inc
push
fnstenv
sti
mov
arpl
sti
(bad)
ja
sbb
icebp
in
cdq
cmp
sbb
jge
add
or
sub
inc
(bad)
cli
call
shrd
cmc
pop
(bad)
test
jle
ficomp
sub
adc
loopne
adc
cmp
dec
jns
sbb
mov
pop
inc
fcom
call
scas
aad
stos
fadd
cs
lds
pop
stos
or
jnp
push
jl
mov
fsub
sbb
xchg
xchg
or
fcom
jecxz
sub
add
jb
leave
add
addr16
ficomp
jmp
int3
rcl
inc
mov
popa
add
mov
(bad)
fsubp
mov
jge
cmps
sub
test
push
in
mov
ret
or
push
push
mov
into
cli
and
push
je
rcr
push
xchg
mov
mov
mov
push
jbe
jmp
push
pop
div
test
inc
add
cld
mov
sbb
clc
icebp
mov
sbb
xchg
movs
es
add
mov
retf
ss
mov
shl
xor
and
sbb
int
dec
and
and
add
lods
push
aas
outs
mov
dec
(bad)
adc
rol
jno
adc
std
or
sbb
fwait
mov
xlat
gs
sbb
xchg
sbb
ins
repz
and
add
outs
cmp
js
jno
outs
push
and
mov
push
mov
mov
add
and
jg
popf
inc
ja
nop
clc
ins
pop
nop
mov
lock
and
jno
pop
jecxz
arpl
jp
loopne
loopne
mov
xor
push
test
mov
mov
mov
shl
dec
adc
fistp
sub
ret
nop
add
es
mov
popf
sbb
fwait
aam
call
dec
mov
clc
not
mov
cmp
rcl
rol
rol
xchg
in
test
dec
pop
jne
xor
pop
ja
add
xchg
add
sub
loop
mov
rol
xor
shl
repz
in
and
push
and
sahf
push
xchg
outs
xchg
sti
pop
pop
sub
enter
xchg
arpl
out
loop
gs
daa
and
popa
nop
(bad)
imul
pop
dec
hlt
dec
push
or
(bad)
push
outs
hlt
add
lods
out
mov
lock
pop
mov
jne
cmpxchg8b
jle
mov
test
hlt
pop
dec
lock
adc
es
xor
ja
movs
fstp
cmp
outs
inc
dec
dec
pop
(bad)
xor
aam
shr
inc
mov
adc
dec
sub
xchg
mov
loop
inc
hlt
inc
hlt
cwde
fisttp
pop
sti
fsubr
adc
icebp
ja
jbe
enter
pushf
pop
xchg
jp
in
mov
fsub
and
sbb
(bad)
sub
sub
int
clc
cmps
cmp
iret
fwait
adc
stos
mov
push
cld
mov
sahf
iret
ret
mov
stos
jle
aaa
xchg
xchg
xchg
adc
test
jb
push
movs
dec
mov
mov
mov
dec
sbb
xor
aas
add
inc
and
xchg
lahf
cmps
and
mov
adc
cmp
ret
adc
int
movs
jbe
ds
mov
adc
inc
xlat
push
cmp
add
mov
mov
and
push
outs
fcomp
dec
das
ja
adc
int
xchg
push
mov
mov
or
sub
or
ins
hlt
jp
ins
add
lahf
cs
lea
sar
adc
loope
push
fs
push
jae
lahf
add
adc
push
es
cmp
fstp
pop
idiv
retf
or
std
mov
je
cmp
call
mov
inc
cmps
jbe
adc
int3
lahf
or
xor
(bad)
lock
sbb
add
outs
jo
aam
push
ja
(bad)
mov
dec
daa
pop
adc
std
cmp
je
pushf
and
es
div
daa
cld
xchg
(bad)
mov
ins
(bad)
scas
hlt
sbb
inc
sahf
and
int
fwait
test
adc
cmp
pop
cmps
ins
cmp
out
push
imul
adc
mov
in
aam
sub
out
test
jno
adc
ja
mov
in
retf
stos
push
mov
fistp
lock
shl
inc
adc
fucomp
or
sar
or
xchg
add
leave
push
xchg
out
dec
scas
out
xor
fsubr
adc
or
pop
daa
mov
xchg
mov
xchg
add
(bad)
fcomp
mov
dec
mov
xor
sub
inc
cld
add
enter
imul
ror
xchg
inc
mov
pmaddwd
add
xlat
cmps
lock
xor
arpl
or
test
add
fwait
cmp
mov
or
ficom
je
loope
fwait
ret
ds
stc
inc
not
jnp
dec
clc
push
scas
(bad)
xor
shl
mov
add
mov
push
iret
sbb
stc
fcomi
add
sbb
sti
(bad)
aas
mov
and
in
sbb
repnz
fdivr
das
mov
movs
sub
add
fldenv
and
jp
dec
rcl
or
pop
idiv
adc
bound
cwde
xor
inc
xor
aaa
inc
repz
loop
(bad)
jbe
push
push
jecxz
and
pop
mov
xchg
mov
jl
popa
push
xor
add
daa
out
cmp
xchg
mov
leave
test
enter
std
out
(bad)
jne
mov
out
sub
sti
jmp
pop
mov
sbb
push
pop
fild
cli
fnsave
mov
enter
push
or
xchg
xlat
sahf
xor
je
cmps
sti
aam
or
cmp
scas
ret
(bad)
xor
sub
mov
sbb
fstp
sub
add
sets
jae
push
imul
frstor
(bad)
mov
call
pop
sub
push
movs
add
dec
and
pop
repnz
(bad)
addr16
out
jmp
cld
or
jle
cmps
xchg
ror
out
cmp
or
scas
adc
add
mov
adc
mov
inc
iret
xor
les
test
iret
mov
fs
imul
inc
add
and
imul
out
mov
mov
xor
inc
aad
mov
stc
(bad)
stc
mov
pop
xchg
sahf
pop
add
cwde
sub
fdiv
loope
lock
dec
push
inc
push
cmp
sub
xlat
in
cs
(bad)
adc
sbb
(bad)
ret
imul
or
xchg
and
xor
mov
int
(bad)
retf
push
dec
std
jecxz
loop
or
sbb
mov
fcmovne
cmp
aam
fmul
ds
xor
scas
pop
test
ja
adc
shl
dec
add
jb
and
out
test
outs
cmp
inc
cdq
or
ret
push
add
mov
or
das
lock
movs
cwde
xor
jge
jp
enter
cmp
and
(bad)
adc
ficomp
(bad)
fcmove
mov
js
arpl
leave
xor
nop
dec
(bad)
jg
movs
mov
cmp
mov
lea
movs
xlat
out
xor
sar
inc
adc
pop
cli
shl
push
push
ret
lods
dec
int3
jmp
pop
gs
adc
jecxz
inc
mov
pop
jo
jmp
pop
sub
into
and
js
lods
into
xor
pop
push
or
call
rol
pop
xor
push
jne
das
pop
dec
push
inc
or
aad
push
arpl
inc
push
aaa
lock
mov
jmp
mov
cmps
xchg
imul
dec
push
mov
add
clc
lahf
stc
cld
push
push
jbe
mov
adc
fcomp
sbb
and
sbb
pushf
js
or
jns
loop
(bad)
cmps
in
(bad)
adc
fcomp
in
popa
or
mov
jmp
or
outs
std
adc
jns
mul
jo
mov
out
retf
add
xchg
push
or
xchg
sub
scas
mov
std
cwde
sbb
xor
sahf
mov
stos
adc
adc
aas
vpshlq
arpl
sbb
iret
aas
iret
sub
dec
icebp
jae
cmp
imul
in
popf
dec
push
mov
mov
adc
cld
lods
push
stos
jg
sub
test
push
and
adc
pop
in
popf
pop
cs
daa
sub
popf
mov
pop
mov
rol
retf
rcl
add
jbe
stc
mov
mov
sbb
or
mov
aam
es
nop
mov
into
inc
fstp
and
es
pushf
mov
daa
imul
cmp
jno
add
cmp
in
adc
cmp
popa
inc
add
movs
js
fsubr
mov
inc
pop
pop
dec
icebp
push
je
xor
inc
ja
jmp
std
std
cmp
xchg
and
adc
sub
add
pop
sub
out
es
in
xchg
pop
sub
sub
clc
(bad)
cmp
cmp
ror
call
mov
hlt
xlat
loopne
cmps
js
cmp
push
loopne
inc
push
cdq
jb
cdq
xlat
jo
cmp
and
outs
jge
sbb
xor
ja
sub
(bad)
icebp
lods
daa
je
into
call
cmc
or
stc
and
jns
daa
cdq
jmp
mov
jo
mov
mov
cli
inc
push
jle
jmp
scas
(bad)
pop
lods
fcomp
mov
(bad)
sbb
add
sahf
pop
mov
call
(bad)
int
adc
and
or
jg
push
jge
xlat
xchg
scas
clc
outs
outs
or
adc
sub
jns
push
dec
cmp
mov
icebp
out
ds
pop
pop
(bad)
cmc
sbb
fwait
jb
xchg
cmp
int
cmp
add
jmp
mov
mov
push
mov
stos
pop
fistp
inc
lods
adc
popf
and
addr16
mov
and
cmp
cdq
icebp
in
pop
sub
add
push
jle
xchg
xor
mov
mov
mov
add
out
test
push
int
(bad)
inc
dec
dec
pop
mov
jb
mov
mov
je
out
fwait
push
dec
add
pop
dec
jb
mov
rcr
inc
mov
aad
pavgw
outs
dec
pop
sti
push
add
cs
add
(bad)
push
gs
sbb
cmc
mov
jne
cs
aas
mov
xor
push
out
mov
jb
xor
jbe
(bad)
lds
aad
xchg
or
fcomp
call
and
push
call
push
adc
and
sub
xchg
push
push
cwde
jg
inc
dec
xchg
push
mov
mov
xor
pusha
dec
addr16
mov
imul
mov
fwait
add
pop
mov
sbb
xchg
xor
aas
ja
mov
add
cmps
add
add
(bad)
pop
pusha
pop
sub
cwde
retf
jo
push
pop
pop
inc
sbb
and
jp
or
pop
jns
fnstenv
inc
mov
aad
add
enter
xchg
pop
inc
and
dec
ret
push
mov
push
mov
push
jno
push
push
pop
xor
mov
data16
and
sbb
call
add
mov
popf
or
jmp
dec
loope
adc
dec
mov
in
mov
stos
movs
sar
imul
push
fild
dec
mov
push
sub
icebp
outs
daa
arpl
cmps
retf
jge
add
jo
pop
sub
in
rcr
cwde
repz
push
mov
pop
mov
pop
sbb
test
lods
movs
dec
jmp
(bad)
adc
xor
inc
enter
dec
sahf
ror
push
sar
pusha
push
pop
pop
rcr
hlt
add
stc
shr
mov
(bad)
jno
and
adc
call
ds
xchg
les
sbb
and
xchg
sbb
in
out
cs
sbb
mov
mov
add
jno
xchg
jmp
xchg
jg
retf
rcl
fidiv
cmp
push
or
bound
dec
js
popf
iret
inc
scas
clc
inc
fld
mov
sub
jp
ret
cmps
or
and
mov
out
push
ss
inc
movs
test
pop
test
add
je
sub
cmp
call
mov
pop
(bad)
loope
sub
xchg
stc
rcr
jmp
jmp
add
cmc
add
cmp
xor
and
js
fndisi(8087
pop
(bad)
addr16
fcmovnu
popa
inc
ss
stos
jp
push
jmp
out
sub
push
fcom
dec
jae
sub
mov
xchg
cmp
repnz
and
movs
mov
dec
jecxz
pop
mov
leave
mov
shl
iret
cmp
jno
ins
xchg
mov
push
mov
not
cld
icebp
mov
ficomp
mov
xchg
jns
jno
pop
lods
push
xor
adc
ins
mov
jmp
fld
push
dec
inc
jmp
pusha
popa
pusha
leave
fmul
loopne
(bad)
inc
add
jb
push
movs
scas
and
arpl
stos
scas
mov
outs
cmp
push
mov
aam
mov
push
jno
or
dec
or
xchg
mov
sub
mov
push
jl
out
outs
dec
in
ret
adc
xchg
fmul
add
cli
ja
in
fmul
fsubp
pushf
mov
aas
(bad)
push
sbb
in
jg
mov
clc
sub
movs
sar
dec
xchg
xchg
sub
pop
add
mov
sbb
cmp
jmp
pop
push
and
addr16
ja
pop
prefetchwt1
int3
add
mov
jmp
inc
pop
jge
das
lea
ret
sbb
lods
je
or
jmp
and
mov
add
pushf
xor
mov
pop
xor
and
mov
push
xchg
loopne
sub
dec
xchg
scas
xchg
sub
(bad)
sub
push
pop
lods
dec
fcomp
cmp
in
gs
or
pop
sbb
(bad)
cmp
push
mov
add
dec
stos
stc
sbb
and
mov
xchg
stos
pushf
stc
movs
jmp
jns
add
inc
pop
mov
adc
(bad)
fld
xor
movs
mov
mov
pop
xor
and
aad
jmp
xor
mov
lods
stos
sub
leave
mov
push
push
scas
lds
mov
pop
std
lods
bound
and
mov
xchg
xchg
mov
pop
cmp
or
sahf
xlat
or
popf
adc
mov
movs
xchg
pop
sahf
cwde
jae
out
fwait
lahf
jne
data16
loope
dec
outs
movs
jge
hlt
cld
xchg
imul
loop
out
div
mov
(bad)
popa
pop
pop
cdq
jae
pushf
pop
pop
mul
add
sub
popf
xlat
in
add
cmp
sub
adc
pop
ins
inc
fistp
sub
aas
mov
cmc
jmp
movs
out
push
dec
mov
adc
shr
xor
xor
dec
imul
cs
rcr
xchg
sub
pop
fstp
xchg
call
sub
mov
dec
psubb
ret
sbb
aam
xchg
arpl
clc
inc
pusha
and
sar
lods
aad
or
mov
stos
mov
push
es
loopne
xor
mov
shr
push
loop
mov
in
lock
lea
push
push
sbb
pop
cs
dec
sub
scas
push
loop
jae
xor
or
hlt
retf
sub
push
bsr
jo
imul
das
push
aam
inc
sbb
pop
xor
cmp
out
cmp
inc
ins
leave
add
pushf
xchg
xchg
les
rcl
jmp
loopne
lods
sub
dec
lods
xor
inc
and
mov
frstor
push
repz
stos
pop
push
movs
sbb
jne
mov
cmp
mov
inc
stc
mov
cmc
xchg
je
push
outs
sbb
cdq
pusha
lahf
sbb
movs
popf
cdq
(bad)
sahf
stc
mov
xchg
test
adc
inc
mov
div
dec
dec
add
shl
mov
test
loop
jbe
(bad)
loope
(bad)
pusha
push
mov
push
inc
push
pop
aas
(bad)
adc
mov
clc
ficom
adc
mov
sbb
cmp
xor
jnp
mov
jl
cmp
(bad)
fs
push
xchg
xchg
mov
mov
mov
shr
add
or
ins
out
call
inc
cmc
in
pop
adc
movs
mov
push
shl
movs
xor
jecxz
mov
mov
sub
sti
ins
cmp
cld
imul
and
repz
jmp
inc
xor
mov
sub
inc
rcr
frstor
je
nop
int
dec
scas
mov
mov
xchg
dec
hlt
add
add
lahf
pop
mov
sar
xor
addr16
pop
rcr
sub
pop
outs
adc
push
xor
mov
push
xor
pop
push
xchg
fld
push
std
or
lahf
push
sbb
mov
sti
mov
jne
cmp
imul
add
imul
sub
mov
pop
test
outs
aad
jp
fwait
or
fild
push
sbb
or
pop
mov
pop
dec
or
ss
cmp
inc
in
sbb
jmp
inc
push
xchg
arpl
pop
test
nop
push
xchg
mov
shl
ja
test
aam
mov
mov
jg
mov
je
mov
jge
add
mov
into
push
outs
xchg
sub
or
jne
mov
jp
div
add
xchg
pushf
push
add
mov
and
adc
sbb
jnp
leave
clc
nop
and
dec
adc
call
xor
loope
imul
repz
mov
add
frstor
inc
mov
mov
int3
dec
xor
addr16
lea
and
mov
aad
(bad)
and
cmp
fistp
mov
fist
shr
or
mov
jae
push
jg
push
mov
xchg
mov
in
push
mov
add
arpl
jmp
mov
fst
pop
fidivr
add
enter
fidivr
xchg
mov
mov
dec
pop
mov
inc
cmp
jbe
adc
jl
and
or
fmul
fcom
arpl
adc
jne
pop
push
jns
out
pop
mov
stos
es
sub
inc
inc
ficom
and
popf
and
(bad)
xor
sbb
repnz
lahf
fsubrp
inc
jbe
nop
test
jle
or
les
pop
adc
dec
ficom
(bad)
fdivr
lea
mov
xchg
jnp
push
push
lds
enter
xchg
xor
cmp
push
jae
cmc
adc
push
iret
push
xor
cmc
or
mov
jl
ret
xchg
jp
inc
lahf
mov
ins
push
stos
push
xchg
and
mov
das
call
sbb
aaa
xor
jnp
fdiv
dec
dec
push
enter
in
or
adc
lods
sti
fistp
pop
or
lock
fnstenv
in
push
(bad)
mul
bound
cs
stos
popf
or
dec
cdq
stos
or
outs
add
retf
adc
pop
out
xchg
jp
push
or
loope
(bad)
loope
out
mov
jmp
addr16
jg
push
neg
int
cmp
(bad)
mov
call
xchg
je
nop
dec
sbb
inc
in
cmp
in
outs
movs
je
and
je
mov
cdq
sub
(bad)
ja
or
or
sbb
add
hlt
lock
xor
mov
xchg
fs
cmps
repz
stc
lea
imul
inc
or
idiv
mov
gs
mov
sbb
cmp
lock
shr
push
jmp
fnstsw
in
mov
cmp
jnp
dec
sbb
out
or
sub
xor
dec
cmp
push
jl
sbb
popa
ja
aas
ins
leave
cli
icebp
cmps
xor
jbe
out
inc
cmps
adc
sub
std
sub
inc
xchg
hlt
ins
cld
adc
sub
mov
dec
adc
hlt
xchg
(bad)
out
and
push
inc
xchg
pop
adc
cmp
and
les
out
test
call
xchg
inc
in
loope
(bad)
push
lds
pop
mov
mov
es
cdq
sub
xor
(bad)
imul
fstp
dec
xchg
jle
mov
push
jbe
or
push
ins
data16
out
daa
push
sbb
mov
repz
push
enter
pop
loop
cs
adc
lahf
jns
adc
aam
or
fst
enter
ins
mov
pop
mov
shl
cdq
std
jbe
in
(bad)
jl
sub
mov
pop
stos
and
mov
into
mov
jne
loopne
pop
mov
dec
dec
sub
out
jle
sbb
mov
aam
jp
pop
fidiv
mov
clc
pop
xchg
jae
adc
test
loopne
aas
and
xchg
mov
cmc
(bad)
(bad)
sbb
das
fucomp
dec
mov
arpl
bswap
aam
fcom
and
shl
jmp
mov
sbb
repz
dec
push
ss
xchg
add
ret
sub
jno
mov
xor
adc
arpl
add
pop
sbb
inc
jnp
xor
(bad)
cwde
add
dec
pop
(bad)
xor
ror
aas
inc
rcr
jmp
inc
jp
cmc
shl
jmp
fcomp
popa
clc
pop
mul
sbb
fsub
lock
xor
imul
add
dec
hlt
and
dec
pcmpeqd
sbb
icebp
pop
add
cmp
mov
dec
rcr
inc
jg
bound
dec
xchg
sbb
add
ror
jno
movs
pusha
or
jae
and
mov
cmps
cmp
leave
inc
dec
js
jecxz
mov
lods
add
cmp
add
ss
fdivr
in
mov
jmp
ret
shl
icebp
push
jle
test
add
and
sub
cs
push
pop
scas
(bad)
iret
popa
push
pop
ret
bound
leave
bound
stos
retf
out
mov
jge
loopne
mov
(bad)
lods
jecxz
clc
sbb
movs
cs
push
(bad)
scas
mov
test
or
mov
imul
inc
or
stos
and
xchg
ret
aam
xchg
pop
mov
dec
clc
pusha
adc
push
call
add
(bad)
js
xchg
sub
test
dec
hlt
je
sub
cmps
push
daa
adc
jp
test
adc
movs
pop
test
mov
cmp
repnz
mov
std
mov
leave
(bad)
sbb
std
lea
mov
mov
mov
sub
jne
dec
lods
add
stos
loop
pusha
sbb
rcr
push
test
push
and
test
mov
jecxz
jmp
jecxz
scas
push
inc
int
lds
mov
jo
mov
mov
or
mov
sbb
mov
gs
pop
lods
inc
imul
and
push
fdivr
dec
sub
outs
(bad)
ja
push
mov
imul
sub
sub
ret
push
arpl
fbstp
xor
dec
adc
inc
cs
jmp
movs
jmp
in
mov
out
repz
xor
jl
leave
out
mov
icebp
stos
jo
adc
in
std
xlat
and
pop
iret
and
cmp
(bad)
adc
xchg
push
call
xchg
in
jns
mov
jno
mov
in
in
pop
mov
jb
shr
xchg
clc
sbb
mov
mov
sub
sti
out
xchg
inc
sbb
es
add
test
sbb
inc
mov
xlat
dec
push
cld
icebp
js
retf
mov
pop
push
xchg
repnz
pop
daa
sahf
xchg
cmp
xchg
cmp
push
mov
xchg
mov
add
out
es
add
dec
mov
ret
mov
mov
or
cli
push
or
xchg
add
cmps
in
mov
mov
and
aad
cs
outs
mov
mov
fs
push
sbb
xchg
sub
pop
imul
mov
and
xchg
lea
mov
push
xchg
jl
inc
dec
jmp
and
das
jmp
rol
mov
(bad)
dec
xchg
out
xor
sar
shl
out
ds
out
fsincos
pop
xor
adc
mov
sbb
cmp
inc
push
mov
mov
mov
mov
inc
inc
sub
push
adc
pop
mov
pop
sub
mov
and
pop
xchg
gs
call
aas
jle
adc
inc
xchg
clc
jb
sbb
out
sbb
mov
sbb
aad
(bad)
fdiv
fdiv
fimul
jae
xchg
xchg
ret
and
out
xchg
xchg
imul
adc
fld
and
jne
inc
(bad)
push
xchg
das
dec
jne
push
call
pop
pop
test
in
push
out
add
dec
and
js
enter
out
add
dec
mov
sub
xchg
call
sar
clc
push
adc
or
push
sbb
adc
pop
pop
push
or
xor
inc
js
popa
out
daa
mov
jnp
into
push
test
or
mov
xor
cli
repz
mov
test
daa
outs
into
add
mov
jecxz
movs
out
loope
mov
addr16
sub
and
out
rol
push
inc
push
fild
out
sbb
cs
sar
pushf
shl
dec
int3
inc
lds
fsubr
call
mov
lods
icebp
dec
mov
aaa
or
cli
popa
cmps
sbb
cmp
out
(bad)
leave
mov
xor
mov
jo
sbb
loop
mov
cmc
repnz
lds
outs
jne
pusha
int
cwde
std
pop
fisttp
cmps
into
mov
mov
xor
gs
int
ins
clc
pushf
dec
fld
and
iret
out
ret
pop
mov
inc
mov
or
cmps
sub
cwde
sbb
sbb
push
int3
pop
rcl
sub
sub
mov
outs
or
mov
fidivr
mov
xor
(bad)
jmp
pop
sub
(bad)
stos
fnstenv
xchg
popa
enter
lods
jmp
ret
xchg
and
push
adc
shl
outs
sar
bound
jne
push
sbb
inc
aam
xor
inc
cmp
mov
push
adc
add
add
and
jb
jle
mov
icebp
inc
out
mov
mov
shl
inc
jle
pop
(bad)
cmp
push
dec
fisubr
xchg
pop
sbb
popa
sub
scas
push
call
call
fist
sahf
stos
iret
loopne
not
mov
mov
xchg
(bad)
push
and
pop
inc
in
jge
pop
repz
and
sub
fs
jg
and
cmp
mov
aaa
out
fmul
fstp
adc
imul
popf
loop
loop
mov
fsubr
ds
in
ins
jge
ret
mov
push
iret
dec
jb
jmp
(bad)
popa
ins
add
ins
sub
aad
loope
cwde
fcmove
int
mov
and
repz
ficomp
out
pop
xchg
lods
(bad)
iret
adc
sub
sti
cdq
cmp
lock
aaa
push
pop
call
jl
lods
int
mov
fs
mov
dec
stc
add
mov
(bad)
jp
mov
retfw
inc
xchg
push
(bad)
cmp
movs
(bad)
sti
jge
popf
fidiv
or
mov
mov
dec
ins
hlt
mov
stos
pop
dec
das
dec
push
sub
mov
ss
push
movs
cmp
lds
(bad)
mov
xchg
fist
repz
imul
xchg
adc
inc
cmc
inc
neg
int3
xchg
mov
sub
mov
adc
jl
shl
jo
inc
cmps
adc
xor
inc
jg
inc
dec
repnz
sbb
addr16
pushf
ret
mov
movs
pop
mov
xchg
and
jl
add
sub
push
and
es
fistp
test
adc
out
mov
sbb
int3
adc
lods
cmps
dec
xchg
add
dec
je
push
bound
mov
pushf
xchg
mov
stos
cmps
fsubr
call
push
repnz
adc
loope
into
fs
hlt
sbb
arpl
mov
inc
test
mov
std
pop
into
in
sbb
retf
cld
mov
mov
mov
jmp
and
jb
sub
pop
xchg
push
jae
adc
scas
jae
sbb
mov
mov
fxam
lock
aas
mov
jecxz
js
dec
(bad)
adc
add
aam
stc
xchg
test
dec
adc
in
call
xchg
aas
add
rol
jl
les
xor
fdiv
in
mov
stos
and
push
mov
stos
pushf
mov
outs
xor
jmp
mov
daa
lahf
mov
adc
cmp
imul
mov
mov
div
jne
xchg
mov
jbe
mov
dec
outs
outs
(bad)
inc
cwde
cmp
das
test
hlt
test
xchg
leave
pop
cli
inc
ja
je
or
mov
jp
add
pop
sar
movs
shl
adc
ins
mov
mov
pop
arpl
dec
ret
test
push
add
iret
mov
and
cmps
inc
pop
cmp
(bad)
int3
cmps
sbb
sbb
jl
call
fst
dec
scas
outs
mov
pop
mov
arpl
(bad)
jne
movs
adc
lock
inc
daa
in
shl
mov
pop
mov
or
cmp
jae
rcr
sub
adc
jnp
(bad)
xchg
add
push
jmp
sub
imul
dec
cmp
fs
clc
add
jb
(bad)
dec
jo
pop
sub
pusha
jge
push
iret
jnp
or
in
and
cwde
je
dec
daa
pop
sub
aam
pop
sub
sbb
pop
sbb
mov
xor
mov
lods
sar
ds
xchg
and
std
xchg
sub
xor
ins
sub
cmp
dec
jbe
inc
sbb
cdq
mov
mov
mov
js
xchg
bound
into
cwde
xchg
mov
imul
pop
call
dec
test
rol
cmp
inc
or
lea
jbe
ret
push
sub
pop
mov
je
cwde
adc
inc
jb
push
outs
cs
jmp
sub
dec
stc
ins
ret
iret
out
ins
mov
mov
and
or
(bad)
pop
mov
jg
stos
retf
pusha
lock
bound
ror
mov
push
jge
jp
push
test
xor
lods
jg
test
stos
addr16
out
outs
aas
aam
ret
jnp
jp
mov
retf
out
sbb
(bad)
nop
dec
xor
push
xchg
cld
push
dec
push
or
lea
pop
jbe
lods
mov
pop
or
ja
sub
jge
or
sbb
ins
std
pushf
scas
jmp
xor
bound
leave
fs
push
sbb
push
dec
ins
iret
pop
(bad)
xchg
imul
retf
add
pop
fidivr
test
pop
pop
loopne
retf
cmp
jo
jae
imul
sub
repz
inc
(bad)
add
daa
pop
das
jecxz
push
ret
mov
push
add
mov
pop
daa
sar
cmc
sbb
jo
sbb
mov
jno
sbb
test
stc
push
and
xchg
sub
data16
nop
stos
lea
sub
ins
sub
jl
in
test
inc
fs
add
xchg
out
xlat
ror
push
sbb
mov
pushf
sub
push
mov
repnz
sub
inc
dec
cmc
mov
add
jge
jo
ins
rcr
push
in
pop
pop
ja
or
leave
mov
push
test
cs
inc
and
loopne
icebp
mov
mov
or
jb
gs
cmp
or
and
pushf
pop
rcl
mov
adc
xor
mov
dec
je
lds
push
xlat
shl
sti
mov
cmp
xchg
sub
dec
pop
ret
in
retf
xchg
movs
pop
or
js
in
lock
xchg
push
cld
retf
hlt
add
fnstsw
pusha
mov
add
shl
add
push
mov
jb
jne
loopne
push
hlt
jbe
dec
cdq
lahf
dec
sbb
mov
mov
cmp
adc
mov
call
and
es
imul
cmps
adc
bound
gs
jmp
enter
dec
les
repnz
push
xchg
fadd
sahf
(bad)
ss
push
xchg
push
mov
icebp
(bad)
daa
cmp
clc
pop
xor
ja
pop
mov
int3
(bad)
cmp
inc
adc
mov
mov
retf
sbb
fdivp
jae
inc
jmp
jmp
push
adc
sub
sbb
push
inc
pusha
adc
xor
add
adc
jge
inc
pop
xchg
mov
retf
bound
push
sub
mov
jno
xchg
repnz
mov
pop
pop
jns
xchg
aas
mov
cmp
js
mov
push
mov
into
sub
cs
in
and
dec
movs
gs
outs
addr16
mov
ja
xchg
ja
mov
pop
loop
mov
xchg
aad
mov
push
inc
outs
in
xchg
mov
sahf
jb
sar
adc
mov
sub
or
pop
aas
aas
ror
out
jns
dec
cdq
call
test
aaa
or
out
xchg
cwde
cmp
or
out
xor
pop
dec
scas
stos
aam
mov
scas
loop
xor
cmps
div
jmp
ins
inc
fadd
jmp
mov
dec
pop
sbb
jl
dec
push
pop
pop
(bad)
dec
pushf
pop
gs
cmc
dec
jge
or
lods
ror
pop
(bad)
pushf
test
pop
test
scas
retf
pop
rol
jmp
inc
sbb
sub
inc
imul
adc
mov
cli
dec
and
add
idiv
retf
ins
popa
mov
jb
add
sub
xor
aas
(bad)
je
jbe
bound
pop
adc
das
ss
(bad)
pop
dec
sahf
ins
es
xchg
pandn
cmp
ret
or
jp
out
xor
mov
adc
sub
int3
aaa
dec
push
cld
pop
push
out
(bad)
out
jno
je
cli
(bad)
lock
stos
pop
sbb
cmps
sub
mov
mov
mov
and
aaa
mov
push
push
inc
aad
loop
cmps
jge
sbb
imul
cdq
adc
sti
jp
loope
rcr
leave
lahf
imul
outs
mov
and
out
cld
mov
pop
(bad)
cli
outs
repnz
lods
adc
(bad)
loopne
xlat
mov
rcr
cld
jae
hlt
pop
jecxz
add
aaa
mov
jmp
fild
xor
dec
(bad)
dec
ss
inc
mov
hlt
push
ret
test
into
or
mov
push
sbb
retf
push
lock
js
test
sbb
imul
fldcw
ins
jb
js
xchg
stos
fcmovbe
lds
sub
push
push
iret
sub
push
test
dec
mov
test
add
push
jle
leave
mov
popa
stc
mov
dec
jg
xchg
lock
mov
daa
cmps
jnp
enter
(bad)
ja
pop
sub
xchg
xchg
jo
adc
movs
dec
sbb
dec
push
inc
dec
adc
adc
sahf
fisub
mov
push
pushf
cmc
push
dec
lahf
clc
dec
inc
inc
xchg
adc
jae
push
out
pop
push
jg
out
pusha
rol
mov
clc
pop
mov
movs
cmp
aam
cmc
cmp
xchg
push
jo
sub
femms
cmps
mov
mov
dec
aad
mov
cmp
pop
dec
pop
xlat
adc
inc
cmp
movs
shr
outs
call
xchg
mov
pop
lods
fwait
mov
jb
das
in
call
cmp
cmps
movs
in
shufps
cmc
cmc
ins
repnz
enter
shr
(bad)
jmp
lods
push
mov
jmp
(bad)
pop
lds
xchg
sub
in
mul
pushf
jae
dec
cmp
add
mov
or
pusha
pushw
xlat
jle
scas
(bad)
out
hlt
jge
imul
enter
jle
mov
aaa
stc
xchg
sub
inc
pusha
fwait
aam
rcr
ins
and
mov
xchg
call
icebp
dec
sub
cmc
call
xor
ret
mov
cmp
xchg
add
jl
or
lock
(bad)
mov
ins
sbb
in
cwde
mov
aaa
mov
rcl
sahf
rcr
jecxz
out
xchg
cmps
int3
retf
dec
mov
sub
test
scas
xchg
inc
mov
fbstp
dec
fist
jo
sbb
hlt
aas
jl
push
push
stos
daa
push
ret
ins
mov
mov
jle
movs
cli
outs
fxam
cmp
stos
jno
mov
sbb
fcomp
and
dec
sub
div
loopne
cmps
mov
and
fbld
loop
pop
push
sbb
push
inc
arpl
pop
sub
dec
stc
dec
fcmove
sub
das
and
ss
xchg
add
adc
xor
out
pop
and
add
retf
jbe
in
pop
in
out
push
into
mov
test
sub
mov
sub
out
sbb
pop
jmp
push
pop
movs
ds
mov
sar
fistp
rcr
and
inc
mov
div
out
mov
mov
push
cwde
out
sub
shl
adc
adc
ficom
clc
adc
xchg
sbb
fldcw
mov
and
sbb
(bad)
imul
jg
pop
pcmpgtb
xchg
or
fistp
es
std
pop
in
paddsb
add
repz
or
movs
adc
ds
jno
nop
inc
jns
or
xchg
xor
ss
sbb
push
dec
cld
ret
xchg
enter
outs
inc
mov
pop
movs
sub
(bad)
xchg
and
daa
in
mov
dec
add
stos
(bad)
(bad)
shl
pusha
mov
out
in
or
inc
adc
loope
movs
jg
cmp
shl
pusha
ins
fst
scas
push
cmc
push
jns
jnp
sbb
cmp
das
lods
jmp
or
enter
repnz
sti
sub
stos
jo
adc
scas
push
js
pop
cmp
sbb
jae
sbb
push
sbb
repz
mov
sbb
clc
mov
enter
mov
ins
xchg
adc
aaa
icebp
inc
out
call
popa
clc
lods
clc
jmp
mov
mov
je
jmp
push
or
iret
arpl
ret
into
movs
repnz
test
clc
loope
sub
pusha
stos
push
sub
sub
enter
add
jp
js
fmul
loopne
and
fcmove
mov
pushf
cmp
clc
out
(bad)
push
or
sbb
shl
imul
movs
out
in
xor
dec
stc
xchg
pop
in
mov
or
scas
(bad)
xchg
div
sub
mov
adc
nop
fs
pop
bound
popa
xchg
outs
or
jmp
xchg
fld
push
dec
movs
addr16
adc
loop
test
inc
lgs
inc
mov
jno
pop
sub
mov
pop
imul
xchg
fwait
and
mov
fidiv
cdq
(bad)
fcomp
loop
in
jnp
hlt
xor
inc
imul
cld
cmc
cmp
cli
cmp
pop
ds
adc
or
test
mov
inc
pushf
test
jno
sbb
push
or
je
(bad)
(bad)
cwde
xor
mov
test
mov
pop
pushf
lea
test
popf
clc
out
or
xchg
xchg
lea
push
retf
jmp
pop
daa
jae
addr16
nop
mov
jecxz
xchg
fmul
inc
add
pop
and
mov
push
loop
mov
pop
fsubrp
clc
int3
push
adc
cmc
inc
xor
cmp
push
outs
jp
imul
enter
pusha
jmp
ret
cmp
adc
test
imul
cmc
mov
jbe
fcomp
(bad)
hlt
xchg
ret
repnz
in
in
inc
push
mov
push
dec
inc
xchg
ja
pop
xchg
stc
xchg
fidivr
jne
pop
pop
adc
frstpm(287
mov
repz
loop
mov
pop
pop
shr
mov
clc
inc
repz
shl
or
dec
(bad)
fnstcw
push
test
inc
ror
cmp
imul
adc
add
mov
dec
push
add
cmp
jmp
dec
sub
sub
pop
(bad)
adc
pop
mov
pusha
dec
test
call
mov
push
scas
xor
add
and
jmp
mov
or
repz
loopne
push
mov
mov
clc
mov
add
js
mov
fadd
sub
push
inc
shl
js
xchg
call
pop
bound
outs
adc
push
movs
mov
pushf
sub
push
or
test
dec
jmp
aam
es
dec
xchg
outs
sbb
mov
jmp
dec
repz
and
cmp
sub
jmp
sub
cmps
sbb
aam
jb
push
int
sti
xchg
mul
sub
sbb
jb
imul
nop
jbe
vphsubdq
(bad)
jp
in
out
out
mov
add
cmps
mov
aad
fimul
xchg
mov
imul
push
(bad)
int
fcomi
into
test
out
inc
sub
jmp
dec
jmp
cmps
push
xchg
push
aas
push
stc
dec
call
push
bound
(bad)
mov
aaa
push
mov
cli
dec
call
stos
jb
mov
mov
mov
sar
inc
mov
imul
imul
shl
out
xor
popa
push
and
lods
jmp
push
mov
dec
out
ror
daa
xor
sub
test
outs
stc
jo
cld
rol
jmp
pusha
and
das
out
push
data16
pop
xchg
call
push
fstp
mov
add
gs
inc
jle
ror
mov
rep
or
add
(bad)
and
hlt
loopne
lods
scas
les
(bad)
lahf
mov
mov
pusha
jbe
mov
mov
je
xor
ret
in
fsub
inc
pop
fwait
shl
xor
jns
inc
(bad)
in
sub
pop
adc
inc
pop
outs
clc
push
mov
imul
leave
and
jg
or
xchg
sub
lahf
sub
mov
inc
sub
jns
aam
xor
loope
pop
adc
cmp
or
inc
inc
add
add
xchg
test
add
push
pop
sbb
cmp
mov
push
jle
xchg
xchg
mov
jns
mov
pop
fucomp
or
push
and
aad
xchg
sub
inc
lahf
xchg
jno
push
pop
mov
jle
aaa
push
xchg
cmp
cmp
cmp
mov
gs
sbb
push
mov
jb
sbb
div
lds
mov
mov
ds
jmp
and
add
xchg
test
dec
fwait
adc
push
fsubp
jb
xlat
dec
push
sub
out
add
mov
iret
outs
addr16
xchg
cmc
lods
lods
(bad)
bound
jb
sub
and
mov
cmc
jl
mov
inc
jbe
jne
pop
fsub
repz
ud0
fst
jl
or
sahf
dec
lahf
aaa
dec
dec
or
mov
aam
pop
test
xlat
jne
and
fsubrp
scas
ss
lahf
lahf
jge
sbb
call
sbb
clc
sub
(bad)
test
fisttp
mov
adc
jns
mov
cmps
cwde
jl
sub
sbb
mov
inc
fs
into
xor
stos
in
cli
cmp
int3
outs
pop
sub
cmps
cdq
dec
mov
mov
cmp
mov
ins
pop
clc
adc
sbb
sub
sub
push
sub
mov
mov
pop
mov
pop
push
sub
(bad)
into
mov
push
adc
mov
stc
icebp
adc
clc
or
cmp
sbb
mov
mov
(bad)
fistp
int3
loopne
inc
jle
cwde
adc
in
jmp
cmps
lods
test
call
ds
sub
stos
xor
jne
(bad)
call
enter
xchg
aad
adc
test
mov
or
call
dec
mov
dec
dec
mov
into
in
xor
ds
xor
mov
adc
cmps
pusha
xchg
(bad)
in
loope
xor
xor
push
inc
sub
stc
stc
sbb
pop
jl
test
call
pop
push
mov
jmp
adc
into
or
aas
push
in
(bad)
std
jae
push
xchg
cmps
jecxz
and
inc
dec
les
loope
cmp
push
dec
test
add
lds
xchg
cmp
add
enter
sub
fnstsw
lahf
leave
fisttp
stos
mov
dec
mov
ja
mov
scas
mov
cmp
cwde
xchg
xchg
add
pop
jecxz
push
mov
lods
scas
fstp
mov
jnp
xor
mov
mov
xor
leave
jmp
dec
es
cmc
cmp
jns
cmc
in
inc
loop
(bad)
mov
xchg
add
lods
rcl
loop
fstp
xlat
les
shr
retf
outs
test
add
adc
push
aaa
cdq
dec
adc
fs
mov
ins
ds
sbb
imul
out
ins
loope
mov
aad
es
fsubr
mov
add
rcr
sbb
popa
mov
mov
push
aas
loopne
mov
pop
or
repnz
loope
test
lahf
das
add
sub
in
xor
dec
cmp
push
mov
mov
pop
test
hlt
lods
sahf
lock
es
and
out
jmp
mov
xchg
outs
fcmovne
pop
sti
xor
loope
outs
sbb
imul
add
ret
xchg
daa
sub
aaa
xchg
stos
jo
xor
xor
sub
fmul
pushf
and
loope
sub
dec
jae
sub
add
inc
sbb
shl
sub
xor
fimul
loop
mov
pop
xor
rcr
dec
push
in
movs
adc
js
xchg
push
fscale
in
inc
xchg
imul
add
mov
pop
xchg
xor
jle
(bad)
scas
cs
in
mov
sub
jmp
cld
inc
adc
sbb
fstp
mov
mov
dec
in
cmp
sub
mov
mov
repz
ins
in
lea
jnp
jmp
pop
cmp
test
adc
jge
jl
mov
movs
in
and
and
jae
push
sbb
push
data16
sub
mov
mov
mov
jns
mov
xor
adc
mov
daa
pop
imul
mov
xor
in
retf
imul
popf
std
cmp
mov
cmp
xor
and
nop
ins
or
icebp
pop
hlt
test
pop
adc
sub
pop
daa
mov
and
mov
xchg
push
scas
sub
lods
(bad)
jp
imul
add
push
jnp
cld
sub
movs
xchg
shl
int3
mov
xor
pop
cmp
mov
movs
fadd
shl
cs
pop
dec
xchg
call
xchg
mov
stos
outs
scas
ja
in
iret
mov
jp
push
xor
or
adc
and
and
pusha
pop
clc
xor
pop
test
inc
movs
mov
xchg
paddq
mov
in
mov
xchg
fisub
test
xor
shr
and
pushf
xor
imul
dec
aas
sub
mov
hlt
test
ret
shr
pusha
repnz
pop
inc
shl
xchg
sbb
fwait
fs
adc
inc
ud2
push
and
mov
dec
add
leave
xchg
or
mov
dec
mul
cmp
xor
aaa
movs
mov
rcl
pop
mov
push
mov
xor
(bad)
xchg
xchg
sbb
mov
lds
dec
xchg
push
fstp
mov
fxch
icebp
adc
inc
and
xor
xor
pop
pop
rcr
jno
shl
jno
(bad)
sti
cmps
cmps
loop
inc
xchg
dec
sub
xor
sub
cmp
int3
add
aaa
pop
xlat
or
fsubr
mov
inc
aad
add
(bad)
push
inc
shl
ja
(bad)
pop
or
movs
sbb
enter
imul
xor
mov
js
sbb
jp
cmp
cld
daa
fcomp
jp
xchg
sti
ds
test
xchg
fs
ror
gs
push
add
push
adc
jae
addr16
repz
inc
cmp
pop
div
out
icebp
or
jnp
loop
ins
mov
fisubr
vcvttpd2dq
or
(bad)
(bad)
jg
stos
aaa
aad
sub
ror
or
les
cdq
stc
icebp
inc
popf
mov
cmps
rol
ficom
pop
adc
mov
ds
shl
inc
(bad)
mov
mov
lea
fst
nop
mov
and
cwde
sub
rol
aad
sub
mov
pop
adc
and
test
scas
loopne
pop
mov
pop
push
dec
pop
in
add
dec
out
xchg
fs
mov
cmp
je
pusha
scas
mov
addr16
out
push
jae
pop
jbe
jecxz
int
mov
mov
xchg
or
jecxz
sbb
dec
jnp
mov
sub
cmp
js
(bad)
and
sub
sub
(bad)
sti
xor
xor
scas
jns
xor
dec
mov
push
fsub
push
fxch
and
fisubr
push
sub
lds
xchg
aaa
mov
cmp
xchg
call
or
adc
sbb
add
mov
cmp
mov
sbb
dec
sar
fistp
(bad)
jmp
loop
fdiv
out
pop
or
lock
jno
mov
adc
mov
xchg
sbb
adc
add
cmp
mov
mov
sub
ret
ins
xor
es
cmp
cmp
cwde
or
jbe
and
ja
rol
xchg
(bad)
sti
out
out
push
out
xor
ins
adc
shr
xor
mov
sub
pusha
pop
cmc
fisub
jnp
leave
lock
mov
adc
icebp
(bad)
jp
add
shl
pop
jnp
mov
jmp
adc
add
nop
fld
push
mov
retf
(bad)
xor
lea
das
sub
shl
jmp
and
xlat
sbb
jmp
push
pop
mov
dec
les
mov
cmp
mov
xchg
fnstenv
repnz
test
sub
pushf
shl
popf
cmp
add
mov
into
cmp
mov
lahf
mov
idiv
adc
jb
pushf
dec
push
dec
mov
aad
add
ins
fadd
sbb
xor
loop
jno
cli
jno
(bad)
clc
aam
gs
arpl
(bad)
gs
inc
adc
jno
inc
add
or
add
sbb
outs
adc
cs
or
adc
shl
(bad)
es
sti
add
mov
aad
sbb
retf
clc
cmp
scas
add
xchg
mov
pxor
and
aam
aam
push
jmp
or
pop
iret
int
inc
jmp
jbe
or
pop
sbb
sub
(bad)
fisubr
pop
jl
hlt
and
dec
repnz
scas
inc
mov
out
add
mov
ret
(bad)
jnp
and
(bad)
out
push
sub
test
fistp
ins
pop
pop
or
cmp
and
test
scas
adc
xchg
push
mov
aad
in
cdq
dec
mov
dec
call
fistp
add
mov
mov
pusha
outs
mov
popa
xchg
scas
jecxz
and
call
pop
inc
cmp
inc
pop
mov
outs
adc
push
push
adc
mov
(bad)
stos
adc
and
call
pop
dec
aaa
fsubr
test
cmp
jbe
clc
test
mov
into
repz
jo
imul
popa
sbb
leave
pushf
fwait
pop
mov
punpcklwd
cmp
aad
bndldx
adc
cli
add
in
rcr
and
mov
in
pop
and
stc
and
ret
and
mul
or
or
rol
fstp
inc
push
adc
and
lahf
das
jmp
pop
push
daa
idiv
xchg
rcr
aad
pop
sub
adc
hlt
lods
cmp
xor
xchg
and
jle
lea
(bad)
daa
or
add
mov
stos
mov
push
fadd
push
adc
iret
fwait
and
clc
dec
(bad)
jl
imul
into
movs
jl
mov
mov
(bad)
bound
or
loopne
pop
int3
xor
push
call
repz
push
sbb
xchg
push
push
push
test
jmp
ret
xlat
mov
pop
jbe
out
cld
cmp
cmp
mov
xchg
inc
ds
ja
cmp
bound
pop
xchg
pop
dec
mov
ss
neg
movs
sar
mov
cmp
sub
test
adc
adc
cmp
gs
add
es
or
jb
dec
mov
les
dec
in
sbb
cmc
mov
lahf
pop
aas
(bad)
adc
cmc
dec
xchg
shl
pop
call
or
ins
test
pop
lods
es
fstp
out
mov
xchg
fxch
mov
lds
cli
enter
fs
mov
lods
call
rep
lds
mov
cmp
mov
or
loope
sbb
push
rcl
xchg
pop
out
loope
movs
add
sub
scas
js
icebp
xchg
leave
pop
pop
xor
dec
cld
es
inc
ss
jno
call
in
xchg
or
xor
mov
xor
out
adc
lods
cmp
stos
jnp
stc
aas
imul
xor
out
lods
jle
mov
jecxz
jg
shl
sub
call
div
repnz
(bad)
sub
ins
fisub
jecxz
je
mov
push
xor
(bad)
pop
imul
rol
out
ror
mov
mov
jp
outs
fwait
sbb
dec
ficomp
add
loope
sub
stos
aad
ins
mov
mov
loopne
or
cmp
cmp
es
scas
in
cmp
and
xchg
xor
mov
cmp
mov
fmul
clc
outs
add
add
dec
movs
lock
add
and
fwait
dec
pop
in
ins
fidivr
inc
sbb
lock
cld
aas
daa
xor
jnp
pop
xlat
in
pop
mov
jb
inc
pop
stos
iret
push
mov
retf
int3
pop
mov
push
sahf
js
mov
pop
fisub
mov
adc
int3
mov
add
(bad)
scas
jae
push
adc
adc
mov
scas
ja
sbb
mov
mov
mov
cmp
pop
inc
fimul
stos
fcmovu
fucomp
push
test
cmp
inc
inc
mov
popf
rcl
dec
(bad)
adc
daa
adc
or
cmp
cli
jae
dec
je
aam
add
shr
stos
dec
je
test
dec
sub
and
or
sbb
jmp
xchg
ds
or
jne
push
out
andnps
js
(bad)
daa
push
jne
cdq
push
pusha
cld
inc
(bad)
popa
ins
test
inc
add
mov
leave
in
mov
cmp
stos
adc
sub
xor
mov
and
out
jne
add
mov
dec
sub
push
std
pop
stos
pop
es
(bad)
jge
repnz
sub
imul
xor
push
cmp
inc
push
repz
add
or
js
xor
or
cmp
mov
cli
repnz
bound
rcr
add
push
add
jmp
adc
mov
stos
push
dec
movs
out
cs
ds
sahf
neg
scas
out
lods
and
ds
sbb
pop
mov
fs
dec
sub
cld
(bad)
jbe
mov
nop
test
cmp
out
mul
movs
push
sar
in
jbe
xor
ins
div
xchg
jecxz
fild
retf
(bad)
pop
and
sbb
ja
add
aam
jnp
aas
loope
push
iret
adc
xchg
jmp
pop
mov
loop
mov
in
xor
mov
sbb
outs
pop
shl
mov
xchg
out
sbb
mov
pop
enter
push
jecxz
repnz
addr16
sbb
jnp
mov
leave
jae
icebp
pushf
jp
and
iret
pop
mov
fild
mov
stos
fwait
rcr
pop
pop
jne
idiv
cmps
fistp
pop
sbb
enter
rol
sub
mov
add
and
mov
mov
daa
jecxz
clc
pop
xor
rcr
shr
pop
mov
push
mov
loopne
not
scas
(bad)
aad
cdq
mov
aas
fcomp
test
hlt
push
xchg
ror
mov
icebp
mov
cmp
pop
xchg
and
or
or
mov
mov
dec
inc
mov
sub
xor
into
lea
cmp
nop
cwde
push
dec
ins
jb
lods
dec
jl
mov
mov
movs
imul
movs
cmp
adc
stos
mov
or
add
mov
cld
fs
mov
(bad)
out
daa
or
bound
bound
cmp
or
ror
lock
inc
out
call
cmp
pop
mov
pop
xor
pop
sub
cmp
or
cdq
aam
dec
mov
cmp
add
(bad)
into
inc
aaa
sbb
jl
fndisi(8087
sub
inc
xor
xor
ret
mov
mov
mov
mov
mov
in
enter
xor
jmp
xor
scas
xor
xchg
lock
js
imul
jl
icebp
pop
push
jecxz
or
push
mov
jo
cmp
popa
aam
jmp
out
sub
clc
sahf
shl
cmp
xchg
xor
mov
jbe
xchg
iret
cld
sub
push
fiadd
cmp
out
nop
push
iret
pusha
and
mov
push
jnp
xlat
arpl
dec
out
jmp
imul
cmp
int
addr16
mov
add
add
mov
inc
xchg
xchg
nop
mov
into
and
ret
ins
lds
pop
pop
sub
adc
loop
pop
cdq
jp
and
sbb
and
pop
pop
fwait
sub
cmp
not
mov
stos
jo
repz
inc
mov
pop
pop
xor
inc
mov
nop
movs
xchg
mov
int
xchg
mov
push
pop
adc
aaa
dec
lahf
and
mov
lahf
inc
push
std
jl
test
scas
jl
mov
pop
popf
movs
cdq
mov
test
sbb
div
mov
loope
pop
or
out
pop
adc
out
cmp
mov
adc
popa
mov
fs
mov
xchg
jne
movs
stos
mov
push
sub
int
sub
clc
jge
std
xchg
xchg
dec
xor
outs
lock
mov
lahf
std
cld
mov
jge
loope
or
xor
leave
std
push
push
rcr
lahf
xchg
ret
stc
mov
nop
add
loope
add
sub
test
hlt
sub
sub
fdivr
call
pop
repz
sub
sbb
lods
add
mov
and
mov
ins
div
or
cmp
sar
fisub
sub
shl
test
call
movs
push
xchg
stc
pop
aad
add
add
xchg
push
inc
movs
rcl
movs
sti
ins
mov
fsubrp
mov
sbb
(bad)
fnstcw
fdivr
std
test
repnz
(bad)
arpl
jmp
adc
fsub
push
daa
add
mov
cmps
or
adc
nop
enter
fwait
nop
and
outs
sub
mov
add
cmp
add
iret
fcomi
mov
rcr
mov
inc
mov
retf
mov
fsubr
loop
sub
xor
cmp
adc
inc
and
push
pop
dec
push
jbe
imul
icebp
les
sar
cmc
push
call
pop
mov
out
retf
pop
mov
add
gs
push
pop
fdivr
jecxz
inc
jne
cmp
leave
add
dec
stc
adc
outs
call
addr16
inc
scas
pop
loopne
inc
mov
sub
xchg
sbb
test
lahf
mov
popf
mov
ins
(bad)
sub
jne
mov
push
fs
mov
hlt
retf
outs
adc
fcomp
aaa
sbb
xor
xchg
fld
xchg
aam
push
repz
adc
sar
ja
add
mov
jmp
mov
mov
xor
(bad)
ds
inc
cmp
add
add
and
(bad)
cmp
cmp
pop
cwde
shl
xor
ret
sbb
dec
mov
add
cwde
and
xchg
sub
call
and
gs
scas
xor
ins
push
aad
sbb
aas
cmp
test
sub
pusha
mul
mov
pop
fwait
mov
fnsave
pop
ins
and
pop
cmc
mov
shr
lods
stos
cmps
outs
or
inc
pop
in
call
ins
mov
loope
inc
imul
out
xor
add
add
ret
adc
daa
sub
xchg
sbb
inc
retf
sub
movs
es
es
jp
sti
jb
shr
xor
or
in
dec
and
push
xlat
sti
imul
(bad)
sbb
sub
jg
cdq
add
stos
ficomp
movs
enter
call
shl
add
movs
call
(bad)
or
mov
out
jno
pop
jo
in
sbb
iret
aad
out
pop
cmp
out
jo
mov
adc
cmp
xchg
jge
sbb
lods
outs
cmps
retf
into
mov
in
addr16
xlat
push
jb
jge
mov
jmp
loop
(bad)
nop
jnp
inc
sub
mov
add
jle
dec
push
ss
out
xor
add
outs
ret
stos
push
inc
xor
ror
push
loopne
fmul
inc
rol
push
push
lock
push
and
inc
dec
jmp
mov
outs
das
ins
out
mov
adc
jne
popf
inc
push
jmp
inc
add
loopne
push
mov
lds
push
outs
push
xor
xchg
cmp
jnp
lock
jbe
cmp
sub
nop
jge
daa
mov
(bad)
dec
adc
pop
mov
ins
je
stc
in
std
stc
add
push
fisttp
in
lahf
xor
pop
sbb
mov
xchg
into
mov
jg
scas
shr
into
ror
outs
mov
fbstp
repnz
es
outs
(bad)
pop
and
popf
mov
stos
out
retf
inc
cmp
jno
sub
cmp
scas
das
dec
dec
pop
imul
shr
sbb
sbb
aas
xchg
dec
ds
retf
stc
mov
in
push
lahf
xchg
scas
inc
mov
sub
sar
xchg
out
stos
jecxz
pusha
sbb
xchg
xchg
movs
add
xor
and
daa
int3
xchg
pop
stos
cmc
jbe
jns
xchg
ds
movs
icebp
in
js
stos
sub
adc
mov
dec
cmp
xor
cmp
cmp
add
inc
sti
popf
sub
mov
dec
call
jl
ins
mov
push
xchg
call
out
pop
addr16
lock
sub
add
and
rcl
sbb
stos
xchg
jl
scas
inc
out
test
and
in
dec
les
loope
int
outs
adc
fld
loopne
mov
nop
mov
js
shl
add
jmp
mov
call
xlat
jmp
lea
jno
and
sub
inc
push
inc
sub
xor
mov
mov
retf
jb
dec
ins
aad
cli
sbb
(bad)
arpl
push
jmp
cmp
pop
rsqrtps
mov
stos
aas
(bad)
mov
sbb
(bad)
sti
pop
dec
aam
or
lock
loope
mov
xor
(bad)
jo
retf
in
inc
jl
mov
or
cmc
push
cmps
push
aad
pop
mov
test
and
xchg
add
imul
retf
aaa
(bad)
jl
and
mov
push
sub
xchg
push
mov
loopne
in
cmp
dec
test
sar
clc
push
aad
or
mov
aaa
into
das
cmp
adc
cs
and
ja
(bad)
or
loop
aam
or
add
arpl
mov
sbb
lods
xchg
or
pop
push
sbb
mov
hlt
mov
inc
fld
cmp
lea
xlat
push
fnstcw
push
jnp
and
xor
mov
adc
xchg
popf
or
dec
test
and
xor
cmp
pop
dec
mov
xchg
je
call
xchg
push
inc
out
inc
cmp
and
loopne
pop
xor
loop
push
or
bound
int3
std
add
push
xor
cmp
mov
or
into
push
xor
fs
fimul
adc
ret
nop
and
dec
adc
add
shr
scas
cmp
movs
adc
xor
in
shr
frstor
xchg
loope
mov
ficomp
xchg
ret
fisub
xor
or
xor
push
imul
cmc
fcom
mov
cmp
inc
cmps
adc
ss
jae
add
dec
scas
loopne
(bad)
(bad)
cmp
push
in
pop
pop
mov
jno
jae
adc
dec
test
dec
mov
and
jle
retf
mov
push
repz
sbb
pop
in
nop
(bad)
cli
mov
cmps
test
aam
leave
adc
cmp
adc
stos
sub
out
sbb
push
mov
cmp
jo
and
loope
or
lds
jge
xor
or
add
mov
push
ret
and
xchg
cmp
cmp
add
pop
inc
inc
jns
mov
fisub
mov
pop
mov
aam
dec
test
jae
mov
or
outs
sub
or
test
shl
mov
mov
jle
repz
pop
mov
mov
lahf
test
push
mov
call
in
call
jl
test
js
mov
jne
daa
dec
retf
inc
in
add
and
daa
push
sub
xchg
cwde
mov
push
sub
push
mov
jg
mov
mul
pop
sahf
int
mov
jg
shr
lea
xor
out
pcmpeqw
mov
mov
out
leave
sbb
jbe
cmp
add
loope
shl
adc
clc
or
fidiv
pop
cmc
dec
js
add
mov
jnp
mov
add
cs
pusha
stc
lock
inc
repnz
mov
push
idiv
pusha
mov
pop
and
hlt
dec
jecxz
in
arpl
aas
cmp
push
push
push
out
sub
in
sbb
xor
sub
fdiv
sbb
outs
test
xor
push
mov
jns
adc
jbe
pop
test
(bad)
dec
add
ret
outs
retf
(bad)
jmp
in
pop
cmp
push
jmp
or
fwait
lods
pusha
sbb
pop
and
add
xor
rcr
cdq
ficomp
push
mov
adc
jmp
mov
cli
les
lods
inc
movs
mov
fist
add
rcr
aam
shl
jbe
dec
jae
xchg
scas
pop
rol
add
push
sbb
in
lds
mov
(bad)
out
mov
cmp
in
iret
mov
cwde
popa
mov
jmp
cmc
js
iret
fincstp
icebp
test
xchg
test
pop
pop
xor
jle
cmp
pop
cmc
out
jp
je
mov
(bad)
fsubr
push
and
inc
inc
inc
clc
or
call
add
add
fs
inc
in
pusha
test
gs
and
sahf
fs
pop
inc
into
fldenv
add
ret
and
fiadd
jb
pop
leave
in
out
jmp
mov
mov
retf
jp
retf
lods
dec
xor
sbb
rcl
adc
push
daa
and
je
mov
push
repnz
xchg
stos
in
adc
push
ins
popf
jmp
xchg
or
aas
mov
pop
xor
or
sar
or
jnp
movs
loopne
jle
scas
fiadd
xchg
(bad)
repz
jle
push
bound
scas
aas
out
dec
jmp
stc
(bad)
mov
xlat
movs
xor
(bad)
out
jg
mov
mov
js
rcl
xchg
out
jge
(bad)
(bad)
push
adc
mov
imul
inc
(bad)
pushf
xor
es
arpl
dec
add
out
dec
addr16
and
pop
cmp
test
mov
jns
push
jmp
data16
fbld
jle
sbb
lea
pop
push
inc
sub
fld
pop
fdecstp
mov
test
inc
out
jb
mov
sub
cmp
sub
sti
ja
rcr
cmc
dec
inc
fistp
jae
mov
sbb
out
or
push
inc
aam
push
mov
lock
int
mov
cs
dec
fidiv
push
out
imul
pop
out
fs
mov
dec
stos
mov
(bad)
in
lds
push
or
(bad)
setnp
out
jge
(bad)
scas
sub
nop
xor
int
mov
cwde
ds
sbb
sub
sbb
ss
or
sbb
imul
xlat
mov
sar
fmul
or
xor
dec
outs
cmp
and
popf
add
push
push
lods
(bad)
outs
dec
pop
fdivr
xor
sub
fcmovu
mov
xchg
or
retf
cmp
test
(bad)
aad
dec
xor
call
adc
je
sub
add
repnz
add
or
push
jg
or
iret
shl
sbb
xchg
lods
pop
test
pop
rol
xchg
jp
xchg
jns
inc
movs
sub
fisttp
adc
leave
xor
mov
mov
cmps
mov
cmp
sbb
mov
jp
out
mov
inc
rol
xchg
(bad)
jo
(bad)
scas
mov
push
sbb
cwde
inc
jmp
stos
inc
jmp
jmp
in
cld
in
inc
imul
push
push
add
call
xor
cmp
mov
iret
imul
mov
mov
pop
cmp
aam
dec
pushf
gs
outs
scas
(bad)
and
mov
in
pop
sbb
add
xchg
cmc
(bad)
js
ret
shl
mov
ret
mov
pop
fs
ds
and
jne
pusha
cmp
cdq
das
mov
int3
pop
ss
sbb
xor
xchg
jne
repz
ins
inc
dec
and
loope
mov
push
add
mov
div
xchg
sahf
les
(bad)
xor
ins
push
clc
pop
mov
and
jge
pop
rol
or
add
clc
repz
sub
mov
frstor
dec
std
lock
call
jno
ins
pusha
or
push
mov
scas
sbb
fldenv
xchg
dec
cmp
adc
fnsave
push
scas
pop
dec
sub
pop
push
fistp
icebp
mov
pop
xchg
stos
fwait
xchg
jl
add
test
das
bound
or
mov
dec
xchg
leave
stc
add
push
and
fidiv
bnd
and
je
inc
(bad)
jecxz
inc
or
out
(bad)
sahf
cwde
into
pop
leave
sbb
out
in
loope
cli
mov
int
in
dec
add
cmp
movs
(bad)
jmp
adc
rol
dec
sti
(bad)
lock
scas
dec
ss
xor
rcl
dec
pop
(bad)
sub
sub
pop
xor
mov
pop
cli
xlat
or
out
fcomip
repnz
mov
(bad)
mov
add
rol
cmp
xchg
dec
and
aaa
inc
shl
(bad)
sub
ins
add
arpl
into
jb
mov
je
out
push
push
jmp
cmc
test
mov
je
loope
sbb
hlt
jge
jae
nop
jg
popf
push
dec
and
dec
cmps
push
sub
sbb
leave
xor
cld
cmp
int3
pop
ret
cmp
mov
xchg
add
sbb
sub
aas
xor
jbe
inc
loop
mov
(bad)
sahf
pop
push
xor
inc
or
cmp
test
fistp
sar
dec
aas
push
sub
mov
loope
hlt
repnz
inc
xor
jle
xor
dec
(bad)
out
push
cmps
and
mov
xchg
movs
mov
loope
adc
mov
mov
daa
xchg
iret
jge
sbb
push
les
adc
cmps
inc
cmps
ret
shr
test
inc
scas
out
sub
pushf
and
loop
cmc
retf
jbe
shl
xor
sub
ins
cdq
ds
ja
mov
repnz
cmp
ja
int3
sar
inc
imul
dec
ret
aaa
call
addr16
inc
sbb
fistp
ja
shl
fsubr
sub
mov
dec
test
jmp
pop
icebp
sbb
mov
push
xlat
lahf
pop
in
frstor
mov
push
xlat
push
and
dec
repz
xor
inc
mov
xchg
add
cli
push
dec
add
movs
inc
pop
or
lea
out
xor
retf
rcl
xchg
dec
stc
pop
adc
dec
test
imul
in
jnp
stc
jmp
dec
(bad)
(bad)
fcmovnu
shr
inc
scas
adc
xor
adc
lods
cld
add
and
in
and
xchg
(bad)
es
dec
add
fnstcw
popa
fdiv
and
jne
jecxz
popa
push
inc
bnd
mov
stc
and
and
out
and
call
sbb
xor
fnstsw
(bad)
lods
push
mov
sub
and
dec
inc
xchg
inc
pop
cmp
test
add
push
rcr
jnp
inc
jbe
or
push
retf
retf
stos
in
ins
adc
lods
int3
jge
mov
test
inc
mov
test
or
adc
mov
lahf
jo
das
or
xor
mov
pop
into
rcl
inc
mov
outs
mov
adc
cvtps2pi
xchg
(bad)
xor
add
cmp
test
xor
or
loop
jbe
(bad)
xchg
cmp
repnz
shl
cld
aad
ins
xor
lock
mov
mov
pop
ins
add
pop
mov
sti
or
(bad)
jmp
dec
mov
mov
lahf
sbb
fwait
cdq
cmp
pop
cmps
dec
ret
pop
cmp
cmps
mov
jge
addr16
shr
mov
aas
fistp
xchg
aam
sub
mov
cmc
adc
push
xchg
mov
mov
sbb
pop
ret
xchg
das
sti
adc
mov
adc
sub
fbld
sub
int3
mov
shr
imul
jmp
push
mov
mov
aad
shl
xchg
out
mov
or
or
dec
aaa
and
push
mov
pop
ret
lods
into
jmp
sbb
dec
aam
arpl
dec
lods
outs
xor
test
cmp
arpl
inc
push
cld
pop
dec
gs
cmps
jnp
rcr
sahf
mov
cmp
(bad)
in
js
sbb
mov
jne
push
fadd
fcmovne
out
mov
cmps
xor
in
mov
push
pop
mov
sbb
sbb
or
in
daa
mov
(bad)
dec
adc
push
and
in
add
sti
lock
aam
(bad)
cmovne
outs
mov
push
sbb
loopne
pop
scas
jmp
pop
add
and
mov
xchg
shr
gs
movs
movs
cmp
lahf
add
pop
cmp
mov
xor
xchg
out
dec
in
lds
ins
fcmovbe
cwde
ins
sub
mov
jmp
mov
push
mov
xchg
cmp
mov
inc
test
aam
cmp
pusha
inc
lahf
lods
push
mov
ins
js
shr
fsub
add
sti
movs
cmp
cld
(bad)
hlt
div
xor
enter
xor
jg
fimul
pop
lods
adc
retf
scas
sahf
fldenv
popa
sbb
mov
push
test
in
loopne
out
push
idiv
inc
adc
dec
out
inc
add
xlat
les
cs
xor
out
xchg
add
out
add
sub
cwde
xchg
int
pop
movs
dec
xchg
sbb
nop
mov
outs
sbb
mov
(bad)
push
pop
fbld
mov
sti
push
dec
and
adc
adc
mov
jmp
jmp
ds
retf
jno
call
mov
movs
jmp
inc
adc
imul
add
sub
mov
enter
das
aam
data16
imul
mov
mov
cmp
xlat
adc
xchg
and
mov
xchg
imul
mov
and
mov
jle
data16
in
(bad)
sbb
fnstenv
push
idiv
fisub
mov
dec
sub
or
dec
cmp
mov
jecxz
(bad)
dec
mov
loop
movs
pop
mov
inc
sar
fistp
in
xchg
int3
pcmpeqw
inc
adc
jge
repz
or
jl
or
jnp
add
outs
dec
jns
pop
add
(bad)
jl
mov
aaa
mov
push
ins
out
mov
(bad)
sar
sbb
cmp
mov
mov
addr16
cmp
mov
(bad)
in
mov
cmp
in
jne
retf
or
fwait
xchg
mov
jmp
repz
cmp
lahf
xor
mov
movs
popa
shl
loope
test
int3
jae
jmp
sub
cmps
mov
and
sub
(bad)
rcr
add
mov
lods
ds
cmp
ror
dec
ret
or
int
sbb
sar
sbb
push
jbe
(bad)
and
clc
fidiv
imul
mov
inc
adc
or
mov
daa
mov
jecxz
lods
jns
test
dec
mov
cmps
xchg
push
push
sub
out
jg
cdq
dec
outs
cdq
repnz
movs
cli
cmp
in
leave
dec
xchg
movs
or
hlt
cmp
cmp
jo
mov
push
jmp
xor
cmp
push
fsubr
dec
scas
push
repnz
lock
test
jae
mov
add
jnp
pop
pusha
mov
popa
jnp
daa
or
das
sti
dec
jne
outs
idiv
shr
mov
push
xchg
or
inc
shr
aad
aaa
jmp
mov
gs
(bad)
fimul
inc
xchg
out
(bad)
inc
pop
(bad)
leave
cmp
sub
in
jb
retf
sbb
inc
test
fwait
add
or
inc
add
sahf
add
or
or
push
cmp
push
and
jg
or
loopne
mov
sub
sbb
xchg
ja
je
xchg
cli
push
or
out
jne
test
sbb
pop
mov
sbb
rol
loopne
psraw
mov
outs
xor
popf
xchg
imul
xor
jle
mov
mov
inc
test
sbb
rcr
inc
loop
cmps
aaa
adc
fist
das
mov
sbb
aad
sub
adc
lahf
(bad)
in
dec
js
cmp
xchg
pop
(bad)
jns
and
mov
idiv
push
and
in
out
cdq
aas
add
push
in
add
imul
movs
and
daa
cli
les
(bad)
int3
sub
inc
icebp
lods
outs
mov
sbb
and
lea
imul
mov
mov
leave
pop
dec
dec
add
sub
js
pop
scas
jo
sbb
data16
hlt
cmp
rcr
adc
aad
jmp
sbb
ficom
clc
enter
pop
ret
retf
pop
xchg
imul
xchg
popa
sub
lahf
push
pop
adc
pop
inc
xchg
mov
mov
jecxz
xor
jge
cmc
pop
jbe
mov
sbb
enter
cmp
out
fdiv
pop
push
add
lds
add
push
push
icebp
add
inc
sub
adc
sub
fbstp
pop
mov
lea
scas
mov
test
and
push
pop
ret
shr
push
pop
cld
mov
jg
sahf
movs
cld
es
xchg
std
pop
rcl
cdq
fdivrp
cdq
mov
or
(bad)
imul
mov
mov
sbb
inc
adc
hlt
mov
mov
mov
imul
out
or
inc
cmp
jae
scas
jp
jb
loop
retf
repnz
test
cmp
and
pop
mov
lods
out
xchg
jge
add
dec
arpl
ficomp
leave
inc
sahf
out
fisubr
sti
ficomp
sub
sbb
jg
ins
add
fild
xchg
icebp
or
loope
outs
outs
jmp
daa
inc
pop
fimul
mov
repz
sub
mov
in
jmp
jmp
imul
lods
or
pop
jecxz
dec
pop
adc
(bad)
das
push
inc
adc
or
or
xor
jl
stos
in
int
inc
or
xchg
sbb
push
jo
xchg
xchg
or
xor
mov
inc
nop
sbb
jnp
jbe
mov
mov
fnsave
jle
(bad)
sub
repnz
cmps
dec
mov
push
xchg
sub
push
stc
or
test
daa
dec
retf
xor
mov
ins
int
jae
fs
mov
push
clc
or
or
jnp
xchg
int3
mov
and
inc
stos
cmp
sbb
mov
sbb
fdivp
adc
pop
sbb
mov
movs
outs
jmp
xchg
cmp
(bad)
jae
and
push
mov
sahf
in
jbe
or
or
pop
pusha
cdq
pop
imul
mov
mov
imul
(bad)
leave
aad
pusha
mov
mov
not
inc
dec
mov
push
ins
and
mov
jmp
sub
jmp
in
sub
and
jno
cmps
mov
add
push
push
cmp
jns
mov
clc
xchg
(bad)
stos
sahf
in
pop
cmp
ins
push
cmp
retf
int3
mov
call
or
(bad)
ins
mov
mov
or
scas
stc
ins
jae
scas
push
scas
out
xchg
fnstenv
cmp
hlt
or
ret
push
out
fld
dec
and
lahf
inc
and
push
adc
jmp
cs
cmp
mov
lea
add
fwait
xor
pop
shl
les
pop
sub
test
in
xchg
inc
mov
pop
cmps
xchg
out
sub
xchg
xor
or
xor
dec
out
popa
adc
xor
pop
(bad)
sar
dec
in
jne
xor
sub
fisttp
scas
jae
stos
hlt
fdivr
rcr
rcr
jg
add
inc
add
mov
mov
mov
push
dec
adc
mov
cmp
mov
(bad)
ss
and
mov
push
push
enter
sahf
call
and
test
xchg
xchg
enter
aam
sub
mov
lea
es
or
add
test
mov
inc
xchg
mov
fdivr
mov
xchg
jae
pusha
fs
lea
jno
call
call
cmps
jbe
jecxz
fist
fwait
mov
push
or
dec
cmps
xor
in
mov
jmp
cwde
inc
cmc
sbb
pop
fneni(8087
(bad)
jno
enter
aad
(bad)
add
mov
push
push
jne
inc
loop
pop
jne
add
repz
jg
mov
lea
mov
fwait
bound
arpl
test
mov
mov
mov
retf
jecxz
popa
(bad)
ins
int3
push
movs
rol
ja
sbb
adc
pop
lods
call
cmc
jmp
add
stc
and
jae
add
jbe
mov
(bad)
mov
pop
aam
cmp
mov
pop
iret
and
sbb
mov
repz
sbb
push
outs
add
or
imul
jg
(bad)
mov
adc
cmps
(bad)
xor
pop
inc
pushf
addr16
inc
mov
div
and
inc
dec
jge
repz
stc
mov
sahf
test
shr
push
cmp
daa
jecxz
cmps
retf
mov
call
inc
dec
mov
xor
jnp
sbb
or
mov
call
mov
mov
jge
aam
pop
and
dec
push
inc
or
xor
mov
icebp
imul
sub
xor
bound
retf
nop
push
push
adc
pop
xlat
popa
jmp
mov
pop
xchg
stc
repz
and
aad
pop
mov
dec
push
(bad)
push
shr
dec
idiv
mov
mov
cmp
and
sub
jg
add
mov
ins
arpl
adc
xlat
loopne
ret
aaa
bound
sbb
inc
or
inc
mov
pop
sub
cmp
mov
sahf
jle
jl
int3
mov
xchg
adc
sub
xchg
popa
in
push
or
add
mov
ins
ret
dec
sbb
in
ins
shr
and
push
test
jp
ret
inc
pop
jno
push
out
popf
sbb
add
xchg
mov
or
scas
add
sbb
sub
ret
fcomi
xchg
mov
xchg
stos
sbb
add
inc
stos
dec
add
outs
ror
push
movs
arpl
inc
div
cld
cmp
das
jmp
ja
add
sub
pop
sub
sub
aam
or
out
aaa
jge
int3
dec
or
stc
idiv
nop
jmp
xchg
xchg
cmp
movs
scas
mov
mov
jg
dec
lahf
xchg
xor
push
ja
sub
in
mov
pushf
repnz
and
gs
cld
jp
cmp
js
xchg
push
pop
or
cwde
jne
pop
mov
(bad)
icebp
push
dec
je
aad
test
inc
mov
cld
out
and
jp
(bad)
repnz
in
or
sub
cld
leave
pop
or
push
fadd
repz
cmp
stos
es
mov
and
movs
pop
mov
sbb
adc
in
sub
mov
inc
shl
sbb
sub
xchg
pop
push
mov
scas
cld
push
jge
or
rol
fwait
jge
sti
minps
rcr
dec
mov
sbb
hlt
dec
scas
pop
push
repz
test
pop
enter
adc
jns
test
ret
popw
call
out
xlat
daa
call
fild
ins
popf
dec
add
inc
add
nop
ss
ficomp
xchg
mov
inc
enter
popf
mov
ret
mov
or
ret
sub
out
lds
mov
sbb
mov
(bad)
fistp
lods
jg
push
adc
pop
imul
pop
xor
out
jae
mov
fadd
xor
jmp
dec
ja
mov
sbb
sub
les
inc
ror
outs
xchg
cwde
sbb
push
dec
lods
mov
in
div
push
adc
push
mov
arpl
lahf
cmp
femms
fwait
imul
sti
pop
sub
and
push
xchg
dec
leave
push
mov
inc
push
xlat
mov
arpl
imul
push
call
hlt
iret
cmps
sub
inc
iret
daa
and
jnp
stc
mov
xchg
mov
dec
pop
push
mov
arpl
bound
mov
push
dec
mov
jbe
jnp
sbb
jecxz
mov
push
pop
or
dec
sbb
and
push
std
pushf
sub
aad
add
mov
mov
adc
pop
add
stos
or
pop
hlt
jmp
ret
mov
push
jecxz
push
adc
cmp
dec
imul
stos
or
dec
or
xchg
fwait
sub
aas
xor
lock
add
mov
cs
cdq
in
mov
test
rcl
and
out
or
sbb
mov
add
inc
cmp
sbb
dec
cmp
adc
popf
xchg
movs
sub
mov
enter
xchg
pop
aad
sar
ret
stc
mov
add
ins
ffree
cli
and
imul
fstp
mov
f2xm1
push
ins
adc
add
inc
dec
sbb
test
test
xor
mov
idiv
leave
lock
cmp
ret
addr16
mov
in
addr16
movs
jmpw
push
cwde
clc
sub
movs
stc
add
pop
xor
pop
shr
jo
dec
push
cli
dec
outs
mov
push
lea
es
shl
or
clc
in
nop
aaa
add
nop
(bad)
add
xchg
fs
jmp
jmp
ds
mov
int3
jge
sahf
jle
es
inc
jnp
and
mov
add
inc
pop
or
inc
pop
mov
add
jo
fidiv
xchg
fwait
jne
sub
stos
mov
rcr
addr16
test
mov
into
(bad)
xchg
pop
jmp
mov
xor
jg
mov
xchg
sbb
mov
mov
iret
sbb
and
add
fistp
jmp
pop
call
xchg
pop
dec
movs
(bad)
scas
sub
lea
and
ds
stos
jge
xor
xchg
push
dec
mul
jb
cmp
add
and
add
jns
mov
int
jle
mov
int3
xor
retf
mov
dec
push
add
retf
cwde
jecxz
js
bound
dec
sbb
pop
sub
mov
repnz
in
and
dec
mov
jl
mov
cmp
ins
lods
xchg
xchg
xor
lock
imul
xchg
mov
push
jmp
mov
out
jecxz
es
pop
shl
lods
sub
fisttp
sub
cmp
call
adc
cs
cmp
fstp
pop
pushf
pop
sahf
pop
pop
jecxz
or
jmp
add
daa
pop
or
cmps
jl
dec
jbe
fsub
xor
mov
xchg
repnz
rcl
cmp
add
je
jns
aaa
cmp
sbb
mov
dec
jge
adc
lock
stos
and
sub
mov
pop
jp
out
fistp
(bad)
cdq
cmps
pushf
and
movs
and
lods
mov
leave
jb
xlat
pop
mov
out
mov
psubd
push
or
push
push
jecxz
int
lds
dec
xchg
xor
or
repnz
cld
xor
sbb
stos
or
xor
cmps
lea
xor
fbld
into
add
test
sbb
ins
stc
adc
sub
mov
stc
sbb
inc
stos
or
add
lds
dec
jae
and
fcomp
xchg
or
sub
jb
or
fmul
lahf
lds
jmp
cmp
jne
mov
movs
(bad)
stos
push
inc
jmp
dec
ds
jle
mov
shl
ds
in
cs
cmp
sub
mov
sbb
inc
jg
ss
aad
clc
jns
mov
ret
hlt
xchg
mov
sbb
pop
push
inc
gs
mov
pop
mov
mov
ret
xchg
pop
jge
movs
(bad)
and
push
nop
or
push
push
mov
(bad)
jp
je
daa
rcl
daa
jge
leave
jae
xchg
dec
add
or
ins
ret
sbb
add
xchg
scas
shr
fdivr
jge
cs
jae
cmp
pushf
pushf
sub
retf
lds
mov
div
inc
xchg
jge
out
dec
push
mov
inc
and
div
push
sbb
cmc
mov
scas
fldenv
cmp
mov
and
sub
fmul
cmp
mov
mov
xor
js
aad
stos
pop
inc
mov
xor
into
scas
test
xor
sar
mov
daa
les
movs
(bad)
int
in
and
or
ret
adc
adc
or
adc
into
fidiv
ror
aas
adc
retf
sahf
add
fisubr
test
sbb
mov
sub
xor
cmp
inc
mov
outs
push
xchg
push
mov
xchg
xchg
xor
mov
aaa
cmp
adc
repz
aam
push
mov
das
jnp
sbb
jg
fwait
hlt
xor
xchg
sub
sbb
adc
rol
pusha
cmp
pop
mov
(bad)
out
adc
pop
lods
daa
cmp
or
ror
fnstenv
(bad)
cld
dec
mov
sub
je
in
adc
test
dec
jmp
xchg
pop
jb
cmp
and
movs
(bad)
adc
sbb
fucomp
mov
mov
retf
fbld
cdq
out
scas
sub
and
xor
push
sbb
lea
push
dec
mov
aam
and
inc
add
dec
fsub
mov
fild
jl
call
adc
mov
sbb
xor
inc
mov
imul
imul
mov
lock
cmp
inc
mov
mov
pushf
das
dec
xor
mov
popf
or
jns
mov
adc
stos
xor
mov
xor
out
push
stc
inc
lods
loopne
sti
dec
mov
cmc
outs
xor
xchg
call
lock
mov
outs
rcl
imul
call
mov
xchg
out
loopne
dec
cmp
(bad)
mov
(bad)
loopne
cmp
and
ffreep
out
lock
mov
cmps
add
movs
jo
add
mov
jns
mov
cmp
test
fnstenv
mov
in
mov
into
xchg
pop
mov
mov
int
popf
cmp
dec
jl
xor
das
out
in
das
mov
arpl
ins
imul
mov
(bad)
add
test
ret
stos
xor
sar
mov
and
and
or
mov
out
cmc
or
and
xchg
imul
mov
push
inc
xchg
ins
cld
cmc
jl
add
hlt
and
cdq
stos
and
push
lea
movs
cmp
dec
jge
jle
aaa
jns
enter
out
adc
cs
in
mov
cmp
fnstcw
mov
add
ds
(bad)
lds
and
or
scas
pushw
mov
ds
(bad)
fsubr
and
lahf
cmp
sbb
(bad)
fimul
pop
outs
retf
in
das
icebp
push
xchg
mov
jns
movs
call
pushf
or
inc
mov
jg
and
pop
jno
pop
push
(bad)
and
out
mov
call
pop
js
lods
mov
xchg
xchg
fcmovnbe
dec
enter
xor
scas
mov
inc
test
bound
jge
jp
or
shl
sub
xor
ss
fnsave
int
nop
mov
jbe
int3
std
jnp
xchg
loop
icebp
xor
mov
sbb
xor
jnp
movs
cmps
xor
lods
push
rcr
push
or
cmp
neg
(bad)
cli
cld
sahf
fdiv
cwde
std
shr
inc
jo
test
push
aad
sbb
mov
das
push
mov
mov
sub
dec
je
pop
retf
sub
lods
fcomp
pop
je
push
inc
(bad)
shl
enter
mov
lods
pop
add
push
sar
pop
aam
push
(bad)
adc
mov
or
fwait
push
inc
adc
sbb
dec
not
iret
mov
lds
(bad)
das
pop
popa
jg
mul
xchg
cmp
pop
gs
pop
(bad)
or
popa
les
pop
fistp
adc
sbb
mul
out
lods
and
je
jmp
xchg
xor
into
jo
pop
and
(bad)
jb
enter
mov
out
cmp
and
jmp
mov
mov
jmp
dec
dec
adc
int3
outs
inc
in
push
push
loopne
pushf
push
in
inc
ror
popa
add
push
and
in
mov
in
fidivr
popf
repz
xchg
dec
inc
in
sub
fst
xchg
xchg
or
in
popf
scas
sti
cmp
dec
repz
in
inc
ret
fstp
sub
outs
xor
mov
xor
pusha
loop
dec
sbb
loop
mov
sub
pop
(bad)
sbb
addr16
pop
ret
jmp
call
push
jg
mov
(bad)
aaa
xor
adc
cmc
cli
lock
jge
sub
add
(bad)
pushf
adc
jo
repz
cmp
lods
call
sub
dec
sbb
sub
sub
out
sbb
xlat
pushf
cmps
mov
shr
inc
add
xor
ins
es
sub
xchg
loopne
push
cld
addr16
and
xchg
push
loop
arpl
add
push
into
jge
push
xlat
push
xor
out
loope
mov
(bad)
stos
(bad)
fcomi
xor
jnp
nop
ficomp
sbb
push
xchg
add
(bad)
push
test
pop
mov
xchg
icebp
jle
and
(bad)
call
lea
stc
aas
sbb
mov
push
in
xor
sbb
movs
mov
mov
mov
out
in
dec
enter
shl
scas
dec
iret
jl
clc
or
aam
jecxz
pop
adc
cld
sbb
aaa
cmp
push
(bad)
jg
jae
rol
in
sub
les
outs
and
ins
or
std
mov
push
inc
les
loop
ror
jnp
jmp
push
adc
addr16
leave
cld
add
add
and
aaa
shl
jae
pop
test
or
xchg
xchg
bound
(bad)
into
das
std
sub
xchg
jae
lock
cld
fiadd
xchg
les
fsubr
pop
in
add
lods
jo
mov
cmps
pop
mov
(bad)
xor
fdivr
adc
ret
out
aam
push
mov
mov
scas
push
pop
je
mov
and
dec
pop
fsubr
in
sub
std
(bad)
mov
lahf
mov
adc
cld
jnp
jg
mov
fild
add
sbb
jnp
inc
(bad)
push
or
stc
inc
cmp
ins
pop
fimul
or
mov
outs
pop
mov
inc
push
and
or
pop
push
(bad)
sti
adc
outs
mov
jecxz
add
or
fst
aaa
xchg
pop
lods
mov
push
(bad)
fild
inc
daa
ss
aad
push
das
mov
aaa
pop
jb
ins
repnz
out
stos
cmc
ins
(bad)
jmp
test
lahf
sbb
and
or
shl
lock
and
xor
jb
mov
cmp
outs
fld
hlt
popa
es
mov
add
xor
fsub
ror
mov
mov
sahf
mov
ret
ret
inc
test
(bad)
mov
jg
test
shr
rol
or
mov
add
xchg
pushf
fcomip
jp
cmp
fdiv
(bad)
jmp
jbe
jl
push
xor
ret
(bad)
push
jg
inc
add
push
jae
sbb
or
cs
inc
fstp
mov
mov
jno
pop
push
lds
jns
outs
seta
inc
jno
fwait
or
cld
jo
or
adc
test
ja
xchg
shr
sti
gs
(bad)
div
rcr
inc
arpl
xchg
adc
pop
loop
sbb
sbb
sar
aas
ficom
sbb
xor
xchg
into
int3
or
enter
imul
mov
test
sbb
sahf
cdq
sti
loopne
fucomp
jmp
and
push
rcl
std
lods
scas
xchg
scas
call
or
in
mov
jns
daa
push
sbb
test
call
mov
cdq
stos
xchg
cmc
inc
pop
xor
(bad)
sub
mov
jle
ins
xchg
ins
xor
ror
cmp
ins
cmp
mov
packssdw
sbb
fstp
xor
(bad)
mov
loopne
(bad)
jle
je
leave
mov
iret
or
arpl
clc
leave
std
cs
pushf
mov
loop
xor
sbb
pop
lahf
aam
in
sbb
and
xor
je
shl
mov
dec
inc
xor
jg
in
jp
or
cwde
add
(bad)
dec
into
xor
call
sbb
push
mov
aaa
loope
stos
call
popf
lock
loope
sub
xor
dec
or
mov
jecxz
std
popf
js
ds
cmp
ja
ds
test
popa
stc
call
mov
pop
dec
cmp
cvtpi2ps
mov
xchg
jne
cmc
hlt
xor
sbb
cmps
popf
fbstp
clc
pop
xchg
dec
pop
cdq
jmp
psubusw
ins
ret
aas
repnz
daa
pop
repz
inc
xor
sti
push
movs
(bad)
retf
mov
or
jg
push
shr
in
jecxz
imul
enter
movs
ret
repnz
jne
pushf
jmp
jne
adc
dec
or
add
neg
jo
sbb
dec
push
xor
add
xchg
xlat
stos
xchg
fstp
adc
and
movs
imul
std
sub
mov
test
in
data16
and
push
stc
cmp
and
xor
jge
inc
or
rcl
in
sbb
pop
std
outs
inc
mov
pop
fsub
adc
xor
das
inc
scas
icebp
cmp
ficomp
loop
shr
daa
jp
outs
jb
pop
sub
push
es
js
xchg
cwde
mov
shl
sub
jge
icebp
push
adc
dec
pop
mov
mov
shl
mov
inc
pop
shl
or
mov
loope
ins
movs
push
test
mov
aad
ds
push
xchg
outs
xor
clc
sbb
in
mov
xchg
inc
pop
mov
push
test
iret
outs
inc
in
and
cmc
(bad)
pop
mov
cs
pop
repnz
cmp
clc
pop
sub
(bad)
imul
sub
imul
push
popf
js
dec
test
jno
or
repz
fwait
test
cmp
sahf
jmp
call
and
jno
fbld
sub
leave
jmp
xor
cdq
sbb
std
sbb
pop
out
dec
pop
(bad)
sub
fwait
mov
xchg
int3
fcomi
jl
push
sar
ja
cwde
loopne
adc
ror
sbb
dec
cmp
jo
in
jg
jl
adc
sub
stc
retf
stc
mov
pop
add
inc
add
or
sub
pop
xchg
fldcw
push
mov
repnz
test
sbb
pop
mov
add
test
jb
int3
clc
lahf
scas
cmc
push
xor
mov
sbb
pop
xchg
or
xor
push
cmp
jmp
lahf
inc
inc
out
lods
test
and
inc
jmp
cli
jecxz
call
in
pop
cmp
mov
stos
mov
pop
popf
adc
xchg
add
push
rcl
xchg
js
out
das
xor
call
nop
fidivr
mov
inc
jmp
mov
lods
shl
xchg
out
xor
push
adc
or
enter
pusha
and
pop
and
or
jno
rcl
mov
xchg
ja
into
js
shr
out
add
adc
cmp
into
mov
xor
popa
inc
shl
and
jb
in
xchg
js
pop
sbb
pop
outs
aaa
aaa
sub
lahf
(bad)
(bad)
jne
dec
add
dec
push
mov
scas
call
cdq
add
xor
shr
jp
retf
loop
movs
cmc
jp
jmp
sar
cmp
jp
mov
in
fnstsw
or
xor
cmps
or
clc
stos
out
ins
or
jecxz
test
mov
inc
xor
loop
nop
ficom
stos
fmul
xchg
or
jge
ret
pop
jecxz
inc
cmps
out
ret
xor
stos
mov
fidivr
xor
adc
cmp
fbstp
xchg
dec
jmp
pusha
(bad)
xchg
out
(bad)
into
(bad)
daa
sbb
movs
pop
call
daa
js
sub
xor
test
pushf
scas
mov
(bad)
into
test
push
int3
pop
fcmovne
xor
push
jge
dec
addr16
pop
test
xor
cld
call
shl
(bad)
jb
ficom
mov
mov
jmp
loope
sbb
ja
mov
push
sub
jbe
out
sbb
fsub
aas
push
and
in
mov
push
bound
adc
dec
loope
bound
fadd
inc
out
sub
push
and
fst
das
iret
sar
sub
test
dec
push
call
mov
inc
rol
mov
jnp
xchg
cmp
mov
xchg
mov
mov
or
in
ds
pop
cli
sbb
pop
call
ficomp
cmp
outs
repz
pop
cmps
je
gs
lock
adc
mov
xor
add
ficom
sar
test
cmp
inc
out
out
aas
jnp
or
pop
jge
gs
sub
popf
push
in
inc
push
aas
mov
(bad)
rcl
aas
xor
data16
mov
movs
movs
pop
mov
sbb
lods
push
adc
push
jmp
lahf
test
fs
dec
sub
loop
mov
cmp
mov
dec
scas
mov
ffreep
mov
ss
loopne
inc
inc
popf
mov
into
push
arpl
jne
add
sbb
js
std
aam
les
or
inc
test
fisttp
pop
add
jno
vmwrite
ins
jne
test
cmp
cmps
(bad)
inc
push
sub
in
ret
mov
pop
cmp
cld
cmp
jns
(bad)
mov
and
repz
mov
(bad)
cmp
test
cli
addr16
in
and
xor
cli
adc
out
cmp
cmc
xor
xor
les
aas
mov
push
(bad)
mov
mov
sub
pop
inc
inc
cli
jo
add
and
dec
or
inc
cdq
pop
test
(bad)
jne
sub
stos
dec
dec
stc
xchg
push
mov
test
stos
ins
pop
or
int
cld
in
data16
outs
retf
lahf
cli
xchg
push
pop
retf
pop
xchg
push
adc
aas
sbb
in
frstor
les
mov
mov
pmulhw
xchg
push
rol
push
sub
sar
repnz
js
scas
ins
jb
sbb
mov
dec
rcl
mov
fimul
out
cmp
cmps
pop
test
test
pop
sbb
fcmovnbe
aam
push
movs
push
cld
push
ja
dec
cmp
mov
adc
std
cmp
xchg
add
sbb
out
imul
pop
sub
scas
fstp
dec
jle
daa
bound
outs
or
inc
pop
push
add
mov
and
loopne
jle
scas
fdivrp
mov
mov
xchg
adc
pop
sbb
fwait
or
adc
addr16
jp
(bad)
jmp
test
xor
icebp
sub
aas
int
sti
cmp
stc
lods
sahf
iret
sub
cld
push
add
gs
icebp
in
xor
lods
push
pminsw
cwde
pop
xchg
push
sbb
cwde
ds
inc
add
mov
enter
jmp
xor
pop
jne
sbb
cdq
aaa
lods
pop
mov
mov
inc
pop
push
ins
je
sub
(bad)
fist
add
retf
mov
jmp
push
mov
ss
pop
ins
fistp
out
jecxz
ds
(bad)
out
repnz
cld
push
add
mov
push
clc
push
mov
adc
movs
add
xchg
mov
cwde
cmp
pusha
xchg
scas
imul
adc
cmps
fmul
fs
and
xor
(bad)
int
scas
adc
sub
dec
hlt
xchg
or
mov
mov
inc
push
test
pop
loopne
pop
fistp
imul
inc
or
and
or
loopne
movs
sti
shr
sti
mov
pop
fcomp
xchg
(bad)
imul
add
int
mov
bound
imul
xor
and
out
mov
sbb
ret
pop
push
imul
pop
scas
movs
shl
test
cmp
shr
loopne
mov
and
inc
shl
push
dec
nop
retf
cmp
fdiv
ror
or
mov
mov
dec
pop
push
out
cmp
push
outs
js
jmp
cmps
out
movs
jl
cwde
(bad)
repz
stc
test
dec
xor
mov
dec
jo
cmp
pop
lahf
fcom
fistp
jecxz
mov
lock
and
push
push
xchg
adc
icebp
call
lea
push
hlt
add
fld
jae
test
mov
inc
mov
sub
mov
shr
dec
adc
adc
add
jo
mov
inc
gs
push
lock
cmp
les
add
das
loope
sub
lods
pop
fs
lahf
cmp
jo
cmc
cwde
xchg
jmp
retf
cmc
xchg
or
push
std
ins
and
mov
xlat
push
inc
push
push
xrelease
add
xchg
adc
fisubr
add
mov
xlat
adc
out
cmp
jb
mov
sbb
xor
jne
mov
stos
push
loope
xor
(bad)
stos
movs
pop
lods
inc
mov
out
test
retf
sbb
sbb
xchg
mov
nop
and
and
pop
adc
test
mov
mov
out
pop
cld
jecxz
push
jb
jb
das
sub
dec
dec
imul
scas
and
inc
scas
xchg
dec
das
js
push
mov
cwde
les
jecxz
icebp
les
sbb
xchg
mov
fadd
sbb
cmps
xor
push
pop
fcmovbe
stos
rcl
pop
cmc
in
outs
or
int3
shl
adc
test
xchg
repz
add
scas
and
ins
sbb
mov
dec
mov
add
mov
sti
(bad)
in
stos
push
push
xchg
xor
leave
int3
mov
out
mov
stos
in
cmp
scas
cmp
mov
jo
or
in
repz
(bad)
shl
popa
adc
cmp
pop
sub
jno
call
cwde
dec
jl
call
sbb
push
shr
je
sub
in
call
loopne
jnp
xchg
mov
sbb
mov
shl
push
psubq
mov
mov
fld
mov
jl
cmp
lods
inc
std
scas
cli
ss
jmp
jb
lahf
adc
leave
rol
popf
popf
jbe
rol
jnp
xor
add
adc
inc
(bad)
ret
aam
into
add
lods
dec
in
xor
cmp
lds
scas
xor
sub
pop
cdq
push
sahf
cmp
pop
fsub
mov
mov
pop
xor
fstp
sbb
cmp
in
inc
push
sbb
dec
mov
pop
cmp
cmp
adc
fsub
dec
mov
iret
hlt
dec
mov
loope
sub
adc
and
sub
sub
add
es
loopne
daa
cmc
sar
in
add
adc
lock
int3
out
adc
pushf
mov
pop
mov
call
in
inc
push
or
push
or
pushf
pushf
push
lods
sub
aam
ds
das
ror
clc
jg
lahf
add
inc
popf
ins
sbb
add
xchg
sub
and
outs
dec
or
add
sbb
inc
sub
fadd
or
icebp
sti
fld
jle
hlt
xchg
out
add
cmp
pop
mov
(bad)
arpl
mov
jo
push
pop
adc
fbld
inc
shl
inc
cmp
pop
jmp
xchg
jl
dec
push
xchg
repnz
or
jns
(bad)
push
or
push
sub
stos
mov
(bad)
out
popf
xlat
push
xor
jp
call
(bad)
sub
cmp
fs
xor
push
mov
aas
push
nop
mov
shr
shl
lea
dec
pop
inc
rol
test
outs
mov
adc
dec
rol
mov
fmulp
mov
fcomip
pop
and
xchg
pop
xchg
mov
mov
jo
sti
test
pop
int
loopne
mov
out
inc
add
lahf
test
fstp
leave
outs
mov
pusha
push
push
cmc
repz
leave
sub
jne
or
jbe
push
jo
(bad)
arpl
mov
mov
aas
daa
fstp
mov
sub
cmp
in
mov
sub
dec
cmp
pop
ret
pop
dec
dec
mov
adc
adc
pop
dec
adc
(bad)
mov
cs
mov
dec
ret
cmp
pop
adc
xor
xchg
in
adc
mov
lea
cli
retf
pusha
adc
les
cld
sar
loop
inc
mov
mov
shl
out
clc
ret
out
outs
add
into
repnz
push
lahf
and
sbb
add
cmps
aas
aaa
push
je
pop
test
adc
push
mov
and
lea
enter
jle
shr
mov
dec
push
movs
idiv
xor
add
stos
aas
mov
jmp
jl
mov
xor
hlt
xor
test
ret
dec
pop
lds
test
jle
daa
fwait
test
std
popa
mov
lahf
mov
jl
loope
les
push
test
mov
out
arpl
push
int
cmp
inc
mov
mov
mov
jo
mov
jmp
sub
push
mov
add
int3
dec
sub
inc
(bad)
neg
mov
(bad)
cs
xchg
pop
cmps
lods
and
sbb
dec
loopne
mov
pop
mov
jmp
ds
adc
and
dec
push
xchg
cmp
mov
inc
sbb
sti
cmp
xchg
pop
ror
mov
sub
push
push
scas
clc
cdq
fiadd
(bad)
push
aad
and
cmc
inc
mov
xlat
lock
fcomp
hlt
ja
dec
ss
call
jle
cmp
jl
movs
fild
jl
call
pop
fs
cdq
inc
xlat
test
neg
jg
mov
adc
mov
pop
sbb
and
pop
push
ins
pop
pop
jbe
xchg
xchg
inc
(bad)
mov
push
sub
xor
adc
and
in
rol
add
gs
sub
inc
cld
jl
sub
cmp
(bad)
mov
and
pop
mov
mov
xor
inc
lds
and
xchg
fdiv
outs
mov
or
pop
lock
addr16
popa
imul
sbb
mov
jp
mov
push
pop
or
call
mov
pop
sbb
cmp
xor
test
lods
sti
nop
ret
call
fs
pop
adc
xor
les
(bad)
fmul
mov
shr
xor
xchg
addr16
jno
inc
call
ds
cmps
into
fiadd
in
loope
test
div
inc
and
dec
scas
sub
sub
xor
cmp
mov
std
addr16
inc
pop
test
mov
lahf
ja
dec
sub
cmps
jmp
in
jecxz
out
or
lods
cld
push
jp
in
cdq
pop
int3
repnz
mov
and
jmp
or
push
call
mov
sub
std
cdq
and
cmps
repz
stc
in
adc
push
ins
pop
add
jmp
into
ffreep
jmp
fwait
inc
call
push
out
bound
sahf
sbb
mov
retf
iret
jmp
(bad)
push
mov
pop
enter
jne
jp
mov
cwde
into
xchg
mov
adc
jecxz
or
retf
inc
ins
out
inc
int3
arpl
iret
jb
push
push
xchg
in
shl
movs
xor
ins
mov
cli
stos
sbb
adc
and
lods
es
ja
jmp
dec
bound
jne
xlat
mov
jg
jns
mov
fnsave
movs
add
and
out
dec
cmp
mov
sbb
sbb
push
pop
adc
inc
mov
movs
adc
sub
dec
push
xlat
int3
inc
fdiv
push
stos
ret
inc
mov
jp
mov
mov
mov
cmc
cmp
jmp
xor
cmc
adc
dec
dec
or
cmp
jb
inc
pop
sub
push
arpl
adc
cmp
imul
mov
out
push
sbb
fcmovnu
sbb
xor
call
jmp
dec
enter
shr
pop
add
jae
xor
mov
mov
xor
adc
test
out
xchg
and
adc
leave
inc
iret
xor
jne
sub
fidivr
jmp
retf
or
(bad)
bnd
mov
je
jmp
jae
rcl
pushf
xchg
mov
int3
ret
fcomp
lahf
sbb
inc
and
(bad)
out
push
xchg
push
lods
shr
div
ds
inc
iret
icebp
mov
mov
pop
jmp
sub
xor
cwde
hlt
pusha
(bad)
ins
mov
mov
out
(bad)
(bad)
cmp
add
ins
xchg
pop
and
ss
stc
cmc
dec
lods
arpl
imul
inc
cdq
mov
das
xchg
sar
mov
pusha
xchg
or
mov
mov
add
ret
dec
mov
xor
add
retf
mov
cmp
mov
adc
dec
mov
enter
rol
inc
js
(bad)
mov
cmps
mov
retf
mov
cmp
fbstp
jns
sbb
sbb
arpl
jp
shl
ret
imul
mov
and
or
aas
hlt
data16
imul
sub
fisub
dec
dec
jo
enter
je
aaa
xchg
(bad)
mov
div
outs
je
push
in
sub
(bad)
push
sbb
xchg
mov
movs
loop
lods
mov
and
(bad)
sar
mov
inc
mov
push
outs
adc
popa
inc
fld
jmp
pop
mov
push
scas
out
inc
inc
pop
jnp
sahf
std
lea
jae
xchg
and
push
inc
adc
pop
(bad)
jae
stos
movs
and
cmps
mov
jecxz
addr16
lds
mov
std
in
and
inc
retf
jg
push
das
jb
int3
jb
fistp
fiadd
arpl
rol
outs
and
and
lods
jecxz
(bad)
jmp
inc
adc
out
(bad)
cwde
dec
lods
in
test
mov
mov
jmp
cdq
push
(bad)
or
push
hlt
out
in
clc
fwait
mov
mul
arpl
(bad)
repnz
jno
inc
fisub
imul
sbb
fdiv
mov
or
push
popa
xor
out
or
xor
(bad)
and
ret
adc
call
and
bound
dec
out
popa
lods
mov
aad
xchg
ins
cwde
test
adc
push
pop
mov
imul
leave
pop
test
mov
pusha
push
ror
jbe
jne
mov
dec
and
pusha
push
inc
jle
sbb
and
cmps
sbb
push
mov
icebp
mov
jbe
out
jmp
or
add
add
das
jnp
gs
call
lods
inc
add
ret
mov
shr
ret
or
ret
xchg
dec
out
mov
mov
test
arpl
xor
mov
inc
pop
xchg
or
xor
jge
or
pop
test
div
add
cmc
out
out
jge
je
(bad)
ror
gs
retf
cli
ror
fsub
loop
repz
hlt
add
mov
stc
or
adc
es
aas
jb
(bad)
lock
cs
lods
popf
(bad)
sbb
cli
jne
mov
retf
push
and
icebp
sbb
pop
movs
pop
int3
out
mov
mov
int
push
out
mov
out
inc
xchg
gs
mov
(bad)
loope
stc
mov
dec
retf
retf
sub
mov
shr
jp
repnz
mov
add
in
lea
jmp
mov
(bad)
test
or
sub
jp
mov
jl
mov
add
or
aam
jmp
push
cmp
fs
mov
cmp
jecxz
sub
pop
shl
mov
int3
out
inc
imul
stc
fdivr
jl
ret
pop
sahf
mov
mov
dec
nop
pushf
stc
pop
mov
(bad)
lods
dec
pop
ror
pop
xchg
inc
lods
xor
mov
mov
xor
mov
push
repnz
mov
int
adc
cmps
ds
and
jnp
fst
mov
mov
cmp
xchg
inc
mov
pop
cs
inc
xor
push
push
mov
arpl
shr
arpl
add
shr
sbb
ins
sahf
cmc
scas
xchg
sti
pop
ins
sub
xor
inc
cld
fsubr
inc
repz
push
and
cmp
push
dec
pop
shl
int3
xchg
and
mov
idiv
dec
cmp
(bad)
adc
cmp
or
mov
fistp
cmp
test
adc
test
mov
cmp
cmps
sub
clc
inc
xor
push
jne
xchg
mov
mov
ret
fs
ret
sbb
jmp
mov
test
shr
inc
test
dec
push
nop
or
sbb
or
mov
std
xor
loop
or
cld
fst
cmp
dec
sub
in
lods
mov
ja
push
inc
push
push
out
dec
test
or
out
push
or
imul
jge
fwait
xor
dec
pop
jb
mov
ss
pop
fcomp
mov
lds
push
xlat
jecxz
dec
xchg
out
xchg
mov
cmc
rcr
push
ficomp
and
push
push
imul
inc
cld
sub
call
mov
pop
pop
cld
movs
out
adc
sub
mov
sub
add
push
pusha
fistp
and
sub
jb
call
or
mov
cmp
cmp
shl
mov
pop
or
ret
loop
cmps
test
sbb
mov
test
ins
sbb
jne
push
sub
loopne
xchg
mov
mov
outs
adc
cmp
retf
jmp
mov
mov
jmp
ins
add
pop
sub
clc
fisttp
retf
das
je
lods
or
cmp
sbb
mov
sub
lods
in
add
push
sahf
or
aam
jns
jb
test
and
mov
test
shr
pushf
and
mov
sub
cmp
fsub
lock
pop
adc
rol
mov
fdivp
hlt
sbb
jo
jl
sbb
jb
mov
mov
push
dec
cwde
sub
shr
push
std
cld
dec
pop
fwait
push
ds
jae
jg
test
pop
and
shl
scas
push
out
inc
mov
mov
mov
test
stc
jmp
push
(bad)
xor
mov
int
lock
sbb
add
push
mov
xchg
fadd
mov
pop
rcl
sub
in
js
dec
ret
xor
push
pop
sub
push
xchg
out
mov
or
pop
outs
ja
in
inc
adc
mov
aad
add
cmp
icebp
fist
fdivr
jecxz
cmp
adc
jge
cmps
push
mov
int
sar
cmps
arpl
mov
jae
cmc
and
and
sbb
sbb
das
dec
sbb
jl
and
add
dec
cmp
push
or
xlat
mov
not
mov
inc
dec
inc
mov
nop
push
ins
or
jne
dec
jle
clc
and
pop
or
cmp
sti
stos
test
dec
rcr
cmp
(bad)
and
xchg
fxch
mov
push
push
bound
aaa
pushw
sahf
std
mov
imul
inc
or
dec
scas
or
push
call
adc
retf
in
mov
sub
test
arpl
retf
jno
cmps
pop
(bad)
cs
in
mov
mov
jmp
push
inc
fcomp
pop
cmps
push
mov
cdq
iret
sbb
and
loop
int3
pop
(bad)
lds
cmp
push
cmp
sbb
retf
in
sbb
aad
fwait
out
inc
jmp
hlt
push
in
xor
sbb
mov
cmp
cmp
fnstsw
outs
imul
clc
repz
gs
sub
mov
fnsave
inc
mov
xchg
mov
sub
fdiv
test
retf
fs
aas
cld
add
rcr
and
frstor
xchg
sbb
dec
ja
xchg
mov
mov
jmp
cwde
sub
or
cmps
sbb
imul
pop
test
div
out
inc
inc
xlat
inc
fld
cmp
inc
jno
dec
and
in
mov
sub
not
and
cmp
push
repnz
cmp
js
nop
pop
dec
sbb
sub
ret
inc
push
sti
inc
cs
jmp
push
aas
jp
xchg
or
jno
arpl
add
in
cli
out
jbe
sub
sub
out
xor
add
sbb
inc
pop
(bad)
jge
call
and
xor
inc
jmp
cs
int
fldcw
cmp
xchg
dec
or
aam
xor
and
fldenv
inc
je
dec
es
xchg
mov
mov
test
retf
and
adc
movs
jno
sbb
inc
push
cdq
mov
mov
ds
adc
aad
adc
xchg
xlat
pop
push
and
mov
leave
icebp
movs
aas
lea
mov
push
ret
enter
or
push
xchg
jp
ret
ins
fisubr
sub
shl
cmps
xchg
adc
xchg
ret
sbb
pusha
mov
or
jle
xor
sbb
pop
pop
ret
cwde
and
sbb
sahf
neg
mov
xchg
mov
mov
cmp
add
dec
xor
xor
inc
ins
cld
xchg
pop
mov
cmps
test
xchg
or
clc
je
call
rcr
jg
pop
ret
mov
lea
shl
aam
cmp
dec
jp
nop
aad
lahf
clc
xchg
add
sahf
dec
mov
xor
fild
loopne
xlat
fsubr
add
or
and
lock
xchg
sbb
push
(bad)
ins
lock
rol
xor
pop
adc
jo
ins
or
mov
int3
mov
adc
loop
xchg
les
pop
inc
xchg
xchg
pop
out
fs
add
bound
xchg
push
adc
mov
pop
adc
sbb
fsubr
in
int3
(bad)
mov
adc
mov
out
call
mov
daa
loop
xchg
jp
test
pushf
in
mov
ret
dec
sti
jmp
jecxz
cmc
js
xchg
out
inc
je
hlt
mov
mov
pop
mov
test
loopne
dec
dec
(bad)
aas
out
aam
pop
mov
mov
and
fidiv
mov
push
fsubp
sub
outs
leave
sbb
pop
lds
mov
or
outs
sti
or
js
fucomip
aas
or
std
inc
and
ret
mov
movs
mov
inc
jnp
ins
dec
mov
or
adc
and
cld
into
jle
lock
mov
popa
js
pop
movs
gs
repnz
shl
xor
jmp
sbb
xor
fadd
mov
mov
pop
js
push
xchg
mov
xor
cld
mov
mov
mov
mov
icebp
push
(bad)
fild
shr
jecxz
pusha
arpl
outs
cmp
call
add
lock
imul
ror
fmul
xor
add
call
les
daa
inc
mov
mov
push
jle
hlt
in
cmp
aaa
stos
sub
lock
std
out
lods
pop
loope
imul
fnstsw
int3
and
nop
xchg
mov
sahf
imul
xor
rcl
shl
mov
push
pop
aam
sti
adc
add
ins
add
dec
in
or
jg
inc
hlt
or
in
aad
mov
unpcklps
test
dec
xchg
cwde
sbb
cmp
scas
add
xchg
push
fidiv
test
xlat
mov
mov
mul
cs
sbb
ins
idiv
mov
adc
jl
jg
retf
mov
outs
xchg
pop
mov
adc
or
in
xor
clc
jnp
push
cwde
mov
out
push
jmp
popa
or
mov
movs
imul
xchg
inc
push
dec
icebp
push
cld
repz
sbb
xchg
iret
dec
addr16
inc
(bad)
imul
ds
jg
mov
xchg
loope
cld
pop
mov
pop
sar
das
je
ret
fs
xchg
in
sub
pop
aad
xchg
sub
stc
pop
scas
cs
or
in
sbb
jb
ins
sbb
lock
pusha
and
int3
jae
stos
jbe
es
sbb
xchg
or
cmp
push
inc
inc
or
out
mov
mov
adc
pop
pop
and
pop
loop
(bad)
lahf
out
rol
ror
(bad)
imul
sbb
pop
mov
out
dec
add
idiv
xor
addr16
inc
int
inc
into
fcom
inc
pop
es
scas
adc
ret
imul
sbb
mov
jle
retf
arpl
mov
xchg
sti
mov
mov
lea
xchg
ror
push
pop
shr
xchg
aad
inc
ret
sbb
or
xor
add
add
pop
sti
inc
loopne
mov
enter
pushf
outs
ret
push
test
js
xor
lock
fistp
xor
ffreep
inc
dec
mov
or
stc
test
push
(bad)
sti
mov
ret
clc
out
or
nop
xchg
test
xchg
cdq
cmp
loope
inc
jle
(bad)
neg
and
cdq
repnz
icebp
mov
fmul
dec
xor
bound
pushf
ja
inc
pushf
aaa
adc
mov
rcr
xchg
mov
rcr
inc
fistp
and
dec
ret
shl
sbb
and
pop
out
dec
adc
dec
lahf
ins
sub
aas
fst
jle
push
mov
dec
add
out
jg
pop
sbb
jle
(bad)
sbb
mov
or
mov
xchg
ss
aad
cmp
pop
inc
inc
push
sti
sbb
xchg
and
gs
(bad)
cdq
arpl
mov
pop
or
(bad)
sahf
pop
mov
inc
mov
outs
adc
mov
jg
ja
cmp
out
sub
push
mov
lods
and
adc
adc
out
nop
sbb
test
xor
pop
cdq
push
cmp
repz
mov
iret
retf
in
inc
ret
xchg
(bad)
lds
jns
mov
xor
jmp
sub
sub
jecxz
add
(bad)
bound
and
cmps
loopne
and
pushf
aad
mov
push
clc
aam
(bad)
stc
test
or
imul
mov
rol
mov
test
repnz
push
jmp
test
adc
rcr
fsubr
or
fs
lock
mov
fcom
inc
sbb
dec
ret
mov
mov
xor
out
ror
repnz
jp
lods
in
fwait
nop
push
push
repz
js
adc
shl
(bad)
jne
cmp
imul
jo
rcl
sub
xor
sub
mov
in
cs
enter
(bad)
mov
cmp
push
and
add
jg
inc
inc
push
imul
dec
sub
lods
shl
pop
mov
or
and
inc
pop
jl
fbld
lahf
jmp
xchg
push
jmp
jo
jmp
add
sbb
out
mov
sub
fsubr
sub
mov
test
inc
ins
aam
jae
inc
add
dec
icebp
out
xchg
mov
sbb
lock
jne
movs
mov
pop
call
test
fisubr
pushf
into
mov
mov
pop
add
loopne
into
cmps
sub
aas
xor
es
and
sbb
cli
add
not
adc
(bad)
in
xor
stos
push
aam
xchg
or
std
das
pop
mov
adc
jp
movq
mov
ret
and
ret
xchg
test
push
push
pop
pop
loop
mov
ret
sbb
push
(bad)
mov
movs
jnp
jo
mov
ja
push
jl
or
cmp
das
test
ss
inc
outs
push
out
add
adc
push
mov
sbb
cdq
sbb
adc
repnz
adc
fst
lds
xor
xor
add
pop
ret
fcom
dec
jg
ins
or
push
jae
or
sar
pop
jmp
cs
pop
add
(bad)
ds
outs
or
mov
mov
cmp
xchg
inc
dec
jbe
or
test
rcr
push
cmps
in
push
sub
iret
neg
aas
inc
shl
popa
test
push
xchg
repz
daa
mov
stc
dec
or
add
out
dec
mov
xchg
pop
mov
pop
xor
sbb
mov
movs
add
cwde
xchg
popa
imul
clc
xor
cwde
mov
cmps
movs
mov
pop
and
aaa
outs
jl
shr
repz
scas
nop
popa
mov
and
and
ja
add
addr16
sbb
adc
in
push
sbb
jl
je
xchg
push
es
std
cmp
call
ja
inc
or
jae
and
and
inc
sti
imul
mov
adc
dec
daa
pop
nop
out
les
dec
enter
jge
imul
out
out
add
sbb
add
(bad)
popa
fimul
out
push
mov
ins
push
mov
mov
ins
stos
outs
retf
push
int
sti
cmp
or
mov
pop
ss
in
je
cmp
or
mov
pop
sbb
aaa
and
sahf
cmps
test
fnstenv
ins
lock
cmp
sbb
lock
push
xchg
pop
neg
lods
fidivr
lahf
stos
movs
push
jo
adc
test
inc
sbb
maskmovq
dec
shr
and
ret
mov
sti
data16
pop
pop
rol
fs
out
pop
jge
xchg
fidiv
aad
pop
ret
fsub
add
inc
jmp
sbb
mov
xchg
jne
ja
test
es
cld
push
xor
movs
xor
inc
or
dec
mov
stos
fimul
jo
pop
xor
jge
cmp
mov
mov
mov
hlt
mov
int3
stc
mov
mov
dec
and
inc
add
shl
adc
call
mov
xchg
aad
pop
sbb
lea
mov
mov
jbe
lods
iret
icebp
imul
xor
daa
adc
cmp
daa
fisub
and
xor
or
bound
pop
test
outs
stc
jle
aad
dec
and
arpl
dec
xlat
cli
je
push
icebp
adc
int
jb
retf
dec
dec
xlat
(bad)
mov
pop
xchg
dec
in
mov
enter
sbb
cmp
inc
add
cmc
sub
rcl
mov
mov
mov
push
adc
pusha
ret
cmp
push
push
jg
(bad)
test
movs
call
inc
mov
xchg
mov
pop
inc
imul
aaa
mov
fidivr
in
lods
dec
jmp
or
mov
pop
jae
sbb
idiv
add
fistp
xchg
neg
and
push
or
lods
add
out
out
jmp
je
stc
pop
rol
rcl
mov
jo
outs
adc
jae
adc
test
jo
dec
xor
in
add
mov
push
daa
push
push
inc
mov
mov
inc
sub
mov
or
lods
mov
pop
scas
sti
or
ja
jp
test
retf
add
int3
push
mov
pop
test
inc
mov
(bad)
mov
ins
das
loope
dec
fwait
xchg
mov
xchg
ss
pusha
lods
cmp
jp
aad
dec
mov
push
sub
call
or
jp
inc
push
inc
jmp
add
push
cmps
adc
aas
pop
cmp
xchg
inc
ins
das
movs
call
mov
fwait
or
(bad)
pop
sar
or
pop
or
xchg
mov
loope
xor
cs
mov
sub
xchg
adc
aaa
dec
retf
leave
or
adc
push
sub
adc
xor
pop
mov
in
mov
les
cs
call
adc
aad
jle
pop
loopne
and
xchg
jle
inc
adc
imul
jp
sub
dec
jmp
pop
in
add
rcr
inc
pop
outs
push
cmp
mov
fcomp
aaa
xchg
shl
(bad)
jp
test
jl
out
push
popf
loop
lea
jle
les
cmp
loop
push
in
push
jecxz
xchg
add
pusha
cmp
xlat
sub
or
test
inc
jl
mov
add
rcr
adc
inc
lock
test
and
adc
push
pop
add
inc
push
mov
idiv
jo
mov
hlt
gs
cmp
adc
test
cmp
int
cmp
cmp
fiadd
leave
rol
test
xor
jbe
xchg
and
push
mov
xlat
into
in
pop
mov
lea
mov
nop
push
adc
mov
xor
hlt
std
cmps
sbb
mov
cmps
jne
leave
movs
xor
adc
and
fimul
inc
dec
dec
jle
in
inc
jg
pop
test
add
(bad)
xor
add
pop
ds
mov
xchg
cmp
ins
out
and
aad
xor
jecxz
push
sub
test
ror
sbb
out
(bad)
mov
pusha
push
cmp
jp
prefetch
or
adc
lds
cmp
fisttp
pop
cmp
sbb
dec
shl
mov
xchg
loopne
mov
pop
std
dec
cmp
repnz
xchg
or
and
adc
jb
jmp
push
inc
leave
test
pop
cli
pop
movs
dec
jecxz
jns
or
fs
sar
jmp
sar
jnp
xchg
movs
push
shl
mov
daa
int3
xor
xchg
loope
int
lahf
xchg
inc
adc
stc
adc
sbb
jne
pop
pop
cmps
xchg
push
push
sbb
sub
xchg
pop
stc
push
push
cmp
sub
and
xor
jbe
jbe
push
not
adc
(bad)
scas
xchg
es
xor
xchg
cmps
jne
jle
jp
xor
sub
mov
(bad)
loopne
push
sub
or
or
or
movs
cmc
ja
jo
imul
ds
pushf
cmp
stc
pop
mov
sbb
xchg
rol
adc
jge
xor
xchg
loopne
and
adc
(bad)
mov
mov
out
pop
jp
adc
in
or
fbld
movs
sbb
cdq
out
gs
(bad)
jl
xchg
stc
adc
jp
out
icebp
mov
cmp
sar
mov
mov
dec
xchg
mov
inc
pop
addr16
adc
jnp
xchg
push
mov
mov
xlat
mov
sbb
or
xchg
push
mov
pop
scas
cmp
jbe
loop
cmp
scas
ror
es
push
cmp
xchg
jb
push
in
pop
stc
xor
(bad)
daa
sti
test
sbb
mov
or
push
les
xchg
jge
or
aas
push
adc
pop
dec
imul
inc
or
ins
or
pop
push
cmp
es
cmp
lahf
sbb
mov
jg
iret
out
(bad)
hlt
mov
mov
mov
dec
mov
aam
and
inc
sub
and
mov
sub
pop
addr16
in
retf
xchg
add
iret
lods
pop
cmp
mov
sbb
jne
popa
add
sub
ret
push
add
loope
cs
jle
sbb
iret
js
stc
mov
mov
idiv
push
lahf
sub
dec
cmps
push
outs
lea
xor
(bad)
dec
subps
cmp
jae
cmp
popa
ret
arpl
js
xchg
into
es
dec
lea
ss
rcl
adc
mov
call
(bad)
into
inc
jge
out
cmps
cs
addr16
loopne
xor
movs
jbe
inc
shl
cli
fcom
(bad)
push
add
jb
arpl
(bad)
fld
retf
adc
mov
or
push
gs
fucomp
xchg
fistp
sub
mov
mov
dec
fst
out
movs
inc
xchg
mov
aad
push
mov
fs
cmps
in
cmp
ja
loope
loopne
shl
add
arpl
xor
inc
mov
xchg
and
jp
jne
outs
std
jg
(bad)
or
cmps
sub
stos
and
xchg
xchg
cmp
cmp
rcr
retf
sub
mov
into
push
rcr
mov
inc
inc
dec
mov
out
js
cmc
inc
repz
cmps
movs
popf
movs
sbb
call
fadd
aas
repnz
dec
lahf
pop
ins
inc
call
bound
mov
or
xchg
cs
adc
div
xor
cmps
push
jmp
in
nop
mov
mov
lds
(bad)
jecxz
pusha
out
pop
mov
cmp
das
call
call
sub
fist
ins
das
in
das
xor
push
mov
xchg
jle
outs
test
loopne
sub
shr
pop
xor
pop
add
test
into
pop
push
adc
jecxz
rol
call
sbb
sub
sub
or
lea
and
mov
or
in
popf
leave
repz
mov
dec
fwait
xor
inc
leave
js
sub
mov
std
push
pop
mov
pop
scas
cmp
lea
pop
dec
lods
int
test
sbb
cld
fwait
or
push
pop
sub
jecxz
and
jno
mov
mov
push
mov
xchg
fmul
or
xlat
lock
ret
xor
pop
pop
and
or
and
mov
xchg
fiadd
lods
fld
sahf
fwait
pop
test
xor
push
and
sub
cmovle
notrack
lods
shl
out
or
push
(bad)
cmp
push
dec
jae
sbb
mov
adc
mov
dec
pop
xchg
fwait
mov
add
sbb
int3
and
pop
in
mov
sub
pusha
das
pop
sub
pop
pop
mov
and
sbb
out
iret
jbe
adc
push
jg
rcr
test
xor
mov
ret
out
ficom
pop
jae
xor
mov
clc
xor
sbb
dec
xchg
mov
loope
xchg
add
shl
inc
call
rol
loope
add
hlt
mov
lahf
js
(bad)
aaa
push
jecxz
mov
pop
mov
dec
jle
movs
xor
push
(bad)
(bad)
fsub
dec
inc
pop
push
dec
jg
loopne
pop
sbb
pop
push
mov
push
mov
mov
mov
mov
fs
dec
sub
pushf
scas
dec
xchg
jno
test
mov
pop
mov
jbe
cli
cmp
mov
xor
inc
adc
or
pop
mov
jmp
or
sti
cdq
div
push
push
jge
cmp
stos
push
sti
jno
mov
jle
push
cs
repz
xor
pop
jbe
mov
arpl
xchg
imul
ins
xchg
inc
adc
call
test
mov
movs
aad
mul
sbb
sbb
retf
inc
inc
xor
sub
lock
test
pop
stc
fdiv
mov
call
movs
inc
xor
adc
pop
jnp
or
loopne
cmc
sub
sbb
xchg
cmp
push
jns
and
push
ror
adc
imul
stos
and
js
mov
cmp
imul
fidiv
adc
fs
or
movs
cs
inc
in
ret
test
inc
or
and
push
ins
mov
out
mov
sti
mov
mov
cmp
mov
jge
jge
pop
or
dec
xchg
push
out
push
cmp
test
test
ja
sub
add
pop
scas
xchg
inc
ror
wbinvd
add
addr16
pop
inc
movzx
cmps
push
sti
stos
sub
sbb
sar
(bad)
jae
push
inc
lods
aas
adc
pop
fimul
cmc
jl
jp
bnd
push
mov
ror
lods
lea
not
loop
push
or
outs
int
fcom
add
sti
cmp
sub
fmul
mov
mul
lahf
push
sbb
in
stc
nop
sub
cmp
mov
sahf
ficom
scas
inc
push
inc
dec
push
jbe
lds
stos
add
popa
push
and
mov
jp
mov
or
fs
jl
cwde
out
(bad)
sbb
ins
add
iret
pop
lock
fdiv
and
loop
data16
mov
test
xor
mov
sub
and
(bad)
jle
inc
(bad)
push
sbb
je
jg
jno
xchg
and
push
daa
xor
cmps
dec
jmp
pop
int
mov
cmps
cmp
jmp
in
mov
pop
or
test
lods
push
enter
dec
fs
or
stos
lods
ret
jne
pop
ins
dec
pop
test
jge
xchg
shl
fbstp
cmp
xchg
pop
jbe
dec
cmp
stc
popf
mov
icebp
cmps
cmc
movs
mov
adc
xchg
lock
xor
push
mov
fldenv
movs
xchg
cmp
mov
and
ds
imul
and
or
mov
ja
jns
inc
addr16
aas
xchg
push
fs
fbld
mov
mov
call
ret
mov
push
add
ss
adc
mov
jae
repz
retf
retf
repz
leave
loopne
repz
xlat
ds
xlat
mov
xor
mov
mov
les
xchg
(bad)
jo
imul
fild
repz
sub
cmps
inc
xchg
jbe
loopne
popa
mov
jno
xchg
add
pop
lea
cmp
and
jle
test
add
pop
sbb
das
mul
rcl
mov
adc
xor
adc
ret
xor
sbb
sahf
xlat
sar
jl
aaa
sbb
jmp
mov
(bad)
or
dec
ds
mov
cmp
fdivr
clc
xor
and
dec
push
aaa
jb
sahf
xchg
sbb
jecxz
xchg
jae
ror
jns
(bad)
div
test
or
xchg
(bad)
cmps
sbb
lea
xchg
sbb
add
mov
pop
xchg
jl
xchg
add
je
or
cmp
dec
push
xchg
fadd
rol
sbb
or
xchg
add
das
aaa
es
sbb
pop
cwde
xchg
pop
rcl
lds
mov
ins
sub
ror
stos
loop
(bad)
popf
xchg
mov
adc
lea
sbb
dec
cdq
out
adc
(bad)
jno
dec
cmovs
push
cmp
lds
adc
cmp
fwait
push
leave
xor
in
rol
mov
ja
cdq
sub
add
mov
test
xchg
add
cmp
sbb
xchg
lods
inc
xchg
inc
cs
jg
sbb
xor
mov
ins
inc
dec
add
xchg
(bad)
cmp
xor
sahf
sbb
cs
pop
mov
test
idiv
sub
dec
mov
call
or
mov
jno
xor
in
dec
jl
jl
call
ds
sbb
test
push
mov
push
pop
cmp
rol
push
jne
inc
inc
add
or
add
cmp
xor
jmp
call
mov
inc
mov
cdq
or
or
xchg
xor
add
mov
in
in
sub
xchg
xchg
cs
cmp
in
or
pusha
popa
jbe
sahf
xchg
push
mov
add
std
xchg
mov
cmp
push
cmp
cmp
lds
dec
lahf
adc
ja
xchg
loopne
fiadd
push
adc
out
cwde
dec
mov
mov
adc
cwde
data16
mov
ins
mov
mov
sahf
add
xor
imul
pushf
ror
jae
cmps
test
fs
nop
inc
pop
jns
jns
xchg
ins
movs
push
push
cdq
dec
adc
rcr
hlt
and
xchg
push
add
and
jns
aad
inc
mov
pop
fnstcw
cmp
f2xm1
push
push
inc
lods
cmp
sar
mov
and
add
mov
aas
into
and
dec
adc
lahf
push
inc
ins
ja
gs
dec
ins
pop
(bad)
dec
fstp
shr
mov
(bad)
cld
loop
std
adc
cmp
xchg
mov
cmps
popa
clc
cmps
lods
sub
sbb
xor
int3
mov
push
sbb
push
jnp
das
sub
repz
jne
cmp
jp
outs
gs
jbe
out
sub
or
outs
dec
rcr
pop
cmps
in
jbe
les
sub
call
xor
pop
outs
(bad)
ds
inc
push
ss
dec
(bad)
push
shl
cmp
mov
jb
cmp
sahf
mov
fwait
cmps
or
and
cmp
pop
add
(bad)
stos
ss
vmovd
movs
mov
cs
cmp
xchg
icebp
push
rcl
aas
test
movs
sti
jmp
mov
pop
jnp
cld
aaa
mov
(bad)
mov
adc
dec
outs
mov
jnp
retf
pop
fwait
sub
jg
leave
xor
fst
xchg
repz
out
mov
pop
dec
in
jp
xor
mov
push
jmp
mov
hlt
fisubr
push
jne
mov
dec
mov
add
out
sbb
or
in
retf
stc
mov
enter
sub
sub
xor
xchg
sbb
xlat
fs
sub
mov
ds
push
pusha
adc
mov
out
fcom
jno
retf
xchg
sub
les
outs
loop
outs
add
adc
or
(bad)
fistp
out
push
xchg
mov
mov
ror
retf
push
mov
jmp
jno
pop
mov
in
nop
jge
lods
xchg
push
pop
sbb
mov
shl
(bad)
mov
push
sbb
repz
cs
sbb
into
mov
inc
adc
cmp
jmp
and
stos
mov
xchg
retf
lds
aad
js
ds
adc
movs
mov
je
sub
sar
and
add
sti
scas
and
cs
mov
and
jmp
mov
dec
fisubr
xor
mov
pusha
or
loopne
loopne
out
aad
out
test
(bad)
out
adc
push
imul
cmps
retf
mov
loopne
frstor
cwde
push
mov
mov
idiv
int3
jl
cmp
repnz
shl
xchg
mov
aad
arpl
in
jl
(bad)
xchg
pushf
cmp
or
loope
arpl
cmps
mov
or
clc
jno
xor
mov
add
stos
rol
pop
fcmovnb
pop
into
out
call
jg
daa
(bad)
pop
add
(bad)
mov
stos
fcomp
ins
pop
jmp
push
dec
lods
xor
mov
xchg
mov
fldlg2
inc
and
adc
imul
and
jp
loopne
out
outs
(bad)
out
loope
call
fs
mov
fs
in
leave
pop
cmp
xchg
ja
ja
repz
cmp
sub
xchg
aas
dec
mov
cmp
loop
mov
dec
mov
es
jle
mov
mov
loopne
cs
lds
mov
cmp
mov
stc
add
or
or
xchg
mov
jecxz
mov
pop
(bad)
fs
outs
movs
inc
mov
push
push
dec
adc
call
popa
dec
dec
stos
icebp
inc
mov
test
(bad)
add
push
cli
jns
rcr
dec
sub
neg
cmps
rcl
bound
push
mov
cli
adc
repnz
outs
push
ret
adc
loop
xor
add
mov
push
xchg
loopne
mov
in
xchg
lahf
mov
lods
pop
inc
jmp
or
push
or
cld
mov
scas
in
push
jno
pop
mov
xchg
(bad)
cwde
adc
lahf
mov
push
shl
leave
repz
mov
and
mov
mov
jo
inc
je
add
push
movs
in
sub
je
div
outs
int3
mov
ficom
(bad)
stc
inc
test
cmp
(bad)
into
aas
adc
adc
dec
rcl
imul
jo
sbb
repz
jmp
sbb
mov
call
dec
aaa
fisttp
dec
lahf
sbb
or
fistp
sahf
sahf
mov
retf
(bad)
popa
jle
(bad)
test
cmp
aam
add
jecxz
xchg
jne
dec
loopne
test
ficomp
pop
sub
cmp
movs
jb
jmp
add
lods
imul
repnz
test
ret
mov
mov
aad
outs
arpl
mov
xor
sub
addr16
jp
std
sub
frstor
pop
dec
outs
dec
ds
mov
loop
mov
add
dec
jg
jbe
iret
cmp
fs
iret
pop
mov
and
jmp
mov
cmp
or
dec
or
inc
inc
pop
mov
jne
mov
push
dec
push
out
jmp
sub
in
mov
xor
sahf
shl
bnd
mov
adc
and
aas
sub
lods
sbb
(bad)
fisub
icebp
push
cmps
neg
mov
out
ins
sbb
jbe
sbb
push
js
mov
adc
or
jae
add
inc
rcr
retf
pop
and
push
cmp
mov
xor
inc
and
sub
add
repnz
push
mov
ret
daa
outs
outs
xchg
dec
(bad)
shl
out
adc
daa
sub
cs
pop
js
sahf
(bad)
ins
jae
repnz
and
inc
ja
(bad)
adc
bound
inc
fidiv
pusha
inc
pop
add
xor
mov
mov
pop
leave
and
imul
popa
out
cdq
mov
(bad)
mov
cmps
pop
mov
fst
loop
das
mov
and
test
xchg
movs
push
push
daa
xchg
clc
xchg
push
mov
es
xchg
gs
sbb
ds
in
ins
dec
push
jl
nop
inc
jo
(bad)
jmp
fs
js
jnp
iret
imul
mov
inc
repz
inc
in
push
hlt
popa
adc
adc
pop
popf
mov
imul
push
cmp
lds
rol
sub
clc
or
dec
outs
pop
push
cli
adc
mov
adc
push
xchg
imul
jno
cmps
sbb
loope
push
cmp
mov
arpl
das
lods
std
fldenv
and
push
popf
popf
in
loop
mov
xchg
inc
pusha
in
movs
and
pop
fucomi
test
xlat
cmps
add
xchg
jno
fistp
cmp
jle
push
repz
fcmovnbe
fdivr
test
lock
mov
fnsave
or
in
dec
ins
fld
dec
adc
aad
es
stos
stos
push
call
aam
je
xchg
in
movs
out
stc
xor
add
(bad)
add
adc
out
add
xor
xchg
arpl
loopne
sahf
sbb
iret
jg
retf
adc
xor
call
push
mov
imul
pop
mov
inc
xor
sub
stc
inc
inc
push
jb
pop
cs
cli
sbb
cld
bnd
mov
in
call
scas
adc
xchg
xor
xchg
fmul
sub
sar
test
cdq
in
sbb
daa
ret
jb
inc
sub
mov
jecxz
inc
xchg
ja
fsub
retf
fbld
popf
outs
daa
jbe
push
test
fs
xchg
sahf
call
mov
add
cmp
xchg
lods
pop
gs
xor
push
sbb
inc
dec
xchg
and
ret
(bad)
jmp
pop
xlat
rcl
into
mov
jo
mov
and
iret
push
xor
pop
dec
mov
mov
xlat
sbb
movs
jg
jge
pop
push
fwait
test
xor
fstp
icebp
js
sbb
mov
cmps
xchg
and
mov
mov
jno
imul
dec
inc
jno
hlt
clc
dec
jns
sahf
dec
cmp
enter
dec
cmp
in
dec
cmp
loopne
jo
ins
mov
mov
push
push
(bad)
ret
mov
dec
adc
mov
sub
dec
iret
ror
test
mul
leave
retf
sbb
lahf
pop
in
loopne
mov
push
dec
sahf
adc
mov
enter
jecxz
mov
jl
fucomp
or
jmp
xchg
aam
xor
xchg
in
sub
or
mov
pop
sahf
sub
mov
xchg
pop
mov
inc
pop
pop
mov
pop
sub
outs
enter
test
xor
fist
mov
jg
sbb
cs
sbb
mov
aad
push
mov
mov
pop
pop
in
jo
inc
stc
lea
pop
call
xor
sub
(bad)
jp
test
pusha
movs
xor
out
dec
repnz
and
(bad)
mov
push
stos
std
mov
fstp
xor
imul
mov
test
jl
js
dec
outs
xor
in
shl
push
jle
push
shr
push
ds
out
jne
popf
dec
push
jmp
rol
jnp
ror
sub
inc
jo
mov
xor
loope
inc
xchg
test
mov
mov
outs
lods
daa
je
test
fst
xchg
out
sbb
faddp
inc
cwde
je
jp
jnp
mov
pop
mov
pop
push
sub
mov
adc
ds
push
pop
lods
loope
jp
pop
mov
test
xchg
ret
mov
mov
mov
add
mov
push
xchg
mov
or
out
rcr
jns
pop
dec
adc
or
sbb
add
(bad)
fstp
push
add
out
lods
fsubr
ret
outs
in
pop
loope
ds
pop
dec
dec
sub
xor
sbb
sar
retf
sbb
push
inc
jnp
jnp
fistp
jp
ds
aad
sbb
jmp
out
fisttp
jmp
mov
in
xor
and
jle
ins
pop
jns
cs
in
fiadd
rcr
pop
jl
test
mov
adc
ds
add
jne
or
cs
push
pushf
cmc
fs
aaa
mov
pusha
mov
fist
push
retf
out
mov
fcomp
sub
out
xchg
mov
inc
bndldx
and
pusha
jl
push
push
jp
jl
ret
mov
shl
outs
xor
jnp
or
gs
xchg
lods
inc
int
xchg
cmp
jge
(bad)
aas
movs
and
sbb
sbb
inc
or
test
jle
data16
sbb
bound
iret
dec
cmp
outs
jno
sbb
push
and
fsubr
mov
popa
mov
inc
mov
outs
aaa
adc
mov
out
js
xor
aam
mov
addr16
pop
fiadd
xlat
cmps
add
js
push
or
pop
repz
pop
mov
and
ds
xor
and
loope
push
mov
cmp
mov
imul
pushf
fwait
sbb
fwait
mov
sub
push
add
mov
(bad)
sub
test
outs
test
cwde
fs
sbb
cwde
add
adc
addr16
sbb
mov
gs
push
ja
dec
test
shr
ins
std
and
cmp
or
lahf
dec
int
mov
stos
in
or
movs
and
inc
or
xor
hlt
pop
out
mov
dec
add
pop
test
ds
adc
xchg
jo
sub
mov
lea
ret
sbb
mov
push
mov
int
ficomp
pop
cmp
les
push
xchg
xchg
mov
push
xchg
fs
mov
or
fmul
add
add
push
hlt
inc
ins
ss
and
jecxz
push
out
popa
push
loope
jae
frstpm(287
xchg
xor
shr
xchg
dec
sbb
sub
jge
mov
jnp
adc
inc
push
jnp
sar
(bad)
sub
adc
inc
cmp
bound
not
test
sti
or
push
hlt
add
ror
mov
idiv
retf
loope
gs
stos
rcr
cmp
cmp
pop
add
scas
arpl
xchg
sub
jnp
xor
push
add
jbe
sub
ins
jmp
fisub
or
add
and
je
mov
cli
push
jno
and
cdq
imul
and
frstor
mov
mov
loope
ficomp
fisubr
sub
jb
gs
mov
fldenv
adc
loopne
push
or
das
aaa
pop
cmp
cmp
sbb
pop
inc
in
div
fwait
mov
test
dec
mov
add
fcomip
or
test
outs
xor
push
mov
push
test
or
popf
ficomp
mov
mov
mov
cs
in
test
xor
stos
cli
std
cmove
hlt
icebp
sub
xchg
stc
repnz
fadd
adc
aad
pop
jmp
call
pushf
leave
pop
mov
in
packssdw
mov
dec
mov
mov
outs
xor
pop
lds
inc
(bad)
jmp
aaa
out
jp
ret
push
ds
cmp
mov
cld
fistp
mov
out
cli
ret
clc
stc
xor
xchg
jg
sbb
cmp
xor
ret
sbb
push
mov
mov
pusha
mov
lahf
std
ds
or
fisttp
add
push
or
loop
inc
pop
bound
mov
jmp
mov
test
and
mov
fnsave
int3
out
fldcw
js
data16
pop
mov
mov
pop
scas
and
xor
(bad)
mov
fwait
jb
fidiv
rol
call
jg
push
shl
repz
idiv
fldenv
movs
xor
int
cmp
stos
and
jg
and
pop
addr16
cmc
or
adc
pop
mov
out
gs
xchg
xchg
or
faddp
outs
xchg
shl
add
test
mov
outs
add
js
push
imul
cmp
test
adc
es
test
imul
lea
pop
sub
cwde
xor
xchg
sub
adc
cmp
loopne
jo
icebp
mov
retf
test
inc
repz
aas
test
and
rcl
movs
pop
test
and
cmps
pop
jmp
loopne
retf
call
xchg
and
mov
mov
add
xchg
push
(bad)
cli
inc
mov
pusha
mov
xchg
imul
icebp
mov
push
jae
call
movs
into
stos
movs
test
mov
fistp
sbb
shl
mov
outs
cmp
inc
cmp
popa
ins
popf
popf
jle
sbb
mul
adc
cmp
outs
(bad)
dec
clc
and
inc
push
xchg
movs
pop
in
mov
ss
push
mov
out
push
dec
xor
mov
lods
inc
mov
pop
and
xor
pop
int
pop
(bad)
js
mov
mov
scas
test
imul
fadd
std
xchg
and
mov
pop
add
test
pop
shr
sub
cmp
(bad)
mov
icebp
fnsave
nop
enter
stos
jmp
cmp
mov
or
push
adc
mov
dec
sub
push
in
or
jb
cmp
movs
fwait
add
or
add
jae
(bad)
ficomp
xchg
mov
mov
mov
jp
jl
enter
test
popf
scas
dec
arpl
rcl
retf
xchg
fcomp
fwait
sbb
(bad)
hlt
cld
cmps
sbb
cmp
cs
jmp
mov
popf
repnz
aaa
leave
mov
popf
or
dec
ficom
into
dec
jns
mov
xchg
add
aas
push
mov
aaa
out
xlat
push
push
(bad)
mov
and
dec
push
cmp
push
mov
pop
jle
inc
sbb
daa
loop
test
cmp
lods
rol
mov
ins
sahf
dec
sbb
pop
retf
outs
ret
repz
(bad)
rep
out
enter
add
outs
fdivp
xor
(bad)
mov
inc
mov
das
loopne
sub
jmp
lea
out
mov
das
xchg
stos
lahf
xchg
sbb
sub
pop
out
cld
jge
sbb
gs
retf
shl
cdq
or
mov
xchg
mov
test
test
cs
retf
fs
push
jbe
xchg
ret
inc
cli
jbe
inc
push
popa
push
jns
test
mov
push
mov
icebp
push
dec
repnz
es
mov
sti
jbe
mov
xchg
in
cdq
test
jg
cmc
mov
mov
aad
dec
gs
push
in
rol
in
in
scas
rep
cmp
gs
inc
mov
cmp
push
push
sbb
js
popa
push
jp
add
push
rcr
inc
popf
push
add
sbb
les
xchg
inc
push
call
(bad)
mov
xchg
inc
adc
xchg
popf
rcr
add
cdq
(bad)
data16
loopne
bound
add
pop
push
jecxz
mov
pusha
ret
xor
dec
and
pcmpgtw
and
dec
sub
ficom
fs
mov
push
add
jns
popf
xchg
fdiv
(bad)
das
sbb
les
cmc
sub
and
fimul
idiv
add
sar
pop
in
mov
cmp
jle
xchg
mov
mov
adc
fucom
jne
outs
xchg
ins
retf
pop
mov
pop
jb
mov
pop
push
imul
inc
push
xor
pop
div
into
mov
jnp
hlt
sbb
jg
xchg
dec
ret
cwde
or
lea
adc
mov
stos
mov
pusha
mov
inc
shl
push
add
sti
and
dec
das
inc
jnp
call
cli
icebp
jp
cli
mov
or
mov
xor
iret
and
mov
stos
loopne
(bad)
and
stos
out
jle
out
arpl
sub
xor
outs
es
push
(bad)
push
daa
xchg
out
dec
aad
mov
xchg
jp
popf
mov
push
add
aas
(bad)
ds
inc
inc
jp
jns
cmp
sub
stos
std
ret
fisub
jnp
mov
jbe
leave
retf
(bad)
mov
mov
shr
popf
dec
jg
fnsave
sub
jmp
jns
inc
push
data16
movs
out
cmp
adc
push
mov
pop
or
mov
gs
lods
adc
sub
sub
ret
lods
mov
jg
add
iret
jnp
inc
sbb
cmp
inc
sub
hlt
fmul
(bad)
rol
mov
jle
sbb
lahf
add
ret
jns
and
sub
(bad)
stos
stc
sbb
iret
lds
xchg
fwait
pop
dec
retf
popf
and
into
mov
jo
stos
or
dec
xchg
jecxz
push
in
call
jp
add
ret
mov
pop
fisubr
adc
xor
loopne
ja
sti
adc
pop
daa
sub
int
(bad)
adc
jns
js
cmp
adc
std
or
cld
cmp
push
jp
imul
xchg
xchg
mov
xchg
push
rol
gs
jl
es
cdq
ret
xchg
(bad)
xor
call
js
jle
call
jnp
mov
pop
jnp
push
mov
icebp
pop
mov
mov
mov
pop
cwde
xchg
xor
(bad)
sub
xor
push
inc
cmp
test
es
pop
mov
mov
int
outs
scas
push
dec
xchg
mov
mov
adc
outs
test
aam
retf
or
cmp
jno
sbb
or
push
adc
cmps
fisub
das
or
xchg
jns
xchg
stos
nop
pop
fimul
fstp
pop
add
call
int3
iret
je
sbb
add
cmp
in
add
jae
and
leave
jmp
shl
test
and
sub
push
adc
test
push
bound
lock
mov
aaa
mov
xchg
mov
movs
cld
mov
jmp
sbb
nop
call
loopne
add
(bad)
push
inc
jnp
and
cdq
xchg
neg
sbb
cvtdq2ps
daa
nop
or
pop
and
jmp
dec
fld
pop
dec
push
and
pop
adc
imul
aad
mov
fidivr
shl
xchg
int
ret
dec
push
dec
cmp
xchg
test
stos
mov
loop
adc
cmp
inc
add
mov
sti
or
inc
cmp
ins
cmp
aad
add
addr16
es
add
rcl
add
inc
sbb
out
repz
lds
sbb
aad
jl
jae
jmp
loope
dec
sar
mov
movs
(bad)
(bad)
mov
sub
push
mov
xor
fs
(bad)
push
lahf
sbb
mov
fwait
mov
jg
jb
add
retf
data16
or
mov
icebp
jmp
mov
and
cwde
sub
adc
mov
ret
mov
xchg
and
(bad)
pusha
or
in
or
push
in
adc
enter
fcmovb
cmp
ret
popf
and
push
push
jne
cmp
stc
push
repnz
and
pop
push
fadd
or
imul
mov
jecxz
sub
es
cdq
sahf
xor
call
or
out
repz
inc
cs
iret
or
xor
pop
xor
mov
push
fwait
inc
mov
mov
jp
fadd
mov
sub
xchg
in
shl
or
inc
arpl
ins
pushf
jae
sbb
clc
pop
fs
out
test
jecxz
into
ss
inc
lea
push
test
dec
pop
mov
popa
or
out
lds
sub
repz
mov
and
(bad)
mov
or
xlat
jecxz
cmp
sbb
push
daa
clc
push
in
xor
xor
mov
les
sti
push
fisub
pop
pop
dec
sbb
pop
out
jno
mov
and
mov
mov
mov
fwait
xchg
inc
inc
fdiv
inc
test
shr
dec
push
repz
xchg
ret
mov
mov
mov
cmps
(bad)
(bad)
test
cmps
(bad)
xor
push
sbb
xchg
nop
fild
fmul
sbb
and
iret
inc
aaa
jge
cld
pop
shr
es
mov
mov
jno
adc
lea
inc
aad
outs
jbe
cmc
aam
icebp
xchg
xchg
sub
lock
aaa
gs
sub
xchg
add
mov
adc
int
fisub
fcomp
int
dec
rcl
outs
hlt
fwait
pop
jmp
dec
addr16
lods
push
push
stos
fs
pop
cmp
aad
sahf
xlat
into
and
add
mov
mov
xor
test
cwde
arpl
gs
jnp
ror
test
push
pop
cmc
nop
pop
and
in
mov
cmc
test
pop
jl
inc
loope
cs
lods
(bad)
jge
repz
xlat
int
shl
push
sub
pop
mov
xor
push
push
jbe
push
popf
out
cmp
arpl
jge
xchg
mov
push
iret
nop
and
in
addr16
fiadd
mov
into
ja
cdq
out
inc
mov
and
mov
test
dec
into
test
xchg
hlt
stc
aaa
push
in
fistp
aad
xor
lea
dec
inc
inc
inc
cmp
fcmove
mov
enter
mov
sbb
std
sub
rcr
or
(bad)
into
pusha
push
es
cmp
addr16
jb
(bad)
cmps
rol
stos
clc
stc
xchg
ins
mov
push
imul
ins
adc
out
add
shr
inc
daa
shl
enter
mov
int
push
sahf
mov
hlt
repnz
(bad)
xchg
lods
xchg
cmp
or
jo
inc
cmp
test
xchg
jo
inc
pusha
cs
jns
cmp
sbb
add
push
push
fcomp
retf
(bad)
sub
outs
lahf
fist
js
punpckhbw
or
loop
cmp
dec
xor
cmp
iret
(bad)
mov
and
cmp
fidivr
jp
pop
cmp
mov
inc
sbb
test
xchg
out
jnp
mov
push
fmul
je
xlat
cs
xchg
retf
add
mov
test
add
cmp
scas
adc
fcom
xor
cld
xor
sbb
call
pop
(bad)
jle
xor
and
outs
daa
test
xlat
out
adc
mov
mov
xor
rol
mov
call
xor
outs
push
pop
into
xchg
outs
lds
shl
jp
and
mov
push
(bad)
outs
daa
and
fisubr
mov
out
xchg
jae
stos
jmp
cmp
loopne
imul
pop
retf
stos
ins
mov
pop
push
mov
or
sbb
repz
stos
ss
in
jbe
mov
js
ins
sub
loope
stos
js
sub
inc
sub
or
lods
lods
cwde
fcom
hlt
mov
pop
jp
iret
aaa
mov
add
lock
cmp
retf
scas
jp
out
pop
ins
test
sub
sbb
test
sahf
fsubr
shr
ins
adc
retf
xor
sub
je
test
adc
mov
call
push
push
and
aas
bound
cld
retf
in
out
xchg
dec
jne
xchg
cmp
add
outs
and
std
sbb
inc
movs
test
es
xchg
or
bound
enter
and
cwde
jl
ror
adc
dec
sub
pop
sub
xchg
lahf
sbb
ficom
xchg
mov
shl
push
sbb
das
idiv
cli
add
xor
inc
repnz
push
dec
adc
inc
xchg
pop
cdq
push
pop
lea
scas
addr16
imul
ret
(bad)
cli
in
pop
mov
and
mov
or
adc
lds
cmp
loop
jle
loop
adc
pushf
cmp
fdivr
push
cmps
inc
jno
adc
rol
push
bound
rcl
cmp
jmp
pop
sbb
mov
ins
push
or
sahf
mov
mov
stos
repz
sbb
and
mov
xchg
fst
fisub
mov
pop
dec
mov
pop
and
push
(bad)
sub
std
(bad)
mov
cld
add
inc
add
inc
test
adc
call
pop
push
out
lds
pusha
out
xor
push
test
sbb
jmp
imul
ins
mov
xchg
push
mov
xor
mov
or
pop
xlat
xchg
sahf
(bad)
cli
or
daa
pop
cwde
rol
jae
xor
and
xchg
fist
in
sbb
inc
dec
or
pop
jmp
imul
or
cmp
jnp
(bad)
sub
or
(bad)
jno
int
pop
sbb
or
xchg
dec
shl
sbb
and
std
adc
cmp
mov
sub
ror
fwait
int3
lds
call
or
sub
jmp
repz
push
fmul
movs
in
je
pop
sbb
adc
into
fsubr
test
pushf
je
cdq
nop
push
pop
jne
xor
add
push
nop
aam
cli
add
xchg
out
push
push
test
iret
mov
sub
fmulp
push
pop
xchg
mov
mov
sub
call
jae
in
mov
js
aam
adc
adc
pop
scas
cmps
test
inc
fs
arpl
xor
push
in
sbb
sbb
add
sbb
push
dec
cmps
rol
inc
arpl
mov
mov
xor
div
retf
call
dec
add
rcr
test
pop
gs
stos
mov
scas
or
in
lods
mov
xor
and
mov
repz
lods
add
addr16
sbb
jmp
int3
outs
adc
dec
clc
(bad)
or
out
stos
mov
jo
int
and
pushf
mov
call
mov
xchg
cwde
dec
fld
fldcw
jnp
cmp
retf
jmp
sub
lods
push
dec
aaa
adc
int
and
outs
jmp
mov
out
xor
jae
shr
sbb
outs
fs
xor
push
adc
rcl
push
cli
out
rcl
dec
and
rol
aad
(bad)
leave
inc
jmp
pop
loopne
xor
xchg
inc
jno
std
mov
xchg
jae
pop
cmp
lahf
cmp
sbb
ds
ins
imul
jecxz
push
inc
push
jbe
or
xor
sbb
fsub
xchg
imul
jg
jle
pop
cwde
add
(bad)
ror
mov
sbb
rsm
(bad)
cmp
xchg
mov
or
fnstsw
rcr
fwait
or
jb
and
mov
(bad)
xchg
aaa
sub
sbb
clc
add
test
cmp
clc
mov
adc
and
rol
or
fimul
xor
cmp
or
cmp
dec
mov
retf
sahf
fisttp
(bad)
icebp
mov
inc
pop
sbb
add
jnp
cld
sub
fwait
mov
add
loop
in
dec
mov
lods
jmp
repz
pop
bound
stos
jb
mov
xor
repnz
xor
inc
das
enter
shl
sub
stc
dec
mov
and
scas
movs
jge
inc
pop
arpl
test
ds
sbb
pop
dec
pop
push
js
push
in
dec
(bad)
pop
pop
mov
adc
push
jns
mov
cmps
(bad)
cwde
retf
das
loopne
push
xchg
mov
mov
mov
mov
xchg
push
xor
imul
pop
dec
add
xor
jae
(bad)
fistp
cdq
jno
push
mov
mov
shl
mov
jg
iret
sub
xor
jns
out
sbb
push
lds
dec
pop
nop
out
push
popa
sub
adc
rol
mov
hlt
dec
push
xchg
xchg
and
out
loop
dec
fild
push
sar
mov
dec
fwait
mov
call
cld
mov
push
jae
xchg
aas
ror
push
das
or
and
mov
rol
rcl
and
inc
dec
xchg
sahf
push
dec
add
xchg
fs
and
gs
addr16
dec
rcl
jb
jecxz
cmp
jl
xchg
add
mov
in
adc
sub
and
cmp
jl
retf
sbb
push
seta
mov
xchg
(bad)
(bad)
push
dec
fs
jo
jb
ret
mov
in
int3
in
jge
jne
or
ret
popa
xchg
out
sub
push
test
aam
push
shl
icebp
inc
mov
add
retf
sbb
inc
dec
fbstp
sbb
data16
pop
aam
daa
xchg
movhlps
sti
xchg
mov
mov
ficomp
jne
xchg
sbb
retf
in
xor
mul
push
pop
enter
lods
aaa
outs
lods
aas
xchg
xor
add
cli
push
adc
mov
xchg
in
out
cmp
loope
out
sbb
adc
aad
jb
lahf
loope
lds
(bad)
dec
xor
sbb
cmp
pop
not
add
mov
fsubr
and
jp
jno
inc
out
pop
out
fxch
cld
add
shl
sahf
and
mov
xor
call
cmp
add
movs
stos
sub
and
sbb
dec
ins
hlt
inc
mov
imul
cdq
imul
jns
les
jmp
xchg
push
in
jge
test
arpl
out
sub
js
push
lock
cld
(bad)
scas
test
xor
bound
inc
clc
jb
stc
jmp
mov
push
popf
test
fcmovnbe
inc
xchg
and
pop
pushf
jbe
mov
add
in
dec
sbb
mov
movs
addr16
in
cmp
pushf
xchg
(bad)
jne
out
ret
pop
cmps
leave
pop
xor
das
mov
sar
xor
in
call
add
mov
jecxz
movs
in
test
xchg
dec
mov
daa
mov
mov
cmp
popa
cmps
mov
push
pop
mov
movs
mov
in
ja
inc
push
div
(bad)
sahf
out
pop
cmc
dec
cdq
call
mov
loop
inc
stc
inc
cld
adc
xchg
mov
test
adc
cli
or
mov
jnp
pop
fiadd
fidiv
push
xchg
sbb
or
or
inc
push
cmps
xchg
lahf
sahf
mov
jle
jmp
and
sub
mov
jo
mov
imul
jo
neg
sbb
or
mov
xchg
mov
repnz
into
cld
(bad)
movs
jmp
mov
jno
cs
aaa
or
mov
or
dec
and
xchg
mov
mov
xchg
xor
test
fsubr
dec
repz
mov
pop
fucomi
movs
fidivr
or
cmps
pop
jge
cmc
push
in
ins
or
xor
sti
daa
jge
jmp
or
xor
jmp
scas
cli
or
mov
mov
enter
sub
sub
(bad)
push
and
adc
lods
add
inc
mov
mov
lahf
adc
adc
cld
xchg
(bad)
pop
push
sub
(bad)
push
push
mov
push
xchg
adc
sbb
mov
lahf
loopne
cs
arpl
test
cli
sub
js
mov
sub
out
mov
sti
cmp
add
loop
xchg
cmps
jmp
cmp
fnstsw
fs
pop
mov
fnstsw
mov
loope
stos
sub
das
arpl
lods
or
shl
popa
inc
lods
xor
imul
pusha
inc
and
test
es
or
jne
sbb
out
jns
cwde
ret
push
mov
jo
test
push
aaa
sbb
ss
cmps
lea
int
mov
retf
add
mov
out
sbb
xor
or
xor
mov
cmp
adc
and
pop
rcr
in
xchg
pop
push
test
cmps
push
and
mov
push
popa
jg
jg
sub
mov
retf
pop
lds
mov
gs
dec
jg
aaa
mov
pusha
jmp
sub
fdiv
test
rol
mov
push
popf
sub
pop
mov
sbb
test
xchg
sbb
aam
call
jae
ins
fwait
cmps
dec
mov
arpl
popa
mov
or
scas
shr
sbb
out
push
int3
sar
jb
mov
(bad)
jl
cmp
retf
popa
add
sahf
or
sbb
lahf
xchg
lock
and
mov
imul
loop
sbb
gs
out
xor
call
dec
dec
icebp
lods
mov
add
pop
inc
mov
push
test
adc
fcmovnb
add
dec
cwde
popf
(bad)
sub
mov
jo
shl
fs
int3
pusha
sub
cwde
nop
inc
dec
xor
in
jae
and
push
scas
mov
xor
(bad)
pushf
loop
xor
leave
cmp
and
jae
mov
out
out
in
cmp
hlt
or
jl
jo
and
sbb
shl
inc
adc
sbb
(bad)
data16
sub
xor
adc
sub
jae
mov
adc
je
cld
ja
mov
xlat
jg
mul
cmp
pop
sbb
sbb
aad
and
shl
jmp
imul
aam
mov
into
push
add
cld
mov
lds
int3
xchg
push
mov
ja
mov
xlat
scas
dec
fwait
jg
test
lds
adc
push
mul
mov
push
jo
outs
mov
rol
daa
sbb
or
sub
ins
shl
mov
adc
mov
push
xor
xor
jns
cmps
aam
jne
cmc
pop
psubb
shl
or
fst
xlat
dec
adc
add
adc
mov
adc
sbb
not
push
or
dec
mov
ficom
out
xor
pop
or
sbb
xor
into
xor
xchg
aad
pusha
gs
clc
adc
movs
pop
je
inc
push
cmp
jg
loope
xor
call
out
mov
mov
sub
(bad)
lahf
dec
arpl
mov
adc
out
cs
aam
nop
mov
add
shr
pop
aaa
mov
inc
cdq
aaa
xchg
pop
xchg
jns
sbb
sub
adc
out
or
shl
mov
ss
sbb
jp
xchg
cdq
sbb
push
and
pop
push
xor
dec
xchg
push
mov
stos
sar
mov
enter
push
jp
lds
adc
repz
dec
jbe
stos
sub
movzx
adc
aaa
sar
and
mov
scas
mov
xchg
xlat
cmp
jae
mov
retf
loope
outs
imul
add
mov
idiv
ins
pop
cmp
pop
ins
xor
xor
inc
sub
lods
push
mov
jmp
jo
cmp
adc
fldl2e
pop
call
mov
sahf
mov
call
in
aaa
cmps
ror
jo
cmp
outs
or
ja
stc
sbb
pop
add
loopne
xor
rcl
fistp
cmp
xor
fst
mov
jl
pop
out
rcl
data16
shr
ret
cmp
mov
xor
lahf
addr16
test
adc
mov
gs
pop
xchg
sub
dec
push
xor
pop
inc
xor
fld
jp
mov
je
adc
lahf
adc
mov
in
out
shr
adc
nop
fadd
mov
popa
shr
and
push
std
add
mov
sti
repz
fbstp
push
enter
mov
mov
jb
addr16
movs
xchg
sub
test
loop
xlat
adc
fld
or
or
push
adc
(bad)
push
(bad)
fsubr
mov
or
fldcw
adc
xlat
mov
fsubr
shl
fcom
mov
push
mov
jae
xchg
inc
adc
inc
arpl
test
inc
add
and
out
adc
pop
cmps
mov
(bad)
(bad)
pusha
push
outs
add
adc
dec
das
out
es
mov
mov
test
push
sar
js
mov
pusha
push
cmc
pop
mov
scas
enter
movs
enter
jno
stos
sbb
inc
sbb
mov
mov
mov
popa
in
adc
scas
ror
pop
loop
pop
cli
inc
(bad)
sub
pop
mov
jmp
jecxz
icebp
inc
leave
aam
pop
stos
stos
loopne
fs
and
xchg
loope
mov
inc
sbb
lods
sub
call
sbb
out
lds
mov
dec
or
(bad)
in
in
aaa
test
jo
gs
dec
jmp
adc
dec
sti
dec
call
jg
jg
mov
popa
repnz
stos
test
xlat
daa
cdq
inc
fsubp
jae
mov
or
test
lds
mov
imul
enter
ret
outs
cmp
jno
add
pop
fild
test
inc
pop
xor
fmul
dec
inc
mov
xor
add
lods
mov
pushf
imul
mov
jb
ret
fwait
mov
lahf
jg
jmp
add
cwde
mov
mov
mov
sub
pop
jle
inc
jmp
add
jp
push
mov
cs
movs
icebp
jecxz
push
add
add
inc
lock
xor
push
ror
and
enter
cmp
stc
jbe
shl
int
lahf
push
repnz
pop
xor
dec
loop
nop
and
daa
fld
mov
in
push
fnstsw
add
cmps
mov
xchg
and
inc
or
hlt
inc
sti
cmp
dec
inc
sub
dec
and
or
or
xchg
neg
lock
scas
add
and
aad
xor
and
mov
xchg
movs
fidiv
loopne
inc
shl
adc
stos
mov
and
push
popa
out
xor
xor
push
iret
inc
cmp
push
pop
sub
mov
xchg
mov
lods
jno
lods
add
mov
mov
bound
xchg
je
in
mov
arpl
in
dec
cmp
dec
mov
mov
loope
mov
and
mov
and
ror
ficom
adc
inc
mov
xor
jmp
scas
sub
imul
mov
icebp
jg
in
les
pop
push
in
clc
mov
js
push
jb
add
fisttp
ins
iret
mov
jns
imul
add
nop
daa
cmps
mov
and
ror
xor
ss
inc
loopne
pop
push
popa
adc
push
imul
ins
sbb
cmp
es
lds
dec
sbb
or
jge
ficomp
pop
add
stos
call
shl
imul
rcl
fnstcw
dec
push
or
push
bound
sub
pop
or
dec
xchg
push
inc
rcl
xor
ss
cmp
jge
ficom
bound
dec
push
stos
stos
or
ins
inc
push
ja
outs
mov
sahf
and
add
dec
xor
sar
std
(bad)
push
pop
mov
fmul
cmp
xchg
fisubr
dec
dec
push
in
dec
inc
and
sub
xchg
int3
xor
enter
cmp
adc
repnz
enter
jp
cmp
push
dec
mov
ins
mov
addr16
shl
and
mov
or
les
dec
pop
mov
sbb
xor
shl
push
xchg
cmps
(bad)
and
stos
jno
push
fcomip
or
cmps
imul
test
dec
jbe
dec
jl
fs
test
rol
jmp
jb
dec
fisttp
inc
les
mov
push
cli
mov
add
leave
out
jmp
mov
xor
mov
int3
sbb
mov
and
xlat
cmps
ins
jbe
jne
retf
int
(bad)
cwde
push
dec
cdq
xor
fs
jno
mov
fmul
sub
mov
in
stos
add
mov
mov
jmp
aam
jbe
adc
push
stos
pop
shl
push
mov
adc
pop
push
mov
sar
out
pop
cmp
out
xor
pusha
repnz
mov
ret
xor
dec
adc
loop
sbb
xlat
push
mov
xchg
inc
clc
push
inc
aam
repz
loope
cld
mov
jno
mov
fst
shr
ins
sbb
sub
jle
or
scas
cmp
fbld
sub
mov
scas
sbb
mov
popa
xchg
dec
jb
adc
xchg
cld
mov
and
jo
inc
adc
sbb
stos
jl
xor
sahf
out
inc
mov
sbb
pop
cmp
int
sti
test
jno
or
dec
scas
push
call
adc
mov
stc
mov
xor
outs
test
in
mov
cmp
mov
pusha
lods
and
daa
jno
(bad)
(bad)
aam
mov
cmp
mov
das
mov
sbb
adc
mov
lods
jno
es
loop
xchg
add
inc
xor
jb
rcr
mov
pop
test
sar
imul
mov
int
rcl
mov
add
add
mov
mov
push
pop
adc
xchg
xchg
shl
repnz
mov
jo
adc
cmp
sub
adc
out
out
shl
daa
iret
cmp
cwde
cli
mov
hlt
fadd
jge
mov
popf
cmp
fmul
jecxz
retf
inc
xchg
fcom
mov
leave
push
pop
in
cmp
in
jb
jbe
and
(bad)
daa
aas
jb
in
adc
ja
sub
jno
mov
xchg
mov
ficomp
shl
inc
mov
xlat
cmps
sbb
inc
pop
pop
cmp
mov
jne
mov
hlt
(bad)
cmp
mov
xor
cmps
xchg
jbe
xchg
mov
es
(bad)
adc
jbe
sbb
add
dec
enter
mov
fcmovnbe
fwait
push
arpl
fwait
inc
dec
xlat
xor
into
jae
xchg
stc
cmp
cwde
mov
daa
add
add
sub
or
daa
and
mov
cmp
leave
out
jge
dec
cmp
movs
xchg
sub
pop
push
sub
mov
(bad)
fcmovne
and
xchg
neg
sub
lea
sub
sbb
fucomi
in
lahf
aam
shr
(bad)
in
xlat
loop
dec
enter
dec
(bad)
(bad)
cs
ds
out
imul
mov
loop
mov
adc
push
or
fs
push
xchg
sub
sti
rol
cmp
stos
aaa
mov
fwait
pop
jbe
mov
dec
cld
pop
xor
xor
cmp
dec
lds
movs
push
pop
jbe
inc
call
or
dec
pop
add
inc
js
mov
inc
aas
int
push
sti
mov
sbb
sti
cmp
adc
rcl
mov
movs
pop
sbb
imul
jmp
jecxz
or
inc
aad
adc
js
loope
es
stc
test
add
push
iret
test
mov
push
xlat
pushf
shl
push
lock
into
cmps
cmc
or
pop
shl
lea
por
and
add
retf
jne
call
xchg
popa
mov
fxch
rol
xchg
mov
add
jge
xor
mov
mov
mov
mov
imul
inc
inc
cmp
mov
or
dec
push
dec
shl
jmp
mov
fsubr
movs
and
or
cmp
js
(bad)
ficom
dec
lock
mov
dec
add
pop
repnz
ret
push
xlat
fist
mov
loop
fnstcw
out
or
xchg
push
call
mov
mov
and
sti
popf
ficomp
jmp
cdq
and
aad
cmc
out
push
xor
gs
pop
clc
(bad)
ja
mov
test
adc
add
pop
imul
and
repz
mov
les
test
popf
ins
stos
or
daa
aas
(bad)
adc
xchg
jmp
dec
dec
ss
pop
je
and
out
sub
ds
cdq
mov
cmp
and
iret
adc
push
int3
xchg
lahf
dec
adc
dec
(bad)
loopne
cmp
add
(bad)
or
cmp
adc
add
(bad)
push
mov
lods
mov
cmovle
mov
test
or
and
pop
inc
out
(bad)
sbb
pop
jns
test
pmaxsw
mov
leave
popa
xchg
call
lahf
xchg
cmovo
div
xchg
hlt
jg
das
dec
adc
fwait
repz
mov
ret
outs
ins
jg
shr
jno
add
xlat
pop
popa
ret
cmp
data16
or
pop
iret
mov
in
pop
mov
ficomp
movs
cs
pop
add
imul
mov
jmp
jbe
or
and
push
xchg
adc
mov
cmps
push
(bad)
inc
cmp
pop
popf
out
test
pop
mov
mov
push
inc
int
mov
jl
dec
nop
or
lea
mov
xchg
xor
int3
(bad)
adc
and
and
popf
push
in
aas
and
jns
add
jmp
pop
enter
sahf
fbld
jge
mov
sub
add
cwde
xchg
data16
clc
icebp
push
ins
loop
pop
mov
mov
mov
push
(bad)
push
lahf
jl
jmp
pusha
xchg
ins
xor
mov
xchg
push
add
xlat
pop
mov
pop
inc
adc
mov
aad
rcr
mov
in
mov
xor
jp
jg
sub
dec
shl
push
dec
ss
pop
jnp
repz
xchg
dec
mov
fiadd
jmp
outs
xor
movs
sub
retw
cmp
pop
enter
xchg
push
adc
mov
inc
mov
pop
cmp
jo
push
pop
or
pop
addr16
lea
daa
dec
xchg
add
movs
dec
xchg
xor
cwde
inc
xlat
inc
inc
push
push
xor
sbb
pop
sahf
in
jecxz
imul
lods
sub
xor
bound
or
rol
push
enterw
mov
jbe
inc
pop
mov
sbb
scas
fst
(bad)
push
adc
xchg
jge
mov
out
push
jb
and
jle
shr
pop
stc
test
mov
aas
icebp
inc
and
sbb
or
jns
xor
add
cli
push
in
in
stos
inc
and
ret
es
mov
fs
sub
dec
rol
cmc
cli
push
cmc
in
in
sar
add
sbb
cmp
out
adc
fnstcw
aam
lea
dec
and
movs
mov
mov
pop
std
test
mov
scas
mov
and
add
xor
rol
mov
push
jae
mov
mov
xchg
mov
add
js
push
dec
and
inc
xchg
call
sub
jmp
pop
test
dec
enter
xchg
or
push
lahf
mov
(bad)
and
mov
xchg
cmp
mov
jb
jmp
std
mov
int
int
xor
test
mov
push
dec
lahf
xchg
inc
bswap
sbb
mov
loopne
repz
or
pop
int3
mov
outs
call
xor
push
(bad)
(bad)
jmp
shr
push
jle
dec
jecxz
shl
hlt
cmp
adc
loopne
fld
pop
frstor
jns
pop
and
loope
xchg
mov
mov
cmps
out
sbb
cld
pop
popa
xor
(bad)
pop
mov
add
movs
mul
push
repnz
fadd
jbe
jae
inc
aam
cmp
cmp
scas
gs
pop
or
fldpi
(bad)
jg
lods
add
dec
jne
in
sub
adc
sbb
test
mov
cmp
fdivrp
sbb
xor
inc
(bad)
(bad)
xacquire
dec
dec
cmp
or
mov
xchg
aam
fldenv
test
sub
sub
aam
pop
xor
sbb
es
out
repz
fbstp
sub
add
lds
call
sbb
dec
or
and
xor
xchg
lock
lods
and
stos
cmp
pop
lahf
je
test
dec
test
pushf
xor
push
jg
stos
int3
jnp
jge
sub
or
mov
das
mov
sub
js
cmp
dec
(bad)
lahf
pop
xor
jecxz
mov
gs
repz
(bad)
call
add
jl
cmps
inc
std
cwde
jg
ffreep
inc
ins
fadd
in
(bad)
out
or
ret
and
push
push
les
cld
sub
gs
wrmsr
pop
pop
push
or
jp
push
ins
jg
add
mov
cmc
ja
mov
inc
loop
or
push
push
fwait
inc
mov
pusha
punpckhbw
repz
movs
mov
pop
mov
cwde
jns
lock
retf
std
loopne
fmul
push
lahf
cmp
mov
es
jbe
data16
retf
sub
sbb
push
cmp
std
xor
jb
je
lea
daa
ins
cmp
sub
cdq
or
mov
jmp
sahf
xchg
aad
jne
inc
sbb
cmps
pop
xlat
push
or
dec
out
mov
cld
int3
mov
add
shl
fwait
mov
or
xor
dec
cmp
mov
or
xchg
xchg
jmp
sahf
push
ficomp
xor
loope
adc
scas
mov
(bad)
retf
(bad)
stc
xchg
add
sbb
sbb
(bad)
mov
test
jle
mov
sub
dec
int3
movsx
mov
lods
aad
into
inc
popf
nop
and
adc
push
out
mov
inc
repnz
in
into
iret
stos
test
les
(bad)
das
fisttp
cmp
push
adc
xchg
mov
cs
data16
jg
(bad)
test
and
gs
outs
xor
clc
add
pusha
daa
sbb
xor
repnz
jecxz
push
cmp
or
pop
mov
nop
call
retf
sbb
mov
test
add
and
inc
sar
jmp
sbb
jmp
rcr
add
jns
pop
jle
mov
cmp
or
jmp
xchg
cmp
pop
mov
fiadd
hlt
(bad)
or
es
jmp
mov
or
ja
data16
in
xor
add
adc
cmp
mov
inc
cli
pop
mov
nop
scas
add
push
mov
xor
lock
add
sub
cmps
sar
rcr
and
ret
mov
push
gs
dec
retf
aaa
outs
into
mov
pmullw
and
mov
mov
stos
stos
xlat
or
dec
data16
cmp
mov
bound
cmp
ss
sub
rcr
xchg
pop
dec
cdq
dec
dec
mov
xor
jno
mov
fdivr
sub
test
add
xchg
data16
les
imul
xchg
inc
dec
dec
inc
int
xchg
fisttp
push
and
pop
xlat
outs
adc
dec
mov
cmp
outs
jle
inc
push
pop
add
call
fisttp
push
fs
out
cmp
xchg
call
aaa
xchg
in
cmp
mov
std
xor
sub
stos
push
jns
xchg
and
ror
lds
arpl
xchg
pop
mov
dec
stos
into
or
fidivr
(bad)
jle
mov
mov
hlt
outs
sti
sahf
sahf
inc
stos
fcmovu
loopne
push
pusha
xchg
and
xchg
xchg
das
test
mov
adc
inc
cwde
sbb
leave
imul
arpl
scas
or
push
push
pop
or
daa
hlt
fisttp
mov
scas
adc
jno
daa
aas
cmp
shr
push
push
mov
pop
nop
xchg
add
sbb
dec
and
test
push
pop
outs
pop
cmp
imul
bnd
fbstp
or
ins
pop
call
xchg
cli
push
inc
mov
lea
arpl
and
stos
fcmovnu
inc
out
pop
dec
(bad)
push
mov
add
mov
push
jnp
cdq
leave
aaa
int3
pop
aam
mov
cmc
test
dec
cs
mov
push
adc
mov
inc
lahf
je
jno
test
xchg
icebp
mov
add
hlt
(bad)
not
retf
cmp
cmp
xchg
in
clc
fdiv
push
jbe
test
movs
mov
scas
dec
into
ds
sub
fcomp
ja
(bad)
shr
push
fldenv
push
mov
jae
xchg
rol
jno
mov
inc
fldcw
inc
sbb
repz
fcomp
jbe
mov
out
pop
push
hlt
shr
jnp
addr16
test
popf
shl
mov
adc
or
or
xor
repnz
loope
repz
cmp
pop
out
jge
jns
retf
jle
inc
retf
aad
fstp
fldenv
jp
outs
inc
sbb
mov
sub
out
jae
or
adc
dec
jle
xchg
or
cs
pop
pop
jnp
mov
fwait
iret
sbb
mov
pop
loopne
xor
in
pmuludq
jbe
lods
jl
dec
jns
jge
shl
sub
add
mov
mov
sub
jmp
and
je
xor
add
sti
sti
cli
mov
sub
jecxz
xor
cmps
inc
add
leave
fcmovnbe
(bad)
out
mov
cmp
les
mov
out
retf
push
xchg
es
xor
push
test
cmp
adc
out
hlt
xchg
ret
adc
and
in
fmul
mov
add
stos
fdiv
call
add
(bad)
xchg
and
pop
movs
jg
sub
repz
sub
mov
psubusw
test
pop
push
jnp
aas
(bad)
fdivr
sbb
sub
jae
xor
ret
inc
sti
jno
fst
inc
repnz
popa
and
mov
xlat
js
inc
call
sti
and
push
scas
mov
std
rol
data16
and
inc
pop
lods
or
inc
mov
mov
lds
test
shl
xchg
mov
mov
cmps
pop
sbb
cwde
jmp
xor
pop
xor
mov
cmps
addr16
out
(bad)
clc
daa
scas
mov
iret
add
jb
aam
inc
mov
xor
ret
loopne
pop
enter
jp
and
mov
adc
arpl
or
xchg
(bad)
and
jl
test
mov
and
mov
out
aaa
cmp
retf
adc
in
xor
test
call
pushf
repnz
xchg
mov
ret
jmp
outs
pop
fwait
sbb
and
adc
mov
leave
jp
sbb
add
push
sbb
fimul
and
out
cld
or
pop
les
nop
das
or
shl
ins
les
retf
mov
icebp
push
xchg
lods
adc
in
inc
pusha
jmp
xchg
fcomp
jmp
paddb
jae
mov
xchg
inc
bound
push
cmps
rcl
sub
bnd
bound
(bad)
bound
mov
les
fdivr
xchg
jno
mov
push
push
xor
daa
pop
mov
ins
cli
mov
mov
mov
stc
iret
mov
ins
(bad)
out
lea
out
stos
ins
popf
sbb
leave
out
(bad)
in
inc
(bad)
stc
mov
ret
dec
xlat
cmp
mov
or
dec
push
neg
scas
xchg
push
into
cmp
xchg
push
inc
mov
test
and
sbb
add
loope
dec
adc
and
cwde
imul
loop
into
inc
cs
mov
(bad)
mov
pop
xor
pop
shr
push
loopne
cdq
sbb
std
xor
aaa
dec
lahf
mov
pop
(bad)
or
in
ins
push
loope
loope
mov
popf
xchg
cmp
sbb
pop
lea
fisubr
pop
sbb
pop
in
ja
bound
je
(bad)
iret
inc
pop
sbb
rep
(bad)
(bad)
je
outs
pop
js
in
add
clc
push
outs
frstor
inc
fwait
aaa
pop
sub
sub
idiv
cmp
adc
out
jmp
add
add
fs
xor
push
in
mov
or
mov
xlat
icebp
ss
adc
ins
inc
(bad)
cmp
jmp
cwde
cld
xchg
fs
fsub
pop
retf
rol
sub
test
sahf
push
push
outs
xchg
stos
mov
std
mov
fwait
aad
inc
ja
inc
shr
sbb
rcl
scas
cmp
inc
push
addr16
gs
sub
cmps
in
fidivr
jl
inc
outs
aam
or
div
mov
dec
ds
and
dec
mov
ret
adc
outs
rcl
jo
loop
cwde
je
int3
push
mov
add
call
and
lds
mov
sti
fs
retf
syscall
int3
xchg
or
mov
push
dec
lahf
cmc
(bad)
fsubr
mov
in
and
pop
or
out
repz
(bad)
xchg
or
dec
addr16
fs
sbb
loope
pop
mov
fsub
pop
mov
addr16
retf
push
push
ror
clc
inc
sahf
xchg
mov
sbb
ficomp
loope
out
cld
mov
and
int3
push
test
fsub
ficom
addr16
ret
add
jno
push
sar
clc
jnp
inc
inc
jae
push
loope
pop
dec
pop
xor
push
mov
call
stos
sub
cmp
nop
jg
jmp
adc
pop
scas
stos
cmp
mov
push
mov
pop
in
push
iret
mov
mov
aam
sub
lods
hlt
pop
cs
aas
and
jl
jo
cmp
fidiv
and
lods
jmp
ror
push
mov
inc
(bad)
adc
xchg
push
fsubr
enter
nop
sub
cmps
ins
push
ja
mov
jle
imul
inc
add
xchg
ficom
jecxz
dec
cmp
fstp
cld
push
cmp
dec
fadd
adc
adc
pop
bound
inc
dec
hlt
fchs
lea
xchg
add
cwde
jp
sbb
sbb
stc
or
gs
dec
stos
(bad)
mov
adc
jb
jns
iret
rcr
leave
fcomp
movs
cwde
push
xchg
mov
icebp
inc
mov
(bad)
jecxz
out
sbb
push
scas
sbb
mov
pusha
into
dec
imul
out
test
jmp
dec
xor
(bad)
addr16
ins
add
outs
or
mov
shl
cdq
pop
sub
inc
adc
cmc
mov
test
xchg
cmps
push
mov
jge
push
pusha
daa
mov
jp
mov
cld
mov
ds
pop
or
push
repnz
mov
(bad)
cmp
lahf
xor
xchg
dec
push
jno
aam
ja
and
shl
dec
cmp
pop
popf
test
push
xor
sar
call
test
or
adc
cmp
push
sub
ret
bswap
mov
sub
rcl
cs
mov
lea
xor
xor
sub
daa
add
retf
xchg
pop
mov
popa
test
daa
sub
jge
(bad)
or
dec
aam
adc
es
stc
inc
pop
sub
arpl
add
push
mov
sti
ss
pop
push
out
push
in
test
sahf
les
sbb
push
dec
push
and
rcr
loop
sub
cmp
(bad)
fcom
shl
popa
arpl
retf
mov
jb
xor
xor
xchg
rcl
shl
push
push
cmp
add
ins
add
mov
(bad)
pop
xlat
inc
lahf
adc
adc
jns
out
inc
push
enter
sub
dec
jge
and
leave
mov
xchg
sub
repnz
cdq
ror
adc
fist
test
xor
stos
mov
dec
add
(bad)
push
mov
shl
xor
add
dec
jge
or
jmp
daa
mov
rcr
pop
cmps
lock
pop
mov
ins
jmp
inc
mov
call
idiv
sub
imul
ja
pop
fistp
sub
dec
jmp
je
shl
ror
into
mov
xchg
pop
or
data16
data16
and
dec
sahf
mov
in
mov
(bad)
push
test
ins
xor
or
fwait
xchg
sti
sub
ret
dec
sub
xor
retf
mov
push
pushf
mov
or
sbb
jbe
fnstsw
lea
loopne
faddp
or
xchg
mov
adc
jle
sub
sti
test
pop
js
cmps
mov
repnz
cld
push
sbb
adc
leave
and
iret
push
or
cmps
mov
aad
pop
push
sub
dec
push
and
xchg
(bad)
fs
push
loop
cmp
pop
sti
mov
je
jno
(bad)
cdq
xor
jns
xchg
add
add
popf
and
loopne
xor
cwde
nop
jno
jne
inc
loop
sbb
cwde
pusha
xchg
sbb
(bad)
out
and
dec
fs
dec
mov
xor
pop
sbb
pop
xor
in
call
inc
(bad)
clc
mov
xlat
pop
aas
jno
mov
xchg
mov
xchg
push
push
ja
pop
push
mov
sbb
sub
push
fidiv
mov
mov
jbe
int
xor
into
popa
and
test
into
adc
call
mov
mov
adc
mov
arpl
mov
xor
(bad)
ss
mov
mov
or
imul
pop
aaa
mov
icebp
pop
cmp
outs
stc
adc
add
sbb
clc
aas
(bad)
jl
ds
sbb
push
pop
mov
sbb
leave
jg
imul
xchg
mov
xchg
or
cmp
lods
push
retf
mov
ss
aad
push
push
mov
out
xlat
dec
sahf
sahf
push
js
mov
inc
scas
fbstp
push
clc
xor
dec
pop
sub
daa
loop
pop
shl
(bad)
cmp
in
pop
ret
stc
xchg
in
cmp
dec
int
and
repz
shr
aad
xor
stc
das
ss
cmp
jmp
dec
cmp
in
(bad)
xchg
jp
arpl
test
inc
movs
(bad)
fmul
sti
cmps
mov
pop
mov
call
sub
mov
daa
mov
fld
loope
pop
sub
mov
mov
sbb
push
xchg
push
push
pop
sub
mov
imul
mov
mov
xor
mov
in
sbb
in
dec
xlat
retf
lock
pop
mov
mov
std
xor
mov
les
push
imul
cmp
scas
sbb
and
jp
dec
rcl
imul
fiadd
sbb
(bad)
mov
push
inc
xchg
enter
imul
cdq
sub
or
repnz
lods
push
jne
push
lock
mov
push
xchg
inc
jns
dec
loope
xchg
stos
stc
into
(bad)
mov
iret
sbb
sub
dec
xor
push
pop
add
sbb
jae
inc
xchg
les
jb
add
jnp
sbb
test
call
fdivr
xor
sysexit
(bad)
cmp
adc
xchg
fldenv
or
enter
cli
clc
jl
sub
dec
ss
inc
xor
mov
cld
push
push
dec
xchg
dec
add
mov
adc
lea
pushf
or
mov
into
mov
into
mov
mov
sub
call
add
xor
jp
adc
push
dec
scas
xchg
hlt
jmp
cmp
xchg
enter
mov
xchg
ss
ins
mov
inc
fs
mov
adc
jno
cmp
movs
sahf
clc
lods
lea
mov
inc
xchg
mov
push
inc
push
mov
fwait
out
push
xchg
pop
mov
out
push
nop
(bad)
push
adc
jle
sub
jmp
fs
inc
jmp
xchg
sbb
in
ins
sti
pop
xchg
xchg
jecxz
xlat
inc
and
and
adc
bound
dec
add
jns
stos
jns
jmp
fdiv
(bad)
ds
adc
retf
pop
aad
xchg
popa
stos
js
retf
xchg
pop
out
int
xor
pop
and
sub
jg
push
pop
jmp
sub
mov
cmp
mov
das
or
mov
test
movs
lods
push
(bad)
gs
aas
outs
mov
fsubr
(bad)
jbe
mov
adc
dec
sub
outs
(bad)
movs
push
test
mov
dec
sahf
xor
xchg
jmp
mov
scas
fwait
mov
popa
push
xlat
stos
scas
aas
jp
mov
pop
mov
clc
inc
test
or
dec
out
mov
jns
jae
or
std
cmp
loope
enter
ja
fisttp
sbb
(bad)
mov
push
stc
push
es
cli
rcl
ins
ins
push
ins
sahf
hlt
xchg
pop
imul
rcr
clc
aad
data16
repnz
mov
pop
fnstcw
jl
retf
ss
sbb
rcr
sbb
xor
nop
push
push
cmp
in
mov
dec
cmp
push
xor
pop
aaa
pusha
(bad)
xchg
icebp
sub
push
ror
in
jb
in
xor
push
popa
dec
fwait
popf
dec
retf
stos
inc
sub
mov
push
mov
enter
je
movs
outs
lods
inc
pop
pop
in
mov
cld
sub
loope
pop
dec
pop
ret
dec
stc
ja
mov
pop
adc
and
ins
mov
das
in
dec
inc
xor
push
mov
fist
(bad)
retf
imul
inc
xchg
cmp
ins
hlt
fwait
popa
cli
cmp
test
pushf
aad
repnz
or
and
ret
sti
push
jge
iret
sub
or
pop
push
cmps
push
ret
jno
fbstp
fsubp
aad
frstor
retf
pop
fcompp
and
addr16
mov
setb
inc
jae
scas
push
pushf
mov
movs
jge
mov
jae
(bad)
mov
pop
repz
xor
scas
shl
push
pusha
ror
je
not
imul
inc
xchg
scas
xchg
push
and
js
cmp
xor
dec
xchg
arpl
add
vpsrlw
adc
loopne
push
jnp
cmp
sub
sbb
xchg
xchg
add
aas
push
aad
and
xor
ins
and
sub
push
out
jmp
dec
ja
aas
mov
dec
or
dec
aaa
push
retf
push
es
retf
and
and
or
xchg
clc
push
aaa
sub
ret
xlat
mov
sti
adc
cmp
dec
gs
enter
xor
or
cmp
aad
out
mov
stos
enter
xchg
mov
xchg
pop
cmp
mov
jmp
mov
xor
cdq
neg
cwde
xchg
mov
dec
mov
sbb
(bad)
sti
add
jbe
jnp
ds
sar
push
cmp
and
xor
hlt
rcl
jns
jmp
fild
sub
inc
lods
pop
cmp
mov
fmul
xor
or
je
loopne
sub
mov
movs
add
gs
cmp
pop
jo
fcomp
pop
das
sub
movs
stos
mov
mov
call
fild
inc
cdq
sub
stc
test
in
pop
clc
pop
add
or
addr16
sub
mov
mul
and
cmp
inc
jmp
ss
jnp
mov
adc
xchg
pop
cmp
out
pusha
mov
cmps
mov
xchg
rol
out
sub
xchg
jnp
scas
rcl
mov
pop
dec
loope
inc
xlat
mov
in
outs
retf
jns
je
dec
dec
pop
fs
jns
(bad)
retf
ret
pop
stos
and
cmc
popf
cdq
inc
pop
fistp
mov
fistp
jb
jmp
ror
inc
dec
xchg
adc
hlt
dec
fcomp
int
xlat
es
shl
xchg
not
sub
loopne
out
mov
adc
xchg
xor
sbb
sub
ins
add
cmp
popf
and
pop
xor
mov
call
inc
dec
shr
adc
test
stos
rcr
inc
or
xor
scas
push
pop
add
dec
por
pcmpeqd
data16
push
push
adc
sub
loope
jle
xchg
xchg
dec
shl
push
xor
leave
jge
into
aam
or
push
addr16
inc
mov
push
arpl
mov
mov
xchg
cs
pop
jne
test
sbb
adc
xchg
aam
xlat
loope
ret
out
test
sub
adc
stos
jne
cmp
cmp
lea
and
out
jne
mov
sub
(bad)
and
cmp
xchg
push
push
test
ret
ret
xor
push
push
fstp
adc
stos
test
sbb
jno
and
imul
push
mov
sub
push
into
mov
and
in
scas
cwde
inc
adc
add
inc
mov
sub
kaddw
jp
call
add
dec
adc
ins
adc
push
add
adc
pop
mov
retf
jne
dec
out
pop
push
mov
shr
mov
jnp
sub
push
lods
inc
mov
fmul
jge
or
fimul
call
dec
arpl
not
ret
jmp
outs
repnz
xchg
or
dec
popa
ret
cmc
in
std
retf
cmp
iret
iret
cmp
sub
movs
xor
call
out
dec
aam
sbb
xchg
mov
cmp
mov
movs
fnstcw
inc
std
push
cdq
cmps
push
(bad)
jp
cmp
sub
inc
cmp
mov
(bad)
or
xchg
iret
imul
jp
cld
mov
xor
cli
cmp
out
adc
jmp
dec
bound
test
jae
and
or
fld
adc
xchg
and
jb
fld
lock
cmp
fwait
mov
hlt
stc
emms
xor
push
pop
mov
stos
cmp
(bad)
fimul
pop
sub
data16
and
mov
dec
(bad)
fnstsw
repz
imul
sub
sti
push
or
push
retf
jecxz
pop
adc
sbb
icebp
shl
push
fadd
movs
addr16
sub
cwde
imul
pop
sbb
test
jne
mov
sbb
int3
xchg
fstp
(bad)
in
mov
adc
aad
xor
(bad)
and
dec
xchg
lock
cdq
add
adc
inc
in
rcl
push
push
cdq
ins
xchg
sub
push
add
mov
aad
inc
mov
mov
ins
je
mov
inc
push
adc
xchg
cmps
and
test
mov
jno
(bad)
std
pop
push
xor
rcl
push
ret
pop
add
jnp
mov
arpl
mov
jns
or
cmp
sub
adc
dec
sub
imul
sahf
(bad)
fsubr
push
cmp
cmps
in
arpl
lods
sbb
sub
scas
jns
sub
not
jle
fadd
mov
xor
outs
mov
dec
sub
(bad)
mov
lds
sbb
ret
jp
jno
mov
ins
idiv
mov
or
fsub
mov
mov
add
sbb
sbb
les
xchg
hlt
push
sbb
ds
xchg
cmc
inc
lods
sub
sbb
data16
sub
push
enter
inc
cmp
adc
arpl
cwde
adc
ret
sbb
sbb
mov
adc
pop
aaa
sbb
push
icebp
sub
scas
push
jle
data16
push
stc
or
popa
fcom
sbb
in
fs
xchg
xchg
cmp
sub
xchg
mov
ja
mov
jp
jo
mov
cmps
sahf
push
stos
iret
dec
xchg
push
ins
stc
xchg
aad
mov
and
fdiv
sub
cmp
inc
inc
mov
push
dec
(bad)
shr
(bad)
int
mov
aaa
sbb
ret
jae
push
in
fwait
loope
push
ror
mov
(bad)
mov
mov
cmp
fdivr
cmp
aaa
and
les
add
push
push
(bad)
fsubp
mov
sbb
out
xchg
push
jmp
scas
push
sub
lea
outs
jb
fist
fwait
retf
ds
sub
jb
xor
xchg
in
add
hlt
dec
jge
les
lods
jp
imul
xchg
mov
cmp
das
pushf
mov
xchg
add
test
pop
and
jne
push
add
in
lahf
pop
inc
add
mov
sub
pop
jb
sub
xor
(bad)
jne
inc
lds
aam
ja
mov
sub
xor
mov
ss
dec
out
jge
inc
inc
sub
xor
push
sbb
fwait
sub
scas
pmullw
adc
popa
ins
push
bnd
shl
dec
xchg
sahf
sbb
out
xchg
mov
add
sbb
aam
sbb
lock
fstp
xchg
test
pop
dec
xchg
call
pop
xor
iret
fldcw
lods
rol
sub
jp
outs
lock
pop
pop
sahf
sub
xor
test
(bad)
cmc
mov
pop
jo
dec
mov
pushf
mov
ret
pop
sbb
xchg
jno
fs
or
gs
aam
xlat
sub
scas
jp
dec
adc
out
or
adc
dec
ins
xchg
and
fadd
popf
ins
in
inc
sbb
dec
mov
sbb
scas
fnop
les
cmc
push
and
xor
mov
jnp
and
(bad)
cli
daa
xor
call
add
inc
retf
fstp
aam
(bad)
mov
fistp
out
xor
and
das
dec
aad
retf
and
inc
popa
dec
add
jg
addr16
das
in
xchg
icebp
push
frstor
in
dec
mov
cmp
movs
mov
lock
not
sub
jl
xor
ret
fstp
inc
cmp
dec
and
cmp
fsubr
retf
test
xor
add
mov
adc
pop
into
xchg
shl
dec
xchg
jne
in
mov
fist
xor
jbe
jne
aaa
inc
fild
xchg
mov
jae
inc
aad
xor
popa
mov
cmp
mov
sub
cmp
sbb
test
push
retf
xchg
fnstsw
mov
mov
mov
shr
es
into
idiv
push
rcl
mov
mov
dec
daa
ins
test
dec
ins
imul
cmps
hlt
iret
xchg
icebp
or
lods
sub
mov
jno
test
retf
mov
push
mov
dec
(bad)
loop
sub
cmp
sbb
push
popf
mov
aas
add
dec
loopne
mov
lock
jle
test
xchg
xchg
mov
push
dec
jmp
sub
jle
dec
fbstp
into
sar
adc
jle
push
in
inc
jmp
ja
inc
pop
jge
push
add
mov
repz
jo
in
mov
cmp
and
mov
call
xchg
stos
fs
ror
add
jecxz
imul
ret
aad
xchg
mov
mov
push
cmc
add
xchg
adc
mul
push
add
xlat
and
in
movs
add
je
or
jns
fs
inc
aad
jge
xor
stos
arpl
imul
aas
jecxz
lds
inc
push
rcr
into
lods
movs
adc
sub
mov
sub
cmps
dec
jecxz
pop
jge
je
dec
xchg
ins
mov
call
nop
outs
inc
pop
mov
loopne
(bad)
btc
nop
or
in
es
and
dec
add
icebp
(bad)
gs
stos
retf
(bad)
shl
mov
or
mov
adc
nop
pop
mov
rol
push
popa
adc
jmp
jbe
or
stos
sahf
out
les
xchg
adc
jle
js
popa
jmp
in
or
loopne
int
mov
fst
sbb
popa
sbb
cdq
sbb
ins
stc
xchg
sbb
jg
out
pop
outs
outs
or
mov
cdq
and
add
cmps
es
addr16
in
add
rol
mov
mov
cmp
ret
mov
pop
nop
faddp
lea
(bad)
mov
inc
jmp
mov
pop
mov
ins
dec
and
fyl2x
mov
clc
sbb
aad
fsubr
cmovle
(bad)
jnp
xchg
inc
ins
and
test
mov
loop
shl
cmp
adc
jbe
shr
jmp
fild
jo
stos
test
mov
in
add
xlat
(bad)
dec
fisub
xor
shr
pop
iret
cwde
jg
mov
push
push
retf
mov
pop
lods
mov
push
ret
sub
add
xor
pop
stos
enter
hlt
ins
xchg
es
mov
mov
stc
xchg
xchg
dec
xchg
push
test
test
mov
dec
fwait
jbe
mov
ins
into
add
call
jmp
test
daa
stc
movs
jle
push
pop
jl
pop
pop
iret
or
cmp
outs
cmc
cs
stos
push
push
(bad)
fld
sahf
movs
or
xchg
add
call
xchg
xor
scas
imul
fmul
xchg
mov
push
fstp
daa
call
or
imul
daa
adc
cwde
std
and
test
push
loopne
ds
mov
iret
outs
adc
cmps
test
inc
xchg
scas
std
push
jecxz
jne
imul
mov
mov
sub
jae
(bad)
push
xor
push
pop
mov
addr16
add
aad
cmp
(bad)
and
xor
pop
in
xchg
inc
and
xor
dec
fstp
out
sub
rcr
xor
adc
ss
dec
mov
mov
xchg
mov
sti
lea
addr16
ins
pop
(bad)
jecxz
jl
sub
mov
pop
jge
cmp
out
fstp
out
fisttp
mov
arpl
retf
xchg
jnp
mov
mov
stc
clc
jg
mov
in
test
xor
add
or
cli
(bad)
dec
sub
push
mov
pop
or
jo
sub
popf
imul
push
ror
icebp
add
fcom
ret
cdq
mov
out
arpl
aas
add
iret
stc
mov
xchg
cwde
bound
bound
sub
mov
cmps
lock
jns
out
push
in
push
mov
mov
sbb
popa
xchg
push
mov
xchg
pop
inc
xor
mov
mov
xor
or
xor
sar
fisubr
lock
adc
in
fwait
add
jmp
jmp
ficom
jl
xchg
jecxz
xor
test
mov
push
adc
clc
js
sub
jle
and
adc
push
hlt
imul
inc
jmp
aad
sub
fnstenv
mov
pop
jne
xor
mov
sbb
fcomi
pop
add
cmp
sahf
adc
sbb
repz
mov
pop
retf
cmp
add
fmul
movs
xchg
clc
es
sbb
mov
cmp
cmp
icebp
imul
adc
out
rcr
mov
sbb
sar
mov
mov
pop
xchg
push
add
or
out
sti
dec
add
xchg
neg
sub
nop
(bad)
aad
movs
aam
sbb
mov
mov
ret
pop
icebp
repz
call
shl
mov
movs
bound
push
jmp
push
outs
xchg
rcl
or
sbb
jp
(bad)
js
push
mov
xor
je
adc
inc
sbb
xor
and
and
push
adc
je
mov
leave
out
mov
jns
fst
(bad)
adc
repnz
(bad)
jb
sub
ror
fwait
in
xor
out
cmp
fstp
jmp
dec
jno
cmp
adc
out
mov
adc
dec
inc
add
pop
dec
ins
pusha
add
mov
inc
stc
mov
or
and
outs
loopne
cmp
int
or
push
loope
mov
mov
push
mov
xchg
push
and
pop
repz
mov
ins
scas
cwde
pop
push
(bad)
in
mov
and
mov
sbb
sbb
and
sub
out
cmp
aas
add
aam
add
adc
mov
mov
or
scas
xor
cmp
loopne
into
retf
in
sub
jecxz
mov
sbb
cmp
jo
jle
mov
mov
jmp
dec
imul
mov
out
push
adc
popf
cmps
xchg
int
ss
and
(bad)
xlat
fisub
test
shl
add
jo
aas
lock
dec
add
mov
and
mov
push
mov
jmp
inc
in
aaa
cmps
bound
icebp
sbb
fisub
inc
jge
sti
sub
push
sbb
adc
inc
cwde
jmp
sbb
adc
ss
lock
cli
enter
or
(bad)
adc
inc
sti
scas
jle
fild
sbb
repz
aam
push
inc
lods
jge
add
addr16
stc
test
mov
sub
cmp
push
push
sbb
cmps
mov
push
xor
movs
test
repnz
or
ds
cwde
cmp
cwde
fldenv
jge
dec
mov
fsubp
imul
sub
out
mov
xchg
into
test
popf
in
inc
adc
sbb
jns
add
push
dec
pop
lock
mov
xchg
push
ror
add
add
dec
repnz
ja
ja
shl
cs
stc
ins
ret
mov
lods
dec
aam
fisttp
rol
leave
jmp
mov
mov
mov
pop
ins
lea
sahf
enter
test
pop
cmp
shl
or
inc
lock
jno
jae
fstp
mov
fnsave
pop
or
stos
sub
out
xlat
adc
inc
mov
movhps
sub
addr16
mov
push
ret
add
pop
movs
sbb
push
outs
push
push
(bad)
xchg
fmul
ss
fidiv
sub
aas
ins
jbe
je
(bad)
lock
daa
retf
ins
and
(bad)
(bad)
cli
mov
loope
test
pop
lds
push
inc
ror
or
jl
mov
into
outs
ja
loopne
stos
add
push
lahf
cmp
dec
rcr
(bad)
jmp
aad
inc
int3
adc
cmp
scas
xchg
(bad)
int3
push
xor
sbb
ffree
test
pop
scas
mov
inc
cld
sbb
iret
xor
call
imul
xor
sbb
lds
inc
pop
jge
pop
std
xchg
int
sub
(bad)
das
xchg
jae
(bad)
(bad)
xchg
int
push
pop
movs
in
sbb
adc
es
mov
movs
jno
inc
mov
mov
sub
(bad)
push
iret
lods
(bad)
retf
lods
xchg
adc
jns
movs
xor
hlt
cs
mov
jmp
xchg
add
mov
stos
add
mov
xor
dec
out
xor
fbld
popa
sub
push
pop
jb
cwde
or
jns
and
(bad)
cmp
int3
add
ds
cli
(bad)
xchg
movs
xor
sti
mov
repz
(bad)
push
cli
cmp
cmps
push
mov
jp
test
movs
and
mov
xchg
loope
mov
sbb
arpl
sub
dec
fist
ret
ret
mov
test
jge
ficomp
mov
in
or
data16
lahf
int
das
dec
cmp
into
dec
or
popf
or
dec
xchg
dec
adc
(bad)
pop
loope
out
imul
dec
push
push
xchg
sub
nop
bndstx
ds
(bad)
fist
inc
addr16
pop
push
xchg
xchg
xor
mov
mov
dec
rol
mov
or
add
pop
ret
aaa
mov
and
jle
mov
jle
lods
out
je
(bad)
xor
retf
push
mov
jnp
test
leave
add
imul
jbe
sbb
sahf
inc
dec
repz
(bad)
lahf
cmp
adc
jnp
xchg
mov
mov
shl
add
jno
xchg
icebp
repnz
and
mov
(bad)
fadd
fnsave
push
jb
push
mov
imul
retf
stc
test
fs
dec
arpl
movs
adc
out
adc
xor
cwde
and
pop
sbb
jmp
sbb
int3
shr
gs
out
dec
cld
inc
pop
cmps
std
lods
div
cmps
push
sbb
ins
add
fwait
mov
adc
ret
(bad)
scas
les
in
movs
mov
inc
xlat
dec
sar
pop
and
dec
fwait
mov
xor
mov
xor
lock
jmp
fidiv
movs
or
pop
cmp
or
mov
sub
outs
ins
scas
scas
push
pop
dec
ja
out
xor
rcl
lock
scas
aas
xor
sbb
hlt
lahf
xchg
jno
push
xchg
int3
int3
mov
mov
std
clc
sub
rcl
jmp
jg
mov
fst
or
in
mov
std
and
aas
pop
stc
bound
lds
loope
mov
push
jl
cmps
out
jp
xchg
adc
sub
je
les
adc
mov
repnz
imul
xchg
xchg
add
popa
mov
mov
inc
push
pop
cli
(bad)
outs
inc
jmp
sbb
sbb
mov
xlat
hlt
adc
mov
test
xchg
dec
mov
(bad)
shl
or
xchg
stos
popf
outs
xchg
ficom
or
mov
inc
pop
loope
mov
aaa
cmps
aad
fldcw
ds
dec
loopne
rcr
mov
retf
loope
and
jg
les
adc
cwde
or
shr
(bad)
cwde
popf
shl
sub
or
sbb
rcl
mov
sbb
imul
cmp
dec
fsubp
push
retf
add
inc
push
or
fs
mov
mov
test
fwait
sbb
or
mov
push
xchg
aad
push
retf
lahf
aas
loop
sahf
ja
stc
in
daa
or
jns
cli
arpl
pop
and
sahf
int
dec
shl
mov
cwde
jae
cmc
(bad)
(bad)
xchg
inc
pop
lds
pop
(bad)
jnp
fcom
jae
mov
sub
cmps
mov
inc
jmp
jb
cmp
das
cmp
pop
or
jb
cmp
jb
es
push
jo
or
mov
shl
cmps
cmp
call
iret
(bad)
mov
jbe
inc
push
pop
push
xchg
pop
sub
lock
cmp
cmc
pop
jns
sar
dec
icebp
in
test
inc
mov
mov
push
inc
xor
outs
aaa
xor
push
push
xor
loopne
rcr
mov
cmp
pop
pop
pop
stos
bound
cmp
pop
xchg
scas
fmul
adc
jle
out
fisttp
sbb
adc
rol
jecxz
mov
shr
mov
imul
mov
pop
repz
(bad)
repnz
movs
pop
stc
enter
adc
sbb
cmp
jle
in
into
sbb
jnp
hlt
jnp
inc
iret
mov
out
xchg
dec
imul
add
or
sti
add
mov
aam
dec
fs
mov
jo
repz
jae
bound
jmp
xchg
xchg
fisubr
add
push
aam
les
test
clc
cmp
rcr
outs
(bad)
(bad)
shl
add
push
ret
mov
adc
mov
call
ins
mov
xor
sub
mov
sbb
leave
adc
call
or
mov
xchg
push
jl
or
dec
mov
lods
ja
pusha
in
adc
(bad)
adc
(bad)
sub
mov
mov
push
adc
jl
test
in
sub
fxch
out
das
push
scas
je
xchg
push
arpl
cmps
cmp
jb
mov
enter
(bad)
xchg
int
leave
xchg
call
cld
xor
in
xchg
stc
das
mov
pop
test
outs
test
and
mov
fcmovu
add
(bad)
shl
xor
inc
mul
add
inc
jmp
cmp
and
ror
mov
scas
and
fidivr
cs
dec
fs
xchg
aad
popa
cwde
xchg
or
dec
sbb
pop
lahf
jg
xor
push
es
cmps
fwait
or
aaa
or
stos
shr
pop
sar
in
pop
outs
stos
sub
out
pop
out
popa
ins
arpl
pop
fild
jb
and
outs
jmp
lahf
sbb
retf
mov
fst
sbb
add
xor
sub
bound
sub
(bad)
(bad)
mov
push
xor
ja
push
mov
add
xchg
add
clc
ja
mov
xchg
nop
icebp
dec
gs
pop
mov
sbb
fnstcw
xchg
cmc
xor
arpl
retf
push
cmp
loopne
fdiv
test
or
and
mov
mov
in
push
loopne
jp
and
mov
ret
out
jo
idiv
xchg
pop
and
mov
popa
bound
mov
push
nop
mov
pusha
loopne
popf
call
sbb
inc
mov
mov
jo
fs
dec
shr
fidiv
jnp
xor
pusha
pop
mov
cmps
xlat
inc
add
fimul
push
inc
lds
jg
xlat
mov
mov
ficomp
jl
push
jp
test
mov
mul
(bad)
jg
jle
inc
sbb
cmp
in
popa
adc
test
dec
cwde
jno
mov
xchg
sbb
(bad)
sbb
inc
add
jl
sar
es
es
cdq
stc
sub
cmp
jae
inc
(bad)
pop
or
adc
sar
iret
arpl
mov
test
(bad)
(bad)
fbstp
add
call
test
shl
(bad)
mov
pop
xchg
xlat
mov
rcl
scas
je
push
jg
mov
(bad)
es
bound
push
jmp
pop
xchg
les
lds
xchg
(bad)
rcl
jg
outs
push
add
js
dec
test
push
call
push
sti
mov
shl
(bad)
push
scas
fucomi
fnstenv
jbe
mov
and
das
mov
jecxz
push
inc
inc
add
jo
mov
cmc
jecxz
mov
cmps
call
pop
aam
add
not
retf
jb
pop
(bad)
rcl
aam
repnz
sbb
bound
push
sbb
out
xor
stc
xor
fdiv
dec
push
pop
std
ds
xchg
(bad)
out
test
daa
sbb
lock
push
imul
mov
repz
loope
cmp
jb
sub
jecxz
cmp
in
sbb
sar
(bad)
aaa
ins
xlat
rol
sub
lahf
cdq
or
sahf
int3
sahf
sub
ficomp
hlt
aaa
mov
jmp
xor
popa
(bad)
test
dec
cmp
data16
stc
hlt
mov
dec
pop
xor
pop
jg
cwde
fdivr
and
jo
cmp
pop
xor
cli
and
inc
lahf
shr
scas
or
test
int3
adc
jmp
aas
sbb
pushf
call
test
sub
ficomp
ret
xchg
pop
sbb
test
sbb
pop
xor
shl
ins
jb
dec
out
push
call
lods
cmp
cmp
fstp
mov
ror
mov
xor
and
cdq
repnz
sub
lods
jge
(bad)
and
adc
test
int
cdq
pop
(bad)
lods
push
stos
jb
and
out
cmp
cs
push
mov
retf
popf
ja
enter
or
cmps
loopne
sbb
dec
xchg
fld
cld
and
mov
mov
mov
mov
xchg
mov
cli
mov
lods
cmp
test
test
es
push
cs
gs
mov
fdiv
mov
inc
gs
push
mov
clc
dec
gs
jmp
outs
mov
and
cwde
retf
rcl
mov
push
add
jecxz
dec
xchg
xchg
jo
inc
jp
push
leave
jae
lock
sbb
cmp
sbb
or
pushf
stos
mov
cmp
xlat
test
cld
mov
inc
fs
dec
mov
lahf
ror
ret
fist
push
repnz
mov
mov
adc
and
rcr
je
push
dec
mov
cdq
xor
(bad)
mov
gs
push
push
ds
mov
pusha
inc
add
or
push
push
mov
je
ror
gs
stc
out
sbb
pop
pop
loope
test
add
in
adc
repnz
(bad)
mov
bound
fs
(bad)
or
loopne
ss
retf
mov
rcr
or
cmps
dec
adc
inc
jnp
fst
dec
jge
mov
imul
into
adc
popf
in
push
mov
add
or
cmp
push
sub
jnp
add
mov
bound
test
push
mov
and
xchg
movs
jecxz
mov
add
or
hlt
call
call
sbb
movs
mov
outs
outs
icebp
cmp
xchg
jg
or
and
lods
sub
adc
xchg
lock
push
je
fwait
addr16
and
int3
jmp
mov
jo
ins
xchg
dec
sahf
aad
mov
scas
(bad)
shl
mov
lea
pop
aaa
pop
frstpm(287
sbb
gs
bound
jo
mov
push
icebp
and
enter
sar
aas
cmp
stc
test
stos
dec
ja
mov
jle
je
xlat
in
pop
(bad)
fmul
lock
mov
(bad)
push
addr16
rcl
fist
jae
jno
sub
mov
jge
sub
pop
or
push
adc
cld
gs
jle
and
or
shl
pop
mov
sub
aas
add
pop
cmp
cs
pop
sub
dec
xchg
lea
aaa
mov
mov
dec
cmp
dec
int
call
jge
xchg
js
test
mov
dec
neg
cmc
add
xlat
sbb
loopne
cmp
and
cmp
in
call
inc
ret
fstp
cmp
cmp
and
xchg
cmp
loope
xchg
sbb
in
add
retf
and
jmp
and
dec
jmp
bswap
fst
je
pop
jmp
icebp
xchg
pop
je
ror
mov
fst
pusha
daa
mov
dec
inc
aad
movs
sub
not
add
hlt
pusha
(bad)
mov
push
shr
cs
mov
add
push
repz
loopne
xor
xchg
cwde
sbb
mov
pslld
int
sbb
gs
xchg
mov
idiv
and
adc
into
popf
add
enter
jmp
in
lds
(bad)
arpl
cmp
sub
leave
jmp
not
cmp
adc
test
sub
nop
les
(bad)
jb
stos
out
sar
inc
jge
(bad)
retf
sub
jno
ret
jle
ss
lea
cli
add
fisttp
sar
jb
imul
xor
sbb
mov
rcr
and
sti
sub
mov
call
add
pop
popf
and
cld
jne
and
jae
repz
imul
add
cmp
inc
xor
icebp
cmp
(bad)
jg
pop
or
bound
sub
pop
xchg
test
retf
and
push
or
cmp
sti
and
imul
loop
push
imul
dec
test
ja
inc
jno
fbld
jne
hlt
xchg
mov
leave
pop
in
out
ja
sbb
xor
inc
pushf
scas
enter
cmp
stc
aas
inc
mov
xor
mov
popf
jns
retf
xchg
and
das
push
xor
out
xchg
pop
ins
ds
psllq
jmp
div
cwde
xchg
repnz
xchg
xor
fwait
sbb
push
mov
std
adc
cld
adc
jecxz
pop
or
jle
dec
push
cld
scas
dec
retf
cmc
movs
ror
mov
fld
aam
push
cmp
sub
add
and
test
jbe
add
outs
(bad)
jp
jns
mov
xchg
pop
test
(bad)
mov
inc
test
or
xchg
scas
not
(bad)
sub
aad
out
jb
pop
hlt
stc
ja
mov
in
pop
push
out
sub
scas
cmp
mov
fwait
popf
mov
je
in
and
scas
imul
(bad)
xlat
leave
call
pop
scas
ret
(bad)
add
clc
loope
sahf
nop
scas
sbb
bound
xchg
or
pop
dec
shl
sub
inc
retf
lds
mov
cmp
cmp
outs
push
movs
fbld
nop
mov
ins
cs
loop
loopne
mov
retf
inc
arpl
std
loop
stc
nop
and
xchg
(bad)
test
nop
mov
inc
sbb
sbb
jo
add
dec
adc
repz
and
aaa
pop
sbb
cdq
aam
data16
repz
and
mov
xor
jl
call
mov
mov
arpl
sub
or
mov
cli
ss
pop
xchg
(bad)
cmps
inc
inc
push
inc
shr
enter
mov
rcl
push
push
jge
xor
je
or
retf
lock
loop
mov
std
or
jo
add
cmc
data16
push
out
ds
in
or
test
(bad)
out
dec
and
test
loope
stos
inc
movs
cmp
cs
(bad)
jbe
mov
inc
fstp
leave
(bad)
ds
push
pop
xor
imul
mov
jb
mov
mov
loope
cmps
xor
pop
ret
and
cli
rcr
push
or
std
xor
in
mov
dec
xor
stc
mov
int3
pop
or
aaa
pushf
fst
mov
call
mov
loop
lods
or
jge
aaa
mov
push
int
dec
mov
xchg
aam
jne
pop
mov
gs
shr
or
push
lods
sbb
mov
(bad)
cmp
and
out
push
pusha
xor
add
das
cmps
test
cli
movs
iret
rcl
mov
retf
mov
rcr
push
jae
out
xchg
mov
sbb
pop
(bad)
call
mov
jl
data16
rol
retf
std
dec
retf
(bad)
addr16
mov
jmp
xchg
adc
pop
ins
pop
repnz
or
out
ss
int3
jmp
fnstenv
popf
idiv
repnz
cmp
ja
lds
inc
fisub
add
xor
popa
fwait
pop
pusha
test
and
test
add
popf
repz
xchg
sar
or
fdiv
dec
add
add
pop
mov
xchg
dec
sub
or
mov
or
add
mov
rol
or
imul
(bad)
jns
sub
ror
mov
sub
push
ror
aam
ficomp
test
cmp
js
mov
xlat
sbb
add
test
loop
sub
in
jle
fisubr
int3
inc
pop
mov
scas
hlt
jp
loopne
jnp
out
pop
inc
aad
call
shr
sub
fs
gs
mov
adc
and
lods
dec
mov
out
jne
push
xor
jmp
or
aad
int
lods
daa
mov
pop
pushf
push
aad
add
or
(bad)
ins
xchg
ror
sbb
adc
adc
test
std
jmp
ror
lock
sub
push
dec
jo
data16
shl
mov
mov
xchg
rol
add
ins
xor
stc
pop
imul
or
xchg
xchg
fisttp
scas
outs
pop
add
sbb
shl
cs
shl
cwde
xor
sub
and
jmp
sub
jae
xchg
lock
and
sub
test
outs
jno
add
inc
dec
pop
jg
imul
enter
sub
mov
or
fs
inc
xor
pop
stos
ss
mov
movs
lock
or
dec
pop
mov
lea
xchg
sar
fnstcw
je
fisub
nop
mov
movs
adc
imul
inc
fdiv
test
adc
bound
js
ins
movs
test
xchg
scas
xor
stos
sub
xor
inc
test
in
jmp
call
inc
dec
mov
iret
xchg
adc
std
repz
out
adc
and
cmp
or
mov
out
or
inc
movs
cs
dec
and
sub
ret
call
fcom
in
dec
je
add
sub
and
in
push
outs
mov
outs
inc
push
test
(bad)
push
xchg
pusha
mov
mov
inc
stos
pop
push
push
mov
pusha
in
mov
push
ds
dec
mov
fsubr
js
retf
sub
pop
pop
cmp
cmp
jb
add
bound
test
mov
daa
or
fsub
mov
out
(bad)
xchg
adc
mov
cli
shl
clc
add
pop
xor
test
stos
ror
push
push
mov
int3
push
les
cmp
add
push
jb
pop
je
xor
out
sti
lods
call
iret
aas
mov
adc
fsub
adc
mov
sub
test
xchg
ja
adc
cmps
mov
pop
mov
or
sub
mov
adc
retf
jo
(bad)
sub
rep
(bad)
pop
in
mov
xlat
es
or
jns
jle
or
push
repz
mov
mov
mov
fsubr
dec
adc
movs
pop
xor
and
or
pop
xchg
sbb
or
xor
sbb
jge
ss
xchg
jmp
into
(bad)
rcl
mov
mov
push
mov
imul
bound
add
aam
inc
movs
cmp
loop
out
ds
imul
xor
in
pop
sar
imul
cmp
std
and
pop
mov
out
mov
adc
cmp
or
or
test
in
mov
popa
mov
and
dec
mov
jnp
sub
icebp
dec
mov
(bad)
push
stos
xchg
aas
mov
mov
stc
lahf
cmp
jl
retf
inc
pop
mov
sbb
(bad)
cmps
push
fwait
bound
sub
mov
out
ret
dec
push
or
mov
out
in
and
sub
cmps
inc
mov
pop
mov
mul
mov
sub
xor
icebp
(bad)
push
stos
xor
in
stos
cmp
adc
or
lods
int3
cmp
test
in
cs
push
pop
adc
mov
fnstenv
mov
stos
ja
(bad)
ficom
out
inc
retf
dec
mov
pop
mov
push
sub
pop
loopne
push
add
push
pop
jp
not
sbb
sub
sbb
mov
addr16
mov
xchg
inc
lahf
in
fld
ins
push
shr
arpl
cmp
sub
sti
into
mov
in
adc
jo
ret
enter
dec
arpl
(bad)
xor
add
out
sti
call
xchg
mov
xor
(bad)
rcr
lods
add
cmp
mul
add
cmp
cs
test
cwde
loopne
call
lods
sub
addr16
hlt
jae
retf
ret
jb
cmp
pop
adc
push
xor
cdq
jecxz
sbb
xlat
loope
adc
fucomp
ror
outs
fcom
(bad)
fmul
aas
aaa
lds
(bad)
xlat
mov
addr16
sbb
out
push
mov
cmp
jle
fs
jp
adc
jo
sbb
retf
and
push
pop
into
test
sub
mov
sub
loop
xor
cwde
inc
bound
sbb
adc
cdq
hlt
int3
imul
(bad)
sbb
repz
pushf
call
sub
fbstp
sahf
(bad)
lds
sub
add
push
ret
shl
or
fsubrp
pop
dec
and
or
ret
and
push
cmp
std
les
cmp
cmp
mov
sub
jge
jno
add
repz
bound
or
jl
shr
ins
jp
aam
popf
inc
mov
adc
gs
inc
imul
jbe
jnp
mov
mov
mov
cmps
fistp
and
js
pop
lahf
mov
mov
rol
mov
rol
sar
movs
mov
inc
loope
repnz
jne
repz
dec
fs
ins
xchg
jb
cmps
cld
in
add
(bad)
fistp
pop
add
and
mov
or
stos
add
(bad)
call
fcmovb
cwde
pushf
adc
cmp
(bad)
data16
call
ret
in
out
mov
xchg
mov
movs
jmp
dec
test
mov
repz
fisttp
int
adc
lock
(bad)
adc
lea
mov
ins
imul
sub
add
aam
mov
cmp
xor
imul
adc
mov
inc
xor
leave
in
cld
dec
inc
retf
ret
cmps
scas
sub
mov
into
out
cmp
div
test
aas
jns
cmp
stc
inc
lock
hlt
inc
fwait
jbe
sbb
and
scas
and
inc
daa
jecxz
xor
sbb
dec
mov
arpl
div
add
sub
fcmovbe
ror
daa
out
jne
ror
jp
inc
or
pop
clc
lods
mov
sub
sub
sahf
dec
in
movs
in
cmc
pop
pop
loopne
xchg
jl
sub
jae
and
popa
sar
add
pop
leave
das
jecxz
loop
inc
in
ret
pushf
adc
lods
addr16
mov
ror
adc
adc
xor
neg
jae
sbb
imul
out
arpl
cmp
(bad)
push
jle
or
xchg
jmp
add
inc
push
stos
int
fistp
pop
ret
jge
outs
pusha
loope
cmps
or
pop
idiv
push
inc
and
xor
(bad)
xor
jmp
mov
jae
ss
pop
lods
dec
out
(bad)
stc
stc
mov
pusha
mov
imul
sub
dec
in
out
pop
xchg
test
in
sub
xor
jecxz
push
cmps
adc
inc
dec
nop
adc
sti
mov
(bad)
in
lods
mov
jl
pop
mov
cmc
scas
cmp
test
xchg
sbb
dec
dec
adc
pop
and
dec
xchg
inc
in
push
idiv
call
ret
mov
arpl
imul
int3
imul
xchg
mov
xor
ins
inc
ss
pusha
or
mov
js
lods
jo
out
xor
jp
dec
push
ds
int
mov
cmp
pop
xchg
retf
pop
stos
scas
das
and
fld
add
stc
pop
dec
pop
test
pop
mov
outs
or
cli
sub
dec
test
or
and
lods
pop
mov
xor
outs
movs
cs
inc
in
bound
adc
stos
popf
add
aad
xor
adc
scas
xchg
fdivr
mov
aam
adc
sub
fcmovnbe
inc
loop
dec
mov
inc
(bad)
enter
fnstsw
sub
sbb
and
rcr
(bad)
in
rcr
inc
and
fwait
mov
push
out
icebp
cdq
inc
xor
ret
mov
mov
xor
ret
pop
nop
and
push
mov
dec
jo
and
stos
push
mov
int3
movs
loope
cmp
pop
jl
outs
retf
aad
xchg
adc
cmps
adc
mov
or
loope
jb
cmp
call
or
(bad)
test
popa
inc
das
daa
mov
cmp
cmp
repnz
jb
sub
sti
je
ficom
push
stos
push
fidivr
push
xchg
mov
or
pop
into
xor
cmps
dec
outs
sbb
mov
xchg
movs
mov
mov
dec
cmps
ja
sbb
xor
shl
adc
sub
popf
pusha
repnz
mov
mov
pop
js
sbb
push
jecxz
lock
xchg
shl
push
adc
sbb
push
call
shl
scas
mov
mov
mov
(bad)
mov
(bad)
xchg
jne
sub
test
xchg
daa
xor
sti
bound
inc
add
je
or
in
imul
sahf
loopne
into
add
sti
xor
xchg
push
fldenv
pusha
jne
and
pop
loope
pushf
mov
xor
jg
jae
dec
pop
fisubr
sbb
xchg
jle
aad
cmps
rcl
mov
rcr
mov
xchg
pop
cld
out
imul
lods
sub
jae
in
mov
cmp
out
cmp
push
sub
outs
and
adc
popa
push
pop
pop
push
jge
mov
mov
mov
jmp
bound
les
call
adc
outs
int3
add
jnp
pushf
push
imul
sub
call
(bad)
rcl
aas
mov
lea
in
mov
and
dec
cmps
sub
or
mov
mov
fucomp
movs
and
les
mov
mov
shl
xor
mov
pop
leave
out
jle
mov
imul
dec
mov
adc
inc
aas
xchg
ins
sub
cs
ret
js
mov
scas
cld
icebp
repz
imul
adc
mov
sbb
sbb
and
push
test
dec
xor
sbb
cmps
test
push
mov
fnstenv
(bad)
popf
xor
(bad)
out
sub
adc
aas
dec
push
sti
and
jb
pop
mov
adc
(bad)
push
mov
mov
cmp
xchg
add
dec
mov
stc
and
test
ins
jp
aad
stos
ja
movs
push
inc
pop
mov
xor
mul
add
add
mov
sub
adc
mov
ins
inc
push
repz
imul
mov
test
stos
adc
sahf
sub
pop
or
cmp
fcom
mov
cli
push
sahf
test
mov
pop
dec
dec
dec
pusha
sbb
es
in
or
pop
out
inc
sub
inc
xchg
mov
push
xchg
std
mov
repz
loope
or
into
push
popf
pop
test
pop
add
xor
mov
popa
in
mov
add
jp
sti
mov
retf
dec
dec
repnz
or
and
pop
test
out
out
mov
call
or
lahf
mov
data16
inc
in
ds
pop
pop
(bad)
fwait
mov
ins
mov
cli
addr16
sub
xor
pop
sahf
fstp
dec
ret
jns
fimul
icebp
push
cmp
lea
sbb
xor
iret
push
(bad)
aam
(bad)
jg
ss
int
pop
int3
and
pop
sar
jb
cld
(bad)
pop
cmc
sbb
addr16
outs
(bad)
jge
mov
sbb
mov
and
mov
(bad)
in
movs
std
push
add
lods
iret
add
pop
clc
jge
add
jg
sub
retf
xor
push
data16
push
push
pop
push
aaa
and
jp
pop
(bad)
fs
adc
les
rol
push
clc
(bad)
xchg
push
dec
push
or
jmp
pop
and
dec
ins
add
adc
cli
mov
adc
dec
xchg
lods
sbb
popf
in
out
add
or
fwait
xchg
ja
or
sub
movs
xor
or
cmc
mov
inc
inc
clc
mov
mov
xchg
push
pop
sub
shl
sbb
in
push
rcl
int3
ja
mov
je
scas
or
mov
dec
fcom
fwait
mul
sbb
scas
adc
xor
push
jmp
das
xchg
or
lods
xchg
mov
test
imul
xchg
add
jge
mov
scas
cdq
imul
mov
stos
push
and
mov
xchg
jmp
mov
(bad)
hlt
dec
or
xor
fdivr
dec
xor
into
sub
inc
ror
and
fs
ds
ror
or
aas
or
pop
jg
add
repz
scas
xor
mov
jns
das
aaa
and
mov
fchs
iret
xor
ja
push
dec
pop
out
pop
pop
add
adc
mov
xor
inc
lods
outs
jle
lods
lods
in
push
dec
push
mov
or
jg
in
xchg
push
add
aaa
lahf
add
icebp
mov
mov
jno
je
sbb
jb
jmp
xor
cmp
arpl
xchg
xchg
xchg
ja
cwde
lea
test
popf
pop
mov
xchg
aad
leave
inc
push
cmp
test
retf
movlps
adc
movs
fiadd
add
xor
in
mov
loop
mov
pop
mov
xor
add
pop
nop
sbb
pop
sbb
addr16
inc
in
sti
out
jns
xchg
in
div
out
fadd
mov
jo
xor
adc
cmp
cmp
test
pop
xchg
je
sbb
retf
jo
lahf
aaa
dec
or
dec
lea
push
add
push
cmps
(bad)
mov
outs
mov
push
lea
mov
adc
daa
pop
rcl
inc
repz
add
sahf
outs
js
icebp
mov
popf
or
jb
add
mov
push
mov
add
mov
cwde
or
lods
inc
in
pop
in
mov
mul
mov
rcl
mov
and
add
daa
loopne
sbb
(bad)
jae
xchg
jmp
pusha
jl
pop
push
ror
pushf
mov
sar
aas
gs
gs
lods
cli
out
add
lods
fimul
push
scas
jae
push
xchg
xchg
leave
stc
xchg
(bad)
scas
mov
mov
sub
ins
fwait
jae
loopne
jg
cwde
(bad)
div
push
push
fcomi
int
xor
pop
mov
pop
shl
push
lods
and
test
ret
icebp
adc
dec
rcl
repnz
sahf
cmp
loope
mov
xchg
arpl
imul
nop
lds
mov
fstp
xchg
call
iret
js
mov
pop
movzx
dec
cmps
mov
les
lahf
dec
sbb
and
sbb
int
mov
mov
mov
xchg
gs
xor
aaa
mov
add
test
in
out
pop
xlat
dec
jl
(bad)
std
movs
fscale
movs
jg
mov
adc
neg
rcl
cmp
add
xor
and
cmps
sar
jno
cmps
pop
hlt
leave
sbb
out
ret
push
inc
ins
sti
cwde
sub
or
pop
or
mov
imul
das
pop
loope
(bad)
(bad)
stc
lahf
xchg
(bad)
or
jae
pop
and
stos
loopne
scas
ins
push
sbb
dec
mov
inc
call
enter
push
test
and
push
mov
xchg
dec
pop
push
push
cmc
daa
retf
cld
mov
or
xor
dec
xchg
mov
pop
ss
sbb
add
xor
mov
iret
pushf
int
mov
js
jmp
ret
das
inc
ja
xor
mov
daa
jmp
or
into
adc
lahf
ret
data16
cmp
jge
retf
mov
mov
and
or
daa
lods
fisub
test
test
sub
xchg
lock
and
and
inc
xchg
test
clc
xchg
call
fisttp
popf
sub
xchg
sbb
inc
add
call
ret
lds
data16
ja
pop
xchg
xchg
mov
test
xor
test
cmp
lods
xor
cmps
and
adc
dec
xchg
mov
mov
leave
pop
adc
cs
fimul
test
and
pop
or
repz
retf
in
nop
movs
fwait
mov
sub
or
sub
out
sahf
ins
je
push
imul
pop
mov
and
push
xchg
and
fs
aas
xchg
xor
add
icebp
cmp
in
inc
mov
xchg
lods
jp
push
push
add
shr
dec
jle
cdq
sti
cli
and
mov
lahf
xchg
sti
or
dec
out
mov
mov
mov
jo
shl
or
imul
cwde
xchg
xor
jg
xchg
xor
push
loope
std
call
stos
sub
and
jbe
ins
arpl
add
adc
mov
xchg
rol
out
pusha
dec
or
pusha
js
popa
sahf
or
and
lahf
sub
mov
cwde
xchg
xor
outs
(bad)
sub
mov
jnp
aam
fld
in
stos
and
(bad)
ret
and
push
inc
ds
scas
pop
data16
or
inc
pop
mov
mov
pop
(bad)
test
ror
push
into
fidivr
stc
pop
movs
cdq
pop
mov
out
jle
lahf
jge
int3
cs
in
pop
add
not
mov
int
inc
imul
fcmovbe
add
add
call
sahf
ss
ret
loop
mov
lods
icebp
push
push
iret
push
mov
test
out
sub
add
pop
cmp
sahf
xchg
(bad)
test
add
add
cwde
pusha
xchg
and
hlt
and
pop
sbb
mov
push
inc
jle
fwait
arpl
pop
cli
arpl
retf
add
pusha
push
mov
test
mov
xchg
shl
dec
sub
ret
int
xchg
test
int
mov
in
mov
cmp
cmps
push
std
jge
cld
push
xchg
cdq
push
pop
mov
lods
mov
iret
imul
es
pop
ja
sub
loop
dec
aaa
(bad)
div
or
ret
xchg
lds
daa
dec
icebp
cdq
jl
loope
mov
pusha
dec
popf
dec
dec
test
ficomp
mov
push
movs
pop
daa
je
cmp
dec
out
sub
mov
sbb
jl
fisubr
cdq
jae
cli
fbld
repz
xchg
stos
cmps
pushf
and
dec
scas
ins
inc
dec
jecxz
dec
ret
mov
mov
jl
in
pop
push
movs
(bad)
mov
inc
scas
add
(bad)
jmp
das
cmp
daa
lea
mov
sbb
pop
pop
mov
cmp
dec
mov
cmps
push
shl
dec
jnp
cmp
add
pop
cdq
ins
outs
adc
sbb
ret
retf
call
test
xchg
push
test
sub
push
mov
stc
cmp
fistp
adc
xor
inc
push
jmp
addr16
inc
pop
adc
neg
xchg
cmp
or
jp
in
or
mov
add
mov
jecxz
in
movs
addr16
ret
jmp
and
mov
enter
fidivr
pop
aam
mov
dec
mov
rol
pop
je
test
jo
out
jmp
xchg
xor
sbb
loopne
(bad)
fisubr
xor
or
clc
std
jg
dec
xchg
or
jecxz
lds
out
mov
lock
push
retf
add
mov
xchg
in
into
mov
popf
data16
cmps
jmp
out
fdecstp
mov
mov
shr
mov
adc
es
rcl
xor
mov
(bad)
push
shl
movs
leave
bound
repz
add
fs
sbb
xlat
or
inc
or
inc
sbb
jne
sar
aas
shr
repz
mov
pop
jle
outs
int
or
fldenv
fst
sub
fwait
int
lahf
xchg
jge
dec
je
repnz
mov
dec
outs
sbb
mov
lea
sbb
inc
mov
rol
andps
mov
mov
xor
les
je
int3
xor
mov
or
jnp
jecxz
inc
enter
xchg
cld
jns
call
enter
adc
test
jbe
xor
sar
shl
or
sbb
adc
std
xchg
cmp
xchg
test
fwait
loop
push
mov
(bad)
and
repz
mov
into
add
call
inc
inc
mov
jecxz
into
mov
test
push
loope
mov
xchg
adc
inc
mov
dec
ror
loope
(bad)
xor
scas
jae
jmp
jnp
daa
jle
sbb
push
push
jmp
sti
das
cld
xchg
jg
test
sub
in
out
xchg
mov
ins
dec
sbb
jbe
mov
lds
mov
xlat
ficom
dec
pop
test
xlat
pop
jmp
sbb
cmp
sub
in
gs
das
cwde
mov
cmp
test
adc
aas
mov
jae
jp
(bad)
outs
mov
cmps
ss
out
das
es
fcom
ins
mov
pop
stos
(bad)
mov
mov
dec
shl
fdiv
aad
ret
rcr
sbb
out
imul
cmps
dec
sub
pushf
leave
adc
aad
inc
adc
mov
ret
push
test
xchg
sub
jbe
repz
dec
dec
idiv
pusha
push
leave
push
and
std
repz
sahf
jmp
daa
loope
repz
cwde
jl
jmp
pop
pop
lods
fwait
xchg
jle
in
fcom
leave
mov
mov
add
mov
mov
or
xchg
lods
mov
in
lock
je
mov
sar
mov
jecxz
add
stos
or
sar
sub
push
lahf
and
(bad)
pusha
mov
adc
pop
jns
mov
jb
or
adc
mov
hlt
arpl
mov
xchg
rcl
mov
dec
jp
dec
mov
jno
fstp
outs
add
mov
cmp
or
xlat
jge
xchg
lods
loop
jnp
les
pop
sub
jl
mov
pusha
pop
sahf
push
outs
dec
jo
sbb
sbb
ds
mov
xchg
scas
jo
pop
sub
jg
pop
loope
pop
pop
sub
xor
pop
(bad)
dec
xor
arpl
cmps
outs
into
cld
xor
repz
inc
adc
mov
test
mov
jns
cmps
add
clc
add
cmps
je
stos
cdq
mov
mov
push
jmp
inc
(bad)
cld
mov
push
data16
loopne
(bad)
popa
and
cmp
mov
cmp
adc
sbb
test
xchg
xchg
dec
faddp
rcr
imul
in
mov
leave
ror
dec
popf
dec
retf
xchg
and
outs
add
sar
loope
out
xchg
stos
(bad)
jg
jmp
mov
xor
stc
jo
dec
mov
test
xor
std
add
sbb
test
stc
adc
ror
loopne
fdiv
(bad)
rcl
jl
mov
in
jo
fisub
mov
jb
idiv
mov
jg
sub
cwde
or
fst
imul
push
popf
push
in
sub
idiv
out
mov
retf
or
pop
dec
dec
lods
cld
loopne
xlat
addr16
pop
cmp
fisttp
jmp
mul
outs
lods
call
push
jle
mov
xor
sub
das
(bad)
mov
inc
inc
gs
cmp
push
sbb
mov
lods
xor
mov
repnz
div
adc
dec
retf
(bad)
retf
pop
adc
xchg
pop
imul
add
adc
cmp
pop
pop
jns
jle
sub
add
out
sub
mov
fild
mov
pop
add
out
in
cwde
xchg
aad
sar
mov
aaa
mov
imul
and
je
cmps
xchg
enter
fstp
pop
ror
cmp
out
imul
pop
dec
cld
ret
clc
pop
mov
cli
inc
or
or
or
mov
repz
push
pop
mov
jge
add
cmc
cwde
neg
cld
mov
repz
cld
mov
mov
pop
stos
stos
ds
test
inc
pop
repnz
push
int
dec
dec
fisubr
jmp
out
rcl
into
mov
mov
dec
push
das
xchg
mov
leave
or
dec
shl
xlat
inc
fst
aaa
aad
(bad)
dec
push
cdq
fisttp
jg
loopne
mov
or
jmp
aam
popf
jnp
imul
dec
test
shl
cmps
shr
and
ins
loop
loopne
pop
leave
les
mov
inc
sbb
pop
jl
xor
inc
aas
jmp
loopne
mov
pop
(bad)
lods
jecxz
push
dec
ds
xor
out
or
ds
or
fs
lds
xchg
jp
push
add
cmp
jle
sub
mov
mov
scas
inc
addr16
adc
(bad)
rcr
(bad)
stc
retf
inc
jo
out
push
xor
jno
pop
int3
inc
(bad)
fs
jge
arpl
xchg
pop
mov
outs
into
and
(bad)
ds
xchg
jbe
xor
xlat
ja
int
mov
aam
add
outs
shl
inc
and
outs
lods
in
call
and
and
sbb
sub
mov
xchg
scas
mov
ja
dec
daa
pop
mov
xor
mov
mov
xchg
test
pop
or
inc
jg
sbb
out
and
mov
icebp
int3
mov
ret
pop
mov
std
int
dec
adc
mov
add
push
inc
cmp
cmp
pop
sbb
cmp
int3
adc
test
adc
mov
(bad)
div
sub
adc
lods
add
sub
jmp
xor
xor
int
dec
fyl2xp1
sub
stos
fldenv
enter
ficomp
jne
and
pop
mov
adc
push
lea
or
cmp
mov
or
add
in
or
cli
retf
enter
test
or
ret
adc
adc
xor
and
mov
jg
mov
mov
cmp
rcl
cs
gs
fcmove
mov
(bad)
repnz
adc
add
push
push
out
add
scas
xor
(bad)
ror
cmc
sub
iret
and
dec
out
sahf
clc
test
shl
fwait
inc
jmp
jge
adc
aad
std
sub
scas
fdiv
sbb
(bad)
ds
je
adc
inc
cld
mov
mov
xor
sub
popa
cli
iret
xor
aam
cwde
out
int
jnp
(bad)
popf
call
sub
shr
xor
fidiv
mov
inc
jnp
inc
in
pop
lock
scas
pop
lahf
fs
push
push
fsub
ret
cmp
cmp
outs
push
mov
sti
out
int
stos
cdq
jae
xchg
fsubrp
mov
pop
loopne
inc
cdq
adc
mov
push
and
mov
and
movs
repnz
fistp
lods
cmp
mov
cmc
push
mov
jecxz
pop
mov
add
adc
dec
or
pushf
call
and
(bad)
out
jbe
xchg
sbb
or
add
ret
mov
fbstp
outs
retf
pop
inc
cmp
ds
rol
push
sbb
and
sbb
mov
or
loop
ror
inc
aam
cmp
in
nop
mov
dec
jmp
and
push
pop
(bad)
mov
and
(bad)
xchg
lds
ins
sbb
jl
cs
outs
pop
pop
cmp
push
test
clc
jns
cmp
mov
and
shl
mov
jmp
in
cmps
lahf
jmp
push
ret
call
jno
push
mov
rcr
jmp
mov
mov
out
jns
and
popf
je
mov
mov
(bad)
movs
test
and
and
es
or
xchg
cs
iret
mov
out
cmc
dec
or
xchg
out
(bad)
xor
icebp
mov
call
dec
sbb
popf
jg
out
iret
xlat
int
xchg
fwait
dec
sbb
sbb
ror
or
push
sbb
(bad)
mov
out
sub
xchg
xchg
out
or
xor
and
mov
xor
mov
xor
mov
jecxz
ins
inc
bound
mov
and
das
das
xchg
pop
jns
arpl
jno
rol
fucomip
mov
(bad)
std
cmp
push
xor
jle
outs
fs
jle
aaa
xor
bound
and
fmul
push
sub
out
movs
sbb
or
fmul
inc
push
mov
xchg
pop
pop
rcl
and
fistp
das
cmp
push
push
loop
into
es
and
sub
iret
mov
adc
(bad)
rol
and
cwde
adc
mov
push
idiv
pop
dec
ds
dec
(bad)
push
fs
fdivr
loopne
in
adc
sub
mov
mov
mov
in
pop
jno
or
add
dec
fmulp
(bad)
mov
adc
lahf
ss
sbb
das
push
adc
ss
xor
mov
test
hlt
in
mov
xor
push
fisub
mov
sub
or
cmp
and
sub
or
jb
ja
pusha
std
popa
jp
jmp
push
es
into
fisubr
pop
inc
adc
pop
mov
xor
mov
mov
test
and
sub
enter
push
jo
loopne
daa
xchg
nop
xchg
xchg
daa
or
loope
fild
mov
rcl
daa
out
cmp
(bad)
adc
push
outs
sbb
scas
iret
mov
or
aad
cmps
popa
cmp
inc
shr
sbb
or
and
sar
xor
inc
fsub
inc
mov
mov
dec
cld
(bad)
gs
xchg
jno
loopne
sbb
lods
xchg
inc
xchg
sar
and
gs
pop
aaa
neg
fnstcw
shr
int
push
mov
pop
(bad)
in
stos
push
push
scas
push
pop
das
(bad)
pop
std
push
mov
mov
jo
js
fwait
cmp
ds
and
mov
scas
mov
shl
dec
js
and
xor
stos
aaa
stos
push
inc
ja
es
inc
nop
lods
pop
enter
push
mov
mov
loop
(bad)
sub
addr16
push
jns
and
mov
mov
or
push
jo
xchg
dec
mov
shr
ret
outs
pop
inc
enter
jg
loope
rcl
mov
inc
sbb
mov
(bad)
daa
pushf
(bad)
cmp
push
or
je
nop
fcmovbe
push
add
dec
lods
jge
shl
xlat
neg
xchg
cwde
inc
inc
aad
or
aad
cwde
cs
cld
mov
mov
xchg
or
jle
ret
dec
xchg
sti
sbb
inc
dec
aad
pusha
out
movs
push
or
fs
add
xchg
cmp
loop
nop
(bad)
scas
add
sbb
xchg
and
sbb
inc
ja
outs
daa
and
je
clc
pop
aas
adc
(bad)
jno
jae
xor
mov
stc
xor
sub
cmp
jmp
pop
push
jle
mov
mov
pop
mov
outs
xor
out
xchg
stc
mov
adc
mov
(bad)
scas
fmulp
pushf
repz
sbb
mov
leave
jl
and
xor
leave
mov
jae
sub
dec
jns
inc
int3
lods
popf
xchg
test
lahf
adc
adc
stos
push
test
add
mov
cmp
jbe
fnstsw
scas
xchg
fisubr
push
into
in
and
lahf
jge
pop
(bad)
or
into
pop
(bad)
adc
rcl
sub
arpl
jne
sbb
test
test
and
ret
(bad)
mov
mov
vmwrite
mov
retf
loop
mov
ficom
jno
sahf
ins
test
push
int
cld
mov
sub
adc
mov
mov
mov
popa
gs
inc
add
or
inc
adc
and
push
test
jb
div
call
xchg
sbb
sub
pop
call
pop
mov
dec
or
lock
loopne
xor
xor
jns
call
cmp
sbb
(bad)
in
(bad)
mov
les
and
xchg
sahf
cmp
push
xor
dec
mov
jne
ins
inc
es
pmaxsw
(bad)
dec
pminub
test
iret
ins
dec
fwait
mov
and
out
das
pop
mov
sub
ins
xchg
lock
xchg
std
iret
mov
lahf
adc
push
or
pop
retf
cmps
cld
loope
fldenv
lock
ss
cmc
or
xor
or
fcmovne
out
add
or
dec
in
repnz
iret
jns
rcl
mov
in
dec
in
push
les
fwait
and
cwde
in
dec
lea
mov
call
cwde
hlt
iret
add
mov
cmps
dec
pushf
adc
push
inc
jae
test
mov
xchg
in
daa
jns
int
mov
pusha
or
cmp
sbb
add
pop
fsub
push
jg
sbb
push
cmp
adc
ret
test
loopne
or
and
add
mov
sbb
sub
add
popa
or
mov
outs
mov
adc
mov
rol
fld
xor
out
mov
sub
imul
adc
nop
pop
sub
sbb
dec
pop
scas
test
xchg
push
loope
add
and
jae
mov
cmp
out
inc
cmc
in
scas
gs
adc
inc
out
fld
jns
outs
clc
sbb
or
or
pushw
ins
dec
mov
cmps
jnp
pop
lods
mov
in
push
shr
cli
shl
(bad)
fistp
dec
(bad)
mov
ja
sahf
jmp
inc
movs
repnz
sti
fldcw
sbb
loop
sbb
test
push
sbb
xchg
jo
pop
adc
inc
scas
lss
xor
jecxz
shr
sbb
fdiv
xchg
mov
dec
stc
cmp
in
ss
jg
inc
pop
mov
(bad)
sti
jecxz
sbb
test
test
mov
ror
pop
and
iret
(bad)
inc
gs
out
xor
cld
cs
movs
mov
sahf
call
fst
push
jp
pop
adc
sub
lock
push
fistp
movs
jmp
shl
dec
cdq
push
test
rcl
in
or
ret
jae
pop
sbb
push
mov
jbe
iret
fs
pushf
cmp
mov
(bad)
sub
cld
lea
fcom
ret
pop
mov
stos
jbe
and
lods
push
leave
out
sar
jnp
jo
push
ret
je
sar
xchg
scas
shl
xchg
daa
ds
pusha
dec
or
popf
stc
je
data16
adc
xor
repz
into
mov
bound
dec
imul
jb
lds
jae
add
ret
sar
imul
add
data16
jmp
ds
daa
push
pop
mov
sbb
das
pushf
clc
je
mov
daa
mov
add
xor
pop
out
lea
jne
shr
add
or
sub
push
lock
data16
mov
sti
mov
and
sar
or
rcl
lahf
xchg
add
xor
fs
jns
jns
shl
pop
in
jmp
dec
dec
es
xchg
mov
mov
cmp
dec
push
sub
mov
mov
xor
cmp
add
mov
or
or
sar
add
mov
ret
or
repz
out
ja
test
(bad)
retf
dec
dec
scas
xchg
xchg
adc
in
sub
aas
inc
ja
popa
fwait
repz
cmp
outs
mov
push
jge
stc
push
outs
mov
mov
mov
in
add
cmp
dec
mov
dec
pop
imul
imul
cmps
test
mov
mov
retf
fidiv
fnsave
mov
das
mov
push
sahf
xchg
pop
ins
sti
(bad)
adc
push
xchg
or
xchg
cld
out
pop
xchg
dec
cmp
cdq
test
pop
push
or
cmps
ins
cmp
sbb
rcr
ds
push
jle
aad
xor
pop
mov
adc
mov
add
sbb
push
sbb
xchg
fsubr
test
add
in
mov
aad
cdq
and
or
call
fldenv
push
fstp
cmp
outs
mov
mov
fwait
jl
imul
dec
into
jl
mov
je
mov
mov
xchg
std
and
push
inc
xchg
fwait
sub
cmps
into
leave
push
cmc
pop
in
and
cld
call
es
xchg
bound
sub
xchg
sbb
push
repnz
jno
sbb
fisttp
fs
stc
int
inc
out
stos
lock
popf
mov
add
mov
adc
cwde
dec
dec
inc
jns
sbb
rcl
jbe
ret
std
fidivr
cmp
idiv
addr16
int3
jle
dec
dec
in
pop
sbb
lea
js
pop
mov
sub
or
push
arpl
sahf
xchg
dec
loope
mov
mov
ficom
ret
and
ss
daa
retf
js
fs
push
lds
cs
push
fsubr
icebp
pushf
push
callw
xor
fwait
pop
fld
jb
enter
xchg
cmp
xchg
jbe
jmp
jecxz
cmp
and
loopne
repz
data16
mov
sub
mov
cli
shl
das
dec
cmp
xchg
ss
std
cld
adc
jmp
in
jmp
sbb
fdivr
stc
inc
test
mov
loope
out
pop
add
xchg
xchg
jno
pop
ret
dec
jmp
out
adc
js
pusha
mov
cwde
xor
pop
or
sub
sbb
lds
sub
fisttp
mov
popa
sub
jns
or
sub
push
xor
test
icebp
mov
mov
pop
xchg
loop
movs
xor
jae
and
pop
pop
jae
ins
stos
ds
mov
xchg
loopne
in
ja
fidiv
fist
fcom
in
push
in
dec
je
in
cmps
mov
(bad)
dec
ins
ds
cmp
loop
js
mov
mov
outs
xor
jmp
pop
add
sub
adc
dec
mov
fisttp
and
mov
jge
out
out
add
dec
nop
pusha
loop
mov
shl
pop
inc
push
mov
push
fdiv
pop
jne
xchg
test
sbb
je
jnp
dec
sbb
arpl
jmp
adc
daa
imul
test
xor
cdq
ins
push
inc
sbb
xchg
xlat
xor
jl
xchg
cmps
pushf
jge
stc
sub
dec
push
mov
sub
xor
fbstp
and
dec
jnp
mov
mov
add
mov
jecxz
out
mov
pop
xchg
push
xor
jb
into
xor
sbb
push
aas
sbb
inc
aas
mov
nop
ret
iret
add
push
dec
and
dec
fcmovne
mov
test
cmp
xchg
into
mov
out
sbb
sbb
mov
jecxz
jb
pusha
mov
shr
or
aas
sar
pop
test
dec
xor
movs
data16
pop
mov
xchg
sub
xchg
std
xor
jo
pop
push
dec
jmp
xchg
cld
mov
daa
ds
adc
(bad)
or
inc
pop
leave
sbb
outs
jns
pop
jp
jp
or
cwde
daa
loope
aam
(bad)
les
repz
mul
sbb
lds
jle
idiv
mov
add
jbe
in
add
stc
xor
mov
cmps
add
fwait
(bad)
call
ret
and
sub
or
mov
dec
add
ror
aam
mov
push
push
pop
and
popa
ror
sbb
xchg
push
mov
inc
pop
cld
dec
test
(bad)
xchg
pop
sbb
xor
(bad)
xlat
xchg
inc
nop
push
shr
dec
imul
movs
dec
adc
int
inc
mov
repnz
or
jno
in
push
in
push
xor
fisub
pop
or
pop
std
and
movs
mov
xor
adc
inc
lahf
or
call
lahf
xchg
(bad)
pop
xchg
mov
repz
inc
std
cmc
movs
sbb
inc
enter
in
rcr
lods
test
lea
mov
(bad)
cmps
stos
xchg
cdq
jmp
into
mov
test
fs
jmp
movs
jne
int3
and
sub
mov
icebp
test
cmps
xlat
push
clc
jmp
aaa
push
jmp
retf
jo
cld
cli
js
or
mov
add
test
pop
xchg
dec
inc
sub
push
xlat
fwait
enter
and
push
pop
xchg
xlat
cmp
call
add
push
jg
fiadd
dec
sub
jno
inc
imul
jl
or
or
jp
es
mov
fisubr
xlat
mov
iret
(bad)
in
ss
dec
scas
xchg
mov
jp
mov
adc
(bad)
lock
jl
mov
(bad)
adc
cmp
sub
stos
lock
mov
cmp
and
mov
mov
stos
(bad)
mov
sbb
neg
xchg
sti
xchg
in
fsub
mov
pcmpeqb
jne
sub
js
test
inc
or
call
push
je
xchg
and
data16
mov
cmp
jbe
fist
dec
fcomp
scas
sub
int3
xchg
scas
fild
mov
enter
sar
push
fiadd
jne
adc
loop
xor
mov
std
mov
inc
inc
inc
cmp
sub
ins
mov
mov
xchg
adc
inc
(bad)
push
jnp
dec
xchg
mov
rcl
fadd
popa
les
sbb
jp
pop
stos
mov
and
mov
push
movs
mov
xor
out
sbb
call
jmp
nop
lods
push
and
out
and
lahf
jo
and
and
mov
fdivp
mov
sbb
inc
(bad)
sub
sti
sub
xchg
dec
push
mov
push
dec
push
(bad)
idiv
fild
pop
ds
xchg
ror
pop
jle
jl
dec
mov
jmp
pop
enter
adc
fwait
mov
push
sub
mov
adc
push
in
ret
mov
or
jo
movs
xchg
mov
sbb
or
test
pusha
in
dec
xchg
data16
mov
push
test
mov
fwait
dec
sub
jp
xchg
xor
or
mov
mov
mov
pop
or
clc
(bad)
(bad)
push
push
into
rol
mov
fs
cmp
lds
jle
xlat
ja
nop
inc
xor
ja
cmp
popa
inc
sub
and
xchg
pop
xchg
xchg
sbb
js
out
popa
or
jne
enter
rcl
nop
xor
sbb
jecxz
mov
ins
daa
iret
add
aas
push
inc
shl
xchg
ins
mov
in
test
sbb
push
or
imul
(bad)
and
jp
push
leave
pop
adc
jg
bound
dec
mov
lahf
aad
fisubr
pop
and
popf
mov
or
movs
and
ins
pop
jle
mov
fld
ds
mov
rcl
cmp
popf
(bad)
and
jl
sbb
xor
pop
icebp
add
add
mov
aas
and
pop
adc
xor
push
outs
(bad)
cmp
xchg
cmp
mov
cmps
mov
xor
jae
fidivr
push
inc
xor
jge
sti
push
(bad)
adc
lods
mov
pop
add
inc
xchg
cld
inc
xor
movs
xchg
mov
in
xor
fwait
int3
cmp
adc
cwde
ss
std
mov
jle
into
pop
test
data16
js
dec
into
mov
fld
fisub
adc
cmp
xchg
jo
inc
(bad)
cs
in
(bad)
xor
pop
inc
dec
test
aas
inc
sbb
xor
movs
scas
out
ins
and
xchg
push
xchg
cmp
sbb
mov
mov
mov
sub
or
out
add
mov
pop
movs
adc
cld
dec
push
jmp
in
pop
pusha
cdq
(bad)
sbb
loop
lock
cli
idiv
fsub
ret
inc
int3
inc
and
jae
lock
sti
test
push
xchg
cmp
out
add
mov
int3
test
push
arpl
and
jns
mov
push
adc
xor
or
pop
loop
test
sub
xchg
test
loop
xchg
sub
jge
jo
loop
mov
adc
add
ds
test
jbe
stos
ret
mov
or
test
ins
dec
loope
fcomi
sbb
mov
mov
arpl
in
push
loopne
inc
in
ja
out
sbb
jnp
retf
add
cli
jmp
(bad)
fisttp
std
rol
adc
xor
rol
pop
inc
adc
out
adc
sbb
xor
icebp
jmp
mov
inc
xchg
ss
pop
xchg
fxch
pop
mov
in
adc
xor
xchg
cli
and
stos
sar
cwde
and
stc
jns
add
xchg
(bad)
jge
push
push
inc
movs
movs
inc
sub
cld
cmps
stc
jg
ins
mov
jmp
stos
iret
fldcw
push
mov
movs
push
add
inc
xor
push
dec
bt
mov
xor
dec
in
pop
cmp
out
xor
jb
cdq
test
mov
pusha
sbb
fcom
mov
mov
clc
call
mov
test
dec
mov
mov
outs
dec
test
and
retf
ret
adc
mov
cli
dec
dec
lock
or
out
(bad)
mov
dec
jo
stos
idiv
mov
icebp
mov
adc
das
jl
pop
test
mov
daa
inc
xchg
jmp
es
call
inc
inc
(bad)
int3
hlt
mov
mov
xor
dec
mov
or
or
cmp
fcmovnbe
sub
add
mov
mov
adc
or
jg
mov
adc
pop
retf
mov
jns
or
xlat
push
data16
fld
in
test
out
clc
pop
cmp
sub
gs
xlat
mov
imul
rcl
mov
lock
mov
aaa
mov
pop
sbb
xor
cmps
mov
gs
outs
xchg
cdq
das
fsub
cli
pop
movs
mov
sbb
shl
jecxz
add
movs
xchg
daa
pop
(bad)
stos
iret
or
movs
sub
(bad)
imul
out
and
(bad)
fst
cwde
push
sub
cmc
pop
fwait
pop
pop
jmp
div
icebp
adc
cmp
cmp
int3
sti
loop
xor
or
xchg
mov
and
in
test
mov
icebp
xchg
mov
outs
loope
xchg
loope
xchg
div
std
fadd
icebp
xor
pushw
sbb
mov
imul
xchg
push
jb
pushf
sbb
sbb
inc
or
movs
and
sub
push
cmp
lds
pop
xchg
inc
jb
out
and
popa
cld
mov
lahf
sti
dec
aad
cmp
and
(bad)
inc
push
arpl
test
loopne
xor
loopne
cdq
call
jbe
fisubr
pop
mov
ror
ja
and
dec
sub
mov
sub
pop
cmp
into
cwde
in
mov
(bad)
jnp
fs
imul
pushf
iret
dec
or
xchg
adc
aam
sub
das
sub
out
daa
dec
iret
sbb
leave
jb
pop
mov
cmp
adc
or
cld
mov
sub
es
adc
sbb
sbb
xor
add
mov
int3
imul
lea
cmc
lods
lock
cld
(bad)
jge
mov
ds
xor
push
dec
icebp
or
jp
ins
scas
stos
and
popf
ja
and
ret
pop
in
daa
std
inc
pop
ret
jl
pop
mov
outs
hlt
pop
inc
xchg
fiadd
mov
icebp
(bad)
outs
mov
loopne
cld
jb
int3
pop
clts
mov
gs
aad
jne
stos
adc
scas
xor
clc
fwait
repnz
scas
outs
mov
daa
bnd
add
mov
mov
adc
rcl
arpl
mov
ror
in
outs
adc
outs
push
gs
sub
outs
mov
fstp
data16
push
xor
dec
cmc
push
mov
add
xor
push
rcl
aam
movs
xor
sahf
sub
xchg
and
mov
mov
scas
mov
inc
shr
aad
mov
cwde
inc
jmp
outs
and
add
mov
jo
cmc
lea
or
scas
dec
dec
stc
sbb
stc
fdivr
loop
jle
cmps
clc
dec
jno
stos
push
ins
inc
add
mov
or
cmp
fwait
gs
mov
out
xor
in
xchg
dec
loope
dec
xchg
cmp
test
loope
gs
test
mov
fisubr
dec
imul
call
movs
inc
enter
aad
pop
and
push
adc
popa
pop
fbld
jmp
fucomi
out
std
fistp
cmp
or
nop
pop
mov
shl
popa
cmps
test
iret
imul
add
mov
in
test
mov
xor
(bad)
lods
jl
xchg
fstp
int3
mov
pop
pop
out
or
test
jbe
cmc
jmp
cld
and
sbb
mov
nop
imul
xchg
xor
std
cmp
mov
and
sahf
sbb
addr16
mov
inc
fnstcw
shr
ins
inc
xlat
lock
mov
in
int
sar
xchg
shl
sub
or
arpl
or
inc
xor
pusha
xor
retf
inc
fadd
xor
test
pop
sub
cmp
sbb
inc
pop
mov
iret
pushf
test
jb
cmc
shl
cwde
loope
fiadd
mov
push
mov
pop
pop
out
add
sbb
jmp
mov
rcl
pop
cwde
repz
pop
mov
aad
jl
hlt
repz
sub
jnp
add
dec
add
sbb
and
sub
sbb
cmps
mov
jle
sub
ins
imul
mov
jns
in
mov
pusha
mov
pop
aad
push
jmp
or
mov
and
xor
in
and
mov
loopne
mov
inc
cmp
in
lods
aaa
aaa
and
leave
fcomp
push
mov
out
xchg
jb
dec
in
xor
dec
fiadd
pop
dec
ss
push
es
add
out
daa
out
popa
in
inc
xchg
repz
ins
icebp
or
sub
xchg
xor
test
imul
jmp
bound
or
dec
sbb
sbb
movs
in
ins
bts
shl
inc
jns
cli
jno
test
inc
add
gs
mov
(bad)
pop
rol
xlat
bndldx
movs
lea
fld
ror
sbb
aam
cmp
outs
jecxz
out
and
cmps
loop
test
movs
xchg
mov
mov
(bad)
stos
ins
mov
sti
add
pop
mov
adc
int3
jmp
sti
xor
mov
lahf
add
ins
std
add
pop
dec
cmp
push
adc
fs
mov
loopne
xchg
sub
and
dec
cmc
xor
pop
retf
dec
movs
into
rcr
mov
add
sbb
test
pop
or
inc
cmp
in
cmps
loope
fs
and
mov
inc
pusha
mov
(bad)
sub
add
dec
stos
lds
sbb
jae
bound
xor
(bad)
pop
sbb
push
aaa
mov
aas
pushf
sbb
mov
das
xor
dec
imul
add
stos
sbb
push
retf
out
dec
mov
jp
stos
popa
jne
jnp
ret
(bad)
lahf
adc
xchg
pop
dec
inc
sub
in
out
inc
add
mov
(bad)
loop
push
fisubr
mov
fmul
xchg
clc
sbb
mov
mov
pop
outs
cwde
ret
xchg
cmp
add
jmp
dec
adc
xor
cdq
(bad)
cmp
and
mov
sbb
cmp
mov
movs
adc
sub
adc
stos
and
sub
mov
pop
aaa
mov
push
mov
icebp
add
add
leave
mov
jmp
je
add
inc
sahf
jae
shr
adc
sahf
scas
std
and
inc
mov
les
mov
cmps
mov
inc
stos
pop
fcomp
fadd
dec
je
jmp
and
inc
pop
cmps
leave
sub
movs
fwait
ret
adc
push
xor
fisubr
mov
xchg
scas
pop
adc
dec
jns
cs
repz
inc
lock
jg
pop
jae
mov
mov
adc
sbb
stos
outs
stc
les
sub
mov
test
inc
fisubr
dec
loope
mov
xchg
mov
dec
mov
and
pop
stos
daa
sbb
aas
(bad)
mov
jbe
(bad)
and
sub
xchg
mov
mul
sub
scas
push
xor
nop
loop
(bad)
fld
sbb
shl
sub
jmp
push
fsubr
xchg
icebp
aam
xor
cmps
fnsave
fcmove
mov
or
mov
jbe
add
push
sub
cmp
push
mov
push
ins
and
imul
or
xchg
or
ret
cld
inc
push
cmp
fnsave
pop
arpl
movs
jae
adc
mov
xchg
add
shl
pop
cld
fistp
mov
ds
add
(bad)
jp
sahf
and
cmps
mov
outs
mov
and
leave
jne
xchg
popa
or
add
sbb
pop
ds
fidiv
lock
xchg
aad
xor
adc
(bad)
jl
into
pop
movs
sbb
pop
cmp
jge
mov
daa
retf
and
js
mov
loop
pop
es
sar
sahf
cmps
mov
push
jmp
retf
lods
and
inc
mov
sbb
sub
lea
lock
mov
pop
adc
aaa
fidivr
aaa
sti
xor
outs
(bad)
mov
int
inc
out
pop
fadd
in
adc
jle
das
ja
jp
push
ret
dec
sub
mov
xchg
ins
jne
je
push
adc
das
sub
cdq
out
pop
push
and
out
mov
push
sbb
adc
pushf
(bad)
cmp
jmp
sub
adc
mov
xor
cmp
in
in
adc
in
cmp
mov
pop
and
or
push
test
mov
jp
fidivr
out
jmp
fwait
sbb
push
hlt
lds
push
dec
dec
push
sbb
stos
lahf
test
call
jns
not
stos
enter
daa
xchg
xchg
lods
inc
pusha
je
pop
and
xchg
xor
push
mov
loopne
cld
jbe
fnstsw
xor
push
popa
gs
adc
xchg
add
test
mov
hlt
mov
lods
sub
fs
add
stos
pop
jo
mov
xor
sbb
and
inc
mov
jmp
dec
hlt
push
pop
pop
retf
ret
gs
imul
or
leave
xchg
popa
dec
popf
pop
iret
xor
mov
call
mov
cmp
call
xor
xchg
je
xchg
(bad)
xchg
mov
mov
leave
adc
(bad)
jge
inc
scas
pop
imul
sub
add
cwde
mov
sbb
sub
sub
test
push
retf
dec
out
daa
xchg
adc
xor
adc
iret
xchg
fldcw
xchg
cld
add
fsub
xchg
add
mov
retf
dec
push
and
ret
movs
dec
or
shr
jl
push
jbe
clc
and
jae
xor
pop
out
mov
pop
and
mov
retf
ins
into
fdiv
outs
loope
push
push
lods
jg
in
mov
mov
out
mov
ret
lea
scas
dec
push
in
dec
stos
dec
scas
mov
loope
mov
sahf
mov
and
scas
cmps
dec
addr16
pop
in
popa
je
mov
aas
(bad)
xchg
cdq
rcl
mov
cmp
sub
or
ss
(bad)
lods
cdq
inc
mov
xchg
dec
xchg
sti
das
imul
fldcw
inc
in
es
jbe
mov
mov
(bad)
jmp
stos
mov
push
cli
jnp
stc
xlat
xchg
adc
mov
arpl
adc
in
jo
mov
or
lods
mov
out
out
ror
dec
or
test
pop
sbb
jo
fmul
sbb
cmp
xchg
shr
retf
ret
push
test
inc
add
and
ret
enter
pop
mov
mov
dec
push
mov
mov
mov
dec
or
jge
push
lock
add
test
xchg
cmp
clc
lds
or
cmp
clc
xchg
push
pop
in
cmp
mov
cmp
xlat
leave
into
jbe
push
(bad)
cmp
push
enter
daa
adc
dec
(bad)
loope
adc
xchg
sbb
pop
es
sti
repnz
pop
outs
dec
sbb
mov
jne
fs
aas
movs
jmp
pop
pop
ss
test
imul
xchg
aad
inc
hlt
test
adc
rcl
sbb
adc
scas
inc
push
lea
jmp
mov
mov
adc
sub
push
dec
jns
add
dec
xchg
xor
jge
retf
aaa
pop
loop
aad
sub
repz
mov
(bad)
stc
sub
mov
sub
pop
sbb
adc
cmp
mov
and
imul
mov
jbe
mul
push
jecxz
xor
cmp
cli
lds
out
out
inc
movs
mov
xchg
int
mov
nop
repz
cmps
sbb
inc
movs
cwde
xchg
xchg
xchg
popf
dec
mov
dec
ds
mov
iret
sbb
add
mov
pop
inc
sti
pushf
cmp
popf
xchg
loopne
test
fild
adc
mov
mov
xor
sbb
mov
int3
mov
movs
push
xchg
and
(bad)
loope
push
mov
adc
call
mov
cmp
pop
out
mov
(bad)
mov
cmp
dec
icebp
mov
sbb
into
pushf
adc
rcl
out
call
fucompp
(bad)
shl
add
int3
int3
mov
pushf
sbb
jb
mov
cmc
dec
xchg
cli
xor
cs
inc
in
das
jbe
mov
inc
jb
cmp
(bad)
aas
push
loope
jle
mov
loopne
xor
and
test
into
cli
pop
sbb
xchg
ins
in
retf
cmps
cmps
ins
adc
loop
mov
pop
push
mov
jp
jns
out
mov
add
dec
dec
pushf
jge
movs
dec
inc
stos
mov
sub
xor
xor
lock
jge
je
fbld
mov
mov
adc
sahf
push
cmp
push
adc
sbb
mov
dec
psubd
xchg
in
movs
xchg
push
xor
test
loope
push
sub
jmp
mov
out
sbb
push
js
sub
push
pushf
cmp
(bad)
pop
(bad)
lahf
xchg
ins
fs
psadbw
and
mov
sub
sub
dec
stos
rcr
in
or
ret
sbb
mov
fsubr
arpl
jns
and
movs
pcmpeqw
sti
cdq
repz
mov
in
pop
lock
xchg
and
mov
scas
push
add
sbb
cmp
xchg
mov
repz
jbe
mov
and
mov
rol
cmp
in
push
cdq
and
push
jecxz
cmp
bsf
mov
inc
shl
in
popa
ror
mov
out
mov
pop
in
cwde
clc
in
push
cdq
inc
and
inc
xor
sti
jp
xchg
or
iret
outs
push
scas
sbb
pushf
test
adc
sub
addr16
jl
mov
dec
mov
xor
push
push
pop
cmps
mov
sbb
mov
inc
les
and
mov
std
mov
daa
daa
xchg
push
aaa
sbb
fwait
adc
out
jg
outs
or
sbb
or
mov
ficomp
add
cmps
cmp
lahf
fimul
lods
sub
(bad)
scas
ins
shr
add
int3
fwait
aas
xchg
xchg
aad
pusha
sub
repnz
int3
push
es
xchg
loop
mov
call
push
jo
jne
gs
leave
js
add
mov
or
inc
add
inc
xchg
xchg
push
inc
inc
aaa
jns
ror
gs
cmps
jmp
xor
(bad)
sbb
sbb
inc
jo
push
mov
ret
pop
iret
jnp
aad
mov
pop
shl
mov
pushf
pop
sti
movs
jne
(bad)
jno
ret
dec
mov
push
stos
sti
jbe
push
push
fisub
shl
mov
shl
rcl
cs
gs
mov
or
scas
mov
call
ins
xchg
enter
lahf
inc
int3
pop
xchg
jno
imul
imul
mov
sbb
in
xchg
add
cmps
adc
xchg
rol
les
jne
dec
xchg
sbb
push
dec
ja
fwait
add
add
lea
xor
sub
pop
std
js
arpl
pop
addr16
dec
push
dec
xsavec
(bad)
mov
aas
xchg
add
jmp
mov
rol
dec
push
xchg
mov
aaa
aaa
shr
jne
cdq
xor
pop
dec
add
ins
mov
inc
mov
pop
inc
out
jg
cmp
jb
in
mov
add
mov
cdq
and
and
fidivr
mov
or
xchg
pop
mov
stos
lds
mov
pop
xchg
fst
lahf
adc
cmp
push
dec
adc
adc
mov
pop
fsub
scas
retf
retf
and
jecxz
adc
iret
add
add
lahf
sub
out
icebp
fucom
jecxz
xchg
mov
int
add
xor
icebp
lock
js
adc
sub
cli
push
fild
xchg
cli
dec
imul
ret
push
jmp
shl
bound
cmps
cmps
ror
(bad)
call
mul
data16
push
jmp
cmp
add
push
call
fs
test
xor
dec
mov
into
call
or
std
mov
mov
mov
(bad)
pop
or
add
jb
out
add
fs
scas
xor
push
xchg
mov
je
inc
and
pop
ins
add
pop
jmp
adc
mov
clc
retf
outs
push
test
(bad)
hlt
loopne
lds
cmp
nop
inc
jp
mov
ficomp
cmc
call
add
dec
stc
jo
lahf
pop
or
inc
sub
push
out
adc
mov
loopne
leave
ret
fs
push
repnz
jns
push
daa
test
add
add
pop
pop
mov
xor
jg
fiadd
sar
cmp
aam
xor
dec
retf
out
fdiv
or
xlat
push
mov
mov
imul
push
mov
es
jge
adc
ja
fiadd
cdq
xchg
dec
outs
xchg
inc
in
xor
stos
lea
or
xlat
cmp
js
add
cmc
fiadd
add
stos
hlt
cmp
ret
fild
sub
int3
push
enter
sti
sub
cmp
mov
das
push
aaa
in
adc
inc
jnp
push
stc
retf
out
movs
adc
imul
das
mov
out
jb
sbb
mov
xor
dec
js
test
je
xor
fdiv
and
fld
inc
adc
enter
or
mov
repnz
inc
out
jmp
call
jnp
jecxz
pop
cmp
fsubr
and
cld
mov
or
mov
push
loope
and
xchg
dec
jae
test
nop
adc
add
and
clc
cmp
and
inc
mov
ret
mov
push
ins
popf
jecxz
sbb
mov
js
daa
sub
adc
or
push
scas
and
mov
lds
mov
adc
shr
or
test
popf
retf
adc
jle
add
fsubr
pusha
fs
pop
inc
mov
lods
clc
imul
iret
mov
repnz
scas
cs
jb
mov
cli
inc
dec
cbw
mov
add
aad
out
jb
fcmovnbe
sar
inc
mov
lss
cdq
pop
in
repnz
sub
enter
or
or
imul
loop
jno
or
es
mov
test
push
mov
or
(bad)
or
cmp
test
fcom
sbb
and
hlt
jbe
mov
popa
ror
xchg
mov
sbb
imul
(bad)
enter
out
lahf
stos
ds
cmp
ins
inc
mov
pop
movs
sbb
mov
aaa
xor
jns
cmp
(bad)
adc
mov
xchg
out
jecxz
cmps
inc
pusha
addr16
lock
retf
jmp
pop
and
cmc
aam
sub
mov
dec
movs
pop
xlat
jo
loop
sub
push
push
inc
dec
push
enter
and
pusha
xlat
pop
mul
pusha
xor
and
pop
ja
test
stc
sbb
pop
cld
xchg
leave
jp
ror
xor
dec
push
test
cld
aas
pop
loopne
inc
dec
popa
add
dec
stos
xchg
pop
xrelease
adc
sub
cs
popf
inc
and
aaa
ror
sub
jl
dec
fimul
cmp
push
push
cmps
jl
test
je
outs
and
fisttp
mov
fist
xor
ret
and
sbb
xor
icebp
dec
int3
add
cs
or
not
leave
ror
ins
fcmovnb
adc
mov
add
mov
mov
je
aad
shl
shr
sahf
jo
jnp
ffreep
loop
imul
std
popa
push
ja
sub
jl
pop
stos
imul
sti
or
xor
(bad)
mov
in
mov
cdq
movs
std
or
cmp
jnp
mov
dec
in
xor
push
inc
lahf
sbb
inc
(bad)
(bad)
loop
add
inc
jmp
mov
mov
jge
jle
repz
jmp
js
dec
sti
mov
jge
sbb
not
mov
or
adc
jae
adc
sbb
and
jge
stc
mov
adc
cmp
jmp
fwait
and
sub
aam
adc
cwde
in
das
iret
adc
mov
xor
fist
inc
jb
jne
ud1
mov
dec
out
cli
fldcw
push
or
repnz
das
mov
pop
adc
cmp
pop
or
(bad)
out
std
add
mov
nop
dec
and
loop
mov
dec
mov
pop
ins
fimul
fwait
jnp
cwde
pop
mov
add
pop
mov
inc
aad
outs
mov
xor
(bad)
add
xor
in
and
mov
xor
aad
in
cmp
and
jp
and
xchg
or
sub
push
xchg
inc
sti
mov
pop
xchg
addr16
mov
pop
sar
out
out
or
out
sahf
and
pop
or
out
mov
stc
shl
or
fistp
pop
sahf
shl
in
jne
shl
sub
rcr
mov
out
movs
mov
or
dec
jno
psubusb
cmp
das
mul
mov
pop
das
popa
in
aam
icebp
enter
ret
and
inc
dec
xchg
inc
or
jae
jecxz
jge
data16
xor
cmp
cmps
jno
jg
add
pop
enter
mov
das
outs
pop
jl
sbb
xchg
xor
mov
mov
lahf
inc
jnp
mov
lea
mov
cmp
js
addr16
fstp
cmp
inc
sub
cmp
add
ins
pop
add
inc
cld
rcl
outs
inc
fidivr
retf
ds
aad
mov
std
and
adc
nop
or
test
mov
adc
mov
push
ret
out
mov
(bad)
not
cmc
dec
inc
ss
aas
mov
(bad)
sub
loope
cld
lods
in
xchg
pop
(bad)
and
mov
dec
jae
xor
pop
or
fild
(bad)
or
pop
sub
std
shr
repz
(bad)
and
aam
mov
mov
scas
mov
fs
call
hlt
inc
and
scas
mov
mov
mov
xor
xchg
hlt
inc
test
in
xchg
adc
lods
mov
sub
fwait
sbb
jo
dec
xchg
dec
clc
mov
cs
cwde
cmp
xor
add
sbb
rol
(bad)
fnstsw
mov
cmc
push
aad
scas
mov
outs
outs
xor
mov
aad
pop
jg
hlt
pop
ss
xor
leave
sbb
xchg
jmp
dec
mov
(bad)
or
(bad)
icebp
mov
mov
push
push
push
out
adc
in
lods
sub
add
push
cmps
mov
sub
test
fdivr
dec
mov
test
dec
lock
nop
outs
mov
mov
dec
mov
popf
jns
jl
shl
jl
or
adc
sbb
aaa
pop
jmp
mov
hlt
dec
das
and
pop
scas
jns
enter
pop
and
mov
xor
mov
cmp
xor
(bad)
jmp
xlat
push
out
dec
adc
dec
xor
push
and
adc
or
les
inc
mov
adc
cmp
jmp
xor
xchg
cdq
scas
pop
fsubr
out
jno
inc
cld
xchg
mov
les
or
or
lea
enter
and
(bad)
xchg
or
mov
mov
sub
and
mov
and
sub
scas
out
test
xchg
add
arpl
pop
loope
out
mov
sti
mov
inc
in
pushf
or
mov
ins
iret
jmp
les
cdq
test
call
mov
mov
fimul
xchg
cmp
add
jbe
jne
dec
popf
mov
fs
adc
xor
enter
(bad)
dec
(bad)
outs
adc
push
push
cmp
push
fist
call
and
test
jge
jl
mov
push
rcl
push
and
mov
dec
push
xchg
dec
fldenv
push
sbb
stos
in
fmul
call
ins
cli
pop
mov
dec
adc
adc
adc
adc
mov
test
stos
xchg
mov
dec
mov
in
clc
ret
bound
adc
and
pop
push
pop
popf
retf
cli
adc
mov
cmp
jl
sti
jg
ret
pop
adc
(bad)
sbb
test
push
daa
scas
add
xchg
mov
retf
cli
cmp
je
mov
mov
out
push
mov
mov
(bad)
mov
mov
and
jecxz
jmp
scas
sar
xchg
push
rcr
(bad)
xor
add
mov
jecxz
rcl
fsub
mov
aad
cmps
inc
lods
xchg
mov
jno
shr
dec
dec
inc
xor
mov
loopne
mov
pop
sub
scas
inc
les
mov
or
mov
xor
xchg
ins
add
mov
ss
mov
mov
fidivr
movs
in
inc
mov
mov
cmp
es
jno
push
aas
xor
pop
ins
xor
jo
mov
cmp
jno
es
push
pop
dec
adc
push
pop
call
loop
jle
xchg
test
or
mov
fstp
sub
daa
or
and
out
ss
cmp
jle
jns
adc
cmc
dec
(bad)
fsubr
in
mov
hlt
mov
nop
pop
sbb
and
ret
cmp
es
fdiv
div
mov
dec
out
push
in
ins
xor
cs
mov
fld
sti
shl
xchg
mov
sbb
push
mov
popa
push
adc
jbe
xchg
sub
imul
retf
scas
sbb
mov
outs
push
stc
mov
shr
dec
push
call
lods
push
mov
cmc
cmp
or
into
inc
xor
out
(bad)
stos
mov
call
or
into
mov
pop
push
test
cmovle
push
xor
adc
push
mov
mov
pusha
mov
mov
(bad)
retf
repz
sahf
jne
aaa
cdq
mov
rcr
and
jmp
les
jle
shl
sub
lods
iret
loopne
cld
push
rol
mov
fsubrp
mov
daa
sbb
daa
cmp
cld
fdivr
pusha
repnz
out
jg
and
lds
pop
add
scas
jne
(bad)
jmp
jb
inc
mov
or
stc
in
jg
xchg
mov
test
out
ret
lock
rcr
jae
bound
mov
cmp
adc
daa
cmp
mov
scas
sub
ins
inc
loopne
ins
stos
jmp
or
push
xchg
and
add
inc
(bad)
jp
sbb
(bad)
in
xor
into
jge
jg
sar
(bad)
out
ins
pop
int3
or
sub
(bad)
ror
mov
call
mov
fbld
out
aam
xchg
and
mov
ror
jmp
push
fwait
add
fimul
cs
inc
cs
icebp
cli
mov
mov
dec
and
(bad)
sub
jg
or
(bad)
push
out
pushf
jnp
lods
or
sub
pop
sbb
add
popa
ja
sti
mov
xor
mov
ja
je
mov
push
lahf
adc
fist
add
pop
int3
cmp
pop
jnp
std
lods
cmp
fxch
cmp
sub
stc
jb
icebp
push
add
mov
dec
sar
inc
sbb
or
stos
fiadd
popf
pop
rol
aam
imul
add
imul
jge
mov
ror
addr16
or
xchg
jns
test
xor
test
xor
xor
jmp
mov
sahf
jo
clc
push
sbb
in
das
cmp
hlt
mov
call
call
mov
mov
push
pusha
mov
or
hlt
es
xor
dec
xor
push
add
imul
loop
pop
sbb
xchg
and
mov
mov
adc
ret
jmp
scas
xchg
sar
(bad)
xor
mov
dec
or
sub
fsub
outs
push
fisttp
jge
jg
std
loopne
lods
mov
andnps
pushf
lahf
ss
fisttp
(bad)
(bad)
or
pop
sub
popf
loope
icebp
imul
fbstp
xchg
mov
sub
test
mov
add
test
cmp
push
imul
mov
cwde
mov
aam
retf
xor
inc
jmp
inc
sbb
xchg
xchg
sar
cmp
adc
sbb
mov
mov
retf
jmp
shl
es
pushf
dec
ret
rcr
dec
into
lods
xlat
inc
jne
push
movs
dec
pop
and
xor
repz
or
adc
pop
lods
cdq
jo
iret
in
xor
or
inc
mov
(bad)
les
js
(bad)
sub
or
add
and
inc
and
xor
cmps
int
repz
or
addr16
rcl
push
scas
mov
push
and
inc
in
fwait
pop
fmul
pop
mov
cmp
jge
shr
jl
sahf
neg
sub
push
sbb
hlt
js
out
popa
test
mov
push
add
dec
mov
pop
cmp
fiadd
shl
fs
call
(bad)
pop
inc
xchg
jl
xor
call
int
inc
xchg
mov
test
mov
push
cmp
jnp
mov
adc
sub
int
fsubr
rol
ror
fnstenv
jb
loop
ins
mov
dec
std
cmp
jg
(bad)
ficomp
movs
cwde
push
jns
jo
scas
push
cmp
xchg
add
jns
stc
inc
mov
inc
mov
add
xchg
mov
pop
jmp
mov
(bad)
mov
jo
sub
dec
mov
mov
cmp
or
pop
loopne
xchg
inc
add
int
scas
hlt
(bad)
lds
add
mov
fild
fnstenv
icebp
mov
int3
mov
lods
in
stos
pop
scas
ja
cmp
daa
(bad)
mov
sbb
cpuid
loopne
add
test
in
imul
fmul
scas
sti
mov
pop
mov
sub
loopne
cdq
out
and
jp
sbb
ja
sbb
sbb
or
neg
jecxz
push
ret
mov
lods
mov
mov
xchg
mov
mov
sbb
out
jns
cld
adc
pop
xchg
mov
idiv
in
repz
dec
repnz
sbb
pusha
jecxz
push
and
enter
cmp
jnp
popa
aas
sar
fstp
add
jecxz
sub
into
lahf
outs
mov
(bad)
imul
stos
cmc
(bad)
call
xor
lds
pop
xor
adc
lods
add
xor
in
retf
fisubr
retf
push
mov
pusha
push
pop
cmp
dec
xchg
mov
inc
and
aaa
stos
push
jo
jnp
inc
out
push
ins
outs
jne
push
pop
add
shr
mov
gs
mov
mov
and
mov
sti
clc
pop
pop
in
aaa
cmp
mov
or
(bad)
cmc
xchg
pop
dec
pop
xchg
pop
cmp
and
not
cli
dec
xor
mov
or
dec
push
(bad)
out
mov
(bad)
(bad)
push
add
ss
repz
sbb
or
rcr
rcr
js
push
cmp
inc
dec
test
in
add
jmp
lahf
xor
ss
push
dec
mov
popf
pusha
ret
jo
or
jne
mov
mov
add
es
shl
(bad)
pusha
cdq
sub
sbb
in
cmp
daa
push
lea
into
outs
stos
psubsw
out
jnp
and
into
mov
pushf
nop
push
push
add
shl
and
or
in
xor
mov
sub
add
out
add
lods
dec
shl
jle
pop
jbe
and
jno
push
or
test
in
fbld
(bad)
mov
mov
or
vmread
dec
ja
test
sub
pushf
add
jmp
sub
fbld
ret
ds
btc
adc
(bad)
pushf
or
rol
inc
lock
repnz
mov
sub
add
add
pop
and
and
call
shr
int3
fsubrp
xchg
cdq
lea
stos
pop
xchg
daa
sbb
stos
xchg
push
cdq
cmc
test
mov
ret
inc
sbb
call
in
cdq
(bad)
cmp
mov
mov
jb
out
pop
inc
dec
pop
cmp
mov
mov
int
pop
push
jmp
movs
mov
retf
or
imul
mov
jns
or
sahf
and
lea
fdiv
jae
popa
aas
sbb
or
(bad)
aas
gs
retf
mov
sbb
jmp
fld
mov
jge
xor
cli
mov
ss
call
mov
cmp
scas
dec
repnz
push
mov
adc
int
cmp
les
jge
inc
push
ins
lods
ins
inc
std
xor
leave
movs
pop
dec
lea
and
fistp
aam
sbb
rol
ret
pusha
loop
push
or
aaa
bound
stos
mov
sub
jg
aas
push
retf
lods
mov
inc
cld
lock
add
jge
jne
jnp
add
push
hlt
inc
test
add
stos
xchg
cmps
idiv
les
sbb
xchg
jnp
adc
mov
mov
inc
repz
in
push
sub
push
cwde
adc
nop
and
ins
cmp
fiadd
add
fwait
gs
cmc
frstor
call
pop
sub
pop
sub
dec
xchg
lods
sbb
fdiv
(bad)
and
fwait
rcl
push
mov
mov
(bad)
ins
dec
hlt
pop
lock
jae
inc
out
in
icebp
jo
pop
repnz
gs
(bad)
xchg
pop
cmp
add
sub
sub
cwde
pop
or
pop
arpl
fyl2x
imul
sti
rol
pcmpeqb
out
adc
jle
adc
xor
fwait
add
mov
mov
cmp
repz
in
out
cld
mov
mov
cli
adc
xchg
adc
mov
jp
iret
push
dec
pop
inc
sbb
and
jge
jmp
mov
not
sub
pop
dec
call
sbb
les
leave
mov
mov
xchg
sbb
cmp
(bad)
cmc
loop
mov
das
xor
fldcw
inc
xor
in
scas
dec
jns
dec
jns
cmp
mov
inc
div
imul
or
fsub
es
cli
int
xor
popa
fistp
jmp
pop
lock
cmc
ds
out
(bad)
fidiv
mov
xor
or
cmp
jmp
jge
mov
loope
(bad)
sub
fdivr
rol
or
sub
fmul
inc
aam
bnd
pop
cdq
push
push
sahf
int3
xor
add
(bad)
jne
das
int3
enter
or
inc
ds
or
or
icebp
jge
cmp
xlat
sub
add
xor
sbb
in
dec
out
lea
jae
push
pop
dec
int3
cmp
xchg
pop
in
add
shr
iret
fld
fcom
(bad)
test
iret
adc
mov
push
mov
(bad)
shr
jle
adc
cli
idiv
xchg
mov
loopne
cmp
inc
add
pop
jle
out
mov
jmp
push
or
lea
and
push
cmp
(bad)
popa
sub
and
sbb
in
mov
xor
js
ins
sub
gs
adc
daa
repz
cld
(bad)
out
jb
pop
xor
mov
adc
enter
inc
push
ds
xchg
ds
pop
mov
mov
push
dec
mov
xchg
sub
push
pop
(bad)
push
scas
jae
fdivr
xchg
dec
inc
mov
push
cwde
push
xchg
cmp
xor
mov
ja
cmps
xchg
mov
cmp
aas
pop
call
aas
sub
loope
cmp
cmp
sahf
add
ss
ret
xchg
cli
dec
je
mov
inc
xchg
inc
aaa
cmc
cmp
adc
sbb
das
imul
push
and
setae
push
stc
lahf
cmp
xchg
add
xchg
jns
or
sbb
fsubp
inc
jno
test
inc
pusha
jnp
hlt
je
push
dec
loop
scas
sub
aam
ret
(bad)
shr
and
pop
outs
scas
(bad)
xchg
int3
sbb
in
jmp
ret
(bad)
pop
pop
dec
test
rcr
xor
mov
out
test
out
cmp
mov
jmp
jl
js
imul
pusha
and
mov
stos
das
clc
ins
ret
pop
cli
mov
jne
fdivr
pop
scas
retf
inc
in
pop
out
add
imul
push
mov
jmp
jns
xchg
imul
das
or
mov
or
mov
aas
inc
(bad)
mov
xchg
sbb
pusha
ret
test
mov
jo
iret
mov
fiadd
ret
xlat
adc
cdq
sub
sbb
int3
cmp
inc
cmp
hlt
jae
pushf
pop
sbb
dec
sbb
adc
in
retf
jmp
mov
dec
loope
xchg
test
out
dec
dec
cmc
xor
xchg
movs
jmp
jo
js
(bad)
out
les
ror
jg
aaa
cmp
add
adc
mov
ror
pop
jno
jmp
add
cs
ss
sub
ss
xchg
xchg
ret
sbb
in
jle
sbb
mov
out
ins
xchg
lock
fsubr
addr16
dec
adc
pop
leave
and
out
movs
mov
aaa
fldcw
or
xor
bound
(bad)
cld
xor
cmp
push
in
out
aad
xor
or
push
fucomp
push
or
mov
mov
push
jl
or
jp
pushf
inc
xchg
jno
adc
and
fwait
mov
xor
cld
jecxz
cmps
cmps
mov
push
scas
in
shl
jmp
mov
jnp
test
push
mov
push
punpckhbw
mov
dec
(bad)
and
fs
and
cld
xlat
xchg
fstp
dec
test
fs
out
xor
push
xchg
jmp
mov
mov
mov
ins
mov
inc
and
push
nop
pop
mov
jne
jle
inc
cmc
and
test
fild
shr
cs
enter
jmp
arpl
jge
mov
or
out
inc
cmp
push
gs
mov
dec
cwde
scas
movs
or
cmp
out
mov
xlat
cli
cwde
ins
cmp
jb
test
scas
bound
push
cdq
mov
lods
xchg
dec
push
(bad)
inc
leave
xchg
push
retf
adc
cmps
lock
adc
inc
jge
xor
push
pop
lahf
cmp
mov
adc
xchg
fsub
mov
add
cwde
mov
inc
(bad)
push
fsub
sbb
repz
test
fst
call
ins
pusha
(bad)
mov
test
sub
cld
xchg
fsub
sub
mov
pop
imul
push
aam
push
test
xchg
and
jmp
cmp
mov
jne
test
aam
int
gs
cs
mov
mov
nop
sub
or
stos
inc
push
outs
adc
ret
stos
mov
xchg
out
jnp
and
cmp
jmp
mov
mov
push
mov
loop
(bad)
in
mov
mov
dec
cli
or
jne
inc
lods
and
cmp
cwde
in
push
sar
pop
ja
in
fsub
pop
pop
add
jno
push
jge
cmps
call
aaa
xor
jecxz
push
nop
fucomp
ss
sti
or
sbb
sbb
pop
mov
mov
inc
retf
cmp
xor
sbb
xchg
dec
out
int3
addr16
jmp
pop
mov
cmp
in
dec
jl
xchg
jp
inc
fild
jmp
sbb
fnstenv
fcmovbe
dec
sub
xchg
jne
outs
sbb
aad
mov
or
jno
xor
mov
mov
mov
(bad)
and
pop
jne
out
rcl
shl
aas
jmp
jmp
(bad)
cmc
sbb
sti
or
out
repz
sbb
push
sub
outs
jns
and
addr16
jecxz
mov
in
ins
adc
push
lods
std
shl
and
mov
xlat
inc
pop
(bad)
mov
stos
mov
mov
sub
sbb
mov
inc
push
jmp
ja
sub
pop
cmp
and
test
pop
sub
mov
shl
sub
ss
test
loope
(bad)
popa
mov
sbb
repz
xor
dec
mov
mov
pop
(bad)
push
and
mov
mov
push
jp
mov
pop
iret
dec
shl
jp
test
pop
push
rcl
pop
jno
and
push
mov
and
xor
out
pop
mov
je
lahf
push
jmp
xor
or
dec
mov
push
test
gs
cmps
mov
repz
pop
out
iret
mov
xchg
sti
stos
and
xor
or
push
xchg
jb
mov
ins
or
call
xchg
addr16
cmp
enter
jbe
push
popf
(bad)
fsubp
and
push
ds
cmp
dec
and
jnp
in
jg
sub
arpl
inc
adc
or
or
in
and
je
cmps
push
mov
mov
ss
(bad)
das
mov
cmp
rol
xor
test
ss
add
sub
sub
lfs
pop
lahf
fstp
test
sub
jae
bound
aaa
add
call
fs
mov
popa
cmp
mov
cli
jmp
mov
pop
adc
mov
adc
lods
lahf
mov
jae
add
jle
clc
push
mov
push
push
push
stos
sub
ror
js
pop
jns
daa
jecxz
int
ret
mov
and
jg
iret
push
(bad)
cli
adc
idiv
and
jmp
js
lock
shr
fwait
bound
add
(bad)
adc
add
fs
es
jo
loope
push
mov
test
adc
nop
stos
inc
jmp
jmp
sbb
enter
(bad)
loop
ret
cmps
inc
push
push
add
inc
retf
adc
sbb
lds
mov
lods
push
jb
out
and
call
aas
mov
outs
fcomp
xor
aad
cld
icebp
test
fisttp
pushf
div
mov
addr16
out
sbb
mov
inc
dec
lahf
(bad)
and
test
cli
or
inc
push
push
dec
cdq
pop
push
jae
jmp
mov
lea
xor
repnz
test
cli
scas
(bad)
mov
lock
fst
pop
popa
dec
int3
leave
int
jecxz
mov
push
add
jmp
outs
scas
enter
mov
(bad)
pop
mov
cli
add
pop
es
into
imul
xchg
test
repnz
stc
push
sar
inc
pop
retf
or
mov
cmp
sar
aas
jb
lock
push
aaa
nop
clc
enter
popa
inc
jns
les
ret
push
lgs
sbb
mov
mul
arpl
lods
mov
pop
push
push
sti
stos
xchg
and
sub
jno
sub
or
dec
xchg
inc
loopne
xchg
jns
std
aas
pushf
fistp
add
xchg
dec
fmul
jb
adc
push
inc
push
leave
sbb
pop
movs
std
xchg
cmc
dec
into
nop
jbe
gs
aas
je
pop
xor
pop
call
ror
xchg
repnz
push
and
push
sub
dec
(bad)
mov
in
loop
mov
mov
retf
mov
sti
inc
mov
popa
pop
or
retf
(bad)
xchg
clc
mov
jmp
mov
push
adc
push
mov
adc
push
mov
jne
cs
cmc
cmc
loop
mov
jg
sub
sub
push
jo
lds
es
xchg
call
bound
inc
test
jl
pop
xchg
mov
pop
inc
xor
inc
out
or
jecxz
inc
das
sub
push
pop
mov
(bad)
adc
push
or
and
popa
leave
in
out
fs
push
xor
jnp
mov
inc
int
loope
sahf
jb
push
fist
mov
or
fwait
inc
pop
push
add
ret
dec
and
adc
mov
(bad)
cmp
mov
dec
mov
scas
test
nop
or
or
pushf
fidiv
inc
call
mov
cdq
out
mov
xchg
lea
mov
or
jo
sub
jmp
and
mov
das
cs
dec
fldlg2
test
mov
mov
cmp
mov
jno
push
popa
cdq
fidiv
sbb
test
xchg
loop
mov
ss
ins
lock
jns
ret
cmp
lea
gs
sub
(bad)
sahf
int3
movs
add
movs
ss
clc
fsubr
int
sbb
fs
pusha
mov
pusha
pop
test
ret
(bad)
dec
add
in
or
sbb
inc
test
fadd
mov
mov
mov
scas
pop
ret
shr
daa
(bad)
movs
out
jmp
pop
push
mov
into
scas
dec
mov
sahf
cmp
and
add
and
mov
cmp
or
mov
mov
aaa
cmp
clc
in
adc
outs
jmp
sbb
mov
lods
xchg
mov
add
ins
rol
les
push
pop
nop
inc
push
ins
xor
xor
call
(bad)
mov
test
sub
leave
jbe
cmp
aaa
jmp
mov
push
icebp
dec
or
inc
leave
in
adc
jne
xchg
or
les
dec
xchg
aaa
les
xchg
or
aas
fnsave
mov
into
cmps
adc
add
pushf
jno
lahf
and
push
add
jno
fisub
dec
out
dec
in
adc
call
inc
sti
xchg
test
pop
push
push
push
push
and
retf
add
inc
add
inc
ffreep
mov
mov
pop
mov
push
cmps
scas
popf
jle
cmp
icebp
xchg
pop
mov
daa
scas
loopne
sbb
mov
mov
retf
inc
in
or
mov
push
ds
sbb
xor
lock
out
idiv
pop
pop
and
or
out
ret
iret
clc
sbb
add
not
sbb
xor
leave
outs
pop
or
loope
retf
cdq
cdq
cdq
push
je
mov
std
mov
clc
nop
cmp
ins
inc
dec
xchg
int
loop
ins
out
test
clc
add
or
in
or
or
and
and
jae
addr16
imul
adc
dec
je
sti
daa
shl
cld
push
in
jnp
and
inc
pop
aas
repz
fisub
and
das
jo
stc
out
cmp
inc
clc
and
rol
mov
sub
push
mov
inc
add
mov
add
and
push
sbb
inc
sti
call
int3
jo
popf
mov
pop
xor
outs
lods
xor
mov
xchg
out
daa
push
jp
adc
cs
and
outs
jle
sbb
dec
mov
lock
and
cmp
lahf
outs
int
adc
mov
imul
stc
pop
cs
or
mov
cwde
mov
out
in
pop
mov
in
cmp
jge
stos
ret
push
inc
xor
or
aaa
fidivr
pop
cmp
repnz
scas
std
push
mov
jg
clc
sahf
loop
retf
push
push
les
jno
in
div
sahf
xchg
jle
cs
sbb
into
cmp
stos
pop
sub
das
and
les
les
dec
mov
mov
adc
xchg
mov
inc
lock
push
test
jmp
outs
or
mov
adc
inc
mov
fucomip
mov
hlt
sub
test
mov
fsub
fcomp
xchg
data16
rol
cmp
mov
cmp
mov
cmp
imul
addr16
mov
leave
(bad)
sbb
or
lods
push
jns
ja
pop
loop
push
mov
or
into
out
mov
into
and
xchg
mov
dec
cmps
cmp
inc
js
mov
lahf
mov
xbegin
or
jne
out
and
rcr
or
lea
fs
cdq
and
int
cs
add
repnz
xchg
fcomp
mov
xor
out
loopne
mov
push
cs
adc
cs
shl
jno
pop
cmp
sti
sub
or
cdq
inc
xor
cmp
mov
in
in
ja
mov
mov
add
and
imul
sbb
(bad)
push
push
scas
push
icebp
outs
test
rcr
int
ins
test
mov
inc
ds
inc
pop
sub
xchg
or
daa
(bad)
mov
xor
push
adc
ins
sub
out
popf
fsub
jbe
or
rol
into
cmps
push
mov
imul
lods
adc
fld
sub
lahf
test
lahf
fcom
es
std
xlat
fs
out
sbb
inc
jno
dec
add
mov
or
jae
stc
leave
in
call
inc
xchg
shr
aaa
stc
push
inc
out
je
inc
push
xor
mov
test
pop
gs
in
je
mov
inc
sbb
xor
and
add
hlt
in
xor
cmp
mov
outs
es
sti
iret
xor
lods
lods
repz
inc
push
push
push
dec
popf
pushf
xor
test
iret
shr
cmp
adc
cmp
mov
lods
and
ret
sti
xor
and
pop
fnsave
(bad)
mov
mov
cdq
gs
add
pop
lock
jo
add
lock
jp
sahf
and
(bad)
jae
pop
adc
add
push
cmp
adc
arpl
icebp
shl
mov
imul
fldenv
pushf
ins
pop
retf
(bad)
mov
cmc
mov
push
shl
mov
push
jmp
cli
mov
pushf
dec
mov
or
mov
mov
in
(bad)
mov
jns
and
iret
ins
outs
mov
jle
add
dec
ret
sbb
fnstsw
dec
pop
sub
jo
ror
sahf
dec
sub
in
and
xlat
or
mov
cld
mov
mov
lea
fisttp
sahf
loope
in
pusha
sbb
xchg
jb
cwde
push
rcr
data16
imul
sbb
or
xchg
mov
cmp
cwde
inc
jge
jne
aad
and
or
mov
pop
mov
ins
jge
mov
xchg
aam
xchg
ss
push
cdq
test
xlat
add
ja
xor
(bad)
cmps
popf
jbe
lock
xchg
and
neg
add
cmp
adc
(bad)
and
mov
xchg
cmp
stos
cmp
xchg
shr
imul
adc
icebp
jmp
(bad)
sbb
movs
fsub
sub
mul
mov
inc
xchg
out
pop
cld
push
mov
leave
(bad)
push
or
inc
sahf
xchg
push
mov
push
mov
popf
mov
(bad)
pop
repnz
and
xchg
popa
pusha
neg
stc
pop
sub
push
mov
pop
je
sub
pop
xor
int
ds
sbb
jp
cwde
(bad)
cli
cdq
fsubr
xchg
mov
aam
clc
jno
cmc
and
and
xor
aad
inc
push
(bad)
in
cmc
(bad)
cwde
xchg
adc
mov
cdq
ins
xor
arpl
cmc
es
mov
movs
jle
mov
push
loopne
pop
dec
pusha
push
ffreep
and
add
mov
push
sub
ds
sub
cmp
inc
into
dec
jbe
push
jne
cmp
rcr
(bad)
cdq
add
leave
ins
xchg
lock
cmps
sub
sti
fwait
rol
sar
cmps
xor
mov
cmp
mov
ins
out
mov
loopne
push
xchg
mov
fs
sahf
(bad)
cmp
mov
call
push
jne
jmp
rcr
out
cs
ja
out
pop
or
pushf
pop
xor
rcr
sar
cli
sbb
sbb
call
cdq
mov
fnstcw
(bad)
dec
(bad)
fcom
jl
xchg
add
push
in
pusha
xor
inc
dec
in
or
(bad)
add
sbb
sub
stc
cld
inc
sahf
scas
test
mov
sti
rcr
lods
dec
ror
sub
ins
cmp
add
shr
and
push
call
stc
mov
call
sub
push
push
addr16
out
sub
mov
ret
cmps
mov
sbb
int3
push
gs
mov
sti
mov
push
ds
inc
iret
les
in
shl
and
out
jle
movs
stc
sub
stos
fstp
fwait
cmp
mov
fldenv
jge
(bad)
jae
sbb
in
jge
lock
sub
push
call
mov
cmps
scas
or
daa
sub
imul
dec
imul
data16
ds
push
inc
mov
call
es
inc
aam
or
xlat
sub
mov
int3
jmp
mov
test
scas
cmps
jecxz
ds
lds
and
sub
dec
ss
sbb
sbb
xchg
sbb
jae
sub
fwait
int3
or
jle
adc
mov
aad
add
sahf
or
sbb
(bad)
pop
jo
test
xchg
ins
outs
outs
scas
xchg
pushf
ins
pop
jne
inc
call
les
mov
mov
push
das
test
push
add
sub
cmp
hlt
rol
fsub
or
jo
in
imul
mov
mov
dec
(bad)
xchg
xchg
pop
inc
push
mov
push
test
mov
mov
inc
cs
mov
stos
ja
jmp
test
ret
push
add
push
cmp
lods
and
or
and
fs
imul
and
out
inc
mov
or
in
scas
in
jecxz
dec
out
pop
pop
popa
retf
ficom
inc
imul
xchg
test
push
or
inc
xor
cmps
and
mov
adc
xor
xor
icebp
add
inc
call
mul
sbb
xchg
div
int
mov
cmp
gs
sti
arpl
stos
or
mov
and
or
inc
ficom
(bad)
jae
leave
shl
out
nop
push
pop
push
pop
cmp
stos
pop
iret
jp
adc
dec
mov
aam
mov
lds
sbb
mov
or
jno
lea
jns
jo
(bad)
jns
(bad)
and
les
sub
cdq
or
cmps
mov
sub
aam
xchg
xchg
sub
hlt
push
ja
(bad)
add
or
sbb
(bad)
mov
arpl
and
jge
add
xchg
xor
cmp
pop
pand
pop
mov
mov
adc
sub
fwait
jg
xchg
pop
popf
sub
cs
jle
push
pop
aaa
or
dec
sbb
mov
inc
cmps
sbb
(bad)
out
enter
add
push
lods
in
xchg
test
fdiv
cmp
and
cmps
ins
sub
cdq
dec
cdq
sub
or
push
sti
sub
les
loopne
int
mov
outs
xchg
xor
shl
out
dec
mov
cli
ficomp
stos
jmp
mov
shl
cld
shl
outs
xor
dec
movs
jb
push
test
out
sub
in
test
inc
add
pop
test
add
jnp
outs
imul
movs
jne
scas
inc
fistp
movs
fiadd
xchg
push
outs
mov
jno
outs
clc
jb
loopne
xchg
sub
inc
or
jle
jge
cmp
cmp
fstp
shr
push
leave
lods
stos
push
(bad)
cmp
jle
aaa
iret
out
xchg
adc
mov
fstp
inc
or
jmp
and
or
test
sbb
dec
daa
jg
jbe
mov
arpl
and
or
lods
xor
xchg
(bad)
clc
pop
xchg
jne
movs
xor
je
push
or
push
test
jno
sub
xor
or
mov
mov
pusha
mov
mov
sub
fild
in
ds
popa
cs
pop
ins
pop
pop
adc
(bad)
fisttp
es
dec
push
xchg
aam
sar
push
popa
cmc
(bad)
iret
(bad)
rcl
data16
sbb
dec
sub
test
sub
dec
sub
out
or
cmp
pop
ret
icebp
cmp
pminsw
popa
push
mov
cs
cdq
jge
das
or
cmp
mov
dec
lods
or
iret
sub
pop
and
cmp
arpl
mov
imul
inc
fs
add
idiv
loope
jae
pushf
mov
jno
dec
scas
test
sti
imul
shl
es
adc
sbb
push
and
mov
pop
shr
lods
add
xor
ins
mov
push
sahf
add
mov
dec
mov
cmp
fidivr
cwde
repnz
lds
not
pop
cld
popf
jp
out
sub
sub
xchg
mov
cdq
pusha
movs
dec
push
or
pop
inc
dec
and
add
push
es
xchg
lods
lea
(bad)
fsubr
push
mov
popf
xchg
iret
scas
les
pop
pop
neg
pop
pop
imul
and
xchg
xor
pop
mov
sbb
push
es
mov
jp
popf
cmp
mov
mov
sub
sub
dec
add
arpl
int
mov
fstp
mov
jmp
push
ret
jae
mov
and
cmp
mov
and
cmc
fst
pop
shl
retf
das
push
cli
call
(bad)
faddp
push
dec
mov
push
ficomp
mov
sbb
fs
stos
push
inc
mov
or
mov
in
push
jp
and
adc
mov
cmp
xchg
movs
icebp
neg
mov
inc
mov
call
add
loopne
ret
dec
jbe
cmp
imul
inc
data16
sbb
sti
mov
js
xchg
lock
jle
mov
jo
inc
push
dec
xor
iret
scas
sbb
stos
sahf
cmps
or
pop
iret
add
cmp
es
or
push
gs
imul
cld
jle
pop
xchg
rcr
xlat
test
and
mov
imul
adc
inc
ja
(bad)
cwde
and
cmp
cwde
lea
inc
int
imul
sub
nop
(bad)
data16
arpl
fxch
pusha
data16
sar
pop
fidivr
jnp
addr16
cmp
push
jbe
pop
(bad)
aaa
cmps
mov
push
(bad)
pop
daa
dec
cmps
mov
loopne
add
fisttp
xor
int3
adc
iret
inc
pop
xor
in
sub
pop
mov
inc
int
cmp
pop
sbb
xchg
adc
cwde
add
add
mov
mov
and
push
loope
cmps
dec
xlat
cmp
or
mov
xor
xchg
jp
shr
sbb
cmp
gs
xchg
xor
arpl
or
call
xchg
add
je
dec
in
inc
cmp
jno
dec
cmp
ins
pop
mov
xor
push
xchg
stos
call
push
jmp
mov
and
push
jge
call
fsubr
and
out
addr16
xchg
popf
aam
jg
ror
aam
cmp
xor
dec
(bad)
mov
enter
aaa
loopne
aaa
add
cs
pop
add
mov
ja
mov
pop
mov
mov
std
cmps
stos
test
pushf
pop
pop
inc
add
push
sbb
fcomip
sub
pop
mov
mov
cmps
mov
pop
xor
xor
mov
fbld
repz
cmc
push
(bad)
js
les
dec
retf
pop
retf
or
jecxz
loope
jmp
call
js
cdq
adc
repnz
and
cmp
mov
int
inc
add
inc
push
sbb
retf
setae
stos
retfw
and
test
sahf
dec
push
mov
lds
push
jle
jmp
xchg
jmp
mov
repnz
aad
push
repnz
(bad)
int
mov
push
or
jl
adc
stos
cdq
pop
test
loop
arpl
in
out
sti
mov
mov
nop
pop
add
pop
sub
xchg
inc
add
push
mov
mov
test
cdq
pop
ins
sub
sbb
sbb
lods
inc
repz
aaa
mov
jl
retf
push
push
push
pop
push
jp
dec
arpl
les
sub
inc
pop
lds
dec
adc
mov
or
or
mov
js
arpl
push
xchg
cmp
inc
(bad)
mov
dec
xor
adc
pop
(bad)
or
test
(bad)
adc
popa
dec
out
sbb
nop
mov
cs
call
mov
dec
mov
sbb
sti
(bad)
jo
mov
pop
movs
jmp
push
nop
es
mov
clc
mov
inc
(bad)
fisub
popf
jge
jl
add
or
inc
or
loop
pop
ss
jo
(bad)
(bad)
in
hlt
cmp
push
add
into
mov
jbe
jg
pusha
imul
jp
shl
dec
fisttp
in
push
loopne
jp
dec
sub
mov
jp
loop
repnz
jmp
sti
stc
call
xor
dec
repz
(bad)
add
xor
add
add
push
sahf
and
push
dec
xor
jle
icebp
mov
mov
popa
cwde
inc
adc
push
hlt
pop
jns
inc
adc
or
adc
mov
pop
or
js
test
mov
ins
sub
popa
and
or
aas
jmp
mov
pop
and
mov
add
rcl
mov
scas
gs
lods
call
in
test
retf
test
out
jle
push
jp
ss
mov
mov
(bad)
xchg
xor
retf
popa
cmps
ins
sahf
xlat
cmp
jne
mov
dec
nop
shl
bound
fwait
inc
imul
popa
into
int3
adc
sbb
jns
rol
xchg
loopne
pusha
pop
dec
pmulhw
and
mov
jne
inc
(bad)
daa
pop
in
inc
add
in
push
sub
or
pop
repnz
mov
stos
xor
mov
xchg
mov
stos
and
cmps
retf
aad
ds
and
pop
add
leave
sti
imul
in
mov
loope
mov
into
hlt
cmps
jne
mov
mov
mov
and
bound
jbe
pushf
nop
je
adc
mov
xchg
loopne
mov
test
repnz
pop
jmp
fwait
out
pop
dec
mov
or
dec
aaa
push
dec
push
in
inc
xor
add
movs
pop
ficom
xor
add
sbb
jmp
int
popa
mov
sub
mov
push
xor
mov
rol
sub
addr16
pushf
add
in
or
inc
jne
sar
and
xchg
mov
jmp
(bad)
popf
pop
(bad)
cli
adc
scas
retf
push
mov
jle
jae
sbb
pop
lods
jmp
sbb
jg
jbe
inc
jnp
push
mov
push
mov
mov
mov
inc
lods
add
movs
iret
dec
jnp
emms
sbb
pop
stc
adc
imul
cmp
out
mov
pop
sbb
sub
xor
xchg
aas
mov
cmp
push
scas
and
jmp
mov
push
pop
push
jle
popa
cwde
sub
jnp
test
inc
dec
inc
cmp
loopne
(bad)
adc
dec
int3
pop
inc
pop
cmp
in
in
jle
jl
jl
xor
(bad)
jmp
lahf
loopne
sub
and
pusha
repz
dec
jbe
lods
sub
rol
imul
int
cmp
stc
pop
add
ins
mov
iret
adc
sub
xor
jle
add
sub
ds
xchg
mov
push
fs
jg
sub
mov
popf
in
out
jbe
sub
mov
in
add
ins
dec
mov
jno
xlat
jl
add
push
mov
clc
adc
jmp
sbb
add
daa
xchg
mov
xchg
test
lods
popa
fwait
mov
aam
mov
jmp
jbe
mov
mov
cli
push
xor
(bad)
cmp
inc
rcl
scas
xchg
call
mov
mov
cmp
int
inc
jp
test
or
mov
shl
stos
adc
iret
xor
nop
mov
xor
mov
jg
call
adc
or
push
jge
xlat
scas
clc
dec
pop
ins
dec
add
sti
shr
shl
or
inc
fwait
popa
ins
and
push
or
mov
xlat
outs
mov
sbb
pop
jb
outs
dec
adc
push
and
mov
fisttp
xchg
or
sti
fcomp
int
unpcklps
call
sub
(bad)
pop
adc
or
mov
popf
inc
add
imul
and
outs
dec
rcr
mov
popf
mov
mov
in
sti
out
fwait
sbb
push
fs
(bad)
stc
in
aam
mov
xor
in
rol
dec
ror
push
mov
cld
jmp
xor
stc
push
int
lock
fdiv
adc
xchg
out
loopne
pusha
sahf
movs
add
adc
ror
push
sub
sub
mov
dec
push
fisttp
pusha
mov
scas
mov
xchg
je
and
and
movs
inc
adc
and
mov
inc
sbb
xchg
xchg
mov
arpl
mov
gs
jns
fucomp
xchg
repnz
dec
and
sbb
cmp
add
mov
test
push
cli
scas
in
mov
test
cdq
push
cmp
or
fdiv
movs
shr
mov
push
inc
retf
dec
loope
outs
xor
cwde
xchg
push
int
add
icebp
xchg
rcl
and
sar
xor
out
jno
sbb
fsub
mov
shl
ja
sub
gs
mov
sbb
js
inc
mov
add
es
and
push
scas
cmp
push
mov
pop
inc
mul
pop
and
cld
adc
add
pop
inc
mov
(bad)
repz
repnz
ins
inc
ins
enter
jno
sub
out
sbb
imul
imul
pop
lods
dec
(bad)
cdq
and
or
retf
fdiv
jl
popa
add
hlt
sar
idiv
and
push
or
push
out
xor
adc
cmp
aas
movs
mov
jl
lock
mov
mov
push
pop
int3
dec
sub
ret
add
xchg
leave
out
pop
mov
push
mov
loop
out
pop
sub
aaa
add
pop
scas
fwait
mov
fbld
call
inc
shl
retf
ret
(bad)
int3
jnp
ret
mov
pop
dec
outs
repz
mov
lds
in
mov
mov
lahf
jne
popa
jle
aaa
push
sbb
in
mov
jne
leave
ss
mov
stc
push
add
adc
inc
xlat
std
push
push
mov
xor
xor
jns
arpl
add
dec
add
pop
sbb
xor
movs
inc
out
out
shr
sbb
fwait
pushf
or
mov
sub
mov
enter
cmps
pop
and
dec
and
mov
mov
dec
adc
push
enter
outs
pop
mov
sub
sar
fs
js
push
add
(bad)
hlt
leave
push
mov
jmp
pushf
add
ds
jle
mov
jne
cmp
leave
xlat
je
xchg
xor
pop
and
jmp
xor
inc
sbb
aad
ins
jecxz
push
(bad)
pop
xchg
push
cmp
dec
and
ins
push
cmp
mov
das
sub
add
test
inc
outs
xor
mov
push
cmp
jb
pop
leave
das
push
add
push
adc
sub
popa
inc
aam
fstp
hlt
push
cmc
fstp
cli
imul
xor
dec
xchg
jge
das
cmps
jl
mov
jg
push
pop
xor
shl
and
je
xchg
sub
pop
mov
mov
inc
sub
cmp
aad
call
sub
or
pop
and
fdivr
out
cmp
jb
imul
sahf
retf
mov
cmp
(bad)
push
rcr
shl
xor
out
(bad)
nop
xlat
outs
push
cmps
add
rcr
add
scas
mov
scas
cld
repnz
test
pmaxsw
stos
call
or
mov
fidivr
aam
mov
pop
dec
mov
xor
aas
sub
xor
(bad)
fld
dec
daa
cmp
es
ds
mov
push
dec
push
adc
pop
pop
cld
ins
cmp
loope
pop
lods
and
inc
and
push
(bad)
push
add
mov
pop
int3
(bad)
add
in
jmp
jg
out
push
or
push
xchg
add
das
shr
jae
retf
push
lds
xchg
and
mov
sub
xchg
in
sub
mov
lock
pop
xor
cmp
push
movs
jnp
into
and
jmp
xor
push
das
sub
stos
loope
adc
push
icebp
dec
test
call
dec
sub
mov
and
std
sbb
and
inc
movs
push
pop
push
(bad)
ret
(bad)
stos
movs
and
push
push
lods
cs
int3
sbb
fucomi
xchg
shl
mov
xor
into
out
add
adc
add
mov
stc
fist
nop
enter
push
mov
fisttp
xchg
adc
pop
mov
cld
push
inc
ja
push
cld
jo
inc
repz
aam
aaa
rcr
imul
add
scas
jg
dec
mov
mov
inc
push
mov
add
jno
aam
data16
popf
js
jnp
sahf
in
push
lahf
add
jbe
inc
imul
xor
cmp
lods
data16
jns
sar
cmp
mov
int3
fisttp
sub
xchg
inc
xlat
adc
enter
js
cmps
js
mov
adc
mov
stos
in
frstor
xor
cwde
xchg
jns
shl
test
jnp
or
push
pop
jmp
mov
mov
aaa
push
in
lods
div
(bad)
outs
fmul
(bad)
popf
mov
adc
ds
mov
outs
jp
pop
and
fwait
les
dec
or
idiv
and
dec
inc
inc
inc
gs
loope
jecxz
and
std
sbb
imul
jl
xchg
cmp
push
mov
leave
adc
outs
mov
xor
inc
mov
loopne
ds
sub
or
push
cmp
pushf
scas
pop
ror
fdivp
push
call
pushf
icebp
test
je
sub
les
mov
sbb
fwait
push
(bad)
ret
xlat
sub
fcomp
std
fnstsw
or
out
movs
fldenv
mov
retf
hlt
enter
(bad)
xor
mov
test
sahf
cmp
jno
test
pop
add
(bad)
fxch
jo
shl
daa
mov
loopne
push
cmp
sub
fcomip
adc
dec
cmp
es
mov
push
bound
(bad)
sbb
mov
pop
mov
ret
pop
adc
and
mov
mov
mov
retf
jbe
sbb
pusha
sbb
adc
enter
lods
out
ret
xor
out
dec
rcl
push
inc
out
mov
out
outs
push
retf
xlat
pop
shl
stc
mov
mov
dec
retf
aas
jmp
fst
pop
out
push
mov
stc
cmp
aas
in
es
(bad)
push
xlat
hlt
sub
push
sub
lea
(bad)
push
dec
sar
inc
daa
stos
(bad)
out
mov
test
xor
mov
jns
(bad)
sahf
(bad)
pop
cld
aad
jb
adc
mov
inc
jp
sub
cmp
or
ss
sbb
je
inc
or
out
xchg
cdq
das
xor
pop
call
mov
xor
push
cmp
sbb
repz
loop
imul
push
cwde
(bad)
jmp
ds
adc
or
pop
pop
inc
imul
dec
loope
push
stos
jl
push
shl
aaa
ds
inc
mov
adc
cmp
out
in
push
mov
add
fdivp
stc
cs
cs
movs
cmc
loope
lds
js
sahf
paddsb
mov
cmp
adc
xchg
or
pop
adc
cwde
add
clc
lahf
cmps
push
mov
sub
cmps
lock
mov
xchg
mov
xchg
cmp
sub
adc
scas
xchg
(bad)
sar
fadd
ja
push
jmp
or
cmp
rol
jp
fstp
sbb
jecxz
lods
mov
or
js
add
fist
int3
ja
movs
test
lods
dec
sbb
mov
pop
inc
lea
xchg
lods
pushf
fst
lods
xor
std
stos
jmp
mov
in
ja
dec
repz
loop
cmp
jns
add
jnp
in
je
imul
movs
inc
js
and
xlat
mov
jecxz
call
add
adc
in
push
mov
mov
or
mov
mov
add
dec
xchg
into
push
mov
outs
in
sub
cmp
cmc
mov
cmp
mov
and
cs
pushw
fisubr
or
cmp
add
dec
call
mov
pop
mov
or
adc
xchg
push
rol
les
stos
cmp
js
sbb
mov
push
pop
add
aas
in
cmc
ja
ja
outs
and
fldcw
mov
mov
loope
adc
mov
or
sub
push
aas
pop
cmp
pop
adc
sub
sub
mov
xchg
lahf
mov
mov
loope
nop
out
in
mov
sbb
push
stos
push
xor
neg
(bad)
mov
or
push
mov
out
pop
rcr
mov
loop
push
out
int3
jne
in
cmps
daa
hlt
jle
mov
iret
sub
retf
add
lea
jno
push
mov
dec
xchg
or
call
in
cmp
lods
in
inc
test
or
push
call
mov
call
aam
push
(bad)
push
popf
jne
icebp
stos
mov
scas
xchg
stc
(bad)
push
push
mov
mov
and
mov
in
and
sub
push
or
sub
jmp
sub
cwde
push
inc
stos
mov
adc
add
adc
ins
or
jle
cmp
invd
adc
test
pop
cmps
sub
cmp
int
adc
fsubr
(bad)
ret
push
add
mov
or
(bad)
inc
add
push
in
push
push
sub
fisubr
or
xor
pop
lock
call
stos
aam
mov
xor
mov
hlt
sar
mov
xlat
mov
daa
mov
outs
in
or
int3
in
push
inc
es
cmps
pop
enter
movs
add
aaa
inc
pop
das
jae
mov
test
cmp
mov
and
lods
fstp
cmp
push
repz
icebp
cmp
or
arpl
jnp
pop
pop
sub
call
or
icebp
mov
jnp
nop
and
xlat
add
inc
ss
inc
ror
sbb
xchg
mov
jge
lods
dec
rcr
sub
xacquire
mul
into
adc
retf
es
xor
inc
mov
fidivr
xor
retf
clc
jl
(bad)
ds
ret
pop
pop
add
add
(bad)
cld
xchg
inc
adc
scas
pop
cli
jp
cmp
fwait
xchg
cli
psubw
clc
mov
idiv
pop
inc
ret
dec
pushf
xor
lods
mov
outs
aas
js
in
sahf
fwait
ins
xchg
(bad)
aaa
in
push
out
inc
jp
shr
dec
pop
(bad)
gs
pop
push
jne
mov
aad
retf
xor
mov
mov
jnp
mov
in
jae
cmps
inc
xchg
call
cmps
mov
sbb
dec
lock
xor
and
push
jmp
leave
test
mov
je
sbb
jb
call
cmp
ins
pusha
pop
pop
pop
inc
xor
xchg
pop
dec
or
loop
push
fld
stos
mov
cmp
or
out
sub
inc
jecxz
imul
mov
cmps
ins
cs
cmp
inc
into
jae
pop
or
pop
out
loop
repz
mov
mov
popa
out
in
or
or
enter
(bad)
addr16
inc
pop
lahf
fs
mov
xor
adc
mov
icebp
push
cmps
and
cmp
sbb
mov
pop
sub
mov
pop
dec
or
inc
lahf
in
sub
jb
shr
push
adc
add
mov
xor
mov
mov
cmp
pop
rcl
mul
aam
add
add
neg
mov
(bad)
ja
neg
in
pushf
push
cmp
in
xor
ins
popf
mov
scas
dec
and
add
inc
pop
ror
inc
test
je
cmp
neg
push
cld
(bad)
and
xor
xor
jge
sti
sti
push
cmp
inc
adc
loope
clc
js
popf
or
xlat
shl
ret
int
mov
add
imul
mov
mov
fist
ret
cmp
jno
push
or
outs
mov
push
cmps
lods
push
push
movs
xchg
lods
add
lods
daa
sti
popa
and
jl
sbb
movs
xlat
inc
dec
out
or
ins
test
jae
add
sbb
enter
loopne
icebp
jmp
ret
xchg
sbb
sbb
nop
ret
inc
or
imul
dec
xchg
inc
aaa
jne
add
inc
int3
inc
sub
mov
out
mov
push
imul
ficom
sahf
push
jae
push
jge
dec
rol
inc
adc
add
sub
ror
mov
xor
sbb
fstp
mov
jecxz
movs
xor
ret
jle
add
shl
repz
ds
jno
(bad)
push
xor
or
enter
and
dec
lods
lods
popa
mov
sub
aad
stos
push
mov
xor
or
arpl
icebp
cdq
and
shl
cmp
jg
movs
xor
stos
fwait
dec
mov
xchg
pop
fst
mov
les
xor
ins
aam
repnz
mov
fcomp
jg
fist
jmp
dec
xor
mov
loope
cdq
ror
jle
sub
sub
mov
(bad)
lds
and
(bad)
leave
and
imul
pusha
mov
dec
jge
mov
sahf
fldl2e
jae
push
xchg
mov
pop
test
ss
jnp
jge
jle
and
sub
(bad)
les
mov
ins
ror
jl
loop
popa
adc
add
ins
xchg
lods
inc
icebp
fld
jmp
(bad)
fucompp
adc
cwde
xor
fs
(bad)
jle
xchg
xchg
mov
or
jnp
nop
xor
dec
mov
outs
cs
cli
jle
add
mov
dec
xor
mov
xchg
(bad)
ds
sbb
fbstp
xchg
scas
mov
mov
jp
push
xchg
xchg
ss
aad
dec
ins
mov
jno
ins
adc
pop
retf
leave
adc
icebp
push
mov
retf
loopne
pop
les
push
mov
xor
inc
sbb
sub
jne
clc
lahf
and
xor
dec
pushf
arpl
loope
inc
cli
test
(bad)
pop
mov
jmp
pop
push
sub
ret
out
sbb
add
leave
pop
shr
or
fiadd
lahf
(bad)
mov
stos
int
icebp
out
scas
sub
lahf
test
lahf
loopne
xchg
and
shrd
cwde
inc
xor
cmp
shl
out
jmp
mov
sahf
jmp
scas
xor
pop
jp
imul
jmp
xor
shr
add
jbe
nop
cld
mov
sbb
dec
and
push
call
cmp
jmp
mov
call
pop
mov
sti
add
call
jo
into
adc
sahf
adc
loopne
jle
add
fs
cmps
sbb
sub
adc
(bad)
out
sub
pop
jne
into
callw
push
retf
sub
test
lock
mov
xlat
mov
bound
movs
xor
ja
adc
push
retf
cdq
jns
ficomp
out
js
sbb
sbb
(bad)
int
and
adc
add
or
cli
sbb
popf
jbe
jmp
xor
jmp
sar
das
xor
mov
in
fiadd
clc
push
lods
mov
imul
in
jmp
push
and
jbe
loope
arpl
in
popa
jns
and
inc
sub
jmp
mov
add
mov
jle
and
mul
xor
int3
sub
pop
and
xchg
mov
iret
in
ss
imul
pop
aaa
lods
fs
dec
ds
pop
inc
loop
lods
or
std
out
ds
pop
cwde
js
adc
pop
fdivrp
jo
inc
sbb
sbb
aam
sbb
(bad)
jb
and
jmp
data16
mov
push
push
scas
fnstsw
mov
nop
mov
repz
adc
repz
mov
lods
loope
xchg
xchg
(bad)
clc
jmp
dec
xchg
shl
jle
pop
lea
or
stos
dec
or
leave
or
dec
push
outs
or
mov
sub
scas
xchg
pop
pop
stc
rcl
cmp
push
sbb
xor
push
or
sub
jle
or
add
xchg
add
pop
fadd
ins
fidiv
mov
js
cwde
jno
and
repz
out
hlt
mov
and
xlat
out
pop
ins
gs
xchg
(bad)
sbb
jg
pop
jmp
sbb
int
outs
sbb
jo
outs
or
les
cmp
jbe
inc
js
ret
int
por
push
rol
jp
and
out
js
pop
retf
or
or
or
fstp
add
addr16
inc
push
xlat
xchg
outs
pop
lods
adc
jmp
push
fimul
jmp
imul
push
cmp
inc
pop
jp
aaa
and
jbe
or
arpl
xchg
xor
out
(bad)
popa
loopne
aam
mov
ds
and
push
and
and
shl
les
(bad)
sub
pop
adc
cmp
xor
adc
cmp
fiadd
cmps
adc
inc
ror
cdq
mov
mov
mov
pop
repz
sbb
inc
mov
in
repz
test
xchg
je
push
in
les
adc
mov
jae
pop
retf
(bad)
loopne
xor
pop
sub
ss
int
mov
and
in
icebp
dec
jmp
lahf
outs
mov
std
into
out
push
mov
int3
sub
(bad)
into
cld
jbe
stos
mov
rcl
push
sbb
pop
shl
and
dec
sbb
xor
xchg
sub
dec
push
mov
stc
outs
repnz
or
inc
jmp
cmp
iret
sbb
jl
mov
pop
dec
xchg
push
shr
adc
sti
in
fdiv
xchg
cmp
lods
mov
ret
mov
jmp
cmp
mov
and
leave
idiv
jne
shl
ret
pop
sbb
stos
mov
ficomp
(bad)
sti
aam
in
pop
bound
icebp
fs
test
ret
das
cs
movs
in
mov
xor
mov
pushf
inc
or
imul
jb
mov
(bad)
lar
bound
ret
scas
shr
or
jmp
push
sub
cli
jmp
and
ret
jae
fdiv
imul
into
pop
pop
ror
ret
dec
out
(bad)
or
not
xor
sahf
scas
fdiv
lea
test
cwde
cwde
cmp
and
inc
cmps
xchg
push
fisubr
and
push
call
xor
es
call
dec
add
retf
data16
ja
lods
neg
lock
retf
loopne
jmp
xchg
add
jecxz
clc
call
adc
repnz
mov
push
in
sbb
adc
pop
arpl
add
loopne
imul
inc
inc
mov
test
cmp
mov
jbe
adc
sahf
sub
daa
xchg
or
mov
pop
paddsw
loope
add
pop
test
in
xchg
aad
das
add
pop
pop
movs
ja
retf
fcomp
dec
xor
retf
scas
xor
and
lods
pop
sbb
(bad)
rcl
xchg
(bad)
mov
xor
call
ins
js
or
ins
cmp
adc
fnstcw
sub
repnz
jo
pop
loope
mov
movs
mov
xlat
pop
outs
cwde
adc
sub
add
dec
cmp
test
dec
cdq
cmp
pop
pop
or
adc
push
outs
add
outs
xchg
cmc
mov
mov
jne
add
jns
cli
lods
cmp
addr16
inc
xchg
call
add
mov
fcom
sbb
fidiv
fcomip
push
repnz
pop
inc
ins
adc
jne
cmp
in
out
jb
lods
pop
test
or
(bad)
jmp
add
imul
xor
mov
cmp
out
xor
je
adc
imul
outs
pop
inc
fs
loopne
shl
inc
jmp
mov
or
xor
jecxz
mov
repnz
(bad)
jae
and
call
xor
jmp
loopne
sub
push
fcomi
ficom
loopne
stos
sub
cmps
mov
retf
and
mov
push
stos
sbb
or
mov
icebp
loope
push
(bad)
mov
leave
fcmovb
xchg
inc
adc
aas
test
pop
sbb
push
mov
mov
xchg
jbe
cld
push
ret
fidiv
cld
shl
clc
push
sahf
mov
inc
push
(bad)
shr
fs
mov
add
pop
loop
aam
clc
ins
push
div
xchg
call
add
cld
and
not
cmp
and
fadd
sub
mov
mov
or
adc
cs
mov
jne
ss
and
fadd
lock
pop
fst
jg
(bad)
sahf
dec
lds
cwde
ficomp
sub
push
out
xchg
mov
xchg
test
ins
adc
cmc
rol
xor
shl
pushf
movs
jae
ret
out
inc
cmp
fwait
cli
mov
pusha
jmp
add
add
ror
rol
fwait
mov
adc
lahf
std
mov
cmc
and
push
cmp
retf
gs
(bad)
outs
jno
adc
inc
sahf
xchg
xchg
sub
adc
ja
and
lahf
sbb
(bad)
push
aam
hlt
fild
enter
daa
sbb
xor
sti
jnp
fwait
retf
inc
jp
lahf
std
mov
push
sbb
in
sub
xchg
stc
out
sub
sub
push
cdq
or
add
cdq
adc
add
aad
and
lock
int
adc
sub
jo
mov
adc
push
dec
imul
loop
into
fadd
inc
movs
leave
repz
mov
jno
add
mov
jmp
mov
inc
add
xor
jg
jb
test
ins
push
js
cmp
je
seto
das
jge
push
jecxz
loope
push
test
int3
push
push
aad
push
stos
fcom
add
fisub
(bad)
cmp
cmpxchg
mov
std
mov
cmps
sar
cwde
mov
sbb
out
lods
and
ins
push
iret
dec
in
jecxz
mov
jp
retf
stos
xchg
fmul
ins
sbb
aad
jno
mov
mov
pop
repnz
xchg
(bad)
ja
mov
rcr
sbb
shl
jbe
dec
enter
(bad)
or
sbb
repz
lods
mov
repz
mov
aas
bound
or
enter
in
add
fisub
mov
push
jmp
or
xchg
mov
lods
mov
adc
jg
sbb
outs
int
xchg
dec
dec
cld
xchg
call
loop
stos
ss
rol
iret
sub
and
enter
(bad)
xchg
fisubr
or
and
sub
pop
movs
movs
mov
rcl
imul
sub
sahf
adc
mov
jmp
test
loopne
add
repz
shl
cld
lods
push
xor
inc
xchg
xchg
pop
sub
nop
retf
sub
fwait
hlt
push
nop
push
(bad)
std
inc
add
pop
jns
mov
xchg
iret
scas
add
sub
sbb
fnstenv
mov
stos
xchg
ins
xor
fidivr
jp
icebp
outs
mov
in
sub
ret
dec
inc
inc
cli
mov
or
fild
dec
js
out
imul
scas
loope
outs
lods
fs
mov
dec
enter
inc
pop
add
push
pop
jle
dec
in
fsubr
sbb
pop
(bad)
push
repz
ja
test
push
stos
cmp
sub
jmp
mov
adc
sti
div
and
ds
mul
adc
mov
mov
inc
jbe
and
cmp
inc
daa
js
add
jmp
or
add
jnp
xor
mov
xchg
xchg
jmp
jle
test
cmp
mov
push
pop
mov
jns
in
ficomp
sub
test
scas
movs
jge
sub
sbb
jae
outs
sub
inc
out
jnp
cmp
fist
lahf
fisttp
cld
shr
lds
jne
bound
inc
std
nop
(bad)
cld
div
imul
pop
(bad)
sub
mov
and
pop
xor
cs
int3
pop
aam
ja
pop
jmp
mov
mov
fidivr
cmp
aaa
push
les
mov
lods
out
es
aam
mov
das
adc
jmp
aas
pop
loopne
stos
mov
add
fnsave
jp
push
add
jns
mov
hlt
jbe
js
sub
lds
dec
pop
cmovl
xor
sub
mov
(bad)
pop
ja
mov
push
add
int
push
scas
shl
push
fiadd
jg
call
adc
(bad)
cmc
mov
jmp
inc
xor
or
enter
pop
movs
adc
dec
pop
add
jbe
jmp
les
jb
sbb
xchg
sbb
test
popa
fcomp
div
lahf
fwait
out
dec
enter
pop
add
or
cmps
stc
pop
out
add
daa
aad
fld
adc
std
int3
stc
ds
jnp
inc
sbb
sti
std
xchg
cmc
movs
ja
jno
dec
ss
cmps
mov
xor
sbb
and
test
aam
cmp
jmp
lahf
xor
pop
xchg
sub
nop
dec
pop
popf
push
loop
mov
pop
addr16
outs
jecxz
sbb
outs
pusha
jl
xchg
retf
pop
(bad)
jp
sub
mov
push
in
arpl
xchg
gs
pop
pop
mov
lea
lds
push
xchg
dec
movs
pop
xchg
call
clc
adc
adc
stos
and
inc
cmp
lea
ret
adc
push
push
mov
push
mov
iret
push
and
dec
imul
ins
and
xchg
jmp
dec
cwde
xor
and
push
pop
test
mov
push
test
jmp
movs
in
cmp
and
adc
(bad)
push
fs
xchg
(bad)
lods
mov
jne
fisttp
out
fsub
test
cmp
in
iret
mov
movs
mov
fisubr
xor
stos
push
mov
adc
loopne
(bad)
adc
les
sahf
push
jne
dec
and
ja
pop
daa
xchg
or
add
cmps
aad
inc
xlat
and
int
and
mov
inc
add
adc
cmp
jmp
mov
jp
jp
test
add
add
and
loope
push
mov
push
pushf
push
sub
push
push
add
repz
jp
dec
cmp
dec
clc
and
mov
adc
jle
mov
movs
jo
mov
xchg
mov
sub
test
hlt
sub
jae
fnsave
daa
pop
movs
loope
sub
xor
jb
mov
lods
add
in
push
movs
cmc
stc
add
ja
lock
std
in
in
sub
rcl
xor
and
xor
add
int3
mov
hlt
clc
mov
retf
jmp
inc
mov
push
adc
cs
mov
push
jns
or
or
ins
xchg
iret
daa
xlat
jl
mov
xchg
mov
xchg
es
lds
xchg
(bad)
lahf
ror
outs
in
dec
and
ror
adc
mov
sub
test
cmp
enter
std
test
clc
xchg
sbb
sbb
sbb
adc
dec
inc
cmp
dec
cli
mov
nop
add
add
jae
push
lock
rdpmc
nop
pop
pop
xor
lods
imul
aam
lods
test
jae
jae
ja
js
test
pop
xor
cmp
adc
add
lods
daa
enter
mov
pop
cld
scas
rol
push
sti
jl
pop
ret
push
pushf
outs
jo
(bad)
xchg
mov
rcr
mov
xchg
imul
shr
add
ret
mov
loop
mov
popf
add
popf
pop
(bad)
pop
mov
and
mov
mov
xor
mov
ficom
pushf
sub
pushf
cmc
inc
into
fcom
push
stos
(bad)
in
push
loop
pop
add
mov
stos
dec
mov
fild
ret
push
sub
mov
les
push
or
ror
retf
aas
hlt
mov
test
pop
imul
inc
cmp
adc
and
out
mov
sub
xor
sbb
lock
mov
and
xlat
dec
pop
cmp
xchg
ins
cmp
mov
push
xchg
and
add
pop
mov
xlat
cmps
and
adc
mov
xchg
mov
cmp
sub
test
sub
mov
and
dec
lahf
dec
in
cld
add
push
pop
mov
cmp
xchg
mov
mov
loopne
dec
inc
not
cmp
cdq
test
adc
dec
sub
int3
test
mov
mov
pop
dec
jbe
mov
xchg
mov
jne
fstp
mov
adc
fsub
sbb
cdq
stos
enter
dec
(bad)
icebp
movs
std
out
loope
mov
loop
es
cmp
loopne
test
bound
sub
inc
leave
sbb
add
push
and
add
add
(bad)
dec
pop
cwde
jnp
mov
adc
stc
sbb
nop
repz
cmps
mov
fcomp
out
fwait
in
pop
dec
jnp
fcom
push
add
sahf
fs
push
or
sti
lods
push
mov
push
and
rcl
bound
shl
(bad)
jne
adc
into
enter
fidiv
out
test
sbb
scas
shl
outs
test
test
shl
pop
add
imul
xchg
xchg
jnp
fdivr
lods
jae
mov
push
retf
imul
lods
hlt
jns
pop
xchg
jl
sbb
and
jae
js
fbstp
ins
ret
or
or
arpl
ror
loopne
and
or
sub
cmc
mov
imul
and
mov
mov
fmul
sbb
bound
add
out
sub
sub
mov
pop
push
xor
hlt
fsub
loope
push
ret
sbb
xchg
not
pop
pusha
jmp
ror
cmc
xchg
sbb
push
jp
fstp
ins
ss
xor
jb
inc
or
ss
in
inc
inc
repz
mov
jae
inc
pop
popf
xor
inc
pop
or
fldenv
sub
pop
js
cwde
in
stc
xchg
in
sbb
(bad)
data16
xchg
lock
test
iret
retf
fisttp
pop
(bad)
xchg
fucom
mov
mov
mov
xor
or
xor
cwde
js
sbb
(bad)
push
jae
xlat
dec
sub
push
mov
xchg
xchg
jbe
pushf
adc
xor
fwait
push
(bad)
stos
ror
adc
mov
div
iret
push
mov
dec
popa
(bad)
stc
out
mul
jnp
int
scas
and
push
inc
jmp
call
xchg
mov
fcmovne
imul
fsubr
in
bound
repnz
fstp
retf
popa
cmp
push
sar
inc
pop
(bad)
push
or
popa
xor
pop
push
mov
fcomi
push
bound
push
xor
jmp
fcomp
cwde
in
rcr
mov
ss
daa
and
push
jns
pushf
sbb
pop
in
sar
mov
retf
iret
test
ins
das
cld
pop
ror
aam
mov
xchg
es
fdiv
push
add
add
push
pop
popa
stos
fmul
dec
mov
sub
inc
loope
pusha
ins
repz
mov
lods
cmp
out
fistp
xor
pop
ja
adc
retf
inc
or
jecxz
pop
in
mov
(bad)
push
sbb
xor
in
(bad)
and
int
repz
pop
sub
outs
pop
xor
or
stc
fcmovnb
pop
xor
add
or
adc
push
in
sbb
aad
int3
xchg
test
sbb
inc
mov
imul
cmp
test
xor
test
jmp
sbb
push
in
xlat
inc
loope
neg
xor
push
mov
mov
add
push
lds
adc
stc
dec
fiadd
push
mov
stos
fnstenv
inc
pop
leave
mov
inc
dec
shr
(bad)
pop
mov
loope
xchg
icebp
pop
cmp
mov
daa
scas
sbb
stos
dec
mov
push
cld
push
pop
or
mov
add
loopne
repz
pop
(bad)
xor
adc
xchg
es
mov
(bad)
xor
jge
test
and
push
mov
cld
pop
pop
push
into
cmp
imul
xchg
or
push
hlt
js
imul
jle
lahf
push
mov
cmps
out
lods
jno
ret
psrlq
jno
repz
bswap
lods
sbb
xchg
mov
repz
add
add
cli
mov
jbe
pop
lahf
(bad)
retf
dec
pop
jl
ror
sar
int3
push
xchg
imul
jnp
cmp
call
popf
(bad)
mov
and
xlat
movs
sbb
ja
inc
sbb
push
sar
xchg
(bad)
int3
imul
dec
add
and
xor
popa
adc
mov
cmps
and
jns
(bad)
data16
div
mov
(bad)
dec
es
jge
ror
fcomp
dec
push
add
xchg
and
push
mov
fdiv
dec
push
push
pop
xchg
xor
les
dec
push
xchg
jle
arpl
mov
fwait
cli
cli
fst
jmp
outs
movs
push
or
xlat
daa
push
add
cs
pop
jecxz
ret
xchg
xor
push
xor
pop
pop
mov
daa
jge
test
lahf
cmp
imul
xor
test
pop
inc
call
sub
shr
xchg
arpl
pop
xchg
in
jne
retf
add
in
mov
pop
jae
mov
or
xchg
or
into
inc
aaa
jno
and
xor
cmp
stos
sbb
push
leave
mov
push
aaa
sbb
stc
mov
not
add
aaa
xchg
stos
fistp
test
mov
xchg
push
stos
jg
test
into
sahf
dec
stc
call
nop
push
lods
repnz
mov
mov
jg
jae
jg
cdq
in
and
das
adc
icebp
mov
xlat
xor
dec
jb
mov
jp
pop
pushf
test
inc
push
movs
outs
dec
and
scas
pushf
inc
and
ror
sub
fucom
add
cmp
cmp
and
ins
cld
fisttp
push
cmp
fcmovu
lock
pop
cmps
jg
or
bound
retf
(bad)
rol
das
pop
scas
(bad)
jno
test
sbb
sbb
xchg
sti
mov
jge
retf
jp
push
push
data16
dec
ret
mov
mov
fwait
push
mov
(bad)
les
stos
xchg
mov
jmp
mov
(bad)
mov
jp
mov
adc
xchg
arpl
aad
xchg
push
xor
bound
ss
mov
loope
js
call
adc
in
adc
rcr
imul
imul
and
dec
sub
(bad)
cwde
mov
or
mov
into
leave
xchg
loop
les
sub
pop
jge
inc
mov
and
jmp
bound
jle
and
xchg
ror
sbb
nop
mov
shr
pushf
xor
and
xchg
or
shl
(bad)
cld
mov
lds
jmp
mov
add
and
push
gs
mov
imul
or
fldpi
push
push
mov
dec
add
sti
mov
mov
jo
int3
xchg
hlt
shr
and
mov
cdq
cmps
pushf
pop
ins
mov
mov
test
rcr
aaa
sti
jne
and
sbb
retf
or
mov
inc
add
std
xchg
mov
imul
dec
pop
mov
jo
aad
inc
mov
retf
cmp
jl
sahf
dec
fst
aas
mov
xor
cmp
mov
lock
adc
cld
xor
neg
ss
jmp
mov
sub
inc
lods
lods
xchg
push
dec
cs
dec
stos
mov
mov
(bad)
fdiv
inc
dec
jg
jmp
stos
stos
call
(bad)
push
dec
lock
jns
dec
stos
out
or
sti
stos
mov
mov
inc
sbb
mov
out
jmp
add
jnp
sbb
add
call
arpl
scas
fisubr
add
movs
loope
arpl
jp
aam
add
add
les
(bad)
sbb
or
mov
loopne
add
aas
sub
and
xor
sub
ud0
sbb
sar
shr
xchg
mov
mov
je
clc
mov
(bad)
and
enter
mov
imul
mov
adc
dec
add
add
jecxz
ret
(bad)
inc
es
(bad)
clc
repnz
push
cmp
into
xchg
cli
cs
fisttp
adc
inc
push
cmp
test
mov
and
out
and
pop
pop
push
retf
and
mov
and
arpl
dec
xchg
and
out
sub
xchg
cmp
mov
lods
fisttp
xor
adc
adc
inc
and
aam
dec
pop
xor
ds
push
call
outs
pop
dec
cdq
cld
ret
popf
mov
repz
sub
outs
sbb
sub
mov
cld
push
mov
inc
or
stos
dec
arpl
(bad)
idiv
xchg
sbb
js
push
mov
sbb
xchg
rcr
inc
cmp
sahf
mov
dec
mov
data16
push
int3
sub
int
mov
popa
icebp
das
jnp
jae
pop
int3
nop
out
ret
and
mov
movs
inc
push
iret
xchg
mov
data16
int3
jecxz
ror
mov
mov
pop
xchg
call
shl
mov
pop
pop
fcom
and
aas
xchg
aaa
adc
adc
ret
call
inc
jmp
push
mov
nop
mov
cmp
js
sbb
push
add
xor
and
jnp
sbb
sub
push
sbb
pop
jb
jnp
mov
int
add
leave
push
mov
mul
or
xchg
or
dec
mov
scas
mov
or
add
push
ins
retf
xor
fstp
xor
push
jecxz
mov
inc
jmp
mov
test
scas
push
lds
mov
jle
out
jg
mov
mov
xor
and
in
cli
cmp
mov
jae
pop
mov
sub
aaa
sub
das
mov
and
dec
pop
jle
rol
sbb
div
out
mov
sub
lahf
test
mov
dec
push
mov
fidiv
jecxz
sbb
clc
mov
cmp
scas
push
pop
lds
inc
jg
dec
rcl
loope
xchg
(bad)
ficom
stos
mov
xor
sbb
cmp
cmp
into
mov
sbb
sbb
cmp
inc
push
(bad)
mov
sbb
sbb
inc
cmp
je
arpl
and
mov
rcl
xchg
arpl
jecxz
xchg
and
ret
adc
push
repnz
(bad)
in
mov
iret
add
shl
rcl
xor
pop
xchg
iret
sub
add
and
jp
retf
mov
push
mov
jl
ss
jae
pop
push
test
dec
jae
dec
pop
sbb
outs
xchg
lds
out
jae
neg
repz
imul
mov
inc
fwait
iret
ds
cli
rcr
cld
push
sbb
outs
xor
std
(bad)
mov
sahf
inc
out
cmp
sub
dec
dec
jecxz
cmps
in
jg
daa
jne
pop
mov
xchg
fwait
dec
out
xor
jae
adc
ins
rcr
jnp
fs
jne
mov
lods
pop
aad
movs
outs
or
xor
inc
(bad)
pushw
movs
inc
(bad)
dec
(bad)
into
sti
sub
sahf
lahf
adc
push
cmp
or
mov
dec
es
neg
sbb
push
pop
shl
push
cmp
pop
cld
jb
jg
or
xchg
push
jne
outs
cmp
stc
sub
jg
push
mov
xor
jl
push
aad
mov
dec
fs
imul
push
aaa
fnsave
cdq
push
popf
add
pushf
and
nop
in
mov
and
push
out
jle
outs
lea
xchg
int
popf
pop
cmp
fadd
sahf
dec
enter
lods
test
test
mov
mov
push
or
aas
psrad
cmc
or
inc
jl
jbe
pop
inc
scas
(bad)
ror
out
fmul
mov
imul
ins
out
mov
arpl
pusha
jbe
mov
cmps
ficomp
jle
ins
sti
pusha
div
das
push
mov
xchg
mov
and
out
test
ins
test
push
xor
mov
or
ret
(bad)
sbb
mov
mov
bound
je
mov
pop
or
test
push
(bad)
lea
out
jmp
sub
xchg
stos
ror
test
les
test
imul
mov
or
mov
nop
fnstcw
push
retf
mov
mov
sbb
retf
stos
les
out
cmp
fild
rcr
js
cmp
xchg
jbe
mov
mov
jge
hlt
xchg
(bad)
adc
std
dec
sub
std
mov
dec
dec
call
ret
mov
lahf
mov
and
scas
mov
cmp
(bad)
xor
mov
lahf
mov
mov
mov
fcom
mov
pushf
push
push
or
sub
pop
js
stc
ret
inc
sbb
dec
in
and
mov
jmp
xchg
add
fucomp
cmp
fldenv
dec
mov
dec
jae
pop
pop
(bad)
dec
mov
stc
sahf
push
mov
xor
xchg
lods
push
dec
inc
inc
and
call
ficomp
mov
push
fimul
fcom
dec
icebp
jnp
mov
add
cli
inc
pop
xor
je
data16
xchg
sub
pop
mov
mov
dec
mov
sahf
lea
pop
mov
nop
out
cmps
pop
jns
sbb
mov
xchg
xor
xlat
lea
pop
nop
adc
cmp
hlt
mov
or
sti
mov
sbb
mov
cmps
add
(bad)
mov
repnz
mov
mov
imul
jbe
loop
push
jnp
and
or
out
test
and
je
ja
and
mov
mov
test
dec
lods
pop
sbb
add
mov
add
cmps
pop
jge
push
or
in
sar
jns
sub
popf
or
icebp
sbb
and
rcl
loope
mov
mov
xchg
xchg
fcmovnbe
adc
sti
mov
dec
aas
(bad)
or
jmp
push
aas
sbb
mov
mov
rol
sahf
mov
shl
shl
cld
cmp
ins
cmp
cwde
xchg
xchg
xor
dec
mov
dec
shl
nop
fnstcw
mov
jle
jbe
jbe
aam
and
gs
ja
xor
cmp
loopne
stos
dec
idiv
fimul
repz
cld
scas
dec
push
pop
sti
repz
mov
sbb
mov
pop
adc
dec
call
mov
fistp
fs
shl
(bad)
(bad)
repnz
jl
call
pusha
ret
and
cmp
nop
out
lahf
out
or
in
data16
movlhps
jmp
sahf
jle
or
std
sub
and
and
cmp
aaa
fwait
jmp
pop
shrd
enter
ror
mov
inc
and
mov
fidiv
test
push
and
sub
mov
cmps
int3
pop
xor
cs
inc
mov
xchg
push
movs
pop
adc
push
xchg
data16
pop
add
mov
mov
mov
loope
je
inc
and
outs
clc
or
ret
call
pop
lods
push
push
inc
sbb
imul
mov
cmps
cwd
stc
and
sbb
sub
sbb
sbb
cs
xor
rol
pop
jp
jmp
and
sub
mov
or
loopne
imul
fist
cs
js
adc
jne
and
add
std
xchg
out
outs
push
add
pop
add
xchg
int
in
jmp
sar
cmp
sub
cmc
pop
xchg
icebp
mov
or
mov
sub
loop
inc
les
xchg
fcom
push
xchg
daa
(bad)
xchg
xchg
xor
js
mov
and
popf
jno
inc
shl
xchg
(bad)
cmp
pop
sahf
adc
mov
cmp
mov
int
sahf
add
jnp
xchg
imul
not
push
push
sub
xor
repnz
cdq
cwde
lods
mov
mov
cmp
sbb
mov
stos
out
pop
leave
push
iret
(bad)
mov
and
aam
aaa
pop
add
or
lock
daa
push
push
rcl
shl
xchg
(bad)
call
pop
cmp
sbb
ret
mov
lods
add
xor
mov
(bad)
addr16
xchg
dec
(bad)
xchg
pop
push
loope
gs
mov
sub
and
mov
pop
adc
or
mov
int
fild
and
sahf
js
call
adc
fwait
(bad)
imul
addr16
pop
xrelease
addr16
pop
lods
sub
js
mov
repz
mov
(bad)
fdivr
xlat
add
mov
xchg
in
xchg
inc
add
xor
stos
stos
dec
pop
nop
fisubr
in
movs
cmp
cdq
cmp
dec
popf
mov
loopne
in
sbb
jmp
shr
push
jnp
rol
fisttp
add
sbb
jb
jecxz
push
call
cmp
movs
daa
mov
imul
mov
mov
pop
push
jg
jmp
push
movs
loop
out
adc
xchg
icebp
push
call
imul
(bad)
int3
test
push
and
outs
es
jecxz
pop
push
jbe
cwde
ins
lahf
ret
ins
lahf
shl
xor
cmp
dec
cld
int3
(bad)
cmp
mov
mov
daa
lods
xchg
mov
xchg
inc
dec
test
add
push
daa
ror
bnd
push
sub
and
and
sub
out
ret
repnz
(bad)
out
xchg
cli
(bad)
sti
scas
fild
out
fadd
pop
stos
xor
adc
test
ins
jle
(bad)
push
gs
mov
and
cmp
cmp
push
jnp
sub
xor
mov
(bad)
adc
or
les
adc
mov
mov
pop
icebp
mov
lock
sub
mov
fcom
cmc
jecxz
test
std
sub
in
fld
out
jnp
push
mov
cmp
jg
out
cmps
mov
stos
clc
fld
push
adc
cmc
jecxz
lods
call
jmp
or
fs
int3
mov
leave
loopne
paddusb
mov
jo
mov
inc
test
or
pop
jl
mov
jnp
sub
in
lods
and
hlt
pop
sub
push
lods
call
cli
and
mov
sub
int3
xchg
inc
sbb
cmp
inc
adc
mov
push
lock
cs
(bad)
fstp
les
shr
jnp
mov
jno
clc
(bad)
cmp
movs
jecxz
adc
ret
xchg
aam
jle
int3
xchg
jno
mov
outs
mov
xor
xor
push
out
jge
das
add
xor
call
pusha
pop
(bad)
(bad)
pop
add
mov
or
fidivr
or
dec
jg
mov
push
jb
jmp
jae
cmp
mov
mov
out
sub
imul
cmp
cmp
mov
dec
leave
xor
add
fdiv
outs
lds
std
aam
lea
add
cmp
xor
inc
stos
or
inc
jp
mov
pop
and
adc
fcomp
jno
retf
dec
mov
lock
or
push
mov
dec
ins
push
stc
mov
ins
push
or
sbb
cmp
lods
pop
rcr
mov
and
sbb
fldenv
test
push
sbb
shl
sahf
cmps
hlt
arpl
add
test
std
and
adc
movs
sbb
jge
ret
jns
mov
mov
push
popf
jae
mov
mov
or
inc
push
xchg
cs
jo
scas
aad
dec
cwde
lds
(bad)
enter
pop
pop
scas
test
clc
hlt
mov
call
mov
gs
and
and
cmp
xchg
pop
cli
jg
push
cmp
loop
sbb
and
das
cmp
mov
mov
mov
ficomp
fwait
pop
les
sub
aaa
cmp
enter
sub
jmp
adc
jge
dec
stc
out
add
dec
pop
ja
es
addr16
adc
jno
repz
adc
shl
loope
mov
sub
xchg
sub
js
xor
jmp
sbb
cmps
les
dec
jmp
js
mov
fidiv
push
inc
loopne
mov
cs
je
leave
daa
sub
and
xchg
mov
mov
imul
aad
je
jae
xchg
ins
xchg
adc
jecxz
nop
pop
(bad)
loopne
pushf
fldenv
inc
dec
inc
scas
mov
shl
sbb
lods
cli
leave
dec
cmc
imul
fdiv
inc
jge
movs
jle
cs
push
imul
dec
fcom
jb
sbb
push
lods
xchg
bound
jle
push
xor
sbb
lods
add
adc
pop
je
lock
sub
ficomp
xchg
sub
xchg
lock
sbb
mov
mov
rcl
mov
(bad)
xor
cwde
jg
cli
ret
cmp
jnp
(bad)
mov
imul
imul
arpl
xor
mov
fdiv
sbb
sub
js
pop
retf
adc
shl
lds
cmp
sub
dec
xor
xchg
jg
inc
mov
mov
xor
in
lods
cmp
sub
and
cmp
inc
dec
push
pop
lock
xchg
int3
rcr
arpl
repz
ins
jecxz
xchg
sbb
mov
ror
sub
sahf
(bad)
mov
jne
xor
mov
shl
cmp
sub
cmp
cld
shld
push
inc
jmp
add
push
fwait
movs
lods
dec
test
les
cld
outs
dec
cmp
jmp
push
mov
jl
mov
outs
pop
jmp
jmp
push
mov
mov
in
(bad)
loop
sub
pop
or
lock
mov
mov
and
stc
rcl
push
aad
inc
pop
js
je
sbb
add
shl
pop
(bad)
out
cmp
jno
xchg
sub
outs
sub
xchg
rol
mov
test
inc
fcmovbe
cld
xchg
push
cmp
rol
shr
test
inc
cdq
pop
repnz
sti
in
scas
(bad)
imul
sbb
pop
mov
cld
stc
popa
xchg
mov
push
push
mov
popf
inc
aad
mov
push
cs
and
ss
push
sahf
sbb
inc
mov
mov
sar
fucom
push
xor
(bad)
jmp
jae
dec
sbb
jp
and
or
fwait
or
cmp
call
inc
push
mov
ins
popa
call
jns
stos
test
pop
hlt
adc
push
mov
mov
cli
push
add
into
jmp
xchg
shr
add
fucom
jno
xor
jge
jns
inc
pop
sbb
popf
enter
pop
cld
mov
(bad)
adc
retf
cmps
cmps
retf
out
push
fwait
pop
pop
mov
cmp
adc
es
cmps
cmp
cmp
xchg
dec
and
mov
pusha
cmp
stos
cmps
sub
hlt
jns
jp
shl
fisttp
sbb
(bad)
xor
test
lahf
outs
cmp
jge
pop
(bad)
sbb
icebp
sahf
dec
(bad)
jo
aas
mov
sub
(bad)
ds
outs
aad
xor
call
or
out
ror
dec
nop
adc
scas
inc
sbb
addr16
leave
cld
in
add
test
mov
out
movs
jne
xor
mov
fnsave
add
dec
dec
push
sub
data16
add
es
push
test
and
jmp
stos
ins
add
add
lds
pop
cmp
idiv
int
jne
inc
push
xchg
test
cmps
pop
daa
imul
add
mov
or
push
push
mov
repnz
pop
jb
into
lock
int
cmp
hlt
jmp
sti
int3
setg
xchg
test
int3
cdq
mov
pop
adc
mov
inc
pop
inc
fisttp
dec
mov
sub
jge
mov
ins
mov
push
fist
jmp
xor
retf
inc
les
mov
pmuludq
scas
or
dec
clc
shr
jbe
lods
stc
xchg
rcl
push
(bad)
mov
cwde
adc
add
aaa
xor
pop
push
pop
pcmpgtw
sub
jmp
pop
cmps
add
pusha
cmc
cmps
cmc
mov
sub
xchg
mov
xchg
jbe
mov
test
xchg
loopne
jbe
cmp
lahf
mov
not
push
sub
in
pop
bound
sbb
ins
jge
inc
pusha
inc
cmp
jbe
leave
add
sbb
pop
shl
push
pusha
jmp
ror
rcr
imul
cwde
fs
pushf
mov
push
test
sub
xor
sahf
mov
mov
or
xchg
stos
inc
inc
movntps
repz
inc
nop
out
add
sub
ffree
out
xchg
fild
ins
jp
xlat
retf
lock
call
rcr
add
xchg
movups
xchg
or
adc
in
add
repz
aam
mov
inc
aaa
lods
into
int3
stc
cmp
xchg
pop
das
ds
mov
adc
enter
mov
inc
pop
jl
je
fwait
cld
push
test
ss
test
cmp
jnp
mov
or
mov
imul
sti
pop
inc
ins
sti
fwait
mov
sub
mov
sahf
mov
inc
popa
jns
cmps
add
loopne
int
ds
or
xor
xor
cmc
outs
jae
pusha
ror
(bad)
mov
push
js
fsub
cmp
cmp
pop
xchg
jl
js
fdiv
jg
stc
or
dec
mov
test
and
pop
lea
idiv
pushf
xor
xor
xchg
adc
mov
inc
pop
and
or
push
(bad)
push
out
sti
jb
enter
jmp
jmp
cmp
dec
mov
popf
idiv
outs
sahf
fcom
mov
ror
(bad)
call
retf
movs
cmps
inc
add
std
lea
sahf
or
and
add
loope
xlat
mov
shl
dec
jno
bnd
adc
mov
out
lds
xor
xlat
movs
int3
sub
pusha
dec
mov
aad
clc
mov
mov
popa
scas
push
sbb
pop
mov
es
inc
jns
push
pop
jp
pushf
push
mov
je
test
ror
jmp
sahf
adc
mov
cdq
inc
test
mov
dec
and
mov
test
push
out
push
jae
js
xor
retf
pop
adc
call
sub
push
(bad)
pop
mov
mov
sub
pop
push
sahf
cmp
loop
call
inc
jl
das
mov
pop
repz
jae
loope
pop
cmp
push
je
jge
mov
call
mov
ss
sti
xchg
adc
out
add
hlt
sub
into
pusha
pop
mov
outs
lds
stos
sar
pop
or
repz
ret
scas
sti
dec
enter
jmp
fcmovb
push
jb
mov
out
or
add
sbb
rol
in
mov
xchg
xor
or
icebp
push
(bad)
adc
xchg
or
sti
cmp
pop
repz
dec
retf
repz
and
sbb
sub
sub
int
dec
in
(bad)
mov
add
ficom
or
fst
(bad)
push
xor
stc
xor
mov
loop
leave
lods
xchg
pop
mov
lahf
pmullw
mov
sub
mov
retf
cli
mov
ds
dec
xchg
pop
(bad)
(bad)
out
out
fbstp
push
dec
(bad)
sar
mov
or
cli
jmp
jnp
xor
xor
sbb
push
cmc
inc
cmp
js
sbb
jg
test
pop
inc
jl
or
jl
add
popf
in
mov
(bad)
iret
mov
js
mov
cmp
test
scas
stos
add
sub
cmps
or
stos
sub
pop
mov
cmps
fwait
pop
inc
push
mov
push
adc
mov
(bad)
hlt
in
pop
(bad)
dec
and
int3
jecxz
or
aas
xchg
xor
mov
je
or
(bad)
sahf
repnz
adc
out
ds
scas
stc
inc
pop
sub
jnp
adc
repnz
jae
mov
push
xchg
jbe
loopne
push
mov
retf
popf
push
fsubp
mov
fstp
int
jae
lods
pop
(bad)
push
add
in
inc
outs
test
mov
add
pushf
jp
pushf
int3
pop
imul
xor
mov
mov
mov
sar
mov
cmp
ins
test
test
inc
sub
aaa
sti
xlat
data16
cmp
aad
aad
cmp
xor
stos
sub
adc
rcl
add
(bad)
mov
dec
mov
xchg
adc
add
jp
push
add
popa
jae
and
(bad)
pop
xor
inc
xchg
and
fiadd
inc
xchg
rol
das
xchg
add
retf
push
loop
jo
xor
movs
mov
cld
ins
mov
test
jle
sbb
call
push
jae
inc
or
ror
stos
call
out
call
sub
xchg
arpl
test
das
ins
push
stos
enter
inc
push
pop
inc
sbb
or
int3
pop
sub
dec
adc
das
test
stos
in
mov
mov
ret
mov
jno
adc
mov
add
mov
mov
and
xor
push
pushf
call
xor
ss
and
push
push
into
lds
and
(bad)
call
jae
and
push
xor
sbb
shl
xor
inc
add
mov
xchg
mov
adc
test
mov
sbb
jmp
xor
jo
push
loopne
inc
mov
pop
sbb
adc
gs
aaa
jmp
xor
sbb
sub
and
mov
push
mov
mov
lds
push
cs
out
xchg
pop
movs
adc
add
test
cmps
mov
push
fdivr
int
mul
add
adc
scas
adc
cmp
or
or
sbb
out
mov
push
push
or
add
mov
or
sub
gs
adc
hlt
repnz
add
pop
bnd
jmp
ins
add
push
dec
ds
sub
cdq
mov
mov
outs
shl
jae
adc
hlt
test
ins
add
sbb
loopne
test
imul
lods
leave
out
fs
dec
dec
dec
xor
pcmpgtw
or
jge
sbb
out
cmps
leave
add
or
cmp
shl
lds
jae
fisubr
xchg
leave
xor
shr
adc
lock
test
xchg
mov
mov
ret
fdiv
mov
xor
xchg
jno
sub
sbb
fucomip
dec
push
pop
(bad)
aam
sar
inc
push
cmp
int3
fcomip
neg
sub
jg
mov
xchg
sahf
loop
and
or
loope
jns
jbe
sub
rcr
std
sub
jl
dec
jmp
out
jecxz
inc
test
and
mov
cmc
jecxz
imul
push
in
sbb
add
adc
lods
call
and
popa
pusha
dec
pop
push
and
mov
mov
sti
in
mov
mov
(bad)
jno
cmps
ror
int3
cmp
sahf
fstp
ret
iret
aad
pop
outs
(bad)
icebp
sahf
in
fs
cmp
xchg
lahf
sub
jg
dec
stc
jbe
or
(bad)
ds
cmp
mov
mov
or
pop
mov
daa
das
outs
xor
xchg
in
icebp
xor
fs
xchg
popf
leave
pop
lds
cmp
(bad)
cdq
xor
bound
(bad)
push
aas
ins
jecxz
je
push
mov
inc
rol
inc
pop
jp
cmps
into
fisttp
frstor
mov
sbb
push
setnp
sar
sub
sbb
pop
arpl
pop
inc
cdq
test
lods
in
dec
in
sbb
ret
xchg
adc
pop
push
lods
xchg
nop
pop
dec
or
sbb
push
(bad)
xor
nop
xor
or
aas
mov
test
lock
jns
add
mov
add
adc
fdivr
push
adc
outs
daa
sbb
out
cmp
cli
test
mov
cmp
(bad)
fwait
jg
push
add
aad
sbb
jnp
push
jg
xchg
and
in
dec
xlat
xchg
mov
ror
jl
in
in
fsub
std
mov
shl
sahf
hlt
lea
cmps
pop
iret
and
cmp
adc
lods
stc
xor
or
enter
mov
ret
pop
(bad)
xor
cmp
fmulp
aad
xor
sahf
pop
pushf
mov
cmc
scas
cmp
(bad)
adc
pop
das
inc
shl
sub
jle
ror
pop
fst
test
inc
add
fdiv
unpckhps
(bad)
pop
cmp
mov
mov
jmp
cdq
dec
add
shr
mov
stos
outs
sbb
xchg
mov
mov
(bad)
idiv
rcr
sbb
out
xchg
or
dec
icebp
mov
mov
out
mov
jbe
leave
nop
pop
xchg
aas
mov
inc
lods
iret
xchg
sti
fwait
retf
jnp
xor
jne
dec
cs
inc
add
test
dec
push
adc
sbb
mov
loopne
sbb
jnp
inc
neg
(bad)
test
cld
pushf
xchg
add
ret
js
cmp
loop
add
jg
add
mov
jp
inc
daa
xchg
icebp
scas
ins
aam
test
or
and
dec
cmps
jno
fistp
sbb
cmp
xor
aam
xor
sbb
pushf
cmps
sbb
aas
mov
xor
mov
test
ja
(bad)
add
or
mov
adc
shl
inc
neg
cwde
imul
or
imul
pushf
mov
sbb
mov
dec
rol
(bad)
mov
mov
inc
call
xlat
inc
out
lock
jecxz
dec
in
push
xor
enter
test
cdq
mov
fld
les
cs
(bad)
xor
cmp
js
out
mov
fmul
test
cmc
scas
dec
or
pop
lods
pop
sahf
gs
scas
shl
or
lods
xor
add
(bad)
push
push
addr16
mov
cmp
jge
push
mov
shl
adc
cwde
sub
mov
mov
push
stc
xor
lds
jg
dec
mov
xchg
sbb
dec
jle
dec
arpl
adc
mov
adc
lds
xor
add
ret
xor
jb
iret
daa
xchg
xor
lods
jo
lock
sub
sub
inc
inc
icebp
aaa
xor
fnstsw
mov
scas
inc
into
les
fmulp
xlat
not
xor
add
ret
sbb
mov
test
sar
repz
sbb
iret
(bad)
sub
add
sub
enter
mov
pop
out
cmp
xchg
jo
add
or
leave
xor
pop
jecxz
dec
je
mov
push
repz
or
leave
xor
sbb
mov
scas
add
or
jns
pop
lods
stos
dec
dec
add
pop
push
cmp
aam
push
and
cmp
xor
and
ror
cmp
or
int
pop
dec
out
sub
push
lock
push
push
pop
stos
clc
or
dec
pop
int3
cmp
jge
das
pop
pop
shl
cwde
cmc
arpl
gs
xchg
xchg
ins
(bad)
cmp
mov
mov
movs
adc
and
xor
jge
sub
inc
adc
cld
push
xlat
sbb
hlt
sbb
aad
out
or
mov
push
mov
loope
(bad)
push
out
pop
rcl
cmp
mov
jmp
call
js
retf
cmp
adc
dec
into
loop
add
call
or
mov
lea
pop
cdq
mov
fisub
cwde
dec
or
mov
mov
out
jle
mov
and
sbb
xchg
xchg
aad
and
fwait
push
xor
call
(bad)
call
inc
test
adc
cmp
push
jl
mov
adc
mov
adc
sub
add
movs
pop
push
pop
cmp
gs
inc
into
cwde
sub
mov
fwait
lods
cmp
push
pop
ret
inc
sbb
div
xchg
hlt
mov
mov
xor
imul
mov
or
loope
js
dec
push
icebp
xor
inc
push
add
mov
or
mov
jmp
sahf
xchg
idiv
pop
ror
cmps
adc
sti
lock
lds
out
pop
jl
and
jnp
mov
sbb
fsub
fwait
das
mov
fcomp
test
mov
rcr
addr16
mov
ficomp
sub
retf
lods
or
jne
in
cmp
push
cwde
retf
add
inc
test
mov
xor
in
jns
jle
rcl
inc
sbb
loope
mov
test
adc
push
push
or
sbb
dec
stc
ss
push
dec
ja
push
(bad)
test
inc
push
bound
(bad)
jo
fcmovbe
das
cwde
(bad)
rol
sub
in
pop
movs
shl
sub
and
xchg
mov
and
pop
and
add
and
pop
cld
ss
mov
outs
jae
hlt
mov
and
pop
adc
add
aaa
cs
adc
loope
shl
xchg
cmp
xchg
mov
sub
inc
dec
lock
mov
jl
cdq
and
jp
fnsave
xchg
div
fwait
movs
add
fs
or
or
(bad)
pushf
mov
add
aad
in
fs
jb
mov
push
dec
ret
imul
fistp
fs
div
push
js
retf
sub
cmc
pop
cmp
bnd
icebp
push
(bad)
sub
mov
int3
jle
push
and
enter
pop
repz
fwait
xor
pop
loope
scas
mov
(bad)
fdivr
pop
sbb
jbe
add
dec
add
cmp
adc
and
cli
aas
mov
fbstp
push
nop
push
fnsave
mov
(bad)
xor
sub
jnp
js
stc
inc
inc
loope
loope
js
adc
and
cmp
fld
xchg
scas
cs
and
iret
out
dec
stos
push
sub
das
scas
cmps
pop
pop
cwde
into
mov
outs
mov
xor
add
mov
outs
lods
pusha
lea
sub
push
add
adc
pop
push
je
xor
data16
xchg
cmp
fcmovnu
pop
jecxz
imul
dec
mov
xchg
sub
mov
and
push
fldenv
lods
test
cmp
xchg
jo
xor
mov
loopne
(bad)
mov
mov
in
mov
jmp
(bad)
cld
daa
pushf
sar
retf
cmc
in
and
mov
or
sub
inc
inc
inc
cmp
pop
scas
or
inc
dec
cdq
fidiv
and
sbb
lods
pop
ss
and
mov
push
and
jbe
mov
xchg
push
imul
sub
mov
out
mov
(bad)
and
call
dec
out
jecxz
jns
out
int3
mov
inc
xchg
out
imul
cmp
dec
mov
call
stos
push
sub
sub
pop
das
xchg
fsubr
ret
pop
xchg
cld
mov
fimul
sub
jne
mov
sub
sub
sti
scas
iret
jae
jo
xchg
(bad)
imul
pop
pop
jmp
and
mov
pop
shr
mov
adc
cmps
neg
push
inc
xchg
add
jg
sbb
or
dec
xchg
sbb
add
sysenter
mov
cmc
pop
fcomp
into
cli
cmp
aas
fsubr
cmp
stos
cmp
loope
sub
push
mov
mov
sbb
mov
and
pop
jmp
mov
mov
js
adc
xor
jp
test
cdq
fimul
jae
add
push
int3
pop
daa
movs
in
jbe
push
sbb
mov
sahf
xchg
pusha
mov
stc
push
mov
std
xchg
mov
frstor
mov
lds
cmc
aas
aaa
mov
inc
(bad)
idiv
loopne
or
movs
popf
cmc
sbb
les
test
lahf
nop
test
inc
loopne
aam
cmp
xchg
daa
mov
(bad)
push
xor
shl
mov
ds
into
pop
push
lods
scas
nop
pop
push
mov
mov
test
jg
imul
pop
imul
fsubr
clc
fucomi
pop
les
xchg
and
add
cmp
test
adc
dec
xor
lds
dec
mov
adc
xor
iret
outs
ficom
and
mov
je
cs
popf
fmul
jb
xchg
inc
cmc
test
sub
aad
push
out
push
mov
or
jg
mov
add
inc
push
call
adc
ret
cmp
xor
test
mov
aad
inc
mov
dec
mov
pushf
xchg
xchg
sbb
std
cmp
add
xchg
dec
imul
and
in
sub
lahf
js
jmp
mov
jae
out
in
xchg
inc
push
icebp
clc
add
mov
clc
or
jp
pusha
bound
fucomip
sbb
mov
outs
adc
xor
mov
mov
xor
xchg
arpl
outs
dec
push
sbb
rcl
out
jle
mov
cmp
movs
mov
or
push
adc
aad
retf
add
xchg
test
xlat
cmp
ror
and
(bad)
pop
sar
dec
pop
inc
(bad)
ja
push
pop
pop
lock
aaa
and
add
jo
hlt
addr16
mov
xchg
outs
bound
and
dec
lods
(bad)
fwait
jl
test
shl
lea
sbb
out
sti
lock
loope
outs
(bad)
jno
out
sbb
mov
stos
sub
mov
arpl
cmovae
dec
jge
mov
clc
ret
ret
data16
mov
xchg
mov
xchg
mov
imul
mov
or
inc
mov
xchg
idiv
xchg
push
(bad)
jle
push
mov
int3
cmp
mov
or
pop
les
mov
add
stos
or
test
push
mov
pop
stos
add
and
int
shl
cmps
test
enter
xor
adc
or
or
je
call
sbb
sbb
and
js
cli
cmp
or
or
fs
mov
(bad)
lahf
mov
addr16
je
cmp
ins
je
jnp
and
mov
jmp
add
int
sbb
fdiv
(bad)
sub
cli
cmp
ins
outs
les
sbb
push
ficomp
xor
mov
scas
mov
pop
cmc
adc
add
movs
arpl
adc
sub
or
sbb
mov
(bad)
cmps
shr
movs
jp
les
sub
jmp
ds
mov
repz
adc
shr
loope
xor
pop
movs
jg
inc
xor
iret
popf
adc
outs
or
pop
or
(bad)
inc
and
out
xor
mov
jge
cdq
xchg
shl
mov
pop
test
lock
adc
jo
dec
dec
and
inc
inc
pop
sbb
mov
lock
hlt
scas
or
xor
out
in
fcmovnu
retf
xor
push
clc
loope
mov
fnstsw
inc
loopne
pusha
mov
and
cmp
sbb
mov
sub
into
and
hlt
mov
sbb
mov
jmp
mov
stos
or
cdq
mov
imul
test
ja
daa
push
nop
inc
es
jbe
cli
push
mov
mov
push
pop
mov
fnsave
ss
mov
sbb
jnp
nop
xor
add
fs
rol
add
and
(bad)
rcl
sbb
mov
bound
xchg
jmp
pop
aad
repz
and
ins
shl
fisubr
sub
adc
mov
into
push
or
mov
cmps
mov
mov
cwde
gs
(bad)
jo
ret
adc
mov
adc
outs
push
repnz
data16
call
fnstsw
je
pusha
push
cmp
jnp
nop
sub
fcmovnb
cmp
or
jno
aad
mov
xor
scas
mov
arpl
push
dec
cwde
scas
sub
xchg
fdivr
scas
sub
and
sbb
lds
cmp
cmp
mov
retf
daa
mov
dec
fcom
bound
dec
pop
sbb
jae
mov
int3
mov
ss
gs
adc
and
cmp
hlt
inc
push
fsub
pop
xchg
int3
pop
(bad)
aas
movs
push
cmp
sub
jl
mov
in
int
push
das
mov
sbb
outs
test
aas
mov
sub
movs
icebp
iret
retf
push
or
xor
sahf
xchg
mov
mov
daa
add
(bad)
addr16
stos
jmp
and
arpl
rcr
jne
jnp
push
xchg
test
fdiv
xlat
shl
repnz
xchg
push
push
mov
and
call
addr16
jecxz
mov
jmp
mov
rol
mov
not
repz
cmp
sub
xchg
imul
mov
pop
inc
jo
cmp
or
mov
jmp
cmp
(bad)
imul
push
fsubp
test
jmp
sbb
lea
pop
call
adc
rcl
or
push
lods
mov
add
pop
outs
inc
push
inc
add
pusha
sbb
mov
div
lods
jbe
movs
and
pop
sar
leave
push
xor
dec
push
adc
sete
rol
clc
mov
daa
out
cmp
sub
out
(bad)
mov
sbb
(bad)
fiadd
pop
rol
add
add
lock
outs
mov
cmp
(bad)
adc
test
int3
in
and
inc
fstp
loope
sub
sub
cmps
xor
fwait
pop
mov
dec
xchg
sbb
dec
ret
xchg
std
jnp
outs
xor
push
les
loopne
adc
or
or
lahf
outs
lock
mov
pop
ins
mov
mov
pop
movs
add
popa
cmp
shr
pop
loope
mov
adc
mov
mov
dec
aaa
pushf
dec
ins
and
xchg
cmp
adc
outs
(bad)
mov
test
pop
jge
mov
sti
xchg
ja
and
stc
les
aad
ror
retf
pop
loope
je
add
cmp
or
icebp
leave
xchg
lahf
out
push
scas
lea
hlt
or
jne
call
fdiv
(bad)
jmp
xor
fstp
loop
scas
cdq
int3
cmp
in
repz
mov
xchg
xchg
(bad)
int3
retf
into
mov
push
out
int
adc
cdq
in
test
in
push
and
shl
test
push
fsub
and
jecxz
and
das
mov
retf
cli
xchg
lods
xchg
call
out
popa
lods
jne
iret
jp
sub
add
mov
cld
pushf
dec
xchg
push
rcr
inc
or
push
cmp
mov
clc
imul
call
movs
cld
inc
cld
int3
mov
sub
push
out
sbb
mov
inc
popa
jo
jecxz
lock
out
mov
test
aaa
in
add
xchg
pop
scas
ror
movs
fmul
inc
jns
outs
test
sub
xor
jmp
push
test
test
aam
popf
dec
pop
int
xchg
add
(bad)
iret
sbb
xor
jge
cmps
leave
dec
(bad)
jae
pop
pop
dec
fisubr
inc
jmp
push
lds
dec
ins
cmps
xlat
lods
cmp
ja
int3
scas
(bad)
adc
sbb
cmp
cmp
mov
mov
xchg
scas
or
inc
sub
xor
fdiv
push
fmul
push
cmp
sbb
inc
fnstenv
imul
jmp
sub
jle
sub
sub
fist
loope
cdq
cs
jns
mov
inc
push
in
dec
adc
dec
jnp
pushf
call
sbb
scas
nop
mov
mov
mov
das
inc
jmp
cmps
jmp
sbb
mov
dec
sahf
jmp
fcmove
jno
enter
dec
push
dec
daa
in
ds
outs
and
test
mov
inc
push
push
cmp
fwait
push
pop
rcl
cmc
div
or
rcr
pop
fisubr
dec
push
sbb
pop
inc
jecxz
ins
mov
loope
xchg
(bad)
xchg
setge
jne
mov
(bad)
mov
mov
sbb
cld
outs
nop
dec
fnstsw
cmp
mov
sub
mul
xchg
shr
cwde
(bad)
lods
loope
in
adc
cmp
shl
mov
test
xor
mov
cmp
xchg
sub
mov
data16
scas
mov
push
jecxz
repz
push
lds
push
je
pop
ja
loop
mov
and
inc
pop
or
and
mov
cdq
movs
mov
adc
inc
xchg
mov
scas
aam
cmp
bound
mov
sti
popa
fs
aas
gs
cmp
push
pop
lods
fisub
mov
push
fmul
jge
mov
jecxz
dec
sub
test
mov
shl
das
fs
aaa
pop
inc
rol
mov
mov
scas
mov
pop
xlat
adc
gs
adc
xor
fmul
pop
push
and
mov
(bad)
lea
adc
push
sahf
sbb
xor
inc
sub
mov
loop
mov
inc
or
fld
dec
or
cmp
jne
fnstenv
test
aad
xlat
push
sbb
test
enter
adc
in
(bad)
inc
push
test
mov
loop
push
mov
jp
dec
gs
ror
stos
push
and
xor
mov
arpl
(bad)
in
xchg
push
dec
dec
dec
and
jns
or
sbb
cmps
dec
push
inc
test
adc
sbb
mov
imul
mov
jbe
dec
in
pop
xor
inc
call
or
pop
push
nop
or
sbb
fisub
dec
pusha
ins
push
lods
icebp
and
push
inc
pushf
in
adc
out
gs
mov
popf
add
and
sbb
dec
shl
enter
adc
ror
xor
cmp
leave
pop
pop
movs
dec
(bad)
pushf
fsubr
movs
xor
stos
mov
neg
js
cld
push
int
or
ror
cmps
inc
fadd
mov
and
cmp
dec
sahf
in
sub
jg
mov
adc
push
mov
inc
jmp
add
cmovnp
js
aam
push
mov
mov
mov
push
call
fs
or
or
fbld
pushf
push
xchg
mov
bswap
fisubr
pop
js
push
(bad)
ins
call
inc
loopne
mov
ret
sub
pusha
pop
jp
es
xchg
mov
push
(bad)
sbb
fnstenv
stc
pop
stc
jg
and
cld
je
sbb
cmp
and
ds
jle
lods
cmp
inc
sub
xor
stos
stc
fmul
push
cli
cs
sbb
pop
ds
adc
xor
push
repz
xor
or
fwait
shl
out
sub
or
jno
cmps
call
(bad)
fxch
xchg
mov
cmps
dec
rcl
dec
aam
inc
mov
mov
imul
push
xchg
sub
mov
pop
mov
dec
lods
sub
outs
fcomp
daa
xor
out
scas
xor
xchg
adc
loope
xchg
mov
xor
gs
stc
std
cmps
pop
ficom
or
call
mov
rol
fist
sub
mov
jmp
mov
mov
jne
inc
rcl
xor
inc
lods
dec
cmp
in
push
jg
(bad)
xor
cmp
inc
scas
add
inc
(bad)
jo
sbb
pop
push
mov
xor
xor
cmp
add
push
push
sar
mov
fsubr
stos
pop
and
mov
test
dec
xchg
mov
xor
psubb
out
xchg
addr16
je
mov
(bad)
lods
pop
mov
imul
jp
call
leave
(bad)
sub
xchg
push
push
fsub
jle
xor
in
out
mov
into
sub
repz
add
xchg
scas
test
in
in
daa
dec
inc
js
shr
shl
fimul
inc
or
mov
sbb
xor
out
sub
sbb
xchg
push
daa
test
jb
push
ins
or
sbb
test
adc
mov
add
pushf
mov
sbb
repnz
loopne
adc
ror
pushf
in
mov
adc
xlat
(bad)
jmp
loop
fs
aam
push
out
mov
enter
sub
sbb
gs
fs
in
push
jo
in
dec
popa
push
xchg
mov
in
loope
mov
fimul
in
fidiv
loopne
sbb
fdivr
push
out
jl
fs
mov
fwait
jae
sbb
sbb
je
mov
cmp
push
push
xor
jle
lds
pop
mov
shl
outs
(bad)
jle
mov
test
push
shr
sbb
xchg
dec
(bad)
das
adc
aaa
push
sbb
jae
sbb
sub
sti
xchg
neg
push
cmps
stos
xchg
mov
sbb
push
cmp
push
retf
add
shl
mov
fwait
cld
xchg
(bad)
(bad)
cwde
adc
fnstsw
(bad)
pop
ss
inc
pop
jo
stos
imul
jns
inc
mov
pop
aad
jge
cli
or
mov
call
sub
xor
jae
adc
les
dec
icebp
or
test
push
pop
jae
dec
jl
into
push
sub
dec
mov
mov
out
push
dec
inc
in
xor
sbb
mov
mov
sub
push
jae
fwait
pusha
add
movs
ucomiss
mov
ror
(bad)
xchg
lods
jns
jmp
lods
and
lock
pop
mov
push
out
or
pop
les
inc
mov
std
iret
mov
push
clc
cwde
cdq
cmc
lods
int
dec
jecxz
dec
imul
les
and
je
cmp
nop
daa
pop
and
je
test
xor
repnz
mov
outs
scas
pop
out
stos
std
dec
repz
dec
hlt
pop
imul
hlt
aad
xor
adc
outs
sbb
icebp
mov
std
sub
and
std
div
inc
jg
cmc
jge
test
dec
(bad)
out
fcomp
pop
or
ss
jnp
mov
ins
mov
jmp
and
test
repnz
jecxz
adc
push
xor
jb
lods
outs
sbb
dec
out
dec
push
loope
pushf
out
xchg
popa
movs
into
test
out
and
xlat
jecxz
pop
arpl
or
push
adc
test
fst
jmp
cli
loopne
cmc
mov
retf
mov
fisttp
xor
or
xchg
sub
retf
jnp
push
int3
into
popf
ss
sub
out
mov
and
xor
fcmovne
xchg
enter
jae
mov
pop
sahf
sbb
sbb
cli
popa
pop
cmp
mov
aam
or
or
fadd
jmp
cmp
cli
cdq
call
lods
int
mov
jae
jne
jg
adc
repz
ins
sbb
je
test
or
mov
xor
adc
mov
dec
add
xchg
outs
xor
pop
xor
mov
(bad)
imul
xor
aaa
pop
push
lods
pop
sbb
imul
xchg
popf
jno
pop
(bad)
into
enter
int
dec
jmp
cmps
and
in
stc
jg
push
repz
es
cmp
lock
inc
scas
sub
sbb
cs
shl
mov
lods
arpl
jmp
fwait
adc
imul
cld
and
pop
loop
imul
sahf
add
in
xchg
mov
inc
imul
test
or
add
rol
mov
mov
pop
bound
pop
sub
push
mov
int
call
in
or
sbb
stos
not
mov
adc
inc
inc
push
xor
xor
cmps
xor
add
mov
jmp
inc
ret
sbb
push
dec
and
aad
inc
jmp
dec
call
aam
lock
cmp
ins
mov
(bad)
sub
cmp
call
ret
enter
xor
xor
or
cmps
lahf
shl
mov
rol
lds
push
iret
xchg
push
xor
mov
or
dec
sub
jecxz
jae
test
xchg
imul
add
inc
lock
or
lahf
adc
adc
retf
ret
add
jmp
mov
xchg
aaa
dec
xor
sti
in
cs
xadd
and
or
mov
loop
dec
push
sti
add
sbb
repz
adc
sbb
arpl
inc
mov
pop
scas
pop
cmp
ret
(bad)
loop
adc
test
and
mov
or
add
mov
call
and
pop
xor
aaa
aaa
add
add
mov
push
jecxz
push
nop
mov
test
fcmovbe
movs
inc
test
shl
pop
sbb
stos
mov
call
jnp
cmp
or
fsubr
int
mov
sar
out
in
or
xor
fs
outs
adc
jmp
cmp
cmp
cmc
aam
int3
in
pop
aam
pop
fs
and
fist
or
xor
lock
xor
jo
push
or
lds
sub
and
mov
and
adc
push
(bad)
imul
dec
push
int3
aam
fsubr
test
adc
xor
lods
(bad)
loope
sbb
jo
cmps
stc
adc
nop
rol
cmovg
adc
lock
add
pop
leave
push
repz
hlt
scas
sub
out
pop
cmp
movs
outs
mov
mov
sahf
ins
and
retf
fimul
sbb
jne
aaa
or
jl
test
jno
push
push
arpl
or
mov
add
out
test
xchg
pushf
pop
fnstsw
cmp
fs
add
sub
mov
sbb
out
ret
pop
arpl
ss
aad
mov
mov
cmp
push
dec
and
cmp
jbe
test
push
loope
enter
and
cs
outs
push
(bad)
in
push
jmp
pop
dec
sub
adc
icebp
scas
dec
ins
push
in
mov
loop
(bad)
sbb
mov
ror
push
cmps
cmp
push
dec
outs
imul
ret
out
pop
scas
xchg
iret
test
popf
and
fmul
cli
xor
push
jl
adc
cmc
or
outs
out
cmc
xchg
lods
push
hlt
mov
push
jnp
mov
into
xor
mov
out
dec
xor
mov
ret
std
out
and
pop
sti
popa
dec
loopne
mov
inc
adc
sub
xchg
cld
ret
popf
ins
jmp
jle
pop
dec
push
adc
and
push
cwde
outs
or
cwde
fbld
xor
daa
mov
mov
jb
xchg
jle
into
rcr
mov
cmp
push
or
mov
xchg
push
or
sbb
add
push
xchg
xchg
int3
repnz
call
adc
jne
mov
xchg
mov
inc
stc
xchg
cmp
mov
ins
aam
xor
jle
das
shr
push
xor
shl
fsubrp
xor
repz
adc
xor
sub
or
mov
adc
out
into
ins
out
push
dec
pusha
jle
in
rol
adc
sbb
inc
cwde
out
or
ror
pop
lods
jge
int
stos
adc
imul
fbld
jle
push
nop
test
adc
sti
in
aas
rep
out
test
(bad)
xor
jmp
jbe
repz
push
adc
int
xchg
dec
les
xchg
ror
jno
pop
test
test
inc
in
jb
test
push
call
xor
ins
mov
dec
out
xor
xorps
out
mov
ret
sub
jae
pop
or
adc
mov
imul
aam
jecxz
int3
aad
push
ret
sub
and
sub
cld
cmp
rcr
cmp
js
movs
shr
out
xchg
cmp
aaa
xor
jne
aam
je
ins
out
jmp
jecxz
loop
retf
xchg
sahf
repz
imul
pop
leave
mov
add
inc
(bad)
sahf
enter
inc
cs
mov
int3
int
sbb
mov
or
mov
loop
xchg
retf
ss
xchg
xor
scas
jl
mov
xor
cmc
cmp
inc
aaa
bound
add
dec
or
sbb
xor
dec
clc
lods
xor
adc
pop
mov
loope
in
dec
in
mov
stc
and
dec
call
push
mov
popa
out
pop
push
pop
pop
jg
ja
adc
or
adc
xchg
push
rcl
ins
mov
push
es
sahf
test
sbb
iret
jae
push
call
push
inc
adc
and
lea
inc
inc
dec
cmp
(bad)
scas
xchg
add
cmp
adc
pop
popa
mov
pushf
fwait
jns
ins
dec
mov
mov
repnz
das
repz
dec
push
adc
cmps
imul
mov
and
mov
int
dec
pop
jae
enter
push
(bad)
bound
xor
and
bound
jo
in
xor
dec
pop
sahf
jne
cli
mov
pop
aaa
out
xchg
rcr
mov
in
int
(bad)
loop
push
movs
jl
aad
sti
pop
inc
mov
dec
mov
out
cmc
xchg
stos
fsub
xchg
mov
xor
cmp
sub
push
aaa
movs
dec
lock
fs
jle
sub
sub
push
clc
das
xchg
or
je
dec
fdiv
xor
jmp
jmp
test
jns
xchg
daa
cmps
mov
xor
outs
xor
adc
das
call
and
mov
popfw
pop
test
call
pop
pop
xchg
iret
or
push
data16
dec
inc
pop
and
mov
test
cmp
add
fwait
pop
jecxz
imul
and
push
xchg
pop
stos
adc
dec
xor
(bad)
cmp
add
dec
mov
call
jle
test
nop
pop
push
test
(bad)
ins
push
pusha
js
sub
loopne
in
sti
ss
cmp
daa
pop
xor
(bad)
scas
cmp
add
in
das
push
xor
rcr
lock
loopne
xchg
xchg
mov
stos
repz
pop
lahf
cld
pop
sbb
dec
push
jnp
or
(bad)
lds
jmp
cwde
cmps
sub
and
mov
cmp
fdivr
ror
sbb
dec
hlt
xchg
jp
cmps
rcr
sub
bound
jmp
jne
and
or
test
add
mov
xchg
sbb
int
dec
in
test
test
sbb
mov
sub
pop
popf
push
ffreep
test
in
xchg
lods
push
jp
outs
lods
pop
(bad)
in
jnp
sbb
xchg
add
cmp
mov
bound
pop
gs
retf
sbb
jmp
xchg
push
ficom
mov
lds
push
pop
add
shr
pop
or
test
test
popf
repz
adc
frstor
inc
arpl
pop
sub
push
das
outs
jl
mov
fstp
fsub
mov
daa
xchg
mov
add
mov
inc
mov
iret
mov
and
mov
cmc
adc
test
xor
pop
sbb
into
dec
test
fs
add
in
movs
jno
inc
ins
addr16
pop
outs
dec
pop
jmp
sti
and
fs
enter
xor
fnstsw
cmp
(bad)
mov
aam
xchg
sbb
sbb
loopne
data16
sbb
outs
cmps
dec
pop
test
call
cmps
ficomp
cli
sahf
aaa
out
int3
push
out
sar
dec
jg
or
pop
push
pop
fidiv
les
or
repnz
jnp
sub
jecxz
or
pop
push
push
cwde
xlat
(bad)
int
cmp
dec
cli
inc
bound
addr16
fwait
loop
push
sub
(bad)
cli
lds
push
outs
push
push
push
pop
mov
dec
adc
addr16
inc
mov
aam
mov
cmp
dec
imul
stos
lahf
push
lahf
cmp
cmp
out
pop
dec
aas
pop
fisttp
leavew
pop
or
(bad)
ins
add
cmp
dec
cwde
fbld
pop
or
jb
adc
push
pop
adc
fs
lock
dec
dec
push
mov
shr
jecxz
cmps
mov
stc
ret
icebp
jl
dec
adc
xchg
(bad)
scas
inc
fdiv
fwait
jl
mov
push
or
dec
xor
imul
(bad)
mov
pop
adc
les
xchg
cmp
pop
leave
shl
pusha
in
fdivr
loop
and
aas
lahf
mov
imul
jne
shl
cmp
out
lds
sbb
xchg
jle
pop
ret
retf
cmc
cdq
call
jbe
jecxz
dec
mov
ror
repnz
(bad)
int3
cmp
iret
mov
add
xchg
push
pusha
jb
pop
jg
jg
pop
mov
push
pop
call
pop
iret
push
test
stos
test
cwde
je
push
and
xor
mov
ss
add
or
xor
or
(bad)
loop
lods
in
mov
dec
lds
jmp
lahf
inc
hlt
xor
cmps
ins
or
push
clc
inc
inc
jns
xor
je
pop
(bad)
mov
jno
mov
lock
xchg
mov
push
cmp
mov
jmp
jno
arpl
aam
vphaddbw
out
das
or
add
push
ds
add
enter
jmp
test
or
jne
pop
mov
aas
mov
cmps
jcxz
call
cmp
mov
jmp
inc
jo
sbb
jl
sub
sbb
fsub
push
xchg
ja
xor
sub
dec
data16
dec
mov
dec
in
in
push
jle
imul
shl
stc
pop
js
std
push
sahf
add
cmp
and
int
in
adc
ss
adc
addr16
sbb
inc
or
inc
pop
sub
mov
jns
jecxz
out
pop
xchg
int
fisttp
lds
mov
das
sub
xor
ror
add
mov
ss
(bad)
scas
mov
lods
xor
jae
add
retf
dec
adc
jne
cmps
pop
inc
cmp
or
or
jle
lea
ss
jnp
and
iret
pop
loope
sbb
or
mov
cli
inc
(bad)
pop
inc
jo
les
push
frstor
inc
fcomp
pop
add
adc
sub
cmp
mov
ins
xchg
mov
repz
pop
mov
scas
arpl
inc
(bad)
sti
mul
jg
test
inc
mov
mov
xchg
in
mov
jp
(bad)
push
shr
cmp
sbb
jmp
jmp
into
cmp
in
das
inc
mov
jp
mov
retf
and
aas
pop
xchg
mov
aam
call
or
in
push
mov
loope
out
add
push
test
mov
and
push
iret
xchg
sbb
pop
jbe
dec
pop
(bad)
loop
dec
fcmovnu
clc
iret
cs
add
jns
jae
mov
test
rcr
stos
mov
mov
in
mov
cmp
ror
xchg
adc
pop
mov
jg
sbb
mov
mov
and
ss
inc
pop
sub
pop
or
adc
jle
inc
out
shl
sbb
movs
pop
push
stos
test
xor
imul
xchg
xchg
frstor
(bad)
retf
aas
rcr
add
push
inc
scas
cmp
loope
sbb
jecxz
cmp
jnp
push
mov
mov
out
add
outs
js
mov
lods
mov
aad
jnp
mov
pop
iret
xchg
inc
sub
loopne
xchg
(bad)
cmp
outs
inc
pop
out
pop
inc
and
mov
xor
outs
and
adc
lahf
lods
sbb
lods
popa
pop
addr16
push
aas
sbb
cdq
cmp
fild
mov
jmp
and
lods
ss
ins
(bad)
stc
cmp
xchg
pop
and
or
mov
mov
ss
cdq
stc
ss
std
(bad)
stc
mov
fs
or
imul
mov
xor
ja
mov
and
cmp
daa
stos
push
les
popa
inc
jp
pop
popa
sar
sub
jp
mov
ins
mov
mov
or
mov
mov
dec
iret
or
call
mov
enter
or
xchg
jge
pop
mov
jecxz
and
xor
icebp
sysexit
idiv
jmp
cmps
dec
and
adc
sub
lods
mov
loop
call
adc
adc
inc
clc
out
mov
test
imul
repz
gs
pop
adc
mov
and
int
or
movs
(bad)
cli
mov
out
les
add
cwde
loopne
fild
sub
xchg
jne
sub
dec
xor
cmp
scas
dec
or
jecxz
pop
mov
inc
jg
cmp
lods
jmp
jmp
fptan
test
pop
cmp
mov
or
xor
dec
fidivr
cdq
(bad)
loop
out
and
ret
mov
jp
jnp
fdivr
mov
inc
(bad)
jnp
retf
(bad)
and
aaa
dec
int3
ss
cmp
call
mov
ins
jo
xor
and
push
shl
dec
adc
imul
call
lods
das
xor
jns
mov
imul
nop
pop
push
or
jb
jo
ins
imul
sub
sub
add
add
cdq
popf
inc
mov
js
add
pop
in
mov
cmc
imul
or
rcl
cmp
mov
fnstcw
sbb
std
sbb
scas
mov
daa
mov
sub
add
cmps
int
stos
mov
jno
imul
xchg
xor
sbb
fbstp
mov
push
mov
in
cdq
pop
mov
adc
fwait
imul
loopne
dec
cmp
out
repz
stos
fbstp
inc
mov
xchg
xchg
pushf
jmp
inc
xor
sbb
repnz
mov
ja
hlt
stos
jmp
pop
xor
mov
into
lods
xor
(bad)
cmp
dec
aam
lods
push
push
ds
sbb
nop
sbb
lods
xchg
dec
(bad)
(bad)
nop
and
push
cmp
mov
(bad)
cdq
sbb
mov
mov
xchg
dec
mov
inc
cmp
fidiv
lock
dec
xchg
mov
xchg
popf
mov
in
fisttp
outs
aam
inc
or
loopne
or
ins
lds
mov
clc
pop
xchg
(bad)
dec
jbe
or
adc
fcomp
lea
mov
lea
shl
loop
ins
add
and
mov
sbb
bound
and
push
push
xchg
shl
mov
and
xchg
int
ja
cmp
out
outs
test
mul
out
pushf
pop
cmp
jne
sub
cwde
test
aad
jmp
(bad)
fs
in
out
inc
es
and
repnz
mov
imul
les
in
aas
aas
jmp
inc
les
sar
pop
pop
jmp
jp
mov
repz
dec
sub
cmps
xor
xor
sub
jmp
mov
jge
inc
dec
nop
cld
cmp
mov
inc
mov
sbb
std
sub
aaa
or
add
popa
push
jle
(bad)
push
in
fchs
test
lock
loope
sbb
pop
or
pop
push
loope
xor
pop
je
xor
push
xchg
sub
(bad)
fstp
leave
jmp
or
pop
popf
lods
ds
pmuludq
xchg
cmp
ficomp
iret
jae
jge
add
int3
add
sub
mov
inc
dec
mul
sar
mov
fld
ror
daa
test
(bad)
test
bound
push
in
inc
sub
mov
jp
cmp
push
(bad)
cdq
jo
add
adc
add
add
push
ret
scas
cmp
pop
fnsave
js
outs
retf
(bad)
fcmovbe
xchg
mov
aaa
ins
loopne
inc
inc
aas
pop
mov
(bad)
sub
cmp
test
cdq
sbb
push
hlt
lahf
in
adc
pop
loopne
sbb
push
mov
pop
sub
test
cdq
fild
sub
pop
test
gs
sbb
(bad)
pop
mov
inc
test
fs
jns
jb
jl
jecxz
adc
sahf
cmp
cmps
dec
push
ja
ja
cmps
jmp
repz
aad
mov
lea
shl
fucomi
call
ret
test
aam
mov
mov
fisubr
mov
jecxz
jle
mov
les
fwait
xor
cmps
xchg
mov
adc
int3
add
and
fld
cmp
jns
jle
enter
add
pop
and
stos
cmp
stos
xchg
mov
movs
inc
xlat
xchg
pop
int
mov
adc
clc
mov
cmp
sbb
int3
sbb
fnstsw
stos
xchg
dec
cmp
sub
jb
(bad)
not
pop
dec
inc
scas
jmp
shl
and
in
mov
sub
cmps
sub
js
sbb
movs
push
mov
in
out
or
pop
out
mov
shr
xchg
dec
dec
pop
sub
add
cdq
retf
xor
data16
sub
sbb
retf
jl
imul
mov
sub
and
mov
jb
retf
pushf
mov
mov
pop
(bad)
pop
ja
pushf
les
fidiv
adc
inc
rol
ds
mov
cmp
lahf
add
xor
cs
test
sbb
mov
call
in
or
mov
xchg
pop
jle
lea
aad
add
mov
mov
sub
xor
dec
in
aaa
sub
movs
jge
mov
aam
(bad)
(bad)
mov
dec
dec
dec
(bad)
(bad)
mov
imul
push
sub
mov
mov
xchg
psubsb
ret
test
ja
scas
add
mov
popf
xchg
or
aam
fadd
inc
sbb
xchg
xor
jno
mov
mov
sbb
popf
xor
cmp
aaa
les
in
xor
xlat
cdq
jnp
adc
adc
addr16
dec
push
ds
dec
and
rcl
(bad)
fwait
mov
push
dec
stos
mov
push
inc
add
mov
mov
stos
test
xor
movs
or
imul
xchg
lock
pop
push
sahf
jo
and
lea
test
pop
stos
push
dec
push
out
pop
cmp
and
fistp
and
ins
jg
aad
xchg
lods
popf
mov
mov
push
sbb
shl
inc
push
fst
popf
pop
test
cmp
xor
adc
or
mov
fsubrp
sbb
pop
shl
popf
pop
sub
pop
inc
add
sub
pop
shl
adc
mov
out
in
xchg
arpl
push
stos
fcmovnu
mov
dec
adc
inc
outs
sbb
mov
std
cmps
ds
or
call
lds
push
jno
(bad)
out
dec
int
xor
or
leave
pop
mov
call
mov
rol
xor
aas
cmp
imul
inc
cld
enter
retf
or
mov
adc
push
mov
movs
popf
or
xor
sub
dec
int
mov
cmp
xchg
das
xor
fidiv
pop
sahf
out
rcl
mov
ds
and
and
mov
cmps
inc
pushf
daa
add
ds
fidivr
inc
jle
scas
ss
test
mov
popf
push
sub
xor
mov
cmp
es
cmp
sub
in
and
movs
adc
sbb
shl
jbe
mov
jge
cli
mov
pop
rcl
inc
enter
int
das
fs
loopne
scas
loop
fwait
xor
xchg
es
jae
ins
cmp
adc
cmp
enter
sbb
aas
test
mov
jmp
fcom
xchg
stos
or
data16
sub
rcl
push
push
(bad)
sub
sbb
mov
test
shl
movs
dec
sub
cld
dec
push
sub
cld
adc
ins
push
push
mov
rol
call
pushf
std
sbb
mov
push
adc
cmp
test
fmul
sub
and
jbe
jp
pop
sbb
mov
fucomp
test
xchg
cmp
adc
xor
pop
sub
aad
mov
push
mov
xchg
adc
xor
mov
mov
adc
ja
into
icebp
test
push
inc
outs
mov
jbe
mov
push
out
sbb
pop
jecxz
in
cmp
(bad)
shl
and
mov
jno
mov
inc
rcr
ds
and
cmp
sub
jecxz
sub
xchg
cld
jo
inc
jmp
push
je
mov
in
xchg
sbb
es
mov
scas
dec
or
mov
hlt
fbld
mov
sbb
(bad)
adc
mul
jg
xor
outs
push
lods
mov
popa
cs
ret
jge
inc
xchg
mov
push
gs
aam
inc
test
mov
lods
xchg
js
aam
jns
xor
mov
xor
mov
mov
ins
mov
mov
mov
xchg
in
stos
push
mov
inc
ins
stos
add
sbb
mov
leave
dec
mov
enter
inc
out
or
clc
xor
pop
jp
mov
pop
imul
out
adc
imul
movs
lods
xchg
aam
mov
or
or
ret
ins
push
mov
clc
pop
xchg
mov
dec
test
sub
daa
inc
jae
mov
push
sahf
mov
test
divps
sbb
jle
jmp
inc
jge
jbe
cmp
mov
data16
mov
sbb
xchg
mov
jmp
aaa
das
or
sbb
or
data16
(bad)
sub
mov
ins
push
cld
adc
(bad)
push
dec
push
sti
loopne
lods
adc
mov
pop
jg
dec
das
rcr
cmp
ins
les
dec
fisub
xchg
out
and
popa
mov
std
and
cmps
pop
inc
xchg
cdq
push
sbb
outs
sub
outs
out
hlt
sub
xchg
leave
add
jbe
std
mul
data16
jno
pop
mov
ss
xchg
mov
or
ss
mov
add
jge
push
arpl
cmps
addr16
aad
push
fwait
bound
aas
cmp
jg
ja
dec
jg
xchg
int3
fidiv
add
mov
push
dec
mov
pop
and
lods
sbb
test
sub
ret
mov
aaa
and
pop
in
dec
inc
pop
pop
adc
adc
jge
push
lock
jno
test
xchg
cwde
xor
add
fnstsw
sbb
cmp
adc
inc
vsqrtss
cdq
clc
xchg
push
sti
mov
mov
lds
xor
lock
adc
sbb
xor
rcl
push
push
cmp
pop
out
fdiv
and
aad
xor
mov
or
or
adc
jno
dec
mov
or
add
mov
hlt
or
mov
or
sub
test
or
or
or
ret
into
fidivr
outs
fcom
dec
shl
btr
add
or
out
push
mov
scas
jne
sbb
jge
shl
cwde
cdq
imul
push
stos
adc
inc
(bad)
mov
mov
and
lods
mov
adc
(bad)
(bad)
dec
push
xchg
inc
mov
cdq
loope
ficom
dec
std
test
ret
push
test
fiadd
pop
mov
mov
mov
mov
pop
mov
jne
mov
movs
dec
fs
mov
push
mov
pop
and
aas
dec
mov
loope
sub
dec
pop
cld
and
or
cmp
je
mov
sub
ror
mov
or
dec
and
push
retf
xchg
imul
enter
sbb
or
loopne
push
mov
sub
scas
xchg
imul
test
mov
aas
xchg
aaa
mov
mov
call
push
jbe
cmp
scas
and
adc
test
clc
retf
inc
fnstsw
xchg
cmps
loopne
or
aad
cmp
test
or
dec
add
or
js
fs
jmp
jne
jmp
outs
jnp
rcl
adc
mov
sbb
js
and
repz
xchg
add
cmp
cli
adc
dec
ja
stos
adc
ins
lock
outs
jecxz
int
dec
push
loopne
push
add
loopne
adc
retf
mov
out
call
jbe
jns
cmp
xchg
das
jne
dec
ja
es
aad
xor
cmps
jmp
sub
adc
in
int3
and
add
outs
das
cmps
xchg
in
rcl
ret
mov
pop
push
pop
add
and
(bad)
fstp
xchg
lock
and
pop
cmp
xlat
push
mov
add
mov
pop
in
in
add
inc
xor
sbb
lock
push
mov
pop
stos
inc
inc
mov
xor
push
sti
sar
push
sbb
repz
add
mul
mov
test
fistp
mov
popa
rol
in
jo
mov
sbb
inc
add
(bad)
in
int
sti
les
enter
mov
ins
dec
shl
dec
cmp
mov
and
sbb
in
xchg
pop
push
xchg
inc
mov
push
mov
mov
sti
jmp
add
mov
dec
pusha
xchg
loope
mov
cdq
mov
xor
mov
enter
pop
sbb
fs
pop
dec
pop
ins
rcr
call
jp
adc
data16
cli
dec
xchg
test
dec
stos
dec
js
or
xchg
mov
pop
mov
sbb
jno
push
add
cmp
mov
not
sbb
inc
(bad)
shr
repz
mov
pushf
das
stos
cwde
outs
lea
gs
cmc
mov
cmc
iret
xchg
pop
mov
xor
dec
jmp
stos
aam
push
rol
xchg
sbb
into
xchg
fisub
adc
mov
xor
add
mov
out
fadd
cmps
pusha
or
jae
jmp
jl
mov
add
imul
sahf
gs
imul
imul
js
cmp
fiadd
in
sub
mov
pop
mov
in
daa
mov
jmp
rcl
int
pop
test
mov
jne
jb
loope
dec
aam
leave
int3
pusha
cwde
imul
xchg
in
stos
dec
pop
out
mov
dec
sar
inc
ret
retf
aam
cmp
clc
sbb
cmp
mov
sbb
fist
inc
ficomp
lock
sub
gs
into
jge
xor
iret
push
aam
cwde
popa
ret
repnz
popa
cmc
scas
stos
enter
xchg
mov
push
mov
lea
aas
data16
mov
cmc
adc
mov
inc
jp
pop
repnz
stc
cmp
test
dec
sub
ret
mov
mov
add
jmp
cwde
lahf
rcl
arpl
cmp
aaa
cwde
sub
sbb
push
or
mul
int
fs
cmp
add
mov
or
imul
mov
cmp
shl
sbb
les
retf
jg
pop
sbb
mov
std
std
ins
call
iret
xchg
xor
mov
test
addr16
and
ds
push
es
mov
pop
jge
sub
jb
cli
ja
sub
inc
retf
mov
les
push
inc
sbb
cdq
xchg
ror
popf
sar
inc
sub
sub
mov
jae
pop
mov
retf
jo
cmp
adc
test
adc
out
jnp
std
enter
movs
pop
add
push
mov
sti
addr16
cdq
xor
arpl
xchg
iret
call
call
shl
sub
and
pop
jbe
lea
retf
pop
outs
in
fld
push
addr16
xchg
shl
imul
lock
push
mov
jmp
sbb
ins
push
mov
cmps
sbb
adc
ja
jbe
mov
xchg
out
jns
xchg
out
cmp
jge
push
add
scas
push
(bad)
aas
movs
and
sub
cmc
mov
xor
std
add
fsubr
cdq
pop
sahf
cmp
xchg
mov
pop
sar
sbb
imul
mov
dec
movs
dec
mov
fwait
mov
xor
retf
aas
sbb
imul
out
xchg
pop
(bad)
fwait
icebp
shl
inc
(bad)
leave
js
or
scas
das
lds
cld
mov
(bad)
(bad)
add
ds
test
pop
sub
push
ret
das
stos
jmp
imul
js
cmp
sub
fadd
xchg
mov
pop
add
retf
fadd
scas
and
inc
mov
dec
mov
pop
inc
cmp
aam
clc
fcomip
jmp
lahf
pusha
dec
cs
jmp
(bad)
mov
pop
cmp
(bad)
cmps
pop
pop
push
mov
cmp
rcl
neg
mov
mov
dec
sub
ds
(bad)
mov
mov
pop
sub
clc
mov
pop
(bad)
push
aaa
xor
sub
ins
std
sub
and
mov
sub
sti
imul
imul
lea
std
jnp
xchg
icebp
adc
xchg
rcl
and
loopne
adc
push
clc
xchg
ins
jno
jge
and
xor
scas
cli
mov
sbb
xor
dec
add
outs
pop
sub
jae
hlt
imul
inc
or
inc
out
add
sbb
cld
cli
loope
pop
jmp
inc
retf
mov
mov
push
jae
or
dec
jb
pusha
or
ss
inc
enter
and
sahf
(bad)
fild
xchg
inc
fiadd
neg
add
(bad)
aam
push
arpl
pop
cld
test
pop
loope
xor
jle
in
and
(bad)
repnz
mov
daa
xchg
jns
cld
and
shr
fs
add
inc
adc
push
mov
cmpxchg
xor
in
xor
xor
mov
jne
movzx
cmps
push
test
xor
sbb
pop
xchg
jo
pop
xchg
stos
les
ins
pop
sbb
jns
in
push
push
or
pop
or
mov
std
push
xor
dec
cmp
ins
mov
adc
sti
dec
int
dec
lds
xor
lock
jnp
jmp
test
jmp
mov
cmp
fucomp
dec
fisubr
push
mov
(bad)
cmc
scas
cwde
mov
and
jo
pushaw
dec
retf
adc
add
push
add
adc
dec
xchg
inc
cmp
lods
xchg
push
call
repz
sahf
int
sub
dec
movs
push
ja
dec
fwait
push
shl
pop
ret
push
stc
lahf
jo
adc
and
leave
push
mov
jmp
lea
jmp
call
jo
or
push
mov
prefetcht0
push
das
retf
mov
mov
xor
mov
mov
ins
cld
inc
int3
push
xor
movs
jle
mov
rcl
pop
popa
aas
and
fsubr
push
imul
int
dec
jmp
jbe
mov
jbe
push
xchg
mov
mov
lock
stos
dec
sbb
outs
cmps
pushf
out
mov
inc
leave
push
push
ror
loop
ficom
aam
lods
imul
minps
nop
je
sbb
bound
inc
mov
mov
gs
dec
pusha
adc
outs
shr
jo
js
xlat
sub
outs
pop
sbb
test
xor
pop
mov
cmp
out
lock
push
cwde
out
adc
mov
push
dec
push
popf
call
adc
ret
jle
sbb
scas
iret
push
pop
sahf
and
neg
mov
ds
push
je
(bad)
jo
mov
imul
aaa
xchg
fld
fimul
add
xchg
push
arpl
add
push
mov
(bad)
(bad)
into
rcl
ret
mov
jg
or
add
mov
add
pop
ja
push
push
cmp
pop
pusha
xchg
dec
fnstenv
cmp
fs
sar
dec
dec
lods
mov
shr
add
sub
test
or
mov
cmp
or
in
push
sub
mov
lods
icebp
icebp
mov
and
pop
add
pop
sbb
xor
icebp
xor
outs
fs
jge
cmc
cmp
pop
fwait
(bad)
or
jmp
out
cs
fistp
adc
(bad)
sub
aaa
ret
mov
stc
dec
jo
dec
ja
jmp
xchg
add
imul
xchg
mov
xlat
imul
dec
xchg
jno
shr
neg
out
stc
cs
xlat
pop
sti
clc
retf
fcomi
movs
call
lea
nop
repz
fidiv
adc
jmp
xor
fdivr
out
cld
pop
(bad)
hlt
test
dec
add
in
cmp
push
cmp
mov
scas
int3
movs
xlat
clc
mov
ds
mov
push
pop
not
sub
dec
ret
call
pop
and
jmp
inc
scas
adc
xor
push
std
adc
nop
sbb
xor
in
js
xor
scas
in
repnz
pop
adc
into
ret
add
sar
xchg
lods
mov
je
cmp
push
sbb
mov
test
cmp
aad
data16
bnd
sub
xchg
push
mov
push
lods
xor
sbb
fucomp
imul
adc
out
das
push
adc
and
push
ss
mov
pop
push
or
out
cmp
jnp
adc
nop
aad
(bad)
and
into
dec
or
xchg
mov
add
mov
dec
retf
outs
push
adc
fimul
dec
cmp
pop
call
ret
jnp
mov
iret
xlat
pop
outs
ficom
xor
mov
cmp
fwait
jo
call
push
push
sti
cmp
jmp
pop
clc
mov
fcmovnu
mov
or
addr16
aam
jo
add
or
dec
xor
or
or
stc
add
xchg
call
adc
mov
jle
in
add
mov
fwait
(bad)
adc
rcl
retf
js
shl
sbb
out
mov
test
out
adc
popf
mov
stc
mov
mov
inc
adc
xchg
(bad)
mov
pop
add
(bad)
sbb
xor
xor
clc
mov
or
push
in
or
pop
pop
pop
mov
sub
jb
xor
dec
retf
xchg
pop
arpl
dec
xor
pop
mov
push
mov
adc
adc
movs
outs
inc
mov
dec
xchg
lods
cmp
lods
mov
sbb
movq
stos
idiv
prefetch
xor
pusha
cmp
sar
retf
and
and
addr16
dec
adc
inc
pop
xchg
dec
add
sub
rcl
push
cwde
mov
mov
nop
shl
call
cmp
mov
in
and
pop
push
aad
sbb
mov
or
xor
sbb
sub
icebp
shl
cmp
xor
(bad)
mov
cmc
sahf
lods
int
sbb
mov
shl
les
sbb
outs
mov
pop
call
je
xchg
xrelease
xchg
mov
idiv
mov
leave
(bad)
add
(bad)
mov
cmc
out
inc
dec
push
int3
xor
or
scas
test
and
test
nop
inc
push
mov
add
pop
jnp
cmp
dec
pop
fabs
sub
mov
test
or
mov
test
imul
imul
cmp
cdq
out
(bad)
js
pop
mov
lahf
mov
neg
mov
ja
mov
mov
or
push
mov
or
pop
jbe
dec
xchg
pop
push
ret
cdq
ror
shl
xor
xor
fs
pushf
xor
stos
sbb
ret
mov
iret
jmp
add
faddp
pop
pop
fst
pop
mov
popf
js
xor
shl
fidiv
sbb
xor
aas
push
movs
xchg
daa
push
and
enter
sbb
xchg
nop
xchg
or
dec
pop
es
inc
jne
dec
sbb
dec
dec
jne
and
jne
mov
das
scas
or
fild
dec
adc
xor
sbb
xor
ds
cmp
sbb
scas
xchg
lahf
jg
push
ror
cwde
add
xchg
xor
dec
not
repnz
or
jae
mov
bound
pop
inc
rol
and
sbb
add
fwait
sbb
popa
pop
mov
adc
aas
push
push
mov
dec
imul
test
cs
adc
xchg
das
lods
hlt
pop
adc
int3
xchg
fwait
mov
jns
int
lea
icebp
sub
jmp
test
lods
cmps
jle
push
sbb
cld
jae
out
jmp
fs
push
cmps
adc
js
ret
and
sbb
dec
out
lea
add
cmp
push
mov
cmc
push
pop
call
add
fld
adc
shr
push
cld
dec
enter
fld
dec
ins
loopne
outs
push
sbb
mov
sti
dec
lea
hlt
mov
push
hlt
aad
int
push
sbb
adc
fisttp
xor
outs
out
not
jmp
cmc
mov
sub
nop
jne
sar
jge
ss
mov
or
mov
mov
pop
cld
outs
repnz
fcomp
push
rol
test
adc
sub
lods
sbb
loopne
push
pop
arpl
xchg
loope
out
data16
(bad)
adc
mov
inc
movs
xor
fild
es
cli
ja
sar
(bad)
pop
sub
or
and
cmps
pop
das
or
xchg
cmp
cmp
retf
mov
jmp
repnz
mov
xor
mov
int
fmul
call
gs
jbe
jbe
mov
xchg
or
mov
int3
iret
or
xchg
dec
fld
dec
xor
mov
mov
call
or
inc
mov
mov
lock
mov
cmp
xor
jb
sub
mov
dec
test
bound
mov
pop
jmp
sti
rcr
sti
scas
sub
je
call
sahf
sbb
lock
outs
(bad)
cmp
xchg
push
sbb
pop
xor
es
or
addr16
movs
sar
stos
pop
lock
loope
dec
push
cmp
mov
ret
idiv
mov
inc
and
pushf
mov
fadd
in
enter
mov
inc
sar
mov
out
js
and
fistp
xchg
mov
mov
pop
xor
call
imul
mov
les
ja
mov
sub
dec
sub
mov
icebp
or
xchg
cmp
jb
and
mov
les
mov
jno
es
fisubr
add
xchg
fidiv
jg
xchg
or
mov
aaa
fld
nop
jns
push
adc
inc
mov
sbb
or
dec
in
inc
sub
nop
aam
or
mov
push
nop
pop
xor
(bad)
rcl
mov
mov
popf
adc
sub
xchg
mov
sti
and
inc
std
pusha
sti
in
mov
outs
dec
jo
not
cmp
int
and
in
pop
and
push
gs
das
test
ror
cmp
add
inc
xchg
push
mov
cmp
jmp
shl
push
mov
xchg
fwait
in
(bad)
xchg
inc
jb
inc
inc
fdivr
pop
push
push
fisttp
sbb
and
sbb
dec
ins
push
jg
icebp
popf
sbb
(bad)
jle
bound
loop
ins
push
mov
stc
fst
cli
push
js
cwde
rol
mov
mov
or
rol
sbb
ret
push
aas
adc
loope
inc
mov
sub
xchg
repz
cs
pushf
mov
es
and
test
inc
mov
mov
outs
jp
push
out
pop
mov
pop
adc
cli
dec
movs
dec
test
mov
dec
mov
xor
in
add
mov
xlat
add
dec
xchg
inc
lds
cmp
loope
xchg
dec
popa
or
inc
ror
in
fdiv
mov
test
dec
ret
iret
cmp
fdivr
pop
jmp
cmps
sahf
lea
clc
xchg
mov
test
sub
std
adc
popf
sti
add
mov
xor
repz
cmp
sbb
jge
and
dec
sbb
not
aad
ins
repz
and
jnp
dec
xchg
push
push
popa
mov
arpl
jb
repnz
or
das
out
(bad)
push
pop
dec
jle
(bad)
popa
fisubr
es
add
mov
jae
push
xor
fstp
ret
inc
or
inc
aaa
jns
pop
out
cmp
sti
jbe
enter
ja
pop
aam
dec
ret
xchg
dec
jge
adc
pop
push
movs
mov
push
mov
test
call
sub
xchg
movs
dec
xor
int3
push
(bad)
push
pop
les
repnz
mov
call
mov
xor
out
mov
not
jae
cmp
repz
xor
and
sub
or
(bad)
ficom
outs
jl
mov
repnz
jmp
outs
jae
fidivr
loop
push
div
lock
jo
test
adc
dec
jbe
out
sbb
mov
rcl
retf
and
fistp
jp
pop
call
pop
mov
jl
jl
dec
mov
xchg
mov
push
fstp
or
fs
into
push
pop
bound
pop
int
or
popa
aam
cmp
mov
sub
(bad)
and
inc
xchg
outs
inc
stc
xchg
je
or
fxch
inc
jp
sti
lea
faddp
test
(bad)
add
mov
inc
pushf
xchg
mov
sub
imul
push
test
sbb
xor
xlat
loopne
in
test
add
dec
inc
dec
add
mov
leave
and
push
sar
jl
dec
stos
xlat
and
(bad)
stc
aas
dec
stc
mov
scas
jmp
mov
push
je
imul
and
or
pop
adc
inc
pop
shr
in
lds
xor
inc
fwait
dec
pop
push
jb
cmp
mov
xor
int3
fst
sub
jne
dec
dec
sahf
dec
dec
mov
sub
inc
scas
inc
cmp
mov
movs
loope
xchg
add
mov
jge
paddd
lahf
inc
xchg
mov
mov
pusha
xchg
dec
retf
imul
push
pop
dec
hlt
in
das
adc
jmp
inc
pop
sbb
cmp
sbb
mov
jae
int3
fidiv
cmp
mov
in
jle
cwde
xchg
sub
xlat
or
add
xlat
pop
aaa
aas
xchg
fidivr
dec
clc
mov
or
(bad)
stos
int3
push
cdq
mov
out
inc
imul
cmp
and
jmp
pop
loopne
cs
inc
retf
mov
mov
cdq
add
test
test
in
xor
jmp
jb
jmp
add
xor
fsub
jns
mov
mov
fdivr
xchg
and
inc
imul
dec
sub
(bad)
test
sahf
xchg
xchg
or
ds
mov
jge
add
call
pop
xchg
cmps
dec
aas
sbb
jb
add
push
fcmovb
or
push
sti
stos
out
push
pop
sub
cmp
jl
jge
cmps
adc
add
xchg
add
adc
mov
in
ins
mov
jecxz
xchg
pop
into
sbb
jecxz
add
add
mov
ja
cmp
cwde
sub
pand
std
sub
mov
out
aaa
push
cmp
mov
lods
add
mov
inc
push
and
iret
retf
or
call
(bad)
sbb
mov
js
mov
ret
call
mov
cmp
push
hlt
sub
aad
and
clc
add
cmc
xor
loopne
sbb
fld
xchg
into
jg
adc
xchg
stos
(bad)
push
std
fimul
lods
or
xchg
fmul
out
lods
pop
mov
(bad)
mov
mov
jl
(bad)
add
add
sub
jnp
sbb
dec
push
les
sbb
jl
aaa
rcr
arpl
out
inc
in
push
inc
rcl
leave
jb
or
ss
movs
(bad)
pop
sbb
iret
add
fwait
mov
cmp
sub
shl
jecxz
arpl
(bad)
pusha
cmc
sar
pop
xchg
aad
cmp
pop
loope
pop
push
mov
out
stos
sub
xor
loopne
nop
frstor
add
repnz
lock
shl
movs
mov
and
imul
call
add
(bad)
call
mov
sbb
dec
aad
add
ins
or
and
or
sub
fcom
(bad)
ins
sbb
dec
jg
sbb
clc
mov
sar
mov
out
jnp
or
iret
fistp
xchg
and
and
or
(bad)
jbe
mov
push
aas
add
mov
mov
mov
add
cmc
pop
out
lahf
retf
pop
push
sub
pop
es
test
pop
or
ret
sbb
add
repz
cmp
std
xchg
repz
mov
mov
xchg
call
dec
gs
mov
pop
mov
adc
fnstenv
add
mov
dec
adc
rcl
test
pop
xor
lods
addr16
popf
jmp
mov
pand
out
movs
lock
inc
sbb
test
push
jge
dec
or
mov
mov
lods
lea
pusha
sbb
das
push
jo
and
ins
pop
adc
fwait
mov
inc
out
and
ret
ja
outs
sahf
pop
inc
addr16
jmp
mov
shl
xchg
mov
mov
arpl
dec
mov
(bad)
ins
imul
cmovo
pushw
pop
add
dec
lods
repnz
(bad)
pop
test
or
adc
fldl2t
fs
sub
ins
add
pop
jl
mov
iret
loopne
or
or
or
fdiv
fld
sub
ins
pusha
jle
sbb
addr16
test
dec
in
retf
iret
mov
(bad)
(bad)
js
dec
jge
pushf
push
ins
stos
mov
push
mov
loop
push
add
pop
fisub
or
ror
fisubr
test
sub
push
test
fiadd
and
outs
mov
inc
sub
ror
popf
mov
adc
int
test
push
add
pop
sbb
jg
ja
sbb
mov
push
les
out
rcr
sbb
mov
sub
or
hlt
inc
lods
pop
pop
and
mov
cwde
xor
or
dec
das
inc
pop
jb
cmp
push
iret
mov
hlt
retf
inc
add
enter
fidiv
add
sbb
(bad)
les
mov
push
jno
inc
inc
icebp
or
not
arpl
test
push
bound
idiv
lods
in
test
es
aam
pop
mov
(bad)
inc
movs
fsub
cli
pop
(bad)
jnp
jbe
cmp
add
ss
add
pop
xchg
mov
and
push
inc
shl
push
lea
xchg
add
cmp
cmps
out
mov
pop
xlat
fimul
sar
adc
outs
sub
and
add
jecxz
adc
sub
or
loopne
ret
out
enter
div
leave
mov
mov
pusha
pop
imul
fwait
retf
movs
adc
dec
dec
fwait
pop
imul
cmp
cmps
sbb
pop
les
adc
or
ss
dec
clc
loope
hlt
ja
in
jmp
into
ret
mov
out
stos
jne
out
nop
xor
add
dec
lahf
xor
jmp
in
dec
lea
in
scas
adc
push
dec
popf
ins
inc
sub
push
add
pop
mov
sti
and
mov
aam
sbb
xchg
mov
fst
and
nop
mov
imul
and
lea
xchg
inc
mov
sysret
or
sub
dec
cld
scas
xchg
pop
mul
jb
gs
shl
ins
retf
loop
lahf
out
loop
ror
iret
lods
jo
adc
lock
and
inc
cmp
pop
xchg
fiadd
mov
data16
and
stc
xor
xchg
test
mov
mov
in
cmp
push
scas
jmp
and
(bad)
hlt
pop
xchg
or
or
mov
(bad)
fsub
and
sbb
sub
xchg
and
xchg
movs
aad
mov
cmp
sbb
push
inc
jns
int
sbb
loop
hlt
in
add
pop
aaa
and
mov
or
mov
inc
sub
fld
loop
mov
lods
mov
xor
adc
xlat
adc
cmp
jae
pop
scas
gs
mov
aas
jo
ins
scas
jecxz
lea
not
jmp
out
and
mov
sbb
push
bound
hlt
stos
into
iret
push
je
jno
outs
push
int
and
or
addr16
and
mov
fldenv
or
lods
xchg
fs
or
jns
outs
push
mov
pusha
iret
into
inc
pusha
cmps
push
prefetchw
sahf
push
das
mov
dec
pop
push
sbb
ss
out
and
mov
xchg
retf
cmp
iret
out
jle
xchg
dec
fwait
test
jp
fdivr
adc
push
mov
jmp
cwde
stos
mov
adc
out
fchs
mov
shr
cmps
imul
xchg
jp
pop
ror
push
scas
mov
dec
lods
icebp
leave
cmp
shr
out
lods
cmp
dec
repnz
jecxz
stos
dec
fadd
xchg
sbb
fcmovnu
retf
or
add
mov
adc
dec
jl
sbb
push
mov
les
lods
jo
mov
pop
(bad)
jns
push
xor
fiadd
push
add
repz
and
pusha
jnp
movs
repnz
je
or
inc
xchg
stc
xor
(bad)
adc
shl
jnp
idiv
jge
mov
dec
(bad)
fist
gs
sbb
fimul
inc
add
mov
imul
add
jg
push
hlt
pop
mov
dec
stos
mov
push
popf
pop
xor
std
jno
jle
cmp
les
(bad)
shr
jne
sar
(bad)
dec
jo
pushf
or
pop
and
pop
inc
bound
mov
cs
movs
push
xchg
xor
outs
arpl
sub
bound
xor
pop
hlt
clc
fwait
mov
add
scas
push
adc
scas
or
cmp
cs
xchg
push
out
retf
mov
or
(bad)
xor
fistp
jle
push
cwde
xchg
adc
mov
retf
fst
aas
subps
mov
enter
adc
int
imul
ror
sub
pop
dec
and
(bad)
fdiv
jbe
pop
call
icebp
(bad)
jle
(bad)
jmp
ins
cmp
retf
xchg
xchg
jne
jecxz
ja
sbb
ret
retf
xchg
mov
out
pop
pusha
pop
adc
cmp
dec
pop
sbb
shl
pop
inc
into
int3
or
neg
fwait
xor
mov
mov
movs
cmp
and
nop
lahf
arpl
daa
pop
jge
ret
cli
jnp
sub
pop
dec
jno
hlt
mov
mov
push
clc
mov
lock
adc
shr
push
cmp
mov
outs
xchg
aam
mov
retf
and
rol
leave
and
arpl
ss
sahf
xchg
daa
ins
xchg
inc
sbb
clc
cmp
loopne
mov
add
pusha
sub
cmps
xor
mov
int3
movs
mov
cmp
(bad)
mov
xor
mov
push
mov
dec
std
jl
es
xor
mov
inc
int
sar
push
or
leave
pop
and
js
mov
test
jb
sub
mov
leave
and
addr16
sub
cld
mov
std
pusha
outs
pop
cdq
lods
mov
cmp
(bad)
leave
xchg
retf
inc
js
xor
imul
mov
in
mov
clc
ret
rcl
pushf
mov
push
sti
mov
shl
in
jnp
cmp
ins
js
inc
xor
inc
mov
aad
(bad)
out
outs
add
fdiv
jmp
dec
pop
push
int3
cdq
sbb
inc
jl
pusha
sbb
add
mov
fs
loop
popa
or
gs
scas
xlat
jle
jg
cdq
and
rcr
in
pushf
cmp
test
fdiv
dec
and
mov
mov
movs
test
pusha
add
mov
shr
pop
out
pop
les
retf
out
cmc
mov
sahf
mov
dec
sub
out
shl
into
sub
(bad)
(bad)
cmc
fmul
pop
pop
enter
(bad)
out
cmp
fcmovbe
pop
fist
(bad)
movs
push
mov
(bad)
out
xor
shl
add
rcl
cmp
lahf
dec
sahf
push
cdq
rol
outs
push
gs
cmp
sub
daa
pusha
ret
in
cmp
inc
nop
fistp
xor
jno
sub
adc
mov
or
dec
repnz
mov
dec
call
rol
ror
push
enter
out
enter
sbb
mov
aam
faddp
adc
mov
in
aad
aas
sti
xor
ror
imul
or
mov
(bad)
sbb
mov
test
out
cld
lods
fwait
sbb
inc
adc
or
icebp
sahf
repz
repz
cmps
inc
cwde
test
sbb
loop
dec
int
mov
in
(bad)
movs
mov
mov
cmc
lds
cwde
jl
jbe
lsl
(bad)
mov
loopne
pop
pusha
mov
sub
mov
(bad)
fnstenv
mov
mov
cmp
jnp
shr
inc
repz
sbb
inc
cmc
jg
or
cmc
cmps
test
outs
xor
enter
jb
and
jno
pop
xchg
or
sbb
adc
cmps
cmp
mov
retf
out
repnz
and
pop
adc
cmp
cmp
ja
mov
mov
scas
inc
lods
int
loope
cld
mov
aas
sub
repnz
add
fadd
xchg
mov
xor
imul
inc
repz
sbb
xor
pop
(bad)
sub
cmps
stos
fs
or
and
mov
aad
or
jg
jmp
or
clc
aam
in
mov
inc
dec
jbe
lds
and
test
dec
std
scas
xchg
add
mov
or
and
or
mov
scas
pop
fidiv
test
mov
pop
mov
add
or
push
mov
adc
add
pop
mul
outs
loop
ins
push
sub
mov
cdq
(bad)
shl
loope
mov
and
bound
fstp
xor
lods
dec
mov
pop
mov
dec
sbb
push
mov
inc
mov
(bad)
mov
js
stos
xchg
mov
test
xchg
cmp
cmp
pop
cmps
sub
push
inc
cld
(bad)
jmp
inc
popa
dec
mov
ins
sbb
pusha
jge
or
sbb
dec
je
pop
test
adc
cwde
sbb
rcr
(bad)
retf
mov
mov
mov
stos
sub
xchg
pop
mov
std
fs
cli
stos
lds
not
jp
je
push
icebp
sti
pop
inc
mov
int
rcl
ror
push
ret
mov
popa
cli
ja
xchg
in
cmp
ins
ins
pop
mov
jno
outs
test
mov
mov
jge
out
call
and
mov
arpl
repz
fucomip
or
repnz
sub
rcr
or
mov
lahf
lods
mov
rcr
or
sti
pop
fs
pop
xor
shr
jb
fwait
loopne
dec
sub
mov
arpl
xchg
into
cmp
add
dec
push
es
pop
xlat
cmp
int
pop
and
add
fistp
test
repnz
mov
inc
rcr
gs
push
fbld
mov
shr
pop
adc
fidivr
imul
mov
xor
mov
aam
imul
nop
mov
xor
lea
test
rcr
dec
add
mov
ret
push
in
test
mov
xchg
movs
xchg
pop
js
enter
push
stos
rol
xor
out
repnz
mov
addr16
push
push
inc
inc
fimul
pop
addr16
jle
add
sti
mov
xor
push
cmp
ficomp
out
push
push
add
into
mov
or
adc
out
inc
inc
retf
mov
xor
cmp
push
stos
xor
mov
shl
icebp
xchg
lock
sub
(bad)
jl
(bad)
stos
into
jns
clc
stos
std
and
jl
and
neg
cmp
mov
adc
iret
sbb
xor
(bad)
(bad)
gs
adc
adc
xor
dec
jne
pusha
dec
call
mov
mov
loope
aad
push
fnsave
mov
fs
and
fstp
mov
int3
and
mov
cmps
xchg
cmp
test
int
call
xor
cwde
sub
and
jmp
jne
cmp
pop
dec
dec
scas
test
inc
cmp
cli
pusha
call
mov
adc
xor
icebp
test
repnz
imul
movs
(bad)
xchg
js
ins
mov
sbb
lock
dec
mov
sub
mov
test
sbb
test
mov
call
jle
mov
mov
repz
addr16
and
xchg
push
mov
sub
pop
rcl
cmps
or
inc
call
or
out
xor
dec
and
imul
add
mov
pop
pusha
pop
sbb
in
or
pop
hlt
cmp
sbb
sub
xor
mov
es
out
mov
movs
scas
ja
fmul
fwait
jno
ja
cli
inc
sbb
fwait
nop
add
pop
mov
(bad)
fsub
xchg
xor
cdq
nop
push
test
hlt
mov
popa
jp
inc
pop
ins
cs
pop
je
cmc
pop
(bad)
xor
retf
ret
(bad)
jno
fwait
lods
push
call
cmps
cmp
ret
mov
jo
rcr
cli
inc
enter
cmp
xchg
fcom
ror
scas
out
and
jnp
arpl
mov
(bad)
shl
mov
fdivr
add
mov
sub
aaa
rol
pop
and
iret
add
frstor
rcl
stos
sahf
sbb
pop
test
mov
lock
pop
retf
out
jmp
xor
cwde
cmp
(bad)
aaa
mov
rcl
xchg
jnp
jle
retf
out
stos
push
cmp
out
leave
adc
xchg
pop
push
inc
xchg
cmps
fwait
and
cmp
cld
adc
retf
adc
cmps
ss
sbb
mov
clc
jl
shr
(bad)
int3
inc
test
mov
call
adc
adc
and
movs
pop
or
sub
mov
xlat
dec
mov
jnp
test
loopne
or
ror
mov
ss
lea
test
jle
retf
(bad)
mov
mov
cmps
mov
lahf
dec
fisttp
cmp
xchg
fcom
sbb
xor
retf
pop
sub
dec
dec
mov
xchg
je
or
xlat
mov
je
jmp
aad
imul
scas
cmp
mov
lods
repz
mov
shr
cmc
bound
(bad)
aad
fcomp
outs
arpl
into
leave
sub
(bad)
inc
mov
iret
push
stos
dec
sub
sbb
sbb
mov
add
shl
outs
outs
pop
mov
mov
rcl
lds
loop
lock
push
jp
ins
int
mov
jae
cmps
cmp
push
pop
mov
rcr
dec
not
xor
adc
das
push
enter
ds
cld
xchg
ds
stos
cmps
out
cmps
aaa
inc
sbb
rcr
les
cmp
loop
pushf
push
cmps
scas
jae
out
adc
lds
sar
xlat
jo
cli
sub
sub
xchg
adc
movs
imul
xchg
sbb
inc
pop
out
arpl
cdq
or
mov
outs
fdivp
popf
dec
movs
xor
jg
sub
mov
inc
iret
xlat
sbb
sti
aaa
psubw
mov
push
push
jnp
mov
shl
rol
cmp
pop
mov
mov
cmp
mov
enter
cmp
addr16
push
js
mov
sar
test
hlt
retf
cwde
xchg
repnz
sbb
sub
mov
inc
lahf
cmp
fidiv
pop
jmp
pop
cwde
int
ret
dec
mov
inc
(bad)
mov
xchg
mov
vmread
mov
daa
sub
out
aaa
pop
mov
rcl
call
shr
dec
iret
xchg
in
ins
mov
out
outs
fldz
xchg
fisub
stos
fcomip
pop
fst
cmp
adc
retf
(bad)
rcl
dec
push
sbb
push
leave
mov
xchg
jno
dec
shl
or
xchg
es
jg
test
pusha
or
push
inc
jmp
or
xchg
mov
arpl
enter
ja
cwde
add
pop
cmp
loopne
fwait
ins
inc
(bad)
fisub
cmp
int
mov
lahf
cmp
or
add
push
sbb
popa
es
cmp
call
and
add
add
dec
push
pop
std
mov
sar
push
nop
and
mov
jno
dec
out
push
jo
fild
inc
cmps
mov
cmc
test
stc
inc
test
sbb
enter
(bad)
es
out
push
lahf
icebp
inc
ins
out
pop
(bad)
push
dec
mov
add
aas
and
aad
or
jecxz
xchg
fsubr
stos
ror
(bad)
lahf
lods
stos
fwait
dec
sbb
and
(bad)
jge
clc
sub
(bad)
stc
sub
pop
xor
and
pop
or
sub
lock
call
fs
dec
lahf
test
call
mov
and
dec
xor
xor
and
fs
add
mov
scas
dec
or
xor
int3
mov
push
fs
sbb
xor
inc
pusha
lods
and
jb
adc
cdq
mov
popa
mov
ja
or
add
syscall
pusha
iret
loop
add
dec
push
repnz
aaa
dec
test
call
fiadd
jo
push
add
sti
sbb
dec
stc
fcomp
scas
(bad)
fisub
aad
data16
dec
test
push
lock
mov
xchg
dec
test
and
jnp
push
cmps
loop
sbb
pop
cmps
xchg
jmp
xor
stos
(bad)
and
xchg
add
outs
jg
fbstp
shl
loope
mov
repz
lds
mov
pop
sub
sbb
in
mov
shl
je
jae
icebp
pop
lahf
inc
loop
loope
inc
sbb
cmp
and
aaa
pop
sub
imul
repz
add
xor
enter
inc
adc
pop
in
pop
aas
push
stos
stos
fdivp
jg
aam
mov
adc
mov
xchg
js
push
nop
mov
cs
(bad)
mov
inc
es
and
data16
loop
mov
cmp
or
retf
in
add
hlt
loopne
neg
and
and
sbb
cwde
lea
dec
scas
xchg
sbb
sbb
sbb
inc
and
dec
das
lods
ja
mov
movs
mov
in
lds
mov
pop
push
arpl
enter
push
es
mov
xchg
jmp
addr16
out
mov
mov
call
in
push
stc
pop
out
dec
adc
scas
push
and
cmps
lock
cmp
pop
cmp
repz
retf
mov
mov
push
popf
enter
stos
out
lahf
dec
mov
jnp
int3
push
mov
dec
out
clc
inc
or
repnz
sub
sub
clc
ds
cli
add
mov
jae
mov
sbb
xchg
(bad)
pop
mov
and
jo
sub
cs
dec
out
mov
(bad)
dec
test
outs
(bad)
lock
sub
cmp
dec
popf
sub
rcl
jo
dec
scas
dec
mov
std
xor
sahf
cwde
push
rol
mov
push
popf
out
loope
xchg
inc
fdivr
jl
movs
pop
mov
(bad)
sar
daa
xchg
or
movs
stos
je
(bad)
pop
rol
mov
call
mov
xor
jmp
fmul
jmp
xchg
vpcmpeqd
mov
test
ins
adc
popa
js
xchg
sbb
mov
push
shl
into
sbb
cmc
xchg
dec
mov
stc
dec
mov
mov
inc
adc
test
mov
arpl
ds
push
mov
pop
lods
rcr
xchg
aas
hlt
add
mov
xchg
cwde
xchg
movs
mov
in
fadd
jecxz
(bad)
dec
xor
add
nop
jae
jecxz
push
add
pop
pop
(bad)
jp
sub
fstp
cdq
std
pop
fwait
pop
(bad)
pusha
sbb
or
inc
jge
inc
lods
xor
(bad)
mov
adc
and
or
dec
push
rcr
out
lods
outs
push
jbe
out
icebp
mov
(bad)
jmp
mov
js
mov
jns
nop
adc
into
push
adc
rcr
sub
mov
outs
adc
fldenv
cld
aad
(bad)
xor
das
lods
ret
fwait
and
cmp
mov
push
test
push
mov
addr16
xchg
xchg
pop
out
iret
test
ret
and
shl
daa
mov
sbb
sub
or
dec
retf
mov
push
out
push
cmps
mov
sbb
pop
lods
xchg
das
inc
jp
je
stos
repz
mov
lahf
jns
xchg
aam
push
les
mov
enter
mov
xchg
scas
push
ins
mov
add
fimul
pop
sbb
xchg
std
jne
pop
fadd
loop
mov
mov
bt
xchg
pop
or
cmp
sub
adc
cmp
lock
fstp
sub
ds
pop
mov
adc
pop
jnp
sti
out
int
adc
int3
mov
cmp
fldenv
pop
js
jecxz
and
fsubr
push
cwde
inc
add
(bad)
test
push
je
jne
mov
int
add
lea
loop
idiv
outs
cwde
js
call
inc
in
movs
pop
cmp
not
ds
xchg
cmp
test
inc
test
pusha
or
and
ins
dec
ret
into
pop
test
or
pop
sub
pop
adc
xchg
jmp
mov
ret
xchg
lea
add
sub
jmp
xchg
xor
int3
(bad)
cwde
ss
jge
push
adc
outs
outs
ror
xlat
data16
and
push
cmps
mov
sub
pop
ja
jmp
ins
mov
cmps
sbb
sti
sahf
call
jmp
adc
push
loope
push
(bad)
idiv
sbb
retf
pusha
sahf
sar
sti
cmp
dec
clc
xor
cmp
push
push
arpl
jbe
stos
jmp
or
nop
int
inc
push
cmp
xor
out
in
pop
xchg
mov
cs
xor
mov
xchg
jbe
cdq
xor
cli
and
add
sub
retf
retf
cs
dec
movs
dec
jecxz
shl
cmps
push
jecxz
cmp
mov
nop
imul
mov
out
pop
mov
or
fmul
or
pop
add
push
es
js
call
push
fidivr
je
retf
ins
mov
rcl
movs
cs
jne
fadd
loope
mov
mov
aas
daa
cmc
ins
push
js
or
cmp
push
(bad)
nop
clc
hlt
adc
xchg
jp
lahf
jge
stos
sub
and
ror
sbb
int
mov
loope
cs
call
mov
leave
mov
mov
sbb
outs
pop
loopne
pop
or
ins
xchg
sbb
ret
sahf
xor
sub
sbb
jmp
and
xchg
pop
adc
fucomp
test
mov
mov
fsubr
or
icebp
pop
and
ss
and
and
push
jmp
ja
inc
and
ins
sahf
aas
stos
lds
in
rcr
gs
mov
test
test
retf
sbb
cmp
and
pop
popa
stos
dec
bound
pop
mov
mov
xor
mov
inc
mov
xchg
in
jno
dec
pop
call
and
repz
int
add
inc
xchg
enter
pop
repnz
mov
fwait
cmp
cmp
or
das
hlt
sahf
outs
jo
fistp
inc
in
daa
shr
mov
lock
test
(bad)
adc
mov
push
mov
sbb
pusha
inc
cmp
mov
js
sbb
mov
out
rcr
outs
js
repnz
xor
aas
out
in
in
pusha
adc
iret
sbb
jecxz
mov
adc
in
xchg
sbb
shl
test
cmp
leave
shr
nop
or
test
sbb
mul
out
sar
sub
loop
or
cmp
ins
clc
ret
push
push
jnp
aad
in
jae
gs
sub
jecxz
loop
shl
inc
and
cmps
mov
ins
dec
cld
and
pop
rcr
fldenv
popf
pushf
jecxz
popf
mov
sbb
aad
and
in
loopne
cmp
sub
or
rep
xor
aam
mov
lea
(bad)
sti
dec
jne
jbe
mov
sti
cmc
(bad)
test
adc
movs
lock
stos
dec
xor
adc
(bad)
dec
sub
inc
(bad)
jb
push
je
and
xor
sbb
sub
js
cmp
in
mov
arpl
lods
loop
jl
inc
pop
jae
pushf
out
push
push
jne
jne
dec
or
sbb
stos
push
or
inc
int
shl
shl
mov
add
xor
mov
or
add
sbb
sub
pusha
xchg
mov
and
xchg
shr
(bad)
push
jmp
mov
add
fneni(8087
les
and
ss
in
movs
dec
jle
inc
and
mov
dec
mov
inc
mov
cwde
jp
mov
clc
push
test
or
jne
pop
repz
xor
mov
add
push
mov
inc
push
aad
cmp
in
mov
gs
pop
add
mov
push
xlat
add
cdq
cmp
pop
inc
call
(bad)
add
or
data16
ja
cmc
hlt
or
mov
mov
dec
xchg
xchg
rcl
mov
inc
in
adc
xchg
ror
mul
test
mov
jl
inc
mov
xchg
pop
push
adc
xor
mov
add
pop
scas
jae
xor
retf
cld
(bad)
iret
lock
mov
adc
hlt
mov
push
and
retf
sti
loope
jnp
mov
cs
jbe
pop
push
retf
mov
mov
or
mov
cs
push
adc
imul
lods
loopne
cmps
and
add
inc
daa
clc
(bad)
(bad)
xlat
addr16
loop
repz
retf
or
cs
out
std
test
shl
jle
mov
bswap
lods
pop
push
jle
push
cli
push
mov
hlt
and
add
pushf
cmp
stos
icebp
dec
lds
sahf
xchg
aad
test
and
in
clc
sub
inc
mov
sar
lock
push
cmp
cmp
mov
stos
adc
(bad)
daa
clc
(bad)
outs
out
ret
addr16
cdq
mov
cdq
add
stos
test
(bad)
sbb
sahf
aas
xor
ds
fadd
sbb
or
jle
jecxz
cmc
pop
imul
imul
int
sahf
lahf
jb
jnp
arpl
push
xchg
ror
mov
or
pop
mov
pop
fcomp
aaa
mov
(bad)
mov
in
inc
call
push
fcmovne
das
jo
push
sub
clc
sti
es
aaa
int
mov
test
jge
and
pop
cmp
cmp
scas
ror
adc
fst
out
arpl
push
jl
icebp
clc
arpl
dec
bound
retf
push
push
inc
aad
test
cmp
adc
adc
cmps
out
xor
movs
inc
dec
pop
pop
fidiv
test
push
xor
jb
sbb
jb
xchg
push
mov
sub
mov
xchg
pusha
mov
dec
jl
jbe
loopne
aam
mov
mov
or
push
aas
imul
mov
loope
xor
outs
cmp
xchg
outs
stos
push
push
ret
dec
mov
in
dec
xchg
enter
mov
retf
retf
call
sbb
es
fwait
mov
std
jo
pop
mov
adc
test
lds
data16
or
mov
jl
aam
push
dec
aas
nop
dec
ret
xchg
mov
inc
clc
mov
loop
jmp
inc
aad
(bad)
xor
jg
jno
cdq
pop
push
cmp
push
jmp
jnp
jle
hlt
inc
cmp
xchg
sbb
mov
repz
xchg
aas
or
sub
inc
mov
sbb
mov
pop
clc
jmp
ss
adc
dec
pushf
nop
out
jg
mov
repnz
daa
fiadd
lea
int
jecxz
pop
lahf
imul
ret
push
lea
jmp
nop
push
and
xor
mov
test
xlat
add
mov
ds
inc
es
fnstenv
pop
enter
in
pushf
cs
dec
jg
cwde
enter
sbb
hlt
aam
(bad)
imul
cmps
mov
xor
push
fnsave
xchg
xor
or
add
xlat
pop
jae
pushf
mov
jge
jmp
imul
inc
inc
mov
fwait
push
(bad)
mov
push
inc
fistp
in
fisttp
repz
outs
push
and
ror
mov
dec
add
inc
sub
retf
sub
xchg
mov
adc
lock
stos
xchg
push
js
mov
int
sub
in
in
popf
pushf
mov
add
inc
push
lods
jae
dec
call
bound
lock
pop
sub
or
mov
scas
in
aad
mov
mov
mov
sar
(bad)
fidivr
fnstsw
pop
outs
(bad)
xchg
inc
inc
sti
jmp
mov
addr16
daa
mov
gs
jbe
mov
inc
jmp
aas
out
add
jecxz
adc
stos
int
(bad)
in
dec
sbb
and
repz
enter
cmovae
xchg
add
sub
fcmove
adc
inc
fisttp
mov
sti
mov
outs
adc
fnstcw
adc
dec
jns
out
add
xchg
imul
pop
jne
and
jo
pusha
and
cmc
nop
mov
loop
mov
xor
hlt
xchg
mov
sbb
leave
dec
sbb
call
dec
daa
fs
imul
add
lahf
hlt
into
inc
ins
out
sub
xor
sbb
add
sahf
stc
mov
mov
push
jl
sub
pop
outs
jg
mov
push
mov
xor
push
and
pop
or
mov
std
(bad)
xlat
mov
outs
mov
stos
loopne
inc
jp
pop
mov
sar
stos
retf
cmp
sbb
xor
bound
imul
fisubr
adc
stos
and
push
(bad)
std
xchg
cdq
xchg
dec
aad
dec
jns
and
add
and
sub
xor
inc
ret
leave
mov
sub
mov
sbb
mov
adc
or
sbb
push
in
scas
cmps
wrmsr
fnsave
(bad)
adc
(bad)
sahf
cmps
jg
es
inc
cmp
adc
or
jne
jmp
lea
pop
add
movs
cwde
xlat
mov
cdq
inc
movs
jg
fisubr
sbb
jge
inc
test
lods
cmp
or
hlt
sub
xchg
mov
xor
test
movs
xor
jl
adc
fistp
mov
jg
mov
sbb
stc
(bad)
mov
push
ins
ja
mov
mov
push
adc
inc
push
int
push
xchg
rol
(bad)
addr16
imul
in
mov
ins
jnp
sahf
xor
or
sub
mov
stos
or
mov
mul
jle
add
palignr
fnstcw
mov
push
adc
adc
lea
ror
cmp
and
adc
add
ins
jl
movs
retf
ins
dec
std
imul
or
sar
inc
les
pop
push
sbb
arpl
icebp
adc
cmp
xchg
mov
in
add
movs
dec
pop
add
pop
fimul
rcl
adc
and
retf
popf
xchg
ins
and
enter
cdq
xor
cli
push
xlat
loop
fwait
add
cdq
aaa
pop
out
mul
popa
dec
sti
or
inc
(bad)
das
iret
js
push
jle
cld
jne
xchg
xor
cs
ror
retf
cmp
call
xchg
outs
jo
jle
dec
jecxz
and
in
or
out
ins
adc
fs
stos
loop
aaa
test
pop
inc
iret
jne
cld
mov
mov
fnstenv
jecxz
jmp
mov
outs
fldcw
fwait
mov
or
push
dec
inc
idiv
neg
inc
mov
lods
sub
xchg
inc
lea
cs
adc
je
jbe
cmps
cmc
retf
cmc
fcomp
das
mov
adc
iret
inc
icebp
lods
pop
fist
pusha
and
pop
cmp
and
fwait
or
mov
fistp
xchg
int3
fld
cmps
push
xor
cmp
imul
xchg
call
xchg
fisub
and
push
cli
jbe
nop
ins
mov
repz
popf
mov
mov
push
adc
fsubr
mov
lods
sti
movs
shl
push
scas
int3
(bad)
fsubr
popf
mov
jmp
jbe
xchg
mov
xchg
mov
and
cmp
add
jmp
mov
popf
iret
addr16
adc
xchg
cmp
cdq
jmp
or
dec
loop
addr16
jmp
mov
or
aam
mov
ins
(bad)
sbb
xor
dec
rcl
pusha
stc
lods
jb
push
xchg
add
fist
push
sbb
mov
mov
dec
pop
mov
setae
test
or
nop
lods
clc
and
xchg
fs
push
and
jmp
push
mov
out
xlat
mov
js
pop
sti
or
dec
mov
jbe
xchg
(bad)
xchg
scas
adc
dec
sbb
push
sbb
cmp
out
xor
dec
adc
loop
bound
pop
jp
aas
dec
pop
aas
jmp
mov
mov
jmp
aaa
in
sbb
and
push
cs
imul
xchg
pop
dec
data16
cmp
or
cmp
out
pop
mov
cmp
clc
push
cli
popf
pop
xor
add
mov
sbb
mov
test
mov
repnz
xor
push
jl
jmp
(bad)
and
mov
out
fld
stos
xchg
xor
adc
ds
pushf
mov
fcomp
cmp
mov
sbb
dec
xchg
cli
test
jne
das
mov
pop
mov
xor
lods
inc
jecxz
pop
jne
jbe
mov
lock
sub
and
pop
movs
daa
outs
ret
test
sbb
loope
mov
lods
mov
xor
clc
cmps
mov
inc
ss
stos
pop
cli
repnz
mov
fs
clc
fcomp
jbe
xor
sbb
cwde
pop
test
add
or
and
scas
push
icebp
cmp
imul
je
ret
mov
pop
adc
xchg
cs
popf
add
push
xor
aaa
fs
fs
jmp
in
pop
pushf
imul
push
movs
inc
arpl
data16
mov
dec
ret
test
add
mov
cmc
pop
sub
sbb
jp
scas
jmp
sub
jmp
shl
shl
(bad)
xchg
in
loop
fisttp
in
stos
adc
pop
pop
pop
cmp
mov
push
xor
ret
cmp
or
xchg
lods
in
pop
and
push
add
mov
test
fdiv
stos
mov
aas
inc
push
mov
or
add
or
xlat
and
movs
sub
in
pushf
out
mov
cmc
jns
retf
pusha
ret
sub
dec
ror
adc
push
xor
pop
cli
add
std
adc
stos
xor
mov
sbb
cmp
sti
mov
je
jg
pop
pop
cmp
jnp
pusha
mov
fnstsw
ret
or
imul
fs
sbb
cmps
out
retf
ins
pop
fwait
adc
mov
jno
addr16
adc
ins
in
out
retf
and
sar
fild
mov
aas
xchg
and
fcomp
ins
jnp
outs
adc
stos
mov
sub
sar
push
inc
sbb
mov
aaa
sbb
int
xor
dec
cmp
arpl
pop
sub
and
clc
add
pop
ret
jb
inc
jge
push
sti
das
arpl
push
mov
icebp
fbstp
sub
and
test
inc
pushf
cmp
jl
into
das
sbb
mov
mov
fild
pop
mov
sbb
adc
popa
imul
ins
test
adc
loop
ret
in
das
popa
sbb
aad
sub
fidivr
jb
mov
xchg
inc
icebp
and
ficomp
pop
mov
xor
fnstenv
jo
es
jb
mov
call
hlt
in
test
push
pop
push
(bad)
xchg
jne
imul
lea
cwde
stc
cmps
or
jmp
lahf
stc
or
inc
dec
lds
subps
mov
test
add
or
in
cs
add
aam
xlat
sub
push
xchg
adc
inc
jnp
sahf
push
out
mov
pop
test
clc
mov
sub
push
xlat
mov
push
sub
xchg
outs
push
or
iret
sbb
xchg
sbb
ret
and
inc
in
sub
adc
dec
into
lds
cmp
jns
pusha
aam
dec
fbstp
adc
xlat
imul
neg
jb
cmc
(bad)
in
inc
mov
cmc
pop
pop
(bad)
adc
adc
or
cmp
adc
pop
sbb
push
dec
mov
stc
xor
and
js
jnp
mov
jle
jo
xor
fisttp
pop
cmps
sub
or
pop
sbb
in
test
out
(bad)
or
movs
loope
cmp
(bad)
arpl
cwde
std
dec
xchg
mov
hlt
xchg
xchg
cli
pop
add
jae
ja
loopne
mov
enter
sub
mov
mov
push
dec
mov
bound
or
push
pop
dec
dec
mov
fs
retf
imul
mov
sub
inc
ret
cmp
mov
mov
xor
pop
and
add
cs
adc
mov
xchg
(bad)
mov
clc
icebp
movs
cmp
addr16
mov
movs
popf
push
test
div
jae
lea
push
dec
adc
jno
mov
push
jp
sub
pushf
inc
adc
movs
ins
sbb
fstp
inc
sbb
inc
push
int
xor
fwait
cmp
mov
adc
push
sub
call
jp
mov
and
push
sub
push
or
dec
pop
push
stos
adc
clc
aad
repz
xor
lds
push
retf
and
push
(bad)
jmp
(bad)
lods
push
push
mov
xchg
neg
pop
into
pop
or
stc
mov
cdq
pop
cdq
loop
xchg
retf
dec
xor
push
stc
sbb
bound
jnp
out
movs
stos
mov
jmp
or
aam
hlt
inc
and
shr
repz
sub
call
and
pop
inc
mov
leave
xchg
sub
dec
retf
popf
outs
pop
(bad)
lahf
and
aas
jae
and
push
jne
cmc
and
xchg
or
ficomp
imul
popa
pop
mov
sbb
and
push
(bad)
dec
int
ds
and
retf
jbe
movs
lea
enter
mov
fnstcw
inc
sbb
scas
clc
aas
and
pop
cmp
push
sbb
dec
jmp
pop
mov
call
mov
push
cmp
pop
and
sahf
xor
xor
popf
pop
jo
ja
das
or
ja
mov
pop
daa
and
outs
push
rcl
jmp
fisttp
(bad)
xor
int
sbb
or
jmp
int3
(bad)
stos
daa
dec
inc
push
arpl
push
je
mov
lahf
sub
push
test
push
adc
xchg
mov
pop
aad
enter
jbe
cld
sub
ins
sub
pop
push
xchg
and
cld
adc
ds
sub
pop
sbb
shl
scas
xchg
cmp
pop
jno
jecxz
and
(bad)
or
sahf
retf
cs
dec
jmp
test
inc
lahf
fimul
mov
cmp
mov
jge
icebp
ss
and
inc
cmps
cli
shr
or
ds
fisub
imul
mov
cmp
push
outs
in
mov
add
and
sub
shl
push
sti
enter
xchg
inc
mov
mov
rcr
cli
call
jle
inc
xor
pop
test
vpaddd
adc
pusha
les
mov
jno
pop
sbb
mov
iret
dec
push
jg
push
cmp
into
dec
sbb
retf
test
adc
imul
repnz
cs
xchg
inc
inc
jae
and
push
push
mov
push
sub
pop
aas
dec
push
std
dec
mov
mov
sbb
mov
push
sbb
mov
xchg
fisub
(bad)
inc
fwait
cmp
repz
inc
cwde
movs
stos
push
jmp
pushf
fstp
nop
fcom
jmp
xchg
mov
dec
aam
popf
fdiv
mov
pop
xchg
cmp
cmp
adc
(bad)
xor
cmps
xchg
fdivrp
push
xchg
push
inc
add
xchg
mov
jmp
into
jecxz
ds
gs
pop
mov
in
pop
cmp
inc
xor
push
sti
xor
pop
fnstcw
sbb
xor
dec
push
cs
cmps
and
in
adc
enter
mov
scas
jo
jo
out
mov
fstp
xchg
in
pop
ins
shr
aad
rol
mov
xor
sbb
lahf
add
xchg
sub
push
imul
mov
aaa
scas
push
aas
dec
jmp
retf
sub
fwait
push
ret
add
ds
mov
adc
xchg
jns
imul
adc
xchg
jle
pop
popf
cmp
popf
scas
aaa
pop
xor
stos
sbb
inc
inc
or
repz
fild
jae
xchg
push
jmp
or
aad
cwde
sbb
es
arpl
sub
mov
cld
mov
and
fs
add
sbb
jge
sbb
mov
or
adc
cmp
cmp
mov
sub
shr
repnz
int
daa
(bad)
jno
pop
jmp
cmps
mov
lock
xchg
neg
push
shr
cmp
mov
push
inc
cld
push
pushf
outs
dec
bound
dec
xor
cli
mov
cmp
sub
(bad)
mov
mov
pop
jl
inc
mov
ror
je
adc
lock
cmp
cmp
ins
dec
ins
scas
stc
dec
mov
sbb
in
cdq
jle
jg
xor
addr16
inc
fidiv
push
push
dec
fcomp
pushf
inc
(bad)
cmp
jmp
(bad)
stos
sar
pusha
lods
repnz
inc
out
mov
mov
mov
jae
mov
or
rcr
jno
push
out
leave
cld
jno
sahf
sub
sub
xor
cmp
adc
rol
jbe
shl
and
lahf
jp
movs
or
jne
or
pop
hlt
inc
shr
add
or
dec
rcl
or
je
mov
push
in
sub
add
outs
outs
dec
lods
mov
dec
push
call
out
cdq
and
int3
sub
dec
inc
lods
rol
inc
xor
pop
xchg
in
xchg
fisttp
xchg
xchg
cmp
stc
fnop
stos
mov
jne
je
mov
test
(bad)
es
pusha
imul
repnz
xchg
xchg
jle
test
sbb
mov
adc
inc
mov
das
lds
cwde
int
sub
int
inc
repz
sbb
cmp
xor
jle
push
cld
pushf
xlat
add
stos
and
ja
push
pop
mov
sub
fwait
adc
in
pushf
sbb
mov
push
dec
pop
adc
pushf
fistp
leave
inc
mov
push
shl
in
outs
dec
dec
lods
push
push
inc
dec
jae
int3
add
aad
pop
pushf
and
mov
das
mov
dec
adc
ja
in
jne
pop
sbb
dec
adc
and
fucom
int
sub
pop
push
clc
mov
pushf
dec
aad
out
(bad)
ja
push
or
std
jecxz
ret
loope
(bad)
mov
inc
push
mov
sub
test
push
push
jge
stos
(bad)
call
repz
retf
je
push
add
stos
or
lock
retf
movs
cmps
or
into
add
push
mov
cli
add
inc
ret
push
sbb
fadd
sub
dec
stc
jmp
popf
inc
push
xlat
pop
outs
ins
sbb
pusha
nop
rcr
test
adc
shr
mov
mov
enter
or
rol
xchg
and
or
ss
(bad)
enter
pop
loop
and
xchg
ja
aad
(bad)
mov
push
add
sbb
inc
daa
repnz
xchg
ret
jmp
add
scas
mov
push
int3
in
(bad)
jecxz
pop
hlt
mov
push
and
test
ss
mov
je
arpl
pop
xlat
inc
cmp
mov
cwde
add
rcl
cmp
movs
dec
jbe
dec
or
push
sbb
mov
ins
adc
jmp
mov
xlat
test
pop
jle
jmp
mov
mov
clc
dec
push
cmp
popa
dec
pop
nop
rcl
mov
cmp
pop
jecxz
cmp
stos
mov
jnp
je
mov
cs
ds
inc
icebp
xchg
pop
inc
or
xchg
mov
and
add
pop
fadd
test
rcr
jl
mov
pop
sub
and
outs
test
xor
enter
or
out
out
or
push
inc
inc
arpl
push
(bad)
in
and
pop
mov
sub
mov
repz
loop
aas
js
cmps
retf
jmp
dec
(bad)
adc
fld
push
loop
jle
sub
outs
push
shr
push
jmp
fdiv
cmp
nop
(bad)
sahf
inc
pop
dec
add
stc
fnstcw
arpl
neg
or
dec
bound
sbb
das
std
je
pop
inc
xchg
outs
pop
jge
outs
add
(bad)
stc
movs
lahf
dec
iret
push
mov
xor
add
push
rcl
adc
sub
mov
clc
inc
jmp
mov
push
lods
shl
jmp
inc
test
jecxz
jmp
push
inc
int
sub
dec
push
xor
std
jbe
inc
retf
pop
inc
iret
outs
pop
jne
fsubrp
daa
xor
mov
aaa
or
outs
push
mov
lock
(bad)
dec
ins
add
je
mov
(bad)
pop
pushf
or
lods
jmp
imul
mov
add
daa
lods
cmp
jp
cmp
sbb
inc
jecxz
and
(bad)
push
and
and
pop
ds
inc
push
pop
sti
arpl
xor
rol
dec
in
imul
mov
xchg
dec
int3
inc
out
pop
std
std
pushf
cmps
in
lock
adc
loop
cld
rcl
xor
mov
push
(bad)
push
std
push
pop
adc
inc
mov
sub
mov
dec
push
outs
jp
xchg
std
cmps
and
shr
pop
je
cs
nop
mov
ins
call
and
iret
dec
icebp
lahf
scas
mov
enter
xlat
cwde
fwait
inc
call
or
xlat
cld
je
cmp
push
dec
dec
arpl
fstp
mov
mov
ins
push
xchg
cmp
scas
pop
xor
and
inc
sbb
add
sbb
in
cld
push
(bad)
mov
push
in
mov
inc
dec
push
jle
pop
icebp
aas
jne
pop
xchg
xchg
mov
clc
mov
mov
mov
or
lods
cmp
mov
fcmovnbe
call
test
xor
inc
add
and
or
aaa
push
inc
xor
dec
mov
cmp
or
push
jbe
sahf
push
mov
sub
(bad)
cld
sar
jne
sbb
fndisi(8087
and
add
pop
xchg
arpl
neg
out
push
ret
std
xchg
cdq
inc
test
faddp
cwde
and
push
dec
out
sbb
xchg
add
push
jecxz
sub
test
std
mov
mov
sar
pop
cmp
xchg
lods
(bad)
jmp
jle
movs
xor
movs
fdiv
and
adc
pop
mov
add
test
js
fisttp
mov
push
and
add
pop
mov
imul
push
cmps
in
movs
into
cdq
add
ja
es
jmp
cwde
push
data16
pop
js
neg
inc
rcr
(bad)
mov
push
mov
and
jae
or
mov
daa
mov
inc
ja
jo
(bad)
iret
xchg
sbb
or
std
nop
add
cmp
mulps
test
push
or
dec
mov
das
xor
sar
jb
addr16
push
pop
(bad)
(bad)
sub
push
sub
rol
mov
repz
and
jnp
lea
xchg
or
fwait
out
dec
adc
pop
inc
sti
mov
ins
cli
rcl
stos
push
(bad)
movaps
jae
mov
(bad)
mov
add
mov
sbb
dec
cmps
sbb
xor
mov
pop
fstp
int3
test
mov
(bad)
mov
ja
mov
cs
in
shl
in
vhsubpd
mov
in
daa
add
push
pop
daa
inc
inc
adc
aas
(bad)
(bad)
fwait
adc
xchg
push
push
jmp
gs
arpl
jecxz
in
xchg
out
dec
icebp
and
jle
jnp
add
lds
sub
mov
cmp
dec
stos
mov
fwait
lods
xor
aas
add
mov
xor
rol
mov
loope
adc
push
out
fcomp
sbb
leave
fcomp
mov
or
jo
arpl
mov
outs
out
aaa
cdq
xor
mov
dec
(bad)
pop
std
(bad)
in
jns
dec
das
dec
xor
out
dec
cmp
std
mov
(bad)
cs
test
mov
add
xchg
stc
xor
ins
pop
fcomp
nop
pusha
int3
push
out
cmp
adc
icebp
mov
iret
std
sbb
cmps
repnz
dec
adc
cmps
cli
cli
jno
ret
pop
pop
mov
inc
fst
sbb
add
mov
jle
sbb
call
in
mov
cmp
add
xor
ins
cli
mov
fidiv
sub
(bad)
mov
(bad)
outs
std
pop
in
sbb
test
outs
inc
or
ja
xor
and
add
les
pop
addr16
ins
es
cli
and
arpl
popf
mov
ret
ror
jle
(bad)
sub
addr16
test
pop
(bad)
pop
cli
push
scas
rcr
add
mov
xchg
aaa
cmps
mov
hlt
cwde
pop
xchg
fdivr
stos
stos
jle
sub
test
mov
outs
fldenv
lods
retf
inc
pop
ins
lea
push
jne
adc
fistp
fidiv
or
sub
outs
popf
loope
fcmovb
popf
mov
sub
idiv
fcmovu
jp
push
dec
(bad)
fistp
inc
adc
into
aam
dec
data16
call
jno
mov
es
cmp
mov
xchg
pop
loope
xor
dec
cld
mov
jnp
jmp
adc
add
mov
sub
xor
shr
and
fcom
inc
add
mov
xchg
iret
xor
mov
shl
shl
gs
test
xchg
xchg
dec
or
mov
mov
or
mov
ins
(bad)
in
add
into
mov
scas
enter
mov
loopne
(bad)
and
dec
cmp
fiadd
fsubr
xlat
sub
lock
stos
push
xchg
xchg
in
lods
pop
inc
clc
and
mov
pop
sub
sti
sub
out
rol
out
pop
stc
ins
call
clc
mul
cli
inc
cmp
(bad)
add
and
fstp
mov
ss
adc
jmp
inc
xor
(bad)
sub
fwait
and
in
outs
xchg
scas
cs
scas
mov
add
cmps
mov
push
push
out
jmp
fsubr
es
mov
mov
aaa
mov
fdivr
cmp
sbb
ds
inc
ss
gs
or
jge
pusha
adc
mul
push
div
cmps
mov
sub
push
(bad)
lahf
outs
inc
mov
lea
mov
mov
scas
lods
xchg
adc
adc
add
cmp
pushf
aam
xor
sbb
sub
data16
shr
ds
lock
mov
call
mov
jg
jno
sar
sti
push
mov
pop
mov
pop
(bad)
inc
xchg
pusha
ja
test
or
xchg
sbb
imul
xchg
mov
mov
(bad)
in
std
nop
or
stos
push
jl
stos
vmwrite
cmp
repnz
cmc
fwait
xchg
mov
mov
lahf
leave
and
retf
mov
mov
lea
std
fstp
jge
cmp
(bad)
(bad)
(bad)
les
xor
test
mov
ins
std
jge
lods
push
cmp
fucom
pop
ss
push
mov
or
fidivr
stos
repz
bound
push
sti
add
sbb
cdq
(bad)
push
xor
mov
fs
mov
pop
mov
mov
push
rcl
cwde
mov
(bad)
data16
fcmovbe
sub
in
popa
rol
lock
sbb
ror
test
pop
jb
cwde
sbb
xchg
call
imul
and
add
dec
out
sub
into
jno
sub
test
jmp
mov
ss
mov
bound
inc
into
(bad)
jmp
inc
xor
les
sbb
fst
aad
ins
push
pop
dec
sub
xchg
and
je
call
pop
nop
neg
popf
fmulp
mov
(bad)
hlt
xchg
js
xor
adc
cmp
ret
cmp
dec
mov
icebp
jnp
stos
cmps
xchg
pop
mov
hlt
add
and
cmp
jp
pop
inc
sbb
cdq
mov
sti
scas
retf
or
xor
add
cmps
aaa
ret
retf
enter
movs
scas
pop
xchg
(bad)
cmp
outs
adc
pop
sahf
and
out
and
sti
sahf
mov
xor
mov
and
xchg
ficomp
sbb
mov
xor
(bad)
icebp
stos
hlt
retf
xchg
jo
mov
loop
mov
xchg
pop
mov
pop
xor
inc
sub
sbb
sub
dec
xchg
int
push
in
jne
dec
or
sub
cmp
mov
and
sbb
dec
jno
lahf
repnz
outs
out
test
jno
jns
popf
or
add
xor
in
jl
mov
mov
dec
int
rcl
cwde
fst
std
mov
out
fidivr
mov
retf
lahf
cmc
pop
jne
das
call
dec
or
repz
mov
push
or
rcl
loop
arpl
push
sahf
cmp
mov
push
(bad)
aad
icebp
(bad)
fdivr
or
fs
clc
mov
hlt
popf
or
cmp
idiv
hlt
cwde
sub
mov
lods
cmp
cld
jnp
ins
imul
in
daa
std
mov
pop
inc
es
sub
xor
dec
or
jmp
out
call
jecxz
repz
jnp
outs
sbb
pop
pop
sub
add
xchg
popf
int3
test
sub
pop
jge
pusha
imul
outs
push
retf
mov
fbstp
cmp
rcl
cmp
sbb
rcr
xchg
xlat
out
xor
mov
mov
ja
cmpps
dec
call
sbb
ficomp
mov
or
lods
pop
sub
cmp
sub
(bad)
in
add
push
add
fstp
mov
cmc
dec
inc
dec
adc
sub
fs
jl
mov
loop
pop
stos
push
pop
or
or
(bad)
push
arpl
stos
inc
movs
ja
ds
jo
add
pop
xor
lock
sbb
(bad)
rol
add
xor
pop
nop
pop
nop
xor
(bad)
loope
jns
test
cmp
mov
mov
sbb
pop
frstor
aaa
inc
(bad)
rol
and
pusha
fidivr
cmp
mov
dec
cmp
cmp
sub
vpmacssww
aas
adc
push
jge
cmp
dec
inc
dec
loopne
sub
mov
into
jl
mov
mov
and
sub
call
stos
cmp
xchg
dec
repnz
sar
push
scas
mov
pop
out
sbb
(bad)
lea
rcl
mov
(bad)
fimul
call
jecxz
mov
push
cmp
scas
retf
fcomp
sub
sbb
adc
or
mov
mov
cld
div
xchg
ja
jmp
sub
xchg
cmps
aam
and
xor
cmp
(bad)
or
adc
or
test
push
nop
test
call
or
sub
push
pop
cmps
cmp
xchg
add
les
out
(bad)
push
and
ret
jmp
jge
push
mov
xchg
xchg
xor
xchg
daa
lods
movs
pop
push
(bad)
nop
lds
push
jb
cli
mov
cwde
je
clc
call
or
popf
cmp
jp
jmp
pop
aaa
jnp
fimul
push
nop
les
call
data16
inc
inc
mov
sbb
pop
lods
mov
adc
ret
scas
xchg
sub
loopne
cli
push
aas
xchg
stc
jmp
xor
mov
ds
inc
push
aaa
out
push
xor
(bad)
out
retf
adc
pop
rcr
mov
inc
mov
mov
inc
fwait
jecxz
aaa
test
sbb
aaa
jo
out
sbb
loope
sahf
jno
sbb
shl
ins
jns
xor
ja
xor
mov
jp
shrd
test
int3
lods
jl
jb
adc
mov
lds
sub
jns
jmp
sbb
jp
mov
popf
and
jle
repnz
and
dec
mov
cdq
addr16
sub
cs
pop
mov
div
nop
pop
mov
jbe
cmp
fstp
jmp
mov
inc
sub
sub
mov
xchg
dec
cmc
mov
in
push
gs
fstp
aas
test
and
cmp
add
xchg
(bad)
outs
(bad)
add
test
cmp
push
mov
xchg
cmc
pop
(bad)
daa
mov
imul
and
outs
pop
rol
mov
mov
xchg
cwde
jbe
jp
daa
call
pop
jae
and
or
fs
jp
out
mov
sbb
addr16
div
mov
aam
pop
pop
sar
or
test
mov
rol
cdq
shr
or
xchg
lahf
sub
imul
or
hlt
sbb
pushf
push
cmps
ja
adc
push
inc
test
lds
jbe
xor
push
lock
sub
outs
scas
test
ss
cmc
sar
mov
mov
pop
rcl
mov
dec
daa
arpl
popa
mov
fdivr
add
mov
stos
mov
push
mov
mov
cmovge
es
mov
cmp
mov
mov
push
call
out
mov
call
mov
cmps
(bad)
sahf
lds
and
sti
adc
inc
sbb
in
xchg
fdiv
sar
cmc
lods
and
out
xor
jmp
aam
pop
and
cmc
xchg
test
add
mov
mov
hlt
enter
ins
dec
push
xchg
clc
mov
jb
adc
inc
adc
and
popa
push
or
push
in
jne
icebp
dec
jbe
or
adc
popf
pop
sbb
test
test
(bad)
jb
inc
mov
bound
jl
sbb
aam
inc
icebp
lock
inc
inc
sub
jle
cs
pop
cmp
mov
mov
neg
les
xor
in
movs
ins
cmp
(bad)
sbb
shr
loopne
imul
xchg
pop
xor
ror
rol
cmp
mov
mov
jl
ret
cmps
mov
add
sahf
mov
outs
or
mov
lods
inc
fs
icebp
cld
add
scas
adc
ficom
mov
sub
inc
jo
mov
push
ss
aad
adc
adc
dec
enter
and
jge
lock
and
dec
sahf
test
enter
scas
adc
mov
out
dec
or
addr16
movs
pause
cli
sbb
ss
jge
ds
mov
or
jbe
or
and
(bad)
jnp
add
test
fisttp
mov
(bad)
test
mov
push
mov
shr
stc
adc
sbb
mov
out
std
mov
sub
int
stos
aam
push
mov
add
push
out
push
and
lock
stc
jno
or
or
dec
mov
mov
mov
inc
clc
or
push
dec
mov
mov
sbb
and
or
add
lea
push
xor
inc
mov
cwde
psrld
jne
pop
imul
sub
movs
add
pop
sbb
xor
and
jnp
les
fnsave
sub
xchg
rcr
push
int
mov
mov
or
push
cmp
push
adc
(bad)
stos
and
mov
mov
mov
mov
enter
fs
rcr
push
test
fbstp
pop
fnsave
mov
call
push
sahf
jo
or
dec
inc
(bad)
cmp
sbb
sub
sub
test
std
fbld
inc
adc
xchg
out
mov
lods
in
mov
sbb
jbe
push
sub
sub
in
mov
int
mov
das
cmp
(bad)
xor
adc
inc
shr
push
jo
cmp
rcr
sub
push
jmp
xlat
push
pushf
pop
xlat
in
pop
or
sbb
adc
mov
jne
and
and
sub
inc
(bad)
and
mov
and
cmp
jl
jecxz
sbb
and
test
out
adc
inc
test
gs
jb
mov
leave
xor
test
fisubr
jno
xor
jle
popf
in
ret
pusha
sub
test
fistp
scas
xor
scas
addr16
out
sub
pop
mov
js
xor
test
or
fwait
sbb
or
jecxz
fldenv
arpl
ins
pushf
ret
or
mov
pop
adc
sub
hlt
int
ds
int3
ret
outs
or
ins
sbb
xchg
mul
setl
js
adc
loop
movs
data16
sbb
aas
cld
inc
je
test
test
fcomip
xchg
repz
mov
or
loope
imul
pusha
jle
xchg
mov
fwait
call
sbb
push
out
jae
out
mov
cmp
xor
cdq
imul
ret
cdq
arpl
mov
sub
inc
mov
cmps
mov
sbb
adc
xchg
iret
sub
mov
ret
sub
xor
pop
mov
mov
iret
add
ror
xor
outs
jo
cmp
jp
inc
jg
or
adc
(bad)
mov
arpl
outs
test
sub
fs
mov
jecxz
pushf
ja
jecxz
es
inc
sbb
dec
pop
sbb
push
int3
ins
shr
push
push
loope
sbb
mov
push
jnp
push
lds
call
lock
popa
mov
dec
jae
and
fs
scas
in
mov
xor
adc
movntps
mov
pusha
xchg
jne
je
jno
jae
aaa
das
adc
cld
mov
xor
mov
mov
mov
pop
and
mov
xchg
xchg
mov
xor
ret
sbb
mov
pop
xchg
in
xchg
arpl
push
xlat
xor
sahf
jb
or
mov
aam
adc
and
rcr
pop
outs
sbb
fistp
dec
cmp
inc
rcr
adc
inc
std
sahf
std
xor
arpl
jecxz
inc
xor
inc
mov
lods
push
cmp
xchg
cwde
das
xchg
and
std
mov
cmp
dec
pop
sbb
not
ss
js
repnz
and
cwde
out
or
das
stos
and
lds
daa
xchg
fs
stos
outs
les
jmp
(bad)
jmp
adc
call
cmc
or
(bad)
movs
pop
mov
sub
xor
ins
cdq
jge
sbb
and
cmp
rcl
(bad)
adc
rcr
in
mov
adc
xor
sub
pusha
retf
ja
adc
cmps
std
cld
xor
rep
mov
adc
rcl
add
popa
mov
xchg
push
cmp
adc
pop
ret
loope
adc
lfs
xchg
je
mov
or
repz
inc
xor
shr
arpl
test
repnz
xor
stc
add
mov
xor
xor
xor
cmp
jne
mov
adc
xor
xchg
(bad)
dec
jns
loope
icebp
ins
scas
mov
push
mov
ss
fwait
iret
fdiv
rcr
pop
mov
(bad)
adc
outs
xor
stos
inc
dec
in
sbb
cli
pop
sahf
(bad)
jmp
mov
pop
xchg
call
scas
add
int3
std
jb
cmp
mov
movs
sub
cmp
mov
int
push
mov
ja
fs
iret
xchg
cmp
lds
out
enter
lods
xor
and
lds
or
adc
or
inc
pop
pop
in
(bad)
pop
adc
or
mov
jle
test
lds
loopne
(bad)
movs
push
cmp
in
mov
inc
repnz
sbb
shr
or
mov
int3
aaa
jnp
int
xor
pop
and
jne
pop
push
clc
sub
enter
cdq
cmp
rcl
pop
leave
inc
jbe
or
and
adc
push
shr
fcomip
sub
ins
adc
lods
sub
and
stc
nop
cmp
push
call
lahf
loop
sbb
test
dec
dec
inc
add
pop
ret
jle
cmc
xchg
int
rol
mov
movlps
mov
aad
and
aas
test
mov
mov
pop
loope
or
xor
fisub
out
sbb
ficom
inc
mov
pushf
push
repnz
outs
test
nop
in
dec
hlt
and
adc
les
pop
or
fbstp
rol
xchg
xchg
adc
ror
mov
jb
pop
pop
(bad)
(bad)
push
frstor
lock
rcr
ins
sar
shl
ins
in
stos
retf
imul
adc
adc
ss
push
dec
mov
cs
cmp
jmp
fs
loop
add
cli
leave
push
je
jg
fistp
adc
push
dec
repnz
inc
out
or
xchg
imul
jmp
xchg
outs
xor
sub
dec
xchg
sahf
icebp
ficom
fs
mov
adc
cmp
daa
stos
int3
cmp
sar
in
mov
out
addr16
mov
push
xor
mov
dec
mov
adc
pop
add
cmp
adc
js
fnstcw
cli
mov
xchg
or
test
bound
and
adc
sbb
xlat
fstp
xor
cwde
xchg
into
hlt
pop
xor
ins
mov
or
jle
hlt
add
mov
adc
xchg
adc
cwde
call
add
mov
inc
push
rcr
(bad)
mov
mov
stos
dec
popa
dec
(bad)
adc
(bad)
mov
mov
jb
mov
stc
mov
out
cmps
mov
enter
pop
pop
mov
fimul
ret
stc
adc
sub
pop
xor
in
std
add
nop
mov
sub
xchg
call
loop
(bad)
pop
sbb
ss
xchg
test
inc
pop
mov
cs
add
or
fild
rol
ins
pop
repz
dec
(bad)
not
xchg
inc
xchg
jmp
jns
mov
fisub
sub
push
mov
mov
test
mov
cmp
scas
dec
movs
arpl
popf
inc
out
inc
xchg
xor
mov
aam
adc
dec
jo
xchg
mov
js
aas
and
cld
test
add
pop
cdq
and
add
imul
ret
std
cmc
(bad)
aas
js
or
cwde
jmp
cmp
fcomp
mov
xchg
mov
cli
sub
out
push
sub
adc
ret
cmps
sub
aas
lods
in
push
scas
scas
sub
jecxz
cwde
push
int3
cmp
cmp
repnz
mov
inc
jmp
shl
dec
js
lods
sbb
loopne
dec
jge
int3
mov
sub
dec
arpl
adc
adc
mov
mov
nop
jl
popf
shr
aas
xchg
dec
retf
jmp
jae
xor
ja
sbb
and
dec
cmps
mov
cmc
lock
sub
mov
in
inc
push
rcr
push
mov
fist
ds
lock
jmp
xor
test
or
xchg
mov
daa
es
scas
imul
jmp
jecxz
mov
ret
jl
add
push
mov
lock
test
stc
or
push
xor
mov
sub
les
push
movs
inc
rcr
sbb
jl
(bad)
out
adc
inc
and
jecxz
add
test
jecxz
aaa
inc
and
or
push
inc
bound
inc
jb
sub
test
xor
adc
inc
jae
mov
rcr
jmp
add
adc
in
(bad)
mov
pop
xor
pop
xor
ja
sub
push
add
in
mov
outs
fst
xor
add
dec
pop
js
sub
fstp
lds
std
push
add
mov
fucomp
hlt
pop
push
cmc
fwait
mov
dec
and
call
aam
mov
sti
xchg
mov
out
lods
mov
jmp
fcomp
int
test
jg
push
div
mov
xchg
mov
std
in
repnz
loope
mov
pop
addr16
pop
clc
jo
call
xor
and
jl
icebp
pusha
fcom
mov
in
imul
cmps
(bad)
mov
stc
adc
mov
xchg
movs
pushf
mov
mov
retf
mov
retf
mov
in
inc
adc
aaa
ficom
rcr
mov
test
cmp
sub
popa
or
mov
sbb
js
ficom
imul
jnp
lods
sbb
int
xchg
out
dec
rol
ret
dec
scas
das
inc
pusha
test
cmp
scas
ret
pop
inc
inc
and
mov
lock
lds
loop
or
or
xor
movs
xchg
loop
xchg
mov
(bad)
loop
xchg
stos
xchg
lods
jg
les
and
cwde
outs
jmp
push
ror
(bad)
test
lahf
hlt
fld
stc
mov
mov
push
out
ja
lahf
jo
mov
mov
push
mov
and
lahf
inc
fbstp
hlt
int
xchg
in
mov
imul
adc
in
pop
ins
or
sar
dec
push
fsubr
mov
stc
pop
push
in
out
out
in
adc
pop
popf
icebp
pushf
int
push
mov
mov
inc
sbb
pop
test
pop
ret
shr
fs
cli
ins
push
test
xor
mov
xlat
and
sbb
cmp
or
or
cs
bound
je
push
jmp
sub
pop
jnp
fwait
or
adc
sbb
push
cli
in
pop
mov
cmp
sub
or
sbb
lahf
fcomp
sbb
movs
sbb
mov
jecxz
loopne
cwde
mov
fcomp
sbb
adc
xor
fcomp
and
(bad)
std
out
loopne
dec
lods
or
inc
std
cli
retf
cmps
adc
ss
xor
add
dec
aam
cli
mov
xor
retf
aas
add
add
sbb
push
mov
and
gs
dec
xor
xor
bound
mov
(bad)
das
pushf
cmp
mov
fadd
popf
and
jno
fmul
sbb
adc
pusha
jno
rcl
pushf
cli
mov
jb
sbb
inc
lods
sub
int
sahf
out
retf
adc
aad
das
mov
or
xlat
scas
inc
addr16
sti
push
push
jae
adc
sar
adc
movzx
inc
mov
cmp
lahf
call
enter
mov
pop
mov
inc
jg
jbe
xchg
push
or
daa
xchg
sbb
scas
(bad)
xchg
mov
push
mov
mov
push
loop
shr
mov
movs
ins
cs
das
mov
rol
inc
mov
mov
inc
xchg
hlt
push
dec
cmps
scas
xor
cmp
dec
xchg
xor
(bad)
jnp
scas
add
sub
add
out
jmp
xor
sbb
xor
adc
jle
push
dec
hlt
inc
(bad)
jno
inc
clc
adc
add
push
test
icebp
rcr
jl
pop
mov
jmp
rcr
popf
inc
pop
cmp
(bad)
or
in
mov
add
pop
in
mov
inc
jae
adc
dec
hlt
adc
test
xchg
dec
or
out
cmps
xor
sbb
mov
adc
add
ins
mov
mov
les
push
stos
mov
daa
add
xor
stos
call
bound
out
aam
dec
cmp
jge
rol
fsub
hlt
imul
shl
add
out
in
scas
shl
rcl
mov
clc
and
xor
int
xor
test
mov
into
and
das
rcr
ins
sub
mov
nop
xchg
xor
push
sub
sub
cmp
in
mov
in
inc
mov
xchg
daa
in
dec
xchg
inc
js
push
sbb
rcr
sbb
jg
lock
or
gs
adc
push
and
and
jo
retf
ss
or
fcom
mov
and
fs
hlt
rol
pop
cwde
mov
repnz
test
dec
in
nop
fld
enter
rol
dec
movs
xor
(bad)
xchg
xchg
jmp
cmc
add
(bad)
lods
sub
mov
mov
outs
add
sbb
(bad)
sbb
pop
cmc
lock
ret
movs
push
mov
push
(bad)
lea
xlat
mov
mov
(bad)
jmp
xor
repz
test
enter
cmps
adc
dec
outs
not
cmp
lock
rcr
push
sahf
fsub
shl
inc
add
lea
and
fisub
mov
arpl
enter
and
xchg
call
mov
mov
out
xchg
mov
sbb
dec
sti
cmp
cmp
xchg
jae
outs
add
outs
sub
sub
mov
xor
jmp
into
aam
mov
mov
adc
test
into
mov
repz
ins
push
jge
mov
dec
outs
stc
mov
dec
fsincos
and
inc
repnz
ins
push
pusha
ds
xchg
jnp
adc
adc
or
xlat
push
mov
neg
dec
(bad)
bound
push
xor
leave
cmp
cmp
sbb
jecxz
dec
mov
mov
and
jne
pop
fs
cmps
fmul
xor
(bad)
call
(bad)
call
add
and
adc
or
aad
nop
xor
ret
mov
outs
dec
ret
stos
loope
outs
push
pop
cmp
adc
jno
push
out
in
ret
aam
nop
jns
push
mov
sbb
pop
into
in
lock
stc
push
cmp
push
adc
dec
ins
rol
icebp
dec
scas
inc
aad
jae
pop
ins
shl
addr16
push
(bad)
mov
rcr
sbb
movs
cmp
dec
adc
cli
adc
call
jg
pushf
std
jmp
pushf
ins
inc
push
in
ret
ret
ins
dec
or
cmp
pop
push
gs
shr
sbb
out
stc
adc
xor
mov
jl
test
xor
dec
stos
lock
and
xor
movs
jmp
aam
add
pop
rcr
cld
jmp
xchg
pop
dec
push
or
(bad)
xchg
pop
sub
pop
aam
rcr
mov
cmc
fstp
add
sbb
ds
mov
rol
enter
fwait
push
lods
lahf
lock
jmp
sub
sbb
ja
mov
and
xchg
xor
adc
fild
or
pop
push
jg
sub
and
mov
push
hlt
adc
inc
mov
pop
stc
aas
sub
ret
in
jl
ins
repnz
sub
sti
pop
clc
jns
pop
(bad)
je
push
sar
mov
imul
dec
and
ficom
imul
jnp
icebp
(bad)
adc
and
adc
lea
sub
sbb
ins
loopne
ror
or
fld
or
mov
mov
shl
outs
dec
jae
aad
fmul
xor
popf
aad
ret
mov
mov
frstor
adc
mov
(bad)
rcl
pop
and
push
add
mov
jnp
add
nop
mov
sahf
xchg
sar
sub
(bad)
addr16
test
add
lds
scas
ret
mov
sbb
sub
or
cmp
int
mov
daa
arpl
jmp
or
adc
cwde
bound
retf
mov
mov
and
jmp
out
aad
in
xlat
pusha
arpl
fsub
jno
ficom
pop
movs
lods
cld
out
push
rcr
cmp
loop
hlt
mov
jecxz
xor
mov
repz
outs
mov
cmps
xchg
and
xor
cmp
(bad)
cwde
push
movs
repz
sbb
test
lds
jmp
test
xor
ss
ret
movhps
or
pop
dec
std
jne
inc
pop
(bad)
pop
adc
xor
shr
lods
sbb
repnz
out
icebp
or
add
pop
cs
and
sbb
add
xchg
cmp
xchg
pop
sub
frstpm(287
test
stos
(bad)
dec
rcr
popa
xor
(bad)
rcl
leave
cmp
dec
int3
aad
das
std
mov
imul
add
test
sti
daa
rcl
daa
adc
or
clc
sbb
out
sbb
rcl
or
and
mov
cwde
cmc
sbb
mov
push
pop
mov
jp
mov
jb
jne
(bad)
nop
sbb
scas
pop
cmp
cld
into
scas
imul
popa
push
push
lds
fidiv
leave
xchg
(bad)
and
push
mov
(bad)
fldenv
adc
dec
movs
sub
test
and
hlt
or
loop
adc
push
sbb
add
push
js
or
push
ret
movs
cmps
dec
in
mov
adc
ins
hlt
hlt
inc
sub
mov
fs
xchg
xor
add
cmp
push
mov
push
shl
or
jne
retf
cmp
and
test
mov
ror
pusha
adc
push
dec
sub
icebp
dec
pop
sbb
jno
jbe
pop
jno
cmp
jno
in
jg
popf
mov
xlat
adc
test
inc
and
sti
cmp
pushf
cmp
imul
retf
dec
mov
mov
mov
fistp
movs
add
xchg
lods
jmp
or
fsubp
pop
cli
enter
popf
retf
(bad)
(bad)
add
jb
and
das
mov
popa
jge
jg
in
cs
test
clc
sahf
xchg
pop
jle
mov
jbe
inc
or
pop
mov
scas
in
int
into
data16
aas
lds
out
xchg
cmp
test
xor
xor
jnp
imul
jo
push
jl
lock
add
adc
pop
pop
shl
sbb
sub
imul
ss
repnz
jmp
inc
stos
out
cmp
mov
leave
div
xrelease
imul
fs
or
mov
jnp
pop
dec
test
mov
adc
xchg
jmp
cli
and
rcr
bound
xlat
cmps
sub
loop
cmc
mov
mov
mov
mov
pop
pop
pop
push
sub
sub
push
xor
out
fistp
popa
inc
scas
out
ss
shl
jbe
dec
daa
push
leave
mov
ror
push
in
movs
push
mov
ss
xchg
and
es
in
cmp
lods
inc
and
lahf
pop
sub
les
xchg
add
cdq
pop
push
int3
push
or
repnz
lea
pushf
inc
dec
cmp
aam
xor
in
popa
pop
loop
and
xor
stos
(bad)
jmp
ficomp
sahf
jle
push
jle
pop
icebp
adc
sti
aas
inc
mov
mov
dec
xchg
cmp
gs
jl
and
jb
mov
icebp
shl
ret
scas
into
lods
jl
loopne
jb
push
xor
cwde
jecxz
callw
sub
pop
mov
push
shl
out
add
aas
addr16
clc
ins
and
mov
movs
sub
dec
jecxz
dec
add
jne
add
adc
(bad)
pop
dec
mov
sub
imul
ror
xor
xor
dec
pushf
pop
(bad)
lahf
adc
test
call
cmp
jo
xor
jge
arpl
cmps
push
cs
push
das
mov
out
cdq
bound
out
call
push
xchg
add
or
je
jno
std
xchg
es
cmps
call
clc
lods
and
fdiv
out
call
jo
shl
repnz
popa
(bad)
sub
ficomp
mov
push
int3
push
lods
and
ss
fcomp
dec
pop
(bad)
sar
fnsave
jg
cs
ja
pop
scas
ins
xchg
push
pop
es
mov
xor
sbb
rcr
xchg
gs
jg
add
(bad)
pop
mov
push
mov
(bad)
adc
xchg
mov
mov
in
and
lahf
or
ror
sbb
sar
pop
bound
mov
rcl
xor
movs
into
inc
js
mov
addr16
mov
mov
fcomp
push
shl
pop
loope
lds
(bad)
pop
inc
inc
addr16
enter
jp
jge
push
neg
ret
aam
bound
pop
cdq
jb
pop
sbb
out
outs
into
mov
inc
ins
into
or
icebp
pop
mov
dec
fsub
pop
or
inc
(bad)
sub
loope
mov
mov
inc
enter
outs
popf
(bad)
push
xchg
iret
sub
pop
push
shl
and
cmp
pop
sbb
or
inc
sbb
in
or
dec
and
test
pop
test
inc
iret
pop
outs
adc
stos
cld
xchg
jmp
fdivr
movs
or
or
mov
enter
rcl
jp
push
mov
xor
push
mov
test
sti
jb
add
dec
loop
or
in
call
and
fldenv
fsubr
add
movs
xchg
je
sub
inc
(bad)
dec
imul
rcr
push
or
(bad)
out
syscall
or
add
shl
loope
jns
into
mov
mov
xchg
imul
pop
bound
or
sub
pop
mov
xor
iret
test
xor
mov
sub
mov
repnz
in
cmp
ds
js
mov
jmp
popf
add
or
xchg
imul
adc
and
cli
adc
dec
cmp
pusha
icebp
ds
mov
lock
dec
or
sub
out
(bad)
cs
sti
dec
cmps
les
lds
push
js
xchg
jecxz
sbb
es
push
xor
(bad)
xor
jl
aas
fs
mov
mov
stos
mov
inc
or
mov
push
add
jge
pop
jo
and
jnp
sbb
jno
fimul
fiadd
imul
inc
fisubr
call
cmc
jbe
mov
adc
pusha
cmp
pop
fistp
and
xchg
xchg
or
pop
pop
adc
les
or
ret
sub
sub
dec
or
leave
daa
fdivrp
mov
mov
pop
mov
push
pop
scas
sbb
xchg
(bad)
inc
and
sar
cmc
sahf
mov
jmp
fadd
cwde
push
addr16
jb
loop
inc
sub
adc
imul
inc
repz
shr
jns
es
dec
push
call
inc
jg
or
enter
mov
pop
cli
add
(bad)
cmp
ret
aas
or
vandnps
cdq
lea
mov
inc
mov
test
js
mov
ja
lods
imul
mov
pop
ins
iret
lods
xchg
mov
push
jae
cmps
aas
outs
inc
outs
mov
sub
sub
push
test
dec
in
mov
out
sub
jg
xchg
(bad)
sub
mov
sub
or
pop
les
sbb
(bad)
jns
mov
cld
and
sbb
rol
adc
jnp
xor
shr
mov
repz
shl
cmp
test
scas
push
cld
movs
push
sar
fdiv
and
cmp
push
jecxz
and
and
mov
retf
dec
push
fldcw
sub
inc
or
or
xor
shl
(bad)
leave
rcl
(bad)
xor
mov
es
sub
push
ja
test
inc
js
cwde
inc
repz
and
sahf
push
or
sbb
inc
mov
sahf
outs
mov
ret
enter
cdq
and
push
jmp
or
cmc
lea
jp
outs
(bad)
rcl
(bad)
jns
pop
xchg
sub
fs
sar
retf
cmp
xor
enter
lds
mov
mov
dec
loope
mov
inc
loop
and
inc
mov
xchg
sub
fwait
cdq
sahf
sti
rol
in
jb
or
fidivr
mov
cli
imul
sbb
xor
sub
add
jne
outs
adc
sahf
iret
cmp
cmc
in
jne
cli
push
jae
aam
fcom
push
out
ja
sub
mov
jmp
pop
jg
test
sbb
xchg
aad
ins
fnstsw
les
stos
sti
add
cmps
xchg
adc
xchg
mov
mov
jecxz
push
out
addr16
and
xor
inc
(bad)
mov
pop
cwde
xlat
add
mov
sahf
pop
out
arpl
fisttp
cmp
cdq
mov
out
mov
fucomip
add
xchg
lahf
iret
(bad)
cld
jbe
mov
and
bound
pop
aam
sub
popa
imul
sub
sbb
jmp
stos
jmp
call
sub
xchg
cmp
and
mov
les
and
cdq
(bad)
test
fcomp
cmp
call
ficom
imul
xchg
push
fmul
inc
addr16
or
mov
es
jnp
xor
sahf
ja
dec
(bad)
popa
not
lds
fucomi
ds
(bad)
aam
jno
jmp
repnz
add
in
fdivr
lea
outs
aas
mov
aam
or
test
adc
inc
mov
jge
popf
in
stc
sbb
lahf
inc
fst
jno
out
jge
xchg
sbb
inc
arpl
dec
sub
sar
xlat
sbb
leave
xor
push
shl
test
fistp
xchg
pop
xchg
mov
dec
out
add
sar
jae
test
dec
xchg
xchg
mov
sbb
(bad)
fxch
adc
(bad)
cmp
mov
ret
shl
jnp
cmps
retf
data16
in
mov
cmp
xor
lods
push
push
push
fld
jg
jle
adc
jns
aad
add
popa
cmps
pop
mov
dec
add
sti
mov
push
inc
mov
mov
jns
or
sbb
mov
xchg
mov
mov
adc
xchg
outs
add
(bad)
lock
push
lods
mov
pop
fwait
bound
shl
test
jne
je
cdq
mov
mov
(bad)
cmp
call
out
jns
mov
xchg
ret
push
mov
ret
cdq
push
sub
cli
loope
(bad)
bnd
xor
rcl
add
rcl
mov
loop
(bad)
fwait
mov
dec
mov
clc
ins
cmps
dec
or
cmc
ds
mov
xchg
xor
pop
xchg
iret
mov
xor
mov
pushf
jmp
lods
(bad)
std
test
xchg
jp
es
enter
jmp
shl
pop
test
push
fs
movs
xchg
arpl
fwait
mov
dec
nop
test
and
test
mov
movs
push
les
inc
mov
sti
jns
mov
lahf
out
repz
sub
sbb
dec
fdivrp
sti
daa
vpshuflw
vpmacssdqh
jae
pusha
int3
jno
ficom
cli
stos
jbe
rol
out
fdivr
pop
add
retf
add
fcom
mov
sub
ja
pusha
xchg
ret
xchg
or
pop
jne
test
sar
mov
bound
jg
ds
repnz
jge
shl
outs
pop
mov
movs
dec
add
sahf
stc
push
cmp
fld
mov
retf
inc
jmp
mov
mov
imul
pop
sahf
adc
sahf
jg
adc
pop
mov
jno
dec
scas
add
adc
pop
adc
clc
dec
shl
movs
mov
xor
and
xchg
mov
mov
lea
push
pop
imul
jnp
fwait
add
xor
retf
fst
or
in
shr
xchg
int3
(bad)
loop
sub
in
or
(bad)
je
sub
ins
cs
and
sub
sar
jg
dec
dec
sbb
or
daa
retf
arpl
in
xor
mov
xor
call
test
sbb
outs
popa
sbb
mov
ret
xor
shl
cdq
test
jmp
icebp
push
pop
in
pop
sub
adc
mov
test
xchg
xor
repnz
mov
xchg
inc
dec
cmp
addr16
loopne
mov
mov
jl
adc
and
rcr
push
retf
loop
das
jno
or
cld
loope
add
aam
retf
sub
xchg
jnp
sub
sti
dec
jmp
ds
(bad)
in
imul
(bad)
stos
imul
xchg
test
jge
or
pop
fwait
mov
xchg
mov
dec
lods
pop
mov
(bad)
in
mov
pop
out
and
movs
inc
sbb
(bad)
out
test
ins
retf
jle
hlt
jns
scas
push
in
push
mov
xor
or
leave
jo
xchg
add
movs
test
mov
mov
icebp
or
iret
sbb
xchg
push
jae
xor
add
icebp
rcl
repnz
pop
push
sar
jns
jno
or
adc
enter
imul
not
pop
adc
xor
xchg
jae
ficom
imul
fsubr
je
je
lods
fld
pop
mov
mov
or
(bad)
sti
out
inc
gs
push
add
adc
(bad)
retf
in
out
retf
clc
pop
cmp
fldcw
shl
jmp
call
pop
cmps
inc
cmp
stos
nop
fisttp
sub
das
sub
data16
xchg
sub
mov
xchg
and
adc
xchg
push
ror
add
leave
mov
xor
fldenv
out
fst
adc
push
or
push
dec
js
push
ror
sahf
pop
int3
inc
loopne
test
mov
pop
mov
dec
sahf
(bad)
xchg
sub
xor
and
sbb
mov
out
leave
popf
adc
std
mov
lods
stos
clc
xor
push
ror
jo
(bad)
pop
inc
or
cmp
cmp
sbb
and
cmps
mov
mov
lea
fcom
or
add
retf
jmp
xchg
imul
fsubr
push
popf
and
idiv
mov
mov
mov
data16
arpl
pop
or
sbb
jae
or
in
push
or
jae
sbb
fs
les
cmp
push
inc
outs
add
into
mov
push
dec
dec
push
mov
add
inc
jmp
pop
jg
je
ins
xchg
call
add
out
jo
loop
outs
xor
cld
ret
and
into
cmp
sti
push
mov
inc
cmp
sub
xlat
adc
iret
and
pop
fnstenv
outs
xchg
mov
aam
ss
cli
imul
cs
lock
je
cmps
mov
jne
icebp
lods
js
xor
imul
pop
test
xlat
popf
jp
lods
push
mov
jns
mov
add
in
aas
aas
adc
repz
aaa
cmps
xor
imul
(bad)
dec
adc
mov
dec
lods
xchg
rcr
pop
mov
sub
or
cmps
data16
cmps
adc
push
jne
out
ins
jl
lahf
dec
cmp
dec
ins
jnp
ficomp
pusha
inc
clc
cmp
xor
xor
dec
or
push
(bad)
mov
and
or
adc
aaa
cmp
fcmovnu
push
and
sahf
sub
xchg
(bad)
push
and
inc
cmp
push
sbb
xchg
or
xchg
mov
xchg
lock
mov
stos
loop
jne
leave
shr
and
jae
je
push
xchg
add
add
mov
mov
jo
jle
sbb
sbb
mov
daa
pop
(bad)
xor
mov
mov
test
int
test
push
arpl
adc
ret
pop
jns
pop
fist
ds
fnstsw
xchg
cdq
in
xchg
push
xor
mov
cmp
loope
dec
add
add
xchg
xor
inc
aaa
jnp
jno
cmp
fmulp
pop
in
sub
retf
fidiv
xor
jno
test
mov
aaa
fisub
or
sbb
sar
cld
xor
mov
js
scas
ja
fiadd
es
daa
jge
mov
add
dec
dec
mov
aas
iret
mov
jl
es
stos
pop
in
push
cdq
jg
dec
cdq
test
mov
sbb
push
mov
shl
adc
jle
mov
sbb
repnz
(bad)
out
loope
retf
cmp
cmp
pop
(bad)
fst
mov
push
lock
xor
adc
(bad)
repnz
and
mov
icebp
mov
data16
pop
imul
sub
fsubr
jmp
and
cmp
cmp
add
sbb
test
and
cmp
jle
cmp
jg
or
xchg
in
adc
mov
add
lahf
push
cs
(bad)
jmp
push
inc
push
dec
add
jmp
test
mov
mov
push
sub
sub
or
pusha
sub
adc
or
jle
sbb
fcom
ret
std
imul
or
adc
gs
out
jo
adc
es
sbb
jo
setp
adc
stos
sub
xor
nop
test
jne
ins
push
xor
sub
movntq
out
ret
mov
mov
test
jns
in
jge
sahf
mov
out
into
inc
sub
push
popf
lea
cmps
adc
mov
rcr
push
xchg
pop
lods
loop
aad
leave
or
mov
or
adc
and
or
inc
jnp
xchg
jae
sub
scas
scas
xor
test
lds
fadd
cmp
mov
imul
push
imul
push
mov
das
mov
int3
xor
cdq
or
lea
cld
leave
push
sub
sbb
pushf
or
and
arpl
xlat
test
jae
pop
jmp
repnz
mov
or
les
(bad)
out
jl
cmp
rcl
loope
sub
adc
xchg
neg
add
mov
ins
add
icebp
mov
xchg
xor
ja
xchg
adc
neg
icebp
test
jno
ror
bound
inc
enter
add
lods
mov
or
mov
and
pop
push
push
mov
and
pop
imul
addr16
ja
dec
repnz
sub
xlat
sbb
call
popf
aam
or
sub
pop
popa
add
call
loopne
les
push
dec
cmp
sbb
jb
mov
inc
xchg
cmps
pushf
mov
jno
aaa
xchg
or
scas
scas
xchg
fimul
outs
mul
and
pop
cld
retf
xor
(bad)
stos
xchg
int3
xchg
cs
push
inc
pushf
and
scas
stos
(bad)
icebp
sub
fst
stos
es
movq
(bad)
(bad)
push
inc
jb
test
jge
inc
sub
adc
mov
cmp
or
jae
out
push
cld
push
les
(bad)
or
stc
aaa
xor
mov
jecxz
mov
fisub
cmp
test
lea
jns
xor
or
sbb
push
popf
(bad)
int3
mov
das
sbb
push
cmp
pop
mov
mov
repnz
cmps
call
pop
sbb
stos
add
push
loop
rcl
andnps
imul
test
pop
and
xchg
ss
push
daa
stos
jne
sub
sub
sbb
mov
and
inc
push
fdivr
mov
out
pop
fsub
sbb
xor
inc
iret
mov
cli
dec
push
out
xor
mov
packuswb
test
jns
pop
iret
or
mov
mov
mov
out
lods
lahf
jns
or
mov
mov
add
cmp
ret
in
lock
mov
cwde
xchg
xor
loopne
add
stos
cwde
cmp
(bad)
movs
dec
fadd
fdivr
xlat
xchg
adc
cs
mov
ins
mov
sbb
push
fist
ret
clc
mov
mov
pop
repnz
scas
xchg
lods
mov
pop
pop
sbb
mov
jb
xor
jmp
sub
mov
pop
jb
mov
cmps
sub
psubd
and
sub
xor
popa
test
loop
sbb
rcl
xor
lock
mov
mov
std
add
dec
jae
ss
test
arpl
mov
cmp
cmp
inc
clc
mov
or
pop
imul
lds
pop
shl
rol
fadd
mov
push
mov
pop
repnz
(bad)
or
push
jg
cli
ins
in
jecxz
dec
inc
loop
xchg
xor
xchg
mov
movs
nop
sub
(bad)
loope
cmp
lea
pop
xor
and
jbe
add
into
test
lahf
aad
aad
cmp
mov
mov
(bad)
pop
enter
push
sbb
xlat
cli
sub
mov
not
test
dec
je
mov
out
(bad)
mov
sti
adc
jo
jmp
shr
scas
sti
cmps
jp
out
lds
or
dec
jne
(bad)
pop
mov
pop
jl
adc
out
xchg
stos
xor
(bad)
rcl
sub
into
in
ret
iret
inc
pusha
std
popf
ficomp
mov
std
retf
cmc
push
stos
sar
sbb
mov
cmp
out
call
pop
cmp
cld
cmc
rcr
leave
(bad)
out
jl
pop
daa
jae
jmp
icebp
retf
sbb
push
add
xor
leave
aas
inc
jae
out
mov
test
sbb
mov
sub
outs
add
mov
ret
(bad)
adc
inc
jp
sahf
clc
inc
int
fmul
and
sbb
mov
mov
jp
xchg
call
mov
mul
dec
hlt
xchg
cmps
and
or
adc
aaa
push
int
pop
js
loopne
loope
xor
jge
fstp
cmps
mov
lods
dec
std
lock
or
jge
push
xchg
sub
cmc
arpl
lods
aaa
in
fincstp
jae
jmp
and
sbb
retf
inc
jbe
imul
jmp
(bad)
mov
xchg
pusha
ds
pusha
into
(bad)
rol
sbb
fisubr
enter
push
xchg
imul
xchg
sub
hlt
pop
add
cs
mov
cmp
ret
jl
or
shl
mov
cmp
add
test
cmp
retf
cmp
pop
jecxz
imul
pop
push
lea
inc
test
das
int
pop
jge
sub
je
test
and
mov
sub
lea
in
scas
dec
nop
je
push
test
mov
cli
push
test
or
fcmovu
inc
and
dec
mov
lods
adc
cmp
pop
pop
jnp
shl
cwde
inc
test
aas
mov
loope
push
pop
sub
inc
jne
mov
sbb
xchg
std
and
mov
xor
push
js
sub
inc
call
aas
(bad)
fistp
mov
mov
jb
int3
out
mov
push
imul
call
sub
clc
call
dec
ins
mov
repnz
jae
sbb
inc
jb
out
fs
inc
into
adc
pop
jp
dec
aam
add
xor
cmp
cmps
push
loop
xchg
push
data16
popa
mov
push
add
add
push
and
in
push
xchg
in
xor
inc
xor
std
mov
cmc
lods
fs
cmp
test
gs
call
inc
jp
cmp
out
sahf
icebp
push
jmp
pop
push
leave
arpl
sub
int3
cdq
outs
idiv
(bad)
mov
mov
out
ret
scas
rcl
iret
test
mov
mov
sti
imul
fbstp
repz
fild
loope
xchg
mov
ds
aad
nop
(bad)
pop
(bad)
je
sub
cmp
pop
bound
cmc
(bad)
or
and
add
sub
das
lds
jl
or
sbb
and
mov
xor
mov
out
in
dec
dec
jno
pop
in
pop
cmp
sub
lock
out
cmp
jg
or
es
fiadd
add
into
push
push
xchg
punpcklwd
sahf
dec
and
adc
pop
inc
int
addr16
int3
xor
mov
pop
and
outs
mov
aaa
scas
imul
mov
call
rcl
cmp
icebp
das
jmp
and
mov
add
scas
cmps
in
nop
repz
mov
push
jp
jmp
jb
sbb
dec
jnp
addr16
ds
popa
clc
xchg
dec
pop
add
mov
dec
adc
aam
cld
mov
sub
rol
sub
out
rcl
int3
in
jge
xchg
push
fwait
repnz
mov
or
loopne
lea
sbb
jae
ja
addr16
icebp
cmp
add
jo
jns
in
dec
sar
fdivr
push
xor
mov
repnz
sbb
cmc
in
pop
ins
jae
xchg
inc
ret
add
and
les
ret
pop
push
mov
into
pop
add
clc
popf
adc
(bad)
aas
hlt
xor
sub
pop
push
lods
dec
xchg
mov
call
sbb
xlat
inc
imul
push
ss
rol
jmp
int
push
stos
push
sbb
and
rcr
inc
leave
ds
std
xchg
push
mov
ins
mov
mul
xchg
data16
pop
imul
pop
imul
out
sti
(bad)
retf
fisubr
cwde
cmc
push
leave
xchg
mov
jbe
hlt
xor
dec
add
in
sbb
pop
es
sar
xchg
arpl
test
enter
sub
(bad)
mov
inc
retf
je
cmp
mov
adc
scas
push
jmp
es
fsubr
pop
rol
mov
cmps
xchg
pop
ret
ror
retf
ror
inc
call
jl
xor
mov
xor
push
ss
scas
dec
fcom
or
stos
(bad)
xor
mov
push
or
add
xor
xor
mov
adc
pop
push
mov
sub
shl
cmp
addr16
sub
std
pop
mov
loope
dec
or
sahf
movs
shl
ret
mov
lock
pop
rcl
test
mov
and
inc
push
sub
lahf
movs
or
outs
inc
sub
iret
int
scas
dec
es
movs
jbe
or
movs
or
sbb
(bad)
xlat
pop
xor
ficom
lds
ins
xor
cli
jae
js
jbe
ins
scas
(bad)
sti
push
sub
pop
xchg
mov
and
inc
gs
push
adc
cmps
sbb
add
int
add
out
adc
(bad)
xchg
and
xchg
fdiv
mov
inc
jb
jnp
sbb
sbb
cmp
cwde
dec
fwait
sub
inc
mov
stos
add
repz
adc
mov
pop
int3
bound
aam
mov
push
sbb
ja
pop
jb
(bad)
fld
jmp
mov
xchg
stos
jne
mov
lock
mov
jns
sbb
mov
mov
in
pop
test
rcl
pushw
pop
icebp
cmp
sti
lods
rcr
dec
retf
mov
pop
mov
popa
scas
loopne
adc
xor
xlat
sub
add
xchg
jae
sti
adc
cwde
cs
or
xlat
mov
(bad)
into
push
cmps
inc
cmc
outs
pop
mov
jle
repnz
push
(bad)
aam
jecxz
repnz
repz
add
mov
adc
lock
stc
push
pop
mov
fidivr
jbe
cmp
clc
xchg
icebp
cli
xchg
scas
aad
sar
aas
test
mov
xchg
adc
cmp
cmp
aad
pusha
(bad)
gs
pop
xlat
sti
adc
ja
jge
sub
cld
and
loopne
pop
test
push
imul
dec
inc
fsubp
mov
mov
mov
rcl
inc
inc
add
cld
inc
int
push
int3
(bad)
in
outs
lock
mov
pop
xor
xor
or
imul
mov
push
cmp
test
jmp
fwait
pop
retf
loope
out
and
jnp
scas
mov
ins
pop
cmp
into
cmps
fiadd
enter
or
out
das
(bad)
shr
adc
int
aas
retf
aas
out
xor
mov
mov
rol
mov
sbb
dec
sbb
inc
int
and
aad
jle
in
pop
push
das
bound
xchg
sub
ja
push
inc
lea
ds
fldcw
jns
xor
ret
xor
sub
femms
arpl
in
hlt
sbb
xor
jecxz
test
or
xchg
fdivr
or
inc
ror
into
and
jae
xor
dec
pop
mov
mov
cdq
add
cmp
(bad)
pusha
xchg
add
xor
in
or
bound
mov
jl
aam
cmc
gs
loopne
out
mov
imul
popa
xor
loope
mov
sbb
pop
dec
mov
das
cmc
ret
dec
test
das
adc
sub
xchg
add
hlt
js
mov
ins
push
adc
cmp
fwait
push
adc
retf
ja
xchg
lods
mov
xor
fsub
cmp
adc
adc
pop
outs
lahf
jb
stos
cmp
inc
scas
xor
repz
pop
int3
stos
push
(bad)
jle
sahf
lods
add
psrlw
jle
in
push
xchg
lods
cmp
(bad)
fimul
xchg
aas
jno
je
dec
sub
pop
mov
inc
pminsw
test
fisubr
out
fwait
mov
mov
mov
sub
pop
dec
scas
pop
bound
sub
call
mov
loope
mov
ror
mov
repnz
shl
call
ret
int
mov
push
int
enter
xor
rol
pop
jecxz
mov
das
popa
jo
push
sbb
xor
adc
jp
xor
call
and
retf
imul
xor
or
adc
fnstcw
maxps
pop
fild
jle
lock
nop
xor
in
fucomp
push
test
repnz
or
adc
cld
xchg
cwde
call
dec
fstp
mov
jecxz
xor
sahf
push
push
push
xchg
aam
idiv
iret
stos
jp
test
test
(bad)
lock
sub
push
and
in
rcr
xchg
test
or
fadd
fdivr
sbb
dec
movs
test
add
cmc
add
push
lods
imul
pop
sub
mov
in
mov
js
mov
or
(bad)
dec
add
sti
call
xchg
dec
out
pop
rol
cmc
arpl
es
xchg
icebp
fsub
call
pop
inc
dec
test
pop
or
ins
adc
leave
es
sbb
aaa
cmps
jae
jge
jb
mov
inc
xor
pop
(bad)
loop
leave
ins
in
sbb
neg
mov
inc
imul
or
or
lea
and
mov
fimul
cs
push
out
adc
(bad)
fiadd
jae
pop
movs
push
sbb
mov
rcl
in
push
js
bound
fild
rsm
movs
dec
push
sbb
into
push
sub
sahf
adc
retf
cmps
jmp
mov
push
pushf
or
cmps
jge
ins
dec
pop
jo
push
call
sub
outs
in
inc
pop
mov
loop
loopne
scas
mov
lock
in
cmp
xlat
(bad)
gs
es
or
outs
ins
push
or
pop
xchg
dec
ret
sub
pop
mov
pushf
push
cmp
jbe
adc
or
jo
aaa
add
xchg
adc
cmp
cwde
sti
inc
clc
mov
jnp
jle
(bad)
call
stos
sbb
dec
js
jno
xchg
js
mov
mov
jne
xchg
ins
shl
mov
in
dec
cs
mov
nop
bound
lods
outs
ret
or
sbb
retf
outs
dec
sub
cmp
jmp
leave
lds
cmp
aas
fstp
(bad)
fdivr
pop
dec
push
stos
and
in
(bad)
push
mov
mov
idiv
jecxz
js
mov
jnp
gs
or
data16
jge
out
mov
iret
mov
mov
out
in
mov
add
int3
or
xor
loope
aas
push
pushf
cmps
inc
adc
sub
es
repnz
stos
push
sbb
fucomi
add
fldenv
pop
and
out
ja
aaa
xor
call
test
movs
or
xchg
mov
jge
push
and
icebp
or
jecxz
sbb
fcmovnb
fcomi
fdivr
pop
pop
nop
pop
std
mov
std
adc
pop
adc
dec
aaa
pop
ss
pop
fnstsw
mov
test
jle
dec
rcl
fild
in
or
sbb
jecxz
shl
push
cld
nop
pop
mov
xchg
mov
or
push
xor
cdq
(bad)
add
dec
fimul
out
adc
enter
(bad)
pop
pop
std
in
jno
dec
enter
fnstsw
jbe
or
xor
jmp
push
sub
xor
pusha
lea
fiadd
push
dec
cmp
mov
cld
nop
sahf
sahf
xor
punpcklbw
xchg
fs
(bad)
dec
pop
sahf
mov
test
add
adc
pusha
les
mov
inc
mov
dec
jne
sbb
inc
data16
test
sbb
fld
jmp
mov
xor
scas
(bad)
jno
jp
mov
test
out
cld
mov
lods
fmul
jmp
sub
inc
inc
adc
or
ret
fiadd
daa
jno
leave
jnp
rol
mov
lods
and
cmp
cmps
mov
add
sbb
fwait
sar
fild
mov
lds
xchg
mov
ret
fadd
(bad)
lods
adc
hlt
cmp
rcr
movs
jne
push
pop
sbb
dec
movs
push
in
repz
stos
inc
ss
les
arpl
out
retf
mov
pop
xor
mov
imul
and
sahf
jmp
pop
pop
cmp
bound
mov
sub
test
sti
rcr
cwde
pop
push
fisubr
xchg
addr16
aam
push
mov
jecxz
ret
ror
loop
jno
mov
test
cmp
enter
and
into
xor
je
dec
sbb
push
jg
call
sbb
dec
mov
mov
cmp
stos
repnz
sub
cmc
in
jae
jns
xor
imul
rcr
adc
xchg
xchg
xor
and
mov
mov
enter
in
sub
xor
mov
sub
inc
jmp
and
dec
mov
lock
xor
dec
dec
pop
add
xchg
inc
sti
add
inc
and
fs
fist
in
(bad)
sbb
nop
sbb
add
popf
cmp
push
dec
pusha
mov
pusha
es
adc
ror
jmp
rcl
out
and
or
sbb
push
sub
add
cdq
addr16
adc
cmc
sbb
js
pop
fidivr
retf
rcr
add
movzx
scas
sti
dec
outs
pop
jb
retf
mov
or
mov
in
xor
imul
sub
std
and
(bad)
scas
jge
sub
xchg
cmc
push
dec
mov
fld
out
push
jmp
pop
fstp
inc
xor
sub
jbe
jnp
jb
ins
je
inc
cmp
out
js
xchg
ret
idiv
fild
jno
pop
mov
retf
loop
cmp
jmp
fcom
aam
pusha
lahf
test
loopne
out
ins
mov
add
enter
lds
aam
adc
mov
hlt
adc
loopne
stos
lock
out
mov
icebp
cmp
jle
or
inc
xor
and
cwde
jo
sbb
test
cmp
test
es
mov
pop
pop
(bad)
cmp
fcmovnbe
stos
test
xor
xor
dec
mov
jnp
sbb
repnz
adc
jo
(bad)
xchg
jp
fsub
or
pop
xchg
xchg
jg
add
adc
push
data16
push
push
xchg
aas
pop
lods
into
mov
and
add
mov
sahf
dec
scas
and
pop
or
sbb
(bad)
xchg
scas
add
mov
xchg
and
sbb
fild
scas
jp
cmp
out
and
cmps
pop
sub
mov
jb
mov
jmp
mov
mov
sub
and
dec
test
xor
pop
ins
cmp
add
or
cmp
ds
pop
mov
mov
cmp
jo
xchg
shr
sbb
jb
pop
dec
shl
sub
js
cmp
xchg
in
idiv
xchg
sbb
pop
dec
ficomp
rcr
aaa
and
repz
shr
adc
enter
sti
mov
or
push
fs
cmp
pop
pop
into
dec
cmp
nop
icebp
std
mov
inc
ret
int
mov
bnd
xor
mov
jbe
sub
sub
cld
jo
loopne
dec
fadd
sub
sbb
pop
outs
jge
pushf
loope
pop
mov
into
xchg
adc
add
sbb
(bad)
pushf
mov
mov
or
inc
mov
jae
cmp
hlt
aad
mov
pop
adc
ins
retf
cmp
ret
adc
jbe
ja
and
stos
loop
popa
fwait
dec
stos
int
xchg
and
in
jp
icebp
iret
xchg
jge
repz
xor
icebp
or
push
xchg
shr
(bad)
(bad)
test
arpl
or
mov
ja
iret
cmps
aas
stc
adc
fstp
xchg
jnp
and
leave
pop
xlat
icebp
jb
(bad)
inc
outs
cmc
dec
test
cmp
test
lods
push
xlat
icebp
lea
cmps
adc
dec
or
xor
nop
cli
mov
dec
sbb
call
add
pop
inc
test
leave
mov
push
or
es
adc
mov
sbb
xchg
push
or
pop
sbb
mov
movs
cmp
mov
jmp
xchg
in
fcmovb
xchg
sub
ins
shr
ret
loopne
and
pop
mov
daa
(bad)
pop
xor
mov
cwde
loop
ja
push
shl
push
sub
ins
aaa
push
mov
or
mov
pop
jp
popa
dec
cld
mov
sahf
add
adc
das
and
shl
jmp
ja
jo
mov
repz
xchg
aaa
jo
outs
outs
daa
test
(bad)
sar
out
pop
add
and
or
lea
pop
or
xchg
push
add
mov
or
lods
call
xchg
jge
jge
add
inc
jbe
int
and
sbb
and
retf
push
xchg
xchg
aas
inc
mov
aad
pushf
mov
add
xchg
nop
mov
jae
outs
scas
sub
xor
mov
mov
rcr
jnp
jl
hlt
nop
add
pop
jo
cmp
mov
cs
mov
mov
and
push
sti
or
jmp
jae
rol
lea
or
inc
or
call
loope
imul
std
push
or
jp
movs
push
add
add
cwde
adc
jbe
adc
inc
mov
and
pushf
dec
sbb
add
dec
push
(bad)
push
jns
cli
cmp
mov
mov
fxch
inc
stos
inc
movs
jle
aam
rol
aaa
out
out
add
fwait
in
jle
push
jb
or
sub
sub
push
sub
leave
sahf
jl
cli
jmp
cmp
in
adc
jno
sti
stc
sar
test
into
lahf
mov
bound
mov
xchg
xchg
mov
mov
clc
das
fninit
(bad)
and
test
sbb
push
jmp
movs
inc
sub
sbb
mov
fs
aam
mov
cld
or
xchg
sub
pop
adc
fwait
sub
xor
mov
xchg
iret
outs
push
mov
cmps
and
pop
mov
stc
das
test
inc
push
pop
ins
ja
(bad)
xor
or
sti
mov
dec
cmp
lahf
push
loop
inc
jl
xchg
ret
iret
pop
lea
sbb
cmps
or
mov
ror
push
cmp
int3
cld
aam
ja
xchg
sub
dec
add
punpckhbw
jmp
nop
in
mov
pop
adc
out
push
xor
jl
fistp
in
stos
popf
dec
jbe
sar
push
stos
add
outs
push
icebp
into
and
push
imul
aaa
xchg
cmp
jl
shr
and
jmp
pushf
mov
pushf
xor
call
rol
arpl
cwde
lods
inc
inc
sahf
or
cwde
adc
jb
and
push
add
xchg
add
push
cs
jmp
inc
fdiv
gs
sbb
fsub
cmc
pusha
push
push
cwde
lods
push
push
and
xchg
icebp
ins
mov
test
jns
jg
or
mov
stc
scas
arpl
sbb
rol
mov
js
jae
sbb
call
es
mov
fstp
xor
in
in
pop
(bad)
and
lock
gs
inc
lds
xlat
push
jg
pcmpeqw
pop
mov
or
imul
js
fimul
retf
out
and
xlat
bswap
je
mov
sbb
sub
out
add
nop
out
test
rol
inc
jnp
push
shl
mov
daa
stos
js
mov
stos
leave
sub
jg
loopne
mov
mov
je
clc
mov
pop
push
pop
aam
test
and
rcr
cwde
not
cmp
push
cmp
addr16
push
and
sbb
dec
int3
inc
push
pop
or
mov
ins
loope
les
dec
mov
int
daa
test
popf
xor
ss
inc
jmp
xor
push
jmp
and
dec
loop
adc
pop
and
pop
xchg
xchg
dec
sub
mov
aaa
pop
fisub
mov
(bad)
repnz
sub
push
in
push
adc
xchg
std
dec
add
xchg
ins
fdivr
mov
push
dec
test
(bad)
xor
sub
add
sar
push
push
jmp
add
pop
pop
or
adc
int3
fnstsw
ds
stos
ficom
mov
xlat
hlt
xchg
inc
shr
or
call
jp
mov
imul
mov
jl
daa
retf
(bad)
cmp
jo
inc
ja
and
xchg
scas
inc
aaa
or
call
ss
jecxz
dec
cmp
fistp
mov
jmp
mov
jbe
fldl2t
rcr
scas
(bad)
shr
and
jno
imul
imul
pop
or
mov
sbb
jp
cmp
in
retf
and
push
cdq
cld
aas
cmps
sub
pop
mov
xor
or
pop
add
test
fld
mov
xor
jmp
(bad)
xchg
in
loope
stos
xor
dec
fucomi
jle
shr
fisubr
ja
test
push
sub
aas
pop
sub
push
(bad)
adc
call
(bad)
mov
xor
xchg
jnp
lea
out
push
fisttp
mov
retf
out
sar
test
outs
enter
cmp
and
std
and
sub
mov
fadd
xlat
lods
nop
data16
fwait
and
arpl
test
adc
add
lods
stos
xor
scas
adc
sub
jbe
into
dec
adc
push
add
xchg
std
les
retf
sub
inc
sahf
cli
sar
inc
sbb
mov
push
addr16
or
cmps
out
mov
cmp
adc
and
mov
not
xor
adc
fnstenv
outs
inc
sti
push
sbb
aad
jne
sub
into
mov
xor
sub
mov
sub
add
aam
iret
and
add
fcomp
pop
stc
stos
push
pop
inc
sub
bound
mov
jle
loopne
sti
shr
ja
pmuludq
and
scas
cmp
add
mov
imul
je
pushf
repnz
or
fs
xor
call
rol
sbb
dec
jp
mov
cmp
jno
nop
mov
cmp
ins
jmp
sub
sbb
and
xchg
rcr
or
jb
mov
or
dec
cmp
test
mul
test
lock
mov
mov
or
pop
int
pop
sbb
pop
inc
pop
sub
inc
mov
or
lds
jo
movs
retf
retf
cmp
(bad)
cmp
add
dec
or
xchg
scas
bound
shr
mov
movs
adc
push
cwde
sti
int3
cmp
cmps
lds
mov
rcr
xor
xchg
cld
adc
jne
cmp
fxch
pop
fs
in
addr16
xor
(bad)
es
int3
and
mov
idiv
lea
cdq
daa
xchg
push
jnp
sub
or
mov
sub
and
mov
fidiv
fild
xor
and
cmp
retf
push
inc
add
sbb
fucomp
sub
inc
mov
pop
ins
clc
sub
inc
cmp
(bad)
mov
mov
push
mov
push
mov
mov
pop
cmp
push
movs
jb
pop
out
push
pop
aad
pop
ret
xchg
fs
out
jle
dec
xlat
(bad)
xchg
sbb
out
outs
xlat
cdq
pusha
fwait
(bad)
xchg
out
(bad)
lock
sbb
adc
(bad)
fwait
mov
test
call
cmp
jmp
jne
(bad)
fst
or
in
mov
push
pushf
xchg
pop
fwait
xor
sub
and
mov
dec
icebp
or
into
dec
sbb
jo
daa
out
xor
mov
data16
adc
push
out
dec
sub
popa
je
daa
aas
mov
ficom
loope
xchg
(bad)
mov
scas
lods
imul
enter
fmul
rcr
and
(bad)
(bad)
lock
cmp
mov
test
addr16
push
push
adc
mov
add
xchg
xor
mov
hlt
int3
repnz
(bad)
dec
sbb
sbb
lea
pop
and
add
out
jl
into
in
mov
mov
bound
add
add
fstp
dec
jo
sti
cs
test
imul
jmp
xor
repz
hlt
std
mov
dec
test
shl
cmc
(bad)
cmp
pop
push
mov
popf
ja
cld
outs
ret
ds
adc
loopne
mov
jge
xlat
popf
xor
scas
and
jo
adc
int
mov
mov
xchg
jbe
inc
pop
xchg
xchg
push
xchg
jg
in
retf
cli
or
stos
lods
out
dec
or
ss
adc
arpl
inc
fsubr
in
out
jnp
xchg
bound
cmps
cmp
jp
stos
in
vcvttsd2si
dec
into
adc
int
jmp
jae
push
mov
adc
and
mov
inc
inc
mov
(bad)
out
sub
rcl
repz
rol
pusha
xor
int
inc
and
icebp
jo
test
cmp
add
std
cmp
inc
push
lea
or
daa
lock
repz
cwde
in
jb
jl
inc
cmp
loop
test
push
cmp
mov
(bad)
test
int3
push
dec
daa
pop
push
jmp
cmps
add
in
shl
push
hlt
pop
inc
nop
into
fistp
mov
mov
jbe
pusha
sub
xor
or
ins
dec
xchg
push
in
in
pop
pop
or
add
stos
jns
les
rcr
sbb
dec
jle
(bad)
ins
push
test
cmp
stos
push
sbb
(bad)
or
fadd
jns
sti
pop
fwait
push
(bad)
js
icebp
sub
jb
(bad)
push
push
hlt
jo
mov
jmp
ror
pop
retf
xchg
xchg
cmp
nop
pop
imul
push
sbb
movs
sar
cwde
mov
inc
mov
xor
sar
loopne
sub
lea
cmps
call
lods
iret
test
jne
fisub
and
popa
aaa
(bad)
scas
mov
adc
loop
ja
stos
xor
mov
mov
lock
add
sbb
inc
and
and
inc
sub
cmp
jle
xchg
outs
inc
add
fdiv
or
jp
push
movs
jp
std
scas
pop
imul
movs
scas
dec
jnp
aam
outs
or
or
pop
inc
and
sahf
out
movs
in
push
cmp
test
jo
sti
cmp
jno
adc
adc
adc
sbb
xchg
out
call
rol
jnp
xor
ins
cdq
dec
jns
rcl
mov
inc
sub
xchg
out
cmps
outs
aas
sub
mov
inc
push
les
sahf
pop
pop
cs
pop
stos
xlat
js
inc
inc
mov
jns
push
mov
(bad)
mov
adc
sbb
cmps
inc
retf
pop
adc
inc
pop
push
mov
mov
imul
mov
ret
add
mov
push
push
in
mov
mov
jb
inc
loop
(bad)
ja
out
cli
test
inc
and
imul
mov
push
jmp
seta
fs
aam
test
clc
jne
lea
jno
aaa
je
aam
sub
pushf
inc
movs
ret
adc
add
mov
aad
xchg
mov
jbe
shr
xchg
dec
lods
mov
and
pusha
cmp
or
xor
retf
(bad)
xor
test
or
mov
test
lods
retf
pop
push
fwait
xlat
cld
ss
aam
pop
(bad)
xchg
add
pop
je
test
xor
stos
or
mov
std
adc
aam
movs
pop
retf
inc
mov
test
out
cmp
sbb
aad
popa
test
test
ret
es
test
or
(bad)
sbb
push
push
fidiv
adc
bound
or
retf
add
jbe
out
push
popf
sub
inc
rol
sahf
popf
into
inc
add
jnp
call
(bad)
das
leave
arpl
add
pop
sub
jl
sbb
jae
pop
icebp
xchg
mov
push
fsubp
call
xchg
ret
cmp
add
popa
call
jle
stc
arpl
hlt
push
retf
jge
pop
pop
jle
push
and
ficomp
loop
mov
iret
cmp
movs
jno
into
xchg
and
sbb
imul
or
sbb
mov
aam
idiv
(bad)
in
cdq
pop
(bad)
mov
rcl
cs
dec
adc
sub
push
mov
dec
mov
xor
sbb
add
inc
std
loope
mov
adc
daa
mov
dec
(bad)
sbb
out
jbe
test
push
inc
(bad)
mov
cmp
ss
jp
mov
cli
ins
cdq
popf
xchg
dec
push
sub
sar
loopne
mov
jo
int3
fbld
dec
cdq
or
aam
jmp
jne
fild
xchg
imul
leave
jns
mov
mov
iret
and
dec
mov
and
stos
adc
dec
out
xchg
and
cld
js
cmp
cdq
dec
sbb
jbe
mov
jecxz
push
aad
sbb
ins
gs
xlat
sahf
lods
sti
mov
xor
mov
das
(bad)
loop
push
xor
rcl
mov
in
xor
scas
sub
mov
xor
lock
ror
push
popa
rcl
lahf
pop
jnp
jg
push
dec
je
movs
inc
out
mov
rcr
shr
lahf
jbe
sub
ja
test
pop
ret
or
and
sub
mov
repnz
adc
jle
push
clc
ds
call
scas
arpl
cmp
sub
in
xchg
frstpm(287
xchg
dec
scas
push
mov
lahf
mov
lock
and
ins
cmc
sbb
mov
call
mov
sar
sub
lods
sub
mov
imul
retf
scas
mov
outs
push
jmp
les
js
cmp
inc
pop
inc
(bad)
movs
retf
jecxz
adc
and
push
cmp
dec
cs
push
pop
pushw
sub
in
movs
loop
xor
div
push
adc
icebp
cli
mov
(bad)
xchg
pop
cli
test
dec
mov
pop
or
fs
loop
idiv
ss
or
imul
dec
gs
add
push
loop
adc
hlt
mov
into
push
(bad)
bound
inc
pop
popa
jo
push
add
shr
jae
pop
test
mov
out
adc
add
xchg
ret
jl
adc
mov
and
push
lock
and
xchg
xor
rcr
sbb
add
ss
(bad)
imul
mov
int3
inc
mov
add
add
repnz
xchg
pusha
mov
push
adc
adc
xor
pop
jge
and
dec
push
cmp
shr
push
les
jbe
mov
xchg
mov
ret
and
xchg
dec
test
dec
addr16
icebp
or
sbb
aad
xchg
or
sub
mov
xor
cmp
shr
mov
mov
pop
es
cs
push
fwait
repz
dec
push
call
(bad)
gs
imul
ins
sbb
dec
jge
pop
nop
jno
dec
inc
pop
imul
lods
mov
or
loop
inc
push
jns
out
leave
loope
neg
ins
sti
stos
(bad)
mov
repz
mov
xchg
div
pop
pop
sub
sbb
xor
out
sbb
test
xchg
mov
xchg
fxch
and
mov
dec
mov
pop
or
mov
jns
and
mov
rcl
adc
out
mov
or
jae
push
pop
out
popf
rol
mov
and
scas
sti
es
(bad)
jmp
or
add
fs
add
cmp
outs
push
fisub
repnz
aaa
dec
fcos
push
call
leave
xchg
and
push
aad
lods
adc
in
pop
sar
mov
les
out
mov
ret
mov
dec
pushf
inc
jecxz
cmp
cmps
out
iret
sub
dec
mov
cmp
add
jo
shl
adc
test
pop
pop
mov
add
add
movs
inc
movs
cdq
sbb
jb
out
pop
cmp
mov
in
nop
jno
shl
mov
push
lea
dec
xor
add
adc
stos
div
in
bndldx
loop
mov
sub
into
push
mov
sub
fwait
js
jp
bound
cmc
cmp
mov
push
or
scas
stos
or
adc
push
fild
add
dec
scas
xor
inc
fimul
cmps
adc
mov
lods
sbb
pop
sbb
loope
jge
dec
jmp
push
add
cmp
mov
jmp
sar
jmp
pop
jnp
xor
test
aas
xor
adc
jae
dec
push
into
push
movs
pop
fcom
adc
pusha
or
div
cmp
xchg
xor
sbb
(bad)
(bad)
and
(bad)
in
xchg
push
mov
test
pop
(bad)
xchg
pop
sar
test
xchg
mov
mov
xor
xchg
push
or
pop
out
mov
stc
sub
mov
fucomp
mov
push
push
nop
and
push
sti
mov
mov
lods
sbb
push
sbb
call
inc
aad
mov
or
xchg
movs
adc
mov
add
jnp
add
jae
fwait
mov
out
xor
jae
mov
pop
sub
xchg
jle
push
mov
push
cli
cmp
loope
inc
ds
dec
mov
sbb
cmp
pusha
repz
stc
dec
jmp
inc
ret
sub
test
jbe
sbb
cli
lea
call
retf
push
das
daa
das
jg
mov
pop
and
gs
and
pop
sbb
xor
test
and
mov
and
jmp
sub
dec
pop
add
mov
ror
stos
mov
add
adc
into
mov
scas
lahf
mov
lods
out
dec
mov
sar
icebp
aaa
cld
mov
scas
cmp
shl
cmp
jbe
mov
(bad)
mov
repz
adc
dec
adc
int
js
mov
inc
shr
cmp
pop
mov
cmp
stos
dec
loop
fistp
(bad)
fstp
mov
mov
bound
push
mov
movs
imul
jg
popa
jb
or
mov
(bad)
hlt
and
jb
(bad)
mov
test
(bad)
test
in
cli
jecxz
pop
ja
sbb
dec
mov
inc
jge
xchg
pop
es
jle
push
out
xchg
mov
lods
ret
call
mov
cmc
adc
pop
dec
cmps
sbb
out
cli
inc
loop
cli
mov
bound
call
pop
js
jnp
fs
pop
aad
dec
push
fdiv
and
clc
lds
stos
repnz
mov
imul
jns
cmps
mov
xor
inc
jg
jmp
mov
cs
and
lea
adc
adc
mov
cmp
pusha
fstp
ror
jnp
mov
sub
inc
mov
xor
xor
retf
fistp
and
mov
sub
loope
xchg
imul
outs
adc
or
out
dec
and
adc
loope
sub
ror
gs
xor
mov
lods
jg
out
pop
lea
stos
out
dec
jb
sahf
mov
loope
aas
sti
jge
jl
movs
adc
sbb
sbb
int
pop
and
loopne
xchg
pop
jmp
sti
or
jle
sub
fsubp
and
ret
cmp
mov
movs
and
push
xlat
repnz
arpl
out
xor
sahf
sub
retf
dec
xchg
push
dec
sub
cli
pop
arpl
mov
sti
cdq
or
push
inc
test
inc
popf
fsubr
stc
data16
(bad)
push
loopne
xor
mov
xchg
xor
cmp
jns
xor
mov
fcomp
repz
push
jbe
adc
cmps
sti
xchg
mov
lods
adc
mov
cmp
jp
pop
in
leave
mov
xchg
aaa
test
leave
pop
jmp
jnp
lods
sub
outs
push
out
sub
in
loope
je
or
in
add
cmps
mov
test
outs
pop
push
inc
sar
fcom
inc
ret
int3
xchg
retf
mov
sub
mov
xor
stos
inc
and
je
mov
sub
pop
xlat
dec
xchg
popa
or
and
pop
push
je
xchg
cld
cmp
not
jmp
and
outs
mov
fdecstp
push
mov
ins
repz
adc
outs
movs
test
pop
in
add
mul
mov
cmps
out
mov
jmp
jbe
jmp
xchg
shl
call
enter
mov
adc
lds
aaa
out
popf
mov
sub
loope
jmp
movs
setb
push
cdq
in
adc
sub
cmp
push
and
fcmovu
push
push
lods
or
xchg
xchg
fstp
mov
rcr
(bad)
idiv
jp
push
addr16
jle
sub
cmp
push
outs
jbe
add
inc
adc
sbb
in
test
rcl
mov
push
cmp
and
leave
rol
lods
lock
in
pop
lods
nop
mov
xor
(bad)
fldcw
jmp
or
sbb
xlat
add
jb
fst
jno
jno
out
outs
pop
jne
or
add
cmc
aaa
mov
dec
ja
jp
outs
mov
add
data16
test
(bad)
stc
pop
inc
xchg
dec
mov
std
add
sahf
inc
inc
mov
into
pop
in
sbb
adc
out
imul
inc
sbb
add
sbb
adc
mov
push
or
dec
xchg
iret
adc
sbb
xor
das
iret
and
jmp
fstp
sub
dec
cwde
push
data16
sub
clc
sbb
add
mov
ja
ret
push
and
pusha
(bad)
ffree
aaa
in
mov
js
pop
xchg
out
repz
(bad)
xor
mov
jnp
pop
daa
or
aam
daa
popf
pusha
pop
shr
int
pop
cmp
aam
test
dec
dec
add
mov
dec
jae
(bad)
jmp
call
jg
mov
std
or
arpl
ins
ins
ret
scas
dec
jb
jmp
cmp
stc
pop
outs
mov
dec
add
in
add
mov
out
inc
cmp
adc
inc
or
in
(bad)
es
addr16
mov
imul
lock
xchg
and
inc
mov
push
mov
xor
cwde
push
rcr
push
xchg
add
cmp
adc
lods
fcmovne
pop
mov
arpl
mov
in
aad
xor
xchg
or
mov
sti
dec
test
addr16
mov
push
dec
sbb
jg
dec
pusha
adc
fidiv
push
mov
lods
lea
(bad)
sub
jmp
lods
mov
test
mov
mov
ds
pop
mov
js
fimul
js
repz
imul
xchg
int3
push
enter
sub
ret
cmp
xor
mov
sbb
sub
or
jg
xlat
xchg
shl
nop
(bad)
xchg
jl
xor
and
in
bound
push
sti
sub
pop
adc
ret
cmp
movs
mov
xor
lods
push
rcl
jge
clc
icebp
adc
or
lds
jmp
push
or
sub
test
xor
shl
mov
and
pop
sbb
shr
test
dec
aam
push
xlat
mov
jp
cmp
sbb
mov
push
call
ins
dec
cmp
(bad)
mov
rcr
aas
mov
sub
push
pop
inc
jne
inc
ror
xchg
cmps
test
add
je
sub
test
movs
shl
xor
fdivr
cmp
sbb
mov
clc
adc
inc
fiadd
push
mov
cmp
xchg
ror
lods
mov
mov
rcl
add
jo
xchg
or
dec
pop
add
push
dec
jbe
pop
push
pop
jecxz
inc
pop
xor
in
cmp
aas
cmp
push
inc
nop
push
arpl
ret
cmp
inc
pop
js
sub
scas
jecxz
(bad)
adc
xor
ss
retf
std
or
cmp
jle
ins
(bad)
mov
aaa
cmps
push
or
jg
adc
jge
into
aaa
loop
push
push
push
int
cmp
nop
add
cmp
jae
test
(bad)
push
repz
adc
pop
aaa
mov
sbb
pop
ins
jp
xlat
jle
push
in
loope
push
mov
scas
lahf
addr16
sub
inc
repz
dec
mov
adc
jb
ds
cmp
das
mov
and
in
loopne
(bad)
fstp
mov
add
aaa
push
loop
mov
cmp
jle
dec
pop
cdq
dec
pop
dec
pop
jno
dec
ins
aam
test
inc
lock
mov
movs
jae
pop
ins
cmp
cmps
out
adc
sub
jne
in
mov
dec
loope
ins
mov
mov
ds
fldenv
in
jl
cmp
sub
sub
push
popf
pop
sub
or
sub
mov
cdq
sbb
add
in
test
jmp
sbb
cs
cwde
cs
out
inc
push
lock
adc
ret
out
or
(bad)
ss
xor
inc
jbe
xchg
data16
jl
frstor
clc
mov
dec
mov
push
ss
dec
jbe
lods
aas
nop
push
xor
popf
je
add
mov
in
sub
mov
sub
and
mov
imul
dec
test
test
out
push
push
loope
lods
and
push
into
and
mov
pushf
sbb
jns
sbb
and
(bad)
ja
pop
in
xor
inc
retf
lods
inc
repnz
cdq
or
std
sub
jo
ftst
sahf
shr
pop
out
dec
mov
int
rcr
sub
loopne
(bad)
and
(bad)
mov
cmp
stc
stos
inc
fincstp
inc
fs
retf
or
xchg
adc
test
sbb
inc
and
add
or
enter
lds
sbb
pop
add
dec
rol
cmps
out
add
sub
mov
adc
into
sub
xchg
and
push
mul
lea
and
xchg
cdq
fld
shr
stc
sub
xor
ret
inc
mov
pop
scas
out
aad
jne
in
xlat
movs
lds
fneni(8087
cmc
add
enterw
loopne
xchg
movs
sbb
call
pop
fiadd
jecxz
mov
jo
es
cmc
xor
xor
pop
outs
repnz
aaa
push
mov
inc
or
push
mov
dec
mov
pop
xchg
int
outs
imul
inc
in
popa
adc
pop
fs
loopne
push
push
(bad)
in
out
int3
xor
pop
mov
and
sbb
loopne
dec
mov
fcomip
shl
(bad)
(bad)
push
mov
adc
inc
jg
jmp
icebp
popa
xchg
outs
xchg
jl
mov
sqrtps
hlt
push
imul
jbe
dec
mov
gs
mov
adc
addr16
shr
scas
retf
cmp
pop
push
sbb
btr
imul
and
or
sbb
jp
out
popf
jb
mov
mov
mov
test
pop
leave
push
add
dec
inc
and
imul
je
sub
loop
pop
mov
scas
cmp
fst
jmp
loop
nop
out
push
pop
test
mov
mov
xchg
inc
lods
mov
pop
mov
es
fstp
lea
jmp
fmul
jno
enter
sbb
lahf
pop
movs
adc
fild
push
adc
sbb
outs
aad
adc
rcr
jns
sti
dec
int
sbb
outs
sub
push
adc
inc
fnsave
xor
fdivr
arpl
mov
enter
mov
mov
ins
cmc
cdq
mov
shl
xchg
fs
data16
retf
cmp
mov
xor
std
jl
stc
fiadd
shl
adc
adc
pop
test
dec
jne
shl
jle
pop
add
mov
shl
and
sar
or
sub
sar
adc
jecxz
clc
xlat
retf
fcmovu
xor
cli
or
mov
jne
xor
dec
repnz
mov
xor
jnp
les
repnz
inc
imul
inc
jge
in
pop
sahf
fisttp
call
cli
imul
(bad)
nop
add
mov
std
or
dec
jge
dec
dec
sub
shr
sbb
movs
push
jl
inc
loopne
imul
inc
and
push
sar
ret
mov
or
cli
cmp
arpl
(bad)
mov
retf
cmps
sub
and
fld
and
xor
shr
lds
inc
mov
add
js
jae
jmp
sub
push
stc
push
mov
inc
adc
test
sub
xchg
xchg
pop
shl
pushf
push
pop
inc
retf
sub
lea
jmp
xor
jbe
fsubr
jmp
pop
popa
inc
shl
add
mov
pushf
xchg
mov
daa
ror
fst
dec
shl
sub
pop
push
xchg
test
xchg
mov
fdivp
sbb
sub
stc
ret
bnd
inc
jmp
inc
jns
shl
jle
int3
ds
mov
adc
mov
adc
mov
mov
push
(bad)
js
in
inc
jmp
sbb
jle
mov
jmp
shr
push
mov
aaa
xor
out
out
mov
mov
add
push
sti
sub
inc
inc
mov
aas
enter
lock
fcmovbe
or
fisubr
and
add
or
mov
or
fimul
push
jo
jmp
scas
xor
push
outs
fsubp
stos
in
xchg
push
or
popa
sub
scas
les
stos
pop
or
push
call
std
stos
mul
or
push
out
mov
mov
and
cmp
outs
or
cmp
outs
(bad)
and
imul
jle
dec
ror
xchg
adc
loop
xchg
retf
cwde
out
xchg
push
xchg
pop
lods
cmc
es
sub
inc
(bad)
lea
fisubr
into
aam
fmul
arpl
sti
fstp
shl
add
fs
loope
sbb
cld
ss
dec
lods
ficom
xor
adc
cld
jge
sti
imul
int
and
lahf
mov
outs
int3
lods
mov
je
or
(bad)
idiv
mov
(bad)
cmp
shr
stos
out
push
int
sbb
mov
adc
int3
cmp
xor
or
lods
mov
mov
std
mov
and
push
pop
jge
int
mov
jns
dec
pop
push
(bad)
xchg
mov
sti
in
arpl
jge
push
aam
fdivr
dec
mov
push
push
stc
fld
cld
imul
loope
out
call
jmp
int3
popa
sbb
push
xchg
and
pop
add
ins
adc
mov
or
adc
jmp
aaa
rcr
lock
xor
xchg
outs
outs
adc
inc
aad
dec
ret
jecxz
std
add
add
push
mov
ins
and
add
mov
(bad)
iret
jne
mov
inc
cmps
adc
sti
and
dec
not
ins
and
out
lea
sub
add
push
dec
xchg
inc
jmp
ud0
jne
lds
(bad)
leave
(bad)
cmp
mov
dec
retf
pusha
test
rcr
in
clc
test
add
ins
fdiv
jmp
xchg
and
loope
jns
shr
pop
mov
cmp
mov
cmc
sbb
addr16
push
jmp
mov
push
push
in
ds
xchg
(bad)
xchg
test
daa
loopne
mov
push
push
jmp
xor
test
pop
dec
xchg
or
dec
push
out
mov
out
nop
jl
jne
xor
xor
sub
and
mul
outs
mov
cli
sub
xchg
sub
leave
(bad)
rcr
xchg
mov
inc
in
fldcw
retf
loope
xchg
push
push
pop
mov
adc
scas
push
xor
out
call
push
call
pop
jo
pushf
jo
mov
add
dec
mov
sub
mov
mov
imul
push
mov
sbb
add
mov
pusha
mov
not
add
dec
out
inc
ds
push
mov
repnz
test
cs
pop
loopne
xor
outs
iret
jmp
pushf
ins
mov
not
aam
mov
mov
mov
sub
push
mov
outs
inc
jge
xchg
jb
test
fild
pop
enter
mov
add
mov
aaa
out
arpl
mov
mov
aam
pop
clc
cwde
dec
mov
test
or
call
aas
sbb
jmp
or
pusha
xchg
out
mov
xor
xchg
sub
les
sbb
add
lock
mov
addr16
into
jnp
mov
sub
adc
icebp
adc
pop
cmp
mov
fbstp
cli
dec
rcl
jle
and
push
inc
jecxz
aad
dec
inc
arpl
enter
sahf
jmp
mov
iret
rcl
jle
pop
fwait
call
dec
mov
jno
aad
in
push
cmp
inc
jmp
mov
mov
mov
mov
sub
xor
add
inc
or
xchg
mov
stos
not
jl
adc
cmps
and
imul
movs
mov
shr
pop
cmp
mov
pop
cmp
in
pop
test
int3
or
sbb
mov
mov
les
xchg
clc
(bad)
cmp
imul
mul
xacquire
lahf
std
bound
cmc
xchg
call
ins
loope
and
int3
mov
push
repnz
sub
lods
adc
rsm
and
lock
out
pusha
mov
dec
push
out
push
adc
mov
js
imul
inc
aaa
sbb
mov
sub
scas
lods
mov
fild
ret
dec
fwait
(bad)
sbb
jle
fld
dec
idiv
cmp
mov
outs
dec
jnp
jbe
lods
mov
dec
(bad)
dec
mov
popa
adc
xchg
wbinvd
pop
xchg
inc
mov
jne
das
lds
xchg
das
pop
les
push
and
push
lods
popf
(bad)
repz
fcom
int
or
push
(bad)
(bad)
aam
icebp
adc
imul
mov
dec
add
lock
pop
imul
(bad)
jns
loopne
pop
ret
enter
xor
xchg
call
xchg
(bad)
(bad)
shl
cmps
jae
sbb
jmp
adc
jae
dec
lds
fucom
mov
mov
xchg
movs
inc
pop
dec
jg
xchg
out
sub
aad
sar
xlat
pop
cli
or
mov
lock
and
inc
jnp
and
aam
push
loopne
jne
xor
inc
xlat
outs
push
xlat
or
cmp
out
inc
fstp
dec
xchg
mov
pop
sbb
int
pop
adc
mul
pushf
adc
push
enter
(bad)
xor
mov
scas
adc
shl
sti
sub
cli
icebp
push
inc
les
lea
sbb
popa
aad
xchg
inc
jg
popa
nop
xor
mov
shl
xchg
inc
xor
lods
mov
push
stos
sub
and
pop
adc
jge
mov
pop
fwait
xchg
mov
mov
movs
jp
pop
leave
les
mov
mov
cli
mov
add
faddp
popf
xor
sub
dec
out
pop
mov
mov
pop
xchg
xchg
sub
loope
pop
jmp
sub
inc
mov
jle
dec
loopne
lea
jno
sub
mov
fnstcw
dec
and
inc
add
jecxz
stos
add
xchg
and
adc
mov
or
add
push
mov
aam
sar
mov
enter
or
movs
cdq
inc
xor
sar
das
retf
jns
cld
push
mov
mov
xchg
jns
shl
(bad)
adc
mov
punpckhwd
jp
addr16
into
sbb
jo
fiadd
inc
and
xor
and
mov
call
add
dec
std
mov
icebp
std
aad
xor
xor
ds
mov
loopne
xchg
jns
ds
ss
out
(bad)
adc
cmc
mov
mov
test
popf
add
cmc
rcr
pop
cld
xchg
mov
lods
jmp
cmps
xchg
ins
call
mov
mov
pop
(bad)
mov
mov
jo
mov
cli
jno
dec
mov
pushw
shl
xor
test
mov
cmps
adc
inc
adc
ds
test
mov
xchg
xchg
repnz
ret
ror
ja
enter
pusha
dec
or
popa
mov
push
jmp
mov
popf
pop
dec
cmp
mov
lock
or
mov
push
(bad)
push
cs
std
and
mov
lods
push
push
mov
inc
push
nop
fiadd
jmp
mov
mov
inc
arpl
aaa
addr16
pop
adc
fisubr
lahf
cmp
clc
add
sub
out
cwde
fild
movs
(bad)
xor
pop
push
faddp
rol
fisttp
xchg
fwait
dec
and
movs
enter
pop
mov
push
out
(bad)
jne
inc
push
bound
mov
jno
loope
jl
test
rol
outs
fild
xchg
cli
jmp
in
or
mov
mov
int3
jle
stos
adc
(bad)
gs
(bad)
aas
shl
lea
add
int
out
inc
je
and
inc
mov
ret
sub
test
jns
mov
(bad)
sahf
mov
rol
cmp
ins
stos
mov
jmp
inc
paddw
xor
ds
lods
or
adc
jne
fsubr
stc
mov
inc
out
sbb
inc
pop
iret
mov
xchg
jbe
test
dec
test
push
push
leave
and
fs
jnp
or
sub
fcmovbe
jno
gs
xor
in
jle
int
pop
(bad)
mov
jbe
aad
clc
cdq
push
push
ret
pop
sbb
xchg
mov
xor
push
popf
out
xor
fdiv
jmp
call
rcl
xor
aam
loope
mov
push
scas
loopne
fimul
mov
mov
xchg
xor
test
mov
mov
mov
cld
sbb
jne
mov
ss
popf
test
or
(bad)
mov
ins
jbe
leave
sub
cmp
lds
pop
and
cwde
ins
add
jne
add
push
jbe
rol
sbb
repnz
cdq
mov
push
imul
pop
scas
mov
in
jne
jb
add
mov
xor
mov
test
sbb
clc
inc
loopne
inc
xlat
push
loope
movs
nop
rcr
sub
(bad)
arpl
mov
xor
jns
out
inc
hlt
ins
sahf
push
cdq
xchg
loop
(bad)
aam
test
or
aas
cmp
mov
jo
mov
sbb
nop
imul
mov
sub
pusha
loope
std
fcmovne
xchg
sar
test
out
adc
cmovs
and
sbb
je
xor
add
ins
pusha
sbb
mov
jae
fsubr
out
xchg
lock
repnz
xchg
sub
dec
clc
adc
cmp
sahf
fdiv
pop
aas
mov
xor
fwait
sub
cwde
jl
jmp
or
pop
cmps
cli
xchg
pusha
aaa
dec
jne
or
ror
jb
push
mov
call
pop
and
jo
aaa
jbe
jg
inc
lahf
mov
fcmovne
mov
xchg
xor
inc
push
dec
sar
fs
push
ror
xchg
bswap
inc
inc
lock
push
dec
xor
adc
push
pop
out
xor
push
add
test
imul
or
imul
mov
jp
or
pop
sub
sbb
fadd
inc
lods
inc
ss
sbb
arpl
das
les
inc
pop
jb
jae
std
mov
pop
sahf
cmp
mov
popa
cmps
push
sbb
lods
les
fxch
or
rcl
jmp
(bad)
fdiv
pop
sahf
jno
jbe
ret
sbb
imul
(bad)
xor
ins
shl
xchg
fwait
pop
push
cmp
mov
fs
or
in
rcl
adc
loop
clc
sbb
repz
outs
push
lahf
mov
inc
pop
jne
or
shl
pop
sub
jo
sar
ss
push
xchg
call
inc
pop
pmaddwd
add
test
or
sub
add
int3
mov
pop
xchg
(bad)
and
cs
xchg
sbb
je
test
mov
fdivrp
and
inc
test
fadd
mov
xchg
adc
mov
push
push
jp
adc
pop
push
jge
mov
aam
leave
loop
adc
mov
dec
xchg
mov
pop
in
mov
sub
dec
movs
adc
xchg
out
nop
dec
and
jp
movs
or
jno
lds
sti
cdq
iret
repnz
aam
ins
xchg
push
gs
and
mov
mov
repz
jmp
sub
inc
cmove
les
dec
nop
jp
fist
xchg
xlat
inc
cmps
outs
ins
add
rcl
out
clc
mov
sub
jmp
stos
push
cmps
(bad)
jne
push
adc
cmp
test
iret
(bad)
pop
aaa
std
sti
mov
xchg
sub
push
lock
pop
mov
sbb
aas
ds
sub
das
std
jmp
mov
sub
mov
jp
cdq
add
pop
xchg
jno
inc
dec
or
xchg
into
xor
mov
and
repnz
stos
mov
in
inc
pop
in
push
js
movs
(bad)
(bad)
sbb
cwde
cmp
push
inc
inc
(bad)
outs
arpl
fimul
push
xchg
xchg
push
(bad)
mov
lea
out
jp
mov
std
cmp
or
aas
inc
mov
mov
jle
repnz
sbb
aas
mov
push
mov
or
cmp
sbb
int
mov
je
cld
loopne
sbb
dec
cmc
mov
movs
iret
adc
lods
pushf
jp
mov
mov
pop
mov
cdq
stc
addr16
cld
in
inc
adc
push
push
xchg
mov
std
rcl
ret
rcl
into
test
xor
fdiv
pop
(bad)
test
imul
lock
mov
mov
scas
xchg
in
cli
dec
inc
pusha
and
repz
mov
jg
jns
dec
aas
sbb
call
cmp
and
xchg
pop
loopne
ins
mov
and
add
je
add
dec
dec
jp
movs
loopne
ds
loopne
inc
rcr
sub
fimul
pop
xchg
int3
adc
or
(bad)
cmc
ja
or
and
jp
lods
lods
nop
cli
push
ret
fsub
push
imul
call
xchg
mov
cld
rcl
std
pop
shr
push
dec
xor
je
loop
popf
jno
add
cmp
ins
add
inc
es
repz
fucomi
adc
leave
jg
fidiv
dec
lea
loop
shl
push
(bad)
sbb
mov
adc
fwait
nop
lds
pushf
jnp
addr16
pusha
jl
fstp
mov
ds
cwde
pop
pop
mov
(bad)
in
fisttp
adc
or
pop
dec
inc
call
icebp
mov
add
ret
xchg
xchg
mov
or
inc
nop
push
pop
test
xor
sub
sub
lahf
push
and
data16
ror
xchg
out
(bad)
xor
out
std
push
sbb
test
cli
adc
add
cmc
inc
push
add
cmp
or
mov
loopne
xor
xor
outs
xor
sahf
(bad)
in
std
push
jg
adc
popf
sbb
inc
(bad)
pop
cmps
mov
xlat
mov
inc
and
adc
push
inc
and
xor
and
and
fwait
sbb
xchg
push
xchg
pushf
jbe
inc
and
xchg
jle
mov
sti
push
push
jmp
dec
fucom
ja
test
pop
jl
aam
test
xor
imul
imul
rcl
and
or
ja
call
mov
sub
push
sub
cmc
popa
cdq
aam
imul
ds
loopne
fild
in
fwait
(bad)
or
aam
xor
mov
(bad)
dec
sub
or
adc
sub
jecxz
sub
xchg
push
xchg
xchg
call
js
cmp
popf
xor
into
test
cmps
dec
xchg
or
in
shl
cld
arpl
aam
cmp
dec
imul
stc
adc
lods
jo
mov
fnstsw
cmp
fisttp
push
fld
inc
inc
xchg
sti
loopne
sub
add
cmp
push
push
cmp
jae
(bad)
pop
xlat
icebp
pop
jnp
cmp
mov
fwait
sbb
and
xchg
into
(bad)
nop
sbb
ja
inc
lahf
mov
daa
jle
cli
(bad)
jbe
es
loop
sub
jecxz
outs
inc
inc
add
dec
xor
mov
sub
dec
sbb
(bad)
add
sbb
sbb
mov
pop
ss
sbb
xor
and
xchg
dec
dec
add
jg
and
mov
dec
icebp
add
jg
or
hlt
mov
cmp
xor
push
gs
push
push
jg
sub
jecxz
std
lahf
rol
cdq
cld
nop
mov
retf
ja
add
mov
xchg
or
sbb
ret
sub
call
call
pop
pop
push
lock
ins
push
mov
pop
jge
push
cmc
aas
inc
fwait
mov
lahf
loop
cmps
lahf
mov
dec
bound
jno
sub
lea
les
out
cld
or
push
les
out
cli
loop
adc
push
push
xor
pop
pop
js
push
gs
nop
xchg
popf
loopne
sub
dec
inc
mov
xchg
add
cli
add
jo
movs
retf
out
dec
test
jecxz
fwait
dec
inc
or
adc
lods
pop
jmp
cmp
cs
or
xor
outs
add
fstp
shl
xor
ja
es
mov
pop
jnp
int
push
popf
xchg
mov
mov
adc
neg
ds
clc
jbe
in
mov
std
cmc
loop
aas
ret
add
push
jmp
dec
jle
xor
dec
(bad)
dec
popa
and
add
(bad)
cmps
jns
lods
repnz
cmp
imul
hlt
in
pop
cmps
imul
adc
push
mov
dec
cmps
mov
fisttp
fistp
(bad)
push
cmp
push
ins
jp
data16
rcl
stos
loopne
push
nop
out
div
in
iret
pop
add
xor
sub
xor
jmp
(bad)
arpl
xor
ss
gs
pop
push
xchg
push
pop
(bad)
jns
enter
push
inc
xchg
inc
fs
mov
add
je
loopne
(bad)
xchg
inc
daa
sbb
inc
dec
(bad)
pop
dec
pop
aas
jno
loope
jl
repnz
ins
sbb
cld
dec
popa
push
fcmovnb
fst
adc
xor
inc
and
xor
xchg
xchg
test
jbe
jmp
mov
sub
mov
outs
loope
push
data16
xchg
adc
dec
and
rol
mov
daa
and
cmp
and
add
xchg
dec
movs
dec
xchg
sbb
sar
adc
cmp
div
push
in
add
inc
addr16
popf
pop
add
pop
popa
cmps
or
inc
xor
xchg
mov
iretw
mov
or
cmps
mov
(bad)
stos
movs
cmp
dec
cmp
mov
inc
(bad)
cmp
xor
mov
dec
clc
shl
int3
xchg
jo
adc
pop
push
femms
out
dec
fisub
(bad)
out
push
sub
xor
xor
mov
cmps
aas
outs
in
fmulp
inc
shr
cli
jg
mov
sbb
fild
mov
or
test
xor
sbb
jbe
jbe
repz
xchg
mov
mov
mov
pusha
sbb
jae
gs
into
cmp
stos
pop
(bad)
(bad)
lods
sbb
mov
xor
stos
inc
dec
data16
(bad)
ror
pop
add
mov
jg
(bad)
mov
pusha
ret
div
push
xchg
and
add
jl
(bad)
or
adc
cmps
lods
mov
add
(bad)
and
jbe
mov
addr16
xchg
fdiv
iret
or
call
mov
ja
jae
pop
pop
mov
fild
xchg
mov
into
test
mov
jmp
shl
jge
shl
fwait
or
or
mov
fnsave
inc
dec
imul
ins
test
cmp
inc
ins
(bad)
mov
rcl
xor
jmp
pop
test
adc
jmp
push
or
mov
jp
jecxz
(bad)
out
push
shr
or
sub
or
ja
jmp
and
adc
fst
loop
dec
pop
and
jbe
rcl
sub
popf
lahf
dec
sub
fs
cmc
xor
pop
aad
aam
push
or
ror
test
xchg
out
dec
xor
call
mov
adc
cdq
cmps
les
leave
imul
(bad)
dec
in
mov
cmp
vandps
cmp
(bad)
or
pop
addr16
outs
add
adc
cmp
gs
push
push
jmp
dec
hlt
fistp
shl
jmp
push
neg
jge
scas
and
push
fsubr
add
scas
jle
cmp
jmp
je
popa
pop
(bad)
mov
pop
inc
xchg
loope
stos
jb
pop
mov
inc
push
test
cmp
xchg
dec
fistp
inc
dec
xor
stc
pusha
out
in
mov
(bad)
xchg
fisub
mov
inc
(bad)
retf
clc
add
mov
fabs
adc
add
fst
dec
adc
movs
std
jg
add
lahf
adc
mov
out
add
lds
mov
out
push
jnp
mov
sbb
retf
or
cwde
inc
stos
dec
fxch
dec
mov
mov
das
outs
arpl
xor
or
rcl
ret
in
ja
js
in
inc
inc
push
test
sub
jb
shl
mov
(bad)
sub
pop
ret
lods
(bad)
int3
int3
rol
xor
push
popf
mov
xor
popf
cmp
(bad)
sub
je
out
sub
jecxz
sti
and
mov
(bad)
ins
movs
arpl
sub
cmp
inc
aam
xor
stc
mov
shr
sbb
pusha
push
sar
add
ja
call
jl
fiadd
adc
cmps
dec
add
cs
repz
cmp
inc
pushf
push
jno
stc
idiv
fdivr
dec
push
icebp
(bad)
cdq
mov
inc
iret
dec
fimul
xchg
(bad)
cmp
sub
(bad)
dec
pop
iret
dec
out
dec
sub
ja
xlat
aam
les
dec
stc
add
mov
dec
addr16
je
adc
pop
mov
les
sub
mov
push
les
sahf
imul
cdq
or
(bad)
cmp
and
lods
push
cmc
jae
clc
cld
ror
in
jnp
pop
sbb
pop
js
push
aad
test
addr16
inc
das
adc
mov
dec
movs
nop
fisubr
mov
cmp
enter
pop
xchg
dec
inc
das
mov
push
fwait
mov
push
cmc
mov
and
cmps
sub
lea
pop
jl
and
push
rcl
dec
jnp
lods
mov
pop
out
push
pusha
cmp
and
mov
cmp
js
mov
(bad)
cmp
mov
jne
loopne
popf
and
imul
lea
popa
ja
mov
jb
cmp
psubw
mov
add
fdivr
jae
rcl
add
test
sbb
pop
push
es
mov
outs
xlat
das
popf
add
mov
(bad)
push
popa
push
loop
int3
mov
fadd
add
test
adc
popa
(bad)
bound
push
jbe
stos
test
aad
fwait
xlat
in
sbb
shl
es
(bad)
jo
mov
mov
xchg
daa
rcr
inc
jge
push
ret
(bad)
push
aaa
xchg
es
lock
pushf
cmp
test
jmp
mov
sahf
lods
dec
outs
aam
add
mov
lea
pop
int3
jo
or
inc
lea
xchg
dec
cmp
(bad)
mov
call
test
(bad)
not
mov
xor
js
or
loopne
inc
dec
push
adc
les
push
js
push
adc
fincstp
fild
scas
cmp
xchg
adc
inc
test
imul
jno
dec
fld
addr16
mov
pop
aas
out
shl
das
call
or
js
sar
lds
add
xchg
aaa
push
fs
pop
dec
jnp
div
or
(bad)
fdivr
out
dec
(bad)
add
div
add
jmp
fnstenv
in
dec
cdq
or
inc
leave
ins
jno
pop
mov
int
jmp
das
mov
cmp
stos
into
pop
mov
loopne
push
or
and
jae
and
lds
addr16
mov
add
into
cwde
(bad)
in
push
fwait
inc
and
mov
xchg
out
outs
add
push
sbb
fstp
jecxz
mov
movs
and
jns
cmp
and
jae
jb
xchg
cmp
pop
jae
cwde
cmps
jmp
pop
cmp
aas
mov
punpckhdq
mov
fstp
mov
mov
lea
mov
mov
push
and
imul
idiv
adc
mov
dec
cmp
ins
imul
xor
inc
mov
cmps
push
mov
mov
cli
retf
mov
(bad)
not
test
std
sbb
inc
jns
(bad)
mov
and
fisubr
fninit
rol
dec
scas
dec
push
loope
adc
add
dec
and
sub
jmp
inc
pop
xlat
out
into
dec
pop
push
jo
xor
xor
push
retf
mov
ret
push
xchg
iret
repnz
sbb
popf
inc
outs
cmp
jae
push
xor
add
pop
lods
retf
iret
mov
gs
les
lock
jmp
mov
mov
pushf
call
mov
mov
jae
stos
out
aas
out
add
xchg
pop
ja
cmp
dec
hlt
mov
pop
aas
test
jle
or
lods
inc
xor
sahf
fstp
xchg
aam
call
inc
repz
lds
add
jecxz
scas
cmps
and
std
sub
xor
nop
stos
mov
jmp
push
mov
mov
(bad)
mov
mov
dec
sbb
jae
imul
idiv
loopne
cdq
pop
xor
dec
loopne
xor
daa
call
push
mov
loop
rcl
or
cmp
xor
into
xchg
out
xor
adc
jmp
scas
dec
repnz
jmp
mov
push
add
push
xchg
jge
inc
daa
stos
daa
in
dec
(bad)
sar
xor
xchg
shl
iret
cli
aas
add
pop
cwde
cmp
xlat
jmp
push
bound
mov
push
sub
loop
inc
daa
(bad)
std
pop
je
xor
xor
or
inc
adc
out
pop
ficom
call
ficom
daa
push
mul
aam
push
pusha
cmps
inc
cmp
push
ds
in
xor
int
leave
cmc
and
cmp
rcl
or
mov
sbb
xchg
jmp
xor
dec
scas
hlt
repz
movs
sbb
out
outs
or
or
xor
sbb
retf
mov
push
retf
inc
cmp
fadd
jmp
call
inc
xor
pop
addr16
lods
adc
sbb
or
mov
add
add
adc
shrd
mov
push
or
dec
stc
aam
bound
sub
fstp
(bad)
ror
xor
sahf
lods
test
fcom
cmp
fcomip
mov
test
mov
fwait
sbb
xlat
xchg
mov
fcom
dec
ret
(bad)
cld
ret
int3
leave
xchg
xchg
ret
pop
outs
adc
loope
inc
ds
push
pusha
xchg
movs
cmp
mov
inc
pushf
(bad)
mov
add
jecxz
lea
xchg
pop
push
sar
pop
ins
fstp
cmp
xor
adc
(bad)
pop
dec
mov
inc
add
aaa
fs
test
mov
jp
jmp
pop
mov
or
adc
je
dec
jl
repnz
ss
cmp
cmp
stos
mov
repz
pop
sti
scas
and
mov
pop
push
push
mov
mov
mov
jmp
push
jge
adc
xor
sub
cmp
loopne
push
lods
cs
rcl
push
dec
jge
enter
jae
stc
or
xchg
sbb
cmp
outs
push
fwait
mul
jge
mov
cmps
add
lea
mov
fimul
rcl
test
xchg
mov
pusha
loopne
lahf
not
cmp
jl
mov
jmp
and
and
aas
cmps
bound
ret
nop
cmp
xlat
scas
pop
cmp
ins
arpl
or
inc
in
mov
adc
(bad)
std
jnp
les
pop
sbb
(bad)
std
mov
xor
rol
push
jnp
lods
imul
mov
enter
clc
lods
test
test
retf
cmc
fisub
fwait
mov
mov
xor
add
inc
mov
jmp
fidiv
dec
push
xor
scas
sub
inc
cmp
lea
(bad)
fld
mov
sub
lods
jge
rcl
jl
xor
addr16
es
retf
std
add
adc
sub
je
and
or
or
push
ret
mov
cmp
(bad)
sbb
mov
xchg
mov
xchg
ret
imul
and
push
mov
add
push
ja
add
imul
cwde
idiv
mov
pop
push
lds
rol
hlt
bound
add
xor
fcmove
imul
mov
mov
xchg
fld
xor
sbb
clc
pop
sbb
shl
enter
arpl
xor
imul
sbb
call
je
rcl
call
xor
mov
fld
shl
jmp
xor
adc
push
mov
pop
repz
cmp
out
mov
sub
test
not
jg
sbb
or
dec
stos
inc
test
mov
call
lods
popa
xchg
pshufw
push
xchg
hlt
and
cmps
xchg
jp
lock
mov
or
add
mov
add
imul
cdq
inc
clc
cld
retf
inc
(bad)
pop
mov
cs
jp
popa
xchg
lock
sbb
xlat
ss
mov
fist
mov
push
fistp
les
lea
(bad)
mov
push
mov
push
mov
dec
jo
test
repnz
xor
add
loop
int
sahf
shl
or
fisubr
stc
shl
mov
(bad)
icebp
pop
and
call
std
dec
in
out
xlat
or
cmps
pusha
mov
mov
pusha
inc
mov
rcl
movs
mov
repnz
mov
call
jg
sbb
pushf
add
repnz
jle
icebp
push
xlat
cli
repnz
push
adc
mov
mov
xchg
push
jns
and
jae
mov
in
je
lea
loop
jo
shl
hlt
cdq
adc
mov
adc
in
stos
cmp
mov
mov
lods
add
adc
(bad)
in
test
mov
push
xchg
pop
cmps
gs
pop
or
pop
cmp
xchg
xlat
sub
int3
hlt
jmp
mov
jae
jo
cmps
mov
sub
push
push
lods
test
loopne
add
cli
(bad)
push
jl
pop
aam
(bad)
ins
paddusw
retf
loopne
pusha
push
push
in
movs
fsubrp
push
xchg
jecxz
dec
retf
sti
push
cwde
jmp
cli
xchg
icebp
stos
add
div
icebp
sbb
call
out
xchg
sbb
scas
mov
mov
xlat
adc
popa
inc
lods
inc
(bad)
and
mov
test
dec
mov
call
push
sub
clc
ror
and
or
sub
xchg
cdq
loopne
pop
mov
ds
and
loop
(bad)
add
ja
xchg
cmps
mov
les
das
and
inc
sbb
xor
test
lahf
push
inc
mov
pusha
xchg
fist
jns
test
rcl
push
cwde
inc
mov
inc
jne
fxch
xor
inc
int3
in
xchg
sub
les
into
inc
or
pop
ins
adc
(bad)
cmp
pop
xchg
sbb
adc
sar
nop
sahf
fdiv
jnp
ja
cmp
fisttp
pushf
mov
js
jge
mov
popf
test
arpl
push
and
shl
ds
ss
xchg
xchg
inc
sbb
fucomip
data16
movs
push
mov
in
jo
ins
ss
inc
push
add
ret
call
mov
sub
cli
and
pop
add
call
or
fwait
jle
inc
out
movs
cli
inc
or
jne
in
cli
fnstenv
mov
pop
mov
loop
mov
nop
pop
(bad)
mov
mov
sar
add
fsub
push
pop
aam
ja
jne
sbb
xchg
push
inc
movs
out
pop
idiv
in
lahf
sbb
imul
dec
jle
das
leave
test
movs
xchg
mov
and
mov
je
pop
jp
icebp
jnp
jle
sub
adc
mov
sti
jbe
rcr
add
dec
pop
sbb
aaa
inc
adc
(bad)
fdivr
push
xor
fidivr
cld
mov
imul
sub
push
mov
cmps
push
outs
retf
aas
and
pop
int
loopne
cmc
in
test
inc
xor
pop
cmp
test
pop
cmp
sbb
popf
sbb
jae
sub
jmp
pop
nop
and
fsubr
dec
das
inc
ja
into
xchg
sub
cmp
sahf
das
or
(bad)
jne
fstp
add
outs
sub
iret
stos
jbe
mov
in
loopne
fwait
push
fwait
ins
in
inc
scas
push
push
cmp
das
sar
sub
sub
std
retf
sahf
sub
and
test
mov
pop
ins
fcmovnb
outs
and
xchg
cmp
xor
repz
(bad)
jns
rol
and
ins
cmc
mov
iret
mov
(bad)
mov
clc
jmp
cmp
or
pop
jge
ja
xchg
xchg
scas
jo
xor
arpl
in
sub
sti
sahf
push
cmps
pop
mov
int
popf
test
sub
lds
or
neg
je
xchg
shl
dec
stos
mov
sahf
mov
sub
adc
cmp
mov
jno
ins
sub
mov
inc
dec
mov
loope
daa
pop
mov
inc
lods
fld
jl
movs
js
xchg
xchg
not
mov
call
sbb
inc
mov
fdivr
add
mov
cmp
pushf
dec
mov
mov
movs
add
in
mov
(bad)
pop
adc
xor
mov
xor
or
jmp
data16
mov
out
out
clc
add
and
test
adc
jmp
sub
xor
clc
in
daa
dec
cmp
mul
cmp
stos
ins
xchg
in
dec
test
loop
xchg
add
push
imul
outs
mov
ret
test
sub
jb
and
(bad)
or
xchg
pop
cmp
fadd
inc
cs
xor
mov
(bad)
adc
mov
push
pop
push
lods
push
inc
shl
mov
js
jo
mov
mov
in
or
xor
shl
add
call
ss
out
pop
and
inc
(bad)
lahf
gs
sti
mov
xchg
scas
dec
loope
pop
in
call
enter
imul
fiadd
stc
pop
cmp
cmp
mov
xor
(bad)
icebp
mov
sar
mov
xchg
icebp
jo
dec
not
mov
xchg
mov
mov
sub
mov
xchg
add
push
inc
mov
les
xchg
mov
clc
and
cmp
pusha
mov
inc
popf
add
adc
in
mov
push
xchg
cs
aam
ret
or
stc
aad
enter
and
add
push
jnp
and
sub
in
cmp
(bad)
mov
xchg
std
sub
outs
jmp
sub
dec
add
inc
lods
mov
scas
push
cmp
les
dec
bound
aam
cmps
mov
xchg
movs
mov
mov
ret
jl
js
stos
pop
push
jmp
mov
js
xor
inc
(bad)
addr16
inc
fisubr
cmp
jmp
mov
shl
call
dec
std
xor
stc
jmp
adc
(bad)
lods
test
cwde
xchg
mov
mov
dec
sub
or
pop
cmps
jns
cld
pop
inc
imul
ret
cli
es
jle
lahf
fisttp
dec
pop
xor
jp
sbb
xchg
(bad)
into
jmp
mov
push
cmp
enter
jbe
pop
fild
sub
inc
je
jb
dec
add
popa
cmp
(bad)
adc
sbb
hlt
push
(bad)
fadd
mov
push
xchg
sub
lods
mov
jb
movs
adc
into
sbb
xor
stc
out
dec
mov
(bad)
mov
or
inc
mov
repz
popf
lods
aaa
shr
loop
movs
aaa
jl
pop
test
movs
fidiv
cmp
sahf
push
adc
int
xchg
jmp
pop
jecxz
neg
sub
sbb
inc
inc
(bad)
push
pop
pop
enter
jno
fistp
out
ins
xor
ds
pop
mov
add
mov
(bad)
xlat
rcl
int3
mov
pop
ret
pop
sbb
fmul
out
cmp
jno
mov
lock
mov
mov
sbb
mov
adc
leave
push
cwde
cmp
dec
jb
xchg
test
jo
ins
fisubr
fwait
test
(bad)
mov
data16
icebp
(bad)
sbb
clc
push
xchg
cmc
lock
xchg
out
sbb
daa
jns
lea
cmps
lahf
fild
cmps
mov
retf
or
sbb
sti
movs
scas
xor
add
arpl
push
scas
scas
fcom
rol
data16
stos
ret
jecxz
popf
add
jmp
shl
xor
mov
mov
cld
sub
shl
cwde
clc
imul
scas
fimul
cdq
sbb
push
loope
jg
inc
sub
pop
dec
addr16
hlt
test
xchg
sbb
ja
xchg
retf
clc
ja
sub
pop
lods
xchg
cmp
jne
mov
mov
xor
shl
(bad)
pop
adc
cmp
xor
mov
scas
inc
xchg
outs
fiadd
rol
aam
stos
and
and
push
pop
and
std
sti
adc
adc
scas
or
and
rol
outs
cmps
in
mov
mov
xchg
sbb
mov
pop
lahf
dec
adc
out
mov
pop
jne
jb
inc
ja
jmp
mov
pmullw
jnp
pop
adc
loopne
bts
(bad)
fsubr
and
xor
xchg
xor
mov
mov
inc
je
sar
add
fwait
in
xor
retf
dec
punpckhbw
nop
xchg
fs
dec
and
test
or
fld
xor
adc
arpl
mov
mov
aaa
inc
(bad)
cmc
mov
xchg
es
cs
dec
push
leave
nop
push
inc
add
push
dec
push
sbb
xchg
jmp
mov
test
mov
add
sub
pop
loopne
jmp
sub
in
ins
js
mov
ds
mov
es
sahf
dec
push
pop
int3
mov
mov
mov
mov
sbb
(bad)
pop
push
cdq
dec
loope
mov
ja
push
sar
inc
dec
enter
pop
mov
mov
ins
cwde
aas
xchg
xchg
out
add
rcr
mov
push
sub
mov
inc
es
lods
sbb
xchg
xchg
or
and
jne
ja
add
pop
push
mov
repnz
bound
(bad)
lods
bnd
xchg
push
inc
pop
add
cs
fwait
cdq
inc
jb
push
in
cmp
daa
loopne
rol
ret
pop
xlat
fdiv
and
xchg
jne
test
test
(bad)
scas
and
and
push
mov
cmp
sub
rcl
xor
xor
cld
push
loopne
inc
imul
dec
adc
fild
ret
xchg
retf
jle
inc
int3
fcomp
mov
pop
repnz
mov
icebp
aad
test
pushf
pop
or
sub
push
jbe
mov
stos
enter
add
sbb
or
jo
mov
push
push
xor
call
test
jle
push
loope
push
movs
inc
pop
adc
jle
fs
cmovs
add
sti
sub
add
push
loop
cwde
ins
pop
cmp
stos
rcl
jge
jns
sub
mov
(bad)
jns
pop
bound
inc
aaa
sub
pop
push
dec
mov
sbb
xchg
addr16
and
jne
imul
mov
push
push
int3
mov
push
pop
lahf
aaa
adc
fwait
xor
jl
ss
mov
cmp
scas
test
mov
sti
stc
or
dec
cdq
dec
das
mov
mov
cmp
push
call
jo
fisubr
fadd
add
test
mov
pop
movs
jg
cmp
ja
mov
in
fcom
ret
(bad)
mov
test
out
push
adc
scas
imul
and
mov
jb
mov
xchg
(bad)
jo
rcr
mov
fld
xchg
pop
rcl
(bad)
mov
das
ja
scas
adc
and
jecxz
jmp
jno
fmul
outs
ss
arpl
lahf
ds
arpl
inc
push
mov
dec
ds
aad
push
daa
sbb
xchg
aas
repz
adc
add
mov
xor
mov
cs
xchg
test
cmc
shl
dec
mov
fwait
sbb
(bad)
pop
fucompp
ja
cwde
(bad)
sub
cmp
pushf
cmp
mov
in
add
test
fisubr
jmp
mov
mov
inc
jnp
mov
loope
and
sbb
out
sub
mov
fist
fwait
pusha
and
ins
call
out
add
sbb
pop
out
ja
dec
movs
push
loope
out
out
mov
xor
fsubr
sub
mov
pop
cdq
aaa
jge
pop
les
pop
xor
sahf
or
addr16
les
cmp
sahf
jns
push
enter
mov
stos
stc
arpl
jnp
adc
test
test
and
push
or
xor
mov
js
fcomp
xor
and
mov
xchg
ds
loope
movs
js
in
jb
mov
popf
imul
out
into
dec
inc
stos
or
shr
cmp
ror
jne
mov
dec
mov
mov
mov
retf
xchg
xor
(bad)
lea
inc
lds
or
pushf
jae
pop
enter
xor
jmp
cmp
pop
rol
and
imul
test
cwde
add
adc
jno
enter
add
out
iret
(bad)
adc
push
xor
shr
mov
mov
loope
sbb
test
loop
push
arpl
jae
std
lahf
push
mov
jb
sbb
std
or
sub
imul
cwde
push
mov
mov
xor
loopne
mov
lods
add
push
jno
js
xchg
dec
cmp
mov
repz
div
stc
cmps
and
dec
iret
shl
jmp
pop
ret
add
fsub
imul
pop
scas
js
lds
push
inc
sahf
fimul
push
xchg
popf
popa
loope
mov
cs
or
es
pop
stos
rcl
cmp
ds
or
mov
imul
shr
mov
sub
fld
mov
aam
out
lahf
test
pop
adc
mov
loopne
push
inc
stos
cdq
jge
fwait
mov
jle
jae
or
movq
es
add
dec
and
sbb
fmul
add
leave
jmp
fwait
sub
mov
das
xor
ret
sub
out
mov
sub
push
mov
mov
lods
test
(bad)
repz
mov
rol
imul
push
sti
push
add
cli
in
jmp
dec
push
pushf
fdiv
jmp
inc
pop
les
dec
or
lds
dec
mov
scas
mov
aas
sbb
stos
push
pop
jb
scas
stos
xchg
mov
stos
outs
inc
sub
test
xchg
stos
pop
inc
aas
fs
fiadd
es
retf
push
xor
jecxz
ret
inc
bnd
fidiv
adc
test
jecxz
aad
retf
sahf
imul
popa
mov
(bad)
cmp
(bad)
cdq
push
jne
jb
add
addr16
lods
or
xor
fsub
push
clc
sbb
jo
cli
add
push
neg
sbb
fisttp
push
cs
aad
stos
ror
lods
mov
jne
mov
je
xchg
push
jno
mov
xor
pop
cmps
mov
outs
mov
add
mov
into
fldenv
aam
or
pop
test
jb
pop
inc
pop
retf
xchg
hlt
pop
pop
inc
mov
out
adc
ret
icebp
imul
mov
cmp
add
xchg
xchg
sbb
sbb
xchg
xor
lods
jle
sbb
sbb
sbb
not
mov
jmp
das
imul
xchg
add
xor
add
mov
xchg
imul
add
sahf
rcl
inc
stos
pop
ins
das
ficom
gs
dec
outs
scas
lahf
push
leave
push
imul
jmp
xor
xor
jo
or
mov
or
inc
xor
push
aad
push
and
lock
scas
outs
ret
je
(bad)
fbstp
xor
test
inc
(bad)
loopne
inc
in
pop
addr16
sub
data16
and
hlt
dec
into
popf
aad
add
mov
and
jo
retf
test
xor
xchg
fisubr
jle
or
xor
cld
loop
cmp
push
dec
xor
rcl
adc
cmp
dec
sub
fstp
call
aam
sub
popa
mov
pop
fnstcw
lahf
sbb
cmc
mov
xor
(bad)
dec
outs
in
js
dec
daa
scas
sub
and
cmp
fimul
sbb
push
stc
and
dec
das
inc
cmc
inc
retf
pop
lahf
lods
aas
pop
mov
movs
or
out
(bad)
(bad)
in
fst
daa
xor
sub
lods
or
jb
aad
or
clc
sbb
cs
outs
adc
shl
lods
mov
loope
imul
mov
repz
xchg
jl
imul
fnsave
pop
popf
sub
inc
mov
and
stc
aaa
adc
test
pop
or
mov
fwait
inc
test
xchg
out
imul
jecxz
movs
stos
stos
push
or
aas
pop
stos
das
test
inc
shl
(bad)
cmp
es
in
ins
fisubr
retf
es
jle
outs
cmp
xor
int3
cmp
mov
adc
dec
xchg
dec
ret
add
call
nop
sub
and
mov
ret
cdq
add
push
adc
cmp
xor
cmp
xchg
push
leave
int3
xor
repz
ret
cmps
in
jle
mov
es
and
mov
aaa
int
outs
cwde
or
adc
or
or
pop
fdivr
adc
stos
jmp
neg
sti
jnp
stc
stc
outs
mov
jo
out
mov
push
sub
fdivrp
retf
hlt
xor
(bad)
jne
popa
jecxz
(bad)
adc
push
movs
push
pop
popa
xor
mov
mov
push
aad
and
popf
fadd
dec
push
loopne
sbb
xchg
out
sub
out
push
outs
call
call
push
jae
mov
xchg
nop
jmp
jmp
ins
xlat
cmp
mov
add
in
mov
mov
or
out
jmp
stos
push
or
and
les
pop
mov
scas
sbb
rcl
xchg
add
mov
call
pop
dec
xlat
dec
mov
xchg
mov
repnz
lds
rcr
xchg
ficomp
retf
push
rcr
xchg
xchg
inc
mov
out
mov
call
out
icebp
loope
cmp
call
dec
repnz
dec
nop
xchg
mov
pop
(bad)
xor
mov
xor
sbb
sbb
pusha
jmp
mov
xchg
inc
aas
jge
mov
inc
xchg
mov
das
jge
mov
pop
cmp
dec
mov
xor
pop
sbb
mov
mov
int3
inc
imul
mov
mov
inc
ja
mov
mov
arpl
push
mov
xchg
and
push
(bad)
mov
and
out
pop
jbe
jo
in
(bad)
xor
cmp
and
mov
adc
fsub
ds
fs
adc
jecxz
mov
dec
retf
rol
inc
push
fwait
xor
push
das
sbb
fucomip
and
mov
loope
pop
std
push
(bad)
outs
addr16
sahf
ins
dec
cli
pop
in
xor
retf
jmp
nop
push
imul
dec
jb
stos
movs
cwde
call
pop
pop
repnz
sbb
outs
imul
push
pop
and
pop
jl
xor
ja
std
push
pop
ds
mov
shl
retf
inc
sbb
or
cmp
jge
push
enter
xchg
mov
scas
push
or
pop
or
xchg
(bad)
pop
loop
mov
dec
clc
cmp
cmc
xchg
mov
(bad)
fcom
mov
push
xlat
leave
push
cmp
push
ss
push
pop
(bad)
aas
sub
loopne
inc
add
popf
in
xchg
xor
imul
xor
div
jg
xor
or
dec
icebp
pop
inc
clc
test
lds
add
aas
or
sbb
call
add
les
aad
cdq
sbb
jmp
cmp
test
out
sub
clc
ins
(bad)
cmps
daa
pop
inc
fbstp
push
xchg
fstp
pop
mov
sar
mov
and
sub
push
mov
mov
pop
fld
push
out
inc
data16
aas
lea
mov
pop
loop
cmp
add
popa
cmp
repnz
jne
daa
daa
cwde
and
sub
fdivr
out
scas
xchg
add
pushf
cmp
imul
call
(bad)
jnp
aaa
(bad)
sbb
dec
int3
dec
pop
sbb
ret
int
jmp
inc
es
cmc
sub
popa
cmp
push
adc
inc
xchg
xor
push
mov
cmc
xchg
fimul
mov
jle
mov
jo
stos
dec
xchg
jmp
push
or
xor
mov
icebp
ja
int
sub
sub
pop
fild
sti
ret
call
or
frstor
(bad)
(bad)
sub
cli
inc
add
loop
ror
xor
dec
ret
sbb
dec
inc
pop
cdq
inc
adc
dec
(bad)
mov
add
add
stos
and
mov
cmps
ret
data16
pop
adc
shr
int3
in
test
mov
mov
dec
xor
pop
les
or
mov
inc
inc
fdivr
jne
ret
aam
imul
mov
mov
in
sbb
shl
movs
sub
add
cli
mov
inc
sbb
cmc
pop
repnz
mov
mov
xor
imul
inc
sar
out
loope
sub
xor
int3
int3
imul
out
mov
(bad)
jp
add
pusha
jmp
scas
dec
mov
inc
cmp
lods
in
push
fdivrp
pop
pop
or
outs
add
or
inc
clc
and
(bad)
sub
outs
cdq
and
sub
cmps
or
stos
cmp
cmp
push
dec
and
(bad)
fdivr
jae
push
sub
shr
cmc
call
jmp
mov
xor
jmp
mov
dec
test
jl
cmps
pop
jl
cmp
call
sub
add
in
arpl
mov
xchg
pushf
loope
mov
cs
mov
ficomp
sbb
(bad)
in
xchg
punpckhwd
popa
mov
jnp
aad
test
jp
lea
sbb
aam
in
sbb
dec
clc
aaa
es
int
xchg
rcr
dec
imul
adc
or
enter
dec
out
aam
xchg
sbb
scas
imul
cdq
inc
in
rcl
movs
inc
mov
ret
neg
mov
(bad)
push
mov
add
or
fs
mov
shr
dec
fidiv
out
mov
mov
xchg
scas
sbb
ins
sub
aaa
fisttp
or
shr
push
in
iret
jae
shr
sbb
jmp
pusha
sub
pop
pop
push
or
mov
cmp
mov
jg
lahf
adc
dec
inc
lods
add
pop
jg
xchg
ins
push
retf
div
cdq
sub
fs
xchg
sahf
jmp
jmp
push
sbb
scas
mov
cs
pop
jne
scas
ins
push
test
inc
sbb
jecxz
pop
sbb
fidivr
sahf
cmc
test
fstp
cmps
inc
fsub
fwait
test
push
and
stos
pop
out
enter
es
iret
adc
test
and
jo
retf
pop
xchg
loop
out
cmp
(bad)
cld
push
mov
hlt
sub
repnz
xchg
xchg
mov
mov
inc
add
imul
pushf
jb
adc
xlat
outs
or
or
ins
adc
push
je
jp
lahf
and
fistp
mov
sub
movs
cmp
adc
pop
fisubr
sahf
outs
pop
test
mov
ja
(bad)
(bad)
push
test
push
jae
cdq
inc
test
test
inc
push
sub
sbb
xchg
push
shr
cdq
xor
nop
inc
dec
stos
mov
outs
in
les
push
or
inc
cmp
or
leave
inc
mov
and
push
jmp
fnstcw
jg
jb
out
and
push
js
call
scas
xor
cld
hlt
mov
clc
(bad)
sub
and
dec
enter
add
cli
and
xchg
outs
xlat
fcmovnbe
mov
popa
cmp
movs
dec
sub
int
imul
mov
inc
xlat
aas
lea
adc
mov
mov
push
ret
push
cmp
inc
sub
popf
shr
cdq
xchg
push
sbb
mov
mov
sbb
shl
(bad)
mov
movs
loopne
not
outs
ins
es
in
(bad)
pop
cmp
out
xor
sar
mov
in
mov
clc
in
and
fs
inc
xor
add
popf
jmp
loop
mov
outs
xor
int
les
or
mov
xor
(bad)
add
aaa
dec
add
dec
ja
sub
push
sub
out
out
test
repz
(bad)
cmp
xchg
and
add
(bad)
cmps
mov
std
and
icebp
in
inc
dec
mov
mov
jo
mov
mov
xor
inc
mov
sbb
sbb
mov
aaa
leave
das
inc
repz
inc
dec
and
xor
cmp
sbb
movs
sub
lahf
ds
inc
sahf
out
pop
in
loopne
pushf
inc
leave
push
aas
nop
in
sub
(bad)
sbb
lods
add
rcl
push
jl
adc
test
outs
cmp
inc
hlt
rol
pop
cld
jbe
mov
adc
call
or
fincstp
mov
xchg
mov
fs
and
les
jno
add
jnp
cmp
push
mov
icebp
clc
fs
stc
xor
shl
adc
pushf
movs
cs
push
xchg
and
xor
push
ins
ret
jle
js
pusha
pop
ret
ror
imul
dec
jle
dec
xchg
and
jecxz
inc
pushf
inc
or
shl
add
jmp
sbb
xchg
push
sub
pop
js
add
mov
inc
test
outs
fild
out
push
mov
or
gs
leave
and
adc
push
sub
sub
cld
mov
inc
(bad)
sbb
add
sub
in
fidivr
aas
mul
dec
fs
pop
add
into
xchg
inc
fwait
pop
data16
fisubr
cli
jbe
ret
mov
adc
fist
push
pop
lfs
out
pop
xchg
out
dec
adc
inc
pop
and
fsub
push
shl
mov
jl
sbb
and
push
test
bound
or
out
sbb
sub
repnz
xchg
inc
and
cs
push
je
mov
adc
ret
dec
cli
inc
dec
adc
int3
push
in
fnstcw
jg
es
jo
ret
sti
mov
inc
add
fld
ds
cmp
lods
aam
clc
in
popa
mov
jmp
jno
xor
mov
test
inc
cmps
sbb
out
add
sub
jnp
hlt
fcmovu
xor
adc
test
or
mov
pop
in
jb
add
div
xchg
out
push
aad
add
hlt
loop
popf
ja
mov
add
lahf
(bad)
adc
shl
fimul
cmps
test
jle
and
cmp
clc
std
xor
bound
outs
ja
mov
outs
stc
adc
jbe
mov
push
cmps
and
adc
jbe
icebp
sti
mov
add
mov
sar
ret
daa
rol
das
cmp
int
ret
add
add
ss
cmp
or
adc
mov
add
and
cmovp
fadd
loope
mov
xchg
cmp
and
xchg
push
addr16
repnz
cmp
std
aaa
(bad)
mov
fcom
loopne
aad
retf
or
cdq
dec
fsubr
mov
or
mov
ins
(bad)
add
xchg
push
adc
mov
(bad)
dec
push
push
xor
jo
jno
or
and
mov
jnp
mov
or
push
xchg
mov
scas
hlt
hlt
sub
ja
dec
(bad)
mov
mov
add
test
fld
sbb
pop
and
test
xchg
dec
add
cld
xchg
xchg
rcl
arpl
jl
popf
sbb
in
xchg
sub
loop
inc
cmps
xor
popa
(bad)
aad
dec
mov
or
mov
test
cld
push
pusha
jns
scas
and
retf
(bad)
pusha
aas
in
arpl
pop
nop
sub
inc
in
adc
add
imul
mov
xor
pushf
push
(bad)
and
js
push
pop
test
daa
pop
fnstsw
add
not
mov
adc
ret
jmp
int
inc
inc
or
push
add
fild
lods
in
xchg
test
xchg
push
push
cmp
addr16
cs
cs
loope
je
mov
push
and
xchg
cmps
retf
or
inc
pop
stos
stc
cmps
mov
jp
pushf
mov
mov
jecxz
cmps
adc
imul
sti
fbld
shl
dec
dec
clc
add
or
push
jp
cwde
(bad)
ja
imul
jge
ins
(bad)
mov
sub
pop
in
sub
imul
loop
sbb
mov
push
jmp
inc
das
out
inc
mov
mov
sub
sub
pop
inc
adc
rol
test
mov
idiv
stos
in
fstp
retf
xor
aad
and
cmp
inc
arpl
aad
ds
pop
or
jns
mov
pushf
dec
inc
loope
or
ins
js
out
mov
(bad)
adc
arpl
fstp
inc
in
adc
jg
ss
lahf
push
jecxz
imul
jle
ins
mov
ins
xchg
nop
cdq
jg
in
ror
fdivrp
mov
pop
retf
adc
ret
mov
dec
cmc
pusha
bound
retf
add
mov
pop
xchg
(bad)
lock
and
es
fcomp
int
mov
movs
in
xchg
cmp
pop
scas
idiv
sub
iret
and
pusha
lods
mov
test
loop
call
xchg
inc
jo
loop
adc
jnp
xchg
xor
push
shl
cmp
sub
mov
mov
or
test
rol
mov
call
lds
test
mov
fldenv
add
and
(bad)
push
jmp
mov
xor
mov
sbb
iret
gs
push
es
push
or
cwde
ds
leave
dec
outs
push
sbb
out
inc
in
inc
push
int3
sub
scas
imul
(bad)
cld
lods
aad
dec
mov
aam
popf
bound
push
retf
jge
cwde
or
and
xor
push
movs
cmps
mov
xchg
pop
mov
loop
pushf
arpl
push
mov
in
bound
push
adc
das
into
int3
in
pop
in
(bad)
push
ds
aam
int3
test
dec
xchg
pushf
xchg
cdq
sbb
lahf
sahf
in
jno
jg
xor
in
cmp
pop
inc
test
jb
cmc
popaw
jle
(bad)
je
cld
and
mov
out
test
add
xor
pushf
call
ret
clc
inc
push
addr16
pop
xchg
xor
mov
aam
push
popf
data16
and
xor
dec
out
retf
mov
cld
dec
jno
xchg
xor
ffreep
xor
cmp
cmp
dec
clc
and
inc
scas
and
test
or
repz
(bad)
fprem
add
scas
int3
ret
push
dec
arpl
fnstenv
js
xor
scas
mov
push
cld
sub
jge
inc
aaa
icebp
cmps
lock
lods
je
outs
dec
or
repnz
idiv
mov
jge
mov
inc
add
fidivr
into
pop
add
and
mov
(bad)
mov
xchg
leave
cmp
mov
stc
mov
bnd
retf
sahf
cmp
cld
(bad)
mov
push
lock
add
rol
jnp
xchg
xchg
and
fsubr
popa
cwde
pushf
push
out
or
test
push
xchg
outs
cmp
mov
cmp
lea
out
cli
cmp
call
icebp
dec
mov
jecxz
mov
scas
icebp
mov
sbb
jne
int
and
retf
shl
xchg
and
mov
mov
ret
mov
and
(bad)
(bad)
ins
push
push
inc
dec
and
mov
mov
mov
mov
xor
repz
push
sub
ja
xor
das
mov
hlt
out
dec
cmps
pop
mov
mov
leave
add
leave
inc
add
or
int3
adc
shl
cs
sbb
mov
out
in
mov
pop
inc
mov
add
(bad)
movs
cdq
in
scas
loope
jmp
aam
repnz
popf
and
pop
ins
or
ds
push
mov
and
ficom
int3
adc
jne
adc
fst
xchg
mov
shr
movs
and
sub
xchg
stc
or
mov
fidiv
mov
in
scas
stos
cmp
add
xor
aas
repnz
pop
pushf
or
js
test
test
fsubp
add
(bad)
jnp
or
add
clc
pop
fwait
(bad)
xor
xchg
loop
lods
jl
push
fild
xchg
arpl
out
sbb
movs
(bad)
push
jbe
or
jnp
cmp
rol
xchg
xchg
rol
das
push
sbb
cmp
cmp
or
cwde
add
cmp
aaa
mov
jp
lods
mov
sbb
and
pop
adc
push
and
or
jge
mov
cmp
fwait
jmp
jp
pop
ror
pop
cmp
adc
les
imul
icebp
fidivr
repnz
add
test
imul
fcom
cs
ds
pop
sahf
out
push
sbb
out
and
popa
jecxz
mov
fmul
push
xchg
fild
(bad)
out
in
out
inc
mov
mov
addr16
inc
nop
adc
or
daa
inc
ds
scas
xchg
adc
sti
pop
or
jg
imul
movs
pop
dec
sub
xchg
pop
push
sbb
adc
out
dec
outs
fcom
push
or
cmps
or
(bad)
jmp
mov
jmp
pop
aas
dec
sub
jb
mov
jge
(bad)
loopne
sti
addr16
data16
cmp
inc
inc
add
pusha
shr
rcr
and
jo
xabort
pop
mov
sub
sub
jge
xor
divps
shl
and
sbb
mov
jle
xchg
scas
imul
sbb
sub
adc
sbb
jo
mov
std
rsqrtps
adc
jmp
rol
mov
fs
mov
dec
push
inc
push
xor
inc
jle
enter
jmp
repnz
fcmovnu
ss
sub
cmps
lea
call
add
dec
sbb
cmp
ud0
dec
adc
xor
add
push
fild
das
or
inc
sbb
push
and
sbb
mov
dec
in
outs
addr16
push
rcl
fisub
lds
dec
sbb
sti
dec
adc
(bad)
jmp
aas
fwait
ret
jne
cmps
xlat
shl
retf
arpl
mov
in
sbb
and
xchg
(bad)
icebp
push
adc
mov
rcl
jecxz
mov
sbb
int3
xor
sti
fwait
imul
xchg
cmp
mov
es
sub
mov
jg
lds
pop
ins
mov
(bad)
ds
and
push
dec
(bad)
fcmovnb
inc
mov
outs
imul
test
jle
mov
add
or
jno
pop
mov
mov
push
mov
inc
inc
jle
inc
test
sub
cmp
jnp
idiv
xchg
xor
stos
lods
push
push
loopne
xor
ja
hlt
xor
xlat
cdq
adc
mov
cwde
clc
mov
call
inc
push
or
or
loopne
push
call
mov
sub
(bad)
rcr
pop
cmp
lock
cmps
mov
add
ja
cmp
push
imul
sbb
bound
jmp
pusha
xchg
out
jb
pusha
mov
and
or
(bad)
cdq
dec
cdq
shr
scas
mov
fdiv
out
aaa
push
mov
in
in
cmps
lahf
stos
mov
pop
data16
mov
mov
inc
xchg
inc
lahf
pop
lds
pushf
sbb
dec
gs
adc
lods
out
out
sbb
loope
test
and
jbe
adc
arpl
outs
mov
stos
sbb
fisttp
push
pop
stos
pushf
mov
and
xchg
add
sub
mov
inc
xchg
ins
adc
(bad)
ja
or
es
mov
dec
dec
int3
pop
inc
and
push
sar
sub
stos
setae
mov
add
loope
movs
push
xchg
jmp
mov
aam
xchg
clc
fsubp
adc
jb
sub
dec
clc
pop
in
inc
push
ds
pop
es
xlat
lods
jmp
repnz
imul
mov
rol
xor
mov
xor
rcl
rcr
scas
adc
test
and
mov
cwde
call
sbb
movs
sub
dec
or
int
mov
mov
ja
movs
scas
push
mov
lods
pop
pop
push
dec
fucomip
sahf
fidivr
or
mov
cmp
stos
jg
imul
xchg
mov
das
fistp
repnz
xor
fisub
imul
mov
push
aaa
call
int
mov
push
bound
mov
dec
jae
push
pop
sub
xor
cli
fadd
loope
aas
lds
fmul
out
sbb
jmp
(bad)
mov
hlt
and
js
ret
cmp
imul
inc
mov
loopne
jmp
fst
cmp
jle
stos
jp
push
addr16
imul
sbb
xor
sbb
push
fild
and
test
adc
and
add
out
mov
cmp
data16
stc
movs
out
rol
sti
fist
push
scas
pop
ror
pop
jo
js
ret
(bad)
jae
jae
das
popf
int3
dec
outs
mov
jne
mov
pushf
cmp
aaa
loopne
jecxz
dec
les
xchg
test
shl
cmp
dec
mov
cs
rcl
test
aaa
fbstp
lods
jnp
pop
mov
dec
inc
cmp
jae
jo
inc
jb
loope
cmc
out
sub
sub
fisubr
cmps
mov
fldcw
or
dec
dec
xchg
je
xor
jae
mov
mov
mov
les
fwait
dec
mov
jl
hlt
ins
pop
mov
pop
and
sub
and
retf
test
mov
test
retf
and
and
jmp
sbb
sti
sub
imul
call
rcl
mov
mov
outs
xchg
clc
pop
dec
adc
out
mov
out
pushf
xchg
rcr
cli
xor
sbb
sub
inc
addr16
pop
mov
sbb
pop
daa
test
aam
cld
arpl
shr
jne
jl
mov
call
(bad)
lods
ret
inc
sbb
into
fcom
sbb
shl
xor
cli
(bad)
aas
push
cmp
jb
(bad)
push
xchg
aad
rcl
push
out
shl
jo
ins
pop
ficom
push
mov
sub
aas
sbb
cld
xor
ficomp
pop
cs
jne
pop
add
sahf
sbb
mov
mov
mov
xchg
inc
jp
xchg
stos
adc
test
mov
call
ins
jmp
cmp
pusha
(bad)
xor
pop
xchg
mov
sub
dec
(bad)
retf
repnz
dec
dec
ret
dec
and
push
pop
sub
push
iret
mov
ror
and
pop
bound
(bad)
xchg
sbb
js
jle
bound
or
test
adc
shr
xor
jge
xor
scas
sbb
call
adc
pop
shr
ss
shl
pop
outs
jae
or
sub
sub
jle
repnz
test
in
xchg
ret
sahf
sub
mov
popa
mov
retf
pushf
sub
xchg
sub
sbb
mov
push
or
aad
push
lahf
es
fmul
leave
pop
pop
jmp
add
push
adc
and
jmp
out
xchg
nop
push
adc
int3
adc
xchg
and
cmp
retf
jb
(bad)
pop
lock
lea
inc
pusha
jle
xchg
xchg
stos
fadd
dec
imul
fnstenv
push
mov
push
enter
rep
add
inc
fsub
xchg
imul
and
(bad)
idiv
popf
sub
fwait
sub
and
outs
adc
pushf
enter
outs
shl
jne
pop
mov
stos
(bad)
lea
and
and
cwde
jmp
adc
mov
add
bound
fist
sbb
aad
push
ja
stos
loopne
pop
rcr
mov
xchg
pop
cmp
push
iret
cmp
or
mov
scas
cmp
mov
and
ds
int3
inc
hlt
mov
inc
fsub
xchg
xchg
cwde
retf
out
or
fucomi
xchg
adc
jle
hlt
pop
xchg
jmp
cmps
jp
dec
lods
adc
push
mov
das
(bad)
addr16
xchg
jnp
outs
jecxz
inc
in
aad
and
es
mov
mov
cmp
loopne
mov
aam
mov
loopne
push
lods
shl
mov
xor
ins
call
jae
mov
test
(bad)
fistp
xchg
(bad)
mov
jo
mov
or
(bad)
js
fincstp
std
and
in
sbb
pushf
fsubr
arpl
(bad)
retf
jecxz
push
cmp
and
imul
gs
sbb
sub
iret
daa
add
ins
mov
mov
mov
xchg
mov
aam
(bad)
cmp
mov
inc
add
jmp
xor
imul
out
dec
stos
fwait
jge
in
in
arpl
out
xchg
outs
scas
movs
xor
pop
or
push
cmp
mov
mov
xchg
cmps
dec
test
xchg
xor
or
mov
and
sbb
mov
xor
mov
or
adc
mov
shl
sahf
jmp
ss
dec
in
mov
scas
popa
(bad)
sbb
add
xchg
and
cmp
imul
jecxz
jno
test
sub
dec
enter
fsub
push
xchg
xchg
add
sbb
popf
hlt
push
xor
sbb
loopne
fsubr
idiv
in
xchg
or
retf
xchg
cld
js
dec
shl
sub
aas
aas
jmp
ins
inc
or
nop
dec
mov
xchg
jns
pop
push
aam
push
clc
in
bound
call
and
fcomp
push
mov
mov
add
push
xlat
mov
das
bound
aas
xchg
xor
jecxz
sbb
mov
(bad)
dec
cmp
mov
pop
inc
xor
push
bound
jno
daa
lock
arpl
pop
jp
sub
mov
bsf
sub
mov
lea
ins
jmp
cmp
mov
add
fist
push
adc
repz
out
adc
and
mov
pop
lods
xor
inc
jnp
clc
lods
test
(bad)
sbb
arpl
xchg
ret
hlt
(bad)
cdq
inc
cmc
jno
pop
jnp
pop
adc
iret
fwait
mov
call
mov
push
jle
es
xor
jb
scas
or
push
xchg
add
jecxz
cmps
add
pop
push
sub
xor
(bad)
adc
mov
sahf
add
mov
jmp
sub
(bad)
push
mov
in
xor
in
jnp
sti
jg
ins
test
mov
adc
cld
mov
add
mov
popa
cmp
mov
cs
or
hlt
(bad)
(bad)
(bad)
jmp
and
sub
sub
pop
sbb
mov
fdivrp
mov
mov
add
push
shl
popf
retf
repz
jecxz
popf
(bad)
lods
cmps
inc
test
pop
push
cmp
mov
add
jnp
xor
sub
adc
addr16
dec
push
cwde
push
xor
cmova
imul
xor
in
xor
sahf
xchg
sub
(bad)
xor
mov
lock
loopne
test
fwait
sbb
mov
das
cli
xor
add
mov
xlat
retf
sbb
mov
cld
push
dec
ja
shl
or
loopne
pop
test
pop
arpl
push
xchg
adc
pop
pop
out
movs
fs
daa
jo
dec
call
outs
retf
pop
outs
xchg
pop
jmp
xchg
pop
push
repnz
or
in
retf
push
call
jno
shr
jne
mov
or
push
jle
mov
dec
push
scas
stc
push
sbb
fisub
mov
(bad)
rol
dec
cmp
cmp
test
xor
mov
xor
or
repnz
adc
(bad)
xor
and
scas
or
jmp
(bad)
scas
xchg
pop
mov
in
(bad)
jle
popf
repz
frstor
or
push
inc
(bad)
ficom
out
divps
add
fld
mov
call
inc
xrelease
retf
dec
scas
jl
push
std
jg
or
lock
sub
mov
nop
cmps
sub
sub
icebp
push
xchg
mov
pop
jne
pop
and
and
add
xchg
or
inc
inc
xchg
sbb
ds
fbld
inc
in
sub
repnz
pop
fmul
in
stc
clc
cld
rcr
push
xor
pop
adc
xor
out
pop
fldcw
imul
push
sub
mov
movs
cmp
in
xlat
ss
push
mov
lods
daa
xlat
jne
das
jae
push
int
inc
out
aad
and
push
mov
fidivr
repnz
mov
or
xchg
movs
cmp
adc
jb
test
mov
pop
add
mov
scas
dec
sahf
push
push
imul
xchg
(bad)
lods
xchg
push
xor
cs
xor
imul
or
gs
ins
outs
xlat
frstor
cmc
rol
popa
scas
sub
aam
ror
pop
jnp
xchg
loop
jne
or
loop
imul
cli
and
inc
xchg
add
mov
push
xchg
fs
sub
retf
stos
cmps
or
aam
and
inc
call
std
pop
ret
out
jmp
aam
or
mov
mov
lds
mov
in
shr
test
and
xchg
pop
ins
rcl
movs
imul
enter
mov
jae
(bad)
int
pop
xchg
aas
(bad)
icebp
iret
xchg
push
cwde
or
adc
cmc
mov
rcl
(bad)
outs
xor
adc
retf
sub
ja
out
rcr
adc
pop
ret
inc
stos
pop
hlt
(bad)
fstp
adc
inc
inc
sub
repnz
xor
(bad)
xor
sar
ss
jne
inc
(bad)
pop
jmp
or
test
call
inc
or
in
xor
dec
sub
mov
das
out
bound
xchg
fcmovnbe
jns
xlat
inc
ret
ret
cmp
mov
clc
loopne
push
xor
inc
ss
in
movs
jo
(bad)
sub
retf
xor
xor
add
push
js
inc
mov
cmp
mov
push
jns
push
test
adc
out
movs
cmps
cs
int
and
and
dec
push
loopne
sbb
mov
xchg
mov
cmps
fist
imul
mov
arpl
idiv
and
mov
(bad)
cli
add
cwde
xchg
(bad)
push
mov
mov
jno
xabort
sbb
sbb
in
or
mov
jecxz
push
sbb
sub
sbb
ins
fidivr
cmp
mov
out
repz
ins
push
or
fisub
ret
cmc
lea
test
lods
adc
dec
inc
and
fidiv
xor
jl
sub
xor
in
inc
add
movs
add
cmp
pop
mov
xor
or
das
mov
push
mov
(bad)
xor
pop
xor
scas
jne
mov
cmp
hlt
xlat
inc
fdecstp
outs
xchg
inc
fcomi
xchg
xchg
lds
lock
jbe
test
shl
or
lods
push
xchg
rcr
test
xchg
fiadd
push
loopne
hlt
out
mov
daa
test
sub
xchg
cmc
pop
(bad)
fstp
xchg
shl
bound
adc
retf
lods
retf
and
jmp
pop
adc
cli
fiadd
mov
inc
inc
test
out
add
sbb
add
lahf
cmp
dec
inc
into
or
es
pop
cmp
nop
popa
push
out
or
jno
mov
les
(bad)
bound
leave
ins
mov
outs
lock
loope
and
mov
mov
push
push
loope
or
inc
mov
aas
mov
sti
xor
out
adc
(bad)
in
and
cmp
cwde
cmp
mov
mov
in
jns
or
loop
and
jne
int3
shr
cmp
xchg
and
pushf
cmp
xchg
and
inc
xchg
imul
outs
imul
mov
xor
adc
cmp
and
mov
and
mov
mov
add
cmp
sar
outs
mov
call
xchg
mov
repz
or
scas
int
scas
pop
je
sbb
(bad)
(bad)
xor
repz
loop
adc
inc
repz
sub
imul
cmp
adc
mov
mov
xor
out
imul
fs
addr16
test
loop
mov
jo
pop
jle
mov
adc
push
mov
repz
pop
aas
popf
stos
mov
or
sbb
inc
sbb
cmc
xchg
scas
and
pop
mov
das
jnp
mov
jae
dec
idiv
in
push
leave
mov
and
dec
js
shr
popa
push
xchg
mov
or
sar
arpl
dec
and
pop
test
sub
or
loopne
sar
mul
or
fwait
sbb
push
xor
mov
or
or
inc
or
in
mov
call
mov
imul
gs
and
int
stos
into
fucomp
shl
jo
ins
repz
and
mov
dec
jns
push
call
retf
inc
aaa
sub
jb
pop
and
test
fdivr
dec
cs
fiadd
shl
jg
dec
stos
pop
jns
xchg
mov
cmps
pop
adc
adc
in
arpl
call
mov
pusha
push
int3
(bad)
sti
jnp
mov
xchg
inc
jb
add
push
push
(bad)
mov
cmp
icebp
sti
xor
push
mov
sahf
inc
(bad)
and
shl
ret
aam
or
cmps
pop
push
jge
aaa
jg
sbb
cmp
inc
mov
add
mov
lods
inc
stc
pop
jmp
jo
jae
xchg
add
loope
outs
mov
jb
rcl
mov
(bad)
push
jle
push
dec
mov
in
call
xchg
xor
icebp
stc
cmp
cmp
push
inc
nop
cmps
xor
in
lock
jmp
(bad)
(bad)
test
mov
(bad)
xchg
or
ret
xor
jmp
mov
mov
cmc
sub
and
push
(bad)
push
add
icebp
dec
and
xor
imul
imul
fcmove
ret
ds
scas
push
mov
mov
lock
inc
or
mov
ret
or
sbb
mov
into
inc
fsubp
sar
cmp
jne
ins
mov
int
neg
jle
pushf
xor
adc
cld
sbb
mov
ins
cmps
cmp
lahf
push
jmp
pop
in
mov
push
fcmovnb
lods
dec
jp
gs
xor
sahf
shl
xchg
(bad)
jle
jmp
fadd
fld
lds
fwait
jmp
mov
jecxz
aaa
push
fwait
iret
cmp
in
aam
aaa
xchg
enter
(bad)
shl
les
dec
or
adc
or
cwde
add
lock
popa
xor
lahf
jg
int3
ror
dec
push
cmc
je
data16
pop
loope
pop
pop
fcom
or
and
je
pusha
add
mov
sbb
mov
mov
mov
cmp
icebp
add
loopne
and
sbb
cmp
setnp
xor
sbb
fbld
pushf
dec
mov
and
inc
(bad)
adc
mov
xor
loopne
sbb
stos
in
mov
xchg
lods
and
push
pop
mov
push
cs
xor
stc
mov
(bad)
dec
rol
fstp
cmps
ret
mov
loopne
pushf
ja
dec
aaa
xchg
inc
lods
imul
mov
les
div
mov
gs
sub
retf
fdivr
nop
cli
test
jns
jmp
call
test
cmp
jno
or
mov
xchg
es
mov
jae
imul
stos
sbb
mov
int3
into
inc
mov
ret
cmp
xor
add
pop
cmp
dec
mov
pop
retf
std
push
std
push
and
inc
pop
dec
icebp
sub
and
pop
scas
fsub
pusha
mov
mov
stc
pop
gs
fcom
stos
jne
mov
leave
outs
adc
adc
aad
outs
or
stos
mov
pop
loopne
scas
xor
jp
push
or
shl
cmps
js
mov
sub
(bad)
das
or
cmps
fadd
mov
pop
popf
sbb
sub
fmul
and
loope
jbe
clc
adc
lods
in
sub
(bad)
mov
lea
or
mov
sub
push
movs
push
fldenv
bound
js
mov
nop
(bad)
lods
mov
mov
push
std
ror
aad
shr
repz
and
outs
dec
mov
dec
repz
inc
shl
and
ja
push
mov
cmp
out
pop
(bad)
iret
sub
lods
fdiv
loop
loope
dec
gs
push
adc
adc
sub
bound
sub
gs
mov
repnz
sbb
jp
aad
adc
lods
push
(bad)
jecxz
into
push
fdiv
push
ja
ret
ud1
xchg
dec
fidivr
popa
in
mov
in
pop
dec
ffree
lds
add
(bad)
xor
test
fwait
leave
add
fyl2xp1
sbb
mov
jbe
cmp
cwde
dec
fwait
xchg
jns
retf
adc
push
adc
add
mov
lea
jb
out
enter
mov
lahf
hlt
push
out
(bad)
js
or
lea
inc
or
pop
(bad)
mov
sbb
mov
retf
jns
rol
hlt
pop
sbb
jecxz
xor
addr16
mov
das
push
retf
pushf
push
xchg
cmps
sar
ins
cmps
add
adc
jmp
mov
pop
hlt
(bad)
fisttp
jl
inc
lds
sbb
jecxz
cmp
add
outs
xchg
pop
push
loopne
sbb
xchg
sbb
jno
cmps
das
(bad)
fisubr
scas
sbb
loopne
enter
push
test
jmp
mov
mov
mov
xor
mov
mov
sub
fs
lds
adc
pop
fild
dec
rcl
pop
or
loope
mov
fistp
add
(bad)
xacquire
xor
daa
cmp
jmp
xlat
movs
loop
xchg
retf
(bad)
xlat
retf
or
mov
mov
dec
mov
mov
(bad)
imul
xor
dec
(bad)
adc
div
shl
lahf
jmp
adc
mov
aaa
adc
pushf
cs
ret
jo
add
jl
mov
cmps
arpl
sti
test
aad
pop
hlt
retf
ror
rcr
mov
adc
sbb
pop
or
test
mov
ret
mov
mov
call
ja
add
dec
lds
addr16
cmps
jae
and
sbb
ss
dec
pop
dec
(bad)
jle
into
fs
lods
ret
nop
mov
repnz
cwde
std
and
add
retf
dec
jp
add
adc
fdivr
mov
clc
imul
lea
sub
inc
sbb
push
ins
ja
int3
cmp
push
out
ds
les
stos
int3
std
pop
scas
mov
mov
(bad)
popa
pop
pop
loope
std
out
xchg
cdq
retf
fs
dec
shr
sub
aas
adc
pop
jge
rol
pusha
out
sbb
js
sbb
and
mov
push
push
cli
push
pop
mov
xchg
ins
push
cdq
add
sbb
jne
popf
jecxz
into
pusha
and
ins
jmp
pop
xchg
dec
mov
push
pushf
jge
push
fwait
pop
pop
sub
aam
lock
jmp
out
pusha
(bad)
xchg
dec
sbb
sub
movs
lahf
and
xchg
push
push
icebp
imul
xbegin
xchg
cli
imul
loope
sub
add
push
popf
mov
sbb
pop
mov
cmp
(bad)
test
pushf
loop
jbe
inc
mov
xor
movs
add
or
pop
add
pop
xchg
jl
retf
bound
fmul
mov
pop
push
ds
outs
fisub
das
test
fisub
mov
cs
enter
jle
clc
arpl
xchg
sbb
inc
xlat
xor
mov
xor
mov
adc
jmp
mov
add
push
adc
add
leave
in
inc
(bad)
adc
add
out
xor
mov
push
cdq
jo
stos
mov
push
jns
les
popf
sahf
jg
push
add
cld
dec
xchg
pop
pop
ds
in
mov
not
fisub
imul
mov
add
popf
pusha
adc
(bad)
mov
and
mov
add
pop
sub
mov
or
imul
sub
mov
ret
adc
inc
sahf
xchg
adc
sar
outs
adc
lods
repz
xor
push
mov
fwait
cmp
adc
sar
or
mov
and
inc
jno
ret
sbb
jecxz
cmp
and
popa
sub
fimul
mov
aas
add
or
xchg
mov
js
shr
ins
ffreep
mov
dec
xchg
popa
imul
or
and
and
mov
push
push
pop
fs
jnp
inc
add
fbstp
cmp
sub
test
or
lods
std
lods
mov
push
enter
xor
mov
xchg
jae
leave
scas
inc
sub
push
rcl
add
push
cmc
xchg
and
popa
int
inc
xchg
push
pop
jge
jmp
dec
xor
gs
mov
mov
fisub
aas
mov
fcomp
fld
cmp
repz
aam
cmps
mov
ins
mov
test
mov
jg
imul
(bad)
in
push
adc
loopne
push
xor
adc
push
mov
pop
mov
out
je
js
mov
bnd
gs
or
js
jmp
pop
imul
jnp
xor
cld
sahf
pop
add
jecxz
jl
hlt
clc
mov
aam
dec
rcr
(bad)
mov
iret
mov
popa
sbb
jns
icebp
jmp
or
std
jb
es
pop
push
sub
jb
int
fcomi
pop
fwait
cdq
dec
adc
pop
jle
in
pusha
sbb
(bad)
jmp
mov
xchg
cs
call
enter
loopne
popa
ds
pop
popa
xor
mov
cmp
aaa
mov
xchg
outs
xchg
cmps
imul
xchg
sub
sub
xchg
adc
fiadd
mov
push
fs
cmc
pop
shr
pop
dec
std
lahf
sub
jmp
xchg
and
sbb
loopne
pop
dec
rol
jno
pop
push
mov
std
rcl
dec
shl
dec
mov
mov
add
xchg
ins
out
sbb
dec
cmps
dec
(bad)
mov
es
jecxz
stc
mov
mov
mov
test
retf
sbb
push
xor
(bad)
xor
loopne
daa
mov
push
sahf
xor
sub
cmp
daa
jmp
shl
imul
cmp
(bad)
jbe
leave
xchg
cmps
sub
add
in
jno
jo
adc
mov
mov
mov
pusha
mov
stos
cmp
ret
fimul
cld
mov
loopne
and
add
jno
imul
push
inc
cmp
ins
popa
pop
fistp
mov
mov
es
dec
push
in
push
cwde
jle
jge
pop
push
repnz
out
cdq
push
js
js
retf
out
inc
lods
cmc
movs
outs
add
sub
(bad)
jno
imul
int3
(bad)
mov
xor
cmp
jne
jbe
pusha
in
gs
clc
jo
retw
pop
xor
out
js
mov
and
dec
outs
push
and
fsubr
gs
in
sbb
xchg
pop
jb
dec
jge
dec
cmp
xchg
mov
push
fsubr
ins
call
sahf
xchg
imul
dec
xchg
or
mov
mov
call
mov
and
mov
ficomp
sbb
jg
jle
inc
and
aad
or
mov
loope
nop
xor
call
mov
jg
stos
pushf
pop
into
or
jno
add
jmp
jae
fadd
or
dec
daa
pop
inc
mov
test
gs
fst
in
outs
dec
sahf
mov
or
and
xor
iret
inc
gs
retf
mov
add
lds
fild
cmp
add
cmp
dec
es
push
jnp
inc
inc
sbb
aad
add
mov
push
ds
pop
mov
int
cmp
(bad)
fbld
push
xchg
sub
jmp
icebp
sti
movs
push
stc
jns
adc
sbb
cmp
stos
adc
sub
in
push
aaa
adc
pop
addr16
cmp
lahf
inc
and
add
aas
sbb
(bad)
xlat
xchg
lods
jb
push
xchg
sub
stos
mov
push
fisttp
fld
xchg
pushf
icebp
sti
adc
sub
stos
mov
push
movs
cmps
pusha
test
dec
dec
fistp
popf
in
js
sbb
stos
ins
mov
xchg
mov
outs
ret
xor
dec
not
(bad)
aam
(bad)
clc
push
or
ss
adc
cmp
sbb
sub
fld
push
lods
pop
(bad)
js
sub
dec
xor
ficom
mov
scas
js
push
adc
jne
mov
es
repnz
add
jns
xchg
xlat
and
xchg
jle
mov
inc
outs
mov
pop
das
fdivr
push
mov
jbe
xchg
inc
pushf
rdmsr
xor
adc
and
dec
das
ret
mov
cmp
ins
cmp
stc
dec
clc
pop
jle
rol
sbb
add
xchg
jnp
int3
int3
ret
jge
fcom
idiv
sub
adc
mov
push
adc
iret
jne
or
cmps
ret
ficom
cmp
jb
inc
in
lock
arpl
push
add
jp
pop
ror
sbb
and
out
dec
stos
jle
xlat
jmp
push
loope
add
and
mov
and
and
(bad)
mov
outs
cmps
push
test
lahf
mov
daa
ffree
pop
ror
jmp
jno
xor
pop
pop
xlat
daa
push
loop
fstp
cs
fisttp
sub
mov
in
pop
xor
(bad)
mov
sub
(bad)
je
ror
dec
icebp
sar
adc
aam
dec
pop
or
arpl
xchg
or
push
in
cmovg
ss
cmp
js
cdq
imul
outs
fwait
enter
sub
shl
push
(bad)
ror
mov
inc
ss
xchg
loop
sub
inc
xchg
(bad)
inc
jg
das
mov
ins
xchg
sahf
nop
mov
fidivr
sub
loope
mov
inc
ins
repnz
ss
xchg
mov
shl
xor
in
sahf
ret
(bad)
ret
in
(bad)
inc
movs
push
push
push
jecxz
cmp
jmp
fdiv
stos
mov
mov
mov
call
loop
or
jo
jb
repz
inc
push
cmp
repz
and
sub
fidivr
sub
adc
aad
int
sbb
pop
outs
cmp
mov
jns
pop
and
test
jne
sahf
popf
cmp
push
adc
push
mov
pop
in
dec
clc
inc
les
push
das
mov
loop
jo
fs
adc
(bad)
lock
cld
cmp
push
add
cmp
mov
aaa
jge
arpl
iret
daa
mov
xchg
or
push
xchg
sbb
cmp
pop
or
sub
cmovae
push
shr
add
cmps
test
mov
add
out
(bad)
sbb
leave
hlt
std
jb
xchg
xlat
ins
sbb
pop
lds
fldenv
push
cs
adc
add
in
mov
scas
jle
cmp
mov
add
pushf
ror
aas
and
pop
je
adc
inc
fwait
ret
fstp
jb
dec
sbb
fwait
jecxz
mov
mov
aas
imul
push
mov
cmp
pop
mov
imul
sub
inc
cli
mov
cwde
jge
bound
out
test
mov
pop
dec
or
test
scas
(bad)
daa
add
sar
fcomp
aam
nop
push
dec
std
mov
out
sbb
(bad)
xor
cmp
mov
(bad)
(bad)
fimul
sahf
inc
pop
xchg
dec
(bad)
xchg
xchg
mov
js
sbb
int3
int3
ror
shl
(bad)
loope
sti
stos
xor
es
xchg
ins
fldenv
fst
rol
(bad)
int
jb
and
ret
xchg
fidiv
les
pop
sub
add
pop
mov
pop
ror
(bad)
jbe
jno
mov
dec
loopne
bound
push
mov
out
jge
ror
sub
icebp
movs
push
fdiv
push
push
sub
and
xchg
pop
in
sbb
mov
mov
cwde
push
jmp
mov
enter
daa
shr
rcr
lods
xchg
push
shl
int
mov
mov
sub
inc
sub
retf
add
sbb
adc
arpl
ja
ds
out
pop
lock
inc
adc
mov
clc
fcmovbe
mov
sub
retf
mov
jbe
hlt
retf
ins
repz
bnd
jae
ret
mov
fwait
inc
mov
mov
stos
leave
sbb
in
leave
mov
outs
daa
in
mov
jbe
dec
cld
jmp
inc
push
loope
(bad)
and
sub
cmps
inc
js
xchg
mov
arpl
add
out
adc
jg
addr16
inc
sub
inc
gs
mov
sub
shl
fcmove
push
bound
mov
push
push
mov
outs
jns
fwait
cmp
mov
sub
and
cs
pusha
popf
push
jg
jge
adc
cmps
jne
je
cld
inc
call
jo
cmp
jbe
ins
out
iret
push
inc
mov
cmp
repz
int3
xchg
xor
cmp
jmp
cdq
jae
mov
sbb
xchg
dec
vunpcklps
push
sub
ss
xor
add
enter
jp
push
movs
cli
push
fsub
pop
movs
mov
push
adc
pushf
mov
(bad)
adc
and
das
adc
dec
inc
scas
cld
xor
fdivr
sub
sbb
loopne
sbb
dec
es
and
iret
es
popa
test
je
data16
mov
cmp
std
or
das
dec
jge
or
sar
xor
or
inc
shl
jne
aas
jl
idiv
inc
call
dec
mov
sbb
push
out
pop
js
add
icebp
mov
push
and
ins
sub
stos
sbb
mov
dec
sbb
dec
shl
cdq
sbb
mov
mov
std
(bad)
sbb
imul
aaa
sti
ret
adc
ins
sbb
sub
fcomp
push
jmp
mov
js
popf
retf
loopne
xor
jno
sti
arpl
std
(bad)
jmp
mov
retf
fsubr
imul
call
movs
ror
not
xchg
stos
js
hlt
cmp
xor
pop
lea
inc
mov
jmp
jmp
leave
test
test
lods
xchg
enter
cmp
xchg
gs
pusha
mov
and
adc
notrack
aad
popa
inc
neg
ficomp
sbb
fwait
ja
leave
mov
jnp
in
mov
add
cmp
out
add
test
int3
sbb
xor
sbb
cmp
test
cmp
popf
cmp
inc
ret
dec
dec
data16
test
push
cmp
mov
dec
in
pop
sub
mov
mov
fsubr
inc
fimul
lahf
movsx
lods
push
sub
idiv
or
test
xlat
add
mov
cwde
lods
popf
out
dec
inc
mov
movs
inc
mov
cmps
sbb
xchg
jge
add
(bad)
in
lock
xchg
fsubr
jmp
ins
and
hlt
loope
cs
dec
retfw
sbb
shr
rcr
xor
lods
enter
fbld
adc
push
loopne
mov
dec
inc
nop
sahf
outs
cmps
fcomp
xor
sub
cmp
adc
sbb
jns
fdiv
cmp
ds
mov
adc
jae
fs
xchg
hlt
sbb
mov
fadd
push
inc
dec
lea
mov
in
fbstp
lods
jecxz
adc
mov
nop
mov
jecxz
and
out
into
push
nop
addr16
cwde
idiv
fs
or
(bad)
cwde
pop
jnp
int
inc
or
cld
add
sub
out
icebp
mov
loope
imul
(bad)
xchg
ss
adc
mov
mov
xchg
jg
aas
sbb
ja
cwde
push
inc
sbb
enter
pushf
mov
(bad)
jge
mov
ins
rcl
cmp
jmp
hlt
dec
inc
mov
sbb
mov
mov
hlt
fs
fwait
in
sti
cmp
jnp
cmp
mov
or
in
jmp
jbe
jl
adc
inc
mov
sbb
xor
sbb
ret
das
add
lahf
sub
and
sub
mov
cmps
add
and
ins
xchg
mov
lods
jmp
push
dec
add
pop
push
mov
push
test
stos
scas
add
dec
sub
xor
mov
xchg
gs
lods
sub
mov
jle
ja
sbb
or
outs
stos
mov
cli
pop
out
pop
lods
imul
mov
(bad)
push
stos
aas
sbb
mov
(bad)
or
inc
icebp
loop
jbe
sub
xchg
pushf
loop
add
(bad)
(bad)
mov
pop
out
jp
mov
mov
xlat
push
xchg
cmc
stos
hlt
shr
add
pusha
(bad)
idiv
inc
mov
sub
and
sub
push
dec
fisub
sbb
xor
lea
out
in
scas
inc
sub
movs
and
pusha
mov
push
aaa
cdq
std
sbb
ret
or
fdivr
push
add
lea
ins
cmp
inc
mov
hlt
jp
jns
sub
retf
sbb
sub
ja
cmc
jmp
je
and
into
xor
in
jmp
aad
mov
fwait
out
dec
mul
cmp
not
adc
pop
nop
adc
call
ins
jae
fild
jae
pop
xchg
(bad)
mov
push
jns
test
jg
push
add
ret
add
int
sbb
xchg
sbb
je
test
loopne
push
aam
jle
sub
adc
addr16
mov
xchg
imul
pop
xchg
or
adc
imul
cmp
xchg
ror
cdq
inc
lock
stos
hlt
jmp
mov
adc
pop
pop
push
add
xor
inc
movs
inc
sbb
sbb
call
xor
mov
mov
test
cmc
lea
adc
enter
add
push
inc
cmp
cmc
setg
int
and
mov
add
iret
int
je
pop
das
dec
cmp
ret
ret
pop
pushf
jb
mov
sub
push
cmp
scas
pop
test
push
fisttp
mov
test
jo
cmp
scas
mov
push
pusha
loop
inc
xor
push
mov
aad
popf
pop
fwait
jl
push
dec
cmp
cmp
mov
mov
push
ret
(bad)
xor
sub
jnp
lock
(bad)
adc
mov
out
movs
xchg
leave
loopne
jno
test
pop
sub
addr16
mov
add
(bad)
dec
mov
out
pusha
mov
mov
adc
mov
xor
xor
or
push
and
mov
mov
repnz
jmp
jno
push
mov
test
in
xchg
mov
add
ins
adc
xor
adc
mov
mov
or
fadd
ins
gs
in
and
(bad)
jae
cmps
mov
cmp
ins
inc
xlat
mov
push
sbb
ds
dec
mov
(bad)
sbb
ret
sbb
push
add
adc
jl
xor
mov
cmp
mov
lock
div
out
data16
push
loopne
cmp
std
idiv
jno
pop
jg
in
cmp
and
mov
hlt
push
jnp
mov
adc
ror
cdq
xor
fisubr
cdq
pop
push
xor
jo
lea
sbb
enter
enter
inc
popf
loopne
cmc
scas
push
adc
leave
and
pusha
(bad)
dec
(bad)
outs
test
in
lds
fidivr
jp
inc
inc
lods
les
xchg
push
ret
in
mov
mov
cmp
sub
out
and
outs
jmp
les
shr
enter
jge
push
pop
xchg
xor
lea
in
in
jge
push
imul
ret
mov
in
arpl
adc
dec
ret
dec
pop
cmp
ss
(bad)
dec
in
push
imul
sbb
outs
dec
push
sbb
(bad)
mov
icebp
inc
cwde
or
xchg
data16
jmp
movs
and
neg
stos
and
mov
imul
(bad)
push
xchg
mov
leave
repz
pop
mov
rol
mov
mov
xchg
mov
or
retf
sbb
js
lods
fidivr
xor
mov
fcmovu
push
in
es
mov
sbb
rol
inc
push
popf
inc
jle
aaa
adc
sub
(bad)
xchg
jnp
mov
jmp
jno
rcr
xchg
inc
mov
pop
lods
jmp
sub
adc
jp
adc
sub
push
mov
aaa
aas
and
rol
movs
pop
or
xchg
mov
jne
fcom
pop
idiv
fcomp
call
xlat
lods
xchg
dec
adc
mov
out
cmps
adc
sub
movs
dec
push
inc
cmc
cmp
dec
xor
mov
imul
jmp
es
fstp
ret
push
add
mov
mov
ret
jle
adc
cmp
outs
test
add
xor
into
add
or
jb
mov
and
mov
add
jg
and
cmp
push
cmp
push
shl
xlat
retf
cmps
mov
pop
int3
sbb
ror
(bad)
or
mov
mov
(bad)
mov
or
push
jne
add
and
mov
inc
mov
in
neg
addr16
shr
pop
sbb
jmp
mov
dec
adc
jb
into
sub
mov
sub
mov
mov
jae
je
push
and
add
sbb
xor
sbb
rol
arpl
mov
dec
fisubr
xor
test
setg
dec
in
jecxz
dec
mov
lea
xor
pusha
pushf
adc
jns
pushf
outs
or
ds
jo
mov
xor
imul
dec
es
movs
inc
cmp
xchg
sub
sbb
test
push
lods
mov
in
cmp
dec
fs
out
fadd
stos
inc
in
cwde
mov
inc
mov
adc
addr16
mov
dec
mov
cmp
sbb
sbb
pop
adc
(bad)
std
fsubr
add
cmp
lods
enter
aas
dec
lea
sub
fld
retf
shl
dec
jno
adc
ss
mov
add
ds
adc
inc
jge
sbb
mov
cli
xchg
sbb
xchg
gs
mov
mov
and
and
dec
dec
das
xchg
add
(bad)
mov
add
jl
jge
fld
mov
push
ins
xchg
xchg
ss
mov
stos
or
popa
jb
jle
xchg
vmwrite
pop
add
mov
and
sub
aam
enter
jno
retf
pop
adc
mov
pop
data16
push
or
stos
dec
add
mov
and
sub
test
loope
outs
in
aas
pop
shl
push
mov
add
xor
sub
mov
xor
fwait
dec
adc
sub
and
lods
gs
in
call
hlt
sbb
inc
xchg
cmp
outs
(bad)
rcr
add
(bad)
clc
xchg
add
aad
cmp
inc
and
sbb
lds
dec
xor
sub
push
jns
(bad)
inc
sub
scas
aaa
pop
pop
inc
mov
and
cmp
(bad)
fnsave
addr16
cmps
das
ds
sahf
inc
pusha
mov
inc
sub
xor
aam
push
mov
xchg
sbb
sahf
dec
adc
cmp
cmp
push
out
adc
sub
add
fistp
not
cmps
sar
sbb
pop
mov
push
or
jmp
out
in
pop
dec
mov
dec
push
mov
test
mov
sub
jecxz
test
ret
pop
jbe
jmp
sub
push
(bad)
fnsave
shl
hlt
add
loope
rcl
or
jmp
ficomp
and
outs
mov
out
jg
scas
adc
and
retf
sti
es
dec
fnsave
scas
jmp
and
daa
sub
gs
nop
xchg
aas
ret
sar
push
inc
lahf
dec
sbb
sar
jl
test
imul
aad
push
cmp
loop
nop
jbe
dec
out
or
xchg
sub
pusha
add
xchg
mov
adc
shl
movs
adc
movs
cmp
retf
adc
mov
sub
mov
test
ss
sub
sahf
mov
test
sub
mov
mov
fisttp
test
pushf
lods
lea
fcmove
adc
fwait
arpl
jb
lock
test
mov
(bad)
in
sub
dec
push
xchg
cmps
jp
clc
push
sbb
ror
jg
or
shl
adc
inc
adc
les
loop
xor
ret
push
xor
cmps
xor
push
movsx
mov
xor
pop
cmp
jge
sbb
aam
jecxz
jnp
(bad)
rcr
aad
cmp
push
inc
jge
dec
push
sbb
xchg
popf
repz
test
bound
or
bound
cmp
cdq
adc
fisttp
push
mov
shl
fyl2x
push
and
xor
aas
sar
jo
out
repnz
mov
sar
or
mov
fisttp
inc
daa
push
mov
sub
jb
and
test
shl
and
sub
cmp
inc
dec
int
daa
mov
or
push
push
and
lock
or
mov
iret
test
sahf
(bad)
out
out
scas
leave
hlt
(bad)
add
push
dec
fdivr
mov
pop
inc
(bad)
shr
call
xlat
sub
sub
imul
(bad)
adc
std
add
cs
mov
xchg
jp
or
in
daa
ror
jg
mov
jne
cmc
hlt
mov
cmp
mov
rol
ds
jmp
push
mov
pop
and
lods
add
mov
mov
and
hlt
outs
lods
mov
adc
mov
mov
sti
fidivr
sbb
fcom
dec
or
sti
push
nop
outs
mov
popf
fbld
rsm
hlt
js
fild
lahf
daa
mov
(bad)
leave
cmc
cmp
call
inc
and
push
js
shr
pop
les
scas
add
bound
int3
pop
cdq
push
inc
mov
pop
mov
cmp
mov
sar
cmp
dec
xor
(bad)
imul
adc
inc
test
xchg
jbe
pop
ins
dec
mov
addr16
lds
push
test
cmps
inc
pop
movs
mov
(bad)
aaa
mov
movs
cmps
push
call
sbb
inc
sub
cmp
sbb
mov
mov
mov
imul
rcr
movs
fcom
in
or
fisttp
add
sbb
mov
aas
dec
mov
add
aad
fdivr
retf
cmp
ins
sbb
iret
mov
mov
or
and
fs
int3
sub
jmp
and
mov
fsub
inc
cmc
pop
(bad)
sub
addr16
inc
sub
adc
(bad)
lahf
dec
out
addr16
test
scas
sub
sub
push
ins
ror
fs
push
or
jmp
cmp
faddp
or
mov
cwde
adc
xor
adc
pop
outs
mov
push
movs
lahf
aam
out
sbb
xchg
mov
movhlps
xchg
mov
push
dec
sbb
test
xchg
(bad)
mul
out
mov
enter
adc
jl
(bad)
fldcw
repnz
or
adc
es
outs
dec
bnd
repz
dec
push
pop
or
out
mov
mov
in
or
jns
daa
sub
xchg
add
xchg
jo
xor
inc
in
cmps
push
sub
enter
stos
aad
lods
lock
push
jg
inc
shr
and
adc
cmc
(bad)
lahf
sbb
add
xor
shr
fidiv
shr
int3
pop
dec
adc
xchg
loop
(bad)
mov
cmp
xchg
dec
lds
sbb
jmp
cmps
pop
js
jo
adc
fwait
daa
push
cmp
pop
clc
enter
in
mov
jno
inc
mov
cmps
dec
test
xchg
mov
lea
adc
push
repnz
pop
pop
dec
add
retf
daa
mov
imul
xchg
inc
(bad)
popa
enter
out
xlat
ss
lock
mov
pop
js
jle
push
mov
mov
bsr
xor
cwde
ins
mov
pop
jg
sub
scas
fs
adc
repz
fidiv
aaa
xchg
rcl
call
sbb
mov
sti
xor
ficom
dec
dec
iret
loop
mov
sub
xor
xchg
cli
mov
inc
pushf
push
xchg
shl
add
adc
and
push
pop
in
pushf
call
sbb
jle
sub
das
xchg
ja
movs
jl
mov
xor
jmp
xchg
(bad)
xchg
frstor
pop
adc
int3
fwait
push
ret
lods
call
xor
outs
add
sbb
jmp
or
add
ficom
iret
or
in
sub
push
test
icebp
loope
sbb
mov
lahf
push
cmps
xor
push
std
jo
or
push
sub
xchg
adc
push
int3
push
fidivr
xor
pop
xchg
arpl
loope
xlat
into
xchg
dec
cld
ja
mov
stos
movs
std
cmp
sub
aam
popf
mov
push
popa
addr16
pushf
mov
(bad)
mov
mov
sbb
retf
nop
jg
fcom
ficomp
push
jmp
ja
and
mov
or
popw
jmp
jmp
clc
adc
pop
cdq
xor
mov
pop
cmp
sbb
fdiv
xor
out
dec
lds
mov
out
add
jo
ins
shl
jb
fmul
mov
ins
xchg
enter
inc
in
pop
(bad)
aad
cmc
jp
mov
test
dec
out
in
aaa
add
es
imul
pop
adc
mov
ret
aaa
bound
stos
call
sub
enter
call
dec
ja
xor
orps
xchg
or
xchg
push
ins
stc
call
pop
and
or
in
mov
mov
adc
cmp
shl
adc
arpl
stos
retf
imul
sbb
test
stc
jmp
(bad)
cli
outs
push
leave
scas
sbb
(bad)
(bad)
stos
inc
mov
(bad)
lods
xchg
xchg
bound
fnstenv
pop
and
cmps
rol
mov
push
std
gs
pop
sub
mov
test
das
idiv
aam
lahf
data16
adc
xchg
enter
sar
push
mov
adc
jae
mov
int
mov
shr
test
imul
add
(bad)
sub
add
and
bound
inc
adc
int3
dec
lock
jae
fucomi
cmps
sub
lea
(bad)
in
sub
pop
add
cmps
push
das
aam
push
imul
and
fwait
mov
push
xchg
jg
or
movs
push
jmp
jbe
push
cwde
adc
fist
push
outs
(bad)
xchg
lock
push
cmp
imul
jne
pop
push
or
fadd
loope
cli
jle
push
scas
in
sub
dec
(bad)
ror
xchg
jae
ins
outs
sti
jge
xchg
fiadd
jns
jbe
or
shl
das
sub
xor
push
mov
cwde
pop
push
retf
addr16
pop
out
adc
push
std
push
jae
adc
or
mov
hlt
outs
inc
mov
sub
or
dec
dec
mov
out
pop
and
push
mov
shl
cmps
cdq
ins
inc
aad
popf
arpl
dec
faddp
sub
les
sbb
add
mov
jno
xor
out
popa
xor
int3
js
xchg
cmc
call
mov
fcomp
push
mov
into
inc
adc
or
xchg
fdiv
sar
rcl
adc
cwde
in
popa
sar
(bad)
fdiv
out
cmp
xlat
jae
sbb
ficom
sub
mov
dec
shl
or
dec
test
dec
dec
rol
xor
out
test
mov
enter
xor
leave
retf
popa
jge
sahf
jb
mov
and
adc
sbb
add
jg
mov
in
xor
jnp
stos
fwait
mov
mov
xchg
jge
(bad)
(bad)
lds
pop
leave
mov
outs
and
push
stos
push
sbb
enter
sbb
push
sub
pusha
daa
adc
push
pop
cmp
push
cmp
xchg
retf
lock
(bad)
out
sub
cmp
sub
js
or
adc
sbb
inc
xchg
dec
push
add
inc
pop
ret
idiv
sbb
sbb
pop
not
push
mov
push
add
dec
daa
jmp
mov
test
(bad)
loope
inc
iret
mov
pop
cwde
adc
adc
cmps
leave
xchg
cmp
out
imul
add
test
or
mov
test
call
jae
or
fsub
sbb
dec
addr16
mov
out
popa
addr16
jg
sub
pop
jno
push
clc
or
push
xchg
loope
inc
adc
dec
sub
cwde
cld
mov
jne
jae
sbb
rcr
test
fdivr
xchg
repnz
(bad)
movs
or
xor
outs
mov
jl
sbb
and
and
arpl
mov
mov
scas
lods
mov
mov
lock
sbb
jbe
outs
ret
mov
push
cwde
into
pop
inc
pop
push
mov
jmp
sbb
ret
scas
out
mov
jp
mov
jmp
cmps
inc
call
inc
pop
xor
out
retf
and
cmps
cmps
retf
xchg
ret
cmps
adc
jo
outs
jecxz
sub
inc
sub
mov
cmp
idiv
xchg
stos
jmp
aad
and
stc
jns
sub
mov
nop
dec
jmp
test
xchg
sbb
cmp
jb
enter
gs
inc
fwait
adc
lock
mov
pop
ffreep
stos
mov
dec
fwait
out
and
adc
es
(bad)
jb
or
push
push
out
push
popa
sub
fwait
mov
das
pop
aad
add
lds
ja
xacquire
xchg
mov
lods
xchg
(bad)
das
mov
or
push
mov
movs
mov
jge
and
lods
dec
or
or
fst
xlat
sub
shl
imul
add
faddp
dec
ret
push
test
nop
cmps
mov
mov
call
inc
fidivr
push
xor
inc
int3
icebp
xchg
loop
mov
iret
push
mov
dec
sbb
xchg
jb
xchg
mov
xchg
push
push
mov
or
arpl
xchg
sub
pusha
fwait
dec
pop
dec
repnz
pop
mov
xlat
pusha
in
mov
shl
rol
pop
push
and
aaa
mov
sub
mov
jmp
sub
sub
add
xor
push
sub
jmp
movs
fcom
mov
inc
fld
mov
or
push
mov
adc
(bad)
(bad)
sbb
adc
and
ss
ja
cdq
fcom
cli
sbb
out
mov
dec
mov
out
adc
fiadd
sbb
sbb
mov
mov
jecxz
pop
test
pop
(bad)
shl
mov
push
dec
jno
xchg
arpl
and
sbb
shr
out
push
push
push
stos
inc
jmp
leave
dec
leave
and
jo
or
cwde
(bad)
sar
loope
mov
fbstp
sbb
int
jo
test
or
aam
jno
(bad)
mov
popf
xor
or
stos
aaa
push
frstor
shl
cwde
fbstp
xchg
mov
call
adc
xchg
push
cmp
retf
xor
sub
push
mov
cld
pop
jmp
cmp
fmul
daa
ror
and
or
inc
jo
aas
scas
xchg
shl
sub
mov
cmp
cmp
je
and
pop
loop
std
add
pop
test
test
add
loopne
mov
pop
in
outs
dec
mov
js
fdiv
inc
outs
fcomip
ds
or
cmp
xor
dec
dec
lahf
jle
jg
jp
cmp
jno
popf
mov
test
sub
icebp
add
sub
dec
sub
jl
push
push
pop
scas
add
xchg
pushf
inc
mov
push
pop
mov
test
fimul
dec
and
pop
mov
jle
(bad)
sub
dec
sub
lods
lock
cmp
push
push
icebp
push
add
mov
cmps
mov
imul
movs
jmp
(bad)
(bad)
jns
das
mov
inc
sbb
cmp
xchg
aad
test
hlt
pushf
aad
push
pop
push
xor
dec
push
add
xchg
leave
ss
xchg
or
adc
call
or
adc
cmp
popf
fsub
inc
sbb
rol
sub
into
jne
loop
lahf
fild
mov
mov
inc
neg
adc
(bad)
xor
jmp
clc
test
rcr
in
das
or
aaa
call
sub
jns
xchg
stc
pop
inc
not
stc
or
pushf
adc
mov
push
pop
xor
out
dec
adc
xor
mov
mov
cwde
stos
sub
pop
xor
fsubrp
jmp
sub
adc
mul
gs
sbb
push
repz
push
dec
mov
(bad)
lahf
xchg
cmps
mov
jmp
cmp
mov
mov
in
mov
xor
push
or
jle
mov
pop
test
es
jmp
pop
jns
das
jns
adc
and
je
pop
into
push
adc
cmp
mov
pop
mov
nop
and
(bad)
jl
xor
movs
cli
push
retf
add
jns
in
or
sbb
push
bound
dec
inc
adc
in
jp
jbe
mov
lds
test
mov
addr16
jns
pop
inc
mov
or
aas
js
test
add
xlat
cmps
scas
not
push
movs
push
sub
mov
scas
iret
adc
jnp
aad
adc
in
add
sbb
test
fs
mov
sub
xor
and
rcr
inc
stc
call
hlt
int
(bad)
call
out
jecxz
mov
into
inc
lods
xchg
xlat
mov
cmc
sub
mov
push
jecxz
fucomp
xlat
push
icebp
push
hlt
mov
in
and
lock
dec
aaa
or
adc
adc
aaa
cmc
push
sbb
fwait
sbb
sti
stos
cld
xor
repnz
mov
and
jbe
jnp
mov
jno
inc
mov
sti
add
sub
test
popf
loop
mov
sub
cdq
test
daa
xor
in
dec
push
aad
mov
sbb
mov
dec
jne
cmp
adc
(bad)
das
in
mov
pusha
rcl
lods
dec
jg
xlat
push
mov
stos
(bad)
xchg
adc
(bad)
pop
rcl
fldenv
xchg
or
nop
mov
sar
or
mov
sti
lods
jmp
push
inc
inc
cs
out
push
cmps
xchg
adc
hlt
cmc
stos
lods
(bad)
sub
jge
lock
and
shr
jecxz
pop
dec
pop
push
test
shl
dec
dec
pushf
pop
inc
add
pushf
sar
sbb
xor
icebp
xchg
sub
mov
sar
pop
(bad)
push
cmp
aam
outs
sub
jmp
sbb
add
sub
loope
lock
mov
cs
fst
push
jmp
jno
addr16
cmc
jmp
test
mov
fisttp
enter
in
mov
jb
(bad)
fs
push
outs
mov
sub
bound
mov
pop
mov
cdq
mov
into
dec
push
add
rcr
call
scas
sti
mov
push
adc
mov
out
mov
jg
dec
rcl
je
into
nop
sti
(bad)
cmps
xor
loope
hlt
retf
dec
mov
push
stc
inc
aad
mov
inc
jg
shl
mov
jmp
daa
daa
xchg
mov
loope
repnz
mov
sbb
push
movs
and
jns
xchg
pop
mov
sub
pop
xor
ins
nop
inc
xor
cmp
cmp
adc
xor
arpl
xor
lahf
into
icebp
xchg
fcmovbe
cwde
mov
std
cld
cmps
dec
and
dec
push
aam
shr
add
pop
mov
xlat
mov
sbb
pop
dec
jmp
mov
jmp
std
(bad)
lods
xchg
dec
adc
frstor
rol
lea
out
enter
pusha
pop
dec
jnp
jle
xor
adc
ror
dec
xchg
out
dec
pop
rol
clc
nop
outs
mov
aam
mov
test
int
push
jae
test
call
mov
cdq
mov
(bad)
xchg
dec
pushf
repnz
nop
jl
(bad)
adc
fidiv
aam
neg
ss
dec
outs
pop
cmc
jl
fs
and
push
imul
mov
and
imul
pop
repz
mov
xor
adc
jg
mov
mov
inc
mov
popf
inc
out
int3
dec
jnp
add
das
inc
aad
mov
mov
fmul
pop
cmp
int
or
jecxz
sbb
gs
jne
cmc
xor
mov
fmul
(bad)
push
jge
icebp
outs
loope
mov
inc
xchg
sub
outs
xchg
repnz
sub
stos
out
xchg
xlat
aam
test
ror
daa
movzx
push
pop
movs
loope
jno
aas
ds
std
ds
jo
test
or
mov
xor
or
sbb
arpl
sbb
xor
jne
lahf
pop
jo
sub
mov
mov
mov
adc
pop
jne
das
sbb
jae
or
cmc
sahf
cmp
mov
das
push
out
pop
fwait
adc
pop
adc
repz
cmc
ret
ret
sub
add
inc
and
test
sub
xor
xchg
jmp
adc
add
mov
adc
and
stc
pop
mov
sbb
lock
nop
dec
ins
int
lods
cdq
lds
dec
pop
mov
add
mov
mov
aam
es
cli
push
lock
xchg
sti
xchg
dec
imul
idiv
jb
dec
in
xor
mov
mov
call
cwde
push
cli
int
scas
sub
xor
fsub
ficom
mov
(bad)
pop
lock
int3
mov
mov
sahf
inc
mov
shl
fidivr
ins
mov
retf
xchg
adc
mov
inc
inc
ja
mov
stc
inc
ss
dec
mov
mov
mov
adc
cmp
push
mov
jno
xchg
pop
fistp
or
in
mov
xor
sbb
imul
jns
jae
mov
inc
js
mov
test
fadd
pop
mov
sub
push
fwait
mov
mov
xchg
imul
cmp
mov
adc
inc
and
out
stos
in
mov
dec
adc
and
arpl
js
dec
stos
mov
daa
test
daa
fld
jmp
inc
adc
inc
xor
xor
ror
pop
in
adc
in
pop
push
js
cmps
(bad)
xchg
inc
jecxz
mov
mov
mov
and
mov
dec
je
and
in
mov
cmp
call
dec
xchg
shl
add
jge
stos
sbb
cmp
cmp
sub
mov
retf
idiv
test
pop
pop
jp
pop
sar
ficomp
push
adc
cmp
push
add
in
repnz
fs
xor
bound
xor
or
adc
jmp
mov
test
xor
icebp
or
xchg
cmp
enter
pop
enter
mov
std
movs
outs
pusha
mov
or
adc
test
jmp
hlt
xchg
cmc
stc
jbe
hlt
add
push
push
mov
pop
popa
add
cmc
in
aas
cdq
out
icebp
fs
ds
test
sbb
aaa
mov
aas
bound
gs
push
int
inc
mov
push
pop
cmp
xor
push
fadd
add
arpl
aaa
cwde
rol
sti
retf
inc
retf
(bad)
mov
inc
popf
mov
sub
es
inc
jbe
xchg
in
jmp
int
pop
xchg
jl
pop
sub
mov
xlat
mov
movs
daa
pushf
pop
push
add
sub
xlat
push
pop
es
pop
pusha
sub
loop
inc
jbe
test
sub
xlat
lds
aam
(bad)
mov
inc
aad
push
push
xchg
xor
mov
call
mov
pop
or
push
popa
lods
imul
jae
jp
fwait
aas
xor
add
repnz
retf
retf
fs
push
ror
mov
sbb
sbb
pand
mov
jp
push
loopne
lds
scas
rol
sub
inc
sub
fsubr
mov
sbb
(bad)
push
aam
jbe
mov
cmc
dec
mov
cmps
sbb
fistp
outs
sbb
xchg
xchg
and
sbb
or
mov
jg
popa
test
push
les
dec
mov
add
je
push
pop
sar
xlat
add
sub
aad
adc
push
test
je
jno
cmp
cmp
adc
call
xchg
outs
(bad)
jb
out
xchg
fiadd
ins
test
or
mov
sbb
xor
push
loope
mov
sbb
aaa
jle
and
cmp
xor
neg
in
add
ins
addr16
retf
out
in
push
xor
lds
loop
push
adc
xor
fcmovne
(bad)
into
add
inc
cli
stc
sub
add
mov
pop
shl
mov
gs
mov
mov
push
test
or
shl
call
push
sbb
out
neg
or
inc
test
scas
xor
sbb
dec
bound
out
jecxz
xor
fadd
das
test
imul
sbb
rcl
xor
fs
into
loope
ret
dec
int
push
daa
daa
mov
ret
test
and
mov
ret
sbb
hlt
test
arpl
leave
cmp
mov
dec
xchg
(bad)
aam
hlt
loopne
in
push
mov
aas
or
xchg
xchg
push
repnz
cdq
lds
or
mov
retf
stos
stos
fwait
ins
popa
out
scas
mov
enter
add
cwde
xor
push
xor
es
outs
aad
retf
mov
or
add
push
nop
push
outs
imul
mov
inc
fimul
mov
aad
mul
cmps
cmc
lods
movs
mov
xor
adc
out
and
and
(bad)
mov
mov
stc
repz
lahf
jge
mov
fimul
test
sub
retf
sbb
fmul
add
jle
jmp
into
daa
and
xor
imul
add
xor
push
scas
das
std
or
pop
iret
cmps
shl
mov
adc
fistp
add
jge
out
aas
inc
and
inc
adc
mov
sbb
fs
sbb
mov
push
out
ret
dec
out
pop
add
xchg
retf
fild
fstp
es
aam
(bad)
and
and
push
test
retf
test
pop
xchg
or
fmul
pop
xchg
add
daa
inc
inc
jbe
es
cmp
pop
mov
aas
mov
int3
jno
add
aad
adc
int3
inc
adc
std
imul
jge
inc
xchg
mov
dec
jmp
sbb
push
jnp
cwde
jg
mov
cdq
and
and
out
jle
jae
in
jmp
and
dec
cli
dec
jl
outs
dec
pop
jbe
xor
call
test
mov
movs
mov
jnp
arpl
sbb
push
jmp
push
cmp
in
xchg
sbb
in
jl
aaa
in
scas
retf
pushf
lods
or
dec
fadd
mov
std
push
mov
stos
inc
mov
mov
shr
hlt
push
xlat
and
lods
(bad)
icebp
and
rcl
jmp
push
in
or
mov
scas
jmp
lods
shr
fcmovu
ins
sub
add
push
xchg
mov
add
fbld
mov
pop
dec
gs
push
scas
push
sbb
movs
pop
outs
test
les
xor
aam
add
push
enter
xlat
retf
push
mov
push
jl
dec
shl
dec
and
test
repnz
jp
pop
jge
enter
pop
lahf
mov
ret
push
push
pop
fcom
and
pop
adc
pop
xchg
mov
xor
repz
dec
xor
or
iret
push
sub
imul
pop
or
or
add
adc
(bad)
jno
in
mov
idiv
cs
jb
repz
adc
xor
adc
inc
outs
(bad)
dec
mov
mov
sbb
or
xor
daa
leave
bound
mov
jns
dec
test
inc
aad
imul
adc
dec
fmul
xchg
mov
mov
sbb
cli
into
add
pop
push
add
cmp
into
cmp
xchg
xor
nop
in
rol
mov
int3
cmps
sub
add
jns
out
pop
cmps
or
cmp
jbe
sub
mov
push
jno
es
sti
adc
fadd
dec
sahf
lock
ja
enter
xor
into
xchg
int3
iret
sub
clc
sub
fstp
cmp
outs
sar
outs
jne
mov
add
loop
jae
push
loope
les
push
mov
push
xchg
mov
mov
les
adc
and
cmp
pop
or
and
jno
enter
adc
rol
fidiv
fwait
or
jecxz
cli
mov
rol
es
outs
pusha
pushf
jmp
jns
jo
mov
adc
dec
fwait
ja
in
pop
cmps
gs
cmps
lods
(bad)
mov
cmp
lock
aaa
into
sbb
push
ret
not
pop
je
sbb
call
xchg
ds
inc
lock
dec
or
mov
das
xchg
xchg
sub
test
div
sbb
mov
xchg
adc
aas
cmc
sahf
std
cmp
(bad)
sahf
jmp
xchg
inc
jmp
mov
mov
add
mov
lods
enter
add
imul
or
int
or
repnz
and
inc
jg
fdivr
rcr
scas
imul
imul
mov
ret
jmp
and
ja
push
mov
test
mov
(bad)
fist
sahf
stc
push
inc
test
and
lods
mov
rcl
mov
ret
mov
int
jl
mov
mov
fiadd
xor
xor
sbb
sub
fisubr
rol
mov
(bad)
fstp
and
xchg
mov
(bad)
pushf
imul
js
xchg
or
jg
mov
pop
test
sub
pusha
jecxz
int
movs
pop
scas
popf
mov
push
pop
loope
call
add
and
popa
sbb
xor
int3
popa
push
push
and
sbb
data16
mov
popa
xor
nop
pop
arpl
mov
das
mov
inc
ja
pop
mov
or
mov
push
stos
rcr
gs
add
fxch
adc
and
cwde
cwde
add
xchg
bound
mov
sub
mov
cdq
xchg
and
scas
xchg
leave
sub
daa
or
sbb
cmp
add
das
jmp
inc
push
mov
call
repnz
in
inc
(bad)
push
jge
out
cmp
pop
push
or
les
inc
aas
pushf
inc
daa
dec
int
add
mov
cmp
add
ds
add
(bad)
and
cmps
mov
(bad)
dec
jb
sbb
jmp
sub
nop
and
push
mov
sub
jge
jp
or
pop
aam
aam
push
jne
sbb
cmp
jmp
sbb
cmps
xchg
add
jb
xchg
aaa
add
daa
(bad)
imul
ins
add
lahf
xor
call
xchg
aad
sbb
sbb
inc
pop
rcl
jbe
xor
popf
dec
mov
mov
sbb
xchg
in
cmps
retf
or
lds
xor
shl
mov
mov
mov
jl
inc
pop
in
xchg
xor
mov
mov
loop
jge
adc
mov
fwait
(bad)
test
lahf
mov
jmp
xchg
hlt
push
les
lods
call
daa
pop
push
inc
retf
cs
dec
leave
int3
push
cmp
retf
gs
ficomp
scas
mov
dec
ficomp
pop
(bad)
adc
jnp
jmp
pop
xchg
push
into
dec
fild
cmp
add
clc
repz
inc
movs
mov
xor
push
aas
std
(bad)
cmp
inc
add
es
or
shl
pop
rcl
loopne
mov
sti
inc
inc
fwait
push
inc
xor
adc
cld
cmps
dec
inc
cmp
sbb
cmps
adc
xor
mov
in
pop
jb
mov
mov
lods
or
dec
cmp
imul
mov
cli
xchg
pop
(bad)
jae
sbb
iret
outs
ffree
pop
adc
inc
ret
dec
adc
test
clc
rol
xchg
(bad)
xor
bound
push
jnp
addr16
or
mov
mov
movs
das
out
adc
imul
imul
in
sti
lock
shl
leave
out
push
cmp
push
push
cmp
pop
(bad)
sub
mov
out
mov
push
repz
repnz
sub
mov
inc
jmp
adc
mov
test
sub
sub
or
pop
jmp
push
jg
stc
bound
jmp
pop
test
jo
shr
jmp
pop
ret
(bad)
push
xchg
inc
imul
inc
adc
scas
sub
sar
call
and
fisub
js
sub
dec
call
(bad)
ret
jo
leave
les
pop
cmc
mov
or
outs
mov
pop
scas
out
push
adc
rcr
icebp
enter
out
mov
mov
femms
daa
outs
shr
pop
(bad)
jmp
aaa
cmp
and
push
aam
mov
stos
pop
pop
sub
mov
in
fisttp
adc
movs
(bad)
pushf
int3
push
adc
fcmovnbe
mov
mov
pop
xlat
dec
bound
call
or
and
jg
sbb
fsubr
push
push
inc
fst
jmp
xor
arpl
test
hlt
int
mov
push
adc
push
cmp
std
jbe
add
sahf
mov
push
pop
ja
aad
add
adc
pshufw
inc
icebp
stos
enter
xor
mov
loop
add
or
repnz
adc
inc
xor
push
(bad)
(bad)
jp
push
inc
sbb
pusha
in
and
sub
xor
idiv
fucomip
and
out
hlt
movs
xchg
hlt
sbb
cmp
imul
mov
and
test
pop
pusha
cmps
adc
jne
sub
dec
push
fsubp
xchg
jp
out
in
in
div
or
pop
xor
push
dec
xor
cmc
inc
test
mov
cmp
cmps
stos
mov
mov
mov
xchg
adc
cli
xchg
sar
aam
xlat
aas
adc
ret
and
xchg
jne
fidiv
sbb
xchg
pop
pop
xor
popa
push
xor
call
push
cmp
and
and
arpl
ins
or
sbb
pop
shr
shr
cmc
int3
jno
mov
call
leave
mov
xchg
ret
add
pop
xor
out
and
jno
out
out
in
xor
push
mov
mov
or
stos
cmp
nop
movs
or
dec
clc
or
hlt
cs
sbb
push
aas
sbb
scas
push
sar
pop
loopne
jo
mov
in
rep
add
sub
push
pop
inc
fcmovnb
inc
inc
adc
out
push
ins
nop
test
or
stos
data16
aaa
cmp
aam
jge
retf
repz
adc
ficomp
mov
sbb
repz
inc
sbb
mov
jmp
sub
push
jbe
mov
xchg
fild
arpl
ficomp
fcomp
mov
les
pop
push
pop
jbe
out
push
pop
xlat
xchg
div
push
xchg
lea
lea
mov
or
mov
xchg
stos
jl
xchg
add
xor
pushf
add
jmp
push
mov
(bad)
or
adc
out
inc
dec
retf
inc
push
jge
mov
mov
xchg
jne
std
cld
or
jg
mov
mov
xlat
cmp
mov
call
(bad)
jecxz
push
and
adc
mov
les
mov
mov
lds
movs
test
cmp
cmp
inc
jecxz
jns
pop
pop
or
jo
pop
ja
and
pop
lea
jb
jne
jecxz
mov
test
xlat
cmc
out
dec
mov
add
mov
aam
xchg
cdq
fldcw
rol
pop
out
out
fiadd
xlat
dec
cmp
int3
in
popf
adc
fs
sbb
lods
(bad)
push
pop
out
cmp
(bad)
(bad)
push
enter
fxch
sbb
cdq
inc
loope
mov
mov
js
shl
or
pusha
push
cdq
into
lahf
int3
pop
pop
sub
sbb
(bad)
add
cmp
push
xor
dec
retf
repnz
outs
dec
xor
into
sub
test
ss
ins
push
fdivr
ret
call
jl
div
(bad)
addr16
sub
fidivr
and
xchg
dec
fs
mov
push
mov
das
sar
aas
or
nop
in
sub
cli
imul
push
(bad)
mov
dec
out
fistp
fstp
fucom
mov
ds
rcr
push
add
lock
arpl
or
inc
ror
push
dec
fistp
jbe
lods
in
aad
jp
sbb
(bad)
mov
das
scas
mov
mov
jle
inc
cwde
ret
enter
arpl
dec
sbb
adc
sub
jbe
xchg
in
and
mov
pop
sahf
mov
jns
mov
pop
sub
loopne
and
dec
cdq
aad
lods
xchg
mov
sbb
dec
push
add
jge
mov
sbb
jmp
adc
dec
addr16
into
pop
push
icebp
mov
mov
fwait
int
lahf
push
repnz
mov
ins
inc
cs
and
mov
jmp
mov
add
enter
push
mov
add
mov
add
sub
sbb
movs
pop
(bad)
xchg
jno
jmp
sbb
outs
inc
in
adc
mov
lods
repnz
dec
and
movs
ins
sub
adc
cmp
daa
lods
repnz
push
push
loopne
scas
push
or
iret
outs
xchg
push
scas
repz
pop
mov
mov
dec
xor
mov
imul
dec
push
repnz
xchg
cld
inc
push
int
enter
hlt
mov
(bad)
fdiv
sub
out
fldcw
adc
ret
mov
and
in
dec
sub
call
jo
aad
mov
lods
aaa
pop
fwait
out
jmp
ret
jecxz
stos
scas
lods
xor
fs
mov
xchg
or
(bad)
adc
xor
daa
retf
nop
xchg
inc
shr
adc
std
and
pop
jnp
and
movs
je
je
xchg
sar
push
mov
jbe
jl
dec
ret
xchg
std
cmp
push
pusha
outs
jne
loope
lahf
mov
fld
xor
add
or
pop
adc
xchg
xor
xor
or
mov
xchg
outs
add
rcr
sbb
clc
aam
mov
aas
movs
jmp
lods
lahf
in
dec
bswap
pop
iret
push
and
mov
mov
or
mov
mov
dec
sbb
push
inc
and
pop
jmp
add
add
outs
in
pop
cdq
dec
xchg
and
es
mov
je
adc
mov
cdq
xchg
popf
fs
or
aas
rcl
jb
pop
push
outs
push
clc
scas
sub
out
shr
jp
mov
push
jmp
or
pop
leave
dec
or
pop
mov
push
mov
mov
retf
js
add
cmp
rcr
jbe
retf
popa
pop
and
jne
xlat
cld
pusha
icebp
push
cmp
mov
into
imul
ret
cli
iret
xchg
sub
xor
mov
mov
sub
and
icebp
fisub
inc
or
sahf
xchg
add
pop
jnp
out
in
int3
ret
pop
outs
xor
push
in
xchg
xchg
es
xchg
mov
sbb
loopne
and
int3
cmp
add
push
xchg
pop
int3
out
data16
fdivr
(bad)
cld
cmp
shl
imul
add
jo
test
pop
adc
sub
mov
sbb
push
imul
call
or
popa
setge
push
pushf
loopne
adc
add
jmp
xchg
pop
inc
sbb
mov
cmp
adc
lea
dec
jne
and
aad
repnz
ins
jo
xchg
push
mov
hlt
cmp
sbb
jl
ins
mov
sbb
sbb
xchg
and
lods
clc
test
mov
add
fbld
out
in
add
les
mov
or
inc
dec
sbb
(bad)
dec
dec
iret
outs
out
movs
push
retf
mov
call
xlat
int
dec
pop
int3
sbb
fdivr
and
sub
jo
in
shl
mov
xor
dec
or
hlt
aas
mov
dec
xor
popa
mov
mov
inc
and
repz
dec
cwde
jae
stc
and
and
mov
jnp
pop
dec
(bad)
mov
add
mov
out
mov
out
ins
xor
mov
or
sti
xor
shl
aaa
(bad)
sub
dec
ss
jbe
(bad)
fdiv
(bad)
push
sbb
call
jl
sbb
mov
adc
jp
cmp
shl
add
mov
and
sub
gs
mov
dec
(bad)
hlt
loopne
dec
cwde
shl
add
dec
js
shl
clc
jge
movs
dec
call
pop
adc
cmp
push
imul
inc
push
dec
xor
test
test
mov
push
sbb
mov
jle
and
xchg
out
fadd
cld
pop
sub
lea
push
dec
sti
add
mov
out
pop
and
adc
jb
dec
imul
pop
sbb
mov
mov
mov
sbb
rep
add
push
xchg
daa
sub
mov
sti
xor
nop
lods
inc
aaa
mov
sbb
pushf
in
xchg
cmp
shr
lock
pushf
in
jl
jmp
mov
sar
adc
cmps
push
sub
sbb
pop
mov
xor
mov
mov
ja
lds
mov
jecxz
cmp
mov
sbb
jmp
inc
cs
adc
add
les
adc
(bad)
dec
sbb
js
inc
xchg
repz
xor
ret
xlat
cmp
std
xlat
(bad)
aad
mov
std
pop
xchg
int3
ins
fmul
add
adc
test
ins
sub
test
loopne
in
push
xor
pusha
sbb
(bad)
sub
fs
pushf
cmps
and
ret
call
cmps
xlat
pop
mov
adc
hlt
call
sub
dec
pop
sbb
mov
imul
xchg
fidiv
and
popf
inc
xor
fdivr
test
xchg
bound
jnp
sbb
add
sbb
test
inc
jae
xchg
add
mov
iret
or
jg
xchg
mov
adc
stos
mov
fisubr
(bad)
pop
adc
mov
(bad)
sbb
cmp
in
mov
mov
data16
je
cwde
aaa
push
int
fstp
lock
or
das
xor
cmp
and
aas
jg
clc
clc
ins
pop
lods
sbb
sub
sbb
mov
inc
stos
xchg
cmp
jmp
mov
inc
jae
inc
test
fsub
cli
(bad)
and
(bad)
retf
push
call
and
mov
dec
int3
add
mov
xchg
pop
outs
ret
mov
lea
(bad)
push
lods
jo
push
(bad)
mov
xor
adc
(bad)
fmul
out
mov
dec
enter
jecxz
idiv
mov
inc
mov
jno
scas
and
sbb
(bad)
stos
repz
sbb
jb
inc
and
inc
aam
cmp
sub
jne
fwait
das
adc
push
push
dec
cs
mov
add
sbb
test
add
push
mov
scas
xchg
or
xlat
test
push
mov
clc
jl
sbb
bound
outs
mov
push
mov
cmp
mov
jmp
rol
jp
ret
stos
loopne
dec
sub
jnp
mov
and
lock
push
repz
fld
push
cwde
pop
dec
inc
shl
pusha
jb
jp
test
sub
jmp
adc
fist
jmp
leave
fidiv
call
jmp
mov
xchg
push
sub
addr16
ins
fsubr
xchg
xchg
jg
int3
xchg
sahf
cmp
push
cmps
push
neg
cs
mov
ins
ins
xchg
jmp
cmc
fwait
pop
pushf
stc
ret
sbb
jle
cmp
popf
popa
cmp
dec
mov
jnp
inc
dec
and
inc
mov
dec
inc
jp
enter
mov
add
add
xchg
mov
inc
out
cld
xchg
cmc
cmp
xor
or
inc
dec
pop
int3
mov
test
sub
ins
shl
add
push
cmp
(bad)
mov
dec
or
xor
cmc
push
add
fcom
aas
repnz
(bad)
dec
cli
sub
sub
stos
in
rol
aad
adc
add
and
movs
inc
ret
mov
cmps
fwait
xor
push
jne
pop
adc
ja
(bad)
pop
shl
add
cmp
xor
fmul
mov
xchg
mov
adc
stos
mov
ret
jb
jmp
fwait
leave
jmp
(bad)
pop
add
mov
pop
repz
shl
shr
aas
mov
dec
adc
in
mov
arpl
mov
xchg
cdq
mov
in
in
repz
retf
scas
push
(bad)
shl
hlt
out
add
mov
jl
pop
pusha
mov
gs
dec
mov
cld
dec
jo
or
mov
add
out
cmp
add
es
cmc
(bad)
arpl
and
stos
sub
mov
or
and
(bad)
mov
adc
cmp
mov
xchg
das
imul
xchg
loop
inc
stos
fnsave
and
dec
dec
jle
int3
les
push
add
adc
mov
adc
push
and
or
dec
loopne
dec
or
adc
lahf
lods
test
movs
jmp
out
test
out
pop
stos
dec
sbb
add
pop
popa
test
mov
or
icebp
ret
inc
push
nop
lock
cmps
mov
cmps
xor
shl
test
rcr
fld
mov
addr16
pusha
mov
out
aam
jecxz
sbb
mov
push
rcr
ja
or
and
push
rcr
xchg
mov
test
mov
mov
jg
cli
(bad)
in
pusha
inc
(bad)
jb
push
imul
inc
push
inc
lds
leave
aas
js
lds
sar
sbb
dec
or
daa
cwde
jmp
(bad)
mov
shl
add
fdivr
mul
and
jmp
icebp
inc
dec
cmp
jo
mov
les
push
pop
mov
test
mov
retf
bound
jmp
xchg
imul
cmp
out
xor
popf
xchg
pusha
cmps
mov
icebp
std
dec
jg
dec
sahf
add
dec
xor
rol
mov
scas
xlat
push
cmp
fadd
sub
test
out
fisubr
jge
adc
mov
xor
mov
sub
inc
leave
mov
out
sub
add
xchg
fimul
jp
add
lock
adc
xor
sbb
inc
nop
movs
in
dec
push
sbb
call
call
mov
adc
xor
push
scas
cmc
xchg
(bad)
fnstsw
lods
xor
ret
in
mov
pop
sub
mov
psrad
imul
loope
ins
cmp
or
xor
and
rcr
jg
or
cld
mov
jle
inc
ja
jl
mov
movs
lods
jmp
xchg
xchg
mov
inc
nop
test
ror
pop
xlat
int3
or
out
cmps
(bad)
int3
je
cld
mov
arpl
sar
lahf
mov
out
out
lahf
jae
scas
gs
ja
adc
and
jbe
mov
pusha
stc
dec
test
scas
jge
cmp
and
mov
stc
je
pop
imul
int3
jp
add
jp
lds
cmps
aas
and
cmp
mov
jl
xchg
sar
aad
(bad)
push
enter
inc
jp
inc
pop
inc
ret
xor
mov
mov
fcomip
pushf
sbb
push
clc
jo
jmp
pop
and
arpl
and
xchg
push
ins
sbb
out
sub
xchg
enter
ins
(bad)
rol
(bad)
dec
(bad)
scas
mov
mov
jecxz
jno
mov
(bad)
xor
fucomi
adc
lods
into
fldz
cmp
aas
es
mov
jno
jae
sub
in
push
adc
fld
sub
nop
test
xchg
idiv
and
std
int
shl
pop
out
add
test
retf
sub
push
xor
mov
jecxz
sti
add
xchg
enter
into
dec
xor
fisttp
das
add
int
out
rol
ins
repz
std
outs
jb
pushf
sar
xchg
lahf
aad
ins
in
mov
cdq
pop
xlat
loopne
pop
test
shr
fidiv
ficom
mov
push
dec
cmp
ret
bound
test
fistp
divps
out
(bad)
fild
fs
or
inc
pop
push
sub
inc
js
iret
jge
outs
cmps
fstp
imul
add
jecxz
fstp
pusha
(bad)
aam
mov
(bad)
cmp
lahf
jmp
xchg
stos
nop
in
xchg
jno
pusha
adc
retf
loop
add
xor
(bad)
enter
ins
jbe
retf
icebp
fist
ficom
icebp
jp
lods
jle
mov
ret
mov
mov
or
jge
adc
sahf
cmps
(bad)
outs
inc
mov
and
mov
xor
das
ror
push
inc
jecxz
test
and
stos
arpl
clc
in
xlat
add
aam
pop
retf
ret
jmp
or
jno
add
imul
into
ss
repnz
lds
cmp
adc
push
cmp
or
fstp
es
popf
mov
cwde
lods
mov
out
push
inc
push
xchg
add
adc
or
sbb
jl
push
adc
outs
lds
loopne
aam
scas
push
dec
stos
pop
mov
push
or
mov
(bad)
mov
jbe
cli
inc
jns
repnz
inc
xchg
movs
jl
scas
mov
xor
add
pop
daa
inc
stos
cmps
sar
test
inc
retf
bound
fbstp
fisub
ret
ror
push
clc
imul
jl
mov
xchg
ret
and
inc
dec
sbb
cs
xor
cli
inc
or
pop
add
cmps
jne
pop
hlt
pop
sbb
lock
pop
xchg
inc
jmp
cmp
dec
jbe
xor
fist
jne
push
test
push
retf
adc
sub
jno
aad
pop
mov
sbb
mov
test
pop
rcr
pop
sub
das
sbb
add
fmul
(bad)
movs
mov
jno
or
mov
add
test
mov
cld
jl
leave
aad
pop
out
dec
inc
jnp
aam
jb
adc
les
das
sub
mov
jge
xor
ins
lds
mov
sbb
xor
cmc
call
mov
std
push
popf
push
xchg
xchg
mov
or
cli
scas
out
imul
inc
mov
cmpps
ret
pop
or
jmp
sub
aam
(bad)
cld
aaa
or
or
xchg
add
push
lahf
lock
inc
and
mov
in
shr
popf
xchg
inc
loopne
pushf
mov
jl
sbb
into
arpl
out
lock
test
addr16
xchg
or
stos
xchg
xchg
dec
push
jecxz
aam
mov
push
stc
add
sahf
leave
es
and
je
push
pop
out
bound
std
ror
push
sti
test
mov
fld
(bad)
sub
icebp
lds
xchg
sub
outs
addr16
pop
inc
pop
es
lds
push
add
sub
or
jmp
adc
inc
loopne
adc
add
cmp
fs
stos
add
cmp
enter
mov
test
dec
sbb
ins
xchg
jmp
jo
fldlg2
xchg
adc
dec
fld
addr16
cmp
std
popa
pop
push
pop
imul
xor
ins
push
mov
mov
inc
or
mov
dec
in
test
adc
test
rcl
shl
jl
popf
mov
fsub
mov
mov
imul
stos
cmp
(bad)
pusha
out
out
jb
test
xchg
gs
ret
iret
repnz
idiv
sti
mov
and
cdq
pop
ds
mov
xchg
scas
call
jle
pop
dec
sub
push
lock
clc
jmp
cmp
inc
inc
(bad)
int
out
mov
test
xor
mov
int3
or
into
jbe
(bad)
aas
pop
mov
xor
lock
mov
xlat
dec
jmp
jnp
sbb
mov
pop
ret
out
sbb
movs
out
adc
sahf
fisubr
sti
out
fistp
cmp
push
mov
sbb
or
int
lods
sub
sbb
xor
mov
sub
std
jle
dec
mov
push
sbb
ret
add
repnz
loop
scas
jp
xor
cmp
mov
hlt
cwde
xchg
jle
cdq
scas
rol
dec
cdq
je
jecxz
(bad)
xchg
pop
mov
cmps
pushf
xor
jp
fs
lock
sbb
loopne
mov
cmps
(bad)
push
push
dec
mov
or
stc
(bad)
lods
outs
adc
cmp
nop
repnz
ficomp
(bad)
int3
xchg
jb
inc
and
pop
mov
cmp
sbb
inc
mov
les
(bad)
(bad)
fst
adc
xchg
inc
adc
outs
mov
adc
sub
xor
inc
adc
push
(bad)
rcl
bnd
mov
jmp
in
xchg
and
fistp
xor
fs
xchg
cmp
push
stos
sbb
pop
adc
pop
lock
shr
or
into
push
sbb
mov
cwde
outs
xchg
dec
or
cld
jo
ret
sti
bound
push
movs
jmp
pop
push
das
sbb
xor
cmp
xchg
mov
cmps
hlt
xor
mov
retf
shl
jecxz
jne
shl
mov
xor
imul
call
ins
test
cmp
sub
pop
and
sub
mov
xor
mov
lods
aad
pop
xchg
mov
idiv
nop
pop
add
mov
push
inc
mov
loopne
jnp
cmp
std
pop
(bad)
sar
test
inc
aad
test
dec
lds
aaa
mov
in
add
pusha
and
rol
stc
and
sub
push
xchg
popa
in
retf
nop
ret
icebp
cmp
std
cdq
cs
fld
jmp
sub
cli
xor
call
imul
mov
lds
push
add
test
cwde
out
add
fst
in
xchg
mov
mov
imul
jmp
loope
pop
retf
mov
outs
xor
adc
iret
pop
outs
xchg
dec
fs
scas
and
(bad)
jmp
dec
in
xchg
sar
and
jmp
mov
call
loopne
lods
and
mov
push
pop
dec
fs
jo
adc
loope
inc
sbb
mov
je
and
jno
push
cmp
cmc
cmp
outs
movs
mov
js
(bad)
retf
aam
dec
rol
outs
and
int
dec
ret
rcl
mov
dec
push
mov
ins
mov
ficom
leave
mov
lods
xchg
into
fldenv
push
ret
sub
dec
cmp
fld
pop
ins
test
adc
mov
lods
sbb
or
pop
int
inc
into
int
rcr
jne
loop
(bad)
fisttp
arpl
adc
shl
stos
xchg
ret
nop
pop
into
rol
adc
call
fs
repnz
dec
and
pop
cld
int3
jecxz
push
pop
sub
xor
dec
and
and
inc
mov
jb
push
jno
inc
cmp
int3
scas
pop
push
xchg
(bad)
test
sub
stc
xor
mov
iret
out
sub
aad
shl
jl
push
arpl
xor
cmp
jp
pop
pushf
out
inc
add
push
(bad)
dec
inc
out
mov
in
sar
cmp
add
into
pop
add
sbb
and
cli
sub
adc
add
and
sbb
cmps
jne
adc
adc
sbb
clc
mov
cmc
shl
shr
in
mov
jg
jae
cmp
inc
loop
sub
cs
repz
cmps
pop
daa
or
xor
mov
jb
loopne
js
out
rcr
sahf
push
out
fwait
outs
mov
add
(bad)
push
xor
(bad)
add
xchg
xchg
push
push
ja
test
sbb
push
aaa
add
or
enter
into
js
sub
call
stc
call
xchg
cmp
pop
xchg
dec
pop
aam
cmp
loop
cld
cmp
mov
pop
out
cmps
jno
in
jnp
mov
dec
sbb
sti
in
jbe
mov
loop
mov
nop
mov
(bad)
xchg
sbb
mov
mov
lea
or
cmp
stos
or
stos
popf
in
sub
out
test
push
adc
jg
xchg
adc
push
add
les
mov
jge
adc
lea
dec
inc
cmps
pusha
push
repz
and
stos
lea
jl
mov
sub
loope
pcmpgtd
retf
stc
outs
xor
add
data16
cmc
test
jg
adc
jne
daa
(bad)
cmp
fsubr
lahf
adc
out
mov
lock
xchg
add
scas
and
pushf
jbe
xor
sbb
ss
xchg
jmp
gs
sbb
fist
xchg
(bad)
in
in
out
sub
xchg
and
add
mov
sbb
fwait
loope
jbe
pusha
pop
loopne
sahf
jmp
repz
mov
bound
xchg
or
mov
mov
xor
mov
sbb
into
mov
sti
adc
ror
shr
test
das
into
adc
(bad)
pop
push
or
lahf
repnz
cmp
scas
ja
cmp
lods
or
in
sbb
push
inc
or
enter
ret
ja
pop
leave
jo
xchg
jmp
add
dec
jo
imul
movs
lahf
into
lods
sub
push
add
and
std
outs
clc
(bad)
xchg
dec
adc
adc
aam
jg
cdq
cmp
stos
jno
or
ds
adc
loopne
ror
(bad)
pop
lods
jnp
aam
ret
xchg
addr16
std
imul
ins
inc
dec
cld
test
aam
addr16
mov
add
rcr
stos
jp
sub
cmp
sbb
mov
jp
mov
fistp
sbb
adc
xchg
pop
popa
call
test
add
or
and
jae
mov
repnz
dec
or
mov
mov
adc
mov
lea
aas
popa
and
sub
pop
cdq
and
bound
pop
cld
enter
add
(bad)
push
neg
fld
sub
adc
sub
repnz
stc
sub
mov
call
mul
or
sub
add
cdq
jecxz
inc
sub
xchg
daa
jns
shl
adc
lods
stos
push
dec
and
push
out
lea
jmp
push
sahf
adc
cmp
cli
or
or
out
(bad)
ja
mov
fld
les
fs
aas
pop
mov
jb
push
cdq
pop
scas
adc
xor
dec
jle
mov
pop
pop
mov
nop
pop
sub
fcom
jb
mov
fisttp
(bad)
in
lea
(bad)
shl
push
mov
sbb
test
xor
sti
call
out
inc
arpl
mov
cmps
enter
push
and
fwait
retf
data16
mov
out
push
je
aad
or
jmp
cmp
mul
nop
movs
test
mov
out
xchg
scas
sti
add
inc
pop
and
add
fimul
dec
sub
adc
or
cmps
int3
enter
mov
xor
pop
push
fbstp
xchg
mov
and
test
mov
xor
xchg
loopne
(bad)
jns
in
pop
or
pop
loop
sti
out
shr
sbb
aaa
(bad)
mov
pop
call
add
adc
call
jo
jmp
ins
in
xor
pusha
mov
popf
sub
mov
(bad)
ja
add
inc
fwait
jne
inc
repz
iret
and
cmp
movs
outs
cs
hlt
inc
pop
iret
loopne
inc
jb
ss
call
sub
add
sbb
dec
repz
sub
inc
inc
test
xlat
xor
or
cmps
in
ret
or
jb
push
hlt
dec
outs
sub
xor
mov
cmps
jno
mov
push
jno
lea
arpl
outs
inc
adc
mov
int3
stos
mov
inc
mov
push
into
lea
rcr
or
iret
jb
lahf
jp
jmp
shr
les
sbb
pop
mov
leave
sbb
adc
jmp
inc
add
outs
push
cmp
mov
mov
daa
inc
add
mov
rcr
pusha
pop
mov
inc
mov
or
push
add
call
push
push
sub
lds
pop
pop
js
sub
inc
sub
ret
inc
(bad)
retf
and
cmp
lods
shr
jae
popa
cmp
jne
loopne
push
out
xchg
mov
mov
xor
(bad)
xchg
mov
int
aam
cmc
retf
adc
jmp
xchg
addr16
mov
jae
add
xor
pop
retf
mov
xchg
shl
xor
mov
aam
or
pop
mov
adc
pop
mov
mov
movs
cdq
bnd
xchg
std
add
dec
mov
xor
or
(bad)
xchg
scas
(bad)
loop
inc
aad
ins
or
xchg
mov
fldcw
dec
add
sti
shl
adc
aam
ins
add
xchg
mov
push
adc
mov
stos
dec
cmp
sbb
add
int
push
ja
ins
xlat
repz
push
loope
lahf
mov
pop
pop
dec
test
push
aad
dec
lds
sbb
jns
jo
inc
test
jge
aad
retf
fcmovnbe
movs
ds
test
imul
ror
fbstp
pop
stos
push
jmp
inc
xchg
cld
inc
adc
push
xchg
or
mov
xbegin
cli
arpl
or
push
mov
mov
push
lds
add
je
jp
outs
adc
les
lea
mov
and
(bad)
leave
dec
shl
pusha
aaa
int3
out
cmps
push
xchg
adc
cmc
mov
in
arpl
jl
out
jle
xchg
adc
or
adc
ret
mov
push
cmp
inc
push
or
dec
fcom
ror
mov
pop
(bad)
mov
icebp
dec
rep
cmp
adc
mov
shl
gs
or
loope
(bad)
adc
stos
push
popf
or
out
mov
into
icebp
sbb
adc
cmp
cmps
xchg
cmps
adc
and
out
fild
(bad)
fimul
pop
mov
fisttp
push
int3
jmp
ret
xchg
lahf
pusha
cmp
imul
jb
sbb
push
jp
push
cmc
into
stc
xchg
call
jge
sub
lods
pop
push
ja
mov
adc
sub
fwait
mov
push
iret
cmp
xchg
jecxz
xchg
in
mov
mov
into
sub
std
retf
jp
mov
cmp
in
mov
mov
inc
(bad)
aad
dec
adc
jecxz
or
add
inc
mov
cmp
sbb
dec
mov
ins
inc
push
sar
xchg
das
sbb
push
les
test
sbb
mov
mov
push
pop
lea
sar
inc
test
add
(bad)
xor
push
imul
adc
cmp
(bad)
mov
push
mov
fnsave
adc
xor
sub
lahf
ins
in
sub
xchg
ss
dec
aad
sar
test
push
rcl
cld
outs
sbb
js
fs
cmp
fst
or
movs
scas
pop
pop
dec
mov
inc
std
or
push
and
pusha
scas
pop
sbb
jbe
mov
gs
sub
test
(bad)
(bad)
cli
add
dec
stos
dec
stos
or
xor
pop
adc
xchg
push
push
aaa
test
push
int
add
lods
xchg
jge
pop
mov
je
sbb
aam
sbb
cs
pop
fidiv
ret
sub
sahf
repnz
dec
add
and
mov
scas
pop
or
inc
test
mov
aas
push
stos
jno
push
fdiv
fst
add
ins
sub
push
mov
push
in
outs
mov
ret
cmp
push
lds
push
or
adc
add
push
mov
push
add
mov
push
out
mov
jnp
adc
push
mov
stos
inc
test
jle
pop
shl
repnz
into
or
stos
rol
jae
aad
xchg
mov
outs
sbb
daa
add
(bad)
inc
jb
inc
pop
add
scas
add
sub
cmc
pop
dec
pxor
mov
lods
inc
or
rcl
cli
dec
push
inc
cld
xchg
pop
(bad)
fcmovb
push
inc
xlat
jecxz
ds
pushf
int3
dec
scas
daa
shr
cld
loope
dec
jnp
sbb
or
repz
xchg
sti
cmp
inc
aad
pop
mov
adc
ret
adc
cs
add
lock
mov
jae
mov
and
add
add
inc
cmp
adc
(bad)
mov
repnz
jl
std
aas
test
rol
in
mov
mov
std
sub
int3
retf
mov
or
push
rcl
push
lods
dec
fst
loopne
mov
sub
retf
mov
mov
jecxz
cwde
pushf
add
sub
xchg
inc
addr16
(bad)
frndint
and
dec
jg
pop
add
add
fs
loopne
sub
mov
dec
fimul
ds
loop
xchg
call
iret
cmp
cdq
adc
ja
das
dec
iret
(bad)
jae
daa
inc
in
shr
hlt
repnz
inc
aam
xlat
test
js
cmp
das
mov
mov
in
test
repz
cmps
test
xchg
int
ins
or
aaa
jp
out
fiadd
add
adc
lods
inc
fild
mov
aaa
mov
fisubr
mov
sub
add
repz
mov
ds
cmp
test
mov
jo
lods
cmp
addr16
mov
je
pop
retf
jae
icebp
dec
out
add
aad
loop
mov
mov
dec
in
jns
inc
adc
pusha
xlat
loop
fsub
adc
pop
sub
imul
movs
or
add
pop
mov
dec
in
(bad)
out
or
imul
imul
inc
add
and
push
loop
cmp
(bad)
test
leave
mov
dec
movs
leave
adc
retf
test
inc
dec
inc
fidivr
sbb
sub
mov
mul
or
and
into
retf
mov
shr
test
ret
loope
push
mov
unpcklps
popf
fdivr
aad
push
cld
out
sbb
dec
in
shl
push
add
rol
jne
and
test
jmp
outs
mov
test
test
repnz
push
std
outs
ins
fmul
sub
xchg
sub
jmp
adc
add
dec
add
loop
mov
jmp
sbb
jmp
enter
scas
cmp
imul
dec
mov
jne
fidiv
xchg
fwait
lods
inc
stc
sbb
arpl
in
push
jl
lock
nop
daa
jbe
mov
push
adc
mov
loope
cmp
push
xchg
cdq
(bad)
jp
mov
sub
popa
jmp
mov
sub
xchg
sbb
imul
nop
pop
shr
mov
lahf
add
fidiv
inc
or
jne
fist
das
cmc
cmp
std
jg
div
jge
and
stos
aaa
mov
and
cwde
loopne
mov
cmp
add
fidiv
idiv
clc
jmp
jmp
fwait
jg
mov
lods
sbb
aad
sub
cli
int3
cmp
push
dec
jbe
mov
or
or
jno
sub
or
outs
bound
mov
cwde
fisub
mov
jo
es
scas
jns
int
adc
out
push
lods
jl
jbe
xchg
push
sahf
push
jnp
outs
(bad)
and
push
call
fisttp
mov
jne
in
add
push
(bad)
(bad)
dec
push
loop
sbb
imul
test
icebp
pop
inc
imul
sbb
add
add
sbb
inc
retf
mov
outs
call
(bad)
mov
jge
cmp
fld
and
lock
push
xchg
mov
test
sar
adc
pop
popf
test
push
shl
jae
inc
bound
sahf
fistp
(bad)
loopne
outs
push
fstp
jns
data16
jle
stos
sti
xor
pop
cld
jo
dec
mov
jnp
cli
add
test
sub
mov
xchg
fwait
(bad)
(bad)
stos
xchg
ret
pop
jle
bound
pop
dec
(bad)
cmp
inc
and
mov
sub
and
ja
push
imul
and
movs
dec
cmp
es
and
push
iret
jnp
fcom
mov
and
ror
sub
adc
dec
or
in
cmp
xchg
mov
pusha
push
push
inc
mov
mov
xor
adc
adc
jecxz
cmp
push
or
mov
adc
bound
sub
je
movs
popf
cmp
pop
adc
mov
cmp
movs
adc
aam
sti
nop
leave
out
pop
mov
(bad)
pop
mov
loop
mov
fwait
ret
loopne
test
fidiv
cld
inc
nop
in
sbb
xchg
cld
fabs
jb
out
ja
jns
push
or
inc
jl
push
out
daa
pop
in
std
fcmovnb
out
mov
adc
mov
and
cmps
test
add
(bad)
mov
sbb
je
sbb
or
sbb
jmp
(bad)
push
xchg
xchg
mov
xor
inc
hlt
retf
cwde
or
push
sub
jecxz
cmp
fistp
and
adc
sbb
call
xchg
(bad)
dec
in
popf
fld
es
dec
mov
ret
ins
mov
mov
stc
std
sub
or
sbb
cld
out
(bad)
aad
js
cmp
pop
sahf
repnz
movs
jg
sbb
pop
push
in
icebp
xchg
outs
loopne
push
and
daa
nop
shl
mov
outs
sbb
outs
div
pop
int
pop
adc
dec
in
pop
sbb
xor
inc
adc
in
cmps
mov
cmp
data16
mov
call
sbb
cld
push
hlt
imul
in
add
(bad)
jmp
test
sub
jns
imul
aaa
fld
adc
out
ss
jmp
sbb
outs
push
sub
jle
clc
and
xchg
enter
loop
adc
push
nop
inc
std
dec
into
mov
fwait
adc
mov
push
cmp
or
jp
fldl2e
and
push
inc
lods
mov
or
inc
xor
dec
shr
out
sti
gs
sbb
push
mov
fild
test
scas
pop
push
mov
stos
mov
(bad)
retf
mov
test
push
add
xchg
xchg
inc
mov
sbb
popf
push
push
leave
scas
pop
jecxz
movs
popf
dec
sbb
mov
cld
test
in
cmp
mov
out
add
mov
int
dec
nop
shl
out
ret
pop
mov
movs
les
inc
inc
jmp
pop
mov
cli
sar
inc
cmp
dec
movs
mov
push
mov
hlt
push
push
daa
mov
dec
imul
repnz
and
dec
inc
adc
cli
je
repnz
cmps
push
lds
pop
pop
loope
(bad)
sti
xchg
lods
cmps
stc
sar
bound
adc
cs
iret
dec
sbb
or
out
cmp
int
cmc
mov
hlt
push
imul
jp
daa
and
ss
jle
and
jo
loopne
hlt
mov
mov
inc
mov
rcl
out
jge
or
mov
aas
retf
pop
mov
mov
push
cmp
repnz
sbb
sbb
mov
adc
xchg
adc
ss
push
aaa
je
xor
sti
push
push
in
inc
pop
and
xlat
scas
in
xchg
hlt
fist
aaa
leave
pop
xlat
int3
ficomp
ror
lods
cld
push
mov
xor
mov
addr16
adc
sbb
dec
popa
push
jl
sbb
adc
imul
or
dec
push
imul
mov
fadd
sbb
call
mov
push
xor
adc
retf
int
push
dec
jecxz
or
pop
sbb
fisubr
adc
test
xrelease
xor
mov
pop
or
jbe
ficomp
js
and
gs
not
inc
push
stos
mov
adc
dec
pop
stos
jge
cmp
mov
push
(bad)
shl
mov
jnp
fs
pop
(bad)
mov
cmp
iret
fwait
mov
clc
xchg
sbb
or
cdq
lea
inc
xchg
sar
jbe
inc
jb
clc
in
push
les
mov
mov
loop
inc
jle
and
sub
arpl
pushf
(bad)
shr
dec
mov
xor
jno
cmp
sub
stos
pop
fnsave
and
into
jle
sub
aam
sub
and
mov
xor
pop
pop
push
xchg
aas
push
or
test
add
sub
sbb
mov
fdiv
int3
xor
out
xchg
cmp
dec
das
mov
xor
call
xchg
jb
dec
mov
push
or
rol
movs
sahf
and
jmp
pop
aam
js
cli
adc
xor
popa
dec
(bad)
push
mov
push
or
popf
int3
inc
mul
jae
xor
push
inc
(bad)
push
mov
ins
adc
aaa
or
or
loope
sub
inc
push
add
inc
mov
xor
aad
loop
fptan
adc
sbb
jg
sub
jae
push
dec
mov
cli
dec
or
mov
ja
mov
inc
dec
in
add
xor
xor
lds
jne
or
test
or
(bad)
imul
cmp
int3
stc
test
movs
scas
je
inc
gs
adc
mov
pop
inc
shl
movs
mov
rol
test
jge
and
push
and
daa
push
inc
jbe
std
fstp
popf
xchg
lock
mov
pop
adc
lods
in
mov
cli
retf
jecxz
sub
mov
arpl
lods
adc
pop
lods
(bad)
cmp
les
popf
sub
xchg
dec
push
fimul
int3
inc
push
push
sti
call
and
cmp
pop
jnp
inc
loop
es
(bad)
popf
or
lahf
and
mov
mov
outs
cmp
jp
jle
dec
(bad)
ficomp
(bad)
pop
mov
fistp
xlat
push
xor
retf
rcl
cmps
and
stos
ret
(bad)
mov
sub
loop
xchg
and
sbb
add
movs
push
aam
pop
xchg
mov
pop
jle
outs
stc
jmp
add
fwait
pop
dec
clc
lods
sub
mov
sub
pushf
push
movs
mov
imul
xor
sar
sub
lock
pop
lock
leave
imul
fbld
bnd
dec
fnstsw
in
in
movs
and
pushf
adc
inc
sbb
iret
loopne
mov
jns
stos
neg
imul
gs
mov
jmp
fsubr
sub
cmps
ins
adc
pop
xor
dec
out
mov
data16
sub
xchg
push
pop
add
push
push
call
sbb
inc
sbb
movs
inc
cmp
stos
(bad)
mov
xchg
aaa
mov
inc
mul
add
(bad)
pop
mov
in
sbb
xchg
cmp
syscall
jae
pop
enter
(bad)
sub
or
xchg
jge
sbb
mov
mov
bndldx
imul
xchg
(bad)
sti
jno
mov
(bad)
daa
repz
js
dec
clc
or
cmps
push
pop
pop
mov
adc
xchg
push
aas
sub
push
ins
push
ins
test
in
loope
data16
mov
mov
fstp
dec
mov
push
sar
bound
in
mov
sbb
cmp
(bad)
ss
pop
cmp
in
pop
loopne
or
(bad)
out
cmps
movs
out
sar
or
jge
into
shl
pop
sub
movs
aaa
fwait
hlt
jo
xchg
fs
rol
mov
jg
sbb
in
movs
pop
sahf
adc
mov
arpl
ror
xlat
dec
cmp
cli
jno
jge
aad
dec
pop
adc
dec
pop
add
les
arpl
push
retf
lahf
fsub
into
push
movs
aas
pop
(bad)
lods
(bad)
imul
pop
retf
(bad)
fiadd
stos
cmp
ins
stc
xchg
and
retf
clc
loopne
push
or
fadd
pop
fsub
fwait
or
loop
test
push
jae
or
pop
nop
(bad)
fisttp
xchg
xor
dec
sbb
daa
sbb
icebp
dec
pmuludq
xchg
or
data16
mov
xchg
nop
fwait
lea
and
pop
cs
mov
aas
cdq
arpl
mov
mov
inc
movs
js
sbb
out
sub
adc
test
or
xor
mov
push
data16
jno
jb
fnstsw
adc
popa
inc
mov
mov
pop
mov
adc
or
dec
(bad)
outs
data16
aaa
xchg
jae
sti
(bad)
cmp
inc
adc
xor
fcomip
call
dec
cwde
jnp
adc
and
cmp
xor
sub
bnd
pop
ret
sti
mov
or
xor
mov
fidivr
adc
xor
pop
and
dec
mov
jmp
sub
inc
add
mov
push
lods
imul
sub
ret
(bad)
imul
into
cmp
pop
add
xlat
push
jp
addr16
xlat
xor
neg
imul
mov
sti
sahf
sub
push
mov
or
push
jae
mov
cs
fisttp
or
or
mov
mov
repz
or
arpl
dec
xor
dec
nop
fist
imul
iret
(bad)
xchg
jmp
dec
cld
mov
ret
clc
xchg
mov
push
rcl
cmps
jmp
popa
and
sahf
cld
and
push
icebp
sub
shl
xchg
in
push
sbb
jne
mov
loop
mov
addr16
mov
fild
jmp
jo
ja
cmp
dec
sti
arpl
hlt
shl
or
imul
mov
inc
out
loope
lahf
int
pushf
fild
pop
movs
mov
sbb
jg
pop
dec
jmp
or
sub
enter
cwde
stos
add
sub
xor
pop
ret
xchg
or
xchg
jmp
shl
push
shl
daa
shr
stos
cmps
pop
(bad)
int3
rol
and
sbb
cmps
stos
out
push
int
mov
ret
fild
and
iret
lds
and
push
leave
and
dec
ds
inc
test
repnz
inc
ds
mov
mov
xor
pop
sub
or
push
jno
(bad)
pop
xchg
jae
jg
imul
and
dec
nop
lea
jmp
xchg
in
movmskps
ror
aaa
sti
imul
mov
stos
mov
leave
push
daa
inc
fiadd
push
mov
push
inc
test
loop
dec
addr16
mov
call
xchg
cmc
fisttp
std
shl
stos
adc
jl
or
ja
std
dec
test
fistp
cmps
pop
clc
sub
add
aad
scas
push
ss
pop
push
aaa
in
xlat
pop
retf
stc
addr16
xor
mov
cmp
push
ja
inc
push
shl
outs
test
outs
into
pop
lods
lahf
adc
jle
rol
out
loope
sbb
cmp
mov
xor
pusha
add
leave
jmp
out
mov
ins
xor
and
dec
xor
sbb
dec
inc
or
mov
ficomp
mov
push
adc
push
cli
sbb
jnp
sub
cmc
scas
xchg
outs
cmp
arpl
lods
mov
add
nop
cld
test
(bad)
jbe
jge
std
mov
cmp
add
xor
loop
add
ins
xor
icebp
push
xor
mov
add
(bad)
icebp
cs
aad
or
xor
jns
add
outs
and
popf
fsub
mov
out
jns
cdq
push
repz
(bad)
or
mov
mov
stc
push
cmp
int
mov
cmp
lock
add
lock
xchg
idiv
xor
jl
rcr
and
adc
popf
pushf
sub
push
pop
cmc
adc
mov
push
cmps
jmp
pop
inc
dec
mov
(bad)
cli
popf
enter
mov
hlt
shl
imul
push
test
and
fiadd
fwait
xor
call
mov
sbb
test
(bad)
cli
popa
stc
imul
das
sar
das
pushf
jmp
aad
jecxz
ins
fld
out
daa
movs
inc
cmp
shr
push
stos
or
clc
xchg
sbb
adc
lds
arpl
push
cmp
and
and
mov
add
mov
ins
nop
in
mov
cmp
inc
add
sub
xor
xchg
add
pop
sbb
into
mov
inc
mov
test
mov
(bad)
icebp
retf
inc
movs
sar
add
mov
mov
ss
xor
dec
sahf
cwde
fs
cmp
loopne
je
data16
jbe
add
sbb
test
call
call
mov
sbb
adc
sbb
jl
jne
xlat
daa
arpl
xor
test
cmp
mov
mov
in
push
mov
(bad)
push
imul
cmps
jge
jno
into
mov
(bad)
sub
push
pusha
fdivr
pop
addr16
mov
bound
ror
dec
jb
mov
dec
and
retf
lock
mov
dec
inc
xor
xchg
and
shl
call
jmp
mov
push
ds
stos
mov
add
rol
mov
sbb
pop
in
lods
jb
pushf
mov
rcl
cs
and
mov
or
inc
mov
out
pop
(bad)
pop
mov
outs
rcl
stos
das
mov
and
adc
sbb
add
mov
test
loope
and
jge
scas
pop
cmp
pop
cmp
fistp
pop
ja
movs
icebp
sub
sub
ins
fwait
pop
mov
(bad)
jo
mov
xchg
sahf
shl
cdq
mov
es
add
mov
out
movs
jle
fsubr
lods
adc
jg
sbb
fdiv
test
call
xor
dec
jecxz
dec
mov
and
inc
or
call
push
scas
int
lock
sahf
ror
fimul
dec
dec
inc
mov
ret
sub
jnp
push
(bad)
shl
cwde
(bad)
xor
mov
lods
cmp
mov
dec
add
push
push
jo
std
sub
mov
fcomip
mov
mov
adc
pop
push
ret
out
sar
out
call
mov
arpl
loopne
jae
jp
clc
cdq
(bad)
sahf
(bad)
push
jb
mov
imul
cmp
cmp
inc
scas
pop
xor
mov
adc
(bad)
(bad)
xchg
inc
sidtd
push
jb
mov
and
aam
test
cld
stc
jno
icebp
xchg
jne
xchg
div
add
fsub
add
adc
(bad)
sub
leave
adc
rcl
xchg
xchg
mov
lock
pop
scas
test
and
cdq
add
xor
sahf
retf
(bad)
mov
shl
stos
xchg
xor
push
push
add
mov
inc
pop
out
inc
adc
ins
bound
xchg
ror
inc
popa
movs
jne
movs
addr16
and
add
lods
xor
or
out
mov
xor
loopne
sahf
lods
dec
in
in
rol
adc
push
jne
cmps
mov
jno
and
push
adc
sub
loope
psrld
push
dec
lods
test
int
mov
(bad)
lds
movs
inc
mov
mov
xor
push
mov
(bad)
into
pop
shl
mov
shl
aaa
test
jle
jmp
test
pushf
mov
imul
call
out
cld
int
fsub
dec
int
dec
icebp
nop
add
and
popf
and
inc
popa
aaa
mov
cmp
movs
rcl
xchg
sar
dec
add
mov
mov
mov
xchg
dec
jnp
mov
ja
push
bound
xor
jl
mov
stos
addr16
xor
pushf
mov
add
test
or
sbb
fstp
js
adc
or
loop
jmp
xchg
cmp
cli
xlat
fsubr
jae
stc
repz
mov
cdq
pop
add
inc
pop
mov
xlat
and
sub
cmps
push
ja
lds
stc
xchg
test
mov
test
stc
rcr
add
push
adc
add
ins
sub
and
mov
jecxz
add
shl
xchg
or
aam
ja
fmul
out
mov
ins
dec
icebp
cmp
dec
adc
mov
out
mov
jnp
jecxz
ret
xchg
push
dec
pop
repz
push
mov
push
fadd
ds
call
fwait
mov
nop
cmp
sub
(bad)
cli
pop
js
add
test
dec
or
rcl
test
pop
inc
pop
test
out
push
xor
inc
ja
adc
test
aad
rcl
cwde
lods
pusha
int
sti
jg
sysexit
cli
cwde
sub
fmul
scas
or
pop
sbb
pop
adc
jp
mov
jmp
std
in
jecxz
out
xchg
rol
into
or
xor
xor
retf
pop
sub
dec
or
ins
vmptrst
es
enter
fist
mov
xchg
outs
hlt
hlt
jmp
xor
push
repz
fcom
loopne
adc
sub
cmps
mul
fs
into
leave
inc
mov
es
adc
xchg
xchg
sub
adc
inc
hlt
or
test
cmp
or
inc
(bad)
test
push
dec
mov
ins
mov
adc
jmp
cmp
sub
sbb
push
loop
adc
xchg
sub
sbb
adc
out
sub
not
pop
sahf
push
aam
jg
pushf
imul
scas
dec
sbb
mov
stos
lahf
push
in
cmp
xchg
dec
mov
sub
sbb
mov
imul
fild
lahf
add
ins
add
push
loopne
cmp
bound
iret
mov
push
out
push
mov
dec
test
push
loop
fstp
(bad)
mov
sub
fisttp
and
mov
aas
pop
cdq
jmp
mov
fadd
jmp
mov
mov
test
and
enter
pushf
inc
inc
xchg
add
rol
cwde
shl
push
je
jmp
enter
lea
out
and
push
sbb
loopne
add
jecxz
aaa
scas
sub
jbe
xor
mov
push
scas
xchg
add
movs
mov
cmp
ror
and
jbe
iret
pop
cli
pusha
inc
pop
sbb
pop
stos
xlat
xlat
dec
add
cmc
jnp
imul
out
loopne
push
sbb
jge
jnp
add
ret
jne
mov
xchg
lods
fs
push
call
shl
inc
push
and
test
test
aaa
mov
pop
xchg
xchg
sub
jl
add
clc
mov
adc
fsubr
dec
ss
xchg
add
retf
push
addr16
push
or
push
outs
cwde
xor
push
push
adc
out
inc
mov
mov
mov
shl
fwait
push
cld
(bad)
ret
cmp
(bad)
sub
mov
mov
mov
jg
sub
jns
aad
or
push
out
sbb
mov
cwde
adc
ja
push
jg
loope
hlt
enter
repnz
(bad)
rcr
jl
mov
sub
sub
imul
(bad)
outs
xchg
js
xchg
xchg
and
(bad)
ret
mov
push
out
push
jp
sbb
leave
or
aad
jae
les
hlt
(bad)
jg
cmp
(bad)
cwde
or
outs
das
fisttp
sub
sahf
add
mov
xchg
add
mov
aas
xor
test
mov
repnz
imul
stc
add
dec
test
fcmovnbe
and
push
cmp
rol
sub
push
addr16
xchg
ins
js
push
cmps
test
jmp
mov
inc
shl
(bad)
push
les
add
in
push
test
test
cs
xor
add
int3
sbb
ins
imul
das
push
addr16
imul
adc
nop
or
inc
and
mov
push
outs
sbb
xchg
fcomp
mov
inc
pop
or
outs
mov
ja
addr16
ret
jbe
in
loop
shl
sub
fnsave
cmp
fwait
inc
pop
jnp
ja
jbe
jbe
xchg
ds
xlat
adc
mov
daa
out
pusha
push
das
(bad)
fwait
adc
cmps
xor
xor
dec
inc
mov
fist
les
xor
popf
jmp
mov
push
daa
inc
adc
loopne
jg
mov
inc
fimul
lock
imul
mul
jp
sbb
(bad)
repnz
pop
sahf
stc
xchg
loop
ret
out
call
iret
mov
sahf
jns
jmp
push
add
mov
in
shr
dec
ins
cdq
push
jmp
mov
mov
xor
inc
aaa
xchg
in
jno
pop
dec
add
or
xor
sub
shr
sbb
push
fimul
aaa
out
and
sub
imul
jge
cmp
(bad)
in
push
sbb
nop
ss
jae
mov
rcr
repnz
xor
cmc
pop
(bad)
xchg
ret
mov
data16
cs
mov
repz
mov
movs
push
jbe
test
cmc
clc
push
fadd
imul
and
jp
out
pop
cdq
sub
xor
xchg
clc
jp
fs
scas
jl
(bad)
or
ficomp
jbe
pop
pop
pop
xchg
pop
push
inc
enter
scas
out
and
leave
or
cmc
adc
in
sub
nop
arpl
shl
dec
jnp
sub
retf
mov
and
and
test
test
or
pop
mov
ds
test
popa
push
or
leave
sbb
or
aam
adc
push
add
mov
adc
leave
xor
ins
imul
jbe
pop
jecxz
std
jg
addr16
push
dec
inc
mov
adc
mov
iret
(bad)
pop
mov
pop
test
(bad)
mov
(bad)
fwait
call
and
pop
and
fwait
mov
add
jle
daa
cli
imul
mov
add
sbb
jae
ins
push
test
test
mov
fs
jno
js
sub
jb
jmp
cwde
(bad)
dec
jmp
cs
pop
sar
push
pop
test
jg
mov
mov
xor
call
or
adc
lods
mov
and
stos
repz
inc
retf
xor
xchg
inc
sti
adc
or
das
into
sub
mov
icebp
or
mov
loop
sub
add
test
dec
std
adc
aaa
jb
jbe
and
adc
xor
test
cmp
rcl
jp
push
call
sub
xlat
xor
jno
mov
add
ss
and
popa
call
pop
mov
sub
rol
xchg
into
aad
and
add
dec
or
push
add
mov
mov
repz
arpl
pop
stc
lea
mov
jnp
out
(bad)
mov
or
or
jno
jl
add
loopne
mov
jmp
jb
mov
rcr
popaw
and
xor
jmp
xor
mov
fisttp
pop
imul
fwait
je
addr16
and
add
pop
out
stos
and
dec
xchg
push
lahf
cmps
jle
and
inc
call
pop
xchg
fnstsw
mov
xchg
adc
lds
lods
fdiv
loopne
cmp
push
lods
cmps
pusha
add
ja
dec
inc
fwait
pop
(bad)
cmc
in
(bad)
push
and
pop
enter
inc
pushf
adc
sbb
pop
pop
and
mov
mov
not
pop
push
or
and
sub
xor
cmps
lea
xor
or
fnstsw
cmp
mov
fs
mov
es
aaa
add
adc
jle
inc
xlat
loop
pop
addr16
das
inc
dec
rcl
out
xor
leave
movs
(bad)
and
and
pop
test
mov
movs
shl
mov
and
or
mov
mov
sub
xchg
inc
adc
dec
and
bound
call
xor
cmp
jb
jb
adc
mov
mov
outs
xchg
push
js
push
hlt
pop
add
mov
ja
xchg
icebp
cmp
leave
repz
cdq
out
cmp
xor
mov
lds
pop
fstp
and
ds
fsubr
movs
bound
aaa
xor
test
xchg
cmps
add
and
and
jo
mov
xchg
cdq
xchg
jo
lods
jmp
mov
test
dec
add
xchg
adc
nop
inc
push
scas
lea
popf
cmps
or
cmps
mov
jne
jnp
daa
jmp
sbb
sahf
fsubr
add
push
jnp
sub
push
loope
cdq
inc
mov
jnp
mov
icebp
movs
sub
dec
cmp
aam
pop
sbb
add
imul
jge
mov
jns
pop
(bad)
cmps
call
and
fwait
xchg
mov
sub
jae
dec
repz
jle
jmp
and
xchg
adc
pushf
push
pop
dec
cmp
xchg
repz
sbb
mov
mov
enter
add
stc
jo
imul
rcr
cmp
adc
jb
sbb
jge
ret
mov
jmp
xor
test
sub
imul
rcr
inc
hlt
call
aam
bound
int
dec
pusha
inc
ds
add
cmp
jne
pshuflw
fs
lds
je
ror
sub
sar
data16
ror
loop
sbb
mov
and
popf
jmp
jnp
pop
inc
or
xlat
push
lea
pop
int
xchg
jle
mov
lods
pop
mov
je
daa
(bad)
push
pop
and
mov
push
mov
jge
xor
data16
scas
in
add
adc
repnz
add
or
jno
xor
das
pop
xor
pop
popa
loope
test
dec
add
pop
mov
into
data16
stos
jp
imul
lds
adc
mov
sub
mov
stc
sub
xchg
sahf
adc
jmp
xchg
push
(bad)
fisttp
jl
add
cdq
loop
into
or
loopne
test
imul
dec
or
or
sub
jmp
pop
or
(bad)
aas
scas
sbb
mov
sbb
ds
mov
push
adc
lods
xor
jae
jae
jno
sbb
or
std
mov
dec
push
call
retf
test
sahf
and
ss
dec
sbb
movs
inc
mov
sub
mov
inc
gs
and
jl
mov
cmp
add
scas
into
bound
inc
push
sub
div
es
call
sub
popa
mov
push
or
je
or
xchg
xor
xlat
xor
lahf
or
addr16
and
cmc
les
mov
push
mov
sub
scas
sub
sub
(bad)
or
bound
cli
cld
fild
cld
and
pop
ss
cmps
call
test
les
dec
cld
(bad)
pop
pop
xor
push
je
fst
std
inc
imul
cdq
jo
sub
daa
popa
push
adc
dec
jg
cmp
pop
sbb
xacquire
xchg
sub
jg
daa
or
or
outs
call
push
xchg
movs
je
outs
mov
jmp
in
sub
push
dec
out
aas
sub
nop
iret
cwde
inc
mov
dec
bound
dec
sub
jp
xchg
push
jmp
pop
in
adc
mov
xor
mov
lods
aas
xor
rol
cli
repz
or
aaa
test
mov
pop
or
scas
xchg
aas
arpl
gs
or
xor
fsubr
idiv
jle
in
adc
push
fwait
or
les
ficom
bound
stos
or
movs
scas
retf
xor
sub
jle
lds
lahf
push
jg
mov
dec
push
push
daa
mov
xor
rcr
scas
pop
mov
(bad)
and
push
addr16
mov
fst
cwde
cwde
inc
test
scas
addr16
test
pop
loopne
adc
xchg
jmp
mov
push
test
(bad)
jl
ret
retf
or
mov
in
jmp
(bad)
test
mov
sbb
dec
lods
ficom
int
js
xor
movs
add
cmp
sub
outs
gs
adc
(bad)
(bad)
cmp
ror
retf
out
hlt
mov
lds
sbb
fld
add
mov
dec
or
fld
cmp
ins
or
mov
mov
rol
in
loop
lds
xchg
cs
movs
xor
pop
(bad)
jb
ds
adc
add
aad
and
and
fs
jp
loop
mov
paddq
leave
and
fsub
jbe
bound
push
jle
(bad)
inc
sub
or
mov
sub
or
push
or
icebp
push
ret
retf
ret
dec
fwait
(bad)
retf
mov
mov
xor
pop
stc
or
mov
cmps
stos
pop
or
sbb
inc
or
mov
mov
js
cwde
out
adc
adc
xchg
pop
mov
push
inc
gs
cmps
out
sahf
push
mov
cmp
mov
mov
adc
rcl
rol
bound
fimul
mov
and
add
out
outs
mov
dec
push
xor
xor
test
jo
pop
dec
mov
mov
inc
xchg
cmp
(bad)
ficom
fidiv
cmp
fnsave
jmp
mov
out
(bad)
sub
cmp
dec
retf
(bad)
ss
inc
fxch
cmc
push
leave
aaa
mov
push
pop
dec
fmul
sbb
push
in
sbb
xchg
sbb
xor
mov
cmp
mov
aaa
in
(bad)
jl
retf
fisttp
icebp
adc
cmp
pop
popa
and
inc
sbb
push
in
jecxz
cdq
sub
cmp
mov
icebp
inc
call
shl
cmp
mov
mov
movs
out
jge
fisub
sub
call
push
mov
out
adc
popf
dec
lock
pushw
lock
mov
dec
mov
dec
adc
inc
std
icebp
fnstsw
xchg
outs
and
loopne
jle
fs
fistp
ss
lods
nop
repz
cli
movs
outs
imul
addr16
loop
in
enter
cli
nop
outs
pop
jo
sbb
pushf
out
cmp
(bad)
pusha
mov
stc
pop
push
daa
jno
jge
jns
mov
xchg
shl
(bad)
rcr
fcom
rcl
nop
xchg
mov
mov
add
outs
outs
fild
jge
stos
fcomp
mov
sahf
popf
sub
enter
inc
pop
and
cmp
enter
mov
imul
and
and
int
rcr
inc
sub
adc
push
pop
sbb
sub
mov
sbb
out
pop
ds
push
daa
pushf
bnd
adc
mov
pop
fcom
(bad)
retf
jae
shl
mov
fild
cli
inc
in
out
scas
jg
lahf
mov
icebp
lea
mov
xor
sbb
ja
shl
jb
dec
ret
movs
shl
pop
imul
inc
in
sbb
jge
lea
xchg
and
outs
or
int
sbb
int
xchg
jmp
cmp
cli
int
pop
addr16
mov
and
push
dec
and
je
xlat
push
int
add
sti
pop
push
push
or
cwde
dec
out
fdivr
xchg
sub
test
enter
out
outs
(bad)
loopne
icebp
stc
aaa
les
jno
nop
dec
dec
inc
jb
pushf
(bad)
xlat
mov
jb
adc
lds
aad
xchg
push
cmp
inc
inc
jne
jle
cmp
sbb
mov
sar
mov
in
or
pop
mov
adc
push
aad
ficomp
out
das
jno
call
mov
stc
scas
add
(bad)
movs
adc
fmul
add
and
push
jge
jno
ins
fistp
scas
jmp
out
jge
sub
xchg
ficomp
ins
je
(bad)
out
sbb
(bad)
cdq
(bad)
in
mov
add
xor
jno
cmpxchg
xor
ds
popa
mov
mov
sub
scas
pop
mov
jnp
cmp
adc
or
loope
add
and
mov
outs
repz
pop
loope
movs
shl
and
dec
jmp
push
push
jb
movs
add
pop
adc
(bad)
push
movs
repnz
mov
sbb
mov
sub
movs
imul
(bad)
lods
aaa
mov
(bad)
jns
mov
add
sub
hlt
or
sbb
xchg
ret
inc
aaa
retf
inc
mov
mov
repz
mov
mov
sub
pop
enter
xor
ret
adc
push
shrd
int
lea
outs
inc
fsubr
dec
test
into
or
lods
lock
sub
cmc
xchg
icebp
adc
xchg
dec
fsub
cmp
xor
cld
mov
xchg
mov
pop
in
and
std
or
outs
stos
pop
xchg
sar
jecxz
loope
test
popf
jnp
jmp
cdq
shr
xor
nop
push
movs
aad
xchg
adc
outs
scas
ins
cmp
xor
jo
xchg
sub
mov
jle
lods
or
je
mov
sahf
leave
mov
mov
test
sbb
stos
cld
or
xchg
loope
lea
inc
aaa
inc
add
cwde
loopne
pushf
sub
cmp
inc
jae
dec
test
aam
push
dec
clc
xor
fwait
mov
xchg
mov
xlat
(bad)
jne
cmp
pop
mov
loop
sub
and
fimul
imul
test
cmp
jns
nop
pop
psadbw
jp
add
into
in
or
shl
int
ds
jnp
pop
movs
cmc
jmp
push
repz
cld
jmp
ss
xchg
jae
(bad)
mov
and
mov
popf
cmps
xchg
js
sbb
cmp
pop
sub
ins
shl
cs
jno
mov
neg
test
pushf
iret
adc
sbb
sub
sub
lock
int3
aas
cmps
shl
jmp
inc
sbb
jo
jmp
dec
shl
clc
lods
mov
loop
fsubr
sbb
mov
jmp
mov
pop
test
les
lods
cmp
adc
cs
mov
not
jle
mov
push
push
xor
adc
mov
hlt
pop
fst
dec
cmps
push
enter
mov
je
ss
and
retf
popa
shr
dec
cmp
sbb
mov
call
inc
idiv
sbb
adc
stos
jmp
fchs
pop
pop
mov
test
dec
addr16
add
and
loopne
imul
enter
adc
jmp
pop
ret
adc
aas
call
(bad)
ds
les
mov
ficomp
ins
mov
arpl
mov
mov
je
leave
imul
pop
mov
xor
cmp
aad
fstp
cwde
cmp
test
mov
xlat
imul
clc
repz
lea
loop
out
dec
inc
pushf
mov
add
cmp
push
pop
and
mov
(bad)
int3
jmp
xchg
dec
and
mov
pop
into
jbe
scas
nop
shl
fsub
js
adc
fsub
hlt
mov
or
test
(bad)
push
and
xor
jmp
icebp
retf
push
sbb
stos
inc
icebp
or
pop
inc
stos
iret
mov
inc
inc
pop
lods
ja
jb
adc
jmp
lahf
pop
jg
sbb
in
sub
dec
xchg
mov
mov
repz
sbb
or
xchg
or
and
jns
push
cdq
out
out
pop
stos
fidivr
lods
pop
jno
dec
sar
mov
loop
jp
mov
jmp
sar
shl
add
ss
test
ins
push
lods
add
(bad)
adc
adc
bound
mov
cmp
cmp
xchg
hlt
ins
sbb
(bad)
and
mov
hlt
lahf
xor
pop
add
xor
and
push
pop
add
xchg
xchg
jae
or
or
aas
and
call
mov
adc
mov
retf
inc
clc
inc
xor
add
movups
call
test
hlt
sbb
ret
std
lods
or
neg
dec
call
clc
ds
arpl
inc
cmp
cmp
and
adc
mov
jmp
test
jae
paddd
add
xor
ins
outs
sub
gs
lea
jg
sbb
scas
cmc
and
cmp
mov
frstor
shl
loope
xor
loope
xchg
mov
mov
shl
lods
lahf
fst
pusha
dec
inc
xchg
mov
lea
jp
xchg
imul
and
pop
xchg
rep
push
adc
rep
add
test
ins
jne
lds
add
xchg
es
mul
inc
sbb
cmc
(bad)
fmul
sub
icebp
sbb
lock
inc
jbe
or
cmp
scas
mov
push
or
mov
mov
jecxz
loop
xchg
mov
test
pop
xchg
jns
(bad)
mov
(bad)
pop
lahf
shl
call
inc
repnz
push
fs
sub
clc
mov
rol
jp
xor
cmp
fist
imul
sub
pop
sbb
out
scas
mul
jne
xlat
test
xchg
push
sub
xor
jno
sbb
cmp
in
push
xchg
sub
cs
mov
lahf
lods
and
pop
jne
cli
outs
push
pop
(bad)
push
push
frstpm(287
jmp
mov
out
mul
xor
push
pop
push
enter
fwait
nop
inc
retf
fld
adc
leave
rcl
adc
outs
fist
into
outs
fcom
mov
push
hlt
sbb
dec
shl
push
daa
mov
mov
shr
mov
and
jecxz
pop
stos
jno
pop
pusha
or
push
fimul
and
xor
pusha
call
mov
mov
xchg
mov
cmp
bound
adc
pusha
mov
fst
pop
cmp
pxor
stos
jnp
jmp
mov
pop
or
cld
sbb
adc
data16
pop
cmps
sub
dec
mov
rcl
or
dec
ret
aam
mov
lahf
(bad)
jmp
dec
les
enter
pop
nop
jmp
clc
shl
mov
into
lock
jp
inc
adc
push
jmp
dec
sub
push
jle
pop
dec
cmp
jl
lock
sub
jecxz
sub
dec
add
inc
xchg
cdq
mov
enter
pushf
mov
scas
add
dec
sub
inc
fucom
das
(bad)
shr
mov
cmp
out
fist
xlat
vaddps
or
repz
sti
dec
cmp
and
sub
and
sub
call
jbe
jbe
jle
aas
push
pop
mov
mov
xor
cmp
test
test
jnp
in
and
xor
jnp
push
xor
and
call
ret
in
cmp
shl
loop
mov
inc
shl
mov
mov
std
push
jp
(bad)
push
fiadd
jge
sub
es
xchg
rcr
or
ins
pop
pop
cmps
mov
stc
jle
out
mov
sub
scas
mov
sti
lahf
pop
pop
xchg
inc
clc
hlt
call
push
push
mov
jmp
lock
test
scas
xor
add
imul
fdivr
jb
lea
mov
sar
push
cwde
pop
psrld
ins
das
fsqrt
loope
mov
les
jb
pop
jge
aam
ficomp
leave
push
adc
test
std
aas
cld
repnz
pop
push
inc
popa
enter
jns
jmp
inc
xor
mov
out
cmps
mov
repz
hlt
movs
sub
xlat
out
int
mov
lock
jo
and
add
scas
test
scas
mov
or
arpl
cmp
pop
cmps
xchg
jne
jne
push
jns
or
mov
pusha
sub
fs
out
inc
lock
aad
mov
pop
into
scas
jae
mov
xor
cmps
mov
pop
scas
inc
(bad)
push
xor
push
in
xor
aam
stos
js
into
inc
xchg
test
xor
cvtps2pd
imul
inc
test
in
xchg
sub
scas
pop
push
jmp
cmp
outs
jno
add
stos
pop
add
xchg
or
jecxz
fldenv
adc
and
add
xchg
push
dec
(bad)
jb
out
jo
mov
ret
retf
mov
or
iret
mov
dec
sub
dec
cmp
mov
jmp
iret
dec
and
jns
arpl
xchg
inc
outs
sbb
out
outs
inc
pushf
add
push
jmp
dec
ins
mov
cli
out
inc
push
or
jecxz
lods
add
jno
retf
ins
cmp
pop
in
pushf
rcl
inc
xor
gs
and
jg
lods
xchg
xchg
fbld
push
jnp
inc
dec
push
sbb
mov
jmp
pop
call
maxps
xchg
pop
mov
mov
in
xchg
repz
pop
xchg
data16
sub
je
(bad)
xchg
jb
icebp
add
jp
mov
(bad)
cli
lea
test
or
push
xchg
mov
push
add
adc
sbb
cld
mov
mov
rcl
(bad)
dec
adc
movs
es
mov
mov
(bad)
fst
xor
mov
shl
sub
push
or
adc
dec
jecxz
out
xor
out
hlt
(bad)
mov
mov
scas
inc
iret
jge
xor
out
jbe
call
jbe
xchg
mov
push
es
and
adc
mov
push
adc
lods
int3
cmp
push
or
in
sbb
add
jno
jae
cdq
das
xchg
mov
sub
dec
add
loop
fadd
xor
movs
and
aaa
ins
sbb
sbb
mov
out
scas
cli
imul
pop
pop
push
dec
lods
popa
xchg
leave
cmp
popa
mov
rcl
rol
add
das
inc
jae
mov
jnp
(bad)
stc
xchg
lea
rol
into
dec
pushf
shr
repz
sti
cmps
rcr
inc
fld
mov
pop
(bad)
out
stos
pop
aas
movs
les
inc
xchg
xor
scas
js
add
ds
push
or
ins
mov
pop
in
dec
into
or
xor
test
adc
movs
out
or
repnz
add
sub
push
mov
stos
outs
les
dec
loope
(bad)
pop
xchg
(bad)
(bad)
es
and
jno
or
out
jne
mov
ret
test
jle
fisttp
jbe
mov
sub
cld
sub
mov
scas
push
xor
mov
fadd
scas
jbe
lods
pop
xchg
adc
adc
mov
pop
ss
rcr
leave
jae
mov
pop
icebp
hlt
loope
test
xchg
cs
push
jae
ret
xchg
adc
fcmovb
test
mov
fwait
jmp
cld
push
daa
sub
mov
fiadd
mov
(bad)
or
jle
xchg
hlt
fs
adc
dec
pop
cld
push
fdiv
sahf
push
mov
adc
mov
in
cmp
aas
mov
jmp
fidivr
data16
fst
loopne
mov
pop
bound
xchg
out
rol
push
(bad)
out
daa
xor
in
or
stc
xchg
or
mov
jmp
dec
jle
push
inc
inc
add
mov
cli
cmp
fidivr
ret
mov
add
mov
inc
sub
pop
std
addr16
mov
xor
or
call
mov
push
xchg
or
fcomi
or
jo
stc
pop
mov
jo
sbb
pop
call
cmp
rol
bnd
cwde
mov
cmp
sub
or
xor
daa
scas
invd
scas
dec
out
mov
jp
adc
dec
or
div
imul
dec
sub
pop
xchg
jmp
jl
call
mov
loop
sub
push
xchg
xchg
test
and
jmp
push
cmps
cmp
sbb
aam
inc
inc
aas
and
in
mov
xchg
sub
xchg
mov
adc
xlat
dec
aaa
pop
pop
pop
lods
mov
xchg
test
and
add
iret
je
(bad)
fstp
add
inc
jg
jae
cmp
mov
mov
je
jmp
push
stc
push
outs
mov
and
or
and
pop
push
ins
and
mov
dec
dec
fadd
and
ins
mov
mov
and
adc
sbb
in
cmps
cli
aam
out
push
inc
loope
jmp
retf
in
lock
call
movs
mov
repnz
jg
sbb
add
(bad)
in
adc
xchg
mov
cmp
rcr
xchg
xchg
bnd
ret
fcomp
xor
fiadd
dec
inc
jae
add
mov
pop
pop
push
xor
xor
gs
and
call
nop
call
(bad)
mov
sbb
(bad)
cmc
mov
cs
mov
xchg
add
or
sbb
inc
daa
adc
xchg
and
shr
in
xchg
lods
ja
pop
mov
pop
shl
shl
lock
sub
cmc
or
(bad)
in
test
ds
daa
push
xor
mov
mov
enter
xor
push
div
comiss
mov
mov
aas
enter
mov
mov
mov
stos
cmp
stc
sub
cmp
sub
xchg
xchg
movs
xchg
inc
mov
mov
int
scas
cmc
xchg
or
sub
add
test
fs
fld
mov
jmp
pop
fisub
jp
ret
pop
repnz
in
fnsave
out
and
je
imul
(bad)
cmp
inc
and
cmp
mov
outs
imul
inc
shr
mov
jecxz
dec
js
mov
std
jecxz
adc
mov
mov
mov
pandn
ins
push
xchg
imul
cmp
es
xchg
leave
rol
pop
fdivr
int
pop
adc
push
sbb
(bad)
xor
add
sub
pushf
icebp
loopne
push
cs
inc
out
jnp
mov
dec
repnz
sbb
sbb
or
push
push
push
js
pushf
or
test
aad
sub
cmp
mov
mov
jo
call
jmp
cwde
or
rcr
lea
ins
mov
sub
inc
aas
sub
mov
scas
mov
jo
(bad)
mov
dec
cmp
dec
ret
push
cmp
push
rol
xor
push
test
mov
stos
rol
and
mov
adc
push
lods
inc
cs
int
or
rol
inc
sub
(bad)
and
les
sbb
dec
in
xchg
je
pusha
mov
cmp
jnp
out
les
dec
xor
sub
jecxz
sbb
movs
adc
ins
adc
pop
fmulp
jae
xchg
sub
xlat
adc
xchg
jno
jmp
in
loopne
mov
arpl
aad
sbb
fmul
fs
mov
push
fcmovnu
(bad)
cmps
jo
push
into
sub
push
or
sbb
xchg
inc
popf
mov
lods
xchg
mov
ror
retf
fst
nop
dec
ror
jnp
mov
test
out
xchg
push
cmp
rol
inc
pop
scas
sub
inc
mov
jae
sbb
and
push
cdq
sti
out
pop
pop
and
push
sbb
xor
retf
mov
(bad)
push
sbb
cwde
std
les
clc
adc
or
pop
xchg
imul
shl
xor
popa
mov
pop
imul
popf
inc
movs
loope
and
test
fcom
xor
mov
mov
bound
jecxz
iret
jecxz
push
mov
test
sbb
xor
or
rcr
add
push
sub
lock
sub
mov
into
cmps
mov
pop
std
pop
jecxz
push
iret
into
pop
sub
xor
sbb
mov
mov
or
ret
pop
mov
or
lods
dec
les
(bad)
aad
pop
out
sub
jg
mov
lods
popa
adc
mov
ficomp
scas
inc
fwait
sar
mov
ja
fst
xchg
iret
pop
imul
addr16
or
call
aam
xchg
ficom
inc
std
(bad)
ds
push
push
pop
repz
sub
jbe
push
sbb
iret
or
pop
cli
cmp
out
iret
test
daa
xchg
movs
mov
lahf
das
jo
pushf
sub
pop
mov
arpl
ret
push
in
out
out
jmp
pop
call
repnz
outs
mov
push
imul
sub
jno
mov
fidivr
imul
sbb
dec
xor
fiadd
(bad)
in
mov
add
popf
mov
movs
push
fcom
sbb
iret
mov
loopne
rol
or
aad
and
outs
add
scas
pop
bnd
dec
dec
(bad)
xchg
or
jecxz
xor
(bad)
pop
dec
push
add
stos
clc
cmp
pusha
cmp
arpl
pop
sti
aas
xor
sbb
sbb
mov
pop
mov
xor
xor
adc
loopne
pop
aaa
pop
sti
scas
mov
add
into
mov
or
retf
or
mov
jb
mov
xor
jmp
adc
sub
out
ret
pop
fwait
pop
pop
xchg
and
enter
fsub
lahf
xchg
sbb
xor
mov
pop
int3
sahf
adc
xchg
sbb
stos
mov
addr16
xchg
xchg
enter
enter
sysret
adc
data16
and
(bad)
mov
pop
inc
inc
dec
js
gs
jle
int3
jb
scas
mov
jns
add
dec
das
cld
mov
fwait
push
jg
loope
jmp
movs
outs
imul
push
xor
pop
stos
rcl
sub
jg
ins
cmps
inc
adc
(bad)
xchg
int3
into
push
(bad)
jbe
(bad)
or
retf
daa
or
out
jmp
add
xchg
jno
add
xor
in
pop
(bad)
ins
cs
adc
leave
adc
add
or
cmp
psrad
mov
add
(bad)
push
ror
mov
xchg
and
jmp
xor
adc
clc
dec
sub
lahf
adc
(bad)
test
loop
push
sti
cmp
xchg
rcr
mov
cli
fxch
cmp
jae
fs
mov
popf
fwait
and
cwde
inc
push
ja
rcr
(bad)
jg
lahf
jb
lods
mov
fwait
inc
pop
cli
xor
pop
je
cmps
(bad)
jnp
xchg
movs
call
and
(bad)
push
dec
mov
pop
lods
stos
xor
sbb
repz
enter
clc
std
sar
sbb
mov
mov
ds
pop
in
push
aam
pop
mov
inc
loopne
in
int3
clc
shl
sti
jno
in
pop
jns
xor
aam
add
stos
mov
push
pop
pop
add
push
fmul
and
in
mov
lods
aad
popf
out
pop
and
cbw
jmp
aad
mov
mov
lds
jo
push
out
dec
data16
mov
ror
push
adc
sbb
test
int
xchg
push
sbb
add
ja
mov
cmp
xchg
mov
imul
cmp
sbb
and
lods
cmc
int3
out
aad
sbb
pop
fcom
cmp
dec
aaa
cmp
dec
inc
pop
test
xchg
movs
adc
mov
out
sbb
pop
fcom
mov
and
pop
arpl
inc
inc
mov
push
jmp
jne
sub
cmp
lds
mov
push
sub
sbb
fneni(8087
xchg
scas
inc
pushf
xor
in
les
out
mov
xchg
xchg
jno
jb
pusha
xchg
rol
mov
jnp
icebp
push
add
mov
jno
or
ret
mov
pop
fist
ja
cld
pop
jne
xchg
xor
fisttp
stos
repnz
fnstsw
push
fcmovbe
outs
mov
das
loop
push
add
pop
and
sbb
push
movs
mov
mov
shl
xrelease
mov
jb
dec
pusha
cs
nop
fild
aad
pop
pop
outs
mov
mov
cwde
sbb
xchg
addr16
and
adc
xchg
mov
out
inc
fwait
lods
fnstsw
push
mov
div
xor
jmp
sbb
sar
xchg
pop
int
movs
or
stos
sub
pop
push
repnz
push
retf
cld
mov
daa
cmp
xor
dec
cmp
movs
xchg
push
sti
outs
dec
push
jmp
push
push
ret
or
pop
cmp
mov
repz
mov
retf
cli
pop
(bad)
mov
daa
(bad)
imul
js
jg
in
mov
loope
xor
jnp
pusha
xor
push
frstor
jnp
jb
and
je
inc
push
inc
jl
or
xchg
sar
pop
shl
cld
cdq
lock
data16
xor
xchg
xchg
sbb
in
and
add
out
dec
clc
add
sbb
mov
xor
(bad)
std
loopne
pop
ret
jno
jno
fsubrp
mov
aaa
or
mov
(bad)
xchg
mov
ret
iret
(bad)
inc
retf
adc
push
jle
adc
stos
jmp
call
pop
jmp
mov
sahf
add
or
mov
enter
dec
inc
dec
mov
fsubp
inc
sub
fistp
xor
loopne
add
and
add
cdq
mov
shr
dec
clc
adc
xchg
pusha
mov
or
cmp
jb
mov
mov
push
mov
test
cdq
mov
(bad)
es
ins
add
imul
xchg
sti
mov
nop
push
cwde
sbb
push
inc
jge
xor
leave
add
std
(bad)
std
mov
mov
push
aad
(bad)
in
inc
cmp
sbb
in
pop
ret
js
dec
cld
(bad)
bound
jmp
(bad)
mov
mov
xor
jle
mov
mov
ds
cli
mov
fcomp
ins
push
fistp
ficomp
xchg
jne
cmp
rol
xchg
add
or
icebp
ins
dec
ret
movs
inc
add
xchg
mov
add
lock
mov
and
aas
aam
push
(bad)
xor
cmp
setp
mov
or
push
pop
neg
adc
jo
mov
enter
push
and
gs
sahf
std
xor
in
jb
cmp
and
fs
shl
mov
push
int3
mov
retfw
cs
test
sub
sbb
ja
jg
adc
sub
mov
test
or
enter
or
push
push
stos
inc
int3
pop
cmp
movs
adc
pop
ret
stc
repz
mov
cmp
jl
add
fwait
hlt
retf
ins
and
std
bound
movs
jp
xchg
dec
xchg
lds
ficomp
lods
cmps
pop
pop
aam
push
pop
lea
hlt
inc
mov
jg
retf
adc
inc
pop
add
sbb
mov
mov
xchg
cwde
dec
sbb
or
js
cmp
popf
bound
ins
inc
mov
icebp
rol
xchg
sbb
lods
lahf
ret
das
sbb
sub
mov
pusha
loop
push
push
int
addr16
stos
xor
clc
add
pop
xchg
and
and
xor
and
popa
in
sub
jno
cmp
out
push
retf
xlat
repnz
sti
out
sub
fs
sub
out
and
into
mov
jp
inc
mov
add
mov
fiadd
cmp
and
pop
mov
pop
mov
out
adc
inc
cmp
pop
mov
inc
push
dec
cli
rol
push
push
mov
ret
mov
call
sbb
cmp
in
jp
lahf
push
mov
outs
cwde
pop
push
stos
les
in
xchg
clc
cs
in
lock
lods
lods
imul
inc
arpl
or
jb
ss
mov
fidiv
mov
popa
addr16
push
cmp
arpl
leave
push
adc
gs
sub
enter
stos
in
ficomp
sbb
mov
and
mov
icebp
or
ffreep
and
sahf
pmaddwd
jge
call
xlat
and
sbb
sbb
icebp
xlat
mov
mov
arpl
xchg
inc
(bad)
ins
xchg
rol
je
adc
xchg
es
dec
dec
es
and
cmp
sbb
loop
and
inc
bound
lock
xchg
dec
or
mov
pop
inc
and
xchg
xchg
jge
js
(bad)
mov
out
out
mov
mov
inc
sbb
and
mov
and
dec
sti
stc
scas
iret
out
push
sbb
ror
lods
cwde
jb
aas
or
imul
sti
cdq
inc
dec
pop
sbb
imul
dec
test
retf
std
aas
or
add
push
ficom
xchg
movs
or
sbb
cmc
aam
cmp
sbb
add
mov
inc
outs
int3
rcl
xchg
mov
inc
scas
xchg
test
inc
mov
inc
out
pop
xchg
out
retf
adc
or
neg
test
shr
cmps
jle
test
leave
or
rcl
xor
arpl
mov
or
imul
mov
mov
mov
mov
lods
dec
sbb
enter
movs
push
inc
test
and
xor
xor
fsubrp
jbe
xor
or
push
mov
sub
ret
in
xchg
mov
clts
mov
rol
xchg
dec
cli
je
or
cmp
cmp
dec
dec
sub
inc
push
cli
stc
lea
outs
movs
pop
inc
and
in
ins
js
push
mov
fcom
mov
cwde
aaa
pop
add
mov
or
mov
aas
mov
mov
jp
(bad)
fcomp
mov
arpl
ret
stc
pop
pop
nop
jnp
shl
mov
outs
daa
pop
dec
add
dec
pushf
fild
jecxz
pop
lods
push
sahf
and
inc
jo
jg
mov
add
sbb
pop
lock
mov
xlat
jmp
adc
and
push
sub
test
pop
pop
nop
mov
stc
pop
xor
out
sti
push
fwait
push
and
scas
(bad)
retf
sbb
fwait
mov
lock
mov
pushf
int3
clc
add
sub
and
or
repz
fsub
ins
mov
in
pusha
sar
push
fild
hlt
in
enter
pop
sti
mov
stc
add
int3
cdq
ja
les
int
or
(bad)
mov
and
jle
or
test
mov
and
repz
pop
in
dec
cmp
xor
and
imul
mov
movs
sbb
adc
cmp
push
sub
int3
cmps
pushf
cmp
jecxz
push
mov
pop
stos
ds
std
cmp
addr16
xor
dec
mov
mov
imul
leave
xor
pop
fbstp
es
test
jbe
daa
and
push
loop
inc
int
es
xlat
retf
push
mov
jo
pusha
in
aas
outs
mov
cwde
gs
push
xchg
mov
test
add
rcl
add
rcl
cli
loope
aaa
shr
or
movs
xor
fst
or
mov
mov
lods
sbb
ins
sub
mov
outs
jge
es
pop
(bad)
leave
and
rol
imul
repz
lea
and
cmp
xor
jno
cmps
fs
(bad)
fst
mov
jnp
rol
inc
and
in
sbb
sbb
or
not
outs
pushf
add
shl
jmp
cld
cmp
sbb
in
and
(bad)
cli
arpl
or
push
mov
mov
cmp
jecxz
out
stos
mov
imul
xchg
(bad)
ficom
sar
daa
jno
or
ins
jb
pop
add
and
popa
push
mov
sub
fst
push
les
rcr
pop
mov
add
maskmovq
imul
bound
push
retf
fwait
pushf
xchg
outs
xor
mov
movs
xchg
mov
jmp
add
cmp
sbb
sbb
je
jae
sub
xchg
cld
pop
push
fidivr
add
inc
dec
mov
mov
das
fisub
test
sbb
rcr
push
in
sub
push
cwde
fist
sbb
adc
pop
pop
or
push
jb
fisub
and
pushf
xor
pop
xchg
rcr
das
ret
loopne
pop
inc
add
(bad)
cs
mov
ins
pusha
jmp
push
adc
mov
pop
push
mov
addr16
and
mov
daa
mov
inc
scas
push
dec
xchg
repz
adc
pushf
add
cli
xor
aad
cmps
test
pusha
imul
push
sub
pop
sbb
rcl
push
dec
std
mov
repnz
cmps
jns
dec
jl
xchg
push
mov
adc
gs
sub
add
and
xchg
pop
loopne
cmp
fild
push
mov
push
inc
ficom
dec
out
ret
mov
test
adc
(bad)
test
pop
ins
sbb
mov
dec
mov
aad
xchg
in
mov
pop
ja
sub
mov
jmp
(bad)
out
enter
push
push
mov
and
fidiv
enter
fnstcw
jp
outs
xchg
mov
jg
aad
cmp
loop
jp
test
push
mov
(bad)
in
pop
leave
loop
pop
pop
or
sub
dec
std
aam
add
fdivr
xor
enter
cld
popf
add
stos
aaa
and
scas
cmp
sub
dec
(bad)
mov
xor
fcomp
sar
es
ss
adc
adc
inc
xchg
add
retf
fidiv
push
call
add
in
cdq
loopne
or
lahf
sub
or
pop
pop
in
test
jnp
mov
(bad)
xchg
scas
fwait
jg
xor
movs
(bad)
rcr
or
mov
fld
sbb
adc
mov
lea
test
gs
out
shl
pushf
retf
(bad)
loopne
clc
iret
pop
dec
movs
xchg
fstp
and
pop
inc
adc
je
fistp
jmp
movs
mov
mov
jecxz
out
test
jg
xchg
xchg
dec
push
shl
fnstsw
loope
stos
inc
sahf
and
dec
and
and
cli
mov
(bad)
pop
mov
sbb
ss
scas
fwait
lock
ret
sahf
cmc
jl
cs
add
test
nop
sub
call
mov
xor
cmp
dec
lahf
movs
aam
mov
mov
iret
fiadd
in
(bad)
sbb
sbb
sub
cmps
les
jl
ss
lds
pushaw
imul
push
sbb
stc
fild
or
aaa
mov
stc
adc
lahf
pop
dec
das
pop
sbb
cmps
dec
mov
pop
cmps
mov
dec
ficomp
lahf
mov
cmp
jp
jg
mov
jae
iret
aad
jmp
pop
mov
xor
dec
jne
add
and
push
mov
inc
xchg
loop
jp
dec
mov
mov
xlat
cmp
xor
pop
icebp
pop
aaa
cmp
lods
hlt
xchg
rcl
dec
dec
jecxz
adc
enter
inc
enter
(bad)
je
fst
push
xor
enter
out
cmc
jge
mov
sahf
(bad)
and
cmps
adc
jp
pop
mov
movs
rcr
fild
sub
fwait
jno
xor
sti
lods
(bad)
out
push
xchg
push
xchg
add
inc
push
nop
inc
pop
mov
inc
addr16
(bad)
xor
cmp
lods
retf
pop
push
jle
xchg
xor
stos
repnz
mov
fsubrp
lahf
pop
les
jae
out
mov
(bad)
mov
sar
aam
ret
hlt
push
cmp
push
pop
push
push
(bad)
mov
outs
inc
dec
repz
or
leave
sbb
push
dec
jg
sbb
jbe
cli
sbb
mov
inc
jecxz
js
fnstcw
pusha
cdq
int
lods
sub
test
pusha
int3
inc
cmp
mov
pop
xor
cdq
add
dec
pop
push
mov
arpl
pop
and
outs
pop
icebp
in
adc
mov
in
js
dec
mov
sahf
xor
add
imul
movs
test
sub
sub
pop
jo
retf
mov
outs
jg
mov
nop
popa
and
pop
mov
and
or
or
int3
push
dec
pop
add
iret
pusha
hlt
xor
pop
sbb
fidivr
or
mov
ja
cmp
jne
xchg
fdivr
add
aas
stos
or
sahf
retf
(bad)
sub
xor
jle
xor
stos
or
loop
sub
mov
cmp
retf
in
movaps
(bad)
sub
sbb
cmp
and
jmp
jle
jp
add
lds
sahf
adc
pop
dec
dec
add
or
jle
xchg
jno
cmp
in
push
scas
add
mov
adc
retf
or
mov
test
jl
in
mov
mov
aas
sbb
cli
xlat
add
pushf
sbb
shl
out
push
std
cmp
jl
(bad)
pop
loopne
mov
mov
fwait
xchg
imul
aam
and
adc
mov
jae
push
gs
lods
or
mov
cwde
sbb
lock
shl
jb
pop
sub
enter
(bad)
push
shr
dec
and
ficomp
or
in
pop
add
adc
inc
jae
jmp
inc
pop
lods
retf
pop
nop
mov
mov
inc
repnz
test
cwde
ret
pop
jle
in
dec
test
out
mov
sub
(bad)
cmc
mov
or
sbb
std
add
xchg
pop
pusha
xchg
push
sub
push
dec
cmp
sbb
outs
sub
cli
iret
jp
dec
sbb
jg
adc
pop
and
and
xchg
and
jbe
and
mov
dec
aam
cmp
xchg
dec
stc
loopne
jmp
pop
push
mov
(bad)
mov
and
fisub
mov
push
call
in
fsub
retf
lds
cdq
rcl
fsub
out
xchg
lods
mov
push
xor
or
cmp
imul
dec
inc
fst
call
jno
push
imul
and
loopne
xor
cmps
mov
(bad)
rcl
lock
mov
dec
mov
dec
fisttp
and
test
jg
jb
push
in
pop
ret
add
in
les
or
inc
call
test
ds
xchg
(bad)
pop
mov
adc
cmp
fucom
adc
cli
(bad)
ja
xor
add
cmp
sub
popa
mov
mov
shl
cmp
inc
sbb
mov
aaa
sbb
add
mov
xor
mov
or
jle
popa
fdivp
push
data16
pop
push
push
pop
mov
ret
jnp
jno
add
dec
aas
test
sub
(bad)
mov
inc
popf
and
jecxz
out
sub
sub
jp
mov
movs
mov
iret
push
jge
pop
sahf
shl
xchg
sub
cmp
stc
push
fadd
sar
mov
ret
sti
and
sbb
adc
out
inc
lea
(bad)
fdiv
jo
pop
adc
inc
into
or
aaa
jb
xor
fisttp
jle
push
sbb
xchg
dec
xor
push
fwait
je
cwde
or
adc
ins
mov
mov
fist
xor
pop
shl
ins
mov
stos
je
scas
nop
or
pusha
or
xchg
sbb
push
pushf
bound
mov
dec
lahf
sbb
std
rcl
outs
int
repz
(bad)
imul
movs
std
jle
add
fdiv
(bad)
(bad)
adc
xor
inc
adc
cld
cmp
add
stc
stos
xor
jbe
aas
test
and
adc
pusha
cmp
dec
sub
mov
rcr
mov
add
les
and
add
push
inc
fsubp
add
and
shl
cmp
push
sub
je
mov
sbb
imul
ja
or
and
ds
idiv
dec
lods
outs
inc
loopne
mov
lea
les
mov
mov
mov
jge
jb
mov
add
dec
push
mov
add
std
mov
iret
out
xor
into
sub
and
cmps
int3
cmp
mov
outs
leave
add
xor
outs
test
mov
lahf
mov
(bad)
iret
shr
scas
rcl
and
std
mov
imul
cwde
enter
aaa
repnz
rcl
mov
ds
idiv
dec
outs
rep
jge
inc
movs
jo
mov
fcmovbe
fisubr
adc
cdq
mov
arpl
ds
lahf
inc
es
nop
and
jne
cdq
scas
adc
stos
dec
pop
jnp
and
outs
lea
push
or
push
mov
(bad)
mov
add
rcl
aad
sub
popf
cmp
push
je
jle
and
outs
push
into
movs
jno
inc
sar
xchg
ss
jbe
ins
in
imul
adc
rcr
lahf
ror
(bad)
jg
jmp
lock
jmp
test
cmp
fnstenv
aad
pop
inc
fsub
test
dec
xor
add
pop
xchg
cmp
dec
xor
int
mov
cwde
xor
imul
enter
add
xor
push
cmp
jo
xor
hlt
jb
leave
das
push
test
adc
mov
jae
push
cmc
gs
pop
in
push
sahf
sbb
xchg
(bad)
mov
dec
mov
or
stc
mov
xchg
jmp
adc
(bad)
sub
push
iret
popf
jo
xchg
xchg
mov
sbb
aad
cmp
jmp
sbb
xchg
adc
fidiv
xor
mov
push
(bad)
mov
add
in
jl
scas
pop
adc
push
add
fdiv
push
(bad)
dec
into
in
mov
jns
adc
pop
(bad)
jg
add
inc
inc
jb
mov
and
pop
mov
mov
rcr
sti
cdq
lahf
lock
fistp
lea
mov
daa
sbb
fdiv
inc
call
scas
lods
(bad)
jns
loopne
mov
sbb
adc
sbb
loop
jmp
imul
inc
(bad)
fwait
adc
cmps
or
ror
sti
daa
in
sbb
inc
pop
or
clc
push
fsub
(bad)
(bad)
jne
pop
add
xchg
lea
fidiv
test
dec
fcomp
cli
outs
pusha
sbb
and
ins
mov
push
adc
ds
inc
or
cs
dec
jle
xor
add
dec
push
adc
jge
xchg
push
rcl
scas
pop
es
pop
repnz
inc
inc
loopne
jg
ins
ror
or
push
cmps
fisttp
arpl
rcl
mov
cli
hlt
ret
je
stos
add
push
cmp
sbb
inc
inc
das
xlat
int
icebp
push
push
xor
push
ins
push
inc
sti
sub
xor
ins
pop
js
add
sahf
and
mov
clc
push
sldt
push
dec
popa
fsubr
xchg
ret
ds
xchg
pop
sub
xor
loop
adc
mov
je
sbb
dec
jp
cmp
or
test
xchg
push
test
fst
(bad)
loop
xchg
aam
pusha
mov
sti
cmp
ret
mov
data16
es
repnz
sbb
fs
test
jnp
jno
mov
push
adc
mov
jmp
adc
enter
(bad)
mov
dec
ins
mov
out
dec
dec
jmp
xor
xor
jnp
outs
inc
dec
dec
movs
out
sbb
test
mov
xlat
sub
mov
sub
inc
mov
imul
adc
sbb
call
xchg
je
call
fidiv
xchg
and
lods
popa
movs
mov
sub
adc
inc
jmp
dec
jae
icebp
int3
add
xchg
jecxz
mov
add
push
ret
nop
adc
enter
push
adc
aam
test
mov
popa
mov
and
mov
add
xchg
xor
xchg
neg
fsubrp
push
sti
mov
(bad)
jg
or
or
sti
stos
jl
sbb
movs
mov
fsubrp
enter
jns
inc
add
and
jg
add
out
pop
pusha
mov
loope
loopne
ror
dec
ins
mov
sub
mov
inc
hlt
fcmove
not
out
or
ss
hlt
loope
lds
aad
mov
sbb
mov
or
ss
(bad)
or
(bad)
jmp
push
fmul
je
and
mov
push
dec
popf
iret
sbb
retf
mov
std
test
fs
push
fwait
mov
aas
mov
dec
fidiv
call
pop
push
xchg
test
js
ja
jl
sbb
shl
fist
jne
xchg
rcl
add
xchg
jge
sti
aas
int
cwde
mov
bnd
pop
bound
in
repz
ins
fiadd
ret
adc
inc
push
mov
js
mov
stos
push
data16
dec
fld
popf
mov
dec
repz
dec
jle
dec
xor
jecxz
popa
lahf
sti
fdivr
and
mov
cwde
inc
fnsave
and
xchg
in
push
clc
or
out
sbb
outs
rcl
pop
stos
out
lea
push
xlat
adc
mov
dec
arpl
movs
mov
mov
jge
mov
ret
lods
jb
lods
sub
sahf
and
rcl
hlt
sub
imul
jb
sahf
fisubr
mov
adc
xchg
jo
call
fwait
add
push
retf
and
sar
and
lahf
xchg
dec
outs
retf
xlat
loopne
pusha
bound
popf
icebp
push
mov
not
mov
push
add
cmps
ret
lods
mov
xchg
(bad)
(bad)
fadd
fimul
arpl
gs
movs
sti
xor
jecxz
xlat
enter
fs
(bad)
dec
imul
push
mov
adc
cmp
add
ds
push
dec
dec
xor
xchg
add
gs
and
fcom
inc
mov
addr16
loopne
mov
fld
test
mov
dec
mov
scas
stos
inc
cmp
dec
hlt
(bad)
enter
mov
sbb
in
movs
addr16
sbb
aad
in
in
mov
mov
xchg
pop
clc
(bad)
mov
pop
xlat
(bad)
out
(bad)
(bad)
outs
fidivr
sbb
sbb
inc
push
push
(bad)
or
or
loopne
and
fstp
xchg
int3
test
adc
push
rol
into
std
fcomp
pusha
jb
iret
addr16
dec
ins
fistp
xchg
and
jb
xchg
xlat
adc
popf
xor
neg
xchg
jecxz
int3
add
cs
xchg
add
or
scas
lods
ss
push
vmread
xchg
rcr
inc
push
adc
arpl
or
dec
movs
mov
cmp
sbb
fbld
or
mov
jae
mov
cmps
dec
and
gs
test
add
(bad)
clc
cli
nop
jbe
shl
mov
cs
(bad)
jo
jl
xor
fs
xchg
daa
das
addr16
call
jle
pop
lea
xor
je
xchg
pushf
pushf
jg
dec
neg
jno
mov
push
jnp
push
mov
mov
in
sbb
dec
rcl
jle
adc
mov
lgs
repnz
fld
cmp
(bad)
lea
sbb
leave
dec
lea
lods
pop
sahf
mov
dec
popf
cmp
pop
jb
frstor
and
enter
test
sahf
xor
cli
sbb
xchg
pop
daa
jne
cmp
jo
push
imul
sbb
jle
stos
push
sub
and
pop
test
add
sti
stc
or
push
inc
iret
cmps
jmp
sub
out
shr
push
(bad)
pop
xor
jmp
je
dec
push
and
pushf
out
xchg
gs
mov
push
add
hlt
inc
mov
xchg
movs
inc
sbb
sub
retf
cli
lea
stos
adc
stos
enter
jl
out
sub
test
ss
mov
mov
lea
pushf
mov
popf
inc
loope
imul
push
icebp
pop
push
or
repnz
add
ret
inc
pop
push
sub
dec
movs
cmp
fisub
cmp
iret
imul
push
jnp
mov
(bad)
(bad)
cmp
and
sub
arpl
(bad)
jge
pop
das
arpl
cmp
jmp
(bad)
movs
mov
or
sub
repnz
inc
mov
sti
mov
out
retf
icebp
cmps
cli
imul
push
or
and
xor
pop
pop
in
inc
nop
test
lods
(bad)
inc
xchg
mov
inc
mov
lock
adc
cmps
xchg
mov
leave
adc
ror
and
pop
inc
lds
in
push
cwde
and
lods
shl
xor
jns
sub
dec
pop
push
xor
xchg
and
mov
xchg
idiv
shr
loopne
(bad)
fmul
push
push
xchg
std
xor
das
and
repnz
int3
fld
in
jne
push
ret
mov
xchg
dec
out
jbe
dec
push
sub
aad
lea
xor
mov
ret
xlat
jg
fcmovbe
xchg
fdivrp
mov
nop
xchg
ins
add
sub
mov
inc
pop
pop
mov
dec
retf
mov
fdiv
data16
push
mov
cwde
pop
cli
in
lods
pop
mov
fdiv
loop
jae
mov
cmp
retf
and
lods
(bad)
add
fld
mov
ins
pushf
cmp
xor
mov
aaa
lods
scas
xor
fcom
aas
call
jae
jl
les
adc
mov
shr
push
into
push
dec
xchg
dec
push
mov
push
and
dec
pusha
cmps
and
pop
cmp
jecxz
dec
xchg
mov
jnp
jle
mov
test
loop
ret
push
addr16
mov
sar
sub
mov
dec
sahf
adc
fdiv
movs
or
cmp
jmp
enter
int3
sub
int3
mov
int
in
dec
cmc
inc
sub
outs
inc
adc
and
jne
mov
std
(bad)
movs
pop
push
retf
sub
mov
cmp
fs
adc
mov
mov
push
or
xchg
sbb
jbe
and
xchg
or
fmul
inc
push
jno
push
xchg
push
pop
fchs
jecxz
call
jge
add
push
fld
push
mov
mov
iret
sbb
pop
jne
jle
popa
inc
push
mov
sbb
add
xor
fst
test
xor
repnz
mov
mov
push
inc
push
ins
or
jb
or
nop
sbb
outs
xlat
(bad)
aas
dec
mov
inc
jle
clc
sbb
loope
pop
repz
fmul
adc
jno
push
push
or
lahf
ret
mov
xchg
lods
ror
call
icebp
inc
pop
(bad)
mov
mov
lea
fwait
(bad)
retf
mov
cmp
sbb
test
push
dec
xlat
add
cld
repz
adc
fisttp
fdivr
popf
xor
popa
mov
(bad)
and
xor
sbb
fisttp
inc
sub
fs
lahf
xor
pop
and
dec
std
js
cmp
cdq
ins
into
mov
xchg
loopne
pop
fdivr
sbb
fcmovnb
lahf
call
xchg
ror
mov
jle
nop
adc
sbb
jne
dec
fild
adc
std
pop
add
retf
add
test
fdivr
xchg
add
sbb
mov
or
xchg
dec
or
xchg
jge
adc
cmp
or
push
in
inc
ror
movs
mov
push
outs
jmp
add
pop
ss
dec
data16
add
mov
dec
xor
daa
icebp
sti
cdq
lahf
xor
or
dec
dec
mov
jmp
xor
nop
out
xchg
hlt
cmp
dec
cmp
jp
std
scas
pop
mov
mov
xor
ror
call
mov
pusha
adc
int
push
or
(bad)
mov
mov
cwde
pop
pop
cmps
neg
fst
imul
shl
sub
xchg
stc
xchg
ror
push
lock
in
push
in
push
fsubr
call
jae
ret
stos
xor
mov
dec
rol
cmps
loop
jg
jge
shr
xchg
ins
ds
cdq
push
dec
dec
fist
or
inc
push
(bad)
nop
ins
inc
test
and
pop
pop
or
mov
cli
cdq
mov
sub
mov
adc
sbb
ins
sahf
sbb
test
push
(bad)
cdq
int
mov
ins
loopne
xchg
aad
in
outs
je
mov
popf
adc
mov
cmp
loop
or
jle
dec
and
pop
and
sbb
jae
xor
hlt
bound
dec
dec
or
inc
lahf
pop
(bad)
jne
fmulp
out
out
repnz
fwait
cld
add
test
pop
arpl
xchg
mov
adc
mov
xor
popf
in
xor
sub
cdq
in
das
adc
adc
mov
xchg
sbb
inc
lea
retf
outs
mov
xlat
adc
fdivr
dec
ror
jle
cmp
test
xor
loope
lods
out
cmc
mov
jle
add
cdq
nop
and
cmp
jge
sbb
loopne
mov
lock
mov
pop
mov
shl
add
xlat
loopne
adc
push
adc
or
xchg
cmp
jecxz
cmp
cmps
sbb
stc
rcl
ret
pop
loope
dec
into
xchg
inc
iret
xchg
push
mov
in
fstp
cmp
and
scas
in
mov
ja
in
jle
cmp
push
add
popa
mov
or
out
add
jns
data16
xor
jns
mov
dec
mov
sbb
jecxz
in
cmps
adc
and
and
and
pop
jl
pop
scas
dec
ret
push
mov
in
cmp
gs
test
jns
and
outs
sub
pop
jbe
repz
daa
mov
xchg
push
or
jl
pop
jle
stos
xor
pop
popf
adc
ins
and
pusha
int3
pop
or
and
push
push
pop
adc
aas
enter
stos
sub
stos
test
jmp
mov
and
inc
popf
and
popf
or
dec
rol
test
mul
ins
add
jg
mov
fistp
movs
lods
mov
(bad)
xchg
mov
sbb
popf
cli
out
addr16
inc
inc
or
pop
data16
enter
iret
dec
mov
fucomip
cmp
std
repz
movs
mov
pop
or
mov
(bad)
(bad)
mov
shl
(bad)
pop
cmp
fucomp
xor
mov
into
adc
mov
fmul
outs
pop
ja
fadd
mov
dec
dec
std
stos
ret
mov
loope
jmp
mov
mov
ror
sub
js
pop
loopne
mov
mov
xor
mov
outs
scas
jmp
xchg
mov
push
fistp
xchg
movs
pop
mov
gs
imul
sub
pop
jb
fstp
mov
dec
and
into
push
je
mov
jne
push
lods
mov
stos
cmps
adc
stos
xor
mov
sbb
lods
mov
call
ret
repz
in
pop
clc
ins
mov
xchg
sub
xchg
fistp
repz
aaa
aad
xchg
pushf
ds
fiadd
out
pop
mov
adc
sar
xchg
mov
out
mul
adc
int3
sar
xchg
test
sti
dec
(bad)
call
into
push
out
inc
test
pop
mov
out
add
or
jl
add
test
pop
imul
sub
icebp
inc
(bad)
int3
jle
cmp
inc
sbb
repnz
pop
pop
xchg
pop
outs
jmp
(bad)
(bad)
mov
loopne
retf
pop
and
push
pop
(bad)
cwde
cmp
(bad)
retf
inc
ret
mov
sbb
mov
cmp
xor
pop
sbb
gs
arpl
sahf
jle
jge
neg
js
mov
and
pop
sbb
cmp
icebp
mov
out
(bad)
push
add
push
push
sbb
retf
xor
mov
and
ret
jg
xchg
xor
jle
mov
in
add
stos
pop
scas
mov
jmp
(bad)
jnp
in
leave
into
cmc
cmp
or
nop
mov
add
jmp
clc
(bad)
mov
(bad)
lock
repz
or
imul
ja
push
mov
xchg
shl
mov
fiadd
not
imul
popf
ds
mov
sub
call
xchg
xor
cs
jo
push
mov
add
dec
fidiv
pop
out
and
mov
sbb
push
adc
add
popf
xchg
xor
inc
or
iret
and
lods
std
xlat
gs
jne
inc
hlt
test
mov
pusha
sbb
add
aaa
fld
mov
cmp
or
gs
adc
test
or
pop
es
jmp
and
outs
pop
sub
inc
nop
cdq
loopne
stc
(bad)
push
in
sub
or
cdq
adc
retf
arpl
adc
out
js
mov
xchg
shl
lock
mov
fild
jb
and
call
clc
xor
loope
push
loop
xchg
dec
xchg
adc
out
sbb
aad
outs
fs
call
div
mov
and
push
xchg
push
xchg
push
or
pop
and
cs
je
dec
imul
xor
addr16
fwait
adc
inc
lock
cld
inc
outs
lods
pop
rol
pop
sbb
cmc
lds
sahf
inc
jmp
jl
lahf
fidivr
inc
repz
inc
neg
sbb
imul
mov
sbb
fild
jns
test
cmp
mov
pop
gs
stos
scas
out
inc
out
nop
push
sahf
pop
(bad)
jmp
adc
aad
or
mov
addr16
gs
retf
in
sub
outs
pop
jo
xchg
scas
lahf
ins
adc
sub
jp
and
std
xchg
push
cmp
pushf
cwde
out
xor
mov
mov
cmps
pushf
scas
jae
aad
test
scas
adc
out
pop
arpl
retf
pop
mov
ror
pop
mov
lea
and
rol
mov
ror
lea
clc
adc
lea
add
adc
in
xor
stos
sbb
fmul
lods
clc
fistp
mov
cmp
call
jnp
adc
mov
cli
add
int
aas
add
sahf
jmp
add
test
movlps
mov
push
sbb
inc
jne
loopne
jmp
cs
cmc
xor
inc
mov
sti
leave
adc
xchg
je
(bad)
(bad)
push
cli
cmc
adc
jmp
push
stos
inc
test
mov
xchg
xchg
scas
movs
push
xchg
and
mov
test
push
cmp
inc
sub
cmp
push
add
sti
repz
push
mov
inc
sbb
sub
into
cli
rcl
or
pusha
int3
rol
pushf
dec
js
jnp
inc
jle
and
and
add
jle
into
clc
jo
xchg
push
(bad)
xor
and
jb
mov
outs
push
rcr
inc
aaa
rcr
(bad)
outs
dec
mov
xchg
mov
inc
ret
or
and
xchg
sub
add
push
aaa
mov
stc
std
inc
and
movs
dec
dec
push
add
inc
lods
jae
scas
neg
and
or
mov
xchg
xchg
dec
jb
adc
sbb
retf
pop
mov
js
xchg
test
mov
scas
outs
clc
jecxz
add
cmp
repz
pop
into
ja
and
xchg
test
jg
push
mov
adc
test
pop
leave
xor
gs
aam
mov
imul
dec
ret
cwde
jg
repnz
std
xor
mov
inc
retf
xchg
inc
inc
or
sub
push
pop
xor
dec
ds
and
add
clc
dec
push
(bad)
jp
call
dec
bound
shl
jmp
add
cli
push
add
and
jmp
jno
lds
inc
leave
and
popf
(bad)
jp
sbb
iret
mov
jle
xlat
repz
push
jmp
fisub
rol
lock
mov
aad
adc
push
xor
dec
sub
les
lods
rcr
call
xor
(bad)
lahf
jo
xor
add
sbb
cwde
ror
inc
ss
adc
pop
leave
das
add
clc
in
movs
in
inc
push
test
sbb
(bad)
mov
and
dec
cmp
enter
pop
inc
daa
in
(bad)
out
mov
cld
addr16
in
cmp
rcl
inc
shl
out
leave
imul
xor
sti
inc
es
jmp
out
sub
ret
push
outs
inc
sbb
adc
repnz
dec
mov
scas
dec
cmps
jmp
outs
add
and
jae
jg
and
add
xchg
push
cs
rcl
movs
in
movs
pop
retf
and
daa
mov
ret
out
loope
lea
scas
sub
movs
hlt
and
inc
xchg
xchg
fldl2t
xor
ret
inc
jmp
scas
or
aas
jl
mov
(bad)
rol
enter
mov
ss
and
fistp
jno
ficom
retf
jg
add
in
add
xor
adc
or
int3
int
xor
call
cdq
gs
popa
in
push
xchg
std
xchg
cmp
fsubr
repnz
pop
pop
call
ins
jle
sbb
xor
call
mov
imul
mov
stos
repz
xor
xor
lods
inc
arpl
inc
sbb
std
lahf
mov
mov
mov
scas
pop
xor
mov
jnp
sub
ins
stc
call
pop
pop
les
sub
mov
in
je
sahf
sub
sub
mov
ret
ret
dec
add
in
clc
inc
add
or
fcom
sbb
inc
not
add
add
xor
xchg
inc
pop
and
adc
imul
cmp
jb
jno
rol
pop
mov
xchg
jnp
ins
mov
in
jmp
icebp
imul
dec
iret
jecxz
ja
inc
out
pusha
mov
sbb
ja
jmp
xor
adc
arpl
cmp
fucomi
or
stos
sub
iret
push
lock
aaa
jmp
sub
push
and
dec
push
and
fs
inc
sub
xchg
cld
fadd
pop
leave
and
pop
push
add
pop
gs
adc
ja
fcom
test
xor
jnp
test
mov
add
and
mov
shl
xchg
mov
add
pop
(bad)
icebp
pop
add
and
mov
and
ds
push
xor
jge
mov
cmps
cmps
push
inc
xchg
cld
mul
mov
jmp
gs
pop
sub
xchg
pusha
fiadd
pop
sub
xchg
mov
cmps
jmp
mov
dec
popf
xor
adc
out
scas
(bad)
enter
push
mov
cmps
icebp
xlat
adc
pop
call
aas
icebp
and
lahf
mov
das
mov
mov
pop
or
mov
rol
test
fnstsw
retf
add
(bad)
lods
jp
dec
xchg
leave
cmp
dec
imul
jo
mov
inc
mov
adc
add
adc
xor
nop
es
stos
movs
xchg
pop
dec
jmp
pop
loopne
(bad)
mov
lea
enter
sbb
inc
lods
js
cmp
jp
cmp
popf
mov
jo
sub
cmp
mov
add
jo
fwait
push
sti
lods
sar
imul
(bad)
mov
and
mov
lea
push
add
jbe
sbb
pop
pop
scas
xor
idiv
(bad)
mov
dec
mul
ins
inc
and
ret
out
std
mov
imul
jmp
cmc
push
jnp
out
and
into
mov
mov
mov
bnd
fidiv
fiadd
ret
sti
mov
in
push
push
test
(bad)
jmp
gs
loopne
retf
pusha
loop
(bad)
jle
xor
mov
push
sub
and
sub
or
jbe
std
popa
stos
mov
ins
add
lea
mov
fild
out
add
daa
sbb
mov
and
pop
xchg
xchg
jbe
jae
sbb
rdmsr
icebp
jp
xor
jp
sub
mov
mov
jecxz
cmps
push
mov
pop
push
mov
add
jbe
nop
loope
out
cwde
jnp
pop
push
and
lea
mov
cmp
in
popf
xor
dec
test
or
cmp
mov
movs
out
stos
arpl
adc
cmp
sbb
mul
cli
adc
push
inc
mov
dec
ds
mov
mov
and
mov
mov
mov
arpl
aaa
inc
test
enter
lahf
ret
inc
aas
cdq
retf
int
sbb
js
cli
stos
cmc
test
lods
int3
addr16
pop
sahf
mov
xchg
cmps
dec
push
dec
stos
sub
jp
xor
cdq
out
xchg
hlt
push
js
xor
jne
popa
addr16
(bad)
shr
cmp
sbb
cmp
popa
fs
test
iret
inc
rcl
jae
mov
pop
scas
setno
dec
das
pop
(bad)
mov
cmc
adc
jae
adc
cmc
dec
ja
fcmovb
imul
add
mov
cdq
movs
adc
shl
xchg
rcr
in
add
mov
dec
sub
dec
mov
popa
clc
fisttp
jnp
(bad)
fsubr
dec
inc
movs
call
jecxz
sbb
mov
imul
push
cwde
repz
xchg
in
mov
jno
inc
push
mov
lea
dec
push
popf
retf
xchg
add
jbe
sbb
fcomp
and
xchg
outs
je
add
repz
adc
and
mov
cmp
dec
push
rol
(bad)
cmp
mul
push
mov
jge
and
cmp
scas
and
retf
or
or
test
inc
sbb
ret
add
pop
daa
shl
jnp
daa
rol
push
mov
sbb
xlat
inc
mov
xchg
jle
(bad)
std
ja
sbb
js
(bad)
popf
sahf
mov
rcl
stc
inc
fidivr
out
nop
mov
sbb
pop
xchg
sbb
mov
loop
out
mov
mov
bound
mov
sub
imul
push
adc
mov
and
(bad)
ror
sbb
push
gs
sbb
and
in
popa
in
retf
cdq
cmp
cmc
mov
out
xchg
add
cmps
pop
mov
shl
pop
int
pop
fdivr
jnp
jl
call
xchg
into
cmp
and
push
jb
test
add
test
aad
xor
and
dec
adc
add
adc
test
jp
and
sub
(bad)
and
mov
sbb
repz
int
jl
in
push
mov
push
xor
call
repnz
fld
mov
aaa
movs
cmp
push
xor
fs
ret
test
and
jmp
jne
pusha
ror
lods
into
mov
retf
pop
xchg
add
in
(bad)
lods
xor
xor
fbld
jle
mov
pusha
cmp
retf
add
xchg
popf
xchg
out
mov
add
add
outs
cdq
push
mov
xchg
mov
in
fimul
int3
div
js
adc
popa
mov
xchg
and
jo
ins
dec
fwait
mov
les
into
add
or
lods
push
sbb
dec
inc
sahf
test
ss
sar
not
out
and
fcomp
or
jmp
sub
fidivr
push
shr
push
sbb
aaa
jbe
cmc
inc
pop
inc
repz
jnp
push
add
xchg
and
add
ror
stos
xor
sub
sub
test
xor
idiv
cmc
adc
mov
mov
mov
sbb
mov
sbb
iret
cmp
sbb
jmp
outs
xor
fidivr
cmp
lock
xchg
aam
(bad)
adc
mov
adc
sti
pop
xor
and
sti
cld
das
arpl
mov
push
cmp
mov
lea
push
lods
inc
or
leave
shl
sub
test
pop
outs
inc
sbb
ret
push
gs
cmps
inc
ret
adc
aam
sbb
mov
inc
cmps
mov
iret
pop
sbb
jp
jns
pop
outs
mov
popa
ror
data16
push
jne
push
jl
dec
cli
(bad)
into
out
in
arpl
push
stos
ds
sbb
ror
inc
push
nop
xor
xor
fxam
inc
pop
add
pop
mul
or
cwde
sub
xchg
fcmovne
inc
inc
mov
mov
imul
je
add
es
cdq
xor
adc
iret
jbe
jmp
lock
jmp
dec
popf
pop
push
into
jbe
mov
loop
lods
(bad)
call
xchg
dec
adc
(bad)
in
(bad)
call
cmp
(bad)
stos
mov
mov
daa
adc
idiv
add
pop
dec
std
shl
dec
jae
dec
sub
add
or
int3
and
mov
bswap
test
xchg
pop
gs
push
pop
(bad)
aas
adc
sar
test
add
dec
xchg
or
jnp
mov
fst
push
cwde
and
sbb
push
push
repnz
in
retf
out
dec
pop
pop
jmp
cmp
std
mov
mov
mov
adc
inc
inc
sub
cmp
addr16
test
xor
cmp
jno
push
and
in
sbb
push
out
fadd
outs
push
cmps
xor
pop
sahf
inc
pusha
add
sbb
(bad)
xor
dec
pop
xchg
out
ins
mov
lods
(bad)
in
fisub
int3
and
push
dec
jmp
cs
fdiv
sbb
loope
jo
sbb
jge
ror
rcl
xor
dec
or
sub
push
cmc
push
call
popf
(bad)
and
mov
push
into
sahf
in
clc
sub
push
mov
push
mov
sbb
sbb
ret
ins
jno
fnstcw
add
adc
push
pop
in
mov
inc
add
mov
sbb
das
popa
ret
mov
inc
pusha
xor
int
jns
leave
out
push
dec
xor
xlat
mov
xor
outs
daa
jb
fcmove
adc
test
into
push
(bad)
xor
add
sub
(bad)
in
jmp
mov
cmp
sub
inc
mov
lods
pop
mov
jecxz
sub
dec
pop
aas
mov
dec
dec
leave
sbb
mov
rcr
xlat
ins
jmp
xor
sub
xor
cmps
xchg
xchg
addr16
pop
mov
inc
(bad)
mov
call
pop
stc
pop
cmp
dec
dec
dec
cwde
sub
leave
stc
push
xchg
dec
rol
shr
js
pop
clc
or
jns
push
(bad)
sbb
mov
push
das
add
ret
imul
hlt
add
iret
sbb
add
rcr
cmp
lea
fmul
ret
rcl
(bad)
jae
add
mov
jne
sbb
pop
mov
cmovl
lods
inc
jmp
adc
not
xchg
std
jmp
ds
sub
mov
xor
mov
aad
pusha
push
out
mov
dec
cmp
cld
test
enter
push
bound
jbe
add
fwait
jecxz
aas
lahf
dec
xchg
sbb
mov
pop
outs
add
ds
pop
cld
push
(bad)
push
rol
dec
add
gs
popf
mov
out
gs
mov
dec
(bad)
in
sahf
add
jb
les
js
add
fbld
sbb
add
stos
xchg
inc
(bad)
xchg
loop
test
or
test
adc
test
lds
stos
push
(bad)
inc
ins
or
into
ja
clc
jge
mov
push
test
pop
lock
shl
or
adc
ss
mov
lea
into
pop
pushf
stos
push
repnz
cmp
and
pop
add
push
aas
dec
push
call
mov
xor
xchg
scas
mov
mov
stos
scas
stc
jl
jp
inc
jbe
loopne
and
lods
or
pop
lea
mov
addr16
retf
jae
mov
inc
(bad)
enter
pushf
mov
popf
(bad)
push
or
fiadd
popa
jae
add
cmp
push
js
scas
mov
ins
and
push
sbb
std
rcl
jecxz
mov
mov
shr
sahf
sub
out
pushf
call
cmps
std
dec
mov
pop
push
test
clc
pop
dec
jecxz
shl
push
add
out
fucom
mov
iret
ret
adc
out
dec
inc
mov
addr16
int3
xor
dec
adc
sub
and
xchg
into
cli
into
jb
es
and
xor
push
imul
xchg
scas
addr16
xor
shr
imul
mov
retf
out
int
pop
repnz
sbb
leave
jg
sbb
leave
xchg
fstp
jne
loopne
sar
mov
in
mul
pop
shl
imul
ret
aas
cmp
js
xlat
imul
cmp
jae
pusha
addr16
out
aam
add
pop
jns
cmp
clc
nop
fisttp
in
(bad)
call
or
push
jnp
add
mov
inc
xor
inc
mov
call
xchg
and
sbb
lods
cmp
jns
out
pop
xchg
fisttp
ds
cmps
lds
xor
outs
sbb
aaa
dec
pop
arpl
jmp
call
jae
aam
or
enter
jmp
imul
xchg
les
jecxz
adc
or
ret
fs
add
dec
push
sbb
movs
xchg
xor
repz
xchg
sti
pushf
aas
inc
xchg
shr
xor
out
shr
mov
mov
jp
push
jno
inc
scas
clc
lds
sub
repz
inc
mov
adc
(bad)
sub
inc
mov
push
cmp
cs
ins
mov
and
jbe
idiv
pop
mov
shl
cwde
dec
aaa
outs
and
push
dec
stos
push
xor
fwait
pusha
mov
das
out
jp
xchg
in
lock
pop
jne
das
outs
loopne
retf
or
imul
shl
inc
and
lock
dec
leave
dec
dec
mov
inc
pop
jno
mov
test
hlt
sub
pushf
stc
pushf
xchg
je
inc
and
mov
int3
fcomip
add
xor
icebp
int
sbb
jns
test
shr
and
dec
inc
xor
jp
in
jne
jge
setge
or
les
xchg
adc
sub
add
rol
fwait
jg
fxtract
imul
(bad)
dec
sahf
hlt
out
leave
outs
or
fistp
push
aad
out
(bad)
pop
sbb
sub
lahf
cld
fidivr
inc
cmp
sub
mov
imul
stc
cmp
(bad)
test
cwde
enter
or
gs
mov
mov
test
and
ss
push
lods
pop
cmps
fldenv
or
sbb
xor
mov
and
sbb
lea
ds
sbb
pop
aad
sub
dec
or
jmp
aas
mov
popa
inc
mov
stos
mov
sbb
inc
jo
nop
rol
lock
pop
iret
imul
je
loopne
inc
xchg
and
ins
mov
pushf
xchg
jp
push
cld
cmp
mov
dec
lds
jecxz
out
stos
addr16
sub
add
adc
aas
fldenv
mov
leave
xchg
cmp
les
pop
sub
(bad)
pop
dec
shr
jp
xchg
mov
dec
loop
push
neg
ror
in
hlt
fsub
add
cli
ret
mov
pop
cmp
cmp
dec
outs
mov
les
mov
aam
popa
pop
ins
icebp
retf
pusha
icebp
inc
clc
loope
mov
jge
mov
loopne
retf
jecxz
sbb
gs
mov
xchg
aas
int3
scas
fstp
outs
add
pusha
pusha
add
and
pop
test
fwait
adc
pop
outs
and
cli
or
push
add
scas
call
popa
jbe
rol
imul
daa
or
jae
mov
rcr
jmp
aad
push
ins
adc
xchg
inc
(bad)
aam
pop
out
and
aam
das
mov
into
in
pop
dec
inc
loop
aam
xchg
test
mov
loop
add
inc
iret
aad
jmp
inc
dec
mov
iret
xchg
mov
add
mov
nop
mov
inc
xor
pop
mov
ss
dec
cli
fwait
dec
mov
into
movs
inc
scas
sbb
out
dec
outs
jge
cli
jecxz
in
add
adc
pop
dec
lds
push
call
mov
sub
dec
ins
sti
mov
(bad)
lods
movs
xchg
addr16
and
cmp
lods
sub
es
jb
out
or
mov
mov
scas
(bad)
mov
jne
pop
aaa
outs
cmp
cli
mov
stos
test
fmulp
inc
cmp
sub
inc
ins
mov
sti
rcl
lahf
ret
mov
push
into
daa
mov
and
loopne
out
sbb
inc
lock
add
add
out
nop
cmp
jmp
pop
jb
dec
xchg
out
call
aaa
jbe
adc
out
inc
jns
mov
add
aam
jne
inc
push
jmp
xor
jecxz
lock
nop
out
fimul
pop
or
psubw
in
cmp
out
sbb
mov
cmp
aas
les
adc
inc
and
stos
ror
push
mov
imul
loop
xchg
cmp
jle
inc
movs
inc
push
xor
stos
cmp
enter
sub
retf
cli
bound
stos
push
jg
(bad)
call
cmc
aad
or
imul
arpl
pop
fs
out
(bad)
pmaddwd
mov
cmp
pop
mov
scas
inc
and
or
in
neg
pushf
in
popa
push
popf
rcr
and
mov
test
ret
jns
push
je
mov
imul
lock
mov
adc
jg
fistp
mov
lea
sahf
mul
ss
push
sub
mov
aaa
and
call
push
fild
pop
add
mov
xchg
pop
clc
mov
xchg
(bad)
fistp
leave
test
push
jns
stos
mov
or
idiv
(bad)
mov
ret
lea
jge
cmp
jns
xor
mov
popf
int3
(bad)
cli
out
(bad)
jle
test
adc
into
cmp
mov
test
imul
xor
jae
pop
ret
lock
push
sub
pop
fldenv
pop
dec
sahf
sbb
outs
stos
inc
scas
imul
and
call
push
loop
xchg
repnz
mov
jns
les
popf
nop
inc
mov
and
icebp
mov
fs
xchg
shl
cs
rcr
pop
or
idiv
adc
popa
and
sub
sbb
imul
inc
cmp
div
in
repz
lahf
inc
inc
jl
jae
(bad)
push
call
add
xchg
daa
pop
fwait
daa
push
jnp
cmp
test
cmp
jmp
add
es
ss
sahf
fwait
xchg
mov
fs
inc
nop
je
xchg
scas
mov
pop
dec
adc
inc
popa
jno
scas
enter
imul
mov
nop
sbb
dec
mov
sbb
jp
mov
or
cmp
jg
jnp
stc
pop
int
mov
adc
inc
and
arpl
pop
int3
les
das
jmp
es
adc
push
jne
(bad)
dec
retf
adc
pop
js
stos
cmp
lds
mov
pop
mov
pop
clc
retf
test
xlat
push
cld
jg
arpl
mov
cmps
sar
mov
mov
ror
pusha
daa
inc
jge
rcr
pop
lea
call
or
inc
cmp
(bad)
repnz
jg
jo
push
xchg
sbb
xor
sub
lods
in
adc
adc
cmp
mov
or
sbb
test
lods
fild
imul
add
jb
push
cmp
mov
sub
jle
les
jmp
out
ins
mov
and
out
jl
ror
push
test
sub
imul
frstor
sbb
cmps
test
fsubr
lea
mov
mov
pop
fwait
pop
and
call
or
pop
cmp
jp
movs
jb
leave
aad
dec
shl
jnp
jp
sti
sub
ret
sub
out
jae
cmp
leave
push
add
xchg
sub
test
mov
inc
shl
icebp
add
dec
pop
fs
fstp
lahf
sub
add
shr
adc
jmp
adc
mov
movs
mov
fdivr
pop
xchg
jp
in
push
add
cs
sbb
jmp
call
pusha
ret
push
out
mov
cmp
or
rol
imul
jg
daa
arpl
std
push
inc
dec
hlt
inc
fs
aam
sets
pop
aas
aam
xchg
test
cmp
in
and
mov
repnz
jo
fistp
popa
sbb
add
jno
adc
push
xlat
jp
leave
ja
or
inc
and
gs
stc
stos
inc
pop
adc
sbb
jb
mov
push
loopne
adc
inc
loope
xchg
(bad)
mov
add
jbe
stc
jmp
or
dec
scas
pause
(bad)
and
in
sbb
pop
and
loopne
mov
push
out
cmp
cmp
rcl
mov
mov
push
mov
push
les
hlt
sbb
rcl
cs
scas
or
inc
xchg
(bad)
retf
lds
pop
nop
mov
sbb
(bad)
adc
test
pop
(bad)
js
jmp
cmp
dec
mov
fdivr
pop
in
inc
add
ss
stc
in
and
and
je
movs
cmp
inc
sbb
aad
or
cmp
arpl
int
sub
ss
ss
pusha
jp
mov
push
add
jg
ins
mov
imul
or
std
shr
(bad)
mov
fcmovnbe
cmp
xchg
fstp
(bad)
std
in
sub
xchg
xor
cs
call
mov
xchg
cld
inc
fldenv
data16
mov
mov
or
lock
aam
test
pop
movs
scas
int
sbb
xchg
pop
and
xchg
call
push
fs
push
cmps
jno
call
xchg
push
ins
adc
icebp
inc
mov
push
mov
pop
jg
sbb
pusha
ficom
hlt
pop
(bad)
movs
mov
repz
scas
fisttp
jp
or
adc
int3
jmp
call
sbb
stos
pushf
mov
rcr
ja
scas
(bad)
bound
and
jae
ret
xchg
push
or
dec
inc
test
push
out
xchg
xchg
cmp
iret
out
mov
ss
popa
mov
dec
mov
jb
loopne
jmp
fs
inc
stos
mov
gs
inc
ds
or
loop
ret
pop
inc
or
mov
lods
sbb
loopne
cmps
mov
sbb
dec
xor
out
aam
mov
call
out
in
or
iret
or
add
repnz
pop
in
inc
movs
push
mov
shl
push
dec
jmp
mov
in
jg
push
ficom
inc
add
cmp
test
outs
or
in
out
js
xchg
leave
call
jecxz
pop
inc
pop
pop
leave
adc
xchg
mov
jp
sub
add
xchg
xchg
mov
ret
inc
je
pop
sti
call
mov
mov
adc
sub
sbb
xchg
daa
dec
mov
cmp
dec
mov
pop
jg
rcr
mov
(bad)
fs
cwde
mov
data16
and
ds
and
retf
xchg
ret
ficomp
ja
inc
lock
in
add
cmp
std
cmc
retf
xchg
ret
cmp
add
dec
pushf
add
push
mov
out
faddp
jmp
push
ja
xor
cmps
add
sub
mov
outs
scas
xchg
inc
cmp
lea
and
jae
dec
popa
pop
cmp
add
sbb
pop
out
jmp
pop
jo
ret
adc
les
jnp
cmc
and
and
xchg
jecxz
cmp
inc
fcmovne
sar
push
pop
dec
pop
or
pop
pushf
sub
popf
daa
fistp
sbb
inc
push
sbb
loopne
dec
sub
adc
clc
add
lea
mov
hlt
mov
mov
push
movs
inc
icebp
(bad)
cmps
test
test
push
xchg
or
push
or
and
cmp
mov
inc
ds
fs
loope
(bad)
retf
dec
outs
add
or
aaa
dec
(bad)
xor
pop
xchg
aas
ins
out
pop
ret
xor
sub
push
ror
sub
aas
add
hlt
mov
ret
mov
cmc
or
dec
dec
pop
jecxz
pop
jg
inc
out
mov
push
xor
stc
push
push
icebp
cld
loopne
retf
sub
movs
es
jnp
mov
add
arpl
into
mov
inc
lahf
and
adc
or
or
sub
mov
ja
retf
lods
shl
mov
fld
out
movs
sub
mov
pop
lods
sahf
fldcw
jl
mov
mov
bound
and
cmp
ss
adc
stos
mov
ins
es
imul
jge
xchg
dec
mov
cld
into
cmc
js
mov
fisttp
xor
pop
sub
je
std
stos
or
das
inc
stos
dec
test
push
mov
enter
test
ret
call
push
cmp
stos
or
and
cmp
add
jmp
ja
inc
enter
jmp
cld
ins
and
push
cld
out
movs
retf
cdq
daa
mov
dec
fwait
retf
ins
dec
ds
lods
cmp
xchg
cmp
pop
pop
add
or
push
or
sub
xlat
pusha
mov
inc
jle
ss
(bad)
sbb
sub
imul
ss
popf
in
or
inc
xor
sub
xchg
fnstcw
push
ja
mov
cs
mov
loop
sub
aam
ret
ror
(bad)
test
adc
pop
push
daa
cli
not
push
faddp
ins
pop
pop
cmp
scas
leave
jmp
imul
in
mov
daa
push
add
call
mov
or
mov
sub
mov
dec
xchg
dec
mov
add
sbb
ss
cmp
cwde
add
xor
(bad)
bound
das
popf
and
stos
xor
inc
mov
push
xchg
retf
movs
mov
arpl
pop
sbb
stos
mov
pop
push
jnp
jmp
jmp
jbe
push
ret
dec
mov
sbb
xor
shl
adc
es
pop
and
sbb
inc
sub
ja
adc
xor
lds
and
jecxz
mov
inc
retf
mov
mov
and
leave
cli
scas
xchg
xchg
push
jne
aaa
(bad)
cmp
sub
fmul
pop
dec
ds
dec
cli
pop
pusha
push
sbb
repnz
cmp
cmp
out
cmp
imul
fwait
in
call
cs
xor
cdq
add
inc
sti
(bad)
lea
mov
mov
stos
adc
ins
icebp
push
jo
cmp
jo
mov
fwait
cmp
ins
push
jae
xchg
sub
or
aas
adc
mov
sub
ins
iret
jno
pop
inc
mov
push
lahf
cmps
iret
not
clc
mov
clc
mov
test
or
adc
or
sub
repnz
lods
in
inc
gs
(bad)
nop
leave
mov
lods
sbb
adc
xor
stc
repnz
mov
iret
out
(bad)
int3
scas
dec
sbb
pop
inc
neg
lock
out
fbld
sub
and
push
adc
shl
mov
cwde
(bad)
push
add
add
push
das
xchg
out
loope
ins
or
cli
fwait
pop
add
or
mov
or
call
fcom
sub
lods
scas
sbb
jmp
push
cld
cmp
movzx
retf
fistp
scas
test
jae
dec
mov
sbb
mov
mov
xlat
pop
pushf
test
xchg
shl
pop
sub
jecxz
inc
imul
aad
mov
jg
aam
(bad)
jge
test
test
gs
xchg
jne
enter
push
iret
mov
xchg
pop
jno
std
mov
lahf
pop
lods
sbb
sahf
cmps
aaa
sub
int3
mov
idiv
pushf
dec
inc
addr16
xchg
(bad)
jle
aam
mov
push
addr16
xor
outs
xor
or
sub
lds
cli
sahf
cmp
fcomi
cmp
mov
rcr
movs
sbb
xchg
test
out
outs
retf
je
mov
and
add
jmp
aam
mov
xlat
bound
call
rcl
add
sub
jnp
inc
xchg
jg
pusha
add
je
cs
push
pushf
out
mov
neg
addr16
jl
scas
loop
loopne
mov
pusha
or
aas
(bad)
and
cwde
cmps
test
and
shr
mov
mov
nop
popf
rcl
pop
aaa
cmp
repnz
shr
jmp
push
inc
mov
sbb
or
mov
loopne
je
xchg
fidivr
ins
xchg
sar
imul
xchg
mov
jbe
jae
and
pop
jl
out
test
movs
xchg
mov
js
mov
imul
repz
add
std
scas
lods
leave
and
std
retf
adc
pop
or
out
cwde
(bad)
adc
push
fwait
inc
rcr
push
jle
loope
(bad)
mov
inc
das
mov
inc
jno
loope
xlat
push
(bad)
xchg
push
xor
in
jb
ret
cmp
push
retf
ret
pop
and
add
inc
stc
pop
push
jns
jl
and
es
fldenv
bound
movs
daa
jae
push
jmp
xchg
xchg
sub
stc
in
inc
mov
cmp
inc
push
out
jmp
xor
std
push
lock
push
inc
(bad)
push
mov
mov
fst
push
pushf
pop
mov
inc
add
or
aaa
dec
dec
sbb
fcmove
sahf
mov
pop
int
xor
lea
int
arpl
mov
js
loope
push
test
ds
adc
mov
mov
jecxz
dec
in
mov
cmp
dec
loope
ja
xchg
push
jg
repz
inc
cmp
mov
retf
jns
loopne
rcr
cvtps2pi
movs
jnp
enter
pop
in
imul
mov
push
add
outs
mov
inc
leave
push
pop
and
cmps
dec
adc
idiv
retf
sbb
or
pop
jo
add
stos
inc
mov
adc
jns
or
sbb
mov
mov
hlt
and
in
jo
and
xchg
call
fadd
sbb
daa
ins
xchg
sbb
mov
iret
xchg
mov
lock
fwait
jne
or
pop
loop
inc
mov
jmp
xor
and
or
sub
ins
lds
fcomp
call
popf
scas
repnz
std
and
jg
rcl
cmp
xchg
inc
daa
jae
lea
fsub
mov
call
scas
add
in
out
xchg
adc
scas
mov
mov
push
fst
and
jg
or
out
int3
aam
xchg
mov
or
gs
in
inc
loopne
lock
mov
xchg
popa
sti
stos
aad
cmp
sahf
jmp
mov
fldenv
mov
pushf
xor
iret
bound
out
dec
dec
pop
xchg
shr
mov
aam
adc
add
mov
adc
test
pop
cs
mov
mov
sub
jo
mov
jge
scas
dec
xchg
mov
and
ds
imul
inc
jmp
mov
pop
jno
ss
dec
es
rcr
push
dec
xlat
(bad)
mov
cdq
add
fistp
push
ret
(bad)
scas
fwait
jmp
loope
push
(bad)
pop
stos
shl
add
jl
cdq
out
ficomp
jns
add
idiv
push
aad
xor
push
dec
xlat
test
rcr
fld
fnstcw
fimul
adc
into
mov
xchg
repz
jecxz
cmps
mov
je
iret
mov
bound
std
xchg
daa
xlat
add
cmp
jp
add
or
sti
(bad)
lods
(bad)
jecxz
lahf
retf
pop
scas
dec
push
cwde
out
add
jg
fdivrp
xchg
sub
jmp
bnd
in
out
repnz
call
jbe
loop
lahf
outs
dec
or
call
add
mov
mov
mov
fcmovnbe
mov
fadd
push
dec
ins
dec
aam
jle
in
jp
sahf
dec
push
and
fs
sbb
adc
ss
or
fyl2xp1
not
push
push
mov
aam
aaa
push
pop
(bad)
vmovss
xchg
mov
push
jne
imul
sbb
(bad)
das
xlat
mov
xchg
hlt
in
mov
addr16
jbe
and
call
in
es
(bad)
out
mov
fiadd
xchg
adc
clc
mov
ins
xor
push
(bad)
sbb
cmp
mov
sti
xchg
mov
jle
out
jg
shl
mov
mov
rcr
xchg
xlat
cwde
out
out
mov
lods
or
push
movs
adc
push
pusha
leave
daa
sbb
xchg
daa
ret
retf
xor
cmp
clc
mov
mov
add
jmp
aaa
push
dec
add
xchg
sahf
adc
pop
movs
add
and
dec
in
cs
lods
sbb
xor
jp
xchg
enter
mov
fmul
jg
sub
mov
cmp
dec
sub
xor
sbb
xchg
popf
jl
push
or
dec
push
cld
(bad)
fistp
(bad)
out
mov
sub
cmc
arpl
ror
std
and
(bad)
sti
lods
inc
imul
jnp
nop
cmp
data16
jg
cmc
sbb
mov
mov
xor
stos
jmp
push
lea
dec
fmulp
loopne
das
inc
aaa
lock
fsub
aas
jl
mov
pop
jg
push
je
xchg
cmp
mov
mov
sub
cmp
sub
xchg
and
stc
stos
les
mov
mov
push
jp
jecxz
cwde
xor
push
test
and
je
adc
mov
into
daa
add
inc
and
mov
jecxz
lea
lea
imul
adc
and
inc
fwait
stc
cmp
popa
mov
out
rcr
retf
mov
xchg
int
xor
imul
(bad)
cmp
sub
sar
ins
xor
mov
in
dec
fs
mov
mov
sbb
add
sbb
xchg
or
cld
jns
pushf
adc
test
xor
dec
sub
pop
or
pushf
mov
inc
test
mov
add
in
mov
cs
mov
daa
test
or
jne
sub
lahf
adc
dec
sub
adc
jno
push
stc
int3
ss
gs
xchg
dec
test
inc
imul
mov
repz
cmp
cmc
cmp
xor
mov
sbb
sub
call
xchg
pop
sbb
popa
jmp
or
push
mov
and
mov
inc
xchg
pop
(bad)
mov
push
leave
out
pop
jp
cs
adc
lds
adc
cwde
sub
mov
in
mov
cmp
test
jno
xlat
cmps
inc
jp
dec
add
(bad)
sbb
mov
push
add
ja
xor
fs
cmp
xchg
retf
es
mov
xor
fdiv
xor
inc
rol
push
add
add
dec
xchg
das
jo
inc
mov
sub
pop
pop
ret
or
jecxz
pop
das
popf
xor
xor
adc
test
sub
cmp
xor
pop
pop
lea
adc
retf
fwait
pop
xchg
cwde
jae
add
or
lahf
push
pop
sbb
retf
xor
pop
pop
or
stos
fdivr
sbb
mov
stc
test
aad
xchg
leave
mov
les
sbb
xor
ins
lahf
pop
sbb
mov
jae
outs
sar
fbld
jnp
in
(bad)
fs
jbe
loop
xor
add
adc
loope
or
mov
dec
test
sbb
push
or
pop
les
mov
sbb
out
sub
call
and
rol
add
xor
test
push
test
pextrw
adc
(bad)
push
adc
pop
jnp
xchg
pushf
mov
push
xchg
lods
and
jnp
add
jmp
lahf
adc
aaa
push
inc
xchg
je
mov
jmp
aad
nop
cs
xchg
pop
mov
cmps
sub
fistp
push
outs
sub
mov
xor
and
and
aas
hlt
add
test
push
outs
add
fiadd
stc
sbb
lea
shl
mov
push
clc
test
mov
and
dec
dec
mov
int
mov
mov
fadd
test
loope
xchg
xchg
pop
jg
xor
pushf
adc
pop
retf
repnz
xchg
or
inc
mov
adc
or
lea
sti
inc
fucomi
ins
out
inc
(bad)
dec
rcr
cdq
out
cli
mov
mov
inc
cmp
push
ficomp
dec
stos
sbb
scas
repnz
sub
gs
mov
mov
sbb
mul
es
mov
fstp
mov
addr16
ins
fisttp
in
dec
lods
inc
icebp
mov
xchg
test
ss
jo
js
xchg
int3
repz
sar
push
les
xor
(bad)
pop
xchg
out
cs
stos
clc
dec
cmp
fisub
hlt
jnp
xchg
mov
ja
push
scas
(bad)
push
mov
fs
add
inc
or
cdq
pop
sub
sub
cmp
pop
jge
in
and
mov
pop
scas
dec
or
mov
pop
push
call
mov
gs
fistp
xor
icebp
ret
mov
mov
repnz
push
sbb
push
or
popf
dec
jne
imul
cmp
in
mov
gs
inc
fdiv
sub
hlt
pop
jle
or
or
and
xchg
adc
loop
ins
retf
pop
leave
mov
sub
nop
cmp
dec
mov
das
push
add
lods
xor
rol
dec
mov
dec
pop
mov
mov
movs
cmc
jae
and
out
jmp
jmp
push
mov
fstp
push
std
ins
jno
add
add
data16
stos
mov
push
stos
mov
jl
lods
ficom
call
mov
mul
retf
call
ds
jmp
push
pop
push
mov
lea
imul
cmps
fiadd
test
fdivp
fidivr
cmp
test
xor
pusha
mov
(bad)
lock
movs
fldcw
xchg
mov
test
pop
mov
and
ja
mov
cmp
mov
cmc
ss
cwde
repnz
push
inc
mov
jae
jle
xchg
dec
(bad)
sub
and
cwde
fidiv
jge
dec
adc
call
sbb
lods
add
sahf
out
stos
outs
pop
dec
adc
cmps
sbb
icebp
dec
adc
call
xchg
leave
mov
and
inc
or
test
(bad)
aad
rcr
xchg
call
inc
frstor
mov
sbb
pop
pushf
mov
icebp
ret
cmp
xchg
lods
outs
xor
jnp
cmps
ins
xor
outs
out
sbb
jo
das
cmp
lahf
adc
jno
push
out
retf
repz
popf
call
fadd
sub
ds
push
cld
out
ds
add
mov
mov
adc
outs
push
addr16
fld
out
mov
je
pop
mov
push
fist
jbe
test
xor
dec
sub
push
jbe
inc
(bad)
sub
data16
in
dec
add
in
imul
cld
mov
mov
out
test
and
mov
jbe
sub
iret
or
mov
ins
add
retf
aas
lahf
sbb
xor
aad
sar
outs
xchg
cmp
inc
fsub
push
xor
mov
xor
ficom
je
popa
jae
push
aas
jle
sahf
dec
enter
jl
push
out
jmp
mov
and
push
dec
sub
adc
dec
lods
cmp
iret
push
data16
mov
out
push
lea
inc
sar
dec
cmp
or
sub
outs
jmp
mov
and
pop
int3
cmps
stos
sub
push
in
(bad)
cmp
fdiv
call
push
adc
or
pop
std
mov
stos
xor
xchg
inc
cmp
imul
dec
shl
or
out
je
and
iret
push
data16
movs
cmp
and
dec
repz
sbb
clc
test
out
imul
or
jno
das
jecxz
hlt
stc
xchg
(bad)
stc
ret
push
adc
ficomp
lods
ret
add
cmc
dec
cli
or
jmp
dec
popf
fsub
xor
enter
aas
adc
push
push
dec
into
cmp
inc
clc
mov
xor
mov
(bad)
cmc
jns
mov
and
ja
add
mov
xlat
mov
(bad)
xor
aaa
jmp
sar
mov
adc
iret
cwde
movs
fs
xor
fwait
pop
repz
outs
out
(bad)
adc
xor
jge
jae
pop
pop
leave
pusha
sbb
xor
cmc
js
sub
stos
nop
lds
mov
repnz
dec
xor
or
mov
xor
push
int3
mov
out
in
int3
int
je
loope
mov
mov
ja
enter
jae
ins
pop
and
das
or
sbb
daa
js
retf
or
dec
xor
inc
pushf
dec
xlat
and
retf
leave
xchg
mov
jmp
push
push
int3
sbb
retf
hlt
sbb
xchg
cmp
out
adc
nop
adc
xchg
sub
jno
in
sahf
ss
test
push
mov
jge
into
jge
cdq
ins
out
inc
mov
je
bound
add
std
je
pusha
add
int
mov
fldenv
std
shr
sub
mov
and
shl
daa
and
ret
sbb
pop
int
rol
dec
movs
pusha
xor
sti
xchg
cli
ins
and
jbe
mov
mov
mov
inc
jmp
mov
and
cld
imul
and
dec
sar
or
jmp
repnz
push
fist
jg
into
loop
scas
xchg
(bad)
ret
mov
mov
inc
ja
push
sub
test
xor
or
or
call
icebp
cld
les
shl
cwde
lock
fs
sar
jecxz
test
xor
fdiv
sbb
fild
inc
push
pop
enter
out
rol
cdq
mov
in
add
sub
push
adc
sub
ja
icebp
fimul
push
add
out
xchg
ror
cmc
push
mov
enter
mov
into
ret
das
sbb
scas
mov
xor
sti
stc
ds
sbb
idiv
jl
inc
or
stc
shl
sar
or
stos
jae
test
push
pop
lods
ss
jmp
je
lock
enter
and
out
inc
push
pushf
aas
mov
fwait
in
jg
repnz
or
sbb
stos
jo
mov
fsubr
out
lea
or
enter
mov
cmp
cmp
sub
xchg
clc
div
shr
fwait
or
inc
gs
inc
mov
sbb
pop
addr16
scas
jno
mov
stc
out
inc
fcom
push
out
pop
mov
mov
sahf
xchg
call
jg
gs
pop
dec
aas
jne
pop
inc
dec
xor
dec
sub
mov
ja
xchg
lock
add
jl
or
cmc
xor
loopne
call
jo
cmp
test
jmp
and
and
adc
iret
mov
(bad)
dec
popf
(bad)
rol
sar
outs
(bad)
mov
jp
or
push
inc
jne
push
not
call
je
sbb
adc
cmc
and
outs
stos
jmp
mov
dec
rcl
xchg
xchg
push
pop
push
sub
add
stos
test
dec
or
pusha
fst
adc
xchg
jmp
popf
pop
mov
dec
mov
xchg
jl
xchg
mov
mul
rol
xor
test
scas
sbb
fcmovb
scas
push
dec
mov
std
xchg
or
std
xor
sub
inc
pop
xchg
xchg
stos
leave
cmc
adc
test
popa
cmp
sbb
stos
jnp
adc
jbe
jmp
mov
stos
fwait
pop
scas
and
mov
dec
sub
stos
push
pop
test
mov
mov
aaa
fsub
loope
popf
aad
arpl
xchg
daa
fsubr
or
or
in
mov
add
adc
dec
inc
rol
test
adc
and
into
out
ficomp
repnz
dec
add
(bad)
shl
pushf
aam
and
sub
dec
dec
jno
xchg
xchg
sub
out
mov
add
xor
pop
adc
mov
or
xchg
lods
lods
outs
fld1
not
push
cdq
int
xlat
sub
add
clc
fdiv
adc
push
lock
mov
retf
sub
fucom
loope
jmp
pop
xchg
mov
in
or
adc
sub
shr
fmul
mov
loopne
ret
test
xchg
mov
adc
sbb
push
rol
and
in
pushf
jge
xchg
adc
fwait
jle
xor
cmps
fbld
fiadd
xor
add
push
add
movs
mov
jbe
ja
fadd
neg
sbb
and
(bad)
or
xlat
or
push
(bad)
in
jge
out
aaa
sbb
outs
add
mov
inc
inc
dec
mov
sbb
in
xchg
in
cdq
mov
sub
dec
scas
dec
(bad)
aam
sub
outs
sahf
aam
cld
or
inc
ja
push
dec
fadd
inc
jle
mov
mov
jmp
cmps
mov
dec
aas
dec
in
into
mov
sbb
mov
mov
push
movs
daa
inc
int3
cvtps2pd
lods
dec
push
mov
mov
xchg
jl
adc
test
mov
xor
mov
arpl
fimul
mov
pop
mov
pop
js
push
(bad)
fnsave
das
cmp
sub
add
sub
jl
out
dec
add
movs
mov
xchg
xor
sub
jp
sub
in
mov
xchg
call
jne
mov
adc
jl
rcr
jle
push
sub
jns
add
aam
iret
adc
clc
rol
jne
inc
jne
mov
cmp
(bad)
pushf
ins
aaa
push
shr
(bad)
adc
or
rol
add
iret
and
mov
cmps
movs
fisubr
sub
scas
inc
dec
sub
out
cld
mov
test
or
and
mov
sub
inc
call
mov
aas
jp
iret
mov
or
pusha
mov
sbb
pop
cmp
xchg
sub
add
in
cmp
cmps
pushf
cmps
jne
adc
or
dec
push
je
es
imul
aaa
jb
jne
mov
push
es
jnp
cdq
jne
xchg
leave
in
test
mov
jg
inc
in
cwde
sbb
jo
sar
stos
or
xchg
mov
stos
xchg
cmp
sub
xor
in
fcmove
pop
into
(bad)
cwde
add
ins
and
push
cmp
cmps
pop
push
mov
jno
popf
(bad)
mov
add
popa
dec
out
outs
test
xor
retf
xchg
nop
push
cwde
lahf
jmp
mov
shr
adc
loop
call
pop
int
(bad)
cmp
in
push
fiadd
mov
daa
jg
mov
fidivr
xchg
icebp
mov
jg
xor
push
mov
push
ror
hlt
cmp
lahf
xchg
jl
vpshufd
aaa
xor
add
out
cmp
(bad)
inc
scas
cmp
xor
jb
add
mov
or
inc
sbb
and
push
les
mov
mov
inc
lahf
mov
xchg
scas
aad
in
nop
xor
xor
test
cmp
bound
dec
cmc
mov
dec
iret
loopne
out
mov
or
idiv
or
dec
lock
in
xor
pop
pop
bound
adc
jb
jb
push
push
jb
or
rcl
lods
mov
push
das
scas
and
pushf
xor
iret
out
ja
daa
call
adc
xchg
lahf
jnp
(bad)
xchg
(bad)
(bad)
mov
imul
cdq
movs
push
fcomip
mov
not
clc
jnp
xor
inc
popa
lock
mov
lods
stos
cmps
xor
adc
cmp
fs
push
outs
ja
retf
mov
lds
xor
cmp
xor
mov
mov
sub
xor
(bad)
sub
(bad)
gs
aam
call
mov
add
push
fwait
pushf
ja
(bad)
jg
(bad)
pop
aad
fnstsw
jne
mov
push
jae
and
ins
shl
xchg
jnp
out
ror
mov
pop
jae
(bad)
aas
and
aad
sbb
or
inc
sbb
retf
adc
push
xor
sbb
ret
loopne
out
and
shr
int3
icebp
dec
imul
scas
aas
cld
mov
cdq
mov
sti
xchg
pusha
sbb
in
ror
add
or
aad
pushf
lahf
into
aad
xchg
mov
lock
fwait
or
movs
cwde
stc
or
or
mov
mov
pop
xchg
int
pop
(bad)
or
xchg
mov
cwde
inc
pusha
dec
push
or
cld
jb
inc
arpl
sbb
jg
mov
movs
iret
stc
(bad)
ins
jmp
scas
loopne
mov
dec
mov
shl
in
(bad)
(bad)
aas
jecxz
es
sbb
sbb
mov
xor
into
(bad)
out
fdiv
int3
and
mov
sub
retf
cli
jl
loope
outs
aas
add
or
pop
out
pop
test
cmps
pop
push
repz
add
outs
ins
mov
jo
call
fnstenv
dec
xchg
or
sti
mov
cmp
outs
lods
gs
movs
or
retf
jae
cs
nop
fcomp
jmp
add
sahf
add
test
test
jo
cmps
(bad)
sbb
mov
shr
dec
push
cwde
clc
add
adc
mov
mov
mov
lock
xchg
nop
addr16
test
in
push
lahf
dec
inc
scas
jnp
mov
das
cmc
cmps
and
mov
cli
adc
xor
cmp
ja
jmp
call
mov
stc
xchg
enter
fwait
pushf
aas
retf
out
push
mov
lock
inc
sbb
lahf
push
jo
inc
mov
inc
mov
or
ins
adc
fnstsw
test
pop
(bad)
jno
xor
and
mov
inc
ror
mov
xchg
push
iret
jmp
ds
mov
pop
jae
call
ret
rol
shr
(bad)
push
pop
loope
sbb
cwde
mov
or
es
xor
leave
(bad)
pop
imul
test
shl
mov
and
push
scas
adc
mov
popa
adc
movs
stc
or
ret
jmp
xlat
push
outs
gs
(bad)
(bad)
push
sub
cmps
jge
jo
pop
je
mov
or
clc
adc
push
xchg
iret
jnp
push
add
je
cmps
ret
loopne
(bad)
push
cmp
cmp
adc
faddp
xor
mov
push
ins
das
xchg
xchg
sub
out
push
(bad)
hlt
lods
and
or
sbb
push
adc
outs
xor
jmp
jp
push
jp
iret
push
stc
sbb
(bad)
cmp
pushf
pushf
cmps
and
jge
pop
in
fist
out
cdq
fisttp
jmp
lahf
mov
neg
xor
(bad)
jno
mov
push
daa
lods
rcr
sub
adc
push
lods
in
fcom
mov
out
icebp
daa
pop
mov
or
cmp
pop
nop
lds
hlt
sub
movs
in
and
inc
mov
sbb
ss
dec
push
je
lods
movs
lods
in
pop
sbb
xchg
test
fimul
xor
ja
cmp
out
sub
daa
pop
div
sbb
(bad)
jg
je
cld
sti
push
stos
js
arpl
mov
(bad)
cmp
(bad)
push
add
cmps
xor
pop
sub
pop
dec
push
sar
pusha
pop
xchg
push
dec
fild
sub
iret
daa
lock
push
dec
xchg
enter
xchg
jle
cmps
push
in
rcr
or
or
dec
lods
jae
call
pop
or
out
sub
xor
(bad)
mov
mov
xchg
cld
sar
imul
cmp
test
(bad)
adc
jg
and
ja
mov
arpl
and
xor
xchg
cs
int3
jg
mov
cmps
in
repz
xchg
iret
loope
mov
in
mov
jno
aad
push
push
int3
mov
and
cmp
mov
je
ins
adc
rol
loop
xor
mov
sbb
mov
out
or
out
sahf
cmp
scas
cmp
lahf
sahf
stc
pusha
sbb
dec
push
sub
push
pop
test
inc
jno
sbb
sahf
fcmovne
clc
jmp
in
(bad)
loope
outs
jb
mov
sbb
popf
cbw
adc
ds
pop
popf
ja
sbb
adc
cdq
outs
out
sahf
cmp
nop
ss
or
loopne
imul
pusha
xchg
ret
jmp
(bad)
pop
js
ficom
sbb
arpl
rcr
mov
mov
mov
ins
movs
sar
xchg
outs
(bad)
iret
xor
jl
pop
leave
cmp
xor
popf
sub
mov
pop
inc
push
pop
push
mov
xchg
je
push
repnz
repnz
push
mov
imul
es
and
sbb
shr
shl
or
cmp
jbe
or
jno
imul
fucom
jnp
inc
cmp
jo
es
pop
into
les
push
pop
cdq
jns
call
fwait
mov
sahf
cdq
out
mov
aaa
(bad)
jg
sti
and
sub
mov
cli
call
ins
in
jne
and
jbe
test
jno
movs
mov
popf
jo
aaa
in
pop
cmp
add
cmp
movs
in
cmp
movs
jo
adc
sbb
lods
inc
test
or
add
jno
(bad)
shl
test
sbb
ja
rol
push
cmps
push
stos
and
aaa
lods
xchg
push
je
xor
mov
and
(bad)
and
sbb
lock
lahf
stos
or
jne
mov
and
cmp
sub
aad
xlat
mov
popf
pop
mov
xor
jae
and
fldenv
gs
inc
mov
fldcw
adc
pop
pop
pusha
stos
aam
mov
cmp
xchg
inc
mov
xor
sbb
jb
cwde
inc
or
and
fisubr
int3
and
and
std
js
push
cld
inc
(bad)
sub
add
lahf
fwait
repnz
(bad)
loope
xchg
push
mov
enter
(bad)
idiv
mov
or
test
jge
adc
cmps
js
aas
sub
pop
pusha
sbb
dec
outs
or
and
repz
xchg
or
test
sub
dec
jge
push
fs
stos
push
in
jmp
mov
push
cli
inc
sbb
push
jns
movs
pop
sub
jns
inc
mov
jns
inc
mov
sbb
ins
pusha
js
dec
sbb
add
sub
in
sar
pop
push
popf
es
mov
jb
xor
sub
sub
sub
mov
pop
aas
jle
mov
cmps
ja
mov
sbb
movs
mov
jg
(bad)
pop
and
jl
mov
push
dec
push
mov
call
icebp
ins
inc
xor
fisub
(bad)
and
lods
pop
push
ror
das
fimul
inc
cld
(bad)
dec
pop
call
jo
cmp
push
hlt
pusha
mov
fmul
mov
fsub
(bad)
not
inc
lods
add
pop
ud1
inc
mov
loope
add
xchg
test
push
pop
popa
and
in
mov
dec
mov
jp
and
sbb
dec
pop
pop
dec
push
or
dec
mov
inc
adc
lock
mov
pop
lock
nop
push
ds
mov
mov
and
mov
aad
push
jns
arpl
mov
inc
sbb
pop
out
jg
es
fild
and
dec
sub
inc
xchg
dec
mov
fmul
pop
call
adc
sub
mov
xor
add
and
and
sub
adc
mov
jmp
fs
js
mov
and
pop
inc
adc
sbb
push
mov
inc
pop
push
outs
fistp
cmps
jecxz
ror
cmp
jmp
sahf
xchg
jge
aaa
movs
enter
or
jp
repnz
mov
pop
jnp
repz
lahf
add
sub
sbb
iret
aad
das
jb
dec
jmp
pop
mov
int
fistp
push
push
aad
xchg
pop
adc
lds
sbb
loopne
not
inc
push
and
test
lock
les
pusha
sub
div
cmps
fmul
xlat
xchg
fisub
mov
jmp
mov
jne
mov
shl
mov
(bad)
or
pusha
nop
push
xchg
out
pusha
push
push
or
mov
mov
xchg
out
in
pusha
test
or
cmp
inc
xchg
shl
dec
inc
fucom
mov
out
aad
jns
mov
movs
dec
mov
idiv
lock
hlt
rcr
pop
push
jecxz
xchg
fcomp
repz
adc
add
xchg
mov
repz
stos
push
rol
ret
repnz
push
call
mov
or
cmp
dec
cmp
sub
push
outs
dec
dec
loop
js
inc
push
nop
shl
test
inc
xor
jbe
push
daa
push
sub
push
cwde
or
imul
dec
int3
cmp
pop
sub
pop
cmps
clc
or
push
add
aad
add
mov
mov
jo
jecxz
gs
stos
push
jne
div
(bad)
aad
jmp
mov
sub
ss
jae
imul
and
or
(bad)
outs
shl
es
fsubr
add
jecxz
and
cmp
jb
ret
dec
mov
xlat
fidivr
add
and
mov
stos
sbb
popf
jnp
popf
inc
call
lahf
dec
sub
or
inc
jmp
jp
cli
pop
jne
and
mov
or
addr16
in
dec
ror
imul
out
jbe
mov
pop
ret
mov
pop
ret
inc
mov
cmp
es
sbb
pop
popa
add
(bad)
mov
rol
adc
aad
push
mov
dec
in
pop
jns
pop
call
pusha
dec
jp
xor
adc
mov
xor
pop
mov
sub
or
mov
dec
push
pop
push
sub
lods
cmc
mul
pop
sbb
xchg
pop
sbb
out
mov
and
mov
or
into
cs
repnz
or
out
mov
and
js
cmp
leave
jno
pop
mov
lock
(bad)
sub
ja
shr
push
jp
sub
sti
dec
push
out
ja
test
leave
sub
imul
(bad)
cmc
and
sbb
jmp
sub
xor
sub
psrlw
mov
mov
xor
mov
cmps
inc
ins
mov
push
sub
ficomp
and
or
xchg
outs
sbb
test
mov
loop
clc
ds
sub
jbe
push
adc
fstp
es
add
and
jg
loopne
xchg
cmc
jmp
or
(bad)
adc
cmp
sar
ins
ja
xchg
mov
fild
ret
mov
loopne
in
fs
test
stos
jmp
clc
mov
cs
hlt
sbb
sub
dec
lea
or
in
dec
or
xchg
fcmovb
fdiv
sub
iret
inc
repz
fwait
repz
rcl
push
xor
inc
in
(bad)
jg
jmp
mov
popa
mov
jmp
fwait
xchg
sub
mov
jne
pusha
iret
push
adc
cs
popf
test
push
das
dec
mov
jmp
in
mov
xchg
aas
jne
sbb
jg
mov
(bad)
xchg
(bad)
repnz
addr16
scas
xchg
jmp
fwait
dec
stos
in
cli
inc
xor
sbb
adc
jecxz
outs
xchg
push
xor
mov
imul
shl
pop
int
int3
movs
mov
mov
dec
iret
mov
jbe
rol
aaa
or
cmp
fistp
jae
repnz
xchg
push
and
add
idiv
in
pop
xchg
mov
(bad)
in
adc
and
jmp
mov
test
mov
icebp
mov
dec
pop
sub
pop
std
dec
shl
hlt
test
adc
addr16
cmp
mov
out
popf
pop
xor
enter
arpl
xor
je
pop
lock
mov
fcmovu
cmp
sbb
movs
shr
arpl
js
stos
mov
adc
mov
push
xchg
out
test
cmps
test
imul
push
retf
aaa
mov
mov
mov
mov
pop
in
jmp
popf
jmp
and
shl
pop
outs
(bad)
push
mov
jl
(bad)
adc
xor
xchg
in
and
and
jo
(bad)
adc
and
repnz
cdq
cmp
sbb
aas
and
cmps
xor
mov
jbe
xor
(bad)
leave
sub
cmps
jnp
ja
mov
cmps
sbb
push
mov
push
int3
pop
movs
pop
in
arpl
sbb
ja
cmps
add
call
sbb
sbb
aas
dec
bound
jmp
cs
jp
add
pusha
and
mov
shr
ins
xchg
fbstp
mov
lahf
js
adc
jne
sub
mov
dec
adc
inc
dec
pop
sub
jno
push
push
cmp
xlat
inc
les
fmul
(bad)
into
cmp
xchg
add
lahf
xor
test
sbb
(bad)
je
rcr
and
xlat
mov
jnp
ds
jns
mov
dec
cmp
pushf
call
adc
mov
cmp
mov
jg
jge
iret
jno
in
push
ror
repnz
lods
sbb
hlt
xchg
pusha
(bad)
mov
nop
xor
add
inc
retf
js
mov
mov
(bad)
fcmovne
(bad)
mov
adc
ret
push
dec
adc
popa
(bad)
adc
fmul
fucomip
push
push
call
add
adc
adc
(bad)
sub
out
sbb
adc
out
fstp
out
daa
sahf
dec
data16
cmp
call
daa
pusha
add
jnp
cmp
sbb
fcmovu
mov
inc
dec
and
jle
xchg
inc
pop
loop
push
imul
lods
xchg
dec
sub
clc
out
jmp
gs
addr16
inc
pop
adc
and
dec
and
pop
ret
add
push
test
mov
pop
lock
or
mov
cmp
fistp
jmp
shl
or
pop
adc
sahf
dec
xor
retf
pop
aaa
and
(bad)
pop
std
jmp
mov
push
ja
or
or
add
sub
mov
movs
popa
mov
dec
cmp
ret
adc
pop
dec
mov
mov
jne
leave
push
shr
sahf
into
into
rcl
fwait
cmps
cmp
sub
das
loopne
jbe
jmp
xor
lahf
jle
inc
mov
aad
inc
pop
clc
add
and
pop
mov
adc
outs
out
cmc
scas
das
sub
rol
sub
je
repz
mov
cmp
xchg
or
fldcw
cli
ds
clc
or
or
mov
jnp
push
mov
mov
lahf
inc
pop
pushf
pop
fsubr
ror
cmc
mov
lea
or
movs
pop
xor
inc
pop
pop
aam
ss
ret
cwde
fsubp
popf
rol
cmp
xchg
adc
not
loopne
aad
pop
(bad)
or
fstp
push
gs
jb
mov
push
in
fldcw
xchg
ret
mov
movs
out
xchg
mov
aam
jnp
fisub
inc
jo
inc
js
sar
sbb
add
enter
sbb
mov
mov
cld
inc
nop
cmp
outs
out
inc
inc
cmp
push
jnp
in
test
scas
cld
stc
xchg
push
lods
clc
pop
mov
pushf
fstp
jno
inc
mul
cmp
arpl
call
jne
jb
mov
dec
dec
lock
mov
retf
push
push
jno
sbb
stos
cmps
jns
imul
jns
cmc
repnz
ss
mov
jle
(bad)
lods
test
or
ret
cs
je
sbb
jo
sub
cs
sub
add
ss
movs
fcmovnb
mov
mov
add
ins
mov
fwait
int
inc
js
cmp
pop
(bad)
mov
sub
hlt
add
xor
js
ror
fdivr
jge
out
sub
ins
rcl
leave
fistp
xchg
mov
jmp
push
jp
pop
inc
fld
test
dec
outs
lds
xchg
sub
jmp
in
test
shl
hlt
ja
xchg
mov
inc
fcom
ja
(bad)
push
cmc
xchg
xchg
cmc
ja
rcl
bound
cmp
repz
in
ss
leave
sahf
dec
lea
inc
mov
jecxz
outs
std
arpl
jl
in
mov
into
cmc
leave
call
data16
sbb
mov
xor
dec
push
mov
imul
(bad)
imul
inc
movs
mov
xchg
fist
je
ret
add
push
xor
aaa
inc
je
jp
cmps
or
jo
outs
pop
push
mov
mov
cmp
jbe
jl
sbb
iret
jmp
outs
push
lea
pop
mov
pop
addr16
cmc
ud1
mov
xor
mov
xchg
inc
lods
in
jnp
push
mov
div
shr
xchg
out
addr16
ds
retf
(bad)
xchg
inc
out
xchg
sbb
pop
fistp
cmp
dec
cmps
rcr
retf
test
stos
xor
xchg
cld
xchg
jl
sub
lock
jbe
pop
out
dec
xor
mov
pop
cwde
clc
and
pop
sub
jnp
stc
pop
in
adc
pop
adc
add
mov
(bad)
jp
inc
cmp
inc
push
push
xchg
sub
push
pop
pusha
cmp
mov
sbb
push
pusha
clc
dec
cmps
jle
jne
mov
add
xor
cmp
dec
leave
dec
add
sub
adc
call
je
cmc
stc
mov
or
xor
test
xchg
dec
cmps
jnp
sbb
push
in
std
adc
daa
inc
mov
xor
mov
cmp
or
call
mov
jmp
push
outs
dec
push
jmp
not
pop
stc
sbb
sbb
pop
shr
dec
test
jmp
lahf
nop
call
cmps
inc
xor
add
sti
pop
pusha
pop
mov
jle
rcl
dec
push
jmp
jb
adc
aas
bound
test
dec
mov
xchg
call
jl
shr
mov
xchg
aas
jecxz
inc
lods
xlat
cdq
std
shl
outs
repz
or
dec
outs
hlt
mov
stc
xchg
mov
cmp
cmp
loop
nop
add
xchg
jp
xchg
lods
push
stc
pusha
adc
jmp
cmp
in
loope
rcl
dec
pop
mov
add
inc
in
repz
fistp
outs
mov
pop
(bad)
dec
mov
push
sub
add
sbb
popa
pop
lea
pop
xchg
xchg
sbb
dec
mov
(bad)
fst
dec
test
pop
shl
cmp
aas
ss
jp
scas
inc
or
or
mov
mov
jb
fsubr
aaa
les
dec
mov
retf
inc
add
mov
push
aas
bound
pop
xor
scas
in
jae
std
bswap
xor
xor
je
out
add
xrelease
scas
sbb
xchg
cmps
cld
fidiv
stos
xchg
jns
dec
xor
jmp
loope
xor
and
iret
loop
emms
xchg
push
test
pop
test
adc
(bad)
test
and
retf
jmp
nop
sar
rol
call
sbb
mov
add
mov
std
or
ret
cmp
jecxz
(bad)
shl
and
sar
ret
push
shl
cmp
(bad)
rol
addr16
jecxz
push
loope
fdiv
(bad)
dec
ja
in
test
in
shl
pop
cmp
push
push
push
sbb
pop
imul
or
cmps
mov
sub
je
mov
push
sub
test
fst
test
mov
ss
sbb
xchg
dec
pop
shl
sub
or
or
stc
mov
(bad)
in
lea
pop
push
cmps
addr16
mov
sbb
push
or
push
pop
pop
jge
xchg
popf
outs
aad
cmps
jmp
popf
xor
pushf
and
mul
mov
aam
push
jb
jno
mov
jmp
mov
frstor
pop
adc
dec
in
pop
or
bound
mov
push
addr16
mov
dec
cli
push
pop
nop
iret
cmp
mov
clc
mov
mov
les
das
loop
push
bound
out
ret
(bad)
movs
jo
call
jl
mov
cdq
rcr
leave
sbb
nop
in
out
clc
or
mov
dec
mov
and
mov
pop
sbb
popf
(bad)
mov
inc
xchg
sar
pop
js
enter
stos
mov
add
mov
push
ins
add
inc
scas
mov
lahf
repz
call
adc
mov
pop
mov
sbb
shl
pop
jp
fmul
jge
xchg
and
adc
xor
sub
mov
ror
xlat
pop
inc
mov
inc
mov
pop
jmp
mov
mov
icebp
pusha
iret
mov
jb
push
idiv
vphsubdq
mov
pop
xchg
cmp
jo
movs
xor
adc
dec
sahf
dec
ds
mov
jbe
jecxz
movsx
ficom
and
ins
inc
fdiv
push
(bad)
or
adc
xchg
pop
mov
call
retf
sbb
and
or
push
test
mov
fs
sar
lock
dec
cvtpi2ps
mov
lea
imul
jecxz
test
xchg
adc
loopne
or
stc
repnz
push
jae
jle
mov
sbb
movs
aam
xor
fsub
xchg
pop
mov
adc
add
shr
push
cli
sub
out
int3
adc
xchg
xchg
xchg
fsubr
cmps
or
inc
sbb
rcr
pop
sub
arpl
pop
cdq
popf
mov
js
sbb
cli
lahf
test
xchg
xchg
adc
push
(bad)
jnp
sbb
and
shl
sub
push
xlat
aad
in
mov
or
fild
inc
xor
inc
dec
cmp
push
cmps
stos
sbb
clc
(bad)
mov
popf
dec
mov
dec
adc
ja
ficom
pop
dec
in
sub
dec
not
lahf
(bad)
and
and
xor
mov
or
lea
inc
jno
loopne
out
jp
mov
xor
mov
pop
push
je
(bad)
out
imul
ror
sahf
xchg
adc
cdq
pop
std
jb
into
fdivr
xchg
mov
sub
mov
daa
xchg
mov
xor
fstp
fimul
test
repz
or
cwde
sub
stos
push
dec
jmp
and
sbb
das
add
pop
add
repz
(bad)
iret
mov
in
ds
dec
mov
jg
aas
test
je
or
ja
jg
pop
(bad)
and
clc
shl
mov
loop
and
test
cld
fs
mov
push
add
mov
mov
and
fdivr
inc
add
data16
shl
sbb
ja
and
arpl
sar
mov
dec
outs
rcl
sub
xchg
into
in
inc
mov
rcr
dec
pop
cmps
bound
add
repz
sbb
aad
xchg
in
ins
cmp
xor
add
xchg
xor
fs
imul
call
adc
dec
cld
imul
add
stos
xor
push
xlat
(bad)
(bad)
mov
or
test
mov
movs
loop
pop
ins
push
in
pop
jb
mov
xor
js
ds
sub
mov
aam
retf
ror
lds
cli
mov
cmc
sahf
lock
ret
mov
xor
and
mov
adc
in
jbe
sbb
shr
add
push
xlat
pop
jb
mov
sbb
stc
inc
cmp
dec
aam
mov
ret
fld
xchg
ret
pop
ret
ja
add
rcr
leave
jmp
cmp
shl
adc
(bad)
sub
xor
or
shl
out
add
or
popa
dec
ds
push
jmp
jno
popf
loope
xor
div
sbb
sub
cld
stos
inc
lods
popf
pop
and
jae
cmp
add
jmp
xchg
out
or
fwait
stos
push
fidiv
mov
mov
cdq
jmp
or
mov
adc
pop
jns
jle
cmp
pop
imul
add
mov
cmp
pop
jp
dec
xchg
cmp
and
popa
ror
cmp
pop
in
xchg
adc
jl
lea
loopne
movs
add
out
xchg
dec
push
dec
pop
jno
mov
sub
out
aam
mov
in
xchg
and
das
dec
lods
leave
push
add
imul
mov
mov
mov
lahf
jg
cmc
pop
fsub
out
sub
jle
les
mov
xchg
push
mov
stc
movs
loop
clc
jne
adc
dec
push
xchg
pop
fcom
sbb
inc
xchg
inc
jae
or
jno
pushf
dec
mov
retf
aam
aaa
jo
out
movs
add
punpcklwd
mov
int3
add
jmp
popf
(bad)
test
fimul
push
loopne
inc
fwait
test
loopne
sub
lahf
mov
dec
push
shr
push
test
adc
inc
xor
call
retf
mov
pop
fstp
pop
aaa
push
popf
(bad)
ins
xchg
dec
es
es
push
jns
or
push
sbb
jp
cmp
cdq
fucomp
(bad)
neg
jmp
xchg
cwde
stc
or
leave
jns
(bad)
pop
cmc
mov
push
adc
gs
std
fldln2
test
dec
ins
push
les
lds
mov
jae
cmc
repnz
xor
call
jae
jb
outs
bound
mov
bound
jbe
jne
repnz
mov
pusha
dec
addr16
and
adc
dec
mov
ins
lods
mov
or
sub
jmp
and
test
sub
fist
test
sbb
ror
fadd
or
in
js
retf
inc
mov
jp
pop
cmp
add
loope
movs
xchg
lock
mov
cmp
aad
movs
test
test
jg
pop
aas
shr
xor
(bad)
mov
jg
mov
xor
loop
push
(bad)
aaa
jbe
inc
jne
dec
shl
mov
sbb
jo
push
inc
jo
iret
cld
(bad)
adc
cmps
jno
std
mov
adc
xchg
adc
in
xchg
cld
jmp
jo
or
mov
(bad)
loop
inc
mov
cmp
jle
call
dec
stos
mov
xchg
mov
data16
(bad)
test
push
nop
icebp
std
iret
sbb
out
cmps
jecxz
in
sbb
add
push
stc
cmps
or
jl
or
cmp
cmp
mov
xlat
(bad)
xor
pop
pop
add
mov
bound
shl
clc
sub
loope
adc
aam
mov
jge
sub
dec
add
inc
push
inc
(bad)
gs
in
add
push
sbb
adc
leave
jno
push
adc
jg
or
or
fist
iret
mov
scas
inc
mov
sti
mov
enter
pushf
fs
scas
mov
jle
mov
mov
or
cmps
pop
jl
outs
jnp
mov
out
iret
popa
sub
inc
hlt
shl
(bad)
dec
stos
inc
in
es
pop
and
xchg
dec
sub
popa
addr16
data16
xchg
push
add
add
jge
mov
out
push
adc
xchg
fwait
mov
fwait
push
out
sbb
pop
retf
inc
sub
adc
dec
and
and
inc
imul
inc
in
mov
leave
out
mov
fadd
cdq
push
fdiv
jmp
mov
call
stos
cld
xchg
xchg
xchg
sub
pushf
cmps
bound
loop
xchg
mov
test
rcr
test
outs
jp
jae
and
pushf
sar
mov
mov
aad
mov
cdq
lea
sub
cmps
xchg
lock
and
push
and
rol
jg
xchg
pop
(bad)
std
fstp
xchg
jns
dec
xchg
pop
cmp
sub
jle
rol
cmp
(bad)
jmp
mov
addr16
dec
jge
push
ja
jno
shl
push
sbb
out
mov
(bad)
shl
mov
test
not
xchg
dec
dec
xor
push
je
pop
sbb
lods
cmc
mul
mov
call
gs
lods
mov
dec
jbe
add
sahf
rol
and
pop
gs
mov
push
xor
pop
adc
gs
lods
stos
sbb
jne
sbb
mov
test
(bad)
push
push
or
faddp
test
fwait
cdq
cdq
das
lock
xchg
(bad)
ret
in
mov
cmp
sbb
test
sub
lods
bound
and
sti
dec
xchg
and
jae
or
add
test
arpl
or
mov
sbb
jp
lds
cld
into
test
daa
and
add
jl
cdq
push
shl
out
mov
imul
jne
ins
cmp
add
jg
pop
mov
inc
aam
outs
loopne
cmps
xchg
hlt
outs
sbb
fisttp
sbb
mov
jne
cmc
or
cli
add
or
ss
(bad)
adc
xchg
les
jl
int
cmps
out
jp
retf
fwait
(bad)
pusha
leave
pop
jl
in
dec
cli
add
pushf
pop
popa
adc
ins
xor
outs
xchg
mov
xchg
imul
cmp
popf
xchg
retf
ins
adc
sti
idiv
mul
(bad)
adc
pop
ror
pop
out
imul
add
es
enter
mov
sbb
cld
pusha
push
gs
dec
mov
push
dec
nop
cs
mov
jge
leave
inc
adc
test
sbb
stc
inc
in
movs
and
mov
adc
add
jmp
mov
(bad)
push
sti
mov
jne
lds
shl
xchg
and
ficomp
pop
or
ins
sub
int
mov
lods
dec
or
repnz
cmps
jl
adc
(bad)
out
jmp
rcr
not
xchg
sbb
ror
dec
mov
mov
outs
jnp
std
xchg
(bad)
cmp
fcomp
mov
lods
data16
call
fld
dec
xchg
and
dec
sbb
lods
enter
enter
xlat
mov
dec
hlt
mov
in
jge
mov
test
push
jmp
xchg
test
push
sub
sub
xor
pop
ror
fdivr
mov
aaa
cmps
dec
cld
push
repz
lods
xlat
(bad)
mov
scas
mov
call
test
jne
or
repnz
mov
sub
adc
mov
scas
es
sahf
cmp
shl
push
mul
jo
out
push
shl
out
cld
movs
div
div
aaa
fisubr
mov
scas
lock
push
out
adc
ins
mov
push
mov
call
pusha
mov
(bad)
pop
add
fdivr
cmp
dec
test
dec
fimul
pop
jp
mov
dec
cmp
clc
add
adc
cmps
fld
mov
pop
fcom
test
movs
outs
in
(bad)
idiv
add
fst
inc
inc
xchg
rol
adc
dec
add
cmc
or
ss
jnp
test
jne
push
(bad)
mov
in
mov
outs
xor
xchg
jb
js
cmp
push
cmps
lods
les
or
adc
sbb
pop
addr16
pusha
inc
ror
(bad)
(bad)
aad
jl
daa
xor
jmp
xor
(bad)
loop
call
xor
out
sbb
dec
cmp
sbb
push
inc
pop
sbb
mov
sub
add
push
lahf
sbb
push
or
stc
iret
dec
stos
jno
mov
and
mov
dec
sbb
cmp
stos
sbb
je
add
cmp
xchg
ja
aaa
push
xchg
push
mov
and
jbe
pop
hlt
out
add
out
add
or
data16
sbb
inc
mov
mov
mov
pop
fs
das
pop
add
test
cmp
ficomp
rcr
xor
es
push
mov
popf
clc
(bad)
lock
fcomp
loopne
stos
cs
xchg
lahf
and
dec
sbb
shl
xchg
jo
imul
xchg
xor
movs
je
xor
out
adc
sahf
test
call
cmp
jp
cmps
das
xchg
or
pusha
iret
in
mov
out
mov
retf
(bad)
fs
dec
mov
sbb
pop
push
fimul
outs
push
test
add
xchg
lods
icebp
mov
pop
pop
sbb
adc
mov
cmp
nop
pop
push
bound
(bad)
fisub
int3
nop
data16
jmp
xchg
int
dec
cmp
repnz
imul
inc
fnstenv
xchg
or
data16
pop
ds
fimul
fsubr
call
pop
sbb
popf
inc
sub
aam
jge
js
xor
dec
dec
adc
xlat
clc
cmp
movs
scas
outs
test
mov
icebp
push
xchg
fwait
retf
addr16
push
push
enter
call
retf
cwde
data16
loop
sbb
xchg
sti
loope
xor
fldenv
sbb
push
aam
das
inc
rol
std
div
fdiv
cmc
xchg
loopne
cwde
mov
out
push
out
xlat
xor
jecxz
ja
out
or
in
mov
idiv
pop
mov
xchg
sti
fldenv
sub
cmps
data16
pop
mov
fwait
add
aad
out
mov
fadd
sahf
or
sar
dec
push
dec
inc
adc
movs
rcr
mov
sahf
mov
push
pop
mov
or
fiadd
mov
(bad)
push
stos
dec
jb
jmp
or
not
add
dec
dec
or
push
pusha
stos
dec
cmp
mov
(bad)
sub
pop
fst
in
je
pop
(bad)
xor
dec
sub
add
in
fs
mov
push
addr16
jle
and
arpl
ret
add
xor
clc
sub
nop
sbb
ins
iret
loope
mov
and
(bad)
inc
cmp
add
cmp
ror
jne
sahf
mov
aad
clc
imul
mov
or
and
cli
cdq
and
inc
jno
and
imul
adc
jle
jle
sti
jb
cwde
push
arpl
outs
sbb
and
sbb
xchg
int3
retf
jmp
stos
rol
test
mov
aad
inc
inc
enter
out
fs
stos
mov
jecxz
dec
xacquire
fwait
stc
fstp
ja
xor
add
repnz
ja
mov
adc
hlt
je
scas
loop
cmp
adc
dec
cmp
sub
bound
pop
add
xor
mov
xchg
mov
adc
mov
je
or
jns
arpl
jmp
sub
fisubr
add
(bad)
pop
in
adc
aas
cmps
movs
imul
pop
dec
pop
sbb
clc
pop
adc
cmp
jl
out
int3
xor
inc
ins
dec
xchg
mov
sub
fstp
adc
fidivr
mov
ret
sar
and
ss
dec
daa
adc
dec
xchg
push
add
cmp
rcr
repz
sbb
movs
mov
cli
nop
fadd
lds
xchg
stos
jns
xchg
cmp
push
and
std
fcmovu
(bad)
xlat
lds
cld
aam
repnz
xor
inc
leave
out
into
mov
push
jno
mov
jb
arpl
add
xchg
xchg
lahf
lahf
mov
repnz
and
and
mov
or
jl
jecxz
pop
cmps
ins
stos
ins
mov
push
mov
nop
es
in
out
popa
add
jmp
cmps
adc
pop
mov
nop
xor
lahf
aaa
mov
shr
jg
daa
cmc
je
cmp
mov
cmp
cdq
sbb
ja
sbb
lods
inc
xchg
xchg
setne
sbb
cdq
nop
test
adc
add
xlat
jne
aaa
mov
fisub
and
fld
outs
mov
mov
cld
neg
mov
xchg
daa
fdivr
mov
push
jle
aaa
shr
leave
scas
(bad)
fld
sbb
push
or
xor
mov
jg
cmps
fnsave
movs
lods
mov
push
add
mul
add
inc
(bad)
fiadd
mov
xchg
clc
xor
out
into
sub
push
jecxz
and
adc
dec
fisubr
sub
loop
cld
adc
mov
test
sahf
aaa
jl
add
inc
cmp
jb
xor
test
ret
ss
jnp
xchg
rcr
mov
inc
xor
outs
fwait
xor
stos
xor
or
push
daa
fisttp
inc
ja
sub
mov
or
add
pop
das
inc
push
fsub
addr16
lock
xchg
jmp
daa
inc
mov
test
pop
test
add
movs
push
repz
(bad)
jge
daa
inc
mov
push
jo
adc
lock
retf
or
mov
mov
hlt
ja
xchg
and
into
aad
retf
cs
movs
or
push
xor
sbb
mov
cmps
test
iret
inc
jl
gs
leave
sbb
and
xor
(bad)
pop
ds
pop
inc
mov
(bad)
xor
adc
(bad)
xor
loope
rcl
adc
in
cwde
aad
jns
and
sub
mov
and
pop
xchg
ins
xchg
nop
rol
cmc
cmp
jno
repnz
movs
scas
or
retf
xchg
scas
(bad)
aad
aad
inc
add
adc
pop
sub
cmps
push
inc
pushf
sub
xor
jno
xor
mov
adc
add
jns
inc
xor
test
inc
jl
into
mov
dec
push
je
sub
mov
(bad)
pusha
add
mov
nop
jp
push
stc
ret
push
xor
fbstp
mov
mov
fidivr
mov
jbe
outs
nop
inc
scas
dec
mov
shl
int3
mov
push
pop
cli
mov
call
sbb
imul
iret
add
(bad)
xchg
mov
push
jns
lock
cmp
lea
mov
rcl
lods
scas
adc
dec
cmp
imul
lods
jp
ds
inc
cmp
(bad)
shr
dec
or
aas
xchg
mov
mov
fs
mov
mov
ss
sbb
cmp
mov
aaa
xor
push
push
and
mov
inc
fadd
inc
inc
daa
mov
push
les
jmp
mov
xchg
and
aad
loope
add
dec
add
push
xchg
inc
mov
jl
pusha
ja
sub
ss
mov
jmp
cwde
icebp
mov
mov
inc
arpl
daa
fst
jl
outs
push
mov
in
mov
push
loopne
adc
es
and
or
addr16
lods
mov
jae
aaa
cwde
mov
adc
and
cmps
mov
dec
adc
out
mov
sub
call
int3
add
xor
fsub
pop
adc
rcr
jb
and
ins
out
xchg
adc
mov
lahf
paddusb
js
push
dec
outs
repnz
pop
out
fs
mov
adc
mov
test
push
pop
or
std
test
push
stos
sub
shl
inc
(bad)
dec
cwde
clc
mov
and
movs
btc
lods
scas
adc
xchg
pop
pop
mov
mov
test
xchg
xchg
dec
(bad)
mov
jnp
and
inc
mov
push
loope
(bad)
mov
jmp
(bad)
out
mov
mov
leave
fiadd
out
jmp
test
jmp
sbb
cmp
inc
inc
dec
or
ins
arpl
scas
movs
sub
mov
mov
inc
packuswb
test
and
mov
push
mov
cmc
mov
sub
ret
into
push
xor
xchg
popa
rcr
data16
(bad)
mov
sub
mov
jne
aaa
inc
call
jnp
pop
(bad)
pusha
xchg
out
js
mov
sub
clc
in
jbe
enter
shl
sbb
mov
fnstenv
mov
(bad)
call
ja
je
cdq
sbb
aaa
stos
ror
lods
and
dec
or
mov
inc
mov
push
fiadd
cmc
dec
aad
lds
and
fs
sahf
mov
mov
push
jb
mov
stc
jbe
mov
out
mov
imul
dec
adc
sub
nop
mov
sbb
pop
xchg
add
in
shl
test
loop
jmp
push
adc
xchg
ret
and
cmpxchg
pop
jnp
retf
push
stos
cdq
in
or
loope
lods
mov
shr
(bad)
jmp
lods
jmp
fcom
push
fisubr
push
mov
xor
jae
movs
ins
enter
enter
mov
shl
es
jnp
mov
dec
daa
sub
or
ins
mov
dec
jg
pcmpgtw
popf
add
or
js
and
les
xor
xchg
inc
test
aam
loop
into
cwde
jnp
push
data16
jmp
dec
jge
push
nop
daa
mov
inc
jp
push
lock
push
mov
nop
sbb
loope
push
out
jmp
pusha
push
xchg
ins
ret
out
mov
inc
in
fsub
in
pop
mov
movs
cmps
test
sub
push
add
jmp
jecxz
xchg
pushf
les
out
xchg
add
lods
imul
cmp
sbb
hlt
arpl
jecxz
mov
adc
jmp
retf
push
std
sbb
cmp
rol
scas
fwait
pop
scas
es
pushf
and
xchg
repz
sti
push
ja
xor
cmp
call
icebp
in
ds
add
imul
push
push
and
ins
loop
jg
inc
xchg
jnp
dec
jbe
and
or
push
lods
sbb
push
dec
sbb
xor
cwde
js
add
xchg
jmp
xchg
retf
push
ror
lds
xchg
jl
inc
les
lahf
enter
pop
jle
fdivr
cwde
test
test
push
jp
and
xor
pop
xchg
dec
jmp
rcr
iret
sub
sub
cmp
loope
das
adc
imul
cmp
movs
in
and
lock
and
cmps
add
fcmovnbe
ret
cmp
add
inc
add
mov
bound
jns
mov
fistp
gs
push
lds
xor
cmp
shl
adc
mov
clc
jnp
jno
mov
jne
jmp
inc
mov
in
jae
fsub
shr
les
fnsave
cmp
or
(bad)
je
(bad)
cld
fstp
adc
or
arpl
add
(bad)
pop
pop
ret
icebp
cmp
or
sub
or
pop
push
psubd
shl
lds
inc
jecxz
inc
inc
mov
jmp
nop
(bad)
dec
sbb
dec
arpl
inc
pop
ror
cmp
inc
fimul
jmp
in
jmp
mov
pop
jae
outs
ins
cs
mov
pop
cmp
jnp
bound
cwde
stos
push
mov
sub
cli
adc
and
leave
and
cmp
push
add
repz
je
jno
sub
ret
dec
cmp
in
xchg
mov
mov
aas
adc
sub
mov
rol
xchg
pop
mov
out
adc
stos
test
mov
mov
arpl
es
aam
outs
inc
inc
cld
fstp
xor
pop
or
cdq
imul
(bad)
cmp
test
jae
fld
into
fisub
dec
xchg
fcomp
inc
push
stc
mov
pop
sbb
cmps
sbb
sub
mov
jb
bound
lahf
in
mov
xchg
push
lock
outs
xchg
fiadd
jg
loope
xchg
fbstp
or
arpl
xlat
test
scas
xor
(bad)
ds
mov
or
call
int3
lahf
fisttp
pop
inc
mov
and
sub
xor
sbb
int
or
xor
mov
mov
push
adc
pop
mov
jmp
cmc
sar
je
(bad)
fucomip
mov
jae
and
mov
(bad)
xor
inc
cmc
call
test
jne
fxtract
sbb
adc
push
cwde
or
jecxz
mov
out
or
cmps
jge
pushf
fwait
sub
adc
mov
lahf
fnsave
jmp
js
arpl
sub
xchg
je
push
pop
sbb
mov
fs
shr
pop
mov
movs
cmps
xlat
mov
and
ss
(bad)
sahf
sub
(bad)
fiadd
fdiv
add
mov
mov
jl
push
(bad)
pop
mov
outs
inc
repnz
pop
xor
pop
or
lahf
sub
xlat
cmp
sbb
jns
dec
(bad)
inc
mov
mov
rol
leave
push
ja
fnstcw
push
stos
jb
xor
into
mov
in
or
fstp
dec
sub
imul
xlat
inc
mov
neg
or
popf
and
sbb
cmp
adc
retf
mov
xchg
add
aad
mov
jne
push
call
std
lods
sub
test
jo
rcr
pop
cmp
mov
cli
dec
mov
xor
xchg
shl
cli
adc
cwde
loope
outs
jnp
xchg
mov
lock
sub
jp
(bad)
in
bswap
jbe
sub
push
and
ficomp
sbb
test
popf
fdivr
popa
push
in
fisubr
(bad)
push
int
mov
lsl
data16
stos
(bad)
icebp
dec
and
test
gs
xchg
dec
mov
sbb
leave
pop
aam
mov
in
and
pusha
cmc
xor
enter
pop
retf
jae
js
cmp
adc
pop
xchg
adc
test
add
adc
sbb
and
in
adc
xor
inc
cwde
popa
add
push
sbb
push
hlt
repnz
inc
push
sar
dec
cmps
fmul
into
fimul
lea
mov
lahf
mov
inc
mov
push
cmps
std
imul
push
das
push
pop
mov
cli
out
push
popf
loope
(bad)
retf
adc
loopne
in
mov
push
lea
retf
cmc
adc
push
rcl
rol
or
mov
leave
in
dec
push
inc
push
inc
fsub
jg
js
repnz
mov
mov
inc
and
fld
loopne
jne
jmp
adc
mov
mov
inc
cmp
dec
pop
(bad)
pushf
loopne
mov
adc
push
mov
jmp
pop
cmc
xor
stos
mov
dec
(bad)
add
mov
xor
outs
push
mov
loop
xor
div
push
popf
inc
push
mov
push
aas
adc
push
jecxz
or
stos
inc
test
cs
push
pop
aad
mov
pop
jmp
iret
iret
call
jns
movs
or
mov
lods
loope
sahf
sbb
xor
addr16
je
imul
and
test
or
sbb
sub
push
cmp
mov
xor
rol
jg
out
xchg
mov
sub
jb
add
mov
inc
dec
jmp
xchg
push
popa
cmp
jecxz
cld
jecxz
push
inc
sbb
(bad)
retf
and
mov
stc
jnp
dec
and
fstp
div
and
inc
loop
stos
inc
sbb
(bad)
cmp
adc
movs
or
adc
push
rcr
sahf
cmps
imul
in
push
xor
mov
mov
mov
dec
xor
cmp
mov
mov
retf
sbb
ret
inc
mov
inc
inc
mov
and
jnp
mov
test
(bad)
or
xchg
pop
hlt
cmps
xchg
out
mov
dec
test
(bad)
ficomp
imul
outs
push
test
pop
xor
leave
mov
clc
mov
icebp
inc
pop
cmp
mov
dec
shl
scas
iret
(bad)
sbb
int
jns
jnp
sub
xchg
mov
je
icebp
sar
call
stc
dec
icebp
in
or
inc
jp
(bad)
xchg
pop
pop
leave
arpl
repz
mov
dec
xchg
popf
rcr
pop
popf
out
and
enter
jp
(bad)
xchg
out
or
or
or
mov
sub
jno
in
das
inc
pop
dec
xchg
lds
retf
ret
mov
xchg
icebp
push
xchg
push
test
mov
cli
imul
jbe
ja
push
or
sbb
cmp
pop
and
sbb
mov
sti
mov
mov
mov
add
jno
mov
add
into
cmps
in
jge
adc
mov
dec
push
add
hlt
xor
adc
mov
popa
outs
cmp
cmp
test
sub
xor
jnp
popa
addr16
mov
fist
test
clc
out
xchg
push
cmp
lds
and
cld
jge
repz
jnp
and
cmp
mov
add
movq
inc
mov
pop
js
cli
mov
je
sbb
push
jbe
fsubr
mov
fwait
jge
clc
xchg
sub
and
ret
push
retf
imul
and
dec
mov
clc
arpl
fucom
inc
and
xor
add
cmps
retf
sahf
loop
aaa
std
dec
lods
jne
sbb
mov
into
mov
or
icebp
loope
icebp
test
addr16
loopne
scas
sbb
pusha
inc
je
(bad)
nop
or
aaa
hlt
and
nop
xchg
mov
std
call
call
or
rol
mov
cli
icebp
or
int
mov
jmp
clc
pop
jne
adc
ds
push
enter
pop
into
pop
mov
jae
fidivr
mov
and
cmp
cmps
dec
push
push
push
push
pop
push
ret
std
imul
and
shl
fs
pop
pop
outs
mov
ficom
and
fild
loopne
mov
xor
inc
jb
jmp
jmp
xchg
les
fcom
retf
icebp
pop
push
sti
add
(bad)
sub
ret
mov
cmps
dec
jnp
rol
xor
fs
imul
add
in
(bad)
mov
jns
xor
sbb
mov
lock
jge
pop
fnstenv
test
mov
push
mov
inc
cld
push
int
cli
and
cdq
push
cld
addr16
pop
mov
mov
inc
pop
scas
and
retf
pop
and
xchg
xchg
cmp
mov
adc
cmps
(bad)
dec
inc
or
call
push
mov
sar
mov
adc
jg
cmc
mov
fild
inc
ret
xchg
sub
div
add
out
pop
mov
mov
xor
dec
pop
inc
jno
or
sbb
rcr
xlat
int
add
scas
xchg
outs
cmp
xchg
ss
or
and
test
xlat
es
jns
sbb
adc
(bad)
je
dec
jmp
xor
lds
ds
gs
aas
mov
pop
jb
hlt
pop
jne
pop
push
xchg
push
inc
fdivp
cmp
aaa
call
adc
xchg
add
pushf
push
cmp
les
jge
inc
mov
sbb
sbb
jle
jnp
sbb
(bad)
pop
xor
mov
mov
sti
xlat
or
sahf
dec
dec
cmp
lds
outs
ds
jmp
pop
jbe
in
mov
ds
rcr
or
call
push
loop
xchg
data16
push
or
inc
fld
sbb
pop
xchg
gs
cld
jne
outs
pop
popa
aam
fmul
fisubr
xor
ds
pop
mov
ficom
xchg
push
cmp
lahf
call
mov
aad
cs
retf
cmp
imul
call
data16
pop
fwait
rcr
dec
jecxz
mov
ins
dec
dec
enter
push
sub
mov
jp
mov
sbb
ja
(bad)
xor
out
adc
mov
push
xlat
xor
and
icebp
and
xchg
ret
enter
cmp
mov
lods
popf
cdq
loope
mov
out
xchg
cwde
bnd
push
mov
push
leave
inc
loop
outs
loop
cmp
push
fidivr
test
lea
mov
test
xor
fisubr
pop
sbb
mov
xor
inc
push
xor
jae
test
jmp
adc
jl
or
xchg
pop
test
stos
test
mov
and
sbb
inc
imul
mov
cwde
add
sti
jg
outs
or
push
adc
adc
and
add
mov
imul
xchg
cdq
scas
mov
mov
call
add
mov
add
cmp
mov
ins
mov
add
mov
push
mov
inc
repz
(bad)
fwait
jle
dec
and
xor
bound
push
jmp
mov
or
fdivp
sub
xchg
xlat
dec
mov
ret
icebp
push
fimul
xchg
or
sub
icebp
dec
test
mov
dec
sub
add
int3
call
lds
repz
test
ror
icebp
pop
pop
fcomp
xchg
sub
pop
and
push
adc
sar
push
sbb
dec
nop
cmp
in
lds
sahf
frstor
das
push
or
fisttp
pop
or
sbb
enter
not
lea
lahf
cli
mov
dec
cmp
sbb
ret
mov
adc
out
inc
rcl
arpl
or
sub
jne
daa
and
sti
into
xchg
lods
sub
scas
cmp
mov
pop
mov
pusha
outs
imul
das
mov
jo
out
sub
mov
ss
sti
adc
xchg
push
pushf
or
mov
loop
push
in
and
out
movs
lea
inc
(bad)
std
mov
jecxz
rcl
inc
adc
dec
xchg
fs
jmp
je
pusha
scas
pushf
retf
dec
xor
xor
fld
loop
aam
fwait
add
ds
shr
rol
dec
cmp
popf
cdq
sbb
ret
test
aas
add
imul
lods
mov
cmp
cmp
test
push
jns
dec
mov
jp
stos
je
add
xchg
cmps
mov
pop
pop
push
xchg
mov
mov
repz
shl
xchg
iret
loop
lahf
fimul
fiadd
mov
mov
or
ins
jbe
sahf
pop
cli
add
jb
popf
(bad)
push
cmp
dec
jecxz
pop
lds
int
cmps
dec
cmc
mov
icebp
add
in
loope
icebp
push
pop
imul
pop
pushf
leave
rcr
cdq
pushf
adc
loop
cmp
pop
addr16
pushf
mov
aaa
lods
jb
cmps
cmc
adc
mov
les
mov
dec
sub
shl
add
pushf
push
iret
in
add
repz
xchg
mov
dec
xchg
push
in
adc
inc
and
sbb
out
cmp
retf
test
or
jns
loope
int3
scas
enter
or
aam
test
movaps
mov
pop
fisttp
mov
test
jb
or
inc
adc
xchg
int
mov
jbe
jb
push
adc
les
jns
adc
jecxz
aas
xchg
popf
imul
cmp
mov
and
xor
adc
icebp
and
rcr
sbb
xchg
fild
and
sahf
inc
mov
jle
jge
inc
ins
cmp
sbb
test
sub
pop
(bad)
jl
out
aas
dec
push
clc
aaa
leave
xor
or
adc
mov
stos
push
fnstenv
retf
jle
jl
fmul
or
jg
sbb
les
leave
stc
push
mov
in
push
pop
retf
mov
sub
dec
add
add
or
imul
dec
scas
iret
ins
lock
adc
or
pop
dec
cmp
push
cmp
xlat
pop
push
lea
cmp
lods
or
leave
jo
xchg
movs
pop
push
pushf
dec
jno
hlt
mov
cmp
aad
push
cmp
cmps
inc
jns
loopne
push
mov
mov
loope
dec
mov
shl
fld
pop
sub
in
xchg
fistp
mov
lods
rol
pop
aaa
and
xor
sbb
add
stos
loope
mov
cdq
cli
mov
les
mov
mov
mov
in
daa
mov
or
mov
pop
aas
scas
add
loopne
sbb
dec
xchg
repz
movhps
jno
adc
cmp
sbb
xchg
out
cwde
xchg
cmps
inc
lods
xchg
add
fdiv
dec
pop
or
xchg
and
arpl
mov
fwait
clc
scas
xchg
fadd
dec
mov
mov
mov
es
stos
nop
lods
xor
pop
nop
xor
push
repnz
fs
ins
mov
cwde
push
bound
jecxz
adc
jmp
or
jge
xor
mov
aas
jmp
or
cli
fwait
xlat
ret
mov
iret
push
cmps
jmp
or
leave
cmp
or
sub
adc
out
push
jne
xchg
shr
or
push
dec
push
ret
leave
lock
daa
mov
rcl
add
mov
pop
ss
stos
test
data16
dec
nop
scas
or
(bad)
sub
mov
jo
mov
xor
add
jmp
iret
jge
cwde
lods
push
clc
jno
iret
push
inc
paddusw
fisub
and
jmp
or
lock
les
movs
pop
mov
addr16
inc
popf
(bad)
mov
cmp
aam
xchg
shr
mov
shl
pop
and
lahf
ins
or
xor
jb
data16
addr16
popf
mov
test
popa
movs
pop
in
sub
mov
mov
pushf
and
leave
mov
push
mov
push
out
xchg
rcr
pslld
inc
ss
rcl
mov
xchg
pusha
push
sbb
retf
inc
jae
std
lds
sub
jnp
fsubr
retf
xchg
sar
lock
outs
xor
jbe
aam
repnz
and
repnz
sub
jb
mov
hlt
ret
ret
cmps
dec
xlat
inc
(bad)
and
mov
pop
pop
fs
add
add
push
jg
xlat
cdq
add
jge
sub
xchg
retf
lds
inc
rcl
mov
sub
fisttp
sub
(bad)
popf
stos
cmp
pushf
out
fcomp
xchg
rol
mov
or
test
jno
and
(bad)
ret
pop
inc
add
adc
dec
aaa
mov
cld
scas
or
xchg
xor
sar
es
push
retf
cmp
loope
jns
inc
mov
(bad)
jmp
iret
jmp
in
xchg
int
cmc
push
repnz
cli
mov
or
jmp
xlat
sub
lock
and
das
cli
push
imul
jmp
(bad)
mov
jb
cwde
add
xchg
xor
rol
loopne
clc
xor
mov
mov
xchg
mov
retf
mov
clc
push
mov
loop
out
cmp
es
push
fbstp
pop
fwait
test
pop
pop
add
icebp
xor
add
push
shl
jg
imul
mov
cwde
push
cmc
push
sub
imul
mov
jb
adc
jp
add
mov
dec
jne
(bad)
shr
aam
mov
std
test
lods
ins
scas
push
into
dec
adc
js
sti
addr16
inc
ror
mov
xchg
cs
cmps
jno
xlat
imul
sbb
adc
add
fsubr
iret
inc
fwait
dec
fpatan
popa
xor
and
jae
test
int
fwait
mov
add
and
mov
jg
mov
ds
bnd
adc
dec
pop
inc
jo
clc
popa
lahf
(bad)
mov
pop
sub
push
add
stos
sub
mov
iret
js
std
dec
mov
popa
adc
jno
pop
mov
jne
jno
repz
mov
mov
inc
pop
std
or
inc
movs
push
es
fstp
cmc
jp
inc
pushf
leave
and
push
pop
mov
hlt
fs
dec
cmp
cmp
inc
sbb
dec
xchg
xchg
ds
in
(bad)
cmc
enter
fsub
(bad)
or
dec
and
pop
push
out
xchg
xchg
push
sahf
fldcw
and
mov
fisttp
inc
push
iret
fcomp
std
int
(bad)
pop
add
add
ret
lds
push
dec
inc
js
mov
punpckldq
(bad)
int
mov
sbb
ss
lods
mov
sub
fcom
stos
xchg
xor
jmp
inc
pop
pop
iret
push
(bad)
jae
inc
mov
scas
pop
adc
mov
sbb
add
scas
push
ds
pop
scas
jno
pop
dec
dec
xor
jle
call
or
sahf
ficom
test
mov
sbb
push
mov
mov
lods
imul
or
in
jae
jno
push
mov
jae
aam
mov
xchg
sahf
pusha
icebp
imul
out
cmp
mov
(bad)
cld
mov
iret
xor
jl
inc
aam
push
or
add
jo
push
cs
xor
pop
addr16
fild
(bad)
test
pushf
adc
and
retf
pop
jg
mov
and
ss
dec
arpl
mov
mov
retf
add
(bad)
lods
arpl
sahf
dec
add
je
add
stos
ret
(bad)
jge
xchg
ss
jg
jb
sahf
mov
jp
sti
cs
outs
add
test
pop
shl
ja
sbb
mov
add
sti
iret
sbb
and
cwde
and
inc
les
push
ds
loope
sbb
cmp
xor
sub
sbb
xchg
sub
pop
xchg
jbe
sub
sbb
sub
xor
jb
inc
mov
(bad)
(bad)
data16
cmp
mov
fwait
ret
dec
inc
jne
out
retf
hlt
mov
sub
cmps
in
dec
xor
fimul
mov
and
jae
jbe
enter
mov
inc
or
jne
sbb
(bad)
xor
fs
shl
cmp
mov
or
fnsave
clc
cmp
je
pop
loop
inc
mov
cmps
gs
jb
mov
mov
call
pop
xor
mov
or
cs
imul
data16
mov
push
xchg
push
dec
jnp
sbb
rcr
jp
push
inc
fidiv
out
fiadd
lea
xor
sbb
(bad)
in
stc
shr
jne
xchg
fwait
jnp
pop
fisub
(bad)
js
jge
popf
sbb
ja
ret
add
mov
xor
mov
mov
enter
mov
xor
mov
or
nop
xlat
dec
push
lea
mov
jae
outs
push
ja
xchg
iret
jne
lds
sti
(bad)
iret
inc
fwait
ds
arpl
mov
mov
jnp
test
mov
in
arpl
das
sbb
cli
sub
sbb
adc
adc
addps
dec
imul
js
mov
sub
and
repnz
test
stos
lods
cmp
movs
mov
mov
lock
push
hlt
mov
xlat
inc
mov
out
xchg
xor
(bad)
pop
and
in
and
pop
je
mov
in
xor
adc
imul
mov
pop
inc
test
sub
dec
rol
movs
xor
fsub
jg
inc
inc
sahf
gs
mov
loop
inc
push
mov
adc
xchg
push
jne
sub
add
xchg
outs
cmp
dec
test
repnz
xor
mov
dec
xchg
inc
sub
add
lea
call
xchg
aam
pusha
aam
fistp
outs
mov
jmp
jnp
push
sub
adc
inc
pop
fwait
ret
inc
ins
dec
into
stos
fnstenv
fnclex
dec
call
push
mov
jp
lods
pop
int3
dec
push
or
sub
xor
pop
loope
in
das
mov
dec
out
mov
mov
addr16
jl
and
stos
leave
and
xlat
xlat
push
popf
inc
lea
mov
add
push
push
out
add
retf
fisub
mov
jge
out
lods
and
nop
lahf
data16
in
add
imul
inc
cmp
push
sbb
mov
or
scas
nop
mov
mov
dec
mov
ins
xchg
adc
stos
or
fcom
iret
mov
dec
sub
shl
jns
mov
inc
cmp
push
test
fsubr
xchg
nop
cmc
dec
adc
bound
lods
cmp
mov
imul
(bad)
in
std
not
mov
mov
sbb
not
xor
push
sbb
mov
and
adc
(bad)
mov
adc
ficom
inc
jmp
mov
das
sti
or
into
int3
mov
popf
stos
mov
inc
movs
loop
cmp
ss
jle
iret
retf
nop
outs
jmp
bound
sbb
(bad)
ror
outs
outs
les
(bad)
adc
imul
inc
data16
dec
and
pusha
jae
std
rol
xchg
dec
out
xchg
int
add
fldcw
dec
push
push
addr16
cmc
movs
scas
mov
mov
and
(bad)
adc
dec
repz
cmp
dec
gs
mov
je
push
das
inc
(bad)
in
sub
cmp
cli
stos
stos
mov
mov
icebp
mov
adc
mov
shl
data16
push
lds
scas
mov
rcl
movs
loop
jae
cmps
or
pushf
push
jne
call
repz
iret
lods
mov
sub
and
mov
out
cmp
xor
mov
ds
inc
xor
jns
mov
xor
xchg
jge
shl
add
mov
adc
in
(bad)
idiv
pop
retf
(bad)
sahf
fild
jmp
ss
scas
push
jecxz
xchg
inc
mov
pop
test
icebp
ret
mov
inc
inc
add
xor
fist
inc
mov
retf
fldenv
jp
jle
sti
pop
mov
loopne
lods
and
(bad)
aam
mov
cdq
or
dec
ds
or
or
or
adc
sti
or
mov
dec
sti
sub
sbb
repz
adc
out
(bad)
int
stc
(bad)
popf
xlat
jg
shl
scas
inc
adc
inc
xchg
jnp
mov
xor
mov
lods
(bad)
fucomi
loop
daa
enter
jg
mov
xor
lahf
xor
mov
mov
mov
push
inc
xor
pop
mov
mov
inc
in
inc
adc
and
or
lods
inc
mov
pop
mov
push
inc
xchg
jns
or
in
cmps
dec
add
mov
jne
and
out
cmp
loop
pop
sbb
jne
jl
xchg
imul
pop
and
or
fsub
in
loop
xor
inc
xor
(bad)
nop
pop
sbb
push
jne
fsub
inc
(bad)
sub
xchg
retf
jle
xor
js
pop
repnz
pop
inc
rcr
ss
in
inc
stos
pop
movs
cmps
mov
xchg
and
sbb
dec
jnp
in
(bad)
repz
cdq
xchg
xchg
push
pop
test
push
das
daa
stos
xchg
je
dec
dec
inc
push
jne
ret
pop
xor
sar
dec
popa
sbb
cmp
cs
sbb
repz
jb
inc
mov
mov
push
mov
stos
adc
jmp
pop
jae
xor
add
sar
xchg
and
xchg
aaa
pop
inc
inc
pop
(bad)
iret
sbb
dec
daa
push
sub
mov
retf
sbb
mov
push
xor
icebp
into
fdiv
xchg
mov
ins
jbe
pop
rcr
int3
push
or
stos
out
std
stos
mov
sbb
out
mov
pusha
jecxz
loopne
mov
cmp
cli
fucomip
(bad)
fstp
ret
pop
push
nop
pop
dec
jo
sub
and
push
push
add
iret
inc
stc
mov
inc
repnz
lods
bound
ret
cmp
and
repnz
add
cmp
add
mov
sub
call
lock
push
call
data16
inc
mov
push
stos
add
mov
lea
(bad)
pop
push
das
adc
(bad)
mov
cmps
idiv
sub
fadd
(bad)
mov
xchg
fidiv
int
pop
movs
xor
adc
mov
mov
loopne
dec
dec
cmp
mov
mov
push
loope
into
inc
xchg
bound
cld
adc
cmp
scas
ret
push
fisub
pop
jo
test
dec
js
ds
stos
xor
cmp
jl
loope
push
xchg
rcl
jno
push
mov
mov
stos
xor
out
in
inc
push
neg
out
(bad)
test
inc
out
mov
in
sbb
push
lods
loop
jp
out
lods
and
and
or
pop
inc
push
push
mov
ins
xchg
loop
inc
scas
ret
pushf
outs
pop
or
aaa
jno
and
leave
push
mov
je
xor
cmp
ins
fimul
sbb
xor
jnp
stos
mov
call
data16
outs
mov
lods
clc
xor
sbb
retf
jne
int3
in
push
repz
clc
mov
cmp
movs
sub
add
mov
adc
pop
xchg
sti
mov
in
imul
addr16
push
jle
push
ins
retf
push
icebp
aam
mov
rcr
stos
mov
in
add
or
ret
test
inc
mov
aad
push
xchg
pop
jmp
repnz
fwait
adc
scas
test
gs
mov
mov
cli
mov
fs
movs
push
daa
cs
dec
sub
in
cld
inc
mov
dec
idiv
scas
adc
mov
mov
fld
adc
cmp
xchg
es
(bad)
mov
cmc
pop
xchg
push
jbe
mov
xor
inc
push
dec
repz
mov
pop
(bad)
jne
add
or
add
std
clc
pusha
xchg
popa
ret
call
push
test
or
fist
push
sbb
mov
mov
xchg
leave
lock
push
xor
inc
fistp
xlat
lods
cmc
mov
sub
push
and
jno
cmp
loope
mov
push
cdq
jg
or
jp
xor
cmp
cs
jmp
mov
xchg
inc
dec
add
push
jge
sahf
jno
repnz
outs
js
in
push
mov
cmps
jb
xor
iret
add
not
sub
or
dec
adc
sbb
in
test
sbb
fstp
xor
test
mov
xchg
or
cmp
push
out
loopne
pop
or
mov
xchg
pop
jbe
sbb
fistp
mov
dec
lods
daa
sbb
inc
jge
ror
lds
dec
das
and
out
add
inc
icebp
dec
xlat
jns
xor
pop
pop
mov
sbb
mov
inc
(bad)
jmp
sbb
pop
nop
adc
xlat
cmp
not
int3
push
aas
adc
lahf
scas
rcl
push
fadd
(bad)
aad
add
scas
cmps
mov
retf
jl
retf
mov
ja
loop
sub
pop
punpckhwd
mov
jle
mov
stos
cld
xchg
mov
popa
inc
dec
(bad)
lock
retf
mov
retf
pop
loope
or
pop
mov
(bad)
push
jge
adc
rol
mov
jl
sbb
push
cmp
mov
in
out
cs
jbe
sbb
mov
push
loop
sub
push
push
outs
xor
je
enter
test
icebp
mov
cmp
fisub
mov
jl
cli
nop
popf
in
push
xor
out
(bad)
fwait
mov
mov
test
aad
xchg
push
inc
test
div
add
imul
xlat
sbb
jnp
cdq
xchg
nop
adc
out
sahf
adc
add
jmp
xor
aad
push
nop
(bad)
les
xchg
movs
mov
clc
test
add
jle
je
inc
in
push
dec
iret
test
pop
mov
cmp
lods
out
sub
adc
repnz
mov
mov
stos
ss
cs
imul
jmp
dec
fist
sub
cs
dec
leave
mov
cmp
jb
xchg
and
in
inc
out
nop
int3
test
test
retf
push
shufps
sbb
ss
aas
adc
push
jnp
mov
or
scas
sbb
xchg
mov
mov
sub
test
mov
(bad)
(bad)
jnp
xor
(bad)
mov
pusha
lds
out
cmp
cwde
push
push
add
adc
cwde
inc
daa
jne
mov
lock
sbb
and
in
adc
mov
fwait
xchg
add
test
mov
icebp
sub
dec
add
push
(bad)
stc
push
mov
adc
dec
daa
pushf
xchg
inc
jbe
mov
call
xchg
lods
adc
loop
dec
mov
hlt
aaa
pop
unpckhps
cmps
retf
arpl
cdq
stos
mov
and
mov
in
and
out
mov
js
pop
or
push
adc
stos
in
sahf
ss
data16
mov
push
cmc
lods
ins
sbb
push
addr16
(bad)
ds
xchg
movs
dec
dec
(bad)
sti
int3
int
ret
jno
mov
sub
mov
adc
(bad)
push
repz
in
(bad)
sub
mov
push
scas
enter
mov
rol
iret
dec
sar
adc
and
pusha
add
daa
(bad)
pop
(bad)
rol
fstp
dec
push
or
ret
and
rcr
nop
add
repz
sbb
xor
lods
pop
mov
in
mov
adc
mov
adc
sahf
xchg
and
pusha
xor
stc
inc
stc
movs
cmc
xchg
test
les
push
not
jo
sbb
dec
dec
mov
adc
fcom
outs
mov
fwait
shr
test
pop
retf
add
mov
dec
xor
sub
push
loop
arpl
jnp
loope
add
inc
daa
mov
cmp
inc
mov
mov
and
dec
pop
lahf
push
enter
cld
sbb
fwait
shl
xchg
jne
mov
add
fucomp
dec
push
mov
inc
sbb
retf
popa
mov
loopne
dec
inc
loopne
add
jnp
push
inc
add
pop
movs
xchg
push
sahf
out
xor
and
lds
push
nop
js
pop
xchg
cmp
mov
stos
pop
adc
test
sahf
dec
scas
stos
jae
xchg
stos
sti
(bad)
or
cli
test
fild
and
stos
outs
ds
stc
gs
cmps
mov
lock
lds
(bad)
iret
in
iret
inc
ss
aad
xlat
add
neg
daa
popa
adc
fnsave
into
packsswb
fwait
cdq
mov
xchg
cmp
ja
fcmovbe
jmp
call
push
cmp
jle
cmp
sbb
hlt
jo
cmp
xor
jle
cld
xchg
cmps
stc
jns
sub
aam
mov
fwait
push
test
aam
pop
jecxz
arpl
push
sbb
(bad)
pop
sti
fisub
iret
shl
cmc
mov
in
lea
lods
jne
sub
cld
daa
sub
in
imul
mov
das
and
mov
popf
jg
jg
xchg
ja
or
es
frstor
jbe
pop
arpl
pop
in
sbb
inc
pop
jle
adc
loope
daa
sar
fimul
jne
pmullw
inc
dec
outs
ror
(bad)
pop
ror
gs
inc
cmp
outs
data16
mov
and
daa
stc
or
jmp
pusha
jg
cdq
fnstsw
jp
stos
into
cmps
aad
enter
pop
sub
pop
xor
or
out
jge
icebp
and
retf
int
test
int
jecxz
adc
jmp
lea
mov
stos
mov
pop
adc
xchg
imul
cli
scas
xchg
hlt
mov
sbb
bound
les
sub
sub
(bad)
test
lods
or
(bad)
ja
or
jecxz
jnp
xchg
stos
push
mov
addr16
push
mov
fwait
push
dec
bound
cmp
jns
loopne
or
xchg
test
and
push
(bad)
mov
dec
mov
sbb
clc
jo
sbb
pmovmskb
sub
int
repnz
repnz
and
jbe
push
fwait
dec
stc
push
je
xchg
adc
mov
inc
lods
ins
adc
in
aaa
retf
(bad)
pop
int
sti
int3
pop
jp
cmp
into
mov
lds
in
repnz
inc
rol
lock
add
mov
xchg
cmp
jnp
imul
jle
xchg
ja
mov
cmp
adc
sub
test
sbb
xor
mov
repnz
or
out
inc
push
rcr
int3
adc
das
outs
jne
div
push
fild
pop
mov
stos
out
jno
or
jae
cwde
imul
pop
mov
mov
dec
add
jmp
stc
repz
repz
jl
ja
hlt
mov
add
fcom
outs
jb
sar
sub
jmp
call
adc
jge
sub
call
and
cmps
mov
xor
pop
adc
xchg
sbb
fld
gs
sar
std
push
stos
rol
ret
aad
fmul
sbb
inc
add
mov
movs
xor
mov
nop
fild
push
pushf
lods
in
pop
sub
mov
adc
enter
(bad)
jnp
cmps
imul
mov
mov
dec
outs
inc
pop
aam
clc
cmps
in
sub
pop
cdq
and
ins
aaa
aam
jp
sbb
sub
push
ja
pop
push
mov
ds
mov
push
(bad)
bnd
sbb
aad
lock
adc
js
mov
iret
retf
aaa
xchg
call
and
cmp
repz
lods
add
or
mov
mov
mov
push
dec
jns
sub
or
adc
jp
lea
jl
stc
sbb
inc
inc
stos
inc
ds
call
lea
jmp
push
out
pop
outs
xchg
add
rcl
mov
retf
fyl2x
nop
out
jp
int
mov
mov
int3
mov
mov
shl
js
push
mov
fwait
or
mov
dec
pop
fwait
ds
xlat
xor
cmp
adc
(bad)
pop
or
add
and
inc
sbb
inc
ror
ja
adc
call
mov
daa
mov
pop
cmp
mov
test
enter
add
fbstp
push
les
call
mov
cwde
pushf
fisubr
mov
(bad)
and
and
mov
adc
cmp
and
enter
bound
bound
mov
sub
dec
dec
pop
mov
sub
ins
shl
dec
mov
push
rcl
xchg
sar
xchg
dec
add
xchg
mov
cmc
cwde
mov
push
adc
arpl
xchg
jecxz
mov
test
mov
nop
or
in
jns
cmps
jecxz
test
xchg
mov
inc
cwde
xor
mov
push
or
xchg
or
and
ins
popf
cmps
pop
rcl
pop
pop
cs
(bad)
in
popf
mov
iret
push
sbb
test
mov
mov
sbb
in
push
jl
mov
add
or
ds
leave
(bad)
(bad)
mov
retf
or
inc
das
push
sbb
inc
cmp
sub
dec
cmp
ins
(bad)
aad
and
shl
test
mov
outs
mov
and
arpl
push
bound
lds
cmp
push
dec
pop
add
adc
add
les
imul
fcom
cmp
shr
pop
xor
addr16
add
pop
or
or
movs
push
hlt
enter
aaa
fwait
xor
jmp
sub
lock
fbld
ror
inc
xchg
add
pop
or
mov
gs
xchg
popa
sub
lock
cwde
cmp
stos
stc
ja
and
pop
sbb
lods
or
dec
ins
call
shr
sub
inc
jne
into
sub
fcomp
inc
jmp
sub
sti
jge
mov
clc
or
xchg
sbb
test
cmc
ss
hlt
mov
out
jb
sbb
xchg
dec
aam
mov
clc
gs
pop
fsubr
gs
xor
mov
loop
xor
(bad)
fld
or
fisubr
mov
cmc
in
call
nop
loop
mov
push
cmp
in
xchg
mov
or
jmp
jmp
popa
mov
(bad)
or
xor
sub
popf
movs
sbb
mov
or
jmp
loope
ins
xchg
je
jecxz
into
daa
pop
lea
jns
sub
cdq
jae
int
xchg
in
sub
dec
dec
sti
clc
dec
sbb
ret
adc
xchg
lds
leave
push
mov
cmp
loopne
fisttp
xor
xchg
add
(bad)
and
movs
xor
jmp
retf
or
shl
inc
pop
sti
pop
pop
cs
cmp
movs
(bad)
fnsave
xchg
lock
pop
mov
fwait
mov
sub
add
lods
and
adc
aas
inc
cmp
cld
jnp
jnp
jae
retf
es
pop
cld
cmps
xchg
enter
sar
sub
inc
mov
add
inc
pop
test
jb
repz
cmp
leave
fstp
dec
pusha
ins
lods
(bad)
xchg
test
push
add
mov
fcomp
(bad)
shr
aam
push
into
jmp
xchg
mov
fisub
jmp
or
cmp
sbb
sbb
fld
mov
imul
pop
mov
push
pop
mov
push
lahf
into
iret
mov
pop
xor
mov
mov
mov
inc
cmp
out
pushf
imul
(bad)
(bad)
jmp
aaa
xchg
jp
mov
movs
or
cmp
enter
adc
popf
push
mov
mov
xor
outs
mov
sbb
jns
add
pop
push
lock
pushf
test
pop
xchg
loope
dec
xchg
jae
lahf
adc
cmps
mov
pop
sub
and
inc
adc
leave
and
aaa
jb
retf
outs
sub
lahf
enter
outs
or
xchg
sti
mov
push
std
repz
xchg
mov
push
adc
ficom
or
add
iret
xor
(bad)
das
std
imul
pop
adc
sub
mov
cwde
push
fimul
test
sub
mov
adc
mov
stos
out
pop
dec
add
mov
repz
sub
call
cmp
dec
jno
dec
mov
loop
mov
test
mov
or
sub
mov
xor
mov
cmp
repz
in
and
sub
pop
pop
cmps
pusha
mov
arpl
cmp
mov
xor
jp
xchg
arpl
adc
mov
inc
push
add
in
dec
mov
and
dec
mov
sti
fnsave
jmp
mov
iret
add
fcomp
loop
sbb
cmps
push
fisttp
hlt
xchg
mov
sbb
mov
or
dec
adc
pushf
sbb
cwde
outs
xchg
jmp
mov
jo
xchg
dec
retf
les
ret
jmp
add
xor
lahf
push
dec
sbb
sbb
mov
push
cmp
nop
and
pop
in
cmps
movs
div
sub
jle
jne
push
lahf
(bad)
pop
push
aaa
data16
les
inc
pop
ins
int3
dec
outs
(bad)
aam
mov
inc
out
adc
fcom
scas
add
inc
jle
ins
dec
lods
and
mov
aas
es
xor
or
stos
(bad)
enter
stc
jae
std
sub
jmp
std
dec
xchg
iret
jg
pop
(bad)
mov
xchg
aam
shl
sbb
xchg
mov
push
pusha
push
imul
and
bound
sbb
xchg
std
(bad)
test
das
dec
dec
hlt
dec
jnp
pop
adc
shl
outs
add
lock
mov
push
mov
xor
aam
cs
mov
xor
xchg
(bad)
or
jne
aam
icebp
jl
stc
jmp
outs
packuswb
leave
mov
call
jb
fcmovnb
inc
aad
mov
add
iret
enter
inc
adc
cmp
mov
mov
mov
rcr
(bad)
icebp
jae
sub
icebp
mul
gs
adc
xchg
sti
mov
sbb
das
sahf
(bad)
jmp
sub
and
out
mov
movs
sar
stos
mov
sub
and
es
add
add
imul
sbb
inc
scas
repz
je
pop
ja
rol
pop
dec
cmps
int3
mov
or
dec
(bad)
sub
lahf
jl
push
nop
stc
in
adc
shl
add
clc
jecxz
xchg
mov
add
xchg
jnp
lods
sub
je
push
adc
ror
sub
adc
and
push
loop
mov
retf
xchg
lea
fcomi
pop
inc
cmp
nop
mov
mov
stc
dec
mov
imul
aad
imul
loop
adc
ss
or
push
xor
popf
cli
jo
pop
add
cmp
hlt
and
jb
outs
mov
sbb
cmp
cmp
bound
ss
push
sub
popa
add
aad
sub
sub
push
inc
sbb
mov
jae
lahf
imul
int
jb
ss
movs
xor
jle
pop
cmp
out
inc
ret
cdq
iret
mov
lahf
xor
iret
enter
dec
lahf
cdq
pop
stos
inc
cmps
dec
sub
cmps
dec
scas
lea
pop
xchg
cmp
jle
xor
mov
loopne
add
imul
rep
and
aam
pop
repnz
xchg
in
pop
test
dec
cli
fbstp
mov
add
xor
sub
push
das
jno
js
jl
jmp
adc
cmc
xchg
cmp
xor
cmps
outs
jo
xchg
add
js
ds
test
push
push
sub
dec
mov
sub
or
add
jbe
mov
jne
inc
cmp
sub
dec
and
lock
mov
clc
lds
ins
or
adc
or
fild
call
(bad)
je
xchg
enter
popf
dec
rcr
into
mov
mov
and
and
sub
inc
pop
loop
int
out
mov
loope
retf
rcr
mov
xchg
stos
inc
push
sbb
mov
mov
dec
mov
int3
push
into
lea
pop
jne
loope
cmp
(bad)
mov
loope
icebp
call
inc
xchg
(bad)
xchg
add
in
bound
inc
daa
cmp
adc
lods
ins
retf
jp
cmp
fistp
or
and
das
ins
xor
sub
sbb
mov
xor
in
cmp
push
aas
sub
(bad)
stc
jmp
mov
fs
mov
ret
fwait
ja
xchg
scas
dec
ss
imul
cmp
rcpps
sub
shl
fmul
scas
sbb
ret
rol
mov
(bad)
shr
leave
mov
das
push
(bad)
hlt
dec
rol
xchg
xor
pop
fstp
xchg
cmps
or
aam
xchg
mov
call
mov
adc
daa
ficomp
dec
or
mov
mov
push
stc
push
push
push
daa
pop
fst
and
lea
push
dec
mov
inc
int3
sub
fmul
push
jae
xchg
and
sbb
jb
cmps
(bad)
stc
(bad)
sti
ss
adc
(bad)
sbb
rcl
jnp
push
inc
push
inc
xchg
call
add
arpl
and
cld
dec
adc
vandnpd
mov
or
call
in
mov
out
jecxz
sub
xor
pop
inc
dec
xor
jne
dec
adc
sbb
or
xchg
mov
push
cmp
mov
loop
out
fwait
inc
xor
repnz
dec
cmps
std
xchg
jle
int3
sub
jne
jne
xchg
xor
and
idiv
dec
cmps
movs
push
xor
cmps
cmps
call
push
sahf
scas
sbb
scas
push
xchg
bound
sar
xor
mov
jecxz
sub
ja
sahf
jmp
push
xor
adc
ins
cli
or
repnz
aad
je
iret
push
adc
xchg
les
dec
push
dec
mov
in
mov
retf
push
ss
mov
in
mov
(bad)
fs
xor
aad
jp
xchg
pop
cmp
mov
fiadd
repnz
loopne
lock
xchg
repnz
push
add
in
mov
js
sub
aam
sbb
inc
ja
fcomip
xor
addr16
add
int
cs
mov
fs
and
nop
es
mov
and
adc
adc
aam
cmc
lahf
int
dec
rcl
fs
fbstp
lods
(bad)
jns
sbb
jns
xchg
lods
dec
outs
mov
mov
out
cli
xlat
dec
in
sub
inc
push
bound
rol
pushf
mov
mov
scas
ins
lods
outs
dec
dec
mov
inc
and
add
jl
jecxz
cmps
push
rcr
(bad)
mov
into
pop
pop
pop
sbb
test
call
inc
mov
fucomi
sbb
jg
test
scas
ficomp
test
dec
loopne
(bad)
cmp
sbb
sub
(bad)
xchg
dec
lahf
add
adc
dec
in
xor
clc
mov
fisubr
sahf
fdiv
mov
retf
ret
div
mov
mov
pop
aad
enter
mov
cmp
pop
dec
and
int
mov
sbb
aam
cmp
xor
xchg
fcomp
aad
add
sbb
cdq
pop
mov
ds
add
js
out
vpunpckhdq
(bad)
rcr
enter
mov
mov
push
sbb
shr
les
fisttp
cmp
mov
push
mov
push
stc
ja
cmps
mov
mov
and
es
mov
sub
nop
sti
ficomp
and
fild
stos
jecxz
ja
out
fcom
inc
rcr
sbb
loop
xchg
repz
fdivr
sub
add
repz
xchg
sbb
mov
inc
retf
and
dec
pop
mov
inc
add
pop
pop
ja
pop
(bad)
sub
movs
movs
lods
bound
ss
aas
mov
jnp
cdq
push
cli
js
mov
sbb
mov
jmp
loope
in
pop
mov
clc
inc
mov
inc
outs
push
push
pop
in
jno
pop
cmp
jge
(bad)
les
xor
dec
fiadd
rol
call
inc
inc
scas
push
stos
cmp
and
outs
lea
sub
inc
loope
repnz
jge
sbb
hlt
pop
rcr
repz
(bad)
xchg
pop
shr
jmp
aaa
ret
jge
or
fdiv
in
push
arpl
shl
dec
mov
fisub
push
pop
adc
mov
ins
sub
in
push
scas
scas
mov
popf
pusha
push
cmps
mov
cmp
inc
inc
jmp
jb
neg
and
imul
sbb
pop
jle
cld
dec
out
jge
cdq
fimul
je
mov
dec
sub
stos
inc
jle
adc
mov
or
or
xor
out
nop
(bad)
mov
fbstp
sub
xor
add
and
sub
je
repnz
movs
dec
stos
push
push
vpaddusb
mov
xchg
stos
pop
inc
xor
jbe
push
and
cli
repz
jo
sbb
mov
push
inc
sbb
adc
faddp
adc
sbb
push
rcl
jmp
and
les
sti
lea
ret
jb
mov
lahf
sahf
mov
jg
and
pop
mov
aam
outs
clc
addr16
ret
push
ss
jns
mov
or
call
push
mov
pop
call
bound
popf
mov
sbb
sub
out
ret
cmc
sbb
out
xchg
mov
or
push
jnp
das
jge
push
int
sbb
or
ja
jle
test
or
mov
sbb
dec
mov
push
mov
inc
outs
pop
js
fisub
ja
mov
cmp
or
lahf
jb
int
mov
and
mov
dec
push
sbb
(bad)
pop
inc
sbb
mov
dec
js
sbb
mov
xor
shl
enter
sbb
sbb
test
cwde
jo
jl
cmp
call
xlat
fadd
push
or
loop
jmp
adc
cmps
add
inc
call
aas
fstp
ins
call
jbe
pop
sub
or
xor
pusha
or
movs
movs
dec
dec
cdq
pusha
sar
or
push
or
add
xchg
daa
xor
mov
paddusw
sbb
inc
xchg
mov
add
bnd
adc
clc
mov
xchg
int
cmps
pop
jns
(bad)
jmp
or
out
and
retf
and
push
iret
pop
jmp
pop
mov
mov
add
sbb
test
test
enter
xor
es
xor
sahf
xor
push
addr16
pop
mov
fstp
sbb
stc
or
arpl
and
and
fisubr
adc
je
(bad)
mov
xchg
mov
out
push
and
xchg
mov
fmul
jae
mov
xor
call
shl
cmp
or
xor
jbe
xor
loopne
push
xchg
and
jl
lahf
jne
and
dec
jmp
call
cmc
cmp
xchg
and
or
aas
and
adc
dec
sbb
ret
xchg
out
test
cdq
es
inc
cld
mov
out
push
repz
js
retf
push
xchg
sbb
test
(bad)
jl
add
nop
add
out
repz
dec
jmp
pop
mov
lock
mul
sbb
(bad)
aad
loope
loope
jmp
ja
pop
pop
mov
in
or
sub
nop
(bad)
sub
in
dec
dec
jmp
retf
sti
fwait
adc
(bad)
not
xor
pop
dec
mov
scas
or
outs
ins
ret
xor
rcr
mov
scas
outs
rol
movs
xchg
out
stc
lods
mov
in
outs
mul
mov
jmp
pop
not
rol
sub
pop
cmp
mov
inc
fcmovne
mov
aad
(bad)
fwait
cmps
and
mov
fnstcw
sub
xchg
gs
mov
xor
lods
add
cwde
ror
xlat
jmp
fldpi
repnz
adc
mov
push
test
retf
pop
jae
cmp
xchg
cmp
fdiv
xchg
inc
dec
cs
int3
mov
pop
leave
out
inc
jle
call
ret
jp
push
adc
or
mov
imul
repnz
mov
int
xchg
nop
add
cdq
dec
sub
and
cmp
jge
adc
pop
jnp
jno
jnp
and
das
mov
adc
retf
lods
int
adc
and
sub
jmp
mov
into
(bad)
pop
daa
dec
cli
or
adc
xlat
inc
cmp
xchg
pop
movs
jbe
repnz
adc
test
mov
int3
dec
loopne
adc
and
aad
push
addr16
push
mov
or
push
jne
sti
fsub
mov
hlt
dec
mov
mov
xchg
enter
jmp
mov
jmp
vpshuflw
in
sbb
out
in
mov
cvttps2pi
jns
and
sub
sbb
mov
scas
in
inc
sbb
pop
fimul
inc
mov
push
(bad)
jae
and
sbb
je
push
dec
into
pushf
je
push
jae
int
fmul
lea
and
xor
and
(bad)
and
ins
mov
jmp
cli
pop
(bad)
aad
aam
mov
pushf
mov
data16
jno
ins
mov
jmp
mov
inc
(bad)
mov
sbb
inc
mov
(bad)
mov
push
rep
push
(bad)
mov
pop
and
cmps
push
movs
cmp
and
int
sub
jae
jbe
cmp
sub
mov
dec
pop
and
jae
scas
and
ds
xor
imul
sub
push
sub
sahf
pop
in
shr
cmp
les
or
mov
pushf
aam
adc
fucomi
stc
and
out
pop
jne
fdivr
mov
sbb
in
(bad)
lods
in
push
mov
lock
gs
xchg
leave
lock
mov
neg
loopne
dec
pop
imul
and
gs
jg
mov
movaps
dec
mov
retf
xchg
in
mov
test
ret
cli
mov
leave
rol
ja
out
sub
stos
mov
dec
ret
add
test
mov
sub
xor
cmps
sub
stos
cld
mov
out
shr
cmp
jmp
sub
jp
(bad)
outs
mov
sbb
out
jne
xchg
push
outs
xchg
das
jp
scas
fnstcw
cmps
and
mov
pop
xchg
mov
jge
inc
pop
jg
aad
jecxz
mov
imul
mov
ficom
mov
inc
xor
test
jmp
sbb
ins
mov
sbb
pop
inc
sbb
mov
in
popa
mov
push
mov
jno
jb
lahf
retf
push
das
hlt
pop
or
or
call
xor
adc
add
mov
pop
pop
(bad)
ins
cli
dec
push
mov
(bad)
cld
inc
shr
lea
mov
cmp
in
(bad)
rcr
(bad)
fyl2xp1
ficomp
adc
inc
dec
add
out
push
xchg
pop
adc
(bad)
mov
add
sbb
cmp
movs
bound
inc
in
aas
mov
xchg
ret
dec
or
into
jecxz
(bad)
cmp
xchg
aad
lds
pop
hlt
(bad)
rcl
fcmovne
adc
xchg
jg
mov
fst
int
mov
ja
mov
(bad)
call
mov
adc
int3
sbb
and
add
stos
enter
jmp
mov
std
jb
in
xchg
rcr
icebp
fs
repnz
stos
add
call
dec
sbb
in
std
jno
pop
push
sbb
sub
aas
xor
loope
fiadd
cmp
cmp
lock
xchg
mov
mov
popf
iret
inc
inc
(bad)
jmp
imul
imul
push
inc
pop
call
jmp
inc
mov
out
pushf
ret
adc
add
mov
push
xchg
and
and
imul
adc
mov
in
push
in
(bad)
and
mov
out
pop
movs
jb
mov
push
jg
pop
dec
bound
mov
dec
xor
lods
adc
push
cmp
add
popa
aas
call
outs
push
dec
sbb
jge
test
mov
div
mov
inc
pushf
mov
aam
std
mov
xchg
mov
add
lods
je
inc
pop
cmp
mov
xrelease
nop
pop
push
(bad)
arpl
inc
(bad)
(bad)
mov
xchg
cmp
movs
mov
xchg
lds
adc
mul
adc
fist
or
imul
or
jns
mov
inc
movs
stc
lds
inc
dec
popa
and
(bad)
popa
pop
xor
xor
in
ds
or
dec
push
inc
jge
shl
jle
stos
xlat
sbb
fcomp
adc
es
ja
xchg
dec
mov
xlat
dec
cmc
xchg
sar
out
stos
sbb
inc
test
xlat
cld
pushf
bound
loopne
pop
repz
mov
fiadd
push
lock
je
out
jno
mov
movs
iret
mov
xchg
sbb
addr16
movs
mov
adc
sub
je
xor
xor
loopne
aaa
fs
mov
stos
rcr
mov
mov
pop
cmps
loop
cmp
and
inc
call
imul
xchg
mov
adc
out
lods
int
cmps
push
pop
and
mov
or
jmp
out
xor
sbb
cmp
out
mov
inc
shl
jle
cli
pop
nop
xor
xor
sub
mov
fs
stos
mov
in
mov
dec
lods
or
nop
cmc
mov
cmp
cli
or
fcom
lahf
and
cmp
ficomp
inc
loopne
call
(bad)
jle
data16
mov
or
mov
dec
fild
fcmovnbe
loop
pop
js
daa
clc
mov
mov
cmp
in
outs
xchg
and
jg
out
mov
popf
pop
jns
xchg
ret
push
les
retf
inc
pusha
xchg
outs
inc
ret
je
xor
push
add
cli
xor
xchg
pop
int
adc
loopne
call
xchg
jns
xchg
mov
pop
mov
dec
pop
lahf
ds
push
and
mov
jns
sbb
xchg
pop
add
and
mov
mov
outs
push
adc
cmp
push
mov
cli
mov
in
jl
pop
pop
xor
loopne
sub
retf
push
hlt
sub
scas
daa
shl
mov
sbb
sub
xor
(bad)
mov
pop
mov
ja
mov
cmp
cs
jns
xor
jnp
dec
adc
bound
(bad)
mov
out
pop
mov
sub
sbb
inc
cmp
dec
sub
call
xor
jo
and
rcl
xchg
pop
ins
test
iret
cmps
sbb
shl
sub
jb
push
pop
pop
push
call
push
xor
outs
add
cmp
aas
and
xor
popf
bound
add
test
rol
xor
fld
mov
test
xor
fnstcw
dec
or
inc
xor
nop
lds
retf
jbe
pop
movs
lods
int3
outs
lds
pop
push
ds
fcmovbe
xchg
fs
adc
loopne
inc
ret
jb
push
fisub
xor
push
sti
lods
js
dec
imul
mov
and
and
xchg
cmc
cmp
sahf
fsubr
call
sub
cmp
in
fsub
ins
mov
(bad)
retf
sbb
jmp
sub
inc
outs
call
retf
mov
mov
dec
mov
cs
inc
dec
sar
daa
push
popf
inc
xchg
neg
adc
cmps
jns
and
push
push
enter
(bad)
dec
movs
ds
xchg
and
minps
mov
into
fmul
xchg
or
sbb
fidiv
cld
push
xlat
call
pop
bound
daa
cwde
inc
pop
f2xm1
xor
jno
jmp
out
into
push
out
addr16
ficomp
iret
movs
sbb
xchg
lahf
ret
gs
lahf
or
cmp
mul
jbe
ja
dec
pop
mov
std
sbb
xor
mov
ret
xchg
cmp
imul
mov
outs
fwait
jle
pop
sbb
pop
xor
xchg
xacquire
imul
xor
int
retf
jg
call
ja
xchg
push
mov
mov
sub
mov
ss
mov
inc
mov
repnz
push
push
mov
stos
jecxz
xchg
inc
mov
sar
jbe
(bad)
xchg
loopne
sbb
mov
pushf
adc
jns
or
and
xor
push
es
xchg
ret
ins
stos
ror
or
mov
mov
imul
jnp
ror
cmp
lds
js
sbb
add
mov
std
lock
in
jne
cs
movs
in
or
inc
xchg
popa
popa
imul
push
dec
outs
(bad)
sbb
es
clc
rcl
mov
fprem
mov
sbb
mov
test
test
shl
mov
mov
cmps
dec
in
and
mov
ins
adc
mov
movs
imul
or
mov
cli
imul
out
enter
dec
cmps
jmp
fs
cmp
xor
call
scas
mov
push
inc
sbb
(bad)
xor
icebp
inc
pushf
xchg
jecxz
or
inc
push
jne
in
repz
adc
mov
push
cmp
es
icebp
ds
loop
add
inc
gs
(bad)
mov
outs
and
push
nop
cs
push
cld
adc
outs
fcmovb
ficomp
data16
jbe
xchg
fwait
jnp
push
mov
call
fdiv
movs
inc
mov
(bad)
mov
push
data16
pop
or
pop
or
(bad)
js
mov
mov
mov
dec
mov
popf
ss
xor
inc
mov
pop
add
loopne
inc
fwait
sti
ret
cdq
mov
lock
sbb
jmp
pop
imul
scas
mov
xchg
jge
out
pushf
add
out
(bad)
std
mov
movs
cmc
add
push
pusha
lods
xor
pop
sub
call
dec
in
aaa
jge
xchg
test
test
lahf
pusha
mov
aas
pop
adc
mov
jmp
nop
shl
popf
repnz
out
sbb
mov
xor
or
push
pop
cmp
in
ret
pop
adc
adc
mov
les
inc
adc
aad
pop
nop
fild
in
scas
stc
(bad)
jecxz
xchg
ss
out
push
sbb
xor
cmp
add
or
mov
frstor
pop
xor
rcr
fisubr
jno
jae
aaa
imul
pop
inc
jae
mov
adc
mov
rcr
(bad)
sbb
inc
cmp
in
fiadd
adc
mov
int
out
adc
inc
inc
pop
int
lods
xor
cmp
int
enter
inc
push
jae
push
push
std
xchg
mov
dec
les
stos
pusha
(bad)
mov
fsub
(bad)
mov
sub
mov
sti
test
(bad)
or
stos
iret
and
dec
push
cmp
aas
xchg
lods
sub
inc
jns
pop
push
outs
sbb
sti
hlt
adc
pop
push
ds
in
cli
cmp
dec
sub
and
push
(bad)
jge
jbe
pop
adc
movs
jne
adc
retf
sub
push
ins
icebp
inc
jb
fld
or
push
test
sub
jg
mov
sti
out
int3
stos
push
pop
add
cld
inc
iret
mov
add
jnp
or
sar
movs
xor
mov
xchg
int
movs
inc
or
(bad)
mov
inc
fadd
popa
add
dec
or
ins
push
push
mov
sub
in
push
cmc
sbb
mov
jge
push
adc
xchg
loopne
dec
adc
xchg
lds
xchg
repz
js
mov
cmp
arpl
sbb
add
add
lahf
or
or
sti
add
jae
sbb
ss
mov
fdiv
test
mov
pop
test
cmp
and
lds
jmp
sub
mov
fcom
mov
mov
ins
pop
bound
sub
add
(bad)
dec
sti
mov
push
ds
sbb
xor
jne
(bad)
push
lahf
mov
ja
cmp
test
gs
xchg
pop
push
sub
cmp
dec
adc
loope
or
ja
pop
fisubr
mov
push
or
(bad)
or
push
jecxz
xchg
jle
mov
pop
test
retf
mov
cmp
mov
pushf
cmps
scas
ds
repz
pop
pop
jbe
lea
inc
or
mov
stos
sub
loopne
or
inc
mov
pop
push
push
popa
and
mov
jge
pop
adc
xchg
retf
inc
add
xchg
stos
cmps
aam
shl
jmp
sbb
sahf
pushf
test
and
(bad)
mov
add
jl
push
repz
inc
ja
push
cmp
fld
push
sbb
pop
cld
cmps
rcr
mov
jne
pop
scas
enter
jmp
and
adc
aad
xor
xchg
xchg
pop
inc
sbb
test
int
push
push
jb
pop
ja
cmp
xchg
mov
(bad)
mov
ror
adc
sub
cmp
icebp
aaa
movs
pop
push
push
(bad)
push
jnp
into
sub
cs
and
mov
or
xchg
aas
cwde
rol
inc
mov
mov
push
fsub
cmp
sbb
iret
loope
je
adc
cmp
mov
jnp
imul
inc
stc
sbb
pushf
jbe
pop
mov
(bad)
push
cwde
ins
cmp
xor
(bad)
mov
outs
xor
mov
pop
retf
rcr
adc
bound
es
or
mov
jae
mov
mov
mov
adc
mov
push
push
dec
cmp
sti
daa
shl
lea
lahf
cmp
stc
test
dec
jo
test
stc
cld
test
mov
mov
xchg
loop
mov
cld
dec
pop
ror
out
popf
retf
arpl
push
sti
ror
xor
mov
rcl
ins
jl
and
(bad)
inc
mov
ins
jmp
fwait
jl
mov
neg
xchg
out
push
inc
push
pop
stc
pop
mov
lea
ret
stos
les
adc
fs
je
int
dec
sub
xor
inc
pop
sub
outs
out
and
mov
fbld
iret
in
test
scas
cmp
and
xchg
or
loopne
popa
addr16
fisub
inc
pop
xor
scas
cmp
and
inc
jb
sub
cli
pop
test
addr16
loop
data16
mov
push
add
jmp
pop
mov
clc
push
inc
add
repnz
test
pushf
dec
cmp
and
stos
pusha
ins
pop
nop
and
movs
into
sbb
sti
and
loope
mov
nop
sub
ret
xchg
cdq
addr16
xor
test
shl
ret
jecxz
and
add
sbb
in
mov
ror
shl
test
(bad)
adc
push
xchg
shr
mov
cs
jmp
adc
js
adc
or
mov
push
(bad)
lods
and
pop
outs
cmps
cmp
imul
ror
mov
and
inc
mov
xchg
sub
xchg
cld
scas
sub
xor
popf
ja
mov
retf
cmc
and
sub
sbb
lods
adc
push
jb
inc
mov
xchg
fiadd
xor
push
rcl
cdq
cmps
push
inc
sub
sub
outs
cmp
repnz
sbb
ins
xchg
fs
outs
push
je
imul
cmps
mov
xchg
jb
(bad)
sbb
or
mov
xor
lea
mov
inc
xor
call
daa
ins
mov
fidiv
mov
dec
mov
xor
popa
ret
cmp
sub
out
jnp
jb
push
shl
and
arpl
mov
int3
cmps
arpl
jmp
lea
and
out
fcomp
inc
mov
adc
push
lds
and
mov
retf
jnp
cld
sbb
pop
mov
sub
cmp
add
xor
outs
jp
adc
xchg
xor
adc
inc
test
out
jecxz
pop
mov
lock
movs
aas
jmp
or
add
aam
push
and
popa
mov
mov
jo
fwait
loopne
xchg
dec
fadd
xbegin
cmps
and
jmp
mov
add
cdq
aaa
call
ret
das
in
cwde
pop
iret
xchg
stos
rol
outs
(bad)
jo
ins
dec
mov
or
mov
adc
lock
jl
js
jmp
adc
xchg
out
pop
pop
sbb
inc
inc
mov
in
daa
cs
and
call
movs
mov
repnz
push
sub
call
clc
sbb
cmp
xlat
adc
dec
push
(bad)
ja
inc
push
imul
mov
fbld
jb
in
clc
cmp
call
stos
js
sub
fwait
mov
retf
mov
repnz
out
add
push
xchg
cmp
push
or
mov
xor
jo
xor
cld
adc
test
push
push
jle
and
mov
daa
out
shl
stos
in
adc
pop
dec
adc
push
dec
jns
fdiv
call
lea
or
fild
popa
xchg
push
cli
test
es
sub
and
xchg
jbe
bound
cmp
outs
xor
cld
arpl
(bad)
aas
or
mov
and
pop
shl
mov
and
out
(bad)
outs
aam
xchg
outs
fdiv
lods
cld
aas
mov
cmp
daa
(bad)
scas
pop
or
stc
add
pushf
sub
aam
movs
mov
call
mov
cwde
inc
or
popa
out
call
loopne
xchg
adc
inc
outs
push
rcl
loopne
pushf
or
cmc
sub
clc
clc
jbe
pop
mov
inc
sbb
fmul
mov
clc
adc
(bad)
xchg
dec
ds
fistp
or
adc
mov
lock
addr16
mov
mov
mov
xchg
outs
cdq
dec
fsubr
and
mov
xlat
ret
enter
sbb
fild
fmulp
sub
lods
mov
jle
sbb
mov
jne
hlt
sbb
stc
lahf
jmp
lahf
dec
sbb
xor
push
inc
test
into
push
mov
cli
push
mov
push
fs
js
scas
shl
mov
mov
jbe
scas
and
pop
call
push
or
adc
out
arpl
ds
xchg
push
dec
js
idiv
mov
(bad)
xchg
loope
out
movs
mov
xchg
pop
pop
add
adc
imul
add
cwde
std
rcl
clc
hlt
aam
mov
and
xchg
icebp
jb
jg
ror
xor
sar
call
das
and
adc
xor
push
xor
mov
ret
pushf
xor
lods
ret
shr
ja
aas
call
aas
mov
mov
dec
mov
(bad)
aam
fst
outs
(bad)
cld
out
jbe
jecxz
mov
data16
loop
neg
inc
ret
out
pop
repz
(bad)
sub
inc
in
cmp
mov
push
cld
cmps
sbb
ins
jnp
arpl
xor
and
sub
xor
and
xor
lock
das
jmp
lods
push
es
adc
stc
fs
push
jg
mov
xchg
repz
jge
mov
dec
test
push
sub
gs
iret
push
aad
lods
dec
sbb
in
popf
repz
dec
loope
add
push
repnz
adc
mov
ins
sub
cld
(bad)
jmp
loope
mov
push
loope
(bad)
clc
gs
imul
sub
xor
xor
retf
sub
dec
fst
lock
jae
dec
jb
inc
loope
jmp
pop
sbb
mov
mov
push
aaa
ins
mov
mov
jge
fbld
or
mov
mov
jne
in
rcl
repz
pop
sahf
push
pop
loop
gs
fld
call
pop
(bad)
scas
mov
dec
test
idiv
or
mov
jns
jl
cmp
out
fstp
(bad)
ds
cs
je
push
test
pop
lods
add
mov
mul
mov
cmp
jl
jns
inc
mov
call
lods
jbe
stc
mov
outs
adc
fist
adc
shrd
jbe
les
mov
and
loopne
sub
adc
popf
ss
jmp
mov
xchg
lods
jbe
dec
movs
jb
jp
xchg
mov
mov
and
xchg
nop
data16
out
outs
sti
pushf
ins
rcr
repz
les
push
int
push
xchg
ret
jnp
jecxz
jno
sub
dec
fisub
dec
in
mov
adc
jae
mov
bound
in
aad
pop
mov
adc
mov
xchg
inc
pop
fiadd
int3
push
add
cmp
add
shr
jne
iret
push
push
jp
jecxz
cdq
sbb
push
pop
into
sbb
or
adc
xor
cli
loop
mov
add
inc
je
pop
xchg
push
add
jle
or
push
and
adc
dec
and
inc
stos
hlt
inc
pop
jnp
inc
js
cdq
xor
hlt
(bad)
fcmovnb
mov
mov
mov
stos
hlt
dec
out
add
xlat
fwait
push
xchg
pusha
jae
fistp
leave
aas
xchg
dec
or
cmp
mov
jge
cdq
shr
sti
in
mov
and
xchg
(bad)
jmp
add
daa
add
dec
loope
sub
inc
xor
adc
into
push
or
pushf
pop
int3
push
fstp
loop
mov
push
(bad)
in
pop
push
out
ins
repz
pop
fcmovbe
jb
outs
inc
push
in
cmps
daa
mov
or
vhaddpd
dec
movs
bound
and
das
addr16
mov
jo
mov
mov
sbb
and
jg
cmc
call
pop
push
popa
cmp
mov
loopne
ffreep
icebp
jno
or
frstor
pop
popf
movs
div
lahf
push
add
rcl
(bad)
into
and
push
into
fadd
ss
pop
push
(bad)
and
cmp
jmp
inc
jmp
outs
xchg
inc
and
aaa
pop
fs
xchg
add
push
push
push
scas
mov
adc
rcr
mov
inc
int3
and
std
iret
jecxz
fsubr
jmp
inc
gs
test
dec
push
mov
xor
loopne
stos
mov
mov
arpl
or
mov
jg
mov
pop
jns
mov
adc
push
rol
inc
repz
push
(bad)
cdq
mov
pop
adc
jns
jmp
cmp
mov
mov
or
inc
rcr
test
test
sub
mov
sbb
mov
dec
outs
aaa
push
stc
dec
ret
daa
(bad)
and
add
test
mov
lods
jns
loop
hlt
mov
pop
inc
add
jg
pop
psubusb
popf
and
ins
jmp
fbstp
pop
ss
std
ss
es
fcomi
mov
out
add
mov
push
into
cmp
pop
mov
shr
test
fs
mov
cmp
ss
or
dec
mov
push
pop
dec
shl
mov
(bad)
ror
mov
jg
xchg
mov
mov
loop
imul
stc
push
lahf
je
push
push
popa
ret
mov
lahf
shr
out
sub
ins
jg
push
fdivp
push
jle
outs
imul
std
(bad)
push
push
test
imul
int
push
sub
xchg
nop
mov
and
movs
push
adc
lods
push
push
push
cmp
pushf
add
sub
mov
nop
pop
xchg
sbb
cli
pop
add
xor
loope
adc
mov
outs
pop
sub
xchg
call
daa
ja
sbb
inc
or
std
pop
fmul
jne
outs
aaa
outs
jne
dec
push
mov
add
in
out
mov
daa
mov
mov
jmp
fldcw
push
les
inc
or
jmp
adc
loopne
push
sbb
sbb
(bad)
sti
jmp
and
xlat
mov
cmp
xor
dec
dec
cdq
or
adc
mov
push
stc
dec
mov
or
push
jmp
add
pop
mul
gs
sub
adc
and
pusha
mov
js
scas
pusha
mov
jg
mov
mov
imul
and
pop
leave
data16
in
mov
push
outs
aaa
pop
sub
pushf
ret
shl
sbb
stos
xor
mov
aam
ret
inc
push
sub
rol
mov
mov
and
push
xor
cmps
stos
jae
adc
add
sar
add
cs
dec
mov
inc
loopne
aaa
and
test
sbb
call
ds
and
sub
pop
lea
mov
clc
mov
enter
mov
jbe
ret
xor
jns
inc
cld
xchg
push
sub
push
sbb
add
cli
mov
or
data16
push
adc
lds
(bad)
pop
jbe
scas
movs
shl
bound
xchg
mov
jecxz
dec
imul
into
dec
sar
mov
fdiv
lods
test
pop
mov
aas
ss
push
out
and
(bad)
pop
mov
js
pop
pop
adc
and
pop
or
(bad)
fldenv
std
pop
hlt
outs
out
inc
fcomp
sbb
es
rcr
rcl
jl
fmul
fwait
stos
(bad)
pop
clc
ret
adc
or
mov
pop
popa
movs
lds
or
adc
cmp
push
test
inc
inc
dec
pop
sgdtd
push
mov
in
gs
push
jmp
jg
ins
xlat
aad
call
cmp
jnp
mov
test
in
icebp
sub
mov
mov
das
jmp
cmp
unpckhps
es
(bad)
or
pop
mov
adc
xor
movs
sar
xchg
test
mov
pop
in
lods
in
sub
imul
push
jo
addr16
hlt
int
ins
gs
and
pop
jbe
cmp
aas
clc
retf
(bad)
retf
nop
ret
repnz
in
dec
out
mov
stc
rep
pop
mov
jmp
inc
or
int3
mov
aam
(bad)
dec
push
stos
inc
dec
pushf
pushf
test
mov
mov
inc
(bad)
popa
data16
daa
clc
xchg
es
pop
out
shr
imul
movs
sbb
sub
xchg
xlat
sub
dec
add
call
jl
xchg
push
adc
fnstcw
cmps
xor
(bad)
mov
and
ja
sti
jge
pop
(bad)
mov
mov
fs
aas
inc
mov
in
or
mov
or
push
sub
xchg
jo
xchg
pop
jns
dec
mov
inc
imul
cmp
popf
dec
adc
cmp
into
sub
jmp
push
sbb
mov
popa
jmp
jp
ds
icebp
(bad)
xor
pop
ins
les
adc
movs
push
jle
mov
sar
stos
das
mov
push
or
(bad)
mov
sub
and
jecxz
out
mov
aam
shr
pop
(bad)
stc
jl
fnstsw
or
adc
lahf
je
fs
xchg
pop
fbstp
fwait
dec
les
xor
jbe
jmp
xor
comiss
xchg
mov
jp
add
icebp
stc
into
(bad)
movs
call
fidiv
shr
xchg
add
and
push
stos
mov
loope
and
and
xchg
div
cmc
mov
pop
imul
popa
and
and
(bad)
xlat
jb
xor
dec
xchg
idiv
pop
retf
mov
(bad)
ror
inc
jbe
leave
sub
inc
mov
out
mov
cmp
ret
rcl
lods
in
sbb
fcmovnbe
or
or
mov
mov
fwait
mov
jnp
dec
pop
add
sti
fs
jmp
dec
mov
jecxz
adc
jle
rol
sub
sbb
mov
mov
lods
out
push
inc
adc
dec
mov
outs
mov
mov
fsubr
(bad)
fld
jns
jae
nop
out
and
shl
sbb
pop
hlt
int3
sbb
lahf
arpl
jge
cmc
out
stc
js
or
call
ins
out
xchg
adc
(bad)
and
in
popa
dec
and
les
call
std
mov
pop
cmc
movs
ret
jg
xor
aad
mov
addr16
adc
jno
and
leave
inc
mov
sbb
add
jmp
jl
mov
sbb
add
mov
jbe
daa
mov
std
inc
mov
mov
jne
stos
adc
mov
ret
pushf
xchg
mov
cmp
imul
js
call
clc
and
ds
push
jge
cmp
push
xor
test
push
shr
shl
mov
outs
xchg
or
getsec
popf
or
(bad)
xchg
mov
mov
pop
into
loope
test
cmp
cli
xchg
call
les
mov
sub
and
xchg
cli
mov
mov
out
inc
sub
hlt
and
es
mov
push
pop
inc
outs
pusha
(bad)
fisttp
adc
xlat
jo
sub
lods
int
(bad)
push
and
sbb
adc
arpl
daa
test
dec
push
das
bound
bound
push
mov
in
xchg
ss
dec
out
inc
popa
jl
retf
loope
in
inc
ins
fcomp
xchg
push
test
mov
test
fmul
dec
sub
mov
mov
jp
adc
lods
adc
mov
jl
jbe
das
jbe
cwde
out
pushf
mov
sbb
cmps
cdq
aam
out
dec
sbb
xor
dec
xchg
and
push
inc
ja
(bad)
loopne
imul
inc
shl
sub
pop
pop
jg
lods
inc
push
arpl
cli
aam
jp
or
inc
lods
cmc
lea
jmp
dec
stos
(bad)
mov
mov
and
xor
pop
popa
aaa
cmp
jno
cmp
in
push
shr
cmp
mov
mov
mov
xor
clc
popa
add
mov
movs
lock
cs
adc
mov
(bad)
jmp
lods
dec
and
adc
lahf
and
outs
ins
and
lahf
retf
or
into
cmps
pop
push
sahf
push
test
xchg
and
rcr
and
push
arpl
cmps
pop
mov
(bad)
test
jne
es
dec
out
adc
and
sub
fisttp
cmp
fcmovb
mov
in
add
or
cwde
movs
xchg
out
xchg
mov
lods
mov
inc
xchg
popf
cs
adc
xor
stos
cmp
pop
repnz
call
in
into
push
(bad)
push
cmp
and
inc
call
jl
mov
mov
loop
jae
sbb
inc
xor
test
lods
popf
push
inc
cmc
mov
mov
pushf
xchg
add
sahf
sbb
outs
or
dec
(bad)
pop
cmp
sbb
push
movs
retf
mov
adc
in
repnz
pop
jmp
xor
pusha
and
(bad)
fiadd
xor
mov
popf
pusha
icebp
stos
scas
inc
and
adc
adc
sub
iret
in
jecxz
sub
(bad)
fisubr
and
mov
(bad)
mov
ss
fcom
mov
call
pop
pop
stos
mov
outs
xchg
sti
xor
fwait
mov
adc
sub
out
ja
mov
lock
stos
loopne
inc
mov
sub
and
add
adc
jns
pop
mul
jg
xchg
in
sti
(bad)
cs
(bad)
lahf
adc
rcr
adc
mov
fsubr
movs
xchg
add
pusha
mov
adc
push
pop
mov
dec
xchg
loopne
cmc
sbb
or
cwde
add
sbb
pop
push
sbb
stc
scas
or
sub
inc
ins
in
repz
in
test
or
jnp
cmps
jns
pushf
(bad)
cmps
add
outs
lahf
pop
or
mov
jmp
gs
movs
inc
inc
jecxz
cmps
add
ins
gs
shl
xchg
cwde
and
rol
jbe
data16
push
(bad)
mov
pop
cdq
stc
add
mov
outs
stos
test
stc
adc
imul
xchg
pop
add
scas
(bad)
stc
jl
idiv
pop
mov
or
fild
ret
mov
cmp
ins
and
sbb
mov
mov
jecxz
sbb
in
nop
ror
mov
pop
mov
pop
jecxz
xchg
sub
iret
je
push
xor
xchg
test
hlt
jmp
outs
retw
mov
cmp
test
mov
mov
pop
dec
push
retf
adc
pop
mov
sbb
enter
pop
sbb
shr
and
sbb
inc
dec
mov
rol
jne
ins
adc
cmp
mov
adc
jle
out
scas
cli
in
xchg
je
test
lea
sbb
cmp
mov
les
cmp
add
add
add
push
daa
les
push
fnstsw
adc
daa
pusha
out
dec
push
cmps
and
test
adc
rcl
sbb
add
jmp
rcr
jbe
mov
and
arpl
outs
add
out
adc
dec
shl
shl
addr16
(bad)
aad
sbb
add
cld
inc
ror
imul
ror
xor
inc
sbb
in
loopne
pop
and
out
mov
mov
sub
or
push
pop
sahf
mov
aad
xchg
mov
sub
nop
xchg
xchg
dec
mov
call
push
mov
inc
js
jp
mov
mov
dec
pop
sub
mov
adc
jg
js
pushf
xor
add
push
add
cld
jmp
sbb
outs
mov
or
sub
xchg
push
mov
mov
jo
ret
add
and
mov
inc
into
cdq
les
xchg
dec
scas
jl
push
xchg
and
mov
fwait
lahf
test
mov
pushf
inc
push
xor
cld
fadd
loope
lods
inc
xlat
popa
xlat
cdq
sub
int3
adc
push
std
and
in
iret
(bad)
lahf
ds
and
scas
sbb
jnp
int3
test
sahf
bound
or
adc
adc
pop
pop
or
xchg
push
mov
in
mov
cmps
std
inc
adc
xchg
dec
aaa
cli
dec
add
mov
shr
into
(bad)
jne
fimul
jmp
xchg
out
cmp
or
mov
sbb
out
sbb
jg
ret
add
hlt
pop
gs
add
test
dec
mov
je
ja
(bad)
mov
loop
and
push
adc
or
push
sub
cmp
aam
imul
js
pop
popa
and
sub
pop
lock
mov
dec
mov
inc
ins
and
test
xchg
mov
arpl
cmp
fst
sti
leave
data16
mov
and
jmp
not
(bad)
or
jmp
(bad)
pusha
jb
icebp
test
adc
imul
sbb
push
data16
inc
(bad)
sub
pusha
enter
ficom
mov
mul
and
mov
ss
sbb
pushf
(bad)
mov
dec
xor
mov
jge
arpl
ins
(bad)
mov
lds
xor
cmp
adc
add
dec
out
mov
sub
dec
test
jle
test
lahf
fisubr
(bad)
das
ins
std
pop
jmp
and
and
jno
pop
iret
stos
ficom
mov
mov
outs
mov
inc
gs
pushf
test
push
(bad)
sub
outs
add
and
mov
xor
jp
das
pop
ret
jl
dec
jne
and
xchg
outs
ins
addr16
inc
fstp
jp
sbb
imul
cmp
pop
sbb
fiadd
push
jmp
cmp
movs
jo
outs
outs
nop
sub
(bad)
aad
bound
xchg
cmp
pop
aam
test
je
fcomp
dec
arpl
adc
in
push
test
mov
inc
cmp
shl
std
rol
pop
mov
mov
sub
enter
ret
push
addr16
test
ins
gs
in
xchg
(bad)
in
shl
sbb
dec
stos
push
in
ja
sub
scas
adc
test
jmp
pop
in
pop
mov
jo
push
fild
mov
enter
sar
ins
mov
jmp
pop
out
jo
xor
je
or
mov
dec
adc
xchg
scas
stc
call
xchg
lds
jmp
lods
xchg
(bad)
push
mov
xchg
in
stc
cmc
test
sbb
(bad)
pusha
je
or
shl
jbe
sub
pushf
out
cmp
stos
aad
rcl
pop
sub
(bad)
not
aam
nop
lods
pop
das
xchg
je
dec
mov
cmps
inc
pop
sub
repnz
test
mov
imul
mov
push
xchg
xor
jae
jne
dec
daa
ss
out
mov
push
mov
outs
cmp
xchg
mov
adc
or
inc
mul
sub
adc
add
out
call
cs
imul
dec
push
retf
push
jp
push
bound
sub
push
jns
cs
cmps
sbb
jae
out
lods
icebp
cld
mov
mov
(bad)
mov
movs
test
pop
sub
fcom
xchg
out
sub
loope
mov
mov
sub
cwde
cmp
aaa
inc
shl
int3
mov
out
div
mov
iret
outs
inc
stos
into
les
ins
scas
mov
in
pop
into
and
out
mov
(bad)
fisubr
cmc
stos
push
inc
jl
data16
or
adc
adc
mov
or
jb
ja
or
add
cmp
mov
loop
mov
(bad)
sub
mov
fidivr
ss
push
das
movs
cmp
cmp
or
mov
push
fist
and
adc
xor
sar
call
fadd
mov
jnp
(bad)
(bad)
pop
(bad)
in
inc
enter
mov
lahf
or
pop
nop
xchg
mov
data16
int3
inc
xlat
fidiv
push
fwait
les
fsubr
pop
mov
jbe
push
jge
fidiv
ror
push
cmp
fiadd
arpl
std
inc
xor
js
gs
xchg
mov
sub
mov
jns
pop
push
iret
ss
stos
adc
mov
out
cmp
xchg
test
adc
xchg
scas
loop
mov
inc
sbb
dec
sbb
gs
inc
mov
das
es
hlt
jns
pop
cmc
push
int3
or
mov
push
jb
mov
add
inc
cs
jns
stc
jp
adc
pop
cmp
mov
stc
mov
mov
hlt
ficom
mov
mov
cmp
sub
dec
aas
sub
clc
and
lds
dec
push
dec
push
cmp
lds
dec
hlt
inc
add
loop
das
cmps
(bad)
push
mov
aam
arpl
cwde
in
rol
jb
lods
push
les
into
shl
inc
pop
mov
cmp
fsub
mov
cmp
add
jmp
mov
xor
nop
jle
jmp
int
int3
jg
(bad)
mov
stos
mov
loop
or
jno
cmp
leave
xchg
shl
cmc
inc
out
loop
popf
add
mov
xor
int3
jl
push
cld
std
push
lds
(bad)
std
in
add
and
inc
fiadd
popf
retf
lods
lods
pop
not
in
and
cmp
mov
add
jbe
out
scas
xchg
jo
call
cs
and
cmp
pop
int
test
mov
xchg
mov
xchg
or
stc
jne
outs
int
dec
push
or
ret
imul
ja
mov
cmc
jb
sahf
inc
movs
repz
rcl
pop
push
leave
sub
ins
push
jbe
pop
out
retf
cdq
lods
repnz
(bad)
inc
cmp
stos
sti
xor
das
out
or
dec
pop
lods
pusha
sbb
push
sbb
retf
or
fwait
lods
pop
push
(bad)
dec
push
sub
sbb
stos
data16
push
push
popa
jns
xor
jmp
popa
mov
loop
push
add
xchg
fcom
shr
clc
retf
outs
jle
js
imul
or
sahf
sub
jg
xor
cwde
bound
icebp
pop
push
mov
xor
mov
add
or
mov
mov
stc
or
xchg
add
dec
sbb
cli
cld
lods
sub
xor
mov
psadbw
mov
jo
pushf
pushf
jne
int
and
mov
cmc
enter
jne
mov
bound
push
jle
fiadd
scas
mov
or
cmp
popa
adc
sbb
clc
mov
std
addr16
out
push
xlat
xchg
sahf
mov
not
test
pop
pop
enter
pop
and
cmp
rcl
cmp
test
inc
movs
and
popf
add
sbb
cld
(bad)
es
rcl
loop
mov
xchg
shl
test
pop
push
aaa
pop
jge
or
sahf
mov
mov
fstp
imul
pop
loop
jp
mov
test
js
mov
mov
mov
push
add
dec
fs
push
ja
dec
push
cmp
inc
ror
xchg
in
pushf
jbe
sbb
imul
movs
test
adc
cmp
mov
add
retf
gs
addr16
es
scas
dec
pop
retw
push
dec
sub
pusha
int
mov
loopne
dec
retf
jecxz
gs
push
pop
(bad)
ins
ja
dec
clc
jne
call
cmp
in
inc
lea
call
xor
xor
or
dec
clc
aam
retf
neg
icebp
push
pop
mov
inc
sub
ins
nop
xchg
sahf
mov
popa
jl
xchg
call
sbb
into
lahf
pop
out
frstor
add
xor
sbb
push
cdq
push
push
adc
movs
cmp
dec
jle
int
call
cld
lahf
inc
cmps
add
jmp
int3
aas
daa
retf
leave
in
popa
fiadd
mov
(bad)
pop
lahf
rol
cmp
jnp
or
out
in
xor
adc
mov
ins
(bad)
(bad)
mov
lahf
lods
movs
popf
popa
(bad)
fisub
test
jae
mov
push
xchg
mov
cmp
ds
fisttp
test
ret
cs
sub
enter
call
ja
and
fld
(bad)
xchg
mov
stc
dec
jne
add
popa
dec
enter
sbb
ins
or
xchg
mov
sahf
jp
neg
stc
mov
add
add
xor
xchg
add
jb
ret
mov
jb
jno
jnp
fisubr
jo
mov
jns
pop
and
(bad)
pop
(bad)
mov
leave
mov
(bad)
cmp
ins
movs
imul
fwait
shl
inc
add
push
fwait
adc
ds
lods
comiss
outs
shl
push
xchg
xor
xchg
or
not
pop
int
out
pop
pushf
in
mov
cld
push
and
sub
ficom
inc
in
push
sbb
arpl
lahf
jne
aas
stos
enter
imul
mov
(bad)
outs
cdq
(bad)
shr
ins
pop
aas
mov
xchg
retf
xchg
shl
sar
lock
cmp
pusha
int
data16
or
push
pop
loopne
sti
loop
pop
(bad)
faddp
xchg
cli
and
mov
lea
sti
movs
(bad)
or
mov
push
mov
fs
popa
std
(bad)
inc
idiv
or
lds
test
sbb
test
fpatan
ficom
or
jnp
pop
add
in
ins
fnstcw
xchg
and
inc
push
fs
jl
lahf
mov
push
mul
scas
xlat
dec
int
push
arpl
dec
sub
cmps
lods
pop
test
inc
mov
xlat
(bad)
cwde
retf
stos
leave
push
cmp
jmp
pop
jge
int3
pop
cld
mov
retf
pop
push
sub
xor
or
sub
or
sub
frstor
fist
cwde
gs
popa
adc
jbe
shl
int
fwait
in
or
push
loop
dec
rcl
scas
pop
fadd
or
inc
pop
je
fcmovbe
mov
pop
mov
or
mov
fsubr
mov
or
jae
int
test
das
loop
pop
dec
add
push
push
mov
xor
icebp
jle
xchg
hlt
ret
int
xor
or
pop
std
pop
(bad)
mov
inc
out
mov
arpl
jmp
xchg
inc
leave
popa
or
fs
movs
inc
fcomip
test
jecxz
ins
jmp
arpl
mov
push
push
and
mov
(bad)
outs
les
fxch
bound
int3
push
add
pop
cmp
test
mov
xor
adc
in
test
jb
jmp
inc
xchg
scas
sbb
lea
call
mov
push
mov
mov
ret
pusha
sub
pop
in
sub
adc
shl
add
in
or
ret
and
sbb
sbb
jno
test
jns
fmul
fs
inc
xchg
sub
or
push
and
icebp
adc
out
sbb
hlt
shl
mov
retf
ss
xor
sub
mov
idiv
test
sbb
inc
cmp
enter
loope
jo
je
cli
cmp
lock
pop
inc
ret
imul
imul
outs
mov
imul
push
aam
movs
xchg
or
std
sub
rcl
arpl
cmp
adc
mov
mov
mov
sub
jne
mov
mov
xor
in
popf
dec
xor
(bad)
dec
jmp
lods
jge
push
fwait
mov
inc
(bad)
mov
je
lods
mov
mov
(bad)
retf
pop
cmp
push
xor
ret
(bad)
movs
inc
clc
repz
mov
inc
test
daa
jne
stos
mov
jb
aam
nop
fnsave
pop
inc
aaa
mov
aaa
mov
leave
jmp
sub
jmp
and
fwait
mov
fild
nop
fstp
retf
int
test
test
xchg
out
cwde
mov
loope
cmp
fstp
(bad)
pop
add
cli
test
call
push
or
push
mov
setae
call
pop
repz
cmp
movs
jmp
pop
dec
sar
jae
or
pop
movs
mov
aad
xor
mov
int3
mov
mov
retf
je
bound
lods
adc
jecxz
nop
cmp
or
lods
sbb
push
sub
cmp
and
or
sbb
test
and
jnp
inc
and
sti
lods
xchg
dec
inc
and
adc
dec
je
add
and
loop
cdq
inc
sbb
xchg
jge
push
xchg
or
stos
in
xchg
sub
movs
push
cli
mov
loope
(bad)
adc
sar
sahf
shl
lock
das
xchg
jb
fs
adc
inc
sub
sub
cwde
fbstp
stc
mov
and
aas
push
push
arpl
adc
xchg
pop
xor
mov
out
mov
ss
add
adc
fld
fsubr
stos
sbb
out
loope
sub
pop
mov
cmps
add
or
cmp
cmps
jge
mov
mov
cmovs
sbb
or
or
cs
mov
dec
aaa
and
cmp
aad
ror
stos
lahf
sub
shl
inc
div
mov
retf
mul
sub
addr16
jmp
pusha
into
imul
mov
js
sbb
dec
mov
nop
das
mov
mov
fcomp
mov
in
mov
sti
cld
mov
xchg
iret
out
movs
cmp
and
xchg
test
pop
cmp
pop
repnz
push
xor
dec
cmps
xchg
nop
inc
imul
jo
mov
stos
adc
call
inc
mov
xor
pop
dec
jae
push
pop
xor
out
push
jne
sti
cs
or
sti
sbb
ficomp
daa
outs
(bad)
or
lea
std
adc
jmp
dec
push
lods
ficom
outs
fmul
mov
sub
inc
imul
mov
fnstcw
mov
cmc
mov
movs
cmp
mov
add
sub
add
sub
mov
stos
bound
cld
sbb
and
cmps
jle
xlat
sahf
jae
pop
fdivr
cmp
sub
inc
jns
pop
lods
out
lods
dec
hlt
inc
or
sar
iret
inc
(bad)
rol
jb
inc
push
test
cmp
or
or
adc
push
arpl
movs
sbb
pop
inc
xchg
fcomp
adc
mov
adc
cld
(bad)
jmp
and
jmp
and
add
lea
arpl
cmc
out
jmp
ror
out
push
and
adc
ret
dec
cmp
add
mov
push
mov
pop
or
nop
pusha
push
icebp
xor
mov
cmp
out
fsub
or
push
loope
test
xor
sub
call
adc
fst
and
mov
scas
outs
pop
push
inc
push
loope
push
jge
shl
add
cli
pop
and
sbb
pushf
sar
mov
add
mov
retf
mov
mov
jge
int3
inc
pop
shl
pop
mov
inc
jmp
loop
adc
or
xor
push
das
sbb
imul
xlat
enter
int
mov
sub
mov
mov
sub
pop
cmp
sti
mov
mov
stos
in
mov
bound
sar
icebp
dec
mov
pop
outs
dec
jo
ins
mov
es
fidiv
pop
ss
add
je
push
out
pop
dec
pop
aas
or
arpl
adc
push
mov
pop
les
cmps
mov
rcl
in
push
pop
add
fdiv
push
sti
push
(bad)
out
cmp
ss
and
ret
idiv
adc
repz
inc
mov
mov
sub
inc
inc
in
mov
mov
push
mov
cmp
jg
cmp
mov
jo
sub
jle
jns
push
out
(bad)
dec
ja
and
psrlw
test
push
push
call
fwait
xor
(bad)
dec
cdq
movs
jmp
test
jb
div
xchg
push
and
cmp
out
sbb
cmps
sbb
add
pop
aam
mov
and
popa
pushf
pop
or
or
mov
iret
mov
add
mov
mov
jno
sbb
or
test
pop
push
pop
icebp
scas
xor
jbe
dec
shr
mov
inc
movs
xchg
xor
mov
(bad)
pop
imul
add
bound
mov
arpl
data16
push
and
xor
inc
and
and
retf
aad
jno
mov
jb
movs
and
imul
jle
pushf
push
mov
push
sti
test
enter
xor
mov
inc
xchg
jo
fmulp
ds
js
adc
jecxz
popf
jmp
inc
fnstcw
in
mov
out
hlt
sbb
mov
add
mov
add
scas
xrelease
mov
movaps
rol
aad
xchg
lea
(bad)
cwde
loop
jo
rcr
mov
cmp
mov
sbb
ins
or
in
cld
mov
sbb
jb
test
mov
std
in
push
jo
(bad)
sar
push
(bad)
daa
in
popa
sahf
add
nop
jae
(bad)
cli
test
nop
outs
scas
or
stos
(bad)
daa
cmp
adc
ret
xchg
inc
aam
leave
jo
test
hlt
fdivr
fisttp
add
xchg
jmp
es
ja
xchg
cmp
xor
ds
es
retf
sbb
out
sbb
mov
sub
inc
jno
in
not
das
hlt
jge
jl
stc
cld
test
adc
ja
enter
inc
outs
ins
mov
cmp
jecxz
fcmovne
mov
xchg
sub
std
inc
out
mov
stos
cli
mov
xchg
sub
push
sub
retf
push
sbb
push
add
pop
mov
popf
arpl
dec
enter
mov
dec
jecxz
xchg
jle
retf
push
jo
mov
fisubr
jb
hlt
in
jnp
out
and
xor
pushf
xor
inc
jl
or
xor
int
cmps
inc
(bad)
shl
imul
test
mov
inc
loop
data16
and
repnz
mov
jnp
imul
push
and
add
cmp
daa
cs
fsubr
pop
aas
hlt
repz
das
ret
fnstenv
pop
pop
mov
jle
out
sti
or
xchg
push
add
pop
adc
or
push
out
enter
pop
xchg
mov
mov
jbe
rol
ins
rol
sahf
into
sbb
jmp
and
popa
cdq
cmp
jns
div
dec
mov
fsub
in
jb
fidivr
inc
(bad)
push
test
mov
cmc
mul
scas
hlt
xchg
xchg
(bad)
sub
jge
cld
int
xor
pop
sbb
sbb
cmp
add
push
arpl
mov
pop
sbb
pop
sbb
mov
dec
pop
(bad)
or
or
xchg
iret
cmp
adc
inc
ret
jno
xchg
lods
movs
mov
mov
xchg
fnstsw
dec
int
dec
mov
xor
fwait
sbb
sbb
mov
retf
and
pop
gs
out
or
adc
add
mov
pop
cmp
inc
inc
push
inc
dec
push
dec
imul
mov
jmp
jnp
or
pop
cmp
(bad)
sub
xchg
call
mov
mov
push
mov
jns
sub
outs
push
jp
leave
ror
and
in
push
cmp
fs
loop
push
mov
cli
inc
adc
mul
pusha
and
mov
stos
stos
in
sbb
sub
out
jo
stos
and
test
mov
pusha
(bad)
adc
inc
dec
fild
push
xchg
xor
stc
pop
arpl
sub
dec
cli
sbb
cmp
ret
cmp
fbstp
sbb
xchg
clc
dec
push
dec
pop
xor
enter
loopne
cmp
dec
cmps
jae
and
out
or
(bad)
hlt
inc
or
add
push
xchg
jmp
stc
adc
pop
sahf
mov
dec
or
stos
mov
cli
cdq
or
fcomp
and
lock
aas
push
mov
fadd
xor
cmp
adc
aas
movs
ja
ins
bound
ret
push
mov
ret
outs
and
push
inc
jo
jno
jb
movs
or
pop
clc
adc
pop
test
call
out
daa
mov
nop
shr
fwait
pop
sub
pop
mov
mov
iret
sbb
in
and
out
dec
mov
hlt
jae
test
pop
push
retf
in
mov
mov
sbb
call
xchg
in
inc
adc
jo
sahf
jl
jb
clc
push
scas
mov
jl
cld
test
push
cmp
mov
pmovmskb
rol
hlt
sub
pusha
je
ret
out
jo
aas
pop
xchg
stc
adc
sub
gs
mov
and
retf
push
and
mov
ror
in
stos
fcomip
idiv
cmps
ret
and
mov
popf
into
in
mov
jl
adc
pop
xchg
jbe
pop
or
pop
(bad)
call
xchg
add
cmp
imul
xchg
daa
push
aaa
fs
pusha
ins
std
xchg
fimul
out
sub
dec
sbb
daa
fst
sbb
push
mov
mov
cmp
std
aaa
cmps
sbb
dec
push
xchg
cmp
call
mov
mov
popa
aas
ret
retf
repnz
add
ficomp
imul
inc
push
xchg
sti
sbb
lock
pop
inc
push
jl
call
adc
adc
into
fsubp
cmp
mov
jb
adc
sbb
cmp
pop
scas
jae
adc
sbb
adc
pusha
cmps
jne
cmp
adc
add
cli
inc
mov
xchg
xor
out
popa
cwde
daa
clc
mov
inc
or
pop
lds
sbb
cld
sbb
mov
outs
or
mov
lods
je
xor
inc
push
ds
cmp
daa
sub
ficom
push
dec
add
call
fsubr
or
sti
sub
ficom
nop
dec
addr16
call
sub
enter
out
inc
xchg
mov
and
std
vpshuflw
ror
shl
lock
ins
jbe
movs
cmp
sbb
inc
mov
(bad)
in
adc
push
mov
into
aaa
imul
mov
push
les
(bad)
out
call
repnz
jge
xchg
lods
clc
sub
lods
loope
ja
push
shl
sbb
sub
jmp
call
xchg
xor
or
push
shl
call
add
or
fiadd
jg
hlt
mov
arpl
js
lds
rcl
call
push
repnz
mov
loope
or
sbb
mov
inc
mov
mov
es
lahf
fisttp
fimul
lahf
sbb
imul
punpcklwd
mov
mov
jae
call
and
sbb
inc
dec
es
jecxz
push
fucomip
cmp
jp
shl
sbb
je
cmp
shl
loop
mov
jbe
rol
xchg
ins
retf
rol
dec
mov
enter
cmp
stos
xchg
pop
xchg
pusha
imul
jo
push
mov
dec
loop
aas
pop
bnd
mov
not
mov
pop
cmps
add
mov
out
mov
(bad)
jo
dec
mov
sti
test
out
sar
add
mov
cmp
stc
mov
sbb
add
sbb
cli
call
mov
mov
sti
pushf
dec
stc
mov
test
cmc
mov
jb
inc
sub
lock
xchg
or
sti
dec
mov
(bad)
dec
push
pushf
push
sbb
(bad)
inc
fstp
(bad)
add
retf
loop
pop
shr
fcmovb
stos
cmp
and
pushf
int3
retf
jge
dec
inc
shl
fmul
call
dec
xchg
fnstcw
sub
addr16
pop
neg
and
ins
mov
push
das
mov
jns
mov
pop
shr
sbb
adc
ret
pop
cwde
shr
dec
sbb
in
stc
adc
jb
ss
test
repz
xchg
daa
(bad)
in
add
retf
mov
adc
sub
repz
jae
(bad)
je
mov
mov
push
sub
inc
pop
push
push
inc
add
add
clc
je
push
xor
movs
mov
bound
ret
xlat
xchg
or
std
imul
aad
inc
push
sbb
daa
je
push
hlt
out
scas
shl
push
iret
sysret
cli
sbb
sub
pop
mov
lahf
sbb
xor
fdiv
sahf
fisttp
jbe
ret
jl
fnstcw
call
adc
sub
out
call
loop
mov
addr16
xchg
cmps
lds
sbb
adc
jp
(bad)
mov
mov
and
inc
inc
pop
retf
adc
mov
movntq
dec
sbb
dec
jns
fst
cmp
xchg
fwait
addr16
sahf
and
in
retf
nop
push
push
jle
jne
test
hlt
adc
out
bound
int3
rcl
dec
sti
shl
cli
mov
push
push
jge
cmp
mov
pop
push
jl
aad
and
test
dec
ror
stc
dec
aas
xchg
dec
shl
push
or
dec
or
or
sar
sar
push
shl
ds
mov
pop
xchg
jno
rcr
inc
cmp
jns
mov
xchg
push
shl
xchg
idiv
mov
sbb
mov
mov
loope
push
fsub
ficom
loop
xor
fcom
imul
sahf
or
js
retf
xchg
cmp
jl
test
loop
repz
or
pop
jmp
jl
je
xor
adc
stos
icebp
and
shr
les
fimul
enter
and
cmps
imul
hlt
push
movs
stc
jmp
jbe
jle
inc
sti
daa
dec
xor
cmp
scas
cmps
jnp
retf
nop
mov
push
lahf
and
dec
or
or
arpl
adc
pop
ds
and
sub
cwde
arpl
and
lahf
xlat
push
data16
scas
cmp
mov
mov
xchg
mov
das
xchg
inc
adc
fdiv
push
inc
sbb
into
adc
je
(bad)
jne
or
xor
xor
mov
jbe
cmps
sbb
jbe
ret
sti
rcl
mov
hlt
retf
movs
and
(bad)
inc
(bad)
sbb
or
add
or
mov
test
mov
xor
sub
jno
mov
inc
(bad)
movs
mov
push
adc
mov
sbb
pop
sahf
and
adc
addr16
ret
jp
dec
pusha
loope
sub
bnd
pop
pop
mov
cmp
test
dec
mov
xor
xchg
pop
sub
push
retf
add
mov
sahf
and
mov
popf
add
mov
xor
daa
inc
(bad)
and
pop
sbb
mov
daa
cmp
popf
mov
fimul
imul
mov
loop
cwde
leave
(bad)
pop
xchg
neg
lods
sbb
mov
pusha
clc
out
or
lods
fst
into
pushf
pop
mov
out
push
fdivr
mov
call
cmp
xchg
and
xor
push
test
and
pop
cmp
mov
nop
out
mov
mov
repnz
jbe
daa
add
fcmovnu
or
sub
cld
clc
test
xchg
jns
mov
xchg
xor
loop
cmc
mov
cmps
ret
(bad)
xchg
sub
pusha
push
fnstenv
jnp
fcomp
cmp
fist
mov
shl
inc
sbb
mov
dec
hlt
inc
lods
mov
sahf
or
cmps
pushf
adc
mov
scas
inc
xchg
sbb
mov
push
jecxz
push
dec
cmp
rcl
stos
and
daa
lds
xchg
sub
mov
lds
jo
xchg
add
or
repnz
lods
inc
jl
outs
in
outs
jno
scas
mov
clc
sbb
imul
popa
xchg
ret
inc
push
xchg
dec
fsub
(bad)
pop
mov
and
xchg
(bad)
push
test
jp
sbb
hlt
es
add
xchg
(bad)
mul
mov
repz
fldcw
mov
repnz
int3
inc
sbb
jl
add
jo
mov
test
std
or
mov
cmp
sti
push
aaa
out
pusha
dec
sbb
push
push
arpl
scas
stos
sub
mov
mov
shl
pop
test
mov
sub
jnp
aad
ss
stos
outs
push
push
jnp
xchg
jp
scas
fsubr
dec
xchg
imul
jo
imul
mov
cdq
aas
pop
inc
and
mov
sub
mov
ret
pop
push
inc
lea
pop
call
cmps
aad
test
xor
cwde
loop
hlt
add
inc
pop
push
xchg
adc
jl
xchg
or
push
adc
xchg
mov
out
add
fnstcw
add
(bad)
push
push
push
add
popa
jo
fdivr
das
lods
call
jbe
inc
shl
add
xchg
sub
jo
shl
es
inc
out
loope
pop
pop
dec
stc
cmp
je
inc
mov
cmp
jb
hlt
add
mov
mov
lods
out
jmp
mov
add
mov
and
dec
and
adc
jae
jle
in
pop
dec
add
pop
push
jae
mov
enter
inc
and
inc
and
inc
rcr
in
xchg
ret
mov
retf
or
push
pusha
xchg
mov
imul
rcl
test
sub
inc
ins
movzx
retf
cmp
mov
imul
cmp
mov
repz
adc
push
mov
test
adc
push
(bad)
movs
in
mov
rcl
fwait
push
xchg
sub
xchg
cli
sbb
xchg
cmp
cmp
xchg
cs
je
mov
push
sub
dec
push
retf
out
pop
lock
sti
and
mov
les
movs
(bad)
adc
mov
arpl
or
mov
push
mov
mov
retf
rcr
jg
adc
or
jnp
push
out
std
mov
and
out
mov
(bad)
jo
rcr
add
fs
les
cmp
jno
dec
or
dec
jmp
clc
adc
dec
or
or
cld
or
shl
stos
mov
scas
mov
sub
hlt
mov
ja
inc
jb
adc
ror
pop
push
xadd
mov
mov
sahf
stos
test
into
loope
test
sbb
adc
sub
mov
sub
icebp
(bad)
adc
sub
loop
sti
out
xor
cmp
cwde
mov
fwait
pop
add
adc
cmp
lock
addr16
sbb
pusha
idiv
adc
loope
jle
inc
and
mov
or
sbb
ins
push
imul
retf
loope
or
adc
test
adc
clc
jecxz
fwait
or
std
jle
test
push
xor
in
add
mov
or
ins
clc
in
sub
dec
or
mov
mov
out
stos
jmp
inc
sbb
cmp
mov
jmp
add
sahf
lods
jns
sti
dec
adc
jae
jle
aas
stos
mov
cmp
add
add
fwait
pop
xor
push
in
inc
mov
mov
nop
in
dec
mov
push
imul
retf
nop
movs
push
repnz
add
pop
ins
cmps
xchg
xor
mov
sbb
push
out
fdiv
xchg
fiadd
dec
fst
add
not
cmps
fld
cmp
int3
call
mov
jg
jb
jmp
mov
fsubr
mov
sub
call
repz
fcomp
adc
add
dec
xor
xchg
xor
fiadd
cli
mov
inc
das
stos
(bad)
xchg
cli
cwde
aam
or
mov
or
je
xchg
jg
fldenv
cmps
pushf
arpl
nop
xchg
add
push
aad
fild
(bad)
jae
leave
test
mov
inc
(bad)
mov
mov
mov
(bad)
mov
xor
and
test
xchg
dec
mov
popf
pop
inc
movs
ror
imul
inc
loop
sbb
adc
cmp
sub
mov
mov
hlt
das
or
ins
push
popa
dec
mov
sub
adc
xlat
xchg
imul
aad
fst
es
test
mov
fisub
xchg
loope
adc
push
ins
and
inc
push
(bad)
imul
pop
mov
xlat
sbb
call
xchg
xchg
pop
pop
push
xchg
mov
call
(bad)
inc
loopne
adc
cmp
jmp
mov
lahf
gs
or
(bad)
push
add
pushf
and
pop
nop
xchg
jb
icebp
add
or
test
sub
mov
dec
mov
cmp
cld
push
lods
or
lds
pop
rcr
and
mov
adc
(bad)
scas
mov
sub
and
jecxz
cld
out
fld
cmp
xchg
xchg
sub
inc
jb
data16
or
nop
enter
ror
dec
or
scas
div
xchg
dec
xchg
jp
mov
inc
push
scas
jle
xchg
mov
push
add
jbe
adc
pop
pop
mov
xchg
inc
inc
inc
dec
sub
int3
push
test
xchg
jae
sub
add
outs
(bad)
je
test
sbb
jne
ss
(bad)
mov
in
mov
int
js
movs
xor
out
sub
popa
call
jbe
cmp
jg
rcl
call
mov
loopne
aas
jo
fwait
pop
adc
in
leave
jmp
mov
xor
jns
popf
mov
fadd
sub
pushf
push
(bad)
push
and
dec
dec
sbb
outs
movs
mov
retf
push
xlat
mov
inc
aaa
mov
(bad)
inc
stos
push
xchg
jns
cwde
or
lods
sub
inc
not
icebp
inc
rcr
add
jae
fbstp
stc
jae
dec
mov
mov
adc
mov
cli
xchg
hlt
into
int3
dec
aaa
mov
and
ins
loop
and
xchg
push
hlt
lahf
pusha
addr16
out
call
mov
adc
pop
hlt
sbb
push
or
test
stos
movs
xchg
rol
shr
call
fiadd
icebp
out
jmp
ss
scas
dec
in
dec
lahf
outs
cld
dec
cmp
xor
fs
aad
jmp
jb
mov
pop
dec
push
adc
inc
dec
sbb
xchg
adc
xor
jp
cwde
push
mov
sbb
sbb
mov
cmp
jne
(bad)
cmp
iret
push
cmc
pop
xchg
(bad)
adc
shl
lods
inc
pop
ins
scas
(bad)
mov
xor
jl
fldpi
add
imul
pop
repz
and
inc
xchg
xchg
js
in
stos
adc
cmp
push
pusha
or
lea
data16
and
(bad)
pop
out
shr
ja
repnz
arpl
and
sbb
adc
adc
push
test
jge
pop
aaa
fisubr
dec
xchg
aad
repnz
fs
fs
sub
pusha
sub
sbb
(bad)
xchg
call
sbb
sahf
add
push
mov
and
mov
add
loop
sbb
jmp
cli
mov
shr
fsubr
mov
test
fwait
or
sbb
mov
loopne
add
add
ds
jno
pop
and
repnz
stos
mov
xor
mov
adc
adc
(bad)
xchg
jnp
mov
enter
gs
lahf
and
pop
popf
cld
ss
inc
xor
mov
mov
cli
push
and
lahf
push
mov
hlt
mov
and
mov
div
push
cmp
outs
cld
je
and
imul
jns
ss
mov
leave
mul
aad
mov
nop
cs
jne
(bad)
cli
fdivr
push
add
dec
xchg
add
cdq
xchg
push
popf
loope
push
xor
cld
sar
frstor
xor
cmp
rol
xchg
hlt
mov
jbe
or
cmp
(bad)
sbb
mov
test
pop
hlt
jecxz
imul
retf
mov
ret
inc
xor
mov
outs
cmp
inc
lods
cmc
jl
sbb
xor
pop
xor
cdq
xchg
pop
scas
inc
test
add
shr
aam
push
dec
arpl
jecxz
in
int
fistp
or
jne
xor
inc
sahf
daa
sub
dec
out
mov
push
cdq
mov
dec
mov
scas
or
test
pop
jl
lea
xchg
xchg
pop
push
sub
jb
lods
rol
out
xchg
dec
es
jmp
fsubr
xor
in
sbb
jg
or
(bad)
call
push
out
push
daa
add
ret
or
jo
cld
call
fldcw
retf
cwde
stos
sahf
aas
stos
xor
sbb
jno
mov
sti
cmp
dec
dec
js
lods
or
and
xchg
les
ret
mov
add
xor
popa
je
xchg
lods
cmp
push
(bad)
sbb
mov
pop
dec
sahf
add
test
cli
call
or
dec
popa
sbb
inc
retf
dec
xchg
js
sti
inc
test
pusha
(bad)
and
mov
mov
inc
xchg
xchg
pop
pop
inc
adc
sar
cmp
and
js
adc
or
xor
add
push
sub
cmp
fmul
sbb
fst
test
sub
mov
inc
and
outs
sbb
adc
(bad)
push
(bad)
fstp
push
and
cmc
cmp
loop
ret
xchg
mov
ret
leave
sti
xor
lods
pop
fwait
dec
sahf
loope
leave
mov
(bad)
cmps
gs
jmp
mov
xor
add
mov
inc
and
lock
cmp
dec
test
xlat
xchg
xor
mov
test
aam
and
mov
loope
add
call
leave
mov
js
in
nop
lods
movs
iret
dec
jp
lods
aas
and
xor
xlat
mov
in
or
xchg
movs
cmp
xchg
adc
adc
push
ret
adc
fldenv
and
iret
jmp
retf
or
adc
sub
sub
adc
mov
sbb
xchg
movs
movaps
cmp
jmp
nop
mov
fsubr
repz
iret
inc
push
hlt
and
pop
xor
xlat
iret
sbb
add
push
mov
(bad)
shl
push
loopne
test
popf
out
pop
fs
xor
ins
popa
in
push
or
movs
dec
in
lea
test
retf
mov
adc
mov
pop
test
push
and
adc
xor
lahf
sbb
mov
or
or
and
(bad)
fidivr
(bad)
dec
jmp
xchg
and
inc
push
mov
mov
and
push
call
scas
ins
loopne
in
cli
sti
mov
inc
xchg
xor
movs
loopne
mov
pop
adc
ficom
fisubr
mov
jmp
fld
jl
cli
iret
xor
out
call
rdtsc
out
movs
push
fld
loope
out
mov
mov
ffree
push
add
(bad)
clc
cdq
sbb
jns
aaa
add
leave
adc
mov
and
adc
xor
inc
sbb
sar
xor
push
jmp
popa
cwde
aaa
sub
push
stos
fldcw
je
push
ja
out
jp
loope
popf
adc
daa
xchg
add
mov
test
into
mov
or
lods
(bad)
lahf
push
pop
das
dec
sub
inc
stc
test
out
pop
call
push
shl
das
sub
xor
push
xchg
(bad)
jbe
das
pop
push
mov
ret
dec
adc
scas
xor
fldenv
and
or
dec
inc
rcr
cdq
out
inc
out
loop
pop
idiv
sub
inc
jbe
mov
push
cmp
push
mov
and
repz
(bad)
push
push
xor
jmp
mov
out
adc
push
out
push
les
adc
setne
lods
jl
and
loope
xchg
ror
adc
movs
or
pop
in
sbb
and
xchg
call
xor
jbe
fdivr
xor
das
pop
pop
fcom
dec
adc
or
push
mov
xchg
xor
xchg
(bad)
cli
sti
xor
and
push
cmc
shl
sbb
(bad)
mov
repnz
aad
pop
cld
push
jmp
mov
cmp
push
adc
dec
cmp
xor
call
cmps
jns
sbb
fstp
sbb
jnp
and
aad
out
enter
fs
or
pop
mov
test
jg
aad
push
dec
imul
and
xchg
std
jl
mov
repz
dec
test
das
mov
fisub
push
xchg
push
xchg
fild
sbb
dec
repz
dec
adc
push
pop
jb
or
retf
pop
pop
jbe
push
adc
sub
in
clc
cmp
push
mov
enter
jmp
fsub
adc
cmp
dec
rol
in
inc
data16
dec
add
addr16
mov
cmp
stc
sahf
pop
pop
ja
jb
push
sahf
aad
jnp
js
ds
leave
in
test
add
ds
xor
gs
mov
mov
cdq
xor
(bad)
ret
inc
fwait
sub
fs
adc
dec
in
mov
rcl
(bad)
add
adc
sahf
iret
into
cmp
imul
pop
mov
rcl
mov
arpl
mov
sbb
push
imul
pusha
jmp
mov
je
loope
repz
inc
mov
jmp
mov
pop
mov
ins
cdq
ret
push
int
(bad)
mov
mov
lahf
push
xchg
arpl
in
pop
xor
call
sbb
sub
xlat
cmp
jp
mov
xor
daa
shl
and
cmps
jns
data16
jl
rol
test
loop
lahf
add
cmp
push
inc
(bad)
js
mov
or
ja
mov
movs
pop
pop
cmp
cmp
repz
jecxz
inc
inc
enter
cmp
jns
cmp
lds
push
or
or
inc
and
stos
mov
les
loopne
les
sub
jp
les
pop
mov
es
jge
inc
fmul
xor
inc
les
inc
les
or
shl
and
out
dec
icebp
cmp
mov
cmp
(bad)
out
or
mov
xlat
push
adc
push
stos
ins
imul
xor
in
outs
popa
jecxz
pop
adc
inc
ss
cmp
inc
(bad)
cmps
push
push
std
cmp
or
outs
xor
mov
daa
cmp
jl
sub
les
jo
jecxz
clc
push
and
dec
(bad)
iret
fld
loopne
lock
test
dec
xchg
fld
dec
sbb
das
push
mov
mov
mov
sub
mov
ins
or
add
mov
cmc
ss
xchg
jnp
call
dec
retf
sub
jp
outs
cld
pop
dec
das
mov
dec
mov
adc
jl
or
ins
adc
mov
sti
and
sbb
out
push
inc
mov
mov
pop
xchg
xor
adc
xor
fmul
push
stc
sbb
int
cmp
or
jns
call
mov
ins
movs
rol
sbb
jecxz
call
ds
fdivr
or
xor
iret
mov
jo
out
gs
xor
sbb
add
pop
pop
loope
mov
dec
jne
jecxz
pusha
out
ds
xchg
outs
lods
retf
push
iret
xchg
push
cwde
jmp
fidiv
mov
dec
shl
rcr
and
jmp
cmp
push
mov
jns
adc
pushf
dec
pusha
push
ret
pushf
into
dec
sub
sub
inc
jo
push
mov
or
and
test
ds
sahf
dec
icebp
push
je
out
push
fcomp
inc
sub
test
xchg
fcomp
(bad)
and
xor
(bad)
fsubr
push
or
push
or
cmc
jle
in
test
aaa
or
fwait
scas
jns
xchg
dec
sub
movs
mov
pop
pop
mov
cmps
addr16
xchg
inc
add
icebp
in
ret
add
pop
pop
popa
adc
mov
loope
call
jnp
movs
out
mov
inc
and
imul
sbb
repz
sub
dec
ja
dec
cmp
and
retf
je
sti
int3
adc
stc
inc
cdq
int3
cs
outs
sbb
cmp
fwait
mov
call
ret
jl
pop
loop
push
pop
mov
xlat
sbb
les
jb
dec
sbb
mov
sub
cmp
rol
adc
(bad)
(bad)
cmp
les
dec
lahf
or
std
xchg
bound
fisubr
dec
adc
rol
or
or
repz
outs
mov
xor
loop
jle
add
xchg
and
dec
jne
xchg
mov
clc
sub
lahf
push
pop
into
dec
sbb
push
rcl
sti
mov
xchg
xor
inc
pop
fiadd
pop
dec
ret
sbb
jne
push
mov
ror
lock
push
add
(bad)
mov
cmps
pop
mov
dec
jp
pop
add
jmp
xchg
pop
mov
xchg
adc
pop
dec
xor
cs
out
in
sar
call
adc
xchg
movs
sahf
mov
push
out
in
inc
lods
mov
dec
mov
cld
aas
sub
and
add
or
jbe
cs
xor
sti
retf
daa
pop
mov
addr16
sti
sbb
push
mov
mov
out
lods
(bad)
ins
xchg
je
sbb
jmp
rcr
aas
mov
pop
and
repnz
arpl
jmp
pop
ins
popf
in
cmp
call
xor
mov
xchg
out
mov
mov
dec
pop
loope
data16
xor
push
lods
mov
shr
sbb
push
add
add
pushf
lds
aad
adc
and
in
mov
outs
or
icebp
clc
xchg
sbb
mov
test
(bad)
fs
xchg
sti
sub
rcl
sub
mov
sub
and
dec
iret
lock
jmp
or
sbb
push
mov
xchg
outs
test
or
clc
sbb
ins
xchg
in
push
pop
sub
and
xchg
sbb
push
jle
inc
es
loop
mov
mov
push
dec
xor
je
mov
sbb
xchg
push
mov
inc
stc
lds
cdq
jg
mov
jg
xchg
jnp
or
dec
imul
lea
inc
push
inc
cmc
xchg
jno
sbb
push
adc
and
pop
add
cmp
or
add
daa
xchg
dec
jle
hlt
hlt
xor
sbb
(bad)
push
push
outs
in
push
pop
and
scas
stc
rol
call
arpl
ret
xor
fcomp
std
mov
ss
push
arpl
ds
ret
lea
inc
repz
mov
pop
test
mov
lahf
call
and
shl
ret
outs
add
adc
jg
lahf
and
cmps
xchg
and
mov
lock
dec
imul
pushf
sahf
pop
fbld
xchg
fsubrp
stc
test
mov
mov
jns
mov
jg
cmc
push
mov
jnp
dec
pop
je
mov
movs
ins
mov
loope
das
sbb
sub
icebp
stos
sub
jmp
and
jecxz
pop
fisttp
jmp
fmulp
ror
cmp
mov
pop
pop
and
add
adc
adc
ja
in
pop
sbb
mov
hlt
add
cmp
cmp
ret
bound
push
mov
sbb
ja
push
or
or
jg
test
retf
cs
lock
mov
movs
pop
into
movs
(bad)
out
cmp
in
adc
push
popa
dec
xchg
dec
addr16
retf
fisub
sub
popa
cmp
leave
pop
les
mov
cmps
or
scas
jmp
ds
fsubp
xlat
in
push
(bad)
jmp
(bad)
adc
jg
int3
ret
out
fisttp
imul
in
rcl
pop
sbb
int3
int
pop
hlt
int
push
dec
dec
cmps
js
pop
mov
add
add
popa
cmp
inc
(bad)
mov
push
out
push
iret
push
call
addr16
or
pop
inc
int
jo
xlat
sti
push
imul
mov
jno
in
cdq
test
sub
fstp
and
retf
mov
ss
mov
and
mov
test
sub
jmp
sbb
in
movs
(bad)
push
imul
sub
mov
movs
ret
popf
sbb
jle
cdq
jbe
push
push
popf
add
ret
out
imul
push
aaa
rcl
xor
out
lahf
sbb
scas
mov
jge
xchg
push
rcl
cmp
push
daa
push
sub
stc
push
dec
sub
out
stos
cmp
or
cmp
lods
sbb
inc
xchg
aam
adc
(bad)
(bad)
mov
and
ds
aaa
scas
dec
jle
mov
imul
adc
and
(bad)
jne
mov
cmps
mov
adc
repz
xor
les
ins
add
sub
int3
fwait
lea
xchg
fiadd
jbe
push
outs
push
inc
test
arpl
jne
es
cmps
enter
xchg
scas
repz
bound
jp
int
lods
aas
push
xor
and
les
jecxz
jg
jmp
data16
jle
sbb
push
jmp
arpl
pusha
inc
dec
(bad)
arpl
xchg
js
jnp
pushf
push
in
ja
ficom
mov
cld
add
xchg
dec
jno
sar
sub
dec
xchg
jmp
or
pusha
popa
fild
nop
mov
test
ret
cmps
pop
(bad)
fild
retf
adc
(bad)
sub
push
icebp
stos
xor
cmp
inc
mov
add
jne
popa
stc
daa
fwait
mov
dec
scas
add
sbb
xor
rol
stc
sub
fidiv
xchg
add
mov
in
add
inc
ins
jmp
sbb
xchg
popaw
push
pop
ja
inc
push
in
cmp
fsub
cdq
in
pop
mov
or
push
inc
push
add
mov
mov
jno
in
mov
and
adc
ins
jecxz
les
sbb
fwait
xor
outs
or
call
div
out
pop
xchg
add
mov
xor
std
jl
lea
cmp
(bad)
loopne
inc
mov
lea
pop
pop
mov
add
call
push
push
stos
and
or
jg
xlat
dec
test
dec
adc
cmp
fild
sbb
xor
cmps
(bad)
inc
mul
xor
sub
jo
popf
test
clc
mov
push
xor
enter
repz
xor
xor
std
dec
ins
in
loop
pushf
dec
ins
xlat
pop
pusha
sub
movs
fild
dec
fld
xchg
mov
jmp
xchg
in
lds
jo
add
pop
adc
out
mov
sbb
mov
repnz
jecxz
cli
fst
adc
mov
fdiv
mov
cmp
int
aam
cmps
mov
cmp
movs
xlat
pop
ror
sbb
and
or
jb
add
aaa
mov
or
push
gs
push
shl
xchg
(bad)
mov
lock
dec
stos
repz
into
mov
push
loop
ret
mov
ffreep
dec
mov
das
and
cmp
dec
ins
push
add
dec
push
and
popf
sub
pop
xchg
mov
push
inc
jne
dec
bound
in
adc
addr16
imul
mov
sbb
adc
bound
aas
fimul
inc
mov
and
inc
arpl
adc
movs
shl
cdq
and
les
jmp
push
sbb
add
(bad)
adc
in
lods
test
mov
mov
mov
cmp
add
cs
and
(bad)
mov
or
xor
jmp
and
in
jmp
cmc
dec
pop
in
xchg
lds
movs
sbb
mov
xchg
and
loop
and
(bad)
(bad)
(bad)
jmp
mov
xchg
imul
mov
test
or
push
or
popf
mov
or
inc
loop
fist
movs
dec
or
pop
gs
and
jp
mov
or
adc
les
pop
mov
cmp
leave
jno
fs
sbb
jg
cld
mov
mov
push
stos
fiadd
(bad)
push
pop
mov
lea
xor
xor
jns
scas
and
xchg
jecxz
pop
or
pop
sub
(bad)
cld
leave
jno
movs
mov
add
repnz
shl
popw
pushf
sub
jge
add
cli
lahf
mov
adc
sub
loop
mov
or
in
adc
mov
in
sahf
nop
scas
cmp
mov
lock
iret
adc
and
pusha
sbb
pop
jl
push
jl
cmp
xlat
imul
loope
pop
jge
in
push
pop
jg
popf
test
xor
xchg
out
dec
mov
cs
lahf
in
jmp
or
xor
out
hlt
mov
pushw
mov
cmp
lods
xor
xor
gs
clc
enter
mov
add
mov
inc
aam
cmp
inc
mov
push
or
sbb
sub
jb
dec
sbb
(bad)
shr
icebp
push
mov
mul
bound
jmp
rcl
cmp
mov
push
cmp
nop
cmps
or
call
pop
ss
mov
enter
or
or
push
cli
iret
jbe
imul
xchg
stos
clc
jecxz
mov
aam
pusha
or
clc
mov
dec
(bad)
push
out
push
xlat
lds
out
scas
cmc
xchg
or
jl
pop
les
push
popaw
test
cmc
cmp
imul
sbb
retf
mov
sti
lock
addr16
cmp
or
fdiv
cs
ds
in
shl
std
ds
add
and
jp
cwde
push
call
out
(bad)
inc
pop
jo
xchg
jae
fcom
lods
inc
or
sub
pop
das
mov
jecxz
sbb
ret
call
jmp
bound
inc
pop
and
es
test
les
and
aas
fs
out
mov
sbb
mov
stc
movs
int
jp
test
gs
mov
retf
sar
and
xchg
xchg
int
popa
pop
inc
retf
hlt
and
loopne
sub
xor
inc
push
pop
repz
ins
xchg
imul
jb
jb
ret
inc
sbb
or
test
sti
sub
leave
jae
test
jl
or
cli
mov
mov
sub
imul
iret
xchg
push
mov
push
inc
movs
jge
fnsave
sub
ja
add
jb
inc
mov
pop
push
movs
sahf
ror
xchg
adc
(bad)
xchg
fldenv
push
cmps
and
add
mov
test
pusha
push
popf
inc
gs
mov
stc
or
fstp
cmp
mov
push
repz
jecxz
mov
xor
addr16
or
jecxz
jg
pop
push
dec
sub
cmps
add
mov
inc
xchg
and
(bad)
sbb
(bad)
sbb
cmc
arpl
int3
add
jno
icebp
sub
xor
pop
mov
ffreep
xor
cli
xadd
xor
or
inc
jmp
ds
pop
push
sbb
pop
mov
(bad)
mov
sbb
cld
pop
pop
xchg
shl
imul
push
in
xchg
xor
call
inc
pop
icebp
icebp
push
test
adc
sbb
push
jo
mov
inc
call
mov
cmp
jecxz
mov
push
lock
push
rol
std
sub
and
pop
sbb
cs
jno
mov
add
lods
cli
out
std
and
push
dec
dec
push
xchg
in
mov
(bad)
cmp
dec
dec
clc
scas
inc
jne
hlt
fwait
icebp
arpl
jns
xchg
in
loopne
inc
push
mov
scas
ja
nop
stos
inc
loope
xchg
je
push
mov
mov
or
add
loop
inc
xchg
xor
adc
xchg
push
jg
ret
or
rcl
jbe
daa
rcl
sbb
push
dec
pop
pop
and
mov
shl
pop
inc
xor
leave
cmp
aam
cwde
mov
push
popf
test
sub
mov
lahf
sti
imul
mov
jecxz
and
xchg
fldcw
jno
mov
std
mov
pop
ret
xor
mov
dec
adc
aad
lods
mov
lea
icebp
test
push
jno
fsub
dec
imul
add
out
test
mov
enter
enter
pop
sbb
xor
add
cmp
fwait
cmp
imul
inc
shl
lods
mov
fldcw
popf
sti
fadd
cmps
test
xor
jno
mov
pop
cmc
fsubr
adc
jne
(bad)
test
sbb
mov
stos
movs
sub
xchg
xor
loope
sub
xchg
sub
cmp
and
sbb
in
gs
retf
cwde
pop
lods
pop
add
popf
nop
scas
mov
out
mov
addr16
lods
pushf
mov
(bad)
out
sub
fld
mov
cmp
icebp
mov
add
call
jbe
retf
sbb
xchg
call
aad
xor
mov
xchg
push
push
dec
push
add
pop
fistp
cmp
call
dec
mov
rcr
xor
pushf
imul
sar
fsub
test
ins
and
xchg
and
cli
aad
cs
xchg
adc
pusha
pop
push
stos
inc
dec
sub
xor
add
mov
mov
sbb
lahf
sbb
and
repz
int3
dec
dec
push
mov
or
xchg
scas
or
addr16
jg
rcr
sbb
popa
sub
push
clc
dec
jmp
push
xchg
(bad)
ja
mov
adc
mov
leave
(bad)
sti
imul
mov
(bad)
xchg
leave
xor
aaa
push
sub
repz
xor
repz
in
adc
std
jmp
in
mulps
gs
dec
dec
push
and
push
(bad)
push
mov
sub
test
or
sbb
bound
shl
(bad)
mov
push
imul
mov
call
repz
cs
aas
std
dec
mov
push
mov
je
push
or
ja
or
sub
xor
leave
adc
cmp
push
dec
aad
mov
out
stos
ret
mov
jnp
cmp
icebp
mov
push
xor
jmp
inc
popw
mov
ins
not
xchg
and
inc
add
dec
jl
(bad)
xchg
inc
add
fldenv
outs
or
push
cmp
mov
cwde
jl
(bad)
mov
xchg
and
bound
dec
fnstsw
inc
gs
ins
xor
mov
iret
cmps
(bad)
or
out
add
inc
pop
movs
ins
loopne
es
add
inc
mov
sub
or
inc
jno
mov
push
mov
pop
mov
push
mov
xor
jl
jo
and
out
push
jb
icebp
out
or
xor
(bad)
dec
add
jg
and
mov
ror
push
in
sub
repnz
mov
lock
out
iret
mov
mov
sub
retf
(bad)
loop
rcl
test
jae
imul
scas
jno
mov
jnp
mov
inc
psrld
pop
jne
jp
stos
mov
jne
push
fsubr
dec
xor
adc
test
sbb
mov
pop
pop
movs
jecxz
rol
xchg
mov
std
adc
sti
rcl
and
mov
sahf
fs
ss
call
xlat
out
push
mov
mov
inc
dec
cmps
push
(bad)
(bad)
xor
lods
bound
pop
cs
mov
(bad)
and
jnp
dec
adc
mov
rcr
stc
les
and
clc
daa
test
imul
dec
xchg
lods
adc
jmp
xchg
mov
cmp
in
mov
bound
fcomp
pop
jmp
sub
outs
mov
inc
mov
jmp
test
cmp
scas
cmp
(bad)
dec
dec
lock
enter
cmp
add
mov
sbb
nop
in
cmp
xchg
inc
outs
fs
mov
pushf
jle
fidiv
jae
jne
cmp
sub
push
popa
int
mov
push
sub
dec
in
jnp
les
or
adc
(bad)
sti
std
shr
ret
push
jns
inc
ins
mov
(bad)
pusha
mov
ds
popf
test
(bad)
and
sub
sub
in
pop
in
js
sbb
(bad)
and
fs
add
inc
mov
data16
out
lahf
jge
lods
inc
fidivr
jb
(bad)
std
bnd
cdq
mov
shr
pop
sbb
mov
jmp
mov
inc
fwait
jecxz
js
outs
and
bound
mov
sbb
pop
mov
adc
lea
ins
retfw
enter
pop
cmp
sbb
sbb
sbb
into
popa
mov
dec
cmp
repz
gs
mov
add
rol
rol
push
pop
mov
push
fadd
xor
(bad)
jge
push
sbb
sub
sbb
push
imul
jmp
mov
dec
mov
sbb
xor
jmp
in
data16
outs
test
pop
sbb
xor
(bad)
in
je
add
shl
xor
aad
je
add
push
jp
add
cmps
leave
(bad)
jmp
dec
lea
out
rcl
mov
push
sub
add
fwait
push
push
jns
sbb
(bad)
sbb
and
iret
or
int
mov
sbb
push
arpl
or
std
jmp
in
xor
mov
jle
call
ins
cli
mov
into
jns
das
mov
mov
lea
adc
int3
cmp
pop
jle
or
lea
lds
mov
dec
add
jne
(bad)
adc
iret
test
leave
dec
out
and
pop
cs
mov
ins
imul
retf
mov
rcr
scas
js
(bad)
dec
test
push
xor
sbb
cmp
xchg
cmp
rol
jl
cmps
cdq
(bad)
mov
cmps
push
add
arpl
cld
call
or
push
pop
hlt
xchg
js
mov
and
ds
mov
shl
fdivr
xor
push
scas
lea
cld
in
bound
sub
cmp
mov
or
dec
aaa
xchg
xchg
jae
mov
scas
mov
mov
fmulp
jo
mov
sbb
add
lea
mov
dec
xchg
stc
push
popa
aaa
cmp
enter
cmp
ja
dec
pop
or
call
rcr
stc
adc
jbe
icebp
adc
dec
jb
mov
ja
mov
test
sub
lods
jmp
jnp
loope
repz
push
into
int
pop
(bad)
jmp
out
(bad)
in
(bad)
pop
out
inc
xlat
sti
adc
sub
clc
xor
cmp
mov
mov
xchg
retf
addr16
(bad)
jle
data16
mov
cmps
call
sbb
inc
mov
imul
(bad)
retf
dec
adc
xchg
cs
and
sbb
xor
push
aaa
xchg
std
cs
cmp
or
inc
inc
xchg
ficom
mov
and
imul
mov
out
sti
dec
adc
xor
pop
push
dec
stos
enter
cmp
pop
fdivr
lea
mov
ja
jae
mov
test
das
xchg
cmp
jae
mov
imul
jno
in
fisub
xchg
push
fidiv
mov
jne
mov
mov
repz
es
js
xor
ins
push
outs
push
fwait
cdq
dec
sbb
jno
adc
pop
jae
rcr
xlat
test
dec
int
in
jge
mov
clc
xor
jmp
aaa
push
pop
lock
test
fisttp
mov
lods
shl
les
xchg
mov
xor
mov
jp
add
loope
mov
mov
outs
push
and
pop
ret
iret
mov
movs
and
cmp
enter
add
mov
mov
adc
ja
lods
aam
inc
stos
push
xlat
adc
push
inc
push
(bad)
sbb
lahf
ins
dec
pop
add
sbb
pop
inc
jge
sar
sbb
fstp
push
arpl
dec
mov
movs
ins
add
(bad)
inc
ins
cmp
sbb
sbb
sub
mov
fbstp
mov
popf
les
gs
pop
shr
cmp
push
xor
cmp
mov
adc
je
sub
sub
and
imul
mov
push
outs
cmp
ss
mov
punpckhwd
mov
sbb
daa
adc
femms
sub
loope
mov
cld
xchg
push
sbb
lods
mov
mov
(bad)
clc
fld
add
jo
jle
sub
rcr
push
mov
int
xchg
inc
xchg
fdivr
outs
push
ret
sti
fist
(bad)
push
add
sbb
pop
sub
add
and
inc
data16
stos
adc
nop
mov
or
xchg
lds
inc
es
inc
push
xchg
(bad)
jp
(bad)
dec
pusha
nop
xor
sahf
mov
fsubr
mov
xor
fdiv
pop
mov
mov
push
jbe
xchg
push
sub
or
mov
bound
imul
(bad)
fnstsw
lahf
or
push
jecxz
(bad)
pop
jl
xchg
adc
enter
push
mov
pop
push
fwait
xchg
pop
sbb
xchg
inc
cwde
pop
fisub
add
pop
jns
jns
jmp
cmp
push
and
inc
loopne
adc
xor
rcl
aam
enter
xchg
cmps
pop
pop
hlt
mov
sar
xchg
cdq
xchg
mov
dec
fadd
dec
pop
pop
xlat
xchg
nop
fistp
mov
cdq
adc
adc
and
xlat
(bad)
mov
lods
push
sub
jge
jmp
dec
loopne
sti
fld
add
inc
popa
push
fstp
cmp
lods
dec
push
test
add
popf
add
mov
pop
loope
mov
test
mov
(bad)
cmps
sub
fsub
inc
jp
jo
gs
mov
retf
enter
mov
push
push
scas
test
cmps
jne
xchg
mov
add
push
dec
adc
mov
sub
ret
ins
pop
push
xor
clc
jl
jns
cld
xchg
imul
xor
inc
dec
xchg
cld
bound
mov
mov
icebp
iret
jecxz
mov
push
pop
(bad)
stos
xchg
mov
fs
fbstp
fld
int3
or
jne
mov
aam
out
in
std
inc
aaa
jmp
in
ins
nop
lock
outs
mov
pop
add
cmp
inc
push
adc
push
imul
stc
sbb
dec
loope
pop
cmps
mov
pop
mov
shl
dec
xor
cwde
xor
add
push
dec
inc
out
cmp
inc
xlat
xchg
in
jmp
inc
sti
ds
js
xor
jmp
push
daa
xor
js
lea
cmp
mov
mov
cmovo
jmp
in
mov
xor
add
shl
cwde
in
xchg
cmp
icebp
cli
loope
sub
movs
das
mov
cld
pop
xchg
pop
xchg
pop
mov
add
in
dec
pop
inc
mov
pop
(bad)
xlat
cli
out
inc
sub
pop
cmp
xchg
mov
mov
fiadd
mov
stos
mov
icebp
sti
mov
xchg
xlat
es
bound
dec
icebp
adc
pusha
sahf
(bad)
retf
sub
lds
aam
and
and
sub
icebp
mov
lea
cmps
repz
push
or
sahf
mov
jnp
iret
retf
cmp
test
xor
jp
push
xchg
hlt
mov
jb
add
movs
cmp
adc
inc
xor
dec
mov
in
or
hlt
pop
sti
out
stc
ja
ins
imul
cmps
and
fadd
and
test
xchg
les
ret
mov
ins
or
add
mov
ja
dec
push
ds
(bad)
mov
xchg
nop
enter
dec
mov
lea
xor
mov
test
movlps
inc
mov
idiv
push
cmp
pop
and
aad
inc
nop
dec
jo
arpl
outs
and
pop
jno
and
sbb
js
mov
or
mov
xor
dec
mov
in
hlt
sub
pop
iret
inc
retf
pushf
cmp
sbb
ja
push
(bad)
pop
pop
(bad)
xchg
into
rol
xor
sub
xor
push
test
mov
call
aad
retf
enter
or
lods
punpckhbw
and
mov
(bad)
in
adc
popa
lock
mov
mov
jo
cs
pushf
stos
mov
retf
clc
or
mov
dec
xlat
cld
out
mov
aaa
pop
dec
jae
rol
xchg
inc
out
mov
sbb
add
push
sub
sub
or
movnti
jp
addr16
shl
pop
icebp
fldcw
add
xor
push
inc
xor
dec
shl
mov
fwait
dec
pop
push
in
movs
inc
fmul
inc
fidivr
cmp
xlat
fldenv
jge
and
xlat
rcr
pop
aam
jl
cmps
inc
arpl
lds
mov
call
bound
xor
cmp
leave
popa
or
and
jmp
imul
lods
jne
dec
push
jmp
or
mov
pop
sub
scas
mov
xor
fcomp
cmp
cwde
lahf
add
fcmovbe
add
dec
cdq
fwait
test
mov
fiadd
call
add
std
push
adc
retf
fcomp
je
cld
push
ins
shl
push
sub
addr16
loopne
cs
and
mov
dec
cs
or
jmp
popa
dec
pop
jle
sub
push
das
inc
xchg
jmp
inc
sub
in
int3
jbe
add
mov
push
adc
int3
add
xchg
mov
pusha
fs
test
adc
mul
into
xchg
(bad)
aaa
movs
not
push
pop
jno
cmp
(bad)
xchg
add
sahf
dec
add
adc
or
jecxz
mov
or
sbb
jecxz
mov
mov
xchg
test
dec
cld
shr
adc
dec
and
mov
mov
mov
lahf
sbb
rcl
ins
cmp
(bad)
es
nop
inc
mov
sub
aas
in
loope
out
push
push
pop
pop
push
out
leave
inc
push
add
lods
mov
push
sbb
cmp
call
sub
cwde
iret
dec
mov
xchg
in
xlat
inc
aam
aam
(bad)
aas
(bad)
jmp
clc
mov
mov
add
fild
mov
and
xchg
add
add
adc
arpl
(bad)
xor
(bad)
in
push
mov
push
test
cmp
js
mov
lock
out
in
ja
aas
xor
das
inc
cwde
lods
gs
mov
dec
jno
int
je
dec
sbb
pop
imul
les
ja
repz
pop
sub
cmps
ss
icebp
jp
inc
lock
sbb
inc
(bad)
cmp
cs
shl
push
not
fstp
cmp
dec
popf
les
out
inc
out
xchg
dec
arpl
push
cdq
pop
aaa
mov
cmp
push
jp
mov
cmp
sbb
sahf
jp
cmp
add
add
xchg
adc
mov
into
test
sub
mov
stos
in
jne
adc
pop
adc
int
es
mov
xchg
mov
js
imul
fs
cmp
in
loopne
pop
add
push
out
cmp
jnp
fcom
shl
mov
lods
dec
mov
xor
fwait
test
pop
mov
fistp
and
sub
dec
ss
sbb
jo
xor
test
data16
aam
pop
cdq
mov
cmp
fmul
hlt
repnz
lea
adc
outs
jle
inc
stos
repnz
mov
xchg
and
arpl
shl
dec
enter
mov
adc
stos
add
bnd
shl
gs
jns
test
enter
mov
cmp
sub
or
jge
enter
nop
pop
xor
ret
push
gs
pop
lea
push
out
adc
test
(bad)
xlat
adc
mov
xor
(bad)
loop
neg
icebp
xchg
aad
ins
push
neg
lods
jno
popf
xor
xchg
jmp
jne
stos
push
and
fld
ret
cmp
adc
out
mov
cli
inc
mov
cmp
cli
add
mov
js
test
rcr
mov
xor
pop
movs
mov
or
repnz
bound
ins
dec
sub
xchg
test
xchg
push
mov
cmps
and
shl
out
stos
xchg
retf
ins
pop
lods
mov
sahf
jbe
test
push
mov
iret
xchg
jbe
nop
retf
enter
movs
mov
sar
faddp
mov
push
repnz
loop
dec
stc
push
fsub
jb
(bad)
pop
(bad)
jns
frstor
(bad)
jecxz
push
addr16
xor
push
ins
add
jg
std
xor
dec
outs
popf
in
lahf
sbb
rep
js
ret
cmp
inc
inc
cdq
sbb
and
pop
out
mov
ret
int
fisttp
lahf
movs
int3
or
sahf
sahf
ret
cmp
int
push
ror
sub
lods
jae
test
adc
popf
aaa
pusha
(bad)
rcl
mov
or
stc
xchg
jb
sti
jl
sbb
sbb
icebp
loope
pop
mov
mov
pop
sub
cmp
fcomip
pop
mov
dec
mov
dec
out
sbb
xchg
aaa
cmc
adc
std
pusha
xchg
movs
dec
jmp
int
lods
vminsd
fst
loopne
mov
cdq
pop
mov
mov
leave
and
inc
arpl
or
fisubr
sti
lods
xchg
jns
(bad)
hlt
clc
iret
cmc
mov
test
lds
cmp
mov
scas
dec
jmp
pop
(bad)
xor
xchg
cmp
sbb
cli
call
scas
inc
dec
aaa
outs
ja
int
jbe
dec
scas
or
lock
rcr
icebp
movs
sub
ins
jns
ret
and
in
into
ja
or
xor
cld
clc
fcomp
int3
rol
xchg
int
xor
xor
aam
mov
iret
int
ins
or
push
adc
retf
das
retf
jo
jmp
fwait
inc
vmwrite
mov
lock
loop
jg
loope
fsub
pop
stos
imul
loop
cdq
mov
inc
rcl
imul
xor
ja
rcr
push
push
cmp
aas
fsubp
clc
fwait
and
jno
push
je
push
int3
jno
mov
xor
imul
lea
add
dec
scas
push
push
imul
aam
sub
out
fimul
mov
sbb
je
lahf
inc
aas
mov
add
mov
pop
cmps
lahf
pop
out
mov
mov
adc
fdivr
daa
mov
inc
cs
(bad)
cmp
mov
stos
mov
cmps
pxor
bound
xor
sbb
cmp
mov
lock
xchg
sbb
pop
retf
sub
fsubr
and
xor
inc
sbb
xchg
popa
ja
xchg
mov
aas
mov
add
test
pop
inc
dec
push
adc
fdiv
(bad)
scas
push
jne
iret
cmp
not
ss
xchg
scas
push
add
mov
xor
mov
cmp
out
mov
push
and
jp
sub
xchg
aaa
icebp
call
jle
mov
add
dec
std
not
adc
aaa
aad
cmp
sub
and
mov
aam
dec
cmc
repnz
mov
fnstcw
or
dec
inc
jl
and
lods
mov
test
sbb
fisub
in
sti
mov
mov
std
pop
pop
inc
pop
push
loop
xchg
mov
enter
int
xor
call
fist
cmp
push
out
call
leave
jecxz
into
mov
or
jp
jmp
ret
push
iret
xchg
movs
push
xchg
xor
push
push
int3
add
loop
out
sti
xchg
scas
push
lea
push
mov
(bad)
stc
cmc
push
mov
mov
mov
fidivr
xchg
cwde
push
adc
mov
sub
lods
adc
fst
adc
cmp
cmp
push
push
cs
push
iret
cmp
jg
ficomp
dec
std
outs
sbb
pop
retf
mov
mov
pop
test
mov
mov
xor
jnp
cwde
add
and
xor
(bad)
test
xor
loopne
mov
jp
add
adc
mov
jne
and
sbb
iret
fild
push
pop
jl
sub
popa
jne
movs
jg
mov
loop
mov
mov
ds
ret
sub
adc
mov
xchg
loopne
adc
sbb
xor
jnp
and
pop
stos
mov
lods
repnz
add
stos
or
mul
mov
(bad)
ins
dec
out
pop
aaa
adc
xchg
cwde
cwde
push
cs
shr
test
ret
aas
ins
std
shr
in
(bad)
adc
adc
test
ret
cmp
push
and
lods
mov
sub
in
add
(bad)
fisub
outs
and
rcl
jle
dec
cmp
stos
movs
pop
aam
ficom
cmps
jle
cli
dec
inc
or
nop
rcr
ja
add
jno
(bad)
xor
or
cmps
stc
xchg
xor
jg
sbb
mov
adc
jle
dec
cmp
js
test
adc
test
leave
js
xor
outs
inc
dec
sub
sbb
std
or
mov
pop
or
mov
push
fsub
stos
dec
dec
or
daa
rol
pop
add
xor
popf
test
shl
in
pop
mov
cdq
mov
jmp
inc
cmps
xchg
adc
(bad)
xlat
(bad)
pop
and
cmc
dec
outs
cld
mov
mov
(bad)
ret
push
or
dec
cmc
push
xor
pop
retf
imul
pop
xchg
fcmovu
mov
sub
push
add
(bad)
int
sbb
es
outs
or
jmp
or
push
xchg
(bad)
sub
xchg
ss
add
lods
cmps
inc
(bad)
dec
inc
push
fst
sahf
mov
add
mov
push
cmp
idiv
cld
mov
or
adc
stos
jecxz
add
mov
xchg
iret
es
aad
and
pop
jno
or
mov
push
add
lahf
(bad)
xchg
ja
aaa
inc
les
fisub
fidivr
fistp
repz
mov
adc
mov
test
scas
gs
mov
or
fwait
lahf
xor
push
test
shl
cmps
fmul
pop
call
sub
ja
das
xchg
pop
icebp
cs
nop
shr
xchg
ja
add
test
add
rcl
imul
aam
ins
adc
cdq
popf
cmp
adc
xchg
cwde
jnp
lock
cld
lea
call
test
pop
in
sub
cmp
fimul
popf
stos
sbb
in
es
and
dec
add
pop
jge
pop
jno
movs
jo
rcr
jmp
outs
inc
mov
sub
test
inc
push
ret
mov
loopne
inc
aaa
leave
fiadd
scas
iret
(bad)
sub
retf
(bad)
lods
sub
cmps
movs
inc
lds
scas
(bad)
push
jno
jo
xchg
sub
jle
pop
push
mov
cmp
lahf
mov
mov
fwait
cmp
and
cdq
aam
in
fdivr
(bad)
call
stos
sbb
fdiv
ss
daa
mov
pop
and
cmp
inc
push
daa
ja
adc
push
mov
mul
ja
cli
cmp
adc
lods
pop
xchg
push
mov
retf
adc
mov
aam
aam
repnz
cld
and
mov
push
xchg
out
mov
enter
push
iret
loop
or
iret
call
jb
int3
je
xchg
sbb
inc
mov
movs
dec
test
arpl
jo
mov
pop
std
mov
push
mov
cs
lds
xor
out
xor
mov
bound
pop
pop
mov
sbb
push
push
jno
push
fild
and
cmp
dec
daa
add
or
shr
daa
jo
dec
mov
jno
mov
xor
push
outs
add
jae
mov
inc
mov
push
push
sbb
push
call
js
mov
dec
adc
les
mov
pop
(bad)
stos
cmp
jg
add
add
cld
(bad)
ror
imul
xchg
outs
jmp
mov
or
pop
mov
jmp
fmul
xchg
pop
jnp
ficom
jns
jne
xchg
shrd
push
out
or
repnz
jb
cmp
idiv
xor
inc
addr16
adc
mov
jbe
cmp
xor
ins
mov
sub
and
rcr
jns
mov
(bad)
ficomp
xor
xchg
push
inc
inc
aam
mov
out
cld
mov
jmp
fwait
popa
pop
test
aas
and
xchg
sti
mov
xor
add
hlt
mov
inc
mov
and
xchg
fs
test
or
adc
cmps
pop
call
repz
pop
into
es
addr16
jmp
push
push
push
ret
cmp
call
push
psrlw
sahf
sub
add
icebp
test
stos
dec
cs
shr
push
lods
loope
arpl
test
jge
movs
idiv
mov
push
fsub
cmc
mov
outs
mov
inc
xchg
fcomp
ins
mov
jp
pop
daa
dec
lods
inc
sub
jmp
mov
jp
mov
xchg
push
das
adc
ins
pop
setle
pop
int3
jne
mov
sbb
cmp
dec
jl
call
sbb
ret
cmp
pop
les
xor
(bad)
shr
jns
push
ficomp
push
retf
out
mov
ret
iret
(bad)
xchg
push
mov
sar
not
stc
enter
retf
hlt
inc
mov
xor
ds
mov
pop
outs
mov
jmp
ficomp
(bad)
jmp
jns
mov
xchg
cmp
(bad)
cmc
outs
sub
lock
cmp
xor
bound
call
mov
ret
sar
xor
xchg
push
mov
dec
xchg
outs
pop
jge
mov
mov
loopne
push
sub
(bad)
repnz
ret
fsubr
imul
iret
leave
(bad)
mov
push
in
inc
jns
inc
push
aas
es
inc
call
test
stc
ins
push
pop
mov
shl
ret
mov
mov
cs
gs
mov
stos
lea
ins
mov
jl
popa
push
inc
clc
add
adc
fistp
inc
retf
push
gs
repz
std
jg
push
ret
xor
lods
shl
arpl
stc
xor
cs
hlt
xchg
(bad)
and
loop
pop
out
pop
push
loope
pop
pop
xlat
mov
ds
clc
ret
jmp
mov
or
push
xor
push
jmp
mov
pushf
icebp
adc
push
std
mov
inc
sub
out
aam
jle
cwde
lds
ins
fcom
ins
xchg
xor
cmp
xchg
add
movs
jae
repnz
adc
mov
mov
ror
inc
jno
xchg
cli
jle
loopne
out
add
sbb
xor
sub
sbb
jb
cmp
xchg
push
fisub
cmp
and
mov
iret
mov
mov
repz
or
les
dec
and
fcomp
sub
sub
jb
scas
mov
sbb
mov
mov
fwait
dec
ins
and
test
mov
mov
cmps
fld
dec
pop
mov
add
fldenv
sbb
sub
jo
push
xchg
inc
lods
inc
loope
and
cld
enter
neg
push
clc
jo
mov
lahf
and
popf
or
mov
(bad)
shl
ds
int3
fcomip
adc
gs
pusha
shl
loope
scas
cmp
pop
mov
das
pop
push
loop
cmc
ds
mov
and
(bad)
and
cmp
loopne
call
lds
pop
and
push
cmps
pop
pushf
cmps
xchg
and
daa
and
imul
dec
not
les
fidivr
mov
adc
es
add
mov
mov
xor
(bad)
loope
mov
rcl
jno
in
jmp
scas
rol
mov
add
clc
out
jo
loopne
and
pop
mov
push
outs
mov
retf
jle
mov
pop
lahf
fisub
or
scas
bound
pop
test
jg
sahf
push
push
or
nop
jno
aaa
xlat
out
stos
lock
xchg
ins
div
mov
std
cmp
or
mov
push
retf
sub
call
sbb
cdq
xchg
ds
jo
and
xchg
xchg
inc
loope
sub
clc
inc
pop
shl
jae
xor
or
jmp
clc
ja
xchg
push
and
xor
gs
int3
mov
ja
xor
pop
fcom
or
jle
xor
add
pop
jno
pop
jns
arpl
loop
sbb
mov
xchg
pop
scas
dec
dec
lea
(bad)
adc
jmp
push
aas
js
scas
ret
mov
fidiv
mov
ret
jnp
mov
jle
fnstsw
pop
retf
test
sbb
pop
xchg
in
add
or
and
cmp
adc
pop
test
or
ds
or
inc
movs
dec
(bad)
outs
stos
adc
movs
or
xchg
pop
(bad)
jmp
in
jp
ds
cdq
std
out
mov
sbb
mov
scas
sahf
inc
fst
and
not
xchg
test
push
aad
aas
hlt
pop
into
dec
sub
dec
add
mov
scas
outs
mov
sbb
cmp
lea
popf
push
mov
add
lahf
imul
je
test
jbe
xchg
out
adc
mov
(bad)
jmp
cwde
icebp
dec
or
inc
(bad)
or
lahf
jb
scas
jg
into
inc
pause
frstor
push
pushf
xchg
sub
jmp
movs
jae
fadd
push
call
add
or
xor
sub
(bad)
push
add
jg
call
fdiv
and
cmp
stos
jbe
xor
data16
std
and
mov
cmp
jmp
mov
and
leave
or
sub
mov
das
fwait
push
jo
sub
jg
es
push
inc
add
and
call
imul
xor
out
xchg
inc
inc
or
sti
xor
mov
or
and
aad
pop
push
out
test
inc
sub
(bad)
test
push
adc
movs
xchg
retf
pop
cmp
add
cwde
outs
loope
jns
das
xor
xchg
fcom
gs
gs
dec
cdq
rol
pop
xor
mov
push
cmp
addr16
add
add
inc
iret
inc
or
push
sti
mov
mov
inc
pop
rcl
rcl
xchg
js
daa
mov
call
rcl
mov
add
pop
jmp
movs
sbb
fs
test
les
movs
cmp
sbb
push
test
nop
cmp
jns
inc
aam
xor
push
cmp
cdq
in
sub
test
sub
je
mov
inc
repnz
xchg
adc
frstor
rcl
pusha
fcmovne
cs
pop
dec
shl
out
jns
(bad)
aad
add
xor
add
xchg
aad
inc
mov
rol
add
push
cmps
stos
stc
stos
sub
cmovle
in
mov
clc
adc
dec
sbb
loope
pushf
movs
test
ds
add
inc
sti
xor
cmp
aam
lea
jge
sbb
lock
add
mov
mov
gs
mov
and
cmp
fnsave
into
cli
add
(bad)
mov
or
fisubr
adc
xor
jbe
cmp
scas
ret
inc
jno
adc
bound
bound
and
sbb
ins
add
popa
fild
cmp
fdivr
cmp
lds
and
cmp
and
shr
sub
fcom
mov
add
fwait
das
inc
js
test
mov
pop
cmc
mov
ins
sbb
mov
nop
mov
leave
int
push
call
pop
jns
cmps
xchg
enter
mov
mov
mov
pop
dec
inc
nop
leave
pushf
jo
loop
sub
mul
add
imul
jmp
movs
and
jae
gs
hlt
cdq
repnz
sub
mov
dec
add
aad
loopne
enter
out
loope
inc
loope
mov
leave
fmul
push
mov
sbb
mov
xor
jb
call
push
nop
in
mov
movs
sbb
or
ins
scas
ret
xor
aam
(bad)
or
cld
xchg
dec
mov
fdiv
pop
adc
inc
sti
jg
add
lods
adc
xor
sub
jecxz
sub
xchg
fiadd
in
repz
mov
inc
lods
pop
stc
sbb
int3
int3
fdiv
retf
pop
test
out
pop
inc
popf
daa
adc
shl
mov
xor
rcr
cmp
pop
outs
push
jns
push
fst
sub
loope
xchg
repnz
cld
shr
pop
cmp
xor
mov
lods
ins
fnstenv
lea
(bad)
jae
cwde
push
adc
cld
in
dec
jmp
adc
cmp
jp
mov
dec
cld
stos
pop
mov
jne
xor
pop
stos
or
mov
sahf
lahf
mov
xor
dec
ja
cmps
xor
mov
sub
pop
xchg
stc
jle
ss
xchg
clc
mov
inc
push
out
movs
inc
jae
fwait
mov
push
push
and
hlt
inc
cmp
sub
pop
pop
adc
sbb
xchg
or
push
mov
mov
and
or
int3
aad
dec
mov
mov
pop
jno
aad
cmp
shl
jge
push
mov
nop
mov
(bad)
stos
sti
add
mov
loopne
shl
jne
sbb
mov
adc
jl
push
jg
xchg
push
(bad)
push
cmps
out
fdivr
xchg
iret
sahf
or
inc
nop
js
cmps
retf
(bad)
cmp
xor
shl
jge
add
dec
out
push
add
bound
mov
bsf
push
cs
and
fbstp
xchg
mov
and
cmp
mov
and
or
mov
cmp
enter
out
fmul
fcom
and
jns
ins
jns
xor
push
xchg
xchg
out
test
loop
leave
sub
jge
and
jns
sbb
call
pusha
jne
xchg
xchg
jl
inc
push
jo
mov
fs
jb
pop
lahf
pop
and
inc
cwde
adc
mov
ror
push
fsubr
mov
(bad)
xchg
jmp
push
push
cmps
sbb
(bad)
and
push
hlt
inc
jg
call
add
popa
xor
fcomp
cmp
cld
lahf
iret
adc
dec
inc
js
cs
jle
or
inc
xor
call
cmc
xchg
adc
int3
bound
jp
adc
aas
les
add
bound
(bad)
jp
(bad)
js
aad
and
std
shr
sbb
and
fbld
enter
xchg
xor
push
(bad)
cwde
stc
add
and
js
leave
test
push
jns
sub
push
jae
mov
dec
dec
xor
mov
and
or
ins
xor
mov
mov
or
sbb
bound
dec
xchg
retf
inc
mov
loopne
bound
sub
add
call
dec
jmp
add
cmp
cmp
inc
sub
mov
popf
mov
sub
cmc
sbb
fninit
xchg
rcr
icebp
stos
je
inc
arpl
pushfw
stc
xchg
pushf
icebp
cmp
addr16
sbb
scas
lods
push
jl
sbb
out
pop
call
adc
mov
or
sahf
xchg
out
push
jae
hlt
neg
mul
adc
mov
call
mov
jae
add
sbb
pop
jno
outs
pusha
fs
inc
sub
dec
inc
in
jns
mov
(bad)
pop
mov
stos
push
inc
loopne
xchg
imul
sbb
int3
ins
(bad)
test
sbb
dec
pop
fdiv
lea
clc
mov
xchg
arpl
and
aad
cdq
retf
nop
and
jne
das
push
pop
sub
push
xor
xor
add
cmp
std
aas
jg
int3
inc
popf
mul
mov
jecxz
add
out
lods
inc
bound
fisub
xor
frstor
adc
lahf
shl
sbb
leave
push
pop
loopne
mov
xor
int
popa
push
iret
mov
int3
push
add
imul
adc
jnp
shl
nop
pop
sbb
push
and
push
bound
sbb
enter
jmp
push
jmp
ror
(bad)
in
sub
mov
cmp
bound
gs
les
test
inc
arpl
mov
pop
xchg
cmp
lds
int
push
pop
inc
stos
cmp
leave
frstor
pop
xor
dec
jecxz
(bad)
and
loop
imul
sar
mul
dec
sahf
push
xchg
push
call
out
stos
jmp
mov
js
or
bound
imul
add
sbb
arpl
and
jns
(bad)
pop
scas
push
shl
pop
popa
fldenv
call
xchg
sub
pop
push
sbb
add
inc
push
xor
(bad)
mov
xchg
push
arpl
es
sbb
out
cmp
into
shl
aam
sub
sub
dec
sub
cwde
dec
cs
es
(bad)
lods
sub
adc
inc
cmp
xor
and
int3
mov
daa
popa
push
sbb
mov
test
inc
xchg
rcl
mov
mov
and
jp
(bad)
mov
xchg
xor
test
shl
(bad)
sub
xchg
icebp
sbb
rcl
or
sub
call
fisub
dec
cmp
xchg
cmp
test
sbb
lods
std
outs
popf
pop
fwait
call
and
sub
mov
in
repnz
mov
inc
ja
cmp
xchg
sub
push
mov
call
pushf
leave
add
push
out
and
push
lods
inc
lods
lea
or
or
add
xor
xchg
jnp
mov
sbb
pop
mov
jns
aad
mov
dec
push
das
scas
addr16
mov
stc
rcr
xchg
inc
jbe
shl
mov
pop
(bad)
ja
push
jg
xchg
xor
test
cld
repz
cmps
pop
imul
aaa
jo
lds
jmp
imul
xchg
bswap
cmps
and
ja
mov
mov
xor
pushf
aam
sbb
iret
jl
lahf
jg
sub
push
test
retf
push
xor
pushf
pop
and
retf
pop
fisubr
popf
ins
mov
xchg
fcomp
and
push
jge
leave
jbe
or
pop
add
fwait
(bad)
lods
shl
mov
fist
push
mov
pop
inc
ins
pop
mov
mov
xchg
jae
ret
mov
lock
shl
xchg
sub
dec
or
mov
sbb
xchg
and
or
lea
xor
nop
cs
mov
xor
jmp
add
jae
sti
into
mov
mov
(bad)
mul
mov
cwde
adc
mov
and
in
ror
popf
sub
sub
outs
stos
lea
test
jmp
es
mov
jl
pop
movs
repnz
fwait
and
ins
push
test
test
and
ss
(bad)
dec
dec
lods
(bad)
sar
push
sbb
pop
cli
or
push
retf
cmp
xchg
jle
sti
cmp
test
jne
or
dec
les
stos
clc
xchg
jl
xor
sub
xor
in
jmp
js
jno
sub
(bad)
pop
inc
fadd
fld
push
adc
lea
push
(bad)
cmc
sub
movs
fwait
jle
rol
mov
jmp
cmp
mov
sbb
lock
lds
lea
xchg
jo
jne
and
(bad)
loopne
jge
add
cmp
pop
daa
fs
and
mov
push
cmps
add
imul
jno
push
push
jle
jbe
add
ret
push
push
es
cmc
fisubr
bnd
push
pusha
add
add
adc
sub
sbb
movd
push
xlat
dec
push
mov
pop
shl
xchg
or
push
(bad)
xor
mov
(bad)
mov
dec
and
mov
je
frstor
inc
js
mov
ins
adc
mov
jp
push
add
fidivr
adc
xor
sbb
push
bnd
cwde
push
cmp
mov
retf
fisttp
call
pushf
into
dec
aaa
sahf
and
mov
stos
cmp
ins
int3
repz
jecxz
mov
dec
cmp
mov
push
add
mov
mov
test
add
mov
ret
or
ror
mov
test
pop
test
pop
cmp
cmp
push
add
push
das
fwait
sar
dec
fild
js
aas
and
mov
jno
stos
push
mov
mov
sub
sub
jmp
sbb
xor
jmp
or
aas
mov
repnz
pop
fsubr
pop
enter
stos
sti
ins
jg
loopne
push
or
out
daa
fmul
mov
sti
fisub
push
das
ds
mov
inc
jbe
pop
in
fcompp
ror
hlt
pop
outs
or
mov
mov
shl
popf
out
inc
cmp
jl
inc
fcom
fidiv
shr
jo
add
sti
jge
pop
xchg
ins
dec
js
pop
inc
dec
(bad)
or
xchg
sub
(bad)
mov
push
jle
xchg
jge
bnd
adc
test
or
dec
shl
stc
adc
pop
pop
mov
sbb
popa
add
movs
mov
enter
nop
fstp
(bad)
mov
inc
mov
repz
adc
and
mov
cmp
jns
add
mov
popa
push
imul
xchg
jne
lods
fsubr
jge
stc
sub
call
adc
push
fbld
and
shl
add
sub
std
fbld
mov
call
ret
call
rol
outs
fbstp
mov
outs
pop
adc
stos
fwait
push
jbe
movs
cmp
add
pop
gs
dec
(bad)
jmp
pop
or
push
int
inc
push
push
loope
and
imul
mov
aad
ret
jle
and
xchg
sub
stos
mov
(bad)
xor
scas
xor
inc
dec
in
jns
or
sub
or
enter
jle
sbb
cmp
mov
jmp
pop
fwait
mov
pop
sub
mov
cmp
sub
jbe
push
mov
shr
sbb
lock
or
sbb
enter
push
xor
inc
arpl
mov
xchg
rcl
into
fwait
jbe
sti
mov
jns
xchg
out
hlt
sub
cli
inc
jno
ficomp
jmp
and
movs
add
imul
add
into
outs
int3
pop
mov
loopne
cmc
push
mov
(bad)
xor
and
fistp
scas
inc
(bad)
xor
pop
and
les
dec
push
fsub
sub
sbb
stos
bound
mov
xor
mov
mov
jo
int
fdivr
lahf
mov
out
cmp
mov
jg
and
shl
test
out
sub
loope
gs
scas
mov
jg
or
jne
dec
in
repz
inc
dec
sub
ds
xchg
adc
dec
mov
pshufw
cs
dec
or
ins
mov
ins
jmp
daa
dec
test
nop
aas
out
sub
mov
scas
jmp
icebp
popf
mov
mov
sbb
lock
sbb
lock
push
js
das
dec
dec
mov
jbe
jp
mov
mov
jle
cmp
jns
outs
iret
jnp
sub
dec
mov
addr16
jns
fdivrp
jbe
xchg
mov
mov
fsubr
cwde
adc
add
and
sbb
xchg
xchg
mov
scas
(bad)
jp
sbb
xchg
or
lock
pop
and
sub
xchg
(bad)
pop
and
outs
xor
loop
pop
aam
cmp
sbb
dec
push
adc
jg
movs
dec
mov
stc
aam
push
push
push
xor
fdivr
mov
fnstenv
jo
cmp
sbb
jge
mov
cli
pop
mov
adc
jo
mov
retf
es
pop
jb
lods
sub
loop
ror
push
adc
push
pop
fdivr
add
mov
stos
call
push
popf
push
or
outs
stc
mov
(bad)
xor
les
data16
jb
mov
aam
push
popa
add
dec
add
das
idiv
xor
push
repnz
movs
int
inc
push
and
je
adc
xor
pop
lds
sar
mov
sub
cmp
call
(bad)
movs
and
gs
cdq
mov
sub
outs
das
or
ins
call
aaa
adc
push
dec
ror
lahf
pop
add
les
rcr
scas
xchg
mov
or
xor
dec
movs
push
fiadd
in
xchg
rcl
fadd
or
adc
xor
and
add
sub
xchg
xchg
xchg
add
out
pop
mov
pop
cs
xchg
mov
cwde
pop
xor
nop
mov
test
inc
fwait
daa
outs
outs
jle
inc
popa
bound
lea
gs
cdq
cmp
inc
sub
addr16
shl
sub
mov
add
add
cmps
or
pop
inc
mov
retf
jmp
ins
sbb
pop
mov
in
lods
jnp
bound
xlat
jl
lods
div
mov
in
jne
out
mov
jbe
pop
sub
in
pop
push
mov
fisub
cld
mov
xchg
fidivr
mov
push
inc
push
bound
fnop
mov
or
shl
xor
push
push
xchg
adc
and
mov
jg
leave
test
fwait
xor
daa
add
int
inc
push
lea
or
pop
gs
mov
jmp
jb
adc
push
cld
and
jg
sub
(bad)
(bad)
push
push
xor
in
pop
pop
cli
ret
pop
push
sub
in
dec
les
in
lods
dec
cdq
pop
xchg
int
mov
jns
aad
pop
outs
xor
add
jns
call
xor
mov
fld
push
stos
push
loope
ins
cdq
cmc
xor
pop
aas
jne
xchg
pop
push
dec
push
dec
movs
sbb
loope
movs
(bad)
jne
loopne
jno
cmc
pop
fbstp
push
test
movs
pop
in
shl
dec
pop
cs
clc
sete
out
push
push
mov
dec
add
inc
loope
jnp
dec
cmc
xlat
push
sbb
out
fisttp
mov
fisttp
sub
iret
retf
cld
inc
cmc
int3
sub
in
leave
inc
scas
push
pop
or
push
pop
jl
jle
inc
adc
inc
jmp
xor
mov
(bad)
into
mov
ret
test
fild
push
xor
inc
sub
shr
mov
jbe
jmp
dec
jmp
sub
jg
mov
jmp
xor
sub
pop
sbb
cmp
mov
out
call
in
test
mov
fisubr
into
sti
or
xor
sbb
inc
test
inc
mov
cmp
enter
mov
sub
push
rol
xlat
jg
(bad)
fcom
adc
xchg
repnz
aam
mov
stc
mov
test
mov
jae
inc
arpl
(bad)
test
add
xchg
retf
or
jb
sub
xor
aaa
rcr
dec
cmp
add
mov
(bad)
and
out
adc
adc
adc
das
and
test
lods
clc
ja
in
mov
test
jns
popf
add
mov
jp
jno
test
sub
icebp
mov
test
cmp
add
add
fdiv
loop
ret
fld
mov
mov
(bad)
lods
pop
xchg
sbb
arpl
sbb
ds
and
aam
mov
fptan
imul
mov
mov
mov
xchg
or
inc
mov
push
in
shl
cmp
aaa
mov
jmp
test
jecxz
popa
pop
stos
cmps
adc
or
hlt
fistp
arpl
adc
gs
loope
add
pop
mov
icebp
aaa
ja
shr
and
rcl
ficom
mov
xchg
es
(bad)
jae
inc
rcl
and
(bad)
shl
dec
add
std
xor
jp
dec
test
ins
jae
daa
ins
cld
fadd
test
add
push
out
xchg
xchg
mov
fcmove
cmp
cmp
push
add
mov
dec
ret
dec
mov
xchg
pop
test
pop
xchg
sti
and
fadd
ss
adc
dec
pop
test
jae
or
sub
sbb
adc
mov
cmp
push
sub
cmp
xchg
cmp
or
retf
in
fwait
test
sbb
jb
jb
ja
mov
daa
rcr
sbb
xchg
xchg
cld
dec
ins
cmp
(bad)
xor
sub
pop
or
lods
es
sar
sub
mov
dec
and
popa
(bad)
loop
lea
xor
imul
xchg
push
bound
sar
mov
jno
inc
fist
pop
adc
cmc
aad
and
jmp
sbb
adc
mov
ins
cmp
jp
scas
dec
fwait
cmp
cmp
adc
test
pop
rcl
aas
dec
push
and
(bad)
pushf
jmp
mov
sar
imul
jmp
scas
shl
sbb
sub
pushf
cld
inc
mov
pop
pop
lahf
pop
cs
aam
jb
inc
mov
jae
(bad)
xor
pop
mov
retf
inc
adc
scas
sub
jno
inc
pop
les
loop
out
sbb
popf
loope
out
cdq
mov
in
test
setb
movs
outs
(bad)
and
ds
bound
cmps
pop
jns
or
sub
and
in
mov
fdivr
arpl
push
nop
mov
cmps
fst
cmp
retf
std
out
das
mov
popa
mov
mov
push
js
or
mov
std
push
mov
push
fisubr
jne
adc
or
or
sbb
jno
jmp
movs
popf
dec
xchg
jmp
enter
push
mov
push
jl
(bad)
adc
scas
icebp
adc
push
movs
jp
repnz
ins
cmp
xlat
mov
sbb
push
data16
ss
ss
add
sbb
sbb
(bad)
fidiv
shl
enter
lock
cli
add
jge
cmps
retf
push
cmp
or
adc
not
jge
push
aas
pop
jp
xor
add
sbb
inc
sbb
inc
sub
fdiv
mov
cmc
dec
mov
sbb
sub
pop
mov
push
and
adc
nop
(bad)
xor
stos
jb
ja
push
lods
jno
push
cmp
mov
mov
icebp
sub
jno
sub
mov
fmul
popa
ret
mov
cli
inc
enter
mov
add
sti
mov
fadd
outs
cmp
mov
or
jg
sub
jb
mov
pop
jge
mov
out
cdq
ret
call
add
icebp
push
jmp
leave
xchg
and
pop
scas
and
or
ret
mov
mov
(bad)
mov
inc
cmc
mov
cdq
xlat
fucomip
xchg
and
and
dec
test
pop
cmp
jns
jmp
out
aaa
fwait
dec
jl
sub
retf
and
ins
mov
ins
mov
loope
jno
add
inc
push
mov
lock
lods
or
ret
cmc
mov
mov
and
and
cli
jge
icebp
jmp
aad
and
ret
adc
pop
jmp
das
mov
repz
jnp
cmp
das
vpaddd
cwde
pop
ja
scas
xor
dec
sub
inc
mov
call
ds
daa
dec
push
scas
xchg
or
or
stos
jnp
outs
sbb
jmp
ret
sub
jg
gs
fistp
out
out
mov
mov
movs
clc
inc
rcl
sbb
mov
loopne
mov
daa
push
mov
(bad)
inc
and
lods
dec
test
fisttp
push
cmp
jno
xchg
push
pop
mov
add
add
jmp
cwde
adc
add
je
js
in
scas
inc
ret
mov
(bad)
inc
pop
shr
add
fwait
ja
push
popf
scas
stc
clc
repz
xchg
fdiv
inc
aam
xchg
adc
icebp
mov
add
sbb
push
fnstenv
dec
shr
je
cmps
in
dec
jo
and
sbb
retf
mov
dec
mov
lock
out
aam
iret
pushf
cdq
in
cwde
push
pop
fld
jnp
or
shl
aaa
mov
push
fs
ret
dec
pop
in
pop
ret
(bad)
jmp
mov
sub
cmp
int3
or
mov
scas
jmp
shl
cli
xor
pusha
xor
xor
fs
gs
retf
(bad)
dec
outs
shl
mov
mov
test
mov
movs
mov
out
shr
dec
xchg
mov
push
xor
movs
xchg
daa
lods
push
sub
pop
cmps
js
mov
xor
push
xchg
jb
push
cmp
cwde
sbb
fst
jl
sub
sbb
push
sub
je
dec
adc
push
push
cmps
dec
sub
xchg
shl
jmp
lock
repnz
int
stc
gs
mov
push
xor
movs
mov
fmul
icebp
pop
cmp
ja
adc
mov
cdq
vorps
cmp
popa
lahf
fnstenv
rol
mov
pop
add
sbb
xchg
cs
retf
int
sbb
jno
sbb
(bad)
mov
mov
push
sbb
(bad)
je
sbb
adc
retf
iret
fadd
mov
xor
cmc
pop
jbe
xchg
dec
add
nop
out
mov
adc
jle
fcomp
sub
or
(bad)
cmp
es
scas
and
or
or
(bad)
cmp
pop
loop
push
mov
les
not
add
out
data16
fwait
pusha
sti
cmp
push
sub
jae
cmp
rcl
stos
iret
popa
cli
fldcw
mov
sub
mov
pop
inc
jge
jae
pop
in
inc
push
jno
add
fisttp
test
(bad)
jp
fadd
out
inc
cli
sub
(bad)
dec
or
jmp
push
mov
mov
adc
mov
dec
leave
xor
fisttp
push
inc
in
lods
movs
mov
scas
fbstp
call
popa
cmps
jno
lahf
rcl
stc
out
jmp
add
ds
enter
inc
icebp
mov
cmp
fcom
fisttp
sti
inc
mov
or
and
lock
lea
adc
fist
fs
xchg
jnp
imul
shr
inc
xor
sbb
mov
xchg
add
dec
mov
vpxor
js
in
inc
fist
pop
jp
mov
stc
xchg
fnstcw
aad
in
or
jl
outs
fld
inc
cmc
cmp
push
jmp
stc
mov
cs
icebp
mov
pusha
fcmovnbe
xor
sub
or
cdq
mov
inc
aas
nop
mov
imul
das
jmp
(bad)
push
pop
hlt
