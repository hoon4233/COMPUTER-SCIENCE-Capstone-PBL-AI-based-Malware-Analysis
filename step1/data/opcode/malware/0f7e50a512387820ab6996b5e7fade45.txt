sbb
add
sbb
jo
xchg
test
dec
add
loop
mov
ret
cwde
dec
hlt
dec
jmp
xor
fwait
mov
call
xchg
sti
xor
(bad)
in
retf
adc
or
push
aad
push
scas
cmp
jmp
sub
in
jmp
cmps
sbb
fistp
std
inc
(bad)
dec
movs
test
inc
lods
rol
into
repz
cmp
xor
mov
iret
pop
mov
adc
fnstcw
cmp
xchg
adc
js
dec
and
sbb
xchg
push
(bad)
sub
cmp
mov
outs
xor
dec
mov
sbb
dec
lods
cmp
jb
call
lock
add
ins
adc
jp
mov
rcl
cwde
dec
or
scas
jmp
fstp
call
xchg
rcl
sbb
and
xor
into
xor
mov
inc
mul
iret
out
(bad)
and
in
mov
push
xchg
aaa
rcl
jno
cmp
(bad)
imul
loopne
add
or
pushf
jnp
jns
or
jns
loop
mov
lds
iret
xchg
xor
dec
(bad)
retf
outs
test
arpl
repz
outs
shl
imul
add
jbe
(bad)
arpl
dec
adc
out
(bad)
inc
lea
sar
inc
aaa
lods
imul
arpl
test
add
lds
push
rcr
push
lock
jle
mov
lea
aam
(bad)
xchg
mov
lock
retf
jmp
mov
retf
das
test
repz
gs
cmp
push
sbb
xor
inc
xor
lods
push
push
sub
test
hlt
mov
shr
sub
rol
cmp
pop
stos
push
or
push
and
psrlw
push
lea
int3
cmp
test
adc
cmp
mov
jnp
hlt
mov
loop
mov
and
inc
cmps
sub
aaa
push
cmp
lods
inc
jmp
mov
pop
and
inc
mov
popa
inc
adc
ja
aas
aas
cld
cmps
(bad)
jl
lods
push
inc
adc
xchg
add
cmp
(bad)
or
ss
jl
sti
mov
stc
outs
fdiv
mov
inc
aad
sbb
mov
bound
outs
or
or
inc
and
mov
adc
repnz
add
xor
adc
call
mov
cmp
sar
ret
pushf
nop
mov
cli
jnp
ror
inc
mov
repnz
loop
mov
stc
ret
mov
jmp
xchg
(bad)
jmp
xlat
push
push
xchg
repnz
jbe
mov
adc
mov
aad
mov
mov
add
stc
mov
inc
pusha
hlt
gs
mov
cmps
pop
mov
out
bound
retf
sub
sbb
mov
add
inc
pop
jmp
icebp
pushf
lods
(bad)
xor
push
mov
out
and
imul
mov
cmp
jg
outs
loop
out
jb
mov
rol
sbb
or
jbe
out
fld
gs
stos
add
jg
push
sbb
push
popf
out
mov
add
popa
push
push
jmp
gs
push
add
or
and
enter
jl
sbb
cli
out
pop
faddp
push
jmp
push
sti
hlt
lahf
push
cld
sub
or
and
lods
jg
or
mov
mov
shl
inc
hlt
shr
mov
dec
pushf
xchg
rcl
mov
movs
shl
movs
mov
xchg
call
arpl
popa
pop
cmp
inc
retf
inc
adc
in
in
and
pop
pop
mov
mov
inc
pushf
test
cmp
mov
arpl
mov
jno
mov
fsubr
add
and
adc
movs
hlt
jl
lds
xor
cmc
sub
xor
test
xchg
dec
and
fisttp
icebp
push
xor
es
and
lahf
ficomp
jne
stc
pop
pop
shr
test
inc
pusha
adc
je
in
stos
jg
nop
pop
cmp
dec
adc
adc
xchg
mov
add
daa
fnstenv
ret
bound
push
out
fadd
jp
cs
mov
mov
fdivr
les
fstp
mov
dec
or
in
(bad)
push
(bad)
lods
mov
inc
push
pop
shr
pop
fimul
dec
test
mov
mov
leave
addr16
jo
mov
mov
leave
mov
out
adc
sub
mov
dec
mov
lock
inc
or
xchg
stos
fwait
call
pop
mov
xchg
aad
dec
ror
adc
(bad)
call
xor
inc
into
dec
fisubr
push
in
xchg
adc
setnp
lods
dec
iret
imul
jl
adc
stos
pop
add
fadd
shr
add
cs
push
or
daa
xchg
jecxz
mul
mov
aaa
cmp
lahf
sbb
xchg
dec
loope
jno
mov
pop
ret
iret
test
cli
jnp
fcom
jae
or
jno
xchg
test
or
aas
sub
fidiv
jb
mov
cmps
xor
bound
xchg
(bad)
(bad)
pop
or
iret
test
xor
aaa
cmp
xchg
or
cmp
cli
cdq
mov
cwde
fwait
pop
addr16
mov
aas
ret
pop
fnstenv
cmps
dec
sub
xchg
fisubr
cmp
push
xor
xchg
sti
jae
ss
stos
inc
add
mov
das
push
inc
sar
xchg
in
jl
ret
jnp
adc
cmp
mov
repnz
dec
nop
leave
mov
and
ret
jmp
fiadd
sbb
shl
sub
add
cmc
fwait
inc
out
cdq
and
shl
rcl
fld
clc
out
sbb
popf
(bad)
push
retf
arpl
mov
jmp
mov
pusha
cmp
mov
jnp
and
mov
fdiv
mov
out
pushf
inc
inc
cmp
js
xchg
aam
call
pop
add
dec
pop
and
mov
stc
test
cmp
push
fnstenv
dec
add
not
sbb
mov
nop
sar
in
shr
mov
test
pop
call
sbb
jg
mov
pop
and
(bad)
popf
jno
loop
pop
shr
(bad)
lock
lea
cli
sbb
add
push
addr16
mov
fbld
retf
pop
iret
xlat
push
jmp
nop
pop
es
jmp
shl
inc
jnp
jle
inc
(bad)
repnz
jecxz
cmps
add
xchg
or
mov
or
shr
outs
lods
and
popf
call
xor
add
fdivr
(bad)
in
mov
int
mov
jle
push
mov
fld
inc
sub
icebp
xlat
jge
lods
in
cmp
sub
iret
pop
push
mov
cld
add
add
cmp
and
popa
test
inc
jmp
mov
out
xor
(bad)
mov
mov
add
(bad)
dec
dec
push
fisub
inc
pushf
pause
mov
shl
sub
xor
imul
retf
ret
iret
jecxz
add
xor
stos
mov
(bad)
pop
inc
sbb
or
fiadd
fadd
daa
and
inc
mov
imul
outs
(bad)
pushf
fisub
popa
push
xchg
xchg
xchg
lds
dec
fwait
movs
pop
adc
dec
xchg
mov
(bad)
pop
jbe
outs
or
mov
inc
bound
repnz
jp
fwait
cmp
adc
imul
cmp
imul
mov
aad
jmp
and
fdiv
into
dec
xchg
pop
push
sbb
cmp
shl
sbb
std
rcr
mov
aam
xor
scas
adc
cmp
sbb
mov
fcmovnbe
inc
mov
pop
cmp
mov
or
shl
adc
mov
sbb
movs
gs
xchg
jecxz
shl
bound
jbe
iret
data16
sbb
and
outs
scas
cmp
pop
push
ins
mov
cli
mov
shr
sbb
retf
shr
nop
daa
mov
jne
nop
dec
jbe
(bad)
inc
ins
jp
cmp
sub
cmps
sub
jb
inc
jbe
gs
movs
aas
inc
jp
mov
pusha
inc
fs
retf
js
hlt
mov
sub
rol
and
pop
mov
test
fwait
dec
mov
push
jae
addr16
mov
or
pop
adc
ja
test
iret
xor
or
pop
mov
mov
cli
cmp
push
mov
lock
mov
test
cmps
sub
fidiv
out
(bad)
outs
sub
ins
and
and
or
adc
pop
pop
push
dec
movaps
fsubr
daa
shl
jge
sub
mov
add
retf
and
mov
pop
out
lock
cmp
not
xchg
sbb
in
xchg
fstp
push
jle
mov
dec
add
push
ins
scas
clc
dec
int3
loope
in
shl
aas
sbb
jecxz
fild
push
push
cdq
loop
xchg
shr
jo
enter
xchg
push
xchg
sti
sbb
movs
ret
xchg
cmp
stos
neg
adc
les
pop
xor
inc
xchg
mov
xchg
in
loope
repz
shl
pop
push
pop
pop
mov
xchg
xchg
xchg
or
mov
mov
cwde
mov
xchg
pop
xor
lods
mov
dec
test
mov
and
push
mov
in
lods
pop
adc
je
xor
test
test
hlt
lahf
cmp
xor
leave
and
and
dec
push
sti
into
mov
sbb
iret
dec
jecxz
mov
popa
std
ja
test
add
fst
sar
in
cmp
lods
aam
sub
ins
pop
pop
push
pop
jmp
adc
push
push
lock
adc
fistp
test
not
ja
add
xchg
jbe
movs
cwde
jmp
sub
or
cmp
scas
icebp
xchg
gs
sar
xchg
push
ror
je
daa
and
add
mov
arpl
add
sar
mov
and
ja
ds
push
in
shl
(bad)
xchg
sub
loop
cdq
test
nop
and
mov
retf
test
shl
retf
aad
fwait
pop
leave
jo
add
test
retf
inc
sub
nop
mov
pop
scas
mov
into
mov
outs
(bad)
stc
fidiv
inc
xor
cmp
outs
cmps
mov
daa
fiadd
les
adc
or
cmc
cmp
add
icebp
out
xor
dec
or
dec
lock
adc
mov
in
mov
not
enter
cli
xor
mov
pop
cmp
jne
dec
fstp
rcl
ror
inc
test
leave
jp
push
ficom
adc
fld
aad
jecxz
fadd
js
or
pop
mov
imul
scas
aas
scas
faddp
mov
sahf
enter
jmp
iret
fcmovbe
es
jbe
std
pop
mov
cmps
lock
jecxz
sub
jb
inc
add
lods
push
sub
jmp
lods
out
mov
int
stos
sbb
fld
int
jmp
cmps
mov
mov
add
cli
lods
fsub
push
fmul
std
adc
and
or
hlt
cmp
popf
dec
mov
add
xor
inc
retf
aam
es
xchg
dec
popa
hlt
and
in
sbb
into
sub
sub
int
jg
fwait
aas
and
sub
inc
leave
or
or
or
std
cmp
dec
and
pop
jbe
sub
pop
rol
dec
call
jl
cs
xor
rcr
ret
rcl
stc
and
scas
jmp
call
jo
sbb
sbb
jecxz
into
jge
iret
sti
pushf
cli
push
dec
daa
xor
push
pop
adc
movs
pop
and
xor
lahf
neg
je
stc
in
xchg
bound
and
mov
cmc
(bad)
lock
retf
sub
ret
popf
stos
pop
push
push
lea
shr
adc
xor
sbb
mov
enter
loopne
mov
xor
cmps
mov
cmp
mov
das
and
adc
add
call
sbb
and
cmp
aam
mov
jnp
add
lds
sti
sub
push
in
test
inc
push
out
inc
std
mov
add
pop
nop
mov
add
scas
sub
test
push
xchg
mov
cmp
sbb
push
sti
inc
leave
int3
cwde
mov
and
sbb
test
inc
xlat
shl
imul
pop
and
iret
pop
cs
mov
stos
pop
retf
adc
dec
leave
ret
int
dec
push
xor
jmp
push
or
call
sbb
(bad)
popf
pop
and
in
rcr
adc
retf
out
adc
inc
out
push
leave
aas
xchg
xchg
stos
scas
or
dec
push
leave
scas
aam
add
movs
cmp
jns
out
cmps
adc
sbb
push
clc
xchg
push
ficom
daa
jno
push
add
mov
cwde
rep
das
in
out
addr16
(bad)
xlat
fcomp
or
(bad)
fmul
call
stc
xor
test
popf
bound
mov
add
jne
pop
mov
mov
ss
ja
(bad)
call
push
loope
aaa
adc
mov
lahf
jle
sub
and
popa
call
cmp
setp
nop
inc
sbb
push
dec
add
repz
pop
dec
(bad)
push
dec
jmp
fadd
div
je
mov
lods
or
stos
iret
push
jb
outs
mov
sbb
pop
imul
cmc
fist
push
(bad)
cmc
pop
pop
movs
jl
cmp
cmps
and
dec
mov
out
sub
push
fwait
jne
sar
mov
push
aas
fsub
adc
loope
xor
and
dec
xchg
sbb
imul
inc
cmp
mov
xor
fisub
xchg
inc
aam
mov
mov
in
dec
xor
cmp
pusha
(bad)
daa
inc
jmp
push
xor
pop
cmp
sub
dec
adc
dec
xchg
arpl
inc
lahf
adc
fbld
cmp
and
or
mov
mov
sti
bound
sub
jbe
je
aad
push
pop
mov
jmp
cmp
or
cmp
loopne
cmp
sub
shl
cwde
push
pop
pop
pop
cmp
pop
scas
(bad)
sub
bound
scas
xchg
mov
mov
mov
sub
cs
add
(bad)
mov
nop
fs
lds
(bad)
cmp
pushf
js
stos
leave
nop
xor
mov
cld
stos
fs
or
push
ins
dec
fcmovbe
mov
cdq
ret
push
sbb
xor
scas
push
adc
add
out
mov
stos
out
add
pop
jg
dec
xchg
mov
dec
mov
mov
movs
je
xor
and
push
fcom
movs
jae
(bad)
pop
mov
sub
adc
adc
adc
cmps
in
inc
shl
ins
rcr
out
das
jnp
fs
sub
xchg
loopne
sub
outs
inc
pop
cmp
out
pop
fidiv
(bad)
xchg
nop
lods
adc
repz
mov
ds
sar
int
jb
(bad)
je
mov
(bad)
not
cmp
retf
push
add
and
inc
dec
cmps
dec
xchg
ins
sti
lds
enter
inc
fidiv
lods
jmp
xor
and
fild
push
and
inc
inc
ins
and
out
fst
dec
(bad)
jge
fdiv
es
cmp
xlat
mov
or
jb
push
mov
dec
cmp
fidiv
retf
xor
cmp
adc
stos
clc
mov
retf
(bad)
stc
in
mov
mov
sbb
mov
inc
int
out
dec
mov
neg
jae
and
push
in
adc
mov
and
rcr
or
clc
pop
mov
push
test
or
push
sub
movs
and
cli
inc
jmp
sub
in
push
fmul
inc
mov
cmp
and
aad
lods
ss
gs
jecxz
cs
scas
repnz
mov
mov
dec
inc
test
rol
sahf
jae
dec
push
adc
xchg
xchg
sar
dec
ret
out
cwde
push
jbe
int
into
out
inc
jl
retf
xchg
sbb
xor
add
add
xchg
out
push
fwait
call
out
ret
jge
xor
dec
add
sub
jo
xchg
adc
xchg
stc
loopne
push
xchg
adc
outs
mov
in
sub
cwde
pop
jmp
lock
pop
aas
xchg
(bad)
sbb
mov
and
adc
sahf
js
sbb
loop
call
out
shl
xchg
jb
push
mov
adc
mov
fstp
pop
mov
out
sti
call
mov
ja
mov
ja
dec
fwait
aaa
mov
stos
loope
and
dec
xor
clc
sbb
cld
int
nop
in
div
movs
add
lahf
test
mov
inc
in
lahf
adc
arpl
popf
stc
fidiv
iret
retf
mov
or
xor
stos
lods
cli
cmps
mov
adc
daa
xchg
addr16
dec
jle
stos
int3
fiadd
subps
cs
popf
ds
inc
add
ror
mov
add
bound
jl
ror
std
xor
arpl
adc
jmp
or
aaa
cdq
xlat
icebp
xchg
jmp
adc
(bad)
cmps
adc
int
mov
jns
push
inc
retf
or
mov
cli
mov
or
xchg
loope
aad
dec
pop
ficomp
enter
out
out
outs
aad
jmp
sar
add
fmulp
ja
rcl
inc
not
jbe
outs
xor
imul
pop
mov
mov
dec
xor
inc
movs
js
jmp
ret
scas
lds
cs
mov
(bad)
sub
ret
mov
xor
cs
jno
mov
scas
adc
(bad)
cmps
pop
jb
cmp
sbb
cmps
mov
jp
aad
push
cmps
xchg
dec
inc
je
mov
cmp
aad
and
mov
movs
pop
xchg
stc
retf
sbb
fcom
mov
es
jmp
inc
gs
xchg
and
mov
mov
repnz
test
jbe
mov
jae
cmp
dec
fdiv
xor
(bad)
div
lods
jb
mov
sub
shr
dec
push
repz
shr
push
add
das
xor
sub
add
fadd
xor
mov
jbe
xor
push
jmp
out
push
scas
dec
pop
(bad)
mov
jb
out
in
xchg
ss
imul
test
ins
xor
jecxz
or
jp
arpl
aad
sbb
and
or
cmp
int3
cli
outs
adc
push
clc
jae
(bad)
into
fs
out
adc
addr16
or
test
pop
rcl
and
rcl
popf
sub
mov
into
mov
xor
in
sub
add
sbb
(bad)
push
sar
xor
lahf
xchg
add
and
fsubrp
push
cmps
push
push
hlt
sbb
in
ins
mov
pop
dec
or
mov
(bad)
jno
loop
cmp
stos
cld
out
inc
and
out
xchg
sbb
jbe
imul
fwait
std
movs
xchg
scas
jno
xchg
(bad)
aam
inc
mov
xchg
add
imul
fistp
and
sar
fmul
sbb
cmps
es
jl
mov
xor
mul
xor
mov
inc
sbb
cmps
push
cli
popf
data16
(bad)
cmp
xchg
pusha
pop
add
leave
and
stc
jne
jl
or
cmp
jmp
nop
xchg
or
pop
mov
and
shl
add
aaa
or
in
into
sub
cmp
pop
jbe
and
pop
pusha
jns
cmp
or
jne
das
mov
and
popf
mov
adc
xlat
sbb
fidiv
dec
mov
fistp
add
mov
jg
ins
fisubr
dec
mov
add
outs
xor
dec
test
outs
xchg
xchg
fimul
inc
mov
lock
adc
std
push
mov
dec
mov
adc
test
dec
fwait
xor
js
jecxz
test
mov
bound
xchg
ss
xchg
scas
daa
loopne
mov
test
pop
fwait
dec
ja
push
or
cmps
ins
pop
mov
cli
sub
sub
cld
adc
arpl
adc
mov
(bad)
(bad)
fisub
and
in
cmp
and
mov
cmp
hlt
jp
clc
mov
inc
je
loopne
out
cmps
int3
repnz
fwait
cmp
mov
cmps
mov
push
cwde
mov
pop
out
in
aas
mov
mov
inc
mov
adc
ds
push
xor
and
xor
(bad)
imul
push
mov
sahf
push
out
mov
mov
fist
add
lock
sub
fcomp
mov
sti
add
jo
sub
mov
adc
adc
cmp
fsubr
lods
cmp
dec
aad
push
sar
out
cmp
mov
fcomp
mov
push
push
xchg
sbb
mov
pop
lds
scas
pop
(bad)
jmp
mov
iret
imul
cmp
cs
inc
mov
sub
int3
sar
imul
push
fmul
xor
call
or
stos
dec
cmp
aad
ret
clc
dec
sar
stos
jge
ret
xor
jmp
push
cmp
mov
fist
dec
out
retf
jg
add
out
cmp
push
in
mov
push
sub
inc
clc
jae
add
sar
repnz
test
jecxz
cmps
arpl
mov
std
push
test
jne
ds
xchg
xor
push
fs
and
mov
mov
jmp
sahf
pop
push
(bad)
repnz
sbb
jge
mov
add
dec
mov
jmp
out
push
mov
cmp
enter
sahf
sbb
adc
call
jp
lds
outs
xor
aas
stc
adc
popa
xor
in
push
inc
mov
jp
gs
pusha
jge
xchg
xchg
(bad)
xchg
sbb
dec
shr
add
sub
mov
push
lahf
cld
lods
les
pop
dec
mov
fcos
popa
and
fcomip
jge
or
adc
push
lods
in
pop
addr16
pop
outs
es
ror
leave
or
int3
cli
inc
enter
push
adc
and
jl
std
ins
lds
mov
add
cli
push
sbb
pusha
(bad)
cmp
out
mov
imul
ds
je
sbb
xchg
pop
es
movs
sbb
pop
jmp
cmp
cmp
or
dec
jbe
xor
adc
or
test
sub
xor
ins
add
loop
clc
add
push
shl
xchg
pop
pop
cdq
pop
cdq
mov
or
imul
aas
fadd
mul
jmp
mov
inc
clc
inc
pop
or
cdq
dec
dec
test
xor
cmc
test
cmp
imul
xor
retf
mov
test
or
hlt
fadd
mov
dec
xor
rcl
inc
enter
fcmovnbe
push
fcom
adc
and
das
mov
iret
add
xlat
nop
pop
xor
jb
cmp
pop
adc
xchg
jne
jle
sub
data16
aaa
mov
shl
arpl
cmp
daa
leave
loope
xor
stc
lock
add
(bad)
mov
cwde
inc
cmp
lea
fadd
ss
pop
or
inc
ja
es
sbb
ds
xchg
push
mov
in
and
rcr
xchg
dec
jge
aaa
mov
es
(bad)
aaa
add
loop
js
dec
cmps
jmp
mov
scas
or
cmp
cmp
nop
bound
sar
sub
mov
xlat
pop
push
xor
sub
mov
mov
xor
in
push
push
adc
nop
add
cld
(bad)
lods
mov
push
jne
adc
mov
shl
ror
movs
loop
neg
leave
retf
je
mov
xor
call
mov
stc
fs
sub
inc
push
sbb
ret
cmps
cmp
pushf
mov
addps
cmps
or
xchg
and
adc
and
aam
idiv
lock
sti
jnp
in
mov
pop
and
jmp
pop
push
mov
jmp
push
les
gs
cmp
or
lds
jnp
push
mov
push
inc
dec
inc
call
pop
clc
cmc
fadd
imul
xor
fistp
and
xchg
pop
mov
nop
jmp
xchg
cmp
add
sbb
or
mov
mov
and
inc
loopne
aad
mov
int
mov
rcr
pop
xor
jbe
int
movs
cmp
loope
(bad)
shl
dec
mov
mov
jg
dec
stos
dec
pop
push
mov
addr16
xor
xchg
inc
cmp
inc
ss
mov
into
jno
sub
jmp
sub
mov
mov
push
sbb
jp
imul
jmp
out
xor
in
jne
cmc
mov
mov
fst
pusha
stc
and
lea
jle
stos
dec
xchg
(bad)
jle
repz
popf
imul
cmp
xchg
call
and
retf
jae
mov
jle
and
or
fnstcw
or
and
punpckhdq
es
pop
push
arpl
xlat
es
jae
mov
shl
sbb
fidivr
test
mov
ss
out
jae
jl
(bad)
lds
fwait
pop
push
gs
lock
and
mov
mov
and
cwde
push
call
xchg
nop
or
int3
sub
arpl
mov
mov
or
call
or
add
gs
jecxz
lods
fcom
jbe
bnd
dec
sbb
lock
and
fwait
jp
xchg
or
push
add
push
pop
cmp
inc
inc
popa
mov
adc
jo
dec
cmp
push
movs
sar
rol
ret
test
mov
iret
gs
stos
loopne
rcr
mov
sub
adc
add
push
test
xor
mov
fcomp
inc
jnp
push
sbb
rol
push
aam
mov
out
and
in
push
push
lods
pop
(bad)
(bad)
sbb
mov
jmp
mov
or
cwde
pop
imul
in
mov
inc
imul
push
pushf
push
inc
mov
pop
add
daa
push
jmp
dec
outs
out
inc
xchg
ja
jmp
push
movs
and
shr
mov
pop
(bad)
mov
dec
loope
or
or
cmp
test
inc
fstp
gs
jp
daa
inc
and
popa
ret
cmps
daa
mov
dec
mov
repnz
mov
jmp
cmp
(bad)
jge
mov
sbb
aaa
pop
jns
mov
cmps
push
sub
sub
push
adc
push
popf
xchg
xchg
mov
pop
inc
add
sar
dec
xchg
(bad)
fdivr
(bad)
xor
ins
ss
stc
jns
inc
mov
adc
and
push
scas
push
sub
cmp
or
(bad)
jp
fsubp
aaa
fild
inc
or
sub
mov
out
cmp
jecxz
sub
pop
or
mov
xor
inc
lock
sub
dec
mov
jb
hlt
int
lods
jae
cmc
inc
icebp
cmp
arpl
sbb
sub
pop
aas
add
xlat
jl
inc
xor
jmp
mov
pop
int
scas
adc
push
repz
push
aad
xchg
rol
mov
imul
xacquire
loope
ret
enter
enter
ins
jp
adc
jae
lahf
nop
fdiv
bound
or
pop
add
jbe
pusha
mov
mov
adc
adc
jecxz
push
ins
inc
inc
xchg
sub
sbb
mov
dec
nop
lahf
addr16
frstor
sub
gs
mov
mov
jge
inc
push
loop
cmp
aaa
retf
inc
leavew
sub
xlat
pop
bound
jo
bound
xchg
cwde
lock
cld
ds
fist
ud2
mov
jbe
ds
pop
out
addr16
aaa
fld
sub
mov
movs
test
movs
retf
js
sti
add
iret
cmp
and
cmps
out
(bad)
fisttp
push
sahf
mov
add
and
bound
aam
addr16
imul
out
arpl
xchg
xchg
mov
push
popf
or
cmp
test
ins
sbb
jno
and
xchg
test
add
ret
ret
pop
cmp
lea
xchg
jmp
sub
fnstcw
jnp
adc
add
push
aaa
add
mov
and
in
or
xchg
ss
push
add
ins
loope
inc
add
fs
inc
and
ja
push
loope
inc
sti
fiadd
sbb
(bad)
shr
lods
xchg
and
loop
inc
mov
sub
clc
lahf
adc
add
fistp
adc
or
adc
movs
xlat
inc
out
es
ss
ret
mov
add
rcl
pop
jecxz
xchg
push
cmp
or
inc
shl
enter
cmp
loope
int
mov
pop
test
sahf
repnz
xchg
xor
std
sbb
clc
pop
cli
test
js
jl
dec
out
fwait
mov
jbe
or
leave
popf
adc
ror
(bad)
mov
push
ja
pop
and
sbb
lds
adc
xchg
js
and
outs
pop
ins
dec
mov
push
jle
dec
fs
sub
ror
adc
and
mov
bound
mov
inc
pop
and
nop
mov
test
cmps
dec
into
jae
je
sahf
cmps
shl
dec
xchg
scas
enter
imul
movs
retf
mov
mov
in
in
mov
icebp
xor
mov
lds
xor
cmp
fcom
test
fmul
clc
mov
fs
je
test
sbb
sub
or
add
(bad)
test
xchg
jmp
xor
movs
frstpm(287
inc
xchg
rcr
lods
jmp
adc
adc
sub
mov
hlt
aam
jmp
xor
cmp
int3
adc
jbe
movs
jl
mov
jmp
xchg
js
das
mov
mov
out
mov
sbb
mov
repnz
retf
(bad)
or
mov
pop
repnz
ret
movs
xchg
cmp
jmp
add
aad
xlat
repnz
pop
cdq
xchg
mov
adc
(bad)
ror
and
retf
arpl
in
(bad)
aam
adc
add
xor
jl
sbb
bound
add
and
mov
(bad)
out
jnp
add
sbb
dec
mov
fcom
outs
inc
and
pusha
fsubr
sub
std
in
pop
jne
icebp
mov
int3
int3
jle
retf
addr16
adc
mov
aaa
test
pushf
sub
inc
mov
jg
bound
jns
arpl
(bad)
fsubr
fwait
xor
sbb
dec
fist
idiv
inc
cmp
retf
dec
pop
push
es
ret
fstp
cli
fsub
adc
jge
aaa
push
jecxz
mov
pop
sub
ins
cmp
int
push
test
xor
popf
dec
retf
mov
sbb
ror
add
cdq
cwde
outs
xlat
dec
xchg
mov
into
mov
xchg
ret
push
adc
fidivr
xor
in
dec
mov
in
sub
sub
mov
push
xor
jnp
and
jl
int
inc
sbb
xchg
std
inc
(bad)
aaa
rcl
fst
pop
int
aam
fisttp
fiadd
leave
cmps
or
mov
out
aam
aam
push
xchg
inc
cmps
jmp
mov
sub
inc
imul
xchg
aaa
(bad)
scas
sbb
or
pop
fs
ret
pop
or
arpl
mov
mov
iret
mov
xor
add
ja
sahf
mov
inc
cwde
dec
das
bound
jmp
fst
jle
sub
inc
mov
xchg
arpl
sub
ret
ss
jg
daa
fimul
lods
sbb
inc
cmp
pop
loopne
dec
push
retf
out
jb
dec
inc
cmp
dec
out
stc
rcr
sub
xchg
rcl
adc
cli
and
gs
fwait
and
mov
jae
cdq
hlt
sub
jle
and
dec
jnp
fldenv
mov
jns
jbe
popa
cmp
adc
jbe
pop
ja
add
inc
push
mov
dec
mov
dec
cmp
jecxz
pop
sub
das
push
sbb
jg
mov
mov
sbb
jp
movs
xchg
pop
push
mov
fsub
or
xchg
sub
xchg
xlat
shr
gs
pop
mov
das
loopne
add
sbb
mov
imul
les
cmp
mov
mov
vpsubd
push
in
std
inc
mov
nop
jo
xor
out
mov
imul
js
repnz
lds
gs
imul
in
inc
std
arpl
in
xchg
xchg
push
lods
push
xchg
cli
mov
mov
inc
lods
mov
jge
repnz
retf
push
or
popf
or
sbb
jns
(bad)
sahf
sub
retf
xor
or
mov
(bad)
data16
and
fmul
inc
and
leave
sub
push
jg
mov
cmps
sbb
ja
fld
cli
sbb
mov
std
push
imul
push
js
ret
or
jo
cmp
or
dec
inc
lea
jmp
les
mov
shl
push
jmp
aas
jb
loope
pushf
(bad)
cmc
and
stos
or
(bad)
adc
and
jl
out
into
cmp
in
push
std
fs
pusha
or
fsubr
pushf
jmp
cmp
sbb
mov
call
adc
outs
cld
ss
in
jp
xchg
fisubr
cmp
retf
sub
lods
mov
jmp
cwde
pop
add
arpl
mov
daa
mov
ret
loopne
lock
cmc
inc
cmps
sbb
test
xchg
cs
sub
test
test
test
lock
not
add
nop
mov
adc
div
push
add
push
adc
iret
push
rol
cmp
mov
repz
jne
sbb
inc
bound
push
repnz
lahf
mov
popa
retf
jl
movs
jo
ds
jne
sub
out
jae
nop
pusha
(bad)
mov
xor
(bad)
push
cmc
cmp
sbb
icebp
jae
stos
out
xor
pop
push
xlat
sbb
in
or
popf
mov
jbe
les
(bad)
data16
jmp
aas
out
stos
in
cmp
ins
loope
mov
xchg
fisub
sbb
scas
ja
cmp
and
es
jbe
cmps
mov
mov
hlt
sub
test
xchg
les
sub
adc
sbb
out
xchg
into
sbb
mov
xchg
sti
sbb
push
ins
inc
retf
fisttp
cmps
inc
adc
arpl
clc
imul
mov
jl
xor
adc
lock
adc
add
std
xchg
cmp
in
pushf
repz
mov
and
loope
mov
pop
call
adc
int3
adc
sti
jno
push
pop
(bad)
ja
push
or
xor
rol
lds
dec
aam
daa
arpl
mov
mov
jo
repnz
adc
das
cmp
cdq
sbb
movs
sahf
jg
movs
sub
movs
cli
push
lods
and
and
lock
arpl
ins
push
loope
xchg
jns
fwait
xchg
popa
fcmovnu
jecxz
xchg
fwait
cmp
jg
xor
jecxz
push
sbb
lods
jae
in
dec
mov
mov
ss
dec
jg
sbb
out
scas
loop
sub
mov
sub
movs
or
push
ins
adc
scas
mov
lods
mov
les
popa
(bad)
or
xor
pop
push
aad
(bad)
sub
cmp
mov
stos
mov
ss
mov
movs
mov
popa
ror
jbe
and
stc
xor
out
jp
pop
out
mov
imul
mov
or
mov
nop
js
movs
retf
xor
push
aas
pop
jge
xor
cdq
es
xchg
add
cmp
ror
(bad)
mov
or
adc
xchg
out
enter
aad
mov
mov
dec
jp
xchg
int3
inc
cmps
xchg
icebp
push
xor
push
push
jecxz
jle
std
mov
je
jecxz
and
fmulp
mov
cmp
aas
inc
cmp
ss
mov
xor
add
out
hlt
into
mov
test
jae
js
neg
push
pusha
jb
fcomp
std
mov
adc
mov
scas
pop
sub
dec
fiadd
or
cld
sti
inc
jb
fmul
ins
jecxz
jmp
sti
call
mov
pop
je
mov
jmp
pusha
es
test
sbb
and
scas
int3
cmps
jge
xor
daa
sbb
gs
aam
push
in
sub
cld
fstp
jns
loop
ins
adc
pushf
ficom
xor
in
dec
ret
je
(bad)
dec
sahf
xchg
fidiv
inc
xor
and
mov
shl
into
das
call
dec
or
ret
add
jae
fcomp
xor
int
mov
repz
dec
retf
iret
add
(bad)
popa
rcr
sbb
bound
jns
pop
sub
mov
sahf
lods
xchg
popa
sub
shr
add
and
dec
hlt
xor
jo
xor
scas
xchg
outs
push
ror
out
idiv
mov
leave
mov
push
sub
stos
mov
push
cmp
xchg
mov
push
mov
dec
dec
adc
pop
lea
mov
test
xchg
push
sbb
fdivr
mov
mov
retf
dec
or
fwait
xor
cld
loop
fwait
xchg
lds
(bad)
repnz
inc
cmp
adc
sub
sbb
mov
fxch
or
into
xor
sti
lods
rcl
rol
mov
out
xchg
xor
add
jne
cwde
xlat
mov
mov
xchg
add
scas
mov
jnp
inc
sub
cs
clc
fsubr
mov
pop
cmps
popa
xor
(bad)
shl
cdq
fdivr
xor
mov
push
scas
gs
clc
lahf
clc
jb
or
jb
mov
jmp
enter
xor
jl
mov
sbb
fs
js
out
jmp
sub
mov
push
add
(bad)
jl
(bad)
in
jmp
cmps
sub
jae
add
mov
mov
push
inc
loop
cmc
mov
cli
push
gs
call
add
push
ret
jae
dec
sub
mov
xchg
arpl
inc
push
cli
sbb
fdiv
xor
ja
mov
dec
dec
(bad)
retf
push
loop
out
xor
das
add
aam
movs
fs
arpl
inc
sbb
mov
fidiv
jle
add
add
mov
adc
jne
js
sbb
dec
aaa
inc
pop
pusha
clc
shl
mov
push
push
pop
stos
sar
jge
rcl
pop
cwde
push
adc
mov
hlt
mov
push
dec
int3
fisttp
xchg
mov
jmp
and
sbb
lods
das
or
add
xor
es
cld
les
xchg
xchg
cdq
int3
mov
pushf
dec
dec
aam
(bad)
mov
shr
fldenv
push
pop
aaa
sub
pushf
dec
push
sub
jge
xlat
lea
inc
push
shl
push
xchg
imul
sahf
outs
sub
shr
sbb
mov
cmp
and
pop
pop
pop
imul
dec
mov
add
mov
push
and
or
clc
out
std
mov
lea
or
test
inc
enter
jne
stos
popf
sub
and
dec
data16
and
stos
lock
push
jns
jns
jae
or
shl
and
and
scas
cmp
or
pushf
jns
aam
xchg
mov
pushf
mov
inc
add
retf
out
add
xchg
sub
out
xchg
rol
jnp
mov
pop
mov
jo
and
iret
mov
sub
test
cmps
mov
(bad)
sbb
cmps
xchg
mov
cmc
dec
lahf
out
(bad)
test
retf
fwait
and
mov
fcom
cmc
pop
mov
movs
in
daa
imul
jmp
mov
sub
inc
fnsave
pop
icebp
inc
inc
pop
cmp
jae
je
inc
repz
cwde
ja
jge
fbstp
sbb
inc
adc
push
jno
lods
mov
ins
xor
sub
fisttp
mov
mov
sub
xchg
test
jbe
rcr
cmp
push
adc
jg
sbb
cmps
(bad)
sub
test
fwait
xchg
adc
inc
jl
xchg
mov
and
mov
push
push
sbb
retf
imul
lods
out
push
add
jg
sbb
xchg
scas
in
je
out
ja
inc
add
test
push
cld
(bad)
sub
xlat
push
scas
das
xchg
push
inc
sahf
mov
jae
sar
jg
cld
jnp
cmp
sbb
sub
shl
hlt
xchg
xor
jmp
xchg
je
add
mov
mov
mov
push
fst
push
aad
pop
cmp
xchg
cmpxchg
into
imul
cs
xor
mov
inc
pop
test
int3
popf
or
inc
mov
inc
adc
jg
mov
cmc
jno
adc
leave
std
arpl
mov
or
out
scas
xchg
inc
inc
sub
popf
pop
adc
ficom
call
pop
cmp
xor
mov
add
push
sbb
push
pop
sbb
fistp
cmp
fnstenv
push
mov
fiadd
fdivp
xchg
or
cmp
icebp
sub
int
xchg
push
adc
pop
jne
rcr
push
dec
mov
or
cwde
das
fsubp
ret
cmp
inc
popa
or
fs
sub
mov
inc
mov
sub
and
cld
retf
leave
lds
pop
cli
sbb
test
add
jecxz
mov
std
popf
dec
stc
and
sub
(bad)
mov
fsubr
sti
push
mov
fcom
enter
dec
inc
aam
int
dec
sahf
jb
inc
sbb
jae
out
popf
dec
call
mov
dec
push
or
mov
xor
pushf
movs
ins
(bad)
jo
in
mov
mov
and
mov
repz
mov
mov
mov
dec
adc
push
sbb
les
in
add
pop
pop
xor
pop
sub
add
lock
cmp
aad
pushf
leave
xchg
xchg
cli
xchg
(bad)
dec
add
fwait
stc
push
rcr
ins
cmps
outs
xchg
retf
sbb
(bad)
adc
pop
xchg
arpl
(bad)
fnstcw
pop
mov
inc
add
rcr
lahf
pop
mov
retf
inc
mov
and
jl
pop
daa
pop
ja
arpl
call
adc
push
gs
in
or
mov
push
push
jne
gs
ins
or
in
and
add
ror
and
mov
call
cdq
fcomp
test
outs
sub
sbb
dec
pushf
cwde
sbb
dec
push
or
jo
not
dec
outs
pop
push
fstp
lods
scas
pop
retf
fcom
push
xchg
push
scas
lahf
push
mov
cmp
pop
inc
sub
adc
add
jg
out
mov
(bad)
mov
movs
and
aas
mov
jb
cwde
mov
and
pop
mov
sbb
mov
(bad)
pop
mov
adc
iret
retf
push
pop
or
cmps
in
xor
(bad)
cmps
out
xchg
cs
inc
out
(bad)
xor
lock
mov
pop
jl
mov
or
fld
cld
je
stos
cli
outs
and
xor
fstp
dec
movs
loope
aaa
xlat
mov
mov
jae
(bad)
add
not
lods
push
sbb
xchg
repz
fist
and
stos
cmovg
dec
dec
xchg
rcr
fisubr
jl
out
nop
inc
sbb
xchg
or
xor
imul
inc
in
das
cmp
jbe
lahf
pushf
into
bound
arpl
popf
mov
mov
xor
push
in
dec
sbb
pop
das
and
mov
int
jmp
scas
xor
in
sbb
shl
mov
(bad)
outs
inc
in
popf
arpl
push
mov
add
loop
sub
add
sti
jmp
ret
mov
jmp
xlat
fcmovbe
rcr
in
movs
dec
xor
das
aam
(bad)
out
xchg
test
and
push
aam
or
and
and
adc
sahf
sbb
or
aaa
sbb
jbe
sub
xchg
lahf
adc
or
out
pop
xlat
out
int3
sub
or
adc
mov
or
mov
jecxz
cmp
int
lock
sub
cmp
push
adc
(bad)
mul
aas
mov
push
inc
popf
enter
jmp
mov
out
lahf
fnstenv
dec
pop
rcl
xchg
mov
and
sar
jb
and
enter
xchg
add
mov
pop
dec
in
repz
(bad)
push
mov
push
outs
test
push
xchg
fidiv
dec
in
jbe
add
icebp
inc
push
pand
cs
mov
xchg
mov
mov
push
out
adc
mov
movs
mov
nop
dec
add
out
test
loop
(bad)
gs
enter
mov
loope
cmp
(bad)
and
(bad)
push
cmps
push
mov
and
pushf
push
mov
ss
rcr
fcomp
arpl
jnp
inc
loop
loop
xchg
or
xchg
pop
mov
dec
xlat
repnz
mov
sahf
adc
mov
int3
jmp
dec
mov
inc
popf
sbb
inc
shl
dec
mov
sbb
push
cmovae
jmp
call
pop
and
adc
sub
ret
imul
les
in
loop
mov
xor
outs
sub
mov
test
add
addr16
loope
pop
and
dec
xchg
loope
out
sar
add
stos
movs
cmps
mov
add
jnp
push
push
repz
ret
mov
jnp
outs
mov
inc
call
scas
sbb
fisubr
popf
ins
mov
xchg
xor
sub
push
sub
loop
movs
or
add
cmp
in
les
call
dec
xchg
cmps
sbb
shl
ret
cld
and
and
aas
sub
pop
and
ret
pushf
mov
mov
movs
xchg
or
mov
pop
sbb
retf
sub
stos
jo
xlat
mov
je
jmp
movs
ja
cmp
mov
xor
dec
pop
add
xchg
xor
stos
or
xor
xor
stos
dec
fs
mov
in
inc
loop
js
or
sub
stc
xchg
icebp
mov
aad
pushf
rol
jp
jmp
pop
pop
je
aad
cld
jle
add
cdq
or
inc
fldenv
inc
pop
push
sbb
jne
add
scas
lahf
pop
ss
into
fdivp
dec
mov
cs
jae
push
aam
ds
stc
fmul
push
test
(bad)
repnz
cmp
xchg
aad
in
pop
cmp
xlat
mov
cdq
cmc
mov
fxch
stc
out
sub
test
dec
pop
(bad)
adc
push
enter
movs
stc
js
outs
jp
pop
jae
adc
seto
rcr
js
jecxz
daa
stos
xlat
xor
in
jmp
push
xor
cmp
call
and
or
retf
iret
in
push
scas
mov
push
mov
cli
dec
aam
adc
pop
push
icebp
bound
push
inc
repz
jbe
mov
ret
push
mov
mov
fnstsw
stc
(bad)
push
xchg
in
out
sti
mov
xchg
and
mov
jecxz
movs
push
adc
xchg
inc
aas
push
pop
js
xor
xchg
dec
fdiv
push
icebp
jle
xchg
jno
fsubr
ins
jmp
pushf
std
dec
ins
daa
mov
ins
ror
pop
(bad)
outs
test
mov
fwait
in
pop
xor
adc
push
ret
adc
jmp
xlat
rcl
adc
adc
sti
scas
xchg
scas
cld
dec
mov
push
fdiv
loop
mov
jl
ficomp
push
out
sub
add
mov
jecxz
lods
bound
mov
lock
fwait
test
test
fild
jne
inc
sub
jg
pop
xchg
cli
and
sub
mov
inc
test
psubusb
or
mov
nop
sbb
js
(bad)
out
sbb
aaa
es
jecxz
ins
dec
sbb
cmp
mov
mov
in
out
mov
xchg
jmp
aam
arpl
inc
adc
xlat
add
mov
addr16
xchg
xor
jb
mul
pusha
ds
stc
mov
ja
fcmovb
addr16
movs
call
ds
loop
mov
sahf
inc
pop
cld
dec
dec
shr
add
sub
mov
jbe
gs
cmc
push
mov
pop
mov
push
jmp
sub
xchg
enter
cmp
or
jge
sub
mov
test
sahf
adc
fcmovnbe
pop
repnz
xchg
loopne
mov
xor
pop
pop
das
pusha
cmc
fadd
nop
sub
aaa
mov
push
test
je
jns
or
inc
enter
jno
shr
sub
std
lea
call
inc
mov
ret
cmp
(bad)
cmp
sbb
and
and
fcmovnbe
jge
add
mov
sti
sub
add
xchg
test
push
add
in
xchg
leave
pop
inc
xor
lahf
lock
outs
fcom
mov
in
mov
push
leave
lock
es
sbb
aam
in
popa
int
mov
cmp
and
mov
arpl
cmp
add
aad
lea
fisttp
push
out
mov
jmp
test
push
add
ins
sub
cmp
mov
xor
das
test
jecxz
push
ins
cld
cmp
mov
adc
iret
jg
es
jmp
aad
test
or
(bad)
fldl2e
dec
xchg
(bad)
clc
mov
jg
jae
add
test
cmp
loope
add
pop
cmps
and
and
out
push
ret
xchg
ins
ins
rol
mov
pop
xchg
inc
movs
pop
adc
in
daa
movs
popa
xchg
inc
push
icebp
jnp
adc
call
push
xchg
jbe
inc
mov
pop
lods
adc
lods
js
cmps
jbe
out
addr16
sahf
fcom
(bad)
pop
or
into
std
cmps
jbe
es
imul
scas
sub
inc
das
daa
pavgw
clc
dec
pop
inc
int
xor
mov
mov
rcr
int3
xchg
movs
call
dec
popf
outs
fwait
or
aas
jmp
cmps
ret
js
data16
mov
fidivr
xchg
xchg
or
in
movs
cmps
dec
pop
daa
lds
push
outs
mov
mov
dec
mov
cs
(bad)
daa
sbb
sbb
daa
push
sti
pop
cmps
(bad)
ror
or
inc
xor
dec
out
jecxz
jl
push
sub
adc
pop
loopne
or
mov
(bad)
loopne
(bad)
lods
mov
dec
ficomp
mov
add
int
push
arpl
cs
les
sub
xor
mov
xchg
stc
or
jae
push
mov
movs
rol
pop
sub
pop
jmp
bound
adc
fidiv
das
add
sub
into
retf
hlt
adc
add
jnp
xchg
iret
scas
imul
xchg
cmps
mov
div
cmc
sub
lahf
mov
hlt
repnz
jae
pop
xor
cmp
jns
or
push
fisttp
loope
xor
xchg
mov
inc
fs
add
into
rcr
or
mov
fist
sub
sar
cmp
icebp
stos
cli
cmp
daa
jmp
xchg
pop
test
scas
mov
fadd
fisubr
jmp
sub
add
add
sub
hlt
cwde
add
popa
sub
repnz
scas
mov
add
or
outs
xchg
test
outs
mov
(bad)
rol
jnp
xchg
adc
mov
inc
or
clc
rcr
sar
sbb
and
cmc
sbb
loop
pop
rdtsc
jecxz
hlt
out
mov
pop
std
imul
stc
xor
outs
rcl
scas
ror
dec
sbb
cmps
sub
xor
movs
pop
ss
add
stc
bound
pop
idiv
loop
neg
mov
ins
cmp
jno
mov
pop
dec
inc
sbb
out
jmp
mov
test
(bad)
icebp
rol
cmp
sbb
sub
mov
ss
out
popa
pop
dec
jecxz
sbb
ret
cmp
xchg
xchg
push
mov
call
rep
inc
mov
xor
xchg
pop
cmp
push
js
inc
stos
(bad)
enter
mov
fwait
xor
(bad)
retf
mov
pop
push
stc
mov
push
push
repnz
xor
and
pop
push
(bad)
cli
mov
ss
sub
ja
sbb
push
dec
int3
call
add
mov
and
dec
push
add
popa
dec
mov
ds
or
mov
leave
shl
add
(bad)
pop
adc
out
and
dec
xor
xor
gs
jmp
jmp
maxps
jnp
ret
loopne
inc
shr
loope
sub
jne
dec
and
sbb
mov
data16
xor
pushf
mov
mov
mov
out
imul
cmp
push
imul
inc
in
imul
icebp
push
xlat
stos
ficomp
in
pop
adc
mov
mov
mov
mov
sub
leave
clc
test
jge
push
cmp
push
loope
es
lods
sub
push
jge
out
sub
mov
and
mov
(bad)
jmp
mov
sbb
rcr
setg
or
add
sub
sub
mov
inc
inc
cmp
in
sbb
loop
cmps
shl
push
push
pop
addr16
call
js
sahf
rcl
or
mov
jp
fmul
not
add
push
cmps
jge
dec
adc
dec
push
inc
pop
nop
or
out
int3
jp
xchg
bound
sbb
pop
xor
push
arpl
push
nop
stos
les
xchg
fsub
retf
cmp
lods
mov
sbb
clc
daa
inc
mov
push
xchg
add
sub
xchg
pop
pop
adc
test
pop
xor
repnz
enter
jmp
(bad)
mov
sbb
jne
mov
ss
dec
sbb
leave
cli
out
popa
dec
cmps
mov
xchg
jg
xlat
in
icebp
mov
mov
cld
inc
dec
out
or
rol
mov
add
dec
dec
mov
jge
or
mov
xchg
add
fmul
rol
xor
lock
mov
imul
cmp
dec
je
xchg
shr
sbb
adc
repnz
lods
mov
mov
out
sbb
dec
jne
test
cli
jecxz
(bad)
loopne
xlat
push
loope
mov
xor
inc
scas
mov
outs
jl
ret
stos
lods
ins
icebp
inc
imul
or
aaa
shl
jmp
or
imul
scas
test
xor
push
mov
mov
and
es
outs
jle
add
adc
xchg
xor
cmp
xor
sub
mov
jmp
xchg
movs
xor
outs
retf
mov
mov
or
and
sbb
fistp
mov
arpl
neg
mov
jmp
in
retf
(bad)
fsubr
mov
add
or
call
inc
ja
gs
push
in
jne
add
cdq
mov
dec
in
vxorps
xchg
sub
or
xor
and
je
sub
mov
loope
mov
jns
mov
fisttp
push
jae
and
js
ret
fdivp
mov
push
les
sbb
fdivr
and
aad
fstp
sbb
sub
jmp
mov
jae
sub
push
jb
xor
jmp
ja
out
icebp
add
out
sbb
cwde
stos
or
out
or
or
xchg
adc
push
out
movs
das
sub
mov
scas
repz
test
test
pop
xor
jecxz
pop
pop
dec
in
(bad)
jmp
icebp
push
jb
repz
and
or
(bad)
in
ins
fsub
in
and
(bad)
sbb
sub
jmp
mov
adc
or
pop
fld
and
pop
jecxz
retf
pop
add
aam
cmp
aaa
cmc
push
sub
push
xchg
pop
pop
lds
lea
push
jb
clc
cwde
jecxz
inc
inc
push
mov
fnstcw
cld
sbb
retf
adc
cmp
out
adc
mov
aas
scas
mov
mov
push
out
hlt
cmc
fsub
fadd
lahf
(bad)
sti
fmul
push
fcmove
fcomp
add
fisttp
or
or
dec
xchg
leave
pop
dec
fwait
stos
adc
data16
stos
cmc
adc
fs
es
popa
mov
shl
adc
call
js
cdq
imul
inc
jmp
jno
cwde
adc
das
and
jae
sbb
or
clc
adc
out
stos
dec
sbb
(bad)
fimul
out
xor
or
sbb
or
nop
add
mov
popa
mov
push
jecxz
cmps
icebp
in
mov
or
jae
fisub
cmp
sbb
sub
xor
add
adc
cdq
sub
cdq
lds
ret
inc
xor
pushf
push
js
fidivr
in
cmp
scas
(bad)
jmp
mov
dec
push
shr
mov
fwait
lods
jne
pushf
and
mov
test
push
mov
enter
push
mov
push
retf
psubusw
cmc
push
ss
rcr
pop
or
nop
out
into
out
mov
cmps
push
push
or
and
and
sahf
jb
xchg
mov
xor
ins
cmps
fsub
js
jmp
add
and
inc
adc
das
cmps
out
mov
xor
mov
cmp
fwait
out
cmp
adc
jmp
mov
sbb
add
pushf
push
sbb
ret
jmp
fsub
std
push
stc
push
xchg
stos
int3
mov
in
cmp
jmp
cmp
xchg
adc
xchg
jmp
aas
cmp
loope
int3
sahf
lods
das
ins
dec
xchg
fidivr
arpl
ja
movs
rcl
adc
pop
pop
fwait
dec
sub
jge
repz
outs
push
shr
aas
popf
push
clc
test
mov
sbb
jo
mov
gs
scas
jae
inc
lods
mov
mov
sbb
outs
(bad)
xor
icebp
mov
imul
fsub
pop
(bad)
not
(bad)
outs
pop
loopne
adc
outs
lea
or
sbb
sbb
dec
inc
test
pusha
cdq
sub
jp
add
jo
pushf
or
fld
in
mov
fisub
sub
xchg
dec
shl
or
out
pop
mov
cmp
jmp
lock
inc
ret
fistp
mov
jg
movs
jge
adc
mov
push
jmp
push
loopne
xchg
fchs
enter
dec
xchg
pop
shr
ins
jecxz
ins
or
push
lds
push
or
jns
dec
push
mov
in
jp
shl
jmp
inc
scas
pop
rcl
jno
out
scas
dec
jge
xor
dec
ror
fs
push
xor
or
cmps
sub
jmp
xlat
pop
cs
std
cmp
aam
hlt
gs
adc
sbb
mov
adc
xchg
push
outs
les
mov
jnp
(bad)
dec
nop
scas
leave
jmp
test
push
add
xor
loopne
call
sbb
mov
jle
mov
or
sti
js
add
inc
das
int
fsubr
and
adc
gs
pop
xchg
cmp
push
sub
pop
ja
xchg
dec
in
icebp
in
mov
jo
(bad)
or
ror
xchg
dec
adc
ins
daa
xor
call
xor
outs
mov
jp
adc
cmovle
imul
pop
loop
jp
sub
mov
mov
cmp
stos
push
mov
pop
sbb
lock
mov
repz
dec
xor
test
fs
es
sub
outs
pop
cmp
jnp
out
mov
sub
inc
add
mov
fsubr
dec
ja
lods
xchg
xchg
clc
fs
movs
adc
add
and
loopne
mov
ror
cwde
dec
lahf
xor
mov
mov
stos
push
gs
das
jle
dec
cvtps2pi
push
fsubr
xchg
mov
nop
dec
pop
inc
mov
cs
dec
xlat
mov
mov
xchg
into
sbb
into
in
rcr
or
mov
adc
dec
cmp
xor
push
dec
jl
mov
stc
dec
icebp
xor
call
rol
jge
pop
dec
iret
pushaw
popa
and
xchg
inc
retf
aam
add
stos
mov
jnp
clc
jp
mov
cmp
xlat
pop
inc
mov
fcomp
xor
sbb
cmp
push
pop
mov
fiadd
inc
loopne
xchg
repnz
sub
fld
loop
or
mov
pop
cmps
es
(bad)
jmp
retf
pusha
add
or
aaa
push
in
popf
mov
pop
outs
add
int3
adc
jp
adc
retf
(bad)
retf
jae
int3
jg
sub
int3
xchg
pop
cs
mul
(bad)
out
in
cmps
sti
popa
sar
sbb
fs
bsr
icebp
cmc
jb
mov
inc
lods
repnz
cmp
retf
sbb
jmp
(bad)
jno
shl
mov
stc
mov
dec
sbb
sbb
xor
dec
xchg
sub
mov
loope
icebp
js
mov
xchg
sar
in
fistp
into
pop
in
leave
je
pop
out
jmp
(bad)
jnp
cmp
test
sbb
outs
call
test
mov
shl
mov
mov
gs
xchg
jne
lds
rol
call
inc
fstp
repz
cmp
add
les
and
mov
xor
shl
dec
or
aam
jmp
pop
outs
push
mov
sub
repz
inc
mul
add
mov
and
jne
push
out
icebp
dec
or
les
inc
int3
push
stos
ins
mov
ror
(bad)
cmc
int3
loop
inc
mul
xchg
or
cld
sar
jnp
adc
pop
loopne
fild
xor
inc
pop
mov
dec
push
mov
(bad)
outs
xor
cmp
sti
jmp
sbb
fistp
mov
ret
(bad)
mov
cmp
jg
aas
enter
es
bound
and
adc
and
lods
mov
(bad)
data16
cmps
nop
pop
xlat
lock
cmps
mov
sbb
mov
mov
sbb
movs
fisttp
popa
jnp
iret
xchg
xchg
out
aas
dec
movs
sub
arpl
(bad)
and
fs
lea
xchg
out
dec
les
mov
ds
(bad)
push
cmp
ret
test
inc
xchg
or
ror
popf
pop
je
mov
int3
inc
push
mov
inc
sub
mov
fisubr
pop
push
jmp
aas
inc
or
push
cli
(bad)
cmp
jns
mov
shl
or
mov
and
add
sbb
aaa
clc
loope
pop
ins
and
mov
sub
pop
in
xor
sbb
push
sahf
popa
push
jbe
int3
push
jmp
and
cli
(bad)
mov
test
into
clc
cmp
dec
push
push
repnz
loopne
pop
inc
or
dec
jae
sub
xor
push
cmp
call
xchg
mov
arpl
cs
je
xor
add
rol
test
cwde
fild
pop
mov
dec
jo
dec
pop
jg
cmp
in
mov
dec
xchg
cld
leave
sub
mov
dec
(bad)
popa
cmp
xlat
nop
jno
sub
cs
xor
mov
stos
or
or
xchg
fwait
call
cmps
and
mov
loop
inc
outs
idiv
adc
outs
mov
push
mov
cmp
xchg
loopne
inc
repz
inc
mov
pop
aam
add
mov
dec
cdq
push
movs
imul
sbb
pop
mov
xor
push
dec
jp
mov
push
stos
(bad)
jmp
add
in
push
cli
cmps
adc
hlt
push
ins
sbb
in
scas
sbb
dec
inc
cmp
jge
xor
out
fld
fdiv
mov
outs
mov
xor
xchg
pop
cmps
pop
gs
cli
stc
pop
sti
adc
mov
cld
adc
jns
repz
fisttp
iret
fchs
jae
xchg
sbb
adc
jns
inc
inc
imul
sub
test
cli
pop
outs
xchg
std
arpl
call
mov
xor
and
cmps
mov
xor
ret
leave
push
lock
leave
push
cmp
cmps
and
jle
cmp
sahf
and
add
fdivr
bound
daa
inc
fadd
mov
pop
loopne
out
call
push
mov
jmp
add
mov
not
fidivr
out
xchg
sub
xchg
xchg
sbb
mov
je
inc
mov
dec
mov
mov
inc
aas
fdiv
jp
and
aaa
out
jbe
jo
imul
inc
mov
xchg
inc
mov
sbb
les
xchg
push
rcl
lock
jp
push
inc
ret
cli
inc
inc
and
or
sbb
std
fcomip
push
jmp
repz
mov
add
out
js
ds
cwde
movs
cdq
xchg
jg
cs
cmp
enter
lahf
fmul
shl
mov
pop
(bad)
and
movs
test
xor
call
sbb
jl
xchg
(bad)
cld
(bad)
out
sahf
cdq
fs
cdq
xchg
inc
dec
retf
jge
xor
test
mov
mov
mov
mov
cmp
mov
cmp
aaa
pop
jmp
jecxz
fst
add
xchg
cmp
and
jmp
mov
in
push
(bad)
pop
arpl
mov
push
nop
add
lea
and
mov
fmul
jne
xchg
hlt
add
sbb
(bad)
(bad)
xor
int
retf
and
dec
cld
data16
pop
mov
ds
imul
mov
outs
jl
out
add
imul
gs
and
cwde
arpl
xchg
xor
and
sub
ins
add
mov
outs
jae
mov
xchg
mov
xor
call
sar
cmps
jg
fwait
daa
mov
add
sbb
aaa
fcmove
fistp
(bad)
dec
pop
jmp
fstp
cmp
add
pop
in
inc
out
inc
hlt
xor
mov
int
scas
add
pusha
sbb
ret
test
and
scas
pop
mov
(bad)
out
add
fst
jb
jmp
enter
or
in
popf
cld
inc
rcl
mov
lods
pop
test
jmp
xchg
xchg
jmp
lock
je
aad
inc
dec
test
or
adc
inc
xchg
mov
cwde
lahf
int3
cmp
inc
cmp
cld
sbb
or
xor
sbb
rcr
mov
add
pmaddwd
aaa
int
cmps
mov
cmc
dec
bts
ins
popf
dec
neg
sub
hlt
push
sub
aad
pop
(bad)
sbb
into
(bad)
mov
xchg
(bad)
adc
push
push
(bad)
xor
xor
push
in
adc
cmp
jg
push
or
ss
in
(bad)
mov
aas
mov
or
cmc
arpl
je
jns
and
jecxz
sbb
bt
inc
(bad)
movs
xchg
lahf
lds
aas
pop
jmp
aaa
mov
inc
xchg
sbb
enter
push
sbb
fsub
push
mov
cmp
(bad)
jle
(bad)
xor
out
jbe
cmp
loope
(bad)
mov
sub
or
xchg
mov
push
in
or
pop
aas
and
inc
mov
sbb
aaa
ret
dec
mov
xchg
hlt
mov
jnp
jae
enter
fisub
mov
daa
xor
fstp
xchg
mov
aad
lods
cmps
fwait
add
xor
imul
dec
jmp
fadd
sahf
add
mov
mov
xor
push
mov
jecxz
pop
add
pop
pop
add
cmp
inc
jge
(bad)
fdiv
jo
jae
pushf
dec
xor
adc
push
sbb
sbb
cmp
shl
fmul
inc
cdq
xchg
xchg
mov
sbb
ss
pmaxub
or
test
loopne
shl
push
xchg
add
dec
ret
repnz
rcr
dec
(bad)
shr
mov
mov
(bad)
mov
fwait
dec
xor
inc
push
inc
and
push
fldcw
ret
out
ins
outs
adc
cmp
repz
ins
retf
sbb
jmp
adc
xor
mov
cmp
sbb
mov
scas
retf
or
cmp
movs
leave
ins
lds
sub
outs
mov
in
std
test
int
aas
mov
sub
test
jmp
cmps
xor
pop
xor
dec
inc
jle
sub
jno
fwait
jmp
out
test
ss
(bad)
cmps
mov
xor
sbb
jo
(bad)
mov
xchg
loopne
xchg
inc
and
and
arpl
movs
ds
fidivr
mov
mov
lds
xor
mov
push
pop
or
dec
fpatan
pop
or
repz
xchg
inc
pop
jg
push
or
xchg
pslld
mov
rol
mov
inc
jae
or
sub
aas
inc
cmp
dec
pop
imul
xchg
and
mov
sbb
pushf
cmps
pop
push
dec
popf
fst
jbe
inc
adc
sub
out
call
outs
cmp
cli
sub
in
hlt
push
aaa
pushf
out
cmp
xchg
fs
add
popa
ins
fwait
jne
mov
aad
mov
xor
ret
cmp
mov
mov
push
sub
imul
jnp
fmul
fstp
dec
imul
mov
pop
sbb
stos
mov
ins
shr
sti
pop
int
mov
add
gs
mov
push
call
inc
xor
fild
dec
adc
adc
arpl
inc
scas
push
rol
data16
fsubr
jnp
into
fcom
pop
sub
hlt
add
inc
mov
addr16
das
imul
cmp
jp
adc
sub
mov
ret
loope
push
mov
ret
pop
loope
out
loop
imul
xchg
pop
cmp
mov
xchg
(bad)
mov
push
jae
sub
cli
clc
cmp
pop
and
and
adc
inc
and
repnz
sub
je
xor
lock
daa
mov
mov
cmp
mov
fs
fst
push
ret
scas
rcl
add
pop
xor
mov
stos
jno
movs
cdq
pop
dec
pop
mov
shr
mov
jo
popa
pop
sub
mov
add
call
pop
leave
dec
jns
fdivr
je
and
int3
out
jl
test
ficom
fild
jle
mov
dec
jbe
lods
cmps
inc
mov
mov
fadd
xchg
pop
test
sbb
pop
fcom
adc
sub
or
sbb
xchg
rcr
div
ror
bound
ret
cmp
das
test
mov
ret
movs
jmp
dec
or
enter
mov
or
pusha
add
sub
mov
call
inc
sub
cmp
xchg
mov
das
add
enter
lods
cmp
in
or
and
(bad)
or
stos
pop
adc
ds
sbb
inc
xchg
loope
(bad)
lea
stos
in
out
bound
xor
fadd
ret
(bad)
push
inc
mov
pop
outs
aad
sar
or
retf
retf
pop
or
adc
daa
cmps
mov
cmp
fmul
mov
xor
fild
jo
dec
xchg
rcr
dec
push
call
scas
aaa
pop
pop
xor
stos
xor
pop
dec
fiadd
adc
pop
push
ins
test
in
mov
loope
push
cmc
xlat
push
in
and
adc
arpl
jae
loopne
scas
cmc
(bad)
and
dec
inc
stos
and
and
lods
mov
mov
pop
push
fcom
into
js
mov
adc
test
hlt
mov
adc
sub
je
call
jb
scas
dec
and
pop
sbb
jg
push
adc
loopne
cmp
int3
push
(bad)
sar
or
adc
jge
(bad)
mov
movs
push
pop
cmps
retf
sbb
mov
xchg
ins
pop
jbe
sbb
pop
xlat
xchg
fdivr
mov
out
push
lahf
lahf
lods
xor
cwde
dec
and
les
mov
mov
sbb
jle
(bad)
inc
mov
pushf
stos
rcr
loop
mov
ret
lds
js
jns
add
and
add
(bad)
jb
pop
or
sti
ja
je
and
push
xor
popa
movs
(bad)
jmp
mov
jmp
cmp
imul
sbb
fcomip
mov
clc
cmp
data16
(bad)
push
repnz
out
arpl
cwde
(bad)
jmp
retf
mov
fdiv
mov
push
sbb
pop
inc
jo
int
idiv
jge
sbb
jbe
mov
jbe
adc
int
sbb
fst
lock
add
mov
xor
inc
jb
jne
test
test
neg
cwde
mov
xchg
push
popa
mov
push
hlt
gs
add
stos
pop
cmp
jg
sbb
out
test
pop
stos
dec
xchg
push
sub
std
fisttp
fs
xchg
and
out
jmp
std
(bad)
int
scas
dec
lods
xor
xor
mov
inc
lods
jne
loop
push
cmp
xchg
push
and
xor
mov
ds
or
sahf
cmps
lods
bound
xchg
in
sbb
xchg
jns
bnd
inc
dec
cmp
cmc
aad
pop
(bad)
sub
imul
imul
mov
ficomp
mov
inc
icebp
rcl
outs
xchg
sar
movs
mov
mov
push
and
mov
mov
push
ret
mov
fisubr
out
(bad)
hlt
rcl
aaa
jne
or
sar
cmp
cld
and
arpl
xchg
dec
cmp
xchg
sbb
loop
sub
add
ret
dec
push
xchg
push
pop
pop
sti
out
xor
hlt
adc
xchg
or
and
mul
push
rcr
dec
mov
fsubrp
dec
int3
dec
gs
lahf
int
or
sti
inc
ins
mov
aam
ret
in
clc
shl
loope
scas
ret
shrd
test
adc
add
scas
into
jp
lods
fdiv
or
repz
pushf
cmp
pop
mov
jp
push
cmp
cmps
sub
push
stc
fwait
xlat
cs
xchg
jle
mov
lds
pop
sub
inc
or
xor
rol
pusha
aad
sbb
jle
mov
and
stos
(bad)
jl
int3
mov
mov
mov
in
daa
mov
fwait
push
daa
add
mov
jle
pop
popa
mov
jb
jno
lods
inc
arpl
inc
(bad)
cmp
arpl
rol
ins
cdq
xchg
aaa
push
xor
adc
pop
cdq
es
jnp
xor
mov
mov
or
push
leave
mov
mov
cwde
(bad)
retf
iret
sahf
js
sbb
sub
push
cmp
and
fcmovb
push
or
ds
je
mov
pop
int
adc
ss
lock
mov
mov
sbb
fwait
xchg
fist
enter
leave
adc
fmul
dec
imul
aad
ss
idiv
ss
clc
and
int
cli
ret
push
or
daa
xor
lods
and
std
or
inc
mov
xor
mov
pusha
add
das
cmp
test
push
pmulhw
mul
hlt
call
int
and
mov
mov
fist
into
enter
pop
fcmovnbe
inc
and
out
add
cld
xchg
and
jbe
or
(bad)
mov
jno
into
sub
push
outs
cld
ss
and
mov
sub
xor
mov
dec
inc
cdq
pusha
call
pop
(bad)
mov
push
jmp
pop
add
ret
jge
sbb
js
push
stos
push
fiadd
adc
loop
into
in
dec
and
cmp
cmp
xor
lds
ds
into
mov
cld
xchg
mov
mov
xchg
lea
jge
push
out
call
add
cs
cmp
cli
pcmpgtd
retf
mov
pop
pop
sbb
cmp
push
test
or
push
and
push
into
cmp
jge
mov
and
inc
inc
push
sbb
xor
dec
call
stos
outs
pop
(bad)
ins
jns
push
xchg
sahf
xor
stos
cmp
xor
xchg
cli
inc
adc
inc
push
xchg
pop
shl
rol
iret
(bad)
xor
cmp
mov
(bad)
push
imul
ds
pop
push
repz
push
retf
jl
mov
inc
push
daa
cmps
jo
xor
inc
test
push
jecxz
push
(bad)
sbb
jmp
xor
rol
into
sub
iret
jmp
inc
dec
push
jb
mov
lods
fisttp
add
mov
test
call
dec
das
mov
pop
push
icebp
fadd
sbb
inc
in
fistp
and
cmp
push
movs
xchg
pop
cmc
rcr
pusha
fstp
mov
stc
hlt
cmp
xchg
cmp
mov
mov
nop
mov
into
lea
mov
cdq
and
pop
jne
jbe
xchg
mov
and
fwait
jg
adc
lds
pop
jmp
fsubr
jno
push
into
inc
fsub
stos
int3
cli
cmp
gs
fdiv
pop
rcr
jns
shl
movs
dec
lock
xchg
call
mov
in
fwait
pop
xchg
jnp
cmc
jne
fld
fwait
clc
push
(bad)
cmovo
dec
xor
and
cs
add
adc
imul
loopne
mov
jmp
daa
aam
jecxz
(bad)
loopne
lahf
jne
scas
adc
cmp
cmps
xor
fisubr
retf
out
push
scas
ds
xor
mov
adc
movs
shl
or
ins
mov
popf
jmp
inc
mov
loop
add
xor
mov
(bad)
cmp
lahf
xchg
imul
test
inc
jle
lods
lahf
push
ja
mov
sub
push
jbe
sub
cmc
lock
mov
jl
fld
inc
std
out
push
shl
jmp
or
push
cli
pop
out
cli
and
xlat
fwait
inc
mov
add
dec
sbb
es
pop
mov
aas
add
sti
ret
nop
icebp
inc
call
dec
ja
sbb
arpl
imul
out
xor
test
mov
mov
mov
jmp
lds
push
movs
sub
sbb
outs
xor
xchg
aaa
xor
int3
jne
enter
test
inc
loop
enter
pop
xchg
adc
popa
test
and
sbb
jge
dec
xor
dec
adc
stc
call
add
enter
mov
mov
add
lods
cmp
push
shl
add
mov
xchg
retf
adc
js
cmp
mov
movs
ins
push
repz
xchg
pop
xchg
inc
ds
push
retf
setbe
ss
xchg
add
aaa
jae
pop
dec
and
push
ins
sub
out
jle
pop
and
mov
je
out
ror
(bad)
fstp
mov
iret
retf
pop
popf
sbb
jl
mov
sets
inc
loop
push
push
and
dec
mov
sub
sub
out
aam
or
shl
lods
scas
jae
jg
and
jg
ret
jo
(bad)
mov
push
ror
lods
in
cs
cmovl
in
pop
nop
dec
dec
or
ds
mov
adc
push
loopne
loop
imul
lods
push
dec
outs
fmulp
ins
ror
lds
movs
aaa
and
pop
pop
dec
mov
cmc
adc
jns
aad
and
lods
sbb
mov
stos
clc
dec
leave
fwait
mov
push
mov
ins
int
mov
ds
cmps
dec
out
sub
mov
push
jno
into
dec
cmp
lods
je
(bad)
das
mov
ins
pushf
dec
jae
or
jmp
xlat
loop
mov
mov
lds
inc
out
mov
fwait
pop
jl
dec
ror
dec
pop
or
mov
mov
ret
in
push
mov
push
popf
pop
stc
push
scas
jnp
into
cmp
sahf
repz
jb
ret
icebp
sbb
mov
inc
cld
ins
push
gs
and
idiv
inc
xchg
mov
call
jbe
inc
jl
test
mov
in
stos
imul
fs
ja
and
pop
int3
xchg
dec
test
xor
push
jns
out
jg
add
inc
lods
es
ret
mov
adc
add
xchg
fcmovb
pop
out
in
stos
add
loopne
mov
sahf
adc
push
lods
xchg
xchg
out
pop
pop
mov
cwde
push
sub
xchg
sub
sbb
fcmovnbe
scas
in
jo
fdiv
add
add
sbb
aad
(bad)
sbb
shl
in
cld
packsswb
stos
cmps
inc
mov
push
pop
xchg
and
jl
cmps
out
aas
xor
out
xor
xor
(bad)
int
and
adc
jnp
inc
popf
icebp
jae
bound
out
fdivr
pop
lea
movs
out
hlt
xchg
int
nop
fnclex
neg
push
mov
inc
aaa
ret
jmp
aaa
cmp
std
(bad)
lods
jmp
adc
sbb
ss
scas
or
cli
jg
push
stc
xchg
popa
in
ja
cmp
xchg
xlat
hlt
cli
shl
inc
in
cmp
into
push
and
xchg
mov
dec
sub
or
sub
lods
stos
fwait
push
dec
sbb
repz
mov
adc
test
or
test
adc
xor
xor
inc
mov
lods
stc
cmp
div
imul
shl
iret
add
jmp
rol
xchg
jle
lods
xlat
adc
or
fnstsw
test
fcomp
cmp
dec
bound
cmc
fnstcw
adc
pop
cld
push
push
jb
cmp
sub
xchg
and
ror
jne
mov
out
(bad)
cld
jmp
ja
rep
add
or
mov
sub
ret
sub
dec
fidiv
xchg
add
daa
cwde
push
cdq
shl
out
ds
sahf
lods
xchg
daa
dec
lahf
push
pop
xchg
xlat
gs
cdq
lods
dec
jmp
push
(bad)
mov
je
sub
inc
syscall
dec
push
cmps
and
mov
xor
pusha
cmp
das
(bad)
movs
retf
cmps
sbb
add
outs
dec
pop
clc
test
mov
pop
sti
push
cmc
or
test
mov
adc
clc
and
jecxz
retf
push
push
loope
test
xchg
adc
adc
lds
stos
pmulhw
adc
push
int3
jecxz
push
jne
xor
or
adc
jmp
pop
cmps
pop
sbb
mov
mov
mov
dec
sti
test
mov
ins
arpl
les
pop
add
mov
xchg
push
mov
and
jp
inc
aam
lods
iret
stos
push
and
and
inc
add
outs
outs
xor
push
clc
add
mov
ja
jmp
popf
cmp
and
mov
(bad)
pop
inc
sar
inc
aad
ss
mov
mov
jne
popa
fdivr
xor
dec
movs
adc
cmps
fmulp
loopne
xchg
mov
call
mov
sub
dec
jns
test
(bad)
cld
out
xchg
cmp
jle
push
mov
aad
jne
test
stc
aaa
scas
cmps
xchg
xor
sahf
pop
xor
pop
loopne
movs
pop
in
sub
(bad)
sbb
mov
jmp
and
cmp
test
mov
ficomp
add
into
push
cmp
or
addr16
or
inc
xchg
xchg
push
popf
add
push
mov
mov
(bad)
imul
repnz
leave
addr16
xchg
lahf
push
xchg
and
aaa
xor
mov
sbb
inc
inc
movs
xchg
cmp
push
mov
pop
jo
lods
cmp
pushf
cmps
aad
sbb
dec
out
outs
or
js
mov
outs
fbld
imul
dec
sbb
mov
lods
ss
movs
sbb
inc
sub
clc
push
sbb
push
or
fidivr
mov
stc
inc
mov
movs
mov
dec
xchg
lods
sub
add
clc
imul
adc
rcr
xchg
icebp
test
test
popa
repnz
xchg
sbb
lahf
gs
xor
add
cmp
movs
cld
fucom
je
and
inc
cmp
mov
push
(bad)
mov
ins
pop
std
dec
ss
sti
mov
sbb
test
dec
icebp
inc
(bad)
inc
(bad)
repnz
dec
inc
rcr
retf
ja
adc
xchg
pop
pop
jne
sar
push
int3
cmp
mov
pop
jne
das
lods
test
into
pop
cmc
mov
xchg
lds
xor
pop
aas
enter
adc
movs
repnz
in
mov
arpl
andnps
lds
(bad)
ss
ss
cmp
xchg
mov
xor
lea
cs
retf
fisttp
sahf
mov
stc
xor
sub
push
iret
sub
pusha
sar
pop
mov
lds
adc
inc
psrlq
call
and
xchg
hlt
sub
sub
pop
adc
add
mov
mov
sahf
jns
cmp
pop
int3
fistp
(bad)
test
jle
mov
adc
pop
xor
call
(bad)
out
cs
cmp
sub
imul
test
inc
xor
pop
ja
dec
inc
and
sbb
sbb
and
pop
loopne
stos
cli
js
adc
push
mov
and
pop
pop
jp
call
aam
sbb
lods
push
leave
push
ds
add
push
cwde
call
mov
and
cmp
sub
pushf
push
adc
cmp
pop
sbb
addr16
or
adc
inc
mov
imul
fstp
mov
pop
add
ret
stc
push
mov
gs
inc
cwde
jg
or
dec
xchg
out
sbb
mov
aaa
jns
aaa
pop
push
lods
add
xlat
xchg
xchg
pop
add
imul
mov
push
xchg
pop
sahf
imul
or
lock
and
cdq
adc
cmp
out
add
mov
test
jmp
test
jge
cmp
xor
xlat
and
int
aam
jmp
xchg
and
xor
jg
xlat
sbb
shr
add
fsubr
leave
adc
imul
jns
imul
mov
mov
add
imul
mov
dec
mov
sub
cmp
push
mov
aam
nop
stc
push
jo
mov
and
popf
lock
fdiv
rcl
dec
mov
inc
aaa
mov
lahf
push
add
test
jmp
out
or
jmp
in
sbb
inc
mov
int3
cmc
xor
sub
shl
pop
std
mov
mov
pop
rcl
(bad)
lock
rol
and
aaa
xchg
xchg
nop
inc
jp
stc
lods
mov
jb
push
stc
xchg
cmp
fsub
jb
inc
xchg
jmp
xchg
inc
adc
mov
rcl
jns
adc
jg
pop
adc
test
inc
in
jne
into
aad
cdq
jp
mov
imul
sub
imul
cwde
mov
hlt
sub
adc
jno
jbe
push
or
out
jae
fisttp
ret
cld
sbb
mov
sub
aaa
sti
adc
bound
mov
sbb
mov
mov
mov
xor
hlt
lods
jl
test
out
fs
aas
mov
pop
xchg
scas
jg
lea
test
shl
aaa
mov
(bad)
mov
loop
das
test
sbb
xor
or
int3
leave
ficomp
neg
xchg
mov
fs
test
dec
std
cwde
lods
jp
std
popa
fwait
pop
imul
out
ror
test
mov
jl
add
xchg
xchg
(bad)
lods
iret
leave
pop
lds
into
dec
jne
inc
ins
push
add
mov
call
ins
jmp
ret
bound
mov
mov
sub
hlt
mov
outs
cwde
mov
and
and
mov
int3
pop
mov
enter
fwait
sbb
retf
loope
les
jmp
jmp
int
stos
pop
jne
or
add
leave
repnz
lods
stos
mov
(bad)
cmps
mov
pop
fnstsw
imul
cdq
stc
mov
aas
data16
in
mov
inc
xchg
dec
sbb
jle
mov
fimul
sub
cli
shl
or
pushf
jnp
scas
pop
rcl
xchg
xlat
adc
hlt
retf
dec
leave
popa
ret
mov
ins
ja
(bad)
jne
xchg
js
cmp
pop
shl
and
sub
popf
sbb
xlat
(bad)
int
pop
loope
outs
aad
std
loope
test
push
mov
xchg
test
fwait
mov
mov
je
loope
fs
inc
mov
andnps
mov
jo
jnp
and
inc
ins
xchg
xchg
test
lds
or
sub
sbb
and
rol
push
sbb
aaa
call
jno
hlt
inc
cmc
cmp
mov
(bad)
(bad)
add
mov
loope
ja
push
cmp
icebp
jo
sbb
sub
fist
enter
inc
scas
lock
adc
int
ffree
fild
jno
xor
in
cmp
das
shl
dec
shl
xchg
sub
cmp
pusha
jle
cs
pushf
stc
fstp
mov
sub
push
mov
xchg
inc
rcl
sub
xor
pop
mov
(bad)
adc
mov
hlt
dec
mov
mov
pop
jno
sub
dec
(bad)
out
push
cmp
mov
cld
pop
add
cmp
adc
cmp
mov
pop
shl
es
xchg
sub
mov
mov
loop
cli
or
pop
xchg
out
cmp
call
sbb
cmp
xchg
mov
add
retf
mov
adc
loopne
xor
mov
mov
jle
ds
repz
lods
adc
adc
lahf
imul
jecxz
push
rcr
movs
fld
cmps
arpl
xor
outs
sar
cmp
jl
(bad)
ficom
sbb
js
aad
nop
outs
push
inc
cwde
lock
cmc
pop
js
xor
cld
pop
or
inc
sbb
dec
mov
cmp
test
jmp
loopne
mov
cmp
pop
retf
(bad)
in
mov
fs
mov
in
inc
std
jno
and
fnsave
shr
mov
dec
scas
rcr
or
mov
sbb
mov
int3
dec
and
cmps
sbb
cmp
sbb
fwait
sub
jb
call
pop
xor
xor
pop
mov
repnz
cmps
popf
adc
daa
rcl
adc
sub
xchg
test
push
add
jl
or
in
mov
sub
call
mov
jnp
mov
aas
add
jo
int3
(bad)
adc
inc
push
(bad)
xor
fild
je
popa
xchg
jle
pop
unpckhps
dec
jecxz
inc
or
ret
mov
repz
xor
cmc
clc
mov
cdq
xchg
mov
adc
xchg
add
aas
sub
test
or
mov
(bad)
pop
cmp
ss
sub
and
popa
xor
iret
mov
add
mov
lock
sbb
test
ficomp
pushf
int3
cli
xchg
into
scas
push
into
xor
cwde
pop
sti
cmp
repnz
mov
(bad)
aas
adc
mov
adc
or
scas
xor
or
fsubr
out
int3
cmp
aas
cs
cs
or
je
fwait
loop
fs
retf
in
dec
stos
shl
push
shr
lahf
mov
xchg
mov
frstor
repz
nop
mov
loop
pop
cmp
push
imul
jge
rcr
retf
in
xor
jp
pop
fdecstp
shr
pop
rcl
cwde
dec
mov
and
movs
jg
xor
scas
push
lds
jns
leave
inc
iret
(bad)
or
movs
ss
rol
dec
and
pshufw
push
in
shl
jmp
push
das
inc
ja
fucomi
jmp
xchg
mov
outs
mov
dec
dec
mov
fcomp
mov
imul
sub
ds
jns
arpl
inc
xchg
dec
push
jae
jae
sti
or
(bad)
in
mov
or
xchg
xor
dec
sub
jle
cmp
test
and
push
loop
ja
xchg
xchg
sub
ret
push
stos
aad
add
xlat
mov
popa
in
(bad)
aam
sbb
ret
ins
popf
fs
xchg
movs
jle
adc
and
or
cmps
inc
test
sbb
push
mov
lea
shr
and
cdq
lahf
pop
in
sahf
dec
cmc
mov
shl
bswap
pushw
pop
repnz
lahf
imul
es
and
imul
adc
mov
out
pusha
hlt
shl
adc
dec
stos
imul
outs
shr
jnp
sub
(bad)
call
pop
ins
jo
xchg
or
out
fldcw
test
imul
xor
jbe
test
xor
jb
ficom
pop
cli
loopne
inc
ret
dec
cmp
lea
call
mov
add
js
xchg
pop
shl
adc
das
hlt
jno
out
lea
clc
push
in
inc
and
fiadd
xchg
aad
bound
pop
in
clc
mov
push
jmp
push
pop
cmp
push
inc
aaa
scas
adc
mov
jp
sub
dec
pop
dec
enter
ret
add
cmp
xor
mov
fst
jg
mov
scas
pop
and
test
add
fdivr
aaa
inc
push
xchg
enter
and
call
sbb
cmps
dec
aaa
cmp
cmp
mov
xchg
jns
sub
mov
jmp
jmp
scas
xchg
popf
les
xchg
add
adc
in
hlt
push
rcl
mov
xor
ja
inc
xlat
sub
imul
xlat
jne
mov
mov
das
cmp
cmp
sub
mov
ja
(bad)
mov
xchg
cmc
imul
xchg
push
gs
fs
mov
jp
movs
jnp
std
out
and
inc
mov
adc
push
push
xlat
inc
dec
sub
ins
jle
cmc
xchg
fdivr
push
push
push
mov
cmc
mov
jmp
sbb
test
scas
cli
fdiv
jbe
jg
mov
and
test
cmovb
push
arpl
mov
call
pushf
dec
xor
call
outs
icebp
ror
loop
mov
imul
or
or
es
ficom
sti
mov
dec
mov
lahf
imul
sub
not
push
lods
inc
ja
pop
fwait
int3
pop
lahf
inc
outs
nop
xor
pop
outs
arpl
ins
jo
lock
push
jo
sar
loope
nop
dec
cli
fnstsw
imul
pop
and
stos
dec
sub
outs
add
mov
mov
mov
(bad)
mov
sbb
sub
dec
sar
add
xor
js
out
stos
mov
movs
mov
shl
inc
inc
mov
(bad)
jg
xor
push
push
xor
(bad)
rol
mov
je
fs
test
lock
pop
(bad)
fdivr
test
out
call
push
cmp
dec
iret
sbb
mov
adc
or
sbb
inc
vmovapd
xchg
push
jl
(bad)
mov
dec
and
imul
dec
and
jo
rcl
daa
sbb
std
dec
cmp
pop
cmc
xchg
in
adc
mov
dec
ja
out
push
(bad)
push
jl
sub
or
(bad)
loope
jae
pop
ss
sbb
dec
xchg
outs
push
add
js
mov
cmp
out
int3
stos
xchg
repz
or
movs
out
js
xor
cmps
cli
idiv
repz
push
dec
ror
jge
adc
sub
dec
jg
push
fs
cld
test
and
xor
les
add
out
daa
shl
rcr
fisubr
js
(bad)
popa
imul
push
sbb
add
cmp
loopne
pop
loope
pop
stos
shl
jns
in
nop
mov
and
stos
(bad)
adc
and
jmp
xchg
or
test
nop
out
xchg
lods
mov
in
idiv
pop
jnp
cmps
in
in
or
add
mov
jns
or
and
mov
add
je
pop
icebp
enter
cmp
jnp
sbb
inc
enter
mov
imul
cld
cmps
add
test
retf
cmp
sbb
js
push
push
add
ins
jmp
add
fmulp
test
test
aas
pop
ret
stc
mov
add
out
ret
movs
push
cdq
or
sbb
xchg
xor
movs
inc
inc
cmp
or
sub
mov
mov
push
cs
mov
(bad)
xchg
pop
test
sbb
das
xor
sub
adc
imul
dec
xchg
push
and
jmp
pop
sbb
cs
add
ss
je
add
dec
ret
addr16
add
in
ret
mov
mov
sub
or
test
mov
push
mov
mov
mov
je
cdq
xchg
into
stos
dec
jle
adc
shl
repnz
and
mov
call
outs
push
pop
push
and
or
loope
jmp
jg
sub
enter
pop
mov
(bad)
push
sbb
cmp
sbb
icebp
loopne
push
test
out
fs
cmp
dec
or
mov
xchg
mov
jp
iret
pop
pop
or
add
adc
adc
push
sub
xchg
xchg
mov
imul
scas
(bad)
outs
cmc
cdq
mov
lods
cmc
push
dec
sub
dec
ror
lods
test
test
(bad)
cld
adc
es
and
test
loope
ins
dec
out
out
mov
into
and
mov
data16
fst
mov
movs
sbb
retf
push
scas
in
cmc
push
sbb
xor
loope
rcl
jb
fadd
sbb
hlt
mov
imul
mov
imul
add
repz
stc
push
cs
cmps
adc
arpl
xor
repz
pop
jb
(bad)
sbb
push
loopne
scas
mov
dec
loop
ficom
je
iret
add
or
inc
add
add
sar
daa
retf
or
jecxz
ret
dec
pop
adc
pop
in
sbb
jp
mov
xchg
add
sub
jne
xchg
stc
xor
xchg
jle
pop
pop
add
bound
inc
stos
nop
mov
mov
mov
int3
pop
rcr
fld
(bad)
sbb
clc
jl
xor
bound
jp
cs
jl
mov
test
xchg
mov
sbb
xchg
call
fmul
fdivr
lds
cmps
mov
int3
data16
jmp
nop
mov
xchg
hlt
push
sbb
imul
imul
mov
mov
and
mov
ss
or
int3
pop
test
(bad)
call
dec
xchg
scas
push
sub
iret
fldenv
cmp
pop
jmp
outs
sub
ret
xchg
stos
add
(bad)
movs
das
mov
jmp
xchg
and
jl
mov
daa
scas
inc
lea
dec
test
out
ins
mov
pop
dec
add
add
push
call
and
icebp
shl
adc
fs
mov
add
push
enter
adc
push
mov
(bad)
mov
stc
jno
retf
sub
popa
mov
sbb
jne
hlt
fs
enter
cs
test
cmp
mov
adc
push
fnstsw
test
cdq
in
mov
cld
loop
inc
es
lods
mov
outs
pop
add
cmps
sbb
mov
ins
inc
add
loope
cmps
mov
pop
sbb
movs
(bad)
sti
mov
test
popf
into
mov
xchg
(bad)
out
and
ret
or
xlat
jns
jns
jmp
push
gs
daa
jp
leave
mov
xlat
addr16
mov
pusha
gs
mov
push
arpl
imul
mov
rcl
jbe
xor
sar
jb
(bad)
pop
addr16
push
jge
pop
cmps
add
pop
test
addr16
inc
into
cmps
call
push
jl
test
mov
inc
sahf
xor
lea
pop
outs
(bad)
adc
xor
add
dec
mov
mov
jnp
add
xchg
mov
jne
xchg
jo
xchg
push
test
adc
pop
fiadd
ja
es
dec
or
pop
jns
jg
fwait
sbb
dec
jno
and
loope
pop
jo
cs
pop
fidiv
out
in
jne
loopne
mov
dec
lods
pop
sbb
in
pop
add
jg
push
add
inc
add
into
das
add
dec
retf
into
mov
cmps
test
mov
push
je
mov
pop
pop
hlt
and
iret
mov
or
mov
(bad)
push
ror
ja
ins
fcomi
pop
push
xchg
(bad)
sbb
addr16
cmps
xchg
sahf
imul
int3
xchg
je
shl
inc
inc
leave
cli
dec
loop
inc
push
push
cld
adc
mov
test
pop
xor
je
clc
test
stos
mov
outs
adc
adc
(bad)
xor
jmp
int
or
fisubr
mov
mov
lahf
xchg
jmp
cmp
lahf
sahf
mov
mov
call
aas
push
push
loop
cli
and
cmc
dec
out
pop
icebp
scas
xchg
jmp
in
repz
sahf
jno
dec
loop
and
and
aad
xchg
in
pextrw
pop
or
movs
mov
(bad)
and
mov
fwait
shr
push
mov
mov
mov
cmp
mov
(bad)
sub
shl
or
add
mov
pop
cs
push
es
mov
les
xor
scas
pop
movs
sbb
sahf
inc
fist
mov
sbb
loopne
inc
or
jae
mov
xor
xor
cmp
jo
ja
nop
adc
pop
dec
fmul
mov
jae
lea
mov
ror
int3
aas
cmp
xchg
mov
cs
mov
pop
icebp
pop
es
cld
aas
sahf
xchg
dec
mov
data16
jne
jnp
cmps
adc
test
mov
jp
sub
xchg
sbb
jmp
cmp
mov
cmp
jecxz
xchg
adc
ret
jmp
dec
push
mov
push
dec
std
cmps
je
cli
int3
not
cs
xor
push
push
sbb
test
in
shl
mov
jmp
hlt
cmp
mov
push
fldz
stos
inc
and
int3
lds
test
mov
ficom
xchg
dec
jl
push
mov
xchg
repnz
mov
adc
sbb
out
sbb
cmp
xchg
pop
lods
mov
pop
inc
add
pop
xor
ins
cmp
pop
sbb
fcomp
hlt
retf
pop
pusha
arpl
sar
mov
inc
jp
ins
mov
ret
(bad)
lea
xchg
mov
pop
xor
iret
or
xchg
daa
mov
call
out
pop
jns
mov
(bad)
(bad)
sub
mul
dec
xchg
punpcklwd
sub
or
fld
mov
sbb
mov
jno
adc
test
sub
mov
pusha
test
out
xchg
ins
shr
sbb
mov
imul
lods
mov
movs
add
ret
inc
js
mov
xchg
(bad)
in
sub
lock
vcomiss
add
movs
repz
inc
(bad)
pop
inc
hlt
scas
in
cld
sub
jns
loop
cmps
xor
outs
sub
imul
shr
sti
push
leave
rcl
mov
ss
and
outs
sbb
nop
inc
sub
scas
jo
fs
(bad)
mov
das
mov
xchg
add
sbb
adc
fsubr
cwde
mov
(bad)
jg
pop
fimul
in
aad
jnp
scas
ss
aas
imul
popf
push
adc
int3
jp
fild
dec
out
out
inc
mov
jae
cmps
lods
xchg
push
cli
aam
fld
pop
jo
add
jl
push
sbb
or
shr
push
sbb
dec
pop
ret
jb
into
les
inc
lods
push
mov
or
xor
int
or
push
movs
out
push
out
mov
mov
das
fs
xor
repnz
mov
xlat
ret
in
movups
dec
xor
sahf
dec
pop
mov
inc
cs
xchg
jmp
jge
xor
or
jle
ins
lods
inc
loopne
push
push
fld
into
cmp
arpl
mov
mov
pop
xor
push
and
push
adc
sbb
pop
setno
imul
call
cmp
fs
jno
aam
out
adc
and
test
sahf
and
add
mov
int
es
test
pop
mov
xor
inc
sub
mov
imul
dec
and
or
unpcklps
in
ja
xchg
call
fs
sub
outs
fiadd
mov
add
leave
cmc
aaa
ins
mov
aaa
jle
mov
ror
xor
daa
out
out
out
fisttp
les
dec
imul
frstor
sub
jp
cmps
dec
xchg
pop
mov
mov
movs
(bad)
pop
xlat
test
cs
dec
inc
in
ins
jne
loopne
popf
mov
lea
retf
ror
leave
mov
sti
jnp
mov
int3
mov
mov
fldcw
outs
test
jae
repnz
inc
add
and
jge
fstp
xchg
push
push
dec
xor
enter
xchg
mov
or
aad
int3
fs
loope
push
fsubr
loope
sub
mov
cmp
pop
adc
scas
and
fld
out
fs
xchg
add
mov
repz
jb
js
test
les
adc
in
or
mov
or
mov
pop
setle
mov
retf
movs
cmp
stc
int3
xor
sbb
and
shr
scas
mov
pop
test
in
imul
fild
jmp
mov
sbb
out
in
pop
cli
aaa
fnsave
fsubr
repz
in
inc
dec
jno
mov
lods
cmp
sbb
inc
nop
xchg
test
dec
repnz
cmp
fist
pop
in
pop
xor
retf
xchg
dec
shl
pop
add
lahf
jle
dec
int
mov
xchg
je
imul
inc
inc
or
or
sub
aaa
sub
shl
jecxz
inc
push
aas
and
inc
outs
and
sbb
hlt
out
je
scas
sahf
xor
pop
div
xchg
stos
inc
mov
mov
xor
cmp
out
cmp
mov
add
mov
jb
(bad)
mov
jnp
(bad)
mov
push
add
retf
xor
imul
shr
sbb
jno
(bad)
fisubr
loope
lds
mov
inc
ror
adc
jl
sub
ret
mov
mov
and
ds
imul
push
pop
stos
mov
repnz
fnstcw
mov
cdq
ficom
fcmovne
fld
mov
adc
in
(bad)
jmp
pop
mov
mov
dec
fistp
mov
cmp
xor
cwde
out
fwait
aas
out
fmul
push
test
je
(bad)
dec
sbb
push
repz
adc
mov
lahf
xchg
adc
out
pop
fs
push
imul
add
push
xor
retf
mov
mov
push
pop
jb
loopne
test
jns
jae
xchg
push
retf
je
dec
sbb
lods
and
ret
push
adc
push
push
xor
jae
cli
pop
bound
push
mov
scas
fwait
aas
outs
movs
mov
shr
mov
xor
xchg
pop
sub
mov
fbld
fstp
jle
cld
mov
cmp
xor
or
push
mov
mov
cmp
test
sub
cmp
out
addr16
test
mov
inc
test
cmc
or
scas
cs
push
les
mov
or
pusha
jmp
xor
(bad)
sbb
(bad)
addr16
mov
lods
js
jg
jmp
fisubr
mov
movs
sbb
jne
sbb
inc
dec
fdiv
push
pop
jmp
mov
add
scas
xor
cld
dec
push
inc
pusha
and
adc
aad
int
js
mov
std
cs
xor
aaa
aas
push
imul
sbb
sbb
xchg
out
or
jp
inc
imul
leave
addr16
sub
(bad)
or
jnp
xchg
test
(bad)
fnstenv
push
mov
xchg
and
ficomp
and
dec
push
mov
popa
retf
adc
retf
aam
je
shl
sub
mov
inc
sbb
imul
jmp
xchg
mov
mov
and
stc
js
add
cmc
push
push
cmc
push
(bad)
ds
xchg
ss
fcom
sti
fwait
stc
pop
sbb
sbb
ret
sub
in
pop
icebp
xchg
rcl
mov
movs
ror
add
outs
fisub
fnstenv
cdq
mov
fiadd
xlat
cmp
pop
pop
(bad)
lds
and
js
out
loop
sahf
sub
inc
dec
pop
inc
clc
and
add
(bad)
push
dec
test
(bad)
ins
imul
xchg
out
mov
cmps
adc
add
xchg
mov
ja
ficom
sahf
add
aam
push
mov
xchg
ds
mov
outs
cld
ins
pop
mov
dec
add
push
xchg
xchg
shl
xchg
xlat
inc
dec
or
dec
call
pop
xor
scas
push
outs
jnp
mov
lahf
and
addr16
arpl
int
or
jb
inc
repz
pop
jno
rol
(bad)
cdq
es
(bad)
iret
(bad)
sar
mov
or
jae
jo
sahf
inc
pop
leave
sar
sbb
mov
outs
fs
cmp
mov
mov
daa
mov
lods
jno
daa
or
cli
sub
and
pusha
fisttp
push
lods
cwde
das
lock
xchg
xchg
jecxz
stc
mov
push
int
push
stos
jbe
sub
ins
ins
aaa
lahf
fmul
mov
sbb
xchg
iret
rol
adc
sub
iret
leave
pusha
loope
stc
xchg
mov
mov
dec
sbb
lahf
ins
jmp
int3
pop
mov
sub
push
cmp
xor
lock
adc
test
sbb
inc
pop
add
or
mov
pop
mov
sub
mov
mov
mov
xchg
imul
test
stos
lahf
mov
shl
cmp
xor
mov
scas
dec
in
fmul
xor
mov
cmps
(bad)
fs
inc
aad
cs
adc
in
mov
pop
pop
fs
and
ficom
mov
jb
(bad)
in
mov
adc
adc
mov
in
or
mov
push
mov
dec
dec
data16
lods
dec
pushf
pop
cmp
mov
lock
out
push
es
and
sub
xor
xchg
repz
lock
in
enter
fcom
xor
shl
jle
retf
loopne
pop
out
jmp
pop
adc
xchg
(bad)
rcr
xor
imul
mov
fidivr
pushf
xchg
inc
ja
lods
jne
and
call
fcom
loopne
mov
fild
fwait
jecxz
add
ins
repnz
sahf
shr
inc
pop
ins
adc
push
(bad)
mov
mov
aaa
pop
outs
outs
push
fisub
inc
xchg
jle
cmp
nop
xchg
mov
mov
or
retf
and
stc
mov
mov
or
jae
mov
mov
lods
in
(bad)
push
xor
cmps
and
test
shl
arpl
or
push
rol
jbe
jnp
sub
dec
adc
mov
jge
adc
xlat
xchg
sub
loope
dec
test
jle
sbb
sbb
ret
push
loopne
cmp
ins
push
inc
and
mov
push
cdq
jl
jb
adc
int3
cmp
mov
stos
sub
inc
pop
push
lea
sahf
test
fwait
or
imul
push
xor
test
pop
jmp
mov
test
jmp
pushf
cli
in
push
popf
sub
call
or
ror
add
movs
repnz
pop
sbb
ror
or
jg
fsub
scas
pop
pop
xlat
cwde
sbb
cmp
(bad)
mov
sub
add
rol
mov
out
dec
ret
xchg
jb
jge
dec
cmp
mov
push
adc
popa
leave
or
sub
cmp
adc
pop
mov
or
pushf
aas
mov
popf
fstp
movs
pop
push
mov
retf
mov
push
mov
xchg
mov
cmc
leave
das
cdq
mov
mov
mov
fstp
retf
in
cmc
pop
retf
and
xchg
inc
call
sbb
into
pop
leave
jle
dec
sbb
dec
sub
loopne
addr16
ja
dec
mov
jmp
stos
dec
in
push
shl
mov
in
xor
push
jbe
imul
ins
je
retf
call
adc
jmp
cmp
ja
movs
or
and
outs
(bad)
fdivr
out
fcomp
test
aad
jnp
daa
jle
sti
lahf
and
jo
lea
push
and
mov
add
test
stos
jb
inc
mov
imul
inc
push
jmp
test
inc
pop
ins
xlat
add
(bad)
in
mov
(bad)
stos
mov
sbb
test
fistp
cli
daa
add
sbb
leave
inc
mov
out
in
outs
push
xor
repnz
pushf
test
add
mov
mov
adc
mov
cmp
jmp
cmp
jbe
js
inc
js
cmp
xchg
ja
test
mov
lahf
jp
xchg
mov
push
or
sub
mov
cwde
out
mov
lods
sbb
pop
mov
je
ins
fdivr
popf
addr16
scas
dec
inc
lea
sahf
cmp
adc
xor
adc
mov
cmc
jmp
sahf
clc
add
outs
fcmovnu
iret
or
es
cmp
pop
or
ins
lahf
test
or
cmp
repz
dec
adc
mov
cdq
je
std
test
lahf
lea
jno
dec
adc
mov
sbb
add
jmp
ret
mov
loop
inc
dec
pop
std
sbb
cmps
add
sbb
loopne
jne
into
sahf
enter
fsub
popf
adc
or
cld
adc
(bad)
jecxz
lods
mov
fnstsw
mov
cdq
mov
test
mov
add
and
jge
add
inc
fldenv
or
pop
les
lea
inc
pop
push
pop
jp
push
xchg
shr
mov
std
les
ss
imul
adc
pushf
data16
mov
push
inc
aas
mov
jge
jbe
popfw
mov
pop
jnp
and
or
(bad)
or
mov
pop
scas
or
aas
gs
mov
dec
aad
imul
mov
loop
lock
mov
jge
push
neg
call
stos
or
inc
sti
in
sub
ret
icebp
xchg
jmp
shl
jo
scas
int3
mov
mov
ins
pop
and
fild
mov
pop
dec
lahf
cmp
repnz
test
and
imul
and
dec
mov
stc
hlt
pop
aad
xchg
cmc
retf
mov
test
push
imul
inc
jle
adc
jge
mov
lea
inc
pop
push
pop
pop
sbb
lods
retf
daa
push
mov
dec
enter
inc
popf
ja
mov
test
sub
(bad)
ficomp
jbe
xor
cmp
push
and
mov
push
movs
pop
hlt
ins
sbb
scas
fdivr
mov
mov
stc
nop
daa
pop
mov
jmp
or
or
call
xor
ror
rol
ss
pop
pop
sub
fisubr
or
leave
stos
les
mul
or
nop
fld
xor
push
xor
mov
mov
ja
cmps
lods
retf
adc
or
mov
shl
jae
pushw
xchg
xchg
mov
cmc
or
add
loop
stos
sub
outs
push
xchg
and
dec
jmp
inc
xor
ficom
inc
ja
mov
xchg
cmps
jle
and
fiadd
add
push
add
mov
jnp
sbb
ret
aad
fldcw
mov
popf
add
iret
std
nop
sub
outs
cmps
mov
jmp
daa
push
mov
fxch
retf
push
sbb
sbb
cmps
lock
inc
(bad)
rol
xchg
cs
sub
adc
(bad)
jns
mov
scas
into
or
fcmovne
fcom
stos
sub
fwait
or
jae
pop
iret
push
adc
xor
dec
push
inc
or
xchg
push
cmps
sbb
push
adc
mov
push
loope
mov
ins
adc
jmp
xchg
pop
dec
rol
fsub
cmp
ins
mov
jb
in
jge
jp
lahf
push
or
iret
push
jbe
loopne
cmp
aaa
inc
rol
jle
fdivp
and
and
jne
xor
inc
adc
rol
das
test
inc
xchg
retf
jl
jae
jmp
imul
fiadd
mov
push
mov
loop
xor
and
cmc
pop
les
sub
imul
cld
push
mov
adc
push
cmp
jb
pop
pop
push
cmps
pusha
mov
sahf
xor
(bad)
adc
mov
movs
mov
cmp
add
ret
jo
mov
cmp
dec
mov
push
popa
adc
(bad)
outs
push
scas
and
retf
data16
or
mov
dec
fadd
fstp
jbe
lock
movs
fisub
adc
call
in
dec
fist
mov
daa
adc
mov
in
movs
sub
fisttp
mov
movs
aad
pushf
neg
sub
cmp
out
push
test
mov
pusha
xlat
jnp
sbb
in
pusha
push
or
in
sub
mov
addr16
loop
mov
xchg
push
iret
je
xor
out
popa
add
(bad)
(bad)
xor
cmc
xchg
push
adc
jnp
std
mov
mov
scas
or
js
out
scas
mov
aam
pushf
outs
cmp
mov
aas
arpl
inc
test
out
jle
ret
jmp
mov
xlat
ja
ins
jbe
pop
cdq
lds
and
js
and
fild
retf
test
inc
cmp
clc
aam
dec
cmp
ins
fiadd
(bad)
mov
mov
retf
idiv
dec
das
fadd
sub
rcl
aaa
or
imul
adc
cs
sbb
mov
pop
add
xor
add
sub
mov
or
jmp
pop
sub
sub
mov
test
pop
and
and
fistp
add
sar
mov
mov
ror
cmps
dec
lahf
jmp
mov
adc
sub
loope
adc
push
das
sbb
test
xchg
xor
inc
imul
sub
out
dec
(bad)
(bad)
fistp
dec
stos
add
xor
ret
test
ins
cmp
out
inc
movs
pop
into
mov
call
test
mov
lea
cmp
pop
sbb
cmp
out
ds
push
lahf
jp
sub
push
and
sahf
int
xchg
inc
pop
test
stos
loopne
arpl
dec
or
pop
lahf
mov
cwde
dec
or
inc
ficom
add
xor
stos
push
aas
(bad)
(bad)
ffreep
or
mov
pop
mov
retf
out
or
fimul
mov
mov
sbb
xor
or
inc
inc
pusha
jns
dec
stos
jle
mov
push
and
pop
mov
cmp
pop
in
js
mov
and
imul
or
ins
sub
push
bound
jb
sbb
or
lea
xchg
pop
mov
xor
jg
cmp
out
test
sub
test
in
inc
dec
in
xchg
retf
call
mov
add
xchg
add
les
adc
pop
test
enter
cmps
es
xor
mov
(bad)
mov
jo
fisub
inc
and
cli
test
or
shl
ss
(bad)
icebp
or
xor
or
add
mov
mov
pop
into
pop
adc
and
imul
setne
or
and
movs
sub
jb
push
(bad)
div
mov
mov
test
or
ins
sub
js
dec
sbb
out
jns
shl
retf
inc
sbb
adc
mov
fisttp
fmulp
(bad)
jbe
daa
push
xor
aad
sub
mov
outs
mov
in
mov
mov
adc
cwde
dec
mov
jecxz
dec
test
test
shr
cmp
out
jge
aas
inc
mov
xchg
jnp
or
mov
into
mov
call
sbb
inc
in
lods
dec
cmp
aam
icebp
cdq
adc
call
xchg
loope
pop
or
xchg
addr16
mov
ins
(bad)
je
sar
call
mov
push
fdiv
scas
dec
rol
cmps
nop
call
sbb
into
lock
push
jg
mov
aam
clc
push
ds
test
fiadd
aas
push
pop
cmp
jbe
adc
adc
fstp
cdq
cmp
sub
ins
shl
dec
xchg
fimul
cwde
adc
push
jl
and
sub
iret
push
dec
test
dec
sbb
push
leave
repz
inc
daa
lds
scas
mov
shl
bound
jmp
or
inc
lahf
mov
and
test
xchg
std
aam
dec
bound
xor
stc
xchg
sahf
enter
mov
lock
data16
iret
repnz
pop
pop
js
call
call
mov
ja
sbb
idiv
loope
(bad)
jmp
bound
xchg
mov
push
in
nop
push
add
mov
sub
xchg
aad
or
jno
pop
ret
mov
jge
clc
setne
mov
fnsave
mov
pop
int
pop
mov
mov
xchg
loope
xchg
push
out
jno
push
xor
stc
jle
mov
(bad)
cmp
add
ret
into
jbe
xor
mov
sub
mov
int
inc
or
fldenv
ret
push
xor
aaa
retf
js
ror
inc
cmp
ja
adc
or
and
mov
sub
(bad)
mov
ja
mov
pop
cmps
dec
adc
push
jg
and
or
leave
xor
jnp
adc
xor
xor
jne
test
pop
jmp
outs
mov
xlat
retf
xor
repnz
xor
xlat
jbe
cmp
and
add
test
ja
ja
fwait
and
add
push
cld
jo
mov
adc
push
sub
jmp
mov
xchg
cvtpi2ps
add
je
fmul
sahf
push
fdivr
stos
add
js
sbb
xchg
or
aaa
mov
mov
std
outs
sbb
mov
retf
mov
pop
cmp
or
mov
(bad)
ficom
sub
xor
lods
xor
inc
push
cld
aas
cmc
(bad)
dec
ins
shl
sahf
dec
jle
stc
mov
sub
jg
and
mov
adc
clc
(bad)
lods
xchg
or
pusha
jle
sti
pop
aad
sbb
pop
adc
data16
les
cwde
pop
ret
out
lea
add
aad
movs
mov
add
mov
in
out
mov
aam
(bad)
retf
fst
test
adc
mov
je
scas
add
out
fimul
mov
mov
fild
lock
ds
pushf
cmc
mov
add
mov
fstp
push
push
shr
fstp
xchg
in
aas
mov
pop
ja
push
lods
cmps
sbb
jae
lock
jmp
(bad)
fstp
xchg
mov
out
mov
in
popa
mov
fimul
mov
in
add
inc
repz
call
or
cs
pop
xchg
push
fstp
fisubr
mov
test
pop
sbb
lds
in
add
iret
adc
(bad)
and
dec
retf
scas
int3
inc
imul
dec
mov
je
xchg
(bad)
pop
sbb
cmc
ins
call
cs
cmp
movs
jg
out
les
retf
adc
pop
jb
loope
fisubr
jne
test
sub
inc
stc
fbstp
movsx
xchg
xor
retf
mov
in
outs
outs
aaa
mov
xchg
js
mov
jns
cwde
adc
lahf
inc
mov
lock
in
cli
pushf
dec
sar
in
add
and
pop
call
test
mov
lock
in
cld
push
popa
(bad)
sti
mov
mov
pop
scas
add
scas
mov
daa
mov
push
adc
imul
ss
xchg
inc
jnp
das
das
(bad)
dec
jge
call
xchg
cld
inc
popa
cmp
xchg
and
and
cdq
pop
jbe
movs
adc
out
scas
mov
mov
jle
inc
add
add
mov
dec
movs
pusha
(bad)
in
pop
js
fcom
xchg
add
xchg
cmps
ja
rol
xor
xchg
(bad)
(bad)
repz
movs
push
mov
mov
push
inc
jmp
das
jl
rcl
dec
js
dec
and
sbb
adc
loopne
out
in
inc
ss
int3
sahf
push
shl
xchg
xchg
mov
xchg
in
push
mov
xor
cmp
sub
jbe
xchg
nop
or
xchg
inc
in
push
jg
pop
push
mov
jne
imul
adc
jbe
cli
or
movs
cmp
cmp
enter
int
xchg
push
and
and
cwde
dec
out
(bad)
mov
add
and
fyl2x
pop
jmp
push
ret
jne
dec
int3
out
sub
mov
mov
retf
inc
mov
scas
push
icebp
pop
add
adc
push
jno
pop
and
in
bound
jae
jne
xor
ins
int
mov
ror
dec
pushf
mov
gs
push
leave
pop
jmp
idiv
ror
repz
jbe
cmp
pop
mov
(bad)
xor
pop
push
(bad)
mov
sbb
inc
rcl
jnp
sbb
add
call
imul
out
cmp
mov
(bad)
rcr
lea
lock
mov
int
(bad)
push
mov
cli
(bad)
cmp
fld1
sub
and
cmps
dec
xchg
retf
fld
inc
mov
repz
dec
jb
adc
xchg
int3
movs
xchg
ja
sti
(bad)
out
fcmovne
inc
in
push
(bad)
mov
mov
push
ds
ins
(bad)
sub
lods
cmc
test
sbb
out
mov
movs
xchg
(bad)
out
pop
mov
adc
and
pop
inc
inc
int
retf
sub
inc
cmps
les
movs
(bad)
lods
xlat
xor
mov
movs
mov
das
outs
hlt
jp
cmp
enter
fwait
jo
sub
cwde
xchg
bound
rcl
xor
jo
adc
adc
xchg
not
dec
or
inc
pop
sub
push
stos
les
push
(bad)
mov
pushw
neg
mov
jle
call
and
cdq
sub
sub
dec
nop
mov
and
sar
pop
imul
pushf
push
jmp
test
xchg
outs
mov
sub
xor
popf
push
jae
or
pop
jb
fdivr
out
jns
pop
gs
cs
push
lds
out
mov
test
and
test
sub
gs
int3
mov
pop
pusha
ins
les
in
int3
mov
das
popa
inc
mov
mov
adc
inc
dec
dec
sbb
outs
inc
out
or
push
xchg
jno
push
or
pop
cmp
and
addr16
sbb
push
movs
scas
neg
lahf
repz
mov
(bad)
mov
and
mov
imul
call
and
out
xchg
mov
ficomp
ds
test
repz
jg
mov
movs
sub
movs
xchg
xchg
push
in
fnstsw
imul
cdq
and
repnz
aam
pop
je
movs
fnstenv
dec
retf
cwde
out
(bad)
and
pop
sbb
add
dec
jmp
dec
mov
xor
cmp
pop
xchg
mov
xor
test
rcr
or
add
in
xor
rol
cmps
bound
mov
dec
movs
push
sbb
push
jmp
jmp
adc
pop
es
int
lahf
fwait
push
pop
sbb
jae
xchg
(bad)
(bad)
retf
(bad)
scas
xlat
test
cmps
cmp
pop
and
arpl
xchg
push
hlt
daa
dec
xchg
dec
pop
fwait
adc
call
jmp
add
sub
xor
(bad)
pop
imul
int
or
sub
jnp
dec
int
rcl
pop
or
pusha
scas
das
div
or
adc
jg
fistp
dec
push
test
test
jg
mov
mov
mov
cld
daa
ins
(bad)
push
or
iret
inc
aas
push
in
outs
test
pop
lods
call
add
rcl
push
outs
or
popf
das
mov
dec
cmp
repz
int3
adc
sub
jne
hlt
cmp
fbld
dec
fcomp
sbb
fmul
mov
lahf
jo
xchg
(bad)
mov
xchg
add
in
sub
mov
rcl
sub
cwde
mov
mov
jno
inc
test
fwait
ins
enter
out
call
pop
call
sbb
lds
and
clc
retf
lock
push
inc
test
jmp
fucomp
xchg
mov
jmp
scas
retf
add
adc
or
pushf
adc
pop
rcr
aaa
mov
or
lods
adc
jae
scas
retf
daa
mov
clc
xlat
and
loope
add
fcom
cmps
pusha
pop
in
pop
jne
inc
js
pop
repnz
pop
ror
mov
jmp
push
fild
outs
nop
mov
adc
stc
loope
stos
jbe
in
xlat
xor
cmp
jae
hlt
mov
sub
sbb
add
sbb
movs
mov
inc
sub
nop
icebp
in
xor
add
imul
or
loopne
mov
cmp
test
pop
xchg
pop
xor
jmp
adc
mov
(bad)
imul
and
shr
out
xchg
push
pop
push
mov
ja
out
dec
and
ror
and
mov
inc
mov
cmp
fnstcw
jecxz
ins
ja
add
xchg
imul
inc
or
and
int
sbb
movs
xchg
in
ja
into
test
dec
pop
adc
push
cs
and
gs
mov
loop
pop
in
jne
xor
mov
mov
push
out
mov
(bad)
dec
aaa
dec
gs
xor
out
pop
rcl
inc
add
mov
(bad)
cmp
mov
sahf
fwait
mov
hlt
xchg
icebp
mov
sub
or
add
lods
ins
push
or
xchg
cmp
mov
add
cs
je
aad
mov
or
enter
fistp
repz
cmps
and
pusha
je
(bad)
aas
fnstsw
lea
test
stos
mov
add
mov
call
addr16
aam
and
scas
shl
cmp
(bad)
push
ror
jae
pusha
int3
push
int
gs
pop
pop
xor
xor
mov
vpperm
clc
push
lods
push
not
imul
adc
and
push
out
sbb
cdq
push
inc
dec
cmps
scas
scas
mov
repnz
ins
imul
mov
std
scas
dec
lock
jo
adc
inc
std
popa
sbb
xor
shl
stos
fsub
mov
mov
loope
or
pushw
ins
jl
ins
mov
mov
push
cmp
call
or
inc
stos
imul
jne
scas
pop
sub
(bad)
clc
dec
add
push
outs
int3
scas
mov
or
pop
int3
lea
xchg
cs
push
pop
jo
mov
xchg
adc
dec
mov
sbb
jmp
das
fsub
je
push
sub
sub
dec
scas
ror
push
sbb
jnp
mov
push
icebp
bound
pop
je
mov
mov
loop
or
fnsave
call
and
pop
aas
sbb
cmp
shr
fwait
je
or
cmc
push
push
(bad)
shl
inc
leave
sbb
inc
fisubr
adc
int
repnz
movs
xchg
adc
jp
or
cmp
sbb
popf
ja
cmp
sub
or
loop
cmp
or
inc
mov
cmc
push
out
push
bound
rol
add
fcomp
pop
in
or
retf
repnz
bound
scas
xchg
scas
call
mov
cmp
cmp
stos
sbb
mov
sahf
jge
xor
xor
mov
add
xor
fsub
jmp
rol
or
movs
xor
mov
mov
(bad)
scas
or
sub
xor
jp
imul
in
sahf
out
mov
or
sbb
loop
xchg
les
cld
mov
push
jb
jbe
clc
jle
into
cmp
jge
es
fidivr
mov
fcomp
repz
jne
jno
inc
dec
clc
out
popf
push
jmp
movs
pop
push
sbb
inc
inc
mov
mov
loop
push
jae
(bad)
push
dec
sub
loope
dec
pop
mov
fbld
push
out
adc
inc
test
mov
push
jmp
pop
xchg
inc
test
aad
(bad)
dec
jbe
sub
aad
xor
jae
adc
sbb
jmp
cmc
sbb
and
pushf
push
cmp
iret
xchg
adc
jae
jne
ins
fisub
int3
xor
(bad)
cs
mov
bound
leave
mov
out
out
shl
in
mov
mov
(bad)
push
xlat
jmp
jmp
jbe
bnd
outs
mov
xchg
or
sub
jmp
xchg
cmp
stos
test
fbstp
ja
and
cmp
retf
cmp
pop
and
mov
jno
inc
mov
push
int3
xor
adc
hlt
cdq
jns
stos
call
xchg
sub
xor
inc
gs
sub
(bad)
cdq
outs
cld
aam
adc
sbb
jp
rcr
cli
leave
sti
dec
jno
(bad)
fadd
adc
inc
popa
sar
cmp
mov
addr16
stc
adc
push
out
in
repz
inc
mov
icebp
sub
sbb
ins
cmps
scas
or
sbb
mov
dec
pop
mov
cmp
or
xchg
jns
(bad)
xchg
mov
jl
jg
fmul
jno
call
loopne
repz
out
or
rol
in
mov
inc
mov
cwde
shr
add
(bad)
fidiv
daa
cdq
inc
out
sbb
fwait
ss
retf
dec
call
cmp
pop
mov
pop
frstor
pminub
pop
gs
(bad)
sbb
jg
and
shr
or
mov
sub
lods
imul
mov
push
and
lock
je
icebp
cmp
in
inc
inc
arpl
mov
arpl
jge
sbb
jmp
xor
lds
iret
pop
add
and
xor
xchg
xchg
setle
(bad)
sub
inc
(bad)
sbb
jno
add
inc
mov
ja
data16
or
pusha
mov
push
adc
and
mov
test
(bad)
sti
or
into
push
pop
pop
dec
out
call
mov
ficom
sti
and
imul
data16
xor
mov
aaa
fdivr
call
outs
imul
mov
mov
lds
push
es
pushf
add
xchg
mov
aad
inc
mov
or
mov
daa
sub
sub
(bad)
scas
sub
outs
test
jnp
stos
(bad)
lahf
lahf
jg
movs
mov
mov
sbb
and
xchg
add
push
mov
cmp
jns
nop
mov
scas
dec
(bad)
jle
inc
add
pop
jnp
out
pusha
lock
ror
inc
clc
pop
mov
add
cmps
mov
mov
push
std
cmp
add
dec
inc
aas
inc
cmc
es
sub
xchg
pusha
popa
jbe
dec
test
pop
add
mov
pop
shr
adc
xor
aaa
cmp
xor
sub
mov
cwde
xor
in
mov
xor
mov
pushf
test
adc
add
hlt
ficom
mov
mov
adc
(bad)
fsub
daa
sbb
test
daa
push
pop
ins
xchg
mov
cli
mov
sar
popa
sub
xchg
adc
enter
(bad)
cli
pop
cmp
mov
stc
fwait
cmp
and
sbb
push
loop
adc
mov
mov
push
inc
loop
push
mov
aam
cmp
jle
retf
sar
imul
cmp
mov
out
or
fsubrp
js
les
je
mov
movs
inc
aas
mul
push
int
mov
mov
aam
push
pop
call
jg
push
rcl
ins
call
ret
or
addr16
xor
in
sub
add
loope
pop
pop
scas
repnz
xor
adc
and
rcl
movs
pushf
mov
mov
test
mov
or
rcr
lods
fcmovb
enter
je
mov
test
pop
repnz
popa
cli
add
ret
scas
mov
or
and
outs
pop
lds
sub
movs
xchg
sbb
test
imul
sbb
inc
movs
imul
sbb
xor
pop
xchg
into
dec
mov
int3
cli
sbb
movs
mov
xchg
nop
(bad)
push
jl
les
addr16
fld
pusha
mov
scas
movs
retf
mov
or
ffree
mov
and
retf
adc
outs
enter
xlat
mov
mov
idiv
out
test
and
add
pop
clc
push
push
lds
cld
adc
and
inc
mov
sbb
xlat
leave
jle
jo
mov
cmp
dec
loop
jno
hlt
(bad)
jl
(bad)
(bad)
ror
lods
adc
and
xchg
in
cmp
push
sub
cmp
mov
sar
in
push
clc
xchg
inc
lods
retf
cld
pop
add
out
sbb
adc
xor
out
es
pop
mov
or
das
add
cmc
mov
inc
scas
push
mov
outs
push
xchg
add
gs
test
mov
mul
out
cmp
rcr
rol
ds
test
ins
adc
test
sahf
(bad)
xor
mov
hlt
add
jnp
add
rcl
xchg
inc
cmp
xor
sbb
push
xchg
fs
lea
cwde
pushf
pusha
dec
(bad)
in
pop
sub
pop
sahf
or
repnz
mov
xor
call
call
cmp
mov
jmp
fistp
retf
add
jl
mov
test
jo
call
outs
inc
loop
sbb
inc
ds
xor
loope
xchg
shr
test
scas
inc
mov
mov
les
outs
jae
loop
push
mov
push
outs
mov
lea
cs
das
fsub
(bad)
jmp
or
add
push
mov
lods
jno
jl
adc
arpl
or
inc
call
vpsrad
or
mov
sbb
sar
ss
mov
leave
mov
jle
movs
pop
dec
movs
push
sbb
add
aam
adc
(bad)
mov
mov
imul
enter
sub
cmps
mov
and
cmp
jg
mov
and
or
jle
sub
sub
in
push
pop
dec
sbb
out
mov
(bad)
or
xchg
stos
mov
imul
call
pop
inc
gs
cld
lea
pusha
stos
pop
inc
sahf
cmp
shr
dec
jb
cmp
pop
cdq
push
adc
mov
loop
add
outs
pop
ins
lods
mov
mov
push
leave
inc
imul
leave
adc
neg
adc
mov
loop
fcmovnbe
pushf
int3
inc
add
std
(bad)
enter
pop
xchg
cdq
mov
sub
cdq
retf
iret
movs
mov
mov
mov
test
cmp
jmp
jmp
lea
mov
xor
push
mov
dec
mov
mov
inc
out
dec
sub
jecxz
or
movs
mov
xchg
jno
outs
xchg
bnd
aaa
and
ret
cmps
test
loopne
fwait
je
lods
mov
cmc
in
shl
daa
jl
xchg
mov
inc
dec
lods
mov
cmp
cmp
push
icebp
xchg
xchg
or
mov
push
ins
or
pop
ins
xchg
xor
out
arpl
idiv
frstor
stos
aam
sahf
xchg
in
and
lods
adc
xor
cwde
sub
push
sahf
sbb
out
imul
jns
pop
js
xchg
add
rcr
lea
stc
repz
and
enter
cmp
rol
inc
jmp
shr
sub
mov
retf
(bad)
mov
paddw
test
imul
pusha
in
popf
outs
mov
and
and
xchg
scas
push
je
in
mov
pop
mov
pop
outs
gs
push
arpl
pushf
jmp
arpl
ss
lods
inc
(bad)
scas
push
push
add
enter
arpl
fistp
(bad)
mov
mov
ret
imul
inc
add
adc
stc
push
sub
ss
pop
(bad)
jp
mov
adc
xchg
xor
mov
pusha
add
dec
jb
fs
aaa
cli
or
pop
hlt
mov
inc
in
cmp
cmp
ret
dec
sub
lods
pop
push
cmp
out
push
outs
pop
aaa
hlt
iret
shl
mov
into
push
cmp
imul
pop
in
daa
(bad)
iret
pop
sbb
add
aas
neg
mov
sub
loope
imul
pop
xor
sub
cmc
pop
enter
xor
retf
mov
jns
(bad)
cld
cmp
ss
ins
sbb
cmp
jge
sub
add
xlat
xlat
mov
cmp
xchg
js
mov
sub
xchg
push
push
popf
mov
add
dec
sbb
xlat
dec
hlt
add
push
es
jmp
mov
push
cli
mov
retf
pop
and
shr
mov
push
pushf
int3
dec
or
pop
nop
movs
push
dec
out
xor
inc
xchg
push
xor
dec
mov
mov
mov
mov
mov
push
inc
sub
dec
inc
mov
push
sbb
in
hlt
call
retf
push
jb
retf
jne
into
xchg
or
mov
(bad)
pop
and
pop
sub
test
icebp
outs
pusha
inc
jne
or
mov
mov
out
add
pop
inc
cmp
xchg
fs
clc
rsm
mov
xchg
scas
xchg
sti
cs
inc
sub
inc
and
loope
popf
loopne
push
xor
sub
pushf
ins
ror
ss
int3
fidiv
push
adc
mov
or
dec
loope
jmp
jmp
aam
jae
icebp
sub
nop
pop
xchg
or
(bad)
lock
adc
and
int3
inc
adc
loopne
imul
sbb
pop
js
(bad)
xor
jl
test
pop
add
inc
call
and
and
jge
cdq
lahf
sbb
mov
rol
cmc
jmp
nop
sub
scas
mov
push
and
imul
scas
mov
mov
sbb
ins
cdq
scas
hlt
and
cmp
jae
dec
das
mov
mov
xor
cmp
sub
cmp
cli
push
or
dec
xor
sbb
inc
mov
stos
or
jg
daa
in
cmp
pop
inc
xor
pop
mov
xchg
fcos
cmp
sub
ret
pop
mov
adc
add
mov
into
jae
mov
mov
fcomp
jp
or
mov
push
or
mov
out
and
sbb
icebp
pop
int3
rcl
sbb
in
inc
test
dec
ror
mov
xchg
js
and
(bad)
jmp
test
dec
aam
mov
pop
mov
inc
pushf
push
icebp
jmp
ja
xchg
call
mov
mov
std
pushf
pop
or
jb
mov
sar
mov
cdq
and
sti
out
mov
out
mov
mov
stos
pop
dec
ret
rcl
sbb
les
jne
shl
test
push
or
clc
pop
mov
xchg
xchg
mov
inc
std
adc
mov
mov
leave
dec
jl
scas
or
fwait
jecxz
sar
cdq
jns
mov
mov
inc
aam
test
rcr
sub
test
ins
aad
adc
pop
ss
mov
lea
mov
sub
pop
icebp
fstp
ds
mov
pop
rcl
jle
out
sub
sahf
mov
jg
mov
lahf
inc
sub
cmps
jmp
mov
movs
pop
loopne
push
sub
mov
cmp
adc
mov
cmps
es
mov
pushf
adc
scas
(bad)
ficomp
push
imul
repnz
fldcw
ins
ja
rcr
push
jo
(bad)
mov
cmp
rcr
ins
jl
add
je
data16
aad
iret
jl
xor
fld
std
sub
scas
je
dec
popa
movs
cli
push
hlt
data16
dec
mov
mov
and
or
fwait
clc
fiadd
sbb
les
or
cmp
add
xor
cli
sbb
and
aam
cs
hlt
pop
or
enter
jb
or
movs
pop
dec
aaa
push
mov
pushf
cld
cmp
retf
sbb
sbb
xchg
mov
sbb
call
mov
lahf
repnz
repz
pop
mov
ins
mov
jmp
mov
cmp
dec
(bad)
sbb
mov
outs
imul
data16
push
cdq
out
mov
jmp
ret
ror
outs
mov
sub
sbb
sbb
fistp
and
(bad)
out
and
mov
dec
les
sbb
cmc
mov
fs
push
mov
mov
jbe
mov
cmp
push
jl
jno
xchg
fstp
sar
push
mov
std
fild
arpl
mov
leave
jmp
push
mov
fs
jle
jp
nop
pushf
popf
cmp
add
add
jns
mov
aam
pop
add
jb
mov
popa
dec
cmp
adc
cmps
js
(bad)
pop
in
out
inc
sbb
mov
pop
mov
jne
jmp
push
out
inc
mov
sub
pop
adc
fidivr
repnz
xchg
out
sub
sbb
jb
out
push
je
rcl
call
in
out
jbe
push
and
aam
ret
out
or
inc
popa
or
cmp
xchg
xor
add
aam
cmc
(bad)
dec
in
gs
fdiv
ss
das
jmp
inc
pxor
mov
jo
dec
mov
jae
sub
ins
(bad)
jno
fwait
jle
je
addr16
push
sbb
les
dec
dec
loop
cmps
loopne
cwde
inc
mov
das
xabort
mov
shr
mov
dec
dec
(bad)
dec
mov
xchg
sbb
mov
je
pop
ins
(bad)
push
cmp
lock
int3
pop
in
mov
sub
jg
jo
mov
push
cmp
push
cdq
mov
(bad)
jecxz
xchg
emms
xchg
imul
fisttp
mov
daa
lods
and
mov
movs
cmp
out
inc
sbb
and
out
mov
add
cmc
xchg
lahf
or
ins
ficom
xchg
(bad)
pop
pop
into
xchg
ret
fidiv
pop
jg
sub
rcl
sahf
cmp
ins
jb
xor
loopne
push
push
pop
(bad)
pop
and
ror
xor
cmp
scas
mov
push
into
pop
(bad)
int3
or
imul
add
jno
dec
mov
out
jae
jp
and
xchg
sub
dec
and
dec
icebp
sub
jmp
push
leave
xchg
mov
cmp
pop
(bad)
sbb
inc
cmp
test
dec
jle
add
dec
jne
sahf
mov
fisttp
pop
pusha
sahf
(bad)
aam
aas
mov
fstp
adc
push
fwait
aas
sub
fcomp
xchg
mov
lea
bound
jo
addr16
jbe
mov
in
clc
adc
adc
lea
(bad)
iret
fld
xlat
sar
not
cmp
cmp
dec
sbb
ja
xor
push
sub
cmps
and
movs
dec
nop
call
dec
shl
out
mov
mov
mov
aas
xor
add
arpl
xchg
add
fyl2xp1
int3
repnz
push
sub
xor
fld
jle
add
jge
xor
pusha
fistp
shl
(bad)
and
push
sub
retf
push
inc
sbb
scas
dec
jmp
sahf
test
ins
sbb
ror
or
sti
shr
xchg
cs
in
out
mov
cmp
in
jmp
hlt
sahf
add
lock
and
add
jb
mov
enter
mov
ss
out
nop
mov
dec
jbe
xchg
jno
test
mov
fcom
xor
mov
repz
xchg
int
movs
sub
fbstp
mov
push
mov
addr16
cmp
cmc
dec
jno
jae
pushf
jge
and
xor
movs
das
frstor
(bad)
xchg
jns
out
pop
mov
movs
dec
xor
(bad)
test
inc
pop
cld
in
bound
xor
sub
aam
ds
pop
jno
push
mov
stc
sub
mov
rol
je
xor
mov
xchg
push
cs
xchg
movs
sub
addr16
adc
mov
dec
inc
adc
push
scas
dec
inc
xor
(bad)
mov
push
lea
sbb
nop
mov
je
(bad)
jae
ds
les
(bad)
jmp
ret
call
push
cmp
addr16
cld
push
cmps
xchg
sub
sahf
arpl
sub
dec
dec
or
cmc
dec
frstor
xchg
jmp
pop
and
inc
sub
push
fidiv
push
ss
push
sub
(bad)
and
lea
out
mov
nop
loope
popa
hlt
adc
call
inc
jg
pushf
mov
in
and
fmul
xor
es
scas
ret
icebp
shr
fcomip
cmps
inc
push
ds
pop
shl
mov
int3
inc
mov
loope
movs
sbb
rcr
pusha
and
push
pop
ret
or
sub
add
call
and
ins
movs
add
mov
fsub
sbb
jnp
or
mov
fdivr
push
stos
je
mov
inc
sub
mov
loopne
xchg
outs
loope
shr
ror
(bad)
cmp
mov
sub
jae
cld
scas
inc
add
bound
dec
xor
icebp
es
jb
dec
pop
scas
mov
retf
sub
sub
xor
les
inc
mov
shl
mov
sub
pop
hlt
pop
ss
repz
scas
or
outs
pusha
sub
xchg
ins
hlt
inc
xor
pusha
and
sahf
in
push
cmp
adc
mov
push
into
(bad)
scas
ret
fsubrp
aam
fucomip
jl
stos
xchg
and
mov
inc
data16
pop
fisub
push
or
in
fs
xlat
push
loope
sahf
add
clc
lahf
mov
jae
hlt
mov
and
sbb
xchg
xchg
ins
out
push
sbb
mov
int3
call
inc
movs
retf
push
sub
in
ds
lods
jp
xchg
jb
ins
dec
push
bound
dec
ja
cmove
popf
mov
sub
mov
and
dec
sub
call
jmp
or
sti
sub
adc
nop/reserved
test
out
lahf
cmps
mov
dec
dec
dec
icebp
in
ja
aas
push
and
mov
rcr
ror
jns
adc
(bad)
mov
jmp
addr16
ror
pop
out
mov
or
cmp
dec
inc
repz
ins
adc
in
out
cmps
inc
cmp
ins
nop
xchg
or
stos
cmp
mov
xchg
loopne
cmp
mov
cli
mov
retf
inc
fdiv
pop
repz
sub
fadd
out
ficom
scas
mov
int
es
imul
xchg
adc
scas
out
int
dec
jns
(bad)
test
popa
pop
fwait
mov
mov
jb
in
ret
inc
push
stos
jo
and
cmp
loop
js
mov
aas
aas
scas
add
xor
dec
pop
ins
push
sbb
xchg
aaa
mov
into
jecxz
mov
ins
xor
pop
add
pop
loop
or
mov
test
in
dec
or
xchg
push
(bad)
int
mov
ins
lds
pop
in
test
dec
in
sub
jbe
rcr
outs
cmc
dec
jp
xor
data16
mov
mov
jb
push
cmp
inc
dec
jo
cs
jns
jge
or
jp
cmc
push
imul
push
fisttp
dec
aam
dec
aad
ror
jns
lahf
xor
mov
in
mov
sub
das
mov
xor
mov
pop
rol
xchg
out
xor
push
ret
pop
ret
adc
mov
fcomp
jb
sub
push
popa
mov
bound
inc
xlat
sbb
mov
push
cmp
mov
loopne
xchg
arpl
dec
fwait
mov
bound
(bad)
or
dec
aas
sub
jle
sub
mov
push
or
pusha
in
pop
gs
mov
ret
xchg
js
test
daa
fld
or
cwde
mov
inc
(bad)
sbb
out
cld
fwait
mov
or
jge
mov
rcr
sub
shr
retf
arpl
lds
push
jo
xchg
shl
in
jecxz
inc
(bad)
rol
lahf
bound
jb
adc
lahf
loop
jecxz
mov
lock
gs
(bad)
es
leave
push
or
pop
xchg
leave
cmp
repnz
ss
jns
xchg
push
in
shr
mov
cli
lods
sbb
add
xchg
ret
cmp
jp
sti
aas
cmc
jmp
pop
pop
in
cdq
cmc
jno
or
in
scas
cmps
push
push
and
imul
shl
in
push
jl
test
sbb
cld
push
push
fistp
cwde
lds
push
imul
test
pop
sub
aad
int
fwait
and
mul
and
or
jno
add
xor
test
shr
dec
push
in
push
les
sbb
pause
data16
jno
cmp
mov
mov
fnsave
jns
mul
aaa
adc
not
add
xchg
add
dec
mov
clc
retf
mov
enter
mov
outs
cmps
aam
ds
and
xor
lods
xor
xchg
lds
inc
bound
imul
cld
inc
jnp
outs
jbe
mov
jge
repz
xor
dec
or
dec
call
sbb
pop
lahf
dec
dec
mov
ror
sbb
ror
mov
and
je
and
xchg
pop
dec
lock
clc
cmc
mov
bound
add
out
lahf
jo
jo
mov
jbe
cld
mov
cmp
je
mov
leave
div
inc
adc
adc
pop
stc
push
jecxz
in
loope
loope
xor
add
pop
fst
xchg
hlt
push
in
imul
xor
pushf
push
pop
lods
jp
push
push
mov
mov
dec
lahf
cmp
in
rol
in
rol
std
iret
add
cmp
imul
add
loope
cmp
mov
push
and
popf
or
xchg
cmp
nop
pop
lods
xchg
mov
je
(bad)
push
stos
out
jo
das
add
adc
xchg
mov
ins
push
sub
pop
sub
test
stos
or
and
loopne
es
cli
pop
outs
pop
(bad)
mov
into
scas
(bad)
(bad)
imul
rol
pop
jge
adc
or
pop
inc
xchg
push
pop
mov
ss
inc
xchg
mov
push
mov
sub
and
in
adc
test
push
and
jo
inc
retf
jg
(bad)
or
daa
movs
cwde
adc
lock
je
ficom
sbb
mov
aad
pop
mov
cli
jge
pop
inc
jnp
push
adc
mov
fst
les
mov
mov
pop
pop
or
lods
ss
cdq
in
aas
pop
out
mov
sbb
into
in
daa
xor
xlat
push
shl
xor
popa
(bad)
das
adc
and
push
stos
add
mov
xchg
sbb
sbb
sub
cmp
test
shl
dec
bnd
popa
pop
addr16
retf
push
jg
lods
stc
pusha
fcom
jbe
cmp
ins
adc
mov
pop
push
sbb
out
mov
les
mov
rol
jo
sub
(bad)
cmp
shr
mov
scas
add
arpl
ins
and
aam
mov
fadd
jnp
mov
push
pop
xor
call
mov
mov
out
rcl
ds
ins
sbb
sub
lock
mov
xchg
or
arpl
ret
push
movs
out
jl
stos
ins
push
retf
fmul
and
daa
mov
push
pusha
cmc
mov
cmp
jg
dec
enter
push
add
enter
mov
sub
jnp
pop
leave
scas
or
stos
fbld
cld
test
repz
xor
xchg
jle
inc
movs
sbb
pop
addr16
lds
stc
movs
add
stc
and
dec
outs
push
xchg
pushf
scas
popf
pop
fs
in
gs
jns
popf
mov
fxch
jg
jnp
mov
pop
xchg
ss
sub
cwde
sub
push
sbb
ret
popa
push
aam
outs
in
jne
pop
aas
aaa
and
jbe
pop
inc
inc
mov
xor
call
mov
xchg
cmps
adc
and
jne
fwait
sub
outs
mov
lock
mov
cmp
push
push
stos
stc
aas
add
idiv
dec
imul
cmp
ss
cli
movs
sar
and
pop
push
stos
jb
add
pop
movs
repz
adc
jmp
mov
rcl
loope
jecxz
push
les
push
dec
xchg
xor
inc
mov
arpl
cmc
cmp
fs
mov
out
scas
stc
pushf
(bad)
ficom
sub
leave
mov
gs
ret
faddp
adc
nop
cmps
in
inc
sbb
and
cdq
stc
pop
js
add
ins
push
(bad)
fcmovnbe
mov
shl
jnp
sub
jbe
jecxz
imul
push
sahf
and
sub
inc
add
ins
clc
push
fist
lods
mov
pop
movs
add
cmp
jne
xor
shl
daa
add
add
(bad)
jmp
xchg
in
pushf
and
sub
(bad)
call
jbe
(bad)
cmp
cmps
jmp
inc
push
test
sub
mov
test
loopne
xor
arpl
mov
das
pop
and
add
jl
icebp
xchg
mov
push
retf
xchg
cmp
es
enter
test
mov
jne
cmps
cwde
sub
sub
(bad)
and
icebp
ficom
adc
sub
call
xchg
xor
in
(bad)
adc
(bad)
jmp
in
mov
nop
lds
scas
in
push
inc
rcl
dec
aas
ret
mov
shl
es
pop
inc
stos
cld
(bad)
nop
gs
shr
dec
mov
mov
mov
add
cmc
leave
mov
jle
jmp
cwde
fsubrp
iret
stos
push
rcr
jbe
pop
xchg
mov
or
push
adc
stc
inc
push
push
retf
xor
fdivrp
int3
mov
ins
ja
inc
call
jb
(bad)
jge
add
mul
push
push
adc
pusha
xchg
and
sub
jb
jmp
aam
mov
or
pop
enter
fld
mov
lds
dec
cwde
dec
fisubr
inc
mov
sar
cmp
jl
js
jb
jo
ret
mov
and
push
add
add
or
dec
cmps
sbb
fcmovb
test
dec
retf
test
fwait
and
fcomp
fisttp
ins
dec
adc
iret
sbb
call
enter
dec
add
mov
sbb
test
mov
or
mov
imul
stc
cli
inc
lahf
loopne
cmp
cld
xchg
cmp
scas
in
shl
jmp
mov
pop
dec
mov
call
out
inc
jbe
sbb
or
mov
cld
xor
jb
es
inc
xchg
mov
pop
cmc
aam
aam
mov
pop
scas
aas
dec
ins
(bad)
push
aaa
jo
out
rcl
push
lods
dec
xchg
rcl
or
cmp
retf
movs
xchg
rcr
test
xor
push
loop
push
cmp
bound
ins
cmp
dec
fldenv
pop
push
sub
mov
add
jp
fwait
jnp
ret
int
js
aam
inc
call
repz
pusha
xor
jmp
xchg
iret
ficomp
jo
jmp
jl
loop
in
shr
xchg
dec
jnp
mov
retf
pop
in
pop
or
sub
sub
out
inc
add
ds
aam
inc
cli
cmp
je
add
ja
pop
(bad)
(bad)
repz
clc
stos
sub
mov
aam
mov
push
rol
add
dec
icebp
or
jnp
sbb
rcr
aad
scas
shl
xchg
jo
pand
adc
mov
or
loope
ror
arpl
push
adc
iret
jge
dec
cmc
leave
xor
sahf
mov
pop
addr16
xchg
fwait
retf
xchg
fs
pop
aas
and
xchg
daa
adc
adc
sahf
sbb
fidiv
xchg
mov
xor
jmp
xor
cmovnp
ss
retf
xor
(bad)
cmp
outs
mov
dec
jecxz
lods
xchg
fmul
xchg
add
mov
push
jbe
retf
aad
sub
pop
sbb
pop
push
sub
cdq
pushf
je
xor
cmps
retf
mov
xacquire
xor
inc
cmovg
pop
xor
add
and
ds
add
dec
repz
mov
fbld
movs
lar
sbb
repnz
jecxz
mov
popf
inc
sti
in
adc
xor
cli
pusha
(bad)
icebp
cmp
loop
push
adc
jne
jmp
or
cmp
mov
cmps
sub
sti
popf
ror
xor
and
popa
and
lods
je
jns
push
cmc
mov
gs
cmc
ss
cmp
(bad)
lea
mov
cli
sbb
cmp
stos
and
push
loopne
add
pop
hlt
adc
pop
and
lahf
pop
icebp
mov
repz
inc
pop
cmps
mov
mov
adc
mov
call
ja
in
mov
push
inc
dec
jo
lods
enter
xchg
rcr
jnp
addr16
pop
not
mov
lods
push
dec
stc
sub
mul
push
pop
xchg
xchg
sub
test
movs
(bad)
and
fbstp
cwde
(bad)
or
xor
sub
jae
sbb
and
jbe
inc
scas
cmp
mov
mov
enter
mov
js
retf
mov
cmp
xchg
into
xchg
test
jno
adc
sub
sbb
and
hlt
pusha
add
rol
cmps
xor
xchg
pop
mov
push
mov
pushf
jno
sub
or
lods
xor
sub
add
in
mov
hlt
ins
sub
and
xor
in
jmp
js
es
inc
gs
retf
jae
cli
(bad)
sahf
push
pusha
test
rol
fnstcw
cmps
cld
enter
les
popa
fild
xor
mov
ss
push
pop
xacquire
dec
inc
pop
mov
in
loopne
push
das
add
lds
xor
and
loope
sbb
retf
sub
cmps
inc
outs
mov
rep
out
fidivr
xor
mov
es
dec
ret
pop
addr16
scas
mov
jae
and
aam
imul
pop
sub
fwait
mov
fwait
adc
inc
pop
or
jo
or
pop
sbb
mov
adc
dec
aad
push
out
lods
test
retf
inc
scas
jae
sbb
stos
nop
dec
jbe
xchg
fs
rcr
jns
les
dec
fs
addr16
movs
ins
sahf
mov
mov
aaa
jge
enter
lods
(bad)
test
loop
lds
mov
dec
scas
xor
mov
leave
add
inc
ja
xchg
ficom
sbb
jae
mov
mov
pop
ror
inc
xchg
gs
ret
mov
xchg
sbb
inc
mov
sbb
or
ret
lods
sbb
fdiv
push
push
fidiv
int3
psrlw
or
les
aad
ins
xchg
pop
mov
jns
std
cld
jle
mov
sbb
cmp
xor
data16
fidiv
xchg
ss
stos
add
sub
outs
shl
imul
mov
mov
adc
cli
pop
stos
mov
xchg
test
cmp
fimul
jbe
int
cmp
xchg
lods
lods
movs
movs
pop
test
or
or
out
out
mov
movs
mov
push
dec
stc
fisubr
cli
aad
mov
mov
mov
add
fisubr
retf
loop
fcom
pusha
aad
add
imul
push
sbb
push
add
in
jmp
into
push
jne
fsubr
or
sar
sub
aad
jbe
dec
js
(bad)
mov
mov
xchg
repnz
imul
loop
jnp
mov
frstor
mov
scas
out
das
mov
je
ja
out
mov
fdivr
mov
adc
cmps
fmul
sahf
ins
or
jle
(bad)
mov
pop
cmp
shl
add
jbe
sbb
cli
mov
jo
adc
mov
sub
dec
es
push
or
sbb
sti
adc
jnp
sbb
ins
pop
mov
mov
or
fcomp
inc
push
lahf
sbb
in
lahf
jo
ret
out
(bad)
pushf
cmp
aas
ins
xchg
sub
pop
cmp
cmc
and
jg
push
repz
cmps
rcl
(bad)
mov
rcr
hlt
xlat
div
das
mov
inc
rcl
ja
dec
pop
fcom
loope
jg
aad
aad
test
jne
cmc
rcr
fidiv
ror
ins
mov
fcmovnu
jbe
push
fs
es
add
or
mov
xlat
test
or
fiadd
loope
dec
and
adc
stc
lea
(bad)
pop
or
das
fwait
ror
sbb
sub
out
xchg
add
popf
outs
stos
push
out
call
jl
cld
mov
xor
hlt
vpand
xchg
aad
pushf
nop
pusha
movs
imul
pushf
cmc
int3
push
or
jge
or
sub
bnd
ds
das
pop
popf
movs
mov
stos
addr16
adc
xchg
leave
xor
data16
mov
in
aas
jp
sbb
neg
ins
cmp
xchg
inc
es
scas
jge
sbb
add
jmp
jle
mov
jnp
mov
(bad)
and
adc
or
fnsetpm(287
or
mov
mov
fnstcw
push
jg
popf
repnz
movs
xchg
out
adc
(bad)
movs
push
stc
imul
into
pop
and
pop
sbb
jbe
aad
sbb
fmul
jns
aam
pop
(bad)
fist
ins
sbb
or
lods
ja
add
mov
clc
fwait
cmc
(bad)
jb
add
or
out
and
aas
ss
mov
mov
enter
in
dec
pop
cli
dec
mov
lahf
push
xchg
rcl
xchg
mov
push
and
mov
(bad)
mov
adc
ss
mov
or
sub
cdq
mov
nop
retf
pop
jp
mov
(bad)
call
inc
mov
jno
jecxz
xchg
add
iret
lock
cmp
mov
dec
xor
xchg
scas
xchg
in
rcr
hlt
push
adc
mov
pushf
into
movs
fbstp
push
adc
aam
loope
cmp
aaa
fs
call
xchg
sub
pop
push
iret
push
(bad)
adc
inc
test
and
inc
mov
(bad)
(bad)
faddp
scas
(bad)
sub
jecxz
inc
jecxz
(bad)
push
xchg
and
cdq
ret
inc
lahf
(bad)
test
inc
jg
pop
cs
stos
hlt
test
fdiv
mov
mov
dec
xor
bound
lds
push
xor
mov
movs
push
xchg
sub
pop
inc
repz
int3
jns
fimul
fsubp
dec
fldenv
sub
je
hlt
ins
xchg
dec
pop
push
ficomp
into
jl
add
add
mov
dec
mov
into
mov
sub
dec
in
les
aas
mov
loopne
dec
sub
mov
inc
dec
pop
(bad)
pushf
(bad)
inc
out
push
outs
lds
daa
call
cmc
add
loope
nop
add
loopne
movs
adc
mov
adc
iret
dec
xor
inc
repz
into
push
imul
cmp
sub
(bad)
push
jb
xchg
or
lock
jp
or
in
aam
pop
and
mov
movs
inc
or
and
jae
loope
fimul
mov
das
gs
inc
dec
mov
aas
cmp
pushf
mov
fcom
bound
fucomp
retf
sbb
xchg
cmp
lock
pop
inc
jnp
(bad)
cmp
jb
call
cld
pop
ret
inc
in
dec
pop
in
sub
rol
addr16
mov
arpl
(bad)
icebp
rcl
gs
mov
fwait
popf
or
(bad)
jmp
fwait
mov
inc
dec
sbb
(bad)
std
outs
jmp
or
sbb
mov
scas
ins
push
jmp
push
outs
test
rcr
in
and
mov
inc
int
imul
xor
cmp
push
into
cmc
dec
mov
test
fist
mov
(bad)
rcl
inc
pushf
clc
sbb
fcom
ret
mov
xor
jl
dec
test
xchg
daa
add
inc
mov
push
js
out
fld
push
xchg
int3
jecxz
push
or
inc
les
(bad)
sub
int3
lea
push
fstp
shl
xchg
xor
arpl
xchg
or
loop
imul
cld
popa
(bad)
dec
adc
in
shl
xchg
daa
cmp
inc
xchg
(bad)
and
into
in
dec
shl
lds
xchg
jo
test
aaa
popf
inc
xchg
aam
inc
bound
mov
jg
sub
fwait
pusha
imul
aaa
inc
cmp
mov
gs
mov
icebp
dec
or
cmp
inc
xor
jle
call
div
dec
xchg
mov
out
ins
mov
mov
cmp
stos
sub
rcr
inc
iret
lods
xor
inc
(bad)
sbb
or
lock
popa
lea
fcomip
pop
loope
fwait
mov
pop
xchg
mov
in
jae
xchg
repz
push
pop
ret
sub
test
stos
sub
cs
stos
cmp
xor
scas
add
jl
or
ins
cmp
shl
push
fwait
les
cmc
and
jg
sti
loope
and
cmp
inc
mov
or
jge
mov
arpl
div
and
adc
clc
mov
mov
call
dec
(bad)
jb
sysenter
neg
in
movs
jmp
fs
and
push
test
cmp
movs
icebp
mov
movs
fdivr
pop
mov
mov
pop
inc
mov
dec
int3
imul
jl
call
xchg
mov
jecxz
repz
(bad)
int3
loope
dec
cmp
xchg
jmp
adc
add
pop
pop
push
ins
pop
in
mov
and
inc
ret
pop
sbb
push
pop
dec
lods
dec
pushf
(bad)
jns
cmp
or
or
xchg
mov
ds
sub
test
jmp
jecxz
out
addr16
test
adc
pop
inc
arpl
mov
xchg
sub
sbb
inc
nop
sti
jb
add
xor
aas
cs
pop
cmp
outs
dec
movs
enter
mov
sbb
lahf
sub
xchg
inc
mov
jne
repz
or
in
push
inc
scas
retf
(bad)
push
mov
mov
pop
sub
push
sahf
retf
imul
std
cwde
and
out
add
cwde
mov
or
sar
pop
enter
jle
xchg
adc
xor
call
mov
xchg
xor
add
cmp
cmc
xor
in
xlat
icebp
push
pop
rol
fbld
movs
push
sbb
rcl
mov
and
aad
adc
and
mov
out
inc
cmp
js
push
scas
or
out
pop
popa
popf
enter
sub
es
test
cld
dec
inc
repz
or
rcl
sahf
and
add
retf
sbb
stc
mov
adc
ins
shl
push
ret
jae
out
pop
xchg
jecxz
or
inc
in
dec
stc
test
xchg
pop
jmp
mov
dec
or
pop
inc
mov
mov
mov
aad
xor
sbb
xor
sbb
xchg
ffree
movs
jno
fisubr
ja
imul
mov
in
mov
adc
sti
sub
xchg
test
lea
jecxz
repnz
mov
out
icebp
fldcw
or
in
movs
(bad)
xchg
jmp
mov
mov
jecxz
adc
jb
sub
stc
xchg
and
adc
xchg
add
sub
stos
sbb
js
(bad)
and
sar
cmps
js
ins
push
sti
cmc
cmp
xchg
aas
outs
(bad)
fcmovbe
ret
push
dec
sar
hlt
push
and
mov
jmp
jge
jnp
clc
xlat
sahf
sti
mov
adc
and
into
xchg
stos
jne
(bad)
outs
cmp
mov
aaa
movs
sbb
imul
out
jp
inc
add
add
dec
pushf
sahf
in
mov
out
jne
dec
adc
and
loopne
stc
ret
jnp
or
mov
push
pop
(bad)
scas
in
aam
test
mov
xchg
cmps
sub
mov
rcr
test
cmps
and
outs
jmp
push
in
fild
getsec
cmp
sbb
fdivr
sub
not
fs
sbb
in
xor
out
mov
call
das
int3
push
cmp
fcom
pop
aas
cmp
jg
jmp
call
in
imul
sti
sar
jae
xchg
add
call
inc
cmp
ins
ja
int
out
call
fisubr
loop
sbb
fwait
mov
push
dec
pusha
enter
aad
enter
jge
jnp
or
scas
or
xchg
mov
aam
and
sub
mov
retf
cwde
aam
dec
mov
xor
jl
out
xor
add
dec
fidiv
cmp
lods
scas
sub
jmp
mov
inc
out
lods
test
sbb
add
dec
sbb
int
adc
push
test
pop
mov
cmp
dec
xor
mov
push
shl
int3
(bad)
inc
into
sub
(bad)
or
xor
gs
inc
jb
out
lock
aam
rcl
mov
adc
mov
jno
stc
iret
sub
retf
mov
imul
scas
(bad)
xor
ja
iret
pop
loop
lahf
leave
sub
adc
imul
scas
inc
jge
sahf
jl
inc
das
sub
push
mov
or
sub
pop
into
stc
ins
(bad)
xchg
xor
and
add
fidivr
stos
daa
mov
outs
cmps
jnp
(bad)
push
dec
sbb
loopne
ins
inc
call
(bad)
rcr
mov
call
loope
cmp
(bad)
mov
pusha
hlt
mov
and
xor
ins
outs
ds
add
jecxz
shl
push
scas
push
pop
scas
sbb
xchg
sub
adc
add
stc
loope
cmp
jp
pop
xor
fimul
dec
call
or
imul
enter
lods
mov
pop
add
jg
aam
dec
cmp
or
mov
inc
test
sbb
sbb
mov
clc
mov
inc
in
adc
mov
or
sbb
shl
push
or
or
inc
cmp
jle
cwde
push
add
cmp
pop
pop
push
ja
xchg
dec
jecxz
arpl
mov
xchg
or
push
jge
jo
call
retf
ftst
pusha
fimul
(bad)
test
push
mov
sar
fimul
sbb
add
pop
jmp
push
fnsave
movs
test
cmp
out
lock
jge
js
sti
jbe
cdq
dec
xchg
ins
int3
leave
pop
inc
dec
add
sub
pop
mov
sbb
bound
aam
jecxz
mov
inc
imul
jns
fdivr
dec
ins
retf
and
sahf
sbb
inc
loop
mov
retf
push
jno
test
aaa
cmp
loop
jmp
inc
xor
jmp
mov
push
jno
in
inc
cmp
fucom
sbb
mov
out
xor
daa
cmp
test
adc
adc
daa
inc
mov
push
add
jns
sbb
xor
inc
pusha
pop
xor
sbb
dec
popa
sub
pop
pusha
dec
sub
pop
test
test
ret
dec
push
popa
out
repz
stos
and
lock
fld
dec
pop
mov
popf
cmp
mov
sub
push
movs
mov
inc
sub
loop
or
jo
mov
iret
int
add
pop
xchg
lea
add
mov
or
ss
leave
jle
in
jg
fldenv
pop
movs
js
lds
add
std
test
mov
rcr
jmp
and
or
iret
ret
sti
ss
push
mov
sub
shr
test
loopne
int
(bad)
jp
sbb
lea
adc
mov
cmps
jo
(bad)
pop
jg
rol
jge
add
loope
mov
sbb
pop
ret
sub
mov
inc
in
sti
push
dec
fdivr
(bad)
fdiv
xchg
mov
push
inc
out
bsr
mov
pop
pop
xor
or
sbb
jmp
cmp
(bad)
imul
int3
pop
repz
mov
fstp
jmp
mov
pop
jge
pop
mov
in
and
js
or
jbe
gs
inc
iret
mov
aaa
and
push
sub
push
mov
mov
sbb
(bad)
icebp
out
jo
pop
sar
js
ja
call
jb
daa
or
push
xchg
test
inc
sar
jecxz
mov
and
xchg
adc
dec
shr
xchg
and
xlat
int3
add
inc
mov
(bad)
int3
jmp
mov
call
ins
stc
test
ins
jecxz
les
repz
popa
lods
(bad)
rol
(bad)
push
aad
jne
daa
dec
xchg
or
xor
push
sbb
repz
xchg
mov
data16
or
cmp
adc
lods
and
push
sbb
pop
adc
sahf
(bad)
aad
mov
rcr
mov
enter
fstp
push
imul
(bad)
add
test
jne
lea
add
mov
int3
ds
sti
dec
addr16
js
das
cmp
cmps
in
sub
scas
sbb
xchg
xchg
mov
push
idiv
je
cmps
scas
outs
ror
xchg
push
push
push
not
and
dec
sub
push
dec
jg
mov
nop
adc
ror
jne
inc
xchg
aas
mov
test
(bad)
jo
mov
inc
jp
iret
ins
out
retf
pop
sbb
test
push
xor
inc
jno
xor
push
xor
je
fbld
jg
sub
int3
rcl
(bad)
ficom
lods
mov
mov
and
repz
xor
cmp
jg
lahf
stc
mov
(bad)
sub
loope
jns
jl
cmps
lods
mov
pop
push
pop
gs
and
mov
(bad)
sub
neg
or
push
dec
sub
(bad)
out
or
test
test
or
cmp
loope
out
jge
(bad)
cmp
sbb
push
cmp
cmps
daa
repnz
add
jns
jbe
mov
sbb
mov
fs
push
jbe
push
imul
add
jnp
sbb
clc
(bad)
mul
fnstenv
mov
xchg
mov
dec
(bad)
std
movhps
add
out
shr
stc
(bad)
xor
mov
push
aas
loopne
call
shl
fs
(bad)
in
loope
out
jp
call
fcmovb
ret
jne
cld
mov
(bad)
out
out
and
dec
sub
ret
mov
add
lahf
inc
xchg
xchg
jbe
pop
jl
retf
enter
out
popf
fs
sbb
test
mov
sbb
(bad)
xchg
mov
inc
xchg
push
push
stos
adc
mov
(bad)
push
pop
mov
mov
retf
pop
(bad)
or
bound
mov
and
mov
in
push
dec
hlt
push
cmp
cmp
or
dec
lea
dec
mov
(bad)
adc
out
cmp
sbb
out
test
and
jecxz
mov
ror
stc
cmps
xlat
adc
xor
sbb
movs
setl
mov
mov
xlat
imul
scas
(bad)
mov
adc
test
enter
push
rol
xchg
popf
lods
sbb
or
pop
rol
jg
movs
jle
stc
jns
sub
sub
mov
push
addr16
push
or
ficom
xor
cmp
add
dec
cwde
daa
mov
inc
movs
daa
and
ins
ret
jmp
arpl
not
fstp
xor
jbe
aaa
es
dec
push
push
data16
popf
das
mov
and
test
push
mov
push
add
sbb
outs
adc
lahf
sub
jmp
nop
int3
fstp
and
push
push
and
lods
jp
sbb
or
sbb
xchg
mov
jmp
jne
push
xchg
pop
cmc
xchg
mov
retf
sub
sbb
(bad)
rol
cld
adc
neg
xlat
loopne
fwait
jmp
stc
dec
data16
push
out
mov
out
das
sub
aad
mov
ret
dec
xor
int
cs
fstp
dec
pop
pop
retf
in
and
pushf
jno
hlt
imul
xor
and
bswap
pop
mov
ror
add
rcr
xor
add
data16
pop
cmp
xor
inc
movs
jle
mov
int
adc
sbb
mov
ins
sub
sbb
scas
jae
scas
into
(bad)
out
scas
loope
rcr
mov
push
xchg
repnz
xor
jle
shl
clc
mov
add
int3
xor
xor
cmp
adc
jbe
sbb
fbld
inc
lods
stc
push
xchg
sbb
sbb
jnp
add
mov
xlat
adc
or
cmp
mov
push
push
icebp
push
lock
sbb
loopne
sub
jmp
icebp
dec
aad
push
outs
lea
inc
cmp
iret
mov
fist
test
add
mov
inc
push
ds
gs
inc
fistp
jmp
cmp
imul
mov
add
leave
loope
or
sub
aam
or
cmp
clc
sbb
jecxz
push
loopne
fdivr
ja
sbb
jno
inc
jns
pop
push
popf
pop
push
test
dec
push
pop
push
aad
mov
jb
fisttp
int
iret
xor
pop
(bad)
and
ins
sbb
push
hlt
add
jns
cmp
and
xchg
adc
in
fistp
mov
cli
fst
jno
cmc
(bad)
sub
dec
jecxz
sub
mov
pop
jmp
mov
rcl
jge
(bad)
repnz
sar
cmps
in
or
stos
inc
mov
fiadd
mov
inc
push
jg
out
dec
mov
sub
inc
into
fdiv
inc
inc
sub
pop
mov
int
fs
loopne
adc
sbb
out
dec
std
push
mov
or
sar
rol
or
mov
or
(bad)
ficomp
jae
or
adc
popa
arpl
sahf
out
add
jbe
cmp
cmp
ficom
out
test
mov
fidiv
aad
je
xchg
div
pop
sub
xor
retf
xchg
mov
shl
inc
sbb
and
sub
inc
(bad)
sbb
enter
in
aaa
icebp
mov
and
pusha
fst
pop
aam
adc
ret
mov
movs
ja
xor
fs
push
push
jge
or
and
(bad)
cmp
jge
push
(bad)
jle
neg
pop
mov
sub
test
stc
mov
fcom
cmp
repz
arpl
mov
cmp
in
(bad)
mov
mov
loopne
repz
lods
lds
lock
ds
mov
xchg
jle
repnz
jge
daa
and
lock
cmp
inc
dec
in
jp
cli
call
xor
cld
cmps
les
mov
xor
or
add
inc
outs
pop
out
push
pop
imul
div
ficomp
adc
cmp
in
mov
pop
mov
lea
push
(bad)
test
push
dec
shl
and
jmp
pop
jbe
mov
adc
cmp
or
call
push
sbb
stc
push
out
fcmovnu
ret
xor
daa
repnz
mov
xchg
sub
cwde
adc
cs
ins
loope
sbb
je
pop
sub
dec
leave
repz
out
sbb
and
call
in
loope
loop
je
inc
in
retf
xor
movq
and
jmp
push
sbb
in
outs
adc
cli
ds
retf
mov
cmps
or
in
shl
adc
mov
lods
inc
int
jb
and
out
sub
mov
xchg
nop
mov
cwde
adc
nop
xor
sub
fiadd
push
rcl
dec
jmp
repz
or
outs
and
jl
mov
adc
call
fld
inc
inc
push
call
sub
mov
cld
scas
adc
cld
jns
add
push
(bad)
mov
xor
loopne
mov
call
leave
gs
bound
popa
mov
mov
(bad)
xchg
les
xor
leave
mov
addr16
jb
lahf
aad
inc
jp
sbb
adc
mov
sub
(bad)
fnstcw
push
add
ins
mov
movs
outs
mov
push
inc
movs
jbe
adc
xor
adc
cli
inc
sub
and
mov
(bad)
jmp
xchg
adc
xor
xchg
and
imul
lea
movs
std
sti
sbb
fidivr
pop
sub
mov
(bad)
iret
sbb
imul
or
retf
mov
arpl
pop
pop
and
xor
or
cmp
pop
je
out
cmc
in
xor
imul
adc
or
lds
adc
imul
lods
or
cmp
mov
or
push
adc
leave
mov
push
pop
retf
xor
xchg
adc
sahf
test
out
xchg
inc
pop
or
lods
mov
jo
push
popf
xor
ffreep
movs
jle
adc
rcr
xchg
outs
aas
stc
mov
call
and
push
sbb
xchg
ins
add
mov
sbb
inc
clc
mov
dec
lock
mov
xchg
pop
xchg
fld
push
clc
(bad)
popa
mov
jnp
hlt
sbb
movs
add
adc
dec
nop
retf
mov
iret
sti
cwde
adc
xchg
pop
mov
aam
icebp
stos
pop
or
fisttp
in
dec
sbb
jo
xchg
jae
outs
push
jg
mov
pop
pop
mov
outs
scas
cmps
cmp
mov
pop
or
xor
pop
cmps
retf
mov
shl
xchg
les
jge
ja
mov
mov
or
jl
jns
push
mov
pop
test
sbb
xchg
rcr
xor
xchg
xlat
or
inc
jge
aad
pop
enter
pop
gs
cmps
pop
sub
(bad)
iret
cs
into
or
dec
into
cmps
out
les
outs
and
mov
jns
repz
imul
jl
mov
xor
add
gs
mov
mov
pop
jae
stc
inc
stc
push
sub
mov
mov
lods
jmp
jg
mov
bnd
jg
adc
mov
les
sub
mov
and
mov
jg
call
mov
outs
xchg
mov
sti
mov
cwde
fcomp
popf
out
popa
mov
repnz
bound
fiadd
xchg
in
in
mov
pop
movs
dec
xlat
out
cli
aam
aas
lods
mov
jbe
pop
mov
pop
lea
cmp
out
dec
jl
add
jae
repz
dec
shl
jecxz
ror
inc
mov
push
xchg
pop
push
cmp
cmp
repnz
or
(bad)
jg
(bad)
jno
dec
cdq
mov
in
(bad)
mov
aas
call
dec
push
jb
popa
mov
les
dec
add
xor
stos
mov
sbb
leave
nop
out
add
cmp
inc
in
xor
movs
add
fsub
or
sahf
retf
mov
dec
mov
mov
push
jns
fiadd
test
jae
(bad)
mov
mov
pop
pop
mov
cs
(bad)
push
mov
push
mov
push
cmc
mov
outs
jae
add
scas
aas
sahf
shl
jo
xor
mov
imul
lds
sub
in
fstp
inc
ja
dec
or
jecxz
loop
pop
inc
cmp
xor
(bad)
fisttp
(bad)
das
fcomp
pop
cmp
aaa
push
ja
test
sbb
shr
add
jmp
jnp
js
or
clc
pop
fisub
xchg
clc
or
xchg
pop
clc
fidivr
mov
dec
mov
paddd
pop
dec
inc
test
pop
sahf
std
push
mov
lods
push
cli
pusha
pop
rol
xchg
test
inc
loope
mov
adc
xchg
pop
test
in
mov
adc
inc
iret
dec
aas
pop
sub
aas
icebp
std
mov
popa
je
sbb
push
pusha
jb
xor
sahf
ror
imul
jb
pusha
out
mov
pop
in
in
add
loop
iret
xchg
inc
mov
xor
add
xchg
push
mov
aas
cwde
sbb
fdiv
xor
in
xlat
sub
and
shrd
mov
sub
xchg
aas
pop
iret
popf
lods
and
cmp
sub
push
mov
jmp
mov
cmp
popf
push
leave
or
jno
pop
or
mov
out
ss
sbb
(bad)
fs
jae
pop
jo
out
push
and
mov
inc
mov
xchg
repnz
mov
cld
shr
(bad)
sbb
std
mov
aaa
rol
fsub
jno
pop
fs
push
fist
dec
cmp
je
cmp
push
dec
inc
mov
sbb
jbe
inc
mov
and
imul
pushf
add
add
inc
shr
dec
jae
xchg
add
stos
retf
adc
push
int3
xlat
mov
in
scas
dec
jo
or
xchg
xchg
aad
inc
push
mov
sub
iret
daa
cmp
mov
mov
repz
pop
mov
ins
push
es
iret
jns
sbb
ins
das
and
push
pushf
mov
fisttp
cmps
sbb
inc
inc
push
repz
pop
jbe
shr
push
add
add
xchg
inc
xlat
xchg
(bad)
int3
out
or
mov
into
adc
inc
cmp
push
movs
xor
popf
sar
inc
xchg
bound
rol
dec
mov
call
and
add
pop
test
neg
mov
arpl
adc
in
cdq
inc
int
mov
cmova
mov
retf
dec
sub
dec
in
sub
and
in
sbb
inc
push
test
popf
iret
push
sub
xor
xor
loopne
ins
jno
fsub
ins
xchg
push
dec
fs
xor
jl
ficom
fnstenv
fwait
dec
shr
retf
call
inc
fsubr
sbb
add
push
shr
lahf
inc
xchg
dec
stos
dec
sbb
js
add
jne
popf
push
jmp
test
or
loopne
adc
popa
not
mov
out
push
cs
mov
imul
push
sbb
mov
or
in
pop
push
das
jp
ficomp
xchg
mov
sub
ins
fistp
lods
xchg
sub
imul
cld
fdiv
outs
push
jae
das
ret
inc
mov
dec
push
imul
add
mov
xchg
add
das
lea
nop
dec
aaa
addr16
add
jb
fs
xor
xchg
lahf
cmp
(bad)
cld
jnp
inc
aas
in
out
std
into
pop
and
cli
pop
pop
sbb
retf
mov
out
sbb
cmp
in
mov
test
ins
push
out
xchg
push
lods
sub
xchg
mov
popf
fiadd
jo
retf
jb
repnz
sub
push
movs
sbb
xor
or
cmp
sbb
repnz
sbb
sub
pop
jbe
ja
nop
iret
mov
stc
ds
das
xor
adc
out
pop
loope
in
ror
push
pop
push
mov
pop
mov
cli
and
cmp
(bad)
ror
test
mov
jne
dec
pop
je
gs
data16
das
dec
call
in
xor
pop
cmp
or
repz
mov
xor
xchg
aad
(bad)
pop
test
xor
mov
aad
sub
cmp
add
dec
dec
lods
ja
ds
fcom
sbb
push
add
push
leave
dec
cwde
sub
push
in
mov
scas
inc
mov
aas
aas
cmp
js
js
add
fs
pop
sbb
push
or
pop
iret
ret
retf
call
test
loope
mov
mov
jle
test
pop
into
(bad)
adc
(bad)
imul
adc
xchg
shr
out
sub
adc
shl
das
inc
sub
rol
add
(bad)
cmp
xlat
pop
pop
push
or
jbe
div
movs
aad
mov
pushf
lods
movs
daa
aam
cmps
jl
mov
and
imul
retf
cmc
inc
xchg
xor
push
rol
xchg
cmp
adc
xor
mov
mov
cmps
js
mov
ja
ror
popf
add
leave
cmp
jmp
inc
bound
idiv
push
lea
cmc
or
enter
xor
aas
jg
mov
(bad)
sbb
add
cmp
cwde
cmp
movs
es
mov
out
ds
(bad)
in
add
rcl
retf
aad
xor
ja
lea
ret
int3
mov
out
out
inc
icebp
pop
mov
test
ins
lahf
inc
sub
shr
or
aad
jne
mov
adc
jns
sub
or
pop
(bad)
stc
xor
aaa
call
call
stos
dec
data16
mul
xor
cmp
fstp
call
mov
stos
movs
push
fdivr
int
test
rcl
cmp
push
icebp
dec
mov
test
mov
pushf
into
mov
fstp
cmc
sbb
mov
fcomp
daa
dec
mov
jmp
enter
push
jle
bound
addr16
ins
push
push
(bad)
loopne
jl
repnz
jg
push
cli
mov
hlt
js
fldenv
dec
xor
data16
ins
jo
add
sub
stos
in
or
(bad)
movs
ja
scas
push
iret
aad
or
mov
sub
xchg
pop
and
out
imul
jae
popa
pop
xchg
sbb
mov
pop
xchg
xchg
(bad)
lock
inc
rol
inc
cmp
int3
popa
pop
pop
adc
or
adc
xor
int
inc
jecxz
jle
aaa
repz
xchg
jecxz
adc
inc
inc
push
retf
clc
mov
push
or
pop
or
add
call
jge
push
mov
jbe
mov
pop
adc
pop
jbe
mov
mov
adc
leave
fcomp
aam
xchg
push
xchg
ret
popf
pop
xchg
call
xchg
jp
and
and
or
jns
mov
mov
loop
(bad)
hlt
add
sub
mov
and
adc
push
inc
cmps
xchg
sub
cmp
jbe
jp
mov
push
xor
arpl
adc
xchg
and
ficomp
rol
cld
add
sbb
add
ins
mov
mov
pop
cmp
lock
pushf
(bad)
mov
xor
lock
sbb
jmp
inc
into
sahf
es
pop
mov
cmps
ss
and
sbb
in
push
repnz
enter
aam
cld
sub
xchg
jmp
adc
mov
jno
xchg
aad
fisttp
sbb
xchg
mov
inc
lods
cmps
es
into
cmps
push
ins
mov
pop
call
pop
mov
test
adc
data16
dec
int
call
and
icebp
dec
push
popf
mov
ror
in
mov
jno
lds
cwde
inc
add
(bad)
daa
xor
test
int3
mov
scas
mov
in
and
lods
xchg
daa
mov
loopne
outs
leave
lods
es
mov
mov
jo
push
mov
bnd
test
outs
imul
jb
adc
pop
pop
fiadd
mov
ja
xchg
cmp
rcl
sub
sbb
jmp
add
sbb
loopne
adc
cmp
aad
cli
fwait
dec
xor
stos
imul
in
(bad)
int
aam
adc
xor
out
inc
xchg
xchg
aad
push
dec
fsub
daa
jns
or
lods
and
fwait
cmp
adc
dec
ret
cli
xchg
loope
mov
or
add
and
push
mov
sub
cmp
dec
dec
es
(bad)
and
jns
cmp
add
push
bound
push
inc
push
fucomi
shl
pop
mov
in
cmps
xlat
cmps
aam
jle
add
hlt
cmp
into
mov
or
dec
outs
mov
sub
int
fidiv
xchg
add
mov
push
into
push
arpl
jb
cmp
call
mov
jnp
imul
add
jmp
jmp
into
add
out
and
cwde
mov
jb
mov
cli
adc
repnz
setns
mov
add
cmps
push
xchg
idiv
and
mov
aam
pop
add
xchg
test
mov
xor
fcom
xor
push
outs
mov
xchg
mov
push
jp
push
xor
push
mov
cwde
push
mov
retf
cdq
or
lock
push
test
das
jecxz
push
popw
movs
and
lea
es
jge
sbb
clc
push
xor
sbb
adc
arpl
add
test
adc
hlt
call
sub
outs
in
jmp
pop
xor
jae
(bad)
sbb
repz
and
sbb
popa
inc
mov
shl
int3
jmp
lahf
add
jmp
lods
add
push
pop
cld
ficomp
dec
push
sti
pop
ret
and
or
mov
test
dec
dec
int
lahf
cs
push
movs
inc
push
inc
loopne
mov
push
stc
mov
mov
fstp
int
pmaxub
arpl
xlat
or
adc
xor
fwait
xchg
movs
inc
scas
faddp
fsubp
pop
mov
xor
stc
or
inc
pushf
ret
pop
bsf
push
or
xchg
pop
pop
inc
das
jmp
sbb
clc
pushf
out
mov
imul
test
mov
add
sbb
jmp
sahf
dec
loop
or
(bad)
js
mov
arpl
xchg
push
lea
xchg
inc
jle
and
ins
pop
jl
scas
add
jle
adc
mov
xchg
sbb
fadd
movs
and
push
(bad)
or
dec
out
inc
xchg
movs
rcl
test
or
pop
xor
jmp
sub
push
test
loop
sbb
lea
inc
mov
xor
xchg
add
int
xlat
(bad)
jmp
dec
das
jbe
cmps
cmps
pop
sub
xor
pop
mov
fldcw
push
test
sub
aaa
test
ss
cmp
inc
enter
cdq
pop
aam
enter
into
movs
test
aam
fisttp
clc
sahf
adc
inc
mov
aad
mov
aam
mov
and
cs
pop
imul
lods
not
ins
aam
gs
cmp
out
push
out
test
xor
mov
lds
lods
push
dec
jge
adc
add
xor
cmc
mov
(bad)
mov
icebp
jmp
sti
sbb
iret
jecxz
fdiv
scas
lods
mov
adc
mov
cmp
ror
fcom
ds
std
jbe
in
mov
sub
xor
lds
mov
mov
cs
ins
add
cmc
mov
(bad)
in
xchg
hlt
enter
push
movs
shl
add
cmps
mov
sub
sub
lds
dec
(bad)
mov
mov
mov
inc
daa
(bad)
out
and
popa
in
neg
jl
das
ins
movs
and
icebp
out
push
mov
mov
mov
sahf
cmps
and
mov
int
push
add
aas
int3
mov
bound
mov
pop
aam
push
jo
in
mov
inc
adc
mov
sub
in
lock
out
dec
rcl
xor
test
cmps
retf
shl
cmc
jecxz
mov
addr16
movs
and
dec
ins
xlat
and
popa
movs
or
cwde
fst
clc
cmp
sbb
or
mov
sbb
and
and
add
out
adc
pusha
pushf
popf
adc
add
movs
addr16
or
shl
movs
test
mov
cmps
movs
jp
cmp
cli
fmulp
cmps
imul
lods
fadd
mov
mov
pop
cmc
retf
retf
js
cvtdq2ps
pop
push
jle
mov
and
xchg
add
adc
pop
test
sbb
mov
push
sahf
popf
or
dec
mov
out
or
stos
in
pop
mov
inc
and
cmps
jl
enter
scas
addr16
sub
add
js
cmp
push
rcl
mov
or
les
int3
xchg
xchg
sub
mov
or
cwde
fmul
mov
add
xchg
daa
dec
jmp
mov
std
pop
out
test
scas
leave
mov
imul
ret
and
(bad)
fs
cmp
cdq
ins
rcr
mov
(bad)
idiv
in
fstp
mov
or
dec
cmps
scas
mov
push
ret
in
pop
jg
jns
mov
fst
sub
mov
fld
mov
or
or
mov
jmp
xchg
out
or
ds
sahf
aas
mov
not
push
in
dec
nop
push
inc
retf
leave
dec
dec
rcl
cmp
xchg
or
inc
dec
push
mov
shl
mov
jnp
push
push
(bad)
clc
mov
cld
loopne
xchg
gs
es
movq
and
add
lahf
repnz
and
popa
call
outs
dec
sbb
adc
scas
jbe
xor
adc
lds
mov
mov
scas
dec
jge
add
dec
fstp
test
jo
fadd
mov
ins
sub
jne
inc
aaa
and
jns
mov
cmc
outs
ja
(bad)
out
out
loope
cmc
xchg
cmp
or
mov
rcr
fistp
movs
or
mov
mov
mov
out
std
stos
call
mov
sub
or
inc
ss
xor
inc
push
push
inc
mov
inc
xchg
cmps
sbb
or
pop
(bad)
pusha
mov
rcr
sub
imul
mov
sbb
mov
and
mov
jmp
clc
test
dec
and
inc
ja
out
test
rcl
mov
retf
mov
sub
push
add
push
add
add
fs
(bad)
aam
(bad)
cmps
movs
out
mov
out
xor
in
(bad)
push
jnp
mov
ret
loope
jecxz
shl
mov
repz
aas
add
fidivr
mov
daa
mov
repnz
dec
pop
and
(bad)
jl
aad
mov
and
stos
and
xor
add
out
lods
stc
ficomp
pop
cmp
pop
mov
push
cmp
xor
pop
pop
xchg
cmp
fnsetpm(287
cmps
lock
and
fst
xchg
(bad)
mov
loope
inc
clc
sbb
test
ror
sub
xlat
retf
jl
add
sub
push
sbb
or
fs
mov
jle
adc
clc
bswap
push
add
bound
fs
shl
fwait
ins
neg
inc
lods
sub
dec
scas
jae
leave
pushf
jmp
sbb
rol
mov
xlat
bound
repnz
test
ds
shl
fwait
jge
pop
pop
mov
mov
das
test
call
mov
bnd
sub
push
int3
mov
inc
fimul
cmp
int
shl
int3
or
icebp
xchg
jmp
mov
and
cdq
cmp
dec
xor
push
lods
pop
push
ds
int
xchg
sub
xor
call
rcl
ret
mov
or
cmp
mov
loop
sbb
shl
test
inc
sub
(bad)
lods
xlat
sub
dec
call
pop
sub
hlt
stos
sbb
sbb
and
mov
(bad)
dec
xchg
cmp
fidivr
pop
call
sub
in
nop
add
xchg
popa
outs
daa
fidivr
iret
push
std
and
jbe
cmp
jne
or
lock
test
push
aas
push
lds
ret
outs
aas
sbb
outs
adc
lahf
cli
cmp
pop
addr16
ins
jo
ss
loopne
xchg
mov
hlt
xchg
inc
sar
xor
stos
and
adc
int
iret
dec
fsubr
fdivr
lock
aad
dec
shr
push
sub
xchg
sbb
std
fstp
push
add
adc
or
dec
cs
cdq
mov
push
mov
push
jns
cmp
repnz
lock
test
push
cmp
mov
or
mov
into
in
aas
mov
xor
shr
inc
xor
cmp
xchg
out
retf
dec
ss
jecxz
cli
xchg
jno
pop
push
ffree
cwde
jecxz
lea
xchg
mov
enter
xor
mov
sub
push
jns
(bad)
mov
cmp
mov
in
pushf
out
or
pop
retf
(bad)
dec
push
xor
dec
adc
dec
and
mov
jle
xor
aas
mov
lods
pop
mov
jl
(bad)
ja
inc
int3
enter
out
iret
add
sub
stos
and
bound
arpl
neg
sbb
inc
or
fsub
dec
dec
mov
mov
fidiv
movs
fs
or
ror
add
daa
inc
aad
xchg
gs
pushf
pop
dec
and
sub
shl
loop
push
imul
je
fsubr
int3
test
jae
popf
ficomp
inc
adc
scas
bound
test
jmp
cmc
cmp
loope
mov
mov
mov
and
or
mov
pop
pop
mov
and
pop
in
mov
aad
lea
daa
mov
pushf
sub
sbb
mov
inc
(bad)
mov
and
pushf
pop
pop
shl
xchg
popa
xor
push
pop
imul
jno
mov
sbb
add
lahf
pop
shl
push
jne
mov
mov
es
cmc
sbb
cmps
jbe
jnp
and
repz
add
or
arpl
test
fiadd
lds
inc
ret
sub
cmp
add
and
dec
mov
lock
(bad)
adc
mov
xchg
jp
hlt
pusha
pop
retf
push
cwde
dec
dec
js
pop
or
dec
aad
ficom
pop
adc
cdq
sbb
nop
lahf
push
int3
mov
cmp
cmp
leave
sbb
mov
xchg
jmp
and
and
test
stc
mov
pop
and
or
jg
mov
movs
std
or
fnstcw
inc
push
(bad)
lahf
test
(bad)
lods
dec
(bad)
pop
test
dec
aam
adc
jmp
mov
addr16
jmp
pushf
sub
xchg
xchg
mov
mov
pop
adc
ret
mov
mov
sub
cs
sbb
sti
sub
hlt
jge
xchg
imul
add
loop
mov
jbe
and
inc
xchg
rol
xchg
in
out
dec
loop
fisubr
cmp
jp
pusha
push
imul
jmp
cmc
xchg
pop
mov
imul
add
retf
in
aam
sub
xor
dec
scas
dec
jno
imul
mov
mov
add
mov
mov
leave
or
(bad)
or
jp
jo
add
ja
mov
enter
nop
xchg
mov
cs
sub
fs
mov
fld
xchg
xchg
in
xor
pop
ins
push
and
push
stos
push
pop
les
cmp
ret
call
inc
or
push
mov
fsubr
ss
sub
mov
iret
jb
test
out
cmp
(bad)
jno
pushf
and
icebp
jl
pop
mov
push
jp
daa
mov
sbb
mov
xchg
daa
retf
sbb
adc
stos
cmps
or
repnz
loopne
mov
movs
and
cli
xor
xor
add
arpl
ins
fist
push
mov
lock
lock
jno
leave
mov
dec
cmp
mov
out
fimul
cdq
inc
and
mov
push
fdivr
xchg
sbb
(bad)
hlt
jae
scas
retf
mov
iret
lock
pop
add
shr
scas
das
out
imul
push
or
lods
ror
cmps
inc
cs
out
or
icebp
pop
clc
mov
sahf
outs
xor
dec
dec
in
mov
jg
sbb
std
iret
inc
enter
adc
loopne
sbb
aam
sub
ror
adc
mov
mov
xor
sub
push
aam
cmc
loope
cmp
cld
or
pushf
mov
mov
xchg
xchg
(bad)
std
aaa
xor
mov
shl
sbb
xchg
push
or
xor
scas
repnz
test
add
cmp
add
push
lods
cld
fs
xchg
aam
pop
movs
xchg
fiadd
hlt
js
cmp
int
add
ror
mov
jnp
mov
push
out
add
test
leave
loop
cmp
inc
push
ja
imul
jl
rcr
icebp
out
lods
adc
lahf
cmp
xchg
rol
push
xchg
cmp
mul
pop
popa
in
sbb
mov
xchg
loopne
jno
dec
fdivr
call
jne
jp
mov
jbe
lods
mov
mov
outs
mov
pop
shl
lea
enter
mov
test
je
aam
pop
inc
mov
jle
das
gs
addr16
out
jno
pop
pushf
gs
cmp
jnp
fwait
adc
mov
cmps
cmp
enter
popf
lods
mov
pcmpeqb
dec
inc
aas
int3
cmp
sub
scas
sbb
arpl
(bad)
ret
xchg
or
jo
jae
fimul
xor
ja
lods
ins
sti
test
and
lock
xchg
das
cmp
mov
cld
in
push
inc
mov
inc
mov
rcr
aad
shr
ja
or
out
xchg
mov
retf
movs
add
(bad)
cmps
add
xchg
retf
push
(bad)
xchg
push
dec
sub
out
aaa
xor
test
mov
push
push
push
jae
ins
repnz
cmps
retf
sbb
xchg
or
jmp
push
sbb
das
pop
(bad)
cmps
cmps
ret
sub
adc
cmp
pop
cmc
call
es
add
hlt
mov
and
fild
in
hlt
xchg
push
sub
pop
mov
das
mov
dec
sbb
inc
aam
leave
xchg
into
scas
outs
jl
xchg
outs
sub
xor
loope
dec
mov
mov
(bad)
icebp
das
push
arpl
xchg
test
lds
pop
mov
sub
sub
add
fimul
push
push
(bad)
xor
sbb
jbe
fs
mov
fnstsw
cmps
pop
into
adc
jae
ds
shr
aam
fadd
ins
lock
add
(bad)
xor
dec
push
push
test
pop
lds
repnz
push
dec
xor
sub
mov
sahf
sahf
mov
and
or
push
mov
outs
sub
sahf
push
sub
push
or
sahf
pop
pop
or
push
mov
(bad)
call
xchg
jecxz
(bad)
fwait
ins
pushf
mov
in
cmp
push
xchg
in
pop
leave
stc
sbb
cmps
adc
jmp
test
push
pop
arpl
imul
jp
(bad)
hlt
pushf
xchg
(bad)
int3
test
popf
and
test
repnz
daa
xchg
hlt
popa
pop
ss
imul
xchg
dec
add
cwde
or
cs
(bad)
mov
add
cmps
push
cmp
cmc
js
pop
sbb
cmp
push
cmp
add
fnstcw
inc
jl
or
lods
test
xor
mov
pop
cmp
jl
jno
sub
in
mov
cmps
imul
mov
mov
das
push
hlt
sti
pop
push
xor
(bad)
sahf
push
arpl
cmp
sbb
jmp
adc
mov
mov
out
inc
or
ret
pop
pop
in
test
pusha
adc
or
jg
hlt
xchg
cld
sbb
sar
shl
ja
test
fisttp
test
movs
pop
(bad)
das
adc
adc
add
fwait
sub
out
and
adc
cmp
push
scas
dec
mov
jmp
ficom
cmps
push
fmul
cmp
dec
shl
loope
movs
outs
xor
jae
and
rol
push
xchg
dec
sbb
and
mov
stc
les
arpl
mov
pop
sahf
dec
adc
fidivr
mov
dec
jbe
(bad)
(bad)
sbb
rcl
mov
adc
(bad)
mov
(bad)
sbb
xor
cld
inc
cmps
inc
out
movs
pop
pop
hlt
scas
dec
xor
adc
test
scas
mov
arpl
aaa
xchg
jle
js
jle
ret
xor
inc
lods
cmc
rol
push
mov
je
icebp
leave
pusha
xchg
or
push
xchg
mov
mov
sbb
aam
mov
sub
sub
push
sti
push
or
faddp
aaa
or
rol
fidivr
mov
mov
jb
adc
pusha
or
stc
jl
cdq
sbb
pop
not
jne
inc
daa
jp
mov
stos
inc
call
inc
out
jo
xchg
sub
test
in
xor
mov
pop
aad
push
inc
sub
sbb
rcl
in
sbb
sbb
mov
mov
ss
push
jb
ins
xchg
mov
lods
xchg
scas
dec
and
mov
push
jnp
imul
and
xor
lods
fdivr
mov
push
cmps
xor
or
mov
mov
(bad)
gs
and
ret
fisubr
cmps
push
cli
push
jg
and
dec
xor
ret
jb
dec
mov
sub
aaa
mov
mov
jge
addr16
adc
repz
cmp
or
or
jp
aaa
retf
iretw
in
rcl
push
xor
push
mov
pop
jne
int
mov
cmc
dec
ret
mov
cmp
inc
adc
es
call
out
inc
push
inc
mov
ret
scas
add
dec
aad
add
popf
push
lods
(bad)
adc
adc
imul
std
adc
sub
mov
movs
inc
(bad)
loopne
fcomp
cwde
repz
xchg
push
inc
dec
mov
cmp
mov
daa
xor
cmps
and
mov
pop
pop
xchg
push
mov
and
push
jg
das
cdq
movs
in
fistp
or
jnp
push
push
leave
mov
ror
out
pop
hlt
add
push
or
(bad)
push
jp
adc
pop
clc
jmp
and
mov
mov
or
and
and
xchg
repz
sub
jmp
cmps
mov
push
shl
or
jg
in
xchg
mov
sub
and
rol
fsubr
shl
out
mov
pop
call
pop
jne
pushf
movs
xchg
adc
jge
mov
lock
pop
(bad)
ins
sahf
dec
sar
stc
outs
int
push
mov
lds
fisub
jle
es
pop
test
repz
jno
add
sbb
(bad)
aas
mov
adc
and
es
pop
in
mov
ins
mov
lds
xchg
mov
dec
sub
sub
aad
outs
xchg
jb
mov
fs
popa
movs
push
jecxz
loope
fucom
test
out
jp
pop
call
mov
fwait
xlat
ins
push
out
iret
jno
popf
xchg
repnz
mov
pop
pop
jp
inc
xor
add
aaa
in
lods
dec
xchg
or
jmp
cdq
ja
add
(bad)
and
jecxz
dec
mov
xchg
in
rcr
pusha
push
int
out
lods
mov
or
mov
lock
push
xchg
in
jo
js
nop
jae
(bad)
pop
adc
or
push
fsubrp
push
and
xchg
xor
shl
gs
add
sbb
pushf
stc
push
mov
jne
mov
das
mov
test
lea
jmp
bound
aaa
mov
push
mov
ja
mov
bound
lea
test
popf
xchg
inc
repnz
cli
dec
retf
rol
pop
cwde
push
sub
(bad)
fwait
push
ss
xchg
jno
mov
add
mov
and
in
dec
jmp
or
xor
adc
jl
in
aaa
icebp
fist
call
mov
jge
xchg
push
and
xchg
test
in
cld
movs
inc
jno
pop
ins
iret
fist
not
sub
jbe
push
xchg
push
in
dec
enter
push
inc
movs
xlat
sub
add
jbe
adc
add
and
out
inc
jnp
jne
loopne
into
push
mov
das
pop
inc
popa
fist
enter
ret
jne
xor
add
dec
cli
scas
mov
add
cmp
cmp
or
or
das
(bad)
and
pop
jno
or
dec
es
xchg
mov
rcr
ret
shl
pop
pop
ins
lahf
repz
jp
(bad)
test
call
sbb
lea
sbb
repnz
jnp
xchg
test
xlat
inc
imul
call
sub
sti
adc
or
lea
sbb
fdiv
es
jle
pusha
scas
push
int3
xchg
mov
jo
sahf
mov
fisub
lds
push
addr16
inc
jo
sub
rcr
mov
jmp
push
stos
and
movs
sti
cmp
rol
daa
inc
test
mov
dec
mov
clc
cmc
lds
mov
push
xor
xchg
(bad)
loop
xchg
mov
mov
les
sbb
adc
inc
mov
dec
jo
adc
sbb
lahf
daa
out
cmp
jae
stos
dec
neg
arpl
push
js
xchg
(bad)
pusha
int
dec
xor
rcl
and
jo
pop
cmps
xchg
enter
js
xlat
je
icebp
or
push
jno
push
and
(bad)
dec
pop
out
cdq
loopne
and
cld
repz
in
dec
loope
adc
into
and
movs
push
mov
jge
gs
shr
mov
cmp
push
repz
xor
sbb
nop
test
inc
(bad)
rcl
pop
loop
xor
leave
jl
jecxz
imul
das
inc
popa
out
sub
dec
dec
adc
fcmove
ror
cmps
test
mov
sub
pop
or
and
inc
leave
(bad)
int
inc
add
addr16
sub
xor
mov
lahf
mov
jp
(bad)
jo
leave
int
mov
adc
in
jne
mov
shl
inc
inc
in
dec
(bad)
mov
loop
dec
ficomp
retf
leave
or
test
call
adc
cmp
dec
push
xchg
push
xor
add
jp
imul
pop
inc
pop
dec
(bad)
fild
or
push
push
push
retf
ins
mov
jbe
push
addr16
jmp
lahf
push
enter
mov
pusha
adc
add
xor
fs
test
push
pop
enter
popf
data16
sti
and
inc
fstp
xchg
or
aaa
xor
loop
cmp
sub
das
inc
inc
(bad)
cmp
xchg
or
ret
push
scas
cmp
ins
mov
in
or
cmps
sbb
sub
mov
inc
cmps
mov
(bad)
sub
push
add
dec
stc
or
iret
add
popa
or
dec
xchg
loopne
adc
movs
aad
jl
inc
ja
ins
cmp
inc
cdq
cmp
sbb
stos
jg
and
lea
cld
(bad)
pop
add
addr16
stos
push
loop
sbb
xchg
in
push
cmp
int3
(bad)
stc
test
xchg
inc
in
hlt
fnstenv
je
pop
inc
jae
mov
dec
ds
cmp
push
pop
cmc
je
repz
lods
dec
mov
push
adc
retf
push
xchg
imul
pop
mov
les
inc
mov
int
or
pop
sub
push
inc
cwde
push
add
cmp
out
rcr
inc
dec
and
lock
fs
adc
lods
sbb
cmp
xchg
xchg
adc
jl
xchg
lock
xchg
inc
and
xor
stos
xchg
jnp
or
fdiv
scas
repnz
xlat
push
js
sbb
test
mov
jne
xchg
jge
and
fs
fst
lea
jecxz
inc
(bad)
imul
in
inc
dec
stos
ret
sub
and
xchg
mov
sbb
das
inc
call
xchg
sbb
in
jo
(bad)
sub
stc
call
xlat
xchg
dec
push
and
fs
mov
call
sub
add
loope
and
bound
jge
outs
rol
jl
arpl
aas
aam
retf
push
stos
pop
mov
shr
sbb
mov
div
jl
sub
inc
fnstcw
and
and
push
rcl
inc
les
icebp
test
pop
lahf
ins
aas
retf
frstor
add
imul
add
mov
stc
mov
mov
lea
pop
rcl
mov
sbb
or
ret
gs
or
push
and
cli
and
not
test
daa
mov
ins
scas
mov
inc
or
mov
fbld
ins
test
ins
jb
fiadd
les
cmp
sbb
in
pop
mov
sub
cmps
aas
cmp
mov
push
rol
jg
add
mov
jo
push
(bad)
loope
(bad)
pop
and
sub
pop
fwait
adc
jge
jo
retf
stc
div
xchg
cdq
add
fsubr
mov
in
out
out
cld
inc
or
mov
jbe
inc
pop
push
into
rol
(bad)
push
push
sub
sub
sub
cmp
gs
or
and
(bad)
out
call
cdq
inc
add
ins
das
and
sub
add
mov
mov
int
(bad)
mov
sahf
jo
int3
xchg
pop
push
jno
aad
xor
enter
(bad)
shr
call
loope
out
jae
in
lods
arpl
cdq
adc
mov
cs
pop
sbb
jb
lods
pop
lea
add
out
mov
xchg
fist
and
cdq
mov
mov
fdiv
movs
mov
push
data16
fdivr
inc
out
xchg
call
add
xchg
xchg
and
ffree
scas
xor
jae
mov
ret
scas
and
int3
inc
into
inc
pop
adc
push
fwait
or
ss
test
adc
ds
mov
push
aaa
dec
push
in
addr16
adc
adc
jmp
add
sahf
cmp
outs
daa
mov
xor
ret
jns
cmp
dec
mov
jae
mov
or
leave
or
or
shl
movs
xchg
ret
cmps
xchg
sbb
pop
inc
in
jmp
sahf
rcr
aaa
test
jns
mov
pop
loop
ins
lods
les
mov
sti
in
dec
test
imul
mov
fistp
pop
fmul
add
xor
in
xchg
retf
dec
(bad)
rol
adc
(bad)
addr16
sbb
leave
mov
sub
mov
je
pop
dec
iret
inc
ds
push
daa
cs
jb
lds
xlat
mov
cmp
scas
das
movs
pop
stc
(bad)
push
mov
cld
dec
aad
inc
das
aas
call
xor
mov
pop
xchg
or
push
dec
nop
(bad)
xchg
int3
popf
call
enter
mov
ror
or
inc
xchg
jg
jb
scas
icebp
add
mov
push
ja
pop
inc
dec
shl
jo
fild
(bad)
jmp
cmp
pusha
xchg
loope
cld
std
fsubr
cwde
lea
sbb
sbb
mov
test
cmc
loope
and
adc
stc
dec
pop
ss
and
dec
rcl
jbe
mov
loop
imul
stc
add
out
xchg
add
adc
push
jbe
dec
sbb
adc
ror
loop
inc
(bad)
fisttp
shl
dec
fstp
adc
sbb
outs
pop
and
out
in
fdivr
(bad)
xor
into
shl
push
nop
adc
mov
cli
sbb
mov
pop
xchg
xor
sar
push
test
sub
jae
daa
(bad)
icebp
cmp
mov
cmps
push
jmp
xchg
cs
mov
jne
xchg
dec
dec
fldenv
pop
and
jecxz
sbb
(bad)
xchg
mov
aas
fsubr
xchg
jmp
sbb
icebp
ins
sub
mov
aam
pop
ss
in
aam
stos
(bad)
scas
add
xchg
std
dec
and
sub
iret
loope
inc
ja
fadd
cmp
nop
lea
call
int3
arpl
out
ins
lods
xor
aam
xor
out
ins
fmul
push
daa
scas
sub
push
jmp
fiadd
pop
fidiv
in
call
cmp
ret
cmovl
xor
movs
pop
das
adc
sti
cmp
add
call
enter
xor
dec
gs
xor
sbb
push
add
jge
stos
jp
bound
add
imul
cmp
sbb
jno
jge
psubsw
scas
std
jg
in
nop
(bad)
fisttp
cmps
stos
test
push
pop
aas
mov
fwait
ja
xor
sub
repnz
cmp
xchg
inc
out
xchg
(bad)
adc
pop
sti
shl
and
daa
xchg
je
or
sub
jbe
dec
fnstenv
sar
into
mov
je
cdq
jl
inc
pxor
test
daa
mov
movs
xor
xlat
jmp
movs
shl
jg
xor
add
ins
imul
dec
int3
jns
arpl
mov
or
cmps
mov
jl
test
sbb
jmp
in
add
push
daa
ss
(bad)
in
cwde
jge
sbb
sbb
push
in
dec
xchg
push
push
out
out
je
or
mov
pop
mov
leave
jle
ja
mov
mov
jg
test
mov
push
and
icebp
jmp
mov
test
mov
adc
aam
ss
pop
retf
dec
mov
or
iret
jae
cmp
retf
jl
dec
or
ret
push
mov
in
dec
(bad)
mov
repnz
mov
or
retf
xor
pop
adc
rcl
stos
xchg
and
shl
mov
sub
and
adc
out
in
jle
xchg
push
fdivr
add
xor
dec
out
or
push
add
cmp
or
xchg
jge
dec
inc
loope
and
in
lods
cmps
xor
mov
cmps
and
sub
out
or
mov
and
pop
mov
or
xor
ffreep
ds
sub
sbb
mov
dec
inc
xchg
pop
add
sbb
in
out
inc
pop
imul
xor
push
jecxz
js
fiadd
add
out
xlat
outs
jns
jge
ret
cmp
sahf
adc
sub
push
pop
sub
in
loope
pop
sbb
pop
mov
push
ja
sbb
dec
sub
adc
mov
mov
(bad)
shl
ins
push
inc
or
sbb
or
cmps
jmp
jecxz
sbb
xchg
or
in
fwait
pop
mov
pop
in
sbb
ja
popa
jns
mov
loope
sbb
inc
fstp
push
loope
dec
sub
shl
mov
sub
in
mov
cmp
(bad)
jb
imul
xchg
out
inc
out
or
sbb
xor
sbb
xchg
jb
adc
or
fcmovbe
(bad)
retf
push
retf
jno
mov
retf
clc
inc
pop
sbb
(bad)
loopne
xlat
mov
jbe
and
pop
cmp
jbe
aad
mov
data16
cmc
mov
je
scas
cdq
mov
push
icebp
cwde
icebp
push
adc
sub
push
inc
adc
or
ins
out
jbe
mov
hlt
pusha
adc
cmps
or
out
not
nop
test
mov
jnp
ffree
mov
stos
out
pop
inc
add
je
jecxz
cmp
enter
ret
js
inc
into
cmp
je
mov
sbb
dec
aad
call
and
movs
scas
ss
xchg
push
ins
retf
scas
rcr
lods
jns
popf
aas
es
les
sub
fisttp
jge
(bad)
leave
jecxz
mov
mov
aaa
inc
inc
(bad)
loopne
sar
fidivr
jle
cs
mov
std
sub
aas
sbb
mov
sbb
fwait
pushf
adc
adc
add
pop
inc
add
mov
addr16
pop
push
xchg
sub
mov
iret
pop
bound
inc
inc
dec
push
xchg
bound
inc
(bad)
adc
stc
adc
cmp
out
jae
xor
(bad)
in
mov
and
fmul
sbb
push
or
call
jns
dec
sub
pop
pusha
int3
fbld
push
xchg
dec
psubsb
test
into
shr
xor
ss
mov
sub
fcomip
bound
out
test
sbb
mov
in
clc
push
pop
inc
jne
fld
je
add
cs
sbb
push
iret
aad
arpl
add
pop
xor
sbb
stc
call
mov
mov
jbe
shl
jns
and
sub
loop
inc
mov
jmp
shl
frndint
add
inc
xor
call
mov
inc
inc
jl
adc
movs
pop
push
sbb
mov
jge
xchg
mov
or
in
jecxz
push
xor
pushf
test
and
jl
dec
shl
mov
push
dec
inc
std
jne
jns
or
or
dec
pop
jg
jo
icebp
and
loop
cmp
test
in
dec
add
adc
rcr
inc
pop
popaw
shl
cmp
xchg
popa
inc
mov
sub
xchg
push
xor
xchg
sub
mul
mov
adc
fwait
ins
xchg
loopne
(bad)
lods
mov
jecxz
jmp
int
pop
mov
or
fnstenv
aaa
xchg
dec
int
popa
lock
jae
inc
rcr
loopne
into
ret
addr16
push
fisttp
inc
jge
mov
ins
nop
mov
push
cmp
jmp
inc
aaa
ffreep
sti
cld
rol
add
jnp
and
pop
mov
push
push
sbb
sub
jb
jmp
push
add
mov
push
adc
clc
loopne
cmp
push
test
test
and
lods
data16
cmps
xchg
sub
and
ret
movs
push
(bad)
lock
js
mov
inc
sahf
xor
sub
fnstsw
push
jbe
xor
mov
mov
adc
out
cs
ins
mov
push
pop
test
adc
inc
nop
sub
into
fmul
xchg
jmp
sbb
mov
push
cwde
jge
bound
mov
adc
fadd
lahf
mov
stos
xor
push
loope
mov
dec
scas
cmp
dec
inc
mov
cmps
xchg
mov
adc
in
leave
push
add
fidivr
(bad)
mov
imul
xchg
pop
push
retf
outs
pop
cmp
mov
stos
ja
xchg
push
sbb
add
xchg
pop
pushf
or
push
sahf
mov
ret
xchg
fiadd
pop
xchg
cs
ins
xor
sbb
ret
push
mov
adc
not
sbb
mov
sub
xchg
cmp
js
or
les
cmps
and
cli
sub
push
push
cmp
adc
icebp
inc
or
inc
or
jmp
push
imul
mov
loopne
xchg
in
dec
sub
adc
mov
mov
ins
loope
retf
cs
sahf
add
jns
mov
pop
je
push
jns
jbe
mov
mov
mov
cdq
pop
inc
int3
std
inc
xor
ds
iret
sbb
fdiv
add
xor
iret
nop
pushf
cld
inc
pop
lods
jb
jnp
js
jl
call
lods
aad
cmp
xchg
(bad)
mov
adc
hlt
add
imul
mov
cmp
cmp
fwait
into
pop
inc
sbb
push
cmp
cdq
std
pop
in
sub
rcl
inc
mov
mov
fild
test
ja
hlt
sbb
mov
and
stos
ret
cmp
cdq
mov
popf
mov
test
fbld
xchg
ds
jp
cmp
push
shr
inc
stc
int3
xchg
(bad)
retf
js
xor
das
cmp
stos
cld
(bad)
mov
xchg
popa
push
inc
popa
test
in
xlat
adc
cld
push
mov
pop
enter
test
sbb
dec
pop
inc
sahf
mov
cmp
std
inc
push
mov
outs
daa
cdq
je
cs
not
push
sbb
push
jmp
shl
or
xchg
jp
(bad)
push
cmp
fld
cmp
fwait
xor
out
xchg
sub
or
ficomp
mov
ja
fisub
mov
popa
cmp
sub
cmp
jmp
sbb
pop
out
adc
outs
test
xor
cmp
inc
sub
mov
cs
loope
in
jnp
gs
jecxz
cmp
dec
xlat
pushf
stc
mov
jno
sbb
mov
js
out
dec
add
jno
shr
xchg
movs
push
jo
mov
enter
push
lods
imul
jecxz
aas
inc
inc
fldl2e
push
add
inc
outs
push
cmp
adc
and
push
ja
pop
mov
push
mov
dec
or
jmp
fisubr
lock
push
(bad)
std
rcl
dec
xchg
cmp
ja
cmp
mul
ss
call
imul
mov
pop
mov
push
cmp
cmp
mov
sub
shl
lahf
aam
and
jecxz
fcmovnb
repz
jmp
mov
mov
sahf
jns
cld
mov
ins
mov
push
jb
or
sub
mov
adc
push
and
mov
mov
in
xchg
lds
adc
fstp
cwde
mov
mov
gs
cvtps2pi
push
popf
fcmovne
ins
mov
pop
ror
mov
and
mov
sbb
retf
std
lds
sub
mov
(bad)
ins
jae
mov
(bad)
das
rol
inc
repz
in
add
mov
dec
(bad)
out
jecxz
cmc
imul
pop
pop
xchg
stc
(bad)
cmc
fcmovb
scas
and
inc
out
sbb
repz
out
add
out
add
les
cdq
push
push
ja
mov
add
test
out
sub
push
aam
das
dec
inc
push
mov
push
clc
adc
jae
ins
adc
push
mov
xor
and
(bad)
sub
jnp
ret
jle
jo
imul
push
(bad)
call
movs
xchg
xchg
jns
jbe
cmp
jmp
sbb
jge
stc
push
in
xor
jmp
das
retf
dec
adc
jl
and
or
(bad)
fsincos
cmp
push
dec
pop
sub
adc
xor
mov
push
or
sub
sub
dec
sub
stos
inc
pusha
je
push
in
(bad)
loop
bound
jno
push
cmp
in
stos
clc
fist
repz
jns
inc
loope
jg
fdiv
pop
xchg
test
push
jne
aas
xchg
xor
vzeroupper
pop
call
sbb
dec
fmul
adc
mov
jmp
cmp
out
mov
adc
inc
inc
jge
and
(bad)
jecxz
jne
arpl
cs
loop
dec
sub
(bad)
mov
pop
fdivr
mov
mov
(bad)
lods
pop
mov
inc
movs
dec
clc
jmp
mov
mov
pop
lahf
mov
movs
daa
mov
or
sbb
push
inc
xchg
dec
cmp
cmp
cmp
mov
push
stos
xchg
mov
cwde
lea
cmp
stc
mov
mov
mov
stc
xchg
(bad)
aas
jecxz
and
lods
mov
pop
xchg
repnz
pop
(bad)
mov
dec
push
ja
out
(bad)
sbb
pop
retf
cwde
adc
int3
ja
popa
xchg
mov
ins
pop
mov
ss
ret
ins
out
out
dec
sub
mov
push
or
imul
scas
push
xchg
pop
jbe
(bad)
movs
xor
xchg
jmp
and
daa
leave
fdiv
or
mov
retf
cmps
and
outs
retf
imul
pop
int3
add
or
and
pop
jo
adc
push
fwait
jmp
nop
test
ror
sahf
pop
inc
adc
push
cmp
adc
xlat
fild
xchg
jo
push
cs
std
xchg
out
lods
xchg
jecxz
punpckhdq
jo
into
mov
cmp
paddusb
dec
jb
idiv
es
mov
xor
ss
and
add
xchg
ds
or
aaa
push
test
mov
ret
mov
dec
lods
mov
sub
je
mov
xchg
imul
lods
es
les
dec
pusha
pop
hlt
lock
push
jo
or
ins
jns
cmc
xchg
dec
mov
lods
fcomp
mov
das
aaa
das
cmp
cmp
mov
call
dec
mov
mov
cmp
das
popa
sbb
bound
add
shl
mov
inc
in
jbe
loope
mov
mov
or
pushf
ins
dec
pop
cmps
sub
jmp
mov
xchg
adc
outs
add
stc
mov
jmp
cwde
out
and
and
imul
retf
setle
out
and
mov
popa
lock
in
xor
or
fsubr
repz
xchg
test
scas
pop
pop
sar
sub
out
dec
lock
xchg
xchg
cs
or
push
push
pop
mov
cdq
and
add
cmp
popf
ficomp
pop
and
and
arpl
sub
push
pop
mov
repz
shl
and
cmps
push
mov
xor
movs
dec
mov
test
inc
sub
mov
cld
mov
jne
xchg
adc
shl
scas
aas
nop
cs
jmp
enter
jge
mov
add
outs
and
xchg
jne
data16
repz
gs
xor
jecxz
imul
shr
adc
push
mov
push
dec
enter
enter
xlat
fs
movs
xchg
test
dec
add
add
fstp
push
mov
push
jns
pop
mov
mov
or
add
in
inc
jl
inc
aaa
in
lock
sub
mov
fs
mov
leave
cmc
xor
cmp
ret
fst
(bad)
jg
or
cmp
jl
push
push
imul
aam
pop
(bad)
add
and
add
sub
sbb
dec
retf
pop
scas
pop
push
pop
call
test
outs
call
aam
enter
loope
imul
sub
dec
(bad)
ja
add
adc
stos
and
mov
and
xchg
stc
cld
fadd
cmp
mov
jg
stc
arpl
stc
ret
sbb
sbb
mov
inc
fild
mov
or
leave
iret
push
nop
sub
lods
mov
mov
movs
push
dec
mov
jae
cmp
mov
daa
mov
cmp
pop
cmps
ja
test
cwde
xchg
retf
adc
mov
push
xor
std
jo
lds
mov
sti
sar
mov
inc
pop
lods
lock
jge
sbb
gs
data16
das
mov
push
sub
xchg
push
sar
outs
ror
(bad)
ss
arpl
stc
retf
and
pop
or
sbb
scas
xor
lock
xor
mov
retf
imul
cmps
daa
xor
sahf
sar
dec
jmp
dec
aam
mov
mov
or
and
xor
cmp
push
cmp
outs
outs
mov
stos
popf
cmp
push
nop
push
nop
gs
xchg
cmp
cdq
pushf
(bad)
retf
mov
mov
mov
adc
pop
aas
loopne
pop
push
dec
add
scas
add
lock
lods
jge
xor
js
sbb
mov
mov
add
mov
out
add
add
inc
pop
and
sub
int
test
adc
lock
xchg
int
inc
cmc
jne
(bad)
(bad)
inc
mov
dec
add
dec
push
push
cmp
push
cmp
cmp
outs
mov
push
test
fsub
jmp
mov
js
cmp
xor
out
call
das
pop
je
loope
dec
test
cdq
(bad)
mov
add
sub
mov
in
jo
cdq
clc
fistp
cmps
mov
loop
cmp
je
icebp
mov
loopne
out
xchg
jbe
cmc
push
retf
add
lahf
adc
jnp
pop
dec
(bad)
lock
cmc
loopne
les
and
mov
call
aad
adc
scas
inc
push
sti
jae
ret
lahf
xor
pop
repz
jo
mov
fbld
inc
inc
test
add
dec
jne
bound
mov
sbb
iret
push
shr
mov
(bad)
in
popa
stos
add
add
sub
add
and
aam
cdq
xor
add
cmp
adc
movs
rcl
rol
adc
daa
fucomip
daa
pop
dec
dec
movs
add
push
mov
lds
ds
or
inc
dec
sar
repz
(bad)
mov
shr
jmp
aad
fucom
(bad)
sahf
ins
arpl
mov
fsubr
inc
dec
bound
pop
mov
push
add
stos
push
adc
cmps
dec
mov
retf
dec
jmp
mov
stos
js
iret
mov
pop
pop
out
push
lods
xchg
mov
int3
into
imul
outs
daa
inc
inc
div
lods
ds
sub
fld
aaa
xchg
mov
mov
(bad)
dec
std
int
xchg
push
(bad)
(bad)
xchg
into
mov
cwde
add
out
(bad)
les
dec
cwde
xchg
xchg
dec
mov
stos
aad
pop
popa
cmp
sub
sbb
pop
neg
aaa
sub
jmp
scas
imul
(bad)
mov
or
dec
push
mov
(bad)
cmps
neg
pop
dec
(bad)
(bad)
jp
adc
arpl
mov
inc
sbb
test
sbb
iret
or
lea
pop
mov
sbb
mov
xlat
xchg
je
bound
test
pop
retf
pop
pop
dec
or
ins
push
dec
sbb
mov
cmp
add
xchg
es
add
cmp
lds
pop
inc
(bad)
and
jno
rcl
xor
or
or
cmp
call
xchg
cmp
icebp
xchg
push
mov
lahf
or
ja
loope
aad
cli
mov
iret
push
pop
sbb
xor
xchg
cmp
or
mov
add
mov
jne
pop
push
in
call
inc
dec
xor
jecxz
jns
sbb
ins
pop
add
push
mov
push
push
mov
or
sub
mov
jae
and
fwait
or
inc
cmp
adc
sub
ret
xchg
sub
ret
push
test
aaa
call
pop
lock
fild
out
es
mov
cmps
sbb
push
dec
mov
bound
mov
pop
out
(bad)
push
fdivr
aas
outs
popf
fwait
push
ins
mov
mov
repz
inc
fidivr
add
adc
dec
sub
mov
push
(bad)
sub
call
shr
cli
mov
mov
in
frstpm(287
shl
(bad)
cli
iret
sahf
ins
cdq
and
ss
ror
jne
inc
cmp
ins
pop
out
aas
(bad)
retf
outs
mov
push
fsub
stos
test
xor
jecxz
cwde
dec
lods
lods
call
dec
in
xchg
or
xor
not
sub
nop
add
xor
rcl
mov
push
jae
loopne
nop
je
adc
pop
push
dec
call
dec
pop
xor
(bad)
or
push
mov
in
sbb
pop
loope
adc
sub
out
jno
xchg
movs
test
or
jg
sub
mov
jo
mov
sbb
mov
out
inc
or
pop
cdq
test
(bad)
jns
or
outs
jns
sbb
xor
jo
mov
nop
mov
pop
jmp
inc
push
xchg
mov
xchg
shl
jp
sbb
int3
cvtdq2ps
xor
stc
pop
pop
mov
push
xlat
inc
xchg
add
push
cmps
pop
push
and
stos
outs
(bad)
call
add
(bad)
and
shr
aaa
(bad)
or
mov
mov
inc
jg
cmp
idiv
mov
xchg
cmp
or
test
adc
data16
movs
pop
repnz
pop
adc
scas
mov
inc
or
or
pop
xor
mov
(bad)
xchg
push
lods
ins
or
in
jno
inc
mov
cmp
push
or
ss
mov
xchg
call
and
iret
(bad)
and
lods
sub
xchg
sub
call
ss
call
imul
shl
sub
dec
jae
cdq
add
bound
iret
in
jbe
adc
sbb
jmp
loope
addr16
mov
test
pop
xlat
jne
hlt
push
repnz
aam
sbb
movs
jge
inc
scas
shr
cmp
movs
and
lahf
inc
pushf
(bad)
test
div
jo
fpatan
jg
jb
dec
mov
mov
cli
jle
ret
cwde
push
push
lods
sub
or
add
or
(bad)
xor
jnp
push
xchg
add
movs
mov
mov
cmp
inc
int
pop
cs
repnz
ficomp
sbb
push
js
stos
cmp
mov
ja
mov
fild
fcmovnu
push
or
and
imul
cmp
pop
mov
stc
push
sub
cwde
dec
sub
xchg
inc
pushf
outs
js
jmp
mov
mov
fiadd
imul
fsub
inc
outs
mov
lods
(bad)
mov
pop
out
cmc
and
icebp
xchg
sar
cmp
dec
je
inc
or
add
push
mov
sub
cdq
stc
and
sub
cmp
(bad)
dec
retf
popf
pop
clc
fisttp
sub
stos
sub
pop
int3
mov
es
out
adc
cdq
imul
mov
jl
cdq
push
mov
dec
stos
fldcw
cmp
jbe
jae
sub
int
mov
movs
pop
into
outs
adc
adc
rcl
pop
bnd
bound
mov
outs
xchg
sahf
xor
loop
jb
inc
ret
jle
jno
call
into
aaa
fnstcw
faddp
add
inc
push
ror
cdq
mov
adc
mov
sbb
mov
pop
retf
add
xor
pop
aam
aam
and
fnstsw
ins
clc
push
ins
jl
mov
out
xchg
mul
aad
mov
cmp
inc
jg
in
or
stos
pop
jecxz
repz
in
adc
push
je
xlat
jp
jb
xor
inc
aaa
xchg
or
mov
mov
mov
mov
movs
pop
aam
lea
int3
mov
out
mov
push
jg
ror
int3
xchg
pushf
jp
aam
movq
mov
shl
push
mov
push
dec
xor
call
mov
xchg
dec
xchg
sti
sbb
shl
jne
dec
sub
and
mov
add
std
lea
not
inc
push
push
lods
mov
rcl
mov
jmp
jg
cmp
call
cs
div
pop
mov
outs
lds
aas
or
mov
adc
dec
dec
or
es
push
rcr
dec
cdq
rol
into
rcl
xchg
jmp
fistp
adc
adc
jmp
adc
sub
and
mov
or
mov
test
or
lahf
jcxz
mov
sbb
and
ja
mov
adc
jg
cmp
into
jne
jo
jo
xchg
push
push
dec
jne
(bad)
dec
icebp
adc
sub
pushf
add
cmp
cmps
push
inc
dec
push
adc
leave
iret
push
jg
cmp
inc
stos
stos
into
(bad)
xchg
xchg
sbb
ins
(bad)
test
daa
nop
dec
inc
in
jbe
les
ja
mov
cdq
jne
aam
push
outs
xor
int
out
dec
aaa
jmp
retf
lds
sbb
arpl
mov
in
jecxz
jno
jl
and
and
lods
or
cdq
cmp
or
fisub
and
xor
inc
inc
es
lods
ins
and
mov
shl
mov
addr16
fldenv
push
cwde
test
push
test
lahf
neg
mov
stos
cmp
mov
cmp
pop
std
sti
jecxz
xor
cmp
imul
cmp
(bad)
movs
dec
mov
cmps
jmp
out
adc
push
outs
mov
jo
hlt
xor
lahf
sbb
arpl
mov
mov
inc
inc
mov
loope
dec
out
retf
sahf
retf
jecxz
mov
push
out
stos
and
fwait
loopne
mov
xor
test
and
push
jge
test
mov
mov
mov
call
std
add
lock
sbb
adc
pushf
mov
jge
movsx
inc
sti
jmp
icebp
int3
out
rcl
mov
les
inc
dec
scas
iret
fst
jnp
mov
add
xchg
ss
dec
and
cmp
add
dec
jp
cld
stc
imul
out
adc
enter
push
iret
pop
outs
lea
outs
mov
cmc
les
mov
and
out
xor
mov
into
push
cs
dec
inc
and
push
in
mov
inc
cld
jge
aas
add
data16
add
mov
xchg
div
xchg
fdivr
add
ror
fucomip
sub
sbb
xchg
lahf
stos
mov
adc
cmp
jo
in
add
(bad)
mov
stos
jbe
xchg
push
lock
(bad)
mov
aam
and
pop
push
mov
(bad)
xlat
jns
jns
stc
xor
jmp
and
push
jo
mov
push
out
fwait
inc
(bad)
test
repnz
retf
stc
push
add
ret
mov
into
sub
jecxz
(bad)
mov
add
lods
shr
jae
ja
jge
loope
xor
sahf
fdivr
fadd
pop
js
movs
(bad)
sti
daa
fnop
(bad)
dec
push
cmp
imul
in
mov
repnz
pop
jbe
pop
adc
aaa
jg
jne
jno
sbb
sbb
mov
inc
mov
xchg
or
arpl
jae
call
shr
sub
daa
mov
mov
xchg
fwait
or
shr
mov
jno
jnp
stos
or
jno
and
leave
icebp
test
inc
pop
cmps
push
into
pusha
push
add
sbb
xchg
mov
inc
cmp
test
sub
in
lods
cmp
ins
aas
add
mov
mov
or
push
push
pop
mov
data16
push
stc
adc
mov
or
(bad)
push
(bad)
addr16
pop
push
call
cld
xor
push
rcl
or
adc
dec
adc
sbb
or
dec
jae
stc
fnstcw
mov
add
sbb
jo
sti
add
test
dec
rcl
and
cmc
lds
mov
xor
popa
mov
int
loop
xor
pop
mov
sbb
xlat
dec
and
dec
pusha
mov
(bad)
(bad)
mov
sub
mov
cmp
mov
fcom
mov
jnp
add
pop
jo
rcl
sub
fwait
inc
mov
test
(bad)
aam
push
cmp
jp
ins
cdq
daa
scas
div
sub
fstp
ffree
(bad)
(bad)
or
push
int3
jno
mov
jns
arpl
cmp
adc
jmp
lock
nop
sub
and
push
adc
add
cmp
or
sub
jle
test
inc
inc
imul
sbb
push
push
adc
or
push
sub
jne
jo
dec
mov
xchg
data16
push
div
jo
popf
rol
mov
shr
jmp
scas
mov
jae
fwait
xor
xchg
arpl
add
ret
call
mov
stos
mov
mov
push
cmp
push
adc
sub
out
or
loope
std
inc
or
loop
mov
jl
jno
jmp
lds
mov
test
pop
sbb
dec
mov
dec
jno
xchg
stc
sbb
hlt
push
push
pop
pusha
faddp
aaa
shl
push
repz
pusha
out
xlat
pop
cs
rol
push
fist
jne
sbb
xchg
in
or
cmp
dec
out
pop
outs
push
std
dec
lds
(bad)
xor
popa
ins
rcl
inc
adc
sti
(bad)
daa
loop
fwait
imul
cmc
call
xchg
jmp
push
call
loop
test
fcmovbe
repnz
cmp
popf
or
mov
mov
push
mov
movups
mov
mov
dec
add
aad
xchg
adc
out
in
push
dec
lock
push
ss
stc
xchg
lahf
mov
sub
cmp
push
adc
(bad)
hlt
push
dec
and
cwde
ins
mov
je
int3
add
jmp
dec
cmp
mov
aam
pop
lds
mov
jb
fimul
xor
out
ins
icebp
cmp
rcr
imul
aad
outs
inc
outs
cld
sub
in
js
pop
inc
mov
pop
sar
cli
jmp
jl
arpl
and
pop
mov
cmp
ret
jb
pop
xor
mov
lds
mov
pop
test
pusha
jmp
sbb
cmc
cmp
push
js
jno
fwait
aad
cs
rol
call
xchg
push
xchg
or
aad
out
xor
ja
pusha
add
fidivr
mov
scas
sub
jbe
xor
sbb
adc
aad
retf
xchg
mov
cmps
ds
mov
cmps
push
(bad)
gs
rcr
mov
adc
stos
int3
sub
pop
sbb
xchg
push
mov
cmc
jnp
inc
ret
pushf
leave
xor
or
imul
and
or
add
shr
push
movsx
push
stc
(bad)
gs
fwait
nop
pusha
iret
push
cmp
ss
(bad)
in
or
sbb
xor
pop
lds
fwait
jg
jge
aas
cld
sub
and
adc
dec
sub
pusha
mov
gs
shl
jmp
push
(bad)
pop
xor
lods
push
mov
shl
into
sbb
es
jns
inc
pop
jp
xor
pop
ins
mov
stos
xor
mov
lea
pop
int
pop
or
loopne
enter
cmps
pop
inc
enter
sub
and
not
retf
outs
mov
xchg
mov
jecxz
mov
sbb
mov
sub
dec
cmp
push
mov
push
add
cld
jecxz
sub
repz
dec
cmps
call
mov
test
dec
pop
(bad)
mov
jmp
out
dec
mov
inc
gs
les
adc
retf
test
xor
xlat
lea
jecxz
push
push
mov
in
dec
shl
or
div
fmul
or
out
int
cmp
fs
inc
cmp
push
mov
outs
cli
xor
dec
inc
scas
push
clc
inc
or
add
cmp
xchg
fidivr
push
push
mov
dec
pop
popa
adc
dec
(bad)
lock
bound
pop
jl
test
adc
inc
int3
lock
ins
adc
mov
les
cwde
lahf
or
aad
lods
pushf
or
movs
sub
push
pop
sbb
(bad)
sub
repnz
push
mov
int3
ficomp
(bad)
cwde
and
dec
adc
adc
inc
enter
pop
repz
and
add
sub
jo
xchg
cmovs
shr
sub
aas
xchg
arpl
mov
dec
mov
popa
pusha
push
sbb
add
cmp
gs
pop
sub
stos
in
popf
stos
and
inc
and
sbb
sub
stos
xor
dec
mov
jo
rcl
out
popa
cld
sar
fimul
enter
test
gs
fcmovnbe
and
leave
sti
jmp
retf
fcmovnb
xor
inc
inc
xchg
fimul
sti
mov
ret
pusha
jle
push
call
jmp
les
mov
aad
cmp
pop
mov
mov
or
push
lahf
cmp
enter
pushf
push
or
lods
iret
pop
(bad)
in
dec
xchg
jae
nop
js
pop
call
dec
jb
jmp
jg
mov
mov
adc
xor
and
daa
imul
or
sub
add
sahf
adc
push
mov
pop
cdq
into
mov
and
fldenv
cmp
mov
jnp
add
xor
fsub
inc
les
xchg
mov
stc
push
or
mov
jecxz
nop
inc
mov
and
fidiv
and
xchg
shl
aam
ror
clc
sub
lea
sub
xchg
ins
mov
je
jns
push
les
leave
adc
rcl
pop
mov
xor
into
sbb
sbb
jmp
popf
and
fidivr
push
cmp
mov
adc
push
idiv
adc
imul
aas
data16
jnp
sti
int
push
dec
call
iret
outs
pop
xor
sbb
outs
mov
mov
sub
std
pop
sahf
cmps
rcr
dec
adc
sub
dec
cmp
ins
lods
mov
leave
pop
inc
stos
repnz
xlat
mov
les
mov
cmc
addr16
test
fimul
test
scas
cmp
mov
sbb
aam
adc
iret
inc
cs
outs
push
push
add
sbb
jne
jo
add
mov
xor
inc
jne
js
popf
sub
rcl
aad
shr
xchg
cmp
add
fwait
jne
pop
pop
mov
mov
cmp
jb
das
fwait
jae
imul
inc
call
sub
adc
xchg
sti
lods
outs
stos
mov
ins
dec
mov
dec
inc
jbe
int3
xchg
jg
sahf
sub
daa
mov
sub
movs
adc
inc
call
or
xchg
sub
xor
mov
jl
stos
sbb
fcmovnu
mov
jne
jno
jecxz
or
add
arpl
lock
or
cmp
fmul
adc
iret
imul
fsub
dec
add
shl
mov
sbb
dec
add
icebp
push
mov
cmp
ret
or
aam
xchg
shl
or
sbb
pop
lock
dec
bound
(bad)
out
sub
sbb
adc
push
adc
retf
loopne
push
mov
inc
(bad)
cwde
pop
rcl
aas
jnp
xchg
jmp
jae
fs
retf
inc
fistp
or
mov
push
mov
fwait
jge
pop
sbb
(bad)
push
cmp
and
add
aaa
sti
or
inc
mov
pop
and
add
dec
jne
sub
sub
sti
movs
(bad)
lods
sub
(bad)
fsub
jb
mov
cmp
imul
cs
jl
das
pop
je
in
or
and
mul
imul
cdq
gs
push
cmp
outs
fcom
sbb
(bad)
xchg
adc
aaa
push
scas
aam
sub
pop
aam
ins
xchg
cmp
dec
fadd
iret
sub
(bad)
push
mov
push
in
and
jbe
aaa
imul
hlt
jge
(bad)
stos
dec
cld
pandn
js
cmp
das
mov
loop
stos
jne
fbld
xchg
cmps
outs
or
sub
cmps
fnsave
inc
outs
das
sub
je
xor
pusha
cmps
fnstcw
fcmove
mov
sub
xchg
test
int
inc
jmp
xlat
out
retf
cwde
mov
xor
clc
rcr
imul
repnz
adc
mov
push
iret
repnz
lds
inc
shl
inc
test
sbb
push
push
and
and
cmp
mov
pop
jne
sbb
pop
call
mov
rol
ret
or
xor
into
fwait
add
inc
and
fdiv
outs
les
retf
sub
out
mov
dec
add
inc
xor
sub
jl
int3
or
dec
dec
or
(bad)
cdq
retf
inc
pop
mov
xor
rcr
push
or
mov
inc
mov
push
cmp
xchg
sbb
shl
add
jno
pop
stos
leave
jecxz
aad
push
xchg
enter
mov
arpl
jge
or
mov
and
enter
adc
pop
mov
push
popf
push
and
jbe
ds
fstp
cmp
fsub
jle
(bad)
sub
ror
sbb
dec
sbb
ins
add
lods
jns
es
in
sbb
les
int3
ds
or
push
jmp
cli
add
dec
dec
cmp
jne
shl
aad
and
inc
mov
(bad)
aas
pushf
mov
push
sti
stos
test
sub
mov
jmp
leave
jl
retf
mov
fwait
iret
cmp
adc
sbb
push
int
ins
test
dec
cmp
aas
neg
ja
imul
cmp
mov
mov
xchg
stc
aam
xor
lahf
sbb
test
or
fdivr
pop
movs
dec
icebp
mov
retf
adc
jmp
push
fs
call
xor
inc
pop
and
fwait
enter
and
fidivr
repnz
xchg
div
sbb
(bad)
cmp
daa
dec
daa
cwde
add
and
jb
xchg
out
loopne
jecxz
add
add
mov
test
popf
mov
cs
sbb
(bad)
xchg
push
cmp
repnz
push
bound
pop
inc
dec
xlat
push
imul
call
adc
iret
pop
jns
add
ret
cld
xchg
dec
ins
ficom
mov
lods
inc
(bad)
pop
xor
iret
test
bnd
movs
rol
jb
repz
jo
pop
(bad)
sbb
mov
lahf
mov
test
push
jbe
xchg
sti
icebp
inc
loop
xchg
xchg
jo
dec
cmp
cs
mov
jmp
jmp
sahf
rcl
jnp
scas
test
in
jmp
into
pop
repnz
scas
push
imul
fcmove
or
scas
fidiv
out
or
fldenv
mov
lahf
push
sti
loopne
mov
lds
add
jmp
test
(bad)
xchg
aad
rcr
adc
jne
ja
inc
lock
out
aam
pop
mov
in
test
adc
sub
hlt
xor
xchg
dec
pusha
movs
or
(bad)
fyl2xp1
cmp
inc
xchg
push
pop
cld
xor
aaa
scas
ss
add
and
adc
movs
pop
stc
jo
js
push
into
loope
ds
out
inc
mov
push
les
mov
xchg
js
adc
inc
fdivr
inc
test
scas
popf
jno
inc
xchg
inc
out
stc
cs
cmp
in
stos
sub
add
mov
jge
in
inc
cmp
mov
dec
loope
ins
in
cmps
stos
cdq
or
cmp
mov
daa
pop
pushf
push
dec
or
shl
inc
push
into
mov
xchg
sub
xchg
cmp
imul
push
push
pop
jl
pushf
fsubp
jne
jle
nop
ret
pusha
jne
xchg
push
mov
out
hlt
lea
test
cld
or
rcl
and
xor
ins
pop
retf
push
sar
mov
stos
xchg
xchg
push
dec
pop
push
xor
sahf
js
addr16
xor
fucomip
lock
mov
int3
test
rcl
mov
je
push
test
hlt
out
jmp
jb
mov
mov
mov
sub
inc
jmp
or
cdq
mov
xchg
jecxz
jg
repnz
mov
xor
inc
or
pusha
repz
scas
adc
jnp
outs
push
and
loopne
es
xor
mov
shr
add
mov
mov
sub
out
adc
mov
mov
ror
add
paddsw
mov
dec
cmp
clc
pushf
test
dec
jnp
push
sub
push
mov
fadd
adc
jo
cmp
fcom
push
leave
int3
repz
or
xor
stc
add
lods
adc
call
inc
jle
repnz
loope
mov
movs
movs
lods
xor
dec
(bad)
cwde
sbb
test
inc
imul
ss
mov
aam
shl
jle
inc
xchg
test
xchg
and
nop
ins
std
gs
push
mov
inc
sahf
fs
js
jge
push
pop
in
jae
pop
xlat
popf
aam
adc
sbb
fwait
mov
jno
fwait
push
or
aas
mov
stc
sub
xchg
out
aam
sbb
in
dec
jmp
fbld
loop
ja
cmp
cmc
mov
es
in
retf
push
sbb
mov
sub
xchg
and
adc
sbb
jmp
add
sbb
cmc
sbb
adc
(bad)
loope
mov
xchg
inc
push
cmp
scas
int
mov
cdq
mov
xchg
inc
cmp
mov
xor
sub
frstor
cmp
mov
mov
cdq
pop
in
add
push
mov
mov
dec
aam
jmp
fsub
adc
mov
mov
push
inc
sbb
dec
imul
mov
(bad)
mov
call
inc
jb
mov
sbb
dec
xlat
mov
and
dec
fs
sbb
xchg
adc
gs
je
ret
pusha
cmp
mov
or
xchg
adc
sub
mov
jae
hlt
ins
and
je
out
scas
inc
aas
ret
daa
and
push
and
dec
sbb
push
cmp
aas
xchg
adc
add
out
mov
retf
dec
dec
test
mov
and
cmc
mov
mov
adc
add
sub
mov
rol
pop
lahf
sti
retf
and
jne
(bad)
lods
(bad)
popa
push
shr
aas
rcl
cld
js
cld
adc
ror
sahf
lds
cmp
push
sbb
repz
js
div
push
cmp
or
jo
aad
mov
xlat
pop
dec
mov
push
jb
mov
int
cmp
lea
call
and
xor
stc
mov
aad
leave
dec
movs
fcmovnbe
sar
xchg
fcmove
inc
sub
or
fsub
(bad)
repnz
mov
mov
pop
push
shr
and
xchg
jne
jno
xor
dec
shl
mov
cli
paddw
dec
fcom
xor
cli
imul
ret
inc
sub
popa
mov
inc
ins
fs
fsub
jp
dec
push
sub
cmc
mov
adc
sar
scas
jp
jb
aad
inc
jnp
out
sub
add
jmp
pop
aam
rcl
inc
jge
mov
cwde
mov
je
add
or
cli
(bad)
lods
test
mov
xor
cli
(bad)
cld
scas
popa
sbb
loope
dec
and
mov
pop
jne
sbb
mov
inc
bound
(bad)
scas
pop
fbstp
adc
popa
mov
cmps
mov
ret
mov
push
or
cmp
xchg
nop
mov
xchg
int3
int
pop
(bad)
adc
out
cmps
aas
xor
xchg
cmc
push
mov
mov
jle
cmp
xchg
(bad)
mov
(bad)
in
loopne
inc
adc
mov
fcmovbe
mov
sbb
push
popf
and
or
test
jg
add
cwde
jnp
popa
icebp
popf
addr16
xchg
aam
ret
rcr
fsubr
jge
fadd
push
sub
bound
ror
xor
jmp
mov
(bad)
repnz
jmp
mov
pop
jg
fwait
add
aam
and
loope
adc
push
shl
mov
sub
loop
int
bound
call
ja
leave
sub
xor
aam
rol
jne
aad
imul
and
mov
popf
hlt
jle
scas
inc
sti
sbb
mov
or
das
iret
aas
and
stos
adc
dec
fld
mov
xchg
mov
mov
or
popa
xchg
xchg
inc
in
aaa
sub
cmp
stc
sar
into
dec
sub
adc
mov
sbb
outs
test
cmp
lea
cmp
fwait
mov
push
mov
sub
mov
sar
loope
pop
scas
jg
mov
jmp
ins
push
pop
dec
pop
or
xor
retf
add
and
ds
push
pop
hlt
jmp
clc
push
lfs
and
leave
fldl2e
cmps
ins
and
pop
out
adc
cmp
aad
or
dec
jmp
aad
inc
or
pop
cmps
or
jecxz
bound
sub
retf
xchg
in
xor
sti
push
xchg
cmp
adc
sar
push
data16
sbb
and
or
adc
leave
enter
fld
push
pop
les
jns
repz
xchg
mov
push
jmp
mov
mov
push
xor
(bad)
cmp
pop
rcl
in
xchg
sub
adc
mov
pop
mov
push
or
sbb
out
pushf
mov
fist
(bad)
cmp
inc
stc
jae
jmp
cmps
dec
xor
fcmovnbe
sahf
hlt
movs
sbb
std
cmc
sbb
push
xlat
repnz
movs
xor
cs
push
sbb
ins
daa
lock
cwde
xchg
movs
push
clc
adc
mov
sbb
aam
addr16
loopne
dec
and
cmp
jp
idiv
xor
sbb
jns
hlt
jecxz
and
pop
cmps
ret
retf
dec
clc
dec
loop
test
push
cmps
movs
hlt
outs
sbb
xor
xchg
push
jle
push
sbb
in
shr
mov
mov
addr16
(bad)
jne
outs
mov
rcl
sar
jmp
cli
test
test
mov
jp
xor
mov
mov
out
repnz
pop
(bad)
mov
adc
push
cld
shr
stos
cmp
outs
add
xchg
scas
push
xor
iret
sub
movs
xor
outs
pop
ror
sahf
jbe
in
pop
push
and
clts
test
dec
loop
push
(bad)
cmc
dec
mov
out
sbb
ds
mov
jbe
mov
mov
into
inc
xor
sub
inc
inc
push
adc
(bad)
dec
int
adc
pop
add
cld
fisttp
stos
fisttp
mov
adc
call
pop
jp
outs
mov
jne
lods
xor
icebp
(bad)
in
fdivr
sbb
sahf
mov
push
ret
dec
outs
pop
(bad)
inc
push
cmp
xchg
movs
scas
cld
push
add
sbb
push
inc
mov
int
xchg
imul
loop
push
jo
adc
addr16
std
arpl
je
shl
adc
sbb
jb
lods
ds
mov
cmp
jl
lods
push
fs
call
stos
xor
jg
stos
sbb
jle
daa
cmp
xor
inc
shr
add
aam
call
pop
dec
jmp
cmc
nop
mov
and
dec
in
mov
cmp
mov
lock
inc
fdivr
push
push
fistp
and
movs
adc
aam
ret
out
pop
inc
jb
jo
mov
sti
dec
pop
in
jge
(bad)
jecxz
in
sub
adc
adc
pop
sbb
pop
add
add
pop
into
stos
adc
cli
mov
push
pop
cli
fstp
dec
(bad)
mov
mov
push
mov
repz
dec
sbb
es
jle
aam
mov
fimul
pusha
mov
fistp
xchg
cmp
ret
xor
inc
push
mov
dec
push
pop
scas
add
mov
fdivr
ror
xchg
pop
loopne
jl
pop
cmp
or
xchg
dec
test
mov
jecxz
aaa
and
movs
nop
jbe
aad
pop
dec
xchg
mov
nop
shl
fcomp
mov
push
mov
pop
aam
sbb
sub
sbb
sbb
cs
lds
iret
jecxz
adc
push
inc
push
push
mov
retf
or
dec
(bad)
retf
test
xor
or
out
xchg
jns
inc
adc
leave
imul
and
inc
mov
popf
pop
lea
xlat
in
mov
mov
out
adc
pop
push
mov
push
xor
mov
pushf
test
ret
pop
fadd
sub
popf
call
aam
fist
xchg
ror
test
ficom
cmp
xor
sbb
stos
sub
adc
ins
sub
sbb
in
dec
jge
jb
push
inc
int
pop
je
mov
push
push
add
jge
or
dec
or
cmp
iret
nop
inc
cwde
lahf
mov
addr16
fs
mov
je
or
das
add
mov
scas
mov
rcr
cli
and
push
addr16
mov
jle
loop
jmp
adc
xchg
mov
rcr
mov
repnz
fisttp
cmps
pop
sbb
test
mov
push
cld
mov
sub
je
nop
stc
and
(bad)
push
xchg
add
push
pop
inc
out
or
neg
movs
cli
fcom
arpl
mov
icebp
cdq
add
push
out
and
imul
jl
fsubr
ficomp
pop
shl
mov
mov
mov
xchg
fucom
jbe
das
out
and
je
jnp
mov
scas
fld
or
sub
xchg
push
mov
mov
jl
(bad)
les
dec
sbb
inc
mov
sbb
and
(bad)
push
cmp
sbb
(bad)
jl
std
test
add
jecxz
jecxz
icebp
cmp
int3
movs
es
ret
cmps
std
in
movs
mov
shl
cmp
shl
mov
or
push
daa
cs
call
sti
and
into
jnp
retf
and
scas
push
stos
jae
or
adc
addr16
xchg
xor
push
inc
ss
pop
fist
icebp
pop
sbb
icebp
mov
in
mov
fs
retf
popf
test
jge
(bad)
adc
cdq
ret
in
neg
or
adc
jmp
into
pop
or
cmc
jne
add
jmp
or
push
mov
sbb
cli
and
out
push
mov
push
stc
cmp
mov
mov
or
pop
cmp
inc
or
and
dec
xchg
jae
bound
popa
rcl
sbb
inc
push
jg
mov
pop
std
xchg
loopne
outs
fwait
ins
lock
push
(bad)
jge
scas
mov
push
mov
int3
mov
shr
imul
sub
test
jecxz
xchg
add
mov
imul
jp
sti
std
pop
push
dec
sub
or
mov
mov
sahf
adc
(bad)
popf
cdq
mov
push
add
inc
std
addr16
mov
xchg
lods
lods
jecxz
in
adc
iret
mov
cmp
lds
cmp
sahf
mov
inc
sbb
push
mov
and
push
test
fsub
(bad)
pop
add
daa
push
xor
call
test
xchg
imul
int
dec
xlat
xchg
mov
shl
sbb
daa
jno
ror
mov
sbb
xor
aas
add
add
pushf
pop
dec
arpl
pop
pop
cli
int3
mov
pushf
sbb
pop
sbb
cld
outs
push
mov
shl
and
mov
adc
cmp
mov
cmp
shl
ins
div
leave
adc
sub
pop
jae
das
fcmovnu
xchg
daa
push
frstor
aaa
xchg
in
jecxz
scas
jno
mov
pop
jg
movs
mov
and
push
xor
sbb
xchg
pop
pop
xchg
cdq
or
push
and
imul
ficom
xchg
mov
pushf
repnz
mov
sbb
ror
icebp
mov
adc
fwait
sub
ficomp
sub
test
test
cmp
stos
es
ret
sub
retf
mov
lahf
pop
and
sub
jbe
dec
pop
push
jo
add
sbb
sub
fdivr
sbb
stc
aaa
mov
xor
ret
and
shl
das
mov
pop
mov
test
(bad)
sbb
fst
icebp
jns
(bad)
jnp
lods
shl
mov
jne
xchg
pusha
mov
call
mov
jo
icebp
xor
mov
popf
or
loop
xchg
test
and
into
mov
lods
(bad)
and
repnz
call
cli
push
xlat
add
dec
dec
mov
mov
jno
mov
retf
xlat
pushf
and
add
imul
scas
cmp
xor
inc
mov
xchg
push
or
pop
js
out
stos
sub
push
adc
fsubr
wbinvd
ins
xchg
dec
adc
test
sbb
sbb
xchg
mov
pop
pop
cli
cmps
cmps
push
push
gs
into
sub
adc
mov
pop
fs
sub
jge
out
xchg
pop
std
cli
inc
in
dec
xor
sbb
punpcklwd
mov
dec
ins
inc
xchg
repnz
fidiv
add
aas
push
das
jns
push
jle
(bad)
xchg
pop
leave
in
add
push
inc
xchg
cmp
adc
mov
jae
or
das
sti
arpl
js
lea
popa
in
(bad)
mov
ret
rcl
std
or
sti
mov
loop
and
mov
test
inc
ins
or
repnz
fucomp
stos
imul
(bad)
mov
or
sub
test
push
arpl
das
in
rcr
mov
sbb
jge
xor
inc
sbb
hlt
mov
xchg
inc
mov
pop
mov
repnz
push
(bad)
mov
js
arpl
cdq
pop
scas
mov
call
push
dec
retf
lods
out
xor
in
jae
push
adc
mov
jle
lods
mov
sbb
sti
jmp
test
mov
int3
into
cmp
loopne
cmps
push
fistp
and
push
mov
sbb
inc
mov
mov
icebp
(bad)
je
jno
in
sar
cdq
cwde
jns
in
fstp
mov
lahf
lea
fldenv
sbb
or
scas
fld
push
dec
mov
jg
mov
lods
inc
fild
push
ror
sbb
sbb
(bad)
scas
popf
lods
jecxz
movs
out
cld
daa
sub
fst
cmc
(bad)
into
dec
pop
mov
jae
ret
inc
test
int
adc
cmp
jmp
and
stos
pop
adc
add
leave
std
sbb
popf
(bad)
(bad)
fbstp
or
jle
lods
bound
push
mov
js
jle
add
push
push
test
adc
sbb
in
inc
adc
push
xchg
jnp
sar
adc
ins
mov
or
mov
xchg
std
stos
ret
lods
ss
test
sbb
int
sub
xchg
pop
jg
mov
jle
mov
ins
push
mov
pop
ds
inc
fistp
fild
bnd
bound
push
test
push
lds
add
hlt
sbb
sbb
ins
loopne
dec
out
lods
popf
data16
retf
call
mov
mov
test
movs
dec
jns
adc
xchg
fisub
jbe
inc
inc
mov
and
data16
or
shl
sbb
sub
cmps
xor
push
jmp
test
and
neg
imul
aas
xor
inc
jns
test
dec
dec
imul
inc
push
mov
nop
sub
repnz
pusha
not
lods
adc
inc
inc
dec
out
movs
adc
lahf
nop
fwait
jae
mov
fimul
stos
xchg
inc
inc
out
test
lahf
ret
out
dec
(bad)
(bad)
in
outs
mov
into
jle
hlt
cmp
pop
fsubr
mov
pop
test
mov
in
pop
sbb
add
jl
shr
adc
xor
push
loop
popa
ds
inc
stc
or
loop
adc
lods
div
push
mov
data16
cmps
xor
jnp
not
out
loopne
mov
xchg
cdq
into
std
or
pop
cwde
dec
jg
lahf
gs
idiv
push
mov
or
pop
jb
rcl
dec
sbb
add
loopne
sbb
add
pop
and
xchg
repnz
mov
lods
push
pop
gs
push
or
mov
mov
sbb
test
dec
jp
inc
mov
adc
nop
inc
or
cmp
fnstsw
je
(bad)
push
arpl
inc
add
push
mov
pushfw
dec
in
shr
or
je
adc
adc
movs
pop
pushf
imul
lods
sbb
leave
sub
xchg
rcr
mov
dec
mov
shr
mov
rol
sbb
retf
push
cmp
retf
mov
or
out
xchg
not
add
int
cmp
shl
dec
dec
inc
imul
fisttp
(bad)
loope
loopne
or
imul
ficom
(bad)
into
lods
cmp
retf
and
inc
add
jb
fisttp
or
mov
jecxz
add
es
vlddqu
jno
xchg
fs
mov
shr
dec
ins
jno
pop
ss
call
sbb
mov
cmp
lods
mov
xchg
xchg
or
pop
outs
dec
add
adc
jno
jg
inc
mov
fdivr
jecxz
es
(bad)
xchg
jg
arpl
cmp
adc
add
cli
cli
push
inc
sbb
jmp
jne
add
cwde
push
push
dec
ss
cli
inc
add
and
mov
mov
pop
sbb
sub
and
push
cli
imul
sub
jl
ins
cmc
push
adc
jb
xchg
lods
popf
xchg
stos
fs
outs
sub
es
out
stc
fimul
or
cmp
cmp
push
cdq
inc
data16
sub
call
add
jnp
outs
repnz
fcmove
mov
outs
cmp
mov
js
add
cmp
and
add
cmps
xchg
icebp
aas
dec
inc
ds
adc
cwde
cmp
outs
mov
or
push
loop
dec
test
iret
test
arpl
adc
test
or
je
fistp
jnp
dec
test
sbb
aaa
mov
arpl
and
mov
or
dec
mov
and
dec
sbb
adc
je
adc
sbb
push
pop
pop
fucom
xchg
sahf
retf
dec
movs
je
or
and
data16
jae
mov
outs
jp
mov
inc
sti
or
out
xchg
(bad)
or
fdiv
dec
div
adc
iret
pop
call
xor
mov
stos
stos
xlat
(bad)
lock
or
je
push
test
mov
pusha
mov
or
add
test
cmps
jnp
inc
clc
sar
push
xor
mov
push
dec
or
and
sub
push
sbb
inc
aas
sbb
jae
push
and
cmps
and
adc
fwait
add
xchg
cwde
loopne
repnz
add
jl
fisub
mov
pop
pop
popf
test
inc
sub
icebp
add
shl
into
jp
sub
fwait
jmp
xchg
loop
xchg
add
out
(bad)
rcl
jb
cmp
(bad)
and
mov
mov
mov
loop
outs
jo
add
adc
pop
das
adc
and
shr
mov
mov
pop
sub
adc
mov
clc
push
push
pop
mov
cmp
test
lock
lods
jmp
adc
cmp
stos
sub
cld
leave
or
std
mov
fld
in
stc
cmp
fst
test
inc
xchg
sti
fcomp
mov
stos
in
pop
jae
xor
cmps
sub
dec
(bad)
sub
fwait
xor
in
inc
jno
xor
mov
into
out
push
stc
sbb
xor
test
les
test
out
sbb
push
iret
retf
test
sahf
pop
int3
push
push
sub
inc
cmp
repz
out
call
dec
xchg
inc
sbb
push
fisttp
mov
mov
in
xor
ins
stos
retfw
mov
jp
ret
out
dec
fadd
xchg
test
sub
call
jp
pop
ret
mov
mov
outs
sub
fdiv
movs
call
push
mov
xchg
pop
clc
jp
call
or
xor
lea
or
pushf
retf
or
adc
test
lods
pop
aaa
(bad)
inc
(bad)
mov
xchg
xchg
icebp
les
inc
dec
mov
inc
pushf
mov
test
ss
int3
popa
sbb
ins
(bad)
fidiv
add
inc
inc
xor
xor
xor
cmp
test
scas
mov
mov
sub
push
cmp
scas
jl
iret
cli
movs
mov
mov
cmp
jne
or
push
call
inc
push
mov
popf
sahf
push
jne
mov
jae
push
jmp
ds
sbb
sub
cmp
add
je
jmp
xchg
xor
xor
mov
add
rol
mov
in
jo
lea
gs
sub
push
les
add
pop
movs
and
dec
fwait
jl
xchg
pushf
popf
fcom
popa
popf
xor
ds
mov
mov
inc
enter
push
pop
cmp
xchg
cmps
and
repnz
xor
test
add
dec
arpl
data16
cwde
dec
outs
cli
sub
fmul
jnp
imul
add
daa
stos
neg
es
leave
push
sahf
xlat
lds
push
dec
fist
dec
push
das
inc
or
les
cmps
repz
dec
sahf
gs
mov
bswap
imul
sbb
out
xor
jo
sub
repnz
mov
pushf
mov
lea
retf
sbb
cli
iret
push
cmps
add
pop
push
popf
inc
mov
sub
sbb
enter
push
int
cmp
fcom
imul
ins
cld
dec
ins
adc
mov
cld
cwde
lock
pop
arpl
dec
imul
pop
sub
jp
mov
adc
mov
xchg
data16
out
mov
pop
in
sahf
inc
stos
pop
sbb
mov
aad
loope
scas
pusha
and
stc
rcr
sub
sbb
cmp
call
shl
pop
or
xchg
adc
xacquire
lahf
leavew
xor
lahf
add
movs
or
lods
xor
cld
gs
inc
xchg
test
fbstp
xor
pop
jmp
inc
fdiv
movs
js
cmps
hlt
jns
mov
sub
cmp
add
int
(bad)
jo
addr16
out
jmp
jae
add
jnp
outs
mov
loope
int3
inc
cmps
out
and
cdq
arpl
dec
out
out
imul
xlat
fs
dec
sub
daa
pop
mov
aam
shr
jecxz
ins
into
arpl
int3
add
pop
call
(bad)
pop
or
inc
and
jae
fist
les
inc
adc
inc
fst
rol
out
pop
in
stc
int3
shl
repnz
jg
mov
shl
push
loope
push
push
xor
pop
or
and
push
jg
jge
and
loopne
scas
clc
ficom
rcr
mov
mov
loope
imul
jle
push
dec
shr
xor
aaa
push
fprem1
lods
loope
adc
or
imul
xor
xchg
pop
(bad)
in
dec
cli
rcr
cmp
pop
enter
pop
inc
lock
xchg
sub
icebp
push
aaa
jmp
(bad)
mov
or
push
cmp
retf
mov
ins
adc
sti
cmp
push
push
bound
stos
xchg
repnz
fdivr
xor
retf
sbb
mov
cmp
sub
je
push
cmp
and
cdq
or
repnz
mov
inc
in
jo
push
mov
mov
shr
inc
test
out
(bad)
cs
xor
pop
push
cmps
sbb
push
sbb
xchg
inc
inc
loopne
(bad)
in
imul
pop
mov
popa
loopne
mov
mov
add
iret
sub
clc
or
mov
jl
in
daa
mov
loopne
sub
lock
xchg
mov
jmp
adc
push
sub
xlat
pop
mov
jae
inc
jecxz
dec
jno
or
adc
lods
mov
lea
xchg
sahf
pop
mov
in
outs
clc
push
add
(bad)
iret
pop
or
cld
push
cmps
inc
and
call
movs
in
xchg
inc
in
pushf
js
imul
in
es
iret
add
xchg
mov
ds
sbb
cmp
dec
sbb
int3
xchg
lock
mov
data16
push
(bad)
aaa
adc
pop
test
xchg
xchg
xchg
popa
rol
xor
sub
aad
sub
dec
pop
push
adc
jno
lods
fwait
mov
mov
jmp
sbb
fcmovu
outs
dec
mov
(bad)
pop
sbb
add
int3
xor
jae
pop
mov
stos
sub
add
rcr
gs
mov
adc
test
mov
xchg
xchg
clc
test
mov
push
push
(bad)
push
add
add
fsubr
gs
fwait
test
out
pop
int
pop
(bad)
nop
lahf
dec
rol
inc
int
clc
hlt
adc
mov
jae
mov
sub
inc
dec
into
mov
rcr
or
sub
or
mov
push
movs
mov
inc
mov
xchg
addr16
mov
sbb
sbb
xchg
jmp
movs
imul
mov
lock
and
or
inc
pop
je
sbb
sub
cs
lock
js
jle
out
inc
inc
dec
mov
arpl
fstp
cld
hlt
out
loopne
repz
pusha
lock
mov
mov
or
lods
stc
leave
(bad)
jmp
xlat
fist
xor
inc
fisttp
cmp
loope
sbb
mov
or
aaa
cmp
sbb
mov
mov
and
sbb
jmp
xchg
cmp
mov
adc
inc
ss
(bad)
mov
and
cmc
les
aam
or
mov
std
repnz
mov
jne
mov
mov
or
fs
xor
es
add
inc
push
mov
inc
pusha
jmp
ffree
pop
mov
ins
shl
inc
or
cmp
and
mov
bound
and
and
pop
sub
xor
aam
stc
mov
sub
xchg
xchg
ins
jmp
push
cld
repnz
out
mov
loopne
or
bound
neg
call
fstp
pusha
rcr
inc
pop
mov
sbb
shl
cmovge
pop
popa
xchg
pop
push
test
cmc
mov
or
jbe
loope
movs
lds
fdivr
rcr
sbb
pop
ins
add
in
inc
xchg
and
add
call
mov
lds
sub
adc
daa
cmp
call
lods
mov
sub
mov
call
(bad)
and
into
stc
aad
cmp
inc
(bad)
xchg
mov
fsub
cmps
jae
or
test
es
in
test
aam
mov
sub
dec
sbb
xchg
rcr
test
dec
movs
sbb
or
fcmovbe
mov
push
cmp
push
sub
mov
or
out
mov
xor
xor
jecxz
mov
jg
xchg
je
xor
xor
dec
mov
popf
add
setno
push
push
jge
mov
pop
mov
cmp
lods
dec
inc
inc
jns
mov
mov
inc
cli
sbb
addr16
mov
jne
cmp
push
adc
sub
movs
dec
jns
pop
std
call
mov
fwait
mov
adc
adc
enter
and
jno
push
add
lahf
sub
jp
fdiv
loop
loope
les
sti
lods
jns
and
adc
clc
mov
mov
rol
fbld
fdiv
lods
push
loope
out
pop
jnp
xor
into
movs
xchg
cmps
ja
push
jnp
cmps
add
mov
fiadd
nop
es
jbe
add
stos
and
out
(bad)
sub
mov
mov
sub
scas
jmp
int
mov
data16
mov
sbb
pop
push
push
imul
(bad)
js
pop
leave
dec
inc
cmp
cdq
frstor
mov
fadd
ror
imul
mov
outs
fidivr
sub
pop
xchg
imul
in
cmp
shl
xor
(bad)
leave
(bad)
shl
fdiv
pop
inc
rcr
jae
ins
adc
jne
stc
loopne
loope
data16
lods
nop
inc
cmps
adc
jle
fld
nop
cwde
dec
ins
ret
cmp
out
mov
scas
pop
dec
mov
retf
mov
int
or
inc
push
into
jbe
gs
mov
popa
sub
addr16
mov
pop
test
fld
pusha
cmp
add
jbe
clc
and
into
or
inc
lods
dec
cmp
test
fcomp
xor
rcl
aam
mov
test
retf
dec
fisubr
or
aas
mov
jb
pop
adc
jg
repnz
enter
sub
push
push
cli
lods
xor
bound
in
int
jg
(bad)
jge
icebp
test
mov
loopne
test
out
adc
data16
inc
or
jbe
stos
cmps
xor
mov
(bad)
into
and
(bad)
jb
xor
add
or
xor
mov
aad
and
movs
aaa
or
and
mov
mov
mov
jecxz
rep
inc
inc
rcr
movs
call
inc
scas
mov
hlt
int
(bad)
push
fs
or
ret
cmp
and
mov
cdq
mov
xor
mov
pop
imul
mov
(bad)
xchg
arpl
jl
(bad)
pushf
not
mov
ins
repz
cmps
push
into
sub
fimul
ret
jge
fimul
out
jnp
inc
(bad)
or
mov
push
mov
cmp
div
add
fdiv
shl
xchg
stos
in
dec
int3
lods
jecxz
inc
test
push
aam
adc
shr
sub
(bad)
ficomp
add
cdq
ret
sbb
call
xchg
push
push
out
out
(bad)
addr16
push
sbb
cmp
cwde
repz
add
inc
mov
mov
mov
dec
mov
das
arpl
xor
cmp
leave
or
inc
cmp
(bad)
xor
(bad)
in
mov
or
test
cmp
dec
clc
fist
jp
stc
inc
jp
xchg
pop
call
mov
and
dec
xchg
(bad)
outs
(bad)
adc
jg
mov
ficomp
and
shl
dec
push
fcomp
jge
mov
test
cmp
cmp
xor
jle
dec
fsubr
test
retf
dec
aas
(bad)
es
lahf
add
int
aad
pop
pop
pop
outs
(bad)
xor
mov
mov
pop
inc
push
or
out
adc
adc
inc
jns
loop
popf
lods
call
ret
mov
adc
ss
les
dec
call
inc
js
lods
cmps
in
inc
mov
sbb
xchg
pop
das
or
pop
jl
ret
sbb
or
mov
retf
cmps
push
loopne
test
xor
fmul
dec
mov
shl
mov
mov
pop
into
mov
dec
aam
dec
xchg
mov
fwait
movs
inc
sbb
xchg
mov
xor
mov
mov
loopne
lea
cmc
shl
jno
les
ins
fucomip
pop
jae
arpl
push
lds
or
mov
into
push
pop
jge
inc
push
into
push
stos
es
(bad)
std
shl
repz
ret
int3
call
(bad)
xor
mov
popa
cmps
and
xor
sub
ins
push
sub
mov
and
test
adc
leave
scas
xchg
push
(bad)
cs
rcr
adc
xchg
in
aas
xchg
mov
sti
mov
into
mov
lods
jmp
mov
jl
fadd
xchg
mov
ins
and
inc
sti
aaa
jmp
and
cwde
mov
mov
sub
nop
fisubr
xchg
jne
aaa
inc
mov
pop
test
ret
enter
stc
sub
repz
or
xor
mov
nop
jg
push
call
pop
scas
dec
mov
int3
push
inc
mov
push
js
ss
push
lock
xor
dec
push
test
sub
ins
(bad)
or
out
xchg
mov
and
fcmovne
mov
mov
leave
aaa
push
sbb
aad
push
ins
out
cld
sub
mov
sbb
loope
push
imul
pop
xor
push
jg
cmp
xor
jp
sar
jno
add
cdq
pop
xor
and
mov
enter
sub
retf
iret
pop
adc
sub
fmul
call
push
inc
add
cmps
test
sbb
fidiv
mov
(bad)
nop
ror
dec
int
mov
xchg
int
(bad)
mov
pop
addr16
lods
fistp
pop
cmps
push
cmp
dec
mov
or
ficomp
dec
jb
mov
jg
jnp
cmp
mov
das
aad
mov
(bad)
add
xor
in
sub
jmp
and
jne
xchg
xchg
cmp
adc
mov
cwde
mov
inc
popf
pop
mov
fsubr
cmps
enter
cmp
jecxz
xchg
pop
inc
mov
dec
jb
jecxz
mov
mul
mov
fmul
in
mov
mov
ja
cmp
cdq
push
nop
cmp
stos
shr
ja
sbb
xchg
sbb
pusha
fstp
lods
xchg
ins
lock
movs
mov
stos
xlat
int3
fld
mov
enter
xor
adc
in
inc
mov
mov
cmp
in
xchg
in
jmp
sub
cmp
mov
sub
sti
jmp
and
dec
jne
retf
add
jmp
data16
fild
xchg
gs
add
xor
add
out
loope
pop
sub
cmp
adc
sti
iret
jle
inc
bound
lds
test
fcom
(bad)
and
movs
cmps
jp
mov
sbb
(bad)
out
in
xor
pop
rol
jo
mov
inc
stos
xchg
pop
(bad)
and
cli
cmp
inc
pusha
jg
adc
ja
push
xchg
movs
gs
mov
(bad)
pop
cld
imul
mov
mov
fcmovnu
push
push
stos
and
mov
mov
adc
or
pop
(bad)
test
iret
inc
ret
popf
loopne
jge
sub
in
xchg
(bad)
ja
arpl
push
in
add
jp
in
or
lahf
das
push
movs
iret
xchg
repnz
ja
xor
imul
jp
pop
add
dec
dec
aad
xor
pop
add
push
xchg
int
pop
add
je
adc
popa
jno
(bad)
push
sub
iret
push
inc
jmp
(bad)
aam
cmc
xchg
xchg
pop
and
data16
dec
xchg
pushf
sub
or
aad
es
stos
pop
dec
mov
bound
mov
pop
not
push
xchg
popa
outs
mov
into
int
je
add
mov
pop
or
adc
out
out
icebp
test
and
lahf
mov
mov
shl
in
adc
jp
push
test
jns
jge
xchg
xor
(bad)
fistp
and
and
inc
mov
out
rol
cmp
sbb
jae
jae
std
adc
sbb
sbb
push
movs
mov
sbb
f2xm1
(bad)
mov
cdq
ja
pop
mov
jne
adc
ret
or
dec
cmp
jmp
test
hlt
pop
das
in
mov
inc
pop
pusha
push
push
mov
jnp
pop
xchg
and
in
cs
jecxz
dec
push
enter
out
(bad)
pop
int
retf
je
aas
(bad)
sbb
faddp
sar
cmp
stos
shl
retf
scas
xchg
xchg
(bad)
push
or
fcmovbe
out
pop
push
push
lahf
iret
lds
mov
stc
cwde
or
mov
in
adc
pop
xlat
into
dec
lock
push
jmp
mov
mov
sbb
jno
cld
push
xor
pop
in
mov
inc
imul
ds
cmps
push
cld
push
addr16
arpl
and
repz
mov
or
mov
les
xchg
lahf
(bad)
(bad)
mov
push
and
retf
dec
out
test
std
or
(bad)
push
xlat
inc
(bad)
dec
fmul
in
pop
cmp
adc
mov
ja
push
mov
and
stc
jne
xchg
jb
fistp
sbb
data16
sub
mul
fwait
push
mov
pop
call
adc
jecxz
push
pushf
dec
jmp
js
(bad)
pop
rcl
aaa
imul
cmp
popf
scas
test
add
push
cli
(bad)
popf
cs
outs
lock
jne
sbb
int3
dec
movs
and
outs
imul
iret
xchg
out
cmp
out
jne
jmp
inc
pop
xchg
out
(bad)
mov
mov
in
cmp
mov
push
inc
test
pop
fwait
add
add
jmp
mov
hlt
dec
jmp
mov
inc
xchg
jbe
dec
mov
or
popa
cdq
sar
and
ss
jg
es
movs
jns
mov
fstp
sub
fstp
and
and
test
stc
xchg
sti
push
adc
cmp
call
mov
push
shl
push
test
leave
addr16
lock
in
dec
cmc
inc
dec
and
xchg
mov
mov
push
push
or
and
call
xchg
out
or
push
inc
adc
adc
cmp
cmc
lea
or
push
outs
in
mov
fstp
ret
sti
jae
inc
push
xchg
xor
cli
fist
cmp
ja
dec
cmp
or
jl
hlt
jnp
xchg
pop
es
iret
cmps
and
push
xchg
xchg
mov
iret
bswap
ja
clc
(bad)
aaa
xor
jl
in
xor
cld
ret
pop
ja
and
movs
popf
shl
inc
cmc
test
inc
pushw
(bad)
mov
ret
cwde
out
pop
mov
xlat
jl
fcomp
out
sub
pop
sbb
xchg
test
into
test
pop
iret
push
xchg
mov
sar
adc
jge
int
mov
push
add
les
sbb
ins
fadd
in
mov
ins
and
mov
shr
jle
fcomi
dec
aad
jo
pop
cmp
mov
push
sar
xor
bound
das
xchg
mov
sbb
out
loope
fld
mov
gs
mov
jnp
arpl
fbld
fild
adc
push
or
cmp
push
shr
mov
cdq
xor
movs
fist
sbb
cld
sub
xchg
mov
push
adc
mov
push
stos
mov
add
mov
mov
and
std
mov
jnp
dec
icebp
push
loop
lea
sub
mov
push
out
sub
mov
adc
dec
lock
xlat
sbb
addr16
shl
mov
stos
inc
cmps
jae
inc
(bad)
das
and
add
and
(bad)
pop
sub
(bad)
push
enter
mov
push
cli
push
pop
jns
mov
mov
push
sub
ret
and
stos
mov
rol
out
out
cmps
fisttp
mov
sbb
adc
cmc
push
ficom
mov
xchg
xchg
and
lods
push
ss
add
das
nop
adc
repnz
test
bound
ja
fwait
daa
mov
push
std
inc
in
sahf
push
add
js
aad
cs
push
loop
inc
sub
enter
lea
in
sub
xor
mov
fucomp
sub
add
jge
rol
out
mov
pop
pop
sbb
loope
in
outs
sbb
ins
les
add
sbb
jecxz
inc
sub
or
lahf
mov
aaa
fldcw
inc
cmc
adc
pop
(bad)
test
add
cmp
pop
or
cmp
mov
aad
mov
pcmpeqb
xchg
push
or
pop
(bad)
scas
ins
inc
sbb
jne
icebp
sbb
fisub
sbb
je
adc
test
adc
inc
xchg
lods
push
mov
hlt
test
jne
mov
cwde
push
push
jecxz
leave
mov
jmp
add
xchg
and
or
push
mov
and
add
xor
mov
dec
shr
(bad)
or
inc
in
jmp
cs
mov
xor
fnsave
xchg
push
xlat
sahf
mov
inc
inc
test
sub
and
jbe
nop
sub
sbb
neg
mov
sahf
add
mov
cmps
adc
aam
aaa
sub
mov
cmp
(bad)
xlat
xor
hlt
lahf
dec
ds
(bad)
outs
and
inc
pop
leave
neg
mov
pop
xor
repnz
mov
mov
adc
aad
iret
mov
fidivr
xlat
repz
push
cmp
and
loop
dec
call
xor
dec
mov
mov
leave
dec
test
jne
stc
xor
xchg
ror
iret
ds
nop
ficomp
sti
pop
dec
lods
cmps
cmp
das
pop
sti
mov
sub
shl
jl
clc
and
pop
aaa
dec
sub
mov
cmps
or
loopne
mov
inc
int3
clc
or
ja
xchg
jmp
mov
call
xchg
and
lds
aaa
jle
popf
inc
push
in
pop
mov
adc
xchg
iret
push
mov
cdq
or
rcl
xchg
pop
or
outs
int3
fild
xor
loopne
shr
mov
ins
rol
xchg
push
leave
cmp
inc
cmp
xor
outs
mov
fnstsw
cmp
dec
adc
clc
mov
or
add
pop
jg
cmp
push
mov
fs
mov
jmp
inc
mov
xor
scas
vxorps
fadd
ja
out
dec
mov
xchg
sub
pop
xor
scas
cmp
shr
mov
daa
add
jne
imul
pop
push
inc
mov
sbb
xor
push
(bad)
jl
out
pop
pop
inc
adc
cmp
push
push
in
out
fwait
push
pop
es
mov
add
mov
hlt
push
push
jmp
ret
push
add
pusha
pushf
inc
add
lea
lea
ins
cdq
mov
fist
mov
ja
ret
mov
(bad)
mov
addr16
jns
xor
jmp
ret
shr
pop
cmc
jns
inc
sub
mov
mov
je
xchg
into
cmp
cmp
cmp
jnp
push
xor
popa
pop
sbb
xchg
push
(bad)
sbb
cdq
dec
sbb
aas
xor
loopne
repz
cld
add
jle
xchg
outs
adc
call
adc
or
repnz
cmp
cdq
enter
dec
mov
dec
or
daa
sub
and
xor
outs
lds
out
les
ror
add
inc
and
out
mov
imul
ret
pop
push
jae
pop
pop
fmulp
mov
iret
dec
mov
push
sbb
jmp
test
scas
add
ins
dec
add
xlat
jle
imul
push
mov
fs
xchg
fadd
shl
xchg
or
push
imul
pop
hlt
jae
push
lea
pop
aad
std
push
or
fwait
ret
and
jnp
rol
push
jne
mov
jle
push
jo
jl
or
and
mov
std
sbb
stos
mov
fstp
mov
push
ins
sbb
mov
xor
mov
addr16
sti
js
mov
jecxz
ins
xchg
inc
push
test
inc
pop
or
xlat
test
dec
push
jp
jbe
pop
sub
lahf
std
push
sub
psubusb
fcom
add
imul
sub
clc
xor
mov
add
mov
sub
sbb
mov
cs
ret
stos
jmp
int
getsec
mov
jno
rcl
fstp
or
fs
mov
sbb
sbb
jg
test
movs
js
scas
pop
pop
and
and
sbb
mov
xor
xor
or
xor
cmp
push
stos
stos
frstor
adc
stc
adc
pop
(bad)
rcl
xchg
lds
(bad)
ds
add
test
and
cmp
pop
shl
add
sbb
cs
rol
sbb
jns
mov
jecxz
inc
fnstcw
rol
movs
outs
sbb
ds
stos
das
dec
ja
jnp
mov
pop
ja
repz
and
shr
inc
xchg
pop
imul
outs
into
les
das
pcmpgtb
and
mov
mov
add
pusha
mov
jmp
aad
pop
mov
jmp
mov
push
and
sbb
stos
sbb
or
dec
cmp
dec
popf
sbb
add
xchg
ds
fld
mov
(bad)
icebp
sub
add
ss
stos
shr
cmps
mov
inc
pop
out
sets
jg
in
fidivr
xchg
cmp
fwait
ins
(bad)
shl
inc
dec
pop
fisubr
adc
push
hlt
adc
sbb
cli
loop
add
out
jmp
xor
call
hlt
push
pushf
fnsave
hlt
sbb
clc
sbb
mov
in
xchg
inc
dec
and
test
push
ja
pop
stc
outs
xchg
push
jl
xchg
jns
leave
and
jns
arpl
test
mov
movs
scas
or
lea
dec
cmp
inc
and
popf
mov
mov
add
int3
pop
loope
adc
dec
mov
fldpi
fucomp
push
ins
sbb
pusha
mov
test
ins
cwde
sbb
add
rcr
jns
stc
xchg
lods
rcl
stos
push
aam
popf
adc
btc
sbb
(bad)
jle
gs
(bad)
outs
and
call
pop
das
xlat
(bad)
sti
ss
sti
pop
shr
in
xlat
test
push
int3
daa
mov
adc
(bad)
dec
adc
hlt
push
jle
jmp
or
aad
lods
or
sahf
test
and
cmps
sbb
jne
fild
loope
mov
dec
sbb
das
fisubr
inc
inc
add
sahf
(bad)
jns
sbb
push
in
xchg
push
adc
xor
call
cwde
and
lahf
xlat
mov
xchg
rol
pushf
sbb
cmps
mov
fld
retf
sbb
pop
cs
dec
mov
add
add
or
lahf
jae
dec
mov
push
mov
xlat
sbb
mov
and
push
sub
call
jb
fisttp
pop
sbb
je
jmp
add
push
in
mov
jbe
push
dec
in
scas
mov
mov
sbb
and
pop
pop
out
xchg
xlat
ss
jp
scas
inc
push
inc
daa
and
(bad)
arpl
sbb
mov
sub
adc
cmp
int3
or
stos
out
sub
inc
(bad)
call
pop
ins
clc
ficomp
hlt
pop
inc
mul
imul
aas
gs
sub
jb
xor
mov
xor
in
pop
jbe
mov
je
inc
lds
and
cmp
pop
adc
cmps
retf
inc
daa
xor
xchg
sub
outs
fsubr
addr16
nop
jbe
in
mov
xor
mov
add
out
xchg
cs
xor
push
bound
leave
clc
or
jp
add
jmp
aad
shl
nop
dec
inc
fld
mul
mov
sbb
mov
mov
or
loopne
int3
(bad)
xchg
jmp
xchg
pop
push
xor
ins
pop
add
sbb
dec
push
dec
loopne
imul
xchg
shr
enter
push
test
(bad)
cmp
mov
jmp
mov
push
ds
stos
test
repz
gs
(bad)
out
jae
jecxz
(bad)
jl
jmp
in
in
and
imul
ret
test
push
fisubr
add
(bad)
mov
cld
dec
int3
je
pop
loop
inc
das
outs
xor
mov
mov
jmp
(bad)
pop
mov
mov
push
ins
pop
push
(bad)
fidiv
ret
mov
pop
ret
bound
pop
ret
add
push
std
push
xchg
outs
mov
enter
pop
sub
ins
pusha
es
movs
aam
cmp
and
mov
cmc
xor
(bad)
dec
mov
out
sub
ror
outs
out
jge
mov
mov
scas
xchg
xor
xor
cdq
out
sbb
pop
xchg
pop
pop
es
movs
fs
popf
loop
xor
rol
loop
xor
repnz
fsub
jnp
call
xchg
lock
inc
jae
sub
inc
jle
and
(bad)
std
sub
sbb
pushf
jnp
inc
push
ficom
call
fs
clc
out
rcl
cli
xor
cmp
mov
xchg
mov
lahf
sbb
mov
push
aaa
sbb
fdivr
push
mov
and
aad
or
mov
xlat
lock
push
nop
fs
push
or
sub
mov
outs
(bad)
mov
fbld
fstp
cmp
sbb
inc
xchg
fcom
mov
mov
(bad)
in
lds
mov
xlat
add
mov
push
rcr
dec
cmc
sbb
sub
mov
les
jne
or
sub
adc
js
cld
or
out
pop
out
fsubr
mov
ins
xor
and
mov
push
push
sbb
ins
pop
(bad)
mov
pop
add
inc
repnz
leave
(bad)
xchg
inc
xchg
imul
xchg
dec
test
xchg
inc
je
mov
addr16
into
xor
sub
mov
or
test
pop
cmp
test
aam
imul
in
push
rol
cmp
shr
mov
cmp
jnp
out
xor
rcl
mov
out
fnstsw
cdq
aam
push
push
je
es
jb
rep
mov
lea
push
jbe
xor
push
ret
mov
pop
jmp
pusha
or
imul
jg
aaa
stos
fldpi
into
add
ja
gs
mov
stos
es
ss
adc
in
cmp
sbb
rol
fisttp
int3
fcmovb
ret
es
cmp
rol
out
dec
add
shl
pusha
clts
shl
ret
add
inc
bound
mov
outs
pop
push
xchg
mov
pop
xchg
and
xor
jecxz
pushf
sub
dec
popa
push
shl
lods
loope
sbb
icebp
xlat
pop
fstp
js
test
adc
bound
mov
popa
call
jmp
mov
sub
pop
aaa
lods
xor
pop
inc
lahf
add
into
jae
xor
xchg
dec
stc
xor
sbb
dec
mov
repz
popa
mov
fst
ins
sbb
lods
xor
jno
pop
mov
dec
sahf
push
outs
xchg
mov
lods
sub
movs
or
rcl
daa
std
pop
sub
and
mov
fwait
mov
aam
mov
inc
test
dec
or
sahf
sti
call
aas
vucomisd
xor
jp
mov
shl
sbb
in
test
gs
ins
cmp
push
cmc
adc
lahf
jb
mov
dec
cdq
mov
(bad)
les
movs
push
test
rcr
outs
cmp
dec
mov
sbb
sbb
repnz
popa
xchg
push
xchg
mov
shl
inc
xchg
dec
mov
push
lea
mov
pop
out
movs
dec
in
rcr
add
mov
pop
ret
out
mov
test
jnp
lods
loope
inc
mov
and
addr16
push
add
jge
mov
cwde
in
loope
jecxz
stos
mov
mov
mov
xor
es
push
fcomi
sbb
js
push
dec
mov
test
(bad)
loope
ja
mov
ins
dec
ret
inc
adc
add
push
push
mov
fst
adc
push
out
pop
icebp
or
sub
mov
neg
enter
fwait
(bad)
lods
retf
jne
pop
jne
adc
jne
or
fs
add
xor
dec
icebp
cmp
jl
push
add
out
jb
pop
into
pop
sub
outs
push
dec
movs
mov
mov
cmp
add
xor
int3
in
or
and
pop
enter
test
mov
fwait
and
in
cmps
lds
and
lods
mov
cmps
cmp
and
add
pop
test
test
pop
in
mov
shl
gs
xor
xchg
cli
fwait
lea
scas
inc
fwait
rcr
xchg
mov
push
cmp
sub
mov
inc
pop
pop
or
rcl
(bad)
mov
add
arpl
ss
pop
stos
mov
or
es
mov
(bad)
gs
and
outs
push
push
push
call
add
(bad)
(bad)
cmp
jmp
aad
push
sub
cmp
mov
(bad)
inc
cmp
enter
cmps
jle
xor
dec
add
loope
ins
mov
in
stc
fucomi
or
sub
adc
push
mov
das
mov
fisub
mov
dec
cmc
xor
push
inc
inc
rcl
pop
cmp
xor
test
(bad)
add
and
call
or
cmp
jne
inc
cmp
or
sbb
cld
imul
mov
lods
pop
inc
pop
add
les
inc
cmp
popa
and
aam
addr16
mov
bnd
dec
dec
mov
dec
icebp
mov
repz
inc
and
mov
cmp
(bad)
cs
sbb
pop
test
push
pop
xor
daa
mov
jle
(bad)
call
pop
sbb
ins
rol
sbb
hlt
push
gs
cmp
adc
sti
inc
xlat
(bad)
ds
popf
dec
ss
xor
icebp
sub
ror
(bad)
mov
pop
iret
fs
dec
scas
mov
xor
int3
dec
mov
mov
xchg
iret
push
lea
movs
std
cmc
(bad)
test
ror
mov
int3
add
in
lock
loope
mov
fwait
xchg
dec
cmp
ret
leave
loop
push
sub
cmc
popf
or
xor
add
jge
js
sbb
pop
add
push
loopne
jge
stos
fcom
pop
ins
add
cld
add
jecxz
xchg
clc
jnp
jmp
mov
(bad)
sub
gs
rcl
push
mov
push
movs
(bad)
xchg
rcl
iret
test
sub
xor
int3
test
dec
add
das
sti
jae
ins
popf
pop
test
shl
cmp
fimul
jae
retf
push
ins
cmp
cmc
movq
mov
mov
adc
sbb
xor
jb
pop
xchg
cmp
icebp
(bad)
dec
ror
pop
mov
popa
scas
cld
mov
fcmovb
push
imul
pop
adc
cmovae
mov
jle
(bad)
mov
ins
fistp
adc
ret
(bad)
aam
adc
sbb
int3
mov
cwde
icebp
push
ror
sahf
sub
push
jnp
pop
loop
mov
lock
dec
xchg
xchg
stc
ja
mov
out
fs
add
out
stc
pop
imul
xchg
int
jb
ins
add
add
retf
adc
sbb
sub
dec
xor
outs
pop
jle
and
pop
les
inc
sbb
adc
inc
popf
push
pop
(bad)
aad
ficomp
icebp
retf
movs
retf
or
inc
mov
push
mov
cmp
(bad)
lahf
push
dec
sub
xchg
stos
js
sbb
jl
ins
cmc
mov
push
jg
push
shr
stos
pop
fwait
xchg
in
or
test
(bad)
jns
aam
aaa
mov
sbb
rcr
dec
not
fs
(bad)
ror
test
jecxz
pop
and
ins
fstp
mov
sbb
jmp
sbb
adc
gs
rcr
add
into
lea
sub
xchg
mov
test
pop
mov
mov
xor
jp
mov
push
lods
xor
mov
rcr
and
sbb
movs
pop
fsub
lock
mov
mov
mov
mov
fisubr
rdpmc
mov
jecxz
movs
ins
les
push
fidiv
adc
in
mov
cmp
loop
mov
jnp
mov
cbw
xchg
mov
ret
fs
sub
(bad)
cmp
sar
and
ret
mov
pop
ficomp
sub
mov
push
xchg
add
out
adc
scas
pop
inc
repnz
push
sti
mov
mov
arpl
mov
out
pop
push
rcr
push
fmul
mov
jae
pushf
or
shr
xlat
xchg
gs
movs
lock
xchg
sub
adc
ret
test
mov
lahf
sub
push
push
leave
dec
mov
daa
fidiv
loop
mov
adc
jg
mov
addr16
and
ror
je
mov
xor
loop
loopne
rcl
dec
lods
(bad)
inc
aad
pusha
dec
(bad)
int
jmp
ins
out
mov
inc
je
out
ins
push
push
mov
mov
push
shr
adc
push
cdq
push
xor
and
pop
cli
xchg
add
and
inc
and
mov
inc
jbe
jne
fsub
mov
mov
repnz
lea
sbb
jle
sar
cmp
in
rcr
fs
enter
iret
lea
out
movs
cmp
aam
sbb
rol
out
mov
mov
jae
xor
push
lock
fsubr
cmc
jo
sbb
mov
(bad)
mov
and
adc
push
dec
xchg
ss
lds
stos
mov
mov
mov
pop
pop
aas
out
pop
test
inc
cmps
jmp
aad
outs
stc
or
in
fld
out
or
out
outs
sar
inc
or
out
xchg
out
aaa
push
data16
adc
pop
jne
cmps
retf
cs
fcomp
lea
loope
xchg
mov
mov
xor
mov
mov
in
add
loop
cmps
pop
xchg
sbb
mov
(bad)
mov
nop
push
out
dec
add
fcom
sub
push
push
xchg
or
clc
das
out
pop
or
rcl
inc
(bad)
stos
cli
retf
jnp
xchg
xchg
test
mov
(bad)
pop
ins
inc
out
push
cmp
xchg
je
dec
pop
dec
sub
icebp
int
cmps
inc
add
test
mov
dec
push
fwait
cmp
ss
inc
add
sti
push
pop
loope
popf
sub
push
mov
inc
loope
icebp
jecxz
xor
repz
cmp
neg
loopne
inc
xor
nop
test
int
jns
mov
popf
push
adc
pushf
ins
add
das
adc
cmp
outs
dec
lods
mov
clc
out
das
jmp
jl
jbe
dec
es
pop
ins
sub
push
adc
push
ins
test
clc
mov
loopne
sub
sub
xor
hlt
sbb
jmp
repnz
sbb
add
mov
nop
dec
in
in
mov
ins
cwde
xor
outs
scas
dec
push
imul
out
imul
enter
ins
lods
jmp
jp
xor
mov
inc
fidiv
nop
inc
daa
nop
das
cmps
xchg
or
ins
sbb
ja
add
mov
mov
ss
fmul
in
fstp
xchg
arpl
fcomp
pusha
cmc
and
leave
dec
popf
or
and
sub
data16
mov
lahf
push
pop
lahf
popf
xchg
jp
fisub
xor
mov
jno
in
dec
fmulp
dec
xor
push
mov
mov
sub
sub
sbb
jp
add
fild
aam
lods
push
inc
cmc
sub
inc
aad
inc
sub
jns
add
add
and
xchg
out
sub
xor
xchg
lock
rcr
test
ins
lahf
sub
lahf
xor
inc
sbb
jmp
xor
sbb
adc
cmps
lods
lock
into
dec
mov
fidivr
cmp
aam
dec
shl
mov
arpl
mov
addr16
pusha
mov
outs
or
out
lock
jns
aam
cmps
jae
ins
aad
hlt
das
test
mov
iret
mov
daa
jp
in
cmp
lahf
pusha
and
jnp
or
mov
fist
test
pop
stos
scas
lods
loope
xchg
mov
cmc
dec
hlt
pop
fcom
shl
xchg
cmps
jnp
ror
jae
(bad)
test
inc
cdq
sbb
pop
addr16
sub
sahf
stos
repnz
sbb
dec
xor
ins
push
sub
xchg
iret
stc
movs
mov
mov
cmps
pop
cmp
pop
sbb
inc
sbb
ins
sub
call
inc
cmps
call
out
sti
pop
and
sub
(bad)
pop
into
jmp
and
fcmove
mov
xor
xchg
mov
iret
loope
int3
ja
or
xchg
dec
push
sub
push
xor
loop
add
pop
mov
rcl
call
sub
pushf
and
jge
out
retf
xor
inc
jns
test
push
pusha
jecxz
sbb
retf
mov
mov
(bad)
loop
and
std
and
sbb
frstor
and
sbb
mov
fsubrp
fwait
xchg
stc
xchg
push
push
dec
mov
sbb
fistp
sti
push
faddp
sbb
shl
addr16
test
into
bound
cmc
out
pop
jb
test
ret
inc
xchg
loopne
and
mov
jbe
js
mov
mov
das
(bad)
fucomip
stos
fstp
sub
data16
fldcw
gs
(bad)
xchg
mov
fsubr
mov
cmps
cmp
(bad)
sar
clc
das
mov
(bad)
icebp
in
iret
inc
shl
and
mov
cmp
mov
test
in
mov
sub
cld
jl
push
fstp
jmp
retf
dec
fcomp
jne
stos
add
xchg
sub
sbb
dec
inc
ret
sub
mov
loopne
push
sbb
sar
inc
push
adc
mov
adc
nop
xlat
fwait
push
lahf
pop
dec
add
jge
(bad)
jl
mov
or
and
aaa
mov
mov
aas
add
daa
sbb
pusha
or
xchg
mov
into
and
sahf
test
dec
or
neg
xchg
dec
aad
xchg
ins
pop
pop
(bad)
jmp
or
clc
outs
dec
fucomp
dec
leave
cmps
push
cmp
std
xchg
fstp
jl
nop
fs
repnz
out
and
jno
xchg
fstp
int3
das
add
xlat
jns
mov
or
mov
adc
and
add
mov
cmc
gs
mov
cmps
xchg
or
dec
cld
ins
jg
mov
pop
jg
xor
pop
in
jb
add
pop
(bad)
jo
cmps
rcr
int3
mov
ja
pavgw
push
es
lahf
rcr
jg
fs
push
cmp
movs
popf
adc
jmp
nop
pop
cs
sbb
push
sbb
sar
xchg
pop
mov
mov
in
mov
add
pop
push
ins
pop
ret
icebp
push
xor
or
movs
scas
and
fdivr
dec
(bad)
movs
xchg
sub
iret
adc
js
push
in
stos
mov
push
aam
and
inc
ds
(bad)
and
or
in
xchg
fimul
adc
inc
call
mov
(bad)
pushf
or
xor
hlt
ds
js
(bad)
pop
(bad)
mov
push
pop
loop
(bad)
xlat
arpl
popf
sahf
push
jno
mov
jbe
add
mov
jbe
retf
xor
adc
repz
retf
jmp
xor
adc
push
unpcklps
icebp
scas
push
fst
cmps
jle
xlat
aam
jb
retf
add
xchg
jo
(bad)
fist
cmps
jne
sub
xor
(bad)
or
sub
shr
icebp
aaa
pop
mov
lods
lods
jae
adc
dec
fwait
loop
test
cs
sti
mov
stos
pop
neg
sbb
scas
add
dec
cmp
mov
dec
call
aam
ret
(bad)
ss
mov
sbb
pop
cmp
and
and
loopne
pop
scas
out
sub
xchg
arpl
dec
cmp
mov
mov
dec
sbb
sbb
enter
jmp
stos
push
fstp
or
fwait
and
xchg
fidiv
sub
push
cmp
cmp
repnz
dec
and
test
jmp
jg
adc
movs
(bad)
in
mov
and
rcr
sub
add
xchg
lds
xor
lock
out
std
enter
sbb
push
xchg
dec
sub
retf
fs
push
and
call
and
int3
and
arpl
lea
dec
js
(bad)
test
adc
sar
or
mov
mov
aad
pop
pop
jmp
frstor
movs
scas
enter
sub
cli
shl
xor
and
xchg
addr16
mov
cmp
cmp
ret
sub
mov
jmp
xchg
push
nop
fistp
and
loope
into
xchg
movs
xor
lods
hlt
adc
in
mov
mov
mov
push
push
movs
or
xor
jmp
jmp
imul
sbb
nop
jno
xchg
enter
into
adc
imul
adc
mov
mov
mov
gs
or
add
mov
jb
push
jne
mov
dec
cli
dec
dec
sar
dec
xor
push
mov
xor
pop
and
xchg
dec
out
push
pop
(bad)
jg
add
pushf
ficom
ficomp
jbe
out
sbb
or
mov
out
jnp
push
jmp
loopne
or
jmp
sti
xchg
adc
push
repnz
loop
xlat
aad
out
ror
jae
rcl
ja
inc
or
dec
jmp
mov
repz
jmp
sbb
(bad)
popa
xchg
and
nop
push
and
imul
in
lods
xchg
lahf
call
cmps
jno
sbb
lock
imul
inc
xor
lea
jg
arpl
xor
xchg
add
dec
add
mov
jmp
imul
dec
ss
jns
icebp
and
xor
add
call
fwait
addr16
cmp
xor
fs
mov
xchg
pop
shr
iret
scas
lds
sbb
psubq
fsubr
sar
push
outs
popf
xor
cmp
inc
or
arpl
inc
inc
add
mov
jne
stc
mov
retf
mov
rol
xchg
inc
nop
push
dec
retf
sbb
scas
retf
clc
into
or
(bad)
mov
gs
cmp
sbb
and
add
in
add
std
sti
ret
aam
aaa
push
je
mov
dec
daa
(bad)
imul
ja
ficomp
fstp
sub
pop
xchg
pop
outs
call
mov
lods
jecxz
addr16
pop
(bad)
mov
push
jnp
test
dec
adc
pusha
or
mov
mov
(bad)
(bad)
adc
jle
dec
aas
in
iret
adc
sti
loope
lock
and
frstor
push
cdq
dec
enter
sbb
lea
jne
jmp
stos
add
mov
fwait
sub
push
in
mov
mov
mov
add
push
cmp
repnz
arpl
mov
and
fsubr
repnz
loope
xchg
loopne
sbb
adc
add
jl
cli
les
push
inc
mov
cmove
and
push
fsubr
popa
stos
loope
or
pop
mov
jbe
mov
movs
jp
and
dec
mov
ins
and
jnp
or
das
ret
mov
push
push
movs
idiv
push
add
in
outs
jmp
mov
test
icebp
ret
lds
sbb
int
dec
or
mov
loopne
push
nop
scas
push
mov
es
ins
mov
ror
cs
dec
out
sbb
ret
jbe
stos
jp
sbb
aad
sti
mov
xchg
sti
or
pusha
cmps
inc
push
push
adc
nop
xchg
loopne
dec
pop
pop
or
shl
loope
pop
mov
inc
in
pushf
popa
adc
rcl
jno
sti
test
mov
test
mov
shl
(bad)
(bad)
movs
jno
ja
lds
pop
pop
xor
mov
lds
retf
das
out
and
test
mov
out
movs
push
xor
push
push
mov
(bad)
rol
retf
push
jne
or
dec
out
or
stc
jp
cmps
mov
dec
pop
daa
mov
dec
push
push
mov
das
mov
jp
fcom
inc
stc
mov
or
retf
xor
stos
cmps
ins
jecxz
mov
sub
jmp
xchg
inc
push
push
sbb
cmp
dec
mov
test
push
add
mov
push
and
inc
addr16
push
push
cli
ret
cwde
adc
daa
in
jle
jne
js
cs
enter
sub
mov
inc
rcl
xchg
mov
jl
ss
pop
cdq
cmps
hlt
cmps
(bad)
or
adc
scas
lods
jl
inc
iret
mov
mov
push
das
retf
dec
(bad)
std
jo
add
pushf
mov
push
pop
jmp
jmp
cmps
iret
mov
ins
dec
mov
mov
fcmovu
(bad)
jecxz
cdq
push
pop
call
cmp
or
xchg
test
and
in
or
dec
mov
pop
test
icebp
(bad)
and
dec
jns
cmc
lahf
sti
pusha
jne
mov
sbb
jmp
sbb
or
adc
jno
pop
imul
push
loopne
mov
fcmovnb
xor
ins
xchg
jb
test
mov
shl
mov
pop
push
movs
lds
lea
mov
not
shl
adc
call
aaa
movs
sbb
iret
pushf
jnp
dec
add
mov
mov
les
fldenv
sbb
mov
aam
xlat
sbb
enter
inc
pop
xchg
shl
adc
movs
adc
sub
jmp
js
dec
xchg
dec
retf
pop
addr16
out
test
std
ror
lock
push
out
xor
sbb
dec
fcom
aas
mov
dec
mov
mov
push
xchg
fistp
or
retf
stos
mov
lahf
mov
fwait
pop
and
lahf
lahf
repnz
sahf
rol
push
loope
icebp
jecxz
daa
mov
js
int
ficom
xchg
sbb
mov
enter
je
aaa
mov
test
jnp
adc
add
and
cs
pop
push
xor
out
ins
out
push
jecxz
pop
lahf
pop
loop
call
call
cli
out
nop
adc
out
mov
add
fild
xchg
cmps
repz
int3
popf
cmp
in
lock
sub
es
inc
stos
add
or
adc
out
cli
xor
pop
cmp
test
aam
je
enter
add
xchg
xchg
retf
mov
in
stos
scas
rcl
dec
dec
cmc
cmps
mov
arpl
out
(bad)
dec
xor
xor
std
ds
sub
iret
cwde
mov
popa
push
retf
jne
pop
dec
mov
xchg
inc
mov
xor
jae
jno
cmc
iret
pop
addr16
xchg
mov
int
pop
jge
adc
mov
test
(bad)
inc
fidiv
jp
test
dec
nop
jo
sbb
add
push
cmps
dec
sbb
(bad)
cmps
call
cdq
iret
cmp
sbb
mov
out
and
pop
mov
(bad)
sbb
xor
rcl
cmps
xlat
dec
xchg
jp
and
mov
out
jo
push
iret
fs
or
sub
fiadd
pop
jp
test
ins
push
stos
stc
sbb
rol
dec
xchg
ja
cmp
iret
jbe
and
leave
inc
pop
sbb
cmp
jg
in
add
cwde
sti
cmp
loop
sbb
push
fisttp
xor
fild
pop
loop
add
xchg
mov
mov
sub
into
rol
cmp
add
cmc
(bad)
xrelease
push
xchg
cmp
(bad)
into
movs
fnsave
mov
push
add
sar
fisub
fs
es
das
push
adc
rcl
adc
add
adc
arpl
push
jb
icebp
sbb
pop
pusha
mov
xchg
cld
push
test
ins
pushw
inc
addr16
std
pusha
push
out
je
push
xchg
cmc
shl
mov
cwde
push
add
shl
mov
(bad)
adc
inc
in
cwde
aaa
sahf
js
pop
push
into
movs
or
stos
jo
cli
stos
cvtps2pi
test
adc
cmp
popa
scas
fmul
pop
jno
loope
std
fs
cs
inc
pop
arpl
cwde
jge
sub
adc
cdq
or
lock
cmps
push
fdiv
cmp
clc
fadd
nop
pand
(bad)
sbb
ins
mov
pop
or
mov
xor
mov
loop
mov
in
mov
xor
ret
mov
nop
mov
cmp
cmp
adc
pop
pushf
lahf
fcom
arpl
jmp
sub
cmp
ret
out
dec
add
or
fistp
iret
cmps
xchg
xchg
push
pusha
pop
inc
jl
(bad)
xchg
int
cmc
in
loopne
dec
mov
mov
iret
jmp
lds
pop
rcr
mov
fcomp
mov
xchg
lock
add
je
or
xchg
scas
int
sbb
or
add
es
and
fwait
mov
cmp
pop
aam
push
clc
sbb
pop
or
jg
jb
out
xor
mov
push
mov
jo
rcl
int
cmp
test
xchg
add
jle
pusha
lods
and
jmp
call
cmps
jbe
jb
sbb
adc
add
push
outs
dec
inc
out
cli
fdiv
push
inc
jne
nop
jno
movs
mov
xchg
pop
dec
(bad)
and
retf
sbb
inc
pop
stos
mov
and
(bad)
mov
fcomp
inc
imul
inc
retf
ret
jns
sbb
outs
cmps
jbe
mov
jecxz
and
and
lahf
js
nop
mov
fdivr
jge
retf
call
dec
jmp
dec
mov
inc
jmp
stos
and
sahf
jo
fild
mov
push
popa
and
or
mov
dec
add
ss
or
stos
fimul
sub
push
xchg
push
cmp
aam
adc
xchg
push
lods
mov
or
xchg
pop
fld
scas
cwde
or
gs
adc
sub
mov
add
test
mov
pusha
in
jae
mov
cli
movs
add
jmp
loopne
sub
mov
mov
arpl
out
in
push
mov
repz
fimul
inc
jo
aas
pop
push
jge
std
in
add
jg
es
pop
sub
popa
xor
adc
dec
add
push
xchg
xor
aas
es
repnz
xchg
sub
or
inc
lods
popf
sub
and
cmp
or
mov
jmp
int
xchg
push
ret
daa
push
icebp
loop
ss
clc
test
jmp
mov
push
or
jbe
cmp
pop
sbb
aaa
xchg
xchg
mov
sub
push
retf
jp
pop
xchg
push
shr
cwde
dec
mov
jns
dec
push
inc
daa
xchg
popf
cdq
fbstp
ret
jnp
dec
outs
mov
push
call
cmp
inc
xor
sub
neg
xor
cmp
mov
ret
xor
jp
mov
bound
add
retf
push
xor
iret
test
add
jg
add
push
sub
sbb
and
jo
add
and
jne
scas
out
ja
test
stos
sub
push
out
inc
pop
push
push
dec
scas
outs
add
popa
(bad)
adc
dec
into
adc
pushf
(bad)
enter
mov
mov
ret
dec
frstor
adc
add
outs
dec
dec
sub
fs
aad
jnp
in
xor
jno
cs
movs
sbb
imul
int
daa
and
jb
sub
leave
xchg
and
inc
pop
sub
jo
xlat
(bad)
fldcw
lds
mov
mov
inc
lahf
out
stos
pop
sub
addr16
aaa
xor
push
pop
and
jmp
lea
sti
jne
sub
inc
sbb
fidiv
jb
jnp
mov
mov
lock
in
out
nop
sub
test
sti
or
mov
and
cmp
test
out
and
and
retf
xchg
inc
ins
lds
jne
(bad)
fistp
gs
dec
pop
jp
adc
push
mov
sar
cmp
xchg
or
sbb
jl
jecxz
mov
lds
mul
mov
mov
pop
adc
xor
test
jecxz
mov
imul
shl
nop
je
sbb
in
push
mul
jmp
stos
mov
bnd
pop
pop
sub
hlt
dec
xor
ret
nop
sub
popf
adc
dec
aam
mov
ds
scas
dec
fist
(bad)
jne
int
mov
addr16
popf
cmp
mov
(bad)
dec
(bad)
jmp
jmp
cli
add
cld
push
repz
fstp
stos
aad
mov
repnz
outs
outs
xchg
dec
test
and
call
test
mov
pop
fbld
std
jns
jp
rol
out
push
xchg
(bad)
std
cli
stc
in
ins
xor
add
ficom
adc
imul
jle
inc
inc
sbb
fcmovnb
sub
retf
adc
sub
test
xor
aaa
cmp
retf
test
inc
push
sbb
xor
hlt
jb
sbb
or
mov
mul
test
loope
mov
push
pop
push
fsub
or
xor
lods
or
jg
sbb
fnstenv
inc
out
sub
stc
in
add
adc
mov
addr16
sar
ret
xchg
pushf
inc
pushf
loopne
jle
int
dec
ficomp
dec
jge
jl
lods
pop
jnp
cwde
loope
movs
sbb
das
jae
loope
das
loopne
call
nop
jp
das
xor
xor
jbe
jb
imul
stc
dec
xchg
stos
aad
xchg
and
jge
adc
xor
mul
ins
outs
pop
in
fs
pushf
or
dec
push
dec
retf
loope
pop
rcr
cmp
fisub
mov
xchg
add
mov
fdiv
inc
mov
lods
out
(bad)
push
outs
sbb
pop
jl
mov
dec
and
push
js
sub
jp
mov
pop
push
inc
scas
retf
push
loope
push
outs
xchg
cmps
sti
sub
dec
cld
lods
stc
cwde
sub
ds
rol
push
fsub
pop
jl
dec
cmp
cmc
outs
inc
test
xchg
clc
mov
out
adc
aaa
jno
test
push
aad
lods
push
pop
imul
xchg
xor
fst
gs
xchg
mov
jl
loopne
sbb
jg
in
pop
dec
fisub
xchg
jnp
das
push
out
cld
in
mov
enter
ficomp
fisubr
cmp
or
push
cmp
mov
mov
das
adc
hlt
(bad)
shr
lock
sbb
js
jns
lods
cmp
nop
sbb
in
inc
(bad)
std
jge
cli
sub
adc
sbb
jecxz
jl
test
dec
call
push
or
jne
jmp
lock
mov
leave
mov
sub
(bad)
cmp
jmp
rep
jnp
mov
jns
jp
adc
inc
aam
mov
cwde
jo
movs
pop
ja
sub
inc
inc
outs
cs
mov
and
push
(bad)
push
cli
add
mov
retf
jb
out
jnp
iret
jmp
mov
and
pop
xchg
xlat
cld
repz
(bad)
(bad)
or
sub
pop
fucomi
mov
or
mov
loopne
sub
fsub
mov
push
shr
inc
out
sahf
clc
jns
dec
in
cmp
or
bound
std
(bad)
retf
sub
xchg
push
add
dec
call
aas
or
retf
cld
(bad)
jecxz
jbe
call
push
ret
aas
mov
lods
jmp
aas
xchg
fcom
call
mov
stos
xchg
xlat
inc
mov
into
mov
pop
jmp
push
push
xchg
repnz
mov
lds
sbb
jbe
dec
jecxz
ret
ds
ss
loopne
cmp
cmp
mov
mov
push
push
jmp
into
out
rol
retf
out
push
jnp
sbb
pop
imul
(bad)
and
retf
out
mov
popa
pop
lahf
sub
dec
stc
jno
dec
add
scas
sub
or
dec
aad
aam
mov
sbb
push
sub
inc
fnstcw
outs
(bad)
xchg
inc
in
mov
push
imul
dec
out
(bad)
icebp
and
xchg
mov
shr
or
in
pop
pop
sti
call
dec
push
adc
(bad)
push
cld
or
test
movs
cmp
pop
and
sbb
sti
pop
mov
pop
bound
imul
ins
push
dec
retf
into
nop
or
or
mov
mov
iret
shr
scas
ja
retf
push
push
jge
pop
pop
mov
pop
cmp
and
leave
or
ins
stos
jecxz
adc
imul
mov
mov
psubb
jmp
aad
jmp
pop
das
adc
bound
push
jnp
(bad)
mov
xor
mov
aam
ins
in
(bad)
or
lea
ror
mov
out
adc
push
sahf
adc
nop
inc
lds
xchg
clc
out
pop
or
stos
cld
fdivrp
mov
(bad)
lods
shl
pop
push
mov
cs
fld
into
pop
sbb
cmp
cmp
aas
mov
inc
or
or
mov
sbb
mov
jbe
lea
dec
mov
movs
ror
push
in
rcr
leave
pop
subps
jno
jo
hlt
shr
xlat
mov
xor
rol
out
xchg
mov
jle
jb
popa
ss
push
fidivr
sbb
and
sbb
ins
(bad)
xchg
mov
xor
jg
lods
mov
mov
add
enter
fbstp
nop
inc
push
push
inc
subps
lea
ror
test
cld
(bad)
jbe
or
in
push
aam
aad
popf
xor
dec
js
cwde
pop
in
adc
sub
and
mov
inc
or
mov
pop
das
repz
inc
je
lods
cmps
jb
xchg
repnz
es
mov
shl
movs
sub
cmp
lods
cli
(bad)
fnstsw
xor
jns
sbb
xor
in
xchg
cmc
mov
push
cdq
push
add
fwait
sbb
mov
or
or
(bad)
js
and
inc
test
jns
jg
in
repz
sti
fist
(bad)
aad
xor
pop
out
enter
or
or
repnz
xchg
and
cmps
push
addr16
xor
xor
jmp
or
push
add
outs
inc
mov
push
xor
inc
or
(bad)
mov
dec
xor
ss
xlat
test
push
push
ins
js
ss
std
mov
and
xchg
mov
dec
inc
ss
xchg
test
fisub
xchg
mov
fnstenv
sbb
xchg
xor
mov
pop
pop
mov
adc
and
inc
call
add
pop
sbb
popa
sbb
push
ins
not
in
retf
sub
dec
loope
jb
mov
shl
push
ror
jo
div
inc
sar
mov
adc
or
jns
movzx
outs
or
int
jl
fucomip
das
dec
or
mov
sub
ins
fld
int
test
add
add
push
mov
xchg
inc
add
es
int3
out
sar
and
push
sub
add
std
hlt
cmp
lds
sub
jb
push
int
ror
loope
mov
xchg
scas
or
clc
inc
xchg
cmp
xchg
out
inc
js
jl
cs
or
xchg
jp
jno
cmp
std
imul
lods
sti
lods
jns
mov
xchg
jne
cld
and
add
mov
rdpmc
mov
and
push
mov
out
out
out
iret
or
adc
push
sbb
and
jl
imul
sub
scas
mov
sub
(bad)
out
in
add
or
inc
int3
xchg
and
out
test
xchg
xlat
sbb
inc
sub
xchg
(bad)
mov
mov
pushf
xchg
inc
inc
or
repz
jo
inc
dec
loopne
rol
mov
popf
ins
cli
int
adc
adc
retf
sub
sub
hlt
popa
out
addr16
jle
repz
push
inc
jg
ror
ds
push
outs
cmp
and
inc
mov
sti
and
je
or
das
(bad)
pusha
mov
ror
es
xor
ficomp
dec
mov
jmp
add
cld
js
or
cmp
mov
mov
pop
lods
lea
jo
lds
retf
cmp
and
xchg
dec
push
fld
mov
cmp
add
push
leave
or
inc
stos
cli
ret
dec
cli
adc
pop
mov
mov
push
mov
movs
inc
sbb
test
push
xchg
ins
inc
fdiv
adc
daa
cli
pop
(bad)
mov
mov
into
adc
or
and
bsf
adc
sub
lods
mov
add
jle
loope
inc
outs
scas
outs
add
dec
shl
call
adc
out
mov
int3
pop
stc
pop
lds
mov
jg
jnp
pop
movs
test
add
xchg
pusha
push
jns
jno
dec
fimul
gs
and
or
xor
inc
sub
pop
dec
adc
or
push
aam
sar
push
addr16
adc
jnp
(bad)
(bad)
out
sub
pop
or
sbb
fnstcw
jge
call
outs
push
leave
(bad)
cdq
fadd
out
pop
imul
into
loope
or
push
xor
(bad)
mov
test
dec
pop
push
call
xlat
dec
mov
mov
retf
outs
ja
cmp
xchg
mov
aaa
and
xchg
rcr
xor
lahf
cs
add
(bad)
aad
jae
mov
scas
or
add
or
adc
and
dec
pop
cld
es
shl
bound
mov
and
push
mov
inc
mov
vpslld
movs
sub
mov
mov
inc
lods
jno
mov
stos
test
jno
pop
jo
fisub
jecxz
(bad)
push
sub
jmp
or
sub
pop
sahf
in
repz
and
enter
not
push
mov
sti
and
xor
adc
push
lock
add
popf
fsubp
dec
ficom
or
iret
arpl
daa
mov
adc
xchg
xchg
lods
pop
mov
and
jo
fsubr
sub
dec
sub
(bad)
data16
out
outs
or
sbb
mov
test
cmc
fst
sbb
jb
jmp
dec
or
mov
pop
call
in
aaa
jbe
adc
(bad)
out
sbb
lods
jmp
ins
cmps
add
nop
adc
sub
gs
jnp
leave
jmp
ret
inc
mov
mov
dec
inc
in
push
icebp
call
push
sub
and
xchg
fisubr
mov
retf
int3
sbb
fabs
std
and
cmp
fisubr
or
adc
pushf
xor
or
inc
fst
mov
test
xlat
mov
dec
mov
scas
dec
fild
mov
jmp
dec
scas
push
inc
ja
add
mov
arpl
or
inc
aad
sub
shr
mov
mov
fdivr
adc
out
add
mov
mov
lods
xor
ja
js
pop
mov
sub
loop
lahf
dec
pop
mov
or
sub
movs
xchg
sub
retf
add
pop
adc
cmc
mov
lahf
inc
sub
and
sbb
imul
xchg
scas
add
add
and
pop
test
pop
clc
neg
pop
neg
call
mov
mov
rol
or
mov
mov
inc
inc
add
sub
clc
ret
cmp
popa
pop
imul
sub
ret
call
adc
ja
push
icebp
aam
jg
sub
add
xor
lds
jne
pusha
jns
xor
std
sahf
daa
jg
sub
add
add
sbb
mov
push
jl
cmp
adc
outs
sahf
push
add
and
add
xor
inc
mov
je
(bad)
les
xchg
std
lock
cmc
jp
pop
and
imul
jle
into
lahf
arpl
and
xchg
push
mov
hlt
fldenv
stos
xor
jg
arpl
aaa
add
test
adc
shl
xlat
xchg
sub
adc
push
jmp
sbb
js
push
mov
mov
xor
fwait
cmp
int3
mov
pop
adc
dec
jbe
ss
addr16
mov
std
leave
mov
ds
jb
mov
loopne
mov
pop
les
stos
std
pop
mov
je
lds
xchg
or
xchg
iret
aas
js
jecxz
out
jge
add
ja
inc
je
ins
gs
pop
adc
call
and
and
scas
sub
test
jns
lods
enter
aaa
aas
mov
imul
jg
xor
cmp
jae
jl
lds
loope
daa
inc
jp
jo
pushf
cld
repnz
add
outs
sub
mov
cli
fwait
adc
inc
shl
mov
mov
adc
repnz
movlps
lds
fs
xor
add
dec
or
mov
stos
addr16
sbb
jo
xchg
mov
cmp
inc
push
outs
jae
hlt
jne
and
fmul
sbb
pop
pop
movs
pop
jae
push
mov
add
bound
(bad)
pop
adc
js
dec
lods
dec
jecxz
aas
aad
mov
data16
fdivr
push
mov
movs
xor
inc
aas
rcr
add
pop
push
pop
hlt
inc
jbe
iret
inc
jp
daa
lods
stos
loope
scas
mov
pop
add
leave
inc
add
clc
mov
push
mov
test
and
imul
int
and
iret
sub
ja
cmp
add
push
fiadd
sbb
sbb
ror
push
dec
xchg
push
je
xor
or
dec
push
inc
push
imul
xor
mov
mov
xor
ins
sar
pop
rcl
aas
popa
pop
lahf
and
call
sbb
shr
pop
dec
add
and
lahf
dec
mov
adc
loope
mov
xchg
scas
in
les
rol
push
shl
mov
push
arpl
lds
jmp
addr16
jae
jecxz
and
xchg
jge
mov
in
ret
(bad)
into
dec
(bad)
stos
jge
ror
popa
push
or
adc
outs
cmp
fdiv
sub
sbb
mov
jg
jno
pop
cmp
jmp
mov
rcr
mov
retf
push
push
cmp
cmps
daa
shl
inc
or
addr16
in
(bad)
jne
mov
jg
jb
push
cmp
ret
cmp
or
cmps
mov
xchg
pop
cmp
jmp
mov
in
rol
in
es
popf
or
bound
test
adc
mov
cmp
jg
mov
fadd
popf
mov
push
mov
clc
add
xchg
mov
ror
es
ds
retf
inc
inc
mov
push
mov
fcom
xchg
repnz
sbb
inc
xor
(bad)
xlat
cmps
adc
icebp
dec
xor
lahf
jbe
aaa
aad
pop
mov
les
jp
fwait
aam
xchg
dec
add
jmp
xor
mov
movs
jecxz
cmp
sbb
cmps
add
push
data16
aaa
fsubr
call
ficom
mov
retf
lds
and
jle
hlt
pop
cwde
dec
mov
mov
xchg
outs
aaa
add
cld
ins
repz
pop
xor
xchg
add
fs
(bad)
mov
push
pop
jecxz
cwde
shl
pushf
pop
xor
frstor
(bad)
dec
mov
mov
iret
mov
js
sub
movs
push
sahf
dec
es
in
test
mov
adc
fidiv
add
pop
mov
pop
jecxz
and
or
mov
lods
ror
jle
(bad)
loope
jmp
mov
je
cmps
dec
push
inc
mov
mov
aam
adc
or
(bad)
in
push
jnp
sbb
mov
cmp
sub
and
pusha
sub
in
xor
iret
mov
pusha
add
dec
pop
dec
sbb
xchg
mov
retf
and
jno
mov
loope
fadd
ror
sub
jbe
repz
pop
adc
xor
in
arpl
je
push
lds
add
call
in
inc
inc
adc
in
push
lahf
out
rcl
push
aas
or
xlat
cmp
cmp
and
cmp
inc
xchg
dec
test
arpl
in
mov
fstp
daa
jg
mov
mov
dec
add
and
xor
mov
(bad)
xchg
loope
call
fild
shl
and
pop
stc
out
add
leave
test
not
popf
pop
lods
pop
pop
pop
dec
pop
jmp
movs
mov
sti
push
iret
mov
xor
(bad)
addr16
xchg
mov
and
(bad)
int
mov
add
mov
mov
scas
dec
shl
(bad)
or
repnz
ffreep
pop
push
add
xor
cmps
and
xchg
pop
dec
cmp
lds
jo
add
sti
mov
adc
push
mov
sar
repnz
pop
mov
cmp
aam
fcom
mov
mov
call
xor
in
mov
jo
movs
in
adc
popf
mov
inc
inc
or
pop
or
jae
mov
mov
or
pusha
lds
mov
pop
pop
push
icebp
stos
inc
daa
test
daa
xchg
(bad)
in
test
or
mov
nop
xchg
cli
imul
inc
stos
daa
jo
out
sbb
es
xchg
sub
movs
adc
xor
leave
xlat
loop
push
jecxz
ins
dec
dec
xor
ret
lds
push
out
dec
test
jle
loope
adc
adc
dec
imul
xor
fdiv
pop
adc
mov
cmps
dec
jecxz
in
mov
mov
hlt
leave
fdivrp
dec
dec
(bad)
xor
mov
icebp
jo
jnp
(bad)
enter
push
sahf
xchg
addr16
cmc
dec
and
add
jge
jmp
pop
cmp
jp
push
in
cmp
into
jnp
rol
mov
ins
inc
pop
xchg
out
dec
int3
mov
imul
cmp
sbb
std
mov
sub
or
aad
sbb
stc
mov
push
pop
stc
popa
xchg
cmp
imul
sbb
fmul
mov
aaa
inc
pop
push
les
mov
mov
lahf
sub
mov
jbe
pop
push
test
stc
adc
lods
pop
inc
lahf
stos
stc
ja
fisub
ja
push
loope
mov
in
xor
jbe
ds
sbb
xor
(bad)
mov
mov
into
xchg
add
adc
and
pop
repnz
fs
jmp
xor
es
push
shl
pop
(bad)
xchg
add
xchg
mov
daa
jbe
pop
mov
adc
pop
imul
sbb
jp
retf
pusha
jmp
test
inc
(bad)
mov
sbb
xchg
mov
cmc
call
aas
mov
mov
mov
push
enter
or
inc
mov
(bad)
retf
xor
ret
jmp
iret
inc
jno
pop
mov
out
mov
(bad)
xchg
xrelease
iret
push
inc
call
cmc
or
push
xchg
sbb
xchg
push
mov
mov
pusha
movs
cmp
shl
std
(bad)
gs
movs
xor
inc
dec
mov
cmp
fild
nop
ins
mov
dec
das
or
test
jmp
aad
xchg
mov
in
enter
cwde
jno
push
je
fild
stc
pop
inc
adc
outs
adc
pop
inc
pop
xor
cwde
sbb
test
ja
call
cmp
outs
jne
pop
jb
pop
outs
int
inc
push
lods
dec
cld
mov
sbb
leave
pop
mov
dec
xor
push
dec
sub
or
ds
sar
dec
inc
jne
shl
jnp
pushf
xor
mov
popf
mov
scas
sub
and
shl
mov
popa
outs
cmp
dec
pop
sbb
jne
pop
push
push
xchg
shr
add
push
outs
gs
dec
arpl
dec
popa
inc
jle
or
sahf
mov
ret
cmp
mov
xchg
mov
mov
clc
ja
push
les
jb
loop
pop
(bad)
fmul
push
mov
scas
xor
adc
fcomip
int
sub
and
scas
push
mov
jns
test
(bad)
mov
xchg
cmp
and
stc
jno
push
cmp
das
mov
mov
sbb
pushf
ja
pop
pop
sbb
sbb
mov
ja
into
inc
cdq
stos
xchg
shr
pusha
les
mov
loopne
retf
in
out
outs
sti
xor
lds
data16
inc
mov
pop
(bad)
add
xchg
dec
or
stos
lock
(bad)
mov
jo
pop
ss
add
mov
mov
outs
fnsave
movs
hlt
inc
xchg
clc
push
outs
sub
ret
inc
les
push
fs
call
pop
loop
test
cmp
daa
xchg
adc
xor
or
cs
cld
push
push
and
cwde
and
jns
je
and
imul
and
or
fild
add
pop
push
addr16
xor
fisub
push
movs
retf
push
mov
mov
jnp
pop
push
push
mov
rol
xchg
scas
icebp
(bad)
pop
loop
in
inc
(bad)
jmp
movs
repz
adc
sbb
lods
(bad)
imul
jbe
lahf
sar
cmp
cmp
jl
cmps
push
out
and
adc
xchg
ret
mov
dec
les
fsubr
fisttp
mov
nop
sbb
stos
shl
bound
pop
hlt
pushf
inc
movs
ins
or
fmulp
push
sub
outs
arpl
cmp
push
pop
dec
leave
jno
mov
popf
or
xchg
cmp
pop
lods
ret
sbb
(bad)
jecxz
bound
and
adc
ret
add
std
repnz
icebp
daa
push
mov
push
shl
xor
fisubr
leave
dec
mov
inc
inc
lods
stc
daa
pop
imul
in
mov
jb
mov
jne
pop
push
std
fbstp
pop
sbb
jno
xor
mov
pop
mov
dec
ret
pop
fucomip
xchg
ror
push
dec
push
xchg
push
push
mov
jne
or
data16
iret
xchg
push
xchg
cmp
div
inc
jge
lods
ins
mov
out
test
jnp
adc
adc
hlt
mov
rcl
sahf
dec
retw
std
gs
push
loopne
pushf
mov
out
inc
pop
sahf
jmp
inc
imul
xchg
push
mov
sub
xor
adc
enter
stos
dec
and
ret
ficomp
test
inc
mov
test
aaa
repnz
inc
and
loopne
mov
inc
ds
ret
aad
mov
ficom
inc
or
inc
cli
mov
dec
scas
push
sub
dec
inc
inc
(bad)
cmp
movs
add
mov
inc
push
enter
lock
inc
xchg
scas
adc
test
cmp
sbb
mov
cmp
in
jle
(bad)
call
xor
int
(bad)
xchg
daa
sti
mov
jns
mov
mov
jmp
jle
hlt
jnp
cmp
xor
push
xor
les
aam
mov
jl
lock
ss
sub
(bad)
fcomp
arpl
dec
gs
add
cli
xchg
dec
mov
retf
(bad)
iret
sub
aaa
xor
test
mov
pop
adc
fs
inc
loope
or
push
and
dec
push
stc
or
xchg
mov
inc
inc
pushf
and
mov
xor
or
sub
jnp
sahf
jb
outs
dec
and
daa
imul
xor
push
or
mov
jp
fcmovb
lahf
xor
cwde
mov
outs
in
xor
inc
jae
cmp
and
mov
pop
pop
and
popf
xor
pop
lods
jo
push
mov
jmp
and
add
pop
cmp
pop
shl
mov
mov
or
shr
movs
sar
adc
adc
push
fisub
mov
dec
stos
rol
imul
cmp
mov
repz
retf
imul
jmp
mov
cmp
sbb
iret
mov
dec
sbb
sub
push
jge
push
data16
adc
stos
movs
lods
push
xor
push
inc
cwde
adc
xchg
adc
es
(bad)
and
lods
mov
cs
add
sub
or
je
cmp
ret
lods
sbb
xor
jbe
cs
add
cmp
sub
inc
sub
pop
pop
rcr
push
dec
iret
xor
pop
loopne
scas
xchg
iret
dec
cs
jae
xlat
add
mov
mov
push
inc
jp
mov
dec
push
lahf
popa
std
cli
xlat
mov
shl
xor
dec
addr16
rcl
and
or
xchg
das
jo
enter
jno
jmp
jmp
sti
mov
loop
add
jle
lds
in
lahf
test
aad
push
mov
(bad)
cmp
inc
(bad)
mov
fidivr
jecxz
adc
mov
xor
jle
add
dec
add
hlt
push
outs
dec
ror
hlt
or
pop
dec
scas
bound
retf
add
mov
frstor
mov
and
fisub
enter
jge
call
aas
adc
jg
mov
sahf
sbb
inc
test
loope
test
les
leave
cmp
movs
cs
push
(bad)
test
pop
push
cmps
aad
int3
sahf
cmp
mov
lea
loope
ffree
push
xchg
clc
popf
mov
push
dec
test
or
movs
sub
aaa
dec
push
add
mov
mov
push
sub
enter
mov
shl
cwde
ror
inc
sahf
fwait
sbb
inc
mov
xchg
out
mov
jne
ret
(bad)
mov
in
outs
adc
ror
add
sar
cli
xchg
lahf
jae
mov
ret
mov
push
sahf
push
push
cdq
out
dec
sbb
mov
inc
dec
int3
xchg
sbb
add
cmps
ins
sar
retf
mov
sbb
mov
add
xchg
pop
cmp
fsubr
pop
in
sbb
aad
jecxz
cdq
ret
mov
repz
jge
lods
adc
cli
fistp
or
fst
sbb
int
adc
push
(bad)
shl
push
arpl
(bad)
outs
cmp
jns
inc
cmc
mov
and
popf
in
cld
xchg
(bad)
enter
cmps
jge
(bad)
dec
(bad)
aas
xchg
cld
test
pop
jno
xchg
ret
data16
rcr
sbb
mov
(bad)
adc
vpsubq
pop
dec
inc
cli
(bad)
(bad)
call
jmp
shl
jbe
dec
fisubr
jo
xchg
sub
outs
nop
mov
mov
inc
lds
inc
pop
les
nop
test
or
push
inc
and
gs
call
xchg
mul
sub
cmp
test
mov
das
cmp
inc
mov
test
xor
jne
(bad)
pop
ret
sub
dec
mov
sahf
push
pop
pop
cmp
retf
bnd
(bad)
xchg
dec
mov
or
and
lea
dec
sar
outs
sub
cmc
pop
push
cmp
mov
lods
cmp
in
adc
fstp
mov
mov
scas
arpl
mov
push
or
shr
xchg
scas
mov
sbb
jp
jle
dec
or
add
data16
add
push
fdivr
cmp
sbb
out
aas
int
fld
fsubr
inc
inc
mov
xor
ja
(bad)
cmp
xor
cwde
lahf
cmps
push
test
aas
mov
in
test
jno
push
mov
xchg
dec
jo
(bad)
xchg
xor
pop
popf
mov
shl
nop
leave
mov
jle
cmp
push
xlat
shl
enter
cmp
ja
es
pushf
cdq
and
xor
and
ss
mov
push
push
cmps
dec
shl
add
pop
pop
out
and
dec
nop
sbb
pop
mov
add
fld
std
mov
or
add
and
in
imul
mov
add
jge
ds
mov
xor
sar
push
rcpps
test
sub
dec
and
inc
jne
(bad)
out
test
fucom
clc
cmp
dec
cwde
sub
pushf
rcr
pop
mov
push
mov
sbb
and
mov
arpl
xor
(bad)
loope
mov
inc
inc
mov
scas
stos
loope
movs
and
cmp
pop
in
mov
cmp
addr16
cld
pop
rcl
cmp
push
inc
add
repnz
dec
dec
fs
add
xor
inc
jmp
ja
rcr
sbb
imul
mov
fimul
mov
ror
imul
mov
jnp
sub
inc
mov
sub
jns
sub
nop
xor
dec
retf
lods
inc
loope
fwait
jo
lahf
and
mov
sbb
idiv
cdq
sahf
xor
push
xchg
movs
push
int
fisubr
cs
push
fsubr
xchg
fstp
dec
mov
out
cmps
iret
xor
(bad)
les
or
mov
fisttp
mov
jae
pop
outs
push
jae
rcl
xchg
repz
fmul
fcmovnb
jae
push
call
push
inc
fs
jmp
sahf
adc
std
lods
lods
scas
add
jmp
dec
push
cmc
sar
sub
jmp
xchg
fcom
pop
bnd
test
loop
mov
int
adc
shl
mov
mov
mul
mov
into
dec
hlt
mov
jae
movs
test
rcr
test
mov
ins
loope
imul
pop
push
aam
loop
mov
xchg
push
fs
inc
popf
in
hlt
loopne
dec
cmp
retf
and
jmp
pop
outs
inc
inc
xchg
aam
retf
stos
push
imul
ret
bound
std
jbe
inc
cmps
dec
dec
add
mov
add
sub
push
mov
jmp
jecxz
xchg
jl
push
icebp
dec
mov
js
xchg
scas
addr16
push
cmc
and
or
sub
add
out
cli
jp
sbb
mov
jns
aam
and
or
stc
mov
xor
cmps
das
nop
pop
xchg
fwait
popa
lods
mov
jo
mov
mov
and
(bad)
hlt
sbb
mov
fistp
dec
sub
(bad)
es
rcl
xchg
fisubr
test
clc
mov
int
loope
shl
iret
packssdw
mov
lods
loope
pop
xchg
repnz
es
sub
adc
jbe
out
js
cld
rol
and
cmps
and
fmul
stos
test
stc
lods
cli
mov
xchg
das
lods
retf
cmc
sbb
in
sbb
jle
cld
dec
sahf
mov
aam
repnz
mov
test
cmps
xlat
fisttp
sbb
adc
pop
sub
fwait
inc
loopne
mov
fisttp
div
fucomip
mov
retf
inc
jo
rcr
sar
out
inc
mov
outs
push
pop
in
pop
lods
scas
aam
xchg
push
push
arpl
xor
sub
ins
int
mov
rcl
pop
stc
add
ins
dec
mov
mov
repz
mov
and
pop
ja
inc
xor
mov
cwde
cmps
cwde
cmps
push
mov
add
clc
mov
inc
mov
inc
adc
sbb
nop
push
and
retf
adc
ins
inc
pop
int
mov
repnz
pop
or
(bad)
std
fnstcw
pop
pop
mov
sub
out
sar
daa
xor
mov
jno
out
out
mov
mov
aaa
jns
xor
rcr
dec
ds
(bad)
push
push
inc
pop
xlat
xor
nop
mov
adc
xor
into
cmp
pop
cmp
cmp
popa
hlt
or
xchg
test
in
pop
jns
sbb
es
outs
cs
sub
rcl
arpl
pop
cmp
cmps
pop
xchg
ret
jge
loop
jns
mov
add
test
ret
push
xor
in
and
test
sub
jae
call
sub
fcomi
add
or
fisttp
pop
cmc
ror
(bad)
aaa
and
xlat
cmp
cmc
pusha
es
and
pop
hlt
fld
pop
jns
add
lock
pop
jle
cdq
mov
popf
jmp
adc
sub
mov
fist
sub
xor
es
inc
sbb
ins
mov
cmp
hlt
ror
nop
xchg
and
rol
mov
adc
cmps
xchg
popf
fmul
mov
mov
mov
lods
jbe
sbb
xchg
adc
pop
mov
js
cld
movs
xchg
mov
clc
push
push
pop
jge
pop
and
ss
jmp
xor
cmps
shr
pop
push
push
xor
out
nop
mov
jbe
push
stos
sbb
in
mov
xor
jae
outs
add
xor
inc
mov
sti
(bad)
jmp
addr16
mov
xor
push
mov
add
inc
int
stos
inc
cmc
call
pop
pop
adc
mov
jns
push
cmp
cmp
mov
cwde
or
push
push
push
adc
enter
mov
aaa
dec
pop
xor
push
inc
mov
sub
pusha
xchg
scas
mov
dec
outs
aaa
push
sub
mov
mov
(bad)
push
cld
jnp
outs
jmp
jbe
call
inc
xchg
fcomip
mov
inc
xor
outs
inc
ja
mov
mov
or
stos
inc
push
pop
sbb
in
in
mov
sub
push
dec
data16
(bad)
(bad)
xchg
dec
push
loopne
sbb
jno
jnp
int3
pop
and
mov
inc
fdivr
(bad)
mov
add
ins
lods
xor
xchg
aad
cmp
or
in
int
pushf
sahf
sahf
or
xchg
sbb
jmp
inc
pop
xchg
mov
pop
xchg
push
jmp
les
jmp
xchg
stos
push
test
or
fidiv
pushf
fsubr
ja
mov
push
cs
(bad)
leave
enter
mov
je
fdiv
lock
sbb
test
add
and
ret
sub
sub
fdivr
jae
mov
outs
cli
movs
les
xchg
add
cmp
push
fldenv
jmp
(bad)
out
and
cmp
push
inc
daa
pop
xchg
mov
je
adc
lahf
lock
xchg
stos
test
dec
(bad)
and
pop
in
jecxz
sbb
xor
repnz
mov
sub
and
in
xchg
outs
mov
mov
test
push
add
neg
ins
dec
fbstp
xlat
jmp
cmc
cmp
sub
lods
aam
bound
xlat
int
mov
clc
xchg
nop
mov
stos
mov
shl
(bad)
nop
push
div
sbb
pop
aam
cmp
retf
icebp
jecxz
sub
mov
and
push
ins
push
inc
rcl
nop
and
lock
in
mov
enter
ins
dec
cmp
sub
jl
rol
jmp
sahf
mov
stos
out
cmp
(bad)
mov
jp
sbb
sub
mov
pushf
fisttp
or
cmp
dec
push
iret
jne
xor
ror
ds
xor
push
jbe
div
cs
or
cdq
pop
mov
inc
push
scas
and
xchg
jg
int3
or
mov
jno
das
xor
pop
shr
pop
xchg
inc
lea
xor
icebp
and
add
jo
or
ss
inc
adc
imul
xchg
popa
cmp
pop
mov
shr
jmp
int3
dec
inc
jg
stos
mov
cli
and
push
lock
aam
hlt
retf
rol
xor
push
jle
dec
mov
xor
xor
mov
gs
adc
inc
icebp
xor
xor
in
out
or
adc
arpl
scas
pop
xlat
imul
lock
add
jmp
cmp
xlat
add
jns
adc
outs
in
scas
into
pop
inc
mov
mov
inc
ds
fdivr
push
(bad)
in
mov
dec
retf
xor
mov
mov
mov
lods
test
fstp
inc
mov
outs
cmps
shl
cmps
or
jg
lods
jmp
pop
(bad)
dec
cs
xchg
repz
(bad)
dec
js
test
cdq
sub
inc
fbstp
mov
sub
and
pop
lahf
es
sbb
daa
clc
inc
or
in
push
in
movs
shl
inc
jg
dec
(bad)
mov
stos
cmp
mov
(bad)
mov
mov
mov
pushf
cmp
xchg
jno
cs
inc
adc
mul
adc
out
pop
(bad)
ror
sub
mov
inc
out
(bad)
sub
cmp
jns
cmps
cmp
dec
xchg
aaa
adc
ds
inc
pushf
shl
xchg
lahf
and
aad
push
sar
lock
out
push
dec
clc
sbb
sar
jno
mov
in
shl
pop
imul
mov
cli
xchg
xor
fcmovu
mov
mov
pop
std
into
out
out
aaa
ds
cs
(bad)
int
jmp
add
inc
mov
enter
add
aad
pop
ds
int3
sub
add
xchg
stc
mov
lock
ror
inc
push
cmp
fild
mov
mov
add
lea
repnz
pop
imul
adc
(bad)
icebp
pop
jae
mov
fisub
int3
push
lods
xor
int3
cmp
ret
jne
mov
(bad)
inc
lods
mov
cmp
push
sbb
mov
push
in
mov
shl
test
cmps
rcl
cdq
xchg
jo
shr
sbb
lock
loope
sub
adc
push
arpl
xchg
dec
sub
dec
cmp
ds
jge
adc
or
(bad)
dec
rcr
push
pop
adc
(bad)
fwait
pop
add
or
dec
mov
pop
push
cmps
dec
je
push
xor
retf
cmps
dec
outs
in
dec
call
popf
mov
jnp
call
sbb
cmp
dec
mov
jns
int3
in
movs
push
sar
jl
add
iret
iret
cmp
fadd
sbb
out
mov
add
jb
shr
gs
or
inc
shl
pop
pop
sbb
push
xor
ret
mov
(bad)
dec
in
mov
pop
fsub
iret
push
sahf
xchg
cmp
add
enter
pop
sbb
mov
out
and
sub
mov
xlat
adc
daa
mov
jb
cmp
nop
sub
mov
mov
iret
enter
sbb
iret
jnp
sbb
into
fsubrp
xchg
mov
dec
and
sub
std
inc
fisttp
or
dec
xchg
sbb
test
xchg
or
shl
ja
jnp
test
pop
daa
call
adc
jns
mov
and
sbb
push
outs
arpl
std
cmp
push
stos
jo
mov
pop
inc
jne
in
jns
test
add
aas
inc
or
jb
xchg
mov
push
push
test
lahf
and
ret
movaps
ror
es
xchg
push
add
add
or
cmp
in
xor
adc
sub
test
mov
xor
lods
cld
cmp
fnstsw
mov
cmps
movs
pushf
in
gs
and
retf
sub
mov
aas
jp
add
(bad)
ror
rol
xor
sbb
jae
lods
mov
pop
xor
sub
add
sub
pop
jle
xor
inc
icebp
pop
adc
mov
adc
retf
pop
cwde
fwait
sahf
cld
(bad)
cmp
xor
ja
mov
and
push
mov
into
pop
and
xchg
xchg
dec
test
or
ret
aaa
ins
cmps
add
out
in
push
fdivr
sub
jmp
dec
outs
out
mov
push
loopne
sahf
adc
outs
test
adc
dec
adc
xchg
clc
dec
int
inc
pop
mov
mov
cmp
ficomp
xor
cs
in
adc
sub
call
push
cmp
push
jmp
pop
inc
xchg
shl
sahf
inc
jns
and
inc
mov
add
test
in
into
pop
out
lock
retf
retf
outs
je
mov
icebp
cdq
in
sahf
sbb
jmp
mov
repnz
dec
imul
cmps
mov
mov
mov
ja
retf
inc
jno
imul
mov
xor
gs
sub
sbb
loope
sub
sbb
in
mov
rcr
jg
in
addr16
not
inc
inc
mov
test
add
call
ins
ror
and
test
rcl
call
jo
fcomi
push
adc
inc
jns
push
popa
inc
push
and
dec
and
mov
rol
dec
mov
in
push
stos
rcr
mov
inc
call
ins
xor
ss
out
sub
loope
test
sub
out
pusha
stc
mov
cdq
in
jae
movs
iret
fimul
mov
or
sbb
push
iret
aad
pusha
call
xor
jl
cmps
pop
jo
out
dec
mov
scas
push
mov
es
not
push
jl
xor
add
add
push
pop
pop
dec
stc
addr16
pop
pop
out
sub
adc
mov
pop
jmp
lds
cmp
push
inc
dec
stos
xchg
sub
push
jmp
pop
movs
push
adc
mov
out
not
data16
out
push
push
xchg
out
jmp
pop
je
cmp
cwde
push
add
out
arpl
xchg
inc
in
in
sti
pop
jo
loopne
xchg
lods
dec
pushf
sbb
xchg
stc
popa
sub
clc
mov
sub
(bad)
(bad)
call
mov
sbb
retf
shl
imul
add
sahf
pop
mov
scas
jg
adc
add
int3
xor
sub
dec
leave
adc
jmp
sub
cmp
fst
adc
pop
jo
fwait
push
add
mov
xchg
jo
in
sbb
int
test
popa
and
xchg
mov
xor
mov
ins
pop
mov
or
ss
retf
add
pop
dec
(bad)
mov
pop
xchg
jle
adc
pop
mov
aad
ret
and
shl
xor
std
jge
jp
push
mov
xor
mov
jbe
js
push
push
cli
scas
leave
sub
adc
lods
jg
in
fisubr
and
or
push
mov
inc
fwait
mov
add
inc
hlt
outs
pop
mov
xchg
aad
add
stc
add
add
sahf
clc
gs
and
jle
pushf
sbb
cmp
add
ins
iret
mov
cwde
push
(bad)
xchg
stos
cli
fcmove
push
xchg
(bad)
arpl
je
add
inc
sub
das
dec
fadd
mov
cmp
iret
cli
pop
int3
jne
pushf
xchg
xor
pusha
popf
mov
sbb
rcl
jne
ret
fiadd
xor
inc
xchg
popa
xor
mov
add
inc
push
test
scas
mov
call
je
jnp
sub
sub
and
xchg
dec
rol
popf
pop
jmp
mov
push
mov
mov
retf
ds
mov
(bad)
int3
shl
pop
jecxz
rol
movnti
and
retf
dec
sbb
push
retf
lods
dec
sti
cmps
mov
pop
icebp
and
pop
popa
aas
pop
and
mov
push
fnsave
fdivr
lods
dec
test
add
ror
mul
mov
pop
and
mov
(bad)
(bad)
fild
(bad)
scas
inc
int
jb
xchg
inc
loopne
ds
mov
add
jg
pop
sub
sub
sub
ss
hlt
jmp
pop
(bad)
loopne
pop
daa
push
in
mov
in
(bad)
mov
and
jge
fs
sbb
dec
mov
sub
mov
pushf
shl
cmp
mov
ds
data16
enter
(bad)
xor
xchg
fwait
sub
lea
div
lods
rcr
loopne
jge
jmp
popa
sub
or
mov
xor
mul
call
pop
xor
fiadd
mov
(bad)
call
mov
jmp
lds
jp
dec
ins
lods
jp
pop
sbb
jecxz
js
retf
mov
push
in
ss
xor
add
aaa
scas
jecxz
cmc
mov
cmp
jns
loopne
pop
sub
arpl
inc
das
sbb
pushf
shl
add
dec
sbb
adc
jmp
stc
lods
lods
pop
jns
cmp
std
lds
jl
dec
push
adc
mov
(bad)
mov
inc
inc
xchg
(bad)
call
lahf
lods
fist
push
sbb
xchg
dec
scas
jno
mov
jne
dec
stc
mov
cmc
std
fild
add
inc
adc
aad
fs
data16
pop
adc
dec
(bad)
lahf
sub
test
pop
xchg
loopne
xchg
fisub
or
add
cmps
ja
or
(bad)
mov
jg
adc
fs
shr
push
enter
push
sub
lock
in
sbb
mov
lahf
ss
xor
pop
dec
add
nop
xchg
aam
xlat
fdivr
test
fcmovne
cs
fwait
mov
fbld
jmp
xchg
in
lds
xchg
add
loope
and
mov
push
mov
pop
popf
ins
(bad)
aas
mov
or
(bad)
loope
outs
ins
neg
cmps
shl
inc
cmp
in
sub
push
fs
std
shr
xchg
mov
xor
jns
push
imul
jae
add
mov
pop
dec
mov
scas
jl
ss
push
stc
lods
sbb
stos
dec
or
mov
loope
pop
ja
or
add
mov
push
xor
inc
cld
loopne
mov
call
cmp
mov
and
xlat
mov
ins
mov
xchg
inc
fisub
aad
fld
sbb
ror
jb
inc
into
pop
inc
xor
sbb
daa
mov
add
add
inc
dec
xchg
inc
mov
sub
cmp
(bad)
xchg
call
pop
lds
mov
cld
dec
stc
idiv
or
sbb
adc
jb
inc
inc
mov
mov
imul
or
jg
and
fisub
rcr
repnz
(bad)
das
mov
(bad)
sahf
cli
int
daa
adc
leave
mov
test
push
mov
mov
fucomp
js
mov
gs
pop
ins
jns
pop
stc
cmp
shl
inc
cdq
push
sub
jmp
pop
cmp
not
icebp
ins
(bad)
push
pop
inc
sbb
shr
fwait
or
xchg
pop
push
adc
ja
mov
lahf
jg
les
or
adc
inc
pushf
movs
push
push
(bad)
scas
mov
xchg
mov
jmp
jp
rcr
mov
stc
mov
xchg
hlt
cmps
in
rcl
push
xchg
mov
movs
lods
mov
stc
ss
and
push
psubsw
in
add
ss
gs
xor
jmp
jmp
dec
(bad)
mov
dec
or
cld
mov
loope
lds
jo
mov
add
or
loope
jmp
sbb
inc
aam
or
loope
fdivr
addr16
dec
icebp
push
add
popa
jp
or
fiadd
cli
and
(bad)
call
dec
sub
ja
outs
add
sbb
imul
xchg
mov
mov
mov
add
push
xchg
idiv
dec
mov
pop
mov
xchg
sbb
jnp
lods
out
sbb
and
xor
pop
adc
push
fld
mov
inc
mov
aam
(bad)
xchg
xchg
pusha
stc
xchg
add
dec
and
xor
push
cdq
test
arpl
cmps
out
sbb
mov
shl
jl
push
loop
das
cmc
das
retf
xor
fistp
jl
mov
xchg
cmp
xor
mov
sbb
sub
lock
rol
mov
(bad)
fld
inc
push
(bad)
sub
inc
inc
sub
lods
movs
pop
(bad)
std
jl
dec
mov
cmp
jo
loopne
cmp
int3
ret
in
sti
mov
inc
aas
xor
nop
xor
bnd
ja
dec
push
stos
dec
lods
cwde
cli
clc
cmp
repz
(bad)
xchg
stc
sbb
jnp
retf
out
lods
sbb
or
clc
movs
xor
pop
ss
push
and
dec
cmps
xchg
dec
mov
ss
sbb
mov
pop
adc
inc
and
mov
cmp
fs
xchg
adc
inc
test
pop
xchg
mov
mov
mov
pop
push
jnp
mov
call
xlat
mov
repnz
push
and
aad
dec
fucomp
xchg
mov
xor
call
mov
pusha
arpl
xchg
ins
out
fs
scas
mov
cmp
jl
outs
ftst
aas
jmp
loope
xchg
cmps
cmp
push
xor
pop
test
inc
pop
xor
sar
mov
loopne
hlt
push
and
rol
lock
imul
jecxz
mov
add
jnp
add
mov
add
push
(bad)
rcl
fwait
mov
cs
inc
iret
mov
das
ret
pop
fs
mov
push
pop
shl
jae
pusha
push
popf
aaa
cmps
test
cli
ins
(bad)
mov
pop
xor
repz
and
fcom
inc
pop
mov
fdivrp
and
fsubr
inc
push
pop
xor
dec
sbb
push
out
leave
cmp
ins
xor
mov
jne
dec
cwde
out
fdivr
cmps
hlt
gs
nop
push
pop
in
call
stos
outs
int3
cmp
lock
clc
pop
mov
lds
inc
mov
mov
push
jb
pop
pop
sub
jp
outs
xchg
repz
mov
lock
pop
in
idiv
add
pusha
push
aad
mov
push
js
pop
cmps
hlt
in
mov
dec
jns
ins
out
int
imul
sbb
push
ins
jp
mov
mov
xor
mov
jmp
inc
push
lods
sbb
test
sub
fstp
outs
retf
imul
dec
outs
pop
inc
mov
aas
add
jae
in
mov
aaa
sbb
stc
and
sbb
jge
enter
xchg
xor
imul
push
loope
pushf
repz
jne
xchg
test
outs
outs
xchg
adc
adc
loop
adc
xchg
pop
in
mov
ror
pusha
xchg
loope
jl
cmp
fdivr
push
pop
div
push
out
arpl
push
xchg
push
into
(bad)
cld
scas
jnp
mov
int3
xchg
loop
cli
call
mov
xchg
lea
mov
push
adc
in
imul
aad
mov
jne
inc
add
jo
push
inc
inc
mov
push
mov
and
cmc
sub
jge
sbb
nop
push
jle
fild
lea
add
adc
in
cmps
ret
cmp
sti
jbe
adc
rcl
cmp
push
mov
fisubr
xlat
iret
or
mov
sbb
sub
daa
dec
pop
iret
mov
iret
mov
lds
push
out
in
jp
sub
mov
mov
or
out
out
xor
add
push
ret
dec
aam
test
es
(bad)
arpl
icebp
pop
sbb
js
jmp
cld
test
mov
(bad)
mov
mov
inc
fld
cmps
push
inc
jbe
int3
out
sbb
inc
cmp
mov
es
fldcw
movs
loopne
push
or
jae
aad
icebp
test
push
mov
ins
fsubp
push
cwde
xchg
jnp
push
add
(bad)
in
ja
sub
jnp
in
push
mov
push
sub
jge
cmp
es
lods
cmp
xor
pop
mov
jbe
rol
jg
pushf
sub
sahf
xor
pop
push
pop
xor
sub
adc
mov
push
xor
scas
or
mov
dec
pushf
or
and
fistp
leave
inc
xchg
mov
xchg
push
aam
xchg
jb
or
sub
xchg
cmps
mov
xor
in
adc
imul
mov
pop
scas
int
jge
xchg
add
call
inc
push
and
mov
pop
mov
cs
addr16
push
jg
aas
(bad)
adc
mov
pop
and
sub
push
or
cmp
out
aam
(bad)
xor
outs
mov
and
add
movs
clc
and
cwde
mov
sti
cld
data16
pop
cmp
cdq
push
xchg
inc
(bad)
sub
mov
aaa
mov
pusha
outs
bound
in
mov
sbb
push
pusha
(bad)
jg
inc
pop
add
and
push
pop
mov
cmp
jle
inc
sbb
mov
jle
call
dec
cmp
inc
inc
test
dec
jo
xor
mov
push
mov
mov
mov
sar
mov
mov
mov
int3
dec
fwait
call
cmp
int
and
push
out
pushf
ins
pushf
mov
jecxz
sbb
cmp
and
mov
jb
mov
bound
pop
ins
and
mov
in
push
mov
mov
jmp
mov
pop
xchg
retf
les
mov
sbb
jo
jb
xor
jge
scas
shl
dec
mov
shl
data16
inc
stc
push
pop
add
icebp
add
adc
add
enter
lods
daa
lock
test
xlat
mov
popa
idiv
mov
repz
jecxz
sub
retf
push
adc
xor
mov
call
repnz
bndldx
stc
add
fcom
inc
ret
push
mov
les
test
das
movs
mov
and
mov
jecxz
in
xchg
inc
fcmovne
ds
stos
push
test
mov
fldcw
(bad)
shr
movs
mov
pop
xchg
sbb
dec
es
pop
fdiv
test
pushf
mov
leave
inc
pop
(bad)
mov
lea
sbb
fcom
cld
in
push
sbb
xchg
mov
cli
es
ss
pop
iret
or
nop
mov
mov
mov
ins
jmp
lock
xor
les
jmp
mov
stc
out
sbb
xor
pop
sub
lock
xchg
(bad)
popa
xchg
mov
jmp
adc
scas
fsubr
imul
in
stos
addr16
lea
inc
xlat
jnp
jl
cwde
sbb
push
adc
cdq
ret
pop
xchg
out
popa
inc
(bad)
dec
pop
and
mov
fld
shl
xlat
inc
push
mov
or
ds
je
xor
retf
enter
mov
mov
loope
test
outs
mov
and
push
test
test
or
test
fdiv
in
jg
mov
sbb
jg
mov
out
pop
and
push
out
xchg
add
push
sar
or
(bad)
scas
mov
and
aad
fst
outs
nop
(bad)
loop
cmp
mov
popf
fs
movs
fistp
mov
int
mov
ret
xor
add
loopne
add
dec
sti
jmp
push
(bad)
imul
mov
push
xchg
scas
mov
xchg
popf
push
stos
add
push
movs
sbb
and
add
sbb
push
inc
cli
test
xchg
push
push
jmp
sti
inc
in
hlt
cmp
cmps
cdq
aam
pusha
(bad)
out
mov
xchg
out
jl
and
jbe
mov
adc
lea
mov
jnp
jno
push
sahf
add
cmp
out
outs
cmc
out
mov
call
cmp
out
out
aas
out
jb
sbb
dec
add
adc
into
mov
jecxz
test
sti
std
pop
mov
or
xor
jmp
xchg
pop
icebp
push
xchg
xchg
xor
inc
add
loopne
fimul
or
xor
cmps
push
scas
dec
dec
mov
inc
mov
cmps
adc
(bad)
out
pop
test
sbb
xchg
fisubr
or
cmc
cld
push
add
inc
dec
les
jge
lods
mov
call
aam
retf
(bad)
jnp
(bad)
frstor
out
nop
daa
bound
scas
in
add
jmp
inc
pop
retf
je
push
pop
push
cmps
mov
cmp
adc
xchg
dec
test
idiv
dec
into
xor
sbb
ins
pushf
jns
arpl
in
leave
stos
jle
das
xchg
in
adc
add
stos
xchg
mov
data16
in
pop
sub
xor
pop
pop
mov
mov
shl
mov
in
mov
mov
pushf
pushf
cwde
(bad)
cmps
xchg
shl
retf
outs
retf
push
mov
popa
hlt
xor
pusha
sub
dec
ror
inc
fld
cdq
gs
test
hlt
xor
xor
dec
xchg
stos
addr16
push
push
idiv
dec
loop
rcr
or
fst
in
aad
add
or
dec
test
mov
xor
push
shl
adc
in
xor
enter
test
ret
xor
jno
jb
repz
scas
fcmovu
shr
xchg
sbb
arpl
mov
and
sbb
xor
jb
lea
jmp
cwde
inc
cld
cmps
xchg
push
loop
fstp
std
fwait
cs
lahf
sub
int3
call
sub
and
cs
clc
mov
jbe
mov
jae
lods
(bad)
fisttp
sub
addr16
lea
loope
(bad)
fdiv
xchg
jb
adc
bound
xlat
sbb
in
rol
enter
test
les
(bad)
aad
xor
(bad)
cmc
enter
(bad)
xchg
data16
repz
loope
out
push
sqrtps
xor
xor
pop
xor
mov
jb
popa
and
rol
mov
or
push
stos
pminsw
fwait
cmp
pop
fnsave
jb
push
xchg
or
jae
lds
or
xchg
jno
push
push
ja
and
cdq
xchg
or
push
movs
les
jmp
xchg
inc
int3
fidivr
in
scas
test
fnstenv
xchg
aaa
add
add
push
sbb
dec
mov
leave
addr16
(bad)
jmp
cmp
add
mov
repnz
dec
jnp
jae
push
pushf
pushf
retf
jb
leave
pop
es
scas
movs
push
mov
mov
enter
dec
xor
pop
fwait
iretw
imul
movs
push
or
add
lahf
cmps
mov
inc
push
add
push
pop
inc
xchg
dec
push
adc
and
and
std
pop
pop
mov
mov
add
mov
mov
test
dec
mov
movs
into
fcom
jns
push
sub
mov
dec
repnz
(bad)
sub
bound
repnz
outs
aam
mov
lock
mov
mov
inc
sub
ds
pop
shr
inc
repnz
(bad)
xor
jmp
out
and
fld
stc
sbb
add
imul
mov
and
inc
(bad)
inc
inc
xchg
xor
imul
sbb
or
js
cmps
ins
mov
sub
inc
repz
out
in
movs
aad
call
mov
(bad)
adc
and
or
in
(bad)
or
scas
test
aad
inc
fcom
mov
stc
aas
popa
mov
mov
or
fmul
pusha
scas
(bad)
pushf
cmp
jb
gs
mov
retf
add
push
call
je
and
ins
imul
push
sahf
dec
aas
gs
dec
push
push
or
or
dec
bound
mov
pop
sbb
xchg
push
sub
fistp
cmps
repz
int3
sahf
pop
getsec
imul
lea
xor
xor
aad
xchg
jmp
repz
pop
hlt
popa
ins
and
pop
jl
push
stos
jnp
not
xchg
push
fsubr
ins
mov
aaa
inc
repnz
dec
shl
in
jecxz
push
imul
popa
dec
test
adc
scas
jns
pop
jmp
(bad)
out
jbe
ins
xchg
push
dec
sbb
enter
int3
js
jnp
dec
mov
enter
cdq
sbb
leave
inc
in
jns
xor
mov
add
iret
xchg
cld
sbb
add
cmp
scas
cmp
and
push
push
retf
push
pop
dec
mov
cli
fistp
jmp
pop
pop
ret
mov
jl
out
in
dec
pop
dec
sub
scas
adc
aaa
mov
in
mov
mov
loopne
cmp
dec
fcomp
jnp
dec
enter
fdiv
xor
or
in
xchg
fcomp
cmps
cmp
push
daa
repz
and
imul
mov
mov
jp
lods
mov
jg
cs
xchg
adc
xchg
retf
rcr
xlat
fmul
cld
in
adc
out
loopne
push
push
xchg
cwde
mov
mov
push
test
push
dec
in
mov
pop
adc
mov
fdivr
cmps
push
pop
cmps
mov
cli
mov
adc
inc
pop
cmc
repnz
inc
push
int
fistp
arpl
mov
in
add
cmp
(bad)
push
test
xor
cmps
cs
push
and
mov
rcr
fidivr
rcr
loop
mov
ins
inc
ins
sub
or
add
sub
call
imul
call
sub
ror
pop
out
(bad)
jbe
mov
leave
cmp
leave
dec
movs
add
pop
add
mov
cmps
rol
mov
mov
mov
in
push
stc
int
adc
je
ficom
cmp
in
jns
adc
dec
pop
dec
cwde
xor
test
dec
pusha
or
das
adc
mov
push
cmp
pop
mov
ins
call
js
and
add
inc
mov
mov
and
inc
pop
dec
neg
push
or
outs
sub
ret
xchg
mov
(bad)
mov
xchg
jns
fucompp
and
stc
jl
jo
jnp
mov
shl
repz
in
fcmove
push
stos
and
jge
xchg
scas
cmp
pop
sub
stos
imul
in
jno
pusha
mov
xor
je
inc
xlat
dec
lahf
test
lock
and
sub
dec
sbb
fdivrp
gs
mov
jb
inc
push
pop
pop
mov
repz
jecxz
sbb
or
fs
fsub
xor
add
jmp
das
xchg
fsubr
scas
stos
jbe
mov
and
cmp
addr16
mov
sbb
add
in
jno
lods
xchg
push
pop
adc
cmp
cld
mov
jp
jle
sub
inc
xchg
ds
fstp
shl
outs
mov
dec
imul
sub
xchg
mov
call
or
in
in
dec
loop
mov
out
fistp
xor
xchg
inc
lock
xor
jmp
test
ss
jge
jg
mov
inc
out
push
imul
cmpps
loopne
adc
xor
iret
test
pop
(bad)
push
xor
push
sub
cmp
test
das
mov
xor
sbb
pop
jns
test
jbe
mov
repz
fdiv
cmp
outs
mov
repnz
jge
adc
and
ss
lea
jmp
stos
push
xor
mov
jmp
lods
out
(bad)
movs
mov
imul
call
mov
push
stos
outs
mov
fwait
xlat
popa
fnstenv
je
adc
mov
test
add
aam
gs
xchg
and
js
imul
mov
jle
ret
cmp
xor
push
dec
outs
call
out
jnp
jge
dec
push
xchg
add
lods
add
push
add
sti
jcxz
dec
lds
mov
inc
mov
push
pop
mov
dec
ss
and
arpl
(bad)
movs
retf
aad
arpl
xchg
push
enter
ds
pop
push
out
lock
push
ret
fcmovnbe
xor
out
pop
add
loope
add
test
je
out
dec
aad
movs
cmp
rcl
loopne
sar
pop
nop
push
cmp
call
int3
ret
cmp
inc
lods
jp
mov
or
imul
aam
mov
mov
mov
arpl
sahf
mov
mov
mov
mov
add
fbld
les
dec
sbb
pop
sub
mov
pop
push
dec
xchg
or
es
into
mov
ret
dec
call
jb
fcom
fwait
dec
retf
cmp
mov
cs
jle
ds
repnz
sub
out
mov
rcl
jge
test
adc
inc
sub
daa
sbb
rol
fisub
js
push
inc
xor
out
repz
sbb
cs
pop
popf
pop
jle
dec
mov
mov
int
retf
sub
add
pop
out
ror
lea
nop
push
std
fmul
mov
ret
sbb
dec
ss
rol
fnstcw
jae
js
das
outs
stos
dec
sub
test
sti
pop
xchg
sbb
push
in
js
icebp
mov
addr16
imul
xchg
push
jmp
mov
jg
mov
dec
movs
xor
adc
or
jp
mov
nop
sbb
adc
in
imul
dec
mov
jecxz
lds
jmp
dec
popa
ror
in
jne
or
popa
ja
stc
sbb
inc
es
fs
add
sub
mov
pushf
call
ret
jns
stc
push
xchg
(bad)
in
sbb
jmp
xor
sub
loop
dec
fsubr
test
mov
or
jo
inc
loope
sbb
repnz
adc
test
cld
out
fcom
aaa
aad
arpl
stc
ret
fst
pop
or
repnz
and
xor
dec
sbb
pushf
and
loop
into
or
inc
jle
xor
(bad)
push
cli
in
mov
gs
mov
and
pushf
dec
mov
add
sbb
ins
pop
les
push
xchg
rcl
xchg
push
stc
pushf
sbb
jecxz
in
jge
jmp
push
dec
pop
fdivr
mov
cmp
lods
cli
mov
dec
sbb
fnstsw
fimul
gs
cmc
fld
lock
lea
loop
mov
adc
mov
inc
hlt
adc
mov
(bad)
xor
mov
fild
jno
lahf
mov
sbb
adc
and
jmp
les
cmc
(bad)
xor
push
cli
test
xor
rcl
adc
xlat
mov
jno
fucomp
xor
mov
mov
inc
push
es
inc
and
and
mov
ins
test
jbe
add
adc
xor
shl
and
mov
pop
adc
and
xchg
pushf
fistp
sbb
xchg
jns
mov
stos
mov
sub
sub
push
mov
inc
iret
fnstsw
in
sbb
push
mov
mov
lds
cmps
inc
xor
std
fs
dec
add
shr
push
ror
jge
(bad)
pop
mov
sub
ins
add
add
call
xor
xchg
dec
das
dec
cld
dec
xor
push
test
cmps
cld
mov
or
or
mov
test
push
call
rcl
inc
scas
retf
out
ins
in
mov
jmp
add
fsub
adc
mov
mov
jmp
add
cmps
imul
mov
movsx
or
mov
sub
ins
daa
or
push
pop
out
mov
repz
sub
push
sbb
cmps
scas
sbb
xor
xor
cmp
adc
inc
out
mov
jl
or
repz
(bad)
in
out
nop
in
sub
lea
xchg
pop
div
sbb
nop
xchg
ret
push
pop
xchg
push
ret
adc
inc
dec
fld
repnz
int
pushf
popa
push
pop
jle
addr16
movs
mov
jl
out
xchg
aad
xchg
xchg
mov
repz
std
and
dec
xor
inc
or
pop
scas
shr
xor
(bad)
jnp
push
sub
sahf
lods
in
test
in
inc
mov
jmp
outs
nop
inc
mov
(bad)
je
ins
lods
(bad)
lahf
inc
sbb
dec
pop
outs
test
cmps
xchg
xchg
div
sti
enter
sar
adc
add
out
mov
movs
out
xchg
jnp
es
sahf
loop
xchg
cli
sbb
sar
stc
fdivr
fcmovbe
cmp
popa
int
jg
sti
es
and
push
inc
and
or
pop
sub
add
xor
faddp
mov
mov
sub
add
jmp
push
mov
mov
adc
cmp
or
out
call
dec
mov
lds
add
rol
scas
out
arpl
stos
call
pop
push
xor
sub
(bad)
jno
(bad)
ss
push
sti
mov
mov
dec
and
push
adc
call
out
outs
or
mov
xlat
and
jl
jno
mov
iret
mov
rcr
add
inc
addr16
sub
push
adc
and
stos
adc
cwde
xor
jmp
cmp
xor
cmp
je
push
das
mov
cdq
cdq
xor
repz
fsub
mov
rcl
xor
push
jl
(bad)
aam
adc
dec
popf
in
sub
mov
rcr
in
add
out
int3
cmp
cmp
les
push
sbb
mov
icebp
push
int
sar
fdiv
push
mov
les
cs
into
aad
push
sbb
daa
push
pushf
jle
jae
popa
les
mov
cmps
push
mov
fmul
mov
xchg
sbb
retf
and
out
outs
jmp
ins
inc
dec
lds
or
adc
in
jp
sub
add
pop
repnz
scas
out
sbb
clc
je
ss
ss
add
jecxz
dec
mov
mov
push
push
pusha
in
xchg
mov
dec
dec
retf
sub
mov
add
sbb
sub
adc
mov
movs
ret
scas
jle
dec
adc
push
rcl
js
aad
(bad)
pavgb
jnp
mov
pop
xchg
mov
add
ins
movs
jae
xor
inc
or
jne
mov
lds
sbb
sbb
cdq
fnstsw
push
leave
and
fld
jl
jmp
imul
sub
fcmovbe
in
pop
clc
imul
enter
sub
inc
and
aaa
inc
or
(bad)
lock
inc
int3
mov
cmc
movs
dec
(bad)
sub
pop
jecxz
aas
push
imul
jmp
rcl
stos
fisubr
icebp
repnz
into
and
and
xchg
das
js
aad
pushf
cmc
dec
cmp
call
pushf
in
mov
mov
scas
out
and
add
fcomp
daa
das
outs
dec
hlt
test
push
out
mov
xlat
or
jmp
jb
call
in
std
push
pmaddwd
hlt
fdivr
rep
pop
sub
je
pusha
retf
or
repnz
clc
add
call
push
retf
pusha
retf
pop
out
push
(bad)
sub
popf
fwait
sbb
jle
sub
fsubr
inc
fwait
xchg
test
jns
cmp
lahf
pop
ficom
(bad)
cmp
fisttp
jp
jnp
mov
int3
adc
push
xchg
lds
mov
int
xchg
sub
test
push
es
mov
aas
loopne
xchg
mov
jo
pushf
(bad)
ins
int
cmp
arpl
(bad)
jns
fistp
and
pusha
mov
arpl
neg
cli
mov
mov
pop
hlt
add
fst
(bad)
sub
lahf
push
(bad)
lea
sbb
mov
out
ins
lds
and
xchg
test
xchg
aaa
fwait
and
and
test
outs
cmp
xchg
xor
mov
jmp
mov
aas
(bad)
stc
and
bound
adc
lods
jns
cmps
adc
mov
xlat
mov
and
xchg
in
mov
sub
(bad)
shl
or
fidivr
fadd
call
fcomp
fisubr
lds
add
imul
adc
imul
adc
mov
sub
scas
ds
fimul
inc
cmp
aas
adc
lea
call
dec
push
or
out
mov
(bad)
loope
out
std
xchg
ror
lea
movs
pcmpgtw
mov
add
xchg
pop
push
xchg
dec
or
shl
cmp
jb
mov
sar
jbe
push
rcr
or
fs
xor
or
aaa
push
xlat
dec
cwde
jle
cmp
sub
mov
add
inc
push
test
lods
fadd
(bad)
pop
mov
inc
test
pop
xor
xchg
mov
mov
les
int
dec
int3
inc
push
push
adc
jl
pop
stos
pop
jb
cmp
inc
push
repz
cmp
push
inc
hlt
inc
retf
clc
lea
jp
inc
rcr
movs
push
mov
dec
out
std
jecxz
jmp
leave
ret
in
psubw
push
mov
adc
out
(bad)
mov
adc
ds
add
jo
popf
xor
loopne
jns
xchg
sub
stc
xor
push
jmp
aaa
ins
js
movs
ret
icebp
push
retf
xchg
mov
pop
pop
clc
mov
out
retf
or
or
stc
mov
fwait
xor
ds
pusha
pop
push
fild
cmp
inc
mov
scas
push
loopne
mov
xchg
adc
xchg
pop
push
mov
pop
mov
pop
lea
sub
jae
movs
pusha
xor
jne
fisubr
daa
jmp
icebp
aaa
push
jg
mov
fiadd
test
mov
jge
xor
ret
ret
pushw
dec
cmp
out
into
jge
mov
sub
test
and
mov
mov
and
xor
cmp
cmp
lock
sbb
stc
stos
mov
sti
or
cmp
xor
xchg
add
jl
retf
clc
cld
std
pop
pusha
gs
fiadd
pusha
add
out
movs
mov
push
rol
sbb
mov
bound
pop
rol
fmul
mov
ret
loopne
loop
add
mov
pusha
aas
repz
mov
outs
outs
xchg
xor
(bad)
imul
mov
int
arpl
xrelease
aaa
arpl
out
inc
lds
jecxz
or
pop
push
dec
sub
mov
cmc
xor
leave
push
xor
add
pop
aaa
imul
push
repnz
test
ins
cmp
clc
jg
or
dec
mov
push
jle
movs
out
cmp
loop
push
test
mov
or
push
cmps
or
(bad)
int3
sbb
jl
or
inc
(bad)
ficom
xchg
adc
lock
sbb
mov
das
cmp
mov
mov
call
sbb
fisttp
add
mov
in
mov
push
shr
jne
ret
fiadd
stos
jp
out
sub
aam
sti
mov
jo
mov
ins
call
mov
adc
add
jge
movs
or
add
jb
stc
cmp
cmp
mov
xchg
leave
sub
test
in
mov
xchg
movs
or
sbb
inc
sti
ud0
or
dec
ds
out
neg
outs
cmps
pop
push
(bad)
jmp
fdiv
out
mov
jecxz
mov
xchg
out
into
xor
fisubr
sbb
inc
sub
dec
cli
jne
mov
pop
outs
das
mov
dec
push
movs
in
cs
mov
jp
cmp
ror
push
and
cmp
mov
push
sbb
aas
and
dec
adc
test
add
test
pop
add
mov
arpl
test
cs
dec
jmp
add
sahf
sbb
ror
dec
and
mov
jp
or
mov
adc
jbe
xchg
mov
mov
lods
mov
ret
int3
xor
add
js
loope
cld
inc
inc
push
mov
int
mov
out
mov
pop
jp
adc
jl
push
and
mov
fsubr
ror
outs
adc
sbb
mov
xchg
aaa
out
imul
sar
popa
xchg
repnz
pop
lahf
xor
dec
mov
inc
jns
and
jl
leave
(bad)
je
pushw
test
(bad)
push
mov
(bad)
ss
mov
mov
inc
pushf
xor
mov
push
lahf
mov
sub
sub
in
mov
jg
pusha
imul
jbe
pop
inc
fild
loopne
dec
outs
mov
rol
test
test
repnz
cmp
mov
add
mov
jp
stos
dec
sbb
das
outs
push
cmc
jecxz
mov
sbb
imul
pop
in
aaa
(bad)
out
in
adc
push
ins
xchg
(bad)
inc
movs
add
mov
or
mov
fcmovb
cwde
mov
cmp
mov
mov
in
pop
sub
fwait
add
ror
or
movs
les
xchg
inc
int
(bad)
pop
mov
xor
sbb
adc
dec
movs
lock
not
or
(bad)
daa
inc
jl
jecxz
in
xlat
pop
ss
das
pushf
movs
mov
jmp
jle
pop
test
xor
add
cmps
or
stc
lds
cmp
icebp
test
repnz
sub
adc
and
dec
(bad)
fidiv
cmp
and
mov
pop
daa
xchg
push
sbb
dec
fs
jne
or
add
lea
sub
test
pop
xchg
adc
bound
jmp
mov
aaa
ins
pop
lods
jl
repnz
test
loopne
test
cmc
ret
or
or
jbe
ja
fsub
dec
pop
jg
js
dec
jnp
es
dec
pusha
xor
sbb
mov
mov
and
xor
imul
fwait
cmps
fwait
iret
clc
movs
jo
shl
adc
pop
cmp
clc
mov
cld
call
je
pop
jmp
imul
ins
push
cmp
push
cmps
cmps
in
test
ins
cmp
xchg
in
mov
in
pop
mov
cld
jg
jge
adc
test
(bad)
cmp
icebp
sub
inc
gs
and
cmp
push
(bad)
fisubr
jns
add
push
ror
popa
cmp
out
or
mov
mov
adc
cli
call
aas
mov
out
mov
push
jnp
xchg
mov
out
(bad)
add
dec
scas
outs
add
call
sub
sbb
mov
jo
mov
cmps
aam
or
ins
js
pop
test
add
loopne
fisubr
repz
ret
outs
arpl
pop
or
push
sub
mov
int3
mov
jecxz
ins
jge
mov
adc
popa
jnp
in
enter
mov
dec
sbb
adc
inc
mov
sbb
stc
into
xor
and
sub
arpl
popf
mov
mov
loope
cmp
push
leave
pop
add
jne
out
mov
js
cdq
iret
mov
hlt
xchg
ret
fs
sub
jmp
(bad)
stc
enter
dec
jno
out
jb
fidiv
and
and
imul
not
jl
or
sbb
pop
(bad)
lods
add
fnstcw
retf
xor
into
jb
shr
ror
psubusw
jno
aad
mov
and
and
leave
mov
fisubr
add
sahf
pop
inc
jl
shr
push
test
mov
in
or
shl
adc
inc
shld
jnp
or
lea
ret
or
inc
(bad)
cmps
hlt
fdiv
rcl
mov
ret
es
jmp
mul
sub
jmp
neg
test
or
mov
lods
pusha
cwde
es
inc
jo
push
ds
test
bound
aaa
pop
push
ficomp
icebp
lods
xor
add
lods
retf
hlt
gs
sbb
pop
cld
push
daa
ins
cmp
pop
push
inc
jecxz
imul
aas
sub
jnp
jno
(bad)
pop
rol
(bad)
in
mov
inc
mov
sti
ret
and
scas
sub
dec
repz
xchg
retf
jge
icebp
add
loop
add
aad
xor
inc
call
adc
inc
and
pop
jp
mov
call
aaa
call
lock
push
xchg
inc
aas
inc
mov
push
push
jb
xchg
xchg
lds
ins
xchg
pusha
xchg
gs
test
shl
xchg
inc
cmp
test
adc
ret
enter
add
jbe
xchg
push
dec
xchg
outs
xchg
in
xor
popa
or
xor
mov
mov
sar
push
cmp
(bad)
sub
mov
imul
dec
or
clc
std
test
(bad)
stc
jl
add
adc
mov
sti
or
sar
jo
movs
jge
lods
xchg
push
pop
cmps
xor
outs
scas
jo
(bad)
repz
or
cmp
pushf
push
pop
leave
fwait
and
sub
cmp
or
sub
add
fwait
addr16
cmp
test
inc
pop
(bad)
lods
or
mov
popa
lods
pop
xor
and
xor
repz
dec
adc
arpl
jno
pop
inc
ins
sub
mov
inc
dec
out
jl
dec
std
jmp
hlt
rcl
std
push
mov
jp
pop
pop
mov
or
push
or
jb
or
std
hlt
xchg
xchg
mov
inc
sbb
and
adc
ins
ss
mov
push
repnz
sub
lahf
lock
inc
call
mov
(bad)
and
enter
sbb
mov
cmp
cmp
imul
pop
cmp
(bad)
adc
mov
into
ins
push
test
jle
jge
pop
mov
xor
cmc
clc
xor
(bad)
out
(bad)
scas
adc
data16
aas
rcl
xchg
jno
neg
out
push
mov
xchg
pop
test
cwde
and
jle
stc
adc
fsubr
add
mov
imul
dec
mov
mov
ins
push
xor
cli
dec
or
dec
es
adc
mov
xchg
mov
in
mov
jno
add
sub
and
mov
movs
cmps
add
sub
jp
cs
and
movs
cmp
fidiv
enter
pop
dec
mov
rol
ins
jbe
add
push
mov
loop
hlt
mov
jp
jp
xlat
call
mov
jno
bound
rol
pop
mov
imul
sbb
xchg
and
mov
jp
shl
lods
sbb
jp
pushf
ror
loopne
jnp
jl
jne
loopne
jmp
or
dec
add
into
xor
jbe
xor
adc
sub
fs
mov
imul
mov
int3
xchg
jg
mov
imul
cmp
cmp
imul
sbb
mov
call
push
pop
push
sar
test
and
les
adc
pop
repnz
stos
scas
fadd
test
adc
sahf
jmp
(bad)
movs
dec
push
adc
ins
outs
scas
lods
cmps
sub
int
mov
inc
cmc
mov
int
test
int3
jecxz
push
(bad)
fwait
and
aaa
and
dec
sbb
xchg
push
mov
daa
xlat
inc
outs
sahf
push
fsub
sub
test
inc
push
dec
sbb
mov
or
int
or
mov
mov
bnd
arpl
pusha
jecxz
dec
ficomp
pop
enter
outs
mov
add
push
loop
fmul
(bad)
fcomi
or
ret
fld
pop
sbb
push
shr
adc
mov
inc
test
(bad)
shl
int3
in
sbb
xchg
jnp
in
test
dec
pusha
js
or
add
ja
fwait
push
mov
add
xchg
push
xchg
mov
jg
aas
push
int
sbb
shl
test
push
mov
ret
gs
stos
xchg
outs
adc
xchg
cmps
jmp
test
adc
sbb
cmc
rcl
aaa
clc
leave
jno
add
mov
ins
or
repz
xchg
ins
adc
stc
adc
push
xchg
pop
jmp
aas
(bad)
xchg
sub
cmp
(bad)
lds
jns
(bad)
xor
pop
hlt
les
dec
pushf
mov
xchg
imul
ds
add
inc
iret
jmp
stos
dec
enter
retf
daa
jbe
cwde
les
pop
or
jmp
xor
mov
ret
mov
pop
xchg
adc
mov
(bad)
test
icebp
enter
jge
push
mov
push
push
call
mov
dec
pop
in
inc
mul
cmp
push
stos
pop
retf
aad
loopne
pusha
dec
(bad)
jmp
sahf
hlt
dec
inc
push
pop
and
fst
popa
push
cmp
sbb
xor
push
int3
movs
xchg
mov
cmp
inc
inc
test
loop
addr16
mov
cmp
loope
jg
xor
mul
enter
fdivr
dec
mov
sub
dec
mov
mov
xchg
mov
mov
push
push
cmp
sbb
fcom
mov
mov
inc
iret
push
loopne
cmp
aas
inc
or
ret
push
xor
push
aas
fmul
(bad)
adc
pop
jmp
retf
pop
jle
lahf
sbb
pop
adc
jp
inc
pop
pushf
scas
adc
gs
and
dec
in
lods
pop
ins
inc
inc
sub
push
cmp
jns
mov
push
add
in
int3
xchg
out
cmp
daa
push
popa
retf
add
adc
(bad)
sub
sbb
cwde
xor
(bad)
mov
dec
fcmovb
call
push
(bad)
push
in
cmp
sar
push
cmp
aaa
inc
lahf
push
fwait
or
dec
push
and
or
fsub
int3
ja
jnp
jo
xchg
mov
aam
mov
imul
jge
and
cmp
mov
shl
fucomip
scas
mov
mov
cdq
aam
inc
bts
mov
js
fwait
or
int
fmulp
xor
jl
inc
xor
dec
add
leave
or
das
cmps
push
(bad)
sbb
jbe
or
out
jp
xlat
pop
fwait
sub
mov
sub
jle
scas
mov
xor
(bad)
out
xchg
stos
dec
(bad)
js
and
push
cmp
fistp
bound
sub
jecxz
(bad)
mov
jg
lock
pop
pop
fs
or
and
popf
cmps
inc
(bad)
jmp
call
loop
cmp
das
sbb
sub
sub
out
xlat
and
(bad)
nop
mov
inc
repz
stc
cwde
push
cs
cld
imul
movs
not
and
cli
data16
sub
push
inc
add
loop
jb
(bad)
lds
sbb
inc
cmp
outs
jb
xor
scas
mov
lds
aad
in
sub
fcomp
(bad)
jb
xor
jp
test
sbb
or
dec
leave
or
inc
es
xor
in
cmps
stc
jo
test
test
mov
neg
fstp
xor
cmp
xchg
and
pop
les
out
int3
xor
adc
cbw
ins
sub
mov
mov
push
sbb
mov
addr16
stos
and
sub
lea
std
adc
inc
mov
scas
rcl
jge
adc
push
jge
push
jbe
(bad)
fidivr
xchg
lods
inc
ret
inc
(bad)
je
xor
shl
ds
es
mov
jns
or
sbb
in
movs
cli
mov
jb
dec
je
dec
mov
retf
xor
cdq
fstp
cmp
jbe
push
sub
sub
popa
fistp
jecxz
sbb
adc
and
xchg
leave
xchg
xchg
out
ins
hlt
sbb
dec
add
adc
dec
mov
sub
popf
pop
int3
je
popf
jecxz
loopne
pop
add
mov
test
jns
call
imul
js
jno
cmps
push
mov
pop
adc
cmps
jmp
push
retf
mov
jae
in
ds
into
xchg
mul
xchg
rcr
jb
jns
jmp
les
popa
pop
xchg
daa
shl
ret
pop
lds
xchg
or
mov
aas
ja
xchg
dec
call
outs
jp
or
or
pop
sahf
jns
out
mov
cmp
xchg
push
xchg
push
jmp
out
sbb
add
mov
push
mov
cmp
fs
pop
int
cmp
jmp
shr
jmp
mov
xlat
jmp
imul
ins
divps
push
mov
push
bound
inc
mov
xlat
iret
aaa
xchg
in
call
mov
cld
mov
cvtps2pi
mov
fidiv
mov
mov
test
cmp
inc
addr16
call
dec
gs
test
push
repnz
sub
xor
xchg
push
and
mov
cmp
das
cli
mov
les
cmp
lea
mov
imul
inc
pop
and
imul
outs
leave
fs
add
imul
jnp
sub
cmp
adc
cmp
std
mov
adc
stos
(bad)
lods
sub
mov
dec
cwde
outs
(bad)
jecxz
mov
ja
pop
push
lods
xlat
daa
add
cli
(bad)
int3
outs
add
inc
sar
scas
pop
pop
iret
push
imul
aad
cld
dec
push
pop
add
movs
scas
arpl
(bad)
outs
mov
cmp
je
js
outs
pop
and
inc
popa
dec
imul
das
push
test
sub
js
push
fcom
mov
pusha
loop
mov
xlat
push
sbb
(bad)
repnz
mov
cmp
jne
dec
dec
(bad)
sbb
jecxz
push
xchg
mov
mov
cmc
inc
push
addr16
in
mov
js
pusha
inc
dec
lea
and
xchg
je
pop
(bad)
cmp
add
loop
mov
movs
or
outs
add
mov
cs
lods
pop
test
cwde
lock
xor
or
dec
sub
inc
inc
xchg
jb
push
out
dec
std
or
outs
aaa
cli
mov
and
pop
mov
aas
stos
pop
call
and
push
adc
movs
in
ins
(bad)
mov
dec
test
dec
push
xchg
jno
fsub
int
imul
ins
mov
out
in
fimul
jbe
jns
xchg
popf
daa
cmp
ds
ds
and
int3
dec
jae
fisub
int
call
mov
and
data16
cmps
in
cmps
push
xchg
(bad)
enter
imul
cwde
in
mov
clc
in
addr16
mov
mov
mov
adc
lods
adc
cli
mov
adc
mov
xor
test
in
inc
or
arpl
jp
rcr
mov
xor
sbb
sub
pop
movs
lock
int
jno
shl
lock
add
inc
je
jo
mov
dec
add
repnz
and
enter
je
xor
mov
test
(bad)
enter
aam
scas
mov
xchg
and
dec
mov
enter
cmp
lods
cmps
rcr
mov
mov
jb
ins
movs
lds
cmps
(bad)
lods
mov
iret
mov
ds
loope
push
stos
adc
mov
(bad)
push
cdq
data16
inc
ret
fnstenv
inc
test
std
adc
dec
push
(bad)
fild
lds
mov
pop
cmp
fwait
inc
push
push
std
test
cmp
fmul
xor
or
push
jmp
mov
pop
(bad)
int3
and
jge
ficomp
sbb
cmp
mov
cmp
and
(bad)
push
jle
adc
xor
fstp
js
arpl
xor
add
dec
push
adc
pop
arpl
or
inc
call
inc
sar
cmp
(bad)
fcomp
in
mov
mov
or
(bad)
mov
jl
call
loope
xchg
stos
out
jecxz
cli
adc
cld
dec
fxch
scas
or
(bad)
dec
xchg
das
mov
not
mov
xchg
lds
adc
push
sub
movs
aad
je
rol
(bad)
cmp
xor
xor
cmp
sub
ret
adc
sub
clc
and
leave
outs
mov
imul
jno
jb
xor
or
jo
rol
pop
dec
rcl
or
jo
mov
fidiv
loope
mov
mov
in
ss
fcmovb
mov
mov
adc
pushf
imul
fmul
push
mov
jns
hlt
aam
js
pop
data16
ins
inc
cmp
fistp
pop
pop
push
dec
mov
jno
mov
sub
pop
(bad)
pop
xchg
sub
jmp
mov
rcl
arpl
mov
out
xor
ror
or
mov
fsub
inc
cmps
loope
xchg
imul
cmc
scas
hlt
xchg
push
sub
xchg
jmp
gs
stc
cdq
push
push
sbb
mov
inc
xor
shr
mov
fsubr
mov
out
jmp
shr
aas
ins
in
jnp
sub
sub
mov
pop
add
jmp
das
xor
push
fcmovb
test
hlt
std
jecxz
push
out
test
mov
or
add
rcl
imul
mov
sbb
push
mov
or
pushw
ficomp
adc
and
aaa
mov
mov
or
into
jae
push
and
and
dec
stos
fcomp
and
add
cmp
ins
sbb
popf
adc
into
push
aad
push
pop
repz
out
retf
mov
fld
pop
cmp
and
add
pop
fidivr
mov
cmp
rcr
xor
sbb
adc
test
(bad)
cmp
or
(bad)
mov
dec
jb
mov
xor
(bad)
in
das
dec
sub
or
pusha
jbe
gs
inc
(bad)
fs
cmps
ficomp
cmps
retf
leave
mov
pop
sub
lahf
ret
xchg
jne
and
xor
mov
cmp
fiadd
inc
std
lods
mov
mov
loopne
les
and
jmp
test
shr
cmp
sbb
add
rcl
pop
xor
push
mov
fsubr
daa
sbb
fwait
popa
push
aaa
(bad)
aad
aaa
out
adc
imul
adc
jb
sbb
stc
ds
mov
pop
push
leave
and
sub
movs
in
fmul
pushf
test
xchg
imul
and
sub
mov
xor
inc
fs
xchg
mov
and
loop
mov
std
jge
into
lods
test
jle
mov
leave
(bad)
or
and
fldcw
dec
out
mov
outs
bound
shl
scas
repz
in
push
enter
xor
call
adc
inc
call
loope
xlat
sar
or
repnz
lods
add
cmp
cdq
addr16
mov
inc
rcr
stos
inc
outs
int3
aas
cmp
inc
in
int3
mov
mov
fdivr
dec
mov
xlat
out
inc
loopne
add
cmps
sub
sub
mov
pushf
adc
std
ds
aam
arpl
mov
fiadd
daa
das
xchg
pop
push
push
mov
fisttp
jmp
fisubr
aam
ror
lea
outs
and
mov
mov
mov
mov
mov
out
out
les
je
mov
ret
add
dec
mov
js
les
inc
test
js
pop
(bad)
ins
aam
sub
aam
xchg
std
jmp
leave
popf
(bad)
cmp
cmp
jecxz
es
xchg
bnd
sub
jle
sbb
push
retf
xchg
mov
xor
and
xchg
test
pop
mov
outs
xchg
mov
dec
je
loopne
mov
push
inc
and
mov
retf
mov
push
fwait
test
inc
(bad)
and
shr
inc
jp
pop
pop
lahf
daa
dec
rcr
shr
xor
shl
jg
popf
jge
dec
push
jg
xchg
(bad)
in
jmp
mov
push
scas
mov
call
jmp
ins
mov
jge
rcr
jne
jle
neg
ins
or
sbb
js
xchg
int3
xor
jnp
add
mov
adc
xor
xor
ds
fldcw
cli
dec
cld
pusha
mov
imul
xchg
repz
jp
out
rcr
rcr
xchg
push
push
mov
push
je
sbb
bound
(bad)
imul
outs
aad
mov
push
cmps
rcl
xchg
and
aad
mov
adc
jmp
xchg
fldenv
pmulhuw
aam
mul
push
or
sti
push
pop
mov
in
scas
push
lods
cmp
(bad)
dec
and
xor
or
add
xor
js
jmp
mov
cdq
test
sar
mov
push
pop
cdq
mov
add
scas
or
rol
inc
jae
inc
mov
mov
or
mov
cmps
cmp
test
fcmovnu
mov
xlat
pop
rcr
into
inc
add
xchg
cdq
dec
addr16
sub
(bad)
cli
int3
dec
stos
push
inc
fdiv
add
sub
fsub
mov
in
scas
jb
sub
pushf
jg
xchg
sbb
add
sub
pusha
stos
push
sti
pop
cmp
aad
push
dec
leave
repz
jb
stos
jmp
jecxz
imul
xchg
(bad)
cmp
xchg
call
repz
int3
cmps
retf
mov
cwde
jecxz
popa
xchg
mov
or
or
sahf
mov
mov
jns
clc
add
xchg
scas
xchg
or
and
sub
push
in
cmp
inc
loop
mov
jmp
cmps
pop
cmp
fistp
test
inc
stc
in
pop
mov
dec
dec
push
pop
xor
pop
cli
sbb
mov
xlat
dec
outs
jp
mov
mov
jg
daa
cli
mov
or
jb
int
scas
dec
js
les
imul
sub
push
cmp
hlt
jno
ss
dec
aam
dec
xchg
retf
inc
sar
add
scas
pop
mov
cdq
inc
retf
xchg
sbb
adc
cmps
int3
scas
pop
hlt
dec
jno
sar
movs
add
mov
call
xor
cs
and
xchg
div
mov
loopne
mov
into
jae
int3
dec
jnp
jmp
xor
pop
dec
dec
test
arpl
inc
leave
jbe
mov
ss
daa
fld
fimul
(bad)
int3
mov
stos
sub
push
push
adc
mov
pop
test
and
outs
fcmovbe
inc
sub
rep
jne
sbb
or
adc
rcl
inc
arpl
mov
add
rol
mov
inc
ins
jmp
not
loopne
aad
inc
xor
mov
nop
pusha
outs
addr16
in
adc
into
movs
xchg
inc
sub
xor
std
das
repz
mov
cmp
mov
test
enter
daa
mov
stc
adc
xchg
stos
pop
push
add
xor
cmp
sub
imul
shl
outs
xchg
push
or
inc
push
mov
in
mov
or
mov
inc
out
dec
leave
dec
jl
inc
int
cld
and
(bad)
cmp
out
xor
fadd
retf
int3
jb
pusha
jb
ror
push
xchg
pop
mov
mov
sar
mov
popf
sub
xchg
mov
push
push
hlt
outs
pop
retf
mov
xchg
and
cmp
lea
pusha
xchg
das
and
enter
sub
adc
cmp
adc
mov
dec
xor
ins
xchg
icebp
push
outs
fisttp
rcr
pop
jl
jns
adc
jg
outs
jno
mov
jmp
add
inc
jns
pusha
adc
or
jnp
jecxz
cli
inc
adc
dec
shr
loop
jle
mov
rcr
add
mov
stos
dec
fild
test
xor
jge
cmp
inc
jmp
inc
mov
popa
dec
(bad)
pop
fs
pusha
cmp
addr16
sub
push
hlt
stos
pop
fmul
pop
fs
(bad)
mov
and
pop
ltr
sbb
jns
lods
cli
fcom
push
mov
lods
sbb
in
(bad)
fistp
or
inc
dec
loop
test
sti
mov
jne
out
cmp
test
out
sub
mov
inc
and
stc
in
int3
and
jb
mov
dec
push
gs
push
rcl
mov
cs
pop
xchg
daa
cmp
push
mov
xlat
repz
arpl
pop
mov
sub
std
push
jne
xor
adc
js
(bad)
mov
ficomp
int
(bad)
xlat
into
(bad)
lock
push
(bad)
adc
loopne
fild
cmc
mov
stos
and
pop
push
lods
inc
mov
fisttp
jg
pop
js
sub
adc
aam
fdiv
ret
xor
mov
mov
dec
lea
jo
inc
inc
mov
xchg
sbb
(bad)
cmp
enter
outs
and
mov
push
mov
add
in
in
xchg
pop
(bad)
out
pop
mov
ja
xchg
dec
xor
push
or
lahf
cmps
addr16
clc
or
scas
(bad)
sub
push
mov
in
jp
or
cld
mov
jnp
cmp
cmp
or
das
xchg
mov
add
pop
fild
(bad)
xchg
push
add
sbb
jmp
adc
xchg
jle
in
pop
ja
pusha
or
movs
(bad)
stos
mov
adc
rcr
iret
cmp
enter
xchg
or
iret
jge
sbb
fcomp
out
outs
jg
and
adc
ins
das
sub
fucomi
loopne
bound
outs
das
arpl
or
lock
mov
in
aas
xor
clc
inc
mov
sub
jecxz
call
outs
xor
mov
pop
xchg
lods
jbe
adc
out
push
popa
adc
in
ss
jl
ror
jmp
cdq
dec
inc
or
inc
push
pop
inc
test
pop
mov
add
ja
jp
ins
mov
out
pop
mov
adc
cmp
sbb
pop
aaa
lods
dec
nop
arpl
movs
loope
pop
sbb
inc
mov
ret
icebp
out
std
sbb
sti
nop
retf
pop
xor
mov
push
jl
jbe
imul
lds
push
lods
pop
cld
lods
ss
test
leave
in
clc
mov
fsub
dec
faddp
ins
cld
mov
pop
gs
push
jbe
jno
xor
seta
cld
fwait
or
adc
pusha
sub
cli
and
jns
test
sbb
cmp
jb
mov
dec
fwait
test
cli
rcr
xlat
out
(bad)
mov
call
(bad)
sbb
gs
xchg
(bad)
mov
and
jge
call
ss
popf
(bad)
in
ins
adc
xchg
push
adc
repz
icebp
dec
loope
idiv
cmp
out
mov
(bad)
scas
mov
lods
xchg
loopne
xlat
xlat
push
jnp
xor
scas
add
xchg
sahf
dec
mov
push
push
loop
aad
shl
and
jmp
jnp
add
cs
jno
xchg
ja
add
loope
add
add
add
pop
push
pop
sbb
dec
xchg
daa
cmp
jg
add
(bad)
ds
les
repz
scas
stos
mov
popf
or
lahf
fimul
rcl
arpl
loop
mov
add
ret
rcr
scas
mov
or
(bad)
xchg
outs
inc
add
fcmove
mov
shl
push
jmp
mov
outs
mov
or
fistp
add
adc
mov
xchg
cwde
adc
sbb
test
je
rol
jo
push
cmp
or
adc
imul
fs
nop
push
push
push
aad
retf
iret
lods
adc
(bad)
sbb
jmp
xchg
push
add
pop
dec
jbe
sbb
(bad)
adc
sbb
xor
sbb
inc
push
loope
xor
xor
hlt
out
cmp
sbb
fmul
imul
outs
mov
pop
inc
fmul
lock
add
or
mov
cs
or
icebp
hlt
dec
mov
es
in
pop
repnz
adc
popf
xchg
aad
outs
js
mov
fs
mov
xchg
sbb
jae
jbe
stc
call
rol
mov
into
xchg
xchg
(bad)
int
push
xchg
stos
pop
fmul
push
cmp
lods
jns
test
(bad)
stos
jge
cmps
mov
cld
xor
lahf
cld
stos
adc
sbb
xchg
fld
jl
stos
pop
in
push
mov
xor
ja
ja
ret
pop
dec
cmp
popf
jno
outs
mov
aad
imul
shl
xchg
cmp
lods
test
arpl
out
ds
xor
mov
stos
psllw
push
outs
dec
dec
fwait
and
or
clc
sbb
pushf
ret
outs
jle
pop
jl
fld
xor
fadd
nop
out
in
scas
dec
test
jo
adc
inc
in
dec
out
loope
pop
push
fdivr
in
std
jb
xor
push
cmp
pop
cmp
add
ja
loop
in
cmp
aad
int3
mov
dec
cmp
dec
fist
test
push
fiadd
fwait
jmp
mov
aaa
(bad)
push
sub
nop
test
test
sub
call
mov
jb
out
rol
pop
lods
push
scas
ja
adc
(bad)
xchg
movs
(bad)
mov
mov
mov
test
addps
pop
inc
pushf
sbb
test
in
rcl
dec
jmp
in
mov
mov
stc
ret
sub
outs
dec
jmp
mov
dec
cli
inc
adc
sub
pop
(bad)
sar
add
fs
(bad)
push
cmc
or
rcl
sbb
push
mov
popa
fisttp
aas
(bad)
xlat
cmp
add
xchg
icebp
imul
push
in
movs
out
inc
dec
aaa
imul
adc
and
popf
rcr
loop
aas
lock
popa
mov
inc
xchg
in
call
cmc
inc
mov
push
sbb
lea
(bad)
jle
sbb
xor
add
xchg
and
cdq
add
(bad)
loope
(bad)
jno
dec
adc
cmp
jp
(bad)
jbe
or
das
enter
sbb
imul
push
iret
scas
pop
xor
in
addr16
jbe
stc
fadd
out
rol
inc
dec
sub
sti
jne
shl
xchg
mov
cld
xor
retf
bound
jns
add
inc
hlt
jmp
stos
lea
mov
xchg
(bad)
jae
mov
es
push
mov
test
cmp
imul
retf
mov
js
push
or
sub
xchg
jp
dec
push
dec
jns
xor
lods
xchg
bound
test
fild
xor
adc
sbb
or
jne
fst
scas
pop
or
push
stos
loope
cmc
push
outs
xchg
add
mov
in
and
hlt
adc
cs
dec
ds
into
and
retf
in
mov
leave
mov
inc
ins
ret
cmp
sbb
jmp
jbe
lock
(bad)
push
fwait
adc
sbb
jae
cmp
push
xor
mov
jmp
outs
lea
retf
add
cmc
jb
sbb
push
in
(bad)
les
xor
fs
cmps
mov
rcl
aam
mov
cmp
xchg
mov
aaa
jb
in
push
sahf
lods
push
sti
adc
jmp
retf
in
ins
out
jp
addr16
shl
mov
das
arpl
push
inc
in
jo
mov
loop
add
sub
add
pop
es
bound
pop
pop
ficomp
mov
(bad)
push
mov
add
lods
clc
and
mov
cmc
mov
unpckhps
fwait
mov
sub
push
mov
in
ss
pop
or
jns
int3
and
arpl
sub
int3
mov
in
or
cmp
dec
xor
ss
je
scas
iret
cmc
cmp
test
mov
mov
xor
sbb
or
pop
dec
aaa
scas
stos
xor
push
fadd
mov
sar
je
dec
jo
adc
int
(bad)
mov
sti
inc
cs
add
test
jmp
sbb
pop
jmp
jmp
fsub
dec
mov
cmps
inc
inc
adc
pop
es
cwde
xchg
jmp
mov
sub
gs
imul
fstp
jmp
inc
rcr
ins
inc
rcr
sub
ins
call
mov
dec
mov
lahf
pop
int3
pop
or
popf
dec
fist
xlat
mov
push
sbb
hlt
loopne
mov
lea
push
xchg
dec
mov
test
dec
mov
add
frstor
jno
cmp
nop
call
(bad)
shr
hlt
and
dec
fsub
jmp
scas
lock
stos
out
mov
adc
adc
je
fstp
xchg
sahf
inc
jge
adc
mov
fnstcw
sbb
retf
mov
cmps
add
fucom
or
sub
stos
mov
adc
inc
xchg
sar
icebp
jne
shl
add
cld
cmp
jecxz
adc
mov
mov
mov
jne
mov
mov
jb
es
leave
mov
fcomi
mov
jle
out
sbb
nop
xor
(bad)
sub
call
loope
jg
jmp
pop
dec
push
mov
in
xor
jbe
jge
push
adc
mov
stc
mov
sub
push
rcl
sahf
mov
in
xor
add
les
push
dec
mov
mov
cmps
xor
cmp
lea
retf
jmp
adc
out
pop
adc
ins
outs
dec
xchg
push
(bad)
push
or
data16
push
(bad)
loop
mov
sbb
and
mov
fisubr
imul
or
int
fmul
outs
jmp
mov
fnstenv
jecxz
cmp
and
fild
leave
mov
mov
add
shl
jb
xchg
inc
jno
hlt
pop
and
icebp
pop
out
xor
into
cld
retf
int
into
das
sub
je
push
enter
pushf
pusha
mov
nop
jb
cmps
and
xchg
mov
mov
jmp
jbe
mov
pop
mov
(bad)
mov
pusha
jne
enter
neg
jle
adc
jnp
dec
lea
(bad)
fstp
xchg
scas
mov
in
xchg
push
aam
jno
push
pushf
push
movs
cdq
xlat
into
jle
xchg
push
stos
xchg
jnp
shl
stos
xor
dec
xor
cmp
mov
adc
fadd
mov
pop
cmp
data16
push
imul
xor
imul
sbb
and
bound
out
adc
pop
mov
test
adc
and
cmp
cmp
int3
sbb
push
int
adc
lds
(bad)
in
fnsave
lods
mov
gs
pop
push
mov
xor
pop
jle
inc
or
nop
fcomp
cmp
dec
fmul
(bad)
test
pop
xor
not
sub
dec
mov
sub
sbb
(bad)
lods
jb
add
jmp
loopne
add
sub
mov
pop
xchg
addr16
stos
imul
xor
or
popa
and
clc
sahf
jnp
das
inc
aad
rcr
adc
scas
(bad)
fnsave
lods
push
pop
(bad)
or
(bad)
or
jp
sahf
fiadd
add
(bad)
fnsetpm(287
mov
mov
jb
xor
jnp
push
(bad)
hlt
hlt
dec
rcr
adc
in
scas
or
sti
mov
add
mov
xchg
rcr
sbb
adc
cmp
sub
push
cli
pop
add
add
test
cld
js
arpl
xchg
std
add
retf
fwait
pop
dec
cmp
out
jp
dec
out
mov
sbb
cmc
in
cmps
push
jmp
mov
mov
repnz
pop
mov
or
aas
mov
ss
pop
je
mov
dec
lock
jp
test
cmp
xchg
scas
pop
fimul
jns
push
clc
mov
nop
fild
cdq
fld
mov
and
outs
js
jle
repnz
cmp
in
in
int
push
and
aam
das
adc
add
add
stos
mov
retf
sti
push
mov
pop
mov
xor
fmulp
push
adc
icebp
mov
pop
adc
pop
push
or
scas
cli
sub
xchg
sbb
mov
ss
or
pusha
and
mov
jmp
cmp
jae
leave
xor
out
inc
dec
fimul
pop
jecxz
lock
ror
ficomp
xchg
xchg
sub
or
or
loopne
push
(bad)
xor
outs
mov
mov
inc
xor
pop
lods
test
or
in
into
jne
adc
sbb
mov
jne
or
adc
mov
dec
or
xchg
fdivr
pop
daa
mov
sbb
in
repnz
dec
jmp
call
ins
js
or
call
push
shl
test
adc
push
sub
es
(bad)
jae
and
(bad)
fldenv
jg
aas
jae
fst
cmp
or
jb
push
gs
or
in
fsubr
xor
pop
push
mov
(bad)
jb
cmc
mov
fcmovbe
inc
in
jne
xor
cld
xchg
cld
sub
test
or
adc
xchg
and
gs
imul
aaa
cwde
sub
repnz
push
lea
pop
jnp
mov
hlt
pop
mov
fs
loope
jmp
sub
mov
lahf
jecxz
dec
ins
push
or
sub
call
fiadd
mov
mov
and
cs
sahf
mov
or
sbb
mov
push
xor
and
es
push
test
pop
stc
sahf
jbe
push
inc
mov
enter
jns
repz
cmp
and
std
sub
stos
cs
mov
pop
mov
jg
lods
jns
push
xchg
adc
pop
lock
int3
add
shl
jge
xlat
adc
xchg
or
cmps
outs
cs
nop
sti
push
cld
sub
push
jno
repz
ins
xor
sub
out
adc
rcr
mov
sti
not
fldenv
mov
mov
sbb
or
jmp
test
adc
cmc
aas
push
mov
pop
cmp
lods
cdq
scas
ins
fcmovnbe
xlat
pop
sbb
sub
xor
sub
add
out
nop
jns
dec
(bad)
cmps
cdq
and
mov
and
and
loop
dec
jo
aas
xor
inc
cmp
xor
dec
shr
add
jno
(bad)
adc
cmc
(bad)
jge
adc
or
lahf
movs
lahf
cmp
aaa
mov
xor
add
jl
cmp
rcl
cmp
mov
aas
mov
pop
ret
jl
std
pop
in
xchg
outs
out
jmp
fcmovu
sbb
and
daa
in
fstp
cwde
xor
pop
lea
lahf
mov
out
add
xor
div
cs
fstp
test
jge
lods
push
addr16
jo
loop
inc
pop
popf
xchg
cs
xchg
xor
(bad)
fld
sbb
sub
add
loop
add
(bad)
ficomp
daa
xchg
mov
dec
int3
pop
pushf
sbb
mov
push
fs
sub
(bad)
cmp
cs
jg
pop
das
mov
stos
lods
mov
repz
add
imul
sbb
out
mov
mov
push
mov
in
outs
mov
mov
pusha
js
dec
push
out
adc
fsubr
pop
jg
sub
sub
in
pusha
adc
mov
movs
int
dec
gs
push
mov
pusha
cmc
or
neg
push
jle
fdivrp
pop
enter
or
push
int3
cmc
inc
pushf
mov
jmp
in
in
into
ds
push
out
jbe
pusha
gs
push
push
fidiv
das
sbb
fnstsw
into
pop
mov
mov
out
int
cmp
dec
enter
mov
xchg
enter
retf
icebp
dec
in
xor
add
dec
and
mov
mov
ficomp
inc
mov
add
cld
enter
mov
jp
sub
pop
xchg
test
cmp
pop
dec
(bad)
ins
ja
and
jb
mov
mov
dec
push
inc
sbb
pop
jmp
mov
pop
mov
and
pushf
push
jle
movntps
inc
loopne
push
cmp
cs
add
(bad)
sbb
lds
or
hlt
movs
sub
int
xchg
call
hlt
push
pop
(bad)
(bad)
jnp
adc
rol
xor
sbb
mov
sub
retf
out
ret
pop
iret
out
(bad)
pop
cmp
xlat
jecxz
xchg
pop
imul
mov
clc
push
mov
inc
cmp
add
xor
rol
pop
les
cld
nop
jne
repz
popf
dec
inc
or
(bad)
push
jno
movs
out
and
(bad)
sbb
xor
lds
(bad)
loop
test
mov
or
mov
fisub
mov
rcr
fs
bnd
jecxz
sar
sub
mov
clc
lds
aam
iret
push
mov
mov
sub
scas
jns
in
aaa
popf
cmp
scas
fild
and
test
xor
jns
push
push
imul
stc
cmp
mov
ss
stos
(bad)
aaa
mov
in
repz
mov
ins
(bad)
push
fstp
pop
js
mov
rcr
jl
adc
dec
sub
rcl
fsub
mov
hlt
sbb
or
mov
add
stc
pop
out
xchg
xchg
enter
cmp
xor
xchg
mov
xchg
xlat
fiadd
enter
scas
push
imul
(bad)
jp
cmps
inc
(bad)
int
iret
xchg
int
sub
mov
ror
lea
jno
adc
xor
sti
xchg
xor
pusha
jbe
adc
lock
pop
mov
punpcklwd
nop
xchg
stos
cld
xchg
add
bound
pop
and
inc
sbb
jl
cmp
push
into
sbb
(bad)
mov
and
(bad)
push
je
dec
mov
push
pop
dec
js
cli
mov
push
push
and
outs
sar
test
fidiv
out
test
cmp
push
ins
mov
sub
cdq
hlt
sub
cmp
jg
dec
jl
call
les
add
cmp
dec
fldenv
and
dec
lea
cmps
ret
ret
sub
jo
scas
mov
not
mov
push
mov
in
dec
mov
loopne
sub
jne
retf
cwde
and
push
xchg
jg
imul
sub
mov
scas
(bad)
in
jnp
push
cmp
mov
arpl
(bad)
cs
neg
aaa
add
cmp
movs
push
fwait
(bad)
xchg
push
pop
hlt
and
cmps
or
and
adc
mov
sbb
push
jne
mov
dec
dec
sbb
add
sub
mov
add
pusha
sub
cmp
mov
add
cmp
inc
xchg
xor
hlt
dec
or
fild
lods
scas
adc
inc
push
das
inc
push
mov
mov
sti
ins
xchg
bound
ss
repnz
jp
imul
sub
inc
and
lock
jmp
js
out
enter
mov
je
sub
and
cmc
xor
popf
xchg
out
dec
out
xchg
outs
or
mov
and
test
es
shl
(bad)
daa
sub
sub
pop
pop
jge
jecxz
and
ficomp
inc
dec
cld
inc
xor
je
adc
es
ficom
hlt
lds
sahf
(bad)
imul
and
cmp
adc
xor
gs
pop
mov
or
mov
rcr
lods
clc
push
xlat
inc
(bad)
jmp
sbb
xor
test
jmp
sbb
mov
pop
les
pop
cmp
sbb
and
cmp
daa
jp
mov
iret
xor
jl
xchg
out
mov
aas
popa
jp
push
popa
cmps
mov
mov
and
mov
scas
jp
adc
cmp
xchg
jbe
loop
mul
imul
push
jmp
ds
jo
stos
dec
call
dec
mov
retf
test
imul
addr16
adc
popf
mov
jbe
repz
push
daa
out
fdiv
push
mov
adc
cmp
pop
loopne
mov
adc
inc
dec
in
jns
aas
xchg
jecxz
shl
shl
mul
iret
cmp
and
idiv
jecxz
ret
stos
jle
mov
arpl
xlat
or
int
stc
inc
adc
dec
inc
sub
jno
mov
(bad)
mov
cs
and
lock
daa
inc
and
xchg
icebp
in
mov
adc
rol
repz
push
sub
cs
pop
cmp
cmp
xor
ret
imul
xor
idiv
stc
mov
xchg
jmp
xchg
or
lahf
mov
scas
jb
jo
xor
hlt
ss
cmps
cmc
xor
inc
and
or
mov
popf
push
sbb
push
stos
jno
ret
add
or
add
push
retf
addr16
mov
pusha
dec
or
test
mov
fsub
mov
das
aam
into
(bad)
mov
int
lods
cmps
out
outs
retf
popa
adc
idiv
pop
fsub
xchg
enter
jno
hlt
push
hlt
or
hlt
fldenv
ins
iret
sub
aad
sbb
shr
push
cmp
inc
js
mov
adc
mov
sub
push
cld
ja
push
add
ins
jl
loopne
jp
imul
mov
sbb
test
jmp
jecxz
cwde
cdq
ja
adc
xchg
pop
pop
pop
fadd
rol
out
pop
push
jmp
popf
jg
fisubr
aas
dec
arpl
(bad)
xchg
and
movs
and
xor
lds
dec
pop
stos
enter
lds
jbe
mov
addr16
mov
add
mov
aaa
fbstp
enter
mov
lods
pop
add
add
sub
pop
test
add
jne
mov
xchg
push
les
sbb
jmp
es
outs
pop
cmps
inc
cdq
out
or
fdivp
cwde
ds
pop
jmp
xchg
daa
mov
jns
addr16
cmp
xchg
add
das
lods
and
inc
fstp
mov
sar
popf
adc
push
sbb
adc
jle
jmp
mov
fwait
in
(bad)
shr
std
sahf
push
sbb
mov
jmp
les
fs
(bad)
aad
push
shl
pop
dec
loop
sbb
ror
imul
ret
icebp
inc
cmp
or
cmp
retf
call
mov
loope
jbe
lods
cmps
xchg
dec
ds
ss
jb
mov
or
cmp
sbb
xchg
adc
xor
sub
sbb
cwde
lds
cwde
fcomp
xor
push
mov
cmp
or
cld
dec
and
dec
jle
es
pushf
cmps
lods
(bad)
jg
sub
sbb
retf
push
mov
mov
adc
(bad)
arpl
sub
mul
outs
xor
outs
arpl
mov
add
xchg
mov
adc
cdq
xchg
pop
dec
test
and
jmp
retf
dec
cmp
lods
fcomp
es
xor
rcr
sti
lods
cwde
mov
xor
xor
adc
or
mov
mov
addr16
int3
(bad)
mov
jp
pop
xchg
dec
xchg
xchg
push
ror
xchg
std
arpl
out
jne
movs
mov
fwait
iret
clc
loop
jp
test
inc
fwait
xor
xchg
fld
aad
push
mov
pop
mov
sub
or
pop
sub
(bad)
repnz
je
loop
not
sar
adc
out
jmp
mov
fst
push
aad
push
mov
and
shl
dec
inc
pop
not
retf
xchg
sub
in
and
sbb
ret
jmp
jbe
pop
adc
cwde
jge
pop
pop
mov
popa
dec
or
dec
inc
pop
std
pop
nop
repz
mov
mov
inc
loopne
addr16
js
fcmovnbe
stos
ss
adc
push
ins
mov
call
fmul
jle
or
and
push
push
fwait
and
cmp
sub
add
aad
bnd
addr16
int3
imul
outs
mov
xchg
shr
mov
popa
cs
dec
xor
pop
inc
pop
push
dec
jnp
jnp
sti
rcl
sti
dec
and
loopne
and
loop
push
sahf
add
xor
ja
(bad)
out
pop
call
adc
out
daa
test
push
push
idiv
popf
imul
or
pop
pop
(bad)
adc
mov
and
ret
cmc
test
nop
std
xchg
imul
fist
add
cmp
mov
ds
xchg
(bad)
xchg
and
test
sbb
dec
movs
ins
push
out
je
bound
stc
nop
sbb
hlt
out
add
mov
in
inc
jo
push
scas
push
add
loopne
or
jle
lahf
loop
ja
sbb
test
retf
into
or
aam
pop
jo
push
rcr
adc
push
ins
adc
in
(bad)
repnz
dec
sub
mov
or
adc
mov
sub
mov
js
retf
dec
icebp
inc
je
(bad)
xor
loopne
or
jge
and
sub
(bad)
pop
stos
sbb
xchg
xchg
sbb
scas
data16
clc
pop
mov
xor
mov
adc
push
dec
adc
dec
cwde
mov
mov
das
popa
push
ins
or
add
repz
jmp
scas
push
mov
adc
clc
xchg
mov
fist
out
push
les
fdiv
adc
adc
jns
es
scas
cli
daa
vpcmpeqd
add
out
std
jp
int3
pop
cmps
fsubr
(bad)
popa
pop
mov
(bad)
mov
pop
shl
push
pop
movs
pop
pop
mov
push
lods
jbe
icebp
xlat
cli
test
sub
mov
dec
pop
mov
push
dec
(bad)
mov
call
xor
mov
cmps
sahf
jl
add
stos
mov
out
scas
arpl
mov
or
pop
sub
jae
cmps
adc
push
out
mov
inc
add
bound
sbb
sbb
cmp
push
dec
sar
sbb
leave
mov
push
mov
lahf
xchg
mov
dec
and
out
push
xchg
dec
inc
in
cld
out
inc
sbb
adc
fld
bound
aad
dec
outs
push
xor
(bad)
jmp
xor
pop
sub
std
rol
mov
mov
das
std
inc
push
in
(bad)
mov
idiv
ss
adc
popa
sub
hlt
rcr
xlat
je
push
sbb
popa
movs
jnp
jmp
cld
or
push
out
(bad)
fst
xor
in
aad
dec
movs
data16
jmp
mov
or
stc
test
into
ja
or
pop
inc
inc
popa
inc
or
repz
and
lahf
fnstenv
shl
mov
adc
outs
movs
std
pop
fdivr
mov
hlt
mov
push
push
sbb
cs
ja
cmp
xchg
test
shl
pushf
sbb
xchg
ja
js
stc
fnstcw
xor
jo
or
int
movs
dec
sub
inc
dec
retf
iret
jg
ret
sbb
cmp
js
xchg
retf
dec
or
ins
int3
adc
adc
jge
lods
and
loope
sub
loopne
dec
sbb
addr16
pcmpeqw
mov
sbb
ret
mov
outs
push
daa
into
movs
push
cmp
sbb
stos
inc
dec
fwait
sar
cmc
jecxz
pop
jmp
(bad)
retf
jno
jno
into
xchg
sahf
mov
in
and
mov
mov
mov
push
aaa
jmp
fadd
popa
mov
push
sahf
xchg
sbb
inc
push
scas
inc
push
test
pop
jmp
jg
xchg
test
popf
dec
les
int
ret
push
dec
fst
mov
mov
pop
cld
inc
lock
imul
cdq
out
mov
sahf
and
retf
arpl
push
vaddsubpd
mov
inc
int
mov
and
sbb
sbb
lea
in
adc
mov
out
push
dec
lock
enter
adc
stos
and
cmp
scas
mov
sub
stos
hlt
mov
jp
aaa
and
cmp
or
jb
cli
adc
mov
ins
scas
dec
jl
lds
add
daa
bound
or
inc
xor
repz
and
rol
and
cmp
pusha
std
jmp
push
vmovups
or
pop
push
icebp
jg
push
and
pop
xlat
sub
es
or
sub
push
push
cmp
pop
les
test
and
(bad)
jp
jnp
mov
pop
(bad)
inc
mov
sbb
dec
test
mov
mov
hlt
ret
mov
sub
mov
jl
test
jno
sub
popa
cwde
push
es
sbb
stos
cmp
xchg
(bad)
call
fs
scas
sub
(bad)
cmp
arpl
(bad)
mov
in
stos
jno
int
cmps
xchg
in
mov
xor
xor
fs
test
fwait
mov
mov
sbb
(bad)
jmp
xchg
fnstsw
sti
xchg
into
inc
retf
into
xor
pushf
lahf
int
jecxz
out
add
lds
xchg
(bad)
loop
popa
add
ror
in
addr16
jne
test
pop
mov
push
rcr
sub
dec
cmp
fld
imul
(bad)
jae
cdq
mov
dec
leave
sub
sub
pop
test
icebp
cs
lea
dec
into
mov
sbb
std
stos
loope
cmp
xchg
jp
adc
pushf
push
lods
retf
hlt
jne
into
dec
test
mov
fadd
adc
jno
movs
adc
arpl
std
xchg
jno
arpl
stos
jnp
sbb
push
push
outs
mov
xlat
bound
pop
xchg
sub
pop
ror
adc
and
lock
scas
jns
mov
sar
inc
ret
jns
hlt
in
pop
jge
pop
mov
ret
jl
add
(bad)
fcmovnb
or
mov
or
mov
aas
pop
jno
jmp
jl
ficomp
cmp
cs
jne
mov
sbb
cmp
pop
inc
pop
in
imul
xor
test
(bad)
leave
xor
fwait
push
pop
es
xchg
arpl
int
mov
push
jl
or
mov
jb
call
jge
call
pop
xchg
dec
sbb
inc
jmp
jns
cmp
mov
fwait
imul
ret
clc
pop
into
push
es
cmp
pushf
enter
ret
das
push
out
and
fsub
clc
rcr
mov
mov
cmps
and
outs
arpl
mov
or
mov
int
or
cmp
in
js
add
cmp
cmp
push
or
adc
fidivr
inc
test
cli
(bad)
jbe
pop
cmp
xor
popf
adc
xchg
sub
jb
adc
stos
push
push
push
fld
jns
add
call
iret
or
loop
lahf
mov
pusha
icebp
pop
out
es
das
mov
scas
cmp
in
inc
add
iret
sbb
out
mov
fimul
es
adc
(bad)
dec
cdq
mov
test
xor
adc
mov
mov
mov
fmulp
mov
movs
cmp
aaa
sub
in
push
jle
lock
cmp
xor
ins
mov
mov
ins
push
xor
push
call
test
popf
mov
lods
cld
adc
(bad)
hlt
cmp
in
xor
addr16
lds
nop
lods
loope
xor
inc
jecxz
inc
repnz
test
sub
test
sbb
adc
(bad)
loopne
mov
scas
pop
fsub
arpl
test
fdivr
cli
scas
inc
pop
mov
test
shl
fs
mov
ror
emms
outs
jne
fcomip
les
repnz
xchg
sbb
jl
cmps
retf
push
xor
in
jnp
pop
xor
das
lods
ins
into
(bad)
dec
shl
add
jg
leave
mov
stos
call
cld
loope
mov
mul
aad
sar
clc
movs
pop
pop
push
pop
mov
adc
adc
aas
sbb
int
stos
push
or
push
cmp
push
mov
and
xchg
dec
add
out
adc
rcr
jns
dec
add
mov
dec
fucom
cmp
shl
lods
ins
leave
pop
mov
dec
fdivr
and
pop
nop
in
scas
retw
jecxz
jb
(bad)
in
(bad)
(bad)
mov
xchg
icebp
add
sbb
xchg
push
(bad)
xchg
or
or
test
mov
sub
stc
xchg
mov
sub
and
push
ret
cdq
aas
(bad)
cli
cmps
jg
sbb
mov
repz
and
test
scas
lods
adc
pushf
scas
push
dec
inc
cmc
pop
jns
mov
mov
push
sub
xor
mov
jg
pop
not
and
call
cli
outs
addr16
lea
mov
fild
ret
aaa
in
xchg
cmps
push
cli
ret
jmp
outs
mov
into
sub
xchg
jae
jnp
sub
pop
pop
out
pop
clc
inc
xor
popa
sub
push
cli
dec
mov
stos
xchg
jecxz
mov
cmp
and
hlt
push
lahf
in
stos
jnp
test
xchg
aas
es
inc
cmp
adc
push
aaa
xor
adc
jmp
xor
or
jge
jns
mov
leave
cld
xlat
adc
repnz
pop
dec
cmp
or
mov
dec
push
rcl
dec
stc
retf
mov
jbe
jle
mov
cmps
mov
fs
sbb
xchg
jne
cmp
cmc
ds
mov
jbe
std
dec
pop
hlt
inc
jne
(bad)
mov
jmp
out
jecxz
push
adc
push
iret
sub
neg
loope
sbb
adc
mov
mov
lods
pop
add
jmp
movs
leave
test
xchg
aam
call
push
xchg
aaa
fdivrp
arpl
pop
mov
imul
inc
shr
or
mov
ds
sbb
xchg
xor
cmp
push
jbe
jmp
jns
aaa
out
ins
pop
inc
add
idiv
xor
mov
xchg
push
pop
fimul
sub
cwde
jp
pusha
std
fcomp
outs
fisub
outs
in
xor
cld
and
sahf
mov
sub
lock
mov
scas
dec
movs
add
fwait
(bad)
xor
push
sbb
inc
mov
pop
cmp
pushf
enter
sub
push
mov
add
mov
jmp
push
into
mov
jecxz
movs
std
or
and
adc
imul
stos
loopne
dec
repnz
retf
add
scas
sbb
adc
mov
cmc
ins
int
push
push
mov
mov
pop
mov
cmp
jecxz
jle
or
pop
aam
aaa
retf
cwde
mov
adc
or
outs
pop
daa
bound
cmps
xchg
sub
mov
xor
imul
cmps
inc
stos
xchg
jo
pop
jg
jnp
xchg
into
sub
xor
ins
mov
pop
push
cmp
icebp
inc
cwde
call
push
jo
(bad)
sbb
lods
jle
int
clc
loop
dec
mov
xchg
xlat
or
ret
fisub
stos
(bad)
adc
cmp
cmps
fbstp
jecxz
jl
pop
lods
push
jne
or
inc
scas
js
sbb
sbb
daa
jno
add
pusha
jbe
popf
inc
fwait
sub
xor
mov
jmp
(bad)
cmc
test
fmul
xor
mov
xchg
sub
fucomip
loopne
rol
ds
jo
mov
and
repnz
push
mov
dec
(bad)
sbb
jbe
cdq
lock
movs
ja
rol
das
test
or
jmp
out
leave
pop
out
jle
ja
jns
sbb
aam
(bad)
ins
mov
inc
jb
xor
mov
std
dec
sub
ret
test
js
cmps
test
ins
mov
inc
fimul
rep
xchg
add
mov
xchg
dec
xchg
push
jle
jb
inc
test
sahf
dec
pop
mov
sti
push
pop
fist
dec
fst
or
mov
sbb
rcr
add
sub
push
imul
cld
cmovl
or
ins
aad
adc
in
jo
retf
adc
pop
out
cmp
xchg
mov
scas
xor
dec
clc
xchg
push
push
inc
fs
inc
inc
jb
sbb
outs
in
out
jp
jl
loope
not
jl
adc
mov
shl
rol
enter
sub
ficomp
pop
outs
jns
and
movs
fs
xlat
cmp
bnd
mov
mov
call
loopne
jle
pushf
xor
loope
ins
shl
sti
lea
dec
cwde
inc
and
lock
movs
ret
jmp
dec
xor
test
sbb
ds
retf
and
imul
jge
dec
adc
dec
or
ins
jmp
mov
adc
jbe
in
push
scas
push
lea
mov
sub
(bad)
fadd
cmp
fistp
lods
push
sub
mov
test
pop
push
out
mov
jnp
jno
aas
jl
xchg
or
sub
xor
pop
cwde
out
xor
pop
jl
jp
mov
dec
fwait
xchg
jle
cdq
es
lock
out
or
fld
xor
xchg
jecxz
inc
lahf
cmps
call
jle
pushf
rcr
inc
shl
jl
push
or
cmp
adc
jns
sbb
(bad)
dec
stos
es
fld
push
js
fimul
mov
mov
mov
bound
rcr
or
adc
jo
stc
out
cmp
xchg
enter
popf
adc
sub
xchg
or
sub
add
dec
xchg
js
out
mov
add
shl
jg
pop
jmp
pop
cmp
and
pushf
push
loop
fldcw
xchg
jp
pop
popf
sahf
lods
xchg
mov
sbb
mov
cmp
(bad)
std
icebp
ja
std
push
mov
adc
lock
mov
mov
ins
jb
xor
ret
lods
xchg
test
sub
cli
sahf
xor
add
mov
fwait
mov
fsubr
ret
shr
push
adc
pop
dec
cmp
cdq
bound
mov
mov
pop
inc
cdq
sar
cmp
iret
mov
mov
inc
jl
xor
xor
cmp
outs
add
bound
stos
jle
fdivp
jle
pop
push
dec
(bad)
add
xor
clc
aad
fistp
aad
aaa
mov
pop
daa
xor
jb
mov
ja
leave
sbb
movs
addr16
repz
or
push
lods
retf
scas
scas
ins
jbe
dec
add
shr
rcl
mov
pop
test
lahf
fwait
mov
popf
sub
push
push
mov
repnz
call
scas
or
dec
inc
mov
movs
stc
(bad)
fidivr
leave
push
pop
cmp
add
cmp
fwait
cdq
xor
xchg
sbb
nop
int3
push
dec
xor
rcr
icebp
pop
sbb
pushf
dec
add
out
adc
mov
and
pusha
adc
clc
into
mov
inc
add
and
xchg
scas
xchg
mov
dec
out
push
movs
pop
fwait
cwde
jb
xchg
adc
xchg
out
pop
je
or
cmp
fcom
cmp
jne
xchg
fild
jo
aaa
cmps
in
adc
retf
xchg
and
repz
imul
xor
clc
inc
ja
mov
dec
arpl
les
sbb
xchg
jecxz
inc
daa
mov
sbb
popf
fwait
js
pop
aas
retf
popf
js
pushf
shl
lods
pop
(bad)
enter
jno
cmp
and
stos
and
addr16
sti
inc
mov
into
jb
inc
pop
addr16
rcr
daa
retf
aaa
(bad)
or
adc
xchg
int3
cmc
sub
mov
jb
cmp
pop
into
mov
fadd
scas
pop
es
or
mov
imul
xor
and
inc
ret
mov
mov
fmul
lock
adc
add
jge
adc
jecxz
push
or
shl
(bad)
in
test
and
sbb
test
in
push
jne
call
dec
out
xchg
fwait
sar
sbb
and
jecxz
mov
lds
sahf
(bad)
rcr
mov
clc
xor
or
push
rcr
fmul
dec
shl
jmp
inc
cdq
mov
in
push
test
sbb
iret
dec
int3
arpl
dec
call
sub
mov
jb
lods
ret
sub
aad
jnp
stos
lods
jo
arpl
cmp
loop
jnp
sti
push
arpl
adc
mov
jns
pusha
mov
jno
cmps
test
or
and
(bad)
and
imul
push
and
mov
and
pop
fidiv
in
lea
dec
cmp
mov
leave
xor
jp
les
(bad)
xor
cmps
pop
dec
lods
push
push
xor
mov
retf
loopne
xor
mov
shr
xchg
xchg
out
inc
push
outs
jmp
(bad)
stos
movs
pop
pop
mov
jmp
xchg
mov
popf
pop
dec
pop
xor
popf
xchg
xchg
imul
pop
das
sar
and
stos
popf
mov
fadd
(bad)
shr
inc
loop
stos
mov
shl
push
and
icebp
and
int3
ds
push
outs
jno
retf
fcmove
sub
(bad)
out
and
cld
aas
dec
xchg
xor
mov
mov
gs
sub
sub
imul
inc
fcom
das
xor
mov
fisttp
das
jnp
pop
leave
clc
out
pushf
je
mov
shl
xchg
call
test
add
imul
mov
stos
push
jae
out
xchg
mov
ret
hlt
mov
ja
lods
jmp
or
inc
lds
sub
dec
xlat
push
(bad)
fstp
ins
aas
outs
jmp
sub
retf
mov
push
sbb
stos
popf
out
mov
dec
xor
mov
jbe
loopne
jne
dec
and
inc
inc
inc
dec
daa
fsub
jns
(bad)
and
pop
ins
shr
pop
lock
push
xor
into
mov
ficom
data16
cmps
sub
out
out
sub
inc
pushf
fidiv
lock
sub
xor
outs
cli
and
cmp
dec
dec
push
neg
mov
sbb
cmp
and
addr16
lds
in
test
rcl
mov
fld1
movs
movs
jno
es
dec
cmp
sub
add
mov
int
popa
int
push
jmp
push
adc
adc
and
inc
push
jb
cmps
out
inc
sub
(bad)
jae
mov
repz
movs
adc
cwde
and
and
cmps
cmp
and
xor
jne
cdq
or
cli
daa
movs
inc
pop
jle
add
adc
test
cld
cld
in
and
rol
aas
or
push
fs
mul
aam
mov
cmc
mov
(bad)
mov
idiv
call
sub
lds
in
ret
mov
cld
out
xchg
mov
out
mov
jne
jnp
mov
(bad)
and
push
ds
or
in
push
xchg
mov
inc
scas
sbb
fild
and
lea
adc
xchg
mov
mov
push
rol
cmc
sub
daa
dec
mov
aad
jno
ins
pop
push
je
adc
fidiv
stc
mov
sub
mov
mov
fidivr
push
inc
jno
push
add
inc
sbb
push
repz
das
cmp
iret
pop
cmps
retf
and
pusha
loope
js
sbb
enter
out
leave
pop
push
mov
sahf
inc
icebp
cli
fisttp
mov
jae
adc
add
cmp
stos
jle
cs
dec
jl
xlat
addr16
xor
cld
cmp
dec
scas
popf
or
jns
das
adc
inc
pop
(bad)
fisttp
pop
dec
sahf
das
div
cmp
stos
mov
jo
xchg
ja
jp
sbb
shl
lahf
inc
or
loope
fistp
bnd
inc
push
(bad)
in
jb
add
sub
and
leave
and
cmp
pop
xchg
xor
lea
clc
scas
clc
in
popf
mov
ds
jecxz
adc
cmp
mov
aas
loope
sub
pop
adc
and
jb
scas
push
or
sbb
mul
scas
fcmovnb
aaa
loop
xchg
inc
cld
dec
sbb
mov
xor
inc
push
rol
loope
push
pop
bound
loop
jmp
cmc
jns
dec
or
shr
sbb
adc
les
shr
repz
lock
jbe
sub
aam
sbb
clc
push
loop
jno
pop
mov
sbb
cmp
pop
push
loop
sbb
cli
iret
xchg
loopne
inc
cmp
sub
jnp
mov
scas
ja
xor
adc
out
pop
add
push
dec
lahf
les
cmp
pop
push
shl
and
mov
cmp
out
cmp
xchg
or
dec
push
push
xchg
sbb
sbb
sub
jb
in
mov
and
pop
fsubr
cmp
pop
mov
and
cmovl
mov
mov
inc
gs
repz
fsubr
mov
jae
int3
add
pop
and
cdq
jbe
movs
ds
clc
cmp
loope
push
add
pop
sar
movs
inc
mov
add
in
data16
aad
inc
sub
scas
sub
in
mov
sub
or
push
sbb
pop
movs
icebp
sbb
int3
xchg
(bad)
jne
pop
in
lods
and
in
fs
lods
xchg
and
aad
xor
mov
mov
mov
cs
retf
int
jno
popf
or
xchg
neg
retf
(bad)
jno
dec
stos
mov
leave
or
int
jmp
daa
or
push
mov
pop
fld
sub
push
dec
js
leave
mov
sub
pop
js
mov
int3
dec
mov
mov
in
retf
test
cmps
push
arpl
sbb
mov
test
rcl
jae
push
pop
jnp
hlt
mov
sub
repz
xchg
cli
sar
push
add
mov
adc
leave
into
test
xchg
addr16
ret
push
cmp
sbb
and
ret
(bad)
rcr
mov
sub
adc
xor
and
inc
xor
and
rol
pop
emms
in
inc
into
cmp
icebp
ins
sar
cld
and
lods
pop
lahf
(bad)
aad
std
jg
rol
in
inc
aad
mov
in
mov
jmp
out
movs
jo
out
mov
push
mov
in
xor
daa
push
(bad)
xchg
xchg
out
mov
ds
mov
aam
jmp
pushf
shl
mov
loope
and
xchg
xor
rol
or
pusha
iret
mov
das
pop
push
repz
cmp
psubusw
mov
neg
push
clc
lods
mov
mov
lds
push
enter
xor
mov
mov
jmp
call
cld
dec
or
mov
xchg
push
jp
and
push
pop
push
adc
dec
out
fistp
lods
sti
clc
fild
xchg
xchg
ins
inc
add
xor
push
xor
jmp
mov
sbb
int3
movs
adc
(bad)
ds
cli
(bad)
cld
mov
and
xor
mov
(bad)
out
jb
or
fldcw
test
jg
mov
mov
outs
ins
inc
test
inc
add
jmp
or
push
jp
sub
add
fs
xor
adc
pop
cmp
mov
sbb
xchg
or
xchg
sbb
aam
ins
add
cli
pop
inc
iret
and
es
lods
shl
add
jo
mov
mov
xchg
xchg
dec
test
int3
xor
sub
test
and
jo
push
xor
lods
outs
mov
outs
sbb
jmp
je
or
sub
xor
fld
push
inc
inc
ss
popf
test
out
cwde
and
xor
mov
out
retf
jmp
xor
adc
lgs
cmp
cwde
outs
jge
andnps
dec
cmps
jnp
dec
fst
repz
sbb
ret
pushf
inc
retf
sti
aaa
or
xor
cmp
cwde
sbb
inc
(bad)
and
adc
(bad)
mov
daa
int3
aas
jbe
xor
pop
or
add
repz
pop
adc
jmp
xor
loopne
neg
sbb
push
imul
popf
shl
jmp
xor
mov
dec
popf
xchg
pop
test
test
push
sbb
mov
enter
mov
inc
int3
aad
test
and
mov
add
mov
xchg
sahf
mov
or
(bad)
(bad)
fistp
and
in
mov
adc
cmps
test
neg
mov
movs
pushf
pop
cmp
adc
dec
out
inc
arpl
dec
iret
retf
sub
shl
popf
jb
shl
push
inc
add
and
pop
out
in
hlt
mov
lea
inc
push
and
in
dec
xor
ins
sbb
aas
bound
or
mov
inc
push
lahf
cmps
sub
ror
lahf
shl
dec
push
mov
xchg
dec
xor
stc
sub
jno
and
in
fist
sti
push
jp
in
retf
and
push
jo
pop
mov
jg
mov
xchg
mov
cmp
hlt
xchg
push
rcr
adc
mov
jae
sar
jl
fadd
push
add
sbb
data16
inc
xchg
adc
jne
outs
mov
inc
sahf
nop
out
push
loopne
xchg
imul
mov
mov
xchg
(bad)
push
ret
cmp
xchg
inc
xchg
out
(bad)
push
stos
sub
mov
ins
mov
sub
fisubr
pop
xor
mov
lods
in
push
fmul
sbb
cmp
cmp
or
mov
sbb
sub
xchg
movs
push
pop
add
add
mov
lock
mov
xchg
dec
xor
fisttp
cmps
xchg
cli
add
ret
iret
or
imul
dec
cwde
mov
inc
das
arpl
push
rcl
lock
clc
stos
js
cld
cmp
mov
xor
mov
pop
loop
rsqrtps
cli
inc
xchg
imul
sub
mov
xchg
in
mov
xchg
xchg
xor
jbe
ficom
inc
push
fwait
ds
arpl
push
in
xor
cmp
rol
call
clc
xor
es
dec
adc
cmp
loope
sti
sub
dec
test
clc
cmc
jge
and
iret
out
pop
or
and
xlat
call
push
shr
xchg
jne
push
lods
xchg
out
popa
pop
pusha
cmp
es
push
adc
dec
and
cmp
mov
mov
dec
pop
push
jg
leave
xor
bnd
out
pop
jns
cmp
out
mov
test
and
aas
cmp
mov
adc
adc
push
xor
lahf
push
scas
xor
out
cdq
pop
cmp
cli
out
push
xchg
xor
push
lods
leave
pop
push
add
add
jp
(bad)
pop
adc
cli
jne
add
cmc
outs
ror
sahf
aas
neg
mov
aas
inc
leave
adc
aas
and
xor
and
test
push
sub
fimul
push
fwait
je
int3
mov
xor
and
je
(bad)
inc
(bad)
push
fnstsw
or
ss
mov
aam
add
lahf
adc
add
rcl
inc
popf
jg
popa
mov
cld
pop
sbb
xor
or
mov
cmp
test
arpl
xor
arpl
and
(bad)
mov
push
or
jno
push
aam
outs
leave
and
movs
jo
and
sub
sub
stos
call
xchg
cmp
mov
in
mov
mov
mov
sbb
cdq
adc
arpl
or
in
out
jb
mov
sub
or
xchg
retf
push
jg
repz
sbb
and
mov
xor
daa
inc
cld
or
stc
cmp
retf
jb
mov
ud1
mov
adc
pop
jp
not
(bad)
gs
loopne
sbb
ret
(bad)
pop
jecxz
sub
mov
fisttp
cwde
mov
jge
or
mov
jl
sub
rol
cmp
add
das
out
(bad)
jnp
js
movs
out
inc
mov
mov
push
cmp
jnp
in
loope
dec
mov
data16
mov
das
jno
jb
cmp
enter
mov
stos
stc
cmp
jne
out
sub
inc
movs
cmp
inc
cmp
out
xor
xchg
leave
sub
popa
in
jmp
and
xchg
inc
push
pop
stos
mov
inc
push
cld
or
mov
nop
jo
dec
inc
out
bound
mov
daa
dec
push
dec
cmp
arpl
jmp
dec
in
mov
jnp
jl
enter
repnz
rol
call
outs
xor
dec
xor
jg
or
in
inc
ret
sti
mov
adc
or
mov
pop
mov
push
fisub
cdq
retf
mov
out
mov
pop
and
mov
movs
sbb
leave
popa
cmps
xor
aaa
std
mov
adc
(bad)
fnstenv
mov
add
xchg
jg
in
xchg
push
fistp
daa
pop
loope
scas
xor
clc
fimul
and
test
cmps
xchg
xor
pushf
and
clc
lahf
add
inc
(bad)
pop
and
add
enter
retf
scas
and
or
(bad)
mov
sub
sub
ins
dec
ins
jl
dec
xor
adc
test
sbb
popf
repnz
loope
add
xchg
enter
jae
aad
mov
cmp
iret
add
or
ja
pop
adc
mov
xchg
call
and
jno
sbb
add
fisubr
mov
data16
jl
mov
pop
imul
mov
sti
test
add
aad
dec
int
dec
sub
xchg
into
test
inc
retf
xor
inc
enter
push
in
mov
nop
aad
imul
sbb
popf
retf
add
adc
xchg
mov
or
and
pop
mov
pop
and
icebp
sub
popa
aam
jge
add
mov
jle
pop
inc
mov
adc
xchg
jne
sub
mov
ficom
lock
mov
sub
in
mov
jo
add
mov
arpl
pop
and
fsincos
pop
add
cdq
mov
pop
dec
adc
pop
div
jp
stos
mov
mov
jnp
xlat
imul
and
jno
mov
cmps
mov
sbb
xchg
es
les
cmp
jns
ret
inc
(bad)
jmp
not
bound
sub
dec
aas
adc
arpl
dec
cmps
loop
leave
or
pop
call
cmp
sbb
outs
cmovs
out
jmp
sbb
ins
out
fsubrp
bound
and
cwde
sub
sub
inc
add
repz
push
ins
mov
loop
lods
cwde
popf
push
cmps
mov
add
lds
inc
rol
stos
or
sbb
push
lea
pushf
cmps
or
pop
cwde
popa
sub
pop
pop
retf
stos
(bad)
scas
sbb
nop
push
ret
sbb
outs
iret
aam
mov
pop
push
push
pop
imul
xor
or
sti
into
inc
mov
int3
shr
adc
mov
or
pop
jl
pop
iret
aas
cmp
call
inc
enter
xor
inc
dec
xor
sub
add
mov
aad
cmp
das
push
mov
sbb
jne
cmp
daa
mov
mov
cdq
push
call
into
push
push
pop
out
push
aam
ror
mov
adc
cli
dec
pop
ins
fs
(bad)
std
adc
pop
cmp
mov
mov
stos
pop
pop
sbb
add
xor
ret
movs
shl
in
sbb
pop
ins
jmp
lods
ins
repz
adc
idiv
icebp
xor
mov
ins
ja
rcl
ucomiss
mul
test
leave
and
sbb
pop
js
adc
sub
cmps
jle
sub
push
je
hlt
fist
in
cmp
xor
mov
and
mov
fdivr
mov
mov
push
push
test
in
push
and
pop
ins
ror
popa
xlat
ins
stos
fld
fwait
xchg
cmps
xor
je
sub
or
(bad)
jnp
or
dec
xchg
ja
mov
sub
(bad)
(bad)
jecxz
inc
ficomp
je
jl
cmp
push
cmp
mov
js
mov
lods
loopne
je
xor
inc
mov
fldcw
ss
jecxz
dec
sahf
mov
jmp
jno
popf
cdq
sub
push
in
cli
add
inc
cmp
popf
add
rcr
adc
xchg
call
gs
adc
mov
mov
adc
mov
pusha
dec
xchg
pop
imul
jno
ins
xchg
jmp
xchg
mov
add
sub
into
jg
cmp
movs
aad
cmp
add
pop
mov
cmp
cmp
lods
mov
sbb
xchg
push
jle
cmp
loope
pop
or
or
pop
jns
sub
scas
mov
das
pop
xor
out
mov
push
popf
inc
jo
xchg
pop
int3
cli
fucomi
mov
push
popf
add
cs
pop
and
mov
mov
in
std
inc
paddsb
jl
inc
jnp
in
aas
sbb
cdq
daa
or
mov
sbb
int3
jg
jge
xchg
aas
push
retf
outs
(bad)
inc
fbld
shr
xchg
mov
scas
scas
and
push
jo
bound
jp
sahf
xor
fidivr
pop
jae
or
sbb
mov
pushf
aaa
push
sub
dec
or
nop
mov
imul
push
fcom
out
jmp
push
aad
mov
push
sahf
adc
pushf
or
push
dec
xor
retf
in
cmps
or
jnp
outs
pushf
pop
mov
cld
sub
jns
les
cdq
mov
es
push
aad
into
push
dec
nop
cld
mov
mov
mov
xor
scas
fadd
scas
mov
xchg
enter
add
add
jmp
push
mov
add
lods
ins
push
xlat
daa
push
dec
and
arpl
imul
fcomp
aam
test
ret
ins
jecxz
sub
mov
imul
les
add
mov
in
sub
sub
mov
imul
dec
or
ja
mov
cmp
sub
mov
jp
or
stos
div
jb
push
xor
repz
and
jbe
cmp
test
lock
pop
aam
adc
pop
push
hlt
inc
(bad)
idiv
jbe
mov
jmp
(bad)
sub
(bad)
in
fcomp
xchg
jmp
das
sbb
inc
sub
jo
sbb
scas
dec
outs
in
mov
mov
leave
and
(bad)
es
out
sbb
fs
inc
or
pop
je
loopne
punpckldq
int3
mov
ss
hlt
ret
mov
push
sar
dec
and
mov
xor
and
push
pop
inc
dec
or
mov
or
pushf
jge
cmp
dec
adc
in
dec
push
jge
pop
push
loope
sub
into
xlat
push
dec
stos
test
js
mov
mov
push
mov
sub
les
leave
mov
es
shl
push
call
jmp
iret
fcmovb
mov
push
mov
shl
ins
and
xor
pop
int3
mov
and
aaa
pop
stos
xchg
retf
adc
ficomp
mov
(bad)
(bad)
mov
mov
and
adc
dec
fwait
leave
cmps
cwde
repz
fld
sbb
xchg
sub
push
je
xchg
adc
fidivr
sbb
idiv
daa
pop
mov
and
ret
add
ja
or
cmp
pop
adc
popf
jge
adc
call
jmp
lods
repnz
repnz
push
stos
mov
aas
movs
inc
out
aaa
pop
and
or
mov
dec
jnp
jmp
jge
lock
inc
mov
scas
dec
cmp
jg
xchg
sub
les
cli
fnstcw
jmp
out
mov
or
leave
(bad)
adc
inc
clc
loop
popa
jg
push
mov
pop
xor
sub
push
mov
xchg
stos
retf
dec
jnp
std
jmp
outs
(bad)
popa
jp
pop
mov
into
mov
movs
(bad)
movs
imul
aam
out
gs
fadd
aad
sbb
in
test
pop
cmp
retf
in
cld
inc
js
push
push
mov
repz
jnp
mov
pop
jecxz
or
add
mov
and
nop
test
arpl
outs
sbb
scas
fiadd
addr16
sub
sti
mov
maskmovq
test
add
outs
cmc
push
clc
adc
movs
push
mov
(bad)
or
ins
sub
cmp
rcl
leave
jae
retf
std
xor
and
test
mov
(bad)
stos
fs
push
cmp
icebp
js
or
out
aaa
push
fisttp
add
imul
in
push
sub
push
dec
cdq
iret
or
mov
shl
mov
mov
push
das
xor
xchg
and
adc
mov
cwde
or
cmp
push
(bad)
mov
dec
xor
(bad)
lock
add
cwde
(bad)
mov
mov
sub
xor
cmp
xchg
rol
lahf
enter
and
out
push
in
fcmove
push
leave
pop
ror
add
cmps
movs
sbb
xor
ss
mov
push
sbb
mov
aam
xchg
enter
dec
fmul
mov
mov
add
xchg
pop
sbb
enter
inc
dec
enter
fsub
adc
in
mov
iret
rcl
cdq
idiv
jns
lods
out
lea
jae
add
cwde
pushf
add
call
(bad)
jmp
mov
lods
in
mov
es
and
sti
shl
mov
and
push
enter
fld
pop
mov
mov
js
push
inc
lods
lea
(bad)
imul
imul
cwde
pop
(bad)
jge
dec
aam
stos
dec
(bad)
(bad)
loope
test
lods
mov
mov
fwait
cmp
(bad)
loope
mov
mov
cli
mov
fwait
stc
sbb
push
mov
or
in
push
lds
sbb
mov
mov
fisubr
ret
sti
jnp
xlat
dec
(bad)
call
cs
xor
scas
jcxz
inc
ret
pop
rol
pusha
xor
or
and
std
call
xor
das
in
mov
and
xchg
inc
(bad)
cs
xlat
sub
inc
jae
jle
add
jbe
mov
adc
(bad)
fild
out
loop
scas
inc
sbb
retf
lds
pop
shr
jmp
rcr
push
push
xchg
test
cwde
fs
gs
dec
fisttp
push
int3
jmp
outs
jo
mov
popa
dec
loope
aaa
inc
(bad)
and
jg
xchg
repnz
mov
sbb
sti
loope
ss
dec
nop
dec
inc
pop
neg
lods
sahf
and
ins
inc
mov
mov
cmp
pop
xor
(bad)
ret
addr16
mov
loopne
jle
inc
repnz
ja
mov
xchg
mov
and
cmc
cli
add
and
jg
(bad)
test
pop
fwait
add
lea
rcl
mov
mov
push
push
jle
push
daa
int3
inc
sub
add
nop
jnp
icebp
mov
loope
aad
(bad)
push
std
scas
mov
lods
or
ins
jne
mov
mov
fs
retf
shl
xchg
adc
stos
jl
lahf
push
jns
stos
jge
dec
xor
pop
test
inc
das
call
mov
(bad)
pop
xchg
cwde
test
xor
fisubr
add
addr16
lock
arpl
mov
xchg
repz
leave
idiv
mov
aam
std
sti
rcl
xor
(bad)
pop
and
out
fsubr
cwde
sbb
jge
sub
(bad)
repz
or
add
jmp
sbb
jp
(bad)
or
aad
xchg
inc
lea
push
add
sub
leave
clc
mov
mov
ret
lds
fiadd
dec
pop
xor
or
test
cmps
and
out
fstp
sahf
retf
(bad)
push
dec
dec
test
xor
mov
jo
hlt
adc
push
fild
add
push
(bad)
jo
loop
mov
cmc
shl
icebp
or
mov
xchg
mov
sbb
fs
inc
ret
jmp
or
xchg
lods
test
cmp
mov
test
dec
ss
aam
mov
push
sar
fisub
jl
cdq
inc
jl
or
mov
dec
cdq
add
adc
mov
shl
jno
fcmovnbe
lods
mov
sbb
ret
and
pop
fwait
stos
push
inc
mov
push
cmp
les
inc
in
cmps
stc
retf
imul
push
jbe
call
call
inc
clc
call
fcomp
lahf
(bad)
clc
pushf
aas
mov
push
fstp
add
inc
pop
pop
loopne
sub
ins
mov
fwait
push
inc
test
fld
xor
and
fistp
push
pop
push
inc
loopne
mov
mov
inc
fwait
mov
inc
sub
mov
jmp
in
addr16
sub
sar
adc
push
mov
xchg
mov
pop
jae
mov
psubusw
xor
idiv
xor
push
cwde
lock
cmp
rol
add
in
(bad)
sar
pop
xchg
or
test
retf
lock
xchg
sbb
mov
les
bound
xchg
cmp
push
cdq
test
jmp
retf
xor
jl
int3
mov
xchg
retf
mov
test
sub
sar
pop
imul
(bad)
jg
jg
mov
inc
push
xchg
adc
std
out
push
scas
in
sbb
scas
rol
xor
xchg
dec
add
leave
ins
or
pop
(bad)
sub
mov
fs
dec
inc
xor
or
sub
(bad)
cmp
adc
push
mov
loopne
js
stos
cs
cmp
pop
ss
scas
iret
pop
ds
in
lods
frstor
push
call
hlt
or
mov
fadd
in
adc
or
movs
push
and
sbb
inc
outs
ja
mov
mov
adc
and
sbb
arpl
xchg
(bad)
sbb
sahf
fldenv
icebp
in
mov
xor
dec
xchg
push
and
jl
fwait
push
test
cmp
cmp
xor
loop
iret
mov
fist
movs
sbb
or
cwde
(bad)
and
push
in
idiv
pop
jo
xor
jecxz
jbe
mov
sti
jp
mov
xchg
leave
pop
jg
push
sub
repnz
stos
(bad)
xlat
daa
rcr
dec
pop
fsub
mov
(bad)
arpl
test
mov
(bad)
iret
outs
fidiv
in
call
mov
lahf
ja
adc
cli
in
lahf
sbb
inc
lods
xchg
gs
jbe
jmp
retf
cwde
stos
cmp
add
enter
dec
xchg
sbb
and
xchg
adc
nop
jno
sbb
imul
fcomp
icebp
jp
fs
sub
fcomi
or
inc
xchg
retf
clc
out
xchg
and
mov
cmp
in
push
fcompp
xor
xor
adc
or
mov
aam
out
out
sbb
jbe
loope
mov
mov
jo
loop
jbe
adc
mov
jo
push
call
jbe
in
mov
cwde
movs
std
mov
and
imul
mov
and
xor
add
movs
push
inc
push
fcomp
es
jg
jae
int3
jne
dec
mov
jae
mov
call
jno
push
jge
sub
push
sbb
jae
aaa
push
mov
out
jo
(bad)
mov
sbb
je
jp
jp
mov
mov
mov
inc
mov
outs
adc
shl
vandnps
in
mov
aad
ja
outs
test
popa
xor
jecxz
xchg
inc
cmps
xchg
mov
arpl
mov
lods
loope
jno
adc
sbb
lock
pop
pop
sub
cmp
and
jb
cmps
sub
xchg
dec
sub
or
and
xchg
xchg
ds
mov
aam
pop
test
addr16
data16
lock
enter
sbb
and
scas
fnsave
sbb
pop
pop
adc
inc
mov
in
lahf
cs
enter
sti
adc
mov
jb
fs
ja
xor
lods
emms
add
lahf
(bad)
mov
xor
imul
add
call
mov
cli
jmp
scas
int
xor
push
mov
push
div
or
sbb
rcl
add
add
pop
leave
add
sbb
lock
pop
mov
mov
add
pop
or
push
xor
inc
mov
fisub
daa
ins
je
xchg
into
mov
jecxz
jbe
fadd
sub
adc
xchg
sub
mov
and
call
out
mov
daa
repnz
nop
test
dec
cmp
inc
adc
addr16
fstp
cmps
retf
dec
xchg
lds
push
test
pop
(bad)
adc
sub
push
cli
sub
hlt
adc
stos
jmp
shl
rcl
fsub
dec
lahf
stos
mov
mov
int
fdivr
cmp
inc
or
sub
xor
jno
push
dec
pop
rol
adc
scas
ja
mov
inc
and
mov
xchg
and
mov
add
ins
push
popa
xchg
fs
test
mov
mov
data16
fldenv
call
jne
pop
fld
add
add
pop
xor
add
adc
pop
call
mov
in
out
add
sbb
push
jb
(bad)
jl
mov
mov
fucomp
xor
xor
lea
push
mov
pop
scas
sub
in
stc
push
(bad)
imul
ret
add
sub
adc
and
aad
add
and
push
xchg
sbb
fdivr
dec
loope
xor
pop
mov
mov
sbb
addr16
xchg
fiadd
and
ret
retf
push
test
sub
xor
outs
in
xchg
cmp
mov
mov
push
(bad)
pop
cld
inc
dec
fldcw
sbb
aas
push
cmc
inc
outs
cmp
mov
add
outs
into
fwait
cmp
push
inc
jbe
or
pop
mov
or
sub
rcl
test
call
mov
add
repnz
movs
or
not
shl
loopne
inc
jecxz
or
pop
sahf
fild
xor
leave
out
mov
fdivr
pop
push
adc
mov
mov
xchg
jge
les
dec
mov
pop
pop
or
scas
outs
mov
popf
dec
cmpxchg
retf
(bad)
cmp
pop
push
fimul
movs
int3
arpl
jne
mov
in
callw
adc
xchg
cli
dec
(bad)
aaa
outs
in
arpl
in
and
lea
mov
xor
dec
test
(bad)
aaa
(bad)
jo
mov
addr16
loop
mov
dec
xor
push
leave
cmp
retf
(bad)
(bad)
(bad)
(bad)
retf
jnp
addr16
stos
inc
add
lods
mov
out
test
mov
js
nop
or
xor
xor
mov
inc
xor
cmp
fst
cmps
repz
retf
movs
xor
add
mov
popf
jo
push
jnp
movs
xchg
adc
popf
fdivr
popa
cmps
and
sub
repz
add
fs
mov
add
cmp
sbb
gs
push
outs
sbb
pop
test
or
pop
dec
mov
jmp
adc
mov
call
and
cli
xchg
cmp
in
retf
mov
mov
mov
mov
add
cmc
adc
mov
add
ret
mov
pop
mov
ins
add
or
or
addr16
jbe
es
jmp
pop
push
fld
mov
sub
std
mov
mov
jmp
lds
mov
and
repz
xor
xchg
data16
aas
leave
inc
and
pop
je
fsub
mov
mov
jne
cmps
scas
fisttp
xor
movs
mov
repz
dec
mov
aaa
lods
movs
imul
jmp
fdivp
test
in
scas
xchg
movs
mov
sar
lea
outs
(bad)
dec
(bad)
aam
(bad)
xor
pop
loopne
dec
mov
xlat
pop
jecxz
cmp
js
lock
pop
out
cli
out
xchg
xor
xor
sti
inc
in
xor
or
or
out
push
jmp
cs
dec
mov
cmc
push
retf
jp
stc
and
push
cmps
sbb
clc
out
iret
add
aas
loopne
mov
test
adc
les
das
and
les
es
pusha
cmp
frstor
adc
jle
inc
femms
and
shl
and
xchg
es
aad
xchg
xchg
sub
gs
sub
cwde
xchg
loope
call
inc
aas
xchg
into
ds
add
mov
repnz
cmp
dec
loope
jno
ins
mov
and
sbb
jmp
and
sub
test
jbe
into
std
loope
pusha
(bad)
movs
adc
mov
sti
scas
pop
mov
fmulp
leave
test
pop
mov
lock
adc
push
xchg
stc
das
test
test
dec
fldpi
sbb
mov
or
and
fstp
dec
mov
sar
pop
xor
fucom
cwde
inc
mov
mov
inc
pop
and
out
arpl
arpl
mov
lahf
sbb
(bad)
and
retf
and
inc
repnz
sub
cmp
cmp
stc
xchg
(bad)
mov
ja
mov
imul
fsub
jns
sub
sahf
inc
clc
dec
rcl
movs
js
iret
aam
cmp
call
cli
jg
add
cld
sar
cld
pop
jbe
call
mov
ret
add
push
imul
mov
mov
mov
rcl
imul
les
movs
mov
cmp
cmp
sub
mov
mov
mov
cmp
mov
dec
xchg
xchg
sar
lods
mov
inc
pop
mov
or
movs
(bad)
ins
daa
and
pop
lods
inc
cmp
call
cwde
mov
mov
xchg
cmc
push
loop
sbb
scas
xor
sub
stc
(bad)
test
xor
dec
xchg
(bad)
xor
adc
or
or
repnz
fidiv
add
and
push
fwait
ret
pop
pop
ret
gs
inc
test
test
call
mov
or
shl
add
and
adc
mov
test
push
in
(bad)
stos
mov
enter
jne
mov
dec
dec
dec
xor
dec
lods
std
popf
sub
mov
add
mov
mov
cmp
sahf
outs
aas
adc
bound
test
xlat
jne
(bad)
cli
sub
idiv
cs
int
inc
hlt
enter
(bad)
jp
mov
clc
push
mov
mov
mov
(bad)
xchg
mov
in
xor
int
sbb
jo
mov
inc
jecxz
or
mov
outs
out
ret
ret
pop
aas
cmc
sbb
mov
xchg
out
adc
rcl
pop
fdivp
mov
(bad)
sub
pop
enter
xor
mov
js
fstp
pop
jae
dec
dec
ror
dec
test
fstp
adc
call
test
jae
dec
sbb
or
inc
(bad)
jecxz
pusha
xor
test
adc
lods
subps
mov
pop
push
rol
mov
and
hlt
push
out
cmp
mov
pop
jg
(bad)
lods
mov
cmp
lock
mov
push
fisub
in
xor
dec
ret
fs
mov
dec
mov
pop
std
or
mov
jmp
data16
jno
inc
xrelease
iret
add
push
xchg
in
in
push
mov
push
mov
sub
xchg
daa
ins
pop
movs
adc
sbb
add
shl
dec
jae
sub
sbb
inc
mov
pop
inc
jmp
(bad)
js
(bad)
xchg
sti
jl
int
mov
push
push
xor
je
pop
push
movs
emms
pop
push
js
enter
cmps
aaa
mov
pop
jns
(bad)
sbb
mov
add
add
dec
inc
xor
pop
(bad)
lods
and
daa
pop
and
adc
dec
sub
mov
loope
scas
inc
dec
pop
or
and
ins
jecxz
in
and
mov
call
shl
inc
mov
sbb
and
rcr
sahf
iret
push
popf
mov
or
sbb
sub
pop
in
clc
fld
dec
add
int3
leave
mov
and
call
add
sub
mov
rol
in
cmp
pop
gs
bound
sbb
and
ja
mov
sbb
push
lahf
xor
out
ds
jg
and
imul
fwait
outs
mov
add
xchg
dec
iret
bound
sbb
icebp
mov
movs
imul
cmp
jnp
stos
xchg
jecxz
push
out
je
faddp
mov
xor
cmp
leave
adc
dec
test
cmc
adc
sbb
cmp
pop
in
mov
jnp
clc
add
popa
xor
cwde
cld
test
data16
jg
mov
jp
cwde
pop
repz
cmp
outs
sbb
movs
lahf
jbe
xor
gs
and
cmc
idiv
ins
leave
add
push
clc
test
and
mov
ja
cwde
lock
test
daa
push
imul
out
push
xchg
imul
loopne
jecxz
arpl
mov
dec
jbe
dec
inc
pop
test
mov
loop
fstp
jo
dec
dec
mov
push
pop
out
xchg
aad
dec
lock
mov
jb
and
xchg
xchg
push
add
sbb
adc
into
mov
push
daa
dec
and
mov
iret
icebp
cmp
or
pushf
jecxz
int
sahf
aaa
(bad)
fild
pop
inc
popa
push
lock
repnz
aam
or
popf
sbb
jecxz
cld
das
and
mov
cmp
sbb
sbb
(bad)
test
mov
push
mov
adc
jp
adc
int3
scas
jmp
and
out
cmps
sbb
xchg
jne
ret
fcomp
mov
mov
mov
mov
loop
cmp
(bad)
or
(bad)
shl
mul
fld
jbe
sar
in
mov
jecxz
or
push
fisub
mov
dec
fisttp
sub
bound
inc
das
and
sbb
push
mov
lea
sub
mov
mov
(bad)
inc
call
jmp
jno
push
stc
(bad)
pop
sbb
stos
xchg
das
std
mov
inc
stc
leave
popf
add
bound
dec
shl
test
add
ficom
outs
add
jns
inc
daa
xor
int3
stos
data16
ret
mov
xor
fst
adc
mov
popa
xchg
and
sbb
mov
popf
mov
fdiv
cwde
or
mov
xchg
jmp
pop
cwde
sbb
adc
repz
and
repnz
xor
pop
enter
fdiv
fs
sub
xchg
lods
dec
lfs
pop
rol
sahf
nop
xchg
scas
dec
out
loope
popf
or
fnstenv
call
sub
movs
push
cmp
pop
(bad)
aam
mov
xchg
xor
shl
in
daa
fsubr
add
jae
adc
xor
mov
test
add
leave
jo
mov
jecxz
aaa
in
lock
sub
cmp
xchg
sbb
fidiv
sbb
add
and
or
mov
push
xor
cli
mov
dec
jmp
dec
fcomp
and
pushf
jo
mov
jle
or
leave
adc
repz
frstor
mov
jmp
pop
movs
fs
or
mov
xchg
or
das
aam
fdivr
mov
jb
movups
and
test
(bad)
dec
std
ins
add
div
int3
sbb
and
mov
add
push
mov
mov
push
pop
icebp
xchg
inc
mov
xor
bound
cs
dec
push
xchg
cs
addr16
jae
dec
jae
sub
xor
xchg
sub
pop
daa
add
xchg
mov
dec
dec
jp
xchg
dec
mov
or
push
scas
jnp
xchg
cs
push
fcomp
dec
(bad)
jae
js
xchg
xor
cmc
pop
pop
sbb
sbb
pop
in
jno
pusha
mov
out
shr
mov
cs
mov
outs
jmp
(bad)
jmp
dec
cli
pusha
retf
fyl2x
repnz
outs
call
xor
xor
js
jae
loopne
inc
(bad)
(bad)
adc
or
xchg
mov
push
scas
cmp
mov
repnz
frstor
aam
dec
shr
dec
jne
inc
lea
sbb
dec
aam
xchg
enter
js
mov
push
ds
and
adc
in
adc
dec
sbb
mov
jno
out
sbb
(bad)
in
retf
test
jns
(bad)
cmp
scas
retf
pop
arpl
imul
jae
adc
mov
sub
xlat
cmc
rcl
fadd
push
test
out
xor
mov
out
mov
pop
sub
adc
add
in
fnstcw
pop
pop
cld
dec
cmp
fstp
icebp
cmp
and
or
add
cmp
fstp
mov
(bad)
xor
ins
fs
dec
jg
xchg
sbb
jnp
jb
dec
movs
lods
sub
and
mov
je
ret
aad
in
and
(bad)
cs
or
sbb
les
inc
mov
and
mov
pop
aad
add
ror
pop
mov
xlat
leave
repz
dec
out
data16
cmp
inc
out
dec
jo
leave
adc
std
sub
out
xchg
es
push
add
inc
lea
retf
retf
loop
push
push
frstor
jb
lahf
scas
inc
(bad)
into
xchg
aaa
mov
pop
test
shl
(bad)
dec
mov
out
mov
clc
dec
(bad)
nop
cmp
fsubr
js
push
into
adc
nop
imul
pop
ds
jmp
inc
mov
leave
mov
mov
push
adc
mov
pop
push
cmp
sub
mov
or
not
ret
jbe
adc
(bad)
dec
push
jmp
pop
cmp
idiv
cdq
mov
out
test
(bad)
mov
jo
sbb
mov
std
popf
pop
sub
sbb
js
arpl
xchg
shr
cmp
ins
js
out
scas
lods
pop
(bad)
sub
je
sbb
inc
neg
jg
mov
or
inc
push
nop
or
imul
inc
lods
inc
mov
ret
pop
sar
(bad)
popf
outs
jbe
in
js
push
je
jge
sbb
cli
pop
into
push
xor
js
aaa
pop
mov
jecxz
cmp
stos
addr16
lahf
mov
mov
push
cld
sbb
push
jbe
scas
scas
or
adc
cmps
mov
outs
icebp
mov
shl
cmc
pusha
ins
add
sbb
adc
retf
call
out
xchg
push
(bad)
jle
loop
imul
test
pop
mov
repz
enter
push
mov
(bad)
xchg
mov
fwait
adc
sub
add
xchg
dec
sahf
adc
and
and
cmp
xchg
aad
bound
pop
xor
pop
push
pop
ret
pop
dec
push
sbb
xchg
pop
and
in
cli
(bad)
pop
int3
or
dec
cmps
loopne
int3
shr
(bad)
mov
and
clc
inc
or
(bad)
sbb
xchg
ja
mov
and
add
fs
jo
pop
scas
xor
sahf
sub
(bad)
call
shl
sbb
dec
sar
in
fcom
(bad)
xor
std
cmc
mov
call
mov
push
xchg
cmp
inc
jmp
(bad)
cmc
xor
sub
push
mov
ja
jns
repnz
dec
adc
hlt
cmp
(bad)
cld
pusha
fidivr
dec
mov
pop
stos
int
inc
push
mov
jl
and
cmc
fidiv
mov
popa
mov
mov
add
sbb
mov
lds
adc
movs
cmp
test
outs
out
dec
push
xor
xor
retf
pop
sub
hlt
mov
scas
mov
or
in
test
or
sbb
cmp
or
and
xchg
fidiv
jae
xor
ret
sbb
cmp
xchg
push
xor
jns
enter
add
push
add
adc
(bad)
jbe
ds
sub
retf
add
movs
pop
jae
adc
fcmovu
mov
sbb
shl
sub
jge
int
and
jb
retf
cmc
std
xchg
in
lahf
inc
leave
inc
sub
inc
nop
jmp
imul
jle
loop
dec
adc
rol
mov
jge
mov
(bad)
lahf
cmp
(bad)
aad
nop
cld
jb
or
jbe
retf
lods
rcl
inc
(bad)
retf
jne
pushf
call
ret
or
xor
daa
or
outs
jle
adc
ins
fs
daa
ins
out
push
fld
gs
popa
arpl
jo
stos
and
or
ins
cs
mov
xorps
mov
xchg
mov
push
jae
xor
mov
lods
test
inc
adc
dec
call
outs
jl
call
jmp
fild
xor
push
cwde
adc
mov
mov
test
dec
push
dec
and
add
shr
scas
popa
jmp
ret
es
inc
and
mov
xor
push
inc
fisttp
(bad)
int
cmp
call
cmp
dec
push
push
fwait
push
mov
pop
fild
dec
mov
dec
pushf
sub
add
js
fimul
inc
mov
test
sub
aaa
aaa
bound
and
push
lock
fistp
mov
push
call
or
inc
fadd
sahf
pop
jmp
jecxz
rcl
pop
xor
add
push
push
mov
popf
sub
lahf
in
or
mov
sbb
mov
sub
xchg
or
lds
cmp
fcomp
and
fwait
mov
sbb
lock
mov
pop
loope
inc
outs
jns
ret
adc
lods
adc
fadd
(bad)
cwde
and
jns
pop
push
dec
sbb
pop
pop
adc
out
ficomp
or
inc
xor
sub
pop
mov
add
mov
cwde
xchg
test
rcl
(bad)
jo
push
leave
mov
fidivr
ret
push
(bad)
xchg
std
cmp
add
sbb
loop
push
xlat
das
(bad)
cli
add
fucomp
inc
pop
xchg
mov
mov
hlt
leave
out
(bad)
cmp
add
mov
rcl
push
sbb
cmp
rcr
push
jae
or
mov
inc
inc
jbe
push
icebp
mov
(bad)
out
adc
xchg
pop
mov
cmps
adc
and
mov
add
add
push
xchg
jo
ins
pop
jo
dec
jo
pop
ss
nop
rol
lods
jns
popf
or
sbb
ret
fwait
and
test
mov
or
jg
inc
dec
or
aaa
sar
jb
mov
fnstenv
aaa
lock
inc
or
sbb
test
call
out
jge
add
outs
or
sub
(bad)
cdq
jbe
dec
sahf
fwait
pusha
inc
adc
fadd
adc
pop
fldcw
rcr
mov
out
rcl
out
cmp
jmp
inc
mov
clc
pop
repz
inc
sbb
jp
repz
cmp
rol
pop
and
cmp
gs
push
es
xchg
fadd
outs
fadd
mov
bound
mov
jnp
pop
or
push
sahf
fsub
in
test
xor
mov
pop
(bad)
scas
(bad)
ss
xor
adc
push
jbe
wrmsr
xchg
xchg
mov
rol
or
lods
into
add
pop
ss
xor
pop
push
leave
mov
xchg
and
in
cmovs
sub
cmp
popa
dec
cmp
mov
(bad)
jecxz
cmp
cmps
movs
sbb
mov
lods
call
mov
retf
cmps
mov
clc
pop
call
dec
(bad)
int3
fnstcw
jno
or
inc
inc
(bad)
loopne
or
add
cmc
mov
sub
call
sar
popf
push
test
test
js
mov
inc
and
sub
jle
add
lods
ins
mov
and
and
sub
rcl
fs
or
inc
push
js
xor
and
xor
test
mov
pop
mov
ja
jbe
xchg
mov
js
outs
mov
popa
leave
mov
xor
push
mov
xchg
inc
adc
adc
cmps
ss
pop
push
icebp
lock
push
xchg
fdiv
cmp
js
pop
into
pushf
bound
mov
mov
(bad)
mov
xor
push
dec
sar
and
xlat
push
test
pop
fiadd
mov
scas
dec
mov
push
cmp
ja
sbb
ins
and
aas
popf
inc
in
sbb
fbld
add
ret
test
pop
pop
std
retf
lods
sbb
repnz
scas
sar
mov
lahf
aaa
inc
dec
fldenv
fiadd
sbb
cmp
mov
mov
shl
bound
cmp
push
pop
dec
pop
mov
mul
gs
mov
fdivr
lock
mov
adc
xchg
adc
in
or
retf
pop
(bad)
outs
pop
xor
or
mov
pop
sbb
(bad)
in
fld
lock
(bad)
lods
movs
jmp
adc
inc
cdq
aad
add
mov
adc
ss
shr
adc
fsubr
repnz
dec
enter
mov
test
int
out
pop
cmp
gs
cmps
pop
pop
(bad)
inc
int3
and
fistp
sbb
push
cs
inc
(bad)
jmp
mov
adc
adc
pop
add
loope
xchg
jmp
dec
(bad)
jp
xor
pop
pop
adc
xchg
jno
cmc
ds
inc
int
fucomip
lds
jle
inc
mov
dec
pop
xchg
(bad)
and
push
sub
adc
inc
jl
dec
mov
dec
daa
lock
pop
xchg
daa
js
retf
cmp
popa
loopne
pop
cmp
sub
adc
(bad)
dec
fs
into
or
add
mov
inc
fistp
mul
not
ins
(bad)
lahf
adc
pusha
(bad)
mov
jmp
stc
adc
sar
mov
out
sbb
and
xor
sbb
mov
add
scas
jmp
je
lds
push
and
(bad)
(bad)
rcl
push
jne
xchg
pop
test
je
ss
cmp
fild
mov
and
ret
sub
shl
cmp
or
out
jae
sbb
icebp
mov
ja
jne
bound
inc
push
add
dec
cs
pop
in
push
je
push
in
push
pop
lods
cli
(bad)
(bad)
in
mov
je
sbb
cs
in
xchg
and
mov
xchg
out
xchg
push
fst
jnp
(bad)
fstp
mov
inc
neg
adc
push
mov
loope
mov
aaa
ret
lahf
repz
hlt
push
jne
and
push
gs
shr
xchg
mov
into
inc
aad
mov
repnz
into
dec
iret
adc
clc
xor
push
les
and
add
push
jle
mov
sbb
cmps
je
mov
add
sbb
jg
jbe
push
stos
jnp
pop
stos
rcl
lock
mov
adc
pop
(bad)
mov
outs
das
mov
mov
in
cmp
or
sub
call
xor
add
leave
fbld
mov
xchg
lods
popf
ja
pop
sbb
sar
not
cwde
lds
sbb
ja
iret
sahf
add
in
mov
jmp
call
or
out
test
(bad)
fld
rcr
push
aaa
call
loopne
jg
call
or
out
leave
mov
loopne
xchg
fcmovne
scas
scas
mov
cmp
cmp
dec
rcl
mov
jecxz
cmp
shl
mov
fnstenv
mov
mov
jl
sub
inc
adc
dec
sub
into
sub
repnz
add
cmp
mov
mov
add
out
xchg
clc
add
sbb
stc
push
leave
mov
(bad)
xchg
xchg
inc
imul
out
pop
sbb
fmul
xchg
fst
lea
inc
repnz
fbstp
mov
xchg
fadd
cwde
dec
ror
jns
ss
shl
push
xor
pop
or
push
adc
movs
out
and
xor
push
ds
sbb
iret
dec
dec
lods
cmp
push
outs
hlt
leave
pop
xchg
adc
movs
jl
inc
fisttp
push
mov
sbb
mov
sub
cmps
and
sti
ins
jl
dec
scas
mov
push
retf
cmp
rcr
cmp
mov
mov
sti
mov
ja
jo
push
imul
ds
dec
mov
jp
cmp
mov
test
imul
jbe
call
pop
mov
push
or
les
pop
sbb
mov
lods
in
xor
bound
test
loope
mov
xor
cmp
mov
mov
xchg
ds
enter
add
adc
adc
idiv
xchg
aad
mov
jge
or
sbb
mov
mov
lds
xor
mov
cld
mov
fist
mov
pop
scas
cmp
adc
push
jno
xor
dec
xchg
xchg
les
add
mov
and
cld
(bad)
xchg
dec
lock
xchg
out
imul
int3
popa
jle
cli
je
scas
cs
int3
and
jp
hlt
outs
cli
and
inc
add
data16
aas
ret
push
sub
ret
rcr
repnz
dec
pop
es
retf
and
sbb
(bad)
fistp
aaa
jbe
mov
ins
push
fldenv
shr
jns
xor
repnz
outs
dec
mov
fcomp
scas
and
std
lock
mov
lods
xchg
lock
scas
mov
aad
fs
push
mov
push
dec
mov
jmp
cmp
cli
push
dec
retf
sub
inc
cwde
ret
lahf
jb
dec
xlat
xchg
pop
enter
fbld
pop
jmp
int3
jle
in
lock
xchg
shl
jo
movs
mov
ret
adc
adc
sub
jo
add
add
dec
scas
int
pusha
push
adc
push
(bad)
mov
mov
loopne
lods
(bad)
fcom
cdq
das
dec
out
retf
das
mov
mov
movhps
mov
sub
adc
out
je
jl
adc
push
add
popa
cs
adc
repnz
scas
mov
test
mov
push
pop
inc
mov
ins
mov
ins
inc
outs
ja
nop
in
ja
sub
test
fmul
dec
jg
mov
jmp
in
test
or
and
ja
pcmpeqd
sub
and
dec
mov
sahf
mov
pop
inc
movs
pop
or
mov
xor
(bad)
xchg
movaps
lock
push
das
imul
jle
and
sbb
xor
es
xchg
mov
hlt
dec
push
cmc
in
push
aad
mov
or
mov
or
mov
jae
jns
add
call
stc
add
lods
and
mov
call
(bad)
lea
into
and
and
fs
leave
fld
adc
mov
rcr
cmp
jns
mov
aaa
dec
mov
pop
inc
das
dec
mov
jmp
outs
mov
add
mov
xchg
push
fld
inc
fdivr
gs
xor
popf
jno
ds
xchg
into
out
sub
jg
jmp
inc
mov
jg
mov
push
test
xchg
loope
cs
cmp
push
sub
sbb
or
ja
loop
shl
or
push
fidivr
dec
(bad)
jae
adc
mov
dec
hlt
and
test
mov
ud0
loope
out
xlat
leave
fs
push
dec
data16
add
pop
and
loopne
ror
arpl
in
imul
ins
fild
dec
cmc
fstp
pop
dec
xor
inc
lods
pop
add
outs
stc
into
loop
ret
cdq
iret
inc
sbb
icebp
(bad)
ins
pop
jnp
and
fs
xchg
fdivr
add
sbb
loopne
pop
add
add
mov
(bad)
fsub
shl
fs
fwait
mov
or
mov
pusha
(bad)
test
jbe
lods
fld
push
dec
in
mov
jnp
pop
inc
mov
dec
mov
sbb
adc
(bad)
in
push
cmp
jmp
test
push
(bad)
loope
test
jae
jns
aaa
sub
ret
retf
ins
gs
jg
fwait
pusha
ret
xchg
movs
or
test
in
stc
sub
fwait
xchg
fnstenv
aam
(bad)
and
sub
add
lds
shr
cli
shr
test
push
push
shl
adc
push
xlat
pushf
fwait
xchg
mov
and
cmp
pusha
and
int
pop
les
popa
jno
iret
adc
jmp
inc
mov
scas
push
push
icebp
loop
pop
test
jge
jle
pop
push
jb
mov
xor
test
aas
mov
inc
cmp
push
jecxz
(bad)
js
clc
pop
sbb
or
mov
mov
push
mov
fidivr
cs
jmp
cmps
ror
xor
(bad)
push
adc
dec
sub
fsubr
scas
cmp
into
aam
pusha
ror
xchg
nop
and
nop
sub
mov
les
add
shl
push
and
jns
pusha
sbb
adc
retf
inc
je
ins
loopne
push
loope
sub
mov
out
push
mov
mov
shl
inc
fstp
add
inc
or
mov
push
fdivr
mov
xchg
cmp
pop
call
pop
bnd
(bad)
(bad)
fild
out
test
push
push
ss
es
xlat
ins
(bad)
addr16
daa
mov
xchg
jmp
out
inc
enter
xchg
jecxz
outs
call
pop
or
fs
stos
cdq
jnp
mov
(bad)
ror
(bad)
jmp
pop
inc
ret
int3
push
retf
dec
sbb
cli
mov
loope
das
shl
fs
xor
lods
(bad)
into
iret
das
int3
pop
rcl
mov
dec
and
pop
cli
(bad)
mov
dec
outs
rcl
das
bound
stc
into
jecxz
scas
adc
mov
neg
mov
outs
xor
pop
call
ds
scas
into
push
jmp
test
iret
xor
xchg
or
jl
push
(bad)
imul
shl
les
sbb
jg
mov
or
daa
inc
js
js
lock
fldcw
test
mov
fstp
shl
out
js
loop
xor
inc
cmps
jge
dec
fdivr
jmp
push
call
adc
xlat
inc
push
leave
dec
enter
std
std
inc
aaa
(bad)
add
mov
pusha
daa
mov
cmp
dec
mov
bound
add
aas
test
ja
add
movs
test
push
dec
clc
in
or
lea
jns
and
pop
outs
ret
stos
pop
hlt
icebp
inc
lahf
dec
fs
and
test
jge
add
xor
lea
sbb
sub
and
in
ins
mov
mov
loop
jb
inc
or
mov
(bad)
add
in
dec
sub
rol
int3
test
sahf
inc
push
jnp
sub
clc
sbb
rcl
pop
lahf
dec
lods
sub
ror
cld
mov
sub
jo
leave
fcom
hlt
xchg
xor
xor
sbb
fild
lock
out
ins
jne
sbb
call
std
dec
cmp
fidiv
inc
adc
ins
inc
popf
add
inc
sub
and
fwait
cmc
aad
mov
jl
out
(bad)
jns
dec
or
in
mov
jbe
mov
pop
mov
inc
cli
sub
leave
cli
jne
loopne
jmp
lds
cmps
xchg
cmp
fadd
(bad)
sbb
dec
mov
mov
ror
ins
iret
mov
iret
outs
inc
mov
(bad)
bnd
inc
stc
mov
push
pop
jge
inc
jecxz
push
xchg
nop
or
fisub
out
inc
push
mov
arpl
sbb
and
jns
cmps
and
push
xchg
dec
adc
mov
sub
dec
cmp
mov
nop
call
loopne
cs
xchg
rcl
jb
sub
mov
dec
xchg
(bad)
ins
ins
jbe
popa
and
call
stos
push
cs
jae
dec
arpl
cli
dec
mov
jle
or
xor
sbb
add
fsubr
ret
cmp
sub
(bad)
xchg
xor
out
or
mov
je
adc
push
and
cmp
jl
ja
pop
adc
and
adc
mov
call
xor
mov
and
dec
(bad)
adc
dec
ins
(bad)
(bad)
loop
lahf
jecxz
fs
add
mov
sti
mov
imul
inc
pop
scas
aas
jno
adc
(bad)
jle
dec
xchg
loop
jl
lock
in
das
mov
mov
push
stos
sbb
outs
xchg
retf
xor
jns
dec
or
push
dec
js
data16
imul
neg
sbb
neg
mov
jmp
add
ja
loop
ins
jnp
sbb
nop
rcl
es
out
xchg
xchg
pop
ins
out
in
call
sahf
xchg
les
or
test
jne
inc
cli
pushf
out
pop
mov
or
(bad)
test
loopne
push
and
jg
pushf
ret
sub
mov
xchg
pop
sbb
pop
add
test
xlat
outs
mov
push
adc
loop
mov
dec
psubusb
sbb
std
fwait
pushf
popa
jns
jns
aaa
pop
mov
push
push
inc
lock
push
jge
or
idiv
jns
repz
ret
dec
pop
mov
mov
xchg
mov
mov
sar
cmp
mov
lods
div
cdq
push
sub
sub
mov
addr16
xor
push
sbb
shl
scas
jae
lods
scas
imul
repz
test
xlat
outs
enter
(bad)
test
inc
cmp
pusha
cmp
add
mov
test
and
dec
xor
out
ja
pop
rcl
mov
stc
pop
shl
push
mov
xchg
xchg
rcr
mov
or
xchg
(bad)
jbe
lahf
sbb
jmp
dec
leave
cwde
dec
xor
mov
and
jns
es
pop
and
pushf
or
mov
xor
cmp
add
dec
dec
faddp
cli
mov
retf
cmp
xchg
inc
add
push
test
les
test
push
pop
and
jl
aaa
inc
adc
mov
lock
push
mov
or
int3
repnz
lock
pop
dec
jl
xor
add
pusha
retf
shl
sbb
push
fcom
repz
sbb
fwait
xchg
cdq
mov
fistp
and
les
call
cdq
call
(bad)
mov
ss
rcr
cmc
fst
retf
loope
imul
loop
mov
int
adc
sbb
scas
dec
jmp
(bad)
scas
dec
ficom
shl
cmp
iret
adc
imul
pop
loop
jne
or
and
scas
or
push
push
jb
mov
pop
xor
enter
sub
lock
adc
sbb
out
stos
aad
daa
cmp
pushf
inc
(bad)
jmp
fldl2t
fbstp
(bad)
stos
mov
(bad)
gs
xchg
push
sub
int
mov
dec
sti
js
ss
dec
hlt
jnp
std
mov
pop
outs
fsub
and
stos
sub
jb
(bad)
jns
mov
mov
lock
mov
scas
push
sbb
lods
loop
gs
les
divps
int
loope
loope
sbb
(bad)
adc
call
dec
popa
(bad)
daa
fisubr
xor
push
cmp
cmp
leave
fstp
cli
gs
shr
shl
cmp
and
out
or
mov
jle
push
repnz
(bad)
mov
xor
cmp
lahf
jp
dec
nop
movs
inc
mov
std
mov
jns
call
lods
inc
sub
fadd
and
imul
xchg
cli
mov
fdivr
lods
test
ror
pop
stos
dec
ror
cmp
std
les
add
push
scas
adc
cmp
std
jno
(bad)
mov
mov
je
xor
push
cli
sub
(bad)
stos
lock
out
(bad)
cli
dec
or
mov
popa
in
inc
cmovs
jo
or
aad
ja
xchg
out
xor
(bad)
fild
and
or
icebp
add
out
jl
push
imul
loop
ret
and
cwde
add
dec
lfs
xor
mov
push
sbb
push
xor
stos
in
xor
loop
repnz
aam
dec
pusha
repnz
jmp
jmp
ficom
lods
ror
icebp
xchg
push
repz
lods
pusha
adc
jne
int3
movs
jo
dec
adc
inc
xchg
jg
sbb
fs
mov
xchg
add
push
or
mov
popf
rcl
cmp
dec
inc
stos
mov
and
cmps
repnz
(bad)
push
repz
mov
inc
jne
pop
(bad)
push
test
jns
lahf
aas
iret
mov
mov
in
cdq
cmc
push
imul
cmps
pusha
dec
aam
repnz
mov
ror
scas
out
sub
mov
scas
or
xchg
mov
sbb
test
int
js
in
xchg
mov
mov
imul
mov
push
gs
xchg
mov
xor
outs
mov
or
xor
cmp
mov
fcomp
dec
sar
adc
stos
xor
idiv
pop
xchg
cmp
fcmovnu
fnstenv
push
dec
movs
jg
and
scas
int
pop
dec
and
add
ins
mov
(bad)
fisub
jae
fistp
test
hlt
add
das
push
pop
pop
pop
addr16
xchg
dec
jg
mov
lock
(bad)
(bad)
dec
pop
adc
scas
jmp
int3
js
lea
retf
mov
xlat
adc
sub
jmp
(bad)
cmp
ins
xchg
sub
fs
es
frstor
xchg
sbb
and
pop
adc
sbb
aad
sub
std
mov
push
je
sbb
shl
push
(bad)
(bad)
or
xor
pop
imul
adc
rol
scas
xor
int3
add
mov
jge
inc
aaa
push
cmp
mov
inc
xor
sub
jge
pop
ins
daa
cmp
or
pop
fidivr
imul
or
retf
div
xchg
repnz
repnz
ret
nop
ins
sub
shl
pop
or
popa
xlat
cwde
shr
(bad)
sti
aas
jbe
int
sub
ds
and
stos
and
(bad)
fld
xchg
idiv
bound
lods
xchg
retf
into
cmp
or
int3
jg
inc
call
pop
stos
ds
call
mov
adc
xor
scas
add
xchg
or
dec
sbb
stos
dec
outs
xlat
out
push
add
inc
ins
add
fisubr
ror
mov
aas
cdq
cmp
pop
jmp
or
jns
mov
cdq
repz
mov
ret
pop
push
aas
repnz
or
out
mov
adc
push
cmp
or
call
imul
into
and
mov
push
add
push
xor
jbe
(bad)
sbb
out
inc
add
jb
inc
add
mov
jbe
push
mov
ficomp
aam
outs
sub
inc
mov
fisttp
(bad)
rcr
out
hlt
mov
shl
es
fwait
ins
xchg
adc
xchg
pop
and
(bad)
mov
cmp
and
dec
lods
mov
cld
or
repnz
dec
pop
cwde
ja
jo
jmp
js
pop
lods
sub
xchg
sbb
pop
outs
sar
out
jp
cmps
push
cmp
iret
out
xchg
add
jmp
sbb
test
add
sub
popf
aad
xchg
test
adc
call
mov
mov
das
es
xchg
pusha
sbb
jp
in
jmp
test
xchg
sbb
cmps
mov
xchg
lds
jae
popa
fwait
ret
pop
les
test
test
push
jmp
mov
jbe
cmp
(bad)
mov
push
pop
jmp
or
daa
push
adc
inc
jno
sub
cli
enter
rcl
xor
jnp
loopne
sbb
call
(bad)
sub
or
add
mov
add
mov
mov
mov
xor
mov
mov
jecxz
scas
xchg
clc
cs
stc
pusha
xchg
cmpxchg
out
pushf
es
fnstenv
ret
(bad)
lods
popa
sbb
lock
test
cdq
out
mov
repz
in
and
and
loopne
mov
or
(bad)
test
jae
sahf
inc
iret
cmps
mov
or
pop
push
out
jns
xchg
not
pop
movs
xchg
mov
jno
sbb
pop
call
or
(bad)
mov
nop
sbb
dec
xchg
idiv
and
stc
push
pop
or
(bad)
das
mov
aaa
cli
jo
jg
dec
mov
sbb
and
dec
call
lods
sub
mov
mov
das
int
stos
dec
repz
cwde
call
or
mov
fistp
pop
pop
fsub
sub
gs
push
jge
in
nop
in
pusha
push
scas
xchg
movs
(bad)
(bad)
adc
fs
inc
adc
fld
jmp
fdivr
mov
dec
ins
arpl
add
(bad)
sub
mov
or
jo
pushf
mov
cmc
jl
inc
mov
jl
mov
in
push
mov
int
popf
mov
jb
lds
pop
lods
cmp
stos
in
mov
stos
xchg
out
cmp
mov
cmps
xchg
cmp
cdq
(bad)
jae
std
(bad)
dec
sbb
(bad)
mov
mov
fst
mov
call
jmp
add
repnz
inc
mov
pop
movs
clc
shr
dec
mov
cmps
xor
cmp
cmp
adc
pop
daa
jb
jl
hlt
xchg
ss
pop
sahf
jl
int3
das
dec
mov
pop
xchg
fimul
ins
dec
inc
in
je
cmp
pushf
in
jecxz
imul
nop
scas
dec
lds
inc
imul
nop
gs
or
pop
sbb
ds
push
mov
add
xor
mov
dec
sbb
or
lock
sub
mov
mov
inc
pop
mov
push
and
add
retf
retf
shl
sbb
cdq
dec
fidivr
pushw
and
push
(bad)
gs
repz
cmp
sub
in
fild
xchg
(bad)
retf
xor
or
adc
aaa
pop
and
bound
sbb
mov
and
add
and
lods
mov
cld
repnz
or
mov
popa
in
repnz
and
ret
stos
imul
pop
out
inc
or
mov
push
mov
in
add
or
mov
and
es
(bad)
inc
shl
sub
rcl
(bad)
pop
(bad)
push
test
pop
dec
stos
cs
sbb
push
push
clc
stos
les
ds
push
ficom
rcr
cmp
sub
dec
cs
(bad)
call
xor
loopne
xchg
or
mov
cmps
cmp
es
xor
push
inc
push
xchg
test
test
hlt
jle
inc
jns
fs
push
test
enter
add
repnz
cdq
jns
push
into
cld
fdivp
xchg
aaa
scas
ins
pushf
jle
pop
and
fcomp
inc
sbb
xor
adc
mov
pop
xor
inc
cmp
xchg
out
aam
popa
inc
les
cld
jmp
call
xchg
xchg
jne
and
pop
sub
xchg
mov
jno
mov
ds
sbb
adc
rol
mov
pushf
add
inc
mov
and
cli
add
in
dec
push
sbb
ret
std
cmp
xor
fisubr
pop
stos
mov
push
xor
addr16
mov
jns
push
out
ret
sub
xchg
add
rol
outs
dec
dec
mov
mov
push
push
(bad)
pop
mov
mov
jno
pusha
mov
pop
and
sbb
leave
lock
cdq
stc
mov
mov
mov
sub
cmps
mov
dec
lods
test
or
inc
lods
scas
in
push
int3
push
push
dec
idiv
xchg
bsr
lock
cmp
mov
cs
pop
mov
mov
cmps
cmc
xor
jnp
cdq
push
sti
sbb
add
(bad)
rol
lods
dec
out
inc
push
in
fnsave
mov
scas
clc
fstp
out
add
sub
(bad)
cdq
cmp
jns
loop
fstp
ja
sbb
lods
jecxz
scas
xor
push
xor
imul
push
xchg
hlt
mov
lea
das
push
add
repz
in
test
inc
inc
mov
aam
mov
sbb
mov
xor
ja
inc
sti
stos
fucomp
fdivr
add
or
mov
repnz
dec
out
mov
lods
mov
sahf
mov
(bad)
and
dec
retf
push
mov
xor
pop
das
icebp
cs
mov
and
xor
in
cwde
rcr
outs
jecxz
jns
dec
cmp
and
pop
mov
call
imul
outs
inc
out
imul
outs
sub
sub
out
js
out
jne
mov
mov
call
dec
dec
rol
mov
mov
cs
jno
aas
push
jmp
jl
lods
lea
pop
pop
and
or
adc
int
mov
in
aam
cmp
adc
sub
retf
mov
sub
(bad)
ror
lods
sahf
loope
(bad)
in
mov
popf
lock
pop
mov
push
outs
pop
jbe
movs
retf
cmp
dec
stos
dec
cdq
imul
stos
sti
push
outs
ss
rol
push
jo
dec
dec
mov
enter
mov
mov
hlt
sahf
jge
rol
mov
hlt
cmc
stc
jns
aad
jbe
and
std
xlat
push
stc
jmp
mov
push
jmp
or
fisubr
mov
fdivp
mov
cmp
popa
sahf
nop
out
(bad)
out
dec
adc
adc
sbb
iret
inc
ss
sbb
and
js
aaa
mov
mov
mov
push
sbb
jp
out
lea
in
mov
dec
es
jle
inc
ror
jnp
fs
fwait
xor
shl
call
sbb
push
iret
je
or
mov
pop
cmp
fnstcw
shr
mov
sti
push
xchg
call
icebp
sar
mov
dec
std
mov
ror
scas
or
mov
jp
jno
adc
call
sbb
pop
jo
gs
mov
mov
test
fwait
cs
pop
aas
dec
mov
shl
pusha
repnz
outs
ins
sbb
and
int3
popa
mov
push
xchg
jo
cmp
push
jg
jl
jl
hlt
jb
setae
sub
cmp
popf
pushf
movs
ficomp
enter
dec
nop
jne
call
jnp
popf
and
mov
dec
retf
jl
adc
and
into
push
dec
pop
pushf
cmp
add
cmp
vpmulhw
outs
pop
xchg
retf
push
(bad)
mov
aad
mov
(bad)
addr16
pop
test
sbb
push
jl
test
sub
lock
pop
jne
(bad)
test
lea
cdq
dec
in
adc
xor
fcmovnbe
stos
pop
mov
out
outs
pop
add
pop
inc
out
mov
add
pop
popf
push
out
push
int
pop
test
in
in
rcr
leave
ret
sbb
xchg
push
movs
mov
ret
inc
cmps
xchg
fisub
repz
pop
jnp
mov
adc
xor
add
call
sti
jmp
sub
sar
xchg
(bad)
je
rcl
dec
test
loopne
push
(bad)
jl
mov
mov
inc
mov
mov
dec
ss
mov
and
inc
data16
outs
and
(bad)
rcr
dec
clc
pop
fstp
xchg
ret
pushf
std
and
js
out
sbb
xchg
test
loopne
ret
stc
mov
adc
sete
je
movs
pop
ficomp
mov
jge
cmp
cwde
cmp
mov
xchg
dec
aas
fistp
mov
iret
dec
in
mov
inc
retf
ret
xlat
or
sbb
shl
jb
xchg
jmp
mov
and
dec
and
push
dec
xchg
scas
or
mov
jno
lock
cdq
cmp
daa
ins
in
pushf
sub
aad
push
pushw
popf
cmp
nop
aad
out
push
jle
stos
mov
int
jno
cmps
pop
fwait
adc
stos
push
ret
xchg
mov
mov
and
and
icebp
ss
mov
jge
out
mov
lods
jmp
xor
mov
cmps
sbb
or
mov
xor
sub
adc
(bad)
mov
loop
sub
popa
iret
push
inc
(bad)
inc
aam
mov
pop
into
sbb
jbe
pop
or
enter
jnp
adc
nop
arpl
popa
jnp
sub
mov
imul
pop
leave
push
arpl
xor
jp
or
mov
xchg
add
jnp
inc
cmps
sar
mov
pop
cs
xchg
pxor
addr16
adc
pushf
repnz
enter
rol
dec
bound
inc
aam
in
imul
inc
cmp
add
(bad)
ja
jb
stos
ret
mov
ins
into
fmul
sub
test
and
xor
pop
fdivr
inc
inc
pop
ret
mov
or
scas
mov
shr
jnp
idiv
dec
enter
mov
aas
jno
ret
cmps
mov
ins
test
cmp
mov
xrelease
jo
sbb
or
es
je
jmp
or
cli
ja
pop
pop
pop
fisub
cmps
mov
gs
fidivr
test
mov
adc
push
(bad)
sti
mov
stos
xchg
das
pop
adc
xor
jg
data16
dec
pop
push
daa
and
pusha
add
adc
leave
cmp
fdivr
leave
enter
scas
mov
jmp
icebp
add
lahf
cmp
jb
mov
xchg
sub
fwait
add
lds
repnz
ja
xchg
arpl
(bad)
arpl
cmp
repnz
mov
pop
les
cmps
(bad)
sti
movs
push
sub
and
mov
jae
rcl
sar
test
call
ins
out
scas
movs
div
shr
mov
mov
ins
jmp
adc
rcl
push
retf
popf
adc
lock
nop
in
in
add
pop
mov
gs
hlt
push
fstp
mov
and
pop
outs
cmp
mov
xor
nop
cmp
and
gs
call
xlat
or
stc
jmp
leave
ds
push
int
test
mov
pop
hlt
jl
hlt
inc
xor
jg
inc
or
pop
mov
mov
fisubr
test
mov
sub
and
jle
jnp
bnd
sub
sbb
mov
in
sub
push
test
test
pop
call
push
lea
imul
dec
cmp
aad
jb
cmp
aam
cmps
add
arpl
add
shr
xor
mov
retf
fcom
stos
iret
adc
aam
push
push
mov
movs
int
inc
out
fwait
stc
fwait
xor
adc
xchg
cwde
dec
push
les
add
adc
push
jne
test
sub
inc
retf
dec
cwde
mov
jl
das
push
int
cmp
movd
xchg
ror
fisub
xchg
test
jle
ins
jbe
push
test
sub
mov
ror
aaa
or
add
ror
lock
nop
js
push
xor
das
loopne
mov
lods
je
cwde
mov
hlt
push
push
lock
mov
mov
gs
adc
outs
stos
lods
cmps
popa
(bad)
retf
icebp
push
cmp
push
mov
js
hlt
mov
into
imul
jns
daa
add
mov
jb
(bad)
mov
shl
sahf
stos
or
mov
adc
in
cwde
jge
sbb
pop
jmp
add
in
sub
mov
xchg
and
dec
not
inc
inc
(bad)
xor
jecxz
inc
and
out
dec
in
out
dec
cmc
dec
lods
mov
sub
cmp
data16
jge
and
add
or
mov
sbb
arpl
les
enter
out
sbb
mov
xor
cmp
icebp
add
fucomi
popf
mov
mov
int3
ins
cmp
jmp
popa
leave
jecxz
jbe
dec
dec
leave
dec
pop
cmp
ja
cmp
inc
adc
out
test
pusha
outs
sbb
sub
sub
xor
pop
repnz
les
pushf
push
push
dec
sub
jae
retf
jg
fisubr
jl
shl
jge
retf
sbb
test
push
pop
mov
mov
in
jmp
fdivr
push
aam
mov
and
repz
pop
out
dec
xchg
xor
retf
pop
aas
popa
inc
retf
ds
push
icebp
cmp
and
(bad)
cwde
xchg
dec
repnz
xlat
pop
mov
xchg
inc
outs
cdq
mov
fucomp
(bad)
jl
pop
les
add
cmp
sbb
gs
movs
mov
shr
dec
sub
mov
repz
(bad)
sbb
pop
stos
xchg
in
test
sub
mov
sbb
cdq
test
and
repnz
ret
sub
out
inc
mov
into
lds
cmp
test
out
dec
sub
inc
in
cmps
fwait
pusha
cli
imul
cmp
lods
lds
js
jne
hlt
js
iret
cmp
mov
int3
test
add
imul
addr16
adc
xchg
data16
or
xlat
push
dec
inc
inc
xlat
cmp
dec
stos
popf
mov
icebp
or
push
push
cli
jno
mov
sub
jo
pop
call
(bad)
mov
push
in
mov
dec
sti
in
popf
aam
jmp
cmc
pop
add
jnp
cdq
test
xchg
sbb
mul
pop
fwait
inc
dec
loope
aam
ja
cdq
lods
inc
loop
rcr
fldcw
aad
adc
cmps
mov
nop
int3
cli
nop
pop
push
loope
call
fld
and
jns
cs
add
or
xchg
ja
lds
mov
pop
inc
push
stc
jnp
(bad)
xor
push
aas
add
push
loopne
data16
scas
mul
push
mov
jo
mov
mov
cmps
add
inc
mov
(bad)
mov
inc
inc
cmp
data16
fs
rcl
pop
adc
fldcw
jmp
lahf
add
sahf
scas
jo
pop
ret
push
hlt
aas
xor
call
xor
and
shl
loopne
mov
int3
xor
sub
adc
cmp
sbb
(bad)
push
pop
repnz
jg
sbb
push
fadd
add
call
mul
mov
xlat
mov
xor
xchg
iret
push
sub
jbe
lods
dec
pushf
inc
cs
xchg
mov
mov
adc
xor
push
enter
pop
sub
sahf
mov
xor
jl
int
and
js
les
cmp
test
scas
or
mov
add
xchg
cmp
dec
mov
repz
push
pusha
loop
repz
mov
fndisi(8087
test
sub
aam
sub
push
inc
xchg
or
mov
add
cdq
xor
test
jmp
stc
stos
mov
test
shl
mov
loopne
mov
xor
add
push
xor
outs
mov
popa
cmp
or
or
jge
xchg
xor
in
rcl
popa
aam
jecxz
pop
out
loop
repz
push
pop
jecxz
adc
xor
shl
ret
jne
and
rep
outs
movs
ss
or
xchg
lock
cld
imul
jmp
stos
dec
jge
cmp
or
dec
inc
(bad)
xor
pop
or
outs
daa
adc
es
add
ret
pop
popa
call
jbe
fld
loop
call
int3
loope
ret
aam
jg
jmp
loope
enter
sub
sub
ficom
int3
push
stos
cld
int3
mov
jmp
push
call
sbb
retf
dec
or
cmp
adc
mov
jbe
popa
aaa
cmp
jl
jge
inc
retf
or
sahf
(bad)
in
and
outs
push
push
retf
jnp
popa
dec
into
xor
xchg
in
and
ja
daa
xlat
int
jno
inc
int
lds
mov
cmc
fcomp
fs
scas
jge
das
pushf
popf
ror
dec
test
int3
mov
in
sbb
stc
add
mov
retf
dec
lods
sbb
cwde
ins
popa
mov
js
cs
and
jmp
iret
fild
rol
loope
ins
out
test
inc
mov
nop
add
hlt
sub
call
mov
clc
pop
jg
ss
inc
addr16
adc
lods
xor
xor
or
loop
cmp
(bad)
cmps
jb
and
adc
pop
outs
mov
dec
inc
pop
pusha
cmp
into
lock
add
or
lea
pop
mov
pop
sti
jl
adc
inc
add
push
cmovl
shl
ret
pop
jmp
stos
sub
test
cmp
cwde
test
cmp
inc
jnp
sub
jne
xchg
call
aad
push
xor
test
inc
call
add
push
sti
(bad)
bound
sti
out
movs
movs
mov
sub
xor
(bad)
xor
mov
addr16
movs
mov
xor
push
pop
sti
or
xchg
push
xchg
push
pop
test
xchg
or
mov
mov
mov
mov
movs
mov
imul
mov
add
xor
jmp
outs
jno
sub
adc
dec
cmp
popa
and
mov
popf
mov
aad
push
jb
mov
mov
movs
push
sub
mov
sar
dec
ficomp
pop
inc
mov
xor
fs
adc
lahf
xlat
pop
jmp
and
sub
(bad)
pop
js
imul
push
into
(bad)
stc
shr
retf
out
ds
aaa
adc
test
clc
jge
fucomi
sbb
ret
out
or
out
xchg
pop
loope
sbb
rcl
and
and
lods
(bad)
add
sbb
sub
mov
inc
dec
fsub
sti
mov
push
mov
mov
mov
or
ret
push
sub
dec
jbe
push
xchg
jmp
and
je
popf
stos
out
daa
xchg
mov
sbb
cdq
icebp
cmp
fimul
aaa
mov
out
int3
cs
hlt
add
or
loop
add
ret
cli
cld
sub
retf
cli
scas
push
push
xchg
mov
push
pop
gs
xchg
cmp
jmp
rol
inc
fs
daa
xchg
mov
(bad)
imul
or
lds
or
sub
repnz
mov
mov
adc
in
xor
xchg
xchg
sbb
fsub
mul
neg
add
test
jge
add
clc
sub
add
cmps
mov
jge
retf
mov
in
cmps
clc
sbb
or
arpl
mov
retf
and
pop
jne
lea
xor
sti
xor
xor
outs
cmps
enter
jnp
shl
ins
cmp
xor
xor
and
gs
cmp
lock
popf
bswap
push
sbb
jp
mov
lock
and
push
push
cmp
xchg
dec
and
les
and
cmp
add
xchg
lds
outs
add
je
push
push
add
push
inc
mov
push
leave
adc
pop
push
xor
jmp
in
xchg
lea
push
(bad)
movs
sbb
xchg
bound
xchg
xlat
jmp
int
rol
cmp
inc
fs
inc
pop
and
push
movs
jecxz
inc
jecxz
xchg
test
out
icebp
adc
call
(bad)
std
shr
lahf
int
jno
inc
ror
pushf
clc
sbb
and
xor
xchg
pop
jne
stos
imul
jg
movs
lea
movs
icebp
jle
mov
mov
mov
inc
jecxz
(bad)
paddb
test
add
clc
push
loopne
inc
xchg
mov
and
xor
popf
sbb
fnsave
lahf
mov
leave
dec
inc
daa
pop
cwde
cwde
js
xchg
or
pop
adc
movs
or
into
xchg
int3
or
sahf
or
push
es
inc
jns
out
cmc
pop
stos
inc
sahf
int
push
xchg
es
sbb
movs
arpl
ror
loop
lea
fldenv
xor
jg
test
lds
add
jae
xor
dec
mov
mov
and
mov
mov
pop
cs
add
sti
dec
ror
stc
test
or
mov
push
xor
daa
mov
mov
mov
test
xlat
and
xchg
push
add
xlat
push
inc
add
pop
push
add
jmp
shl
pusha
idiv
test
mov
push
and
sub
(bad)
mov
adc
cmps
xchg
adc
jns
ds
mov
test
(bad)
mov
inc
mov
adc
push
dec
in
mov
xor
and
daa
jne
mov
pop
shl
retf
jmp
out
and
pushf
inc
xlat
inc
sub
fcmovu
rcr
push
mov
idiv
or
ds
sbb
mov
xor
or
xchg
push
xchg
adc
adc
ror
sahf
ja
(bad)
cmp
rol
sbb
push
xlat
cmp
imul
shl
mov
mov
jae
push
gs
(bad)
(bad)
out
cmp
hlt
daa
sub
xor
inc
jmp
xchg
and
test
cmp
mov
retf
test
out
or
daa
(bad)
sbb
cmp
xchg
sti
fidiv
out
fadd
push
pop
test
push
lds
jo
pop
pushf
into
mov
pusha
les
cli
xlat
mov
fsubr
add
xchg
xor
dec
xchg
mov
rcr
out
mov
rcr
in
dec
mov
or
(bad)
dec
mov
test
sbb
mov
pop
dec
mov
push
dec
push
dec
pushf
nop
outs
xchg
inc
mov
ins
stos
in
pop
and
fbstp
mov
xor
iret
lods
sbb
mov
imul
test
movs
push
mov
xlat
addr16
adc
sar
fstp
fsub
mov
xchg
enter
fadd
std
jmp
xchg
retf
js
inc
ficomp
nop
inc
in
push
jg
adc
pop
pusha
lods
aaa
push
adc
es
es
in
leave
mov
imul
fs
mov
xchg
(bad)
and
fwait
clc
push
mov
inc
mov
movs
and
xchg
int
sti
loope
jle
push
jne
push
test
into
xchg
xchg
cmp
jbe
in
(bad)
xchg
inc
imul
pop
fs
in
and
cmc
add
in
xor
add
inc
(bad)
pop
sub
sti
push
std
dec
xchg
jne
mov
shl
jmp
loop
leave
jns
aas
repnz
cmp
push
jmp
cmp
fwait
dec
sub
pop
sbb
jo
mov
add
mov
mov
test
daa
retf
aaa
push
inc
push
xchg
repnz
retf
scas
inc
xchg
inc
loop
inc
xchg
es
sbb
cli
inc
bound
inc
push
dec
jmp
shr
sub
jg
xchg
fwait
in
cmp
hlt
imul
cmp
ret
ja
xchg
fdiv
jmp
mov
icebp
or
mov
push
jno
popf
xor
frstor
fisttp
movs
out
and
mov
in
lds
sti
scas
dec
stos
ins
repnz
jae
push
(bad)
xor
aad
jg
std
pop
jae
sbb
cmp
(bad)
pop
retf
xchg
lahf
add
fisub
loop
ficom
pop
pop
addr16
inc
pop
adc
mov
push
inc
sahf
push
mov
leave
stos
xor
mov
pop
movs
rcl
mov
test
ins
jb
inc
mov
jbe
shl
dec
inc
iret
neg
je
repnz
push
pop
ror
ficom
push
push
js
sbb
shl
xchg
and
mov
out
test
sub
cmp
stc
repz
outs
out
stos
adc
mov
test
pop
outs
xor
mov
dec
in
fdivr
sbb
int
rol
mov
mov
fist
inc
xchg
ja
lahf
lock
mov
(bad)
div
xchg
push
or
inc
jge
jl
mov
cmp
push
xor
clc
cmp
mov
push
and
(bad)
ror
dec
cmp
fsub
neg
outs
cmps
jge
mov
mov
jnp
inc
mov
pop
call
sub
xchg
cmp
pop
dec
dec
or
or
pusha
mov
cdq
sahf
loope
xchg
xor
mov
jb
mov
dec
lds
sbb
in
int3
dec
cmp
or
scas
dec
lods
ret
das
adc
xor
es
(bad)
xchg
daa
(bad)
pop
ret
mov
jle
sub
xlat
dec
int3
fiadd
iret
dec
stc
fimul
movs
cwde
lock
fsubr
movs
jae
xchg
idiv
xchg
pop
fstp
ret
mov
mov
cmp
cs
add
sbb
adc
fcomp
lods
jg
or
xor
rep
dec
imul
ret
jmp
dec
(bad)
dec
cs
fcmovne
sahf
xchg
jnp
jbe
jmp
xor
inc
add
jae
add
mov
test
cmp
inc
cmp
pushf
mov
adc
jmp
xchg
mov
call
pop
jno
out
cmp
js
ja
pop
or
pop
popf
sbb
dec
out
cmp
push
pop
push
fisttp
lods
fmul
sub
lds
iret
and
stos
mov
es
mov
or
int
dec
mov
sar
int
cmp
clc
xchg
call
jecxz
enter
ror
push
jmp
cmp
mov
call
shl
jmp
or
loope
pushf
jle
or
aad
das
mov
xor
(bad)
xchg
clc
add
(bad)
adc
test
(bad)
enter
pop
push
ret
das
test
aas
mov
loope
push
mov
outs
or
mov
pop
in
sahf
fs
cmps
mov
mov
call
mov
inc
push
cli
arpl
in
shl
xchg
loop
push
(bad)
fbld
loop
cmp
jl
or
leave
sbb
sbb
sub
loopne
int3
jno
adc
mov
sbb
push
mov
xchg
cmp
sub
mov
sub
push
dec
or
mov
mov
sbb
lahf
jl
stos
loope
(bad)
pop
ret
sub
mov
adc
and
sub
or
cmp
add
push
add
fwait
test
mov
hlt
fld
add
nop
data16
popf
dec
imul
ins
add
outs
fnsetpm(287
cmp
push
fs
push
mov
mov
cmp
int
mov
test
cli
and
es
cmp
hlt
dec
push
loopne
sub
fiadd
mov
scas
adc
inc
cmc
into
cmp
sbb
iret
neg
dec
ins
rol
pop
ins
ins
mov
and
(bad)
push
imul
xor
jp
(bad)
das
int
cmc
sub
jle
cli
jnp
pop
jb
sbb
je
fidiv
loop
add
dec
jmp
cmp
mov
fwait
or
das
(bad)
or
sbb
test
movs
sbb
ss
leave
sub
in
inc
dec
adc
push
pop
loope
daa
rcl
lea
int
and
cdq
mov
sub
hlt
adc
xor
shr
sbb
test
add
dec
lock
sbb
xor
std
cmps
into
push
retf
movs
mov
(bad)
xchg
addr16
xchg
sbb
push
sub
aaa
in
in
fs
mov
pusha
adc
cmps
dec
or
sub
mov
popf
icebp
push
(bad)
lods
mov
cwde
std
out
lods
cmp
ret
(bad)
call
xchg
cmp
xor
sub
cdq
sbb
xchg
fdiv
cs
cld
cmp
mov
js
retf
and
adc
fwait
jae
mov
stos
movs
daa
lods
inc
int3
mov
push
adc
rol
fisub
sbb
aaa
mov
mov
std
mov
cli
imul
addr16
cmps
stos
add
ficom
pop
cli
cli
test
mul
mov
and
push
mov
(bad)
sbb
jne
add
scas
inc
aaa
pop
xchg
inc
in
adc
adc
mov
mov
test
cmp
xor
icebp
mov
fisubr
(bad)
pand
ins
ins
mov
mov
or
mov
cwde
(bad)
ret
push
adc
iret
pop
or
daa
movs
inc
loopne
les
xchg
jns
movs
or
pop
(bad)
dec
adc
loope
mov
pop
mov
add
sub
cmp
sub
inc
jns
outs
and
mul
fisttp
cmp
cmc
jnp
retf
mov
xchg
xchg
mov
mov
les
sti
and
sar
into
aas
call
pop
xchg
enter
adc
jl
loope
pop
stc
lds
ins
mov
sbb
mov
mov
mov
popa
jecxz
stc
xchg
int
pop
out
fcomp
sub
je
enter
fcom
outs
shl
mov
pop
cmp
mov
push
ins
daa
jno
mov
shr
cwde
lods
ja
dec
repnz
fist
stc
popa
cmp
dec
shl
scas
jo
movs
loop
icebp
mov
shl
jbe
fstp
cmps
addr16
loop
imul
xlat
cmp
dec
mov
out
std
cdq
shr
int3
scas
mov
push
inc
mov
and
mov
cmc
sahf
(bad)
mov
inc
jno
es
pop
fbld
les
xchg
push
invd
sub
cmp
inc
jne
cmp
xchg
popf
fwait
dec
retf
ins
xor
jmp
cs
pop
dec
icebp
aaa
shl
stos
nop
jb
adc
ja
std
xor
das
pop
(bad)
cli
aad
xor
ss
pcmpeqw
out
(bad)
pop
lock
mov
jbe
jnp
inc
enter
cmp
je
leave
push
loope
push
xchg
dec
xor
mov
jb
and
cmps
mov
mov
dec
in
rol
or
jecxz
test
sbb
sbb
jge
lahf
dec
add
jbe
mov
xchg
cmp
js
je
daa
loope
or
repz
mov
xor
push
sbb
stos
call
inc
call
add
adc
mov
dec
in
push
clc
adc
dec
not
xchg
popa
in
pop
or
push
lods
cmp
jmp
icebp
mov
cmp
mov
addr16
ja
iret
in
rcr
add
push
out
add
leave
pop
inc
and
pop
add
cmp
pop
mov
mov
fs
dec
cmp
ss
cld
repz
mov
fcomp
cmp
cmp
sub
les
jne
xlat
sub
imul
loopne
les
inc
xor
dec
lods
mov
sbb
sub
(bad)
or
xchg
mov
shl
inc
in
pop
stos
test
pop
stos
fistp
xchg
inc
jl
mov
loopne
pop
dec
add
out
dec
ficomp
adc
cmp
pop
cwde
movs
ds
popf
inc
ins
dec
in
call
out
ret
loope
(bad)
pop
inc
aad
push
dec
cmc
stos
sub
xor
retf
push
shl
rcl
jmp
mov
xchg
jo
pop
add
aam
cdq
adc
jnp
cmp
push
cwde
inc
arpl
mov
lods
cld
jne
repnz
or
pop
and
mov
inc
sub
popf
(bad)
jmp
sub
ja
out
call
fild
aam
sub
or
callw
xor
sar
or
in
adc
movs
test
mov
(bad)
cmps
sbb
into
fisubr
mov
cmp
inc
xor
in
mov
ds
mov
cmp
fbstp
dec
(bad)
add
push
(bad)
fadd
mov
cmp
xor
mov
mov
pop
cmp
cwde
sub
cmp
inc
xchg
or
cwde
ret
imul
retf
int
loope
mov
retf
xchg
mov
out
test
ja
not
xchg
ins
mov
sbb
fistp
adc
xchg
adc
jmp
xchg
pop
jns
ja
jne
fistp
fucomp
mov
fidivr
lahf
jnp
mov
jmp
jb
add
cmp
dec
mov
cmp
cs
or
ss
push
adc
mov
or
cld
sbb
scas
je
call
rcr
pop
sub
lds
mul
sub
jmp
mov
dec
and
mov
je
inc
sub
mov
adc
cmp
jl
sbb
call
mov
push
in
addr16
xor
nop
loop
(bad)
lea
repz
in
loope
outs
into
sbb
ins
in
retf
add
fdiv
add
adc
scas
cmp
inc
add
inc
inc
test
xlat
cdq
movs
dec
lods
push
sub
fs
sbb
lods
shl
mov
arpl
daa
cmps
bound
in
repz
div
lods
les
ret
push
fnsave
adc
retf
jo
mov
pop
hlt
or
test
and
sbb
adc
addr16
add
ins
ret
push
icebp
mov
xchg
push
mov
test
call
cmc
(bad)
(bad)
fcomp
push
fs
cdq
ja
adc
movs
imul
popa
or
jne
and
pop
sbb
aad
dec
adc
jnp
retf
in
jnp
adc
(bad)
mov
ret
add
pop
mov
loop
dec
loop
mov
sbb
adc
call
cmp
mov
pop
repz
pop
cmp
dec
cdq
outs
add
cld
or
push
push
call
jmp
jle
retf
fnstenv
ins
sbb
pop
inc
dec
or
test
and
add
out
mov
pop
inc
leave
lods
mov
dec
pop
xor
nop
cld
mov
outs
mov
movs
ja
stc
jp
movs
sub
dec
sbb
jmp
bound
mov
inc
pop
test
ss
push
xor
add
xchg
popf
cmp
mov
dec
in
mov
imul
test
push
xor
adc
xchg
mov
or
in
repz
and
push
clc
push
dec
adc
fisub
sub
daa
cmp
fsubr
jnp
xchg
enter
clc
add
adc
jns
xchg
test
push
es
ret
call
stc
scas
into
push
adc
xor
xor
xchg
or
gs
fs
lods
mov
push
ins
mov
in
outs
scas
adc
in
mov
lea
or
add
fisubr
mov
push
cmp
test
cmps
fsubr
and
cmc
mov
iret
xchg
push
repnz
and
mov
mov
cmps
js
inc
push
mov
and
int3
xor
enter
lea
inc
js
cli
adc
ja
dec
cmps
pop
mov
sub
ret
mov
sbb
jae
mov
ret
les
jecxz
bound
leave
and
ja
cdq
lods
sbb
mov
jno
cmp
push
shr
push
cli
jbe
mov
js
pop
mov
imul
mov
cmp
fld
xor
mov
inc
sub
push
jb
addr16
add
enter
xchg
inc
jb
addr16
not
jg
in
push
mov
repnz
push
movs
pop
xor
adc
lahf
loope
daa
jns
cld
mov
bound
xor
jnp
js
(bad)
inc
jge
and
push
adc
sub
ret
adc
inc
pop
pop
div
cdq
movs
inc
fwait
add
fcmovnbe
pop
add
ror
sub
push
sub
lahf
leave
or
sbb
lahf
out
test
mov
jnp
xchg
out
add
nop
sub
retf
mov
xchg
or
lds
into
fsub
jecxz
pop
in
pop
xchg
add
mov
rol
popa
jmp
xchg
ret
jae
adc
lods
mov
pop
push
mov
mov
addr16
cdq
xor
addr16
jae
fst
xor
cmp
pop
jbe
loopne
mov
mov
mov
mov
mov
popa
int
adc
call
jle
pop
lods
rol
test
mov
jmp
test
int3
scas
dec
jge
add
xchg
ror
fadd
fs
mov
retf
stc
ficomp
fbld
cmp
movs
and
sbb
push
push
add
ins
arpl
jp
jmp
jge
pusha
dec
test
add
mov
adc
push
push
jg
repnz
stc
lods
std
ror
jns
fcomp
adc
pushf
scas
cmp
cmp
cwde
inc
mov
mov
cmp
push
cmp
or
arpl
retf
pop
inc
test
sub
xchg
sub
je
das
adc
lods
mov
out
jle
push
pop
dec
imul
(bad)
imul
call
jg
nop
mul
mov
xchg
xchg
inc
cs
test
lds
aaa
or
and
jno
scas
loope
push
jl
sbb
adc
push
and
xor
push
mov
std
mul
mov
push
mov
into
cmp
add
dec
mov
iret
js
test
push
adc
mov
mov
and
fdiv
adc
fwait
jns
and
push
fisttp
push
(bad)
jecxz
mov
cmc
or
add
adc
xchg
mov
pop
stos
test
jecxz
mov
xchg
jnp
push
(bad)
test
icebp
push
jb
jbe
popa
gs
outs
mov
jne
sti
rol
or
pop
fistp
jmp
cmp
sbb
std
outs
inc
das
outs
cs
mov
ss
mov
aaa
pop
adc
lds
and
or
jne
push
jge
std
rcr
xchg
ja
out
push
repnz
pop
rcr
arpl
movs
fst
cwde
jne
sbb
pop
ja
jns
les
in
or
pop
xor
test
sub
jge
adc
ds
fidiv
push
jl
mov
(bad)
cmp
aaa
xchg
xchg
scas
jl
cmp
dec
xchg
mov
mov
rcl
xchg
addr16
or
mov
enter
test
stc
inc
mov
adc
icebp
scas
jl
cld
mov
dec
pushf
mov
lods
dec
pop
mov
imul
jecxz
cmp
and
ja
ret
sti
cmc
movs
cmps
mov
test
je
mov
xchg
int
(bad)
mov
es
pop
ret
(bad)
cli
add
sub
jmp
mov
(bad)
xchg
(bad)
lods
das
mov
pop
push
mov
and
sub
repnz
movs
mov
cwde
dec
test
call
gs
xchg
adc
dec
pop
sar
jle
loopne
ja
xor
icebp
sub
inc
jmp
push
stos
and
mov
push
loope
xchg
xor
inc
(bad)
fild
pusha
(bad)
in
dec
imul
xor
rcr
xchg
inc
shl
cwde
mov
inc
gs
push
loopne
xor
dec
add
pop
scas
mov
stos
push
test
popa
hlt
jmp
sahf
cmp
mov
popa
or
jb
(bad)
aas
stos
popf
inc
scas
push
sbb
push
fisubr
mov
cmp
jmp
dec
pusha
sub
mov
xchg
js
ins
stos
xlat
clc
and
js
ret
mov
cmp
adc
mov
mov
or
rcr
xchg
cmp
pop
mov
mov
and
push
cli
outs
fisub
aam
cmc
mov
jo
sub
fadd
adc
sub
push
dec
adc
shr
and
ss
clc
mov
leave
test
xor
jmp
js
or
shl
mov
pop
cmp
jne
sbb
xchg
adc
mov
repz
sar
mov
push
scas
daa
enter
adc
or
call
jno
mov
or
add
rcl
cs
cld
or
jle
cmps
xor
shl
mov
inc
call
dec
xchg
jmp
push
push
mov
cwde
cmp
xchg
fldcw
xchg
fiadd
sti
xlat
in
(bad)
adc
ins
ins
pop
push
ret
bound
mov
jmp
js
es
pop
cmps
rcl
scas
out
leave
inc
test
(bad)
mov
hlt
adc
clc
xchg
inc
loop
sbb
mov
mov
fidiv
xor
in
mov
adc
leave
call
add
push
lahf
loope
add
push
movs
cli
(bad)
enter
mov
cmp
inc
xlat
pop
push
and
and
ds
xchg
and
scas
lahf
inc
sbb
dec
adc
or
and
inc
push
inc
in
sub
leave
dec
gs
inc
ror
mov
std
int
xor
push
pop
jmp
(bad)
mov
push
icebp
adc
mov
adc
xchg
inc
pop
cmp
add
(bad)
lock
mov
mov
dec
shl
adc
retf
into
inc
dec
and
ds
shl
xchg
fidivr
or
daa
shl
jecxz
mov
add
ficomp
jg
movs
sbb
adc
inc
ss
pop
push
and
ins
loop
fdivr
inc
mov
fucomip
dec
das
sub
int
loopne
loopne
rol
or
(bad)
lods
mov
push
shl
cdq
les
add
xchg
adc
out
addr16
rcl
out
int3
retf
test
add
mov
lahf
and
xchg
(bad)
sbb
jo
add
outs
cs
mov
jne
retf
loope
jmp
movs
hlt
fcomp
and
shl
lea
or
movs
fnstenv
ret
mov
xchg
xor
mov
into
mov
(bad)
clc
retf
jmp
jl
lock
inc
xchg
xlat
sub
scas
pop
imul
mov
pop
or
xchg
mov
jmp
(bad)
ret
mov
xchg
fidivr
push
fnstsw
retf
iret
sti
or
fld
dec
(bad)
stos
or
(bad)
lds
ret
cdq
addr16
test
mov
push
push
(bad)
in
rol
aas
ins
loop
cld
movs
movs
pop
fistp
dec
adc
jl
inc
call
pop
leave
push
sbb
add
push
cmps
dec
pushf
dec
mov
popa
stos
test
mov
jle
sub
cmp
cmp
retf
out
sbb
in
inc
sbb
pop
jmp
xor
pop
daa
jg
(bad)
pop
retf
les
cli
and
jg
mov
es
add
pushf
push
pushf
mov
out
stos
ja
mov
xlat
cwde
leave
gs
(bad)
push
fs
into
ds
push
mov
outs
aad
call
adc
adc
push
inc
ds
(bad)
lea
xor
fisubr
in
out
arpl
push
xor
out
pop
fadd
imul
jo
pop
add
mov
inc
inc
aas
shl
xor
nop
(bad)
call
mov
push
or
shr
jno
xor
mov
jb
test
add
add
pop
(bad)
ficom
repnz
out
sbb
ins
sub
xchg
jmp
push
xor
jns
add
mov
xchg
cdq
cmps
push
cmps
aam
lds
std
jl
mov
pop
jne
pop
pop
jo
hlt
stos
push
inc
adc
mov
cld
es
sbb
xlat
repnz
out
fs
bound
xor
adc
in
fdivr
jmp
cmp
adc
bound
xchg
or
ror
mov
fwait
shl
(bad)
xor
nop
jp
add
or
xor
adc
push
sub
or
cwde
ror
cmp
retf
adc
shl
jge
test
mov
test
test
mov
outs
mov
xor
inc
cmp
hlt
jmp
add
add
lods
(bad)
cmp
mov
sub
cmp
dec
scas
les
push
sub
test
popa
sub
pop
lahf
dec
mov
jle
shr
push
movs
pop
pop
pop
dec
ja
xchg
adc
push
and
(bad)
arpl
pusha
sahf
ficomp
aad
xor
pusha
mov
and
sub
sub
push
jne
cmp
mov
les
cli
aad
jno
adc
sti
mov
mov
push
shl
sahf
pop
dec
mov
fnstsw
dec
adc
sub
xchg
xor
daa
mov
add
fnop
push
mov
add
shl
mov
test
or
je
je
fidiv
daa
xor
jp
push
lea
popf
mov
jl
jmp
loope
or
test
iret
shld
cwde
mov
data16
(bad)
hlt
xor
popa
inc
jae
dec
xor
push
stos
sbb
xchg
mov
dec
dec
dec
cmc
pop
lds
popf
sub
je
mov
sub
mov
cs
inc
bound
mov
lahf
loop
mov
adc
sub
mov
jecxz
mov
sbb
sub
fldenv
xor
mov
sub
dec
and
lods
jmp
xchg
lahf
sub
jno
add
mov
call
jmp
xchg
daa
lahf
rcr
mul
test
icebp
mov
fild
cmp
xchg
xchg
out
(bad)
bound
cli
mov
inc
xchg
cmp
add
xchg
xchg
jmp
adc
cmp
ror
pop
cmps
mov
psubw
(bad)
clc
mul
fwait
jle
dec
xchg
sar
test
dec
xor
xchg
pop
shr
inc
ror
and
ret
mov
push
sbb
adc
xor
xor
mov
outs
stos
push
mov
or
les
inc
(bad)
jp
mov
xchg
xchg
ins
(bad)
push
mov
outs
jo
xor
sbb
xchg
mov
fld
pushf
imul
out
xor
shl
pop
sub
cmps
or
or
into
gs
pusha
rcl
call
adc
jae
xchg
ret
mov
cmp
mov
cmp
xchg
mov
xor
(bad)
rol
mov
rcr
lahf
add
mov
and
int3
fadd
out
fisub
movs
mov
repnz
mov
cmp
scas
push
stos
into
mov
xor
test
jne
test
jp
cmp
cmp
add
cmp
rcr
in
sti
inc
test
outs
or
mov
sbb
imul
sub
push
push
loope
sbb
out
cmp
inc
jg
rol
dec
(bad)
call
in
into
push
mov
or
retf
int
pop
fidiv
outs
call
pusha
rcl
lock
mov
xchg
cmp
sub
js
fiadd
aam
xor
ins
jae
imul
xor
mov
sbb
sti
adc
cmp
(bad)
pusha
push
dec
push
fs
mov
xchg
js
inc
ds
ficomp
mov
push
or
add
repnz
sbb
popa
rcr
(bad)
repz
fcom
popa
stc
and
adc
sbb
add
data16
fmul
push
mov
cmp
aaa
into
or
mov
add
sbb
jae
mov
add
shl
pop
mov
test
inc
jnp
or
call
test
push
dec
adc
mov
sti
push
mov
dec
shl
push
and
fwait
pusha
sti
movzx
inc
sbb
mov
ret
dec
add
jg
vmwrite
fadd
stc
jnp
and
fnstenv
jo
sbb
and
jmp
and
mov
cdq
mov
rol
movntps
into
jbe
fisub
aam
int3
lds
pop
cli
aas
cs
jb
sub
cli
jae
inc
mov
cs
xor
pop
cmc
ins
or
or
dec
push
movs
cmc
xor
mov
hlt
mov
xlat
mov
sahf
scas
imul
repnz
ds
jbe
cmp
cmp
cmps
push
cmp
mov
xlat
adc
and
jno
mov
js
mov
aaa
fs
jmp
nop
mov
jmp
xchg
daa
(bad)
sahf
cmp
clc
xchg
mov
and
int3
sub
rol
push
sub
jo
fild
into
hlt
push
adc
iret
das
mov
sar
push
push
mov
jp
repz
and
les
(bad)
outs
add
pop
in
cmp
popf
out
iret
je
add
inc
xchg
outs
nop
push
fiadd
sub
or
jbe
(bad)
jae
jle
sbb
push
push
sub
aam
mov
inc
aas
add
add
adc
pop
cmp
repz
jl
clc
dec
push
xchg
xlat
inc
mov
mov
(bad)
mov
popf
call
jno
mov
pop
jbe
sbb
push
sahf
inc
repnz
inc
je
call
ins
sbb
loop
jl
arpl
xchg
dec
gs
lahf
rol
xchg
out
mov
movs
jge
lods
adc
dec
idiv
push
mov
mov
mov
or
rcl
jo
test
dec
mov
mul
cmps
cmps
cld
xchg
and
jbe
cmc
mov
ficomp
jnp
inc
cmps
sub
mul
and
pushf
aaa
sub
xchg
xchg
dec
rol
inc
push
mov
call
cld
cdq
loope
xchg
cmp
sbb
rcr
cld
call
and
aad
push
mov
adc
pop
jo
or
or
jp
sub
mov
and
ja
mov
data16
jnp
sbb
or
scas
jmp
repnz
sub
jnp
mov
ds
jle
dec
out
mov
adc
pop
retf
xchg
xchg
outs
ds
jg
push
test
scas
inc
mov
push
adc
test
popa
std
inc
imul
arpl
ror
sti
mov
pop
add
xchg
leave
ins
ror
inc
mov
lea
dec
cmps
xchg
cmps
or
push
mov
jnp
pusha
push
fcom
stos
mov
gs
add
cmp
out
dec
call
iret
aad
loop
call
pop
sub
push
out
out
dec
xor
arpl
jne
jecxz
mov
les
loopne
xor
jp
fwait
mov
jmp
push
scas
(bad)
jae
mov
pop
fiadd
into
(bad)
or
loop
ret
sub
pushf
ds
sub
mov
push
jns
gs
jo
push
jo
mov
push
sub
js
test
mov
dec
(bad)
mov
xor
ret
xchg
sbb
retf
in
adc
mov
mov
mov
push
or
adc
movs
pop
cmc
ss
(bad)
div
ret
ret
rol
and
lahf
jb
or
lods
and
pusha
lahf
gs
mov
scas
dec
add
inc
dec
rcr
fcom
mov
pop
pop
sbb
mov
lds
sub
loope
pop
jp
fidivr
sahf
fwait
and
mov
pop
fld
push
mov
mov
xchg
sbb
(bad)
std
shl
sti
adc
movs
pusha
xchg
lods
and
outs
loopne
jg
test
cmp
(bad)
arpl
cmp
xchg
shl
xchg
cli
outs
push
sbb
cmp
aad
scas
mov
shl
(bad)
pop
xchg
out
pop
call
push
std
add
add
aad
rcl
movs
xor
sbb
lea
or
sahf
std
lds
jecxz
mov
popf
in
clc
dec
ss
pop
xchg
fs
test
data16
push
(bad)
fld
pop
add
cmc
jp
rcl
repz
push
mov
popf
fwait
nop
dec
ficomp
stos
dec
dec
jns
jb
add
mov
nop
imul
cmp
lea
dec
(bad)
mov
test
pop
loopne
repnz
pop
sbb
dec
or
sub
cmps
ds
sahf
into
aaa
or
cld
dec
(bad)
sub
fwait
mov
cmp
pop
add
adc
jl
in
rcl
jle
adc
adc
push
push
mov
sbb
xchg
dec
sbb
mov
pop
(bad)
jmp
inc
and
test
into
xchg
nop
aas
cmc
xchg
push
dec
aad
mov
test
lds
retf
cmp
dec
xor
and
scas
into
push
or
hlt
mov
ret
xchg
movs
pop
out
cmp
mov
adc
(bad)
data16
xchg
rcl
or
cmps
int
adc
jmp
mov
pop
mov
inc
adc
scas
and
popa
bound
(bad)
shl
jmp
pop
lods
sbb
pop
add
jg
lods
icebp
popa
jo
xchg
push
mov
cmp
pop
adc
fcomp
xor
into
outs
aad
push
call
pusha
pop
aaa
fcomp
dec
mov
xor
jns
inc
add
sub
inc
in
movs
fucomi
pop
pop
ret
sbb
repnz
pop
xor
(bad)
std
mov
xor
xlat
imul
mov
call
ds
jmp
jno
movs
cs
xchg
mov
movs
adc
xchg
mov
dec
test
int
adc
cwde
dec
cmp
sbb
in
jns
loope
out
ins
cmc
pushf
shl
ret
push
rol
addr16
icebp
cli
jmp
bnd
popf
jb
fnstsw
push
stos
or
iret
adc
inc
pop
dec
inc
lea
loop
sbb
xchg
and
inc
lds
and
xchg
in
adc
in
xchg
xor
in
sbb
xor
jmp
pop
lods
in
iret
pop
mov
push
repnz
les
add
xchg
lods
test
sub
push
mov
jns
dec
or
jmp
cdq
rcr
mov
dec
cdq
fcom
in
and
faddp
push
mov
and
popf
pop
jne
jmp
sub
xchg
pop
gs
push
adc
pop
cmps
lahf
pop
add
or
sbb
jmp
int3
je
js
xchg
inc
cmp
shl
push
jo
adc
xor
out
fdiv
ret
add
dec
in
fs
xchg
jle
or
and
mov
cmps
retf
xchg
mov
inc
mov
and
popa
add
imul
dec
or
mov
stos
fsubr
or
ja
and
jge
jge
vprotd
add
xor
iret
add
sub
les
jp
out
pop
add
icebp
and
lds
mov
sub
pop
cmp
ret
stos
pop
jl
fcomp
cmc
push
pop
and
sahf
dec
dec
mov
add
jb
adc
xlat
push
or
enter
outs
pushf
ins
cmps
mov
mov
addr16
bswap
test
and
out
call
xor
push
aam
push
xchg
sahf
outs
add
(bad)
es
mov
push
or
mov
mov
inc
(bad)
mov
data16
lock
jae
xchg
pop
int
xchg
xchg
das
arpl
das
xchg
mov
cmp
pop
dec
inc
xor
jno
and
pop
aad
in
push
jb
cmp
sbb
mov
inc
lods
ret
aaa
jg
xor
dec
mov
mov
aaa
hlt
movs
pop
nop
aad
addr16
ins
clc
pop
test
push
pop
call
push
in
in
jge
aas
xor
mov
push
jmp
(bad)
xor
pop
and
mov
inc
addr16
inc
dec
imul
sub
retf
into
adc
push
pushf
fcom
test
out
sub
stos
sub
jmp
les
and
int
inc
add
ret
mov
mov
stc
push
repnz
xor
adc
enter
test
xor
mov
push
xchg
jge
jp
ja
mov
nop
pop
sbb
addr16
rcr
xor
lods
jle
xchg
cmp
lock
or
add
inc
cli
(bad)
push
or
es
call
scas
inc
sub
ficomp
cld
adc
jne
xchg
repnz
js
dec
lds
mov
lods
mov
retf
test
aam
xor
add
cs
mov
inc
inc
paddsb
out
dec
inc
cld
pop
test
stos
jmp
mov
fiadd
add
loopne
adc
pusha
ror
adc
dec
mov
or
inc
popf
pop
imul
cs
mov
pop
dec
add
ins
test
test
lds
ret
mov
push
push
dec
sbb
xor
in
aad
mov
xor
vpunpckhwd
ds
out
retf
retf
cmp
in
ja
add
mov
sub
and
xor
in
cmp
cld
stos
shr
xor
push
lods
sbb
xor
ins
fwait
and
shr
mov
inc
mov
outs
inc
shl
ins
call
push
cmp
jle
fdivr
inc
fsubr
xchg
stc
fucomi
sub
push
dec
inc
arpl
cwde
cmp
call
xchg
mov
add
cmp
lea
js
mov
fdiv
xor
push
and
fcomp
mov
iret
dec
fcmovb
jle
xchg
icebp
cmps
mov
ins
add
jb
mov
sbb
pop
pop
stos
dec
jno
cdq
bound
push
inc
ds
mov
das
mov
imul
cwde
and
loope
imul
test
mov
arpl
ficom
and
inc
popa
and
push
pop
cmc
iret
pop
sub
mov
test
sbb
ja
test
outs
pop
arpl
jnp
inc
(bad)
push
sub
lods
out
jle
cmp
sub
inc
mov
mov
stc
pop
pop
(bad)
loopne
and
pop
and
push
in
dec
sbb
pop
jmp
fist
push
scas
scas
fistp
in
cmps
xlat
retf
ret
repz
inc
ins
icebp
loop
or
popf
fmul
push
in
(bad)
sub
dec
mov
push
shl
sar
(bad)
mov
cmp
aam
nop
add
shr
pop
pop
imul
dec
sub
xchg
jae
and
in
dec
cmp
mov
in
in
inc
stc
xor
dec
mov
xor
jmp
int
sbb
mov
jnp
hlt
mov
mov
sar
dec
jge
sti
mov
mov
rol
lea
push
in
dec
jge
retf
sub
lods
clc
je
daa
ds
pop
and
sub
je
ds
jmp
in
out
and
(bad)
in
lahf
inc
out
ret
ret
(bad)
adc
dec
mov
adc
jns
jns
sbb
(bad)
jle
fs
sbb
in
xchg
dec
push
push
sbb
mov
out
addr16
out
push
dec
dec
lods
mov
out
jl
sub
gs
outs
jmp
cmc
fistp
dec
inc
jae
or
mov
or
push
mov
in
mov
cmps
jecxz
xchg
cmp
aas
repnz
mov
adc
cmovs
pop
mov
add
mov
les
push
add
arpl
fwait
pop
repnz
aaa
jmp
repz
js
(bad)
gs
test
add
jge
out
or
push
loopne
mov
test
jp
retf
pop
adc
mov
add
inc
and
out
(bad)
out
mov
into
dec
cmp
mov
mov
sbb
add
mov
cli
out
movs
pop
lea
in
(bad)
outs
xor
call
push
cmp
test
and
ret
push
stos
sbb
pop
outs
jns
sbb
shl
outs
mov
and
mov
rol
and
xchg
push
jecxz
fsubr
inc
push
mov
xlat
nop
xchg
lds
or
xchg
aam
adc
scas
add
xchg
xlat
call
add
adc
fcomp
loopne
ret
aad
adc
mov
xor
ins
rcl
or
les
dec
loopne
sub
lea
and
xchg
add
sahf
cmp
xor
jns
pusha
pop
mov
icebp
push
js
(bad)
test
push
(bad)
clc
or
movs
(bad)
xchg
xchg
retf
int
jnp
in
inc
cwde
pop
mov
sbb
aam
retf
xchg
ret
nop
jnp
inc
fs
outs
mov
mov
adc
fisttp
aaa
fist
stos
jle
aaa
inc
mov
aas
(bad)
mov
sub
test
push
into
lods
pushf
inc
xor
das
xchg
jnp
cmps
cmp
cmp
call
mov
in
gs
dec
ins
call
mov
cwde
into
aaa
call
int3
ret
popa
push
add
rol
fsubr
movs
outs
cmp
lods
(bad)
aam
push
jbe
pop
push
imul
pop
xchg
daa
mov
jo
cmp
or
sub
inc
adc
(bad)
inc
out
mul
loop
pop
ds
aaa
jecxz
jp
popf
inc
pushf
mov
sub
or
adc
push
shl
inc
pop
cs
ret
inc
cmc
sar
xor
push
jns
xor
add
iret
xchg
and
bound
call
jp
dec
sbb
ret
or
out
jg
js
mov
mov
adc
(bad)
jge
mov
push
inc
loop
dec
xchg
std
fcomp
cmp
int
mov
call
add
or
out
xchg
or
scas
repnz
loop
mov
movs
sub
sub
mov
jge
dec
and
sub
fild
(bad)
add
(bad)
mov
fcomip
sub
lahf
add
dec
add
loopne
test
fwait
jp
mov
scas
movs
dec
aaa
mov
(bad)
mov
add
(bad)
fistp
mov
push
les
out
push
stos
mov
xor
push
fild
fstp
push
mov
movs
daa
inc
jbe
pop
pop
push
(bad)
in
push
shr
ins
imul
xchg
pop
cmps
mov
pop
jns
in
arpl
cwde
dec
or
inc
popa
xor
fldenv
xor
mov
imul
inc
dec
xchg
ja
dec
mov
xchg
cmp
push
mul
test
arpl
aaa
ins
sub
sar
mov
in
inc
test
lock
cmp
lea
lods
fnsave
ret
jge
jb
or
loopne
xchg
mov
imul
push
mov
ins
dec
add
and
adc
loopne
cs
and
inc
pop
inc
out
dec
adc
daa
lods
xchg
pop
leave
(bad)
leave
xor
pop
mov
add
cdq
out
jmp
cmp
les
add
push
jmp
sub
(bad)
and
dec
fdivr
hlt
mov
add
xlat
add
dec
xchg
dec
pop
pop
out
mov
cmp
pop
add
xchg
dec
jmp
or
stos
cli
stos
daa
in
mov
sub
(bad)
imul
in
data16
retf
jb
es
test
repz
arpl
enter
dec
dec
push
lahf
mov
dec
hlt
imul
push
movs
aam
(bad)
mov
and
inc
in
imul
retf
out
aaa
cmc
mov
push
mov
dec
mov
fsub
mov
sar
js
mov
push
and
mov
mov
jno
scas
loop
test
test
(bad)
cmp
cmp
(bad)
dec
mov
movs
or
(bad)
jecxz
sub
jbe
(bad)
hlt
dec
inc
rcl
mov
adc
sub
jns
mov
cmps
aas
cmp
xchg
inc
push
or
psraw
and
jne
mov
cmp
sub
cmp
or
push
mov
popa
das
and
addr16
aaa
fnstsw
mov
sub
and
lahf
iret
outs
push
cwde
loopne
sbb
xchg
ja
sbb
stos
nop
dec
icebp
loopne
jmp
dec
test
mov
outs
mov
nop
pop
dec
fistp
int
jmp
dec
test
aam
mov
out
pop
adc
inc
sahf
xor
add
inc
inc
push
in
xor
(bad)
xor
xchg
inc
push
sbb
cld
inc
add
xchg
int3
test
rcr
sub
sbb
jbe
leave
fisttp
lea
xchg
lods
(bad)
jns
ret
xor
xlat
adc
cmp
push
jae
aas
stos
clc
adc
dec
in
sbb
jge
ret
push
repnz
movs
lock
mov
rcl
clc
pop
cli
inc
dec
jns
sub
mov
pop
adc
add
xor
sar
dec
repz
push
mov
inc
mov
cmp
scas
pushf
mov
outs
and
push
jle
mov
call
rcr
arpl
(bad)
jg
and
je
jge
mov
fwait
shl
cwde
mov
add
adc
icebp
or
sbb
ffree
mov
jp
shl
adc
and
loopne
mov
or
(bad)
fld
fmul
mov
pop
mov
cmps
cwde
and
sbb
scas
scas
sub
ret
xchg
scas
lds
cdq
xor
cmp
mov
ror
add
fstp
inc
aas
push
cwde
(bad)
push
in
(bad)
cmp
cmp
aad
outs
push
dec
stos
fild
mov
jnp
inc
out
sbb
xchg
ffree
fwait
enter
push
mov
mov
ret
(bad)
aas
jae
push
push
stos
cmp
out
movs
arpl
leave
ds
ret
sub
retf
outs
fadd
inc
jo
repnz
push
das
mov
push
js
jg
xchg
lea
(bad)
adc
sub
cs
xor
xchg
pop
xlat
mov
xchg
pop
mov
adc
push
shl
ret
jns
and
mov
inc
popa
mov
mov
sbb
shl
fst
lods
lock
mov
sbb
inc
and
sbb
retf
bound
cld
fidivr
mov
push
cwde
das
jbe
adc
retf
xor
cmc
fld
ds
xor
ins
daa
mov
in
aam
dec
and
imul
xchg
popa
push
push
sbb
test
clc
cs
xor
loopne
data16
movs
adc
xchg
popa
dec
in
ret
mov
mov
cdq
fisubr
and
jp
lods
or
fwait
enter
movs
push
add
sbb
jmp
sbb
not
cmp
ret
mov
mov
in
xor
sub
pushf
rol
mov
lods
(bad)
xchg
mov
push
pop
in
arpl
imul
push
pop
out
test
test
mov
sbb
and
daa
jne
sbb
mov
add
push
retf
ins
inc
inc
scas
enter
pop
data16
push
pushf
mov
xchg
mov
pop
loopne
lock
(bad)
dec
gs
and
inc
mov
xchg
xchg
cli
xor
cmp
repnz
outs
xchg
in
cs
inc
sub
sbb
dec
popf
cwde
mov
mov
addr16
data16
in
dec
loopne
es
mov
pmulhuw
fwait
pop
push
mov
jle
push
mov
xchg
int
je
aam
xchg
(bad)
xchg
push
mov
rcr
not
pop
stos
xchg
mov
cmp
fdivr
mov
sub
lea
sbb
call
ret
pop
lods
push
icebp
aas
mov
lock
lfs
lods
js
(bad)
fdivrp
call
fmul
cmp
dec
shl
mov
xor
push
enter
popf
push
adc
aaa
nop
adc
mov
stc
ror
mov
mov
pop
push
jle
pusha
iret
xor
ret
dec
(bad)
imul
out
mov
shl
pop
and
cmc
sub
sar
outs
mov
inc
pushf
adc
fidivr
push
and
or
or
jl
test
jns
and
sub
cmp
cmp
stc
imul
dec
ss
mov
mov
sbb
adc
bnd
out
in
mov
push
push
xor
ds
retf
cmp
stos
stc
mov
sub
jl
cld
(bad)
add
fnstsw
ret
xchg
retf
test
ins
push
lahf
jp
cmp
loop
pop
sbb
jg
adc
scas
aaa
pop
gs
shl
add
repz
lea
cmps
fdivrp
mov
mov
jecxz
add
or
xchg
fs
cmc
dec
stc
aas
sbb
bound
call
cwde
and
bound
jge
jo
dec
mov
xchg
sub
mov
clc
xchg
mov
mov
fnsave
mov
ds
mov
cmp
loopne
sbb
sbb
outs
cmc
in
popf
and
adc
push
fs
jge
push
lock
mov
cli
or
adc
hlt
jecxz
icebp
sub
xor
add
push
fdiv
xor
sub
push
fst
adc
jmp
(bad)
and
add
retf
out
mul
inc
in
ss
femms
ficom
add
adc
pop
jl
mov
add
sbb
cld
xlat
and
fcomp
mov
dec
push
xchg
sti
sbb
xchg
inc
ja
dec
mov
loop
test
cmp
push
sbb
(bad)
pop
dec
mov
out
push
sub
push
xchg
cli
inc
sbb
push
cld
(bad)
stc
cdq
or
xchg
pop
dec
rcr
mov
mov
stos
cdq
sub
pop
enter
ror
pushf
fisub
sbb
cwde
lea
mov
push
xchg
lock
dec
jns
aad
shl
dec
rcl
jno
inc
nop
or
fs
or
push
ss
push
lock
inc
sbb
push
inc
stos
or
std
or
mul
pop
and
(bad)
mul
mov
daa
arpl
xor
push
call
and
dec
rcl
xchg
xchg
stc
and
in
out
popa
pop
retf
js
xchg
retf
ret
lods
cmps
push
out
adc
or
push
mov
mov
pusha
xlat
or
mov
popa
imul
push
jmp
rol
(bad)
in
cmp
mov
in
or
jb
stc
aad
sbb
mov
faddp
mov
(bad)
std
loop
cmp
scas
sti
and
pop
pop
psrlq
(bad)
sub
pop
dec
(bad)
outs
sbb
outs
popf
xor
je
out
outs
cmp
lea
ins
sub
inc
jmp
cdq
cmps
sbb
jo
inc
(bad)
lods
daa
stos
dec
dec
test
pop
xchg
jno
mov
addr16
or
and
mov
(bad)
lahf
ret
cmp
sbb
jns
aas
jecxz
call
mul
xor
cdq
jmp
lock
adc
dec
ror
scas
aad
js
outs
dec
daa
mov
add
and
pop
rol
add
mov
push
adc
into
fiadd
jle
std
inc
dec
push
mov
adc
ins
popf
push
adc
sub
out
jno
xor
loope
or
sbb
xchg
lods
test
xchg
jo
daa
mov
(bad)
mov
add
iret
mov
aaa
sbb
sub
cmp
std
jo
mov
loop
cmp
or
enter
(bad)
sahf
sti
and
ret
add
push
sub
mov
ja
dec
push
std
xor
outs
ja
mov
clc
(bad)
push
or
mov
dec
mov
or
cmc
sbb
add
cwde
ss
lods
mov
repnz
cmp
xlat
cmp
jo
outs
mov
inc
hlt
out
sub
je
mov
les
mov
or
mov
ds
gs
into
mov
mov
sub
enter
inc
mov
loop
mov
mov
retf
int
push
sti
jns
movs
ss
inc
int3
xor
xor
sub
int3
frstor
lock
or
mov
dec
repnz
xchg
mov
call
fidiv
outs
aaa
call
jecxz
inc
daa
ret
adc
icebp
adc
add
sub
rcl
icebp
shl
sbb
cwde
sbb
mov
ins
sar
push
out
pop
cmc
es
add
mov
jns
push
inc
imul
adc
mov
sbb
xchg
repz
mov
add
test
xor
fdivr
jmp
imul
dec
xor
pop
adc
inc
cmp
pusha
inc
cmc
pop
add
dec
popf
add
push
ds
jecxz
pushf
cmps
imul
jnp
pop
(bad)
jecxz
sbb
repz
je
out
pop
test
xchg
lods
(bad)
mov
mov
das
int
jb
push
mov
lods
js
jg
or
nop
fistp
add
mov
inc
pushf
add
jp
dec
dec
xor
push
bound
mov
mov
pop
idiv
adc
and
inc
xchg
dec
in
sahf
mov
jmp
in
adc
or
leave
mov
sbb
xchg
push
enter
inc
jb
outs
shr
lock
dec
or
push
jp
or
fadd
adc
cdq
pop
inc
sbb
xchg
sbb
mov
jmp
vpacksswb
cld
or
pop
mov
clc
jge
push
es
mov
or
mov
adc
adc
scas
sti
xor
push
cmp
mov
loop
xchg
hlt
ror
cmp
mov
xchg
and
mov
sub
(bad)
in
lods
aaa
mov
mov
inc
js
popf
pop
enter
rcl
lahf
cmp
lods
(bad)
aaa
jo
jecxz
adc
and
push
inc
jp
adc
sbb
jge
popa
clc
fiadd
lods
lods
shl
push
mov
idiv
lods
push
sti
sub
scas
or
scas
pop
lahf
sbb
jne
mov
pop
and
push
inc
cli
fist
lahf
and
inc
adc
jno
ja
pop
(bad)
cmps
mul
mov
call
xchg
mov
jmp
dec
stc
int
repz
mov
cmp
movs
ins
aas
out
xchg
pop
sub
dec
xchg
sub
lea
inc
into
jbe
xor
inc
ror
xchg
jg
pop
loope
loope
cmp
dec
int3
sar
ret
outs
and
shl
call
inc
repz
xchg
mov
inc
popa
dec
and
cmp
sahf
inc
dec
xchg
xor
adc
jecxz
ret
push
movs
popf
jb
cmp
xchg
retf
imul
iret
cmp
jb
mov
push
jne
std
addr16
sti
sbb
push
push
pop
sbb
adc
mov
push
xlat
dec
pop
stos
daa
mov
fsub
sbb
stos
mov
outs
bound
mul
inc
push
mov
shr
mov
nop
or
addr16
mov
std
hlt
call
xor
aad
and
pop
push
sti
cmp
jb
pop
push
mov
jns
jo
adc
mov
push
out
(bad)
stc
xchg
mov
inc
outs
mov
fcmovnb
inc
aad
pop
dec
push
jmp
fmul
jno
in
pop
stos
fcom
jno
dec
or
ins
adc
mov
mov
aam
out
sbb
test
adc
xchg
ror
jl
adc
jmp
mov
sbb
adc
or
mov
in
cmp
out
and
mov
push
sbb
ret
jne
fisttp
popf
(bad)
push
call
dec
mov
push
inc
cmp
xchg
mov
mov
push
loope
cmp
add
lea
leave
and
pop
shr
jle
adc
dec
cmps
and
adc
ins
xchg
jp
aaa
int3
lds
imul
test
lods
nop
jecxz
pop
mov
gs
loope
pop
xchg
fistp
xchg
adc
outs
xchg
and
mov
or
nop
frstor
fnsave
mov
ficomp
lods
popf
outs
pop
mov
pop
test
shl
xor
xchg
mov
mov
popa
mov
loopne
jb
(bad)
out
and
mov
sub
dec
nop
cmp
aam
ds
sub
popa
adc
mov
cmp
pop
call
push
inc
mov
cli
or
addr16
jmp
cmp
sbb
or
jecxz
lods
cmc
test
mov
xchg
lock
sbb
cli
adc
adc
loopne
imul
fwait
cld
mov
aaa
inc
nop
cs
mov
imul
cld
add
dec
mov
lock
or
inc
dec
adc
dec
inc
lods
jle
sub
daa
fwait
ror
sbb
rol
xchg
push
xrelease
sbb
idiv
jnp
push
or
mov
push
cs
ror
adc
push
in
test
aad
pop
xlat
cmp
xchg
lds
loopne
mov
jg
add
(bad)
mov
cmp
cdq
push
or
jno
cmp
mov
cld
jo
xchg
adc
test
push
or
iret
int3
jecxz
fisttp
lahf
arpl
inc
mov
idiv
cmp
enter
cmp
inc
or
dec
pop
inc
scas
icebp
loope
shl
add
xor
imul
stos
jbe
mov
repz
cmp
xchg
xchg
cmp
sbb
ins
push
jns
and
mov
xchg
cmp
or
push
sbb
inc
ror
and
test
rcl
xor
fcom
dec
pop
mov
mov
arpl
and
fwait
shr
in
std
mov
cld
fisttp
neg
xor
psrld
add
xor
or
cmp
adc
clc
aam
(bad)
ins
sub
pop
xlat
jmp
dec
retf
jge
fmul
idiv
cmp
jge
xchg
push
dec
in
int3
out
jg
into
xor
movs
xor
mov
ds
inc
pop
iret
push
sti
clc
cmps
sbb
mov
out
mov
sbb
enter
mov
push
pop
mov
inc
cli
pop
movs
adc
adc
lods
div
fucomip
cmp
(bad)
jle
sub
cwde
test
push
push
(bad)
ins
push
and
or
sbb
gs
lods
dec
mov
cmp
xor
sbb
mov
js
push
mov
dec
xchg
mov
sub
jmp
dec
sub
or
or
inc
mov
movs
dec
pop
adc
sbb
pop
(bad)
popf
out
jb
cdq
cmp
in
je
aaa
sub
sub
dec
adc
loopne
cmp
out
ret
lods
mov
jbe
test
lods
dec
js
mov
dec
xchg
adc
jnp
or
dec
mov
stc
xchg
sbb
scas
mov
rcr
or
dec
jmp
call
push
push
pop
test
fimul
adc
xor
lds
stos
add
movs
int3
xlat
retf
or
xchg
push
sahf
inc
sbb
fisttp
idiv
fisubr
mov
les
bound
lods
sahf
jecxz
cmp
cmp
xchg
shl
mov
sub
icebp
jno
mov
dec
fisttp
push
add
adc
sub
(bad)
push
retf
(bad)
das
xchg
mov
ret
add
(bad)
dec
mov
and
dec
sbb
ret
or
mov
pop
dec
loope
into
lock
and
ins
shr
inc
add
pop
sbb
mov
out
sti
and
imul
clc
jbe
push
call
push
inc
(bad)
cmp
ficom
fist
dec
aad
jmp
clc
in
out
in
cmp
mov
adc
(bad)
in
lods
xchg
pushf
jae
data16
mov
les
jg
pop
retf
aam
aad
jle
ins
jbe
xor
jle
call
sbb
sbb
imul
stc
jnp
(bad)
js
cmc
xchg
push
addr16
outs
push
(bad)
neg
pop
std
mov
cwde
pop
xchg
add
sbb
inc
call
retf
mov
stc
inc
les
(bad)
aad
mov
inc
retf
jb
pusha
ja
mov
xchg
pop
xor
xor
mov
or
es
and
das
dec
inc
xor
jmp
jb
sub
popf
in
mov
and
xchg
repnz
popa
xchg
sub
in
inc
jle
pop
or
jne
xor
sbb
lods
repz
mov
pop
pop
gs
and
jns
push
mov
int
cmps
add
gs
xchg
ja
pop
out
jb
cmps
stos
and
sbb
es
ins
xchg
loopne
xlat
dec
retf
shl
out
inc
(bad)
nop
mov
cli
xor
add
shl
mov
sahf
rcl
fadd
sahf
sbb
pop
xlat
repz
les
mov
push
ds
or
test
jmp
xchg
das
dec
aam
or
pop
pop
aad
dec
xchg
jne
nop
push
popa
jnp
inc
sub
push
inc
mov
pop
loop
jo
imul
push
fcomp
xchg
dec
std
dec
int
push
repnz
push
or
out
and
rol
or
aad
repnz
sbb
or
gs
test
movs
jb
add
shl
mov
push
mov
shr
mov
into
jl
imul
mov
movs
out
movs
jmp
add
and
mov
clc
pop
pop
repnz
pop
inc
imul
shr
outs
add
or
mul
test
adc
mov
xchg
xor
cdq
add
shl
pop
(bad)
jle
sub
push
scas
retf
fdivr
ins
jo
xor
push
sub
pop
iret
dec
in
test
cmp
rol
fbstp
gs
(bad)
out
gs
cs
mov
dec
dec
mov
sub
cdq
push
mov
fild
push
aad
xor
mov
rcl
(bad)
(bad)
test
and
cmp
inc
dec
fisubr
jmp
enter
sub
test
mov
jle
pop
dec
xor
ret
(bad)
fsub
retf
inc
cld
xor
push
movs
pop
cwde
stc
adc
jecxz
shl
aam
mov
mov
(bad)
fld
bound
pop
xor
sub
mov
stc
je
dec
neg
or
or
lock
popf
push
jbe
nop
inc
push
es
pop
sub
jb
fld
aas
lds
or
mov
cmps
and
or
rcl
sbb
outs
je
mov
ss
leave
aam
sbb
xchg
sub
pop
sar
inc
fsub
mov
mov
mov
inc
movs
aas
xchg
or
push
rcr
dec
mov
or
sbb
pusha
jbe
add
add
mov
mov
js
fld
add
sub
hlt
xor
add
dec
mov
push
stos
pop
jecxz
push
dec
push
iret
adc
(bad)
scas
iret
je
xchg
popa
scas
mov
fld
ins
rol
inc
cmps
ins
push
in
lods
test
test
in
pop
mov
add
bound
jno
or
clc
addr16
in
and
out
cmc
mov
and
retf
mov
iret
sbb
pusha
mov
xchg
pop
or
arpl
fisub
pop
inc
icebp
je
mov
loope
fs
lock
mov
push
xor
(bad)
push
and
sahf
jb
and
jle
adc
out
adc
dec
(bad)
repnz
into
in
push
mov
adc
lea
shr
push
mov
dec
sbb
xor
push
push
xchg
out
sbb
loopne
hlt
and
mov
(bad)
loop
dec
lods
and
aas
xchg
xor
mov
shr
gs
fld
push
mov
sbb
mov
(bad)
mov
test
cmps
imul
cli
xchg
push
aas
jb
xor
cmp
xlat
pop
(bad)
pop
mov
fcom
add
(bad)
pop
inc
(bad)
out
xor
test
(bad)
mov
jb
xchg
js
div
dec
call
adc
js
aad
add
mov
jmp
sub
cmps
dec
(bad)
mov
sub
cmp
mov
in
addr16
fisubr
pop
dec
mov
pop
lea
fst
jl
adc
(bad)
mov
cmps
xchg
push
das
movs
xlat
inc
cwde
jecxz
lods
int
popf
sti
xor
stc
dec
adc
xchg
not
pushf
mov
pop
mov
add
adc
outs
fcomip
sbb
rcl
xor
adc
mov
push
outs
and
or
(bad)
imul
sbb
adc
(bad)
cmps
push
(bad)
inc
jnp
jmp
js
call
or
lahf
adc
push
push
test
(bad)
stc
jae
das
inc
cmp
jge
push
adc
inc
(bad)
pusha
and
mov
jp
adc
mov
or
test
pop
addr16
pop
popa
mov
and
xor
mov
dec
fcom
mov
inc
cmp
fwait
aaa
push
test
clc
xchg
cs
cmps
lahf
sub
mov
mov
push
out
int3
push
pusha
ins
pop
xchg
retf
add
adc
jno
in
push
xchg
adc
mov
shl
sub
adc
jl
cmp
dec
pushf
or
mov
test
sti
call
jo
jae
adc
cdq
adc
inc
nop
(bad)
push
jp
fst
jp
test
mov
xor
lahf
rol
jmp
mov
mov
jae
push
or
out
jmp
add
test
jg
xchg
(bad)
out
jmp
jge
jae
sbb
call
cmp
cmp
adc
shl
sub
sbb
outs
dec
pop
mul
sahf
or
out
imul
ret
cmp
fnstcw
pop
loop
leave
xlat
les
cmp
sub
xor
out
in
outs
shl
ins
adc
out
and
rcr
nop
mov
sbb
dec
add
pop
dec
adc
pop
sbb
aas
jmp
popa
cwde
mov
scas
retf
pusha
xlat
mov
adc
push
push
and
push
dec
aas
out
push
or
call
sbb
push
aam
ficom
cmp
out
std
rol
int3
shr
and
cwde
or
dec
arpl
es
push
inc
cmc
push
add
add
jge
gs
bound
es
out
add
pop
push
aad
cmp
pop
dec
fmul
retf
jnp
popa
xchg
imul
and
jp
mov
sub
push
movs
in
adc
pop
inc
cmp
sbb
or
push
lds
pop
repz
ins
mov
int
jle
push
fld
fs
or
mov
inc
mov
mov
jg
inc
push
inc
add
popa
mov
mov
or
out
push
sbb
retf
push
inc
cmp
xor
adc
dec
adc
in
sbb
clc
push
fcom
jae
(bad)
lahf
or
fist
pop
ficom
xlat
inc
mov
mov
lods
jb
fsubr
mov
(bad)
jl
out
mov
test
mov
pop
ds
mov
or
into
adc
mov
fld
cs
je
repnz
pusha
or
not
mov
push
pusha
retf
adc
xor
adc
pop
and
imul
or
mov
mov
daa
push
in
sti
dec
inc
sbb
mov
mov
mov
mov
mov
mov
xor
sub
dec
fild
cmps
movs
cdq
loope
xchg
bound
cmp
daa
mov
xchg
jecxz
jecxz
push
sbb
aam
inc
(bad)
mov
(bad)
cmps
pop
inc
mov
ret
inc
(bad)
mov
inc
jg
fwait
hlt
hlt
addr16
jle
mov
xchg
push
retf
dec
push
inc
mov
test
fidiv
and
xchg
push
pop
sbb
mov
xchg
popf
xor
mov
mov
xchg
add
fild
adc
(bad)
je
mov
jecxz
cld
cmp
call
fwait
adc
movs
push
leave
mov
inc
fcom
stos
imul
stos
xchg
sbb
sub
mov
inc
pop
add
mov
push
aaa
inc
(bad)
jmp
mov
ja
cmp
jbe
mov
push
jmp
dec
hlt
adc
aas
ficomp
and
pop
adc
push
sbb
sub
jecxz
pop
(bad)
adc
(bad)
retf
ss
mov
mov
fwait
fs
bound
aam
(bad)
fstp
pop
sub
mov
add
outs
and
cmps
loop
mov
or
call
cmps
mov
lds
in
dec
enter
sub
retf
jle
aaa
mov
inc
push
or
cwde
sub
inc
adc
adc
sbb
cmc
stos
imul
mov
xor
cmp
scas
fdivp
loop
mov
call
movs
xchg
jecxz
test
xlat
xchg
and
icebp
je
stos
rol
dec
(bad)
jmp
aas
xchg
and
jge
dec
dec
xchg
aas
cld
imul
stos
push
out
cwde
(bad)
imul
adc
mov
pop
pusha
in
ds
outs
dec
ror
call
ins
sbb
sub
and
aam
xor
cld
sub
or
(bad)
lods
push
repz
loope
pusha
sbb
jne
mov
outs
iret
jb
push
les
fbstp
dec
dec
nop
jnp
xchg
outs
xchg
ins
and
sti
cmp
sub
mov
cli
jmp
repz
(bad)
mov
pop
in
jae
xchg
mov
imul
test
(bad)
or
fwait
sbb
pop
jno
outs
cmp
push
inc
sub
in
or
(bad)
push
sub
add
pop
pop
repz
fwait
clc
jl
mov
mov
retf
mov
jmp
xchg
mov
(bad)
lods
iret
inc
push
cmp
mov
sub
cld
sub
frstor
lods
in
add
stos
and
pop
shl
popa
imul
dec
mov
jge
sbb
sub
loop
push
jle
jmp
sub
and
cmp
push
mov
mov
and
out
out
adc
test
retf
(bad)
jne
xchg
xchg
mov
into
jge
and
jge
mov
push
push
(bad)
sti
sahf
push
cmps
or
fnsave
or
or
imul
jp
pop
fadd
ins
inc
mov
and
xor
push
sub
retf
imul
fnstsw
mov
stos
ficomp
lods
jns
mov
addr16
inc
push
stc
lods
sub
sub
adc
adc
mov
pop
adc
pop
xchg
data16
pop
mov
jecxz
loop
xchg
sahf
stos
dec
sbb
in
aad
dec
jmp
cmp
inc
test
xchg
push
adc
cmps
or
pop
cdq
gs
mov
inc
fiadd
mov
pop
fs
in
mov
dec
in
sbb
sub
xor
cmp
push
rcl
pop
xchg
neg
add
push
rcl
or
loop
pop
es
inc
fsubr
test
jecxz
ds
popf
or
(bad)
mov
stos
movs
cmc
lods
je
xchg
mov
les
int3
inc
jne
mov
mov
mov
bound
fcom
shl
icebp
inc
inc
mov
jbe
xor
adc
cmps
jne
jnp
inc
jmp
sbb
xor
or
jle
in
movs
sub
dec
not
repz
stos
(bad)
std
test
mov
pop
(bad)
ins
lods
mov
dec
shr
dec
mov
(bad)
hlt
inc
dec
jmp
sub
xchg
and
jge
push
adc
in
test
jmp
test
(bad)
lods
push
cmp
aaa
das
loop
push
call
xor
icebp
mov
fs
cli
mov
repnz
sub
retf
sbb
pushf
and
jmp
sub
shl
and
(bad)
test
jge
xor
dec
loope
movs
idiv
ret
inc
inc
test
aas
dec
jecxz
js
or
sti
aaa
call
clc
bound
outs
xchg
dec
mov
popf
int3
lock
xor
out
sahf
clc
adc
je
ror
ja
xchg
or
and
xchg
push
out
or
xchg
out
and
jno
fdiv
ds
pop
push
inc
add
or
mov
and
outs
aas
sbb
mov
dec
xlat
add
mov
mov
out
(bad)
out
popf
add
push
inc
pop
adc
jmp
out
es
fwait
jae
js
jne
imul
xor
xor
retf
(bad)
jmp
aam
sbb
jnp
out
sbb
fchs
out
or
rcl
aas
arpl
(bad)
leave
ret
pop
or
push
loopne
lods
popf
test
inc
mov
cmp
jbe
popa
lods
sbb
jmp
lock
lds
aaa
push
xchg
push
repnz
mov
in
jnp
jno
loop
push
into
call
adc
fld
add
test
shl
xor
pop
or
ds
pop
mov
cmp
pop
sub
repnz
mov
xchg
aas
sub
lods
int3
inc
pop
sbb
sub
and
cwde
or
fdiv
jle
adc
retf
xchg
mov
ret
dec
(bad)
out
pop
jle
das
into
ret
call
cmp
repz
(bad)
dec
cmp
inc
sbb
xor
cmp
or
and
aaa
rol
add
push
push
retf
je
mov
aad
imul
repnz
add
push
dec
dec
mov
movs
ss
xchg
outs
xchg
cmps
mov
imul
test
cld
add
mov
sbb
dec
jmp
cmps
and
test
nop
jb
repnz
out
push
in
ror
pop
es
(bad)
xlat
test
mov
scas
repz
pop
mov
test
cdq
sub
xchg
lods
mov
push
inc
push
das
(bad)
js
fimul
inc
popa
pop
pop
inc
in
fidivr
adc
push
or
dec
push
fwait
rcr
jbe
adc
cmp
xor
(bad)
mov
inc
cs
test
loop
fwait
pcmpgtw
pop
scas
hlt
pop
push
mov
xchg
dec
pop
test
push
jnp
lahf
xor
std
jmp
push
dec
shl
out
icebp
xchg
leave
aam
lds
adc
sbb
and
sbb
adc
jle
stos
mov
sub
dec
sub
mov
pushf
xchg
fbld
jns
or
xchg
jmp
lods
cmp
ret
pop
leave
out
dec
pushf
scas
and
(bad)
mov
sbb
repnz
nop
sub
not
out
repz
push
das
enter
mov
xchg
sbb
push
bound
iret
or
jo
aaa
nop
loopne
lods
aad
jae
fs
test
jge
xor
(bad)
lock
mov
or
mov
pop
or
sbb
inc
nop
mov
mov
cld
pushf
xchg
lock
mov
nop
les
pop
pop
xchg
jle
dec
cs
loopne
imul
inc
cwde
jg
mov
mov
adc
test
out
into
dec
adc
sti
lock
dec
cmp
test
test
jmp
xor
add
pop
cli
(bad)
and
add
scas
fnstcw
mov
mov
dec
leave
dec
dec
push
fisub
and
outs
push
adc
sub
xchg
imul
ins
cmp
xlat
movs
cmp
mov
push
iret
push
pop
jne
or
stc
pop
outs
sub
or
test
push
int3
outs
movs
hlt
adc
xchg
call
or
test
jmp
jno
retf
cmp
ror
xchg
bound
push
xchg
mov
repz
sbb
cs
bound
push
ss
inc
inc
popa
xchg
pop
imul
xchg
xor
xor
jb
ret
outs
mov
lea
nop
mov
jmp
adc
out
mov
call
rcr
vaddps
popa
aad
mov
pushf
add
add
(bad)
adc
(bad)
jmp
mov
sbb
sbb
mov
out
popa
imul
or
ret
push
popf
mov
inc
daa
and
clc
add
adc
mov
and
dec
out
mov
(bad)
mov
stos
shl
shl
cld
in
test
cmp
and
xchg
aam
jecxz
cmp
push
fnsave
fimul
jno
(bad)
xor
jbe
add
rol
push
sahf
adc
and
sbb
mov
dec
fnstcw
pop
ret
cmps
mov
out
fcomp
inc
xchg
xchg
mov
jae
rol
push
test
push
inc
jp
movs
or
xchg
test
fdivr
jmp
inc
stc
call
jg
fldln2
mov
jle
sbb
les
sub
fld
fld
rol
mov
(bad)
mov
mov
xor
arpl
int3
outs
adc
cmps
(bad)
loopne
or
(bad)
cmp
dec
cmps
popf
mov
fstp
push
mov
movs
jno
mov
ret
in
addr16
sbb
mov
ret
ins
cld
inc
jno
popw
push
out
out
shr
mov
xchg
push
and
mov
repnz
mov
dec
or
or
xlat
cmp
outs
hlt
adc
fist
xchg
jg
push
mov
mov
je
shr
out
cs
sahf
sti
ja
pop
(bad)
rcr
adc
test
adc
into
sbb
ror
or
stos
retf
lock
lods
and
mov
imul
mov
jp
push
sub
clc
add
sldt
mov
popa
inc
inc
fdivr
mov
cwde
adc
sbb
jno
inc
cwde
mov
daa
lahf
adc
adc
int
sub
rcr
add
adc
sub
ja
mov
cmps
or
sub
jno
mov
lods
ja
sbb
inc
popf
lock
sbb
add
xor
xchg
test
inc
mov
pop
mov
popf
mov
sub
sub
jmp
jnp
repnz
dec
pop
cdq
xchg
push
inc
pop
or
dec
and
adc
es
xor
arpl
imul
clc
arpl
add
adc
dec
ins
add
movs
cmc
jne
popf
push
xor
sti
aas
push
aad
int
dec
add
jmp
mov
xchg
jp
scas
sub
(bad)
movs
pop
stos
sub
mov
xor
bound
mov
add
repnz
int
jp
hlt
test
push
je
lock
push
add
pop
aad
jl
sbb
shl
push
cmp
xor
mov
int3
cmp
inc
and
daa
scas
push
pushf
dec
imul
es
inc
stc
inc
mov
add
inc
call
jle
test
push
sbb
and
ret
dec
(bad)
adc
mov
sbb
mov
xchg
and
or
in
jbe
fld
jb
adc
frstor
les
sbb
ss
adc
add
movs
dec
mov
iret
pop
jp
mov
in
mov
mov
xchg
out
mov
ja
pop
test
jmp
rcl
xor
inc
sbb
cs
arpl
mov
cmp
enter
inc
sub
lods
cmp
adc
pop
dec
or
inc
cmp
lock
or
mov
fadd
fwait
lods
mov
gs
dec
jmp
xchg
int
dec
push
repz
adc
pop
cmps
adc
xchg
fdiv
cs
mov
js
mov
mov
imul
adc
mov
and
jo
add
pop
arpl
inc
pushf
(bad)
push
pop
not
fld
xor
test
pop
cmp
mov
mov
sahf
xor
mov
and
jbe
idiv
cmps
jp
into
arpl
push
in
popa
test
xchg
ja
xchg
dec
inc
add
enter
inc
mov
cwde
cmps
leave
xchg
div
jns
dec
mov
jl
imul
pop
mov
xchg
sub
mov
xchg
ror
cld
sbb
xchg
xor
ins
imul
add
(bad)
jb
pop
cmp
out
add
iret
ror
xor
cmp
js
popa
ds
in
(bad)
mov
mov
cmp
fiadd
jb
and
fimul
add
mov
ret
xchg
mov
inc
mov
or
ja
jmp
mov
cdq
clc
cmc
pop
sub
push
test
aad
repz
sub
jnp
or
arpl
rep
jle
xchg
(bad)
pop
cli
call
adc
push
call
inc
(bad)
imul
repz
mov
dec
mov
jge
shr
cli
jno
jno
jno
imul
adc
push
pop
into
pop
imul
cmp
fcomp
pop
add
and
xchg
cmp
inc
jmp
and
mov
jg
jne
mul
test
pop
mov
test
and
fistp
push
addr16
pop
cmp
das
rcl
dec
mov
movs
mov
xchg
ficom
retf
xchg
pop
mov
nop
cmp
jne
stc
cmp
pop
dec
mov
sbb
mov
fnstenv
push
adc
jne
push
jnp
jge
sbb
das
sub
or
hlt
aam
call
test
sub
lds
in
pop
xchg
adc
les
movs
pop
cmps
bound
hlt
xor
jae
clc
inc
fld
mov
or
inc
adc
cli
addr16
dec
stos
lea
(bad)
aad
mov
xor
ficom
and
jne
(bad)
xor
lock
push
es
mov
sbb
sti
test
fwait
call
int
ret
cmp
div
sub
mov
mov
pop
adc
out
add
ins
mov
lock
mov
add
cli
lds
inc
lahf
inc
inc
ins
mov
inc
retf
inc
xchg
cmp
dec
jmp
adc
shl
mov
inc
sub
sti
outs
rol
ins
push
stos
outs
mov
add
cmc
cld
lock
inc
xchg
sar
out
push
in
push
popa
lahf
mov
and
cli
leave
sti
inc
out
dec
cmp
pop
inc
xor
scas
sub
pop
xchg
retf
mov
nop
dec
fsubrp
pop
int3
fs
(bad)
inc
rcr
push
push
dec
out
jns
jle
jp
out
inc
retf
(bad)
call
stc
imul
dec
inc
lahf
cmp
rcr
mov
xor
inc
pop
add
mov
cdq
push
fimul
adc
xchg
or
xor
jmp
xchg
rol
aad
pop
hlt
or
lea
gs
popa
add
test
fisttp
mov
push
in
add
cs
frndint
sti
mov
sub
(bad)
imul
cmc
push
dec
pop
bound
or
add
and
jmp
js
and
repnz
sub
loope
and
jp
int3
rcr
sbb
jnp
sbb
sub
ret
and
jnp
mov
fs
pop
add
mov
xchg
xchg
inc
fisubr
out
pop
inc
pop
scas
retf
cmc
pop
js
pop
or
cli
pop
pop
ret
jmp
mov
add
dec
inc
add
mov
or
scas
pop
imul
and
ss
dec
scas
ins
call
mov
inc
adc
(bad)
ret
out
xor
(bad)
enter
jae
sub
out
jmp
and
cmps
adc
inc
frstor
das
add
sub
push
pop
xor
(bad)
pop
(bad)
fisubr
mov
cli
xor
scas
or
xor
mov
popa
pop
xchg
jmp
xchg
cmp
into
push
push
fbld
add
(bad)
xchg
add
fs
adc
mov
fs
cld
mov
shr
sbb
iret
aad
(bad)
mov
popa
fwait
mov
(bad)
push
test
push
add
push
leave
cmp
sub
adc
leave
sbb
xchg
dec
in
dec
push
sub
adc
out
in
mov
out
mov
mov
sbb
push
mov
and
call
dec
ja
scas
mov
scas
jo
imul
and
inc
fisub
push
dec
fst
adc
fst
test
xlat
jmp
jl
sbb
hlt
int
pop
dec
mov
fistp
sub
(bad)
dec
xchg
xchg
cdq
jmp
inc
xchg
cld
push
rcr
sub
or
nop
xchg
mov
std
iret
daa
js
cmp
fs
mov
xor
lock
les
lods
push
mov
daa
ficomp
out
retf
jbe
sar
pinsrw
adc
add
cmp
fnstsw
xor
retf
pop
cmp
pop
xchg
inc
xchg
mov
lock
dec
out
cld
int
pop
cmp
inc
(bad)
dec
mov
push
adc
sub
inc
ins
xor
sub
sbb
les
mov
push
cli
pop
and
mov
and
jb
and
dec
cdq
sbb
arpl
adc
pop
add
cmp
inc
push
imul
js
jmp
(bad)
jl
add
mov
jb
ss
rcl
iretw
pop
mov
xchg
push
stos
adc
shr
adc
xlat
popa
jno
mov
or
and
sahf
aam
adc
add
(bad)
(bad)
ficomp
out
mov
pop
jno
and
repnz
fbld
or
cmc
or
int3
inc
das
mov
push
or
les
icebp
out
movs
std
cmp
arpl
adc
push
cmc
jns
inc
fs
and
jmp
sub
mov
jl
dec
lods
adc
cmp
fisub
dec
dec
ds
fisttp
cmps
cmps
inc
dec
das
cld
adc
and
push
xor
mov
pop
jge
xchg
xchg
mov
cmp
rcr
cli
sub
jp
xor
xor
add
aaa
sbb
and
mov
fcomi
in
jo
ja
pop
(bad)
jmp
enter
push
xchg
inc
add
jge
into
test
push
popa
pushf
mov
out
fst
inc
sbb
ins
sub
cmp
push
js
xor
hlt
add
data16
mov
mov
cmp
sti
push
sbb
mov
imul
xchg
cmp
int
jnp
mov
adc
test
xor
adc
enter
pop
repz
inc
(bad)
sahf
(bad)
in
mov
dec
cmp
fdivr
popf
cmp
jl
sbb
dec
popf
outs
push
sbb
xchg
mov
mov
pushf
pop
jae
inc
mov
int3
mov
xor
cmps
inc
and
push
mov
lahf
dec
fs
xchg
and
push
mov
and
movs
pop
xchg
cmp
mov
xor
or
add
push
cdq
and
xchg
and
mov
xor
mov
in
xor
movs
add
cmp
sahf
pop
aad
cmp
test
scas
push
loope
inc
xlat
stos
out
inc
xor
popaw
popa
mov
push
inc
sbb
sahf
call
add
in
sbb
rol
mov
int3
ins
scas
xchg
jmp
cmc
xor
pop
pop
and
rcl
and
and
hlt
xor
dec
(bad)
sbb
pop
test
test
cmp
sub
inc
xor
adc
lahf
out
mov
pop
dec
inc
dec
movs
inc
sbb
push
xor
dec
loop
test
(bad)
pop
dec
and
lea
xchg
stos
dec
push
loopne
mov
fadd
daa
imul
cwde
fist
scas
mov
lea
lahf
or
fdivr
test
dec
ds
fbstp
arpl
jmp
retf
ins
int
jl
mov
ds
mov
add
fbstp
lock
in
mov
adc
cwde
or
sbb
retf
dec
mov
inc
inc
cwde
dec
jecxz
mov
movs
rcr
imul
jg
inc
ins
ins
test
xchg
in
jne
and
shl
push
sar
xchg
mov
fcom
xor
loopne
pop
std
pop
adc
retf
pop
cmp
int3
ret
in
fucomi
in
sub
add
cli
xchg
push
add
push
adc
pop
scas
cdq
aaa
and
xchg
xor
or
push
sub
jecxz
loopne
rcr
inc
mov
inc
mov
(bad)
iret
fdivr
add
aas
out
mov
pushf
jl
xor
or
inc
mov
sbb
out
xor
sub
in
(bad)
inc
retf
sub
mov
pop
adc
(bad)
in
or
rcr
hlt
or
(bad)
pop
dec
adc
or
retf
pop
inc
xor
scas
sub
ins
inc
aas
and
stc
push
or
sbb
dec
imul
and
outs
jle
add
(bad)
jno
cmp
std
dec
test
lahf
lea
or
adc
xchg
aas
pusha
xor
push
xor
repnz
xor
inc
add
call
or
mov
push
jno
and
ins
inc
in
imul
(bad)
jbe
dec
mov
hlt
sub
mov
shr
and
cmc
pop
clc
movs
sub
sahf
cdq
leave
cmps
int
fwait
cmp
in
jbe
ret
push
retf
push
mov
pop
mov
popf
in
dec
adc
cmps
xchg
jb
mov
adc
cmp
cmps
gs
inc
enter
jge
ja
addr16
loopne
leave
or
push
adc
not
out
sbb
and
xor
es
leave
inc
lods
sbb
in
and
sbb
mov
fisub
lods
mov
std
inc
sbb
jb
mov
cmp
sub
mov
leave
pushf
mov
add
ror
leave
lahf
mov
aam
mov
and
xchg
push
add
and
fbstp
push
sub
adc
jmp
mov
mov
fbld
xor
pusha
xlat
movs
ins
fstp
push
push
dec
ficomp
pusha
xlat
lds
add
aam
fcmovne
movs
push
scas
lea
(bad)
sub
push
cmp
repz
stos
push
or
and
in
sub
cmp
mov
jl
or
dec
bound
xchg
addr16
neg
dec
mov
xor
das
shr
and
xlat
push
repnz
mov
jno
xchg
or
rcl
movs
cdq
push
enter
and
sbb
inc
xchg
ins
mov
leave
xor
sub
adc
out
pop
fadd
jnp
add
retf
and
pop
call
xlat
mov
push
cli
mov
dec
movs
icebp
fist
in
inc
inc
in
xchg
jmp
shl
lods
or
inc
mov
inc
leave
push
jne
or
fsub
or
adc
dec
mov
sub
pop
sub
das
in
lock
fisttp
enter
xchg
jmp
xor
out
add
call
mov
cmp
cmps
adc
rcr
fadd
(bad)
cld
inc
dec
xchg
adc
inc
mov
fcomi
mov
cmp
je
dec
xchg
shl
push
cmp
xchg
xchg
add
jns
gs
das
(bad)
jmp
in
scas
pop
xchg
cmp
mov
shl
xchg
es
addr16
push
ficomp
retf
fstp
mov
pop
test
sub
sub
xor
cmp
ret
out
add
xor
sub
mov
adc
sti
test
xor
or
push
stos
add
lods
cmp
das
js
sbb
mov
jp
aas
pop
pop
(bad)
test
dec
int3
rol
jmp
or
mov
mov
and
adc
sbb
mov
sbb
lods
add
jo
mov
xor
fidiv
(bad)
lds
pushf
cmp
into
imul
sbb
jb
cdq
movs
jmp
adc
pop
cmp
dec
push
jg
or
dec
bound
fsubr
inc
cmps
sti
xchg
dec
cld
ret
mov
push
int3
add
repnz
pop
inc
aad
push
xchg
push
sbb
push
popf
mov
jns
push
(bad)
ins
(bad)
push
aas
outs
cmp
mov
jl
sub
add
push
sub
xor
dec
xchg
xchg
inc
in
jge
push
adc
jmp
jno
in
push
es
cmp
in
out
clc
es
and
sub
es
inc
shr
mov
lahf
mov
sub
jl
push
mov
stc
mov
sub
test
pop
adc
mov
mov
(bad)
fdiv
push
stos
movs
add
fbld
adc
or
shr
pop
cmps
jo
gs
jmp
into
aam
dec
pop
add
stos
cmps
rcr
mov
das
imul
adc
push
mov
repz
pop
mov
cli
jae
cmp
push
mov
je
daa
std
xor
xchg
and
iret
xor
mov
push
or
sbb
enter
sbb
push
xor
xor
add
dec
adc
xchg
dec
xlat
(bad)
push
adc
pop
jle
mov
inc
aam
aas
xor
cs
jmp
loop
dec
les
aam
xor
out
fistp
stc
pop
mov
jb
int
fs
jmp
mov
cmp
ror
and
(bad)
mov
movs
or
jmp
aaa
xchg
(bad)
dec
sbb
mov
(bad)
es
mov
fdivr
xchg
dec
push
dec
adc
loope
cmc
retf
fcmove
mov
ror
inc
repz
sbb
mov
jp
aam
jmp
pop
je
mov
adc
xor
sub
loopne
fwait
lds
inc
and
cmp
or
fmul
je
dec
mov
xchg
or
push
rol
mov
clc
sub
xchg
loope
push
test
call
fnstenv
mov
xor
in
or
int
adc
mov
inc
and
mov
fstp
cmp
adc
push
rcl
retf
mov
mov
ror
ror
sbb
outs
mov
mul
add
pop
ins
retf
aas
and
or
inc
ins
jmp
test
lock
leave
inc
loop
lea
sti
or
pop
sub
jl
mov
jle
jbe
in
push
xchg
repz
mov
xchg
test
bound
dec
or
jl
sub
jmp
fstp
scas
je
push
or
hlt
mov
(bad)
mov
sbb
jge
and
xchg
inc
push
mov
pop
mov
push
xlat
push
lock
loop
mov
ins
dec
xchg
or
pop
xor
pop
sub
cmps
aad
add
cli
mov
cwde
cli
add
ins
scas
dec
aam
aad
mov
push
xchg
dec
add
test
mov
jp
or
inc
mov
imul
push
cmp
cwde
pop
dec
test
sub
push
push
cld
lea
jl
addr16
adc
fsub
mov
aad
mov
sub
push
push
sub
adc
mov
sbb
jno
add
shl
xor
jnp
test
mov
xchg
mov
adc
test
loop
add
mov
cmp
(bad)
ficomp
pop
mov
(bad)
clc
movs
mov
push
(bad)
ins
mov
icebp
inc
(bad)
fldenv
imul
into
stc
cmp
cmps
je
mov
lock
dec
mov
call
mov
push
adc
push
jae
in
push
pop
cmps
sbb
mov
bound
leave
cmps
movs
outs
test
inc
push
pop
adc
out
jp
cmp
xchg
lock
lds
adc
dec
loopne
xlat
loop
sub
ja
das
(bad)
pop
sbb
rcl
(bad)
jl
out
rol
fmul
lock
loope
mov
inc
pop
jecxz
xor
sbb
adc
sar
outs
xchg
add
mov
pop
lods
cld
daa
dec
popf
sub
das
mov
inc
test
(bad)
fsub
retf
sub
daa
inc
dec
(bad)
cmp
inc
inc
add
fmul
mov
pop
sbb
or
jmp
clc
int
mov
test
pop
add
leave
xor
jl
inc
push
or
pop
adc
hlt
js
data16
sbb
mov
or
push
test
retf
stc
xor
push
sub
cmps
push
or
xor
add
imul
dec
or
fcom
imul
(bad)
out
adc
bound
loop
lods
add
rcr
mov
jo
je
sub
pop
pop
adc
lock
mov
cmp
nop
sbb
pop
cmpxchg
jge
inc
popf
sbb
inc
lods
dec
xchg
mov
pusha
sbb
xchg
pop
xchg
(bad)
loope
aas
adc
mov
jp
add
push
sub
xchg
fistp
lods
cld
popf
nop
inc
push
arpl
add
sub
sub
mov
mov
jmp
sahf
inc
inc
adc
jecxz
xchg
cmp
aaa
add
xlat
sbb
cmps
out
add
fcomp
movs
mov
xlat
ja
mov
inc
jle
cmp
mov
(bad)
xchg
sahf
(bad)
nop
adc
xor
retf
sahf
mov
mov
je
dec
div
jnp
int
hlt
mov
pop
jp
xlat
xchg
aaa
loopne
pusha
xor
jl
test
xchg
jmp
mov
iret
jmp
or
je
jbe
pop
lock
push
ja
sar
rol
mov
sbb
pop
jmp
(bad)
cmp
push
repz
dec
scas
mov
push
cmp
cmc
aas
push
jp
rol
push
mov
xchg
je
bound
or
movs
inc
pop
mov
push
int3
stos
jecxz
into
xor
sar
into
outs
retf
hlt
movs
sahf
out
and
xchg
sub
jb
pop
cmp
scas
push
mov
out
clc
sub
das
jae
cmps
(bad)
mov
adc
sbb
sar
aam
xor
push
sti
mov
neg
fnstcw
add
movs
ret
je
cmc
or
stos
inc
xchg
es
sti
jp
jg
movs
clc
xor
push
movs
jne
xlat
shl
out
cld
addr16
leave
xchg
repz
adc
jp
cwde
sbb
cmc
lds
jo
pop
rcr
cmp
add
icebp
iret
xlat
push
aad
data16
into
pop
fnstenv
xchg
aam
push
or
pop
popa
xchg
fwait
pusha
adc
imul
xchg
je
icebp
inc
mov
lahf
xchg
adc
gs
jmp
rcr
jns
iret
mov
dec
mov
pop
repz
inc
std
cmp
jbe
rcr
pop
xchg
xchg
mov
sti
jbe
xlat
jge
cli
or
sbb
cs
push
(bad)
(bad)
int3
test
xchg
dec
(bad)
repnz
mov
outs
movs
movs
xor
jge
add
jecxz
ins
in
cmp
adc
adc
and
sbb
sub
inc
jne
pop
fcmovb
cmps
pop
outs
dec
int3
sbb
pushf
xor
pop
sbb
xchg
mov
or
(bad)
call
cld
in
xor
xchg
xor
push
mov
repnz
pop
fstp
add
jmp
int3
mov
scas
cmps
hlt
pop
or
sbb
rcl
or
add
inc
ins
inc
test
inc
cmp
jecxz
mov
push
cmp
lea
add
push
adc
mov
push
xchg
and
pop
dec
and
fnstenv
push
in
ror
mov
into
mov
jne
(bad)
inc
cmp
fs
dec
ror
adc
int
jge
test
sbb
ret
sub
xchg
and
jle
imul
mov
fmul
xchg
xabort
cli
in
ret
pop
sbb
(bad)
ficom
popa
movs
mov
(bad)
cwde
fcomp
cmp
fnstcw
pop
les
mov
lods
jns
retf
pop
arpl
adc
dec
arpl
xor
push
inc
ficomp
enter
xchg
imul
test
imul
cmp
jg
inc
test
pusha
mov
dec
dec
rcl
inc
dec
pop
sub
push
test
adc
cmp
jp
cmp
pop
neg
sti
loopne
(bad)
and
inc
outs
mov
jle
shl
into
jp
jo
fild
ficomp
xchg
lods
xor
call
pop
(bad)
adc
cmp
and
cmps
loope
jmp
mov
jp
cmc
stos
pop
(bad)
xor
fbld
mov
sbb
out
test
mov
test
pop
in
xchg
aam
jp
imul
mov
call
jecxz
cli
jecxz
dec
lods
nop
daa
iret
jns
loop
in
dec
push
xor
cmp
adc
ret
imul
out
dec
sbb
stc
xor
sbb
idiv
mov
push
dec
mov
sub
jne
stos
mov
js
repz
fldenv
fnstcw
inc
clc
je
dec
adc
jns
xor
(bad)
es
cmc
dec
fcom
in
dec
mov
dec
inc
push
aas
test
dec
sub
mov
dec
fcomp
cs
(bad)
mov
ins
jge
cmp
loopne
dec
cmp
mov
lods
jne
sbb
in
mov
jmp
jg
(bad)
lahf
dec
xor
push
dec
cmp
xor
into
(bad)
mov
xchg
loopne
pop
fnstcw
out
(bad)
pop
ret
cdq
pop
fisttp
(bad)
cdq
imul
xor
or
add
jne
sub
pop
mov
imul
push
retf
jmp
call
loopne
jmp
mov
cli
dec
fwait
int
xlat
sbb
fstp
push
(bad)
mov
rep
dec
and
fisttp
in
stos
test
out
neg
dec
xor
dec
jne
loopne
pop
sbb
mov
icebp
loope
(bad)
cdq
push
adc
adc
pop
stos
jns
stc
push
call
(bad)
mov
imul
xchg
pusha
or
outs
push
es
setle
adc
imul
xchg
into
pusha
pop
mov
mov
inc
inc
pop
popf
or
rcr
sbb
xchg
jo
shl
inc
out
push
leave
or
adc
push
lea
cld
and
retf
pop
inc
daa
inc
sub
(bad)
add
test
retf
aaa
inc
inc
scas
sub
sbb
xchg
jmp
fcmovbe
faddp
pushf
cmp
add
es
int
ret
imul
push
das
push
push
mov
jp
jnp
mov
arpl
xor
cmp
sbb
xor
clc
movs
add
mov
cwde
lods
jo
xor
jbe
test
push
sbb
call
jo
movs
addr16
mov
sub
push
pop
lahf
or
outs
push
in
sbb
ins
addr16
loopne
or
push
mov
add
outs
std
inc
mov
rcr
call
mov
clc
ins
or
sub
fsubr
ret
fisubr
imul
push
mov
stos
sub
retf
xor
into
sub
div
or
mov
sbb
mov
fs
aas
xchg
adc
ds
leave
cmps
(bad)
out
cmp
dec
sti
dec
xchg
xor
push
int3
out
push
lds
add
mov
sbb
pop
cmps
and
iret
sub
xlat
imul
pop
dec
add
inc
fs
bound
push
cwde
dec
ja
jl
mov
pop
and
or
fwait
inc
and
ins
mov
fnstenv
cld
leave
shl
cli
out
popf
or
push
pop
dec
cs
cmp
ds
xchg
outs
and
iret
in
int3
stc
scas
push
iret
fdivr
cmps
outs
int3
(bad)
adc
hlt
retf
xchg
xchg
lea
inc
test
(bad)
enter
xchg
jp
lods
xor
leave
mov
lds
jl
sti
scas
jecxz
adc
das
es
pop
lea
mov
test
lahf
movs
or
dec
dec
stos
sbb
fld
pop
jecxz
(bad)
or
and
inc
in
mov
daa
jg
push
inc
inc
icebp
fidivr
cmp
add
add
or
add
bound
js
jmp
ret
movs
in
fistp
xor
test
cmps
hlt
ins
push
jge
lock
mov
mov
js
cmp
test
mov
dec
inc
fisubr
xchg
push
inc
pop
xlat
es
aam
stos
fucomp
push
imul
cld
stos
jp
gs
ror
and
mov
aam
push
pop
jge
pop
or
fld
arpl
mov
loopne
sbb
cmc
es
dec
das
mov
ds
fisttp
adc
fstp
adc
loopne
jge
into
mov
add
dec
sub
xchg
leave
mov
xor
jmp
pop
jnp
les
pop
sub
or
jecxz
adc
mov
push
js
fwait
mov
push
push
shr
inc
fmul
(bad)
cld
fstp
in
shr
lods
mov
and
mov
or
xchg
jmp
add
fcomp
cld
xlat
sbb
ret
sbb
and
shl
fwait
mov
pop
inc
out
sbb
outs
mov
fstp
inc
shl
push
cmc
mov
adc
xchg
dec
aaa
jmp
addr16
and
retf
aad
pop
stc
pop
jmp
mov
xchg
(bad)
scas
inc
xor
dec
cli
ret
in
push
iret
aaa
jl
outs
jmp
ret
dec
mov
sar
add
sub
mov
xchg
ja
dec
sbb
or
sbb
or
mov
rcl
inc
mov
rcr
dec
(bad)
jnp
sub
add
xchg
rol
ja
out
ret
xchg
ret
cmp
adc
aam
fiadd
jle
sub
arpl
jecxz
pop
(bad)
ins
mov
xchg
dec
lods
mov
add
inc
push
add
ds
xor
hlt
ficom
lods
pop
in
sbb
pop
xchg
inc
add
gs
and
mov
pop
xchg
sub
ror
cli
mov
mov
jg
scas
mov
loop
adc
mov
add
push
data16
adc
scas
sub
aam
loope
push
push
push
and
pop
fisubr
dec
fld
fs
inc
test
inc
cmp
in
popa
scas
push
jo
ret
popa
lods
movs
mov
xchg
mov
and
xor
retf
xor
fisubr
sbb
pop
stc
repnz
out
repz
ret
ins
scas
jne
and
shl
outs
xchg
sbb
test
std
scas
(bad)
cmp
stos
mov
sub
sbb
(bad)
push
stc
ret
cmc
mov
shl
pop
sti
clc
jl
sar
xor
sbb
loop
das
and
and
or
repz
test
push
jb
mov
out
add
inc
call
mov
outs
fcmove
push
and
push
std
in
mov
and
pop
(bad)
mov
out
fstp
ret
jge
xchg
pop
lods
lock
(bad)
std
and
jle
adc
shl
sbb
add
aas
(bad)
pop
adc
mov
push
data16
movs
sub
lods
lock
mov
jmp
clc
mov
jmp
or
fs
xchg
pop
dec
dec
jb
or
movs
push
iret
retf
add
shl
xchg
jecxz
retf
xor
imul
mov
ret
inc
sti
aas
add
sahf
and
into
into
mov
int3
mov
sbb
movs
jo
neg
cli
movs
das
daa
or
xor
inc
lea
outs
inc
cdq
add
xchg
arpl
push
mov
iret
jb
into
mov
lods
ror
in
lods
pop
call
ss
in
jl
xchg
gs
pop
push
cmp
inc
jp
pushf
inc
mov
das
ror
cli
inc
stos
add
(bad)
jle
xchg
jle
ss
test
xor
mov
fdivr
xchg
push
dec
adc
mov
inc
mov
lea
fcmovnb
fnsave
(bad)
mov
xchg
mov
mov
cmps
push
mov
les
das
dec
sbb
or
ins
xchg
das
jp
sbb
jo
cdq
arpl
retf
jmp
cmps
je
or
add
and
jbe
jmp
fwait
xor
das
ins
and
pop
clc
mov
dec
std
ror
xlat
cmp
jg
fisub
popa
repnz
adc
lods
push
mov
pop
fldenv
inc
and
xchg
lahf
mov
daa
mov
sbb
xchg
arpl
jp
xor
jle
call
jle
pop
or
cmps
clc
push
jl
out
sahf
fstp
arpl
mov
std
les
pop
lods
test
lods
ficom
jmp
mov
dec
rol
cld
dec
cli
in
ins
or
push
fadd
inc
jne
pop
mov
stos
int3
les
push
fs
inc
sub
jecxz
in
repnz
scas
scas
inc
addr16
scas
pushf
ds
gs
outs
xchg
inc
or
mov
and
xor
popf
xchg
adc
mov
jecxz
daa
test
fistp
stos
rol
in
rol
nop
ins
dec
test
retf
pop
mov
inc
mov
adc
popf
cmp
xor
test
push
mov
adc
fs
cmps
call
in
out
dec
jo
in
std
clc
(bad)
and
xor
mov
psubq
or
jo
gs
xor
xchg
retf
jmp
aaa
or
pushf
retf
das
add
pushf
fxch
gs
retf
cdq
mov
xor
stos
jns
cmp
pop
inc
cmp
pusha
cmp
dec
xchg
pop
jp
jge
outs
inc
sub
mov
int
gs
idiv
sub
cmp
sbb
fstp
push
mov
jnp
sbb
and
pushf
or
int3
fbstp
cmp
pop
sbb
in
inc
xor
mov
adc
sub
das
int
loope
jl
cmps
push
pop
jo
das
push
das
retf
call
pop
hlt
dec
mov
sub
shl
jno
outs
mov
push
pop
shl
enter
inc
mov
fsubrp
das
outs
daa
push
lods
es
push
dec
into
clc
test
mov
adc
iret
and
les
lods
mov
aad
pop
in
cmps
xchg
aaa
mov
lock
dec
nop
push
xchg
xchg
idiv
test
ins
xchg
dec
fist
inc
push
aad
aad
fldz
jns
shr
inc
fisub
mov
cwde
ret
mov
mov
repnz
imul
clc
add
out
clc
mov
sub
stos
js
inc
push
retf
lods
sbb
lods
ja
push
sbb
pop
add
icebp
jp
inc
mov
xchg
sbb
hlt
ret
mov
test
mov
add
fimul
popf
ins
(bad)
loope
lea
adc
push
out
xor
dec
idiv
sub
jbe
les
push
and
xor
dec
mov
les
push
and
(bad)
pushf
test
mov
stos
ins
dec
pop
aas
lahf
cmp
adc
push
pop
mov
mov
fs
cmp
add
je
adc
test
out
lds
xchg
jmp
mov
movs
pop
mov
cmps
xchg
fistp
jne
(bad)
(bad)
inc
outs
fmul
retf
je
rcl
cmps
mov
dec
push
loopne
mov
sbb
xchg
mov
xor
push
cld
xor
and
das
push
dec
mov
daa
stos
jnp
scas
fwait
mov
inc
jno
jmp
xchg
add
jmp
sub
push
jns
mov
sub
stos
repnz
es
xor
jbe
mov
js
into
pusha
xor
outs
lahf
pop
ror
cmps
dec
xchg
or
cmp
aaa
sahf
fs
xor
pmulhuw
fs
pop
enter
(bad)
movs
pop
mov
jno
retf
adc
sbb
xor
mov
int
sub
xor
cmp
ins
cld
push
lods
jl
mov
inc
addr16
push
or
jmp
loop
fcom
retf
outs
clc
xchg
mov
and
jb
pop
cld
lods
retf
add
xchg
add
movs
(bad)
pop
cs
jecxz
(bad)
mov
jl
ret
dec
(bad)
pop
mov
stos
pop
fsub
dec
cmp
stc
mov
seta
xchg
and
mov
popa
adc
push
lahf
push
div
push
pop
test
inc
scas
xchg
jo
add
mov
lods
and
outs
out
mov
ja
xor
retf
mov
pop
je
aad
pusha
gs
pop
lds
(bad)
test
jb
out
push
retf
dec
and
retf
test
dec
mov
imul
add
pop
js
in
shl
int3
mov
jl
push
sbb
jge
outs
outs
sbb
adc
and
mov
sti
lock
inc
cmp
and
(bad)
xor
pop
mov
lock
xor
pop
push
aam
cmp
pop
cmp
je
daa
inc
mov
xor
sub
push
daa
cdq
mov
xchg
lods
imul
imul
adc
ins
xchg
bound
xchg
xchg
mov
daa
in
mov
sub
icebp
push
mov
mov
pop
sub
cmc
movs
jnp
jp
xor
fisub
imul
repz
not
mov
sbb
movs
repz
pusha
mov
pushf
lahf
inc
dec
daa
cdq
(bad)
lock
lods
cmc
sbb
idiv
cmp
lds
mov
in
xor
cmp
sahf
mov
retf
dec
sbb
sub
(bad)
fs
out
ja
mov
push
push
xor
jnp
dec
push
jge
fstp
out
or
aad
xchg
shl
cdq
jge
mov
or
jmp
sub
adc
inc
out
clc
or
test
mov
xor
test
mov
push
pushf
lea
and
mov
stos
push
aam
push
mov
jge
in
popf
mov
sbb
mov
in
es
push
push
pop
jge
sbb
sub
out
adc
stc
push
ss
mov
adc
cmp
add
ror
das
rcr
lahf
sub
test
or
rol
mov
sti
xor
jl
mov
je
dec
int
xchg
cmp
push
rcr
dec
inc
loopne
sub
enter
call
adc
jle
xor
pop
pusha
mov
sbb
sub
mov
xor
mov
xchg
movs
pop
push
repz
push
mov
lds
cmp
aas
dec
movs
mov
and
mov
mov
adc
inc
int
inc
arpl
leave
pop
or
sub
push
cmp
outs
cmps
(bad)
rcr
xor
inc
push
mov
add
idiv
test
aaa
xor
xor
push
in
inc
add
test
retf
jmp
std
test
jp
pushf
inc
jge
adc
push
repnz
stos
pop
je
jo
out
xchg
and
les
fs
stos
mov
loop
jo
cmp
xlat
in
mov
and
add
xchg
mov
outs
aaa
hlt
mov
sar
out
inc
(bad)
retf
div
push
add
mov
mov
xor
fimul
scas
and
leave
xchg
into
pop
cmp
pop
mov
outs
sbb
adc
push
mov
push
xchg
out
in
jg
dec
mov
mov
mov
jp
push
sar
ins
jbe
outs
cli
into
aam
jecxz
xlat
scas
in
push
adc
stc
sub
cwde
mov
pop
repnz
idiv
iret
pop
aaa
cld
inc
in
sbb
(bad)
pop
fdiv
inc
rol
fiadd
(bad)
jle
jbe
push
xor
cld
jbe
movs
cmc
cmps
pushf
jmp
xor
mov
sahf
les
and
jecxz
daa
jnp
(bad)
add
xor
lahf
es
data16
js
stos
lea
pop
(bad)
push
mov
pop
and
pop
js
retf
adc
loop
xchg
stos
js
cld
mov
push
js
gs
dec
pop
pop
pop
pop
jo
pop
jecxz
dec
dec
sub
pusha
lea
or
sub
push
dec
jmp
in
outs
stos
jmp
imul
mov
or
mov
dec
mov
dec
jo
mov
mov
inc
das
cmp
mov
pop
ret
jle
mov
push
or
loope
xchg
icebp
sbb
test
mov
dec
dec
neg
or
popa
sbb
je
sahf
arpl
nop
rep
ins
fisttp
push
mov
and
and
mov
and
ret
cdq
add
sbb
and
mov
es
nop
pop
ret
fldcw
xlat
in
inc
cdq
test
pop
sub
lea
rcl
ds
loop
leave
hlt
cmps
jmp
test
fldenv
cmp
fisttp
call
push
data16
sar
into
xchg
ror
jb
aad
pop
test
add
(bad)
je
data16
mov
jge
and
hlt
cdq
inc
jns
out
cmp
adc
and
sbb
es
clc
inc
repz
cmp
mov
inc
xor
cmc
rcl
in
ss
mov
imul
jmp
pop
inc
xchg
pusha
sub
ret
lds
and
icebp
(bad)
adc
add
xor
pop
adc
out
sbb
lods
aaa
mov
xchg
cli
call
js
add
shr
jge
jmp
pop
xchg
adc
imul
in
hlt
ss
jmp
sahf
(bad)
sbb
or
pop
jae
add
je
nop
dec
stos
pop
mov
push
nop
add
push
push
(bad)
mov
rcr
push
repz
repz
outs
sbb
movs
cmp
stos
cmp
stos
push
push
fisubr
inc
scas
inc
adc
sub
in
cmp
cdq
adc
mov
dec
xor
das
(bad)
push
and
sbb
lahf
inc
push
fwait
out
call
pop
shl
push
call
fcomp
ror
(bad)
stos
outs
push
stos
cmp
jge
mov
adc
stos
sar
jl
jns
add
xchg
jmp
pop
lock
sbb
sub
push
jnp
inc
ins
and
and
inc
pusha
mov
aam
xchg
aam
inc
cld
jnp
sbb
aam
arpl
push
pop
lock
bound
and
fldenv
sbb
xor
inc
pusha
or
ficom
dec
or
ret
mov
mov
pop
pop
rep
sbb
cmps
sbb
(bad)
outs
push
cmps
shl
push
and
adc
out
stos
in
jl
fsubr
xchg
jae
add
arpl
pop
xchg
sbb
adc
in
push
fadd
(bad)
adc
sub
aas
repnz
jno
loop
pusha
xor
pop
xor
call
pop
div
add
xchg
xor
sub
push
aam
sub
push
in
and
shr
jmp
mov
mov
jle
pop
sub
and
mov
fistp
push
popf
(bad)
test
xchg
rcr
enter
loope
call
loop
shl
scas
adc
mov
mov
js
cmc
adc
pusha
data16
mov
jae
fcom
pop
lahf
aaa
sub
cmps
pop
scas
imul
outs
arpl
movs
dec
adc
icebp
(bad)
mov
jbe
out
xchg
push
pop
cwde
sbb
test
add
mov
cmp
loop
mov
mov
sub
vmwrite
sub
push
nop
dec
sti
ret
pop
xchg
stos
cwde
adc
inc
in
mov
push
push
or
add
pop
test
adc
imul
add
sbb
xchg
add
mov
xchg
adc
arpl
mov
xor
rcr
adc
xchg
pop
test
daa
jmp
xchg
repz
xor
adc
jg
jno
mov
jne
inc
jae
shr
fcmovb
push
dec
jbe
mov
jne
out
out
jb
bound
sbb
cmc
div
cmp
outs
lds
xor
jp
cmps
push
xchg
scas
retf
push
fstp
dec
jno
icebp
movs
pop
pop
jmp
ins
(bad)
ins
push
mov
add
nop
ins
or
dec
inc
addr16
pop
and
adc
out
f2xm1
xchg
mov
hlt
mov
test
jmp
fcompp
jmp
xchg
and
adc
mov
sbb
sub
cmc
cmp
movs
dec
repz
idiv
adc
retf
fstp
cmp
stos
sbb
mov
fidivr
xor
pop
inc
jbe
jno
sbb
gs
inc
lods
(bad)
(bad)
ds
aad
and
dec
mov
out
lock
jg
stos
xchg
dec
fmul
push
add
sar
pusha
sub
and
ror
hlt
fbld
add
sbb
push
call
or
or
sbb
xor
outs
push
mov
iret
jl
jp
inc
jecxz
pop
adc
not
fldcw
fstp
sub
adc
nop
in
ss
push
mov
es
stc
ret
inc
adc
fs
cmps
sar
je
cld
push
sbb
in
dec
outs
or
inc
daa
pop
neg
loope
jne
and
mov
jecxz
lds
adc
mov
popa
jmp
add
mov
(bad)
xchg
inc
(bad)
call
ret
ret
add
pop
fwait
cld
adc
jne
or
loope
icebp
mov
mov
push
daa
iret
stos
int3
shr
lahf
xor
call
dec
jno
pop
xchg
xchg
jmp
mov
outs
cmp
and
mov
push
mov
pusha
sub
lock
shl
push
cmc
movs
ss
sti
pop
mov
xor
add
inc
xchg
mov
or
xchg
and
xor
sbb
cmps
(bad)
clc
jnp
aam
shr
xor
cmp
sahf
in
loopne
movs
sub
pop
adc
fld
cdq
add
lahf
stos
cmps
jge
cli
add
mov
cmp
mov
sbb
iret
inc
sti
push
ins
or
loopne
outs
and
(bad)
lahf
lods
shl
or
rcr
fcmovnb
lds
imul
fst
adc
inc
lods
jno
mov
inc
mov
enter
cmp
test
jle
ja
jmp
(bad)
dec
or
(bad)
cmp
xor
rol
lea
fs
outs
hlt
out
jl
pop
xchg
mov
dec
arpl
rol
(bad)
out
push
ins
dec
xchg
mov
sub
je
pop
pop
out
lahf
loope
cmp
dec
movs
add
push
sbb
adc
pop
test
mov
add
pop
cmc
fmul
je
std
mov
pop
or
inc
sar
add
popf
aad
movs
call
push
jo
inc
xchg
inc
movs
xor
ds
dec
nop
std
jmp
ficomp
jns
not
inc
push
mov
push
out
sbb
and
data16
cvtpi2ps
mov
push
hlt
movs
daa
ror
xchg
or
vandps
jb
xchg
or
add
mov
bound
repz
sbb
or
mov
into
outs
push
mov
into
sbb
in
add
stos
sub
fldenv
push
push
cmp
mov
mov
dec
lods
mov
jae
inc
iret
adc
out
popa
test
dec
or
mov
fld
and
cmp
sbb
or
sbb
pop
cmp
(bad)
mov
mov
rol
sub
mov
jl
push
in
xchg
or
inc
xchg
int
fisttp
fwait
pop
retf
mov
sahf
in
es
not
push
adc
sahf
stc
jb
out
xchg
shl
mov
mov
jge
add
inc
pop
mov
dec
mov
mov
test
jmp
push
test
pop
dec
or
cs
sets
dec
inc
and
or
or
xor
push
inc
loope
mov
push
push
fwait
loop
mov
sbb
stos
lds
loope
lea
xor
mov
lahf
in
push
loope
js
cmp
scas
imul
jge
sbb
mov
adc
pop
outs
xchg
ins
ror
add
xchg
sbb
call
mov
mov
mov
xor
lahf
movsx
mov
xor
es
sbb
pop
sbb
push
in
call
ins
mov
inc
add
inc
ret
test
jmp
ja
xor
test
xor
sub
xor
push
pop
(bad)
popf
imul
xchg
sub
jmp
mov
sub
dec
add
(bad)
dec
mov
clc
push
fwait
inc
cmp
shr
sbb
cld
(bad)
loop
pushf
fcmove
rcl
sub
(bad)
mov
adc
imul
cmps
daa
int3
or
mov
into
jmp
and
xchg
mov
xchg
leave
addr16
mov
aad
xchg
mov
cli
inc
out
dec
dec
jle
mov
and
sbb
in
pop
dec
mov
enter
pop
je
cmps
scas
or
fiadd
mov
and
xchg
sub
mov
sbb
shr
hlt
mov
into
fsub
popf
and
inc
pop
cwde
aas
ror
jmp
idiv
mov
cmp
data16
fsubp
dec
mov
aas
stos
fisttp
sbb
or
dec
retf
addr16
arpl
cs
push
pop
push
daa
or
pushf
inc
idiv
and
das
sub
and
test
or
mov
movs
jl
xchg
es
out
ss
jae
pop
test
add
adc
pop
xor
(bad)
fcomip
pop
hlt
in
adc
xchg
call
pop
das
jno
fidiv
gs
clc
pop
sbb
or
shr
cmp
ins
clc
and
js
and
mov
mov
cli
leave
lods
js
fidiv
cmp
fadd
sub
push
std
mov
cmps
in
cli
xchg
mov
pop
scas
enter
xchg
mov
cmp
mov
and
pop
adc
test
jl
jl
shld
dec
sar
inc
jmp
rcr
lock
outs
out
icebp
into
cwde
mov
scas
mov
out
push
xchg
in
xchg
ror
test
inc
movs
(bad)
jle
or
inc
and
jne
pop
mov
mov
sbb
sbb
xor
cmp
add
mov
into
test
and
sub
cld
mov
inc
or
das
dec
fnsave
in
cmp
test
add
fld
mov
popa
lea
lahf
mov
cmp
stos
mov
jbe
add
cmp
adc
mov
jno
push
call
dec
xchg
out
adc
cmc
aas
pop
outs
js
fadd
or
std
mov
mov
loop
mov
mov
popf
ds
xchg
imul
mov
dec
fdivr
push
sbb
mov
arpl
pop
push
inc
std
icebp
(bad)
xor
lahf
aad
xchg
mov
int3
hlt
push
call
sub
push
movs
jecxz
ins
int3
xor
jle
mov
mov
or
cmp
sbb
xchg
dec
xchg
inc
xor
sbb
(bad)
push
rol
sbb
rol
popf
retf
sbb
mov
jo
loop
sub
hlt
int3
inc
retf
sub
add
push
or
xor
mov
jno
hlt
daa
outs
test
dec
fld
pop
inc
push
in
fst
and
fwait
jmp
xor
test
jle
and
xor
or
or
std
mov
call
in
jno
outs
add
and
test
movs
rol
inc
xor
sbb
sbb
pusha
dec
(bad)
cmp
mov
add
aaa
cld
push
or
sbb
out
lahf
call
sub
xchg
scas
or
mov
movs
fs
mov
mov
pop
xor
adc
cdq
cmc
and
sbb
in
and
out
push
cmps
sub
add
inc
inc
gs
adc
pop
outs
inc
loopne
mov
ficomp
fadd
push
fsub
repnz
push
adc
in
mov
movs
dec
add
jg
xchg
test
addr16
retf
js
movs
fwait
repnz
lds
shl
loopne
(bad)
imul
jg
mov
call
lods
push
fst
cmp
retf
xor
aad
push
dec
mov
push
shl
jne
in
ins
ds
xchg
out
ds
and
mov
or
rcr
out
push
inc
call
rcr
ds
test
inc
dec
cmp
or
loope
outs
jmp
sub
test
pop
in
int
scas
leave
pop
aaa
push
ror
nop
inc
add
push
pop
cmc
mov
cmp
cmps
xchg
lods
adc
jg
test
stos
add
lock
sub
jg
cmc
push
pop
fsubr
sub
xlat
iret
jmp
pop
xchg
movs
inc
cwde
and
mov
mov
clc
push
pop
xlat
cmps
push
cld
inc
xchg
dec
jbe
out
loope
cli
daa
into
pop
xchg
leave
fadd
sar
xchg
sti
imul
add
mov
mov
lock
movs
jp
dec
inc
outs
mov
xchg
mov
dec
cmc
cli
aad
out
imul
in
scas
lahf
cmp
pop
or
jb
cmp
or
push
mov
stc
push
fcomp
jae
jbe
(bad)
into
sbb
cmps
(bad)
ins
push
outs
dec
mov
jmp
jnp
inc
add
hlt
sub
(bad)
(bad)
add
sub
rol
adc
lock
xchg
fnstenv
rcl
sub
add
lahf
pop
bt
in
xor
push
jle
pop
das
push
xor
call
mov
imul
retf
js
sub
pop
mov
mov
(bad)
aam
iret
xchg
leave
push
rcl
cmps
clc
mov
push
inc
push
push
dec
dec
sbb
xchg
and
adc
sahf
mov
pop
jmp
adc
jle
aas
inc
repnz
or
add
and
test
or
fs
sbb
jmp
push
sub
inc
div
xor
cmp
out
imul
adc
inc
retf
dec
fwait
test
nop
(bad)
cmp
repnz
cmp
adc
(bad)
sbb
mov
loopne
adc
adc
mov
sar
or
mov
sub
popf
repnz
(bad)
ficom
scas
add
dec
push
and
aam
sti
lods
popa
leave
mov
jmp
mov
out
jnp
loope
mov
cld
outs
bound
int3
pop
out
pushf
lods
jo
jl
dec
inc
hlt
cmp
mov
sbb
ret
add
inc
cmp
mov
bound
cmp
lods
(bad)
cld
repnz
inc
popf
mov
dec
rcl
xchg
xor
js
mov
shl
mov
and
sub
mov
inc
loop
lock
std
ret
fs
xchg
pop
dec
fadd
imul
xchg
repnz
jo
scas
neg
pop
ror
(bad)
loop
add
xlat
dec
xchg
inc
push
xchg
ja
dec
xor
shl
mov
repnz
jge
push
movs
xchg
sub
pop
sbb
mov
punpckhwd
adc
mov
fisttp
iret
retf
loope
out
cwde
mov
jmp
icebp
and
pop
les
(bad)
pushf
in
pusha
stos
and
outs
dec
lock
ss
les
adc
xchg
cmp
stos
inc
inc
mov
sub
daa
pop
pop
test
cmp
pop
enter
(bad)
jbe
minps
loopne
mov
and
mov
sbb
dec
ror
out
ins
dec
mov
scas
xchg
out
jbe
dec
into
mov
mov
ja
cmps
xlat
sbb
inc
ret
loop
jl
sbb
cwde
ins
pop
mov
ret
mov
jmp
in
mov
pushf
(bad)
push
xchg
js
xor
xchg
push
(bad)
loopne
sub
sub
inc
into
xlat
push
mov
rol
ja
hlt
dec
mov
xchg
pop
jb
gs
push
pop
shr
jae
sub
mov
out
jne
lds
bound
loopne
clc
push
adc
dec
es
sar
pop
mov
pop
xor
loope
sub
or
jmp
sahf
test
or
or
mov
inc
add
mov
loop
icebp
out
lock
lock
enter
pop
stos
push
cmp
ins
retf
pop
jnp
or
cdq
scas
fstp
outs
retf
push
icebp
stos
test
scas
dec
or
movs
or
nop
sub
fwait
dec
fisttp
xchg
cld
jecxz
in
and
pop
mov
lds
es
in
mov
imul
aad
xchg
dec
jge
mov
mov
adc
stc
iret
dec
pop
dec
add
mov
mov
loop
push
inc
xor
mov
out
ret
or
add
jne
cmp
xor
cmp
sub
pop
jne
test
(bad)
hlt
fstp
fist
loop
daa
sub
lods
loop
pop
in
(bad)
cwde
mov
fdiv
hlt
stos
test
ss
shr
rol
mov
mov
xor
in
out
int3
jecxz
js
rcl
push
dec
push
(bad)
push
mov
out
xchg
fidivr
pop
int
ins
gs
hlt
les
fild
inc
cmp
jg
(bad)
lods
popa
xor
into
xchg
sub
mov
stc
pop
mov
xchg
and
clc
fidivr
bnd
or
clc
das
addr16
pop
adc
fst
stc
jge
adc
inc
cmc
xor
data16
test
jb
pop
or
fild
or
pop
jno
push
in
cmps
mov
cmp
mov
jb
add
int
leave
dec
xchg
or
and
push
sbb
add
pop
mov
pushf
mov
cli
push
lods
fchs
aaa
pop
cmp
mov
sbb
(bad)
or
inc
test
aaa
xor
ficomp
daa
shr
jmp
ins
fld
sar
push
out
aas
shr
not
jmp
ins
push
cmp
sbb
pop
mov
icebp
jmp
push
repnz
mov
dec
rol
iret
scas
mov
jb
sub
cmp
daa
lea
jb
int
pop
jg
pop
in
mov
data16
test
or
test
or
sub
or
add
aas
pop
aam
and
mov
pusha
int3
sbb
mov
outs
add
(bad)
jle
mov
sbb
adc
fild
stos
into
addr16
test
or
frstor
mov
jle
jg
push
xor
push
pop
cli
call
jg
xchg
popa
inc
mov
int3
aad
mov
jp
lods
aaa
enter
clc
pop
in
dec
add
ret
cmp
rcr
in
or
sub
jno
icebp
pop
and
add
outs
xchg
sbb
aam
dec
repz
fisttp
das
and
ret
dec
ja
cmp
sbb
inc
stos
iret
jp
scas
mov
push
inc
aaa
pop
aad
pop
mov
std
or
pop
bnd
out
fistp
push
pop
sbb
popf
pop
or
retf
(bad)
fcomp
or
ss
push
ret
ins
lods
daa
clc
mov
xor
mov
out
clc
jns
sub
pop
nop
inc
lods
jns
js
int
jmp
out
(bad)
lock
add
sub
je
in
stos
(bad)
adc
xchg
push
xor
mov
(bad)
fadd
xlat
mov
bound
imul
cmp
inc
bound
sbb
div
pop
(bad)
enter
sbb
(bad)
div
ficom
in
fwait
ins
hlt
sub
fnstcw
xor
jbe
movs
adc
pop
test
pusha
push
nop
mov
push
xor
jb
xlat
test
sbb
xchg
imul
lock
out
fldcw
pop
add
mov
jle
lods
jp
bound
lods
enter
(bad)
in
push
sti
(bad)
pop
push
add
mov
fsubr
mov
cmps
and
xchg
inc
out
neg
scas
inc
cdq
(bad)
repz
jmp
and
shl
push
or
adc
je
je
push
mov
stos
cmp
jae
push
pop
dec
mov
jmp
sub
push
add
sbb
sbb
je
outs
jns
add
iret
cdq
adc
xchg
mov
xchg
sub
sub
jecxz
inc
push
jge
inc
push
aam
sbb
jae
mov
mov
pop
pop
std
or
mov
dec
(bad)
push
loop
popf
pop
adc
mov
dec
loopne
(bad)
push
hlt
ret
fidivr
aas
popa
sbb
cdq
mov
arpl
sbb
je
cli
dec
push
inc
dec
dec
les
ficom
xchg
repnz
add
pop
cvtps2pi
(bad)
int
mov
int3
mov
aas
jb
jl
jns
push
xchg
ins
xchg
push
daa
out
sbb
aad
adc
test
or
inc
movs
sbb
push
les
mov
jmp
dec
(bad)
adc
in
jmp
adc
mov
push
lds
mov
inc
retf
pop
in
adc
cdq
dec
mov
inc
jns
out
fadd
sub
(bad)
aas
ja
gs
sbb
arpl
loope
sub
or
int
push
popf
xchg
mov
loop
loope
or
(bad)
rcr
mov
jp
adc
mov
mov
xchg
nop
call
push
inc
dec
sub
loope
cdq
mov
add
loope
add
xor
pop
push
dec
daa
xchg
or
or
sbb
add
daa
outs
dec
cli
(bad)
mov
or
xchg
cld
hlt
sbb
lock
mov
popf
adc
and
mov
mov
arpl
lods
or
or
ja
stos
add
cdq
fwait
repnz
outs
xchg
adc
fidiv
xchg
movs
lds
xor
out
pop
arpl
sti
cs
mov
mov
jl
jmp
fadd
cld
xor
aad
outs
stc
jmp
fidiv
and
push
sbb
mov
mov
int
xchg
push
or
movs
jl
aam
movs
out
xchg
sbb
mov
repnz
adc
bound
xor
cwde
loope
sub
iret
jo
sbb
jbe
adc
lahf
into
add
push
push
scas
adc
push
dec
enter
clc
push
lds
pop
cdq
idiv
or
aaa
sbb
in
push
cmc
push
sbb
addr16
fwait
rol
ffree
push
push
out
adc
inc
sahf
xchg
icebp
ja
mov
shl
cmps
push
xchg
sub
pop
xlat
mov
add
jne
cmp
pop
daa
mov
jnp
int
sti
call
mov
jp
sbb
cdq
repz
adc
lods
and
xchg
mov
mov
jno
hlt
icebp
popa
shl
push
push
and
jp
inc
cmp
mov
out
out
fild
mov
rcl
lods
dec
in
test
xor
arpl
das
sbb
cmps
mov
push
jo
movs
es
cmp
mov
cmps
leave
pop
call
ds
push
pop
cmp
jmp
repnz
push
inc
loope
clc
imul
push
adc
cmp
aas
in
pushf
mov
add
test
push
xchg
and
mov
lock
push
pop
ja
js
fist
pop
cmp
inc
xchg
movs
int3
mov
cmp
sahf
fcomp
add
ret
outs
mov
into
cmp
xchg
push
test
add
nop
push
cmp
adc
push
or
and
sahf
jmp
mov
arpl
(bad)
ins
out
push
lds
or
ja
adc
dec
adc
adc
xor
loope
(bad)
cmp
stos
fst
enter
int
lock
sbb
pop
in
daa
pop
push
and
push
mov
mov
jge
leave
mov
js
mov
scas
test
lods
dec
popf
in
test
xchg
out
pop
(bad)
aas
gs
fistp
adc
add
in
loope
scas
arpl
lea
xlat
mov
xor
fs
xchg
sti
sub
cmp
mov
push
test
sub
mov
pop
mov
adc
pop
scas
stc
pop
adc
dec
add
hlt
xchg
fistp
stos
xchg
loope
in
in
mov
or
aam
leave
adc
shl
loop
sbb
sub
fsub
push
push
stc
mov
xchg
push
or
push
pop
enter
inc
sub
push
loopne
xor
push
sub
aam
retf
mov
jns
and
imul
xchg
xchg
inc
cmp
ins
jmp
sbb
clc
or
add
inc
sbb
sub
jne
scas
pop
fdivr
jno
in
sar
(bad)
fnsave
mov
xchg
push
pop
pop
xchg
mov
cmc
sbb
arpl
jecxz
lods
clc
dec
rcl
cli
ja
loopne
push
jae
arpl
call
out
mov
adc
or
(bad)
sti
gs
out
pop
pop
dec
push
ret
add
push
adc
jae
(bad)
cmp
push
movups
fsubrp
jns
adc
faddp
fdiv
jno
enter
rcl
push
mov
dec
jge
leave
movs
and
fucomi
paddw
(bad)
mov
inc
jns
clc
movs
call
xchg
pop
add
push
or
xlat
push
int3
mov
test
mov
lods
jmp
not
icebp
pop
mov
gs
mov
pmaxsw
inc
ret
jnp
cmp
jne
mov
ror
add
(bad)
mov
scas
sub
pop
fwait
or
ret
into
mov
stos
xor
(bad)
mov
mov
daa
xchg
js
jle
imul
gs
test
pop
xor
jns
or
xor
test
fldenv
aas
mov
popa
pop
ins
mov
sbb
push
xchg
pop
pop
push
jnp
mov
(bad)
cwde
shr
loop
push
loopne
into
sbb
inc
out
dec
mov
retf
cmc
mov
and
sbb
fs
cdq
pop
and
imul
movs
or
(bad)
mov
test
mov
popf
div
stos
dec
out
and
mov
ins
mov
aaa
mov
xchg
int3
mov
mov
fmul
ins
add
mov
movs
fsub
jmp
dec
push
or
mov
mov
jb
and
adc
pusha
dec
in
pop
pop
adc
into
aas
out
add
rcl
adc
adc
stc
fs
dec
(bad)
mov
(bad)
jnp
jmp
jne
jnp
cmp
add
jge
add
xchg
sub
xor
stos
mov
xor
ret
xchg
sub
jns
cld
jns
xor
or
inc
imul
stc
pop
ins
and
fdiv
les
(bad)
repz
mov
fnsave
mov
fst
sbb
aad
das
mov
fwait
pop
daa
jmp
jl
mov
leave
mov
jo
mov
addr16
mov
stc
cwde
ret
cmp
sbb
push
mov
stos
clc
sbb
sbb
pusha
lahf
sub
outs
adc
mov
adc
out
lahf
push
sar
jmp
ret
in
(bad)
mov
mov
xchg
mov
xor
ffreep
lahf
xlat
ja
sub
jp
cs
mov
mov
std
imul
xchg
mov
push
or
add
sub
fbstp
mov
mov
not
leave
ret
fst
jb
and
pop
jno
daa
pusha
mov
mov
pop
add
push
mov
lds
vmovlpd
adc
aam
popa
bound
push
das
stos
xchg
sub
(bad)
dec
cli
cwde
xor
test
mov
mul
lahf
fild
push
outs
movs
jmp
push
jl
shr
xchg
aas
xchg
ds
sub
cdq
pop
cmp
pop
xor
mov
jne
sub
dec
sub
jns
cmp
fsubr
call
sub
push
loopne
push
outs
call
(bad)
jecxz
push
rcr
arpl
dec
cmps
cmp
lea
sar
fidiv
aam
inc
outs
dec
pop
jge
mov
push
inc
add
popf
mov
adc
jmp
mov
mov
jo
push
pop
cmps
icebp
in
mov
xchg
push
stos
adc
jo
adc
mov
xor
(bad)
push
stc
xchg
das
add
push
test
aad
test
sub
shl
jmp
(bad)
pushf
xchg
jnp
and
fidiv
sti
sub
push
pop
stos
cmp
pop
outs
push
outs
sub
cmp
dec
or
and
xchg
jae
repnz
inc
nop
jle
dec
add
mov
mov
xlat
idiv
xchg
push
in
or
pop
or
adc
(bad)
ja
sbb
sbb
fdivr
fs
sbb
xchg
pop
mov
jae
fsubr
xchg
sbb
adc
loopne
push
sbb
pop
xchg
jmp
mov
sub
xchg
ds
mov
outs
jo
mov
stos
je
xor
ds
loop
(bad)
scas
ret
pop
fbstp
dec
xor
stos
inc
pop
loop
fwait
ins
fmulp
mov
sub
and
shr
je
fld
cs
jo
les
xchg
jmp
jge
push
push
sahf
push
shl
out
arpl
jne
pop
ss
neg
jno
outs
push
pop
sbb
arpl
ret
cmc
mov
xor
ins
lods
xchg
mov
jmp
xor
inc
sub
and
hlt
(bad)
outs
dec
push
push
sbb
fwait
arpl
jg
out
and
xchg
mov
adc
push
retf
add
dec
jns
repz
data16
jns
and
not
pop
xchg
lods
lods
xchg
out
dec
xor
in
inc
push
adc
ss
adc
inc
(bad)
or
adc
sbb
cmp
mov
or
mov
mov
mov
xchg
or
mov
int
push
jmp
mov
mov
jb
(bad)
cs
outs
popf
rcr
sar
out
cmp
pop
mov
fwait
in
or
jp
dec
cmp
stc
xor
push
std
pop
(bad)
add
into
mov
fistp
cmp
cmps
aas
clc
add
sub
not
mov
sbb
aad
xchg
mov
sub
fld
mov
loope
sub
fwait
sbb
popf
test
dec
jg
pop
retf
imul
fbstp
mov
test
fwait
pop
stos
mov
aaa
pop
sub
lahf
pushf
dec
cmp
shl
or
daa
scas
mov
mov
add
push
retf
jmp
xchg
fisub
pusha
ins
stos
jmp
scas
and
inc
lods
stc
or
and
mov
loop
stc
push
jmp
int3
rcl
and
xchg
and
or
cmps
rol
fldenv
dec
inc
movs
mov
dec
pushf
push
mov
arpl
xchg
jne
mov
mov
xchg
pop
nop
cmps
loopne
mov
out
lahf
xor
jge
in
mov
inc
sbb
outs
sub
fist
and
ret
sub
mov
xor
push
cmc
ins
adc
push
add
ror
pop
out
shl
movs
dec
call
aad
rcr
scas
add
sub
cmps
in
inc
cmps
test
arpl
push
sbb
sti
inc
ins
sub
lds
mov
gs
jb
dec
cmp
cli
mov
sub
or
int
ficom
(bad)
shl
dec
mov
dec
mov
shl
test
idiv
iret
(bad)
pop
push
or
call
or
push
inc
push
add
jl
jecxz
ret
inc
ffree
mov
push
inc
in
sub
sbb
mov
jg
pop
pop
test
movs
retf
call
inc
test
(bad)
movs
or
shl
xor
jno
sub
aaa
les
push
ins
out
mov
adc
add
mov
(bad)
mov
mov
xor
mov
jo
daa
bts
inc
loopne
adc
lods
sbb
loopne
xchg
xor
ins
cmps
shr
mov
push
outs
push
cmps
push
add
mov
xchg
fmul
jg
adc
je
mov
(bad)
(bad)
(bad)
cmps
sub
inc
jle
cmp
push
repnz
xor
std
and
cmc
jmp
pop
in
sar
(bad)
cmp
gs
ins
test
jns
outs
cmp
xor
mov
arpl
ins
outs
mov
add
xchg
sbb
push
xor
xchg
rol
push
mov
mov
pop
mov
mov
ins
int3
pop
sbb
pop
push
jnp
xor
adc
jnp
aas
and
repz
dec
mov
fwait
imul
push
cmc
adc
sub
and
and
sbb
cli
pop
in
enter
(bad)
aaa
lahf
sub
mov
sti
inc
out
mov
jae
inc
int
xor
ficom
inc
ret
push
adc
jns
aad
aam
xchg
fnstenv
xchg
inc
and
add
fld
push
sar
iret
mov
adc
aam
xchg
and
ja
lea
stos
fiadd
and
jecxz
fdivr
push
jb
js
jb
int
cld
daa
pop
xor
shr
lods
add
sbb
inc
in
mov
sahf
add
shl
cmp
or
xchg
add
fdivr
add
mov
and
or
loope
cwde
bound
test
lahf
mov
mov
jl
inc
sbb
std
daa
cmc
sub
int
xor
mov
xlat
dec
mov
sti
sar
cmp
pop
shl
jecxz
les
mov
pop
call
aam
add
std
fucomi
fld
ins
cmp
add
push
or
in
imul
mov
mov
jno
push
in
(bad)
loope
in
cmp
cmp
or
aaa
adc
push
mov
jge
fidivr
cmp
xchg
or
dec
lock
test
dec
out
rcr
sub
ret
mov
sub
sar
jno
aaa
rcl
jl
jg
or
call
cmps
push
in
dec
fwait
test
xchg
jnp
add
fild
mov
shr
adc
mov
mov
or
imul
sub
mov
xor
scas
popa
cmp
(bad)
sbb
out
loopne
aaa
daa
mov
nop
adc
test
xchg
cmp
cmovne
xor
adc
pop
movs
pop
xor
push
test
xchg
adc
cdq
xchg
sbb
sbb
mov
jg
shr
sbb
cmps
inc
dec
sbb
push
ins
ret
add
and
mov
bound
mov
sub
mov
shl
pop
adc
and
xchg
push
in
mov
adc
cmp
stc
mul
(bad)
mov
jb
or
inc
add
mov
or
fldcw
inc
jmp
sar
pop
pop
cmc
shr
dec
dec
jmp
xchg
int3
test
addr16
fwait
add
push
call
adc
jge
ret
add
push
mov
inc
retf
pop
mov
or
stos
outs
inc
sub
mov
(bad)
and
add
or
fcomp
ret
mov
dec
lahf
jmp
pop
loopne
add
xchg
retf
iret
ss
mov
addr16
xchg
dec
xchg
movs
cld
or
mov
fadd
movs
mov
and
xchg
xor
icebp
xchg
rol
arpl
mov
push
xor
pop
or
int
ret
retf
or
int3
add
jne
or
bound
iret
iret
mov
add
arpl
xchg
inc
adc
and
add
adc
fucom
in
jge
adc
arpl
mov
aam
dec
scas
out
push
sbb
out
cli
inc
fiadd
push
gs
cdq
ficomp
cli
sbb
ret
add
dec
addr16
pop
pop
int
or
jg
push
cli
out
sub
sub
push
(bad)
lods
pop
daa
push
pop
imul
sub
rcl
xor
jbe
sbb
mov
sbb
mov
cmps
inc
out
imul
mov
cmp
rol
inc
cmp
repz
pusha
dec
mov
cwde
stos
gs
cmps
jns
mov
dec
movs
add
ret
push
mov
out
into
js
mov
jb
lds
aad
movs
cmps
sti
adc
add
mov
sub
lods
scas
loop
jle
mov
shr
push
jge
call
in
lock
pop
inc
mov
and
ret
loop
push
xor
mov
add
dec
je
dec
pop
push
pop
sub
cmp
cwde
and
mov
mov
in
inc
imul
jmp
or
les
cmp
pushw
aam
add
adc
fnstenv
loop
in
ror
adc
out
sbb
lds
push
xor
jae
mov
sahf
aam
dec
sub
or
out
or
cdq
and
les
lods
adc
cs
mov
cli
mov
mov
je
pushw
dec
sbb
push
jns
test
xchg
hlt
cmp
push
or
xchg
ret
xlat
jecxz
mov
push
mov
xchg
movs
push
lds
mov
in
loope
js
push
xchg
inc
lods
test
jmp
int3
fisubr
shl
mov
push
sbb
(bad)
adc
fwait
hlt
mov
add
retf
dec
fimul
dec
and
push
outs
test
sar
xchg
xor
aas
mov
inc
inc
sub
shl
sbb
cwde
push
les
xor
retf
mov
jle
and
jg
sbb
or
dec
mov
push
in
sub
addr16
xchg
xor
push
sub
(bad)
lds
dec
pop
cdq
sub
aam
xchg
int
leave
ror
adc
sub
js
movs
inc
call
sahf
repz
mov
sub
jne
mov
popf
(bad)
add
mov
jecxz
pop
xor
jmp
call
mov
cmp
cli
test
ja
fimul
stos
call
popf
out
add
in
mov
mov
icebp
mov
lods
fdiv
xchg
add
out
outs
adc
(bad)
lock
int
or
out
jl
push
stos
fadd
cmp
xchg
mov
clc
add
cmp
jne
pop
sbb
test
xor
jge
push
frstor
inc
cmps
mov
sbb
pop
or
cdq
cli
jle
out
pop
mov
in
inc
pop
scas
cmps
hlt
dec
ins
test
aam
test
cmps
jbe
stc
mov
sbb
test
data16
cli
adc
sub
pusha
cs
fisub
ret
mov
mov
sar
rcl
bound
ins
ror
pop
cwde
or
mov
ss
outs
sahf
imul
cld
pop
mov
repnz
out
(bad)
mov
hlt
sbb
scas
xor
mov
iret
call
mov
sti
in
mov
lahf
jmp
add
outs
mov
sbb
sbb
inc
je
xchg
add
or
inc
add
adc
add
fist
xchg
mov
xchg
in
loop
sbb
outs
sbb
pop
out
xchg
fs
mov
adc
js
jp
stc
mov
cld
inc
repz
mov
iret
inc
repz
push
hlt
mov
sti
mov
push
call
aas
mov
jae
fisttp
cmp
(bad)
hlt
xchg
mov
jmp
add
retf
sub
int3
and
inc
adc
and
inc
mov
xchg
fimul
pop
addr16
cli
jle
xor
nop
jp
arpl
(bad)
add
(bad)
shr
leave
pushf
fistp
aas
push
aas
cmp
pop
jle
jo
or
mov
pop
fild
and
pop
(bad)
cdq
int3
mov
pop
and
mov
cmp
lock
cmp
cmp
push
dec
or
pop
popf
mul
xor
outs
jo
inc
int3
jl
sti
sub
xchg
cmp
out
pop
outs
push
popf
and
fmul
add
mov
test
dec
aas
ret
cmp
cmps
push
cld
test
ds
xlat
aaa
int
aas
cld
push
xchg
test
pop
push
cmp
mov
pusha
mov
adc
shl
sub
mov
mov
lods
ror
pop
cdq
mov
adc
inc
push
xchg
imul
jae
adc
rol
dec
rsqrtps
mov
inc
push
test
movs
jae
xchg
dec
mov
mov
into
xlat
pushf
push
add
xchg
popf
inc
ss
jno
pop
sub
add
cmp
xlat
mov
in
(bad)
mov
xchg
pop
fbld
int
add
ins
ins
ror
add
adc
ins
repz
lds
push
mov
jmp
fisttp
test
push
push
je
stc
mov
ds
pop
aad
jne
and
loop
pop
mov
cdq
push
lds
jno
mov
mov
xchg
dec
pusha
lea
xchg
jns
sbb
icebp
nop
push
into
or
mov
loopne
repz
pop
ins
cmps
fsubr
cmp
xchg
jne
gs
clc
mov
loope
jno
in
xchg
dec
inc
and
loop
dec
xor
scas
xor
and
lods
mov
fistp
cs
sti
cdq
mov
in
push
fwait
add
mov
jno
mov
(bad)
cdq
xor
in
jge
in
mov
addr16
jg
jge
sub
sti
and
pop
loopne
pop
std
loop
sub
push
sub
mov
jmp
loopne
outs
cli
retf
outs
pusha
mov
cmp
in
add
mov
pop
inc
ja
xchg
jno
fadd
hlt
push
jl
mov
out
jb
lock
pushf
add
scas
lds
pop
mov
cmps
aam
in
push
xchg
mov
stos
bound
into
shr
xchg
lods
data16
jae
in
fs
popa
test
pop
leave
jge
mov
les
mov
and
mov
stc
push
ja
mov
js
ss
shl
add
(bad)
jl
out
lea
hlt
call
push
add
out
sub
mov
scas
or
push
xor
sbb
rol
mov
(bad)
fidivr
jle
xchg
inc
mov
fistp
test
mov
mov
retf
push
pop
or
pop
fidiv
jno
call
pop
push
add
(bad)
out
sets
mov
sti
push
lds
hlt
sbb
nop
mov
ficomp
ret
rcl
jb
xor
js
sar
inc
mov
mov
xor
cmp
push
das
inc
and
sbb
(bad)
movs
sub
lahf
jl
mov
add
adc
pop
jmp
sub
mov
mov
cmps
das
imul
push
sbb
jg
nop
and
movs
xchg
(bad)
push
sbb
(bad)
shl
sub
int
jmp
shr
inc
inc
add
stos
jmp
jecxz
out
icebp
ja
(bad)
xor
adc
mov
movs
popf
adc
push
imul
pushf
cs
fistp
movs
daa
and
test
(bad)
or
cmp
icebp
push
scas
adc
addr16
aad
call
add
jecxz
jge
xor
fisttp
not
dec
sbb
loope
and
mov
pop
and
ror
mov
in
push
mov
or
xor
xor
pushf
mov
mov
jmp
lds
push
adc
lds
mov
aad
sub
call
test
sbb
xchg
sub
fdiv
pushf
pop
jnp
loop
js
xor
cmp
sub
rol
jge
sub
xchg
xchg
pop
sar
ins
call
ss
lods
daa
fsub
rol
jbe
in
fbld
sbb
jmp
hlt
inc
fwait
aad
mov
sub
mov
outs
in
mov
pop
shr
xor
outs
cmp
mov
outs
pop
add
shl
sub
adc
push
repnz
fs
(bad)
cs
js
(bad)
jne
pushf
push
loop
fist
inc
imul
xchg
outs
popa
dec
sub
movs
bound
sbb
inc
outs
movs
mov
or
sub
mov
cwde
(bad)
out
cmps
or
jmp
addr16
adc
mov
xchg
test
loopne
adc
stos
xlat
scas
inc
aas
jb
mov
sbb
dec
add
jbe
inc
aam
outs
dec
mov
movs
and
jns
inc
daa
jmp
pop
dec
inc
push
mov
sbb
lock
inc
addr16
daa
fwait
xor
jb
jmp
test
sub
cmp
xchg
mov
repz
xor
jge
iret
sub
hlt
aad
rcl
rep
fdivr
(bad)
mov
mov
dec
sbb
jmp
retf
and
(bad)
fsubrp
(bad)
jns
ins
push
in
fisttp
sbb
test
sub
call
and
adc
or
adc
cmp
popa
pop
aam
js
fisubr
push
clc
aas
or
imul
xor
pop
sahf
push
push
or
adc
movs
loop
enter
std
lea
push
pop
mov
movs
mov
scas
cwde
stc
aaa
es
xlat
test
stos
pop
mov
sub
pop
scas
retf
rol
xchg
cs
pop
mov
push
jmp
push
pop
call
(bad)
(bad)
ror
and
push
ret
cmp
jg
adc
or
mov
xor
mov
mov
fwait
test
push
xchg
addr16
xchg
xchg
adc
repnz
or
mov
lahf
scas
mov
ins
fisubr
ss
pop
xchg
jne
and
lea
das
(bad)
cwde
into
dec
fs
fsub
movs
adc
pusha
rol
out
cmp
add
inc
sbb
ss
jmp
loope
outs
mov
ficom
retf
test
and
adc
inc
push
nop
(bad)
push
test
cs
sar
hlt
xchg
inc
rol
(bad)
fst
xchg
xchg
sbb
push
add
jge
test
repz
in
pop
mov
bound
adc
mov
out
test
mov
xchg
adc
iret
mov
add
mov
adc
dec
icebp
sbb
jge
dec
ds
add
xor
aad
push
adc
fs
ins
push
pop
out
les
call
mov
movs
outs
jge
mov
sar
imul
cmp
outs
retf
movs
pop
jp
out
mov
mov
fdiv
in
inc
mov
sbb
adc
push
sub
mov
pop
scas
or
xor
dec
js
sbb
ret
imul
call
jmp
out
xchg
mov
shl
sub
fstp
setl
int
lahf
sub
sub
push
fcmovb
push
pop
xor
adc
cdq
in
loopne
jle
adc
lods
xchg
or
(bad)
(bad)
pop
fcomi
out
ins
mov
adc
inc
test
ins
add
in
outs
xchg
pop
jns
int
xor
fst
push
lea
dec
fstp
mov
popf
out
ds
add
mov
call
call
and
leave
push
adc
inc
scas
ja
inc
das
cld
loope
test
adc
daa
sbb
cs
lock
imul
xor
push
jno
mov
push
xor
(bad)
jae
jno
inc
call
nop
mov
cmp
out
or
test
push
push
out
pop
sub
cmc
push
pop
adc
inc
cmp
dec
adc
mov
sub
loopne
ror
cmps
ret
(bad)
repnz
dec
push
push
jo
rcr
lods
in
inc
pop
pop
adc
dec
sbb
fs
pop
lds
mov
cs
xor
hlt
call
jns
xor
in
add
mov
loope
fcom
les
call
cs
std
mov
pop
cdq
pop
jb
cmp
or
mov
cld
gs
pop
xchg
jmp
cs
dec
mov
pop
sbb
fcmovnbe
mov
dec
std
bound
jge
cwde
mov
pop
mov
add
mov
sub
daa
mov
aas
xor
add
add
(bad)
test
out
push
jl
js
ret
data16
mov
xchg
mov
stos
test
xchg
sub
pop
das
iret
in
fcom
add
mov
cmp
mov
xchg
fisubr
jle
lea
cmp
call
out
cs
loop
rol
js
(bad)
xor
mov
cmps
arpl
lahf
xchg
sub
mov
sub
iret
jae
mov
into
(bad)
add
into
or
dec
enter
dec
mov
jle
jmp
out
push
add
std
shr
push
retf
shr
push
mov
rcl
push
sub
adc
out
fld
sar
sub
jge
push
push
icebp
ret
push
sub
or
popa
scas
aad
mov
mov
or
mov
fidiv
lods
cmps
retf
or
cs
(bad)
cs
xchg
add
mov
leave
in
(bad)
push
and
mov
mov
xchg
dec
test
je
add
mov
cs
xchg
push
push
jno
add
inc
lods
and
pusha
(bad)
cmp
xchg
aas
push
push
mov
jmp
in
cmp
mov
aas
pop
adc
mov
jbe
std
loope
fmul
sahf
mov
dec
ins
xchg
cmp
push
inc
fwait
add
retf
shl
dec
jecxz
sbb
(bad)
cmp
jp
mov
lahf
push
pop
or
outs
retf
aad
xchg
pop
push
jecxz
mov
imul
inc
ss
icebp
cmps
or
fdivr
test
scas
sub
sbb
dec
das
call
in
cmc
dec
and
sbb
dec
sub
xor
mov
mov
outs
fdiv
cmc
sub
adc
jb
add
fwait
cmps
out
aas
lds
pop
mov
or
sub
jbe
or
fsubrp
js
std
pop
mov
enter
sbb
out
mov
xor
fbstp
sahf
jns
mov
inc
test
mov
aas
and
cmp
push
mov
lahf
stc
sub
fnstenv
pop
js
push
js
adc
rcl
daa
inc
arpl
push
xchg
jns
push
push
les
mov
add
not
fsubr
aam
mov
xchg
enter
add
cwde
or
push
push
sub
hlt
adc
clc
test
(bad)
jge
fidivr
inc
mov
and
popa
xchg
cmp
(bad)
std
imul
fdiv
mov
loope
int3
mov
cwde
xor
ja
xor
call
and
mov
pop
jnp
push
shl
lds
pop
dec
mov
jl
cmp
lock
leave
inc
test
jae
inc
push
scas
dec
(bad)
and
sti
xchg
iret
aam
(bad)
stos
adc
inc
test
xor
xlat
inc
inc
mov
(bad)
gs
cmp
pushf
add
(bad)
popf
pop
push
mov
pusha
aaa
inc
jae
mov
cmp
and
dec
sub
push
xchg
dec
retf
push
imul
jg
sub
hlt
cdq
add
mov
bound
sbb
add
ret
jg
jge
pop
dec
into
mov
mov
ja
enter
rcl
push
or
mov
and
xor
sub
pushf
icebp
out
mov
and
nop
add
dec
mov
sbb
loope
xor
mov
shl
and
or
in
push
mov
popa
test
push
scas
out
adc
mov
mov
ds
loop
mov
outs
add
cmp
nop
aad
test
dec
push
loopne
xchg
jle
sti
ds
scas
rcl
adc
jecxz
jnp
outs
out
into
cwde
xchg
fcom
cli
iret
cmp
repnz
ret
clc
xchg
sbb
outs
inc
pusha
dec
mov
inc
cmps
test
dec
xor
gs
mov
push
imul
push
fnstsw
or
push
ror
jle
mov
and
cli
lods
mov
stc
scas
call
sti
adc
stc
dec
sti
je
pop
call
jae
(bad)
sbb
mov
retf
add
int3
fisttp
add
div
test
pop
cs
lods
stos
jbe
pusha
rcl
xor
(bad)
in
lods
sub
in
pop
sbb
sbb
scas
test
gs
push
sti
push
xor
jo
pop
out
sbb
xchg
push
into
rol
aad
idiv
out
mov
call
outs
pop
call
fcomip
inc
loopne
loope
push
int3
mov
push
sbb
loope
dec
scas
fidiv
in
mov
pop
jne
test
cld
sti
mov
mov
and
xor
leave
or
inc
cdq
xchg
fldln2
imul
adc
iret
and
aaa
(bad)
jae
pop
stos
call
and
arpl
fcom
pop
dec
pop
inc
mov
lock
outs
repnz
shl
(bad)
test
push
mov
mov
inc
ret
mov
inc
sahf
in
cli
test
repz
push
jnp
pop
in
test
cmps
ins
cmp
inc
(bad)
jmp
aaa
cmp
xchg
mov
mov
pop
sbb
xor
ja
ds
cmp
jp
adc
nop
push
sub
data16
xor
mov
imul
movs
out
cmp
dec
stos
mov
(bad)
mov
fs
inc
ins
or
push
mov
add
shl
cmp
clc
daa
xlat
jecxz
jge
jnp
ja
xchg
cmp
inc
test
sbb
xchg
jmp
and
nop
jns
sar
jl
test
mov
jle
out
cld
rcr
sbb
fwait
inc
mov
pusha
fistp
shl
jno
cmps
repz
not
shl
(bad)
xor
sub
mov
xchg
test
add
push
push
mov
push
pop
in
cmp
mov
cld
inc
mov
repnz
pop
in
lods
in
push
mov
push
push
repnz
leave
fldenv
cmc
add
jo
aam
(bad)
shr
or
mov
ret
jmp
cmps
jae
sbb
adc
xchg
repnz
inc
mov
pop
fsub
mov
in
(bad)
jle
push
push
je
add
push
ds
dec
xor
cmp
stos
gs
je
cmp
stos
pop
sahf
pusha
lds
push
push
aam
push
ins
push
dec
mov
int
mov
push
int3
cli
in
bts
jmp
xchg
dec
jb
fwait
cmp
sahf
ror
push
popa
add
pop
pop
mov
cmp
cmps
mov
mov
xor
sbb
mov
fisttp
adc
rcr
hlt
jg
mov
push
dec
xchg
or
xchg
jmp
pop
movs
lods
cmp
pop
jne
and
(bad)
mov
popa
cli
pop
jmp
xchg
add
xchg
mov
xchg
fs
and
sti
dec
das
jmp
jns
cwde
(bad)
adc
add
cmp
ins
rol
data16
mov
mul
int
out
sbb
addr16
push
push
cmps
(bad)
and
mov
jmp
lods
pop
inc
push
dec
and
rcr
sub
sub
adc
test
adc
out
adc
add
cmp
lock
xchg
icebp
retf
xor
xchg
inc
sbb
xchg
ffreep
sbb
push
push
sub
scas
mov
jns
test
pop
mov
add
mov
pop
into
push
ins
xor
pusha
cmp
ins
adc
retf
sub
ret
ror
jbe
pop
popf
into
les
or
ja
hlt
movs
or
mov
cmp
add
addr16
call
iret
adc
fdivr
jmp
dec
sub
cmp
test
push
leave
je
es
sub
outs
(bad)
nop
ret
cmps
fs
fs
dec
sbb
xchg
pop
sbb
mov
pop
pop
loop
ret
ret
fs
jns
sub
(bad)
mov
ror
and
jno
inc
inc
(bad)
out
fdivr
and
mov
repnz
jmp
sub
dec
call
leave
inc
dec
aas
stc
cs
imul
ja
cmps
inc
adc
or
and
mov
jmp
addr16
icebp
lea
sti
xchg
(bad)
enter
fs
xchg
in
xlat
mov
pusha
mov
xchg
xchg
sub
outs
fimul
out
and
push
jb
clc
es
inc
(bad)
adc
push
mov
add
xchg
sub
nop
dec
daa
(bad)
mov
mov
mov
aaa
iret
out
xchg
dec
pop
mov
jecxz
xchg
std
or
sub
ficom
mov
imul
in
and
sahf
pop
push
cld
aad
mov
in
inc
and
jae
mov
xchg
add
fnsave
rcl
jg
push
movs
adc
xchg
outs
lea
jbe
inc
imul
call
mov
add
and
dec
jecxz
or
inc
sub
cmp
das
sub
lds
int
mov
imul
dec
add
jae
ins
mov
xchg
sar
pop
fmul
lock
xor
fdiv
adc
inc
jo
sar
vmovupd
gs
xchg
imul
pop
mov
dec
sbb
call
pusha
sub
and
sbb
test
pop
xchg
mov
test
out
jg
pop
sti
movs
fprem1
daa
retf
int3
cmps
push
enter
and
je
jb
stos
hlt
add
pushf
mov
fnsave
test
pushf
aam
push
adc
xchg
ja
add
(bad)
repz
push
and
jb
jp
xor
mov
jecxz
lock
test
pusha
mov
in
sar
clc
xor
imul
inc
pop
inc
fcmovu
and
push
(bad)
xor
cmp
data16
and
pop
sbb
adc
sub
push
(bad)
xchg
inc
inc
cdq
jg
push
movs
sti
push
das
push
dec
loopne
sbb
push
lock
fmul
ja
sub
and
popf
adc
mov
or
dec
idiv
dec
jmp
scas
adc
inc
push
jne
mov
ffreep
popa
sub
mov
sbb
pusha
lea
out
mov
scas
dec
mov
pop
mov
cs
(bad)
mov
lods
ret
or
(bad)
pop
pusha
mov
xchg
in
sub
pop
fsubr
fdiv
sahf
ins
cmp
xor
pop
stos
sbb
out
mov
mov
test
mov
ss
int3
sbb
dec
or
dec
adc
or
sub
into
jne
es
pop
or
idiv
push
xor
xor
mov
in
cmp
adc
dec
ret
pop
mov
out
mov
mov
xor
dec
fldenv
test
je
cld
push
pop
xchg
cmp
xor
repnz
xlat
js
jbe
and
lods
les
cmps
ret
xor
pop
inc
addr16
and
sti
mov
xor
mov
movs
push
push
mov
(bad)
inc
dec
sbb
lock
jge
daa
leave
call
inc
fisttp
cmp
pop
loope
cmps
cli
lods
mov
cmps
push
push
sbb
and
cmp
pop
cmp
push
fcmovb
xchg
jns
pop
jb
adc
jmp
mov
sub
aam
push
jg
call
cli
imul
push
xchg
xor
cld
lock
les
xchg
mov
jmp
imul
mov
aam
ds
dec
lods
inc
movs
mov
cmps
lahf
icebp
add
cmp
div
push
xchg
xor
stos
cld
or
mov
xor
out
out
adc
inc
mov
and
pop
jl
cs
sbb
lahf
xor
jmp
sti
fdiv
mov
aam
adc
cmps
pop
dec
xor
push
ins
push
xchg
test
popf
jg
inc
push
js
pushf
in
scas
bound
cmps
test
push
xchg
push
and
es
imul
inc
std
push
(bad)
retf
dec
mov
or
dec
stc
(bad)
in
sbb
imul
sbb
push
out
sahf
inc
fist
cld
mov
fnstsw
xchg
call
es
push
js
xor
scas
call
scas
stc
xchg
rol
mov
pcmpgtd
frstor
mov
std
out
jmp
pop
int3
aas
mov
mov
out
popf
inc
sbb
std
(bad)
sbb
ror
sbb
pop
push
call
loope
jo
test
or
xchg
sbb
inc
inc
mov
jle
push
mov
sub
push
daa
fadd
fldcw
mov
mov
push
inc
test
cmps
cmp
outs
inc
mov
stos
pop
push
xor
ss
mov
adc
test
loope
ret
cld
mov
push
js
pop
adc
out
xor
repz
sti
jle
and
xchg
xor
sub
sub
xor
icebp
mov
mov
lea
cmp
movs
sbb
jl
adc
and
pop
cmp
setbe
cmp
retf
aaa
das
pop
adc
sub
pop
or
fwait
test
outs
cmps
popa
jbe
sti
or
add
std
adc
sub
out
xchg
sahf
and
add
(bad)
das
sub
jecxz
mov
jge
out
movs
mov
xor
xor
and
mov
cs
hlt
jns
dec
xor
mov
test
rcl
test
pop
or
pop
test
xchg
pop
sub
sbb
dec
ror
pop
cwde
movs
rcl
(bad)
xchg
es
fdiv
(bad)
das
mov
gs
mov
adc
call
inc
xlat
shl
add
add
xor
pusha
xchg
in
xchg
push
inc
and
lods
out
aas
dec
mov
sub
fcom
es
js
jge
sbb
xor
out
mov
jnp
jmp
rcr
loop
jl
mov
mov
pop
mov
mov
push
clc
mov
xor
add
xchg
lock
cdq
pop
shl
ja
sbb
addr16
adc
std
push
retf
pop
loopne
adc
push
test
pop
lahf
(bad)
loopne
dec
jmp
adc
add
cmp
cmc
int
sbb
popa
test
stc
jle
addr16
xor
fs
xlat
push
bound
xor
sti
fsub
data16
leave
cmp
mov
push
jmp
or
dec
mov
sbb
cmp
aaa
pop
jo
mov
(bad)
hlt
rcl
jmp
adc
jmp
idiv
nop
shr
dec
mov
out
hlt
mov
(bad)
jo
add
inc
jle
add
mov
cs
or
push
(bad)
imul
jno
call
jne
xchg
ds
shl
sub
(bad)
sbb
not
repz
ins
ss
ds
iret
js
pusha
add
cwde
fs
aam
fistp
pop
retf
pop
sub
les
inc
mov
(bad)
in
mov
jp
or
dec
dec
icebp
adc
mov
pop
mov
mov
fmul
mov
sbb
cmc
jmp
add
sbb
(bad)
mov
dec
shl
fucomi
inc
xchg
and
mov
xor
les
cmps
(bad)
jne
adc
inc
pop
inc
jmp
sub
jnp
jmp
mov
push
iret
(bad)
outs
loope
mov
push
ss
daa
ins
aaa
ins
rcr
jmp
(bad)
mov
add
rcr
retf
fwait
lock
int
jg
in
out
adc
outs
lods
mov
mov
sbb
xor
and
into
fidivr
push
dec
add
rol
mov
adc
jmp
test
lods
setge
jne
out
sbb
jb
bound
add
(bad)
pop
mov
jbe
add
xor
div
arpl
xor
movs
jp
test
jno
jae
xchg
mov
mov
retf
ret
push
js
mov
rcr
and
dec
scas
fwait
lods
shr
repz
lods
push
jae
sbb
fdivr
out
pop
aad
xlat
xor
sub
push
inc
es
inc
jge
sbb
jns
les
clc
mov
int3
dec
leave
and
mov
mov
int3
fcom
mov
and
mov
pop
cli
and
xlat
jg
fld
push
(bad)
sti
and
stc
jno
mov
jbe
sbb
movs
inc
inc
out
mov
adc
mov
mov
outs
xor
test
and
adc
test
dec
sbb
lock
mov
pop
mov
loop
jecxz
cld
or
inc
xchg
pushf
push
aas
stc
add
push
pop
pop
or
in
rcr
inc
mov
push
jp
cmp
movs
or
fcmovne
push
shl
cli
(bad)
in
(bad)
inc
mov
aad
mov
inc
mov
mov
jne
in
xor
jno
jo
or
iret
dec
adc
retf
mov
mov
cmps
gs
ss
and
mov
lock
pop
mov
add
ins
jne
test
pop
(bad)
mov
iret
sbb
mov
aad
movs
jns
mov
add
pop
dec
sahf
sbb
cwde
inc
cmps
mov
daa
jge
out
rol
jne
(bad)
imul
mov
add
into
push
sub
adc
lahf
adc
mov
hlt
add
loope
inc
cmc
add
retf
xchg
(bad)
addr16
cmp
dec
arpl
(bad)
in
inc
jmp
cmp
sub
sbb
xchg
push
mov
xchg
cmp
push
sbb
push
(bad)
adc
jecxz
sub
iret
jl
inc
int
das
jp
and
inc
(bad)
mov
adc
push
jmp
push
out
daa
add
sub
test
adc
cs
cli
outs
sub
push
in
and
ja
adc
cs
mul
mov
or
aam
sbb
sti
xchg
jge
adc
out
out
shl
mov
add
jns
rcr
xchg
and
cld
adc
repz
fld
sub
or
(bad)
test
dec
xchg
iret
push
push
jns
mov
lahf
cmp
adc
add
mov
aas
cs
cmp
jae
push
hlt
ins
add
add
sub
aam
in
aas
pop
inc
adc
cmp
mov
test
dec
jge
or
fidivr
mov
pop
cwde
dec
int
hlt
es
and
cmps
stos
mov
cmp
div
inc
cld
push
dec
sbb
call
adc
mov
lock
pop
mov
leave
nop
dec
int
loope
push
pop
addr16
out
pop
cmp
dec
or
fsubr
fst
fadd
mov
pop
loope
jecxz
cmp
clc
cmp
add
push
sar
dec
push
jne
inc
fadd
(bad)
ins
out
xchg
push
push
cmp
jbe
push
unpckhps
mov
push
pop
in
xchg
inc
and
gs
popf
lock
loopne
adc
stc
add
int
push
inc
xlat
pop
xchg
test
hlt
or
mov
iret
dec
add
cli
fimul
inc
push
outs
cmp
xchg
test
and
xor
inc
add
and
icebp
loope
adc
or
inc
add
leave
sub
cmp
mov
not
out
inc
mov
cmp
inc
dec
mov
addr16
fisttp
add
sub
dec
test
and
and
pop
push
and
cmp
inc
add
leave
imul
jp
push
sub
punpcklbw
xor
and
pop
push
jne
sar
ret
cdq
push
add
adc
jge
out
test
cmps
clc
mov
push
jbe
push
pop
daa
push
js
cmp
push
jmp
adc
and
out
fadd
jne
js
lock
dec
test
cmp
push
push
bound
adc
inc
push
xchg
push
fldcw
jg
cmp
push
push
mov
sbb
push
jno
int
mov
inc
enter
rcr
shl
mov
inc
push
xor
loopne
inc
fsubr
aaa
cld
xor
jge
and
cmp
cld
jle
imul
inc
std
dec
sub
imul
adc
movs
pop
adc
mov
pop
or
pextrw
lea
mov
adc
pop
mov
test
shr
(bad)
push
enter
cs
cmp
stc
inc
push
add
mov
sub
ds
in
and
sar
test
mov
aas
sub
js
outs
test
ret
in
loop
xor
xchg
push
add
jge
push
ja
cmps
arpl
les
lea
jbe
xor
push
jbe
(bad)
mov
js
stos
mov
xchg
adc
inc
movs
pop
and
pop
ins
shl
sub
scas
and
sub
movs
adc
aad
adc
pop
retf
push
add
push
sbb
retf
idiv
pop
pop
and
clc
dec
push
stos
xchg
pop
lods
mov
addr16
nop
and
mov
cmc
pop
mov
out
mov
dec
mov
clc
pusha
inc
sti
retf
mov
bound
pop
stos
xor
jns
popf
sar
fbstp
sub
mov
imul
pop
add
fimul
xor
adc
pusha
aad
mov
pusha
push
test
xor
xlat
jmp
jge
xor
cdq
mul
js
xchg
shl
js
mov
sbb
push
add
add
cmps
out
fldcw
call
add
call
es
sub
mov
cdq
in
dec
in
xchg
gs
inc
adc
shr
pop
adc
out
jl
push
fisub
mov
pop
dec
mov
imul
mov
and
sub
and
push
aad
add
cmp
sub
test
sub
lods
ss
mov
push
movs
cmp
dec
jmp
mov
rcr
or
xchg
mov
xchg
call
movs
mov
retf
leave
sti
jp
ret
jg
stos
mov
loope
mov
leave
stc
pusha
adc
pop
dec
xor
aas
add
and
imul
or
fwait
push
push
stc
dec
(bad)
ins
les
outs
mov
ja
aad
xlat
mov
fld
push
xor
shl
push
cdq
shl
pop
mov
mov
pop
cld
jl
add
imul
adc
test
inc
dec
out
dec
mov
into
mov
mov
adc
mov
lds
imul
add
popa
scas
xchg
dec
xlat
out
xchg
cmc
xchg
adc
nop
dec
xchg
or
cdq
jmp
cmp
pop
mov
retf
leave
add
mov
cmps
mov
scas
push
cmp
scas
test
sub
ret
xor
(bad)
push
(bad)
jecxz
scas
mov
adc
xor
xor
adc
test
xchg
fwait
xchg
sbb
adc
push
and
push
outs
and
mov
mov
cmp
adc
and
fisttp
push
sbb
push
xlat
fstp
and
stc
jl
dec
and
(bad)
xchg
daa
movs
gs
push
xor
jge
stos
dec
inc
xchg
inc
mov
std
ins
ins
lods
xchg
cmps
add
jle
sub
fmul
cmps
repz
mov
mov
repz
call
jb
fdiv
push
and
mov
jecxz
aaa
push
cmp
sbb
and
arpl
nop
mov
adc
repnz
adc
ror
rcl
bnd
js
cmp
in
outs
(bad)
mov
add
xchg
xor
and
ja
sar
dec
call
ret
imul
pushf
xchg
daa
mov
and
repnz
cmp
lock
test
in
lock
sahf
test
out
test
mov
push
adc
retf
test
xchg
push
xor
push
ror
out
ret
jle
sbb
(bad)
leave
sub
xlat
inc
movs
sub
jno
es
and
inc
sub
add
sti
aad
lahf
dec
pop
jl
push
jne
jo
jge
lods
xor
fldenv
je
stos
and
xlat
sbb
pop
mov
xchg
ror
cmp
adc
mov
inc
push
push
mov
fist
or
dec
adc
outs
push
pop
leave
cli
jmp
out
in
ds
mov
mov
xchg
inc
jmp
sub
imul
xor
aaa
add
outs
push
div
fwait
xchg
test
stos
ucomiss
push
add
aas
xor
into
pop
cli
inc
test
mov
adc
mov
ins
xor
into
jecxz
(bad)
sti
sub
das
(bad)
loop
or
inc
call
shr
inc
test
dec
jns
jo
mov
pop
jmp
fnstcw
movs
fistp
das
add
cmp
ins
xor
arpl
in
sub
xchg
sub
or
dec
jbe
mov
dec
outs
leave
int3
pop
pop
arpl
int
jg
fucomi
pusha
hlt
cmc
retf
jecxz
jno
fistp
ret
pop
ficom
inc
mov
jnp
loope
push
sbb
ins
dec
cmps
xor
lock
mov
(bad)
pop
or
pop
add
jne
mov
jl
cld
add
cmps
jle
fucomp
in
jmp
sbb
fsub
mov
int
cld
pusha
or
ds
add
push
and
mov
inc
in
jb
and
pop
aaa
mov
mov
sbb
push
lahf
sub
push
sahf
into
ins
sbb
xchg
dec
xor
inc
enter
call
dec
retf
sub
dec
jg
sahf
scas
call
fdiv
push
test
mov
mov
inc
cli
sbb
mov
jmp
and
dec
xor
pusha
es
mov
inc
jne
cmp
scas
aad
xchg
arpl
sbb
mov
xchg
mov
lods
sbb
dec
xchg
mov
movs
jne
add
mov
aam
daa
xor
push
or
ds
call
add
mov
mov
mov
pusha
daa
mov
cmp
or
adc
cs
and
add
sub
retf
mov
adc
in
jns
fdiv
loopne
mov
je
sbb
loop
retf
fistp
aad
clc
outs
xor
mov
xchg
jg
or
push
das
in
sbb
mov
pusha
test
fmulp
aad
(bad)
sub
arpl
pop
inc
pop
cmp
or
mov
js
fidivr
call
pop
push
jl
mov
inc
out
out
leave
(bad)
repz
call
hlt
std
cmps
dec
enter
jmp
imul
ret
push
imul
cmps
out
fld
push
push
mov
addr16
push
xchg
jg
push
in
sub
pop
push
push
mov
sub
and
scas
pop
imul
sub
sub
or
hlt
imul
gs
retf
mov
pop
call
mov
cmp
pop
sub
cmp
dec
das
mov
xchg
sub
mov
jl
and
or
lea
xchg
(bad)
or
push
out
sbb
mov
test
pop
out
add
(bad)
fld
jns
int3
lods
outs
jae
out
push
sbb
(bad)
adc
jae
jmp
sub
cmps
add
out
xor
sbb
xchg
fdivr
ins
das
jp
fcom
cmps
xchg
sbb
aam
scas
in
sbb
add
sbb
js
xor
dec
pop
out
push
bswap
push
(bad)
loopne
push
cmp
push
pop
add
es
pop
aad
fcom
inc
lock
stc
lock
or
neg
scas
(bad)
mov
or
ins
dec
scas
movs
fsub
inc
in
retf
aaa
imul
test
cli
xor
bound
inc
cmps
mov
mov
sbb
dec
mov
outs
ins
test
inc
fadd
jns
and
mov
fidiv
xor
inc
hlt
sar
out
imul
push
mov
ins
mov
or
aas
mov
inc
in
fbstp
pop
jns
cmp
mov
cwde
sub
pop
and
push
retf
pop
sar
adc
mov
das
mov
xchg
xchg
push
inc
retf
mov
aad
jo
cs
fld
loop
mov
ret
mov
xchg
add
inc
es
and
out
mov
push
lods
push
add
or
hlt
cli
jle
pop
jo
inc
jns
cs
stos
sbb
(bad)
dec
xor
cwde
dec
add
sbb
or
pop
push
mov
shl
imul
retf
sbb
std
jns
dec
mov
cmp
into
sub
fimul
jge
scas
out
and
aaa
jno
push
test
hlt
cmps
ret
xchg
sbb
mov
dec
add
mov
(bad)
jp
mov
je
mov
xor
fsub
repnz
jle
push
jne
fadd
mov
add
lahf
or
loop
dec
sti
das
cmp
in
dec
mov
aas
pop
lods
mov
(bad)
cld
jno
xchg
or
xchg
sub
rcr
or
pop
fist
clc
sbb
lods
xlat
out
fisttp
jmp
fs
and
sbb
repz
mov
inc
movs
sub
dec
shr
adc
and
sti
sahf
cmp
adc
mov
xor
popa
pop
out
pop
arpl
pop
mov
sbb
sbb
mov
mov
fs
fwait
xor
aam
stos
es
and
mov
neg
lds
(bad)
outs
dec
jmp
and
jl
sbb
jae
pushf
pop
push
adc
adc
idiv
xchg
xchg
(bad)
dec
loop
pushf
or
pmuludq
fwait
mov
mov
dec
inc
rcr
arpl
movs
pop
lods
stc
pop
cli
push
sbb
cmp
movs
sbb
pushf
jno
add
movs
xchg
cmp
aad
fadd
leave
inc
stos
mov
mov
jae
mov
jp
sub
scas
fisub
sahf
add
mul
fst
dec
cmps
mov
push
cmc
sbb
xchg
retf
ss
pusha
and
ss
and
arpl
test
fnsave
xor
shr
shr
outs
repnz
fstp
sti
ins
fistp
fist
not
jno
call
js
inc
cdq
int3
pop
lock
jb
push
bound
sbb
jg
outs
sbb
(bad)
gs
popa
adc
push
sbb
test
mov
adc
fwait
bound
and
mov
in
pop
(bad)
cmps
loop
sub
cld
adc
test
mov
sbb
stc
mov
fsub
adc
scas
int3
(bad)
in
pop
mov
or
lahf
out
pop
adc
dec
inc
in
pop
dec
jmp
das
add
push
sahf
lds
fild
popa
scas
mov
xor
sbb
dec
dec
ss
sbb
adc
rol
adc
jg
hlt
mov
aad
leave
ja
inc
fsubr
shl
(bad)
enter
outs
leave
out
addr16
or
cwde
add
out
dec
sbb
ret
movs
adc
int3
aam
lea
mov
cmp
jae
adc
push
enter
pop
aas
jle
cwde
int
pop
add
inc
hlt
sbb
jle
or
or
sub
loopne
inc
(bad)
rol
icebp
popa
data16
cmps
stos
fidiv
ins
sub
jb
arpl
mov
or
cdq
ins
mov
push
lods
inc
mov
add
jbe
fisub
inc
xchg
in
ds
and
pop
xor
add
scas
retf
adc
lods
sub
lds
movs
mov
cdq
out
test
fisub
in
xor
in
out
add
cmp
dec
out
dec
pop
push
jno
popf
(bad)
xchg
bound
int
dec
xchg
repz
retf
in
jge
jbe
pop
add
imul
scas
or
cmps
cmc
fistp
(bad)
enter
fistp
ins
jge
jnp
cmp
mov
dec
mov
mov
ffreep
ret
sub
jge
pop
popa
pusha
jb
sub
sti
adc
retf
push
repnz
cmc
mov
sub
vpshaw
push
ins
push
xchg
mov
and
lahf
cmc
ins
adc
push
mov
cmp
retf
xchg
cmp
retf
cs
loop
dec
fsub
mov
mov
stos
mov
xchg
sbb
daa
mov
stos
xchg
sbb
and
aas
and
call
mov
sbb
xchg
in
cmp
inc
lods
imul
inc
mov
and
stc
sbb
push
or
fnstsw
cmp
dec
push
xchg
sbb
and
lods
adc
jp
mov
dec
jns
inc
mov
or
xchg
push
into
jbe
out
not
in
das
mov
sti
mov
xchg
and
jp
push
jae
mov
push
imul
xchg
test
stc
mov
sbb
ret
ret
jecxz
add
fst
and
dec
lahf
jmp
fnsave
out
inc
adc
mov
or
push
in
gs
mov
and
not
push
popa
jno
repz
lahf
xor
lahf
cmp
in
pop
xor
inc
inc
sti
loopne
xchg
push
sbb
popa
test
inc
loop
sbb
rcr
add
pop
(bad)
cmp
jmp
std
nop
sahf
xor
lds
pop
in
mov
mov
or
mov
movs
mov
mov
mov
mov
inc
pop
mov
scas
cmps
lock
ins
cld
scas
xor
movs
enter
aad
inc
test
sbb
lds
mov
out
mov
adc
hlt
arpl
mov
test
test
or
dec
and
inc
js
and
sub
cmp
test
mov
pusha
test
std
cmps
not
sbb
pop
call
push
sbb
stos
or
inc
add
int
fucom
test
ret
push
pusha
xchg
retf
sub
pop
cs
js
cld
lds
outs
push
adc
pop
mov
xchg
mov
xchg
leave
add
call
xor
mov
outs
outs
inc
inc
add
enter
pop
or
(bad)
aaa
fisttp
popf
stc
not
retf
push
and
and
jo
sub
out
pop
dec
dec
sar
jns
dec
fwait
dec
cmp
adc
je
and
add
add
test
mov
retf
push
stos
icebp
cmp
ror
jnp
dec
mov
and
in
bound
xor
arpl
inc
jmp
xchg
(bad)
mov
pusha
add
not
xor
loop
rcr
mov
mov
(bad)
call
sub
adc
gs
stc
pop
not
xchg
sbb
sub
xor
gs
call
pushf
lock
pop
cmc
mov
ds
cmp
test
or
mov
push
adc
jne
ficomp
hlt
dec
out
js
push
and
sar
aad
shl
inc
call
add
adc
cs
popa
fstp
ret
in
or
clc
sbb
jbe
cmp
lods
pop
mov
scas
dec
dec
ret
mov
cmp
pop
sub
fdivr
mov
(bad)
or
enter
lods
mov
scas
(bad)
push
sbb
dec
test
js
and
pop
sub
push
aad
mov
stos
dec
jb
fadd
pop
xor
loope
out
ins
test
and
test
mov
cld
xchg
in
loope
clc
add
ffreep
sub
jo
in
test
std
push
cmp
xor
movs
je
mov
or
or
lock
out
xchg
pop
adc
xor
arpl
xchg
or
(bad)
repz
loope
cmp
push
xchg
sbb
enter
cmps
mov
adc
jg
test
gs
out
jb
dec
lea
bound
mov
xchg
adc
ret
(bad)
shl
scas
mov
sbb
pop
pop
push
push
out
cmp
cmp
clc
dec
pop
(bad)
cmp
sub
mov
push
mov
pop
push
xchg
cs
jmp
sbb
xor
inc
xchg
dec
inc
mov
int3
outs
aam
mov
(bad)
rcr
sbb
inc
push
sbb
in
push
ds
test
lock
cdq
cmp
rcr
(bad)
dec
mov
inc
jbe
ins
push
loop
pop
loope
adc
cmps
or
test
mul
lock
stos
ss
(bad)
jbe
loop
sbb
paddsw
scas
pop
mov
xchg
aaa
enter
mov
inc
mov
int
or
fild
outs
xchg
mov
jbe
pop
push
mov
ror
dec
lock
movs
dec
mov
popa
aas
(bad)
push
les
stos
(bad)
and
pop
push
jl
cmc
lmsw
push
repnz
sub
(bad)
(bad)
pop
pop
imul
push
cmp
int
jmp
fs
mov
inc
adc
mov
cmp
js
ins
jecxz
outs
mov
in
xchg
adc
call
ins
jo
sbb
jo
inc
xor
sbb
les
cli
sti
fsubr
(bad)
leave
or
fidiv
mov
shl
ss
retf
mov
pushf
cmp
out
pop
push
push
les
lods
aaa
cs
int3
inc
jp
js
lds
sbb
push
jge
ja
mov
xor
mov
jnp
or
sbb
xor
add
jecxz
sahf
in
loopne
xor
mov
adc
push
dec
push
leave
jmp
push
cs
cmp
mov
xor
jge
sti
scas
xchg
jns
arpl
(bad)
and
mov
inc
push
or
mov
or
mov
into
jae
add
dec
clc
repnz
test
mov
aad
cmp
cmp
fild
push
pop
arpl
sbb
in
cld
(bad)
std
xchg
pop
retf
and
or
push
(bad)
das
fisub
xor
pop
aaa
jl
mov
lods
push
adc
mov
dec
ret
dec
xchg
or
adc
(bad)
in
jle
mov
xchg
idiv
out
fwait
fwait
push
adc
hlt
bound
js
adc
sbb
aaa
mov
ret
adc
add
out
js
dec
out
push
ror
shr
mov
lods
add
mov
fidivr
mov
not
add
adc
mov
dec
jmp
mov
dec
out
jns
ret
jmp
repnz
stc
jmp
and
jb
push
dec
out
sub
lods
adc
(bad)
or
jae
cmp
scas
push
mov
or
pop
fxtract
es
mov
rol
xor
clc
jmp
adc
mov
iret
idiv
xchg
arpl
xor
(bad)
or
pop
sub
jno
outs
and
ss
in
(bad)
fcmovne
jmp
push
cwde
push
retf
sub
aad
pushf
inc
aam
int3
pop
cld
mov
xchg
ss
movs
rcr
cmp
pop
movs
rcr
ret
psubb
jbe
and
mov
in
push
mov
ret
cmps
dec
aam
xor
xor
dec
sar
xchg
sub
sbb
ficomp
mov
stc
jge
(bad)
adc
jno
mov
and
mov
mov
push
mov
pusha
imul
jno
aaa
test
cli
imul
push
ds
iret
not
cs
cmp
rol
scas
push
pop
(bad)
aam
sub
push
push
scas
test
jle
push
add
movs
hlt
scas
cwde
sar
mov
add
enter
mov
add
loopne
mov
and
retf
jne
loope
jnp
sbb
ss
dec
push
inc
pushaw
loopne
cwde
mov
std
fs
in
imul
dec
pop
test
in
cmp
enter
jbe
sub
jns
pop
add
mov
mov
sahf
cmp
out
bound
call
pop
repz
les
sbb
sub
arpl
or
sbb
cmc
xor
imul
shl
and
enter
aad
mov
jne
sbb
cld
iret
stos
in
or
pop
add
mov
call
test
or
add
movs
test
nop
adc
sub
cmp
xor
aam
jecxz
mov
sub
outs
pop
aad
push
pop
pop
fcmovu
sbb
fcom
out
lds
pop
pop
jae
push
xchg
popf
clc
movs
adc
mov
fidiv
(bad)
mov
mov
outs
ret
imul
or
adc
xor
push
lods
das
cmc
jno
or
ret
add
add
outs
sbb
mov
or
cmp
sub
jg
pushf
xchg
jg
mov
push
xchg
leave
mov
mov
mov
mov
retf
mov
mov
adc
aas
pop
popf
enter
mov
adc
in
jnp
jp
xchg
int
test
adc
add
fdiv
sub
les
pop
inc
dec
movs
dec
inc
dec
sub
pop
ret
pop
push
test
jge
dec
add
cdq
mov
iret
or
jbe
sub
cmp
and
test
test
(bad)
ss
in
scas
mov
xchg
in
scas
jno
mov
les
dec
mov
pop
pop
mov
(bad)
inc
sub
sub
in
sub
inc
sub
or
mov
mov
push
mov
pop
inc
test
aam
cwde
ss
hlt
or
lock
sub
mov
cs
loop
pop
or
mov
in
inc
jno
fcmovnbe
jae
sub
retf
or
dec
(bad)
mov
std
(bad)
xor
pusha
pop
out
cmovs
mov
mov
push
jne
mov
aad
test
test
pop
pop
stos
fs
add
cld
out
mov
sbb
fwait
icebp
xchg
and
ror
adc
jnp
or
mov
mov
inc
dec
mov
and
jge
mov
jo
je
idiv
out
mov
stos
adc
fmul
fwait
ss
mov
adc
scas
je
sar
ret
inc
outs
loope
fs
xchg
mov
out
dec
jbe
adc
jl
jl
adc
int3
inc
(bad)
outs
in
push
pop
outs
push
sub
cmc
mov
je
fs
mov
inc
pop
popa
mov
xor
cmp
add
loopne
pusha
int
pop
(bad)
nop
cmc
dec
mov
idiv
out
(bad)
imul
(bad)
or
data16
adc
test
pop
mov
cmc
xchg
test
outs
jb
mul
call
push
es
ror
fldcw
pop
ss
je
ss
pop
ss
mov
clc
call
hlt
clc
shl
mov
mov
inc
ins
daa
shl
jbe
int
iret
div
hlt
sar
mov
les
cwde
jmp
jp
adc
xor
loop
daa
dec
repz
xchg
xor
out
cli
inc
out
aas
retf
xchg
push
sub
test
daa
ins
je
aad
into
dec
out
lods
xor
mov
push
mov
push
jo
sub
mov
sub
mov
push
cmp
nop
pop
lods
hlt
dec
call
pushf
ins
enter
push
cmps
shl
ret
mov
into
and
mov
div
out
jle
push
ficom
or
fcomp
js
out
icebp
in
loope
and
in
iret
sub
pushf
in
add
retf
jnp
xlat
addr16
mov
fwait
cmp
in
add
push
imul
aaa
call
fcomp
andps
cmp
sar
push
mov
add
rcl
es
push
inc
(bad)
mov
mov
xchg
lahf
ins
ins
adc
cmp
into
adc
aad
push
rcl
gs
adc
cmp
nop
fild
cmps
xchg
sbb
xchg
dec
ins
call
push
movs
aad
leave
fmul
sbb
dec
fs
sbb
mov
mov
mov
ss
sbb
inc
rcr
(bad)
movs
inc
cdq
dec
jne
shr
div
stc
(bad)
fcom
adc
aad
rol
int3
xchg
inc
pop
and
aad
mov
cli
shl
imul
leave
mov
push
push
dec
and
jmp
jne
push
xor
push
imul
lahf
jne
pop
mov
stos
scas
sub
mov
(bad)
out
test
add
out
out
loopne
jmp
sub
fs
xor
add
retf
cmp
mov
stos
adc
pop
test
lds
std
cmp
jnp
dec
sbb
push
jmp
mov
or
xor
xor
push
ret
pop
mov
xor
xor
sbb
dec
shl
loop
data16
mov
stc
shl
ret
test
in
ss
cmp
je
dec
or
cs
or
xor
jbe
mov
push
dec
imul
add
out
loopne
jmp
pop
shr
popa
icebp
sbb
push
inc
mov
fcomp
scas
inc
sub
mov
fdivr
dec
jns
mov
std
sbb
mov
sbb
in
push
mov
mov
jbe
xchg
or
jnp
gs
inc
dec
cmp
dec
int
dec
jnp
cli
(bad)
sar
xchg
mov
movs
std
and
and
call
iret
js
dec
xor
mov
in
stos
cld
das
add
inc
cs
pop
xchg
cwde
mov
adc
xlat
mov
es
pushf
jmp
dec
xchg
rol
jnp
push
sub
mov
(bad)
(bad)
xchg
pop
cmps
scas
push
xchg
adc
mov
inc
jb
(bad)
std
out
sub
cwde
xchg
dec
or
sub
xor
sbb
xchg
cwde
xchg
mov
push
lock
fwait
pop
jno
mov
cmp
cmp
add
sub
mov
ins
(bad)
retf
push
int
imul
cmp
and
xor
js
sbb
inc
mov
adc
test
pop
stc
enter
dec
inc
es
sbb
pop
retf
and
xchg
outs
or
repnz
mov
mov
sub
push
mov
push
fisub
pop
popa
iret
inc
sahf
pop
sbb
mov
sub
push
in
nop
mov
das
push
jg
aas
(bad)
jne
test
in
inc
enter
jle
jae
or
push
imul
fwait
dec
leave
pop
mov
or
xchg
pop
fldpi
xchg
mov
push
mov
mov
sub
movs
push
cdq
fst
or
cmp
cwde
push
xlat
mov
call
mov
sti
mov
inc
lea
xor
ret
inc
xor
cmp
enter
aaa
jmp
xchg
add
in
stc
or
mov
cmp
scas
add
gs
mov
dec
push
lahf
sbb
aas
stos
aad
mov
push
mov
add
xchg
sub
mov
or
lds
cs
rcr
mov
bound
dec
in
mov
test
lods
sbb
pop
or
inc
inc
test
shl
jns
inc
fwait
dec
push
fiadd
lds
inc
jmp
(bad)
pop
jg
inc
add
jb
xchg
pop
stc
push
bound
sti
xchg
into
sub
jb
movs
adc
in
jne
add
aas
sub
push
add
mov
and
ins
sbb
call
inc
jo
mov
xchg
clc
xchg
mov
outs
sbb
adc
jmp
jae
lds
mov
mov
xchg
cmp
inc
dec
jl
and
xor
stos
scas
jecxz
jb
push
frstor
cld
mov
fcom
pop
ror
cli
xchg
push
jo
xchg
scas
mov
das
mov
loopne
pop
sub
cmp
cwde
scas
div
jae
aaa
loope
repz
push
adc
mov
popa
dec
movs
test
daa
aad
mov
pop
stc
xchg
mov
and
and
mov
mov
jbe
fidivr
xor
mov
pop
out
mov
cmp
scas
movs
popf
repnz
cmp
daa
ja
jl
stos
cmp
mov
inc
push
mov
fcmovnb
push
mov
cmc
adc
(bad)
ret
pop
mov
popa
bound
clc
cli
mov
into
xor
shr
ins
pop
xchg
sub
into
fdivr
mov
les
xor
mov
(bad)
mov
or
into
sar
xor
imul
pop
push
adc
fisubr
jo
lds
or
mov
dec
sbb
js
xor
int3
loope
push
adc
int
adc
jge
imul
sbb
loop
or
jle
stos
dec
pop
add
je
xchg
jno
mov
cmp
dec
mov
icebp
mov
inc
mov
jecxz
xchg
jl
scas
aas
leave
fyl2xp1
pop
call
pop
fmul
stc
and
sti
xor
loop
lock
lds
repnz
mov
outs
push
rcr
ficomp
mov
out
mov
ins
sub
cmp
movs
jle
add
mov
mov
lds
jecxz
mov
sub
cmp
sub
aas
cwde
cmp
cmp
outs
xor
sub
mov
(bad)
xchg
sub
lods
dec
dec
neg
cmp
addr16
repz
inc
mov
xor
jg
(bad)
xchg
lea
mov
fidiv
fwait
stos
pop
aaa
jns
adc
dec
shr
push
mov
push
pop
fcom
and
push
push
mov
outs
sub
push
imul
and
jb
cld
out
imul
sbb
sbb
cmp
ss
push
outs
fst
retf
mov
pusha
cdq
jno
enter
jnp
in
test
pop
or
cmps
or
dec
xlat
and
mov
add
rol
in
inc
mov
in
gs
fiadd
(bad)
out
jb
leave
dec
or
cdq
inc
int
call
in
bound
mov
xor
xor
push
lahf
mov
jo
pop
xchg
aam
lods
sbb
cmp
shl
jmp
mov
dec
(bad)
jmp
ret
cmp
add
dec
adc
mov
into
inc
xor
cld
push
pop
movs
loopne
scas
jmp
das
xchg
repnz
jge
pop
dec
mov
push
add
addr16
mov
dec
inc
sbb
iret
xor
mov
and
or
les
jle
xchg
mov
push
mov
push
jo
and
in
push
inc
retf
test
int3
test
fdiv
mov
add
sub
pop
or
dec
push
fcom
popf
pushf
and
add
sti
or
cmp
out
fst
jmp
xchg
in
sti
mov
fisubr
jle
(bad)
push
pop
xor
sub
cmps
dec
add
adc
je
cmps
push
pop
cwde
ins
cmp
aas
cwde
scas
in
xchg
std
xchg
jns
fisub
or
sbb
push
xor
call
loop
sub
jnp
xchg
mov
js
cmps
fisttp
es
mov
xchg
xlat
(bad)
out
psadbw
stos
(bad)
idiv
jns
lahf
and
mov
std
pop
sti
arpl
iret
loope
pop
and
xchg
in
push
lods
rol
mov
test
adc
cs
and
rol
xor
int
push
out
rep
mov
popf
sub
and
push
clc
push
lods
push
fs
int
je
mov
inc
jg
les
pop
rol
jg
js
das
cmps
xchg
mov
into
(bad)
mov
push
es
les
ja
jg
imul
inc
sbb
lahf
pop
jmp
scas
clc
lods
push
push
xchg
push
call
lmsw
outs
xor
adc
dec
cdq
inc
mov
mov
inc
cmp
add
int
mov
cmp
jo
outs
repnz
pop
(bad)
pop
dec
(bad)
dec
sub
and
pop
aam
inc
icebp
add
sbb
add
xor
ins
xor
mov
or
push
cwde
cwde
nop
(bad)
scas
out
dec
ror
push
test
(bad)
fdiv
sbb
sub
not
gs
sub
repnz
pop
or
and
xchg
jns
adc
adc
enter
les
mov
jmp
sbb
lahf
cmc
jnp
fimul
retf
ror
mov
xlat
dec
xlat
out
ret
mov
jae
cmps
lods
sub
dec
pusha
jne
daa
mov
or
sub
push
pop
cmp
ja
mov
out
in
mov
in
cli
or
mov
adc
(bad)
repnz
(bad)
lahf
or
and
jmp
xor
loop
push
popa
lds
cmp
(bad)
cmp
cmp
scas
lods
in
arpl
or
idiv
sahf
adc
push
fisttp
arpl
pushf
int
test
fcomp
mov
enter
(bad)
sub
call
out
and
cmp
jns
cli
dec
jmp
pop
mov
inc
xor
jb
bound
jge
add
pop
pop
xor
ins
cmps
dec
and
adc
fiadd
fstp
mov
fs
ret
push
pop
mov
dec
arpl
or
xor
pusha
mov
cmp
mov
pop
jne
xchg
and
loop
mov
xchg
loopne
xor
xchg
adc
out
pop
add
outs
cli
gs
sbb
outs
dec
aas
sub
add
push
jecxz
push
mov
pop
sbb
mov
xlat
mov
(bad)
repnz
(bad)
adc
cs
fsub
or
scas
xchg
dec
mov
cmp
xchg
mov
add
and
jecxz
lock
or
push
out
inc
std
clc
mov
jae
and
and
(bad)
sahf
pop
dec
inc
cmp
dec
dec
pop
mov
jmp
mov
fst
ins
(bad)
(bad)
push
arpl
repnz
sub
mov
pop
icebp
das
xor
add
paddb
fcom
jp
mov
jmp
outs
adc
sub
and
adc
pop
push
and
scas
push
dec
inc
sbb
mov
leave
aad
dec
jne
xor
cmp
adc
or
xor
(bad)
aad
popf
das
xor
outs
idiv
jns
xlat
leave
xchg
sbb
adc
jb
nop
xchg
lea
mov
jns
ret
xor
push
cwde
pop
js
(bad)
je
(bad)
jb
xor
xchg
jo
and
rol
popf
pop
aad
inc
sub
xor
and
les
jb
cmps
fiadd
fwait
push
mov
adc
jne
add
pop
leave
sub
jnp
js
rcr
es
jge
dec
rcl
sub
outs
cmp
mov
push
out
mov
call
enter
push
push
inc
bound
or
xlat
pop
pushf
inc
adc
nop
jbe
push
sbb
adc
adc
jmp
sub
aaa
mov
push
ins
out
call
pop
and
sub
dec
movs
(bad)
enter
int3
retfw
lock
fsin
sbb
les
jo
cmp
sbb
in
pop
in
scas
hlt
mov
push
sub
mov
mov
imul
div
pop
jmp
(bad)
retf
add
call
xlat
cld
xchg
test
jo
inc
push
xchg
fsubr
mov
ss
dec
sbb
imul
mov
iret
fst
iret
loope
rol
nop
mov
jmp
pop
xor
or
pusha
sub
addr16
shl
lods
sbb
repz
scas
pop
mov
jl
pusha
push
jns
jne
inc
fimul
dec
xchg
std
push
adc
repnz
mov
adc
mov
dec
sbb
xor
ss
mov
push
das
mov
sub
and
jle
jp
imul
test
mov
push
inc
outs
mov
sbb
dec
bound
push
into
jne
jecxz
dec
fstp
or
push
nop
cli
retf
xchg
jp
fld
mov
jns
xchg
jecxz
mov
push
mov
jmp
ret
neg
out
movs
add
jae
add
pop
push
and
and
aas
(bad)
fild
xor
aam
(bad)
adc
cmp
(bad)
jnp
std
push
ds
mov
mov
cs
rcr
mov
dec
cli
jne
repnz
inc
(bad)
outs
call
jnp
jp
and
mov
mov
mov
mov
int
pop
cmp
or
shl
cdq
push
fmul
lea
loopne
and
loop
sub
(bad)
cwde
and
mov
push
cmp
pushf
adc
and
lds
jbe
pop
mov
mov
inc
dec
or
jp
test
enter
iret
mov
aad
inc
repnz
aad
out
lahf
jp
fst
pop
sbb
push
hlt
imul
cld
and
add
jno
and
pop
div
mov
test
repz
stos
mov
cmp
cmps
sbb
sub
movs
jb
aam
mov
cli
sbb
lds
pusha
and
pop
inc
and
mov
jmp
test
fisttp
or
sub
jno
(bad)
call
repnz
xchg
xor
movs
push
iret
loopne
shr
jae
adc
leave
out
out
aaa
push
pop
stc
stos
mov
fimul
and
fisubr
mov
ss
push
fimul
mov
inc
(bad)
mov
mov
fmul
std
je
fsub
outs
cdq
mov
fistp
or
pusha
(bad)
adc
aaa
mov
(bad)
rcr
jne
hlt
dec
imul
lea
shl
cwde
xor
or
retf
jnp
or
fidivr
in
mov
or
or
sbb
fnstsw
rcl
shl
sub
fisubr
loopne
(bad)
lods
ret
enter
rol
inc
iret
adc
sbb
and
adc
sbb
xor
sti
cmc
xchg
mov
rcr
movs
shr
lods
test
cmp
jno
or
hlt
mov
out
outs
dec
lock
jb
fmul
add
jmp
and
sar
add
pop
and
test
mov
jbe
ins
pop
popf
push
icebp
sub
daa
mov
inc
or
mov
and
repnz
or
cmps
inc
xor
sbb
inc
jae
sub
fdivr
xor
cmp
adc
pushf
es
or
jge
adc
and
into
lds
in
mov
inc
cmp
sub
push
add
adc
push
sbb
iret
add
cmps
dec
inc
loope
and
or
and
mov
aaa
mov
pop
outs
out
lods
shr
jne
mov
dec
addr16
inc
pusha
hlt
sub
imul
mov
in
imul
fnstsw
(bad)
out
loope
xchg
push
clc
arpl
sar
adc
popa
and
in
popa
shl
psubusb
mov
mov
push
repnz
out
jno
mov
in
pop
sti
sub
aam
push
addr16
enter
xor
ins
and
mov
sbb
lods
fstp
mov
div
aas
pop
cwde
fild
dec
sbb
mov
mov
scas
push
jbe
add
lock
in
xchg
mov
dec
jecxz
outs
loopne
scas
push
dec
je
in
inc
sub
int3
jp
mov
pmulhw
jne
mov
cdq
in
push
dec
scas
mov
lahf
pop
test
das
jmp
and
dec
sbb
stos
stos
(bad)
dec
pushf
adc
sbb
xor
fstp
sub
add
jmp
sbb
pop
jno
mov
cmps
mov
jne
mov
dec
mov
cmp
xchg
mov
stc
and
cdq
xor
mov
jg
imul
(bad)
dec
add
xchg
int
cmps
stc
stc
retf
and
dec
call
xchg
inc
jo
or
pop
cmp
mov
movs
and
adc
mov
mov
rol
or
shl
stos
or
pop
lock
xor
xchg
out
push
inc
push
int
or
xlat
repz
jae
lock
xchg
not
popf
xor
adc
add
daa
repnz
add
lea
or
mov
xchg
sar
lods
into
dec
dec
lods
aam
fldenv
xchg
mov
cld
ds
sub
mov
cdq
jmp
scas
scas
or
sub
sbb
leave
cli
mov
lds
add
(bad)
jp
inc
imul
out
push
xchg
(bad)
in
mov
es
pop
mov
fistp
mov
cwde
movs
mov
adc
in
sub
cdq
xor
cmps
sbb
ret
mov
dec
and
(bad)
sub
add
into
test
add
mov
mov
jle
mov
ins
mov
icebp
inc
sub
jno
(bad)
popa
mov
adc
mov
cmps
or
lods
adc
sub
ins
arpl
imul
out
sahf
mov
js
xchg
loope
rcl
add
mov
cmp
js
sub
int3
gs
xlat
ret
mov
jae
mul
push
dec
cwde
rep
inc
mov
repz
jmp
sahf
addr16
adc
push
ins
clc
cmp
mov
test
lea
jns
pushf
mov
jno
cmp
xchg
into
int
jg
cld
adc
dec
cs
sub
ficomp
ins
xchg
or
out
fucomip
or
ja
and
stc
push
sub
or
and
mov
xchg
pushf
test
sti
sar
xor
mov
mov
cmps
pop
jo
out
dec
xor
xchg
shr
fstp
movs
scas
(bad)
sub
xchg
lock
mov
cmps
stc
pop
push
lock
stc
push
or
mov
pop
cmp
mov
inc
lahf
fdivr
or
int3
cmp
jb
add
iret
int3
push
mov
or
jmp
in
ins
shl
sbb
scas
jmp
pop
add
push
or
sbb
xchg
ret
push
cdq
fcomp
mov
jae
push
call
mov
xor
pop
cmp
mov
mov
mov
sub
ret
cld
push
sbb
aaa
adc
in
xchg
dec
lds
iret
test
push
out
imul
arpl
int
repz
(bad)
outs
dec
sti
leave
repz
xor
lods
push
pop
mov
sub
repnz
push
xor
out
sahf
mov
mov
dec
pop
fsub
movs
pushf
inc
data16
imul
xor
shr
addr16
add
lods
or
or
adc
or
ja
push
ss
sub
ins
in
xchg
and
mov
mov
xchg
and
push
in
leave
loopne
xor
push
enter
pusha
repnz
test
or
pushf
cmp
inc
mov
or
jnp
mov
(bad)
ss
loopne
es
dec
push
inc
add
pop
and
rcl
ret
lea
ins
(bad)
xor
clc
(bad)
sbb
push
sub
in
mov
int3
inc
pushf
adc
mov
add
fmul
push
xchg
sub
or
jmp
jmp
jp
xchg
adc
xor
enter
jns
mov
addr16
faddp
outs
sub
and
mov
xor
rcr
das
inc
call
add
jp
ror
mov
or
mov
repnz
add
out
pushf
(bad)
push
sbb
xchg
lods
outs
div
jns
xchg
pop
and
fsubr
dec
pop
stc
xor
aas
push
aaa
in
dec
scas
and
cs
mov
cld
out
pop
xchg
mov
adc
dec
ret
mov
inc
mov
inc
add
leave
adc
mov
mov
das
(bad)
mov
inc
adc
sbb
nop
lock
cdq
pop
ror
xor
aaa
fucomp
xchg
mov
in
push
aas
sar
jecxz
dec
xchg
and
aam
ror
fadd
fild
clc
fdivr
inc
das
add
mov
mov
bound
add
inc
outs
sbb
lds
mov
imul
ins
jo
cmp
sub
jns
push
pop
scas
mov
popa
mov
xchg
pop
xor
mov
inc
and
fcmovne
ror
jns
jmp
test
and
out
sbb
mov
das
in
mov
pushf
pop
test
sub
pop
sti
ret
(bad)
stos
xor
cmps
sub
ficom
inc
jg
fcom
mov
aaa
push
jnp
ja
or
sub
ds
cmps
outs
push
xor
repnz
and
fisttp
add
lds
test
jge
fadd
call
cmp
mov
adc
add
mov
ins
mov
mov
sti
dec
pop
inc
sbb
cmp
xchg
cmp
pushf
adc
mov
or
adc
dec
jae
dec
cli
xor
mov
cmp
add
dec
aaa
fs
push
iret
pop
pop
push
fwait
sbb
jg
adc
loope
int
(bad)
pop
jecxz
pop
shl
sti
sbb
xchg
in
jmp
movs
test
jae
leave
movs
pop
xchg
or
jmp
mov
aam
pop
mov
lea
fcmovu
jmp
sbb
jle
add
sar
jo
cmp
lahf
cmp
call
xor
outs
xor
add
dec
inc
cmp
xchg
sbb
(bad)
lods
jmp
enter
push
std
cmp
add
add
fs
push
cdq
mov
push
push
test
ret
jnp
les
loope
cmp
rcl
aaa
mov
mov
and
scas
pusha
out
mov
xchg
xchg
addr16
xchg
push
data16
call
sub
mov
scas
mov
lahf
push
mov
nop
xchg
and
cld
in
movs
enter
dec
ficom
imul
inc
shl
adc
add
xor
js
sub
ja
fdiv
jnp
dec
jno
jno
pop
jle
jns
int
retf
push
das
dec
retf
aas
(bad)
sti
jecxz
mov
cmp
(bad)
push
push
aas
mov
mov
or
jbe
and
xor
mov
add
ret
aam
pop
cmc
cmp
mov
push
mov
inc
pop
mov
mov
mov
gs
pop
mov
mov
ds
rol
mov
mov
xor
cmp
mov
test
sbb
nop
pop
and
or
sub
xor
scas
xchg
call
rcr
sti
pop
mov
ror
push
cld
dec
jle
movs
jb
movs
inc
aaa
sub
xchg
sub
inc
out
xchg
adc
fistp
pusha
movs
in
fild
mov
or
jmp
loope
lods
sub
xchg
(bad)
in
imul
sbb
iret
retf
xchg
pop
add
add
(bad)
dec
adc
repnz
add
or
repz
sub
cmps
mov
xor
push
movs
fcmovnu
loopne
pushf
ss
fnstenv
dec
mov
repz
inc
pop
jmp
popf
in
sbb
test
push
inc
xchg
aas
xchg
mov
cwde
push
inc
jecxz
(bad)
jmp
loop
enter
repnz
call
mov
std
dec
in
and
and
sub
xchg
cmovnp
cld
mov
int
aam
imul
xor
outs
xlat
inc
add
mov
aaa
xchg
test
les
add
ins
dec
sub
inc
mov
mov
jbe
push
outs
imul
iret
dec
sub
adc
and
or
nop
icebp
dec
call
cli
popa
mov
test
sub
pop
xchg
movs
(bad)
ds
rcl
mov
pop
nop
push
outs
(bad)
dec
cmp
call
dec
addr16
mov
xchg
push
mov
xlat
out
sbb
hlt
ror
pop
int
jl
xor
xchg
ja
inc
(bad)
mov
push
pop
dec
sti
rcl
pop
sub
or
div
inc
pop
fnsave
cmp
int3
mov
outs
mov
stc
inc
(bad)
adc
lahf
pop
push
ja
out
sub
push
xchg
or
mov
lock
jge
pop
mov
(bad)
pop
in
rol
or
scas
outs
jecxz
xor
pop
(bad)
jg
jecxz
pop
sub
out
stos
inc
pop
lods
inc
and
xchg
adc
mov
adc
xlat
sub
or
adc
jle
sub
mov
jno
lahf
in
mov
pop
push
fist
and
and
adc
xchg
lock
stos
mov
cmc
fdivr
ins
(bad)
xchg
jne
mov
xor
test
pop
sahf
pop
mov
sar
mov
adc
cmps
mov
fld
or
push
xor
jecxz
xchg
nop
mov
jmp
out
mov
loopne
add
adc
inc
nop
pop
mov
inc
clc
inc
cs
cmp
std
bound
lock
das
push
sbb
lods
(bad)
aad
xchg
loopne
(bad)
in
cmc
jbe
pop
retf
jecxz
dec
push
sbb
add
inc
repnz
lahf
and
das
sub
jnp
jmp
mov
add
paddd
and
push
or
retf
imul
cmp
push
(bad)
sbb
lds
imul
mov
inc
ss
cmp
dec
inc
or
dec
xor
std
jp
mov
(bad)
loope
xchg
dec
sbb
imul
and
mov
add
lods
pop
hlt
(bad)
pop
inc
adc
mov
out
add
xor
retf
xchg
inc
sbb
inc
mov
pop
push
mov
out
push
jnp
mov
cwde
es
jbe
in
adc
jae
xlat
adc
loope
ja
mov
out
lea
push
jnp
outs
adc
inc
pop
ror
stc
cwde
ss
out
pop
retf
(bad)
(bad)
scas
or
inc
push
cmp
rcr
mov
mov
pop
pusha
ins
movs
xlat
pop
mov
xchg
adc
sti
mov
pop
jae
adc
dec
sub
push
inc
push
xchg
inc
rol
xchg
jnp
mov
int3
mov
dec
jb
loop
dec
(bad)
pop
scas
cli
ja
movs
push
jl
int
mov
pushf
jge
scas
mov
loope
mov
sahf
dec
mov
(bad)
push
scas
loopne
lahf
mov
push
sub
sbb
outs
jle
mul
xlat
pushf
sub
jno
and
and
addr16
loope
mov
sub
cmps
fcom
hlt
ficom
test
test
aaa
ss
adc
jno
cmp
or
xchg
arpl
mov
jne
xchg
call
adc
jmp
aam
xchg
(bad)
xchg
les
or
mov
sub
pop
push
xlat
cmps
sub
inc
lods
jmp
pop
loopne
fsubr
and
test
in
adc
add
push
cmps
xor
outs
and
iret
jne
in
pop
rol
inc
nop
daa
mov
sub
mov
mov
repnz
mov
add
pop
pop
in
mov
xchg
inc
ret
push
aad
je
adc
loope
mov
jmp
push
mov
fsubr
clc
aaa
call
outs
mov
mov
add
xchg
call
mov
cli
mov
push
push
retf
call
ror
fild
sub
ret
aad
ss
jl
int
sbb
dec
mov
xchg
je
jae
call
out
or
stc
sbb
mov
sub
inc
pop
test
push
xor
or
xor
loop
fnstcw
fstp
outs
retf
out
push
popf
add
rcr
ss
loop
retf
sbb
add
adc
xlat
ins
shl
push
mov
cmp
fwait
inc
pop
pop
dec
popf
mov
push
es
into
fs
add
jne
cwde
loop
or
add
and
mov
(bad)
loopne
outs
jp
rcl
inc
(bad)
dec
mov
cwde
mov
cmps
mov
inc
imul
mov
lods
add
aad
inc
or
push
xchg
ret
mov
out
push
popa
sti
movs
sbb
jo
data16
cmp
in
jno
inc
and
push
enter
mov
arpl
xchg
xchg
enter
mov
cmp
jle
aam
ds
repz
mov
mov
pop
popf
dec
dec
sbb
jecxz
sub
pslld
scas
jmp
inc
pop
adc
add
xchg
std
pop
les
xchg
in
mov
aas
jecxz
imul
sbb
lods
popf
clc
cmp
add
xor
ret
popf
push
cmp
xchg
pop
or
sub
loopne
je
std
div
sub
je
jle
shl
add
retf
out
in
popf
push
out
dec
daa
pop
(bad)
jge
and
pop
add
push
dec
dec
mov
xor
test
sbb
out
push
ds
push
fcomp
out
or
pop
movs
cmc
xor
and
ja
ja
test
js
add
xor
xchg
xchg
mov
and
inc
dec
bswap
sub
nop
adc
mov
mov
mov
jmp
or
xchg
jb
sub
xchg
sub
out
xor
pop
xor
jmp
std
sar
and
aas
mov
mov
mov
mov
fucomp
out
mov
clc
out
repnz
iret
push
enter
cmp
xor
jbe
and
sub
outs
jno
scas
xchg
pop
push
sti
cmp
pop
out
push
push
add
jmp
out
daa
cmp
mov
loop
xor
lods
add
bound
test
jb
jns
push
xchg
stos
pop
jns
dec
addr16
pop
div
cmp
dec
push
enter
inc
pusha
std
and
xor
dec
adc
hlt
push
mov
mov
pop
loopne
pop
xor
(bad)
xor
movs
sbb
nop
inc
xchg
mov
push
ins
loopne
std
fcmovnu
in
or
pop
adc
sub
push
inc
loop
xor
adc
pusha
cmp
ret
push
and
xor
adc
push
aaa
inc
fld
cmp
mov
add
inc
jmp
popa
cmps
movs
adc
or
push
sbb
repz
daa
shr
jne
lds
cmp
fsubr
sahf
repz
popf
icebp
test
in
scas
repz
xchg
jnp
ins
push
or
and
or
push
add
out
xchg
into
loope
xor
imul
lock
mov
xor
fwait
prefetch
rcr
pop
mov
je
call
imul
sahf
aad
sbb
and
and
mov
sub
and
pop
add
inc
pusha
in
sub
xor
mov
mov
xchg
scas
ret
pop
pop
test
nop
sub
aad
and
xchg
dec
jb
mov
aam
rcl
ss
int
lods
jmp
or
imul
push
div
or
mov
jnp
jmp
mov
bound
fcmovnu
cs
in
or
cli
push
or
stos
pop
into
sahf
mov
jle
cmps
aam
out
pop
pop
pop
dec
out
mov
lea
mov
out
and
imul
repz
mov
mov
adc
je
popf
mov
aam
xchg
mov
loopne
scas
bts
pop
and
lock
mov
cli
pop
stc
test
test
shl
push
inc
ret
ins
push
xor
imul
adc
mov
mov
mov
pop
jo
nop
in
mov
xchg
popa
out
pusha
(bad)
retf
mov
cmps
int
stos
mov
popf
ror
repz
jno
cmp
(bad)
daa
int
(bad)
neg
inc
adc
je
fld
mov
dec
cli
inc
mov
lock
push
or
or
in
mov
sar
in
loop
loopne
fld
mov
or
add
add
pop
stos
jmp
aaa
mov
cld
push
mov
imul
popf
mov
and
(bad)
sbb
sub
loopne
or
pop
(bad)
push
xchg
jae
mov
(bad)
in
or
and
fstp
(bad)
jmp
pop
retf
cmp
xchg
sub
mov
dec
mov
mov
cmp
mov
jne
sbb
in
test
(bad)
mov
and
loopne
mov
jp
out
(bad)
std
(bad)
sbb
dec
pop
clc
jge
pop
jle
cmp
push
xchg
fcmovnu
ds
fidiv
scas
push
jnp
mov
ror
mov
aaa
(bad)
jo
lods
mov
pop
push
out
dec
jbe
mov
dec
pop
cmp
mov
and
mov
shl
fcomp
je
(bad)
je
mov
(bad)
loope
mov
and
jle
push
xor
imul
or
jge
cld
inc
iret
mov
push
mov
xor
imul
iret
adc
sub
mov
push
rcr
icebp
(bad)
mov
hlt
sub
or
or
push
cdq
lods
idiv
addr16
(bad)
cmps
dec
dec
push
jge
ror
adc
out
inc
push
(bad)
sti
mov
ss
xchg
aad
xor
jno
xor
add
inc
cmp
ret
pop
out
sub
std
xchg
jg
ja
rcr
std
cmp
dec
add
or
das
sub
jne
scas
div
cli
mov
fsubr
out
shl
stc
call
mov
mov
pusha
inc
push
imul
mov
cmp
in
mov
repnz
sub
mov
pop
xlat
pusha
add
and
pop
fisub
jnp
mov
dec
dec
inc
sub
movs
sub
aad
push
mov
and
cmp
ret
sti
xor
jne
sub
dec
test
cli
or
(bad)
es
and
mov
inc
push
pop
mov
xchg
pusha
cmc
(bad)
hlt
in
test
mov
dec
cmp
stc
mov
jl
push
add
mov
cwde
aas
lea
clc
push
imul
ds
daa
push
hlt
lock
test
mov
jbe
std
add
pop
push
in
into
mov
ret
nop
jnp
pop
inc
test
in
add
adc
ja
inc
pop
jge
iret
jbe
cdq
adc
and
shl
pop
icebp
iret
ret
add
add
stos
sub
and
test
push
cmp
imul
mov
(bad)
mov
sbb
(bad)
rcl
popf
int
push
aaa
cmc
(bad)
sub
cmp
ss
jl
push
test
fwait
(bad)
xchg
mov
sub
push
not
dec
push
fstp
xchg
call
mov
jb
inc
fidivr
int3
mov
jecxz
push
fs
xor
test
sub
add
mov
or
hlt
int
aaa
jns
loopne
mov
pop
add
retf
movs
xchg
adc
ins
dec
adc
mov
je
pop
jbe
retf
mov
jg
sub
and
gs
mov
pop
mov
mov
into
xchg
(bad)
(bad)
fsubr
retf
movs
sub
jmp
mov
xchg
mov
mov
mov
mov
inc
xlat
xchg
or
ror
shl
inc
xor
sub
inc
cwde
data16
mov
movs
push
cwde
inc
cdq
scas
aas
pop
jl
addr16
rol
cmp
arpl
ss
or
xor
shr
and
test
mov
xor
xchg
pop
xchg
pop
test
ja
push
or
or
aam
int3
cmp
outs
lods
movs
push
(bad)
xor
push
pushf
push
adc
dec
sub
jne
fcom
push
enter
loopne
add
pop
inc
jo
fidiv
(bad)
and
inc
dec
dec
test
xchg
pushf
push
cmp
push
pop
fs
std
jge
out
xchg
pop
stc
push
inc
div
mov
pop
mov
and
mov
dec
push
push
enter
cmp
in
inc
pop
xor
add
jbe
sub
add
aam
jae
lods
pop
repnz
dec
sub
jo
aas
mov
(bad)
hlt
pop
aaa
lea
in
add
sub
inc
retf
sub
dec
outs
fwait
sbb
call
add
pop
add
daa
jns
test
sub
add
scas
imul
fs
hlt
dec
rcl
repnz
jmp
and
call
push
dec
cmps
cmp
and
pop
push
dec
and
jl
test
pop
lods
jecxz
sti
psubusw
push
xor
sbb
adc
inc
repz
aam
push
fwait
shl
mov
or
mov
jb
sub
fild
or
out
push
stos
ins
outs
push
cmps
jo
imul
sbb
aam
dec
or
js
sbb
jne
push
and
xor
dec
pop
enter
push
sbb
xchg
mov
enter
imul
xor
xchg
jnp
mov
fs
push
jmp
call
outs
sbb
pop
pushf
dec
xchg
push
pop
outs
out
inc
adc
dec
cdq
(bad)
add
fwait
dec
xchg
and
daa
fadd
ja
cmc
sub
xor
dec
xchg
jbe
loope
sbb
or
jnp
cld
icebp
loopne
iret
pop
mov
je
cmc
cdq
in
jns
fcom
add
fisubr
into
scas
(bad)
push
out
inc
or
mov
pop
dec
mov
mov
mov
bound
icebp
ficom
add
mov
sub
and
add
shl
mov
adc
push
mov
or
dec
out
ficom
push
add
pop
sbb
push
and
jno
inc
outs
test
test
jb
shl
xor
sbb
mov
xchg
mov
mov
lods
ror
mov
cmc
push
add
adc
addr16
retf
cmovp
cdq
test
cmp
cmovns
data16
pushf
(bad)
sti
imul
out
xchg
sbb
xchg
(bad)
add
cdq
cmps
mov
mov
fwait
jmp
cwde
retf
jmp
out
enter
(bad)
scas
dec
cli
test
in
cs
xchg
push
fiadd
mov
jno
mov
shl
and
pop
mov
mov
pop
gs
push
jg
mov
shr
mov
repnz
pop
stc
fld
fistp
sbb
mov
push
adc
call
jge
adc
sbb
dec
push
push
fwait
in
pop
mov
loope
les
pop
jmp
shl
sub
loope
inc
sub
mov
popa
sar
shl
cmp
add
push
xchg
pop
stos
int3
mov
hlt
daa
or
xor
call
std
test
popa
mov
or
adc
dec
retf
xchg
mov
fs
sub
or
fwait
aas
pop
sub
imul
push
fnsave
retf
cmp
pop
xchg
inc
and
(bad)
lods
and
in
fwait
push
retf
retf
out
rcl
push
jl
push
mov
ror
out
jb
inc
pop
pop
pop
movs
pushf
retf
mov
shl
shr
cmc
and
jle
inc
add
inc
mov
cmp
aam
in
xchg
retf
popf
(bad)
xchg
or
adc
cmp
sub
adc
and
out
or
ins
dec
out
lods
and
inc
jg
mov
xchg
cwde
inc
xor
inc
sbb
ficom
lods
call
jne
cmp
fmul
cs
sub
popf
ret
jne
icebp
lea
aam
jmp
dec
mov
and
xchg
cmp
ins
shl
scas
and
cmp
retf
(bad)
jp
xor
push
adc
(bad)
mov
shl
icebp
or
jmp
jo
add
mov
popf
mov
(bad)
addr16
mov
sbb
sbb
pop
adc
add
out
stos
nop
push
xor
inc
loope
push
(bad)
enter
mov
fwait
add
aas
push
cmps
adc
repz
xchg
xchg
and
mov
mul
nop
push
mov
inc
movs
pusha
adc
out
jne
jns
xchg
adc
adc
rol
xchg
xlat
fwait
pusha
jmp
mov
(bad)
adc
lock
ds
fs
or
in
aas
sbb
pop
mov
pop
jbe
sbb
and
sbb
outs
in
or
sub
ds
test
fiadd
jecxz
shr
retf
adc
xchg
ins
push
dec
push
mov
pop
cld
daa
imul
in
arpl
cmp
push
sbb
and
xchg
addr16
mov
cmp
in
cli
stos
or
push
nop
ins
in
fcom
push
cmp
mov
jmp
loopne
push
mov
cmp
xchg
xchg
lds
push
mov
cmps
push
sbb
push
jae
add
out
inc
jl
and
xchg
aaa
fld
xchg
mov
mov
test
fstp
fimul
movs
adc
pop
dec
fisubr
lods
sahf
pop
nop
or
adc
cmc
ja
imul
jmp
adc
mov
popa
cmp
aas
add
movs
call
add
fild
adc
push
movs
(bad)
xor
ret
pusha
stos
test
stos
jl
add
daa
data16
rcr
and
mov
dec
fmul
ret
fs
int3
mov
cmp
or
mov
hlt
(bad)
repnz
dec
fstp
xchg
retf
loope
inc
mov
push
or
imul
dec
mov
lods
retf
pop
imul
in
pusha
push
jp
fcmovnbe
xor
not
scas
xor
mov
jle
jmp
cld
(bad)
dec
jmp
dec
sub
mov
jmp
stos
gs
adc
sar
pop
jmp
hlt
jmp
loope
pushf
dec
and
fptan
leave
icebp
adc
aam
push
repnz
mov
jo
lock
jno
lock
cdq
jae
dec
lea
cmp
add
addr16
(bad)
pop
push
clc
sbb
pop
jae
inc
and
or
pop
out
rol
gs
or
jae
mov
imul
mov
sub
ins
add
sahf
xor
xor
xor
cdq
cmp
(bad)
push
mov
(bad)
retf
jg
push
mov
(bad)
out
xchg
data16
ss
cmp
and
test
retf
mov
in
lods
cdq
addr16
imul
jg
jae
mov
adc
push
out
push
or
inc
jo
mov
mov
pushf
pusha
xor
ds
jge
jle
mov
xor
or
jge
sub
dec
das
jmp
xor
jbe
lds
cs
jae
and
jnp
cdq
and
mov
adc
sbb
or
mov
xor
xor
sar
out
adc
and
and
pop
(bad)
adc
mov
call
add
xchg
cld
ins
fcom
push
das
adc
mov
icebp
and
movs
mov
and
push
inc
std
pop
push
jl
arpl
into
aad
cmp
iret
xlat
mov
test
jns
add
(bad)
cmp
loopne
inc
sbb
mov
mov
dec
(bad)
mov
pop
ret
or
xchg
fcomp
ins
mov
pop
out
dec
cld
mov
jnp
cs
add
xchg
cld
pop
pop
(bad)
stos
mov
and
mov
fwait
mov
arpl
clc
les
test
movs
jmp
mov
shl
iret
jg
clc
iret
mov
jp
xchg
pop
inc
rcr
pop
aaa
rcl
loopne
pop
ins
add
jae
lods
fsubr
out
loope
ret
stos
aad
mov
pop
mov
jle
xor
jmp
pop
aas
addr16
popa
cmp
xchg
cli
xor
jg
xor
dec
mov
mov
dec
push
push
cmp
xlat
xchg
dec
pop
out
je
mov
call
sbb
lahf
(bad)
aaa
iret
mov
mov
mov
call
das
mov
scas
stos
gs
shl
sbb
adc
jmp
repz
retf
and
aam
stos
lock
xchg
sahf
daa
(bad)
xchg
test
out
ficomp
add
in
lock
mov
sbb
jmp
sbb
cmp
push
(bad)
sti
and
cdq
mov
mov
ds
add
jo
js
out
cmps
mul
enter
jmp
mov
sbb
inc
aas
add
cwde
cmc
mov
mov
imul
arpl
aam
jbe
test
mov
cmps
int3
mov
push
das
xor
pop
inc
jno
movs
ins
mov
push
inc
mov
sub
test
fimul
ins
pop
loopne
lds
adc
xlat
jl
imul
mov
mov
scas
test
test
enter
call
jmp
pop
cld
ret
ins
fnsave
jno
shl
mov
cwde
xchg
int3
dec
push
xchg
jne
fwait
xchg
pop
mov
dec
dec
scas
or
in
imul
fwait
mov
mov
push
or
push
(bad)
aas
dec
sbb
stos
sub
cmps
scas
pop
push
arpl
push
jl
mov
lock
mov
mov
push
into
adc
push
rcl
or
push
adc
dec
int
popa
jb
mov
pop
std
jge
sub
or
mov
outs
inc
add
lea
dec
dec
xchg
mov
leave
ins
mov
sub
jp
icebp
add
add
mov
xchg
mov
and
pop
shl
cmp
loopne
jg
cmp
cmp
mov
xchg
shr
mov
sbb
addr16
or
idiv
sub
sbb
test
ror
push
push
push
cdq
jmp
inc
daa
adc
call
pop
mov
inc
sbb
aas
or
sub
jmp
das
mov
cdq
add
push
xor
jg
jge
dec
mov
(bad)
add
pusha
shl
inc
inc
fwait
jge
push
xor
stos
sbb
std
sbb
cld
(bad)
push
mov
ret
ret
or
push
(bad)
aam
mov
adc
in
or
inc
jo
in
xor
nop
push
dec
sbb
pop
xor
mov
popf
shr
push
and
mov
imul
and
dec
push
add
into
scas
add
pushf
sub
jb
mov
ds
dec
jae
pop
call
std
aam
aad
sbb
jo
(bad)
mov
push
mov
mov
sti
rcr
loopne
inc
mov
jmp
repnz
lods
imul
mov
add
ins
inc
xor
pop
sar
ins
mov
xor
mov
and
lock
in
icebp
out
or
adc
popf
int
jmp
mov
sub
pop
push
test
push
lea
cld
xchg
loopne
clc
fidivr
xor
in
icebp
cmc
mov
in
and
add
iret
jb
mov
aam
push
fs
push
cmp
stos
sar
inc
loope
jae
cdq
fiadd
mov
(bad)
push
add
jne
dec
fdivr
movs
in
les
sti
push
mov
jbe
lods
loop
xchg
in
mov
out
ins
dec
push
ins
shl
cmp
or
lds
add
or
mov
in
enter
xor
outs
stos
mov
(bad)
push
or
sub
loope
pop
or
jecxz
lea
cmp
ins
loope
leave
fisubr
std
inc
inc
mov
popa
jle
out
out
pop
aad
xor
cli
outs
or
xchg
push
dec
push
jnp
adc
es
shl
xchg
mov
xlat
push
data16
inc
enter
lods
stc
dec
xchg
movs
dec
lds
adc
aas
(bad)
ins
popa
lock
ret
mov
mov
int3
(bad)
shr
pop
cmc
xor
dec
stc
push
mov
mov
out
jns
icebp
mov
rcl
jne
push
dec
leave
inc
xchg
mov
leave
jo
dec
inc
xchg
imul
cld
inc
adc
lahf
sbb
(bad)
icebp
popf
repz
mov
mov
inc
(bad)
int3
sbb
idiv
jge
dec
into
or
push
adc
add
mov
repnz
adc
cmp
inc
stc
push
sub
lock
fcom
pop
push
inc
xchg
inc
aam
pop
inc
sub
in
add
jp
mov
cli
or
sub
mov
xlat
mov
fs
cmp
mov
pop
sahf
xor
inc
add
lea
and
shr
push
adc
in
inc
pop
pop
fs
test
fwait
xchg
jnp
xchg
loope
and
jnp
or
inc
lods
fwait
test
dec
sub
xlat
push
or
jg
(bad)
nop
sti
nop
retf
je
xor
sbb
call
sbb
xchg
call
mov
push
repnz
xchg
sbb
pop
xor
fimul
mov
in
xchg
xchg
and
push
jecxz
mov
add
pop
jg
(bad)
shl
call
fisub
xor
das
aas
nop
mov
mov
loope
pop
mov
mov
fmulp
lock
daa
sbb
push
push
inc
test
or
cs
inc
and
dec
pop
pop
daa
das
cmp
push
jmp
call
arpl
scas
(bad)
and
iret
inc
ja
adc
addr16
adc
in
mov
xchg
jo
mov
cmp
or
jecxz
fisubr
mov
jne
(bad)
in
retf
rcr
repnz
mov
sub
jno
xor
imul
int
xchg
adc
xchg
jecxz
shl
or
pop
mov
xor
stos
or
cld
adc
cs
pop
and
stos
adc
or
pop
(bad)
call
in
pop
cmp
mov
cmps
sub
jmp
cli
jb
adc
mov
(bad)
stos
js
pop
sti
icebp
lock
dec
out
adc
ja
add
and
les
xchg
in
(bad)
jns
sbb
mov
adc
mov
aad
push
jne
jo
xor
retf
stc
push
xor
push
mov
mov
arpl
jmp
lea
jmp
pop
mov
clc
sub
jb
xchg
js
xor
ret
data16
(bad)
jne
cmp
inc
jmp
hlt
dec
mov
repnz
in
mov
cmp
jo
cmp
in
pop
xor
add
fcomp
inc
imul
pop
lods
adc
or
sub
(bad)
mov
push
ret
add
or
push
and
js
jb
in
or
jb
loopne
pop
push
jnp
(bad)
or
dec
lds
daa
scas
add
jns
push
sbb
loope
lods
or
call
lea
aaa
fnsave
les
(bad)
cmp
fsubr
stos
enter
lods
and
cld
icebp
jg
ror
or
cld
cmp
(bad)
push
and
movq
aaa
lds
icebp
mov
cmps
xor
push
ret
cmc
xchg
push
movs
ret
push
push
push
or
xor
dec
lock
mov
fdivr
fidivr
mov
bound
jmp
cmc
pop
ds
movs
or
pop
inc
loopne
ins
jg
fs
cmp
cmps
and
dec
or
mov
inc
int
push
jge
pop
test
sub
(bad)
in
inc
or
gs
jo
pusha
lahf
sahf
or
jo
jo
test
loop
loop
out
add
pushf
stos
xor
pop
pop
dec
ins
lea
mov
sub
lock
mov
stc
dec
pop
(bad)
in
jecxz
and
push
test
adc
js
add
out
(bad)
arpl
xor
xor
inc
lock
pop
xchg
add
jge
pop
lods
repnz
fs
repz
es
retf
clc
cs
adc
lds
cdq
shl
push
movs
ins
fs
xchg
cmp
dec
push
jle
int
jmp
mov
pop
jnp
ror
mov
pop
arpl
popf
into
lods
jl
pusha
retf
jb
mov
and
inc
cmp
leave
aaa
xchg
cli
ret
sbb
mov
dec
adc
call
call
sbb
sub
cmp
outs
fwait
loop
mov
loop
shl
add
cmp
xchg
cmp
in
adc
sti
test
mov
repnz
xchg
push
xchg
cwde
or
sbb
(bad)
dec
jge
test
dec
xor
stos
(bad)
pop
mov
sub
outs
mov
jbe
lods
mov
add
(bad)
jmp
loop
mul
gs
imul
inc
adc
bnd
cmp
sahf
pop
in
ret
mov
scas
or
(bad)
ficom
mov
scas
repnz
adc
inc
xchg
adc
mov
loope
xor
mov
sub
pop
xor
jmp
je
sub
movs
dec
push
mov
hlt
sbb
call
test
rol
fwait
aas
data16
dec
xor
sbb
fldcw
push
pause
jno
out
mov
push
mov
sbb
cmc
add
dec
or
pop
push
sbb
mov
push
or
pop
movs
xor
nop
rcl
pop
loopne
(bad)
mov
outs
(bad)
adc
je
or
ror
inc
and
sub
ins
xchg
test
dec
cmps
cmp
ror
jmp
shl
or
(bad)
aaa
imul
fist
cmc
fist
mov
sbb
push
xlat
push
in
push
sbb
mov
jbe
pop
jmp
in
add
pop
and
push
popf
jne
push
cdq
jo
shl
cmp
mov
adc
sbb
push
add
arpl
xlat
popf
mov
je
fisubr
loopne
sbb
sub
fwait
out
pop
inc
cld
ror
pop
fild
mov
push
mov
mov
inc
int3
(bad)
ficom
ret
test
pop
adc
jnp
fbstp
sub
mov
cmps
(bad)
jecxz
adc
and
imul
dec
adc
imul
out
jnp
popf
(bad)
stos
dec
bound
(bad)
cld
sub
xlat
popa
daa
hlt
inc
xlat
lock
or
push
adc
mov
inc
movs
adc
in
mov
or
ror
adc
mov
adc
out
scas
je
inc
or
cli
aaa
push
sub
sbb
add
cmp
push
cli
pop
sbb
or
mov
inc
pushfw
adc
in
popa
jbe
sbb
mov
mov
mov
into
push
or
fadd
rep
std
retf
dec
dec
xchg
in
push
sti
add
ss
out
fcom
xor
push
jmp
cmp
dec
out
ss
push
inc
xor
cli
mov
arpl
mov
or
jge
lahf
xlat
add
adc
xchg
sbb
adc
mov
addr16
repz
out
mov
in
test
out
fidiv
cmp
adc
scas
add
aam
dec
ficom
nop
in
lahf
pop
in
mov
push
dec
aam
sti
fiadd
scas
nop
mov
scas
dec
jb
mov
rol
daa
into
pop
inc
scas
push
xchg
jecxz
scas
daa
mov
rcl
dec
imul
test
inc
div
dec
sbb
pop
in
arpl
iret
jnp
(bad)
xor
or
and
or
aam
push
clc
mov
or
pop
loope
xor
in
add
aaa
sar
sub
mov
mov
mov
xchg
inc
movs
xchg
xchg
icebp
aam
in
fisub
loopne
(bad)
push
cmp
rcl
das
mov
test
push
and
shr
and
xchg
lds
popf
sbb
repnz
cdq
icebp
pop
(bad)
sub
cmps
nop
in
cmp
in
add
call
movs
aam
pop
push
xchg
jb
pop
cmp
push
adc
outs
jge
inc
adc
not
mov
or
mov
sbb
retf
mov
push
std
ins
retf
add
icebp
retf
mov
rcl
scas
fdivrp
nop
call
pushf
nop
shl
out
xchg
daa
in
xchg
mov
add
(bad)
cli
sti
add
repz
inc
out
mov
cmps
cmps
ja
sbb
pop
xchg
std
shr
(bad)
and
xor
in
xor
lahf
push
xchg
and
pushf
ret
fldenv
mov
jl
test
jmp
adc
fwait
adc
sbb
(bad)
int
mov
enter
std
call
cmp
call
push
dec
and
leave
ret
inc
sbb
pop
mov
adc
jbe
clc
test
jge
xor
into
inc
mov
pop
jae
ret
(bad)
aad
pop
test
clc
daa
mov
ins
js
dec
jl
dec
imul
cmp
popa
xchg
xchg
jae
dec
(bad)
xchg
clc
cmp
mov
pushf
dec
pop
dec
adc
jecxz
call
jb
xchg
fldcw
push
xor
sub
mov
add
clc
xchg
icebp
aas
push
es
dec
sbb
sahf
cmp
xchg
mov
jno
mov
(bad)
or
mov
and
mov
fsubr
jo
add
sub
xchg
pop
(bad)
into
xor
imul
sub
sub
jns
xor
jns
xor
push
mov
jle
stos
pop
ret
(bad)
pop
push
sti
imul
dec
xor
enter
push
imul
loope
mov
cmps
mov
or
add
push
cmc
loope
lahf
push
sbb
and
ins
sbb
(bad)
sbb
test
mov
not
pop
mov
fs
fcomip
aad
cmps
test
jmp
push
jns
addr16
pop
outs
pop
int
mov
inc
(bad)
movs
xor
aad
sub
mov
test
shr
(bad)
in
mov
sti
push
cmps
ret
sub
ret
push
sahf
cwde
cmp
xor
adc
pusha
lds
loope
dec
push
push
(bad)
fnsave
jle
mul
mov
rol
or
cmps
jecxz
add
sbb
cli
retf
bound
sbb
push
repz
pop
loopne
mov
out
cmc
hlt
mov
out
pop
arpl
cmps
xchg
ds
fnsave
in
pop
sbb
mov
clc
adc
xchg
push
adc
adc
cwde
sub
mov
and
or
xor
and
mov
and
sar
test
fnstcw
jnp
outs
icebp
fucomp
and
or
add
pop
push
pop
pop
cwde
or
das
cld
xor
sti
out
sti
lock
stos
mov
daa
(bad)
jmp
xchg
and
leave
pop
mov
or
cmp
push
mov
aam
mov
lods
add
je
push
cmc
dec
ret
ja
aam
idiv
xchg
loope
adc
addr16
ror
out
pop
div
mov
(bad)
fld
sar
fcomip
xchg
and
les
mov
jg
sub
int3
push
mov
js
xor
ret
sbb
popf
test
pop
call
cmps
mov
repz
sahf
into
xlat
sti
addr16
iret
xor
sbb
xchg
push
mov
enter
xchg
sbb
rol
stos
and
data16
add
call
push
xchg
and
or
repz
cmps
test
lds
jns
jo
arpl
push
enter
int
push
lods
ss
and
bound
mov
adc
push
mov
(bad)
xor
inc
fcmovb
cdq
imul
int
call
xchg
enter
test
jmp
sbb
xchg
add
popf
repnz
mov
in
cmp
pop
das
fild
cmp
in
sub
jo
pop
ins
mov
not
data16
adc
jecxz
repnz
std
sbb
inc
in
shr
fwait
cmp
cmp
add
shl
dec
adc
push
add
sub
sbb
rol
xor
das
jecxz
dec
fwait
pop
adc
xor
ins
xchg
mov
inc
mov
sbb
ficom
sbb
jbe
call
imul
clc
mov
test
pop
(bad)
xor
and
inc
push
push
mov
xchg
dec
or
addr16
cmp
sahf
mov
xlat
jb
jl
mul
mov
hlt
inc
pusha
mov
xchg
and
imul
stos
imul
es
mov
fisttp
ret
xor
enter
mov
scas
pop
jne
scas
jmp
cli
xchg
adc
xchg
cdq
inc
add
js
std
sub
mov
stc
retf
push
(bad)
mov
mov
stc
push
fsubr
(bad)
out
push
jmp
mov
push
mov
or
jnp
out
mov
dec
inc
inc
push
jns
lods
xor
imul
scas
push
xchg
push
mov
dec
adc
mov
pop
add
stos
cdq
leave
mov
cmp
(bad)
in
jp
test
add
sub
loopne
inc
leave
les
lods
adc
and
cmps
sub
jp
xor
xor
data16
ret
stc
aaa
inc
cmovg
mov
dec
(bad)
lock
nop
test
(bad)
xlat
xchg
and
cmps
ret
nop
add
push
mov
xchg
or
das
rcr
add
cmp
jmp
lea
push
fs
sub
pop
aaa
cmp
xchg
js
cdq
xchg
sub
push
jle
pop
adc
ins
push
icebp
ins
or
scas
dec
sub
jle
(bad)
jmp
out
in
neg
fucomip
sbb
add
lods
adc
imul
xchg
stc
xor
mov
sti
mov
arpl
inc
lods
inc
adc
retf
sahf
push
and
xor
sub
lea
add
xchg
cmp
je
mov
aaa
dec
mov
int
js
test
je
mov
test
ror
jnp
add
jmp
lods
pop
xchg
inc
lods
push
mov
mov
clc
stc
call
dec
fcomp
mov
fwait
pop
sahf
stos
loope
pop
sahf
std
jmp
inc
jo
adc
leave
lock
shl
je
xlat
pop
jbe
je
ins
daa
out
mov
(bad)
mov
push
sar
sbb
sbb
mov
jmp
sbb
xor
inc
inc
loopne
push
pop
cmps
sbb
sub
bound
enter
enter
mov
bound
dec
and
mov
push
call
stc
xlat
mov
call
mov
xlat
xchg
jb
sbb
jb
push
or
lea
push
shl
jmp
repz
dec
push
dec
xchg
aas
add
sbb
repnz
enter
addr16
add
push
hlt
add
enter
enter
adc
mov
fmul
(bad)
fidiv
cwde
jle
xor
ret
push
jne
sub
or
mov
sti
push
loope
or
jb
xchg
fnsave
inc
and
inc
aaa
mov
adc
aaa
ins
xchg
sub
xor
aaa
jmp
mov
fs
lods
ror
adc
fcmovbe
pop
sbb
stos
ret
xchg
push
scas
movs
jne
cmps
iret
pop
push
or
cli
in
sub
mov
dec
ins
stc
mov
dec
sbb
iret
(bad)
xchg
sahf
push
loope
dec
retf
cmps
(bad)
mov
fbld
adc
pop
push
add
xchg
inc
test
es
stc
loope
jecxz
idiv
mov
(bad)
hlt
pop
inc
loope
int3
sub
pusha
jecxz
adc
das
sub
jnp
jo
and
fnstenv
fnstenv
push
pcmpeqd
sub
jmp
pushf
inc
add
scas
sub
punpckhdq
out
mov
jle
in
jno
out
push
dec
rcr
mov
pop
mov
cmps
jg
add
mov
(bad)
aam
mov
pop
adc
mov
push
push
mov
iret
dec
adc
pop
add
or
xchg
push
cmps
xchg
dec
and
mov
push
dec
and
int3
repz
cmp
and
fld
jno
jnp
gs
jne
inc
xchg
push
mov
and
aaa
dec
leave
rcr
aas
lahf
pop
xchg
ret
adc
dec
or
call
lods
mov
test
mov
repnz
pop
or
cmp
add
adc
xchg
xor
pop
iret
in
sbb
pop
mov
das
sub
(bad)
iret
dec
jne
sub
test
jne
(bad)
fsubr
fs
cmp
fs
cwde
mov
daa
ins
or
int
cmps
pop
dec
dec
xor
mov
iret
mov
adc
inc
shl
or
out
inc
jmp
loope
add
jae
xor
push
movs
pop
xchg
sbb
add
pop
in
imul
inc
aaa
mov
pushf
dec
jns
mov
push
sub
scas
lods
out
cmp
iret
ins
pop
cmp
fild
loop
(bad)
out
mov
pop
inc
mov
hlt
inc
jp
clc
shl
push
dec
xchg
das
popf
std
retf
or
adc
adc
add
jae
sub
std
jge
add
dec
test
scas
(bad)
mov
mov
test
dec
loop
(bad)
pop
cmc
rcl
xchg
(bad)
or
push
shl
jecxz
jbe
adc
fwait
ja
xor
xchg
jo
fcom
add
retf
rcl
sbb
in
adc
sub
stos
jg
mov
xor
push
xor
sbb
bound
add
pop
jecxz
sbb
xchg
gs
movs
call
mov
adc
and
aas
stos
pushf
xchg
push
sar
stc
fcom
xchg
and
sbb
sub
fdivr
jo
dec
mov
loop
pop
scas
lock
daa
xchg
jecxz
adc
inc
mov
ret
adc
jno
sub
sbb
mov
mov
pop
mov
fmul
dec
and
lods
inc
in
sbb
test
pusha
dec
stos
xor
in
xlat
mov
fwait
dec
jmp
cmps
jp
xchg
cmp
mov
mov
imul
wbinvd
dec
popa
adc
leave
fist
jl
ret
test
jl
and
cmp
fmul
or
stc
not
lds
rcr
cli
std
(bad)
fld
push
inc
fstp
xchg
test
movntq
shl
xor
arpl
jb
das
push
xchg
mov
or
fwait
adc
(bad)
sahf
mov
xchg
imul
call
(bad)
mov
leave
push
or
pop
pop
mov
lahf
push
cmp
jp
arpl
and
scas
rcr
mov
mov
pop
jb
mov
test
pop
mov
inc
sub
rcr
inc
test
adc
cmps
jle
jecxz
repnz
js
jb
mov
adc
cmps
cmp
sti
jmp
movs
xchg
call
and
push
dec
fwait
jb
addr16
push
jne
das
popa
mov
scas
xchg
jo
inc
or
not
cdq
ret
inc
test
pushf
jle
xor
mov
ds
scas
dec
and
xor
neg
add
mov
mov
cmpps
out
and
dec
dec
idiv
mov
test
(bad)
jbe
push
jmp
neg
dec
jo
repz
mov
mov
fdivr
stc
movs
dec
push
and
or
in
sti
aaa
fbld
and
lods
das
aam
inc
out
adc
test
out
fild
fcomp
xor
retf
pop
adc
cwde
mov
and
(bad)
movups
aad
jle
xor
mov
sahf
arpl
mov
sub
push
outs
sub
outs
(bad)
in
pop
jb
push
mov
adc
jo
jb
stos
mov
mov
jge
repz
(bad)
outs
aam
pop
jg
movs
xchg
sbb
lods
inc
mov
jle
test
ror
lea
gs
cmp
(bad)
mov
cmp
int3
lahf
imul
dec
xor
nop
or
xchg
mov
or
jbe
test
jmp
sti
rcr
and
pop
push
pop
mov
pop
mov
dec
xchg
push
push
daa
lea
je
ins
adc
pop
add
pop
mov
jns
dec
mov
das
xchg
push
pop
inc
sbb
pop
(bad)
stos
ja
inc
mov
les
sbb
movs
int
out
dec
jg
(bad)
xchg
adc
fs
inc
aaa
mov
mov
cli
mov
fsub
sbb
into
loope
cmp
xchg
add
fwait
repz
mov
xchg
jp
inc
pop
xchg
je
outs
loope
mov
(bad)
div
out
inc
adc
scas
cmp
nop
cmp
adc
and
mov
and
jmp
sti
or
mov
ins
sbb
xchg
mov
es
call
pop
(bad)
shr
and
adc
movs
mov
pop
cld
xchg
loope
and
cmp
cmp
add
jge
jbe
ins
hlt
shl
ins
adc
add
mov
clc
mov
cmp
idiv
cmc
gs
xchg
pop
fcom
mov
jne
adc
jmp
call
test
popf
and
add
movs
pop
imul
adc
dec
fwait
jno
and
or
gs
adc
push
push
daa
aaa
outs
and
mov
int
outs
(bad)
in
mov
jb
xchg
mov
jb
out
sbb
xchg
xchg
bound
add
dec
mov
shr
or
sbb
cmp
pop
cld
or
sub
xor
ret
test
int3
rcr
sbb
mov
cmp
inc
push
jmp
sub
popa
push
outs
push
mov
test
clc
ss
push
mov
les
mov
ins
xchg
sbb
xchg
leave
jg
jb
inc
cwde
jl
xor
cli
or
je
mov
add
cli
(bad)
cmp
fistp
in
loopne
mov
rol
out
ins
nop
xchg
pop
mov
sbb
dec
add
cmp
jae
stos
lods
sub
sub
outs
pop
xchg
mov
dec
sub
pop
cmps
cmp
add
cli
mov
jle
mov
sub
clc
les
sub
push
mov
fisubr
ds
xor
(bad)
sub
fwait
stos
mov
out
imul
jg
cdq
in
xchg
ret
and
retf
(bad)
fimul
or
mov
sti
mov
pop
dec
and
mov
and
es
sbb
inc
int3
popa
sbb
stos
mov
mov
dec
std
sub
repnz
dec
or
sub
js
aas
jns
inc
push
pop
dec
stc
push
popa
pop
sar
das
dec
loopne
and
mov
sbb
add
imul
(bad)
inc
ja
div
sub
inc
mov
adc
push
lods
push
push
or
push
mov
fistp
jne
rol
lock
or
jl
adc
arpl
(bad)
pop
cmc
add
mov
in
add
xchg
sbb
lea
jle
fisttp
mov
mov
cli
xor
inc
icebp
mov
inc
inc
test
xchg
cmp
out
rol
mov
add
add
sub
lods
or
scas
out
push
pop
adc
mov
ficomp
in
imul
pop
mov
pop
fsub
and
pop
sbb
dec
cmps
inc
cwde
loop
adc
loopne
xchg
and
mov
in
mov
lods
xchg
mov
(bad)
jecxz
dec
test
mov
imul
stos
xor
and
pop
test
push
test
inc
mov
dec
leave
nop
cli
xor
mov
inc
mov
lock
aas
aad
sub
sbb
frstor
ret
out
aad
cmp
outs
cdq
sub
xor
xchg
and
outs
rcr
(bad)
clc
repnz
movs
leave
cwde
aas
sar
(bad)
add
das
out
iret
inc
dec
int3
sub
data16
movs
test
and
dec
jg
in
fcmovbe
push
mov
hlt
scas
cmp
retf
pop
and
jmp
das
sbb
mov
ret
mov
cmc
cmp
cmp
sar
push
jmp
inc
and
mov
adc
push
in
push
and
sti
mov
sub
cmp
mov
or
stos
fst
test
pop
mov
(bad)
std
cmp
in
cmp
lock
push
xor
ss
push
push
ss
movs
mov
in
call
mov
cmp
jge
sub
mov
lea
repz
clc
adc
cmp
nop
push
mov
sub
mov
(bad)
add
test
out
aam
icebp
and
sub
xor
cmp
retf
into
(bad)
shl
dec
std
xor
mov
(bad)
fstp
inc
mov
fdiv
sti
jb
mov
xchg
xchg
jnp
sbb
mov
pusha
arpl
dec
mov
es
into
jmp
mov
push
sahf
fs
mov
movs
das
or
arpl
dec
or
inc
in
inc
adc
adc
and
xchg
xor
pop
inc
out
loopne
test
repz
xchg
outs
loop
int3
xchg
fsubrp
fild
jb
jae
in
(bad)
repz
mov
dec
shl
add
jbe
inc
jne
data16
xchg
in
movs
add
arpl
iret
mov
arpl
dec
or
or
repz
inc
xchg
mov
in
jle
cmps
mov
or
ror
xor
jg
jle
mov
adc
or
cmc
(bad)
xor
pop
xor
and
loopne
in
sub
mov
ror
xchg
retf
xor
(bad)
cmps
or
pop
cmp
fnclex
pushw
dec
inc
xchg
out
rcl
test
xchg
popa
lods
clc
ret
scas
xchg
push
ret
xchg
inc
scas
out
dec
fwait
(bad)
jno
jbe
mov
jns
out
pop
sub
mov
ret
dec
sbb
fistp
mov
and
dec
mov
push
cmp
sub
cmps
outs
loopne
dec
adc
add
sub
and
(bad)
je
iret
fxch
(bad)
push
sub
xchg
xchg
cmps
push
shl
cmp
jge
push
fcmovnu
out
js
lods
psubsb
dec
imul
and
ret
adc
lods
mov
push
imul
mov
js
jmp
jg
and
inc
fisttp
push
mov
cmps
jbe
adc
shl
ja
dec
fcmovb
fstp
xor
scas
mov
pop
pop
mov
stc
pop
inc
ret
add
rcr
bound
call
enter
xor
or
jle
mov
push
pop
pop
xor
sbb
outs
xchg
xor
cmps
lods
lods
dec
xor
test
xchg
(bad)
and
dec
pop
or
aad
jb
in
and
mov
and
jp
popf
es
push
xor
inc
adc
sbb
aam
(bad)
(bad)
jbe
xchg
stos
sub
jle
std
mov
leave
add
ret
adc
daa
loopne
mov
fwait
(bad)
fidiv
neg
adc
aad
jmp
pop
and
sub
xor
cmps
mov
jns
sbb
ss
xor
push
sbb
push
aad
jne
mov
sub
test
in
iret
xchg
retf
call
idiv
js
loop
(bad)
cmps
fcom
scas
jne
int3
xchg
xchg
jmp
push
nop
dec
and
bnd
out
or
(bad)
sahf
dec
fstp
(bad)
pushf
in
sub
xor
icebp
mov
xchg
das
and
pop
out
cli
pop
lahf
shr
adc
leave
repnz
add
loope
cmp
int
sub
mov
xchg
xchg
or
dec
push
mov
es
test
jb
cmp
or
jo
and
dec
adc
cmps
xchg
inc
adc
out
add
pop
addr16
pop
out
cmp
xchg
dec
jp
sub
(bad)
shl
fsubr
cmps
xchg
int
and
into
or
aaa
adc
call
mov
add
fist
jo
js
pop
out
sbb
(bad)
fiadd
cmp
fsubr
adc
sub
fld
jne
xchg
mov
ret
mov
dec
xor
adc
fs
mov
(bad)
fs
mov
repz
sub
mov
push
and
out
outs
arpl
pop
sti
addr16
scas
shl
cdq
mov
mov
das
mov
nop
mov
pop
shl
imul
jae
scas
mov
cli
mov
mov
mov
add
cmp
mov
mov
mov
cli
pop
dec
add
jmp
das
psadbw
fdiv
xor
in
and
stos
cmc
sub
int3
or
sahf
inc
adc
retf
not
dec
add
xor
sub
and
repz
rcl
out
retf
sub
aad
add
test
stos
push
das
mov
inc
cwde
mov
inc
pop
sub
repz
cmp
sbb
push
and
inc
bnd
cs
(bad)
mov
js
mov
or
or
pop
fsub
mov
push
je
sbb
add
fisub
(bad)
int3
mov
ins
inc
cmp
lods
loop
xchg
(bad)
stc
jmp
cmp
scas
pop
fild
dec
dec
aam
mov
test
aad
sub
mov
adc
call
and
retf
out
cwde
mov
out
mov
test
push
mov
push
mov
or
mov
les
sbb
test
icebp
jg
pushf
fcomp
test
push
or
stc
pop
scas
jae
pop
sub
mov
ss
or
pop
mov
in
jle
push
dec
sbb
sub
add
sub
jmp
jge
mov
in
or
pop
push
sbb
imul
xchg
enter
mov
(bad)
dec
mov
jnp
add
stc
rcr
add
adc
ins
les
mov
in
cdq
jb
out
fisub
fucomi
(bad)
push
mov
out
adc
mov
and
arpl
or
rol
hlt
mov
loopne
and
repz
xchg
ins
xchg
inc
push
adc
fsub
pop
or
lea
xchg
icebp
pop
imul
inc
mov
(bad)
pop
xchg
mov
dec
xor
push
mov
out
(bad)
call
ror
in
xchg
cmp
xor
(bad)
int3
push
cmp
and
and
(bad)
push
cmc
repz
push
loop
pop
in
lahf
out
sahf
popa
bound
(bad)
int
jecxz
mov
test
inc
cwde
(bad)
in
xchg
outs
sar
mov
retf
mov
leave
out
add
ins
ret
pop
shl
ja
sbb
jne
adc
xchg
add
xchg
ss
cli
cmp
scas
div
and
out
aas
mov
fsubr
push
ds
jae
mov
lods
sub
lds
retf
mov
sbb
xor
pop
scas
adc
mov
push
scas
and
adc
inc
pop
xor
mov
or
add
je
lods
aaa
jb
or
push
xchg
in
mov
sahf
cmps
and
xor
push
dec
mov
or
pop
scas
(bad)
les
outs
mov
imul
int
sub
movs
fistp
mov
or
adc
in
jmp
mov
pop
stos
gs
jae
adc
stos
loope
pop
jmp
or
sub
xchg
pop
cwde
push
addr16
xchg
inc
mov
push
cmp
inc
in
stc
ds
(bad)
lea
out
xchg
aam
pushf
fwait
sub
sub
pushf
xchg
(bad)
cmp
cs
lds
cwde
test
adc
aam
sti
cdq
in
fild
mov
jp
push
mov
adc
loop
xchg
add
ins
cwde
jge
fadd
adc
popa
push
jp
iret
int
cmp
push
into
dec
xchg
out
jl
jl
push
pop
sbb
(bad)
cmp
push
lods
inc
jge
sbb
test
adc
bound
jle
jno
add
pop
cmp
pop
in
stc
ds
test
lods
in
retf
bound
shl
inc
imul
mov
lods
fwait
call
mov
popf
jle
ds
scas
sahf
repz
rcl
call
push
sbb
adc
outs
xlat
cmp
push
mov
outs
fs
(bad)
(bad)
js
xchg
jl
arpl
icebp
mov
mov
mov
imul
mov
lods
xor
cmp
mov
adc
int3
test
jnp
test
test
ins
cs
(bad)
inc
push
fbld
dec
mov
sbb
xlat
outs
mov
inc
cld
call
lahf
lods
lahf
fwait
jg
cs
adc
sbb
xor
dec
mov
lahf
inc
sahf
jo
mov
mov
outs
sub
cmc
in
das
pop
jno
push
xchg
or
inc
inc
out
lods
loope
call
push
stos
xchg
std
stos
xchg
or
fisubr
dec
fwait
pop
sbb
aam
sbb
ret
mov
mov
sbb
adc
movs
aad
out
mov
jg
sub
or
add
adc
adc
xor
adc
lea
fsub
icebp
mov
jbe
sbb
mov
jp
mov
imul
sbb
aam
jp
inc
mov
gs
add
mov
mov
and
inc
and
fcomp
mov
inc
sub
sbb
daa
inc
xchg
xchg
ins
jmp
dec
or
imul
cbw
in
and
adc
inc
ja
mov
xchg
push
push
rcr
test
jb
imul
push
fs
jne
and
ficom
call
cmc
(bad)
pop
xor
in
rol
or
add
sti
cmps
sar
lea
into
mov
xor
mov
inc
jnp
mov
repz
sub
sbb
div
pop
sub
cmps
sub
fcomp
sbb
add
mov
add
pop
pop
push
xchg
mov
mov
ins
adc
sub
shl
adc
add
icebp
mov
mov
inc
add
or
and
dec
mov
add
cdq
sbb
push
movs
xor
call
pop
hlt
clc
add
dec
fidiv
inc
pop
(bad)
cli
jmp
mov
sahf
sar
sbb
daa
pop
in
call
lods
add
sbb
retf
jle
jle
push
(bad)
inc
inc
or
(bad)
sbb
mov
inc
jnp
mov
rcl
inc
adc
shl
push
outs
sub
dec
mov
pop
ins
dec
mov
(bad)
mov
sbb
shl
add
cmc
pushf
sbb
enter
fcmovnb
pop
(bad)
es
ror
dec
int3
inc
dec
add
icebp
outs
int
or
xor
retf
lds
add
mov
loopne
sub
fdiv
and
pop
ja
pop
test
and
stc
pushf
and
mov
xlat
das
push
mov
outs
add
and
xor
mov
push
mov
imul
cmps
cli
mov
sbb
mov
xchg
mov
call
ds
pop
retf
add
pop
out
ds
jg
or
stos
push
scas
les
ins
out
inc
sub
addr16
inc
shl
mov
push
scas
and
retf
addr16
les
pop
push
sbb
and
dec
shl
add
jns
(bad)
movs
aaa
daa
mov
push
xor
dec
daa
daa
sub
loop
loop
xchg
or
lods
sub
call
lods
xchg
stos
mov
dec
inc
dec
ins
ds
loop
rcl
loop
js
cli
push
mov
jo
cli
sahf
jge
mov
les
das
aaa
pop
ds
lock
ins
or
dec
loop
das
ret
lahf
pop
mov
test
movaps
out
movs
mov
stos
loopne
mov
fmul
shl
shl
btc
inc
rol
sub
cmp
pop
xchg
cmp
mov
in
dec
inc
adc
dec
out
cs
das
push
sahf
sar
jmp
(bad)
mov
inc
mov
in
add
push
lods
loop
cmps
movs
inc
xor
and
add
hlt
mov
rol
jg
dec
pop
cwde
mov
movs
pop
mov
(bad)
(bad)
cmps
sbb
mov
pop
ret
mov
fsubr
(bad)
cmp
ss
(bad)
mov
add
or
inc
inc
nop
loop
jne
sbb
in
sbb
std
jb
pop
jb
xor
es
push
add
inc
hlt
lods
xchg
call
cmp
pusha
mov
push
pop
(bad)
mov
jne
mov
sbb
in
imul
xchg
aam
jmp
sub
cmp
jge
lds
jecxz
mov
or
mov
xor
mov
inc
mov
or
(bad)
jmp
or
xchg
mov
ror
out
int3
adc
out
outs
xchg
popf
retf
jns
xor
add
and
fld
ja
jno
sub
das
cmp
xor
lds
mov
das
(bad)
stc
jl
fwait
fwait
test
pop
mov
pop
inc
add
cmp
iret
repnz
movs
arpl
shl
inc
gs
adc
jno
jg
jae
inc
pop
push
fdivp
in
dec
es
xor
pop
(bad)
pop
mov
adc
pop
add
jle
pop
cmp
jo
inc
adc
sub
mov
rol
jo
mov
pop
push
push
sbb
fcom
xor
ret
fdivp
call
sub
mov
stos
add
mov
bound
sub
hlt
(bad)
imul
cli
and
loopne
mov
and
call
loope
dec
jmp
mov
adc
xchg
in
jp
enter
mov
lds
js
fiadd
sar
cmp
into
xchg
cmp
dec
rcl
mov
pop
jl
test
movs
xor
sbb
movs
push
test
stos
push
sub
ins
adc
mov
lods
jp
xor
inc
mov
out
dec
mul
xlat
xlat
hlt
fwait
aaa
lods
stos
dec
push
lock
xor
out
test
or
outs
cdq
or
ret
pop
lods
adc
cli
push
or
aad
adc
aam
mov
pop
idiv
les
mov
mov
push
push
adc
sub
(bad)
mov
adc
ret
stos
xchg
rep
or
sub
scas
sbb
pop
or
or
cmps
(bad)
es
push
ret
data16
rcl
or
push
dec
pop
pop
and
fsqrt
ds
jge
or
(bad)
xor
mov
mov
push
mov
jl
push
mov
or
and
sti
cli
sub
jle
push
aaa
shl
cmp
cmp
pop
pop
jnp
cwde
bound
aas
(bad)
mov
push
out
jp
ret
lahf
aam
pop
dec
push
mov
call
popf
mov
or
aas
test
in
shl
pop
fsubr
and
scas
gs
lock
adc
(bad)
or
repnz
ds
scas
mov
inc
and
test
sbb
push
sbb
repnz
movs
mov
(bad)
inc
add
dec
xchg
and
(bad)
inc
shl
je
sbb
sub
push
and
aam
ret
pushf
jmp
pop
mov
rcl
in
dec
mov
sbb
scas
call
jb
jns
mov
hlt
loopne
icebp
mov
pop
imul
inc
adc
mov
rcr
sub
mov
movs
sbb
retf
mov
in
pop
sbb
fst
or
inc
jecxz
dec
imul
mov
iret
mov
jnp
dec
and
xchg
call
xchg
xchg
xlat
sub
and
push
pop
adc
or
xor
add
cld
lods
rol
(bad)
in
aam
cmp
inc
cmps
push
clc
lods
fnstsw
movs
xchg
mov
sbb
sbb
jmp
mov
aaa
jae
(bad)
mov
sub
out
outs
cmp
int
call
ret
call
popf
ins
and
stos
cld
dec
cwde
mov
test
sub
gs
cmp
and
add
inc
in
sub
cmp
js
js
adc
int3
inc
iret
adc
or
sub
inc
out
in
adc
cmp
popa
fsubr
pop
pop
jge
mov
ficomp
(bad)
in
xchg
mov
push
inc
xchg
dec
(bad)
xchg
ja
mov
mov
push
daa
lds
cld
stos
inc
cwde
xchg
iret
and
mov
and
cmp
bound
xchg
lods
jbe
and
ins
jle
jo
jno
sub
ror
and
test
fidiv
xchg
jnp
add
dec
adc
call
rcr
xor
fisttp
sar
xchg
sub
inc
xchg
jb
xor
xchg
jle
cmp
mov
cmp
das
jae
or
jecxz
pop
mov
mov
rcl
cmps
sub
nop
mov
hlt
call
xchg
jl
pop
dec
mov
nop
call
scas
test
adc
clc
mov
int
push
popf
jns
mov
sahf
in
ja
mov
mov
pop
pop
imul
mov
mov
adc
in
xor
and
sub
adc
sub
loopne
jae
xor
retf
mov
dec
pop
in
jns
xchg
jns
inc
push
dec
mov
sar
inc
and
jmp
cmps
das
push
xchg
push
cmp
mov
je
ins
ins
mov
sub
sub
mov
clc
add
(bad)
idiv
mov
rcl
fdivr
cmp
mov
out
push
dec
mov
mov
lock
clc
mov
imul
fild
jl
pop
and
jge
fdiv
addr16
jmp
and
and
adc
js
in
push
and
inc
mov
call
sahf
out
arpl
adc
cmp
mov
dec
or
mov
mov
imul
jns
lahf
push
lods
fisub
ins
(bad)
pop
repnz
hlt
mov
and
jp
and
mov
lods
jmp
push
mov
sub
leave
sub
(bad)
out
dec
pop
popa
popa
or
je
jno
mov
(bad)
call
in
xchg
pop
sbb
and
mov
xor
cmp
push
ins
(bad)
call
arpl
cmps
aam
jmp
data16
rol
and
loope
push
xchg
js
rol
sbb
cmp
mov
(bad)
mov
inc
rcpps
cmp
pop
xor
sub
mov
jg
scas
mov
jp
(bad)
stc
fstp
push
sub
jecxz
movs
mov
sub
test
ja
hlt
aam
sbb
dec
mov
sub
call
push
lods
jge
jecxz
xlat
add
mov
mov
or
mov
jo
add
push
xor
mov
xchg
inc
imul
mov
mov
fisttp
ror
add
sbb
adc
ds
(bad)
call
mov
repnz
xor
out
xor
mov
das
and
sub
mov
aas
jo
div
add
xchg
push
stos
ror
mov
fbstp
push
ret
outs
div
sub
addr16
add
leave
popf
retf
loope
jge
ret
jo
je
scas
sahf
lds
fmul
cmps
mov
retf
xchg
out
push
loopne
aaa
js
jae
ins
pop
mov
inc
retf
mov
in
xlat
or
dec
popa
jns
xor
jo
mov
push
push
mov
imul
pushf
mov
shl
ins
mov
shr
cld
movs
out
push
mov
xchg
xor
int3
test
retf
pop
aam
nop
or
push
add
das
call
jle
xchg
in
stos
push
in
push
retf
retf
dec
retf
rcr
jp
xchg
inc
mov
scas
dec
cmc
cmp
adc
mov
add
pop
sahf
test
inc
mov
xchg
mov
and
imul
pop
mov
and
mov
or
xor
dec
adc
ins
adc
mov
jbe
outs
mov
push
es
jge
mov
mov
dec
push
push
test
dec
push
clc
or
(bad)
ret
sub
sub
xchg
jbe
mov
loope
call
and
out
dec
xchg
lds
push
cmp
inc
cmps
test
xchg
and
sbb
pusha
xor
in
add
mov
pop
push
ins
js
mov
iret
dec
ret
dec
adc
iret
sub
sub
test
jmp
sbb
lahf
jno
cmc
call
fxch
inc
lea
jne
scas
int3
adc
pop
add
ins
fimul
repz
imul
add
icebp
xor
(bad)
call
adc
push
rcr
je
stc
adc
jle
(bad)
stc
add
mov
cmps
jmp
jge
jecxz
jp
pop
outs
add
adc
add
cld
inc
fld
mov
xchg
lea
mov
ins
pusha
jg
int3
(bad)
mul
rcr
out
dec
icebp
sbb
(bad)
mov
ins
idiv
(bad)
inc
loop
push
sub
push
dec
add
pop
in
jno
and
xor
add
sar
neg
into
push
dec
leave
daa
xlat
loop
in
sbb
mov
shl
or
std
or
pop
dec
int
mov
ds
addr16
push
bound
or
fcom
in
enter
bnd
pop
into
out
in
inc
cs
jp
loop
xchg
hlt
ror
fisubr
enter
mov
mov
loop
ins
pop
inc
dec
addr16
mov
outs
repnz
in
cmp
dec
retf
mov
adc
mov
or
mov
mov
jl
or
or
fst
lods
stos
(bad)
pusha
and
pop
cmc
jns
int
add
inc
add
pop
sbb
mov
pop
mov
enter
cmp
mov
dec
mov
inc
adc
stc
data16
call
or
mov
test
jp
rcr
mov
call
or
xchg
fnstenv
je
cmp
arpl
test
stos
addr16
aas
jmp
inc
out
inc
repnz
push
ins
outs
sub
mov
aaa
lock
and
ret
nop
mov
adc
js
sub
int
jb
dec
mov
xchg
shl
(bad)
pop
int3
xor
out
call
pop
dec
push
jge
bound
lock
xor
and
retf
popf
mov
mov
jno
or
xor
das
push
and
cli
adc
(bad)
in
mov
sahf
xor
cmp
into
in
ins
ror
popf
and
dec
cmps
adc
jne
push
scas
mov
dec
inc
jae
in
test
mov
mov
pushf
fsub
sahf
xchg
mov
movs
popf
out
cmp
repz
add
jecxz
int3
inc
test
retf
int3
inc
jecxz
lahf
xor
(bad)
aaa
push
dec
pop
outs
inc
mov
push
test
xchg
jb
call
or
and
sar
call
adc
or
in
nop
mov
cmc
xchg
and
dec
add
arpl
jbe
xor
dec
mov
or
gs
jmp
fidiv
data16
ror
cmp
retf
arpl
jns
js
fisubr
push
addr16
jmp
mov
std
popf
cmp
push
or
push
outs
js
test
dec
(bad)
imul
stos
pop
push
loop
scas
adc
and
repz
fmul
mov
xor
adc
inc
sahf
adc
std
jae
and
inc
or
shr
mov
xor
jnp
int
cmp
sub
sbb
int3
or
xor
in
int
jmp
jbe
out
fidiv
adc
or
lods
add
in
cld
jp
test
mov
inc
xor
les
ja
cmp
fbld
jns
inc
and
xor
outs
cmps
pop
dec
sbb
add
lds
test
dec
cmp
and
jmp
neg
test
jmp
inc
dec
or
mov
pushf
nop
outs
cmp
(bad)
imul
adc
or
xchg
push
call
gs
ret
jle
and
je
dec
pop
add
clc
icebp
cmp
dec
sub
xchg
icebp
js
std
lds
call
(bad)
xchg
inc
cmp
mov
inc
mov
repz
add
arpl
in
daa
lea
in
ins
test
mov
mov
imul
inc
adc
or
sbb
adc
mov
jnp
xchg
push
adc
add
inc
(bad)
sbb
pop
adc
out
mov
das
outs
sub
mov
imul
add
and
and
shl
enter
rol
inc
call
pushf
fwait
aam
int3
addr16
xchg
dec
mov
jecxz
into
and
push
sbb
enter
ins
lods
jno
lock
add
das
sti
ret
rcr
pop
stc
std
sar
pop
loopne
ja
push
sub
aad
or
out
cmp
(bad)
stc
xor
mov
inc
repnz
test
(bad)
(bad)
adc
and
in
fwait
mov
hlt
mov
sub
shl
(bad)
xor
in
jg
mov
dec
push
xchg
inc
and
xchg
fmul
inc
cmp
add
dec
cmp
scas
xor
into
cmps
xchg
aam
(bad)
sbb
lods
mov
inc
test
into
sub
inc
mov
dec
ins
outs
mov
or
scas
fdivp
cli
es
pop
sbb
out
xor
ja
popa
or
mov
pop
mov
test
push
(bad)
add
mov
movs
in
imul
loopne
push
sbb
loope
loopne
add
mov
pop
scas
jg
cld
mov
add
pop
shl
test
test
inc
xchg
loopne
pop
jns
mov
rol
out
mov
je
jno
or
inc
mov
lahf
test
and
mov
sub
mov
mov
rcr
aaa
nop
jb
cmp
xor
cs
call
pop
inc
repz
mov
mov
leave
dec
stos
jge
fisttp
std
rol
ja
lock
idiv
cmps
xchg
mov
fwait
inc
test
test
lahf
in
(bad)
ret
popf
loope
push
scas
xor
shl
mov
outs
enter
inc
jge
jmp
dec
retf
dec
scas
and
sbb
je
inc
or
jg
adc
inc
adc
push
dec
dec
pop
xor
pop
cs
adc
enter
ins
movs
imul
xor
adc
out
push
(bad)
jmp
pop
cdq
inc
ret
adc
inc
dec
inc
into
fwait
loopne
stc
jecxz
mov
sbb
mov
or
movs
add
test
mov
mov
or
jge
sub
ins
jl
rcr
retf
dec
jae
je
jg
mov
xchg
dec
je
inc
xchg
popa
mov
jmp
inc
cs
ins
adc
loope
jmp
and
es
inc
cwde
bound
daa
test
sub
jmp
push
imul
aam
scas
adc
fistp
jmp
mov
jmp
mov
inc
fist
sets
adc
dec
inc
sahf
pop
dec
mov
out
data16
aad
mov
ja
outs
dec
das
fisub
mov
bound
cmp
js
or
xchg
dec
int3
mov
stc
not
das
in
xchg
xor
mov
push
dec
enter
lds
into
scas
ret
mov
fbld
jne
or
pop
xchg
(bad)
adc
or
adc
jmp
pop
push
xor
stos
out
add
rol
mov
push
pop
ret
mov
cwde
jne
out
dec
cs
jmp
call
mov
cmp
ret
mov
jg
sub
sub
jg
adc
inc
xchg
mov
push
push
aaa
adc
(bad)
jae
xchg
push
add
sub
ret
arpl
mov
push
mov
dec
mov
adc
repnz
or
fist
imul
mov
repz
mov
mov
dec
add
xor
jg
ds
push
mov
out
xlat
mov
and
idiv
sbb
popa
dec
add
mov
test
xchg
out
sti
ss
stos
mov
push
loope
std
adc
cs
mov
(bad)
stos
dec
nop
or
add
ret
xchg
push
imul
sub
or
test
iret
cmc
adc
test
inc
pusha
or
rcl
std
xchg
dec
jecxz
movs
icebp
mov
jne
cmp
add
loope
jbe
xchg
sti
xor
adc
dec
out
ins
mov
jne
push
or
loope
call
fldcw
dec
test
das
aas
mov
jl
dec
outs
mov
adc
and
mov
sahf
jmp
(bad)
mov
sbb
fcom
cs
mov
mov
call
mov
ins
fidivr
leave
and
out
je
inc
mov
jmp
sbb
push
or
jo
stos
push
daa
fdivr
call
inc
mov
ficom
in
sub
aam
das
jmp
aas
xchg
jecxz
aad
mov
test
cdq
or
cmps
xchg
mov
inc
into
cld
loope
popf
mov
rol
add
std
sbb
xchg
sbb
xchg
xchg
add
push
push
and
cmp
or
jne
add
cmp
and
pop
(bad)
push
and
sbb
mov
xlat
xchg
scas
jle
add
mov
dec
iret
adc
rol
or
mov
stc
fldenv
retf
inc
mov
mov
test
inc
cdq
pop
ja
xchg
iret
ficom
std
fld
pop
xlat
cld
and
dec
pop
inc
cmp
imul
push
cmp
adc
int
(bad)
das
mov
cmps
(bad)
cmp
jae
shr
test
cmps
jns
lods
(bad)
cdq
test
and
test
inc
mov
mov
sub
cmp
(bad)
inc
jle
(bad)
mov
jge
(bad)
imul
rcr
retf
ins
and
sbb
in
push
jge
mov
jmp
jge
pop
xor
pop
cs
inc
sub
jae
xor
inc
aaa
sub
push
cmps
sub
mov
sahf
mov
clc
fisttp
add
adc
push
push
icebp
mov
les
ror
outs
scas
jbe
fbld
fiadd
sbb
movs
sbb
or
dec
in
mov
arpl
imul
cs
cmc
sub
jl
out
stos
cdq
ret
and
inc
retf
push
jmp
mov
push
ja
(bad)
jp
jmp
movs
mov
dec
in
xor
sbb
icebp
loop
inc
iret
xchg
std
outs
cdq
lods
push
scas
jg
mov
lods
(bad)
pop
pop
adc
xor
jo
inc
movs
mov
aad
adc
(bad)
aaa
push
ins
add
(bad)
sbb
mov
or
push
fsub
xchg
pop
sbb
mov
(bad)
push
retf
rcr
out
iret
adc
jmp
or
(bad)
enter
ja
je
icebp
xchg
mov
out
add
push
test
sub
test
sti
jne
mov
sbb
pop
shr
jno
ret
pop
int
nop
pusha
mov
sbb
xchg
fucom
add
adc
inc
jecxz
inc
loope
mov
cdq
jecxz
push
and
cmps
retf
jnp
(bad)
cmps
push
outs
lahf
mov
or
xor
nop
lea
or
imul
cld
inc
(bad)
sub
call
jmp
lahf
xchg
push
dec
in
sub
cld
gs
fldcw
imul
pop
cmp
jnp
cmp
imul
nop
jg
jecxz
repz
std
mov
cmp
xor
mov
loop
pop
or
mov
in
jp
rcr
cmps
mov
sbb
in
mov
in
mov
xchg
adc
or
dec
cmp
fs
jbe
cmp
in
and
push
dec
inc
pop
xchg
jg
cmp
fs
iret
pop
cmp
addr16
cdq
or
and
sti
in
inc
mov
pop
push
push
dec
sub
mov
push
cmp
lods
add
ret
or
(bad)
jae
iret
cmp
ins
mov
xlat
push
and
shl
daa
or
test
add
sub
and
inc
daa
add
leave
(bad)
jmp
arpl
ja
cmps
enter
lock
jne
popf
rol
mov
dec
scas
mov
add
cmp
hlt
pop
pusha
movs
mov
(bad)
mov
icebp
(bad)
iret
add
dec
cwde
xor
inc
rcr
jbe
jnp
jne
mov
pop
mov
jmp
jmp
enter
js
adc
xlat
adc
pusha
sub
pop
cmp
neg
ins
push
mov
pop
movs
lods
popa
cdq
imul
xchg
aas
mov
in
mov
sbb
test
or
cld
sbb
inc
mov
push
cs
add
(bad)
lock
jmp
loope
mov
jg
pop
in
nop
lea
mov
js
mov
out
ins
stos
rep
mov
add
call
jo
aam
lods
jg
pop
adc
sub
dec
test
ds
jbe
pop
aas
cmp
jo
mov
dec
xchg
push
dec
inc
scas
xchg
repz
cmps
(bad)
adc
jp
push
mov
je
int
pushf
xchg
push
fwait
cdq
add
and
sbb
sbb
inc
loope
daa
fidivr
pop
sbb
jl
or
popa
jae
inc
jl
call
sti
inc
nop
ficomp
frstor
sahf
or
fild
dec
movs
hlt
mov
outs
pop
mov
rcl
xor
cwde
jae
mov
xor
nop
cmp
movs
ret
sbb
mov
out
fiadd
fs
fldcw
jmp
add
sbb
or
inc
xchg
sub
adc
sbb
shl
and
sbb
lods
push
add
pop
sbb
mov
mov
push
xchg
test
clc
sbb
jbe
cmp
cmp
or
adc
push
xchg
jecxz
jnp
mov
or
in
lock
cwde
fild
movs
jbe
cs
mov
stos
pop
pusha
(bad)
sub
jg
out
int
or
int3
sahf
pop
xchg
cmp
mov
dec
cmps
mov
lods
push
pop
in
fmul
stos
out
mov
and
imul
test
dec
add
fdiv
iret
mov
mov
scas
test
clc
loop
push
int
mov
dec
or
sub
xor
cmp
call
sbb
aam
xchg
add
push
cmp
pop
push
popa
mov
add
fadd
sbb
pop
xchg
mov
or
pop
in
pop
std
add
and
fs
lea
pushf
mov
mov
sbb
xlat
sub
jg
test
inc
fdiv
cmps
iret
dec
xor
pop
movs
stos
scas
xor
js
xor
or
iret
sbb
ret
push
inc
jae
mul
sbb
xchg
loop
fsub
imul
pop
cmps
stos
mov
sub
test
xchg
jmp
adc
bound
xchg
push
cmps
push
jp
mov
push
fbstp
pop
imul
jo
out
pop
push
cmp
jb
mov
push
pushf
call
std
mov
adc
in
jno
lods
pop
jns
pushf
idiv
fwait
stos
push
pop
sub
nop
sbb
les
mov
dec
lds
sub
ja
cmp
fdiv
(bad)
push
add
std
push
xchg
ja
(bad)
sbb
ret
mov
pop
retf
mov
rcl
sub
add
dec
loop
inc
sar
mov
fistp
dec
add
cmp
sbb
aaa
popf
pop
repnz
in
jecxz
mov
sbb
pop
ds
sub
enter
push
pop
xor
push
or
in
mov
loopne
test
xchg
pop
cmp
lods
push
loop
jg
xchg
xlat
(bad)
(bad)
pop
call
sbb
push
scas
xrelease
cwde
push
sub
xor
jmp
pop
rcl
and
into
loopne
scas
mul
push
mov
adc
mov
xchg
jnp
cmps
pop
sub
push
leave
outs
imul
hlt
xor
and
(bad)
or
cmp
sahf
jns
push
lea
js
add
xchg
sbb
or
mov
outs
hlt
push
xor
mov
test
aas
xchg
(bad)
(bad)
pop
ins
imul
es
xor
xchg
aam
jecxz
pop
imul
imul
inc
cmp
pop
inc
or
or
xchg
lea
push
ficomp
into
mov
and
sub
xchg
xchg
mov
jno
cld
mov
das
outs
aad
sub
les
sbb
(bad)
sahf
xchg
jg
mov
xchg
ja
pop
stos
cmp
not
jb
add
cs
xchg
pop
es
lock
out
daa
cmps
push
les
sub
hlt
xor
mov
outs
jle
ins
xchg
mov
(bad)
push
jns
enter
sbb
cmps
inc
push
dec
jno
adc
cmp
sub
xchg
sub
(bad)
dec
jle
pusha
xor
push
jno
les
nop
mov
in
(bad)
fisttp
leave
xor
adc
xchg
pop
add
fs
or
lea
pop
adc
arpl
xchg
pushf
jecxz
hlt
test
stc
xchg
push
push
ret
shl
dec
sub
dec
mov
loope
pop
repnz
clc
test
div
and
(bad)
popa
sar
add
sbb
movs
xor
out
adc
and
xor
jo
ins
mov
xchg
mov
enter
pop
std
scas
dec
or
xchg
shr
or
aam
xchg
lds
out
(bad)
and
pop
(bad)
cmp
mov
jno
sbb
and
scas
ins
jp
fisttp
or
dec
pop
xchg
xchg
mov
out
sbb
cmp
cmp
mov
or
cmp
pop
xchg
fisub
(bad)
int
sbb
mov
jb
fs
lods
inc
adc
hlt
aam
dec
out
jl
loopne
xor
cli
or
jno
in
out
add
adc
stos
adc
xor
dec
and
mov
popa
addr16
xor
mov
cmps
or
push
mov
bound
or
mov
call
test
cld
inc
stos
or
dec
out
mov
pop
mov
int3
(bad)
sub
mov
cmc
call
xchg
sub
arpl
sub
retf
adc
neg
retf
loopne
stos
add
sbb
out
mov
xchg
loope
xor
add
sub
aam
cwde
movs
pusha
jmp
mov
outs
es
(bad)
adc
mov
fst
push
mov
je
mov
ins
sub
out
cwde
ss
out
movs
les
shl
stos
cmp
clc
cmps
ja
dec
pusha
push
adc
xor
or
mov
mov
cmp
scas
ffree
fadd
jb
mov
ja
jbe
ss
push
jae
adc
xchg
jns
dec
mov
jp
cmps
and
xor
fcom
mov
xor
mov
dec
fmul
aas
pushf
dec
add
cs
cmp
adc
mov
cld
sbb
lds
xor
in
jo
pop
ja
sub
pop
aad
pop
mov
xchg
dec
mov
mov
mov
and
or
inc
jo
mov
fdivr
cld
mov
arpl
aad
xor
adc
retf
pop
xchg
push
mov
test
cmp
xchg
aam
bound
or
scas
cmc
mov
ds
cmps
sbb
mov
scas
pop
sbb
xor
xchg
add
je
cmp
jo
cdq
mov
out
addr16
xor
pop
je
mov
ja
jb
mov
add
out
xor
mov
repnz
pop
pop
jae
xchg
shl
push
push
jmp
inc
js
push
jb
(bad)
cli
sub
mov
and
out
push
xchg
ins
dec
xor
push
xor
xlat
mov
jmp
jae
cmp
das
lods
daa
loope
test
movs
pusha
pop
test
movs
mov
mov
mov
mov
iret
mov
xchg
call
pop
aam
xchg
xchg
inc
lea
and
pop
into
imul
dec
test
jnp
sbb
dec
cmp
retf
sbb
js
jmp
mul
repnz
(bad)
xor
jmp
mov
fucomp
xchg
xchg
cmp
pushf
push
jb
fnstsw
scas
rcl
add
es
pop
je
test
inc
sub
arpl
inc
out
iret
adc
std
ffree
sti
fdivr
popf
cmp
in
push
out
rcl
pusha
mov
mov
mov
jecxz
inc
ret
add
inc
dec
or
stos
adc
shl
unpcklps
xor
jb
cli
inc
lods
out
push
xchg
pop
cs
adc
mov
movs
push
dec
sub
fistp
inc
out
(bad)
inc
lods
pop
jp
fldcw
fidivr
xor
inc
pop
xor
and
inc
push
xchg
mov
xchg
sar
ds
aas
mov
mov
js
jb
adc
mov
xchg
out
mov
movs
push
ret
add
repz
cld
in
stos
xchg
inc
pop
lds
hlt
into
pop
sar
pop
xor
or
bound
pop
js
push
ss
jmp
retf
daa
xor
push
pop
xchg
inc
jne
sbb
push
inc
cmp
jecxz
outs
rcl
sahf
mov
rol
mov
fadd
sbb
call
or
aaa
outs
loop
adc
jl
fmul
dec
fmul
rcl
in
ja
js
xor
push
xchg
add
(bad)
out
mov
ja
shl
mov
aad
addr16
mov
dec
xlat
inc
iret
call
icebp
shl
mov
fwait
push
xchg
sahf
call
hlt
retf
movs
mov
sbb
cmp
cmp
pop
push
jge
push
mov
sub
ins
fisubr
pop
sub
ficomp
out
retf
das
aad
mov
sbb
cli
sbb
js
icebp
or
(bad)
stc
nop
jae
xor
add
push
inc
jne
stos
mov
jb
jae
mov
cli
jecxz
push
dec
cmps
lock
sub
lahf
ins
xchg
loope
stc
out
mov
inc
enter
and
cmp
call
pop
pop
sub
or
jmp
or
(bad)
(bad)
neg
cmp
inc
retf
into
jns
shl
adc
push
addr16
in
scas
out
out
cmp
and
sbb
into
pushf
nop
sub
adc
in
aaa
push
js
scas
xchg
jl
sahf
push
je
mov
les
gs
imul
aas
sbb
fldenv
mov
leave
std
xor
(bad)
jae
stos
dec
push
inc
xchg
cmps
push
mov
add
push
inc
iret
dec
ficom
stos
adc
cmc
fst
inc
mov
xor
sub
jle
and
sub
ds
mov
sub
cmp
sub
mov
add
mov
ret
cmp
les
(bad)
psraw
and
rol
out
push
daa
mov
sub
add
in
mov
adc
xchg
mov
mov
repz
daa
outs
inc
fdiv
jae
je
enter
mov
cmp
mov
not
mov
jnp
lahf
dec
out
rcl
jbe
push
outs
xor
rcl
fadd
and
int3
xchg
movs
xor
inc
sub
sbb
mov
test
xchg
ror
sbb
pop
and
add
add
sub
jns
sbb
lahf
mov
(bad)
fsub
pop
dec
inc
mov
lods
ret
(bad)
mov
aam
cli
pop
fcmovbe
ds
repz
xchg
in
loope
(bad)
(bad)
call
and
inc
mov
movs
mov
mov
int3
adc
add
test
push
mov
push
imul
pop
test
aam
lds
sbb
fsub
fsub
rcl
xchg
pop
sahf
pop
(bad)
pop
cs
or
or
(bad)
(bad)
into
stos
xchg
pop
rol
jl
enter
cmp
cmps
fadd
inc
(bad)
sbb
mov
ins
arpl
and
pop
or
jo
call
out
mov
lahf
xchg
cmp
mov
loop
sub
out
xor
(bad)
sub
repz
xchg
cmp
jne
sub
adc
mov
cmps
cmp
and
scas
scas
pushf
jmp
aaa
mov
repnz
add
clc
les
out
or
movs
sbb
fwait
call
adc
ja
inc
adc
dec
add
jl
xchg
ins
js
xchg
jl
cdq
aas
loopne
bound
test
call
imul
add
bound
sbb
dec
int
jl
sbb
(bad)
fnstsw
push
mov
outs
adc
adc
adc
mov
fs
dec
test
js
movs
aad
aam
mov
aad
mov
mov
pop
imul
jle
(bad)
leave
push
test
retf
xlat
call
sti
mov
mov
mov
xor
adc
jmp
adc
enter
in
xchg
ins
lock
dec
cmp
jmp
push
cli
popf
inc
je
imul
or
mov
rcl
popf
(bad)
adc
and
mov
mov
popf
xlat
(bad)
outs
jne
mov
sbb
addr16
xchg
pop
xchg
or
pop
cmp
jae
jecxz
out
xchg
and
fcom
imul
int
and
push
ret
hlt
outs
loope
popa
mov
pop
mov
std
pop
add
ret
outs
addr16
push
pop
ds
inc
fnsave
imul
xor
xor
adc
inc
jle
pop
inc
jo
ds
mov
shl
cmps
mov
push
in
xchg
sub
sub
inc
(bad)
out
xchg
xchg
nop
(bad)
popf
and
sub
sbb
mov
aam
test
(bad)
cmc
xchg
add
jmp
ins
or
mov
dec
xchg
cmps
xlat
fwait
cwde
jl
hlt
sub
pop
loope
nop
xlat
pop
mov
mov
imul
jo
(bad)
cs
gs
cmp
das
loope
psadbw
pushf
adc
adc
icebp
imul
ret
jae
pop
sti
pushf
pop
push
add
add
pop
das
call
hlt
push
and
mov
cdq
pop
xor
jb
icebp
ja
xor
push
mov
mov
(bad)
jnp
mov
fwait
xlat
nop
mov
ror
pop
sbb
mov
mov
adc
repz
mov
mov
inc
jne
(bad)
cdq
aaa
call
push
je
sahf
nop
lods
jae
jg
std
stc
xor
nop
or
in
inc
fnsave
lahf
iret
aad
push
mov
dec
push
test
lods
cmp
les
or
int
movs
mov
js
dec
or
popa
ss
ins
or
in
xchg
sub
dec
jns
cmp
bound
(bad)
dec
inc
adc
push
das
enter
add
shr
out
mov
sub
ja
jo
stos
dec
iret
shl
frstpm(287
mov
mov
xchg
mov
push
test
shr
jl
rcr
mov
ja
out
loop
adc
pop
neg
loope
adc
es
ret
lods
fimul
jne
repz
test
cmp
push
pop
or
gs
(bad)
loopne
jmp
ret
popa
and
cmc
cs
nop
and
cwde
or
mov
sbb
add
retf
jno
sbb
cmp
sti
xchg
ja
push
inc
dec
fs
sar
inc
sbb
inc
push
or
add
hlt
xchg
jmp
movs
hlt
xor
fbstp
mov
cmp
mov
jae
outs
fstp
or
dec
outs
popf
jae
sbb
(bad)
cli
ja
int3
(bad)
dec
mov
arpl
adc
shl
fisub
aam
mov
jae
xor
dec
scas
mov
stos
cmp
pop
imul
xor
pop
inc
mov
adc
out
dec
pop
mov
add
popf
nop
xchg
stos
xor
xor
cmps
adc
clc
xchg
repz
mov
fbstp
xchg
inc
ss
mov
mov
in
retf
cli
hlt
cwde
pushf
aam
ins
scas
or
mov
mul
jg
cmp
inc
xlat
jg
hlt
outs
in
push
outs
repz
jmp
lock
inc
pop
xor
push
jb
psubsw
div
sub
or
movs
pop
shl
add
push
or
add
sbb
jle
add
inc
add
xor
inc
mov
xor
cs
popa
ret
mov
mov
dec
cmp
inc
das
dec
es
je
in
pop
cmp
out
xchg
xchg
ret
jbe
rcr
jo
fwait
jns
in
cmp
xchg
or
sub
push
test
mov
mov
in
cwde
in
test
leave
push
jge
xor
jl
js
mov
sub
call
sbb
pop
jmp
and
cmp
sahf
or
in
imul
add
fadd
xor
loope
dec
std
adc
push
repz
push
xchg
or
sub
scas
push
sbb
cmp
mov
loope
sub
dec
jmp
xor
data16
fld
ja
fbld
sbb
iret
addr16
push
adc
pusha
ds
retf
lea
arpl
test
mov
jno
mov
sti
pop
ja
int
mov
(bad)
mov
xchg
outs
out
das
xchg
aas
dec
jno
pop
xchg
jb
cli
push
ret
or
dec
adc
push
push
sbb
push
mov
sbb
fcomp
stos
and
loop
aas
sbb
jns
push
cmps
mov
xchg
sub
jo
xlat
mov
xchg
adc
jo
inc
test
jns
pop
sub
idiv
dec
imul
adc
dec
cmp
xor
les
and
leave
gs
inc
mov
cld
jne
pop
and
dec
repnz
mov
mov
mov
mov
mov
(bad)
prefetcht2
(bad)
je
dec
mov
xor
jge
push
(bad)
aam
inc
(bad)
mov
xchg
jne
push
loop
mov
sbb
test
(bad)
push
mov
lods
scas
jmp
push
and
pop
dec
jo
jl
jp
test
xor
in
in
retf
inc
call
in
popf
in
lods
xchg
int
cmp
add
inc
add
es
sub
xor
jg
inc
cmp
dec
popf
pop
sub
movs
cmps
shl
ret
popf
jno
pop
jmp
sbb
adc
adc
out
xor
les
lods
add
jb
cs
cmp
push
lea
pop
or
mov
push
inc
stc
xchg
inc
jle
jg
ins
inc
not
call
and
loop
lods
shr
inc
push
clc
mov
movs
mov
es
jno
add
or
hlt
nop
retf
retf
xchg
fstp
out
loope
loopne
test
stos
imul
sub
xchg
ja
jo
adc
pop
mov
movs
arpl
jae
nop
jle
sub
xchg
test
cli
cli
cmp
int
enter
fld
stos
adc
sub
out
mov
jbe
sbb
cmp
fist
fwait
pop
(bad)
pop
xor
push
inc
sbb
xor
pop
xor
mov
mov
ins
xor
or
xor
arpl
loopne
cmp
and
and
dec
gs
push
pop
cmp
pop
fnstenv
inc
std
inc
leave
and
in
mov
xchg
cwde
xchg
push
mov
jecxz
dec
mov
pop
jo
shl
mov
mov
dec
loop
fld
cmp
ret
movs
mov
out
dec
dec
push
add
cmp
jecxz
idiv
push
push
inc
cli
inc
in
inc
fild
daa
mov
pushf
add
idiv
out
inc
mov
add
jno
rol
cmp
pushf
(bad)
das
in
mov
pop
add
push
loop
jecxz
scas
jg
(bad)
in
sahf
cs
sub
pop
mov
and
scas
loop
jbe
sbb
mov
mov
out
xor
lock
pop
int
inc
sar
(bad)
jg
jmp
or
cmp
imul
aam
outs
cld
pop
push
fcomp
push
out
in
neg
add
fs
movs
cmp
or
pusha
adc
sbb
cmps
fwait
ja
dec
sbb
mov
jne
lods
sub
cdq
fld
pushf
lock
fild
jle
and
lds
dec
adc
scas
test
pop
jns
dec
cmps
(bad)
out
loope
dec
xchg
dec
pop
jne
ret
into
jl
or
test
cmp
xchg
mov
mul
inc
mov
push
lds
mov
idiv
and
cmps
sti
(bad)
repz
(bad)
xchg
bound
and
rol
fmul
cmp
push
pop
scas
dec
test
sbb
loope
or
adc
cmp
lea
jmp
mov
in
lds
pop
mov
(bad)
aam
das
js
mul
leave
fsub
jne
aad
imul
ret
xchg
rol
mov
and
jns
xor
mov
or
jp
ins
and
and
push
ins
push
loop
push
bswap
sub
jbe
xor
add
dec
mov
fwait
adc
stos
(bad)
out
pop
mov
adc
imul
mov
jno
cmp
push
repz
lahf
stos
or
sahf
add
imul
pop
sub
jg
and
and
xor
stos
outs
xchg
inc
and
and
pop
(bad)
mov
fwait
inc
pop
(bad)
cmp
repz
xor
(bad)
ins
mov
ins
push
sbb
mov
popa
pop
xchg
cmps
out
push
add
jp
cdq
repnz
push
sbb
test
sub
dec
xor
cmp
mov
jge
loope
inc
inc
lds
test
mov
xchg
and
les
js
push
mov
add
les
mov
fdiv
loop
inc
scas
mov
pushf
push
xor
xor
or
fcom
add
and
out
sub
loopne
cmc
bnd
mov
popa
push
arpl
jmp
repnz
mov
sub
icebp
aaa
pop
and
inc
add
stc
and
pop
xchg
sub
mov
push
ss
arpl
pop
cwde
push
mov
mov
dec
int
(bad)
sub
in
pushf
pop
pop
cld
xor
paddb
gs
xchg
mov
mov
jbe
je
sbb
loopne
clc
shl
sbb
mov
les
xchg
adc
shr
inc
nop
retf
xor
arpl
arpl
cmp
adc
and
push
xor
add
pop
stos
sub
test
jne
ror
pop
dec
add
cwde
je
dec
cwde
dec
in
daa
test
or
add
bound
test
push
jle
mov
sub
call
out
scas
jmp
ins
or
dec
ss
stc
mov
inc
aas
push
inc
in
and
popa
fld
and
pop
xor
movs
mov
adc
movs
jle
div
aas
jns
pop
push
cmp
retf
in
xchg
mov
mov
pop
jmp
pop
add
leave
or
clc
pop
jns
cwde
fadd
jne
ficom
and
test
sbb
lock
xor
xor
imul
(bad)
mov
call
add
mov
xchg
xchg
xchg
and
jp
xor
shl
fwait
arpl
and
or
fisubr
std
jbe
xchg
xchg
inc
bound
ret
dec
(bad)
es
dec
jmp
aad
cmp
aad
imul
aaa
addr16
test
inc
and
sbb
sub
mov
push
frstor
jmp
bound
sti
pop
xor
push
push
cmp
bound
inc
cmc
aam
cmps
xor
cmp
loopne
jbe
pop
and
iret
xor
je
rdmsr
loopne
shl
mov
add
push
push
test
sbb
dec
sbb
fwait
or
push
jl
fld
pavgb
(bad)
ss
nop
jo
loope
pop
sbb
retf
rol
(bad)
repz
sub
out
mov
dec
dec
loope
lods
xchg
rcl
jo
into
push
cmp
jno
jne
push
mov
adc
cld
test
je
cmp
icebp
shr
jb
jp
xchg
xor
jp
test
sub
(bad)
call
pop
ds
fld
ror
cmps
sbb
push
sub
xlat
ins
faddp
push
gs
mov
pop
movs
rcr
push
out
add
cmp
bound
pop
pop
mov
mov
clc
arpl
int3
push
pop
rcr
and
adc
outs
and
icebp
xor
push
xchg
retf
ret
mov
stos
fld
mov
test
call
pop
jge
add
xor
retf
divps
movs
repz
sahf
mov
push
jecxz
cmp
repnz
in
ror
xchg
fcom
and
adc
mov
cld
adc
push
enter
mov
inc
fidiv
test
jle
fst
xchg
xchg
mov
add
pushf
out
sahf
aad
sbb
neg
xchg
push
(bad)
dec
inc
jg
push
sub
fcomp
lahf
sbb
cmovbe
movs
data16
add
lods
mov
repnz
neg
push
data16
push
loope
and
mov
fild
fisubr
in
mov
(bad)
cs
jno
add
xchg
int3
mov
stos
out
push
mov
jb
mov
or
push
inc
lock
sbb
dec
inc
lea
mov
jne
bound
pop
fidiv
or
inc
pop
push
xchg
ror
or
inc
cmps
out
adc
pop
xchg
retf
cdq
inc
adc
mov
jno
fmulp
jmp
ja
ds
inc
adc
clc
push
sbb
dec
pop
arpl
out
pop
out
sbb
cmp
outs
sbb
(bad)
add
ds
rcr
mov
mov
mov
leave
clc
pop
loop
imul
movs
clc
in
sub
inc
mov
mov
stos
adc
xor
cdq
inc
or
mov
jmp
push
sub
mov
jge
test
mov
call
mov
gs
in
movs
rcl
mov
jno
outs
pop
loop
popa
ins
loop
retf
loopne
cwde
add
add
inc
in
add
mov
movs
jle
push
aaa
fdiv
or
(bad)
mov
jecxz
or
and
movs
mov
aad
pop
test
jecxz
aas
or
cmp
retf
(bad)
adc
adc
mov
rcr
js
es
popa
cmp
cmp
sahf
push
push
dec
jmp
add
and
dec
pop
jp
inc
jmp
jl
pop
cmp
jp
jb
stc
std
xor
xor
js
pop
jecxz
imul
xchg
mov
(bad)
jl
xor
jmp
shl
mov
mov
xlat
jo
jmp
pop
sahf
test
or
scas
inc
loope
add
ret
test
pop
out
add
cmp
mov
popa
es
jmp
loop
add
loopne
sti
hlt
and
call
jg
xor
push
jmp
repz
std
xchg
fcomp
push
int3
adc
cmp
repz
and
jbe
cld
repz
inc
pop
push
mov
cmp
ds
and
dec
fsub
dec
adc
or
adc
cli
inc
adc
jp
xchg
cli
and
(bad)
test
add
int3
push
jbe
and
push
ins
add
push
sbb
jle
mov
xor
cmp
pop
sub
xor
cwde
inc
pop
pop
mov
mov
adc
mov
dec
mov
imul
pop
inc
int3
test
jle
xor
popa
xor
push
test
mov
pop
mov
lds
cmp
test
lods
sar
adc
nop
push
or
mov
sbb
inc
addr16
(bad)
mov
test
call
xor
ds
jnp
daa
mov
call
jae
sbb
test
pop
cmp
out
mov
jp
and
push
cwde
mov
call
sub
sar
es
add
add
mov
leave
dec
mov
cmp
xor
lock
inc
lahf
jmp
aam
test
stos
movs
scas
sti
(bad)
mov
mov
leave
fadd
mov
dec
mov
push
xor
pop
push
aad
fcmovbe
in
mov
sbb
fst
jns
inc
(bad)
cmp
shl
cmp
mov
sti
add
push
cmp
inc
pop
add
jmp
in
nop
inc
xchg
or
ret
cmp
(bad)
and
ss
retf
sub
sub
xchg
out
xchg
and
sbb
jp
adc
shl
ja
ins
inc
pop
out
xlat
mov
sub
mov
sti
jmp
sbb
mov
push
mov
ret
sbb
ror
or
add
xchg
fs
and
push
fstp
jle
pop
or
dec
sub
mov
or
push
pusha
daa
cmp
mov
(bad)
add
mov
cmp
out
mov
jns
rcr
xchg
fistp
xchg
jmp
ja
sbb
mov
dec
scas
or
pop
fstp
stos
jle
fdivr
ror
cli
cmp
ja
mov
xor
in
pop
push
xor
inc
shl
push
mov
xor
and
mov
outs
pushf
clc
jbe
aaa
les
mov
es
dec
in
sar
pop
ds
(bad)
hlt
clc
or
out
mov
call
mov
mov
pop
fsubr
mov
xor
jae
jmp
loope
mov
int
leave
cdq
pop
fs
lods
mov
inc
call
sbb
mov
dec
mov
jmp
leave
cmp
xchg
dec
mov
cmp
(bad)
mov
aas
dec
push
mov
lods
lea
not
dec
les
xchg
cmp
test
xor
xchg
jmp
and
(bad)
sar
popa
sbb
xchg
mov
scas
pop
fmul
mov
aas
rol
(bad)
loopne
cli
lods
cli
mov
movs
mov
(bad)
and
ret
mov
dec
mov
sbb
out
iret
sti
dec
call
ret
push
adc
cmc
or
sub
test
retf
mov
jmp
dec
shl
lahf
(bad)
daa
push
movs
xchg
pusha
loopne
out
scas
sbb
pop
mov
arpl
gs
dec
loope
xor
mov
push
pop
lods
lods
mov
pop
lods
retf
inc
dec
js
retf
jge
mov
sbb
xchg
repnz
js
and
enter
imul
(bad)
or
pop
rcl
fdivr
(bad)
bound
rol
xchg
aam
dec
pop
mov
enter
or
sbb
push
(bad)
imul
pusha
not
or
mov
inc
mov
add
jo
lock
(bad)
push
mov
push
add
enter
call
inc
scas
add
and
and
add
sbb
cmps
mov
ds
dec
sub
jmp
popf
fnstsw
mov
clc
in
cmp
retf
dec
add
mov
mov
call
out
jmp
ret
cmp
fcom
pop
sbb
loop
int
mov
dec
das
test
sti
pusha
push
imul
js
adc
mov
gs
cmp
mov
(bad)
popf
xchg
or
addr16
ins
movs
xor
add
dec
xlat
cmp
push
and
inc
sbb
and
pop
cmp
inc
dec
jbe
mov
sub
jmp
fiadd
iret
fs
push
mov
loop
fdiv
out
mov
and
ins
xchg
mov
mov
in
in
call
ds
retf
(bad)
imul
dec
pop
lock
cmp
pop
retf
repz
and
add
ret
or
clc
je
push
fldenv
call
mov
jg
mov
xlat
pop
push
jne
outs
enter
mov
out
hlt
sub
mov
in
shl
test
retf
jb
loop
jbe
mov
or
pop
sti
mov
jp
outs
sbb
mov
and
es
pop
stos
dec
pushf
dec
fmul
and
xchg
bound
out
mov
adc
push
(bad)
jle
jp
or
mov
dec
rcr
push
jno
(bad)
pop
aaa
push
adc
jns
or
js
shl
lds
jmp
icebp
jp
inc
inc
idiv
add
data16
push
test
sbb
mov
or
mov
adc
stos
int3
push
mul
push
shr
and
cdq
cmp
add
or
cli
sub
popa
call
ss
sub
(bad)
jae
add
repz
std
pop
idiv
lods
mov
pop
(bad)
cmp
fiadd
dec
imul
loopne
jmp
sar
es
xor
jle
cli
stc
dec
retf
dec
inc
push
fbstp
(bad)
jge
sbb
sti
call
jmp
test
mov
mov
inc
inc
push
dec
rcl
in
lods
pushf
fxrstor
xchg
cmp
push
shl
push
in
js
cmp
jnp
clc
xchg
pop
ficomp
adc
into
stc
pop
sbb
lock
sub
jp
mov
mov
das
popw
add
add
cdq
out
sbb
sbb
pop
daa
push
xor
out
das
mov
stc
jbe
xchg
std
mov
fidiv
in
or
imul
call
les
add
mov
stos
adc
adc
adc
mov
repz
cmp
or
sub
scas
xor
cld
bound
loope
sbb
or
xor
mov
and
and
imul
pop
adc
lahf
adc
cmp
add
cmovbe
adc
(bad)
cmc
cli
gs
xchg
ret
maskmovq
bound
icebp
test
test
rcr
xchg
cmps
fs
or
pop
jle
push
pop
sar
mov
sti
ins
pop
ret
sub
ret
icebp
je
cmps
mov
mov
(bad)
pop
xor
jo
jo
enter
xlat
mov
in
lock
(bad)
sbb
mov
mov
out
in
xor
test
ja
bound
test
pop
xor
leave
aas
fnstcw
dec
xor
iret
adc
push
mov
pop
call
popa
pop
adc
inc
cmp
sti
push
xchg
xor
ficomp
push
aam
dec
aad
jae
mov
jne
rcl
sub
fcomp
fmul
add
sar
das
out
sar
stos
cwde
push
sbb
fwait
div
xchg
popa
outs
dec
imul
push
mov
jp
pusha
push
mov
and
rcl
fs
repnz
test
dec
cmc
call
pop
leave
jecxz
sub
xor
xchg
mov
adc
cmp
pop
or
enter
out
scas
and
ror
mov
ss
popa
addr16
es
inc
mov
sahf
xchg
mov
shl
mov
add
data16
jo
sbb
or
pusha
inc
ret
jo
cmp
mov
pop
mov
jg
js
pop
adc
invd
cmp
jecxz
xchg
jg
jmp
clc
inc
lahf
xchg
adc
xor
ds
cmps
sbb
inc
push
fnstsw
or
or
cmp
ds
push
pop
fisttp
xor
iret
mov
dec
push
mov
xor
call
call
loopne
jbe
mov
lea
in
pmullw
mov
or
and
pop
sub
xchg
adc
fbld
jecxz
daa
cmp
jb
adc
repz
adc
or
cs
pop
jmp
adc
pop
cmp
mov
add
sbb
push
imul
inc
xchg
loope
xlat
xchg
dec
inc
cmp
mov
(bad)
mov
push
cmp
lods
add
(bad)
cmp
nop
and
lahf
inc
icebp
sbb
and
stos
cli
in
fstp
xor
sbb
xor
add
xor
outs
mov
ret
movs
lods
mov
xor
lea
movs
sub
adc
dec
dec
sbb
loopne
out
es
mov
push
and
sub
sbb
jle
mov
into
mov
jnp
fst
mov
out
div
and
add
xchg
mov
jb
xor
add
jbe
add
(bad)
xchg
scas
test
ss
mov
leave
call
sbb
and
sbb
je
xchg
ret
mov
test
or
gs
cmp
ror
mov
call
out
inc
add
imul
sub
or
cmp
push
xchg
xchg
leave
test
xchg
bnd
sahf
xchg
enter
arpl
(bad)
pusha
mov
movs
outs
xor
mov
push
sub
stc
call
xlat
aad
cmps
enter
into
dec
stos
lea
add
repz
push
mov
xchg
or
inc
xor
ja
mov
xor
test
and
int
mov
xlat
pop
push
push
iret
mov
xor
in
adc
inc
xchg
push
xchg
push
adc
push
cdq
repnz
mov
jb
adc
mov
pop
mov
mov
inc
scas
fdiv
jnp
ss
and
int
(bad)
lds
test
movs
pop
dec
repnz
xor
out
mov
aas
mov
int3
test
data16
xor
sub
sub
and
loope
test
mov
loop
loopne
jb
jmp
aam
push
in
frstor
mov
(bad)
data16
sbb
(bad)
or
cmp
cmp
pop
mov
mov
test
and
test
cdq
shl
fadd
sbb
and
mov
loopne
push
xchg
add
mov
jge
push
mov
mov
icebp
enter
mov
sbb
hlt
inc
cwde
shl
retf
or
in
mov
cmp
push
mov
mov
outs
movs
pop
xor
cli
test
scas
cmp
xor
addr16
bound
pop
pop
sub
retf
add
adc
cmps
dec
sbb
and
fnsave
xchg
pop
loope
call
pop
in
xor
out
fsub
fyl2x
push
xchg
rcl
(bad)
loopne
dec
adc
loopne
dec
cmc
jns
sub
xor
sbb
mov
scas
dec
cli
fcom
in
int
in
inc
jnp
cmp
jno
ins
sub
adc
leave
inc
mov
xchg
inc
hlt
xchg
sti
mov
jmp
int
fist
sbb
xchg
leave
test
cdq
ror
sbb
in
mov
aas
dec
lea
(bad)
shl
movs
std
mov
test
adc
(bad)
or
or
popf
ja
cmp
sbb
push
add
test
sar
je
scas
and
jg
jecxz
jne
dec
jno
nop
int
cs
sbb
dec
jnp
cmp
or
fisttp
aas
loope
jmp
jle
add
mov
mov
inc
outs
gs
add
cwde
lock
into
jg
out
pop
jae
mul
sub
cld
pop
push
sub
push
div
lods
inc
aam
pop
inc
mov
addr16
jmp
out
xchg
rol
pusha
xchg
iret
cmp
aaa
vmovlps
enter
imul
in
mov
(bad)
mov
xchg
pop
add
aaa
add
cmps
push
retf
push
fsub
adc
jo
add
mov
mov
and
(bad)
pop
fmul
sti
dec
dec
pop
add
adc
ficomp
mov
push
push
js
or
fmul
adc
push
fld
cmp
pop
or
cmp
push
or
(bad)
adc
mov
push
add
jg
retf
popa
dec
ss
cmp
jbe
icebp
adc
in
jl
inc
and
sbb
rcr
ds
mov
cmp
mov
sub
icebp
cmp
lock
lods
test
or
jno
rcl
sub
mov
clc
xchg
push
adc
and
or
push
and
cdq
dec
aad
sahf
rcr
enter
push
outs
and
xor
xor
int3
fbld
popa
mov
addr16
inc
add
in
pop
inc
and
xchg
lahf
jmp
push
push
stc
stos
inc
int
ins
in
adc
add
adc
pop
jmp
xor
inc
cmp
or
or
fidivr
call
(bad)
fnstsw
shl
push
mov
loop
ins
cmp
shr
mov
(bad)
pop
xor
ins
arpl
pop
(bad)
pushf
xchg
mov
scas
sbb
push
inc
pop
mov
cli
cmc
outs
int
mov
sahf
fldenv
fucomi
dec
aad
sbb
lods
outs
movs
js
mov
jmp
sbb
pop
and
add
sub
sbb
rcl
lock
dec
lds
aas
jo
sbb
xchg
dec
into
movs
mov
jo
mov
pop
jl
cmp
add
test
imul
mov
ins
nop
sbb
stos
xchg
int
fs
mov
xor
jp
mov
in
cdq
addr16
or
mov
inc
lods
call
pop
int3
jg
mov
adc
int
movs
add
xchg
cdq
mov
and
mov
add
sbb
lds
jg
fisttp
push
test
cdq
ja
inc
adc
mov
outs
inc
push
repz
cmps
jo
pop
arpl
loop
out
xchg
jbe
xor
cli
test
mov
(bad)
cmp
pop
call
jo
jecxz
xor
pop
inc
push
and
dec
data16
jnp
arpl
sbb
jb
fisttp
and
cli
rol
adc
sub
push
test
cmp
ret
add
add
rol
test
ss
add
enter
ds
jp
test
adc
adc
mov
sbb
xor
adc
dec
sahf
xchg
lock
dec
push
mov
adc
in
pop
mov
sbb
inc
adc
out
mov
sbb
je
xlat
jo
sbb
pop
shr
xchg
lds
movs
push
jnp
sub
add
xchg
hlt
xchg
sub
and
adc
cli
icebp
loop
inc
into
cmp
sti
inc
push
add
mov
mov
popf
out
movs
stc
mov
and
pop
lods
mov
cs
repnz
xor
lahf
je
fiadd
adc
imul
cmp
mov
fnstcw
pop
add
stc
loope
sub
mov
pop
(bad)
test
lock
xor
lea
push
mov
lock
sub
je
es
cld
retf
or
in
in
popf
adc
enter
jne
lods
add
rcr
and
int
dec
or
xor
cmp
cmp
xchg
xor
pop
sub
test
push
fmul
daa
adc
(bad)
sub
and
aas
test
push
shl
jb
test
rol
jmp
aam
pop
ficom
fldenv
lea
outs
jnp
push
sub
and
in
and
mov
jmp
in
dec
pop
cmp
ja
in
sbb
clc
adc
cmps
or
fld
dec
retf
and
aas
xlat
cwde
lods
mov
test
repnz
cmp
(bad)
xor
stos
jbe
push
pushf
xor
cmp
lods
dec
jne
sbb
sub
sbb
sbb
add
dec
fdivr
lods
ss
mov
mov
dec
stos
(bad)
ror
cmps
mov
ss
outs
daa
cdq
and
leave
jo
gs
shl
mov
and
ret
neg
jmp
fild
xorps
mov
or
jmp
jae
ror
xor
push
into
cmps
add
loopne
or
in
xchg
sub
mov
nop
and
shl
mov
es
jp
push
push
mov
mov
push
scas
dec
stos
ja
in
push
mov
out
fwait
jg
sub
push
pop
push
stos
mov
sbb
shl
enter
aaa
xchg
push
movs
not
call
jge
lock
push
icebp
bound
mov
stos
scas
mov
dec
clc
xchg
std
dec
push
mov
and
pop
and
add
ror
int3
xchg
xlat
(bad)
(bad)
mov
sbb
cmp
test
fistp
xchg
out
(bad)
cmp
pusha
inc
mov
outs
mov
mov
arpl
test
mov
inc
imul
pop
and
fist
sub
imul
rol
mov
into
dec
add
add
mov
loope
inc
mov
mov
inc
add
and
ret
and
jle
xchg
sub
sti
out
push
add
ret
js
dec
push
mov
in
in
inc
add
xlat
ret
test
jbe
data16
pop
sahf
or
sahf
pop
mov
ret
cmp
int
bound
adc
jne
shr
jmp
lds
cmp
inc
pusha
(bad)
repnz
fs
cmp
xor
imul
pop
xor
inc
js
mov
inc
jmp
and
test
push
cmps
test
(bad)
rol
retf
cmp
sti
pop
inc
dec
rol
test
sub
mov
jl
mul
call
sbb
outs
imul
js
cmp
bound
push
pop
sbb
dec
and
lods
(bad)
xor
or
pop
mov
cmp
xor
enter
jae
pop
out
mov
sbb
mov
movs
and
outs
aam
xchg
cmp
popf
ins
mov
push
mov
sbb
ins
sbb
leave
jle
lahf
popa
or
lods
(bad)
or
push
mov
shl
sub
add
mov
xchg
fwait
inc
lock
test
pop
cmp
in
and
loop
mov
push
push
aad
or
ja
(bad)
jmp
pop
inc
xchg
push
pushf
xchg
repz
movs
int
xchg
jo
jecxz
or
mov
push
outs
jb
int
xchg
sbb
jmp
cmp
push
sbb
pop
mov
out
daa
adc
xchg
add
int
stc
mov
push
jo
mov
push
pop
inc
mov
fadd
push
lods
xor
shr
out
cwde
ficomp
mov
adc
enter
push
fdivr
mov
movs
mov
out
pop
dec
or
mov
jae
push
push
fcom
mov
mov
(bad)
call
add
movs
std
test
mov
loope
push
popa
gs
cmp
pop
push
icebp
les
enter
fsub
mov
mov
inc
loop
addr16
xor
and
fld
das
rcr
lods
lods
mov
leave
add
push
movs
scas
test
or
add
test
push
add
mov
ret
adc
scas
loopne
jo
jno
ds
mov
mov
sub
jg
lahf
test
out
ret
xchg
sbb
out
(bad)
(bad)
mov
imul
sbb
(bad)
inc
sub
xor
xchg
sub
add
inc
xlat
fnsave
andps
ret
xchg
or
imul
aaa
xchg
adc
mov
clc
add
sub
add
movs
cmp
mov
int3
retf
je
mov
inc
fist
inc
jb
sbb
fsub
jge
jl
cmps
icebp
inc
shl
and
cmps
jne
popf
pop
or
mov
sub
dec
cld
pop
pop
or
lea
test
jmp
imul
mov
into
push
xchg
xor
aam
jl
push
xchg
dec
xor
inc
or
popf
in
xor
xor
(bad)
daa
pushf
mov
repnz
(bad)
and
dec
je
mov
jecxz
lods
add
cmp
aam
es
sub
movs
push
int3
in
adc
hlt
push
fisub
or
int3
call
adc
xor
cmc
push
shl
mov
and
stos
xor
je
aaa
iret
push
mov
out
dec
inc
ja
cdq
add
jae
les
mov
std
test
outs
gs
jae
lods
jne
mov
test
aad
inc
inc
call
add
pop
jnp
fild
push
mov
sbb
dec
movs
dec
fsub
cli
leave
ret
dec
pop
(bad)
jne
sbb
stos
pop
jp
into
enter
mov
or
cs
div
xor
jl
adc
mov
(bad)
sub
sbb
xor
iret
aas
and
mov
add
loop
xor
mov
push
adc
scas
push
div
fsubr
mov
out
popf
lock
mov
jmp
pop
and
add
jnp
std
inc
xchg
jmp
xchg
cwde
out
shr
fild
pop
js
xchg
add
add
mov
hlt
sub
pushf
rol
mov
lea
retf
jge
fwait
sbb
cmp
shr
popf
and
add
and
ret
inc
mov
pop
out
dec
mov
(bad)
ins
adc
sub
stos
mov
xchg
ror
cmps
xchg
pop
js
add
mov
scas
add
and
sub
aaa
jns
fisubr
loope
and
jl
std
xchg
mov
aas
or
movs
rol
sub
in
push
or
cmp
std
sahf
dec
push
aad
outs
pusha
fstp
jp
sbb
ja
in
or
rcl
push
mov
sub
xchg
(bad)
sti
sub
cs
mov
inc
pmaddwd
das
lock
jno
(bad)
jno
into
loopne
mov
clc
dec
cs
inc
repz
and
faddp
les
adc
jbe
or
sbb
jge
ret
add
push
add
dec
or
(bad)
popa
fist
cmp
mov
lds
mov
jmp
push
sub
movs
(bad)
pop
mov
or
xor
and
ret
jmp
and
mov
cld
sbb
pop
ds
jg
inc
out
xchg
sub
dec
inc
mov
cwde
adc
(bad)
push
jmp
retf
xor
mov
inc
sahf
ret
jg
(bad)
jnp
loopne
pop
jae
aad
stos
aad
retf
imul
inc
test
jmp
imul
retf
movs
mov
jo
push
dec
std
push
pop
xor
call
dec
and
pop
pusha
jne
stos
sub
hlt
xor
push
adc
lds
enter
gs
scas
mov
xchg
lds
cmp
mov
fs
nop
mov
test
pop
pushf
(bad)
es
ficom
shl
add
xor
pop
push
xchg
push
mov
ss
clc
(bad)
mov
je
mov
pop
jbe
test
hlt
das
and
int3
dec
push
cmc
sbb
xchg
sbb
xor
loop
loop
push
xchg
(bad)
movs
into
and
add
daa
out
mov
sub
push
add
jmp
add
adc
push
cmp
adc
cmp
repz
pop
and
(bad)
jle
cli
cmp
stos
sar
inc
and
inc
mov
outs
stos
retf
and
adc
pop
cdq
sbb
sbb
xchg
pop
pop
jmp
mov
and
and
mov
mov
repnz
adc
daa
sub
(bad)
mov
dec
push
inc
dec
lea
imul
inc
(bad)
sbb
sahf
fist
js
popa
gs
and
sbb
push
out
popa
ss
hlt
daa
mov
(bad)
jno
cdq
push
pop
inc
xor
enter
add
jp
mov
int
and
xchg
pop
stos
ins
fsubr
ins
or
cmps
inc
fwait
imul
repz
cmc
pop
xor
pop
push
mov
jge
inc
dec
test
vsqrtpd
sbb
mov
std
loop
add
fucom
sbb
(bad)
imul
or
gs
lahf
sub
jb
mov
dec
aam
fstp
mov
sbb
repnz
sbb
jl
jnp
scas
(bad)
cmps
iret
icebp
sbb
push
sub
cdq
jg
rcr
scas
pop
pop
sub
sub
jbe
mul
sti
bswap
rcl
cmp
std
pop
xor
(bad)
dec
add
mov
jecxz
dec
in
sub
fwait
inc
jns
xchg
adc
mov
repz
cwde
and
adc
sbb
cmps
in
cmp
mov
inc
mov
add
stos
stos
sub
mov
xchg
xor
dec
or
test
aas
mov
sahf
popa
fcomp
push
aas
adc
inc
shl
mov
or
push
mov
sbb
pmaxsw
daa
xchg
es
mov
mov
or
fadd
or
movs
mov
fdiv
in
fnsave
sbb
in
lea
pop
push
leave
mov
push
jecxz
dec
sbb
in
sbb
(bad)
push
popa
cli
sbb
loope
xchg
dec
lock
fidivr
test
jg
pushf
inc
mov
mov
mov
lods
mov
test
pop
ss
dec
cmps
pop
addr16
or
clc
jmp
inc
xor
ja
pushf
mov
push
fisubr
adc
xlat
fsub
lds
push
dec
adc
mul
push
xor
adc
inc
mov
clc
sar
mov
frstor
(bad)
and
dec
cmps
lds
xchg
adc
ins
pop
ins
mov
dec
repz
sbb
fld
repnz
sbb
inc
popa
jecxz
and
scas
adc
mov
cmc
imul
xor
outs
jecxz
adc
fwait
sub
bound
push
dec
adc
adc
xchg
inc
mov
mov
lods
je
cmp
sub
sbb
int3
outs
or
jnp
shld
jge
mov
dec
(bad)
or
xor
cmp
daa
cmc
mov
arpl
in
cmp
xchg
cmp
add
leave
retf
and
adc
int
stos
sub
cmc
int3
arpl
scas
xchg
inc
add
dec
push
or
out
mov
lahf
and
sbb
test
stos
mov
mov
mov
ror
mov
mov
(bad)
inc
cmp
retf
out
mov
lods
fsub
repnz
and
cmp
scas
jg
mov
pop
cdq
push
cli
loop
out
sbb
mov
imul
enter
into
and
fucomp
mov
into
add
into
lahf
mov
nop
out
pop
loope
sub
jb
aad
mov
leave
stos
sub
xor
hlt
and
jne
mov
jmp
sti
cdq
xor
jp
inc
stc
push
sar
jbe
stc
mov
push
sbb
loope
push
std
inc
sub
stos
xchg
pop
cmps
or
fnstenv
adc
into
lea
bound
cmp
in
out
lahf
dec
(bad)
lods
(bad)
push
add
outs
pop
lahf
ja
xchg
mov
jno
cmp
js
sahf
les
jle
push
sub
mov
xchg
test
ret
clc
inc
adc
xor
jno
movs
in
imul
das
pop
lock
out
iret
stos
cmp
xchg
or
cmps
adc
cmp
bound
ror
imul
jmp
in
daa
mov
jge
std
sbb
out
xchg
xchg
inc
and
push
jns
(bad)
lds
push
call
mov
stos
inc
xor
pop
jl
shr
pushf
ds
mov
pop
mov
adc
adc
mov
imul
test
ja
and
push
dec
adc
cmp
cmp
push
ds
sbb
cs
mov
jo
xor
mov
cmp
ror
xchg
arpl
lahf
push
sbb
shr
inc
mov
xchg
xor
movs
pop
push
mov
xchg
jmp
cmp
and
sub
lock
sbb
les
mov
xchg
xchg
add
pop
cmp
cmp
cmps
jns
ja
and
stos
loop
add
(bad)
mov
jns
adc
mov
jno
and
fcom
inc
cld
xchg
mov
or
repz
arpl
rcl
outs
mov
add
pop
data16
dec
mov
jne
pusha
loope
leave
cmps
pop
pushf
repz
sub
mov
xor
push
and
(bad)
push
fdivr
mov
xchg
xchg
imul
rcr
inc
or
std
leave
dec
repz
mov
pushf
cmp
and
pop
fbstp
xchg
xchg
xchg
popa
jbe
popf
stc
out
mov
dec
stos
sub
xor
daa
inc
fwait
jge
fcomip
pop
inc
test
popf
popa
inc
mov
test
xchg
retf
shl
aaa
xchg
mov
aad
sar
clc
mov
fldenv
sbb
sub
shl
pop
adc
push
adc
or
adc
jnp
jmp
push
or
shr
jecxz
pop
rcl
sub
dec
sbb
mov
lahf
sti
sbb
xchg
sub
in
add
jbe
add
sub
das
and
xor
hlt
inc
mov
std
mov
in
push
cmc
daa
mov
test
std
mov
daa
mov
or
pop
push
fsubr
adc
data16
(bad)
pushf
shl
mov
test
mov
popa
jl
repnz
pop
icebp
dec
pop
xor
jp
xchg
cmp
out
add
xor
cmp
mov
lock
push
cli
or
push
(bad)
push
mov
pop
add
inc
pushf
int
ror
sub
fist
jmp
movs
xchg
xchg
dec
ins
jle
dec
xchg
jnp
addr16
pop
idiv
xor
outs
pusha
mov
aaa
pop
dec
in
mov
mov
xor
jle
into
add
retf
sbb
in
mov
ror
mov
xor
push
dec
mov
mov
pop
mov
rcl
outs
xchg
(bad)
jg
cmps
btc
test
cmp
(bad)
out
or
xchg
sbb
jbe
and
dec
mov
out
xor
add
push
jg
sbb
ret
jge
std
cmp
pushf
xchg
adc
sub
jg
test
mov
pop
push
retf
and
mov
mov
adc
mov
adc
xchg
fwait
inc
hlt
lea
or
int3
dec
fld
icebp
aad
loop
push
cmp
dec
xor
test
ins
jecxz
aaa
ret
push
aad
mov
xacquire
test
sbb
imul
cmp
or
shl
mov
daa
pop
mov
and
es
xchg
xor
test
sbb
sub
dec
shl
sub
clc
retf
iret
das
je
ins
fst
mov
sbb
je
mov
jno
adc
sub
xchg
cwde
mov
sub
out
sub
jp
mov
adc
sub
xor
mov
push
mov
sub
xor
iret
js
xchg
jne
jb
loopne
(bad)
das
dec
jp
movs
xchg
mov
mov
add
sbb
in
mov
neg
and
cmp
out
or
pop
sub
enter
lea
pop
jno
pop
repz
dec
(bad)
ins
push
aas
jg
and
sub
movs
jmp
test
icebp
jmp
(bad)
fsub
dec
mov
and
loop
mov
pop
fsubr
xor
fucomip
arpl
es
repnz
pop
cmp
ins
xchg
xor
mov
hlt
sub
xchg
inc
ret
add
mov
sub
ret
clc
(bad)
retf
scas
je
xor
pop
movs
mov
rcr
and
sub
xor
and
dec
popa
xchg
xchg
movs
ins
pop
push
pop
cs
add
mov
and
jne
xor
les
sub
sub
jge
daa
xor
leave
fcomp
stos
hlt
ins
mov
outs
xlat
pushf
ins
cmps
jmp
xor
add
mov
cmp
enter
ret
sub
dec
lock
sub
xor
call
push
cmps
fwait
or
icebp
cwde
mul
in
sar
mov
dec
data16
sbb
ss
mov
sbb
into
fistp
and
mov
mov
mov
push
icebp
retf
aad
dec
xchg
repz
pop
dec
out
sub
add
sahf
xchg
dec
push
xor
mov
neg
push
neg
fwait
sbb
int3
rcr
xchg
lods
in
cs
(bad)
xchg
mov
shld
mov
fdivp
push
(bad)
cmps
sbb
mov
sbb
jo
rcr
imul
dec
cmp
mov
fidivr
imul
daa
fs
(bad)
sbb
(bad)
pop
es
mov
xlat
movs
or
jmp
inc
es
shr
js
mov
(bad)
push
inc
mov
sub
scas
cdq
in
inc
cli
jmp
pop
push
test
lahf
mov
mov
mov
popf
add
ins
mov
jmp
stos
repnz
setp
loopne
jmp
aad
in
mov
push
aas
jne
lahf
and
jmp
jg
jb
xlat
mov
aad
rcr
sbb
in
mov
push
xor
loope
cmps
dec
hlt
nop
and
dec
ficom
jne
cmp
out
and
inc
xchg
add
retf
cmp
leave
adc
mov
les
(bad)
hlt
mov
mov
sbb
inc
cld
enter
lea
cmp
dec
xchg
out
mov
or
xor
sub
push
retf
jge
in
clc
fst
xchg
pusha
adc
(bad)
movs
ja
das
shr
push
inc
data16
pop
cli
push
mov
add
inc
jle
mov
adc
xchg
push
in
(bad)
mov
cld
movs
sub
aad
dec
ja
jmp
fiadd
xor
loop
cli
xchg
xchg
sub
scas
aas
and
fwait
(bad)
sbb
rcl
fidivr
xor
jecxz
jmp
push
iret
sbb
jecxz
mov
arpl
fwait
repz
into
mov
push
pop
sub
sar
aad
fisub
add
mov
fadd
pop
mov
leave
adc
sbb
sbb
popf
loopne
fmul
inc
or
test
addr16
lahf
fmul
mov
jo
(bad)
pusha
push
shr
push
cmp
icebp
sub
mov
outs
stos
cmp
mov
cmps
mov
add
and
neg
inc
adc
xor
inc
call
mov
mov
lods
retf
(bad)
jle
pop
(bad)
pop
in
pushf
inc
jo
mov
ins
dec
in
mov
shl
cmps
mov
clc
(bad)
add
inc
lods
int3
sub
or
ret
inc
idiv
hlt
or
xchg
push
leave
push
dec
imul
cmc
jns
xchg
dec
jmp
xor
sti
inc
cmc
xlat
pusha
outs
loope
mov
xor
inc
stos
fist
push
pop
mov
mov
fmul
das
sub
and
sbb
inc
pop
call
fadd
cmp
ret
mov
outs
lods
aaa
push
jmp
sbb
nop
imul
fcom
pop
sub
push
xor
pop
repnz
pop
neg
sbb
push
inc
xchg
inc
mov
popa
pop
test
mov
(bad)
ins
fild
push
pop
xchg
add
setnp
cli
pop
adc
fs
xlat
and
out
aaa
sbb
pop
pop
mov
bound
xor
fist
stos
push
sub
push
or
cmp
mov
dec
xchg
push
je
push
jnp
ins
add
pop
cmc
cli
js
in
lock
(bad)
aad
inc
popa
and
inc
cmps
push
call
rcr
mov
test
xchg
jle
xchg
(bad)
jmp
jmp
push
fsubr
push
ror
fcomip
out
or
out
ins
pop
clc
out
lea
cmc
leave
fimul
adc
pop
inc
or
stos
bound
push
fs
push
dec
push
push
jb
sbb
cld
outs
mov
inc
lds
inc
xchg
jns
std
nop
push
dec
or
mov
pop
dec
pop
jbe
int3
push
and
jge
outs
dec
fimul
push
or
mov
cmps
es
sbb
dec
inc
minps
jecxz
clc
ja
dec
or
inc
sub
cs
or
setge
push
xor
pushf
repnz
dec
dec
push
and
hlt
add
jg
and
mov
pop
cmp
vmaxpd
(bad)
jmp
(bad)
pushf
xor
push
mov
in
xchg
dec
xchg
add
sub
ds
pusha
xchg
pop
jmp
or
out
addr16
js
add
cmp
aaa
test
mov
inc
(bad)
push
sbb
mov
loopne
mov
mov
movs
les
pop
xor
mov
dec
mov
push
cmps
mov
jno
inc
cmps
push
sbb
mov
fisttp
cmc
xor
sti
call
lds
shr
pop
sbb
xchg
push
and
dec
aad
daa
imul
(bad)
mov
jp
cmp
sar
adc
sbb
lahf
ret
dec
dec
push
mov
hlt
dec
stc
pop
mov
mov
mov
mov
inc
inc
ror
fsubr
sti
scas
push
jb
mov
pop
mov
scas
popf
shl
jp
ds
fdivr
cmp
shl
jp
fst
xchg
shr
ret
mov
pop
addr16
push
data16
mov
sbb
add
and
mov
rcr
jle
call
(bad)
pop
inc
repz
pop
ins
jmp
mov
dec
lods
in
cmp
dec
xchg
inc
mov
imul
rcl
mov
scas
cmps
adc
data16
popa
int3
enter
fimul
pop
mov
xchg
xchg
ja
mov
xchg
jb
xor
mov
mov
mov
xchg
sbb
mov
sbb
bound
les
or
imul
(bad)
rcr
xor
pop
sbb
adc
mov
push
jbe
stc
pusha
push
test
outs
pop
aad
loope
outs
xor
lds
call
jecxz
sub
xlat
setle
test
fwait
cmp
fldcw
pop
(bad)
ds
adc
aas
sub
pop
in
fs
call
jg
cs
out
mov
fst
or
xchg
cmp
pop
out
les
pop
imul
cmps
cwde
in
or
jl
in
cs
pop
call
push
das
lock
xchg
addr16
in
into
(bad)
mov
add
mov
pusha
sub
lods
and
stos
mov
cdq
enter
push
fldcw
push
cld
xor
push
test
dec
xor
scas
and
sar
lea
ds
je
jnp
push
scas
shl
push
xor
sub
pop
aam
movs
mov
mov
mov
test
xor
sub
scas
nop
or
sahf
adc
fdiv
(bad)
push
iret
and
les
cmp
es
retf
jae
loopne
fs
call
mov
inc
dec
js
mov
into
and
ficom
jle
jmp
mov
imul
jae
adc
and
test
ja
or
push
fwait
(bad)
ret
inc
pop
stos
cmp
sbb
mov
cld
cmc
or
mov
add
or
test
dec
repz
push
xchg
cmp
popa
mov
jge
push
in
dec
ds
mov
xchg
cmp
daa
aam
xlat
repnz
pop
pop
pop
sahf
pop
stos
movs
imul
mov
popf
cmp
shl
fnstsw
jg
int3
sbb
ins
pop
pop
bound
push
loope
mov
nop
fcom
jg
clc
pop
jae
popa
retf
adc
in
in
cmc
fdiv
add
jle
retf
fild
cmps
(bad)
lds
mov
imul
push
mov
sti
clc
mov
adc
int
test
push
jl
sbb
and
aaa
inc
lods
sar
cmp
rcl
push
in
mov
out
jns
sbb
push
xlat
imul
or
hlt
push
(bad)
cdq
jmp
and
inc
sub
ds
jns
cwde
imul
(bad)
and
rcr
and
xor
out
in
mov
loop
jno
daa
das
in
xor
inc
frndint
and
and
shl
outs
cli
iret
and
dec
jle
mov
retf
aam
hlt
icebp
push
jbe
out
xchg
or
dec
mov
xor
jge
popf
data16
inc
add
cmc
sahf
in
push
stos
and
(bad)
mov
pop
shl
inc
xchg
ret
mov
stos
les
aam
mov
pop
or
int3
test
adc
ret
cmp
aas
mov
push
ins
or
push
loopne
cmc
cmp
int3
mov
ins
retf
mov
sbb
mov
mov
inc
leave
adc
test
retf
mov
mov
in
mov
and
fstp
repnz
test
jmp
lea
enter
push
pop
shl
lds
mov
add
loope
rcl
jmp
cmp
cmps
pop
mov
pop
neg
cli
pusha
inc
xchg
pop
(bad)
not
add
cmp
mov
mov
scas
jbe
xchg
jp
outs
xchg
mov
test
in
jae
jle
sahf
in
cmp
pop
imul
cmp
aad
sub
(bad)
mov
sub
aad
leave
add
xchg
mov
dec
(bad)
sbb
jecxz
out
jmp
pop
push
push
dec
xchg
fwait
xor
add
mov
cmp
(bad)
pop
xor
cmp
cmp
js
out
push
or
(bad)
dec
mov
cmp
mov
dec
mov
iret
mov
aam
mov
mov
cmps
or
mov
test
adc
repnz
jl
mov
pusha
lods
stos
sti
add
cli
into
arpl
sbb
jnp
enter
mov
into
fist
jbe
sti
pop
cmp
mov
sbb
jmp
aas
inc
mov
test
jns
ret
push
ret
mov
jmp
mov
jb
jb
push
sub
xchg
or
mov
ret
pop
pop
mov
cli
aaa
mov
lods
ret
mov
(bad)
jns
lock
mov
ja
xchg
loop
add
adc
jno
nop
sar
add
imul
in
fcmovne
std
adc
movs
(bad)
and
sub
push
adc
xchg
xor
fadd
pop
cmps
in
and
ret
adc
mov
movs
push
push
dec
fidiv
(bad)
punpckhbw
mov
ins
dec
mov
dec
push
retf
mov
sti
push
xlat
out
inc
bound
dec
adc
leave
lock
inc
loopne
and
pop
test
push
inc
dec
xchg
(bad)
mov
cs
or
mov
add
xor
clc
cmp
lahf
int3
enter
fistp
stos
jge
rcl
push
push
lds
push
rcr
jo
mov
dec
pop
sub
mov
add
test
dec
sbb
ret
xor
jmp
push
std
hlt
cwde
sqrtps
mul
sti
aas
pop
shr
retf
pop
sbb
fisttp
xlat
push
jp
jne
mov
test
rcl
rol
cmp
xor
pop
fsubr
xchg
add
out
out
cmp
cmp
jl
inc
je
shl
jmp
pop
and
test
aaa
sub
out
out
(bad)
push
stos
inc
pop
jl
aaa
dec
mov
mov
int
dec
and
ds
pop
sbb
(bad)
jns
inc
jbe
pop
jnp
hlt
cmp
push
push
mov
cld
fsubrp
jmp
push
mov
pop
ins
xor
sbb
mov
in
push
in
push
dec
inc
sub
mov
popa
data16
hlt
cmp
lahf
adc
pop
stos
cmps
sbb
jl
pop
pop
mov
mov
pop
(bad)
sub
and
cmp
mov
loop
jbe
stos
mov
push
push
jno
pop
out
jnp
sub
and
outs
sub
leave
lea
(bad)
daa
inc
lods
jae
inc
push
jmp
mov
mov
mov
jmp
pop
and
or
push
lock
std
stos
movs
daa
and
jb
mov
inc
add
rcr
outs
mov
mov
arpl
inc
jmp
and
(bad)
out
sub
les
push
mov
sbb
scas
or
mov
(bad)
shl
jge
test
xor
(bad)
ror
dec
aad
sbb
xchg
aas
call
inc
aaa
scas
enter
mov
lock
pop
xchg
jb
ja
add
sbb
xor
lahf
scas
sub
cmp
xor
sub
inc
lods
mov
xor
xlat
(bad)
xor
sub
fstp
jge
sbb
int
ficomp
sar
add
shl
push
repnz
cmp
cmp
inc
nop
cmp
pusha
mov
js
jmp
push
or
jge
push
cs
dec
jmp
in
cs
xchg
cmp
sub
into
jb
pop
add
mov
jns
jge
je
(bad)
loopne
xchg
add
pop
adc
dec
in
ins
sbb
jns
xor
sahf
fwait
jnp
mov
pop
add
frstor
addr16
cli
push
push
ins
aad
pusha
mov
adc
pop
sub
cld
aaa
jo
mov
mov
into
arpl
jo
xchg
iret
dec
dec
scas
sub
adc
mov
xchg
out
jp
pop
rol
mov
cmp
fsubr
sub
pop
or
xchg
jbe
(bad)
cdq
in
rcl
sub
aam
stos
inc
pop
fisubr
movs
adc
inc
pop
div
repnz
push
dec
jge
stc
inc
mov
pop
in
(bad)
mov
aad
shl
pop
sub
pop
xchg
inc
jmp
jmp
clc
loope
push
sub
lock
xor
jo
stos
xor
movzx
inc
or
loop
pop
push
lods
cmps
cmp
xor
push
ror
push
call
dec
pop
dec
jp
scas
dec
stos
cmp
repnz
push
adc
mov
movq
imul
mov
adc
popa
das
pop
add
cmp
fld
dec
push
popa
mov
int
ret
out
scas
stos
cwde
nop
fldl2e
adc
sub
(bad)
push
fisttp
pop
sar
sti
and
add
pop
retf
dec
adc
scas
lahf
mov
in
(bad)
cs
mov
and
cmp
and
dec
push
lods
std
jg
call
outs
inc
dec
std
loope
mov
into
lahf
jae
test
pop
cmp
in
pop
xchg
stc
xchg
and
test
or
cmp
dec
leave
xchg
sbb
inc
sbb
rcr
adc
les
or
aad
dec
inc
jecxz
int3
aaa
inc
or
pop
ds
jg
retf
ins
or
aam
mov
imul
mov
ja
mov
inc
pop
xchg
out
js
js
mov
mov
pop
mov
pop
aam
fisttp
push
jo
movs
sbb
scas
cmp
outs
cmps
mov
and
je
adc
cmp
pop
pop
dec
inc
dec
cdq
aad
into
mov
movs
mov
jp
repnz
(bad)
mov
rol
shr
loope
sti
sbb
xchg
rol
push
and
loopne
test
popf
int
call
jg
iret
push
sar
jno
daa
loope
push
mov
icebp
fwait
cmc
sti
fwait
mov
adc
mov
rcl
add
push
not
cmp
mov
mov
sub
es
push
xchg
jmp
rcr
cmp
mov
das
nop
push
or
cs
cmps
into
mov
push
test
jnp
es
and
sub
sar
movs
(bad)
test
test
(bad)
mov
sub
(bad)
ja
add
cli
into
fisttp
add
imul
aaa
les
cmp
lods
push
xchg
(bad)
jge
dec
mov
dec
shl
ins
pop
adc
jnp
cmp
xchg
jecxz
retf
or
call
adc
(bad)
push
popf
cmp
call
fbstp
icebp
(bad)
jmp
jo
push
call
xor
ud2
push
aad
or
sbb
loop
mov
fisubr
fsubr
add
mov
jp
xchg
test
in
cwde
or
adc
sti
std
fcmovbe
nop
lock
retf
sbb
mov
sti
push
xor
fistp
aad
jbe
mov
lds
aas
mov
jecxz
sti
das
cs
pop
rcr
jge
ret
nop
mov
add
int
cmps
add
repz
stc
sahf
lods
xchg
mov
cmps
clc
sub
cmp
mov
das
bound
pop
jg
xchg
mov
xchg
ror
inc
das
das
shl
or
pop
push
and
stc
sbb
sbb
fisttp
cmc
xchg
pop
js
and
mov
dec
mov
sbb
shl
ficom
ins
repz
fwait
mov
sbb
fist
(bad)
and
in
mov
movs
sbb
and
fimul
pop
sahf
cmp
and
clc
xor
mov
sub
popa
jbe
mov
sbb
daa
adc
inc
pop
iret
xor
adc
ss
lods
pop
sub
leave
mov
sbb
mov
ret
cs
hlt
outs
adc
mov
fild
popf
pop
add
jns
push
xor
and
ins
push
mov
inc
cmp
adc
push
sahf
jae
xchg
jmp
add
popf
sub
pop
repnz
ss
in
cmp
push
popa
(bad)
in
(bad)
jg
pop
out
mov
jae
push
or
push
cli
xchg
push
mov
lods
(bad)
dec
xchg
mov
lea
push
mul
sub
gs
(bad)
push
shl
ror
or
pop
cmc
out
xor
dec
cmp
pop
nop
mov
push
lds
in
mov
xor
in
popf
jmp
xlat
or
cs
xor
pop
jp
ret
jp
mov
hlt
sub
jg
dec
pop
mov
push
aas
sbb
ret
cmc
dec
push
fmul
or
mov
not
push
daa
dec
mov
mov
sbb
aaa
cmp
add
das
stos
mov
pusha
xrelease
mov
adc
mul
add
mov
stc
adc
pop
mov
mov
jl
sub
scas
mov
mov
dec
mov
sbb
xchg
sub
jb
gs
push
sbb
push
pop
inc
add
inc
push
fmul
add
dec
add
or
out
mov
jbe
sub
or
mov
jbe
inc
ret
mov
pop
jecxz
jno
add
call
daa
std
xchg
lea
fnstsw
daa
popf
jecxz
push
fcomp
inc
addr16
pop
xor
scas
stos
dec
out
cwde
mov
push
or
and
cmp
inc
add
push
imul
dec
nop
hlt
pop
aad
sahf
pusha
fidiv
(bad)
xor
xor
or
faddp
(bad)
mov
cwde
sbb
nop
pop
jno
stos
scas
xchg
ins
push
sub
push
(bad)
mov
sub
dec
push
sar
cwde
pop
jne
cmc
popf
push
pushf
mov
cmps
hlt
in
mov
data16
sbb
mov
jbe
mov
rcr
pop
lods
mov
mov
stos
(bad)
sub
mov
mov
jge
sti
mov
mov
cmp
mov
mov
mov
stc
imul
fwait
xchg
outs
lods
mov
and
iret
sbb
mov
push
mov
scas
lock
mov
mov
sbb
iret
not
sbb
jge
leave
bound
in
or
fdivr
dec
adc
or
cwde
mov
popa
cmp
pop
ss
(bad)
rcr
and
jmp
mov
add
or
fcomp
push
or
jecxz
push
or
jne
addr16
push
int3
(bad)
in
pop
stos
sub
cmp
js
mov
sbb
aaa
jno
bound
push
cli
in
push
inc
mov
jae
pushf
imul
inc
out
or
rcr
add
xchg
loopne
xchg
pushf
frstor
push
sub
pop
clc
data16
(bad)
lock
or
fisttp
loop
pop
or
jecxz
mov
cli
mov
adc
pop
dec
and
imul
test
add
sbb
mov
dec
or
icebp
cli
push
add
jnp
and
into
test
mov
push
xor
jnp
ins
ss
jne
cmps
ins
shr
inc
push
mov
iret
(bad)
les
xchg
arpl
bound
jmp
add
rcr
(bad)
lock
ja
xchg
pop
rep
inc
pop
push
jno
repz
movs
not
jmp
sub
cmp
in
mov
sar
(bad)
pop
sbb
sub
loope
sub
and
cmp
in
pop
or
lods
jmp
push
jo
jne
and
add
pop
call
scas
mov
(bad)
jle
mov
add
sub
push
das
inc
aam
rcl
xchg
jmp
retf
test
cmp
and
ret
xchg
rcr
sub
adc
inc
mov
push
ficomp
adc
stc
mov
fidivr
cmp
add
jmp
cmp
adc
ds
or
cwde
sub
and
cmp
adc
add
test
xchg
fwait
xor
cmc
fucomip
cmps
nop
test
aas
add
or
pop
dec
out
test
lahf
xor
sbb
sbb
(bad)
leave
ror
mov
ds
add
lods
pop
rcl
mov
cld
pop
int
mov
xlat
enter
lods
cmp
sbb
mov
das
sub
and
inc
retf
cld
xor
leave
cmp
adc
mov
cmp
pop
stos
not
mov
push
aam
jno
clc
rcr
lods
mov
fxch
pop
cmps
sar
mov
jne
in
cdq
xor
sub
stc
adc
pop
sbb
or
nop
mov
adc
dec
push
sbb
sub
pop
inc
aaa
ss
arpl
adc
jo
mov
xchg
ins
mov
xor
in
and
lock
es
out
mov
dec
cmp
mov
sub
aad
cmp
adc
sti
nop
or
adc
nop
test
cld
mov
mov
in
stos
loop
jns
push
jno
lods
add
adc
icebp
adc
sub
sub
dec
jne
inc
(bad)
stc
mov
hlt
push
adc
movs
into
jl
jecxz
jp
adc
ret
dec
or
shl
sub
stos
mov
cmp
fld
push
mov
cmp
pop
inc
cmps
xlat
sbb
cmp
mov
jo
jb
mov
and
cmp
fldcw
hlt
add
je
sbb
pop
rep
js
jnp
and
push
mov
clc
inc
or
mov
iret
fist
push
ret
test
xlat
test
(bad)
inc
dec
jne
xor
test
movs
mov
cmps
enter
inc
nop
push
hlt
mov
call
pop
push
mov
mov
mov
xor
adc
pop
jnp
(bad)
xlat
push
push
mov
push
xor
shl
and
addr16
int3
mov
mov
test
int
fwait
xor
sub
loopne
ror
cmp
inc
push
jp
or
into
cmp
fs
xor
inc
mov
sub
iret
mov
bound
mov
loop
repz
int
(bad)
popa
sahf
push
sar
imul
(bad)
das
fisttp
cmp
and
dec
xlat
cmp
mov
icebp
(bad)
addr16
cmps
idiv
sti
in
jg
int3
sub
cmp
jge
cli
in
xchg
pop
push
fistp
push
pusha
shl
test
ret
rol
in
(bad)
rcl
lds
std
ds
int3
inc
call
jne
jo
push
jle
mov
or
and
sbb
(bad)
cmp
dec
in
mov
cmp
xor
js
jns
ins
addr16
pop
mov
cld
cdq
fcmovu
fild
jecxz
ss
jno
jae
mov
mov
xchg
dec
sbb
xor
out
pop
je
ins
icebp
daa
dec
aam
mov
sub
fs
lahf
or
jmp
or
xor
fbld
(bad)
mov
(bad)
lea
sahf
fld
inc
in
mov
mov
popf
pusha
imul
loopne
inc
mov
call
ss
test
test
mov
mov
adc
xor
sub
cmp
mov
loope
cwde
es
cs
sub
into
pop
in
leave
aas
lods
xchg
inc
adc
lahf
cmp
mov
xchg
add
or
sub
(bad)
ffreep
push
ins
pop
add
jmp
jmp
mov
push
sub
sbb
push
xor
sub
xor
fldenv
mov
or
and
in
fsubr
push
push
xor
xor
xor
stos
mov
cmp
and
mov
in
lods
sahf
sub
push
adc
imul
cmp
data16
push
mov
or
xor
mov
call
and
adc
and
jmp
or
dec
jb
xchg
push
and
stos
add
dec
jnp
shl
ds
ret
ds
push
mov
mov
lock
les
cmp
test
push
sbb
imul
fsub
mul
loope
push
sub
dec
jecxz
dec
jno
sub
lea
mov
sub
iret
loop
popa
add
mov
or
in
xor
jmp
hlt
or
and
dec
add
out
push
ins
pop
or
imul
jbe
js
popa
stos
dec
mov
pop
ds
mov
mov
mov
out
imul
push
mov
movs
sti
std
xchg
or
jg
addr16
sar
jb
mov
and
ds
push
je
fdivr
sub
mov
xchg
mov
mov
inc
sbb
inc
and
jne
repz
xlat
popa
test
sbb
push
sbb
(bad)
leave
sbb
neg
imul
sub
int3
xchg
jge
in
arpl
mov
mov
or
pushf
inc
xor
xor
ds
sub
sahf
fsubr
inc
outs
fdivr
xor
cli
std
cmp
xchg
(bad)
mov
jae
mov
xchg
jno
or
shr
xor
jmp
adc
pop
loop
in
icebp
and
or
mov
ret
push
sahf
(bad)
sub
pop
push
xchg
lods
iret
leave
out
xchg
ds
in
inc
mov
jl
outs
movs
xor
mov
ret
jmp
out
cs
frstor
jle
dec
sbb
(bad)
mov
jno
sub
cmp
fcom
(bad)
cwde
cwde
test
outs
adc
cmps
retf
push
lock
mov
inc
out
in
jl
test
movs
and
lds
and
dec
sub
out
push
clc
retf
fst
pop
pop
or
fnstcw
les
jbe
cmp
js
pusha
pop
retf
mov
xor
pop
test
dec
aad
leave
mov
push
test
and
cmp
in
test
jmp
xor
lahf
pop
jbe
xchg
out
sub
lds
push
pop
sbb
jb
(bad)
mov
inc
sbb
jl
and
xchg
adc
jle
mov
and
loope
inc
into
jnp
enter
inc
movs
xchg
mov
jbe
imul
lds
sub
js
cdq
and
pushf
sub
mov
push
and
pop
ins
push
stos
pop
push
xchg
retf
out
inc
add
cmp
cld
sub
div
mov
jae
and
ja
ins
call
in
(bad)
mov
push
sbb
nop
add
mov
pop
mov
enter
loop
add
sti
iret
mov
clc
push
xor
mov
push
frstor
xor
popf
inc
and
sbb
call
stos
push
add
and
push
enter
out
scas
or
pushf
imul
adc
inc
lock
cmp
push
jecxz
aas
jecxz
sub
pop
sbb
adc
into
adc
lds
sbb
jmp
jmp
movs
jl
xor
iret
sar
out
cli
jb
pop
xor
iret
add
enter
pop
mov
jp
mov
sub
outs
add
fadd
mov
and
pop
jl
sub
sbb
push
daa
in
into
jge
sub
repz
lock
sub
shr
cmp
mov
add
add
pop
jmp
mov
out
adc
int
loopne
retf
shl
fdivr
sub
or
add
add
test
inc
imul
je
jne
inc
cld
inc
pop
push
jb
retf
jae
mov
repz
pop
lock
mov
xor
popa
push
pop
(bad)
mov
add
and
ins
adc
out
jp
outs
adc
sub
sbb
cmp
popa
pop
or
sub
jle
lds
repnz
call
jae
cmp
ja
daa
sar
xor
pop
and
mov
jmp
sub
das
lock
lods
(bad)
stc
xor
mov
pop
cmc
out
cmps
and
pop
fimul
ffreep
in
icebp
fwait
lods
xchg
add
mov
add
in
data16
imul
pop
imul
xor
shl
and
mov
es
movs
mov
mov
inc
lods
(bad)
push
sbb
outs
fisubr
xor
mov
jl
(bad)
jno
mov
push
test
push
jo
dec
add
xchg
pop
int3
fidivr
imul
scas
xchg
(bad)
cmp
call
fisttp
lock
fidivr
fistp
jns
in
movs
ss
cwde
push
rcpps
pop
sbb
mov
mov
pop
into
sub
pop
sbb
fs
dec
pop
adc
sub
mov
mul
push
scas
ins
xchg
cdq
mov
ins
jmp
iret
imul
jno
inc
fld
into
ins
icebp
pushf
inc
push
stc
push
mov
mov
jo
nop
jecxz
jns
stos
fisubr
fbld
fsub
das
cmp
(bad)
dec
loopne
js
repz
fnstcw
mov
int3
cmp
push
fst
mov
rcr
div
cmp
addr16
pop
aad
add
outs
dec
inc
pop
mov
cwde
jo
jnp
cld
dec
dec
mov
addr16
pop
adc
jb
xor
loopne
dec
sub
mov
jp
mov
in
test
dec
xlat
and
sbb
jmp
out
test
mov
push
cmc
retf
stos
rcl
sub
push
sub
ja
mul
xchg
retf
dec
test
or
in
or
out
inc
jnp
mov
loope
pop
jne
gs
outs
dec
xor
xchg
or
dec
in
or
jge
xor
fsubr
xor
jns
arpl
dec
push
push
ins
test
popf
jbe
call
cmps
test
jmp
dec
ins
movs
je
pushf
mov
or
sub
out
scas
xchg
jmp
xor
outs
dec
jp
imul
ds
adc
jmp
retf
lods
arpl
mov
and
mov
xchg
(bad)
xchg
(bad)
fucomip
mov
sbb
jp
inc
inc
rol
imul
xor
inc
movs
lods
or
pop
test
inc
jo
mov
jg
push
test
ret
lock
(bad)
xchg
(bad)
dec
call
jne
push
sbb
and
mov
into
not
add
mov
aad
inc
ret
pop
or
xchg
xchg
pop
fcmovu
shl
xchg
jbe
sar
les
popf
xor
jg
mov
dec
fbstp
xacquire
jb
and
scas
retf
push
outs
jmp
mov
sahf
(bad)
mov
neg
popf
stc
fild
jnp
stos
push
push
bound
je
int3
xor
sti
mov
push
ja
inc
mov
pop
pop
and
push
(bad)
leave
rcl
push
mov
xchg
xor
js
pop
jbe
pop
(bad)
xlat
push
and
fisubr
outs
or
fnstenv
lea
fistp
dec
js
mov
push
sbb
pop
dec
dec
dec
push
mov
ss
sahf
lea
jo
mov
sbb
jge
xchg
inc
movs
xchg
add
mov
es
sub
sbb
pop
adc
jecxz
clc
mov
ss
xor
movs
dec
xchg
mov
xor
sub
(bad)
jmp
sbb
mov
neg
push
inc
inc
add
popa
mov
clc
pop
call
xlat
mov
xchg
enter
xchg
retf
rcr
inc
(bad)
cmps
inc
lahf
pop
adc
ja
cmc
inc
int3
cdq
in
mov
jo
sti
or
jg
mov
into
pop
test
scas
lods
xchg
cmps
mov
xchg
or
cmc
mov
lock
pop
dec
jno
sbb
cdq
call
movs
out
jge
sti
ret
xchg
ret
xchg
xchg
int
(bad)
xor
loope
mov
push
pusha
xlat
movs
cdq
fs
or
pop
cmp
neg
push
out
or
idiv
mov
pop
ror
mov
mov
mov
or
loope
ret
in
xor
pop
jo
das
js
sub
cmp
(bad)
or
popf
xchg
add
fisttp
cli
push
mov
add
mov
and
in
and
dec
jp
xor
dec
add
inc
mov
xor
add
add
cdq
test
push
jne
and
jmp
dec
push
adc
lea
rcr
push
and
mov
adc
sbb
out
inc
or
sub
in
sar
sbb
mov
inc
adc
or
ss
push
lds
popf
dec
imul
add
jmp
jp
mov
ss
mov
sbb
mov
inc
out
fwait
xor
leave
push
cwde
hlt
mov
sbb
mov
(bad)
loopne
cmc
or
ret
and
scas
dec
pop
adc
inc
mov
(bad)
cld
push
push
and
retf
jp
mov
push
push
push
push
int3
sti
sbb
outs
gs
lea
cmp
mov
nop
cwde
inc
aam
lods
sti
movs
test
pop
push
sbb
push
ret
xchg
scas
aaa
aam
cld
into
cwde
outs
scas
cmp
lea
or
jp
jo
pop
or
mov
xlat
dec
push
mov
adc
pop
mov
mov
shl
sbb
sub
mov
adc
test
jl
mov
call
mov
mov
fidivr
mov
int3
sti
stos
leave
sbb
mov
dec
xchg
cmps
out
sub
cdq
jecxz
mov
jg
frstor
ret
addr16
sub
xor
sub
push
inc
clc
stos
push
outs
inc
mov
retf
push
push
or
movs
push
inc
in
in
ret
cmp
jo
ss
jbe
sub
adc
jno
sbb
leave
add
jb
retf
mov
js
out
or
sub
data16
xlat
push
sbb
push
pop
ror
sub
xlat
icebp
int
ret
push
test
push
lds
cmps
mov
jg
(bad)
cmp
push
dec
mov
add
lahf
cmc
into
sub
mov
sub
xor
jae
outs
xchg
arpl
mov
lds
mov
mov
push
mov
sub
inc
out
scas
cmp
aad
pop
and
pop
sbb
jecxz
and
ficomp
popa
sbb
add
(bad)
mov
fist
mov
aaa
lods
jmp
mov
std
aam
adc
adc
cmp
fwait
stos
mov
and
add
inc
loope
cmps
or
loop
and
cld
repz
test
xchg
xchg
cs
cdq
ins
mov
and
adc
pop
stos
aaa
js
fild
sbb
dec
adc
leave
push
(bad)
mov
inc
cwde
dec
mov
jnp
xchg
hlt
and
scas
mov
aad
sbb
cmp
push
push
lock
in
test
gs
sub
sti
add
mov
mov
inc
sub
and
daa
mov
sbb
loop
push
jle
push
push
jmp
mov
in
or
push
sbb
(bad)
out
lds
mov
jge
inc
out
hlt
dec
push
stc
jae
mov
mov
(bad)
jmp
jge
loopne
mov
push
ss
pop
pop
and
out
hlt
adc
xchg
daa
and
jl
or
xor
sbb
mov
gs
mov
xchg
dec
xchg
jle
mov
int3
lds
xchg
icebp
(bad)
jp
mov
lea
push
lock
out
loope
jg
adc
enter
inc
mov
sahf
adc
imul
and
fwait
mov
or
and
test
mov
jmp
in
or
or
push
inc
daa
in
std
push
xchg
dec
lods
xor
in
and
pop
mov
jae
and
inc
xor
pop
dec
dec
cwde
popf
cmps
out
xlat
dec
je
gs
imul
pop
jb
ret
push
fcom
mov
inc
dec
push
neg
or
and
jmp
jb
mov
jbe
sub
sub
mov
cmp
test
inc
lods
push
fldcw
or
mov
pop
pop
mov
test
repnz
sahf
mov
aaa
adc
pop
xor
add
mov
push
in
push
push
dec
push
aad
adc
imul
mov
add
ficom
fsubr
sar
xor
sub
and
pop
or
mov
fidivr
mov
retf
sub
or
hlt
dec
sub
sub
push
fistp
int3
repz
ins
iret
sub
pop
push
and
pusha
push
xor
jle
fadd
ds
rol
subps
mov
fsub
mov
jns
dec
push
inc
add
pop
movs
gs
cld
cwde
out
addr16
in
xchg
jg
(bad)
cmc
jnp
xchg
and
shl
mov
inc
and
je
dec
adc
mov
cs
cmp
mov
cld
loope
aaa
push
cmp
pop
imul
or
sar
ds
mov
mov
adc
xor
mov
jmp
mov
pop
cmp
sbb
push
jnp
enter
inc
add
stos
cs
mov
nop
adc
lea
mov
(bad)
ror
icebp
mul
aad
test
push
push
loop
dec
shr
sub
sti
cmps
pop
out
scas
outs
mov
mov
sbb
lea
cmps
pop
jl
lods
adc
add
push
or
sahf
ror
sar
gs
mov
dec
push
add
stos
pusha
les
mov
addr16
(bad)
push
adc
das
shr
sbb
mov
xor
mov
popa
xchg
xchg
mov
sbb
add
test
push
cmc
pop
(bad)
test
dec
sbb
aaa
pop
jecxz
nop
and
iret
int
ret
mov
movs
sbb
cdq
jb
imul
mov
dec
add
jns
xor
jb
mov
cmc
addr16
cmp
inc
repnz
in
push
adc
add
sub
sbb
add
mov
xor
pop
fsub
cli
pop
mov
test
push
movs
movs
cmp
inc
bound
xchg
ror
xor
rcr
outs
mov
xchg
daa
cmp
cli
pop
fwait
push
jge
mov
dec
jmp
pop
ss
xchg
icebp
and
adc
mov
mov
xchg
add
add
lds
inc
jge
jnp
jmp
cdq
jle
jnp
xor
xchg
std
adc
adc
fimul
push
add
push
aas
xor
sbb
ins
in
dec
mov
dec
inc
dec
jns
xchg
into
rcr
add
mov
dec
mov
mov
or
sub
xchg
adc
fdecstp
fiadd
pop
test
ret
into
rcl
fiadd
jmp
and
add
fisubr
mov
inc
xchg
add
push
into
(bad)
cmp
jo
pop
test
inc
cmc
and
push
mov
and
call
cmp
jmp
jmp
adc
jmp
jnp
scas
cld
pop
scas
scas
js
fldenv
cmp
cmp
ins
pop
jg
pusha
and
jmp
xchg
push
push
xlat
adc
iret
xchg
cwde
mov
push
fild
xchg
push
aas
cmps
cmp
shl
loop
enterw
mov
mov
pop
mov
mov
add
in
scas
push
and
jle
push
push
dec
adc
sar
jl
mov
mov
push
xchg
(bad)
das
imul
(bad)
rcr
imul
or
adc
jo
cmc
xchg
stos
(bad)
call
push
sbb
cmps
addr16
mov
mov
xor
js
(bad)
sub
inc
jle
jl
test
in
inc
mov
outs
or
je
and
icebp
retf
into
and
inc
int3
or
sar
mov
xchg
cmps
enter
sub
enter
mov
loope
jecxz
xchg
enter
mov
das
clc
sub
inc
push
call
fwait
popf
mov
in
mov
adc
ror
xchg
jbe
cmp
ret
adc
and
mov
call
imul
std
rcl
pop
pop
mov
scas
inc
mov
adc
(bad)
faddp
inc
and
stos
out
push
fnstsw
out
pop
mov
popf
and
daa
test
(bad)
std
jle
js
inc
ja
inc
sbb
(bad)
psrld
int3
sub
(bad)
and
lds
out
(bad)
sbb
sahf
pop
cmp
(bad)
enter
push
pop
jne
jo
mov
mov
dec
in
cmc
daa
add
cli
(bad)
jno
add
mov
and
sbb
data16
pop
push
add
cmp
pop
je
loop
rcl
arpl
shl
dec
adc
fucomip
add
fadd
pop
and
pop
leave
fisttp
shl
pop
adc
push
ins
pop
into
jg
mov
ins
jge
mov
jae
or
sbb
fisttp
lods
push
xchg
xor
lods
arpl
cmp
pop
movs
(bad)
sahf
ret
pop
sbb
retf
add
imul
add
fidiv
movs
jae
movs
cmp
shl
movs
repz
mov
ja
add
mov
ins
loope
adc
sar
xor
sub
jmp
stos
sti
ret
sub
or
push
loopne
sub
lods
adc
push
into
inc
sub
mov
aam
ss
mov
rcl
into
nop
les
in
rcl
shl
xor
pop
leave
lock
retf
sbb
daa
cmc
daa
fist
shr
outs
cmp
je
push
ins
sub
movs
popa
int
jnp
sbb
mov
pop
and
xor
cmp
stc
out
stc
pop
cmp
push
or
js
xor
cmps
dec
fcmovnbe
jmp
mov
and
adc
mov
jns
imul
lea
mov
in
pop
push
cmp
or
lods
xor
daa
and
adc
mov
out
mov
scas
pop
fsubr
push
rcr
popa
cwde
and
inc
pushf
addr16
adc
adc
xor
and
sti
sub
in
clc
ja
aaa
jne
rol
mov
cmp
mov
sbb
out
fisttp
rol
sub
jp
pusha
jne
iret
jne
(bad)
and
mov
xchg
cmc
xor
xor
cmp
inc
xchg
dec
and
es
test
sub
xor
into
dec
push
sub
or
mov
xor
dec
rol
inc
jp
jmp
inc
ins
enter
xlat
aad
ret
enter
js
lods
imul
popa
and
imul
stos
(bad)
xor
sbb
xor
mov
les
dec
fistp
cmp
stos
movs
jns
adc
pop
mov
pop
dec
lock
mov
fwait
mov
in
in
add
pop
pop
int3
and
call
sub
dec
loop
lock
inc
fwait
xor
push
aad
xor
hlt
mul
(bad)
jmp
push
out
push
cmp
jae
call
sar
jmp
cwde
fidiv
jl
addr16
and
pop
stos
ss
mov
stos
and
cmps
aas
rcl
mov
cmp
xor
js
and
cmp
cmp
jmp
imul
repz
in
nop
dec
ficom
daa
mov
push
popf
ins
scas
jg
scas
jne
sahf
add
push
cmps
movs
hlt
pop
into
lock
fcomp
ins
add
mov
ret
cld
and
fs
das
mov
jge
inc
sahf
xchg
es
sub
(bad)
adc
push
mov
dec
mov
push
sar
and
push
push
pushf
imul
ret
loopne
jle
dec
xlat
fcom
sbb
dec
call
test
movs
mov
xchg
(bad)
dec
sub
mov
stos
fmul
inc
leave
xor
xor
jae
xchg
bound
sbb
(bad)
ss
rcr
cmp
mov
js
cmp
enter
ror
clc
ud2
push
repz
inc
fidiv
out
loope
sub
or
mov
fsubrp
jmp
mov
pop
mov
int
cmp
mov
ss
and
cmp
dec
pop
cmp
test
mov
daa
aad
adc
pop
retf
test
outs
push
daa
mov
jg
pop
jge
cdq
test
int3
adc
xchg
(bad)
sbb
adc
push
sub
push
sbb
into
inc
sub
cs
stos
jae
mov
cs
popf
sar
sbb
or
fadd
or
mov
inc
jb
xor
(bad)
int3
ror
cmp
adc
xor
jmp
inc
sub
push
pop
xor
cwde
ins
scas
cmp
push
pop
cmp
xchg
sub
lahf
sbb
xlat
inc
ret
inc
cmps
mov
mov
(bad)
retf
lahf
mov
fbld
pop
xor
cmp
or
push
xchg
inc
mov
mov
xor
call
push
std
ins
jnp
jno
into
jbe
repnz
jnp
jecxz
or
jg
and
pop
sub
jno
jp
adc
dec
lds
mov
or
dec
mov
jg
push
hlt
pop
inc
jecxz
movs
mov
adc
xchg
push
xchg
stos
enter
(bad)
sbb
out
xor
cmp
shr
xlat
(bad)
cmp
in
jmp
push
adc
dec
push
aam
push
mov
jmp
or
mov
jmp
call
stc
repz
out
push
imul
stos
movs
ss
rol
jae
sub
sbb
sbb
stc
inc
push
test
movs
mov
pop
and
mov
stc
xor
lea
and
xchg
push
pop
(bad)
sub
into
xchg
add
rcl
dec
xchg
pop
inc
out
dec
lods
push
cdq
jge
or
addr16
nop
cmp
lods
pop
adc
mov
inc
(bad)
inc
mov
inc
jo
jno
lods
sti
stc
std
or
pop
mov
test
adc
cmp
mov
arpl
fnstsw
jp
imul
lds
or
mov
push
test
mov
jnp
xchg
sbb
jge
xchg
jp
inc
js
aas
(bad)
(bad)
mov
mov
mov
adc
fiadd
fucomp
or
cld
repz
mov
jnp
push
ss
inc
ror
sub
pop
popf
pusha
mov
test
mov
cld
add
lock
mov
and
mov
fist
and
movs
sbb
mov
mov
jmp
inc
mov
and
sub
adc
inc
retf
xchg
scas
ins
mov
jg
jg
xchg
sbb
add
stos
mov
mov
jp
cmps
pusha
clc
lods
jle
and
mov
out
push
iret
and
es
cld
xor
xchg
mov
pop
imul
xchg
je
or
int3
test
sub
imul
mov
mov
cmps
xor
sub
mov
push
retf
mov
add
sar
aaa
fisttp
pop
lods
mov
jmp
push
pop
iret
loop
pop
iret
ins
mov
test
mov
pop
sbb
outs
pop
inc
xchg
mov
repz
repz
sbb
adc
loopne
xchg
gs
fmul
pop
xchg
add
hlt
sar
dec
xchg
mov
repz
ins
add
push
ds
push
add
lods
or
sar
movs
iret
xlat
add
call
adc
mov
lods
pop
(bad)
pusha
or
xchg
loopne
add
and
in
jmp
fs
push
pop
int
je
mov
fs
loop
pop
shr
inc
les
add
jl
lock
ret
into
imul
adc
or
iret
sbb
ret
mov
shl
mov
sub
or
fstp
aam
sbb
add
push
mov
repz
xchg
pop
xchg
jecxz
xchg
adc
imul
xor
push
outs
aad
sahf
xchg
sbb
mov
stc
test
xor
sar
xchg
dec
push
sbb
push
movs
lea
pop
mov
cwde
fst
leave
or
mov
sar
jmp
out
push
mov
cli
sub
fs
das
and
(bad)
pop
jo
xlat
and
jno
inc
or
xchg
mov
jp
xor
not
mov
adc
sub
jo
xchg
fsubr
xchg
es
cli
jecxz
loope
pop
pop
xchg
mov
in
mov
fisttp
jmp
pop
test
inc
push
push
sar
sub
cmps
int3
pushf
inc
dec
push
mov
call
bound
lods
inc
ins
sti
out
xchg
int3
push
lahf
aaa
retf
or
sub
out
xchg
jmp
xlat
push
js
push
in
test
shr
lds
mov
inc
call
xchg
data16
aad
jnp
cwde
push
retf
jae
add
xchg
inc
ins
sub
sbb
dec
lock
push
sbb
add
or
push
pop
enter
xor
jmp
aaa
mov
push
and
dec
cmps
mov
pop
pop
daa
and
xchg
icebp
mov
dec
pop
mov
cmp
mov
cdq
call
xor
or
repnz
or
sbb
scas
stos
imul
cmp
add
jl
jge
cld
fsubr
gs
mov
pop
ja
sbb
cs
icebp
ficom
xchg
xchg
xchg
(bad)
cmp
and
cmp
loopne
call
cmp
stos
cmp
and
in
cdq
leave
mov
call
cmp
sbb
mov
repz
ja
mov
sub
push
cmp
adc
into
mov
ds
sar
push
mov
add
adc
sbb
enter
retf
inc
stc
scas
mov
mov
test
mov
push
xchg
pop
mov
mov
dec
mov
pop
test
push
arpl
pop
jae
fs
and
neg
push
daa
cmc
cmp
fmul
ss
repz
in
adc
mov
pusha
mov
pushf
movs
inc
popf
mov
test
push
hlt
jecxz
in
int
shl
mov
mov
arpl
mov
bnd
xor
in
pop
or
add
pop
push
jo
dec
mov
cwde
sub
jp
fnstsw
or
push
shl
(bad)
adc
and
(bad)
das
outs
and
dec
xor
or
bound
movs
xchg
jae
fstp
adc
out
mov
xchg
ret
dec
xor
xor
xor
mov
iret
xchg
into
aam
cmp
dec
inc
sbb
dec
adc
push
mov
mov
mov
jecxz
cmp
sub
jge
mov
je
lods
inc
xor
pop
cmp
inc
sahf
sti
shl
and
and
arpl
inc
xlat
loopne
xor
xor
js
push
pushf
and
addr16
imul
xchg
fisttp
and
jb
add
js
cmps
jge
mov
jmp
mov
in
inc
mov
jne
pop
mov
lods
loop
dec
dec
xor
jmp
mov
xor
std
dec
xchg
add
pop
into
jbe
fmul
test
clc
xor
imul
xchg
push
inc
pop
loope
cdq
mov
adc
imul
pop
rcl
and
lea
sub
mov
pusha
push
add
aaa
test
sub
enter
sub
jnp
inc
or
cmps
sub
xor
(bad)
ins
push
and
retf
imul
xchg
mov
scas
pop
jmp
adc
in
xchg
sub
and
outs
popf
xchg
cmp
inc
sub
dec
inc
movs
dec
data16
ins
xchg
inc
dec
pop
sbb
xor
lds
leave
jge
cmc
fisttp
lock
or
sbb
xchg
mov
adc
cs
addr16
xor
(bad)
popa
push
in
test
cwde
xor
scas
mov
fs
cli
adc
push
add
dec
jno
outs
mov
pushw
fcmove
shl
or
sbb
jbe
movs
pop
adc
add
jge
bound
sahf
pop
mov
mov
pusha
mov
gs
cs
fwait
imul
pop
test
pop
mov
sub
ins
mov
mov
ficomp
lods
push
(bad)
pop
xchg
jmp
sbb
dec
cmp
sbb
pushf
bound
adc
cmp
sub
pop
cwde
sti
push
push
stos
cwde
(bad)
mov
scas
dec
jne
or
inc
mov
fs
ja
mov
dec
rcl
mov
neg
rcr
jne
dec
mov
movs
xor
mov
adc
mov
push
arpl
ins
int
pop
in
test
push
dec
mov
out
in
cli
jb
clc
xchg
aad
add
mov
xlat
jno
mov
test
outs
and
jge
xlat
call
inc
push
cmp
(bad)
or
jg
cld
mov
sub
loop
in
pop
jl
dec
mov
int3
push
repz
or
loopne
adc
dec
pushf
or
les
cmp
push
sbb
push
in
das
aaa
(bad)
nop
fiadd
adc
push
fadd
mov
outs
jbe
icebp
data16
cmp
xchg
jns
ja
pop
int
out
mov
imul
fmul
push
retf
mov
fdiv
jbe
and
fild
movs
add
fsubr
mov
and
xchg
ret
fisub
movs
mov
clc
pop
fsubr
mov
xchg
mov
addr16
popf
outs
mov
push
sub
inc
sbb
aam
mov
cli
inc
mov
aaa
jl
inc
and
das
mov
mov
std
sti
cmc
mov
cdq
dec
xor
add
call
sbb
sub
adc
pop
xchg
add
(bad)
cmp
ficomp
pusha
push
push
add
dec
aad
cmp
and
sbb
mov
retf
dec
sub
fdivrp
pusha
adc
cmp
lahf
lods
mov
test
cmp
or
xchg
sub
leave
jne
pop
mov
jmp
dec
sub
mov
cld
pop
and
add
nop
aam
sbb
mov
aas
outs
cmp
sub
pop
jne
aas
or
jge
sbb
cmps
les
pop
mov
push
sbb
lock
mov
ror
inc
cmp
push
das
inc
and
addr16
jno
neg
or
jns
mov
dec
retf
es
loope
push
dec
out
lods
call
inc
mov
jns
mov
mov
inc
pop
and
repnz
stc
dec
scas
pusha
pop
mov
inc
dec
pop
mov
scas
inc
ret
test
jmp
lds
mov
pushf
xchg
aam
jmp
ins
sub
xor
fwait
pop
scas
add
(bad)
aam
and
(bad)
in
mov
sbb
aas
pop
or
adc
lods
add
cmp
outs
test
mov
mov
icebp
xchg
jbe
stos
push
repnz
or
loop
sar
mov
jns
lahf
int3
out
test
xor
jne
leave
push
push
loopne
mov
cmp
or
mov
add
jne
xlat
dec
dec
loope
cli
add
mov
movs
push
dec
mov
sti
or
pop
cdq
xor
xchg
push
dec
dec
jo
repnz
add
pop
js
movs
push
loop
push
xor
jne
scas
and
fimul
std
iret
xchg
in
mov
jnp
leave
mov
bound
sbb
xchg
aaa
push
pushf
mov
push
daa
sub
test
cmp
mov
xor
adc
pushf
dec
and
adc
(bad)
xlat
sub
xchg
(bad)
adc
ror
sub
sub
gs
inc
sti
and
pop
mov
xchg
or
ret
push
int3
in
xor
in
xchg
retf
test
or
mov
es
je
fst
dec
add
fcmovne
cmp
or
sub
pop
add
adc
push
sub
cmp
mov
mov
lahf
movs
adc
popa
mov
(bad)
rol
mov
sahf
retf
pusha
lahf
sti
retf
leave
sbb
repnz
xchg
mov
sub
add
enter
and
cmp
dec
jmp
inc
lahf
jecxz
in
inc
mov
(bad)
gs
hlt
jp
test
xchg
hlt
pop
pmuludq
mov
fstp
in
in
adc
mov
in
(bad)
aad
pop
adc
inc
dec
jecxz
sub
cmp
push
aas
push
cwde
inc
mov
dec
add
mov
out
jo
fsubr
loopne
mov
cmps
and
out
mov
ss
dec
cmp
sbb
inc
(bad)
jo
lods
in
xchg
into
jge
and
popf
pusha
mov
bound
xchg
out
inc
ins
clc
push
jae
cmp
and
add
adc
sbb
cmp
pusha
inc
pop
int
and
pop
scas
adc
jecxz
dec
dec
mov
adc
xlat
or
lea
or
retf
mov
retf
pop
mov
fwait
cmp
cmps
inc
(bad)
cli
adc
sub
xchg
dec
push
push
jge
ficom
fnstenv
(bad)
jecxz
test
push
dec
(bad)
pop
push
iret
push
sahf
(bad)
enter
and
(bad)
sbb
pop
sti
arpl
icebp
nop
cmc
fadd
stc
xor
mov
jmp
aam
lea
nop
mov
addr16
gs
xchg
sbb
call
xor
push
mov
adc
mov
xor
or
mov
cmp
scas
mov
and
xchg
es
(bad)
dec
and
sbb
mov
push
mov
pop
mov
xlat
call
mov
sbb
xchg
icebp
cmp
mov
and
ins
pop
push
in
xchg
test
test
repz
inc
dec
and
mov
nop
add
lea
mov
stos
fiadd
scas
ret
inc
pop
test
fnstcw
les
xchg
and
je
jnp
shl
scas
add
scas
pusha
popa
and
test
es
push
fiadd
test
into
and
nop
fimul
push
call
(bad)
mov
pop
mov
dec
xchg
push
mov
jne
cmp
js
dec
clc
call
adc
push
loopne
pop
jb
pop
js
mov
cmp
daa
sub
cmps
in
test
iret
pop
fsubrp
inc
nop
(bad)
jle
cmp
dec
pop
cmp
and
fisub
xchg
cmp
sbb
gs
adc
iret
mov
or
xor
mov
movs
repnz
xchg
push
cmp
jmp
xchg
and
jae
fbstp
(bad)
mov
xchg
mov
sbb
jbe
fcmovnbe
smsw
mov
scas
ins
into
cmp
dec
mov
imul
pop
in
pop
sub
mov
xor
cld
push
dec
in
in
mov
nop
dec
pop
pushf
pop
inc
ftst
sub
test
add
pop
push
jnp
and
sub
cmp
xchg
xchg
jmp
outs
xor
xor
mov
cmp
cmp
inc
sar
adc
(bad)
rcr
retf
fld
call
mov
das
pop
out
mov
or
ret
loopne
stos
pop
mov
cwde
xchg
ja
test
je
mov
mov
pop
mov
lods
jne
mov
xor
movs
jmp
test
mul
mov
sbb
adc
mov
(bad)
stc
jae
es
arpl
inc
outs
jl
leave
add
cld
or
aam
cld
cmc
fcomp
repnz
or
shl
jmp
mov
add
add
jnp
retf
popf
mov
scas
pop
sti
dec
and
aam
mov
sub
pop
repnz
sbb
bound
xor
rol
leave
aas
ret
jo
mov
adc
movs
stos
arpl
fsubr
retf
push
aas
out
stos
outs
enter
out
sub
ins
cmp
sub
jnp
jae
mov
xor
sar
mov
cdq
jne
add
mov
push
shl
in
xchg
jecxz
pop
sub
(bad)
pushf
dec
ja
ror
mov
mov
xor
sub
mov
(bad)
retf
fwait
gs
pop
pop
stos
popa
or
mov
xchg
push
push
std
xchg
loopne
popa
daa
xor
lahf
push
add
and
pop
inc
icebp
les
xor
stc
push
adc
xchg
jno
repz
je
xchg
xlat
popf
rol
test
push
clc
jo
and
sbb
aaa
(bad)
loopne
pop
loope
cmp
mov
(bad)
push
push
repnz
repz
int
push
xchg
mov
push
stos
pushf
pop
add
in
sahf
xor
repnz
mov
pop
cld
sbb
lea
js
lods
mov
push
sahf
sub
pop
out
mov
mov
push
in
test
pop
jmp
pop
stos
shr
mov
and
out
in
push
(bad)
fisub
cwde
and
dec
push
in
sbb
sub
in
push
jg
out
sbb
mov
fsub
or
out
xor
std
xchg
rcl
(bad)
xor
jle
push
into
mov
int
jno
cmp
xchg
repz
xchg
out
pop
and
jge
dec
dec
dec
sub
das
inc
pop
fbstp
lds
scas
mov
sub
int
shr
add
cmp
inc
stc
gs
xor
cwd
inc
sub
iret
push
and
mov
ins
icebp
inc
les
mov
ret
and
loopne
loop
js
clc
xlat
add
test
scas
pushf
test
sbb
mov
rol
jae
cs
inc
(bad)
pop
mov
(bad)
nop
push
repnz
sub
adc
mov
sbb
in
movs
stos
(bad)
sub
jp
jbe
adc
cmp
mov
rcl
stc
stos
lods
xor
jbe
xchg
mov
ds
and
int
mov
test
std
or
adc
and
cmp
inc
aas
dec
retf
inc
jp
stos
das
fs
adc
outs
sbb
jno
add
popf
cmp
and
repnz
loop
inc
in
mov
cli
lock
lods
shl
sti
jno
(bad)
or
into
add
push
dec
mov
aam
pop
push
mov
popf
jb
(bad)
lahf
or
mov
sub
int3
push
add
in
add
sub
mov
mov
xchg
jnp
aam
sar
push
and
jne
dec
(bad)
jnp
and
fdiv
push
and
and
repz
test
rcr
or
sbb
xchg
jo
call
mov
cmp
neg
pop
cmps
mov
stos
neg
xchg
test
stos
xor
and
es
cwde
pop
inc
push
fiadd
sub
mov
jmp
in
test
jo
fisubr
or
out
jl
xor
add
xchg
fnstenv
sbb
(bad)
xor
push
stos
dec
dec
jle
inc
push
js
push
out
ja
cmp
int
mov
test
and
rcl
mov
sbb
cmp
cmp
mov
mov
js
(bad)
and
(bad)
xchg
jg
push
clc
pop
mov
pusha
and
fwait
sbb
stos
xchg
out
jle
lods
pusha
pusha
cmp
nop
inc
call
out
cmp
and
inc
and
stos
retf
xor
xor
(bad)
addr16
cmp
cmps
push
pop
pop
popf
mov
cmps
sub
lods
add
dec
retf
cmps
xchg
iret
enter
pop
cs
sahf
and
add
mov
push
int
cmc
sahf
and
(bad)
mov
jge
mov
test
and
lods
xchg
in
mov
icebp
and
fild
xor
add
test
sub
sbb
xchg
fimul
jbe
pop
ret
les
jb
sub
psubsb
or
out
sar
add
pop
mov
call
pop
xchg
loopne
call
lahf
and
pop
imul
cmp
xchg
or
push
data16
shl
dec
cmps
jmp
stos
xor
adc
retf
test
add
not
das
(bad)
jbe
add
push
adc
shl
loop
push
push
sub
mov
(bad)
lock
js
inc
mov
loop
(bad)
pop
movs
test
leave
movs
pop
jb
clc
int3
jle
mov
add
xchg
inc
lock
pop
adc
imul
dec
fsub
adc
fnstcw
outs
loop
dec
repnz
das
push
jmp
xor
push
(bad)
fld
adc
outs
mov
pop
jge
or
push
popf
test
jmp
inc
test
cmp
add
pop
stos
cmp
pop
and
add
pop
shl
test
mov
shl
add
sub
jecxz
xchg
inc
xchg
jne
inc
repnz
fucom
cld
cmp
retf
hlt
and
jne
push
push
push
mov
dec
ds
mov
mov
sub
ja
rcl
icebp
(bad)
loop
push
xchg
add
mov
sub
dec
inc
sahf
xchg
pop
ins
hlt
les
push
es
lds
in
mov
push
icebp
mov
inc
shr
cld
int
fmul
jno
ret
jmp
fwait
push
data16
xor
mov
sbb
int3
leave
sbb
mov
push
or
sar
add
pop
adc
cmc
jp
xchg
ins
sub
sbb
sub
aaa
test
repz
and
movs
mov
inc
mov
xchg
inc
into
ror
in
fld
mov
shl
sub
test
add
nop
xchg
pop
or
xor
push
nop
mov
dec
adc
dec
jmp
fnstenv
inc
push
lahf
inc
hlt
jg
les
pop
pop
lock
test
idiv
mov
loopne
cmps
pop
sub
dec
sbb
adc
inc
dec
add
(bad)
sub
jle
mov
push
aas
or
into
lods
fist
ss
mov
arpl
ss
(bad)
call
xchg
or
xor
adc
aas
sbb
inc
pop
in
test
jmp
lock
xchg
and
rcr
sub
sub
jg
push
popa
shl
mov
test
jge
mov
xlat
(bad)
and
inc
mov
cmp
mov
or
jmp
and
mov
xor
adc
int
jae
ins
sbb
rol
mov
and
sbb
add
lock
dec
jp
push
jge
cmp
dec
enter
and
loop
mov
popa
ss
inc
pop
out
shl
mov
sub
cs
ins
ss
aad
dec
rcr
ja
push
cmp
sub
push
mov
or
cmp
fisttp
or
mov
fbstp
icebp
sub
leave
push
dec
movs
(bad)
cmp
ss
adc
add
mov
inc
aaa
sub
lods
sub
xor
aam
push
(bad)
cdq
cmc
xchg
(bad)
sub
retf
mov
xchg
ins
inc
(bad)
mov
xchg
cmp
pop
sub
xchg
jne
push
pop
and
mov
mov
xchg
or
bound
fistp
pop
dec
icebp
push
(bad)
(bad)
pop
cmp
icebp
imul
in
jae
scas
retf
push
pop
inc
cdq
repnz
inc
mov
mov
icebp
int
push
test
retf
or
mov
mov
jne
jmp
jno
pop
xchg
adc
mov
fimul
movs
xchg
mov
push
add
mov
(bad)
or
jl
xor
enter
cmp
jbe
retf
(bad)
dec
es
(bad)
out
sbb
enter
aam
push
xor
aas
addr16
mov
test
mov
call
je
mov
xchg
aas
mov
aad
sar
adc
popa
or
adc
mov
mov
dec
xchg
and
cmps
xchg
xchg
movs
es
ret
push
dec
ret
add
lock
sub
sub
(bad)
enter
cdq
inc
push
(bad)
shr
cwde
movs
std
xchg
call
aas
scas
out
mov
inc
jl
test
pop
out
mov
add
div
dec
mov
and
and
in
pop
push
xor
jl
fdivr
(bad)
cmp
ret
or
stc
and
mov
rcr
jge
xchg
dec
mov
jg
adc
(bad)
out
cmps
fidivr
jno
js
lods
rcr
push
ret
add
(bad)
mov
adc
cmp
xchg
inc
(bad)
std
mov
cmp
div
ficom
(bad)
rcl
pop
ficomp
and
movs
cwde
add
lea
inc
mov
sbb
rol
ins
ret
std
mov
jmp
out
js
retf
add
hlt
lods
or
sub
fiadd
cmp
icebp
jmp
aam
and
cmp
ret
int
test
mov
pop
pop
call
mov
jae
sub
imul
mov
test
lock
fnstcw
mov
xlat
jae
das
add
lods
push
push
inc
ja
mov
lods
xchg
inc
mov
arpl
cld
xchg
push
hlt
(bad)
jg
sti
or
sub
out
(bad)
xor
xchg
dec
push
test
cmp
sti
ds
adc
sub
jp
xchg
int
ret
popa
jl
jmp
imul
adc
clc
dec
jmp
test
add
xor
jle
or
inc
jns
mov
sbb
(bad)
mov
arpl
outs
in
sub
jnp
sbb
cwde
or
ret
push
retf
repnz
pop
xchg
(bad)
repnz
hlt
jg
jns
sub
int3
mov
ret
ins
push
mov
add
or
xchg
xchg
cmps
fwait
retf
sub
add
xchg
or
fadd
xchg
or
mov
popf
pop
cmc
xchg
(bad)
cli
iret
add
xor
dec
ds
fild
mov
(bad)
retf
fdiv
pop
cld
fist
mov
or
cld
lahf
cli
or
mov
sbb
ret
pop
or
test
pop
pop
outs
sbb
cmp
push
(bad)
dec
gs
test
ins
or
mov
inc
stos
inc
adc
arpl
or
mov
xchg
inc
xchg
in
jne
mov
cmp
xor
out
mov
mov
(bad)
push
retf
push
bound
inc
enter
mov
mov
outs
out
inc
jbe
mov
test
mov
xchg
xor
lahf
or
ss
pusha
sub
dec
outs
push
mov
pop
fsubr
gs
lock
xchg
sub
push
fld
in
pop
(bad)
jmp
xchg
repz
in
cld
jmp
fwait
jle
push
repnz
xchg
adc
mov
in
xor
cmps
xchg
into
repz
cs
mov
movs
pop
fild
stc
mov
shl
loope
or
(bad)
fidiv
add
mov
dec
push
lea
add
jnp
pop
and
mov
sub
xlat
stc
push
fucomip
lea
xor
inc
xchg
icebp
test
xchg
(bad)
mov
pop
imul
jo
(bad)
sub
push
add
jbe
and
xchg
popf
xor
call
daa
popa
in
clc
ss
pop
bound
inc
mov
add
pop
jbe
adc
repnz
sbb
(bad)
stos
popa
(bad)
jmp
adc
(bad)
scas
(bad)
fsubr
adc
sbb
mov
(bad)
mov
loop
or
xchg
outs
ror
ja
inc
add
mov
popa
jnp
sahf
cmps
out
aad
cmp
jle
mov
jne
ss
xchg
retf
push
and
jmp
gs
xchg
jl
ins
pushf
and
add
idiv
rol
sbb
jp
repnz
push
xchg
adc
test
std
(bad)
mov
or
push
(bad)
mov
push
jl
test
mov
xlat
inc
xchg
dec
loope
stos
retf
call
adc
fld
lea
dec
and
sbb
xchg
adc
shr
cmps
xor
imul
mov
aad
push
adc
xchg
pusha
xchg
lds
mov
dec
(bad)
cs
sub
dec
fldcw
sbb
mov
mov
pop
cli
mov
cwde
inc
push
lods
dec
pop
cdq
(bad)
xor
dec
adc
mov
ret
pop
xchg
fmul
inc
cmp
cmp
mov
repnz
in
mov
out
push
jecxz
(bad)
in
add
and
imul
and
loope
or
jmp
xchg
and
ins
imul
loope
jo
(bad)
and
inc
out
dec
stos
fsubr
inc
sub
loope
add
push
jnp
add
adc
xor
shr
jge
mov
repnz
out
sbb
popf
int
push
outs
mov
popf
inc
xor
mov
enter
retf
mov
push
xchg
cmp
adc
pop
adc
fcomp
ret
dec
xchg
and
sub
push
popf
sub
xor
or
inc
out
xchg
xor
repz
pusha
mov
push
div
xor
inc
fcomp
pop
call
sbb
pop
and
pop
stos
(bad)
mov
pushf
int
jmp
inc
retf
cwde
aaa
jg
fistp
repz
sub
jmp
sbb
push
adc
push
dec
pop
jle
dec
adc
mov
push
fist
outs
stos
aas
sub
(bad)
push
cmps
int3
xchg
push
jb
enter
mov
jp
push
mov
icebp
push
inc
rol
repnz
jb
(bad)
add
cdq
inc
mov
rcl
shl
cmc
and
mov
mov
es
fdiv
loop
fsubr
mov
fld
pop
mov
xchg
mov
push
dec
loope
mov
lods
fstp
add
inc
xor
(bad)
pop
hlt
push
sahf
or
xor
cmp
mov
lods
sbb
ret
add
or
sbb
dec
retf
mov
iret
or
test
pop
adc
and
shr
rcl
loop
sbb
xchg
data16
in
(bad)
sbb
mov
imul
mov
fisub
pop
adc
mov
pop
scas
cmp
js
adc
mov
add
sbb
mov
push
sub
shl
jmp
and
sbb
std
dec
pop
push
jne
lods
jbe
or
scas
cmp
lods
lock
in
test
xor
repz
ret
aam
cmp
push
jo
(bad)
rcr
daa
call
in
push
pop
and
gs
and
mov
push
pop
xchg
xor
adc
leave
jmp
and
mov
xor
mov
xchg
or
leave
fisttp
test
mov
mov
jno
aam
adc
xor
addr16
cld
iret
aaa
aaa
sub
xchg
jecxz
test
arpl
adc
ins
ficom
cmp
fdiv
xchg
and
mov
rcr
push
fsub
push
mov
pop
and
cwde
mov
imul
xchg
outs
icebp
dec
movlps
shl
mov
mov
daa
push
adc
add
mov
dec
inc
ds
ss
fstp
imul
ror
jns
imul
gs
imul
gs
sbb
dec
adc
arpl
(bad)
test
stos
aaa
mov
add
std
push
scas
popa
retf
ins
ins
leave
imul
push
jmp
pushf
fwait
adc
cmp
dec
ficomp
in
add
push
out
repnz
nop
push
adc
jge
mov
sub
push
fiadd
(bad)
or
xchg
pop
inc
loop
loop
(bad)
mov
mov
int3
sub
dec
(bad)
in
sub
cmps
add
mov
push
(bad)
retf
cmp
fnsave
loopne
mov
fst
or
call
das
nop
dec
jecxz
outs
sub
cmp
jo
mov
imul
sub
iret
adc
mov
mov
xadd
pushf
push
adc
xor
inc
dec
xor
xchg
pop
or
out
inc
les
cmps
push
and
jge
sub
dec
sub
int3
mov
sub
out
inc
cmp
pop
test
cs
pushf
and
jmp
jmp
cmps
call
dec
call
push
fild
push
mov
das
push
or
mov
and
in
cld
or
int
xchg
ror
add
daa
lock
adc
mov
mov
dec
stc
pop
ja
data16
lock
fs
shl
rcr
imul
fimul
adc
dec
sub
fs
(bad)
and
or
inc
sub
repnz
cmps
jl
mov
repnz
push
adc
jmp
sub
push
jmp
push
cwde
pusha
cmps
inc
xchg
(bad)
add
stos
les
xor
mov
mov
cmp
jbe
jne
lock
mov
inc
sub
lock
add
mov
mov
les
push
icebp
dec
pop
aas
mov
jle
cmp
sub
lahf
pop
ret
xchg
aad
or
mov
int
addr16
fwait
add
push
mov
nop
arpl
ins
ror
(bad)
jnp
aaa
out
or
(bad)
cld
stos
ds
lock
adc
mov
out
mov
sbb
cmps
cmp
jo
pop
push
and
(bad)
adc
jle
loopne
add
mov
adc
fidiv
xor
repz
mov
jmp
sub
dec
sub
fwait
retf
fwait
mov
add
aad
xor
shl
sub
inc
ins
or
ret
daa
aaa
arpl
out
mov
int
clc
data16
adc
aam
jns
fcom
sub
mov
sbb
int3
jle
pop
cmp
pop
pop
pop
add
and
pop
mov
es
cwde
push
jle
mov
lgs
push
retf
pop
fsubr
cdq
mov
movs
mov
jb
pop
pop
pop
sbb
ja
pop
cmp
mov
ss
ret
stc
push
sub
pop
or
fisub
out
out
mov
xor
adc
or
pop
sub
cmps
mov
jae
dec
sub
js
jp
scas
jo
shl
sbb
pushf
pop
pusha
fld
add
jnp
(bad)
sub
and
adc
mov
rol
mov
in
or
out
icebp
ins
and
sub
inc
and
iret
in
pusha
push
push
leave
add
xor
retf
sub
push
pop
je
dec
addr16
jo
loopne
lods
xchg
std
movs
xchg
mul
xchg
adc
movs
pop
pop
aas
mov
addr16
movs
cli
arpl
inc
cmps
jp
nop
test
bound
daa
xlat
xor
jle
sub
inc
test
pop
add
adc
push
xchg
mov
repz
mov
ins
jg
and
loopne
jnp
popf
shl
mov
mov
clc
jmp
inc
jo
xor
mov
gs
lods
ins
in
and
outs
fcomp
stc
jmp
in
mov
iret
add
and
ret
popf
loope
xchg
or
cli
scas
pop
pop
pop
sbb
lock
inc
cmp
inc
mov
mov
ret
outs
scas
or
pop
stos
outs
scas
sbb
pop
shl
sub
mov
nop
adc
sub
jp
mov
repz
out
sahf
adc
or
popa
sbb
dec
outs
mov
jo
ss
in
rol
xchg
mov
int
sbb
mov
sti
sub
jge
mov
in
popa
sbb
sbb
push
in
popa
enter
rol
arpl
sahf
retf
arpl
mov
ja
ret
xchg
int
add
outs
ds
loope
cmp
aam
inc
sub
push
lock
stos
xlat
and
mov
sti
xchg
imul
retf
popf
push
(bad)
or
jmp
jmp
xchg
push
jp
pop
fcom
imul
dec
clc
sub
outs
inc
ins
and
fs
pop
out
(bad)
ins
test
dec
in
jg
arpl
mov
fs
lock
sti
loop
pop
(bad)
popa
push
je
mov
jbe
ficom
test
and
add
adc
aas
std
les
retf
test
sub
aad
mov
mov
repz
enter
push
and
adc
adc
outs
xor
loop
(bad)
scas
push
adc
jg
je
fld
cmps
imul
mov
pop
in
push
inc
test
dec
mov
sbb
or
scas
or
jae
popf
mov
push
push
pop
mov
jo
mov
sub
or
jae
leave
repz
jmp
adc
adc
repz
pop
fld
into
outs
push
ss
gs
adc
cdq
fnstenv
bound
(bad)
leave
cmp
fcom
(bad)
enter
mov
pusha
loope
test
push
adc
add
cmp
sub
inc
sub
aas
icebp
xchg
out
inc
call
(bad)
sbb
(bad)
dec
ret
iret
movs
outs
mov
fstp
sub
shl
ins
repz
dec
out
or
inc
jne
aas
pop
ret
popa
lea
in
(bad)
cmp
arpl
lods
ins
push
mov
sub
or
inc
lods
jl
std
fwait
fwait
xchg
dec
xchg
jo
(bad)
sub
cmp
outs
lock
jbe
mov
cdq
outs
mov
call
ins
xchg
pop
aas
ins
cmp
and
and
xchg
je
mov
xchg
push
inc
sbb
(bad)
lds
and
add
xor
js
fadd
in
ja
sub
rcl
cmps
ins
stc
push
(bad)
retf
mov
scas
inc
xor
inc
ins
inc
int3
icebp
xchg
mov
xchg
jb
test
lahf
(bad)
icebp
(bad)
stc
sub
jg
add
inc
or
cmp
and
jnp
and
or
js
add
add
push
cmp
pop
mov
stos
mul
daa
mov
mov
loopne
and
or
dec
mov
cld
inc
jb
ins
iret
int
jg
out
popa
pop
aam
not
jmp
push
fadd
jno
jmp
add
lds
popa
ror
std
test
pop
sub
je
test
gs
call
xlat
(bad)
daa
add
cmp
or
adc
icebp
push
xchg
popa
cmps
(bad)
mov
jns
inc
popa
pop
and
cs
ret
add
jmp
mov
test
jecxz
stos
mov
popf
je
sub
push
iret
lock
imul
or
push
cmp
and
sbb
pop
dec
mov
mov
mov
cli
sub
and
ror
scas
cmps
fisttp
and
add
sbb
cwde
or
sub
out
ret
adc
mov
or
in
ds
push
sti
cmp
loop
sbb
xchg
xchg
cmp
fcmove
add
bnd
ja
repnz
mov
sub
sti
dec
test
xchg
jge
popf
jno
dec
loop
dec
mov
push
pop
stos
ja
cld
ja
jne
adc
lods
lock
inc
sub
sbb
cmps
add
je
xlat
call
ss
(bad)
sbb
jl
in
inc
pop
jno
and
or
aas
ror
xchg
pop
pop
sbb
pop
fidiv
ds
cmp
cmps
xchg
dec
mov
fwait
mov
and
or
push
test
ret
push
sti
ins
xchg
pop
mov
inc
adc
icebp
add
mulps
xlat
jge
(bad)
repz
fisub
pop
push
movs
popf
push
mov
ins
mov
fld
jmp
in
rcr
pop
pop
push
not
cmp
xor
adc
xchg
or
int3
enter
xor
or
xlat
mov
adc
jo
mov
sbb
jp
push
fcom
sbb
mov
sub
sahf
cmps
inc
loopne
pop
inc
rcl
(bad)
outs
popa
cli
cmp
in
push
add
sbb
addr16
repnz
add
jae
or
ror
scas
(bad)
jb
outs
outs
call
sub
rcl
mov
movs
(bad)
ja
mov
fisubr
call
mov
(bad)
imul
sbb
out
xchg
dec
cdq
jnp
call
bound
inc
cmp
enter
xchg
test
cmp
dec
mov
test
cmp
xchg
adc
sub
mov
movhps
sbb
cmp
std
pop
leave
jp
cmp
ins
outs
ret
sub
mov
adc
adc
movs
pop
jge
adc
pop
inc
sbb
mov
lahf
xor
xchg
jge
push
ins
inc
movs
imul
in
sub
cmp
daa
pop
xor
ret
test
je
in
jbe
lds
or
add
ins
fidivr
popf
clc
xchg
jno
sbb
sub
push
dec
movs
daa
mov
push
xchg
mov
cmp
stc
cmp
pop
push
sbb
dec
pop
jno
aaa
fnstsw
scas
jmp
out
adc
(bad)
push
xchg
scas
mov
mov
adc
hlt
loop
fnstenv
xor
xchg
cmps
ss
movs
mov
mov
sbb
(bad)
sbb
ins
ss
jl
push
rcl
jnp
retf
shl
mov
mov
mov
jo
shr
out
push
lea
xchg
jmp
pop
dec
(bad)
mov
addr16
mov
aam
test
leave
adc
ror
mov
test
pop
mov
mov
mov
das
sub
mov
pop
push
idiv
in
and
mov
cs
adc
xor
push
mov
mov
jns
pop
and
inc
out
and
cld
jno
test
fld
aaa
jecxz
fcomp
and
cmps
or
sub
jnp
les
outs
cmp
mov
adc
jmp
leave
loopne
popa
cmovbe
mov
or
aam
jge
out
loope
jno
loopne
mov
pop
xor
jns
mov
ss
jne
jle
sub
sbb
ror
sbb
call
push
jne
fcmovb
fsub
pop
adc
or
call
scas
pslld
pop
or
and
cwde
pop
inc
mov
cs
ror
inc
add
pushf
icebp
dec
or
jne
cmp
push
sub
imul
mov
mov
sahf
cmp
cmp
inc
and
mov
std
test
cli
mov
sub
cmp
xor
xchg
fild
ins
mov
add
cli
(bad)
mov
jne
ret
in
lods
jb
aas
mov
sar
mov
jne
out
and
sbb
cmp
pop
cld
imul
out
mov
ins
xchg
add
das
shl
mov
xchg
lods
sbb
push
retf
push
dec
jmp
sbb
ret
stos
xchg
adc
cld
jle
cmp
pcmpgtd
dec
ror
pop
push
inc
sub
shr
sub
add
xchg
pop
das
fimul
pop
jmp
(bad)
fst
enter
lahf
sub
ds
mov
xor
fild
(bad)
sti
pop
adc
fisub
xor
ret
or
jno
into
mov
inc
push
pop
retf
leave
mov
mov
jg
fldcw
cmc
imul
jmp
pop
jb
(bad)
xchg
ffree
je
repnz
sahf
push
sti
in
mov
sbb
mov
dec
out
jb
cwde
jae
dec
scas
enter
test
ja
int
repz
mov
xor
lods
pop
enter
xor
pop
push
test
fiadd
das
int3
ret
lock
(bad)
leave
mov
test
stc
cmp
xchg
pop
int
xchg
repz
mov
call
jl
popf
jbe
pushf
daa
pop
jne
fs
es
test
sbb
adc
pushf
inc
dec
enter
data16
shl
cmp
push
mov
daa
out
cli
clc
(bad)
xchg
daa
(bad)
sahf
loope
(bad)
fcomp
jl
sbb
mov
sbb
in
and
js
jmp
push
int3
jb
cmp
xchg
shr
push
push
push
xor
aaa
xlat
push
jne
pop
add
iret
mov
std
inc
sbb
push
jecxz
push
and
cmc
fiadd
or
movaps
cs
sbb
out
xor
fwait
jns
mov
add
adc
pop
iret
(bad)
ds
sub
icebp
dec
cld
mov
mov
nop
push
ds
int3
pop
retf
call
pop
out
jns
pop
fcomp
or
cld
fbstp
push
pushf
daa
rol
lock
cld
mov
sub
add
dec
sbb
pop
arpl
and
pusha
lds
inc
(bad)
adc
ret
call
mov
mov
and
and
lods
adc
int
or
pop
jno
sbb
in
xor
xor
scas
hlt
xchg
std
hlt
and
pusha
mov
out
fwait
mov
fld
adc
cmp
es
imul
lahf
arpl
ss
cmc
fimul
movs
dec
pop
pop
pop
mov
add
punpckhwd
jne
mov
enter
and
xor
and
fstp
scas
and
push
cmc
or
xchg
xchg
je
push
stc
loop
adc
mov
jo
mov
test
pop
inc
pop
lods
jne
fistp
inc
call
xor
pusha
xor
cmp
push
aad
adc
fwait
or
jnp
and
cwde
cmp
and
dec
cmp
mov
mov
rcr
sbb
ret
aaa
cmp
nop
or
push
pop
inc
xchg
out
inc
lods
rcr
lahf
and
push
call
out
mov
lock
push
jmp
push
add
fcomp
sar
sti
xor
push
nop
in
std
mov
pop
sti
outs
hlt
mov
int3
push
sub
or
ja
mov
pop
xchg
test
bound
mov
out
lock
retf
cmps
adc
xchg
push
fsub
jo
sbb
mov
imul
stos
sub
test
fld
stos
in
jno
mov
mov
lods
and
ss
aas
daa
or
cmp
(bad)
adc
sub
leave
out
popa
in
js
xchg
push
push
(bad)
pop
mov
add
and
push
pop
ja
mov
and
mov
or
(bad)
xor
push
cmp
jo
icebp
leave
push
adc
cmps
mov
xor
aam
adc
call
push
fstp
inc
loope
repz
add
pop
xor
sar
add
mov
sub
mov
xor
repz
fdiv
les
inc
add
xor
push
fwait
push
out
add
js
mov
scas
inc
mov
sbb
or
test
jno
mov
test
stos
mov
adc
ror
in
xor
adc
fwait
sbb
(bad)
ins
arpl
shr
(bad)
hlt
enter
xor
je
imul
mov
adc
into
or
jp
arpl
sub
dec
push
icebp
mov
jb
and
sbb
out
and
adc
pop
cli
js
stc
mov
xchg
pusha
push
jmp
cmp
int3
sbb
int3
aaa
cmp
sbb
and
add
push
add
fidiv
lea
push
aam
adc
not
movs
inc
or
xor
pusha
iret
mov
dec
cdq
and
pop
(bad)
or
adc
test
ror
xor
adc
aas
dec
mov
test
xor
in
(bad)
les
adc
and
mov
cli
pop
in
data16
jo
arpl
test
daa
mov
pop
mov
jne
mov
or
jge
cmp
jbe
adc
xchg
push
cmp
or
das
hlt
inc
push
mov
dec
push
pop
nop
popf
jbe
arpl
and
or
popa
cmp
jnp
not
mov
in
loop
xchg
inc
into
inc
(bad)
call
mov
clc
(bad)
idiv
xor
fwait
mov
(bad)
aam
xor
stos
int3
jno
jg
inc
fild
pop
inc
adc
sbb
xor
stos
add
cmc
(bad)
pop
push
or
xor
jbe
movs
adc
shr
inc
cmps
pop
cld
mov
inc
cli
xchg
cmp
cdq
mov
or
add
into
es
dec
fistp
outs
sbb
mov
dec
aas
push
popa
jecxz
or
(bad)
and
mov
pop
dec
jns
adc
sbb
loop
jne
cmp
xor
xchg
sub
mov
mov
cmp
pop
retf
(bad)
cmc
or
movs
cmp
inc
or
loop
aam
pop
sbb
ja
cmp
es
call
enter
mov
cmp
mov
push
push
dec
add
mov
xchg
and
adc
mov
adc
lahf
je
into
cmps
loop
pop
stc
lahf
mov
rcr
or
sbb
jg
loop
repnz
sar
dec
call
jmp
out
ret
push
not
stos
sbb
rcl
test
iret
xor
stos
data16
fist
retf
fcomip
movs
daa
mov
push
jb
push
clc
push
dec
out
xchg
mov
sbb
mov
jecxz
scas
xchg
mov
(bad)
mov
movs
xchg
sub
pop
mov
lods
push
xor
sbb
rcl
mov
mov
pop
retf
mov
mov
scas
loopne
pop
mov
and
ror
pushf
clc
pop
push
mov
imul
movs
bound
or
sti
ins
stos
cwde
pop
adc
loop
push
adc
mov
sub
adc
stos
repnz
mov
and
lds
pop
mov
jmp
imul
mov
bound
movs
pop
jl
icebp
inc
nop
xchg
sub
aad
outs
add
sub
lock
addr16
in
data16
sbb
jmp
jne
(bad)
jle
mov
jp
pop
lods
push
ins
rcl
pushf
xchg
fsubr
ss
sbb
ins
push
jl
ret
cmp
out
cmc
lods
sbb
fstp
mov
mov
sar
ret
push
(bad)
xchg
ror
sub
imul
and
stos
(bad)
rcr
or
sub
into
(bad)
cmp
dec
sub
pushf
loope
mov
push
dec
test
ror
mov
rol
jecxz
sub
loope
or
xchg
mov
imul
lahf
adc
cs
jns
or
lock
pushf
mov
sbb
add
ss
int3
js
jecxz
shl
push
cmc
ficomp
push
jbe
fidivr
mov
xor
adc
push
mov
test
mov
push
xor
pop
jle
data16
stc
mov
movs
inc
jle
and
mov
aam
repnz
xlat
push
js
mov
add
in
in
adc
push
fsub
mov
cld
jle
or
or
sub
jns
daa
pop
pop
mov
aas
retf
popf
cs
jno
dec
cmc
stc
repnz
test
retf
sbb
stos
xor
pop
ret
jns
cmp
mov
mov
and
mov
fistp
test
or
inc
ja
add
add
xor
loope
loope
cdq
out
loope
jns
imul
or
sbb
(bad)
div
hlt
aad
fucom
mov
xadd
enter
stos
add
(bad)
adc
sub
pushf
std
adc
les
clc
loope
idiv
push
push
daa
es
push
and
cmps
fnsetpm(287
sbb
scas
dec
inc
nop
leave
push
mov
out
mov
jge
inc
dec
or
shr
mov
ins
int3
or
or
push
xor
push
adc
rcl
xchg
ror
sub
into
mov
push
mov
inc
fdivr
jne
and
retf
fild
xor
in
mov
dec
push
bound
hlt
ins
xchg
stos
shr
std
pop
(bad)
jmp
addr16
imul
jb
sbb
sub
add
fstp
in
jmp
idiv
call
fld
mov
cmc
mov
sub
popf
inc
and
out
ins
dec
(bad)
test
sub
out
popa
mov
push
imul
or
jge
add
xchg
push
sar
(bad)
jmp
and
inc
sub
xor
lock
addr16
jmp
std
loopne
mov
adc
call
xchg
push
mov
or
push
dec
and
pop
stos
sahf
jne
movs
sar
and
iret
repz
out
mov
or
jo
mov
les
rcl
(bad)
dec
add
sub
ja
mov
dec
scas
and
cmp
push
xchg
xchg
push
les
shl
mov
xor
jl
or
sub
push
mov
test
cmp
push
pop
pop
movs
sub
and
or
adc
js
lods
test
arpl
rcl
adc
ja
mov
xchg
mov
xor
scas
arpl
sub
xor
jge
aam
stos
jb
movs
jl
and
iret
inc
loope
arpl
adc
mov
retf
popf
das
xchg
cmp
int3
xchg
adc
fcomip
cmps
sbb
push
jmp
fsubr
push
xchg
sbb
iret
aaa
mov
jg
sbb
mov
fld
dec
push
adc
out
sub
xor
xor
inc
popf
pop
mov
xor
jp
mov
mov
inc
inc
mov
pop
mov
clc
das
pop
(bad)
mov
add
adc
xchg
ss
sub
xchg
jecxz
pusha
jns
fmul
inc
dec
xchg
rcr
and
push
fcomp
mov
jno
push
and
inc
out
mov
jbe
mov
xor
mov
ret
faddp
lods
icebp
jns
or
das
and
or
sbb
in
int3
inc
sub
dec
or
sahf
inc
ret
(bad)
fsubr
ins
pop
push
xchg
rol
adc
aad
xor
xchg
lock
xchg
leave
add
call
loopne
iret
and
clc
sbb
cdq
lds
pop
sbb
das
fsubr
push
inc
or
mov
dec
loopne
sbb
sar
cmp
xchg
int3
stos
pop
jo
movs
mov
jge
icebp
push
test
shr
fld
cmc
add
jnp
ins
mov
cmp
cwde
fmul
retf
sbb
pop
jmp
out
or
mov
add
pop
jg
inc
xchg
popa
das
cmc
call
loopne
mov
xchg
fbstp
in
retf
xchg
mov
mov
and
stc
in
mov
xchg
imul
jne
test
jne
imul
fisttp
arpl
das
adc
add
mov
dec
icebp
mov
mov
or
cmp
dec
fnstenv
fisub
std
cli
inc
xchg
iret
adc
sub
pmulhw
lahf
stos
dec
pop
pop
lahf
lods
gs
push
cmc
and
xor
stos
jmp
and
adc
or
cli
sub
shl
sub
repnz
jb
sub
mov
mov
enter
cmp
rol
inc
jo
iret
out
xor
and
int
clc
cmp
and
jne
imul
iret
inc
loopne
iret
data16
and
pop
jl
push
add
popa
dec
push
cmp
test
pop
fsub
mov
mov
mov
xchg
lahf
pop
xchg
sub
push
inc
ins
jbe
cmp
repz
js
data16
pop
add
push
repz
pop
dec
ret
push
mov
xor
pop
sar
in
dec
mov
push
xor
or
sub
cld
sub
repnz
cmp
out
outs
std
dec
outs
mov
sub
addr16
push
push
dec
jp
rcl
add
outs
mov
call
xor
push
pop
or
daa
js
outs
mov
jbe
push
and
and
rcl
jb
out
push
push
mov
repnz
mov
pop
ins
into
iret
test
fs
dec
sub
out
hlt
cmp
shr
dec
cmp
or
mov
dec
add
lahf
pop
and
pop
xchg
jne
call
rcl
mov
daa
sahf
pushf
ja
sub
scas
adc
sti
std
pop
xchg
setp
ss
fmul
mov
jp
das
inc
mov
and
sbb
and
add
lock
fstp
mov
test
out
push
test
cli
jae
push
mov
jae
cmovns
push
sub
cld
cmp
or
add
loope
jp
sbb
shl
imul
pop
mov
push
sahf
cmps
stc
addr16
sahf
xor
fcmovnbe
mov
inc
or
aaa
imul
fs
ja
push
mov
fld
jmp
cmps
fsub
hlt
hlt
inc
and
xor
jno
in
outs
or
mov
jno
cmps
mov
adc
pop
cmps
ret
fmul
call
push
mov
xor
cmp
mov
(bad)
in
jl
pop
mov
jle
pop
jecxz
cmp
cmps
das
ins
cmp
sahf
mov
push
add
das
jmp
adc
mov
es
mov
loope
ret
lods
mov
inc
pop
jae
rol
lahf
sub
xchg
loop
xchg
xchg
mov
int3
scas
jmp
(bad)
xor
imul
inc
jge
movs
je
sbb
push
in
sti
cmps
mov
xor
mov
test
mov
pop
(bad)
xlat
stos
(bad)
jmp
sbb
push
fucomip
mov
cmp
das
xchg
dec
sub
imul
not
jle
pop
jp
dec
les
int
pop
lds
test
add
leave
inc
jmp
push
and
sub
out
outs
sbb
dec
cmp
imul
neg
jmp
and
mov
pop
xchg
cmps
mov
sbb
cmp
(bad)
lock
iret
push
sahf
out
aam
inc
adc
(bad)
and
fadd
jbe
mov
xchg
sub
push
movs
aad
adc
push
dec
jb
cwde
push
xchg
hlt
and
cmp
das
jp
imul
sbb
inc
rcl
sbb
je
fcmovu
pop
cmp
push
cld
fidivr
ret
adc
inc
mov
out
mov
(bad)
fstp
test
fisttp
bound
push
sti
dec
or
mov
pop
sbb
nop
or
(bad)
pop
shl
int3
jne
sbb
push
xor
inc
js
imul
pusha
mov
pop
xchg
mov
in
inc
mov
bound
rcl
ins
sub
xlat
repnz
mov
test
mov
in
xchg
xor
push
sub
adc
es
jns
retf
xchg
inc
inc
int
dec
mov
fstp
push
adc
leave
or
rol
push
jmp
mov
inc
repnz
cwde
pusha
push
cli
xlat
fwait
mov
es
fwait
adc
jae
retf
inc
and
jns
ss
imul
pop
ret
mov
pushf
inc
jge
mov
xor
adc
enter
(bad)
rcl
cdq
adc
ins
fstp
cwde
mov
adc
jp
call
jmp
adc
xchg
xchg
loop
imul
xor
jg
pmuludq
pop
scas
mov
lods
repz
std
repz
cmp
mov
mov
in
dec
pop
adc
push
jp
addr16
repz
pop
push
xchg
ret
sbb
cdq
test
ins
lahf
cmp
adc
data16
les
dec
inc
xchg
jb
xchg
pop
and
dec
mov
push
(bad)
ins
test
test
pop
clc
mov
pop
xchg
(bad)
test
out
sbb
cmp
nop
das
jecxz
and
push
adc
and
ret
pop
adc
hlt
outs
in
xor
test
or
fbstp
in
imul
mov
mov
sbb
or
fstp
lock
adc
push
ja
(bad)
or
sbb
inc
mov
dec
xor
xor
ror
jne
push
push
mov
addr16
xchg
cwde
and
popa
cmps
sbb
aas
rol
or
xchg
in
popa
pop
mov
enter
push
lock
sbb
icebp
xor
sub
cs
cmp
push
dec
mov
enter
xchg
into
mov
add
pushf
jbe
dec
(bad)
aaa
sbb
cmp
jb
xchg
push
or
xchg
loopne
inc
dec
dec
test
lods
cld
add
pop
bnd
cmp
shr
outs
cmc
add
push
data16
ficom
jp
xchg
ret
mov
fisttp
out
adc
pop
mov
not
inc
xor
and
adc
lods
xor
inc
mov
xchg
nop
mov
cs
adc
or
mov
mov
fldenv
push
push
mov
fnsave
sub
movs
mov
lahf
mov
gs
sub
stc
push
(bad)
call
cwde
pop
inc
leave
xor
les
scas
xor
sub
xchg
test
xor
and
pop
xchg
and
adc
push
(bad)
cmp
pop
popf
sahf
int
fmul
hlt
xor
addr16
into
or
xchg
cmps
push
call
adc
sbb
iret
clc
test
cdq
push
jmp
pusha
jecxz
int3
push
addr16
mov
push
mov
pop
xchg
push
js
out
push
or
test
test
cwde
loopne
cmc
jmp
into
jns
iret
pop
out
call
xor
jmp
lahf
call
and
inc
in
and
mov
add
fnstenv
add
cmps
mov
push
test
mov
xor
push
lds
jmp
cmp
repnz
add
xchg
scas
dec
inc
cwde
ds
xor
jne
aas
aaa
jns
inc
inc
fs
xchg
fs
cmovbe
xchg
repnz
or
or
dec
mov
xchg
sbb
adc
mov
(bad)
in
ret
or
xchg
popf
fs
mov
rol
or
push
xor
push
cmp
xchg
repnz
cmp
mov
xchg
out
sahf
and
ja
jo
sti
mov
test
push
inc
ret
cmps
xchg
sbb
ins
lods
dec
jg
test
out
adc
jl
add
jns
push
mov
ret
out
aam
and
sbb
fwait
arpl
push
outs
aas
shl
xor
jo
dec
jmp
add
fsubr
outs
sub
mov
and
das
adc
out
mov
inc
push
cmp
push
sbb
and
mov
jb
xchg
xchg
xor
inc
(bad)
jmp
cmp
jne
mov
sub
pop
dec
pop
ins
jno
and
in
inc
push
cs
das
sub
mov
int3
sti
nop
icebp
pop
xchg
dec
or
mov
movs
cmp
(bad)
daa
(bad)
push
sti
pop
push
sbb
adc
sub
(bad)
pop
int3
cmps
cmps
cmps
xchg
es
mov
inc
jle
out
mov
xchg
jmp
adc
sub
mov
xor
popf
add
ds
xor
leave
shl
fistp
and
xchg
call
mov
pop
(bad)
addr16
pushf
retf
mov
sbb
bts
mov
pop
fsub
xor
pop
repnz
(bad)
adc
pop
popa
daa
jns
jns
mov
out
push
subps
mov
aas
pushf
mov
out
in
rol
or
loope
xchg
mov
mov
or
xor
repz
call
dec
dec
sbb
lods
test
inc
xor
loop
adc
inc
imul
cmp
icebp
xor
popf
psubb
nop
xchg
clc
inc
xor
or
es
adc
fiadd
sahf
dec
dec
adc
mov
pop
cmp
lahf
ins
push
pop
mov
outs
(bad)
mov
aaa
pop
inc
repnz
retf
ins
in
(bad)
iret
movs
in
rcl
ins
cmps
jns
cmps
(bad)
cmp
(bad)
mov
sar
ja
adc
adc
mov
movs
xchg
mov
and
mov
pop
ins
into
das
mov
pusha
mov
or
push
cs
fs
mov
in
in
adc
push
outs
stc
and
cli
shl
scas
jno
inc
fs
in
(bad)
scas
call
mov
out
sbb
cmps
shr
das
call
jmp
aas
cmp
loopne
xchg
shl
call
aaa
les
push
jb
dec
sbb
pop
(bad)
or
in
mov
sub
(bad)
adc
cmp
cmp
test
or
mov
pop
rcl
inc
sbb
aaa
inc
push
mov
pop
add
jge
(bad)
hlt
into
add
push
call
and
(bad)
adc
and
or
dec
cmp
adc
push
int
xchg
jle
inc
push
cmps
mov
test
iret
mov
sbb
cmc
movs
mov
dec
imul
sub
(bad)
jl
xor
jbe
cdq
dec
ret
sbb
jmp
in
sub
mov
test
jo
into
jmp
push
leave
mov
mov
out
fdivr
dec
add
jl
push
push
dec
and
retf
adc
sar
mov
jae
add
pop
pop
pop
inc
js
adc
push
div
jo
jl
fdivr
inc
cmp
cmp
push
fild
jge
test
addr16
or
xor
aaa
pop
sbb
push
test
call
cs
ins
test
jmp
pop
or
rcl
push
ret
push
or
clc
mov
les
push
pop
pop
mov
mov
xchg
fcom
lods
sbb
inc
xor
add
jl
sub
cmp
push
inc
shl
fiadd
mov
cdq
mov
sub
adc
adc
stc
dec
pop
sub
mov
mov
add
mov
fs
aaa
push
mov
push
push
cmp
jo
adc
into
add
in
in
or
imul
test
rcr
imul
push
mov
sub
xchg
jnp
sbb
int
jnp
push
call
mov
in
cmp
into
sbb
push
clc
push
sub
in
outs
cld
test
pop
clc
xor
movs
mov
push
inc
lds
push
jl
enter
cwde
adc
cs
je
xor
xchg
add
leave
cmps
ror
pop
aad
sub
mov
call
mov
push
push
or
imul
sbb
pop
popf
xor
aad
xchg
jno
aad
push
mov
cmps
mov
add
push
push
les
add
(bad)
fs
pusha
lods
ds
sbb
loope
mov
jns
xchg
mov
les
push
retf
pusha
and
xor
push
cmp
dec
ja
jmp
add
xchg
xchg
inc
lock
adc
mov
in
aad
adc
inc
mov
out
outs
xor
(bad)
pusha
xchg
bound
das
xor
bswap
test
test
fsub
push
popf
js
cmp
xor
sub
mov
pop
mov
add
xchg
push
clc
repnz
imul
addr16
jbe
jge
inc
mov
test
out
imul
ret
cmps
loopne
mov
mov
push
cld
and
and
push
push
bound
add
out
test
pop
cmps
sbb
adc
(bad)
nop
sub
sbb
adc
xchg
sar
sub
call
pop
xchg
jbe
scas
aaa
rcr
out
mov
jne
ret
sub
(bad)
jne
xchg
jns
mov
jp
mov
scas
fnstcw
(bad)
das
push
cmp
adc
aas
add
push
jmp
rol
adc
mov
xlat
loope
xchg
pop
mov
mov
out
mov
mov
popa
sbb
jns
aas
cld
xlat
dec
popa
xchg
xor
pop
xchg
popf
aas
cmp
pop
adc
call
test
sbb
(bad)
loopne
jbe
dec
xor
out
out
sbb
ins
scas
cmp
adc
cli
gs
xchg
or
mov
enter
xor
cdq
adc
loop
mul
sub
es
leave
inc
jp
es
sbb
or
loopne
loope
(bad)
cmp
je
inc
xchg
mov
sub
sub
mov
dec
ds
(bad)
stos
stos
sbb
cmp
cmps
cli
pop
int3
add
xchg
out
jecxz
jmp
and
xchg
add
shl
push
or
mov
inc
leave
shl
ins
hlt
add
xor
mov
xchg
out
shl
leave
js
xchg
arpl
popa
xchg
jo
aam
std
cmp
aad
push
adc
stc
pop
arpl
arpl
xor
push
sub
mov
movs
daa
mov
sub
xor
fmul
test
jp
or
mov
int
ror
inc
out
gs
sub
test
dec
int3
lock
aad
cmc
ficom
pop
out
fnstsw
add
nop
std
leave
pop
das
push
pop
sbb
and
mov
mov
stos
call
shr
cmp
push
xchg
jnp
pop
(bad)
mov
mov
or
ins
(bad)
lds
mov
push
jo
jmp
mov
sbb
enter
(bad)
pop
push
push
into
mov
call
pop
jno
addr16
pushf
loopne
mov
les
mov
mov
(bad)
sbb
mov
dec
dec
data16
jo
pop
repz
sbb
inc
pop
xchg
mov
mov
mov
pop
add
cdq
(bad)
fld
adc
sbb
dec
sbb
cs
jp
or
stos
stc
loopne
mov
xchg
retf
and
arpl
pusha
repnz
retf
mov
mov
jge
sahf
push
add
cld
jnp
fsubr
jecxz
mov
rcr
and
data16
push
adc
cmps
pop
mov
shl
in
jnp
pop
(bad)
std
mov
inc
enter
mov
popf
cmp
neg
pop
aas
inc
pushf
aas
fisubr
xchg
push
push
sti
mov
pop
loope
xchg
jmp
cmp
push
cmps
xchg
or
fucomip
sbb
push
cli
int3
ss
sbb
(bad)
pop
cld
jno
push
dec
in
pop
pop
sub
in
dec
and
(bad)
sti
sub
jb
cld
or
cmp
mov
push
sbb
push
xchg
mov
push
pop
imul
sbb
and
rol
rcr
lods
leave
dec
push
in
jmp
mov
xchg
sbb
pushf
daa
pop
xor
push
aam
pop
fwait
xchg
(bad)
(bad)
xlat
inc
scas
pusha
mov
jp
adc
enter
mov
mov
jo
mov
es
adc
mov
inc
icebp
retf
push
mov
push
call
ret
cmp
outs
push
jae
inc
xchg
and
push
cmp
add
pop
gs
loope
sbb
mov
neg
in
and
pop
sbb
gs
jl
dec
ret
jmp
(bad)
idiv
cld
shl
outs
push
add
ret
cmp
in
jg
call
retf
daa
retf
imul
outs
push
dec
push
sub
retf
push
pop
add
stc
aam
icebp
(bad)
std
jg
retf
bound
mov
inc
xor
iret
or
jnp
pop
dec
or
add
push
imul
push
xchg
int3
mov
test
mov
sbb
mov
jl
loope
xchg
adc
retf
mov
(bad)
cmp
jae
mov
dec
(bad)
xor
cmp
jno
inc
out
pop
mov
xchg
sbb
push
shr
hlt
inc
xor
sbb
dec
ins
enter
cli
movs
inc
test
and
mov
xchg
adc
or
dec
outs
leave
daa
mov
std
inc
inc
addr16
mov
jo
aam
pop
or
mov
leave
and
push
pop
test
mov
push
inc
dec
retf
int3
sahf
stos
js
stc
sbb
pop
adc
xchg
add
dec
pushf
dec
sub
std
adc
repz
pushf
fisttp
push
mov
sbb
(bad)
dec
iretw
mov
mov
ja
adc
out
std
out
adc
pushf
ror
(bad)
idiv
xor
clc
les
aas
rcr
add
push
ds
jp
retf
(bad)
cld
test
mov
jb
jne
adc
mov
adc
mov
mov
sar
pop
add
mov
pop
sub
lea
mov
out
cli
or
jno
jp
scas
psrad
xor
call
cmp
mov
leave
aas
inc
adc
or
or
outs
adc
aad
arpl
or
xor
or
push
mov
dec
lahf
ins
pop
loope
sub
xchg
clc
bound
lds
mov
mov
sub
mov
jo
(bad)
inc
mov
scas
ret
jnp
popaw
adc
loopne
xor
sti
push
test
test
aad
push
cmp
jbe
mov
add
shl
mov
push
xor
push
out
daa
mov
pop
(bad)
hlt
mov
mov
ja
fisubr
jmp
xchg
pop
fdivr
push
call
cmps
mov
push
jnp
or
xor
or
loope
mov
push
rcl
fwait
and
rcr
scas
mov
scas
mov
fcmovne
(bad)
fisub
shl
daa
inc
cmp
inc
push
imul
mov
aam
rol
mov
mov
push
(bad)
fild
push
sbb
pop
pop
das
pop
jmp
sahf
movs
xchg
or
mov
in
push
pop
add
movs
cwde
pop
mov
xchg
jno
inc
xchg
retf
(bad)
and
cmp
pop
fwait
stc
fisttp
pop
xchg
ds
gs
jb
jge
call
or
stos
arpl
and
fiadd
inc
dec
sub
mov
loopne
mov
pop
jnp
jg
fistp
mov
(bad)
jae
dec
mov
jmp
push
adc
in
sub
scas
mov
jge
mov
xchg
and
rcl
sbb
and
sbb
jmp
cmps
add
pop
xchg
and
jle
xor
shl
test
adc
sub
bound
dec
in
jbe
pushf
call
bound
in
loopne
jmp
mov
cmp
call
xchg
jg
xor
add
out
in
add
adc
lahf
adc
xor
arpl
dec
fdiv
cmp
mov
(bad)
push
fnstenv
cmp
ror
mov
xchg
push
sub
fstp
push
jmp
icebp
xor
stos
sub
fsubr
(bad)
pop
test
stos
xchg
jg
jg
mov
mov
retf
adc
sub
cs
out
push
adc
addr16
adc
cmc
push
(bad)
sub
jnp
mov
cmp
loop
out
(bad)
iret
std
jge
adc
or
leave
add
mov
dec
jns
sub
jmp
pop
dec
repz
inc
push
jno
sbb
aaa
jo
ret
jbe
fdivr
bound
std
arpl
adc
or
or
mov
aad
sahf
icebp
dec
dec
dec
mov
sub
das
popa
popf
rcr
mov
push
aaa
in
sbb
jmp
cwde
jle
adc
popf
fbstp
out
xchg
adc
aam
xor
inc
xchg
push
std
(bad)
cmp
outs
fnstenv
push
push
cmps
jns
or
loopne
stc
inc
inc
jmp
mov
push
xor
(bad)
mov
and
xchg
mov
push
loope
sbb
and
xor
jecxz
movs
sbb
sbb
inc
lahf
pop
inc
xchg
cmp
dec
fs
mov
jmp
push
mov
ss
test
ins
sbb
cld
xor
sar
(bad)
lods
adc
xchg
sbb
in
(bad)
and
sbb
popa
sub
outs
aaa
ins
mov
fisub
adc
cmp
and
dec
lods
pop
inc
and
and
mov
(bad)
sar
nop
mov
sub
rol
mov
and
(bad)
pmulhw
pop
inc
cs
std
push
into
xchg
sub
leave
cmps
push
cwde
ror
or
cmp
int3
bound
es
pop
dec
add
inc
lods
xchg
xchg
test
pop
jle
stc
int
mov
pop
add
push
lahf
stos
(bad)
movs
mov
or
and
or
mov
loope
add
and
mov
or
adc
pop
std
xchg
mov
xchg
dec
sbb
into
pusha
dec
add
cmp
and
fldpi
fstp
hlt
cmp
je
pop
lds
mov
out
xchg
dec
cmp
jo
sahf
cmp
xchg
push
daa
mov
pushf
or
and
bound
sbb
dec
xchg
xchg
aad
xor
cwde
or
jg
fstp
scas
movs
and
and
das
mov
loop
jns
mov
or
jno
fsub
pop
jnp
scas
les
xor
scas
inc
push
adc
lods
push
sbb
lea
scas
(bad)
(bad)
push
ins
aad
sbb
xchg
jbe
xchg
mov
xchg
rcl
jmp
fsub
rol
mov
cli
mov
inc
repnz
xor
jge
cdq
jno
gs
daa
lea
sahf
mov
pop
adc
cmc
push
rcl
xchg
leave
out
fnstcw
pop
iret
pusha
ret
cmp
ins
fisubr
mov
imul
lods
push
sbb
fwait
mov
lods
jmp
popa
mov
repz
repnz
adc
or
fstp
loop
xchg
aas
push
push
stc
sbb
shl
in
add
dec
sub
adc
ret
pop
adc
push
mov
push
dec
int
lahf
pop
sti
gs
xor
aad
fidivr
fs
pop
(bad)
fsub
mov
inc
cmp
cdq
adc
sahf
jno
push
push
(bad)
aaa
sbb
jbe
test
cmc
stos
mov
cmp
and
mov
mov
or
mov
add
or
add
fbld
pop
and
not
(bad)
jmp
mov
xchg
cmp
imul
xchg
gs
aaa
mov
es
mov
fisttp
(bad)
xlat
push
je
stos
and
mov
fisub
movs
leave
dec
add
inc
outs
mov
pop
js
out
pop
and
add
cmp
sub
sub
xor
rol
push
shl
(bad)
jne
dec
stos
mov
xor
sub
ins
adc
mov
mov
pop
pop
sbb
inc
pop
dec
movs
js
scas
and
pop
push
and
add
fsubp
clc
scas
sbb
add
jo
into
sbb
daa
xor
jne
inc
mov
jns
inc
cld
shl
aas
jmp
xor
test
push
or
sub
cmp
fld
add
xor
daa
xchg
sbb
push
ins
mov
jns
pop
pop
cmp
rcr
jle
cmps
ret
leave
rol
xchg
loope
jmp
sahf
xchg
mov
add
dec
dec
or
test
add
sti
arpl
pop
into
sub
dec
cmp
shl
shl
mov
adc
xchg
jb
nop
dec
ja
fistp
push
out
push
jno
jmp
inc
sar
test
scas
outs
pop
push
mov
ins
js
lods
(bad)
push
hlt
push
std
push
pop
hlt
jbe
(bad)
pop
jmp
pop
stos
mov
add
sbb
jae
(bad)
loopne
cmp
xchg
xchg
add
xchg
in
nop
or
stos
and
lahf
adc
sbb
icebp
push
jge
stc
das
or
ins
mov
cmp
ins
add
mov
mov
and
int3
push
ss
xchg
add
mov
fcomp
in
test
rcr
cmp
mov
add
data16
movs
test
loop
scas
lods
mov
jmp
retf
and
ja
fbstp
aad
pop
shl
aaa
push
loope
mov
shl
jmp
cmp
out
jo
xchg
add
nop
test
sub
push
mov
jmp
fst
sti
(bad)
xchg
je
jl
das
pop
xchg
idiv
out
and
jo
fisubr
(bad)
fbld
call
jo
nop
and
bound
mov
jmp
shl
outs
xchg
dec
fdiv
mov
pop
nop
xlat
aaa
mov
idiv
dec
fsub
mov
push
retf
pop
aaa
loop
cmp
cvtps2pd
push
add
cmp
gs
or
xchg
mov
add
es
sti
retf
sahf
out
sti
inc
iret
xchg
mov
jne
xchg
dec
arpl
stos
jo
dec
adc
movs
loopne
aad
xor
sbb
fisub
mov
dec
xor
repz
lods
mov
ficom
or
into
mov
sub
sbb
aam
daa
adc
retf
dec
add
xchg
cwde
push
lock
mov
sub
jl
adc
call
push
jnp
add
stos
movs
cmp
mov
adc
dec
aam
mov
jae
retf
cs
shl
cmp
pop
movs
jno
and
cmp
add
mov
mov
adc
out
test
or
mov
jmp
push
xor
popa
mov
adc
fdivr
xor
jne
jmp
ss
stos
popf
inc
xor
dec
in
daa
loopne
pop
add
or
leave
push
aam
pop
cmp
(bad)
out
fld
or
call
nop
adc
call
ds
fidivr
push
fisub
pop
sbb
dec
out
clc
add
shl
adc
test
add
imul
cmp
add
ins
sub
add
je
pop
jge
jo
(bad)
cdq
sahf
daa
and
or
sbb
dec
push
mov
xor
inc
test
daa
pop
test
cmp
jmp
jl
jg
pop
inc
dec
imul
add
in
cld
cmp
test
and
loopne
(bad)
dec
scas
jbe
push
add
call
dec
pop
imul
scas
cs
push
jl
lods
sbb
loop
sbb
adc
repz
(bad)
hlt
mul
sbb
inc
test
pop
xchg
or
leave
scas
push
(bad)
cld
(bad)
cld
xchg
xchg
mov
jno
xor
jae
repnz
pusha
cmp
jp
(bad)
or
xchg
(bad)
lock
xchg
sbb
pop
jle
clc
rol
imul
xor
dec
jl
(bad)
and
bound
dec
dec
or
or
cmp
ins
inc
inc
push
rcr
dec
(bad)
push
fisttp
fsub
sbb
mov
xor
ins
sbb
cmp
or
(bad)
add
mov
test
(bad)
push
in
bound
cmps
xchg
aam
int3
out
aas
(bad)
clc
fdiv
(bad)
popf
icebp
inc
push
loop
mov
sub
(bad)
push
sbb
push
inc
xchg
xchg
dec
jmp
je
push
cmp
fdivr
xor
dec
mov
lds
call
jnp
and
jnp
mov
or
mov
xchg
cmp
mov
adc
cmp
lods
daa
sub
jmp
and
data16
sub
jp
fwait
dec
sbb
cmp
inc
pop
dec
sbb
in
xchg
or
sub
pfrsqrt
shr
xchg
push
cs
or
adc
mov
adc
out
aaa
and
stos
push
je
mov
test
cmp
xor
in
inc
lods
ja
or
cld
sbb
mov
rcr
scas
int3
jecxz
retf
fdiv
cld
xchg
and
push
sar
aam
add
movs
xchg
mov
imul
int
push
ret
ret
xchg
sub
pop
mov
imul
cmp
aaa
repz
ins
call
cmps
xor
add
jne
clc
mov
scas
sahf
frstor
out
loope
jnp
dec
test
add
lea
cmp
movs
inc
ds
outs
outs
xchg
stc
push
test
ret
stos
cmp
test
sub
sti
call
sbb
jl
lea
adc
sub
(bad)
jb
shl
inc
push
fbstp
sbb
sub
sub
pop
int3
xor
and
pop
mov
fs
cmp
mov
jp
jnp
out
dec
xor
pop
pop
and
add
stc
jns
or
inc
ins
xor
xchg
cmps
das
sbb
dec
and
loop
bound
pop
ds
aaa
dec
jb
cmp
pop
jno
aam
jl
mov
mov
inc
push
addr16
and
adc
ror
mov
cli
repnz
movs
dec
arpl
fnsave
mov
pop
pop
ret
sbb
int
repnz
scas
sub
cs
rcr
nop
and
xor
ror
jl
jecxz
mov
cmp
sub
loopne
sub
leave
push
in
mov
jge
mov
retf
out
loope
in
and
jl
mov
push
jmp
out
sahf
jmp
cs
add
frstor
shl
xchg
sbb
(bad)
mov
xor
mov
adc
pop
xchg
stc
jge
scas
das
mov
adc
dec
jp
dec
je
call
mov
dec
mov
call
sbb
xlat
mov
aaa
pop
das
jne
lock
cmp
pop
fistp
push
dec
xor
xchg
fld
push
(bad)
xchg
js
sub
mov
in
aad
stc
cmp
arpl
fwait
inc
and
push
ret
pusha
stos
(bad)
shl
cmp
mov
mov
(bad)
adc
xor
cmps
sti
les
outs
pop
push
fstp
je
pop
pop
mov
pop
ss
xchg
and
adc
xor
xor
leave
fwait
cmc
jmp
fistp
test
and
inc
cwde
repz
mov
(bad)
je
jb
fstp
cmps
push
shr
mov
sahf
sbb
outs
xchg
lock
(bad)
adc
push
jbe
leave
jp
lahf
push
cmp
jmp
xchg
jbe
scas
loope
mov
outs
jmp
xchg
cmp
ds
or
xor
adc
cwde
xor
sub
std
cmps
call
cs
out
push
inc
pop
call
loope
xlat
popa
les
pusha
xor
rcr
xchg
mov
std
call
ins
pop
(bad)
xor
mov
adc
xchg
jbe
adc
rcr
mov
sbb
popa
shr
sbb
inc
cmc
jne
ins
repnz
sbb
test
jae
lea
in
call
sbb
iret
jo
repnz
mov
mov
cmp
add
cmp
repnz
iret
pop
xchg
out
(bad)
bound
push
sub
jae
cmp
sbb
lock
sete
push
xchg
adc
inc
jl
movs
jo
aam
push
adc
inc
xchg
inc
scas
lahf
cmp
mov
cmps
inc
lahf
cmps
in
fcomp
test
lods
dec
rcl
xchg
imul
or
add
inc
cwde
and
jno
mov
lock
cmp
sub
fidivr
dec
inc
jg
jnp
add
sub
push
cmp
mov
push
dec
fld
je
mov
and
jmp
inc
cmps
imul
leave
ds
je
add
cmp
cmp
push
push
(bad)
out
lea
out
cmps
xchg
imul
pushf
pushf
mov
mov
sbb
iret
sub
dec
cmps
cmp
sub
jno
add
test
jns
sub
sahf
xchg
sub
std
jbe
into
ja
push
xor
fisttp
mov
jecxz
and
mov
jbe
add
mov
sbb
sbb
add
cmp
and
sbb
pop
lods
dec
pusha
and
mov
nop
xchg
inc
aaa
pop
cmp
pusha
test
pusha
(bad)
popf
mov
xchg
cmp
xchg
and
and
mov
movs
inc
pushf
mov
fucomi
push
(bad)
jbe
jb
jl
call
pushf
or
or
mul
push
cmp
pusha
daa
xchg
push
mov
pop
xor
test
or
dec
ret
enter
pusha
call
shr
leave
jmp
mov
test
sbb
(bad)
retf
pushf
xor
add
dec
dec
daa
and
xchg
dec
sub
cmp
sub
out
adc
mov
or
outs
adc
lea
add
mov
xor
fcomp
add
xchg
xchg
cwde
std
fisttp
ret
cdq
pusha
mov
add
xchg
lock
adc
jmp
add
inc
test
sbb
xchg
cmc
loope
push
xor
push
and
enter
jo
test
pusha
and
rol
mov
push
fcomp
jge
fimul
add
test
pop
fwait
xor
sub
bound
stos
loop
outs
cmp
jp
repz
outs
adc
call
xor
stos
stc
mov
clc
test
fsub
push
aas
outs
(bad)
sub
mov
(bad)
cmp
lods
jbe
push
jmp
int3
adc
sbb
das
jns
jl
xor
add
call
div
sti
cmp
lahf
cmp
fidiv
dec
(bad)
dec
mov
aaa
adc
out
mov
jmp
adc
or
dec
push
jge
sub
inc
xchg
inc
mov
mov
ret
add
jl
adc
cmps
push
jle
fisttp
mov
cmp
cwde
mov
call
dec
cs
mov
das
inc
push
sbb
pusha
jae
xchg
pop
scas
cmp
in
xor
and
add
xchg
sub
sub
mov
xor
movs
mov
push
test
and
imul
jecxz
mov
mov
inc
jmp
xor
lods
mov
vfrczps
jmp
arpl
pop
fst
mov
popa
lock
inc
jnp
mov
lods
inc
gs
fcmovnu
sub
mov
iret
lahf
xchg
jae
push
inc
xchg
adc
xor
xchg
ja
push
js
pop
pop
mov
sbb
aad
fsub
lea
push
or
retf
cmp
jp
xor
inc
fdiv
cli
cli
sub
xor
sub
push
mov
push
ret
add
aam
out
jmp
addr16
test
popa
int
loopne
scas
sbb
outs
xchg
imul
loope
icebp
cmp
jnp
fimul
test
jl
pop
or
jo
cmps
sub
addr16
cs
loopne
rol
in
fisttp
push
repnz
dec
fdivr
dec
ja
push
jae
(bad)
mov
scas
cmps
dec
test
add
mov
or
loop
shl
repz
lds
dec
cmp
dec
pop
fcom
cmp
push
cmp
push
jmp
aaa
sbb
loope
mov
stos
imul
push
fwait
sbb
test
rol
cmp
loop
dec
rol
not
(bad)
data16
les
shl
mov
sti
in
loope
push
arpl
cwde
jb
xchg
js
loope
mov
repz
ds
out
ss
gs
out
sahf
clc
mov
xchg
pop
and
mov
and
out
pop
xchg
arpl
cmp
inc
fwait
retf
push
call
push
lods
xchg
cs
or
mov
push
mov
es
fcomp
fild
fsubr
lahf
dec
in
cs
mov
push
xchg
jmp
pushf
rcr
push
mov
jge
inc
push
es
mov
outs
stos
outs
jo
xchg
pusha
xor
sbb
(bad)
(bad)
(bad)
jecxz
xor
fild
(bad)
in
mov
push
pushf
bound
and
sar
cmp
ja
or
xchg
retf
inc
stos
add
xor
mov
lock
nop
cwde
sbb
cmps
fcomp
dec
adc
mov
adc
mov
nop
rcl
or
add
ror
and
mov
in
iret
lahf
lock
loopne
int
xchg
les
retf
inc
sbb
ret
sub
(bad)
rcl
scas
rol
mov
cmp
sub
shl
mov
fld
mov
jecxz
popa
sub
imul
jno
mov
dec
xor
mov
fsub
add
pop
pop
out
fmul
daa
and
jmp
mov
frstor
jge
cmp
mov
pop
sbb
adc
out
std
sbb
mov
dec
inc
inc
jbe
retf
mov
out
in
jbe
ins
out
mov
dec
gs
jmp
cmp
or
adc
mov
sar
push
mov
int3
push
or
jle
xor
scas
pop
popf
xchg
sub
jle
mov
add
pop
test
scas
pusha
mov
mov
cmp
inc
jge
movs
enter
adc
and
pop
or
mov
stos
push
jecxz
add
pop
ret
(bad)
mov
enter
out
mov
aad
in
add
pop
or
add
or
inc
cdq
mov
or
repz
jle
(bad)
aaa
jle
in
cli
xor
popf
push
push
sub
int
jb
jo
inc
dec
pop
ins
adc
sub
add
sub
jns
mov
fldcw
jo
cmp
fsubr
je
pop
xchg
call
mov
dec
sbb
ins
test
out
repz
(bad)
mov
sbb
xchg
xchg
jo
mov
sub
int
add
in
retf
clc
popa
jmp
xor
sub
push
jmp
scas
lahf
imul
xor
inc
mov
add
lock
(bad)
cmp
test
lods
jne
and
js
sahf
adc
mov
jg
push
fild
test
je
mov
and
repnz
in
add
xchg
jmp
in
jno
mov
inc
shl
pop
sub
push
xchg
mov
dec
sar
inc
xlat
add
adc
sub
xlat
dec
aad
xchg
pop
scas
rcl
loope
ret
add
and
adc
push
or
mov
pop
push
nop
fistp
out
aad
pop
cmps
fwait
sbb
sbb
mov
aas
pop
js
mov
ja
dec
push
imul
ror
test
dec
aaa
test
jp
xor
sub
mov
jecxz
(bad)
cmp
pop
pop
cmps
mov
jnp
mov
pop
sub
dec
leave
repnz
push
adc
in
pop
sar
fild
dec
mov
add
cmp
push
mov
stos
mov
arpl
lods
cmps
sub
and
repnz
sahf
or
into
cmc
in
cmp
cwde
cmp
sub
out
loope
mov
and
iret
sbb
fwait
dec
xlat
pop
call
jl
ds
pop
mov
sub
adc
sub
lds
lahf
(bad)
jl
and
les
inc
(bad)
mov
jae
adc
call
push
jmp
mov
xor
mov
stc
loop
daa
dec
aaa
popa
out
je
jno
push
scas
ret
push
loope
xor
sub
xchg
mov
mov
push
out
inc
mov
loope
frstor
push
jne
jb
sbb
jmp
lods
inc
or
fwait
jmp
ret
jo
int
xchg
jmp
stos
or
pop
(bad)
xor
or
xchg
and
pop
mov
(bad)
push
jmp
add
jbe
gs
sub
xchg
pushf
or
jbe
sub
pop
shl
sbb
sub
sbb
je
into
fist
inc
dec
jo
mov
aaa
mov
test
iret
mov
scas
leave
adc
and
add
pop
psubsb
enter
lock
fwait
adc
jl
add
xchg
rcr
push
jo
shl
jl
loopne
retf
ficomp
lahf
arpl
sub
stc
jb
cmp
pop
push
pushf
or
adc
dec
rcr
fwait
aad
rcl
cmp
sub
dec
pusha
hlt
pop
icebp
push
add
in
inc
cmp
push
pushf
hlt
loope
add
imul
pop
and
(bad)
xor
rcl
cdq
mov
aam
cli
and
adc
sti
push
mov
adc
jo
cmp
sbb
fs
adc
fsubr
or
shr
lahf
and
cmp
and
mov
out
adc
ss
pop
jae
push
inc
pop
mov
ror
addr16
js
lods
mov
mov
call
or
stc
xchg
fld
mov
mov
push
push
and
cmps
sbb
cwde
dec
retf
pop
push
test
mov
or
and
push
imul
lea
(bad)
cli
test
pop
adc
adc
cli
jns
popa
mov
bnd
adc
jge
jnp
shr
repnz
or
pop
or
rdpmc
push
mov
sbb
sbb
sahf
vmulsd
cmp
std
movs
hlt
arpl
sub
jae
mov
retf
not
cwde
sahf
faddp
jecxz
sbb
stos
cmps
scas
ins
sbb
dec
rcr
pop
sar
outs
inc
push
adc
retf
add
xchg
sbb
jg
cmp
xor
push
mov
dec
inc
mov
inc
cdq
vmovhpd
adc
mov
xor
out
push
je
cli
xchg
addr16
pusha
sar
jmp
push
add
lahf
inc
jle
mov
pop
call
repnz
call
cld
push
mov
lock
jb
or
ror
lods
aas
in
pop
mov
iret
xor
mov
movs
cmps
pop
pop
mov
jb
fisubr
and
xchg
fidiv
adc
add
xchg
push
mov
mov
iret
and
scas
adc
sub
lea
mov
sbb
xlat
sbb
mov
enter
aas
xchg
loopne
pop
cvtps2pd
cmp
enter
(bad)
adc
lock
repnz
pop
das
sar
retf
retf
cwde
imul
xchg
std
into
in
fnsave
xchg
test
mov
push
sti
imul
leave
sbb
sub
cmps
inc
mov
cmp
aaa
inc
jo
cmps
ds
pop
aad
xchg
and
and
(bad)
xlat
jnp
test
aad
push
mov
arpl
test
pop
dec
div
pop
or
data16
cmp
popa
xor
neg
ret
jge
xchg
inc
movs
fisttp
retf
xchg
pop
fiadd
sub
or
add
dec
pop
mov
push
cmp
jno
xor
mov
and
loop
and
(bad)
add
imul
xor
das
les
push
mov
shr
pusha
xor
aad
pop
shl
xor
imul
ficom
idiv
xor
cmp
pushf
scas
nop
retf
cmp
cmps
cs
sub
push
dec
xlat
pop
adc
arpl
imul
(bad)
outs
icebp
cmp
jmp
fs
int
das
and
fnstenv
fsub
xchg
loopne
sbb
mov
add
cmc
mov
fstp
or
fwait
cld
xchg
or
aam
ins
scas
shl
mov
cmp
dec
das
jbe
ffree
push
(bad)
(bad)
mov
mov
imul
in
lds
push
popa
jns
(bad)
or
out
scas
scas
(bad)
mul
lea
rcl
add
mov
pop
test
jbe
jecxz
fidiv
inc
enter
fst
or
popa
mov
cwde
jns
push
and
dec
fiadd
lea
mov
and
lods
(bad)
shl
(bad)
outs
or
icebp
inc
cmps
dec
jl
sbb
jg
(bad)
in
pop
fcomi
ror
(bad)
xchg
mov
popf
cld
cmp
clc
mov
dec
loope
test
push
dec
and
xor
pop
xor
cmp
popa
cwde
clc
repnz
xor
mov
xchg
mov
xchg
ret
imul
in
pop
sub
dec
out
out
push
ins
push
dec
out
push
inc
xchg
cdq
ins
mov
sub
loopne
mov
imul
or
and
mov
and
adc
mov
mov
push
cmps
push
ja
lods
ror
aad
retf
lods
jge
lea
stc
shl
xor
sub
xchg
outs
mov
scas
retf
sti
sub
mov
push
adc
jl
(bad)
dec
ins
push
pop
je
test
test
add
inc
xor
mov
xchg
je
inc
aaa
sbb
push
mov
cld
out
test
mov
scas
sbb
repz
data16
fisubr
mov
ror
sbb
mov
retf
(bad)
cmps
adc
mov
adc
bound
lods
jae
or
lods
ret
pop
jge
pop
out
fidiv
leave
jb
int3
les
mov
xchg
xor
imul
aaa
sbb
repnz
mov
pusha
out
cld
call
or
(bad)
cli
xchg
inc
ss
xchg
xchg
aam
je
jbe
aad
cmp
jns
and
imul
imul
push
push
pop
nop
push
dec
addr16
push
adc
loopne
enter
cmp
pop
je
or
mov
and
test
adc
sbb
xor
inc
pop
outs
sahf
xor
rcl
lock
int
je
push
dec
ret
inc
(bad)
inc
jbe
push
inc
xchg
lods
jb
sub
sub
loope
sub
int
push
sbb
shl
pop
push
stos
jecxz
mov
add
stos
add
push
divps
mov
ret
xor
(bad)
sbb
push
shr
(bad)
sti
mov
mov
pop
jo
rol
mov
xor
push
cmp
stc
sbb
xchg
imul
les
jmp
mov
sbb
sub
les
aad
add
mov
sbb
add
adc
and
push
pop
rcr
sti
fdiv
jo
mov
ss
icebp
mov
adc
clc
in
xchg
sti
pop
dec
cmp
rcr
sbb
sbb
and
das
mov
nop
dec
push
mov
dec
test
push
mov
stc
lods
(bad)
cmp
push
(bad)
xchg
xchg
and
dec
xor
inc
mov
push
fisttp
xchg
ss
(bad)
daa
fld
adc
pop
add
and
jb
sahf
in
push
dec
push
sub
cwde
mov
xchg
bound
ficom
out
(bad)
addr16
sub
mov
lea
and
sti
mov
je
jp
jle
loopne
sbb
pop
or
inc
sahf
fidivr
jne
mov
cmp
inc
rcr
cmp
jo
sbb
pushf
fiadd
add
and
iret
mov
xchg
pop
loopne
cmps
pop
add
addr16
cs
aad
and
jae
inc
inc
mov
mov
leave
dec
mov
mov
cmp
sbb
xchg
stos
push
fst
cmp
rcr
rcl
lods
and
hlt
inc
sub
and
(bad)
sbb
jle
imul
dec
and
and
in
dec
add
jno
sub
xor
sub
push
mov
loope
out
cmp
fstp
je
ror
push
pushf
cmp
sbb
inc
outs
cmc
loopne
pop
shl
inc
call
out
pop
in
cmp
jle
sub
pop
lea
inc
popa
mov
and
stos
jns
dec
push
add
mov
push
mov
(bad)
cmp
mov
pop
rcr
jmp
dec
xor
pop
cmp
clc
and
cmp
hlt
mov
cdq
pop
jge
pop
in
cmp
(bad)
cmp
iret
dec
inc
sbb
add
add
mov
std
outs
repz
mov
and
lock
jmp
sub
fadd
inc
not
or
pop
push
adc
jmp
stc
fst
call
stos
int
cmps
aaa
push
jmp
inc
pop
fild
sti
xchg
mov
pop
mov
pop
mov
mov
sar
icebp
fwait
call
in
loopne
jae
inc
or
push
iret
fldenv
int
pop
cmp
xor
inc
inc
in
ja
cmps
mov
dec
dec
dec
jno
or
dec
int3
pop
(bad)
mov
call
sbb
xor
popa
ja
pop
sbb
scas
hlt
aad
mov
mov
jae
pop
addr16
out
nop
jmp
pop
mov
das
mov
jp
dec
ins
jl
or
sub
xchg
pop
sub
stos
les
sub
jge
cmp
jle
dec
jecxz
jmp
xchg
sub
mov
je
rcl
mov
ds
cmp
cmp
inc
aaa
mov
lea
and
out
cmp
xchg
xor
or
cmp
bound
pop
repnz
xor
adc
retf
ja
les
cmp
imul
imul
ror
add
push
ins
push
add
mov
call
jmp
add
lock
imul
cmp
pop
sub
xor
push
mov
mov
pop
mov
aam
iret
popf
inc
cwde
mov
daa
cmp
fs
dec
cmp
xor
pop
xchg
push
das
into
pop
std
xchg
mov
sbb
pop
(bad)
les
call
mov
test
inc
repnz
pop
adc
mov
jg
jne
in
and
iret
imul
leave
mov
arpl
sti
jae
cmc
and
lahf
xchg
lahf
push
ror
ja
sub
out
or
mov
mov
aad
cli
sub
push
xchg
adc
and
outs
add
mov
neg
push
and
sub
popa
ss
movs
jge
lods
inc
sbb
js
pop
sahf
push
sub
or
pop
add
mov
test
jmp
sub
jbe
fcmovnb
mov
pop
out
out
adc
cmp
inc
(bad)
out
(bad)
xor
icebp
cmp
add
imul
push
call
lods
push
sub
and
pop
aaa
inc
lods
das
mov
cmp
mov
cli
jmp
clc
sbb
xor
cld
cdq
loop
or
pop
jl
int3
retf
dec
iret
push
adc
sti
mov
stos
jge
pop
fcom
adc
pop
ins
xor
mov
push
and
outs
gs
cdq
fsub
mov
retf
sbb
push
sti
dec
pop
icebp
sar
mov
push
pop
outs
lock
jne
or
push
hlt
pusha
in
repz
inc
and
ss
test
inc
imul
push
clc
jmp
pop
fisttp
and
(bad)
aaa
fcomp
stos
sbb
icebp
movs
mov
inc
adc
xor
cmp
clc
je
int3
sbb
std
xor
sub
sar
jmp
xchg
jnp
pop
mov
mov
mov
add
adc
add
fldcw
mov
fwait
xchg
das
inc
retf
(bad)
fistp
rcl
(bad)
in
mov
pushf
stos
xor
nop
jle
jg
adc
pop
in
dec
lea
cmp
mov
es
arpl
retf
ins
lea
frstor
rcr
adc
inc
xor
popa
test
jg
pusha
mov
cmps
outs
(bad)
lods
(bad)
les
leave
jle
jnp
jg
shr
push
xlat
push
cs
fisubr
cmp
add
cli
out
aad
adc
jl
jmp
pop
mov
fbstp
xor
mov
leave
call
enter
hlt
outs
test
scas
rol
lods
ins
ret
and
xchg
pop
stos
rcr
jp
pop
cmp
dec
jno
add
data16
ja
inc
mov
or
sbb
out
pop
sub
mov
mov
adc
jle
in
dec
psrad
jno
mov
inc
(bad)
jecxz
js
adc
dec
sar
adc
xor
loop
(bad)
adc
inc
out
dec
mov
jmp
cmp
dec
pop
xchg
repnz
test
jmp
shr
out
bound
cli
sub
dec
fbstp
sub
shr
dec
cmp
cwde
mov
dec
sbb
dec
or
and
into
ja
xchg
xchg
jg
adc
sbb
dec
imul
or
push
dec
cs
or
scas
stos
sbb
sbb
inc
dec
push
fistp
cmp
jns
call
push
(bad)
xor
cmc
outs
jbe
mov
lods
jp
in
pop
mov
mov
sub
jg
retf
mov
add
lods
jecxz
or
inc
pop
ficom
hlt
fdiv
in
call
inc
stos
jg
es
ror
(bad)
pop
les
into
ins
ret
or
movs
xor
dec
out
add
test
outs
mov
popf
test
test
sahf
lods
sub
dec
push
shl
call
mov
pop
cmps
jo
repnz
and
mov
jae
cmps
fsub
fisub
ins
dec
gs
repnz
cs
pop
xor
sbb
(bad)
div
xor
pop
xchg
call
dec
sbb
jmp
cmp
mov
je
xor
es
push
mov
popf
retf
pop
and
xchg
clc
pop
fist
jecxz
pop
bound
jmp
mov
fcmovnbe
cmp
xor
ds
(bad)
or
jb
es
inc
ja
iret
bound
outs
in
jns
pop
retf
cli
test
mov
enter
pop
aaa
mov
(bad)
out
pusha
or
mov
mov
xor
popa
cwde
lods
xchg
popf
pop
dec
sar
repnz
lea
adc
js
mov
or
dec
retf
inc
mov
ss
push
jmp
sbb
add
das
fstp
lods
lahf
(bad)
or
mul
inc
movs
xchg
cmp
int
inc
packsswb
mov
stos
sub
aad
sub
jmp
or
cld
or
je
jns
sbb
sar
cmp
in
push
retf
int
add
jne
adc
lock
dec
mov
mov
sar
lods
inc
loop
lods
jecxz
loope
inc
pushf
ss
out
xchg
lahf
sub
ffree
je
and
retf
je
retf
iret
sub
xor
not
idiv
ins
mov
dec
in
and
mov
pop
test
mov
mov
das
and
cmps
fmul
pop
pop
dec
cs
cmp
xchg
cli
push
jmp
hlt
push
cdq
add
call
jl
xchg
addr16
inc
sbb
mov
ficomp
inc
sub
dec
lahf
pop
rcr
imul
lock
sbb
outs
test
bound
icebp
push
aam
adc
ss
and
and
shr
mov
add
pushf
loopne
shr
std
and
pop
xor
jb
mov
add
sbb
jl
ds
add
jbe
out
call
inc
dec
jo
pop
cmp
add
xlat
sub
and
xchg
(bad)
xor
cvttps2pi
fnstsw
inc
push
xlat
lahf
(bad)
xchg
cmps
mov
sbb
rol
stos
cmp
jle
jns
xchg
push
adc
mov
out
sbb
mov
xchg
dec
sti
call
push
das
std
fiadd
xor
or
loopne
popa
das
add
retf
jg
and
adc
mov
and
adc
xchg
rcl
jne
dec
cs
out
aam
inc
gs
push
sub
pop
lods
mov
mov
xchg
push
pop
push
fnstcw
in
sub
sbb
std
(bad)
xchg
pop
sbb
xchg
dec
dec
addr16
int
inc
or
pop
(bad)
jmp
mov
std
scas
(bad)
jecxz
lock
outs
fst
outs
in
push
add
cmc
or
inc
mov
cmp
xchg
sub
fucomp
repnz
or
adc
cld
repz
scas
pop
cmp
mov
dec
loopne
push
add
xor
mov
pop
inc
push
scas
xchg
mov
push
sub
int3
pop
and
aad
xchg
das
enter
leave
jge
inc
les
icebp
add
std
cmps
xor
mov
or
pop
fs
cwde
jae
arpl
mov
mov
sub
arpl
sub
aas
jmp
cmp
xchg
pushf
mov
push
mov
ror
sar
ja
div
jmp
push
int3
test
jne
add
or
dec
dec
shl
mov
pop
dec
loope
xchg
mov
sahf
cmp
les
and
add
imul
je
dec
icebp
(bad)
and
add
mov
lods
mov
and
stos
arpl
aad
xor
jmp
mov
arpl
ficomp
mov
push
sub
sub
adc
mov
cmc
loopne
jp
iret
enter
adc
stos
jbe
adc
jg
pop
clc
enter
(bad)
test
cdq
adc
mov
pop
fidivr
inc
jne
icebp
dec
iret
and
rcl
daa
sbb
add
mov
nop
in
jecxz
out
xchg
cmps
int
inc
xchg
or
je
imul
add
movs
inc
mov
call
add
pop
cmp
xor
cmp
shl
es
leave
iret
inc
ss
adc
push
mov
cmc
fld
xchg
jmp
in
test
jbe
aas
mov
mov
repnz
loope
sub
sbb
xchg
aad
gs
jmp
mov
cwde
push
jge
aad
jl
leave
pop
loope
jge
xor
mov
imul
pop
leave
inc
sahf
adc
add
add
cdq
fld
les
add
nop
int
gs
mov
leave
mov
ins
xor
inc
aaa
add
cwde
movs
jns
shr
mov
sub
faddp
jbe
sub
(bad)
mov
push
and
mov
mov
imul
pushf
rol
inc
pusha
sti
xchg
movs
out
dec
sahf
(bad)
sti
mov
(bad)
adc
cmp
jnp
outs
sbb
cmc
cs
test
and
hlt
std
sbb
movs
cmps
or
cmp
out
xchg
or
sbb
xor
daa
or
jg
nop
mov
jo
or
or
inc
cwde
je
mov
cmps
push
imul
jbe
in
int3
js
push
add
call
mov
jle
pop
in
adc
inc
jb
enter
jmp
xor
ja
push
mov
pop
aad
test
test
dec
adc
inc
popa
in
stos
imul
lods
shl
shl
fdivr
scas
repz
and
aam
inc
inc
mov
icebp
dec
(bad)
xchg
imul
out
imul
lahf
jb
fwait
fwait
jno
cmps
add
xchg
xor
out
loope
mov
cmp
pop
aaa
into
(bad)
adc
ins
jp
in
sbb
repnz
xchg
dec
ret
mov
sub
mov
dec
xor
xchg
xchg
push
push
repnz
test
bnd
or
push
jl
cli
fstp
cdq
aam
inc
retf
je
jmp
out
mov
sbb
mov
mov
int
popf
out
or
test
lea
mov
stos
mov
mov
sub
pop
add
cmp
je
fld
arpl
cli
adc
or
out
cmps
dec
ins
(bad)
stc
test
adc
inc
pop
repnz
int3
push
sbb
fstp
loope
push
cmp
xor
aad
rcl
push
icebp
jecxz
(bad)
in
xchg
mov
cmp
mov
fnstenv
fwait
retf
aas
or
sub
ds
in
dec
gs
add
and
inc
nop
dec
add
cmc
popa
call
dec
cmc
sub
sub
push
jo
dec
and
mov
push
int
rcl
mov
jns
mov
sbb
loope
cmp
rol
dec
sbb
movs
or
das
repz
iret
adc
add
or
sub
dec
(bad)
cmp
xchg
(bad)
pop
iret
lds
(bad)
repnz
int3
mov
jl
outs
inc
imul
add
jnp
jbe
add
in
enter
in
mov
dec
xchg
jmp
push
push
out
push
in
inc
cdq
sar
test
mov
mov
and
int
push
jne
xchg
cmp
aam
fs
(bad)
jmp
fdivr
xchg
add
retf
movs
or
xor
mov
scas
or
push
mov
pop
je
aaa
mov
outs
(bad)
sbb
scas
xor
in
jmp
clc
push
lea
xor
ss
dec
aad
or
adc
xchg
cmp
in
mov
test
pop
push
add
mov
stc
data16
les
adc
adc
test
fldln2
mov
xor
(bad)
repz
adc
adc
leave
or
cmps
xor
out
sahf
add
lahf
mov
mov
fst
rcr
mov
cs
scas
cwde
movs
test
pop
nop
jmp
not
jge
push
aas
add
jnp
movs
xchg
push
or
mov
rcl
push
ds
add
add
movs
(bad)
cmp
shr
dec
test
and
inc
mov
imul
stos
into
or
rol
scas
and
je
mov
or
ficomp
imul
dec
jb
pop
pop
test
mov
jbe
sub
jl
fst
nop
push
and
fisttp
imul
fcom
inc
fld
and
xchg
jp
dec
ja
mov
out
jp
sahf
inc
or
mov
jl
sub
les
mov
adc
lock
retf
std
adc
push
jae
fadd
adc
out
dec
xor
cmps
fmul
fild
add
jno
repz
mov
out
or
dec
loop
mov
test
cmp
mov
pushf
ret
and
inc
data16
push
and
clc
pop
jg
pop
sti
fwait
pop
jmp
mov
add
cs
mov
inc
popa
loop
cmp
je
mov
cmp
sub
adc
xchg
je
dec
cmc
add
les
retf
mov
pop
sub
mov
sahf
sti
jnp
xor
frstor
adc
xchg
add
test
jecxz
xchg
(bad)
mov
mov
out
adc
loope
lock
shl
sahf
inc
mov
fwait
iret
addr16
pop
in
ret
push
cmps
movs
mov
mov
rol
sub
pop
push
xor
fmul
js
mov
dec
jmp
aam
fidivr
aam
sbb
out
mov
loopne
add
loopne
jp
xchg
pop
cmp
xor
fs
aam
inc
inc
cmp
pop
movs
sbb
pushf
imul
stos
fsub
movnti
adc
xor
pop
and
aaa
or
push
mov
scas
mov
movs
dec
in
inc
and
rol
xor
fs
jns
ss
adc
scas
mov
add
mov
ss
neg
sbb
retf
shl
out
(bad)
adc
dec
add
in
shl
fmul
jp
xor
xchg
call
ins
dec
push
jnp
sub
pop
les
iret
dec
or
mov
test
pop
xchg
loopne
gs
sub
push
push
push
nop
sub
not
sbb
(bad)
adc
sub
mov
push
shr
push
jae
shl
dec
movs
loopne
ss
add
dec
ds
gs
xchg
mov
call
(bad)
adc
jbe
xlat
loope
loopne
dec
fdiv
enter
xor
adc
pop
bound
loop
test
pop
inc
in
cmp
mov
pop
or
daa
les
fld
dec
sub
push
jp
out
sbb
imul
stc
or
fiadd
mov
rcl
mov
pop
sub
and
xor
shl
mov
cmps
retf
adc
outs
push
xor
gs
mov
mov
in
dec
repz
mov
fwait
dec
mov
push
fsub
mov
sub
lea
dec
pop
xchg
fidivr
push
clc
mov
fld
dec
cmp
ret
hlt
xor
pop
adc
leave
push
stc
into
loope
pop
pop
lods
out
sub
fcomp
in
scas
fiadd
out
add
push
pop
xchg
mov
(bad)
push
mov
cmps
xor
sbb
sub
dec
mov
and
nop
push
out
inc
js
mov
outs
cmp
jbe
or
stos
xchg
xor
sub
scas
aad
js
stos
iret
enter
cs
adc
call
ins
aad
jp
dec
std
jne
sub
mov
fwait
sar
dec
(bad)
and
xor
sub
shl
add
or
mov
stos
add
dec
add
imul
add
or
mov
bound
stos
fs
add
sbb
(bad)
fcom
test
or
sbb
inc
sbb
or
mov
lds
test
pushf
inc
scas
dec
sbb
aaa
mov
hlt
push
sub
mov
xchg
or
dec
mov
push
repnz
out
mov
in
add
clc
ins
mov
test
jecxz
cmps
fstp
dec
add
in
and
out
or
mov
and
pop
jne
jns
fst
lods
pop
mov
sbb
arpl
retf
sbb
arpl
lock
sbb
xor
cmp
test
sahf
shr
dec
das
jnp
inc
xchg
stc
inc
mov
pop
cmc
sahf
dec
pop
shl
ffreep
shl
xor
mov
add
(bad)
stc
jns
dec
mul
int3
cli
dec
xor
fdivr
push
mov
jmp
dec
lahf
inc
je
xchg
push
ss
retf
(bad)
cmp
fwait
je
mov
dec
in
push
or
push
inc
pop
aas
aad
hlt
js
push
pop
retf
cwde
retf
je
mov
fsub
sahf
lods
sub
pop
cmp
push
sahf
call
out
ror
in
cmps
inc
bound
test
pop
imul
call
aam
sub
add
mov
xor
and
(bad)
out
cmp
loop
xchg
retf
ja
jecxz
cwde
pop
mov
jmp
inc
mov
add
dec
push
pop
ficomp
(bad)
clc
test
scas
add
mov
idiv
fdiv
test
(bad)
test
add
popa
mov
dec
xchg
cmps
sub
inc
and
jb
ret
inc
scas
push
cli
loopne
or
repnz
xchg
int
pop
mov
adc
cld
out
arpl
mov
pop
sub
test
ss
mov
xor
(bad)
cmp
cmp
pop
neg
ds
mov
xchg
cld
adc
outs
arpl
movs
cmp
iret
adc
jo
push
lods
xchg
leave
jno
add
jle
fistp
add
mov
pop
push
push
fsubr
aas
(bad)
daa
stos
retf
adc
pop
into
jne
cli
in
scas
add
cmc
pop
shr
pop
cmc
xchg
aas
mov
xor
pop
dec
adc
mov
outs
sub
push
push
inc
shr
cmc
jb
(bad)
mov
add
push
sub
pop
(bad)
dec
mov
addr16
dec
cmp
cli
lods
or
inc
ret
fldcw
nop
add
repnz
(bad)
jmp
cmc
cmc
dec
rcr
stc
mov
outs
and
ds
pop
pop
cld
fsub
mov
push
out
xchg
ins
push
sahf
ins
jl
imul
mov
je
push
ja
push
or
or
mov
fwait
ror
or
lods
test
mov
arpl
loop
repnz
sub
retf
ret
sbb
mov
repz
enter
jae
mov
mov
out
(bad)
pop
shr
mov
into
scas
pop
js
jl
mov
or
or
push
xchg
retf
push
outs
pop
push
pop
mov
dec
or
adc
aam
dec
(bad)
jmp
and
das
xchg
cdq
cld
add
popf
dec
cmp
int
call
shl
mov
cmc
cmp
mov
imul
xchg
sahf
sbb
add
ret
test
add
xor
sbb
mov
ds
das
inc
jecxz
mov
xor
adc
push
aam
(bad)
je
std
push
mov
mov
out
add
xchg
fld
pop
leave
adc
mov
inc
or
mov
jecxz
loopne
rcr
adc
pop
jnp
mov
retf
fdivp
jle
es
mov
jbe
push
push
sub
sahf
sar
loope
and
test
jl
adc
push
pop
repnz
pop
mov
rcl
rol
out
jmp
popa
cdq
mov
cli
outs
ror
jge
pop
ret
cmc
mov
ins
jo
out
sub
in
mov
in
lahf
jae
xchg
cmp
ss
iret
pop
inc
jne
aam
add
xor
fimul
inc
add
jae
loopne
cmp
inc
outs
xchg
adc
dec
xchg
inc
or
iret
xor
sub
add
cmp
mov
jae
mov
ret
mov
inc
push
sar
pop
push
in
js
push
add
push
jp
jecxz
imul
jae
pushf
(bad)
(bad)
sub
jns
inc
inc
in
jmp
out
push
in
test
pop
pop
push
arpl
mov
lods
add
sub
pop
and
sahf
std
xchg
(bad)
cld
push
and
leave
mov
jmp
dec
test
xchg
not
push
jl
fisttp
(bad)
sbb
shl
sub
cmp
ja
push
sub
jo
inc
out
jns
lock
or
mov
cmc
xor
(bad)
outs
xor
add
jno
pop
inc
das
xor
hlt
add
mov
addr16
adc
xor
jg
mov
push
loop
inc
test
out
lods
hlt
retf
dec
shl
(bad)
sub
lock
or
or
add
mov
inc
fwait
ins
jge
test
imul
inc
xchg
sub
dec
xchg
add
daa
inc
dec
jmp
test
xor
adc
movs
movs
enter
push
xor
imul
test
pcmpeqw
sub
xor
xchg
mov
fdiv
inc
(bad)
xor
mov
loope
cs
mov
dec
push
add
fwait
push
mov
jg
xchg
call
add
cmp
out
and
cld
sbb
stc
inc
inc
pop
cmp
icebp
pop
xchg
popa
cld
(bad)
jecxz
pop
aas
or
(bad)
sahf
cmp
dec
aad
sub
and
stos
inc
ficom
aas
das
xchg
call
jge
cmps
or
pusha
xchg
jno
fs
ficomp
retf
mov
sbb
adc
fwait
xchg
leave
(bad)
jg
pop
and
mov
mov
test
add
iret
xchg
imul
je
ins
sub
test
inc
mov
lahf
xchg
xchg
in
and
(bad)
jns
sahf
shl
fwait
mov
add
neg
js
inc
cli
cwde
aas
pop
fstp
sti
gs
ret
or
outs
movs
push
loope
or
mov
mov
mov
mov
scas
push
ja
mov
sub
jmp
push
push
mov
pop
xor
scas
push
push
pop
mov
xchg
jle
stos
aas
adc
mov
mov
jne
out
xchg
stc
enter
jecxz
call
inc
dec
jmp
sbb
movs
stos
adc
sub
fild
and
dec
sub
mov
retf
mov
mov
jg
inc
dec
stos
add
adc
push
sub
sahf
xchg
xchg
sahf
adc
inc
push
ss
jno
xchg
out
ins
lea
iret
jle
test
ja
scas
sub
or
mov
leave
jmp
call
sar
cmp
and
call
mov
jmp
and
lock
pushf
cmp
mov
out
pop
test
out
out
jmp
or
sbb
in
xor
ss
mov
sbb
out
adc
mov
stos
adc
adc
lahf
jmp
out
mov
in
jo
jmp
xor
cli
xchg
xchg
inc
push
es
cmp
ror
dec
(bad)
icebp
pop
js
(bad)
lds
repnz
gs
xor
enter
push
inc
enter
inc
lock
inc
cmps
push
pop
adc
jl
xchg
jmp
inc
xor
mov
dec
pop
pop
inc
into
(bad)
jns
imul
out
ins
add
(bad)
sbb
addr16
mov
or
out
loopne
cwde
push
loope
push
es
add
mov
sub
adc
mov
sahf
cmp
sahf
inc
ja
jle
add
pop
inc
test
ins
and
movs
xchg
(bad)
cmp
adc
out
lea
repnz
push
out
xchg
test
(bad)
fmul
mov
in
lods
adc
push
cmp
xchg
pop
or
mov
ja
jno
inc
loop
cmp
or
sbb
push
cdq
loop
movs
stos
test
pop
ja
xor
retf
aad
mov
movs
ins
and
pop
and
popf
jle
jo
mov
loope
cdq
pop
movs
jae
add
std
jle
stc
inc
int
test
shr
pop
cwde
outs
mov
into
cmp
jnp
push
jp
xlat
into
in
pushf
cmp
inc
xchg
sub
adc
dec
dec
dec
in
jl
js
jb
test
adc
dec
sti
jmp
mov
sbb
pop
retf
push
jbe
jnp
shr
dec
lea
mov
test
iret
mov
popf
imul
inc
jge
std
test
push
xor
jl
pop
add
outs
stos
mov
jne
cmps
shl
dec
cwde
dec
cmp
movs
cs
or
xor
sti
lods
into
jmp
fisttp
or
jge
mov
cmp
inc
sub
mov
test
mov
xchg
or
out
dec
pop
jge
jnp
mov
retf
sbb
std
fmul
add
mov
push
inc
and
mov
in
dec
mov
cmps
mov
xchg
adc
xchg
fist
push
jg
not
std
sub
int
das
xor
imul
inc
(bad)
cmps
jp
(bad)
push
cmp
out
fisttp
fwait
xchg
cli
sbb
and
mov
cmps
enter
xor
pop
jge
mov
or
or
sti
fcom
sbb
rol
sub
stos
sbb
addr16
scas
xor
xchg
pop
mul
lock
mov
mov
xor
pop
add
or
push
std
adc
push
adc
push
inc
push
and
ret
pop
xor
aad
sbb
test
icebp
cli
ins
pushf
cs
inc
adc
xor
jbe
cwde
add
mov
or
sub
jl
mov
dec
sbb
outs
sbb
test
xchg
test
call
mov
ins
or
sub
push
mov
sbb
unpcklps
jp
mov
cmp
push
and
sbb
cmc
xor
mov
push
vcvttpd2dq
mov
pop
mov
loope
inc
add
xlat
cld
pusha
icebp
xchg
jp
(bad)
sbb
gs
mov
ds
push
cmp
not
shl
bound
hlt
or
mov
add
lds
outs
mov
push
dec
and
sbb
movs
clc
cli
je
push
cmps
sbb
mov
jecxz
popf
sub
xchg
or
lods
in
cdq
hlt
sub
shl
ret
mov
sub
inc
ss
icebp
pushf
in
in
rcr
inc
out
ja
xor
pop
mov
lahf
mov
lods
fld
pusha
mov
mov
push
xchg
sub
mov
pop
add
jp
cld
pop
aam
pop
test
cld
cmc
rol
mov
outs
imul
aas
cmp
pusha
not
je
scas
scas
fidiv
mov
(bad)
out
lock
or
pop
sub
xchg
arpl
lahf
leave
cmp
cmp
push
xchg
sbb
and
fwait
in
push
sub
pop
shr
in
inc
jns
dec
loope
cmps
dec
mov
cli
push
cwde
mov
repz
mov
mov
xchg
cmp
icebp
pop
add
inc
mov
mov
mov
xchg
add
cdq
cdq
fmul
push
or
sub
sub
push
push
adc
dec
pop
xor
nop
repnz
mov
movs
in
add
cmp
jg
loop
sbb
sbb
adc
pop
inc
mov
cmp
fisubr
jo
push
mov
mov
test
aas
in
rcl
inc
aad
jmp
dec
neg
cmc
in
or
enter
ffreep
fidiv
lods
xor
nop
div
sub
pop
inc
add
clc
add
rol
loope
sbb
push
push
iret
lods
shl
adc
inc
je
push
cmps
jo
mov
mov
add
sbb
jmp
mov
mov
int3
xlat
xor
pop
dec
bsf
js
xchg
inc
aas
sub
pop
js
in
push
and
je
bound
ret
pop
loopne
fsub
push
jne
ret
shr
fistp
inc
fcom
popa
sahf
stos
call
sbb
and
jp
cmp
sti
dec
xchg
(bad)
or
add
(bad)
jo
push
iret
movs
fwait
sub
and
ins
mov
stc
xchg
imul
cld
push
add
add
mov
int3
mov
enter
mov
sub
sbb
add
sbb
lock
xor
sub
pushf
loope
mov
daa
xchg
sub
and
mov
lds
clc
pop
pop
dec
dec
outs
xor
cmp
mov
dec
adc
jbe
stos
ds
leave
mov
hlt
clc
xchg
ds
add
adc
sub
sbb
dec
fild
jp
int
shl
pop
sbb
mov
dec
dec
xchg
pop
jmp
aas
inc
xchg
and
sub
xchg
add
or
data16
int3
out
cmps
cmp
dec
cmps
dec
nop
sbb
sub
mov
and
(bad)
push
cmovb
fist
sub
inc
jle
xchg
ins
sets
xchg
pop
inc
push
jmp
fisubr
iret
xor
fdivr
jg
iret
jnp
jge
out
inc
cdq
ins
rcr
adc
lds
adc
fisubr
jb
movs
xchg
ret
mov
ret
shl
(bad)
lea
sub
shr
out
inc
and
xor
(bad)
jns
les
mov
xchg
popa
lock
test
fwait
pop
pop
xchg
pop
jnp
enter
enter
(bad)
cmp
inc
(bad)
mov
add
(bad)
inc
jne
in
adc
cmps
and
fimul
imul
push
push
(bad)
adc
and
stos
xor
cdq
xlat
sub
and
mov
cmc
sti
call
dec
inc
fisttp
pop
mov
sbb
pushf
dec
push
xor
or
in
cli
fs
dec
out
loope
test
push
pop
(bad)
ins
xor
clc
scas
clc
add
sbb
dec
jb
xchg
loope
inc
fcomp
enter
call
or
push
(bad)
(bad)
add
cmps
inc
ds
inc
cmps
leave
mov
js
faddp
push
stos
(bad)
in
push
push
into
sahf
mov
fprem1
pop
jb
dec
std
adc
fbld
adc
sbb
xor
push
fild
mov
in
mov
xchg
push
mov
mov
dec
(bad)
fmul
(bad)
into
clc
stos
fwait
adc
or
scas
arpl
fstp
fucomi
adc
cmps
jnp
je
jne
out
pusha
shr
xchg
push
addr16
loop
xor
iret
fwait
mov
mov
(bad)
jns
arpl
dec
mov
stos
leave
fcmovnbe
jo
mov
fldcw
cmc
pop
mov
sbb
scas
das
add
dec
mov
jns
frstor
cmp
test
pop
xor
bswap
movs
jmp
in
jnp
xchg
pop
pop
cmp
clc
push
xchg
sbb
mov
mov
sub
inc
or
lods
xor
pop
jge
aas
das
cmp
mov
adc
out
sbb
or
out
fwait
pop
xchg
xchg
les
rcr
mov
mov
mov
xchg
xor
test
popf
clc
add
jne
or
in
push
lods
fist
mov
pop
mov
push
jle
adc
ror
jbe
sahf
mov
inc
jo
and
adc
inc
cdq
jl
gs
mov
inc
or
push
stc
xchg
pop
pop
or
jns
adc
addr16
jmp
sar
int
ret
imul
sbb
mov
sahf
ins
mov
sub
sbb
inc
mov
lock
push
push
jbe
scas
daa
inc
pop
repz
push
mov
in
mul
aaa
movs
in
push
pop
gs
cli
imul
mov
jl
mov
sti
ins
mov
mov
cmp
push
cmp
shl
sti
mov
and
mov
mov
push
sti
or
(bad)
(bad)
inc
pop
call
push
pop
adc
lods
out
or
lea
enter
and
dec
mov
and
jle
add
les
out
dec
inc
cmp
pop
pop
iret
int
push
mov
cmps
cmp
add
jo
mov
push
add
mov
inc
xor
fstp
loope
add
cmp
sar
adc
(bad)
sti
jle
hlt
jae
add
fabs
outs
fnstenv
sbb
push
lods
test
mov
fisubr
ror
int3
inc
adc
cmp
fist
pop
outs
mov
mov
mov
cmp
xchg
test
sbb
bsr
mov
inc
dec
cmp
lea
std
cmp
adc
inc
mov
cdq
inc
mov
adc
lea
ds
mov
in
mov
call
and
leave
jge
ins
js
xor
pop
or
in
push
mov
and
sbb
pop
add
ins
leave
mov
xchg
pop
mov
jp
int
cdq
fst
ja
jae
ss
jecxz
pop
pop
ins
std
dec
repnz
adc
cdq
sub
loop
outs
jae
pop
call
cmp
inc
hlt
inc
sub
int3
push
imul
add
(bad)
sbb
mov
xor
push
ret
in
mov
or
loopne
(bad)
mov
(bad)
call
lock
cwde
sub
mov
pop
rcr
out
push
adc
(bad)
xchg
push
jno
das
pusha
add
stos
das
pop
add
data16
enter
push
aaa
pop
gs
push
aaa
jmp
xor
and
jb
call
popf
sbb
xchg
inc
mov
cmp
call
in
sbb
das
dec
dec
(bad)
jmp
(bad)
lods
push
xchg
add
test
jno
das
mov
adc
jno
pop
call
inc
push
mov
cmc
sbb
and
out
add
xor
mov
cmc
mov
iret
cmp
sbb
cmp
pop
or
pop
lods
test
add
push
mov
mov
mov
ja
add
inc
mov
mov
and
lea
repz
mov
and
sub
out
add
mov
jg
pop
icebp
clc
repnz
(bad)
jne
add
push
xor
adc
pop
in
xchg
xchg
pop
ins
or
in
pushf
daa
lods
and
nop
aaa
mov
(bad)
in
aam
push
sar
repnz
sub
fs
pusha
cmp
and
clc
cmp
push
ins
push
scas
jnp
(bad)
adc
call
outs
or
data16
dec
(bad)
(bad)
retf
enter
mov
imul
in
mov
or
jne
inc
fistp
fsub
jae
sbb
jae
and
cs
sbb
in
push
xchg
inc
(bad)
fs
adc
fimul
cmps
fcomp
scas
(bad)
scas
sub
fwait
mov
and
call
test
movs
mov
lock
xor
stc
dec
out
jo
int
push
pop
retf
loope
push
std
das
xchg
or
rcl
pop
xor
hlt
sub
in
pushf
outs
retf
adc
xchg
test
push
in
call
pusha
cdq
cs
mov
mov
add
add
ja
shr
popa
scas
cmp
and
pushf
clc
inc
retf
gs
int
in
call
stc
mov
push
pop
imul
(bad)
hlt
push
cmp
mov
inc
jb
nop
loop
ins
push
pop
inc
mov
lea
mov
int
test
jg
add
in
sbb
xor
mov
and
add
cmp
sub
popa
mov
add
adc
or
sub
adc
xchg
push
mov
pop
dec
jnp
jl
and
push
lea
jecxz
cmp
lahf
or
(bad)
ret
inc
push
test
sub
mov
jmp
sub
mov
scas
push
sbb
dec
mov
cmp
jno
loope
mov
shl
sub
dec
ins
not
push
fcomi
sbb
dec
sub
(bad)
sub
add
or
xchg
pop
leave
dec
psllw
(bad)
jecxz
fstp
stos
cmp
(bad)
pop
jmp
in
retf
(bad)
scas
lods
fsubr
mov
add
sub
add
call
iret
ror
push
xor
in
xchg
ficom
mov
cmps
rcr
xor
mov
arpl
push
daa
lea
icebp
pop
mov
xchg
idiv
das
movs
ret
jmp
repz
jb
into
xchg
mov
adc
dec
cs
ins
cmp
sar
mov
stos
sti
jmp
fsubr
clc
cdq
retf
sub
lods
(bad)
jl
ret
inc
xor
mov
xor
cli
jnp
fsubr
aad
inc
neg
loope
(bad)
mov
retf
std
arpl
das
and
jge
mov
inc
or
and
or
sub
cmps
dec
into
xchg
outs
ret
std
add
or
addr16
cmp
mov
fcmovnb
jbe
or
mov
les
inc
jo
fisubr
mov
add
test
movs
push
mov
mov
ja
out
cmc
xor
icebp
cmp
and
aam
hlt
movs
jbe
iret
enter
inc
xchg
movs
sub
ucomiss
lods
push
mov
xor
mov
or
pop
mov
movs
jg
xchg
dec
or
test
mov
cmp
jl
shl
int
das
jmp
mov
jns
out
push
clc
push
push
inc
pop
arpl
adc
std
or
and
add
xchg
test
mov
xlat
es
add
dec
push
aam
inc
adc
sub
xchg
mov
test
push
les
mov
pop
dec
pop
or
xchg
mov
data16
ins
sbb
mov
fsub
jmp
(bad)
add
add
rsm
fdivp
in
adc
add
fcomp
dec
mov
pop
retf
test
test
inc
dec
lods
mov
sahf
sub
cmps
jo
nop
ds
stos
mov
inc
jl
and
pusha
sbb
sub
popa
adc
jmp
xor
aas
jl
push
stos
(bad)
fnstsw
adc
or
rol
(bad)
cwde
jae
jae
xchg
jnp
repnz
aad
ins
cmps
into
adc
jmp
dec
out
jbe
xor
xchg
std
cmps
(bad)
stos
adc
fcomp
xchg
sbb
pop
xor
data16
and
fldcw
outs
xchg
imul
pop
fld
cwde
aaa
data16
addr16
cmc
add
xchg
pop
or
cmp
sub
push
sbb
jb
mov
jge
sub
sbb
cld
sbb
jg
inc
xlat
out
jnp
jmp
scas
js
inc
pop
xchg
mov
mov
adc
inc
outs
jmp
push
mov
int
aam
cmps
inc
or
sbb
xor
sub
sahf
sub
cli
push
stos
push
out
dec
mov
fdivr
and
jae
enter
int
aam
mov
xchg
add
adc
ret
pop
adc
cmc
pusha
or
clc
shl
(bad)
ins
in
push
pop
retf
lods
or
mov
sbb
in
adc
pop
inc
jmp
jmp
ja
mov
sub
jno
pushf
mov
js
leave
pushf
cmps
test
icebp
ret
in
imul
cmc
jecxz
scas
pop
nop
jmp
xor
fisttp
lock
mov
jnp
or
xchg
jbe
cmp
ins
in
into
arpl
sbb
fsub
pop
mov
sub
inc
mov
cmp
bnd
sbb
add
mov
push
sub
mov
xchg
fcomp
int
aas
add
fcom
cmps
mov
fcomip
dec
mov
mov
mov
or
jb
(bad)
es
push
fs
push
or
popf
ss
fld
call
mov
cmp
cmp
inc
inc
mov
xlat
and
cmp
xchg
je
ret
in
mov
mov
retf
loop
imul
div
loope
cmp
pop
xchg
popa
mov
out
and
sbb
retf
mov
add
ret
mov
ret
cli
rcl
popf
out
push
lock
nop
or
stos
mov
push
fld
push
push
aad
lock
inc
test
mov
dec
arpl
gs
aam
cmps
jmp
pushf
inc
cld
int
jmp
mov
int3
mov
jg
ja
test
mov
pop
add
pop
inc
cld
push
sbb
cmp
pop
or
cmp
inc
call
xor
sub
mov
aam
push
mov
cmp
cmp
pop
fcom
repz
cmp
sbb
mov
sub
or
push
ret
pop
mov
pop
pop
out
mov
jmp
sbb
xchg
ficom
test
mov
cmp
xor
(bad)
jmp
lds
sbb
(bad)
in
adc
mov
aaa
pop
loopne
adc
inc
xlat
ret
xor
mov
xacquire
fidivr
mov
sub
lahf
xor
mov
adc
lahf
pop
std
xor
mov
ins
jmp
lahf
arpl
dec
ffreep
pop
stc
data16
adc
xchg
push
stc
xchg
push
inc
cwde
scas
pushf
mov
or
xchg
and
push
xor
jmp
sbb
ds
vcmppd
rcr
sbb
repnz
shr
cmps
outs
sbb
retf
ss
dec
sbb
movs
mov
shl
mov
loope
sub
sbb
aad
pushf
dec
inc
or
ror
cmp
jo
call
fld
idiv
out
iret
xchg
in
int
popa
lahf
mov
and
bound
inc
mov
jb
inc
not
add
mov
jae
push
jmp
scas
fwait
mov
sbb
and
pop
nop
mov
ror
aas
mov
daa
fstp
bound
mov
dec
(bad)
push
cmp
jecxz
dec
stos
add
xlat
stos
sub
mov
push
lahf
jne
jmp
mov
sub
push
adc
mov
cmp
dec
or
and
jle
mov
adc
or
pop
fcom
xchg
pushf
cmp
pushf
cmc
clc
stc
hlt
xchg
and
nop
lods
jl
jo
cs
ret
leave
pushf
xchg
test
push
stos
fsubr
mov
jno
aad
mul
sti
sbb
sub
jg
push
test
das
and
pop
in
cs
and
outs
stc
nop
mov
test
arpl
inc
add
sbb
and
cmp
pop
xchg
std
out
iret
(bad)
retf
icebp
push
enter
mov
cmc
or
les
lock
push
mov
mov
stos
cmc
cwde
cmps
adc
retf
inc
daa
outs
(bad)
in
cmp
pop
cwde
xchg
cmp
mov
jl
bound
adc
in
test
push
int
aad
mov
cmp
clc
jle
mov
jb
and
cmp
sahf
add
lahf
aam
sbb
dec
sub
adc
inc
jp
dec
out
bound
sbb
lahf
adc
in
movs
dec
scas
clc
xchg
aas
jne
rcl
test
fwait
aas
and
out
mov
jecxz
ret
xlat
les
repnz
popf
inc
push
cwde
push
mov
std
retf
or
retf
jb
cmc
retf
mov
cs
or
sub
movs
mov
sbb
ret
dec
and
and
in
shr
(bad)
or
pop
sbb
stc
add
pop
test
sub
pop
lock
call
mov
les
jbe
xchg
pop
fstp
imul
pop
stos
pop
imul
jge
jmp
mov
ins
jnp
pop
imul
mov
jne
mov
mov
cli
add
loop
out
xchg
mov
std
out
sub
sbb
add
sbb
mov
dec
(bad)
test
sbb
pop
sbb
adc
inc
ja
pop
movs
repz
xchg
icebp
mov
inc
je
arpl
fldcw
jo
xchg
jae
ficomp
scas
jmp
inc
popa
fs
mov
outs
in
dec
popa
push
xchg
lods
or
pop
xchg
int3
jmp
mov
(bad)
cmc
aas
pop
sub
and
in
scas
rol
jmp
inc
push
inc
aad
aas
mov
and
popf
(bad)
sub
lds
adc
inc
xchg
mov
je
aas
dec
lea
jmp
inc
daa
mov
adc
fnstenv
mov
bound
pop
push
loope
xor
pop
xor
stos
dec
nop
pop
rcr
add
cmc
add
or
mov
pop
fwait
leave
inc
into
inc
xchg
mov
aaa
into
enter
cmc
in
retf
pop
mov
into
push
xchg
add
stos
shl
xor
jl
dec
and
push
inc
scas
add
or
(bad)
push
jg
sub
xor
mov
test
or
test
lods
inc
mov
inc
mov
shl
lods
add
fmul
enter
(bad)
in
cwde
das
in
psrlq
iret
mov
mov
inc
add
push
int3
std
outs
lahf
dec
mov
xchg
je
push
sbb
xchg
mov
bound
mov
retf
retf
cs
and
js
add
jmp
jnp
sub
sub
leave
mov
sub
or
dec
jmp
fimul
mov
bound
inc
(bad)
mov
das
xchg
add
arpl
xchg
and
dec
mov
xchg
inc
cli
gs
pop
lods
push
mov
dec
imul
xchg
inc
cs
jmp
cwde
xchg
jecxz
ret
nop
jecxz
mov
out
jbe
shl
dec
popa
cmc
dec
movs
cdq
mov
mov
adc
fxtract
movs
mov
pusha
aaa
or
push
loop
pop
pop
jecxz
or
and
mov
dec
push
xor
push
mov
or
jg
movs
lock
mov
pop
loop
mov
(bad)
dec
mov
and
xlat
and
sub
adc
ret
pusha
mov
in
cli
xchg
inc
mov
xchg
mov
and
and
sbb
jmp
aas
and
adc
(bad)
and
in
mov
xor
shr
push
stos
adc
fstp
nop
xchg
arpl
lea
pop
mov
sahf
ins
dec
call
mov
pop
(bad)
pushf
arpl
or
ja
and
mov
shl
pop
call
mov
push
std
repnz
arpl
jmp
dec
in
test
in
mov
jge
sub
jle
lahf
gs
inc
xor
fucomi
push
or
mov
js
mov
and
lods
add
jmp
std
xchg
pop
mov
sar
or
cmp
adc
ret
jb
mov
loopne
les
cmps
mov
scas
es
mov
dec
imul
or
out
xlat
bts
xchg
push
jle
push
jle
cld
div
adc
mov
out
push
pop
call
ret
inc
in
adc
test
mov
mov
(bad)
jbe
jecxz
pop
mov
mov
fsub
(bad)
fs
frstor
lods
out
mov
push
les
mov
adc
std
cs
rcl
xchg
push
jge
xchg
test
pop
stc
add
cmp
adc
push
jb
fnstsw
inc
jne
xlat
ins
jecxz
sub
pop
lock
mov
add
sub
in
push
fmul
shr
lahf
or
mov
push
sub
cdq
sub
inc
outs
mov
mov
movs
xor
stc
ins
xor
imul
movs
cmp
adc
out
loopne
jecxz
cmp
inc
xchg
mov
cmps
loopne
pop
xor
xor
call
cmp
(bad)
mov
sbb
out
sub
dec
add
push
fdivr
test
ror
(bad)
ins
(bad)
aam
in
in
rcl
lea
jb
popaw
shl
add
pop
jmp
push
mov
add
pushf
pop
xor
pop
cmc
cmp
sub
adc
ds
imul
xchg
sbb
mov
jb
loope
or
mov
js
lods
push
mov
jg
ret
jo
daa
aam
out
shl
dec
(bad)
mov
into
lock
cmp
jae
test
mov
cmps
out
test
push
mov
sbb
sbb
sbb
or
mov
sbb
jne
call
add
retf
in
sbb
inc
clc
cdq
fnstsw
pop
ins
jnp
out
inc
in
jno
lods
mov
cmp
push
pop
fs
inc
cmp
pop
sbb
hlt
inc
rcl
int
xor
(bad)
sbb
test
movs
outs
cdq
bound
rcl
js
jbe
hlt
js
sub
adc
js
push
jge
mov
test
lods
xor
mov
add
jl
data16
cmp
pop
cmp
jne
xlat
pushf
das
and
xchg
and
outs
xlat
retf
dec
push
mov
mov
jo
outs
div
mov
mov
push
push
jmp
xlat
xchg
cmp
adc
(bad)
cmp
ret
shl
and
arpl
arpl
mov
cld
pop
test
xor
pusha
cmp
xor
in
in
jl
cmps
clc
cli
cmp
push
mov
adc
jecxz
test
push
xchg
sti
push
mov
cmps
adc
outs
ret
ins
ror
jne
(bad)
and
sti
push
inc
push
out
int3
iret
aam
and
mov
fdivr
jp
push
mov
(bad)
jns
mov
jne
push
ins
movs
repz
(bad)
mov
sub
xbegin
repnz
adc
jl
das
jmp
nop
fwait
mov
mov
mov
or
pop
shl
mov
int3
jmp
mov
mov
jb
in
addr16
mov
adc
test
arpl
mov
arpl
movs
sbb
pop
inc
pop
arpl
mov
retf
mov
xlat
jge
vpsrad
xor
adc
repz
repnz
mov
outs
icebp
and
xchg
push
rol
lock
in
push
adc
ror
gs
icebp
sub
mov
arpl
shl
pop
aaa
dec
sub
in
aas
sbb
push
sub
adc
(bad)
and
dec
dec
test
adc
jmp
pop
ins
adc
jnp
inc
adc
dec
cs
adc
jg
jne
icebp
out
test
and
aam
stc
loope
cmps
fwait
clc
jae
loopne
aam
mov
inc
shl
ds
sub
mov
rcl
(bad)
in
je
jmp
in
sub
mov
addr16
sti
xlat
sbb
xor
movs
fld
popf
les
iret
lahf
sub
xchg
sub
mov
xchg
fsubr
(bad)
cmps
mov
pop
mov
ret
jle
jmp
pop
mov
jne
mov
cmp
add
mov
leave
xor
jecxz
inc
sub
int3
rep
pop
fwait
test
jge
(bad)
into
div
sub
jbe
mov
inc
xchg
mov
pop
xchg
fcomp
imul
add
fs
sub
dec
push
ret
or
xor
outs
cmp
imul
push
jne
push
pop
xor
pop
sbb
sbb
out
call
out
hlt
rcl
ficomp
aam
jmp
adc
pop
int3
imul
push
xchg
jle
fild
sub
repnz
cdq
mov
xchg
ret
xchg
mov
sbb
mov
jmp
retf
or
xor
stc
bound
fidiv
mov
test
cmp
xlat
cmp
and
xor
sar
push
jmp
inc
pushw
dec
je
test
mov
lds
or
call
das
repz
mov
aaa
jl
(bad)
movs
pop
sahf
mov
(bad)
dec
es
cwde
stc
mov
(bad)
rol
xor
cmp
cmps
and
out
sar
lock
pop
(bad)
fisub
xor
pop
sub
or
and
aas
dec
sbb
cmps
add
jae
sbb
shr
pop
das
pop
push
into
mov
es
lock
ins
sbb
sbb
sbb
aam
test
sbb
cmp
(bad)
xor
enter
in
popf
stc
add
and
xor
sahf
test
xlat
test
mov
std
xor
test
scas
adc
or
ins
or
(bad)
xor
outs
int
out
call
in
es
xor
shr
scas
sbb
outs
jne
clc
cwde
(bad)
loop
aam
push
das
jne
jmp
mov
jb
inc
add
xor
dec
idiv
push
inc
iret
cmp
push
and
mov
std
outs
fisubr
retf
mov
sub
daa
sbb
xchg
call
(bad)
sub
lods
mov
cmp
jo
icebp
push
push
loopne
movs
movs
xchg
test
xchg
sub
repz
mov
jb
adc
movs
add
(bad)
loopne
stc
mov
std
movs
sbb
push
mov
or
pop
xchg
sub
jns
mov
test
mov
inc
jb
scas
hlt
mov
adc
bound
pop
add
mov
push
fistp
add
retf
pop
sti
or
gs
(bad)
inc
and
in
daa
mov
ds
add
pop
jb
cwde
imul
pop
retf
sub
aas
fs
(bad)
adc
cli
stos
xchg
das
jl
sub
pop
mov
repnz
arpl
test
loope
mov
xchg
gs
add
xchg
repnz
and
movs
dec
xor
mov
enter
mov
je
test
int
jecxz
dec
push
repnz
push
push
sub
js
movs
out
xor
loopne
frstor
or
(bad)
daa
(bad)
xlat
fwait
pop
or
xchg
adc
dec
dec
mov
mov
cli
and
jle
cld
jb
inc
mov
jae
and
push
pop
sub
push
(bad)
cli
xor
and
out
pop
in
jmp
add
xor
fnstsw
xchg
and
fstp
mov
ret
inc
mov
call
pop
adc
(bad)
movs
loope
push
test
and
int3
cmp
or
pusha
test
xchg
ror
xchg
jbe
mov
xchg
lods
mov
lock
jno
cmc
stc
push
jmp
mov
cmp
lock
ins
and
test
fcom
sub
loopne
push
enter
sbb
popa
xchg
leave
xor
push
(bad)
nop
imul
in
jg
repz
ds
dec
pop
mov
inc
xor
xchg
ret
pop
sub
shl
adc
out
mov
push
dec
nop
int
pop
inc
inc
js
xor
clc
enter
mov
iret
adc
sbb
push
jno
mov
rol
sti
jge
cmp
icebp
cmp
adc
dec
(bad)
add
ret
nop
inc
fwait
jmp
je
xchg
dec
pop
imul
adc
xchg
mov
ror
les
daa
push
sub
mov
imul
cwde
fist
clc
call
push
jae
adc
mov
cmp
cmp
(bad)
leave
leave
cmps
out
xor
neg
pushf
imul
xchg
data16
push
sub
out
leave
mov
loope
retf
leave
push
scas
(bad)
or
jne
aas
push
popf
push
or
jl
add
sti
pop
bound
fiadd
jp
shr
ins
hlt
push
pop
sbb
mov
mov
pop
inc
call
ror
push
sub
or
jmp
mov
(bad)
in
or
fdivr
dec
cmp
jp
jle
int
pusha
in
retf
mov
rsm
rol
js
dec
push
int
scas
in
test
xor
fbld
fsub
mov
movs
data16
xor
jge
jmp
jns
cmps
repnz
push
xor
jns
cld
retf
dec
adc
mov
xlat
jbe
mov
ja
ret
daa
push
cli
mov
mov
inc
(bad)
leave
dec
pop
sbb
sbb
ins
test
fdivr
out
or
mov
push
add
mov
mov
or
jnp
ds
fild
jp
jmp
pop
dec
jl
dec
xor
std
sar
push
cmp
sub
nop
inc
pop
enter
sub
sbb
push
mov
iret
push
out
pop
xor
xor
(bad)
cmp
neg
or
shr
xor
mov
mov
iret
(bad)
stos
xchg
push
pop
mov
mov
ret
inc
popa
or
daa
in
loope
cs
icebp
fild
add
push
add
mov
inc
mov
jge
mov
scas
fwait
pop
jno
mov
loope
repnz
cmp
ret
dec
movs
xor
pop
jae
mov
mov
inc
inc
loop
ins
repnz
xchg
pop
jp
call
dec
dec
comiss
adc
pop
cmp
sub
and
ds
fld
fs
add
xchg
lahf
rcr
ja
ins
lea
shr
dec
into
push
inc
loop
jg
push
call
mov
add
stos
sub
(bad)
aad
adc
out
push
fiadd
mov
sahf
push
rcr
push
dec
das
sub
or
cmp
pushf
mov
and
sbb
dec
sub
(bad)
div
cli
fistp
cld
jb
sub
loope
stc
inc
aas
movs
data16
mov
mul
dec
dec
xchg
aam
pusha
cmps
cmp
lods
leave
sub
(bad)
or
out
or
cmc
mov
xor
fcomi
jmp
mov
and
sub
mov
mov
mov
cdq
cld
and
xchg
cli
xor
push
ret
lock
loop
cmps
mov
imul
xchg
jb
pop
inc
dec
movs
aad
mov
into
cmp
adc
das
jo
add
mov
adc
test
jnp
cmp
add
(bad)
xchg
push
nop
push
lds
pop
or
mov
mov
repnz
and
pop
add
fwait
cmp
retf
fs
mov
xor
enter
cmp
or
xchg
xchg
push
adc
nop
dec
xor
and
sahf
mov
sbb
xchg
popf
sbb
stc
adc
and
pop
sub
push
sub
inc
mov
sub
xchg
mov
xchg
pop
movs
ja
xchg
push
mov
in
scas
inc
jmp
pop
xor
shl
out
fadd
rcr
lods
mov
xchg
inc
jmp
in
aas
mov
aad
or
add
pop
pop
int
xlat
mov
lds
(bad)
xchg
aas
std
ror
cmp
push
test
call
cmps
and
cmp
jmp
mov
mov
inc
push
int
loopne
xor
pop
pop
adc
cdq
xchg
stos
psubq
data16
lock
in
mov
fsubr
adc
jb
xchg
jmp
pushf
rcr
aas
hlt
je
nop
lahf
mov
or
cmp
gs
xchg
pop
jb
jbe
cs
jo
sbb
push
push
jge
dec
in
or
outs
in
sti
sahf
hlt
arpl
ja
gs
cdq
out
les
and
pop
cmp
out
cmps
and
lahf
or
mov
xchg
stos
jb
int3
jae
mov
and
xchg
mov
xchg
bound
jmp
fadd
out
sub
add
cwde
fnstcw
mov
xor
sti
mov
and
mov
imul
xchg
imul
mov
arpl
leave
movs
add
cli
adc
aam
leave
in
imul
xchg
aam
sub
mov
icebp
jmp
mov
daa
pop
fcom
fucomip
push
cmp
(bad)
out
xor
mov
(bad)
pop
jb
inc
lds
sbb
sub
cwde
movs
xchg
dec
fdiv
mov
out
fucomi
lods
jb
xor
je
push
mov
lds
push
and
dec
jmp
movs
fs
or
push
sbb
(bad)
stos
push
dec
mov
and
shr
fwait
rol
add
lods
in
inc
and
movs
les
mov
retf
outs
ror
into
and
ror
pop
popf
repnz
mov
nop
adc
inc
sbb
stc
nop
mov
stos
adc
mov
inc
mov
xor
movs
ror
inc
mov
or
cs
sbb
cld
push
fcmovnu
stos
fsubp
loope
and
icebp
pop
dec
adc
outs
(bad)
adc
sub
call
push
iret
out
pop
mov
leave
adc
popf
mov
mov
out
cmp
sbb
xlat
stos
js
pop
xlat
cli
pusha
loop
pop
inc
movs
clc
test
cmps
mov
enter
fwait
shl
je
test
mov
fsub
test
mov
and
cs
ret
push
rcl
xor
push
mov
push
xchg
lock
mov
and
stc
aad
ss
pusha
pusha
adc
sub
cmps
enter
movs
stc
sbb
adc
inc
cmps
in
loop
retf
arpl
js
mov
mov
push
ret
and
xchg
mov
sub
push
repz
inc
xlat
addr16
add
sub
dec
sub
test
jge
xor
or
sub
aam
xor
xchg
imul
or
or
into
xor
adc
add
cmp
cmps
mov
pop
(bad)
cmc
(bad)
jg
out
test
pop
fimul
int
mov
aad
mov
movs
mov
ins
jbe
dec
fisubr
fwait
dec
mov
inc
add
cmp
mov
fcomip
scas
mov
pop
addr16
aam
inc
and
das
push
jnp
stos
or
sbb
(bad)
mov
ss
mov
cmps
sbb
inc
xor
pop
sti
xor
test
mov
sbb
sbb
ret
jmp
push
dec
fistp
ss
push
(bad)
(bad)
cmp
mov
retf
aaa
shr
stos
add
and
xchg
mov
and
pop
scas
sub
pop
dec
fdiv
pusha
xor
xlat
(bad)
out
int
retf
cmp
mov
ja
in
add
ins
int
mov
push
xchg
dec
fs
and
jmp
les
dec
mov
push
ret
in
(bad)
sub
ret
jl
movs
loopne
pop
sbb
cmp
mov
loopne
into
loop
in
mov
stc
clc
cmp
fistp
ins
mov
add
hlt
and
or
adc
xchg
jbe
(bad)
sub
push
pop
inc
adc
icebp
repz
rol
xchg
push
das
stc
movs
(bad)
std
lea
scas
bound
repz
dec
pusha
mov
pop
int3
dec
into
call
outs
pop
lods
nop
ss
push
and
cwde
or
and
popa
push
(bad)
out
jnp
mul
mov
and
mov
dec
sahf
test
scas
enter
pop
inc
cdq
retf
inc
push
adc
lahf
mov
adc
mov
into
(bad)
mov
mov
out
loope
pop
hlt
pusha
jmp
scas
and
jmp
mov
nop
cmp
xlat
lahf
cmp
mov
and
repz
and
cmps
pop
mov
out
pop
jb
aam
xor
push
xlat
sbb
adc
mov
inc
enter
adc
inc
fst
xchg
call
fdivr
pop
cli
jmp
pop
scas
and
cmp
and
loope
sbb
sub
iret
ins
adc
or
mov
cli
push
leave
ins
lods
pop
adc
jp
pop
fimul
popa
scas
outs
adc
lods
mov
mov
jne
sub
add
ins
push
sbb
or
jne
fwait
and
add
push
out
ds
inc
daa
(bad)
mov
retf
stos
clc
outs
mov
(bad)
call
jae
loope
inc
int
pop
adc
xchg
out
in
mov
enter
dec
cs
clc
aas
dec
pop
inc
je
scas
or
push
mov
or
xor
repz
inc
sbb
pop
xchg
dec
mov
cld
mov
pushf
push
stc
aas
dec
or
inc
cwde
mov
xchg
cmp
rcl
stos
into
mov
dec
fwait
inc
imul
mov
(bad)
fiadd
sub
adc
xchg
out
xor
push
scas
sub
daa
nop
or
pop
aas
xor
icebp
aad
adc
mov
or
mov
add
or
in
mov
jmp
imul
lods
jbe
add
sub
xor
in
or
outs
jmp
bound
push
in
(bad)
daa
or
or
cmp
jb
sub
out
add
out
push
fnsave
hlt
mov
dec
gs
in
clc
push
xchg
cdq
xchg
jecxz
adc
mov
es
sti
enter
dec
or
daa
xlat
mov
xchg
xor
xchg
stos
push
sub
sub
cs
sbb
rcr
mov
lock
sbb
test
push
addr16
aad
fchs
cmc
out
pushf
add
sub
js
arpl
or
jnp
fsubr
add
pop
cs
je
mov
and
jb
xor
add
push
and
and
inc
mov
jae
xor
imul
adc
cmp
cld
xchg
stos
and
sbb
cmp
jnp
xchg
fisttp
mov
dec
ss
fnstsw
into
xlat
clc
xchg
xchg
test
add
scas
scas
xor
repz
cld
xchg
icebp
jmp
loop
dec
sti
enter
sub
add
movs
mov
popa
push
ins
les
add
mov
inc
ror
in
sbb
mov
mov
or
xor
cmp
(bad)
test
pop
(bad)
leave
pusha
aam
pop
and
cmps
gs
(bad)
js
sbb
pushf
jno
add
lods
mov
es
add
pop
jbe
inc
sahf
jl
xor
jecxz
clc
imul
ja
mov
mov
int
enter
dec
fs
jo
popf
pop
mov
inc
pop
mul
das
leave
scas
cmps
popf
mov
repnz
(bad)
mov
scas
jnp
inc
std
xchg
xor
mov
clc
jecxz
mov
hlt
cmp
adc
popf
xor
adc
pusha
xchg
ror
jge
loopne
mov
inc
lock
pop
xlat
arpl
jp
mov
mov
dec
push
xchg
mov
cmp
sbb
or
test
fild
push
mov
hlt
xchg
xchg
fisub
push
pop
into
popa
sub
lahf
shl
sbb
ret
sub
idiv
sbb
pop
neg
inc
sbb
push
mov
test
adc
adc
pop
lds
out
jae
xor
mov
cdq
call
pop
pop
jb
and
cmp
mov
push
sbb
mov
ds
and
or
and
int
xchg
stc
mov
outs
jno
pop
push
icebp
in
out
sbb
in
xor
std
push
pop
movs
xor
dec
mov
cmc
cdq
and
mov
push
dec
push
cmp
fcomp
jo
push
pop
movs
out
loop
mov
retf
jmp
cmp
stos
and
jnp
in
jl
loope
adc
cmp
jmp
pop
pop
lods
inc
mov
lods
sub
mov
iret
mov
mov
aam
mov
lods
ss
into
lea
push
or
out
sub
fisttp
aam
cmp
mov
push
scas
mov
and
or
mov
and
mov
sbb
push
mov
cmp
out
push
fadd
xor
mov
test
scas
aam
mov
sub
xor
sbb
or
sbb
fdiv
cdq
test
clc
fldenv
or
or
jmp
scas
mov
pop
(bad)
mul
nop
(bad)
call
jmp
mov
jmp
xor
ja
pusha
pop
dec
rep
popf
dec
pop
dec
push
xlat
ret
sub
cdq
jle
or
and
jmp
cmps
mov
sbb
aad
mov
sub
fs
inc
aas
dec
cld
jg
ins
clc
push
inc
in
movs
push
call
das
int
cmp
and
ror
outs
adc
dec
(bad)
dec
fild
dec
push
outs
push
ins
inc
fxch
popf
xchg
sub
pop
pop
push
inc
(bad)
pop
mov
hlt
xchg
out
push
xchg
push
les
jbe
out
sub
push
mov
adc
xchg
add
es
outs
(bad)
or
shl
adc
adc
push
mov
push
adc
test
fdiv
sbb
leave
popa
xor
pop
sub
loope
imul
adc
cld
inc
jno
enter
push
jmp
pop
loope
xchg
mov
cmps
leave
push
not
(bad)
int3
cmps
cmp
push
jmp
stos
jmp
sbb
inc
jnp
fs
add
repnz
daa
jmp
adc
aad
mov
mov
movs
mov
jno
add
adc
push
aaa
je
call
mov
fsubr
push
mov
std
addr16
adc
ja
cld
out
dec
cdq
sub
rol
fdiv
xor
call
push
xor
popf
xchg
sub
arpl
adc
sub
out
frstor
mov
sti
xchg
popa
movs
imul
popa
sbb
or
call
hlt
mov
jle
inc
mov
sbb
fwait
test
sub
adc
add
adc
sahf
mov
jg
jmp
mov
push
or
inc
jecxz
fidivr
cwde
repnz
das
push
(bad)
out
jecxz
dec
push
cli
in
sbb
fs
enter
push
loop
and
pushf
fs
scas
out
ror
ror
(bad)
mov
test
std
jb
hlt
cmp
dec
rcr
lods
clc
cdq
adc
dec
das
or
mov
jg
or
add
cli
add
fstp
jl
test
cmp
jge
xor
leave
aaa
push
mov
sub
pop
int3
push
mov
xchg
repnz
push
pop
ins
cs
aad
loop
repz
pslld
outs
push
mov
adc
sub
add
push
ret
scas
sbb
xor
dec
(bad)
fcmovu
pop
ret
pop
ret
retf
mov
lods
cmp
and
mov
jg
(bad)
jmp
mov
ror
pop
sub
pop
xor
adc
mov
jp
sbb
and
nop
mov
fidivr
(bad)
mov
add
out
jp
xor
push
movs
fstp
add
loop
(bad)
clc
pop
sbb
int
mov
pop
jl
aad
mov
mov
lea
dec
je
sbb
dec
arpl
push
cmc
xchg
mov
movs
fidivr
lock
add
scas
pop
pop
(bad)
jne
xlat
mov
stos
dec
sti
xor
call
mov
addr16
test
daa
pop
jg
test
fcom
xor
pop
dec
mov
adc
adc
cmps
sub
xchg
xchg
mov
sub
pop
inc
loop
pop
cld
xchg
mov
mov
xchg
dec
fmulp
xlat
lds
push
pop
nop
outs
dec
cdq
lahf
sub
addr16
jmp
int
leave
cdq
cmc
fcomp
rcl
test
push
cmps
jge
leave
ins
dec
adc
mov
arpl
mov
int
jmp
xor
hlt
(bad)
jg
imul
push
jle
sub
xchg
ja
jle
dec
fistp
fwait
cwde
push
in
(bad)
hlt
dec
retf
test
(bad)
mov
ins
push
sub
retf
test
xor
adc
repnz
fidiv
mov
cmp
and
call
inc
jbe
mov
js
pop
mov
pop
cmp
ret
mov
sub
cmp
mov
sub
xchg
cs
xor
sub
into
pop
mov
pop
xor
adc
cs
lock
cmps
aas
inc
xor
in
xchg
xor
and
stos
je
loop
sbb
ds
and
mov
sbb
je
and
movs
sbb
cmp
fld
and
test
xor
sub
mov
cmp
pop
mov
dec
mov
sub
mov
xchg
gs
loop
cmp
arpl
jecxz
and
jl
mov
les
or
clc
ins
test
push
imul
call
popa
ja
mov
pop
or
es
test
in
cmp
adc
lods
aaa
and
sti
in
paddsb
xchg
xchg
or
rol
jb
rol
add
cmp
fcmovnbe
jg
mov
gs
les
sub
inc
es
inc
inc
std
mov
dec
out
not
add
inc
mov
test
adc
int3
retf
repnz
das
pop
mov
int
dec
into
pop
xor
loope
mov
loop
xchg
jns
lea
xor
mov
push
out
mov
sub
push
sbb
fs
pop
xor
push
std
jbe
add
cmp
outs
add
cmp
xchg
ret
or
cmps
fstp
cli
mov
xor
xor
or
ret
loope
mov
sbb
inc
xor
adc
and
ins
push
sbb
dec
add
gs
or
push
add
push
jmp
inc
popf
pushf
cmp
xor
sub
test
sub
rcr
push
mov
and
sahf
das
(bad)
xchg
cmp
clc
or
ins
xchg
test
in
cmp
jmp
jecxz
ret
xor
pop
sbb
push
mov
jmp
in
xchg
test
lahf
(bad)
in
out
inc
xchg
(bad)
xchg
and
in
test
loopne
ror
pop
xchg
fstp
loopne
fs
push
arpl
jge
cmp
inc
inc
mov
jnp
cmps
adc
ret
mov
cmp
pusha
and
mov
mov
popf
sub
loope
cmc
mov
imul
dec
movs
pop
sbb
pop
(bad)
aam
jnp
xor
sbb
xor
jge
sbb
xchg
lock
jmp
mov
mov
jg
sub
(bad)
fsubr
pop
enter
imul
sub
jb
aam
cmp
aaa
leave
(bad)
fidivr
inc
and
dec
cld
xor
cmp
jmp
lahf
inc
mov
mov
cli
xor
cmp
and
jae
bound
mov
hlt
push
jnp
mov
jns
xchg
loopne
test
hlt
ss
fist
dec
pusha
push
(bad)
inc
cmp
lods
dec
pop
scas
lods
dec
dec
mov
popf
leave
je
out
dec
ins
in
call
int
xchg
push
test
cmp
iret
aas
ins
je
xor
xchg
cld
les
movs
cmp
mov
jo
mov
daa
jne
or
shr
mov
cmps
out
inc
dec
jo
sbb
push
dec
cmc
shr
test
xor
add
gs
push
or
xchg
aaa
jmp
or
ja
xlat
stc
call
push
push
pop
mov
rcr
mov
or
and
addr16
mov
xchg
mov
or
xchg
mov
cmp
jno
push
sub
imul
aaa
lock
inc
xor
test
add
(bad)
mov
xchg
imul
jns
arpl
jnp
sbb
xor
xor
mov
data16
cmp
pop
sub
push
push
(bad)
jns
call
push
ret
int
stc
adc
lock
xor
xor
xor
push
sar
add
ja
sbb
aaa
fisubr
mov
gs
mov
(bad)
out
in
cmps
mov
mov
jo
pop
loopne
xor
adc
xchg
jge
mov
cmp
or
xor
inc
push
je
ins
xchg
xchg
cmc
push
jmp
outs
pop
xchg
enter
imul
fldcw
and
loope
add
cmp
sub
mov
push
mov
cdq
fs
mov
jl
xor
pop
dec
adc
mov
std
in
pop
test
mov
aam
imul
mov
lods
jnp
inc
xchg
cmp
jne
mov
dec
dec
inc
push
es
test
xor
scas
xlat
mov
pop
sahf
xchg
jge
xchg
rcl
inc
and
(bad)
(bad)
out
cmp
shl
push
int
(bad)
imul
call
pop
ror
shl
jecxz
jmp
cs
pop
add
sbb
aas
inc
out
jecxz
dec
int
into
or
pop
xor
push
jmp
je
popa
cmps
ds
clc
icebp
lea
adc
cld
test
outs
lds
or
add
test
push
out
jp
sbb
push
dec
lods
and
sbb
fisttp
jae
call
ret
push
(bad)
adc
scas
xchg
or
xchg
pop
ror
cmp
enter
outs
pop
fisub
or
cmp
xchg
jmp
aam
dec
inc
movs
shr
ins
fisttp
and
cmp
fisttp
add
pop
inc
aam
jmp
cdq
mov
add
and
cmp
inc
xchg
mov
xchg
stc
cmp
dec
icebp
nop
fs
push
pop
test
mov
and
outs
mov
mov
add
mov
neg
outs
add
push
pop
cmp
call
call
mov
push
es
mov
pop
or
mov
push
aaa
push
sub
cmps
stc
out
add
jle
pop
push
jae
cmp
pop
add
arpl
scas
mov
mov
das
packsswb
push
fistp
push
shr
inc
je
jmp
outs
xor
xor
adc
cmp
out
test
aas
les
push
fcomi
pusha
call
and
xchg
add
mov
adc
cmp
mov
ret
push
push
pop
popf
loope
out
ss
push
inc
push
cmp
shl
mov
les
mov
das
shl
enter
inc
mov
int
test
outs
ficom
cmc
adc
jmp
push
xchg
(bad)
call
sbb
test
leave
inc
js
stos
add
in
fwait
and
push
xor
push
sbb
cld
ja
aam
mov
cmp
inc
stos
and
or
jmp
push
pop
ss
mov
enter
popf
retf
js
mov
mov
(bad)
push
mov
rcr
iret
mov
cli
sub
leave
test
push
lock
push
mov
test
push
dec
add
ror
mov
ins
push
jae
and
push
mov
jmp
sbb
push
inc
xor
mov
mov
lods
popf
ffree
pop
sbb
loop
or
jo
into
adc
into
add
pushf
fst
enter
std
and
cmps
scas
xor
mov
xor
test
or
pushf
mov
jmp
sub
ja
movs
out
inc
aam
or
xchg
cmc
(bad)
das
jo
xchg
cld
rcr
cwde
sbb
adc
data16
mov
sbb
add
inc
lea
mov
dec
es
xor
sbb
mov
sub
mov
or
cld
push
addr16
jle
adc
mov
mov
call
cdq
add
ficom
dec
rcr
test
dec
jp
aam
mov
movs
add
loope
popa
adc
dec
rcl
inc
(bad)
sti
adc
and
xchg
popf
test
pop
fnsave
aam
sar
mov
ficomp
xor
inc
out
ins
or
push
mov
mov
lods
xchg
xchg
jmp
sbb
out
iret
retf
push
sub
push
xchg
jl
cmps
mov
clc
cdq
popf
jo
jno
lods
xor
push
add
mov
enter
mov
add
pop
and
mov
push
mov
stos
jle
fist
nop
jo
icebp
jmp
inc
fnstcw
sub
enter
inc
add
fxch
pushf
shl
aad
sbb
xor
push
or
(bad)
das
cli
xchg
(bad)
jns
jecxz
jb
xor
xor
scas
jae
mov
xor
pop
or
mov
push
xor
int3
hlt
and
sbb
loope
xor
pop
mov
mov
cs
stc
(bad)
out
jmp
pop
fidivr
fdivr
mov
ret
jno
inc
xor
out
push
int
repz
xor
icebp
sbb
inc
cmp
je
push
sub
pop
mov
test
loopne
jge
and
mov
dec
test
je
inc
push
call
stos
int3
inc
cmp
or
xor
sbb
jae
sbb
fnstenv
sub
je
adc
mov
xor
mov
adc
in
pushf
jge
pop
xor
jge
jle
das
mov
mov
fwait
mov
push
imul
jbe
fisttp
mov
sbb
mov
adc
xor
sahf
adc
imul
or
int3
cld
movs
add
sub
pusha
mov
xor
inc
mov
push
shl
lods
jle
aam
enter
sub
mov
mov
or
pop
ror
pop
loope
adc
shl
xchg
mov
xchg
pushf
mov
mov
adc
loopne
rcl
add
lock
and
arpl
or
adc
imul
pop
ja
cmp
inc
jnp
jnp
ja
or
cdq
mov
sahf
ja
test
rcl
js
or
retf
je
(bad)
hlt
fisub
mov
pop
icebp
inc
rcl
fbld
mov
xor
inc
(bad)
(bad)
(bad)
test
mov
pushf
mov
cmc
jp
mov
cmp
test
jae
sub
adc
sub
mov
cwde
cmps
or
pop
fld
stc
out
fiadd
and
mov
dec
out
pop
rdmsr
pop
xor
push
retf
cmp
mov
cmps
dec
stos
aas
push
mov
push
xor
add
(bad)
mov
mov
call
push
jmp
push
xor
cdq
sbb
test
popa
jmp
fsubr
inc
pop
sbb
cmc
pop
pushf
push
cld
sbb
add
xor
pusha
lock
mov
add
mov
pop
scas
enter
scas
mov
lock
(bad)
cmp
jae
adc
push
sbb
mov
jnp
(bad)
jmp
les
push
jno
mov
push
ror
inc
or
imul
fld
mov
test
push
mov
loope
mov
mov
(bad)
out
cmc
jae
jae
lea
mov
mov
addr16
mov
jg
imul
jno
mov
(bad)
push
test
lea
ja
pop
pop
lock
xor
cmc
xchg
jae
mov
fnstsw
xor
push
jmp
mov
and
and
lahf
ret
and
out
mov
sub
sbb
add
mov
ret
sub
in
jae
mov
shr
mov
or
add
dec
cmp
pop
adc
jecxz
in
movs
or
jnp
(bad)
fild
mov
cld
add
mov
ret
xchg
out
jg
cmp
loope
cmps
test
push
addr16
cdq
mov
cdq
test
mov
test
xchg
dec
jg
pop
sub
cwde
das
sbb
jns
xchg
icebp
xchg
icebp
scas
mov
inc
daa
rcl
inc
cs
rcr
popf
div
fwait
jmp
je
lock
ins
xchg
js
adc
and
xchg
push
daa
(bad)
in
push
jno
mov
sbb
pop
mov
add
inc
xchg
mov
inc
cmps
sub
jne
imul
std
mov
stos
out
pop
fwait
pop
sub
mov
fstp
cmp
inc
push
out
movs
inc
mov
stos
shl
in
and
mov
arpl
dec
sub
or
pop
inc
cmp
pop
dec
inc
push
retf
mov
or
cmp
js
mov
dec
mov
xor
dec
retf
pop
je
cdq
jno
arpl
arpl
stos
fwait
(bad)
cmp
pop
test
outs
sub
xchg
enter
out
ret
aaa
sahf
out
loopne
inc
inc
xor
repnz
jb
jnp
sbb
jns
mov
xchg
ja
adc
push
out
out
sar
mov
mov
xchg
fdiv
mov
mov
(bad)
xor
push
shr
ret
inc
test
add
shl
push
ret
scas
mov
test
sub
adc
leave
push
retf
popf
or
daa
popf
jnp
pop
je
mov
mov
cli
mov
inc
ret
mov
fcom
mov
or
fucom
mov
fsub
jp
xchg
lahf
add
jb
and
call
(bad)
(bad)
cmp
adc
cs
pop
ror
jo
test
stos
(bad)
mov
pop
or
pop
popa
pop
mov
out
fmul
adc
jle
jnp
inc
adc
jge
pop
mov
or
cmps
cmp
jne
lds
cmp
or
(bad)
jns
movs
das
xor
dec
gs
outs
repnz
leave
test
aad
and
sub
test
adc
ror
ret
sbb
xor
(bad)
jnp
js
cmps
scas
aaa
pop
lods
fcom
(bad)
cmc
add
jo
push
cmc
sbb
das
xchg
ret
div
ror
add
test
adc
sub
cdq
in
(bad)
fs
out
lods
dec
mov
cmp
inc
repz
test
sbb
sub
pushf
mov
fcom
sbb
dec
pop
loop
cli
sbb
scas
add
xchg
int3
inc
mov
out
jl
cld
aaa
sub
push
xor
dec
push
dec
jg
ds
repnz
test
jnp
mov
imul
inc
lds
mov
add
ror
sub
push
out
jns
mov
jp
loopne
cmp
dec
fistp
jns
es
cmp
jp
mov
out
dec
ret
or
scas
jo
sahf
lahf
daa
rcr
sbb
fdivr
in
ret
sbb
data16
cmp
mov
stc
fsub
or
dec
mov
jnp
ja
mov
pop
push
and
mov
push
pushf
fsub
cdq
sbb
popa
(bad)
pop
enter
pop
mov
mov
retf
jne
sbb
in
sub
add
pop
mov
(bad)
in
xor
cmps
xchg
fcmovb
sub
(bad)
cmp
pop
arpl
sbb
lds
in
xlat
add
jns
cwde
push
lahf
sar
test
push
(bad)
jne
mov
jbe
mov
mov
mov
aam
fucomip
retf
cmp
and
mov
fidivr
test
into
xlat
outs
and
xor
mov
les
sti
ja
jo
shl
mov
jb
sub
sub
stos
cmp
pop
add
jge
xchg
sub
cmps
scas
mov
ror
outs
mov
loop
dec
les
add
mov
scas
push
inc
adc
fst
push
push
mov
jle
pop
out
push
rcr
shl
jge
sub
les
adc
popa
pusha
cmp
mov
add
ins
sar
adc
test
push
pop
mov
neg
push
mov
jne
mov
and
(bad)
retf
in
cli
mov
inc
call
dec
sbb
sub
push
in
mov
or
jne
pop
dec
mov
(bad)
inc
or
mov
(bad)
dec
outs
and
pushf
rcr
icebp
pop
dec
jle
jo
pop
dec
cmp
cmp
inc
je
mov
mov
pop
lods
push
pop
in
js
or
xor
sub
dec
pop
inc
ins
(bad)
pop
in
rol
mov
int
jl
mov
popf
cmp
loope
mov
mov
(bad)
sahf
clc
jne
or
mov
lods
sbb
jge
ds
fsub
push
clc
dec
mov
out
(bad)
call
rcl
mov
imul
rcl
push
pop
ins
mov
cmp
into
ret
jnp
xchg
hlt
sub
(bad)
test
or
loope
repnz
sti
inc
adc
sahf
fwait
mov
outs
xor
(bad)
fistp
inc
xchg
jae
and
addr16
retf
push
sub
xchg
ja
rol
scas
in
not
loope
retf
jle
cmc
jle
inc
mov
lock
cmps
pop
push
idiv
sub
stos
out
sahf
xchg
aam
mov
cwde
loopne
ror
or
adc
mov
pop
adc
or
jne
cmp
adc
adc
das
in
pop
add
inc
neg
dec
call
mov
shl
sub
xchg
push
xchg
pop
neg
jp
or
adc
ret
xlat
mov
fdivr
leave
leave
mov
cmp
sub
pop
mov
xor
mov
cmp
xchg
add
out
cli
in
iret
push
pop
imul
mov
jbe
or
out
jno
enter
or
nop
dec
pop
mov
test
cmps
cmp
xchg
sti
inc
jmp
jne
dec
jno
jb
cmp
cli
xchg
jne
imul
mov
xor
ret
jmp
in
pusha
jnp
push
sbb
les
std
or
ins
imul
idiv
mov
adc
xor
icebp
cmps
xchg
outs
lea
inc
xor
es
jmp
mov
fidivr
scas
sbb
dec
scas
fcmovu
lea
jns
out
call
sub
mov
sbb
push
idiv
stos
xchg
inc
ret
and
jmp
out
int
jge
mov
cdq
xchg
cmps
dec
inc
ins
jbe
mov
push
adc
scas
int3
cdq
add
aam
dec
out
aas
(bad)
fist
outs
fisub
pusha
xor
mov
push
pop
xor
push
out
xor
jne
xlat
push
shl
(bad)
test
push
or
ret
setno
mov
adc
in
inc
jbe
fistp
mov
pushf
out
add
pusha
xor
ins
and
test
ins
sub
imul
sahf
call
jnp
ins
xchg
xchg
mov
fwait
and
pop
loopne
out
mov
call
fldenv
dec
gs
cmp
and
pop
adc
mov
inc
popf
daa
call
jp
out
inc
or
xchg
out
and
repz
mov
(bad)
and
add
movs
ja
jle
add
add
sbb
ficomp
mov
and
icebp
fst
cmp
ins
inc
xchg
pop
pop
xchg
xchg
mov
ins
inc
aad
addr16
repz
lea
adc
mov
push
jae
push
dec
dec
int3
xchg
sub
ret
loope
call
mov
or
mov
mov
cmps
nop
in
xchg
adc
cwde
dec
cmp
in
inc
fdiv
in
out
jae
inc
push
retf
rcr
idiv
dec
cli
(bad)
(bad)
or
stos
xchg
push
mov
cmp
cmovbe
add
or
dec
outs
inc
xor
xchg
cmp
push
cdq
mov
cmps
inc
ror
jmp
mov
xchg
xchg
repz
inc
stos
cmp
je
in
push
pop
sub
fdivr
jo
push
and
inc
xchg
adc
aaa
in
push
mov
repnz
xor
cs
xchg
cmps
(bad)
iret
ja
sti
sub
xor
inc
add
mov
jle
sub
and
iret
mov
xchg
pop
retf
pop
push
push
fnstcw
pushf
cmp
test
xchg
mov
lea
rol
or
push
pop
lock
pushf
mov
mov
out
rcr
xlat
mov
sub
mov
add
sub
inc
ret
add
popa
dec
out
xchg
xchg
cld
push
leave
stc
adc
cdq
inc
jmp
lods
repz
retf
fadd
mov
xor
test
pop
(bad)
lods
cmps
inc
cmps
or
mov
push
arpl
cs
xor
stos
mov
lea
mov
lock
mov
mov
movs
xchg
shr
add
cdq
jmp
and
ror
mov
inc
mov
mov
and
or
and
mov
scas
and
xor
dec
out
fcom
icebp
or
push
xchg
inc
add
jo
and
mov
aas
sbb
stc
xchg
sub
inc
mul
and
stos
xchg
(bad)
movs
loop
dec
xchg
or
jl
push
stos
test
bound
out
mov
sbb
cmp
loope
loope
add
into
and
fidiv
sbb
test
(bad)
lea
xchg
subps
mov
aaa
and
sbb
imul
cwde
or
fisttp
pop
movs
fcomp
js
int
jne
jecxz
sti
pop
fcomp
xchg
dec
cld
mov
or
dec
pop
cmps
sbb
and
and
jae
adc
out
xlat
push
lods
push
sub
popf
ins
jmp
mov
xchg
sub
sbb
(bad)
cld
imul
outs
dec
mov
adc
adc
cli
mov
adc
les
jo
cmp
mov
retf
sub
adc
add
test
jns
retf
add
sub
shl
and
add
sub
sub
cli
sub
ins
into
popa
pop
push
dec
pop
push
jbe
cmp
ds
xchg
call
clc
dec
xchg
mov
adc
xchg
jmp
leave
std
jge
dec
pop
stc
test
xor
leave
xor
jbe
ds
push
mov
aad
jmp
(bad)
cmp
sbb
ror
scas
sub
jl
sub
test
jmp
adc
mov
xor
jo
ja
push
movs
mov
ss
push
cmps
lahf
lea
sbb
fs
lahf
inc
xor
cli
dec
push
mov
adc
xchg
out
and
ret
bound
data16
sub
jo
dec
mov
es
test
xchg
push
sbb
out
or
scas
out
imul
mov
and
test
pop
mov
push
mov
mov
leave
mov
pop
and
rep
pop
sbb
stos
loopne
sar
dec
leave
hlt
push
fistp
idiv
dec
pop
xor
sbb
gs
data16
sub
adc
not
out
xchg
test
and
inc
fsubr
adc
stos
in
idiv
sti
mov
(bad)
imul
push
cs
adc
and
push
inc
lods
retf
cmps
mov
enter
mov
cld
mov
and
jmp
ficom
clc
xor
xchg
lods
mov
sub
dec
sub
xor
jns
xor
imul
gs
cmps
in
lods
jno
add
pop
mov
push
jl
cmp
inc
(bad)
cmp
stos
inc
mov
xor
jle
jecxz
ret
sbb
push
and
sub
pop
mov
push
adc
stc
pop
ficomp
push
or
inc
jmp
jae
fidiv
inc
pop
inc
add
sti
test
je
cmp
ret
pushf
dec
mov
inc
mov
mov
enter
xchg
sub
inc
xchg
inc
push
(bad)
cmp
test
repnz
jecxz
retf
dec
mov
(bad)
popa
jne
test
ficom
mov
fld
xchg
xor
or
pop
arpl
xchg
xor
sbb
icebp
scas
rol
in
test
mov
push
mov
mov
xchg
mov
cdq
jb
scas
test
jmp
mov
stos
jbe
ror
movq
push
in
mov
add
pop
push
imul
call
ror
dec
add
and
repz
jp
cmc
popa
sbb
pop
pushf
dec
dec
add
mov
ret
call
mov
es
push
cmp
jge
mov
out
xor
shl
leave
arpl
dec
xor
jg
in
cmp
cdq
pop
imul
in
ins
rcr
jmp
ins
data16
popa
jmp
(bad)
mov
pop
sbb
mov
cmp
dec
cwde
(bad)
xchg
inc
aaa
lods
adc
mov
fdiv
adc
ins
xchg
fdiv
cmps
cmp
leave
jl
xchg
jb
mov
inc
add
and
das
je
inc
test
cmp
cmp
aaa
jnp
pop
mov
xor
sub
mov
lods
inc
jge
push
mov
and
aam
xchg
in
jbe
into
mul
ficomp
and
add
jecxz
inc
pop
outs
fist
lahf
xchg
movs
jp
jb
mov
xchg
and
xor
add
into
out
cmps
jo
bound
jnp
(bad)
(bad)
mov
dec
pop
jle
or
inc
xchg
call
sub
fwait
ins
(bad)
in
mov
nop
loop
inc
in
jb
retf
stos
addr16
cdq
imul
xchg
xlat
xchg
jge
xchg
push
cmp
mov
scas
ja
fbstp
dec
xchg
vphaddubd
dec
sbb
sar
jle
leave
or
repnz
jmp
(bad)
lods
jmp
ja
pop
jl
lods
mov
mov
aad
mov
int
fwait
pop
movs
stc
jne
mov
mov
lods
aad
cli
fwait
push
arpl
std
cli
in
shl
push
aas
jns
or
jb
es
movlps
test
mov
inc
push
ror
adc
xor
retf
mov
sub
mov
add
test
or
xchg
cmps
daa
enter
test
pop
inc
add
inc
je
and
adc
inc
push
or
xor
push
adc
sbb
lahf
mov
jae
pop
xlat
sbb
jns
mov
xor
or
lock
aas
test
xchg
sti
dec
push
sti
mov
test
call
test
push
or
les
add
cmp
mov
addr16
and
pop
and
clc
pop
xor
jmp
pushf
out
fild
fwait
jg
leave
pusha
(bad)
xor
or
call
loop
mov
mov
call
fs
mov
stos
cmp
fstp
or
push
stc
scas
mov
jb
dec
jp
cmp
add
int3
or
ja
mov
retf
xor
or
mov
mov
add
sbb
nop
ffreep
out
outs
(bad)
push
xchg
push
fmul
test
loop
xchg
inc
cmps
add
test
cdq
cmps
pop
pop
sub
cdq
fidiv
jmp
mov
xchg
xchg
jno
imul
jg
das
jno
pusha
aaa
cdq
lea
lods
dec
repz
dec
pop
popf
add
dec
(bad)
stos
data16
cmp
xor
popa
inc
adc
dec
shl
cmps
in
gs
jns
stos
or
ja
(bad)
sbb
inc
or
dec
add
xor
mov
mov
lods
outs
pop
jle
std
jno
adc
int
push
mov
xchg
and
sub
(bad)
loope
int3
ds
push
adc
std
jo
add
inc
cld
jno
neg
push
jge
call
(bad)
sti
aaa
sbb
sub
jge
int
sbb
push
(bad)
sbb
dec
sub
sbb
dec
in
pop
iret
loope
shl
scas
out
jo
adc
xor
inc
xchg
push
and
pop
adc
test
imul
neg
add
(bad)
(bad)
das
cs
hlt
ror
push
test
hlt
add
xor
inc
mov
fmul
(bad)
sbb
mov
push
loopne
push
icebp
sti
mov
mov
fsub
adc
test
mov
stos
(bad)
mov
push
mov
add
push
fistp
push
or
add
sub
pop
sti
arpl
call
dec
cwde
aad
pushf
xor
repnz
adc
leave
sar
dec
imul
call
xchg
xchg
rol
push
in
lds
jns
xchg
ss
or
xor
je
cmp
ss
jne
imul
adc
sbb
test
pop
xor
add
xchg
jle
movs
push
into
test
stos
jnp
mov
pop
sar
sub
cmp
pop
cdq
out
inc
and
loopne
loope
sub
sub
retf
ins
ficom
lea
jmp
inc
call
add
arpl
adc
call
(bad)
and
in
jnp
ret
repz
arpl
jnp
sub
or
pop
mov
sar
fs
int3
jg
jg
push
sub
cmp
in
stos
dec
call
pop
push
jnp
xchg
jmp
mov
cmp
push
fadd
xchg
jns
cmps
out
cmps
clc
or
jge
sub
ret
call
int3
or
shr
gs
or
std
pop
jbe
addr16
mov
stos
cmp
xor
xor
jge
cs
shl
fsqrt
dec
cmp
test
js
add
(bad)
call
sub
sbb
cmp
pusha
adc
xor
les
pop
xor
sub
addr16
aas
call
call
outs
ror
jmp
push
data16
sar
and
lds
ins
scas
loop
xor
mov
call
pop
cmp
cmp
fwait
dec
sub
(bad)
xor
mov
mov
jo
xchg
loop
ror
mov
shl
jnp
adc
pxor
out
add
pusha
test
(bad)
and
test
mov
jmp
sub
in
js
sbb
pop
mov
dec
sar
sub
mov
adc
sbb
cmp
outs
and
loope
push
mov
xchg
and
(bad)
out
jne
push
psllq
aam
cmp
lock
inc
ins
inc
or
(bad)
rcl
scas
jp
cli
dec
push
loope
aam
in
pop
pop
dec
jmp
lds
mov
stc
mov
inc
in
inc
mov
(bad)
or
inc
mov
mov
loopne
jb
scas
or
mov
dec
mov
out
aaa
jl
mov
data16
push
adc
jo
loope
and
leave
xchg
aaa
xor
mov
aas
sbb
pop
jae
ficomp
mov
(bad)
scas
add
ror
ja
dec
jmp
aam
pop
repz
scas
or
xor
repz
sbb
and
mov
inc
xor
call
aaa
ins
rcl
inc
push
mov
cmp
pop
pop
or
add
pop
sahf
call
cmp
add
mov
(bad)
aas
ror
mov
xor
loop
ss
sub
fs
loopne
ja
inc
clc
(bad)
jge
push
and
jle
and
sub
push
scas
dec
jge
loope
push
mov
ss
mov
pop
or
or
data16
adc
sbb
fwait
inc
pusha
adc
popa
mov
cmp
lahf
xor
sbb
push
or
jo
mov
xor
jbe
addr16
or
cmp
outs
mov
loope
or
push
mov
pusha
mov
dec
or
icebp
dec
adc
aam
retf
cmp
adc
and
pushf
ja
jmp
mov
retf
shr
enter
push
lahf
arpl
push
jnp
push
popf
pop
cmp
neg
add
inc
mov
lea
daa
int3
scas
jnp
jl
stc
enter
out
fdiv
stc
(bad)
shr
push
xchg
add
push
or
ret
loopne
pop
iret
sub
adc
mov
out
mov
jo
pop
(bad)
cs
inc
stos
jo
adc
inc
push
out
and
mov
jl
and
sbb
cmp
ret
jle
(bad)
jmp
xchg
int
fdivr
fs
outs
add
mov
cmp
mov
jmp
loopne
dec
sub
push
sbb
cli
pop
cmc
addr16
dec
das
xchg
(bad)
dec
mov
ret
out
sub
popf
pop
(bad)
pop
dec
popf
mov
cmp
lods
xchg
fadd
ins
push
push
loop
xlat
xor
mov
in
ins
es
in
stc
(bad)
sub
out
cdq
fld
pop
sub
sbb
xchg
mov
clc
jmp
and
and
sub
xchg
pop
rcr
mov
jnp
mov
scas
push
push
jg
adc
lds
inc
fild
and
jbe
fistp
(bad)
xchg
test
gs
lods
add
shl
xchg
ret
stos
fwait
inc
or
xchg
inc
aas
fdiv
lahf
xchg
xchg
dec
ds
inc
cmp
sbb
xchg
jecxz
fbstp
into
stc
(bad)
jae
cmp
pusha
adc
mov
or
pop
sbb
mov
mov
jne
not
adc
and
push
shr
aam
sbb
cmp
or
retf
sbb
cmp
adc
push
adc
cmp
sbb
stc
pop
mov
stos
jnp
inc
out
or
sbb
enter
outs
push
rcr
int3
or
test
inc
xchg
jnp
mov
sub
aad
call
mov
les
add
mov
loopne
in
inc
inc
ret
add
mov
or
popa
xor
add
mov
adc
pop
mov
jmp
sub
aam
outs
sar
xor
sar
shl
jmp
sbb
fcomi
sub
into
jg
cld
ret
xor
dec
jg
arpl
mov
mov
xor
sub
mov
jnp
mov
adc
dec
bound
iret
call
fsub
or
pop
je
dec
pusha
call
push
scas
lods
int
xor
lods
je
pop
jp
pop
ja
add
pop
inc
and
push
mov
push
cwde
in
fild
jb
inc
hlt
cdq
sti
jmp
or
clc
jb
jg
out
shl
enter
pop
mov
retf
les
cmp
sub
pop
cs
cmp
and
push
mov
inc
sbb
imul
scas
mov
(bad)
gs
adc
sub
test
push
in
std
push
dec
stos
xlat
adc
call
mov
add
in
and
xchg
xchg
adc
das
sub
shl
push
mov
sbb
cli
add
xlat
ret
push
ret
pop
int3
fs
pusha
push
imul
outs
adc
and
cmps
int3
xlat
std
pop
outs
sub
and
adc
bound
loopne
lock
fldenv
sbb
push
out
pusha
pushf
(bad)
and
cmp
aas
in
bound
cmp
xchg
jns
pop
js
xchg
inc
push
and
mov
dec
push
pop
out
in
pop
xor
cli
gs
mov
cmp
adc
jmp
cwde
fyl2xp1
call
xchg
gs
fisub
pop
mov
loope
aaa
out
les
test
inc
loopne
add
fidivr
dec
push
in
addr16
into
inc
mov
ds
xchg
jmp
in
fstp
ret
mov
ret
imul
outs
test
add
fld
push
jne
inc
cmp
inc
out
inc
inc
mov
pop
cmp
ret
mov
and
and
call
xlat
jns
(bad)
int
or
rcl
mov
lods
lds
lods
push
in
push
out
fimul
xlat
int
loopne
in
mov
loop
sub
int3
clc
outs
popa
xchg
out
aad
repz
inc
xchg
xor
mov
dec
jb
sub
add
arpl
jge
mov
dec
aam
pop
sbb
mov
lock
leave
jmp
xchg
dec
sbb
sub
sbb
int3
cmp
(bad)
adc
in
inc
push
pop
add
(bad)
fcom
jb
cmp
xchg
out
nop
push
push
or
adc
scas
add
scas
mov
les
or
xor
pop
or
stc
push
pop
shl
and
xchg
test
lock
or
xchg
adc
into
dec
adc
pop
add
sar
and
lods
mov
push
cld
jl
out
xor
and
inc
jp
mov
push
xlat
xchg
mov
mov
cs
int
xchg
arpl
aad
ret
dec
sbb
fsubr
sti
je
fs
mov
data16
add
je
mov
pop
rcr
pop
nop
rcl
fnstsw
pop
dec
pop
out
xor
sub
or
pusha
or
enter
inc
dec
xor
test
mov
(bad)
xchg
lods
daa
and
cmp
pop
stc
dec
adc
rol
fiadd
and
cmps
and
ins
(bad)
les
push
std
or
lock
arpl
rcl
pop
ret
stos
adc
xchg
mov
nop
push
aad
inc
das
test
push
sbb
pop
pop
xchg
and
nop
xchg
popa
adc
lahf
sbb
(bad)
xchg
sbb
xchg
mov
pop
(bad)
adc
mov
cwde
pusha
push
sub
cmp
das
and
lock
push
jae
cmovbe
into
(bad)
xor
mov
fdiv
test
xlat
xchg
pusha
hlt
dec
add
lahf
or
movs
cld
imul
ret
pushf
lods
jns
lods
inc
dec
outs
ret
mov
pop
xchg
enter
xor
sbb
das
mov
mov
mov
and
add
dec
movs
xchg
xchg
addr16
in
enter
movs
in
mov
add
jmp
shl
sub
xchg
adc
sub
cmc
pop
movs
inc
(bad)
sbb
mov
inc
mov
xor
sub
jo
xchg
dec
mov
call
mov
adc
jb
inc
or
pop
mov
icebp
sub
pop
mov
das
sbb
or
xor
lods
aaa
int3
data16
dec
aas
inc
(bad)
pop
inc
pop
dec
retf
popf
xchg
imul
jg
mov
or
fimul
lods
jge
repnz
pop
mov
scas
popa
addr16
mov
int3
mov
repnz
xchg
mov
sti
jmp
inc
sub
gs
mov
fwait
jae
popa
mov
jecxz
jns
clc
scas
fsub
jo
mov
pop
sub
lds
xor
cli
mov
lods
adc
pand
std
mov
fmul
push
jae
mov
ficomp
xchg
test
ffree
add
jnp
jmp
int3
lea
jnp
int
call
dec
mov
mov
int3
dec
loopne
rcr
in
add
mov
(bad)
int3
mov
imul
ror
lods
cwde
mov
ret
paddd
xor
jecxz
add
pop
clc
outs
in
jmp
loopne
push
jb
mov
in
add
int3
icebp
mov
movs
jno
xor
fs
adc
cmp
mul
add
gs
cdq
mov
scas
adc
test
jne
inc
dec
pop
adc
cdq
retf
xacquire
dec
jb
xchg
int
(bad)
out
push
lods
jmp
nop
pop
cmp
dec
retf
aaa
sub
push
push
test
sahf
imul
mov
repnz
out
sar
or
cld
sub
jmp
push
aas
ffree
xchg
fs
pop
xchg
es
pushf
retf
xor
mov
jmp
movs
lods
and
sub
add
ja
mov
bound
and
aaa
repnz
mov
fld
fiadd
xchg
jmp
rol
fld
or
test
xor
adc
inc
(bad)
imul
out
loop
lods
je
inc
test
nop
mov
adc
mov
inc
fcmovne
xor
int3
sbb
sbb
and
aam
leave
(bad)
pop
ret
inc
xor
pop
jecxz
push
and
test
jle
std
jne
loop
push
jno
retf
inc
push
(bad)
adc
sub
popf
out
call
xchg
dec
movs
aam
push
es
pop
imul
push
stos
or
inc
cs
fiadd
cs
or
adc
dec
int
hlt
xlat
mov
arpl
fucomp
xor
fisub
pop
pop
dec
movs
inc
fbstp
sar
pop
pop
add
outs
pop
enter
sub
sub
add
sbb
cmps
xchg
rcr
icebp
xor
mov
fdivr
inc
inc
fcom
fisubr
push
xchg
pop
sbb
mov
rcr
int
push
in
pop
cli
mov
(bad)
mov
movd
test
jb
fs
jle
add
sbb
and
jne
retf
std
stos
ret
pop
pop
aad
into
addr16
pop
jmp
dec
dec
or
adc
fwait
in
inc
out
test
push
mov
cmp
inc
jmp
jo
add
dec
and
dec
adc
mov
arpl
mov
call
push
xchg
out
ret
mov
fdivr
jnp
push
sub
imul
dec
fild
test
test
loopne
in
bound
pop
push
retf
adc
fcomp
aad
ss
xor
cli
fcmovnbe
push
stc
add
adc
fidiv
setp
js
xchg
pop
jl
sahf
add
scas
fcmovne
dec
movs
jmp
or
sbb
int3
and
(bad)
jecxz
cmc
or
sbb
imul
xchg
(bad)
dec
lock
cli
adc
mov
xor
pop
icebp
mov
out
les
stos
add
jne
cmps
cmc
int3
adc
in
and
sub
xchg
add
pop
hlt
out
ror
dec
stos
mov
sub
push
mov
jmp
push
dec
loope
aaa
mov
not
jmp
jmp
pop
mov
(bad)
shl
(bad)
jae
adc
popfw
ret
in
xor
retf
cmp
out
pop
std
jne
add
adc
call
sbb
or
mov
xchg
pop
jo
aaa
shl
add
or
int3
inc
mov
add
mov
iret
add
sub
mov
xor
(bad)
nop
mov
xor
int
movs
in
nop
nop
es
mov
jl
enter
(bad)
out
outs
jmp
jns
out
movs
in
inc
mov
(bad)
out
sar
clc
sub
shr
cmp
mov
(bad)
iret
test
push
xor
xor
jmp
pushf
in
in
fsub
cdq
hlt
mov
jmp
stos
ja
bound
loop
dec
fs
ss
adc
dec
inc
addr16
stos
lds
sbb
jmp
or
pop
test
or
pop
out
(bad)
(bad)
(bad)
jmp
js
dec
push
dec
call
push
inc
inc
ja
adc
ins
lods
lock
or
fild
out
mov
xchg
or
call
jbe
add
adc
(bad)
xlat
or
test
imul
shl
out
in
cdq
leave
xor
add
sub
mov
push
aam
idiv
pop
xchg
pop
out
mov
daa
cmp
ins
gs
test
jb
mov
pop
jge
xchg
push
mov
dec
sar
dec
bnd
mov
jge
mov
nop
jl
sub
pusha
push
cs
push
inc
pop
gs
mov
xchg
sbb
mov
icebp
xor
ret
pusha
dec
and
call
jmp
shl
push
xchg
adc
mov
push
lea
shl
adc
xchg
mov
lock
sahf
mov
xlat
sub
outs
sub
(bad)
stos
mov
jmp
or
mov
ret
cmp
or
ins
cmp
pop
rcr
cmp
cmc
dec
ss
int
sbb
mov
popf
jl
jecxz
je
pop
aaa
add
sti
lahf
(bad)
mul
cmp
ins
cld
xchg
int
adc
push
add
or
and
out
pop
push
jle
sub
fs
inc
push
sub
dec
or
mov
push
mov
fisubr
add
fdivr
sub
dec
adc
fcom
pop
aad
cmp
xchg
xor
inc
and
sar
mov
jnp
cmp
adc
test
add
adc
sub
xor
ds
mov
aam
jmp
xchg
push
sbb
lahf
cmp
jo
adc
adc
std
mov
in
cmps
jge
xchg
cmp
fsub
rol
cli
adc
xor
sub
sbb
mov
cmps
jmp
sbb
inc
add
repz
add
jno
stos
nop
jns
jno
xor
add
ror
popa
dec
loopne
imul
add
or
sbb
test
push
jge
inc
add
push
inc
cmp
sub
xchg
movs
and
aaa
movs
mov
dec
jne
xor
add
mov
cmp
mov
call
cli
jecxz
(bad)
sbb
mov
jns
and
hlt
gs
(bad)
and
push
mov
mov
cmps
mov
dec
pop
in
inc
mov
test
in
jbe
(bad)
cmp
ret
out
or
adc
and
inc
xor
and
pop
and
hlt
pushf
add
pop
xor
das
mov
push
or
sbb
pusha
cmp
mov
mov
cmc
bound
fisttp
movntq
out
pop
cmps
pop
scas
jnp
outs
loope
mov
or
mov
das
lock
cmp
mov
xchg
or
mov
int
pop
or
es
jp
pop
(bad)
cmp
sar
cmps
sub
lea
mov
inc
daa
stos
inc
cli
in
jns
test
js
add
lock
aad
cmp
add
popa
cmp
sub
pop
gs
push
icebp
pop
pushf
mov
icebp
mov
(bad)
sbb
in
jl
and
je
enter
scas
and
pop
mov
mov
outs
ins
or
movs
fld
scas
jbe
pop
addr16
aam
mov
push
aam
sbb
ret
mov
pop
or
fs
test
adc
sbb
mov
hlt
push
pop
xchg
scas
mov
sbb
or
sbb
mov
mov
test
sbb
pop
mov
inc
sbb
loope
push
stos
repnz
adc
psllw
mov
xor
cmc
xlat
fist
out
stc
les
pop
mov
xchg
inc
jle
std
nop
jne
shl
imul
(bad)
mov
mov
or
xor
(bad)
dec
jno
icebp
ss
movs
mov
xor
dec
adc
retf
mov
dec
(bad)
test
ins
sbb
jmp
sbb
es
pop
push
jle
shr
jo
pop
sbb
jecxz
cmp
jbe
call
jno
fst
cmp
iret
movhps
pop
or
lds
cmps
jo
(bad)
xchg
dec
shl
fimul
jb
jle
mov
sbb
into
add
mul
push
mov
push
loopne
jecxz
repnz
push
pushf
mov
hlt
and
jg
fdivr
jmp
jl
test
jp
js
jge
jle
cmps
add
cs
xor
fcomi
jmp
push
ins
sbb
(bad)
or
arpl
dec
mov
div
ins
fmul
cmp
dec
mov
mov
call
inc
cmp
clc
mov
push
mov
neg
fist
and
ficomp
dec
js
jne
xchg
add
sbb
shl
cld
retf
nop
jmp
xchg
dec
mov
sahf
xchg
icebp
pop
in
push
adc
or
cmp
adc
(bad)
mov
or
aad
retf
mov
pop
ins
push
and
mov
popf
sub
and
xor
dec
aam
sbb
data16
xchg
movs
test
outs
movs
mov
stos
jmp
mov
xlat
add
mov
cli
clc
and
cmp
js
cmp
jle
popa
xchg
stos
mov
ss
stc
inc
dec
sbb
or
push
aaa
ret
inc
imul
jp
shl
sub
sub
popf
inc
(bad)
cld
sbb
add
cli
mov
nop
pop
ficomp
sti
leave
cmps
(bad)
pop
push
cmp
dec
inc
data16
(bad)
xor
mov
mov
mov
sbb
cmps
dec
sahf
movs
mov
xchg
add
add
iret
push
shr
stos
and
sbb
push
aad
dec
shl
sbb
mov
clc
adc
(bad)
xor
loopne
pop
jg
(bad)
loop
mov
nop
fcom
push
mov
aaa
aaa
cwde
or
or
mov
sub
jp
mov
mov
test
jecxz
mov
arpl
xchg
cwde
push
cld
dec
jmp
pushf
or
repnz
push
mov
jecxz
rol
inc
loope
sbb
jno
sub
int3
pusha
inc
rol
hlt
loope
aam
xchg
std
add
sub
js
add
add
stos
loopne
pop
aaa
pslld
or
cmp
ret
mov
rcr
push
xchg
ins
push
out
inc
cmp
inc
jp
(bad)
pop
xor
sbb
push
les
out
ds
sti
mov
push
sbb
xor
and
ins
add
ins
lock
xor
stc
adc
rcl
fisubr
xchg
xor
cmp
lds
cmp
inc
lods
adc
push
fwait
shl
adc
mov
push
xchg
xchg
call
stos
add
(bad)
stos
jl
mov
lods
xchg
cmp
stos
test
fwait
leave
push
dec
mov
sti
xor
cmp
and
dec
xchg
shr
cmps
leave
jno
mov
pop
test
test
gs
das
repz
xchg
ss
stos
mov
pop
stos
fnstsw
cmp
and
mov
test
xchg
or
jns
inc
out
sub
fidiv
push
cmp
cmp
pop
jl
js
rol
cmp
aad
dec
pop
iret
push
outs
mov
idiv
mov
(bad)
rep
outs
js
test
dec
dec
and
loope
scas
pusha
sub
dec
pop
inc
mov
shl
mov
das
mov
jecxz
add
push
div
pop
out
xor
pop
sub
repnz
(bad)
sbb
shl
sti
mov
dec
stos
mov
(bad)
sar
xor
retf
adc
lea
pop
fdiv
data16
(bad)
pop
xor
pop
dec
nop
jp
imul
adc
aam
push
inc
push
fs
dec
lea
idiv
hlt
sbb
cmp
inc
jae
dec
rol
imul
rcr
dec
jne
pop
dec
fist
jno
rol
pop
cmc
movs
or
mov
ja
std
push
fs
es
jb
inc
jns
mov
jle
out
test
stos
inc
aas
mov
mov
xor
cmp
stos
popa
lds
lods
loop
adc
sysret
jp
sub
cmp
mov
mov
push
cdq
jo
cdq
and
add
xchg
lock
frstor
(bad)
icebp
jns
dec
xor
stc
mov
pop
stos
out
mov
sub
ins
mov
imul
(bad)
mov
aam
push
rcr
movs
sbb
sbb
test
outs
and
nop
les
push
loopne
jnp
push
sahf
jnp
mov
jne
imul
add
xor
bound
fisttp
das
fild
loop
sub
fdivr
repz
fs
imul
or
sbb
mov
es
mov
pop
int
iret
cmp
jb
mov
jae
fs
jnp
inc
cmp
sahf
shl
ins
push
ret
leave
lods
std
xor
cdq
pop
pop
pop
sub
xchg
unpcklps
pop
sub
add
mov
mov
ss
adc
icebp
pop
sbb
std
lods
push
mov
inc
outs
mov
xor
inc
outs
pop
xor
addr16
dec
ret
loopne
mov
in
adc
xchg
mov
mov
xchg
fmul
cmp
jmp
cs
mov
cmp
daa
fldenv
push
xor
jo
pop
test
pop
xor
adc
sbb
dec
cmp
ins
dec
and
test
aas
pushf
adc
and
cmps
ret
fistp
mov
xchg
pop
outs
inc
jmp
out
jne
loopne
push
cmp
and
pusha
adc
adc
sub
mov
fstp
das
mov
mov
inc
mov
into
adc
adc
int3
dec
adc
test
and
shr
push
mov
pop
mov
mov
mov
bound
xchg
in
ins
nop
xchg
pop
pop
sbb
std
or
in
xchg
push
sub
or
test
leave
add
add
(bad)
in
push
int
repnz
pusha
dec
and
push
push
cwde
and
andps
imul
or
loop
das
test
retf
lea
mov
test
xchg
nop
sbb
outs
sbb
mov
mov
xchg
inc
adc
mov
push
mov
sbb
popf
retf
push
cmp
add
sbb
sbb
xchg
nop
(bad)
push
inc
das
stos
inc
imul
and
rol
js
(bad)
and
mov
mov
sbb
sub
movs
mov
rcl
lea
(bad)
pushf
xchg
sub
adc
xor
jno
inc
clc
xchg
in
movs
or
int
lds
mov
mov
in
(bad)
push
adc
adc
outs
js
pop
push
xor
xchg
xchg
dec
push
or
sahf
lds
mov
add
fist
sbb
loope
fdivr
or
arpl
test
adc
pop
rol
mov
ficomp
xchg
add
dec
sub
daa
mov
outs
outs
or
lea
jle
adc
xor
cdq
mov
push
jb
loopne
sub
push
aad
repnz
or
push
mov
push
sbb
xchg
mov
shl
fwait
shr
in
test
push
imul
xchg
add
jae
imul
pop
and
xchg
pop
jae
sub
push
adc
arpl
es
xor
arpl
push
xchg
repnz
cmp
in
hlt
mov
sbb
(bad)
in
aas
addr16
fsubr
pop
xor
jecxz
in
call
jbe
mov
dec
jmp
mov
fild
outs
mov
in
sub
hlt
test
inc
adc
ja
arpl
adc
sar
inc
sti
sbb
stc
retf
mov
push
mov
scas
xchg
inc
pop
icebp
cs
cmp
rol
push
sub
out
inc
fmul
and
fst
not
fld
add
pop
jmp
rcr
push
push
sbb
dec
in
dec
inc
jno
adc
mov
sbb
scas
mov
push
or
dec
mov
leave
xor
push
jno
js
gs
shl
fnstcw
mov
jmp
rol
fisubr
push
dec
mov
adc
scas
cwde
lahf
sub
pop
stc
jecxz
dec
jae
ins
cmp
pop
loope
out
pop
jecxz
rol
sub
lock
bound
adc
dec
cmp
jmp
ins
sub
fldenv
mov
int
scas
adc
push
std
adc
sbb
scas
inc
and
and
test
in
arpl
pop
mov
pop
call
fsubr
xor
pop
adc
push
movups
repz
dec
scas
adc
out
pop
test
icebp
shl
and
mov
xchg
daa
inc
inc
es
ja
addr16
loope
clc
shl
int
(bad)
jne
dec
es
add
jne
mov
jecxz
push
xchg
rcl
ss
sbb
adc
pushf
xchg
movs
aam
jle
jbe
gs
xchg
es
mov
test
or
daa
test
cmp
cs
or
ds
(bad)
loopne
mov
ins
sbb
xor
test
ret
cmc
scas
fwait
mov
mov
add
inc
adc
jmp
add
icebp
out
pop
sub
and
enter
mov
xchg
ficom
fidivr
or
xchg
imul
rcr
ret
ror
cdq
imul
int3
mov
pop
jne
xor
add
call
out
sub
jae
mov
daa
push
xchg
aam
rol
xchg
in
add
xchg
cmp
cdq
xor
push
pop
(bad)
repnz
repz
cli
mov
xchg
jnp
pop
sub
dec
mov
arpl
repnz
push
ret
fild
jge
js
adc
dec
mov
lds
outs
gs
into
add
pop
xor
pop
push
push
test
sub
shl
fwait
pushf
arpl
jge
sub
inc
pushf
xchg
dec
ror
je
xchg
ret
xor
mov
pop
cmp
repz
or
cmp
or
loop
in
xchg
scas
push
and
enter
shl
inc
cdq
sti
ret
mov
sbb
popf
mov
push
in
ds
jae
mov
loope
dec
xchg
mov
cmp
cmps
retf
add
and
push
xor
ins
xchg
ds
out
mov
ficom
popa
fwait
cli
push
iret
mul
sub
(bad)
or
cmps
idiv
cmps
test
mov
fcomp
(bad)
and
mov
mov
shl
jge
and
sbb
enter
jo
fiadd
cmp
sub
int
and
(bad)
leave
cmp
repz
jbe
sar
(bad)
int3
jb
imul
mov
fidiv
inc
dec
or
das
rol
sbb
fimul
cmps
cmp
aad
cmps
mov
sbb
or
in
call
cmp
fs
lods
ret
ficom
in
shl
mov
jmp
ret
lock
xchg
and
push
mov
add
bound
jl
sbb
arpl
movs
cli
movs
push
xchg
or
fmul
loopne
jo
scas
lods
out
imul
scas
jae
rcl
add
jae
ror
sti
xchg
mov
ror
scas
xlat
hlt
imul
xchg
outs
mov
xchg
push
nop
mov
or
test
xor
sbb
jno
data16
loope
sub
hlt
ds
mov
and
mov
cmp
in
int
sar
add
xor
into
jecxz
bound
xor
mov
lds
xchg
mov
jae
sbb
jle
mov
add
inc
sub
pop
add
loope
and
dec
jns
loopne
cmps
push
and
mov
pop
xlat
jo
xchg
jno
fldenv
sbb
(bad)
inc
dec
loop
inc
jo
or
xor
push
add
out
adc
icebp
pop
mov
aaa
fcom
nop
add
pop
test
out
retf
fidivr
and
xchg
push
sbb
cmp
jns
jae
xor
outs
mov
(bad)
mov
mov
push
sub
or
cmc
shl
leave
and
xor
jnp
iret
pop
mov
mov
inc
push
xor
out
or
(bad)
loope
call
xchg
js
ret
push
enter
(bad)
dec
sbb
jb
pop
xchg
jno
push
test
pop
mov
fs
in
cmp
mov
jmp
xchg
inc
loop
mov
fmul
(bad)
les
clc
ror
dec
xor
mov
sbb
into
mov
mov
mov
adc
sbb
xchg
ja
jb
pop
(bad)
cs
nop
xchg
cmps
aam
repnz
adc
add
xor
xor
nop
mov
pop
in
xchg
popf
fisubr
push
and
call
scas
jecxz
xchg
mov
mov
pop
frstor
test
bound
push
adc
popf
sti
sahf
add
cmps
frstpm(287
fisttp
xchg
and
movs
(bad)
add
call
stos
out
fwait
pop
cmp
push
std
pop
jb
jg
inc
adc
mov
jle
stc
or
out
adc
(bad)
or
sub
xor
xchg
popf
shl
cmp
mov
jle
push
mov
retf
xor
repnz
repz
jae
sbb
iret
scas
mov
inc
jmp
push
pop
mov
cwde
outs
out
cmp
adc
xchg
inc
push
xor
lahf
xchg
mov
push
jnp
jae
xchg
xor
test
repz
mov
out
sub
sub
stc
xchg
imul
xchg
sub
push
pop
mov
aam
sbb
mov
jle
cwde
jle
adc
or
cmp
stos
or
sbb
dec
or
(bad)
call
add
ds
mov
jae
int3
test
inc
sbb
ds
sbb
lahf
hlt
ds
popf
mov
out
mov
es
inc
in
mov
out
enter
push
dec
jo
mov
and
xor
mov
fbld
mov
out
stos
push
mul
jb
fldcw
test
and
jbe
scas
shr
dec
es
inc
push
repz
inc
mov
xchg
scas
jmp
test
push
retf
dec
and
fnstcw
push
(bad)
dec
adc
call
test
rcr
scas
inc
mov
pop
cmps
rcr
pusha
(bad)
dec
ficomp
xchg
std
jbe
jb
adc
pop
int
mov
xchg
scas
loopne
ret
es
nop
xchg
fistp
loope
daa
outs
sbb
je
movs
test
xchg
mov
fmulp
xchg
cdq
ucomiss
movs
sbb
xchg
xchg
in
xchg
nop
popa
sar
adc
(bad)
loopne
cli
cmps
cli
dec
mov
mov
retf
add
ds
or
sub
and
push
sbb
mov
xor
stos
pop
retf
in
scas
add
(bad)
dec
inc
je
out
idiv
or
dec
fistp
sti
mov
mov
mov
ins
cmp
add
sbb
adc
std
aaa
mov
mov
mov
stc
inc
cmps
mov
or
cld
push
daa
imul
pop
sti
sahf
pushf
inc
mov
lds
add
mov
pop
psrlw
cmp
push
aas
(bad)
fmul
lods
imul
scas
loop
into
sbb
(bad)
rcl
dec
imul
enter
pusha
xchg
and
sub
pop
inc
mov
sub
cli
or
jbe
int
xchg
adc
xchg
jb
test
aad
fwait
dec
cs
cmp
add
pushf
sbb
data16
test
outs
aas
enter
clc
cli
fist
test
xchg
mov
dec
jmp
enter
fisttp
sub
or
pop
sub
jle
or
adc
int
mov
in
ds
mov
cmp
mov
cmc
(bad)
rcr
fnsave
sahf
cmc
nop
push
mov
data16
icebp
xor
pop
sbb
rol
sti
cli
aaa
iret
inc
mov
and
add
fs
push
inc
sub
stos
inc
xchg
(bad)
das
fcmovnbe
(bad)
jo
loope
scas
fbstp
mov
adc
cmp
xchg
addr16
les
ss
mov
sub
test
fnstsw
add
mov
not
pop
jp
or
inc
dec
push
add
out
cmps
jne
push
rol
xchg
add
call
out
ins
cmps
jae
mov
shl
daa
xlat
add
jmp
push
xchg
xor
lods
dec
cmp
(bad)
and
inc
xchg
mov
daa
dec
ja
repz
add
jbe
lods
jmp
inc
fadd
adc
push
sbb
cmp
jb
sbb
mov
cdq
pop
pusha
xor
dec
or
fwait
mov
and
push
and
sub
call
test
mov
bound
iret
sbb
fmul
jae
out
jne
cdq
mov
xchg
jmp
push
inc
test
cmp
ss
lds
cmp
int3
das
loopne
or
add
sahf
pop
sbb
mov
push
fsubr
jns
pop
xor
jecxz
dec
adc
adc
or
pop
call
daa
(bad)
loopne
xchg
mul
mov
mov
or
jmp
xor
xchg
dec
jb
shl
jae
(bad)
xor
xlat
sbb
inc
and
data16
ror
push
es
lahf
popa
or
pop
adc
add
daa
pop
out
or
bound
mov
iretw
xchg
push
xchg
mov
imul
ficom
cmp
cmp
or
mov
idiv
or
mov
mov
loopne
imul
xchg
ja
dec
mov
repz
scas
das
dec
shr
fsubr
jno
xor
pop
fucomi
fs
sar
iret
out
loop
push
ret
fmul
scas
enter
cmc
xchg
dec
dec
aam
or
push
lods
jp
loop
stc
imul
pop
sti
mov
cmps
xchg
gs
mov
stc
lea
mov
aas
test
mov
or
emms
mov
or
fcom
movs
sbb
dec
cdq
fidivr
jmp
jnp
jp
pop
cs
sbb
jno
inc
adc
xor
xchg
dec
sti
adc
jne
arpl
shl
(bad)
add
mov
stos
cld
loop
xchg
dec
mov
ss
jbe
loopne
or
lock
(bad)
into
mov
mov
(bad)
pop
mov
xor
(bad)
sar
movs
arpl
lahf
pop
nop
dec
cmp
inc
xchg
and
cmp
aaa
pop
lods
scas
and
or
cs
cmp
or
xchg
pushf
push
es
fld
mov
popa
arpl
and
xlat
and
pop
add
xchg
push
int
xchg
and
mov
sahf
mov
shr
xchg
clc
imul
mov
push
je
jl
call
imul
pop
and
movs
sub
dec
pop
push
and
xor
jbe
cmp
mov
std
sbb
cmove
and
js
in
pop
idiv
int3
ficomp
into
xchg
jp
loope
pop
xchg
mov
pop
cmp
int3
adc
rol
push
adc
clc
shl
cdq
fcmovnbe
in
repz
push
mov
or
les
mov
daa
cmps
out
lock
mov
and
mov
inc
xchg
cmp
jo
call
mov
add
bnd
cmp
mov
jo
adc
jmp
cmp
imul
or
mov
pop
sub
mov
cmc
int
mov
ud2
or
cmp
push
cmps
add
int3
cdq
(bad)
push
ins
xchg
shl
mov
ins
sar
mul
es
(bad)
repnz
and
inc
sbb
icebp
out
and
push
mov
cmp
sbb
out
xor
cmps
adc
sub
mov
add
jmp
clc
les
mov
outs
pop
adc
pop
jmp
js
rol
fdivr
push
dec
push
jg
test
repnz
add
cmp
mov
push
add
dec
add
dec
mov
iret
repz
shl
stos
ins
jnp
and
pop
fild
repz
inc
pop
jle
aad
adc
push
fs
imul
into
adc
in
mov
ret
fst
repnz
push
sub
dec
dec
jge
pop
movs
ja
ins
mov
adc
or
pop
inc
adc
mov
dec
xchg
int
lds
lods
sahf
pop
fwait
pop
cmp
add
out
jmp
push
cdq
dec
std
and
int
push
stos
sub
pop
aad
mov
popf
das
cmp
(bad)
cmp
(bad)
into
iret
(bad)
xchg
sbb
xor
shl
sbb
popa
jmp
mov
dec
mov
sub
push
and
jno
loop
cwde
mov
fwait
dec
jle
shl
arpl
xchg
or
sbb
and
in
xchg
mov
adc
jbe
pushf
test
push
mov
or
lds
(bad)
das
sti
and
aam
sub
mov
inc
mov
sub
inc
push
xchg
mov
retf
adc
pshufw
mov
aaa
nop
mov
in
stc
pop
jp
pop
or
out
lds
shl
inc
adc
pop
ficomp
int
fwait
outs
in
pop
inc
int3
pushf
sbb
out
cld
and
aaa
sub
mov
cmp
sbb
lock
jmp
or
in
mov
xor
push
test
inc
in
loop
cmp
adc
(bad)
or
outs
sub
xchg
jbe
xlat
inc
das
or
imul
lahf
fisttp
ja
into
dec
(bad)
sub
mov
(bad)
hlt
aas
fst
sbb
in
out
test
jge
push
bts
fs
xor
dec
(bad)
shr
xchg
and
sbb
jp
fisub
pop
sub
pop
test
sub
mov
xchg
icebp
cs
sar
clc
push
sbb
in
stos
clc
mov
ss
popa
ficomp
jnp
mov
push
and
fisub
stos
xchg
xchg
in
mov
ret
cmp
mov
xchg
les
es
sbb
pop
mov
xor
imul
mov
push
bound
adc
pop
js
push
pop
cli
fnstcw
jmp
ja
sbb
int
xchg
and
(bad)
icebp
test
aaa
mov
enter
jns
fisubr
ror
jno
push
jle
jmp
sbb
jae
cld
enter
sub
or
push
mov
push
test
add
sbb
lods
xchg
test
push
mov
inc
inc
lea
popa
xchg
jg
xchg
jmp
test
mov
inc
pop
and
ins
and
cli
(bad)
cmps
add
lock
test
adc
mov
pop
adc
mov
jb
jle
(bad)
and
adc
push
mov
jo
jp
adc
pop
pop
sbb
and
pop
call
xor
and
jecxz
xor
aaa
xlat
sti
dec
jb
pop
pusha
test
adc
aas
test
lods
mul
mov
sub
xchg
addr16
fild
loope
aam
xchg
inc
scas
add
mov
sub
cmc
push
add
mov
add
xor
mov
mov
push
loope
add
xor
mov
pop
dec
push
sbb
mov
mov
imul
dec
pushf
test
loope
int3
or
ret
clc
std
fstp
jno
(bad)
pushf
std
mov
jbe
dec
in
scas
dec
or
ja
mov
sub
add
pop
inc
inc
mov
jae
fwait
das
jge
jns
mov
jne
les
xor
push
imul
es
inc
out
outs
mov
clc
sbb
retf
ins
retf
jns
jmp
cld
stos
shl
pop
push
add
mov
repnz
cli
push
fstp
jecxz
sar
xor
(bad)
or
inc
pop
add
jmp
jp
js
ins
push
bswap
and
jno
pop
dec
cmp
xor
sbb
sub
push
cmp
xor
mov
cdq
add
inc
daa
je
xchg
pop
sub
xor
dec
xchg
or
jle
mov
or
sti
and
add
in
cdq
jp
xchg
xchg
js
pop
sti
call
sub
mov
movs
out
cmp
sbb
call
add
pop
lds
and
lods
ds
std
in
ds
mov
mov
sahf
jns
inc
pop
push
mov
cmp
aad
clc
std
adc
outs
mov
clc
int3
mov
xor
mov
fmul
mov
lea
and
push
sub
ds
dec
dec
mov
sahf
aas
dec
call
inc
enter
inc
ins
lods
ficom
xchg
dec
bnd
add
into
sahf
pushf
retf
adc
ins
pop
ins
shr
(bad)
sahf
xor
xor
rol
cdq
cmp
mov
adc
mov
inc
cli
das
or
adc
mov
adc
mov
xchg
jmp
vpmacsswd
push
xchg
cmp
mov
scas
dec
pop
mov
cmps
nop
ja
stc
jmp
imul
ds
fimul
outs
(bad)
imul
aad
or
dec
or
retf
pop
test
push
mov
sbb
sbb
pop
inc
cmc
dec
jno
ins
adc
dec
cmp
push
fs
cmp
setl
retf
test
add
xchg
jb
popa
sub
sub
mov
mov
je
mov
out
cmps
aam
std
bnd
jno
jg
cmp
icebp
(bad)
push
(bad)
das
stos
mov
xor
mov
sub
mov
ret
mov
sub
mov
scas
sbb
cmp
mov
fwait
pop
out
daa
aam
(bad)
fisttp
mov
aas
or
cmp
nop
add
lahf
setne
movs
or
nop
les
add
pop
dec
or
jp
nop
iret
mov
cwde
addr16
fsubr
sub
mov
div
inc
mov
into
dec
mov
push
xchg
int
leave
retf
cdq
stos
cmps
ds
nop
out
fs
mov
dec
pop
and
in
mov
inc
mov
jp
loope
mov
movs
pop
sahf
mov
jge
in
addr16
sahf
and
push
cmp
test
cli
adc
sti
mov
push
mov
pop
aam
mov
fs
test
cmp
or
inc
add
or
cli
cmp
jnp
mov
addr16
push
mov
xor
dec
inc
mov
lea
or
cld
imul
fldenv
mov
das
(bad)
mov
lods
aam
stos
loop
xchg
loopne
ins
retf
shr
jl
stos
mov
sbb
mov
fadd
dec
rcr
in
shl
xor
sbb
into
dec
icebp
dec
(bad)
std
fisubr
mov
push
jb
dec
out
imul
pushf
sub
ret
pop
and
cmps
add
aaa
inc
fbld
mov
mov
sbb
add
retf
call
fcom
popf
(bad)
sti
pop
mul
inc
or
arpl
sub
xchg
push
loopne
popa
je
add
and
xor
addr16
cmp
jg
je
push
jp
push
sbb
sub
add
pop
push
call
sub
cli
in
(bad)
inc
call
lock
fisub
fdiv
daa
fst
test
xchg
leave
inc
mov
ss
ins
mov
pop
mov
xchg
imul
adc
shr
movs
cmp
dec
mov
mov
or
stc
inc
pop
loope
jmp
shr
sub
xor
leave
ficom
aad
mov
cmp
std
push
pusha
mov
xor
pop
je
mov
ret
inc
push
xor
push
sub
ss
sub
or
jp
lahf
xor
push
cmps
inc
sub
sbb
mov
mov
test
xchg
sub
repz
xor
cmps
xor
ror
and
imul
add
ins
inc
or
inc
aad
sahf
sbb
lods
xor
push
pop
jne
xchg
pushf
fcmovb
jg
push
(bad)
inc
add
rcr
mov
xchg
pop
pop
ret
xchg
mov
pusha
imul
add
dec
mov
mov
nop
pushf
sbb
jno
lods
xchg
push
push
jle
push
inc
das
cmp
inc
in
movs
fbld
lods
mov
push
push
js
test
pop
test
xchg
mov
xlat
lahf
and
pop
mov
mov
xchg
clc
call
scas
js
mov
or
retf
push
add
lahf
fwait
cld
gs
shr
repz
rcr
mov
imul
cmc
or
mov
stc
out
push
pop
loope
div
es
cmps
(bad)
sbb
mov
addr16
pop
xor
xchg
mov
cmc
mov
aad
dec
adc
or
out
xor
movs
imul
(bad)
xchg
movs
sti
div
jae
and
aaa
and
mov
push
mov
test
int3
lods
inc
push
sub
xor
xchg
call
cmps
mul
jge
fs
(bad)
fisttp
lahf
jecxz
sub
dec
xor
push
and
push
adc
dec
xchg
out
in
movs
jbe
out
cmp
jmp
aaa
add
jmp
xchg
add
cmp
ins
mov
jge
shr
addr16
jg
std
or
cmc
lahf
push
into
inc
ror
lods
sbb
xchg
jns
push
out
repz
jae
addr16
mov
mov
loope
(bad)
mov
gs
push
(bad)
mov
popf
addr16
aam
sub
jecxz
or
or
dec
or
mov
xchg
mov
std
ins
dec
ss
cmp
xor
mov
cs
stos
out
popa
repz
int
bound
(bad)
or
scas
stc
aam
popf
pop
and
std
pushf
test
mov
es
dec
ret
inc
retf
jecxz
addr16
dec
jno
mov
in
inc
inc
ss
div
or
arpl
mov
fdivr
push
shr
inc
xor
dec
mov
rcr
jns
nop
cdq
neg
adc
mov
dec
mov
shl
aad
sar
cmp
scas
inc
adc
adc
loop
jno
dec
cmp
addr16
icebp
js
stos
loope
mov
loopne
pop
scas
(bad)
(bad)
mov
dec
mov
adc
inc
add
ins
pop
(bad)
fsubr
jmp
xor
add
jp
mov
ret
dec
xchg
sbb
lods
dec
iret
add
push
xchg
pop
test
lds
mov
pop
sub
retf
mov
scas
rol
js
inc
or
adc
gs
stos
or
in
and
lahf
mov
inc
sub
test
inc
mov
adc
add
push
mov
and
xchg
push
inc
int3
adc
in
pop
pusha
mov
fild
stos
das
cmp
and
punpckhdq
sti
pop
and
aam
addr16
std
sbb
ss
and
xchg
ds
and
loope
xor
int3
test
push
pusha
dec
mov
jmp
mov
outs
xchg
mov
sbb
mov
js
adc
adc
daa
cmp
cwde
push
scas
jne
test
test
or
aaa
hlt
rcl
xor
jno
xor
lock
xor
or
frstor
popa
xchg
xor
loop
(bad)
dec
sub
sbb
outs
push
xor
out
add
cmc
push
cmp
jle
add
sar
dec
or
into
sar
popa
cmp
aas
js
cmp
into
jl
pop
adc
mov
aaa
retf
popf
ffree
gs
jbe
or
adc
adc
sub
shr
js
rcr
mov
fnstcw
pushf
movs
cs
addr16
in
push
add
push
jl
mov
mov
out
jmp
add
add
ret
and
call
inc
xor
movs
(bad)
lds
sbb
imul
add
and
mov
dec
jae
retf
lock
cmp
repnz
add
sub
mov
pop
add
sbb
inc
push
xchg
(bad)
and
cwde
les
aam
imul
ds
inc
das
mov
sbb
imul
cmp
ins
hlt
(bad)
jmp
mov
jmp
jg
mov
jae
cmps
xchg
and
mov
mov
movs
test
fdivr
imul
cmc
xor
rcr
xchg
retf
push
mov
mov
adc
jb
pop
dec
jne
pop
js
and
push
adc
leave
arpl
ss
and
mov
rol
hlt
jmp
cmp
mul
dec
push
pop
(bad)
jg
enter
adc
dec
loop
rol
aaa
push
and
enter
aaa
push
imul
fadd
sub
ret
cld
fsubr
aam
pop
jle
out
pop
mov
ja
aaa
frstor
and
inc
mov
jmp
or
sub
xchg
xlat
jg
shr
leave
dec
test
test
loop
imul
cmp
mov
push
cwde
add
pop
rol
xchg
loopne
adc
inc
test
arpl
and
sub
adc
cmp
mov
scas
dec
(bad)
mov
mov
(bad)
mov
punpcklbw
jmp
and
rcl
popa
aam
mov
push
add
jecxz
add
data16
cmp
jp
js
push
mov
scas
popf
ins
cmp
bound
and
sub
daa
sbb
or
or
stos
les
push
movs
daa
push
mov
push
ss
or
jl
pop
jg
mov
dec
add
xor
ins
jmp
sbb
xchg
adc
or
mov
popa
mov
mov
adc
mov
lods
lods
fs
sub
push
repnz
nop
stc
leave
aaa
fmul
adc
ds
or
add
fnsave
sub
enter
lods
into
xchg
movs
stos
mov
or
out
inc
xor
cmp
mov
pop
add
stos
push
call
lds
dec
cmp
scas
ss
aam
outs
movs
popf
xor
loopne
mov
dec
adc
jbe
jmp
test
push
jge
fincstp
int
push
sahf
mov
push
jp
jnp
add
xchg
loopne
sbb
sbb
inc
fisubr
mov
(bad)
ds
push
fisttp
push
push
out
test
cmc
add
aas
ds
xchg
loop
or
(bad)
iret
aad
dec
mov
adc
push
and
test
aaa
test
jle
push
xchg
jae
mov
cdq
hlt
mov
mov
std
dec
jmp
push
lahf
test
adc
mov
sbb
in
xchg
dec
push
mov
test
jno
mov
shr
in
rcr
adc
push
(bad)
mov
pop
rol
pop
jne
pop
outs
popa
xchg
pop
and
stos
pop
mov
cmc
ret
cmps
mov
clc
jmp
mov
inc
add
cmp
dec
add
mov
mov
stos
ins
cdq
int
movs
xchg
add
loopne
pop
imul
shr
out
scas
data16
cmp
repz
loopne
sbb
jnp
into
xor
sbb
and
aad
inc
mov
push
push
ds
repz
cwde
mov
sub
pusha
test
aam
retf
mov
idiv
push
jg
mov
xor
out
je
jg
inc
fisttp
push
pop
jb
cwde
repz
xchg
push
jle
jb
push
data16
sar
sub
and
push
lods
or
movs
loopne
cmp
and
mov
xor
icebp
(bad)
arpl
pop
repnz
jecxz
jnp
xchg
out
aad
outs
adc
mov
sbb
pop
mov
ins
mov
pop
mov
inc
sar
dec
xchg
pop
movs
btr
shl
fimul
stos
fwait
(bad)
in
mov
fs
sahf
hlt
popa
scas
push
pop
mov
mov
mov
mov
test
push
shr
aas
sub
adc
cmp
lods
std
xor
dec
clc
ret
jb
je
imul
gs
outs
fidivr
add
nop
sbb
or
lahf
retf
push
int3
mov
cdq
outs
fstp
fs
or
or
cmps
in
pop
pop
push
call
int
mov
jmp
lods
or
xor
ins
scas
pushf
mov
stos
cdq
call
les
loope
xchg
scas
mov
daa
sub
test
out
test
sbb
mov
fild
jnp
pop
xlat
dec
(bad)
stos
jno
jle
(bad)
call
cmp
cs
fcomp
mov
call
out
sub
add
pop
xor
jp
popf
push
jae
pop
das
(bad)
sahf
adc
mov
outs
(bad)
stc
fimul
add
popf
cmp
add
shl
jp
jmp
ret
clc
mov
repz
adc
mov
scas
jne
add
ins
test
pop
(bad)
call
mov
cld
aad
test
outs
ret
arpl
ja
xor
ins
dec
in
cmp
adc
(bad)
and
lods
int
mov
or
xchg
dec
mov
push
ret
dec
push
add
test
sub
in
mov
xor
pop
and
jne
neg
jns
mov
in
movs
push
stos
push
and
out
fcmovne
and
arpl
in
clc
es
xlat
repz
dec
dec
push
push
out
lea
and
hlt
mov
or
je
add
xor
test
into
pop
push
adc
cdq
inc
leave
add
add
mov
xchg
jbe
jne
pop
data16
out
xchg
mov
stos
gs
cwde
scas
pop
adc
outs
xor
cwde
(bad)
xchg
adc
call
mov
jmp
lds
adc
imul
and
dec
aas
xchg
inc
les
add
ins
dec
test
xor
mov
mov
addr16
cmps
adc
mov
jno
push
out
jl
jno
push
mov
jl
lock
inc
arpl
dec
ja
scas
fwait
ret
or
sub
xchg
int3
jg
push
std
sbb
in
fsubrp
sub
lods
or
fs
clc
cmp
cmc
sti
test
or
inc
or
in
jecxz
int3
ror
repnz
push
dec
or
pop
or
mov
mov
and
jne
sbb
push
xchg
dec
xor
mov
dec
mov
sub
es
sub
inc
dec
test
movs
mov
xor
add
rcr
xchg
inc
jmp
scas
idiv
dec
mov
mov
mov
jle
fdivr
cmp
dec
test
loopne
sub
dec
inc
pop
mov
scas
(bad)
out
into
pop
rol
dec
sub
jno
aas
(bad)
mov
adc
out
dec
(bad)
jmp
lods
mov
mov
enter
test
(bad)
jp
mov
cld
push
in
mov
mov
aad
outs
repnz
add
ss
push
mov
jg
loopne
mov
push
(bad)
scas
pop
sub
jg
inc
dec
movs
jbe
xor
adc
in
fidivr
pop
inc
lahf
jl
dec
hlt
repz
dec
adc
leave
arpl
cmp
push
mov
es
ins
add
push
vphaddbq
nop
js
adc
dec
add
sub
clc
xor
push
jbe
sbb
push
add
mov
nop
mov
shr
(bad)
xlat
enter
shl
add
dec
push
pop
mov
leave
rol
ins
mov
jg
mov
rcr
fdiv
or
inc
push
ds
xchg
arpl
mov
popa
dec
adc
push
lods
dec
mov
xchg
adc
pusha
pop
mov
in
mov
jmp
sbb
mov
mov
gs
fcmovnu
sub
pop
and
sbb
sar
das
stos
push
pop
sbb
or
xchg
and
jmp
arpl
jmp
arpl
inc
add
adc
jg
ins
xor
mov
je
out
cmps
xor
jp
sbb
pop
pop
xchg
lea
mov
aas
cmp
xor
mov
and
clc
test
aas
inc
nop
mov
in
rol
cld
sub
outs
rcr
pusha
push
test
mov
cdq
pop
jp
xor
inc
mov
mov
adc
ret
mov
loopne
sbb
ret
retf
add
jle
in
std
(bad)
mov
jge
mov
in
daa
gs
rol
and
arpl
fadd
les
pop
cs
ret
mov
fmul
imul
inc
inc
(bad)
daa
sub
sub
dec
stos
lock
inc
xor
mov
test
je
out
(bad)
pop
popa
dec
cmps
jp
mov
popa
xor
inc
push
push
ror
les
pusha
in
push
push
push
fisttp
imul
jmp
inc
ja
pop
leave
cwde
jb
mov
fstp
inc
add
ins
ret
sub
sub
xchg
add
jecxz
xor
fcomp
ja
out
cmp
adc
or
jp
jge
ins
mov
jmp
ret
fsub
fcom
pop
(bad)
mov
imul
xlat
jmp
test
adc
les
in
(bad)
jge
js
scas
das
jp
dec
mov
pop
rcr
add
shl
scas
je
fwait
sbb
pop
adc
aad
xor
mov
stc
(bad)
jbe
imul
test
ss
mov
les
and
lods
mov
xchg
add
add
add
sbb
(bad)
out
leave
call
fsubr
adc
data16
inc
call
sbb
adc
jae
mov
pop
gs
movs
mov
sbb
in
jecxz
mov
into
mov
fld
jl
fiadd
mov
nop
jo
sub
sti
iret
nop
std
lods
add
loope
cmp
dec
and
xchg
ins
gs
cmc
add
mov
ret
and
push
jns
mov
mov
test
jmp
cli
or
pop
pusha
mov
std
fistp
sbb
jg
iret
lods
aam
inc
js
hlt
sbb
jno
sbb
add
(bad)
ret
jb
push
mov
icebp
fnstcw
cmp
xchg
aam
clc
push
mov
xor
or
sbb
int
mov
dec
inc
mov
mov
jae
dec
scas
dec
cld
rcl
outs
pop
mov
shr
fnsave
iret
dec
dec
std
push
in
sub
ja
xor
outs
in
in
jecxz
xchg
mov
sbb
pop
cmp
in
cmp
xchg
jbe
push
pop
xor
jecxz
call
dec
sbb
inc
es
xor
les
out
pop
inc
pop
add
popa
out
loopne
or
sbb
popf
sub
rcl
jmp
sahf
paddusb
call
dec
mov
rol
xor
push
cmp
ins
sbb
sbb
sub
xor
cmps
ins
jecxz
shr
and
loope
or
inc
cmp
leavew
inc
call
sar
push
(bad)
(bad)
jmp
sbb
cmc
jmp
shr
adc
or
push
sbb
mov
jmp
jmp
mov
cmp
sbb
mov
and
gs
push
add
xor
in
xchg
xor
inc
xor
shr
adc
(bad)
cli
(bad)
mov
push
mov
sub
cmps
xlat
les
jb
and
or
out
call
jb
mov
or
mov
in
jmp
or
out
fistp
bound
xor
mov
mov
xor
out
push
dec
mov
and
popa
mov
push
dec
fst
(bad)
loope
cld
jbe
fbstp
pop
ins
and
pop
mov
push
xchg
inc
push
pop
in
pop
or
push
pop
les
pop
jg
mov
(bad)
movs
shl
cmp
mov
bound
ret
sti
push
adc
cs
aaa
xchg
inc
mov
inc
inc
pop
xor
lods
out
jns
xchg
pop
mov
stos
lahf
pop
jmp
inc
and
scas
push
fs
dec
aam
adc
shl
cwde
xchg
mov
retf
in
ins
(bad)
fimul
and
and
lock
cs
pushf
mov
jmp
shr
call
repnz
fimul
loopne
ins
pop
adc
xchg
jae
scas
jmp
adc
retf
lods
(bad)
dec
hlt
(bad)
add
add
push
sub
cmps
sub
cmp
inc
movs
lds
addr16
mov
fsub
fdivr
xlat
cmc
mov
xchg
iret
mov
or
aaa
in
stos
and
dec
adc
push
out
je
ja
gs
(bad)
sbb
inc
jmp
lds
cmp
daa
daa
fdiv
call
xor
(bad)
mov
jno
pop
add
(bad)
fisttp
pusha
xor
imul
mov
jno
inc
xor
mov
pop
fwait
mov
xchg
xor
das
pop
mov
nop
shl
test
out
ret
daa
or
or
cld
or
push
adc
and
cmp
int
push
cmovge
xor
out
mov
sbb
push
call
xor
xchg
hlt
fild
mov
xor
addr16
stos
xor
pop
clc
bnd
and
in
into
arpl
popa
dec
(bad)
popf
sti
rol
pop
ror
in
mov
inc
and
add
test
or
push
cmp
xor
adc
mov
push
xchg
and
jo
and
(bad)
xlat
in
fbld
mov
int3
push
add
ins
sbb
iret
cmp
ja
rcl
shl
pop
mov
dec
or
(bad)
ror
lods
test
(bad)
push
jno
in
cdq
xchg
ficomp
mov
sbb
enter
shl
fidiv
dec
adc
js
cwde
les
je
xchg
test
int3
xchg
mov
dec
mov
arpl
inc
xchg
jecxz
mov
push
retf
inc
test
call
sub
iret
jg
aad
push
sti
out
add
sub
das
int
lods
jno
in
dec
and
repnz
daa
adc
ret
jecxz
or
(bad)
pusha
jbe
cld
cli
and
xor
push
inc
outs
sub
mov
jnp
xchg
sbb
push
fistp
or
push
ss
stc
mov
loope
(bad)
and
je
(bad)
xor
pop
sub
mov
mov
(bad)
enter
inc
int3
or
jecxz
add
cli
(bad)
jnp
xchg
scas
or
fdivr
outs
loopne
jge
test
sti
arpl
pop
rol
das
push
repnz
mov
inc
ja
sbb
retf
or
int3
fst
imul
inc
jge
xchg
cmp
xor
pop
or
outs
jo
pop
sub
push
and
das
dec
xchg
cmps
idiv
cmp
das
rcr
nop
shr
adc
aaa
clc
cmp
jae
cli
sub
jns
ja
sbb
mov
mov
fwait
mov
sbb
sub
div
mov
sub
mov
js
imul
or
inc
push
pushf
pusha
rcr
inc
or
inc
int
pop
lods
lock
pop
scas
mov
push
cmp
repnz
rcl
mul
repnz
sti
aam
pop
inc
xchg
arpl
(bad)
xor
dec
ins
xchg
cdq
and
add
pop
mov
fidivr
not
mov
pop
test
pop
cmps
inc
jnp
ds
jp
or
and
sbb
pop
ds
pop
or
pop
mov
out
mov
jge
fidiv
pop
xchg
test
mov
mov
(bad)
stc
ja
inc
push
push
cmp
fistp
pop
fwait
sub
pop
add
(bad)
neg
test
sub
aam
inc
ins
dec
mov
xchg
(bad)
and
lahf
test
es
test
mov
sbb
cmc
movs
sahf
mov
jb
and
xchg
jmp
xor
xor
sbb
jnp
lods
pop
shl
in
fnstenv
xchg
enter
arpl
sub
xchg
ja
addr16
push
xor
xlat
(bad)
dec
shr
xchg
adc
sub
sahf
add
and
dec
sub
(bad)
jmp
sub
cmp
dec
outs
mov
mov
in
xchg
xchg
fs
lods
add
push
jmp
mov
jge
movs
cmp
ja
fucomi
iret
ds
into
dec
mov
out
mov
fisub
imul
push
mov
xor
fistp
mov
mov
inc
ds
mov
gs
mov
outs
fld
ds
push
mov
dec
fisub
mov
scas
jp
pop
mov
dec
pop
popa
push
popa
movs
mov
mov
aaa
xchg
scas
sbb
and
or
popf
and
sbb
sbb
lods
mov
push
iret
ret
dec
mov
retf
jg
sar
call
cmp
stc
lds
ja
ret
adc
enter
shl
jl
and
into
test
jge
add
jne
mov
mov
es
in
icebp
sbb
inc
test
lock
mov
push
(bad)
push
mov
push
and
movs
xchg
jb
mov
and
add
cwde
repz
arpl
int
std
shl
cs
inc
jne
cli
stc
mov
dec
mov
xor
(bad)
faddp
retf
loopne
push
jbe
jecxz
and
imul
adc
stos
jns
sbb
ds
leave
stos
push
inc
in
daa
inc
int3
fst
xchg
add
cmp
cs
adc
jbe
mov
aas
test
adc
enter
xchg
outs
das
stos
scas
add
lock
cmp
inc
ds
arpl
in
mov
repnz
call
xchg
mov
out
(bad)
movs
pop
call
hlt
adc
nop
jle
fdivr
ret
lea
mov
loopne
sbb
popa
sbb
shl
sbb
inc
(bad)
push
fwait
push
jo
pop
lock
sti
jge
ror
mov
out
cli
jl
movs
mov
mov
jno
cwde
push
add
push
cmps
rol
add
sub
sub
jecxz
into
int3
add
ins
mov
movs
cmp
adc
sub
dec
sub
(bad)
mov
setno
jmp
imul
dec
imul
aam
(bad)
or
adc
enter
retfw
(bad)
xchg
mov
adc
and
cmps
pushf
es
sub
scas
mov
popa
pop
jnp
push
dec
add
or
cli
sbb
aas
bound
sub
mov
enter
gs
ins
outs
imul
dec
in
inc
es
out
or
pushf
test
pop
jo
lods
aas
movs
mov
fdiv
cs
mov
push
in
int3
mov
xchg
inc
shr
push
push
ins
xor
mov
xchg
aaa
scas
(bad)
fistp
aam
jge
test
test
sbb
mov
fwait
adc
sbb
frstor
push
es
retf
call
fidiv
xor
fstp
lock
mov
out
ins
adc
push
imul
mov
sbb
sar
and
cmp
sbb
add
jg
pop
cs
ret
ffree
gs
(bad)
loopne
adc
mov
dec
(bad)
xchg
push
jns
mov
movs
pop
xchg
cld
or
mov
mov
dec
mov
repnz
lea
pop
(bad)
and
pop
cli
mov
loopne
fistp
inc
lock
pushf
jae
aam
dec
rcr
pusha
mov
pop
mov
sti
push
repnz
daa
add
push
stc
sti
lods
adc
mov
cmp
mov
loopne
cld
ret
push
sub
mov
popf
or
pop
aaa
adc
or
icebp
jae
or
addr16
fwait
or
push
clc
ss
pop
sbb
xor
sar
lea
in
mov
xchg
pusha
outs
mov
outs
ret
loope
mov
xor
push
ins
(bad)
adc
setae
(bad)
clc
ss
xchg
sbb
cmc
or
ret
sub
mov
push
in
shl
mov
inc
xchg
aam
sbb
mov
(bad)
jbe
jmp
xchg
mov
pop
push
xchg
mov
pushf
cmp
xor
and
dec
sti
les
in
mov
and
(bad)
adc
clc
push
pop
and
into
jns
neg
sub
inc
idiv
sbb
xchg
fistp
mov
fadd
cmps
pop
icebp
xchg
loopne
inc
or
imul
ss
or
sub
mov
xlat
jmp
pusha
mov
pop
adc
inc
push
dec
loopne
sbb
rcl
scas
sub
jo
out
jo
mov
and
push
and
mov
xchg
xor
cmc
and
inc
sub
out
ret
jg
icebp
outs
push
sub
mov
cmc
add
nop
test
sar
xchg
shl
xchg
sub
xor
jno
sbb
or
mov
mov
iret
popf
and
push
out
dec
jl
fisubr
movq
jno
xchg
retf
retf
test
clc
mov
xor
jae
jl
loopne
dec
add
sbb
addr16
mov
scas
dec
stos
fst
stos
test
mov
cs
mov
cld
pop
cld
or
ja
(bad)
jne
xor
ror
cmc
mov
mov
(bad)
(bad)
retf
das
scas
call
test
out
rol
fild
and
loope
mov
push
out
enter
mov
das
cmp
add
mov
inc
inc
sahf
out
lahf
imul
ffreep
or
jle
ja
mov
call
push
or
je
addps
push
add
call
retf
lea
dec
out
xlat
jne
loopne
leave
mov
or
(bad)
repz
fist
mov
push
or
mov
pop
inc
jne
aam
lahf
loop
inc
scas
sbb
fmulp
pop
sub
enter
push
jecxz
pop
or
push
inc
ss
into
xchg
mov
mov
scas
movs
cmps
mov
cmp
sub
fdiv
in
mov
outs
sti
pop
mov
out
sbb
sub
and
in
mul
int
lods
dec
(bad)
and
pop
mov
mov
dec
data16
mov
(bad)
sub
inc
jns
popa
pop
into
and
mov
das
shl
cdq
cdq
adc
std
int
jmp
dec
or
out
js
mov
into
call
fisttp
mov
scas
fist
rcl
push
sbb
pop
or
enter
sbb
movs
sti
arpl
push
jecxz
push
clc
enter
js
cdq
cmp
inc
ss
in
and
stos
jmp
cmp
cld
cmps
jnp
(bad)
(bad)
sbb
ins
test
xlat
ins
xor
setb
div
lea
dec
loopne
cs
xor
jmp
xor
xor
mov
mov
jge
(bad)
lods
sub
sub
pop
pushf
or
(bad)
pop
cmp
inc
leave
clc
out
add
mov
mov
or
lods
scas
fsubr
push
mov
pop
xchg
fld
pushw
sbb
repnz
dec
mov
push
pop
mov
repnz
(bad)
aaa
push
dec
scas
nop
mov
fcom
into
push
or
jbe
into
lahf
xchg
pop
inc
mov
in
je
mov
out
lea
push
sub
or
(bad)
mov
mov
shl
les
push
push
out
js
and
mov
pop
(bad)
(bad)
cld
test
out
dec
and
sbb
or
jae
push
sbb
inc
pop
jge
dec
stos
xor
sub
pop
cmp
icebp
outs
cmp
mov
fcom
cmp
mov
pop
add
push
out
imul
push
js
jge
xor
pop
rsm
mov
push
sub
push
movs
fidivr
js
(bad)
movs
imul
push
inc
lea
and
add
cmps
sti
dec
lahf
ret
nop
retf
mov
jmp
xor
das
mov
imul
sti
cmp
ss
out
not
fwait
or
iret
sub
jmp
mul
ja
ds
imul
xchg
imul
inc
test
movs
push
jge
mov
and
xchg
iret
shr
data16
mov
loope
inc
scas
add
loopne
cmps
(bad)
jbe
repnz
sub
pop
push
(bad)
jb
and
add
sbb
popf
dec
sbb
push
jge
into
mov
repz
mov
jmp
daa
aad
mov
adc
jo
pop
aad
or
mov
sub
mov
jl
jecxz
inc
sub
mov
pop
in
cli
outs
and
jmp
and
test
push
mov
and
xor
jmp
add
dec
scas
cmps
aaa
mov
lock
xchg
jecxz
gs
and
xor
pop
inc
test
pop
sahf
(bad)
rcl
fwait
pop
mov
es
in
repz
dec
jl
ds
(bad)
and
xchg
jno
or
in
push
in
test
cdq
in
ins
das
bound
mov
xor
xchg
adc
shl
test
xchg
gs
mov
mov
mov
adc
push
add
mov
cmp
es
shl
int
data16
fistp
mov
dec
dec
sub
imul
test
test
xor
xchg
addr16
sub
adc
and
xchg
jp
(bad)
test
cmp
std
clc
adc
call
and
sbb
les
or
and
fsubr
sbb
adc
ins
(bad)
cld
mov
jl
daa
cmp
jb
sub
cmp
stos
mov
je
fild
in
int3
mov
ja
call
adc
jge
pop
pop
aad
or
mov
cmc
clc
rcr
jmp
xor
outs
inc
imul
push
mov
adc
movs
push
addr16
imul
out
jg
je
(bad)
js
stos
out
scas
div
in
neg
adc
pop
or
or
aaa
sbb
mov
pop
int3
xlat
cld
popf
stos
push
and
inc
loop
in
int
scas
sub
cld
mov
mov
push
les
xlat
sub
and
test
in
cli
stc
(bad)
mov
aam
fsub
xor
cs
rcr
imul
fst
or
movs
int3
mov
add
xlat
into
lods
cdq
add
rol
mov
jmp
stos
sti
mov
ret
adc
xor
pop
sti
cdq
call
stos
dec
mov
xchg
mov
shr
ficom
movs
xor
fidivr
push
xor
fimul
jle
mov
ret
or
mov
(bad)
jmp
rcr
xchg
xor
push
cmps
pop
daa
jmp
sub
add
fwait
fs
scas
sbb
repz
mov
pushf
fs
iret
test
push
sbb
inc
shr
dec
outs
pop
out
pop
lods
sti
idiv
ja
test
push
mov
adc
bound
push
mov
push
pop
pop
outs
pop
and
cli
ins
out
mov
ror
imul
or
not
mov
icebp
add
into
je
shl
cmp
ss
stos
jecxz
push
(bad)
jmp
add
dec
ud2
sbb
cmp
sub
clc
sub
ins
mov
inc
outs
nop
mov
mov
mov
addr16
mov
pop
pushf
ja
push
cmc
pushf
push
dec
imul
out
sub
popa
xchg
scas
mov
stos
rcr
icebp
scas
movs
fcomp
adc
ror
cld
cmp
or
loopne
pop
jbe
push
retf
ror
or
addr16
push
cs
mov
mov
stos
in
xchg
or
es
cmp
shr
frndint
pop
cwde
aas
inc
mov
and
ret
jmp
std
std
xchg
outs
loope
jle
in
mov
mov
pop
mov
pop
popa
call
push
jecxz
ins
and
in
pop
pop
or
cmps
xchg
push
jge
fldcw
call
mov
je
or
mov
fndisi(8087
les
test
out
lods
(bad)
ja
mov
bound
inc
mov
ss
es
sub
push
je
dec
mov
jmp
xor
in
enter
into
and
pop
jae
sub
xchg
stos
fmul
jb
sub
cdq
jmp
mov
dec
jns
mov
mov
cmp
aad
jg
push
push
enter
iret
add
scas
mov
movs
pop
aaa
mov
shl
fistp
xchg
popa
(bad)
pop
pop
fmul
(bad)
mov
pop
mov
push
fst
lods
(bad)
and
ret
hlt
inc
xchg
xor
mov
bound
mov
pop
add
dec
push
test
outs
(bad)
lods
clc
jno
mov
jb
xchg
movs
popa
xor
cwde
addr16
xchg
xor
mov
cmc
pop
fidivr
stc
int
or
add
pop
inc
push
xchg
stos
fadd
jns
(bad)
adc
(bad)
jg
sub
pop
mov
enter
and
imul
xor
mov
loope
jns
and
jge
in
js
je
inc
push
jne
sbb
inc
mov
imul
mov
adc
pop
push
hlt
or
loopne
dec
data16
arpl
aad
xlat
and
test
cdq
jecxz
pop
mov
xchg
push
loope
call
push
fisttp
pop
mov
xlat
movs
push
push
dec
fidiv
addr16
jmp
jno
mov
inc
push
xchg
repnz
(bad)
xchg
enter
fst
js
pop
push
push
sti
and
xor
(bad)
xor
(bad)
into
lods
jecxz
stos
(bad)
aam
xchg
mov
arpl
mov
sub
dec
pop
stc
in
cmp
sahf
sbb
repnz
sub
loopne
ret
add
adc
sub
mov
js
stos
and
xchg
inc
scas
leave
jle
fld
xor
clc
sahf
lods
jecxz
div
mov
mov
je
lods
or
cs
fmul
ror
imul
jmp
in
inc
sub
stos
fld
out
xchg
mov
jne
pop
mov
popf
adc
rcr
mov
or
ss
fnstsw
dec
icebp
out
scas
xchg
aaa
fs
cld
jl
mov
movs
(bad)
cmc
dec
jae
aaa
shl
add
mov
and
test
dec
cmp
xchg
sub
inc
mov
sub
repz
movs
rol
out
inc
adc
xchg
out
xor
or
retf
fstp
mov
add
mov
iret
call
xchg
movs
inc
dec
xchg
pop
fwait
pop
fcomp
push
or
xchg
rcl
adc
sbb
mov
mov
out
inc
cli
out
sar
nop
test
mov
movs
mov
aam
fbld
int3
enter
shl
out
(bad)
mov
imul
adc
mov
adc
jae
lods
pop
pusha
in
retf
sub
xchg
dec
loope
cmp
and
push
jle
in
cld
pop
pop
arpl
mov
mov
icebp
mov
cmp
lds
jae
lods
jb
sub
xchg
xchg
xchg
mov
and
inc
add
jnp
daa
fwait
jo
mov
out
test
jge
imul
test
ficom
cmp
push
ds
retf
call
cmps
das
es
push
push
xchg
inc
or
je
xor
bound
mov
sbb
inc
add
inc
mov
pop
mov
in
ret
ret
push
add
arpl
fimul
mov
ret
outs
pop
push
ds
jmp
cmp
enter
jg
add
or
cmp
scas
stos
adc
dec
xchg
jae
retf
mov
pushf
push
mov
jge
iret
adc
jo
(bad)
out
xor
jmp
lahf
dec
cmp
lds
dec
jl
push
mov
pop
movs
xchg
inc
jno
pop
lods
xor
shl
push
movs
and
bound
(bad)
sti
xchg
stos
daa
xor
xchg
xchg
sub
shr
xor
pop
call
add
pop
push
nop
or
cli
cdq
cmc
xchg
ret
rol
pop
repnz
xor
add
shr
int
jns
cld
outs
dec
aam
sub
ror
retf
ins
push
sbb
pusha
fisubr
jae
cwde
outs
and
cmp
and
push
aaa
aaa
add
(bad)
cmp
data16
arpl
xlat
in
arpl
mov
dec
test
je
ins
or
or
xchg
mov
and
xor
or
iret
in
mov
call
jle
sar
sub
cmps
push
add
add
nop
ret
(bad)
push
inc
mov
xchg
lods
mov
xchg
mov
jae
dec
mov
mov
shl
mov
add
push
and
fucomip
mov
sub
push
adc
push
add
xchg
std
jecxz
and
jmp
lahf
xor
add
push
outs
dec
cdq
mov
and
rcr
ss
xor
push
adc
test
mov
movs
daa
adc
inc
leave
mov
leave
adc
add
and
sub
test
mov
stos
jae
pop
iret
and
and
pop
mov
test
sbb
lock
jne
xor
cdq
xchg
in
movs
sti
fidivr
test
fwait
sub
inc
ret
scas
out
mov
gs
xchg
das
outs
popa
sbb
and
clflush
es
call
inc
daa
or
jmp
inc
aad
jmp
in
inc
mov
and
adc
(bad)
lods
jmp
mov
into
call
adc
adc
and
loopne
out
addr16
fstp
inc
mov
test
into
push
ins
call
mov
mov
sti
cwde
ins
jbe
push
pusha
sbb
jle
dec
mov
imul
inc
jp
jge
pushf
cs
pop
pop
mov
xchg
mov
push
adc
push
jl
daa
xchg
sbb
push
mov
ins
mov
shl
(bad)
sbb
adc
int3
lock
xor
fldenv
push
ds
adc
test
pop
shr
dec
nop
in
mov
add
pop
push
pop
sub
pusha
jecxz
xor
cmp
out
out
out
sbb
sub
mov
aam
jmp
retf
ret
jnp
dec
fisttp
or
retf
int3
inc
sbb
ins
test
mov
jg
stos
into
dec
mov
cmp
jmp
push
inc
xchg
test
stos
push
adc
in
pop
push
xchg
pop
xor
int
(bad)
jae
lods
or
mov
inc
jae
push
in
mov
adc
sbb
pcmpgtw
nop
jo
push
sub
mov
cmps
rol
jbe
bound
mov
ret
retf
push
ins
cmp
push
nop
int
push
jo
xor
mov
adc
cmp
jne
hlt
jle
cli
sbb
clc
push
xor
movs
pusha
pop
jo
add
push
aaa
fwait
scas
mov
out
xchg
or
cmp
xchg
pusha
aas
loopne
int3
mov
sbb
jns
mov
mov
sti
mov
mov
(bad)
jae
stc
ret
push
cmp
and
fistp
adc
pop
pushf
sbb
sbb
cmp
(bad)
lods
fld
pop
mov
mov
mov
lods
call
fs
push
ret
rcl
xor
mov
mov
cmp
loopne
aaa
push
aas
lea
shl
clc
jl
out
js
pop
push
add
into
loopne
aad
outs
cmp
jle
sub
repnz
cmp
es
jo
push
xchg
ins
in
mov
addr16
mov
add
mov
mov
mov
mov
out
sbb
inc
pop
in
lds
in
mov
cmp
dec
or
sahf
jg
inc
out
frstor
sbb
sar
fsub
mov
repz
push
sbb
ja
mov
stc
cdq
div
and
and
hlt
and
push
or
rcr
mov
iret
js
add
sub
into
inc
loopne
sbb
or
inc
outs
adc
sbb
xor
sar
enter
xlat
xchg
xor
jmp
pop
push
pushf
icebp
or
lods
jns
repz
arpl
or
repnz
dec
into
xor
pop
addr16
fsub
ror
jns
xchg
sub
pop
outs
aaa
jbe
dec
test
xchg
add
pop
jge
cdq
add
mov
popf
aam
cmps
das
xchg
pusha
sbb
sbb
fld
and
mov
or
fwait
jmp
pusha
jg
mov
fadd
sub
aam
adc
imul
(bad)
out
(bad)
xchg
aam
loop
mov
test
fmul
xchg
les
ss
push
pop
arpl
pop
push
retf
adc
mov
push
or
add
pop
push
dec
xlat
les
mov
ja
xchg
mov
sub
xlat
inc
in
aam
loop
das
mov
daa
adc
cmc
adc
jno
jmp
jmp
fwait
icebp
cmp
call
cmps
lea
neg
mov
cmp
mov
adc
xlat
jmp
stc
sub
xor
lods
jle
stos
sbb
and
bound
adc
(bad)
mov
add
(bad)
ret
stos
dec
aas
rcr
aaa
nop
push
retf
mov
dec
ja
ret
dec
xlat
and
xor
inc
movs
stc
or
rcr
dec
stos
out
shl
ror
push
mov
or
mov
arpl
stc
(bad)
mov
xor
test
sbb
and
arpl
fisubr
inc
mov
sbb
in
push
cs
shl
add
jmp
pop
mov
mov
addr16
mov
jbe
call
push
cmp
repnz
lahf
cmp
les
mov
jg
int3
sub
repz
cmc
pop
push
or
add
add
mov
adc
(bad)
push
jnp
adc
adc
leave
mov
cmovne
sub
stos
mov
mov
adc
sahf
rol
add
cmp
sbb
jmp
and
int3
(bad)
loopne
fs
dec
hlt
rcr
sub
cwde
sbb
xchg
cmp
dec
jmp
pop
test
mul
jg
leave
jmp
clc
test
mov
mov
mov
mov
ror
jg
jl
mov
mov
push
adc
add
dec
call
mov
into
daa
mov
(bad)
mov
and
lods
fwait
idiv
sbb
out
sub
popa
test
lock
xchg
adc
add
lds
mov
inc
sub
push
adc
adc
stos
mov
pop
sbb
sub
js
aaa
(bad)
sar
push
inc
sub
sub
data16
in
or
loop
stos
sbb
aas
(bad)
(bad)
ins
iret
fcom
push
test
xchg
mov
in
inc
shl
in
pushf
adc
jl
mov
pop
mov
movs
imul
rcl
cs
adc
push
cs
sub
sub
std
add
cmp
cmc
repnz
pop
jnp
sub
xchg
pop
jecxz
retf
(bad)
mov
mov
or
leave
test
aam
fidivr
aam
jmp
sti
fld
test
stc
aas
lods
inc
(bad)
int3
mov
cmps
jns
fcomip
ds
bound
lock
dec
inc
mov
cmps
inc
mov
xor
adc
adc
sub
xchg
arpl
pushf
ins
imul
mov
ret
enter
add
gs
pop
cdq
mov
fiadd
inc
pop
call
js
mov
xchg
mov
bswap
xchg
int3
repz
in
jge
call
pusha
clc
mul
lds
movs
dec
lahf
retf
fs
imul
jle
jg
and
pop
icebp
out
xor
cmp
inc
mov
sub
inc
clc
mov
fwait
mov
inc
aad
sbb
test
dec
enter
mov
stc
or
xlat
pop
cli
push
mov
mov
mov
enter
xor
data16
cdq
stos
xor
add
lods
inc
in
jae
jge
fistp
pop
push
jg
cmc
in
(bad)
pop
js
xchg
scas
daa
xchg
and
enter
xchg
xchg
enter
in
ja
inc
or
sbb
out
push
rcl
dec
cmps
in
movs
or
arpl
fwait
or
mov
xchg
or
outs
loope
les
and
jmp
jecxz
and
jbe
data16
ds
pop
mov
sbb
push
outs
push
mov
mov
cmp
sbb
shl
out
loop
sbb
add
out
adc
sti
push
add
aad
adc
xor
or
xchg
dec
sbb
and
popw
cmp
outs
retf
scas
rcl
push
adc
sub
movs
xor
test
pop
test
sbb
enter
mov
dec
push
loop
inc
mov
cmp
js
jmp
iret
(bad)
adc
and
fstp
and
inc
cli
push
xor
mov
neg
aad
pushf
pop
fistp
pushf
or
je
mov
lods
mov
mov
int
int3
mov
adc
out
xchg
gs
aaa
adc
xor
mov
bndldx
xchg
mov
pop
dec
mov
and
outs
pushf
pop
(bad)
das
js
sti
and
leave
xchg
add
add
or
cmps
fild
movs
shl
mov
(bad)
std
xor
imul
xchg
mov
mov
test
push
fsubp
pop
call
pop
add
add
stc
xor
mov
pushf
cmp
dec
cwde
hlt
and
mov
adc
mov
mov
pushf
mov
(bad)
jmp
sub
outs
jecxz
(bad)
and
mov
xlat
push
shl
inc
in
mov
sbb
sbb
add
inc
loope
mov
jle
sub
or
or
xchg
xchg
retf
popf
mov
sub
push
scas
or
bound
call
sub
sti
repnz
jle
and
out
fwait
sahf
xchg
sbb
pop
scas
sbb
mov
popa
mov
fcomip
mov
cmp
add
out
mov
outs
jae
(bad)
and
xchg
xchg
out
mov
lods
sbb
mov
enter
cwde
jle
rcl
imul
(bad)
aas
dec
xchg
inc
mov
jo
(bad)
ins
cmp
fbld
sub
lods
pop
movs
jle
fild
xchg
xchg
stc
outs
push
mov
test
das
mov
mov
out
stos
cld
dec
inc
and
ins
call
test
push
dec
push
add
sbb
mov
popf
(bad)
jnp
pop
sahf
xor
mov
pusha
or
jae
or
neg
aas
mov
inc
cmp
imul
lock
xchg
mov
ja
jb
sbb
xchg
daa
ja
jne
jo
out
jae
push
sub
shr
(bad)
jg
popa
outs
adc
adc
sbb
jecxz
loopne
or
cmp
mov
and
push
sbb
jmp
jecxz
lahf
xlat
mov
in
jle
test
lds
mov
loope
sbb
test
mov
dec
outs
out
pop
pusha
cmp
outs
sub
rcl
adc
jp
dec
mov
pop
jne
add
repnz
jmp
in
adc
xchg
push
mov
add
push
add
scas
or
(bad)
sbb
outs
sub
jmp
xchg
mov
add
xlat
dec
inc
push
jae
imul
and
sar
inc
ror
int3
test
dec
add
retf
ret
add
push
ins
aaa
cmp
dec
mov
mov
add
inc
mov
push
jmp
es
adc
pusha
cmp
jns
mov
mov
out
xchg
jbe
bound
pop
test
cmp
fistp
gs
fs
jno
xchg
dec
cmp
add
pop
into
leave
in
shl
inc
and
movs
movs
xchg
pop
(bad)
fldenv
xchg
or
sub
cmp
push
xor
(bad)
rol
or
push
movs
cmc
or
arpl
lea
or
dec
lea
ss
in
push
push
inc
fadd
sbb
inc
outs
ror
int3
push
jno
xor
mov
mov
out
cmps
jo
lahf
movs
jbe
xchg
and
and
fbld
xchg
add
mov
ds
or
xchg
(bad)
cmp
cld
mov
out
shr
pop
aam
in
sub
add
in
xor
outs
pop
adc
dec
pop
mov
sbb
(bad)
xor
pop
adc
mov
out
dec
imul
push
and
cmps
lods
out
push
lahf
jo
push
int
and
add
movs
lock
push
in
lods
imul
retf
dec
inc
clc
inc
hlt
hlt
mov
jae
jg
(bad)
stc
call
jb
push
and
enter
test
loope
fidivr
mov
outs
ins
bound
pop
jmp
adc
fadd
pop
cmp
or
es
adc
mov
push
push
pop
inc
loope
stc
inc
or
add
addr16
aaa
mov
xchg
and
ja
pop
mov
sahf
cdq
cmp
(bad)
fmul
jne
retf
sbb
xor
imul
inc
xchg
popa
xchg
push
jecxz
out
or
lods
xor
jo
pop
(bad)
sbb
push
mov
mov
cdq
mov
and
inc
xchg
ficom
dec
(bad)
ds
repz
sub
call
dec
cmp
fsubrp
(bad)
(bad)
pop
and
call
xor
dec
inc
xchg
loopne
xor
sbb
test
cmp
movs
add
ja
fld
lods
dec
inc
out
mov
sub
push
das
pusha
mov
dec
jg
ror
dec
pop
sub
add
mov
adc
dec
sub
and
stc
imul
call
rcr
aam
add
icebp
dec
mov
add
nop
mov
or
sub
ret
jbe
repnz
jle
xchg
jmp
dec
adc
pushf
mov
sbb
std
les
mov
outs
lock
adc
(bad)
sbb
sub
push
aam
stos
js
out
xor
adc
adc
into
sub
mov
push
xor
push
jle
xchg
cmc
popa
enter
xchg
push
cmovl
test
(bad)
xor
mov
js
or
or
in
cmc
adc
xchg
mov
(bad)
xor
(bad)
clc
std
xchg
xor
jnp
(bad)
cs
sbb
pop
cmp
cmp
cmp
sbb
lock
and
sub
test
dec
xor
int3
rcl
jecxz
jae
dec
jmp
lea
retf
push
test
or
mov
mov
push
daa
cdq
mov
lods
cdq
jg
mov
gs
pop
aas
test
sub
movs
mov
jmp
mov
pop
mov
mov
inc
add
jmp
or
jb
out
fs
push
inc
stos
test
scas
repnz
leave
lods
ret
mov
pop
daa
dec
imul
(bad)
mov
out
test
mov
(bad)
xchg
test
xchg
aas
jb
pop
and
push
fstp
dec
add
inc
pop
gs
pushf
xor
daa
fbstp
adc
push
movs
pushf
rcl
shl
adc
fneni(8087
dec
fcmovnbe
sahf
sbb
add
popf
pop
call
js
cmp
test
mov
cdq
pop
out
jg
jl
lahf
add
(bad)
loope
js
adc
inc
sbb
cmp
out
loopne
push
jl
mov
pusha
idiv
ret
sub
lods
test
sar
pop
mov
mov
adc
mov
cwde
mov
shr
pop
fimul
hlt
adc
les
enter
dec
xchg
out
mov
pop
sqrtps
in
push
aam
jb
mov
push
outs
and
xor
or
mov
pop
out
dec
xchg
push
mov
imul
cmp
pop
mov
push
mov
dec
shr
rcr
add
stos
int3
push
stos
or
movs
xor
push
js
lods
jl
adc
outs
and
xor
popf
js
mov
push
jmp
xchg
add
push
pop
and
stos
xor
test
jp
inc
jge
push
wbinvd
push
push
(bad)
scas
cdq
push
cmp
cld
(bad)
lods
int
fstp
xor
cwde
shl
movs
cmp
inc
pop
int3
xchg
mov
dec
mov
or
xchg
aas
fild
cs
add
push
mov
pop
mov
fild
ror
dec
scas
test
div
mov
pop
mov
inc
sti
sbb
mov
outs
ror
xchg
fmul
and
fistp
or
lods
dec
xor
and
(bad)
pusha
xor
shr
data16
retf
adc
int
ins
in
dec
out
push
repnz
dec
fadd
xor
ror
mov
jno
xchg
jg
and
inc
push
mov
imul
jns
and
sub
fmul
dec
ror
ror
push
xchg
dec
add
mov
add
aas
jb
popa
clc
dec
cs
push
test
mov
inc
mov
xor
mov
repnz
(bad)
loop
push
shl
mov
ss
test
sar
push
jno
push
mov
dec
dec
or
(bad)
pop
ins
sbb
shr
and
adc
call
sbb
mov
inc
xchg
push
scas
pop
daa
cmp
xor
ins
call
xor
inc
push
test
pop
mov
push
sub
mov
xor
fisubr
sbb
clts
mov
sbb
xchg
xchg
xchg
popa
ins
lahf
sbb
or
sub
loopne
sub
call
popa
xor
fild
outs
pop
movs
pop
inc
fcmovb
pop
xor
iret
lock
jle
out
xchg
pop
or
sbb
mov
cmp
arpl
and
cmps
scas
cmp
jno
mov
test
sbb
mov
clc
mov
fisttp
push
dec
add
sub
(bad)
push
inc
cmp
inc
jns
adc
outs
jl
cmp
enter
scas
cs
mul
pop
ror
idiv
sbb
popf
rcr
cmc
jae
xor
xlat
out
jg
pushf
mov
enter
jmp
mov
push
(bad)
xlat
sbb
mov
mov
push
push
ret
sahf
pop
fsub
push
sub
lods
mov
leave
xchg
je
aad
fadd
push
inc
mov
jp
jp
sub
rcl
ja
cmp
mov
pop
pop
adc
lahf
popa
sbb
pusha
outs
ins
add
mov
in
mov
jns
and
pop
vmaxsd
std
jecxz
pop
div
adc
pcmpeqw
popa
dec
sbb
mov
ja
test
in
ret
hlt
je
in
xchg
pop
mov
pop
cmp
mov
mov
pop
adc
je
jno
mov
xor
adc
shl
std
or
test
(bad)
xchg
jmp
mov
push
push
mov
in
das
sbb
sti
push
call
sbb
dec
xchg
push
and
inc
loope
mov
leave
lods
jge
clc
jns
ins
or
mov
fist
xor
push
test
jns
adc
pop
or
mov
repz
ins
aad
and
aas
mov
pop
pop
movs
loope
mov
sub
repnz
outs
push
call
in
cmp
out
mov
rol
popa
push
retf
clc
fcmovnb
and
mov
xchg
movs
pop
mov
adc
pop
lods
push
sub
fwait
pop
sub
add
rol
mov
sahf
das
and
xchg
daa
or
ror
inc
cmc
pop
pop
rol
(bad)
dec
xchg
xchg
mov
cmp
movs
cmp
leave
pushf
cdq
push
ret
push
mov
adc
and
std
add
es
add
mov
pop
ss
pushf
dec
mov
cmp
xor
dec
inc
inc
mov
mov
mov
sti
aam
ret
daa
sbb
pop
popa
pop
cmp
les
add
movs
mov
jb
cmc
sbb
int
or
cmp
mov
call
lds
sub
sub
stos
icebp
cmps
cs
int
(bad)
jo
ret
std
clc
dec
icebp
and
(bad)
out
cmp
mov
or
xchg
fistp
mov
cmp
ss
xchg
mov
xor
push
pop
fld
jns
add
inc
mul
daa
adc
dec
test
jmp
cmps
and
jne
out
arpl
aad
sahf
xor
cmp
cmps
mov
xchg
call
xchg
pop
lods
mov
int3
lea
and
retf
push
ret
pop
in
pop
ror
or
add
ss
inc
jg
and
inc
jp
inc
push
sub
add
imul
cmp
sub
sbb
add
cmp
adc
arpl
jno
mov
enter
push
ds
jne
add
pop
call
test
int
call
push
sar
mov
sub
jnp
pop
aad
shr
jnp
sub
les
into
and
mov
and
xchg
jecxz
push
or
enter
jge
stc
shrd
sti
jp
in
inc
xor
xor
popa
or
aad
pop
sub
nop
(bad)
daa
outs
jp
gs
aam
in
mov
and
push
adc
push
mov
out
sbb
sbb
fistp
xchg
pop
jmp
ins
retf
xor
dec
aaa
inc
add
jnp
fisttp
into
adc
mov
adc
and
je
jne
fld
inc
pop
outs
loop
leave
xor
cli
mov
shl
movs
sub
jns
icebp
clc
or
pop
fdiv
outs
ins
sub
icebp
out
cmps
mov
mov
push
ds
mov
add
or
inc
xchg
adc
mov
call
sbb
xchg
mov
and
mov
bound
scas
xchg
inc
inc
lds
in
sbb
add
sbb
(bad)
jo
js
dec
retf
aaa
add
inc
in
clc
cmc
fisubr
out
ret
jne
lock
idiv
adc
stc
pop
xchg
jmp
xor
adc
movs
out
test
ret
repz
test
into
loope
jl
shl
cmp
and
sub
loopne
jmp
(bad)
cmp
bound
sub
push
mov
cmp
lods
imul
inc
mov
xchg
add
(bad)
xor
lds
sbb
xor
jae
in
movs
xchg
mov
adc
jp
push
adc
out
cmps
or
sbb
add
add
add
pop
movs
sbb
xchg
xor
mov
and
push
dec
cwde
movs
sbb
adc
cmp
repnz
ds
sub
sbb
retf
mov
in
sbb
lock
shr
std
dec
outs
sbb
cmp
push
daa
add
and
(bad)
push
test
mov
stc
pop
xchg
dec
sbb
in
push
and
push
jne
out
pop
repnz
cwde
jge
push
dec
ins
stos
js
add
adc
cmc
jbe
jne
pop
inc
xchg
cmps
stc
jl
adc
mov
shr
xor
inc
(bad)
test
mov
in
aaa
rcl
pop
test
ins
int3
mov
stos
fst
sti
mov
inc
in
cmp
das
stos
dec
push
dec
sbb
cmp
es
hlt
sbb
mov
aad
cmc
mov
sub
xlat
pushf
aad
in
rol
mov
xor
sub
or
push
fld
gs
dec
xchg
fwait
sub
leave
out
add
mov
(bad)
js
aad
or
das
cmc
jbe
pop
ret
sub
int
shl
bnd
jo
xor
shl
nop
mov
movaps
push
or
jb
push
add
push
imul
inc
popa
mov
jl
imul
cmc
and
pusha
push
(bad)
(bad)
sub
or
dec
out
adc
int3
popa
inc
add
jbe
ret
dec
nop
cmp
push
in
idiv
ds
push
cwde
add
adc
rcl
test
push
jno
or
cdq
in
push
pop
loopne
and
(bad)
push
sub
jno
and
vcvtpd2ps
cmc
and
lock
xchg
push
push
and
mov
pop
cwde
dec
in
cwde
cmps
pop
cs
call
ror
push
pop
sbb
(bad)
inc
retf
or
xlat
and
push
outs
inc
ret
test
and
xchg
xchg
bound
js
cmps
pop
cmp
popa
add
clc
mov
mov
pop
lea
adc
dec
sbb
cmps
add
(bad)
(bad)
(bad)
fidivr
mov
and
pop
enter
pop
cmp
sti
inc
fwait
mov
jle
inc
inc
push
retf
xchg
ins
jne
sbb
mov
dec
jg
mov
push
imul
ins
cld
mov
out
adc
pop
sar
mov
ret
inc
mov
mov
xor
ins
xor
ja
stos
inc
lods
cmc
into
jg
add
ja
adc
xchg
aad
cdq
sti
dec
ins
js
lds
(bad)
push
add
inc
das
mov
sti
icebp
sub
mov
xchg
cdq
xchg
fstp
mov
movs
inc
add
(bad)
pusha
push
dec
or
jae
cmp
sub
je
aas
rcr
inc
(bad)
call
dec
test
cmc
in
jo
jo
cld
repz
pop
pop
sbb
push
pop
arpl
pop
fimul
movs
enter
test
dec
fs
push
jb
jle
cmp
in
call
ficom
xor
rcr
sahf
mov
fs
in
xor
push
and
ret
dec
cmp
je
jne
and
std
out
fisttp
fsubr
ja
inc
in
ret
pop
rep
ins
add
rcl
and
and
mov
inc
mul
mov
aad
shl
lods
ss
sub
xchg
(bad)
out
icebp
ret
inc
cld
shr
rcr
inc
xor
pop
sbb
loop
adc
popf
jmp
jne
test
push
push
adc
popa
and
fwait
loop
je
inc
(bad)
cmp
push
loope
pop
lahf
sbb
and
ret
(bad)
int
rol
jmp
out
xchg
out
and
retf
mov
adc
sub
jge
or
push
jmp
jle
sub
mov
test
movs
mov
push
and
fwait
iret
or
push
jbe
push
movs
int
fdiv
push
cmps
xchg
sbb
sub
movs
jle
xor
add
sar
dec
xor
inc
test
xchg
scas
adc
sub
loopne
nop
mov
push
dec
fs
dec
stc
lea
pop
push
jns
xor
mov
jae
out
std
mov
out
xchg
xchg
sbb
mov
add
(bad)
cmps
daa
sbb
cmp
js
dec
add
push
fld
hlt
pop
pop
pop
clc
xchg
and
std
stos
dec
sub
xchg
xor
xchg
push
add
mov
jl
mov
mov
cdq
mov
loop
xchg
(bad)
inc
add
rol
or
push
ret
mov
dec
xor
pop
loopne
ds
dec
inc
jnp
push
mov
ds
or
repz
adc
popa
xchg
xchg
test
sbb
jmp
int3
adc
mov
and
fdivr
es
fcom
pop
jns
cdq
push
cld
mov
xlat
adc
and
jmp
xchg
jno
pop
mov
pop
pop
fadd
inc
sbb
and
push
pusha
aad
adc
in
frstor
stos
and
inc
les
pop
ret
out
in
jg
push
sar
fwait
mov
mov
fwait
push
mov
or
mov
cli
fs
repnz
cmps
aas
outs
dec
mov
cmp
inc
pop
push
mov
pop
arpl
and
mov
sti
and
inc
and
jmp
sbb
into
cmp
ficom
cli
out
cmc
sbb
mov
pop
imul
jo
mov
inc
stos
xor
and
cmp
push
shl
and
(bad)
sti
mov
loopne
jge
and
inc
xor
fdiv
movs
cmp
sbb
jae
cmp
mov
ror
iret
fcmove
mov
cmp
xchg
cmp
call
gs
sub
int
stos
xor
je
push
jl
dec
xor
cmc
imul
out
gs
mov
adc
dec
pop
dec
mov
popa
adc
aas
and
out
div
ds
sbb
mov
add
(bad)
jnp
push
cs
pop
jbe
or
movs
dec
(bad)
jne
inc
test
ins
xchg
ins
sbb
add
in
and
and
test
call
movs
les
push
push
add
scas
leave
or
and
cdq
dec
inc
inc
mov
mul
sbb
mov
inc
pop
retf
rol
jp
retf
push
cdq
inc
in
sti
bound
lods
mov
jle
jmp
jmp
pop
sar
sbb
cmc
cs
xchg
daa
push
jp
dec
xor
push
call
push
adc
sbb
out
cli
fidivr
repz
and
je
add
push
inc
or
(bad)
neg
sub
mov
call
cmp
rcl
popa
fiadd
mov
dec
inc
outs
sub
stos
shl
(bad)
cmc
(bad)
mov
loope
adc
cdq
pusha
inc
xchg
faddp
mov
push
cmps
aas
mov
mov
cli
loop
ins
mov
mov
cmp
shr
ror
mov
inc
adc
retf
and
rol
cmp
push
repz
mov
pop
mov
inc
mov
dec
mov
sbb
(bad)
jmp
imul
push
pop
jnp
jp
das
loop
or
(bad)
jnp
fsubr
clc
clc
nop
push
js
sbb
xor
lds
(bad)
add
mov
aad
int
adc
nop
imul
jb
loopne
pop
inc
sbb
sub
out
int3
fbld
stc
out
inc
neg
aaa
mov
bnd
jge
sbb
out
xchg
test
cmp
mov
add
loope
inc
jbe
and
xor
pop
push
aam
pop
nop
jno
test
in
adc
cmp
mov
pop
popa
fld
mov
cmc
jno
ja
or
repz
hlt
add
divps
mov
sub
lods
mov
mov
scas
push
mov
xchg
mov
mov
sbb
lods
shl
jno
cwde
pop
in
das
mov
(bad)
jb
push
and
movs
hlt
pushf
mov
cmp
mov
jl
sar
in
sar
or
rcr
xchg
adc
ficom
in
fnstsw
lods
movs
mov
gs
pop
xchg
(bad)
test
dec
pop
cwde
pop
pop
int3
lahf
sbb
push
add
jnp
mov
xchg
xor
cli
mov
retf
daa
xchg
sub
dec
clc
movs
imul
mov
cmps
ret
hlt
movs
rcl
ret
ror
in
push
jmp
mov
adc
xchg
jmp
inc
aas
std
stos
pop
jmp
mov
jg
hlt
sti
sbb
data16
popf
outs
mov
fstp
cmc
int
pop
inc
pop
fadd
(bad)
in
outs
jne
sti
out
stos
je
sub
or
xchg
aam
repnz
cmp
add
pop
mov
push
add
cmp
nop
out
pushf
loop
in
add
pop
xchg
aam
test
sar
or
ror
ja
mov
bound
cmp
mov
dec
xchg
ret
push
es
dec
mov
and
daa
adc
mov
repnz
dec
sub
dec
loop
int3
rol
pop
add
or
adc
repz
cdq
push
xchg
jp
push
cmc
loopne
scas
cmc
push
ja
jo
add
cli
cwde
mov
js
rcl
inc
and
or
inc
in
lods
sub
cmp
push
sbb
cdq
sar
jnp
inc
jne
stos
cli
pop
stos
call
test
xchg
icebp
in
in
fcom
and
sub
adc
inc
shr
arpl
add
or
outs
mov
sub
cwde
mov
movs
mov
retf
jne
gs
or
mov
shl
scas
sub
push
retf
and
push
add
add
and
jo
pop
les
pop
mov
jmp
test
gs
fldenv
and
inc
jns
loope
sbb
pop
jae
lds
push
mov
enter
add
je
and
mov
enter
jl
dec
or
shr
mov
fimul
sbb
mov
adc
add
cld
dec
out
sbb
jl
adc
clc
cmp
loope
gs
adc
repz
mov
ss
(bad)
pop
enter
jbe
test
push
mov
bound
cmp
push
lods
add
fmul
sub
mov
pop
or
push
cmp
adc
jmp
sub
mov
movs
nop
sahf
sbb
ins
dec
cli
in
push
dec
xchg
int
pop
mov
jne
sbb
(bad)
xchg
pusha
push
jo
xchg
or
and
adc
inc
mov
imul
sahf
inc
add
mov
pop
jmp
jg
clc
xor
(bad)
in
rcr
nop
ja
or
popf
or
in
mov
out
movs
push
dec
sbb
pop
mov
(bad)
shr
dec
push
push
push
inc
pop
jmp
repz
xchg
ins
push
loopne
mov
mov
arpl
sbb
inc
jge
mov
daa
xor
test
call
push
es
mov
dec
xchg
and
in
sub
jne
push
popa
in
sub
iret
call
(bad)
lock
ins
add
out
adc
(bad)
mov
inc
test
aad
enter
jmp
gs
pop
clc
and
push
jmp
iret
pop
fwait
movs
(bad)
mov
loop
retf
mov
jge
cli
dec
lock
push
add
sahf
jge
dec
pop
and
mov
add
test
daa
(bad)
sar
stos
sub
(bad)
hlt
ja
ret
or
cwde
imul
imul
loopne
sub
ret
lahf
repnz
movs
add
ins
int3
add
xchg
inc
in
inc
push
daa
mov
push
push
fdivr
or
fsubrp
jmp
out
add
add
add
in
mov
aam
lds
and
cwde
sbb
push
xchg
js
test
xchg
outs
test
xchg
jle
push
jmp
cmp
movs
lods
test
mov
aaa
pop
shl
inc
fstp
mov
push
cmps
ss
push
test
adc
ss
loop
das
mov
sub
stos
fst
sbb
nop
push
adc
sub
fisubr
cmp
cmp
inc
imul
add
or
mov
cdq
mov
xor
pop
dec
enter
pop
inc
mov
cmp
xlat
sbb
retf
add
sahf
movs
popa
retf
fbstp
jmp
mov
iret
loop
retf
mov
sbb
xor
or
inc
dec
push
push
pushfw
int3
jmp
sub
add
jge
cdq
retf
xor
retf
test
out
mov
cmp
retf
imul
pop
sbb
inc
ins
mov
cmp
mov
pop
fdiv
cmps
cmps
xor
mov
ror
or
adc
repnz
xchg
pop
aas
mov
xor
adc
test
mov
idiv
loopne
mov
popf
mov
xchg
xor
push
dec
adc
in
sahf
xor
push
xchg
xor
icebp
xor
fwait
mul
ja
mov
dec
add
jle
or
mov
add
jnp
mov
popf
push
dec
and
fistp
pop
fwait
mov
jp
movs
nop
cli
rcl
stos
sahf
stos
cdq
retf
xor
sbb
je
out
mov
jge
adc
in
adc
test
addr16
and
in
idiv
and
jmp
xchg
lahf
mov
stos
pop
push
ror
lods
inc
xchg
or
cli
mov
jb
or
cmp
push
inc
fiadd
dec
mov
push
cmp
dec
sti
mov
jmp
mov
push
ret
(bad)
cmp
xchg
push
and
mov
mov
lea
dec
icebp
sub
xchg
das
mov
push
cld
icebp
pop
mov
xor
in
mov
inc
inc
out
test
out
add
xchg
pop
pop
dec
addr16
mov
mov
push
cmps
pop
jp
lock
daa
or
xlat
cld
cmc
sahf
in
pushf
lods
cmp
cdq
(bad)
imul
pop
sti
sbb
and
adc
cmp
outs
addr16
movs
aaa
data16
inc
adc
jle
mov
and
mov
mov
into
xor
test
push
inc
inc
nop
adc
fst
pop
and
enter
xor
xchg
lds
clc
mov
lods
sbb
xchg
js
in
push
mov
out
adc
ret
or
sbb
popf
push
test
mov
jle
inc
add
shr
mov
std
push
sar
adc
add
in
iret
pop
hlt
push
ret
sbb
push
mov
push
xchg
add
mov
pop
jne
fwait
or
pop
push
jecxz
xor
jmp
jno
push
arpl
in
mov
mov
retf
lods
pop
add
movs
pop
and
inc
mov
sti
push
ret
jnp
sub
int3
mov
fnstenv
sub
rcr
mov
pusha
mov
fsubr
inc
int
sub
or
sar
stc
or
fcmovu
cwde
in
mov
mov
push
adc
retf
(bad)
and
jmp
mov
or
imul
sbb
dec
mov
dec
sbb
or
or
cmp
xchg
xlat
popa
sub
and
lds
push
pop
dec
jne
fbld
inc
cmp
push
push
adc
pop
stc
int
shl
adc
xor
sub
mov
push
dec
adc
je
aad
shl
mov
nop
dec
push
or
adc
cmp
sub
add
(bad)
xor
(bad)
push
imul
push
sub
push
pusha
jo
adc
fimul
loope
xor
and
jnp
mov
xlat
mov
xor
add
pop
scas
jne
push
inc
sub
and
stos
lahf
imul
pop
mov
and
mov
and
gs
adc
dec
sar
je
lods
out
add
add
popf
cli
aaa
sub
inc
pop
loop
dec
sahf
cmc
inc
int3
std
push
(bad)
iret
cmp
ja
inc
push
mov
(bad)
fdivp
push
sbb
push
dec
push
retf
je
jg
fnstcw
mov
adc
and
es
fwait
cdq
(bad)
jecxz
imul
pop
inc
jb
mov
mov
mov
dec
clc
and
addr16
aad
mov
pusha
ret
fs
cld
dec
mov
sbb
mov
cmp
rcl
mov
sub
sti
and
into
mov
add
dec
or
dec
ss
ret
pusha
shr
xchg
lds
les
test
or
or
jbe
dec
add
sbb
lods
sub
push
and
outs
jg
push
out
mov
sti
movs
cwde
sbb
ret
fcmovnb
cmp
sbb
fist
xchg
pop
sub
movs
xlat
xor
std
push
push
xor
sbb
or
(bad)
fcomp
sbb
mov
outs
lea
and
mov
out
cmp
jg
inc
dec
xchg
fcomip
mov
adc
push
sub
push
push
xor
mov
clc
mul
cmp
daa
fucomp
mov
rcr
dec
(bad)
pushf
pop
cmp
test
(bad)
cli
pop
js
add
dec
or
push
(bad)
std
retf
push
arpl
xor
addr16
jp
lahf
and
xchg
xor
fcom
lds
jl
pop
sbb
daa
out
xchg
ja
push
or
jle
inc
add
cli
sub
mul
jb
gs
push
and
mov
pop
(bad)
mov
loope
adc
sub
in
(bad)
leave
je
inc
adc
imul
outs
xchg
lahf
das
xchg
mov
cmp
scas
or
test
or
mov
xchg
pop
xchg
cmp
fwait
popf
xchg
or
dec
and
xchg
bound
add
icebp
jbe
add
outs
scas
cmps
sbb
(bad)
ja
out
pop
arpl
mov
xchg
mov
ins
add
mov
cdq
fdiv
lea
inc
add
jle
cdq
pop
mov
dec
into
xchg
jl
fisub
test
jnp
mov
cdq
jmp
(bad)
sbb
pop
mov
add
push
movs
lods
rol
mov
mov
xor
js
xor
xchg
xor
rcl
stc
dec
out
sbb
loope
or
or
add
lahf
push
xchg
push
call
adc
loop
ret
pop
popf
push
jns
jb
enter
sar
ret
sbb
xor
loope
xchg
adc
jmp
repz
add
fnstenv
ror
imul
pop
shr
shl
pop
(bad)
das
popa
sub
test
inc
sar
sbb
aad
imul
jae
inc
jmp
pop
call
std
rol
sub
cmps
ret
inc
ins
sbb
mov
push
(bad)
daa
hlt
pop
and
adc
sbb
stos
out
les
sbb
in
mov
retf
outs
cmp
mov
push
dec
test
fcmove
xchg
dec
pop
cmc
sbb
fmul
xchg
push
pusha
push
mov
pop
sub
push
sbb
dec
dec
aad
or
push
stos
mov
jae
add
pop
nop
mov
fmul
in
loopne
gs
xor
xchg
push
cli
push
pop
mov
(bad)
cvtpi2ps
fidiv
std
adc
jp
out
cmp
cdq
jg
lds
pop
sbb
jg
mov
jge
dec
pop
jl
cmp
mov
rol
xor
xor
push
xchg
sti
dec
mov
adc
lds
push
mov
out
cmps
fild
jmp
movs
jns
mov
fisttp
stos
push
hlt
push
scas
sahf
push
or
jg
lea
pop
push
vmovddup
mov
loop
(bad)
ja
mov
or
aam
repz
mov
js
jmp
cs
pop
push
inc
daa
fwait
push
jae
adc
ds
cmp
add
inc
mov
bound
pop
(bad)
push
xor
clc
js
fbstp
jns
lea
test
adc
push
add
hlt
jle
and
rol
jg
mov
push
mov
sub
ror
sub
arpl
xchg
not
adc
jne
mov
aad
inc
fs
out
inc
leave
bound
clc
or
add
add
adc
idiv
push
mov
jno
jo
push
loop
dec
rcr
sbb
mov
dec
cmp
ins
mov
and
xchg
aam
(bad)
and
mov
scas
scas
ds
pop
or
imul
mov
mov
mov
outs
push
jl
fcmove
loop
fcomi
lods
mov
adc
outs
xchg
or
imul
(bad)
test
(bad)
adc
push
xchg
bnd
imul
(bad)
xor
das
pop
dec
clc
sub
loope
cmp
adc
in
(bad)
cmp
rcl
jo
gs
retf
rcr
ins
mov
(bad)
xchg
cmp
pop
mov
into
push
and
jge
inc
fisttp
push
test
test
xor
push
sbb
scas
arpl
xor
mov
cmp
mov
add
and
dec
and
cmc
push
sub
gs
repnz
loop
mov
mov
xlat
cs
push
sub
push
nop
inc
jge
addr16
pop
movs
mov
sbb
push
cli
js
int
aaa
add
shl
inc
jge
hlt
cwde
push
out
rol
mov
jecxz
sahf
sub
inc
add
fild
or
mov
mov
(bad)
cmp
adc
loope
cmp
out
mov
je
rol
into
mov
jbe
js
(bad)
pop
sti
das
ror
dec
push
sbb
or
xor
push
arpl
pop
jbe
mov
cmps
loope
aas
push
push
push
js
sbb
mov
dec
mov
jl
xor
aas
shl
push
sbb
sub
inc
ja
pop
and
test
pop
out
shr
xchg
hlt
aaa
inc
pop
fwait
add
inc
les
mov
jne
push
add
and
daa
xchg
dec
retf
pop
or
pop
xchg
inc
nop
push
repz
enter
cmps
sbb
xor
ret
push
xor
sub
mov
stos
sub
dec
pusha
imul
les
jl
pop
dec
jle
pop
test
ja
out
in
add
loope
in
outs
lock
fistp
in
leave
push
dec
jp
lds
and
sahf
bound
push
rcl
push
mov
sbb
idiv
mov
xchg
ja
push
cmp
shl
int
pop
fistp
jae
xor
rcr
mov
sub
and
mov
pusha
mov
addr16
cld
mov
ins
dec
iret
cwde
cld
(bad)
dec
int
jo
xchg
jmp
pop
xchg
or
pop
xor
arpl
or
outs
mov
push
jmp
cmp
aam
jb
loope
cmp
inc
pop
mov
movs
pop
hlt
(bad)
mov
out
addr16
jecxz
jmp
push
sbb
fmul
icebp
into
sub
out
into
aad
imul
or
push
jae
outs
adc
mov
push
mov
pop
rcr
sub
outs
jl
aas
sub
xchg
and
loopne
(bad)
les
add
test
pop
(bad)
xor
push
sub
lahf
ret
pop
xchg
mov
sub
movs
cmps
mov
stos
add
mov
mov
or
inc
and
inc
bound
rcr
mov
adc
(bad)
fisttp
push
ins
xchg
cmp
loope
xor
lods
push
inc
xchg
iret
xchg
arpl
adc
cmp
cmp
scas
cli
fistp
fwait
(bad)
pop
mov
xlat
outs
sahf
add
jae
xor
ror
test
and
mov
outs
les
(bad)
sbb
pop
cmp
fs
es
or
inc
push
jbe
jp
sub
icebp
or
pop
adc
cmp
(bad)
mov
cmp
cmps
pop
hlt
and
test
dec
jecxz
mov
cmp
loop
lea
icebp
hlt
stc
cmp
mov
cdq
idiv
out
int
mov
test
fcom
mov
test
into
adc
sar
jmp
cmp
das
mov
call
push
inc
out
mov
jb
loope
addr16
sbb
push
div
adc
test
cmp
pop
pusha
jge
add
sbb
mov
dec
sar
add
push
cli
and
imul
pop
addr16
mov
imul
cmp
sar
hlt
jae
or
pushf
(bad)
pop
lahf
jmp
shl
lods
dec
jecxz
jns
ret
push
xor
(bad)
cdq
jae
les
mov
push
dec
fdiv
test
cdq
dec
add
adc
jp
enter
lea
ret
pop
jmp
jle
mov
add
into
jae
and
inc
test
popa
mov
or
jle
inc
mov
sbb
cmp
xchg
js
adc
into
int
push
sbb
or
test
(bad)
imul
jb
pop
mov
jmp
jge
not
in
(bad)
jns
dec
int
sbb
jae
and
or
mov
scas
mov
jne
cmp
scas
not
aas
fiadd
stos
mov
mov
mov
pop
js
stos
loope
cmp
rcr
mov
or
test
dec
pop
xchg
push
cmps
fst
(bad)
cmp
fist
std
repnz
dec
adc
mov
sub
cs
mov
xor
mov
mov
dec
jo
retf
fidiv
(bad)
mov
rol
fst
jb
add
rcr
mov
pop
mov
jae
or
retf
test
adc
repz
(bad)
adc
xchg
or
pop
cmps
leave
stc
xchg
dec
loop
adc
aad
mov
inc
outs
push
out
pop
sbb
push
movs
loope
arpl
pop
sub
and
sub
std
popa
js
cmp
rol
xor
cmp
xor
sbb
mov
dec
adc
dec
cmp
push
daa
sub
nop
movs
xchg
push
adc
xor
jl
aad
mov
push
cmp
push
push
movs
mov
cmp
cmp
jp
or
push
push
ja
pop
xchg
mov
ds
sbb
dec
out
cs
lds
add
retf
int3
cli
xchg
sti
mov
xchg
xchg
pop
pop
mov
jp
jmp
inc
jp
or
inc
pop
pop
adc
mov
cmp
sbb
sub
adc
inc
fisub
xchg
jl
push
outs
push
mov
ins
cmp
out
or
into
push
rcr
cmp
adc
dec
pop
shl
fisttp
and
sbb
or
enter
jno
shl
add
fidiv
rol
mov
dec
cmc
arpl
push
mov
shr
idiv
imul
fldcw
data16
stos
cwde
add
in
add
inc
and
xor
ss
xchg
mov
jp
inc
push
push
scas
clc
gs
dec
maskmovq
test
lds
aam
aad
xor
xor
inc
cmp
xchg
and
cmp
popf
mov
inc
fisubr
arpl
cs
xor
dec
jmp
inc
pop
repnz
dec
int3
jle
daa
cmps
hlt
imul
jbe
addr16
jp
(bad)
fild
arpl
das
mov
mov
sbb
push
cmp
jl
sub
jmp
xlat
jp
mov
push
xchg
jecxz
rol
fsub
jnp
stos
add
push
clc
sbb
not
add
adc
lds
ret
push
in
adc
xlat
mov
pop
pop
pusha
rol
mov
mov
pop
push
pop
xor
and
fldcw
pusha
push
fnsave
cmps
lea
in
dec
push
sti
cmps
aad
cmps
packsswb
xchg
jmp
(bad)
ret
repnz
add
and
repz
xchg
sbb
in
inc
jp
test
pop
jbe
sub
lahf
pushf
jmp
js
pop
mov
add
inc
add
cld
movs
sar
pop
add
retf
sub
out
jmp
loopne
in
cmp
and
(bad)
cmc
sti
and
and
mov
and
sbb
(bad)
(bad)
dec
add
aaa
stos
sbb
clc
push
and
cs
mov
and
xor
sbb
ror
mov
sbb
popf
inc
sahf
mov
jl
sub
mov
fsub
mov
sbb
ffree
adc
sahf
mov
mov
test
and
cmp
mov
int3
out
mov
mov
add
pop
lahf
sbb
and
mov
lahf
call
into
xor
mov
mov
xor
dec
push
wbinvd
mov
or
lds
mov
dec
or
repnz
sar
stos
(bad)
in
push
adc
outs
sub
mov
pusha
lahf
lods
mov
pushf
(bad)
mov
mov
(bad)
and
push
sub
add
mov
pop
sub
sahf
pop
fsubr
sbb
into
sub
pop
xchg
loop
data16
enter
daa
arpl
sub
mov
inc
das
movs
pusha
mov
int
ret
or
(bad)
xor
(bad)
sbb
dec
sub
inc
imul
or
popa
xchg
and
and
jge
test
sub
out
outs
fsubr
dec
add
neg
pop
add
fmul
test
add
mov
xchg
xor
pushf
mov
lods
sbb
pop
(bad)
leave
mov
lea
jae
(bad)
call
add
push
mov
pop
mov
jle
data16
jge
and
push
xchg
in
xchg
push
pop
sbb
pop
fbld
adc
add
add
jnp
pop
or
jns
stos
movs
adc
mov
add
imul
mov
xchg
repnz
push
mov
nop
fcmove
or
and
aaa
jno
sti
push
mov
push
sub
and
adc
pop
xchg
xchg
adc
pop
stc
xor
xchg
mov
inc
leave
js
lods
jns
cmps
dec
leave
nop
pusha
cmps
pop
or
mov
fcmovb
xchg
mov
inc
scas
mov
sahf
sahf
gs
push
push
pop
ins
popf
mov
xor
jbe
dec
add
dec
adc
enter
mov
mov
lods
pop
enter
sbb
leave
das
pop
test
sub
push
adc
inc
xchg
inc
arpl
in
add
xor
xchg
ins
add
xor
sbb
cmps
enter
call
(bad)
rcr
fwait
add
xor
jb
fistp
cmc
mov
std
sub
retf
cdq
jle
mov
xor
enter
or
int
and
push
pop
test
daa
imul
jp
and
jp
pop
aaa
xchg
mov
ins
sbb
lahf
sub
shl
xchg
pop
aas
jmp
bound
loopne
sub
pop
ja
pop
jp
bound
jnp
jmp
cmp
jmp
lds
xor
jle
iret
mov
jmp
push
jg
bound
fcmovb
inc
dec
sbb
repnz
aam
push
xchg
sub
pop
sbb
push
mov
jae
xor
imul
push
add
in
mov
inc
mov
ins
fimul
retf
retf
fistp
mov
stc
jns
rcl
sbb
addr16
jno
ss
out
mov
test
mov
mov
inc
sub
loop
lods
sub
mov
dec
mov
mov
cmc
pop
jbe
mov
pop
ret
sub
imul
lahf
cs
bnd
mov
pop
popa
stos
xor
repnz
sti
jl
or
pop
aaa
cdq
sub
fist
sub
and
mov
sbb
pop
movs
dec
cmp
gs
fidivr
popa
xor
retf
sti
fs
xchg
fist
sahf
xor
fsub
sbb
ret
cmps
test
call
mov
and
gs
out
inc
sti
das
push
in
adc
push
out
shl
mov
push
jnp
jmp
jge
sub
outs
cmp
jg
aaa
pop
mov
ins
clc
es
mul
adc
gs
loop
int3
(bad)
shr
mov
(bad)
mov
inc
adc
push
mov
mov
pop
fidivr
(bad)
fist
pushf
movs
scas
jo
mov
cmp
and
call
mov
pshufw
ret
push
(bad)
xchg
cmp
popf
pop
cli
cmps
mov
inc
xlat
mov
fisttp
jg
jae
xor
outs
cmps
ds
pop
mov
xor
mov
hlt
retf
les
sbb
fucom
xor
pop
or
add
ja
sahf
push
dec
in
adc
repnz
loopne
loop
scas
xor
sbb
ja
xor
mov
dec
(bad)
movs
jae
(bad)
mov
and
push
pop
std
cs
cs
pop
ins
sbb
jl
push
pop
(bad)
pop
xchg
xchg
sub
not
fwait
mov
inc
xor
push
push
jp
aad
cmc
sbb
cmp
cmp
sub
test
iret
das
les
mov
jbe
(bad)
dec
xchg
cmp
sub
mov
stos
call
or
pop
sar
sbb
cmp
and
and
jns
adc
mov
push
and
fs
daa
push
cmp
or
sbb
outs
movs
inc
sub
gs
add
dec
cmps
pop
lods
leave
mov
inc
pop
call
sbb
loopne
leave
dec
xchg
ficomp
into
mov
mov
add
in
sub
outs
inc
lds
sbb
mov
adc
pop
cmp
cld
outs
dec
inc
cmps
idiv
cmps
cmp
xchg
cdq
(bad)
push
outs
test
mov
ficomp
cmp
inc
mov
or
xchg
pop
aad
mov
ins
fwait
mov
movs
xchg
mov
mov
mov
faddp
xor
enter
jnp
adc
test
or
mov
jmp
mov
imul
cmps
out
xlat
dec
stos
push
fcmovne
fs
hlt
jae
and
jmp
jle
adc
cmp
test
jmp
dec
pop
ins
push
lea
and
in
std
xor
mov
push
sbb
sbb
loopne
dec
gs
sub
idiv
and
clc
ds
jge
push
or
add
sub
lds
xor
call
sub
fsubr
bound
pop
sbb
mov
scas
inc
aas
adc
int
cmc
fcom
inc
adc
add
out
jp
sbb
mov
fs
dec
xor
and
push
cwde
adc
lock
lods
mov
(bad)
xchg
fcom
adc
pop
jae
je
cmovno
and
fiadd
pushf
or
lock
fdiv
jb
jl
push
inc
mov
mov
jne
mov
inc
mov
push
lods
imul
xlat
mov
mov
repz
mov
jno
add
shl
test
cmp
pop
stos
add
dec
pop
or
in
je
push
lea
mov
push
jno
jg
pop
jb
mov
sub
pop
fs
add
call
je
and
es
je
rol
jae
sbb
in
mov
mov
jle
jecxz
inc
gs
sub
add
aad
cmp
retf
out
out
cmps
js
jbe
test
adc
mov
idiv
out
push
aaa
xchg
out
add
xchg
pop
repz
outs
loopne
and
arpl
lahf
push
loope
lahf
cmc
ror
jmp
dec
ja
adc
sahf
inc
(bad)
jbe
sbb
popa
repz
outs
cs
and
jmp
rol
push
push
retf
sub
xor
or
xor
cmc
xor
mov
pop
sub
mov
push
push
nop
sti
(bad)
aaa
sbb
pop
inc
xchg
and
call
fdiv
sub
je
adc
fwait
jge
aas
call
retf
mov
int
mov
(bad)
scas
xor
loope
(bad)
call
daa
pushf
inc
movs
shr
(bad)
not
mov
or
rcr
ins
push
mov
sti
dec
cmp
and
arpl
push
and
push
rcl
sbb
xlat
or
daa
mov
(bad)
into
adc
call
jb
xor
mov
xchg
pop
into
sar
in
rcr
sahf
bound
jo
iret
cmps
push
(bad)
push
rol
imul
idiv
mov
mov
bound
in
push
push
jp
mov
push
jb
loope
(bad)
pop
mov
adc
and
cmp
add
sbb
dec
stc
jg
xor
(bad)
in
jle
aam
mov
inc
(bad)
xlat
xchg
mov
cmp
pop
jle
jmp
dec
das
sbb
cwde
fistp
pop
outs
ret
dec
push
xchg
adc
pop
iret
push
jne
and
inc
cmp
lods
(bad)
adc
int
inc
aam
es
inc
cmp
mov
mov
enter
dec
imul
ss
ret
scas
inc
movs
icebp
add
lods
movs
out
popf
ret
sbb
or
mov
jnp
jg
jmp
fnstsw
or
mov
pop
cmps
call
or
push
and
cwde
xlat
shl
mov
fwait
repz
cmps
inc
in
cmp
jecxz
retf
daa
push
outs
mul
gs
sbb
data16
mov
jns
ror
cmp
nop
(bad)
in
cs
inc
lods
cmp
inc
mov
pop
rcr
or
cmp
(bad)
and
in
mov
clc
xchg
inc
nop
mov
je
add
popf
mov
outs
xchg
and
dec
imul
(bad)
mov
push
ret
sbb
and
out
stos
dec
pop
inc
clc
in
lods
jne
sahf
aaa
mov
rcl
sbb
lods
mov
adc
ficomp
xchg
shl
push
sub
mov
sbb
mov
fistp
outs
mov
mov
aad
lods
mov
add
in
(bad)
sbb
in
inc
dec
and
add
add
sub
test
mov
into
cmps
push
cmp
mov
or
mov
pop
imul
loopne
cdq
rcl
sub
pop
shl
shl
or
xor
int3
pop
pop
lds
in
push
mov
and
out
xchg
or
or
push
ins
dec
inc
test
or
lods
repz
and
mov
test
sbb
into
in
mov
jge
test
pop
jle
popf
push
mov
in
(bad)
cmps
jp
and
and
test
hlt
xchg
out
push
mov
and
or
pop
mov
ret
sub
adc
ss
mov
push
popf
pop
repnz
out
stos
sti
movs
(bad)
mov
cwde
fmul
rcl
mov
push
adc
jmp
mov
aad
enter
mov
int3
adc
aad
fisubr
xchg
push
fcmovb
xchg
retf
fstp
repnz
sbb
call
or
and
push
mov
lds
sub
int3
inc
push
cmp
mov
add
jmp
stc
jo
das
cmp
and
push
lea
mov
in
mov
je
sahf
je
call
in
sbb
dec
mov
retf
jns
movs
je
fcomi
in
lds
mov
retf
add
pop
movs
fsubr
cmp
push
movs
add
test
jmp
push
pop
(bad)
inc
adc
in
adc
ja
sub
dec
mov
sub
ror
inc
mul
mov
xchg
test
xchg
cmps
or
mov
mov
je
ds
add
retf
adc
jns
cmp
fs
dec
(bad)
add
data16
leave
ss
and
dec
jbe
popa
dec
rcl
dec
retf
xor
fs
ins
out
ins
jge
mov
pop
test
jl
lods
xor
cmps
pop
shl
mov
xor
ret
pop
inc
jl
sub
and
pop
das
cmp
(bad)
nop
dec
sbb
cmp
test
sti
mov
sti
cwde
sbb
pop
gs
stc
je
movs
xor
movs
aas
sti
pop
jl
mov
popa
icebp
stos
jl
push
pop
out
push
push
add
sub
imul
stc
shl
xlat
arpl
loopne
std
int3
das
int
(bad)
push
jo
test
push
inc
and
rcl
xchg
and
xor
shr
loope
pushf
mov
retf
ret
hlt
pop
das
out
scas
fdivrp
stc
ror
inc
inc
pop
in
xchg
xchg
jbe
ror
sub
adc
imul
gs
pop
lods
popa
arpl
cdq
adc
sub
mov
test
xchg
clc
or
jns
loopne
cld
(bad)
push
test
movs
push
pop
jle
jae
sub
cmps
and
xor
push
mov
sti
sub
or
fucomp
aam
mov
or
jecxz
aad
(bad)
xchg
nop
and
cdq
(bad)
and
and
jecxz
push
lds
jb
(bad)
sub
ds
jae
les
in
adc
or
xchg
sti
call
jb
aad
pop
or
adc
mov
jmp
dec
scas
fistp
xchg
push
fxch
int3
push
pop
mov
movs
popa
push
cmp
xor
aaa
hlt
pop
push
enter
aad
inc
jmp
inc
fsubr
aam
push
mov
xchg
(bad)
stos
cmp
add
into
mov
popf
mov
dec
test
and
xchg
mov
out
mov
mov
xor
dec
jle
mov
(bad)
pusha
imul
jae
adc
sub
cmp
jb
fstp
fldenv
and
outs
aas
jp
jle
mov
sub
cwde
ja
xchg
fistp
sub
push
lds
retf
fistp
pop
or
gs
frstor
mov
mov
sub
add
mov
push
out
in
retf
out
call
pusha
imul
lods
pop
sbb
loop
mov
mov
fcomp
xchg
dec
sahf
and
lea
cmps
cwde
inc
jecxz
lods
cmp
jp
mov
out
retf
push
or
icebp
dec
fcmove
lahf
mov
xchg
sbb
inc
pusha
mov
inc
push
pushf
jbe
cmps
test
sub
lods
and
jnp
bnd
xor
sub
sbb
not
jmp
loopne
and
push
or
cmps
dec
lock
test
sbb
fadd
mov
cmps
inc
xchg
loopne
cmps
or
(bad)
addr16
jbe
aas
retf
sub
call
mov
mov
pusha
cs
fistp
mov
shr
mov
dec
jmp
jo
pop
pop
sbb
arpl
int3
push
aam
push
out
sbb
scas
(bad)
mov
ror
retf
adc
mov
mov
lods
xchg
lahf
dec
dec
fwait
cwde
jmp
rcr
cld
sub
test
dec
mov
call
mov
in
mov
pop
push
xchg
out
popa
and
pop
jo
xlat
jg
inc
xchg
(bad)
fisttp
clc
cdq
xchg
adc
stos
or
sti
ds
ja
sar
push
mov
mov
inc
push
mov
jp
push
in
or
add
adc
or
in
mov
jno
add
sbb
pop
sub
push
xor
lahf
fsub
loopne
aaa
shr
sub
mov
push
or
fstp
rcl
jbe
xlat
out
cmp
add
sbb
popf
push
js
inc
rcl
inc
stos
inc
hlt
test
pop
mov
inc
out
and
and
inc
scas
cmp
test
jbe
jge
retf
ret
fiadd
(bad)
adc
pop
sti
xor
dec
cwde
xor
loop
ret
stos
inc
aaa
xchg
loop
mov
sub
mov
aas
imul
std
xor
stos
add
daa
pop
cmp
jmp
push
push
jecxz
dec
mov
adc
fcom
mov
mov
lds
sahf
inc
ja
cmp
adc
(bad)
das
or
(bad)
mov
inc
mov
mov
or
inc
pushf
mov
pop
(bad)
out
aad
movs
in
pushf
int
pop
mov
cmp
jns
mov
adc
mov
inc
adc
std
push
push
sbb
mov
cmc
jle
aas
ins
xor
pop
das
pop
gs
cs
sub
push
push
pop
outs
xchg
fwait
push
sbb
daa
lea
(bad)
mov
jns
mov
popa
add
sbb
dec
lods
into
push
xchg
loop
inc
sub
pop
cld
jecxz
lds
out
jl
imul
std
inc
rcl
jl
ret
outs
lods
push
dec
das
jg
inc
adc
jp
dec
xchg
inc
xor
mov
inc
adc
adc
mov
repnz
cmp
test
add
cmps
dec
jmp
cmp
push
fcom
(bad)
or
popf
mov
push
and
cmp
pmulhw
sahf
or
mov
dec
inc
mov
mov
(bad)
or
add
movs
imul
ds
stos
pop
(bad)
xchg
pop
imul
jg
outs
and
push
clc
fs
pop
ret
xchg
sbb
call
mov
mov
sub
out
push
jo
sub
sub
and
out
mov
push
mov
popa
(bad)
dec
mov
jp
sub
pop
jle
xor
adc
popf
mov
leave
div
sbb
out
jo
mov
cmp
shl
js
adc
push
mov
inc
sbb
xchg
adc
(bad)
push
dec
icebp
lea
(bad)
push
mov
das
mov
cli
add
xchg
sahf
push
mov
push
leave
push
adc
sti
fdiv
hlt
mov
jge
pop
fdivr
inc
fisttp
pop
loope
pop
cmp
add
je
pushf
xor
sbb
ds
mov
(bad)
xor
cli
mov
push
mov
jg
pop
stos
cmp
dec
repz
mov
(bad)
jo
outs
das
mov
cwde
fisubr
loop
arpl
retf
das
shl
cmp
mov
out
sysexit
sub
pop
mov
push
mov
lds
test
mov
ja
jle
push
mov
retf
cmp
mov
adc
adc
shr
hlt
mov
xor
icebp
leave
js
mov
out
popa
retf
js
pop
jp
repz
mov
jae
outs
fldcw
and
mov
into
outs
pop
mov
push
mov
in
inc
sti
sbb
adc
ficomp
sbb
xor
das
dec
or
cwde
(bad)
cmp
add
xchg
js
add
jnp
add
loopne
addr16
xlat
mov
fld
movs
push
jl
mov
call
add
int3
aaa
jno
mov
shl
int3
in
lahf
es
push
cmp
mov
test
cmps
fsubr
imul
(bad)
sar
cmp
nop
mov
test
inc
cmp
fnstenv
and
inc
pop
ss
or
or
inc
inc
push
sub
cmp
fisttp
leave
out
add
mov
fsubr
jecxz
pop
int
pop
add
add
inc
mov
add
and
dec
lock
xchg
jmp
movs
xchg
inc
cmps
xor
imul
cmp
(bad)
push
aam
sbb
jne
sub
fst
inc
adc
test
packuswb
aad
sub
xor
cmp
dec
and
xchg
adc
mov
dec
(bad)
jbe
aas
out
mov
test
popa
pop
xor
sbb
sbb
and
(bad)
mov
int3
jo
lods
fimul
add
mov
mov
(bad)
retf
xlat
ds
into
rcr
inc
or
or
xor
in
icebp
push
mov
aaa
int3
repnz
ins
retf
xchg
retf
shl
sub
sub
out
imul
jb
std
bound
sub
push
fist
dec
ficomp
call
cmp
scas
mov
sbb
aam
mov
in
pop
or
mov
out
scas
(bad)
int3
cli
outs
or
mov
movs
cmps
xor
ror
ins
retf
imul
or
xor
sbb
jb
div
inc
stc
and
or
mov
pop
and
loopne
xchg
bnd
mov
xlat
test
push
add
mov
call
out
adc
cmc
add
outs
xchg
fwait
xor
fistp
int3
lahf
dec
mov
outs
sbb
neg
jne
pop
(bad)
adc
pusha
mov
ja
jno
jge
cmp
outs
scas
bound
iret
add
pop
out
mov
jbe
xchg
data16
mov
sub
or
mov
adc
mov
popa
(bad)
pop
and
ret
mov
es
mov
shl
mov
jo
mov
js
bound
data16
scas
pop
fidiv
push
and
cmp
xchg
add
jno
sbb
test
or
mov
mov
(bad)
aam
sti
in
jbe
or
dec
nop
inc
fcom
pop
pusha
pop
loopne
or
cmp
(bad)
xchg
mov
jmp
fwait
cld
stos
cmps
dec
jp
push
dec
push
js
cmps
dec
push
call
jp
leave
sub
xor
mov
mov
fdivrp
out
je
and
cmc
ret
jb
add
pop
outs
repnz
mov
mov
mov
and
cmp
shr
inc
xchg
into
xor
push
push
test
jno
xchg
loopne
inc
icebp
das
cli
loope
shl
adc
in
push
daa
fisub
or
mov
lds
fcmovu
cmp
int3
pop
jno
inc
pop
ins
lea
lods
inc
es
ror
outs
mov
and
cmp
cs
sub
cmp
pop
sub
jb
retf
aas
out
iret
adc
ficomp
aad
sahf
lods
fst
fs
cmp
cmp
dec
jb
pushf
push
nop
jmp
jo
cmps
add
test
add
xor
push
add
mov
fimul
xchg
sub
mov
fcomi
jle
pop
push
inc
sub
fs
xor
push
dec
push
mov
push
cmps
test
setle
(bad)
rcr
pop
jns
jmp
cld
mov
jae
xchg
adc
imul
test
aad
bound
push
jmp
call
scas
adc
idiv
cmp
lock
xor
ins
jl
gs
jge
aad
mov
lods
jle
jns
out
mov
mov
pop
fcmovu
fbld
pop
ins
stos
icebp
(bad)
xor
cmp
add
arpl
add
sbb
pop
cmc
jnp
pop
and
shr
mov
scas
rol
pop
je
dec
and
mov
jle
fxch
adc
ret
addr16
xor
mov
clc
and
jno
mov
mov
das
pop
aas
mov
push
push
lahf
pop
jle
js
int
rcr
mov
call
add
loopne
rol
les
dec
(bad)
cli
repnz
dec
fsub
clc
fcomp
xor
dec
jae
sti
inc
xor
dec
bound
mov
dec
imul
jle
xlat
pop
xchg
jb
inc
push
cs
dec
pop
ss
or
push
xor
imul
jmp
lods
and
xchg
iret
push
xchg
jnp
push
and
cs
push
sbb
cmp
sub
(bad)
push
mov
dec
and
pop
or
(bad)
mov
mov
dec
xchg
daa
xchg
test
xchg
mov
(bad)
call
adc
inc
mov
and
cmp
sbb
out
sar
out
(bad)
mov
jae
aas
adc
sub
ins
xlat
repnz
loope
sbb
mov
hlt
cli
aas
outs
sub
and
cmp
sbb
fucomp
mov
(bad)
stc
inc
ret
je
xor
mov
jo
sub
icebp
gs
fwait
and
adc
jmp
xchg
mov
aas
aas
rcl
jb
jmp
push
adc
mov
push
mov
test
les
pop
push
aam
les
sbb
mov
dec
pop
cli
stos
pop
out
adc
(bad)
imul
fstp
es
sbb
mov
neg
mov
lods
lods
(bad)
and
imul
inc
ins
(bad)
xor
push
and
pop
sbb
inc
push
jmp
push
and
sbb
test
ficom
add
int3
jg
xchg
xor
je
out
sti
rcl
daa
add
jno
movs
push
dec
fstp
mov
outs
mov
dec
push
js
push
pop
fwait
ror
push
pop
jge
or
add
mov
repz
dec
mov
cmps
hlt
cmp
pusha
mov
jbe
add
mov
mov
ret
inc
hlt
lahf
lahf
stc
leave
rol
cmps
add
not
push
retf
adc
shl
pop
jbe
adc
and
xchg
inc
adc
xor
(bad)
fistp
or
in
ins
jl
sbb
cmp
add
jmp
fwait
pop
lahf
xchg
fcmovnb
gs
aam
shl
mov
mov
pop
cmps
jne
xchg
pop
jge
popf
dec
xchg
imul
popa
daa
in
outs
(bad)
jmp
dec
retf
jp
sahf
mov
loope
push
aas
dec
(bad)
jmp
mov
mul
ja
push
inc
loopne
in
shl
jae
pop
ins
in
xchg
rcl
mov
call
(bad)
push
adc
std
dec
pop
or
mov
inc
jle
dec
clc
xor
icebp
and
fisub
mov
test
call
adc
push
ds
push
mov
mov
push
lds
cwde
pusha
inc
xchg
mov
clc
push
cdq
xchg
sbb
cdq
mov
mov
jge
cmp
mov
jbe
cli
(bad)
hlt
add
je
sub
cdq
add
hlt
adc
sbb
or
pop
pop
jp
or
popf
(bad)
xlat
adc
adc
xor
add
mov
loopne
mov
leave
and
aam
or
mov
adc
xchg
jns
sbb
(bad)
fisub
rol
xor
iret
mov
mov
push
adc
jle
jns
or
mov
retf
xor
cmp
rol
jae
mov
mov
sbb
inc
into
cmp
mul
jge
mov
jl
sbb
jge
dec
mov
add
adc
scas
xchg
sahf
pop
test
mov
scas
cwde
jnp
jne
inc
jle
mov
or
int3
cmps
loopne
fs
arpl
mov
es
sbb
mov
fild
outs
push
cmc
in
or
fcmovnu
push
mov
and
fadd
push
mov
sbb
or
loopne
aad
enter
inc
sub
cwde
mov
pushf
mov
cmp
jae
and
scas
ins
mov
dec
dec
adc
cmp
xor
aam
inc
mov
pop
loope
adc
dec
xor
ror
daa
cli
pop
jecxz
mov
clc
add
in
pop
out
aad
pop
cmc
imul
sbb
cld
or
int3
sub
rcl
sbb
mov
pop
mov
lea
dec
(bad)
dec
sbb
aas
loop
test
rcr
jmp
or
dec
sbb
das
mov
jnp
jle
das
mov
mov
retf
and
dec
aas
mov
xor
pop
les
jb
cmp
jne
sub
adc
(bad)
loopne
addr16
sub
out
stos
sti
jl
pop
fadd
gs
mov
ret
in
sub
and
jne
mov
test
fwait
mov
sbb
ds
fidiv
and
sub
aas
or
and
xlat
cmp
pop
sahf
sets
fsubr
test
test
sbb
or
(bad)
cmps
xchg
mov
push
fmulp
ror
dec
fldcw
mov
xchg
sub
push
(bad)
inc
arpl
or
bound
enter
sub
jae
inc
inc
pop
adc
ret
popa
fwait
imul
pop
xchg
fist
in
adc
or
stos
fmul
and
mov
repnz
stc
jmp
les
fld
imul
mov
imul
xchg
(bad)
jecxz
pop
icebp
push
adc
bnd
sbb
xchg
xchg
mov
nop
mov
sub
outs
test
mov
mov
jmp
mov
mov
movs
retf
adc
jmp
leave
cmp
(bad)
ret
lods
sbb
xchg
retf
stc
lods
cmc
loopne
jnp
push
aam
call
ins
aaa
and
std
inc
sbb
in
outs
push
mov
sbb
(bad)
in
and
sub
ins
ret
push
daa
mov
xchg
sub
repnz
or
icebp
or
pop
jle
(bad)
xchg
cmp
cmp
call
movs
sub
dec
add
jmp
nop
jbe
jns
retf
sub
jo
push
(bad)
adc
pop
ins
jecxz
ja
ins
fist
retf
pusha
add
(bad)
(bad)
sub
aaa
cs
daa
xchg
sbb
mov
push
pop
out
xchg
pushf
push
inc
push
fcmovbe
aaa
jb
cmp
adc
repz
repnz
jle
int
xchg
shl
sub
adc
push
pop
int3
sar
mov
ds
(bad)
add
inc
clc
lea
pop
mov
in
outs
stos
mov
dec
sbb
sti
sub
and
mov
jp
pop
cmp
fstp
mov
iret
jl
add
loopne
addr16
inc
dec
add
lea
shl
int
mov
test
stos
dec
push
not
mov
bound
and
mov
jmp
imul
mov
or
scas
movs
cmc
adc
in
out
push
add
inc
adc
je
xchg
iret
cmp
loop
pop
mov
nop
push
js
cmps
popf
sub
iret
movs
pop
xchg
pop
push
jb
add
or
push
or
adc
and
jmp
jle
jg
inc
xor
sub
mov
fwait
jmp
fdiv
imul
xchg
fld
pop
stc
xchg
push
fld
lea
xchg
subps
dec
lock
push
jp
pop
add
loope
mov
xchg
movs
adc
push
dec
mov
dec
xor
retf
push
adc
mov
mov
imul
push
push
les
(bad)
addr16
out
std
(bad)
sub
and
aas
sub
or
test
inc
mov
loop
data16
dec
pop
shl
xchg
test
xchg
call
mov
scas
test
and
dec
cmps
fld
and
dec
pop
ret
dec
lahf
or
test
ja
cdq
ror
retf
push
lods
outs
mov
jge
(bad)
push
mov
(bad)
cmps
fsub
out
rcr
jae
and
xchg
test
sbb
add
in
test
test
xor
cmp
lahf
js
sub
push
adc
test
inc
(bad)
or
inc
sbb
mov
shl
mov
push
outs
push
retf
mov
in
lahf
mov
add
repnz
test
imul
into
mov
push
sahf
add
sar
inc
sub
xor
add
mov
dec
and
dec
loope
adc
or
(bad)
xor
pop
dec
and
mov
pushf
pop
int3
jge
push
setnp
push
test
add
mov
sbb
mov
aad
inc
lea
out
rcr
leave
outs
iret
mov
adc
mov
gs
cmp
or
adc
imul
scas
daa
lods
xchg
cmps
jp
int3
mov
ja
mov
hlt
sub
dec
cmc
inc
adc
or
and
out
jmp
fadd
out
jae
xchg
mov
cwde
or
mov
loopne
repnz
outs
or
out
ja
out
int
icebp
stos
jb
(bad)
sti
imul
int3
lea
push
fdivr
pushf
and
fld
mov
mov
inc
retf
jl
hlt
push
mov
inc
(bad)
daa
leave
fisubr
stos
mov
sub
or
movs
xor
or
loop
dec
adc
push
and
mov
movs
daa
push
icebp
scas
or
adc
in
add
out
sub
xchg
adc
inc
stc
xchg
and
dec
in
loopne
add
mov
lahf
add
cs
ret
aaa
push
cmp
push
cs
sub
jmp
cmp
jle
(bad)
call
iret
fldenv
cwde
mov
rcr
dec
in
inc
mov
cli
push
cmps
jg
xchg
xor
push
test
xchg
(bad)
ror
leave
movs
mov
inc
and
fsubrp
sbb
push
mov
mov
ret
lea
ret
mov
sbb
xlat
pushf
sti
int
dec
pop
pushf
repnz
jp
test
mov
fist
out
pushf
clc
fcom
jo
movs
jge
inc
sub
mov
mov
and
popf
pop
ds
pop
inc
cmp
pop
cs
in
and
sub
inc
jecxz
xchg
lahf
cmps
cmp
or
mov
push
mov
mov
sahf
xchg
mov
test
push
div
stos
ret
sahf
mov
aaa
lahf
push
jmp
clc
test
in
jp
jl
mov
in
push
adc
imul
jnp
leave
adc
stos
xor
mov
(bad)
cwde
xchg
dec
adc
pop
push
pop
out
pushf
loop
jg
push
mov
and
inc
cmc
xchg
inc
sub
lahf
or
pop
icebp
das
xor
hlt
jg
xchg
xchg
daa
das
retf
repnz
cld
mov
push
into
lds
(bad)
xchg
loop
je
jg
arpl
xor
in
(bad)
mov
idiv
sbb
cdq
cmps
xchg
lahf
jns
jbe
dec
mov
or
out
gs
ror
pop
cmps
test
movs
into
jno
adc
lock
imul
ret
mov
pop
jle
jp
mov
fsub
jmp
aad
icebp
sbb
pop
or
sbb
inc
fs
retf
push
(bad)
sbb
sbb
or
cmps
add
mov
popa
sub
loopne
cli
push
outs
std
and
push
or
popa
movs
movs
(bad)
pusha
fistp
hlt
repnz
loope
mov
out
lea
jle
xor
sub
jmp
sbb
inc
push
outs
xchg
cmps
call
sub
out
and
icebp
hlt
out
in
mov
(bad)
or
cmp
xor
(bad)
adc
inc
(bad)
cmp
shl
inc
loop
fs
push
stos
and
fidiv
js
imul
jne
cmp
fld
ins
xchg
dec
fistp
pop
xor
scas
sub
sbb
in
mov
repnz
stos
pop
xchg
sbb
or
scas
jl
push
(bad)
ds
mov
(bad)
bound
push
fild
or
in
popf
cwde
mov
sar
or
mov
sub
inc
jmp
and
test
movs
pop
dec
fsub
movs
fdiv
add
mov
pop
xchg
je
sub
cwde
stos
cmp
fmul
retf
and
shl
xchg
aas
xor
nop
in
lock
lahf
fstp
arpl
in
or
xor
jo
push
imul
adc
aas
mov
nop
les
scas
js
cmp
pop
outs
adc
fcom
data16
mov
cs
mov
mov
push
mov
call
retf
mov
aaa
out
mov
cli
xor
dec
lods
out
jo
or
out
call
jo
icebp
jmp
lods
call
xchg
push
pop
lahf
or
data16
in
jo
ins
call
adc
pop
mov
push
xchg
mov
adc
dec
fdivr
or
loop
cdq
jp
stos
loope
fwait
mov
cmp
mov
or
ins
sti
outs
cmp
cmp
push
cmp
scas
repz
sbb
xor
lahf
xor
scas
jo
sbb
fbld
jae
jge
cmps
inc
dec
lods
mov
pusha
fsub
lahf
outs
add
retf
sub
clc
cmp
push
and
or
push
cwde
int
(bad)
mov
arpl
cmc
mov
addr16
dec
fld
mov
add
jns
add
mov
inc
pop
cmp
mov
arpl
push
jmp
sub
mov
jg
or
push
(bad)
jmp
xor
and
mov
enter
imul
shl
test
mul
out
sub
jns
inc
sbb
les
cmp
cmps
aaa
in
stc
pop
mov
sbb
and
jbe
xor
mov
adc
sub
aaa
pop
push
nop
mov
mov
xor
mov
cmps
sti
imul
cmp
out
je
fmul
retf
cmp
ja
fwait
dec
jge
hlt
jp
call
adc
cmp
jno
dec
lock
inc
jmp
dec
and
aam
inc
sbb
out
shr
pop
mov
lds
mov
inc
sub
or
xor
sbb
mov
dec
mov
lds
push
adc
sbb
sbb
jns
sub
push
dec
pop
and
dec
std
enter
sub
jae
inc
dec
std
xchg
cmps
aam
push
std
mov
mov
mov
inc
dec
pop
fs
ja
push
sub
gs
hlt
out
and
cmp
add
fidivr
ja
jns
scas
and
jl
lods
jns
push
imul
fndisi(8087
jp
dec
xchg
inc
stc
enter
mov
mov
adc
inc
std
arpl
loopne
sbb
clc
cmp
les
push
mov
and
pop
neg
add
ret
and
fisttp
sub
push
lods
das
stc
fsubr
adc
jge
dec
inc
xchg
dec
and
hlt
lock
jle
call
push
and
clc
jmp
fiadd
push
jecxz
fldl2t
bound
jle
inc
lods
mov
sbb
mov
add
mov
mov
(bad)
jae
push
push
repz
ret
sbb
mov
jne
cld
xor
adc
push
pop
repnz
cmp
mov
das
outs
xor
rcl
pushf
clc
jo
(bad)
jp
dec
lea
jmp
inc
adc
clc
sub
mov
xchg
dec
cmps
dec
mov
popa
(bad)
fnsave
dec
dec
sub
inc
add
or
out
js
call
dec
(bad)
jns
test
sub
jp
lods
out
cmp
fsub
inc
xchg
(bad)
loopne
inc
ret
inc
fsubrp
dec
push
fcom
(bad)
and
and
out
jbe
pop
mov
add
dec
mov
xchg
inc
sbb
(bad)
push
fld
mov
dec
clc
or
gs
push
(bad)
pusha
cmp
mov
xchg
mov
dec
sahf
jnp
out
pop
jecxz
inc
aam
sti
out
in
fstp
mov
adc
adc
out
pop
test
into
sbb
sahf
sbb
or
(bad)
dec
inc
loope
popa
out
or
les
jp
dec
movs
jae
add
push
jbe
xchg
aaa
mov
or
call
xchg
pop
xlat
jns
jne
mov
rcr
data16
fnstsw
cli
addr16
inc
jge
js
std
out
leave
and
push
xor
cmp
aam
push
(bad)
ror
mov
inc
inc
inc
mov
lods
and
cmp
fldenv
jmp
test
jnp
pop
mov
stos
lods
cmp
add
cs
dec
add
ret
retf
adc
lahf
and
das
add
mov
cmp
js
mov
dec
cmp
(bad)
ds
sbb
cld
repz
in
test
dec
and
mov
push
dec
jle
shr
(bad)
cmp
cmc
xor
aas
push
push
adc
iret
mov
stc
pop
movs
movs
xchg
xchg
ins
add
iret
les
das
mov
pop
enter
dec
add
js
and
pop
cmc
out
pop
ins
test
imul
sahf
int
cmp
mov
push
js
dec
repnz
in
mov
fstp
mov
sub
(bad)
jb
lods
mov
loop
mov
inc
das
dec
repnz
push
ror
inc
loope
cmp
icebp
xor
inc
in
retf
je
pop
loopne
imul
jmp
add
in
xor
and
mov
mov
fwait
lods
push
sub
mov
inc
and
jae
lahf
int
loopne
in
shr
pop
mov
test
xor
jg
mov
fsubr
in
addr16
sbb
les
out
mov
int
fistp
sti
in
cmp
add
call
jl
push
xchg
dec
aad
fcmovnu
sahf
lahf
adc
pop
sub
mov
inc
jle
cmp
mov
mov
mov
movnti
xrelease
ins
call
pop
test
dec
pusha
add
dec
push
scas
fisttp
dec
sbb
test
imul
mov
push
pop
push
ss
movs
repnz
mov
add
shl
push
inc
std
inc
dec
out
push
sub
cli
cmc
xor
and
outs
mov
xor
mul
(bad)
xor
out
jae
stc
es
ret
sahf
scas
gs
mov
mov
jl
cmp
xor
xor
push
imul
mov
mov
mov
data16
out
mov
xor
mov
mov
pop
lea
sub
int
mov
movs
xor
inc
mov
push
in
(bad)
movs
xchg
and
or
jnp
jecxz
xchg
test
arpl
ret
inc
inc
stc
or
test
xchg
and
cld
clc
pop
sti
rcl
xchg
inc
mov
mov
inc
push
lds
mov
fcmovnbe
std
sub
fld
ins
in
jmp
jmp
fsubr
mov
call
test
xor
mov
jns
cmp
imul
retf
adc
or
mov
and
loop
push
inc
mov
push
stos
(bad)
out
in
or
and
or
scas
retf
mov
or
mov
sub
jmp
stc
mov
jnp
sbb
movs
xor
data16
inc
das
into
cmp
mov
pop
and
jmp
pop
dec
mov
jmp
cs
xor
out
mov
pop
sar
jo
or
(bad)
shr
pop
enter
dec
sbb
imul
cmps
xor
add
xlat
js
dec
mov
pusha
int3
gs
into
and
or
mov
or
push
dec
popf
hlt
sub
das
jmp
into
adc
cmp
and
mov
test
fidiv
pop
movs
add
jbe
push
(bad)
outs
jl
push
xor
fwait
inc
test
push
pop
inc
mov
jg
adc
pushfw
call
into
dec
test
lock
popa
lods
test
retf
mov
mov
ins
jae
stos
sub
ja
xchg
sub
(bad)
lea
lds
scas
push
test
lahf
mov
cmp
or
add
out
pop
sub
movs
add
imul
push
push
pop
stos
cmp
and
mov
sbb
add
add
push
iret
mov
(bad)
std
(bad)
pusha
push
mov
mov
out
inc
mov
jno
mov
and
push
mov
xor
push
inc
ret
cli
enter
or
lock
mov
pop
push
jb
imul
cmc
cmp
mov
hlt
out
add
sub
pop
(bad)
cmp
mov
retf
popa
daa
addr16
stos
out
rol
and
fcomp
cmp
jb
imul
cmp
jb
mov
idiv
repnz
cmp
in
bound
jmp
adc
cmp
(bad)
bound
adc
jge
fist
jo
sbb
rcr
movs
dec
rep
rol
(bad)
aad
xchg
dec
cmp
loope
cmp
sbb
in
ret
add
imul
and
lods
stos
(bad)
test
loopne
xchg
push
pop
add
call
mov
mov
pop
inc
inc
mov
int
test
stos
ja
mov
adc
cmp
loope
jo
imul
ror
pop
enter
call
stos
mov
mov
or
fcomp
jb
pop
mov
hlt
outs
daa
sbb
push
cdq
fwait
or
ret
ins
adc
push
stos
jle
push
push
test
push
iret
pop
ins
add
test
cwde
mov
mov
lods
outs
jmp
jns
mov
xchg
xchg
mov
sbb
push
add
sbb
pop
sbb
lahf
int
jle
dec
pop
ror
mov
mov
ss
inc
mov
pushf
retf
mov
sub
icebp
ins
and
xchg
ja
sbb
adc
xor
loopne
hlt
call
retf
jnp
jle
sbb
lahf
std
sub
pushf
scas
and
scas
aam
mov
arpl
pop
and
push
(bad)
jle
mov
cwde
pusha
in
jg
dec
fisttp
xchg
mov
or
sub
loopne
mov
(bad)
sbb
in
icebp
imul
jmp
movs
xchg
ins
call
and
aas
popa
pushf
cmp
add
test
movs
push
fstp
xor
jnp
movs
or
fdivrp
add
imul
jle
cmp
scas
scas
mov
popf
inc
add
add
sub
jge
(bad)
lods
fwait
sbb
xor
mov
adc
and
bound
test
add
push
out
repnz
and
jp
push
adc
mov
mov
adc
stos
shl
cmp
cwde
mov
test
and
cmp
xchg
clc
fs
dec
pop
mov
pop
push
cmp
add
mov
xchg
nop
test
retf
je
xor
mov
and
fadd
(bad)
repnz
fld
mov
(bad)
(bad)
popa
(bad)
fisttp
(bad)
xor
aad
leave
adc
mov
push
cmc
xlat
add
and
movs
mov
cmp
test
sti
movs
out
in
aaa
mov
loopne
mov
loop
cld
outs
(bad)
xchg
inc
repz
mov
repz
out
ret
cmp
pop
push
icebp
cli
jg
jb
shl
int3
(bad)
popa
jb
jb
mov
inc
sbb
jne
push
rcl
adc
in
xor
xor
call
jno
or
pushf
mov
std
(bad)
sti
int
sahf
jecxz
push
mov
out
jge
and
sar
sub
adc
mov
aas
add
xor
sbb
jge
add
jnp
(bad)
rcl
push
cmp
push
mov
sbb
mov
push
lds
mov
sub
das
dec
inc
repz
out
jecxz
into
mov
fwait
push
push
push
or
push
(bad)
push
push
repnz
cli
push
test
stos
pop
outs
(bad)
jge
ins
add
iret
in
pop
scas
inc
xor
and
fwait
test
mov
adc
(bad)
lea
cwde
xlat
or
or
xor
int
pop
aad
stos
xor
add
inc
push
pushf
cli
jp
cmp
xor
fsubr
jp
pop
xor
aam
mov
test
or
cmps
push
addr16
loop
(bad)
mov
jns
cmp
int
fsub
and
icebp
stos
or
lods
xor
cwde
xchg
mov
add
comiss
xor
outs
pop
sti
adc
data16
or
inc
cdq
inc
int3
psrad
xchg
in
ficomp
test
xchg
and
stc
cmc
fimul
jo
mov
(bad)
es
js
push
or
popa
sub
jp
xchg
fiadd
mov
xchg
mov
(bad)
xchg
jge
adc
pop
xor
pop
js
xchg
rol
std
(bad)
and
es
call
dec
pop
pop
sti
stc
mov
mov
pop
outs
fadd
pop
pop
sbb
aas
test
ins
xchg
push
pop
add
sub
pop
lds
mov
pop
mov
call
in
mov
mov
gs
xchg
loope
lods
xlat
add
hlt
jns
or
fdivr
ret
cdq
test
fldcw
jmp
pop
jae
sub
xchg
(bad)
push
and
xchg
sbb
jo
mov
scas
jnp
mov
pop
inc
lock
mov
sub
xor
scas
jb
int
shr
frstor
fwait
adc
rcl
out
cmp
out
iret
or
inc
pop
xor
jp
inc
daa
and
lea
push
jmp
adc
dec
cmc
push
or
inc
retf
mov
xor
pop
pop
in
retf
dec
test
xchg
ret
sub
jbe
ror
das
inc
loopne
call
retf
and
mov
shl
mov
loope
rol
xchg
or
inc
loope
mov
aas
outs
lock
lds
jns
loop
cdq
test
pusha
cs
mov
mov
jb
das
adc
pusha
std
inc
hlt
xchg
(bad)
adc
movs
(bad)
clc
je
rcl
xor
jp
dec
or
lahf
add
pop
in
inc
dec
shr
push
idiv
jmp
lea
xor
in
dec
cmps
test
ss
push
lods
movs
adc
dec
retf
test
dec
lods
cmp
push
repnz
and
sub
adc
and
sbb
or
retf
js
adc
cmp
test
sub
jns
mov
or
retf
mov
jge
jne
call
call
mov
repnz
jbe
(bad)
cwde
cdq
retf
adc
or
add
cs
(bad)
ja
push
jmp
inc
mov
(bad)
xchg
mov
loop
inc
ror
cmp
popa
mov
sbb
mov
push
xor
sbb
xchg
push
test
xchg
jae
add
stos
test
outs
jmp
cmps
and
mov
xchg
(bad)
pop
(bad)
jge
inc
ins
imul
pusha
mov
mov
add
fcom
retf
mov
loope
jb
sub
jae
sar
inc
sbb
push
jbe
loopne
int
mov
push
cmps
scas
iret
cli
xor
or
jae
jo
xchg
fld
jmp
pop
es
into
jo
push
loope
pop
jl
or
sbb
push
jno
xor
int3
push
adc
sbb
mov
stc
or
nop
ins
and
lea
iret
cmps
repnz
mov
int3
sub
shl
ja
ds
or
arpl
jmp
push
cs
cmp
pusha
and
iret
sub
das
inc
mov
cmp
sar
or
sbb
rcr
dec
push
xchg
rol
ret
pop
inc
leave
leave
xchg
jp
pop
outs
call
nop
mov
sahf
call
xor
(bad)
sar
push
xor
push
ins
xor
xlat
xor
fsubp
jg
sahf
xchg
outs
xchg
jne
and
clc
push
pop
push
adc
sbb
dec
push
or
(bad)
aas
cmp
mov
je
xor
movs
jge
jmp
xor
sub
cdq
out
ret
cmc
xchg
inc
mov
in
lds
and
sti
imul
pop
outs
pop
inc
fdivr
scas
jl
xlat
inc
test
sar
(bad)
frstor
and
mov
aas
jnp
and
sub
mov
sub
push
mov
xchg
in
loopne
mov
mov
adc
inc
inc
jp
jl
mov
sub
jae
dec
cmp
nop
jb
add
pop
pop
push
lods
icebp
popf
xchg
aaa
mov
cmp
or
not
jae
sahf
stos
ins
push
mov
inc
dec
rcr
repnz
retf
adc
and
xor
fadd
sahf
mov
and
dec
cld
push
loopne
and
sbb
fincstp
pop
fs
pop
xchg
adc
call
adc
stos
cmp
push
cmp
adc
std
dec
iret
retf
outs
mov
mov
push
enter
cwde
pminub
retf
mov
jecxz
dec
lods
rdtsc
jo
ret
lods
push
mov
retf
(bad)
cmp
in
dec
inc
jbe
add
or
or
rcl
fst
clc
sbb
push
cmp
add
into
repz
std
enter
sub
add
adc
cmp
ins
data16
adc
dec
outs
add
or
sub
ja
and
sbb
adc
arpl
xchg
jmp
add
fcom
das
sub
xchg
xor
or
enter
sbb
in
daa
xor
daa
or
pusha
rcl
push
int
fsubr
pop
mov
dec
sti
mov
sbb
cli
xlat
push
dec
aas
cld
(bad)
fsubp
jecxz
cmp
jo
mov
jno
inc
pop
pop
(bad)
or
push
repz
retf
mov
push
jmp
xchg
(bad)
sub
cmp
into
cmp
or
push
mov
or
or
clc
ret
not
sbb
mov
adc
mov
adc
jmp
into
mov
pop
imul
(bad)
jne
xor
jmp
xor
jecxz
jno
mov
into
movs
sahf
(bad)
add
mov
pop
nop
push
shl
rcr
movs
add
test
cmp
je
inc
fwait
add
out
retf
mov
outs
jae
into
mov
mov
shl
inc
xlat
inc
aaa
sub
mov
xchg
outs
fild
add
arpl
rol
and
lea
push
pop
stos
push
shl
jp
ins
mov
mov
fwait
movs
mov
(bad)
aad
(bad)
jno
fimul
xor
adc
or
push
xchg
arpl
or
sbb
test
jbe
outs
cmp
xor
popf
out
push
mov
mov
mov
or
nop
es
add
xchg
and
das
cmp
clc
jns
iret
les
cmps
fidivr
push
dec
push
adc
dec
popf
icebp
push
inc
xchg
inc
in
lahf
std
lahf
and
gs
pop
(bad)
in
shl
rcl
jmp
ins
cmp
ins
mov
push
inc
in
(bad)
mov
push
xchg
jb
pop
loope
and
xchg
mov
shl
push
ins
inc
pop
add
add
jmp
or
push
mov
sub
mov
js
and
shr
mov
or
gs
ds
or
jo
ja
pop
xchg
xor
xchg
movs
aas
leave
retf
inc
inc
movs
mov
pop
sbb
popf
jmp
mov
out
and
and
call
out
pusha
sahf
out
es
outs
dec
inc
mov
aam
call
iret
js
cdq
fcomp
lds
cs
add
aad
mov
mov
idiv
xlat
push
in
sbb
ins
in
sti
or
call
sbb
addr16
add
cld
cmp
retf
shl
lahf
xor
stos
fsubr
jns
cmp
push
jp
jnp
jg
mov
cmp
lahf
sub
push
sbb
out
lahf
fnsave
cmp
lock
movs
pop
dec
cmp
les
xchg
xchg
cmp
pop
fdiv
cmp
ins
add
cwde
lea
or
imul
push
loopne
pop
jmp
ret
dec
jmp
dec
jne
(bad)
cmp
and
inc
fnsave
lock
and
fmul
ds
lahf
mov
and
mov
(bad)
xor
jmp
xor
add
pop
sar
jmp
cmps
jae
sub
shl
pop
push
lea
out
dec
pushf
hlt
and
lods
rcl
adc
sub
or
cmp
movs
popf
ror
cmp
push
imul
cld
iret
pushf
in
cmp
clc
cwde
xlat
mov
dec
cdq
pop
pop
dec
not
in
inc
div
int
jle
inc
es
xor
or
adc
push
loop
adc
retf
xor
jns
stos
cs
cmc
jecxz
movs
je
mov
loope
into
pop
test
jge
out
(bad)
mov
sti
rcr
jle
adc
das
mov
push
rcr
in
xor
(bad)
fsubr
fucomip
jae
mov
mov
jae
jle
ins
jb
dec
sahf
mov
pop
push
cmp
mov
push
inc
mov
jp
sub
shl
or
push
inc
push
adc
mov
mov
lods
dec
inc
mov
xor
test
xchg
mov
(bad)
fdivr
adc
jg
cmp
push
add
cmp
jnp
fs
mov
add
dec
jmp
or
xor
test
sub
(bad)
adc
xor
jne
adc
in
mov
sub
cmps
lods
out
mov
push
mov
add
inc
xchg
outs
push
daa
stc
les
outs
pushf
shr
test
mov
cmp
sub
(bad)
repz
pop
test
dec
mov
pop
pop
add
test
dec
stos
in
dec
xor
out
sub
inc
out
into
mov
rcl
push
pop
xchg
js
jecxz
enter
push
sub
movs
mov
ficom
clc
into
pop
pop
ret
enter
push
out
(bad)
cs
mov
ret
jb
xchg
mov
pop
(bad)
or
data16
rcr
loopne
inc
or
popf
xchg
mov
push
and
cli
inc
test
jmp
adc
(bad)
retf
out
in
mov
das
jecxz
jo
mov
cmp
(bad)
ja
fstp
cdq
xor
stos
mov
outs
push
stc
pop
or
xchg
adc
lods
retf
aad
mov
rcl
jmp
lock
(bad)
into
or
cmps
dec
push
test
inc
or
pop
add
inc
push
mov
test
xor
rcl
out
int3
sar
sbb
scas
adc
add
inc
retf
push
test
loopne
add
lods
ror
push
jb
xor
gs
mov
(bad)
icebp
mov
dec
rol
out
(bad)
mov
or
push
pop
cmc
push
xor
arpl
ss
jmp
dec
pop
mov
stc
mov
pop
push
sbb
mov
sar
inc
ss
cmp
jmp
cmps
mov
pop
mov
test
push
es
mov
in
xor
icebp
shl
aas
retf
xchg
add
pop
xchg
leave
add
and
nop
xor
ins
movs
scas
or
pushf
and
jno
adc
in
inc
pop
fdivr
adc
pushf
mov
mov
sti
(bad)
mov
and
dec
add
sub
jle
test
inc
xchg
scas
mov
jge
test
repnz
sub
and
fimul
popa
enter
cmps
(bad)
jl
push
ds
push
push
add
repz
movs
(bad)
xor
xchg
add
xchg
dec
rol
sbb
nop
jecxz
popa
push
sbb
mov
push
mov
fwait
pop
cmp
cmc
dec
div
call
ror
xchg
dec
dec
dec
fldcw
int3
and
jb
dec
push
into
sbb
(bad)
lahf
lock
outs
addr16
cld
mov
clc
jb
or
es
cvtdq2ps
xor
test
ins
call
leave
stc
div
xchg
das
es
push
sbb
adc
jno
out
and
mov
cmps
mul
jecxz
xchg
inc
dec
adc
test
test
in
cmps
je
push
mul
fisub
jmp
addr16
xchg
mov
jmp
shl
and
sbb
inc
sbb
aaa
inc
adc
sub
movs
jmp
mov
jns
in
adc
sbb
pop
lock
jnp
sahf
js
sub
rol
popf
movs
fdivr
push
push
xchg
inc
sbb
cdq
in
js
mov
in
adc
jo
scas
inc
jno
push
and
shl
sbb
adc
adc
adc
int3
dec
or
fst
inc
or
dec
xchg
push
jp
hlt
jbe
and
sbb
xchg
jmp
dec
adc
sbb
mov
jg
repnz
inc
out
push
jg
inc
arpl
mov
push
jnp
cmp
mov
aaa
jecxz
xchg
cmp
xor
lahf
mov
xchg
jns
popa
rcr
retf
mov
bt
ins
lods
shl
xchg
xor
fs
aam
xlat
and
inc
in
sbb
test
lea
std
out
test
gs
and
loope
hlt
mov
and
mov
scas
adc
inc
idiv
ds
xor
lods
adc
or
add
(bad)
out
popa
or
shr
fbstp
mov
nop
and
imul
mov
and
shl
sahf
das
mov
mov
iret
push
mov
(bad)
repnz
inc
lods
shl
shr
pop
inc
cdq
stos
push
add
xchg
xor
popf
pushf
cld
xor
imul
cmps
jg
cmp
add
lahf
into
(bad)
fisttp
adc
cmc
ret
inc
and
xor
shl
sbb
sub
jmp
push
mov
es
int
es
std
call
in
adc
stos
das
xchg
cmp
(bad)
mov
adc
fisub
ret
push
mov
pop
inc
outs
mov
aaa
push
mov
test
neg
push
and
mov
out
dec
retf
jecxz
lahf
cli
or
stos
push
dec
add
xchg
xchg
add
jecxz
jle
jmp
push
test
jnp
xchg
mov
call
inc
mov
(bad)
cmps
mov
scas
xor
lock
inc
push
in
nop
jo
pushf
jns
push
lea
or
cmp
ret
nop
xchg
fcomip
retf
and
inc
mov
int
dec
mov
xchg
and
mov
movs
push
jmp
rcr
xchg
repnz
jge
imul
(bad)
push
push
dec
es
mov
outs
imul
mov
movs
(bad)
adc
and
mov
inc
dec
sar
mov
pusha
movs
mov
cmp
xchg
movs
inc
bound
cli
jno
pop
ds
xchg
inc
pop
pop
jl
pop
cmp
aaa
jle
cmp
or
cmp
retf
xor
push
retf
stos
rol
dec
jmp
dec
into
jne
push
aaa
mov
(bad)
push
jmp
mov
dec
icebp
pop
pusha
dec
outs
mov
outs
or
xchg
adc
sbb
cmp
mov
push
pushf
ja
(bad)
or
out
push
add
pop
mov
adc
jp
adc
dec
fcom
sbb
pusha
jle
inc
push
scas
jmp
popa
pop
jle
sahf
lea
sbb
add
(bad)
cmp
(bad)
out
cdq
aam
cs
mov
or
pop
into
mov
in
cmps
jnp
push
sub
imul
std
nop
or
cmp
cmp
repz
daa
outs
pop
xchg
mov
inc
push
sub
data16
or
cmp
mov
or
push
ror
jmp
cmc
cmps
dec
adc
nop
test
inc
jmp
push
and
mov
ror
ja
xor
rcr
or
adc
je
sub
into
hlt
retf
adc
js
iret
inc
xor
sub
fstp
movs
inc
das
adc
push
jb
int
repz
fiadd
push
rcr
stos
cmp
mov
fcmovb
xchg
add
cmps
sbb
adc
sbb
mov
pop
in
mov
xlat
pushf
movs
push
jns
(bad)
daa
jmp
jb
mov
loop
adc
jp
add
dec
mov
dec
test
mov
aaa
adc
sub
sbb
mov
out
fdiv
sti
mov
shl
dec
cmp
imul
sti
add
popa
(bad)
mov
cmp
sti
pop
dec
imul
xor
push
pop
outs
xor
lods
mov
fimul
jl
pushf
bound
sbb
call
fsub
lahf
popf
in
mov
loop
loope
add
and
mov
into
stos
imul
pop
into
jle
fcomp
mov
adc
push
dec
mov
shl
jmp
cmp
pushf
push
push
xor
dec
sahf
stos
push
jp
stos
mov
inc
fs
and
mov
mov
adc
in
mov
(bad)
push
mov
(bad)
inc
sbb
repnz
and
lahf
repnz
jnp
inc
(bad)
(bad)
cld
pusha
stos
je
iret
add
kmovd
cmp
aad
mov
sti
nop
sbb
cwde
jl
xor
add
mov
jp
sub
cmp
sbb
push
add
push
mov
mov
inc
mov
test
pop
cmc
mov
add
(bad)
mov
mov
add
or
lock
rol
out
(bad)
ds
add
cmc
stos
enter
cmps
int
and
imul
mov
leave
outs
fnstsw
(bad)
bound
lahf
xchg
lds
inc
mov
pop
push
fucom
jecxz
lahf
aaa
dec
or
xor
xchg
out
adc
push
pushf
jp
pop
jns
xchg
xchg
adc
lock
jns
movs
out
pop
ja
and
cmp
jmp
je
inc
ins
jno
push
lds
dec
sbb
ins
hlt
add
outs
jmp
xchg
test
add
(bad)
std
jns
(bad)
iret
call
push
out
in
in
dec
lods
jge
push
mul
test
popf
mov
xlat
shl
xchg
mov
ror
cmps
test
hlt
enter
loopne
test
rcl
and
enter
inc
sahf
mov
hlt
sub
or
and
jmp
imul
icebp
aaa
fsub
mov
add
icebp
sub
dec
sbb
pop
leave
jge
add
and
ror
sub
cmp
inc
jmp
inc
mov
loopne
mov
cs
(bad)
inc
outs
das
ss
(bad)
not
aas
ins
push
ror
pushf
(bad)
push
cdq
sbb
cli
jbe
add
inc
in
mov
cmps
imul
jne
inc
jl
add
xchg
cmp
sbb
retf
pushf
dec
inc
(bad)
ss
xchg
mov
cmc
shl
cmp
outs
add
pop
xchg
xlat
mov
jg
xlat
enter
je
or
xchg
xchg
jbe
lds
shl
dec
pop
(bad)
in
cmc
fsqrt
nop
enter
mov
adc
sbb
shl
mul
cdq
jp
pop
gs
inc
push
imul
mov
aad
and
hlt
xor
aaa
dec
shl
pop
cmp
inc
adc
xor
or
inc
clc
(bad)
dec
pop
mov
call
js
out
dec
popa
test
in
aam
repnz
sti
lods
ins
dec
lock
cmp
inc
lea
add
pop
dec
test
repnz
mov
adc
daa
pop
or
lods
pop
mov
movups
ss
mov
pushf
lds
retf
psubsw
pop
loope
cmps
fcomp
mov
ds
xor
enter
mov
(bad)
jecxz
repnz
push
pop
in
inc
clc
(bad)
retf
aaa
mov
mov
jnp
inc
xor
js
cmc
push
sbb
rol
div
pop
cld
fisttp
sbb
test
js
ins
xlat
cmp
pop
daa
or
xchg
fcmovne
dec
sbb
xchg
fmul
outs
add
xor
test
mov
jns
clc
movs
imul
stos
and
sar
pop
jmp
xor
pusha
das
xor
inc
leave
mov
scas
in
in
aam
fadd
mov
int3
xchg
int
not
xlat
loope
sbb
mov
jnp
xor
mov
xchg
xor
cmp
push
(bad)
sub
movnti
test
outs
and
fdivr
push
mov
mov
out
adc
sbb
(bad)
cmp
and
xor
pusha
in
shl
(bad)
in
sbb
push
mov
cmc
sub
popa
jg
jns
aas
xlat
retf
adc
xor
or
push
sbb
lahf
sbb
cmps
and
shl
ret
movs
fcomp
jp
das
and
stos
xchg
jo
(bad)
std
fnstcw
rcl
inc
pop
out
dec
mov
int
push
xchg
shr
(bad)
cmp
xor
sbb
sbb
in
fidiv
imul
push
mov
cmp
call
int3
aaa
and
loope
adc
jle
mov
rcr
mov
mov
jns
mov
pop
dec
mov
dec
retf
mov
movs
dec
je
(bad)
imul
mov
retf
sub
sub
outs
and
sbb
sub
les
push
add
xor
dec
into
fimul
arpl
imul
mov
push
retf
sub
sahf
ja
jge
fmul
jns
sbb
push
jbe
or
push
bound
push
and
imul
jae
push
xchg
ins
and
jp
cmp
push
add
out
xlat
pusha
ins
sbb
ja
mov
mov
lods
call
mov
pop
scas
movs
sti
sub
rcl
cmp
mov
frstor
rcl
pop
lods
jmp
push
loop
out
mov
fwait
dec
pop
ins
xor
stos
xchg
mov
dec
cmp
xchg
push
add
inc
or
jmp
idiv
fistp
test
jo
mov
lods
pusha
fmul
mov
fnstenv
js
mov
pop
lea
sbb
push
push
mov
(bad)
(bad)
push
pop
scas
nop
leave
mov
or
rcl
aad
dec
xchg
pop
pushf
xor
out
sub
lds
sbb
out
repnz
cli
jmp
in
mov
inc
(bad)
mov
in
jns
jns
stos
sub
or
fdiv
and
inc
nop
adc
inc
pop
out
fist
fimul
inc
adc
and
sbb
sub
sbb
out
(bad)
(bad)
shl
push
fucomp
aad
add
cdq
mov
or
out
icebp
jge
inc
and
leave
mov
mov
and
daa
inc
jae
cmp
inc
nop
int
sbb
fld
(bad)
push
jns
mov
div
or
fucompp
xor
lahf
pop
ficom
das
pop
das
sub
jo
je
ret
mov
shl
call
and
cmp
dec
int3
add
push
jge
fisub
lds
xor
xchg
or
ins
inc
mov
inc
and
sbb
gs
call
mov
int3
inc
jp
adc
ror
clc
ins
xchg
lds
jno
aad
or
arpl
sub
leave
xchg
add
push
xor
fnstcw
adc
push
jae
pop
add
lods
inc
push
sbb
or
cld
mov
sub
mov
adc
mov
or
or
loope
xchg
adc
bound
jbe
and
js
mov
jno
inc
mov
mov
mov
into
ret
xchg
inc
arpl
push
and
mov
inc
push
xchg
ins
jnp
push
(bad)
push
jmp
adc
retf
ficom
jmp
add
pusha
pop
or
lahf
lahf
test
cli
pop
jb
dec
and
jecxz
inc
mov
popf
pop
cmp
dec
les
cmps
push
dec
test
shr
cmp
inc
mov
jbe
push
stc
xchg
lods
retf
jp
jecxz
ss
in
or
dec
in
jle
jne
test
mov
mov
nop
scas
(bad)
mul
cmp
jp
mov
dec
ret
mov
add
fiadd
xchg
shr
or
xchg
inc
sub
mov
sub
push
ficom
push
mov
push
repnz
pop
div
mov
or
add
pushf
cld
ss
sbb
out
jb
lds
dec
(bad)
jbe
daa
jnp
hlt
jns
sub
int
loop
mov
(bad)
and
es
outs
cmp
pop
push
ja
xchg
fcom
cmp
mov
mov
fsincos
sub
mov
lea
dec
sahf
jle
mov
xor
pop
std
(bad)
push
loope
sub
test
dec
cmp
std
fistp
xchg
xchg
push
mov
std
(bad)
(bad)
rcr
sbb
pop
(bad)
shl
mov
inc
sbb
neg
mov
or
ret
push
ss
inc
ret
pop
cmc
js
sub
xor
push
lods
bound
cli
xchg
jbe
mov
mov
jmp
xor
mov
inc
add
ret
jae
xchg
mov
inc
popa
(bad)
cmp
push
je
fisttp
jns
jge
mov
add
push
movs
lock
aad
adc
enter
fcomip
mov
call
pop
stc
jl
push
push
add
nop
ins
xor
mov
or
aad
mov
mov
inc
js
pop
lock
mov
cmp
xlat
or
femms
dec
setge
movs
adc
inc
fnstcw
mul
xchg
pop
xor
in
loop
mov
and
fwait
pop
rol
cs
popa
mov
inc
cs
xor
test
inc
ins
add
cmp
call
sub
jo
inc
dec
push
add
xor
nop
cmp
cmp
jo
test
and
fadd
lock
sub
push
in
test
in
scas
sub
dec
in
mov
ret
inc
ds
ja
loopne
cmps
mov
sub
push
push
and
inc
xchg
dec
xlat
out
ins
and
sbb
imul
xchg
or
add
ficom
test
xchg
shr
in
(bad)
lods
and
shl
mov
cmc
aad
rol
push
jns
ret
jle
push
pop
push
and
lock
fs
lods
jp
(bad)
ss
mov
sub
mov
adc
jge
sbb
or
or
sub
loope
retf
repz
inc
push
inc
cdq
mov
ret
or
test
and
mov
cmps
cmp
retf
bound
ret
mov
in
add
jp
mov
test
iret
imul
imul
and
adc
xor
call
cwde
mov
dec
int
push
or
adc
mov
xchg
inc
mov
mov
adc
mov
xchg
icebp
dec
gs
lods
mov
loopne
adc
pop
outs
das
sub
dec
in
ins
mov
movs
scas
adc
les
xchg
mov
and
fild
(bad)
out
cmps
cli
pop
mov
scas
fcom
push
fstp
cdq
xor
and
and
or
rcr
(bad)
sub
xor
sbb
fsubr
push
mov
adc
test
xor
or
mov
outs
out
mov
cwde
jbe
fwait
cmp
scas
mul
leave
fiadd
mov
pop
(bad)
push
mov
mov
movs
push
jmp
movs
xor
ins
loop
mov
jmp
pop
ret
in
cmp
pop
sub
xchg
push
lahf
inc
cld
cdq
(bad)
jo
and
les
add
nop
dec
call
pop
pop
dec
dec
faddp
and
(bad)
in
dec
mov
int
rcr
mov
mov
inc
dec
xor
push
pop
or
push
adc
lock
arpl
(bad)
cld
pop
add
cwde
dec
jmp
adc
addr16
xchg
sbb
xchg
xchg
sti
ret
push
inc
retf
xor
loop
lds
add
or
add
stos
lds
sbb
sub
loope
jp
xchg
ror
cmp
adc
shr
std
loop
cmp
shrd
adc
push
pop
mov
jecxz
sbb
inc
inc
cwde
clc
mov
mul
push
(bad)
jnp
test
int
inc
mov
sbb
xchg
mov
iret
push
fld
loopne
pop
outs
and
fldenv
inc
lods
push
xchg
cmovo
xlat
inc
retf
cmps
inc
and
xor
imul
call
jg
jmp
mov
test
mov
fdivr
xchg
mov
cmc
and
sub
adc
and
pop
lock
cmps
sub
adc
out
sbb
shr
mov
fstp
repz
add
mov
leave
jge
add
clc
and
add
xchg
lea
add
mov
adc
fdiv
sub
aad
fbld
scas
push
mov
mul
xlat
inc
(bad)
loopne
or
and
mov
rcl
fpatan
xchg
mov
or
call
mov
js
inc
pushf
pusha
jmp
cli
sti
test
jmp
arpl
jo
jo
pop
mov
adc
add
addr16
mov
daa
dec
cmp
pop
std
sub
sbb
sub
mov
je
and
dec
or
sub
test
inc
push
and
ret
test
stos
icebp
jo
ja
add
push
icebp
jbe
adc
stc
iret
cli
(bad)
(bad)
xchg
adc
mov
cmp
outs
fisubr
ret
das
xchg
add
or
sbb
jecxz
dec
das
push
jne
lods
pop
mov
or
test
mov
and
push
lods
inc
(bad)
mov
or
fist
push
sub
jne
xchg
dec
cmps
es
stos
mov
jae
sbb
dec
xchg
push
mov
aad
mov
shr
cmp
je
and
loopne
icebp
das
mov
adc
(bad)
mov
(bad)
cwde
arpl
jbe
loop
xchg
pop
loope
or
push
call
movs
repnz
sbb
iret
cmps
cmp
sub
test
(bad)
in
outs
cli
sbb
daa
clc
fsub
int3
cmp
sbb
adc
je
xchg
xchg
in
jp
xor
push
ud1
add
mov
push
pop
arpl
xchg
push
gs
pop
mov
loop
sti
movs
cmp
pop
push
jmp
inc
mov
loopne
aam
mov
dec
inc
popf
mov
nop
mov
push
cmc
jecxz
push
leave
xor
push
cmp
aam
dec
aaa
cmp
mov
ins
mov
fnsave
mov
call
push
adc
push
sbb
mov
mov
mov
js
jle
sbb
(bad)
fidivr
(bad)
mov
call
jp
into
lahf
movs
push
movs
shl
mov
lahf
repnz
gs
icebp
clc
mov
sbb
xchg
clts
ja
fwait
push
mov
jne
xor
xlat
jns
xchg
mov
mov
dec
shr
pop
cmc
loop
jb
lahf
das
dec
loopne
xor
adc
mov
mov
mov
(bad)
(bad)
fsubr
repnz
(bad)
xor
or
les
mov
mov
add
lea
jle
ins
dec
mov
js
mov
xchg
or
mov
popf
icebp
(bad)
cmp
sbb
enter
js
int3
xor
cmp
hlt
mov
addr16
pop
xchg
xchg
or
adc
pop
mov
dec
jne
rol
xchg
bound
add
push
loop
inc
out
cmps
loop
daa
push
adc
inc
add
jge
mov
sti
cs
jb
cmp
(bad)
pop
es
ins
ret
int3
stos
dec
ficom
xlat
(bad)
ja
mov
fdivr
mov
js
pushf
out
push
and
or
cmps
dec
pop
ds
daa
call
(bad)
mov
mov
scas
(bad)
xor
pushf
bound
adc
test
or
jns
mov
and
imul
loope
dec
cdq
sar
pop
jle
and
enter
or
outs
hlt
mov
pushf
mov
xor
cmp
(bad)
stc
fmul
sub
(bad)
fsub
(bad)
(bad)
add
inc
push
popa
or
imul
fsub
jne
sub
mov
mov
out
inc
test
inc
pusha
xor
idiv
mov
sub
sti
xor
aad
lock
enter
mov
push
sub
jl
retf
dec
icebp
jae
fimul
add
out
call
lahf
pusha
rcl
call
add
test
mov
rol
jg
push
push
lds
mov
stos
dec
pop
xor
ins
repnz
leave
adc
add
sbb
inc
in
dec
xchg
xor
push
add
inc
ins
lea
inc
sbb
test
mov
pop
add
(bad)
es
push
push
cdq
fs
push
dec
push
in
dec
mov
lds
xchg
lods
daa
in
or
test
ss
push
xor
in
push
ins
push
cmp
stos
mov
mov
nop
jb
out
lds
cdq
mov
(bad)
lods
jne
push
hlt
inc
fsubr
pop
add
imul
pop
pop
inc
dec
jne
sbb
cmc
dec
ret
add
hlt
pop
fwait
cmp
int3
pop
bound
mov
in
popf
jl
inc
sub
xchg
add
ret
jmp
data16
sahf
pop
add
sbb
cmp
pop
jnp
lods
mov
jne
pop
jbe
(bad)
mov
mov
pop
cmp
pusha
jge
in
jecxz
xor
or
inc
das
xchg
cmc
imul
mov
mov
push
(bad)
cmp
pop
jne
push
dec
popf
push
adc
xor
mov
sub
dec
outs
inc
mov
jmp
popa
test
sbb
xchg
pop
cmp
into
dec
test
mov
add
jno
loop
movs
xor
dec
jnp
inc
sbb
push
xor
mov
lea
xor
or
idiv
xor
xchg
xchg
jae
fiadd
adc
int
mov
xchg
pop
cli
mov
xlat
loop
push
push
arpl
dec
out
arpl
ds
mov
ret
jg
in
arpl
xor
and
test
pop
sbb
jae
daa
and
and
in
rcl
int
jp
jae
cmc
add
xor
ficom
pushf
xchg
add
mov
push
sub
cmp
pop
push
aas
call
cmp
cmc
scas
scas
dec
std
aam
fisttp
dec
jne
xchg
and
pusha
stos
(bad)
and
sbb
inc
rcl
mov
shr
add
or
sbb
daa
loop
js
mov
jno
int
retf
leave
movs
fwait
adc
test
cmp
mov
repz
das
pushf
dec
clc
and
outs
daa
out
mov
aad
mov
mov
mov
jmp
jp
xlat
in
jle
mov
ds
sbb
sub
and
mov
adc
jo
sub
out
je
sub
mov
jno
fstp
not
xchg
sti
xchg
in
cs
jno
push
lods
int
dec
cmp
adc
test
add
pusha
pushf
push
jg
fnstsw
rol
and
adc
and
cmps
popa
or
fisttp
call
mov
jp
cmps
cmp
pusha
stos
push
cmc
hlt
cmp
movs
inc
mov
outs
mov
icebp
loopne
and
push
(bad)
loopne
pop
lds
cmp
mov
and
pushf
(bad)
jno
dec
push
sbb
outs
and
inc
aaa
jo
lods
sub
enter
jbe
xor
pusha
imul
cmp
cdq
mov
repz
cdq
cs
cdq
cmps
fdiv
fucomi
dec
gs
lods
push
add
and
outs
in
aaa
push
dec
adc
popf
xchg
(bad)
dec
inc
xlat
pop
cmp
(bad)
in
inc
dec
xchg
ins
jmp
push
xlat
lock
shr
sub
in
mov
mov
and
fst
call
inc
or
cmc
sbb
retf
rcl
xchg
enter
add
dec
data16
fsub
cmc
push
in
add
cmp
andnps
xchg
push
sar
push
push
movs
sub
jle
test
inc
add
in
adc
(bad)
pop
xor
cmps
call
daa
xchg
cmps
rcr
and
das
dec
mov
ins
les
ins
aas
cmovnp
sub
push
sbb
cmps
cmp
int3
mov
aas
push
jns
mov
and
out
add
loope
xchg
popf
add
fnstsw
xchg
inc
call
xor
pop
movs
mov
loope
fiadd
shl
xor
jbe
or
ja
repnz
test
dec
or
jp
mov
mov
ins
pop
dec
push
mov
dec
ss
ror
mov
mov
mov
and
mov
inc
mov
ds
les
adc
shr
mov
sbb
dec
bound
sar
jle
xor
adc
xor
mov
mov
pop
jg
and
jae
xchg
and
or
in
(bad)
or
(bad)
movs
jbe
jne
pop
jb
cmc
shl
push
add
ja
pushf
xchg
adc
or
(bad)
mov
sbb
add
sbb
xchg
cmps
sahf
stos
cmp
sub
adc
out
mov
test
push
ds
and
fnstcw
add
ret
add
xchg
std
pop
dec
jp
in
cli
jmp
add
(bad)
mov
outs
lock
fstp
clc
aam
ins
mov
inc
inc
js
adc
sub
sti
mov
or
jo
and
(bad)
sbb
jbe
jae
mov
(bad)
xlat
rol
sbb
int
cmps
cwde
xchg
(bad)
mov
ds
push
xchg
inc
adc
mov
lds
rol
dec
enter
or
shl
sbb
sti
mov
sub
sub
js
or
div
jl
mov
mov
ret
addr16
ret
int3
jnp
lea
cmps
jecxz
pop
xchg
rcl
xchg
adc
ja
inc
lods
ret
adc
push
lods
lds
and
movs
or
sti
lods
loope
inc
loop
lods
sub
push
mov
ret
jmp
cmp
stc
loopne
and
push
cli
cs
cmp
push
sbb
jo
xchg
xor
test
xor
and
test
in
stos
sub
xor
add
inc
fs
(bad)
mov
pop
mov
fwait
hlt
adc
imul
xor
jb
mov
loop
(bad)
sbb
es
sbb
stos
sub
inc
xchg
xlat
sbb
test
ins
cmp
cmp
(bad)
aad
in
loopne
scas
and
cmp
imul
and
cmp
int
push
in
push
out
mov
idiv
push
pop
(bad)
in
jp
bound
imul
mov
xchg
outs
outs
shr
les
pushf
jb
or
sub
rol
mov
lea
fimul
movs
xchg
push
pop
nop
mov
mov
leave
outs
rcl
and
mov
xchg
movs
je
popa
lds
or
adc
and
addr16
xchg
ds
mov
lahf
sub
and
mov
dec
jge
je
cs
and
xchg
movd
mov
pop
sbb
test
push
in
cmp
jmp
je
shl
and
movs
jp
das
push
inc
mov
cmp
(bad)
(bad)
jmp
dec
repz
lds
pop
aas
push
fcomp
adc
dec
mov
data16
int
lods
mov
jecxz
lods
retf
(bad)
jecxz
(bad)
fdivr
int
push
pusha
mov
mov
push
jb
test
in
xchg
mov
adc
sbb
and
xor
lods
fldz
retf
sub
sbb
and
push
or
lock
jmp
clc
xchg
sub
out
dec
cmp
pushf
outs
mov
mov
cdq
cmp
sar
test
add
inc
cmp
or
cwde
pop
shl
xchg
push
or
(bad)
enter
mov
adc
sub
mov
cmp
(bad)
inc
mov
inc
(bad)
ins
loopne
adc
and
cmp
jo
loop
push
pop
aad
int
pusha
cmp
pop
fsub
dec
jge
dec
inc
fbld
xor
mov
pop
sub
dec
in
add
sbb
and
mov
xchg
popf
inc
or
push
xchg
bound
jmp
and
mov
into
xchg
push
mov
or
mov
sub
cmp
aaa
jae
(bad)
les
ds
xor
fnstcw
adc
xchg
cmp
std
and
je
push
(bad)
mov
popf
cmp
mov
push
and
cmp
xrelease
mov
retf
sub
data16
or
xchg
jl
test
push
xchg
movs
leave
mov
lods
cs
push
xor
loop
mov
int3
sbb
out
sub
cdq
mov
mov
push
out
mov
mov
dec
lock
mov
ret
call
jg
out
or
div
lods
adc
inc
cs
out
xchg
movs
and
cmps
ja
retf
push
pop
dec
ds
mov
jnp
adc
mov
mov
(bad)
xchg
inc
mov
fld
arpl
dec
mov
fist
out
dec
adc
ins
cmp
fistp
and
in
fstp
and
mov
ds
inc
enter
popa
dec
outs
dec
ja
inc
or
add
mov
or
sahf
or
rol
xor
(bad)
ja
push
or
sbb
outs
cmp
shr
enter
mov
in
adc
mov
pop
clc
sbb
push
sub
in
jne
stos
xor
and
and
test
aaa
jg
add
movs
mov
mov
sbb
ret
mov
mov
mov
cli
ret
es
push
sbb
jno
test
push
pop
jp
cmp
out
imul
in
jge
pop
sbb
inc
(bad)
in
and
mov
clc
fwait
sbb
push
shr
add
ja
dec
enter
enter
or
xchg
lock
add
mov
test
jmp
es
mov
fmul
aas
into
xchg
dec
sub
dec
repnz
not
cmc
out
(bad)
inc
add
enter
bound
pop
loopne
mov
test
push
call
lock
outs
add
mov
cmp
xchg
scas
mov
xor
cmp
mov
loop
sar
pushf
xor
mov
cmp
push
into
mov
cmps
icebp
xlat
sbb
xor
(bad)
xchg
jg
lea
cmp
mov
push
ins
sub
sub
nop
imul
pop
mov
mov
add
scas
inc
adc
cdq
retf
adc
lods
adc
sub
mov
mov
shl
retf
in
cdq
fucom
adc
mov
sbb
or
push
add
push
adc
or
in
add
fild
(bad)
mov
lahf
jmp
lock
aaa
and
movs
adc
je
add
mov
test
(bad)
xchg
test
pop
mov
in
xchg
test
out
sub
imul
scas
adc
out
addr16
jle
into
imul
push
shl
fcmovnbe
mov
pop
mov
(bad)
das
xchg
in
xchg
pop
lock
adc
dec
(bad)
mov
mov
cmp
push
cld
sub
adc
mov
dec
push
push
mov
sub
lock
xor
mov
fdivr
mov
dec
mov
sbb
ins
inc
(bad)
adc
test
xor
mov
into
adc
jno
jb
les
and
iret
dec
xor
fwait
push
mov
jo
cwde
sub
sub
cmc
jmp
inc
push
dec
(bad)
in
out
mov
inc
cmp
ja
mov
imul
dec
push
loope
popa
rol
std
inc
imul
ins
xchg
dec
loop
mov
retf
fcmovne
cmp
adc
dec
mov
call
test
dec
fstp
add
outs
test
dec
daa
adc
mov
xlat
cmp
call
add
xor
adc
dec
push
popa
scas
aas
fidivr
popf
adc
(bad)
cmp
(bad)
ds
cmps
(bad)
adc
js
jl
stos
sub
das
in
xor
push
inc
arpl
push
idiv
movs
cwde
sar
inc
dec
call
push
or
push
pop
push
mov
sbb
js
jb
out
adc
sahf
cmps
call
idiv
iret
and
call
enter
rcl
mov
and
dec
jo
outs
mov
push
cmp
mov
push
fidiv
xor
rcl
add
jl
sub
sub
jmp
mov
fist
(bad)
outs
lds
xor
sub
cdq
rcr
fwait
aaa
test
jne
outs
ins
and
jmp
mov
shl
and
jle
js
xchg
cmc
mov
mov
int3
mov
dec
cmp
jl
test
ss
adc
cmp
mov
fistp
jecxz
idiv
jbe
jge
cli
add
jnp
push
pop
outs
les
and
lock
ret
and
lds
retf
push
outs
xchg
imul
fmul
daa
aaa
add
fcom
sub
xchg
inc
lahf
xlat
pop
xor
ins
jnp
out
ror
push
iret
cli
jno
idiv
pop
push
inc
aaa
and
(bad)
call
adc
xor
mov
mov
call
adc
dec
movq
adc
jecxz
jg
jo
(bad)
out
push
call
add
cld
xchg
push
mov
fcomp
aam
outs
mov
popf
les
xor
push
mov
sub
hlt
pop
arpl
xor
ds
iret
mov
sbb
fiadd
xchg
jns
jmp
rol
cmps
jo
jns
or
mov
pop
loope
cmp
inc
sub
fidivr
lahf
pop
icebp
enter
adc
or
dec
push
sub
into
or
scas
mov
mov
xchg
xor
lods
(bad)
gs
inc
sub
cmp
cwde
dec
xor
dec
pop
xchg
or
jle
push
jmp
test
jns
aam
xchg
stos
xchg
mov
aad
(bad)
ja
out
xchg
(bad)
cmp
jle
loop
mov
xchg
retf
std
or
xor
xchg
idiv
adc
xchg
cmp
js
cli
sub
mov
aaa
inc
shl
cli
push
hlt
(bad)
lods
jae
cmp
or
cmp
xchg
cmp
add
sub
push
shl
popa
jae
into
add
push
add
lea
popa
xchg
fwait
jne
push
cmp
xor
sbb
jp
push
test
inc
cmp
mov
sub
dec
sub
inc
mov
outs
dec
pop
xor
leave
icebp
lahf
or
hlt
mov
rcr
cld
dec
xchg
inc
out
int
xchg
jno
or
xchg
sub
xchg
call
jmp
fucom
jle
adc
les
or
cwde
call
add
cmc
call
dec
sbb
(bad)
into
push
mov
fdivr
stos
int
xchg
mov
adc
cmp
dec
leave
jl
mov
mov
jbe
neg
sub
leave
mov
xor
pop
cld
mov
sub
imul
nop
push
test
adc
test
cmp
aam
mov
test
mov
push
arpl
aam
(bad)
mov
imul
mov
or
mov
add
in
push
lahf
adc
inc
(bad)
push
jno
jmp
repnz
mov
movs
test
ja
rcr
push
fcom
lea
outs
in
dec
retf
inc
popf
sbb
jno
stos
je
jmp
push
pop
adc
loop
xchg
mov
bound
sti
test
sub
imul
rcl
cmc
jle
(bad)
mov
pop
add
mov
std
fist
xor
gs
adc
xor
ret
ds
push
pusha
ds
add
xchg
lea
pop
or
sbb
pusha
sbb
push
xor
and
sti
sbb
adc
lds
call
or
lods
dec
fcmovnu
movs
ja
and
(bad)
push
jns
repnz
fld
lds
add
add
pop
mov
cmps
mov
or
popf
in
xor
push
add
fs
xchg
imul
cmps
xor
stc
mov
push
scas
movs
(bad)
aas
(bad)
inc
pop
(bad)
xor
std
loopne
mov
or
cmp
inc
inc
iret
inc
mov
ror
jl
mov
add
pop
jl
xchg
in
test
mov
aaa
mov
xor
shl
mov
sbb
test
fisttp
pop
cmp
addr16
test
lahf
adc
xlat
push
mov
ss
(bad)
loop
inc
sbb
fsubr
mov
xor
shl
dec
jmp
push
loop
mov
mov
pop
into
dec
push
push
adc
ss
dec
fwait
lods
jns
or
fwait
xor
add
cmp
mov
sar
push
pop
ins
imul
cwde
or
dec
(bad)
mov
enter
imul
inc
sub
popa
into
faddp
into
cmc
sbb
sahf
xlat
rcl
jg
mov
jne
scas
sub
mov
xchg
daa
xchg
sub
fdivr
scas
dec
pusha
movs
shr
cmp
fnstenv
arpl
xor
sar
mov
and
fsub
push
cmp
in
jle
ret
xor
imul
dec
sar
pop
daa
pop
(bad)
ins
shr
aas
fist
fdivr
dec
(bad)
cmp
xchg
loop
inc
fadd
sub
mov
or
imul
or
jmp
in
ja
shr
fdiv
or
ret
imul
sar
or
in
xchg
leave
sti
movs
mov
sbb
(bad)
jecxz
cld
mov
jno
mov
rcr
add
or
(bad)
pop
(bad)
push
jbe
ret
push
cs
add
jl
sub
xchg
cs
je
cld
mov
mov
icebp
lds
push
in
lahf
mov
push
dec
repz
mov
out
inc
mov
loope
inc
fadd
mov
adc
adc
mov
xchg
push
aas
pop
lods
addr16
mov
xchg
cwde
leave
inc
xor
mov
out
retf
fcom
sub
jmp
pop
add
cmp
out
ins
fs
dec
dec
cld
pop
fadd
jbe
mov
jb
mov
xchg
pop
jne
mov
iret
rol
mov
fistp
idiv
movs
or
push
dec
retf
clc
lods
jbe
test
cmp
fldenv
cmps
and
rdtsc
mov
push
pop
test
lds
xor
fs
dec
outs
jmp
inc
mov
dec
xor
int
xor
fsubr
mov
test
adc
inc
int3
mov
cmp
cmps
cmp
in
aas
mov
test
pop
data16
jg
or
dec
add
jmp
mov
jns
(bad)
loop
data16
cmp
and
js
gs
pop
repnz
jo
push
ds
dec
pop
or
fwait
add
push
movs
sub
or
mov
call
std
cmp
xor
outs
mov
(bad)
clc
or
cmp
repz
enter
or
dec
imul
cld
ret
sub
jae
and
push
jno
and
in
rcr
or
or
push
adc
jae
dec
sbb
sub
cmps
dec
call
ror
sub
xor
icebp
hlt
test
inc
fsubr
pusha
xor
out
mov
cdq
ror
jno
mov
cmps
sar
sub
mov
sar
xor
or
pushf
enter
xor
inc
dec
jecxz
stos
pop
dec
rcr
mov
or
mov
outs
jae
adc
loopne
mov
sub
sbb
call
jb
repz
pop
adc
push
pop
mov
es
test
aas
mov
pop
inc
sbb
sar
mov
cmps
dec
mov
or
sbb
cmps
mov
lea
xchg
mov
(bad)
mov
xchg
push
pushf
in
mov
xor
je
cmps
push
add
xor
outs
test
pop
xchg
(bad)
test
sti
mov
shr
xchg
daa
jmp
xor
add
push
ffreep
out
jmp
inc
ins
cmc
jecxz
daa
jle
pop
test
out
test
push
es
pop
or
inc
or
ror
fdivr
cmp
xchg
das
jg
scas
jnp
(bad)
retf
fld
imul
push
pop
js
inc
jne
inc
sub
dec
inc
ret
jo
xchg
push
or
cmp
mov
cmps
int
push
push
icebp
inc
inc
aas
imul
pop
test
frstor
lods
push
cdq
or
mov
out
jne
pop
mov
in
xchg
mov
jbe
ds
mov
push
stc
xchg
lods
(bad)
jl
ficom
icebp
icebp
mov
adc
and
sbb
nop
or
aas
bound
outs
xchg
xchg
inc
ficom
jp
(bad)
aaa
mov
mov
mov
ss
sub
lahf
push
mov
xchg
stos
lods
(bad)
or
je
pushf
(bad)
out
dec
(bad)
cwde
sbb
adc
sbb
mov
push
add
std
mov
push
xchg
lds
jae
add
or
jo
aam
(bad)
cmp
fcom
cmp
dec
pusha
push
in
movs
scas
ret
shr
push
ret
sub
and
fxam
jo
cmc
push
mov
xor
out
dec
mov
not
je
out
push
sti
(bad)
test
repz
and
jmp
fs
jae
sbb
mov
cmp
push
pop
xor
sub
add
popa
cmc
adc
mov
lods
pop
sub
js
push
fisub
loope
xchg
sbb
cmc
mov
xchg
sub
sar
mov
sbb
ret
jmp
mov
jmp
test
pop
bound
pop
ret
out
jbe
loope
pop
int
pop
aaa
frstor
(bad)
sbb
movs
mov
sub
cmp
add
fwait
mov
and
xchg
mov
icebp
cmp
or
pop
or
jg
dec
cmc
ins
adc
cmp
punpckldq
pop
shl
shl
loopne
test
lods
and
cmp
cmp
push
jo
inc
movs
cmps
and
stc
add
pop
sti
test
mov
sub
cmp
enter
add
mov
cmp
mov
cmp
mov
mov
out
pop
jecxz
jne
outs
loope
lea
rcl
call
cs
cmp
push
sub
jmp
adc
add
cld
ficomp
test
inc
add
sub
leave
xor
pushf
fwait
popa
sbb
xchg
sbb
fisttp
cmp
aad
fisubr
mov
inc
xor
fisubr
in
sub
jecxz
adc
std
mov
sub
ret
or
cdq
sbb
mov
(bad)
pop
pop
inc
mov
xor
mov
push
jne
stc
data16
dec
adc
stos
xchg
mov
dec
inc
or
add
and
jnp
push
xor
in
imul
sbb
and
sar
adc
lods
xor
scas
xchg
xchg
ins
jbe
mov
rcpps
aas
jne
ret
ja
adc
add
jbe
cli
sub
pop
dec
stc
mov
mov
xor
leave
sbb
mov
std
std
(bad)
fwait
adc
xchg
scas
fild
int
cs
and
sbb
jne
fidivr
retf
ror
sub
inc
or
and
les
fsubr
inc
jmp
xchg
or
ins
xor
mov
pop
loop
add
shl
push
add
pop
mov
xor
andps
jb
push
lds
add
jmp
ss
loop
cmp
adc
gs
lea
dec
adc
sub
ret
(bad)
sahf
dec
pop
sbb
test
icebp
or
sti
xchg
sub
push
add
call
xchg
pop
(bad)
je
sbb
inc
into
lods
mov
push
lods
or
cli
cmps
mov
dec
addr16
push
xchg
jns
js
or
je
out
dec
ja
(bad)
jbe
pushf
cmp
daa
fwait
es
and
mov
ror
pop
fiadd
adc
xchg
mov
cmp
dec
movs
data16
xchg
add
hlt
inc
cmp
pop
fild
and
ret
ins
dec
or
pop
daa
lds
adc
cmp
dec
dec
outs
inc
adc
sbb
jo
imul
pop
mov
ds
adc
leave
cmp
add
imul
jbe
mov
xchg
jno
sbb
mov
pop
or
(bad)
xchg
mov
dec
mov
lahf
mov
push
arpl
dec
pop
adc
cmp
xchg
imul
bound
jo
jle
stos
inc
lods
push
and
xlat
cmp
in
ds
lea
ret
leave
add
mov
adc
ror
fwait
popf
fs
or
enter
out
ds
popa
scas
and
pop
adc
push
in
mov
jno
into
jg
lods
adc
(bad)
cmc
adc
jle
sub
sbb
jmp
push
sbb
in
add
adc
fild
xor
in
inc
push
xchg
push
jp
xchg
sbb
or
sbb
cmp
jmp
cmc
push
adc
xor
xchg
pop
pop
loopne
pop
pop
jp
xchg
pop
dec
or
(bad)
loopne
(bad)
ror
mov
repz
adc
shr
and
sbb
jecxz
inc
lds
stos
iret
xor
rcr
xchg
mov
retf
dec
push
std
out
or
repnz
jecxz
shl
ins
lds
mov
or
sbb
repz
add
fisttp
movs
xor
mov
adc
fsubrp
or
cwde
xchg
icebp
call
inc
add
ret
stos
push
mov
cmp
mov
scas
add
mov
inc
out
arpl
or
ins
fcom
inc
lds
jnp
pusha
xchg
sub
into
inc
dec
inc
fst
and
inc
dec
pop
cmc
test
inc
inc
mov
add
mov
cwde
stos
sahf
ret
test
in
push
dec
lods
adc
mov
pop
mov
jmp
xor
jle
push
cmps
in
jmp
jb
jmp
test
add
cmps
xchg
sub
jmp
repnz
push
push
cmp
idiv
cmp
xor
and
in
push
xchg
mov
adc
mov
loop
daa
sub
cmp
pop
and
pushf
rcl
mov
data16
mov
mov
inc
sahf
mov
pop
popa
aas
push
jnp
mov
lea
js
nop
sub
(bad)
int3
mov
cmps
or
xor
xor
mov
jecxz
stos
leave
xchg
mov
xchg
rol
mov
sbb
mov
or
pop
inc
lea
and
mov
sti
bound
sbb
and
mov
std
call
(bad)
aad
adc
scas
jmp
ficomp
inc
push
scas
or
jl
sub
push
mov
and
popf
adc
jo
mov
mov
bound
mov
jmp
or
cdq
rcl
push
out
test
ds
loop
js
sti
add
or
bound
xlat
push
cmp
mov
call
lods
mov
adc
stos
test
push
mov
xor
cmps
cmc
mov
ror
leave
jae
outs
mov
test
popf
mov
mov
adc
mov
adc
sbb
(bad)
xchg
sar
sbb
test
push
add
sub
and
arpl
in
cdq
dec
call
in
stc
mov
mov
sbb
push
int3
adc
adc
sahf
mov
jmp
lods
jg
pop
inc
jb
shl
mov
popf
sub
mov
mov
hlt
les
mov
mov
in
sub
es
mov
jl
or
push
inc
inc
fsub
test
dec
adc
data16
xchg
inc
jp
or
pop
(bad)
adc
popf
xlat
ins
sub
cdq
cmp
scas
lds
rcl
rcr
stos
mov
mov
xor
push
fwait
sub
ins
or
inc
leave
jl
out
xlat
sub
daa
test
jmp
pop
lods
sbb
cmps
imul
sub
jl
push
les
xor
out
jge
sub
jb
jae
mov
pop
in
jle
lock
jae
dec
push
rcl
(bad)
std
ret
mov
popa
xor
rcl
cld
xchg
cmps
outs
add
inc
mov
mov
retf
jnp
pop
mov
jne
xchg
adc
sub
outs
sti
or
daa
pop
and
or
or
add
jle
cmp
xchg
dec
psllw
loop
or
add
sub
cmp
add
pushf
out
push
lods
es
xor
int3
pop
aam
cmps
mov
sub
pusha
mov
mov
(bad)
sub
movs
test
push
in
hlt
outs
mov
cmp
xor
jecxz
int3
dec
ret
cmp
xor
adc
ins
mov
jg
aad
addr16
jl
mov
ret
inc
scas
out
push
sar
adc
fnstsw
xor
push
mov
add
jmp
pop
or
dec
ja
inc
adc
add
pop
pop
mov
ja
mov
int3
hlt
adc
cmp
mov
sbb
ds
jno
mov
call
dec
mul
mov
scas
xchg
jp
aad
xchg
sbb
mov
ja
jmp
push
add
bound
mov
xlat
(bad)
mov
adc
ror
loope
push
push
gs
psadbw
add
xor
inc
lods
iret
hlt
adc
pusha
fbstp
test
les
scas
or
jmp
jge
xor
popa
in
xor
inc
mov
ins
sti
ja
xor
pop
jb
call
daa
and
jae
jb
int3
inc
add
hlt
push
repz
mov
leave
je
push
xchg
outs
out
push
sub
outs
add
adc
int
std
mov
(bad)
std
xor
mov
std
out
es
xor
inc
dec
lods
jmp
mov
lds
or
cmp
fisubr
repz
in
adc
xchg
ja
xchg
and
xor
stc
mov
mov
pop
and
and
pusha
gs
jb
cmp
cmc
sub
bound
sub
into
or
push
adc
int3
ror
push
mov
push
xor
mov
push
pop
pop
cdq
adc
in
popa
xor
cmp
and
imul
xchg
jns
xlat
loop
push
or
fxtract
dec
push
stos
mov
dec
(bad)
mov
ficom
test
rcr
jecxz
mov
mov
stos
add
adc
push
xchg
hlt
xchg
in
push
adc
xor
mov
fdivr
fucomp
lea
fidivr
mov
fstp
idiv
push
gs
jmp
sbb
fimul
shl
daa
(bad)
sbb
add
mov
(bad)
in
js
les
clc
lds
xor
bound
pop
jnp
movs
lods
int3
dec
popa
sbb
adc
jns
add
scas
outs
sbb
and
out
scas
mov
mov
and
dec
mov
adc
pop
pop
dec
xor
test
(bad)
mov
xor
(bad)
fwait
(bad)
call
pop
push
call
retf
out
xchg
test
jmp
popa
scas
jecxz
pop
and
shl
lock
scas
mov
xor
jns
cmp
in
cmc
dec
hlt
jle
cmps
(bad)
lea
or
mov
ret
pop
mov
sahf
and
jmp
sahf
pusha
cmp
or
ret
mov
xchg
mov
in
iret
fld
jecxz
outs
test
daa
les
fs
inc
movs
mov
mov
inc
cmp
jmp
jmp
fst
xor
jg
sbb
sbb
sbb
lods
cmps
aam
mov
(bad)
cli
ror
(bad)
cld
ja
jmp
mov
lock
push
cdq
push
out
jnp
popa
cwde
(bad)
sbb
lahf
xor
xchg
push
in
xchg
es
inc
mov
es
movs
outs
jne
and
sbb
fcomp
pop
aaa
cmps
in
test
push
jge
or
inc
lods
adc
stc
cmp
popf
push
dec
nop
sbb
cdq
shl
fabs
mov
pop
dec
adc
push
dec
xor
push
fs
sbb
xchg
or
add
jle
inc
arpl
and
dec
inc
push
ss
das
fcom
outs
mov
push
sbb
(bad)
pop
mov
pushf
add
or
cmp
adc
dec
aad
mov
mov
cmp
sub
and
mov
mov
mov
rol
test
dec
in
pusha
mov
mov
enter
out
test
xchg
xchg
fistp
dec
or
aam
sbb
in
xor
(bad)
repz
mov
cwde
into
pop
scas
test
jo
cmp
nop
movs
movs
fs
mul
lahf
rcr
inc
lods
sbb
lock
sub
call
cmc
pop
cmp
pop
jmp
mov
dec
into
pop
ret
ins
leave
bound
call
jge
arpl
fs
jns
inc
sbb
psubq
es
cmc
mov
arpl
outs
out
xor
sahf
push
jmp
lods
(bad)
shr
repz
in
cli
stos
xor
dec
adc
mov
icebp
push
pop
push
loopne
cmp
push
xor
mov
jle
or
adc
mov
ror
arpl
loopne
arpl
mov
jl
jns
and
dec
jmp
jae
sbb
pop
cdq
inc
dec
mov
shl
in
dec
mov
rcl
add
in
xchg
mov
xchg
and
mov
cmp
daa
in
xchg
stc
mov
dec
imul
stos
pop
add
adc
sbb
dec
xor
ja
and
pop
jae
popa
fdivr
dec
cmp
clc
dec
add
movs
sbb
movs
jns
cwde
mov
pop
adc
fbld
(bad)
jg
xor
dec
mov
fcomi
inc
dec
adc
pushf
sub
lds
std
xor
push
imul
das
cli
lea
xchg
dec
int
fwait
adc
push
xchg
ja
jl
(bad)
mov
xchg
push
fist
jno
sti
xchg
mov
mov
xchg
adc
mov
inc
or
and
(bad)
push
pop
fcomip
mov
shl
ins
dec
lea
enter
rcl
arpl
cmp
int3
adc
pop
push
jg
mov
(bad)
popf
loope
(bad)
inc
jns
ss
test
fimul
aam
outs
pop
sbb
mov
dec
rcr
mov
or
movs
gs
ds
add
ja
xchg
push
cmps
cmp
mov
addr16
mov
jp
push
sbb
lock
pop
into
sub
movups
mov
out
mov
shl
and
popf
ds
xchg
adc
lods
pop
pop
inc
inc
retf
loope
mov
mov
and
and
fs
out
cmps
cmps
mov
shl
out
repz
fbstp
loop
lds
add
and
inc
xchg
imul
and
xchg
dec
cmp
xchg
xor
jmp
loop
or
push
mov
lods
jae
jl
icebp
inc
jg
mov
int
add
mov
push
mov
pop
adc
sbb
pop
jmp
and
test
movs
dec
mov
enter
js
pavgw
push
aaa
or
hlt
push
jg
xchg
cmp
scas
(bad)
xor
xor
adc
mov
imul
mov
in
cmps
and
int
(bad)
xchg
push
cmp
retf
adc
or
cmp
test
cwde
rcl
mov
cwde
mov
or
js
lods
mov
test
sbb
scas
mov
dec
dec
xor
jno
int
fwait
ret
outs
cmp
in
fwait
(bad)
in
pop
into
xchg
mov
je
mov
inc
mov
loopne
movs
dec
push
out
sub
mov
add
pop
mov
lock
mov
push
(bad)
ins
jge
fidivr
cmp
das
pop
xlat
aaa
mov
jl
jmp
(bad)
fstp
jg
xchg
daa
jb
jg
in
imul
pop
out
cli
mov
aaa
jp
pop
int
call
call
int3
mov
hlt
cmp
lahf
imul
adc
mov
jno
outs
pop
out
leave
cmp
sbb
and
(bad)
rcl
xor
cmp
out
ds
fsub
jecxz
sub
mov
mov
out
in
into
js
push
ja
(bad)
lock
cmp
push
sub
jl
jg
rcr
fld
pop
(bad)
test
fsubr
outs
pop
sbb
movs
retf
push
arpl
jb
sub
jmp
in
sub
pop
lock
push
pop
push
push
shl
or
sub
loopne
ret
jecxz
popa
and
int
inc
das
popf
push
rcl
test
test
cmps
push
es
ret
retf
mov
test
xchg
mov
sbb
(bad)
pop
pusha
adc
xchg
mov
mov
and
addr16
pop
cmp
(bad)
sbb
test
ret
add
inc
jb
daa
data16
sub
xchg
add
sub
ret
fwait
xor
and
mov
or
dec
mov
xor
in
outs
adc
and
and
scas
adc
aas
scas
mov
add
stc
jecxz
js
dec
ds
fs
dec
imul
xor
cmp
imul
adc
retf
es
imul
ret
mov
xor
(bad)
jae
add
jno
jno
jbe
out
movs
xchg
(bad)
inc
adc
add
ins
mov
mov
js
bound
fnstsw
cmp
lea
mov
or
sahf
dec
clc
inc
mov
clc
shr
mov
mov
lods
sahf
ja
out
jnp
jecxz
jmp
jmp
mov
in
gs
lock
add
cmc
pop
test
and
inc
mov
jo
pop
mov
sbb
push
mov
fwait
push
stc
pusha
std
lea
enter
test
aad
(bad)
imul
ins
push
or
jl
mov
pop
shl
xor
sub
add
rcr
pusha
adc
in
cmps
xor
(bad)
not
sar
add
mov
movs
cmc
inc
add
sbb
mov
mov
push
addr16
jns
push
adc
dec
pushf
inc
(bad)
ret
aad
movs
enter
out
out
or
add
mov
jb
jo
test
popf
or
std
retf
add
fimul
icebp
mov
dec
ins
stos
push
in
sub
shl
(bad)
dec
(bad)
dec
hlt
fnsave
or
into
popa
retf
aas
movs
or
movs
pop
jo
fadd
jmp
xchg
fst
mov
ins
push
out
dec
pop
sahf
jne
in
std
sbb
sub
cmp
inc
push
(bad)
adc
add
aaa
jge
lea
jg
xor
pop
or
aas
(bad)
jo
xor
mul
inc
sti
mov
pusha
inc
mov
sub
out
mov
fbld
stc
push
int3
cmp
fsubr
int3
mov
aam
inc
pop
shl
retf
pop
adc
xor
es
movs
sub
shl
dec
push
xor
mov
adc
inc
loop
pop
stos
(bad)
push
mov
(bad)
jnp
dec
mov
out
pop
neg
test
mov
clc
mov
mov
lods
push
sub
iret
xchg
push
xor
dec
push
mov
outs
inc
xor
add
hlt
mov
mov
test
test
pop
or
push
aaa
xchg
lock
test
push
jne
dec
sub
inc
dec
inc
fcomp
mov
cmp
lock
and
xchg
and
movs
arpl
rcr
int3
mov
jo
adc
mov
bound
sbb
mov
pop
cdq
mov
call
jmp
lock
add
clc
aas
cmp
dec
mov
mov
jle
mov
in
lahf
and
fstp
jno
push
cmp
bound
push
out
(bad)
test
adc
fcomp
dec
out
(bad)
mov
in
ins
mov
push
mov
pop
jmp
inc
and
or
jno
pop
jmp
xchg
(bad)
and
test
sub
sub
movs
inc
adc
cmps
xor
aad
xlat
test
adc
outs
int3
cmp
inc
xchg
sbb
repz
sub
dec
pushf
sbb
shr
pop
(bad)
xchg
rcr
mov
iret
pop
lahf
mov
cmp
shr
push
cmp
mov
pop
xor
xor
rcr
inc
mov
dec
stc
add
in
xor
mov
frstor
dec
stos
sub
push
add
sbb
pushf
(bad)
inc
add
xchg
push
inc
push
cmp
push
jb
mov
jecxz
xchg
mov
or
mov
stos
repnz
jmp
inc
shl
out
imul
aam
jl
xchg
dec
lods
lods
scas
jbe
icebp
and
sub
out
fs
xchg
adc
imul
shr
repz
(bad)
pop
fucomi
add
test
in
(bad)
fs
lds
mov
xor
xchg
mov
xor
add
inc
lods
(bad)
test
shr
mov
xor
cwde
mov
and
push
test
mov
push
in
add
cdq
mov
mov
rol
jecxz
xor
nop
(bad)
stc
jge
movs
(bad)
jo
shl
add
or
bound
aas
scas
test
mov
adc
inc
xor
imul
push
sub
xchg
mov
pushf
mov
aam
inc
cmps
lods
mov
push
xor
mov
adc
mov
or
loopne
(bad)
cs
pop
push
mov
imul
dec
shl
dec
pop
pop
mov
dec
addr16
xor
push
mov
jo
shl
into
je
fwait
mov
imul
xor
aas
jno
stos
lock
mov
cmps
pop
ja
je
or
dec
in
mov
or
mov
mov
jae
shr
pop
adc
jne
movs
aaa
out
sbb
xor
cmp
hlt
push
shl
int3
jo
in
repnz
repnz
das
loopne
pop
pop
push
pop
mul
jge
leave
mov
das
add
jo
rcl
(bad)
pop
fs
gs
js
outs
mov
or
sub
clc
and
idiv
stc
ret
aas
scas
out
mov
pop
out
adc
fisttp
mov
icebp
cmps
(bad)
xchg
add
repz
pop
out
cmp
call
push
cwde
(bad)
fsub
jb
in
ds
sar
rcr
scas
vmovd
je
shl
int
lea
std
sub
push
cmp
adc
cmps
jne
cwde
mov
mov
mov
sub
mov
xor
xor
jmp
ficomp
and
push
add
jnp
movs
shr
adc
cdq
jp
mov
mov
mov
lods
stos
push
test
mov
inc
xor
xchg
or
fisubr
cld
loope
jo
xchg
sbb
and
push
mov
fdivrp
lock
mov
and
and
dec
pop
jb
inc
mov
movs
loope
push
sub
or
ret
add
loopne
push
ins
fcmovnbe
pop
and
inc
hlt
adc
(bad)
xor
hlt
push
jge
sub
jb
xor
fwait
rcl
adc
push
pop
ficom
jecxz
(bad)
movs
mov
mov
sub
push
sbb
cmc
mov
jp
ins
cmp
repz
inc
jb
sbb
cdq
(bad)
fbstp
mov
pop
in
pop
cmc
std
sbb
in
sub
in
inc
js
clc
shl
mov
std
jmp
outs
call
mov
cmp
sahf
inc
adc
js
xchg
mov
xchg
push
and
sub
stc
mov
mov
daa
cdq
int
retf
or
lds
jle
mov
mov
imul
xor
push
test
in
aad
hlt
adc
and
retf
ja
sub
repnz
mov
mov
push
jg
mov
dec
test
fistp
je
push
outs
adc
call
push
mov
retf
dec
push
clc
xor
rcl
jl
push
jle
pusha
out
int
jmp
jae
out
mov
sbb
jmp
fdiv
test
pushf
ds
sub
xchg
pop
pushf
test
mov
cwde
and
repz
imul
sub
fldcw
cmps
or
mov
push
out
or
ds
sbb
inc
xor
lods
add
dec
call
stc
jmp
mov
and
imul
ret
fsubr
popf
into
sbb
sub
repz
ins
aam
mov
jl
add
sti
je
call
sub
mov
push
jg
mov
clc
sbb
div
cs
call
cmp
arpl
hlt
loope
aam
or
jo
stos
and
in
in
call
mov
pop
push
push
mov
popf
push
aam
sub
(bad)
popa
imul
sar
xor
push
mov
jno
inc
cmp
add
lahf
or
retf
push
cli
in
call
jns
jmp
popf
pop
push
adc
jge
sub
xor
cs
sbb
lods
(bad)
and
dec
movs
loopne
(bad)
mov
adc
sbb
stc
rcr
outs
(bad)
or
xchg
popa
dec
repz
or
into
pop
movs
pop
jno
push
shl
(bad)
xchg
(bad)
mov
fisttp
(bad)
retf
and
or
(bad)
fs
add
out
loop
ret
ins
aad
mov
sbb
and
ja
cmp
lea
jnp
or
inc
movs
push
xrelease
cwde
and
lock
pusha
inc
inc
and
imul
sub
mov
fndisi(8087
into
lods
mov
push
movs
sub
test
mov
test
sbb
and
pop
enter
mov
and
(bad)
aas
lsl
sar
mov
jno
movntq
out
in
rcr
sar
rcr
push
adc
sbb
add
add
push
sbb
lods
sbb
lock
dec
div
jp
scas
jmp
add
mov
jns
and
addr16
das
in
movs
cmp
cli
sbb
mov
add
or
mov
mov
push
push
lods
inc
xchg
test
cmp
addr16
cmp
repnz
add
dec
adc
cmps
mov
xor
movs
pop
or
mov
js
addr16
jne
pusha
outs
mov
cdq
jno
ret
adc
clc
stos
xor
jp
fild
sbb
sbb
test
stc
cmc
into
in
adc
mov
dec
dec
sub
test
sub
ins
jle
push
adc
jbe
int
mov
inc
mov
shl
(bad)
xor
ins
lock
mov
call
int3
inc
mov
rcl
cmps
dec
push
in
sub
pop
(bad)
jns
pop
mul
xchg
mov
rcr
lahf
bswap
jle
inc
je
(bad)
rcl
add
sbb
test
cdq
imul
adc
jb
stos
stos
in
xchg
inc
nop
fldl2t
and
retf
call
mov
(bad)
fidiv
aam
inc
psrld
scas
(bad)
xor
adc
push
or
adc
(bad)
retf
and
scas
sub
iret
call
jo
xchg
jecxz
pushf
push
cs
gs
dec
mov
movs
cmc
fisubr
sahf
push
push
xchg
aaa
outs
(bad)
dec
dec
nop
push
fnstenv
pop
in
loop
ins
dec
or
inc
jmp
dec
pop
lods
mov
jl
sbb
jg
(bad)
clc
xor
int
pop
cmovb
and
loop
inc
cwde
xchg
fninit
test
adc
or
mov
sbb
or
stc
add
push
mov
jnp
sbb
and
scas
imul
dec
pusha
int
or
mov
inc
(bad)
inc
push
jo
mov
jnp
cmps
in
mov
iret
cmps
out
clc
lods
inc
sar
popa
icebp
mov
push
or
int
xchg
cdq
mov
sbb
push
scas
mov
jbe
ja
or
mov
push
dec
cld
icebp
mov
fwait
mov
fisttp
(bad)
cmp
inc
arpl
xor
or
jbe
sub
scas
sub
jl
or
mov
jmp
mov
dec
mov
sar
sub
xchg
mov
popa
aaa
sti
add
(bad)
jmp
aam
out
aaa
cmp
setp
push
daa
inc
mov
scas
pop
fs
jne
add
xor
gs
in
addr16
bound
enter
lea
stos
(bad)
inc
jbe
rcl
shl
int3
sar
jl
cmps
adc
aad
pop
daa
cld
enter
push
adc
shl
call
movs
(bad)
div
jmp
int3
mov
popf
pop
inc
into
outs
fucomip
loope
shr
sbb
mov
mov
dec
cld
call
add
ret
xor
in
pop
push
jecxz
sub
fistp
bound
adc
add
ror
retf
dec
pop
and
ds
fdiv
sbb
pushf
dec
pop
sahf
pushf
adc
daa
cmovno
xchg
push
mov
repnz
aaa
adc
pushf
xchg
cmp
jecxz
jmp
test
xchg
fdivr
jl
or
and
inc
repz
popf
sub
xor
test
retf
bound
pop
cmps
repnz
cmps
rcr
xlat
enter
cmp
dec
retf
dec
push
ret
fst
(bad)
mov
int
xchg
sbb
dec
mov
repz
cmp
fsubr
jo
clc
cdq
pushf
or
jo
jne
add
loop
bound
and
int
add
and
push
or
inc
xor
lods
(bad)
push
pop
retf
dec
pop
mov
stc
lock
dec
xchg
das
jle
scas
enter
xchg
lock
fistp
mov
and
sbb
pop
pop
sbb
rcl
mov
fmul
push
scas
movs
ins
das
cmps
pop
test
aas
jb
bound
push
jb
ss
cmp
jg
xchg
ror
mov
sub
fsubp
pop
js
xchg
sub
jne
jg
push
mov
cmps
sbb
pop
or
les
aad
mov
jb
lock
aam
cmp
mov
jge
xchg
js
pop
dec
jae
in
into
jno
dec
call
dec
leave
pop
addr16
push
imul
jecxz
add
imul
hlt
push
icebp
cmp
imul
pop
or
ror
push
mov
cmp
and
xlat
inc
lods
mov
retf
fiadd
mov
and
cmc
call
adc
inc
fld
sbb
in
fbstp
std
inc
jb
lods
out
mov
inc
mov
and
xchg
and
jge
push
dec
sub
scas
jecxz
dec
call
jecxz
cmp
std
lahf
stc
pop
jmp
ror
sbb
cmp
cmp
call
(bad)
out
ins
xor
cmps
adc
xor
jmp
test
mov
or
(bad)
sbb
std
adc
sti
jno
iret
push
inc
stos
fistp
das
mul
sub
out
movs
push
je
jmp
leave
and
xchg
mov
ss
stos
push
dec
mov
in
mov
jb
adc
pop
or
inc
add
jb
in
enter
in
dec
adc
out
lds
pop
lods
retf
aam
or
jae
lea
pusha
(bad)
mov
outs
push
out
fld
dec
mov
dec
pop
pop
inc
lods
adc
leave
mov
mov
mov
mov
push
ror
pushf
imul
fimul
ror
xor
imul
mov
mulps
retf
call
cmps
cld
bound
jne
mov
mov
jg
mov
aam
xchg
inc
sbb
cmp
adc
jns
test
arpl
jecxz
xor
not
pushf
aaa
stos
scas
cmps
js
mov
push
clc
(bad)
out
cmp
add
test
jmp
retf
or
mov
xor
les
iret
hlt
xor
call
mov
into
inc
cmps
rcl
and
sbb
sbb
aas
out
in
dec
cmp
sbb
cmp
outs
loopne
pop
imul
inc
pushf
retf
xchg
icebp
cs
add
aad
adc
mov
inc
cmp
pop
mov
sub
movs
rol
std
outs
aaa
add
clts
and
test
pop
sbb
jmp
inc
or
mov
cli
push
repz
jb
stc
das
pop
das
test
mov
mov
inc
ret
mov
out
lds
add
ret
ins
push
cdq
mov
lea
push
enter
and
clc
out
jl
(bad)
fdivr
sti
in
add
mov
inc
pop
outs
push
out
out
pop
jo
push
pushf
inc
aas
test
test
(bad)
ficom
mov
sub
sbb
dec
xchg
and
ja
in
and
and
popa
push
or
out
and
xor
dec
js
dec
inc
(bad)
xchg
pop
in
adc
sub
push
les
inc
inc
adc
dec
bound
push
dec
mov
push
cmc
pop
ds
imul
loop
sub
mov
mov
add
test
cld
div
or
adc
pop
mov
sbb
popa
cmp
mov
std
enter
inc
pop
imul
pminsw
ret
lea
pushf
mov
addr16
repnz
mov
xor
addr16
jmp
xchg
fbstp
xlat
adc
loopne
popf
pop
rcl
ja
sti
dec
jb
neg
push
jg
lods
pop
mov
add
or
mov
ret
mov
std
and
mov
in
push
pop
jmp
or
adc
add
ror
loope
dec
push
inc
cdq
fdivr
test
and
cmc
push
scas
xor
or
pop
dec
shr
and
pop
imul
sbb
ror
stc
test
jae
xor
mov
cwde
mov
sar
(bad)
adc
adc
adc
dec
pop
and
cmps
scas
xchg
clc
add
(bad)
in
mov
add
or
push
clc
mov
adc
mov
adc
sti
lods
and
mov
popa
out
and
xchg
push
scas
daa
mov
push
ins
cmp
fmul
adc
and
shr
int3
xor
enter
psubq
iret
retf
(bad)
enter
mov
shr
mov
dec
mov
xor
jae
sbb
push
pop
mov
imul
adc
nop
inc
mov
mov
gs
(bad)
clc
repz
test
pushf
lahf
mov
data16
stos
cmp
adc
shl
bound
mov
cmp
leave
out
mov
mov
sbb
test
xchg
mov
scas
xchg
lahf
jnp
push
cmp
(bad)
dec
fucomp
xor
retf
and
sbb
call
jp
sbb
pop
mov
adc
pop
sub
mov
cmp
lds
jecxz
mov
cmp
adc
dec
stos
int3
loope
push
pop
xchg
lds
in
(bad)
stos
ds
daa
mov
fsubr
inc
hlt
sub
cmp
ins
int3
xchg
xchg
sub
jo
retf
jle
mov
scas
loopne
jmp
cld
lea
dec
stos
fidivr
sub
sbb
out
add
cmps
pop
pop
sar
xlat
jb
lods
push
xchg
mov
push
sub
ins
mov
add
js
add
mov
js
and
mov
xor
call
imul
pop
push
jne
mov
jge
jge
adc
mov
scas
xchg
push
xchg
cmp
lods
sbb
dec
aas
jbe
lahf
cs
loope
jae
push
je
xor
clc
cmp
xor
push
popf
int3
push
inc
xchg
mov
push
outs
clc
mov
test
fstp
add
mov
add
lods
scas
jno
sbb
mov
cmp
es
sub
fwait
hlt
pop
arpl
mov
lods
add
and
std
xchg
sbb
enter
adc
mov
adc
dec
mov
(bad)
fadd
mov
mov
fs
sub
daa
mov
jecxz
xchg
pop
xchg
push
popa
(bad)
sub
nop
arpl
pop
adc
adc
jo
adc
fnstsw
call
sub
push
jge
jbe
inc
inc
push
fs
jnp
mov
(bad)
lods
adc
inc
mov
or
mov
jo
xchg
(bad)
(bad)
mov
pop
and
sub
(bad)
retf
adc
mov
inc
test
or
jecxz
inc
cmc
add
adc
cmp
in
stos
test
pop
push
adc
scas
xchg
push
pop
or
mov
mov
push
ret
fcom
sbb
call
clc
scas
xchg
dec
call
dec
aam
or
sub
dec
pop
push
loopne
dec
jmp
fucomi
cmp
push
jae
mov
pushf
paddd
(bad)
fld
cmp
sbb
inc
test
mov
jp
jecxz
add
fs
ins
jmp
out
mov
in
mov
pop
cmp
push
retf
call
or
dec
loope
push
mov
mov
jecxz
push
add
scas
push
jno
jb
lea
or
mov
dec
aaa
je
icebp
cmc
pop
push
or
movs
jne
sub
mov
loopne
dec
cli
(bad)
in
sub
xchg
mov
loop
push
cmp
fisttp
dec
jmp
inc
cwde
cmp
fstp
push
jge
mov
add
or
sbb
and
jbe
cmp
and
sbb
aas
shr
dec
xor
int
adc
mov
jno
sahf
ficom
pop
pop
mul
mov
xchg
lds
jg
pop
(bad)
in
mov
xor
xchg
test
cmp
lock
pop
mov
lea
aam
add
xchg
lock
daa
data16
test
dec
xchg
adc
jl
icebp
or
ja
shl
push
aas
in
push
xchg
and
xor
test
cmp
xor
push
call
inc
mov
add
outs
jb
mov
inc
push
movs
inc
repz
dec
jo
adc
shl
or
dec
aad
inc
push
mov
mov
mov
std
retf
jmp
sub
jae
mov
lahf
les
(bad)
or
int
dec
js
mov
(bad)
aaa
cmp
es
inc
jnp
pusha
jnp
mov
xchg
xchg
or
fs
call
std
push
push
shl
jns
ins
cmp
xchg
(bad)
iret
cmp
push
nop
cmps
scas
sub
mov
and
sbb
(bad)
mov
push
outs
dec
mov
mov
movs
adc
mov
aas
inc
fist
xchg
enter
push
rcl
jnp
xor
scas
jnp
loope
iret
sti
fstp
in
lods
lods
push
sti
sbb
sti
cmps
add
inc
sbb
jne
xor
or
dec
out
cdq
loopne
jmp
imul
in
xor
retf
sbb
sbb
mov
cs
add
mov
mov
dec
push
jbe
lea
or
scas
std
mov
jecxz
imul
inc
mov
scas
ror
cli
mov
sbb
mov
and
adc
adc
jmp
(bad)
lahf
adc
dec
jo
popa
jmp
mov
xchg
push
jne
fisttp
mov
outs
loopne
mov
imul
cmp
xor
or
pop
jl
pop
dec
mov
inc
pop
or
or
or
ss
pop
mov
xor
fstp
push
shr
sub
dec
and
call
mov
cmps
mov
popa
jge
aam
jnp
(bad)
fs
inc
sbb
inc
mov
or
sti
inc
inc
aam
les
cmps
imul
pop
cmp
inc
push
aad
inc
hlt
imul
into
mov
ss
arpl
jle
rol
(bad)
imul
je
les
in
cmps
lods
mov
pop
loope
(bad)
push
xor
mov
(bad)
cld
push
sub
push
cmp
xchg
repz
mov
les
jge
xor
jg
retf
push
adc
jo
fimul
jmp
adc
sub
mov
jg
add
xor
adc
les
ds
pop
xchg
jl
stc
lods
xor
pop
rol
inc
xchg
dec
rcl
push
ret
loopne
xchg
jge
retf
ror
mov
jecxz
or
fmul
test
and
mov
adc
js
pushf
cdq
out
fbstp
push
xchg
pop
adc
arpl
ins
mov
pusha
cmc
in
(bad)
lock
adc
call
sbb
xchg
sbb
and
inc
cmp
mov
fwait
or
add
pop
cli
jp
popa
leave
pop
ror
je
in
call
retf
aas
out
or
dec
jle
push
cmp
pusha
sub
leave
aaa
pop
imul
js
fs
cmp
stc
test
int
or
loop
hlt
jb
into
push
push
ins
mov
add
xchg
mov
pusha
stos
cmps
cmp
inc
cmp
ror
adc
aas
adc
imul
dec
cld
inc
loope
call
cs
xlat
jle
push
mov
sbb
lods
(bad)
cmp
shl
dec
je
outs
jle
call
dec
sbb
jno
cwde
push
ret
into
sahf
sub
xor
cmp
adc
jne
sahf
ret
mov
gs
jo
jno
pop
push
mov
fnstsw
pop
(bad)
movs
mov
lds
mov
lock
clc
add
dec
js
scas
test
(bad)
div
adc
jmp
addr16
xor
sahf
pop
call
xor
xchg
dec
movs
pusha
dec
cdq
jmp
jg
jne
push
push
xlat
fiadd
adc
pop
push
mov
sbb
sub
pop
jnp
imul
xchg
or
push
movs
or
sub
es
ficomp
imul
test
mov
cmp
scas
clc
cld
or
sbb
dec
mov
push
rcl
or
das
mov
xchg
and
ss
cmp
jmp
out
adc
fsubr
inc
stos
rcr
sub
xchg
aam
test
out
jbe
loop
data16
adc
adc
push
call
cmp
pop
lea
ret
icebp
rol
or
inc
pop
sbb
and
cmc
mov
(bad)
test
or
mov
lods
mov
shl
(bad)
mov
xor
cmps
mov
push
cwde
enter
mov
imul
or
test
mov
inc
ss
(bad)
xor
sbb
mov
sbb
test
jnp
ins
fadd
ror
aas
push
push
pop
ror
test
test
jmp
xchg
mov
xor
lahf
enter
cmp
mov
push
test
xchg
pop
std
adc
enter
mov
fild
xlat
in
push
(bad)
push
setne
xchg
mov
or
jae
ja
lahf
add
adc
scas
shl
add
inc
and
mov
ins
sbb
sub
and
add
jmp
sub
xor
ins
ret
xchg
cmp
je
sub
jne
inc
xchg
out
ds
imul
sbb
dec
arpl
cmp
sub
cmps
ins
inc
mov
aam
out
ss
outs
ficom
xor
fadd
jp
add
cmps
jne
dec
push
pop
sub
dec
lahf
push
add
adc
mov
cdq
sub
push
push
jno
ret
in
and
rol
cmp
(bad)
xor
mov
gs
or
mov
dec
test
adc
add
or
neg
adc
pushf
jo
cmps
push
pop
std
xchg
cli
sahf
fs
outs
les
mov
add
(bad)
mov
pop
or
out
ins
inc
pop
in
ficom
ffreep
sbb
sahf
(bad)
push
inc
shl
lahf
or
or
jl
and
xchg
push
adc
movs
and
and
fisttp
test
int
xrelease
jnp
test
iret
lods
pop
lahf
nop
ret
popf
into
add
push
aam
mov
and
xchg
fyl2x
fmul
mov
js
xchg
pop
gs
pop
clc
add
ds
sahf
mov
ins
pop
dec
bnd
push
lock
mul
and
popa
xchg
mov
retf
and
pop
cs
loop
mov
arpl
outs
pushf
xchg
jmp
jp
pop
mov
adc
dec
lahf
std
nop
(bad)
dec
sub
lock
lods
adc
or
call
(bad)
jbe
cwde
stos
cmp
(bad)
jge
ret
and
or
xchg
mov
sbb
rol
push
(bad)
or
mov
cmps
loope
call
shr
(bad)
scas
cmp
xchg
sub
movs
rcl
retf
adc
mov
or
jp
call
cld
jb
out
rcl
sub
inc
mov
dec
jo
hlt
push
lods
(bad)
aaa
push
mov
ja
cwde
fidivr
or
inc
leave
sahf
and
sub
pop
pop
cmps
xor
jecxz
aam
leave
lods
movs
jl
cmp
es
test
xor
inc
pop
xchg
xchg
and
call
dec
shl
xchg
clc
repnz
(bad)
jmp
data16
jge
dec
sub
pop
js
inc
arpl
dec
pop
sub
lea
push
pop
mov
int3
das
xor
outs
popa
push
xchg
dec
int3
retf
pop
sub
lock
and
pop
les
fcmovnbe
out
dec
xchg
lds
add
int3
sub
iret
cmp
(bad)
call
jne
scas
ja
lea
push
jb
pop
ins
jp
pop
jae
cmp
out
and
inc
dec
rep
adc
mov
lods
add
in
xchg
jae
inc
shr
dec
test
retf
hlt
mov
repz
push
and
(bad)
xchg
icebp
push
inc
mov
in
adc
mov
pop
pop
dec
push
test
pop
inc
xchg
sbb
aam
dec
pop
sbb
pop
clc
sub
inc
mov
lods
fs
xor
or
leave
inc
jbe
arpl
nop
ss
lods
inc
pop
icebp
sar
fild
clc
xchg
xchg
adc
xor
mov
retf
dec
mov
inc
sub
in
adc
nop
jae
fnstsw
(bad)
leave
xchg
fstp
jl
mov
jmp
inc
push
jns
in
pop
xchg
sub
fbstp
push
lock
xor
inc
test
pop
push
xchg
sub
gs
and
inc
adc
stos
add
ins
test
pop
adc
or
push
mov
cmp
or
into
dec
push
test
push
jge
ins
jnp
stc
out
rcl
cs
(bad)
sub
adc
and
mov
icebp
xor
inc
jbe
mov
push
dec
ja
movs
in
out
cmps
ficom
cmp
(bad)
cs
(bad)
repz
xor
pop
data16
mov
punpckhbw
add
mov
jecxz
imul
sbb
adc
jno
mulps
pusha
push
jmp
shl
push
aad
xor
cmp
or
sub
and
ja
mov
imul
test
push
(bad)
cmp
inc
dec
sbb
add
push
push
pop
test
ins
fwait
inc
mov
dec
daa
xchg
mov
mov
push
xchg
xor
test
rcr
sub
or
mov
pop
ret
addr16
mov
ret
jns
mov
daa
mov
int3
out
movs
test
lock
mov
push
push
shl
test
test
push
scas
lods
push
mov
xchg
fistp
(bad)
mov
sar
mov
pop
inc
push
add
mov
cmps
add
repz
mov
repz
lea
pop
stc
and
adc
sub
nop
jmp
push
mov
push
push
stos
outs
push
add
test
mov
dec
test
js
mov
(bad)
push
lahf
or
shl
dec
int
pop
repnz
and
(bad)
mov
iret
mov
(bad)
xchg
inc
pusha
loop
xchg
repnz
and
stos
push
add
jno
inc
mov
push
pushf
xchg
retf
fldcw
mov
stos
outs
imul
in
ret
in
jge
cmp
das
push
adc
xor
pusha
xchg
xor
dec
dec
rcr
lods
aam
jmp
cmp
pop
inc
sub
test
test
std
(bad)
inc
and
pop
mov
test
mov
ret
rol
enter
mov
inc
push
iret
cmp
xchg
rcl
push
iret
or
sar
call
push
lods
addr16
mov
pop
sub
jns
push
out
xor
and
mov
out
test
or
sahf
jno
sbb
jns
push
scas
cmp
jmp
lods
imul
cmp
sbb
add
es
scas
push
lds
gs
xor
cs
lahf
outs
rcr
dec
stos
xor
in
js
sub
ins
xor
or
jb
in
jno
jge
add
fcomp
add
mov
pop
dec
rcl
shl
xor
mov
cld
arpl
repnz
sub
and
aaa
inc
sub
fisubr
xor
dec
jb
cmp
pusha
and
popf
fsub
mov
jne
das
ret
aaa
div
inc
bound
push
inc
data16
mov
inc
push
push
and
je
inc
and
push
mov
dec
adc
ja
mov
mov
cld
pop
jg
cli
hlt
adc
cmp
add
xor
push
retf
inc
cmps
icebp
leave
scas
sub
jmp
test
cdq
data16
push
nop
and
sbb
shr
push
add
les
aad
mov
int
test
xchg
aad
mov
es
cmp
lahf
xlat
aad
js
aam
dec
xchg
popf
inc
daa
jle
mov
pop
cmc
push
(bad)
imul
stos
cmc
xchg
xor
or
inc
or
aad
pop
(bad)
enter
lods
inc
stos
jb
addr16
gs
neg
out
aaa
fadd
jmp
(bad)
movs
push
shr
leave
dec
rol
dec
vmwrite
or
outs
js
adc
jp
cld
xchg
lock
jb
dec
mov
cmc
adc
dec
ss
sbb
stos
add
inc
test
mov
sbb
mov
daa
and
lds
(bad)
or
xor
enter
sbb
psubw
fstp
sar
movs
je
and
adc
int3
pushf
mov
je
or
jbe
jmp
mov
addr16
loop
cmp
mov
stos
sbb
leave
scas
cmp
dec
mov
add
xchg
pop
(bad)
jmp
aam
fist
nop
test
or
xor
outs
shr
ja
cmp
mov
cmps
push
bound
icebp
stos
pop
inc
or
(bad)
dec
mov
mov
(bad)
jae
adc
fsubp
xchg
iret
push
(bad)
sbb
add
cmp
dec
shr
sbb
pop
push
mov
shl
mov
add
das
ins
ror
pop
int
and
mov
cdq
or
dec
mov
sti
mov
sub
retf
inc
cmps
pop
sub
icebp
rol
(bad)
into
mov
mov
sahf
xchg
sbb
cld
cwde
fs
push
pusha
mov
pop
cdq
push
fcom
stos
xor
jns
push
push
jg
lock
aaa
les
leave
or
lahf
lods
ins
iret
es
ret
sub
pop
sbb
cli
push
xchg
jne
or
mov
xor
cmp
cli
pop
jae
pop
cmp
push
mov
(bad)
jae
mov
jmp
(bad)
outs
mov
ins
jns
or
mov
xchg
(bad)
mov
jbe
push
mov
out
mov
int
nop
jbe
sbb
xchg
fild
lea
call
xor
lock
xchg
sub
mov
outs
or
sub
outs
call
push
test
xchg
mov
adc
or
sub
call
mov
dec
aad
sbb
cmp
or
cmp
sub
cmp
sar
fcmovu
(bad)
out
inc
cmp
jb
sbb
jecxz
aam
jmp
inc
cmp
scas
push
jecxz
xor
mov
inc
push
(bad)
hlt
push
jnp
pop
xlat
sbb
cmc
add
xor
cld
adc
mov
mov
add
(bad)
fstp
cmc
sub
push
dec
loope
and
adc
call
lods
push
(bad)
retf
xchg
sub
add
test
mov
stc
test
out
dec
out
and
inc
cs
out
test
clc
inc
test
add
in
adc
lea
push
add
inc
fimul
sub
xchg
movs
cld
jns
fisub
xchg
fs
dec
aaa
push
add
nop
lds
aad
loop
nop
(bad)
lock
(bad)
mov
push
ins
mov
int3
sub
daa
or
sbb
call
shl
push
push
and
sub
xchg
lods
data16
xor
sbb
push
add
loop
out
ret
leave
xor
mov
cwde
mov
sbb
mov
cwde
bnd
pop
cli
int3
or
dec
and
cmps
(bad)
shl
sbb
and
push
sahf
lods
mov
xor
push
pop
cdq
mov
popa
pop
and
stos
dec
or
enter
and
rol
je
adc
aam
pushf
sub
push
or
aas
jae
enter
sbb
jmp
cmps
ret
mov
in
dec
push
jp
dec
and
add
mov
fmul
cmc
dec
pusha
dec
popf
or
pop
xor
pop
jae
dec
movaps
pop
xchg
pop
add
mov
out
sbb
sar
push
sbb
jmp
pop
sub
sbb
push
addr16
jmp
jle
cmp
mov
repz
pop
loope
jecxz
xchg
cmp
cli
mov
xor
(bad)
bound
add
sbb
ins
bswap
pushf
leave
test
sbb
add
mov
jp
add
xchg
jl
pop
jb
xchg
mov
inc
mov
clc
dec
push
nop
int3
std
repnz
dec
in
lods
jmp
clc
icebp
sub
sub
push
sbb
mov
mov
out
mov
sti
xor
cmps
fwait
push
adc
and
movs
pushf
xor
fbld
outs
sub
aas
stos
int3
loop
enter
rol
in
or
adc
pop
(bad)
fdiv
shl
add
jne
lea
cdq
cmp
inc
outs
mov
cmc
dec
es
push
sbb
sar
mov
push
retf
jle
in
mov
pop
mov
pusha
pop
xor
lea
and
into
enter
das
ror
mov
xchg
cmp
in
arpl
adc
push
fsub
sbb
mov
sbb
jg
cmps
leave
or
jp
mov
stc
mov
sub
js
loopne
repz
mov
pop
test
into
fmul
or
mov
sub
jge
inc
lods
fdiv
push
cmps
sbb
aad
int3
mov
mov
adc
cld
lock
cdq
and
xchg
lods
sbb
scas
mov
sar
ins
jne
outs
call
push
sub
je
retf
xor
test
or
sti
add
xchg
cmp
mov
dec
adc
mov
or
aaa
mov
or
inc
jnp
stc
test
das
push
sub
mov
sub
cwde
xor
inc
push
lods
pop
xchg
mov
push
push
aad
dec
dec
enter
sbb
mov
jge
ja
push
enter
test
mov
or
jbe
sub
bnd
add
push
inc
jno
test
xchg
loop
test
mov
inc
je
and
cmp
ror
adc
lds
pop
in
retf
xchg
mov
in
mov
fwait
out
adc
fwait
sbb
sbb
jne
ret
(bad)
imul
mov
dec
adc
pop
mov
outs
jns
adc
xchg
jbe
je
add
pop
push
jnp
and
imul
pop
add
dec
je
sub
data16
fdiv
in
add
sub
movs
repnz
stos
adc
cmps
cli
pop
in
ins
push
mov
add
sbb
dec
xor
inc
aaa
das
mov
fcomp
or
arpl
mov
add
jmp
xor
pop
xchg
sahf
jae
stos
xor
test
frstor
in
jo
push
push
inc
mov
jo
por
ins
push
sbb
jne
push
xchg
inc
leave
cdq
add
inc
cmc
frstor
jae
mov
aaa
sbb
call
push
cmp
cld
cmp
test
sub
fst
shl
shl
movs
mov
test
xlat
rcr
push
xchg
stos
mov
push
lock
fsubr
fs
and
xor
dec
(bad)
movs
adc
push
adc
jle
mov
pop
fmul
xchg
dec
test
and
mov
jp
xchg
dec
push
push
xchg
ret
push
(bad)
or
xchg
add
push
test
add
sbb
jg
push
aad
adc
sbb
ds
push
pop
push
or
cmps
add
addr16
jnp
fld
bound
mov
adc
mov
mov
movs
fadd
pop
dec
mov
pop
pusha
push
ja
inc
in
(bad)
xor
push
in
inc
and
out
push
mov
int3
pop
retf
clc
leave
pop
(bad)
inc
shl
test
cmp
mov
push
ret
sbb
mov
cmovl
inc
xchg
jmp
xor
pop
lods
(bad)
lea
arpl
js
fcmovnb
in
lea
pop
jmp
mov
cmp
cmp
jmp
cmps
push
fistp
push
ins
lea
or
in
movs
xor
or
(bad)
push
push
push
adc
ret
pop
fwait
push
call
cli
pop
repz
sbb
push
ins
sbb
imul
stos
pop
jae
setb
sbb
pusha
aad
mov
xor
jmp
push
lods
mov
add
test
add
adc
ret
pop
pop
aas
retf
lea
ficom
adc
mov
push
sahf
cmp
and
jmp
cmp
(bad)
int3
loopne
xor
out
push
arpl
int3
cli
pop
cli
dec
mov
gs
call
inc
pushf
and
mov
push
std
test
pop
dec
xchg
mov
js
pop
out
push
jno
cdq
pop
movs
(bad)
and
icebp
dec
cmp
mov
inc
sub
sbb
mov
sub
repz
clc
data16
in
xchg
mov
movs
push
not
mov
dec
punpcklwd
pop
mov
dec
adc
outs
ret
xchg
mov
lds
fs
pop
aam
in
adc
sti
retf
ffree
jns
dec
mov
mov
(bad)
ficom
jmp
sub
dec
add
jb
or
mov
call
in
mov
xlat
dec
daa
inc
inc
mov
scas
mov
ret
clc
adc
mov
(bad)
fs
mov
mov
mov
mov
or
xchg
mov
lods
xchg
sbb
inc
fstp
in
jle
call
cmp
cmc
and
mov
jae
popa
mov
std
pop
ds
jmp
(bad)
lds
out
pop
push
rcr
xchg
pop
leave
add
movs
aaa
push
imul
int3
jg
popa
push
inc
jmp
in
xchg
rcr
pop
dec
cmp
push
call
cmp
ins
(bad)
xor
dec
cmc
inc
mov
add
or
fimul
cli
sub
fwait
adc
call
push
mov
icebp
mov
push
scas
pushf
mov
outs
cmps
cmps
nop
mov
push
imul
arpl
sub
pop
and
js
shr
push
jle
fcmove
leave
pop
mov
imul
sar
sbb
sub
jns
scas
sub
gs
ja
mov
adc
gs
jmp
push
hlt
leave
fidivr
ss
mov
bound
mov
mov
jge
pop
stos
adc
add
add
aaa
pop
in
jnp
into
sahf
mov
cmp
test
cmps
xor
adc
pop
arpl
and
mov
sub
daa
aas
loop
aad
push
cmps
fdiv
arpl
add
xchg
push
(bad)
leave
mov
or
ret
bound
fcmovne
out
pop
cs
jmp
cdq
cmp
rcr
sbb
fnsave
repz
gs
ret
push
imul
pop
xchg
sar
test
adc
sub
cmc
rol
sub
fcmovbe
ud0
data16
call
jmp
fst
mov
div
shr
push
jmp
into
pop
(bad)
push
cs
xlat
dec
shl
xor
mov
dec
(bad)
sbb
mov
push
jmp
leave
jno
ja
ds
and
lds
mov
ds
jmp
mov
push
mov
(bad)
outs
out
mov
icebp
dec
xchg
jp
mov
jb
or
pop
dec
inc
push
(bad)
mov
jmp
mov
(bad)
mov
mov
mov
loopne
push
cmp
xchg
jo
ins
xchg
fwait
mov
sbb
dec
mov
cli
pushf
inc
shl
cmp
ins
(bad)
dec
pop
xor
(bad)
mov
aaa
xchg
push
aas
xchg
ja
sub
into
adc
jp
and
xchg
pusha
xchg
mov
pop
scas
and
mov
adc
xchg
sbb
movs
and
stos
dec
sub
xchg
xchg
sub
test
scas
inc
pop
cdq
jb
sar
mov
fcom
sub
outs
mov
dec
lods
jns
in
xor
inc
pop
call
lea
gs
jecxz
push
xor
ror
cmp
xor
call
jae
loopne
in
cmp
adc
lods
seta
cld
ret
rol
pop
cmp
(bad)
cli
pushf
dec
jle
xor
add
jmp
add
test
push
fnstsw
push
pusha
mov
xchg
rcr
cwde
mov
and
adc
mov
fdivrp
push
lods
aam
call
push
cmp
lods
adc
lods
inc
add
rcl
sub
push
daa
push
(bad)
mov
je
stc
and
mov
jo
mov
shl
adc
mov
add
dec
sbb
data16
movs
fld
mov
mov
scas
xchg
ror
lahf
aas
add
jo
(bad)
jnp
push
(bad)
aad
cld
test
lahf
rol
lods
jp
stos
dec
and
dec
outs
popf
fmul
loope
ret
stos
ins
pop
add
pusha
in
mov
(bad)
imul
sub
mov
cdq
and
leave
arpl
inc
ret
mov
cmc
inc
jp
movs
and
ins
mov
cmp
(bad)
pop
cmps
data16
rol
shl
push
sub
sbb
cmps
daa
pusha
jmp
pusha
inc
arpl
pop
in
mov
ret
or
pop
sub
xchg
sub
loope
xchg
push
xor
dec
pusha
jnp
inc
cli
and
or
sub
jnp
mov
cmp
sub
sbb
je
das
fnstcw
jg
push
cmps
out
mov
or
push
stos
adc
mov
ja
or
cli
mov
lds
(bad)
mov
cli
adc
(bad)
in
push
sbb
fwait
lods
push
xor
(bad)
adc
jae
xchg
mul
jae
mov
sbb
cmps
retf
fadd
xchg
in
add
sbb
inc
out
mov
lea
cmp
call
sahf
adc
data16
sub
ds
push
rol
xchg
or
lock
pop
lahf
ja
cmp
cld
rcr
shl
fst
js
xchg
adc
mov
sbb
lock
jno
retf
mov
or
int3
push
cmp
sbb
or
movs
imul
mov
rol
lahf
push
dec
test
xor
inc
xchg
clc
or
sbb
mov
xchg
loop
repnz
fbld
aas
sub
cmp
int3
pop
(bad)
out
pop
aam
pop
xchg
mov
data16
stos
dec
movs
ror
bts
xchg
test
jge
sbb
xchg
xor
imul
jle
jmp
jb
xchg
jmp
jne
ds
aam
dec
int3
sub
loopne
cli
sub
mov
jmp
(bad)
xor
ficomp
bswap
mov
call
mov
mov
in
push
in
mov
test
push
lahf
inc
(bad)
aad
(bad)
pop
inc
or
fbstp
rol
popa
jl
(bad)
test
retf
push
xchg
inc
jmp
jp
sahf
xlat
rcl
inc
adc
push
and
cmp
jle
bound
sar
inc
nop
mov
sub
fs
aaa
and
(bad)
shl
xor
jae
dec
xchg
cwde
call
test
xor
add
fimul
mov
mov
nop
mov
xor
or
and
xchg
test
jno
push
fnstcw
pop
daa
xor
jle
mov
ds
ret
mov
fst
xor
or
or
mov
and
xchg
call
xor
arpl
or
mov
xor
imul
xchg
sub
cmc
rcr
push
jmp
test
pushf
cmc
call
push
ins
cmp
mov
and
add
in
call
cs
sbb
movs
outs
(bad)
add
jmp
xchg
mov
popa
shl
cs
movs
jbe
mov
dec
sbb
call
jo
popa
add
daa
mov
pop
dec
cli
add
psrld
test
jmp
jecxz
xor
xor
xchg
jecxz
pop
mov
(bad)
xchg
xor
aad
push
mov
jno
sbb
loop
sbb
or
pusha
retf
out
call
pushf
rcr
pop
jae
pushf
rcr
int
call
xchg
stos
mov
dec
mov
mov
arpl
iret
xchg
cmp
cdq
fcom
mov
pop
das
push
mov
push
jge
sub
cmp
push
shl
out
cmc
push
mov
movs
int3
fwait
dec
mov
pop
xor
mov
nop
dec
inc
sub
and
jmp
add
pop
dec
pop
jno
mov
adc
cmp
test
dec
mov
jb
mov
pop
cmp
out
push
xor
shl
loop
mov
add
daa
xchg
movs
mov
lock
dec
(bad)
loopne
movs
daa
cs
xor
add
jmp
and
popf
xor
daa
cdq
cmps
push
or
outs
mov
push
sbb
push
ret
ins
add
mov
push
inc
inc
je
dec
stos
push
or
cmp
popa
or
cld
shl
das
add
jo
mov
mov
sub
xor
test
out
out
scas
fwait
mov
dec
or
push
xor
jecxz
out
xchg
ret
mov
cmps
call
(bad)
mov
das
call
ret
mov
dec
inc
and
sti
lds
mov
cdq
inc
add
cmps
cmc
sub
shr
mov
gs
push
(bad)
sti
pop
fxch
adc
movs
sbb
pusha
jbe
add
mov
movs
(bad)
ror
xchg
sbb
mov
sbb
and
cmp
inc
sti
xchg
std
or
jne
adc
jae
xchg
ins
ins
mov
(bad)
jbe
sti
jno
sub
leave
jmp
mov
dec
xor
inc
retf
xor
stos
mov
pop
stos
pop
test
(bad)
frstor
retf
push
cmps
adc
add
cdq
mov
mul
add
daa
lock
pop
jnp
xor
jno
sbb
retf
test
es
push
jmp
js
fiadd
cli
dec
xor
ins
and
pop
jnp
outs
mov
retf
das
loopne
pushf
xor
pop
adc
mov
push
rcl
test
mov
lahf
fs
pop
push
aad
jo
mov
(bad)
lea
sbb
jae
inc
rol
push
fs
jns
jno
cld
pop
(bad)
(bad)
js
(bad)
inc
(bad)
dec
call
leave
call
sub
rol
fdiv
std
mov
adc
and
out
cmp
adc
push
sar
test
dec
cmp
and
(bad)
cmp
mov
in
mov
fsubr
fwait
stc
adc
xor
push
xor
es
retf
(bad)
fadd
aam
loopne
test
jo
pop
adc
jns
sub
push
loop
jmp
daa
cld
mov
inc
pushf
aaa
daa
and
outs
or
mov
shl
cli
mov
mov
or
cmps
lods
lods
pop
dec
imul
and
mov
mov
mov
fucomp
nop
(bad)
mov
pop
cmp
mov
(bad)
sub
(bad)
cmps
pop
add
inc
clc
mov
push
or
in
jmp
stos
mov
mov
imul
dec
cdq
dec
ret
or
add
pop
pop
or
adc
shl
not
or
cdq
push
ret
imul
sbb
adc
test
cmps
in
dec
add
push
push
imul
out
pop
imul
ror
mov
mov
movs
test
repnz
adc
push
dec
stos
xchg
xor
loopne
stc
push
mov
nop
out
and
lods
xchg
stos
add
push
ror
xor
aad
mul
test
jnp
xchg
mov
push
inc
test
mov
into
xchg
lock
mov
sub
or
adc
clc
inc
sahf
je
sub
add
xchg
add
dec
cli
adc
not
mov
pop
js
das
outs
ds
aaa
popf
(bad)
in
adc
mov
mov
dec
stc
ret
out
jmp
jle
pop
in
or
cmp
push
aas
enter
jecxz
out
in
into
fidiv
add
int3
or
and
(bad)
mov
jmp
push
mov
mov
(bad)
mov
sbb
stc
div
and
clc
jae
mov
adc
movs
xchg
pop
mov
mov
outs
jmp
shr
mov
jg
mov
fnstsw
ins
call
fwait
mov
scas
cmp
sub
or
in
and
sub
retf
inc
aam
or
push
xchg
imul
jo
pop
not
iret
push
cmc
in
addr16
and
sub
push
sub
adc
ret
cmp
fxsave
(bad)
fadd
inc
outs
add
sub
mov
mov
loop
outs
ins
loop
add
or
in
call
push
jne
in
add
aas
aas
clc
(bad)
mov
mov
inc
rcr
mov
imul
scas
fwait
outs
mov
add
add
push
mov
je
mov
ins
lods
add
outs
fiadd
daa
sbb
xchg
push
ja
pop
mov
shl
xchg
inc
add
test
or
push
test
mov
in
jae
fwait
into
sbb
loope
nop
jp
in
push
push
sub
cwde
movs
or
cld
xchg
push
fcomp
xchg
add
ds
jo
xor
push
xor
fld
sub
mov
cwde
cli
mov
loopne
call
sub
xor
xor
push
jne
sbb
sbb
and
add
jbe
xor
adc
push
sbb
xlat
aam
xchg
xchg
or
loope
stos
out
sub
fidiv
das
punpcklwd
arpl
or
mov
fld
sti
mov
in
mov
lock
dec
jg
scas
or
mov
xor
(bad)
cmp
dec
mov
fsub
jb
pusha
ret
jmp
adc
movs
inc
movs
(bad)
xchg
cmc
xor
mov
aam
rcr
add
dec
repz
(bad)
into
daa
jle
inc
add
and
cmp
push
jge
outs
sbb
fcomp
mov
xor
lea
dec
xchg
js
fsub
mov
jns
rol
ret
fnstsw
jle
xchg
neg
or
jnp
fs
inc
call
push
sbb
out
jo
test
mov
adc
push
(bad)
jae
add
pushf
iret
rol
les
iret
imul
cmp
mov
mov
rep
sbb
scas
mov
pop
ins
out
in
jecxz
cmp
sahf
xchg
push
and
aam
push
stc
push
fs
mov
pop
mov
leave
imul
test
pop
jl
ficomp
mov
test
add
xchg
cmp
retf
scas
xchg
jo
imul
cmp
je
xchg
xchg
mov
cwde
mov
sub
add
xor
adc
dec
or
fild
xor
xor
bound
pusha
dec
fcom
iret
or
outs
and
mov
enter
nop
hlt
stc
rol
lahf
inc
aad
test
mov
mov
dec
adc
add
mov
add
es
inc
and
inc
rcr
jge
ja
xchg
add
xchg
lahf
cmp
push
scas
adc
lods
inc
ins
and
cdq
mul
add
mov
(bad)
xor
push
jne
ins
je
cli
lahf
cmc
push
add
sbb
pop
mov
imul
pop
and
movs
jns
xor
int
xchg
inc
pop
pop
mov
popf
jne
repz
or
adc
xchg
sub
lock
pop
jp
lea
adc
cwde
pop
shl
test
add
ret
or
and
pushf
xor
addr16
jmp
or
test
mov
dec
xlat
cmp
daa
push
mul
daa
cwde
jns
imul
jmp
mov
cmp
lds
xor
mov
or
jmp
fstp
or
dec
fwait
pop
sahf
mov
mov
jb
outs
in
add
mov
sub
ins
loope
stc
cmp
nop
jle
pop
pop
dec
mov
test
add
inc
jne
icebp
clc
or
sbb
int
xchg
dec
inc
aaa
mov
and
inc
adc
test
or
inc
(bad)
mov
leave
enter
mov
(bad)
fcmovnb
fcomp
add
cmc
push
push
jns
mov
or
popa
dec
cmp
aad
(bad)
mov
(bad)
jae
add
fs
sbb
dec
mov
inc
lock
fmul
inc
or
xor
and
jge
sbb
out
jp
fnsave
pop
and
je
adc
mov
pop
and
pop
addr16
div
xchg
cmp
ret
js
or
call
retf
cmp
xlat
push
push
call
(bad)
leave
cmp
push
mov
lfs
mov
add
mov
loop
sti
dec
mov
pop
inc
jge
fcom
aam
xchg
sub
repnz
pushf
adc
frstor
xor
(bad)
push
aad
clc
imul
inc
or
aad
int
mov
adc
push
jmp
ficom
xor
cs
ffreep
aad
pusha
repnz
or
mov
jbe
mov
out
cmps
fcom
mov
js
push
mov
inc
ins
adc
cli
sbb
sbb
mov
cli
mov
dec
dec
push
das
jae
push
pusha
push
inc
pusha
test
mov
push
(bad)
xchg
add
call
and
jle
icebp
or
pop
jle
pop
pop
push
repz
inc
das
mov
and
(bad)
xchg
push
mov
mov
push
int3
bound
dec
in
or
fst
pop
sub
pop
and
push
or
mov
ins
sar
cmp
cmps
mov
and
mov
mov
out
push
loop
sub
test
inc
shl
add
jp
movs
fwait
es
rcl
fmul
movs
mov
(bad)
or
out
cli
dec
mov
ins
(bad)
mov
adc
xor
out
mov
fldcw
dec
das
jmp
xchg
shl
loop
jno
mov
jle
(bad)
jmp
js
jp
fst
jne
push
xor
rcl
or
gs
sub
sar
movaps
in
inc
call
outs
das
dec
movs
jp
inc
adc
out
rcr
fsubr
inc
dec
out
xchg
mov
xor
sti
test
fucom
retf
jns
push
mov
xchg
adc
ror
scas
dec
mov
xchg
fndisi(8087
xor
mov
mov
mov
mov
js
jl
inc
jg
pop
cmps
lock
sahf
shl
shl
ret
xchg
dec
pop
push
jae
int3
(bad)
mov
call
movs
ficomp
cmp
(bad)
xor
add
cdq
mov
fdiv
out
mov
fwait
mov
mov
aaa
inc
call
aas
adc
cmp
cmp
sbb
mov
pusha
stc
push
push
push
popf
mov
sbb
jns
add
loope
dec
fnstcw
imul
(bad)
out
outs
add
repz
or
cmps
push
jne
mov
cmp
(bad)
arpl
in
xchg
icebp
fdiv
js
sbb
push
hlt
into
adc
cmps
or
movlhps
popf
or
ins
mov
or
xor
shl
push
and
and
jns
or
xchg
call
retf
movs
jno
dec
pushf
mov
aam
mov
mov
mov
rcl
call
enter
mov
mov
mov
shl
fsubr
(bad)
inc
and
sub
push
loopne
(bad)
fist
dec
daa
push
cwde
jl
sbb
ret
mov
loopne
dec
and
and
es
dec
jp
aam
shr
js
cld
setp
add
popf
cmps
jb
sbb
cvtpi2ps
and
push
mov
jge
and
in
sbb
imul
ss
push
mov
jmp
retf
or
fild
push
pop
cmp
push
adc
fucomp
push
test
cmp
or
ins
cmc
inc
sub
pop
lea
enter
rcl
addr16
xchg
jno
jmp
jns
adc
daa
out
adc
in
stos
jno
or
loope
fs
loope
dec
(bad)
pop
movs
jnp
push
ins
push
stos
xor
movs
(bad)
mov
cs
mov
(bad)
hlt
jns
push
ins
pusha
add
sbb
mov
mov
addr16
shl
xchg
call
xor
imul
ins
int3
(bad)
(bad)
dec
test
sub
ins
enter
call
not
jge
std
stos
pop
fmul
add
fimul
gs
rol
adc
xor
(bad)
jno
jecxz
(bad)
iret
mov
sbb
adc
inc
in
dec
nop
dec
cmp
stc
mov
pop
xor
repz
mov
adc
inc
mov
xchg
jo
cmp
outs
inc
mov
enter
mov
js
xor
fs
dec
cs
mov
jmp
lods
js
lea
adc
xchg
mov
inc
ror
mov
ror
xchg
rol
pop
std
pop
sbb
(bad)
stc
sub
clc
test
inc
and
add
xchg
mov
dec
repnz
dec
sti
pop
or
inc
cmp
ja
xchg
mov
iret
mov
out
mov
pop
jnp
imul
lock
adc
adc
xor
and
leave
pop
loope
mov
sbb
dec
xor
add
xchg
mov
sub
das
mov
pop
test
(bad)
mov
int3
sbb
adc
aas
into
into
xchg
icebp
mov
shr
push
outs
int
adc
xchg
jmp
and
xor
enter
icebp
xchg
push
std
xor
enter
jecxz
imul
cli
push
sub
rcl
ficom
fisttp
mov
int3
jne
js
push
jae
sub
add
outs
cdq
dec
cmp
sbb
xor
jecxz
clc
inc
xchg
push
imul
popa
pushf
jbe
or
add
popf
sub
and
jo
and
cmp
lods
(bad)
xor
inc
nop
xchg
jl
mov
mov
cmp
lods
adc
in
push
push
clc
xchg
lea
dec
out
or
dec
js
mov
push
aas
popf
or
adc
jns
(bad)
int3
mov
(bad)
test
mov
shr
sar
dec
sbb
jmp
mov
ins
and
pushf
mov
mov
fwait
adc
push
ins
sub
xchg
mov
sbb
xchg
popf
pushf
jo
and
push
and
mov
jae
jg
dec
sbb
addr16
neg
sti
cmp
ror
xor
dec
stos
call
fst
out
xor
into
pop
sbb
push
ja
arpl
jne
inc
xor
inc
jo
cmps
inc
pop
mov
ror
cwde
adc
(bad)
mov
dec
and
into
jp
in
mov
(bad)
and
int3
loopne
xchg
push
xchg
hlt
sub
add
push
jnp
js
ror
out
idiv
(bad)
push
add
and
mov
xor
dec
ja
mov
jp
jnp
into
in
adc
(bad)
jecxz
es
sub
adc
inc
stc
std
inc
or
(bad)
xor
xchg
ss
fs
scas
and
xchg
fst
outs
cmps
mov
fistp
and
mov
stc
xchg
imul
cdq
test
xchg
imul
fdiv
xchg
jl
jns
sbb
add
and
aam
xor
bound
rcl
xchg
dec
and
inc
push
bound
das
ins
or
bound
inc
add
add
add
jbe
pop
or
(bad)
ror
es
inc
aad
jbe
loope
inc
dec
aaa
repz
icebp
push
mov
pop
xchg
test
fld
inc
js
mov
cs
cld
sahf
in
das
lock
mov
pop
cmp
js
rcl
bound
cmp
jmp
or
or
cmp
lds
ins
fnsave
or
scas
lea
inc
jg
scas
inc
scas
xchg
jmp
ret
add
jl
adc
pop
jg
movs
mov
stc
adc
in
lods
lahf
push
jb
xor
ret
jb
add
lods
jnp
fcomp
fwait
das
jl
clc
jae
pop
idiv
pop
imul
(bad)
ja
inc
loopne
xor
push
lahf
jg
out
cs
jae
adc
fadd
adc
ror
add
gs
movs
pop
aaa
cmp
dec
and
sbb
dec
mov
or
stc
add
mov
sbb
cmp
adc
fxch
aad
add
call
and
pop
lock
sbb
jae
inc
in
pusha
pop
fwait
mov
dec
into
jo
lds
dec
jp
jmp
clc
mov
movs
in
push
mov
and
leave
test
cdq
xlat
and
cmp
mov
(bad)
fisttp
movs
sub
call
mov
icebp
les
outs
das
sbb
cmp
lsl
ins
xchg
enter
cmp
pop
sub
ja
add
mov
xor
jae
pusha
call
jmp
push
aas
push
ret
loopne
(bad)
hlt
jb
ja
leave
push
pop
pop
mov
fwait
xor
aam
stc
pop
xchg
adc
fadd
jl
inc
inc
js
ficomp
ins
leave
adc
sub
call
mov
enter
mov
ins
into
das
jge
jl
jl
adc
mov
mov
clc
and
jl
mov
(bad)
fnstsw
jl
cmp
jmp
cmp
mov
imul
sub
ds
clc
cmp
pop
push
loope
xchg
data16
repnz
jg
jnp
ds
retf
and
mov
mov
fist
(bad)
jmp
sub
jge
cmc
ret
push
or
add
pop
(bad)
mov
pop
(bad)
dec
lods
retf
jnp
or
fwait
jecxz
cmc
jg
xor
iret
push
xchg
xor
or
xlat
inc
dec
jbe
add
into
lahf
ds
sub
cli
xor
gs
fld
pop
mov
ds
mov
(bad)
retf
mov
mov
lahf
mov
inc
mov
jg
xor
xchg
dec
mov
cmp
pop
push
lods
movs
clc
int3
lds
jmp
lock
dec
mov
aam
movs
int3
arpl
mov
test
push
call
mov
fmul
cwde
enter
dec
popa
mov
mov
xchg
cmp
aaa
stos
jl
dec
jno
aam
push
dec
test
lods
mov
jle
out
enterw
sub
sub
inc
cmp
imul
mov
pop
add
out
xor
popa
or
push
jg
or
push
int
xchg
mov
test
or
dec
add
mov
add
test
dec
push
jnp
cmp
pop
lods
fwait
in
inc
loope
das
cmps
or
push
in
das
cli
sbb
mov
sahf
inc
loopne
lea
ret
dec
(bad)
retf
fs
sub
repz
jmp
xor
inc
dec
repz
movs
adc
and
pop
pop
(bad)
fmul
push
ds
test
cdq
in
inc
not
jb
dec
cmp
fucomp
stos
cmps
aaa
out
fnstenv
movs
mov
hlt
fdiv
mov
jne
xchg
imul
jle
pop
pop
pushf
dec
cmps
les
in
retf
hlt
(bad)
imul
mov
int
aaa
(bad)
xchg
scas
mov
loop
push
sbb
movs
neg
inc
enter
repnz
(bad)
xor
cmp
xchg
inc
mov
mov
inc
or
aas
call
dec
sbb
popa
dec
cmps
dec
push
out
icebp
push
jbe
leave
ret
sbb
mov
or
push
cmp
rcl
add
add
loope
sub
xor
dec
enter
sahf
lds
gs
or
mov
(bad)
cli
sbb
lea
fcmovb
and
out
dec
and
mov
es
add
loope
fidiv
nop
or
ss
data16
jne
cmp
mov
and
imul
dec
mov
xchg
mov
jle
or
mov
cs
pop
jp
xor
sbb
push
cmp
xchg
popa
fs
xor
sti
out
sub
jae
mov
and
gs
fldcw
sub
xchg
xchg
xchg
call
cmp
xor
mov
sub
xor
dec
stc
sub
xchg
add
ins
mov
inc
mov
cdq
inc
sbb
push
cwde
mov
push
jae
xor
sub
or
pop
sbb
bound
push
xchg
xor
rol
fdivp
mov
repz
call
sbb
xor
xor
xchg
(bad)
jmp
ins
push
gs
inc
jl
cmp
dec
mov
(bad)
push
mov
enter
arpl
or
jg
fimul
xchg
sub
sbb
fwait
mov
dec
rol
inc
dec
gs
pushf
in
xchg
cs
inc
fs
cmp
jo
mov
std
jmp
mov
sub
push
mov
add
push
add
popa
jns
and
and
test
and
inc
xchg
pushf
int
popf
xor
inc
retw
mov
xor
xor
pop
and
fmul
dec
pushw
(bad)
aam
popf
jmp
(bad)
out
stos
out
je
adc
jno
inc
daa
xchg
cmps
and
xchg
mov
fsub
into
add
jb
add
popf
mov
jbe
sub
mov
jne
xchg
lods
enter
(bad)
cld
cmps
std
aas
mov
jmp
and
add
push
(bad)
int
mov
dec
retf
mov
xchg
or
scas
cmp
add
mov
mov
push
in
push
xor
aaa
add
imul
in
xor
rcl
dec
jge
sbb
or
lea
(bad)
fucomip
push
rol
xchg
addr16
adc
mov
mov
inc
dec
ds
stc
out
cmp
addr16
xor
in
cmp
stc
lea
outs
pusha
in
imul
mov
sub
(bad)
cmc
xchg
(bad)
(bad)
out
and
xor
xchg
mov
std
cmp
adc
iret
sbb
add
push
adc
xor
mov
inc
daa
cmp
pop
scas
es
cmp
pop
(bad)
popa
cmps
sbb
arpl
adc
mov
jbe
xlat
lock
and
cli
sub
scas
mov
ror
scas
inc
push
ss
mov
push
push
and
pop
xchg
mov
pushf
add
pop
out
xor
ret
jnp
inc
push
fwait
in
ins
sbb
inc
mov
jmp
adc
fild
inc
icebp
or
pop
mov
pop
push
cmp
js
mov
mov
dec
sub
cmc
call
or
mov
or
cmp
or
cld
sbb
test
mov
in
jmp
inc
std
sbb
sbb
mov
enter
mov
or
je
shrd
mov
xchg
and
fisubr
jae
sub
mov
fldcw
jmp
xchg
push
xchg
or
mov
je
nop
sub
add
sar
or
movs
push
adc
inc
xor
stos
movs
movs
mov
xor
cmp
inc
jae
out
(bad)
push
data16
mov
mov
push
jp
leave
pop
int
movd
pop
fcom
sub
sbb
mov
and
cmp
cmp
cmp
outs
movs
enter
je
inc
sbb
cmp
mov
mov
retf
(bad)
push
sub
xor
nop
sbb
repnz
cmp
pop
shl
(bad)
daa
cmp
jns
push
jg
in
jecxz
das
push
sub
rcl
push
mov
lahf
jo
push
push
xchg
xchg
int3
xchg
mov
fisttp
inc
in
and
xchg
loopne
(bad)
inc
lds
adc
dec
pop
inc
cmp
add
cmp
cmp
out
scas
cmps
lea
push
arpl
mov
outs
mov
jge
int3
inc
mov
mov
aam
dec
inc
adc
cs
std
sti
push
xchg
sbb
pop
mov
cmp
arpl
mov
in
retf
cmp
adc
adc
and
fs
lock
push
push
adc
push
and
push
(bad)
cmp
adc
pop
mov
xor
dec
xchg
cmc
dec
fwait
loop
shl
stos
lods
jmp
mov
es
pop
adc
int
dec
sbb
jg
pop
dec
add
repnz
pop
pop
adc
dec
movs
or
call
dec
dec
fucomp
(bad)
iret
ss
and
sub
hlt
dec
sub
js
popf
jns
out
jae
fst
mov
or
test
movs
add
xor
iret
aad
adc
loopne
or
repnz
push
scas
xor
retf
not
nop
imul
xchg
jae
dec
adc
loopne
jno
pop
sbb
jmp
jle
add
mov
stos
lds
dec
ret
imul
retf
bound
push
or
jg
div
(bad)
in
dec
push
xchg
aam
xchg
mov
arpl
fwait
pop
(bad)
cs
(bad)
sub
push
outs
inc
push
mov
add
push
xor
dec
int
shr
ds
loop
mov
xchg
ss
jo
cmp
sbb
or
dec
push
and
out
or
and
xor
pop
jl
or
mov
xor
rcr
add
or
in
or
xor
mov
mov
adc
or
mov
outs
stc
cmp
sti
pusha
xor
mov
pop
mov
push
xor
popf
call
shl
jge
inc
jl
jnp
scas
sub
sahf
jae
mov
(bad)
mov
leave
xchg
adc
in
bnd
push
xchg
sbb
mov
retf
loop
dec
mov
daa
sub
retf
retf
inc
xchg
int3
or
mov
inc
clc
push
or
cld
mov
lods
fnsave
xchg
clc
out
int3
cmp
adc
pop
cmp
or
test
dec
loopne
pop
jo
xchg
push
loope
xor
lock
movs
stos
(bad)
push
mov
cli
add
jmp
pushf
xchg
dec
adc
or
loopne
sub
mov
test
cmp
loop
fild
and
sbb
arpl
inc
adc
push
mov
jl
lock
mov
xor
fistp
test
jae
sub
sub
div
sbb
fwait
push
push
dec
pop
mov
sub
add
or
aam
adc
popf
xchg
mov
stos
mov
jp
push
outs
and
sub
pop
iret
fiadd
or
pop
dec
loop
inc
call
jbe
mov
mov
retf
mov
dec
push
or
jp
fadd
and
mov
popa
jae
out
add
ds
rcr
inc
pop
pop
rcl
in
xor
mov
and
or
and
cmps
je
sbb
xchg
(bad)
jne
std
push
inc
adc
mov
setge
jmp
adc
jnp
cmp
xor
cmp
(bad)
adc
ins
sub
xor
ja
xor
xor
jne
ins
mul
xchg
aas
ret
sahf
ds
js
fisub
xor
mov
mov
sub
cld
gs
stos
xchg
mov
pop
sub
loop
enter
mov
aaa
sbb
leave
mov
leave
dec
movs
cmp
pusha
adc
cmp
add
popa
pop
in
push
fsub
call
fild
fldenv
sbb
or
fs
xchg
inc
(bad)
cmc
dec
mov
aas
mov
mov
inc
adc
push
sub
or
inc
add
outs
mov
dec
dec
icebp
dec
out
scas
sub
int
mov
sti
test
add
add
adc
jns
cwde
sbb
jnp
mov
mov
dec
xor
or
std
sahf
popa
sub
lea
push
es
sub
cdq
pop
cwde
jbe
push
mov
sbb
xchg
test
dec
int3
(bad)
dec
xor
mov
dec
adc
and
ret
jns
(bad)
fnstenv
jmp
fwait
scas
and
ds
test
inc
retf
in
xchg
test
pop
push
aad
xchg
cmps
fld
push
xor
jbe
pop
outs
push
std
inc
inc
rcl
mov
into
sub
and
mov
out
inc
clc
or
mov
enter
int
adc
mov
rcl
mov
(bad)
cli
cmc
dec
push
js
xor
mov
fwait
rol
push
add
mov
dec
cmp
xor
pop
retf
inc
or
mov
call
push
jo
pop
out
movs
neg
mov
adc
pop
lods
jb
bnd
jne
jae
lock
or
xor
pop
cmc
mov
enter
icebp
je
(bad)
adc
ret
out
nop
fwait
popa
add
mov
repz
jo
mov
pop
mov
(bad)
in
add
mov
xchg
mov
sub
mov
ins
add
mov
push
add
(bad)
test
mov
movs
or
add
push
iret
fwait
or
jns
cwde
mov
test
mov
retf
shr
loope
call
retf
ins
inc
cmp
int3
fistp
jno
aas
aaa
js
pusha
sub
push
sbb
rol
sahf
or
and
mov
inc
cmp
outs
out
popa
add
push
xchg
jmp
cmps
repnz
into
rcl
xchg
inc
imul
fisubr
sbb
sbb
mov
mov
loop
js
xor
cmp
or
call
cmp
(bad)
test
sahf
push
(bad)
mov
rol
jbe
movs
in
ss
xor
inc
xor
pminsw
loope
clc
add
sub
imul
stc
adc
das
mov
sub
rol
fimul
xchg
ds
mov
lock
movs
daa
dec
hlt
jl
fs
std
in
inc
mov
ret
push
fnstenv
jge
inc
mov
add
inc
push
mov
aam
jns
and
xchg
test
outs
fcom
fsubr
adc
(bad)
or
(bad)
sbb
add
xor
leave
mov
pop
pop
fs
fadd
(bad)
push
or
leave
or
test
adc
fidiv
xor
data16
dec
xor
inc
push
or
adc
xor
jmp
jp
push
fs
dec
lahf
jno
jbe
cli
add
enter
or
inc
nop
jbe
sub
shl
push
sti
push
int3
adc
loope
sub
push
mov
fcomp
enter
sub
les
repz
out
int
mov
ret
pusha
out
movs
mov
pop
sbb
shl
cld
mov
push
pop
jmp
add
(bad)
lods
jl
ja
jbe
sbb
movs
retf
cmp
stos
xor
in
scas
mov
js
or
push
aad
mov
mov
imul
cmp
arpl
cwde
adc
popf
xor
arpl
mov
adc
jbe
inc
lds
adc
push
adc
pop
push
push
mov
jg
mov
sub
jbe
mov
add
fs
(bad)
and
push
mov
fsub
sbb
int
push
jg
cmp
scas
cmp
into
pop
add
xchg
lock
loop
mov
popf
xor
rcl
lods
add
loope
or
(bad)
cmc
xchg
out
loop
out
jne
mov
data16
inc
pop
push
mov
mov
mov
pop
pop
repz
out
add
dec
push
inc
mov
into
loop
test
mov
pop
jmp
xchg
pusha
int
dec
jecxz
(bad)
ds
sub
push
add
adc
adc
(bad)
jle
inc
dec
test
je
fbstp
push
dec
fdivr
loop
(bad)
stc
bnd
imul
push
clc
pushf
jno
jno
test
sahf
mov
jae
mov
cmp
fadd
sahf
repz
mov
xlat
and
push
fst
mov
push
sbb
movs
hlt
ret
inc
xor
test
mov
xor
cdq
mov
push
imul
aam
movsx
pop
js
inc
pop
dec
addr16
hlt
and
clc
cmps
jns
sub
cdq
add
push
xor
pop
mov
mov
add
(bad)
push
sbb
mov
xchg
pop
inc
push
push
cmp
adc
aam
test
add
lahf
test
sub
sahf
call
pop
ins
xchg
out
test
push
mov
rol
xchg
das
mov
mov
mov
and
adc
xchg
push
cld
(bad)
fiadd
mov
aam
dec
ror
xchg
pmullw
stos
sbb
movs
shr
shl
add
clc
xor
dec
pop
sbb
aaa
call
xor
xor
(bad)
sar
test
fadd
ja
neg
sub
or
(bad)
fiadd
sbb
ret
mov
mov
push
inc
idiv
je
push
inc
sbb
lea
repnz
jl
fdiv
sbb
sub
xor
sbb
stos
mov
rcr
and
adc
mov
stos
mov
data16
cmps
out
xor
arpl
and
arpl
sbb
in
pop
add
ins
aaa
adc
loopne
xchg
movs
add
retf
jmp
pop
jne
mov
inc
pop
add
adc
dec
jbe
cdq
fwait
xchg
sbb
sbb
mov
cmp
lahf
inc
push
mov
fs
mov
ins
jecxz
or
ss
idiv
sbb
push
dec
xchg
fstp
push
fwait
push
cmp
lods
ds
xchg
out
fadd
movs
ds
stos
sbb
mov
(bad)
jge
inc
sbb
hlt
and
jge
mov
out
cdq
lahf
mov
imul
mov
es
stos
scas
jne
push
adc
aam
add
dec
ins
fisttp
xchg
ret
fwait
adc
aad
mov
xor
cmps
jecxz
fimul
mov
pop
aad
lods
add
imul
and
mov
jge
and
and
push
cmp
mov
std
sahf
push
enter
cmps
and
xchg
jo
fidiv
jb
mov
push
dec
shr
mov
and
mov
sub
mov
xchg
enter
xor
out
mov
push
test
inc
jmp
mov
call
cmp
mov
dec
mov
sub
dec
das
xchg
add
mov
and
inc
inc
xchg
jmp
jnp
mov
pop
loope
adc
ret
xor
xor
inc
mov
add
adc
xchg
mov
dec
inc
inc
jo
push
inc
bound
jns
jle
mov
mov
mov
repz
xor
push
sub
push
popa
aam
dec
push
xchg
pop
mov
inc
outs
fdivr
stos
retf
ret
jle
ror
push
adc
rol
cmp
pop
cld
mov
inc
ffreep
add
rol
jno
mov
or
push
jle
dec
in
clc
sub
mov
(bad)
sub
out
sub
sbb
sbb
in
(bad)
pusha
int
loopne
cmp
dec
xlat
jno
cli
xchg
adc
enter
imul
jg
jo
inc
inc
out
cld
jg
loope
push
jg
sub
mov
rcl
mov
mov
mov
sub
push
cmc
scas
pop
pop
mov
xchg
xchg
cld
mov
adc
(bad)
push
mov
xor
xor
fiadd
push
inc
adc
adc
std
in
cmps
mov
add
xchg
xor
mov
push
rol
adc
cmps
in
xchg
xchg
nop
cmps
mov
jmp
std
ror
push
jnp
mov
mov
push
test
mov
pop
imul
push
mov
push
push
loopne
sbb
addr16
adc
out
jne
imul
cmp
mov
or
std
loope
cmp
cmp
mov
shr
mov
sub
test
jb
cmp
js
push
arpl
push
push
jb
test
push
xor
dec
fld
stos
mov
lea
inc
xor
je
or
mov
shr
psrlq
cmp
pop
sub
sbb
lods
sbb
iret
ror
add
dec
cmp
adc
mov
aam
adc
(bad)
dec
jl
and
push
dec
sahf
mov
mov
add
jmp
arpl
inc
cmp
call
and
adc
push
add
and
jecxz
pop
mov
sbb
inc
adc
imul
ins
mov
dec
in
dec
push
xlat
(bad)
ja
and
lds
aam
jae
stc
xor
mul
mov
mov
outs
aam
inc
sahf
pop
pop
push
arpl
push
push
test
fiadd
jbe
(bad)
pop
out
out
sub
jecxz
jle
mov
pop
in
rcr
cmp
mov
sub
xlat
fnsave
ret
pop
dec
push
xchg
mov
sub
jmp
in
push
push
jb
cmp
enter
xor
jo
xchg
sbb
cmps
push
shr
ficom
loopne
adc
jl
int3
pop
jno
jle
outs
mov
lods
xchg
clc
sub
retf
js
push
mov
pop
cwde
xor
pop
inc
sbb
in
jl
fsubr
daa
shl
cmp
jmp
jp
cmps
arpl
add
leave
mov
mov
je
leave
pop
fdiv
and
mov
push
inc
stos
inc
jmp
es
and
cdq
and
xor
out
add
jle
dec
jmp
or
push
adc
ins
mov
test
loop
sub
ret
fs
adc
jmp
jo
div
rcl
(bad)
rol
icebp
bound
addr16
inc
and
pusha
push
push
push
int3
jb
xor
xor
jne
inc
aad
imul
mov
push
xor
retf
fucomi
jl
inc
repnz
jne
push
mov
cmp
lds
addr16
comiss
pop
jmp
shl
es
adc
sub
and
jne
imul
mov
pop
fisttp
aam
int
and
xor
sahf
(bad)
div
(bad)
in
mov
enter
dec
add
(bad)
mov
xchg
repz
repnz
adc
pushf
mov
xor
jbe
imul
mov
aam
push
ds
imul
sub
cld
idiv
and
adc
ret
dec
es
mov
dec
sysexit
pusha
cmps
push
push
call
sub
stos
add
nop
sar
addr16
or
ret
test
and
sbb
push
hlt
mov
sbb
xchg
outs
mov
fwait
cdq
sub
mov
pop
sbb
mov
fucomi
add
ins
push
das
ds
sub
cld
pop
jne
xchg
push
mov
dec
and
bound
and
adc
fld
(bad)
repz
push
pop
xchg
mov
inc
add
push
fisubr
adc
jmp
loope
pop
adc
aaa
pop
mov
push
pop
sub
mov
into
adc
repnz
out
adc
repnz
cwde
add
jmp
or
mov
ins
xchg
cmp
pop
pushf
add
pop
mov
sbb
imul
push
jmp
mov
ins
in
test
imul
or
and
lock
xor
xchg
sti
(bad)
movs
xor
imul
cdq
dec
pop
pop
mov
add
icebp
pop
sub
push
movs
sbb
dec
dec
adc
mov
das
cmp
mov
mov
pop
inc
je
mov
mov
(bad)
ja
arpl
xor
pop
push
pop
jmp
xor
outs
push
or
stos
mov
in
imul
and
inc
adc
dec
mov
leave
lahf
lahf
add
jp
pop
xor
add
addr16
ins
int
popa
cmp
mov
jge
mov
hlt
mov
fcom
outs
cmp
sbb
pop
fs
adc
adc
mov
int
xor
push
mov
xchg
sub
push
jecxz
ins
jo
shl
add
lods
adc
inc
mov
cld
adc
sbb
dec
jecxz
sub
adc
enter
mov
sbb
data16
jmp
loop
ja
fdivr
pop
xchg
es
sub
xor
mov
aaa
sub
loope
and
sub
jle
rcr
or
rol
repnz
and
mov
lds
aad
sub
pop
sahf
arpl
jo
lds
(bad)
data16
or
jne
push
fisub
dec
xor
das
mov
adc
dec
mov
jns
ret
nop
fisubr
push
loopne
mov
sub
loop
mov
inc
xor
sar
pop
push
jg
test
das
imul
inc
cdq
cmp
pop
sub
cmovno
sahf
dec
loop
xchg
mov
rcl
or
loopne
mov
xchg
pop
fisubr
sbb
gs
and
nop
dec
sahf
icebp
pop
sti
scas
xor
jno
and
lds
ficomp
mov
cmpps
mov
mov
inc
mov
aam
dec
mov
mov
clc
push
mov
not
loop
ds
mov
sti
retf
or
add
cmps
sub
xchg
icebp
ja
push
or
jmp
lock
push
aam
or
out
movs
sub
data16
mov
ret
imul
(bad)
push
aam
jg
mov
sar
gs
xchg
xchg
cmp
repnz
mov
test
imul
push
sbb
in
imul
fidiv
xor
fcmovnb
xchg
mov
scas
mov
inc
aam
adc
dec
call
mov
cmps
in
cdq
adc
xor
and
test
inc
pop
shr
sbb
repnz
scas
adc
out
stos
mov
in
pop
packuswb
loop
and
(bad)
xchg
daa
sbb
(bad)
jp
stc
lods
mov
jns
into
retf
push
ror
dec
pop
inc
push
xor
fadd
cmp
inc
pop
out
push
push
inc
push
mov
mov
fsub
mov
call
fisub
jecxz
cmp
xor
cwde
and
scas
mov
into
scas
popa
xchg
pop
add
adc
stc
or
retf
(bad)
montmul
cmps
sub
inc
and
or
pop
cmp
adc
sbb
mov
je
cld
fmul
out
arpl
ja
adc
ins
(bad)
dec
lea
pop
fist
jae
in
push
loopne
and
sub
jmp
cmp
cld
nop
mov
mov
(bad)
scas
pop
inc
push
mov
adc
not
pop
pinsrw
in
shl
inc
xor
mov
adc
aaa
mov
popa
inc
fnstcw
cmp
cmp
mov
mov
inc
into
or
mov
aam
dec
lock
ins
(bad)
ds
outs
and
je
int
pop
dec
arpl
adc
in
imul
sgdtd
add
fimul
cli
outs
pop
test
icebp
leave
sahf
into
retf
mov
aad
add
out
add
push
in
xor
jbe
fisub
shl
push
and
pop
xchg
push
and
cmp
in
cmp
stos
xor
jns
or
lods
out
push
out
xor
mov
pop
jae
inc
mov
ss
stc
sbb
scas
gs
popf
sbb
sub
push
daa
sub
addr16
lds
fnsave
pop
ret
mov
xchg
gs
sub
imul
mov
mov
cmp
jg
mov
movs
mov
ret
and
ret
mov
fdiv
test
and
pusha
popf
cmp
loope
aad
dec
hlt
js
adc
aaa
stc
fmul
xlat
(bad)
(bad)
loope
div
movnti
pop
sub
dec
sbb
stos
lahf
mov
pop
mov
mov
pusha
les
addr16
lea
mov
das
xchg
(bad)
movs
push
mov
mov
xor
add
xor
call
jns
out
iret
call
xchg
push
xchg
mov
pop
add
(bad)
out
cld
cmps
test
or
mov
in
call
test
aad
or
gs
xor
sub
scas
fidiv
pop
dec
in
imul
aas
mov
movs
mov
sbb
inc
iret
jle
push
out
mov
mov
iret
sbb
sbb
sub
jl
push
add
jmp
mov
outs
das
add
xlat
lock
loopne
sbb
push
ss
push
and
add
std
pop
in
push
out
es
ins
retf
in
jge
ds
mov
adc
adc
pop
mov
add
lea
mov
mov
arpl
cs
(bad)
imul
mov
xor
push
sub
stos
inc
into
in
inc
(bad)
scas
(bad)
icebp
or
(bad)
icebp
sti
or
clc
sbb
ss
mov
scas
test
lock
jg
outs
or
bound
jb
mov
retf
and
les
inc
sub
fs
in
xor
cmp
sub
(bad)
cmp
imul
jb
xor
sbb
adc
repnz
jne
xchg
pushf
pop
bound
xchg
outs
xor
clc
sbb
dec
mov
add
and
adc
out
adc
data16
mov
mov
mov
ins
leave
and
adc
dec
mov
mov
shr
xchg
popf
sub
pusha
in
or
mov
repz
cmp
(bad)
mov
xchg
stos
scas
sti
adc
cmp
xchg
lods
fiadd
iret
lock
inc
jge
daa
push
(bad)
lahf
jo
inc
mov
adc
cmp
or
cwde
lods
in
adc
push
pusha
fcomp
add
addr16
pop
mov
loope
loope
sbb
xchg
inc
xor
mov
adc
xor
dec
mov
clc
(bad)
mov
scas
cmc
sbb
push
fs
adc
sbb
adc
rcl
lahf
jle
or
into
lock
and
in
sahf
outs
aas
test
mov
stc
call
cmp
sub
jno
(bad)
std
lahf
loop
(bad)
push
mov
mov
pop
xchg
sbb
lds
nop
inc
jnp
push
sub
scas
push
xchg
add
inc
push
jg
mov
mov
test
inc
push
(bad)
sbb
mov
add
out
test
xor
xchg
aaa
lock
mov
jmp
jbe
leave
in
std
movs
inc
cld
xor
xor
jge
mov
jmp
gs
jno
outs
ret
clc
sub
lar
es
outs
(bad)
aam
in
xchg
add
sbb
and
jmp
ins
sub
test
jp
dec
inc
call
dec
iret
mov
or
out
cld
inc
mov
les
imul
mov
movs
jle
cmps
inc
ror
lea
call
add
mov
adc
sti
int3
push
nop
int3
jmp
xchg
mov
imul
cmp
push
xor
ret
xchg
cmps
rol
and
in
mov
push
idiv
inc
add
push
jae
pop
int3
imul
adc
mov
jmp
popf
je
mov
xor
popa
movs
add
movs
cmps
fstp
inc
inc
mov
xor
test
(bad)
mov
inc
or
sub
mov
clc
xor
mov
ss
repz
cmp
std
aam
mov
sbb
xor
xor
arpl
or
test
enter
shr
out
ret
iret
cli
dec
pop
inc
ja
mov
(bad)
call
mov
inc
add
sbb
dec
xor
inc
pushw
enter
push
aam
(bad)
jo
je
cmp
dec
fs
bound
sub
pop
fcom
shl
dec
test
jmp
and
aam
dec
jbe
(bad)
and
pop
mov
das
outs
not
(bad)
shr
stc
dec
aad
(bad)
bound
cdq
or
inc
std
iret
sub
ins
mov
in
xchg
pushf
sub
iret
dec
xor
cmp
aas
push
stc
sbb
adc
xor
jae
or
mov
sbb
(bad)
or
(bad)
scas
in
mov
ins
mov
dec
xchg
sub
or
outs
aam
repnz
xchg
mov
lods
lds
add
stos
je
fnop
pavgw
xchg
lea
jns
shl
dec
jmp
xchg
sahf
in
jl
outs
inc
cmps
cmc
mov
or
loopne
jne
jb
(bad)
lds
movs
out
adc
push
and
cwde
es
in
or
xor
push
(bad)
cdq
adc
dec
pop
push
push
xchg
cwde
popa
loope
xor
cmp
add
push
rcr
pop
inc
pop
and
cmps
push
jg
idiv
in
jp
mov
push
inc
add
adc
jmp
mov
add
inc
jnp
shr
fdivr
mov
cmp
push
pop
fstp
cmovbe
mov
ror
push
rol
aas
aad
jge
push
into
inc
aam
or
dec
jmp
clc
push
outs
sub
ss
and
sub
ds
test
xor
cmp
test
imul
pushw
sti
mov
mov
pop
xor
xchg
add
xlat
push
imul
aas
rcr
pop
add
outs
sbb
mov
jecxz
(bad)
test
lods
bound
clc
jb
sti
push
fsub
les
pop
cmps
scas
fwait
and
js
push
sbb
stos
data16
(bad)
test
push
iret
and
add
mov
idiv
ds
push
jge
sbb
bnd
and
int3
mov
ds
ins
jae
inc
not
cwde
clc
outs
add
sbb
(bad)
xor
pushf
ss
pop
and
ficomp
push
cmc
inc
das
outs
inc
adc
push
ins
inc
xchg
inc
sbb
clc
mov
mov
out
shr
pop
pop
pop
int3
push
xchg
push
shr
adc
outs
sbb
adc
cmc
aam
fs
or
ds
fmul
jp
fwait
pop
pop
icebp
leave
xchg
ins
ins
xchg
loope
popf
fstp
nop
sti
pusha
addr16
lahf
scas
out
stos
pop
aam
aaa
jae
jbe
stos
xchg
scas
xor
push
and
pop
inc
sub
push
std
add
cli
pop
jnp
cmp
and
cmp
jne
adc
push
jbe
sub
stos
int3
(bad)
imul
sub
inc
inc
leave
imul
in
sbb
(bad)
pusha
sbb
dec
adc
ins
mov
xor
arpl
je
pop
push
cwde
mov
xchg
stc
ins
(bad)
and
pop
or
into
das
sbb
pop
pop
fsubrp
popf
js
cmp
push
mov
data16
adc
inc
cmc
in
stc
ret
mov
xchg
ins
out
adc
and
push
int3
call
popf
or
or
push
(bad)
pop
mov
cdq
ss
push
imul
sti
jno
fwait
sub
jbe
lock
mov
imul
ins
sbb
jne
and
push
add
cld
sbb
leave
in
lods
mov
lods
sub
mov
sbb
jmp
xchg
mov
stos
sub
jae
xchg
fstp
les
cmps
lods
and
frstor
cld
inc
mov
dec
icebp
inc
loopne
jno
pop
sbb
push
dec
push
icebp
pop
iret
sub
or
and
pop
xchg
sub
push
add
cmps
sub
xor
pop
xchg
xchg
sub
add
xchg
lock
aad
icebp
push
stos
fmul
mov
dec
or
xchg
jle
adc
movs
imul
dec
imul
mov
xor
js
sub
ror
pop
xchg
ror
rcr
xor
fdiv
neg
push
movs
int3
jecxz
sub
fwait
stc
xchg
push
jbe
push
add
outs
test
das
(bad)
and
push
scas
sub
popa
das
jae
mov
repz
ret
push
jge
sbb
cmp
mov
sub
movs
xchg
ja
mov
mov
cmp
xchg
adc
push
clc
and
mov
lods
add
pushf
xor
push
test
jb
inc
mov
or
sbb
(bad)
ret
sbb
sahf
into
pop
mov
push
lods
push
into
xor
scas
fcomip
push
mov
or
or
sub
les
add
inc
inc
sbb
add
mov
in
add
int
out
pusha
sti
pop
pop
call
xor
ss
test
adc
xchg
call
push
push
repz
rcl
loope
cmc
aad
aaa
cmps
cdq
jp
push
cmp
inc
push
outs
fucom
push
arpl
xchg
dec
loopne
das
mov
cmp
xchg
shr
add
cld
cdq
outs
mov
fcom
xor
mov
add
sahf
push
adc
pop
inc
mov
es
and
jno
add
mov
ret
stos
mov
enter
sbb
cdq
push
inc
iret
push
pop
call
pop
add
enter
xchg
mov
dec
test
xlat
fld
or
movs
and
outs
call
xor
shl
ja
lods
cmps
sub
gs
sbb
pop
es
sbb
jns
mov
dec
mov
cdq
or
and
jecxz
pop
cwde
inc
ficomp
mov
mov
dec
sub
int
test
lods
loope
mov
rol
outs
int
or
in
in
mov
sahf
js
cmp
mov
adc
cwde
mov
arpl
in
sbb
sub
inc
popf
sar
cdq
inc
dec
push
aad
jae
xor
(bad)
xor
dec
(bad)
jnp
ja
stc
ins
sar
jbe
sub
int3
cmp
sub
xchg
xchg
call
adc
(bad)
xchg
test
mov
cmp
out
and
(bad)
(bad)
xor
mov
data16
call
aam
fst
mov
movs
rol
mov
push
(bad)
neg
dec
leave
or
fisttp
inc
adc
dec
stc
cli
mov
loop
xchg
movs
xor
pusha
cmps
sub
xor
icebp
mov
pusha
mov
mov
mov
mov
add
cli
pop
in
sub
pop
push
fwait
jb
cdq
dec
sar
out
inc
xchg
(bad)
daa
lahf
test
adc
xchg
push
pop
lods
push
push
fdivp
push
mov
xlat
test
xchg
pcmpgtd
outs
mov
pop
(bad)
dec
int
mov
int
fcmovb
stos
call
sahf
das
inc
mov
cdq
mov
stc
sub
fisubr
bound
xchg
stos
rcr
and
leave
retf
ficomp
jmp
xchg
movs
fs
test
inc
and
or
aas
ins
sub
or
js
call
je
pop
push
dec
jmp
adc
sub
or
cmps
add
mov
mov
pop
je
ret
sbb
fisubr
iret
cld
dec
call
popa
js
into
clc
(bad)
out
retf
imul
cmc
mov
dec
cdq
sbb
xor
sbb
rcl
test
mov
pusha
push
fincstp
push
lock
call
cmc
jae
retf
bound
inc
sbb
retf
test
sub
pop
inc
inc
daa
cmp
scas
pop
addr16
call
loope
pop
jg
sbb
repnz
jmp
(bad)
(bad)
sbb
out
or
fist
inc
cmc
jge
pop
push
push
pusha
pop
push
(bad)
sbb
clc
jle
sub
adc
mov
add
scas
or
pop
dec
fwait
daa
(bad)
mov
cs
inc
xlat
add
push
dec
bswap
repz
test
xchg
mov
mov
cmp
aaa
shl
jmp
fild
pop
adc
xchg
inc
or
add
or
enter
retf
out
adc
dec
or
sub
ins
outs
rcl
push
jnp
ins
aad
cs
mov
or
mov
sub
mov
and
push
loopne
cmps
loop
hlt
sub
shr
(bad)
and
lock
ret
adc
push
mov
add
jmp
(bad)
popa
mov
sbb
cmp
cmp
xchg
jo
mov
xor
add
push
sar
adc
push
jle
xor
sub
jbe
out
jb
(bad)
sbb
bound
cdq
fsubr
imul
pop
jle
pop
xor
xchg
adc
cmovge
cs
or
adc
pusha
pop
pushf
fprem1
cmps
mov
stc
mov
xchg
or
cmp
test
popa
add
jno
aam
sub
jmp
xchg
push
dec
push
or
loope
mov
(bad)
jnp
push
stc
xchg
cmp
out
data16
ins
(bad)
out
rcr
sbb
adc
and
dec
add
test
(bad)
stc
push
sub
cmp
add
or
mov
xchg
cmp
mov
daa
pop
lock
adc
mov
mov
test
mov
xchg
hlt
pop
jl
cmovne
dec
jbe
inc
push
jne
out
push
mov
aaa
pop
xor
imul
test
rol
xor
inc
movs
sbb
pop
or
mov
loope
sbb
lock
sti
aad
out
dec
aam
inc
fdiv
fld
jmp
xchg
jg
sub
lods
mov
push
into
jecxz
mov
pop
xlat
(bad)
hlt
mov
call
jg
lock
fcom
add
aam
add
std
adc
popf
mov
jns
lods
sahf
daa
retf
into
sbb
mov
sub
aad
cmp
adc
xor
leave
mov
add
out
dec
fcom
cmp
xor
lods
mov
clc
stos
sti
xchg
or
mov
jno
sbb
hlt
ds
add
pusha
fild
cmp
push
pop
push
or
sub
arpl
sbb
push
pop
cs
fstp
adc
out
sub
outs
cli
mov
cli
sub
cmp
icebp
je
lds
cmp
dec
leave
add
cmp
adc
shld
sub
jnp
mov
pop
jg
ja
retf
(bad)
add
shl
in
xchg
aaa
outs
mov
loopne
jo
(bad)
retf
sbb
or
mov
inc
and
or
mov
inc
leave
add
or
jp
mov
nop
dec
add
adc
pop
pop
je
lahf
call
into
lods
sub
jge
call
fs
enter
out
loop
cmps
outs
cs
dec
xor
xchg
cdq
add
ret
fld
lds
ror
xchg
fwait
inc
aad
and
xchg
xor
fist
pop
cmp
shr
sbb
jbe
and
in
imul
mov
jno
sbb
les
out
pop
nop
out
loope
stos
pop
out
retf
dec
mov
xchg
xchg
pop
jne
(bad)
dec
std
mov
mov
mov
or
sub
pop
jmp
mov
xor
movs
lahf
mov
js
push
push
lock
jns
inc
mov
js
jecxz
or
jmp
into
mov
jns
and
xor
inc
jns
daa
push
gs
lahf
sar
mov
sub
push
sbb
inc
mov
or
jno
inc
xchg
mov
fisubr
icebp
sar
push
arpl
push
ror
dec
cmps
or
xchg
retf
call
test
push
xchg
dec
es
xor
inc
test
adc
adc
(bad)
retf
dec
mov
lods
fistp
in
cld
jmp
push
cli
push
and
mov
sbb
in
push
dec
inc
push
arpl
stos
or
mov
pop
push
push
jge
sub
loope
cmp
sbb
or
cdq
popa
mov
push
popf
or
(bad)
les
stos
or
mov
fsub
call
pop
inc
test
and
scas
mov
cmc
mov
(bad)
xchg
or
push
xchg
fidiv
dec
cli
test
sub
pop
pushf
lds
mov
sub
mov
imul
cld
xchg
cld
outs
test
push
rcr
sub
ja
sub
xchg
fnstsw
retf
jmp
cmps
mov
and
bound
movs
out
out
push
pop
in
mov
jno
sar
sbb
nop
hlt
fs
rcl
adc
push
(bad)
int
dec
popa
add
push
cmp
call
sbb
es
popa
dec
jl
int3
inc
test
or
lods
dec
scas
and
pop
pop
mov
aam
(bad)
xlat
inc
(bad)
cmp
es
xor
inc
cmps
mov
test
cwde
pusha
fcomi
pop
cmp
jo
push
out
cmps
mul
fld
adc
or
inc
pop
dec
jecxz
jne
cmp
xchg
jmp
jmp
int
ret
cli
or
aaa
mov
stos
rol
mov
ss
and
mov
jbe
and
xchg
push
mov
adc
loope
test
(bad)
and
add
aad
jg
cs
arpl
push
mov
xlat
scas
adc
sub
pop
out
pop
xor
cwde
xor
mov
icebp
adc
jnp
inc
pushf
mov
sub
xchg
adc
xchg
je
mov
loope
adc
cmp
mov
push
loop
scas
cmp
cwde
inc
sbb
js
fcmovnb
pushf
dec
inc
pushf
inc
cmp
inc
jecxz
movs
sbb
sbb
js
push
xchg
aam
pop
pop
pusha
mov
test
(bad)
scas
xor
push
xchg
adc
cld
gs
xchg
or
or
loop
jg
xlat
lahf
add
pusha
imul
and
xor
xchg
cmc
jg
fild
push
add
(bad)
fisubr
fwait
aam
cdq
int
repnz
add
test
mov
nop
fadd
ret
or
shl
add
jmp
add
call
outs
mov
push
(bad)
ss
cmps
stos
adc
movs
or
rcr
sbb
ja
push
fsub
sbb
nop
adc
(bad)
(bad)
cmc
sbb
xor
clc
int
sbb
stos
loopne
lods
out
push
inc
sbb
out
xchg
sub
pushf
gs
in
(bad)
pusha
enter
jno
mul
xchg
xchg
jno
adc
ret
mov
call
hlt
popa
cmp
mov
stos
push
enter
popa
shl
data16
dec
in
mov
(bad)
cmp
sub
xchg
cdq
mov
pop
pop
xor
loopne
cmp
int3
lock
mov
jge
pop
push
popf
or
data16
jge
sbb
pop
clc
or
ret
xchg
adc
out
push
fst
push
rol
add
iret
movs
and
sub
xor
into
push
inc
ds
ins
icebp
xor
ja
std
js
aaa
pop
dec
fidivr
hlt
jp
jmp
mov
arpl
jge
nop
test
retf
stos
adc
int
dec
adc
vprotq
push
xchg
push
mov
sbb
and
test
ss
adc
mov
adc
jbe
data16
imul
or
ret
icebp
enter
test
mov
or
sar
jae
movs
pop
out
cmp
sbb
call
nop
cdq
arpl
add
call
aaa
ficom
pop
mov
add
in
cmp
nop
call
mov
push
mov
repnz
jo
xor
dec
loop
mov
retf
or
dec
adc
cmp
sub
mov
xlat
cld
mov
in
mov
sbb
jle
in
fs
cwde
push
xor
scas
xchg
push
push
enter
fdiv
sbb
add
dec
dec
sbb
mov
pusha
add
(bad)
sub
inc
or
mov
and
add
dec
repnz
mov
shl
adc
or
inc
pop
and
or
mov
ins
mov
add
xchg
adc
xchg
sbb
out
pop
and
out
iret
stos
test
mov
(bad)
sar
jg
cdq
ds
sub
jp
ja
aam
xor
stc
pop
jmp
int
das
mov
and
fadd
lahf
mov
ret
inc
xchg
jmp
fistp
bound
mov
(bad)
or
jl
push
into
loopne
mov
bound
retf
mov
repnz
mov
sbb
jno
xor
loope
lods
sub
xor
out
inc
xchg
mov
(bad)
dec
push
pop
push
jl
xor
mov
push
mov
repnz
lods
cmp
mov
xchg
sub
loope
mov
jb
inc
or
and
or
jb
loopne
mov
cli
push
test
sbb
or
test
lds
xchg
dec
pop
aas
mov
mov
clc
in
sub
data16
push
jmp
fwait
lahf
pop
iret
pop
sbb
cdq
iret
or
jo
mov
es
jae
ja
inc
movs
sbb
mov
popa
mov
push
gs
int3
rol
and
cmc
cmp
sahf
xor
in
or
pop
out
mov
hlt
jle
test
scas
xchg
js
sbb
add
in
ins
(bad)
stc
pop
xchg
pusha
xchg
rcl
xor
pop
push
shl
adc
ds
mov
jl
and
(bad)
call
popa
movs
retf
cmp
data16
inc
lock
lock
int3
dec
nop
inc
push
cmp
cdq
jmp
mov
aas
adc
dec
dec
xchg
push
test
push
mov
jecxz
dec
mov
mov
add
sar
cmp
pop
cmp
retf
in
adc
aad
mov
adc
mov
mov
xlat
sbb
stc
mov
(bad)
out
out
aas
loopne
in
dec
and
sub
cmp
xchg
xor
jge
mov
mov
jle
fwait
lds
xor
sbb
push
pop
add
les
mov
or
cmp
pop
fcmovnb
loopne
push
or
mov
or
push
pop
jb
sub
repnz
add
pop
adc
dec
push
mov
push
or
jmp
test
cld
mov
jle
cmps
xchg
cld
out
mov
mov
arpl
clc
mov
or
dec
imul
enter
pushf
sub
xchg
cmp
add
icebp
jecxz
and
sar
movaps
call
shl
pop
je
pop
nop
retf
sub
(bad)
mov
pop
lahf
or
adc
ret
push
xchg
pop
and
mov
sar
pushf
jmp
cmp
(bad)
mov
fidivr
not
int3
sub
int3
jecxz
sti
add
sar
pop
pushf
mov
jp
sti
mov
and
pop
jmp
(bad)
fcmovnu
sub
fdivr
fwait
and
fstp
out
mul
lock
sub
fstp
imul
lds
adc
daa
push
iret
stc
mov
out
clc
mov
adc
push
rcl
jno
call
(bad)
pop
push
inc
cmp
lahf
(bad)
fcom
add
push
jmp
cmp
stos
enter
aam
stos
(bad)
call
ins
aam
test
in
add
push
mov
aas
rcr
clc
cmp
enter
add
ins
out
test
fisubr
int
cdq
(bad)
jo
repz
rcl
xchg
dec
mov
lds
jnp
jmp
shl
leave
push
(bad)
jnp
push
mov
test
fst
retf
xor
jl
rcl
(bad)
ficom
push
fcmovne
xchg
push
sub
in
pushf
mov
mov
aam
xchg
dec
and
cdq
mov
xor
push
cmc
sbb
pop
fwait
sub
xchg
xchg
mov
mov
shl
icebp
xchg
jo
sbb
aas
push
sub
xor
inc
loope
sub
mov
push
sbb
into
add
xor
(bad)
adc
jae
in
dec
faddp
fistp
xchg
out
pop
xchg
xor
in
sahf
pop
add
inc
addr16
cmp
xchg
cwde
pop
call
sti
mov
ret
ins
jp
sbb
cwde
lods
adc
mov
and
push
sbb
cmps
call
sub
mov
push
inc
push
xchg
or
mov
loope
mov
inc
into
mov
jecxz
mov
loopne
xchg
xchg
test
jnp
icebp
adc
or
push
cld
mov
ds
jmp
push
lods
mov
push
or
imul
repz
mov
inc
jmp
enter
mov
mov
cmp
shl
(bad)
popw
mov
inc
daa
repnz
xlat
loope
sti
(bad)
cmp
push
xor
mov
inc
xchg
add
inc
(bad)
into
cld
repnz
sbb
sbb
jae
loope
pop
repnz
and
sub
in
aas
popf
out
loop
aas
in
push
jge
or
daa
mov
pop
add
retf
pop
lds
fcomp
xlat
outs
adc
mov
test
ret
pusha
imul
pop
outs
aad
fidiv
cmp
jl
test
mov
outs
pop
inc
dec
cmps
dec
stos
mov
daa
retf
outs
and
adc
lods
ins
jle
fldenv
jbe
cmp
aad
icebp
mov
stc
retf
retf
les
dec
pop
push
ja
cmc
jle
cmps
or
in
(bad)
fistp
je
fs
imul
call
xchg
sbb
cwde
adc
and
jo
je
(bad)
inc
lea
inc
bound
cdq
test
jmp
inc
call
popa
adc
jmp
je
pushf
repnz
retf
icebp
test
lahf
pop
sbb
test
mov
sbb
les
sub
ret
mov
pop
mov
adc
and
ret
cmp
fild
xchg
inc
cdq
ins
loope
loop
or
jbe
push
pop
push
pop
pop
push
call
xor
cs
lahf
ror
mov
fild
ret
add
mov
pusha
cmp
xchg
cmp
rcl
enter
sahf
and
scas
cmp
push
jne
inc
xor
xor
pop
retf
ja
or
cmp
mov
dec
nop
add
loope
pop
das
or
repnz
dec
call
out
adc
mov
mov
es
fwait
xor
into
inc
loope
inc
sbb
pushf
and
dec
dec
(bad)
jnp
add
dec
or
popa
sti
test
push
xchg
(bad)
ins
push
dec
sti
sar
nop
test
loop
cmps
inc
push
ret
inc
mov
cs
(bad)
jne
test
push
js
xlat
sub
shl
adc
dec
inc
pop
mov
adc
ja
pushf
and
jb
add
mov
sbb
mov
xlat
pop
movs
and
pop
pop
ret
fs
pop
ds
call
sub
inc
jle
mov
lods
mov
sar
mov
clc
xchg
test
xchg
pusha
cs
cmps
ins
leave
dec
sbb
adc
jne
mov
push
sbb
sbb
shl
pop
xchg
mov
push
dec
mov
mov
daa
fs
lds
mov
imul
mov
pushf
call
aas
cwd
xchg
or
stos
jmp
push
cld
xchg
int
lock
sub
pop
mov
sbb
pop
add
(bad)
bound
nop
out
or
out
fiadd
dec
xchg
sub
mov
and
jg
sub
test
jno
icebp
inc
ror
lahf
jle
xor
popf
sub
jnp
and
icebp
div
xchg
popa
fnstenv
add
addr16
popf
lds
lock
cmp
and
cmp
rol
div
add
(bad)
adc
cmp
cli
mov
ret
adc
fwait
(bad)
and
je
pop
retf
mov
sub
push
or
je
push
aad
xchg
stos
mov
jle
push
into
inc
lods
mov
fcom
sub
clc
pop
push
fmul
sbb
mov
mov
push
jnp
out
xchg
add
cmps
retf
out
and
inc
push
movs
push
inc
rcl
enter
sbb
frstor
add
jmp
mov
rcr
or
iret
repnz
xor
xchg
xor
push
add
inc
mov
pop
leave
mov
mov
mov
stos
lods
(bad)
push
mov
or
xchg
pop
sub
pop
pop
mov
cdq
mov
and
pusha
cmp
and
fsubp
out
jg
push
mov
adc
int3
imul
or
std
jmp
ds
dec
test
imul
xchg
inc
mov
lock
out
sub
seto
ins
outs
ret
mov
orps
inc
and
repnz
inc
test
pop
into
or
repz
sbb
push
jmp
pop
dec
fisttp
shl
cwde
fldcw
inc
push
mov
inc
fs
xchg
mov
pop
adc
and
push
les
sub
hlt
das
xchg
jl
inc
xor
aam
jnp
jmp
add
jnp
movs
or
mov
push
xchg
and
xchg
push
jns
aaa
cld
sub
imul
pop
pop
es
jno
fst
stc
call
cli
add
in
sahf
int
nop
push
or
lods
cmps
std
loopne
mov
movs
pop
imul
ds
push
and
sub
shl
test
add
call
dec
fld
scas
std
add
ins
jmp
movsx
ror
rcl
sub
xor
leave
enter
loope
mov
jle
jge
pop
cmp
mov
cmp
jb
sbb
(bad)
jns
in
lods
ins
push
leave
mov
mov
mov
mov
fst
mov
jb
pop
sbb
cmp
push
push
sbb
add
xor
into
xchg
dec
sbb
sub
mov
mov
and
jns
jl
mov
xchg
dec
mov
addr16
mov
jno
shl
cmps
loopne
stos
mov
inc
push
xor
in
in
cld
inc
mov
and
inc
xor
pop
xchg
das
ror
dec
fidivr
sbb
xchg
xchg
cmp
adc
mov
shr
(bad)
imul
scas
movs
popf
iret
(bad)
jg
push
jg
jle
pop
add
cld
rcr
or
mov
mov
stos
(bad)
data16
and
aam
add
push
in
mov
repnz
add
mov
jge
shl
int
retf
or
pop
jb
adc
icebp
lea
or
fld
in
cmp
aad
nop
mov
lods
add
mov
jl
or
xchg
jae
push
dec
cwde
add
push
jae
pushf
scas
mov
push
ffreep
sbb
push
jae
in
push
xchg
xor
addr16
test
adc
int
jge
call
mov
repnz
pop
in
loope
js
les
mov
popa
mov
stos
outs
imul
ffree
nop
mov
cli
stos
and
movs
mov
sbb
retf
jb
jge
xchg
jae
popf
outs
or
push
or
repnz
into
in
xor
scas
and
jp
mov
aas
sub
ja
fcom
fdiv
inc
xor
leave
repz
xor
test
cmp
mov
cli
add
adc
inc
sbb
fdivr
mul
add
rol
test
daa
mov
outs
xchg
inc
xadd
jbe
dec
test
pop
jmp
and
lods
stos
jae
xlat
lahf
xchg
das
cwde
jg
or
or
jne
fld
ins
or
popa
mov
test
push
jmp
scas
mov
mov
loope
jmp
pop
retf
pop
(bad)
push
inc
loopne
add
pop
push
shr
jp
jne
hlt
in
mov
mov
xchg
or
ins
mov
aad
(bad)
fsub
dec
mov
inc
setnp
lds
lds
xor
mov
cld
cs
(bad)
(bad)
fsubr
and
and
cmc
push
push
in
rcr
mov
jbe
test
cs
mov
rcr
mov
loope
adc
dec
loopne
test
add
dec
mov
xchg
scas
and
mov
ja
xor
jmp
fcomi
jb
cs
adc
sti
xchg
and
add
(bad)
mov
xor
push
repz
in
(bad)
inc
and
test
xchg
mov
and
cmp
adc
lods
neg
sub
cli
pop
shl
shl
mov
popa
pop
popf
outs
sub
cmc
dec
jne
arpl
xchg
jns
mov
pop
fsubr
fwait
pop
out
int
in
push
add
stc
pushf
dec
fimul
add
pop
add
fst
pop
push
mul
lods
leave
mov
and
aas
(bad)
pusha
cmps
add
loopne
push
sub
xor
cmc
inc
repz
aad
sbb
(bad)
push
out
mov
pusha
cli
cld
adc
mov
repnz
aas
cli
iret
fchs
pop
sub
std
(bad)
dec
xor
push
out
mov
mov
shr
xor
cmp
repnz
sbb
push
std
inc
idiv
ret
cmp
jae
bound
cs
and
jb
call
sub
push
aam
dec
jo
or
lds
and
cwde
mov
mov
movs
sbb
cdq
scas
or
mov
in
cmp
xor
int
mov
jp
leave
sahf
mov
call
xor
lods
lock
nop
arpl
or
inc
int
mov
dec
(bad)
lahf
addr16
icebp
ror
push
add
dec
adc
xor
mov
stos
lods
fisubr
pop
inc
xor
fisub
cdq
adc
or
mov
ret
xor
clc
cld
xor
mov
sti
dec
pop
in
or
retf
jbe
into
das
ror
mov
sti
mov
push
xor
xchg
(bad)
enter
cmp
sub
arpl
addr16
jns
stos
ss
push
sar
stos
adc
push
jae
fidiv
adc
sbb
(bad)
xlat
mov
das
inc
xor
les
inc
jp
push
(bad)
das
cmc
xor
ins
out
repz
jb
inc
lds
hlt
in
jo
mulps
sub
cli
xchg
retf
pop
xchg
lods
dec
xchg
sub
(bad)
pop
xchg
aad
shr
dec
add
mov
push
fisttp
out
pop
out
inc
call
jmp
and
inc
in
inc
retf
sbb
xor
aad
jge
imul
fwait
xor
in
das
stos
sbb
xchg
mov
inc
ds
(bad)
mov
data16
sub
lods
sar
cmp
pop
pop
les
push
add
sub
mov
scas
inc
in
int
mov
pop
js
jnp
in
xor
push
and
aam
sar
xchg
lds
jg
mov
(bad)
jnp
mov
or
jp
push
dec
or
ret
mov
jge
nop
(bad)
mov
shl
xor
sub
aaa
stos
mov
test
iret
nop
in
push
add
js
dec
mov
inc
push
push
cs
test
sahf
xchg
movs
mov
push
in
call
xchg
das
mov
js
test
add
scas
xor
xchg
dec
cwde
adc
xchg
test
xor
nop
sub
dec
and
sub
in
dec
jge
enter
jae
pop
jp
lods
sub
cs
mov
arpl
inc
add
jb
and
mov
sub
mov
mov
jle
fild
mov
xchg
sbb
mov
sub
or
out
stos
movs
lds
add
iret
pop
push
fdivr
js
scas
ret
xchg
dec
call
leave
mov
js
jle
add
add
mov
arpl
xlat
sbb
mov
jecxz
fyl2xp1
int
push
dec
sbb
add
ret
ret
shl
sub
ret
rol
addr16
inc
xchg
mov
fnstenv
jmp
fs
aaa
pop
(bad)
cmps
adc
jmp
push
inc
push
jp
inc
clc
or
hlt
sub
fidivr
xchg
mov
push
jb
pop
inc
xchg
sub
pushf
lahf
stc
push
cli
in
ret
or
fdiv
mov
out
das
adc
or
push
hlt
push
rcr
(bad)
push
icebp
idiv
repz
add
repnz
cmps
inc
jns
call
fsubr
adc
mul
push
fsubr
xchg
pusha
lahf
cmp
cmps
xor
cld
sub
loope
lds
sub
mov
and
pop
push
pop
out
jmp
add
push
int3
ins
movs
mov
mov
and
and
xchg
mov
int
mov
repnz
inc
adc
dec
jns
in
inc
sahf
push
add
shl
into
retf
popa
push
pop
les
aas
jno
sub
enter
dec
ret
dec
mov
or
mov
(bad)
pusha
scas
sub
cmp
cmc
shl
lods
jg
push
jbe
hlt
pop
dec
jle
dec
jle
cmp
lea
xchg
adc
pop
repz
adc
pop
in
mov
jbe
xchg
push
lea
dec
pop
ror
pop
xchg
test
jbe
or
cmp
push
dec
icebp
pop
enter
lahf
gs
push
pop
sbb
push
popa
scas
and
pop
lods
mov
xchg
std
jb
xlat
int
xor
pop
shr
mov
ret
fnop
fisubr
js
shr
adc
adc
cmps
and
mov
and
hlt
adc
pop
out
inc
mov
(bad)
jge
lea
mov
in
setne
mov
add
xor
mov
test
mov
mov
fcmovb
lods
mov
mov
push
xchg
nop
pop
xchg
lds
lds
mov
int3
push
mov
mov
dec
cmp
outs
sti
add
sbb
rol
jns
sub
cdq
aas
out
mov
imul
cwde
inc
shl
cmps
mov
jle
daa
cmps
mov
mov
or
xor
mov
xor
pop
retf
sbb
aad
mov
fs
dec
xlat
repz
jns
jp
out
retf
lds
fs
addr16
adc
mov
nop
imul
cmp
sub
xchg
inc
enter
mov
imul
and
and
data16
int3
repz
add
push
push
retf
outs
int
(bad)
adc
add
shr
and
push
fdivr
repnz
gs
(bad)
aas
lods
es
jp
add
pop
or
call
dec
adc
jg
call
mov
pop
and
fwait
cmc
jno
in
xchg
test
lahf
push
push
aam
pop
jnp
push
push
fld
push
jg
iret
jmp
int3
sar
inc
push
out
fcomi
xchg
or
inc
adc
push
icebp
and
jae
sub
sub
outs
xor
(bad)
cmp
jno
add
ins
sub
pop
in
pop
daa
das
fsubr
fcmovnb
or
les
push
neg
sub
jne
ja
lods
xchg
pop
aas
mov
xor
scas
jge
sbb
cmc
cmp
jbe
push
mov
pop
gs
push
repz
adc
rcl
ss
push
lahf
(bad)
xchg
dec
push
ja
loopne
jne
je
(bad)
jmp
out
imul
dec
int3
cmps
mov
pop
adc
jmp
sbb
in
std
mov
sub
lds
out
inc
push
jge
nop
ds
push
cdq
pop
xlat
jae
and
pop
test
jnp
mov
ja
jbe
or
in
xor
cwde
mov
sbb
repz
cli
shr
sbb
lods
lahf
loop
mov
push
adc
pop
das
push
jp
leave
sub
xor
icebp
jg
sbb
ins
(bad)
loop
rcr
push
push
cmp
or
dec
imul
es
jle
push
and
es
jecxz
xchg
cdq
pushf
inc
mov
out
fdivr
push
out
jl
mov
adc
cmps
fs
xor
xor
out
cmp
stos
in
or
lock
fs
mov
stos
sbb
out
cdq
push
arpl
gs
scas
and
inc
lahf
sub
adc
pop
(bad)
int
jge
or
sbb
sub
ins
(bad)
add
xchg
rcl
inc
ins
inc
stc
add
pop
pop
adc
(bad)
or
unpckhps
xor
mov
daa
sub
cmp
loopne
(bad)
imul
pop
ins
cmps
lea
gs
add
mov
call
cs
and
push
jo
mov
sub
push
cdq
inc
aad
inc
div
sub
test
jbe
mov
rcr
ret
jl
xor
mov
xchg
sbb
ins
mov
and
(bad)
cli
cmp
les
push
or
push
push
fsub
inc
nop
mov
jb
mov
or
xor
inc
ins
or
lds
mov
lahf
leavew
dec
das
mov
or
ins
mov
loope
mov
rol
cdq
mov
xchg
call
xchg
dec
out
fwait
jl
sub
fist
lock
hlt
hlt
adc
dec
xchg
cmps
mov
lods
and
and
shr
sqrtps
out
cmp
inc
rcr
cmp
and
and
aam
push
push
sbb
arpl
cmp
xchg
fwait
mov
jmp
cld
loopne
xor
sub
daa
aaa
inc
std
retf
(bad)
or
rcr
dec
mov
not
(bad)
fcomp
std
push
addr16
daa
cmc
mov
dec
stc
call
sbb
jp
cmp
xchg
mov
cmp
xchg
jp
push
lahf
pusha
loop
or
popf
pop
mov
mov
push
xor
pop
rcl
inc
add
mov
leave
inc
pop
cdq
and
sub
shr
call
push
cmps
mov
mov
movhps
add
push
jmp
mov
test
imul
mov
inc
mov
outs
xchg
sbb
add
cmc
ss
fs
fldcw
(bad)
bound
sbb
je
in
cmp
ins
fwait
sub
loop
mov
ja
or
xlat
sub
push
lea
gs
cmp
rol
and
inc
aaa
push
mov
ins
dec
popa
mov
lods
sbb
jo
push
aad
pushf
xchg
sub
mov
xchg
add
sub
mov
sbb
or
fwait
push
add
pop
out
loope
jl
arpl
xchg
imul
sub
int
mov
sbb
jl
imul
mov
shl
pop
inc
stos
mov
es
xlat
lea
push
pop
or
shr
jnp
push
jb
mov
pop
ficom
retf
scas
xor
xor
sub
mov
cmp
and
xchg
cmc
ins
xchg
cwde
sub
and
mov
cwde
fadd
dec
les
dec
std
jg
mov
stc
cmps
adc
nop
bound
fwait
cdq
jae
cmp
jno
jbe
loope
cmp
inc
fs
push
xor
xchg
add
popf
int
adc
std
jns
push
jns
push
lods
ja
movs
outs
stos
sar
stc
xor
jno
test
mov
jbe
test
add
les
test
push
out
adc
cmc
mov
fisttp
sbb
loope
push
mov
nop
out
sub
lock
int
push
mov
add
bound
in
enter
inc
in
fcomp
add
push
xor
je
push
std
and
dec
ret
dec
(bad)
add
jecxz
push
sbb
(bad)
bound
adc
(bad)
mov
xor
mov
push
neg
mov
push
mov
cmc
out
push
and
aam
outs
js
cs
daa
fisub
mov
add
adc
inc
xchg
in
out
mov
movs
(bad)
or
jp
mov
xor
daa
sub
xchg
rcl
xchg
xchg
mov
sub
fbld
ds
xchg
lods
jle
xor
inc
adc
mov
add
mov
mov
js
stos
cmp
dec
push
push
mov
inc
das
xor
les
xchg
mov
jge
clc
imul
jns
add
ins
sbb
loope
jmp
xchg
mov
push
js
test
mov
fld
cdq
jle
jmp
enter
push
(bad)
push
cmps
sbb
sahf
sbb
js
dec
outs
mov
add
cmp
jns
(bad)
repnz
sbb
loop
push
aam
cmp
or
enter
lahf
jnp
pusha
add
repnz
jmp
je
or
test
sub
or
adc
push
popf
sar
fcmovnbe
push
(bad)
push
fwait
pop
(bad)
sar
inc
mov
in
fild
or
popa
fst
pop
or
ss
popa
cld
movs
xchg
adc
xor
div
sbb
ret
xchg
in
call
sahf
iret
shl
lea
cmp
sbb
(bad)
push
sahf
or
pushf
stos
fwait
lods
sub
mov
mov
aaa
aaa
mov
out
sub
loope
mov
das
or
and
adc
sub
xchg
jg
sub
jns
addr16
cmc
pushf
loopne
pop
add
dec
scas
std
and
(bad)
enter
fisttp
cdq
pop
ret
sub
jp
adc
rep
(bad)
xchg
or
push
xchg
ss
dec
out
and
test
mov
movs
sub
jge
xchg
sbb
pop
inc
sbb
pop
stos
mov
jno
push
mov
fiadd
xlat
shl
scas
jmp
dec
inc
adc
gs
out
inc
loope
sti
out
xchg
in
jecxz
xchg
(bad)
sti
es
je
(bad)
scas
push
mov
shl
and
xchg
xchg
jae
ja
pop
mov
add
push
pusha
inc
adc
out
cmps
mov
jo
shr
xor
imul
lahf
leave
in
data16
arpl
test
(bad)
test
hlt
xchg
shl
adc
fsubr
adc
xchg
(bad)
ret
outs
mov
push
xchg
mov
mov
aad
rol
inc
stos
mov
out
mov
mov
pusha
retf
sbb
sti
cmp
dec
enter
mul
int3
std
cmp
add
mov
ds
mov
sti
adc
xchg
fidiv
out
ds
cmp
call
add
call
push
or
test
add
push
and
adc
sti
pop
pop
(bad)
xchg
stc
inc
inc
mov
inc
scas
shl
stos
or
repnz
inc
test
(bad)
push
add
inc
sbb
xor
sbb
cwde
sbb
ficomp
jmp
dec
frstor
push
inc
pop
lea
pop
or
add
test
gs
push
mov
out
hlt
(bad)
nop
or
in
aaa
mov
jbe
push
ss
xchg
and
retf
cmp
popf
sbb
xor
xlat
fcmovu
fbld
rcr
fst
adc
int
sti
cmps
xchg
adc
shl
fwait
adc
daa
icebp
sub
mov
jns
daa
aad
jne
sbb
inc
or
shl
popf
fs
clc
cmp
jmp
mov
xchg
les
test
xchg
xor
fisttp
push
in
xchg
lods
pop
push
inc
les
cld
(bad)
scas
push
xchg
or
dec
lods
pop
jl
out
sahf
loope
xchg
xchg
push
push
jg
dec
adc
mov
gs
scas
mov
test
sbb
fiadd
sub
adc
repnz
fistp
js
sub
rcl
cmp
mov
sub
arpl
int
push
out
mov
ret
add
clc
add
sub
push
mov
jns
jbe
and
lods
fs
jecxz
mov
ror
inc
cli
pop
jle
inc
sbb
lahf
ret
cli
or
inc
aad
and
shr
lods
(bad)
jle
inc
mov
jb
sub
mov
adc
inc
sub
(bad)
cmp
lods
or
addr16
dec
xchg
xor
pop
xchg
dec
jmp
push
inc
jbe
xor
pop
out
add
sahf
shl
(bad)
neg
push
cmps
push
sub
jb
and
jb
pusha
outs
add
fbstp
push
mov
call
mov
in
xchg
adc
icebp
xor
call
push
dec
cs
xor
sbb
test
repz
in
fldcw
in
jle
je
imul
int3
mov
inc
and
dec
les
repz
popf
call
jmp
add
pop
test
inc
cli
dec
aaa
fwait
das
pop
xchg
arpl
lods
and
fstp
jge
sub
jecxz
lods
add
(bad)
or
div
test
outs
xchg
push
xor
mov
test
cwde
pop
int
fs
sahf
xor
jmp
fs
mov
fstp
cmps
in
add
sbb
repnz
dec
inc
add
popa
addr16
inc
mov
(bad)
out
(bad)
or
and
xchg
popa
or
xor
es
ret
arpl
push
xor
jp
je
or
icebp
movs
test
push
and
fdivrp
aas
ret
fisttp
inc
enter
jl
dec
mov
cs
cmp
jae
xor
pop
mov
jo
retf
icebp
push
jmp
xchg
add
sub
enter
iret
or
(bad)
jae
mov
bound
adc
xor
into
clc
fstp
mov
js
mov
ret
sub
dec
sar
sbb
shl
(bad)
mov
nop
mov
outs
(bad)
cld
stc
push
mov
out
xchg
pop
pop
std
mov
jge
(bad)
push
fwait
push
adc
xchg
and
sbb
xchg
mov
repz
repnz
fisub
push
shl
movs
jge
mov
dec
jp
and
xchg
call
add
dec
lock
add
aam
push
daa
and
xchg
dec
add
dec
mov
outs
sub
and
sahf
cdq
cli
sbb
pop
test
cld
xlat
int3
out
rcr
imul
jo
mov
adc
jg
iret
dec
sub
fnstenv
movs
and
mov
je
(bad)
cdq
dec
jae
inc
retf
mov
mov
sub
shl
mov
cmp
fadd
inc
out
xchg
or
push
arpl
pop
push
jmp
mov
jmp
call
jp
movs
and
dec
jmp
mov
pop
dec
jg
les
jne
cmps
inc
or
cmc
mov
mov
adc
cmp
pop
mov
idiv
movs
add
out
cs
push
test
or
mov
out
mov
sub
inc
xor
ins
clc
ins
adc
add
cwde
add
add
fld
mov
dec
mov
mov
lods
mov
or
push
mov
(bad)
loope
mov
jb
cmps
and
sub
pop
mov
cld
fprem1
aaa
outs
cwde
lods
inc
inc
and
mov
add
cmp
outs
pop
lock
rcr
arpl
sbb
out
xchg
sub
rcl
(bad)
lock
inc
lods
iret
jp
into
dec
push
dec
fcom
or
loope
push
dec
pop
mov
jmp
mov
mov
and
aam
(bad)
cmp
jo
or
dec
pop
push
xchg
xchg
xor
in
jecxz
sub
shl
pop
xor
push
clc
adc
push
ficom
cmc
aam
adc
adc
pop
push
add
fcomi
fdivr
(bad)
cli
leave
daa
outs
sti
add
xlat
cmp
mov
inc
or
add
movs
and
inc
inc
dec
loope
pop
cmp
popf
retf
ror
pop
pop
mov
push
pop
mov
mov
lea
out
test
std
mov
push
stc
xor
lods
stc
cli
shl
jne
(bad)
out
aad
add
mov
xor
sub
adc
push
outs
scas
and
pop
in
mov
(bad)
mov
sar
inc
(bad)
pop
mov
mov
sbb
or
mov
sbb
add
pop
or
xchg
mov
data16
in
and
mov
jo
imul
stc
call
repz
out
fnsave
sub
test
(bad)
pop
(bad)
or
les
aam
pmovmskb
cmc
dec
pop
jp
dec
pop
jnp
pop
pop
test
jne
or
inc
adc
jnp
sub
inc
sbb
pusha
hlt
pop
push
dec
adc
jp
mov
sub
adc
adc
dec
ss
in
jecxz
jl
adc
mov
pop
es
int
js
data16
das
nop
mov
inc
mov
push
shl
icebp
add
enter
aas
pop
push
and
ins
pcmpeqb
in
inc
mov
sub
or
cs
ss
or
sub
xor
mov
cmps
mov
jne
das
rol
fisub
mov
xor
sub
mov
in
mov
xchg
pop
aas
sub
push
mov
dec
sub
inc
adc
add
dec
inc
fcom
into
sub
sti
scas
jge
push
cmp
test
dec
(bad)
push
hlt
jae
loope
sar
rcl
clc
jno
push
cmp
push
push
fcom
stos
jmp
rcr
pop
mov
xchg
adc
lods
mov
clc
daa
lahf
push
pop
inc
clc
inc
ret
jp
scas
in
inc
xchg
xchg
retf
repz
mov
imul
or
lods
mov
mov
cmp
jp
in
jg
clc
gs
ds
fimul
sbb
popa
jle
(bad)
mov
popa
fwait
(bad)
xor
repnz
daa
and
mov
pop
cld
outs
hlt
xchg
mov
mov
cs
mov
int3
scas
sub
sahf
or
ficom
inc
fwait
int
mov
imul
push
or
fdiv
(bad)
mov
pop
arpl
ret
clc
shl
pop
cmp
mov
dec
iret
add
cmp
outs
aam
(bad)
iret
push
dec
cdq
sub
out
repnz
or
xchg
sti
adc
mov
push
(bad)
dec
push
ret
and
ror
mov
call
jecxz
or
jmp
or
xlat
outs
int3
clc
jno
outs
cmp
mov
hlt
xchg
xor
imul
mov
adc
mov
das
and
pop
xchg
popf
fst
(bad)
cld
inc
mov
int
sub
stos
mov
test
outs
push
inc
xor
stos
xchg
jb
in
call
xchg
adc
fs
imul
(bad)
fistp
hlt
mov
mov
leave
add
sub
jg
mov
mov
ins
enter
jnp
xchg
test
jmp
add
or
loop
in
aam
dec
mov
mov
cmp
inc
pop
jle
adc
or
adc
lds
cmps
xlat
jge
jmp
aas
fmul
xlat
mov
fisubr
mov
popf
push
add
cld
sbb
sbb
push
sub
pushf
adc
pop
cs
inc
leave
rcr
jp
cdq
sub
push
cmp
adc
inc
or
push
or
mov
cld
pop
cmc
push
dec
daa
xlat
jo
xor
stos
imul
sbb
jno
out
mov
ror
lahf
jns
adc
or
sbb
xor
lahf
sub
xchg
ficom
scas
xor
xor
jno
cmp
test
push
in
mov
ds
dec
xor
add
mov
(bad)
fadd
mov
js
in
xchg
jl
xchg
(bad)
xor
jmp
pop
in
push
mov
mov
addr16
xor
mov
pop
out
lea
jp
sub
pusha
sbb
ins
(bad)
jne
adc
adc
mov
retf
xchg
jns
cmp
add
repz
rcl
loopne
sti
xor
test
fbstp
add
js
(bad)
dec
pop
(bad)
aad
dec
aas
fxch
lods
(bad)
retf
jp
fdiv
shr
stos
jmp
sbb
mov
sbb
repnz
fwait
ret
or
adc
ins
or
stc
pushf
call
inc
jmp
fadd
pop
jp
inc
sub
fcomi
mov
gs
and
sti
pop
call
jae
rcl
lea
sub
pushf
push
sbb
mov
out
retf
and
ret
imul
out
pop
shl
push
fs
jnp
icebp
idiv
mov
mov
fwait
movs
daa
cmp
xor
mov
xchg
lahf
xchg
pop
out
cwde
inc
push
ror
aaa
mov
adc
stos
dec
int
mov
jmp
test
out
push
lods
cmp
inc
mov
mov
xor
pop
test
repnz
push
out
fist
xchg
mov
dec
mov
adc
mov
lea
loopne
xchg
lods
stos
imul
mov
sub
mov
push
xchg
jl
ds
icebp
stc
idiv
cmp
arpl
data16
pop
out
call
mov
rcl
pop
inc
icebp
loopne
sbb
dec
add
inc
out
ja
cmp
pop
addr16
mov
mov
sub
mov
push
leave
(bad)
bound
inc
push
shl
test
push
sar
jle
jecxz
loop
cdq
shl
stc
dec
xchg
stos
(bad)
cmp
jp
cmp
sahf
call
adc
pop
mov
outs
or
jmp
fimul
scas
ret
paddusw
inc
lahf
jl
push
shl
scas
and
adc
aas
gs
push
rcl
fild
mov
adc
xchg
adc
in
inc
xchg
dec
push
xor
mov
in
dec
loopne
repnz
gs
aam
movs
inc
jbe
push
sub
sti
inc
push
jns
mov
add
xchg
ja
pop
xor
movs
mov
aas
in
outs
addr16
sub
pop
inc
jecxz
je
sbb
jb
xor
sub
imul
outs
xchg
add
in
(bad)
and
mov
push
inc
pop
mov
mov
xor
dec
lock
jp
stos
das
bound
push
in
or
movs
add
push
imul
ins
cld
idiv
leave
gs
push
sti
mov
shr
jge
sub
inc
mov
pushf
in
cmp
retf
shl
jge
and
mov
les
je
(bad)
xchg
sbb
or
inc
xchg
movs
pop
ins
hlt
stos
stos
(bad)
jg
inc
ss
rol
jmp
mov
ss
cs
xchg
mov
fnsave
adc
cmp
stos
shr
fst
mov
jp
push
xchg
mov
inc
or
cmp
das
ret
mov
or
loope
cmp
fild
enter
aam
add
xchg
mov
inc
add
ins
bound
xchg
neg
call
and
dec
push
push
jmp
dec
repz
mov
lock
hlt
add
cs
and
dec
add
xor
ja
mov
adc
(bad)
mov
push
or
test
xchg
jecxz
pop
or
push
jp
xor
shl
ds
in
leave
adc
push
pusha
addr16
cmps
retf
mov
sar
xor
aaa
test
(bad)
pop
xor
ja
push
frstor
and
nop
xchg
or
push
sub
mov
mov
mov
adc
jne
inc
rcr
dec
cdq
mov
ins
shr
xchg
mov
movs
lock
arpl
pop
jae
out
lods
add
adc
ja
(bad)
and
or
adc
daa
jbe
inc
retf
mov
mov
das
dec
into
leave
(bad)
fisubr
push
push
out
test
mov
aad
add
cwde
mov
jmp
mov
aaa
xchg
fbld
in
jl
dec
mov
out
adc
mov
add
in
lods
jge
mov
adc
sub
aas
jae
pop
sub
mov
movs
xor
sbb
and
xchg
mov
mov
jmp
ins
dec
mov
fld
mov
iret
and
and
repz
mov
sub
out
movs
lock
xchg
jmp
pusha
mov
pop
xor
adc
pop
xchg
arpl
pop
push
mov
adc
cmps
or
mov
or
lods
arpl
out
int
add
mov
mov
call
nop
add
daa
xchg
daa
loop
mov
frstor
ret
out
add
or
mov
out
loopne
mov
xchg
lods
adc
jne
movs
stc
mov
mov
sbb
mov
cld
(bad)
cdq
adc
int3
xchg
xchg
fwait
inc
call
inc
retf
jecxz
add
inc
or
sti
popf
xor
aam
aam
dec
pop
mov
imul
pushf
sahf
pop
fnstenv
scas
cmp
cwde
mul
xor
add
mul
mov
mov
test
push
add
loope
mov
hlt
inc
iret
add
pop
ret
fbstp
cmps
outs
mov
xor
jo
scas
xchg
sub
push
rol
adc
int3
dec
lahf
mov
or
cmps
jmp
call
add
jne
pushf
pop
outs
or
fcomp
pop
mov
jmp
leave
adc
jnp
outs
enter
lods
jns
call
aam
ds
pop
ds
sahf
and
push
cmp
and
cli
repz
loopne
inc
ja
je
jle
jns
push
movs
cmp
mov
mov
sbb
(bad)
out
jnp
and
popf
mov
add
imul
not
dec
push
and
test
cli
mov
pop
cmc
int
xor
jecxz
adc
imul
and
sub
ret
and
lahf
and
or
(bad)
(bad)
pop
mov
int
sub
xor
xor
sub
mov
loopne
(bad)
add
fwait
adc
cmp
dec
or
leave
and
fcmovnbe
call
xchg
cmp
es
push
xchg
sub
stc
jae
pop
jg
mov
ficomp
and
lock
das
or
aad
pop
cdq
push
xchg
test
sub
cmp
add
out
sub
or
mov
dec
arpl
inc
push
out
push
aaa
add
enter
mov
cmp
inc
adc
pop
jmp
test
imul
adc
cwde
and
loope
sub
daa
mov
call
mov
mov
jge
fsubr
pop
add
xchg
ja
loop
lods
int
call
es
or
test
pop
and
nop
sar
jb
imul
mov
dec
cmc
adc
je
inc
mov
mov
or
inc
into
push
sub
mov
jo
loop
xchg
inc
(bad)
dec
adc
pop
mov
sub
dec
inc
ret
push
inc
(bad)
mov
fcomp
frstor
retf
int
xchg
push
inc
outs
in
das
stos
clc
nop
jg
jle
stc
and
inc
sub
lods
scas
adc
pop
mov
adc
aas
dec
sub
inc
loope
(bad)
mul
cmc
or
jp
push
div
rcr
shl
and
aam
ins
xor
je
in
jns
ins
ins
mov
mov
aaa
jle
xchg
shr
outs
inc
xor
call
add
dec
inc
mov
bound
test
push
inc
stc
xor
fwait
ret
jge
lods
and
push
xchg
ret
xchg
sti
outs
xor
test
lock
cld
mov
test
leave
stc
mov
xor
jns
dec
shl
mov
adc
fnstcw
nop
ret
leave
aas
sub
mov
dec
cdq
enter
adc
jo
adc
and
mov
popa
xchg
aaa
imul
pop
(bad)
mov
stos
aad
dec
dec
xor
adc
in
mov
std
and
or
je
and
leave
sbb
cmps
jmp
mov
jbe
call
data16
and
cmp
mov
test
pop
jecxz
adc
fidiv
push
sub
mov
cmp
ins
xchg
xchg
dec
mov
and
adc
jo
mov
loopne
(bad)
mov
dec
fdivr
nop
push
add
clc
cwde
and
jne
inc
or
js
xor
int3
sahf
sbb
daa
stos
jno
push
cld
pop
inc
rcl
stc
jg
mov
cmps
cmp
inc
inc
dec
aaa
cld
inc
(bad)
cli
push
repnz
into
loop
out
cmp
xchg
push
mov
lods
pusha
add
dec
por
inc
jae
and
dec
jecxz
jle
pop
ins
not
clc
(bad)
jnp
lods
lea
rcl
mov
movs
pop
pop
gs
pop
ins
jb
bound
cmc
shl
adc
push
add
jns
popf
test
std
jae
push
hlt
(bad)
pop
mov
jge
mov
sbb
jg
rcl
repnz
retf
adc
or
mov
retf
adc
adc
pusha
pop
test
(bad)
call
adc
mov
sub
cli
aad
loope
mov
mov
add
push
int
dec
fsub
jl
and
pushf
aas
jnp
pop
inc
push
push
xchg
jo
pushf
lods
inc
dec
push
sub
xchg
mov
bound
int3
or
pop
pop
or
cwde
add
out
xchg
pop
adc
cmp
aas
pop
inc
push
retf
sbb
test
jmp
cmps
mov
je
sbb
adc
xchg
inc
addr16
dec
cld
sub
test
add
std
cmps
dec
or
and
push
loope
mov
(bad)
adc
movs
mov
push
mov
push
fadd
xor
cmps
sbb
sbb
lods
in
add
retf
cwde
dec
sbb
out
iret
dec
jl
sub
loopne
dec
outs
call
dec
pop
sub
repnz
dec
stc
mov
lock
aad
mul
mov
repz
out
jno
adc
enter
cmp
in
pop
xchg
imul
mov
dec
add
add
hlt
push
lock
mov
fdiv
push
call
out
pop
xor
imul
out
fcom
lods
cs
out
or
leave
stos
pop
pop
xor
xchg
jl
cmp
and
jle
stos
leave
or
aad
inc
push
aad
cmp
in
mov
in
nop
xlat
fadd
push
ins
dec
push
pop
lods
jne
clc
and
loope
add
shl
shl
mov
jecxz
pusha
xor
xor
mov
fs
push
xchg
aam
adc
jo
aaa
pop
(bad)
clc
(bad)
call
xor
rcl
dec
adc
rcl
or
mov
lds
or
icebp
mov
xchg
mov
scas
sub
adc
outs
push
xchg
xor
aad
je
and
sub
cdq
and
push
std
xor
and
add
fimul
(bad)
mov
or
mov
fwait
leave
ins
and
jle
test
adc
retf
ins
add
push
stc
add
int3
test
xchg
push
shl
push
cwde
sbb
dec
or
jo
jne
pop
in
pop
enter
ret
cmp
mov
sbb
sub
sub
xor
std
dec
adc
sub
icebp
mov
push
or
sub
pop
adc
sbb
std
cmp
xchg
lds
push
push
int
sbb
call
push
(bad)
and
mov
xor
xor
cmp
shr
(bad)
shr
je
call
mov
sbb
add
ins
enter
jbe
(bad)
lock
enter
ja
mov
ja
dec
call
xchg
enter
call
cli
dec
mov
and
or
inc
xchg
stos
lods
xor
push
jo
xchg
mov
aam
cs
test
jmp
and
xor
and
sub
adc
lock
ins
xlat
popf
js
out
sbb
cmp
popf
xor
mov
scas
push
mov
inc
retf
mov
stos
test
stos
int
ds
(bad)
fild
sub
out
xchg
jns
adc
dec
xor
call
mov
and
sub
nop
jle
jp
or
inc
cli
sub
popa
dec
push
aad
fild
(bad)
mov
(bad)
in
xchg
pusha
jb
jb
mov
movs
fiadd
jo
jo
lahf
xchg
push
jecxz
bound
mov
fs
mov
mov
ins
mov
inc
push
jno
adc
cmp
jge
stos
aad
bound
in
rcl
dec
lahf
mov
inc
cmps
mov
(bad)
mov
xor
test
push
xchg
sbb
xlat
pop
cmp
inc
mov
(bad)
jg
xor
test
pop
add
pop
inc
cmc
test
outs
jno
xor
sub
jg
dec
add
mov
pop
add
pop
mov
lods
test
js
mov
jg
xlat
lock
adc
push
fwait
or
jo
dec
xor
and
mov
jmp
fld
cwde
jl
test
or
bound
xor
enter
jb
int3
test
xchg
leave
dec
mov
sub
and
in
lea
pop
aas
cld
jo
dec
scas
mov
movs
adc
push
(bad)
jno
mov
sbb
rol
jle
dec
addr16
repnz
test
pop
and
mov
fld
sar
adc
add
lea
push
push
jb
xchg
fiadd
adc
xor
test
sbb
mov
imul
leave
and
mov
mov
jbe
sahf
jle
push
(bad)
leave
fs
jo
jl
dec
push
hlt
mov
fcom
xchg
loop
jmp
cmp
and
fdiv
rcr
adc
and
fmul
inc
outs
cdq
ss
sub
scas
cmp
xchg
or
not
(bad)
or
push
sub
jns
mov
addr16
dec
mov
xchg
xor
outs
inc
xor
test
(bad)
rcr
mov
or
dec
pop
jmp
mov
dec
rcr
add
pop
push
clc
sar
pop
popa
push
stos
xlat
xor
in
fwait
add
mov
cmp
xor
jo
or
int
jno
loope
xchg
(bad)
out
mov
lods
scas
mov
and
pusha
movs
jmp
cld
adc
add
outs
push
jmp
inc
test
sub
movs
iret
jo
popf
jo
mov
sbb
push
mov
push
push
not
and
cld
shl
movs
rcr
outs
or
arpl
popa
sub
xor
mov
lahf
sbb
mov
sub
test
popf
jle
cdq
loop
sbb
imul
xor
es
in
(bad)
fisub
dec
lahf
scas
cs
retf
jge
mov
aaa
cmps
xor
sbb
push
lock
xlat
(bad)
fimul
int
push
test
pop
or
fstp
mov
data16
imul
test
leave
into
xchg
outs
lahf
clc
fst
mov
fistp
mov
jp
mov
sbb
dec
dec
sub
or
sub
xchg
inc
test
and
into
push
out
mov
jnp
pop
les
mov
jnp
cs
cmc
sub
and
das
or
inc
stc
and
popf
dec
mul
push
mov
and
popf
mov
pop
inc
mov
call
jne
dec
sahf
push
in
(bad)
cmps
or
(bad)
std
call
sbb
in
lahf
test
push
pop
or
push
sbb
jmp
popa
mov
jmp
adc
xor
cmp
jnp
cmp
mov
jl
cs
push
popa
test
xor
pop
scas
inc
cmps
in
xor
stos
add
int3
adc
arpl
dec
mov
movs
and
jmp
hlt
cmps
aas
nop
sub
sbb
push
popf
mov
sub
ins
fistp
push
push
push
mov
pop
pop
arpl
rol
add
and
cld
pop
out
shl
adc
xchg
jle
jno
ret
push
test
addr16
aas
ja
(bad)
jae
fstp
movs
push
scas
inc
dec
dec
dec
idiv
js
inc
mov
(bad)
sti
int
cmp
leave
xor
outs
lahf
stos
pop
int
gs
cld
jp
sub
adc
sbb
or
pop
adc
push
ja
int3
jnp
popa
std
shl
fisub
mov
pop
ins
in
push
fcmovb
js
dec
jnp
cmp
std
mov
movs
xchg
mov
mov
cmp
mov
nop
jmp
mov
repz
outs
push
adc
pop
shl
or
ror
mov
jge
nop
inc
lods
dec
mov
rcr
mov
loope
or
test
(bad)
jae
repnz
adc
ss
arpl
and
int
aad
dec
mov
fild
std
in
cld
jnp
sub
jno
mov
dec
pop
cmp
(bad)
jg
cmp
into
rcr
or
mov
and
(bad)
cs
lahf
jae
scas
sti
xchg
je
xor
xor
lahf
jle
ror
(bad)
(bad)
fst
mov
js
into
outs
xor
xchg
cmp
pop
lahf
jbe
dec
jae
jg
push
(bad)
adc
add
movs
out
fwait
cli
mov
cwde
test
ins
test
dec
ins
mov
pop
jg
into
jg
push
mov
and
push
ja
mov
mov
jno
js
jb
out
scas
pushf
mov
test
mul
imul
(bad)
cli
mov
push
dec
dec
fisub
fcomp
lods
lahf
sub
sbb
cmps
imul
shr
mov
ins
lock
mov
mov
jno
pop
push
out
or
or
ret
dec
cmp
adc
mov
(bad)
nop
ret
pushf
iret
mov
stos
pextrw
aas
xchg
movs
mov
xchg
loopne
clc
cmps
sub
pop
mov
daa
pop
mov
pop
cmovle
mov
aad
retf
mov
in
cmp
movs
sahf
pop
lds
sub
or
dec
push
sub
xor
test
pop
das
retf
xchg
sub
test
add
div
ds
mov
popf
lock
daa
sbb
dec
in
push
dec
sbb
lock
into
movsx
aas
mov
js
sub
xor
jbe
lock
mov
cmps
mov
ss
push
adc
xor
xchg
push
add
cmp
sbb
and
mov
ja
cwde
in
add
mov
repnz
cmp
pop
mov
(bad)
es
(bad)
xor
popa
mov
repz
xlat
fwait
rcr
inc
mov
xor
sub
int
add
pop
stc
push
pop
sub
cmp
imul
sbb
cmps
ja
popf
jmp
outs
ret
jnp
(bad)
div
call
fidivr
jmp
sbb
inc
pop
call
ret
(bad)
in
pop
push
inc
mov
mov
mov
or
inc
inc
call
dec
sbb
rcr
lds
daa
jge
(bad)
lea
neg
mov
mov
jbe
fadd
pop
cli
xchg
pushf
je
into
fld
outs
sub
cmp
sbb
or
sub
hlt
ss
shr
mov
(bad)
int3
dec
pop
xchg
push
gs
pop
xchg
mov
jnp
mov
(bad)
fstp
add
test
je
inc
call
fsubr
inc
into
or
sub
popf
fild
push
sti
ss
jbe
lock
push
pop
mov
push
je
pop
mov
aad
stc
std
(bad)
jmp
nop
inc
sub
hlt
sub
adc
dec
fdivr
js
inc
cwde
(bad)
or
dec
pop
jg
clc
(bad)
cmps
(bad)
frstor
add
enter
push
add
int3
jle
cmp
out
es
imul
nop
sub
push
sbb
inc
jmp
pusha
xchg
push
jns
xor
mov
and
mov
add
mov
mov
test
hlt
jb
test
sub
hlt
mov
arpl
jl
(bad)
popa
call
enter
fsub
lock
dec
inc
mov
popf
in
fsub
fs
sub
icebp
xchg
jno
lock
mov
lods
mov
or
rcl
cmp
adc
mov
loop
iret
push
dec
push
(bad)
and
mov
aas
lock
(bad)
loope
outs
xlat
adc
mov
add
test
clc
adc
shr
jbe
bound
aam
fldenv
inc
xchg
cmp
and
sub
add
fs
fs
out
or
inc
ret
mov
es
leave
cmp
mov
into
inc
je
mov
call
loopne
push
mov
outs
sbb
movs
mov
xor
dec
cld
pop
dec
push
dec
xchg
popa
mov
cmp
mov
pop
and
xchg
hlt
sar
push
stos
xchg
dec
mov
jl
push
or
cs
and
mov
push
jnp
sub
stos
mov
shl
sub
pop
in
and
mov
pop
icebp
jl
ror
shr
xor
bound
leave
dec
pop
aam
cld
aam
mov
stos
fcom
and
pusha
mov
inc
sqrtps
ja
daa
jl
mov
in
push
xchg
xchg
cmp
fcom
dec
xor
enter
(bad)
call
push
nop
fisub
jp
mov
ins
cs
js
mov
in
(bad)
dec
aaa
sub
loope
adc
mov
jae
mov
ins
inc
stos
inc
outs
clc
out
inc
sbb
adc
adc
popf
mov
scas
xchg
cld
rcr
div
jge
cli
jb
outs
pop
pop
pop
mov
ret
leave
int3
mov
and
mov
jp
scas
dec
xchg
test
mov
push
mov
pop
push
inc
inc
adc
mov
cli
push
sbb
mov
int
sahf
fwait
cmc
sbb
or
push
stos
lea
dec
cmps
hlt
cdq
push
push
lock
mov
sub
loopne
dec
push
xor
dec
shr
jbe
pop
out
fwait
or
(bad)
adc
or
mov
inc
popf
daa
jmp
out
jl
cmps
and
push
add
cs
and
pop
stc
pcmpeqd
push
add
jae
ret
push
sbb
fs
push
or
or
lds
jecxz
and
or
xchg
xor
int3
cmps
sub
xchg
cmps
push
call
mov
pop
pop
hlt
push
rol
push
push
cmp
scas
jo
mov
rcr
xor
iret
movs
(bad)
jb
mov
imul
pop
or
mov
pushf
push
cmp
cmp
sbb
sti
fcmovnu
pop
mov
xor
lds
jecxz
jb
adc
cmps
xchg
inc
sub
(bad)
sub
mov
and
mov
jns
cmp
hlt
test
(bad)
nop
dec
sub
xor
out
pop
xor
(bad)
and
inc
scas
pop
(bad)
cld
mov
lahf
movs
xchg
iret
in
cmp
(bad)
jbe
sub
sbb
test
and
cmp
test
rcr
mov
les
xchg
xor
sub
inc
push
dec
lock
xor
xchg
and
adc
jecxz
jae
lock
xor
scas
repnz
xchg
mov
call
icebp
scas
inc
jnp
popf
or
retf
dec
push
jmp
sbb
sub
cmp
es
mov
imul
xchg
aaa
xor
jb
stc
sahf
movs
or
aam
mov
rol
iret
pop
jae
dec
aad
pushf
mov
pop
mov
icebp
cdq
scas
mov
jo
loop
mov
xor
or
jmp
pusha
xchg
mov
dec
xchg
imul
(bad)
retf
pop
mov
adc
and
aas
mov
(bad)
sbb
cmp
mov
scas
outs
xchg
std
inc
aaa
pop
fs
xor
stc
dec
ja
sub
xor
dec
push
or
adc
dec
aas
cmp
jecxz
adc
sbb
test
cmp
loop
aas
push
sub
add
ins
cmps
xchg
mov
and
mov
or
jmp
out
dec
dec
sbb
xchg
pop
int3
adc
jno
sbb
xor
and
dec
or
inc
gs
jecxz
les
das
sahf
nop
mov
aas
mov
ret
mov
jmp
jbe
and
sbb
stos
lock
jmp
sub
cli
inc
or
pop
jae
movs
and
fisttp
(bad)
(bad)
pop
inc
sub
sbb
mov
push
push
int3
fisttp
cld
pusha
sbb
jns
test
mov
fisub
cmps
mov
add
xchg
add
add
je
and
in
ja
or
xor
ret
sbb
adc
mov
rcr
sahf
push
(bad)
jno
mov
imul
iret
pop
push
(bad)
push
sbb
(bad)
in
xor
jae
xor
xlat
mov
(bad)
ror
and
stc
cmp
xor
adc
xchg
pop
(bad)
cmp
push
ss
in
pusha
inc
(bad)
lock
js
(bad)
sar
jbe
pop
jne
sahf
jg
retf
inc
jns
push
mov
xchg
xor
(bad)
mov
js
xchg
out
cmp
adc
pushf
ficomp
(bad)
retf
das
jmp
xor
cmp
mov
aas
sbb
(bad)
jmp
fdiv
or
or
jg
inc
imul
xchg
mov
(bad)
adc
shr
test
sbb
ret
fnstenv
(bad)
mov
sar
out
sub
mov
sbb
mov
cmp
lahf
dec
xor
int3
leave
out
add
xchg
shl
pushf
movs
ret
xor
fcomp
clc
add
test
add
push
loopne
gs
addr16
cld
repz
ins
repnz
jge
sahf
jb
outs
push
addr16
mov
movs
das
cdq
mov
sub
dec
sub
lds
xchg
lods
mov
(bad)
mov
dec
stos
sub
js
ins
xor
das
push
add
mov
sub
sti
or
dec
or
fild
mov
inc
es
cmp
add
mov
cmp
or
cmps
mov
stos
(bad)
enter
xorps
bound
stos
and
in
shl
imul
add
test
jae
dec
out
inc
repz
mov
sbb
or
jb
ins
and
dec
fild
jns
xor
out
pop
sti
ror
fbld
aad
aas
fadd
pop
mov
dec
or
jnp
(bad)
ds
in
push
loop
jnp
pop
add
pop
aam
fwait
mov
xor
sub
sbb
ds
pusha
mov
cld
ins
xchg
sahf
sbb
ret
jne
cmps
jno
arpl
sbb
mov
cmp
jl
cmp
jmp
repz
jbe
mov
sub
xor
add
sahf
mov
push
jp
shl
and
add
scas
popf
cs
add
das
clc
xchg
sub
fwait
pushf
call
sub
push
popf
xchg
fsub
arpl
int3
add
call
fiadd
and
xor
mov
sub
ins
cmc
test
outs
pop
mov
out
add
sti
cmp
xor
pop
mov
adc
sbb
xor
pop
icebp
lahf
or
dec
(bad)
dec
lock
ja
xchg
add
stc
ret
mov
sbb
mov
test
mov
sahf
mov
(bad)
jbe
sar
xor
pop
imul
ja
mov
in
sub
das
loop
rcr
xchg
fcmovnb
xor
aaa
add
retf
pop
and
add
test
xor
loopne
lods
mov
les
int
rol
scas
sti
test
test
call
dec
dec
cs
push
ins
(bad)
aam
shr
dec
iret
out
jmp
imul
adc
cmova
jns
xchg
mov
sub
clc
push
push
mov
inc
retf
test
nop
push
mov
je
dec
pop
pop
pop
dec
ja
movs
and
jb
mov
jbe
jg
xchg
pop
sbb
cwde
mov
push
mov
arpl
js
xchg
and
jp
sub
mov
or
fdivr
sub
jo
inc
xor
cmps
(bad)
lock
mov
ins
sbb
sub
dec
scas
dec
sub
imul
stos
into
inc
push
cld
ds
test
(bad)
in
hlt
pop
cmp
cmc
pop
push
pop
std
and
mov
mov
push
jmp
and
cmp
cwde
pop
es
cmp
dec
mov
pop
ret
or
rcl
adc
xchg
outs
rcr
jmp
ins
or
data16
mov
cmp
into
data16
and
sti
retf
mov
mov
jbe
fiadd
dec
inc
push
sub
jge
lock
sub
std
fst
inc
dec
(bad)
sub
jmp
jnp
adc
outs
jmp
jmp
stos
dec
xchg
inc
adc
das
jns
gs
pushf
sub
pop
cmp
popa
pop
or
nop
xchg
fdivr
mov
cmp
pop
int3
mov
push
iret
fnstcw
sbb
xchg
pop
mov
js
cld
out
jmp
inc
inc
pop
popa
retf
ror
mov
imul
retf
dec
xchg
loope
or
sbb
arpl
xor
jge
mov
push
cdq
add
pop
fsubr
and
fld
cmp
pop
cdq
aam
sbb
or
and
jbe
aaa
add
popa
shl
jnp
and
sub
(bad)
(bad)
fimul
out
scas
and
mov
(bad)
int
sbb
add
xchg
retf
pop
mov
mov
js
shr
pushf
jmp
jp
mov
div
dec
push
and
lods
ja
push
inc
test
pop
fst
das
sbb
push
leave
(bad)
clc
push
call
nop
adc
scas
clc
or
popa
inc
mov
fwait
adc
adc
outs
cwde
adc
out
push
call
dec
push
xchg
add
es
int3
mov
cmp
add
movs
adc
je
adc
add
cmps
and
mov
pop
jns
stos
mov
dec
push
fs
cwde
pop
mov
sbb
je
mov
pop
jae
add
xor
out
test
(bad)
fldenv
push
jecxz
ficom
push
adc
sub
(bad)
lock
cmp
adc
sub
mov
ret
adc
cmp
iret
ins
mov
xor
push
pop
in
popa
xor
sbb
aaa
xadd
mov
inc
xchg
mov
pop
test
shl
jne
lods
pop
pop
popf
pop
lods
(bad)
mov
adc
nop
into
inc
xchg
in
pop
ss
loop
gs
in
adc
cdq
popa
sub
ret
int3
shr
sar
dec
dec
inc
je
xchg
sahf
mov
or
ins
adc
sub
sub
mov
or
and
mov
mov
(bad)
cs
repnz
je
mov
push
pop
push
in
loop
xchg
sub
push
sub
inc
mov
xchg
test
mov
sbb
adc
(bad)
add
mov
or
dec
mov
pop
jno
pop
daa
push
out
fstp
push
repz
loope
int3
dec
cdq
shl
(bad)
sbb
shr
aad
daa
test
sbb
xchg
nop
sub
hlt
cld
enter
cmps
xor
sub
stc
shr
adc
int3
int3
fmul
(bad)
sub
sbb
cwde
iret
pop
and
fidivr
ja
jae
jnp
push
or
push
xchg
call
jge
mov
and
(bad)
push
stos
sbb
jb
mov
shl
ret
mov
and
fisttp
pop
stc
call
les
cmp
lea
sbb
cmp
iret
push
sbb
xlat
push
push
add
inc
push
mov
jmp
mov
and
icebp
test
sub
push
cli
sbb
pop
and
(bad)
movs
push
repz
retf
and
jmp
in
scas
loope
in
add
pop
into
retf
add
jb
shl
push
int3
mov
daa
dec
clc
sub
adc
push
cmp
cmp
add
repnz
aaa
inc
ret
inc
outs
rcl
mov
out
dec
pop
fs
(bad)
loope
and
(bad)
xchg
jnp
in
pushf
xchg
stc
push
ret
icebp
sti
jb
fisubr
pop
ja
test
and
fcmovu
sub
add
mov
adc
mov
icebp
pushf
into
push
(bad)
cs
retf
adc
xor
scas
shl
sub
loopne
inc
out
lods
inc
and
icebp
out
xor
mov
ret
(bad)
cld
xor
popa
fcmovnbe
dec
xchg
xchg
ins
int3
pop
dec
dec
dec
add
lahf
push
movs
push
sub
or
mov
outs
push
push
or
cmp
fstp
xlat
cwde
lds
dec
sbb
scas
add
daa
sub
call
add
jge
mov
push
jle
add
aas
pushf
push
fild
dec
cwde
cmps
or
mov
nop
loop
xor
mov
mov
mov
data16
enter
test
adc
sbb
cld
mov
pop
mov
pop
sbb
dec
add
dec
leave
ror
mov
retf
dec
pop
push
inc
mov
xor
loopne
mov
xor
xchg
ret
scas
test
loopne
out
nop
ins
adc
out
xor
lods
inc
icebp
nop
inc
aam
out
icebp
clc
lock
inc
data16
inc
add
mov
daa
ja
not
jp
jmp
movs
aam
mov
(bad)
ins
jle
sub
xchg
js
leave
rol
icebp
ins
add
out
cmp
in
(bad)
movs
fstp
sti
outs
test
cmp
xchg
das
enter
sub
xchg
call
and
cs
fdivr
and
cmp
aam
push
aas
jne
jmp
xchg
jne
leave
ins
call
std
out
add
push
rol
popa
cmp
cmp
(bad)
mov
int3
lahf
mov
jl
xchg
pushf
add
xlat
sar
or
pop
dec
dec
sub
mov
(bad)
mov
clc
mov
ja
shl
pop
mov
aas
repz
fistp
mov
fild
adc
bound
popf
xor
pop
cmp
mov
add
push
xchg
mov
mov
adc
pop
imul
daa
stc
ins
(bad)
cmc
dec
xor
movs
outs
jmp
popa
(bad)
cmp
sbb
mov
dec
mov
test
xchg
dec
sbb
sbb
cmp
stos
mov
sub
cmp
inc
xchg
int3
mov
pop
retf
xor
stos
pop
rcl
clc
aad
jne
sbb
xchg
out
loopne
adc
aam
fwait
outs
in
movs
inc
int3
outs
je
das
sub
jb
pop
cmp
cdq
out
sbb
sub
sbb
stos
test
push
push
xchg
pop
mov
lds
das
cdq
ret
fisubr
test
xor
mov
mov
adc
add
or
mov
fsubp
add
test
test
rcr
and
jl
pop
pop
fidivr
pop
push
cmp
loope
sub
(bad)
sti
pusha
(bad)
pop
add
gs
(bad)
mov
cld
fistp
repz
push
movs
xchg
std
test
pop
imul
and
les
mov
push
cmps
dec
ins
jno
cmp
inc
and
push
xor
neg
dec
mov
mov
mov
sub
xor
xor
enter
add
mov
sbb
repz
adc
test
mov
inc
sub
(bad)
mov
xchg
jmp
mov
jmp
push
sbb
xor
mov
sbb
dec
cs
call
sbb
in
jbe
fwait
xchg
mov
pop
mov
or
int
mov
adc
xlat
bswap
fwait
enter
or
xlat
xor
xchg
iret
adc
push
pop
or
icebp
int3
mov
mov
hlt
mov
xchg
push
(bad)
sbb
or
mov
bound
xchg
sti
inc
sbb
add
retf
sub
jno
mov
jmp
out
xchg
mov
xchg
pusha
nop
mov
dec
popf
cmp
xor
cmp
stos
test
xchg
add
stos
xor
test
jns
ret
sti
lahf
lods
xor
dec
test
and
retf
inc
add
mov
xchg
scas
out
imul
push
xchg
inc
int
adc
mov
ins
(bad)
es
jb
repz
aas
push
dec
dec
push
mul
addr16
jns
mov
out
and
xchg
lods
mov
cmps
sbb
fdiv
cmc
enter
je
pop
dec
pop
add
popa
jae
or
out
arpl
jmp
push
scas
and
xchg
cmp
dec
arpl
mov
outs
sub
stc
lds
aas
jne
pop
inc
inc
ds
cmp
push
push
xchg
in
jle
out
cld
dec
push
test
jne
and
inc
stc
fbld
pop
pop
rol
push
in
pusha
lock
and
daa
push
push
mov
sub
std
mov
clc
mov
push
add
pop
mov
mov
inc
adc
and
leave
jmp
add
mov
sahf
(bad)
fsub
and
push
dec
ss
push
mov
mov
xchg
or
mov
movs
push
cmps
add
in
lods
jl
dec
shr
fldln2
mov
sbb
cmp
popa
(bad)
out
and
add
repnz
into
jge
lahf
sub
add
mov
sti
jo
jns
cwde
rcl
inc
sbb
inc
ret
mov
jns
jbe
xchg
cdq
push
push
push
clc
push
scas
mov
repz
fs
aas
mov
jle
pop
inc
pop
mov
inc
or
push
and
inc
stos
mov
or
mov
inc
dec
dec
jmp
shr
dec
mov
jne
daa
lea
je
and
jp
sbb
push
les
scas
cmp
cmp
call
or
into
aam
xor
jmp
test
xchg
pop
pop
ins
adc
mov
or
or
xchg
call
retf
retf
pop
adc
push
test
out
loope
adc
mov
das
cmps
iret
iret
mov
push
mov
(bad)
jo
mov
lods
sub
arpl
inc
mov
ficom
int
leave
cdq
jecxz
cmp
enter
pop
add
mov
xor
test
fld
add
dec
jnp
test
fisub
cmc
push
lods
sub
push
jne
mov
jmp
enter
fiadd
loopne
jp
fldenv
imul
sbb
jmp
pop
(bad)
xchg
test
cli
clc
and
mov
inc
inc
sbb
in
jbe
sbb
cmc
or
mul
dec
mov
mov
push
push
jnp
mov
ds
pop
mov
xor
out
add
sub
mov
in
sbb
xchg
adc
mov
fwait
mov
or
sub
mov
leave
int3
jge
push
fld
push
fwait
mov
xchg
mov
hlt
retf
pop
cwde
and
jnp
jmp
xor
das
movs
enter
pop
mov
pusha
movs
mov
int
pop
or
fwait
clc
jb
xchg
adc
pushf
pop
pop
inc
loope
inc
ss
lahf
pop
cmps
dec
jae
add
and
inc
cmp
jp
sbb
add
sub
mov
inc
cmp
mov
and
inc
(bad)
mov
adc
sbb
sub
mov
or
lods
dec
aam
sub
jae
push
(bad)
daa
jecxz
cmp
loopne
push
out
and
sbb
jno
js
in
push
shr
popf
sar
movs
or
iret
(bad)
xchg
retf
cmp
fmul
daa
jp
das
loope
add
jge
ret
out
mov
xor
into
dec
dec
ds
add
stos
sar
vorps
mov
out
jne
fcom
aad
xchg
mov
mov
xor
ja
outs
xor
jne
aad
leave
sbb
int
std
cld
clc
in
loope
stos
popa
cmc
add
mov
fist
out
and
mov
inc
dec
ins
adc
adc
mov
mov
(bad)
jae
cmp
int
mov
out
pop
and
popa
loope
lods
sahf
sub
sbb
lock
ret
hlt
adc
fwait
push
jle
mov
push
pop
outs
test
or
xchg
sub
or
inc
sbb
mov
xor
jge
sub
into
ins
mov
cmp
dec
xor
sbb
add
mov
sub
mov
(bad)
rcr
push
cmp
add
imul
fild
int
dec
mov
sub
call
push
dec
addr16
loopne
jmp
imul
out
rcr
lods
cmp
mov
xchg
mov
mov
movs
and
int
rcr
xchg
jo
into
push
inc
jmp
test
std
pop
push
push
sbb
test
inc
sbb
dec
fst
sbb
inc
and
or
push
dec
aaa
push
pop
sub
pop
add
dec
sub
and
dec
push
sub
shl
retf
sbb
adc
push
xlat
push
adc
xor
imul
sbb
cmp
or
int
jbe
pop
lods
adc
in
loope
int3
xchg
mov
cdq
lahf
push
mov
sub
xlat
jge
mov
push
call
movs
mov
fnstenv
addr16
jle
jg
or
fadd
and
repz
jp
xor
dec
mov
push
nop
pop
xor
fldcw
jge
in
mov
lods
mov
push
jae
into
lock
xor
test
dec
sub
test
iret
dec
(bad)
(bad)
nop
fadd
mov
add
jmp
outs
mov
jl
and
mov
pop
rcr
mov
pop
push
mov
jecxz
jo
sbb
or
repz
sahf
pop
fst
cwde
jb
mov
inc
loop
(bad)
les
or
sub
das
mov
inc
jmp
pop
sar
xor
add
in
repz
inc
ds
adc
ror
in
icebp
sbb
iret
jo
cmp
imul
popa
push
or
adc
or
ja
call
pop
or
imul
stos
add
ja
imul
and
icebp
push
into
sub
dec
push
xor
pusha
out
rcl
outs
or
out
mov
in
stc
je
cmp
sbb
mov
and
stos
jae
lock
sbb
add
or
xchg
mov
or
pop
push
fisub
or
sbb
mov
aaa
pop
mov
xor
nop
inc
scas
fisub
out
cmp
popf
mov
outs
mov
cmc
(bad)
idiv
test
repz
xchg
mov
mov
or
push
push
and
(bad)
loopne
mul
adc
add
mov
aas
cmc
out
je
imul
das
inc
inc
sbb
push
jg
mul
loop
sbb
sti
cmp
les
nop
jp
loope
jno
cmc
inc
mov
scas
dec
dec
shl
pop
mov
mov
or
inc
xchg
mov
push
(bad)
fprem1
icebp
mov
push
mov
sbb
push
cli
push
dec
fwait
mov
adc
cmps
cmps
dec
mov
jo
sub
and
and
loop
mov
outs
jmp
or
pop
fsub
jp
in
xlat
mov
cmc
out
cmp
lods
loopne
fidivr
cmp
lods
and
xchg
sti
inc
test
push
int3
xor
pusha
pop
xor
rol
je
shl
xchg
inc
pop
sub
dec
arpl
jne
cmp
jmp
dec
shr
or
and
aad
mov
xchg
mov
push
imul
push
sbb
and
and
and
push
mov
loope
mov
rcl
ins
out
cmp
mov
adc
aad
in
rcl
iret
fisubr
jo
and
bound
cdq
cmp
mov
pop
ja
cmp
data16
test
scas
aaa
cmp
jmp
out
xor
outs
mov
and
icebp
addr16
pop
dec
outs
(bad)
mov
(bad)
imul
jo
aas
mov
adc
jae
inc
adc
daa
xor
sbb
add
(bad)
lods
jmp
es
jne
mov
imul
ja
cmp
ins
jb
xchg
or
mov
cdq
sbb
test
mov
mov
sar
cmp
aaa
xchg
pop
shr
out
push
xchg
mov
xor
outs
and
in
xchg
jl
pop
lods
popf
cdq
cmp
jp
xlat
adc
and
cmp
and
pop
mov
mov
dec
sub
out
test
lds
cli
xchg
test
imul
pushf
xor
and
std
jmp
push
in
test
aam
and
daa
jbe
lods
pop
rol
cmp
(bad)
sub
sbb
mov
sahf
in
pusha
or
retf
bound
je
test
xchg
lods
jmp
add
ror
int3
pop
push
sub
push
cmp
mov
push
ret
mov
or
inc
ins
lods
jl
and
ins
scas
pop
dec
fbstp
cwde
fild
retf
inc
pusha
jo
cmp
xor
sub
stos
pop
mov
inc
cmp
inc
pop
xchg
cmp
pop
mov
mov
pop
fimul
out
outs
cli
in
mov
or
daa
es
adc
jmp
loop
rep
(bad)
call
stc
in
inc
jnp
cmps
(bad)
dec
lds
ins
pusha
repz
cmc
inc
and
sub
dec
lods
push
mov
jne
pop
mov
sbb
mov
bswap
pushf
mov
dec
retf
or
adc
sbb
xchg
xchg
lea
mov
pop
xor
xchg
pop
add
jnp
mov
add
cmp
pop
add
in
dec
retf
lock
mov
out
rcr
mov
xor
aaa
rcl
test
jns
rcr
mov
ret
cmp
cmp
mov
add
or
mov
xchg
mul
cmp
push
mov
dec
dec
ss
pushf
or
hlt
lahf
mov
xchg
inc
inc
push
aaa
mov
inc
sub
fimul
test
outs
bound
xor
mov
cmp
popf
pop
inc
arpl
push
sbb
lods
mov
jge
xchg
sti
imul
mov
push
neg
xchg
in
jle
aas
mov
icebp
fs
push
out
call
jae
mov
mov
and
mov
push
(bad)
mov
ja
int
xor
shr
inc
push
sub
xor
jne
fwait
pop
cwde
and
repz
sub
cli
xor
jb
frstor
in
adc
sub
pop
stc
ss
inc
cmp
lds
add
jae
pop
push
adc
mov
outs
mov
or
jl
int3
(bad)
mov
fadd
xor
jo
mov
or
cmc
pop
mov
fst
leave
push
test
dec
inc
aaa
in
or
pop
jnp
mov
lods
jne
xchg
pop
cmp
xor
lahf
jbe
not
pop
popa
es
adc
sbb
mov
punpckhdq
xchg
(bad)
and
fbstp
je
cmp
add
jno
(bad)
retf
dec
ins
xchg
jg
pop
retf
movs
sbb
and
data16
out
ins
dec
pop
shl
mov
retf
cmp
inc
scas
in
xchg
loope
(bad)
and
mov
scas
jl
icebp
xor
push
and
and
inc
add
dec
push
jno
pop
adc
and
dec
(bad)
mov
xchg
pop
sbb
jns
cmc
std
xor
dec
in
push
enter
in
xor
jecxz
sbb
scas
add
aam
dec
pop
imul
pop
xchg
cmovbe
aas
sbb
xor
rcr
jp
jnp
cmc
shl
sub
mov
outs
ror
cwde
xchg
push
punpckhdq
out
aad
loopne
daa
cs
imul
pusha
pop
pop
fnstcw
mov
cmp
cli
call
lods
je
or
sbb
sub
dec
(bad)
cdq
int3
add
(bad)
fcomip
xor
or
je
or
dec
ins
scas
(bad)
pop
sub
xor
ror
out
add
sub
(bad)
in
mul
dec
out
retf
into
enter
add
leave
stc
call
push
inc
retf
cli
pop
or
iret
fwait
sub
xor
fadd
fistp
mov
popf
daa
or
int
and
or
scas
or
push
leave
dec
pop
les
inc
mov
shl
xchg
jle
xchg
xchg
outs
dec
pop
sub
fbld
cmp
add
in
ins
lea
push
(bad)
in
pop
pop
jl
cmps
iret
scas
call
jl
nop
xor
or
xchg
push
test
call
sub
sub
jne
mov
loopne
pop
mov
dec
mov
pusha
ins
jecxz
jmp
outs
adc
xchg
adc
cmp
stos
imul
dec
sti
xor
shl
retf
enter
xor
loop
jge
mov
add
test
push
fisub
sbb
mov
sbb
shl
int3
sbb
ins
push
cdq
or
int
shr
push
and
stos
pop
outs
pop
jnp
repz
jecxz
or
arpl
cmp
outs
sbb
popf
cmp
jo
out
jns
or
push
push
lock
xlat
ja
loop
xchg
mov
rcr
fwait
(bad)
aam
adc
jo
pop
dec
neg
jo
sbb
mov
pop
mov
sbb
lods
dec
call
sti
sub
les
int
jmp
or
cmp
push
sub
inc
and
test
push
cmp
clc
shl
and
dec
arpl
add
fsubr
shl
int
xchg
mov
cmp
mov
popf
and
xor
pop
adc
lods
jnp
xchg
mov
scas
clc
aam
popf
cmp
sahf
jae
add
call
jecxz
sub
jmp
idiv
xor
adc
mov
enter
sti
ja
repz
add
or
mov
jnp
lods
and
jns
cmps
fild
pop
sub
pop
fidivr
outs
add
loop
and
dec
mov
shr
add
stos
push
cmp
pop
ror
adc
ss
(bad)
mov
jmp
push
mov
add
(bad)
out
data16
sbb
cli
or
add
outs
cld
(bad)
sub
push
push
sbb
and
(bad)
aam
test
xor
jl
mov
outs
pop
add
cld
out
cmp
mov
cmp
ret
repz
inc
xchg
add
or
mov
push
lods
push
int
adc
xor
lds
fstp
pop
add
std
or
xor
cmp
push
xor
jbe
aaa
xor
dec
jb
sti
sbb
add
dec
jo
xor
pop
cmp
cmps
repnz
xchg
daa
mov
jmp
push
sub
ret
aaa
xchg
sbb
int3
call
(bad)
xchg
jmp
and
enter
call
mov
mov
jnp
and
xor
and
push
mov
mov
jge
jnp
in
lock
push
mov
mov
mov
add
xchg
jle
movaps
js
int
mov
add
and
cdq
jmp
repnz
cmp
jle
jmp
push
push
gs
push
adc
pusha
mov
nop
pop
frstor
aas
pushf
cmp
mov
fsave
inc
sub
(bad)
imul
sahf
adc
inc
in
sub
bound
dec
mov
and
pushf
sbb
call
int
push
pushf
push
adc
sub
jecxz
outs
pusha
inc
and
hlt
inc
or
pop
jmp
jns
nop
ss
xchg
add
mov
add
ja
jp
bound
shl
lock
les
xchg
jmp
enter
arpl
rol
xchg
fild
jne
push
leave
fcmovbe
push
xchg
retf
lahf
xchg
pop
mov
dec
sub
xchg
cwde
in
xor
or
pop
es
cmps
ins
jae
(bad)
test
movs
push
dec
mov
mov
jno
shr
ret
nop
in
push
not
icebp
cmp
adc
(bad)
jae
popf
mov
stc
jl
and
pop
(bad)
outs
nop
xchg
mov
add
sbb
movs
mov
test
sbb
fs
hlt
pop
imul
jmp
dec
mov
push
inc
es
mov
xchg
mov
mov
pop
sti
mov
dec
cmps
sbb
xchg
and
and
xchg
out
dec
stos
popa
dec
push
clc
add
rcr
mov
xor
fdivr
adc
leave
repz
loopne
adc
mov
pop
call
retf
xchg
xchg
test
pop
mov
fnstsw
stc
push
adc
loope
cs
dec
mov
mov
push
ds
fdiv
add
sub
sbb
inc
inc
pop
mov
sbb
(bad)
std
addr16
jbe
retf
push
inc
cmp
mov
mov
in
mov
clc
jmp
sub
sbb
push
sbb
in
into
sub
test
and
push
inc
sub
mov
cmps
pop
push
or
(bad)
ret
jns
sbb
repz
call
sub
jnp
xlat
add
ret
aam
movs
jno
inc
ret
imul
fs
push
or
add
aaa
xor
xchg
out
clc
rcr
pop
fwait
je
pop
push
loop
sub
push
or
jmp
inc
popf
mov
pop
(bad)
into
sar
test
imul
xchg
add
mov
imul
xor
in
jae
shr
fldenv
mov
sbb
repnz
xchg
mov
mov
jmp
or
and
and
(bad)
rcr
push
mov
mov
daa
sar
sub
mov
sbb
inc
inc
push
sahf
mov
das
cmp
xchg
movs
xchg
xor
sub
sbb
jecxz
cli
dec
cld
and
lods
popa
lea
xor
jmp
sub
pop
jbe
push
test
mov
sbb
push
outs
(bad)
bound
or
fst
rcr
mov
dec
leave
add
push
sub
add
call
mov
je
into
cs
jne
xchg
leave
imul
in
ret
(bad)
jmp
mov
sub
imul
pop
jg
in
test
sbb
int3
aam
aas
xchg
mov
fdivr
jp
sbb
jle
ficom
ss
or
arpl
adc
xchg
sti
ins
push
sbb
xchg
mov
scas
les
in
stos
push
sar
add
push
push
sbb
scas
inc
sbb
inc
js
mov
sub
jecxz
aam
ret
div
mov
add
rcl
rcr
(bad)
pusha
xcrypt-ctr
cmps
pop
sbb
sub
iret
jle
mov
cmp
add
inc
push
js
loop
mov
jg
cmp
cli
mov
or
mov
(bad)
cmp
js
pop
mov
and
push
cmp
cdq
dec
cli
jo
sub
ficom
js
pop
ror
inc
pop
scas
adc
inc
icebp
int
pushf
sar
or
loopne
mov
sbb
in
std
push
xor
xchg
push
std
dec
ja
mov
cmc
mov
cmp
shl
xchg
adc
push
cmps
repz
jecxz
jl
mov
scas
sbb
aaa
enter
inc
xor
xchg
out
pop
int3
sub
stos
push
enter
fiadd
push
js
fwait
ins
movs
push
add
cmps
aas
xlat
data16
test
jb
je
aaa
sti
add
shl
inc
adc
xor
jl
push
inc
sub
in
jbe
pop
mov
xor
mov
jp
pop
daa
es
or
cmc
pop
push
(bad)
jb
push
aam
mul
test
and
js
add
(bad)
jmp
add
test
scas
mov
fsubp
sbb
jg
sbb
push
jg
dec
je
popa
xor
scas
leave
mov
bsf
xchg
mov
push
or
push
cdq
mov
xchg
call
mov
in
fdivrp
cld
inc
inc
or
push
js
inc
int3
sbb
adc
pusha
retf
lds
mov
and
sbb
inc
(bad)
cld
pop
pop
ss
mov
cli
shl
dec
test
pop
xor
jecxz
hlt
adc
fimul
aam
retf
sbb
add
or
mov
loope
sub
call
xchg
test
shl
movs
jle
cmc
in
fbld
xor
addr16
xchg
mov
mov
aaa
int3
push
mov
mov
inc
fist
xchg
adc
fimul
mov
stos
scas
push
add
arpl
scas
ror
mov
sbb
idiv
jge
pop
fidivr
sub
mov
cmp
inc
jge
or
cmp
xchg
pop
nop
retf
xor
adc
loop
xor
lock
ret
and
sbb
ss
sbb
xchg
ret
dec
and
add
mov
int
cli
cmp
cld
movs
mov
jno
(bad)
mov
mov
movs
call
dec
or
iret
les
sub
scas
add
cdq
or
cmc
stos
retf
mov
mov
retf
loopne
mov
xchg
dec
mov
pushf
cmp
add
pop
test
cli
xor
xchg
jecxz
add
stos
mov
cmps
sub
or
mov
push
fwait
sbb
rcl
popf
test
or
(bad)
mov
or
xor
jle
and
push
gs
(bad)
int3
aam
in
mov
test
or
xchg
jmp
sbb
test
mov
fisttp
pop
lods
pop
ins
call
sahf
mov
sahf
push
repnz
das
loopne
xchg
push
fmul
sub
neg
xor
mov
in
inc
pop
popf
sub
nop
dec
out
mov
jmp
or
in
xchg
push
xchg
jne
lods
mov
cmp
test
mov
inc
(bad)
mov
shr
adc
das
push
sub
cmp
mov
hlt
stos
jl
cmp
loopne
sbb
scas
imul
cwde
mov
or
xchg
fdiv
mov
cdq
das
cmps
jno
(bad)
push
mov
(bad)
into
sbb
add
mov
hlt
jge
fimul
neg
not
aad
sbb
xchg
jne
lock
aas
mov
inc
dec
stos
jecxz
mov
jae
test
cmp
mov
cmc
cmp
fmulp
push
add
xchg
ror
fisubr
cs
(bad)
and
hlt
add
xor
movs
(bad)
ja
pop
popf
mov
inc
(bad)
xchg
xchg
and
clc
xchg
inc
mov
sub
fdivr
inc
stc
pop
frstor
inc
icebp
push
ret
mov
stos
test
sub
ja
into
dec
xor
adc
xor
inc
int3
lahf
inc
mov
clc
(bad)
into
or
cld
ret
test
in
and
push
test
(bad)
mov
inc
add
mov
cmp
xchg
push
stos
xor
ret
dec
je
test
cmp
push
jo
mov
push
cmp
add
and
push
rcr
xor
fisttp
jb
sbb
inc
hlt
dec
mov
sub
test
or
(bad)
and
ret
sbb
rcr
push
fld
enter
mov
stos
std
push
loope
(bad)
pop
shl
xchg
sub
push
into
jg
adc
sub
loopne
stos
mov
sub
push
xchg
loope
in
aam
faddp
add
jo
push
in
sbb
jg
pop
sub
jp
in
cmps
adc
ja
dec
cmp
push
push
pop
pop
rcl
daa
ret
ja
call
imul
sub
mov
xor
cdq
shl
push
push
fisttp
push
cmp
es
add
mul
sub
scas
cmps
push
fs
dec
retf
mov
or
xchg
nop
and
(bad)
js
lahf
in
mov
add
cs
dec
in
inc
pop
dec
inc
mov
jno
call
or
push
cmp
cmp
mov
jne
test
lods
mov
adc
leave
imul
sub
dec
test
ja
pop
sbb
or
and
aaa
mov
scas
nop
call
dec
jl
(bad)
frstor
add
sbb
pop
fbld
lea
cmc
test
mov
jo
mov
bswap
xor
add
cmc
or
xchg
adc
xchg
setne
in
cmp
sahf
test
inc
mov
lahf
movs
dec
sub
out
fwait
add
mov
mov
mov
ds
jne
fsubr
jle
xchg
inc
mov
jecxz
retf
push
pusha
mov
test
ror
cmp
and
xchg
xchg
jae
sub
jns
add
mov
and
push
jp
test
(bad)
nop
jmp
rcr
outs
and
in
mov
sub
loop
mov
jns
xchg
xchg
repz
pop
or
(bad)
push
jmp
out
ret
pop
sub
push
aaa
cmc
dec
sar
lds
jle
xchg
sub
inc
sub
(bad)
sub
mov
mov
and
push
jno
add
or
lea
sbb
enter
fcom
das
xor
sar
inc
mov
jecxz
mov
xchg
sbb
xor
mov
mov
mov
outs
mov
leave
into
hlt
mov
dec
push
mov
in
test
jno
aaa
cmp
xchg
pop
and
push
sbb
and
popf
int3
xchg
pop
jo
into
aam
icebp
push
es
push
js
stos
nop
and
imul
pop
fldenv
stos
std
ins
out
lods
cmp
mov
ror
jmp
repnz
add
in
movs
sub
mov
cmp
jmp
fsub
call
leave
(bad)
xor
sbb
adc
pop
add
movs
jb
sbb
xchg
outs
mov
call
stos
std
rol
ins
add
jb
and
loope
xor
jns
test
mov
in
dec
stos
pop
cmps
aaa
clc
mov
fisub
sbb
imul
sub
sahf
xchg
loop
repnz
add
scas
cmp
mov
push
loope
inc
scas
push
jecxz
xor
popa
das
les
gs
push
aas
out
fcmovne
adc
adc
push
xchg
inc
retf
xchg
nop
jnp
jecxz
push
sahf
int
repnz
loope
test
adc
sbb
inc
jle
ss
xchg
add
xor
sub
adc
mov
xchg
icebp
aad
cdq
dec
pop
aam
inc
pushf
mov
jle
mov
xchg
xchg
and
aad
int
sbb
lea
sahf
ja
push
mov
fidivr
sub
scas
mov
sbb
shl
dec
aad
sub
push
push
cmp
shl
out
aaa
cmp
jmp
fdiv
jecxz
mov
(bad)
mov
mov
icebp
ror
pop
push
pop
nop
outs
fcmovnb
mov
(bad)
sub
je
jmp
imul
xor
in
push
add
push
cmps
movs
pop
(bad)
sub
loopne
(bad)
mov
sbb
stc
and
shl
daa
dec
into
cmps
cmp
jp
dec
sbb
cmps
adc
sub
jp
sub
dec
ss
cwde
sub
and
and
mov
mov
dec
pop
xor
or
and
and
xor
imul
mov
pop
jne
sub
add
jnp
cmp
and
sbb
pop
sti
xor
or
or
stos
and
lods
push
jecxz
xor
pop
cmps
sbb
out
inc
adc
js
aam
movs
xor
mov
or
xor
shl
or
int
jno
cmp
adc
inc
sub
loope
stos
cmc
pcmpeqw
push
cmp
mov
dec
or
test
sbb
jmp
data16
test
data16
test
cmp
sbb
jg
inc
or
retf
mov
imul
ficomp
js
xchg
gs
adc
adc
jb
out
cmp
stos
stos
xlat
call
xor
cld
lods
push
in
dec
lods
mov
cmps
xor
fisttp
mov
mov
test
aam
mov
lea
enter
mov
cli
jnp
fcom
pop
outs
pop
repnz
mov
and
jbe
cs
fwait
jl
sbb
(bad)
pop
mov
inc
and
push
punpckldq
iret
fadd
fstp
jbe
dec
cld
jns
fyl2x
loopne
push
mov
mov
test
sbb
popf
jle
adc
adc
push
pop
adc
lds
sub
push
or
in
pop
pop
xchg
pop
mov
adc
dec
ins
inc
push
xor
icebp
arpl
stos
sbb
cmp
div
dec
ja
mov
nop
pop
xor
cmp
ss
aam
sub
jge
out
lahf
jmp
cs
pop
jnp
arpl
cs
repz
stos
scas
cmp
xor
mov
adc
sti
int
jmp
mov
shl
je
adc
out
dec
or
mov
push
inc
loop
cmp
push
(bad)
fstp
xlat
loopne
daa
add
mov
(bad)
and
daa
push
mov
push
outs
mov
(bad)
shr
not
xor
mov
pop
mov
inc
aas
data16
mov
jae
xchg
pop
xchg
adc
int3
out
cmps
or
jns
xchg
rcl
or
out
cs
sahf
sar
(bad)
repz
stos
pop
mov
push
push
lahf
adc
lods
add
jae
ins
retf
enter
sub
aam
or
pop
push
cmc
addr16
out
js
daa
cmp
mov
loop
and
push
jecxz
jmp
xchg
or
scas
adc
test
ret
add
pop
add
fisubr
and
xchg
adc
dec
push
ja
repz
and
adc
mov
xchg
mov
je
xor
add
mov
mov
out
mov
div
test
pop
sbb
sbb
movs
icebp
mov
sbb
and
pop
int
add
aad
call
pop
bswap
arpl
xchg
das
sub
or
test
test
jne
shl
repz
loopne
push
fistp
inc
dec
push
int
mov
or
aaa
rcr
mov
add
jge
into
dec
fisubr
ins
mov
jg
not
sar
cli
push
pushf
push
jns
call
(bad)
in
cmp
mov
and
xlat
mov
pop
xor
ja
xor
ins
mov
fwait
leave
(bad)
inc
mul
pop
mov
loope
test
push
xchg
push
out
pop
sub
dec
jge
movhlps
adc
in
rol
(bad)
clc
push
mov
xchg
aam
imul
cmovb
mov
mov
xlat
stos
push
cmp
imul
inc
xchg
fst
adc
fimul
inc
arpl
add
xor
jmp
data16
repz
cmp
loopne
fisubr
mov
clc
fldenv
cmp
scas
dec
shr
pop
xor
stos
or
adc
clc
iret
mov
inc
sub
das
(bad)
sbb
loope
inc
inc
ins
sub
out
xchg
and
pop
test
xchg
xchg
cwde
popa
scas
adc
inc
out
and
dec
bound
adc
ficom
clc
xor
arpl
clc
jecxz
push
inc
mov
xor
pop
loop
ja
xor
mov
mov
out
sub
ds
in
inc
int3
loope
int3
mov
std
jmp
cmp
dec
xchg
ror
push
mov
pop
adc
mov
dec
test
pushf
or
xor
dec
je
mov
movs
cwde
aam
dec
arpl
(bad)
dec
cmp
popa
xchg
cli
or
inc
outs
push
mov
and
sub
aaa
mov
dec
out
mov
vpandn
in
xor
out
in
imul
push
xchg
push
jbe
cmps
push
mov
sub
mov
jbe
ins
ficomp
add
cmp
jl
sti
xchg
jb
jl
out
call
fsub
jbe
mov
pop
add
fstp
imul
mov
or
inc
stc
jbe
iret
cmp
cmp
loope
out
cmps
outs
mov
sub
pop
test
jno
ret
mov
fs
jo
(bad)
pop
les
mov
std
sbb
shl
pop
rcl
add
push
or
test
and
jl
mov
jecxz
enter
(bad)
or
cmp
or
jmp
push
dec
jmp
adc
dec
xor
adc
outs
(bad)
xlat
xor
push
and
shl
(bad)
fcomp
and
xor
pop
cmps
xor
(bad)
lods
sbb
sahf
shr
push
repz
mov
daa
(bad)
push
shl
cmp
cmc
(bad)
icebp
js
jmp
and
push
or
leave
aad
repnz
mov
cmps
cmps
xchg
(bad)
adc
push
lds
call
retf
xor
push
shl
in
cdq
sbb
dec
sbb
(bad)
jae
add
popf
pop
test
or
and
mov
ss
or
cmps
inc
dec
and
cmp
lea
and
mov
add
xchg
shl
adc
lods
mov
add
ins
pop
sbb
bound
pop
xor
into
stos
out
ja
or
int
cli
test
dec
xor
lods
sbb
imul
mov
and
jae
and
mov
aaa
xor
add
inc
sub
push
dec
lods
push
jns
not
pop
int3
dec
test
inc
mov
adc
inc
leave
test
mov
and
(bad)
ja
xchg
adc
mov
cwde
in
out
in
mov
cmps
stos
sub
movs
sbb
xor
out
xchg
bound
sub
jno
mov
ret
or
out
dec
inc
ror
cmp
mov
mov
mov
push
out
aaa
cmp
lea
and
sar
ret
data16
jge
push
loopne
pop
pop
repnz
in
xchg
cmp
push
pop
jae
loope
push
ret
inc
cmp
add
cs
loope
adc
sub
add
fadd
sub
int3
and
xchg
pop
jno
xor
out
pop
lods
xchg
nop
cld
mov
les
fidiv
sub
push
pop
daa
cmp
xor
jmp
xchg
std
stc
sub
jnp
fsub
add
inc
mov
aaa
jge
loop
lock
cmp
lahf
and
inc
inc
js
lds
test
push
adc
loope
xchg
fxch
jne
fst
xchg
pop
js
sub
mov
test
sub
cli
rcr
and
sbb
std
mov
das
out
or
sar
pop
adc
push
outs
xor
jno
icebp
in
push
scas
lahf
nop
stos
imul
pop
jecxz
xor
mov
jno
test
repnz
lds
push
hlt
cmps
js
adc
xchg
js
(bad)
dec
push
test
out
addr16
pop
xlat
mul
leave
pmaddwd
retf
mov
(bad)
shl
lock
dec
scas
jne
hlt
jp
aaa
push
loope
mov
setnp
jbe
stc
mov
pop
and
add
pop
mov
push
ss
dec
xchg
pop
aaa
inc
mov
dec
mov
ret
sub
cmps
fwait
scas
xor
push
dec
push
aam
mov
mov
mov
xchg
mov
dec
add
add
or
ret
pop
inc
mov
mov
xor
or
and
stc
test
xor
(bad)
jae
xlat
push
leave
pop
mov
sbb
mov
or
imul
dec
fucom
push
jge
daa
mov
cmc
ds
test
(bad)
xor
idiv
test
xchg
sub
inc
cwde
sub
xor
mov
adc
mul
mov
fisub
xchg
xor
push
xchg
push
push
add
iret
stos
in
cmp
or
loop
inc
xchg
or
push
repnz
dec
dec
adc
adc
push
push
mov
sbb
and
cmp
xchg
mov
ud2
in
dec
jl
div
mov
jmp
cmp
out
call
or
sub
xlat
imul
sub
ds
dec
jns
xchg
mov
cmp
loopne
add
push
sub
cwde
test
ins
pop
sbb
ds
sti
sti
xlat
pushw
data16
aad
lea
sar
clc
mov
and
bound
add
movs
movs
in
es
sub
ret
int
inc
or
(bad)
xlat
mov
mul
cs
ret
adc
inc
scas
push
(bad)
fwait
sbb
out
sbb
push
dec
adc
cwde
jae
movups
cmp
rcl
test
xchg
data16
into
cdq
enter
scas
cmp
jecxz
ins
rcr
clc
push
outs
push
cmp
dec
jae
cmp
mov
and
(bad)
shl
div
push
add
xchg
inc
inc
retf
sub
aaa
imul
out
hlt
shr
dec
dec
sar
daa
ss
push
je
mov
sti
or
add
mov
dec
jle
sub
inc
je
outs
xor
push
addr16
or
bound
jmp
loopne
mov
out
jae
and
sbb
daa
ret
sbb
push
sub
loope
and
clc
retf
(bad)
stos
cmc
(bad)
sbb
out
or
xchg
lods
stc
sub
in
mov
cmp
adc
(bad)
sbb
jbe
sar
jg
pusha
push
cmc
loop
dec
enter
arpl
fdiv
fsub
ss
inc
inc
ss
fdiv
jno
cmp
sbb
outs
hlt
dec
xor
shl
sub
cmp
mov
sahf
loopne
les
mov
add
pop
jmp
outs
cmp
popa
mov
add
and
push
mov
and
xchg
and
pop
dec
cmovb
pop
mov
jns
and
sbb
pop
mov
popa
push
push
bound
pop
seto
cld
lahf
(bad)
xchg
sbb
lods
xor
ss
adc
add
mov
xor
int3
mov
repnz
nop
add
ja
scas
aas
push
test
adc
push
pop
mov
inc
ins
cmp
in
cmps
retf
mov
in
xchg
xlat
xchg
mov
inc
jno
mov
addr16
dec
ja
fwait
xchg
mov
inc
sar
add
inc
out
push
cmp
inc
pop
xor
fwait
dec
pop
adc
icebp
cmp
lock
xor
or
in
jmp
cs
movs
outs
cmps
dec
pusha
mov
dec
inc
pop
and
movs
mov
call
jl
int3
jp
add
inc
add
mov
outs
popa
in
jo
addr16
push
mov
and
sbb
and
pop
jl
push
xor
cmp
adc
adc
ins
add
xor
movs
jmp
dec
lock
add
call
sub
int
add
in
or
lahf
lea
ret
test
retf
clc
dec
in
clc
jnp
outs
mov
mov
out
sub
inc
pop
jp
std
xor
jecxz
xchg
lds
out
dec
mov
mov
sbb
lock
arpl
or
xchg
sub
rcr
std
or
out
push
inc
mov
jg
push
fcomp
mov
addr16
in
(bad)
mov
daa
or
pop
sub
sbb
pop
push
rcr
ficomp
cld
out
mov
inc
hlt
pop
xchg
jg
movs
mov
ror
mov
loop
(bad)
es
mov
imul
or
xchg
mov
dec
test
inc
add
call
mov
xor
xchg
aaa
outs
mov
mov
das
sbb
push
jb
jo
adc
sbb
mov
jl
fwait
dec
and
push
scas
fild
ja
sbb
imul
in
push
and
dec
pop
stos
pop
xchg
sar
js
loop
push
mov
pushf
cmp
push
dec
jae
sbb
aam
je
push
in
fucomip
jge
shl
popf
icebp
test
loop
pusha
cmps
hlt
shl
pop
std
in
pushf
stos
test
pop
(bad)
cli
push
push
or
daa
in
jg
mov
dec
pop
dec
addr16
ins
mov
jl
jbe
popf
jg
inc
xchg
pop
mov
inc
xchg
pop
cmp
pop
adc
adc
and
aam
push
fisubr
mov
xchg
xchg
rcr
and
add
inc
std
sub
sbb
das
or
out
lock
bound
jae
outs
xor
push
jb
cmp
xchg
lds
jno
push
jae
pop
movs
pop
sub
jmp
mov
push
sub
es
cmps
in
icebp
adc
sbb
das
sbb
inc
popa
mov
int3
repz
call
sub
and
shl
jmp
stos
xchg
xor
jecxz
push
in
mov
sbb
xor
ror
xchg
pop
pop
add
mov
xor
test
mov
sbb
nop
sub
and
out
es
pop
gs
adc
fdivr
and
dec
xchg
adc
mov
les
inc
push
movs
mov
push
rol
cwde
shl
test
jmp
in
outs
mov
outs
jecxz
dec
test
add
jns
dec
mov
xchg
fwait
pop
loope
xchg
aas
retf
push
push
jnp
cmp
mov
jmp
mov
xchg
inc
and
ins
lahf
inc
pop
test
jno
test
into
xchg
xchg
sbb
or
hlt
cdq
push
inc
xor
inc
adc
sbb
dec
pop
mov
or
call
sbb
fdivr
adc
rcl
and
mov
mov
jmp
xchg
push
enter
jecxz
jnp
cs
out
sub
xchg
mov
adc
or
sub
push
mov
shr
test
(bad)
inc
xor
(bad)
sar
hlt
clc
cmp
and
(bad)
mov
pusha
mov
cmp
test
sub
mov
outs
aaa
(bad)
arpl
dec
loopne
push
adc
push
aas
dec
push
pushf
inc
fistp
rcr
push
dec
das
mov
sbb
and
in
xor
fimul
cdq
or
jl
dec
xor
idiv
add
mov
stc
mov
mov
xchg
xchg
pop
pusha
(bad)
idiv
in
lds
js
test
sbb
outs
lds
shl
jae
add
imul
pop
ret
(bad)
or
inc
cmps
dec
jge
and
sub
dec
cvtpi2ps
loopne
outs
aas
arpl
cdq
sub
repnz
bound
sub
dec
in
scas
sahf
jnp
in
cdq
ja
inc
dec
inc
arpl
push
cwde
add
rcl
xchg
mov
loope
dec
test
mov
mov
cmc
jno
fs
mov
mov
push
aas
xor
or
cmc
mov
call
xchg
mov
pop
xor
push
add
pop
dec
std
loop
xchg
and
icebp
pop
fistp
in
push
or
sub
(bad)
add
mov
lock
cwde
outs
jecxz
imul
xor
mov
dec
push
jp
mov
(bad)
and
jle
cmps
repnz
fs
and
push
lds
and
sti
jmp
xchg
shr
sub
in
xchg
test
adc
mov
loop
outs
mov
scas
fcom
add
mov
aaa
mov
mov
dec
sti
jae
dec
and
(bad)
push
add
sahf
iret
shl
jl
push
cmps
inc
jbe
fcom
into
movs
dec
cmp
in
xchg
sub
gs
sub
jp
xchg
fadd
fs
cwde
ret
lods
jns
inc
mov
fmulp
jp
jae
fdiv
sbb
jnp
mov
stos
popa
adc
stc
neg
pop
imul
retf
jg
mov
pop
push
pop
adc
adc
mov
fild
jmp
ror
pop
sbb
mov
jecxz
rcl
dec
(bad)
pusha
aas
repz
icebp
pop
jo
push
loopne
(bad)
sbb
sahf
addr16
dec
test
add
cmp
add
popf
push
lods
xchg
enter
jae
ins
xor
xchg
push
repnz
add
ins
aad
ret
imul
lods
pushf
movs
add
into
outs
adc
movs
jnp
xor
popa
sahf
jecxz
and
lods
outs
jl
xchg
fistp
lahf
scas
pop
es
mov
mov
sti
push
mov
pushf
pusha
sub
fcomp
mov
mov
bound
hlt
(bad)
jmp
sahf
xor
xchg
or
push
or
pop
sub
jp
or
cmp
xchg
xchg
imul
mov
jl
data16
xor
ds
imul
push
lds
cs
ret
repnz
mov
ret
lods
js
sar
cmp
cmps
adc
int3
push
pop
pop
out
lahf
sub
iret
jle
dec
inc
nop
dec
daa
test
xor
and
inc
mov
hlt
mov
iret
fs
mov
cmp
inc
mov
jecxz
clc
lea
loop
sbb
int3
mov
data16
mov
xor
mov
in
xor
mov
add
jbe
adc
je
retf
sbb
std
mov
jbe
leave
mov
push
sub
shl
out
pusha
aad
fcmovnu
mov
mov
daa
and
repz
cmp
adc
xlat
push
adc
leave
xor
retf
sbb
les
lods
ror
cmp
mov
icebp
pop
and
or
cmp
fmul
xor
mov
mov
dec
cmp
push
shrd
outs
add
sbb
xor
pop
inc
cmp
inc
sbb
adc
dec
lods
stos
xchg
lods
sub
and
leave
aas
retf
js
call
shl
shr
mov
or
sbb
fimul
ss
mov
jns
jmp
pmullw
dec
xor
jg
push
test
movs
add
inc
lea
imul
push
dec
add
xchg
pop
pop
cmps
outs
push
pop
mov
ror
mov
gs
mov
pusha
mul
es
or
push
mov
mov
ins
and
xchg
sbb
jno
popf
rol
jnp
sbb
jne
lods
pop
mov
mov
aad
mov
jg
into
fnstcw
fisub
fsub
pop
inc
jne
lds
fs
mov
push
mov
cwde
mov
jmp
lods
xchg
out
fyl2x
pop
sbb
mov
lods
dec
pop
loope
addr16
adc
and
sbb
loope
sub
mov
jmp
push
and
addr16
push
inc
pop
xor
call
or
retf
dec
push
lahf
push
clc
push
dec
or
mov
aaa
test
jl
mov
and
jns
mov
and
ss
push
mov
sahf
jmp
fcomp
add
rcr
ret
stos
cmp
aas
sbb
fisttp
retf
cmc
lahf
add
sti
inc
sbb
rcl
test
stos
or
es
ret
mov
jb
and
ret
aas
lahf
cmp
fistp
jbe
(bad)
dec
mov
(bad)
cmp
sub
popf
loope
jp
xor
dec
lea
mov
lea
or
push
sub
push
adc
or
popa
jmp
dec
and
jb
jg
mov
xlat
in
ins
mov
mov
neg
xchg
fadd
(bad)
sti
std
aad
xor
mov
cdq
mov
mov
outs
std
pop
test
mov
sbb
stc
pop
and
ins
or
push
and
rcr
push
or
lods
pop
or
into
dec
callw
mov
sub
xor
retf
jno
push
inc
and
scas
movs
dec
pop
mov
hlt
sar
xchg
cmc
dec
mov
mov
adc
pop
(bad)
fbstp
mov
add
outs
and
xchg
cdq
sbb
in
pop
out
and
out
xchg
stos
jmp
add
pop
js
sbb
dec
jecxz
jg
cld
fidivr
sub
push
arpl
mov
mov
mov
dec
cmp
(bad)
mov
stos
add
int3
idiv
mov
jmp
xchg
adc
mov
loope
dec
inc
pop
out
call
jle
pop
xchg
sub
dec
push
ds
sbb
ret
sbb
fwait
std
xchg
std
int3
pop
inc
sub
das
pop
add
jmp
sbb
sbb
lock
enter
cmc
adc
pop
(bad)
sahf
js
popa
mov
arpl
mov
rcr
mov
xor
out
movs
popa
add
mov
and
mov
mov
xchg
sahf
gs
sbb
sar
xor
js
in
ficom
icebp
cwde
jnp
mov
popa
dec
sti
jno
inc
or
dec
mov
in
arpl
mov
cmp
(bad)
shl
lods
adc
and
cs
cdq
inc
jle
mov
inc
inc
stos
mov
or
test
cld
cmc
mov
mov
inc
jp
(bad)
adc
test
int
dec
popf
sbb
inc
lods
or
cmps
adc
(bad)
xchg
test
mov
or
push
dec
adc
adc
mov
inc
push
fdiv
push
jnp
pusha
mov
xor
cmp
adc
dec
and
retf
out
mov
dec
sub
(bad)
outs
in
test
in
adc
out
(bad)
test
js
aad
shl
cmp
mov
xlat
inc
sti
stos
mov
imul
push
pop
sbb
cmp
movs
or
iret
outs
jae
jbe
test
pop
mov
ret
add
mov
jge
sbb
jns
mov
pop
jb
and
sub
out
pop
imul
rol
xor
push
cmp
mov
repz
mov
dec
loop
shl
cld
mov
mov
mov
mov
iret
aaa
and
pop
adc
mov
fwait
mov
jp
add
pusha
popa
(bad)
sti
and
adc
mov
dec
int3
call
pop
sbb
or
or
mov
lods
pop
ins
out
mov
mov
fdivr
and
loopne
cmp
repz
cmp
std
xchg
cmp
mov
ins
and
mov
or
mov
or
gs
(bad)
enter
test
push
inc
cmp
cmp
dec
ret
retf
(bad)
out
leave
into
cld
and
loop
lea
jae
out
loop
leave
(bad)
retf
mov
icebp
fnstcw
cmps
xor
aas
sub
push
fist
cmp
inc
inc
xchg
nop
push
mov
stos
push
jb
mov
in
mov
xchg
push
mov
dec
dec
mov
dec
jle
rol
dec
push
pop
mov
mov
hlt
(bad)
in
mov
aad
mov
rol
mov
dec
sub
int3
es
xchg
lea
inc
js
ja
xchg
test
pop
leave
jno
xor
lds
mov
in
add
add
movs
adc
rcr
or
shl
jl
div
jmp
inc
jmp
jb
mov
jecxz
rol
mov
addr16
mov
sub
xor
addr16
xor
push
mov
mov
mov
push
fiadd
add
sub
jmp
ret
mov
add
xchg
push
scas
out
xchg
mov
cmp
mov
rol
bnd
mov
cmps
cmp
and
xor
loopne
mov
sbb
mov
pop
ret
sub
hlt
pop
fdiv
xor
sar
inc
sub
and
sub
mov
push
lea
test
jmp
sar
mov
add
das
leave
dec
test
push
push
xor
in
sets
add
xor
cdq
mov
adc
cmp
out
ret
fs
in
lahf
mov
in
sar
or
cmp
sub
sahf
pop
jno
mov
not
mov
movs
dec
and
ins
cmp
mov
es
add
fidiv
ret
adc
mov
out
fmul
pop
or
imul
xor
sub
mov
push
fld
cmp
mov
pusha
cmc
fistp
and
pop
movlps
dec
cmp
fwait
int3
jmp
aam
or
add
sbb
data16
and
loop
and
sbb
icebp
add
mov
pop
cmp
inc
cmp
cmp
jp
push
fild
jge
mov
inc
lea
shl
push
ret
mov
mov
pcmpeqd
cli
dec
fmul
enter
aas
xchg
popf
ds
mov
xor
mov
xchg
(bad)
mov
add
ja
hlt
xchg
push
out
and
jl
xchg
in
mov
call
push
fmul
int3
nop
imul
sub
fmul
xchg
push
cmp
sbb
jle
repz
dec
inc
and
les
mov
outs
push
pop
pop
int3
push
aam
push
cld
into
cwde
popa
or
jl
clc
int3
cmp
std
cli
sbb
cmp
push
dec
inc
test
mov
mov
std
adc
(bad)
mov
ror
mov
pop
mov
add
xchg
cmp
adc
lds
and
push
pop
xor
cmps
lahf
jo
lahf
shl
xchg
nop
mov
push
pswapd
mov
cmp
ins
push
jbe
loopne
ret
mov
push
inc
dec
sbb
or
push
adc
and
mov
sahf
sahf
lahf
or
push
and
lods
xor
jmp
sti
mov
sub
(bad)
and
fwait
mov
mov
push
jbe
jae
lahf
lea
retf
loop
pop
repz
in
sbb
lds
aad
ror
imul
add
sbb
daa
aaa
test
mov
(bad)
adc
and
mov
mov
push
mov
fwait
out
or
leave
jp
sbb
fimul
fincstp
lock
(bad)
popa
iret
push
sar
push
or
dec
adc
cmc
dec
fs
cmc
sub
pop
sbb
mov
xchg
xor
(bad)
out
fincstp
push
xchg
jb
shr
ins
sub
(bad)
cmc
adc
dec
(bad)
scas
pushf
inc
adc
mov
pop
pop
sahf
js
pop
(bad)
in
dec
fmul
nop
sbb
std
push
ins
jbe
or
fldcw
and
push
xchg
push
pop
stos
sub
in
mov
and
pop
ins
inc
dec
push
mov
sbb
scas
mov
pop
jne
inc
(bad)
out
jecxz
add
or
and
ins
mov
sub
ss
std
clc
cmp
cmp
(bad)
fstp
mov
xchg
popa
repz
pop
mov
sbb
mov
or
adc
scas
xchg
icebp
dec
xchg
stc
xor
inc
out
shl
repz
not
mov
sbb
data16
and
xchg
jns
test
xor
rcl
mov
jo
xor
and
mov
loop
xchg
in
inc
push
xor
rcr
das
lahf
jge
sbb
icebp
out
mov
jbe
enter
movs
jmp
jns
in
sub
bound
sbb
fsubr
xor
jmp
dec
retf
adc
idiv
xor
rcr
outs
mov
push
cwde
retf
inc
xchg
dec
test
jge
ret
retf
ficom
lods
nop
or
jne
xor
adc
xchg
pop
les
or
(bad)
call
sbb
xchg
sub
push
and
add
or
daa
xor
repnz
sbb
test
xchg
cs
xchg
inc
inc
push
sbb
imul
shl
xor
push
sahf
dec
loopne
mov
out
repz
test
mov
push
xchg
xchg
and
jecxz
cmp
(bad)
into
outs
mov
pop
xor
dec
aas
jl
movs
mov
aaa
leave
clc
in
or
inc
cmps
pop
mov
xor
das
inc
dec
cmp
xchg
push
aaa
movs
add
sti
pushf
jb
xchg
add
mov
out
daa
dec
test
pop
or
call
sbb
mov
cmps
fcomp
mov
fimul
xor
div
bound
add
cmps
xchg
lock
movs
adc
rcl
dec
js
xchg
ret
out
test
mov
ins
sbb
ret
test
add
push
call
aaa
jne
xchg
cdq
push
aas
or
dec
add
adc
retf
add
gs
scas
sbb
jo
rol
mov
adc
gs
scas
push
pop
dec
add
xor
cmp
mov
mov
mov
imul
into
or
retf
or
jmp
popa
pop
int3
cmc
mov
jmp
retf
outs
sahf
frstor
add
sbb
mov
or
adc
push
mov
dec
loop
inc
cli
test
dec
add
sub
xlat
inc
hlt
shl
jbe
fwait
pop
retf
les
xchg
scas
pop
in
popf
fs
mov
xor
inc
jae
retf
in
je
mov
ret
sub
jecxz
or
inc
test
and
xchg
xchg
and
mov
loopne
ret
push
add
bound
xchg
mov
ror
jb
imul
pop
out
sbb
sub
pop
fnsave
sbb
jg
pusha
or
xor
mov
sbb
mov
or
pop
loope
mul
call
add
add
push
(bad)
out
pop
mov
fst
jmp
out
sbb
mov
xchg
cmp
pusha
lods
fld
and
in
jo
mov
pop
and
pop
cmc
xchg
sbb
push
jmp
pop
(bad)
ins
scas
push
pop
push
xor
imul
in
inc
push
push
jecxz
adc
ins
or
pop
pushf
div
mov
out
dec
or
jne
(bad)
(bad)
and
dec
out
adc
retf
pop
call
dec
push
sub
or
loope
pop
jl
dec
or
outs
(bad)
pop
dec
or
fst
rol
out
sub
sbb
mov
sbb
push
bound
popa
leave
test
pop
je
xchg
cmp
ins
pop
xchg
std
jmp
ret
jmp
fbstp
push
rol
and
outs
sub
mov
arpl
retf
(bad)
mov
or
cmps
xlat
test
and
sahf
shr
test
lock
add
mov
imul
ja
mov
push
xchg
cmp
xchg
jnp
mov
cmp
ins
dec
push
inc
mov
ret
or
movs
inc
mov
jbe
mov
adc
xlat
int
xchg
out
push
ror
jnp
pusha
or
cwde
outs
(bad)
mov
and
xchg
in
jmp
mov
mov
mov
(bad)
cs
mov
imul
push
pop
or
in
(bad)
xor
xor
add
aad
mov
inc
nop
sbb
sub
sub
sbb
loopne
out
sub
mov
and
adc
std
loopne
ins
adc
inc
sbb
pop
push
sbb
mov
jmp
mov
or
das
test
add
jae
(bad)
cmc
xor
inc
sbb
sub
cmc
push
je
(bad)
xor
mov
pop
mov
hlt
add
xor
loop
into
cmp
xor
or
arpl
xor
pop
or
retf
std
inc
cld
sbb
sub
xor
add
mov
pop
rcr
mov
mov
mov
cmp
ror
into
xor
(bad)
adc
cli
xchg
or
cmp
jp
(bad)
stc
adc
dec
into
sub
cmp
pop
ja
retf
or
pop
sub
test
cmp
xchg
adc
in
ror
leave
loopne
sar
scas
adc
pop
ins
(bad)
pop
xor
clc
sub
nop
adc
pop
in
dec
add
adc
gs
ds
pop
cli
push
cmp
mov
dec
dec
inc
movs
loopne
push
imul
adc
test
adc
jbe
(bad)
mov
push
xchg
lea
mov
fwait
push
shl
pop
inc
ret
mov
iret
sbb
ds
sbb
rol
sbb
jge
and
cmp
and
push
inc
popa
mov
fistp
mov
cmp
push
rcl
(bad)
cmp
mov
jecxz
sub
mov
repz
call
inc
cmp
addr16
xor
adc
mov
xor
sub
cli
or
ss
cli
cmc
cmp
jnp
call
mov
dec
out
jae
jmp
dec
retf
xor
cmp
data16
fild
mov
ins
je
sub
mov
es
aad
or
out
std
pop
sbb
aas
rol
in
out
inc
popa
movs
(bad)
fmul
push
aaa
cmp
dec
popf
scas
mov
mov
mov
loope
sar
pop
out
jmp
push
add
sub
cli
or
mov
(bad)
mov
fistp
mov
mov
fadd
mov
aam
dec
rol
cwde
pop
scas
pusha
sbb
cmp
jmp
(bad)
iret
es
cmp
adc
cmps
in
mov
fisub
pop
fdiv
add
pmaddwd
mov
inc
mov
js
adc
add
sub
jo
repz
mov
inc
fisttp
xor
pusha
and
mov
xor
lahf
jne
pop
or
lea
loopne
mov
movs
data16
jge
fsubr
push
js
xchg
stc
stc
xchg
scas
sbb
cwde
je
cdq
in
ror
jp
imul
push
jo
jge
sub
das
nop
repz
std
enter
popw
retf
outs
cmp
loope
ret
or
adc
lods
sahf
cli
je
aas
stc
int3
jb
retf
les
shl
into
out
pop
push
push
pop
adc
push
data16
stos
pop
call
call
in
scas
or
gs
pushf
push
fdiv
dec
push
or
call
mov
arpl
jae
(bad)
or
outs
adc
(bad)
(bad)
xchg
outs
cmp
aad
ds
movs
xchg
jp
pop
cmp
and
mov
movaps
push
shr
adc
ffreep
pushf
popa
stos
das
rep
ja
(bad)
std
lahf
cmps
and
or
jg
push
inc
ss
push
cmc
out
fisttp
pop
outs
add
rol
inc
stos
rol
pop
mov
cmp
mov
repz
iret
sbb
dec
std
xchg
mov
scas
(bad)
shr
nop
test
in
enter
inc
lods
imul
xchg
pushf
cmps
or
fwait
jmp
jbe
pushf
jecxz
jmp
adc
outs
xchg
popa
test
loope
sbb
scas
and
cmp
inc
das
pop
adc
ins
push
rcl
(bad)
outs
dec
movs
adc
jmp
je
jmp
sbb
push
cmps
mov
cmp
or
retf
in
(bad)
aad
fisub
xchg
mov
ss
jle
mov
es
rcl
or
xor
nop
nop
sub
dec
in
je
imul
daa
(bad)
in
xor
or
scas
or
loope
xchg
pop
fistp
dec
mov
cmp
out
and
and
test
lahf
sar
sub
shl
jne
cmp
or
and
aaa
addr16
jmp
fisub
enter
sub
stc
mov
aaa
and
aaa
stos
pop
and
dec
ret
pop
cmp
jl
ficomp
push
xchg
test
inc
push
pop
sub
iret
stos
pop
dec
add
sbb
jmp
out
in
xor
dec
pop
xor
and
and
mov
fwait
mov
xor
and
les
jmp
push
add
mov
xchg
ja
dec
sbb
jo
les
mov
cld
loop
jge
(bad)
cmp
sub
popf
jo
int3
inc
test
int3
lahf
mov
into
cli
sub
inc
dec
hlt
mov
inc
xchg
nop
or
shl
pop
in
xchg
and
mov
daa
adc
push
mov
and
hlt
push
mov
add
mov
sbb
daa
or
dec
out
add
jns
out
mov
jecxz
out
loop
inc
das
and
iret
push
sub
in
or
loopne
imul
(bad)
js
imul
push
mov
inc
jmp
shl
jmp
inc
jns
adc
clc
pushf
xchg
movs
push
mov
adc
push
mov
inc
sbb
(bad)
dec
retf
test
gs
dec
xor
(bad)
enter
and
and
jmp
sbb
adc
and
sbb
pop
outs
push
call
pop
int3
clc
scas
ss
and
sbb
(bad)
repz
inc
dec
and
sbb
(bad)
jp
pop
cwde
(bad)
sbb
data16
inc
mov
popf
dec
jge
int
mov
adc
loop
mov
pop
push
sbb
arpl
adc
bound
test
gs
mov
leave
or
hlt
pop
cmps
xchg
pop
jne
dec
stos
mov
lahf
mov
sub
movs
xchg
sub
fnstsw
(bad)
cli
jb
jecxz
push
dec
cmp
sbb
ss
push
pop
lods
jmp
sar
cmp
ins
dec
or
cmp
and
sbb
mov
ror
lahf
jmp
fld
pushf
adc
jb
in
adc
mov
pop
aas
dec
mov
into
cld
sbb
shr
and
les
xchg
mov
adc
ja
cmovp
mov
clc
and
xor
dec
(bad)
adc
jl
arpl
fimul
jge
or
jo
inc
xchg
lea
lods
and
inc
mov
sbb
daa
(bad)
jp
and
cmp
cli
call
dec
xor
sbb
xor
cdq
out
int
and
sub
imul
icebp
dec
(bad)
mov
sbb
dec
dec
imul
in
xor
sbb
push
cmp
sbb
(bad)
lock
scas
sub
(bad)
fst
jmp
iret
xor
imul
add
mov
sahf
mov
data16
mov
pushf
(bad)
mov
mov
ss
xchg
test
scas
dec
das
jmp
mov
std
dec
stos
and
push
cdq
push
fist
cmps
cmp
add
(bad)
xor
add
cmp
popa
inc
cmp
mov
sub
enter
mov
shl
dec
mov
or
test
mov
loopne
mov
ds
inc
out
mov
je
das
iret
loop
sbb
jno
dec
mov
sti
push
jnp
mov
xchg
sbb
xchg
add
xor
cmps
in
loopne
mov
mov
cdq
mov
dec
sbb
call
mov
imul
clc
jmp
jle
mov
cli
sub
cmp
and
out
cmp
lods
popf
inc
pop
(bad)
fstp
xchg
inc
stos
push
sub
pop
jp
jbe
sbb
(bad)
add
inc
cmp
bound
iret
cli
xchg
les
pop
pop
xchg
mov
pop
xchg
inc
sbb
xor
fdivr
add
cli
jp
in
add
push
es
xchg
sbb
mov
and
jbe
fs
dec
aam
icebp
jge
dec
lods
int
ror
xor
fwait
call
sub
push
retf
out
push
fcom
push
js
fcmovne
in
in
dec
inc
wbinvd
stos
add
sbb
aas
mov
push
xchg
aas
jmp
mov
dec
adc
cmc
mov
sbb
fdivr
lods
mov
ds
and
mov
fs
sti
pop
cmp
das
jnp
cmp
(bad)
dec
dec
pop
pop
pushf
in
mov
and
retf
add
cmps
cmps
cwde
faddp
mov
in
(bad)
aaa
inc
ins
pop
std
xchg
sbb
cmp
jns
cmps
push
test
pop
(bad)
pop
adc
aaa
cmp
jmp
xlat
lods
sbb
mov
pop
(bad)
out
les
bound
pop
push
imul
cld
mov
or
adc
lock
scas
xchg
fild
stos
xor
int3
stos
mov
fild
test
or
sbb
xchg
in
inc
jmp
cdq
mov
jno
mov
push
sub
data16
popf
sub
xor
cmp
data16
loopne
sbb
and
dec
cmps
imul
retf
jp
mov
fsubr
mov
adc
mov
add
mov
add
mov
sbb
or
jbe
repnz
retf
mov
mov
jg
(bad)
jge
sahf
sar
mov
push
sub
leave
inc
xor
sub
cld
repnz
movs
or
xor
and
add
mov
lahf
xor
add
in
and
cld
mov
mov
loop
dec
aaa
(bad)
fcom
and
mov
ss
push
ror
inc
shr
stos
sbb
cmps
into
iret
icebp
rcr
inc
dec
in
ins
adc
sub
imul
adc
xor
dec
fstp
fisttp
lods
adc
(bad)
fldenv
pop
push
push
cmp
or
clc
and
shl
jne
dec
sar
mov
inc
xchg
push
jae
xchg
pushf
or
mov
clc
frndint
or
or
test
repnz
xlat
mov
in
xchg
outs
adc
aaa
add
popa
jns
sbb
mov
int3
sti
xor
pop
call
inc
sbb
shr
repz
shl
in
(bad)
mov
mov
in
imul
jge
adc
leave
mov
mov
out
sbb
fimul
rol
or
les
xor
or
dec
pop
aam
ret
mov
fcom
jmp
(bad)
ins
mov
stos
inc
push
adc
push
mov
mov
mov
jmp
sub
cmp
jno
add
mov
dec
ret
push
mov
test
aad
mov
and
pop
jge
and
(bad)
or
loope
mov
jg
daa
icebp
ficom
jg
mov
loope
xchg
repz
dec
cmp
xchg
out
iret
and
lea
out
xor
js
add
lods
add
jmp
inc
lock
hlt
mov
mov
jmp
dec
in
push
mov
or
mov
aaa
cmp
ins
in
retf
sbb
cdq
mov
stos
lds
or
int3
jmp
push
or
pop
inc
loope
dec
hlt
push
or
xchg
sub
xor
fst
arpl
lods
mov
mov
sbb
icebp
mov
stos
jbe
mov
sbb
mov
sbb
stos
add
and
jnp
push
cmps
sahf
push
int
sub
leave
jecxz
stos
push
(bad)
cmp
xor
mov
push
cmp
aas
mov
adc
(bad)
jbe
pop
fs
int
gs
enter
mov
mov
popa
inc
outs
jle
sti
aas
(bad)
xor
push
scas
inc
mov
and
sbb
sbb
or
fxch
inc
mov
cmp
call
fwait
loope
xor
cwde
or
cmp
add
mov
mov
mov
adc
xchg
xor
fisttp
pop
cs
shr
jl
jae
ins
mov
cmps
aad
dec
and
push
push
xchg
in
cmc
sar
jmp
(bad)
push
xor
push
movs
rol
rol
jbe
ins
jle
mov
pop
jge
push
stc
pop
(bad)
pop
pop
bound
inc
adc
ss
push
mov
out
push
(bad)
adc
sbb
nop
xor
test
mov
cld
sbb
mov
jbe
int
push
pushf
pop
(bad)
ficomp
add
leave
jmp
outs
fimul
inc
and
loope
xchg
daa
shl
ins
jnp
pushf
movs
cmp
out
sbb
ret
fs
dec
sbb
shl
repz
pop
mov
mov
mov
mov
add
in
lea
sar
or
jne
sbb
xchg
adc
mov
jno
(bad)
jo
inc
pop
shl
cmp
ds
rol
jp
sbb
arpl
or
(bad)
push
lds
mov
pop
in
loope
jge
push
je
shl
xor
adc
dec
(bad)
pusha
jno
in
mov
retf
leave
and
push
mov
movs
and
mov
lods
jo
dec
push
enter
loop
scas
sbb
adc
mov
inc
mov
fwait
(bad)
mov
mov
fimul
inc
or
(bad)
repz
(bad)
mov
cs
push
push
idiv
out
add
xchg
jnp
cmp
loopne
fsub
or
ss
jbe
aas
rcr
je
movs
ficomp
lds
inc
mov
add
or
jns
mov
push
push
inc
mov
jecxz
or
sbb
mov
mov
not
mov
mov
ins
lods
xchg
fwait
retf
ins
sub
dec
js
mov
push
test
mov
sub
movs
jl
sub
aas
ret
xlat
lldt
add
fisub
cmp
call
mov
push
mov
je
icebp
mov
rcr
xchg
sbb
dec
pop
mov
int
pop
and
mov
and
and
loopne
cs
mov
adc
addr16
push
xor
enter
mov
ficom
mov
jge
ret
fsubr
shr
hlt
lds
or
add
test
jb
mov
ja
jg
pop
mov
jg
in
into
mov
int
cwde
(bad)
add
pop
jne
test
pushf
ucomiss
cmp
push
out
(bad)
cs
mov
mov
aam
cmp
add
jp
or
mov
xor
sub
bnd
or
and
dec
push
rcr
lock
mov
adc
mov
in
pushf
jns
and
fsqrt
(bad)
jns
ret
fstp
jp
jmp
call
mov
push
pop
adc
cmps
stos
sar
aas
fbld
imul
sub
mov
push
test
data16
push
mov
and
cmp
int3
cmps
js
jge
clc
rcr
xor
test
mov
xchg
sbb
(bad)
pop
hlt
add
retf
retf
lock
mov
push
pushf
cld
retf
cmp
sti
out
inc
into
test
add
test
repnz
xor
out
adc
lds
xor
and
stos
push
js
retf
add
imul
sar
iret
cli
jmp
outs
cmp
pop
fstp
call
mov
xchg
and
out
xor
and
shl
sub
and
mov
mov
jmp
cs
sbb
mov
scas
fbld
push
repz
jecxz
hlt
or
xchg
ds
and
sub
data16
jmp
xchg
jbe
lea
sub
adc
dec
test
mov
add
ror
mov
jmp
mov
or
push
iret
(bad)
daa
dec
mov
or
in
sbb
mov
pop
xor
data16
add
sbb
fdiv
mov
dec
test
jno
sbb
hlt
jno
bound
jae
inc
shr
mov
sub
inc
adc
push
xor
icebp
and
lea
and
jecxz
xor
xchg
retf
cmp
dec
push
arpl
dec
or
mov
in
(bad)
shr
mov
xchg
fsub
jbe
in
in
(bad)
outs
rcl
sbb
mov
push
scas
scas
sbb
out
scas
xchg
mov
lods
push
mov
add
sti
in
jmp
pop
not
adc
mov
cmc
mov
movs
jns
call
movs
jae
fisttp
ds
jp
je
cmp
mov
pop
(bad)
xor
jle
scas
aam
or
(bad)
sahf
mov
ret
push
jae
loope
cld
sti
or
aaa
inc
daa
xchg
cld
jp
out
mov
xchg
gs
call
pop
xchg
arpl
popf
rcl
test
fisttp
pop
and
and
cmp
mov
inc
and
sub
ret
xchg
dec
and
out
cmp
aam
cmp
ins
les
mov
sub
sbb
pop
enter
dec
inc
xchg
test
dec
mov
inc
ret
ret
(bad)
fsubr
ja
add
(bad)
ficomp
or
loope
sub
pop
jb
sbb
lahf
ret
ret
fisub
sub
(bad)
cmp
and
dec
pop
ins
xchg
les
mov
mov
mov
loope
pop
push
jecxz
repnz
push
jae
push
pusha
xchg
xchg
rol
jnp
push
stc
inc
ret
mov
into
jae
neg
jmp
add
scas
cmp
inc
fcomp
sub
das
scas
pushf
inc
push
mov
and
or
jns
xchg
or
xlat
dec
adc
xchg
iret
adc
or
push
into
retf
pcmpeqw
outs
into
aas
pop
mov
add
jg
mov
mov
clc
std
in
fidivr
lods
and
mov
stos
cmc
dec
mov
sub
cmps
pusha
xchg
cld
sahf
nop
sub
push
push
mov
jb
and
std
(bad)
push
cli
iret
mov
jecxz
mov
movs
push
lock
cmp
dec
mov
cdq
(bad)
in
and
cmps
cmps
or
sar
add
imul
cli
ds
fst
add
ins
add
jo
jbe
pop
movs
push
ja
out
add
cmps
xor
fdivr
xchg
jae
mov
jl
jnp
mov
int3
jb
rol
cmc
hlt
pop
cwde
mov
adc
and
lods
xchg
push
pop
add
xchg
stc
repnz
and
jp
popa
xor
(bad)
in
adc
out
xchg
mov
xchg
daa
test
or
pop
test
or
cmp
or
mov
enter
sub
cmc
or
bswap
sub
stc
pop
push
cmp
lods
movs
lds
jp
cs
add
js
cmp
mov
fstp
xchg
imul
popa
dec
pop
(bad)
iret
or
or
fisttp
retf
xchg
idiv
or
jmp
sub
add
mov
pop
xchg
mov
pop
fwait
pop
push
addr16
out
aaa
mov
jg
pop
adc
sub
test
stos
xchg
inc
daa
inc
inc
add
or
jle
adc
(bad)
(bad)
aam
movs
jae
cmp
neg
sub
xor
mov
or
jecxz
add
jo
sbb
cli
jmp
hlt
pop
cmp
xor
mov
jmp
cmpxchg
in
and
push
cmp
es
scas
leave
sub
mov
daa
arpl
fadd
dec
std
pop
cs
rol
add
or
icebp
jnp
fidivr
xchg
addr16
cmp
adc
mov
pop
adc
ud0
adc
jne
in
or
mov
mov
sti
retf
cmp
repz
jae
mov
stos
sub
ss
push
mov
jno
dec
arpl
mov
mov
sub
cdq
pop
jmp
push
int
inc
pop
mov
sub
push
pop
inc
sar
xor
test
mov
xchg
jge
dec
and
xchg
mov
jno
sbb
ds
cmc
mov
and
mov
push
aam
add
jmp
aaa
adc
push
lods
or
push
dec
pop
dec
les
(bad)
jge
lods
in
dec
pop
xor
mov
pusha
ss
inc
or
test
cmp
mov
mov
jmp
mov
sahf
in
sub
adc
mov
outs
addr16
test
mov
push
add
enter
outs
arpl
xor
push
mov
(bad)
call
ds
jmp
adc
out
sub
inc
sbb
scas
sub
stos
cmp
push
sti
out
retf
inc
sub
push
add
push
pop
push
xchg
mov
bound
dec
jl
jo
mov
jb
or
or
xor
fsub
mov
pop
pop
xchg
fucom
mov
test
cmp
sbb
or
cmp
inc
sbb
out
sub
add
adc
call
(bad)
(bad)
adc
cli
cwde
stc
xchg
pop
cmp
dec
scas
mov
sub
sbb
sub
aad
dec
call
dec
fld
or
xchg
jg
xlat
(bad)
(bad)
stos
scas
fsub
adc
jl
das
loope
sub
jae
push
jmp
arpl
loope
retf
xchg
adc
cdq
xor
mov
enter
inc
cmp
add
cmp
mov
lock
pop
call
or
ficomp
dec
les
mov
xor
jmp
scas
jae
mov
mov
jmp
add
sub
stos
mov
ds
cmp
stos
out
push
cmc
fild
mov
mov
jle
jb
orps
jbe
sbb
sub
shl
jmp
mov
(bad)
aas
cdq
pop
sahf
pop
xchg
mov
scas
popf
pop
dec
mov
jne
out
iret
out
sub
fwait
sti
ret
push
sub
push
mov
dec
mov
out
adc
jbe
and
push
adc
jae
pop
pop
dec
sbb
cmc
dec
in
stc
sbb
pmulhw
out
mov
data16
push
ret
mov
loop
push
sbb
pop
in
push
cmp
or
jle
stc
retf
xchg
add
inc
cmp
or
sbb
test
pop
mov
mov
push
ffreep
lock
adc
pop
test
(bad)
jmp
and
xor
pop
iret
repz
add
mov
sbb
cld
cwde
lods
xchg
out
dec
movs
fstp
jb
sbb
clc
sbb
test
aam
cmp
mov
repz
pop
fsubr
(bad)
push
sub
das
mov
xor
retf
jp
add
ja
pop
push
fwait
push
push
daa
jb
mov
dec
jns
enter
mov
mov
aaa
ins
icebp
dec
or
dec
xor
pusha
pop
aas
clc
pop
clc
dec
xchg
dec
adc
pop
push
retf
mov
jns
bound
sub
nop
ret
mov
sbb
xor
or
(bad)
jmp
pop
arpl
mov
push
es
(bad)
xor
(bad)
adc
mov
cwde
imul
daa
jns
(bad)
dec
popf
shl
cmp
sbb
lea
fwait
out
pop
test
inc
outs
dec
or
imul
mov
arpl
outs
push
cmp
push
adc
rcl
sub
scas
dec
into
jmp
imul
mov
cmps
(bad)
xchg
or
push
cmp
stos
arpl
scas
neg
ins
add
cli
jbe
sub
repnz
cmovb
dec
(bad)
in
and
sbb
scas
xchg
sub
das
dec
repz
jle
sub
push
lds
push
daa
sub
das
mov
xor
pop
mov
stos
mov
sbb
shl
jmp
mov
mov
test
fcom
popa
jl
push
pop
push
leave
add
inc
call
stc
xor
or
loope
sbb
mov
xchg
sub
imul
ret
ja
xlat
add
sar
daa
xlat
stos
mov
retf
stos
xor
clc
enter
xor
cmc
fisub
jmp
jp
xor
and
xor
fmul
and
fwait
jbe
mov
pop
cli
adc
test
mov
lods
or
push
daa
mov
lea
dec
clc
dec
repnz
mov
xchg
popa
aaa
ins
mov
ins
daa
push
sub
jae
jns
shl
jp
mov
add
jns
(bad)
icebp
call
push
fwait
dec
enter
mov
mov
dec
lods
test
stc
xchg
adc
mov
mov
pop
std
cmps
or
push
movs
gs
shl
jne
xor
icebp
int3
dec
adc
sti
lds
adc
movs
mov
in
adc
cmp
add
cld
rol
fadd
movs
xchg
add
pop
inc
pop
sub
sub
and
push
fisubr
ret
adc
push
pop
cmp
not
mov
dec
mov
out
not
call
mov
cmp
int3
lock
jns
daa
retf
push
mov
adc
lea
push
pop
(bad)
inc
mov
and
dec
lods
std
pop
cmp
jl
in
cwde
pushf
daa
rcr
je
scas
inc
xor
push
(bad)
scas
mov
js
mov
mov
jnp
adc
mov
test
les
test
mov
add
test
lods
ror
xchg
call
xor
call
repnz
retf
mov
fsub
inc
cmp
je
pushf
(bad)
sub
fstp
dec
out
jmp
jne
test
mov
inc
fwait
mov
loope
retf
sahf
cdq
add
(bad)
pop
adc
cmp
fwait
jmp
inc
lods
(bad)
lea
dec
jmp
sbb
or
mov
pop
add
cld
add
xor
xor
outs
pavgb
sub
test
out
mov
pop
inc
hlt
nop
repnz
psubb
xchg
imul
ror
mov
sbb
xchg
popa
sbb
neg
aam
or
std
push
mov
loop
push
xchg
hlt
adc
jmp
outs
std
ficom
das
cmc
enter
aaa
gs
mov
movs
popa
movs
sub
cmp
dec
dec
hlt
in
and
xor
mov
mov
popf
cmp
test
adc
or
sub
bound
pop
ficomp
fld
aam
mov
mov
stc
ret
pop
push
sbb
jmp
das
mov
nop
repz
(bad)
div
push
jl
adc
xlat
dec
mov
and
dec
or
std
xor
sub
jns
cld
cmp
mov
nop
call
jmp
jns
fist
loope
shl
or
inc
adc
inc
mov
add
xor
imul
ror
cmps
dec
and
xor
daa
sbb
movs
push
sub
jl
(bad)
icebp
jns
jbe
lea
popa
outs
mov
mov
les
xchg
or
cmps
add
int
movs
inc
imul
ds
in
les
mov
aad
in
imul
sub
call
push
je
stc
jg
pop
xchg
cmp
out
add
add
out
cdq
and
xor
inc
int
loope
movs
into
cmps
jge
and
fwait
fwait
add
or
arpl
xchg
push
ja
std
sub
out
cmc
jns
xor
push
or
cli
mov
daa
xchg
gs
add
sbb
sbb
mov
(bad)
dec
js
ficom
movs
out
mov
adc
xchg
or
push
nop
pop
iret
mov
dec
jbe
aas
sbb
mov
(bad)
sbb
adc
in
shr
xchg
test
push
(bad)
loope
mov
test
test
movs
inc
push
lods
icebp
mov
and
rcl
cmp
jp
cmp
mov
mov
mov
pop
cmp
movs
add
mov
popa
add
hlt
xchg
mov
push
scas
ret
movs
int
cli
pop
mov
cld
into
test
mov
mov
xchg
cmps
dec
lds
out
push
out
adc
push
pop
xor
jmp
lods
dec
mov
imul
xor
imul
and
mov
in
or
lea
popa
mov
int3
mov
add
jne
jne
push
sbb
jecxz
dec
xor
sbb
pop
int3
(bad)
not
int3
jns
jp
jge
ret
xchg
or
cmps
xchg
sub
scas
fistp
cmps
sahf
aad
in
aad
mov
mov
popa
cdq
mov
nop
ins
xchg
push
cld
ret
and
int3
cmp
outs
leave
rol
mov
dec
lea
sub
ss
lods
fcomp
loop
icebp
xlat
pop
stos
inc
mov
lods
pop
popf
jl
mov
cmp
lods
dec
pop
int
pop
shl
adc
mov
or
jle
(bad)
jl
es
jmp
and
jge
and
fist
scas
push
int3
push
lahf
jb
in
mov
or
sahf
iret
retf
out
es
jns
aam
std
or
loopne
outs
jno
push
sub
mov
fcom
stos
xchg
jo
sbb
sub
mov
ja
cld
hlt
xlat
test
loopne
sub
scas
jnp
and
mov
or
ret
(bad)
xor
adc
mov
pop
jns
dec
ins
nop
jbe
or
xor
jne
in
add
push
xor
pop
xchg
mov
sub
mov
jmp
sub
mov
jmp
and
xor
arpl
lods
pop
jge
rcr
pop
out
sbb
stc
jae
out
adc
rcr
mov
mov
ss
xchg
pop
sub
xchg
popaw
add
les
mov
xchg
ror
jbe
and
mov
(bad)
mov
add
mov
xor
xchg
imul
adc
cwde
outs
mov
repnz
xsavec
and
sbb
pop
cwde
sub
jmp
cwde
jmp
mov
lock
adc
pop
mov
push
jno
lock
pop
xchg
data16
push
mov
cmp
lods
scas
(bad)
cld
xchg
in
jmp
add
xor
shl
in
mov
cmp
leave
push
les
leave
xor
aas
mov
cmp
mov
jecxz
sbb
add
push
xchg
xchg
xchg
imul
xor
icebp
mov
repz
mov
inc
in
(bad)
and
aas
imul
sbb
mov
xchg
ins
test
(bad)
push
jno
scas
xor
mov
aam
adc
sbb
sub
mov
aaa
push
ficom
cmc
inc
jle
xor
push
push
fst
jl
cmp
push
mov
pop
std
mov
out
or
ja
jno
mov
push
xlat
out
xor
call
xor
mov
xor
lahf
xchg
sti
mov
push
push
push
mov
pop
out
jno
push
in
shr
mov
pusha
mov
dec
stc
outs
inc
push
sbb
scas
mov
add
jo
inc
add
dec
add
fistp
dec
xor
or
mov
pop
leave
test
mov
jmp
pushf
mov
inc
jle
jle
jmp
push
(bad)
pop
loope
lahf
retf
cmps
sub
cmp
loope
(bad)
(bad)
dec
mov
out
fcomp
dec
and
dec
stos
cmp
push
xor
mov
xor
dec
int3
into
inc
in
sub
retf
arpl
lods
jne
arpl
or
pusha
cld
mov
fs
push
fs
in
js
jns
pushf
fild
push
mov
push
mov
ds
stos
or
pop
inc
xor
jns
ret
pusha
fst
push
sub
movs
xlat
mov
sub
call
pushf
sub
pusha
mov
dec
dec
or
popf
(bad)
cdq
(bad)
jmp
xchg
int
call
or
and
pop
repz
sbb
lahf
xchg
cld
ja
xor
pop
cmps
and
or
cmps
xor
push
pop
sti
push
scas
xchg
imul
fistp
mov
jne
shr
pop
ret
and
inc
fldenv
movs
pusha
pop
jecxz
push
loop
(bad)
jns
imul
es
adc
push
pop
jmp
addr16
push
pop
add
cmp
pop
or
xor
fwait
sbb
dec
es
lds
dec
ret
pop
fwait
stc
iret
test
inc
fiadd
push
cmp
push
xor
inc
aaa
and
clc
xor
out
sbb
cwde
cmp
mov
xor
hlt
scas
push
or
jmp
cmp
cli
cld
movs
dec
mov
fisub
mov
jb
aad
xchg
mov
leave
sbb
push
sbb
out
outs
mov
jge
sbb
ins
ins
aam
xor
ja
fnstsw
loop
or
call
push
inc
dec
adc
mov
cdq
jecxz
or
jl
push
out
or
mov
mov
add
sti
shl
push
jp
xor
ret
out
pop
add
lds
retf
add
mov
js
pop
push
out
loop
cmp
bound
cmp
sbb
xor
pop
in
mov
repnz
inc
ds
cmp
jne
test
mov
jge
mov
movs
mov
sbb
inc
data16
int3
xor
jecxz
enter
pop
(bad)
mov
and
pop
cld
dec
dec
in
xchg
(bad)
xor
push
retf
sbb
xlat
iret
cli
or
iret
pop
out
xchg
push
(bad)
cld
ret
iret
pop
mov
retf
push
daa
(bad)
push
addr16
lods
and
sbb
or
rol
dec
dec
jb
push
add
ss
inc
fbstp
pop
in
jnp
jb
shl
dec
pop
mov
aas
cs
jecxz
call
in
mov
sbb
lahf
or
ss
shl
jb
cmp
pop
stc
inc
aam
(bad)
xchg
pop
mov
adc
jbe
jge
cmp
pop
jl
fs
movs
cmp
in
test
and
neg
cld
cmps
arpl
(bad)
or
cmp
inc
test
sub
mov
fidivr
or
push
jecxz
movs
jmp
and
test
rcr
cmc
sbb
dec
mov
add
enter
dec
xlat
ret
imul
arpl
addr16
xchg
mov
push
push
(bad)
(bad)
inc
jle
into
in
mov
outs
pushf
push
ret
push
push
cdq
push
stos
ret
(bad)
in
pop
mov
push
lds
xchg
sbb
sbb
rol
mov
xchg
xchg
sahf
pop
pop
add
mov
adc
push
scas
sbb
xlat
repz
add
mov
sbb
das
jg
enter
bound
mov
jg
cmps
ror
call
cmp
jge
pop
stc
xchg
aad
arpl
hlt
jnp
addr16
push
out
ins
shl
pusha
and
daa
call
imul
mov
lahf
add
fisubr
add
cmp
outs
adc
inc
pop
push
imul
(bad)
in
popf
lahf
imul
shl
pop
jo
and
push
sub
fadd
dec
push
imul
movs
sub
push
jbe
jecxz
je
xor
push
inc
fisttp
pop
pop
mov
push
push
xchg
xchg
sbb
adc
sti
mov
cmps
jmp
imul
sbb
adc
mov
bound
add
popa
or
cmps
or
rcl
xchg
adc
xchg
lahf
pusha
inc
outs
add
sub
and
inc
mov
add
pop
stos
les
jbe
lods
xor
adc
leave
in
data16
push
pop
test
pop
or
mov
push
mov
outs
lahf
shl
out
inc
out
jnp
xchg
test
pusha
in
add
inc
ds
mov
add
push
rol
in
ja
shl
stos
xor
sub
fisub
dec
popa
in
mov
test
xlat
push
push
mov
stc
(bad)
scas
lds
cli
or
in
and
dec
pop
push
jns
fisttp
push
dec
lds
ret
dec
pop
mov
pop
test
leave
cmp
out
mov
inc
inc
mov
dec
add
mov
cli
xor
fimul
repnz
outs
fs
gs
cmp
imul
jmp
stos
cmp
cmp
adc
enter
adc
rcr
cmps
pop
fsubr
add
repz
xchg
push
or
cmp
push
add
add
inc
ins
fsubr
test
mov
inc
add
cdq
xchg
cwde
sbb
jle
aaa
jg
xchg
mov
fwait
and
and
dec
add
shl
xchg
xor
iret
push
push
inc
push
aad
adc
aad
stos
xchg
jecxz
pop
js
cmp
lahf
retf
dec
xor
sbb
or
mov
nop
lock
lods
inc
mov
mov
sbb
das
and
add
retf
mov
dec
jnp
outs
aad
test
fst
xchg
xor
mov
jge
jecxz
popa
jo
dec
xchg
test
(bad)
dec
xor
sbb
inc
mov
sahf
fld
cmps
and
inc
fdivr
xchg
retf
imul
mov
shl
stc
addr16
test
call
or
out
inc
ds
mov
cmc
ja
pop
test
inc
int3
lahf
xchg
push
retf
mov
or
mov
in
leave
cmp
jp
fisttp
xor
add
mov
imul
cmp
ret
jb
sbb
ror
xchg
inc
push
stc
mov
aaa
dec
icebp
sub
lea
and
lahf
cmp
mov
dec
push
scas
mov
and
mov
mov
loope
test
mov
cmp
iret
push
(bad)
loop
movs
push
fiadd
in
out
mov
inc
call
push
cwde
cmps
or
and
in
clc
test
inc
jnp
mov
dec
inc
xlat
mov
test
mov
imul
pop
cdq
out
pop
call
jge
cmp
std
pop
std
mov
icebp
push
stc
jecxz
ret
mov
lods
js
test
inc
ror
gs
pusha
pop
jne
mov
ss
cmp
lods
iret
xchg
or
xlat
in
pop
out
mov
shl
fs
call
cs
fnstcw
push
retf
add
pop
inc
mov
imul
nop
ret
retf
(bad)
mov
fstp
xchg
stos
scas
xor
inc
ret
cmp
fmul
addr16
popa
dec
xor
xor
fisttp
call
call
rol
sub
icebp
sub
inc
stos
movs
(bad)
in
and
jb
push
into
jbe
cmp
pop
push
sub
inc
jg
push
mov
cmps
add
mov
inc
out
ret
sub
xchg
sahf
adc
dec
stos
ins
loopne
test
jl
xor
cmp
ins
fs
dec
in
mov
mov
cmp
push
scas
sahf
mov
int3
fwait
adc
call
add
es
mov
mov
cmp
xchg
sahf
jl
jnp
pop
jl
das
jb
movs
jae
mov
lock
sbb
mov
fild
pop
loopne
repnz
dec
mov
cwde
sub
sbb
mov
push
xchg
sub
adc
cmp
cld
cwde
or
aas
scas
mov
adc
mov
mov
mov
pushf
mov
loop
pop
enter
bound
popa
xor
add
call
jo
mov
mov
mov
mov
push
gs
mov
retf
jmp
mov
fucomi
ret
xchg
add
add
jne
sub
push
jle
enter
push
(bad)
aas
fcmovb
jmp
lahf
fcmovu
scas
add
(bad)
push
xchg
adc
or
je
mov
stos
leave
xor
les
jnp
inc
aad
add
dec
adc
lea
mov
xlat
scas
xchg
jecxz
push
jmp
lods
sub
daa
or
adc
cdq
dec
fstp
lock
xchg
inc
add
(bad)
aam
int3
xor
xor
pushf
fstp
or
push
adc
jmp
add
cwde
push
lds
in
dec
mov
sahf
mov
scas
pop
cld
xchg
jle
arpl
jns
xchg
cmp
xchg
push
xlat
jbe
dec
mov
gs
mov
dec
lock
push
call
cmc
pusha
je
inc
or
mov
popa
std
mov
shl
dec
mov
jle
jecxz
push
jl
add
outs
stos
inc
aad
test
pushf
jle
jg
jl
fld
dec
mov
adc
fadd
add
js
xchg
les
ss
mov
sub
repnz
adc
push
fdecstp
cmps
mov
in
adc
xor
and
adc
xlat
pop
sbb
addr16
xchg
stc
jp
dec
inc
gs
sub
imul
push
push
ins
clc
les
mov
xchg
cs
js
cmp
mov
sbb
or
dec
lahf
in
push
imul
xchg
push
xlat
xchg
push
jg
iret
mov
lahf
push
pop
ret
inc
or
arpl
dec
sbb
(bad)
push
mov
ror
dec
cmp
mov
int
mov
mov
pushf
mov
dec
movs
sbb
int
mov
mov
dec
jg
ficom
scas
mov
cwde
xor
pop
in
mov
retf
loopne
int3
jae
dec
mov
addr16
ja
pushf
sbb
sbb
movs
rcl
cwde
jmp
jp
adc
dec
neg
lds
sbb
loope
lds
(bad)
adc
lock
mov
add
mov
cmp
cmc
pop
adc
mov
lods
dec
ins
popa
icebp
push
xchg
sahf
dec
jmp
inc
popa
in
cmp
cwde
or
jmp
in
mov
rol
ss
adc
and
jmp
adc
pop
dec
xlat
jns
scas
mov
jae
bound
or
jo
jecxz
(bad)
xchg
retf
mov
mov
add
cmp
dec
xchg
push
xchg
in
enter
and
sbb
out
mov
cmp
(bad)
in
push
movs
leave
push
push
lods
xchg
sub
inc
dec
(bad)
mov
lahf
xor
inc
pop
fdiv
fadd
adc
mov
test
loope
rep
cmp
in
cwde
(bad)
sti
sbb
test
xchg
in
out
pop
sti
test
pusha
jg
xlat
mov
mov
pop
xor
jecxz
jmp
xor
cmp
jmp
or
mov
aas
mov
ins
in
mov
xor
xor
push
sbb
add
dec
mov
ficom
test
xchg
xor
sbb
jmp
cmc
sub
cld
lods
push
mov
icebp
mov
popa
bound
je
xor
(bad)
fdivr
jne
stos
lock
ror
xchg
js
and
pop
push
and
sub
adc
cmp
mov
sbb
adc
scas
lock
shl
jno
and
shl
or
call
push
inc
push
das
and
inc
xchg
mov
pop
fbld
adc
mov
icebp
xor
xor
jle
inc
int
add
jle
inc
rol
daa
jbe
xor
dec
lea
js
fcomp
andps
push
jmp
add
mov
retf
imul
fbstp
xor
adc
xchg
sub
ror
in
sti
in
pop
and
mov
pusha
jl
add
ret
out
(bad)
les
pop
cli
jp
je
shr
push
test
mov
jbe
push
inc
btr
sbb
stc
stos
movs
xor
sbb
mov
jmp
test
ret
push
pop
jl
and
sahf
mov
jbe
lods
xor
jne
iret
jl
add
loopne
mov
and
xchg
and
cs
retf
xor
shl
aam
out
movs
push
and
ficom
lods
and
int
aaa
sub
cmps
xor
jno
stos
adc
rol
pop
pusha
cmp
add
and
fcom
and
jge
lods
dec
push
pop
lock
or
push
test
adc
xchg
call
shr
or
dec
cli
xchg
xchg
inc
mov
dec
sub
push
ins
and
fsubr
pop
(bad)
cmps
lock
mov
je
cmc
ret
push
test
pop
cmp
xor
cdq
pop
add
(bad)
adc
fs
loope
jmp
and
imul
out
aam
fsub
push
mov
adc
jmp
fisubr
adc
jl
retf
push
push
pop
in
movs
inc
cmp
sbb
push
dec
rcl
cmps
(bad)
ds
adc
(bad)
xor
ins
shl
add
popf
neg
adc
push
inc
jmp
into
(bad)
out
jmp
dec
push
adc
outs
mov
sahf
mov
mov
int
ds
in
ja
and
jno
inc
or
fadd
inc
mov
rcl
imul
pushf
push
lods
mov
not
shr
sahf
popf
mov
adc
cmp
in
sahf
push
mov
(bad)
in
jecxz
mov
repz
mov
(bad)
rcl
mov
jo
fs
jnp
dec
pop
out
scas
imul
xor
test
(bad)
pop
arpl
out
outs
mov
cmp
in
scas
mov
xchg
std
adc
jne
mov
and
inc
outs
mov
mov
mov
fistp
inc
xor
fwait
fwait
mov
dec
in
jp
cli
fwait
jno
mov
pop
mov
or
das
cmp
push
push
push
repz
sbb
jns
xchg
jbe
repz
sbb
dec
dec
inc
sbb
popf
lods
dec
adc
xchg
pop
inc
jae
(bad)
(bad)
push
dec
lds
stos
inc
mov
mov
jmp
mov
xor
and
ret
ins
lods
repz
in
cmp
mov
jne
dec
mov
mov
iret
test
jb
(bad)
clc
pop
jle
and
fwait
movs
pop
aam
xchg
mov
fmul
mov
push
mov
xlat
xchg
mov
jg
jg
mov
repnz
mov
jae
push
es
jnp
mov
(bad)
(bad)
cmc
or
cmp
retf
jb
leave
xor
sbb
repnz
xchg
in
add
xor
adc
(bad)
mov
xchg
retf
(bad)
lahf
ds
xor
clc
add
arpl
call
repz
push
ss
jbe
mov
mov
out
xor
daa
daa
out
ret
jbe
cwde
and
xcrypt-cfb
cmps
out
hlt
mov
push
vphaddubq
ror
add
ss
nop
push
cmp
adc
mov
mov
into
aad
jb
dec
mov
push
pop
xor
nop
(bad)
mov
add
add
xchg
sbb
pop
push
setb
jg
aad
in
push
mov
popf
add
push
std
cs
push
fdiv
aaa
or
out
stos
and
inc
jmp
ror
ss
mov
jo
scas
pushf
lahf
or
inc
push
jns
pop
bound
mov
je
setae
aaa
mov
pop
push
mov
xchg
repz
repz
fistp
call
aas
sahf
sti
(bad)
in
mov
mov
pop
xor
in
add
xor
and
sub
iret
fdiv
je
or
sbb
pop
fs
repz
jbe
or
in
test
mov
lahf
out
cmp
jmp
aam
addr16
or
add
xchg
mov
sbb
cdq
cwde
loopne
pop
sbb
sbb
sti
ret
rcr
gs
out
enter
je
mov
aam
idiv
xor
add
leave
cdq
push
in
jge
xchg
jns
push
push
ss
mov
and
and
mov
or
xlat
leave
sbb
jnp
adc
je
shl
adc
sbb
arpl
sbb
das
mov
inc
jle
push
xchg
js
sbb
dec
aas
sub
jnp
stos
aaa
push
ds
in
mov
popf
nop
cmp
fadd
fs
cmp
jge
mov
fldcw
sub
mov
xor
and
push
jo
aas
(bad)
jmp
rol
mov
sbb
daa
ins
inc
mul
jnp
lock
jecxz
outs
in
movs
shl
mov
dec
lahf
mov
push
xchg
test
dec
es
dec
mov
cwde
xchg
cmc
dec
jns
es
retf
addr16
mov
jnp
cld
shl
(bad)
inc
mov
ins
je
cld
arpl
cdq
sar
mov
mov
scas
retf
xchg
clc
shl
sar
cmp
pop
cmc
and
xor
test
(bad)
cmp
ins
into
out
in
xchg
jo
mov
jo
xchg
mov
pop
lods
xor
adc
pop
pop
and
cmp
sbb
int3
jns
jmp
fcomip
repz
nop
mov
xchg
mov
sub
jl
aaa
mov
and
mov
inc
aas
or
mov
mov
scas
sub
and
sub
push
sti
int3
xchg
and
pushf
adc
aaa
mov
aad
out
cmp
jae
adc
cdq
inc
lea
and
fnstsw
add
scas
sbb
dec
fmul
nop
fs
xchg
add
out
mov
pop
test
ret
aaa
ret
jnp
int3
cdq
jecxz
push
rcl
sub
add
cdq
pop
sub
sub
sahf
(bad)
pop
and
ins
fnstcw
arpl
mov
fisttp
adc
sub
fdiv
xchg
add
push
retf
xor
xchg
(bad)
push
adc
push
or
bswap
inc
movs
mov
push
xchg
mov
ja
in
fwait
push
(bad)
neg
icebp
movs
icebp
je
jne
pop
dec
mov
clc
inc
mov
mov
mov
ret
div
or
xlat
es
ret
cdq
pop
mov
stc
push
test
jo
sub
dec
out
ds
jecxz
call
aam
test
ret
cmp
leave
and
lods
dec
cli
out
mov
jne
inc
(bad)
jmp
jae
jne
xchg
pop
jne
pop
fisttp
gs
fnstsw
jnp
cmp
inc
inc
(bad)
imul
mov
test
loope
push
into
in
repnz
es
inc
arpl
add
and
loopne
cmps
pop
stos
and
mov
cwde
cmp
dec
fptan
cmp
fadd
jnp
jnp
cli
push
das
dec
or
adc
inc
lahf
icebp
pop
fs
jnp
jg
jmp
jnp
sar
loop
sub
xor
(bad)
cwde
mov
imul
not
pop
std
dec
fimul
imul
call
xor
sub
aad
add
outs
pop
sbb
mul
sub
inc
jmp
xor
call
dec
inc
sbb
outs
sahf
sbb
inc
je
je
jge
repnz
pusha
jns
or
pop
test
cmp
xor
addr16
or
call
push
fwait
and
je
shl
cli
std
push
cmps
mov
cmp
sbb
out
(bad)
or
sub
ins
movs
inc
cmps
sbb
mov
mov
je
sbb
imul
sub
(bad)
xlat
outs
mov
repz
stos
pop
pop
arpl
xchg
mov
mov
mov
hlt
enter
arpl
jmp
jmp
jmp
mov
mov
and
add
in
fnstsw
mov
jl
imul
mov
sahf
adc
pop
pop
push
xor
popa
cs
lea
call
mov
sbb
jb
(bad)
mov
(bad)
shl
ins
push
stos
pop
lods
sub
cmps
sahf
fmul
sub
pop
fcom
ror
shl
mov
fadd
adc
mov
clc
les
mov
imul
dec
adc
retf
xchg
mov
sub
xor
xor
jp
xchg
add
push
loopne
jmp
sbb
les
inc
ret
lods
mov
movs
push
add
dec
or
cmp
aad
out
xor
and
mov
inc
push
xor
mov
add
push
fsubrp
lock
fstp
push
pop
jl
and
aam
mov
add
les
in
jae
pop
inc
ficomp
jmp
mov
icebp
xor
jmp
mov
adc
push
stos
adc
out
jle
fadd
or
sbb
inc
sbb
outs
dec
and
mov
cdq
int3
movs
aam
mov
add
repnz
and
cmp
cmps
cmp
jecxz
in
cs
xor
xor
call
pop
or
jg
fst
das
sahf
addr16
clc
adc
rol
call
loop
out
jl
inc
add
cmp
es
js
retf
fcom
xor
sub
loope
daa
xchg
mov
jl
inc
mul
jnp
sbb
loope
jnp
sbb
adc
call
xlat
rol
test
mov
jl
(bad)
cmp
and
inc
mov
pushf
pop
xchg
sbb
dec
jno
cld
xor
fcomp
adc
jae
stos
enter
sbb
inc
ret
(bad)
jecxz
mov
popa
and
and
imul
ja
push
fild
or
iret
in
inc
dec
aas
inc
jae
cmp
js
call
ret
mov
push
push
mov
xor
xor
movs
fldln2
and
sbb
out
pop
or
xchg
mov
cmp
cmp
inc
repnz
std
(bad)
outs
retf
sbb
and
sbb
inc
cs
inc
or
ret
mov
sbb
aad
in
dec
push
mov
aas
cmc
cdq
je
arpl
pop
or
hlt
xor
sbb
fldenv
fs
jp
movs
aad
cmps
jle
cmp
sbb
les
or
popa
mov
fwait
inc
sub
out
addr16
mov
popf
movs
aas
fsubr
mov
lods
fsubr
rcl
inc
popf
cmc
sti
xor
pop
inc
out
adc
aam
stos
mov
dec
push
push
lods
mov
mov
cld
out
aaa
xlat
rol
mov
arpl
clc
adc
and
fsubr
adc
add
push
ins
aaa
mov
pushf
not
push
in
hlt
adc
(bad)
mul
out
and
push
xchg
cmp
sbb
leave
pushf
mov
xchg
daa
pop
push
(bad)
jns
push
sahf
dec
arpl
add
dec
data16
xor
sub
cmps
and
or
jo
push
aad
mov
mov
pop
cmps
call
dec
loopne
pop
inc
ja
(bad)
or
popa
cmp
adc
pop
push
adc
push
(bad)
jmp
(bad)
jmp
jb
sbb
xor
mov
cs
mov
xchg
dec
fdiv
hlt
mov
push
jnp
mov
pop
jo
mov
cld
inc
shr
jno
mov
dec
dec
stos
movs
and
sbb
add
adc
inc
outs
mov
fwait
test
ds
sar
nop
gs
mov
test
sbb
sbb
imul
loope
in
pop
fisttp
jmp
iret
fistp
mov
jp
jae
pop
add
xor
loopne
shr
nop
push
adc
call
push
mov
out
ror
jmp
lds
stos
cmp
cmc
inc
into
aad
loope
gs
dec
rol
add
jl
fcmovb
push
push
xchg
fist
mov
cli
pop
(bad)
cwde
cmp
cmp
sub
gs
test
dec
add
inc
jle
clc
in
or
sub
je
mov
fadd
ficomp
or
stc
outs
call
das
imul
sbb
push
sub
lahf
and
daa
(bad)
jno
adc
data16
cmp
into
jg
inc
xchg
xchg
ss
lods
sbb
mov
cwde
cs
mov
sub
jle
adc
push
xchg
retf
add
xor
in
add
sbb
scas
in
iret
push
inc
push
sub
dec
scas
sub
pop
fadd
inc
lahf
enter
js
(bad)
lds
cmps
btc
push
fsub
sub
aam
cwde
movs
mov
mov
stos
xchg
xor
jne
popa
mov
push
cli
pop
push
jge
fwait
dec
(bad)
xor
inc
scas
xor
sbb
das
or
adc
fimul
mov
dec
shl
push
js
mov
cli
sbb
push
and
call
sub
xchg
push
mov
aas
shl
dec
icebp
int
out
xchg
or
fsub
fdivr
into
mov
push
mov
lods
sar
outs
in
cli
adc
loope
xchg
add
iret
xchg
jg
stos
sub
jno
fidiv
and
mov
mov
sub
pop
push
jb
mov
push
movs
sahf
and
mov
addr16
jnp
inc
retf
test
int3
out
pushf
ret
sub
sub
call
pop
(bad)
jmp
mov
int3
stc
aaa
add
in
sub
sbb
lock
inc
add
or
pop
cs
xor
mov
jle
mov
mov
dec
nop
es
faddp
add
sbb
addr16
mov
pop
icebp
arpl
pop
fwait
jl
fs
mov
mov
and
lods
cmps
and
and
out
mov
js
mov
mov
pop
push
movs
test
mov
jge
call
shr
xor
js
xor
mov
lock
xchg
pop
pop
rol
std
sub
push
inc
dec
iret
add
out
pop
xor
mul
dec
and
stos
xor
lods
xchg
rol
mov
sub
sbb
in
into
sbb
stos
sub
mov
sar
and
shl
jae
je
movs
fwait
dec
or
push
sub
and
outs
les
fnsave
es
mov
mov
xchg
lods
or
mov
dec
(bad)
je
push
jns
add
enter
add
cld
xchg
sbb
push
sbb
xor
das
lods
ss
jne
push
jle
(bad)
stc
sbb
and
cmp
into
dec
and
pushf
sbb
aad
jecxz
adc
mov
in
pop
int
imul
sub
es
call
popa
sub
out
int3
mov
mov
imul
pop
add
das
xor
stos
inc
mov
jecxz
or
data16
xor
mov
mov
movs
pop
into
cld
xlat
xchg
and
pushf
mov
mov
ficom
in
retf
mul
fdivr
push
jmp
or
movs
xor
mov
jns
mov
fs
aas
jnp
jmp
and
pop
xor
out
xchg
mov
les
ror
call
inc
ss
inc
movs
ja
xchg
sbb
leave
jl
jnp
dec
scas
std
push
stos
test
aas
xchg
addr16
movs
sbb
sub
jbe
call
(bad)
das
or
pop
cmp
cmp
and
and
add
push
jb
test
scas
jb
ror
add
dec
fnstenv
and
sbb
mov
aad
outs
mov
cmp
mov
inc
test
or
cmc
out
punpckhbw
sbb
and
jmp
and
and
outs
sbb
arpl
mov
stos
sbb
ficomp
ds
bound
jmp
sub
inc
jmp
mov
or
sub
sub
in
aaa
xor
ret
adc
push
push
sub
test
mov
push
jne
jae
outs
hlt
or
pushf
(bad)
or
cs
add
rep
add
sar
mov
dec
push
push
fsubr
imul
sti
ss
movs
xchg
pushf
cmps
pop
xor
ins
and
jmp
xor
add
ret
movs
dec
pop
dec
push
pop
popa
mov
out
pusha
push
retf
xor
test
(bad)
mov
dec
mov
or
stc
and
repnz
mov
addr16
test
fbld
push
mov
sbb
push
pushf
dec
lods
cmp
loope
(bad)
mov
(bad)
mov
xor
xchg
idiv
push
ret
loope
inc
aad
test
nop
jl
aaa
push
mov
jp
xchg
cmps
mov
fwait
and
cmp
int
popf
inc
cdq
bound
(bad)
sub
cmp
into
fdiv
(bad)
imul
fidiv
xchg
ins
pop
or
js
jmp
scas
push
in
dec
and
(bad)
loopne
shl
mov
mov
mov
retf
xchg
int
(bad)
pop
aad
and
in
mov
pop
push
sub
sbb
mov
sub
stos
mov
out
jb
pop
popf
sub
inc
rcpps
or
ror
(bad)
pop
inc
movs
mov
and
inc
dec
add
into
(bad)
enter
mov
cmp
adc
mov
mov
xchg
sbb
mov
aam
jnp
mov
sbb
mov
iret
mov
fs
cld
std
lock
xchg
lahf
mov
cmp
stos
inc
mov
test
jbe
inc
inc
enter
out
int
sti
or
mov
and
vminss
iret
push
inc
(bad)
arpl
mov
imul
pusha
jno
mov
mov
movs
lahf
jno
ins
(bad)
jo
popa
pop
pop
jne
mov
pop
mov
das
imul
mov
mov
into
ret
dec
icebp
mov
rol
test
inc
movs
xor
mov
push
push
mov
shl
scas
mov
xor
test
jg
mov
nop
call
mov
sbb
movs
inc
xor
(bad)
(bad)
dec
rcr
inc
push
mov
into
das
sub
loop
pop
cs
test
mov
dec
xor
cmp
pop
jecxz
aaa
lock
fnsave
jg
and
add
pushf
outs
loop
mov
mov
lahf
imul
pop
ret
inc
add
jle
frstor
leave
in
out
dec
xchg
pop
ins
fwait
int
pop
lock
(bad)
movs
adc
or
or
jle
in
adc
jnp
jno
or
add
icebp
jmp
mov
sbb
jne
loop
in
sub
add
cmps
shl
(bad)
mov
push
mov
xchg
or
leave
xor
in
mov
test
or
je
pop
mov
hlt
scas
lods
mov
dec
or
iret
inc
xchg
in
mov
xchg
push
sbb
fistp
cmp
in
test
xchg
xor
std
mov
pop
xlat
dec
out
call
clc
sbb
or
and
mov
fisttp
ss
push
arpl
iret
inc
scas
leave
push
and
lea
ds
jg
xchg
ror
inc
(bad)
xlat
sub
sbb
fstp
rcr
outs
ss
push
rcr
push
cmp
cmp
jnp
xchg
add
mov
mov
ret
sbb
inc
and
shl
out
cmp
cmp
test
in
sbb
mov
adc
fild
rol
cmc
fsub
(bad)
cmp
jp
dec
popa
mov
cmp
aaa
leave
mov
pop
(bad)
in
mov
push
or
xor
sub
bound
dec
mov
(bad)
inc
fst
(bad)
sti
lods
mov
push
fcom
cmp
pop
mov
xlat
add
add
cmp
fild
push
mov
xor
cmp
fild
jecxz
sbb
test
mov
cmp
ret
jnp
push
(bad)
movs
test
repnz
mov
sub
dec
jne
daa
push
xchg
xchg
in
sub
mov
push
pusha
js
mov
add
jo
and
ins
cmp
arpl
lods
in
mul
cmp
inc
test
mov
sub
push
icebp
movs
and
cli
fist
call
sub
pop
call
cmps
ds
jge
jno
mov
in
test
sub
push
add
scas
neg
mov
sbb
cmps
push
sub
add
sti
sub
pop
or
movs
scas
cwde
xchg
cmp
xor
fisubr
fstp
data16
movs
rcr
and
jnp
nop
mov
aam
mov
mov
fsub
idiv
fbld
mov
sbb
pop
mov
sahf
cli
(bad)
mov
movs
add
in
lds
nop
xor
(bad)
cli
add
mov
jns
dec
xchg
fnsave
cwde
sbb
inc
aas
movs
mov
jae
in
jg
xchg
push
into
adc
sar
push
jle
movs
jle
adc
xchg
repz
push
loop
mov
stos
add
jne
mov
inc
das
test
(bad)
add
inc
xor
sub
repnz
jmp
sbb
icebp
ds
aas
jge
out
xchg
jae
dec
push
fst
mov
loop
int
inc
imul
dec
sbb
jne
fdivr
xor
test
lahf
or
push
inc
leave
fistp
adc
inc
jecxz
add
ja
xor
sahf
dec
inc
int3
cmp
sbb
cmp
mov
idiv
fxch
sbb
mov
ret
sbb
xchg
pop
popf
push
loop
sbb
iret
fld
sub
repz
add
jmp
cmps
cmp
push
push
jae
xchg
std
loopne
loope
mov
(bad)
sbb
or
xor
mov
cli
(bad)
push
xchg
cmc
xor
es
sbb
enter
mov
mov
jae
inc
rcr
mov
mov
pop
ror
xchg
ret
ins
jge
add
adc
pop
sub
enter
cmp
out
cmp
ss
int3
cmp
shl
or
mov
into
push
shl
test
mov
or
addr16
push
mov
mov
ja
ins
hlt
xchg
sub
mov
xor
adc
in
mov
cmp
cmc
push
popa
aam
sbb
mov
int
js
cs
cmp
push
xor
dec
add
mov
imul
sahf
mov
push
les
cmp
inc
sbb
cmp
in
pop
test
fmul
or
dec
push
cld
xchg
cmp
pop
jb
in
dec
jle
(bad)
cli
lds
inc
mov
dec
adc
adc
inc
jno
ins
sub
adc
(bad)
xor
fwait
loop
jns
mov
push
sbb
mov
aaa
sbb
mov
jmp
jle
ror
stc
pop
les
mov
xlat
push
push
test
into
inc
sub
mov
inc
out
out
pop
or
imul
sahf
or
push
push
pop
inc
or
mov
mov
lea
mov
rcr
xchg
inc
sbb
retf
loopne
jne
mov
fisttp
test
fiadd
or
push
push
xchg
push
in
xchg
or
mov
cmp
imul
pusha
les
fstp
dec
cli
sub
ss
repz
mov
stc
movs
mov
call
add
sub
sbb
cmp
stos
fdiv
mov
pop
mov
out
or
xchg
jmp
sbb
test
scas
mov
(bad)
int3
push
xor
rcl
xor
cdq
int
inc
add
pop
les
dec
aaa
fsub
lods
and
imul
xchg
mov
cs
retf
or
push
das
push
(bad)
hlt
in
and
xor
push
sbb
sub
push
aam
xor
cmc
xor
inc
ficomp
jp
xor
and
lahf
pop
pushf
jmp
mov
jns
cld
retf
or
or
add
mov
cmp
and
icebp
dec
mov
sbb
jecxz
lock
(bad)
stc
pop
adc
mov
xchg
ss
push
(bad)
fsub
mov
sub
pop
xchg
jl
aas
data16
ins
dec
xchg
mov
popf
mov
mov
je
mov
mov
or
jno
fs
pop
scas
xor
and
sbb
ret
sub
add
and
bound
mov
or
sub
jmp
pop
push
out
mov
mov
out
out
or
inc
pop
xor
mov
dec
(bad)
or
ins
mov
fcmovbe
ret
retf
dec
mov
ror
push
addr16
xor
scas
push
pop
dec
xchg
xlat
std
cmp
jnp
(bad)
adc
(bad)
ja
jmp
dec
imul
mov
fsub
call
dec
js
call
fisttp
and
aaa
pop
test
cmp
loop
test
(bad)
jmp
adc
je
pop
dec
jmp
add
ror
or
or
pop
shr
daa
push
xor
inc
ror
popa
std
add
gs
int3
icebp
push
rcl
fs
jns
(bad)
rol
and
or
xlat
inc
paddd
and
mov
scas
sub
int
cmp
cmp
into
xor
mov
jg
inc
addr16
pop
cdq
ret
jbe
out
daa
pop
rcr
int
sar
push
aaa
push
add
mov
fs
aaa
aas
push
xor
movs
inc
sbb
icebp
mov
iret
mov
loope
pop
test
dec
popf
(bad)
sti
fbld
xor
test
test
enter
cli
sbb
or
in
fadd
push
aam
mov
push
repnz
mov
rcl
fwait
test
dec
push
push
popf
mov
in
addr16
shl
outs
jns
cmp
jns
push
scas
add
fld
jns
ficomp
or
fimul
test
shr
mov
cld
pop
or
mov
ret
sub
out
les
adc
stc
mov
inc
into
stc
stc
cs
cs
pop
in
mov
xchg
sbb
in
pusha
dec
pop
jb
sbb
jg
cmc
shl
ins
push
mov
nop
pop
jl
inc
xor
push
pop
cmps
ss
jle
aaa
pop
sub
imul
add
movs
mov
pop
dec
mov
in
add
imul
ffreep
xchg
inc
adc
sub
jbe
sbb
sub
inc
jecxz
sti
in
sub
movs
xor
xor
inc
xor
jno
jmp
lods
inc
add
adc
pushf
in
ds
jae
sahf
push
dec
aam
jecxz
in
retf
imul
push
or
pusha
sbb
aaa
xor
pop
xchg
daa
jo
retf
and
cmp
push
jb
in
movs
inc
shl
push
out
mov
hlt
int
push
hlt
cmps
push
inc
jmp
neg
(bad)
lahf
(bad)
and
scas
shl
test
mov
dec
mov
scas
jmp
lea
pop
repnz
adc
adc
add
mov
cmc
dec
xchg
call
clc
scas
test
cmp
pop
pop
mov
popa
dec
cmp
mov
es
mov
jno
xor
test
push
repz
rcr
xor
push
jp
cmp
inc
jmp
mov
mov
sbb
leave
sbb
adc
sub
sbb
jmp
mov
sub
push
jmp
nop
mov
cmps
and
dec
jmp
jo
loopne
out
idiv
cdq
pop
push
imul
outs
pop
pop
push
fdivp
push
and
mov
inc
out
or
add
je
fnstsw
dec
stos
retf
push
ja
std
adc
cld
mov
inc
xlat
aam
outs
mov
and
jmp
lahf
outs
imul
jns
mov
jl
(bad)
mov
sbb
in
mov
into
mov
addr16
pop
rcl
xor
arpl
push
out
jg
adc
push
div
add
pop
dec
nop
cmps
add
rcl
in
scas
ins
or
sbb
sub
add
mov
cwde
cmp
repz
stc
and
or
mov
popa
jno
jne
xchg
or
xor
mov
repnz
sub
mov
stos
jns
add
stos
xchg
push
std
xchg
frstor
inc
add
add
not
and
xchg
pminub
pop
repz
xchg
push
(bad)
test
dec
and
dec
mov
inc
sti
fsub
adc
clc
mov
jo
dec
mov
shl
lock
and
adc
ret
shr
scas
stc
add
loop
cmp
imul
aam
fisubr
fcomp
xor
push
fs
rol
sbb
call
push
xor
ror
das
sub
or
mov
dec
jae
cdq
sub
retf
xor
mov
push
adc
mov
ror
push
sub
stos
out
sub
xor
xchg
xchg
shl
ffreep
add
aas
jne
pop
xchg
cmp
mov
adc
in
arpl
dec
das
jmp
add
hlt
cmp
mov
xchg
test
(bad)
mov
add
jmp
fild
fwait
scas
ret
pop
mov
push
mov
int
and
mov
inc
xchg
push
sub
add
cli
ds
and
cmp
adc
jle
dec
rcl
mov
mov
shr
popa
lea
(bad)
and
hlt
adc
arpl
and
mov
mov
call
imul
pop
dec
jns
jmp
inc
loope
push
lods
pop
fstp
(bad)
imul
xchg
scas
xchg
into
or
sti
xor
xlat
out
aad
add
inc
mov
jae
loop
adc
loope
and
loopne
jle
adc
pop
push
and
popa
mov
push
pushf
sbb
loope
cmp
cmps
stos
jp
adc
mov
xor
outs
mov
loopne
ror
sub
push
aad
aam
mov
(bad)
dec
cmps
test
out
(bad)
mov
cmps
push
call
push
fld
dec
js
push
mov
sbb
mov
sub
inc
push
sub
cmp
push
xchg
pop
in
mov
jle
sbb
and
aas
fwait
mov
pop
xor
add
pop
std
jb
sar
jmp
sbb
rol
jb
mov
inc
fs
push
mov
aas
jmp
fbstp
repz
inc
test
jp
retf
lds
fcomip
(bad)
jle
dec
xchg
cmps
movs
adc
mov
cmp
mov
add
push
pop
cmp
bound
push
repz
jno
mov
ret
retf
fs
jno
pop
mov
mov
loop
xor
icebp
enter
sahf
scas
sar
out
adc
cmc
or
sub
xor
sub
xchg
push
sar
ret
dec
sub
and
mov
cld
in
out
inc
fcomp
dec
ret
adc
push
cmps
(bad)
call
pushf
sub
ins
ds
dec
xchg
int3
dec
mov
sub
mov
or
jo
xchg
push
jecxz
bound
jns
(bad)
xlat
iret
inc
mov
or
or
enter
cmp
(bad)
lock
jmp
setl
sbb
popf
cmc
sbb
mov
rcl
(bad)
sbb
add
mov
repz
repnz
std
xchg
add
ror
mov
cmp
and
mov
repz
retf
les
dec
dec
xchg
sbb
out
cmp
and
out
jno
push
xchg
sbb
fistp
mov
test
xchg
xchg
js
pop
mov
push
neg
cld
add
fidivr
loopne
pop
or
ss
jmp
jb
mov
or
ss
sub
aas
lahf
xor
lahf
xchg
stos
(bad)
arpl
adc
mov
lods
sar
jle
or
mov
mov
pop
les
adc
push
ret
data16
pop
(bad)
frstor
cmp
mov
adc
inc
and
(bad)
adc
(bad)
aad
out
mov
pusha
lods
out
imul
cmps
xor
xlat
jle
xor
jnp
add
pop
mov
push
and
mov
retf
cmp
xor
pop
dec
mov
inc
daa
inc
lock
std
stos
xor
jmp
faddp
mov
push
lock
pop
cmp
push
in
jo
(bad)
outs
mov
stc
pop
push
xor
out
sub
sub
jg
sub
add
xchg
int
scas
pushf
enter
push
jae
stc
popf
cmp
in
push
fst
mov
pop
pop
aaa
scas
(bad)
pusha
push
call
push
push
and
adc
xchg
es
mov
pop
int3
aaa
leave
stos
test
pop
bound
ror
not
mov
mov
mov
addr16
outs
or
sbb
inc
push
dec
xor
sbb
(bad)
mov
nop
or
test
xchg
enter
(bad)
shl
xor
push
mov
lock
push
xchg
jo
jnp
andnps
jne
test
fstp
jnp
jl
sub
xlat
cmp
call
stos
push
mov
pop
shl
push
jmp
pop
aam
ret
into
xchg
lods
add
loopne
(bad)
fimul
mov
mov
dec
add
into
adc
pop
(bad)
sub
cld
or
sahf
lss
repz
int3
pop
mov
test
cmp
shl
push
out
xchg
xchg
call
nop
xchg
push
and
sbb
add
push
jp
popf
lahf
mov
lock
aaa
fst
sti
cmp
jp
lea
mov
lahf
arpl
sub
mov
repnz
add
dec
sbb
iret
push
sar
pop
sub
push
inc
je
je
(bad)
sbb
repz
int
imul
jmp
and
push
stos
out
movs
retf
xchg
jnp
enter
in
les
pop
xchg
jle
mov
shl
mov
push
retf
call
sbb
leave
or
leave
adc
push
jb
outs
pop
mov
sbb
and
adc
data16
jae
ret
iret
cmp
out
gs
push
sar
push
out
sub
and
add
jp
addr16
sub
pop
aas
add
or
mov
dec
sahf
cdq
or
mov
repz
(bad)
inc
and
jne
add
and
dec
cwde
push
push
aas
push
in
vmwrite
ret
cmp
and
popf
cmp
inc
fild
mov
aas
repnz
sub
jbe
xchg
mov
loope
sub
(bad)
scas
mov
or
(bad)
ds
push
shl
cmp
mov
cmps
sahf
fmulp
xchg
repz
push
and
ja
pop
test
movups
mov
pop
movs
fsub
jno
mov
mov
mov
loop
aad
in
js
pop
jae
pop
and
pop
jne
cli
inc
int
outs
and
mov
cld
mov
imul
cmp
mov
mov
and
push
and
shl
pop
xor
imul
pop
jb
inc
or
dec
inc
lds
jp
or
cmp
jae
mov
loope
push
aam
lds
es
movs
sub
jecxz
mov
das
rol
fstp
fdivr
mov
aam
push
jno
or
test
ins
sbb
push
mov
pop
loopne
rol
in
and
and
js
daa
xchg
cmp
in
mov
cmp
sub
add
jle
test
jbe
and
add
cwde
cmp
call
add
fs
push
or
sub
out
push
push
xor
fld
test
xor
fcomp
ret
xor
pop
inc
lahf
ds
add
sub
pop
leave
ja
and
jp
xor
scas
(bad)
pop
pop
cs
nop
popa
outs
mul
loopne
shl
lock
imul
nop
mov
call
rol
not
add
(bad)
(bad)
jle
add
push
inc
fadd
jbe
iret
js
mov
push
es
pop
(bad)
gs
repnz
inc
mov
stos
fsub
inc
or
jle
fcom
scas
shl
div
add
hlt
in
ins
call
cmp
mov
dec
icebp
pop
dec
rcr
ret
adc
dec
in
adc
loope
mov
enter
mov
mov
push
(bad)
repnz
lock
bound
movs
mov
mov
mov
xchg
xchg
xor
jne
stos
mov
jae
mov
jne
xchg
mov
mov
push
je
test
enter
and
or
test
adc
(bad)
xchg
daa
xor
mov
jno
test
dec
(bad)
sbb
and
(bad)
jnp
in
xchg
in
fcom
in
js
xor
jmp
add
add
and
pop
inc
mov
jecxz
inc
or
pop
fnsave
(bad)
loopne
fnop
inc
ret
add
fnsave
mov
mov
jl
ror
xchg
nop
stc
(bad)
sahf
dec
pusha
mov
lods
jnp
sub
in
imul
xchg
out
pop
push
push
(bad)
push
xchg
xor
(bad)
fadd
shr
cld
shl
pop
add
sbb
adc
and
push
cmp
test
push
stos
ins
or
inc
cmp
repz
and
dec
sub
jle
std
inc
cmp
sub
call
xor
pusha
mov
dec
loopne
or
test
pusha
sbb
jg
mov
fild
mov
push
shl
mov
pop
sti
mov
sti
mov
out
jg
add
xchg
pop
cld
mov
inc
push
repnz
push
or
mov
movs
pop
jbe
jp
mov
es
call
mov
inc
mov
imul
xchg
enter
dec
inc
pop
ss
stos
shl
sub
add
fnstsw
pop
scas
or
fisub
push
ret
daa
test
push
outs
or
xor
jg
ret
inc
jle
hlt
mov
out
sbb
clc
xchg
xlat
pop
or
add
ret
shl
stos
pop
sbb
mov
add
shr
or
dec
leave
test
pop
sub
out
or
pop
pop
popf
xchg
xchg
xchg
ins
add
int
sub
or
inc
mov
pop
into
push
icebp
adc
popa
add
cmc
fsubp
ds
adc
sub
xor
lahf
fs
mov
fdivr
mov
inc
addr16
clc
cmc
shl
arpl
iret
push
cmp
push
int
(bad)
js
mov
inc
(bad)
jp
mov
shr
retf
int3
xchg
xor
adc
sub
xchg
dec
fs
mov
movs
adc
xor
or
and
pop
nop
jb
sbb
add
pop
xchg
fsub
cld
ror
cmp
inc
or
push
push
sbb
int3
mov
jnp
js
sbb
pop
movs
pop
stos
lock
mov
add
xor
cdq
mov
not
mov
push
cmp
sbb
jae
push
mov
stc
add
rol
ret
call
inc
xlat
mov
jp
aaa
fs
cs
loope
sar
dec
fstp
dec
add
outs
push
jge
jecxz
add
aas
mov
or
jns
or
(bad)
inc
retf
cmps
aam
xchg
je
jp
stos
sub
mov
mov
and
es
or
mov
cmps
gs
cli
sbb
mov
loop
push
jnp
cmp
mov
inc
fsub
pusha
daa
lods
add
rol
ret
mov
jmp
sub
cmps
cmp
push
xchg
clc
les
out
push
test
lea
add
and
ret
gs
pop
mov
or
xchg
cmp
cmps
es
adc
jecxz
std
je
fwait
mov
rcl
mov
sar
std
test
xchg
mov
loop
xor
pop
fsubr
pop
data16
xor
stos
cmp
(bad)
jl
ror
mov
lock
mov
inc
fstp
fld
mov
cmp
jnp
ds
mov
cmp
add
mov
cmp
mov
ja
sub
push
xchg
push
ret
in
dec
test
icebp
or
or
stc
lods
pop
adc
sbb
jg
and
mov
xor
lds
adc
cmp
aas
pop
cmp
pop
xchg
shl
lods
xor
jecxz
icebp
out
mov
jecxz
ficomp
adc
stos
pop
add
nop
out
xlat
xchg
and
popf
mov
mov
pop
(bad)
ins
pop
mov
stc
lds
dec
dec
xchg
iret
stc
dec
mov
iret
dec
dec
jle
sub
xchg
jbe
sahf
and
out
outs
sar
sbb
aas
mov
shl
xchg
pop
push
jns
dec
mov
loop
les
je
jne
push
inc
adc
ins
aaa
xchg
int3
outs
fimul
aas
aam
cmp
and
cmp
pop
daa
mov
fst
mov
xchg
ds
dec
call
mov
inc
push
(bad)
and
mov
test
outs
sbb
std
(bad)
jns
jb
test
xchg
and
cmp
inc
cmps
sbb
inc
in
(bad)
fsub
ins
dec
adc
cdq
jl
retf
xlat
leave
cli
jno
mov
mov
mov
and
nop
(bad)
test
jnp
xchg
hlt
lea
mov
jge
loop
sub
daa
mov
mov
inc
int3
mov
xor
into
adc
mov
sub
outs
add
xlat
lods
outs
inc
sub
sbb
int
sbb
jmp
outs
sahf
jo
stos
xor
add
mov
out
mov
not
push
add
std
mov
stos
adc
mov
or
mov
pop
dec
cwde
mov
jbe
mov
mov
aam
pop
cmc
xlat
dec
test
pop
mov
pusha
repnz
daa
aas
repz
call
dec
jmp
cmp
add
cmp
dec
test
mov
sbb
retf
in
jbe
leave
ret
mov
pop
das
xor
cld
sub
aaa
loopne
inc
fucom
xor
mov
cs
pop
ins
not
int3
in
lds
mov
shl
loop
mov
clc
leave
std
aam
xor
and
jno
out
push
jmp
xchg
and
(bad)
cmp
repnz
shl
les
mov
jg
aad
addr16
jne
bound
cmp
es
add
add
test
addr16
addr16
mov
inc
movs
sbb
retf
ret
sub
ins
sub
xor
gs
test
scas
pop
pusha
and
dec
mov
jmp
jne
shl
dec
push
loop
inc
push
loope
enter
or
neg
jae
movs
mov
(bad)
in
fisttp
jae
sbb
mov
and
xlat
push
cli
cmp
or
les
aad
ss
add
(bad)
adc
bound
cmp
lea
fld
mov
xor
cmps
rcr
add
and
mov
cwde
mov
es
arpl
xchg
pop
or
sahf
push
inc
or
push
addr16
pop
dec
jmp
cwde
test
shl
imul
push
pop
pop
bound
add
sbb
inc
ror
shl
cs
dec
mov
mov
iret
jbe
ins
or
outs
mov
daa
cmps
mov
cmp
in
cld
pop
xor
mov
fwait
ret
cs
mov
push
inc
das
inc
shl
xor
sbb
(bad)
sti
out
xor
les
outs
xchg
test
call
mov
int3
out
fisub
lods
push
outs
adc
mov
ret
and
call
mov
popa
xor
(bad)
(bad)
(bad)
and
out
loopne
xchg
sub
push
and
xlat
outs
mov
xor
adc
or
bnd
jecxz
fisubr
add
sub
xchg
fsubr
ins
xlat
cmps
stos
sbb
nop
and
ret
adc
jmp
mov
sti
popf
js
retf
sbb
xchg
mov
mov
ja
add
mov
retf
mov
mov
mov
and
and
fdivrp
pusha
ja
mov
inc
push
lock
cmp
push
lea
jae
push
rcr
mov
arpl
xor
(bad)
xor
mov
and
fisub
pop
out
inc
ret
ret
mov
outs
cmp
cmp
(bad)
jmp
push
cmp
call
add
jge
mov
lods
in
mov
fisubr
mov
lock
mov
push
or
ja
mov
inc
out
lds
aad
daa
jno
pop
sbb
(bad)
rol
mov
cs
rcr
test
pop
sahf
cmp
in
inc
xchg
and
pop
and
adc
shl
sar
out
loopne
jle
daa
or
mov
cmp
shl
jo
mov
inc
add
inc
loop
dec
lahf
cdq
jo
sub
imul
mov
add
xor
jle
xchg
mov
mov
inc
jo
out
mov
(bad)
jmp
dec
push
adc
mov
nop
(bad)
in
cmp
jp
adc
fsub
xor
sbb
add
xor
xchg
adc
call
aas
and
pop
imul
retf
cmps
mov
mov
rcr
cdq
je
mov
shl
push
cmp
mov
test
adc
push
aad
sub
gs
sub
fild
mov
ficom
ins
pop
scas
sub
fidiv
scas
xchg
jp
sub
add
test
ficom
aas
jne
jg
ins
jmp
int
(bad)
pop
mov
stos
outs
or
(bad)
jbe
out
(bad)
std
adc
das
pusha
pop
hlt
jg
xor
jmp
fmul
xor
xchg
ja
xchg
cmc
cmp
retf
inc
jne
push
das
dec
mov
data16
pop
sbb
int
inc
cmp
pop
and
add
mov
push
pop
aas
mul
mov
push
mov
mov
mov
push
pmaxub
sub
inc
pop
sti
jmp
dec
(bad)
fwait
cmc
sbb
push
(bad)
push
inc
retf
xor
sbb
jae
lods
ret
jae
dec
xchg
pop
or
movs
push
ins
mov
mov
sbb
mov
inc
dec
or
in
add
inc
or
(bad)
mov
aas
call
push
xchg
enter
cmp
neg
jb
mul
or
test
xchg
xor
stos
mov
cmp
mov
out
dec
fwait
inc
aaa
in
mov
and
push
inc
inc
push
outs
fldenv
mov
add
hlt
sub
dec
mov
and
mov
inc
sub
cmps
xor
das
push
int
pop
jb
add
jno
jbe
retw
inc
mov
in
cmp
cmp
fs
scas
cmp
daa
inc
sbb
push
int3
or
psllw
inc
mov
sar
retf
clc
cmps
mov
leave
adc
outs
inc
jne
cmp
mov
in
repnz
rcr
or
sti
ja
mov
xchg
mov
idiv
scas
pop
retf
in
cmp
enter
xchg
dec
les
push
jg
mov
popf
inc
and
jb
stc
dec
stc
push
pusha
ret
push
or
in
xor
jne
pop
push
movs
mov
sbb
pushf
mov
cmp
rol
stc
imul
add
shl
bound
fsub
sti
pop
retfw
stos
sbb
sbb
push
fcmovnu
push
pop
out
xchg
sbb
jo
xchg
addr16
sbb
cs
icebp
fisttp
outs
out
in
cdq
cs
fst
std
in
mov
fild
das
adc
push
dec
repz
out
inc
arpl
sbb
retf
mov
jno
inc
mov
xchg
fld
jmp
push
add
cli
(bad)
lods
adc
repz
push
dec
mov
push
pop
adc
fcomp
popa
aam
jmp
mov
imul
mov
jg
or
push
call
cwde
mov
dec
mov
inc
push
fnstcw
movs
or
mov
jecxz
shl
xchg
pop
mov
push
and
xchg
pop
(bad)
jge
pusha
int3
into
imul
and
in
xor
dec
stos
gs
mov
call
cdq
inc
iret
push
mov
(bad)
mov
sbb
shr
xchg
cmps
(bad)
cli
xor
xor
inc
mov
lahf
and
pushf
jmp
push
fstp
cli
mov
cmp
push
jo
call
inc
ja
sub
icebp
and
adc
rol
adc
lock
movs
jecxz
inc
ror
stos
lods
pop
push
pop
cdq
cld
lea
mov
fstp
cmp
cld
push
fisub
test
bound
mov
call
icebp
popa
push
out
daa
add
push
out
xor
or
das
imul
test
aaa
mov
or
pop
cmp
fld
inc
imul
or
fcmovnbe
cmp
pop
xchg
fist
imul
adc
mov
push
ins
push
cld
xchg
leave
ds
xor
imul
sub
arpl
sbb
cdq
dec
xor
sbb
bound
cwde
out
xchg
stos
pop
fadd
(bad)
aas
xchg
not
pop
enter
cmp
pop
fwait
scas
xlat
gs
sbb
das
mov
outs
xchg
cmp
in
jns
pop
xchg
lahf
xlat
repnz
data16
sub
sbb
mov
and
addr16
arpl
js
xlat
ins
stc
push
push
arpl
mov
cmp
call
pop
scas
xchg
vpsubq
std
std
loopne
ss
push
jle
test
or
mov
xor
scas
ja
push
(bad)
lds
stos
and
scas
push
sbb
bound
neg
adc
fstp
mov
adc
loope
jb
inc
jge
mov
and
sub
das
data16
popf
add
call
adc
(bad)
test
and
add
clc
repnz
mov
mov
idiv
cmp
mov
jnp
adc
mov
cmps
test
cmp
and
jg
rol
leave
cmp
stc
daa
outs
hlt
popa
jmp
pop
pop
or
xchg
dec
sbb
and
mov
popf
es
(bad)
aas
adc
mov
mov
push
pop
(bad)
cmp
je
xchg
in
bound
ds
lea
mov
cdq
fxch
xchg
dec
pop
mov
mov
sbb
mov
(bad)
scas
ja
cmp
pop
data16
xchg
loop
ret
inc
mov
add
rol
cmc
cmc
(bad)
cmps
or
adc
clc
mov
aam
shl
mov
enter
lods
push
mov
xchg
and
fadd
nop
addr16
stos
scas
(bad)
aam
test
push
add
popf
scas
xchg
test
pop
ins
retf
mov
adc
mov
jbe
lods
mov
cmp
xor
loope
(bad)
xchg
pop
adc
cmps
xchg
mov
jge
out
data16
into
addr16
out
or
and
jnp
loope
sbb
fs
test
repz
cmp
js
push
ds
jno
xchg
out
push
push
fs
rcl
and
pop
sar
mov
stos
ins
call
sub
addr16
push
loope
rcl
ins
and
jbe
adc
fadd
push
test
mov
xlat
adc
retf
jle
repnz
pop
cmp
imul
aam
popfw
(bad)
lock
dec
xchg
jb
sbb
fldenv
inc
test
sbb
adc
push
jecxz
nop
or
out
cmp
cli
(bad)
mov
push
cmp
dec
pop
mov
pop
fsubp
je
(bad)
js
add
mov
xchg
add
js
fwait
jno
cdq
lock
inc
in
pop
and
out
mov
cwde
in
inc
cmp
mov
cs
in
mov
rcr
fldcw
sbb
outs
mov
mov
mov
sbb
pop
(bad)
cli
cmp
jle
push
scas
or
arpl
rcl
sub
xchg
adc
js
sahf
ins
popf
push
int
lds
out
retf
jbe
pop
sub
xchg
mov
ret
mov
xor
das
jg
xor
cmps
xlat
sub
and
mov
sub
imul
push
mov
in
cmps
or
in
mov
enter
mov
add
lea
or
dec
mov
sbb
dec
stc
jmp
jecxz
adc
aas
loope
or
push
pop
push
xor
hlt
iret
jo
lds
mov
cmp
push
xor
jmp
xor
and
sub
mov
dec
es
jb
pop
pop
sbb
(bad)
cld
gs
xchg
cmp
aad
jmp
cli
cmp
in
dec
mov
adc
js
mov
or
xchg
movs
push
cmp
xlat
inc
scas
bound
mov
xchg
test
and
leave
imul
mov
adc
and
jmp
je
mov
xor
loopne
frstor
xlat
inc
arpl
out
mov
mov
cmc
popa
aaa
std
adc
or
ins
imul
inc
gs
xor
xor
and
enter
mov
not
in
push
pop
ins
pop
add
cld
inc
add
div
or
pop
daa
rcr
xchg
adc
test
popa
in
sbb
push
mov
sub
jae
sub
in
jecxz
xor
pop
or
shl
pop
adc
sar
cs
push
jle
pop
in
nop
(bad)
int
push
dec
mov
arpl
(bad)
dec
xor
scas
stos
imul
ja
jb
fmul
and
ja
sar
push
sub
test
(bad)
pop
sbb
mov
rcl
in
retf
int
inc
sub
icebp
add
dec
enter
shr
add
scas
push
or
pop
and
test
das
out
retf
pop
pop
pop
jecxz
jbe
scas
sahf
push
mov
sub
push
jo
iret
loop
in
lahf
inc
icebp
in
mov
es
xchg
gs
mov
mov
cld
and
and
or
or
nop
not
lods
push
mov
jb
js
inc
xor
test
nop
sub
(bad)
xchg
adc
jno
rcl
mov
aad
imul
(bad)
movs
jnp
stc
pop
movs
mov
dec
cmp
setl
cwde
into
add
and
jnp
bound
mov
icebp
jp
ins
add
sub
jmp
mov
loop
mov
xchg
scas
jmp
rol
movs
test
pusha
sbb
xor
mov
xchg
shl
xchg
imul
leave
leave
sub
repnz
je
out
xor
addr16
xchg
leave
xchg
xchg
retf
mov
jg
dec
xchg
movs
pusha
ins
or
sub
xchg
mov
jl
pop
gs
clc
cmc
jl
(bad)
leave
into
retf
pop
mov
ror
mov
sbb
sbb
jo
movs
jae
xchg
push
xlat
stos
and
fwait
pop
pop
fidiv
xchg
jb
mov
mov
jae
cmps
lock
retf
pop
xchg
or
adc
sbb
sbb
cld
and
inc
rcl
arpl
(bad)
jecxz
pop
popa
cmp
and
fnsave
loope
cmc
test
out
adc
cmp
pop
inc
mov
xchg
int
jmp
jle
sub
cmp
adc
add
mov
xchg
ret
inc
dec
mov
xchg
jmp
gs
mov
shr
ja
sub
hlt
xor
das
(bad)
js
aaa
test
(bad)
(bad)
and
lsl
mov
(bad)
fs
dec
dec
pusha
mov
test
iret
cwde
mov
mov
not
jl
ja
mov
sti
mov
cmps
pop
sar
adc
and
lds
test
ror
jno
mov
inc
cmps
lock
fs
test
cmp
xor
xor
push
repnz
cmp
and
loope
pushf
cmps
cs
adc
mov
ret
clc
out
outs
mov
fld
mov
cmc
pop
and
icebp
pop
dec
arpl
and
jecxz
pop
or
push
xchg
in
mov
xchg
or
mov
add
pop
scas
adc
adc
dec
and
ins
mov
(bad)
out
mov
or
and
inc
mov
cld
cwde
(bad)
hlt
jecxz
(bad)
in
es
mov
pop
xchg
sbb
stos
enter
fs
pop
int3
adc
dec
(bad)
retf
dec
sbb
and
xchg
or
mov
call
sbb
cwde
sbb
mov
xor
fs
mov
shr
aam
mov
(bad)
loopne
xchg
pushf
adc
xor
mov
mov
in
lea
sti
push
gs
cmp
inc
dec
call
push
mov
pop
fsubr
add
(bad)
fisttp
sti
add
push
les
(bad)
in
in
cmp
cmp
sbb
xor
xchg
push
call
push
(bad)
cmp
retf
jp
xor
std
repz
pop
int3
cmp
add
mov
sub
ss
test
ss
lds
rcl
xchg
cli
push
sbb
mov
mov
in
pop
dec
cli
mov
or
jbe
and
pop
in
jecxz
add
xchg
mov
fld
cmps
or
icebp
ror
bnd
xchg
(bad)
dec
jmp
xor
pop
ins
int3
nop
adc
in
(bad)
xor
jns
aas
std
cmp
add
xchg
and
sti
cmp
mov
dec
jp
stos
or
int3
cmp
sbb
dec
dec
xchg
sahf
scas
mov
stos
sub
mov
pop
dec
jnp
push
mov
add
das
mov
les
inc
pop
sub
outs
scas
stc
cmp
mov
cmp
pop
pushf
fs
(bad)
out
cmp
cmp
out
adc
es
js
adc
xor
icebp
sbb
std
ds
(bad)
mov
add
addr16
shl
mov
iret
(bad)
cmp
das
push
(bad)
pop
mov
test
mov
inc
sahf
stos
in
cld
ss
jb
and
and
nop
sbb
or
icebp
cmp
test
and
cmp
inc
ins
leave
scas
lds
add
sbb
pop
fmul
add
adc
push
cmp
loope
cmps
push
cwde
add
fnstsw
sbb
mov
mov
adc
sub
and
je
add
mov
push
cwde
pop
pop
cs
cs
dec
cmp
inc
repnz
cmp
pushf
loop
jp
icebp
jo
in
cwde
sbb
mov
mov
add
pop
mov
call
lock
jns
repz
hlt
adc
cdq
retf
in
push
cld
mov
rol
fadd
call
or
mov
pop
fs
mov
clc
xor
cmp
add
enter
ret
mov
in
popa
loope
sbb
fxam
jg
mov
and
repz
add
out
mov
stos
sti
sbb
outs
mov
xlat
in
mov
jne
xchg
xchg
adc
add
imul
pop
sbb
sub
es
jecxz
ja
jnp
cmp
call
cmp
xor
inc
jecxz
mov
xor
xchg
xor
adc
or
xor
pushf
pop
dec
call
sbb
movs
outs
sbb
sub
das
mov
mov
push
add
adc
lods
jp
paddb
cmp
test
or
addr16
jno
add
cmp
jmp
xlat
and
dec
sti
dec
cdq
add
mov
pop
add
and
das
xor
enter
cmp
or
in
(bad)
jle
lock
jmp
xor
movs
call
scas
lea
loopne
loop
pop
xor
xchg
or
push
xor
sub
dec
out
adc
mov
rol
jnp
add
jb
push
popf
rol
fistp
imul
pop
and
jns
jge
fild
pop
(bad)
mov
leave
adc
push
(bad)
clc
in
cdq
cmp
imul
icebp
test
mov
add
stc
mov
jae
push
and
xchg
arpl
push
jl
push
jmp
(bad)
movs
xchg
fist
add
push
sub
dec
movs
jl
sbb
or
dec
in
(bad)
mov
and
xor
pop
jp
aaa
(bad)
cmp
lods
inc
and
sub
(bad)
popf
sti
in
(bad)
cmp
sub
mov
call
or
xchg
rol
pop
mov
int3
jmp
push
mov
outs
adc
jg
frstor
fisub
in
ss
movsx
aas
mov
or
outs
call
scas
fst
sahf
dec
arpl
(bad)
rep
fucomp
cmc
int
mov
sbb
fxch
(bad)
sbb
lds
popa
sbb
(bad)
imul
xchg
pop
mov
fdiv
cmp
pop
sub
push
xchg
pop
inc
aad
mov
sub
push
(bad)
mov
cmp
in
xchg
fimul
mov
push
jmp
call
in
lahf
inc
and
imul
add
cmp
jmp
retf
pop
jmp
scas
xchg
xlat
xor
js
xor
xchg
sbb
sbb
repnz
push
mov
fst
ror
cmp
sbb
jmp
jno
push
rcl
dec
push
pop
sbb
into
add
add
stos
dec
or
ret
loopne
cmp
adc
mov
fs
(bad)
stos
sar
xchg
into
mov
out
and
mov
aaa
test
xchg
(bad)
fsubr
out
cmps
jns
push
or
hlt
retf
inc
adc
cmp
and
add
in
inc
mov
jnp
jbe
pushf
sahf
aaa
rol
xchg
js
push
nop
dec
dec
aas
pop
pusha
jo
sbb
or
adc
in
daa
jmp
out
pop
int3
out
and
push
jge
inc
push
adc
stc
sub
jns
mov
push
aaa
and
test
aam
pop
xchg
or
or
mov
out
dec
movs
scas
xchg
sar
(bad)
movs
pushf
cmp
popa
test
mov
imul
add
popf
das
or
data16
cmps
inc
mov
leave
bound
cwde
pop
das
mov
jae
jns
xor
push
enter
pop
loope
mov
adc
in
call
daa
jae
iret
adc
clc
mov
adc
lds
mov
enter
ds
(bad)
mov
test
sbb
pop
and
xchg
mov
outs
aas
adc
dec
cmp
fwait
test
jp
rcr
movs
jb
mov
mov
and
inc
fbstp
inc
test
xchg
push
sub
pop
or
jg
imul
es
mov
adc
popa
mov
adc
push
push
jns
fs
xchg
sub
sahf
cmps
jae
sbb
or
ret
mov
cmc
(bad)
sbb
or
adc
loopne
rcr
cld
jle
fisubr
enter
ins
sbb
mov
(bad)
vmread
js
shl
jo
cmc
mov
ret
dec
push
jne
loop
ret
call
mov
push
inc
xchg
sbb
dec
mov
test
ss
popf
or
cmc
jno
dec
xor
sbb
popf
sbb
and
(bad)
out
mov
ror
loopne
cwde
repz
push
bound
dec
jg
adc
cmps
mov
pop
add
or
int
jb
test
hlt
pop
pusha
fstp
mov
lahf
ja
push
popf
int
retf
es
sar
fs
ds
es
aad
fld
test
sbb
add
cmps
aad
push
cwde
scas
push
cmp
cmps
imul
les
xchg
mov
test
and
adc
push
xchg
cmp
mov
out
sub
cmp
mov
mov
in
sub
mov
mov
sub
push
jge
or
aaa
icebp
mov
cmc
push
sbb
jns
push
or
fnstenv
xor
push
arpl
mov
inc
(bad)
outs
cmp
push
fmul
inc
cmps
out
pushf
int3
hlt
sbb
pushf
push
fisubr
and
test
fld
add
pop
jb
out
fisttp
clc
xchg
inc
jecxz
push
xchg
adc
mov
or
xor
cmc
or
(bad)
neg
imul
xchg
daa
ins
adc
push
xor
mov
mov
das
mov
sar
xlat
sahf
mov
xchg
cdq
fst
sbb
scas
mov
(bad)
(bad)
cmps
jo
addr16
dec
fisubr
pushf
or
mov
fucomi
cmps
and
add
or
and
call
loop
lds
mov
into
int3
mov
ret
mov
xchg
mov
jne
(bad)
adc
pop
ret
sub
shr
nop
stos
mov
xor
mov
jl
mov
cmp
fiadd
jmp
loope
(bad)
add
daa
in
mov
popf
jmp
sub
retf
push
sahf
cdq
jmp
call
sub
pushf
jns
mov
cli
add
cdq
mov
jecxz
outs
sub
xchg
mov
rcr
xor
or
mov
inc
jbe
loope
jg
jno
je
fs
and
mov
ja
lock
mov
xlat
mov
in
les
and
loope
adc
pop
cmp
mov
(bad)
cmp
out
sbb
movaps
add
ss
xor
pop
xor
mov
sbb
push
mov
dec
sbb
xchg
scas
inc
fiadd
jne
jo
ss
mov
loope
jg
cmps
push
stos
pop
in
(bad)
pop
inc
jbe
mov
add
xchg
adc
xor
(bad)
sbb
push
add
cmp
out
push
loop
loope
scas
sbb
or
sti
cs
(bad)
out
into
add
imul
sbb
jle
xchg
movs
scas
mov
mov
dec
retf
dec
fnsave
jae
jae
mov
xchg
arpl
sbb
and
mov
mov
les
call
iret
dec
xchg
cdq
loopne
xchg
adc
mov
shr
(bad)
mov
aad
fdiv
add
cmps
xor
cmp
sbb
mov
dec
popf
repnz
and
adc
cmp
adc
scas
(bad)
call
fld
mov
popa
das
adc
lds
cmps
cs
repz
mov
mov
rcr
jl
dec
stos
shr
out
leave
daa
clc
in
fild
inc
xchg
mov
in
stos
aam
gs
test
cmp
call
bound
sub
mov
ins
or
push
inc
sti
pop
push
push
xchg
xchg
jge
mov
dec
dec
push
pop
sub
out
cli
add
retf
pushf
xchg
xor
fidiv
or
mov
and
(bad)
sbb
xor
sysret
jo
jb
pop
and
pop
pushf
push
push
and
stos
jg
mov
cmps
push
in
pop
jae
xchg
jle
inc
leave
in
test
hlt
and
shl
pop
(bad)
xor
pushf
xchg
repnz
loope
mov
dec
and
mov
lock
in
mov
sub
add
rcl
mov
pop
add
xchg
adc
inc
dec
mov
jbe
movs
mov
shr
sub
outs
daa
loope
dec
in
sbb
sbb
outs
enter
xor
mov
stos
push
retf
dec
int3
enter
inc
dec
int
add
ret
fadd
adc
jno
dec
adc
test
xchg
lods
xchg
sbb
test
inc
shl
cmp
(bad)
lea
mov
call
je
test
fadd
mov
pop
mov
popa
and
jg
jbe
(bad)
cmp
aaa
icebp
aam
sub
mov
loop
lods
mov
cwde
adc
test
retf
xchg
sub
and
pop
out
daa
into
rcr
and
addr16
ret
and
mov
pusha
jle
call
scas
mov
mov
jl
popa
xchg
imul
cmps
(bad)
test
es
xlat
or
adc
leave
mov
imul
sub
ficom
data16
mov
dec
popf
pop
shl
sbb
dec
jg
pushf
mov
fs
jmp
inc
mov
mov
sbb
mov
mov
inc
jo
cmp
jl
mov
cmc
in
fmulp
hlt
or
inc
lods
shl
xchg
add
pop
and
je
cmp
mov
jg
jmp
lds
int
mov
mov
pusha
into
cmp
and
in
lea
(bad)
lods
mov
or
in
fidivr
scas
iret
test
in
out
hlt
sbb
and
mov
or
mov
(bad)
sahf
mov
xchg
retf
enter
xor
in
push
xchg
(bad)
out
mov
mov
aad
push
mov
and
lock
scas
add
mov
jge
fisub
mov
aas
cmp
mov
push
retf
pop
mov
lods
adc
jb
push
int3
xor
dec
pop
xor
mov
push
inc
test
mov
iret
(bad)
jl
push
sub
outs
lods
dec
outs
cwde
push
sbb
or
adc
mov
test
hlt
es
cdq
push
(bad)
mov
das
sub
mov
dec
shl
xor
push
xor
daa
int
sti
shl
cmps
push
cmp
cmp
and
jecxz
fs
pusha
or
and
xchg
pop
aas
jmp
mov
arpl
repnz
out
mov
out
test
inc
xchg
icebp
test
and
aam
pcmpgtw
test
shl
pop
aas
push
mov
jge
sbb
inc
popf
mov
aas
inc
aaa
cdq
out
ret
iret
outs
sub
sahf
and
in
push
jo
xor
xchg
cmp
dec
sbb
xor
xchg
cmp
outs
jge
push
aam
lock
mov
adc
ret
fdivr
fiadd
pop
push
(bad)
ja
rol
inc
mov
mov
and
and
mov
jnp
idiv
inc
mov
xchg
add
mov
and
fidiv
outs
fsubr
or
and
add
xor
xor
mov
mov
jp
jecxz
push
(bad)
sub
mov
iret
push
ret
pop
or
dec
sub
xor
mov
ret
cwde
inc
stos
lea
inc
int3
sahf
pop
(bad)
imul
(bad)
imul
mov
cdq
aaa
mov
add
lock
retf
push
sub
in
or
je
mov
mov
ins
xlat
aad
inc
or
stc
test
pop
shl
ins
es
pushf
mov
mov
lea
xchg
adc
push
test
rcr
fimul
enter
fwait
mov
or
das
gs
pop
or
fcmovu
adc
shr
out
data16
pop
sub
loopne
lahf
mov
jne
and
push
or
xchg
dec
jns
hlt
mov
pop
shr
and
sub
dec
jo
and
sbb
stc
(bad)
loopne
xor
jae
mov
outs
push
in
mov
mov
mov
mov
xchg
add
cmps
je
mov
xchg
or
xor
pop
adc
shl
pop
jo
loope
xchg
xor
es
adc
js
or
cmc
push
dec
cmp
push
stc
iret
mov
add
fdivr
aam
clc
pop
jge
cmp
lods
dec
adc
jo
inc
sbb
shr
dec
jp
push
pop
adc
retf
xchg
xchg
sub
jne
mov
lds
cmp
inc
out
dec
push
dec
add
repnz
mov
and
cmp
dec
or
data16
mov
xchg
mov
lods
test
into
mov
hlt
xor
cdq
into
adc
iret
add
loopne
xor
loopne
sti
mov
mov
push
pop
add
xchg
js
mov
adc
jmp
inc
sti
jge
cdq
add
cmc
push
daa
aaa
mov
idiv
mov
cwde
mov
daa
xor
push
jmp
das
xchg
mov
out
fdiv
xchg
inc
stos
sub
jmp
rcr
push
or
test
in
xchg
and
lods
sub
mov
les
int3
adc
scas
icebp
add
bound
and
xchg
adc
inc
inc
outs
mov
out
pop
pop
jle
sbb
cmps
(bad)
je
enter
jmp
adc
mov
pop
push
loopne
jmp
xchg
adc
(bad)
xchg
jmp
into
and
add
or
pop
push
xchg
add
sbb
xor
iret
mov
test
int
les
push
mov
aaa
shl
shl
sub
jge
outs
push
lods
ret
cs
repnz
gs
jecxz
clc
(bad)
ror
mov
jmp
mov
std
pop
imul
in
gs
mov
xchg
mov
(bad)
retf
and
imul
ror
(bad)
xchg
sahf
addr16
xor
mov
jl
xor
pop
adc
mov
(bad)
(bad)
cli
out
sub
ret
adc
push
xchg
pop
cmps
push
not
sub
fsub
xor
scas
js
jae
jle
or
xchg
in
adc
add
pop
pop
ins
cmps
inc
inc
and
aas
rcl
mov
or
fisttp
cmc
adc
addr16
mov
clc
inc
or
lahf
pusha
jmp
imul
push
xchg
adc
ins
xlat
xchg
(bad)
ja
push
or
pop
outs
ret
call
fisubr
dec
push
pop
ins
rol
pcmpeqd
jnp
daa
cmp
inc
xchg
xor
push
dec
mov
ss
popf
aaa
dec
add
jnp
adc
repnz
cdq
movs
retf
js
pop
enter
stos
rcr
add
(bad)
mov
mov
pop
jecxz
faddp
ret
arpl
jp
xchg
jns
jle
jg
mov
mov
xchg
and
leave
jbe
aaa
jmp
fisttp
or
shl
rcr
cmp
sub
push
(bad)
mov
dec
sub
jmp
mov
jbe
sbb
push
pop
div
jnp
mov
jge
mov
movs
xlat
add
mov
jle
frstor
shr
xor
jnp
shl
jmp
pop
idiv
add
push
test
and
sub
cmp
cmp
loopne
adc
xor
pop
jecxz
aad
div
mov
js
mov
test
cs
push
pop
xchg
or
sub
nop
std
pop
jnp
cld
inc
adc
cmp
and
mov
clc
jmp
pop
cmp
jno
(bad)
fisubr
push
cli
loop
cdq
push
imul
icebp
or
jle
sbb
adc
xlat
jbe
xchg
add
or
xor
cmp
inc
push
inc
push
jmp
mov
lahf
mov
push
inc
inc
inc
in
cmps
xchg
jne
test
(bad)
sar
xchg
fucomp
repz
loop
push
loop
adc
out
pop
fimul
scas
lock
sar
lds
and
mov
cmc
fcom
or
xor
push
in
pop
js
imul
shufps
fs
hlt
push
mov
add
loop
aad
cdq
popf
mov
xor
jmp
xchg
adc
test
out
mov
imul
push
ins
pop
xchg
cmp
out
repz
push
scas
fiadd
mov
outs
inc
dec
inc
outs
cmp
cmp
push
shr
imul
fidiv
mov
mov
xor
sub
mov
inc
arpl
push
and
lock
sub
pushf
sti
in
scas
pop
add
dec
loopne
mov
clc
rep
mov
cdq
imul
xor
mov
and
scas
ror
sub
sub
std
popf
ds
push
add
xchg
adc
movs
mov
mov
test
mov
cwde
and
loopne
jge
aaa
pop
lods
iret
xor
gs
fsubrp
xor
xchg
into
pop
scas
sub
test
mov
jp
cmp
js
shl
fild
jg
stc
(bad)
sub
bswap
add
call
cmp
pop
jae
xchg
sbb
je
clc
push
mov
mov
xchg
xchg
retf
sub
shl
(bad)
fnstsw
loop
mov
call
adc
mov
je
sub
adc
dec
cli
sbb
test
les
adc
in
ins
mov
sti
push
push
fmulp
in
fwait
cmp
sub
inc
jbe
inc
jno
fucom
pop
sub
inc
mov
xchg
popf
aam
clc
sub
out
inc
push
test
pminub
aam
inc
cwde
jge
jns
jbe
mov
dec
mov
cwde
pop
push
cwde
mov
jae
sbb
retf
inc
dec
mov
and
in
xor
mov
mov
in
aaa
movs
and
(bad)
movs
fnsave
retf
and
sbb
cdq
add
xchg
or
sti
xchg
mov
jo
stc
mov
mov
sub
out
test
fdecstp
leave
fisub
xchg
dec
aaa
xchg
dec
(bad)
int3
lahf
pop
jge
add
sar
adc
mov
mov
adc
test
cld
jl
sbb
fcmovne
int
inc
jns
aam
dec
cmp
out
cmp
out
mov
mov
push
mov
loopne
sub
or
fs
into
cmp
xchg
inc
loopne
test
rcr
or
add
mov
jae
pop
adc
xchg
lea
xor
out
jo
xor
iret
dec
mov
pop
pop
mov
jle
rcl
mov
retf
lea
imul
or
mov
repz
lods
js
mov
cmp
push
add
dec
mov
push
in
ret
sub
out
cmp
mov
pushf
iret
mov
scas
mov
inc
pop
movs
lahf
add
pop
ja
mov
xor
xchg
jmp
dec
and
cli
(bad)
and
cmps
and
daa
cdq
cmp
inc
lea
mov
test
cld
retf
cs
test
ins
dec
sub
push
xor
jecxz
sbb
push
pusha
pop
sbb
push
call
dec
add
push
add
pusha
sbb
loop
into
xor
and
fisttp
dec
push
dec
xchg
les
push
out
jp
adc
xchg
rcr
xor
loopne
inc
and
mov
retf
xchg
fimul
dec
dec
cmp
mov
pop
into
mov
test
imul
xor
das
add
and
imul
sbb
mov
jge
mov
es
int3
fdiv
out
cmc
dec
stos
cmp
adc
jne
aam
lock
mov
push
xchg
inc
(bad)
and
mov
js
pushf
push
pusha
rep
pop
jbe
or
inc
xchg
test
cwde
stos
add
mov
not
cmp
rcl
jb
lahf
and
loop
push
cmp
and
inc
call
xchg
mov
dec
push
pop
into
addr16
std
cmps
stos
mov
jg
shr
stc
fnstsw
or
inc
or
aad
sub
pop
(bad)
push
loop
punpckhbw
enter
inc
or
and
retf
pop
ins
mov
aad
shl
mov
leavew
pop
mov
mov
shl
mov
mov
jg
adc
push
in
fsubr
xor
iret
sub
(bad)
movs
fst
mov
iret
inc
xor
dec
sub
int3
mov
sub
mov
fistp
cmp
add
call
hlt
call
cmp
imul
sti
xchg
fistp
add
pop
ss
int3
repz
dec
inc
lds
cmp
(bad)
in
imul
push
add
inc
out
mov
(bad)
push
mov
jl
mov
pop
(bad)
mov
push
xor
(bad)
shl
enterw
in
mov
add
int
popf
xor
aas
xchg
popf
out
xchg
(bad)
and
ss
or
xor
int3
pop
mov
imul
mov
xor
shl
sub
dec
fldenv
fcmovnbe
les
and
cmovo
xor
test
fcomp
push
push
cmp
mov
sbb
mov
mov
retf
jg
in
das
pop
sbb
dec
lds
cmps
cmp
iret
xchg
jmp
add
pop
and
leave
and
push
lahf
mov
scas
mov
inc
jg
adc
repnz
fcomp
mov
sub
fwait
lods
push
push
sbb
cmp
popa
inc
movs
xor
xchg
sbb
cs
mov
jecxz
lods
dec
push
mov
sub
jo
pop
fldenv
jecxz
mov
cmp
dec
sbb
push
sar
lods
xchg
mov
pop
and
lock
ret
add
je
fld
dec
mov
pop
ja
fmul
(bad)
in
mov
ins
xlat
adc
inc
lahf
loope
popf
adc
and
mov
dec
call
and
hlt
stc
mov
sti
(bad)
cmp
out
inc
sahf
xor
lods
hlt
mov
test
mov
pop
in
push
pusha
and
test
out
pop
pop
div
(bad)
stos
mov
push
mov
jnp
cmps
stc
mov
inc
push
dec
test
test
fisttp
daa
inc
repz
inc
loope
rcl
inc
push
jp
ja
fistp
mov
inc
cld
bnd
pusha
call
pop
jge
ffree
xchg
aaa
adc
push
add
xor
rol
out
clc
in
(bad)
cmps
jp
add
inc
mov
xchg
mov
lahf
adc
mov
lock
pop
neg
xor
or
jmp
lds
test
jp
rol
in
dec
leave
mov
retf
daa
cmp
test
xor
loope
add
lahf
mov
aaa
mov
loopne
outs
adc
ins
lea
scas
mov
cmp
sub
mov
xchg
lods
cs
ret
sbb
cmp
leave
xor
test
into
inc
sbb
mov
xchg
test
out
cmp
cmp
sub
cmp
adc
pop
(bad)
adc
jno
loop
aam
push
repz
aad
fdiv
ins
sub
xchg
call
lods
or
adc
loope
adc
out
outs
retf
push
std
adc
mov
outs
sub
imul
ret
push
cmp
and
xchg
gs
mov
out
nop
into
mov
ret
fs
rol
push
in
out
into
ficom
mov
mov
aas
stos
sbb
dec
(bad)
cmc
loope
out
xchg
iret
mov
jo
in
or
sub
leave
push
ret
mov
pop
iret
sar
and
mov
clc
sbb
fadd
cli
sbb
movzx
pop
pop
and
xor
ficom
mov
and
aas
mov
mov
sub
cmp
data16
sub
sbb
loope
loopne
jg
test
dec
scas
mov
push
dec
arpl
lea
push
stos
mov
push
lods
pop
jnp
mov
cmp
call
mov
call
out
sbb
adc
mov
pop
enter
sbb
scas
mov
pop
sbb
movs
loope
xchg
lock
and
inc
sub
dec
lock
adc
pop
lock
mov
fstp
mov
add
lea
sbb
xchg
pop
lods
stos
(bad)
ja
dec
cmp
das
xor
and
cmp
mov
cmp
in
js
shr
fidivr
mov
shr
push
push
cmp
(bad)
jno
in
jno
push
(bad)
aam
xor
test
mov
lock
retf
fsubr
call
std
mov
xchg
dec
fadd
xor
adc
call
push
mov
add
jmp
dec
dec
push
cmp
add
js
pop
lods
push
mov
test
call
cmc
add
mov
sub
jl
out
mov
in
and
lahf
xor
addr16
xor
shl
mov
pop
dec
in
fstp
sahf
mov
ins
gs
(bad)
jle
icebp
inc
popa
xchg
shl
pop
(bad)
fisttp
xlat
cmp
push
add
test
inc
cmp
sbb
pop
push
fwait
imul
inc
sbb
repnz
sub
fwait
rcr
aam
repz
ss
mov
in
jnp
lahf
ret
mov
shl
jp
retf
add
jg
xchg
adc
int3
in
sahf
jmp
popf
hlt
ss
(bad)
gs
mov
jle
mov
sbb
mov
and
int3
popf
scas
out
push
daa
repnz
pop
pushf
pop
pop
or
icebp
cmp
aad
fwait
xchg
dec
sti
or
popa
leave
add
mov
daa
push
push
fs
add
sbb
add
ret
daa
xchg
jae
pushw
sar
test
xchg
jl
je
jbe
add
enter
dec
movs
pop
retf
cwde
and
mov
xchg
xchg
jnp
movs
int3
sbb
add
pop
sub
mov
pop
and
das
rcr
ss
sub
pop
aas
inc
adc
xor
lods
outs
imul
(bad)
sub
arpl
js
push
inc
mov
ret
neg
xchg
adc
sbb
retf
xor
fimul
xchg
les
mov
push
retf
sbb
repnz
adc
cs
mov
xchg
sub
adc
popa
and
pop
sub
mov
rol
push
cmp
cmp
in
jg
add
and
xchg
jae
cmc
pop
or
mov
cmps
inc
jge
enter
js
movs
lock
dec
push
xor
pop
pushf
ja
pop
ret
pop
inc
out
test
xor
pop
jo
jle
fwait
mov
out
jne
out
mov
ss
imul
test
addr16
sub
pop
sbb
test
cmps
js
fwait
xchg
out
adc
xchg
mov
aad
adc
pusha
std
and
loope
xchg
mov
js
lahf
cmps
mov
ins
ror
xchg
(bad)
adc
int3
xor
dec
sahf
dec
pop
pop
es
shr
mov
cli
ret
je
data16
cld
or
imul
xor
retf
nop
adc
xchg
mov
in
stos
pushf
rcr
adc
rol
ret
rcr
clc
xchg
clc
imul
pop
dec
push
and
mov
fcomp
mov
cmp
repnz
js
adc
cmp
mov
ja
xchg
inc
stos
pop
push
in
add
push
out
fs
es
pop
pusha
push
dec
cld
xchg
popa
pop
push
retf
mov
sub
pop
scas
test
or
xchg
outs
xlat
pop
or
rcr
or
mov
sub
mov
(bad)
idiv
jne
sti
sub
iret
add
jmp
inc
dec
mul
pop
fisttp
ss
out
and
dec
fidivr
pop
shr
movs
sbb
es
cwde
inc
mov
pusha
cmc
cdq
xlat
jl
jl
cmp
ins
jle
(bad)
and
cld
lds
out
cmps
je
loop
retf
cmp
in
add
xchg
jge
cmp
js
jmp
lahf
rcl
xor
jno
mov
(bad)
in
cld
lock
lods
enter
xlat
lock
ins
gs
add
data16
sub
lods
js
sbb
shl
pushf
adc
loopne
xchg
pushf
fist
in
dec
xchg
je
mov
lods
iret
and
cdq
sar
ror
stos
pop
cmps
scas
ins
fistp
in
push
jno
and
xchg
scas
jo
mov
les
pop
iret
and
cmps
push
lods
jmp
xor
cmps
adc
or
popf
popa
xchg
mov
loope
add
pop
clc
jg
cs
adc
pop
mov
xchg
pop
imul
gs
sub
sar
jne
mov
mov
cmc
adc
xor
fisub
push
sub
mov
test
pop
leave
mov
inc
mov
xchg
mov
push
xor
movs
repnz
push
sbb
mov
mov
not
xor
xor
and
pop
bound
movs
add
mov
ins
ret
mov
pop
adc
xchg
or
jmp
mov
retf
repz
retf
xor
movs
xor
and
test
std
cmp
repz
call
ror
push
add
lds
xchg
and
dec
stos
daa
leave
sahf
cmc
fucomi
xor
cmp
pop
and
clc
add
es
inc
loopne
enter
push
call
xchg
dec
mov
dec
push
push
(bad)
lock
fwait
mov
cdq
push
xor
add
or
pop
pusha
xchg
add
adc
add
adc
inc
lods
test
adc
popf
ja
and
push
fwait
arpl
nop
sbb
jno
jmp
or
(bad)
lods
lock
inc
(bad)
cmp
mov
fcmovne
sbb
loopne
(bad)
mov
aas
push
in
or
xor
pop
ficomp
mov
stos
mov
loop
sub
push
aam
fiadd
jle
fnsave
mov
mov
and
ins
(bad)
mov
cmp
sub
je
fidiv
arpl
lea
cmp
cld
sti
(bad)
mov
ror
out
sar
mov
dec
mov
cld
stc
inc
mov
sub
cmp
pop
popa
cmps
pusha
push
gs
int3
dec
aad
pushf
mov
std
mov
push
mov
jns
popa
mov
jmp
inc
push
icebp
add
mov
inc
dec
inc
lea
add
jmp
jmp
cli
cmc
cdq
push
mov
or
sbb
cmp
movs
add
test
outs
mov
sbb
cmps
mov
paddd
xor
or
mov
mov
mov
mov
dec
cld
fld
adc
test
addr16
pop
cmps
mov
std
xor
out
push
xchg
nop
ror
jl
retf
scas
sar
mov
xor
dec
mov
scas
mov
mov
mov
call
sub
mov
cvtps2pi
sbb
adc
jb
xchg
adc
add
and
test
test
call
and
ss
in
or
mov
sub
movs
or
jo
ret
lds
jmp
jmp
adc
rcl
adc
imul
inc
dec
fst
(bad)
inc
retf
int3
iret
xor
lea
xlat
retf
js
jnp
pop
adc
movq
adc
addr16
cmp
mov
jb
sub
jno
xchg
cmps
or
and
pop
jns
stos
movs
add
sbb
jl
repnz
(bad)
jle
mov
sub
jle
enter
cld
xchg
jl
cwde
ret
ins
sbb
xor
xor
sahf
pop
push
test
fisttp
push
icebp
push
sub
jecxz
cmp
(bad)
mov
push
cmp
arpl
(bad)
or
cmp
lock
sub
fucomip
or
jb
sub
jecxz
xchg
mov
je
xchg
pop
test
pop
int
(bad)
fnsave
mul
sbb
mov
mov
jne
cmp
push
ins
in
enter
lea
and
outs
and
add
xor
add
retf
fsubr
xchg
pushf
pop
scas
xchg
dec
xchg
mov
sbb
out
jbe
out
pushf
add
or
jo
sub
data16
std
lahf
scas
and
cwde
arpl
mov
mov
les
sti
and
repnz
iret
stc
xchg
add
or
jb
out
rcl
jecxz
addr16
push
cmp
imul
in
stos
push
dec
fnstsw
and
leave
add
jno
iret
std
sub
in
mov
cmp
mov
or
jne
daa
jbe
or
jg
mov
fnstenv
retf
mov
and
test
add
lea
dec
push
xlat
push
mov
jb
mov
cmp
in
and
(bad)
sub
xchg
cld
add
call
and
das
cmp
mov
push
push
xchg
add
ja
adc
and
or
mov
sub
cmps
cmp
mov
jnp
fnstcw
out
inc
sbb
push
stos
adc
jmp
or
out
xor
cmp
fnstsw
inc
es
aas
adc
xchg
xchg
dec
hlt
stos
inc
dec
adc
xchg
cli
inc
cli
jnp
pusha
mov
jnp
sub
jne
fs
arpl
xchg
pop
fcomp
adc
outs
sub
adc
jmp
data16
mov
out
sbb
dec
cld
in
(bad)
aad
mov
pusha
mov
aas
push
mov
lock
inc
ss
rcr
pop
loopne
scas
pop
(bad)
push
cdq
jae
jbe
repz
pop
stos
pop
dec
mov
add
rcr
cmps
push
push
call
pushf
ror
test
popa
xchg
ins
test
inc
add
mov
mov
int
mov
push
push
and
hlt
shr
cmp
jecxz
xor
cmp
push
sub
push
xor
in
arpl
and
mov
ror
mov
ds
xchg
jge
icebp
out
sbb
mov
mov
jo
jmp
rcl
das
inc
pop
dec
iret
inc
dec
mov
fs
fsubrp
les
mov
pop
pop
sbb
out
sub
adc
or
mov
out
xor
jmp
es
inc
mov
test
ret
push
repz
sub
inc
sbb
movs
push
add
in
mov
sub
pop
xor
mov
push
adc
cmps
int3
sbb
test
lock
add
scas
fild
sbb
push
add
inc
mov
fild
mov
pop
sub
cli
pop
imul
push
dec
aas
inc
loop
int
(bad)
not
sub
xchg
sbb
adc
jg
outs
cld
xchg
pop
push
out
or
mov
cmp
cmp
push
out
fs
or
aad
mov
inc
jmp
rol
aam
clc
cld
fisubr
into
jnp
ins
outs
pop
jo
cmp
push
sbb
adc
pop
mov
mov
ins
icebp
push
pop
dec
gs
jno
retf
ja
lea
dec
pop
dec
outs
ins
fs
dec
mov
sbb
dec
sar
dec
dec
inc
xor
call
bound
jae
stos
jp
lods
loopne
add
mov
out
std
cli
cld
in
add
push
imul
ins
adc
retf
sti
push
imul
popf
jmp
dec
mov
push
xor
inc
pushf
xor
iret
or
mov
mov
xor
shl
xchg
pop
or
mov
sbb
xor
push
cmc
pop
mov
xchg
cmp
aad
xchg
push
xchg
sub
jo
nop
(bad)
xor
inc
call
mov
shl
inc
dec
jp
mov
push
leave
jmp
cli
push
inc
add
sar
add
jg
mov
ss
push
mov
ficom
pop
adc
dec
sbb
loop
mov
ror
nop
movs
jecxz
sbb
cmc
(bad)
fsubrp
sub
aaa
inc
xchg
xchg
sub
and
and
add
push
sbb
dec
dec
test
xor
fwait
sbb
das
test
out
shr
leave
mov
lock
dec
lea
in
and
sahf
loope
add
imul
jbe
xchg
inc
clc
lea
not
pop
sub
ins
stc
sti
cmp
int3
mov
test
push
mov
and
imul
jmp
fsubr
pop
pop
packsswb
loope
std
xor
pop
adc
adc
xchg
dec
pop
lea
repz
adc
inc
test
(bad)
dec
scas
nop
cwde
pop
icebp
lods
shl
pop
js
jne
push
add
js
sbb
outs
movs
adc
sub
adc
aas
lock
sub
mov
repz
pop
jp
cmps
xor
pop
cmps
inc
xor
mov
shl
xor
sbb
push
jae
aaa
repz
imul
sti
call
push
xchg
mov
xor
imul
push
dec
out
and
and
mov
inc
and
mov
(bad)
cvtdq2ps
stc
and
sbb
mov
mov
into
mov
repz
dec
mov
fisubr
mov
into
lock
pusha
das
mov
pop
jecxz
jno
call
add
mov
dec
dec
retf
push
sbb
or
jbe
mov
mov
iret
fild
sub
xchg
cmp
cmp
call
fwait
mov
gs
retf
ins
addr16
push
stc
mov
jbe
into
and
mov
(bad)
loop
mov
mov
jge
ins
scas
mov
rsm
inc
nop
push
retf
sti
pop
add
jo
bound
vsubss
mov
inc
dec
push
in
mov
mov
cli
and
fmul
inc
cmps
stos
dec
pushf
sbb
jge
pop
movs
popa
adc
je
inc
push
xor
add
pop
dec
(bad)
push
pop
je
xchg
jo
mov
and
popa
pusha
xlat
lds
xchg
pop
pop
(bad)
lds
pop
or
mov
xchg
push
sub
push
fmul
pop
ss
or
sbb
mov
mov
fwait
adc
cmp
(bad)
cmp
les
std
sbb
and
jae
inc
pop
pop
xor
call
mov
mov
dec
lods
mov
data16
(bad)
or
adc
pop
mov
loopne
pop
test
loopne
push
mov
in
pop
lea
bound
inc
add
into
xor
xchg
fcom
mov
ret
mov
and
adc
xlat
pop
adc
lods
je
mov
lock
and
sub
int
push
fmul
inc
scas
pop
pop
in
enter
jb
lahf
xchg
xlat
call
inc
in
popa
add
pusha
dec
ins
int3
push
dec
xchg
and
add
jbe
cmp
add
icebp
xchg
and
in
test
repz
lock
adc
adc
movs
daa
mov
mov
cdq
xchg
sbb
icebp
sti
outs
push
mov
repz
pop
or
(bad)
cli
jl
mov
xchg
and
imul
repnz
icebp
movs
sub
mov
jne
push
or
gs
aas
or
stos
jmp
fild
add
push
cmps
mov
mov
rol
cmp
adc
mov
xlat
xor
sbb
xor
loop
pusha
fcom
shl
jl
pop
(bad)
es
push
sub
je
dec
(bad)
les
bound
test
fisub
mov
ret
mov
ins
lods
sbb
jecxz
dec
xor
or
cmp
out
cld
jle
in
out
adc
cld
ds
icebp
dec
fld
fwait
(bad)
xchg
inc
jle
outs
or
sbb
lahf
cdq
xchg
imul
add
pop
inc
and
iret
or
pusha
ret
push
xor
aas
sub
fwait
test
add
pop
fnstenv
(bad)
pop
sbb
jo
jo
cs
xchg
cmp
push
push
jp
sbb
xchg
xor
mov
adc
sbb
stos
xchg
in
ret
lods
es
or
iret
cmp
and
pop
dec
xor
int3
pop
repnz
push
lea
lahf
in
push
jecxz
repz
mov
stos
pop
mov
dec
push
fwait
pop
fs
test
cwde
xchg
push
mov
mov
pop
pop
cmp
nop
pop
lods
xlat
add
fstp
ds
mov
ret
cmp
sbb
inc
inc
xchg
in
adc
enter
jg
cld
xor
ret
fnstcw
adc
int3
mov
std
bound
sbb
pop
cld
repnz
xchg
(bad)
xchg
inc
xchg
fucom
adc
inc
xchg
jge
xchg
mov
sbb
xchg
cmp
rcr
jmp
jmp
push
shl
out
les
fiadd
cmp
movs
and
aas
add
or
adc
xchg
push
retf
or
test
mov
retf
pop
test
lds
xchg
xor
movs
lods
ds
out
push
rcr
xchg
popa
adc
test
mov
xchg
in
mov
and
in
in
dec
sub
xor
dec
cmp
leave
mov
xor
fmul
mov
sub
mov
sbb
xor
scas
or
in
pop
xor
mov
sub
fnstenv
cmp
cmp
mov
pop
test
aas
and
jnp
xchg
call
xchg
xchg
ror
neg
add
cli
mov
add
retf
push
inc
and
(bad)
mov
xchg
jl
rcl
retf
sbb
(bad)
dec
ror
or
jl
dec
add
sbb
mov
adc
xor
call
cmps
mov
push
cs
mov
mov
dec
sub
mov
out
jne
cmc
not
jl
dec
mov
inc
push
xor
xor
and
jge
xchg
mov
fdivr
ins
add
pop
pop
imul
push
les
stos
dec
scas
inc
loope
push
dec
inc
lock
add
jmp
add
mov
outs
js
(bad)
je
cmps
and
and
mov
lds
sbb
out
sbb
push
mov
dec
xchg
in
ss
in
call
out
push
retf
bound
ret
jo
pushf
repz
shl
mov
mov
lahf
xchg
jns
cli
test
ins
jle
adc
mov
loop
ret
aam
add
push
cmp
xchg
sar
arpl
mov
lahf
pop
loopne
jg
cmp
cld
sub
jl
repz
inc
jnp
mov
lods
mov
test
jns
das
add
fs
stos
adc
out
arpl
retf
clc
mov
iret
out
cmp
mov
adc
jecxz
sti
loopne
jo
outs
add
(bad)
enter
aam
pop
mov
xchg
push
push
pop
lock
or
or
fidivr
js
int3
sbb
pop
xor
mov
mov
push
mov
dec
jbe
adc
ret
jbe
add
xor
arpl
jmp
fidiv
mov
sbb
shl
lahf
add
jmp
cwde
sahf
fwait
pop
movs
test
adc
mov
(bad)
dec
clc
ins
push
sub
xchg
inc
add
je
ins
mov
test
mov
hlt
fnstsw
adc
scas
int3
sub
(bad)
cmp
sbb
push
ds
pop
lea
sti
sbb
les
add
xor
mov
int3
call
sti
xor
or
ror
dec
add
inc
inc
adc
setge
mov
add
int3
sahf
scas
imul
cwde
cmp
cmps
jno
lds
lods
push
push
dec
push
xchg
(bad)
cld
or
and
loope
stos
in
inc
sbb
in
stc
sbb
rcr
ins
xchg
or
js
or
inc
xor
or
ss
daa
ror
mov
lea
retf
pop
or
xchg
inc
aad
sbb
imul
inc
or
int
jo
mov
nop
(bad)
pop
je
not
je
mov
pop
sbb
jno
std
sub
sbb
in
jo
add
jecxz
inc
inc
(bad)
cdq
jns
push
add
xlat
icebp
aam
imul
mov
mov
repz
xor
push
mov
adc
nop
jae
ds
es
pop
rcl
or
loope
xchg
out
fnstcw
scas
and
or
je
xchg
xchg
bound
push
cmp
mov
dec
int3
push
sub
fnstsw
jle
(bad)
sub
push
adc
xor
push
std
arpl
jl
mov
dec
xor
mov
into
es
jecxz
jae
gs
pop
lds
xchg
lahf
xchg
add
inc
sbb
outs
xor
sbb
(bad)
jnp
movs
out
add
aaa
pop
mov
aam
sbb
outs
fsubp
adc
test
gs
enter
pop
sbb
inc
mov
jl
sti
inc
scas
mov
cmps
jne
inc
mov
sub
or
or
jmp
pop
xor
enter
lods
clc
xor
cmc
ret
imul
test
mov
stos
add
out
fidiv
inc
sbb
dec
mov
std
and
inc
or
dec
xchg
pop
xchg
rcl
pop
retf
xchg
mov
or
cdq
ds
imul
aam
inc
jl
mov
push
lock
adc
(bad)
stos
scas
push
fisttp
sbb
jecxz
pop
das
sbb
pop
aad
mov
inc
popf
push
rcr
outs
mov
das
inc
jb
aas
movs
inc
add
pop
mov
push
xchg
cmc
mov
pop
mov
nop
inc
pop
xor
rol
mov
dec
ror
shl
in
add
xchg
repz
or
test
push
xchg
scas
js
or
fs
pushf
mov
into
lahf
popa
jae
inc
add
xchg
shl
lahf
cmp
(bad)
fldpi
pop
jl
jge
or
nop
xchg
addr16
loop
aad
movs
mov
mov
out
cmp
out
adc
sbb
into
jg
xchg
cmp
in
pop
jge
mov
ficomp
xchg
pop
outs
mov
mov
mov
gs
cwde
push
sub
nop
pusha
push
das
xor
(bad)
lock
fmul
(bad)
aas
jp
cld
dec
pop
cmc
fnstsw
ins
arpl
sbb
mov
aas
or
call
add
ja
jb
retf
je
or
(bad)
rcl
adc
mov
ret
mov
div
and
xor
cmp
dec
popa
imul
and
(bad)
sbb
pop
xchg
cmp
out
jge
movs
add
cmps
push
xlat
push
iret
outs
xor
adc
mov
sbb
xchg
or
cmp
mov
push
jecxz
int
or
stc
xchg
xchg
scas
mov
loope
dec
cmc
mov
vmread
adc
gs
cmp
iret
sbb
arpl
lock
mov
loop
fsubr
sub
or
mov
jnp
test
repz
inc
(bad)
(bad)
push
jns
outs
imul
(bad)
xchg
adc
xchg
bound
mov
jnp
and
cmp
arpl
push
shl
sti
sub
adc
daa
push
adc
sbb
imul
ds
mov
sub
lahf
cmp
jns
(bad)
sbb
cmp
and
mov
rcl
retf
inc
repnz
xchg
es
jecxz
outs
outs
inc
mov
ret
lods
xchg
add
arpl
arpl
stos
mov
into
xchg
lods
sub
cmps
lods
js
call
xor
retf
mov
adc
test
fstp
dec
stos
jmp
cwde
mov
mov
fidiv
cmp
cli
addr16
jo
and
cdq
push
neg
fsub
pop
sbb
push
mov
inc
mov
mov
ins
lds
cmp
aaa
or
jecxz
gs
push
jbe
add
into
repnz
cmp
retf
jmp
and
cmp
mov
jmp
adc
mov
fcomp
add
es
mov
(bad)
jno
jno
xchg
das
mov
lds
call
mov
inc
in
fild
iret
fist
push
outs
push
test
mov
sbb
movs
je
(bad)
jle
push
jp
inc
jge
clc
fistp
(bad)
adc
nop
adc
adc
daa
fdivr
xchg
cmp
sbb
xchg
loopne
arpl
inc
fcomp
jb
into
inc
mov
adc
cwde
push
cld
mov
mov
outs
mov
xchg
xchg
(bad)
imul
jp
jne
test
pop
dec
jbe
ins
lods
xchg
sbb
adc
cld
and
jnp
ins
push
sbb
daa
pusha
mov
shl
inc
shr
or
test
add
sbb
leave
pop
mov
pusha
in
xlat
retf
pop
jnp
mov
cmc
xchg
pushf
cmp
loop
jl
mov
jg
mov
(bad)
cdq
add
mov
add
hlt
loop
aad
inc
mov
in
or
lahf
mov
hlt
cdq
mov
adc
mov
mov
add
add
dec
inc
adc
repnz
pop
mov
mov
jge
add
push
dec
mov
test
xor
add
or
or
stos
ret
push
sbb
sub
mov
and
das
inc
xchg
jecxz
test
xchg
cmps
pop
je
lock
xchg
fcmovb
dec
adc
lods
sub
dec
push
mov
test
cmps
lea
data16
mov
jne
dec
sub
loope
aas
call
das
and
or
mov
inc
cmp
add
xchg
aam
cmp
(bad)
or
ins
inc
sub
cmps
(bad)
arpl
outs
mov
add
sbb
adc
lods
and
hlt
hlt
jle
push
inc
data16
mov
enter
and
fidivr
sub
mov
fisttp
ret
inc
(bad)
dec
push
and
movs
mov
mov
not
dec
jo
dec
jg
pop
test
and
pop
cmps
jns
outs
add
mov
mov
popf
(bad)
out
mov
and
push
cmp
pushf
fdiv
xchg
dec
mov
mov
cdq
loope
or
mov
mov
cmps
movs
(bad)
out
jnp
outs
nop
lods
push
xchg
xor
bound
push
inc
sbb
dec
clc
std
(bad)
sbb
test
adc
rcr
das
jne
ror
dec
and
push
sub
adc
sub
ficom
imul
fs
adc
mov
nop
ja
adc
dec
dec
into
fild
sub
mov
sub
xor
pop
mov
push
xor
xchg
add
jne
xor
inc
and
mov
dec
cmp
aaa
lahf
and
imul
or
cmp
shl
pop
adc
lds
mov
push
or
stos
ja
pusha
push
add
jle
adc
pushf
add
fsubr
pop
push
and
add
mov
and
jb
fcom
cwde
or
pop
shl
push
cmp
push
cdq
inc
xlat
mov
ins
in
div
add
cmps
cmp
popf
pop
pop
out
fsubr
or
dec
int
cwde
not
dec
jle
push
loope
xchg
(bad)
mov
pushf
jecxz
shl
popa
ret
stc
jne
and
sub
pop
sbb
cmp
bound
push
sahf
enter
fcmovu
(bad)
pop
mov
dec
fcmove
sar
sbb
jne
sahf
ja
std
outs
repnz
add
cld
popa
neg
sbb
mov
xor
sbb
mov
inc
pop
aaa
ins
sub
bound
ret
(bad)
inc
dec
mov
or
pop
and
leave
enter
xchg
xchg
push
pop
or
enter
int3
mov
cld
mov
add
inc
out
scas
jge
mov
lods
xchg
pop
out
pop
mov
jbe
ss
push
clc
bound
mov
or
jb
imul
add
sub
pop
imul
jb
xor
outs
pop
or
mov
mov
mov
ins
shl
xchg
in
jmp
daa
xchg
(bad)
fwait
repnz
aad
mov
adc
push
lds
rcr
test
fwait
lahf
js
cmps
xor
jp
inc
mov
xchg
adc
stc
std
xor
xchg
xor
arpl
add
push
int
mov
pop
or
adc
inc
test
movs
call
outs
(bad)
rcr
add
pop
clc
sbb
cmp
inc
fs
in
(bad)
bound
and
lea
xor
(bad)
shr
xor
adc
repz
imul
movs
inc
ins
scas
xor
adc
mov
lods
call
mov
xlat
add
push
jmp
push
cli
jmp
cmp
sub
sbb
test
loope
xchg
not
test
ror
call
iret
jmp
cmc
xor
inc
lods
mov
dec
les
mov
(bad)
xor
(bad)
retf
in
xor
mov
add
(bad)
retf
pop
adc
mov
mov
imul
lds
icebp
and
inc
push
icebp
jo
(bad)
or
div
mov
(bad)
cwde
push
adc
icebp
push
and
push
xchg
into
movq
enter
sub
or
out
iret
adc
jmp
fisttp
push
retf
cmp
gs
aaa
mov
xchg
push
hlt
push
movs
push
jmp
stc
retf
mov
lods
mov
push
je
pop
int3
bound
dec
shl
cmps
xor
dec
lds
xor
enter
add
adc
out
jge
lods
(bad)
sbb
hlt
mov
mov
rep
aaa
inc
xchg
in
mov
push
cmp
cdq
stc
jecxz
(bad)
add
jnp
rol
mov
fst
scas
(bad)
jbe
ins
nop
les
push
cmp
leave
out
xor
bnd
lea
or
xor
(bad)
iret
pop
lods
mov
inc
jno
sbb
cwde
add
xchg
cdq
arpl
xchg
sub
imul
jmp
and
jmp
stc
xlat
and
lods
sub
jbe
popa
mov
dec
out
stos
sub
ret
in
test
outs
or
(bad)
mov
addr16
dec
sbb
loop
das
pop
cmps
mov
adc
aam
shl
sub
cmps
push
loop
inc
rcr
lahf
fs
pop
ins
sub
cmp
xor
out
xchg
mov
jp
sub
pop
push
jb
aas
rcl
and
add
shr
jo
test
push
in
cmp
call
lahf
jne
inc
mov
mov
mov
cmps
pop
jb
sub
sbb
aas
pop
cmp
dec
or
jbe
cmp
sbb
loope
dec
jg
fs
or
pushf
adc
fnsave
sbb
stos
pop
jge
in
cmp
mov
add
jb
mov
mov
dec
fisub
jmp
ins
and
sti
mov
and
out
jg
sub
xchg
rcl
push
jb
mov
popa
(bad)
js
in
pop
(bad)
jnp
adc
sbb
mov
daa
or
adc
push
push
into
or
mov
aam
movs
mov
and
add
adc
mov
je
xchg
fimul
call
daa
(bad)
and
xor
inc
pop
or
dec
cmovbe
int3
ret
imul
pop
mov
inc
ins
inc
or
fwait
out
add
dec
aas
push
sub
stos
sub
sbb
mov
mov
push
mov
push
enter
ret
(bad)
push
arpl
sub
pop
je
dec
pop
shl
sbb
aas
sub
and
test
pop
lock
or
scas
cmps
pusha
dec
arpl
rcr
jnp
adc
stc
ret
icebp
pop
stos
push
lock
out
movs
fadd
mov
mov
ret
das
nop
jecxz
ins
adc
(bad)
scas
retf
add
xor
scas
shr
lock
sahf
xor
clc
shl
adc
gs
pop
(bad)
add
test
and
and
and
idiv
ror
mov
push
(bad)
rcr
sub
push
cmp
pusha
je
ins
pop
iret
shr
mov
dec
inc
iret
das
jnp
in
lods
daa
pop
aaa
js
or
or
cmp
cmc
shl
fwait
push
cwde
imul
lock
jecxz
and
lods
dec
jmp
cmp
imul
mov
fwait
add
mov
and
pop
cmp
dec
cmp
mov
aam
jp
cmp
imul
rcl
enter
push
add
mov
cmp
and
add
pop
sbb
lock
or
das
gs
add
jl
adc
add
sbb
es
ss
jnp
loope
dec
add
jl
aam
leave
(bad)
xor
and
pop
inc
push
or
adc
in
pop
test
xor
stos
out
jb
mov
add
sub
dec
fidiv
jecxz
or
sub
loop
aam
fnstsw
out
or
cmp
adc
sti
xchg
(bad)
fcmovnbe
ret
sbb
hlt
int3
and
fwait
jnp
xchg
mov
(bad)
mov
repnz
dec
out
push
pop
cmp
aad
cli
pop
inc
sbb
xchg
test
adc
das
mov
js
cdq
jge
pop
ins
or
jo
mov
and
mov
pushw
dec
outs
cwde
fsub
xchg
sub
cmps
add
cmp
jb
jb
mov
push
mov
and
and
add
and
ins
sub
and
xor
out
enter
hlt
sub
mov
pop
xchg
cs
cmps
sub
mov
ins
fist
pop
cmp
aam
rol
test
fisubr
sbb
dec
sub
loope
inc
mov
sti
jl
lds
pop
mov
xchg
lods
lods
clc
mov
outs
or
push
shl
xchg
mov
inc
lods
stos
xor
cmps
xchg
mul
out
adc
sub
jnp
icebp
cmp
jle
add
mov
sbb
adc
cdq
aam
rol
xchg
inc
lods
(bad)
mov
cmp
pop
cmps
pop
pop
push
cmp
push
ror
out
aaa
imul
and
xor
dec
mov
pop
inc
adc
imul
(bad)
in
and
mov
loopne
sar
add
mov
inc
and
(bad)
aam
push
imul
push
fld
jp
retf
inc
jo
cmp
rol
jg
mov
aaa
sub
loop
sbb
mov
and
shl
xchg
jnp
cmp
stos
(bad)
outs
jl
int
cli
push
or
mov
cmp
mov
(bad)
lock
mov
sub
rcl
mov
movs
mov
mov
movs
scas
cmp
mov
sbb
fist
loope
push
popa
adc
mov
inc
popa
out
adc
imul
fstp
pushf
mov
push
test
lds
popa
jns
jb
fwait
test
fcomp
add
and
pop
and
mov
push
pop
pop
ins
or
cmc
mov
and
cmp
repz
dec
jle
inc
xchg
mov
inc
mov
out
mov
(bad)
adc
mov
or
push
mov
es
pop
cmp
jbe
aam
bound
add
cmp
es
rcr
shl
pop
xor
dec
rcl
bound
xlat
pushf
(bad)
xchg
jl
es
jae
stc
test
mov
add
pop
push
xor
fwait
scas
dec
arpl
pop
stos
adc
or
gs
inc
cmp
aas
scas
pop
jmp
aam
pop
push
sbb
(bad)
jns
mov
push
and
dec
ds
push
cmp
push
or
fwait
mov
push
mov
clc
inc
mov
cdq
daa
shr
jle
fs
addr16
lods
(bad)
push
jne
int3
out
std
mov
cmp
ficomp
movs
in
test
(bad)
out
inc
xor
xor
ret
or
dec
mov
call
mov
stos
fwait
add
cdq
test
push
fcom
(bad)
leave
iret
push
int
push
pop
mov
dec
xor
ret
add
stos
enter
dec
inc
xchg
(bad)
mov
dec
mov
in
jg
xchg
gs
repnz
loope
dec
aam
push
fidivr
jo
adc
not
push
lods
mov
push
cmp
in
mov
add
cld
jmp
mov
repz
call
fld
lods
inc
sbb
iret
cmp
add
leave
das
int3
ret
jmp
jnp
aad
repz
jp
add
imul
(bad)
and
xor
jbe
mov
or
inc
std
dec
loopne
retf
mov
mov
int3
imul
inc
cmp
fucomp
mov
add
jb
popf
les
in
sbb
jbe
mov
pxor
mov
(bad)
pop
jmp
lods
inc
in
add
sub
push
das
xor
(bad)
out
in
stc
in
pop
push
xor
pop
(bad)
xor
inc
cs
leave
gs
mov
add
mov
xor
lods
add
std
ins
mov
test
and
cmp
inc
fadd
mov
retf
ret
jae
mov
cmp
pop
sub
sti
mov
inc
outs
mov
(bad)
repnz
cwde
inc
add
or
push
add
or
arpl
cmp
sub
popf
push
jl
adc
dec
das
mov
out
les
mov
mov
lds
out
rol
hlt
pop
xor
pop
(bad)
add
mov
loop
jmp
shl
sahf
ja
add
in
outs
mov
inc
jo
(bad)
nop
cmps
cmp
loopne
push
pop
movs
or
aad
scas
call
ret
out
inc
dec
inc
bound
cli
lods
push
in
adc
adc
push
fnstcw
loope
sbb
rcr
retf
jecxz
sbb
sahf
jmp
add
cld
cmp
inc
jge
jbe
dec
popf
loope
adc
sub
jg
or
enter
jnp
sbb
cli
sti
inc
out
out
inc
std
jmp
mov
sub
sub
cwde
loopne
mov
(bad)
shl
sahf
loopne
loop
lods
cmp
sti
jl
mov
enter
fsubr
dec
pushf
cld
dec
mov
idiv
ret
and
add
xchg
cmp
jnp
gs
push
movs
xor
shr
fstp
push
loope
push
pop
jo
adc
push
cs
jle
xchg
dec
(bad)
mov
push
dec
sbb
frstor
mov
fs
xchg
lds
fsubr
jmp
call
aam
mov
jmp
mov
mov
les
les
inc
dec
test
sub
adc
fs
(bad)
mov
retf
jl
nop
mov
ins
js
es
mov
push
jge
sub
jle
scas
push
repz
inc
or
mov
jecxz
add
pop
jle
lahf
sub
mov
shld
or
add
pop
repnz
mov
inc
aaa
sbb
div
push
bound
bound
cmp
mov
or
enter
clc
sub
sti
leave
mov
cmc
mov
or
cmp
push
call
pop
js
mov
adc
jno
ror
jp
mov
fstp
and
jmp
test
sub
ret
inc
pop
push
pop
test
mov
sub
sub
jmp
(bad)
outs
xor
mov
pop
mov
imul
xchg
call
sub
mov
adc
ds
mov
cs
cmp
call
and
out
sub
movs
mov
lahf
xchg
cs
and
repz
iret
cmp
pop
cmp
and
pop
pusha
leave
pop
mov
mov
xlat
push
mov
lahf
xor
in
ret
outs
cmp
adc
jae
inc
dec
inc
call
int3
imul
and
mov
lods
push
jae
cmp
mov
inc
out
dec
jge
(bad)
test
jae
sbb
jne
into
dec
pop
popf
dec
js
fcom
xor
jmp
fsincos
ror
push
pop
test
xor
sbb
js
xor
xor
or
lock
cdq
mov
jns
idiv
(bad)
sbb
and
in
aas
mov
sbb
lds
push
sub
push
or
call
add
fist
jbe
xchg
xchg
mov
mov
xor
jb
pop
mov
inc
mov
fs
nop
sahf
daa
retf
or
or
fadd
cmp
sbb
ss
xchg
int3
or
mov
xor
aad
or
call
sub
repz
mov
add
sbb
adc
push
push
xor
stc
mov
or
sub
lods
and
out
movs
jg
inc
jmp
inc
adc
test
ret
nop
ja
cmovle
pushf
loopne
xchg
enter
sbb
mov
rol
lds
and
and
add
pop
imul
adc
mov
xchg
xor
push
hlt
add
lds
shr
inc
aas
les
mov
loope
fsubp
xchg
mov
fild
loopne
(bad)
push
or
jmp
dec
adc
mov
scas
cmp
lahf
and
pop
and
jnp
xchg
jle
lahf
mov
(bad)
loopne
mov
adc
ror
xor
mov
xlat
jle
sub
xchg
sub
push
cmps
nop
xchg
push
aaa
fld
inc
push
es
(bad)
ins
out
(bad)
mov
outs
aad
and
cli
cld
adc
xchg
mov
jo
rol
mov
mov
test
mov
or
add
or
aam
fcomp
jne
push
dec
cmp
or
call
xchg
aad
jnp
inc
xor
adc
test
call
idiv
jg
cmps
xor
or
ja
or
pop
sar
mov
xchg
jae
push
or
mov
cmp
shr
mov
das
pop
lea
push
inc
cmc
jns
stc
sbb
ret
jle
mov
ja
xchg
fcom
imul
xchg
add
je
mov
push
inc
jns
in
xor
mov
jmp
ret
(bad)
mov
and
cmc
add
adc
mov
popa
addr16
push
push
pop
add
add
sub
dec
add
imul
xor
icebp
fisttp
mov
ret
out
mov
adc
in
pop
cld
xchg
cmps
popf
add
add
das
push
jbe
adc
movs
bswap
jg
pop
pop
xor
rol
ss
mov
push
clc
popf
mov
cli
or
dec
mov
call
ds
sub
push
or
dec
std
(bad)
test
cmc
loopne
jb
bnd
outs
movs
fisub
pushf
sahf
pop
inc
pop
xor
sub
out
repz
shl
xor
cmc
cmp
scas
sbb
add
xchg
jb
lods
mov
retf
add
mov
cdq
push
leave
lock
mov
shr
add
test
in
push
(bad)
jo
mov
push
aam
push
dec
cwde
test
push
dec
mov
std
pusha
sub
xlat
push
jns
mov
shr
adc
fstp
jbe
loop
pop
sbb
and
and
movs
dec
ret
inc
xchg
and
jmp
cdq
pusha
push
sbb
leave
rcl
xlat
movs
shl
sub
test
(bad)
or
add
(bad)
fbld
ja
push
pop
push
out
out
mov
sbb
pop
jo
mov
icebp
add
cdq
lds
xor
push
(bad)
adc
sbb
scas
stos
popf
cmp
pop
aas
add
pop
js
pop
data16
in
cmp
cmp
jmp
xchg
inc
cwde
arpl
ret
mov
add
pop
pushf
add
call
shl
ret
pop
mov
mov
xlat
push
push
push
lods
dec
(bad)
xor
xchg
pop
sbb
pop
pop
test
bound
add
cmc
mov
ins
jp
(bad)
lods
xchg
adc
inc
push
or
or
adc
xor
inc
fcomp
adc
jbe
or
hlt
data16
fucomp
cmc
and
jae
js
sbb
add
frstor
jmp
jbe
in
stos
add
and
sar
xor
sub
and
fisttp
cmp
aas
in
sti
push
dec
cs
pushf
xchg
inc
movs
mov
jne
jnp
xor
dec
add
mov
xchg
push
or
sbb
xchg
jnp
test
scas
(bad)
aas
mov
sub
mov
mov
push
call
xor
jnp
push
cld
push
test
mov
mov
inc
and
fwait
je
stc
xchg
jmp
(bad)
and
iret
scas
out
push
xchg
jmp
std
mov
mov
in
into
ret
and
xchg
add
jmp
pop
cmp
std
xchg
rcl
cmp
jno
dec
aas
imul
pop
dec
(bad)
popa
rcl
fstp
fcom
sahf
add
xor
cmp
test
lods
call
xor
scas
(bad)
fidiv
push
cmc
mov
mov
fcomp
inc
icebp
xor
inc
repnz
dec
inc
rol
xlat
add
cmp
xlat
bound
xor
iret
lds
and
int3
cdq
cdq
in
repz
push
dec
repnz
jecxz
repnz
cli
push
outs
out
neg
imul
das
popa
aam
pop
sbb
push
out
out
xor
in
retf
sub
push
jo
add
out
mov
daa
jge
loop
bound
movs
mov
sub
popf
jle
push
mov
imul
aam
pop
pusha
xchg
jle
xchg
inc
jl
jge
retf
fs
sub
push
cmp
mov
cmp
xchg
aas
pop
xor
xchg
cmp
pusha
cli
js
sahf
stc
add
add
push
shr
jbe
das
pop
pop
xor
fstp
shl
or
loop
pop
adc
ja
sub
loop
loope
arpl
push
hlt
push
fwait
inc
mov
aas
push
inc
mov
cmp
movs
adc
push
lahf
aaa
nop
dec
push
pusha
dec
pop
paddq
push
das
jno
fs
adc
clc
inc
xor
sub
test
rsm
and
fild
test
icebp
dec
lock
jne
inc
aam
add
mov
jmp
mov
bound
sbb
sub
outs
fcmovbe
repz
jmp
cld
pop
clc
and
test
xor
cmp
call
and
mov
sar
sbb
cli
sub
retf
push
jbe
(bad)
fwait
aaa
sahf
jp
(bad)
push
xor
pop
test
call
xchg
dec
ins
jo
add
inc
sub
out
pop
mov
xchg
imul
jg
dec
push
inc
retf
test
popf
jo
(bad)
mov
xchg
fild
jmp
mov
int3
mov
mov
call
adc
aam
cmp
popf
adc
js
or
lea
retf
pop
mov
pop
xor
cmc
cs
pop
jl
mov
(bad)
fistp
lods
or
movs
sub
outs
mov
adc
sbb
lods
mov
pop
or
jne
je
inc
stos
pop
std
icebp
sub
sub
div
daa
push
imul
cs
fisttp
test
mov
and
xlat
mov
loope
jo
jne
lds
jne
adc
mov
sub
iret
mov
pop
mov
fcom
push
test
push
xlat
lahf
imul
fdivr
pusha
and
and
sub
add
pop
and
pop
repz
sbb
repnz
ds
in
(bad)
mov
and
xor
pop
jae
sar
cwde
pop
xchg
fbstp
xchg
ds
daa
inc
shr
inc
pop
dec
fwait
push
lock
ret
sub
pushf
mov
dec
fidivr
push
out
cwde
out
imul
js
and
push
call
dec
ja
cmp
enter
inc
scas
mov
mov
push
mov
jno
hlt
sbb
addr16
jbe
std
ss
sub
jae
into
pop
jo
daa
push
xchg
dec
js
add
enter
jmp
nop
in
cli
or
sub
sbb
fimul
stc
jg
je
mov
jecxz
dec
fsub
dec
cmp
out
mov
add
push
iret
shr
pop
cmp
(bad)
out
mov
cmp
inc
mov
pop
outs
movs
icebp
sti
cld
retf
test
pop
iret
mov
sub
mov
or
(bad)
mov
aam
imul
sahf
jl
pop
(bad)
jae
fnsave
sbb
dec
mov
mov
ror
inc
fnsave
aas
dec
cli
mov
or
retf
loop
in
fstp
fiadd
jle
ret
sbb
xchg
test
loope
cmc
jb
ficomp
xlat
lock
test
dec
and
xor
fwait
jo
push
loope
mov
int3
sbb
jecxz
loop
test
ss
jo
sub
(bad)
ins
popf
dec
scas
ds
lods
vmulsd
in
int
cs
push
mov
(bad)
xor
adc
push
pop
push
push
mov
xor
cmp
test
and
in
mov
cmp
dec
jmp
inc
outs
xchg
mov
xchg
arpl
ins
mov
lds
cmp
adc
mov
mov
repnz
add
adc
adc
outs
and
mov
aad
pop
inc
(bad)
call
(bad)
call
xor
sbb
jge
test
(bad)
(bad)
adc
fstp
sbb
mov
bound
(bad)
int
cs
pop
pop
lock
(bad)
xchg
loop
push
rol
push
xor
push
icebp
fxch
pop
fldenv
push
js
jne
loope
jmp
std
sub
hlt
xor
outs
dec
sbb
imul
hlt
inc
jo
ss
xchg
lock
xor
out
cmps
jae
scas
fs
call
ret
sahf
test
pusha
xlat
(bad)
mov
add
in
icebp
cmps
add
or
scas
iret
adc
inc
unpckhps
test
lods
xchg
fst
pop
push
fwait
cmc
mov
pop
and
pusha
mov
inc
dec
inc
and
dec
clc
test
push
stos
jae
jne
outs
jecxz
out
adc
inc
mov
scas
fmulp
(bad)
push
push
or
mov
loope
imul
add
leave
pop
mov
push
cmp
inc
add
sar
inc
shr
fisubr
sub
dec
mov
push
dec
xchg
mov
lahf
or
sbb
int
pop
jno
cmc
ror
add
push
xor
push
dec
cwde
inc
fadd
pop
mov
xchg
jge
hlt
push
adc
push
sub
icebp
(bad)
push
iret
xor
test
repnz
inc
ror
std
iret
out
push
add
inc
inc
jo
or
mov
rcl
in
xchg
mov
mov
mov
cld
jb
mov
(bad)
gs
jg
jae
cdq
mov
jecxz
mov
and
cs
call
mov
fnstenv
cwde
addr16
dec
push
push
cmp
adc
fnstsw
cmp
adc
call
xchg
ror
retf
les
retf
fcomp
inc
test
or
adc
in
ret
pop
cld
mov
lahf
movs
ret
retf
(bad)
jmp
cmp
fdiv
inc
cmp
push
aad
call
cmp
cmp
pop
data16
mov
mov
jmp
sub
pushf
adc
sbb
movq
fmulp
nop
icebp
mov
test
push
jl
jae
(bad)
sbb
sub
faddp
inc
push
(bad)
mov
mov
ss
mov
out
adc
mov
repz
mov
test
aad
and
sbb
jle
dec
je
mov
movs
mov
push
cmp
pop
and
pushf
test
in
(bad)
daa
pop
mov
sub
cbw
les
les
jge
push
cbw
inc
adc
leave
hlt
jp
push
pop
rcr
fwait
add
cmc
pop
scas
push
add
add
cld
mov
out
push
pop
push
in
mov
lods
xchg
ins
es
mov
mov
add
daa
xlat
fld
xor
dec
je
lds
outs
jle
outs
out
add
addr16
loopne
popa
mov
push
dec
dec
push
or
cmp
fiadd
inc
(bad)
sbb
int
jge
aaa
dec
pop
imul
pop
pop
xchg
shr
cmps
pop
xchg
adc
inc
lds
(bad)
test
call
and
mov
enter
sbb
push
retf
jle
xor
fnstenv
dec
fwait
test
std
cmps
(bad)
jno
pop
adc
sub
fnstcw
aad
stc
outs
hlt
sub
test
ins
inc
std
inc
add
stos
mov
inc
jno
sub
xchg
mov
cld
xor
cmp
or
xchg
in
or
sar
in
lods
xchg
mul
mov
fsubr
popa
add
cmp
jb
retf
xchg
and
cmc
in
xchg
dec
fld
xor
mov
fs
sub
movs
pop
jmp
rep
jl
jle
jmp
mov
in
xchg
gs
out
pop
xchg
pop
add
cmp
add
push
iret
jg
or
sahf
int
cmps
retf
inc
movs
test
xor
sbb
inc
sahf
sub
jno
push
outs
jmp
scas
pop
mov
fimul
cmps
mov
jmp
mov
jo
shr
das
jge
add
dec
data16
mov
sbb
xchg
sub
jmp
jmp
popf
or
and
in
push
ins
fdivr
inc
or
stc
movs
mov
loopne
sub
iret
shl
into
(bad)
push
cmp
and
in
in
jns
(bad)
bswap
jl
pop
push
mov
pop
bound
ins
pop
sti
and
pusha
pop
jns
ja
xchg
xor
pop
mov
dec
dec
jmp
mov
pop
mov
sbb
and
out
push
inc
jmp
push
xor
leave
push
bound
lock
pop
mov
dec
push
mov
test
pop
leave
adc
sub
out
jns
sub
dec
push
pop
out
mov
pop
and
sbb
mov
repz
pop
cmp
nop
aas
pusha
pushf
mov
add
pop
mov
fisttp
or
inc
leave
movs
(bad)
or
pop
mov
neg
fidiv
and
mov
push
scas
push
cmp
outs
fs
hlt
inc
shl
sbb
adc
inc
paddd
in
arpl
push
pop
pushf
les
dec
mov
and
(bad)
sub
jmp
xor
aas
mov
stos
cmc
movs
loopne
ja
dec
inc
fs
add
(bad)
popa
adc
xor
pop
scas
je
fs
(bad)
outs
or
jno
jmp
mov
push
js
and
cmp
clc
sub
dec
(bad)
lahf
out
mov
dec
ror
imul
push
(bad)
hlt
test
mov
iret
cmc
and
add
mov
jns
xor
ret
sub
mov
stc
xor
or
stos
xor
je
pop
jle
and
dec
jo
adc
ins
cld
cmps
push
jle
adc
ficom
ret
cmp
jbe
ins
xor
mov
mov
inc
pop
nop
out
dec
xor
pushf
pcmpgtw
mov
movs
xchg
mov
mov
xchg
retf
pcmpgtd
cmp
icebp
mov
in
dec
fsub
pop
nop
or
xchg
cmc
adc
sub
xor
call
push
fimul
or
int3
jg
movs
jbe
jg
sbb
xchg
pop
dec
rol
cwde
cmps
pop
leave
pushf
mov
and
rcr
or
ror
dec
test
movs
(bad)
and
pop
adc
stos
(bad)
xchg
nop
mov
scas
pop
push
fsub
jnp
sub
jmp
mov
lods
retf
inc
lods
push
(bad)
cpuid
ror
imul
xchg
dec
push
mov
iret
inc
mov
add
lock
test
pop
pop
pop
jne
(bad)
inc
and
cmp
xor
loopne
add
cmc
pop
xor
mov
pop
or
jmp
xchg
js
sub
xchg
dec
in
fistp
push
dec
adc
jecxz
and
daa
xor
jb
cwd
fadd
popf
sbb
fs
mov
call
fucomp
daa
ja
sub
aas
cmp
dec
loopne
dec
(bad)
(bad)
daa
or
inc
or
xor
ins
dec
sar
jmp
pushf
iret
ja
ins
xlat
xor
xor
mov
loopne
sti
aaa
ja
shl
imul
daa
je
and
aaa
je
push
(bad)
test
sub
jae
dec
pop
jae
add
add
mov
scas
add
xchg
fs
sub
pushf
pusha
xchg
xchg
or
push
xor
cmps
sbb
(bad)
fsubr
rol
or
cld
outs
das
xor
jg
gs
pop
inc
les
mov
pop
cmp
inc
inc
xor
fucom
cwde
call
or
lods
retf
fst
ret
xchg
(bad)
xor
mov
jle
jns
out
test
pushf
and
into
sub
inc
cmp
hlt
xor
js
enter
(bad)
in
addr16
jg
pop
lahf
sub
xor
out
add
bound
aaa
and
pop
jne
ins
call
ret
arpl
xor
fild
sub
xor
jns
clc
clc
push
rcl
std
daa
dec
sbb
lods
popa
call
push
in
in
out
inc
loopne
mov
daa
sbb
imul
loope
push
and
ret
scas
(bad)
ficomp
add
and
xor
or
jmp
xchg
clc
aam
jl
test
mov
pusha
(bad)
nop
sbb
(bad)
jmp
sub
mov
or
shl
jecxz
hlt
mov
inc
adc
mov
inc
pop
scas
inc
(bad)
dec
mov
imul
jmp
and
or
aas
or
mov
push
inc
inc
iret
dec
jmp
jns
leave
mov
sbb
inc
add
mov
add
cmp
pop
sub
pop
pop
hlt
lods
jmp
fst
pop
aam
xor
(bad)
dec
xor
aad
cli
mov
inc
scas
cli
sub
dec
and
movs
dec
push
imul
inc
je
loope
mov
cmp
vmwrite
mov
push
jno
jb
pop
adc
xor
outs
sub
adc
jle
movs
lods
inc
cmp
int
loopne
in
int
adc
inc
cmp
jns
pop
out
(bad)
clc
cld
in
mov
push
fistp
xor
aad
outs
xor
inc
fcom
mov
sbb
sbb
pop
test
les
test
mov
cmps
sahf
ins
push
pop
lods
sub
lock
rcr
sbb
idiv
in
push
jb
xchg
push
and
sahf
pop
or
fld
addr16
jns
adc
jns
mov
cli
outs
dec
xchg
test
inc
imul
imul
repz
adc
pop
mov
retf
xor
sub
or
or
jo
pop
pop
xchg
xor
into
jno
pusha
or
mov
sub
int3
mov
lahf
mov
adc
jg
dec
xor
push
pop
xchg
test
sub
mov
lock
icebp
add
pop
iret
inc
sti
mov
in
mov
lods
mov
leave
push
xor
shl
sbb
mov
pop
mov
sti
imul
sub
xor
mov
out
movs
(bad)
shl
push
inc
call
data16
les
or
add
pop
fist
xchg
push
sbb
outs
cld
inc
mov
es
movs
add
push
dec
cmps
mov
xlat
jno
cwde
and
dec
arpl
or
push
pop
js
add
imul
jp
jp
cmp
inc
scas
or
nop
and
jo
outs
ror
mov
shl
xchg
push
mov
push
popf
js
pop
call
aaa
inc
popa
out
mov
sub
aaa
jo
loopne
mov
popf
test
rcr
mov
inc
and
dec
jl
push
js
add
pop
mov
imul
ss
pop
ins
mov
imul
lahf
ret
pop
add
outs
in
mov
push
sbb
loopne
adc
pushf
inc
mov
(bad)
ds
pop
movs
dec
mov
mov
xor
mov
(bad)
xor
xlat
(bad)
xor
fadd
in
mov
movs
pusha
data16
sbb
pop
dec
mov
addr16
or
xchg
ins
aad
movs
pop
rol
sub
xor
(bad)
sub
mov
(bad)
(bad)
cmp
lods
xor
fnstsw
push
mov
lds
xchg
sbb
push
scas
iret
mov
fucom
inc
cmp
clc
mov
xor
inc
mov
cmp
mov
sbb
adc
add
add
aas
scas
push
sti
and
shl
mov
xchg
dec
dec
dec
inc
push
cmp
test
loope
dec
out
icebp
and
add
mov
fistp
fild
jo
inc
inc
pop
ins
pop
push
mov
pushf
fidivr
or
pusha
mov
js
dec
jae
adc
xor
shl
jmp
repnz
fidiv
(bad)
adc
shl
rcl
mov
and
aaa
cs
lds
mov
fiadd
call
sub
mov
push
jae
popa
sub
popa
fiadd
push
jle
push
pop
cmp
les
cmps
dec
or
inc
leave
dec
sub
cmp
outs
jo
mov
stos
mov
cmps
jnp
mov
inc
int3
inc
aaa
mov
and
xlat
out
jle
xor
jg
daa
sub
inc
movs
cld
test
xlat
jbe
dec
adc
cdq
inc
push
xor
data16
jmp
popf
pusha
sbb
enter
and
or
sbb
push
(bad)
(bad)
and
and
in
pop
pop
lock
clc
nop
leave
jecxz
aam
pop
mov
call
jne
xor
into
aas
mov
pop
mov
cmp
imul
jo
xlat
inc
xorps
in
push
mov
add
mov
mov
aaa
std
sar
jl
push
loope
arpl
sub
in
and
out
fld
dec
pop
std
sbb
jb
mov
xchg
mov
(bad)
je
mov
push
mov
inc
ins
dec
jmp
in
sub
adc
push
iret
fcom
sub
scas
loope
pop
fwait
mov
jno
fcom
retf
arpl
neg
xor
movs
rol
je
aas
(bad)
mov
mov
cmps
pop
pop
xchg
pop
std
and
and
adc
cld
inc
xchg
pop
ror
cmp
(bad)
in
push
f2xm1
add
jge
out
pop
mov
jecxz
outs
jno
mov
mov
call
pushf
pop
add
popa
aam
inc
cs
nop
fst
mov
push
add
push
sub
mov
jo
inc
and
outs
(bad)
jp
push
xchg
ss
mov
ret
ins
nop
pop
pop
mov
jecxz
aaa
jmp
jmp
icebp
sub
mov
inc
test
push
(bad)
xlat
sbb
add
pop
ficom
retf
cmp
cmp
int3
loope
hlt
out
adc
loope
pop
in
lock
out
adc
test
jnp
fucom
test
stos
mov
iret
xor
jle
sub
ret
fiadd
retf
pushf
movs
adc
inc
outs
mov
jbe
je
sbb
sar
lahf
sbb
mov
mov
repz
call
dec
dec
add
dec
push
sub
sub
mov
xchg
mov
idiv
mov
out
mov
and
dec
push
out
xchg
jmp
push
cli
xchg
shr
mov
and
inc
popf
repz
add
xchg
shl
push
mov
mov
add
jle
inc
arpl
outs
sub
inc
nop
pop
mov
aam
cld
jno
jns
arpl
dec
fcmove
outs
test
mov
lahf
aad
mov
imul
les
imul
xor
sub
push
jo
xor
imul
ins
mov
cmp
pushf
das
xchg
adc
ret
pop
out
jne
pop
mov
or
sahf
xor
rcl
mov
mov
xor
mov
daa
jnp
popf
rol
out
add
push
mov
mov
imul
lods
jp
xchg
dec
bound
fwait
add
xchg
fwait
bound
stc
out
xor
dec
test
retf
daa
cdq
cmc
mov
cmp
pop
dec
pop
inc
adc
add
ret
mov
xor
jns
out
js
clc
movs
gs
fst
dec
movs
jns
pop
pop
jg
inc
xchg
mov
fnsave
pop
movs
movs
add
(bad)
jmp
add
and
mov
lods
call
mov
adc
mov
(bad)
out
adc
add
xchg
push
loopne
bound
lock
mov
sub
mov
and
xchg
outs
xor
inc
mov
aas
call
mov
or
inc
and
call
ins
mov
loope
(bad)
add
lock
sub
sub
imul
inc
mov
sar
stc
(bad)
aam
cmps
add
outs
xor
cmp
retf
xchg
or
add
popf
mov
adc
cmp
mov
cmps
push
cmps
mov
pushw
(bad)
mov
imul
mov
js
sub
mov
and
stos
addr16
fbstp
pop
add
adc
dec
mov
stc
outs
mov
ins
dec
push
and
scas
xchg
pop
(bad)
push
inc
gs
mov
das
lods
out
call
pop
test
push
mov
cmp
fucom
or
cmp
and
adc
jge
or
mov
ins
adc
pop
push
jns
jecxz
xchg
inc
jmp
ins
sub
xchg
adc
pop
in
cli
pop
and
stc
and
mov
push
mov
xchg
jecxz
ss
cmp
jg
(bad)
jecxz
xchg
pop
sub
out
adc
movs
mov
(bad)
hlt
mov
outs
mov
jo
repz
imul
loopne
cmp
push
sbb
sar
jnp
dec
sbb
pop
popa
fsubr
ins
push
add
ins
push
rsqrtps
inc
sbb
shl
and
sbb
pop
xchg
ins
fimul
sub
daa
mov
mov
mov
fldenv
gs
retf
fcom
stos
(bad)
lahf
push
and
(bad)
(bad)
sti
xlat
sub
mov
sbb
mov
adc
pop
cmp
lods
mov
add
rcr
arpl
or
daa
sbb
in
leave
and
cmps
jae
stc
or
pop
mov
xchg
pop
jp
mov
fadd
ret
add
add
cmp
imul
scas
add
ud2
add
xchg
ret
test
cli
out
lods
mov
pop
sbb
arpl
sahf
mov
cwde
xchg
lods
add
xchg
lock
pop
mov
or
movs
pop
jo
imul
adc
cmps
xor
and
mov
jge
cmp
pushf
push
inc
xor
jecxz
scas
daa
sti
dec
ror
fld
ret
ror
xor
in
loop
and
mov
repnz
stos
fimul
aad
jle
add
(bad)
cmc
fist
sub
pop
inc
neg
sbb
fild
les
sbb
shr
xchg
stos
and
dec
gs
retf
adc
addr16
cmp
test
gs
push
into
sbb
in
loopne
xchg
sbb
call
mov
(bad)
fcmovne
jge
nop
stc
popa
daa
fwait
mov
dec
and
push
in
mov
add
and
test
ret
js
icebp
cli
and
dec
(bad)
dec
test
dec
xor
mov
leave
dec
cmp
fucomp
aam
je
pop
mov
sub
enter
stos
(bad)
pop
jmp
cmp
or
imul
mov
in
xlat
mov
imul
cvttps2pi
jmp
icebp
les
mov
jmp
repz
mov
test
jl
shl
mov
push
jae
xor
mov
lods
(bad)
out
rol
icebp
outs
idiv
das
(bad)
popa
or
sub
jmp
test
outs
pop
in
jmp
xchg
(bad)
aad
sar
or
jg
add
and
mov
inc
aam
repz
inc
lods
cs
xchg
inc
ins
push
lds
cdq
neg
and
js
stos
and
jo
pop
bound
movs
xchg
hlt
loopne
arpl
mov
push
cmp
das
adc
cmp
pop
cmp
das
xchg
or
into
adc
jecxz
sub
adc
fisttp
outs
sub
adc
or
aas
mov
lahf
mov
addr16
rol
mov
push
mov
imul
sub
rcr
xchg
add
ficom
movs
jmp
jno
sbb
loopne
push
dec
push
jge
or
int
dec
dec
xor
mov
stos
ins
mov
xchg
les
cwde
dec
icebp
inc
add
xor
lods
pop
cmp
int
(bad)
jne
push
pop
mov
jno
jns
sahf
mov
adc
fadd
lock
ja
int3
sbb
inc
inc
scas
add
out
popf
xor
les
cmc
or
mov
xchg
mov
test
fmul
fsubr
sbb
dec
repz
add
pop
jge
pop
adc
out
sbb
or
adc
and
stc
pop
xchg
pop
jg
or
push
mov
mov
xchg
popf
dec
dec
pop
mov
dec
push
mov
mov
mov
sbb
jl
fcom
mov
or
mov
je
or
mov
out
jp
adc
sbb
shl
inc
pop
cmp
in
lds
adc
inc
sbb
popf
push
pop
inc
leave
call
movs
mov
in
adc
xor
mov
sbb
sbb
sahf
push
inc
xor
pop
jo
lahf
stos
in
jmp
mov
push
sbb
cs
mov
adc
test
pop
xor
or
in
cmp
ror
cmp
jg
or
daa
mov
jmp
xor
and
lods
stc
into
stc
iret
hlt
mov
push
out
dec
sbb
dec
pop
into
shl
jg
inc
fwait
jmp
nop
aam
jb
or
movs
sub
cmps
or
cmps
sbb
hlt
jmp
inc
dec
sub
cmc
outs
dec
in
and
mov
mov
and
xor
movntq
jno
jmp
sbb
pop
rcl
xchg
scas
pushf
cmp
mov
ins
add
idiv
popf
neg
ja
scas
cmp
jne
fmul
arpl
and
add
cmps
arpl
(bad)
sar
int3
loopne
dec
stos
jecxz
test
scas
fisubr
mov
sbb
sbb
push
jnp
pop
add
sti
mov
adc
nop
sbb
shl
call
scas
jo
nop
dec
clc
(bad)
lock
mov
call
inc
daa
pop
movs
push
add
and
call
out
pop
pusha
and
jp
sbb
lods
imul
jnp
cdq
add
push
sub
rol
mov
test
aam
fsubr
mov
loope
cli
jb
ins
xchg
ror
cwde
inc
jae
imul
inc
xchg
fldlg2
popa
jmp
popf
cmp
lock
fidivr
rcl
cmc
retf
or
mov
popf
mov
cmp
xchg
adc
sbb
and
out
sbb
push
inc
push
je
or
out
xchg
mov
xchg
cmps
mov
call
cmc
div
xchg
mov
into
shl
bound
mov
or
mov
adc
cmp
loope
sub
mov
cli
outs
pop
daa
out
call
daa
dec
mov
xor
fs
cli
repnz
bound
and
stos
add
je
jle
inc
ja
add
out
adc
inc
inc
xchg
add
loope
(bad)
(bad)
xchg
rcl
(bad)
sbb
push
jns
push
push
ret
clc
pop
das
mov
in
fist
mov
fs
int
push
sub
and
movs
or
fbstp
fmul
lea
enter
dec
pop
stos
mov
cmp
jecxz
fdiv
pop
or
cmp
xchg
hlt
jle
jmp
jno
xchg
dec
sbb
lahf
sub
test
adc
nop
into
and
daa
popa
loopne
std
sub
shl
rcr
mov
dec
pop
inc
clc
mov
add
outs
pop
push
sub
sub
pop
stc
adc
into
inc
aas
cmc
jns
fdiv
(bad)
mov
xchg
fidivr
xlat
(bad)
push
add
popf
inc
lods
pushf
and
mov
adc
or
xchg
sbb
bts
mov
es
add
std
data16
xchg
jecxz
push
imul
leave
adc
mov
(bad)
xlat
sub
cmps
test
inc
mov
jecxz
(bad)
rcr
push
cmp
pop
push
sub
ins
outs
cld
sub
pop
enter
sar
sub
pop
addr16
add
mov
mov
cmp
retf
movs
mov
les
into
gs
pushf
int3
add
push
dec
lods
cmp
loope
lock
cli
popf
jp
inc
fcomp
data16
test
sub
scas
xchg
(bad)
mov
in
adc
xor
or
call
out
fsubr
xchg
cmp
stos
shr
call
and
test
pop
(bad)
out
addr16
push
jge
dec
jge
jg
pop
sbb
idiv
inc
das
mov
test
aaa
lahf
inc
mov
test
xchg
icebp
jno
test
push
fisttp
arpl
fst
push
(bad)
sahf
push
mov
shl
or
es
jecxz
mov
fdiv
push
scas
mov
cmp
out
jb
xchg
hlt
add
xlat
ret
and
jb
push
std
xor
inc
push
pop
inc
cmps
mov
push
icebp
sti
sbb
lahf
pop
movs
daa
push
mov
std
sti
(bad)
xchg
mov
ret
xor
jo
inc
jno
les
mov
mov
push
add
and
xor
pop
xor
add
push
sbb
nop
adc
and
inc
aaa
xchg
mov
outs
xchg
add
stos
rol
inc
and
xlat
dec
scas
ret
sub
mov
jno
dec
out
sub
pop
neg
mov
stos
cwde
inc
push
imul
test
sub
arpl
int
sub
push
stc
cmp
imul
movs
shl
hlt
or
jmp
push
mov
jecxz
ss
in
out
jg
mov
sahf
push
dec
xchg
or
lods
mov
test
cs
sub
cmps
inc
ds
ds
push
cmp
add
adc
push
add
push
aad
inc
cmp
sbb
daa
lods
mov
lock
add
call
popa
(bad)
mov
cmps
daa
pop
scas
retf
fwait
push
sbb
xor
fld
mul
jle
mov
loopne
fiadd
cld
push
jl
xchg
xor
aaa
repz
stos
shl
jae
stc
or
inc
lods
pop
push
or
fist
inc
sub
add
or
push
inc
shl
lahf
aaa
xchg
test
xor
push
jmp
aam
xor
jle
jle
cmps
adc
lea
push
cmp
(bad)
repnz
stc
out
out
adc
sti
xchg
pop
clc
xor
in
nop
dec
(bad)
fadd
in
xchg
cmc
sub
es
push
cmp
or
lods
ins
aad
loopne
cmp
ja
sbb
jp
sub
mov
pop
dec
imul
push
rcr
aam
out
sub
in
xor
out
(bad)
mov
aad
(bad)
push
xchg
mov
iret
pop
js
sbb
or
xchg
pop
scas
pop
or
es
loopne
std
pusha
xor
sbb
mov
and
nop
jns
jbe
inc
jle
out
and
in
cmp
jge
test
fidiv
mov
out
sbb
(bad)
xor
fbstp
cld
loopne
pop
cmp
retf
or
pop
sub
ins
xchg
aam
hlt
and
arpl
mov
jl
cli
in
jns
or
mov
sbb
mov
inc
push
mov
retf
and
and
dec
add
sahf
fild
inc
test
pushf
sbb
push
in
in
mov
mov
adc
pop
aaa
dec
mov
popf
add
pop
jmp
fist
stc
mov
pusha
aas
mov
data16
pop
jmp
mov
adc
dec
sahf
add
dec
xor
add
xchg
xor
jae
pusha
mov
adc
shl
fild
ins
pop
cmp
push
lock
aam
dec
sub
adc
inc
mov
es
rol
daa
hlt
dec
sbb
cmps
in
sub
hlt
punpcklwd
fstp
cmp
push
mov
shl
idiv
stos
inc
mov
mov
dec
idiv
inc
jo
lods
jmp
xor
repnz
adc
sub
bound
fsubrp
in
sub
aaa
mov
fimul
cmp
scas
mov
xchg
mov
pop
imul
mov
outs
dec
mov
pop
in
push
cmps
fidivr
sbb
xor
ret
jg
aaa
jge
sbb
aaa
and
mov
rol
inc
mov
inc
nop
xor
jge
cmp
fldcw
xchg
mov
(bad)
enter
or
inc
loop
jne
dec
push
cld
sbb
jo
jne
fldcw
call
jmp
or
fidiv
pop
add
cmp
pop
dec
xchg
mov
icebp
or
jmp
sub
pop
fstp
or
(bad)
sbb
cmc
lds
xchg
xchg
fist
arpl
pop
aam
mov
jl
push
mov
out
mov
out
xor
cmps
jle
loope
daa
(bad)
test
test
adc
nop
sti
mov
and
int3
xchg
mov
mov
jb
int
or
mov
jb
shl
jmp
pop
or
mov
cmc
mov
mov
enter
sbb
mov
inc
ins
add
das
push
inc
imul
bound
test
jne
loop
in
ror
(bad)
sbb
idiv
call
ins
(bad)
in
mov
push
or
ds
les
push
mov
mov
pop
mov
vxorps
add
icebp
inc
in
inc
push
ret
cmp
imul
ss
xchg
mov
mov
ficomp
int3
inc
loope
test
inc
mov
in
je
sub
pusha
sar
retf
adc
jb
mov
lods
pop
sub
aaa
mov
add
icebp
cmc
add
and
sub
pop
das
dec
imul
cmp
cmp
adc
inc
cmc
jle
xchg
xor
pop
mov
mov
int3
call
dec
add
repz
push
shl
outs
retf
inc
jo
clc
mov
test
(bad)
out
xchg
pop
ins
movs
cmp
out
mov
cs
jmp
cli
xchg
enter
cmc
push
push
or
mov
mov
dec
xchg
cmp
inc
inc
fiadd
push
repz
mov
call
test
loop
in
sbb
mov
jae
mov
test
pop
mov
add
pop
xchg
ret
stos
(bad)
in
jmp
loopne
mov
movs
rcl
sub
imul
add
push
or
stc
call
mov
mov
cld
and
enter
ss
adc
or
ds
bound
ret
pop
add
cmp
ins
out
add
jo
cmp
fwait
inc
pop
sub
jo
test
jp
pop
dec
outs
pop
xchg
addr16
les
call
dec
or
dec
aad
mov
fstp
in
xor
inc
sbb
ds
mov
sub
jmp
fist
pop
and
xor
clc
aas
mov
mov
outs
xchg
mov
jge
sar
or
int
fsubr
mov
into
rcr
pop
sbb
es
sti
shr
and
sti
jmp
push
mov
or
fsubr
sub
xor
push
out
nop
into
jg
inc
dec
jb
mov
ja
mov
fdiv
cmp
stos
sbb
and
cli
jne
addr16
sub
enter
stos
icebp
je
loope
mov
mov
mov
call
out
dec
push
pop
in
enter
fdivp
test
clc
ds
dec
jno
fdivr
fwait
push
pop
jmp
dec
pop
rcr
sbb
leave
xlat
jl
fbld
cmc
movs
leave
adc
mov
jge
mov
pop
or
mov
fcom
jmp
mov
movs
dec
push
movs
sar
dec
aam
and
mov
ficom
push
sbb
(bad)
fs
stc
iret
mov
cmps
cli
cmps
jmp
xor
cmc
mov
jae
leave
rcr
jle
xor
ins
xor
aas
xor
sub
movs
pusha
movs
popa
ret
aas
std
adc
pop
rcl
clc
jl
xchg
pop
push
cmc
int
mov
inc
jns
adc
(bad)
pop
fldcw
push
call
aam
test
mov
rol
adc
cmp
repz
pop
ret
aam
dec
mov
fsubr
out
sub
and
popf
out
pop
gs
sub
inc
push
hlt
sbb
mov
sahf
cmp
xor
push
mov
shr
xchg
leave
cmp
retf
cmp
stos
cmp
dec
mov
cwde
cmc
in
aas
ffree
sub
ins
data16
sbb
push
sbb
or
hlt
mov
out
pushf
test
or
and
cmp
inc
cli
leave
inc
or
dec
inc
inc
pop
cdq
loop
pop
aas
adc
jne
hlt
sub
aaa
aas
das
pop
bound
dec
sub
js
inc
jae
movntq
out
dec
jmp
push
in
neg
and
mov
pop
or
jns
jno
inc
adc
mov
xchg
sub
push
pop
fadd
cmp
push
loopne
cwde
cdq
dec
mov
xor
add
jecxz
dec
outs
(bad)
pop
pushf
frstorw
loopne
push
hlt
sbb
shr
or
retf
cmp
stc
mov
mov
cwde
xor
in
lahf
jmp
dec
stos
cmps
dec
ficomp
jecxz
lock
mov
fcos
adc
xor
mov
xchg
pop
leave
scas
out
jb
push
push
iret
std
retf
jb
inc
cdq
retf
fild
loop
les
dec
arpl
and
sbb
outs
into
call
cmp
retf
arpl
cs
cs
cmps
popa
call
scas
dec
push
dec
in
jmp
jmp
jno
adc
stc
lock
mov
inc
popf
xchg
sbb
xchg
jae
inc
and
add
pushf
jmp
pusha
xor
imul
enter
cmps
mov
push
jmp
mov
xor
lods
nop
sahf
mov
aaa
sub
(bad)
mov
dec
cmp
rcl
jnp
leave
(bad)
push
fnstenv
pop
and
push
mov
push
jge
sub
mov
ret
mov
scas
cmp
adc
test
(bad)
push
push
lds
loopne
push
jae
iret
xor
adc
xchg
lods
lock
jmp
ret
xchg
out
stos
ins
mov
cmp
int
cmp
imul
inc
std
mov
dec
mov
jb
fiadd
mov
xor
fcmove
gs
dec
dec
test
mov
rcl
dec
pop
dec
dec
rol
(bad)
fld
enter
mov
jp
sbb
stos
loope
push
push
js
adc
mov
imul
cli
mov
mov
cmp
aas
push
fisub
push
into
jo
xchg
sar
push
ficomp
mov
loopne
mov
cmp
xchg
sub
js
push
xlat
outs
ret
mov
pop
cs
xor
out
ins
mov
pop
popa
cmp
xor
dec
xlat
sbb
xor
push
icebp
jnp
ss
mov
mov
aad
int3
test
dec
es
push
lds
jb
(bad)
push
cld
jbe
xor
mov
push
cmps
mov
inc
aam
push
jg
repz
push
ret
aam
xor
stc
jp
xor
xchg
movs
lods
enter
test
shr
mov
imul
call
jne
cdq
cmp
lea
push
push
es
xor
fnstsw
inc
std
add
out
xor
iret
and
fdiv
pop
mov
jns
push
push
sahf
jb
xchg
push
mov
into
dec
and
mov
movs
(bad)
out
mov
xor
jle
rcr
out
data16
add
ja
outs
xlat
push
mov
cmp
push
(bad)
jmp
es
daa
loop
rol
jg
or
jnp
scas
lahf
pop
mov
cdq
cmps
pop
and
xor
xlat
mov
xchg
push
adc
imul
xor
mov
test
sar
into
push
cld
push
mov
xchg
fidiv
jg
adc
sbb
xchg
nop
in
mov
sub
mov
icebp
dec
imul
popa
call
sub
cmp
gs
fistp
sbb
mov
lock
fs
pusha
in
adc
push
mov
pop
xor
push
sahf
add
push
loop
push
hlt
sti
(bad)
push
or
xchg
xor
jno
cmp
dec
fiadd
push
lock
xchg
movs
cmc
xchg
hlt
outs
jne
ds
call
pop
outs
and
(bad)
mov
mov
ss
ret
retf
sub
clc
shl
add
or
iret
fisttp
(bad)
inc
ret
ins
sub
test
pop
and
pop
sbb
call
pushf
jecxz
enter
mov
sub
jns
cmc
jbe
adc
shl
add
jnp
mov
sbb
jb
hlt
popa
outs
in
ret
jg
out
rol
popa
rcl
add
loopne
mov
out
mov
jg
js
fadd
cmps
(bad)
sbb
pusha
data16
xor
inc
gs
xchg
cs
aam
gs
clc
fdiv
jle
daa
add
cdq
ret
aam
mov
jb
dec
fcomip
pop
mov
jb
or
std
ret
adc
aas
pop
pop
cmp
into
and
fs
or
stos
(bad)
popa
outs
lods
cdq
pop
xor
xchg
mov
dec
mov
and
ffreep
sar
mov
stc
scas
jae
stos
mov
or
std
inc
xchg
add
jmp
out
inc
push
mov
cmps
outs
popf
(bad)
sbb
adc
adc
test
pop
sub
retf
cmp
scas
aam
mov
xor
movs
lea
imul
outs
mov
fsubr
sahf
pop
test
iret
xchg
std
inc
arpl
sub
loopne
mov
(bad)
mov
in
pusha
xchg
shr
outs
shl
and
or
call
xor
push
and
sub
xor
js
sbb
mov
cmps
jle
repz
adc
jle
cmp
pop
jp
or
scas
enter
jno
sub
ret
ret
out
bnd
sahf
push
popf
or
pop
daa
ret
ds
jns
add
pop
push
leave
xchg
out
sub
bound
cmp
fistp
push
pop
xor
push
sub
rcr
dec
loop
xor
aaa
adc
push
dec
cdq
push
jmp
inc
mov
pop
add
sub
push
add
call
push
adc
inc
push
sub
cmps
je
jb
lds
cld
push
mov
inc
mov
lea
pop
mov
jmp
sar
test
pop
fisubr
and
repnz
jl
push
add
fidiv
call
add
stos
or
jge
ins
ror
out
mov
cmp
ficomp
xor
and
xor
dec
mov
inc
xchg
in
call
shr
(bad)
add
dec
adc
xchg
ds
jne
int
mov
(bad)
repz
adc
mov
test
fmul
sub
into
retf
push
adc
fmul
dec
retf
inc
leave
add
inc
and
dec
push
sub
call
push
xchg
mov
popf
mov
cmp
neg
shl
xchg
arpl
or
adc
pop
sub
mov
inc
inc
dec
cmp
ja
xor
or
adc
inc
xor
sub
aas
jmp
or
push
sub
icebp
xor
shr
inc
dec
mov
fild
dec
aad
out
mov
(bad)
(bad)
dec
pop
or
push
jg
and
jecxz
jns
add
jecxz
or
push
nop
fcmovb
stc
adc
xchg
and
out
ins
sbb
add
aaa
imul
cmps
jp
mov
jne
add
jle
dec
in
jp
inc
rcl
or
mov
dec
or
mov
pop
xchg
or
and
aad
ficom
add
mov
mov
push
dec
je
mov
and
pop
bound
and
xlat
mov
xchg
test
mov
push
xor
(bad)
jp
gs
stos
cmps
xchg
(bad)
call
and
mov
sub
xchg
push
push
shl
addr16
cmp
data16
test
jp
(bad)
das
jp
cs
scas
stos
push
and
mov
fbld
fistp
ror
cmc
jp
fdiv
mov
je
cmp
mov
mov
popa
lock
(bad)
mov
mov
(bad)
clc
pop
pop
repz
rcl
mov
imul
adc
fcmovnu
jmp
xor
pop
or
ss
sub
pop
sti
and
jmp
std
jl
jmp
pop
inc
add
jle
aam
lea
mov
xor
mov
mov
mov
mov
imul
popf
push
and
fisttp
shl
mov
sub
adc
test
icebp
push
or
cmps
mov
add
mov
and
clc
or
rol
xchg
int3
dec
pop
sub
cs
jl
push
or
test
xchg
push
(bad)
or
mov
xor
gs
dec
sbb
lods
sbb
rol
popf
inc
mov
mov
out
sbb
fdivr
inc
lahf
daa
mov
mov
sbb
sub
push
mov
sub
mov
(bad)
scas
mov
fcom
xchg
iret
movs
pop
xchg
sbb
pop
cmp
fnstcw
outs
inc
clc
shl
jno
out
xchg
jmp
dec
dec
imul
or
push
rcr
mov
sbb
xor
add
xchg
test
ret
sbb
daa
leave
in
and
popf
and
inc
lock
xchg
mov
push
cmps
icebp
es
dec
loop
inc
mov
pop
popa
mov
push
jo
jge
ds
xchg
mov
push
jno
push
add
test
mov
sub
xchg
push
ss
mov
stc
jnp
stos
mov
in
mov
outs
dec
mov
test
iret
cmps
int
dec
xor
xchg
pop
popa
mov
in
and
cmp
aam
sbb
mov
dec
cmp
pop
(bad)
xchg
jg
push
add
xor
out
jbe
leave
xchg
xor
xchg
addr16
sub
dec
jae
mov
fsub
je
jmp
int3
xchg
mov
xor
shl
adc
mov
sub
xlat
xchg
adc
mov
and
xchg
mov
cmp
add
outs
sub
add
and
mov
and
leave
jmp
inc
xor
xchg
mov
in
out
pop
xchg
cmps
popa
adc
sub
shl
stos
jl
test
jge
mov
add
cmc
sbb
or
mov
(bad)
out
fucomi
cli
call
in
cli
xor
sti
jno
enter
shl
push
outs
pusha
lea
and
xchg
std
push
mov
icebp
imul
cmp
pusha
mov
and
pop
fwait
cmp
pop
das
adc
sbb
mov
out
xor
jl
stos
cmp
mov
leave
pop
push
cmovae
outs
sbb
scas
retf
xor
inc
pop
mov
clc
push
mov
neg
cmp
popf
push
push
xor
hlt
adc
push
jle
ret
xor
mov
movs
pop
cmp
push
pop
mov
sub
rol
xchg
pop
rcr
stos
scas
neg
mov
cmp
mov
xor
sub
mov
xchg
ror
push
aam
imul
mov
jle
push
mov
xchg
sti
lds
inc
ins
inc
sub
push
(bad)
pop
pusha
push
icebp
sbb
into
lods
psraw
outs
fldcw
jno
or
ins
imul
js
jbe
dec
mov
enter
lahf
or
scas
pop
mov
mov
or
fimul
push
sbb
ss
jg
dec
shl
pop
jbe
sbb
add
sub
push
push
leave
test
sahf
mov
in
xor
int
push
adc
popf
dec
jne
cld
aad
mov
xor
lods
cmp
mov
pop
jg
pop
dec
mov
and
sahf
push
jo
ss
out
xchg
call
inc
push
imul
imul
dec
jmp
sbb
cs
outs
addr16
jno
out
mov
mov
mov
adc
sbb
in
or
test
in
xchg
sti
or
push
adc
jmp
mov
inc
hlt
call
hlt
inc
retf
(bad)
in
or
xor
jae
cmp
xor
add
sub
(bad)
aaa
or
mov
std
out
xlat
jl
cs
pop
or
shr
push
jbe
and
inc
inc
sbb
cmp
ja
ds
pushf
mov
xchg
cmc
mov
fs
add
xchg
sbb
mov
ret
inc
push
dec
ins
jge
arpl
and
das
cmp
push
gs
call
pop
stos
lods
push
pusha
out
sub
xor
push
or
push
imul
xor
lahf
dec
repz
and
daa
and
retf
adc
call
cmp
dec
mov
lods
jge
popa
sub
jmp
stos
push
sbb
add
mov
test
fidivr
dec
mov
call
sar
int3
cmp
xchg
xlat
jecxz
adc
xchg
jle
fbstp
stos
test
aas
push
popa
popf
mov
ins
in
leave
or
outs
stos
xchg
popa
cmc
fcmovnbe
mov
popf
lods
jmp
sbb
push
sub
lds
xchg
push
jb
aam
cs
rcl
shr
lahf
sbb
add
add
jno
mov
mov
test
jmp
jecxz
movs
fisubr
(bad)
jp
es
pop
repnz
test
mov
ror
stc
dec
test
outs
mov
das
call
adc
repnz
imul
test
lds
aam
mov
scas
inc
sub
aad
cmc
in
mov
cmp
sub
push
stc
and
aam
iret
rcr
shl
icebp
mov
ret
xchg
add
lea
xchg
dec
mov
jnp
movs
retf
in
inc
mov
jp
movs
dec
les
aam
in
cmp
mov
lock
mov
(bad)
inc
loope
mov
adc
or
mov
stos
pop
inc
imul
stc
add
std
lock
dec
adc
popa
sahf
sbb
in
sbb
test
repnz
std
or
mov
enter
scas
aaa
pop
imul
dec
adc
les
dec
fcom
cmp
stos
mov
push
jns
out
scas
das
xchg
movs
imul
pop
retf
push
in
pop
pop
pop
fisubr
inc
iret
imul
out
push
out
loope
leave
(bad)
pusha
sub
push
push
imul
pop
rcr
movs
arpl
mov
mov
jl
jl
mov
ret
add
stos
and
loop
test
jnp
dec
dec
fsubr
inc
mov
xor
sbb
sbb
fisttp
aaa
mov
jns
mov
inc
cmc
fadd
cmp
pop
mov
jno
je
mov
rol
mov
or
shl
bound
cdq
(bad)
repnz
(bad)
mov
jno
adc
inc
outs
inc
fild
mov
sbb
lods
addr16
(bad)
add
inc
dec
sbb
jne
pushf
or
cmp
lods
pop
push
test
fcmovb
out
popa
in
leave
xchg
adc
push
sahf
sub
outs
or
scas
fwait
scas
pop
jns
movs
xlat
fidiv
test
stos
scas
ins
push
jl
xchg
jmp
xor
(bad)
cmp
retf
dec
adc
in
and
data16
xor
test
and
dec
stos
xchg
sbb
mov
or
gs
or
pusha
push
add
loop
rol
add
stos
fcmovb
or
sub
push
jmp
loope
sbb
mov
mov
arpl
stos
cmc
sub
iret
jp
js
inc
pushf
loopne
lock
movs
push
cmp
xor
(bad)
jmp
arpl
ret
dec
dec
inc
push
xchg
pop
es
cmps
push
sub
jmp
das
jmp
adc
dec
pop
ret
adc
mov
clc
add
jbe
push
mov
call
fwait
add
sbb
jge
mov
sbb
fnsave
mov
stos
or
out
mov
mov
jp
xchg
lock
lea
inc
pop
push
loope
adc
adc
jb
or
dec
xlat
dec
pop
std
popa
inc
(bad)
push
jae
xchg
sub
xchg
mov
fs
jno
retf
mov
or
stc
dec
dec
sub
imul
push
fidiv
imul
hlt
stos
mov
outs
push
mov
jmp
lahf
sub
mov
(bad)
sbb
or
out
(bad)
mov
shl
fsub
or
add
jp
inc
sti
(bad)
push
mov
fmul
call
mov
mov
fscale
adc
xchg
gs
loop
and
or
test
mov
mov
je
icebp
xor
or
aad
out
mov
mov
xchg
mov
jmp
(bad)
and
jmp
or
add
mov
(bad)
or
mov
ds
ror
mov
lods
adc
jmp
and
push
aam
pop
nop
jnp
ins
nop
push
mov
es
stc
cmp
mov
xlat
mov
mov
sub
jmp
jg
inc
(bad)
xor
pop
jmp
sbb
xor
out
mov
addr16
icebp
ret
push
stos
and
jno
sub
jle
jo
fisttp
aad
aad
jo
aas
mov
idiv
mov
out
in
xchg
add
(bad)
pop
dec
jnp
test
dec
xchg
test
fstp
addr16
adc
xchg
aaa
mov
push
add
jno
push
stos
cmps
xchg
dec
fist
jbe
out
fisubr
cmp
pop
mov
cmp
shr
pop
out
sbb
sub
push
retf
sub
leave
cmps
or
push
mov
and
out
jp
push
mov
mov
retf
out
cmp
push
(bad)
mov
aam
out
std
or
or
cwde
mov
mov
mov
sbb
mov
jne
sahf
dec
pop
mov
enter
ret
sub
lds
outs
hlt
pop
mov
stc
dec
cld
aaa
data16
mov
gs
xchg
stos
cmp
data16
adc
push
adc
icebp
fcomp
mov
rcr
dec
sub
mov
pushf
stc
adc
pop
outs
mov
mov
int3
repnz
mov
add
adc
sbb
test
push
mov
inc
nop
inc
inc
or
arpl
mov
push
or
in
mov
sub
mov
mov
push
mov
sbb
scas
push
jmp
test
sub
cld
adc
xchg
mov
stos
rol
int
lods
and
or
xchg
or
sbb
cmps
popf
je
ret
das
cwde
loopne
jmp
js
inc
popf
cmps
sbb
test
mov
out
lods
cmp
jmp
enter
push
retf
mov
stc
cmp
add
sbb
sbb
xor
jnp
push
js
mov
xlat
cmp
mov
sub
scas
or
movs
pop
aaa
dec
jmp
enter
mov
(bad)
mov
jmp
push
sbb
popa
and
sub
cld
push
(bad)
shl
push
jae
lea
fdiv
jmp
(bad)
mov
xchg
dec
inc
nop
sbb
jle
js
aas
xor
xlat
xchg
dec
pop
loopne
dec
(bad)
jae
push
in
(bad)
mov
xchg
dec
sahf
(bad)
outs
int3
xor
ins
scas
int
push
test
lods
jecxz
movs
frstor
loopne
jbe
push
xor
stos
sub
or
daa
movs
sbb
sbb
push
cmps
out
add
fcmove
pop
jno
and
in
or
and
div
mov
cmp
ret
pop
inc
aaa
mov
aaa
popa
and
repz
and
dec
fidiv
sahf
lods
lods
add
repz
jge
hlt
xchg
sub
push
sub
loope
or
addr16
lds
xchg
xchg
not
xchg
lea
leave
xchg
mov
xor
mov
aaa
lock
call
mov
dec
mov
mov
test
ds
ins
ficom
pop
cmp
or
cs
inc
pop
cmps
pop
jge
mov
fnstcw
sub
call
sahf
(bad)
into
cmp
push
imul
adc
and
test
mov
lock
pop
sti
iret
sub
push
and
jp
(bad)
repz
xor
popa
sbb
xor
fild
int3
lods
sub
pop
je
jmp
xchg
pop
push
pusha
sbb
push
mov
jns
aaa
xchg
pushf
pop
scas
loope
pop
das
mov
adc
sbb
dec
outs
nop
sar
adc
cmps
call
(bad)
lods
pop
xor
hlt
push
xor
xchg
mov
sbb
mov
or
and
sub
dec
jmp
jmp
dec
ja
xchg
aas
or
xchg
xchg
xchg
add
cs
mov
test
mov
div
dec
mov
cs
scas
mov
sti
mov
adc
not
test
fwait
and
outs
into
mov
mov
jg
mov
adc
push
mov
(bad)
jno
jl
(bad)
imul
xchg
adc
rep
sbb
repnz
data16
adc
lea
xor
scas
xor
mov
push
inc
cmp
aad
movs
jmp
xchg
xchg
jmp
rol
adc
adc
pop
test
jae
ins
push
push
js
inc
jmp
dec
jne
pusha
aam
push
sbb
aaa
inc
jns
call
mov
imul
dec
pop
fstp
fdivp
fstp
pop
jne
mov
jb
jmp
adc
stc
je
pop
call
push
fimul
push
sbb
aad
fsub
test
cwde
and
iret
loopne
jp
inc
cmp
sub
lods
out
test
mov
clc
das
push
add
ret
shl
sbb
mov
test
xchg
std
adc
and
imul
ret
adc
sub
inc
scas
pop
(bad)
pop
call
inc
and
test
cmp
into
push
enter
out
xor
or
sub
jbe
hlt
xchg
addr16
cmp
lea
mov
clc
gs
into
setp
sub
inc
adc
sbb
pop
sqrtps
mov
or
xor
cmp
sub
push
leave
fwait
clc
loop
add
xchg
retf
arpl
xchg
imul
add
sub
inc
jmp
xchg
popf
inc
add
pop
icebp
mov
ins
into
pushf
cs
jnp
xor
pop
retf
push
pop
sbb
sbb
(bad)
sub
jge
pop
jmp
js
xchg
dec
test
int3
cmp
popa
pop
lods
(bad)
and
xlat
lods
adc
fadd
jmp
lods
call
add
jnp
jmp
xor
add
or
inc
repnz
sbb
enter
(bad)
std
push
push
mov
jae
sbb
push
sti
int3
jmp
mov
mov
xchg
lock
fidiv
xchg
xlat
imul
cmp
call
int3
ror
push
inc
inc
and
or
iret
and
xor
call
xor
cmps
xor
push
test
adc
cli
sbb
loope
and
xchg
mov
es
scas
(bad)
adc
mov
call
push
fsub
addr16
sbb
add
jg
push
or
loope
in
addr16
ret
adc
in
jbe
push
xor
cmp
(bad)
pop
jmp
sub
inc
adc
test
push
in
fistp
push
mov
sub
loope
sub
std
and
jecxz
xlat
mov
adc
data16
test
pop
imul
daa
and
sbb
rol
fnstsw
xor
mov
mov
push
push
daa
lock
push
jp
jp
cmp
pop
out
mov
or
movs
add
mov
out
clc
stos
mov
xchg
xchg
fnstcw
ror
mov
std
push
fiadd
xchg
or
jnp
jo
inc
push
dec
cwde
adc
or
std
adc
repnz
fs
xlat
add
out
inc
ror
jne
push
scas
push
jb
mov
push
or
arpl
mov
mov
sahf
push
int
cmps
adc
js
push
mov
or
or
movs
or
xchg
adc
in
stc
pop
sbb
ds
sbb
push
cli
sub
das
add
arpl
or
std
cmp
push
mov
or
jns
inc
(bad)
int3
jo
(bad)
sub
mov
xlat
inc
and
and
(bad)
scas
or
aaa
call
(bad)
fistp
mov
retf
push
dec
pop
sbb
inc
jp
or
fild
mov
pop
jmp
popa
rol
ins
add
jmp
es
out
cli
lods
jmp
mov
mov
cmp
push
cmps
shr
in
add
idiv
mov
aas
in
ret
std
and
push
(bad)
mov
out
sbb
jae
js
fild
cmp
aad
sub
sar
(bad)
xor
mov
sbb
gs
retf
iret
mov
cs
push
call
mov
xor
add
in
jne
and
fwait
popa
sbb
out
retf
jmp
(bad)
sbb
in
stos
test
arpl
std
imul
test
sub
jl
pop
mov
xchg
mov
stos
mov
idiv
fisubr
adc
jne
cmp
(bad)
ficom
inc
fdiv
out
mov
aas
nop
and
iret
les
out
(bad)
cmp
das
outs
cmp
push
xor
add
jmp
enter
sar
pushf
jle
imul
in
bound
inc
pushf
and
sub
adc
cdq
das
test
clc
es
or
sbb
popa
adc
dec
cs
stc
sub
ret
lahf
inc
(bad)
js
xchg
in
test
mov
or
xchg
fld
call
outs
(bad)
fdiv
pop
int
lods
ret
enter
(bad)
aas
shl
inc
inc
jb
call
add
and
mov
mov
mov
push
(bad)
jns
and
push
push
out
mov
test
mov
fdivr
lods
test
push
adc
jp
sti
ret
pop
pop
jl
imul
movups
fadd
popa
popf
mov
ins
sahf
(bad)
jne
adc
xchg
inc
or
movs
aad
sbb
mov
add
inc
jns
sub
and
outs
das
xlat
loope
ja
jne
hlt
ficomp
dec
cdq
pop
xlat
rcl
mov
daa
xor
pop
test
fld
jno
xchg
adc
sbb
dec
cmp
fbstp
(bad)
push
pushf
add
mov
je
cld
cmps
fs
aas
repz
add
xor
cwde
inc
in
fisttp
push
fcmovnu
rol
cmp
mov
push
push
mov
mov
aas
add
fdiv
pop
and
push
cmps
cwde
lea
sub
sbb
jg
inc
xchg
push
stc
sbb
and
jo
jae
lock
mov
cs
mov
mov
dec
mov
xlat
push
aam
cmp
push
jp
in
(bad)
jp
cwde
scas
xor
xchg
mov
(bad)
mov
push
add
arpl
div
loope
mov
pop
stos
push
mov
lods
stos
sbb
cmp
push
mov
cdq
fcom
xor
and
or
pop
xchg
(bad)
pop
sub
out
out
add
shl
mov
xchg
inc
sbb
jl
sub
shl
lock
aam
sub
cmp
pop
outs
call
and
fsub
bound
cmps
cli
dec
(bad)
or
adc
sub
hlt
retf
push
pop
fisubr
pop
add
and
aaa
jecxz
dec
data16
shr
mov
jbe
cdq
lods
cmp
repnz
mov
fimul
add
cmp
out
or
mov
arpl
xlat
or
adc
bound
cs
dec
gs
rol
xlat
add
pop
mov
(bad)
cmps
and
pusha
mov
adc
jecxz
movs
iret
icebp
movs
push
lea
aad
nop
rcl
outs
mov
sub
stos
fucomi
das
push
shl
push
iret
cmp
dec
jle
inc
sbb
mov
call
jmp
sbb
lea
cmp
dec
iret
scas
inc
jmp
repnz
scas
out
mov
xor
mov
push
fild
fimul
in
or
dec
lock
outs
fnstcw
movs
adc
sub
jmp
nop
shr
xchg
arpl
mov
in
sbb
movs
mov
mov
not
mov
pusha
jge
pop
arpl
dec
mov
cdq
xchg
lock
fstp
movs
jno
mov
push
retf
cmp
loope
call
inc
adc
jecxz
adc
aas
push
loope
pop
in
fild
sar
mov
stos
xor
dec
out
aad
push
jg
xor
inc
and
fdiv
fwait
call
and
(bad)
sub
shl
mov
mov
inc
and
leave
ins
jns
js
adc
stos
jmp
add
mov
aaa
add
xchg
push
mov
jle
mov
retf
in
out
and
fsub
nop
pusha
out
mov
adc
aam
sbb
and
pop
test
pop
xlat
stos
pop
dec
movs
or
ins
dec
add
shl
pop
jo
in
std
xchg
outs
dec
out
cmp
idiv
(bad)
arpl
das
ror
cmps
inc
(bad)
jmp
push
push
mov
xchg
and
jbe
jnp
push
and
cmp
in
arpl
jns
sahf
loopne
fs
dec
sahf
arpl
nop
xor
or
mov
mov
mov
in
stos
mov
xchg
jle
popf
enter
pusha
loope
or
jne
mov
fisubr
xor
inc
out
shl
adc
push
pop
mov
jp
mov
ret
cmp
mov
ss
adc
frstor
dec
pop
xor
adc
into
and
pop
add
(bad)
fnsave
sub
rcl
repz
rol
(bad)
nop
(bad)
sub
out
loop
adc
mov
cmc
mov
sbb
push
out
and
out
dec
hlt
sub
jns
rep
fadd
les
mov
imul
mov
or
in
mov
adc
dec
push
push
dec
or
dec
iret
push
jmp
clc
rcr
add
lods
shl
rol
push
adc
loop
and
nop
jno
stos
pop
ins
xchg
adc
test
mov
rcr
(bad)
sbb
pop
xchg
xchg
cmp
and
fnstenv
xor
faddp
imul
sbb
inc
shr
imul
xor
bound
jb
out
dec
cmps
mov
inc
mov
ja
push
add
fs
nop
sub
push
adc
cld
pop
jbe
movs
push
frstor
addr16
pop
add
mov
mov
scas
sbb
cli
push
addr16
pop
ficomp
stc
inc
rcl
mov
mov
lock
dec
mov
xchg
out
sbb
or
dec
cld
or
jmp
ins
sub
jg
mov
out
es
loope
pop
and
push
sbb
jno
mov
jno
pop
mov
jp
dec
sub
xor
leave
repz
out
sbb
dec
fcmovnb
push
xchg
xor
adc
add
xor
inc
sbb
mov
xchg
out
pop
adc
cmp
movs
mov
sahf
pusha
xchg
cdq
lods
out
lods
mov
shr
mov
pop
popa
sbb
pop
add
sbb
retf
into
mov
jmp
and
add
stc
scas
push
call
lea
jp
scas
xor
sub
xor
cmp
dec
jge
call
mov
mov
xchg
adc
retf
repnz
imul
add
inc
and
icebp
das
mov
popa
stos
sar
jle
dec
mov
jge
test
sub
cmp
into
add
stc
and
mov
xchg
mov
push
std
jg
loope
cs
out
or
jne
inc
mov
bound
dec
out
add
cmc
stc
ret
xlat
pop
repz
out
dec
mov
out
mov
ret
ret
adc
iret
scas
adc
call
dec
jnp
movs
push
pop
sub
sub
push
clc
cmp
and
stos
xchg
cmp
lods
sub
or
cmc
pop
call
dec
int3
xor
sbb
and
(bad)
dec
inc
adc
jmp
mov
xchg
push
sub
in
add
call
pop
adc
pusha
pop
adc
movs
xor
popa
retf
rol
jmp
retf
retf
jo
and
out
hlt
jecxz
and
xchg
cs
inc
fbld
add
(bad)
mov
cmc
sahf
jae
arpl
add
call
sbb
xchg
int
push
enter
xchg
jne
pop
(bad)
sbb
xchg
retf
cmps
push
into
gs
mov
enter
shl
mov
test
cmp
int
cmp
jbe
pop
add
or
xchg
loopne
pop
icebp
cmps
push
mov
stc
xchg
pause
and
out
out
scas
fwait
es
(bad)
mov
sbb
daa
jecxz
mov
dec
dec
push
mov
add
sbb
mov
fsubr
into
dec
jae
cmp
mov
into
cs
rep
add
aad
pop
jne
push
push
shl
call
mov
cmp
in
rcr
loope
shl
addr16
mov
mov
sar
add
and
xchg
mov
lahf
mov
inc
xchg
(bad)
out
mov
aad
mov
push
cmp
test
xor
test
cmp
fisubr
ins
outs
(bad)
and
sub
shl
jnp
scas
fdivr
fs
inc
inc
cmp
pop
imul
(bad)
cmps
xor
pushf
mov
pop
fild
jecxz
xchg
jno
aas
ret
xchg
add
xchg
cmp
mov
sbb
sbb
push
js
or
(bad)
cmp
bound
sbb
shr
mov
cmps
xor
not
pop
nop
(bad)
push
repnz
lds
xchg
xchg
mov
xor
mov
cs
lds
out
adc
dec
mul
out
fwait
je
out
shl
arpl
fsin
mov
inc
arpl
push
dec
mov
jecxz
call
sbb
xor
into
test
push
inc
cmp
clc
mov
push
cmps
cs
adc
and
sub
cmp
cdq
addr16
rol
sahf
iret
hlt
push
inc
push
pop
and
cmc
(bad)
cmp
addr16
xchg
ret
or
sbb
pop
mov
xchg
xor
outs
addr16
inc
jl
jo
cdq
push
js
pop
cmp
pop
fs
ror
xchg
inc
sub
pop
idiv
xchg
sub
div
sahf
inc
mov
mov
or
mov
jb
mov
shl
daa
repz
pop
push
loope
icebp
gs
je
popf
les
xchg
rep
ret
arpl
outs
jge
or
(bad)
pop
xchg
cmp
std
aam
lods
loopne
cmc
or
push
dec
fld
dec
xchg
and
test
cs
inc
dec
mov
push
mov
jecxz
ficomp
das
aas
pop
inc
mov
retf
add
jg
push
enter
jp
(bad)
mov
imul
mov
dec
outs
xchg
idiv
leave
inc
sub
pop
jbe
and
and
pushf
cmp
xchg
jnp
push
imul
aaa
lahf
(bad)
jl
fist
push
ss
mov
inc
dec
inc
pop
je
enter
push
test
inc
or
ror
ficom
sub
cdq
adc
or
sbb
jne
ins
test
(bad)
inc
mov
pop
je
lock
cmp
sqrtps
outs
sub
sbb
frstor
shl
jae
xor
sub
ret
(bad)
lods
(bad)
loopne
fwait
retf
dec
mov
aas
jbe
jo
sbb
popf
adc
push
add
pop
cmps
xchg
sub
shr
out
adc
xor
fild
movs
add
mov
fcom
mov
inc
push
pushf
sub
push
pop
push
add
aaa
pop
mov
scas
mov
mov
std
jg
cwde
and
jb
xor
jl
out
cmp
add
jg
jno
pushf
push
cmps
xchg
push
and
or
sub
mov
sub
pop
and
adc
push
cmp
sub
mov
pop
das
cmps
(bad)
test
cmp
xchg
lods
movaps
mov
fst
rol
or
push
dec
dec
hlt
cmp
jo
and
mov
mov
and
jge
pushw
mov
les
sub
adc
imul
mov
mov
add
std
inc
stos
jcxz
loop
test
and
pop
mov
push
and
out
cmc
pop
jle
cmp
add
std
fstp
js
loop
cld
pop
mov
pop
dec
inc
loope
lds
dec
pushf
fs
in
jae
sub
repnz
xor
imul
ins
pop
inc
add
mov
mov
scas
push
and
test
in
mov
fs
gs
push
mov
push
sub
call
jmp
ins
jmp
js
aaa
push
outs
pop
and
movs
(bad)
xchg
aad
mov
push
add
cwde
push
cld
aaa
movs
push
repz
sbb
cmp
stos
aam
fist
pop
cmp
dec
aad
movs
and
mov
push
and
xchg
das
sub
xlat
add
push
jnp
and
psubq
ret
xchg
add
sub
js
out
push
fild
and
cmp
and
xor
sub
xchg
mov
mov
(bad)
xor
movs
jae
mov
push
bound
dec
inc
fisub
idiv
stc
xor
out
dec
cld
mov
xchg
jo
fldenv
push
xor
mov
mov
lea
std
xchg
xchg
sbb
adc
mov
xchg
hlt
adc
ja
mov
std
(bad)
loop
iret
adc
fstp
inc
call
cmp
daa
aad
sbb
or
arpl
dec
test
xchg
movs
inc
scas
pop
mov
mov
jg
sub
jge
mov
mov
div
add
add
lods
push
mov
fwait
mov
(bad)
fcmovb
gs
add
cvtdq2ps
ds
xchg
xchg
imul
loop
ss
ds
je
mov
std
dec
out
dec
pop
(bad)
xor
push
sbb
hlt
mov
icebp
or
sbb
ret
mov
gs
xor
fisubr
in
mov
jecxz
cmp
dec
cmp
hlt
push
shl
inc
push
pop
mov
dec
and
mov
lea
or
cld
jge
adc
mov
sub
jb
and
pushf
push
inc
fbstp
or
adc
fdiv
call
push
ficomp
std
jmp
repz
or
cmps
stos
sub
test
mov
mov
mov
xlat
jb
and
shl
dec
or
cmc
fwait
das
pushf
dec
es
lea
fcomip
loopne
xlat
dec
ins
xchg
imul
stos
xor
fmul
loopne
test
ds
retf
pusha
push
jg
jnp
rcl
das
repnz
fisub
shr
sahf
push
nop
add
ficomp
jge
push
cmp
or
xor
inc
dec
pop
cld
aaa
mov
xchg
sub
mov
or
lds
push
and
adc
daa
dec
cwde
out
adc
ss
jmp
or
scas
ret
mov
sub
aas
neg
add
imul
push
sub
fimul
cdq
das
dec
neg
mov
jne
pusha
bound
push
rol
pop
or
or
jge
add
scas
sub
jbe
jo
jno
fild
jl
xchg
mov
xchg
(bad)
arpl
jmp
sub
stc
push
js
call
imul
(bad)
pop
dec
in
or
pop
sub
or
cmp
sub
clc
dec
pop
je
in
adc
mov
int3
scas
cli
fst
lock
icebp
add
adc
or
ror
sbb
push
mov
test
les
jne
lock
inc
ins
cdq
imul
add
mov
lock
push
nop
rcr
nop
mov
sbb
fucomp
cmp
das
mov
add
cmc
and
cmp
into
sti
movs
into
fst
ss
xchg
cmp
sbb
sub
arpl
aas
sub
loopne
jno
shl
push
jo
movs
add
add
pop
dec
xor
or
int3
mov
jmp
imul
pop
mov
pop
in
xchg
push
cmc
mov
pop
ins
enter
adc
sti
mov
xchg
fistp
add
lea
iret
je
imul
mov
das
test
jecxz
ja
jb
sub
daa
push
and
pop
pop
(bad)
mov
aad
movs
fcom
xor
push
enter
jmp
rcl
mov
fdivp
sub
or
mov
pop
mov
test
jnp
dec
push
fiadd
lock
sti
in
xchg
sub
out
jmp
test
push
or
xor
fstp
and
jo
outs
test
fsubr
cmp
mov
xchg
popa
jle
test
xlat
add
and
ret
dec
leave
rcl
(bad)
jmp
dec
and
xchg
ins
and
sbb
dec
sbb
or
sub
mov
or
lods
xor
bnd
mov
xor
xor
cs
jle
std
scas
cli
out
and
lods
popa
into
jmp
hlt
dec
push
aad
xor
mov
gs
hlt
push
jb
pop
or
inc
lea
fs
xchg
int3
jb
pop
xchg
inc
ret
xchg
loope
repnz
ins
adc
imul
dec
lock
icebp
(bad)
xchg
sahf
int3
ins
jmp
into
and
loopne
push
cli
cmp
arpl
(bad)
and
sbb
xor
cdq
outs
push
mov
xor
das
and
jne
ins
dec
call
or
repnz
pop
(bad)
aas
mov
into
push
gs
mov
lods
jmp
std
jmp
jmp
mov
and
xor
inc
add
lds
mov
adc
shl
mov
xchg
loop
mov
dec
sbb
jns
loopne
sbb
in
inc
jo
nop
lahf
hlt
xlat
out
stc
and
lods
adc
lea
bndldx
nop
xor
inc
xchg
push
mov
cmp
in
aaa
stc
sbb
(bad)
or
loope
xchg
mov
mov
neg
cli
cmps
pop
xchg
call
imul
pusha
inc
pop
push
mov
and
mov
fwait
xchg
mov
or
or
pop
sub
sti
gs
push
cmp
cs
loop
lea
popa
out
fstp
push
pop
aad
jo
mov
jg
and
jb
cmp
add
and
stc
cdq
jge
pushf
pop
xor
fst
sbb
pop
dec
mov
arpl
dec
and
xor
fs
repz
movs
jecxz
xor
outs
sbb
inc
jmp
ds
mov
ret
adc
out
push
aaa
xchg
shr
shr
jle
out
stc
xchg
shl
add
scas
vmread
(bad)
je
pop
sub
aad
push
enter
arpl
in
sar
pop
mov
mov
xor
xor
add
je
stos
push
cld
pop
push
das
xor
inc
sub
(bad)
imul
pop
or
popf
mov
or
add
pusha
call
jmp
les
dec
cmp
ins
les
cs
js
repnz
arpl
(bad)
xor
(bad)
push
mov
bnd
pop
push
jg
mov
retf
or
push
out
fstp
push
mov
jle
cmp
inc
repnz
mov
into
cdq
sbb
mov
mov
pop
test
mov
fiadd
dec
sub
push
cmp
fcom
enter
add
scas
push
fs
retf
ror
mov
mov
(bad)
ror
test
cmps
mov
scas
pop
call
sti
pop
test
les
inc
mul
loope
loopne
mov
xchg
or
es
imul
cmp
inc
and
test
jns
rcl
adc
stos
mov
mov
adc
push
xor
sub
jns
mov
pop
inc
(bad)
rcl
aam
mov
pop
(bad)
aad
stos
push
fisubr
bound
movs
inc
pop
xchg
pop
ffreep
(bad)
sbb
push
or
lds
inc
pushf
mov
inc
inc
ret
(bad)
add
ror
test
and
loop
bound
(bad)
and
xor
mov
sub
into
xchg
test
push
fdivr
hlt
lods
sub
cmp
popf
push
frstor
mov
lea
add
ret
pop
gs
sbb
enter
ja
loope
sub
sub
mov
nop
fisttp
dec
and
cmp
popa
sub
pcmpgtd
loope
mov
out
retf
int
cmc
iret
pop
vandnps
jo
sti
cmp
or
retf
(bad)
xor
pop
and
int3
fdivr
in
inc
mov
repz
and
or
cmp
xor
ja
add
dec
pop
pop
push
mov
in
jmp
cmp
push
outs
adc
adc
cmp
mov
jmp
mov
jle
cmp
dec
or
shl
cs
lea
jbe
ins
cmps
mov
inc
push
or
cmps
adc
fldcw
cmp
push
lahf
ja
pop
mov
inc
pop
mov
(bad)
pop
in
mov
das
clc
push
fdiv
shl
(bad)
in
hlt
in
in
dec
pop
adc
addr16
(bad)
popa
adc
inc
loopne
and
sub
aad
out
xchg
out
xchg
addr16
sti
hlt
sub
sbb
xor
mov
lahf
test
mov
add
test
jns
xchg
and
inc
fcom
shl
das
dec
in
jl
iret
or
arpl
mov
or
xchg
pop
iret
or
pop
dec
nop
pop
cli
test
stos
adc
jbe
outs
jmp
xchg
ja
(bad)
jle
sysenter
pop
sbb
f2xm1
cs
cld
call
loopne
lock
push
inc
lahf
sub
adc
cld
mov
mov
stos
and
imul
ds
inc
jl
inc
(bad)
in
push
jge
and
mov
pop
lods
neg
jp
xor
xchg
in
pusha
jge
and
mov
les
mov
scas
jp
sbb
xchg
xchg
push
jbe
add
sub
push
shr
push
out
jnp
xor
cmp
(bad)
cmps
xchg
mov
and
add
fild
mov
xchg
xchg
jne
jge
mov
repnz
fisttp
mov
sbb
mov
pop
mov
cmp
mov
sahf
or
retf
in
xchg
test
ret
lock
mov
cmp
lods
sbb
mov
out
sbb
(bad)
aas
pop
inc
xor
out
sub
mov
in
(bad)
fldenv
cmp
movs
pop
mov
iret
arpl
test
adc
jmp
push
and
cmp
pop
movs
ror
stos
ss
sar
xor
bound
mov
retf
(bad)
(bad)
cmp
iret
mov
mov
xchg
dec
pushf
adc
jb
mov
push
sub
call
jecxz
dec
jp
cmc
jns
add
sbb
ror
mov
push
adc
push
loop
test
(bad)
ret
lahf
inc
stos
jl
or
call
cmp
sub
fstp
mov
lods
repz
mov
or
ret
jmp
cwde
lods
in
call
sub
mov
mov
test
scas
add
aaa
inc
(bad)
jns
pop
dec
dec
xchg
xchg
pop
sbb
shr
in
aas
pushf
outs
sbb
in
cmps
div
xchg
mov
jmp
add
sti
sti
mov
pop
cmp
dec
pop
pop
and
and
fsubrp
mov
mov
push
dec
(bad)
imul
ins
pushf
ins
sbb
test
dec
leave
div
push
loop
mov
dec
gs
outs
popa
rol
fninit
mov
icebp
into
fbstp
xchg
icebp
or
mov
lods
mov
mov
idiv
pop
push
mov
sbb
push
xchg
out
jge
stos
cwde
fbld
fbld
xchg
dec
adc
adc
ficomp
(bad)
aad
ss
fld
ret
imul
add
(bad)
gs
dec
push
or
in
fistp
sub
sbb
test
jmpw
shr
in
lock
outs
retf
sbb
retf
das
add
push
stos
cs
jge
stos
fisubr
mov
adc
fsubr
bound
ret
out
(bad)
and
push
xchg
lahf
int
out
bound
(bad)
cld
inc
pop
and
add
inc
es
retf
jb
mov
lods
lahf
mov
and
pop
mov
jae
inc
xchg
imul
sbb
(bad)
stc
movlhps
imul
mov
cld
mov
xor
imul
hlt
mov
cmp
xchg
inc
mov
xchg
in
ja
inc
mov
xchg
xchg
jg
shr
dec
retf
in
cmps
fs
add
lds
sbb
mov
mov
shl
into
mov
pop
or
std
cmp
stos
xor
pop
bound
add
or
test
push
sub
inc
inc
mov
pop
int
mov
hlt
scas
mov
(bad)
mov
call
mov
xlat
xchg
mov
and
jno
test
mov
inc
push
das
in
pop
imul
ss
fst
not
fsubr
imul
xor
mov
sbb
ss
jno
xor
push
cmp
ret
pushf
je
pop
mov
fwait
mov
(bad)
or
adc
jns
out
dec
and
outs
nop
mov
jae
pop
ror
and
les
push
pop
ds
in
adc
fwait
popa
jb
sbb
mov
sar
or
ret
or
mov
mov
call
sbb
xchg
clc
rcr
in
cmc
sahf
lds
push
xchg
jl
push
pop
sub
ret
xchg
std
sub
and
icebp
mov
dec
push
es
jmp
loope
xchg
xchg
les
push
shr
jnp
mov
out
lods
(bad)
ss
mov
and
mov
fdivr
addr16
jnp
mov
mov
repnz
icebp
iret
adc
ss
ja
sub
std
cmps
imul
les
pusha
push
pop
fld
pop
(bad)
push
inc
xchg
cmps
aaa
lea
sar
pushf
fwait
or
sub
stos
jae
mov
data16
fwait
(bad)
aam
and
push
fst
inc
xchg
add
fcomip
push
cmp
mov
daa
pop
xchg
mov
adc
mov
cmp
fcmovnb
sahf
mov
adc
bound
ret
iret
shr
repnz
pop
pop
jmp
add
in
rep
lods
inc
dec
cli
call
cmps
inc
cdq
mov
xchg
cmp
test
sbb
lahf
cmp
sbb
iret
loope
gs
mov
inc
mov
pop
jge
jb
add
rol
or
stc
shl
xlat
popa
std
pop
jle
out
(bad)
(bad)
inc
pop
push
retf
daa
lods
lock
xchg
cmc
dec
dec
xchg
mov
and
push
sub
rol
gs
retf
hlt
xor
xchg
loop
or
inc
cmps
out
and
lea
pop
cmps
jg
rcr
retf
sub
dec
cdq
push
xchg
daa
ror
bndldx
movs
repnz
adc
pusha
sti
sti
add
adc
ret
mov
cmp
mov
loope
push
mov
ins
rol
dec
push
jns
inc
ret
push
jle
repnz
pop
mov
cli
add
push
inc
fild
les
jl
xor
mov
cmps
addr16
cmp
repz
test
imul
and
fwait
cmp
outs
ja
aas
stos
adc
mov
daa
ja
mov
jbe
movs
jno
lds
sar
mov
cmps
sub
add
pop
mov
ins
test
mov
xchg
gs
arpl
xchg
dec
cmp
int
out
lock
ja
neg
movs
inc
call
xchg
mov
jl
lds
inc
cmp
push
adc
cld
sbb
ds
pop
inc
lock
cmps
sbb
jbe
mov
pop
xchg
call
fstp
or
inc
imul
ss
cmp
push
sbb
or
push
adc
and
cmc
stos
shr
and
in
dec
gs
test
ret
bound
jo
or
cmp
and
jbe
push
and
retf
pop
int3
xchg
cwde
mov
sub
xchg
test
mov
ins
pop
or
sahf
call
dec
inc
aaa
inc
idiv
sbb
mov
out
mov
inc
or
add
mov
adc
inc
psubw
repz
add
call
movs
push
jmp
in
je
es
add
cwde
mov
jb
xchg
int
icebp
pushf
push
lahf
test
dec
adc
enter
cld
jle
out
cmc
jbe
pop
mov
xchg
add
pop
pop
lahf
jns
mov
pop
les
addr16
ret
pop
ja
push
repnz
popf
cmps
cmps
adc
loopne
lahf
jmp
ret
and
mov
mov
dec
fadd
sub
js
cmps
aad
and
retf
mov
dec
xchg
sti
xor
sub
(bad)
jge
push
mov
or
or
cdq
mov
mov
bound
mov
and
aam
mov
jno
iret
cmp
hlt
add
fcom
push
sub
adc
push
sub
or
mov
cmp
loope
xchg
mov
adc
ret
sub
ja
xchg
fld
out
fcomp
jns
adc
or
fmul
repz
iret
movs
jmp
jmp
mov
lea
(bad)
(bad)
fstp
dec
sar
ins
adc
and
imul
mov
mov
lds
or
or
sub
and
retf
std
xor
push
pop
lods
inc
and
jbe
push
shl
adc
jle
movs
xchg
inc
push
inc
leave
dec
es
dec
mov
out
xor
cmp
lods
clc
jmp
xor
call
lods
test
mov
fadd
push
ret
lea
neg
cdq
and
push
rcr
adc
push
cmp
dec
push
hlt
cmc
push
lds
pcmpgtd
rcr
int3
jne
dec
mov
inc
xchg
adc
pop
pop
fsubr
mov
mov
fstp
xor
inc
pop
inc
lahf
jnp
ror
jb
lock
in
mov
jno
cdq
mov
inc
loop
jmp
xchg
add
mov
push
pop
push
cli
cmc
aam
div
xchg
out
and
cmp
xchg
mov
mov
inc
lock
popf
xor
pop
mov
scas
add
idiv
dec
inc
pop
fadd
cmps
adc
sub
push
scas
shr
imul
inc
test
jb
mov
push
pushf
cmp
stos
arpl
xlat
jne
daa
mov
mov
(bad)
in
xor
push
int
test
dec
or
(bad)
in
dec
pop
mov
xor
xchg
addr16
xor
and
pop
leave
mov
sub
mov
or
push
les
imul
lods
out
cmc
or
dec
adc
je
in
xchg
xor
push
dec
in
pop
add
repz
shr
or
clc
sbb
pop
push
enter
pop
xchg
aad
les
lods
(bad)
mov
dec
sub
cmp
je
push
jnp
sbb
push
out
mov
std
out
into
std
fiadd
iret
sub
out
jae
push
mov
(bad)
cli
or
push
adc
jecxz
dec
mov
jo
dec
inc
and
mov
(bad)
or
mov
mov
clc
sub
push
in
or
cmp
push
fnsave
add
xchg
cmp
push
ins
and
daa
jmp
sub
jmp
mov
pop
xchg
xor
mov
sub
mov
xor
in
mov
jp
loopne
in
lock
pop
and
add
cs
mov
dec
bound
ficomp
out
fst
jmp
fisub
or
outs
imul
rol
jle
cmp
ror
(bad)
push
neg
(bad)
out
lock
jne
sbb
mov
xor
push
dec
mov
push
push
fisttp
cli
sti
cmp
mov
arpl
pop
xor
and
and
popa
lahf
sbb
scas
mov
mov
mov
call
xor
jne
popa
div
loope
add
cli
sub
ds
retf
scas
fist
ins
sub
push
dec
mov
pop
cli
cwde
scas
push
xchg
pop
cwde
xchg
mov
xor
imul
sbb
dec
sub
cwde
retf
cmps
jb
inc
cmp
sbb
cwde
xlat
jae
xor
xchg
in
sub
mov
add
cmp
imul
sub
xchg
das
sbb
std
call
pop
sub
cmc
in
test
or
sbb
or
mov
cld
xchg
shr
dec
rcl
scas
stos
rol
mov
imul
xor
scas
jge
sub
pop
pushf
lea
fnstenv
sahf
(bad)
movs
push
ret
cs
add
sub
into
test
repnz
aaa
jecxz
mov
and
add
add
jb
out
mov
xor
adc
xchg
call
cmovg
pusha
jmp
dec
mov
and
sub
push
loopne
mov
and
pop
xlat
stos
xchg
aas
das
mov
aad
sahf
scas
sub
inc
retf
sti
jmp
int
mov
loop
int
fst
cmps
add
(bad)
mov
std
adc
and
cmp
mov
test
in
sahf
pop
xor
mov
div
call
jb
push
dec
mov
out
mov
xchg
sahf
lods
(bad)
imul
mov
lods
jecxz
pop
adc
stc
cmp
mov
cmp
cmp
je
lds
and
aaa
call
xchg
movs
ss
push
repz
inc
inc
out
mov
arpl
pop
dec
mov
push
inc
popa
fwait
hlt
mov
movs
mov
jge
mov
je
test
stc
in
jecxz
add
test
sub
cdq
stos
mov
icebp
or
xor
xor
out
xchg
push
push
ficomp
cmc
mov
inc
fistp
fcmovnbe
push
or
push
pop
loop
cli
loopne
loop
push
jns
lods
dec
sahf
mov
(bad)
ret
adc
dec
pop
retf
les
jns
retf
hlt
adc
push
idiv
imul
sub
aad
mov
fcmovu
lods
inc
mov
xor
jl
inc
jp
inc
jle
(bad)
push
cmp
or
mov
shr
ins
sbb
pop
jl
shl
add
push
cmp
mov
imul
je
sbb
les
out
jl
daa
retf
sub
jp
sbb
adc
mov
fwait
iret
mov
repnz
pop
idiv
sbb
out
pusha
add
cmc
int3
cmp
sub
ja
rol
xchg
dec
mov
mov
sahf
xchg
aad
test
dec
pop
mov
neg
jne
lea
xor
and
retf
jo
(bad)
test
lea
mov
or
in
fstp
jbe
mov
ficomp
and
push
stos
sbb
test
in
jg
push
mov
jmp
movs
stc
xor
xchg
inc
call
add
icebp
mov
mov
scas
mov
mov
js
retf
sbb
sub
pop
add
iret
and
xchg
mov
dec
arpl
cmc
in
jb
mov
outs
fwait
pop
imul
ja
in
movs
sbb
and
xchg
xor
mov
popf
adc
sbb
call
addr16
das
fxch
int
push
pop
add
cli
inc
jecxz
mov
and
mov
or
sub
ins
cmc
imul
fnstenv
arpl
es
push
push
lds
outs
mov
dec
xlat
cmp
addr16
int
mov
cmp
jo
inc
cmp
into
sti
xchg
test
cmp
call
ss
jb
sbb
mov
mov
inc
pop
popa
cdq
xor
pop
push
adc
pop
aam
sub
mov
jnp
push
mov
out
or
lods
popa
mov
test
in
lock
pop
ins
stc
pop
push
add
mov
shl
add
(bad)
outs
pop
mov
push
sub
mov
xor
fsubr
xor
or
pop
adc
imul
dec
cmp
ds
sub
mov
psrlq
movups
jo
div
ins
in
andnps
jecxz
add
mov
lds
sub
bound
int
in
or
int3
jecxz
adc
adc
(bad)
bound
test
lds
ja
inc
dec
call
das
mov
xor
xchg
dec
out
mov
sub
test
mov
xchg
or
jle
and
add
add
lea
pop
(bad)
mov
jns
xor
push
push
(bad)
inc
lods
lahf
mov
and
mov
xchg
push
pop
mov
cmps
cmp
repz
mov
xchg
mov
inc
mov
movs
sbb
push
pop
jbe
jns
mov
inc
mov
arpl
not
jge
fs
stos
push
push
adc
ja
movs
into
bound
movs
mov
push
pop
aad
sbb
inc
jg
(bad)
jmp
cmp
icebp
stos
cmp
outs
and
or
jne
jp
sub
clc
repz
rol
lds
pop
add
test
stos
popa
push
in
sub
dec
mov
adc
push
inc
mov
dec
imul
mov
shl
aam
xchg
cld
add
jno
ins
push
cmp
mov
or
mov
pop
xor
mov
xlat
xchg
(bad)
pop
pusha
xchg
dec
pushf
ds
popf
fcmovb
outs
fdivr
jnp
cmps
pcmpgtb
test
cmc
imul
ja
popa
bnd
bound
test
xor
aad
mov
sbb
or
in
iret
pop
bnd
ja
jb
sar
cld
ror
xor
imul
adc
cld
mov
xor
(bad)
mov
mov
in
and
fistp
mov
es
popf
add
scas
dec
mov
push
shr
lock
sub
leave
je
xlat
(bad)
sub
dec
xchg
or
xor
and
ror
lods
pop
loope
test
ret
lods
out
inc
mov
jg
jecxz
sub
sub
imul
jge
mov
jl
push
pop
push
xor
xor
jae
sbb
add
sub
pop
setns
test
sub
sub
dec
out
imul
(bad)
mov
push
sub
mov
stos
cli
cld
xor
pop
mov
leave
xchg
sub
mov
shl
mov
jae
jno
or
jno
push
mov
stc
inc
or
push
clc
repnz
pop
stos
(bad)
jo
(bad)
shr
nop
leave
mov
rep
into
push
nop
outs
pop
je
int3
retf
mov
sub
jmp
ja
pop
pop
cmp
mov
inc
das
out
outs
aaa
ds
mov
stos
call
xchg
enter
popa
mov
and
imul
call
sub
mov
xchg
mov
leave
aad
pop
test
stos
(bad)
lea
je
dec
jg
push
add
jmp
inc
out
call
push
call
adc
and
into
xor
jmp
call
push
and
cmps
iret
cmp
xrelease
cmps
outs
pop
or
push
push
push
mov
push
jle
add
call
in
mov
xchg
in
xor
pushf
es
or
clc
cmp
stos
in
inc
mov
inc
pop
mov
xor
mov
call
pextrw
and
adc
(bad)
mov
sbb
mov
fist
pop
daa
or
pop
push
cmp
pop
pop
ss
push
inc
add
inc
add
in
inc
fcom
xchg
(bad)
pushf
ins
loop
sub
add
pop
dec
inc
leave
lds
xchg
dec
cmp
jno
mov
sub
idiv
push
mov
xor
repnz
sbb
sub
dec
sub
xchg
ret
ja
cmp
out
leave
movs
xchg
loopne
imul
cld
cwde
push
aaa
jo
and
js
test
out
pcmpgtb
mov
sbb
das
jb
rol
mov
jl
sbb
pop
mov
pushf
or
adc
fs
dec
sub
sbb
lds
retf
jo
int
outs
popf
mul
iret
rol
movs
or
es
test
jbe
xchg
push
in
xchg
jmp
dec
(bad)
pop
icebp
and
data16
fsubrp
rol
push
aaa
sub
test
fld
mov
stc
and
shr
push
out
xor
mov
or
call
movs
sbb
loopne
inc
inc
sti
and
popf
aas
not
or
ret
and
push
sub
lea
lea
cwde
inc
mov
push
jmp
stos
mov
push
mov
(bad)
mov
enter
jno
mov
pop
jge
inc
or
mov
cmp
stos
fmul
cs
jl
push
pop
xor
mov
xor
pop
xchg
imul
push
push
stos
xor
mov
pop
xor
xlat
push
in
ins
and
sub
scas
pusha
xor
mov
gs
mov
stc
dec
push
mov
std
pop
pop
mov
xchg
jne
into
push
pop
and
adc
jmp
clc
mov
mov
cmp
mov
pop
xchg
in
test
inc
jnp
ret
mov
inc
(bad)
xor
mov
retf
cmp
iret
or
or
aas
sbb
pop
(bad)
popf
lock
xor
or
push
mov
xchg
add
rcl
jge
sbb
cdq
and
inc
xchg
shl
xchg
mov
jmp
jb
shl
xor
adc
fldcw
push
and
mov
sbb
pop
(bad)
push
das
ret
cs
popf
push
es
mov
pop
pop
aaa
inc
cmp
xchg
popa
xlat
dec
lock
mov
je
retf
test
and
gs
pop
push
xchg
ja
adc
dec
sbb
ficom
mov
xchg
mov
push
cdq
inc
add
imul
cmp
adc
in
loopne
fs
ins
pop
sbb
pushf
fistp
adc
pop
shl
mov
scas
jb
out
pop
gs
sar
icebp
aaa
push
and
(bad)
in
ins
loopne
shl
lds
jle
repnz
mov
push
in
movs
sar
aas
add
imul
fs
lea
sbb
adc
sub
loopne
jo
test
mov
dec
push
sti
or
stos
lods
jg
jecxz
(bad)
lds
jle
sbb
int
into
retf
xor
pushf
(bad)
cmp
dec
pop
arpl
jmp
ret
(bad)
mov
ja
(bad)
pop
repnz
push
mov
or
int3
jno
ror
or
inc
xor
cs
cmp
inc
mov
or
push
call
or
dec
pop
sub
sbb
retf
dec
adc
and
popa
inc
push
ja
fbstp
dec
or
fisub
inc
rol
ffree
fcom
xchg
mov
sub
xchg
loope
ins
(bad)
in
fdiv
jecxz
jmp
call
dec
sbb
mov
rcr
and
jl
aas
inc
inc
ror
call
in
ror
pop
popa
sub
xor
das
xchg
stos
mov
mov
iret
inc
sub
cmps
stos
inc
add
dec
xor
or
fbstp
imul
pop
inc
sub
mov
leave
in
jbe
mul
lods
add
or
int
test
lea
and
xor
ds
popa
fiadd
ret
push
shl
fcomp
test
push
shr
push
aad
pop
movs
sbb
dec
xlat
push
and
dec
sbb
pop
cmc
push
and
dec
test
ret
xor
in
sti
or
scas
mov
out
dec
loopne
sti
cmp
cs
jae
cmp
jg
lods
xchg
movs
xor
or
ret
ja
scas
cdq
or
jb
in
test
adc
xchg
push
sub
repnz
or
mov
add
mov
and
in
push
jmp
cwde
cmp
jno
stc
das
xor
loopne
adc
cmc
mov
pusha
and
adc
hlt
(bad)
cli
popa
and
imul
lods
xlat
(bad)
cmp
sbb
mov
rol
loope
mov
add
sbb
dec
cld
push
stos
inc
dec
into
jne
mov
lds
ds
xlat
lods
jmp
je
pop
ja
stos
adc
pop
mov
sbb
je
out
adc
in
inc
mov
movs
fdecstp
mov
xlat
jge
push
scas
or
std
ss
dec
inc
mov
cmp
xchg
and
lea
div
cmp
cmp
or
rcl
xor
xor
loop
xor
xchg
push
in
pop
xlat
shl
fiadd
std
(bad)
stos
addr16
rcl
jmp
test
ds
test
leave
inc
xor
mov
(bad)
out
push
push
dec
and
sbb
or
xchg
or
fadd
cwde
sti
stc
int
les
int3
(bad)
sti
xchg
pop
xchg
loope
and
or
cmp
sbb
in
test
(bad)
cmp
push
shr
hlt
cs
(bad)
lea
sbb
outs
iret
fcom
pop
cmp
lahf
rol
data16
sbb
mov
imul
inc
repz
arpl
mov
cmp
call
mov
xchg
cdq
jl
les
and
inc
push
(bad)
loop
and
outs
cmp
dec
not
cmp
ins
mov
and
push
mov
push
out
mov
push
rol
daa
and
hlt
(bad)
bnd
popf
bound
mov
and
scas
cmc
adc
xchg
mov
or
loopne
jmp
loop
test
(bad)
imul
jne
mov
sub
jns
adc
dec
jl
leave
ret
xchg
push
lahf
into
retf
mov
mov
scas
mov
inc
add
adc
xchg
jne
xchg
push
repnz
imul
mov
sub
jge
xor
es
lahf
jge
nop
repnz
mov
ins
and
mov
push
shl
cmp
fcom
mov
add
xor
inc
ja
inc
pop
test
pop
and
lods
mov
cmp
mov
jmp
cdq
pop
cmp
(bad)
in
int3
mov
or
ret
es
inc
sbb
fnstcw
rol
das
mov
rcr
gs
clc
cmp
sub
xchg
out
shl
sahf
inc
jae
lods
pop
xor
pop
adc
shl
aad
js
data16
lods
xlat
mov
xor
test
stc
xchg
and
mov
retf
pusha
pop
cmp
or
ja
dec
lods
mov
(bad)
dec
lea
(bad)
hlt
nop
movs
std
mov
and
push
fisubr
xlat
pop
or
pushw
into
or
lea
pop
xor
inc
nop
ror
fs
(bad)
in
imul
bound
stc
add
xchg
jl
test
pop
mov
pop
jno
sbb
stos
lods
push
inc
mov
pop
inc
dec
pop
cdq
xor
mov
jo
cld
dec
stc
js
fist
mov
mov
out
or
cli
mov
sbb
mov
adc
out
pop
jae
rcl
ret
lea
xchg
rcl
inc
ror
dec
mov
lods
not
cli
push
sahf
inc
sbb
add
jno
movs
ins
mov
call
jecxz
repnz
sbb
jl
push
fimul
lods
je
(bad)
(bad)
ins
js
sbb
bound
fmul
jmp
fsub
push
jl
push
and
retf
xchg
js
dec
pushf
pop
mov
cwde
pop
rcl
lock
xchg
push
xchg
mov
std
cld
dec
(bad)
or
and
sub
leave
push
in
imul
in
push
xchg
inc
fisttp
out
aad
lea
push
(bad)
sti
and
mov
out
sub
call
and
sbb
(bad)
or
gs
loop
adc
sbb
mov
add
xchg
pop
sub
hlt
add
inc
repnz
sti
rcl
push
xchg
jmp
xchg
call
leave
pop
push
int
sbb
cmps
movs
pop
fs
jmp
sbb
cmp
stc
stos
mov
movs
loope
cmp
repz
mov
sub
imul
jns
mov
jns
inc
inc
movs
pop
inc
sbb
mov
xchg
sbb
lods
test
jmp
and
mov
call
cmc
mov
dec
leave
bound
imul
xor
mov
(bad)
nop
cmp
sub
xor
int3
mov
mov
rol
mov
mov
jle
push
xlat
jecxz
jmp
or
les
mov
jae
jb
popf
sbb
mov
sub
cmps
mov
std
frstor
cdq
xor
fist
leave
or
or
or
cmp
cmc
clc
loope
mov
cmps
mov
xchg
data16
(bad)
stc
int
fisttp
add
adc
sub
adc
xor
xor
(bad)
xor
dec
je
add
jno
mov
mov
loopne
xor
(bad)
xor
call
cmp
pop
xor
xor
push
mov
adc
lds
or
or
popa
cmp
sub
add
push
jl
inc
imul
push
cmp
sub
popa
jae
pusha
xor
xchg
fistp
loopne
out
jmp
cld
sbb
sub
pop
arpl
jmp
ret
scas
not
test
or
push
dec
ins
xor
adc
xchg
add
add
(bad)
jo
and
(bad)
and
pop
into
dec
cmp
or
mov
add
(bad)
not
or
ret
adc
dec
xchg
inc
mov
cdq
test
cmp
push
push
leave
cmp
jmp
mov
jp
icebp
or
outs
pop
scas
sub
cmps
pop
mov
test
or
mov
adc
lahf
pop
les
mov
jo
push
pop
and
pop
sar
(bad)
or
inc
out
and
into
popf
sub
pop
fsubp
jecxz
popa
movs
daa
sub
aam
fs
std
rol
and
aad
xchg
mov
push
sbb
(bad)
data16
adc
jns
shr
mov
adc
fs
or
jns
inc
imul
jae
fs
arpl
in
adc
jmp
adc
add
(bad)
xor
mov
int
push
jecxz
lock
ja
jecxz
pop
push
fisttp
inc
(bad)
push
jns
adc
out
or
loop
loope
retf
or
push
fsub
push
adc
jo
call
stos
inc
xchg
mov
xor
mov
fistp
sbb
jle
push
mov
rol
lahf
mov
leave
cmp
sub
pop
inc
mov
xchg
aad
cmp
sbb
pop
lsl
enter
mov
fsubr
lods
je
mov
pop
sar
cmp
iret
sub
inc
adc
sbb
adc
xchg
test
inc
or
sub
hlt
imul
inc
or
cdq
pop
mov
ins
mov
stc
mov
loopne
call
dec
in
outs
push
(bad)
aad
aam
jnp
mov
pop
dec
inc
dec
pop
push
out
mov
outs
pusha
jl
loope
out
inc
data16
lahf
mov
cmp
vzeroupper
cld
and
movs
xchg
pop
push
dec
cmps
jecxz
ficom
jae
inc
inc
rol
repz
push
push
xchg
push
rol
xor
in
lods
(bad)
mov
cmp
iret
inc
and
repz
repnz
test
aas
jg
sbb
sbb
ins
sar
sbb
cmp
jmp
mov
repz
fild
lods
imul
loop
call
or
xchg
ret
js
add
lock
icebp
push
dec
adc
or
add
std
leave
cli
outs
(bad)
icebp
iret
adc
stos
mov
mov
add
int
clc
xchg
cmc
out
push
dec
in
rcl
(bad)
aaa
pop
enter
push
sub
scas
dec
mov
ret
inc
inc
repnz
shl
movs
cmp
dec
in
fisttp
cmp
dec
mov
popa
mov
test
jbe
cwde
mov
aaa
dec
lods
push
shr
xor
push
xchg
mov
inc
ja
stc
retf
sar
push
push
es
cld
or
push
and
fild
dec
leave
push
int
es
adc
div
push
push
push
shl
and
ret
les
retf
out
inc
pop
xchg
fcomp
bound
loope
loope
sar
adc
icebp
stos
adc
sub
xchg
mov
mov
cli
(bad)
fstp
inc
dec
pop
mov
adc
push
push
dec
cmp
es
in
push
mov
(bad)
aaa
push
mov
adc
out
je
pop
and
in
jnp
push
je
jnp
mov
jl
adc
ds
mov
fdivr
scas
int
ds
push
into
sbb
mov
or
inc
dec
dec
xchg
stc
lods
sub
cmp
add
das
cli
fidiv
push
or
movs
lds
pushf
xchg
out
push
mov
mov
ins
cmp
mov
mov
mov
loop
or
mov
lods
pop
adc
outs
add
sbb
sbb
sbb
sbb
and
mov
and
jp
scas
test
mov
out
pop
inc
dec
pop
sbb
cmp
pop
ret
push
test
pop
sub
sbb
call
leave
movs
push
xor
stos
cmps
xlat
lock
jns
xor
out
(bad)
jns
mov
in
mov
xor
in
push
and
arpl
pop
cmp
inc
sbb
dec
(bad)
or
loop
inc
add
or
jae
mov
sbb
imul
out
pop
mov
das
out
jns
(bad)
mov
fdivr
outs
pop
js
xchg
mov
mov
fwait
mov
pop
mov
mov
pop
cmps
mov
repz
push
mov
sub
push
push
sub
fmul
gs
sub
jg
xor
popa
and
jl
mov
not
nop
xchg
mov
mov
jmp
dec
aam
gs
xchg
popa
sar
jg
lahf
daa
mov
pop
(bad)
jge
(bad)
xor
add
inc
xchg
xor
fld
cmp
in
leave
(bad)
fdiv
stos
scas
inc
sub
out
sar
aaa
fild
pop
xchg
sar
adc
cmps
call
mov
pop
and
mov
inc
retf
leave
or
daa
sti
dec
jge
push
jb
aad
xor
leave
sbb
lahf
and
(bad)
test
out
arpl
cmps
mov
jle
add
fwait
retf
jne
fiadd
int3
xor
int
push
pop
cmp
retf
mov
neg
loopne
or
xchg
add
cmc
and
pop
sti
rcr
js
shr
sub
int
pop
add
popf
mov
les
pop
aam
sub
mov
sti
cmp
mov
das
cli
sbb
ds
data16
sbb
call
mov
xor
shr
call
retf
dec
inc
pop
hlt
fwait
dec
bswap
mov
mov
and
nop
jne
add
test
dec
test
cmp
ja
icebp
cmps
repnz
xchg
fnstenv
push
cmp
pop
sub
iret
fsubr
pop
js
mov
les
adc
ret
aad
neg
jge
add
mov
lods
jg
lea
mov
cdq
cli
das
cmp
mov
fimul
(bad)
cld
add
mov
out
pop
imul
not
pop
jge
pop
repnz
push
or
not
or
pop
test
sub
mov
bound
add
aad
mov
sub
es
out
push
out
dec
jnp
cld
pusha
mov
dec
popf
sbb
dec
mov
cdq
or
mov
add
or
mov
jo
sub
mov
and
push
xor
iret
sbb
pushf
jl
jno
loopne
push
xor
leave
scas
loope
mov
push
xchg
neg
fnstcw
push
repnz
call
loope
inc
inc
(bad)
ficomp
ins
in
adc
repnz
adc
push
fmul
inc
repnz
fwait
mov
imul
scas
fisttp
int3
mov
and
(bad)
clc
daa
xchg
sbb
retf
xchg
push
inc
add
gs
cmp
jae
outs
xchg
jb
dec
pop
push
mov
out
cld
enter
gs
std
pop
or
sahf
loop
jns
inc
sub
stc
mov
outs
cdq
daa
cmps
or
test
fwait
sti
scas
pop
pop
mov
pop
loope
jge
add
add
ficomp
inc
xchg
xchg
shl
inc
jb
sub
adc
jl
addr16
fwait
jnp
adc
ret
sbb
mov
mov
mov
ds
popf
and
jo
jp
sub
adc
xchg
aad
test
push
(bad)
sub
mov
fnstsw
adc
push
in
cli
adc
sti
(bad)
mov
jno
fwait
jns
aaa
push
cmc
aas
adc
pop
push
shl
in
mov
mov
sar
sub
stos
(bad)
xor
jnp
js
popa
push
scas
ins
mov
dec
call
das
dec
fidiv
dec
push
jne
fldcw
imul
enter
jne
das
mov
fstp
(bad)
mov
fcomp
dec
(bad)
in
mov
cmp
imul
or
jp
retf
sbb
add
or
jnp
test
add
add
sbb
jo
jnp
xchg
xchg
test
sub
test
adc
loope
mov
jmp
cmp
cdq
scas
sub
fs
dec
sahf
in
push
jl
mov
fmul
push
aas
stos
jp
add
inc
push
mov
shr
(bad)
cmp
in
or
les
fs
lods
sub
dec
mov
shr
xor
and
ss
aad
imul
sub
ficom
dec
or
iret
xchg
test
sti
jb
and
mov
push
mov
clc
mov
fld
jne
movs
je
jmp
dec
pop
es
sbb
rcr
xor
stos
xchg
push
int3
and
and
loop
sub
loope
push
dec
pop
test
xor
test
mov
mov
jbe
mov
sub
fs
cmps
aad
jmp
cld
fcom
cmp
mov
sbb
xor
xchg
inc
sar
sub
mov
ret
or
jge
es
pop
(bad)
ds
ficomp
sahf
or
fucom
mov
add
pushf
imul
add
ret
inc
mov
inc
and
fbstp
ret
fwait
inc
add
and
mov
or
jbe
cmp
in
dec
and
aam
pop
shl
cmp
pop
and
retf
push
mov
or
push
movs
mov
cmps
cmc
scas
outs
sub
sbb
sbb
push
push
ds
jl
outs
ins
inc
or
push
popa
mov
inc
xchg
adc
add
dec
iret
xor
or
stc
or
clc
mov
lods
es
test
dec
dec
(bad)
push
mov
jle
push
xor
fcomp
jecxz
sbb
adc
sub
push
js
adc
mov
xor
sbb
pop
mov
out
shl
jne
sbb
in
mov
jl
call
cmp
in
loop
test
popf
bound
retf
fsub
in
mov
fdiv
aaa
jecxz
dec
lock
int
cmp
add
dec
lods
pop
inc
xor
mov
das
push
and
ins
outs
push
jnp
pop
pop
cli
push
clc
ror
mov
adc
mov
movs
stc
pop
rol
mov
sbb
fwait
cmp
outs
bound
loop
cmp
and
adc
aas
pop
sub
push
rol
out
pop
pop
popa
dec
cli
loope
in
scas
aaa
retf
es
popa
clc
add
shl
sub
shr
hlt
adc
xor
popf
dec
add
int3
loope
sbb
sub
cmc
jo
mov
sbb
xchg
and
cmps
push
jne
ret
mov
test
pop
js
sti
mov
adc
aaa
cmps
outs
mov
pop
inc
jecxz
jmp
adc
push
test
(bad)
es
mov
xchg
repnz
shl
cmps
movs
cs
jp
into
pop
div
(bad)
pop
or
fidivr
mov
vhaddpd
xchg
cmp
icebp
sbb
sti
outs
xchg
stos
inc
outs
adc
mov
xchg
dec
ss
aas
xchg
pop
push
sbb
cli
add
sbb
dec
ins
xlat
mov
inc
mov
pop
in
call
xlat
or
jno
push
mov
lds
or
ror
pop
je
loopne
and
mov
loope
xchg
or
mov
dec
rcr
jmp
xor
add
arpl
ficom
test
out
inc
stos
xchg
loop
and
out
sub
ret
hlt
fsubp
pop
movs
in
sbb
mov
xor
dec
fst
iret
sbb
psubsb
shl
and
inc
stos
into
push
adc
push
and
cmp
(bad)
repz
leave
outs
cmc
pop
adc
sti
and
push
sub
xchg
clc
cli
adc
jge
mov
nop
cmc
cmc
sbb
lea
cmp
shl
pop
adc
ins
out
ins
popf
nop
pop
jae
xchg
icebp
add
add
out
jmp
jmp
and
into
add
repnz
(bad)
enter
scas
mov
gs
sbb
jbe
lods
jle
aaa
sti
sti
mov
es
cs
xchg
movs
mov
repz
sahf
mov
cmp
lock
push
and
push
aad
shl
jnp
cld
cmp
repz
sub
int
(bad)
fdivp
nop
xchg
frstor
leave
sbb
fwait
xchg
fld
sub
push
ror
jno
inc
pop
fstp
sbb
pushf
lods
pusha
push
mov
(bad)
dec
mov
pop
data16
data16
cmp
jp
je
sub
xor
push
inc
push
(bad)
jecxz
nop
into
sbb
rcr
cmps
and
loop
jle
(bad)
push
adc
xor
xchg
je
inc
(bad)
mov
sbb
test
cmp
paddw
cmp
mov
mov
cmp
push
popw
daa
imul
pop
out
add
adc
std
mov
inc
sbb
rol
jo
push
xor
cmove
(bad)
dec
mov
popa
adc
lods
sub
push
scas
xchg
stos
push
jo
xchg
jmp
arpl
inc
sbb
lds
adc
test
stc
xchg
mov
scas
imul
jne
(bad)
push
adc
leave
stc
and
cmp
loopne
pop
fstp
sub
aaa
cwde
or
dec
xchg
dec
or
push
pushf
cmc
adc
out
adc
push
or
retf
out
mov
in
in
pop
and
jbe
icebp
or
jb
add
loop
scas
inc
ror
not
stos
(bad)
rol
and
pop
lock
and
add
neg
out
cli
xor
mov
sar
mov
cmc
fist
cld
mov
pop
jmp
sub
pop
mov
aam
out
ds
aad
aam
(bad)
pop
dec
sbb
mov
jns
pop
and
inc
call
inc
cmc
or
fimul
inc
mov
sbb
pop
retf
test
xlat
rcr
jne
push
lahf
inc
mov
test
(bad)
in
cmp
mov
scas
inc
mov
cmps
test
fnstenv
dec
fist
or
js
push
push
aad
pop
jle
adc
xchg
push
retf
cmp
aam
in
test
test
(bad)
(bad)
test
jmp
pop
out
cmc
mov
sub
dec
retf
rcr
mov
adc
retf
jecxz
cmp
push
jecxz
push
ret
and
sti
stc
mov
popf
mov
scas
push
pop
retf
inc
dec
dec
cmp
push
dec
cmp
mov
scas
repnz
lds
pop
push
test
push
in
sub
xchg
je
fist
fidivr
mov
popa
cmp
ss
mov
push
inc
xlat
outs
ror
xor
jb
xchg
push
mov
jnp
dec
sar
mov
test
loop
cmp
dec
or
fwait
mov
xor
sub
xchg
fwait
pop
add
inc
out
push
xchg
add
aas
popa
mov
inc
lahf
fist
adc
mov
ret
rcl
sub
leave
movs
retf
iret
xchg
loopne
int
xchg
inc
pop
cwde
jne
adc
fwait
test
je
sbb
cmp
or
push
xor
and
(bad)
cmc
icebp
inc
add
mov
cld
or
vpshaw
int
add
sbb
(bad)
dec
int
pusha
cmps
jmp
out
lea
adc
ss
cmp
mov
jae
add
mov
pop
push
or
inc
push
cld
push
xchg
xor
aas
inc
(bad)
mov
aam
mov
outs
(bad)
das
ins
popa
popa
or
gs
jns
pop
sub
xor
jae
rcl
jmp
mov
repz
xor
pop
data16
push
inc
test
push
fidiv
out
push
sbb
xor
pop
(bad)
cld
in
mov
(bad)
hlt
mov
in
lahf
retf
cdq
gs
mov
test
jbe
or
lds
in
push
imul
mov
in
mov
iret
ror
call
pop
add
inc
mov
cwde
sub
jo
daa
xchg
js
popfw
mov
pop
fadd
jbe
aas
add
in
popf
jl
mov
jns
pop
jne
pop
icebp
pop
pop
mov
and
jo
hlt
cdq
adc
adc
daa
mov
cld
adc
sbb
dec
mov
inc
push
(bad)
stos
xor
sub
inc
cdq
outs
jo
sub
data16
hlt
lods
ins
inc
pop
mov
dec
cmp
fisubr
dec
out
mov
adc
sub
mov
scas
pop
into
mov
mov
fchs
push
lock
lahf
jecxz
mov
aad
mov
test
cmps
cmp
sbb
fwait
repnz
mov
ret
mov
outs
add
scas
repnz
inc
sub
je
pop
popa
(bad)
mov
adc
lods
fsub
lea
lods
ret
cmps
mulps
fst
mov
int
gs
jg
aaa
mov
cmp
xchg
add
push
dec
ins
loopne
scas
and
ffree
or
iret
fldenv
imul
xchg
pushf
pop
mov
sub
mov
imul
mov
int
jns
cmp
ja
mov
jo
ins
and
pop
clc
fbld
dec
jle
add
mov
jmp
cmp
or
popf
rcl
nop
cmp
adc
out
loope
sub
je
inc
fcomp
inc
push
movs
imul
in
mov
mov
pop
push
sbb
aam
clc
jae
and
cli
cmp
inc
jge
jecxz
mov
sete
jno
retf
and
push
and
and
sbb
imul
cli
xchg
repnz
jecxz
vpcmpgtb
movs
sub
xor
outs
xor
imul
loope
and
es
mov
mov
jg
arpl
cmp
mov
mov
sub
sahf
stos
mov
icebp
jle
sub
(bad)
test
xlat
dec
mov
or
ja
jp
data16
add
loopne
adc
mov
shl
mov
xchg
fwait
cmps
xlat
add
sbb
push
call
leave
cmp
or
mov
mov
in
pusha
adc
(bad)
stos
outs
into
into
mov
xchg
scas
push
imul
mov
in
shl
fs
pop
ss
hlt
dec
xchg
cmp
xchg
jge
and
ss
pop
aas
int3
dec
(bad)
pop
or
pushf
mov
inc
sbb
inc
loope
push
mov
sbb
(bad)
out
loopne
cmp
stos
or
jns
nop
in
dec
retf
in
(bad)
sti
aad
mov
jecxz
add
add
scas
ins
xchg
cmp
stos
jl
(bad)
cmps
mov
pop
nop
rcr
xchg
pop
or
loope
cld
and
loopne
jns
sub
cmps
pushf
xchg
push
je
jne
in
frstor
repnz
loope
jmp
mov
push
sti
addr16
das
push
mov
or
xor
scas
pop
and
in
enter
aas
adc
pop
lock
ret
imul
arpl
push
(bad)
pop
icebp
push
lods
push
fnstenv
cmp
test
jle
stos
int
xchg
stc
mov
pop
or
xor
cli
inc
pop
mov
ins
push
mul
add
inc
rol
mov
or
adc
inc
daa
push
fadd
ret
xchg
pop
mov
leave
mov
data16
into
and
mov
sbb
mov
(bad)
call
mov
lds
retf
or
push
xor
aam
adc
iret
mov
jl
xchg
add
arpl
scas
jns
mov
stos
adc
bound
cmp
xchg
lods
sub
jbe
loop
pop
inc
xchg
es
arpl
imul
sub
hlt
inc
(bad)
push
cmp
(bad)
int
stos
add
cmps
sbb
aas
imul
ror
jno
in
in
push
iret
mov
cs
mov
std
push
test
pop
out
xlat
mov
xor
loopne
cmp
rcl
jmp
mov
cwde
jle
jl
cmp
out
mov
mov
add
ds
xchg
inc
retf
imul
add
pushf
aas
(bad)
mov
movs
das
sahf
aaa
mov
test
popf
loop
xchg
sbb
repz
sbb
lods
movs
and
jmp
mov
pop
push
stos
mov
xchg
in
mov
mov
std
rol
bound
sahf
mov
out
nop
inc
sbb
(bad)
retf
icebp
out
xor
jg
pop
mov
push
or
mov
pop
out
jp
dec
push
stc
cmp
movs
out
push
in
adc
out
lea
cmp
retf
pusha
call
pusha
pop
jmp
xor
mov
(bad)
mov
hlt
cli
mov
dec
(bad)
leave
imul
dec
aad
lock
pop
mov
jae
sub
add
sbb
inc
jmp
mov
pusha
or
mov
or
in
sar
int
push
repz
bound
loope
repz
(bad)
dec
fnsave
shr
and
adc
popf
je
out
cmp
shr
mov
mov
mov
and
xor
sub
sub
std
nop
cmc
cdq
fdiv
push
add
stc
adc
mov
or
fcomi
in
pop
dec
inc
sub
sub
mov
push
pusha
push
push
movs
mov
das
mov
jl
pop
lods
cli
push
or
sub
aaa
cwde
push
jge
add
out
push
and
jne
ficom
adc
mov
inc
mov
aad
pop
mov
adc
or
push
dec
iret
int3
dec
test
sub
mov
dec
jecxz
ret
repnz
xchg
inc
pop
shl
pop
xor
mov
pop
enter
(bad)
out
cli
pop
cld
movs
test
dec
xchg
mov
sub
jp
or
push
jns
sahf
sbb
out
xchg
call
mov
fbld
and
cld
pop
push
mov
shr
stos
push
lahf
arpl
leave
or
mov
jle
shr
mov
nop
inc
jae
add
std
pop
fcmovnu
xor
xor
add
xchg
xlat
clc
inc
mov
(bad)
mov
sbb
pop
enter
arpl
sbb
pop
(bad)
sub
dec
popa
sbb
es
and
fwait
or
adc
add
cmp
jge
push
pop
pop
pop
pop
inc
or
(bad)
ror
in
sbb
pop
and
mov
inc
xor
lea
ss
pop
add
dec
gs
jp
jns
(bad)
fild
adc
retf
(bad)
out
das
add
inc
lods
jl
push
cld
(bad)
shl
and
fist
push
jecxz
mov
aas
xchg
adc
test
les
dec
push
(bad)
aas
lock
push
bound
push
xor
add
jge
popf
inc
xchg
aaa
push
jne
xchg
icebp
dec
rcr
fbld
jmp
fsubr
mov
(bad)
mov
jbe
cmp
outs
loop
xor
shl
mov
jb
sub
xlat
rcl
lds
imul
ins
(bad)
in
int
pop
jmp
add
div
pop
xchg
(bad)
sbb
inc
repnz
punpckhdq
jge
inc
imul
shr
je
inc
push
adc
fadd
mov
lods
adc
in
push
xor
dec
mov
cmps
lahf
pop
dec
mov
jmp
mov
inc
fucomp
mov
(bad)
addr16
inc
push
test
xchg
ror
pop
mov
xchg
pusha
jb
ficom
daa
pop
cmp
call
cmp
jbe
test
xchg
push
and
inc
cmp
mov
dec
inc
lods
jbe
cmps
xor
ins
cmps
or
add
lahf
mov
in
dec
cmp
pop
movs
es
inc
adc
bound
inc
dec
dec
or
test
fisttp
xchg
sahf
sub
xchg
jg
jmp
sub
rcl
inc
pop
loop
js
repnz
xchg
jmp
fst
cwde
fdiv
aaa
xchg
mov
inc
loope
mov
scas
scas
dec
mov
fisttp
mov
lock
lods
(bad)
dec
pop
call
movs
inc
cmps
add
mov
dec
lods
push
cmp
jno
mov
outs
icebp
ror
mov
cmp
adc
scas
and
fild
mov
cli
(bad)
pushf
pop
shl
mov
mov
aam
cmp
and
inc
je
and
out
nop
sub
rol
pop
jecxz
ins
scas
jg
test
addr16
sub
add
fwait
pop
test
push
mov
test
pusha
xchg
out
fs
mov
push
lea
xor
push
movs
cmp
scas
jp
pop
dec
mov
mov
xor
sub
xchg
je
xchg
xchg
jg
adc
mov
aad
leave
adc
out
xchg
xchg
mov
sub
pop
cmp
movs
pop
push
jno
(bad)
iret
push
mov
add
inc
call
jge
pop
iret
sti
mov
test
adc
test
sub
push
nop
cmps
aas
(bad)
fsubr
cmp
movs
add
aad
mov
fwait
jmp
mul
push
mov
pop
xchg
ins
xchg
mov
inc
and
call
inc
call
adc
in
mov
movs
adc
jmp
dec
add
ret
pusha
scas
add
rcl
adc
ja
xchg
jbe
cmp
mov
xchg
push
das
cmp
lods
cs
repz
or
dec
cmp
pop
rol
test
repz
jbe
xor
push
push
shl
mov
repnz
xchg
stos
adc
mov
imul
icebp
test
mov
iret
add
je
sbb
(bad)
inc
out
imul
jmp
sbb
xchg
test
loope
loopne
int
in
inc
mov
mov
shl
and
mov
jo
sbb
jg
sbb
dec
test
xchg
inc
pop
aam
pop
push
push
sub
mov
pop
xchg
or
pop
cmps
cvtps2pd
mov
xor
popf
cmp
ja
xchg
sub
imul
adc
mov
inc
sbb
mov
cs
jp
cmps
lds
shl
(bad)
out
mov
stos
ins
rol
adc
cmps
cmp
cmp
and
pop
ficomp
add
adc
mov
pop
xor
mov
jmp
add
mov
inc
and
add
neg
loope
idiv
lock
push
int
add
and
fisttp
clc
stos
pop
int3
adc
cmp
jbe
cld
mov
fs
loopne
xlat
push
stos
fcomp
adc
mov
xor
(bad)
inc
sbb
mov
push
mov
fild
mov
stc
call
pop
pop
cmc
dec
add
bound
or
push
mov
lea
mov
xchg
outs
(bad)
fisubr
adc
xchg
xchg
pop
in
jo
xor
xor
cmc
mov
mov
ins
jp
sub
push
ret
test
push
xor
sbb
pop
pop
imul
and
xchg
repnz
loop
xchg
sbb
xchg
sbb
iret
repz
pop
adc
or
and
adc
(bad)
daa
mov
cmp
sub
jmp
add
popa
sahf
add
pusha
bound
sub
movhps
mov
mov
mov
loope
sub
repz
int3
inc
xchg
(bad)
push
enter
loop
mov
adc
icebp
fcomp
push
or
shl
jnp
das
pop
and
mov
or
(bad)
adc
pop
daa
(bad)
adc
inc
pop
xchg
xchg
cli
stos
retf
push
jl
cmc
rol
cdq
push
xchg
aaa
test
mov
mov
jae
out
mov
iret
push
icebp
add
inc
push
and
pop
add
mov
leave
xchg
addr16
push
mov
stc
pop
(bad)
push
adc
scas
call
push
ins
push
add
dec
jne
div
push
xor
push
xchg
call
dec
xor
jge
push
nop
ret
cmps
mov
scas
inc
std
(bad)
adc
arpl
push
xchg
(bad)
sbb
out
aam
rcl
call
mov
mov
cdq
jecxz
mov
add
sahf
sbb
in
out
xchg
stc
and
xlat
and
pop
xchg
jmp
or
into
nop
ss
cs
ins
mov
lods
add
jmp
xchg
jle
sub
dec
xchg
pop
or
cli
inc
data16
and
pop
bnd
ret
mov
mov
inc
push
inc
mov
test
mov
int
repnz
mov
icebp
mov
xchg
dec
pop
add
dec
ret
cmp
mov
jmp
push
cmc
xchg
cmp
jae
adc
inc
movs
add
jnp
cmc
xchg
adc
xor
clc
sub
mov
rcl
dec
mov
add
outs
inc
jle
nop
pop
loop
div
test
and
dec
cmp
dec
adc
and
cmp
in
nop
adc
test
les
mov
or
sbb
mov
xchg
adc
test
ss
sbb
pop
xor
push
mov
xchg
stos
dec
fwait
push
sahf
imul
jno
push
(bad)
cli
inc
stos
pop
or
jae
and
bound
push
jmp
add
aas
mov
push
aad
pop
mov
lods
and
inc
popw
cwde
cmp
mov
(bad)
mov
dec
dec
xchg
xchg
dec
cmp
nop
mov
enter
push
je
mov
adc
ins
outs
std
rcl
inc
mov
std
xlat
pushf
jnp
sub
icebp
push
cli
inc
addr16
xchg
ja
sbb
xchg
cmps
lods
or
sub
aam
sub
dec
cld
ss
out
out
mov
and
repz
out
sub
bound
xor
dec
call
call
sub
sbb
jle
sbb
and
imul
mov
lods
adc
shr
and
in
test
jo
dec
sub
cmps
xchg
je
cmp
or
push
push
jecxz
mov
cdq
fcom
add
xor
lds
push
out
mov
les
mov
pushf
xchg
cdq
out
push
sbb
mov
mov
push
out
or
icebp
lods
lods
aad
ret
imul
xchg
out
jmp
not
stc
stc
sbb
movs
retf
mov
sti
adc
dec
ret
imul
fmul
retf
mov
scas
fidiv
pop
fild
addr16
leave
mov
xlat
lahf
gs
sub
mov
addr16
lss
(bad)
ret
jg
mov
xchg
mov
jg
sbb
retf
ror
(bad)
mov
push
or
popf
xor
sub
fwait
mov
cmp
es
and
popa
loopne
fidivr
or
xor
mov
movs
out
mov
sti
out
xchg
add
test
icebp
gs
test
pop
jge
xlat
shl
mov
or
mov
and
mov
(bad)
mul
(bad)
popf
scas
sub
nop
push
shl
cmp
sub
jle
repz
out
ins
fwait
jne
sbb
pop
ficom
scas
xor
jno
jnp
xchg
sbb
sub
cmp
mov
aam
test
mov
adc
xchg
or
or
fwait
dec
cmovp
(bad)
cmc
clc
icebp
les
push
aas
lods
xchg
wrmsr
call
inc
xor
xchg
out
xchg
lea
into
xchg
(bad)
sbb
dec
(bad)
sub
cdq
xor
fsub
jecxz
aam
cmp
mov
pushf
cld
fnclex
jne
outs
mov
enter
int3
mov
and
xchg
into
shr
push
idiv
faddp
out
cli
or
imul
pop
cmp
aaa
loopne
push
repnz
dec
inc
int
inc
fnsave
mov
iret
lea
sbb
bound
push
inc
and
xor
fcmovne
dec
imul
packssdw
push
daa
sub
sub
pop
test
out
(bad)
fisttp
test
int3
hlt
fadd
icebp
das
pop
jb
xlat
xchg
imul
cmp
dec
sub
addr16
adc
jmp
sub
fsub
dec
pusha
(bad)
cmp
cmp
(bad)
ficom
movs
rol
sub
pushf
popf
out
dec
leave
push
cmps
gs
sub
mov
into
(bad)
outs
xor
pop
add
ret
jne
jecxz
scas
cmp
push
fwait
jb
(bad)
push
icebp
out
xchg
loopne
gs
das
xsavec
mov
movs
gs
fst
push
pushf
push
pop
xchg
out
hlt
shl
pop
inc
sub
sub
popf
add
mov
loope
xlat
sbb
test
outs
xor
mov
cmps
cmps
pop
subps
bound
test
or
popa
test
and
push
mov
cld
mov
adc
movd
out
outs
es
add
xchg
sbb
ret
stc
scas
push
pop
jmp
xor
adc
cmp
ficomp
ret
sub
mov
pushf
inc
loopne
cmp
movs
and
sbb
test
movs
add
push
mov
retf
int3
cmc
in
push
xchg
rol
aam
pusha
jmp
and
loope
fsub
push
lods
xor
pop
imul
jnp
mov
sbb
dec
jno
mov
stc
fwait
dec
into
aaa
(bad)
ds
adc
aam
cs
adc
adc
or
lods
imul
fwait
push
pop
sub
out
clc
dec
mov
mov
sbb
enter
movs
mov
mov
rcr
push
dec
loop
aam
inc
pop
push
in
and
mul
mov
fist
inc
xor
lods
aas
and
(bad)
mov
fisubr
or
push
imul
cmp
lds
xor
clc
mov
stos
lock
(bad)
mov
cs
sar
out
out
cwde
push
mov
aaa
xchg
dec
xchg
sub
xchg
mov
jno
pop
scas
sti
jb
out
mov
mov
jmp
(bad)
es
movs
sbb
ret
mov
sub
lock
jge
in
jecxz
sbb
jl
mov
or
(bad)
lds
xor
and
cmp
icebp
xor
mov
stos
jmp
loop
scas
xchg
adc
cmps
and
out
push
cmp
push
mov
pop
aaa
xchg
clc
sar
lods
mov
and
mov
lds
test
jnp
cld
sub
xlat
shr
and
pop
pushf
jmp
das
shl
loop
into
rcr
mov
xchg
in
scas
cs
imul
inc
lods
fldcw
push
dec
pop
mov
xchg
jae
jne
out
ins
shr
pop
aaa
xchg
hlt
(bad)
jnp
out
ins
in
stos
fwait
shl
mov
in
rcl
mov
dec
and
pop
push
mov
pop
lahf
xchg
aad
retf
jnp
jnp
bound
das
xchg
cmc
retf
xor
add
dec
add
rcr
xchg
push
aaa
scas
aaa
add
lahf
ror
inc
cmc
(bad)
fistp
jnp
mov
mov
sbb
dec
mov
int3
repnz
out
sub
or
inc
adc
fisttp
cld
sbb
outs
in
mul
nop
ja
push
cmc
adc
das
sahf
std
jecxz
jge
mov
int3
jne
mov
mov
std
mov
pop
in
cmp
mov
mov
push
hlt
lods
mov
loope
adc
cmp
mov
push
in
mov
ins
shl
cs
cs
arpl
mov
dec
mov
adc
and
out
movs
mov
push
cmps
test
xor
xchg
sub
dec
sti
mov
sar
xor
jmp
mov
jmp
push
scas
cdq
jbe
ja
inc
or
cmps
sub
and
mov
pxor
pop
xchg
mov
scas
stos
push
dec
xchg
jne
xor
cmp
and
ret
or
(bad)
in
fsubr
fsub
add
pop
hlt
sbb
mov
cmps
jae
fsubr
mov
inc
sub
fisub
fidivr
xchg
adc
imul
inc
pop
in
aaa
xchg
mov
adc
scas
sub
pop
mov
retf
mov
fcmovne
enter
popa
and
pop
mov
repz
pop
pushf
push
pop
inc
ds
xor
push
in
ss
pop
clc
ins
and
mov
xchg
cmp
cmp
push
sub
mov
les
shr
fcmovnb
sub
ss
outs
mov
jmp
mov
jne
xchg
push
push
jnp
fwait
pop
push
nop
jmp
ret
bound
fisubr
adc
and
sbb
and
jo
jne
repnz
inc
mov
imul
add
add
pop
adc
or
fwait
and
cdq
das
push
aad
cmps
jns
ss
mov
sbb
push
xor
int
cmps
xor
pusha
mov
mov
mov
movs
dec
leave
sbb
fldcw
xor
sub
popa
pop
jge
enter
push
lock
sbb
adc
jp
and
jae
std
jmp
and
test
add
dec
push
and
xor
in
jb
std
adc
mov
shr
push
aad
push
pop
mov
out
and
and
cmp
adc
lods
pushf
dec
imul
enter
mov
lods
gs
clc
pop
ss
sahf
mov
and
hlt
je
jbe
das
cwde
ret
or
jne
ja
int
jo
mov
stos
mov
sub
pop
inc
cmps
add
pop
scas
mov
stos
xor
mov
daa
dec
hlt
push
mov
dec
push
or
in
pusha
ret
cmp
cs
or
push
and
mov
fstp
js
xchg
imul
add
loope
mov
push
xchg
retf
add
push
push
gs
ret
out
sti
cdq
das
inc
cmp
cmp
dec
push
aas
mov
sub
jae
pop
mov
push
xchg
mov
aaa
into
sbb
aam
add
or
or
xor
jl
je
in
cmp
(bad)
xor
push
add
out
in
push
pop
xchg
xchg
jmp
imul
mov
or
mov
fcomp
retf
lods
lods
adc
test
mov
mov
test
aaa
out
xchg
xor
cmp
mov
mov
or
jnp
mov
mov
fs
pop
fwait
bound
or
mov
cmp
cs
js
ins
std
push
lea
fwait
sbb
(bad)
nop
jae
out
sahf
cld
pop
lods
(bad)
retf
stc
dec
(bad)
jb
addr16
shl
loopne
aam
mov
add
punpckldq
out
or
lods
cld
sahf
(bad)
out
adc
mov
cmp
add
std
mov
(bad)
adc
push
enter
push
pop
out
loope
cdq
or
jp
add
(bad)
xor
(bad)
in
sbb
out
mov
pop
mov
pop
enter
jmp
shl
call
test
and
lock
jnp
push
iret
xchg
and
push
(bad)
repz
add
cmp
jnp
mov
mov
mov
(bad)
clc
ja
cli
mov
jmp
loop
push
push
cmp
imul
cmp
int
mov
xchg
mov
std
inc
adc
or
sub
push
(bad)
mov
jg
and
fnstsw
or
or
and
sbb
out
mov
mov
sbb
fwait
or
stos
and
or
inc
lock
mov
popa
bound
sub
cmp
cmps
jnp
test
inc
inc
cs
xchg
push
cmp
mov
cmp
jge
imul
stos
repz
push
sar
push
jp
les
xchg
add
mov
in
pop
pop
mov
(bad)
out
inc
movs
mov
mov
cmp
daa
pop
or
and
push
neg
and
xchg
xchg
and
xchg
add
(bad)
std
pop
hlt
fwait
mov
in
mov
xlat
into
mov
xlat
pop
ins
inc
fadd
cmp
lock
in
sub
sbb
repz
inc
mov
and
pushf
adc
sbb
repz
add
inc
rcl
inc
aas
dec
push
mov
pop
les
and
inc
inc
dec
mov
sub
mov
movs
jne
dec
fs
in
cmps
xchg
loopne
pop
cmp
push
xor
call
add
jecxz
sub
pop
cs
in
cli
nop
adc
inc
push
fs
(bad)
push
loope
mov
adc
mov
adc
pop
pusha
cmp
clc
repz
jns
and
idiv
stos
cli
xchg
mov
dec
push
fistp
fist
shl
test
pop
shr
add
aas
jbe
ret
jo
push
xchg
mov
ins
and
bound
mov
icebp
xor
stos
and
movs
cmp
ret
push
pushf
jecxz
adc
mov
mov
mov
in
mov
(bad)
mov
lds
pop
rol
arpl
mov
mov
sar
pop
fs
add
(bad)
addr16
pop
adc
out
cdq
test
retf
arpl
lock
push
leave
popa
jnp
cmp
inc
sbb
mov
sbb
push
ins
pop
adc
cmps
xor
call
xor
gs
pop
mov
push
shr
mov
ja
scas
inc
movs
lds
aad
push
dec
push
std
fld
mov
mov
or
adc
sbb
sbb
adc
adc
lock
sbb
loope
add
test
cmps
mov
stos
sbb
lea
mov
int3
arpl
mov
aad
mov
push
cwde
add
loope
lock
xlat
jecxz
test
js
mov
xor
xor
(bad)
call
enter
retf
stos
in
dec
(bad)
jmp
jno
lock
xchg
mov
and
dec
mov
xor
push
mov
scas
fsub
or
xchg
jmp
push
stos
adc
mov
cwde
dec
fadd
in
imul
pop
loopne
add
sub
jmp
shr
sbb
outs
xchg
arpl
daa
add
jbe
or
repnz
pop
mov
jbe
and
in
out
ret
and
stos
push
adc
pop
pop
div
xchg
sahf
jmp
mov
jo
cld
rol
and
dec
mov
xlat
ins
dec
lods
mov
push
pop
xchg
retf
jno
push
(bad)
cmc
and
(bad)
xchg
scas
push
xchg
xor
add
mov
cmp
movs
aam
cmp
cwde
lock
stos
sub
mov
fcmovnbe
sub
ins
cmps
mov
pop
or
sbb
jg
out
jne
lds
ss
mov
jp
push
std
retf
inc
fstp
jmp
cmp
cs
shr
fbld
cmp
(bad)
outs
fisttp
xor
pop
popw
cs
adc
dec
je
sbb
pop
fdiv
jne
mov
stos
dec
cmp
jg
jp
dec
ja
xor
mov
or
mov
pop
mov
add
stos
adc
or
mov
call
loopne
cmp
dec
dec
popf
adc
mov
in
int3
cmp
in
xchg
mov
xor
loope
push
popf
pushf
xor
and
call
gs
and
test
push
xchg
sti
retf
sub
mov
fdivr
push
shr
mov
addr16
inc
cli
xchg
dec
push
in
push
retf
in
pop
and
cwde
jnp
int3
mov
dec
jne
inc
cmp
sbb
cmp
inc
push
mov
mov
jmp
pop
idiv
inc
lock
jne
push
jae
popa
out
aaa
popf
mov
mov
mov
jle
mov
xlat
test
cmc
or
add
cld
pop
enter
gs
sub
and
enter
lods
(bad)
inc
out
jmp
into
std
jbe
jae
bound
cli
push
adc
ror
es
ja
jne
xor
add
and
mov
xchg
out
jmp
add
xchg
sahf
popa
mov
mov
daa
pop
add
dec
mov
fwait
jge
add
jae
stc
jo
push
aad
add
and
callw
fidivr
test
and
mov
jp
inc
std
adc
push
imul
mov
jb
xchg
sub
sbb
sbb
mov
push
outs
sub
popf
xchg
inc
xor
cld
dec
es
xchg
fcomp
js
cmps
sbb
in
inc
dec
jns
dec
aam
add
mov
or
inc
sub
xchg
outs
jmp
dec
push
adc
push
jecxz
imul
mov
movs
cmp
inc
mov
cmp
test
sub
movs
inc
test
arpl
xor
stc
scas
or
adc
or
popf
gs
inc
cmp
imul
mov
sti
mov
rcl
adc
test
mov
mov
cmps
sahf
jne
fmul
daa
imul
jl
into
pop
jl
xor
xchg
mov
stc
dec
addr16
bswap
(bad)
(bad)
sbb
xchg
push
inc
pop
out
fwait
lahf
mov
sbb
cmp
ret
cmp
fidiv
dec
jae
div
cmp
ins
sub
sub
inc
mov
add
pop
icebp
or
test
pusha
mov
xchg
pop
add
sub
mul
lds
imul
mov
xchg
cmp
mov
or
or
imul
pop
fnstenv
scas
or
mov
xor
call
dec
jg
adc
or
imul
cmc
xor
xor
cmp
sar
push
std
cmp
movq
mov
cmc
cmp
push
mov
ss
sbb
dec
shr
sbb
lds
xor
xor
mov
xor
fcom
cmp
in
fcmovnu
cmp
fcom
pop
stc
xchg
lahf
push
mov
scas
lds
and
cdq
mov
push
xchg
out
imul
xchg
pop
cmp
dec
xchg
or
pop
push
add
popa
jmp
adc
iret
(bad)
xor
mov
or
add
mov
mov
lock
in
pop
adc
adc
out
jp
xor
xchg
adc
or
loopne
sbb
fist
aam
xor
sbb
xchg
mov
js
or
(bad)
jne
mov
out
nop
inc
nop
push
out
popf
hlt
fisttp
mov
cmp
sbb
lock
das
xchg
mov
sti
hlt
outs
fcmovnu
stc
out
dec
xor
xor
lods
lods
(bad)
mov
xor
and
scas
test
add
fdiv
in
jns
loop
or
adc
test
(bad)
in
mov
loope
mov
fisttp
jp
fnstenv
mov
movs
inc
adc
push
cli
cs
jne
xchg
movnti
mov
or
dec
cmp
mov
or
lods
ror
sbb
cs
dec
scas
or
xor
imul
cmc
daa
scas
pop
jnp
pop
ret
and
hlt
cmc
ins
xor
xchg
out
xor
call
and
pop
or
mov
pop
sbb
iret
fbstp
sbb
mov
mov
out
xor
or
push
mov
cmp
scas
mov
xor
push
out
dec
dec
pop
loopne
(bad)
shl
and
jmp
in
mov
adc
jmp
fistp
sub
jp
repnz
call
sbb
sub
xor
popf
outs
mov
in
xchg
jp
sub
in
dec
loopne
xor
inc
push
(bad)
out
or
jns
jns
aam
cmp
jmp
push
imul
push
das
outs
and
aad
ss
mov
data16
stos
bound
inc
mov
adc
mov
les
test
sbb
jne
das
std
aas
and
add
cdq
std
push
test
adc
lock
jg
or
in
inc
push
jecxz
sub
pop
loop
aas
jns
cmps
pop
pushf
and
ret
jmp
(bad)
test
sub
push
call
in
or
sub
sbb
sbb
pop
mov
push
sbb
jmp
cmp
lods
cwde
cmps
aam
fwait
push
imul
mov
fidivr
mov
xchg
jbe
cmp
js
add
or
add
push
sub
fisttp
cs
push
sbb
fnstsw
xor
call
push
dec
mov
push
inc
and
mov
inc
arpl
stos
mov
fcomp
push
daa
mov
fstp
inc
jmp
call
stc
dec
fld
jp
mul
xor
sbb
movs
popa
cdq
mov
mov
(bad)
mov
(bad)
icebp
mov
inc
pop
push
rol
and
push
into
imul
xor
addr16
(bad)
daa
ror
gs
push
or
jp
add
mov
loope
ins
in
or
les
jge
out
sbb
or
mov
mov
dec
dec
je
pusha
shr
ja
mov
cld
lods
out
pusha
mov
cmc
xor
(bad)
imul
pushf
mov
pop
outs
jnp
clc
sub
jo
and
mov
lock
repz
cmps
fcom
hlt
stc
sbb
scas
inc
and
inc
clc
hlt
lods
sub
data16
in
(bad)
rol
xchg
xor
outs
fbstp
mov
or
scas
out
scas
push
je
lea
dec
mov
sbb
sbb
jle
mov
fistp
(bad)
jge
xor
mov
aas
arpl
pop
jp
xor
jae
arpl
xor
add
pop
call
jmp
adc
icebp
int
xchg
and
pushf
ret
js
js
shl
cmp
out
and
jbe
xor
mov
adc
cmps
or
in
aas
scas
adc
xchg
xchg
addr16
enter
nop
jle
in
jnp
mov
jae
ficom
cli
sbb
or
add
daa
ds
push
xor
push
ins
mov
inc
repnz
loopne
inc
das
(bad)
mov
ret
aas
fmul
cmp
jg
pop
movs
mov
sbb
dec
mov
dec
jl
imul
sbb
inc
mov
mov
shl
cld
int
loopne
out
ja
mov
inc
test
rcl
mov
adc
mov
jb
fstp
and
or
jae
push
push
js
xchg
out
sbb
dec
dec
xor
cwde
xor
pop
push
cmp
xchg
dec
xchg
sub
and
cmps
add
dec
lds
add
adc
cmps
dec
leave
push
or
sub
ror
jmpw
mov
or
and
je
xchg
ret
cmps
(bad)
inc
inc
xlat
das
fchs
mov
adc
ja
adc
mov
hlt
lock
or
inc
or
or
and
cmp
add
adc
dec
je
sbb
cmp
dec
mov
nop
push
jnp
rcr
out
(bad)
mov
mov
xchg
imul
sub
inc
xchg
lods
mov
mov
sar
inc
vpsrlw
aam
daa
xchg
in
xor
pop
pop
jbe
sbb
sub
jg
push
add
loope
aaa
icebp
xchg
js
pop
ins
mov
imul
inc
pop
and
sub
ins
adc
cmp
mov
add
jnp
xchg
(bad)
daa
push
jae
push
cmp
movs
test
sbb
jbe
dec
cs
shl
ss
int3
les
mov
jle
push
mul
sbb
cmp
mov
sahf
repnz
inc
or
push
add
sbb
xchg
sub
idiv
cmps
fadd
js
(bad)
cdq
(bad)
pop
retw
ret
das
dec
adc
stos
int3
ins
cmp
dec
mov
es
shl
mov
mov
xchg
out
gs
adc
pop
mov
jne
mov
push
mov
pusha
push
xchg
add
mov
scas
shl
loopne
xor
addr16
lods
fsubr
ret
jmp
mov
push
jmp
ss
mov
xor
jns
aas
test
into
fwait
sbb
and
mov
in
dec
jg
cli
popf
arpl
mov
inc
push
fimul
enter
bswap
shl
mov
jp
mov
pop
push
push
sub
mov
outs
fcomp
inc
sub
ja
das
cmp
push
dec
sbb
push
out
cmc
cmp
imul
lahf
popf
cld
mov
xchg
loope
rdmsr
jbe
xor
xchg
lods
push
pop
cmc
repz
icebp
sub
clc
hlt
mov
mov
xacquire
mov
fwait
adc
aaa
add
xchg
sahf
inc
adc
cdq
cmp
cli
jae
sbb
(bad)
jbe
sbb
push
loopne
gs
je
xlat
retf
fmul
iret
inc
inc
cmp
jle
mov
sbb
mov
icebp
mov
std
pushf
imul
sub
outs
jae
test
cmc
sub
add
inc
add
pop
mov
sub
pushf
cdq
stos
or
or
cmps
mov
cdq
or
or
dec
mov
in
sbb
mov
out
sub
cld
pop
ds
loop
mov
jne
inc
adc
add
mov
adc
push
mov
stos
retf
fwait
repz
pop
call
sub
in
pop
stos
ror
stos
mov
(bad)
fisub
ins
mov
xlat
dec
inc
loopne
fdivr
cmp
and
int
mov
xlat
mov
push
mov
in
cld
jmp
es
ds
inc
push
jnp
(bad)
xchg
(bad)
jmp
(bad)
clc
xor
sbb
mov
daa
and
sar
pop
mov
sbb
dec
movs
push
mul
jmp
lock
and
pop
loop
enter
fnstenv
clc
cmps
js
ins
fdivp
and
mov
lods
pop
sub
mov
xor
nop
jnp
jnp
es
sbb
push
push
mov
cli
lods
sub
or
shl
sbb
xlat
push
mov
inc
cmp
pop
dec
je
lea
inc
inc
cmp
add
mov
lods
clc
fidivr
xchg
add
cmp
inc
add
push
or
mov
ror
loop
dec
out
fsubr
cmp
clc
or
lods
xor
pusha
fnclex
shl
outs
add
fst
xchg
cwde
cld
mul
push
add
and
fs
fiadd
sbb
sahf
cmp
jmp
add
mov
dec
movs
inc
ja
std
push
rcr
or
and
mov
fild
dec
mov
imul
addr16
cdq
pushf
jns
lds
das
fabs
out
mov
push
idiv
inc
mov
and
ins
scas
mov
and
arpl
dec
jo
mov
add
imul
cld
ret
dec
dec
mov
xchg
cs
ret
sub
add
rcr
pop
xchg
add
add
rcl
fwait
out
cmp
shl
mov
fnsave
imul
inc
arpl
xor
in
and
sub
ins
pop
inc
movs
(bad)
fidiv
cdq
imul
hlt
popa
cmp
dec
mov
outs
retf
mov
cmp
icebp
pop
in
push
mov
sbb
add
adc
inc
adc
gs
adc
adc
inc
adc
push
mov
sub
jnp
icebp
push
add
les
fs
ja
leave
jae
jecxz
mov
clc
add
mov
aaa
adc
xlat
movs
mov
leave
xchg
mov
xor
stos
pop
cmc
bound
cmp
nop
imul
scas
xchg
mov
push
into
stos
loope
mov
stos
movs
cmp
(bad)
sti
js
and
das
mov
push
rep
inc
dec
cmp
int3
out
(bad)
mov
cmp
pop
add
mov
sub
mov
fisub
js
bound
mov
push
sub
imul
ret
pop
test
xchg
icebp
xchg
mov
xchg
icebp
sbb
es
je
imul
jecxz
adc
(bad)
into
test
fldcw
in
scas
aaa
aad
mov
mov
push
(bad)
fcomi
gs
xor
test
popa
push
jnp
dec
aas
xor
push
in
pop
out
mov
stc
not
std
ins
pop
jl
lods
pop
xchg
inc
jns
aam
aad
inc
mov
sbb
jnp
sbb
or
and
in
stc
dec
push
push
les
lock
pop
ins
inc
xchg
cmc
mov
mov
push
inc
outs
xchg
addr16
inc
jecxz
adc
pop
adc
cld
fistp
imul
adc
(bad)
js
pop
inc
dec
sbb
sbb
mov
sub
inc
shl
dec
cmp
call
cs
fidiv
adc
adc
add
push
imul
jle
imul
int
push
pop
push
sub
outs
dec
xor
ins
push
dec
fiadd
mov
push
mov
and
fdivr
hlt
sub
dec
data16
dec
mov
jl
test
iret
mov
xchg
xor
cld
push
jle
shl
push
pop
cmc
jnp
push
push
iret
popa
inc
mov
shl
cs
pop
mov
ins
jo
mov
lds
add
or
sahf
(bad)
xor
(bad)
jno
(bad)
push
push
pop
adc
ins
sub
cmp
(bad)
mov
pop
lods
mov
cmp
lods
fs
rcr
and
scas
lea
xor
fwait
xor
sar
xchg
call
(bad)
xchg
jns
(bad)
test
(bad)
mov
ins
fisubr
push
(bad)
(bad)
push
xchg
push
not
sub
or
jmp
loop
add
movs
loopne
mov
pop
(bad)
pushf
cmp
pop
ins
xor
jae
rcl
popa
test
mov
jmp
lds
sbb
pop
sbb
(bad)
xor
pop
out
inc
test
(bad)
fadd
(bad)
sbb
gs
bnd
movs
sbb
in
in
imul
cmps
(bad)
cmps
jle
pop
pop
push
inc
mov
into
inc
iret
fmul
cmp
in
cmp
hlt
mov
test
push
dec
aad
xor
push
mov
imul
aam
jne
and
int
mov
sbb
ja
push
push
cli
out
dec
jmp
test
gs
or
pushf
jg
cld
mov
imul
cdq
pop
test
xchg
mov
popa
inc
ror
cmp
dec
inc
icebp
xchg
push
inc
and
scas
mov
xchg
xor
cli
xchg
xchg
mov
arpl
test
lea
stos
jo
inc
js
mov
adc
call
test
sbb
sbb
jno
inc
enter
loopne
mov
fist
xchg
scas
ja
mov
shr
jnp
pop
mov
ins
(bad)
neg
mov
ss
push
jl
dec
cmp
jb
pushf
sub
xchg
mov
mov
(bad)
mov
push
and
jecxz
mov
inc
retf
fsub
leave
push
add
mov
int3
gs
mov
add
movs
fs
pop
adc
div
ret
adc
xor
test
pop
mov
daa
pop
pop
and
(bad)
stc
in
dec
scas
outs
jo
rol
mov
dec
hlt
inc
dec
repz
push
inc
aad
adc
xor
push
mov
call
sbb
jns
in
adc
stos
repnz
mov
retf
mov
sahf
sbb
das
sub
xchg
out
mov
xor
inc
cmps
xchg
sar
pop
and
(bad)
pop
je
push
ret
rol
push
mov
pusha
iret
scas
push
xchg
cmp
xor
push
addr16
cmp
repnz
sub
push
(bad)
fdiv
mov
ror
jnp
ror
jmp
ret
mov
sbb
sbb
and
outs
add
popa
inc
cld
inc
push
arpl
xchg
inc
push
ss
shl
test
test
jmp
pop
or
mov
xchg
xlat
jl
test
xchg
jmp
cmps
fmul
mov
mov
aas
mov
into
jp
mov
jns
dec
(bad)
xchg
int
lock
fcmovbe
jmp
xor
mov
mov
loope
xchg
imul
cmps
or
adc
pop
inc
xor
repnz
xchg
(bad)
gs
popf
out
jns
movs
cmp
je
(bad)
jp
movs
cmp
dec
scas
imul
test
lea
add
add
mov
loop
mov
pop
sbb
je
sbb
mov
mov
push
dec
test
sub
fisttp
sub
loop
iret
rcl
adc
add
in
sbb
mov
pop
jae
xor
push
shl
repnz
ficom
sbb
call
xor
test
imul
idiv
sub
out
mov
fist
inc
push
cmp
mov
in
push
ret
xchg
or
fidivr
repz
leave
xchg
sti
pop
int3
(bad)
mov
fcomp
(bad)
mov
mov
outs
xor
ds
addr16
mov
jmp
add
stos
and
mov
sbb
repnz
cli
add
xor
jp
dec
or
in
add
addr16
adc
adc
cmc
adc
sub
jno
or
aaa
pusha
mov
jmp
stc
sbb
lahf
xchg
repz
(bad)
xchg
stos
push
push
sar
pusha
jl
or
jmp
cmp
scas
loop
lea
icebp
mov
sti
pop
movs
cli
imul
sub
retf
jl
cmp
mov
test
push
add
pop
jne
jge
adc
sbb
jg
and
mov
cmp
hlt
jne
cdq
rcl
lods
fist
jl
pusha
jbe
out
sub
dec
mov
lods
push
mov
mov
mov
aaa
mov
ror
push
popf
ret
cld
mov
add
cld
adc
(bad)
fisub
xchg
xor
scas
popa
pushf
jmp
mov
and
test
retf
into
adc
jmp
popf
fsubp
(bad)
jmp
pop
xchg
add
das
js
(bad)
out
fbstp
mov
inc
iret
fstp
sub
mov
imul
(bad)
ret
jmp
sub
fmul
test
adc
in
mov
xor
xor
sahf
ja
ret
mov
push
adc
mov
jmp
or
xchg
adc
dec
sti
pop
sahf
lock
gs
jg
sub
ss
jo
sub
push
jb
in
mov
jmp
xchg
out
mov
cwde
dec
(bad)
idiv
jle
inc
xchg
cmp
lahf
jns
pop
ja
mov
mov
pop
or
mov
mov
scas
daa
jae
push
mov
and
pop
xlat
mov
mul
or
shl
pop
mov
push
mov
push
lods
adc
and
mov
(bad)
mov
add
dec
dec
cmp
aam
xchg
in
and
aad
jp
ret
call
mov
enter
loopne
aam
fadd
loopne
pushf
repnz
jecxz
cmps
aad
sub
imul
les
sub
std
dec
cmp
xchg
cmp
fcomp
(bad)
mov
sbb
sbb
idiv
out
test
fcomi
xor
out
mov
outs
scas
adc
bound
nop
in
mov
out
push
movs
loopne
int
scas
mov
in
fs
push
(bad)
mov
jne
add
(bad)
fdiv
sub
adc
jno
jl
stos
jmp
or
test
and
mov
adc
cmc
iret
out
sbb
das
mov
fwait
int3
cdq
xchg
adc
inc
lahf
enter
xor
or
xor
mov
mov
lahf
cmp
fwait
cmps
xchg
lock
and
test
mov
aad
in
mov
popf
stos
lds
clc
add
xor
mov
pusha
xor
xor
stos
sub
push
ins
jno
push
cmp
loop
imul
push
(bad)
xor
sar
xchg
pop
out
or
enter
cmps
xchg
push
rcr
jp
int3
sub
dec
stc
add
mov
inc
adc
mov
std
push
cmc
add
(bad)
gs
and
(bad)
push
test
movs
mov
adc
aad
in
xor
mov
dec
loop
gs
les
repz
push
jmp
jmp
cdq
inc
mov
fs
pop
jmp
push
and
add
xchg
adc
sub
sahf
pop
xchg
mov
mov
mov
sub
push
addr16
aas
aaa
cmp
cwde
and
bnd
sbb
hlt
imul
mov
push
mov
or
xchg
rol
dec
je
ins
jecxz
cmp
push
add
adc
push
mov
mov
jle
and
ins
sahf
cli
jmp
xchg
jmp
push
push
sbb
mov
add
and
dec
pop
add
mov
ja
dec
jmp
movhps
(bad)
dec
mov
xor
std
add
div
stos
aam
dec
sbb
in
outs
inc
inc
mov
pop
or
jae
dec
jg
in
or
(bad)
sahf
enter
fnsave
mov
test
cmp
lea
das
xchg
(bad)
xor
arpl
add
adc
cmp
test
fdivr
movs
mov
lock
push
sar
lods
jb
mov
test
leave
in
inc
test
mov
xor
mov
xchg
aas
rol
sub
push
cmp
adc
iret
ins
sbb
sbb
ins
fdivr
xor
out
xor
jge
fst
ja
push
and
cmp
rcl
add
ds
int
xlat
(bad)
outs
ds
movs
test
sahf
xchg
mov
pop
mov
repnz
push
cwde
(bad)
mov
pop
arpl
pop
bound
pop
jg
jbe
sub
clc
mov
test
iret
ror
or
or
dec
retf
repnz
shl
inc
jmp
sbb
sub
ins
fdiv
mov
cwde
pop
xchg
stos
push
xor
(bad)
fadd
push
jmp
cmp
fisub
dec
dec
das
cmp
pop
fwait
xlat
not
aaa
add
xchg
fbld
clc
push
inc
stc
fisub
fnstenv
mov
outs
xlat
retf
or
push
dec
out
in
mov
pop
sbb
mov
xchg
mov
adc
xor
or
xchg
or
jge
jns
sbb
xor
test
(bad)
cwde
dec
ror
jmp
or
mov
add
pop
lahf
adc
(bad)
retf
ret
jle
cdq
jo
arpl
jp
popa
mov
sub
adc
sbb
jo
sub
aam
mov
test
int3
pop
movs
je
fsubr
dec
pop
inc
xchg
pop
out
jne
xor
lock
cdq
ds
gs
lds
jg
out
sbb
jmp
aaa
cmp
pop
xor
jb
pusha
cmp
inc
jmp
retw
retf
xchg
or
mov
dec
dec
dec
push
outs
popf
pop
mov
adc
test
mov
cmp
xlat
and
pop
scas
mov
fidivr
jmp
les
or
xchg
and
cmp
cwde
cmp
mov
mov
add
ins
cs
jb
jmp
mov
mov
push
popf
jp
dec
xor
xchg
call
pop
mov
hlt
fisub
and
aas
mov
sbb
es
push
dec
jg
cli
sub
dec
fbld
and
lock
aas
mov
mov
clc
(bad)
jmp
sub
int3
jle
rcl
pop
enter
or
mov
loop
fmulp
out
pop
mov
ins
aad
pushf
lods
mov
loope
loopne
adc
fwait
push
push
cmp
call
neg
adc
push
out
pop
(bad)
mov
sbb
dec
lock
mov
cmc
add
jne
mov
call
mov
and
popa
xchg
repz
sub
mov
sub
cmps
dec
pop
ja
outs
rol
push
sbb
aam
test
inc
fld
inc
xor
leave
test
icebp
mov
cmp
icebp
dec
or
push
sub
stc
fsub
cmps
mov
sti
push
mov
int
mov
jecxz
sti
rol
sbb
mov
adc
into
dec
cmps
icebp
sahf
aad
pop
jnp
cld
aas
and
and
mov
test
jo
mov
pushf
inc
pop
mov
ins
xor
cld
pop
rsm
setno
adc
cmp
clc
into
jb
or
out
jmp
jge
sbb
sbb
mov
sbb
xchg
out
add
aaa
mov
(bad)
lahf
sbb
sbb
push
ror
sbb
pop
jo
push
imul
mov
cmc
mov
or
lahf
pop
std
stos
and
rcr
gs
mov
pushf
pop
cmps
test
arpl
mov
test
shl
pop
sbb
fiadd
or
mov
sti
fldcw
sbb
jp
ret
xor
jb
ss
imul
push
popf
ja
push
cmps
aad
fwait
adc
or
scas
xchg
adc
imul
imul
aam
adc
test
push
add
ds
inc
int3
fsubr
(bad)
mov
jmp
popf
inc
mov
daa
pop
mov
jg
adc
mov
sahf
sub
cmp
in
das
nop
pop
popa
test
es
jmp
(bad)
mov
sub
jg
xor
mov
inc
jmp
xor
loop
push
nop
mov
xor
(bad)
aam
bound
dec
stos
das
adc
push
jmp
dec
jg
dec
movs
jp
adc
jecxz
in
fwait
push
movs
cli
pop
dec
out
and
sbb
xchg
mov
mov
and
xchg
stos
xchg
test
jecxz
and
mov
call
sbb
adc
fs
cmp
and
add
cmp
jge
lods
loopne
mov
adc
aaa
cli
shl
jmp
outs
adc
cmps
mov
jp
mov
pop
jecxz
push
ficom
out
push
pop
stos
add
out
nop
rcl
cmp
push
push
push
mov
and
fnsave
cmp
ins
int3
xor
ss
mov
sar
inc
int3
xchg
clc
movs
iret
loop
xor
adc
or
ds
(bad)
mov
scas
in
jo
jmp
test
aam
dec
push
xchg
xchg
and
fsubr
mov
dec
icebp
dec
mov
push
or
sbb
cmps
cmps
call
popa
js
dec
scas
movs
cmps
aas
push
jb
cli
jne
inc
ds
mov
xchg
js
adc
mov
dec
mov
add
daa
adc
xor
repz
sti
in
mov
pop
leave
mov
inc
daa
hlt
cmps
arpl
or
test
cmp
sub
call
test
stos
adc
sub
call
mov
addr16
fsub
mov
mov
ins
aaa
shl
popf
add
adc
cmp
ins
push
or
inc
and
or
cmp
hlt
push
dec
mov
cmp
imul
repz
fnsave
int
push
and
adc
mov
and
inc
inc
xor
mov
jae
int
pop
push
adc
dec
inc
sbb
leave
push
jne
repz
jb
out
inc
pop
sti
int3
shl
repz
inc
int3
xchg
sti
bound
(bad)
stos
jbe
(bad)
imul
and
jae
les
cmps
in
mov
adc
leave
xor
mov
lods
add
(bad)
shr
lods
inc
pop
sub
sub
shl
push
mov
dec
mov
fcom
mov
bound
cmp
fld
dec
sbb
sbb
test
inc
mov
aad
mov
pop
cmp
adc
cld
xchg
movs
mov
gs
mov
jbe
aaa
mov
in
sub
mov
scas
jmp
arpl
xor
jae
add
xchg
cmp
dec
xchg
loope
into
stc
pop
adc
or
adc
ins
adc
jbe
clc
shl
mov
not
mov
es
cmp
mov
xchg
test
adc
mov
clc
stos
inc
lahf
sbb
push
pop
ja
add
aad
jg
and
aam
push
jle
out
cmp
xor
cmp
cmps
add
add
inc
adc
dec
repnz
je
rcr
dec
out
outs
xchg
mov
bound
cmovg
mov
(bad)
dec
adc
imul
mov
sbb
hlt
aad
push
jmp
movs
push
leave
sbb
outs
cwde
jmp
retf
lods
cmp
pop
push
imul
mov
(bad)
xor
mov
sbb
jecxz
adc
sub
sti
push
cmp
jne
mov
je
cmps
sbb
cmp
repnz
fcomp
pop
and
push
leave
popf
adc
out
mov
jmp
add
mov
xor
into
(bad)
out
push
pop
mov
sub
scas
or
jne
jno
push
jg
cld
and
mov
inc
and
enter
out
outs
add
ret
pop
icebp
js
inc
aaa
sub
(bad)
test
mov
in
mov
push
lahf
pop
jne
popf
js
(bad)
sub
ret
mov
xchg
ds
bound
mov
int3
pop
mov
retf
jno
popa
movs
out
sub
xchg
mov
add
cmp
adc
pop
scas
jbe
sub
loopne
ficom
cdq
popa
(bad)
inc
outs
in
sub
in
shr
ja
xchg
mov
mov
mov
sub
call
push
jbe
out
or
push
xchg
imul
or
inc
jnp
scas
imul
add
leave
mov
mov
test
in
mov
push
outs
ins
cmps
jno
and
cmp
add
sub
fbld
fwait
in
jmp
jno
mov
stos
lock
sbb
jnp
mov
mov
push
inc
rol
push
and
rol
mov
mov
cmps
in
push
xchg
popa
mov
xlat
jo
cmp
repnz
dec
dec
push
pop
popa
dec
add
inc
hlt
dec
icebp
(bad)
gs
(bad)
stos
pop
je
mov
das
push
out
les
mov
xor
or
xor
mov
mov
and
cmps
icebp
loope
and
mov
pop
xor
or
aaa
shl
call
imul
into
jb
bound
jl
cmp
(bad)
mov
sahf
dec
(bad)
and
mov
push
xor
(bad)
cmps
xchg
scas
mov
(bad)
mov
jno
sub
dec
jecxz
dec
push
and
push
mul
ja
int
mov
xchg
cmp
inc
xor
loope
jecxz
into
test
mov
std
xor
fistp
add
sti
scas
cmp
add
rcl
stos
loopne
push
add
adc
push
iret
js
mov
mov
jbe
js
iret
pop
mov
xchg
mov
push
stc
pop
adc
xchg
push
add
(bad)
not
inc
sub
(bad)
lahf
jmp
pop
pop
in
dec
cmp
rep
clc
rol
movs
pop
push
mov
mov
pop
stos
aam
mov
push
adc
lods
cmc
dec
jb
repnz
mov
cdq
imul
leave
sub
and
or
dec
xlat
push
stos
adc
movs
and
cmp
call
movs
cwde
or
js
popf
aam
mov
popf
(bad)
or
adc
in
ret
xchg
loop
test
std
(bad)
mov
imul
xor
xor
pop
ins
adc
push
nop
rcr
sub
mov
test
daa
ret
data16
inc
jge
jns
jnp
les
inc
int
and
(bad)
push
clc
fisubr
add
hlt
cmp
push
leave
pop
adc
push
or
iret
fcom
dec
jecxz
jne
popa
dec
cli
not
lahf
xor
test
cmps
clc
jmp
push
int
pushf
inc
pop
(bad)
mov
in
outs
repnz
cmp
out
fdivr
jns
jp
xor
aaa
aam
sub
adc
sahf
and
xchg
or
sti
or
ja
repz
push
push
or
jns
adc
adc
adc
out
repnz
sub
lahf
std
and
cmp
jnp
nop
pop
jnp
retf
mov
and
cmp
mov
sub
test
cdq
sbb
add
xchg
stc
add
and
jmp
dec
xor
(bad)
mov
mov
loope
push
sti
cmc
int3
jo
push
mov
pop
push
test
les
(bad)
dec
mov
adc
rcl
test
nop
dec
daa
fwait
cmp
and
jl
shl
cmc
cmp
mov
sub
mov
jnp
xchg
lahf
rcr
imul
mov
xor
int3
push
pop
and
fs
psadbw
inc
pop
scas
and
pop
leave
(bad)
push
cwde
aam
retf
push
cmp
loope
xchg
iret
ss
mov
or
(bad)
movs
nop
jne
rcr
sub
(bad)
lods
std
shl
dec
ins
les
sub
jnp
idiv
shl
adc
and
aas
sub
ins
xor
and
dec
cmp
arpl
mov
jge
fisub
mov
jbe
or
cmp
or
cwde
sub
push
cwde
and
fisttp
jne
dec
hlt
inc
je
rcl
xchg
jg
xor
in
mov
cmp
call
xchg
mov
div
leave
or
ja
leave
repz
dec
sub
mov
push
shl
in
arpl
dec
mov
out
mov
inc
rcr
fnsave
inc
mov
loop
and
push
jo
popf
imul
shr
jmp
popa
push
pop
retf
jl
or
sahf
pop
sub
les
jg
fld
sbb
mov
cwde
xor
leave
cld
or
and
sub
inc
test
movs
pushf
(bad)
dec
or
sbb
push
fistp
or
xchg
in
mov
sub
cli
cmps
inc
push
ds
and
pop
cmp
std
sub
ds
ret
mov
and
mov
mov
and
sbb
leave
inc
or
adc
rcr
cli
fmul
(bad)
fdivr
rcl
mov
jp
sub
sub
inc
and
sub
mov
xchg
xchg
out
mov
data16
mov
sar
test
inc
mov
push
push
push
and
fist
call
sbb
lods
les
xlat
mov
inc
fisub
xchg
nop
jo
pop
sbb
movs
lock
jmp
add
wrmsr
sbb
(bad)
cmp
(bad)
loope
ret
push
xlat
jne
sbb
out
xchg
dec
jns
into
jns
lods
xchg
mov
push
push
xchg
pop
cmc
imul
xor
ficomp
movs
in
ins
es
add
dec
lahf
mov
jp
jo
and
shl
fwait
sahf
sbb
dec
adc
and
out
cmp
stos
test
pushf
movs
int3
mov
call
mov
aaa
ja
cwde
retf
es
and
daa
gs
ds
jae
test
inc
sti
jb
fs
out
mov
cld
es
into
shr
xor
mov
int
jmp
push
cdq
daa
daa
fwait
add
aam
xor
mov
out
jbe
push
movs
sub
out
push
push
jle
sub
js
add
lea
enter
add
pushf
cmp
test
in
pop
pop
jo
inc
xchg
sub
xchg
or
ja
popf
mov
and
add
aaa
repz
jne
lods
and
aas
aaa
adc
jo
lea
ds
test
jle
push
(bad)
mov
jae
fcom
std
sub
inc
jbe
jl
adc
repz
ds
cwde
in
in
adc
jp
inc
cmc
outs
div
aad
sub
ss
mov
xchg
add
xchg
test
mov
enter
cmp
popa
addr16
in
cmp
push
stc
cmp
out
les
addr16
ds
loopne
lahf
cld
aas
pop
fld
push
popa
xchg
jbe
sti
fidiv
add
adc
push
mov
push
mov
pop
mov
and
ret
data16
in
mov
mov
adc
je
push
je
sbb
lock
popa
repnz
xor
xor
lahf
cmp
std
inc
cdq
les
out
aaa
loop
add
arpl
fs
imul
push
cmp
icebp
push
popa
fdivr
scas
mov
aam
xchg
(bad)
ficom
les
adc
xchg
xchg
sti
mov
pop
jmp
mov
add
pop
sbb
sbb
pop
(bad)
adc
jno
shr
(bad)
and
mov
ror
(bad)
int3
rep
imul
jp
inc
ret
fcomip
jg
cmc
push
ret
(bad)
jmp
ret
fnstcw
jnp
dec
inc
iret
pop
dec
jecxz
jge
ins
mov
cmp
aaa
pop
mov
out
out
push
push
and
add
sub
cdq
push
inc
adc
mov
lods
xor
rol
cs
push
icebp
ret
es
scas
imul
mov
xor
and
cmp
and
data16
mov
andnps
loope
cmp
loope
jmp
stos
stos
sbb
shl
lock
fadd
mov
mov
repz
cmps
mov
push
movs
jmp
mov
ds
in
imul
bound
test
inc
jmp
sub
mov
xor
cmp
xchg
cwde
xchg
adc
pop
inc
push
pop
sbb
jns
mov
push
pop
jge
cs
imul
imul
add
retf
adc
jno
xlat
imul
in
aas
jge
pop
mov
push
add
cmp
push
(bad)
mov
add
or
int3
movs
fwait
je
ins
mov
jl
outs
inc
lods
ds
adc
test
ret
jmp
push
jle
fnstcw
(bad)
or
lods
cmp
pusha
into
or
leave
ins
push
pop
addr16
jp
pop
adc
loopne
ja
push
aam
pop
push
shr
fadd
xor
jge
cli
cmps
movs
push
sub
cmc
sbb
mov
inc
dec
jae
lea
retf
inc
sbb
dec
xchg
pop
pop
rol
mov
pop
adc
xor
xor
(bad)
and
xchg
(bad)
mov
sub
fcom
movs
mov
daa
iret
xchg
pusha
pop
and
mov
fmul
mov
and
push
lods
pushf
push
gs
dec
jmp
dec
mov
adc
out
jmp
ja
fdivrp
ror
push
mov
mov
xchg
xchg
in
jb
inc
test
(bad)
jno
mov
sahf
mov
not
cmc
call
test
and
mov
data16
xchg
jmp
cs
lea
push
inc
jecxz
sub
cmps
sub
fcmovne
ins
xchg
xor
cwde
push
jbe
fistp
out
dec
lods
jno
aad
cdq
test
inc
mov
daa
mov
sub
out
mov
dec
cmp
shr
inc
mov
push
lock
daa
sub
mov
mov
mov
push
cli
sti
dec
and
sub
or
pop
mov
and
in
mov
xor
(bad)
mov
inc
push
push
cmp
xchg
test
ss
xchg
sahf
(bad)
retf
ins
arpl
jmp
and
jns
sbb
out
pop
out
sbb
sahf
pop
lahf
jae
call
push
enter
ss
loopne
adc
or
call
cmc
pop
sti
xchg
hlt
push
in
cld
in
scas
shl
cmp
ret
jmp
dec
adc
mov
les
stos
in
stos
mov
and
clc
rcl
dec
ins
push
popf
push
clc
stos
not
and
pop
and
aaa
jp
sub
pusha
mov
mov
or
jmp
dec
(bad)
sahf
mov
add
xor
mov
and
mov
(bad)
mov
(bad)
cli
jns
pop
fsub
mov
arpl
sti
mov
dec
shr
mov
push
dec
shl
fnstsw
inc
adc
sub
mov
cli
and
cmp
sti
push
push
pop
idiv
dec
or
sar
jb
xor
sbb
imul
or
push
adc
add
int3
(bad)
xor
movs
mov
pop
adc
sub
push
int3
test
hlt
fcmovbe
dec
cmps
cli
jnp
jg
cmp
mov
jbe
xchg
xchg
or
test
scas
fucomi
mov
cmp
sub
lea
test
in
pop
cmp
pusha
push
neg
loope
mov
sbb
inc
inc
pop
cwde
mov
cmp
mov
test
pop
mov
sbb
cmp
jae
shl
out
fdivr
inc
nop
sbb
ds
cmp
or
xor
aad
shl
ins
push
mov
pusha
dec
adc
out
fadd
add
sbb
or
adc
or
inc
xor
out
(bad)
and
and
je
aaa
ds
shrd
ror
add
sbb
ror
mov
cmc
jno
lods
ret
cmps
xchg
into
mov
or
aas
mov
push
loopne
dec
cmp
aad
retf
aad
ret
pop
movs
mov
repnz
cdq
(bad)
cli
and
mov
and
ror
sar
or
jle
pop
sub
cmps
pop
mov
xchg
lods
pop
(bad)
pop
mov
das
adc
or
add
fmulp
push
(bad)
jl
pop
sub
inc
jno
pusha
and
jge
leave
mov
adc
mov
add
ficomp
jmp
cmps
and
xchg
iret
sbb
scas
into
adc
push
(bad)
jmp
pusha
cmp
jnp
dec
cmps
sbb
mov
lock
inc
repnz
mov
addr16
push
sub
ret
dec
mov
cmp
(bad)
(bad)
push
pop
mov
js
jg
push
mov
dec
mov
nop
push
and
pop
mov
and
push
mov
lea
and
push
out
enter
ins
xor
sar
push
je
jae
mov
sub
pusha
lods
xor
mov
scas
mov
xchg
and
(bad)
out
scas
push
in
or
cdq
lods
sbb
test
leave
lods
and
daa
push
imul
daa
or
add
gs
ds
test
call
mov
mov
sbb
mov
cwde
push
fmul
adc
sahf
ins
or
bound
outs
in
ss
fisub
loop
and
out
popa
fdivr
stos
cld
ret
push
jge
add
pop
xchg
inc
and
mov
dec
pop
mov
retf
mov
sub
mov
jnp
pop
jnp
adc
cmps
inc
pop
shl
push
jae
scas
rol
jmp
daa
push
ror
dec
xchg
call
sub
mov
pop
ds
test
sub
jne
stos
cmp
lds
arpl
adc
repz
into
(bad)
ins
jp
popa
lock
sub
lds
adc
daa
cmc
mov
inc
jmp
jo
scas
adc
add
fdivp
xor
enter
xlat
sbb
add
pop
xchg
(bad)
loope
push
mov
(bad)
repz
push
loopne
dec
es
outs
lods
sbb
cmp
jp
and
and
mov
jp
xchg
inc
stc
inc
imul
dec
fnstsw
mov
jb
sahf
jmp
xor
sti
fstp
into
test
add
xchg
jl
hlt
jnp
sbb
or
cmps
jnp
scas
inc
aaa
rcl
nop
les
mov
jecxz
shl
and
pop
add
loop
sub
cmovno
out
lods
gs
fstp
pop
mov
mov
mov
scas
lahf
jl
mov
jnp
pop
gs
mov
xor
jecxz
aad
mov
icebp
and
int
xor
das
mov
mov
aam
dec
sbb
and
push
in
mov
xchg
hlt
rcr
movs
mov
push
sbb
pop
ss
repnz
pushf
fs
lods
xor
mov
push
in
call
mov
das
movs
mov
sub
je
push
out
retf
or
fiadd
cmp
retf
(bad)
sub
imul
push
ret
jp
int
push
dec
cld
push
xchg
jno
stos
adc
inc
and
cld
add
mov
stos
mov
sub
mov
add
sub
sbb
xchg
and
xchg
enter
das
fst
add
jbe
add
es
mov
lods
fwait
add
pop
dec
addr16
int
mov
test
dec
fdivrp
cmp
fs
add
jno
dec
ret
inc
stos
test
push
cmps
repz
outs
jno
jb
in
(bad)
mov
leave
ror
call
pop
sbb
or
in
inc
jle
rcr
rol
dec
pop
mov
fs
lods
xchg
jle
pop
jmp
imul
movs
sti
popf
add
or
jp
pushf
adc
jg
jge
outs
aad
jns
dec
(bad)
cmp
aaa
mov
lahf
xchg
lods
leave
xor
cwde
push
cmps
shl
jbe
test
push
xchg
sbb
test
jbe
mov
mov
stc
sub
adc
dec
movs
test
js
jmp
or
call
stc
cwde
out
mov
mov
sub
cmp
xchg
lahf
push
or
dec
jle
inc
xchg
out
jp
cld
mov
adc
or
das
fwait
dec
retf
mov
add
xor
pop
mov
out
fidiv
dec
enter
push
add
cmp
lea
cmp
xor
outs
cmp
and
jae
(bad)
test
rcl
ds
ja
or
and
lahf
jle
pop
fdiv
lea
bswap
push
or
pop
xchg
and
rcl
mov
cmps
mov
mov
jnp
cmp
and
add
dec
inc
and
lds
dec
inc
inc
clc
lahf
nop
je
inc
jo
or
inc
cli
fstp
cmp
faddp
out
jno
add
dec
ins
jb
test
ret
loopne
imul
in
sub
add
adc
out
icebp
iret
ret
pop
mov
pop
pop
outs
mov
jbe
cmp
pop
mov
add
sub
xchg
pop
ja
dec
loope
and
mov
out
mov
pop
jb
mov
sbb
test
fimul
aas
sub
add
mov
push
mov
imul
in
(bad)
add
pop
ins
aad
inc
xor
lods
bound
ret
sub
mov
mov
cmp
mov
bound
(bad)
adc
add
jecxz
mov
dec
mov
cmp
pop
lods
test
sub
int3
addr16
mov
xor
xor
pop
scas
cmp
adc
or
adc
or
scas
cmp
jns
and
ror
sbb
sub
fistp
cmp
out
ins
push
cmp
dec
dec
cdq
aaa
rol
push
xchg
jl
add
jecxz
lea
cmp
pop
push
vmovq
push
xchg
push
ja
cwde
and
dec
rcl
cmp
aas
adc
clc
mov
xchg
cmc
dec
sbb
sub
jmp
and
jg
mov
movs
shr
add
inc
pop
movs
mov
xchg
lahf
in
inc
xor
fst
out
sub
daa
xchg
pop
xor
sub
sbb
mov
mov
and
imul
mov
pop
add
and
push
jb
sub
add
ficomp
xor
xor
cmps
mov
cmp
mov
inc
loop
jb
mov
test
pop
adc
data16
dec
pop
pop
outs
cs
dec
push
push
adc
out
movs
(bad)
cmp
in
repnz
mov
jle
stc
hlt
pop
inc
jmp
cmp
mov
xchg
call
xor
xor
repz
cmp
jle
addr16
dec
mov
mov
js
sahf
jnp
xor
lock
cmp
sub
ror
cmps
xchg
cwde
pop
xchg
(bad)
cs
sub
lods
loop
ins
push
test
xchg
jae
cwde
into
js
call
adc
xor
and
mov
in
push
cmp
or
nop
jnp
popf
mov
scas
icebp
ds
xchg
or
pop
inc
sbb
repnz
xchg
pop
ja
into
jmp
jo
pusha
sub
mov
push
cmp
add
ja
(bad)
in
fnstenv
pushf
jb
mov
cmc
pop
fcomp
out
and
jg
adc
aam
xchg
imul
(bad)
mov
mov
pavgw
das
sub
push
pop
or
mov
xchg
cmp
and
pop
adc
popf
cmp
arpl
daa
pop
(bad)
fisttp
stos
movs
fmul
gs
lock
mov
sbb
dec
and
push
and
cmp
pop
dec
mov
mov
mov
mov
cmp
rol
ficomp
xchg
out
jg
in
sub
jg
sub
inc
gs
mov
xchg
ja
in
mov
fist
cmc
inc
and
jno
sbb
push
cmp
fmul
lds
dec
inc
sub
adc
mov
ins
lods
sbb
xor
push
retf
xchg
cmp
outs
fst
sub
repz
mov
jno
pop
push
push
and
adc
imul
ret
movaps
aas
(bad)
mov
(bad)
jmp
stos
loopne
lods
daa
cmovns
sbb
inc
mov
data16
or
xor
cmp
addr16
jno
cmove
shl
push
repnz
out
nop
movs
mov
mov
rcr
mov
sbb
mov
mov
aas
cmp
stos
stc
sbb
xlat
xor
pop
pop
je
add
sbb
and
xor
pop
fs
out
jne
iret
xchg
mov
jle
imul
jecxz
mov
(bad)
(bad)
popa
add
sbb
lods
add
pop
xchg
inc
jnp
sbb
fst
and
adc
cs
adc
add
xchg
add
add
clc
bound
mov
je
mov
add
push
ret
adc
pop
lock
mul
cmp
mov
adc
pop
loopne
mov
cs
imul
arpl
es
aam
repnz
and
leave
inc
jb
adc
scas
lahf
lea
jmp
sahf
imul
sub
mov
popa
or
and
or
or
popf
repnz
add
mov
pop
repz
(bad)
dec
(bad)
mov
jge
hlt
in
std
sbb
push
inc
loope
call
jle
mov
(bad)
test
xor
pusha
cmc
sub
pop
es
fist
inc
or
fs
sbb
fistp
push
jmp
xchg
in
mov
call
sub
adc
cmp
jle
cmp
outs
xor
cmp
(bad)
repz
pop
lods
imul
push
or
aaa
cli
cmps
pop
stc
mov
jns
inc
jp
(bad)
call
int3
test
sbb
ins
iret
pushf
clc
std
mov
out
test
or
pop
inc
mov
mov
push
out
jae
or
pop
add
sahf
xchg
jno
icebp
mov
sbb
das
jns
mov
jge
dec
aad
(bad)
shr
scas
adc
in
cmp
sahf
in
mov
inc
mov
inc
mov
(bad)
fist
imul
xor
inc
and
out
adc
in
or
dec
mov
and
(bad)
pusha
pushf
mov
and
mov
rcr
mov
pop
xor
mov
inc
mov
call
shl
xor
fld
daa
arpl
add
cmc
lahf
retf
mov
retf
xchg
mov
rcl
adc
push
mov
repz
outs
dec
dec
pop
cmp
enter
dec
dec
xchg
jecxz
mov
mov
les
pop
stc
cmp
jecxz
mov
or
pushf
ds
pop
mov
and
mov
in
test
sub
adc
or
mov
sbb
imul
mov
mov
and
outs
std
xor
mov
cmp
lods
adc
jmp
pop
enter
sbb
sbb
jg
pop
jp
and
inc
jmp
sub
stos
arpl
ja
push
pop
popa
movs
pop
mov
push
xor
pop
imul
mov
cmps
fwait
xchg
cmc
mov
cmp
imul
gs
sub
xlat
fidiv
gs
mov
je
xor
fsubr
xchg
stos
sbb
stos
cmc
iret
data16
mov
sub
mov
jmp
or
ja
cdq
pop
test
nop
or
sti
push
push
test
sti
hlt
scas
push
sub
or
in
cwde
mov
pop
imul
xchg
mov
push
nop
bound
mov
fisttp
add
loope
out
(bad)
in
aad
pop
dec
iret
cmp
jo
adc
cli
mov
sbb
ret
scas
pusha
in
(bad)
cmc
adc
jae
aam
inc
and
pop
pop
cld
mov
in
push
jmp
inc
dec
or
aas
out
loopne
iret
sub
cmp
jbe
or
xchg
push
inc
and
ja
and
cmps
mov
mov
and
repnz
mov
push
inc
in
outs
or
inc
stc
ins
test
cli
or
(bad)
sbb
daa
add
jns
jb
push
repz
fidiv
xchg
loopne
fld
push
or
inc
out
stos
hlt
into
push
push
xchg
adc
fucomip
jo
add
ins
jbe
push
out
dec
push
pop
popa
sub
(bad)
jne
sbb
mov
jecxz
sbb
clc
cmp
add
(bad)
aad
jae
sbb
push
in
(bad)
gs
dec
(bad)
jae
mov
push
shr
scas
mov
ficom
xlat
push
bound
aaa
jb
push
test
hlt
fs
je
call
pusha
lods
(bad)
jl
into
inc
push
add
fwait
das
push
mov
adc
mov
dec
mov
(bad)
and
pop
and
imul
ins
or
enter
mov
daa
jne
dec
out
cmps
ja
cmps
push
ins
sub
push
shl
dec
push
addr16
fnclex
add
xchg
mov
dec
push
(bad)
jle
mov
mov
scas
cmps
dec
lds
mov
cmp
imul
inc
jecxz
lds
push
jg
sub
leave
push
sar
jmp
pop
xchg
mov
test
shl
add
xchg
(bad)
dec
mul
inc
scas
ja
leave
pop
push
push
adc
or
inc
jp
inc
clc
out
ror
pop
and
jge
in
dec
mov
pop
xchg
retf
sbb
outs
mov
add
mov
add
(bad)
cdq
inc
mov
add
jmp
jnp
test
rcl
pop
sub
aaa
movs
fild
push
pop
and
xchg
(bad)
cmps
addr16
dec
repz
pop
push
push
jne
lods
dec
jb
repnz
dec
sub
int
cmps
repz
(bad)
es
fdiv
xchg
mov
mov
adc
dec
push
inc
xlat
fnsave
mov
aam
lahf
leave
jecxz
out
sub
cmp
aam
call
dec
xor
cmps
mov
fbld
in
sub
imul
sbb
and
jmp
das
retf
mov
adc
es
and
sti
call
or
(bad)
lods
addr16
push
jg
fbstp
jns
dec
addr16
es
pop
adc
mov
push
(bad)
fidivr
retf
pop
xchg
lods
test
std
push
and
dec
jb
faddp
jp
mov
and
fiadd
jne
mov
xchg
sbb
and
xor
int
int
cmps
or
or
cmp
mov
arpl
mov
adc
imul
adc
push
popa
push
mov
ins
inc
and
mov
ja
mov
xchg
inc
(bad)
fdivr
push
jge
xchg
repz
sbb
and
xlat
fs
or
fistp
jno
jne
addr16
hlt
pop
ss
inc
(bad)
out
pop
inc
mov
xor
(bad)
(bad)
adc
std
pusha
or
xchg
and
cmp
lahf
and
clc
sub
fs
arpl
mov
iret
push
clc
out
or
push
sub
mov
rcl
push
mov
pop
dec
add
call
cmp
push
jecxz
sub
mov
aaa
fld
imul
sbb
sub
push
ror
xor
xchg
and
mov
clc
mov
push
sub
je
cmp
cs
mov
mov
or
mov
fwait
hlt
call
mov
jne
jp
dec
in
push
leave
mov
cmp
mov
pushf
push
and
inc
jl
pop
mov
xchg
test
out
push
xchg
inc
sub
mov
stos
mov
or
sub
in
jbe
add
pop
std
add
and
or
fiadd
pop
bound
pop
and
push
iret
fadd
iret
sbb
das
loopne
repnz
dec
xor
jle
fucomp
(bad)
push
repz
push
int3
out
jnp
(bad)
fnsave
enter
cmp
adc
sti
jo
jno
inc
jmp
(bad)
lods
cmp
mov
in
jmp
mov
nop
fst
xor
popf
cmp
push
push
sub
jmp
popa
adc
and
mov
shl
pop
xchg
jge
sbb
imul
add
rol
pop
leave
push
sub
cmp
cmp
popf
jp
lock
daa
mov
imul
sub
cld
js
cwde
lock
jp
or
xor
loope
xchg
or
fcmovbe
or
dec
adc
mov
push
(bad)
iret
daa
add
mov
mov
pop
(bad)
js
push
mulps
int
es
pop
cmp
pop
jmp
retf
mov
push
jmp
mov
mov
mov
push
lahf
adc
test
push
pop
fs
pop
xchg
push
retf
test
aad
je
iret
or
add
ror
inc
or
in
mov
inc
mov
sub
mov
mov
mov
dec
jbe
enter
call
mov
call
cld
push
popf
xchg
mov
adc
mov
popa
leave
jle
adc
xchg
jns
push
ror
ret
dec
xchg
bound
jge
xor
inc
(bad)
fldcw
fs
mov
pop
popf
outs
fcom
dec
adc
adc
iret
cmp
inc
outs
mov
mov
cmps
loopne
add
or
xchg
std
sbb
int
in
inc
(bad)
mov
add
mov
shl
in
sub
scas
repz
jmp
call
icebp
cmp
sub
std
sub
mov
fdiv
cmp
scas
lea
jnp
cld
sbb
loop
sub
mov
or
int
(bad)
jge
dec
add
sub
lahf
pop
pop
stc
xor
add
je
xor
pop
lahf
sub
inc
scas
mov
dec
sar
stos
loope
and
pop
pop
mov
int
repnz
imul
(bad)
ret
repnz
jge
cwde
out
imul
sub
data16
lods
fdivr
cli
or
fxch
movs
dec
neg
lds
dec
cmps
pop
sbb
adc
sbb
retf
das
sahf
cmp
fdiv
call
rol
mov
push
cmp
aam
scas
mov
sub
loopne
adc
lods
popf
push
mov
inc
add
or
gs
cld
mov
mov
cli
xchg
jns
cmp
stc
inc
sub
(bad)
call
mov
aam
bound
add
mov
sub
lods
mov
add
add
loope
mov
mov
pop
ret
(bad)
ja
pop
fcom
fnstenv
test
xchg
int3
xchg
pushf
adc
ins
cmc
push
and
fs
mov
outs
cmps
dec
cmps
add
sti
mov
jg
and
das
mov
inc
outs
mov
icebp
aas
scas
pop
mov
clc
inc
jl
push
jp
mov
push
jle
cdq
scas
mov
and
ss
inc
push
mov
imul
push
mov
cmp
shl
push
gs
cld
cmps
cmp
mov
iret
movs
sub
out
and
and
mov
lds
push
frstor
leave
mov
out
jnp
fwait
in
mov
shl
sub
pop
push
mov
loope
scas
push
pop
dec
popf
and
xchg
sub
cmp
inc
pop
mov
fwait
sub
mov
pop
cli
push
jb
leave
fisubr
shl
loopne
(bad)
in
cs
out
(bad)
jge
sub
mov
shl
jb
dec
pop
mov
popf
push
mov
les
push
loop
pop
inc
dec
inc
sub
imul
in
jge
and
sbb
in
or
fisubr
xchg
in
inc
sbb
sub
lds
in
bound
or
push
inc
push
sbb
and
add
enter
or
cmp
int3
dec
fsub
call
cmps
adc
jg
leave
into
and
jecxz
add
out
inc
mov
xchg
mov
shl
call
ds
cdq
fisubr
lar
out
into
mov
sub
jns
lods
cdq
dec
adc
sub
fild
push
inc
and
movs
cmp
jmp
sub
push
pusha
pop
sbb
in
test
daa
xchg
js
mov
or
or
sbb
cdq
and
mov
pusha
out
cld
mov
dec
inc
cdq
mul
sub
xor
jge
dec
mov
inc
sub
aaa
test
ret
in
mov
sub
into
or
dec
or
xor
shr
ins
nop
hlt
jns
mov
mov
cmp
jg
fs
xchg
xchg
xor
adc
push
sbb
and
xchg
dec
ins
and
pop
and
test
scas
push
cmp
int
ret
retf
cwde
and
xchg
sub
aas
sub
jp
jmp
pop
xchg
jae
push
jmp
in
sbb
jge
cmp
scas
lock
mov
je
push
mov
mov
pop
clc
(bad)
fiadd
dec
push
pop
iret
push
or
imul
adc
scas
stos
out
sahf
movs
xchg
pop
sahf
or
pop
cmp
xor
clc
cmp
addr16
(bad)
xchg
(bad)
test
xchg
jecxz
cmp
add
dec
push
imul
or
rol
jmp
sbb
imul
dec
add
test
sub
and
mov
mov
push
push
nop
arpl
leave
sub
jg
push
shr
xor
in
mov
pop
sub
adc
das
test
and
add
push
inc
cld
int
pop
js
mov
add
xor
(bad)
push
mov
jns
pop
cmps
into
in
add
lea
not
push
test
psubusw
scas
dec
add
daa
mov
shr
dec
fsub
call
pop
je
push
xchg
or
leave
xor
mov
jg
mov
fs
xchg
push
jmp
pop
std
dec
inc
pop
jb
repz
popf
pop
and
imul
imul
bound
retf
call
push
pusha
test
pop
movzx
mov
int
hlt
xlat
enter
pop
cwde
test
push
retf
jl
jno
lds
and
sub
xchg
ins
repz
outs
clc
loope
add
or
cli
lods
stos
xchg
rcr
ins
and
push
cmc
xor
inc
retf
add
fiadd
xor
cmp
cmc
mov
add
xor
mov
xchg
repz
movs
js
or
iret
jno
mov
pushf
mov
jb
fstp
and
pushf
neg
xchg
mov
out
bound
inc
mov
pop
rol
mov
push
pop
ror
push
adc
dec
cmp
(bad)
inc
mov
sbb
in
iret
movs
nop
pop
imul
add
mov
add
xchg
pop
fcmovnbe
xor
sub
stc
std
mov
xchg
loope
sub
xor
pop
out
pop
rcl
or
or
retf
xchg
nop
push
fiadd
pop
(bad)
xor
mov
inc
sub
jl
shl
sbb
mov
push
pusha
dec
jmp
adc
pop
or
lock
sti
xor
dec
push
sti
jecxz
cdq
shl
movs
xchg
pop
cmp
js
push
and
(bad)
fnsave
clc
dec
outs
and
dec
inc
dec
test
scas
add
daa
mov
mov
jne
fidiv
scas
fdiv
or
ficomp
sbb
fst
and
in
inc
(bad)
jmp
arpl
pop
sub
and
cmp
push
or
dec
loop
dec
sbb
jg
jp
jg
add
pop
std
imul
ins
js
mov
dec
cwde
and
adc
mov
ins
sbb
mov
add
cmps
ja
sub
cs
mov
inc
mov
jmp
adc
xchg
lds
cdq
and
xor
arpl
loop
stc
dec
sbb
xchg
jbe
aad
sub
das
test
jae
movs
cmp
and
lods
inc
ficomp
call
pop
loope
imul
mov
clc
adc
ins
mov
lea
push
ins
push
fmul
mov
xor
call
mov
ss
dec
jbe
jecxz
and
imul
scas
adc
pop
mov
cmp
arpl
fimul
ss
ret
adc
pushf
iret
cdq
xor
jge
icebp
mov
cwde
lea
icebp
or
inc
jne
mov
loopne
cli
mov
nop
out
sbb
sbb
mov
gs
cmp
or
std
aas
loopne
xor
push
or
sbb
js
pop
dec
cmp
loopne
sbb
je
push
inc
pop
cmp
push
xor
les
jle
test
or
scas
fldcw
cmp
ficomp
dec
cmps
into
les
push
add
arpl
inc
push
lock
pushf
bound
or
push
dec
sbb
stos
rcr
dec
loopne
(bad)
stos
or
popa
(bad)
int
mov
adc
fcom
in
jb
jge
inc
ins
pushf
cmp
pop
sub
pop
ja
add
sub
or
shl
mov
fsub
sbb
inc
mov
sub
pop
adc
scas
loope
or
sar
call
aam
outs
pop
loope
stc
sahf
inc
test
pop
ret
inc
out
sub
cmp
xlat
xor
fmul
jge
mov
mov
xchg
sbb
mov
add
mov
xchg
fistp
cld
mov
adc
inc
test
fst
outs
movs
in
ret
xor
xchg
xor
pop
jecxz
addr16
retf
push
mov
pop
cmps
xchg
pop
nop
sub
retf
stos
jmp
jmp
xchg
jge
dec
and
jecxz
sbb
mov
mov
jne
pop
fsubr
lea
das
test
sbb
aad
das
ret
call
mov
push
jns
inc
mov
ret
lods
or
aad
pop
aad
adc
push
xor
aad
push
mov
sub
js
push
lahf
test
mov
inc
pusha
xchg
mov
pop
sub
rcr
xlat
test
add
mov
dec
push
mov
mov
imul
sub
pop
xchg
jne
cmp
scas
push
cmp
push
mov
mov
leave
pop
scas
ja
jmp
mov
dec
xchg
shl
cdq
outs
adc
punpckhbw
push
sub
push
aaa
sahf
mov
ins
jae
push
fst
int3
sbb
push
xor
pop
in
leave
call
ins
push
mov
jnp
addr16
in
les
out
or
cmp
pop
aaa
adc
or
pop
xchg
(bad)
cli
mov
fdivr
jmp
mov
pop
fcmovbe
adc
fs
add
js
adc
out
push
adc
mov
inc
xchg
xchg
test
xor
mov
inc
fisub
jne
xchg
retf
jne
les
in
inc
imul
mov
mov
sub
lods
fcmovnu
pop
mov
adc
pop
adc
sbb
imul
out
(bad)
xor
fsubr
and
xor
rcl
mov
ret
cmp
mov
ins
lahf
inc
rcr
xchg
int
repnz
arpl
or
mov
(bad)
pop
cmp
mov
or
stc
movd
gs
push
hlt
mov
retf
jb
daa
mov
ins
mov
scas
pop
rcl
(bad)
lds
mov
retf
push
aas
loope
dec
sbb
jl
mov
add
ins
arpl
jbe
(bad)
jmp
dec
int
mov
xor
jp
jl
in
and
mov
sub
sub
out
shl
outs
and
push
int
cmp
inc
adc
cmp
lds
ss
jnp
ficom
(bad)
bound
inc
or
popa
imul
(bad)
fbstp
and
ins
imul
(bad)
aas
cmc
or
outs
sbb
mov
cmc
mov
jae
das
in
xor
daa
xor
das
movs
jno
push
mov
call
mov
fcomp
(bad)
sub
div
retf
shl
je
cmp
push
das
pushf
pop
jl
imul
pop
sub
loopne
das
mov
mov
push
adc
nop
sbb
popa
add
and
fwait
or
movs
dec
push
je
and
out
pop
fs
in
pop
cdq
sahf
imul
pop
push
mov
into
xor
shl
test
pop
and
sahf
dec
sbb
cmc
add
xor
(bad)
loope
pop
xor
or
loop
or
push
outs
mov
popf
mov
js
pop
push
or
and
fistp
and
jmp
cmp
pop
jo
dec
adc
inc
jmp
(bad)
mov
int3
clc
ds
mov
jbe
dec
push
sti
mov
pop
push
test
mov
inc
in
pop
pop
iret
arpl
js
jne
adc
lods
inc
pop
stc
xchg
test
rcl
xchg
pop
popf
mov
icebp
push
mov
repnz
(bad)
mov
jae
or
push
(bad)
jle
dec
pop
pop
movs
adc
dec
out
xchg
out
(bad)
jbe
xlat
xor
jo
pop
mov
enter
cmp
jo
or
cmps
fstp
scas
sub
enter
fst
(bad)
hlt
dec
xor
sub
cmps
retf
inc
jno
lea
mov
sbb
bound
jns
adc
fdivr
test
cs
xchg
ret
and
mov
mov
xor
enter
mov
out
loop
xchg
shl
sub
lods
inc
das
cmp
adc
jnp
cmps
ins
push
movs
retf
push
xor
xchg
scas
(bad)
pop
xchg
rol
push
inc
sub
retf
mov
test
and
rcr
jmp
(bad)
cmp
sbb
hlt
cdq
or
pop
jno
xchg
fwait
jmp
popa
xlat
mov
or
das
js
cmps
xchg
dec
neg
jns
(bad)
cdq
sbb
mov
jo
adc
mov
add
pop
mov
pop
sbb
cmp
pop
xor
enter
outs
pop
sahf
mov
dec
in
cmp
packssdw
jmp
pop
inc
rcl
cs
loopne
in
nop
aad
jecxz
or
popa
dec
enter
addr16
(bad)
ficomp
and
cmp
mov
lock
shl
sub
stos
repz
jns
pop
sub
clc
pushw
mov
sar
scas
dec
pop
and
out
ja
cmps
xor
fs
xor
lds
lock
ret
aaa
xchg
cmp
mov
dec
retf
(bad)
dec
iret
xor
sbb
push
or
fadd
xchg
pushf
aam
pop
adc
fcom
push
cmp
fist
ja
outs
adc
and
pop
jle
or
shl
push
or
and
(bad)
mov
(bad)
aaa
and
dec
popf
mov
adc
fs
dec
lods
pop
xchg
arpl
xor
pop
gs
inc
inc
in
inc
call
(bad)
cmp
test
out
movs
xor
cli
in
leave
imul
dec
xchg
imul
sub
pop
push
mov
pop
cmp
and
ret
daa
outs
xchg
fmul
and
xor
fsubr
mov
sbb
std
icebp
fist
sub
push
hlt
ret
pushf
aad
test
out
les
push
pushf
je
pop
add
mov
mov
int3
mov
xchg
and
cld
test
in
xchg
dec
or
and
popf
lock
int
mov
jbe
jne
mov
add
inc
sub
xchg
inc
out
or
inc
repnz
sub
sub
mov
fiadd
retf
in
sub
call
mov
ret
fchs
shl
loope
lea
ror
stc
rol
pop
mov
js
add
movs
fsubr
cmp
jmp
mov
or
ficomp
shl
inc
not
xor
loopne
fadd
push
mov
cmp
mov
mov
xchg
pop
jmp
retf
lods
sbb
push
push
repnz
lods
dec
mov
mov
xor
and
mov
mov
out
and
xlat
sahf
adc
in
hlt
cs
xor
mov
arpl
cmp
sub
mov
and
push
jmp
push
add
imul
jne
bound
(bad)
ds
jmp
pusha
mov
sar
fwait
mov
cmp
cld
inc
retf
(bad)
data16
std
retf
inc
mov
sub
push
or
mov
dec
popf
loope
bound
and
dec
cwde
pushf
mov
addr16
imul
cld
xor
ret
and
add
imul
(bad)
cmps
loopne
sbb
xchg
push
mov
jge
retf
xchg
aad
loop
pop
test
movs
adc
mov
mov
jmp
push
std
aas
push
rcr
mul
cmp
clc
lods
inc
xor
in
add
mov
jg
inc
sbb
ss
jle
xchg
fsubr
jo
retf
enter
cmp
stos
sbb
jae
xchg
cld
stos
dec
xor
pop
repz
std
mov
addr16
pop
es
and
jmp
sub
xchg
or
inc
fldln2
pop
lahf
push
call
mov
imul
sbb
mov
in
dec
rol
fdivr
jp
lahf
xor
lahf
fwait
in
xor
stos
pop
lods
lods
add
jle
dec
shr
add
es
out
out
or
(bad)
mov
pusha
(bad)
in
jp
and
mov
mov
push
lods
dec
inc
lds
and
aam
jne
pop
std
cmc
jae
push
data16
cmp
jo
inc
cmp
aam
xchg
add
jge
test
mov
or
idiv
push
adc
test
mov
or
sub
retf
std
stc
mov
fwait
dec
sbb
or
xor
repnz
imul
lahf
jbe
fiadd
xchg
push
lods
enter
jmp
fimul
les
je
fnsave
mov
jg
movs
cdq
jp
or
jl
adc
or
movs
daa
and
or
div
ss
inc
jb
ss
in
sbb
sbb
xor
inc
mov
push
sub
xchg
xor
adc
mov
fcom
loopne
mov
mov
aad
jp
mov
and
cmp
out
inc
push
mov
and
paddq
mov
int3
aas
fs
and
aas
push
push
push
sbb
movs
inc
test
cs
aad
mov
sbb
cmps
pop
dec
inc
in
dec
or
xchg
jecxz
push
repz
cld
gs
sbb
dec
ss
retf
xchg
sbb
xor
jbe
pop
cmp
sub
add
mov
aad
add
dec
bnd
jns
xor
pop
lods
dec
mov
mov
aaa
xor
inc
dec
imul
mov
ret
leave
stos
add
add
xor
cmp
add
addr16
cmp
mov
popf
in
adc
bound
call
dec
fdivr
les
mov
int
rcl
or
dec
xor
call
lods
inc
mov
mov
idiv
into
add
retf
jno
xchg
sub
in
shr
mov
cmp
in
std
scas
jp
cmp
leave
jp
sbb
sub
dec
not
sbb
test
in
imul
lds
sbb
mov
cli
jnp
jecxz
aas
mov
mov
hlt
into
iret
or
sahf
fimul
lahf
xchg
shl
sbb
sti
ret
sbb
inc
add
push
rcl
xor
jmp
pusha
mov
inc
mov
imul
stos
ret
mov
xchg
call
pushf
dec
sbb
mov
enter
fwait
mov
push
and
loop
shl
test
dec
sbb
xor
call
and
push
mov
add
es
in
iret
mov
movs
scas
stos
xor
sar
xor
push
popa
adc
inc
aam
push
lods
sar
mov
pop
push
xor
inc
in
(bad)
stc
push
mov
xor
cmp
mov
xchg
aad
sbb
jae
mov
dec
je
imul
xor
xchg
pop
retf
shl
adc
pop
popa
dec
xor
cwde
xchg
mov
mov
aam
test
mov
fbstp
dec
adc
inc
or
sub
jge
pop
(bad)
pop
bound
fs
aam
pop
retf
xchg
mov
das
mov
aam
jg
mov
fidivr
push
inc
jge
xchg
out
add
std
nop
test
call
call
and
and
clc
test
pop
mov
dec
test
adc
loope
and
xchg
(bad)
punpckhwd
mov
jmp
fcom
sub
out
xor
jbe
aaa
jno
xchg
sbb
and
and
mov
sub
dec
pop
loop
lock
add
pop
cdq
les
int3
sbb
jmp
sub
nop
or
stc
pop
sar
sub
loopne
pop
add
call
add
mov
(bad)
cmp
jo
adc
sub
clc
adc
dec
pop
sub
aam
int3
xchg
loope
loopne
add
sub
mov
mov
minps
xchg
std
loopne
dec
shl
and
(bad)
inc
mov
out
mov
lods
or
je
xor
pushf
or
mov
pop
cmp
int3
iret
push
xchg
xor
xlat
or
movs
pop
jmp
cmp
iret
or
push
add
inc
push
dec
jno
jmp
mov
test
enter
and
call
add
iret
call
xor
test
popf
into
fist
pop
out
jmp
cmp
sbb
mov
popf
aaa
or
mov
inc
pop
sbb
ja
adc
pop
mov
ficomp
gs
mov
push
imul
movs
jl
std
xchg
push
inc
push
es
add
lds
lahf
mov
pop
stos
xor
push
and
dec
je
arpl
cmc
sbb
add
outs
in
int
je
cmp
(bad)
sub
lahf
adc
mov
pop
ds
loope
jbe
jge
imul
fwait
jmp
xlat
lds
(bad)
mov
push
pop
in
xchg
sbb
fucomip
cmp
rcr
pop
add
sahf
jp
xchg
sti
mov
sbb
inc
repz
fld
push
scas
xchg
add
inc
cmp
inc
xchg
pop
das
shl
(bad)
and
outs
xor
inc
pop
in
in
push
dec
mov
pop
bound
movs
cli
push
inc
sbb
or
and
mov
movs
test
inc
xchg
mov
lahf
sub
int
mov
movs
jmp
sbb
mov
pop
jecxz
xchg
ins
sti
cdq
pushf
fs
je
das
adc
dec
pop
in
fsubr
(bad)
jns
ins
outs
retf
dec
inc
sub
aaa
xchg
out
lods
mov
in
mov
stos
cdq
lock
aaa
outs
mov
push
sar
jnp
inc
imul
push
stos
mov
or
push
data16
jne
(bad)
push
xor
jp
mov
mov
mov
in
test
push
cld
adc
xchg
retf
retf
test
pushf
je
pop
movs
xchg
sub
iret
sbb
scas
cmp
int
cmp
pusha
mov
xchg
aaa
mov
push
push
mov
mov
jmp
(bad)
clc
or
push
(bad)
jns
pshufw
cmc
popa
jno
and
bound
pushf
inc
cmp
(bad)
loope
cmp
mov
sub
or
fnstsw
or
fs
adc
cmp
loope
mov
repnz
cmp
cmps
push
dec
popf
movs
sahf
mov
test
mov
aas
out
adc
push
push
push
dec
outs
ret
fld
jg
lds
jecxz
xchg
jbe
stc
fs
xchg
mov
loopne
scas
add
sub
push
les
mov
jge
in
push
mov
pop
aas
or
sbb
dec
add
ins
or
sub
or
repz
in
jmp
in
lea
mov
inc
jns
stos
xlat
dec
test
and
or
or
mov
xchg
loopne
int
and
stos
je
fiadd
sbb
cli
not
inc
aas
arpl
int
(bad)
aad
push
cld
arpl
sub
pop
imul
push
cli
jmp
ret
loop
(bad)
sbb
(bad)
inc
cmp
sub
loope
mov
cmc
cmp
pushf
push
mov
mov
ret
sbb
mov
fcom
xor
loope
mov
test
stos
and
add
das
pop
jo
adc
test
sub
xchg
add
mov
pop
dec
xor
sub
xchg
outs
ins
sub
jecxz
sub
mov
movs
jne
fwait
out
mov
mov
gs
fild
and
add
mov
adc
test
mov
inc
mov
test
sub
and
sbb
leave
aam
mov
pusha
dec
fst
inc
ror
adc
js
test
sbb
jg
sbb
mov
lock
arpl
push
test
sbb
pop
inc
mov
movs
scas
push
push
fcomp
pushf
push
xchg
pop
xor
cwde
rcr
xchg
ins
lods
dec
adc
xor
retf
jmp
(bad)
pop
mov
loop
test
call
push
popa
out
div
and
cs
or
aas
sub
sub
sub
ins
push
add
les
das
mov
cwde
fstp
dec
and
test
out
jbe
enter
mov
and
dec
jle
dec
jl
fistp
bound
shl
mov
stos
dec
pop
scas
addr16
pop
lods
addr16
int
stos
mov
xchg
lea
pop
adc
jp
sub
nop
dec
sub
leave
addr16
call
repz
cmp
or
or
adc
jb
repnz
daa
aam
push
aaa
mov
jg
mov
imul
jl
add
rol
mov
rol
imul
shr
push
pop
ret
inc
sahf
add
dec
sar
inc
sbb
or
cmp
int
xchg
je
inc
xor
mov
ror
jp
xor
add
and
mov
fsubr
cmp
and
inc
stos
outs
fwait
je
test
adc
xchg
inc
retf
int
jno
add
fsub
sub
xor
mov
and
sub
dec
xchg
leave
loope
push
test
mov
sub
pusha
mov
inc
dec
push
lahf
mov
lods
adc
and
int
xor
call
push
mov
pop
popa
pushf
(bad)
sbb
rol
icebp
ret
outs
mov
jp
aam
push
shr
mov
or
js
and
add
sub
mov
mov
adc
jmp
pop
pop
and
and
in
pop
jge
adc
xor
or
mov
adc
(bad)
(bad)
cmp
hlt
push
mov
push
jno
pop
mov
(bad)
and
cmc
test
ror
icebp
lods
jae
out
js
xor
(bad)
std
out
pop
jle
jge
repz
hlt
lds
and
and
sub
pop
cmp
test
jbe
inc
ret
xor
scas
mov
and
jmp
and
cmp
leave
xchg
movs
repnz
or
jp
mov
outs
int
sar
(bad)
fldenv
pop
mov
push
inc
xchg
lds
arpl
js
retf
sub
cmp
das
dec
mov
adc
sar
out
xchg
arpl
icebp
idiv
imul
aas
fbstp
repnz
iret
fs
test
inc
adc
mov
or
add
pop
push
sbb
sub
(bad)
cmp
push
xchg
ja
int3
scas
stos
mov
inc
sub
or
movs
mov
dec
dec
fsubr
in
cmp
mov
cmps
adc
or
and
fld
push
fist
jle
or
mov
ss
popa
es
lods
ficom
inc
dec
jmp
pop
dec
fdiv
sub
push
xchg
rcl
add
add
repz
iret
shr
or
ins
int3
call
jns
shr
pop
shl
push
jo
mov
fdivr
dec
ror
or
cmp
adc
inc
pop
or
stos
test
jge
stos
leave
arpl
lahf
xor
movs
sbb
fbstp
mov
sub
or
sub
xchg
ror
arpl
or
pop
sub
dec
jb
je
mov
push
push
inc
add
pop
mov
dec
sub
test
mov
popa
shl
xchg
mov
pop
test
imul
rcr
std
imul
shl
std
and
les
ret
cmp
mov
sbb
(bad)
int
dec
loope
sbb
jmp
shl
jb
popa
adc
add
sbb
xor
aam
scas
fdiv
add
or
push
or
and
ds
repnz
jg
sbb
pusha
call
pushf
nop
(bad)
jns
das
or
lods
cld
jl
sub
movs
or
or
or
mov
mov
leave
or
fwait
in
mov
add
push
in
cld
sub
loop
jno
leave
dec
dec
inc
xlat
imul
mov
iret
pop
loopne
call
sub
sti
pop
ret
mov
je
mov
inc
mov
leave
bswap
dec
ins
in
push
in
mov
js
lods
add
jae
pop
xchg
jmp
cmp
adc
pop
push
sub
xchg
add
test
lods
sbb
xchg
and
jae
shl
pop
sbb
sub
(bad)
mov
mov
jne
jecxz
or
mov
ins
inc
loope
mov
inc
hlt
popf
push
ins
jl
cmp
scas
aas
(bad)
stos
dec
push
in
int
xchg
clc
ins
fbld
loope
sub
imul
pop
mov
adc
sub
cli
push
push
inc
or
add
mov
xor
addr16
adc
loopne
das
into
mov
cmp
cmp
icebp
mov
ja
adc
jle
ins
fld
mov
xchg
cmps
sbb
loope
loope
dec
out
pop
test
mov
cmps
outs
faddp
rcr
xor
pop
jno
vcvtps2dq
adc
adc
leave
mov
in
push
mov
pop
xor
push
div
out
sbb
call
pop
sbb
inc
mov
fstp
pop
jnp
push
aad
jp
(bad)
sti
jae
mov
cmp
sahf
mov
inc
(bad)
repnz
in
mov
arpl
adc
inc
push
pushf
push
jae
outs
int3
and
xchg
inc
inc
push
cld
mov
(bad)
cdq
data16
mov
shl
movs
nop
adc
aas
inc
sub
or
outs
neg
mov
pop
mov
cli
js
neg
or
clc
repz
aam
mov
jae
xchg
xchg
fist
xchg
lock
push
inc
scas
fsubp
gs
mov
add
stos
push
stos
push
or
call
jb
fstp
push
leave
pop
add
inc
ror
mov
mov
pop
add
inc
mov
push
test
stc
arpl
call
test
sti
ret
adc
add
jbe
cdq
jne
int3
leave
push
call
fs
out
xchg
not
or
xchg
daa
xchg
mov
inc
imul
add
sub
popaw
movs
popa
pop
pop
jno
popa
ja
pop
idiv
inc
cdq
popf
into
jge
sub
fbld
pop
imul
sub
or
add
rcl
mov
call
data16
ins
inc
mov
ins
jmp
jb
ins
cmovle
lahf
cmp
aas
xchg
adc
arpl
cmp
inc
(bad)
(bad)
and
or
dec
ins
mov
jo
aaa
sub
movs
inc
std
adc
unpcklps
xchg
sub
add
mov
pop
jbe
ds
mov
fstp
xor
stos
xchg
mov
out
mov
and
repnz
xchg
lock
mov
xchg
jp
adc
in
hlt
push
ja
popf
in
aaa
and
rcr
dec
pop
int3
fwait
movs
lds
adc
rcl
mov
fcom
or
int
or
loop
outs
out
adc
sub
test
retf
out
jge
inc
in
outs
sbb
loopne
fucomp
mov
sahf
xlat
pop
mov
bound
shl
fnstsw
cmp
lods
mov
pop
xchg
retf
mov
test
cmovp
push
stos
and
jnp
stc
mov
adc
mov
xchg
jo
or
sti
cmp
mov
pusha
shl
fdiv
mov
or
add
ss
inc
rcl
icebp
outs
push
shr
sub
imul
add
push
and
jo
(bad)
pop
iret
push
mov
aam
rcl
repnz
call
adc
jl
lods
mov
fdivr
iret
cmp
xchg
xchg
lods
jge
aad
dec
popa
pop
sbb
add
fstp
push
inc
(bad)
sti
sahf
mov
mov
fisubr
stc
inc
mov
mov
xchg
cmps
mov
sbb
sbb
sub
pop
mov
sti
jno
push
dec
fdivr
add
xchg
movs
outs
pop
out
inc
mov
lock
pushf
aam
adc
pop
ret
cmp
pop
test
dec
mov
enter
jae
les
mov
mov
nop
sbb
call
jns
add
mov
mov
shl
fmul
xor
scas
mov
ins
xor
(bad)
enter
mov
adc
dec
sahf
test
ja
jmp
shr
lods
jae
fwait
and
mov
(bad)
xor
push
jle
xor
ins
push
scas
mov
in
fcomp
pop
pop
mov
or
mov
cli
aad
jb
test
lods
mov
add
xor
rcr
(bad)
test
push
lea
or
les
sbb
add
cli
mov
pop
ret
sbb
sbb
outs
add
stos
das
mov
adc
ret
jne
in
pop
add
push
xor
bound
dec
cmp
je
(bad)
arpl
or
jp
xchg
movs
mov
jge
lds
iret
int3
cmp
imul
jl
test
ins
fmul
ja
xor
dec
hlt
outs
mov
(bad)
(bad)
cmp
mov
xor
mov
or
cdq
dec
(bad)
loop
jbe
push
int3
jecxz
jno
fadd
shl
mov
(bad)
jmp
mov
iret
fdiv
mov
aam
lods
(bad)
xor
or
xor
into
push
fdivr
mov
xor
mov
push
(bad)
xchg
or
sbb
jecxz
fsubr
pop
add
mov
pop
pop
inc
mov
jnp
addr16
mov
retf
aad
xchg
mov
pop
or
cmp
pop
push
fs
movs
ret
or
cmps
shl
xchg
loop
lods
push
cdq
pop
push
fs
imul
cwde
mov
sub
ds
sub
mov
sub
jno
call
and
mov
mov
out
lock
pop
push
jbe
movs
sub
jmp
leave
xchg
push
add
xlat
jg
out
inc
push
popf
fwait
mov
jge
pushf
dec
fmul
aas
xchg
jg
iret
sbb
or
cwde
xor
jno
and
adc
push
adc
mov
xchg
mov
mov
xor
sbb
sub
dec
rcr
lock
pop
jecxz
adc
mov
(bad)
jle
xchg
push
nop
xor
loop
inc
or
jns
dec
mov
pop
cli
inc
scas
dec
movs
lahf
movs
ficom
pop
adc
cmps
outs
pop
into
movs
add
mov
mov
push
jb
and
test
add
sbb
js
mov
and
sub
ja
mov
stos
mov
push
mov
bound
sbb
les
maxps
ret
leave
mov
imul
jmp
pop
jecxz
mov
mov
bound
sbb
jo
and
loope
push
mov
mov
cs
out
adc
mov
mov
jl
jae
dec
scas
repnz
std
call
dec
fidiv
jne
dec
xor
cmp
dec
jmp
adc
(bad)
ror
nop
pop
outs
(bad)
cmp
xchg
xor
mov
dec
sub
lds
dec
(bad)
pop
data16
mov
loope
or
out
mov
jo
add
ret
mov
ss
fiadd
inc
pop
mov
mov
add
pop
push
sbb
ins
mov
lock
out
mov
aad
jb
loope
push
outs
cdq
jmp
mov
sbb
aas
xchg
add
lods
push
jnp
es
sar
cmps
data16
push
add
dec
cmp
cwde
jmp
nop
loop
popa
lea
and
jne
retf
imul
(bad)
sahf
repnz
push
lods
xor
jl
loope
xchg
(bad)
ins
xchg
dec
stos
ds
sbb
retf
push
bound
icebp
pop
mov
adc
or
scas
or
pop
xlat
les
je
lds
ss
icebp
test
arpl
sbb
call
or
mov
pusha
out
xchg
sub
mov
(bad)
aam
popa
xchg
ficom
fdiv
ins
xchg
jp
lods
mov
pop
retf
daa
pop
xchg
add
dec
mov
dec
push
mov
fidiv
shl
jnp
daa
mov
jle
test
fistp
lods
(bad)
mov
add
mov
or
and
js
es
das
dec
out
ja
dec
pop
sub
leave
adc
xchg
fsub
mov
or
jmp
lds
mov
test
cmc
mov
sbb
inc
push
jmp
mov
movs
mov
ins
push
add
div
dec
adc
rcr
xor
fwait
sub
mov
jo
mov
add
sub
push
je
mov
ins
ret
rcr
loop
in
add
jns
retf
out
cmp
aam
gs
jne
call
add
call
dec
in
outs
xor
mov
ins
fldenv
call
cwde
adc
icebp
ins
and
mov
push
loop
adc
dec
push
mov
fs
xchg
inc
and
jb
shr
popa
sub
mov
push
(bad)
fisttp
sahf
or
cmp
out
loop
mov
mov
mov
xor
ins
mov
push
jo
sub
cs
push
push
into
imul
rcr
int
loop
mov
cmp
(bad)
aam
or
scas
aad
fadd
repnz
shl
ins
and
rcr
push
push
jl
mov
sub
add
xor
je
pusha
or
sbb
sub
fsub
out
popa
fcmovne
ja
pop
mov
arpl
jmp
call
and
and
sub
(bad)
mov
sbb
rcr
mov
fistp
or
cmp
jecxz
xor
lods
pop
and
push
push
inc
mov
and
cmp
sub
cli
xor
or
push
mov
dec
jmp
in
pop
fimul
inc
test
scas
shl
pop
js
loope
pop
add
je
dec
or
xchg
or
jge
pop
mov
mov
pop
mov
sub
aam
jo
mov
addr16
push
jge
lds
xor
scas
cmp
cmps
mov
sub
xlat
cld
pop
shl
jge
and
xor
enter
call
dec
aad
call
pop
in
stc
fnop
mov
das
icebp
fadd
(bad)
push
into
or
in
stc
leave
xor
adc
mov
fsubr
mov
push
xchg
pop
jnp
and
dec
jbe
mov
xor
mov
push
ss
(bad)
hlt
mov
fnstcw
stc
lods
add
repnz
push
mov
cli
dec
out
in
sti
lds
mov
mov
or
jp
lahf
sbb
xchg
jnp
adc
popf
mov
or
jo
int
lock
inc
mov
xor
je
fmul
test
xchg
mov
push
mov
mov
imul
mov
jo
movs
pop
sar
jo
pop
pop
std
xlat
pop
jns
sbb
out
inc
dec
dec
sbb
sbb
jnp
lods
adc
mov
pushf
jbe
hlt
out
or
icebp
(bad)
jnp
xor
pop
popa
pop
lods
mov
call
pushf
push
stos
pushf
sbb
adc
xor
lock
jo
ins
sbb
out
ins
out
add
mov
or
sti
loope
mov
and
shl
mov
xchg
in
adc
xor
jbe
add
shr
and
out
push
mov
sbb
int
(bad)
add
aaa
pusha
push
add
arpl
icebp
fwait
push
icebp
popa
mov
push
in
rol
and
cmp
adc
pusha
inc
addr16
nop
(bad)
pop
cmp
xchg
cmps
shl
jge
add
and
aaa
mov
addr16
mov
dec
int
loop
push
mov
icebp
shl
in
mov
xor
jmp
fs
inc
(bad)
test
mov
hlt
frstor
push
push
xchg
or
cdq
add
es
adc
ret
and
jl
retf
and
push
neg
dec
into
retf
outs
dec
(bad)
mov
clc
into
sbb
lea
add
sar
sub
stos
jg
and
ds
cmp
push
lods
int3
push
cmp
(bad)
int
dec
push
jmp
sahf
inc
cs
push
rcr
cmp
dec
jl
fmul
stc
push
pop
and
push
es
stc
bnd
or
xchg
clc
dec
fsubr
sub
push
imul
jmp
jg
lods
xchg
imul
or
adc
adc
push
adc
stos
or
mov
das
scas
ficom
push
pushf
addr16
les
mov
pop
nop
sbb
movs
cmp
in
movs
scas
imul
jb
or
push
add
jne
jmp
test
dec
sbb
test
push
push
clc
jmp
leave
sub
mov
push
xlat
(bad)
fisub
push
pop
add
call
jp
xor
pop
lock
jns
sub
outs
mov
pop
cmps
sti
sub
push
addr16
psubd
shl
in
mov
lea
out
enter
pop
jns
ret
in
mov
adc
mov
nop
pop
data16
xchg
sub
ins
jmp
sub
or
sti
xor
mov
and
neg
mov
and
adc
xchg
arpl
cmp
dec
add
add
jmp
push
mov
(bad)
call
jmp
add
pusha
mov
lock
inc
outs
push
xchg
cmp
or
and
cmps
mov
out
push
cmp
jns
dec
outs
icebp
in
jge
cli
jne
fucomip
jge
push
sub
xchg
pop
add
fisub
cs
xchg
jmp
add
loope
sub
jb
mov
lahf
in
nop
adc
sar
sub
add
ret
xor
addr16
xor
retf
mov
push
shl
cmps
inc
es
aad
jge
pop
(bad)
sbb
ins
mov
jno
pop
pushf
bound
dec
test
xchg
or
push
rcl
mov
sub
jp
outs
sub
mov
aad
inc
mov
dec
dec
mov
adc
fist
popa
inc
sbb
ja
icebp
cmp
adc
xchg
mov
loope
xchg
jbe
lea
sbb
loop
call
lock
lods
stc
inc
movs
ror
sahf
aaa
(bad)
cmp
lock
mov
(bad)
les
cdq
test
sahf
adc
je
jp
neg
or
outs
adc
adc
push
push
cmp
in
jge
mov
std
sbb
push
pop
in
cs
and
repz
cmps
push
cdq
mov
inc
or
pop
add
call
push
and
popa
mov
jno
lock
in
mov
and
or
lea
xchg
jl
add
mov
test
xor
outs
imul
test
std
cmp
hlt
daa
cmp
and
pop
bnd
retf
rcr
adc
es
iret
cld
jecxz
cmp
retf
or
fidivr
rsqrtps
test
add
int
adc
sub
stos
and
pextrw
(bad)
fdivr
test
mov
sbb
sub
in
xchg
clc
les
lahf
jae
xchg
pop
jg
push
movs
sahf
jae
fsqrt
or
pop
pop
fild
pop
xor
dec
ja
call
jge
cmps
cmp
popf
je
je
push
lock
popf
and
mov
cwde
es
push
je
inc
les
jmp
leave
sub
dec
or
in
xchg
cmc
pop
xchg
inc
mov
xor
add
out
sbb
mov
shr
movs
add
leave
out
arpl
xchg
sbb
rcr
rcr
push
mov
sub
js
cmp
dec
ins
ficom
dec
inc
sub
lods
fstp
add
push
or
shl
xchg
pop
das
cmps
fidivr
mov
inc
push
pop
sar
pop
jne
or
repnz
int
push
retf
into
jge
or
out
mov
pop
mov
and
outs
push
mov
cwde
and
sub
cmp
into
jno
add
push
shr
imul
lahf
pop
mov
out
test
hlt
call
leave
mov
xchg
stos
sbb
xor
int
push
mov
btr
mov
and
add
inc
imul
xor
sbb
push
push
in
(bad)
repz
das
loope
add
(bad)
out
rep
sahf
push
adc
xchg
inc
sub
movs
lock
(bad)
movs
mov
xchg
icebp
fist
popf
xchg
and
jno
iret
sahf
ins
sbb
cld
in
lock
pop
dec
rol
dec
sbb
mov
xor
xor
dec
add
dec
pop
imul
mov
push
rol
jecxz
dec
mov
and
pop
xchg
and
cmps
iret
mov
push
or
rcl
out
mov
or
loop
inc
jns
sbb
adc
sub
cmps
sub
xor
push
inc
sbb
mov
sub
dec
mov
or
mov
repz
stos
out
fwait
outs
ja
or
sbb
loop
addr16
dec
into
rcl
xchg
retf
int
pop
pusha
rcr
mov
mov
mov
(bad)
pop
pop
jnp
lds
add
push
push
push
call
mov
ja
dec
not
mov
cmp
jp
bnd
sub
addr16
pop
lea
pop
mov
(bad)
shr
dec
hlt
jmp
arpl
mov
jecxz
or
sbb
bound
cs
inc
(bad)
mov
inc
fnsave
xlat
xor
dec
dec
adc
mov
xchg
ins
adc
das
call
pop
test
push
out
adc
adc
arpl
mov
clc
in
loop
lds
pop
jg
mov
scas
ds
mov
(bad)
cmp
hlt
mov
movs
add
add
pop
dec
jecxz
scas
ret
mov
cdq
ins
movs
jmp
mov
ret
push
push
std
jl
xor
cmp
sbb
pop
xor
in
sti
xchg
add
fs
push
xchg
mov
push
sbb
retf
xor
mov
xchg
popa
pop
jno
mov
stos
push
rol
cmc
mov
aaa
test
ja
jge
data16
adc
dec
push
xchg
dec
(bad)
jg
sbb
scas
mov
sbb
inc
adc
add
cmp
cmps
ins
fdivr
pop
mov
sub
ins
call
inc
mov
jge
sub
pop
rcr
test
adc
mov
sub
aaa
imul
or
cdq
cdq
dec
cmp
pop
xor
sbb
iret
stos
jp
loop
enter
mov
jns
push
add
aas
mov
ficom
sub
add
cmp
add
mov
sbb
ins
aas
push
pop
mov
daa
cmps
mov
pop
lods
shr
lds
in
push
not
dec
ror
test
mul
popa
sti
mov
rcr
cmp
mov
cmp
xchg
mov
and
stos
mov
push
jae
mov
gs
cwde
cmp
and
rol
xchg
(bad)
cmc
pop
test
dec
test
cmp
fst
int
loopne
add
sub
cmp
pop
gs
sbb
aad
ja
ins
pop
rcr
cmps
mov
js
cld
ss
into
and
push
mov
jmp
movs
dec
mov
sub
cmp
mov
pop
outs
imul
sub
daa
or
cmp
stos
leave
sub
ins
sub
jae
dec
jb
jge
lods
jmp
ja
repnz
mov
add
sbb
jae
in
test
(bad)
mov
or
test
call
xchg
imul
arpl
push
gs
mov
in
stc
mov
inc
or
clc
add
xchg
cmp
popa
push
iret
aam
shl
push
jecxz
mov
aam
test
call
test
mov
shl
in
test
cwde
sbb
and
adc
dec
gs
cmp
pop
mov
dec
(bad)
pop
cs
outs
call
jmp
test
mov
adc
nop
mov
push
popf
cmp
into
mov
not
mov
shr
(bad)
pop
repnz
stos
out
arpl
icebp
jns
mov
in
inc
cmp
jmp
sbb
jbe
xchg
and
int
adc
cs
mov
inc
jl
or
mov
adc
jecxz
sub
bound
ja
sbb
xor
es
mov
jb
pop
push
push
lods
jge
push
cmp
movs
inc
adc
pop
xchg
pusha
(bad)
xlat
fdiv
movs
aad
mov
je
inc
dec
dec
aam
inc
mov
xchg
aam
pop
push
mov
repz
call
bound
in
sub
dec
ret
repz
in
int
test
jbe
icebp
fmul
(bad)
jle
mov
jle
mul
or
dec
mov
jp
outs
and
sti
add
cli
mov
out
inc
fwait
adc
push
push
mov
jae
xchg
sbb
xchg
mov
out
fdivr
mov
xlat
out
dec
scas
mov
jne
add
or
out
adc
jns
jnp
pop
addr16
ficom
jmp
mov
jbe
jo
ror
mov
cmp
sub
inc
addr16
xor
xchg
loope
mov
movhps
(bad)
loop
xchg
mov
shl
loop
xchg
mov
jle
sub
jmp
dec
push
loopne
out
sbb
mov
out
add
clc
es
fsub
mov
(bad)
pushf
nop
mov
and
adc
movs
imul
push
fxch
nop
xor
mov
pop
cdq
pop
fst
in
mov
ss
cmp
mov
push
xor
lods
xchg
adc
mov
rcl
push
(bad)
adc
pop
xchg
out
cmp
popa
adc
stc
stc
dec
dec
and
xchg
int
lea
lahf
add
xor
std
and
pop
retf
cdq
lods
int3
push
sub
cmp
mov
arpl
or
rol
dec
stc
jp
jle
dec
jne
lahf
mov
pop
sbb
jns
cmc
push
inc
pop
ins
iret
(bad)
jge
cmps
rcr
pop
test
test
rcr
mov
mov
mov
pop
or
pop
or
and
leave
pop
shl
retf
dec
pop
pop
mov
dec
mov
push
je
jg
test
sbb
pop
mov
dec
adc
push
enter
out
or
mov
xchg
mov
outs
inc
pop
repnz
inc
mov
pop
cld
(bad)
jo
and
dec
test
sbb
into
mov
lods
shr
out
(bad)
mov
add
lds
fstp
call
div
call
outs
sub
dec
mov
pop
pop
ins
cmp
pusha
fidivr
test
loopne
push
xor
cmp
xchg
scas
inc
inc
lock
scas
or
rcr
mov
rcr
push
fmul
add
ret
mov
sub
aas
jns
pop
retf
push
aam
scas
mov
fsub
and
aam
and
mov
pushf
fsubp
jmp
outs
pop
test
dec
mov
aam
or
inc
sar
add
mov
cmp
jb
cmc
add
aaa
icebp
and
cmp
adc
(bad)
sti
ss
out
aam
jno
es
fld
add
pop
mov
cdq
mov
or
shl
push
inc
hlt
inc
call
mov
in
pusha
jae
hlt
out
push
add
aas
jbe
loopne
cs
or
sar
cmp
int3
mov
add
ret
out
in
popa
cwde
lds
shl
scas
popf
dec
jp
xchg
dec
(bad)
mov
dec
dec
loop
and
in
cmps
fs
nop
lock
stc
inc
fxch
ret
jmp
dec
movs
arpl
lar
sub
inc
lods
int3
jecxz
cmp
clc
or
inc
cwde
outs
das
dec
rol
inc
push
mov
test
adc
sub
ja
repnz
mov
add
inc
jae
mov
xchg
sub
jcxz
test
lock
mov
aas
or
outs
and
xor
sar
pop
aaa
pop
std
pushf
fbld
mov
sbb
mov
fs
pop
pop
cmc
retf
in
outs
sub
or
or
mov
mov
mov
mov
add
inc
push
mov
xor
jecxz
xchg
imul
(bad)
and
push
in
pusha
shl
xchg
adc
aaa
adc
inc
outs
pop
ror
cli
cmp
mov
xchg
(bad)
in
inc
test
inc
js
xchg
sbb
inc
jecxz
repnz
dec
(bad)
cmp
sbb
push
add
pop
and
mov
add
dec
cmp
cld
and
add
jg
cld
repz
call
(bad)
scas
pop
mov
rcr
fnsave
push
es
imul
mov
mov
dec
mov
mov
add
popa
push
cmc
mov
jl
xor
loop
fiadd
cmp
sub
ins
cmp
fldcw
cdq
jmp
jnp
sub
mov
es
xchg
js
ret
(bad)
xor
mov
gs
fs
xchg
inc
xor
push
ss
test
xchg
add
pop
add
ins
enter
sbb
fsubr
cmp
sub
ret
in
cdq
jmp
dec
(bad)
xor
xor
retf
or
lahf
lds
xor
mov
out
xor
push
and
adc
and
pusha
mov
in
hlt
loope
xchg
and
pop
fbld
popa
outs
ror
repz
test
loopne
aam
pop
cmp
gs
add
mov
sub
fadd
jb
mov
stos
add
std
inc
push
sub
pcmpgtd
push
out
mov
dec
pop
sbb
push
pop
pushf
push
cmps
inc
ins
das
cwde
mov
cld
(bad)
out
mov
stc
(bad)
retf
and
imul
mov
sub
xlat
push
addr16
mov
mov
dec
dec
push
nop
and
or
out
mov
cmc
push
push
cmp
pop
dec
add
mov
aaa
push
fild
adc
in
sub
scas
test
mov
or
arpl
mov
(bad)
sbb
in
cmp
pop
inc
test
leave
cmp
or
call
xchg
ret
push
daa
movs
adc
fcmovnu
fistp
jmp
mov
mov
mov
fwait
repnz
in
outs
xor
add
mov
(bad)
adc
push
inc
jno
and
push
add
inc
ins
mov
or
cmp
lea
and
mov
ficomp
and
and
mov
mov
push
loope
popa
into
jmp
mov
dec
ror
sahf
xor
mov
xchg
loop
or
retf
sbb
or
bound
arpl
push
imul
xchg
sub
cmps
lock
das
scas
mov
push
mov
mov
test
cmp
mov
fwait
sub
and
xchg
(bad)
sti
stc
fwait
mov
or
ret
cmp
dec
seto
xor
fldcw
and
aas
pop
jg
xchg
mov
push
sub
ret
jnp
mov
cmovg
inc
sub
je
xchg
daa
mov
xor
retf
sbb
inc
xor
test
or
mov
mov
sub
jecxz
int3
adc
xchg
dec
sub
jecxz
test
pop
inc
jmp
sub
sbb
add
add
fwait
(bad)
jmp
xchg
(bad)
adc
fist
cmp
mov
xor
pushf
icebp
div
inc
ficom
pusha
les
push
aam
ret
push
jae
scas
mov
push
es
in
(bad)
std
ret
sub
adc
and
retf
cli
jno
sub
mov
xchg
sbb
inc
xchg
mov
and
pop
cmp
or
rcr
or
push
cmp
dec
je
fiadd
inc
dec
icebp
sub
aad
mov
jmp
clc
scas
jge
popf
xor
mov
sbb
jbe
mov
push
ins
jp
idiv
inc
cmp
and
dec
dec
jns
imul
fst
push
mov
xchg
push
mov
ror
inc
mov
arpl
mov
sbb
fnsave
repz
test
mov
mov
adc
ret
out
pop
movs
dec
std
or
add
sbb
xchg
lods
jecxz
retf
add
jmp
or
fimul
sub
inc
add
mov
pop
adc
je
test
(bad)
es
cmp
mov
int3
mov
jmp
adc
bound
adc
test
mov
ret
inc
mov
imul
mov
xchg
lods
sbb
sbb
lea
push
nop
loop
cmp
fiadd
add
mov
xchg
movs
push
adc
rcr
or
jne
jno
jp
or
paddusw
int
cld
bswap
out
cli
cmp
les
(bad)
jns
sbb
lds
add
mov
cmps
or
loop
lods
call
adc
xchg
cmp
inc
movs
pop
iret
not
xchg
xlat
cmp
fidiv
jecxz
sbb
fiadd
cli
bound
push
sub
sub
push
mov
enter
dec
mov
cld
cmp
push
mov
dec
mov
imul
xor
lock
jnp
mov
sahf
push
mov
lods
and
dec
or
mov
xchg
push
push
js
mov
mov
ror
retf
push
push
ins
scas
push
cmp
sti
ret
dec
iret
xor
std
(bad)
fmul
xchg
fisttp
inc
and
mov
int
pop
xor
mov
ror
mov
fwait
in
dec
add
jno
ds
cmp
sbb
outs
mov
ins
mov
ins
int3
add
cmps
mov
xor
xchg
mov
inc
inc
mov
test
adc
pop
jmp
adc
scas
or
jl
(bad)
mov
xchg
clc
test
shr
movs
mov
add
add
repz
das
mov
jo
jmp
lods
lock
inc
dec
xchg
dec
pop
fimul
push
and
adc
inc
adc
jno
dec
rcl
mov
ret
mov
xchg
cwde
ja
sub
xor
hlt
and
xchg
push
jne
jmp
ret
loopne
scas
dec
push
push
cmps
(bad)
lea
in
mov
inc
and
dec
dec
das
mov
int3
mov
repz
push
or
add
fldlg2
mov
test
dec
and
adc
shl
add
mov
mov
(bad)
fcomp
fidivr
push
out
mov
repnz
cwde
xchg
repnz
mov
fdivr
gs
fadd
jecxz
push
add
bound
es
(bad)
cmp
xchg
xor
push
jmp
loop
repz
imul
jbe
xor
sbb
inc
sbb
cmc
ja
cli
scas
in
cmp
cld
cdq
xchg
mov
xor
mov
leave
jmp
jp
call
jg
(bad)
rcr
imul
pushf
aaa
mov
popa
pop
mov
in
pop
shr
sbb
mov
ins
jae
test
mov
cli
and
jo
sbb
add
mov
sub
std
and
pop
dec
fnstcw
hlt
mov
dec
xchg
sbb
(bad)
popa
pop
jge
stos
jo
scas
push
mov
retf
inc
inc
jae
cwde
mov
pop
xchg
xchg
adc
push
(bad)
sahf
ds
sar
ss
stos
das
jle
push
rcl
loope
or
into
sbb
lods
lea
cli
or
xchg
inc
imul
imul
leave
sbb
sub
call
cmp
and
cld
push
cli
stos
pop
adc
mov
push
ja
sub
add
push
adc
jns
cmp
mov
dec
lds
dec
xor
cli
push
into
fmul
cmp
js
xor
cmp
mov
sbb
ret
loope
and
and
leave
call
clc
mul
cmps
jmp
jmp
jl
neg
call
lahf
dec
rcl
pop
jns
lahf
enter
or
add
jle
stc
mov
push
and
xchg
adc
sbb
in
ins
popa
imul
xlat
fiadd
xchg
xor
jmp
mov
cmc
nop
mov
call
fsub
std
xlat
jb
sub
pop
cmp
gs
push
popf
sbb
lods
ss
xchg
pop
pop
pop
mov
jle
sbb
push
outs
hlt
adc
mov
sub
mov
or
ds
mov
add
sub
cmp
inc
movs
dec
loope
dec
pop
and
jae
js
jl
push
stc
fs
push
es
pop
not
mov
inc
cmp
dec
or
imul
jmp
pop
mov
sbb
int3
xor
mov
mov
mov
push
push
rol
mov
out
mov
adc
repz
mov
mov
adc
and
mov
in
inc
leave
pop
sub
adc
mov
adc
cli
shl
movs
ror
xchg
cmp
and
cmp
dec
jno
inc
dec
add
in
pop
push
mov
pop
jle
fwait
movs
xchg
movs
xor
sub
repnz
std
out
and
test
(bad)
xchg
pop
int3
mov
popa
xlat
sub
in
ret
sub
aas
out
inc
xchg
dec
sub
and
jb
out
cmp
fstp
inc
sbb
mov
inc
rcr
pushf
nop
das
mov
sbb
adc
push
pop
popf
sub
fimul
sub
repnz
pop
dec
repnz
clc
movsx
(bad)
mov
test
jg
stos
sub
adc
rcr
cdq
add
pushf
and
pop
(bad)
out
pop
sar
mov
jp
jge
mov
mov
cwde
pop
adc
mov
push
fist
repz
add
add
je
popa
ds
test
xchg
mov
push
push
xor
mov
scas
jmp
retf
leave
call
push
pop
and
mov
mov
es
mov
or
shl
in
pop
xchg
call
daa
mov
in
jns
rcr
xor
and
and
popa
lds
test
xchg
sahf
mov
hlt
movs
stc
aaa
or
xor
enter
jns
pop
cmps
xchg
fisttp
sbb
add
pop
aaa
cmp
pusha
mov
cmp
pop
out
call
pop
mov
xchg
jo
jbe
retf
pushf
sub
enter
iret
jg
adc
ins
div
icebp
mov
es
stc
jl
pop
(bad)
sub
jnp
xor
pop
int3
and
outs
lahf
or
outs
scas
scas
movs
rcl
repnz
out
jno
call
jp
mov
enter
push
dec
add
ins
mov
in
fldenv
(bad)
mov
or
push
not
imul
xchg
(bad)
cmp
xchg
lock
sbb
push
fs
scas
pop
int3
sub
pop
adc
aam
enter
arpl
push
(bad)
pop
dec
cmps
in
jo
pop
jb
cmp
cvtpi2ps
retf
push
neg
sti
or
push
imul
stc
js
imul
das
xchg
mov
adc
and
in
jns
(bad)
push
xor
icebp
arpl
mov
sub
hlt
arpl
sub
sub
jmp
into
mul
std
fcmovbe
adc
and
and
pop
sbb
jecxz
sbb
inc
ins
fmul
aad
push
movs
adc
inc
jae
lods
jo
test
cmp
and
dec
cmp
xchg
data16
(bad)
(bad)
iret
sub
and
xor
retf
je
xor
arpl
imul
add
imul
fwait
cmp
adc
pushf
push
and
(bad)
fnstenv
call
aaa
imul
add
push
mov
ss
icebp
jns
add
hlt
mov
fisttp
and
(bad)
outs
push
jne
sub
int3
cmp
mov
add
inc
ror
pusha
jo
or
stos
mov
sahf
stos
ja
cmp
sub
xor
scas
pushf
sub
ficomp
xchg
mov
lods
mov
repnz
mov
sub
push
inc
js
les
retf
xor
and
rcr
sbb
xchg
fcmovb
cmps
mov
jl
repnz
rol
mov
mov
pushf
push
stc
mov
(bad)
fs
data16
(bad)
test
sbb
xor
sti
into
dec
enter
mov
cmp
inc
ins
mov
je
xor
cmps
mov
fwait
je
pop
scas
out
in
pusha
push
arpl
adc
fild
fwait
push
cli
in
xor
mov
enter
mov
sub
sub
(bad)
or
imul
outs
setge
or
int3
icebp
dec
outs
iret
mov
inc
ret
add
mov
dec
sbb
or
dec
or
push
jecxz
mov
adc
outs
cli
frstor
mov
mov
int3
push
out
push
out
add
cmc
in
jae
inc
cmp
push
or
mov
mov
cmp
lahf
push
aas
pop
inc
and
mov
cmps
xor
fs
pop
pop
sbb
fstp
dec
add
xchg
adc
in
cmp
jmp
in
test
in
mov
es
scas
pop
(bad)
mov
and
xor
and
(bad)
mov
mov
add
mov
mul
popa
mov
ins
mov
jmp
jecxz
inc
or
add
push
rcr
xlat
cmc
into
jmp
mov
push
das
rcl
aad
mov
pop
ficomp
pushf
mov
cmp
pop
sahf
ja
cmps
movnti
jge
jnp
fmul
jnp
cmp
outs
sub
dec
pop
add
jnp
xchg
pop
fist
dec
push
or
and
shr
xchg
stos
cmc
jge
repz
pop
nop
mov
ret
test
or
popf
dec
ror
mov
or
adc
js
add
enter
cmp
push
push
xchg
sbb
ins
loopne
xor
fbld
cdq
sub
shl
fnsave
mov
int
cmp
cmps
cwde
gs
adc
jno
and
push
pop
pop
sbb
ins
mov
in
jnp
and
jl
push
and
(bad)
jbe
mov
pop
sbb
je
pop
pop
in
pushf
or
lods
mov
stos
outs
jecxz
rcl
mov
imul
jge
int
pop
sub
mov
mov
mov
push
mov
movs
push
movs
dec
sbb
mov
cmps
mov
call
fimul
or
in
cmp
dec
(bad)
cs
outs
sbb
pop
jmp
test
jge
inc
mov
mov
push
sbb
dec
dec
adc
nop
mov
push
ins
sub
rcpps
popa
cmps
adc
xacquire
repnz
call
xchg
fninit
or
pop
adc
pusha
ja
push
frstor
mov
jp
xchg
out
ror
mov
jnp
or
mov
sub
lock
and
in
sub
jmp
xor
in
dec
sub
cmp
gs
movs
fcom
cwde
push
add
jp
popf
sbb
xchg
lods
pop
add
dec
ins
cwde
pusha
mov
dec
lods
repnz
jg
or
scas
fs
inc
mov
xchg
repnz
cmp
cld
lds
or
and
scas
mov
pop
leave
out
xor
mov
cmps
fwait
out
pavgb
mov
pop
dec
adc
jle
dec
ins
mov
cmps
dec
mov
jg
ins
je
call
add
stc
clc
mov
repz
sar
aam
cmp
pop
les
outs
mov
mov
xchg
dec
fwait
dec
dec
sbb
in
scas
cmp
into
jno
jle
imul
pop
add
mov
pop
(bad)
jecxz
cmp
aam
pextrw
dec
mov
idiv
pop
ins
test
test
jns
in
arpl
push
rcr
dec
ror
(bad)
in
int
jmp
xchg
lea
loope
movs
jo
dec
cmp
mov
das
aad
mov
fcomp
jmp
lds
adc
mov
retf
inc
inc
lods
movs
xchg
jns
(bad)
mov
pop
pmulhuw
mov
pop
push
and
push
mov
daa
adc
adc
mov
scas
inc
inc
dec
pop
adc
mov
pop
bound
ds
dec
ja
call
adc
std
sahf
dec
xchg
cmp
inc
icebp
sub
mov
scas
dec
test
jns
out
push
adc
ret
push
js
push
test
nop
push
pop
mov
and
cmp
aaa
es
in
or
imul
lock
push
jmp
xchg
into
scas
loope
xchg
hlt
lods
lea
pushf
movs
mov
aam
sub
xchg
or
jae
push
imul
mov
sbb
fidiv
dec
fcomp
push
ins
jle
rcl
add
mov
call
pop
xor
repz
push
test
pop
cdq
(bad)
pop
push
and
dec
cmp
imul
ret
push
sbb
adc
adc
mov
lock
out
or
adc
mov
in
addr16
stos
sti
je
repnz
push
add
enter
add
(bad)
shr
test
cmc
pop
xchg
cli
fld
cmp
lds
xchg
or
mov
in
test
mov
mov
mov
dec
addr16
adc
cld
movq
ja
ret
scas
push
stc
loopne
repnz
imul
push
sub
out
jae
neg
xor
xchg
xchg
jbe
call
sbb
mov
push
mul
stos
ja
jbe
or
mov
fcom
int
and
ds
(bad)
pop
pop
xor
movs
(bad)
aam
rcl
cwde
add
mov
sub
ins
mov
ret
(bad)
mov
sbb
push
test
adc
fisttp
add
(bad)
push
and
inc
xor
aad
test
pop
int
(bad)
xlat
mov
push
sub
ret
pop
loop
pop
test
stos
rol
jge
leave
jmp
cli
jno
cmp
xor
leave
jmp
pop
rcl
xor
add
xchg
popa
es
pop
leave
adc
pop
inc
sbb
in
mov
mov
jns
sahf
cmp
inc
and
dec
popf
cmp
ret
push
push
shr
jns
(bad)
int
(bad)
xor
push
std
mov
xlat
ds
shr
repnz
out
lods
mov
mov
ror
and
jo
int
inc
stc
hlt
jne
in
or
imul
jns
sbb
cmp
adc
mov
rol
fisubr
mov
inc
jl
or
outs
rcl
jno
pop
rol
cmps
push
fmul
cmp
add
add
adc
pusha
xchg
rol
mov
fwait
xchg
nop
ins
xor
inc
pop
adc
cs
jmp
clc
in
jge
inc
(bad)
(bad)
sub
jmp
lods
lock
in
or
addr16
into
call
mov
add
xor
int
and
inc
(bad)
ror
xlat
cmp
jne
lahf
xchg
stos
mov
inc
or
ds
jnp
mov
je
push
and
ins
pop
xor
cs
mov
or
aad
jae
jb
sbb
dec
movs
inc
pop
fiadd
xchg
fdiv
mov
mov
inc
sub
add
mov
jo
outs
mov
das
and
fstp
xor
mov
mov
xchg
inc
add
in
jmp
and
mov
xchg
jo
add
sub
cli
das
add
xor
aam
das
movs
add
sub
fstp
iret
sbb
xor
(bad)
and
stc
or
das
adc
mov
outs
dec
(bad)
out
pop
(bad)
cwde
js
add
je
fidiv
aas
dec
push
push
fld
fcmovne
or
scas
sbb
jae
mov
ret
loop
xchg
(bad)
push
mov
sub
cdq
je
lahf
mov
out
sahf
push
and
bound
mov
iret
adc
movs
push
out
xor
bound
div
(bad)
ss
cmc
jl
jmp
xchg
mov
ss
add
not
scas
clc
std
out
ret
xchg
push
inc
cmp
ds
cmp
push
mov
call
int
jle
fdiv
fistp
pop
in
mov
dec
inc
push
loopne
xchg
je
add
and
scas
(bad)
ds
jo
sar
icebp
retf
mov
push
dec
inc
mov
xor
xchg
out
or
clc
or
lds
stc
fwait
repz
cmp
push
mov
in
rcl
xor
mov
push
jno
fbld
(bad)
sub
pop
pop
popf
movs
inc
push
mov
cmp
mov
mov
mov
xor
mov
stos
inc
jbe
mov
sti
test
shr
cdq
adc
icebp
pop
jl
jno
pop
add
dec
push
ss
mov
mov
fiadd
or
movnti
xchg
in
and
retf
mov
sub
fs
mov
sub
(bad)
(bad)
shl
mov
test
enter
mov
test
gs
test
and
ss
mov
pop
imul
fwait
dec
sahf
and
dec
dec
sub
out
retf
aam
jp
dec
div
or
and
xchg
pop
mov
push
mov
jae
jmp
adc
cmp
mov
pop
and
mov
test
scas
push
xor
test
push
mov
ficomp
lock
aam
mov
xor
sbb
test
add
lods
mov
jecxz
(bad)
jg
pusha
inc
xchg
xor
inc
out
rcl
xor
sbb
ja
stos
adc
mov
(bad)
jbe
ffree
sbb
call
or
sub
cmp
pushf
and
add
jle
add
and
cmp
sar
cmp
push
ficomp
inc
sbb
call
in
xchg
or
jns
mov
jl
nop
retf
mov
xor
pusha
or
out
mov
push
sti
call
je
xchg
push
jmp
mov
aad
add
pop
sti
add
ret
(bad)
or
ret
(bad)
pop
jo
fcmovnu
sbb
call
fcomp
movd
loopne
sub
ins
ins
adc
pop
icebp
std
rol
or
push
jl
adc
imul
daa
adc
jno
lahf
test
inc
inc
jmp
out
int3
lods
xor
push
outs
sub
jbe
sbb
fmulp
mov
pop
push
push
adc
fmulp
dec
pop
fwait
cmps
sahf
dec
push
sti
arpl
or
in
pop
mov
fdivr
std
leave
and
xchg
push
jmp
xor
in
popa
call
push
ds
sbb
mov
lea
rep
imul
xor
fild
lods
iret
std
nop
mov
adc
mov
add
mov
popa
pop
pop
or
sub
or
fnstsw
xchg
mov
das
pop
mov
or
push
loopne
mov
mov
sbb
in
cdq
inc
les
inc
jns
shl
inc
mov
(bad)
xor
adc
jp
push
js
es
shr
mov
(bad)
cmps
scas
cmp
and
test
shl
int
jecxz
mov
stc
cmp
aam
(bad)
jge
mov
fcomp
mov
std
lds
ins
sbb
mov
les
mov
xchg
bswap
fs
mov
outs
jnp
rcr
test
cmp
pop
add
in
pop
inc
add
(bad)
and
int
mov
or
pushf
std
into
icebp
lea
inc
adc
cmp
and
pusha
cld
or
fimul
pop
xor
jmp
daa
movs
sbb
es
es
mov
adc
out
imul
sub
or
in
setae
cdq
or
cdq
cwde
int3
fild
aas
jl
outs
imul
out
inc
dec
and
out
arpl
or
aas
in
mov
push
adc
das
inc
mov
push
scas
pop
xlat
xchg
clc
push
ret
mov
mov
call
xor
xchg
pop
pcmpgtb
stc
cmp
in
iret
ret
enter
cdq
das
std
cmp
in
cwde
test
add
imul
(bad)
call
mov
cmp
dec
and
pusha
push
push
inc
aad
jae
adc
mov
adc
in
sub
stc
push
pop
fdivr
fdivr
in
dec
cmp
mov
push
cmp
mov
pop
retf
stos
js
dec
div
xor
int
lea
jl
pop
jb
call
sbb
dec
xchg
lock
cmp
loop
test
jg
add
dec
sub
(bad)
xchg
cmc
pop
pop
mov
pusha
mov
loope
out
or
jo
ror
mov
rcl
je
loop
adc
inc
push
retf
mov
pop
mov
das
inc
add
pop
cmps
retf
or
jecxz
std
das
and
sub
je
or
les
out
and
push
cli
lahf
dec
push
mov
pop
pop
retf
call
ret
inc
retf
push
push
loopne
jmp
pop
int
cs
mov
add
iret
popf
xchg
fwait
std
pop
sub
sub
cs
bnd
jge
jae
dec
fst
mov
dec
call
sbb
cmp
pop
pop
jl
es
retf
and
jp
mov
fmul
xchg
dec
jg
jnp
test
lea
push
jl
dec
push
rol
test
(bad)
ror
cmp
jnp
inc
cs
cmp
or
test
pop
ds
jl
xchg
stos
inc
dec
aam
into
pop
not
outs
adc
aam
pop
xor
outs
dec
nop
les
dec
(bad)
cmp
xor
ss
sahf
call
imul
fmulp
fnstcw
cmp
push
sbb
test
test
clc
jl
pusha
inc
in
and
inc
and
push
(bad)
mov
cmc
cmp
aam
xchg
dec
repnz
imul
loop
lea
adc
wrmsr
sub
enter
xor
jmp
mov
daa
pop
xchg
(bad)
xor
push
fs
leave
in
xor
ins
mov
retf
pop
in
push
(bad)
dec
dec
pop
out
pop
out
pop
int
xor
out
fild
cmc
nop
cmp
leave
mul
xor
rcr
int
dec
push
ins
shl
ins
(bad)
mov
jl
push
adc
fdiv
jmp
out
add
cmp
add
mov
or
fidiv
fistp
(bad)
lods
xchg
arpl
outs
loop
out
addr16
jb
outs
mov
xchg
mov
jns
addr16
mov
out
add
cmp
adc
mov
dec
lea
scas
outs
imul
mov
loope
mov
cmp
or
fisubr
mov
sti
push
pop
clc
or
xchg
pop
(bad)
mov
ret
xor
jns
xchg
inc
hlt
pop
mov
jb
xchg
or
mov
or
popa
in
leave
in
aad
cmp
(bad)
lods
dec
clc
mov
aam
inc
mov
xlat
pop
(bad)
call
mov
pop
pop
or
cmps
aaa
sub
pop
into
int3
add
inc
mov
mov
push
mov
jp
pop
hlt
pop
mov
mov
pusha
scas
(bad)
mov
adc
(bad)
(bad)
sbb
imul
jmp
inc
movs
int3
adc
gs
push
and
mov
jle
mov
lock
aas
aam
sbb
push
add
xchg
enter
iret
adc
ja
stos
mov
call
sub
imul
add
popf
(bad)
sub
push
jecxz
mov
dec
mov
fdiv
fst
in
movs
shl
out
xchg
sub
sub
jno
rol
or
sub
out
mov
pop
pop
xor
add
rcr
fcmovnu
sar
dec
out
cli
fxch
dec
inc
popa
push
daa
frstor
and
cld
aas
pop
inc
enter
xor
(bad)
(bad)
cli
jle
xchg
mov
sbb
ins
mov
lds
dec
mov
dec
push
and
test
mov
fcom
int3
popf
test
push
(bad)
out
cmp
xor
cmp
or
mov
movs
fbld
ret
xor
pop
dec
or
sub
mov
ins
pop
fs
jbe
xlat
lds
adc
pop
xchg
popa
ret
test
nop
jmp
into
ror
call
add
rol
sub
add
cmp
xor
xor
aam
mov
mov
mov
adc
mov
sub
imul
data16
xor
cmp
fimul
mov
mov
outs
jae
cwde
dec
arpl
pop
mov
jmp
ret
cmc
ret
sbb
test
jmp
das
push
pushf
fstp
scas
icebp
xlat
arpl
je
frstor
add
fs
(bad)
mov
cmps
leave
int3
add
shufps
adc
sar
push
xor
pop
lods
subps
(bad)
ds
aad
enter
icebp
mov
outs
or
mov
cmp
jnp
mov
and
add
data16
leave
and
pop
mov
jno
cli
les
push
out
cmps
popf
mov
cwde
ins
xor
adc
add
rcr
fsubr
pop
les
mov
sub
xor
(bad)
ret
or
xlat
xlat
div
icebp
test
mov
stos
or
xchg
mov
push
out
(bad)
sti
aam
test
div
fdivr
mov
add
cmp
and
pop
xchg
sbb
repnz
dec
mov
pusha
mov
adc
xchg
ins
into
scas
sub
add
cmp
scas
xchg
inc
lods
pop
scas
sti
(bad)
inc
cmp
arpl
jno
enter
jmp
test
aam
sbb
sub
in
push
into
adc
scas
fst
hlt
mov
cld
jnp
pop
(bad)
fwait
lds
out
neg
idiv
sbb
sub
mov
jae
push
adc
push
xchg
test
imul
push
mov
(bad)
dec
adc
adc
mov
mov
lods
iret
adc
jecxz
push
pop
(bad)
mov
lods
jnp
mov
in
loop
scas
call
jmp
lods
fisttp
inc
popf
aam
loopne
or
xchg
pop
test
add
jae
push
cli
(bad)
jmp
lods
jge
push
js
jno
retf
add
dec
xchg
test
test
hlt
mov
jle
and
jge
pushf
sar
adc
jp
mov
and
or
sar
je
add
fs
out
jecxz
mov
sub
add
push
pop
sub
retf
push
jmp
mov
cdq
sub
dec
leave
je
push
sbb
fistp
inc
cmp
xchg
or
cs
retf
inc
or
mov
(bad)
xchg
xchg
add
dec
shl
or
popa
add
int3
pop
ss
sar
inc
stos
fistp
jb
loope
popf
sbb
pop
jle
imul
sbb
loopne
xor
xlat
pop
stos
pushf
jmp
push
add
and
(bad)
cli
movs
add
retf
xor
sub
sub
xchg
mov
cld
jge
inc
cmps
outs
mov
lea
std
cmp
pop
jecxz
loopne
sub
xchg
ficomp
cmp
mov
jns
test
lds
cdq
cdq
jecxz
ins
shr
adc
or
mov
lahf
outs
jae
outs
cli
mov
rcl
adc
cs
leave
pop
pop
xchg
dec
dec
sbb
(bad)
ja
std
rcr
mov
out
jmp
and
sub
fldenv
fimul
and
dec
mov
jg
add
and
fld
sbb
adc
loop
repnz
div
sti
mov
lahf
cld
adc
fldcw
scas
pop
adc
sahf
dec
out
and
sar
sub
loope
daa
push
in
fbld
rcl
movs
push
(bad)
jge
leave
fild
cmp
mov
jb
xor
or
das
jmp
fild
cmp
push
fsubr
ins
add
mov
mov
lea
mov
and
jbe
mov
iret
inc
or
rcl
push
call
hlt
push
pop
or
and
fist
mov
and
mov
rol
mov
xchg
and
movs
jle
sub
cld
push
into
or
(bad)
push
inc
dec
mov
ror
mov
add
pop
mov
gs
pop
pusha
nop
fwait
sbb
inc
jo
cld
dec
jo
dec
adc
stos
(bad)
(bad)
pop
push
fisttp
test
cmp
cmp
mov
mov
(bad)
addr16
gs
xor
leave
pop
dec
call
push
out
mov
(bad)
mov
repnz
jle
pushf
dec
add
xchg
sub
in
xchg
cmp
push
xlat
iret
add
cdq
mov
add
into
pop
xchg
cmp
lock
inc
data16
scas
sub
xor
or
jno
inc
push
jb
push
sub
adc
pop
les
shl
stos
jg
leave
jmp
js
(bad)
imul
ins
stos
dec
inc
and
loopne
pop
mov
xchg
sti
xor
outs
shr
add
paddq
sub
xchg
fwait
adc
lods
in
hlt
retf
jmp
sub
mov
jns
ret
retf
hlt
adc
jecxz
xor
sbb
mov
lds
retf
push
int3
retf
ja
push
stos
fwait
(bad)
out
or
retf
lock
jg
mov
dec
cdq
nop
dec
arpl
jle
and
pop
je
call
cwde
sub
jne
scas
mov
out
xor
inc
stos
mov
inc
fistp
mov
popf
or
xor
mov
movs
sbb
adc
jbe
xor
xchg
mov
loop
scas
addr16
mov
inc
pop
dec
test
fwait
mov
sbb
jg
jne
test
out
mov
call
pop
mov
jns
cmp
dec
mov
shl
fwait
fs
fdiv
sbb
or
fld
or
jp
push
ffreep
jecxz
bound
rcr
mov
mov
retf
movs
sub
ret
push
cmp
pop
cmc
mov
mov
repz
add
out
jp
add
pop
xor
mov
imul
xor
ret
clc
retf
movs
pop
adc
cmps
out
inc
jb
(bad)
xor
add
add
xchg
dec
cmps
and
push
movs
push
inc
or
xchg
dec
mov
movs
lock
nop
jmp
xchg
mov
stos
ret
call
outs
mov
scas
xchg
xchg
les
lds
sub
cmps
push
shl
pop
stos
ss
xor
rol
rcr
jae
test
mov
movs
adc
cwde
mov
mov
loopne
ins
cmps
fisub
add
adc
mov
clc
imul
adc
fld
jne
dec
icebp
add
jmp
push
data16
je
mov
fwait
outs
fld
retf
xchg
dec
push
gs
jno
test
pop
jo
or
adc
cmc
jg
int
mov
jmp
xchg
xlat
sub
mov
ror
or
loopne
fdivr
cli
leave
or
mov
cs
(bad)
and
dec
push
sbb
mov
out
push
test
push
imul
cmp
xchg
or
mov
jb
cdq
jns
int3
in
imul
mov
add
cmp
dec
into
pop
xor
jp
lods
adc
mov
sub
lods
(bad)
pop
pop
imul
enter
xchg
push
or
(bad)
imul
xchg
ror
jno
cwde
icebp
imul
mov
jae
mov
cwde
cmps
repnz
pop
sbb
jmp
test
cmc
sub
or
ror
popf
push
add
xchg
cmps
add
lds
leave
unpcklps
push
mov
lahf
jno
xchg
retf
out
adc
xlat
fwait
xchg
inc
xchg
mov
dec
in
xchg
and
retf
and
and
jnp
test
nop
adc
dec
pop
cmps
jmp
cmps
das
push
repnz
cmp
sahf
adc
mov
pusha
call
addr16
adc
sub
pop
test
pop
xor
jmp
out
rcr
(bad)
xchg
inc
jmp
retf
fmul
jp
cmp
sub
aaa
push
cmp
sbb
or
dec
sbb
pop
inc
retf
mov
int
xor
cmp
mov
ja
stc
pop
jl
xchg
mov
cli
pop
lds
inc
push
retf
and
das
ror
rol
sub
sbb
jb
sub
pusha
lahf
pusha
jmp
xor
fs
xchg
ss
inc
add
push
scas
jno
adc
les
cmp
ja
adc
push
shr
cmp
sbb
ds
retf
sub
and
rcl
adc
outs
lea
fistp
ret
sub
icebp
scas
out
xor
out
fsub
(bad)
idiv
sbb
imul
sbb
(bad)
vmptrst
hlt
xchg
scas
sbb
push
jecxz
inc
xchg
xor
add
jno
or
mov
jge
jmp
pop
inc
xor
adc
fsub
jmp
mov
push
mov
mov
gs
adc
bound
cmp
aas
imul
into
xchg
out
add
ret
mov
jmp
and
push
and
ss
mov
cmps
pop
jg
lahf
push
and
push
arpl
sbb
pop
stos
les
das
and
lods
mov
inc
aas
paddusb
dec
jl
pop
fwait
mov
adc
aam
or
shl
push
xchg
or
xchg
push
xor
push
push
jnp
or
jg
jne
cmp
retf
xchg
movs
cmp
dec
ret
mov
cmps
mov
xor
inc
jno
ja
sbb
pop
(bad)
ret
push
jnp
adc
dec
daa
push
or
in
outs
ss
and
adc
movs
push
imul
and
inc
in
xchg
das
and
dec
and
mov
jmp
(bad)
aam
cwde
sbb
xchg
mov
xlat
xlat
ret
scas
mov
sub
popa
leave
xchg
(bad)
into
jb
inc
lahf
push
xchg
retf
cmps
fsub
and
arpl
out
push
push
push
xor
sbb
jp
(bad)
jg
int
dec
in
xlat
and
mov
int
jmp
push
out
add
call
cs
movs
bound
in
inc
not
adc
jl
sti
adc
mov
scas
jne
(bad)
adc
test
xchg
xchg
mov
mov
jl
push
test
ss
fldenv
mov
sbb
mov
call
push
jmp
out
lods
and
les
jecxz
inc
jo
adc
cmp
in
jne
sub
outs
jecxz
mov
inc
mov
pushf
sub
mov
leave
xor
lock
push
fstp
sbb
sbb
jmp
xor
stos
addr16
pop
call
mov
adc
in
add
fisub
mov
mov
cwde
dec
jbe
push
xor
iret
loopne
push
cli
mov
jmp
es
scas
in
(bad)
rcr
sbb
cmp
xor
aaa
mov
sub
mov
clc
popa
dec
cmp
xchg
retf
sbb
adc
mov
mov
call
inc
test
push
add
cmp
or
xchg
mov
cmp
shr
adc
sbb
rol
or
retf
outs
sub
sbb
dec
jbe
inc
fldl2t
ss
pop
jecxz
sbb
push
push
inc
xor
rcl
cmp
imul
add
jge
push
cdq
fisttp
xor
inc
nop
cmp
shl
aam
or
pusha
enter
jne
ins
or
and
call
gs
imul
enter
test
dec
xchg
jno
push
push
aad
jg
or
cmps
push
adc
xor
dec
mov
int3
cmp
lods
dec
test
jg
in
data16
fstp
into
pop
inc
sbb
repnz
xor
push
dec
enter
sub
int3
dec
xchg
dec
jns
mov
sbb
fs
dec
cmp
ret
add
stos
mov
inc
loop
inc
mov
jecxz
mov
mov
adc
adc
or
fistp
pop
mov
fwait
mov
cmp
icebp
jbe
xchg
ss
mov
enter
fld
jmp
inc
out
leave
mov
xlat
lods
cmp
fs
les
mov
sbb
jae
iret
inc
sbb
sahf
ret
jge
test
loop
fistp
mov
sbb
scas
jmp
or
pop
loopne
sub
push
aas
inc
xor
into
add
dec
fcmovnb
jae
sub
xchg
call
repnz
jbe
inc
repz
pop
fild
inc
lea
mov
movs
into
jge
dec
lods
xor
inc
ror
xor
idiv
jae
cmp
lea
fsub
sub
dec
dec
stos
or
sbb
jmp
scas
fpatan
sbb
sbb
sub
cmps
shl
lahf
push
test
retf
xchg
xor
sub
adc
cdq
cmpxchg8b
mov
lods
test
mov
das
push
stos
jge
jbe
cwde
lahf
retf
jb
imul
test
jno
inc
sbb
popa
jb
arpl
sub
push
js
push
mov
(bad)
loopne
ja
xchg
jbe
outs
mov
std
data16
pop
sbb
in
add
sub
mov
sbb
inc
add
adc
in
push
ret
addr16
push
ds
in
popf
pop
sub
mov
rcr
pop
cs
pop
xchg
fisttp
mov
adc
mov
xor
shr
mov
push
xchg
mov
and
cmps
ss
pop
shl
add
(bad)
or
mov
xchg
jp
lock
jl
fistp
jnp
enter
xor
(bad)
xchg
ret
outs
pshufw
and
pop
in
jl
mov
imul
jmp
cwde
sub
lea
adc
jmp
out
cmp
shl
push
or
imul
pop
gs
xor
jb
xor
pop
gs
jmp
jne
pop
xchg
cmp
jnp
mov
enter
fild
xor
sbb
mov
in
sub
rol
inc
shl
aam
std
xchg
mov
int
nop
cld
lea
cli
sub
and
jmp
mov
jecxz
cmp
bnd
aam
cdq
mov
mov
jmp
inc
push
imul
inc
mov
ds
in
repz
mov
push
sar
xchg
call
in
mov
enter
and
je
(bad)
in
sbb
gs
jno
pop
adc
cs
push
xchg
sbb
cmp
xchg
and
dec
fst
jns
cs
or
mov
fcomp
mov
xchg
in
jl
in
mov
pop
adc
scas
add
cmc
push
mov
inc
in
and
je
call
ret
pop
inc
push
pop
mov
mov
xchg
(bad)
in
mov
xchg
dec
xor
jl
pop
imul
mov
cmp
xchg
pusha
inc
(bad)
retf
gs
adc
imul
and
pop
out
cmp
sub
jb
sub
cli
nop
sbb
and
cmc
mov
dec
xchg
(bad)
sahf
xor
movs
enter
jns
call
call
ins
push
sbb
push
and
push
aam
stos
out
mov
gs
fsubr
ss
sbb
call
mov
inc
xor
inc
dec
xchg
out
pop
shl
retf
fidivr
sbb
mov
in
mov
cmp
add
dec
stc
inc
mov
aaa
test
out
into
cmp
cwde
icebp
xlat
cmps
int3
dec
mov
imul
in
cld
data16
out
push
pop
cmp
ins
mov
outs
xor
push
ds
ins
stos
sub
add
mov
jge
push
cmp
sub
nop
pusha
sub
push
loopne
lods
or
repnz
cmp
cdq
mov
pop
sbb
mov
je
bound
bnd
sub
mov
dec
outs
out
test
inc
or
arpl
outs
loopne
in
jp
adc
push
movs
mov
adc
into
and
in
mov
pop
stos
mov
sbb
push
(bad)
cld
adc
cmp
cmp
mov
ret
not
lahf
push
(bad)
pop
out
mov
or
ficom
sbb
(bad)
mov
dec
mov
push
lahf
pushf
sbb
mov
ret
xor
or
sub
mov
mov
push
adc
jb
pusha
lods
cmc
stc
lea
inc
ja
mov
inc
mov
pop
ja
or
imul
test
in
dec
dec
bound
or
or
loopne
lock
imul
mov
mov
cs
mov
scas
dec
ret
ds
lss
and
into
and
or
mov
fisttp
adc
daa
sahf
add
out
lods
inc
ret
retf
int
stos
inc
ffree
adc
xor
lea
mov
ins
dec
test
icebp
mov
sahf
cmp
in
ret
or
push
mov
dec
pop
jns
xor
xor
xor
bound
(bad)
mov
clc
out
mov
cmp
sbb
sub
fild
mov
inc
inc
outs
mov
fldcw
ficom
fstp
push
gs
inc
sub
in
lods
cmc
pop
(bad)
movs
(bad)
scas
loop
and
and
xchg
daa
int
mov
add
xor
ds
mov
or
dec
mov
sub
enter
out
in
sub
loope
jge
xor
add
(bad)
cld
in
mov
mov
mov
inc
in
mov
lahf
inc
sti
push
les
into
inc
mov
mov
arpl
popa
loopne
push
shl
or
int3
and
dec
jle
mov
shl
lds
inc
or
xor
ret
sbb
test
sub
repz
jnp
xor
xchg
std
lahf
gs
gs
stos
pop
aad
pop
or
mov
jg
jbe
repz
jecxz
(bad)
in
in
fwait
repz
mov
movs
imul
out
aad
adc
in
mov
jle
rol
mov
pop
cmps
aad
nop
xor
aaa
dec
push
in
les
adc
sub
jbe
jmp
sub
fs
pop
icebp
cmps
mov
xchg
or
div
ss
in
cmp
push
xor
outs
pop
xchg
cdq
inc
cmp
test
in
ds
(bad)
ret
sbb
or
sbb
sbb
icebp
pop
push
(bad)
pop
fld
and
mov
mov
cs
fldl2t
cmp
std
je
add
lods
add
mov
cmp
int3
mov
pop
jbe
cmps
mov
mov
mov
adc
mov
fadd
call
mov
aad
dec
mov
cmp
xor
loop
ror
fs
jecxz
jge
iret
sbb
xchg
pop
mul
and
movs
mov
pop
jle
adc
add
outs
xor
dec
xchg
or
push
xlat
dec
jg
sbb
pop
clc
push
xor
push
sub
pushf
(bad)
xchg
clc
(bad)
jne
mov
push
jnp
and
in
imul
mov
out
jecxz
call
mov
bound
jmp
inc
shl
xchg
bound
rdpmc
inc
fiadd
jns
retf
ret
pop
mov
add
add
out
inc
add
retf
sbb
jb
add
xchg
pop
xchg
lds
and
xchg
jge
setg
(bad)
add
adc
sub
mov
cld
inc
(bad)
nop
pop
out
lods
dec
pop
jbe
jmp
adc
ss
ins
sbb
xchg
daa
mov
add
mov
popa
stos
not
test
mov
inc
loop
sti
jmp
pop
lahf
jnp
push
outs
hlt
pop
idiv
adc
cli
nop
movs
add
mov
mov
pop
mov
lods
jg
sti
popa
jmp
mov
imul
leave
adc
ror
cmps
call
add
add
xchg
in
jp
sti
xor
xor
int
jno
sar
out
xor
movhps
scas
stos
fnstenv
or
dec
aam
push
mov
and
and
call
fsubr
or
push
xchg
sbb
mov
push
push
adc
dec
es
test
daa
popa
push
out
das
loope
call
xchg
jmp
push
mov
(bad)
shr
pop
xor
or
cmp
jae
int
out
popa
cwde
dec
rol
mov
xchg
inc
cli
xor
xor
hlt
adc
sbb
or
xor
sub
mov
fsub
popa
jmp
dec
or
lods
repz
and
and
retf
sbb
scas
mov
adc
in
les
inc
cmps
xor
sub
mov
xor
inc
and
in
xor
lock
jg
cmp
sbb
adc
xchg
jl
leave
mov
push
mov
cdq
jne
js
(bad)
rol
inc
jmp
ror
mov
jmp
mov
stos
add
mov
lods
jno
cmp
aas
cmp
cmp
push
sbb
jmp
int
aas
out
dec
hlt
sub
add
in
in
cmp
sbb
movs
fwait
iret
sbb
push
movs
test
push
enter
cmps
adc
lock
adc
imul
gs
jno
xor
jne
int3
pop
repnz
push
out
xlat
pop
ins
jnp
nop
ficom
js
or
pop
aad
loopne
daa
sub
lods
ds
mov
int
iret
neg
(bad)
fstp
bound
sbb
mov
test
(bad)
lock
stos
inc
dec
xor
and
cmp
and
call
sar
fwait
xchg
loopne
pop
xchg
jge
(bad)
mov
push
cld
cmc
mov
fsubr
retf
aas
xchg
mov
add
aam
push
sbb
inc
jbe
test
cmp
mov
push
in
dec
js
jecxz
inc
imul
push
fild
lods
pop
adc
or
xchg
or
cmp
mov
popa
fcomp
bound
mov
inc
pop
cli
jg
daa
aaa
inc
or
sub
sbb
jo
daa
pop
xor
sub
mov
aaa
xor
mov
sub
cwde
add
imul
aam
imul
(bad)
mov
ins
and
sahf
aas
sar
dec
fs
movs
ins
cmp
mov
iret
sub
in
jmp
ins
mov
xchg
sub
ins
mov
adc
add
aaa
xchg
imul
jmp
les
and
cmp
cli
push
xchg
mov
jo
rol
add
push
xor
dec
add
(bad)
sti
bound
cs
imul
inc
arpl
adc
xchg
sub
push
or
cs
push
xlat
or
adc
dec
jno
mov
xor
sub
mov
mov
sbb
ret
xor
ficomp
dec
or
jno
push
cmps
push
out
cmp
xchg
ror
sti
push
mov
dec
and
inc
hlt
nop
mov
retf
(bad)
out
idiv
mov
mov
push
enter
(bad)
inc
je
dec
cmp
aas
icebp
scas
mov
mov
inc
cdq
ds
(bad)
cmp
xchg
scas
retf
scas
push
inc
and
je
xchg
les
push
mov
mov
adc
mov
dec
or
test
int3
movq
jmp
xor
xchg
or
push
xchg
jl
jmp
inc
aaa
jg
cmp
int3
stos
cld
dec
stc
outs
jne
(bad)
imul
pop
in
fcomp
xlat
iret
and
sbb
fbld
mov
lahf
out
in
xchg
repnz
bound
dec
or
cmp
shl
sub
cmp
mov
cld
lods
cmp
pop
cwde
add
test
ins
push
sub
xchg
cmp
xlat
sti
mov
cmp
les
jb
mov
lods
loopne
mov
sub
fist
into
cmp
mov
mov
aas
in
push
or
scas
mov
push
jl
xlat
shl
ret
pop
or
push
xchg
iret
mov
stos
lahf
lds
dec
push
mov
mov
fisttp
aam
arpl
test
pop
in
mov
mov
inc
ret
add
stos
retf
mov
mov
lods
inc
xchg
xchg
mov
std
stc
xor
cwde
in
mov
push
pop
jae
xchg
repz
outs
fdiv
cmps
jns
add
jbe
cmps
test
sbb
xor
dec
xchg
jmp
in
das
es
sahf
add
mul
mov
or
sub
(bad)
retf
stc
mov
arpl
ret
mov
mov
lods
adc
xchg
push
cmps
cmps
sub
jmp
ret
sub
call
add
loope
in
stos
int3
call
cmps
push
jae
repnz
and
test
cmps
fcom
xor
add
dec
popf
sub
sbb
push
sbb
fmul
xchg
out
inc
mov
xlat
xlat
ret
sbb
jmp
cmp
inc
scas
out
jmp
call
ret
scas
mov
cld
mov
neg
enter
out
dec
aad
out
cmps
daa
xor
xchg
or
outs
lods
ins
shl
popf
cwde
push
mov
test
mov
xlat
mov
int
stos
xchg
ret
xor
pop
jnp
push
std
jbe
cli
in
mov
jp
into
fisttp
ror
pop
pushf
aaa
xor
test
or
xor
stos
mov
dec
inc
aad
pop
bound
movs
dec
ret
xlat
scas
push
mov
mov
popa
push
in
push
movs
cld
cld
pop
pushf
mov
aaa
leave
out
xchg
into
cmps
sub
(bad)
retf
sub
test
mov
frstor
(bad)
jno
(bad)
jmp
inc
pop
mov
jno
cmp
movs
addr16
mov
int3
push
sahf
push
push
aaa
pop
cdq
adc
dec
cmp
sub
shl
pop
sub
les
pop
mov
fstp
push
push
xchg
clc
mov
jecxz
pop
or
sti
loop
(bad)
xchg
fisub
movs
icebp
xor
sub
or
ror
xchg
pop
mov
(bad)
cmp
adc
stos
xchg
ret
jg
sbb
and
cmp
push
sbb
in
scas
jo
icebp
xchg
and
jo
jp
rcl
xor
test
dec
out
cld
mov
je
clc
cdq
pop
pop
mov
pop
dec
xchg
das
lock
aaa
add
inc
mov
sub
popa
and
es
mov
sbb
add
cmp
add
into
sbb
ret
sbb
(bad)
push
iret
icebp
cdq
push
outs
sbb
jb
imul
rol
ja
rol
sbb
inc
push
inc
xor
in
inc
sbb
stos
mov
xor
sub
pusha
push
fnstsw
and
adc
(bad)
cmc
rol
loope
or
iret
add
fild
xor
neg
bound
mov
adc
out
into
mov
ret
jp
les
pop
call
mov
mov
fldenv
dec
inc
shl
hlt
call
fidiv
pop
data16
or
add
in
jae
jae
call
cmps
cwde
test
inc
adc
mov
out
aad
inc
xchg
push
jmp
jle
pusha
inc
lahf
jl
out
mov
test
jns
sahf
lock
jmp
or
add
xchg
idiv
(bad)
daa
bound
popf
aad
out
jbe
je
out
test
cmp
js
push
jae
push
psrad
fldenv
pop
lock
(bad)
xchg
scas
dec
cwde
mov
or
pop
xor
xchg
adc
adc
or
push
lds
aad
hlt
cs
icebp
jne
out
test
pop
das
adc
shl
stc
aas
mov
adc
cli
xchg
or
jmp
xor
mov
mov
jg
out
test
jnp
stc
in
fcomp
icebp
sub
ror
dec
mov
xor
outs
aaa
jmp
mov
jo
out
ret
push
out
push
mov
mov
in
sbb
mov
sbb
into
ds
cli
mov
(bad)
ret
or
xor
ror
mov
add
push
jns
ins
out
call
ins
movs
(bad)
xchg
pop
shl
inc
shl
sbb
jae
add
sub
inc
cmp
dec
int3
aad
fmul
inc
jmp
retf
xchg
mov
and
inc
dec
or
jg
or
xlat
int3
pusha
inc
add
lea
sbb
dec
sbb
or
outs
data16
pop
movs
push
scas
bound
sub
inc
clc
dec
loopne
(bad)
sub
cli
out
ja
inc
(bad)
push
mov
(bad)
scas
adc
(bad)
(bad)
pop
stos
mov
enter
das
and
ja
mov
lock
std
and
sub
push
fnsave
in
cmp
hlt
call
aaa
stos
in
add
mov
ins
(bad)
mov
rcr
cmps
cdq
ret
(bad)
adc
sar
fcmovnb
imul
jb
cmp
and
pop
popf
mov
xor
test
std
and
outs
leave
add
bound
cmc
call
int3
call
stc
js
push
add
xchg
add
outs
leave
and
mov
mov
jl
cmp
or
test
pop
ret
push
ds
iret
jecxz
loopne
mov
(bad)
imul
retf
add
fs
dec
add
mov
js
and
inc
pop
imul
movs
(bad)
sti
enter
sbb
or
push
jge
into
js
fstp
stos
mov
pop
aad
dec
fst
xlat
push
sbb
std
push
fs
push
div
not
movs
div
int
push
push
jmp
mov
xor
mul
ret
mov
popa
lock
jl
sbb
test
xchg
inc
in
and
jge
idiv
xchg
and
dec
sub
jno
mov
push
cmps
mov
xchg
sbb
jbe
nop
aad
mov
lock
and
adc
jl
test
push
push
sbb
xchg
ror
jnp
shr
mov
jne
not
jmp
push
dec
inc
rcr
in
jns
adc
je
test
jmp
and
mov
xchg
inc
mov
sbb
pop
mov
sub
in
repz
jecxz
jns
inc
mov
not
add
ficom
adc
mov
cwde
add
push
cs
lahf
(bad)
cmps
fs
lods
sbb
bound
sbb
add
js
mov
addr16
adc
and
inc
or
xchg
xor
fs
aad
fnstcw
pop
ss
push
sar
sbb
sub
or
and
(bad)
out
push
ins
ret
mov
mov
test
add
pop
ss
mov
cmc
js
(bad)
or
push
int
pop
fisttp
mov
sub
not
(bad)
int3
cld
test
jno
mov
(bad)
cmp
sbb
jae
cmp
adc
popf
add
pop
xor
loope
mov
jnp
sbb
adc
stc
aad
push
push
fisttp
mov
in
stc
pop
mov
neg
test
inc
fsubr
icebp
out
cmps
sbb
scas
xor
jno
pop
in
mov
hlt
neg
xor
mov
cld
nop
adc
in
jae
adc
jge
cmp
lock
call
adc
jmp
clc
jns
push
cli
xchg
or
cs
sbb
sub
paddusw
in
and
jmp
push
inc
jmp
dec
das
imul
mov
jmp
cmp
(bad)
mov
sub
or
adc
popa
loop
dec
mov
movaps
jae
std
push
test
aas
or
mov
lds
or
and
into
out
push
popf
mov
loope
add
push
inc
inc
cli
mov
xchg
and
cli
add
mov
sub
push
(bad)
popa
xchg
xchg
mov
pop
stos
cli
adc
jnp
fist
xor
stos
ds
mov
or
arpl
sbb
or
xchg
inc
xor
sub
in
shl
rol
into
loope
push
ret
ret
fisttp
stos
add
cdq
push
das
xchg
icebp
mov
pop
je
sbb
int3
add
xchg
or
lea
xor
or
data16
and
je
jge
fdivr
(bad)
enter
cmp
push
mov
shr
pop
std
add
mov
cli
xchg
lock
xor
or
imul
out
std
xor
enter
imul
call
in
popf
mov
and
mov
jg
mov
ficomp
in
xlat
add
fbstp
jbe
cmp
fwait
clc
test
in
cmps
aam
test
test
dec
add
add
outs
dec
mov
mov
mov
fmul
std
mov
leave
or
mov
cmc
mov
sub
mov
push
in
lods
popf
cmp
lods
xor
push
xor
retf
popf
cmps
popa
or
outs
sub
stos
add
add
or
(bad)
push
in
ds
mov
sub
das
icebp
(bad)
scas
mov
mov
and
movs
retf
push
inc
sbb
and
(bad)
jmp
clc
and
or
pop
dec
xlat
(bad)
sbb
or
inc
mov
mov
mov
cmp
jmp
shl
stos
and
shr
adc
jmp
mov
jne
or
push
cmps
inc
pushf
adc
(bad)
enter
ret
cmp
test
or
push
arpl
out
and
xchg
popf
fidivr
mov
scas
mov
push
cmps
mov
xor
(bad)
in
js
xor
adc
call
push
mov
push
mov
es
push
in
shl
jbe
dec
clc
or
scas
add
fistp
adc
inc
cs
or
dec
ds
sub
fdiv
fadd
sub
add
push
test
xchg
(bad)
stc
in
ftst
dec
push
ud0
retf
cmp
clc
and
outs
pusha
xor
mov
fadd
outs
pop
jo
push
sub
stc
inc
leave
pop
pop
outs
fisttp
loope
scas
in
xor
inc
or
or
nop
pop
ret
pop
xchg
push
es
aam
dec
or
mov
dec
ficomp
shl
retf
xchg
push
mov
mov
fcomp
sub
cmp
cmps
retf
dec
dec
xor
iret
adc
outs
pop
pop
test
test
(bad)
scas
movs
push
adc
inc
and
push
loope
mov
inc
sbb
call
push
sub
add
push
cmp
rcr
sub
(bad)
dec
inc
mov
adc
(bad)
cld
ins
push
shr
adc
push
lahf
sub
pop
pop
aad
call
fistp
inc
add
call
in
inc
retf
mov
imul
push
dec
mov
mov
loopne
jmp
jbe
test
lahf
jno
jp
das
mov
lods
fnstsw
pop
xor
mov
mov
mov
sti
or
mov
fistp
repz
push
mov
and
sbb
mov
xor
sahf
xor
push
jb
out
test
test
and
add
mov
mov
jns
cdq
mov
mov
jl
cmp
je
in
dec
add
cmps
test
xor
push
adc
pop
sbb
dec
sub
outs
data16
lods
jmp
in
sbb
add
jne
sti
xor
adc
jmp
leave
adc
imul
fldcw
shr
xchg
mov
ja
mov
fdiv
and
call
push
lods
mov
popf
inc
retf
add
and
mov
xchg
adc
imul
jmp
int3
js
shl
push
adc
int3
in
call
inc
hlt
xor
call
add
cld
cwde
sub
xchg
aas
ja
jle
xchg
fsubr
arpl
inc
xor
push
loopne
lock
cdq
cmp
fwait
dec
shr
scas
adc
shl
xor
push
pop
add
call
call
add
div
icebp
dec
in
push
loop
dec
jmp
call
mov
sbb
imul
add
inc
adc
(bad)
xor
ret
sub
lds
or
inc
push
test
cdq
test
rcr
push
shl
fwait
jg
rcr
pop
in
shl
fwait
fwait
or
(bad)
sti
enter
mov
jne
pandn
xor
lahf
cld
fst
scas
inc
push
jbe
mov
cdq
repnz
iret
jns
shr
sub
fcmovu
mov
mov
shl
mov
pop
or
sbb
out
(bad)
sbb
cmp
and
rol
stos
sbb
fistp
push
adc
lods
pop
sahf
jle
sub
xor
add
dec
clc
cli
outs
sub
mov
jns
neg
add
mov
mov
lahf
test
sub
cdq
fsub
call
jns
repz
cmp
inc
das
push
ret
jmp
add
(bad)
fistp
jecxz
jmp
dec
push
jmp
loop
test
gs
mov
out
test
ins
movs
inc
push
gs
outs
adc
mov
stos
out
clc
xor
mov
aam
addr16
add
cmp
mov
xor
addr16
dec
jmp
cmp
pop
inc
lahf
or
clc
imul
jmp
or
ins
mov
out
(bad)
out
jge
add
adc
mov
rol
push
jle
fist
jmp
popa
cs
sahf
ins
sbb
push
and
popf
and
sbb
(bad)
retf
xlat
jbe
or
add
pop
mov
aas
mov
push
imul
repnz
dec
jmp
int3
mov
pop
sub
and
add
inc
mov
(bad)
cmc
pusha
xchg
xchg
loop
pop
pop
mov
sub
int3
fsubrp
jl
aas
cmp
mov
shr
je
pop
pop
mov
out
ret
push
mov
jo
cli
hlt
aas
(bad)
jbe
push
dec
ret
or
xchg
jg
inc
mov
mov
cmps
mov
fmul
fimul
(bad)
sbb
adc
stc
push
cmp
int
sbb
icebp
ins
xor
outs
mov
sar
inc
lahf
lea
scas
fiadd
ins
aas
lds
imul
in
out
jmp
inc
mov
das
imul
and
add
mov
jl
pop
data16
adc
adc
scas
xchg
std
and
test
mov
lahf
cmp
push
or
inc
mov
push
lds
inc
jp
mov
out
xchg
mov
iret
iret
cmps
ins
enter
xor
cld
movs
xchg
cs
(bad)
mov
cmc
mov
cmps
sub
jne
fdiv
ret
push
shr
cmc
nop
mov
and
sub
inc
xor
push
inc
addr16
call
in
shl
cwde
rcl
fsubr
mov
jg
out
sbb
and
dec
jns
dec
push
inc
mov
pop
and
(bad)
sub
loop
sbb
out
ins
cwde
(bad)
jmp
pop
es
int3
fld
(bad)
fild
mov
ds
pop
sbb
pop
cs
div
xchg
and
pushf
mov
push
add
xor
icebp
sub
xor
out
rcl
ror
mov
jo
add
cmc
(bad)
stos
retf
mov
adc
push
fiadd
pop
xchg
iret
scas
in
mov
sbb
add
push
jbe
pop
call
test
mov
jns
sub
std
pop
jl
cmp
dec
jge
dec
js
xchg
jl
mov
cmp
add
mov
and
jb
scas
xchg
popf
retf
adc
dec
mov
xchg
jecxz
xor
retf
push
cmp
aaa
pop
cmps
stos
nop
sbb
cmp
sbb
pop
jp
mov
cmc
test
mov
cmp
lea
lea
xchg
push
xchg
cmc
mov
pop
inc
adc
and
jle
scas
xchg
aam
push
outs
retf
jl
xor
jmp
shr
call
pop
mov
mov
cmp
sbb
mov
std
scas
mov
xor
mov
and
push
pop
lods
xor
mov
js
fnstcw
rol
add
mov
ins
ss
test
jmp
cmc
les
and
jl
clc
jns
rcr
cwde
push
lods
pop
test
in
pop
xor
sbb
outs
int
add
bound
daa
aad
dec
sar
and
mov
aaa
(bad)
inc
mov
je
int3
add
dec
jnp
mov
addr16
movs
mov
repnz
mov
rcl
push
mov
sub
pop
inc
sub
aaa
mov
fcmovb
dec
ja
scas
leave
push
and
ds
mulps
cs
loopne
mov
js
jae
(bad)
dec
inc
das
dec
pop
repnz
adc
bound
pop
dec
hlt
in
add
ins
inc
in
out
cmps
mov
pushf
shl
popf
jecxz
gs
cwde
xlat
pop
repz
in
je
(bad)
js
test
pop
ret
dec
int3
gs
daa
dec
mov
scas
mov
inc
dec
aam
cwde
and
jae
ffreep
jae
pop
ret
neg
call
cmp
adc
je
fisub
push
or
mov
push
push
inc
imul
add
shl
(bad)
js
mov
jecxz
int3
dec
repnz
lods
push
mov
xor
(bad)
sub
int3
pop
sbb
pop
adc
pushf
inc
jbe
jns
and
pushf
fsubr
int3
dec
adc
test
xchg
sbb
cmps
sub
rol
mov
ret
int
les
sbb
fimul
in
(bad)
data16
cmp
jl
sub
ins
adc
out
ret
and
pop
jl
dec
mov
js
mov
lods
out
or
hlt
sti
pop
stos
outs
lods
push
jmp
outs
push
mov
arpl
out
mov
dec
pop
pop
aaa
push
mov
fstp
enter
int3
cmps
jo
aas
retf
popa
les
scas
mov
retf
xchg
sub
mov
psubw
ja
dec
mov
xchg
imul
stc
ret
lods
jp
lahf
ins
(bad)
cmp
fdivr
(bad)
in
mov
pop
outs
outs
fdivr
cld
add
hlt
xchg
xchg
push
fsub
scas
cmc
mov
nop
jae
pop
sub
sbb
sahf
arpl
popa
mov
and
xchg
add
jl
mov
repnz
sub
cli
fdiv
cmp
xor
lea
xlat
shl
inc
fwait
xchg
fild
cmp
jo
jmp
pop
or
mov
dec
repnz
into
jbe
and
mov
cmp
rcl
xchg
mov
xor
dec
push
fwait
pushf
jbe
fs
xor
lods
stos
arpl
ret
xor
jo
mov
imul
(bad)
dec
arpl
fdiv
ds
test
sbb
push
out
scas
push
scas
call
retf
jge
dec
and
cmp
jo
(bad)
fnstcw
mov
mov
lds
clc
or
mov
xchg
pop
push
test
pushf
fadd
mov
sub
cdq
push
das
dec
aaa
scas
and
mov
hlt
dec
pop
cmps
fs
ret
push
dec
jne
adc
popa
adc
fnstenv
inc
(bad)
stc
inc
pop
inc
mov
out
das
inc
adc
mov
icebp
shl
cmp
mov
xor
xor
mov
or
in
sti
dec
adc
add
sbb
das
inc
xlat
test
imul
jb
aas
and
jae
ja
imul
add
cs
arpl
data16
inc
(bad)
ss
call
and
xchg
and
jle
das
mov
xor
js
xchg
jnp
mov
jnp
cwde
and
adc
dec
mov
loopne
pop
stc
cmps
das
into
mov
test
mov
imul
outs
push
dec
push
in
add
xor
push
inc
imul
rcl
jmp
push
sti
cmp
xchg
sub
lods
xlat
shl
adc
movs
repz
fcom
lock
cmp
push
fs
sub
add
jmp
and
and
inc
dec
xchg
push
sbb
push
mov
push
out
mov
or
out
and
push
ds
test
push
sub
sub
sbb
shl
div
fcmovb
mov
xlat
enter
aaa
mov
pop
xchg
shr
stos
inc
mov
jle
in
jl
js
push
call
adc
mov
mov
jae
xchg
or
xlat
pop
push
jnp
pop
adc
mov
or
mov
lahf
in
dec
out
and
dec
or
xor
inc
mov
lods
test
xchg
xchg
aad
xchg
in
ja
leave
arpl
jae
js
shl
cli
(bad)
or
sbb
lock
(bad)
call
cld
mov
add
or
iret
enter
mov
(bad)
push
add
adc
jnp
inc
inc
push
les
mov
xchg
xchg
jo
mov
mov
cmc
adc
int3
(bad)
pop
push
mov
inc
fistp
(bad)
fstp
jae
cmp
test
(bad)
in
cld
dec
call
push
popf
jne
mov
pop
pop
push
bswap
dec
and
arpl
sbb
(bad)
mov
pusha
ss
adc
xchg
ja
mov
add
cwde
push
ret
mov
in
repz
std
push
arpl
sbb
lahf
fwait
push
mov
enter
ss
mov
sbb
ss
sbb
jnp
mov
hlt
stc
adc
addr16
push
jle
mov
icebp
sahf
pop
std
daa
pusha
mov
and
jl
daa
fcmovnu
lea
inc
push
(bad)
xchg
cwde
daa
sub
rol
cmp
imul
aas
mov
mov
mov
dec
aad
inc
pusha
fld
and
xor
outs
imul
arpl
jno
fsubr
push
add
bound
lods
daa
enter
shl
mov
push
bound
and
cmp
leave
loop
xchg
retf
outs
sti
sbb
fwait
loop
dec
jbe
fsubr
pop
mov
push
repnz
push
int
dec
lea
dec
(bad)
xlat
jbe
and
cmp
jg
and
add
mov
clc
jl
xor
cdq
and
jbe
inc
mov
pusha
mov
dec
pusha
test
outs
dec
cli
stc
mov
es
xchg
mov
or
xchg
xor
push
sub
and
jecxz
inc
sub
je
js
fdivr
imul
jecxz
adc
(bad)
ins
in
push
mov
fs
push
retf
in
cli
retf
lock
cs
mov
cli
push
push
aad
icebp
stos
adc
ins
mov
ja
fwait
jmp
outs
add
aam
xchg
outs
jae
lods
or
nop
cmc
pop
push
sbb
jae
push
jne
fist
in
adc
dec
ja
and
pop
aam
xchg
mov
and
adc
jecxz
shl
dec
jo
call
jle
mov
pop
or
(bad)
mov
lock
jmp
xchg
push
mov
(bad)
pop
rep
mov
loopne
or
mov
stos
mov
out
adc
ret
gs
out
cmp
push
xchg
or
(bad)
push
bound
sbb
mov
loopne
inc
or
sahf
xor
enter
adc
fmul
cld
mov
popa
push
fld
outs
pop
inc
and
fdecstp
pushf
scas
sub
mov
repnz
pop
adc
jne
sbb
sbb
aam
ror
jecxz
test
pop
pop
js
loopne
call
es
das
ins
out
(bad)
mov
cmp
and
retf
mov
movs
fdivp
test
or
inc
scas
mov
mov
or
sahf
mov
mov
mov
and
std
inc
inc
xchg
push
pop
fcom
dec
lds
ds
jne
jle
fcomp
fcomp
mov
mov
sbb
pusha
mov
add
mov
cmps
sub
jecxz
xchg
clc
rol
jg
cmp
jns
fnstsw
in
cmc
mov
imul
xchg
loopne
xchg
push
or
test
xor
jne
mov
dec
xchg
shl
movs
jle
sub
add
xor
inc
aaa
ret
cs
sbb
jge
jp
mov
dec
out
out
cmp
sub
sbb
adc
mov
adc
mul
jmp
in
jle
loop
inc
jecxz
mov
dec
xor
rcl
jmp
xchg
test
add
xchg
push
add
and
sub
jae
imul
test
push
dec
aaa
jge
mov
sbb
sbb
sub
loope
inc
(bad)
dec
mov
call
fs
xchg
xlat
xor
test
xlat
pop
bound
in
push
xchg
add
cdq
xor
fwait
call
xchg
loope
movs
dec
jmp
fdiv
fcom
out
jbe
lods
pop
aas
int
push
ret
mov
and
sti
xor
je
ja
loope
jbe
and
sub
(bad)
out
mov
cmp
dec
push
xor
(bad)
test
mov
lods
pop
xchg
jmp
lock
in
inc
retf
xor
and
stos
fistp
pop
and
seta
daa
popf
in
jbe
(bad)
sbb
sbb
mov
in
lds
stos
push
cmp
js
sti
adc
sbb
and
adc
pop
adc
addr16
shr
cwde
shl
imul
or
jecxz
jo
repnz
(bad)
loop
jns
imul
mov
int
xchg
inc
add
lahf
in
ins
cmc
stos
xchg
push
cmp
cmp
call
pusha
mov
in
mov
cmps
mov
mov
int
in
add
cmp
cld
lock
retf
cmp
jno
fldcw
xchg
sub
icebp
or
aad
retf
scas
test
psubw
pop
xchg
aas
ror
jl
cwde
movs
popf
mov
xor
pop
jno
jae
shl
adc
jmp
add
movs
jg
push
sub
or
movs
pop
hlt
lahf
test
cmp
popa
sbb
ret
(bad)
cmp
dec
and
imul
push
pop
dec
and
std
push
jl
add
es
ds
fidivr
sub
mov
and
adc
sbb
and
sbb
jne
test
jns
xchg
popa
push
sub
push
scas
push
outs
ins
pop
xor
mov
xchg
aam
jne
rcl
(bad)
jge
retf
fdivr
std
or
ins
mov
push
ss
dec
rcl
sub
mov
lahf
sub
movs
and
jcxz
pop
inc
lds
xchg
call
pop
sbb
cld
push
cmc
xchg
mov
jmp
pop
cli
test
(bad)
lock
aas
int
adc
iret
dec
sub
(bad)
cmps
lods
ss
pop
lea
into
or
jmp
and
(bad)
lahf
lds
xor
(bad)
xchg
sbb
xor
scas
xor
imul
rol
rcr
xchg
pop
cmp
xor
mov
jmp
sub
cmp
xchg
sbb
inc
cmp
stos
and
mov
or
or
call
iret
ja
into
call
aam
adc
fcom
adc
mov
ret
cdq
es
scas
(bad)
hlt
mov
fisttp
cmp
pop
loope
not
xchg
(bad)
int3
sbb
xchg
fisubr
sub
ss
bound
sbb
fsub
jmp
int3
and
ror
fcomp
inc
or
mov
push
ret
adc
in
inc
xchg
cmp
mov
jae
movs
mov
push
mov
sub
inc
lea
add
adc
or
lods
aam
mov
jno
push
ficom
push
imul
addr16
pop
movs
sub
test
and
addr16
jae
add
sbb
cmp
cwde
test
mov
inc
les
mov
cmp
inc
push
push
icebp
int3
les
ins
ja
repnz
push
push
sbb
adc
xchg
sbb
rol
mov
ins
stos
mov
xor
fbstp
mov
ins
bound
cdq
or
or
push
movs
rol
pusha
xchg
push
rep
shr
xor
pop
repz
stos
int3
sub
ror
(bad)
outs
push
repz
inc
rep
(bad)
(bad)
pop
int
mov
jg
mov
and
dec
cmp
xchg
ret
in
sbb
lahf
test
dec
inc
sub
imul
das
and
and
sub
test
pop
(bad)
pop
and
sbb
cmc
jns
cmp
test
add
jge
stos
hlt
sub
movs
inc
lds
mov
push
ds
rol
mov
push
out
hlt
cmp
mov
jns
pop
sbb
xlat
pop
das
imul
fsub
arpl
imul
and
out
ja
retf
call
xor
dec
pop
int3
mov
and
and
ins
jb
clc
test
test
mov
scas
test
shl
jge
loope
ret
arpl
xlat
mov
les
(bad)
leave
jne
fdiv
pushf
xor
adc
ds
leave
ja
cmp
ja
mov
mov
push
jmp
repz
inc
cld
and
sub
jge
(bad)
and
push
or
jb
sbb
dec
push
mov
pop
ds
nop
xor
and
cmps
pop
jno
mov
sub
scas
pushf
stos
mov
jge
stc
xor
mov
xchg
outs
or
scas
mov
or
adc
shr
out
int3
jmp
jno
dec
ret
or
xchg
call
ror
sar
je
inc
mov
and
(bad)
mov
(bad)
fild
sub
pop
not
cmp
mov
(bad)
outs
fisubr
push
clc
(bad)
movs
sbb
clc
lods
repz
inc
repnz
sbb
out
or
das
mov
cmp
push
dec
and
push
sar
push
xchg
sbb
and
and
enter
fsub
fnstsw
mov
dec
loope
cmp
xchg
xor
fdiv
add
nop
and
cmp
or
(bad)
daa
push
sub
repnz
sub
mov
sub
sbb
repz
add
push
pop
jnp
fidivr
jp
inc
cwde
push
push
inc
mov
into
ins
cs
loope
dec
fadd
(bad)
mov
cmp
xor
aaa
and
pop
loopne
or
jns
or
std
imul
imul
jae
push
sbb
popf
sub
or
mul
sbb
ss
retf
sbb
loop
mov
loopne
test
cmp
bound
stos
call
daa
loop
mov
dec
lock
lock
js
repnz
mov
inc
leave
sbb
push
adc
sub
xor
fdivr
(bad)
push
(bad)
(bad)
retf
or
jno
loopne
mov
adc
adc
mov
dec
pop
imul
rol
push
mov
dec
in
mov
cmp
pop
mov
stos
sub
adc
jmp
push
xchg
mov
pusha
push
push
test
cld
sbb
nop
and
pop
pop
in
adc
and
and
jns
enter
lods
push
pop
inc
(bad)
jae
cmc
push
mov
aad
cwde
sub
ins
jo
rol
and
jno
(bad)
outs
xor
ins
jmp
(bad)
jnp
js
jo
xchg
jge
push
les
outs
pop
mov
call
(bad)
mov
sbb
stc
mov
daa
jno
cs
push
test
push
and
inc
test
xor
cmp
push
jmp
and
pushf
inc
ds
call
and
xchg
(bad)
adc
(bad)
cmp
fsubr
sbb
jge
dec
(bad)
jl
mov
ror
xor
mov
outs
inc
aad
lock
cmp
test
bound
std
mov
push
mov
mov
sub
adc
cmps
sahf
pop
xlat
fistp
or
scas
int3
imul
test
retf
sahf
mov
inc
icebp
or
inc
in
dec
adc
out
adc
inc
ror
repz
int
(bad)
je
rcr
mov
pop
inc
mov
mul
or
scas
xchg
adc
hlt
cld
push
push
sub
sbb
sub
sbb
push
cmp
jg
out
int
cmps
cmc
sub
lahf
popf
stos
sar
or
icebp
cld
int3
das
fsub
das
div
cdq
or
mov
xchg
mov
in
adc
pop
retf
call
cld
cmp
xchg
in
jne
push
in
lahf
loopne
xchg
or
cmp
and
mov
mov
add
mov
jne
push
jns
sbb
test
jp
mov
and
xor
jae
and
mov
stos
xor
mov
sahf
mov
add
jns
dec
xchg
sti
in
and
sub
inc
jle
call
jno
lock
clts
jmp
mov
sbb
in
xchg
adc
inc
mov
addr16
xchg
aas
cli
adc
adc
sub
adc
push
or
cmc
dec
cmp
std
mov
retf
xchg
ins
cmc
iret
pop
push
pop
retf
shr
pushf
inc
lods
bound
inc
loope
jl
cmp
sar
adc
sub
das
es
mov
fwait
cmc
jo
aam
dec
jmp
pop
dec
push
popf
mov
xchg
call
add
jge
mov
enter
inc
outs
adc
xlat
mov
pop
icebp
dec
(bad)
lods
sub
mov
cmp
push
or
jne
leave
mov
push
sub
add
jle
out
pop
iret
pop
pop
push
jbe
mov
dec
jmp
inc
ds
and
lds
push
fisttp
jo
push
call
pop
sub
fisttp
xor
jmp
stos
adc
cmps
jecxz
mov
sti
test
out
adc
mov
mov
pop
push
cld
push
out
fs
add
(bad)
lahf
dec
cli
das
fwait
lahf
js
es
sub
call
les
or
sub
mov
push
dec
and
call
sbb
es
sub
call
stos
and
dec
sub
stos
rol
sbb
data16
aad
dec
cli
sub
pop
xchg
cmp
jecxz
cli
xor
jl
and
mov
test
jnp
jbe
inc
pop
jp
mov
or
jg
dec
push
imul
adc
test
and
mov
push
sbb
(bad)
sbb
daa
call
nop
lock
mov
or
mov
xchg
rcr
ficom
sar
outs
lahf
jmp
jp
mov
fisttp
ficomp
pop
add
stos
gs
pop
dec
sub
movs
jmp
(bad)
dec
(bad)
daa
jo
nop
jmp
mov
shr
xor
mov
dec
mov
xor
dec
adc
xchg
or
clc
js
outs
(bad)
popa
int
pause
sbb
xor
xor
sysexit
rcr
sub
push
clc
shl
rcl
sbb
fdiv
adc
dec
(bad)
xchg
shr
jno
push
push
fwait
ins
int
mov
sbb
jbe
add
dec
and
test
add
and
push
(bad)
cmp
in
neg
fiadd
aad
cmp
test
push
nop
(bad)
repnz
push
jle
xchg
jo
mov
sbb
push
lods
cmp
movs
(bad)
shr
mov
aaa
add
mov
push
das
sub
inc
inc
or
out
mov
adc
sbb
ret
mov
fnstsw
shl
int
(bad)
pop
imul
push
jge
xchg
ja
bound
inc
push
jge
aad
(bad)
addr16
lea
jge
sbb
loope
pusha
inc
sar
fcmovnu
pop
xor
inc
(bad)
xor
xchg
pop
dec
cld
fwait
daa
adc
xchg
push
fnsave
outs
shl
les
int3
push
je
mov
inc
mov
ins
or
outs
jns
mov
pop
inc
jb
ss
ins
mov
push
inc
jp
ret
sbb
aas
rcr
inc
adc
and
fstp
sub
out
mov
cmc
jmp
outs
mov
sahf
mov
jnp
aam
fcmovb
pop
ja
sub
add
hlt
jl
mov
sub
xchg
setp
jle
lahf
(bad)
mov
in
add
add
dec
shl
das
mov
mov
pop
mov
fst
xchg
test
mov
retf
mov
sub
inc
movs
push
or
adc
xor
xchg
mov
clc
xchg
and
cdq
adc
pop
and
in
cld
in
inc
mov
push
(bad)
cmp
push
ret
dec
mov
stc
pop
push
seta
out
xor
test
sub
js
push
in
aaa
ins
sub
adc
fcomp
repz
jnp
popf
popa
fisttp
cdq
loop
scas
stc
shr
pop
dec
rcr
dec
aas
outs
leave
mov
mov
xchg
push
or
adc
lea
xchg
lds
popf
adc
push
xor
(bad)
not
push
ret
movs
pop
jb
pushf
and
push
fild
and
out
adc
xchg
inc
imul
cmps
pop
lock
div
jno
or
jb
xchg
rcr
popa
dec
push
jbe
mov
xchg
icebp
hlt
mov
imul
cmp
cmps
les
inc
cli
shl
ror
add
dec
dec
or
xchg
xchg
or
mov
sbb
jg
stc
jp
cli
sub
std
jnp
fcomp
mov
sub
or
push
arpl
sbb
sub
mov
icebp
imul
retf
je
push
xor
add
pop
stos
popf
sub
retf
push
call
aad
mov
push
nop
das
add
jle
into
imul
cmp
add
mov
mov
xchg
shl
(bad)
call
rcl
arpl
adc
sahf
jl
pop
shl
mov
sbb
popf
into
jg
in
inc
push
mov
iret
xor
or
pop
or
add
mov
fdiv
adc
or
lahf
fisttp
fwait
cwde
out
outs
push
ins
shr
jg
out
sahf
or
xchg
xlat
or
pop
nop
jp
mov
inc
mov
dec
fs
jno
jmp
lods
push
outs
icebp
or
ror
mov
adc
adc
pop
inc
movs
xchg
jg
sbb
cld
dec
mov
sbb
cwde
call
fcomp
pop
gs
adc
inc
add
mov
ret
(bad)
aaa
xchg
push
movs
xchg
sar
adc
call
or
xor
jbe
int3
ins
stos
push
dec
and
stos
mov
(bad)
pop
lahf
adc
rol
dec
sbb
in
sbb
lock
mov
(bad)
fist
ins
scas
cmp
fidivr
xchg
pop
xlat
pop
retf
mov
jle
pop
stc
loope
xchg
sub
mov
pop
push
cmp
cmps
das
clc
or
add
jbe
mov
push
cdq
xor
addr16
lods
pop
push
adc
sub
cmp
ret
sub
and
sub
cmp
or
xchg
dec
mov
hlt
mov
je
rcl
stc
jmp
sbb
pusha
dec
fs
lds
sub
outs
pushf
push
cmp
or
mov
push
inc
sbb
rcl
push
and
mov
retf
fucomip
jae
push
ja
movs
add
mov
xchg
pusha
lahf
imul
aad
inc
(bad)
jns
ficom
cmp
sub
(bad)
jbe
scas
adc
push
or
xor
popf
stos
push
mov
xor
xchg
out
push
lods
neg
inc
cmc
add
adc
cmp
movs
frstor
xchg
adc
fwait
je
mul
sub
add
es
push
inc
cdq
inc
js
data16
daa
(bad)
jmp
fmul
and
movs
stc
jbe
and
pop
mov
cli
mov
inc
popa
xchg
jbe
pop
shl
or
in
xor
sub
int
jmp
push
sbb
ficom
es
and
test
mov
sti
repnz
retf
xor
enter
sar
sub
push
rol
pop
mov
jle
in
mov
(bad)
aas
mov
jbe
jecxz
or
ret
enter
shl
xchg
mov
into
mov
and
std
sti
sbb
and
fadd
pushf
stos
das
push
add
ins
shl
fld
xor
sar
jl
xchg
pushf
cmps
sbb
adc
data16
dec
and
mov
cwde
aad
movs
ret
aas
mov
lahf
das
and
jns
jmp
adc
mov
retf
inc
or
arpl
repnz
std
aad
sub
mov
sbb
xchg
pop
into
leave
jnp
loop
ds
sub
sahf
add
mov
cmps
push
adc
mov
mov
in
add
mov
shl
push
les
or
or
arpl
lds
nop
or
in
xchg
arpl
addr16
daa
sti
push
popa
dec
pusha
out
shl
inc
cli
(bad)
fidivr
inc
enter
mov
in
inc
ret
outs
mov
dec
add
cwde
mov
cmps
inc
jecxz
pop
sub
fstp
movhps
inc
jle
fdivr
loopne
xchg
adc
mov
and
fcmove
shl
dec
mov
(bad)
cli
repz
mov
rol
mov
test
mov
dec
mov
sub
jecxz
popa
push
mov
leave
sahf
cmps
pop
fucomip
mov
mov
push
cdq
not
fidiv
psrad
out
inc
mov
sbb
pop
sti
push
xchg
xchg
adc
aad
jns
sbb
sbb
hlt
inc
cmp
adc
push
inc
stc
pop
xchg
(bad)
mov
int3
sub
pop
cmp
sbb
sti
idiv
lahf
xor
sbb
inc
mov
int
imul
xchg
inc
psubusb
sub
xchg
and
popf
pop
sub
fcmove
mov
push
jno
vpunpckhdq
xchg
test
cmp
mov
shl
dec
fistp
or
sub
cmps
test
and
push
inc
mov
sub
retf
xlat
loopne
stos
idiv
rol
or
jno
iret
dec
inc
pop
pop
in
aam
and
bnd
sub
mov
push
adc
lock
clc
adc
sti
dec
pop
sahf
push
xor
(bad)
fstp
cmp
loope
pop
xchg
call
jb
lds
xchg
test
sbb
scas
dec
inc
xor
and
into
addr16
loope
jns
sahf
xor
hlt
cmps
jmp
(bad)
fstp
arpl
ds
adc
xchg
mov
inc
push
xor
xchg
adc
(bad)
leave
mov
pop
clc
ss
bnd
sub
aad
dec
fs
ror
dec
jbe
add
add
ret
neg
leave
gs
xchg
in
out
cmc
retf
stos
jge
fld
into
xor
mov
sbb
xor
jns
pop
jecxz
iret
push
cmc
mov
call
int3
and
jle
pop
or
mov
jmp
push
fstp
cmp
ins
and
jmp
fs
pop
movs
mov
and
xchg
(bad)
jns
ror
add
inc
sub
std
xor
xlat
pop
pop
sbb
fisttp
cmp
in
cdq
das
out
mov
inc
adc
push
es
fwait
sub
sahf
xlat
jb
pushf
je
add
stos
push
aam
dec
jmp
sub
popa
hlt
jmp
aaa
inc
stos
xor
sbb
cmp
aam
and
sbb
ins
pushf
xchg
pusha
sbb
mov
sub
pop
mov
cmp
ins
dec
mov
out
test
rol
sahf
sub
xor
mov
pop
pusha
mov
dec
leave
ret
test
aaa
jmp
test
pop
pop
lock
or
jne
aam
test
sub
rcr
shl
gs
(bad)
les
adc
pusha
cmp
dec
popa
adc
inc
push
xchg
mov
push
xchg
mov
add
jmp
mov
fistp
adc
neg
stos
jmp
xchg
xor
adc
mov
pavgw
fdiv
sub
sub
cdq
stos
clc
sahf
mov
int3
xor
iret
shr
pop
mov
sub
enter
inc
test
mov
in
inc
mov
in
js
sbb
sbb
mov
push
jmp
push
dec
mov
mov
scas
mov
in
dec
add
mov
outs
mov
arpl
neg
mov
cmps
mov
call
icebp
lock
xor
aad
jno
popa
enter
cmp
sub
mov
fwait
int3
cmp
nop
adc
xchg
rcl
dec
rol
mov
stos
sbb
push
jne
jo
and
sbb
out
scas
mov
retf
out
imul
test
in
inc
or
or
xor
jmp
ja
xor
mov
(bad)
mov
ret
cmps
mov
pop
pop
dec
outs
jb
inc
pop
fisubr
arpl
mov
shl
and
xchg
jmp
(bad)
mov
mov
mov
jle
xchg
xchg
out
push
pop
sub
sti
test
cmp
out
sbb
repnz
and
fs
dec
mov
ins
mov
add
ret
pop
pop
add
inc
mov
or
sub
push
fisubr
pop
inc
nop
call
sbb
cmp
mov
addr16
arpl
dec
add
and
xor
pusha
or
bound
cmps
sti
lock
pop
(bad)
call
sub
sbb
xor
push
or
pushf
stos
(bad)
xor
cmc
fst
sar
mov
psraw
ds
sbb
fist
xchg
add
pop
mov
fldenv
add
mov
lods
pop
(bad)
jl
mov
cld
fstp
lods
les
std
mov
fs
fimul
rol
sar
pop
sbb
pusha
add
dec
test
(bad)
xchg
(bad)
jo
sti
sub
pop
cmp
pop
and
bound
std
pop
outs
mov
xor
fmul
push
pop
pop
fld
fnstsw
cwde
dec
cmp
bound
fs
ret
sub
addr16
sbb
jbe
adc
sbb
cmp
push
fisttp
sbb
cld
out
enter
idiv
add
jno
pop
mulps
and
cmps
imul
pop
sbb
jno
clc
fidiv
mov
mov
sbb
cmc
mov
inc
adc
mov
mov
mov
cmp
xchg
rcr
jp
mov
pop
add
pop
(bad)
test
sar
vmovhpd
loop
or
xor
bound
aad
js
call
jp
fcomp
pop
or
cmps
xchg
push
push
push
int
mov
push
pop
in
xor
call
test
int3
cmp
std
cmp
data16
sbb
dec
in
jne
mov
lock
push
loop
push
in
inc
mov
ins
pop
lea
sbb
pop
push
mov
xlat
mov
mov
adc
stos
ror
mov
push
cmps
pop
shl
mov
xchg
xor
sbb
jg
pop
jae
jno
shl
cmp
jnp
dec
fsubr
dec
loope
jbe
push
push
or
or
mov
sbb
jb
paddsb
mov
xlat
cmp
push
clc
inc
inc
dec
rcr
std
or
fdiv
xchg
jmp
lahf
ror
dec
push
fs
cld
push
loop
sbb
sub
aad
xchg
add
mov
mov
and
mov
mov
inc
add
out
xchg
cmps
mov
in
je
or
push
cmp
push
inc
outs
call
dec
cdq
(bad)
retf
pop
aas
cwde
pop
xor
xor
jp
jbe
fcomp
xor
es
push
into
mov
and
xor
push
xchg
jbe
jno
leave
jmp
mov
mov
in
xor
lea
adc
mov
bound
inc
idiv
pop
xchg
sbb
loope
movs
stos
mov
imul
mov
add
lea
rcl
push
sub
jmp
div
shl
mov
loope
popa
and
neg
and
xor
xor
pop
push
jecxz
sub
(bad)
rcr
pop
cld
push
fimul
mov
inc
jl
in
sbb
fisubr
pop
jl
(bad)
pop
mov
sti
and
stos
stos
jne
mov
popf
int3
sbb
add
jno
jns
xchg
push
sbb
jecxz
fldlg2
pop
cld
bound
daa
imul
(bad)
sub
sbb
add
ins
aad
or
mov
icebp
xchg
pop
add
in
push
and
sub
inc
pop
mov
push
sbb
mov
stos
cmp
jno
mov
fistp
xchg
pop
in
(bad)
rcr
jl
mov
xor
call
push
dec
vpackuswb
icebp
das
add
int
test
adc
add
fisttp
popf
mov
xchg
mov
inc
xor
lea
hlt
mov
ret
addr16
pop
adc
sub
sahf
mov
int
add
pop
pop
inc
add
std
mov
outs
(bad)
jnp
dec
sub
stc
xor
dec
adc
or
jg
jnp
call
xchg
dec
popf
fdivr
xchg
or
in
and
mov
mov
adc
push
(bad)
sbb
xor
cmp
enter
mov
xchg
ss
lahf
mov
jae
push
pop
cdq
js
adc
pop
fld
pop
test
dec
fidivr
mov
jge
jg
jge
dec
mov
xor
ror
push
fstp
jmp
in
pushf
mov
(bad)
call
mov
arpl
fist
test
sub
sbb
sub
lahf
repz
leave
je
(bad)
pop
ins
pop
jb
and
fst
scas
push
inc
test
les
mov
push
dec
cwde
in
arpl
dec
xor
mov
push
dec
jmp
test
push
xor
mov
aam
jno
cli
movs
test
sbb
dec
rol
nop
pop
stos
xlat
dec
cli
inc
mov
add
and
pop
cmp
xchg
pop
aam
fadd
sub
(bad)
xchg
pop
pop
xchg
jns
out
mov
sub
sub
ja
mov
xchg
inc
sti
pop
imul
add
cdq
stos
lds
scas
jb
cmp
sbb
push
js
jmp
retf
leave
mov
pop
cmps
inc
sbb
dec
fstp
pop
lea
sar
add
pop
jge
inc
cmp
retf
and
mov
jae
pop
mov
aam
std
cli
mov
(bad)
sub
shr
aas
mov
daa
sbb
sub
xchg
push
imul
add
psubsb
ffree
xor
cld
aaa
(bad)
mov
push
push
or
add
sub
std
jo
fsub
push
mov
ror
mov
lock
pop
jno
loopne
add
add
pop
inc
push
dec
mov
idiv
loop
ret
xor
and
sub
push
imul
jne
pop
clc
push
xchg
jmp
or
mov
mov
mov
fnsave
inc
mov
gs
and
js
sub
add
push
(bad)
call
and
and
ds
pop
stc
dec
aaa
ficom
mov
xchg
adc
dec
dec
mov
pop
(bad)
mov
push
xchg
mov
lahf
lds
mov
pop
jmp
loope
out
sub
ss
dec
dec
mov
out
in
jg
(bad)
cmp
stos
data16
adc
or
mov
mov
je
lods
push
pop
fbstp
jge
ret
pop
mov
push
sar
add
pusha
jne
and
adc
inc
add
bswap
jl
inc
mov
and
retf
mov
inc
leave
aad
cdq
ja
cmp
xor
shl
pop
push
sub
pop
les
push
add
xchg
mov
add
jne
pop
scas
aam
out
je
stc
jecxz
pop
and
jl
cmp
xor
or
fxam
push
inc
mov
push
fsubp
fcomp
pop
jecxz
mov
outs
nop
mov
(bad)
dec
or
jl
sbb
xchg
push
mov
imul
out
inc
inc
push
jae
xor
or
xchg
imul
shl
test
mov
jge
push
inc
add
dec
push
jecxz
push
popw
and
cmc
call
(bad)
push
sbb
push
sub
out
jp
pop
fstp
aaa
pop
ja
push
jo
sbb
scas
les
loope
fidivr
test
mov
lahf
sub
and
cs
fild
cdq
push
ret
aaa
retf
shl
sar
jecxz
cld
imul
xchg
dec
popa
pop
das
mov
arpl
or
imul
repz
ds
imul
mov
rcl
mov
sbb
push
xchg
add
hlt
retf
mov
lods
dec
fs
js
test
movs
mov
daa
adc
cli
xor
int
in
mov
shl
add
popa
jge
jmp
ret
mov
pop
ret
or
xor
ja
sbb
fmul
lods
mov
mov
add
or
push
(bad)
aaa
sbb
jbe
jle
call
cld
movs
cmp
in
repz
neg
jge
xchg
jne
pop
fcom
cdq
mov
aad
sub
cmc
cwde
imul
and
repz
dec
shl
ret
sbb
xchg
loopne
ins
addr16
jno
adc
rol
pop
data16
mov
mov
mov
cmp
pcmpgtd
push
adc
popa
(bad)
mov
lods
inc
adc
add
jns
jae
fst
sbb
mov
in
cmps
inc
dec
adc
sub
ret
cmp
pop
fidiv
xchg
dec
sub
lfs
movs
outs
jno
jne
out
inc
aaa
sbb
push
sbb
outs
test
push
and
pop
fs
stos
pop
adc
and
test
clc
push
mov
shr
sbb
(bad)
out
jge
rcr
(bad)
add
adc
dec
jbe
lea
ror
xchg
popa
lods
jge
dec
jnp
sub
inc
mov
adc
sahf
xlat
and
mov
ret
cwd
xchg
aas
jle
mov
xchg
adc
add
in
fs
mov
dec
cmc
paddsb
xchg
sub
dec
in
test
mov
loop
or
adc
jge
cs
dec
dec
dec
jmp
xor
pop
push
pusha
xor
popf
loop
frstor
not
(bad)
les
mov
das
mov
sbb
cmc
cmp
sahf
fcom
or
imul
data16
lds
add
dec
mov
lods
push
in
adc
push
inc
ds
add
loop
loopne
cmp
cmp
mov
or
iret
add
mov
adc
pop
mov
(bad)
sub
or
sub
retf
call
xor
push
or
dec
dec
push
jno
adc
jns
outs
mov
mov
ret
push
enter
mov
jbe
xor
gs
and
pop
popa
sub
dec
ja
sub
mov
mov
int3
adc
push
pop
mov
lods
es
test
jl
mov
retf
push
rep
mov
xor
rol
in
popa
call
mov
sbb
cdq
je
mov
jl
movs
mov
ficom
and
cmc
in
xchg
xor
sbb
jno
ret
cld
out
test
jb
mov
xchg
jne
in
dec
mov
xchg
icebp
out
jl
push
sub
push
push
cmp
aam
cmps
push
(bad)
or
ror
and
(bad)
imul
pop
(bad)
mov
inc
loop
mov
shr
push
lea
imul
jl
inc
and
xor
mov
das
jnp
imul
mov
xchg
xchg
adc
push
xchg
xchg
fadd
js
xchg
(bad)
xor
popf
fdivr
movs
out
jl
sbb
mov
(bad)
fs
and
mov
push
fild
cld
es
inc
out
into
ss
stc
ins
iret
mov
mov
adc
jo
dec
xchg
shr
repz
inc
shr
adc
inc
xchg
lea
add
cmps
nop
sahf
sti
push
dec
pop
xor
aad
xchg
(bad)
fldcw
or
ret
js
pop
mov
in
cmp
xchg
sub
ja
shl
jns
ret
push
mov
xor
call
lock
add
add
imul
cmp
cld
pop
addr16
sub
or
mov
push
js
push
add
adc
not
xor
mov
stos
jge
(bad)
add
(bad)
in
cmps
xchg
cmp
rcr
loop
mov
pop
dec
jo
mov
jae
hlt
popa
ret
lods
xor
add
jb
std
jp
mov
pop
mov
lahf
test
mov
mov
dec
bound
lock
xchg
mov
adc
std
div
ret
dec
jmp
xchg
ret
rcr
or
popa
ret
xor
jns
retf
add
clc
and
or
add
mov
cmp
mov
cld
jp
push
in
bound
fidiv
push
xor
scas
fist
push
push
adc
outs
jmp
mov
int
lods
jmp
ror
mov
cmp
fcomp
push
test
jge
mov
add
sub
sar
sbb
adc
xor
sbb
fisttp
dec
jle
ins
jl
push
push
fst
or
push
inc
xchg
mov
xor
ret
stc
jp
aam
aam
pop
inc
adc
add
xor
sbb
xchg
and
into
adc
loop
pop
mov
pop
jmp
and
int
mov
mov
(bad)
daa
xchg
inc
mov
or
aaa
fadd
mov
xor
popf
cmp
mov
push
and
xchg
lock
ret
cwde
cmp
(bad)
in
jb
sub
sub
jbe
xchg
data16
imul
jno
(bad)
pop
std
jbe
xchg
js
test
jbe
arpl
mov
add
cmps
and
mov
sub
mov
ror
push
inc
repnz
sub
mov
in
sub
popa
pop
(bad)
cmps
fst
stos
push
and
icebp
xlat
sbb
mov
jae
inc
sbb
mov
and
out
ja
push
clc
aam
adc
loop
sub
cli
rcr
pop
sar
(bad)
stc
or
pop
add
inc
in
(bad)
sub
push
ret
cdq
stos
jmp
cli
xchg
xor
mov
shl
jg
fsubr
dec
inc
dec
inc
dec
retf
mov
ret
xchg
dec
sbb
push
jne
pop
js
(bad)
mov
adc
inc
cmp
inc
sub
push
call
mov
jo
jne
cmp
inc
scas
call
cmp
xchg
and
lock
jo
inc
jl
call
inc
adc
pop
fsub
test
lea
mov
push
(bad)
out
lahf
imul
xor
in
sub
mov
repz
xor
lods
sbb
icebp
aam
fwait
inc
or
cmc
iret
sbb
outs
test
push
loope
out
dec
std
inc
dec
mov
es
shr
mov
mov
and
jo
adc
push
lods
or
or
lahf
push
lds
sbb
mov
push
mov
jne
jo
mov
add
cmp
mov
or
sbb
dec
lea
sbb
add
popa
cs
mov
jae
aas
jae
(bad)
scas
add
clc
push
mov
ret
dec
sub
ins
js
in
add
std
pop
jl
jnp
or
and
outs
mov
xor
cmc
cli
lds
sub
jecxz
jmp
jne
xchg
or
pop
fisttp
nop
dec
pop
mov
scas
cli
call
or
std
pop
inc
lds
dec
mov
pop
ret
jne
repnz
minps
std
xor
out
(bad)
shl
add
out
add
cmp
cmp
in
or
fwait
js
mov
cld
xchg
add
aas
sar
rcr
sbb
and
push
pop
pop
pop
and
jge
or
pop
mov
clc
inc
ret
mov
dec
ds
bound
test
test
dec
or
inc
out
xor
pop
dec
fdivr
in
mov
lods
stos
inc
dec
xchg
xchg
outs
jge
xor
xchg
add
mov
push
add
pop
sub
test
or
das
and
push
jb
mov
ficom
ds
push
or
and
fs
lods
sbb
inc
daa
mov
int3
imul
inc
(bad)
data16
add
int
mov
int3
jle
imul
es
rol
movs
inc
loopne
test
jae
xchg
push
pop
cdq
sbb
adc
sldt
xchg
pop
lea
repz
fnstcw
lods
jmp
jg
sbb
jb
pop
stos
and
mov
jg
adc
xchg
jecxz
test
mul
mov
ret
pop
pop
nop
sub
push
fst
sbb
mov
xchg
add
inc
lds
into
arpl
pop
lahf
mov
xor
lgs
or
mov
movs
movs
or
pop
pop
mov
pop
cmps
call
test
push
or
lock
rcl
rol
cdq
inc
mov
(bad)
aas
inc
fcom
mov
jp
mov
xchg
fisubr
mov
dec
dec
out
sbb
arpl
push
jl
es
jo
test
xchg
lahf
repnz
cli
jge
and
jnp
scas
repz
rol
call
in
mov
push
xor
mov
call
xor
loopne
sbb
mov
lock
mov
xor
jl
stc
jl
inc
icebp
lock
jb
xchg
lea
mov
pop
xchg
jnp
adc
dec
xor
jmp
aam
pop
or
xor
lds
cmps
xor
cmp
sbb
pushf
xor
jge
arpl
mov
xor
xor
and
sbb
(bad)
out
(bad)
ja
sub
mov
mov
cmc
mov
adc
mov
ret
ja
enter
repz
out
inc
dec
(bad)
adc
out
inc
pop
addr16
inc
inc
fidivr
ins
sahf
cmps
pushf
in
int3
mov
inc
test
mov
push
sub
(bad)
(bad)
push
lea
pop
(bad)
(bad)
retf
adc
in
pop
mov
ja
ds
xchg
mov
dec
bound
mov
out
cmp
and
mov
in
hlt
repnz
cmp
jb
cmps
jp
push
test
add
mov
pop
pop
mov
mov
test
sub
add
imul
inc
(bad)
(bad)
and
xchg
inc
(bad)
lods
dec
cwde
fst
dec
sbb
sub
fisttp
out
in
pop
cmp
inc
movs
arpl
sub
inc
nop
cmc
xor
ficomp
in
daa
mov
push
mov
movs
xor
fcomp
test
mov
popf
scas
mov
xor
inc
inc
cld
ror
(bad)
mov
xchg
xor
push
ret
and
cwde
push
or
int3
mov
inc
or
push
sub
ror
fwait
out
mov
ins
sub
je
jl
cwde
int3
je
lds
cs
shl
adc
pop
int
addr16
sub
dec
push
cmp
sub
mov
jg
aaa
scas
cld
and
scas
xor
push
dec
cdq
pop
and
mov
push
in
dec
out
in
push
xchg
lods
push
pop
fdivr
in
test
imul
jecxz
stc
dec
add
cld
mov
cmp
pop
inc
(bad)
push
jecxz
aas
gs
mov
jle
jmp
pop
inc
neg
jle
jne
add
inc
out
cmp
cmp
cdq
sbb
movs
sub
test
addr16
xor
xor
mov
sub
cli
xchg
or
lahf
jle
rol
into
and
fld
and
aaa
jb
jle
inc
sub
int3
call
nop
add
rol
shr
fwait
jbe
fs
je
sbb
cmp
cmp
pop
fwait
xor
jb
or
and
popa
outs
push
repz
aad
pop
pop
js
dec
mov
daa
cmp
aad
fdivrp
popa
cmp
push
or
mov
repz
sti
jne
xchg
fidivr
cmps
sub
shr
push
not
(bad)
or
int3
add
test
and
mov
cmp
movs
test
repz
cmp
ds
imul
or
jecxz
and
movs
push
out
cmp
push
call
cli
or
nop
test
loop
mov
outs
rol
js
in
sub
xor
dec
adc
push
aad
js
xchg
jecxz
mov
sub
and
lods
push
jle
inc
lods
in
hlt
and
xor
sar
test
icebp
cmc
div
outs
rol
xchg
jo
push
in
push
lock
sbb
les
into
xchg
jmp
loop
pop
push
xchg
(bad)
mov
add
test
xchg
push
in
std
and
and
pop
fisttp
div
fwait
inc
or
fidivr
mov
call
inc
mov
mov
out
adc
cli
cmc
or
sub
sub
sub
outs
clc
shl
jb
pop
out
lock
out
add
daa
mov
test
mov
jle
push
out
ret
pop
test
lds
jl
int3
sbb
pop
adc
inc
or
or
lods
xor
xchg
aas
fiadd
std
idiv
pop
mov
push
std
sub
stos
cmp
inc
pop
xchg
mov
push
arpl
push
fistp
xor
(bad)
or
and
iret
aas
sbb
add
sbb
mov
or
pop
pop
imul
cli
in
pushf
sub
cmp
stos
push
mov
sub
cmc
push
ror
xor
cmp
dec
jmp
es
clc
dec
cs
shl
loopne
jno
dec
movs
(bad)
mov
pushf
pop
cdq
pop
jmp
or
dec
sub
pop
sbb
cmp
imul
mov
mov
aaa
push
push
inc
outs
stos
or
jmp
rcl
int3
sbb
loop
xor
gs
retf
xor
aam
ds
cld
jge
push
mov
xor
fucomp
(bad)
ja
cmps
test
loop
mov
and
xor
mov
cmp
movs
ins
cld
jmp
(bad)
jne
or
adc
jmp
sbb
xor
hlt
or
xchg
cmp
jl
sub
sub
scas
mov
sbb
loop
pop
es
push
(bad)
push
mov
dec
xchg
mov
sbb
lock
outs
enter
mov
xor
adc
popf
mov
(bad)
mov
jg
ret
push
pop
add
sbb
add
sti
and
ja
jns
pop
cmp
ins
mov
lods
xchg
popf
nop
push
faddp
out
mov
and
xchg
popa
add
mov
lea
mov
retf
stos
add
ja
or
adc
into
adc
jmp
in
sub
mov
sub
mov
(bad)
aas
jb
mov
ret
jnp
fst
mov
xor
imul
mov
jmp
mov
or
mov
out
es
cmc
pop
xor
pop
stos
xchg
xchg
pusha
inc
xchg
xor
popa
setb
out
push
sar
test
(bad)
bound
add
in
dec
lahf
adc
(bad)
dec
je
scas
pop
loopne
pop
dec
push
hlt
les
xor
mov
jmp
pop
jne
mov
mov
in
cmp
aas
xor
adc
ror
push
pop
shr
push
push
fwait
hlt
or
xor
cmp
fst
fild
sbb
xor
push
xlat
cdq
pop
inc
and
sub
ficom
xchg
cdq
out
sahf
xchg
push
sbb
jmp
xchg
add
push
pop
xchg
or
jmp
jno
mov
dec
and
pop
mov
xlat
xchg
hlt
cmp
test
ins
test
ret
mov
pop
jne
test
lea
ja
jnp
test
xor
inc
std
ret
xor
mov
cmps
or
xchg
xor
mov
cmps
inc
jne
leave
jg
push
popf
pop
push
cmc
sub
dec
add
ret
adc
dec
push
add
or
cld
cmp
xor
aaa
add
xor
sub
jp
test
aaa
jo
sahf
xchg
add
add
mov
aaa
clc
dec
aad
adc
ficomp
and
setl
js
xchg
hlt
mov
(bad)
je
repnz
xchg
xor
or
aas
pop
ins
dec
push
mov
and
fcom
or
lods
pop
call
xlat
sbb
nop
popa
(bad)
or
aam
add
push
addr16
add
adc
test
cs
xchg
mov
jbe
pop
(bad)
jg
outs
retf
sub
pop
sbb
add
das
lock
ins
and
int
dec
jmp
push
sub
pop
pop
repnz
jmp
add
xchg
cld
ja
bound
(bad)
mov
mov
mov
fwait
sub
stos
push
jno
mov
sar
nop
pop
push
cmc
fsubrp
jo
rcr
cmp
pop
ja
jp
push
inc
jno
les
jl
pusha
and
jmp
cdq
sub
jno
or
rol
test
mov
jns
mov
mov
retf
mov
shl
push
mov
cmp
shl
add
add
bound
cmp
inc
mov
dec
mov
out
in
sbb
mov
mov
dec
rcl
inc
or
adc
adc
scas
adc
pand
sbb
push
pop
data16
es
mov
frstor
inc
xchg
int
fmul
cmps
mov
outs
push
fst
popf
xor
sbb
xor
dec
jno
frstor
sub
movs
xchg
add
xor
inc
mov
jo
imul
mov
test
jne
neg
sbb
mov
out
loopne
sbb
out
or
repnz
xlat
mov
mov
jno
and
(bad)
loop
popa
cmp
xchg
popa
mov
xchg
cmps
cmc
test
push
cmp
sub
leave
into
icebp
test
adc
inc
xchg
imul
or
cmps
sbb
pop
and
int
addr16
jb
cwde
sub
(bad)
adc
out
and
outs
shl
ins
mov
sub
scas
mov
push
repz
repz
sub
mov
push
mov
mov
lea
scas
push
xchg
repz
push
cld
leave
sti
jp
mov
cmps
test
pop
xchg
repnz
stos
sbb
(bad)
fst
and
scas
inc
and
or
sbb
test
mov
bound
stc
add
pop
ins
xor
lahf
cmps
or
adc
sub
cdq
hlt
repnz
movs
ret
into
jnp
jb
jo
cli
das
or
fld
cmps
mov
loop
or
dec
xor
lahf
lock
xchg
cmp
xchg
gs
outs
mov
and
push
cmc
dec
iret
pop
pop
(bad)
nop
ret
xor
mov
jb
jp
jbe
and
xor
jne
inc
mov
or
push
setns
lods
xlat
xchg
xor
xchg
mov
xchg
mov
mov
inc
jae
cli
in
not
neg
mov
add
inc
lea
sahf
add
enter
xchg
adc
test
mov
push
lahf
ins
jecxz
fadd
sub
or
or
fdivr
mov
shr
imul
mov
nop
aam
xchg
clts
retf
jo
lea
jle
dec
pop
xchg
pop
std
leave
xor
push
retf
add
pop
sar
movs
mov
sub
xor
xor
cmp
xchg
sub
and
sub
adc
pusha
add
push
xchg
xor
cmp
call
lahf
or
popf
xor
mov
xor
stos
movs
sar
in
mov
and
mov
jns
adc
inc
sub
add
shr
sbb
call
dec
jmp
pop
mov
or
hlt
rol
int3
jae
xor
sub
cld
sbb
xor
or
fmul
out
or
outs
in
(bad)
imul
fist
loop
out
cmp
inc
mov
and
sti
leave
outs
cmp
arpl
and
lock
add
jg
mov
adc
xlat
mov
pop
sub
push
mov
adc
jmp
int3
call
or
mov
cmp
push
into
cli
daa
dec
dec
daa
add
inc
movs
jae
cmc
and
jle
mov
and
cmc
loopne
xor
movs
inc
pushf
shr
push
ror
cmps
inc
or
pushf
jmp
mov
or
mov
inc
out
mov
sub
in
inc
add
daa
fsub
fist
das
mov
mov
and
ins
add
cmp
jnp
popf
dec
pop
enter
mov
in
or
jbe
pop
ins
test
test
pop
cmp
xor
inc
call
popf
lea
lds
cmp
jns
xchg
add
push
rcl
xchg
xchg
loopne
mov
cmp
fdivr
stos
pop
add
les
mov
out
push
push
(bad)
cmc
cmp
cmps
test
mov
mov
and
mov
clc
fwait
add
(bad)
int3
jne
adc
and
aam
pop
out
sub
push
out
dec
mov
and
pop
repz
jne
rcr
sbb
mov
adc
(bad)
dec
jo
sbb
pop
xchg
push
jae
push
mov
call
ficomp
dec
loop
retf
pop
nop
lods
adc
call
lock
xchg
cmps
pop
retf
cmp
jg
mov
xchg
jno
cmp
mov
aad
cli
shl
pop
arpl
repz
test
xchg
adc
(bad)
mov
movs
mov
stos
pusha
retf
rcl
xchg
mov
dec
dec
sbb
cld
stc
rol
and
cmp
(bad)
(bad)
stc
jae
neg
fld
push
popf
jo
jge
iret
mov
pause
test
adc
loope
jle
jnp
dec
arpl
addr16
and
not
xchg
pushf
test
mov
int
mov
jmp
dec
jb
fmul
cmp
in
cmp
pop
sub
stc
jo
jmp
das
leave
fwait
cmp
or
mov
(bad)
sub
arpl
and
imul
ret
pop
stos
pop
push
dec
sbb
or
sbb
retf
adc
mov
adc
push
pushf
sti
fwait
popa
pop
jns
popa
hlt
fst
ss
fadd
jns
mov
aad
mov
cmp
sub
nop
dec
and
mov
adc
in
popf
ret
push
fsubr
imul
icebp
nop
push
cdq
sbb
stos
lds
mov
push
fimul
repnz
pushf
jmp
mov
cmp
test
popf
jo
(bad)
stos
inc
enter
sbb
dec
cwde
out
sub
loopne
cs
retf
lods
sbb
mov
cmp
lods
loopne
sub
dec
cmp
inc
mov
inc
scas
mov
mov
call
es
in
or
or
xchg
icebp
repz
sahf
in
ins
xchg
xchg
mov
fstp
cmp
hlt
sub
fcom
jbe
repnz
pop
mov
lds
outs
test
mov
sti
mov
(bad)
mov
mov
push
mov
aaa
pop
inc
add
stc
jg
xor
not
lods
pop
mov
sti
hlt
out
xor
mov
rcr
in
mov
push
ficomp
inc
mov
aam
push
sub
clc
mov
sbb
cmp
cmps
clc
jge
stos
sbb
(bad)
ins
xor
icebp
or
outs
jb
(bad)
lods
push
adc
jp
jmp
rcr
jae
jmp
stc
mov
push
xor
and
pushf
mov
sbb
pop
jl
aas
jmp
fistp
lds
dec
sbb
outs
enter
push
cdq
push
adc
adc
adc
cmps
inc
xor
shr
mov
jle
dec
mov
mov
sti
shl
dec
mov
add
stos
push
sbb
inc
pusha
dec
fldcw
or
mov
pop
bswap
adc
pop
mov
or
imul
add
popa
mov
repnz
pop
sbb
cli
test
aad
fcom
movs
sbb
sub
lds
adc
jo
(bad)
add
dec
inc
ja
add
inc
mov
sbb
push
popf
movs
fstp
jbe
retf
or
ss
stos
cmp
mov
sbb
or
cmp
icebp
aas
jns
cmc
movs
sub
int
or
pop
fdiv
pause
lods
call
pushf
pop
sub
push
inc
xor
sahf
ins
(bad)
sub
je
adc
cmp
ss
jbe
mov
gs
adc
fadd
add
pop
nop
out
sar
push
aaa
xchg
cdq
and
mov
into
jmp
sub
(bad)
stc
mov
das
cmp
sub
ss
push
nop
sbb
pop
mov
(bad)
sbb
push
xchg
imul
cmp
repnz
mul
mov
in
ret
int
xchg
inc
pushf
or
in
lods
mov
lods
jbe
cld
pop
xor
adc
push
lea
arpl
test
ret
pop
sub
leave
cmps
outs
scas
rcr
inc
sbb
popf
jl
std
shl
pop
adc
test
(bad)
xlat
sbb
mov
cmc
or
pop
xchg
outs
ror
or
popf
mov
test
mov
add
pop
push
mov
leave
sub
jmp
fst
cld
lds
pop
jb
xchg
pusha
repz
pop
mov
xor
imul
(bad)
in
cmp
ins
mov
inc
(bad)
pop
xor
sub
xor
inc
inc
jno
jb
cli
mov
mov
pop
movs
sti
enter
inc
jo
pop
cs
xchg
loope
mov
pop
mov
adc
xchg
push
xor
push
hlt
and
dec
mov
mov
cmp
ins
in
pop
sbb
xchg
imul
mov
or
in
movs
scas
aas
sti
sub
and
test
cmps
cmc
mov
mov
ror
cmp
leave
ins
(bad)
(bad)
cmp
out
inc
mov
mov
mov
jns
mov
inc
inc
fdiv
test
or
or
and
stc
sar
mov
xchg
mov
sbb
pushf
jl
xor
movs
pop
movs
or
repz
sub
shl
icebp
loop
mov
(bad)
fisubr
test
je
jae
or
ja
mov
stos
adc
mov
aam
call
call
sbb
push
xor
mov
ret
mov
xchg
(bad)
dec
mov
xchg
(bad)
mov
test
faddp
aad
nop
(bad)
aas
ror
xlat
xchg
add
mov
ins
inc
sub
movs
mov
iret
and
fmul
fprem1
fld
cmc
sbb
(bad)
adc
fsubr
or
xchg
jne
inc
mov
jl
aam
addr16
ss
jb
ret
mov
jb
mov
xor
mov
mov
idiv
inc
inc
pushf
cwde
mov
(bad)
adc
mov
test
in
test
ds
arpl
mov
mov
xchg
sub
pop
in
mov
in
out
mov
jbe
inc
pop
pop
jmp
je
sbb
data16
rol
jg
inc
cwde
push
movs
(bad)
cld
sbb
or
pop
mov
cwde
or
fwait
mov
(bad)
dec
sub
outs
mov
push
arpl
cmp
add
or
mov
pop
pop
mov
std
sahf
fsub
add
stos
retf
sbb
or
test
leave
mov
push
mov
hlt
es
pushf
mov
push
fmul
pop
push
mov
adc
out
movs
cmp
dec
test
out
or
push
repnz
ret
dec
test
aam
adc
mov
inc
mov
mov
xor
mov
push
mov
(bad)
ror
mov
xchg
mov
jl
das
cs
mov
add
push
jmp
jle
sbb
add
adc
repz
mov
in
cmp
(bad)
call
daa
call
int3
fidivr
out
cmp
inc
mov
jle
jo
cdq
jnp
cmp
addr16
aam
inc
mov
push
pop
leave
jg
stc
adc
jbe
mul
neg
jg
add
sbb
inc
xor
clc
pop
fsubp
and
enter
int3
fdivr
mul
push
cmp
sub
ret
shr
outs
adc
jle
jne
pushf
int
pop
jnp
xchg
fld
push
jo
push
lock
test
pop
mov
jns
xor
push
int3
add
popa
xor
nop
xlat
mov
xchg
mov
clc
aam
lahf
(bad)
push
sbb
aad
fnstenv
xor
mov
adc
jns
pop
scas
out
or
jp
test
data16
add
mov
ins
rol
scas
sub
jle
repnz
xor
jnp
xchg
jmp
jb
adc
inc
pop
into
arpl
inc
cmp
lahf
daa
or
adc
inc
(bad)
sbb
sub
xchg
into
xor
add
dec
inc
or
push
add
pop
into
out
or
pop
dec
mov
push
retf
pop
jg
inc
inc
inc
sbb
sbb
(bad)
out
mov
pushf
mov
aaa
mov
shr
repnz
mov
inc
rcl
xchg
sbb
mov
add
test
lods
rcr
scas
sbb
imul
xor
loop
mov
out
xchg
shl
xchg
and
js
pop
adc
es
pop
dec
push
mov
push
inc
mov
lahf
stos
inc
movs
fdivrp
fwait
lods
jle
mov
mov
push
xor
mov
ins
fidivr
mov
mov
retf
pop
out
out
mov
inc
cdq
pusha
(bad)
cmp
out
iret
jmp
and
mov
xor
out
xchg
xchg
sub
repnz
ja
jg
adc
fs
stos
mov
loop
dec
adc
les
mov
push
mov
fcomp
pop
idiv
adc
add
bound
(bad)
div
mov
in
je
or
scas
sbb
mov
cmp
call
popf
data16
daa
and
xor
mov
xor
xor
fcom
adc
sbb
xchg
clc
push
mov
ja
popf
hlt
mov
sbb
repz
pop
dec
in
shl
push
repnz
jns
adc
call
ja
pop
call
jae
xchg
idiv
scas
sub
sbb
mov
push
outs
jo
pop
sti
call
mov
inc
inc
mov
sbb
push
pop
std
push
jp
mov
xor
or
xchg
mov
int
mov
and
daa
add
jecxz
push
cmp
pop
mov
add
push
adc
pop
pop
xchg
sbb
je
jae
lea
enter
dec
push
in
shl
ss
xchg
popf
mov
xor
dec
pop
fcmovu
jmp
and
fwait
pop
push
iret
imul
and
mov
je
push
loop
shl
in
inc
ret
aaa
or
mov
mov
mov
clc
push
stc
dec
stos
push
mov
xchg
xor
xchg
rcr
fs
pop
dec
outs
popf
cmovge
test
and
cwde
mov
repnz
cld
ret
arpl
pop
xor
psadbw
out
mov
mul
sbb
rol
mov
sahf
je
(bad)
in
stos
xor
ins
cwde
and
es
arpl
fistp
fisub
test
sub
lea
imul
mov
out
push
cmps
pop
sbb
push
inc
sar
or
in
push
push
fst
adc
int3
ret
(bad)
push
pop
test
lea
or
xchg
inc
add
aaa
aad
xchg
je
push
adc
mov
popf
cli
bound
add
loop
clc
xor
sub
adc
movs
ret
test
push
mov
ror
call
jnp
stos
xlat
pop
mov
pushf
shl
test
inc
sub
retf
in
jle
mov
adc
ret
sbb
mov
ret
addr16
mov
scas
jmp
pop
add
adc
adc
push
dec
push
retf
mov
sti
loope
push
xchg
loopne
sub
mov
adc
loopne
arpl
cmp
inc
sub
dec
inc
movs
push
test
xchg
dec
sub
dec
ret
mov
retf
pop
clc
jbe
jo
inc
call
mov
dec
rcl
add
xlat
jne
mov
test
inc
push
adc
pop
dec
jecxz
mov
call
adc
aaa
rcl
ror
in
sub
jp
sbb
lea
(bad)
fsubrp
mov
xor
jmp
adc
aas
sti
leave
addr16
push
lods
push
cmp
push
jmp
jmp
shr
inc
fnstsw
loope
xchg
or
adc
push
cmc
add
xor
pop
pop
test
jbe
idiv
mov
cmp
pop
test
shl
adc
sbb
scas
inc
in
mov
or
push
dec
xor
push
adc
fldenv
pop
xchg
sahf
push
mov
add
sbb
movs
fucomip
jmp
stos
cld
clc
sub
sub
les
mov
call
pusha
or
mov
(bad)
xor
jae
fsincos
cdq
lahf
addr16
lahf
mov
cld
popa
pushf
loop
mov
das
and
inc
push
outs
or
and
stos
or
and
pusha
lock
push
inc
cli
sbb
(bad)
daa
mov
add
mov
sahf
sbb
and
or
cmp
dec
cli
or
and
cmp
test
push
mov
fisttp
lock
xchg
(bad)
add
xor
out
sub
fwait
add
pop
cmps
dec
movs
mov
jecxz
ins
push
lea
inc
movs
in
add
mov
in
out
xor
and
push
test
fistp
(bad)
fsub
jle
cwde
push
aaa
lea
inc
sbb
je
je
out
shl
jmp
mov
add
mov
test
pop
enter
jecxz
sub
sti
ret
sbb
and
or
add
outs
mov
test
cmps
jae
sbb
int3
out
add
cmp
pop
xor
movs
(bad)
xlat
sahf
stc
(bad)
fwait
pop
stos
sbb
sub
mov
and
xchg
or
out
out
pop
mov
inc
push
xchg
(bad)
dec
sti
push
stc
stos
test
pop
fs
ins
cmp
dec
sub
or
adc
test
js
jecxz
inc
cmc
pusha
inc
cs
mov
push
inc
into
mov
xor
sbb
fmul
icebp
hlt
mov
sbb
or
in
sub
inc
(bad)
movs
rol
ds
scas
in
sub
mov
call
retf
sub
adc
test
out
js
loopne
std
cmp
pop
xor
outs
jl
mov
add
sbb
mov
sti
or
adc
jo
ds
sbb
rcr
js
add
imul
(bad)
nop
and
popf
cmp
push
fnsave
mov
pop
jae
cli
mov
out
inc
scas
mul
aaa
xor
loopne
rol
std
sbb
jae
outs
(bad)
sub
pop
scas
cwde
mov
add
scas
jg
cmps
icebp
dec
adc
xor
ins
scas
and
dec
sbb
mov
cld
movs
and
hlt
sbb
cdq
and
sub
test
and
test
cwde
mov
daa
mov
mov
mov
mov
(bad)
stc
mov
in
jle
xor
ds
mov
mov
xor
xchg
jae
(bad)
mov
lea
xor
xlat
imul
jecxz
popf
test
aam
mov
fdivr
cmp
sbb
fisubr
sahf
cwde
adc
jb
cmp
push
fisubr
not
sub
hlt
stos
cs
inc
xor
retf
or
call
inc
test
and
popf
jg
push
sar
mov
or
stos
jecxz
fistp
and
cmp
js
inc
jb
xchg
pop
xor
mov
add
or
jb
movq
shr
loop
push
dec
xor
cmc
cmp
inc
sub
int
mov
sbb
loopne
pop
add
into
push
jp
and
pusha
jbe
fsubr
cmp
fcomp
xor
push
pop
fcom
daa
aam
and
push
cld
rcl
inc
ficomp
or
popa
fsubr
add
fnstenv
xchg
xor
fst
cmp
add
mov
shl
scas
xor
sar
aad
jb
je
mov
addr16
int3
into
xlat
cli
cmc
cmp
push
fst
jg
retf
nop
xchg
pop
test
(bad)
aaa
pusha
jo
mov
lea
jae
dec
in
imul
adc
arpl
sub
mov
loopne
jp
pop
or
pop
js
ret
pop
xor
cwde
cmp
lea
or
mov
inc
das
add
pop
adc
lea
dec
or
int3
fs
xlat
or
pop
sbb
in
shl
iret
ins
enter
test
sub
jnp
push
iret
add
cdq
sbb
adc
push
mov
jno
enter
inc
xor
jbe
and
and
shl
inc
ds
xchg
movs
mov
clc
ss
xor
call
add
mov
jmp
cdq
clc
adc
aam
out
(bad)
fdiv
shl
jne
sub
sti
xchg
xchg
neg
in
jnp
(bad)
inc
retf
imul
cdq
sar
inc
pop
xlat
mov
cmc
shl
cmp
popf
movs
inc
in
shr
mov
les
out
das
adc
push
sbb
mov
dec
in
gs
push
inc
adc
movs
movs
mov
hlt
pop
xor
cmc
sar
or
dec
test
mov
add
adc
aaa
and
sub
(bad)
div
into
xchg
loopne
outs
movaps
lods
jne
push
jns
sti
adc
or
cmp
fidiv
nop
mov
mov
push
scas
icebp
jmp
sbb
mov
cli
clc
outs
in
repz
icebp
jnp
or
retf
bound
and
jmp
xor
daa
fwait
adc
lds
jns
js
xchg
retf
ret
das
and
bound
sbb
inc
ja
sub
xor
dec
test
pop
clc
aas
(bad)
aam
or
mov
add
cli
ficom
data16
bound
cdq
dec
dec
ret
adc
fwait
mov
sub
cli
jg
inc
pop
add
xchg
icebp
xor
outs
jnp
mov
dec
sbb
adc
sbb
sbb
gs
retf
loop
cmp
pop
push
int
test
inc
mov
ins
xor
cmp
rcl
pop
pusha
adc
gs
or
cmp
sbb
or
int
push
push
and
mov
mov
push
sbb
pushf
(bad)
push
mov
push
lods
rcl
jl
adc
mov
push
mov
dec
cmc
mov
jno
in
mov
(bad)
addr16
cdq
add
fs
xor
jae
sbb
inc
add
xor
mov
jb
mov
jne
repnz
ss
leave
hlt
add
and
rcl
pop
mov
mul
int
dec
cwde
dec
imul
imul
inc
adc
mov
pop
daa
xchg
ds
adc
add
mov
nop
call
xor
ins
mov
xchg
sub
aaa
lods
dec
enter
arpl
test
jne
push
leave
add
push
mov
test
daa
movs
fmul
fbld
scas
rol
iret
lods
jmp
add
dec
mov
mov
inc
js
mov
sbb
nop
mov
sub
mov
loop
pusha
mov
inc
lock
adc
popa
test
stc
xor
jno
adc
shl
test
in
mov
jecxz
out
jg
add
cld
mov
scas
mov
xchg
mov
clc
sti
mov
sbb
push
mov
stc
loop
or
sbb
or
call
aaa
imul
ds
push
movs
test
xor
adc
cmp
push
jl
pop
and
pop
push
ret
call
pop
pop
pmulhuw
in
movs
dec
fwait
xchg
aam
pop
sbb
add
scas
lea
scas
test
mov
push
jnp
dec
iret
enter
jl
add
jmp
data16
xchg
(bad)
loope
ret
je
mov
dec
call
add
sbb
mov
mov
jle
or
mov
fsubr
and
mov
adc
push
push
sub
sbb
jp
fnstenv
mov
push
dec
pop
sbb
add
sub
cmps
sar
inc
std
loop
mov
jmp
dec
and
push
push
sbb
(bad)
ficom
dec
adc
call
inc
sbb
pop
jae
fsub
push
inc
lods
adc
cmp
out
mov
and
pop
jmp
and
xor
pop
dec
rcr
sbb
loop
cld
bound
ds
repz
jmp
cdq
test
ror
pop
cld
pop
push
add
xor
out
cmp
ret
sbb
pusha
pop
xor
mov
mov
loope
in
test
sub
sbb
movs
ret
and
inc
mov
jae
xor
push
mov
pop
mov
cs
push
inc
mov
xor
push
cmps
pop
(bad)
das
inc
cmp
imul
sub
sbb
sub
pop
jge
ins
sbb
and
mov
iret
pop
stc
je
xchg
out
clc
aam
dec
sbb
mov
and
pop
adc
pop
int3
xor
(bad)
xchg
mov
pop
sbb
pop
daa
push
out
imul
test
dec
xchg
mov
sub
push
es
stc
mov
leave
sbb
hlt
xor
iret
dec
cld
mov
and
and
jmp
adc
fdecstp
pop
mov
xchg
sub
cld
ins
cwde
push
pop
mov
movs
adc
jmp
xchg
fs
cmp
call
cmp
push
sbb
add
out
aas
sub
dec
push
xchg
dec
inc
pop
rcr
pop
jmp
or
fadd
inc
add
pop
jmp
xor
in
vpshaw
jns
jecxz
ror
imul
mov
in
or
lods
xchg
lock
inc
adc
mov
fwait
mov
xchg
in
add
ror
xor
xor
jge
(bad)
imul
loopne
xchg
pop
jns
push
xchg
sahf
jo
and
push
pop
push
call
stc
mov
pushf
mov
push
mov
push
outs
popf
aam
push
push
data16
sub
and
mov
hlt
repnz
mov
ror
or
add
push
pop
fst
in
inc
inc
jl
retf
jmp
inc
sub
cwde
mov
sub
jp
jne
rcr
adc
shl
les
dec
ss
lahf
retf
dec
scas
or
sbb
xchg
mov
xlat
dec
jae
mov
(bad)
mov
or
jo
cmp
call
sahf
mov
cld
cmp
pop
out
mov
dec
mov
pop
fisub
jmp
mov
push
and
out
and
iret
or
sub
adc
cmp
mov
cmp
in
push
lods
cli
pop
dec
cmp
fild
sub
je
jbe
shr
gs
les
mov
jp
jbe
adc
nop
fwait
sub
and
pop
ins
pop
push
push
js
(bad)
fcomp
adc
js
cwde
inc
scas
retf
xor
shr
test
sbb
ret
outs
neg
cmps
stc
inc
lea
in
pop
test
cs
mov
dec
in
lahf
cwde
cmp
add
ins
add
ins
cmps
ffree
xor
mov
nop
sub
dec
lock
mov
addr16
sub
loop
fwait
pushf
enter
cwde
sub
jmp
jg
or
(bad)
fisttp
(bad)
lock
mov
mov
arpl
adc
sbb
push
outs
jne
or
push
cmp
icebp
xchg
dec
add
add
and
(bad)
int
fsub
mov
inc
ret
leave
fisttp
jns
clc
push
retf
loop
push
js
xchg
cmps
sar
cmc
or
xchg
out
jmp
and
mov
jnp
dec
dec
not
jo
mov
or
push
or
jle
popf
and
hlt
test
dec
xor
inc
xor
mov
pop
jnp
and
retf
jp
pop
mov
sti
je
add
add
mov
das
dec
cdq
and
out
scas
push
ret
pushf
sbb
leave
icebp
mov
cmp
fsin
stc
movs
sahf
push
js
lods
add
pop
repnz
jb
cmps
sbb
ror
and
dec
out
or
inc
cmps
push
mov
jg
hlt
mov
call
sbb
movs
inc
dec
rcl
and
cmp
aad
pop
cmovge
mov
push
mov
pop
movs
and
(bad)
jge
int
jns
jbe
ins
fwait
push
ja
ins
sub
sbb
ss
adc
scas
ror
je
loope
pop
and
pushf
popf
test
cdq
adc
mov
cwde
jmp
data16
loope
std
jl
rcr
jmp
arpl
ins
sub
push
and
add
pop
jl
out
xchg
adc
jbe
and
sbb
jle
mov
push
cld
and
jge
cld
repnz
ret
pop
inc
cmp
and
repz
cld
mov
mov
fdivrp
pop
add
inc
pushf
not
xchg
pop
dec
sub
in
jecxz
dec
dec
movs
cmp
loope
in
jg
sbb
mov
stc
mov
adc
rcl
fild
and
mov
cdq
lods
mov
(bad)
sar
mov
sahf
scas
in
mov
popa
cdq
(bad)
push
cdq
aas
dec
ins
or
pop
push
jo
and
xchg
lods
aam
shl
movs
(bad)
call
icebp
jmp
mov
sbb
sub
daa
mul
and
ds
jo
cmc
pop
bnd
fcomp
ja
jmp
hlt
imul
mov
and
jb
into
adc
sbb
sub
pop
sbb
push
mov
loopne
dec
mov
enter
sbb
out
inc
and
test
mov
or
mov
push
aas
sar
(bad)
nop
pop
pop
fild
sbb
jg
and
gs
aaa
outs
stos
and
rcl
and
and
dec
mov
mov
aaa
ror
call
mov
cwde
jbe
xor
sbb
mov
movs
dec
dec
aam
jge
sbb
xchg
loop
(bad)
cmp
cmp
and
push
outs
mov
sub
bnd
adc
out
or
push
cld
les
dec
stos
fcmovnbe
adc
mov
nop
ror
mov
mov
and
cmp
cmp
inc
div
mov
sbb
cmps
lods
mov
push
jl
jle
leave
mov
jmp
xor
sbb
mov
jmp
lock
jle
jo
dec
leave
lds
push
and
push
add
inc
fnstenv
and
(bad)
sbb
bswap
in
or
movs
add
enter
pop
pusha
aaa
mov
outs
mov
popa
lods
fld
pop
push
jecxz
add
in
js
gs
stos
dec
jnp
mov
in
mov
ins
and
cwde
movs
lea
jl
xchg
test
adc
loope
aad
xlat
push
ret
outs
inc
inc
ins
pop
out
lock
xor
jb
add
mov
xor
mov
(bad)
test
(bad)
aas
fadd
in
pop
cli
loope
push
pop
jb
adc
mov
fwait
jg
lods
or
cmp
mov
pop
mov
jmp
cmp
rol
sub
ss
out
xchg
inc
xchg
xlat
jo
xchg
popa
test
out
xchg
imul
jns
push
aaa
push
inc
pop
sti
pop
out
out
bound
popa
test
int
mov
mov
fadd
xchg
jno
inc
dec
jl
pop
lods
xor
(bad)
stc
not
cmc
popa
mov
jmp
sahf
sub
aaa
sub
mov
test
jno
dec
cmp
call
cld
add
xor
pop
jecxz
hlt
mov
in
bound
lahf
fldenv
dec
mov
iret
cld
addr16
cdq
loop
retf
hlt
and
je
inc
mov
lock
loop
shl
sub
repnz
syscall
pop
movs
sbb
ja
xlat
mov
stos
adc
daa
into
cmps
push
mov
pop
add
jl
neg
mov
add
mov
or
mov
(bad)
in
xchg
popf
mov
add
rol
adc
sbb
and
ja
xchg
lahf
cmp
mov
in
xchg
out
ja
sub
ins
aad
sub
ins
jno
movs
and
xchg
lds
cwde
pop
fsubr
jns
cmps
nop
push
pushf
stos
adc
mov
or
sub
inc
leave
xchg
outs
mov
hlt
pop
or
jmp
mov
dec
and
and
push
xchg
lods
sbb
mov
dec
int
mov
inc
xor
pop
mov
mov
mov
(bad)
cld
inc
mov
ins
inc
fs
sbb
std
pop
jecxz
xor
xchg
mov
inc
mov
loop
mov
movs
pop
xchg
and
xor
ret
dec
dec
pushf
cmp
neg
mov
fidiv
rol
ret
jnp
and
or
jns
stos
push
lods
mov
push
or
mov
lods
pop
cmp
xor
shr
pop
add
data16
push
shl
xor
ins
mov
hlt
inc
scas
pop
pop
retf
int
jecxz
out
sbb
popf
fsub
sub
daa
aad
(bad)
cwde
mov
fs
fst
push
mov
imul
mov
nop
cmp
sbb
inc
std
sub
cmp
pop
in
cwde
ins
lds
js
xchg
loope
mov
iret
pop
mov
leave
jle
xor
push
mov
dec
popf
in
jnp
inc
ret
fidiv
jg
pushf
mov
gs
(bad)
push
mov
inc
cmp
cmps
scas
sti
test
in
dec
adc
jecxz
popa
mov
push
xchg
and
jne
enter
sbb
sbb
popf
mov
inc
fwait
dec
xchg
fdivr
or
or
add
cwde
stos
fcomp
cmp
mov
pop
iret
inc
lock
leave
leave
jle
or
mov
je
push
ret
pop
xchg
js
jp
mov
xor
test
das
mov
mov
out
dec
mov
dec
mov
push
lock
lods
cmp
rol
retf
add
push
(bad)
stc
mov
and
fbld
imul
rcr
fsub
cmp
inc
push
aad
pusha
daa
pop
mov
daa
(bad)
xor
cmp
mov
sti
mov
lds
lock
inc
cmp
es
and
xchg
ror
faddp
stos
pop
mov
cli
mov
pop
ror
daa
test
fcom
pop
mov
jecxz
adc
push
pop
xor
add
in
shl
push
in
mov
les
sbb
add
mov
(bad)
rcr
ret
or
aaa
cli
adc
ret
inc
adc
(bad)
shl
sar
cmp
(bad)
push
fdivr
or
jecxz
pop
sti
dec
repz
out
jne
cmps
pop
mov
xchg
xchg
push
push
jmp
lds
jg
lods
jmp
iret
jmp
in
jmp
add
fisubr
mov
outs
aad
xchg
loope
cmp
mov
dec
pop
mov
mov
cmp
fidiv
or
adc
imul
ret
cmp
test
or
and
inc
in
or
cld
or
mov
mov
clc
dec
(bad)
out
out
out
mul
mov
xor
adc
cwde
mov
outs
xor
jne
bound
inc
sar
lahf
xchg
push
leave
in
iret
call
mov
mov
xchg
cmps
fst
les
call
iret
push
xor
rcr
xchg
imul
fnstenv
or
ret
js
push
push
mov
mov
pop
mov
mov
mov
add
pop
enter
aas
(bad)
aad
call
dec
mov
stos
jb
sbb
adc
add
jb
xchg
xchg
lods
scas
push
adc
mov
jne
pop
mov
cmp
jecxz
dec
jecxz
test
test
outs
in
and
int3
pusha
sub
xchg
pop
adc
fistp
in
icebp
sti
jl
mov
mov
(bad)
mov
or
cmp
jnp
retf
dec
mov
mov
inc
pop
pop
sbb
stos
jecxz
mov
or
add
xor
call
mov
rcr
mov
and
dec
call
inc
sub
add
jbe
clc
push
adc
jae
out
lods
aaa
outs
rcl
shr
(bad)
and
and
call
inc
loope
div
std
repnz
outs
xchg
out
push
neg
adc
push
xor
mov
xor
adc
out
stos
and
mov
fsubr
inc
inc
clc
je
cdq
pop
test
xchg
ins
outs
pop
sub
sbb
mov
mov
das
repnz
ins
jbe
xor
sbb
ss
add
cmc
inc
call
sub
mov
xchg
push
cmp
aaa
shl
or
mov
dec
adc
sbb
in
sub
mov
cmp
ja
icebp
cmc
call
xchg
pop
mov
dec
mov
arpl
sar
(bad)
fbld
push
or
test
dec
mov
adc
fild
cmp
stc
(bad)
dec
imul
lea
lods
jb
lds
mov
lods
push
xor
sbb
jno
loopne
movs
in
icebp
into
aad
mov
or
pushf
dec
and
push
lea
or
jae
(bad)
cmp
fwait
aas
sti
div
lea
mov
pop
and
mov
fs
mov
cmp
scas
inc
fcomp
(bad)
mov
jmp
and
xacquire
in
mov
adc
int
scas
aad
sub
mov
push
dec
xor
dec
xor
(bad)
popf
fwait
xor
ret
adc
jmp
sar
dec
xor
adc
(bad)
icebp
inc
out
data16
cmp
movs
outs
mov
imul
stc
(bad)
repz
repz
ret
mul
pop
sub
fisttp
dec
mov
mov
inc
mov
(bad)
mov
jp
fidiv
and
scas
movs
mov
fidivr
stc
sbb
push
and
inc
icebp
shl
xchg
movs
xor
addr16
lahf
add
jns
ficomp
sbb
rcl
xchg
daa
sub
adc
popa
dec
mov
add
inc
pop
inc
jecxz
sub
add
(bad)
(bad)
fcomp
pop
lods
push
jae
pusha
jb
mov
mov
call
jno
pop
adc
and
imul
repnz
mov
mov
mov
outs
or
dec
inc
xchg
je
aas
push
adc
sub
xchg
push
test
adc
mov
mov
mov
sbb
mov
mov
test
mov
jp
int
and
adc
dec
mov
in
cmp
fcomp
push
mov
jo
daa
ja
xchg
adc
lea
xchg
and
sub
adc
adc
push
daa
mov
outs
mov
popa
sub
mov
or
outs
add
mov
mov
cmc
imul
out
jle
or
push
(bad)
pop
dec
dec
dec
jo
mov
mov
mov
xor
retf
in
arpl
pushf
(bad)
mov
fidivr
jns
sbb
ins
test
cs
and
cli
mov
mov
xchg
ins
cmp
xchg
mov
rcl
sub
push
arpl
das
jns
adc
push
das
outs
daa
jmp
adc
jmp
cmp
lods
xor
hlt
and
or
imul
fwait
lahf
fisttp
xchg
sub
shr
call
dec
sub
cmc
fs
mov
and
ins
je
into
std
jecxz
cld
fmul
cli
push
test
pop
out
mov
push
mov
xor
retf
(bad)
push
adc
and
xlat
fimul
adc
mov
mov
dec
mov
xor
add
dec
dec
push
mov
repnz
lds
out
inc
inc
jne
sbb
rcr
dec
push
adc
sti
pop
sahf
add
xor
ret
into
inc
and
(bad)
sbb
sahf
nop
stos
cmp
mov
dec
sub
sbb
ss
je
dec
inc
sbb
adc
xchg
stc
xor
push
pop
sahf
js
mov
out
cmp
cdq
or
and
pop
mov
in
adc
adc
imul
adc
fwait
add
pushf
jl
repnz
mov
mov
jg
nop
and
adc
xlat
xchg
pop
test
dec
jecxz
rol
inc
outs
std
mov
cmp
stos
add
in
rcr
xchg
xchg
cmp
push
pop
mov
or
sbb
repnz
pop
enter
mov
call
and
push
fdiv
sub
inc
or
fiadd
pop
cmp
mov
pop
sub
mov
and
mov
xlat
sub
movs
les
sbb
fnstcw
sbb
sahf
inc
sbb
bound
fadd
xor
outs
push
xchg
outs
push
clc
mov
call
into
rcr
push
lds
mov
out
sub
push
pushf
pop
or
shl
mov
cli
dec
mov
push
scas
in
scas
mov
fcomp
movs
adc
popf
ret
cli
push
out
inc
cmp
mov
or
push
out
pop
jmp
jg
xor
and
xor
push
sbb
sahf
push
nop
pop
gs
push
and
or
test
mov
stc
mov
sbb
adc
int
adc
mov
mov
jecxz
jae
shl
push
inc
inc
xor
sbb
imul
and
pop
mov
mov
adc
inc
mov
push
xchg
push
push
fistp
adc
(bad)
not
sbb
sub
mov
lock
scas
push
and
notrack
dec
in
inc
adc
sbb
add
out
idiv
xor
(bad)
bnd
mov
dec
pop
sar
mov
and
test
mov
shl
aam
pop
loopne
(bad)
jg
jg
inc
mov
add
mov
pop
jecxz
dec
cmp
jmp
repnz
cmp
pop
sub
scas
sub
inc
xchg
sbb
popf
mov
cmp
lds
and
sbb
ret
out
xor
and
xor
lods
aad
idiv
jmp
or
sbb
(bad)
test
and
dec
test
jmp
(bad)
call
dec
test
sbb
sti
loop
inc
sub
icebp
adc
pop
sbb
xchg
jne
sub
add
and
push
outs
inc
cmp
es
mov
dec
test
(bad)
clc
into
cs
xchg
mov
and
mov
add
xor
or
out
retf
loopne
popf
(bad)
(bad)
nop
aad
adc
pop
mov
std
pop
mov
push
mov
test
jno
int
lock
xchg
mov
ret
jo
xor
mov
mov
xor
inc
cmps
xchg
ins
ss
pop
pop
sbb
js
cli
fnstsw
popf
shl
adc
sti
inc
push
(bad)
scas
scas
adc
jle
sub
mov
fldcw
repnz
xor
pop
sub
jg
mov
mov
xchg
fsubr
shr
jbe
mov
xchg
mov
es
sbb
mov
ss
xchg
jecxz
sub
xor
mov
jb
(bad)
in
outs
push
test
and
stc
adc
mov
push
jno
loope
cwde
jmp
ins
fucomi
mov
dec
pop
mov
pop
pusha
mov
adc
mov
xchg
(bad)
icebp
cmps
rol
repnz
jle
push
dec
cmp
xchg
mov
data16
stos
adc
pop
push
call
imul
ret
inc
mov
std
adc
arpl
les
imul
std
aad
adc
cmp
dec
mov
sbb
ror
sbb
or
mov
adc
jge
outs
iret
xchg
fld
addr16
sar
sti
jo
call
jne
mov
retf
(bad)
sahf
mov
(bad)
cmc
pop
push
fwait
jmp
popa
mov
jb
pop
aad
test
xor
jecxz
cmps
xchg
cmps
fidivr
xor
(bad)
jle
out
std
cmc
mov
daa
aam
sub
mov
out
mov
xor
xchg
and
jne
stos
mov
sub
popf
arpl
enter
jp
test
popa
jo
int
lea
dec
cs
push
fwait
mov
sub
mov
adc
xor
int3
xchg
das
and
cmp
aaa
jp
aas
repz
mov
(bad)
sbb
std
mov
jnp
ins
aaa
fsubr
cld
int3
push
pop
cld
or
jo
xchg
addr16
xchg
movs
inc
xchg
mov
in
mov
fcmovbe
pusha
addr16
jo
mov
pop
(bad)
fidivr
out
mov
iret
loopne
lahf
cwde
fisttp
gs
sub
pop
dec
push
push
hlt
cmp
fsubr
mov
cmp
mov
mov
adc
nop
(bad)
push
jmp
cmp
or
aas
lds
xor
sbb
and
test
push
out
les
push
(bad)
xchg
and
mov
add
xchg
mov
inc
mov
mov
cmp
fcom
jecxz
in
inc
mov
loop
lds
jne
scas
jo
(bad)
adc
dec
shl
push
test
cmp
(bad)
mov
ret
clc
inc
mov
jae
mov
inc
test
or
dec
add
cmp
pop
mov
popf
cmp
shr
data16
rol
inc
retf
ror
imul
shl
int
pop
mov
cmp
mov
(bad)
cmp
lods
mov
pusha
out
sub
ins
in
mov
(bad)
mov
aam
pop
stos
cmp
pop
lods
xchg
mov
repz
pusha
cwde
dec
lock
shr
lods
adc
call
popfw
mov
lahf
xchg
inc
or
and
adc
je
in
aas
mov
add
mov
mov
push
push
jnp
sbb
xlat
mov
dec
ja
sbb
mov
in
jns
cmp
(bad)
adc
xor
test
fisttp
jno
sub
push
jge
nop
cmp
cdq
nop
mov
mov
or
inc
and
inc
mov
push
aad
pushf
pcmpgtw
lock
sbb
inc
mov
(bad)
xchg
pop
hlt
cld
jne
clc
mov
out
ins
dec
mov
jnp
aas
pop
adc
sub
push
push
cld
push
ret
(bad)
push
cmc
inc
fild
push
jbe
rol
push
mov
sub
cdq
lods
stos
xchg
sbb
dec
sub
adc
repnz
mul
sbb
test
fidiv
dec
inc
pop
inc
mov
test
xlat
mov
adc
shr
retf
or
or
add
xchg
hlt
mov
mov
push
jmp
mov
cmp
inc
mov
aam
sub
gs
into
jnp
(bad)
aam
sbb
cmp
sub
and
sub
stc
aad
ins
test
enter
sub
and
repz
rol
pop
sub
cmp
out
sub
inc
cmp
pop
jns
lea
push
inc
pop
fdivr
cmp
cmps
add
pop
fs
add
inc
hlt
(bad)
mov
add
test
out
(bad)
shr
bound
xchg
xchg
add
pushf
xchg
mov
xor
pop
jo
push
sub
test
cmps
pop
call
dec
(bad)
loop
out
out
loopne
stos
jnp
mov
or
adc
fsub
adc
add
jo
int3
(bad)
test
addr16
xor
mov
adc
test
sbb
adc
js
movs
js
movs
push
fisub
sub
pop
and
or
das
data16
xchg
cmps
and
nop
sbb
xchg
dec
or
dec
push
pop
mov
loope
mov
cmps
push
push
or
int
mul
adc
xchg
hlt
push
mov
jae
ret
(bad)
mov
sar
ja
arpl
pop
inc
sahf
xchg
pop
push
push
adc
int3
fxch
addr16
pop
loopne
sub
iret
pop
cmps
imul
lock
jno
inc
rcl
call
mov
mov
push
nop
sub
aam
dec
jle
arpl
add
icebp
sbb
faddp
mov
xchg
movs
adc
push
lds
inc
pop
lahf
or
xor
and
rcr
jp
sahf
fiadd
cmc
cmps
out
add
cli
cli
in
xlat
mov
mov
icebp
sbb
xchg
je
ins
div
sbb
jbe
cdq
ins
mov
dec
add
stos
into
and
daa
psubusb
jmp
xchg
push
mov
jmp
iret
mov
xchg
loopne
jmp
push
test
popa
cmp
push
adc
push
pop
or
aas
push
push
mov
pop
inc
mov
cli
add
adc
add
push
mov
xor
lods
add
fisubr
push
sbb
sbb
movs
imul
jp
mov
sahf
bound
jl
xchg
icebp
mov
cmp
push
loope
jnp
adc
dec
lea
das
jae
es
out
scas
push
std
test
not
add
addr16
sbb
dec
jl
fild
adc
adc
push
retf
fisubr
sub
cmp
mov
sbb
sbb
and
lock
jecxz
xchg
ret
pop
(bad)
hlt
retf
mov
jb
clc
fs
pushf
sahf
or
sahf
xchg
pop
jns
lahf
xchg
pop
add
sub
push
mov
inc
sbb
push
lods
pushf
test
jns
sub
retf
xchg
loope
out
dec
pop
mov
outs
cmps
mov
cmp
sti
jae
pop
xlat
out
retf
ins
add
mov
dec
xchg
bndldx
dec
test
popf
sub
dec
jns
iret
or
mov
out
xchg
inc
jne
fwait
movs
fdivr
ja
xchg
dec
push
ficom
inc
sub
pop
ficom
sub
jg
mov
ret
dec
dec
sub
(bad)
test
lods
(bad)
ficomp
fistp
stos
hlt
adc
jg
mov
mov
out
xor
jl
cmp
jne
add
imul
loopne
cmp
icebp
movs
add
dec
jns
inc
mov
xor
cwde
mov
xchg
mov
sbb
add
ret
push
pusha
adc
das
xchg
push
mov
mov
leave
sub
ins
and
cdq
daa
icebp
cmp
push
mov
sahf
xchg
sub
adc
scas
call
ins
cmp
neg
stc
lods
pop
sbb
push
add
fdiv
push
aad
xchg
std
add
aam
or
cmps
ror
std
jns
iret
sbb
dec
xchg
nop
or
into
push
mov
xor
fstp
ins
mov
idiv
mov
je
dec
jbe
out
cmp
and
xor
inc
jg
lahf
sbb
xor
lds
fcom
xor
inc
or
pop
mov
stos
adc
sbb
sbb
popa
pop
dec
push
call
int
hlt
mov
mov
aad
test
sbb
fdiv
test
or
mov
sub
pop
sbb
pop
add
mov
mov
cmp
cmp
cmp
xchg
cs
scas
(bad)
shl
icebp
mov
and
scas
cmc
jmp
add
mov
(bad)
pop
or
daa
data16
pop
cmp
mov
sub
les
pop
fwait
jns
(bad)
scas
xor
cmp
or
inc
mov
sub
lock
add
xchg
call
les
sbb
imul
sbb
(bad)
mov
mov
in
out
sbb
push
jnp
mov
jae
cld
mov
push
clc
cmp
or
jae
out
les
xchg
retf
xor
lods
pop
push
stos
xchg
cmp
and
or
fadd
cmp
dec
pop
stos
fbstp
cmps
adc
cdq
jns
int
dec
dec
shr
pop
sub
sub
cld
out
das
sub
add
xor
mov
mov
inc
inc
mov
aaa
mov
cmp
sub
and
sub
dec
stos
xor
cmp
dec
jle
add
adc
icebp
mov
mov
push
dec
dec
push
ret
fisttp
push
leave
int
test
int
rcr
mov
sub
push
mov
pop
pop
cdq
fnsave
pop
cmp
jnp
push
js
sti
xor
jmp
shl
push
xor
stos
xchg
ret
mov
pop
sbb
push
aaa
cmp
sbb
fbstp
inc
adc
mov
scas
in
dec
jne
xchg
mov
outs
dec
idiv
icebp
fbld
cmps
cdq
(bad)
and
stos
mov
push
and
mov
mov
stos
cmp
ja
mov
cmp
(bad)
loope
outs
sbb
pop
icebp
xor
xor
mov
add
jp
pop
pop
fwait
arpl
xchg
pop
shr
cmp
pop
jl
stc
sub
dec
aaa
outs
(bad)
adc
sti
mov
cmc
in
loopne
es
xchg
into
je
push
jge
test
nop
mov
add
xchg
pop
mov
mov
mov
jge
sub
cmp
mov
mov
fdiv
or
add
call
push
inc
sar
cmp
pop
jecxz
arpl
xchg
out
dec
jb
retf
loop
mov
daa
add
pop
mov
outs
fbld
jmp
(bad)
fstp
ret
sub
in
pop
cmp
cmp
fwait
jle
mov
daa
js
movzx
shl
shr
xchg
jb
jb
loope
in
push
arpl
out
push
mov
inc
mov
call
add
dec
aas
mov
mov
in
and
popa
loope
inc
shl
outs
adc
xchg
sar
inc
scas
fmul
mov
sbb
mov
mov
pusha
sbb
push
sar
inc
test
(bad)
mov
ret
call
repz
cmp
fist
cmps
repnz
aam
mov
gs
and
lds
jp
int3
push
pop
mov
leave
jmp
js
stos
mov
clc
xchg
(bad)
cld
not
push
call
fisttp
movs
push
cmps
pusha
loopne
add
mov
push
cmp
xor
clc
jo
das
xlat
pop
nop
adc
add
jae
out
push
jmp
xchg
and
ror
push
popa
je
ror
loope
or
cwde
push
aam
pop
lahf
pop
jae
push
mov
push
imul
out
or
loopne
outs
(bad)
(bad)
fs
lods
call
add
lods
pusha
cmp
mov
fs
repz
mov
aas
out
repnz
sub
mov
adc
dec
jp
inc
fld
ret
test
stos
and
in
and
pop
int3
into
ss
sub
jge
fnsave
in
jge
sub
add
mov
setnp
es
adc
dec
int3
lahf
xor
xor
fcom
enter
sub
loop
movnti
scas
jg
xor
lods
mov
mov
mov
xor
rcr
sub
add
sub
mov
add
jne
into
push
es
dec
cli
pop
sar
cmps
enter
ins
sbb
mov
iret
jne
(bad)
movs
cs
std
inc
xchg
outs
jbe
dec
(bad)
sub
movs
bound
sahf
ins
sbb
mov
jb
jecxz
aad
push
scas
in
mov
mov
xor
sub
xchg
mov
xor
mov
(bad)
cld
cmp
sti
jns
scas
or
leave
mov
out
lahf
fistp
push
cli
sub
cwde
cmp
add
je
xor
jp
xor
push
mov
and
loope
cmp
inc
retf
mov
add
aad
dec
jge
arpl
sub
inc
cmp
es
vpunpcklqdq
call
sub
xchg
std
cmp
(bad)
cmps
adc
hlt
ret
cmp
adc
mov
xchg
cdq
rcl
mov
lods
pop
jb
jmp
inc
xchg
xor
jmp
sbb
pop
jl
aam
rcl
(bad)
mov
jns
sub
lock
cmps
gs
mov
jp
mov
and
out
adc
div
out
mov
jge
into
push
xchg
mov
pop
loope
xchg
mov
inc
je
fmul
rcr
and
(bad)
call
rcl
outs
dec
dec
and
jb
retf
pop
adc
mul
mov
mov
cmp
inc
cmp
inc
and
or
mov
inc
jb
and
xor
fisub
push
push
mov
mov
(bad)
shl
stos
imul
xchg
mov
dec
les
mov
add
rol
dec
mov
lahf
adc
xchg
mov
dec
xlat
test
jns
dec
out
push
enter
push
iret
pop
cmp
adc
inc
das
cmp
sbb
mov
in
and
add
cmp
dec
xchg
aam
dec
das
test
mov
ret
les
pop
sbb
mov
pushf
jnp
dec
xchg
jno
add
cmp
jmp
ror
lock
and
repnz
stos
sub
test
sbb
int3
add
cdq
les
rcr
push
push
and
fist
mov
push
cmp
sahf
sti
and
jp
inc
shl
sbb
jo
pop
push
repnz
fchs
mov
xor
push
add
mov
add
cdq
add
nop
popf
mov
add
ja
dec
xchg
xor
mov
imul
repnz
jne
pop
pop
pop
stos
je
adc
in
sbb
mov
jecxz
fs
shr
sub
movs
ins
jno
daa
daa
fidiv
mov
cld
and
shl
sbb
je
add
push
je
scas
dec
mov
addr16
xor
call
loopne
out
cmp
jns
push
push
mov
cmp
inc
inc
xchg
cli
(bad)
pop
push
xor
jecxz
mov
jnp
shl
data16
fs
nop
loopne
ds
push
(bad)
xlat
test
fcmovnbe
xchg
or
scas
add
adc
shr
or
mov
xchg
ins
and
retf
push
inc
lods
mov
or
(bad)
popf
aaa
dec
cld
rcl
(bad)
mov
sahf
ret
les
call
sahf
xchg
mov
cmp
or
add
cmc
inc
adc
jb
dec
push
mov
in
mov
mov
push
xor
jmp
aad
test
xchg
add
(bad)
int
pop
fimul
push
in
xchg
sbb
(bad)
mov
(bad)
out
outs
inc
cld
pop
fisub
(bad)
pop
sbb
or
adc
xchg
jge
call
(bad)
js
add
in
loopne
movs
push
jnp
repnz
iret
sub
sahf
mov
test
daa
xor
pusha
int3
fs
mov
dec
mov
cmp
(bad)
or
mov
imul
mov
mov
(bad)
retf
retf
popa
sbb
mov
or
jge
inc
cdq
cmp
mov
add
ja
or
imul
pop
mov
leave
xor
sub
in
mov
lods
pop
jae
jp
jbe
mov
inc
loop
cmc
shl
cmp
and
stos
movs
fld
jbe
push
lock
push
push
js
(bad)
sti
pop
je
imul
(bad)
js
in
pusha
fisubr
jg
cmp
adc
ret
jecxz
aas
rol
xchg
jno
pop
std
push
lods
adc
adc
rcr
fstp
hlt
out
inc
adc
sbb
adc
xchg
ret
fisubr
mov
mov
and
push
push
jmp
pop
enter
jae
into
cwde
pop
push
not
les
sub
pop
enter
pusha
and
push
pop
test
mov
imul
jno
jmp
mov
cmp
add
pushf
ja
push
inc
pop
add
add
movs
and
push
cmp
ds
cmp
adc
fwait
adc
fisttp
jge
xor
mov
in
rcl
sub
aam
cmp
jp
imul
push
je
push
cdq
aaa
mov
jmp
push
push
or
ss
mov
add
mov
mov
mov
inc
and
nop
xchg
lea
es
hlt
jbe
ins
add
xchg
cwde
mov
imul
xor
ja
out
inc
jo
je
pop
mov
mov
rcl
aam
rol
dec
mov
mov
cs
sti
inc
sub
outs
gs
pmuludq
cs
xchg
rol
fmul
ficom
mov
push
mov
sub
dec
mov
dec
clc
clc
data16
icebp
xor
xor
xchg
out
sub
jmp
add
mov
jge
rcl
push
push
cmps
aam
jmp
jne
fist
jmp
add
out
out
xchg
sbb
out
adc
sub
sbb
(bad)
cmp
lahf
jns
xor
push
jle
push
add
nop
clc
int
pop
push
push
push
sub
mov
in
cmps
pop
stc
jecxz
test
sub
jmp
aam
pop
out
das
ret
(bad)
pop
pop
outs
dec
les
dec
jno
sbb
in
retf
sbb
div
mov
enter
sub
repz
sub
in
loop
sub
ins
cdq
push
mov
in
xor
mov
jl
hlt
js
lea
(bad)
std
test
cld
mov
call
std
cmp
retf
pop
lods
xor
movs
jle
sub
mov
(bad)
jmp
mov
bound
repnz
push
dec
ss
dec
jne
bound
fistp
test
popa
int
adc
mov
mov
mov
iret
dec
mov
add
int
popf
pop
mov
std
iret
test
mov
popf
xchg
in
pop
std
mov
mov
ja
test
aaa
jmp
or
jbe
and
cdq
xor
enter
push
mov
(bad)
sti
and
push
dec
ds
rol
sbb
xchg
xor
xchg
xchg
add
jg
lods
sar
gs
and
pop
xor
ja
gs
add
mov
mov
lods
sbb
ds
es
adc
in
xor
sbb
xchg
pop
mov
xchg
sub
(bad)
and
in
loopne
and
pop
inc
sti
push
cmps
mov
retf
dec
cld
pop
inc
ja
xchg
mov
sbb
inc
(bad)
cs
add
(bad)
fstp
mov
pop
jo
jge
arpl
jns
fst
cwde
push
mov
ret
jle
rcl
and
adc
add
fadd
push
pop
xor
and
scas
jecxz
adc
xor
std
dec
ins
les
xchg
dec
stos
repnz
adc
jo
out
mov
push
call
push
add
push
push
mov
mov
adc
imul
retf
sar
adc
push
push
dec
in
xchg
or
adc
pushf
mul
out
shl
adc
add
fbld
mov
sub
add
daa
xchg
cmp
push
int
jg
cmp
pop
sbb
shr
stc
mov
mov
jae
and
pop
xchg
mov
popa
sub
mov
mov
fnstenv
push
sub
sbb
sub
mov
repz
inc
mov
jmp
mov
pop
mov
loopne
pop
xchg
or
pop
out
and
(bad)
(bad)
mov
and
cwde
mov
push
xor
sahf
rcr
(bad)
cmc
outs
daa
mov
call
into
movs
int3
xchg
push
adc
jnp
das
neg
fs
nop
cmc
data16
cmc
cmp
cdq
cmp
or
ss
cmps
push
cmp
movs
mov
pop
xchg
adc
(bad)
icebp
dec
rcr
inc
lock
sbb
add
int3
fild
adc
push
mov
add
mov
test
mov
mov
push
(bad)
and
imul
iret
jg
nop
retf
sbb
std
push
and
mov
sub
(bad)
call
sbb
xor
adc
xlat
iret
cmp
xchg
and
in
addr16
push
mov
adc
mov
fidiv
pop
dec
push
jmp
into
neg
sub
add
dec
mov
pop
pop
pop
gs
pop
popa
and
fsubr
inc
xor
cmp
xor
cmp
aas
and
jecxz
sti
mov
mov
cmp
or
mov
repz
sar
or
lods
push
js
hlt
dec
mov
or
add
mov
mov
scas
aas
cwde
(bad)
scas
test
leave
pop
dec
dec
mov
add
inc
dec
outs
shr
sub
fidiv
fs
dec
test
stos
je
ret
loope
pop
sbb
dec
aas
ja
das
call
fld
jge
add
js
xor
ins
push
xchg
push
xchg
in
in
iret
mov
pop
jp
jmp
mov
mov
aaa
pop
jnp
sub
addr16
div
loope
arpl
mov
pop
or
cdq
jecxz
fistp
daa
leave
dec
and
pop
jg
daa
mov
arpl
mov
inc
xlat
jne
int
pop
in
les
adc
popa
xor
popa
sub
xor
jmp
mov
xor
lock
repnz
inc
cs
aas
xchg
ins
sbb
push
out
(bad)
sbb
lods
aam
out
int3
les
std
pop
in
test
enter
cmp
cmp
in
push
out
push
ins
push
pop
add
push
jle
xchg
fwait
sbb
cwde
fnsave
js
popa
sbb
cmp
mov
sti
pop
push
daa
cmp
cmp
ins
xchg
cmc
ret
sbb
jmp
jp
in
jle
xlat
jp
cmovge
dec
pusha
popa
mov
pop
fs
add
mov
mov
aaa
adc
pusha
push
mov
sub
pusha
movs
popa
mov
call
jmp
imul
test
jno
inc
iret
aam
lods
pop
loop
xchg
lock
xchg
inc
enter
inc
shr
call
xor
dec
das
faddp
cmps
inc
xchg
add
dec
xor
sub
inc
or
shl
pop
jmp
leave
addr16
jle
xchg
mov
fiadd
pop
fcmovne
sub
test
ss
push
push
mov
call
sbb
cwde
and
jmp
clc
imul
sbb
and
fdiv
clc
in
leave
xor
jbe
sti
movs
jge
xlat
adc
pop
xchg
ja
cmp
test
arpl
cmp
aam
test
fnstenv
popa
inc
cs
movs
repz
dec
mov
mov
cmp
dec
pop
adc
addr16
sub
sub
push
pop
out
mov
cmp
adc
sub
mov
ss
mov
call
pop
(bad)
dec
xlat
push
xor
xchg
shr
test
outs
adc
xchg
cmp
cmps
call
out
mov
cmp
xchg
jl
push
inc
sub
ss
test
xor
mov
jle
or
cmp
inc
lahf
cs
xor
sub
pop
jb
adc
leave
ds
imul
inc
retf
cmp
out
sbb
jne
pop
dec
(bad)
jnp
je
push
cmp
dec
cwde
ret
and
mov
mov
sub
cmp
add
add
cmp
sub
mov
and
add
out
pop
sbb
pop
mov
call
sbb
(bad)
aam
cmp
add
mov
pop
mov
pop
shl
cmp
das
xor
mov
mov
(bad)
or
test
xchg
loop
dec
mov
xor
adc
sbb
int
jbe
push
out
mov
or
div
xchg
jmp
mov
cmp
dec
je
clc
xchg
int3
jno
jg
das
je
(bad)
push
jns
sub
dec
pusha
and
les
mov
test
and
bound
loopne
sbb
repz
sub
sti
mov
xor
sub
jl
lods
sub
mov
mov
cdq
mov
dec
jae
retf
sub
movs
cld
jae
imul
pop
add
daa
in
sbb
xchg
xlat
scas
in
mov
jmp
out
mov
nop
dec
test
pop
lds
je
inc
mov
xor
pop
xchg
cmp
(bad)
in
call
mov
not
ss
daa
lea
xor
mov
retf
add
fwait
adc
out
stos
aam
mov
dec
cmp
fstp
adc
add
ds
adc
dec
call
push
aam
jp
sbb
xchg
and
or
inc
jge
and
inc
cmps
mov
mov
mov
ja
jmp
adc
fucomip
and
xchg
push
sub
cmp
dec
push
outs
and
ficom
add
inc
or
sub
cli
stos
cmc
and
fdivrp
(bad)
mov
cmps
dec
add
mov
fcomp
ja
pop
mov
repz
loop
mov
pop
push
cmps
rol
sub
shl
push
xor
and
pop
stc
into
leave
jp
pop
pusha
leave
mov
mov
and
aad
dec
push
xchg
or
pop
inc
xchg
inc
setp
dec
mov
sub
adc
fistp
rcr
and
imul
ret
xchg
xchg
les
mov
xor
sub
mov
ds
shl
popf
jle
adc
in
cdq
pop
pushf
xchg
add
or
sub
imul
jecxz
mov
sar
sahf
adc
push
and
add
jmp
cmp
gs
pop
imul
push
std
ins
dec
imul
adc
popf
test
iret
fs
mov
sahf
repz
adc
mov
repnz
cmps
pop
cwde
mov
mov
lods
mov
sub
add
sbb
pop
in
mov
pop
inc
xchg
or
cmp
and
jns
jecxz
mov
or
cmp
shr
jmp
enter
pop
stc
icebp
add
add
icebp
sbb
cmp
dec
fld
ja
cmc
mov
dec
push
test
pushf
iret
repz
xor
xor
retf
inc
(bad)
out
stc
ja
loopne
icebp
aaa
fild
push
jl
push
xchg
pop
mov
daa
sbb
push
jmp
and
mov
lea
inc
or
jmp
fsub
mov
mov
dec
enter
sti
mov
jmp
bound
ror
not
enter
mov
mov
rol
stos
sbb
pop
push
dec
add
outs
mov
sbb
(bad)
jae
cmc
retf
or
mov
mov
add
mov
fmulp
outs
ss
addr16
adc
push
call
mov
cdq
push
aad
and
push
(bad)
pop
push
out
pop
leave
jb
gs
pop
pop
hlt
xchg
ret
sbb
test
dec
retf
fistp
sbb
jbe
(bad)
sbb
dec
jae
out
mov
xchg
shl
mov
push
shl
sbb
pop
sti
int3
leave
leave
jmp
addr16
ja
repz
mov
call
fnstcw
je
cmps
and
cs
add
cmp
mov
sar
sub
test
or
das
xlat
push
scas
xor
add
jp
rcl
test
repnz
xchg
(bad)
movs
lods
or
(bad)
and
jmp
mov
inc
adc
inc
movs
mov
fsubr
xchg
cmps
mov
shr
jmp
push
xor
or
addr16
pop
call
sbb
mov
stos
pop
adc
pop
into
fldenv
popf
adc
jne
xchg
cwde
fisttp
popf
push
aam
vcmpps
test
gs
popf
sub
xor
dec
adc
xchg
push
pop
test
inc
inc
jmp
pop
daa
or
adc
mov
out
shr
and
xchg
or
arpl
daa
aaa
fstp
sub
retf
sub
xchg
sub
push
in
inc
bound
dec
jmp
xchg
dec
sub
pop
test
ja
push
xor
(bad)
mov
jo
call
cdq
push
sub
adc
mov
and
loope
and
xchg
dec
mov
jmp
or
sti
aaa
scas
int
pop
ins
dec
dec
rol
adc
addr16
xor
adc
(bad)
jbe
inc
jle
je
pusha
push
lods
and
mov
mov
je
pslld
into
int
jmp
sub
es
gs
outs
gs
int
or
push
adc
int3
and
call
cmp
cli
in
fisttp
mov
dec
gs
sbb
xchg
stos
xchg
cmp
inc
pop
(bad)
inc
cmps
popa
push
cdq
(bad)
iret
mov
and
stos
dec
lock
cmp
les
rol
jp
cmps
push
xor
pop
std
cmp
and
iret
mov
movs
clc
mov
jbe
sbb
cmc
jmp
clc
movs
inc
push
jne
lea
ret
rcl
xchg
jnp
push
call
aad
mov
cmps
rol
add
pop
sub
not
push
es
enter
out
shl
sar
sbb
xor
push
fwait
pushf
enter
int3
in
clc
mov
xor
mov
sub
ins
jmp
jnp
aad
dec
xchg
pushf
push
sbb
aas
stos
inc
cmp
add
or
inc
adc
sti
xor
and
pop
sahf
mov
jmp
call
jge
movs
mov
xchg
add
mov
fbstp
loop
fucomp
pop
retf
out
cli
mov
fwait
push
aas
call
mul
addr16
dec
and
xchg
adc
xor
call
lahf
add
xor
jmp
call
aam
jae
mov
mov
pop
cmp
pop
stos
retf
fstp
dec
push
inc
mov
ret
test
scas
jge
push
adc
xchg
ret
popa
mov
enter
clc
mov
in
and
(bad)
mov
shl
xor
mov
mov
fistp
(bad)
iret
stos
inc
sbb
stos
fwait
aam
or
pushf
jbe
ss
push
in
or
jmp
add
push
cmp
jg
mov
xor
xor
ds
mov
push
xor
adc
repz
test
lea
and
push
or
loope
cmc
(bad)
and
lock
scas
xchg
sub
aam
jmp
jae
jne
xlat
jecxz
retf
cmp
fdiv
repz
aam
scas
push
mov
cdq
retf
push
pop
xchg
not
mov
retf
dec
xchg
mov
inc
popa
add
mov
adc
test
out
sub
xchg
sub
rol
addr16
xor
xchg
and
out
stos
mov
xchg
mov
push
fdivr
sub
lods
cdq
adc
leave
clc
jne
push
cmps
push
adc
ja
inc
into
and
xor
xchg
and
add
jne
xor
adc
cmps
pop
jp
jne
ss
sbb
adc
test
jae
mul
mov
jb
mov
nop
scas
push
add
scas
movs
inc
(bad)
popa
and
jmp
aam
jp
cmc
ds
sbb
mov
add
adc
outs
jmp
sbb
add
push
std
pusha
scas
and
aad
mov
mov
xchg
sub
nop
and
dec
and
cmc
inc
ror
xchg
xchg
pop
scas
mov
mov
inc
xchg
pop
or
nop
mov
sub
stos
inc
sbb
outs
cmc
add
out
sbb
daa
mov
(bad)
(bad)
into
outs
std
sbb
jecxz
lods
retf
adc
ss
add
shl
rol
or
pushf
dec
cmp
add
xor
mov
jbe
call
jnp
push
and
or
ds
sbb
and
cmp
mov
sub
push
pop
mov
mov
out
fiadd
dec
cld
inc
dec
in
cmp
mov
sub
pop
sub
sbb
retf
xchg
imul
fadd
out
(bad)
lock
cwde
mov
dec
and
cmps
std
jb
mov
stos
adc
cmps
inc
dec
fsubr
in
xor
mov
leave
out
shr
dec
mov
jmp
ss
mov
mov
sub
stos
and
mov
mov
adc
pop
test
xchg
sar
retf
fist
out
outs
xor
mov
push
aaa
hlt
mov
repz
pop
repz
gs
mov
add
fldcw
and
and
add
hlt
pop
jne
lock
push
jecxz
push
jmp
call
es
jle
sbb
stos
(bad)
fucom
mov
xor
push
movs
push
retf
std
in
adc
mov
jne
sub
lods
test
lahf
outs
wbinvd
pop
and
je
retf
test
cli
hlt
sbb
aaa
les
cmp
adc
mov
pop
bound
mov
ds
aas
stos
add
sti
loop
cmp
std
scas
mov
stos
movs
outs
rol
sbb
jns
outs
lds
and
into
iret
icebp
add
leave
push
pop
hlt
cld
sub
inc
dec
jno
or
js
jnp
outs
xor
mov
xchg
push
(bad)
dec
push
inc
cmp
mov
loop
xor
les
pusha
pop
ins
mov
retf
cmp
cmp
jnp
adc
sti
cmp
lea
lock
pop
cmps
push
adc
add
dec
test
sti
mov
and
mov
pop
jg
mov
push
shl
cli
mov
mov
mov
lods
in
pop
sbb
test
dec
push
pop
fidiv
lahf
scas
dec
(bad)
idiv
lea
stos
in
pop
push
out
or
sub
push
in
xor
and
and
sub
jne
mov
xor
fs
xchg
jecxz
imul
fnsave
inc
inc
mov
cmps
inc
push
inc
ins
bound
jge
inc
jnp
push
je
jo
jne
push
sbb
cli
inc
retf
aam
mov
es
mov
stos
shr
pushf
sub
pmullw
stc
dec
inc
and
cwde
ret
inc
mov
cli
retf
ins
addr16
addr16
cdq
sbb
(bad)
loope
pop
nop
dec
push
addr16
push
cmp
in
pop
dec
mov
xchg
es
inc
stc
dec
outs
adc
(bad)
daa
in
push
push
cld
aaa
jg
inc
(bad)
repz
pop
pop
or
dec
mov
xor
mov
push
jne
xchg
mov
pushf
icebp
or
repnz
out
mov
mov
xchg
xchg
push
inc
cmp
xchg
or
jae
das
cmp
gs
push
jb
out
les
jmp
test
push
add
bound
(bad)
fidivr
xchg
addr16
add
sbb
mov
repnz
enter
adc
xchg
inc
adc
sahf
data16
loop
add
cmp
pop
pushf
mov
mov
inc
rol
call
mov
pop
dec
sahf
push
test
jge
dec
or
lock
and
dec
repnz
xchg
inc
jg
loope
pop
in
fidivr
jp
add
scas
clc
std
mov
adc
movq
inc
mov
fiadd
jp
xor
aas
gs
and
lods
aas
retf
jno
push
push
mov
xchg
dec
sub
adc
sar
lods
aaa
sub
ficomp
and
xchg
push
movs
sbb
jl
iret
lea
fidiv
sbb
dec
or
in
mov
adc
cld
pop
fadd
enter
dec
stc
xchg
retf
mov
xor
sqrtps
leave
lahf
sahf
icebp
mov
pop
push
ins
adc
call
pop
(bad)
push
fnstenv
push
js
jae
(bad)
pop
rdpmc
add
push
cmp
mov
out
adc
jo
mov
or
push
sub
cmps
mov
out
xchg
jmp
pusha
sar
xor
adc
nop
jecxz
dec
int
jl
stos
movs
outs
shr
hlt
popa
fs
les
dec
adc
inc
(bad)
rcr
sahf
ret
xchg
(bad)
jmp
jecxz
sbb
pop
sbb
cmp
pop
pop
add
ins
pop
or
pop
pop
and
dec
pop
add
and
dec
mov
ins
xchg
pop
out
call
(bad)
mov
or
lds
and
(bad)
out
push
lds
adc
aaa
lds
jle
or
mov
cwde
pop
sub
mov
xor
cmp
sub
adc
xchg
imul
mul
sbb
sbb
sbb
call
mov
ret
rcr
jo
mov
adc
sbb
and
imul
sub
hlt
mul
sbb
xchg
std
lods
push
add
xchg
mov
xor
adc
mov
ss
lahf
dec
mov
sbb
push
mov
into
in
cli
stc
adc
dec
aas
ror
(bad)
je
fistp
es
fs
mov
dec
sub
(bad)
(bad)
ss
int3
popf
mov
pop
or
pop
pop
stc
shl
ficomp
aas
dec
pop
retf
aam
mov
adc
pop
repnz
repz
fbld
push
xchg
lea
xor
pop
int
sbb
jg
(bad)
cmp
iret
popf
sbb
push
outs
in
test
fwait
enter
cli
mov
xchg
(bad)
pop
fsub
das
je
mov
mov
bound
hlt
cld
jbe
add
or
or
in
arpl
jp
jecxz
ja
cmc
rol
dec
imul
dec
aaa
pop
adc
pop
push
push
jl
sbb
jp
stc
pop
or
enter
pop
or
dec
dec
cmp
stc
ret
cmps
adc
or
jmp
mul
rcr
ds
(bad)
(bad)
ds
out
jge
mov
(bad)
mov
shl
pop
retf
mov
stos
push
test
add
sub
and
jb
test
jecxz
pop
outs
int
test
popf
adc
fldenv
jp
into
cmps
jg
mov
jp
icebp
xchg
clc
mov
mov
mov
xchg
js
sbb
dec
js
push
div
and
out
xchg
(bad)
mul
(bad)
jmp
jp
aam
imul
lods
adc
loopne
push
in
jnp
stos
cmp
fnstsw
add
sub
dec
xchg
retf
(bad)
loope
call
push
jo
test
jmp
inc
int
repz
pop
in
hlt
retf
cmp
push
inc
jmp
cmp
xor
add
rol
sar
jno
mov
es
pusha
sub
jae
dec
cmps
repz
jno
cmp
aad
loopne
stos
and
fwait
xchg
out
movs
inc
int3
shl
add
adc
pushf
push
rcr
ins
mov
ja
jne
shl
es
shl
dec
repnz
(bad)
adc
loop
mov
(bad)
jmp
inc
cli
inc
neg
adc
or
xor
adc
mov
cmps
mov
ss
lea
cli
cs
fild
dec
or
or
or
std
push
cmp
dec
adc
loope
movs
mov
lock
jo
ins
movs
stc
jns
push
addr16
cs
lahf
inc
push
jmp
xchg
jle
aaa
jae
daa
push
mov
push
pop
aad
inc
push
pop
dec
mov
and
xchg
and
inc
(bad)
test
xor
dec
or
mov
movs
enter
and
mov
hlt
call
pop
pop
ja
enter
cmova
aas
in
fisttp
and
adc
dec
data16
jl
push
xlat
hlt
popf
int3
xchg
dec
outs
dec
popa
fld
das
mov
sub
pop
pop
cmp
ins
ret
mov
mov
frstpm(287
adc
sar
pop
xchg
push
mov
mov
test
push
adc
daa
mov
test
addr16
ins
mov
test
push
(bad)
fst
cli
cdq
and
nop
pop
loopne
sbb
inc
jg
ja
adc
ror
mov
cmps
inc
inc
fs
dec
(bad)
shl
jmp
xchg
push
popa
add
fincstp
ss
aaa
xor
jno
mov
inc
sbb
cli
popf
movd
sbb
mov
mov
outs
repz
jbe
ins
lahf
in
sbb
mov
hlt
mov
dec
fistp
sub
jmp
sbb
sub
sbb
loop
cld
sbb
fisttp
call
sub
push
inc
in
iret
mov
push
inc
push
retf
dec
or
sub
sbb
push
sub
(bad)
mov
mov
int
fdiv
add
dec
jl
or
imul
cmp
pop
add
mov
call
ins
mul
aad
arpl
push
xchg
mov
inc
add
test
jnp
push
sahf
pop
sbb
out
(bad)
aad
pop
xor
outs
jne
add
jb
ret
fwait
aad
call
fidivr
mov
popf
mov
mov
pop
mov
sbb
nop
(bad)
(bad)
dec
jns
pop
dec
test
lock
inc
jecxz
data16
stos
fs
xlat
xchg
mov
das
jp
adc
cmps
xchg
dec
lds
pusha
sar
movs
jo
out
push
xor
sar
jae
mov
xchg
in
loop
mov
add
adc
add
jb
and
fstp
add
jb
sub
or
sub
lea
lds
and
push
popa
lock
out
ja
lea
push
jb
pop
pop
mov
xor
loope
jae
xlat
mov
ins
dec
retf
fadd
sbb
xor
(bad)
dec
sub
jge
test
sub
xor
sbb
sub
lock
ja
mov
add
(bad)
test
add
or
pop
cmp
sub
aas
mov
and
pop
pop
add
jbe
adc
repnz
jp
xor
and
mov
shr
pop
sub
mov
ins
pop
std
pop
fnsave
fidivr
stc
mov
pop
(bad)
or
aam
rcr
nop
repz
jne
jmp
pop
retf
out
jns
mov
dec
add
add
sar
in
cmp
lods
repz
ja
mov
retf
push
movs
jnp
outs
js
push
xchg
or
inc
sub
ret
dec
add
push
gs
sub
bound
sub
xchg
sub
push
lea
and
in
add
xor
in
mov
pop
in
aas
aam
add
idiv
scas
add
mov
cmp
dec
sar
jmp
mov
daa
and
ins
pop
bnd
retf
pop
sub
es
in
sbb
jb
lods
jae
xor
cmps
out
sar
repz
outs
inc
jne
cmp
jo
lods
adc
aad
retf
push
(bad)
mov
into
mov
jne
mov
and
dec
out
jl
int3
and
mov
in
mov
mov
xor
test
popa
pop
mov
cmp
shr
jne
dec
aam
pusha
sub
rcl
dec
test
out
out
pop
cli
lds
lock
movs
mov
and
xchg
xchg
push
sub
push
inc
dec
stos
mov
pop
cmps
mov
int3
jnp
ds
xchg
sub
and
sub
pop
imul
push
pop
call
or
nop
push
and
pop
or
leave
sti
nop
sub
sub
rep
mov
inc
xchg
mov
or
mov
adc
jne
fld
sub
fwait
ret
push
add
and
cdq
push
loopne
pop
lea
(bad)
pop
sbb
mov
les
dec
xor
jmp
scas
pop
sub
scas
inc
push
jno
mov
test
sub
leave
pop
xchg
push
add
mov
lds
mov
adc
dec
cmps
or
retf
movs
scas
das
scas
or
jl
mov
adc
pop
mov
mov
cld
add
add
test
add
mov
mov
mov
sbb
aam
push
sub
ss
iret
pop
hlt
lea
jle
mov
push
or
test
push
fidiv
mov
pop
cmp
cmp
cmps
and
loop
adc
add
adc
xchg
fistp
psraw
fwait
adc
mov
jle
fisttp
inc
mov
test
or
aas
add
mov
imul
fs
shr
ror
and
in
add
lods
out
inc
xor
mov
jbe
das
mov
jne
cli
push
not
retf
scas
jno
imul
pop
inc
push
mov
mov
pop
jecxz
ret
mov
mov
jle
add
repnz
cmp
and
das
dec
fwait
bound
mov
xchg
clc
or
loope
dec
test
add
jae
daa
ja
mov
dec
fisubr
and
pop
push
ss
shld
mov
dec
sbb
retf
jmp
inc
mov
jne
add
ror
push
sbb
or
jb
mov
scas
fld
ret
xchg
xor
sbb
fnsave
xor
jmp
ins
mov
ins
xchg
outs
xor
clc
scas
enter
pop
mov
mov
jo
cmp
mov
cmp
mov
and
mov
sbb
adc
rcr
dec
arpl
mov
mov
data16
popa
lods
shl
cld
xchg
nop
pop
nop
xchg
je
mov
sti
nop
outs
aas
fimul
and
enter
(bad)
mov
movs
pushf
scas
mov
mov
punpckhbw
test
inc
push
lock
and
test
jbe
ins
mov
jo
mov
mov
push
mul
add
call
adc
pop
sub
(bad)
(bad)
cmp
mov
xor
jg
data16
(bad)
in
int3
jae
xor
cmps
retf
pop
jl
mov
fcmovu
mov
dec
mov
pop
movs
fsubr
mov
or
jo
outs
push
push
fcmovu
test
popf
xlat
pop
dec
std
out
pusha
call
cmp
test
inc
sbb
mov
loop
ror
xor
jmp
jae
fisttp
outs
rol
rcr
dec
shl
je
push
out
or
add
adc
aas
test
mov
mov
imul
call
repz
fisttp
retf
(bad)
fst
and
add
sub
pop
mov
(bad)
jo
mov
aas
cmp
imul
xor
inc
lods
mov
ret
ds
je
in
in
jecxz
cld
sub
shl
or
or
scas
xchg
iret
shl
iret
stc
and
and
jae
jmp
imul
and
and
in
jg
xor
mov
into
jecxz
pop
pop
scas
cs
stos
fild
ins
cmps
loopne
adc
xor
adc
cmp
and
mov
push
inc
push
sar
aad
mov
mov
aaa
inc
retf
add
adc
into
retf
out
jecxz
mov
jo
jae
jae
clc
out
retf
cdq
push
jmp
cdq
aam
outs
add
xlat
add
leave
adc
leave
lock
cs
test
gs
push
out
in
cwde
jb
fisub
mov
add
sbb
(bad)
out
dec
rol
scas
adc
ret
js
inc
outs
movs
mov
dec
mov
cdq
rcl
jae
sbb
repnz
mov
xor
mov
mov
aad
xchg
adc
pop
test
push
pop
pop
dec
fnstcw
dec
or
mov
test
push
dec
inc
in
sub
and
mov
test
jne
outs
xchg
inc
jmp
ins
adc
push
sub
jbe
test
sub
jo
mov
enter
push
and
mov
rcl
push
xchg
loopne
stos
adc
cmp
rcr
into
aas
test
jmp
shl
and
push
cmp
sub
ins
dec
aam
inc
mov
xor
cmp
jg
jnp
push
enter
push
retf
xor
mov
das
mov
xor
mov
xchg
dec
cmp
jg
or
in
je
add
cmp
push
pop
out
push
jp
std
(bad)
adc
pop
lahf
out
push
pop
ret
jne
aas
mov
dec
int
mov
jns
jmp
(bad)
and
leave
in
or
xchg
rcr
pop
and
dec
js
jnp
mov
inc
dec
push
mov
pop
ret
fucomi
sub
mov
mov
push
pop
popf
and
xor
sahf
and
or
int
inc
hlt
inc
xchg
mov
pop
jb
add
icebp
jecxz
scas
(bad)
outs
sub
and
jp
les
call
(bad)
jnp
(bad)
rol
sub
clc
mov
dec
(bad)
enter
ss
push
in
icebp
hlt
int
ss
lds
or
sbb
repz
inc
and
pop
(bad)
inc
fwait
sahf
mov
or
or
movs
jl
pop
push
xchg
hlt
xor
cwde
inc
(bad)
pop
push
inc
cmp
push
mov
ins
dec
mov
mov
je
and
mov
xor
js
cmp
push
and
mov
mov
sub
jnp
push
inc
sbb
mov
fcmovb
repnz
aas
ins
xor
pop
loop
mov
jno
lds
cdq
xchg
jmp
mov
pop
popf
imul
and
xor
das
(bad)
jb
cmp
ficom
cld
xchg
jno
adc
leave
or
jbe
pop
mov
xchg
stos
xor
sti
retf
lods
jmp
or
test
dec
les
pop
in
jmp
xor
add
in
(bad)
stc
mov
jmp
stos
jp
mov
add
mov
jg
nop
jns
cld
sub
sbb
mov
xor
jg
inc
jnp
dec
loopne
stc
les
mov
jnp
jns
mov
dec
add
pop
and
(bad)
in
pop
and
adc
fdivr
jl
pop
dec
sar
add
lock
(bad)
fnstcw
mov
sub
out
lock
test
je
aad
loopne
push
jns
mov
xchg
sbb
test
pop
clc
add
push
movs
outs
pop
mov
mov
xchg
push
pop
mov
daa
outs
push
mov
cmps
push
lods
fidivr
cmps
cwde
cmps
aam
dec
mov
popa
les
inc
cwde
arpl
aad
outs
xchg
push
push
fst
out
js
add
scas
push
xor
inc
in
xchg
xor
lods
xchg
aad
and
ins
cdq
inc
test
test
retf
and
sub
jg
jb
fnstenv
arpl
inc
loop
les
jmp
or
sbb
mov
call
pushf
sub
test
test
add
pand
xchg
pop
sub
cmp
jge
push
sub
mov
push
mov
add
test
xchg
inc
dec
mov
pushf
cmps
xchg
sub
cwde
push
mov
mov
ins
dec
out
xor
push
adc
mov
clc
mov
addr16
data16
xlat
and
fbstp
xlat
dec
sub
aaa
fs
push
mov
cdq
cld
imul
mov
xchg
sbb
jmp
jb
xchg
mov
out
sub
add
mov
dec
dec
fistp
jp
(bad)
mov
and
aad
dec
sub
mov
cmps
mov
sbb
sahf
imul
cmps
popf
push
xlat
(bad)
jl
in
or
xchg
xor
mov
fcom
mov
mov
das
in
jp
repz
mov
(bad)
cs
loope
jmp
push
into
add
loope
lahf
adc
inc
and
aas
aas
push
mov
push
pop
inc
test
mov
push
bswap
mov
std
mov
push
mov
or
jns
mov
or
sub
cmp
cmps
xor
std
cmp
clc
adc
fidiv
test
or
mov
sbb
inc
mov
data16
xor
cmp
mov
ins
add
jl
mov
add
ins
call
pop
(bad)
lods
retf
sub
xlat
outs
jle
cli
and
xchg
arpl
fcomp
sbb
in
call
inc
jle
mov
xchg
jge
out
add
add
jae
out
test
inc
sbb
out
and
mov
mov
je
push
ins
pusha
jb
sbb
jle
icebp
mov
je
sbb
add
mov
mov
sbb
movs
mov
cmp
shl
in
das
mov
xchg
xlat
inc
xchg
push
mov
and
in
pop
es
pop
sbb
sbb
push
adc
stos
dec
icebp
sbb
jecxz
ss
xchg
fwait
jns
xor
mov
adc
icebp
retf
push
cmps
sub
ds
inc
add
sbb
pop
sub
jle
push
js
dec
mov
ficomp
lahf
push
mov
xchg
imul
cli
inc
int
dec
sub
mov
cmps
movs
(bad)
fsubr
adc
xchg
dec
gs
shl
add
lds
(bad)
sar
inc
lahf
fcmove
cld
retf
(bad)
jp
aam
mov
jne
ret
pusha
jo
push
call
jl
mov
jne
fdivrp
mov
enter
hlt
add
sub
jae
inc
(bad)
retf
sbb
je
inc
xchg
push
sbb
cdq
adc
jae
jae
pop
(bad)
dec
jecxz
jne
push
sar
jno
dec
sub
dec
(bad)
or
cmp
movs
mov
jne
adc
inc
sbb
push
adc
das
inc
xor
cmps
inc
push
movs
and
xor
mov
push
ins
sbb
mov
aad
jecxz
addr16
cwde
dec
movs
sahf
and
pop
mov
lea
jns
ficomp
cmp
push
les
fdivr
cmp
or
xchg
mov
xor
stc
xor
pushf
sbb
cwde
icebp
es
fcom
jo
ins
fld
xchg
or
sub
push
mov
mov
call
pop
adc
add
sub
inc
mov
cmp
mov
sbb
rcr
lds
mov
fadd
push
jmp
jmp
in
or
and
call
adc
leave
lods
and
cmp
cld
mov
adc
jno
dec
adc
bound
add
shl
ins
pusha
mov
pop
xor
xor
xlat
mov
mov
repnz
cmp
cdq
hlt
pmaxub
scas
nop
pop
mov
es
xor
add
xchg
adc
idiv
mov
xchg
jmp
xor
fnstsw
sti
test
push
enter
dec
dec
ja
ja
add
lods
sbb
loope
ret
sub
and
xchg
dec
pop
jnp
lods
sub
push
int
cmp
cwde
sbb
daa
fcmovnb
iret
out
adc
xor
xor
jmp
xchg
ds
int3
popa
clc
fcmovne
je
test
inc
mov
cmc
sbb
stos
cmc
sub
jmp
dec
or
inc
lods
popf
push
jne
(bad)
push
dec
lea
loopne
mov
ret
ja
sbb
je
les
push
jge
xchg
jecxz
hlt
test
mov
sahf
adc
adc
add
fcomi
pop
dec
test
push
xor
imul
popa
mov
jg
xchg
mov
shl
mov
(bad)
push
pop
enter
add
imul
ror
inc
cmp
lods
rol
inc
mov
es
xchg
mov
dec
sub
xor
fs
outs
femms
aad
aas
xchg
inc
loopne
mov
js
mov
scas
imul
or
sbb
cmp
add
push
xor
stc
mul
dec
dec
adc
push
cmp
push
ja
add
(bad)
push
mov
clc
jle
jne
mov
xor
out
in
inc
mov
pop
push
cli
(bad)
cwde
fld
aam
mov
ret
push
les
aas
pop
pusha
dec
mov
mov
sub
mov
shl
xchg
push
sbb
fmul
hlt
jo
ins
mov
mov
pusha
and
movs
or
(bad)
sbb
mov
gs
(bad)
mov
retf
or
xchg
shl
fcom
adc
xchg
js
mov
mov
inc
mov
cmps
xor
out
test
mov
push
add
push
fldenv
adc
stos
sub
dec
xor
mov
mov
js
scas
cld
pop
fadd
ret
(bad)
in
xlat
(bad)
out
inc
and
rcl
mov
rep
aad
fsub
push
push
dec
xor
mov
sbb
mov
xor
or
outs
aas
mov
xchg
call
xor
cmp
call
or
aas
cdq
add
iret
and
loopne
sub
adc
sub
enter
(bad)
fadd
push
les
jns
enter
dec
dec
push
xor
scas
mov
mov
lods
pop
dec
mov
jp
jbe
sub
addr16
ja
enter
cmp
sub
(bad)
sbb
xor
cs
xchg
jne
aad
les
vcvttsd2si
fs
cmp
daa
(bad)
out
jg
xchg
dec
push
retf
inc
push
dec
pop
xor
inc
(bad)
jae
test
psubsw
xor
mov
add
pop
dec
fs
add
inc
push
lods
xor
ror
sbb
jp
daa
outs
mov
and
jnp
aaa
(bad)
stc
mov
ret
iret
dec
jne
or
xchg
shl
cmp
ret
dec
(bad)
or
ficom
outs
call
les
iret
retf
pop
jnp
rcl
inc
pusha
sub
(bad)
dec
fs
cld
mov
in
mov
ret
lea
lods
pop
pusha
test
pop
xor
add
out
sbb
imul
sbb
jno
ret
mov
ds
inc
mov
add
mov
sub
pusha
xchg
mov
and
add
pop
and
inc
loopne
pop
dec
inc
std
mov
test
sub
inc
push
int3
retf
imul
mov
(bad)
pop
or
inc
dec
dec
cmp
sti
push
or
inc
daa
pop
neg
stos
adc
adc
in
mov
mov
push
cmp
add
lods
call
push
cwde
movs
lahf
or
call
add
or
ds
daa
bound
hlt
xor
push
cmps
test
jbe
mov
sbb
or
sub
mov
jmp
(bad)
mov
movs
mov
mov
adc
and
clc
push
xchg
repz
fmul
out
clc
xchg
push
pusha
jnp
mov
push
push
mov
jbe
cdq
ds
sub
adc
ret
jmp
sub
pop
pop
sbb
enter
cmc
addr16
out
cld
outs
push
test
mov
push
adc
ds
push
xor
lahf
xchg
xchg
(bad)
scas
ret
and
mov
mov
test
imul
clc
enter
in
sbb
ret
pushf
(bad)
and
ins
pusha
retf
jmp
ret
jne
ins
adc
repnz
sbb
ins
arpl
in
push
call
daa
outs
pop
dec
fs
mov
push
xchg
data16
out
mov
or
das
xchg
hlt
sub
xor
mov
xchg
arpl
sti
popf
shl
outs
sbb
sub
inc
repnz
rcl
arpl
je
jl
push
mov
push
cs
shr
je
aaa
pop
leave
fsubrp
out
lock
leave
push
dec
and
cmc
inc
ss
mov
jo
shl
mov
xchg
cmp
dec
sbb
mov
xchg
or
cli
(bad)
sahf
jg
nop
addr16
rol
nop
pop
test
in
(bad)
(bad)
jg
(bad)
and
dec
shl
scas
and
add
jb
dec
sub
push
repz
sub
cmp
mov
xchg
lahf
lock
sbb
jbe
fnstsw
psubd
call
out
repz
ins
mov
es
dec
and
adc
cwde
bnd
pop
arpl
xor
mov
movs
push
and
sub
out
in
cmp
iret
sbb
mov
jno
mov
int
sub
cwde
mov
dec
sub
cdq
xchg
dec
dec
mov
call
clc
xchg
ins
and
sub
mov
cmp
(bad)
jmp
lds
retf
jmp
sbb
scas
mov
out
or
je
cmc
imul
data16
inc
push
xor
or
xlat
call
add
dec
xor
outs
xchg
jmp
fbstp
in
push
imul
add
jl
adc
push
dec
loope
ja
out
fadd
sahf
xor
outs
inc
cmp
xchg
inc
mov
mov
and
fwait
dec
sahf
mul
js
adc
sub
sbb
xchg
jge
test
pop
je
push
out
xchg
xchg
mov
fisub
cmps
xchg
xchg
jbe
or
sbb
and
cdq
mov
iret
sar
pop
add
xor
jecxz
aam
fsub
adc
dec
in
fadd
and
dec
stc
push
dec
mov
retf
mov
int3
xchg
(bad)
sbb
inc
je
jmp
mov
jp
and
push
call
add
loop
je
outs
mov
cwde
popa
out
or
cmp
dec
retf
mov
push
test
loope
cmp
mov
mov
jns
jmp
jmp
cmp
sbb
ins
jle
(bad)
fs
movs
idiv
adc
xchg
mov
sbb
sub
push
mov
bound
call
inc
scas
push
jns
mov
stos
in
mov
jmp
pop
adc
call
neg
pop
adc
out
out
xor
push
js
in
neg
ret
xchg
inc
mov
sbb
push
inc
test
cmp
push
ret
ror
jl
xor
dec
adc
daa
js
outs
(bad)
sub
int3
movs
sub
fs
ficomp
push
jae
sbb
imul
scas
fcmovbe
fidiv
stos
fdivr
(bad)
cmps
lds
int
ror
sbb
mov
jne
int
pop
into
pop
and
xchg
fmul
mov
sub
pushw
cmp
call
push
cli
(bad)
ret
pushf
sti
out
push
sub
push
cmp
scas
mov
mov
ins
fidiv
mov
popa
push
retf
or
test
add
fwait
push
dec
stc
xor
repz
or
push
dec
inc
adc
loope
jo
or
scas
pop
inc
(bad)
add
mov
mov
sbb
jne
or
mov
sub
push
in
lock
dec
sub
sbb
(bad)
outs
mov
jb
repz
push
push
add
pop
pop
in
inc
jge
adc
pop
or
mov
pop
mov
cwde
jnp
je
sahf
xchg
pusha
push
mov
retf
xlat
mov
retf
enter
test
cmp
clc
loop
int
movs
and
cs
(bad)
sub
jns
xor
daa
or
xchg
mov
shr
xchg
mov
fiadd
dec
pushf
out
xchg
movs
pop
pop
fs
gs
shl
pusha
cmp
retf
add
test
adc
and
rcr
xor
ss
shl
xor
inc
test
fwait
xor
aas
cmps
aas
into
sar
mov
movs
into
sahf
pop
out
mov
fadd
loope
jbe
in
pushf
pminub
xchg
cld
fisttp
(bad)
popa
and
iret
into
test
adc
call
jae
xchg
add
push
push
scas
or
lods
dec
ret
xchg
test
stos
pop
dec
dec
loop
adc
xor
loop
adc
pop
jl
add
push
cmp
pop
xor
aas
pop
pop
pop
stos
dec
shl
out
jp
mov
je
scas
or
push
vxorps
arpl
(bad)
pop
xchg
mov
mov
cli
loope
and
dec
lahf
push
cmp
test
mov
ret
and
inc
test
stos
jne
xor
push
pop
popa
icebp
inc
jp
jp
cmps
scas
xchg
test
mov
(bad)
imul
pop
dec
test
add
sbb
pop
push
pop
dec
(bad)
mov
push
add
fcmovu
cmps
jb
add
ins
(bad)
push
inc
jle
cld
sbb
aam
push
ror
fwait
jmp
cli
fidivr
sbb
fnstsw
movs
mov
lahf
fisub
lea
mov
add
mov
xor
and
mov
pop
cdq
retf
daa
vpmuludq
imul
out
adc
sbb
mov
and
fsubr
test
xchg
dec
cmp
mov
les
push
push
pop
adc
loope
mov
ret
add
inc
mov
add
loopne
je
inc
push
mov
mov
test
push
push
(bad)
jnp
cmp
pop
pcmpeqd
sbb
stc
int3
dec
inc
adc
ret
push
and
jns
xor
push
call
popf
sbb
mul
jo
cdq
ret
jb
xchg
mov
cmps
jg
ins
ret
mov
push
jmp
cmp
push
pushaw
mov
(bad)
fcmovbe
in
fsubr
xchg
shr
or
fisttp
adc
sub
jmp
inc
ss
dec
jne
or
jnp
call
push
mov
or
mov
xchg
sbb
or
adc
and
iret
pop
adc
jno
mov
(bad)
pop
cmps
pop
xchg
ins
mov
jb
sbb
pop
xlat
jne
mov
repnz
mov
and
sub
pop
dec
xor
xor
fst
repz
mov
pop
mov
mov
cs
retw
xchg
enter
mov
dec
add
xchg
xchg
lods
pop
mov
mov
sbb
cmps
jb
and
xchg
pop
cmp
cmps
adc
sub
push
dec
ins
mov
lds
add
mov
adc
or
xchg
call
loop
mov
inc
xchg
cmps
popa
mov
jnp
call
jecxz
in
or
sbb
xchg
mov
popa
dec
dec
rcr
or
cmp
imul
or
pop
fld
bnd
xchg
mov
repnz
std
ret
cdq
push
lock
push
xor
cmp
jp
inc
sbb
repz
sar
inc
stos
cld
addr16
inc
jl
jmp
jmp
stos
repz
call
addr16
std
int
rcl
movs
sti
mov
jmp
cld
add
mov
fs
(bad)
sti
mov
add
loop
aam
adc
inc
popf
inc
mov
mov
jle
jge
mov
scas
and
idiv
repz
mov
jae
mov
mov
pushf
ja
xchg
mov
jo
mov
push
dec
fnstcw
in
sbb
xor
ss
pop
(bad)
push
(bad)
pop
ret
js
fwait
adc
pop
ret
add
pop
xchg
xor
and
add
inc
jae
in
(bad)
pop
mov
icebp
push
sub
rcl
das
mov
inc
retf
mov
jl
dec
xor
imul
xor
pop
dec
xchg
xor
pop
outs
test
add
mov
leave
test
out
nop
mov
mov
fcmove
scas
adc
xchg
dec
das
adc
sub
mov
imul
cmps
cmp
je
jge
push
push
and
stc
sub
test
cmp
pop
sub
add
inc
sub
retf
or
xchg
mov
mov
ins
in
cmp
shr
ror
jp
jno
ins
pusha
test
pop
mov
jnp
loope
mov
clc
out
loope
add
sti
push
ficomp
and
jnp
ficomp
xchg
int3
xor
(bad)
aaa
pop
mov
test
pop
sbb
loopne
sub
imul
push
jp
xchg
jecxz
int
gs
sub
cwde
and
push
aaa
jl
dec
mov
mov
push
push
loope
aas
sub
stos
outs
add
jae
push
gs
cdq
test
hlt
in
or
dec
lds
adc
hlt
lahf
jl
xor
cdq
lods
xchg
cdq
aam
enter
mov
inc
dec
pop
in
cdq
xchg
pop
mov
repnz
addr16
add
inc
pop
push
aaa
and
call
sbb
je
(bad)
icebp
cli
icebp
test
or
repnz
jne
out
aas
mov
int3
(bad)
mov
mov
ror
inc
mov
gs
addr16
clc
or
jae
pop
(bad)
inc
jle
xchg
pop
lods
fisub
(bad)
aad
call
ins
movntq
nop
scas
jecxz
scas
push
pop
mov
push
stos
push
inc
inc
stc
iret
clc
jae
imul
fadd
push
cmp
mov
inc
or
dec
adc
lahf
(bad)
and
aas
ficomp
mov
fwait
imul
jne
fs
xlat
push
es
mov
fist
xor
jmp
mov
mov
xor
pop
cmps
aad
jle
loop
inc
popa
jmp
adc
clc
mov
ret
out
xchg
out
mov
lock
ficom
mov
(bad)
cli
mov
aad
dec
mov
jl
ins
adc
cmp
and
mov
mov
daa
shr
jg
sbb
pop
inc
mov
inc
movs
outs
arpl
iret
inc
sbb
mov
rol
jle
rcl
mov
or
int
hlt
pop
adc
hlt
mov
(bad)
mov
adc
jp
call
jmp
dec
sar
shr
(bad)
ja
inc
out
dec
pop
pop
mov
mov
int
and
enter
test
add
jo
sbb
xchg
scas
mov
xchg
mov
add
fld
jnp
xchg
cwde
mov
inc
aam
adc
popf
cdq
sub
mov
loop
add
leave
xor
adc
mov
lods
cs
in
shl
cmp
inc
dec
or
xlat
mov
jl
fld
sbb
push
jge
mov
inc
je
pop
xlat
sbb
sbb
jmp
test
push
and
xchg
shl
int3
aam
mov
pusha
push
jae
or
into
pop
sub
stos
xlat
repz
sbb
nop
cmp
push
add
lods
mov
jo
pushf
outs
test
jo
pop
mov
scas
movs
imul
cld
popf
ds
in
ret
jns
rol
pop
outs
out
cld
jbe
add
dec
mov
or
aam
mov
bound
loope
repnz
pop
ins
or
push
repz
mov
repnz
add
nop
not
mov
xchg
push
dec
mov
(bad)
pop
cmc
jbe
idiv
push
dec
push
sbb
dec
hlt
aas
cmps
lock
pusha
inc
jbe
fldenv
lods
cmps
mov
fmul
rol
out
in
mov
bound
movs
mov
cmp
sti
shl
popa
addr16
xor
jle
out
jo
pop
cdq
xchg
jle
push
cmp
sbb
xchg
xor
or
pop
and
pop
sti
dec
in
jp
push
lock
lods
or
dec
push
out
inc
loope
arpl
mov
push
rcl
pop
out
xchg
xchg
test
pop
cmp
mov
jmp
xlat
mov
outs
(bad)
fdiv
or
xor
push
mov
mov
and
pushf
div
(bad)
xchg
(bad)
push
jo
bound
aad
mov
sub
icebp
clc
imul
or
jnp
sar
pop
retf
adc
pop
pop
jecxz
test
pop
fs
lock
adc
xchg
mov
and
out
cmp
sbb
or
mov
out
dec
dec
dec
pop
inc
outs
imul
mov
sub
sbb
push
mov
lea
sbb
mov
cmp
fwait
mov
rcr
push
add
adc
cs
pop
adc
imul
xchg
(bad)
scas
outs
je
(bad)
in
sub
pop
ins
inc
inc
lods
pushf
les
push
(bad)
js
ret
jbe
push
sbb
jmp
test
leave
mov
cdq
loope
into
push
test
cdq
les
pop
mov
dec
and
dec
fstp
pop
sub
or
sbb
push
add
les
frstor
ficomp
shl
adc
pop
ficom
sub
mov
popa
mov
in
int
cmp
(bad)
adc
adc
adc
sbb
fmul
sar
lods
in
in
push
pop
aas
imul
out
ror
and
pop
adc
sbb
cmp
test
sbb
or
mov
leave
shr
pop
or
mov
pop
lods
xchg
dec
dec
sub
icebp
dec
mov
inc
dec
push
outs
(bad)
and
cmps
mov
fadd
adc
int3
jl
mov
gs
lahf
xchg
dec
adc
dec
mov
mov
xor
out
inc
xchg
xchg
adc
push
inc
jae
adc
push
jae
test
push
fld
pop
add
mov
or
jle
ds
test
outs
sti
xor
rcl
push
sbb
daa
adc
clc
push
pop
sbb
add
sbb
pop
cmps
dec
fild
xor
mov
pop
iret
cmp
cwde
into
xchg
mov
jg
pop
stos
daa
stos
std
les
repz
retf
mov
inc
lds
mov
imul
int3
push
adc
pop
jno
push
pop
idiv
fwait
push
push
dec
cmc
xchg
pop
(bad)
adc
das
outs
(bad)
out
inc
dec
pusha
fucomp
and
inc
fdivr
lahf
fadd
push
mov
pop
jmp
fucom
clc
mov
and
loop
mov
xor
inc
jmp
mov
stc
and
aad
xor
pusha
mov
or
call
data16
cmps
add
jns
or
nop
mov
add
(bad)
dec
(bad)
xchg
sbb
outs
dec
push
mov
add
fsubr
xchg
cmps
jg
outs
mov
in
jmp
pop
or
popa
outs
pusha
aad
mov
scas
xchg
inc
mov
iret
xchg
sbb
fdivp
into
mov
imul
fild
pop
pushf
iret
fdiv
or
cmp
enter
jp
loop
sbb
cmps
aas
inc
imul
xchg
push
mov
push
pop
out
ins
dec
sub
iret
xlat
sbb
inc
xor
sub
inc
rcl
lock
lea
jbe
gs
jno
mov
inc
mov
mov
popa
cmp
ret
scas
out
ja
dec
arpl
cld
popf
sub
int
mov
repnz
cmp
sbb
lock
imul
dec
int3
xchg
sub
push
hlt
and
mov
or
mov
cmp
sub
push
das
xchg
add
jmp
rcl
mov
mov
mov
pusha
mov
fild
repnz
jno
and
push
popf
in
push
inc
lods
sub
cmc
mov
pop
push
(bad)
mov
pop
cmp
push
mov
adc
jns
inc
cmp
inc
mov
xor
test
jl
in
mov
jmp
mov
push
lods
call
jecxz
(bad)
inc
dec
es
sub
cmc
xchg
scas
cmc
aas
(bad)
ins
xor
mov
dec
jecxz
or
inc
add
pop
add
xchg
xor
mov
ror
pop
cmp
outs
(bad)
dec
pop
inc
pop
in
out
repz
fidiv
jno
push
(bad)
out
xor
add
jnp
and
xor
test
call
cmp
scas
mov
not
push
inc
mov
call
outs
ret
fld
xchg
mov
jl
in
ret
aaa
jg
loopne
test
inc
in
out
dec
int
xor
ins
(bad)
aam
sar
push
lahf
cmp
lds
hlt
inc
sbb
add
out
pop
aas
fsubp
push
mov
inc
test
ret
aad
xchg
cdq
sbb
dec
dec
nop
enter
push
sbb
iret
je
cmps
fsub
add
add
lea
push
lds
lds
(bad)
or
mov
jns
aad
cli
sub
cmp
inc
mov
dec
cmp
add
jns
pop
sub
lds
into
inc
js
scas
mov
out
push
mov
mov
movs
xor
cmp
stos
icebp
xchg
stc
sub
cwde
inc
sub
jnp
sti
dec
sbb
inc
jae
push
jp
push
sar
ret
mov
fisttp
or
jae
dec
rcl
int3
loop
cli
js
inc
sar
xchg
and
lahf
in
push
jg
xchg
dec
push
mov
icebp
in
aad
or
xchg
xor
add
das
movs
int
xor
cwde
adc
loop
xor
jle
sub
pop
mov
stos
bound
xor
bnd
or
std
sub
ins
add
lock
pop
cld
mov
fld
stc
jno
fild
ret
adc
add
sub
jbe
or
push
dec
mov
jo
mov
pop
adc
xor
and
fimul
mov
mov
sbb
sahf
je
pop
sub
pop
dec
call
push
popf
jl
popa
dec
push
ins
stos
sbb
into
fadd
sbb
nop
or
mov
cdq
shl
jecxz
jge
add
les
or
(bad)
out
call
xchg
inc
mov
push
mov
jae
fisubr
mov
pop
fnstcw
aad
clc
fisttp
nop
out
sub
adc
je
jb
ffree
add
aas
sbb
in
outs
fiadd
icebp
dec
push
push
fcom
retf
jmp
lahf
xchg
mov
cmp
imul
leave
sar
jno
add
and
xlat
in
jo
fdivr
call
retf
sbb
movs
xor
jle
add
push
call
cmp
ror
aam
push
xor
add
xchg
inc
mov
pop
outs
aam
js
jno
outs
push
jb
jle
add
cmp
xor
nop
daa
aad
and
push
out
ins
retf
nop
sub
pop
push
stc
push
inc
adc
fild
test
scas
ffree
sbb
sbb
pop
inc
scas
(bad)
fsubr
lahf
std
jle
or
xor
and
cmp
mov
sbb
in
js
sub
pushf
cli
imul
pusha
(bad)
adc
lds
and
mov
pop
push
aad
mov
or
daa
cmp
mov
imul
test
ins
scas
dec
lea
add
es
aad
xchg
inc
and
popfw
out
cmps
sub
mov
inc
(bad)
loope
jb
mov
icebp
sub
not
push
pop
sub
xchg
jno
retf
fild
fidivr
pop
test
mov
and
sub
pop
xchg
inc
inc
leave
cdq
jge
sti
out
aam
push
sub
and
stc
xchg
add
and
arpl
mov
push
nop
sti
mov
call
loope
dec
shl
int
jle
jmp
and
rcr
cmc
shr
adc
sahf
stos
cmp
rol
inc
add
shl
test
or
stos
push
lahf
mov
ins
loopne
ror
mov
jae
push
adc
loopne
stc
(bad)
mov
add
mov
jnp
lods
outs
hlt
aas
mov
push
out
rcr
mov
loop
push
sub
mov
adc
pop
fstp
pop
mov
xor
push
mov
popa
inc
movs
shr
shl
cmp
clc
xchg
outs
rcr
out
xor
cmp
stos
cmp
fcomp
cmp
sbb
retf
jg
std
xchg
dec
mov
cmp
bound
sub
inc
test
cld
and
push
lods
ins
and
(bad)
sub
mov
(bad)
and
pushf
test
imul
mov
cmp
imul
add
lods
pop
cmp
mov
adc
push
scas
ins
leave
jmp
(bad)
out
mov
loope
out
std
popf
outs
add
fimul
mov
popf
and
and
movs
sti
xor
jns
sahf
xchg
mov
inc
xor
mov
adc
shr
mov
or
push
stc
idiv
fdivr
mov
fnstcw
pop
(bad)
lds
repz
pop
adc
mov
es
aaa
cli
test
mov
(bad)
mov
mov
mov
dec
test
add
out
int3
sub
and
adc
or
in
dec
push
cmps
mov
jle
call
call
fidivr
(bad)
and
pop
mov
sbb
inc
test
enter
xor
dec
xor
adc
pop
cmps
pop
repnz
es
inc
jl
push
mov
jge
mov
mov
mov
sub
cmc
sub
lock
(bad)
stc
out
jmp
into
and
inc
push
jp
and
adc
xchg
pop
mov
push
test
test
xchg
push
xor
push
fs
fucomp
jne
inc
jl
in
cmp
mov
push
leave
add
pop
jge
adc
cs
aad
(bad)
sahf
xchg
into
pop
add
fsubr
cli
pop
dec
loopne
test
in
pop
les
jno
mov
ss
mov
cmp
iret
fs
push
jmp
or
test
aad
cmps
ja
out
repnz
dec
out
inc
mov
xor
mov
sbb
xchg
cdq
in
or
xchg
in
fnstenv
repnz
iret
clc
sbb
(bad)
loop
inc
ret
pop
mov
xlat
xchg
xchg
push
test
std
cs
sub
retf
or
jae
jp
sbb
jge
push
test
and
cmp
mov
das
mov
repnz
fist
cmp
fdiv
ja
ret
and
cdq
movs
cmps
jo
rep
sti
push
sub
xchg
rcl
fdiv
fnstenv
ja
mov
adc
mov
mov
test
and
fs
out
outs
(bad)
pop
xchg
mul
mov
mov
mov
dec
out
rcr
ret
mov
cmp
pop
pop
adc
sub
pop
repz
sbb
add
aaa
outs
out
aaa
jae
rcr
adc
je
xchg
inc
ret
mov
jae
leave
and
iret
pop
jge
jb
inc
daa
fyl2x
push
push
inc
test
jne
dec
movs
ins
pop
inc
test
imul
hlt
shr
lock
push
or
cmp
cmp
icebp
and
call
mov
sti
fnstenv
xor
xor
retf
mov
dec
adc
ficom
(bad)
popa
push
inc
sbb
or
(bad)
mov
sahf
or
jnp
test
std
add
jns
test
xchg
movs
out
fcomp
and
mov
fyl2xp1
pop
lock
lods
pop
push
pusha
idiv
mov
mov
fdecstp
fistp
and
sbb
sub
cmp
push
lahf
and
or
adc
iret
cmp
scas
pop
sub
int
loopne
push
adc
ja
sub
int3
add
and
jnp
iret
xor
scas
inc
in
rcl
es
pop
pop
repnz
jg
scas
cmps
inc
dec
inc
xchg
jle
test
pop
jl
fsub
outs
xor
sub
lahf
or
leave
bound
jno
jno
loopne
add
mov
ins
in
xor
or
mov
or
mov
sbb
mov
pushf
enter
mov
and
es
cld
adc
dec
pop
aas
pop
push
xchg
sar
xchg
daa
adc
dec
and
push
mov
daa
adc
adc
popf
fidiv
int3
adc
pop
es
nop
or
mov
das
xor
leave
out
fild
dec
mov
push
stos
jo
mov
xchg
in
jo
mov
hlt
ret
ror
sbb
inc
dec
push
push
add
sbb
in
popf
adc
bound
mov
inc
mov
jne
mov
cmps
ins
mov
out
jnp
dec
das
dec
test
add
mov
movs
pushf
out
xor
data16
shl
mov
imul
adc
sub
pop
aam
not
pop
mov
ret
mov
adc
es
push
and
dec
mov
mov
or
cs
mov
xchg
(bad)
outs
hlt
pop
das
add
stos
dec
push
int
sub
sbb
dec
pcmpeqd
gs
inc
sbb
or
mov
xchg
nop
add
inc
neg
ss
mov
stc
mov
jge
mov
or
ins
pop
test
fwait
mov
icebp
pop
icebp
arpl
push
mov
ins
data16
jl
dec
sti
and
int
xchg
inc
call
lds
mov
inc
scas
adc
lock
cdq
add
jg
into
inc
and
mov
or
xlat
ins
push
stos
pop
popf
popf
or
arpl
jecxz
stc
mov
or
and
jns
mov
or
xchg
jg
or
out
inc
int3
shl
test
dec
sar
clc
push
mov
jp
adc
or
rcl
mov
stos
imul
push
sahf
lock
(bad)
scas
mov
sub
pop
xchg
mov
dec
call
add
adc
das
inc
mov
js
pushf
enter
imul
jb
lods
sti
loope
inc
adc
or
outs
or
(bad)
(bad)
xor
dec
ret
push
iret
cmp
(bad)
dec
es
dec
rcr
cmp
push
fisub
jnp
pop
add
cmp
dec
sbb
mov
test
mov
sub
in
fs
dec
or
adc
imul
xor
test
inc
mov
popa
push
sbb
fwait
js
stc
jmp
das
mov
sar
repz
lds
(bad)
ja
xor
neg
cmp
add
mov
(bad)
std
inc
push
pop
xor
or
in
ret
jnp
mov
sub
pop
xchg
cmps
push
iret
adc
out
int3
fs
jmp
rcl
rcr
fstp
xchg
and
push
dec
mov
lods
sbb
loopne
mov
jl
retf
jb
(bad)
pop
mov
daa
dec
add
iret
inc
mov
aam
push
push
jno
mov
mov
sbb
add
addr16
(bad)
nop
inc
xor
cmp
ds
pop
xchg
mov
sub
frstor
cwde
mov
in
jmp
sbb
aaa
addr16
into
mov
inc
(bad)
push
xchg
mov
or
pop
aaa
mov
dec
loop
dec
push
ja
mov
loope
outs
jb
lea
cwde
fist
xchg
mov
aaa
div
add
lods
out
or
test
scas
pusha
dec
push
sub
popf
cmp
fdivr
daa
je
sbb
mov
fdivr
xchg
lods
jno
data16
cmp
sti
inc
xor
lock
mov
push
fwait
retf
mov
int
adc
fwait
(bad)
sbb
cmc
movs
pop
or
call
cmc
push
push
into
ja
push
pop
or
cmp
sbb
mov
push
scas
es
mov
xchg
mov
inc
xor
sahf
jp
retf
and
mov
fmul
mov
and
mov
fild
js
scas
call
mov
or
adc
not
outs
sti
push
mov
sub
(bad)
popf
xchg
adc
addr16
dec
mov
punpckhdq
(bad)
clc
aaa
cmps
movs
sar
xor
repz
std
jl
inc
fs
and
lods
mov
jb
xchg
(bad)
out
lods
ret
cdq
outs
retf
scas
dec
jmp
or
sbb
xchg
fwait
rol
sub
sub
mov
lock
push
adc
out
loop
nop
adc
scas
inc
and
les
scas
jge
mov
fisub
sbb
sub
call
pop
push
push
repnz
ins
mov
xchg
pushf
(bad)
adc
pop
sahf
push
std
cmp
pop
addr16
xor
inc
sub
jnp
shl
cmp
dec
inc
lods
pop
movs
lahf
cmp
mov
ret
sti
xor
aaa
sub
and
sbb
retf
inc
(bad)
(bad)
ficom
(bad)
push
ja
inc
outs
mov
rol
imul
sub
pop
aaa
mov
out
movs
and
cmps
jge
sti
xchg
pop
inc
sub
mov
add
push
and
sar
test
and
mov
frstor
cld
fnstenv
leave
icebp
xor
mul
fs
jge
and
ja
or
(bad)
mov
movs
test
sar
jp
add
push
ja
pop
mov
fdiv
push
cwde
adc
retf
adc
popa
jp
sub
push
sbb
inc
xor
stos
jno
pop
jg
cmp
adc
or
pop
xchg
in
xchg
xchg
inc
int3
(bad)
leave
fsub
fcomp
cmp
sub
and
(bad)
xor
push
les
cmps
call
(bad)
mov
rcr
inc
jns
nop
sub
pop
arpl
fwait
jae
movs
lods
or
dec
xchg
push
pop
cmp
add
sbb
ja
add
mov
scas
sbb
out
mov
out
pop
in
push
xchg
add
mov
(bad)
ror
mov
dec
cmp
aaa
pop
adc
fmul
(bad)
xlat
fbstp
xchg
mov
xchg
xchg
dec
nop
push
add
dec
addr16
ret
mov
pop
out
xchg
movs
div
push
mov
xchg
mov
fcom
dec
sub
repz
call
jmp
pusha
mov
sub
inc
mov
xor
cmp
mov
push
xchg
inc
xor
add
mov
sahf
bound
xchg
minps
pop
clc
and
imul
push
push
sbb
enter
cdq
pushf
dec
or
adc
test
xchg
fild
inc
xchg
fldz
inc
xchg
dec
mov
cdq
dec
fwait
jl
mov
xor
push
fwait
sbb
inc
mov
xor
push
adc
cwde
xchg
out
xor
mov
jp
repz
mov
movs
in
jg
push
add
jmp
sub
jbe
outs
inc
inc
retf
xchg
adc
or
into
dec
mov
cmp
or
cs
sbb
jo
mov
sub
pop
pop
dec
ja
dec
add
aad
or
outs
xchg
pop
outs
xor
rcl
mov
mov
cld
sub
push
inc
jo
nop
or
xrelease
(bad)
test
inc
mov
icebp
jp
mov
and
or
jge
cmps
cmp
mov
xchg
xchg
push
out
rol
movs
ror
push
push
call
push
movs
jp
in
or
sahf
push
and
movs
popa
push
pop
icebp
push
jg
xchg
push
ret
and
enter
push
mov
mov
and
shl
add
ins
inc
pop
loope
inc
stos
mov
sbb
adc
xor
pop
enter
call
push
rcr
pop
stos
cdq
jecxz
in
mov
cmp
inc
inc
mov
xchg
js
(bad)
ror
pop
fmul
or
es
dec
push
sub
(bad)
outs
sub
js
cmp
js
cdq
mov
out
push
mov
addr16
dec
mov
pop
lahf
mov
cmp
and
int3
dec
push
bound
icebp
inc
sar
shl
jb
sbb
mov
dec
xchg
addr16
pop
push
outs
xchg
and
and
sahf
jmp
in
sbb
pop
or
fldpi
rcr
and
cmp
cdq
jl
pop
int
mov
adc
shl
jns
xor
idiv
or
repnz
sub
mov
jecxz
mov
call
out
and
cmp
dec
jge
mov
(bad)
sbb
ins
std
sar
cwde
xor
dec
call
cld
frstor
repnz
jp
sti
test
pop
pusha
mov
ins
(bad)
repz
xor
jp
mov
and
call
loopne
outs
fs
jno
and
mov
push
mov
add
mov
mov
mov
fld
or
clc
mov
test
daa
xchg
gs
adc
adc
cmc
enter
leave
call
gs
(bad)
les
mov
mov
cmp
xor
push
jb
mov
pop
in
mul
ss
jb
jge
cmp
addr16
push
in
adc
lea
scas
stos
frstor
arpl
fwait
jnp
cmps
mov
test
imul
xchg
cdq
push
push
out
push
or
lds
out
shr
cmp
push
mov
gs
aaa
cdq
adc
sub
sbb
mov
out
je
iret
js
lods
ins
lods
push
iret
fdiv
push
mov
ss
cmp
mov
les
mov
movs
jmp
icebp
mov
jo
sbb
dec
inc
xor
aam
cmp
mov
add
jle
data16
(bad)
out
bound
xor
test
add
mov
mov
cmc
outs
(bad)
jp
sub
add
call
(bad)
mov
jo
into
fidiv
push
mov
popf
addr16
test
or
pop
mov
ja
pop
ds
jmp
pop
push
popa
loope
and
mov
jl
out
je
inc
mov
push
and
add
pushf
jle
std
inc
rcl
xlat
xor
and
repz
test
push
das
test
stc
movs
sbb
xor
push
inc
call
cmc
mov
jnp
cmp
int
push
cdq
popf
and
push
push
test
inc
mov
imul
jecxz
xchg
or
lods
and
adc
pop
repnz
sbb
inc
lahf
add
into
push
lds
ins
jmp
sti
push
das
mov
and
out
fistp
in
mov
test
in
movs
mov
sub
stos
call
add
push
sti
mov
dec
inc
pop
inc
mov
pop
jp
jmp
in
leave
movs
dec
test
cwde
push
jmp
xor
mov
xchg
retf
loopne
jl
sub
retf
mov
xchg
pop
cmp
shr
(bad)
add
inc
xor
adc
fist
xchg
xor
outs
cmc
adc
dec
out
inc
sub
adc
das
mov
mov
xchg
out
cmp
ins
add
ja
in
lods
adc
out
punpckhbw
add
push
xchg
call
pop
and
sahf
stc
fs
sbb
(bad)
mov
pushf
sbb
mov
xchg
jp
es
out
in
inc
and
shl
es
les
(bad)
mov
push
dec
ficomp
sub
pop
mov
sahf
mov
inc
jg
mov
ret
jo
sbb
sbb
test
mov
mov
fsubrp
mov
loop
sar
int3
push
add
xor
sub
dec
sub
fcmove
xchg
int3
sub
addr16
not
fs
push
scas
cmps
fadd
jmp
mov
cmp
mov
cmp
mov
xchg
mov
and
and
aad
mov
jnp
mov
adc
leave
mov
sub
push
mov
call
adc
cwde
mov
lock
xchg
enter
gs
(bad)
sti
imul
aad
xor
adc
and
stc
xor
fs
dec
in
xchg
jg
or
inc
mov
ror
sub
cmp
dec
aad
jo
and
mov
add
xchg
inc
dec
fs
mov
add
js
into
iret
mov
add
adc
inc
xchg
enter
jmp
xor
xchg
cdq
stos
leave
mov
cmp
or
or
or
dec
stc
movs
pop
jno
rcl
daa
imul
imul
pop
ja
mov
aam
add
sbb
push
pop
xchg
add
push
es
push
pop
dec
call
(bad)
js
cmps
iret
mov
xchg
pop
dec
loope
mov
ror
test
add
lock
jl
cmp
and
in
sbb
cmp
movs
mov
adc
cmp
gs
pop
call
cmps
inc
xchg
cmp
je
mov
inc
sbb
popf
dec
adc
or
sahf
xor
inc
mov
nop
mov
push
jge
(bad)
push
push
leave
mov
sar
out
dec
inc
adc
test
and
adc
cmp
push
cli
lea
adc
enter
push
aaa
mov
scas
mov
jg
mov
outs
xchg
pushf
xor
mov
dec
mov
inc
jle
xchg
scas
mov
jle
imul
sub
(bad)
and
imul
mov
inc
das
out
mov
and
jns
pop
pop
mov
push
popf
jo
inc
add
lods
movs
cwde
popf
add
mov
adc
pop
in
lods
nop
xchg
xor
jno
popf
xchg
idiv
repnz
mov
and
pop
out
inc
adc
popf
xchg
rcl
or
xchg
mov
cs
xchg
adc
sbb
test
ds
mov
ja
movs
pop
push
or
ret
test
iret
adc
mov
scas
pop
push
sti
adc
pushf
les
shl
push
ins
pop
cwde
jmp
xlat
call
popf
push
ficom
pop
in
into
inc
adc
mov
enter
xchg
or
dec
mov
or
test
pop
shl
loop
cmp
aam
mov
(bad)
int
xor
mov
fstp
test
(bad)
xchg
movs
inc
stc
jne
jb
jg
fiadd
push
and
in
fs
(bad)
cli
dec
mov
mov
jle
mov
inc
pop
js
lds
xchg
push
pop
rcl
jmp
imul
mov
dec
and
imul
in
nop
dec
mov
mov
jmp
outs
pusha
jecxz
loope
out
sbb
imul
hlt
mov
jl
pop
fild
pop
xchg
inc
jge
stos
mov
int3
aam
dec
xchg
push
out
xor
lods
jns
pusha
push
mul
rcr
adc
out
pop
fs
lock
cmp
jno
sub
adc
mov
jbe
adc
pop
cmp
ss
cmc
nop
loop
mov
jbe
push
mov
xchg
or
xchg
xchg
xchg
push
cdq
xchg
fmul
movs
in
and
pop
mov
jl
int
adc
dec
mov
inc
rol
pop
add
das
loop
shl
jmp
add
xor
aaa
push
push
sub
cmp
cdq
icebp
scas
inc
mov
nop
iret
icebp
hlt
sbb
dec
dec
in
xchg
fcomp
out
cmp
je
out
mov
mov
jg
rep
dec
retf
imul
adc
iret
add
popf
adc
dec
call
cmp
repz
fsubr
push
in
out
add
push
cli
fs
icebp
push
fwait
mov
mov
mov
out
shl
sti
mov
push
shr
stos
out
dec
cmp
bound
js
push
out
jno
mov
clc
out
cmps
cmp
not
movs
sbb
jbe
xor
loope
cld
cwde
call
hlt
jb
dec
test
xchg
dec
xor
and
xchg
mov
in
adc
repnz
aad
jns
mov
inc
imul
add
movs
mov
imul
jge
imul
mov
or
mov
int
push
loopne
shr
pop
scas
adc
xchg
inc
shl
bound
or
fbstp
inc
mov
xchg
mov
pusha
sub
stc
repnz
pop
or
cmp
jmp
xchg
out
(bad)
out
leave
sbb
xlat
pop
pop
dec
and
ret
(bad)
xor
adc
mov
shl
cmp
jnp
pop
outs
iret
cmp
dec
jno
jmp
mov
cmp
aaa
(bad)
jmp
es
dec
cmp
retf
fs
push
sub
nop
hlt
jle
and
arpl
js
xor
jge
add
ins
jg
push
cwde
cdq
js
in
jge
(bad)
or
sub
cmp
loop
lds
fimul
xchg
dec
ds
inc
ja
rcl
adc
mov
jo
jno
sub
pop
in
sbb
ficomp
inc
out
retf
dec
and
adc
jmp
retf
loop
dec
pop
pusha
lock
mov
es
adc
lods
sbb
ins
fwait
jae
dec
gs
out
(bad)
enter
pushf
mov
ds
xchg
call
push
sub
retf
jmp
adc
cdq
das
mov
mov
pop
inc
pop
cmp
xor
(bad)
jmp
call
icebp
pop
push
cmps
jb
dec
sub
sbb
sbb
sub
pop
fwait
bound
data16
inc
pmullw
test
push
leave
aaa
mov
rcr
cmp
gs
pushf
rcr
mov
popf
in
inc
cmps
sar
and
xchg
test
cli
test
sbb
push
or
mov
push
lods
cmp
fsubr
and
jge
mov
jae
cmp
xor
(bad)
out
leave
leave
lods
push
aad
cli
and
rcl
movs
jnp
dec
xlat
mov
aad
jns
sbb
jg
push
mov
fld
fidiv
mov
nop
adc
test
sbb
movs
xchg
fstp
sub
iret
xchg
or
adc
loopne
hlt
stos
inc
in
icebp
xchg
cwde
femms
(bad)
movs
xchg
add
fistp
dec
stos
xchg
cmps
sti
js
jns
scas
or
aam
adc
idiv
lods
add
jo
out
xchg
shl
or
and
cld
fidivr
sbb
popa
sub
aaa
cmp
pop
cmp
sub
jmp
or
fcomp
push
jnp
cmps
or
xor
sub
aas
int
pop
ret
mov
mov
xor
mov
popf
jge
loop
inc
pop
xor
mov
test
cmp
inc
xchg
jg
adc
mov
xchg
sub
pop
sub
les
cs
iret
daa
(bad)
fmul
or
(bad)
jno
add
mov
xchg
(bad)
popf
ret
xchg
movs
push
pop
retf
and
xor
push
mov
mov
adc
sbb
cmp
pop
idiv
xchg
adc
cwde
mov
inc
mov
dec
es
sahf
pop
stc
push
shl
sbb
sbb
cmps
cmp
sub
out
mov
jle
pop
inc
sub
or
outs
xchg
std
jnp
stc
loopne
sub
add
adc
add
das
mov
jo
not
dec
dec
mov
mov
ds
nop
mov
mov
repnz
repnz
xor
mov
and
loope
into
jb
cmp
xchg
pop
out
jmp
push
add
(bad)
and
add
push
sbb
add
jae
add
fwait
call
sti
stos
inc
mov
ja
or
movs
rol
adc
mov
cld
mov
es
retf
cmp
out
dec
sahf
fstp
nop
inc
inc
xor
aas
sub
mov
or
test
lea
test
imul
aas
out
cmps
adc
imul
fild
scas
mov
retf
fidivr
addr16
push
cmp
adc
mov
sahf
sbb
adc
leave
xchg
mov
cmp
cmp
sbb
(bad)
sub
or
retf
lock
enter
lock
jl
dec
dec
jg
rcr
in
hlt
mov
mov
add
xor
std
arpl
mov
scas
ins
in
push
shl
dec
sbb
jns
mov
cmp
shr
mov
cmc
ins
retf
test
dec
pop
inc
mov
(bad)
std
xchg
call
xchg
sbb
dec
cs
xchg
test
cmp
add
movs
or
scas
ret
sahf
retf
outs
sti
xchg
(bad)
stos
mov
mov
pop
hlt
dec
ins
pop
or
xor
sbb
iret
adc
sbb
or
jp
ds
mov
ja
(bad)
pop
data16
aad
mov
std
popf
or
test
fwait
lea
mov
xchg
or
ins
stos
dec
mov
aaa
xchg
mov
dec
dec
pop
stc
jle
leave
in
xchg
sub
(bad)
aaa
retf
shl
push
in
xchg
pop
outs
pop
in
push
daa
fwait
retf
add
cmp
mov
fucomip
push
es
jg
xchg
mov
sbb
adc
out
push
sbb
pop
pushf
push
psubusw
loop
mov
out
xchg
or
xor
in
jnp
add
scas
aad
or
jmp
lds
scas
dec
outs
dec
mov
(bad)
cmp
cmps
dec
data16
push
push
dec
jecxz
lods
adc
add
pop
inc
jbe
xlat
or
(bad)
lock
data16
pop
(bad)
outs
jge
fisubr
loopne
cld
aam
mov
pop
sub
ficom
movs
sti
lods
sti
fadd
(bad)
stos
lods
push
adc
mov
(bad)
int
inc
mov
add
call
mov
movs
or
push
inc
cwde
cmps
dec
or
xor
add
aas
into
sub
(bad)
cli
cwde
arpl
hlt
push
lods
push
outs
xchg
fbld
repz
and
icebp
popf
sub
push
push
popa
stos
xchg
and
sahf
popa
iret
cmp
lds
ins
mov
lea
outs
mov
jmp
shl
sbb
cmp
stc
jbe
sti
add
test
jbe
adc
fs
mov
std
movs
(bad)
bound
test
or
add
retf
push
aaa
dec
jp
adc
mov
clc
mov
addr16
fdivp
sub
xor
cld
jae
mov
paddb
mov
xlat
mov
cmps
ror
(bad)
sub
scas
imul
addr16
jo
adc
movs
in
sbb
(bad)
xor
mov
bound
mov
sbb
out
mov
imul
add
(bad)
aas
cmc
lea
fldenv
aad
sbb
popf
pop
push
xchg
sbb
adc
out
mov
add
push
mov
lds
scas
stc
cmp
add
fild
leave
and
adc
(bad)
call
xchg
push
int
call
(bad)
pop
mov
mov
cmc
lock
out
mov
test
mov
fldenv
ins
add
mov
lods
pop
mov
cwde
in
jb
sbb
pop
mov
push
xlat
adc
mov
xchg
pop
pop
dec
xchg
imul
xor
adc
pusha
push
mul
xor
ja
inc
sbb
or
ins
popa
xlat
xlat
add
shl
sub
add
mov
sub
pop
leave
inc
(bad)
pusha
jne
adc
sub
jg
push
cli
xchg
sar
lods
ins
in
and
cmps
mov
outs
lds
jecxz
and
cli
pusha
lods
pop
or
fcmovnbe
imul
push
outs
adc
imul
arpl
popf
xor
call
sbb
sbb
leave
into
dec
xchg
mov
add
in
ja
sub
loop
or
jl
out
je
push
mov
xchg
and
mov
fwait
inc
inc
int
inc
mov
daa
mov
call
add
pop
loope
push
mov
lds
xor
push
inc
in
mov
cmps
xor
sahf
popf
mov
cmp
aam
mov
setle
repnz
mov
add
fwait
pop
mov
add
pop
icebp
mov
jnp
cmc
and
or
std
mov
push
jb
fldcw
cli
repz
icebp
neg
sbb
mov
jge
sar
in
imul
or
dec
out
test
sbb
aad
and
cli
jle
fs
fiadd
mov
jmp
xchg
pop
and
out
push
pop
in
hlt
pop
adc
(bad)
mov
adc
inc
test
push
scas
je
fidivr
inc
fisubr
jmp
ins
mov
daa
dec
cmp
aaa
mov
inc
mov
(bad)
sub
xor
pop
fnsave
mov
fst
out
adc
(bad)
dec
lea
pusha
in
rcr
jmp
push
push
pcmpgtw
cmps
mov
popa
js
push
mov
lock
ret
mov
push
std
push
and
sbb
adc
pop
xchg
sbb
xchg
gs
nop
cmp
dec
fist
cmp
fstp
add
gs
push
(bad)
jmp
lahf
or
popa
jecxz
mov
mov
sbb
push
aad
and
jo
fldenv
mov
bound
neg
cmp
call
(bad)
mov
jg
cmp
fisubr
mov
pushf
inc
ss
aam
jno
inc
xchg
(bad)
out
jns
ficom
inc
test
ja
pop
test
push
push
(bad)
fistp
pop
push
adc
(bad)
jmp
in
sub
mov
hlt
inc
movs
pop
mov
stos
enter
sub
pop
cmp
aad
push
mov
inc
arpl
pop
out
ins
mov
fistp
mov
rol
jg
jae
pop
dec
push
rcr
mov
test
shl
add
jmp
leave
add
sbb
push
pop
fisub
dec
xor
pop
dec
cmps
cmc
push
jne
mov
jne
push
inc
and
jg
call
pop
mov
iret
hlt
mov
pusha
loope
and
ss
ficomp
imul
adc
stc
fwait
mov
sbb
in
adc
int
add
xor
clc
cwde
pop
cdq
and
enter
je
rol
mov
daa
pop
mov
xor
out
cdq
xor
in
pushf
shr
lock
xchg
loop
mov
call
push
adc
inc
sbb
lds
rcr
out
(bad)
fldcw
jmp
js
mov
cmc
inc
and
jae
adc
mov
xchg
pop
xor
sbb
es
gs
lahf
dec
sbb
mov
push
jmp
adc
mov
xor
push
push
fucomi
nop
dec
cmp
xchg
jge
pop
mov
jle
fs
sub
lods
dec
adc
inc
outs
int3
mov
sbb
add
mov
pop
pop
xchg
mov
test
aas
jecxz
sub
jne
fistp
dec
add
mov
repz
pop
into
jnp
(bad)
inc
leave
cmp
popa
fbstp
dec
test
aad
or
jp
dec
xchg
jns
adc
mov
xchg
int
lahf
sbb
xchg
dec
add
adc
rcl
mov
xchg
sub
imul
loope
enter
push
mov
cmp
xchg
dec
mov
je
fcmovbe
aam
xchg
inc
call
adc
or
mov
cld
push
pop
push
inc
mov
jmp
xchg
and
shl
in
jp
not
sbb
sub
sti
leave
hlt
cmp
lods
mov
in
aam
sar
or
or
rol
test
xor
mov
push
outs
jecxz
dec
pop
fsubr
int
scas
pop
dec
test
add
int3
cmp
out
das
or
test
movs
arpl
sbb
dec
imul
fmul
push
in
or
mov
xlat
xchg
gs
push
ins
imul
mov
dec
mov
adc
or
cmc
mov
test
jns
and
adc
sub
pop
and
adc
test
lods
mov
ret
sub
std
xor
hlt
in
ds
jbe
inc
dec
dec
mov
popa
ins
int
push
sub
fdiv
jmp
mov
push
jmp
cmp
in
dec
fcmovne
sbb
jne
shr
shl
lods
aad
push
cli
mov
gs
jl
outs
(bad)
mov
aas
rcr
ins
mov
pop
test
push
cmp
xlat
mov
adc
jbe
adc
sub
arpl
arpl
push
in
xchg
sub
sbb
ins
fstp
inc
daa
sti
sub
pushf
dec
mov
jl
mov
scas
repz
cmp
and
add
mov
pmulhw
push
add
lods
mov
jl
push
sti
dec
xchg
in
sub
push
xchg
hlt
je
push
push
mov
inc
into
clc
pop
out
push
int3
push
dec
jno
ret
push
dec
mov
pop
into
and
icebp
and
(bad)
mov
jge
mov
(bad)
dec
pushf
pop
push
scas
jns
clc
mov
mov
jecxz
push
ror
out
xor
repnz
mov
jle
cmps
test
(bad)
nop
jge
inc
ror
ins
addr16
push
cmps
std
sub
inc
outs
imul
sub
mov
shl
inc
in
dec
jecxz
in
ja
pop
(bad)
fldpi
in
jns
mov
jp
cmc
mov
ja
push
nop
mov
stos
loop
push
(bad)
lods
test
stc
cmp
dec
mov
mov
fisubr
push
inc
and
adc
jp
mov
mov
mov
and
out
and
adc
cmova
push
xchg
dec
ror
sub
shl
jl
fist
std
jb
or
sbb
(bad)
ins
js
cmps
mov
stos
jmp
imul
nop
jno
popa
mov
pop
or
push
add
mov
mov
not
pop
jg
mov
imul
test
adc
dec
sub
mov
shr
sahf
aam
(bad)
sbb
or
jl
imul
retf
inc
sbb
jo
xor
pop
pushf
adc
or
mov
adc
in
add
mov
repnz
pop
mov
(bad)
xchg
push
and
cmp
mov
mov
xor
jg
pop
dec
sub
adc
mov
pop
or
and
das
arpl
cmp
jne
je
sub
into
cmp
jle
pop
ret
adc
or
cmp
xor
(bad)
mov
or
jg
retf
mov
jp
push
inc
scas
sub
jmp
mov
std
xchg
leave
xchg
ficomp
sub
inc
sub
add
loopne
pop
adc
xor
mov
mov
or
mov
xchg
xchg
cmp
jge
or
inc
mov
mov
loop
jmp
xlat
and
out
xchg
out
and
(bad)
in
xlat
js
test
fistp
in
cld
hlt
pop
jo
cli
inc
push
sub
ror
arpl
adc
adc
fdivr
fimul
cmp
mov
cwde
xor
jle
jae
shr
sahf
cmp
call
add
iret
ret
cmp
sbb
inc
loopne
or
call
fld
inc
xor
gs
call
sahf
jb
sbb
pusha
sti
(bad)
aaa
outs
pop
sub
mov
stos
sub
cmp
cmp
cs
arpl
repz
jo
ds
cmp
inc
repz
pusha
les
ins
dec
dec
xor
mov
jbe
cmp
sti
pop
rol
(bad)
in
stos
push
pop
jno
ins
fimul
push
push
ins
jl
(bad)
rcr
dec
adc
neg
aaa
mov
cmp
cdq
adc
scas
les
pop
sbb
jne
popa
jbe
dec
or
outs
shr
jg
fcomp
pop
fdivr
and
and
xor
fs
call
jecxz
mov
adc
fwait
mov
pop
xchg
cmp
mov
ret
pop
test
pop
mov
adc
cmp
pop
popa
lea
push
neg
sbb
in
shl
out
or
lods
pusha
push
loop
test
jnp
shl
push
and
cmps
inc
out
imul
adc
dec
sub
xchg
add
or
mov
(bad)
iret
sub
mov
pop
lds
cmc
or
test
ror
inc
cs
add
xor
inc
inc
dec
adc
pushf
xor
aam
sbb
pop
(bad)
jnp
jb
mov
jmp
(bad)
fisttp
adc
shl
inc
adc
xlat
mov
push
lods
in
xchg
xchg
call
ja
pop
enter
loop
cmovno
out
iret
pop
stc
and
and
iret
sbb
push
fmul
push
rcr
dec
stos
outs
repnz
ficomp
xor
push
xchg
ja
arpl
mov
sub
cmp
and
mov
xor
inc
cmps
cld
jns
ret
ret
js
pop
push
les
iret
cmps
lds
push
sub
xor
xor
loope
js
lds
dec
pop
fs
icebp
xchg
aam
jbe
push
out
jmp
cmp
mov
push
xchg
xchg
(bad)
retf
das
cmp
jmp
add
xchg
test
dec
push
sbb
mov
or
(bad)
neg
shl
test
enter
mov
or
enter
dec
inc
fstp
(bad)
icebp
gs
sar
mov
cmp
push
mov
mov
cwde
(bad)
fst
pop
popf
adc
pop
mov
stos
adc
xchg
cmp
push
dec
and
jge
xchg
mov
cmp
push
nop
sahf
sub
xor
clc
lahf
inc
or
push
dec
adc
push
xchg
dec
push
push
repz
in
aas
inc
je
cmps
xchg
push
clc
jo
mov
sub
push
and
out
shl
sub
or
jns
add
mov
mov
sbb
sbb
hlt
ins
push
leave
push
retf
jae
jb
xchg
ret
cld
dec
xchg
sub
jge
and
mov
fstp
add
je
into
add
mov
pop
ficomp
(bad)
pop
sub
das
inc
mov
push
iret
jl
jmp
dec
inc
ins
test
cmp
mov
cdq
push
and
jmp
add
inc
pop
icebp
jns
mov
xlat
aaa
lods
out
(bad)
mov
push
or
in
std
out
(bad)
jp
nop
dec
std
and
loope
mov
mov
xor
push
jmp
test
(bad)
sar
gs
add
mov
and
es
inc
stos
jp
popf
addr16
push
in
inc
jbe
scas
shl
cmp
xchg
cmps
pop
loop
hlt
test
lods
nop
jecxz
mov
or
mov
out
jo
jmp
and
adc
test
cmc
cmp
lods
aad
push
adc
jmp
jne
or
(bad)
pop
ret
mov
lahf
movs
sub
adc
push
or
cwde
pop
or
data16
std
call
xor
test
ret
xor
mov
sbb
mov
dec
out
cmp
in
pop
jge
dec
lock
mov
inc
fstp
sbb
dec
add
mov
mov
mov
popa
mov
and
fisttp
push
fadd
adc
das
lods
adc
cmps
xchg
jmp
or
push
push
pop
xchg
mov
jmp
push
pop
jbe
xor
fistp
movs
(bad)
shl
test
mov
or
jl
inc
ret
xchg
push
pop
push
retf
es
jle
test
add
or
in
test
jno
fild
ins
mov
push
pop
mov
pop
push
in
and
dec
jecxz
test
xor
push
push
data16
mov
js
rcl
pushf
jnp
in
pop
adc
xor
std
data16
dec
imul
and
test
int3
push
mov
pop
mov
addr16
cmp
call
or
das
mov
xor
mov
or
out
scas
ins
ret
mov
imul
sub
add
lea
or
pop
sbb
mov
mov
ret
arpl
cwde
lea
dec
cmp
sahf
pop
shl
adc
mov
rcr
mov
arpl
mov
out
and
add
mov
mov
ror
cli
(bad)
imul
arpl
(bad)
pushf
mov
enter
jp
mov
pop
mov
out
cmp
xchg
mov
or
jmp
sub
dec
mov
jae
xchg
movs
push
mov
lods
dec
cld
nop
fwait
dec
mov
fwait
cmp
inc
mov
imul
pop
or
xchg
jns
and
ss
jg
mov
retf
les
int3
sbb
dec
sahf
push
mov
xchg
pop
das
mov
pop
out
mov
xor
xor
rcr
mov
dec
sbb
ja
aas
int3
hlt
call
ins
jno
mov
das
repnz
daa
pop
stc
mov
inc
test
js
xchg
xchg
pop
out
jb
sub
add
dec
xlat
aad
adc
ss
dec
add
fs
jp
ret
outs
pop
mov
int3
jl
xor
jae
jl
pop
pop
push
mov
mov
les
imul
aam
mov
or
es
jmp
xchg
push
and
in
inc
xor
xchg
add
into
fistp
xchg
xchg
push
adc
movs
arpl
jge
adc
pushf
int3
data16
add
and
pop
xchg
pushf
shl
mov
adc
and
jmp
cmp
adc
imul
sbb
out
mov
or
aaa
sub
dec
pop
movs
add
inc
(bad)
adc
cmovle
adc
out
or
pop
gs
ss
scas
mul
inc
daa
sahf
cmp
jns
or
cmp
sbb
or
pop
outs
lock
not
imul
adc
les
sbb
retf
call
mov
add
pop
fwait
xchg
or
add
and
movs
mov
xor
jb
push
pop
sub
(bad)
rcl
out
push
mov
pop
fwait
out
fs
push
aas
addr16
jge
je
xor
bound
sub
sub
cli
xchg
clc
outs
cld
stos
sbb
mov
xor
pop
daa
cmp
mov
gs
push
iret
mov
test
iret
imul
in
iret
mov
cwde
mov
dec
jg
inc
or
push
push
sub
loopne
bound
repz
pop
leave
adc
retf
jae
mov
vpminsw
dec
mov
mov
add
mov
jge
mov
mov
addr16
ss
or
div
mov
inc
jb
push
push
push
ror
xchg
sub
fwait
(bad)
mov
mov
mov
data16
ret
or
xlat
xor
push
cwde
dec
mov
test
aas
cli
xor
adc
jno
push
(bad)
xor
add
jp
in
push
mov
mov
jl
lods
mov
pop
sbb
hlt
and
ins
cdq
or
fnstcw
popf
adc
hlt
push
(bad)
pusha
or
jg
outs
dec
lods
test
xchg
or
mov
xchg
sbb
shl
int
cmp
push
pop
inc
rcl
out
outs
aad
and
arpl
mov
inc
inc
adc
mov
repnz
sti
hlt
shl
cmp
push
jl
es
xchg
out
sti
push
and
out
mov
div
xchg
fwait
adc
fucomi
lea
popa
fincstp
lods
scas
shl
test
popf
jo
not
xor
jle
and
fiadd
rcr
push
fcomp
add
in
mov
ret
mov
dec
in
lahf
jne
int
xor
imul
jg
(bad)
clc
jge
js
sub
sbb
(bad)
sbb
dec
test
mov
test
(bad)
dec
jbe
sbb
xchg
pop
pop
jmp
mov
push
ins
pushf
xchg
cs
lahf
sub
jbe
add
data16
xchg
add
fistp
aam
jbe
(bad)
sbb
js
adc
xlat
push
cli
mov
sbb
shl
mov
mov
jg
sub
cmp
addr16
iret
leave
or
imul
in
xor
mov
into
fsubr
mov
cmp
int3
fld
mov
enter
aam
lock
sub
out
mov
and
js
add
pop
mov
dec
nop
div
cmp
mov
sbb
or
xchg
jmp
mov
xchg
xor
stc
cmp
xchg
sub
call
retf
mov
or
in
or
imul
push
ins
cmc
shl
hlt
push
inc
mov
imul
lea
cmps
sub
pop
pop
jb
repnz
das
add
rcr
mov
loope
jp
jp
test
int3
or
xor
ds
or
scas
cdq
aas
cmp
push
test
call
xor
add
push
sti
hlt
xchg
sbb
or
rcl
cmc
scas
pop
xchg
xor
dec
mov
adc
and
pop
out
into
ret
inc
add
test
imul
push
mov
ret
adc
repnz
pop
daa
jmp
sub
or
jnp
mov
adc
pop
mov
pop
in
xor
(bad)
adc
popf
push
push
inc
jo
lds
inc
and
push
pop
jecxz
into
pop
sub
fs
mov
jp
cmc
in
sti
jns
imul
mov
mov
retf
mov
or
imul
jmp
sbb
outs
pop
adc
rcr
pop
scas
nop
xor
std
in
xor
pop
sahf
jnp
mov
shl
mov
inc
adc
ret
mov
in
push
stc
cmp
jmp
cmp
xor
dec
std
pop
mov
adc
xchg
mov
xor
aam
dec
arpl
push
es
lock
cmps
xchg
dec
fld
jg
cmp
cmp
jp
ja
add
adc
repz
enter
(bad)
adc
jmp
into
lds
js
cmp
(bad)
jle
pop
bnd
inc
fs
movs
pop
or
and
or
jge
pusha
nop
adc
push
add
popa
rcl
das
cmp
sbb
xchg
pop
(bad)
and
inc
(bad)
cmp
out
pop
hlt
and
test
xchg
jo
repz
pop
sub
les
loop
push
shr
adc
out
ret
dec
xchg
mov
xor
loope
scas
mov
jmp
push
mov
mov
sbb
fldenv
cmps
push
adc
and
jo
dec
ret
push
bnd
cmc
xor
shl
pop
movs
loop
jmp
dec
pop
cmps
lahf
loope
sti
mov
les
sbb
dec
mov
test
fs
leave
cmps
push
cmp
xchg
push
jge
xor
rol
cli
scas
push
imul
cmp
mov
jb
cmp
loope
jns
(bad)
mov
xor
sbb
jne
jge
lea
mov
push
test
and
fwait
pusha
stc
jp
dec
jo
stc
sbb
push
inc
mov
adc
out
and
or
ds
out
xor
add
cdq
outs
stos
push
xorps
jnp
inc
and
inc
iret
mov
test
mov
mov
popa
xchg
pop
aas
jg
mov
mov
adc
or
jg
fild
sbb
pop
or
cs
xchg
lahf
adc
bound
hlt
icebp
cmp
out
sbb
push
imul
out
mov
jge
mov
dec
loopne
dec
add
jne
sbb
daa
sar
pop
enter
idiv
sbb
enter
imul
adc
sub
(bad)
js
add
aam
cmp
ror
inc
xchg
addr16
lods
into
or
add
adc
mov
xchg
outs
fsub
push
cdq
ss
js
cmp
dec
scas
adc
jnp
mov
js
or
and
mov
loop
popa
lods
movs
mov
cmps
rcr
pop
jge
test
inc
pushf
scas
addr16
lahf
sbb
pop
dec
push
das
pop
mov
sbb
ss
(bad)
pushf
or
dec
adc
mov
adc
jle
jecxz
shr
push
dec
in
shl
mov
retf
fwait
push
loope
inc
outs
dec
pop
or
cmp
inc
rol
sub
push
xchg
sbb
stos
movs
(bad)
mov
pop
fbld
out
push
mov
dec
dec
popa
inc
push
lock
adc
push
adc
call
movs
jo
push
inc
add
jbe
cld
loope
xchg
stos
sti
mov
push
mov
loopne
sbb
(bad)
mov
test
or
mov
fwait
push
cmps
lea
sbb
push
aad
mov
test
or
add
call
ret
and
dec
stos
push
scas
rcl
(bad)
dec
jl
les
ins
jp
add
imul
inc
lock
xchg
(bad)
aas
leave
jns
inc
add
mov
in
push
xchg
sbb
fld
push
(bad)
enter
inc
sbb
cli
dec
push
and
mov
lods
jg
outs
pop
cmp
std
mov
jnp
add
inc
es
test
push
cmp
inc
cmp
fisttp
rcl
fisubr
push
sub
maskmovq
mul
scas
stos
inc
int
arpl
imul
mov
cs
xchg
arpl
out
pop
xor
add
gs
rol
fldln2
iret
(bad)
int3
or
fcom
inc
mov
mov
sahf
(bad)
sti
and
inc
ins
jecxz
jle
das
or
sti
mov
adc
in
jne
out
sahf
cld
or
popa
inc
cmps
call
cwde
adc
popa
sbb
loope
sbb
inc
adc
fs
cmp
gs
xchg
stos
adc
arpl
das
ret
mov
ds
xchg
clc
cli
ror
or
or
rcl
cdq
inc
inc
das
xchg
movs
fldenv
out
shr
sub
daa
(bad)
jl
repz
ss
sub
faddp
repz
inc
mul
inc
pop
in
leave
pop
rcr
add
inc
xchg
pusha
hlt
dec
into
in
push
inc
dec
push
cmp
mov
xchg
add
pop
cmp
cmp
sub
dec
add
sbb
ficom
inc
or
mov
call
jp
in
sbb
(bad)
and
pushf
mov
repz
sbb
outs
in
aam
nop
inc
pop
js
scas
cs
popa
or
inc
aam
or
dec
and
sbb
push
mov
ds
leave
sbb
or
mov
aas
lods
xchg
jmp
jg
pop
rcr
sub
and
jo
out
pop
xchg
xor
int3
arpl
sub
mov
scas
push
int
adc
test
mov
ret
xchg
rcl
pop
sub
repnz
ins
cdq
add
inc
mov
sbb
push
pop
jno
cmp
push
retf
mov
cld
xor
sub
repz
cmps
xor
sbb
imul
mov
movs
cmc
dec
stos
scas
xor
lods
sbb
jmp
inc
out
loopne
das
mov
cmp
pop
fmul
dec
loopne
std
pop
dec
push
jge
retf
repnz
mov
sbb
dec
dec
test
push
call
mov
fst
jle
cmc
pusha
jle
(bad)
sub
cmp
shl
loope
adc
shl
sahf
sub
or
shl
sahf
sbb
aam
(bad)
lods
pop
and
mov
gs
mov
ins
into
retf
xor
jmp
xchg
sbb
xor
leave
cld
loope
mov
and
sbb
pop
xchg
xor
mov
out
inc
pop
mov
out
push
stos
adc
call
xchg
das
aaa
jnp
sbb
inc
sahf
inc
push
add
daa
test
xor
enter
les
imul
(bad)
js
lods
scas
inc
xor
xchg
adc
mov
cli
imul
xchg
sub
jne
clc
lock
cmc
cmp
outs
or
jo
(bad)
jge
mov
add
or
dec
mov
add
cmp
pop
jne
icebp
test
(bad)
cmp
inc
fwait
sahf
outs
repnz
aam
sub
jnp
test
push
stos
loop
idiv
mov
and
shl
add
and
mov
push
sahf
dec
push
xor
jb
sbb
ja
sub
xor
(bad)
cmps
scas
popf
adc
shl
call
dec
out
or
cmp
test
ja
in
lods
shl
sbb
or
dec
cli
cmps
cmp
mov
popf
xchg
cmps
cli
retf
lods
dec
cmp
aaa
sahf
push
imul
cmp
sub
outs
inc
xor
jmp
scas
inc
daa
and
test
lock
neg
mov
adc
lea
xchg
jns
xchg
sbb
add
jg
(bad)
and
or
push
push
add
xor
(bad)
(bad)
cmp
pop
dec
dec
retf
jl
jne
jne
hlt
stc
mov
jge
cmps
mov
inc
(bad)
mov
std
pushf
xor
call
lods
inc
enter
sbb
and
jle
shr
sbb
or
scas
loope
ret
lds
fwait
push
mov
fisubr
mov
mov
out
cdq
repnz
daa
(bad)
sti
mov
daa
xchg
mov
inc
and
enter
ss
lahf
xor
sub
mov
mov
mov
push
sub
aad
push
dec
xchg
loop
mov
outs
sub
call
jo
xchg
lock
outs
adc
or
xchg
mov
sbb
adc
dec
nop
cmp
xor
sub
leave
out
inc
rol
adc
cmp
jb
jmp
inc
xor
xor
scas
pop
push
adc
cmps
gs
shr
imul
pop
sar
xlat
pop
mov
out
mov
enter
outs
cmps
cld
mov
scas
stos
pusha
(bad)
pop
in
std
stc
dec
xchg
pop
les
push
outs
dec
add
sbb
and
mov
mov
push
(bad)
pop
push
inc
sub
mov
xor
fwait
lahf
push
into
aas
mov
shl
jle
lods
in
inc
cmp
aas
std
retf
mov
jne
loope
jnp
ins
add
mov
push
jmp
sbb
inc
inc
in
mov
les
loopne
inc
adc
iret
in
cmps
sbb
inc
inc
aaa
jmp
jg
xchg
into
add
les
mov
sub
lea
add
push
sub
mov
mov
xlat
mov
fs
into
jl
out
xchg
or
mov
dec
jle
lods
js
(bad)
adc
inc
mov
sbb
sub
jge
jmp
and
mov
ins
clc
dec
cdq
sti
cli
(bad)
cdq
sbb
xchg
and
pop
mov
or
ins
mov
or
xchg
fsubr
mov
cmps
movs
rcr
adc
xchg
cmp
cmp
stc
int
mov
pop
(bad)
dec
(bad)
iret
(bad)
pusha
lods
cmp
push
sbb
jecxz
push
frstor
rcr
pop
aaa
pop
jb
and
mov
adc
js
push
mov
adc
sub
jns
inc
mul
mov
fist
pop
movs
data16
and
xchg
pop
xor
add
cmps
mov
imul
mov
repnz
dec
out
xchg
pop
xlat
hlt
xor
fcmovnb
lahf
and
loopne
pop
ins
scas
xchg
outs
scas
dec
mov
ret
ficom
cmp
push
(bad)
hlt
lea
stos
sub
aaa
inc
push
push
movs
arpl
cmc
dec
or
(bad)
fmul
cmp
lods
jp
dec
imul
xchg
xchg
push
inc
in
xchg
aam
xor
push
inc
jbe
pop
and
cmp
shl
push
sti
outs
movs
stc
push
hlt
push
ror
mov
aaa
popf
popf
aad
mov
and
ins
rcr
imul
outs
mov
sbb
stos
xor
lea
push
push
lods
arpl
xchg
(bad)
ss
dec
mov
dec
(bad)
pop
fucomp
pop
int3
aad
mov
into
scas
jmp
imul
js
leave
mov
shr
ins
dec
jp
inc
call
pop
push
test
dec
inc
jnp
pushf
test
cmp
xor
jl
mov
scas
and
jae
pop
pop
mov
cmp
xlat
dec
sbb
adc
mov
sub
ins
inc
cli
(bad)
pusha
dec
sub
mov
pop
out
pushf
dec
ins
pop
adc
in
jnp
ins
dec
mov
test
and
xor
sub
and
jnp
jle
xlat
adc
mov
xor
lds
cmp
dec
loopne
loopne
test
ja
cmp
(bad)
xor
or
les
ja
loop
mov
pop
in
jmp
dec
pop
mov
mov
cmp
jg
push
shl
add
inc
or
inc
cmp
data16
mov
mov
push
cmps
sbb
mov
test
fwait
pop
cli
xchg
cmp
mov
ror
xchg
mov
pop
mov
or
loop
adc
mov
shl
pop
mov
xor
clc
push
popa
jno
out
mov
aam
jno
int3
pop
pop
adc
push
jecxz
ss
sahf
loop
hlt
fild
xlat
bound
arpl
(bad)
aad
sbb
mov
jg
outs
popf
adc
xor
lahf
stos
dec
inc
pop
push
cmps
dec
mov
aad
lods
daa
inc
ins
test
test
arpl
mov
mov
lock
xor
test
sar
movups
jns
push
pop
repnz
aam
jg
popa
inc
jge
push
shl
shl
rol
and
fnstsw
xor
stos
mov
sbb
mov
popa
and
outs
lock
push
fistp
fmul
ds
test
sbb
fidivr
les
xchg
retf
adc
xchg
fcom
mov
idiv
rol
and
dec
mov
and
xor
sbb
icebp
addr16
push
into
(bad)
xchg
stos
(bad)
pop
dec
inc
out
scas
cdq
js
je
popf
mov
into
mov
mov
and
and
stos
pop
test
sbb
movs
xchg
jnp
mov
cmp
retf
cmc
out
add
mov
inc
push
ins
arpl
jg
jmp
xchg
cs
fisttp
sbb
sbb
jbe
inc
int3
jae
dec
movs
pop
out
fimul
in
push
cmps
cdq
mov
test
or
push
hlt
mov
pusha
fsubr
mov
iret
mov
into
add
add
push
shr
inc
popa
xlat
mov
rcr
data16
or
sub
sub
mov
xchg
mov
ss
mov
sti
mov
push
mov
inc
pop
pop
xchg
push
pushf
and
push
jo
iret
(bad)
dec
mov
xchg
add
icebp
ret
jmp
dec
jb
pop
xor
aam
xchg
xor
pop
mov
ins
adc
mov
out
mov
jne
arpl
jmp
div
gs
fs
(bad)
mov
repnz
mov
push
pop
std
xor
leave
in
fucomp
add
mov
sub
push
adc
sub
xchg
or
jmp
stos
push
retf
lods
sbb
dec
mov
in
xchg
cwde
cwde
adc
inc
enter
loopne
or
mov
push
mov
jo
les
push
call
cs
jmp
or
js
out
adc
adc
push
outs
leave
inc
int
and
es
inc
out
aas
loop
fisubr
sub
cmp
mov
add
adc
xchg
mov
out
xor
jns
cmp
aad
sbb
das
xchg
sub
mov
xchg
xchg
popa
stos
sbb
adc
cs
or
add
xchg
fidiv
xchg
hlt
gs
ins
arpl
lea
push
mov
stos
jb
cld
sbb
mov
imul
arpl
enter
aaa
dec
mov
test
push
outs
jmp
cmc
rcr
in
cmc
sbb
mov
mov
sbb
iret
cli
jp
jmp
les
vpaddusw
or
and
loop
push
sub
(bad)
adc
xor
aam
outs
dec
mov
jg
rcl
push
retf
clc
packuswb
lods
sbb
enter
retf
popf
sub
pop
bound
jbe
mov
jmp
das
mov
cld
out
inc
in
imul
push
sub
adc
cmp
jle
push
add
call
(bad)
push
mov
sahf
nop
mov
out
clc
cli
xlat
sub
jg
sub
cwde
int3
imul
lea
daa
js
and
ud0
and
aad
dec
addr16
ss
dec
xchg
shl
jl
and
out
or
and
or
mov
and
leave
gs
sti
out
ds
in
jbe
dec
lds
xchg
loop
pushf
xor
pop
mov
jp
and
and
and
popf
sahf
popa
sub
lea
and
mov
sti
mov
retf
(bad)
sub
movs
hlt
(bad)
shl
mov
into
add
out
inc
jae
mov
aaa
test
mov
imul
jge
ss
sub
out
inc
pop
popf
es
int
and
xor
push
or
into
dec
add
leave
xchg
test
bound
loop
enter
fsub
mov
in
gs
jecxz
test
sbb
imul
add
sub
push
pop
or
push
out
or
ror
aad
mov
sbb
xor
mov
mov
(bad)
out
cmp
aam
jbe
and
fistp
pop
push
retf
adc
sbb
mov
shl
jns
push
iret
xchg
movs
imul
mov
test
pop
rcr
das
cmps
and
movs
push
sbb
lahf
mov
fld
pop
cmp
imul
adc
scas
and
fcomp
mov
pop
adc
mov
lods
cmp
std
cmp
add
fbld
push
enter
cmps
lds
mov
add
pop
mov
sub
jle
sub
pop
mov
out
frstor
call
sub
es
jle
xlat
ds
int3
lock
pop
es
ret
pop
gs
pop
and
dec
xchg
push
or
dec
std
stc
scas
adc
sbb
inc
xchg
and
add
movs
jmp
mov
jae
jl
push
cli
nop
int3
xor
test
in
sti
aaa
mov
mov
fisub
and
imul
arpl
xchg
inc
mov
mov
movs
aas
scas
xchg
push
xor
(bad)
or
cmp
movs
repnz
mov
test
aam
mov
rol
sub
fisub
mov
ror
rcr
add
xor
or
push
(bad)
aam
retf
jo
push
pop
shr
xchg
lods
dec
(bad)
adc
lea
aad
push
xchg
rcl
dec
jnp
rcl
fnstcw
push
inc
inc
jno
div
mov
jg
xchg
and
dec
ret
mov
mov
jecxz
and
and
lahf
(bad)
(bad)
das
xor
mov
pop
push
jmp
sbb
fistp
mov
mov
sbb
iret
adc
add
mov
lods
(bad)
xchg
fst
cmp
ror
aam
ins
sbb
les
pop
leave
jg
push
dec
outs
ja
pop
push
lods
in
(bad)
(bad)
in
lods
mov
xor
mov
dec
ins
mov
popf
jae
lods
dec
mov
dec
aas
mov
addr16
call
mov
sub
jae
xor
push
cld
ja
or
fbld
lds
mov
mov
in
addr16
add
mov
mov
dec
mov
popf
loop
mov
ss
sub
and
xchg
xor
push
xor
repnz
out
rcl
inc
pop
les
inc
jae
ret
inc
or
cs
sub
cmp
fnstenv
xor
or
dec
sub
jne
fisub
rcr
sbb
pushf
sbb
bound
into
mov
push
mov
sbb
add
pop
(bad)
xor
cmc
repz
(bad)
inc
dec
inc
add
scas
push
ins
sbb
jb
ds
dec
or
mov
lahf
sbb
ret
jae
xor
ficomp
cmp
mov
shl
xor
mov
icebp
dec
jbe
fsin
stc
add
test
lahf
sub
stos
cmps
cmps
mov
mov
mov
jle
popa
xor
add
jb
test
inc
sbb
ror
sub
or
pop
inc
vandnps
sahf
or
mov
pop
cmp
jmp
lods
les
push
adc
enter
adc
aad
mov
ds
int3
call
and
(bad)
mov
ret
hlt
push
shl
pusha
mov
mov
jg
popf
inc
pop
pop
mov
aaa
ret
add
test
jno
lea
push
sub
out
sar
lock
mov
sbb
std
in
ret
or
jge
and
outs
ins
arpl
add
mov
clc
shr
ds
mov
mov
cmc
in
movs
repz
xor
push
dec
and
shr
ins
pcmpgtd
xchg
mov
sub
mov
cmp
mov
loopne
sub
mov
das
xor
inc
lea
movs
in
sbb
push
imul
je
es
sub
scas
xor
sub
cmp
test
in
jae
test
sub
aam
(bad)
fst
add
jmp
imul
adc
pop
rcr
stos
jmp
inc
lock
adc
sub
push
xlat
lods
pushf
call
adc
es
enter
sub
or
js
xor
scas
cld
out
inc
nop
retf
mov
push
push
dec
fidivr
dec
push
cwde
mov
shr
sti
loope
icebp
inc
shr
add
cdq
rol
add
scas
call
xor
das
aas
push
das
jge
mov
stc
imul
aaa
pop
jmp
dec
ins
xor
or
mov
pop
test
mov
xlat
rol
pop
sti
xchg
in
mov
loopne
jne
mov
rcl
adc
mov
adc
mov
pop
or
es
xlat
xor
mov
fwait
scas
aad
sub
ret
jo
or
mov
adc
bnd
adc
mov
mov
pop
(bad)
in
(bad)
addr16
cmp
xchg
leave
push
cmp
sti
xor
push
jae
mov
mov
and
push
xor
outs
mov
adc
adc
dec
fucomip
cmp
push
or
pop
fmul
adc
inc
push
repz
jle
mov
or
ds
mov
mov
rcr
mov
ror
out
adc
or
pop
sub
adc
and
mov
adc
mov
xor
call
mov
retf
ror
in
enter
(bad)
bound
inc
mov
nop
hlt
das
data16
dec
push
(bad)
pop
hlt
data16
scas
and
jp
fadd
sub
mov
sbb
aad
loop
hlt
ins
das
fldcw
pop
mov
cmp
pop
inc
pop
jns
imul
and
push
cwde
adc
mov
jmp
and
adc
jno
or
mov
aaa
or
or
ret
mov
xchg
cmc
jo
or
jmp
ja
mov
bound
movs
jge
xor
shl
mov
push
mov
mov
sbb
pop
repnz
push
cwde
mov
je
xor
out
cdq
push
sub
and
mov
and
fld
sub
or
jnp
daa
in
dec
adc
cmp
and
mov
out
mov
pop
inc
adc
add
loopne
push
mov
adc
hlt
lods
add
mov
test
aam
ja
mov
xchg
addr16
aam
sbb
mov
and
lea
add
pop
adc
mov
mov
mov
dec
addr16
stc
aad
stos
cmp
xchg
js
lods
adc
mov
scas
cmp
sbb
inc
sbb
cli
cmps
cli
xchg
sub
packssdw
inc
fisubr
lods
rcl
dec
push
scas
and
jb
lods
in
pop
imul
jb
fbld
test
out
fst
or
dec
cmps
rcr
or
aad
sbb
dec
cmp
gs
add
xlat
push
cmp
out
or
rcr
xor
jmp
cmp
inc
and
ins
jmp
xchg
adc
push
fistp
add
in
pop
xchg
ja
rcl
cmps
adc
jno
popa
mov
fidiv
xchg
enter
xor
(bad)
cmp
sti
mov
ficomp
xchg
pop
dec
test
push
retf
xchg
out
daa
push
movs
cmp
imul
adc
cmp
push
mov
das
shl
or
sbb
cmp
add
xchg
add
inc
dec
out
retf
and
pop
shl
js
dec
mov
adc
jecxz
mov
outs
dec
daa
xchg
movs
mov
ss
cmps
dec
dec
jle
fmul
pop
push
sbb
lds
jmp
sahf
in
nop
xor
inc
out
mov
in
(bad)
mov
sub
addr16
jle
push
fidiv
ficom
sub
adc
jne
sbb
pushf
xchg
test
mov
adc
jbe
inc
imul
je
jl
rcl
imul
aad
sbb
int3
or
and
or
(bad)
in
adc
aam
mov
cmp
mov
lahf
stc
ret
leave
gs
je
lea
aad
cli
push
in
clc
xor
push
ss
(bad)
ror
test
js
bound
fiadd
ret
enter
loop
pop
xchg
cmp
pop
mov
push
jge
sar
in
retf
loope
packssdw
(bad)
mov
xlat
bound
mov
out
cmp
pop
sar
clc
sub
jmp
ja
cmps
mov
jnp
mov
js
and
mov
out
test
cld
jmp
jl
sub
jp
imul
inc
leave
out
pop
loop
push
ss
shl
mov
push
retf
sahf
fwait
nop
sub
fs
xchg
rcl
dec
rcl
fwait
ja
ror
mov
iret
aad
inc
add
jl
pop
mov
cmp
dec
jle
rol
and
jne
jne
(bad)
out
adc
or
adc
aam
cli
xchg
xor
and
push
pop
cmp
rol
push
mov
sbb
cmp
nop
push
push
sub
fnstenv
aas
test
add
push
xchg
cmp
cmp
mov
sar
out
jge
in
add
in
mov
stos
arpl
push
jo
inc
xlat
mov
repnz
jno
lods
or
mov
xor
or
xor
push
cdq
pusha
retf
sbb
cdq
mov
mov
(bad)
fsubr
in
cmp
adc
repz
arpl
jne
sub
mov
int
call
les
xchg
push
std
xor
sub
dec
or
adc
or
in
mov
cmps
pusha
sub
adc
cmps
jne
and
ror
dec
loop
mov
sub
cdq
mov
pop
(bad)
int
jl
imul
mov
bound
push
jge
movs
pop
jmp
idiv
pop
xchg
pop
mov
daa
push
jl
xchg
js
sbb
test
sbb
iret
xor
nop
into
ds
sub
push
int
jmp
popa
in
and
and
lock
add
add
retf
xchg
iret
sub
pop
jg
(bad)
rcr
fimul
mov
sub
test
inc
mov
or
push
sbb
xchg
iret
add
arpl
(bad)
mov
or
dec
cld
addr16
and
mov
sbb
loopne
xchg
or
mul
cmp
mov
adc
out
in
jl
cmc
pop
sub
xchg
jp
xlat
je
test
jl
jno
aaa
xchg
stos
imul
push
dec
je
jmp
dec
in
mov
idiv
or
cs
dec
xchg
scas
adc
out
jne
inc
aas
adc
and
mov
ins
ds
sbb
add
xchg
jb
cdq
add
cmp
xchg
outs
jg
adc
jmp
cmp
cmp
push
daa
bnd
sbb
add
mov
mov
arpl
xor
add
xlat
cwde
pushf
into
mov
fucomi
pop
pop
dec
out
imul
mov
fstp
mov
cdq
pop
movs
popf
xor
mov
xchg
test
les
pop
shl
jecxz
fs
add
xor
inc
call
out
sbb
cdq
sub
dec
(bad)
cwde
dec
idiv
mov
mov
push
shl
xchg
fist
mov
fmul
sub
sbb
popa
enter
inc
jno
(bad)
cmp
and
xchg
mov
sahf
shl
dec
retf
leave
mov
dec
push
mov
aaa
pop
mov
add
xchg
mov
or
fistp
stc
call
arpl
xchg
jno
jmp
mov
adc
push
int3
stos
aam
lahf
pop
xor
pushf
jl
popa
sub
jp
adc
xchg
xchg
jle
ins
das
adc
jmp
leave
xchg
loop
sbb
sbb
sbb
push
icebp
mov
xchg
cmp
sub
shl
lds
aam
enter
and
mov
shr
and
or
jmp
mov
mov
fmul
sub
les
jb
imul
arpl
inc
xor
loopne
mov
dec
push
stc
(bad)
dec
dec
and
xor
adc
sub
or
outs
mov
pcmpeqw
in
ja
or
cmp
ja
frstor
mov
or
sub
mov
add
or
stos
out
aaa
dec
mov
mov
lahf
mov
dec
pushf
adc
mov
loop
xchg
mov
aaa
xor
push
sub
or
popf
and
xor
mov
and
cmps
add
add
mov
inc
fstp
pop
pushf
fdiv
sub
mov
xchg
pop
xor
aad
cmp
(bad)
ss
fisub
sub
nop
arpl
sti
inc
xchg
or
sub
push
sbb
rol
fild
add
and
ror
jbe
inc
loop
mov
call
repz
(bad)
push
arpl
push
cld
add
pusha
adc
(bad)
test
clc
pop
aad
inc
out
add
loopne
dec
daa
movs
cmp
sbb
xchg
call
or
test
jecxz
mov
shl
fimul
jle
inc
pop
dec
iret
push
fisubr
js
jae
stos
dec
inc
call
call
xor
sub
jnp
stos
mov
stos
xor
data16
lods
daa
aam
mov
push
cli
into
xchg
or
push
xchg
shl
gs
(bad)
aaa
xstore-rng
mov
xor
sahf
(bad)
outs
aaa
jae
dec
das
ss
(bad)
dec
push
mov
popa
dec
inc
enter
addr16
int
sbb
push
jae
jae
mov
fiadd
jnp
inc
sub
lock
sbb
fnstenv
push
cli
shl
add
or
rcr
jbe
enter
adc
push
cli
jb
data16
(bad)
xchg
add
push
shl
imul
add
es
lods
call
fidivr
aad
jg
test
dec
cwde
cmps
pop
lods
inc
mov
das
pop
(bad)
fild
sub
or
add
push
and
retf
mov
test
mov
rep
mov
inc
(bad)
(bad)
xor
aaa
fimul
and
call
inc
adc
(bad)
push
or
hlt
test
push
xor
js
lock
jmp
mov
arpl
call
xchg
jo
xlat
mov
retf
mov
dec
xor
jmp
movs
cs
ficomp
or
mov
add
adc
loopne
imul
and
jle
jge
aam
jbe
aad
pop
popa
or
push
out
ss
inc
aas
std
int3
add
(bad)
call
or
pop
in
hlt
adc
lods
sbb
out
inc
adc
push
mov
cdq
sub
push
mov
add
popa
adc
cli
xor
and
cwde
xor
lea
aaa
push
mov
xchg
and
mov
cmp
lods
(bad)
btr
pop
movs
add
mov
aam
push
push
or
push
push
rcr
push
inc
inc
adc
jns
rcr
jns
sbb
mov
(bad)
push
or
ins
xchg
push
xor
fwait
sbb
xchg
ins
stos
dec
dec
dec
retf
cmp
(bad)
out
(bad)
jecxz
cmp
push
xor
sbb
pop
cmp
cmp
std
push
sub
dec
xor
pushf
mov
mov
cdq
sub
jmp
jno
jmp
cwde
dec
xor
arpl
mov
(bad)
or
inc
bound
sbb
mov
stos
and
mov
or
and
jb
pop
pop
pop
loopne
aad
jmp
dec
aaa
mov
sbb
fstp
out
(bad)
lods
and
loope
in
popa
fwait
movs
push
les
jp
dec
enter
loope
enter
lock
jge
(bad)
or
loopne
pushf
test
test
fsubr
adc
mov
and
dec
and
mov
add
sar
and
jmp
test
jno
or
ja
sbb
out
jbe
adc
push
or
push
or
lods
add
jno
scas
aam
scas
push
daa
inc
cmp
ficom
sbb
adc
mov
add
push
lods
fcmovne
xchg
fwait
lds
retf
jne
lods
inc
hlt
ins
loope
cwde
dec
cmp
mov
push
xlat
mov
jecxz
adc
push
in
adc
jmp
fs
cli
ins
jo
jb
sbb
cli
dec
sub
mov
push
sbb
repnz
xor
fld
shr
mov
push
xchg
ss
pusha
pop
mov
in
lods
xchg
aad
cmp
push
mov
push
stos
std
jbe
jo
mov
sub
push
mov
lods
repz
xchg
pop
inc
leave
repz
jge
cmp
sbb
lea
pushf
and
outs
pop
pop
mov
ficomp
jle
mov
adc
aad
mov
inc
mov
mov
cdq
jp
int3
sub
jae
push
dec
lods
push
test
outs
fldpi
js
dec
sbb
pop
scas
(bad)
js
pop
aam
sub
hlt
dec
(bad)
push
call
out
test
movs
cmp
je
adc
xor
xchg
sub
push
inc
mov
ss
cwde
mov
fnstcw
fbld
sbb
mov
movs
mov
call
mov
jmp
pop
sub
mov
push
sub
outs
shl
and
xor
mov
sbb
jb
gs
xchg
(bad)
xor
(bad)
cmp
(bad)
clc
sbb
ss
fiadd
test
pop
inc
sub
in
mov
xchg
jb
lds
sahf
in
jbe
outs
xchg
xchg
or
iret
mov
jnp
out
out
(bad)
xor
pop
cmp
sti
push
test
in
(bad)
jg
cmc
push
jmp
sub
sbb
cli
cli
add
mov
in
inc
xchg
pusha
enter
dec
(bad)
cmc
cmp
scas
xor
sti
sbb
nop
loop
jbe
lods
xchg
or
mov
mov
rcl
fwait
xor
and
inc
repnz
test
lods
dec
xchg
and
ret
push
sub
popa
stc
sub
das
pop
pushf
mov
call
(bad)
cmp
stc
and
xchg
adc
xchg
mov
int
ss
xchg
(bad)
div
push
pop
rol
out
dec
xor
pop
repnz
and
and
clc
pushf
mov
or
push
and
imul
arpl
jge
xchg
jmp
enter
xchg
dec
xchg
pop
mov
sub
mov
shr
mov
and
test
cwde
fcomp
out
in
or
mov
nop
out
and
push
ja
sub
(bad)
sti
lods
iret
pop
pop
test
dec
adc
xchg
in
shl
adc
push
push
les
mov
or
xor
jl
cmp
mov
inc
dec
das
das
ss
sbb
push
jl
imul
jmp
mov
popa
(bad)
push
loop
push
outs
bsr
mov
dec
push
loopne
push
sbb
addr16
sbb
pop
add
scas
inc
pop
mov
mov
mov
inc
and
xchg
mov
sbb
gs
jp
(bad)
pop
mov
imul
xchg
lods
sub
xchg
or
(bad)
imul
ss
cli
or
push
adc
clc
inc
gs
arpl
jno
and
pop
sub
cld
popf
loope
mov
jb
ins
in
repz
and
test
pop
add
mov
xor
jecxz
into
pop
(bad)
gs
mov
or
(bad)
push
mov
cmc
call
mov
xor
out
add
movs
mov
adc
and
cmp
pop
enter
mov
inc
inc
sar
test
inc
dec
or
ror
loopne
mov
push
sti
ins
sub
xor
push
repz
push
outs
xchg
pop
(bad)
out
outs
and
int
ss
sbb
and
dec
fldl2t
pop
push
add
fs
jns
mov
sbb
mov
aad
into
sbb
aad
pop
xchg
sub
mov
adc
out
sub
mov
in
test
cmp
call
mov
cmp
cdq
push
cwde
out
add
jp
sbb
jnp
mov
mov
jno
and
and
add
jp
int
cli
sti
jnp
jbe
test
sbb
push
paddsw
push
xor
imul
jns
popa
sbb
ins
push
or
xor
(bad)
and
dec
sahf
pop
push
pop
lock
jb
jmp
fimul
xsave
and
enter
into
movs
pop
push
cmp
dec
cs
jmp
pop
rcr
ins
push
jae
jmp
aas
adc
sub
pushf
mov
ret
cld
out
mov
xchg
out
out
push
cli
fst
outs
int
or
mov
fsub
adc
push
cmps
sbb
stos
push
std
daa
jmp
mov
inc
and
pop
pop
cmps
arpl
fwait
dec
mov
cmp
pop
daa
push
sub
adc
imul
sub
mul
call
pop
xor
icebp
sti
iret
loopne
mov
in
and
shl
mov
iret
movs
inc
mov
sub
jnp
xchg
fs
ds
repz
lock
hlt
mov
xor
dec
dec
push
mov
(bad)
nop
mov
xchg
loope
mov
push
ss
jecxz
or
or
or
aam
jecxz
(bad)
arpl
fwait
mov
js
fiadd
mov
xchg
push
jle
test
push
sub
(bad)
jl
sar
adc
aaa
gs
jle
push
dec
in
vpsubq
test
push
push
mov
in
lods
aas
movs
test
inc
movs
nop
sub
sbb
movs
scas
call
and
out
push
data16
add
(bad)
aam
push
hlt
cmps
xchg
mov
inc
pop
(bad)
in
ja
sub
cmp
inc
xor
arpl
test
iret
out
mov
aam
fwait
xor
dec
add
inc
and
fist
neg
movs
test
mov
pushf
movs
(bad)
lock
jno
mov
sub
call
outs
call
nop
ss
pop
movs
adc
pop
cli
dec
jnp
pop
and
mov
fs
push
shl
setne
mov
movs
ja
mov
mov
mov
jl
movs
push
ins
call
(bad)
shr
ins
adc
cmp
enter
popf
mov
push
mov
std
mov
or
popf
mov
add
cmp
add
repnz
imul
int
mov
mov
imul
mov
pop
mov
cs
jns
adc
stos
adc
push
or
xchg
in
dec
mov
in
and
fs
jmp
outs
fcom
mov
xor
push
jnp
daa
cmp
and
mov
or
adc
ja
ret
push
clc
ins
test
pop
or
aad
inc
pushf
shl
loopne
mov
sbb
push
cmp
call
adc
xor
pop
cs
cdq
mov
mov
and
sar
imul
or
push
mov
inc
movs
fwait
shl
std
cmp
cmp
js
mov
ins
cmp
xchg
popa
enter
call
dec
daa
inc
ret
jb
cli
push
cs
xchg
cld
fnop
mov
iret
inc
scas
cmp
mov
mov
cmps
js
popa
and
lods
xchg
sbb
push
cwde
stc
leave
cmp
icebp
mov
pop
and
lock
lea
fst
jmp
int3
gs
cs
mov
std
ins
xchg
call
xchg
or
outs
mov
and
push
test
call
jmp
jge
mov
hlt
ins
inc
loope
cmps
(bad)
add
xor
mov
dec
jmp
fiadd
scas
xchg
or
ins
stc
dec
sahf
popa
loopne
dec
movs
or
aaa
pop
sub
rol
(bad)
sbb
mov
jmp
test
pop
aaa
icebp
js
sbb
ds
mov
das
jmp
and
ins
inc
into
push
pop
rol
stos
ins
pop
cmp
push
lock
push
sbb
scas
jmp
pop
stos
je
int3
enter
cs
mov
aaa
xor
jno
inc
retf
js
dec
xor
jg
pop
jecxz
or
or
hlt
shl
jmp
push
jecxz
(bad)
xchg
mov
mov
daa
hlt
xor
out
pop
pop
inc
cmp
push
stc
je
jmp
or
and
lds
sahf
mov
cdq
cdq
sbb
test
ret
push
xor
bound
sub
leave
int
data16
daa
int
pop
sbb
xor
sbb
pop
(bad)
aaa
xor
loop
loop
xor
pop
std
(bad)
adc
cmp
push
cmc
adc
test
push
jmp
xchg
(bad)
push
xchg
int
sbb
push
mov
push
dec
or
into
fist
(bad)
mov
mov
inc
test
jecxz
push
cli
enter
jno
jnp
sub
pop
dec
mov
sbb
dec
and
and
outs
sub
sbb
(bad)
xor
in
cmp
add
sar
sti
aas
mov
call
jle
cmp
and
mov
mov
push
jmp
popa
movs
fs
xor
aam
mov
(bad)
stc
pop
and
test
int
cmp
push
push
or
dec
inc
jmp
shl
mov
jo
test
mov
mov
xchg
rcl
and
sbb
push
mov
lock
out
pushfw
test
mov
mov
int
movs
mov
jne
(bad)
shl
rcl
mul
(bad)
rcl
mov
in
aaa
jbe
and
mov
push
inc
jle
aaa
push
push
inc
jmp
fucomi
xor
jae
push
ret
jb
pop
scas
dec
mov
repnz
mov
pop
int
retf
or
pop
mov
cli
mov
jmp
adc
div
xor
adc
cdq
fistp
out
stos
or
in
add
jmp
out
in
jg
push
stos
out
cmps
push
(bad)
jp
mov
push
push
lods
dec
or
idiv
imul
fdiv
sti
inc
ret
out
rcl
xor
xor
push
pop
xchg
jle
jns
cmp
fcmovnb
push
sti
cmp
lds
leave
mov
test
pop
(bad)
scas
(bad)
dec
sbb
dec
inc
mov
addr16
ror
not
out
lahf
into
addr16
out
imul
jae
fldenv
xchg
test
lahf
inc
cli
mov
and
mov
cmp
hlt
dec
inc
retf
call
pop
sub
mov
cmp
ins
pop
add
cmp
pushf
pop
jp
jl
sub
sbb
add
cmp
in
iret
jp
aam
dec
cwde
fldcw
imul
(bad)
sti
call
out
push
xchg
popf
rol
in
push
pop
je
mov
jl
mov
push
sbb
xor
call
das
sahf
xor
mov
aaa
inc
cmp
je
xor
xlat
cmp
iret
jo
sti
test
(bad)
test
adc
fsubr
push
jl
pop
cdq
test
clc
and
je
xor
cmp
jecxz
mov
stos
push
test
stos
push
lods
lds
stos
jmp
cmp
jne
mov
inc
stc
imul
repnz
mov
in
inc
fist
push
loope
add
out
aam
fld
jge
or
fbstp
adc
in
pop
cs
jo
pop
or
pop
pushf
cwde
aad
dec
jne
jnp
xor
mov
jbe
xor
mov
mov
sbb
mov
push
clc
sbb
add
xor
(bad)
xlat
jae
ja
mov
cli
sahf
sub
fs
mov
cmps
inc
stc
and
nop
mov
pushf
cli
ss
test
and
or
nop
test
cmp
mov
xchg
mov
and
in
mov
jecxz
or
daa
mov
pusha
fild
mov
pop
inc
lods
and
cmc
cmp
xchg
mov
cld
push
sbb
outs
lds
imul
sub
jno
loop
mov
jl
xlat
xchg
and
popf
gs
pop
in
or
jp
shl
or
out
inc
adc
rcl
or
dec
ins
imul
mov
or
jae
pop
(bad)
push
xchg
xchg
and
adc
push
pop
test
in
inc
mov
iret
sub
(bad)
call
(bad)
pusha
sub
ins
mov
cwde
(bad)
pop
(bad)
cli
cmc
sub
and
in
push
xlat
nop
lods
and
mov
dec
pop
lods
bound
pop
arpl
out
add
sub
dec
or
cs
jp
adc
cmps
and
in
inc
cdq
xor
das
sbb
call
iret
stos
jbe
xchg
pop
xor
cmp
mul
add
jg
xor
in
push
and
gs
fadd
xchg
ss
pop
xlat
mov
je
xchg
pop
iret
test
fadd
push
lahf
std
pop
mov
inc
rol
mov
sub
adc
popa
push
lock
cmp
hlt
add
mov
fistp
xchg
jno
hlt
or
mov
jnp
in
mov
rcr
push
ss
(bad)
fwait
push
in
cwde
cmps
lea
add
fdiv
inc
mov
ret
or
pop
out
pop
cli
mov
and
cmp
jo
movs
add
jne
outs
stos
fbld
or
imul
out
or
cmp
xor
push
or
adc
jmp
or
into
aam
adc
fisttp
fnstsw
mov
xchg
mov
push
sar
inc
ja
add
mov
xlat
jge
cli
push
xor
push
add
xor
push
push
mov
les
mov
jbe
mov
jne
test
sahf
scas
or
mov
mov
or
mov
(bad)
adc
xor
inc
aas
(bad)
sub
push
sbb
lahf
and
daa
sub
mov
jno
xchg
adc
mov
mov
mov
cmp
mov
xlat
test
(bad)
jmp
add
mov
jnp
dec
push
int3
cmp
leave
push
jb
ja
pop
lahf
outs
cmp
mov
or
inc
inc
shld
cmp
jno
jecxz
mov
loope
push
xchg
xor
loopne
and
retf
and
mov
pop
jmp
add
jecxz
pusha
ror
sti
cs
pop
inc
inc
out
into
push
jecxz
mov
int3
xlat
dec
cdq
and
jle
or
adc
inc
out
xlat
adc
pop
ror
cmp
pop
inc
or
adc
daa
jbe
repnz
gs
js
dec
sub
or
xor
in
cs
mov
loope
pop
or
xchg
push
adc
sub
clts
addr16
imul
mov
cmp
adc
mov
shl
mov
inc
dec
cs
pop
stos
push
scas
pop
rcr
xlat
pop
cmp
scas
idiv
dec
loop
adc
cs
enter
test
pop
scas
xlat
outs
pop
add
mov
push
js
jae
pop
(bad)
jns
adc
add
push
repnz
mov
out
into
cmp
pop
shr
js
not
sbb
sahf
jae
cmc
shr
sbb
test
sahf
es
repz
mov
pop
xchg
lods
sub
pop
add
mov
mov
in
mov
sub
cmp
push
sbb
jp
sti
mov
es
out
shl
mov
or
sar
in
and
sbb
nop
push
adc
sti
jbe
sbb
imul
or
xchg
jb
pop
div
jno
in
ins
enter
loopne
scas
outs
fisttp
mov
lahf
mov
data16
retf
mov
rcr
ja
cmp
add
xor
(bad)
test
pop
pop
int
mov
int
inc
cdq
jnp
xchg
cmps
data16
dec
mov
push
fwait
aad
retf
mov
fild
mov
mov
inc
pop
pop
(bad)
(bad)
mov
xchg
(bad)
jae
fnstenv
fcomp
cdq
push
sbb
push
ins
dec
out
movs
fild
push
jle
fstp
ins
(bad)
push
xchg
mov
add
data16
mov
in
xchg
neg
jae
push
sti
mov
jle
or
bound
mov
(bad)
loopne
add
pop
das
inc
shl
mov
add
sub
add
pop
ds
cmc
icebp
cmp
cmp
add
mov
cmp
rcl
nop
dec
xchg
scas
sahf
es
lds
pop
lds
cdq
xor
dec
push
retf
ret
sbb
retf
inc
mov
test
mov
mov
test
das
dec
xchg
test
mov
scas
scas
fmul
inc
inc
mov
leave
clc
ret
jmp
data16
loopne
lock
add
mov
rcl
jecxz
ss
xor
jp
das
inc
rcr
nop
jns
neg
cmp
mov
movs
popf
sub
data16
lea
pause
mul
ror
das
pop
sub
xchg
and
ins
sub
pop
jle
jb
fidivr
inc
xor
push
push
data16
inc
or
xor
(bad)
pop
mov
mov
jno
xor
and
cmps
loopne
in
mov
or
in
cmp
cdq
popf
retf
xor
add
sub
dec
jmp
hlt
ror
fwait
dec
or
cli
enter
loop
push
cmp
adc
jbe
mov
aam
pop
std
cmp
nop
adc
je
push
mov
jmp
adc
scas
and
mov
(bad)
mov
add
call
xlat
xor
sub
cmp
push
sbb
je
outs
dec
xchg
mov
into
psrlw
pop
mov
add
out
(bad)
scas
or
lds
retf
mov
pop
fsubr
mov
frstor
mov
jl
retf
sbb
dec
jmp
mov
push
mov
sbb
icebp
xor
and
call
(bad)
xchg
int
push
pop
mov
nop
adc
jle
jbe
jne
dec
loopne
pop
out
add
bound
jge
adc
or
jne
ror
fist
(bad)
or
mov
sbb
fld
push
stc
xor
mov
xchg
push
pop
mov
xchg
and
test
nop
call
outs
nop
aam
jmp
mov
addr16
ds
push
shl
and
(bad)
cmps
xor
or
ret
mov
sub
mov
lds
pop
imul
pop
sbb
sub
cmc
out
mov
cmp
add
pop
test
sbb
popa
push
mov
push
imul
loopne
fucomp
xchg
add
xchg
inc
call
adc
and
push
mov
mov
shl
cmps
fmul
push
sub
and
(bad)
outs
jne
lds
sub
mov
add
xor
adc
cmp
add
(bad)
mov
mov
add
(bad)
ja
add
jg
je
jg
adc
(bad)
pop
cwde
jmp
sbb
out
imul
jl
or
in
shr
das
and
xchg
cmps
out
dec
cmps
push
xchg
out
and
add
fistp
(bad)
mov
je
(bad)
scas
and
fistp
ja
lea
out
clc
out
es
push
(bad)
fstp
xchg
sbb
mov
pop
outs
loop
int
imul
fldenv
lock
loope
test
std
jb
ret
cld
jmp
cmp
stc
dec
or
in
push
bound
ins
fisubr
out
mov
xor
xchg
xchg
push
retf
adc
dec
cwde
xor
push
ficomp
xchg
jmp
loop
jb
push
cli
fimul
push
scas
mov
xchg
jno
jg
(bad)
mov
sbb
(bad)
dec
test
add
mov
push
loopne
out
pop
inc
jne
aam
or
cmps
(bad)
xchg
sub
pandn
into
mov
aaa
dec
lods
add
sub
cmps
call
cs
repz
push
adc
jb
lea
(bad)
jno
mov
outs
mov
mov
xchg
aaa
stc
js
icebp
adc
out
cdq
je
cmp
dec
cwde
add
rcr
(bad)
or
aas
push
ds
(bad)
dec
adc
std
adc
imul
ins
jmp
(bad)
lock
pop
jns
pop
cdq
xchg
int3
out
xchg
es
dec
imul
and
jmp
push
inc
xchg
stc
adc
retf
scas
sub
fsub
and
mov
ds
or
loopne
jbe
jae
clc
fld
push
icebp
dec
test
popf
cmps
enter
jbe
inc
push
pop
(bad)
add
jnp
dec
out
or
mov
push
and
(bad)
rol
inc
fmul
xchg
mov
xchg
sbb
or
cwde
inc
mov
inc
loope
hlt
fidivr
sbb
xor
aaa
or
mov
inc
aaa
add
jl
cmps
(bad)
hlt
push
loopne
sbb
inc
fimul
xor
inc
call
rcl
jmp
daa
jbe
movs
aas
mov
and
jmp
leave
mov
cwde
push
call
push
cmp
sub
sub
xchg
xlat
pusha
sbb
or
jge
(bad)
popa
in
push
xchg
cmp
jns
lods
retf
or
inc
sbb
les
pop
sbb
leave
xchg
mov
pusha
les
retf
adc
jno
jmp
inc
pop
(bad)
mov
xchg
into
cmps
ret
lods
imul
dec
add
or
(bad)
cmp
xor
mov
in
mov
fst
lsl
stos
sbb
jp
ficom
adc
prefetch
inc
push
shr
xchg
loop
outs
nop
jae
add
in
pop
out
push
pop
daa
ds
xchg
inc
cmp
xchg
push
lods
cmp
add
imul
sub
out
add
push
scas
sbb
shld
ins
in
add
push
xchg
and
pop
(bad)
sub
xlat
cs
dec
call
repz
lods
xor
cs
aam
or
sar
sub
clc
cmps
fidiv
outs
cmp
out
ss
mov
add
pop
ja
jo
(bad)
mov
aad
in
cmp
repnz
pop
stos
push
or
add
inc
cmp
dec
retf
sbb
cmps
adc
push
das
cmp
rol
cmp
mov
adc
mov
cmp
(bad)
hlt
ficom
outs
or
sar
xor
pop
fs
sub
mov
inc
push
jg
and
pushf
or
in
fsub
pop
out
dec
fcomp
lock
and
cmps
fwait
dec
add
jmp
js
test
inc
out
mov
out
idiv
xchg
or
setnp
idiv
xor
cmp
imul
scas
mov
xchg
push
push
fs
xor
pop
fmul
xchg
cli
or
and
fstp
cmps
shr
movs
adc
popf
add
and
cmc
push
push
(bad)
arpl
ss
dec
sbb
js
mov
push
pushf
(bad)
adc
xchg
jnp
mov
jge
(bad)
and
mov
scas
in
fimul
mov
jns
out
fnstsw
pusha
sbb
push
fwait
int3
push
daa
stos
sbb
les
sub
push
push
leave
gs
pop
push
lea
movs
in
loope
cmp
mov
and
inc
mov
sti
pop
and
sbb
and
xor
xchg
js
push
dec
fld
sub
inc
sbb
mov
pop
ret
inc
mov
in
jbe
mov
cld
mov
bound
je
jo
imul
das
xchg
xchg
sbb
xchg
movs
cmp
mov
cmp
fwait
and
xchg
xchg
inc
repnz
hlt
ins
xor
faddp
out
jne
loopne
lea
jl
(bad)
push
xor
inc
push
loopne
pop
xrelease
cmp
frstor
shr
mov
icebp
or
xchg
jg
mov
xchg
push
adc
cmp
call
in
and
neg
cmp
push
movs
es
hlt
iret
mov
shl
inc
xor
dec
adc
mov
jmp
jbe
pop
mov
inc
sub
xor
push
pop
jmp
add
int3
in
pushf
mov
cs
mov
push
mov
ja
adc
push
mov
imul
and
fbld
xlat
imul
pop
shl
sbb
out
outs
loope
fbld
pusha
pop
(bad)
mov
test
xchg
or
imul
call
dec
and
pop
jmp
mov
stos
xchg
das
add
lea
call
cmc
push
je
push
push
(bad)
mov
or
mov
push
xor
outs
and
mov
(bad)
icebp
inc
add
push
sbb
or
push
out
xor
push
imul
add
sbb
jle
xor
sub
std
(bad)
cmp
inc
(bad)
aas
movs
repz
pop
xchg
sub
sub
mov
and
add
mov
or
dec
dec
cmp
lea
sbb
int
scas
repnz
ins
pushf
inc
hlt
ins
(bad)
sar
lahf
push
sub
ds
dec
stc
cmp
(bad)
pop
add
or
dec
(bad)
cmp
ficomp
aad
in
dec
jb
(bad)
cmp
push
xor
enter
cmp
pop
daa
dec
jno
bound
loopne
mov
push
call
mov
mov
ret
call
xchg
retf
mov
out
std
sbb
mov
mov
clc
jns
inc
es
add
and
aam
fisubr
mov
lock
xchg
push
repnz
cmp
or
jnp
adc
sub
add
jbe
loopne
fisttp
jo
les
push
lahf
sub
retf
fstp
and
lds
pop
adc
dec
cmp
add
iret
xchg
xchg
dec
ss
pusha
mov
loop
push
or
mov
xor
out
adc
into
mov
jnp
adc
mov
stc
lea
add
xor
loope
ins
pop
lods
aam
ret
out
aas
imul
test
test
sub
push
sbb
test
out
push
mov
xchg
cmps
jp
fcmovbe
mul
out
and
pushf
inc
out
lods
std
sbb
or
bound
mov
cmp
sbb
inc
pop
in
in
push
adc
cmp
je
test
in
jae
dec
imul
jecxz
or
push
mov
sub
dec
sub
mov
inc
jecxz
aad
je
loop
sbb
loope
call
sub
das
int3
add
jge
add
inc
inc
xor
fbstp
popa
mov
push
je
std
in
xchg
mov
fs
mov
jecxz
sbb
data16
xchg
loop
xchg
dec
out
sub
les
push
jl
mov
adc
mov
std
mov
mov
and
test
jns
sub
aam
pop
pop
xchg
loopne
and
pushf
push
xchg
mov
mov
imul
add
test
cmp
xor
pusha
nop
or
retf
mov
push
cli
mov
mov
xor
fcmovnbe
pop
cwde
cmps
xchg
jns
or
xchg
pop
pop
popf
jmp
sub
retf
lds
or
fisub
add
fistp
in
ins
fwait
add
and
inc
mov
xchg
(bad)
mov
outs
cmps
sti
in
mov
das
clc
mov
mov
pop
mov
enter
in
push
mov
jle
mov
mov
xchg
xchg
mov
pop
pushf
daa
daa
imul
adc
cmp
scas
fdivrp
shl
pop
push
mov
fdivr
pop
adc
aas
push
and
pop
sub
sahf
inc
cmp
push
dec
lock
jp
sti
pop
jg
add
dec
pop
jne
inc
(bad)
adc
cmps
mov
pop
cmps
jge
jecxz
dec
pop
or
cld
loopne
pusha
dec
cli
push
push
or
out
stos
xchg
loopne
(bad)
mov
shl
imul
push
test
fwait
pusha
adc
mov
push
mov
rcr
retf
test
xchg
cmp
mov
fld
call
pop
inc
inc
nop
and
add
push
pop
adc
outs
inc
push
out
inc
mov
std
mov
inc
test
cdq
je
or
xchg
lods
or
(bad)
push
fsubr
jge
pop
cli
arpl
inc
iret
sub
sub
add
div
call
push
dec
inc
or
lea
sbb
loopne
stos
rcr
push
in
dec
pop
rol
mov
test
add
sbb
push
sub
push
les
loopne
jo
jp
push
fcmovu
aad
mov
arpl
and
imul
sahf
push
dec
mov
(bad)
pop
push
pop
mov
jl
bnd
rcr
xor
fcomi
mov
std
(bad)
icebp
xor
lock
sub
call
adc
pop
int3
xchg
hlt
jecxz
in
fbld
fistp
push
movs
add
loopne
sbb
test
dec
mov
aaa
iret
fadd
adc
xor
or
rcl
add
cmp
jecxz
bound
sbb
xchg
stc
add
loope
jge
cld
in
add
dec
fsubr
hlt
mov
and
sub
neg
pop
sahf
sti
out
repz
add
ror
ret
je
call
scas
das
jmp
or
push
mov
xlat
cld
inc
out
pop
test
enter
mov
push
mov
jl
and
jns
add
cdq
fisttp
and
or
(bad)
or
adc
cdq
in
pop
sbb
shr
into
aas
inc
call
mov
pop
jmp
sub
test
inc
cdq
xor
inc
adc
cmps
stos
or
cmp
jmp
data16
jmp
aas
shr
add
inc
and
mov
push
pop
jmp
mov
jge
xchg
adc
jo
pusha
add
(bad)
addr16
lods
push
imul
adc
retf
daa
cmps
mov
dec
scas
loop
fcomp
or
inc
js
and
xor
sub
les
xor
lock
stc
mov
popf
and
ret
je
fwait
mov
dec
inc
loope
mov
pop
jg
xchg
in
mov
inc
(bad)
cmps
ds
xchg
mov
or
mov
or
jg
inc
in
mov
xchg
into
leave
les
xor
fnstcw
mov
push
ror
xchg
pop
jg
inc
sbb
ret
jbe
xor
pop
das
fs
cmc
into
repz
fiadd
daa
bts
xchg
into
cmp
fwait
lds
jp
pop
inc
in
cld
outs
int
inc
push
in
mov
mov
stc
scas
jl
xor
std
inc
mov
in
xchg
nop
fwait
(bad)
(bad)
enter
retf
inc
(bad)
mov
jno
ja
ds
jno
jecxz
ret
gs
cld
out
add
fst
xlat
fs
jge
cld
push
adc
dec
js
jbe
xchg
adc
test
add
pop
(bad)
lock
fisub
stos
jmp
arpl
ins
sub
cmps
(bad)
push
xor
and
xor
dec
or
frstor
pop
cld
int
push
xchg
jmp
pop
leave
xchg
lods
std
inc
int3
in
pushf
ins
shr
mov
jg
mov
lahf
icebp
hlt
inc
sub
cmp
cdq
pusha
pushf
(bad)
inc
test
sbb
mov
and
aas
inc
fcom
jle
(bad)
loopne
inc
retf
or
mov
jb
add
ins
dec
ret
in
and
xor
popf
push
retf
enter
aas
jg
ror
xchg
ins
jbe
ja
mov
out
xor
add
mov
js
cs
pop
pusha
xor
std
adc
xchg
imul
lahf
xchg
je
sub
fldenv
int
(bad)
in
push
stc
jp
es
retf
sbb
pop
xchg
ds
xchg
push
out
jns
lods
jp
(bad)
loop
retf
mov
stos
add
add
fwait
jp
mov
jmp
mov
call
icebp
jmp
fiadd
sbb
mov
mov
mov
inc
pop
bound
push
test
inc
or
arpl
sbb
sbb
ret
or
jmp
push
ja
test
add
stos
ins
(bad)
shl
add
dec
mov
fucomip
jb
jne
(bad)
mov
mov
add
test
pop
dec
sbb
push
pusha
fsubr
fldenv
nop
mov
aad
or
leave
push
push
xchg
jb
lock
or
mov
int
lds
adc
sub
pop
stos
sbb
sar
int3
ins
pop
fwait
xor
mov
shl
mov
clc
(bad)
ss
sbb
mov
and
cld
in
mov
push
mov
test
xor
xchg
jge
and
jp
add
je
icebp
scas
inc
mov
xchg
stc
inc
lds
fisttp
mov
dec
movs
push
imul
sub
xor
sub
fldcw
sub
call
add
std
out
pop
shr
mov
sahf
xchg
push
(bad)
sbb
test
hlt
cmc
jmp
pop
add
add
lock
pop
sbb
add
push
dec
iret
mov
ds
hlt
jmp
or
push
push
push
push
add
shl
ins
loopne
sbb
nop
jb
or
mov
xlat
outs
jmp
retf
dec
adc
daa
sbb
pop
jl
cdq
push
jnp
mov
je
xor
das
addr16
inc
xlat
sub
iret
ins
fist
mov
cld
lea
mov
stc
jge
dec
repz
jg
fadd
push
mov
jne
pop
lods
xchg
and
xor
sbb
scas
pop
(bad)
clc
dec
jno
xchg
movs
sub
jb
lock
dec
xchg
push
add
jp
xlat
mov
inc
jnp
inc
fnstcw
cmps
xchg
imul
sub
inc
cli
or
sub
jmp
fist
mov
das
aad
mov
xor
out
lock
push
ins
xchg
clc
mov
dec
xchg
(bad)
test
mov
cdq
and
lock
xor
pop
inc
cmp
sub
jl
lea
retf
sub
int
inc
xchg
mov
idiv
cmp
sbb
and
hlt
test
or
cmp
mov
jns
loopne
jg
jbe
int3
das
loop
sbb
add
lahf
fcom
pop
sub
xor
mov
ja
clc
sub
ds
stc
je
dec
fidiv
or
jmp
adc
jmp
aam
sbb
sbb
iret
jno
shl
ja
in
mul
push
cmps
cmp
fld
jge
sbb
xchg
fist
scas
sbb
mov
xor
adc
xchg
add
push
push
pop
mov
ret
stos
sub
cwde
cmps
jp
and
call
jle
lods
(bad)
xchg
pop
fidiv
sbb
or
rcl
scas
mov
jne
push
push
push
or
add
cmp
inc
ror
out
lahf
and
mov
push
xor
mov
dec
sbb
clc
mov
jle
in
jmp
adc
gs
inc
adc
iret
dec
push
lock
ret
fdivr
jmp
js
mov
(bad)
push
fld
icebp
jg
mov
sbb
dec
loope
outs
push
lock
inc
outs
pop
inc
adc
adc
inc
add
add
stc
int3
cmp
(bad)
xor
lea
fcmovne
js
dec
je
add
push
aad
inc
inc
mov
cli
jg
idiv
(bad)
sahf
rcr
mul
jl
jo
or
ret
push
inc
push
(bad)
or
repz
dec
in
mov
loop
dec
push
push
push
add
enter
sbb
add
pop
push
jmp
les
in
into
fs
xchg
mov
sets
shr
add
cs
fistp
scas
iret
mov
retf
push
push
mov
stc
lahf
sbb
inc
mov
cdq
adc
xor
leave
cmc
add
jmp
popf
std
idiv
cmp
sub
cmps
std
fst
jnp
sti
jae
lea
shr
mov
jmp
add
jg
jmp
das
add
mov
pop
clc
mov
ret
dec
lock
rcl
jecxz
dec
jecxz
test
cmp
test
jp
imul
adc
aad
sub
xor
dec
dec
mov
rol
iret
fiadd
int3
add
fcomp
xor
int
(bad)
ins
xlat
fcmovne
pop
or
or
stos
mov
jmp
xor
les
cs
add
fldcw
out
pop
sar
sahf
mov
loope
pop
mov
fisub
mov
scas
push
call
data16
and
or
cld
xor
push
scas
movs
pop
loop
in
and
cmp
mov
inc
push
jmp
dec
lea
ret
movs
rol
shl
fsub
aad
repnz
retf
movs
repnz
and
(bad)
in
ret
dec
adc
add
aas
out
fcmovbe
stc
les
pusha
test
inc
push
mov
les
ja
aas
jle
adc
inc
push
(bad)
es
push
movs
jg
mov
sbb
fistp
push
mov
push
xchg
out
xor
into
iret
jns
xor
in
add
sbb
ficom
push
cmp
addr16
mov
das
repnz
jg
mov
xor
test
add
enter
fnsave
lods
inc
push
jmp
popa
int
jle
cdq
xchg
out
(bad)
xor
or
inc
dec
push
aam
test
js
inc
inc
cli
neg
mov
outs
es
lods
mov
jns
push
fucomi
push
out
lock
adc
push
in
inc
fnstsw
test
(bad)
mov
je
fdiv
mov
dec
add
and
shl
loop
hlt
jo
fmulp
mov
cmp
aam
jmp
sti
pop
push
xchg
push
in
pop
xor
js
sub
inc
add
fwait
in
jne
scas
loop
out
mov
or
jge
pushf
nop
sub
jl
sub
pushf
fistp
mov
ret
ins
xchg
xchg
in
push
jnp
pop
cdq
xor
retf
shl
mov
xor
daa
mov
inc
pusha
jge
out
adc
shl
movs
push
mov
push
and
add
pusha
out
ins
stos
xchg
jae
inc
(bad)
add
je
outs
push
(bad)
xchg
fs
fidiv
ficomp
mov
fst
pop
xchg
dec
rcr
movs
in
pop
lahf
les
xor
dec
add
push
fucomi
sub
mov
dec
jo
cmp
or
or
ror
cli
test
out
jae
mov
pushw
push
mov
push
jmp
enter
xchg
adc
fild
jae
dec
dec
add
in
mov
xchg
aaa
adc
pop
mov
jmp
aam
outs
clc
ss
mov
mov
outs
push
xchg
push
fcomp
neg
mov
and
punpcklwd
lock
xor
sbb
sahf
popa
not
popf
mov
imul
mov
or
cmp
(bad)
push
outs
pop
(bad)
pop
mov
aam
sahf
dec
mov
in
push
ret
cmps
aaa
test
das
out
pop
stos
mov
loopne
push
adc
xor
mov
pop
xchg
ss
push
pop
sbb
iret
pop
sub
loope
mov
or
jp
retf
pop
push
dec
jo
push
imul
mov
or
pop
push
sub
outs
sub
sub
call
or
ins
sbb
or
sub
test
inc
loopne
out
mov
sub
repz
dec
add
push
aad
or
ds
call
mov
(bad)
sti
lock
jbe
scas
mov
cwde
pop
pop
push
add
adc
add
stos
shl
outs
(bad)
fwait
hlt
push
retf
repz
sbb
pop
js
adc
outs
ss
push
test
cs
ficomp
movs
mov
retf
push
xchg
shr
mov
jns
test
or
pop
sub
push
cwde
sbb
mov
push
xchg
(bad)
test
loope
xlat
lahf
sbb
aam
cli
pusha
mov
cmp
fist
add
mov
les
ja
push
clc
pop
repz
sbb
popa
(bad)
xchg
adc
rol
mov
xchg
das
jbe
dec
ins
test
arpl
or
test
dec
shl
xor
ror
push
sub
jp
xchg
inc
xor
xor
in
pusha
or
hlt
out
or
dec
jo
dec
sbb
mov
mov
stos
pop
or
xchg
jge
mov
sub
adc
mov
les
popa
repnz
call
cmp
addr16
sbb
es
call
sbb
add
pop
pop
pushf
cmp
dec
cdq
push
sbb
movs
mov
jecxz
call
ficom
mov
or
lds
push
push
pop
nop
mov
(bad)
bound
sbb
sar
mov
sbb
sbb
push
add
cmp
cmp
jo
lock
fiadd
rcl
sbb
loop
jl
mov
movs
test
shr
clc
adc
mov
or
inc
xchg
out
aam
add
sub
outs
(bad)
jmp
test
leave
fimul
pop
push
cdq
dec
les
ja
add
inc
loope
push
jl
cmp
pop
aam
shr
mov
(bad)
mov
xor
icebp
inc
imul
sbb
lds
lahf
inc
stc
cmp
shl
dec
xchg
cld
ja
sbb
push
(bad)
xchg
adc
dec
dec
sbb
(bad)
xchg
out
push
pop
jg
bound
push
je
outs
aad
mov
(bad)
push
pop
fwait
xchg
sbb
xchg
cwde
nop
scas
jno
(bad)
(bad)
and
call
fstp
cwde
jne
mov
into
cmps
or
push
sub
hlt
es
mov
inc
mov
sbb
jl
es
adc
add
std
rcl
fidivr
icebp
daa
mov
jl
cmp
call
addr16
das
mov
and
cmps
outs
ret
and
mov
and
mov
mov
movs
scas
xor
xor
inc
pop
mov
push
adc
test
pop
sbb
mov
jo
data16
pcmpeqb
cmp
fwait
adc
lods
cmps
push
mov
(bad)
out
cmc
dec
pop
mov
out
pop
jge
and
imul
lock
pop
jp
popa
push
(bad)
mov
xchg
sbb
popa
retf
loopne
mov
mov
fidiv
test
adc
xchg
pop
pusha
(bad)
jns
inc
cmc
nop
push
in
jno
mul
cmp
dec
repnz
std
cdq
sti
mov
ins
sub
shl
mov
(bad)
pop
shl
das
add
retf
scas
bound
push
test
xor
add
add
int
xor
mov
mov
pop
adc
push
adc
out
clc
rcl
popf
cmp
and
add
mov
pop
jmp
add
ss
out
cmp
mov
cmp
daa
pop
and
xor
lods
xchg
mov
cmp
jne
outs
leave
movs
fcomp
mov
cmc
adc
std
inc
cwde
(bad)
shl
(bad)
int
aas
cmp
fnstenv
jl
fiadd
nop
(bad)
mov
mov
scas
xor
lods
add
jbe
ret
dec
cmp
sub
bound
dec
outs
dec
imul
loop
idiv
add
mov
popa
mov
movs
xchg
mov
mov
jo
sub
loope
in
in
inc
ficom
loop
push
(bad)
sbb
push
ret
or
mov
addr16
add
mov
fucomi
xor
enter
push
push
loopne
xchg
std
cmps
enter
mov
gs
mov
lock
and
sbb
outs
inc
mov
es
sub
pusha
push
pop
or
mov
outs
jle
jecxz
pop
scas
dec
add
mov
mov
outs
retf
leave
mov
popa
add
fcom
dec
add
mov
push
xor
add
push
pop
push
jno
sahf
mov
jmp
in
ja
dec
mov
rol
dec
aam
or
fistp
fidivr
jae
push
call
adc
imul
cmc
enter
sahf
test
call
(bad)
test
int
dec
and
and
cs
xchg
test
ficom
jle
jbe
or
aaa
shl
xlat
jnp
sub
mov
inc
pop
pop
add
imul
pop
das
jecxz
jl
xchg
inc
outs
inc
inc
into
push
pop
out
pusha
aam
and
cmc
addr16
call
cmp
outs
int
add
push
lds
int3
movs
dec
cmp
ins
test
jb
pop
addr16
clc
(bad)
cmc
jne
push
jl
sub
loope
hlt
fimul
add
fdiv
arpl
lea
cdq
adc
jbe
cld
inc
jmp
or
(bad)
ds
xor
test
dec
sahf
push
pop
inc
pushf
ja
shl
ds
dec
sbb
sbb
mov
push
in
jg
add
daa
sbb
mov
es
add
repnz
shl
cmc
jg
pop
xor
mov
daa
icebp
mov
imul
pop
shr
fcmovne
fwait
call
cmp
push
das
push
sub
in
test
push
jp
(bad)
or
and
cdq
in
xchg
repnz
dec
sub
movs
mov
mov
adc
mov
add
add
lea
not
sbb
and
fisttp
xor
stc
call
je
loop
xchg
xlat
jmp
mov
mov
js
aad
adc
sahf
sub
push
test
repnz
(bad)
mov
xchg
arpl
sub
or
adc
shl
add
cmps
jg
jp
mov
in
push
cmps
sbb
push
clc
fsubp
retf
xchg
adc
push
and
nop
out
pusha
or
leave
push
test
shl
jge
ret
xchg
jecxz
jle
clc
fisubr
adc
xor
nop
mov
call
out
mov
jns
inc
stos
wrmsr
dec
sub
(bad)
repnz
push
pop
mov
call
mov
xor
aas
inc
xchg
fxch
lods
rcl
(bad)
push
jno
pop
xor
pop
jmp
pusha
clc
outs
outs
ss
fwait
pop
aad
scas
push
stos
mov
add
sbb
mov
push
out
mov
outs
xchg
call
inc
sub
hlt
not
or
rcr
inc
daa
mov
mov
cli
push
cmp
test
jg
pop
iret
adc
inc
jmp
inc
nop
in
lods
in
sbb
mov
cmp
jge
(bad)
cmp
sub
gs
inc
dec
fdiv
xchg
sahf
shl
call
xchg
mov
aaa
push
aam
sub
adc
or
enter
mov
mov
and
mov
mov
or
add
sbb
dec
sub
xor
add
pop
add
sub
push
add
cdq
in
out
mov
sar
xchg
dec
mov
cmc
addr16
fwait
jnp
icebp
xchg
pop
mov
sbb
lds
stc
jns
fadd
fisttp
add
push
mov
push
stc
push
jge
popa
pop
idiv
sar
mov
pusha
cmp
pop
data16
cmp
mov
(bad)
loop
adc
add
adc
sbb
retf
dec
mov
movs
push
shl
add
push
mov
popf
sti
sub
imul
fs
add
jno
aaa
and
aam
or
int3
leave
xor
(bad)
xor
pop
cmc
cmp
psubw
clc
pop
gs
scas
dec
ret
aas
mov
mov
add
push
mov
mov
int
lahf
rol
and
or
mov
test
pop
mov
jb
aad
pop
in
stos
add
sub
cmp
xor
jnp
out
dec
(bad)
adc
fcom
enter
xchg
dec
pop
je
inc
dec
jl
fnstcw
div
out
xchg
mov
ins
idiv
sbb
push
ins
scas
cmps
daa
sub
fdiv
xor
mov
push
cli
enter
into
dec
jnp
pop
and
addr16
mov
ins
sbb
mov
fisttp
pop
mov
jl
xor
call
dec
and
mov
jne
jmp
mov
lahf
dec
lds
sbb
mov
sbb
(bad)
jp
in
pop
outs
jb
rcr
out
dec
sbb
add
sub
fist
movs
jle
aad
fwait
mov
icebp
mov
mov
ss
pop
push
movs
jne
sbb
add
in
lock
xor
mov
das
(bad)
out
fstp
mov
sub
xor
ror
or
adc
pop
dec
dec
es
int
hlt
push
push
sahf
xor
outs
push
es
pop
adc
js
inc
sbb
fmul
popa
jmp
enter
pop
fild
mov
scas
in
sbb
lahf
outs
shl
jnp
xchg
xchg
js
jp
aam
mov
pop
inc
stos
fdiv
xchg
hlt
xor
test
test
jmp
push
les
sbb
xor
inc
mov
in
outs
cmp
loope
in
pop
sbb
nop
and
sbb
movs
dec
xor
enter
cmc
rol
fs
ret
pop
in
popa
jge
push
loop
push
mov
mov
or
lahf
stos
dec
sahf
jl
les
not
xor
xchg
add
sub
xlat
or
outs
inc
xor
push
fbstp
rcr
push
movs
test
pop
inc
fcomp
fld
movhps
fcompp
adc
enter
inc
cmp
mov
jnp
push
int3
dec
sti
mov
es
add
push
xor
jne
cmp
movs
push
add
neg
push
jbe
std
(bad)
cli
loope
retf
frstor
cli
or
inc
jle
gs
pushf
jae
or
push
(bad)
jns
dec
push
stos
jp
fbld
adc
test
xor
jmp
xchg
in
jl
sbb
cmp
fiadd
clc
mov
pop
retf
rcl
mov
mov
(bad)
icebp
fnstenv
sbb
mov
add
or
sbb
cmp
pop
cld
xchg
ss
ins
lock
loope
arpl
cli
jg
out
jl
int
stos
lock
cmp
sub
inc
cmp
(bad)
dec
dec
jle
and
lds
mov
mov
push
outs
push
mov
cmp
sbb
xor
sbb
pop
or
fwait
loope
jp
mov
sub
push
mov
call
mov
rol
jmp
xchg
or
push
mov
push
in
mov
movs
mov
pushf
mov
xchg
shl
out
enter
test
test
add
add
mov
adc
je
dec
jo
xor
or
out
test
mov
stos
ds
shr
icebp
xlat
inc
ins
in
call
cli
int
repz
adc
icebp
inc
push
push
es
dec
repnz
test
les
shr
xor
xlat
adc
jle
ins
push
pop
bound
sbb
pusha
or
push
nop
mov
cmp
and
jg
(bad)
pusha
stos
sar
out
or
jmp
mov
aas
(bad)
inc
aam
jb
lods
loope
popa
jne
ss
mov
adc
add
xor
push
mov
ds
sub
in
fld
dec
push
lods
into
pop
cmp
in
jo
(bad)
into
ffree
adc
sar
lahf
mov
fwait
pop
(bad)
pop
sub
loop
outs
sub
push
std
mov
pop
xor
ins
fild
aam
lea
pop
add
mov
das
pop
mov
jnp
in
(bad)
aas
xchg
ja
push
push
aaa
or
(bad)
jbe
adc
iret
add
mov
sbb
je
push
push
loop
mov
test
aas
xchg
fisub
inc
mov
pop
jge
into
sbb
dec
cmp
mov
sub
mov
mov
or
add
popf
popf
ror
xchg
scas
xchg
jae
mov
push
and
jnp
and
sbb
mov
or
pop
stc
(bad)
cmps
dec
cld
dec
ins
xor
jns
jo
hlt
and
imul
shl
daa
scas
mov
pop
jge
push
les
test
mov
sbb
les
push
test
xor
lea
int3
sbb
pop
or
adc
mov
ret
cmp
cmp
mov
aam
aam
mov
sub
in
sub
scas
jp
lea
sub
jl
sub
data16
fwait
sar
cmps
add
int3
or
push
jmp
and
or
sbb
call
std
ins
(bad)
ss
mov
cmp
cmp
inc
pmuludq
jmp
out
or
adc
xchg
cmp
xor
movs
xchg
mov
xchg
dec
dec
pusha
pop
cmps
pop
mov
test
mov
into
or
ds
push
ds
xlat
sub
mov
(bad)
dec
icebp
mov
cmp
out
jmp
xchg
in
fsqrt
xor
jle
arpl
dec
fldcw
js
or
jns
xchg
(bad)
lods
iret
add
call
shl
in
dec
imul
mov
cld
es
fs
mov
jns
retf
enter
mov
clc
fadd
fdivr
push
jno
mov
or
xchg
cmp
fistp
stos
ds
dec
retf
xor
movs
fimul
jb
xor
mov
mov
mov
lods
pop
inc
bnd
push
mov
mov
imul
or
test
test
xchg
pop
jae
adc
aas
push
pop
jne
pop
add
out
inc
mov
dec
lea
bound
(bad)
jge
rol
aas
jg
ret
or
add
ficom
lods
fistp
sub
pop
and
mov
mov
add
push
data16
aad
or
or
cli
in
ins
dec
jb
ja
test
or
pop
mov
adc
mul
cmc
cmp
dec
adc
fadd
mov
push
sub
mov
push
xor
and
xlat
jns
repnz
pop
stos
mov
push
push
pop
(bad)
push
mov
out
adc
xchg
sub
or
pop
retf
(bad)
jns
std
pop
push
push
add
or
lock
mov
pop
fcmovb
pop
into
shl
sahf
lods
fcomp
or
push
sub
addr16
push
data16
sbb
aam
jmp
dec
mov
loope
push
push
imul
fidivr
xchg
cmp
mov
jnp
(bad)
jne
push
ror
repnz
push
cmp
mov
daa
inc
pop
call
(bad)
retf
xchg
shl
add
outs
mov
icebp
ins
mov
push
scas
adc
pop
mov
movs
or
push
cmps
retf
daa
xchg
in
jp
imul
mov
mov
ins
test
or
popa
test
(bad)
mov
(bad)
cdq
out
mov
fld
sub
cmp
push
adc
leave
dec
(bad)
not
lds
pop
push
push
aas
push
sub
out
push
sub
inc
inc
in
xor
push
inc
and
repz
(bad)
icebp
aas
(bad)
clc
mov
clc
cli
and
sbb
rcr
mov
fild
inc
imul
lods
shr
das
or
loop
xchg
xor
(bad)
sbb
dec
int
sar
push
or
xchg
arpl
aaa
test
cmp
retf
rcl
sahf
aam
inc
adc
fdivr
pop
pop
push
pop
js
(bad)
mov
test
sbb
lds
adc
sbb
cld
(bad)
das
call
xlat
nop
lahf
xor
dec
ins
pushf
jo
jecxz
push
pusha
or
jge
inc
mov
pusha
mov
mov
cwde
dec
scas
popf
push
add
jns
dec
shl
(bad)
inc
in
xchg
out
mov
mov
pop
pop
fldenv
mov
sbb
test
push
sub
setns
mov
xor
jg
lea
outs
(bad)
mov
jno
ds
scas
cmp
sti
sbb
cdq
jle
jnp
dec
push
push
jmp
sub
xlat
inc
in
fs
iret
inc
jg
sbb
aad
push
das
push
add
adc
add
jg
push
rcr
pop
ret
ins
div
cmp
jp
jmp
scas
mov
not
lods
push
lods
mov
cdq
xchg
not
cmp
dec
xchg
loop
fs
jecxz
jbe
push
sub
push
push
inc
repnz
push
ret
cs
ss
cli
xchg
sub
cmps
xchg
shl
test
pushf
cmovbe
paddw
jno
adc
xor
or
push
(bad)
int
ins
imul
test
pop
jg
call
call
test
(bad)
mov
outs
test
jp
jb
call
in
inc
arpl
movs
sbb
addr16
fsubr
(bad)
fldcw
xchg
or
cmp
imul
pusha
cmc
loope
and
out
pushf
pop
sub
mov
movs
and
and
ins
ins
push
sti
gs
cdq
xchg
(bad)
icebp
ret
fs
mov
aaa
dec
aad
xchg
xor
add
pop
imul
dec
outs
retf
nop
mov
je
mov
push
mov
lea
push
mov
pop
cmp
daa
jmp
pop
imul
inc
in
cdq
mov
xchg
aas
lds
add
mov
cs
mov
inc
dec
adc
push
push
dec
add
cmp
aam
mov
shr
mov
ds
arpl
ins
jl
add
pop
aad
sbb
cmp
jle
outs
or
ffree
daa
jb
loopne
push
jmp
es
les
popf
dec
sbb
fadd
in
add
scas
cmp
jne
fistp
mov
mov
xchg
out
push
mov
mov
cmp
fdiv
out
cld
inc
add
dec
xlat
into
sub
xchg
cli
or
jb
jbe
sti
out
dec
sbb
mov
stos
sbb
fstp
inc
div
gs
sbb
in
(bad)
mov
fcmove
mov
add
jne
push
scas
mov
sti
aas
in
xor
cmp
mov
in
adc
loopne
mov
jo
add
ins
jns
call
rcl
popf
xlat
dec
adc
mov
sub
inc
push
xlat
nop
adc
jne
fbld
jmp
push
outs
sub
push
js
and
je
aam
rcl
sub
push
stos
into
xchg
cmp
dec
sbb
pop
and
lds
mov
pop
mov
mov
mov
jne
jno
sbb
add
ret
int3
popa
es
xor
jmp
call
push
dec
(bad)
mov
rol
sub
imul
sbb
inc
pop
shr
fisttp
lds
fldl2e
les
addr16
loopne
(bad)
cmp
push
jae
jnp
push
ds
fs
pusha
hlt
ss
mov
add
in
out
sub
sbb
(bad)
xchg
cli
xchg
sbb
lods
xchg
imul
inc
and
dec
lds
jmp
not
sub
pop
mov
dec
hlt
stc
xor
bound
dec
mov
test
sub
mov
push
pop
sub
push
dec
cmps
cmp
(bad)
mov
jecxz
sub
outs
mov
leave
xchg
push
sbb
shr
popa
push
pop
inc
add
out
scas
ror
mov
cmp
ret
fsubr
adc
mov
aam
dec
shl
adc
scas
popf
push
and
jmp
cmp
mov
pop
inc
mov
stc
(bad)
cdq
push
stos
jae
mov
xchg
scas
in
into
and
into
retf
cmps
xor
pop
cmp
dec
pop
jmp
mov
add
dec
arpl
xor
add
xchg
js
mov
in
rcr
add
xor
mov
sbb
stos
add
xor
rcl
pop
cmp
fisub
push
pop
pop
out
call
std
mov
test
push
mov
lds
(bad)
push
lods
scas
les
leave
dec
(bad)
adc
lea
js
jl
xchg
push
jmp
frstor
aas
cs
das
xchg
push
push
inc
xchg
fst
cs
repnz
aad
mov
dec
fisub
xchg
enter
fdivr
not
jb
fisubr
rcl
pop
leave
jns
imul
addr16
sub
xor
fld
(bad)
movs
lods
loope
movs
call
ret
int3
test
aam
jecxz
shl
sub
add
sbb
push
lea
lods
xchg
(bad)
not
jno
mov
add
ret
add
mov
mov
cmc
imul
ret
scas
and
push
fstp
fdiv
inc
mov
in
(bad)
ins
push
sub
inc
sbb
xchg
and
xchg
inc
movs
addr16
into
mov
aas
and
ins
cmp
mov
adc
dec
jne
mov
adc
xchg
jbe
inc
ins
into
mov
arpl
mov
jge
push
mov
imul
in
xchg
scas
cwde
mov
fs
sbb
xchg
pop
jns
out
mov
sub
ret
std
sub
cmps
ffree
xor
or
imul
imul
add
inc
pusha
inc
fimul
dec
fcomp
cdq
xchg
ret
bound
inc
imul
cmp
bound
fld
cmc
cs
sbb
clc
pop
into
(bad)
popa
popa
adc
sbb
(bad)
dec
nop
lods
xchg
shl
call
dec
lods
loopne
push
pop
les
and
mov
cld
jns
(bad)
jge
fs
mov
test
lods
js
aaa
aaa
dec
push
and
cmps
adc
movs
lock
mov
mov
sub
aaa
mov
dec
cmp
sti
push
mov
retf
mov
lods
sub
push
push
pop
dec
mov
hlt
sub
dec
out
mov
mov
pop
lods
les
push
xchg
stc
pop
xor
mov
stos
loop
call
cli
xor
adc
and
jae
test
inc
frstor
dec
adc
hlt
pop
mov
arpl
or
sub
test
enter
rcl
add
rol
shr
xchg
adc
jo
shl
add
xor
jmp
inc
sti
jns
test
aas
fisubr
inc
mov
inc
xchg
cmp
xchg
test
push
gs
xchg
dec
pushf
xchg
mov
fcom
cmp
jne
push
out
or
bound
lahf
xchg
and
pop
cwde
jne
outs
not
pop
(bad)
jle
rcr
out
push
pop
js
jecxz
das
cmp
rol
or
pop
jbe
in
test
dec
retf
jecxz
pop
mov
sahf
inc
call
pop
push
xchg
into
dec
ins
pop
jno
fs
push
add
sub
pop
and
aas
jo
int
mov
bound
push
xchg
repz
mov
stos
sub
iret
xor
add
cld
push
pop
sbb
push
ror
inc
add
sub
aad
scas
fimul
mov
mov
inc
and
pop
mov
jmp
xchg
add
retf
lahf
outs
ret
mov
ret
xchg
test
not
(bad)
(bad)
mov
push
fwait
lods
test
push
inc
jp
imul
call
mov
adc
into
cld
cmp
out
inc
rol
pop
paddb
loopne
aad
test
jo
mov
jae
mov
inc
or
fbstp
lea
xor
pop
dec
dec
xor
outs
xchg
dec
push
aaa
mov
clc
or
sbb
and
mov
sub
pop
das
xchg
lods
ins
test
cdq
jns
cmp
shl
call
and
ret
jp
sub
xor
rcl
shl
not
(bad)
imul
je
mov
scas
scas
pop
cmp
add
cmc
call
clc
adc
mov
repnz
add
das
(bad)
repnz
cmp
pushf
fbstp
cmps
and
inc
dec
(bad)
cdq
pusha
fbld
fst
mov
add
imul
dec
outs
(bad)
leave
out
or
stc
jno
push
je
adc
cdq
dec
iret
inc
lea
nop
retf
sbb
mov
ret
imul
dec
cmps
fcmovb
fs
movq
mov
dec
add
pop
and
mov
fstp
adc
fs
lahf
in
xor
mov
add
cmp
xor
test
push
cs
les
mov
scas
movs
inc
cli
mov
jg
jmp
inc
or
mov
sub
call
imul
scas
pop
sti
enter
jb
ret
call
mov
dec
pop
and
or
sub
push
jo
adc
cwde
lods
repz
rol
in
inc
div
pop
loop
push
xor
add
xchg
in
pop
sahf
inc
pop
aas
push
nop
jge
imul
mov
pusha
push
je
mov
push
mov
pop
aad
sub
fstp
inc
ins
mov
xor
pop
pop
out
fmul
and
cmp
sub
ja
lea
jb
mov
inc
fidiv
inc
je
xor
push
imul
pop
push
jbe
fs
lods
or
dec
or
ins
lods
loope
xchg
cmp
int
movs
movs
mov
inc
das
pusha
push
mov
jmp
xor
push
call
mov
movs
or
inc
push
xchg
pop
bound
in
and
rcl
mov
push
push
fdivr
mov
jne
pop
sub
cdq
sbb
(bad)
sar
dec
push
sbb
jo
jne
and
xor
adc
cmp
imul
shr
sbb
stos
pop
inc
sbb
sbb
dec
retf
cmc
adc
push
jbe
test
ja
fadd
sub
fidiv
in
push
rol
pop
loope
aaa
lea
or
inc
cwde
test
jmp
bound
movs
mov
in
jne
xchg
mov
pop
and
sahf
ret
div
push
gs
pop
adc
sahf
or
or
cmp
jb
gs
jmp
lock
xor
pop
pop
push
out
or
dec
loop
mov
mov
clc
sbb
and
cmc
les
xchg
cld
je
test
sahf
mov
mov
sbb
(bad)
cmps
xchg
les
adc
add
outs
in
movs
aad
push
into
jecxz
fmul
mov
sub
clc
(bad)
dec
inc
mov
push
(bad)
div
pushf
mov
fstp
mov
cmp
shr
jbe
ins
test
(bad)
mov
jo
cmc
mov
jecxz
push
imul
aad
loopne
jne
inc
cmps
test
aam
mov
pop
(bad)
fimul
cmp
outs
fsub
or
dec
mov
imul
pop
retf
dec
leave
call
cmc
and
nop
repnz
sbb
and
retf
mov
int3
xchg
leave
int3
add
jb
movs
std
repz
jnp
sub
xor
push
inc
into
xchg
nop
jl
fwait
repz
movs
sub
inc
add
sub
sub
shl
out
mov
out
icebp
mov
aam
cld
jo
ja
ins
jp
rol
mov
aas
aas
and
xlat
adc
xchg
in
movsx
stos
push
(bad)
jb
inc
mov
test
cmp
sbb
lods
dec
in
pushf
fsubr
inc
aas
or
jmp
mov
aad
ja
retf
ins
pop
std
pop
adc
cmp
movs
push
jge
nop
cmp
lahf
out
ficom
ins
cmp
cmp
stos
add
clc
adc
movs
(bad)
aad
dec
fisttp
adc
push
and
ja
push
jp
(bad)
sti
push
int3
or
leave
mov
jmp
ds
in
mov
fist
dec
into
sub
xlat
ds
(bad)
adc
rcr
jno
mov
push
daa
scas
(bad)
fstp
cmc
fdivr
or
adc
jp
ror
aaa
mov
or
test
mov
fucompp
xchg
les
clc
ret
std
in
cmp
outs
sti
rcr
leave
out
adc
(bad)
cmp
adc
pop
add
adc
je
mov
mov
cmps
fdivp
push
inc
add
out
sahf
push
xchg
xor
push
retf
sub
cmp
push
push
jg
mov
or
push
mov
in
inc
pop
cs
mov
dec
test
cmp
mov
pusha
push
mov
pushf
pop
bound
in
inc
mov
sub
je
inc
(bad)
cwde
out
pop
(bad)
sub
inc
test
loop
xchg
loop
xlat
xor
adc
repnz
mov
push
pusha
mov
add
mov
mov
adc
push
dec
popa
xor
(bad)
or
into
sahf
fs
rcr
and
mov
jl
sub
sub
not
movs
imul
arpl
push
xchg
jg
out
or
add
pop
mov
ins
xor
mov
lea
jmp
jp
xchg
fld
cwde
or
(bad)
retf
out
lods
pop
loopne
push
ror
cmps
sbb
das
fwait
rcr
and
adc
dec
or
cmps
pop
sbb
dec
dec
push
(bad)
push
bound
or
push
sbb
sub
inc
cmp
lahf
add
mov
pop
mov
jp
jl
mov
cmps
xchg
xor
inc
call
sub
mov
xor
mov
add
int3
mov
fadd
in
push
sbb
js
outs
daa
cmp
fsubr
xchg
adc
out
cmp
call
cmp
mov
nop
and
cmp
sti
mov
not
repnz
push
or
inc
cmps
aam
mov
mov
cld
add
pop
int3
cmp
dec
adc
adc
rcr
xor
push
sbb
pop
push
hlt
rcl
cmp
or
xor
adc
cs
add
and
add
xor
int3
sbb
in
repz
xchg
mov
stc
cwde
jg
mov
or
retf
jle
outs
sbb
add
xor
sbb
out
fisub
lods
sub
aam
xor
cmps
pop
sar
sbb
push
ror
and
repz
cmp
fdiv
loope
js
(bad)
mov
xchg
fimul
add
ficomp
aam
sbb
add
lahf
call
enter
ficom
jbe
popa
aad
mov
and
jp
add
stos
cmp
mov
loop
dec
stos
retf
(bad)
out
push
add
mov
jg
and
mov
adc
inc
ror
mov
hlt
je
xor
xchg
inc
mov
pop
and
in
(bad)
sahf
xchg
mov
test
mov
scas
push
add
hlt
xor
push
xor
push
cmc
sbb
imul
lea
call
movs
push
fwait
adc
inc
std
dec
mov
jmp
or
push
ror
mov
adc
mov
push
adc
mov
xchg
jg
add
or
adc
imul
mov
jo
ret
mov
in
mov
in
push
arpl
add
arpl
(bad)
sbb
and
(bad)
pusha
inc
lock
inc
rcr
cmps
xchg
cmp
and
or
jb
mov
sub
test
xor
das
sub
jmp
sub
adc
stos
jae
add
xor
loopne
cmp
scas
cmp
add
jg
imul
or
data16
rol
jg
and
cmp
cwde
xchg
popa
mov
dec
lods
or
pop
adc
bnd
popf
adc
retf
dec
fadd
lds
xchg
adc
xchg
lock
bound
adc
out
cmc
cmp
xor
xor
xchg
iret
jne
dec
jmp
stos
jecxz
cmp
ds
(bad)
xlat
mov
in
out
xchg
push
mov
in
push
addr16
dec
mov
add
(bad)
xor
movs
push
outs
rcr
or
fist
inc
add
xor
cmp
arpl
cmp
cwde
push
inc
mov
mov
push
cld
mov
pop
outs
cld
jg
mov
mov
sub
inc
and
out
jne
pop
mov
fnstsw
fistp
stc
and
push
xor
cdq
xor
aaa
gs
movs
(bad)
mov
dec
mov
jmp
sub
cld
mov
(bad)
jecxz
jns
push
mov
xchg
jp
or
or
xor
or
mov
mov
ja
push
or
jae
fstp
cdq
out
cld
shl
sbb
rol
jmp
in
xchg
leave
inc
mov
push
add
push
jae
test
call
aas
sbb
mov
sahf
test
or
mov
xor
dec
stos
out
xor
xchg
daa
shr
add
mov
jmp
jbe
pushf
push
aad
adc
mov
adc
cwde
mov
(bad)
in
test
fdivr
dec
retf
push
pop
lea
jle
mov
dec
xor
dec
push
lahf
mov
outs
dec
addr16
aam
mov
push
gs
push
xor
test
xlat
jae
pop
lds
and
pop
test
xor
clc
sbb
fwait
imul
shl
or
jnp
(bad)
jg
fs
loop
sbb
fwait
and
ds
ret
stos
aas
outs
(bad)
ja
scas
(bad)
mov
jae
mov
push
push
sub
stos
scas
push
cmps
out
adc
fsub
cmp
or
xchg
mov
fnstcw
push
dec
lods
xchg
lock
jno
(bad)
sti
aad
xor
xor
fs
jmp
sbb
sbb
mov
push
dec
les
addr16
cmc
rcr
lahf
inc
push
lea
jmp
lods
jmp
sar
sbb
fcmovnu
lods
gs
test
mov
popf
mov
repnz
jnp
call
xor
cmps
pusha
and
retf
fwait
or
jmp
dec
imul
mov
ins
stos
xor
jmp
xor
dec
lds
and
bound
aad
cmp
mov
push
imul
movs
and
(bad)
movs
jmp
xchg
lods
(bad)
and
adc
shr
sub
popa
adc
sub
xlat
loop
mov
xchg
je
dec
push
fidivr
ret
sti
pop
scas
enter
mov
xchg
(bad)
fstp
inc
push
mov
sbb
add
ja
xlat
xor
cs
aad
lds
inc
or
xor
inc
fstp
scas
and
push
dec
mov
cmps
inc
in
es
pop
popa
jmp
scas
sub
mov
mov
je
popa
mov
sbb
sbb
lods
ja
outs
pop
neg
push
aam
cdq
inc
fild
fs
sbb
ja
add
icebp
fld
xchg
arpl
xchg
ja
push
pop
jmp
xor
arpl
shr
sub
shr
adc
mov
jb
or
in
xchg
cmp
sbb
ret
adc
cmp
jle
or
jo
pop
out
push
ret
mov
retf
neg
xor
leave
mov
mov
fidiv
cmp
push
inc
sbb
cmp
aaa
inc
or
in
aas
cli
test
mov
inc
ja
xlat
call
mov
sbb
imul
inc
dec
cmp
idiv
sbb
in
sub
lock
mov
lds
jbe
in
xor
adc
sub
adc
adc
mov
sub
adc
stos
mov
mov
sub
jg
mov
dec
xchg
pop
repnz
in
jnp
pushf
mov
ss
mov
outs
xchg
clc
dec
sub
popa
push
inc
push
popf
data16
inc
loopne
scas
cmp
and
and
xchg
sbb
add
ja
dec
sub
pop
xchg
xchg
in
adc
int3
and
in
ins
or
mul
mov
inc
push
adc
nop
push
inc
aas
call
push
addr16
xchg
test
ins
push
jmp
test
or
ja
sti
and
xor
sub
shr
fist
xlat
and
mov
xchg
loope
jl
xor
xor
push
es
jle
sbb
adc
movs
mov
and
je
scas
cwde
jmp
sub
pusha
leave
ins
dec
inc
pop
add
imul
ja
out
sub
sti
sub
mov
cmp
lds
mov
mov
test
dec
pop
call
pop
xor
inc
or
les
fidiv
xchg
add
data16
push
sub
sub
and
dec
inc
jmp
mov
push
xchg
stc
xor
inc
out
xchg
sbb
mov
and
in
je
rol
hlt
adc
lea
mov
fsubr
popa
adc
adc
xor
add
ja
push
fstp
pop
fdivr
inc
pop
addr16
gs
outs
shl
cmp
enter
stos
sbb
ds
cdq
push
aad
push
or
jle
xchg
jb
les
jo
aaa
jecxz
iret
mov
scas
stos
xchg
inc
cmp
pop
nop
popa
push
int3
push
nop
pop
cmps
adc
dec
fcmovbe
mov
mov
cs
nop
nop
es
daa
int3
push
lock
dec
cmp
sahf
cmc
mov
push
jbe
dec
loop
(bad)
sbb
fwait
arpl
inc
test
pusha
cdq
(bad)
jnp
arpl
js
xor
cmp
mov
push
adc
fs
xchg
pop
retf
or
das
and
and
pop
imul
push
cmp
mov
in
xchg
pop
lahf
gs
out
or
sbb
push
fdiv
in
mov
sbb
add
add
jg
outs
or
push
and
pop
pop
in
sub
lods
sbb
(bad)
shl
jp
or
xchg
stos
or
sti
pop
arpl
sahf
jl
push
ins
mov
and
movs
loope
es
ins
test
jns
jns
sub
sub
loopne
je
pop
xchg
test
add
adc
sub
inc
(bad)
xchg
adc
loop
adc
mov
lahf
jle
test
xchg
mov
jb
neg
nop
xchg
cmp
jae
pop
addr16
clc
cmp
call
out
sub
sbb
xor
adc
imul
sub
(bad)
cmp
inc
sub
movs
cmp
pminub
adc
ss
ret
(bad)
mov
jmp
int3
add
hlt
cmp
not
cmc
sub
out
ret
add
(bad)
push
mov
daa
pop
fwait
push
call
add
jle
mov
or
js
mov
jg
sub
jbe
adc
pusha
test
and
and
repz
mov
daa
xor
and
mov
aas
dec
sbb
push
repz
and
test
and
jg
aam
sbb
daa
neg
mov
adc
pop
jae
test
or
lds
or
add
sub
and
pop
or
and
iret
mov
gs
xchg
pop
cmp
in
(bad)
cmp
or
test
push
push
jnp
shl
add
or
stos
dec
adc
imul
and
out
enter
add
or
into
add
je
push
jns
pop
pop
sbb
adc
inc
jbe
add
or
and
lods
xchg
dec
jmp
cli
lods
das
mov
sbb
adc
cmc
push
mov
pop
js
mov
push
inc
out
stos
push
fmul
es
repz
jnp
pop
fcomp
stos
push
loop
cmps
mov
aaa
inc
out
ss
je
push
gs
adc
fiadd
sbb
dec
cli
pushf
out
out
push
scas
shl
dec
mov
lahf
fild
xor
aam
test
jo
mov
mov
jp
int
scas
int
bound
fstp
sbb
shr
and
jle
icebp
jle
(bad)
adc
arpl
xchg
test
xor
mov
xor
add
sbb
repnz
mov
loope
fidivr
movs
pushf
ins
cli
push
shl
push
dec
sbb
dec
xor
lock
pop
xchg
sub
(bad)
or
and
or
xchg
xchg
dec
clc
je
pop
int3
loope
and
sbb
out
inc
fbstp
call
shl
loopne
inc
and
inc
addr16
push
sub
and
daa
fdiv
ins
mov
(bad)
leave
aaa
js
mov
push
imul
cmp
mov
or
xor
mov
mov
jne
jnp
cmp
add
mov
cmp
push
hlt
xchg
mov
and
add
stos
mov
das
dec
pop
fisttp
bnd
mov
jp
push
das
jno
mov
fmul
mov
ins
aaa
jl
push
or
daa
xor
test
cmp
fld
in
out
mov
sar
test
xchg
and
sti
jbe
hlt
adc
add
mov
mov
gs
push
jle
sti
ds
xchg
sbb
pusha
lahf
sbb
retf
jmp
inc
and
inc
sbb
or
shl
shr
mov
dec
fcomp
fwait
lea
or
mov
cs
pop
mov
fsubr
in
jge
dec
fcmovnu
pusha
add
retf
mov
sbb
je
and
sti
arpl
sbb
sub
mov
inc
ins
cmp
fstp
jno
addr16
in
sub
imul
mov
pop
ror
dec
push
retf
fsubr
gs
sub
mov
xchg
mov
stos
cmps
jbe
mov
iret
add
loopne
retf
xor
add
and
sub
shl
and
clc
dec
jmp
ss
int
clc
int3
in
out
stos
cmp
popa
push
sti
mov
dec
xlat
lods
xchg
inc
in
and
fwait
pop
pop
lods
or
push
arpl
and
lds
xchg
sti
inc
lods
adc
cmp
test
mov
xchg
jno
retf
call
int
mov
pop
jnp
lock
jle
leave
movs
sbb
jmp
arpl
lock
sbb
ins
or
cmp
arpl
jne
sahf
stos
xor
adc
dec
jmp
sub
add
mov
iret
or
xchg
(bad)
pusha
daa
dec
cwde
cmc
pop
retf
push
gs
xlat
rcr
jmp
shl
push
dec
mov
push
xor
and
dec
test
or
mov
jne
xchg
jmp
pop
stos
lea
push
ins
pop
jne
test
mov
ss
enter
push
pop
data16
je
test
cmps
pop
aaa
test
mov
pop
cli
mov
push
adc
and
and
mov
in
leave
aas
lock
dec
imul
iret
sub
mov
lahf
mov
mov
pushf
fmul
out
mov
shl
rcl
cs
cld
mov
mov
ror
enter
pop
(bad)
sub
dec
adc
jmp
out
popf
sub
jecxz
sub
out
add
or
sub
enter
hlt
mov
test
popa
mov
aam
cmp
ret
adc
lods
mov
lods
in
cmp
jo
jbe
adc
enter
xchg
ins
mov
bnd
pushf
pop
icebp
loopne
and
pop
sub
es
or
or
sbb
pop
dec
pop
mov
pop
push
jmp
repnz
and
push
mov
pop
int3
je
enter
push
inc
cmp
js
jge
inc
jo
shl
pop
xor
(bad)
mov
xchg
fcomp
pop
loope
xchg
sbb
adc
iret
or
pop
es
jno
out
and
ret
xor
mov
or
dec
sbb
pop
loope
xchg
popa
pop
adc
fdiv
inc
sub
aam
push
jne
mov
out
push
stc
int3
and
mov
and
cli
jnp
pop
push
arpl
frstor
fwait
inc
pop
sbb
inc
arpl
inc
adc
test
out
adc
or
cmps
sub
cmc
daa
lea
xchg
push
push
pop
or
(bad)
cmps
xor
cmp
adc
xor
xchg
in
add
push
cmp
shl
push
jmp
add
stos
mov
dec
jmp
test
and
mov
fs
or
push
popf
sub
aas
lods
(bad)
mov
cmp
mov
movs
shl
cmps
pop
(bad)
shr
dec
popa
push
aad
fimul
lea
xchg
frstor
stos
fidiv
adc
nop
mov
sub
sbb
jo
cmp
js
fistp
mov
out
test
dec
shl
and
or
jbe
(bad)
mov
dec
hlt
sbb
adc
cmp
jo
mov
(bad)
int3
xchg
push
mov
ss
push
fild
push
dec
and
ss
mov
mov
jno
push
fwait
inc
jae
jbe
mov
adc
mov
movs
ins
xor
mov
dec
cmp
mov
leave
jg
(bad)
cdq
sbb
jne
mov
inc
mov
jmp
jae
xchg
dec
mov
mov
and
cwde
and
mov
jno
les
add
retf
xchg
mov
pop
rcl
fucom
lock
pop
stos
loop
ss
pop
push
pop
mov
aam
or
not
pop
pop
mov
shl
test
lahf
xor
cmp
fwait
xor
inc
mov
or
fld
shl
fnsave
pusha
jl
and
add
sub
add
pushf
sbb
jmp
push
and
ret
push
call
dec
cmp
sbb
into
mov
out
inc
adc
xchg
fidiv
jp
or
div
push
fsubr
sbb
sbb
(bad)
retf
out
ins
fsub
add
push
test
div
ins
pop
mov
xor
pop
mov
stc
aad
js
cmp
xchg
cli
pop
adc
mov
pop
pop
push
les
(bad)
sbb
mov
jno
(bad)
(bad)
mov
repnz
adc
adc
xchg
call
pop
pop
and
pop
mov
sbb
adc
inc
in
fwait
mov
loopne
push
aad
loop
cmp
nop
fwait
adc
dec
fadd
int
sti
(bad)
not
push
sub
es
jl
pusha
ja
sub
push
das
push
aaa
sub
pop
xchg
sub
loop
or
imul
test
xor
sub
xchg
into
mov
mov
mov
idiv
sbb
cmps
or
pusha
loopne
fwait
arpl
pop
movs
add
dec
cmp
mov
loopne
ins
aam
push
imul
in
fdivr
or
das
sub
and
xchg
sub
sti
fs
sbb
pop
sub
cmps
fwait
dec
(bad)
call
xchg
pop
mov
or
inc
dec
jnp
add
mov
es
movs
leave
test
jg
ja
xchg
ds
mov
mov
in
mov
jmp
shl
scas
call
add
(bad)
pop
xor
std
loopne
test
inc
add
xor
pusha
arpl
movs
sbb
push
movs
mov
ins
and
test
sbb
aad
jg
stc
int
arpl
jg
push
xor
adc
cmp
adc
daa
push
adc
mov
imul
addr16
or
aam
test
jge
sti
mov
mov
mov
mov
xlat
add
js
cmp
iret
mov
inc
fucomp
xchg
test
jnp
fstp
outs
inc
push
xor
lods
icebp
aam
rcr
stc
aam
jnp
jp
(bad)
test
sub
jmp
sbb
xor
sbb
mov
or
inc
outs
jmp
movs
sbb
int
sub
pop
ret
xchg
and
fwait
jp
ss
and
pop
mov
jmp
xor
in
pop
xor
push
repnz
sti
ds
jp
or
sub
mov
push
leave
or
test
mov
sbb
cmp
adc
cli
dec
mov
mov
data16
iret
ins
xchg
push
or
in
ret
mov
addr16
das
ss
inc
test
gs
xchg
push
in
xor
and
or
jg
inc
mov
and
les
jmp
mov
mov
add
shl
xchg
stos
aas
aaa
inc
mov
rcl
iret
sbb
xlat
inc
jl
(bad)
or
push
arpl
adc
add
mov
dec
sbb
mov
test
cmp
and
dec
jb
xchg
movs
fstp
call
call
stc
push
xchg
xor
std
mov
inc
mov
inc
daa
out
jo
cmc
in
or
or
mov
dec
jmp
ss
sahf
inc
out
or
or
outs
imul
fincstp
adc
and
and
jnp
lods
adc
fnsave
mov
inc
ins
jno
mov
icebp
jp
int3
std
bound
push
mov
mov
int3
in
push
or
mov
jne
(bad)
mov
jnp
fld
pop
test
ins
shr
or
jnp
pop
fbstp
movs
dec
pushf
ins
push
mov
ret
imul
hlt
mov
clc
add
add
push
imul
and
jg
sub
xor
xchg
dec
push
push
imul
call
scas
stc
add
fmul
xor
sub
or
cs
cwde
gs
cmc
fwait
pop
imul
jmp
add
xor
data16
push
popa
and
(bad)
movs
movs
fimul
or
mov
test
ja
mov
sbb
sahf
xchg
mov
pop
xor
inc
loope
pop
mov
cmp
add
clc
fnsave
scas
ror
pop
call
add
or
out
xor
jmp
adc
rcr
sub
adc
test
mov
retf
mov
xchg
mov
push
pop
sar
adc
push
jno
jbe
jb
pop
mov
jns
aad
(bad)
retf
cmp
cdq
push
test
mov
fistp
aad
mov
or
aad
xlat
pusha
or
cmp
pop
mov
lods
int
push
mov
push
and
lods
dec
int
ds
mov
hlt
xlat
in
sub
out
jb
xchg
pop
mov
add
mov
dec
cmp
fwait
inc
fstp
pop
dec
jae
or
jecxz
ins
lods
sub
mov
dec
rcl
js
fisttp
mov
pusha
xor
mov
xchg
leave
packuswb
loope
(bad)
call
mov
cli
retf
pop
outs
xor
ror
sbb
fcom
xchg
or
jecxz
push
ja
jnp
xor
sub
lods
fldln2
jo
inc
jae
(bad)
mov
shl
dec
and
stos
and
add
aam
jl
xchg
lods
push
ins
mov
mov
mov
out
cli
fbstp
test
stos
shl
fadd
movs
jae
cmps
sbb
pop
xor
push
dec
fadd
push
bound
cmp
cld
fadd
shr
mov
(bad)
test
sbb
mov
fstp
jno
jns
aas
mov
xchg
call
in
lds
or
xor
clc
push
(bad)
mov
xchg
jmp
add
daa
rcr
push
or
sub
sbb
sub
adc
dec
push
mov
sub
jae
ins
mov
sbb
add
mov
dec
cld
xchg
pusha
daa
pop
mov
add
xor
push
inc
push
add
rcr
push
enter
jge
add
cli
pop
mov
mov
jle
inc
(bad)
sbb
sub
pushf
sbb
fistp
(bad)
cmps
outs
shl
ins
fadd
cmps
pop
xor
lea
adc
test
mov
mov
xor
test
fld
mov
cmp
sbb
adc
pop
dec
mov
pop
mov
(bad)
stc
lea
jl
lods
loop
cld
je
push
cmp
iret
leave
mov
retf
inc
loop
fadd
sub
mov
addr16
hlt
clc
xor
je
mov
cmps
xchg
mov
mov
lds
fisub
mov
dec
sbb
xor
pop
shl
jge
mov
lea
jl
enter
mov
pop
or
jnp
int
and
mov
shr
sub
pop
loope
arpl
lea
cmp
jg
sbb
fnsave
fisub
je
fiadd
imul
xchg
and
hlt
pusha
fbld
sbb
jns
div
cmps
test
ins
xchg
or
xchg
lahf
jb
mov
push
(bad)
mov
adc
je
shr
(bad)
push
jo
sbb
pop
repnz
pop
cmp
pop
or
jbe
lods
mov
add
adc
adc
arpl
xlat
leave
mov
inc
nop
mov
call
mov
push
push
jno
xor
mov
add
mov
ja
xchg
(bad)
xlat
and
mov
push
or
sbb
xchg
xchg
idiv
mov
and
mov
ins
rcl
and
mov
pushf
fmul
inc
and
jl
mov
xchg
jmp
ins
mov
bnd
dec
inc
or
repz
or
cmps
xchg
inc
fidiv
shr
out
ficomp
mov
ins
and
rcl
ds
sub
dec
int
jp
jae
in
jle
data16
stc
dec
xor
and
fcom
loop
(bad)
ja
push
test
stc
sub
sti
addr16
sti
arpl
cmp
sub
shl
lahf
clc
fild
push
(bad)
jge
xor
icebp
xchg
or
inc
jbe
call
adc
and
scas
inc
push
jmp
loopne
ret
imul
movs
mov
jno
jmp
ret
or
push
add
or
add
cwde
out
jno
lods
int3
pop
pop
shl
or
ins
or
data16
outs
dec
inc
mov
xor
push
sbb
stos
sub
sbb
js
gs
nop
fcom
xlat
rcl
in
add
in
add
sbb
and
and
xchg
and
mov
pop
test
jne
mov
push
sbb
mov
sbb
fist
stc
adc
add
jo
dec
mov
and
cmp
mov
push
inc
add
mov
xchg
add
push
ja
movs
lea
inc
mov
mov
jae
sub
out
mov
mov
fcom
(bad)
jnp
push
gs
bound
out
xlat
jb
in
add
inc
push
imul
push
es
lds
sbb
sbb
xlat
and
ror
push
jbe
cmp
in
ss
and
repz
aad
(bad)
jp
shl
ja
jae
(bad)
jns
nop
hlt
inc
retf
ins
lds
stos
aam
xchg
or
xor
pop
inc
push
aaa
nop
jo
add
fistp
loope
xchg
jb
scas
pop
adc
aam
sbb
dec
ss
aad
cdq
inc
mov
in
lock
loopne
jne
jns
loope
pop
mov
mov
sub
or
or
mov
mov
lods
or
jno
imul
cmp
rcr
push
call
and
cmc
mov
call
xor
mov
ret
call
int3
mov
in
pop
fstp
stos
ins
mov
ret
mov
out
jecxz
outs
(bad)
push
mov
pop
fs
lds
aas
data16
mov
xor
les
dec
sub
(bad)
lock
jmp
fild
popa
outs
iret
stos
add
sbb
outs
out
mov
inc
f2xm1
mov
pop
and
and
out
out
push
cs
in
cs
cmp
shl
adc
int
jecxz
sbb
mov
push
pop
outs
jle
mov
lods
test
adc
xor
shl
outs
sub
(bad)
jg
ds
xchg
ss
repz
xchg
lods
fimul
push
imul
cdq
and
retf
or
scas
mov
test
jne
rol
pop
pusha
jo
mov
sbb
xor
mov
sub
xchg
sub
mov
daa
in
or
lods
push
and
fiadd
hlt
jbe
(bad)
jecxz
jl
sbb
rol
stos
popa
test
hlt
sbb
dec
pop
out
pop
xchg
cmps
inc
cld
add
and
adc
cmps
shr
les
dec
fwait
sar
rol
dec
std
push
mov
fcom
in
mov
push
hlt
retf
out
(bad)
jmp
or
test
shl
sub
scas
retf
(bad)
and
pop
iret
shl
(bad)
cmp
push
leave
aam
pop
aas
and
xchg
cmp
ds
pop
adc
ins
jp
mov
clc
pop
dec
inc
popf
lods
sahf
sub
adc
imul
imul
loopne
ja
jno
cmps
mov
dec
scas
outs
(bad)
push
jl
std
shl
ret
cmps
movs
test
and
mov
mov
push
into
loopne
daa
xchg
jno
sbb
mov
ret
inc
push
out
ins
fs
rol
xchg
dec
pusha
push
jp
cmp
fisttp
dec
xor
jns
push
mov
aad
imul
rol
add
pop
outs
pop
es
(bad)
paddsb
scas
add
les
dec
lods
mov
or
xchg
or
jmp
into
sbb
jbe
test
jmp
sub
ds
adc
imul
or
cld
dec
std
push
mov
gs
fmul
xchg
inc
out
or
cmp
and
inc
sub
mov
lods
cwde
fwait
inc
mov
sete
and
dec
test
and
dec
dec
cwde
push
mov
imul
sub
push
cli
movzx
adc
sub
ds
stos
xchg
mov
rol
pop
sub
mov
mov
test
(bad)
and
add
sub
test
sar
in
gs
inc
or
pop
in
lahf
popf
je
retf
push
leave
mov
iret
push
out
add
jbe
(bad)
(bad)
pop
jne
scas
fsubr
push
dec
add
cmps
aas
xlat
test
arpl
(bad)
pop
cmps
inc
xchg
fldenv
pop
mov
ds
mov
test
dec
movs
dec
jb
inc
rcr
loope
cmp
fdivr
mov
push
dec
mov
push
lods
sti
sbb
and
xlat
jae
sbb
fisttp
pop
or
into
loope
in
call
mov
fwait
sbb
and
xchg
push
xor
jge
add
into
add
cmc
inc
mov
push
inc
inc
adc
cli
and
in
imul
imul
mov
fimul
fs
in
ret
or
mov
mov
sub
stos
out
adc
mov
add
(bad)
fistp
pop
aam
and
xchg
cmp
jnp
xor
mov
out
(bad)
sub
int3
pop
mov
hlt
xchg
add
mov
test
int
fsubr
loop
imul
push
jo
mov
mov
bound
jbe
sbb
dec
xchg
cs
and
xchg
dec
jae
inc
(bad)
pop
aam
or
add
out
and
add
jg
int
ret
idiv
rol
stos
mov
jns
cmp
pop
xchg
add
mov
jo
or
push
enter
and
add
(bad)
enter
xor
push
fstp
sti
xchg
xor
pop
inc
call
jns
out
leave
call
test
hlt
sub
arpl
push
cdq
cmc
jge
ss
push
aad
cmp
mov
pop
sbb
sbb
mov
aam
xchg
add
mov
je
ja
dec
adc
add
xchg
dec
clc
ffree
loope
das
sbb
aam
mov
xor
cmps
dec
xor
push
imul
sub
xor
mov
in
ret
outs
ins
call
mov
jo
fisttp
std
out
mov
cdq
jns
neg
jns
loop
in
out
lods
rcr
xor
stc
hlt
stos
push
test
push
out
pop
clc
retf
sub
fcmovbe
add
sbb
inc
jo
or
pop
mov
or
add
push
mov
je
call
sbb
stos
int3
and
popf
addr16
mov
ror
mov
test
push
xor
jns
in
pop
call
hlt
in
mov
dec
push
pop
xchg
push
sub
aaa
jecxz
enter
adc
mov
cdq
mov
add
push
cmps
sbb
jb
jnp
into
ret
scas
(bad)
sahf
push
lds
sub
cmp
cmps
push
jns
push
imul
xlat
fst
jb
pop
es
xchg
pusha
mov
lods
sub
add
(bad)
cwde
loope
push
inc
adc
mov
adc
mov
pop
xchg
add
cmp
cwde
sbb
or
repnz
or
dec
dec
sbb
add
mov
adc
pop
mov
and
sbb
pop
adc
fwait
rcr
sub
inc
mov
adc
xchg
pop
clc
xchg
mov
lods
sbb
xchg
aam
mov
mov
iret
push
mov
(bad)
pop
mov
add
ret
sti
call
xchg
ins
mov
pop
lock
add
or
inc
fist
in
mov
xchg
add
or
mov
sbb
pop
xchg
fucompp
cli
sbb
cmp
xor
std
mov
xchg
test
fisubr
inc
fwait
jno
push
jmp
xchg
and
dec
mov
xor
imul
sub
leave
mov
and
les
jl
adc
into
xor
movntq
out
enter
push
retf
test
les
(bad)
clc
pop
aaa
pop
jge
pop
js
shl
mov
jp
adc
inc
test
jmp
mov
clc
mov
fld
sbb
adc
or
test
jp
pop
out
outs
shl
addr16
mov
and
cmp
mov
out
imul
ja
pop
xchg
retf
cmp
push
lahf
mov
jno
push
out
ret
dec
mov
popa
and
(bad)
call
mov
mov
dec
(bad)
or
dec
ins
jge
cld
pop
xchg
mov
mov
nop
jp
sti
(bad)
lds
inc
mov
mov
test
and
inc
xor
cwde
cmp
jmp
popa
and
popf
add
push
jl
adc
scas
jl
je
mov
add
scas
or
aam
jge
in
out
adc
mov
icebp
cdq
adc
fdiv
xchg
hlt
cmp
pushf
or
icebp
jo
js
mov
aas
sahf
add
jo
imul
cmp
pusha
arpl
mov
xor
mov
push
xchg
add
inc
or
aad
fnstcw
test
xchg
mov
pop
sbb
loop
inc
sti
icebp
adc
bound
and
imul
jle
lds
dec
mov
xor
mov
jns
iret
sub
cli
jle
movs
repz
add
mov
push
scas
lea
jl
ret
pusha
(bad)
mov
loope
push
arpl
mov
cmps
pop
push
fimul
push
and
jmp
call
in
fwait
sahf
and
in
js
imul
xchg
lods
dec
fbstp
add
into
push
out
sub
jmp
lods
inc
aam
loopne
cmp
pusha
jnp
call
mov
cmp
iret
test
mov
aas
jecxz
out
stc
fidiv
pop
inc
loope
mov
call
sbb
and
inc
jnp
adc
mov
or
pop
lods
adc
(bad)
mov
movs
out
out
aad
pop
ja
loope
ret
sub
xor
cmps
rcl
movs
fiadd
dec
pusha
retf
inc
ins
clc
ss
xor
inc
in
lahf
sub
fstp
leave
adc
scas
pop
add
gs
pop
sub
sbb
fucomp
inc
jg
pop
xchg
shl
jns
ret
cwde
jl
jmp
jb
push
dec
stc
dec
sbb
hlt
add
jmp
aaa
mov
add
rol
fisttp
and
sar
jg
frstor
dec
fldenv
ss
dec
stc
adc
test
mov
mov
retf
add
cld
retf
(bad)
cmps
retf
icebp
dec
cmp
cli
jmp
lods
jae
pop
mov
sub
sbb
retf
std
ins
mov
cdq
in
ret
(bad)
in
in
js
mov
dec
ror
mov
mov
xchg
inc
cli
pop
les
mov
and
mov
in
mov
jp
movs
aad
pop
ds
sbb
sti
add
push
cmp
push
push
test
mov
sub
jb
shl
arpl
test
xchg
jne
xor
push
sub
stc
mov
jle
into
push
int3
pop
repz
fmulp
xchg
mov
jmp
jno
mov
xchg
push
std
cmp
jns
not
xor
aaa
and
xchg
dec
iret
and
dec
aam
inc
sub
sahf
jmp
sar
xor
dec
jge
dec
iret
lea
cld
mov
test
neg
js
adc
pop
adc
out
aad
pop
es
push
xchg
call
mov
cld
ins
sbb
sahf
push
xor
inc
mov
sbb
xchg
popf
inc
call
mov
out
jae
cld
inc
mov
inc
push
inc
jp
ret
gs
out
mov
lds
push
sub
xlat
or
mov
sahf
in
jecxz
xlat
jmp
mov
aad
xchg
add
stos
sub
les
add
or
das
(bad)
xchg
push
in
xchg
std
pop
fist
scas
mov
sbb
leave
push
fldenv
mov
and
and
pop
cs
lds
jo
enter
rcl
adc
imul
fdivr
outs
lods
enter
push
mov
inc
sub
es
pop
cwde
sub
out
mov
mov
xchg
mov
dec
out
push
enter
in
inc
js
cmp
dec
movs
sti
lahf
dec
inc
jl
and
(bad)
push
out
dec
adc
call
cmp
fld
jecxz
ror
mov
inc
test
iret
mov
mov
cmp
cmp
aas
enter
pop
cmp
inc
pusha
push
cmp
fld
hlt
adc
jno
cwde
stos
and
jp
mov
push
bound
dec
cmps
cmp
dec
or
inc
jbe
cdq
and
dec
xchg
loop
or
push
cs
add
add
xchg
loopne
sahf
add
ror
push
pop
in
add
dec
and
ins
repnz
jecxz
test
outs
mov
dec
(bad)
int3
mov
adc
std
fwait
xchg
ds
sub
movs
aam
ds
mov
adc
loop
retf
fsubr
xchg
pop
pusha
cdq
int
shl
and
ror
aam
push
dec
push
sub
retf
push
inc
push
add
xor
ja
stos
mov
lds
shl
faddp
mov
cmp
dec
jge
iret
pop
pop
mov
sbb
inc
jmp
push
in
movs
and
push
in
cmp
jnp
pop
in
ins
call
add
fstp
sub
mov
ret
movs
cli
nop
push
aaa
jmp
jno
cmp
mov
mov
xchg
in
fild
stos
push
mov
mov
jecxz
repz
dec
cld
inc
cwde
sub
je
push
into
add
xchg
sub
sbb
sbb
xor
xchg
mov
dec
fcom
lock
repz
xor
mov
scas
loope
scas
mov
div
shl
fnsave
cmp
adc
and
mov
test
push
mov
cmp
loope
jle
aad
xor
loopne
push
xchg
cmc
or
xor
dec
push
mov
icebp
call
push
cli
clc
lahf
pop
aam
pop
fwait
das
add
sbb
and
mov
ja
ins
fadd
loop
cmp
xor
stc
mov
int3
cdq
hlt
ror
lods
mov
in
adc
daa
neg
iret
add
push
movs
jae
stc
mov
jmp
cmps
test
inc
lahf
mov
test
outs
aam
sbb
(bad)
xlat
sbb
shl
or
mov
nop
das
dec
sub
into
push
add
repnz
push
cli
dec
popf
inc
mov
and
sbb
(bad)
enter
in
adc
mov
push
pop
jmp
cmp
jnp
inc
fcom
mov
inc
cs
mov
cbw
inc
xchg
sub
mov
mov
aad
test
pop
cmc
stos
mov
inc
jbe
jo
push
imul
imul
cmc
jp
mov
(bad)
fsubr
out
pop
add
retf
lods
adc
sbb
inc
mov
or
or
cdq
int
adc
add
xchg
or
loope
hlt
outs
or
popf
iret
push
mov
jle
mov
std
push
lods
ror
jno
mov
in
and
jne
pushf
pop
xchg
movs
pop
loopne
mov
pop
fcmovbe
sar
pop
push
sub
xchg
sahf
pushf
nop
leave
(bad)
addr16
jb
jg
cmc
mov
addr16
pop
or
sahf
xchg
pop
or
dec
(bad)
dec
and
sbb
push
cmp
ins
pop
pop
call
stos
lods
and
dec
hlt
pop
and
scas
ds
in
aam
add
cmp
inc
mov
mov
enter
push
les
(bad)
movs
cld
inc
out
mov
andnps
add
dec
int
(bad)
data16
(bad)
cmp
ss
sbb
sub
test
call
mov
fdivp
jg
mov
fstp
test
out
ss
aaa
mov
add
scas
cwde
mov
not
js
int
pop
cmc
or
data16
xchg
mov
mov
and
std
push
scas
retf
cmp
sub
inc
lods
pop
dec
xor
or
call
movzx
xchg
fbstp
adc
scas
lock
dec
into
adc
inc
cmp
aas
pop
push
mov
stos
popa
lea
ret
je
xor
cmc
rcl
jns
xchg
inc
sub
push
popa
jne
mov
pop
add
sub
leave
pop
jnp
dec
xchg
mov
fcom
mov
cmp
add
mov
mov
(bad)
jge
out
mov
inc
inc
cmp
xchg
arpl
clc
rol
push
cmp
int3
into
enter
fidiv
cmc
in
mov
(bad)
push
sbb
loop
dec
cmps
mov
fistp
out
addr16
mov
neg
call
pop
adc
out
enter
cmp
pushf
inc
popa
retf
loop
pop
call
sbb
addr16
push
sub
ret
sar
dec
addr16
jae
cmp
call
clc
jg
pushf
add
xchg
mov
xor
xchg
shl
cmp
jp
xchg
push
popa
mov
mov
mov
(bad)
pop
sub
xchg
shl
jmp
push
mov
lods
push
cmp
lods
loop
mov
dec
xchg
pusha
cmp
cmp
scas
scas
outs
fcomp
add
jns
pusha
out
std
stc
push
mov
jmp
hlt
adc
mov
inc
popf
gs
in
imul
aaa
sub
mov
dec
add
cmp
retf
push
lds
scas
pop
inc
xchg
push
cmc
inc
inc
test
mov
cdq
enter
add
repnz
dec
(bad)
fsubp
cmp
and
xor
jmp
neg
retf
imul
(bad)
ja
sub
js
fcomip
mul
sub
inc
push
in
push
jp
mov
sub
gs
lea
sbb
aaa
xchg
cmp
outs
rcl
lods
jae
mov
ficomp
fs
dec
mov
mov
or
cdq
xchg
scas
loope
test
ficomp
jecxz
push
ins
jmp
imul
add
cs
sub
ret
int
mov
aas
jo
push
xor
xchg
gs
fwait
std
arpl
sbb
mov
mov
mov
mov
mov
sbb
cmp
retf
jg
cmp
xchg
push
fnstsw
in
and
cmp
mov
cmp
scas
or
lea
in
fidivr
dec
movs
dec
push
(bad)
inc
std
cmp
cmp
jbe
cmps
pop
pop
je
mov
xchg
jl
es
popa
jl
aam
imul
and
pop
dec
adc
fcomp
div
dec
ds
push
std
sub
aas
call
std
and
je
bound
push
push
dec
sub
push
mov
jecxz
cs
lds
lock
pop
jns
ror
xchg
ja
inc
rcl
adc
ja
adc
dec
add
arpl
movs
cli
mov
mov
mov
call
jmp
add
dec
mov
xchg
(bad)
jmp
iret
add
xlat
in
scas
jmp
or
xchg
mov
cmps
retf
(bad)
rcl
and
sti
cmps
call
(bad)
out
fs
adc
sub
in
rcr
call
popa
cmp
fcom
mov
push
aam
push
aam
inc
sar
mov
xchg
cmp
les
imul
shl
stos
dec
mov
jnp
mov
mov
and
mov
inc
in
aam
ja
push
ret
add
push
ret
fst
or
adc
jbe
cld
out
mov
js
ja
and
(bad)
mov
int3
sbb
push
cli
xchg
bound
inc
pop
adc
test
retf
mov
movs
cmp
retf
es
jo
mov
pop
frstor
not
popf
gs
scas
xchg
push
outs
(bad)
xchg
test
out
loop
pop
xchg
pop
addr16
test
jo
pop
test
pop
aam
cwde
or
fs
sbb
into
mov
and
adc
add
data16
in
ins
pop
or
les
repz
xor
and
and
mov
lock
adc
jae
cmps
jl
test
jmp
scas
loopne
pxor
les
ss
pop
rol
hlt
mov
imul
ins
test
imul
mov
ret
imul
stos
enter
or
push
mov
daa
jne
xchg
xchg
out
sbb
icebp
mov
lods
sbb
in
push
ins
mov
test
cmp
ret
mov
xchg
inc
pushf
xchg
add
push
jg
pusha
mov
(bad)
dec
(bad)
mov
fxch
js
gs
dec
push
mov
daa
xor
(bad)
mov
stos
jo
pushf
sbb
retf
les
and
mov
jp
push
push
retf
jnp
and
jg
int
int
int3
imul
add
ins
push
mov
mov
loopne
js
xchg
dec
imul
sub
mov
adc
fs
hlt
lahf
mov
or
popa
mov
(bad)
aas
pop
and
push
xchg
xchg
(bad)
xor
or
test
out
xlat
lea
lds
push
mov
int3
fisub
test
lods
dec
adc
adc
push
mov
fwait
lods
jle
pop
inc
cdq
pop
dec
add
retf
loopne
mov
and
inc
repnz
test
pop
sbb
or
(bad)
xlat
lock
xchg
mov
mov
nop
ret
lods
not
ds
sbb
sbb
dec
pop
cld
pop
sbb
pushf
sub
jge
mov
out
sbb
pop
shl
add
lods
dec
std
test
cmp
test
mov
dec
pop
shr
mov
fwait
imul
xchg
mov
cmp
xor
add
hlt
and
adc
xchg
dec
mov
sbb
inc
bound
cli
call
push
inc
inc
sub
pop
mov
xchg
loope
dec
out
scas
adc
sub
cmps
sbb
popf
scas
or
div
outs
push
sub
loope
cmp
movs
shl
xor
jb
fcmovbe
ret
outs
inc
xor
(bad)
sub
mov
or
push
sti
ret
(bad)
adc
mov
stos
cmp
pop
xlat
sub
pop
jp
fst
sub
adc
fldenv
mov
rol
xor
shl
mov
into
pop
(bad)
(bad)
imul
dec
out
test
pushf
dec
fisttp
ret
jge
inc
(bad)
cmp
push
sub
(bad)
xor
dec
jmp
fisttp
out
jns
jb
xchg
test
mov
outs
std
ficom
push
adc
or
mov
test
jl
adc
(bad)
add
xor
sti
sub
inc
and
outs
sub
sub
ins
scas
mov
dec
mov
fsubr
ret
(bad)
and
(bad)
movs
mov
inc
jnp
loopne
push
xor
pop
push
push
test
imul
xor
ins
arpl
push
xchg
iret
or
ins
(bad)
jg
sub
stos
ret
jp
pop
jb
push
scas
or
inc
mov
cmp
adc
(bad)
add
(bad)
fcomp
(bad)
aas
mov
add
pop
sbb
sahf
fadd
repnz
cmp
and
ins
or
mov
jmp
jae
or
mov
rol
pushf
loop
cli
inc
popf
sbb
fsubr
fidivr
sbb
or
repz
jae
inc
jecxz
and
fld
mov
jl
jp
sub
xchg
mov
loopne
cmp
mov
add
test
sahf
popf
mov
movs
and
and
xor
and
sub
inc
mov
sbb
inc
jmp
sbb
aaa
int3
mov
scas
fild
iret
or
jmp
xchg
mov
movq
and
cmp
sbb
into
push
out
aad
stos
stos
mov
dec
or
rcl
cld
repnz
jne
ss
jl
dec
sbb
bound
pop
rol
sub
jb
retf
(bad)
fucom
lahf
or
sub
adc
sub
push
adc
xor
xor
shr
mov
sub
sub
popa
ins
test
ins
sti
mov
in
mov
xchg
jmp
adc
mov
nop
sub
mov
int
dec
dec
sub
fbstp
into
lds
pop
mov
add
cdq
sbb
inc
test
arpl
out
in
jns
sbb
mov
xor
fidiv
ins
(bad)
cmps
shr
dec
out
fist
jbe
mov
retf
cmp
xchg
adc
pop
aad
retf
fbld
jp
ja
jle
lock
pop
idiv
ins
ffreep
test
mov
lock
popa
xchg
lods
hlt
(bad)
repz
push
pop
or
push
(bad)
rcr
sub
push
cmp
push
ret
push
adc
jmp
xlat
dec
mov
movs
xor
jmp
jmp
aam
imul
cld
dec
mov
mov
xchg
adc
push
mov
or
xchg
ins
push
stc
ret
and
ss
out
xchg
sub
sub
test
jg
sub
icebp
aaa
loopne
rcl
pop
ins
movs
rcr
xchg
std
mov
leave
xchg
add
dec
xor
lahf
adc
mov
addr16
mov
mov
test
repz
pop
and
lea
mov
ds
test
cwde
(bad)
into
push
repnz
add
imul
data16
mov
cmp
jmp
inc
adc
ror
and
fisubr
iret
mov
dec
pusha
add
lock
mov
mov
xor
mov
ret
xchg
call
push
xor
pop
pop
lea
mov
mov
mov
mov
dec
pusha
in
in
mov
adc
ins
imul
(bad)
cmps
push
arpl
movaps
adc
ss
repz
fstp
mov
test
sub
jmp
loop
shr
mov
outs
sub
out
mov
cmps
les
call
jge
pop
and
lock
adc
push
mov
in
(bad)
fild
pushf
hlt
xor
jns
fs
bound
lock
pop
cmp
jge
cmp
stc
shr
stos
(bad)
xor
adc
xchg
ss
push
push
mov
mov
les
xor
xor
inc
mov
push
leave
ja
iret
arpl
push
pop
aam
ja
xchg
add
lahf
push
pop
and
jae
cmp
int
mov
pop
jae
xor
and
lods
retf
jne
test
push
and
mov
push
clc
mov
out
hlt
ins
jmp
scas
sbb
int3
test
mov
mov
push
nop
pop
cmp
sti
sbb
fcmovnb
pusha
call
jp
imul
ds
aam
jl
xchg
outs
jns
push
cmp
xor
sbb
cmp
daa
outs
(bad)
(bad)
addr16
xchg
jne
mov
push
into
hlt
in
push
iretw
fnstsw
inc
repnz
push
xor
out
scas
sub
lods
adc
pop
sub
sti
es
aam
test
jne
push
inc
dec
stos
jnp
inc
xchg
scas
addr16
mov
scas
xor
sti
imul
and
int
in
cli
dec
(bad)
out
jne
mov
mov
movs
ret
scas
lea
sahf
fist
jmp
sti
and
sub
push
xor
std
stos
mov
push
cmp
fs
and
ins
push
and
jo
sbb
sub
repnz
mov
pop
ins
in
hlt
test
shr
push
xchg
gs
sbb
bound
dec
test
mov
xchg
(bad)
das
or
xchg
xchg
xchg
loopne
es
ins
popf
sub
xor
or
push
fcom
add
cmp
movs
mov
and
retf
xchg
dec
mov
and
mov
imul
movs
mov
stc
ins
call
mov
sub
xor
fdiv
dec
jecxz
or
xor
js
mov
dec
mov
push
jmp
inc
xchg
ret
add
xor
pop
fs
bswap
push
mov
jle
or
bound
jnp
add
dec
in
(bad)
jecxz
dec
mov
mov
pop
push
scas
xchg
sbb
pop
(bad)
aam
push
cld
aaa
jbe
add
adc
out
idiv
mov
(bad)
stc
sbb
push
adc
into
push
(bad)
xchg
and
retf
dec
cdq
sbb
mov
push
mov
movs
aaa
add
mov
aaa
js
or
pop
mov
rol
imul
dec
xchg
mov
fs
pop
xchg
push
stc
sub
xchg
(bad)
ror
pop
adc
(bad)
into
pop
push
lods
fwait
lods
cld
sbb
dec
cmp
xchg
clc
sbb
ins
and
aaa
add
cwde
into
xor
ja
xor
push
aaa
retf
out
mov
mov
sub
(bad)
and
jo
rcr
std
mov
jle
out
inc
push
inc
mov
pop
lock
iret
es
sbb
dec
inc
jb
(bad)
cmc
push
aaa
movs
mov
loope
add
push
test
jmp
jp
rcl
inc
dec
pop
mov
fcom
pusha
pop
jl
rcr
inc
pusha
and
push
mov
xor
push
in
push
fidiv
daa
pop
dec
jns
je
jno
and
or
push
shr
shl
in
popa
cld
inc
push
add
mov
fs
jmp
retf
retf
sub
stc
repnz
int
ds
or
mov
fiadd
fwait
inc
fs
xchg
iret
add
fld
push
pushf
clc
and
test
sub
mov
pop
int3
(bad)
mov
jo
mov
jp
jb
jns
and
movs
popf
ret
push
nop
call
mov
jg
scas
jecxz
out
enter
jl
sbb
adc
jne
pop
xor
loope
add
loopne
push
xor
and
stc
fisttp
fdivr
jne
js
ins
push
jns
or
lea
outs
mov
lahf
dec
push
add
mov
sbb
ins
and
jle
or
cmp
adc
out
cmps
jno
lods
ja
mov
inc
cmp
das
and
mov
aad
xor
repz
retf
repz
movs
sbb
cmps
bound
inc
mul
stos
mov
mov
cmp
imul
push
std
xor
or
cmp
sahf
pop
in
out
shl
(bad)
cld
push
push
inc
xchg
sub
pop
push
mov
mov
rcl
add
sbb
mov
mov
jle
cmp
xchg
bound
xchg
pushf
cwde
cs
rcl
fcomp
(bad)
mov
or
lods
lock
dec
ret
sub
cmp
inc
xchg
xchg
add
pop
call
mov
push
movs
mov
lods
dec
fisubr
ins
or
cmps
test
jmp
rcl
mov
rcr
fstp
daa
ror
push
mov
cmp
xchg
add
sub
cwde
lock
sar
std
dec
or
jae
repnz
jmp
out
faddp
data16
add
jb
aas
lods
jmp
jl
test
cwde
ss
daa
(bad)
fmul
cmp
ret
jmp
sbb
fs
pushf
mov
enter
jno
ja
mov
(bad)
push
dec
popf
inc
adc
movs
sbb
dec
jb
jbe
test
fidivr
cwde
test
xchg
jge
xor
mov
adc
push
pop
icebp
scas
mov
and
lock
lea
sub
inc
enter
js
inc
pop
je
lahf
mov
fs
leave
scas
gs
retf
ins
fistp
(bad)
in
int
mov
retf
inc
pop
jb
scas
mov
jns
sahf
xor
shr
pmulhuw
push
shr
mov
cmp
add
out
push
enter
neg
push
popa
shr
inc
add
ins
xor
xchg
scas
push
rol
cs
and
sbb
xchg
mov
push
out
adc
and
aad
add
aam
pop
(bad)
aaa
iret
mov
repz
rcr
ds
add
mov
cdq
cld
cli
push
mov
and
and
ret
clc
clc
fild
fisub
ds
jmp
lods
ror
push
xor
and
test
adc
(bad)
mov
shl
addr16
gs
cmp
mov
push
push
sbb
adc
lock
push
add
repz
and
loope
dec
jae
loopne
jg
mov
or
mov
adc
nop
mov
iret
xchg
xchg
cmp
push
push
ins
dec
xchg
push
dec
pop
ins
pop
lods
call
call
jl
and
jmp
pop
pminub
inc
fninit
shl
lds
cmp
shr
nop
icebp
add
(bad)
mov
std
push
out
retf
and
jecxz
add
sbb
pop
int
jecxz
jno
push
adc
iret
push
retf
cmp
dec
add
jp
or
sbb
jg
push
xor
dec
aad
jns
mov
xor
cmp
adc
pushf
lahf
cmp
pop
jns
jmp
mov
fistp
xchg
jge
sbb
test
stos
dec
inc
xor
scas
sub
push
mov
in
jle
retf
dec
lock
aaa
cmp
mov
sub
cvttps2pi
ins
lods
fist
pop
push
jns
dec
ret
sbb
add
cmp
daa
imul
sub
jl
dec
jns
jg
inc
packssdw
dec
ins
pop
(bad)
cmp
(bad)
push
inc
mov
(bad)
mov
scas
rol
and
cwde
dec
push
fst
push
sub
cmp
jle
cmp
ds
test
xchg
mov
cwde
repnz
push
pushf
fwait
test
add
push
xchg
push
add
shr
dec
leave
pushf
sub
movs
xor
jp
ins
sub
test
xchg
mov
dec
test
inc
mov
lahf
pop
aad
pop
add
imul
cmp
dec
xchg
pusha
dec
inc
mov
pushf
add
push
sbb
and
daa
mov
jne
push
mov
adc
cmp
scas
inc
push
cli
idiv
test
xlat
jae
ja
fwait
xchg
mov
test
dec
mov
mov
push
sbb
scas
or
sbb
mov
push
mov
push
iret
sbb
mov
add
jnp
and
cvtdq2ps
mov
adc
scas
inc
int3
test
gs
call
cmps
imul
cmps
stos
mov
retf
out
into
jg
mov
and
mov
popa
cld
pushf
loope
loope
push
in
rcr
ins
shl
scas
or
xor
fnop
in
jae
pop
pop
push
push
cmp
mov
sahf
mov
loope
xor
(bad)
pop
out
mov
adc
stos
xchg
icebp
and
xchg
add
mov
adc
ficomp
outs
addr16
test
fst
lds
fwait
ins
and
sub
mov
or
cmp
leave
es
push
xor
pusha
jae
and
xchg
pop
imul
or
rol
add
dec
push
test
outs
xchg
fiadd
dec
dec
in
je
sub
pop
xchg
mov
and
data16
pop
pop
sub
aaa
(bad)
jne
mov
shl
sahf
cmc
loop
xchg
ja
test
sub
sub
push
movs
jp
sub
sahf
adc
lea
ftst
push
or
stc
xchg
jecxz
iret
push
jp
mov
test
sub
sbb
cmp
ds
mov
mov
cmps
jle
sub
cmps
lods
and
mov
loopne
ror
push
mov
les
mov
std
js
sbb
les
or
jmp
pop
cmp
jns
mov
aad
into
adc
lahf
iret
fimul
xchg
push
pop
pop
or
bswap
scas
cld
add
and
push
repnz
lods
sbb
rol
pushf
adc
push
fidiv
pop
mov
inc
rcr
scas
jno
jmp
adc
dec
adc
fcomp
pop
sahf
retf
jae
bound
inc
dec
mov
xor
call
add
pop
xchg
call
dec
push
fistp
push
loope
fisttp
fisub
jl
dec
cmp
jle
(bad)
ins
dec
scas
pmaxsw
pop
sub
stos
popa
dec
fcom
sbb
cmp
xor
mov
ficomp
pop
inc
jmp
(bad)
js
js
outs
cmp
mov
jnp
add
std
adc
lods
cmp
cmc
jg
mov
xor
jae
sbb
mov
push
fild
div
add
pop
jbe
xchg
jb
ret
clc
shr
imul
shl
inc
outs
mov
je
gs
int
push
fucom
cmp
fcom
neg
aas
pop
sar
in
in
cmp
inc
(bad)
shl
shl
cmp
adc
call
ss
mov
imul
int
xchg
jae
sub
mov
and
mov
mov
inc
cmp
push
inc
lea
aad
sbb
fadd
stc
jmp
inc
adc
cli
jmp
stc
jg
jb
sub
aaa
adc
xchg
mov
sub
pushf
les
sbb
ficomp
fwait
mov
pop
ins
mov
inc
cmp
outs
add
pop
jmp
inc
add
enter
mov
adc
arpl
mov
inc
jge
mov
jb
fnstsw
dec
pop
xchg
mov
stc
dec
xor
in
and
sub
cwde
mov
mov
pop
mov
aaa
xchg
scas
daa
iret
mov
push
imul
mov
cmp
movs
xor
pop
xor
pop
pop
jmp
sbb
dec
mov
jmp
mov
xor
pop
cdq
ret
or
sub
aas
mov
ins
loop
dec
(bad)
adc
jg
add
jne
imul
cmp
xchg
mov
aaa
mov
xchg
sub
test
push
shl
inc
jmp
in
push
jb
fs
mov
scas
mov
enter
les
jmp
fdivrp
call
adc
jle
leave
or
je
pop
cmc
es
sub
and
mov
fisub
pop
jnp
xchg
stc
mov
adc
lods
mov
fmul
movs
push
(bad)
cli
stc
dec
mov
in
sub
pop
mov
adc
xchg
cmps
sub
adc
pop
adc
jae
lea
xlat
das
mov
pop
popf
lds
rcl
push
adc
and
pusha
mov
inc
push
lock
or
cmps
neg
cmps
popa
push
mov
test
addr16
mov
and
sbb
cld
test
aas
lods
mov
sub
or
ins
pop
pop
adc
test
jecxz
and
in
aam
and
and
lods
push
push
xor
sub
or
mov
outs
cmp
ret
xchg
adc
mov
xchg
add
fcmovnu
into
sar
mov
or
popa
std
lahf
retf
inc
aaa
shl
and
sbb
(bad)
(bad)
ins
stc
test
mov
in
and
inc
(bad)
xchg
outs
enter
fcomip
lahf
or
pushf
leave
pop
sahf
hlt
fstp
int
ror
int3
push
data16
addr16
or
mov
cdq
addr16
ins
push
(bad)
xor
dec
add
xchg
(bad)
aad
sbb
enter
ss
cdq
inc
scas
jb
xor
inc
popa
jmp
cmp
rol
jo
mov
push
cdq
add
cmp
enter
fwait
cmova
(bad)
jp
sub
mov
es
cmp
(bad)
push
mov
dec
mov
push
mov
scas
inc
jns
and
ins
ins
mov
cs
mov
mov
pop
mov
out
cdq
mov
xchg
cmp
cmps
cli
mov
add
lahf
cmp
jmp
jp
add
xchg
adc
fcomp
sub
aad
lods
(bad)
movs
jnp
mov
call
xchg
daa
jmp
cdq
movs
aas
push
add
jmp
ja
fbld
sub
jmp
push
mov
jnp
aam
sbb
sub
jmp
mov
das
adc
(bad)
sub
(bad)
xchg
adc
sub
adc
mov
add
sub
lea
rol
jne
mov
lock
mov
cwde
or
addr16
cmp
test
jg
aad
push
call
dec
dec
popa
repz
out
mov
retf
xor
cmp
add
dec
pop
xchg
stos
aaa
push
push
jmp
into
hlt
sbb
retf
int3
sbb
js
jns
ins
mov
fdiv
lea
pop
(bad)
(bad)
jmp
loopne
mov
and
sub
xor
(bad)
mov
mov
test
push
mov
xchg
mov
and
jl
lahf
lds
xchg
mov
jg
pop
loope
adc
inc
popf
jne
pop
pusha
xlat
(bad)
cmp
add
jl
je
or
xchg
ror
add
popa
int
add
jecxz
aas
pop
(bad)
call
div
sub
arpl
add
jl
leave
test
push
mov
out
and
mov
push
stc
lds
dec
rol
and
xchg
inc
dec
xor
movs
pop
cmp
inc
xlat
xchg
add
stos
push
(bad)
sub
ret
inc
(bad)
cwde
pop
das
mov
out
popf
js
lahf
neg
ror
mov
cmp
mov
out
sub
and
into
mov
pop
pop
loope
and
mov
xor
pop
(bad)
hlt
retf
adc
lahf
or
retf
or
sbb
or
jne
imul
shr
nop
mov
sub
jb
cmps
push
loopne
jecxz
aad
cmovb
ja
sbb
inc
add
mov
out
jmp
adc
inc
cli
rcl
repz
sti
imul
push
cmp
dec
js
out
cmps
cmp
jo
out
sub
adc
inc
jl
lahf
dec
adc
cld
sbb
inc
pop
mov
adc
mov
push
mov
test
syscall
add
mov
out
adc
mov
and
mov
add
fcomi
imul
iret
pushf
xchg
into
stos
mov
cs
xlat
mov
mov
cs
test
addr16
ja
arpl
lock
inc
loope
outs
(bad)
hlt
xor
dec
jge
stos
imul
pusha
push
imul
or
xor
and
loope
mov
cmp
dec
int3
mov
jle
xchg
gs
mov
aas
leave
cmp
mov
popf
pop
aad
jbe
std
stc
and
or
test
add
mov
and
pushf
cmp
sbb
rol
lods
pushf
ret
or
clc
test
jmp
pop
sbb
adc
(bad)
cld
retf
das
mov
fcomp
popa
sbb
mov
adc
pop
(bad)
retf
lods
mov
sbb
pop
mov
mov
jg
(bad)
xor
es
sub
push
in
test
pop
not
in
loopne
mov
movs
(bad)
xchg
and
mov
fnstsw
adc
xchg
push
fcom
xlat
pop
jno
imul
div
daa
retf
cmp
repz
aaa
jmp
cdq
loopne
sub
loope
jb
jmp
push
mov
sub
ret
ror
jge
imul
jl
mov
mov
neg
xor
(bad)
mov
sub
cmp
push
sbb
cmps
mov
pusha
adc
scas
mov
lds
loop
scas
daa
push
call
sub
sub
stos
or
adc
push
push
mov
out
and
jp
ret
sub
mov
fst
mov
lods
sub
jmp
xor
in
outs
stc
mov
cmps
inc
cs
(bad)
cmp
nop
stos
mov
jge
pop
inc
je
icebp
lods
xchg
rep
stos
mov
test
jle
iret
retf
mov
pushf
add
dec
enter
loope
pop
ficom
pop
mov
fcom
mov
add
(bad)
call
and
dec
(bad)
loopne
jle
data16
pop
lods
push
cmc
push
jo
or
push
fist
mov
pop
sti
call
js
pop
cmp
and
rcl
cmp
xlat
(bad)
xchg
push
loopne
dec
ror
mov
mov
dec
(bad)
jl
ror
idiv
movs
push
mov
(bad)
jg
and
rcl
dec
adc
cmp
and
jge
push
inc
test
mov
js
jno
mov
sbb
ret
clc
loope
mov
in
and
dec
stos
fs
clc
and
cs
cs
or
out
cmp
and
ret
out
lahf
or
adc
inc
movs
or
hlt
les
call
mov
xor
sbb
inc
or
adc
addr16
inc
lods
ins
inc
icebp
mov
cmp
xchg
jl
test
hlt
sub
push
push
in
xor
jl
shl
retf
sub
ins
push
and
mov
(bad)
and
inc
mov
dec
push
cmp
repnz
mov
sbb
push
cmp
push
mov
in
idiv
push
and
adc
rcr
jae
in
dec
lock
sbb
dec
pmulhw
test
xchg
in
std
test
sub
adc
sub
cmps
(bad)
adc
jnp
mov
sbb
std
dec
repz
jmp
xor
or
or
adc
xlat
fcom
dec
mov
bound
xchg
fcomip
shl
mov
push
jp
and
dec
sti
lahf
fmul
aad
sti
jno
jge
je
daa
cld
jp
push
jl
clc
mov
rcr
fisubr
dec
push
mov
add
lock
sub
sbb
jnp
sti
aam
add
popa
pop
xor
cmc
mov
(bad)
jmp
xchg
pop
cdq
mov
stos
and
test
lock
cmp
mov
xchg
jmp
push
call
fwait
outs
bound
push
inc
pop
inc
xchg
push
fldcw
or
jmp
(bad)
mov
push
mov
jl
xlat
push
sub
es
shl
mov
xchg
xlat
xchg
dec
sub
rcr
jbe
mov
clc
cmp
call
(bad)
dec
data16
enter
(bad)
push
mov
xchg
jmp
mov
mov
maskmovq
neg
sub
das
add
fistp
or
jnp
dec
push
call
aas
data16
aaa
xlat
xchg
lea
fcomi
inc
pop
movs
jns
int
imul
fwait
add
pop
pop
shr
movs
add
fwait
mov
(bad)
mov
jmp
xchg
pop
jno
adc
push
inc
ds
retf
sbb
aas
fidivr
cmp
jge
push
int3
(bad)
adc
cs
pop
out
xchg
sbb
cmp
mov
fwait
jae
out
push
mov
shr
(bad)
sub
mov
xor
(bad)
sub
ss
adc
les
push
jmp
add
shr
push
(bad)
js
mov
pop
dec
add
cmp
dec
jmp
ss
dec
js
cmps
aam
push
push
test
xor
jne
in
xchg
clc
lods
push
and
jno
rcr
xor
(bad)
pushf
and
add
movs
inc
das
adc
imul
pop
mov
dec
xchg
pop
aas
mov
sub
outs
ret
xchg
ss
arpl
pop
add
rep
repnz
aam
sub
and
call
push
jae
std
mov
(bad)
dec
lods
xor
(bad)
xchg
aad
xchg
cdq
jnp
(bad)
popa
xor
and
push
dec
xchg
mov
jbe
repnz
pushf
cld
dec
(bad)
push
sub
jle
and
xor
mov
retf
mov
cwde
push
add
pop
sahf
and
or
and
or
jmp
cld
or
mov
push
mov
jbe
dec
ret
push
xchg
aam
xor
pop
sub
inc
retf
or
push
lock
sbb
xchg
int
lods
mov
pop
cmps
nop
cdq
fnstsw
imul
push
push
in
mov
push
xor
sbb
mov
push
shl
jo
jecxz
rcr
int
int3
pop
xchg
mov
leave
out
xchg
pop
cmp
stos
xor
repz
mov
xchg
int3
or
es
sbb
adc
or
pop
lahf
lahf
push
test
adc
(bad)
pop
mov
fldcw
into
cmp
movs
xor
mov
cdq
cli
div
int
adc
loopne
sbb
cs
(bad)
push
dec
popa
sbb
fdivr
es
call
mov
sbb
jmp
rol
cwde
pop
xor
cmp
inc
mov
int
bound
outs
adc
cmp
sbb
xchg
in
out
inc
jo
stc
adc
xor
outs
and
xchg
pop
add
int
jge
ja
xor
das
or
cmc
stos
jl
popa
mov
inc
shl
(bad)
jno
or
cmp
fistp
test
repz
adc
mov
and
arpl
and
push
fdivp
clc
dec
jecxz
in
sahf
std
outs
repnz
or
inc
jecxz
inc
lahf
push
test
out
push
idiv
jmp
pmovmskb
jnp
jp
cmps
test
push
(bad)
into
sbb
lahf
xchg
daa
pusha
das
adc
fs
nop
cs
inc
pop
movs
int3
xchg
inc
xor
out
mov
adc
sub
cwde
cmc
js
pushf
ret
aas
out
shl
hlt
int
(bad)
xchg
dec
imul
mov
inc
push
ja
fstp
mov
push
push
(bad)
mov
ins
mov
pop
pop
mov
inc
push
aad
inc
pop
sbb
cmc
aad
mov
iret
or
call
adc
add
or
push
xor
and
sub
jne
jle
stc
pop
cmps
inc
scas
add
add
cmp
mov
or
lahf
jle
imul
mov
(bad)
jl
in
aas
daa
leave
in
int3
mov
and
pop
shr
sub
add
callw
mov
dec
push
les
mov
xor
enter
sbb
or
rcr
out
and
test
test
sub
(bad)
ret
lock
arpl
shl
pop
cmp
lods
xor
push
in
in
into
lods
test
neg
cmp
les
loopne
ficom
push
pop
jo
mov
test
dec
movs
and
shl
les
push
movs
stos
xchg
in
fidiv
mov
and
pushf
pop
mov
dec
inc
inc
je
outs
jbe
pop
(bad)
dec
les
push
pop
and
lock
sub
int3
int3
stos
xchg
lock
pop
fist
mov
aam
imul
or
pop
push
add
stc
adc
in
inc
nop
inc
in
stc
add
int
inc
mov
arpl
xchg
mov
adc
sub
sub
in
repz
mov
add
mov
fcomp
loop
sub
ror
fwait
xchg
loop
pop
mov
ds
mov
test
cmps
cmp
or
mov
mov
cmp
xchg
or
mov
sbb
push
xchg
in
lahf
dec
test
ins
jns
jmp
xchg
xor
mov
add
das
std
(bad)
pop
dec
inc
push
mov
mov
mov
scas
or
cmp
les
in
add
push
int3
xlat
clc
fisttp
xchg
mov
dec
jmp
add
(bad)
loop
sub
pop
cmp
test
fild
inc
xchg
repz
xlat
sub
(bad)
pop
mov
retf
and
mov
rcl
jne
add
dec
ret
and
jp
loope
hlt
scas
mov
bnd
and
mov
jb
inc
dec
ret
repz
aad
xchg
adc
loope
(bad)
int3
aam
outs
bound
pop
retf
inc
hlt
cmp
mov
ins
pop
fidiv
dec
adc
add
daa
popf
sahf
mov
std
call
xchg
jmp
fs
rcr
stos
xchg
xchg
jns
xchg
je
dec
xchg
xchg
sbb
mov
call
mov
std
scas
out
pop
cmp
in
sti
add
add
js
mov
sbb
mov
repnz
pusha
pop
ss
lods
inc
mov
and
jp
data16
pop
(bad)
pop
push
movs
scas
arpl
scas
xor
aas
mov
dec
mov
(bad)
cld
ss
dec
aaa
jle
jno
fimul
retf
or
not
in
and
pushf
sub
stc
xchg
xchg
movs
inc
mov
and
mov
out
loop
test
mov
shr
push
push
das
mov
sbb
arpl
div
loop
jne
outs
test
mov
das
cmp
jmp
and
pop
stc
lods
add
sub
xor
rcr
push
sbb
shl
pop
sbb
jge
js
push
cmp
push
xchg
gs
mov
ficomp
imul
lods
mov
or
sub
push
pusha
lahf
cdq
(bad)
in
inc
popf
and
sbb
pop
cli
lock
lea
cli
mov
movs
mov
fisub
pop
mov
mov
inc
call
es
dec
push
call
call
ins
adc
inc
loop
jne
ins
cmp
or
js
jp
cmps
pop
imul
mov
outs
into
repnz
xor
jbe
les
add
xchg
sbb
mov
fcomp
pop
mov
jb
ins
push
push
loop
cmps
and
cmp
xchg
shl
or
and
nop
mov
mov
jecxz
jg
(bad)
or
dec
(bad)
sbb
rcl
lea
bnd
and
mov
and
sub
std
ficomp
sbb
ja
inc
ins
add
icebp
jnp
call
shl
dec
inc
adc
arpl
pop
mov
out
(bad)
mov
fst
sti
(bad)
push
inc
mov
jo
push
sbb
add
(bad)
loop
mov
cmp
dec
aaa
in
sahf
push
dec
mov
scas
and
xor
dec
int
mov
sbb
fld
(bad)
aaa
test
xchg
rol
pop
fwait
ins
xchg
nop
retfw
pushf
data16
cmp
add
gs
out
mov
sahf
imul
jecxz
adc
xchg
cdq
mov
loopne
push
test
fstp
mov
inc
lock
in
mov
adc
and
lahf
push
inc
ds
mov
mov
ds
jg
fstp
xchg
jo
add
dec
or
js
stc
les
pop
inc
push
ss
cli
cmp
mul
dec
test
dec
std
(bad)
shl
push
repz
imul
loopne
fdiv
pop
cmc
mov
lock
cmp
jecxz
(bad)
loop
bound
gs
jecxz
fdiv
mov
pop
jmp
jne
xor
cmp
ds
loope
imul
or
or
mov
nop
xchg
in
pop
or
inc
dec
mov
push
mov
or
test
cmp
test
adc
jmp
xchg
adc
add
mov
ret
nop
addr16
dec
dec
cmps
sar
sbb
xchg
test
js
dec
fdivr
adc
pop
retf
loope
mov
enter
in
xchg
jp
mov
mov
inc
push
add
mov
inc
(bad)
lods
popa
cmps
and
cwde
mul
sub
fdiv
inc
fistp
data16
loop
retf
into
rcr
into
shl
test
lods
mov
xor
in
mov
retf
mov
sub
mov
dec
push
mov
aas
pop
mov
or
jns
pop
hlt
push
jecxz
hlt
stos
jae
xor
stos
popa
push
jne
add
push
jne
adc
mov
push
add
mov
popa
(bad)
scas
mov
xchg
jns
add
lock
and
add
mov
test
scas
fild
shl
lock
xchg
pop
call
dec
xor
pop
mov
nop
into
push
je
inc
mov
iret
jo
jae
push
add
pop
aaa
aad
shl
gs
jp
pop
out
jne
pop
outs
sub
or
sbb
lods
loope
loop
mov
push
or
add
mov
dec
mov
jb
dec
shl
fdivrp
ror
dec
aad
ror
xor
mov
jg
fs
xor
jle
imul
scas
pop
and
mov
cmp
pop
sbb
adc
sar
push
fdiv
cmp
adc
aad
pusha
cmp
loope
std
push
(bad)
cmp
mov
push
mov
mov
mov
xor
(bad)
imul
ffreep
xor
pop
shr
mov
sub
cmp
pop
loop
and
add
sbb
loope
retf
addr16
stos
mov
repz
or
mov
cmp
jo
pop
xchg
push
mov
sti
mov
mov
repnz
inc
fisttp
mov
pop
(bad)
scas
outs
ja
rcr
cdq
sub
xor
fdiv
aad
mov
pusha
fnstsw
sub
ins
mov
xchg
int3
adc
xchg
mov
ins
aaa
or
rcl
popa
cmps
ja
pop
xor
lds
mov
jb
dec
add
ficom
push
iret
adc
outs
inc
push
adc
mov
jo
mov
jecxz
dec
(bad)
call
int3
adc
and
int3
push
cli
xchg
lods
mov
add
mov
xchg
mov
fstp
lods
mov
(bad)
adc
push
xchg
sub
leave
xchg
sbb
adc
sbb
inc
jle
add
mov
pushf
daa
sar
loope
xlat
push
pop
and
push
sub
pop
mov
fidivr
(bad)
loopne
arpl
inc
dec
adc
push
pop
inc
jns
out
or
jmp
or
add
lds
xchg
inc
inc
push
leave
not
and
popa
mov
mov
inc
shr
sub
xchg
lahf
shr
mov
cdq
push
pop
sub
mov
jecxz
add
pop
add
xchg
das
jmp
out
jl
pop
pop
sub
dec
call
sub
ror
sbb
frstor
cmp
jmp
push
stos
ins
cld
fistp
pop
xor
pop
enter
pop
sbb
pop
shr
inc
iret
xor
jg
(bad)
mov
dec
add
call
cwde
mov
pop
out
mov
jae
(bad)
jb
clc
addr16
sbb
xchg
mov
gs
cmp
xor
loop
rol
repz
inc
shr
xchg
cdq
pop
ror
test
gs
and
mov
scas
popa
movs
pushf
movaps
dec
sub
or
xchg
add
sbb
cmp
gs
push
pop
into
lock
lahf
xchg
mov
shr
mov
shl
dec
std
push
sub
mov
adc
cli
out
gs
mov
dec
in
gs
inc
cmp
push
retf
sbb
repz
loopne
lods
jmp
lahf
sub
pop
xchg
(bad)
jb
xor
loopne
out
sub
mov
and
sub
ror
cmp
pushf
dec
inc
fcmovnb
fcom
cli
or
xchg
int
pop
xchg
add
movs
pop
push
into
fist
jge
imul
mov
mov
push
or
in
fnstenv
(bad)
dec
jg
xchg
push
test
sbb
add
(bad)
sbb
mov
btc
cli
jb
fwait
or
popa
es
lds
pop
shl
(bad)
stc
imul
mov
imul
and
fimul
and
mov
rcl
cmc
xlat
retf
fcom
fdivr
add
lods
das
iret
pop
mov
dec
in
std
movs
rcr
mul
int3
cmp
xor
iret
mov
aad
(bad)
jmp
aam
jns
iret
bt
xor
jb
adc
cmps
sahf
pop
out
xor
add
push
lea
dec
idiv
xchg
inc
push
mov
or
(bad)
movs
imul
sar
fist
pop
xchg
xchg
inc
and
jae
xchg
stos
mov
mov
test
jmp
and
cmp
inc
mov
imul
pop
or
jmp
pop
inc
xor
je
or
jmp
das
push
xor
retf
push
es
call
mov
repnz
shl
sub
scas
cli
out
inc
adc
inc
push
add
lods
fiadd
sbb
ins
rcr
nop
movs
jmp
in
dec
out
scas
push
push
popa
enter
aad
fbld
ret
lds
iret
add
mov
sub
out
mov
sahf
sbb
jnp
or
inc
outs
dec
jecxz
shr
sub
shr
xchg
out
imul
sahf
jle
lock
dec
cmps
pop
iret
mov
xchg
jmp
fmul
(bad)
sbb
or
dec
fild
and
xor
(bad)
shl
sti
(bad)
(bad)
std
mov
out
addr16
ds
std
xchg
es
cdq
icebp
test
(bad)
adc
dec
movs
push
adc
lea
stos
(bad)
pop
add
sub
cmp
jne
das
xor
loopne
jge
int3
pop
cmp
jnp
push
push
iret
lahf
xor
xchg
es
push
pop
inc
into
hlt
shr
jl
fadd
mov
push
push
sbb
aas
mov
xor
sbb
add
(bad)
mov
jb
fdivr
mov
repnz
scas
or
mov
mov
cmp
rcr
push
lea
jno
ret
mov
leave
dec
stos
aad
and
mov
nop
mov
loop
cmps
lahf
loop
or
cwde
cmp
and
test
pop
aad
scas
inc
mov
mov
push
mov
movs
inc
arpl
mov
clc
adc
mov
outs
mov
inc
data16
jmp
(bad)
push
movs
add
mov
outs
cli
je
xchg
xchg
mov
cmp
lods
dec
push
lods
(bad)
int
jg
nop
out
dec
rcl
jo
xor
dec
sbb
push
mov
stc
mov
movs
sub
sub
ss
xchg
add
adc
sbb
jnp
add
and
jl
xchg
and
imul
or
(bad)
sbb
mov
imul
cmps
mov
mov
jo
sbb
pop
aam
cmps
and
in
loope
adc
or
push
mov
add
out
fdivr
aad
add
xchg
adc
inc
xchg
xchg
sub
call
adc
xchg
dec
jge
jbe
daa
mov
mov
cmp
je
out
mov
pop
inc
mov
dec
adc
dec
adc
xchg
repz
xchg
outs
sti
mov
mov
int3
cmp
xor
outs
std
cmp
xor
sbb
xlat
and
int3
xchg
sub
mov
aas
and
mov
mov
inc
repnz
fldenv
add
(bad)
push
(bad)
dec
scas
sub
in
pop
imul
jns
je
inc
inc
dec
xor
add
cs
sbb
xchg
cwde
mov
pop
and
out
mov
mov
push
mov
sub
jg
add
push
pushf
xchg
adc
loop
pslld
stc
adc
mov
rcr
or
mov
cmp
repz
sub
(bad)
mov
sub
or
loopne
dec
and
ret
pop
xor
arpl
call
mov
fsubr
sar
(bad)
ja
sbb
push
pusha
not
inc
mov
or
mov
pusha
sbb
movs
cs
enter
adc
nop
cmp
dec
push
xchg
fist
mov
sub
in
(bad)
add
test
hlt
mov
ret
retf
fsub
add
and
dec
shl
fs
sti
inc
jp
retf
pushf
inc
nop
push
mov
test
inc
pop
inc
ret
mov
adc
cwde
bound
pusha
pusha
jp
xchg
push
mov
and
mov
cmps
out
xor
lds
pandn
and
inc
and
mov
jns
mov
icebp
inc
scas
inc
pop
dec
popf
int
shl
stos
pop
dec
fcmovu
dec
in
ds
mov
pop
adc
mov
xchg
les
and
das
shl
or
push
into
cli
sub
shr
loopne
cmps
and
aas
ins
leave
mov
sub
xchg
fstp
jp
call
emms
and
inc
ins
out
and
xor
cmp
mov
cmp
std
lahf
mov
std
in
ret
jo
and
imul
sub
int3
inc
xor
sub
lds
out
hlt
xchg
mov
or
add
mov
pop
dec
(bad)
fimul
arpl
je
outs
outs
(bad)
mov
adc
je
bound
int
imul
sahf
or
popa
ss
xchg
in
xor
jne
ss
in
aam
cmp
nop
adc
push
jae
mov
jb
lds
cmp
pop
out
pushf
jmp
and
retf
bound
popa
das
or
lds
add
pushf
test
stos
repnz
mov
pop
jmp
jns
add
fucomi
in
pop
arpl
and
das
daa
add
(bad)
cld
push
fild
pandn
fwait
xor
push
popa
inc
pop
lds
mov
int
add
(bad)
push
jb
shl
add
sub
ins
ins
fwait
sbb
loope
iret
and
fs
mov
xlat
jbe
lods
push
and
retf
iret
mov
mov
test
inc
cmp
fmulp
push
xor
xchg
xlat
pop
adc
xchg
(bad)
jmp
adc
mov
fadd
shl
in
sub
ror
sbb
daa
fsubp
fmul
mov
mov
std
or
cmp
in
lea
inc
and
imul
test
mov
push
leave
sbb
idiv
(bad)
iret
jl
pop
push
std
lock
or
mov
aaa
sbb
or
arpl
push
mov
mov
cmp
ins
call
sahf
or
fsub
lds
int
das
int
cmp
mov
cmp
scas
or
leave
icebp
(bad)
inc
pop
je
cmp
dec
add
(bad)
cmp
or
jbe
cmps
(bad)
cmc
mov
ret
xor
(bad)
xor
sub
push
lea
xchg
cwde
xrelease
xor
sub
xor
scas
mov
mov
test
cs
sub
jle
or
addr16
jno
mov
cmps
stos
sti
popa
aaa
sar
push
pushf
enter
ss
stc
gs
mov
iret
pop
icebp
div
lods
lods
in
mov
aam
ins
(bad)
mov
out
xchg
(bad)
retf
jmp
sub
in
and
out
scas
xor
mov
mov
movs
scas
popa
inc
leave
pop
lods
cmc
hlt
adc
stos
(bad)
iret
mov
dec
jb
(bad)
stos
jbe
pop
add
(bad)
sar
(bad)
ror
pop
fwait
iret
test
fisub
popa
popf
clc
or
adc
mov
push
push
das
out
inc
pushf
stc
aas
mov
mov
out
(bad)
jae
sbb
mov
shl
ins
sub
mov
adc
jg
or
jae
mov
lock
mov
test
pop
ins
dec
pushf
pop
xchg
or
(bad)
aam
push
sti
(bad)
cmp
leave
ret
mov
cmp
jns
imul
xchg
cs
jmp
retf
pushf
xchg
aam
pop
cmp
dec
jl
(bad)
div
outs
push
push
or
push
popa
push
js
adc
loopne
jg
test
(bad)
fadd
aad
ficom
push
xor
mov
loopne
gs
pushf
and
cmp
call
outs
cmp
loopne
xor
mov
or
sbb
mov
aaa
jmp
mov
bound
cwde
in
jno
xor
sub
jle
xchg
popa
push
xor
test
mov
pushf
cmp
push
(bad)
sbb
mov
test
cmc
fdivr
cmp
jbe
outs
(bad)
cmp
movs
adc
cmc
sbb
sbb
scas
fisttp
aam
retf
fist
add
sub
mov
test
cdq
fdiv
adc
clc
jle
adc
aaa
mov
scas
mov
jle
inc
jle
jne
or
jg
xchg
sbb
xchg
pop
adc
xor
pop
out
loopne
jnp
(bad)
dec
jne
xchg
mov
adc
sbb
mov
in
push
mov
(bad)
sub
inc
push
jmp
(bad)
sub
cdq
daa
xchg
push
cmp
jmp
pushf
and
retf
mov
ret
lahf
xchg
mov
pop
pop
sub
int3
push
add
lea
xlat
pop
inc
gs
repnz
or
call
mov
sbb
call
xchg
fstp
(bad)
fisttp
retf
pop
inc
jns
inc
fcom
sbb
in
xor
fadd
mov
test
jmp
mov
fidiv
lahf
test
neg
sahf
adc
(bad)
jp
xor
dec
xchg
sbb
xchg
in
mov
push
dec
sub
call
sbb
repz
pop
int
cmp
(bad)
ja
dec
push
mov
lock
cli
mov
sub
out
sub
or
push
xor
xchg
sub
jno
pushw
stos
jno
fimul
idiv
mov
adc
into
fwait
int3
push
pop
dec
lea
shl
cmp
fstp
aaa
mov
(bad)
ror
jmp
sub
and
and
out
fldenv
jg
outs
inc
stos
xlat
adc
dec
dec
mov
out
imul
mov
ficom
push
fdivr
sbb
test
or
push
in
sub
inc
sbb
pop
and
xchg
ss
xlat
mov
repnz
ds
outs
sub
aam
cld
push
or
pop
call
dec
jl
push
popf
leave
mov
cli
pusha
jle
sub
push
clc
dec
jns
sub
dec
push
pop
push
xor
mov
jns
call
loopne
ss
mov
xchg
mov
pusha
shl
pop
gs
daa
push
sub
xlat
jnp
pop
ret
div
div
in
push
mov
inc
arpl
pop
xor
jmp
in
push
pop
lods
push
sbb
aas
sub
retf
ja
sbb
push
rcl
leave
inc
lea
rcl
lea
mov
prefetch
or
cmps
mov
leave
fdivr
mov
fsubr
aad
ja
jnp
mov
div
jp
pop
hlt
fidivr
or
mov
sbb
test
bound
stc
dec
xchg
out
test
sahf
test
xor
icebp
cmps
mov
lahf
iret
push
or
xchg
add
xchg
mov
mov
push
iret
(bad)
(bad)
cmp
retf
jo
sub
push
xor
and
test
(bad)
loopne
aaa
arpl
pop
stc
or
test
ins
data16
inc
adc
xor
adc
mov
inc
aaa
push
ins
gs
test
xlat
es
push
xor
fidiv
mov
mov
sbb
cmp
popf
push
(bad)
mov
aaa
leave
std
(bad)
in
loope
fist
loop
sti
inc
scas
dec
xor
adc
inc
js
jae
inc
sbb
xchg
sbb
mov
xchg
test
inc
test
cmp
mov
int3
or
add
outs
mov
leave
dec
ficomp
and
jno
and
dec
mov
jb
movs
pop
sbb
xor
jg
in
pushf
popa
(bad)
(bad)
dec
les
mov
push
fdiv
mov
ror
out
pop
test
add
jbe
sub
test
add
jl
dec
and
push
sbb
fistp
adc
cmp
rol
int
xchg
dec
add
mov
pop
and
pop
gs
out
jg
ins
xor
mov
xchg
cmp
bnd
xor
pop
inc
es
sbb
mov
or
call
xor
movs
call
clc
mov
loop
mov
int3
shl
(bad)
clc
adc
adc
xchg
gs
ret
jb
mov
push
inc
inc
mov
enterw
inc
or
mov
pop
adc
rcr
or
imul
xchg
or
pusha
pop
popa
push
call
mov
sub
cmps
cmp
shl
push
mov
mov
dec
jmp
inc
movs
jo
xor
mov
cmp
test
out
aam
sti
push
cmp
daa
test
ins
pop
shl
frstor
ret
jmp
mov
xor
cmp
fidivr
sub
leave
mov
dec
sbb
sbb
jae
jge
test
dec
jns
dec
jl
push
inc
mov
adc
jg
aad
xchg
jb
pop
in
es
ins
cwde
xchg
adc
lds
iret
rol
xchg
jne
(bad)
popf
or
cmp
cmp
jnp
jno
in
scas
mov
add
ins
test
(bad)
or
imul
inc
xchg
scas
gs
test
loope
ins
push
push
push
inc
add
fcomp
jg
add
add
cmps
outs
push
sbb
fcmove
pop
and
push
pop
mov
outs
jl
sti
inc
loopne
sbb
sar
xchg
pop
aas
imul
into
sbb
push
sub
jns
retf
mov
xor
std
cdq
neg
sbb
out
push
xchg
ja
inc
out
cmps
inc
cmps
jmp
sbb
xchg
sub
(bad)
cmps
ret
cdq
rol
in
sub
mov
xchg
xchg
jmp
lods
(bad)
aad
inc
pop
sub
and
dec
sub
imul
xchg
or
xor
and
loopne
pop
mov
sub
push
ds
mov
and
aad
and
fs
push
test
je
mov
jae
add
sahf
enter
dec
jae
iret
dec
dec
add
inc
clc
sub
aaa
sbb
mov
adc
clc
imul
or
add
mov
pop
test
dec
inc
das
mov
mov
jmp
loope
sbb
mov
ror
xchg
icebp
jmp
dec
pushf
cmp
test
mov
xchg
(bad)
cwde
mov
jns
retf
in
add
jmp
mov
cmp
and
jmp
outs
jle
into
dec
iret
mov
pop
sub
lds
test
xchg
ss
into
aaa
xchg
mov
xchg
sar
test
dec
clc
loop
and
mov
es
cmp
mov
add
mov
ss
gs
clc
xor
outs
fsub
xchg
xchg
ds
mov
(bad)
jmp
inc
shl
sub
imul
arpl
out
addr16
aaa
mov
leave
in
xchg
not
fld
sar
jmp
lahf
cli
js
xor
add
dec
xchg
cmp
sub
mov
lods
inc
cmp
mov
dec
add
mov
push
sar
dec
leave
jmp
adc
xchg
or
push
std
(bad)
fs
inc
ds
sub
out
iret
lds
retf
push
push
in
lods
cmp
pop
mov
push
neg
mov
mov
bound
daa
cmp
inc
retf
mov
(bad)
xor
sahf
pop
int
jo
cmps
or
mov
xchg
jmp
add
add
mul
mov
cmps
lods
jecxz
fs
xor
mov
mov
inc
and
push
pop
mov
out
in
pop
sub
out
jg
popa
inc
and
inc
movs
push
popa
je
jmp
ret
lds
adc
mov
sbb
aam
loop
sub
ins
mov
adc
ins
out
imul
xor
inc
jge
pop
iret
push
lss
mov
retf
hlt
push
jmp
loop
(bad)
enter
retf
sub
sbb
aaa
jo
fs
mov
sub
popa
mov
push
div
dec
out
add
ins
inc
ss
lock
push
cld
test
mov
jo
xor
mov
addr16
pop
dec
and
popa
push
sbb
jnp
into
push
(bad)
mov
loopne
lods
inc
dec
mov
cmp
pop
inc
add
inc
push
dec
dec
mov
mov
out
adc
out
imul
stos
fdivr
in
mov
mov
popf
xor
jl
out
pop
and
add
dec
rep
clc
pop
xlat
shl
mov
retf
imul
push
push
mov
mov
and
mov
add
or
mov
ror
sub
or
add
adc
xor
push
mov
and
pushf
push
mov
push
push
and
pop
add
rcl
es
mov
cld
mov
add
fcmovnbe
js
shl
test
lods
es
jmp
call
int
fistp
into
dec
mov
arpl
(bad)
in
xchg
xchg
in
jmp
mov
dec
sub
push
cmps
jnp
call
cmp
retf
(bad)
mov
(bad)
push
sbb
fistp
mov
inc
cld
and
jecxz
retf
mov
adc
push
int3
inc
fstp
sub
mov
and
das
and
aad
xor
or
push
mov
scas
dec
xor
dec
push
popf
xchg
sub
jmp
sub
jns
sbb
mov
adc
mov
jmp
push
aas
or
push
scas
pop
fdiv
add
inc
test
add
mov
xor
lods
jns
hlt
push
jbe
gs
xchg
sub
or
in
jl
jge
sub
push
jb
dec
mov
pop
sub
push
test
jne
sbb
retf
pop
loope
icebp
mov
xchg
xchg
rcr
inc
push
(bad)
add
cld
call
je
jmp
aam
imul
inc
imul
mov
std
cwde
pop
gs
imul
add
clc
scas
jnp
cwde
cmps
add
adc
jnp
test
jnp
xor
out
fsubr
outs
icebp
xor
add
arpl
pop
push
and
jo
mov
mov
jmp
xchg
repz
sub
les
push
xchg
push
jp
add
add
lods
jge
shl
mov
jmp
sbb
lea
enter
mov
sub
pop
js
sahf
popa
loope
or
dec
(bad)
dec
sti
push
cmp
fabs
ror
pop
xchg
stc
mov
inc
outs
mov
pop
daa
outs
push
add
rcl
movs
add
shr
or
mov
mov
not
cdq
mov
push
test
lods
add
sar
push
(bad)
mov
stos
cdq
xlat
gs
xchg
pop
pop
or
shl
xchg
shl
sbb
in
jle
lea
dec
mov
addr16
sub
sbb
sti
xchg
data16
aad
cmp
xor
add
push
cmps
js
sbb
dec
inc
mov
ror
jle
cmp
js
out
dec
(bad)
lods
mov
mov
movs
ret
repnz
jmp
add
sub
push
shl
dec
adc
out
imul
das
aaa
inc
xchg
adc
rcr
rol
jb
mov
dec
add
inc
inc
add
add
ret
les
adc
in
ja
enter
(bad)
mov
sbb
loope
movs
(bad)
repnz
dec
adc
shl
sti
dec
mov
dec
pop
cmp
sar
and
or
(bad)
add
scas
jecxz
in
xor
gs
outs
inc
fwait
imul
push
dec
das
cwde
xchg
aaa
cmp
es
jp
clc
mov
mov
jbe
jl
xchg
mov
fdivrp
retf
in
xor
fwait
mov
and
xor
in
es
xchg
mov
push
cwde
call
jmp
inc
inc
dec
inc
imul
cmps
add
lea
xchg
cs
shr
pop
mov
xor
cmp
jge
enter
pop
movs
inc
pop
clc
pop
push
in
sub
xor
jnp
xchg
ret
jo
repnz
mov
ret
test
mov
ficomp
pop
lods
xchg
xor
cmps
or
sbb
jae
pop
mov
lds
sbb
test
(bad)
mov
sbb
pop
(bad)
call
retf
mov
or
js
enter
mov
mov
stos
pop
(bad)
aaa
(bad)
and
mov
push
pop
adc
sub
hlt
xchg
push
or
cmp
xchg
adc
mov
fstp
xchg
out
data16
add
sub
jl
out
jmp
mov
mov
adc
neg
xchg
aad
(bad)
mov
andps
dec
mov
(bad)
sbb
fcmovbe
and
stc
fwait
leave
mov
(bad)
sti
cmps
mov
add
adc
mov
and
sub
xchg
mov
test
leave
inc
int3
or
push
mov
cmp
adc
xchg
stos
int3
sub
int3
mov
imul
sub
cmp
xor
pushf
or
and
(bad)
aam
xchg
cs
mov
mov
cli
inc
or
inc
push
(bad)
xchg
lock
cmp
push
out
or
das
fcomip
mov
pop
pop
pop
mov
aaa
loope
mov
stos
ds
es
mov
loope
mov
pop
je
sbb
sti
pusha
mov
aaa
cmp
test
retf
or
lods
fimul
imul
jmp
add
jae
jle
loop
jge
mov
(bad)
push
jnp
xchg
scas
and
in
adc
sub
jnp
cdq
clc
retf
or
or
or
inc
mov
pusha
add
fimul
fadd
xor
repz
call
mov
mov
jecxz
bound
sahf
loope
cmp
jp
test
lods
inc
ds
out
push
(bad)
jns
sahf
aad
lods
add
sahf
pop
sbb
push
fld
popa
cld
mov
pop
cdq
inc
and
call
scas
repnz
jmp
ficom
cmp
mov
push
xor
sahf
mov
jbe
scas
pop
dec
inc
outs
mov
pop
add
mov
mov
adc
and
mov
cmps
pushf
sbb
shr
cmp
stos
js
push
adc
out
mov
sub
cli
sahf
out
call
push
push
ret
and
pusha
and
mov
mov
cld
sub
jmp
fadd
int3
jp
xchg
daa
jge
out
ins
push
jnp
mov
inc
jb
mov
cdq
movzx
xlat
mov
jecxz
cmc
test
dec
movs
(bad)
jns
cmp
cmp
adc
(bad)
jmp
ret
loope
loope
xor
lods
popf
dec
sbb
xchg
dec
pcmpeqw
or
xchg
xor
lods
and
sbb
adc
scas
(bad)
dec
clc
xchg
pop
imul
inc
outs
dec
out
stos
addr16
xchg
mov
pushf
sub
xchg
popa
fcom
mov
or
fs
xchg
das
mov
push
inc
sti
rcr
and
movs
sub
leave
(bad)
mov
sub
xchg
xor
lahf
movs
push
xor
xchg
push
inc
fyl2xp1
sahf
(bad)
fcomp
and
push
jae
loopne
inc
add
cmps
ins
lods
lds
xor
sbb
xchg
xor
add
jmp
(bad)
je
aad
ds
sub
push
into
pop
push
pop
loope
push
ss
add
add
sub
mov
int
fwait
jl
jb
jne
gs
cwde
sub
sub
adc
push
cld
inc
aam
dec
add
pop
call
(bad)
cmps
cs
test
int3
setle
cmp
dec
repnz
jmp
in
sbb
ffree
pop
lea
jmp
out
adc
adc
push
xor
outs
sub
cmps
(bad)
pop
xchg
mov
jmp
aad
call
pop
mov
cwde
cmp
jge
test
dec
call
mov
(bad)
jg
and
or
ror
add
shl
test
dec
mov
(bad)
es
cdq
cdq
ret
xor
adc
push
pop
sub
into
sbb
retf
enter
mov
fld
cmp
shl
(bad)
mov
in
fwait
pop
pop
ret
mov
or
pop
mov
pop
mov
add
cmp
mov
push
call
jo
cmp
leave
xor
lock
stos
rol
add
jae
or
jns
adc
mov
fldln2
loope
les
test
retf
movs
(bad)
xor
inc
and
js
shr
in
ret
shr
push
pop
inc
dec
xchg
xchg
jp
xor
jmp
daa
xor
sub
scas
ficom
or
cdq
sbb
push
pop
push
push
test
mov
iret
(bad)
cmp
(bad)
fisub
fld
xor
(bad)
xchg
mov
aas
cmps
dec
sahf
mov
out
pop
scas
data16
mov
(bad)
(bad)
pusha
lea
das
cmp
dec
test
mov
out
pushf
pusha
fnstsw
std
cmc
aas
call
sbb
xchg
stos
xchg
push
jo
ds
add
int
imul
sbb
pop
inc
pop
or
mov
bound
mov
dec
icebp
adc
ins
ret
das
sbb
and
rcr
jl
les
bound
mov
fdivp
icebp
into
inc
mov
add
and
ss
mov
rcl
jp
inc
mov
push
mov
push
call
inc
xor
mov
(bad)
int
stos
mov
hlt
push
jg
add
test
or
add
fsub
push
push
xchg
jbe
test
xchg
imul
out
retf
test
xchg
dec
xor
fisub
enter
aam
fwait
test
test
jmp
mov
dec
mov
cmovge
ins
jg
scas
out
pop
cmp
cmp
mov
jle
add
rol
or
push
test
add
mov
sbb
adc
pop
jge
imul
and
outs
dec
push
inc
iret
hlt
pushf
mov
sub
daa
ret
icebp
ds
cld
mov
add
stc
call
mov
push
sub
in
xchg
(bad)
sbb
and
cs
mov
mov
add
hlt
nop
lock
adc
xchg
cmps
mov
repz
jo
int3
inc
fdivp
movs
movs
ja
in
and
cmp
ds
inc
dec
sbb
mov
stos
add
jl
and
push
pop
inc
adc
cli
vcmpsd
jge
pop
mov
clc
or
ret
jns
cmp
pop
cmp
push
or
mov
es
lock
dec
test
aas
retf
in
mov
sub
sub
icebp
div
dec
out
pop
cmp
rcl
push
int3
scas
dec
data16
or
jle
dec
call
sub
repnz
adc
sub
mov
(bad)
mov
inc
push
call
push
ja
pop
fldenv
sub
in
mov
push
out
sbb
mov
pop
adc
stc
movs
jg
ds
jg
loop
add
ss
xlat
jo
pop
pop
aam
sub
pop
fdivr
mov
arpl
fild
test
popa
fstp
shr
adc
push
xchg
or
push
(bad)
leave
push
mov
std
nop
pop
xor
push
sbb
sub
push
mov
cmps
dec
mov
pop
add
cwde
je
pop
popf
mov
inc
cld
lods
inc
(bad)
ficomp
cmps
mov
shl
pop
hlt
xchg
dec
add
data16
xor
(bad)
mov
cmp
mov
xor
xchg
xor
sar
cwde
adc
mov
cwde
pop
add
test
ret
push
jmp
leave
jmp
pop
xor
xor
rcr
mov
into
push
shl
or
pop
popa
retf
dec
or
push
popf
jle
in
shl
mov
ins
xchg
ret
and
pushf
mov
pop
sbb
or
std
fld
repz
call
sbb
repz
out
cld
das
mov
stos
loopne
push
dec
loope
xchg
mov
nop
shl
rol
fwait
mov
xchg
test
ficom
scas
iret
jle
sub
bound
pop
mov
retf
sbb
cmps
nop
push
xchg
icebp
push
push
jb
fild
mov
mov
xchg
leave
in
(bad)
psrlq
push
sub
cmp
add
call
es
mov
mov
jno
inc
cwde
sar
ficom
out
sub
mov
scas
loope
sub
call
inc
addr16
or
cli
aam
sbb
mov
test
sub
or
mov
mov
out
sahf
mov
dec
sbb
imul
mov
adc
(bad)
in
stc
cli
cli
and
cwde
xchg
mov
and
into
(bad)
shl
ja
add
pop
add
jne
outs
popf
dec
sar
cmp
(bad)
jle
pusha
rcr
imul
daa
inc
adc
hlt
fnstenv
aas
imul
idiv
xchg
int
cmp
and
adc
xchg
xor
sub
xor
pop
enter
call
lods
or
repz
push
ror
adc
(bad)
push
ds
movzx
out
or
dec
push
test
inc
jge
movs
mov
sub
push
push
or
xorps
mov
ret
inc
or
imul
mov
pop
jmp
xchg
out
adc
dec
in
inc
sub
adc
push
dec
jecxz
into
imul
mov
aam
add
push
popf
call
push
xor
stos
movs
pop
mov
xor
push
mov
data16
inc
pusha
int3
aas
inc
jno
mov
sti
fstp
xchg
lea
cmp
fisubr
sub
xchg
sub
int
sub
xchg
and
inc
mov
pop
fdiv
mov
cmp
movs
int
fadd
xchg
retf
fstp
mov
iret
idiv
in
cmp
xor
stos
icebp
cmps
dec
add
mov
push
sub
enter
movs
sub
push
dec
movs
mov
jns
xor
(bad)
(bad)
cmc
xchg
fs
jmp
call
mov
jl
and
xchg
push
mov
je
lds
enter
mov
outs
push
pop
scas
and
jno
sahf
and
outs
dec
out
dec
retf
imul
stos
mul
aam
(bad)
inc
lods
xor
pushf
into
xor
pusha
ficom
lods
push
add
aad
lahf
ins
int3
sar
loop
and
mov
cld
lods
push
push
add
inc
mov
mov
push
adc
pushf
stos
inc
fisttp
mov
xchg
sti
push
adc
sub
add
or
stos
mov
lock
dec
cmp
popf
xchg
push
jle
sub
rol
push
fsubp
mov
pop
adc
push
in
jmp
jmp
movs
sbb
jmp
push
daa
push
lahf
ret
mov
fcmovnu
push
inc
imul
inc
and
cwde
push
outs
adc
jmp
sbb
push
sbb
jp
es
push
or
pop
imul
bndstx
inc
mov
add
(bad)
xor
lods
pop
and
retf
sbb
xchg
jmp
ja
xor
cmc
mov
mov
mov
jnp
fsubr
js
sub
(bad)
pop
pop
repnz
pop
ret
test
(bad)
or
stc
fidivr
loopne
sahf
sub
jb
div
cmp
mov
fwait
movs
xchg
gs
cmp
push
push
mov
ret
mov
out
sbb
hlt
or
mov
xor
jne
je
test
es
ret
inc
xor
shl
mov
or
dec
or
xchg
mov
retf
test
shl
in
pop
retf
test
jns
push
cmps
mov
fist
mov
and
pop
sub
push
jne
or
aaa
sub
clc
aam
fdivp
mov
jmp
push
aas
shr
dec
pop
aaa
push
cmp
pop
out
add
outs
es
lods
(bad)
daa
rcl
adc
cmp
int3
lods
pop
xchg
mov
leave
hlt
cdq
aas
mov
and
iret
jb
xchg
fs
lods
test
jge
add
push
cdq
repz
das
mov
xlat
mov
cmp
in
daa
rcr
push
jg
pop
cmc
call
mov
mov
mov
mov
lahf
pop
mov
dec
sub
jmp
(bad)
(bad)
shr
mov
js
out
sbb
and
or
and
mov
fstp
fwait
xchg
ins
ror
add
std
inc
retf
in
movs
mov
cld
mov
xchg
leave
push
loop
or
sar
pushf
int3
push
fisubr
mov
jo
dec
cmp
and
sub
std
adc
lds
div
xchg
sub
in
and
movs
add
and
cld
mov
mov
jmp
adc
cmps
sahf
xor
fstp
or
pushf
daa
loope
daa
dec
(bad)
sub
fdiv
ja
inc
js
sub
in
bound
sub
les
sti
out
ja
aas
adc
add
pop
out
test
mov
cmp
and
cmp
push
test
jg
scas
cmp
sahf
cs
xor
inc
pop
push
iret
retf
jns
cmp
pop
pop
push
imul
inc
adc
push
lods
dec
int
mov
(bad)
fisttp
shl
push
repz
loopne
mov
lds
inc
and
cmp
icebp
and
ja
and
std
inc
cmp
pop
sub
bound
sbb
dec
shr
add
mov
test
xor
ins
jne
retf
ds
add
fs
sar
pop
call
ucomiss
and
cld
iret
push
xchg
ret
fbld
xor
xlat
pop
les
mov
jecxz
fadd
sbb
jno
les
mov
mov
mov
jg
or
jne
outs
ds
add
imul
add
jmp
or
xchg
and
mov
and
rcr
(bad)
push
int3
mov
mov
push
movs
jecxz
cmp
or
lahf
fs
adc
and
into
jg
adc
dec
mov
mov
test
mov
lds
gs
addr16
jnp
dec
xor
add
push
lahf
cdq
push
into
mov
sub
adc
stc
mov
call
mov
cdq
dec
(bad)
jg
and
adc
dec
hlt
xlat
xor
pop
and
les
shl
call
cmp
lock
(bad)
jmp
(bad)
(bad)
test
add
xchg
dec
xor
shl
inc
mov
or
cmp
sub
jge
add
shl
or
bound
xchg
sub
cmps
fidivr
sbb
imul
xchg
push
jge
mov
loope
add
test
jmp
int
push
(bad)
icebp
mov
mov
std
jmp
push
cmp
popa
mov
repnz
and
fcmovb
in
test
ins
mov
pop
jmp
mov
and
inc
addr16
and
push
cmps
adc
xor
sbb
movs
imul
xor
std
out
xor
ret
xor
lods
adc
add
(bad)
and
data16
or
(bad)
xchg
movs
xchg
dec
pusha
or
xor
push
ds
fst
fdivr
js
inc
jno
pop
lods
push
aaa
movs
or
lahf
int
fidivr
cwde
in
inc
xor
jmp
ja
or
pop
mov
mov
push
xchg
and
fsubr
jno
or
adc
add
sbb
jl
ins
cmp
jbe
dec
cmp
scas
stos
or
into
mov
mov
sub
lods
sahf
jne
dec
imul
sbb
aad
or
out
sub
scas
xchg
pop
dec
ror
clc
out
rcr
or
pop
movs
call
icebp
inc
jo
out
popa
retf
and
rol
mov
test
dec
inc
imul
lds
pop
mov
shl
inc
xchg
xchg
and
adc
test
shl
add
pop
push
shl
in
cld
lods
lea
les
mov
xchg
mov
pop
popa
and
sbb
push
jns
pop
sub
in
rol
stc
jmp
fnstsw
add
in
scas
es
push
(bad)
into
sub
jnp
into
jne
mov
sbb
jp
xor
loopne
add
aas
(bad)
cdq
pop
jmp
aas
xor
push
dec
xchg
sahf
cmp
adc
fld
jp
int3
jg
jbe
push
out
scas
sub
inc
(bad)
mov
jns
mov
jle
xor
rcl
mov
cmp
jmp
mov
xor
in
mov
and
pop
cmp
bound
mov
xor
fldenv
fld
aas
loope
add
push
mov
mov
add
mov
loop
retf
push
int
and
test
push
jge
xor
push
int3
fst
sub
mov
movs
mov
(bad)
call
(bad)
std
add
mov
sub
nop
int
adc
sbb
mov
aam
pop
sar
cld
das
jns
ror
mov
ret
aam
movs
xchg
aam
rcl
xchg
popaw
pusha
sub
sub
sub
jg
call
inc
(bad)
push
dec
mov
xchg
gs
arpl
or
inc
(bad)
mov
ss
in
int3
stc
adc
xor
pop
mov
xor
sub
add
mov
mov
mov
adc
cmp
and
jo
jnp
inc
mov
iret
inc
sti
clc
xor
lods
mov
into
add
in
adc
jno
test
aas
outs
lock
push
jnp
inc
fucom
sub
inc
cmps
call
pop
mov
retf
in
inc
sbb
imul
pop
and
xchg
ret
dec
fsubr
ds
pop
popf
fadd
cs
ror
pop
jno
inc
inc
lods
xchg
or
mov
repz
hlt
inc
enter
dec
push
pop
lods
pusha
jp
push
sbb
lea
jl
sub
les
mov
xor
dec
lea
std
popa
push
cli
fcmovb
push
leave
add
scas
imul
(bad)
std
int
push
sub
mov
lea
mov
xchg
mov
retf
xlat
ins
mov
popf
mov
lods
fwait
sbb
rcl
mov
shl
jmp
jns
mov
and
iret
or
jmp
dec
loope
sar
test
std
mov
std
cmc
jbe
push
inc
retf
add
mov
xor
and
add
and
leave
add
sub
pop
jmp
or
out
cmp
xchg
shr
jns
adc
rcr
sbb
int
jno
mov
test
push
and
mov
das
lods
fmul
xor
xchg
jne
test
mov
or
stc
inc
iret
lea
clc
pop
push
fcomp
or
sahf
leave
sbb
into
pop
arpl
push
and
or
das
arpl
cdq
mov
xchg
pop
and
push
cmp
dec
sub
sbb
fwait
mov
mov
(bad)
sbb
jnp
push
push
inc
mov
xchg
(bad)
std
sahf
pop
bnd
sar
inc
mov
popa
mov
sub
popa
arpl
inc
ret
sbb
xchg
cmp
jne
mov
inc
loope
xchg
push
mov
rol
cmp
inc
mov
mov
mov
push
pop
push
mov
dec
inc
sub
xchg
call
rcl
or
sar
jecxz
sbb
pop
or
adc
(bad)
or
adc
icebp
or
mov
jp
xor
movs
pop
jne
cs
shl
sbb
aam
xor
vcvtpd2ps
jo
pop
add
int
sbb
popf
dec
pop
js
sbb
xchg
cwde
add
outs
iret
add
std
cdq
outs
push
xchg
in
jl
jno
mov
fild
loop
rol
daa
(bad)
ror
jecxz
xchg
push
retf
aaa
fistp
call
xchg
ss
push
cmps
cmp
pusha
sub
xchg
or
dec
stc
sar
aaa
xor
jge
cmc
lea
or
mov
fadd
ins
aas
into
xchg
adc
pop
adc
sti
call
call
push
xor
aad
add
btr
shr
mov
scas
lods
sub
push
mov
ss
enter
shr
add
repz
sbb
pusha
jne
lea
les
inc
push
dec
(bad)
mov
std
icebp
out
in
lea
in
pop
sub
pop
push
mov
and
sub
xor
inc
movs
xor
dec
pop
aam
or
test
fidiv
xchg
jb
add
out
sub
pop
pop
mov
mov
mov
mov
jecxz
out
xchg
sub
jmp
mov
(bad)
test
add
inc
cmps
shl
xor
rcr
(bad)
das
stos
stos
sub
pop
inc
fbstp
xchg
push
cmc
mov
daa
popa
jle
(bad)
hlt
mov
and
mov
mov
icebp
in
nop
mov
push
jl
add
mov
xchg
jp
ret
(bad)
loop
xchg
and
jno
mov
or
xor
out
(bad)
popf
inc
add
lea
js
pusha
inc
clc
xchg
xchg
jne
xchg
jmp
jp
push
jp
xchg
mov
xor
pop
mov
inc
push
aam
xchg
movs
retf
dec
in
xor
push
ins
adc
repz
mov
loope
xchg
outs
aaa
cmp
imul
push
xor
out
dec
mov
cmc
dec
and
add
std
add
push
adc
int3
add
and
cwde
aas
pop
ins
fcmove
and
adc
cld
pop
or
and
dec
adc
dec
dec
rcr
jne
add
sub
call
jp
sub
sub
stos
inc
sti
mov
cs
jnp
mov
pop
out
pop
mov
(bad)
pop
retf
and
sti
test
fnstenv
mov
jmp
jns
dec
in
outs
loop
mov
mov
pop
xchg
gs
ret
xchg
cwde
push
iret
inc
cmc
enter
sbb
jp
cdq
mov
mov
inc
inc
lods
xchg
ss
pop
push
dec
fstp
dec
mov
push
hlt
pop
add
sbb
sub
arpl
push
dec
call
imul
mov
push
aas
cmp
inc
jo
sbb
xor
ret
aam
push
cdq
xchg
mov
popa
call
mov
fs
xor
xor
popa
mov
dec
jp
mov
sar
xchg
arpl
je
pop
cmp
xor
push
or
mov
adc
inc
js
cmp
and
outs
popf
sub
repnz
(bad)
test
xlat
ja
sbb
push
cmc
inc
mov
addr16
add
es
test
scas
pop
mov
cmc
jecxz
sub
ffree
cli
dec
rcpps
push
enter
sbb
xchg
sbb
arpl
sub
xchg
popf
xchg
and
nop
clc
xchg
xchg
lods
push
ja
jnp
into
mov
fstp
sahf
jg
mov
ja
fwait
cli
inc
into
add
sub
test
loopne
mov
aad
push
bnd
gs
scas
and
sub
jge
pop
adc
test
rol
out
ret
xchg
push
sub
mov
gs
(bad)
clc
dec
rcl
adc
fimul
je
mov
mul
mov
out
sbb
mov
xchg
clc
jne
icebp
sbb
mov
mov
jno
pop
inc
mov
(bad)
out
mov
mov
sub
aad
xlat
dec
mov
leave
ja
pusha
neg
dec
popa
dec
cs
dec
test
in
fld
pop
pusha
jle
js
out
xchg
jp
cmp
inc
or
push
add
push
mov
dec
xor
gs
scas
ins
call
push
dec
xchg
nop
dec
fidivr
sub
xchg
and
pop
sub
push
pop
scas
inc
xor
lock
jo
cmp
push
popa
cmp
loopne
mov
mov
test
call
fmul
stc
inc
push
(bad)
or
push
mov
pop
cdq
dec
xchg
cdq
push
mov
xchg
pusha
push
sbb
into
sub
jb
sub
(bad)
lea
xor
cmp
inc
pop
scas
mov
outs
aad
outs
int
inc
fsubp
dec
adc
push
btc
sub
fwait
push
jb
rcl
mov
popf
test
xor
mov
push
cld
dec
pusha
loopne
jp
je
nop
fcom
sahf
ret
gs
test
jmp
sub
mov
mov
aaa
bound
in
or
xlat
shl
int3
lock
mov
lock
loop
repz
in
mov
adc
xlat
jg
pop
cmp
mov
cld
cmp
or
repz
push
push
pop
fnstcw
icebp
ret
adc
jnp
sub
sti
push
ja
cmp
pusha
inc
sub
and
outs
jne
jg
cli
nop
mov
dec
pop
test
adc
sbb
rcl
push
adc
outs
sub
mov
push
jg
neg
xchg
cld
das
fdiv
ret
stos
mov
push
sbb
mov
dec
repnz
(bad)
cmps
popf
shr
inc
in
dec
loopne
loope
clc
add
sbb
or
ret
xchg
cld
clc
jmp
sbb
out
bound
jno
mov
xor
loope
jle
or
les
or
fisub
test
in
adc
dec
adc
jo
push
addr16
icebp
shl
loopne
leave
and
sub
pop
(bad)
aam
add
pop
cmp
mov
mov
pop
stos
popa
and
push
cmc
fnsave
ins
int3
loop
push
ret
or
es
xor
test
sar
sbb
pop
sbb
adc
cli
ja
sbb
imul
pop
ret
retf
add
pop
pop
jbe
aaa
sbb
cmp
mov
cmp
mov
pop
and
cdq
mul
fcmovbe
pop
push
sbb
lds
int
pop
xor
mov
in
cmps
or
pop
mov
int
dec
inc
push
fsubr
out
out
test
aaa
out
not
in
out
test
sbb
pop
pop
dec
aas
pop
rcl
retf
cmps
push
push
cmp
pop
sub
je
sub
test
rcl
mov
mov
ret
xchg
push
cmp
xlat
in
lods
icebp
jmp
adc
ins
pop
ror
lds
test
sub
fidiv
ret
or
mov
mov
repnz
(bad)
stc
mov
mov
jge
ret
scas
mov
mov
cs
fs
out
gs
cld
mov
add
(bad)
scas
outs
movs
out
adc
inc
adc
mov
xor
and
aad
movs
dec
dec
mov
add
(bad)
jns
(bad)
mov
inc
ss
pop
dec
push
aad
mov
ds
dec
movs
pop
jne
mov
or
push
mov
daa
pushf
or
(bad)
mov
cs
cmp
mov
ja
fisubr
xor
cmp
retf
sti
ja
repnz
repnz
jecxz
inc
or
call
jb
mov
nop
mov
adc
xor
xchg
push
data16
jge
ins
push
mov
ins
dec
retf
repz
adc
movs
xor
aam
aas
stos
mov
pop
aas
or
js
and
mov
into
movs
cmp
dec
pop
xchg
cmp
sbb
cmps
sbb
in
jl
jle
add
and
pop
add
add
adc
(bad)
(bad)
sbb
out
aaa
mov
inc
inc
push
repnz
in
fistp
enter
push
lock
xchg
mov
or
mov
das
out
sbb
push
(bad)
pop
mov
stos
xchg
sub
mov
cmp
nop
xchg
aam
dec
xor
lds
aas
jl
or
add
pop
sar
jp
outs
and
sub
dec
push
data16
sar
retf
mov
sub
sbb
add
push
mov
mov
mov
test
mov
xchg
stc
sub
shl
js
popf
inc
clc
inc
test
test
mov
std
retf
jns
cs
lds
xor
xchg
mov
jno
sub
pop
(bad)
fimul
adc
out
xchg
pop
call
adc
xor
sbb
mov
cmp
popf
jns
inc
push
pop
mov
push
sbb
call
mov
sbb
cmp
pop
aad
mov
pop
cld
gs
jmp
mov
and
mov
cmp
sub
adc
cdq
outs
jecxz
sar
inc
mov
movs
ja
inc
daa
sub
lea
cmp
sbb
jne
inc
jo
push
jne
mov
jns
jnp
dec
pop
stos
loope
not
aam
xor
dec
inc
push
ss
movs
aaa
xlat
mov
jp
mov
out
loopne
shr
aam
inc
or
jns
(bad)
loop
dec
loope
int
imul
and
jo
sbb
js
hlt
es
pop
test
xchg
enter
cli
push
xchg
adc
sbb
push
push
sbb
clc
xor
bound
pop
and
inc
push
push
bound
shr
jg
clc
adc
in
and
push
mov
add
gs
inc
cld
iret
adc
js
add
cs
push
jno
mov
sub
faddp
data16
es
push
iret
mov
jns
(bad)
pop
add
hlt
(bad)
out
sti
fcom
sub
mov
cmps
rol
jbe
push
mov
inc
aam
lods
div
xlat
xor
bound
cwde
sub
rcl
jl
lea
sub
inc
cmp
mov
pop
mov
call
iret
mov
rcl
cwde
rol
ja
xchg
lds
mov
fneni(8087
dec
inc
js
inc
push
nop
jge
dec
mov
and
std
es
rcl
je
and
scas
cwde
cli
pop
stc
inc
push
mov
pop
cmp
xchg
sbb
or
nop
cmp
test
test
in
aaa
dec
xchg
pushfw
xchg
fstp
add
jmp
sar
and
push
leave
aad
cmp
and
aaa
rcl
(bad)
and
sbb
les
xor
cdq
inc
popa
mov
nop
inc
cmp
xor
cmp
out
xor
gs
xor
mov
or
aas
and
out
sub
and
(bad)
jge
mov
retf
inc
cmp
call
cmp
into
pop
popa
(bad)
(bad)
in
retf
jmp
or
adc
mov
mov
add
jmp
xchg
fstp
dec
sub
sbb
hlt
pop
inc
cdq
dec
sub
call
sar
fucomp
ja
loopne
push
neg
les
data16
(bad)
sbb
movs
pop
cmp
push
stc
jo
add
mov
mov
stos
jbe
movs
out
jo
sbb
adc
aad
fsubp
movs
add
jle
cmps
cmp
out
cmp
fcomp
xlat
xchg
sub
out
test
icebp
out
(bad)
cmp
arpl
mov
popf
lds
push
test
pop
cmp
dec
call
and
stc
add
neg
pop
add
push
lea
jge
inc
jl
or
pop
sahf
mov
push
mov
and
push
xchg
hlt
sub
mov
stc
je
mov
hlt
std
inc
xor
sbb
mov
jo
stc
cli
mov
aas
inc
mov
xchg
adc
inc
jp
or
test
sub
pop
cli
out
cmp
cmp
sub
xor
retf
int3
cmps
sbb
adc
pop
inc
mov
jmp
gs
inc
call
fdivrp
add
sti
icebp
cmp
cmp
pop
dec
cld
or
hlt
add
jnp
scas
jns
sbb
xchg
cdq
repz
inc
out
adc
push
addr16
xor
stos
xor
cmp
jp
addr16
and
pop
lods
mov
std
out
jp
or
fcomp
and
mov
dec
inc
int3
daa
push
(bad)
xor
mov
xor
pop
and
loop
pop
and
mov
lock
lea
bound
scas
mov
icebp
adc
fist
jo
lock
and
push
rcl
mov
popf
bnd
mov
bound
ss
dec
dec
out
jl
jns
cmps
pcmpeqw
sar
dec
sub
dec
(bad)
rcl
mov
cdq
or
call
cli
das
dec
call
sbb
retf
add
inc
pushf
lods
mov
dec
lock
jecxz
out
mov
test
mov
test
mov
xchg
xor
pop
pop
inc
icebp
cmp
pop
imul
shr
mov
add
(bad)
daa
les
mov
mov
adc
sub
sbb
jne
add
and
out
xor
xchg
sbb
call
cmp
push
add
out
fsub
loop
dec
xchg
daa
jo
in
cmp
adc
data16
and
repz
mov
lods
jbe
pop
pop
pop
lods
shl
addr16
or
inc
cmps
xchg
inc
stos
outs
inc
or
fsubr
push
(bad)
out
gs
or
xchg
jecxz
pandn
xchg
jmp
fadd
mov
and
adc
repnz
in
mov
xor
inc
cs
out
xor
inc
jb
es
arpl
xlat
loopne
push
jae
cmc
pop
xlat
add
mov
movs
cdq
jo
ret
cdq
mov
inc
adc
add
popa
inc
inc
mov
test
sbb
and
add
sub
mov
jecxz
std
push
pop
popf
data16
data16
dec
cmp
jae
addr16
xchg
shl
pop
fdiv
stc
ss
repnz
popf
in
mov
lahf
push
mov
into
push
xor
retf
add
jmp
popa
cs
dec
popa
std
rol
addr16
fstp
inc
inc
mov
xor
lods
icebp
pop
(bad)
xor
ja
in
iret
out
ins
xchg
xchg
movs
add
pop
jg
xchg
fstp
pop
icebp
mov
dec
gs
adc
xchg
cmp
mov
stos
shl
(bad)
jg
mov
add
or
iret
sbb
sbb
ins
mov
loop
mov
out
stc
(bad)
out
sqrtps
mov
adc
outs
pop
sub
and
stos
push
xchg
movs
xchg
sub
xchg
mov
adc
inc
cs
jnp
or
mov
shl
rol
mov
and
xor
(bad)
adc
rol
lods
gs
rcr
or
pop
sub
xor
stos
sub
mov
mov
stos
mov
xchg
out
mov
mov
pusha
ins
dec
sub
sar
leave
and
repz
pop
add
out
sub
dec
xchg
pop
aaa
sub
pop
sbb
pop
dec
pop
inc
js
mov
xor
and
jns
call
mov
into
jmp
jno
sub
repz
mov
add
aam
ror
dec
xchg
push
mov
push
out
loope
xor
mov
adc
cli
sbb
in
xchg
out
pop
std
jmp
js
(bad)
sahf
push
adc
adc
icebp
jne
sbb
adc
sbb
cli
push
and
aas
inc
mov
or
add
mov
or
jge
jmp
xchg
test
call
pop
(bad)
push
xchg
inc
xbegin
aam
loope
das
ret
sub
and
or
xchg
mov
push
(bad)
jle
jnp
jno
cmp
int3
push
(bad)
into
and
loopne
sbb
sbb
pop
int
inc
cmp
jnp
sub
lds
pop
xlat
repnz
and
int3
hlt
hlt
test
mov
cs
stc
cmps
(bad)
stos
and
test
in
ins
adc
mov
and
test
inc
mov
ss
or
pop
xchg
inc
xchg
mov
inc
jge
lahf
mov
outs
int
sti
(bad)
pop
xchg
scas
test
stos
mov
pop
or
mov
push
pop
cdq
cmps
cmp
jns
rol
push
xlat
mov
jbe
in
jecxz
aas
mov
cmp
push
pop
mov
mov
sbb
fild
dec
sub
add
rol
(bad)
xchg
cld
mov
xchg
fiadd
push
fcom
push
mov
stos
cmp
lock
and
push
xor
gs
imul
rcr
xchg
loop
pop
mov
fdivr
ss
mov
sub
xchg
pop
mov
jge
daa
fst
repz
data16
xor
adc
out
out
inc
repz
in
mov
fiadd
in
(bad)
cmps
lds
pop
mov
lahf
mov
sub
sbb
sub
out
pop
jg
pop
pop
js
repnz
inc
in
cmp
cmp
int
pop
push
mov
aas
das
xchg
scas
mov
sti
loopne
pop
push
cmp
and
pushf
push
push
arpl
xor
sbb
inc
outs
cmp
test
adc
xchg
cmp
push
shl
scas
push
repnz
dec
pop
add
mov
mul
jp
mov
pop
jne
xchg
mov
into
in
lock
aam
adc
ret
sbb
lock
loop
addr16
loope
push
inc
cmp
pop
inc
sti
mov
mov
je
jmp
pop
shl
inc
sub
xlat
xchg
or
adc
call
lea
mov
retf
mov
xchg
or
adc
sbb
mov
and
int
repz
mov
jbe
repz
jbe
xor
dec
mov
jmp
cwde
xor
retf
fiadd
jae
push
in
xchg
push
(bad)
leave
int
xchg
mov
scas
or
sub
hlt
pop
adc
mov
sti
xor
push
cmp
or
xchg
adc
sbb
shl
and
pop
jmp
ja
xchg
clc
bound
inc
in
out
mov
ret
ror
cmp
jge
mov
cmp
fmul
push
or
mov
outs
dec
jp
in
pop
mov
pop
fisubr
imul
pushf
jno
inc
repnz
sbb
jp
cmp
pop
dec
mov
mov
cmps
adc
out
mov
shr
jmp
jns
mov
imul
dec
test
clc
jecxz
cmp
aaa
addr16
jle
mul
in
adc
dec
stos
dec
push
dec
xor
xor
(bad)
mov
int
sub
add
and
fmul
xchg
(bad)
jne
mov
nop
stc
shr
jge
inc
cmp
nop
pop
ret
test
shr
ror
xchg
push
(bad)
hlt
fcom
cmp
jno
add
adc
vmread
call
pop
pop
xchg
cld
xchg
sbb
jbe
sar
(bad)
jne
pushf
adc
dec
js
adc
inc
ins
pop
clc
(bad)
ror
cs
shr
sbb
stc
push
sub
mov
jl
ds
loop
sub
adc
ins
mov
mov
adc
aaa
pop
popf
ret
aad
push
inc
dec
cld
js
push
lods
js
pop
xchg
scas
popa
adc
cwde
loop
(bad)
and
mov
in
cwde
pop
data16
pop
mov
and
mov
adc
je
gs
jno
pop
retf
movs
inc
lahf
xchg
in
mov
mov
dec
pushf
pop
dec
leave
int
in
mov
push
or
mov
cmp
mov
adc
call
mov
stc
aad
cmc
cs
and
mov
addr16
repz
sbb
mov
dec
aaa
popa
mov
push
dec
ins
sti
mov
adc
rol
shl
mov
repz
and
icebp
cs
push
retf
xchg
lods
lock
(bad)
or
add
cld
cmp
push
fiadd
into
stos
add
fist
fst
pop
dec
aaa
xor
jne
mov
retf
sbb
push
(bad)
pop
sbb
pop
test
(bad)
xlat
or
lock
aad
ins
jl
daa
sbb
dec
inc
jl
fimul
repnz
inc
dec
daa
loope
pop
mov
out
push
daa
loop
sbb
xchg
inc
sahf
mov
jns
push
not
lea
mov
xchg
sub
jae
cmps
jmp
sahf
movs
mov
sar
jno
divps
leave
xchg
mov
jp
out
adc
fstp
fadd
loope
sar
sub
pop
pop
stc
sti
push
sbb
test
xor
aam
pop
pushf
cmps
push
xchg
sbb
jne
inc
mov
jb
jae
pop
or
fdivr
gs
ds
jno
dec
mov
iret
lds
xchg
std
mov
and
imul
daa
call
push
dec
cmp
loopne
jne
or
fld
xchg
adc
xchg
bound
mov
adc
mov
sbb
xor
xlat
mov
pop
outs
cmps
mov
xor
or
ja
stos
jo
movs
in
ret
iret
push
stc
pop
push
das
and
jb
hlt
sbb
jae
sub
mov
mov
(bad)
(bad)
(bad)
stc
push
lods
sbb
test
inc
or
(bad)
jbe
jo
test
pop
pop
mov
push
dec
inc
push
call
ret
or
aad
sbb
ficomp
aaa
cmp
out
mov
jecxz
enter
xchg
loope
mov
adc
xchg
test
iret
mov
movs
cs
mov
stc
loopne
xchg
movs
aad
out
mov
add
add
xor
cmp
int
inc
test
stos
jmp
or
jne
add
ins
imul
or
jno
or
adc
pop
test
push
dec
xchg
aas
cli
arpl
cld
stos
xchg
add
imul
out
mov
popa
sbb
(bad)
mov
cli
xlat
(bad)
adc
xor
aam
(bad)
jmp
push
add
les
(bad)
pusha
xchg
pop
mov
jmp
(bad)
sar
mov
cdq
(bad)
cmc
arpl
sbb
pop
pop
mul
pop
stos
adc
cmp
aas
sub
mov
add
jmp
dec
mov
arpl
cmc
pop
retf
cmp
inc
int
push
mov
cmp
push
js
imul
jne
add
add
sub
fld
sbb
push
mov
aaa
nop
loop
fiadd
xchg
cli
jbe
movs
adc
jmp
mov
adc
sbb
jo
jle
sti
aas
in
neg
xor
outs
add
push
adc
pop
mov
cwde
cmp
mov
sbb
ins
xor
(bad)
pop
popa
das
sbb
cmps
loopne
pop
into
repz
cmp
xchg
int3
jle
push
nop
loope
lahf
call
es
xchg
jmp
push
or
push
dec
mov
or
mov
std
stc
repz
(bad)
and
repnz
or
(bad)
popa
cs
(bad)
jmp
mov
movs
xchg
cmp
or
jnp
mov
sub
js
imul
cmp
cmp
mov
xor
xor
in
(bad)
dec
pop
call
pop
inc
repz
daa
cmp
mov
dec
sbb
jnp
mov
cmp
hlt
adc
dec
dec
inc
dec
icebp
popf
add
mov
sub
call
dec
pop
outs
mov
cmp
stos
in
dec
push
mov
xlat
push
loope
pop
test
and
jnp
xor
ret
mov
aad
xchg
fbstp
jecxz
js
adc
loop
and
add
shr
sbb
fcom
sub
push
loop
cmp
push
es
scas
scas
std
repz
cmp
pushf
push
mov
sti
dec
mov
pop
movs
into
ror
repnz
dec
and
retf
push
cdq
xor
out
jnp
fisubr
xor
jle
push
cmp
popf
fucomp
xor
mov
xchg
or
fidivr
mov
dec
jno
jbe
jmp
pop
test
mov
cli
mov
adc
add
push
inc
push
mov
pop
push
sar
ja
fstp
xchg
stos
adc
add
push
or
ss
add
leave
cmp
adc
aad
stos
test
inc
sub
sub
xchg
scas
sbb
mov
pushw
mov
cmps
dec
xor
ss
mov
aaa
and
jne
and
push
je
sahf
int
scas
jmp
ins
xor
out
xchg
idiv
(bad)
fadd
adc
add
sbb
add
push
adc
loop
cmps
fld
lock
mov
stc
dec
sbb
sahf
das
cmp
pop
sub
dec
mov
daa
jle
push
fcomp
sti
pop
mov
into
sub
and
jno
je
xor
push
cmp
ss
mov
pop
push
in
lods
ins
inc
lods
test
mov
call
out
sub
inc
cs
push
sahf
stc
aam
xchg
sub
pop
xor
mov
fs
out
inc
inc
push
jmp
jp
loop
xchg
lock
repnz
mov
addr16
daa
mov
fidiv
test
jo
xor
and
or
in
xor
addr16
out
xchg
add
add
jnp
jg
xchg
cdq
stos
push
fadd
pop
rcl
add
mov
frstor
movs
test
neg
xchg
and
fist
and
xor
fimul
call
sbb
outs
pop
dec
rol
scas
(bad)
xor
ret
pop
imul
adc
xor
outs
arpl
dec
jmp
jmp
imul
leave
pushf
mov
sub
pop
push
xchg
jnp
inc
fs
add
daa
cmp
mov
fwait
and
xor
cmp
scas
pop
adc
or
(bad)
xor
jae
mov
pop
shl
test
fcomip
sub
mov
mov
inc
inc
xor
or
cli
pop
mov
sub
or
xor
retf
cmps
aas
test
jns
imul
gs
ret
aas
xchg
cmp
ret
push
lods
ja
dec
inc
and
sub
mov
mov
fdiv
mov
or
stc
test
inc
outs
mov
fbstp
pop
sub
mov
and
rcl
add
inc
scas
push
mov
sub
std
pop
fbstp
ds
pop
in
scas
mov
mov
jecxz
clc
mov
or
cmp
jge
ror
sub
mov
and
push
mov
call
mov
xor
not
add
mov
in
loope
jle
icebp
mov
push
xchg
out
cmc
fidivr
fistp
dec
adc
enter
rcr
mov
and
out
sub
stc
(bad)
xlat
clc
push
sub
sub
push
push
cmp
iret
jmp
pop
mov
(bad)
dec
in
adc
xchg
lods
mov
push
sbb
fwait
in
mov
inc
mov
sub
arpl
push
inc
das
jl
repz
adc
movhlps
fimul
fs
pop
pop
fs
pop
ret
sub
xchg
arpl
jmp
cmp
xchg
xlat
push
imul
in
pop
xchg
pusha
mov
lods
pop
stos
mov
ret
pop
or
inc
xlat
xchg
xlat
and
dec
(bad)
and
or
(bad)
retf
bound
scas
mov
sub
(bad)
enter
div
test
gs
test
mov
ss
ins
sar
ret
adc
xor
pop
sbb
stos
adc
xor
jmp
and
jle
push
jb
or
adc
or
lods
xor
push
inc
dec
test
mov
jecxz
or
sahf
adc
adc
out
xchg
mov
mov
hlt
test
add
mov
mov
inc
adc
(bad)
frstor
dec
or
pop
int3
and
push
mov
(bad)
mov
fdivr
ds
pop
in
ret
jmp
(bad)
out
inc
pushf
dec
push
aaa
sub
push
xchg
fisub
movaps
xchg
clc
and
sub
dec
or
xor
test
jae
loope
iret
dec
popf
fxch
mov
fcomp
push
retf
sub
stos
mov
aaa
je
pop
fs
fs
out
cmps
aas
add
adc
xor
adc
lahf
jge
cmps
sub
test
(bad)
out
aas
jb
add
fwait
and
nop
xchg
dec
jns
sub
or
xor
and
pop
test
je
adc
dec
xchg
jg
div
stos
mov
pop
and
mov
stos
jmp
adc
cmp
inc
push
or
inc
sbb
add
lods
movs
daa
mov
and
lahf
cs
shr
popa
pop
in
cmps
jmp
icebp
inc
jmp
jmp
leave
js
fstp
inc
sti
inc
push
imul
mov
outs
nop
push
pop
lods
lea
mov
mov
push
fisub
xor
sbb
loopne
je
retf
pop
ds
xchg
jnp
das
lahf
push
shl
sbb
not
(bad)
out
mov
sub
inc
push
push
pop
scas
(bad)
das
mov
sub
popa
push
ss
inc
aas
push
das
(bad)
and
int
jae
ins
std
ins
mov
in
pop
jl
cmp
ins
push
jle
movs
or
fld
mov
pop
dec
or
add
test
push
aam
out
aad
jae
jle
sbb
and
pop
cmp
jnp
lahf
mov
clc
mov
lea
popf
xor
retf
push
sbb
lds
pop
sub
pop
icebp
cdq
aaa
cmp
jae
std
xchg
out
xchg
xor
and
retf
shl
outs
outs
ret
repz
enter
and
mov
retf
das
stos
jae
mov
aaa
mov
imul
fdivr
retfw
cmp
pop
cdq
and
test
retf
and
pop
mov
xchg
mov
fidiv
cmc
mov
inc
test
rcr
int3
(bad)
fwait
jg
popa
loopne
aam
push
into
(bad)
test
cs
cs
cmps
jge
sbb
dec
loop
xlat
push
xchg
test
adc
fimul
mov
js
mov
cld
mov
pop
mov
call
stos
pop
stos
mov
scas
ds
mov
add
push
sahf
push
adc
fldcw
leave
stos
pop
mov
sbb
imul
nop
std
xchg
mov
dec
loopne
jae
push
mov
cmps
sbb
stos
sti
std
or
pcmpeqb
lahf
pop
in
and
xchg
pop
iret
jle
cmps
inc
idiv
xor
fnstcw
adc
push
mov
push
into
inc
pop
ja
rol
adc
sbb
mov
add
inc
inc
lods
sti
pop
in
repnz
std
loopne
ror
enter
dec
fisub
in
fild
add
or
nop
push
pop
daa
add
lods
push
jb
loop
inc
inc
into
call
pop
fist
icebp
repz
arpl
add
jno
retf
mov
pcmpeqd
dec
loope
ds
mov
cmp
mov
out
nop
and
push
cmps
clc
mov
or
leave
cmp
mov
adc
mov
and
out
loopne
fwait
jmp
add
jecxz
jle
dec
cmp
mov
stos
or
mov
or
dec
pop
and
mov
cli
ror
in
adc
loop
jns
(bad)
nop
jae
ret
enter
fisttp
movs
push
jne
xchg
fnstsw
jmp
lods
mov
sbb
pop
enter
(bad)
sbb
sbb
ror
push
mov
sbb
xchg
mov
sbb
inc
mov
unpcklps
rcr
clc
push
xlat
jl
les
clc
add
pop
not
pop
movs
std
movs
and
mov
retf
mov
push
xor
push
mov
xchg
(bad)
push
push
repnz
in
jo
imul
(bad)
fmul
ds
popf
(bad)
mov
push
test
xlat
xchg
jo
dec
push
(bad)
fucomip
xchg
xor
xchg
test
add
(bad)
xor
daa
(bad)
in
mov
loopne
cmp
and
sub
inc
arpl
mov
mov
pop
outs
inc
mov
sbb
xchg
lods
dec
and
push
data16
icebp
jbe
sub
cwde
fdivr
not
jg
cmp
push
mov
pushf
push
and
stos
pop
pusha
mov
pop
push
fidivr
stos
ucomiss
imul
dec
ds
sbb
lahf
aad
(bad)
addr16
cmp
cmp
test
push
sahf
icebp
ins
mov
cld
and
fisubr
mov
dec
cmp
ss
jo
xchg
arpl
dec
xor
push
add
lods
pop
dec
or
ins
cmp
sub
cmps
ins
int
icebp
jle
mov
dec
jb
xor
pop
mov
inc
pop
test
cmp
and
jmp
cli
sub
jae
out
and
ror
call
inc
fs
les
xchg
or
int
push
leave
cdq
jecxz
pop
adc
mov
xchg
fwait
stos
test
fist
sub
imul
std
jl
repnz
int3
ror
mov
(bad)
sub
sub
imul
xchg
xchg
jmp
rcl
add
stos
sub
xor
out
div
pop
inc
mov
loop
aam
lock
xchg
fmul
movs
xchg
in
push
push
movs
pusha
inc
mov
fs
push
out
xor
into
sub
test
pop
pop
sbb
dec
ror
xchg
mov
pop
jbe
xor
aaa
int3
data16
cmp
pop
into
cs
mov
(bad)
cli
shr
push
stos
pop
ds
out
(bad)
and
retf
mov
sbb
dec
fist
leave
adc
push
xchg
rol
mov
orps
mov
ja
inc
mov
mov
pop
in
mov
jb
push
or
aas
popa
mov
in
frstor
mov
push
add
int
movs
in
inc
push
int
nop
das
dec
adc
adc
and
fimul
icebp
jno
jl
stc
jbe
mov
addr16
xchg
fmul
push
out
fnstenv
lea
or
jo
out
cdq
lea
jno
cs
adc
fnstenv
push
xchg
out
in
arpl
or
push
std
int3
sub
jo
and
or
rcl
dec
add
fldcw
cmc
pop
jmp
or
push
bound
test
mov
jp
ds
js
mov
adc
jb
(bad)
xlat
test
pop
jno
sbb
jp
sub
sub
idiv
inc
sbb
sbb
sbb
retf
scas
stos
mov
mov
or
xor
jmp
fiadd
daa
fcom
(bad)
cmps
inc
inc
jge
jae
pushf
xor
ins
ins
movs
aad
(bad)
gs
jb
inc
sub
cdq
dec
or
add
mov
stc
pop
mov
push
fmul
repnz
inc
pop
jb
in
push
add
pop
jle
or
inc
mov
loop
mov
int3
mov
sub
xlat
fisub
jb
jmp
jl
push
mov
imul
mov
cmp
fcom
mov
leave
sub
fdiv
mov
inc
sbb
sbb
sbb
or
iret
jge
xchg
inc
call
sbb
ja
cmp
cmp
push
ss
xchg
aad
mov
shl
imul
xor
pop
pop
repnz
xor
cmp
sbb
lods
mov
shr
lock
imul
imul
push
idiv
into
jg
sbb
imul
sbb
mov
and
shl
popf
add
mov
add
push
and
sbb
sub
sbb
fdiv
sbb
cmp
fdiv
je
mov
outs
xchg
push
push
pop
outs
test
or
pop
and
mov
int3
int3
adc
arpl
stc
cmp
dec
dec
lods
cmp
js
ja
add
fprem1
je
int
(bad)
icebp
cdq
test
push
aaa
xor
fmul
push
aam
fisttp
jno
ret
or
cli
js
jmp
daa
into
imul
into
mov
push
mov
mov
fbld
adc
sub
out
rol
mov
in
jno
repz
imul
sub
(bad)
xor
inc
pop
sar
xchg
mov
and
rcl
hlt
nop
lods
imul
fdivr
cmovnp
nop
and
cmp
(bad)
in
lahf
and
inc
mov
dec
xchg
sub
dec
xlat
xchg
(bad)
mov
inc
lock
(bad)
add
push
and
sbb
lods
arpl
push
sbb
push
mov
mov
push
pop
shr
adc
or
inc
loop
(bad)
dec
xor
cld
in
(bad)
rcl
fist
pop
je
adc
cmc
call
adc
add
cmp
pop
fistp
in
aam
(bad)
loope
je
dec
mov
fcomp
dec
enter
aaa
mov
dec
or
lock
mov
jae
xchg
mov
xchg
dec
mov
inc
fisttp
xlat
jae
lahf
inc
int
arpl
nop
cld
mov
int
idiv
aas
xor
or
adc
adc
nop
jne
xchg
sub
or
sub
mov
mov
cmp
jg
shl
xor
pop
cmp
sbb
pop
push
inc
loop
pop
push
or
in
fwait
(bad)
push
jbe
cwde
mov
cmp
dec
push
push
out
or
push
or
xchg
loopne
movs
pop
js
push
mov
cdq
push
dec
mov
movs
mov
in
cmps
inc
mov
and
jmp
aas
xchg
mov
dec
or
mov
jae
inc
adc
pusha
das
(bad)
and
mov
mov
sar
push
stos
dec
or
(bad)
cdq
movs
not
clc
inc
icebp
mov
or
cdq
aam
pop
mov
add
jle
dec
lea
push
test
add
sti
or
sub
or
jle
ss
mul
arpl
lahf
aaa
sti
mov
or
push
push
push
loop
retf
fsubr
xlat
lods
shl
add
mov
ret
scas
jo
push
nop
sti
das
sbb
push
ins
jg
mov
mov
rol
cmc
test
push
stos
push
xchg
or
cmp
es
inc
dec
stos
ds
in
repnz
std
add
or
fwait
lea
lods
cmp
mov
fs
pop
adc
test
pop
movs
ins
dec
push
sub
stc
cdq
sbb
repz
add
scas
loop
cmp
ss
mov
or
xor
shl
mov
jmp
jecxz
(bad)
fst
mov
sar
xchg
rcr
test
dec
mov
and
xlat
sub
sub
mov
fsub
add
cmc
mov
xchg
sbb
mov
or
imul
adc
neg
inc
or
pop
add
sahf
add
es
dec
xlat
mov
arpl
mov
std
cmp
fcomp
lock
(bad)
call
out
push
and
xchg
fdivr
js
mov
push
sub
sub
and
cmp
sub
shl
loope
mov
out
mov
pop
add
leave
dec
pop
adc
data16
int3
mov
ds
neg
mov
jle
mov
in
xchg
out
xchg
adc
lahf
dec
repnz
pop
imul
or
and
sbb
(bad)
pushf
movs
test
sbb
mov
mov
mov
cmp
retf
adc
icebp
jns
dec
out
xor
adc
fwait
inc
mov
call
dec
pop
push
lods
mov
int3
push
pop
sbb
sbb
ins
data16
fsubr
sbb
fsubr
cmp
add
lahf
ins
sub
and
dec
xor
inc
into
add
ins
push
or
or
push
cmps
ror
sti
jl
jl
sbb
repnz
cdq
pop
call
jmp
add
pushf
jb
ins
adc
ficomp
push
adc
mov
js
stos
jp
fsubr
movs
cmp
fnstenv
pop
outs
push
hlt
adc
mov
and
mov
adc
mov
dec
aaa
lods
bound
jae
and
xlat
or
mov
push
mov
mov
test
inc
popa
pop
adc
push
js
xor
mov
xor
call
jnp
aam
rcpps
inc
hlt
jno
mov
xchg
fidivr
(bad)
ficomp
pop
out
sub
leave
or
ret
inc
pop
inc
mov
ja
fs
add
jge
movs
pop
jl
jmp
mov
shl
ret
push
xlat
fwait
sbb
pop
and
out
add
rcl
jne
adc
push
outs
inc
rcr
imul
repnz
dec
(bad)
aas
push
aad
jmp
data16
fwait
ins
fs
int3
ins
xor
xor
add
and
sub
add
fsubr
pop
mov
das
das
cmp
repnz
pushf
xor
jno
xchg
(bad)
push
movs
jae
mov
cmp
into
inc
cmp
xor
loope
xor
movs
dec
xchg
test
xor
in
dec
add
and
repnz
inc
mov
xchg
or
sahf
adc
cs
adc
call
adc
outs
outs
push
pop
in
retf
mov
imul
sbb
adc
xchg
loopne
fwait
scas
jns
fcomip
out
mov
jno
stos
ret
rcl
call
repnz
rol
jge
icebp
lahf
ins
outs
in
ja
jbe
nop
lock
pushf
and
cmovbe
mov
out
ret
aas
aaa
pop
clc
or
test
push
xchg
ret
mov
push
xchg
rcr
ret
mov
mov
add
repz
mov
jle
add
jns
idiv
daa
frstor
stos
out
je
and
jnp
call
mov
sahf
mov
xor
xlat
xchg
push
addr16
pop
cld
jle
jno
in
sub
mov
aaa
mov
dec
sub
out
mov
cmp
inc
pusha
popa
enter
inc
out
int
mov
jno
imul
and
fcom
mov
mul
mov
and
test
jge
aaa
add
ret
test
shl
mov
aas
mov
mov
fstp
loop
add
mov
daa
xchg
xlat
xor
mov
or
es
mov
sub
xchg
mov
adc
rcl
sbb
aaa
lock
enter
cld
push
test
cli
sbb
aad
(bad)
into
push
pop
and
pop
jno
mov
or
mov
pop
test
movs
or
mov
popa
sub
mov
jl
scas
test
pop
mov
out
dec
cmp
stc
push
push
scas
dec
pop
jg
mov
pop
cwde
(bad)
scas
pop
aam
daa
sub
dec
and
mov
addr16
retf
(bad)
fst
fild
mov
fnstcw
in
push
inc
stos
sub
out
cmps
inc
inc
and
dec
mov
daa
movs
or
les
repnz
scas
xor
adc
mov
outs
sbb
clc
xchg
loop
push
(bad)
sub
cs
jge
aaa
and
ret
aad
jl
adc
mov
sub
jecxz
pop
cmps
xchg
ins
mov
sub
jne
fild
jl
aaa
or
jnp
dec
in
int3
jecxz
cld
mov
cwde
mov
push
out
xor
mov
fst
ins
jnp
jmp
add
sbb
adc
pop
pop
cmc
cld
or
push
cmp
mov
enter
into
cmp
cwde
add
enter
dec
mov
ins
mov
aas
call
in
mov
or
lea
shl
je
mov
cli
pusha
fdiv
cmp
fbstp
add
fcomip
mov
xchg
cmp
adc
cwde
or
out
cmps
std
xor
clc
cmp
sbb
std
(bad)
push
nop
int
add
jp
jo
ds
add
or
popa
sbb
leave
add
push
outs
or
mov
sbb
dec
in
dec
mov
sub
xchg
mov
stos
xchg
xchg
sub
mov
mov
shl
dec
repnz
push
jge
adc
push
ja
mov
mov
fisttp
add
pop
sahf
jle
inc
jmp
and
cmp
add
(bad)
int3
xchg
stos
xchg
sbb
rcl
das
inc
push
push
pop
dec
pop
jo
outs
dec
jnp
push
addr16
rcr
adc
or
rol
sbb
xchg
pop
(bad)
clc
jno
imul
and
sar
mov
sub
cmp
jmp
aad
(bad)
jmp
jmp
mov
dec
and
loope
sub
lods
stos
sub
and
cmp
js
shr
push
adc
add
cmps
aaa
xor
mov
test
mov
scas
jle
cmp
jmp
(bad)
mov
cmp
aaa
dec
icebp
mov
(bad)
push
repz
fdiv
jl
outs
repz
xchg
inc
hlt
mov
pop
xchg
mov
iret
jg
icebp
sbb
leave
push
repnz
jns
test
stos
xchg
pop
les
xor
sub
cmps
and
cdq
(bad)
mov
cmc
enter
and
xor
or
repz
cmps
popa
mov
sub
ins
jp
push
xchg
ss
daa
xor
dec
and
push
shl
dec
add
imul
add
xchg
pop
fdiv
cmp
stos
imul
mov
(bad)
cmp
sbb
dec
add
xor
pop
mov
and
sbb
enter
add
scas
inc
push
xchg
fcomi
cmp
arpl
(bad)
and
pop
sbb
sar
or
sub
push
shl
pop
cmps
push
mov
xchg
xchg
repz
jo
sub
mov
jae
cmp
jp
repnz
mov
add
mov
inc
mov
clc
mov
sub
ins
dec
int
movs
xor
(bad)
ins
lods
adc
movs
(bad)
and
fwait
cmp
sub
shl
xor
xchg
mov
outs
sub
mov
adc
xchg
push
das
mov
aad
jmp
jmp
lds
out
rcl
cmp
add
pushf
adc
jne
adc
aas
test
inc
stos
enter
test
or
aaa
(bad)
pop
pop
or
mov
cmp
or
inc
push
jne
mov
(bad)
sbb
idiv
aaa
dec
mov
jge
shl
jp
adc
and
movs
arpl
rcl
fdivrp
movs
pushf
jg
inc
push
mov
mov
xor
out
dec
mov
ins
xchg
and
mov
aad
jnp
pushf
inc
clc
maxps
lock
push
sbb
xchg
sar
dec
and
jns
push
mov
cs
ins
ds
dec
adc
xor
es
iret
fincstp
in
xor
cmp
rcl
in
mov
sahf
or
push
es
cmps
push
mov
ret
fisub
add
and
enter
pushf
mov
push
(bad)
call
push
pop
jp
add
icebp
sbb
xor
sub
dec
dec
xchg
xchg
or
jno
jne
xor
(bad)
sub
pop
mov
nop
shl
xor
xor
mov
cld
je
dec
sbb
mov
icebp
into
into
jp
xchg
mov
jno
inc
out
sbb
jno
(bad)
mov
pop
sub
(bad)
(bad)
jl
mov
pop
loope
dec
or
test
push
xchg
outs
sahf
mov
sub
pop
fs
xchg
mov
add
stc
das
(bad)
cmps
ret
push
cmp
mov
and
retf
mov
icebp
and
and
sub
rol
cmc
fs
ror
lahf
push
jecxz
fcomp
xchg
mov
ins
inc
int
fs
xchg
int
cwde
xor
sahf
test
pop
ret
push
pop
jp
cli
pop
stc
jl
add
pop
pop
xor
in
into
fcomp
inc
lock
std
push
pop
jl
test
add
xor
jbe
mov
xor
sbb
das
loopne
fimul
dec
xchg
in
mov
retf
cmps
scas
js
imul
jmp
push
or
adc
sub
pop
stos
sub
inc
lock
test
sub
rol
shl
call
and
xor
jno
loopne
sahf
test
jle
add
mov
jns
mov
ror
cmp
or
popa
mov
xor
adc
popa
mov
xchg
out
pop
mov
add
fdiv
xlat
lock
jb
xchg
sbb
aas
enter
dec
jb
dec
shl
ror
cmps
xor
clc
mov
or
cmp
push
or
cld
lea
add
or
jecxz
mov
add
push
or
jmp
int3
jecxz
cmp
cld
add
add
mov
pop
sahf
pushf
push
sbb
fbstp
and
sar
sahf
es
mov
enter
xchg
xlat
push
popf
xlat
scas
jno
jle
mov
jge
jecxz
lods
mov
sar
pop
mov
and
xor
sbb
push
jae
iret
or
xchg
mov
test
ss
add
sub
int3
inc
stc
jmp
ret
sqrtps
scas
movs
xchg
lods
cld
out
in
lods
pop
pop
mov
dec
sbb
xor
aas
(bad)
push
jg
mov
mov
aam
sbb
adc
leave
xlat
or
jnp
jne
imul
arpl
fstp
pop
test
inc
pop
fsub
out
retf
cmp
add
(bad)
inc
sub
add
lods
push
pop
cs
jmp
mov
pop
rcr
fist
sub
retf
or
jl
dec
outs
sbb
sbb
sbb
cmp
dec
inc
outs
sbb
clc
fimul
iret
std
das
imul
das
mov
mov
rol
and
mov
mov
inc
aas
adc
mov
sbb
out
fsubr
jmp
cli
and
mov
imul
mov
sti
(bad)
mov
out
mov
dec
cmp
es
(bad)
hlt
stc
inc
push
mov
cwde
mov
add
jne
int
or
in
fisubr
imul
cld
repz
es
adc
jge
fidivr
adc
mov
or
repz
js
outs
mov
cli
mov
loopne
sbb
(bad)
leave
cli
xor
mov
leave
pushf
fsincos
rcl
cmp
in
mov
pop
jle
das
cmp
xor
ret
mov
jbe
lods
movs
cmp
outs
mov
retf
jle
enter
div
shr
fldcw
pop
jge
jo
inc
cmp
jmp
ja
cli
mov
ret
and
cmc
adc
mov
cmp
loop
sbb
mov
inc
mov
mov
cmp
or
aas
loop
jge
xchg
push
daa
inc
popa
fmul
imul
pushf
jae
icebp
pop
movs
adc
push
lahf
fs
adc
and
sub
cmps
mov
mov
jae
inc
ror
dec
sbb
pusha
jmp
inc
sub
mov
and
inc
repnz
stc
cmp
sbb
or
(bad)
mov
sbb
iret
pop
pop
dec
fstp
mov
bound
in
inc
xchg
push
xchg
movs
xor
cmc
mov
fs
(bad)
and
mov
mov
xor
retf
out
inc
xchg
pop
mov
ficomp
inc
jbe
loopne
xchg
cmps
xlat
repz
inc
repz
dec
loopne
adc
loopne
xchg
inc
cmp
pop
xor
push
jecxz
aam
imul
inc
test
adc
int
mov
or
ffreep
dec
mov
iret
pop
scas
xchg
fstp
(bad)
mov
push
mov
dec
jmp
push
push
(bad)
adc
call
imul
cdq
bound
cmp
push
rcr
xchg
cmps
int3
and
enter
rol
ret
hlt
test
or
push
xor
sbb
lods
inc
bound
fs
ins
push
jb
hlt
add
mov
and
xor
pop
cmps
imul
xor
jecxz
inc
popf
mov
jnp
jae
mov
and
mov
dec
ret
push
int
pop
dec
jnp
sahf
call
bound
dec
mov
aaa
xor
in
sub
xor
jno
repz
mov
dec
lds
jle
addr16
retf
mov
or
movs
outs
out
add
fild
push
rol
push
rcl
shl
sub
push
ins
cmp
jl
test
(bad)
out
push
sbb
loope
or
sub
push
mov
mov
sub
mov
nop
imul
xor
lods
cmp
push
scas
push
mov
adc
inc
pop
sub
pop
test
pop
cmp
xor
inc
call
dec
mov
xor
xor
fwait
int
dec
outs
sbb
mov
mov
cli
xor
pop
cmp
add
xlat
je
xchg
jecxz
jmp
dec
mov
scas
fidivr
popa
dec
in
nop
jecxz
xchg
mov
ins
(bad)
and
mov
aam
(bad)
in
jnp
jmp
push
data16
dec
imul
push
pop
pop
das
cmp
dec
adc
and
xor
inc
test
in
imul
cmp
xchg
push
jno
test
mov
fdiv
lds
xchg
jne
shr
inc
imul
dec
or
out
sar
imul
xlat
mov
mov
add
jmp
add
hlt
mov
cmps
xor
cld
das
pop
xchg
pop
and
sbb
sub
bound
push
and
(bad)
push
sahf
push
out
ret
push
xor
popa
xchg
inc
sbb
nop
or
ds
pusha
sbb
mov
mov
push
add
adc
fidivr
push
cli
loope
mov
sub
shl
xor
lods
xchg
add
mov
mov
fldenv
dec
mov
jp
addr16
push
paddb
jle
and
ins
mov
mov
fdiv
mov
ret
jge
jbe
and
sub
test
movs
sub
xor
jmp
mov
cmps
aas
data16
push
nop
jmp
adc
xor
loopne
mov
repnz
aam
test
loope
jnp
mov
rcr
push
repz
pop
rcl
pop
xor
bound
mov
jmp
test
sub
mov
(bad)
sti
inc
mov
push
jecxz
push
aaa
and
popa
je
xor
jmp
mov
loopne
mov
(bad)
(bad)
push
pop
cmp
fstp
mov
inc
mov
imul
jns
mov
fidivr
inc
xor
push
int
xchg
sahf
ins
and
pop
cs
mul
lods
loopne
lahf
mov
pop
aad
cmps
daa
or
outs
sbb
sub
push
and
movs
mov
ins
mov
test
inc
lea
mov
or
dec
ret
movs
loop
cmp
retf
xlat
or
pop
and
mov
lods
sbb
hlt
call
mov
sub
sub
(bad)
(bad)
addr16
cmp
scas
sub
jl
and
mov
in
pop
pop
push
out
push
jecxz
xchg
fisttp
jp
std
mov
repnz
jne
xor
ror
push
mov
clc
cmc
mov
(bad)
in
pop
out
jl
jns
cwde
sub
arpl
shl
pop
les
aas
sub
add
xor
dec
xor
mov
xor
jp
popa
xor
movs
ret
sti
push
fld
mov
ins
out
xor
pop
sbb
mov
ins
push
fadd
adc
mov
fs
inc
push
arpl
push
xchg
cld
test
xor
idiv
jb
xor
test
popf
mov
push
and
gs
imul
cwde
xlat
jle
stos
(bad)
call
pop
(bad)
jno
rol
rcr
cmp
and
out
pusha
inc
adc
xchg
mov
mov
enter
mov
lock
icebp
psllq
ins
xchg
(bad)
mov
outs
mov
add
lock
sbb
xchg
inc
dec
pop
or
movs
stos
jecxz
std
push
add
inc
shl
xchg
cmp
les
sbb
and
je
test
out
adc
mov
and
out
mov
mov
clc
fwait
xor
push
mov
ins
sub
fld
ret
lock
fcmovnb
js
or
mov
xchg
push
dec
addr16
fcomip
jae
pusha
cdq
add
int
cmps
lods
hlt
aad
ficomp
xor
ror
fcomp
mov
mov
mov
rcr
daa
mov
fcmovnb
mov
sub
cli
or
cmps
mov
push
xchg
fs
push
mov
cmp
cmps
jle
imul
dec
dec
inc
sub
adc
aam
shl
ror
stos
jp
jecxz
fld
mov
xchg
call
mov
cmp
sti
fwait
mov
fidivr
out
jbe
icebp
nop
test
js
cs
loopne
inc
js
cmp
outs
xor
jmp
aaa
mov
add
dec
xlat
out
mov
daa
call
add
jne
pop
mov
cdq
loopne
sub
mov
lods
out
movs
(bad)
and
int
pop
call
cs
sub
dec
mov
icebp
jo
mov
dec
mov
and
mov
sub
in
or
adc
cli
dec
mov
call
inc
jg
ret
mov
xchg
sbb
add
sbb
not
adc
out
pop
cmps
and
or
adc
loopne
nop
repz
loopne
or
inc
test
mov
inc
outs
popa
mov
xor
push
or
pop
call
fidivr
lods
into
adc
push
xchg
pop
cmps
gs
push
out
add
movs
std
push
clc
leave
xor
movs
int
dec
not
and
outs
cmp
(bad)
imul
shl
sbb
fmul
push
std
js
hlt
sub
fadd
fadd
out
punpckhwd
pushf
push
jle
loop
not
fist
lds
cmps
add
out
jmp
mov
shl
jo
sbb
hlt
(bad)
mov
push
adc
adc
push
test
and
jno
call
mov
xor
cmp
stc
add
mov
and
lock
data16
sub
mov
or
push
adc
push
in
push
(bad)
hlt
mov
push
add
fwait
pop
push
(bad)
shl
cmp
inc
jb
test
aam
xchg
in
xchg
jge
push
rcl
cmp
int
adc
adc
sbb
neg
sbb
leave
(bad)
call
jp
faddp
or
mov
and
adc
ins
mov
rcl
je
sub
sbb
push
iret
mov
jae
mov
sbb
leave
mov
fs
add
shr
ror
fs
jae
xchg
mov
fisubr
(bad)
pop
jns
mov
shl
lods
retf
pop
(bad)
retf
sbb
clc
adc
jle
movs
xor
lock
retf
es
or
scas
or
int3
lods
dec
mov
dec
xor
(bad)
xchg
int
adc
jbe
xchg
clc
(bad)
adc
mov
fcmovnu
cmp
imul
out
scas
jnp
jmp
mov
pop
mov
and
jne
in
push
sbb
dec
int3
sahf
pop
jns
dec
push
or
jmp
movs
mov
dec
mov
mov
and
imul
(bad)
loop
mov
mov
inc
sahf
jno
cmp
bound
add
outs
ins
nop
mov
icebp
and
xor
lods
mov
sbb
loop
add
retf
xor
shl
dec
int
xchg
push
pop
pop
sbb
mov
sbb
std
fsubr
in
ins
ins
vpaddd
sub
out
scas
(bad)
in
dec
cli
dec
into
mov
and
cmp
mov
out
mov
sbb
sbb
jmp
or
dec
clc
pop
gs
adc
pop
fnstenv
mov
pop
jo
call
sub
cmps
test
xor
movs
sub
(bad)
repnz
jnp
shl
rcr
in
and
mov
cmp
test
sahf
clc
xchg
outs
and
sar
and
cwde
push
and
push
loopne
sub
jmp
in
cmc
mov
xor
mov
push
add
and
pop
movs
(bad)
out
pop
or
scas
shl
loope
movs
inc
pop
mov
test
and
das
test
lea
mov
push
push
movs
out
xchg
push
mov
lods
ds
jmp
inc
mov
inc
enter
in
pop
mov
inc
jg
fadd
fcom
iret
adc
pop
(bad)
xchg
shr
mov
push
pusha
mov
and
nop
shl
sbb
std
dec
pusha
xor
dec
jbe
mov
addr16
or
jnp
test
pop
pop
dec
adc
test
dec
xchg
mov
mov
mov
cmc
leave
stc
gs
and
push
test
sub
aam
aam
cmps
aaa
jge
outs
stos
retf
xchg
xor
fild
push
adc
jp
cwde
ja
push
xchg
enter
into
int3
mov
int3
rcl
jmp
aad
jae
retf
in
ds
cmp
cmp
jg
stos
push
in
test
into
and
int3
jl
test
push
fdiv
into
shr
mov
pop
dec
sbb
shl
inc
push
sahf
ret
sbb
mov
xchg
and
mov
retf
and
(bad)
mov
shr
push
cli
jnp
ja
cld
dec
push
xchg
imul
cmps
icebp
or
(bad)
cs
jg
xchg
mov
and
fst
add
push
pop
(bad)
xchg
adc
add
pop
pusha
fmulp
inc
and
out
jecxz
ds
cmps
sbb
push
popf
bnd
dec
sbb
push
sti
retf
mov
lea
ss
adc
call
mov
mov
in
fs
lahf
mov
(bad)
xchg
lahf
je
sbb
jmp
or
popa
retf
mov
sub
jg
movs
add
test
xor
rcr
sub
in
adc
and
cmps
jp
and
sahf
cmp
xor
lods
mov
push
int3
out
cmp
pop
push
(bad)
mov
adc
leave
repz
dec
popf
jecxz
adc
pop
or
ret
mov
push
popf
and
cdq
lea
idiv
jge
ins
pop
fistp
(bad)
sub
xchg
movs
push
inc
scas
push
outs
shr
or
adc
fs
jle
push
sub
pop
ja
xchg
mov
fistp
aad
mov
sub
xor
inc
and
lahf
inc
ret
ss
dec
ja
inc
out
rcr
test
mov
aad
push
fisttp
popa
pop
inc
sahf
dec
repnz
pop
or
and
jbe
mov
call
jbe
mov
repnz
call
clc
mov
mov
mov
dec
adc
mov
fimul
or
jo
(bad)
retf
fnstenv
das
inc
jmp
mov
ret
jecxz
ret
fdivr
sub
mov
retf
stc
imul
pop
and
test
sbb
and
mov
cmp
imul
arpl
xor
pop
inc
add
mov
dec
out
scas
mov
jno
sbb
(bad)
adc
out
xor
push
scas
ja
mov
sbb
dec
rol
ins
in
xchg
push
cmp
addr16
lds
neg
add
xor
aam
test
iret
mov
xchg
jnp
push
mov
adc
xchg
ds
lods
mov
lea
lods
push
fidivr
ret
repnz
mov
test
mov
lahf
dec
in
pop
mov
xor
out
mov
test
std
out
dec
xchg
pop
sar
imul
cmp
dec
fmul
sbb
push
jb
mov
mov
push
jg
sub
leave
push
jne
xor
test
jmp
jnp
xlat
and
out
inc
xchg
or
sub
or
xchg
add
lods
push
iret
sub
add
sbb
adc
inc
out
jns
int3
ret
fstp
gs
cmps
or
sbb
inc
sti
or
mov
outs
sbb
xor
call
dec
jge
and
hlt
sbb
repz
repnz
loop
sahf
pop
cmc
mov
mov
loope
(bad)
inc
or
jb
cld
mov
(bad)
retf
ret
jae
je
sub
sub
mov
pop
pusha
push
mov
sub
add
mov
cwde
adc
lods
repz
icebp
cmp
and
push
cwde
imul
outs
mov
pushf
inc
cmps
scas
dec
out
adc
outs
push
dec
outs
div
sbb
cmc
repnz
pusha
push
jecxz
test
cli
mov
xchg
dec
mov
setge
or
inc
pop
(bad)
pop
popw
xchg
push
xchg
js
pushf
aaa
jmp
outs
dec
xchg
add
or
inc
ins
push
mov
mov
fidiv
push
or
das
xchg
push
ror
repz
inc
(bad)
push
test
cs
sbb
cmp
sub
ins
call
repz
mov
popf
repz
mov
cmp
mov
fdiv
test
sub
dec
pop
iret
cmc
xor
(bad)
jp
ins
in
and
fbstp
ja
sar
movs
jmp
push
inc
or
pop
mov
mov
push
push
mov
repnz
and
les
stos
fcom
mov
bound
lahf
cmp
in
into
ss
pop
loope
outs
retf
js
rol
sar
pushf
jbe
or
mov
pop
xor
xor
or
setge
retf
dec
cmp
call
shl
jp
movs
sahf
or
dec
daa
loopne
inc
mov
arpl
mov
fwait
dec
pusha
jb
(bad)
and
mov
lahf
pushf
aas
xchg
fmul
mov
imul
push
cwde
mov
mov
aad
imul
fwait
sbb
push
call
or
mov
aas
retf
out
pop
sahf
inc
add
jne
lds
cmp
(bad)
jecxz
dec
pop
sbb
dec
jg
loopne
mov
shr
xor
sbb
cmp
adc
dec
lahf
mov
rcr
and
arpl
mov
cmp
lea
ret
lds
enter
pop
or
(bad)
and
stos
pop
fwait
cmps
aaa
sbb
dec
jns
and
add
push
or
mov
and
or
xchg
mov
jne
sbb
cmp
mov
pop
(bad)
loopne
(bad)
cmp
(bad)
cmp
test
jns
inc
sub
adc
or
push
div
sbb
(bad)
rol
pusha
scas
lahf
xchg
test
sti
xor
pop
push
cmp
call
out
mov
and
mov
adc
int
jg
dec
pushf
dec
std
mov
imul
add
je
int3
in
pop
xchg
cmc
xchg
loopne
sub
lds
push
add
ins
retf
test
(bad)
cld
xor
repz
in
out
lahf
rol
fadd
push
cwde
and
inc
and
push
enter
popf
mov
iret
mov
out
jp
jge
pop
and
idiv
pop
xor
clc
sub
or
dec
lds
addr16
or
icebp
test
mov
out
iret
in
fbstp
daa
fsubr
out
test
cli
pop
hlt
popa
dec
ror
xor
lods
mov
pusha
dec
xchg
cmovle
adc
bound
jge
les
lods
(bad)
in
sti
rcr
out
mov
dec
xor
push
in
ins
nop
jno
push
daa
pop
(bad)
push
int3
sbb
sahf
jnp
aaa
repz
ss
lods
xchg
lock
xchg
pop
sar
adc
in
ret
mov
lds
dec
pop
mov
shl
pop
mov
pop
cmps
jnp
sbb
adc
dec
lods
test
arpl
test
test
push
cmp
pop
sub
mov
out
mov
add
jmp
pop
mov
ss
mov
pop
addr16
dec
ins
mov
mov
aas
ins
push
mov
popa
repz
pop
xor
outs
fldcw
fisttp
and
dec
call
movs
mov
stos
pop
sub
addr16
jmp
xor
out
xchg
xor
pop
mov
movs
and
sbb
bound
inc
and
jbe
in
cmp
push
jmp
fcmovnu
xor
cmp
push
jg
into
pop
mov
shl
push
add
push
sub
lock
imul
mov
popf
into
movs
inc
push
inc
out
loop
fldenv
push
cmp
dec
mov
data16
(bad)
stos
aaa
add
fnsave
(bad)
cli
xchg
in
sub
jb
add
icebp
(bad)
and
stc
xchg
cdq
jp
and
pop
int3
sbb
xlat
loope
sbb
jne
div
cs
push
xor
je
mov
xchg
xchg
jb
iret
mov
mov
jns
leave
aas
cmp
outs
mov
fwait
(bad)
fiadd
mov
stos
adc
loop
jl
sbb
imul
mov
fistp
add
les
sbb
ficom
push
(bad)
loopne
mov
sbb
(bad)
fldenv
test
jge
or
ret
pusha
mov
movs
test
inc
test
jb
mov
pop
add
xchg
pusha
mov
adc
sub
mov
(bad)
push
fwait
push
neg
sbb
jbe
push
mov
scas
inc
mov
fcomp
adc
xlat
xor
mov
cdq
add
sub
std
xchg
enter
lds
xchg
in
ror
arpl
push
scas
mov
push
imul
mov
test
aas
jb
pop
sub
mov
std
in
in
mov
lods
mov
xor
das
stos
jecxz
mov
outs
out
lds
in
aam
jp
cmp
cs
inc
jnp
faddp
outs
sub
cmc
dec
push
add
shr
les
pushf
jecxz
pop
mov
shr
and
repz
je
adc
pop
hlt
fwait
movs
jno
cli
push
jecxz
cdq
cdq
pop
stc
pop
inc
movs
jecxz
xor
or
push
test
pusha
jle
(bad)
sub
movs
mov
in
js
xor
lods
dec
push
shr
dec
sbb
call
jecxz
cmp
(bad)
adc
mov
xchg
jmp
bound
cmp
inc
xor
jno
aas
dec
xchg
imul
dec
js
ror
pop
jl
leave
inc
imul
or
xchg
js
pop
ja
test
fld
ss
mov
inc
and
xchg
xor
sbb
mov
arpl
cmps
mov
rcr
mov
mov
mov
mov
inc
or
cmp
pop
ror
dec
cdq
mov
ffreep
jno
gs
cld
mov
dec
out
xchg
fnsave
sar
cmp
out
dec
adc
ins
add
int3
int3
sar
xchg
sub
sub
mov
lods
adc
jns
jne
loope
fild
aas
pop
lods
les
int3
xor
test
std
scas
mov
call
mov
ja
test
sbb
ja
sub
xor
outs
xchg
dec
pop
fdivr
sbb
xchg
push
xchg
and
ins
jnp
xchg
out
xor
mov
mov
fcmovu
jne
cwde
cmp
adc
out
es
inc
jle
test
(bad)
or
pop
sbb
(bad)
push
fdivr
lds
enter
jae
(bad)
pminsw
dec
jge
jp
outs
popf
and
sbb
or
mov
addr16
cmps
cmp
cld
mov
enter
mov
or
lea
mov
mov
into
retf
adc
(bad)
test
pop
or
push
jle
pushf
ja
lods
adc
dec
dec
test
(bad)
mov
(bad)
int3
out
jno
jmp
add
cli
sub
in
hlt
sub
das
inc
add
arpl
sub
loop
mov
mov
xor
jcxz
sub
jmp
mov
sbb
pop
add
xor
ret
pop
push
pop
sbb
into
(bad)
les
retf
in
dec
and
pop
rcl
jo
stc
stc
add
and
call
imul
xor
scas
ret
repz
xchg
retf
sbb
pop
ret
xor
(bad)
dec
in
lahf
arpl
and
jno
aad
mov
int
in
xor
cli
add
mov
add
lock
push
jge
fidivr
int
mov
int3
rol
aam
sub
(bad)
and
or
and
sub
lds
push
inc
cmp
shr
pop
adc
in
xchg
adc
into
data16
mov
iret
sbb
movs
clc
inc
test
ret
adc
jmp
test
and
dec
add
stc
xchg
scas
add
xor
mov
leave
jbe
leave
pushf
mov
pop
jae
test
and
or
mov
sub
mov
push
ror
stos
ficomp
std
rol
ret
mov
gs
jl
xchg
cmp
add
adc
xor
(bad)
push
dec
mov
adc
mov
add
popa
call
inc
clc
mov
pusha
aad
mov
inc
aad
ja
xor
inc
xor
scas
push
imul
cmp
jg
(bad)
cmp
rcl
mov
aam
inc
xchg
add
dec
fmul
xor
popa
lds
addr16
inc
xor
loope
rcl
jle
movs
(bad)
or
test
in
xchg
jne
mov
add
push
lods
add
sbb
sub
mov
dec
xor
into
int
test
xor
push
and
or
fisub
mov
ficomp
das
mov
cmp
mov
pop
cmc
push
es
sbb
das
fst
(bad)
mov
fadd
in
je
pop
mov
jp
ds
jb
mov
push
addr16
les
mov
dec
aas
jbe
jo
call
rol
sbb
hlt
lea
jno
pop
mov
xchg
sbb
int3
push
push
adc
xchg
jo
shl
je
or
xchg
mov
fdivr
push
pop
sbb
es
sahf
mov
xlat
mov
cwde
(bad)
pop
test
push
loope
jae
xchg
dec
cwde
bt
repz
cmp
mov
dec
pop
cwde
pushf
mov
(bad)
xor
or
aaa
(bad)
xor
jb
mov
clc
xchg
ins
xor
or
mov
push
inc
jle
and
pusha
sbb
popa
jl
pop
bound
repz
pop
mov
xor
push
int3
repnz
mov
sub
sti
sub
popa
mov
add
rcl
mov
frstor
(bad)
lods
jp
ficom
les
in
clc
inc
fs
or
loopne
stos
mov
push
rol
jmp
push
sbb
dec
fld
dec
rcr
cmp
adc
push
push
inc
jg
push
mov
test
sub
sbb
cdq
push
or
movs
sbb
pop
leave
ret
int3
inc
or
jp
sub
ror
mov
test
out
sub
outs
mov
rep
sahf
jnp
add
nop
lds
out
push
xchg
push
add
mov
inc
inc
adc
inc
scas
ud0
jl
aam
xchg
int
and
(bad)
scas
pop
aad
imul
outs
sbb
adc
or
mov
mov
cmp
hlt
mov
pop
retf
iret
lea
lea
test
out
inc
mov
neg
enter
push
xchg
mov
mov
lock
pop
and
dec
adc
or
ret
fwait
lods
jae
test
inc
repnz
sahf
ficomp
cmp
pop
sbb
(bad)
xor
ret
in
sub
mov
pushf
popf
out
adc
add
inc
cs
mov
fadd
movs
push
push
and
push
cs
pusha
mov
les
fwait
xchg
sti
mov
cmp
test
add
or
retf
cli
sbb
movs
jge
outs
dec
inc
pop
cmp
jo
nop
jb
xchg
cmp
mov
dec
push
js
mov
cmp
imul
cwde
mov
mov
and
aad
sti
jge
sub
cmp
mov
pop
inc
outs
out
mov
call
xchg
mov
add
push
push
and
cmp
shl
into
cwde
pop
push
mov
es
ret
cmp
or
adc
nop
das
and
jl
bound
adc
dec
bswap
lods
in
add
(bad)
ss
pop
(bad)
jmp
inc
jp
enter
add
pop
jo
add
dec
sbb
mov
call
cwde
xor
aam
sub
and
mov
sbb
xlat
sub
retf
sbb
loopne
outs
sub
dec
jo
mov
sub
xchg
sar
xor
mov
inc
imul
pop
xchg
fiadd
pop
or
in
sahf
fwait
cmp
push
sahf
push
out
mov
mov
push
sbb
cmc
outs
sar
dec
loope
sbb
pop
mov
data16
repnz
sbb
cwde
mov
dec
repz
sub
jge
out
retf
lods
popa
pusha
in
pop
adc
ror
popf
sub
fmulp
out
jae
xor
mov
add
push
out
outs
fldcw
add
dec
or
fmul
xchg
fdivp
rcl
pop
bound
lahf
ss
and
cld
and
pop
and
xchg
add
mov
cmps
push
fmul
fs
mov
icebp
inc
mov
inc
jb
xor
outs
sbb
sbb
mov
dec
ja
mov
jp
pop
jmp
mov
out
and
movs
jmp
shr
ds
dec
or
test
fbld
fistp
adc
add
leave
xor
or
xchg
add
dec
pushf
mov
ins
adc
outs
mov
pop
dec
shl
dec
mov
xchg
sub
jae
push
test
mov
adc
scas
pop
and
pop
mov
mov
cs
cmp
adc
movs
dec
fadd
xchg
mov
add
add
mov
lea
adc
inc
inc
ja
call
sbb
and
xchg
inc
aaa
sbb
enter
mov
adc
or
adc
jbe
ins
(bad)
out
and
scas
std
not
or
pushf
hlt
repz
test
push
push
mov
pop
dec
push
mov
mov
add
imul
push
add
in
adc
in
jno
push
push
dec
or
and
sbb
loop
mov
ror
adc
adc
(bad)
ins
outs
push
pop
dec
jmp
retf
test
fbld
push
neg
push
aas
cmc
jl
sub
clc
sbb
adc
in
sbb
xor
mov
das
xchg
out
data16
jmp
and
(bad)
std
jbe
in
rcr
sbb
gs
mov
cmp
sbb
lods
dec
ret
in
fimul
ja
cmp
movs
mov
xchg
leave
in
icebp
jb
fld
cdq
cs
loopne
add
lods
sti
es
test
rol
hlt
lds
push
ds
sub
or
dec
fldcw
shl
ja
inc
sahf
and
xor
push
add
sub
mov
scas
es
daa
(bad)
dec
mov
movs
add
pushf
sbb
add
push
ficom
mov
shr
fisttp
mov
xchg
pop
and
push
je
cmp
pop
lea
pop
sbb
xchg
inc
jne
test
fwait
(bad)
cmp
mov
lahf
mov
xor
add
sub
xor
in
arpl
cdq
and
leave
fisttp
dec
shl
or
js
ss
mov
xor
sub
repnz
out
inc
and
cmp
stos
(bad)
mov
xor
fiadd
xor
ror
pop
mov
jo
adc
aam
mov
mov
rcr
gs
ftst
xchg
std
jnp
popa
push
sbb
cs
jp
xchg
jo
rol
mov
cmp
pop
gs
rol
xchg
sbb
jns
sbb
fmul
jnp
xchg
push
out
jmp
mov
sub
mov
aam
mov
xchg
loope
or
out
mov
mov
rcl
aam
mov
sbb
pop
add
fild
sub
mov
add
push
cmp
in
ja
rol
mov
dec
(bad)
or
fdiv
sub
push
cmps
fmul
mov
or
mov
dec
jge
and
mov
loop
and
add
mov
(bad)
std
test
or
xchg
inc
nop
and
xchg
xchg
dec
jge
or
xchg
mov
out
xchg
pop
pop
pop
sahf
mov
imul
push
sub
ja
shr
outs
imul
iret
test
jae
xor
add
popa
stos
pop
ficomp
sbb
cmps
adc
(bad)
outs
fistp
stos
stos
pop
rol
scas
jmp
outs
pop
and
adc
pop
jmp
add
push
xchg
push
pop
fnstcw
out
lea
nop
mov
lahf
mov
aad
jle
aaa
(bad)
jmp
xor
scas
loope
ss
mov
lds
xchg
sti
aaa
fdivrp
sbb
adc
int
outs
sbb
fst
mov
push
in
out
push
sbb
push
cmp
nop
cli
mov
pop
xchg
scas
mov
mov
stc
inc
pop
pop
adc
clc
jmp
mov
out
pop
into
mov
(bad)
push
icebp
inc
leave
hlt
mov
outs
add
fisttp
jno
popf
out
(bad)
xchg
into
ror
loopne
inc
ds
mov
mov
and
test
fcmovu
lea
fwait
mov
les
or
(bad)
imul
ja
lock
cmp
mov
loope
int
sbb
in
call
call
ja
(bad)
ror
xchg
xor
adc
cli
les
dec
scas
push
and
outs
mov
mov
jno
adc
daa
pop
neg
jnp
leave
add
cs
pop
nop
popa
add
scas
xchg
ins
jnp
pop
jae
ins
xchg
cmp
aad
dec
test
aad
sub
push
jmp
add
sub
ja
xor
retf
or
dec
sti
push
js
cmp
fcomp
aam
cmps
and
les
lahf
ja
pop
xchg
shl
xchg
(bad)
lea
(bad)
sbb
mov
dec
loop
adc
inc
out
and
test
pop
out
pop
fsub
test
jno
out
mov
aas
imul
xchg
imul
pop
or
xchg
neg
push
test
add
dec
adc
cli
ror
out
push
xlat
(bad)
fimul
cmp
stos
mov
fs
sub
jmp
retf
imul
mov
pop
xchg
jno
xor
(bad)
mov
in
mov
pushf
mul
mov
movs
push
ds
fwait
js
and
xchg
fild
pop
xchg
add
xor
cmp
fimul
or
stos
(bad)
mov
lahf
leave
fdiv
std
jbe
imul
stos
imul
pop
cwde
jno
mov
icebp
sbb
sub
mov
popf
inc
(bad)
lock
xor
dec
ins
jg
mov
movs
(bad)
lahf
retf
pop
(bad)
cmc
jbe
sbb
movs
in
cmps
(bad)
cdq
mov
add
pusha
pusha
into
pop
leave
out
ins
(bad)
shr
mov
jle
and
inc
fld
xchg
sub
mov
xchg
loopne
es
jmp
into
pop
rol
cdq
add
shr
inc
test
in
pop
sub
call
xchg
and
mov
aad
adc
push
cmp
outs
lahf
out
sub
movs
es
test
add
out
mov
adc
loope
mov
pop
int
mov
cdq
sbb
dec
loope
jecxz
pop
xor
enter
dec
imul
xchg
mov
jge
jmp
mov
dec
arpl
js
fistp
(bad)
fnstenv
rcr
iret
cmp
or
scas
adc
aaa
pop
push
dec
xor
out
mov
(bad)
cmp
mov
or
adc
mov
push
das
xor
mov
jmp
dec
retf
and
mov
ret
test
data16
test
and
pop
sbb
rol
nop
mov
mov
sub
and
sti
pop
fld
dec
jnp
sbb
add
out
es
rcl
pop
dec
popa
data16
sbb
push
fwait
push
cmc
dec
mov
jecxz
jp
movs
cs
mov
ins
mov
pop
lea
inc
fwait
mov
jnp
in
push
and
and
pop
fidiv
adc
push
inc
outs
scas
loop
add
in
and
addr16
std
fs
push
adc
in
inc
and
lea
pop
test
mov
jmp
hlt
xchg
jle
test
mov
sub
inc
mov
add
xor
pushf
je
sub
retf
inc
xor
icebp
shr
sbb
arpl
inc
xor
nop
out
add
push
sub
outs
mov
(bad)
fisub
add
mov
xor
pop
push
cld
imul
ret
sar
jle
out
stc
nop
push
cmp
xlat
cmps
pop
ret
sub
push
leave
cmp
cmp
xchg
repnz
(bad)
adc
cmp
pop
loope
test
(bad)
cld
mov
test
mov
mov
stos
(bad)
cmc
out
int
mov
sbb
xchg
adc
sbb
ds
push
sub
daa
mov
rcl
fwait
jp
jns
jns
clc
repnz
sahf
ins
pop
xor
test
fnstcw
(bad)
xor
add
popa
inc
pop
ucomiss
sub
aam
mov
cmp
jno
daa
xor
test
dec
not
(bad)
cli
out
mov
push
cmp
mov
stos
stc
or
inc
mov
inc
push
mov
imul
xchg
test
std
inc
aaa
mov
mov
loopne
cmps
push
adc
pop
shl
add
inc
push
or
mov
mov
jne
or
test
and
inc
xchg
(bad)
or
daa
jl
add
dec
cmps
ffreep
or
jbe
cs
mov
mov
in
arpl
adc
ret
and
lock
icebp
jp
xchg
xor
ins
sub
and
inc
mov
push
xor
icebp
rcr
push
jns
mov
cmp
sahf
jl
test
mov
aaa
cmps
scas
xchg
mov
cmp
cld
std
ins
push
test
arpl
mov
push
pop
sbb
aaa
in
and
inc
retf
xor
jo
mov
adc
xchg
test
shr
in
ret
idiv
mov
jge
retf
fisub
int
imul
out
jmp
inc
or
loope
cmp
movs
sub
rcl
inc
xor
popa
sbb
cli
leave
adc
in
sub
loope
sti
ret
scas
mov
daa
inc
xchg
mov
xchg
sbb
scas
jg
push
shl
out
test
jo
jae
push
pop
imul
or
rcl
push
sbb
push
xor
fs
int
xchg
xchg
add
psrlw
stos
icebp
loope
mov
out
repz
test
sar
jp
data16
(bad)
cmp
inc
(bad)
xchg
int
add
push
inc
cmp
repnz
add
jp
pushf
add
push
sbb
sub
cvtps2pi
out
test
or
adc
and
call
lds
dec
enter
jge
into
cld
add
fidivr
sar
pinsrw
out
mov
mov
or
pop
inc
test
sub
and
out
jno
popa
stc
jae
inc
pop
mov
nop
add
les
stc
push
inc
sbb
loope
pusha
jmp
jmp
or
in
imul
jo
in
dec
fldcw
jecxz
std
or
repnz
(bad)
imul
mov
inc
sbb
shr
mov
rcr
out
lods
and
fild
loop
jne
cs
test
xor
out
push
cmps
inc
das
lahf
sbb
jge
arpl
popf
sbb
cli
sub
inc
mov
mov
xor
sbb
jp
xchg
cli
or
xchg
inc
dec
popa
out
test
call
xchg
push
add
and
sbb
fidiv
sahf
repz
fld
imul
call
adc
std
mov
(bad)
jo
mov
cmps
sub
call
ja
mov
out
cmc
icebp
retf
iret
pop
xchg
hlt
add
retf
mov
mov
enter
cmp
inc
jmp
not
outs
js
(bad)
das
ja
and
test
jecxz
mov
dec
in
shr
loopne
mov
jp
xchg
jno
mov
sbb
jno
mov
dec
dec
xchg
sbb
js
add
push
test
bound
and
ins
iret
jecxz
sbb
lahf
sub
mov
lods
mov
stos
dec
pop
inc
repz
adc
sbb
jle
sbb
and
call
inc
mov
fld
pop
inc
retf
rcr
xor
mov
aad
das
jg
mov
mov
fmul
dec
cmps
xchg
(bad)
and
mov
fs
ror
add
leave
enter
fidiv
gs
mov
pusha
xor
sahf
dec
xchg
and
outs
cli
and
pop
ret
repz
imul
cld
sbb
xlat
in
push
xor
cs
div
push
pop
cmp
adc
or
xor
std
xor
jecxz
add
mov
pop
or
mov
(bad)
pop
or
mov
adc
rol
shl
sub
adc
lock
sbb
xor
aam
sbb
push
xchg
push
pushf
xchg
arpl
mov
cmp
jns
or
pop
(bad)
fiadd
or
in
push
dec
sbb
out
push
fstp
stc
mov
(bad)
icebp
inc
inc
outs
add
or
sahf
jbe
in
mov
jns
cmp
jo
cmp
sbb
xchg
add
sti
nop
por
scas
pop
lods
pop
sub
xchg
lea
xchg
adc
movs
cmp
jl
(bad)
dec
bnd
mov
xor
ret
int
int
fld
dec
imul
clc
(bad)
sub
push
ror
loope
ins
loop
cmp
fwait
mov
jg
dec
and
shl
push
and
adc
add
dec
or
fst
mov
fisubr
aad
stc
cld
out
and
jns
fs
cmp
jmp
dec
sub
mov
(bad)
popf
js
inc
inc
in
sub
loop
push
and
sub
xchg
or
das
sub
or
jecxz
sub
pop
add
iret
push
mov
push
idiv
xor
and
movs
aad
test
ins
sub
into
test
jne
retf
fild
fcmovne
(bad)
xor
or
or
enter
dec
movs
lahf
repz
int3
xor
xor
ja
mov
jbe
in
sbb
and
adc
jp
data16
inc
mov
rcr
fadd
jg
sahf
movs
iret
mov
out
lods
fcomp
ss
or
hlt
dec
retf
mov
sub
(bad)
(bad)
xchg
sub
push
gs
stos
daa
fsubr
sub
popa
int3
das
lea
add
add
inc
cmp
cmp
gs
(bad)
imul
ins
pop
jnp
push
jle
cmps
mov
or
mov
sbb
mov
inc
adc
lods
dec
jmp
pop
out
add
inc
push
ret
mov
loop
mov
jne
into
movs
outs
dec
movs
push
cmc
je
xchg
std
mov
je
xchg
push
pop
jmp
les
xor
mov
test
mov
push
or
adc
inc
dec
add
movs
xchg
or
xor
les
mov
push
add
retf
jno
inc
test
pop
mov
pop
adc
sbb
mov
and
pop
mov
js
outs
out
inc
sahf
and
and
popa
mov
mov
cld
ins
jne
inc
xchg
icebp
inc
xchg
call
mov
mov
inc
popf
xor
jp
adc
xor
dec
repnz
mov
sbb
xor
mov
(bad)
loope
test
outs
or
fcomp
xor
inc
out
in
outs
mov
(bad)
cld
cmp
fwait
iret
shr
cmp
xor
sar
jmp
hlt
pusha
stos
adc
js
cmc
xor
add
or
(bad)
mov
outs
push
popf
xor
jne
xor
jb
inc
inc
jmp
dec
mov
lock
mov
test
push
cmp
dec
nop
mov
dec
or
push
mov
cli
stos
(bad)
rol
test
test
jno
fstp
sar
cmovo
jmp
enter
mov
pushf
(bad)
(bad)
scas
add
enter
jns
jns
xor
xchg
sub
int
leave
stos
cdq
mov
inc
add
rcl
jle
ss
jmp
fsub
push
ins
lahf
(bad)
cdq
mov
pushf
sub
mov
in
enter
adc
dec
leave
dec
cmp
cmp
sbb
fs
mov
fdivr
or
jg
xor
pop
(bad)
cmc
cli
in
stos
vmovhps
shr
inc
aam
add
mov
imul
and
aam
or
jle
in
push
sbb
das
lods
popf
stos
jns
(bad)
hlt
ins
dec
mov
sbb
inc
push
aas
out
ror
popf
bound
mov
push
mov
lea
inc
pusha
or
inc
cmps
push
nop
call
aas
std
aad
in
in
gs
pusha
in
cli
mov
jmp
mov
sbb
cwde
xor
and
fs
(bad)
mov
rcr
mov
fist
push
sbb
push
fnstsw
mov
or
inc
xchg
push
jae
xchg
nop
cld
xchg
push
push
jp
mov
add
add
or
cmps
fstp
push
test
fucomp
scas
mov
shl
xchg
fs
xchg
stos
cli
stos
adc
or
dec
xor
loope
lods
iret
dec
sti
in
lds
fcomip
fadd
sahf
(bad)
push
jge
in
(bad)
push
aam
dec
addr16
push
loope
push
jo
mov
test
clc
ficom
push
mov
loop
inc
(bad)
mov
xchg
sub
fsub
mov
and
ja
imul
arpl
aad
jbe
pop
jge
add
sbb
dec
and
mov
faddp
fwait
iret
push
push
js
rcl
and
cdq
retf
popa
retf
ins
mov
add
(bad)
std
pop
lea
sub
push
out
outs
addr16
inc
jmp
cmp
mov
pop
js
push
mov
push
jae
popf
sbb
mov
outs
gs
loope
in
inc
lods
(bad)
and
pop
mov
jmp
adc
or
in
lahf
jmp
and
pop
aam
ficom
leave
test
fisttp
xchg
and
shl
dec
stos
dec
call
add
fucom
es
ficomp
fist
leave
data16
cdq
(bad)
(bad)
cmp
xchg
ja
lock
out
inc
mov
and
movs
lock
fdivr
dec
sub
or
mov
xor
std
pop
cmc
imul
fistp
pop
jmp
ds
push
sar
dec
fdivr
dec
and
add
popa
mul
inc
mov
iret
les
xchg
into
xchg
bound
pop
or
pop
inc
ret
pop
pusha
lods
jecxz
js
ficom
jge
add
pop
test
sbb
inc
mov
sbb
jmp
mov
cmc
inc
add
mov
cld
or
jg
dec
cmc
and
mov
or
inc
pop
cmp
fbld
lds
mov
pop
iret
shl
push
push
adc
ds
jle
loopne
jle
or
outs
es
sbb
js
sbb
mov
lock
lods
mov
js
or
fist
out
cdq
jne
xchg
and
or
mov
xchg
sub
sub
sub
cld
stos
int
shl
int
pop
mov
lds
retf
mov
fsub
fdivrp
stos
js
fild
cdq
jle
pop
dec
icebp
lds
ret
mov
dec
add
imul
push
test
or
in
dec
jp
rol
cdq
xor
sbb
jno
push
pop
fisub
xor
push
(bad)
jmp
inc
jae
pop
sahf
sub
dec
sub
jbe
outs
outs
ret
daa
sub
inc
dec
pusha
dec
push
outs
cmp
nop
test
and
sbb
test
cld
xchg
sbb
mov
fist
fwait
and
mov
pop
add
stc
ret
or
scas
and
call
add
mov
sub
push
adc
pop
lock
sahf
iret
outs
in
mov
xchg
jecxz
mov
es
pop
fld
outs
aaa
pop
std
dec
cld
jmp
push
rol
sahf
fisub
std
loopne
outs
fld
inc
(bad)
and
or
je
in
pop
shl
adc
ins
ret
inc
xchg
popa
add
xchg
add
out
not
cld
mov
movs
xchg
or
je
xchg
shl
sar
ins
rcl
loopne
or
addr16
nop
push
mov
jmp
and
mov
or
mov
or
in
retf
fidivr
sub
jae
sbb
in
enter
or
cmp
mov
test
outs
aad
or
inc
cmovnp
int3
pop
mov
dec
call
dec
mov
std
shl
add
stc
sbb
mov
jg
jle
cmp
jmp
sbb
mov
adc
int3
and
jp
mov
adc
stos
(bad)
loop
jnp
frstor
xchg
test
lods
xchg
enter
(bad)
mov
out
retf
adc
mov
call
mov
cld
test
or
ins
int3
cmp
test
(bad)
jne
xor
pop
fcmovb
ins
shl
(bad)
and
idiv
mov
stos
or
and
stc
cmc
push
push
fistp
cwde
rol
inc
or
xlat
fs
inc
hlt
mov
mov
xor
dec
call
dec
mov
(bad)
or
xchg
pop
int3
xchg
cmc
inc
or
sar
ss
sub
xchg
inc
(bad)
neg
jo
sub
or
jle
addr16
jne
jb
push
iret
cs
mov
jns
cmp
aas
scas
mov
xor
ja
sbb
mov
and
mov
clc
push
or
scas
cmp
cmp
sbb
jmp
mov
rcr
push
sub
jge
bound
or
js
push
loop
adc
(bad)
jp
test
mov
(bad)
mov
push
pop
imul
sub
lods
daa
xor
push
or
not
cdq
push
sbb
test
sbb
and
pop
cmps
sbb
arpl
sub
add
mov
bound
fld
jno
mov
xchg
les
aas
mov
sub
or
in
xchg
lock
push
cmp
(bad)
dec
pop
jmp
enter
stc
push
lea
ret
pop
or
xor
test
sub
loopne
shl
adc
jns
div
fnstcw
pop
mov
inc
loope
push
dec
jcxz
jp
cmp
adc
sub
sub
sahf
or
stos
(bad)
ja
push
or
pop
in
mov
loopne
int3
fist
mov
dec
push
pop
xor
cs
mov
cmp
add
mov
push
mov
adc
lds
push
push
fidivr
lds
rol
ror
fld
jmp
xchg
pop
mov
pop
lahf
jmp
add
or
loopne
div
add
pop
push
dec
sbb
xor
clc
or
cmp
jl
adc
aam
cmps
idiv
mov
popa
sub
xor
and
push
ins
fld
mov
pop
jecxz
iret
and
and
cmc
fiadd
cs
push
mov
out
fwait
hlt
sbb
dec
aam
xchg
xor
(bad)
push
and
pop
ror
dec
cwde
xchg
push
mov
mov
test
call
mov
sub
cmc
sar
sbb
jecxz
das
idiv
popf
in
pushf
idiv
fsubr
data16
lods
or
add
push
in
rcr
movs
sub
retf
fldz
push
jmp
cdq
cld
dec
and
inc
add
xchg
push
in
addr16
pop
dec
push
xchg
call
push
enter
dec
daa
push
push
push
cld
pop
cmp
cmp
push
scas
jb
inc
icebp
add
mov
jae
hlt
sub
(bad)
mov
retf
pusha
cmps
jecxz
retf
enter
stc
inc
lahf
push
mov
or
jp
int3
test
fsubr
and
push
jp
push
fidivr
lahf
loopne
dec
xor
and
aas
jle
dec
sbb
out
jp
cwde
popa
jns
inc
cmp
sbb
mov
mov
xchg
and
push
neg
pop
jns
push
es
xor
push
das
(bad)
pop
stos
push
das
pop
mov
mov
pop
push
daa
adc
mov
mov
push
lock
inc
sbb
sub
fsubr
sbb
stc
add
jns
jno
sbb
or
rcl
jnp
arpl
addr16
cwde
in
ins
xchg
xor
sub
enter
sbb
pop
in
aas
xchg
fdivr
stos
(bad)
xlat
sub
push
pop
mov
cwde
mov
xor
jmp
mov
add
push
dec
mov
repz
inc
(bad)
(bad)
pop
mov
and
aas
mov
cmp
mov
(bad)
retf
xchg
adc
std
lahf
jmp
push
fistp
xor
sbb
test
inc
fild
sub
or
cmp
mov
inc
push
fistp
xchg
xchg
jmp
ss
push
mov
dec
push
movs
add
pop
push
pop
aaa
cmp
pop
cld
add
xchg
popa
xor
imul
lahf
aad
xchg
int3
sub
out
xor
xchg
sub
mov
loopne
idiv
mov
pop
pop
rcl
dec
fdivr
push
out
dec
shl
push
into
jns
popf
add
addr16
sbb
xchg
cmp
xor
(bad)
jnp
or
jge
inc
fwait
jl
dec
and
or
out
jo
cwde
mov
shl
dec
retf
mov
inc
and
outs
sbb
(bad)
sbb
jg
mov
add
mov
iret
repnz
ss
adc
cmp
scas
pop
neg
xlat
jb
(bad)
mov
ret
jns
stos
les
pop
xchg
bound
outs
and
jns
jecxz
push
in
jl
add
ss
xor
shl
or
shr
mov
imul
fadd
push
push
aas
mov
add
fdiv
ins
jg
idiv
aas
stos
cmp
mov
sbb
sbb
dec
pop
cmps
sti
sub
popf
push
jno
push
cmp
ficom
adc
cld
inc
adc
idiv
mov
pop
or
or
retf
jbe
dec
add
and
push
or
mov
and
lods
shl
jg
out
push
mov
push
repnz
aad
aaa
test
je
xchg
cmp
mov
aaa
inc
cmp
setns
popa
test
das
or
mov
aas
stos
into
adc
aas
movs
in
cmp
sub
mov
sahf
and
mov
push
push
xor
inc
(bad)
pop
stc
or
sbb
repnz
add
out
sbb
mov
icebp
in
cs
jl
sbb
push
popf
jns
popa
stos
xchg
(bad)
mov
(bad)
bound
mov
loope
gs
daa
bound
es
push
push
jg
aam
je
and
mov
or
icebp
mov
jno
jg
pop
loope
arpl
outs
hlt
add
sub
jmp
retf
mov
mov
inc
les
dec
jmp
stc
les
(bad)
fsubr
retf
call
fiadd
mov
mov
test
test
es
repnz
lds
mov
and
cmps
or
aaa
mov
mov
shl
int3
mov
sub
hlt
daa
jl
sub
pop
and
fwait
leave
jae
aad
test
retf
(bad)
aas
inc
add
xchg
push
push
les
cmp
xchg
push
mov
cld
sub
sbb
pop
push
xor
repz
xchg
rsqrtps
jge
jl
test
sub
rol
sub
gs
sub
jge
sti
rol
stc
inc
iret
mov
inc
inc
test
retf
imul
inc
in
or
icebp
std
xlat
sub
dec
jmp
inc
mov
pop
in
scas
sahf
daa
jno
mov
sbb
pusha
cs
nop
scas
or
sbb
push
mov
xchg
jmp
mov
fistp
dec
mov
push
dec
jnp
imul
jmp
jge
das
mov
jl
add
verr
inc
int
add
cwde
out
repz
lock
popa
data16
push
or
pop
lock
loopne
jp
test
xor
dec
stos
jp
push
dec
nop
out
test
cs
mov
in
adc
addr16
add
cdq
mov
loope
stos
popf
mov
push
jbe
ss
push
add
cwde
inc
in
mov
push
pop
cmp
adc
fidiv
loope
push
mov
pop
test
dec
hlt
or
push
pop
repnz
sub
das
js
mov
retw
pop
popa
pop
ds
push
push
mov
in
sub
add
or
std
js
setb
and
retf
mov
mov
jl
repnz
repz
in
xchg
test
adc
or
je
mov
iret
jecxz
bound
and
mov
cmp
adc
mov
xor
push
add
xchg
push
xchg
stos
mov
rep
sbb
mov
out
loopne
mov
pop
cmp
inc
aas
sbb
addr16
icebp
and
push
aad
pusha
je
pop
jns
and
pushf
dec
mov
sahf
int
push
inc
inc
shl
ins
push
or
outs
sbb
push
cmp
mov
cmp
jp
jb
mov
xor
test
xor
jnp
call
out
and
repz
add
mov
mov
mov
aad
jno
lods
lods
rcr
push
sbb
inc
adc
jo
cmp
je
push
and
lds
jp
xchg
pop
add
push
adc
jnp
fisttp
fxch
icebp
mov
jmp
adc
call
xchg
xor
jbe
dec
fs
std
pop
push
xchg
(bad)
or
fistp
ja
les
push
or
cmp
or
gs
fist
add
fwait
repnz
das
dec
cmp
ror
push
test
mov
add
mov
pop
repnz
add
cmp
push
arpl
(bad)
aad
mov
ret
(bad)
aas
jle
sub
or
xchg
std
aas
loope
movs
ins
test
and
fst
lods
shl
jnp
sbb
jne
stos
add
cmp
xor
cwde
sbb
sahf
dec
mov
les
int3
xchg
or
cmp
sub
mov
push
lahf
push
or
sti
xchg
punpckhbw
push
xchg
popf
lods
mov
mov
inc
retf
(bad)
mov
pusha
cmps
pop
shl
sub
ret
push
sbb
ins
loopne
mov
mov
adc
rcl
xor
mov
clc
inc
outs
arpl
imul
push
in
sub
pop
inc
out
add
fcomp
imul
jmp
or
add
out
xchg
dec
pop
hlt
jl
(bad)
aad
sub
sub
push
push
xchg
adc
dec
jl
lock
scas
push
jecxz
sub
jo
into
popa
mov
test
mov
ja
dec
das
or
dec
pop
jle
or
mov
stos
sub
out
push
push
es
sbb
in
les
add
pushf
pop
jp
dec
pop
in
cmp
cmp
inc
out
pop
icebp
push
mov
xchg
sar
push
iret
loope
es
xchg
push
imul
out
repz
xlat
push
jge
add
pop
fbstp
in
aas
icebp
adc
test
fld
(bad)
rol
add
sbb
and
rcl
mov
xchg
mov
add
xor
popf
test
daa
imul
std
push
dec
pushf
popf
out
mov
or
loope
xchg
sbb
jnp
add
inc
test
aad
test
retf
xchg
or
or
sbb
enter
dec
mov
cdq
fdivrp
add
js
fdivr
push
or
cwde
mov
aam
push
sahf
sbb
sub
loope
aam
arpl
sub
lea
xchg
xchg
shr
xor
sub
and
cs
hlt
jmp
dec
test
fidivr
inc
sti
or
xor
test
inc
je
cwde
in
jge
frstor
leave
repnz
shl
pop
aas
bound
cmp
popa
jecxz
les
sar
jecxz
and
pop
clc
jne
outs
mov
adc
and
jae
fisub
xchg
push
sbb
mov
and
mov
scas
dec
(bad)
stc
fidiv
jmp
dec
sbb
sbb
xchg
neg
jns
pop
push
in
das
push
(bad)
sbb
inc
rcl
sbb
pop
jp
ins
xor
fcomi
gs
pushf
fcmovb
retf
repnz
xchg
xchg
inc
mov
nop
push
mov
shl
data16
mov
cs
add
mov
fisubr
clc
xchg
push
in
mov
cdq
rcr
cs
cmp
lahf
xchg
add
jae
lods
ficomp
dec
div
shl
xor
stc
and
mov
sbb
bound
data16
sub
dec
imul
push
jp
rcl
es
push
pop
(bad)
cdq
imul
(bad)
in
wbinvd
mov
cdq
push
xchg
cmp
push
add
push
cli
mov
int
jmp
lods
cld
dec
xchg
fwait
rcl
adc
iret
dec
je
cmp
arpl
mov
fld
mov
test
cmps
mov
push
push
push
mov
adc
push
dec
cmps
pop
and
push
(bad)
or
lea
cmp
out
in
push
fst
dec
vldmxcsr
xchg
fld
push
pushf
aam
or
adc
(bad)
add
out
adc
xchg
push
out
pop
dec
sub
leave
sub
(bad)
sub
cmp
sbb
mov
imul
mov
dec
in
xchg
std
in
adc
inc
arpl
in
xor
das
fdiv
addr16
inc
stos
je
inc
sub
daa
cli
imul
or
mov
push
in
(bad)
int3
ja
outs
push
jecxz
shl
mov
ins
mov
popf
mov
and
push
mov
add
sub
adc
(bad)
aam
nop
nop
ror
sub
stos
rcl
cmps
add
mov
jno
sbb
push
cdq
popa
into
addr16
scas
xor
mov
mov
inc
push
and
adc
fsub
out
aaa
int
push
ds
lea
add
sti
pop
xchg
das
cmovno
inc
add
jl
pop
mov
jp
xchg
loop
out
mov
or
inc
xchg
inc
lea
rcr
or
call
pushf
xor
cli
sub
js
fnstcw
scas
fdivp
in
out
inc
xchg
mov
cmc
and
push
xlat
pushf
push
add
mov
loope
jbe
sub
sbb
pushf
or
fnstsw
mov
fwait
loope
push
data16
out
out
inc
ss
dec
aaa
mov
std
ret
mov
sub
rol
or
xchg
sti
push
cmps
lds
adc
mov
mov
cs
sub
xlat
les
lods
mov
addr16
in
(bad)
sbb
jge
push
bound
mov
add
xchg
dec
loopne
pop
ror
outs
mov
xchg
aas
lahf
iret
dec
mov
mov
jp
xor
jo
inc
iret
xor
add
pop
jno
cmp
adc
inc
jge
mov
or
nop
ret
pop
dec
pop
dec
cmp
ss
sub
push
movs
lock
aas
les
xchg
push
or
mov
test
inc
sti
cmps
ds
out
ror
pop
cmp
adc
cmp
push
push
ret
(bad)
pop
cmp
dec
icebp
xor
sbb
loop
repnz
ins
or
mov
(bad)
int
sub
fimul
cdq
nop
not
mov
pusha
jo
rcr
mov
push
push
add
xchg
pop
ficomp
sar
(bad)
cs
rcr
cmc
mul
fist
icebp
dec
jmp
cmp
loope
pop
(bad)
push
mov
xor
cmp
jecxz
mov
jb
add
cmp
pop
out
push
popf
inc
jge
adc
sbb
cmp
or
add
ins
adc
or
in
punpckldq
enter
ins
dec
add
mov
out
mov
cli
mov
jno
popa
fbstp
push
jle
mov
xor
ds
ret
mov
lods
(bad)
jl
mov
lods
mov
push
stos
xchg
fimul
inc
jae
add
add
mov
mov
enter
out
(bad)
mov
es
xor
aas
or
push
fcomp
jg
popa
rcl
ja
cmp
jno
adc
mov
pushf
pop
add
in
stos
enter
pop
lea
xor
mov
push
jno
push
aas
cmps
and
int3
jge
mul
xchg
push
cdq
xor
inc
sbb
mov
int
jle
pop
test
add
loopne
scas
jae
and
or
mov
outs
push
cdq
nop
and
push
ins
and
not
mov
data16
leave
push
dec
repnz
cmc
xchg
popa
call
sub
call
mov
mov
popa
cvtpi2ps
iret
jmp
pop
cmps
icebp
shl
sbb
mov
sub
pushf
fiadd
clc
enter
jmp
in
pop
xor
adc
mov
push
cmp
pop
dec
jmp
or
loopne
sub
and
pop
mov
push
push
dec
inc
cwde
sub
mov
test
pop
jmp
call
jle
js
bound
jmp
fsub
jecxz
jnp
loopne
dec
stos
sbb
inc
lldt
lock
jmp
jge
pop
scas
xchg
in
lock
jp
sti
dec
(bad)
(bad)
sub
pop
inc
lahf
div
addr16
push
xchg
jbe
rcl
addr16
and
(bad)
fist
aad
push
lea
(bad)
out
inc
mov
mov
neg
or
ret
mov
and
xchg
icebp
jl
sbb
add
cmps
mov
jge
lods
lock
adc
jl
js
loopne
mov
mov
inc
loopne
rcr
cmp
bswap
jp
call
sti
or
or
xchg
mov
sbb
push
jle
mov
shr
push
cmp
cmp
in
xchg
mov
sbb
jge
cmp
xor
stc
jl
les
and
arpl
inc
jbe
and
scas
test
sub
mov
sbb
test
std
push
sub
xor
push
sub
sub
mov
push
push
xchg
push
pop
and
pop
repz
inc
idiv
mov
sbb
in
(bad)
jbe
int3
or
cmp
jl
outs
retf
add
fwait
gs
repnz
xor
ret
add
leave
sub
out
outs
data16
or
jmp
sbb
inc
sbb
push
sar
mov
mov
call
adc
cmp
push
sti
cmp
xchg
mov
xchg
sahf
pop
pusha
fnstenv
ret
push
scas
jge
xchg
icebp
cmp
stos
mov
aad
sbb
pop
jl
(bad)
xchg
cmp
ret
rcl
jl
jno
fsub
sbb
sub
and
enter
fsubr
outs
add
add
das
out
dec
(bad)
pop
mov
mov
shl
or
data16
xchg
sub
movs
add
test
popa
cmps
pop
xchg
js
and
or
into
and
ja
ins
xchg
mov
mov
dec
inc
imul
dec
inc
fldcw
test
adc
lahf
mov
add
dec
and
sub
dec
ss
mov
and
imul
stos
les
and
or
addr16
mov
push
add
mov
mov
icebp
into
add
push
fbld
(bad)
sub
cmp
test
push
cwde
lods
(bad)
add
pop
jns
sahf
push
pop
outs
and
inc
mov
aas
xor
in
sar
fbstp
test
retf
imul
(bad)
dec
hlt
mov
retf
jne
mov
and
pop
sub
sub
add
fwait
(bad)
pop
enter
inc
enter
mov
xchg
push
mov
jbe
mov
and
(bad)
gs
fisubr
xor
and
xchg
(bad)
jl
xor
adc
loope
stos
adc
outs
mov
push
xor
je
inc
(bad)
int3
retf
(bad)
fnsave
(bad)
dec
xor
aam
(bad)
std
enter
inc
mov
jnp
mov
int3
mov
push
lahf
dec
push
xor
xchg
icebp
mov
into
call
(bad)
sbb
inc
call
mov
test
push
jecxz
mov
sub
dec
ret
pop
hlt
dec
jne
push
jae
jae
dec
scas
or
out
cmps
repz
fstp
outs
mov
in
sbb
aaa
mov
xlat
stos
mov
lock
jp
int
adc
adc
push
test
mov
cwde
pop
adc
rcr
shl
out
sahf
xchg
ins
add
(bad)
ja
mov
lods
mov
mov
dec
add
push
cmp
adc
or
movs
pop
sbb
adc
or
mov
mov
shl
pop
jb
sbb
pushf
xor
xchg
sub
jns
cmps
mov
aaa
and
adc
xor
mov
lock
and
adc
lods
xlat
test
sbb
ror
jbe
cwde
pop
je
inc
gs
sub
jmp
pop
mov
mov
std
sbb
(bad)
call
xlat
jp
jno
sub
(bad)
mov
dec
mov
inc
pusha
test
cmp
ror
scas
xchg
jle
ins
je
pop
ss
mov
vpaddsb
das
imul
add
pop
aas
cli
aad
rcl
jg
sbb
mov
mov
or
pushf
cmp
xchg
repz
lea
sub
dec
nop
and
les
xchg
sub
out
cdq
jne
mov
sbb
popf
aas
add
stc
push
out
je
jge
cmp
in
jo
push
lods
scas
cli
dec
add
test
xchg
in
fmul
mov
imul
and
ins
or
cwde
mov
mov
rol
imul
cmps
jns
cmc
pop
xchg
clc
push
sub
sbb
popa
dec
mov
outs
lods
sub
imul
movs
lds
xchg
ror
dec
adc
out
mov
loopne
pop
rol
or
jae
xchg
test
xchg
lods
loopne
mov
stos
inc
push
add
xchg
iret
dec
and
pop
push
mov
cs
adc
int
cmps
arpl
mov
xchg
xchg
or
pop
add
scas
test
sbb
push
or
adc
ins
cld
adc
mov
movs
inc
inc
or
add
push
sahf
add
mov
or
(bad)
xlat
jbe
push
loope
je
jo
pop
mov
pushf
mov
call
and
out
ret
cmps
jae
and
je
push
(bad)
sub
fisttp
sub
das
addr16
pop
and
retf
mov
mov
mov
ja
mov
fdiv
es
mov
sbb
jb
(bad)
clc
dec
fcom
fwait
pop
push
imul
sbb
and
adc
or
add
pop
lods
loop
mov
test
cdq
xchg
push
(bad)
mov
aam
lods
scas
sti
mov
aaa
lds
cmp
dec
jl
call
in
call
(bad)
push
pushf
js
inc
int3
(bad)
cdq
xor
fwait
mul
pushf
in
inc
fwait
jbe
jecxz
inc
mov
sub
adc
or
add
mov
inc
and
test
les
sbb
rol
std
jmp
fsubr
push
nop
shl
lods
cmc
stos
sar
push
cli
das
sub
push
mov
mov
dec
cmc
loopne
(bad)
pop
pop
jl
std
cwde
sbb
imul
mov
bound
movs
mov
and
lods
mov
cmp
(bad)
fstp
imul
dec
lahf
stc
fwait
jmp
fild
ins
bound
int
and
stc
(bad)
das
push
xchg
inc
std
jne
enter
out
and
push
popf
sbb
sbb
and
or
outs
fs
mov
sbb
movs
(bad)
xor
mov
imul
out
mov
stc
imul
or
cld
sbb
jl
(bad)
mov
cmps
scas
mov
dec
dec
in
loopne
inc
bound
lahf
scas
xchg
adc
leave
xor
popf
push
mov
aam
retf
dec
or
cmc
push
inc
inc
repz
add
sahf
or
fiadd
inc
(bad)
push
jne
ins
in
loope
in
xchg
xor
dec
(bad)
loopne
push
ret
int
mov
mov
sub
loopne
mov
jmp
rcl
sbb
and
mov
sub
rcr
jns
pop
mov
retf
stc
in
ds
iret
shr
call
inc
clc
cs
adc
cmp
mov
fucomip
data16
ja
pushf
fisttp
jl
and
jbe
or
sub
ficomp
clc
sub
fstp
stos
test
aam
push
ja
movs
mov
xchg
int3
test
test
push
rcl
loopne
mov
or
lock
push
leave
out
and
popa
jmp
ss
call
test
ins
adc
sub
out
dec
add
xor
mov
out
jmp
cmp
cs
out
fs
xchg
adc
mov
shl
adc
cdq
push
ja
inc
pop
aaa
mov
sbb
movs
sub
push
pop
jge
popa
inc
mov
loopne
cs
ret
jmp
xor
cmp
mov
gs
sbb
loop
(bad)
call
xor
popa
repz
or
mov
ret
push
sub
aam
imul
jecxz
cmp
sub
(bad)
je
ret
aad
and
push
(bad)
dec
movs
ss
test
push
push
out
mov
pop
dec
add
push
push
push
adc
dec
sbb
stos
pop
inc
mov
push
out
and
ss
movs
xor
fwait
fwait
add
cs
jl
shl
push
pop
sub
or
pop
rol
sti
ret
jnp
and
adc
repnz
mov
pop
and
call
sbb
outs
dec
push
inc
aam
mov
les
mov
out
inc
out
xlat
fsubrp
inc
dec
out
mov
cmp
hlt
jmp
addr16
xchg
and
sub
mov
enter
push
outs
movs
inc
jg
jne
jnp
popf
push
pop
cli
or
push
es
(bad)
xlat
xor
mov
xor
movs
sar
imul
stos
mov
jne
jp
sbb
inc
popf
dec
arpl
push
xchg
ins
cmp
mov
sbb
pop
dec
sbb
dec
adc
cli
add
jno
push
into
aad
adc
bound
popf
shl
mov
or
cld
or
pop
adc
xchg
dec
loope
xor
fidiv
push
jno
lock
push
sar
popf
cmp
imul
movs
adc
sub
lods
pop
mov
inc
in
leave
mov
mov
movs
fbld
and
shr
xchg
nop
bound
aas
call
jno
movs
mov
cmp
jne
push
mov
sbb
push
cld
mov
ror
iret
and
stos
cmp
mov
bound
clc
aaa
int
(bad)
aas
and
mov
and
push
pop
shl
push
pop
leave
loop
rcr
adc
dec
js
mov
and
or
add
mov
in
push
push
cmps
adc
pop
movs
mov
fst
call
je
xchg
sub
(bad)
cld
xchg
ins
sbb
add
cmp
not
or
retf
inc
cmp
pop
test
aas
and
mov
ret
jb
ja
les
mov
add
scas
aam
cmp
adc
std
fisubr
pop
pushf
loop
jecxz
lea
addr16
loopne
test
mov
retf
xor
push
out
mov
cmps
mov
mov
loop
adc
add
outs
xchg
ret
inc
mov
jp
dec
jle
mov
adc
rcl
sbb
and
loopne
mov
(bad)
popa
add
std
pop
jle
sbb
ret
add
jmp
loop
mul
das
ins
and
in
sub
out
or
mov
(bad)
mov
test
(bad)
(bad)
push
add
shr
fisttp
repnz
out
fdivr
pop
mov
cdq
xor
pop
imul
ja
pop
or
gs
lds
inc
sbb
add
lods
xor
retf
xor
mov
test
pop
into
and
cdq
sbb
push
test
sti
dec
push
test
jno
jmp
mov
scas
xlat
into
(bad)
push
fst
mov
movs
out
imul
mov
push
and
test
jge
jnp
jl
or
lea
add
loope
xchg
jns
adc
mov
in
or
cmp
pop
dec
mov
pop
mov
or
arpl
xchg
aad
call
inc
xor
mov
jp
iret
addr16
test
pop
or
cmps
icebp
imul
push
sti
sbb
and
adc
fst
push
bound
rcr
pop
mov
add
test
cmp
sbb
clc
pushf
inc
cmp
lahf
inc
cmp
cmp
mov
push
fwait
mov
jmp
sbb
or
pop
imul
xlat
out
lods
mov
cmps
mov
imul
mov
pop
cmps
inc
fadd
sub
adc
faddp
popa
jg
sub
adc
jmp
or
aas
jb
pop
xchg
mov
mov
and
xchg
push
dec
repz
xchg
jmp
stos
lea
or
aad
pop
call
push
and
push
jg
xchg
ret
cbw
daa
pusha
push
inc
pop
cmp
mov
aam
fcmovbe
sbb
dec
(bad)
rol
imul
pop
mov
pusha
into
mov
aad
pop
xchg
dec
dec
popf
aaa
cmp
shl
push
loopne
pusha
push
in
movs
repz
mov
mov
cli
sar
lods
lahf
ret
fisttp
pop
xchg
push
lods
mov
fcomp
mov
cmps
push
sbb
xchg
push
mov
jmp
repnz
mov
mov
dec
and
add
std
push
sbb
stos
fwait
push
and
jnp
cwde
es
adc
(bad)
cmp
pop
dec
xchg
loope
push
jmp
inc
and
adc
outs
mov
popa
mov
add
gs
(bad)
xchg
or
sub
enter
in
xor
test
jnp
add
cmc
pop
movs
jb
xchg
pop
into
push
jns
hlt
sbb
fisttp
pslld
shl
inc
cdq
dec
retf
stos
or
jg
out
mov
stos
pushf
(bad)
xor
(bad)
jbe
mov
jmp
sbb
out
retf
add
inc
es
xor
add
mov
mov
ins
dec
fwait
mov
xchg
dec
iret
add
cmps
adc
sbb
ficom
mov
cmp
out
sbb
mov
movs
adc
fbld
mov
int
icebp
inc
lods
mov
jg
mov
in
cmp
out
lds
xchg
lods
cmp
cmp
push
mov
xchg
das
xlat
pop
outs
fiadd
(bad)
arpl
sub
jge
pop
loopne
sbb
cli
dec
jmp
mov
xor
xchg
xor
pop
cmp
retf
fisub
out
push
js
dec
nop
push
sbb
push
lock
add
xlat
or
xor
jg
int
fwait
mov
fistp
retf
dec
inc
(bad)
xchg
stos
in
mov
je
pop
mov
mov
shr
push
jbe
loope
sub
lea
leave
mov
fadd
inc
push
push
cmp
push
pop
in
adc
cmp
pusha
ins
pop
mov
fisttp
jl
xchg
test
(bad)
pop
inc
pop
out
jl
jp
jno
inc
mov
jg
add
add
xor
ss
stc
js
mov
sbb
(bad)
jne
neg
shr
(bad)
(bad)
gs
pop
rol
ss
push
movs
(bad)
mov
jns
fnsave
fmul
add
cld
in
mov
repnz
pop
cmp
jmp
pusha
in
xchg
mov
sub
and
dec
xor
mov
retf
sub
call
iret
sub
cmps
movs
dec
sub
cmp
mov
ret
mov
fild
dec
or
enter
and
out
xchg
cmp
inc
fcos
ret
push
cs
mov
xor
mov
ds
imul
mov
sahf
pop
lock
ror
push
xchg
mov
int
stc
xor
scas
cmps
sbb
sub
stc
add
sbb
outs
aaa
cmp
jmp
mov
push
fld
xchg
out
outs
xor
out
cmp
pop
and
xchg
mov
push
mov
sub
rcl
shr
mov
in
push
jge
and
sub
pop
mov
out
ret
add
xor
add
add
xchg
(bad)
aam
cmp
rcr
movs
int3
xor
push
dec
cmc
mov
mov
in
mov
aam
in
loope
(bad)
icebp
mov
imul
shl
fisubr
cmp
xor
sbb
mov
jae
(bad)
or
test
imul
sub
add
push
push
das
ret
sbb
fadd
fisub
bound
xchg
ror
fucomip
or
push
jl
inc
in
or
xor
mov
div
fadd
mov
ins
mov
pop
dec
cmc
inc
dec
aas
xor
call
mov
(bad)
jae
test
rol
pop
rcl
shr
jmp
jae
xor
inc
add
sbb
adc
xor
movs
test
cmp
jne
add
shl
mov
inc
call
xchg
sar
sbb
jge
in
add
push
cmp
pmaxsw
adc
loope
lods
mov
lea
mov
or
push
pop
and
cmp
call
xor
sar
stos
movs
inc
int
in
int
push
adc
retf
retf
cmp
push
(bad)
sar
fdiv
dec
lods
stos
cli
and
sub
test
pop
enter
fcomp
or
rcr
pop
mov
dec
and
shr
dec
cdq
pop
or
dec
ins
sbb
ins
sub
add
hlt
fimul
or
leave
stc
(bad)
jl
ja
sub
sti
mov
pop
shr
mul
imul
and
ret
xlat
stc
fdiv
call
and
sub
mov
jl
test
fwait
push
pop
cmp
jmp
cmc
iret
sbb
xchg
xchg
pop
cmp
jge
(bad)
sub
push
jge
sub
sbb
cmp
hlt
push
cmp
loope
jl
mov
into
stc
in
das
push
imul
outs
push
ss
movs
cmp
or
push
int3
scas
int
mov
push
mov
push
push
xor
fisttp
pop
add
pop
out
iret
add
pop
add
and
mov
fld
and
not
ret
aad
mov
fs
or
sbb
mov
test
xor
stc
cmps
mov
fcmovnb
pop
xor
push
mov
mov
in
leave
lods
fs
fnstcw
xchg
dec
iret
inc
stos
imul
mov
out
or
repnz
adc
mov
mov
rol
and
xchg
stc
xlat
sti
push
imul
mov
ret
jnp
mov
xchg
sub
bound
out
ja
js
xchg
sbb
push
cmps
movs
stos
jne
or
sbb
out
push
scas
add
test
pop
inc
jne
lods
push
shufps
test
push
pop
inc
test
aad
dec
add
inc
push
sbb
or
add
loopne
aad
ret
ret
inc
or
mov
jb
sub
jne
inc
or
pusha
fwait
push
xor
add
aam
ficomp
nop
inc
fdivr
push
test
dec
push
lahf
mov
xor
mov
fadd
ss
and
pop
repz
out
test
(bad)
mov
test
aad
pop
mov
xor
adc
int
(bad)
in
call
lahf
sar
push
xchg
push
mov
mov
movs
mov
fnstcw
dec
fsubr
sub
popf
xchg
stos
and
bound
ret
aam
xor
fstp
mov
scas
(bad)
sub
mov
arpl
inc
fwait
push
adc
imul
cdq
pusha
ja
push
arpl
xchg
or
adc
push
sub
in
out
mov
das
mov
push
xchg
imul
addr16
ficomp
pop
jg
and
ffreep
loope
dec
adc
and
call
(bad)
cld
cdq
int3
push
test
rcr
mov
jb
mov
fiadd
sub
out
(bad)
into
aaa
cld
fsubr
xchg
aad
jg
xchg
or
(bad)
mov
lea
jp
cmp
dec
push
out
sub
push
int3
dec
cmps
xor
sbb
sub
ja
pusha
movs
push
push
mov
xor
mov
xor
cdq
add
push
aaa
movs
pop
dec
pop
stos
idiv
and
bound
clc
dec
sub
dec
and
ficom
ja
inc
aaa
data16
lea
or
jns
mov
sbb
es
jno
ret
retf
aam
shl
xchg
int
or
and
adc
ret
jne
jae
lahf
rol
mov
popa
clc
mov
es
dec
scas
xchg
pop
push
add
xchg
sbb
aas
gs
mov
(bad)
pop
sti
or
sub
sahf
popa
push
inc
add
out
loope
cmps
shr
mov
xchg
rcr
push
leave
or
shl
pop
push
(bad)
icebp
xlat
(bad)
sbb
pop
pop
pop
mov
shl
stc
ds
mov
xchg
push
js
xlat
or
(bad)
sbb
in
movs
inc
test
aaa
rol
fisub
cmp
mov
popa
jp
fnstsw
add
shr
es
pop
cmp
inc
es
cs
jmp
pop
push
dec
sbb
movs
pop
pop
xchg
daa
cs
mov
mov
cld
jl
mov
ss
movs
cmc
jne
in
clc
mov
pushf
mov
pop
sbb
xchg
mov
or
mov
lds
(bad)
aas
and
loope
sti
addr16
push
jmp
pop
or
aas
aad
push
mov
dec
(bad)
arpl
mov
push
stc
fisttp
imul
dec
adc
dec
(bad)
mov
dec
inc
xor
mov
push
call
and
xor
push
pop
pop
cwde
(bad)
lahf
fs
out
int3
stc
cmps
pop
pop
repnz
ror
add
inc
fsubr
call
test
loop
jo
dec
dec
in
stc
pop
xlat
push
or
or
sbb
or
sub
dec
jmp
cmps
and
sbb
mov
enter
add
mov
pop
aad
dec
lods
push
sar
in
xor
push
pushf
xor
das
jo
shr
jne
hlt
pop
neg
cwde
outs
rcr
adc
dec
jmp
in
adc
loopne
fstp
sbb
inc
pop
and
mov
dec
push
dec
pop
fisttp
test
sub
cmp
test
clc
nop
and
mov
bound
fcom
bound
mov
fld
mov
pusha
outs
fwait
shl
lahf
popf
xchg
xchg
mov
dec
je
lods
aad
loopne
xor
sbb
mov
mov
push
xchg
ffreep
jle
lods
loop
fwait
inc
ins
movs
lods
push
out
ret
js
int3
fisttp
fwait
inc
fistp
rcl
xchg
(bad)
(bad)
sbb
jg
xchg
xchg
lods
pop
mov
(bad)
in
mov
(bad)
movs
in
retf
mov
push
rol
xor
push
cwde
popf
jp
or
ins
and
mov
mov
pusha
fiadd
push
ror
mov
mov
pushf
shl
(bad)
xchg
icebp
shl
push
push
sbb
es
jo
out
push
sub
sub
xor
call
jmp
fstp
and
add
adc
popa
jle
dec
and
or
es
sub
imul
stos
sub
aaa
lock
lods
xchg
jae
js
sbb
scas
out
ins
xchg
es
inc
pop
cld
mov
mov
fdiv
sbb
ror
lods
cdq
bound
inc
imul
cmp
xlat
sbb
lods
push
imul
stos
or
fistp
jns
jne
pop
dec
xor
inc
or
xchg
outs
stos
fsubr
in
xor
aaa
dec
adc
adc
pop
cmp
jecxz
aas
test
and
pop
sar
mov
(bad)
es
and
adc
xchg
xchg
xchg
pop
inc
or
cli
mov
push
and
popa
sar
cmp
cmps
pushf
inc
xor
bound
mov
dec
push
ficom
mov
sbb
std
and
cmp
push
push
mov
pop
scas
jmp
lahf
adc
or
test
(bad)
xchg
sahf
ja
sbb
xor
stc
mov
xor
stos
jp
lods
mov
dec
out
xchg
outs
call
cmps
adc
push
stc
push
push
pop
cmp
xor
test
div
lods
fnstsw
sbb
xor
jns
jge
jo
call
pop
test
cwde
mov
js
jp
in
xlat
int
xlat
cmp
popf
nop
xlat
lahf
loopne
sar
test
fild
imul
je
cs
add
adc
sahf
push
or
xor
push
pop
ret
(bad)
cli
mov
pop
imul
push
loope
cdq
mov
sbb
js
rcr
imul
retf
aas
in
frstor
or
mov
jmp
test
loope
cmp
not
cld
gs
pushf
cmp
shufps
add
sub
and
retf
add
mov
xor
and
lds
stos
mov
gs
xor
dec
mov
mov
dec
test
test
sbb
mov
sbb
sub
or
loopne
push
dec
jmp
scas
gs
sbb
mov
test
jmp
add
popf
ret
add
into
xchg
mov
in
mov
add
mov
not
cld
dec
and
dec
test
pop
neg
arpl
jno
(bad)
or
(bad)
push
ret
aad
ror
push
(bad)
ins
sti
cmp
stc
inc
inc
pop
jg
jnp
mov
and
xor
in
xchg
fbstp
inc
and
ins
jb
jb
mov
push
pop
sahf
ret
in
scas
aaa
cmp
or
cmc
push
sub
add
out
mov
pop
dec
sub
cmp
and
sbb
xlat
out
mov
pop
inc
(bad)
dec
sub
test
inc
sub
test
jo
add
sub
adc
xchg
test
and
lahf
mov
test
sbb
out
cmps
xchg
pop
sub
ins
pop
xor
fld
add
push
push
fadd
push
push
push
sti
cld
mov
fwait
jg
aad
in
test
ror
mov
and
(bad)
cwde
jnp
neg
sbb
mov
cli
cmp
leave
call
add
movs
js
or
jge
ret
lea
fstp
dec
mov
mov
xchg
out
jne
popf
xor
lods
jmp
cld
cmps
movs
and
xor
jle
mov
add
jnp
inc
mov
sub
stos
fild
retf
jp
call
push
in
push
and
mov
adc
ja
xor
pusha
(bad)
xchg
rcr
int3
ds
jp
stos
cmp
cdq
or
dec
in
hlt
inc
mov
out
and
lods
aas
stc
(bad)
test
std
sahf
add
mov
lock
xor
xor
mov
mov
ss
mov
call
jo
stos
jnp
addr16
adc
inc
and
push
cmp
inc
in
ins
sub
push
jmp
shr
cwde
movs
pusha
dec
std
nop
jmp
hlt
mov
push
adc
pop
addr16
mov
ja
lods
popa
mov
cmp
xor
xchg
movs
cmps
jle
lods
inc
popf
mov
loop
mov
retf
cmp
jle
fnstsw
add
sub
(bad)
adc
(bad)
pop
or
xor
in
adc
loopne
push
push
loopne
(bad)
jno
mov
fnstsw
and
gs
xor
pop
imul
pop
aad
jle
jecxz
mov
pop
mov
push
adc
push
fisubr
inc
adc
(bad)
sub
cmp
jbe
mov
shl
mov
(bad)
xchg
mov
adc
mov
in
repz
mov
push
add
xlat
jne
fild
mov
fcom
mul
inc
and
les
fstp
dec
xchg
adc
dec
jne
push
test
cli
bound
das
ins
or
pop
mul
cmp
jge
jp
stos
inc
add
dec
pop
xor
adc
mov
or
je
push
shr
fs
cld
xchg
rcl
(bad)
pop
cmp
arpl
aad
jmp
mov
add
call
cwde
aam
mov
jo
add
or
ins
push
rol
ret
dec
ds
cmp
mov
inc
ret
scas
fidiv
in
repz
adc
jno
add
repz
push
sub
push
or
iret
mov
jl
sar
mov
ins
loopne
js
add
adc
sbb
xor
inc
jae
mov
mov
mov
and
(bad)
sbb
inc
ss
iret
cmps
adc
xchg
mov
push
cdq
mov
out
popa
cmp
mov
paddsw
mov
aas
enter
push
adc
je
sbb
pop
add
outs
mov
pop
push
aaa
not
iret
jmp
push
sbb
jo
sub
push
rcl
call
and
xor
dec
sbb
lds
stos
or
stos
sti
jo
sbb
cld
and
mov
aad
test
pop
daa
rol
movs
xchg
std
pop
inc
inc
push
out
pop
mov
push
push
nop
sahf
adc
xchg
dec
cld
dec
mov
jmp
add
mov
pop
sbb
movs
push
int3
ins
pushf
sub
stc
sub
(bad)
mov
(bad)
dec
jb
mov
aad
ja
inc
jmp
movs
add
pop
sbb
cmps
or
arpl
aaa
xor
std
fs
fs
je
push
push
dec
jns
jge
dec
pop
fadd
xor
(bad)
fistp
in
adc
gs
inc
cld
add
xchg
add
jg
loop
enter
jmp
jae
jecxz
cmp
push
shl
mov
in
out
pushf
pop
lock
imul
lahf
or
test
or
fnsave
lods
rol
mov
sub
cs
cld
or
je
lahf
and
int
lds
outs
pop
jl
mov
stos
(bad)
stos
add
call
mov
xchg
mov
mov
aas
jbe
push
in
call
ret
movs
sbb
stos
test
rcr
mov
mov
in
or
ss
xor
popa
cmp
jge
pop
lods
dec
sahf
inc
inc
add
retfw
xchg
sub
or
pop
icebp
push
sar
loopne
fs
jae
sbb
xor
mov
inc
push
popa
retf
add
test
sti
cli
jl
mov
pop
mov
cmp
push
arpl
inc
dec
dec
cdq
stos
cmp
pop
pop
ret
call
and
out
rcl
jp
ret
imul
retf
shl
cs
adc
sbb
rcr
pop
jmp
and
int3
icebp
and
jle
(bad)
adc
stos
shl
push
nop
in
push
cmp
fs
daa
nop
mov
iret
push
and
mov
sbb
outs
sub
aaa
das
outs
inc
cmp
hlt
push
and
cmps
cmp
lahf
mov
fild
xor
scas
les
mov
(bad)
mov
mov
jmp
jne
(bad)
or
push
push
(bad)
xchg
cmp
push
rol
sahf
rol
(bad)
jbe
mov
repz
ret
mov
inc
ins
cmps
xchg
xor
int3
push
lds
out
inc
out
mov
cmp
iret
inc
mov
ja
stc
mov
pop
jne
movs
popa
mov
and
lahf
cmps
scas
imul
adc
or
cli
scas
or
pop
(bad)
jle
fwait
jge
loope
jbe
cmp
es
mov
cmp
xchg
dec
ret
jl
loop
out
test
adc
push
arpl
ret
fsubr
jl
ins
mov
adc
add
xor
bound
sbb
dec
inc
push
call
xor
icebp
ret
in
mov
test
mov
dec
fs
sub
ja
mov
xor
pushf
movs
retf
dec
sub
jbe
retf
loope
fisttp
outs
ja
dec
setb
mov
int3
cld
or
es
sti
mov
dec
mov
arpl
xor
push
add
iret
fnstenv
mov
neg
sbb
fidivr
xor
fstp
out
dec
add
add
mul
xchg
(bad)
jne
cmc
ficomp
mov
or
div
adc
xchg
mov
fimul
movs
mov
sub
sub
outs
nop
jns
(bad)
leave
dec
inc
mov
fnstsw
push
jns
ss
fadd
outs
pop
dec
sti
(bad)
adc
add
icebp
fiadd
sbb
(bad)
cmp
inc
push
rcr
pop
stc
dec
sahf
mov
repz
cmp
sbb
push
js
sar
ret
in
jecxz
mov
mov
cld
cmp
mov
outs
cwde
lahf
mov
rol
gs
lods
idiv
xor
xor
mov
mov
jne
push
inc
(bad)
jo
xchg
xchg
push
mov
or
push
adc
add
std
pop
js
stos
or
movs
add
pop
mov
cmp
mov
sub
mov
ret
paddusb
cmp
dec
mov
xlat
push
ffree
jg
dec
popa
dec
sub
xchg
push
dec
pop
lods
mov
inc
mov
xor
mov
adc
push
pop
aas
jg
leave
(bad)
jmp
xor
pop
out
add
fidivr
jne
repz
mov
popa
cmp
stc
mov
in
dec
and
(bad)
int
mov
xor
fcmovbe
lahf
ja
mov
push
add
push
sub
fld
xor
clc
pop
sub
sub
fwait
adc
sbb
outs
cmp
sbb
sbb
pusha
mov
sbb
test
push
enter
test
cmp
jmp
inc
xor
push
cmp
push
or
dec
inc
scas
adc
je
aaa
or
mov
cmps
icebp
dec
cwde
ror
hlt
cli
mov
icebp
test
fstp
and
dec
jmp
nop
fld
jl
jle
mov
dec
or
in
cmp
sbb
push
jecxz
scas
and
sbb
ja
addr16
rcl
dec
push
js
test
cld
push
push
rcr
xchg
nop
push
shl
mov
jno
cmp
mov
push
xchg
mov
aaa
cmovb
xchg
pop
inc
enter
test
(bad)
imul
adc
add
cmc
mov
jns
push
lock
and
add
dec
xchg
ret
loope
push
pop
push
bnd
je
jmp
adc
pushf
xor
push
xchg
mov
xor
neg
jecxz
ja
(bad)
imul
or
ror
pop
mov
(bad)
adc
mov
inc
popf
inc
data16
fnsave
mov
arpl
add
pmaxsw
and
aad
rcl
ins
dec
(bad)
adc
push
aas
mov
or
inc
adc
mov
fwait
sbb
xchg
adc
lea
icebp
push
std
not
mov
mov
ins
aaa
retf
inc
or
es
or
mov
mov
cld
sar
(bad)
mov
jmp
aad
fistp
sar
out
cmp
cmp
(bad)
mov
mov
jo
sbb
adc
mov
pop
jb
add
int
jbe
imul
xor
cwde
ret
mov
push
mov
ins
sahf
push
sahf
(bad)
(bad)
jp
push
cmps
(bad)
(bad)
pop
ins
fs
xchg
ins
stc
sti
mov
dec
xor
repnz
or
sbb
ror
or
scas
test
adc
fidiv
test
jmp
push
fbld
dec
lock
aad
pop
push
test
or
retf
cmp
sub
test
out
xchg
(bad)
push
mov
dec
popf
adc
mov
cld
fcmovne
fnstenv
enter
not
sti
jmp
scas
mov
dec
jb
out
cmp
in
push
push
xor
sar
mov
add
cld
cmps
call
clc
les
lea
mov
push
cmp
sub
ficom
(bad)
dec
ret
hlt
mov
or
pop
pop
mov
mov
ficomp
in
(bad)
ja
stos
stos
sbb
in
fs
jne
inc
movs
mov
xchg
fstp
jo
or
jne
cmps
sub
jl
sub
xchg
mov
mov
push
mov
(bad)
out
or
and
(bad)
cmp
repnz
daa
mov
mov
push
cwde
jmp
or
or
adc
jb
movs
(bad)
dec
dec
and
test
inc
icebp
lods
and
add
xchg
shl
sbb
or
and
inc
sbb
shl
xchg
pop
ret
les
cld
mov
mov
rol
mov
mov
repnz
inc
in
or
xchg
aaa
pusha
push
outs
add
fistp
cli
clc
cdq
inc
aas
ss
xor
test
sub
call
mov
jnp
jge
loopne
ds
mov
into
scas
cmp
inc
push
fnstenv
lock
xchg
and
add
ins
push
fsub
xor
mov
and
jle
ds
enter
mov
sub
dec
add
stc
or
test
fisubr
adc
ins
mov
sbb
test
in
or
inc
jnp
xor
or
pop
dec
jp
sbb
mov
cwde
out
push
imul
sub
dec
lods
shl
cmps
retf
cdq
cs
jge
test
add
add
push
shl
pop
dec
and
jmp
jmp
or
or
jae
jle
(bad)
and
out
retf
xchg
push
icebp
es
out
and
sub
jmp
sbb
js
pop
repnz
test
pop
xor
push
dec
js
push
and
push
int3
es
ret
mov
sbb
ja
push
sub
mov
xchg
cmp
and
ret
inc
stos
fadd
jl
mov
pop
mov
bsf
test
icebp
mov
cmp
xlat
inc
mov
ins
imul
jae
jl
jbe
into
xor
mov
inc
sub
sbb
in
and
jmp
mov
adc
ret
xchg
shr
int
inc
lods
ds
jmp
aaa
fdiv
es
sub
mov
data16
ror
add
and
shl
inc
jno
jp
mov
(bad)
shl
fld
ror
mov
shl
inc
cwde
inc
test
sbb
scas
cmp
jge
and
dec
jecxz
sahf
pusha
and
imul
std
sub
push
arpl
dec
dec
aad
xchg
lahf
sahf
adc
outs
push
push
jmp
add
ret
cmp
cmp
add
or
outs
mov
dec
adc
movs
jns
retf
push
fldenv
sbb
lea
and
add
ret
sub
dec
retf
inc
int3
jmp
lods
ja
push
adc
pop
pop
enter
cmp
rol
into
repz
out
stos
int
inc
inc
pushf
inc
sbb
shl
lahf
or
imul
adc
mov
arpl
scas
mov
sbb
fild
inc
aad
shl
cmp
aaa
shr
pop
repnz
test
scas
add
cmp
fwait
call
push
mov
jmp
add
mov
pop
cwde
repnz
inc
adc
xchg
adc
loopne
pushf
sbb
and
mov
aam
xor
fist
mov
inc
lods
jecxz
stc
lods
std
(bad)
xor
push
jle
sub
pop
mov
leave
outs
fnstenv
std
icebp
push
fxam
cld
xchg
cmc
sub
aas
xchg
mov
adc
jmp
out
sbb
outs
sbb
mov
inc
adc
outs
cmp
adc
shr
jmp
xor
push
test
gs
jb
jge
add
mov
adc
push
daa
mov
adc
cmc
movs
and
mov
lea
cdq
movs
test
xor
stos
inc
jmp
call
test
pop
arpl
arpl
xchg
pop
cli
cmp
mov
stc
sub
xchg
mov
sub
adc
fild
jecxz
push
dec
mov
rcr
cmp
add
int3
cmp
mov
dec
adc
fsub
pop
mov
retf
xor
mov
repnz
div
clc
fwait
adc
outs
stos
retf
push
movs
cmps
sbb
pop
pop
hlt
aas
dec
int3
jno
retf
push
pop
ja
pop
retf
lods
sub
xchg
sub
scas
shr
dec
in
mov
popa
jne
mov
xlat
aam
sbb
idiv
shl
imul
mov
mov
xor
mov
push
mov
cdq
jge
iret
icebp
mov
ins
std
inc
mov
pop
cmp
(bad)
dec
int
push
add
outs
aaa
xchg
(bad)
xchg
test
cmc
push
icebp
mov
(bad)
movs
scas
xchg
adc
adc
mov
call
out
sub
mul
js
popa
jge
addr16
mov
xor
ds
mov
mov
scas
inc
mov
dec
movs
je
or
sahf
jecxz
cmp
shl
mov
sbb
cmc
(bad)
and
xor
ins
fist
fild
call
inc
ins
xlat
nop
cwde
adc
ja
outs
jbe
or
fisub
and
ficomp
mov
ins
jae
setl
mov
cmp
and
sub
call
popf
jl
jp
sub
inc
popa
cmps
xchg
mov
pushf
sti
fisubr
lock
and
dec
jno
pop
(bad)
xchg
jnp
shl
punpcklwd
mov
mov
js
imul
(bad)
pop
cli
xchg
adc
sahf
mov
inc
pop
aad
ss
lock
(bad)
pop
xchg
gs
gs
adc
movs
jp
sar
jle
dec
fdiv
dec
xchg
(bad)
(bad)
mov
cwde
jl
rcr
aaa
push
push
mov
adc
out
mov
and
add
mov
pop
mov
mov
xor
and
mov
rcl
adc
jp
(bad)
(bad)
jl
xchg
and
jo
mov
adc
xchg
or
cmp
dec
adc
xor
adc
lods
fcomi
cwde
into
pusha
inc
into
outs
rcr
jl
inc
mov
jecxz
rcl
pushf
pop
mov
aam
loope
lods
mov
mov
dec
dec
std
jns
inc
mov
sbb
call
adc
ja
mov
cmc
xor
jp
add
sbb
stos
jl
add
in
lock
jmp
fstp
add
les
cwde
out
adc
push
push
push
pop
outs
out
fld
out
mov
xchg
pop
retf
inc
retf
retf
xchg
mov
fimul
std
shl
pop
es
into
push
or
fadd
rol
jbe
mov
cmp
lahf
adc
inc
loope
in
ins
pop
inc
hlt
test
sub
out
test
xor
ins
mov
ja
xchg
int3
js
pop
jo
xchg
jo
test
add
mov
test
(bad)
pop
popa
mov
mov
in
fcomp
xchg
add
call
lahf
call
add
cmc
icebp
dec
iret
cs
mov
and
lea
or
icebp
mov
cmp
nop
inc
retf
into
or
stos
mov
dec
fild
dec
fistp
pop
into
mov
in
imul
(bad)
jmp
fdivr
jmp
ror
fcom
mov
push
sub
dec
mov
cmps
rcl
stc
int
js
sub
push
sar
hlt
mov
in
sbb
movs
sub
adc
ins
jp
xor
scas
jl
or
jae
iret
fs
loopne
in
addr16
movs
fsubr
xlat
in
addr16
jp
inc
pop
ins
add
das
fcomp
mov
mov
ins
dec
(bad)
sar
shr
dec
movs
imul
sub
shl
fwait
fwait
lahf
retf
leave
into
inc
inc
cld
sub
add
mov
sub
(bad)
cmp
ds
and
xor
outs
in
mov
retf
sub
push
jnp
pop
adc
rcr
jmp
or
icebp
mov
fmul
(bad)
cmp
dec
jo
or
xchg
adc
mov
cmps
or
ss
xchg
adc
push
pop
in
pop
mov
sbb
push
and
xchg
jns
and
push
lods
and
and
inc
ret
lds
sbb
xchg
pushf
mov
sbb
adc
pop
push
mov
jecxz
dec
call
cmps
(bad)
jmp
mov
jno
rcl
add
jo
fdiv
sub
jl
xor
push
outs
inc
not
pop
addr16
bound
cmc
mov
mov
retf
rcl
cwde
in
sahf
push
sub
pushf
out
and
lock
xchg
pop
call
in
cs
jmp
sahf
(bad)
vmptrst
jecxz
pop
or
sub
shl
ss
inc
imul
dec
repnz
in
sub
enter
cmps
repnz
xchg
mov
sti
repz
stc
push
add
call
jmp
pop
retf
push
daa
test
inc
jo
mov
push
cmps
stos
or
jge
stos
cmc
fnstsw
in
(bad)
(bad)
pop
fimul
mov
fwait
adc
add
push
clc
jnp
or
int3
cmc
loopne
jno
bound
shl
pop
inc
add
or
lahf
stos
jle
mov
out
mov
in
loope
ret
cmp
and
xchg
sar
mov
mov
cmp
xchg
jp
lods
test
or
pop
add
xchg
fidivr
int
stos
shl
push
scas
enter
sbb
aam
xchg
(bad)
sbb
clc
jmp
shr
cmc
push
ret
adc
(bad)
push
jbe
mov
inc
inc
sar
lock
dec
jns
loope
or
xchg
or
jb
out
inc
cmp
pop
jmp
fstp
dec
nop
sbb
xor
aaa
mov
arpl
and
nop
fsub
and
inc
sbb
mov
lods
jne
sub
cld
les
loope
js
fisttp
cmp
js
mov
sub
sar
shl
pusha
mov
movs
aaa
pop
shl
sbb
scas
stos
add
je
enter
push
(bad)
lahf
sahf
xchg
push
cwde
jne
mov
add
jnp
mov
hlt
or
sti
es
adc
push
jbe
out
xor
add
inc
sub
push
es
pop
and
mov
add
fsubr
outs
pushf
and
repnz
ins
out
mov
jmp
and
mov
cmp
inc
sbb
and
(bad)
loopne
ds
sbb
mov
int
push
push
add
mov
push
aad
push
push
je
add
in
push
fisub
jns
sbb
mov
jbe
inc
or
je
bound
shr
and
xchg
outs
mov
clc
xlat
push
sub
in
mov
int3
gs
popf
xor
mov
lods
push
mov
pop
adc
push
mov
nop
cmp
pop
jno
test
inc
repz
cld
jno
mov
loopne
loop
sbb
jmp
inc
jo
icebp
mov
lods
push
fs
ret
loopne
push
lea
mov
xchg
xor
in
jns
imul
jnp
adc
es
push
cld
and
pop
aam
jmp
(bad)
adc
xchg
out
jg
push
(bad)
xor
sbb
adc
ja
jns
sub
xchg
mov
adc
mov
pop
call
sti
lods
stos
stos
push
cmp
inc
and
(bad)
xchg
pop
xchg
icebp
xor
jl
xor
call
cmp
xor
xor
scas
jle
(bad)
shl
sti
jl
rcr
shl
(bad)
pop
and
aas
sbb
xor
adc
push
and
push
inc
fcomp
push
(bad)
jne
(bad)
or
das
ss
jge
in
out
jo
loop
xchg
rcr
dec
out
fsub
loop
sbb
(bad)
jmp
das
jle
adc
iret
les
les
scas
mov
ja
out
je
jnp
jecxz
dec
fadd
push
sbb
mov
sub
mov
popf
fsubr
inc
inc
mov
xchg
sbb
inc
arpl
jnp
cdq
clc
imul
xchg
or
imul
jp
sub
sti
fnstsw
sub
mov
es
loopne
adc
fld
shr
lods
leave
fwait
push
aaa
gs
sbb
call
pushf
sbb
mov
mov
xchg
ss
pop
rcr
and
cld
fwait
mov
into
push
inc
jb
je
add
add
pop
test
(bad)
xchg
pop
mov
pop
jle
fsubr
inc
pop
pop
repz
icebp
ja
add
push
mov
or
jg
mov
xor
dec
out
mov
fdivr
stc
mov
cmp
bound
(bad)
dec
stos
mov
js
push
js
push
imul
jne
jp
cwde
dec
mov
outs
xchg
rcr
push
jne
fisubr
push
out
(bad)
cmc
and
pop
lock
jns
push
or
lods
mov
jo
mov
or
loopne
adc
fild
in
xchg
pmaxsw
mov
nop
jp
xchg
jp
lea
loope
inc
adc
pushf
mov
inc
outs
addr16
pop
dec
cmp
sbb
dec
cmp
mov
movlps
addr16
leave
cmp
or
cmp
mov
lahf
xchg
into
ja
stos
sub
mov
adc
add
fadd
jb
ins
sub
or
sbb
xchg
(bad)
push
aas
xor
mov
adc
adc
xchg
shl
adc
xchg
retf
ss
cdq
inc
mov
cld
jmp
aad
dec
(bad)
pop
push
xor
retf
mov
call
call
(bad)
fsubr
cs
sti
adc
ret
jp
and
add
push
dec
xchg
loopne
ins
sti
push
shl
movs
inc
sti
out
jge
pop
xchg
les
lods
or
mov
xchg
rcl
or
sub
aas
pop
jmp
sti
sbb
ss
xchg
sub
cmp
iret
mov
xchg
jno
mov
(bad)
mov
adc
test
test
jno
mov
popa
in
or
mov
push
retf
cli
gs
jmp
and
(bad)
jmp
pop
jne
mov
sahf
addr16
shr
lea
jo
mov
mov
movs
cmps
out
dec
ins
pop
add
mov
int3
jmp
shl
rcl
mov
sbb
lods
les
mov
push
and
lock
sbb
xlat
dec
test
clc
dec
stos
mov
int3
mov
ret
cli
fwait
xchg
cmp
les
sbb
cmc
out
push
pop
movs
cmc
sbb
mul
pusha
ins
ins
and
outs
inc
clc
(bad)
sbb
mov
repnz
mov
out
xor
xor
lea
pop
dec
das
sub
jnp
push
push
mov
push
dec
jbe
mov
sub
ins
mov
jmp
or
xor
fcomip
retf
(bad)
aas
sub
shr
cwde
jbe
retf
nop
test
mov
test
arpl
and
or
cwde
sub
and
sar
sub
ds
(bad)
pusha
out
xlat
neg
leave
xor
call
sub
or
frstor
jge
fwait
test
mov
cdq
jg
jp
pop
mov
mov
js
das
cli
or
dec
mov
xor
fs
loopne
sub
adc
dec
jp
adc
or
retf
lods
mov
and
and
in
fwait
cmp
std
pop
inc
push
sbb
inc
pop
xlat
movs
add
test
loopne
mov
add
and
int3
dec
pushf
pop
cld
pop
push
ins
rcl
jne
retf
inc
test
fisubr
and
mov
jle
std
(bad)
fdivr
push
adc
jmp
mov
fdivr
mov
jmp
pop
xchg
addr16
enter
pop
or
sbb
(bad)
mov
jge
ja
out
jmp
imul
pop
pop
mov
mov
add
pusha
sub
push
jno
arpl
pop
pop
in
addr16
fisttp
sbb
cld
ror
fbstp
ss
lds
push
cs
jb
das
cmp
xchg
loopne
xor
mov
jae
out
sub
mov
pop
inc
push
(bad)
bound
out
js
mov
push
push
lods
out
lods
scas
icebp
mov
sahf
test
call
pop
push
mov
in
stos
dec
push
pop
lods
ins
xor
neg
add
lods
jmp
mov
aad
adc
outs
or
jnp
push
xchg
cs
xchg
mov
out
mov
dec
add
mov
dec
loopne
hlt
xor
imul
sbb
add
not
aaa
in
es
xchg
fisub
inc
hlt
je
mov
sbb
xchg
sbb
clc
pop
dec
mov
and
xor
stc
rcr
sub
xchg
(bad)
test
into
sub
popa
mov
xor
in
sbb
xchg
stos
addr16
dec
inc
mov
jmp
jle
aad
ret
sbb
xchg
cmps
xor
inc
cmp
mov
repnz
sub
jnp
mov
out
push
mov
icebp
int3
push
into
or
loopne
ds
shr
call
ins
(bad)
sbb
adc
jae
xchg
data16
sbb
add
test
aas
das
jns
fadd
out
ja
xor
pop
in
xor
aam
(bad)
test
ins
addr16
xlat
mov
jne
sbb
test
jmp
(bad)
scas
in
rcl
addr16
out
popf
xor
add
fimul
loop
call
js
retf
es
rol
push
dec
test
cmp
(bad)
jne
lods
inc
icebp
mov
mov
push
mov
xchg
mov
int
add
mov
sbb
fsubr
adc
mov
(bad)
stos
or
xchg
lock
inc
pop
aas
cmps
add
pop
jns
cmp
sub
daa
jl
or
fbld
jb
mov
mov
mov
loope
aad
push
inc
arpl
sbb
call
shl
adc
sahf
stos
adc
outs
add
test
pop
or
mov
aas
stc
xchg
xchg
sbb
xchg
adc
bound
add
not
sub
pusha
and
and
pop
jb
sub
mov
cmps
push
jmp
mov
lods
cmp
xchg
sub
(bad)
pop
inc
syscall
imul
repz
lahf
cmc
jecxz
and
and
dec
popf
inc
dec
cwde
clc
sub
std
and
jb
dec
dec
test
pop
jle
and
mov
ds
push
cs
cmp
mov
jecxz
add
addr16
sbb
aaa
cs
into
inc
cs
and
mov
repnz
jbe
xor
jne
mov
mov
lods
(bad)
out
pop
fistp
xor
repnz
retf
shl
jno
jl
in
dec
(bad)
inc
out
and
adc
xchg
out
clc
push
or
out
mov
jmp
push
xchg
push
mov
adc
rcr
shl
scas
ret
cdq
mov
in
call
popa
rcl
mov
pop
sub
mov
xlat
cmp
pop
sub
int3
dec
and
gs
xchg
std
(bad)
pop
into
jge
popf
jbe
xchg
or
daa
aam
mov
fadd
jnp
pusha
shl
stos
lods
add
div
xor
loop
mov
mov
stc
mov
jp
jmp
imul
hlt
dec
retf
clc
mov
shl
mov
out
ror
test
idiv
retf
(bad)
ds
mov
cmp
push
dec
mov
cwde
(bad)
(bad)
mov
cmp
lahf
call
test
lea
mov
xor
out
ror
dec
inc
pop
mov
in
mov
sub
in
sbb
mov
ss
jnp
cwde
gs
or
movs
and
push
sub
xor
or
mov
out
push
shl
sub
jmp
repz
cmp
aad
ds
push
inc
fcomp
dec
ins
test
or
fnstcw
cmps
sub
lods
in
mov
adc
xchg
pop
test
add
inc
dec
cmc
cmps
add
lods
mov
call
sub
repnz
xor
push
xor
jl
cs
xor
adc
pop
jns
xor
jmp
push
movs
push
add
mov
push
lea
pusha
mov
cmp
lea
jb
inc
(bad)
(bad)
stos
in
fwait
xchg
aaa
mov
rcr
(bad)
bound
pop
ins
xchg
ret
fsqrt
gs
inc
push
jmp
cmc
add
jbe
cdq
jae
pop
fld
sub
(bad)
mov
jmp
outs
adc
push
mov
add
je
pop
jle
ror
pop
pop
out
push
lock
cmps
ret
ret
xor
mov
mov
(bad)
ret
adc
iret
ja
fcmovnb
add
aaa
idiv
jb
mov
lods
mov
cli
popf
pop
data16
and
stos
xchg
mov
mov
bound
xor
lods
hlt
push
push
stos
test
shl
imul
jo
stos
ins
cmps
push
xchg
nop
dec
cli
inc
jbe
fdiv
sub
mov
shl
inc
pop
add
out
(bad)
push
jb
cmc
inc
lea
das
sub
in
retf
movs
test
push
in
sbb
dec
ret
xor
xchg
std
fmul
add
jae
lock
std
dec
or
mov
movs
mov
lea
imul
jl
adc
or
mov
ffree
dec
mov
les
mov
sub
inc
into
repnz
xor
lds
shufps
inc
jmp
cmps
jle
loopne
dec
adc
stc
aad
jp
js
loopne
or
or
dec
push
pop
jb
(bad)
or
nop
pop
movs
je
aam
mov
(bad)
sar
sbb
inc
push
sbb
lock
ret
xchg
inc
fsubrp
mov
lds
sar
mov
nop
pop
(bad)
cmps
lods
loopne
pusha
hlt
sbb
pop
cmp
pop
pop
dec
jo
and
cdq
push
or
test
pop
mov
ret
mov
inc
int3
cmp
adc
loop
imul
add
jge
pusha
sub
add
dec
loope
pop
pop
cmp
dec
add
and
mov
lods
mov
addr16
in
fidivr
pop
repnz
jmp
mov
ds
xor
loope
jmp
mov
pop
je
rcl
push
cmp
adc
in
popa
scas
sar
add
daa
jmp
leave
and
aam
and
cli
pop
sahf
fs
inc
mov
jecxz
jnp
xchg
arpl
mov
cli
add
and
enter
int
enter
cmps
or
out
mov
jns
mov
jg
mov
(bad)
leave
xor
cli
fstp
sub
xor
add
in
pop
(bad)
xchg
mov
fidivr
dec
xchg
jbe
xchg
xor
add
lods
and
test
nop
sbb
push
lods
mov
fimul
xor
ret
aad
mov
pop
mov
add
mov
aad
cmc
popf
fcom
mov
pop
out
ins
out
(bad)
out
loopne
bound
(bad)
test
xchg
mov
cmc
sub
jle
dec
push
retf
cmp
fidivr
jmp
cld
cli
adc
out
sub
mov
lods
jnp
add
dec
mov
mov
mov
push
pop
cmp
pop
jecxz
movs
int
cmp
jae
call
add
dec
and
cli
pop
cmp
dec
fbstp
call
inc
dec
or
dec
in
push
fucomi
dec
sbb
mov
movs
mov
iret
stc
or
add
test
add
cmp
add
jecxz
xor
mov
jae
das
out
jmp
popf
fs
inc
push
add
cmp
mov
ins
dec
imul
mov
and
test
cmp
xlat
xchg
jp
pop
sbb
arpl
push
leave
sub
fmul
ss
ja
stos
pop
xor
inc
jbe
or
add
outs
and
and
mov
mov
stc
out
stc
xor
pusha
fdiv
dec
std
fadd
pop
jno
and
mov
bound
pop
rol
adc
jmp
dec
jae
lds
dec
cli
(bad)
adc
test
mov
test
xchg
pop
inc
mov
ins
mov
inc
xor
jns
fwait
mov
jne
das
les
jmp
sub
inc
add
(bad)
xchg
call
push
sub
sbb
retf
or
xchg
and
ror
jmp
cmps
in
test
rol
xor
in
aad
add
and
mov
inc
mov
mov
add
xchg
shl
in
ins
enter
push
call
push
push
std
add
dec
cmp
adc
(bad)
fs
or
test
sub
and
mov
cwde
mov
imul
sub
iret
mov
mov
cli
scas
cmp
jne
mov
jne
xor
inc
adc
into
sbb
xor
ret
add
pop
adc
jge
in
dec
fcmovb
(bad)
cdq
cmc
cmp
cmps
and
adc
dec
jno
and
nop
xchg
cwde
mov
je
sub
sbb
lahf
add
pop
xchg
fstp
or
out
int
cli
or
(bad)
ds
dec
int
sbb
xchg
inc
cmp
ds
(bad)
push
aad
add
xor
xor
xchg
and
leave
retf
mov
in
add
mov
adc
jmp
dec
bound
jle
push
mov
adc
and
out
into
mov
mov
aad
mov
shl
xchg
mov
pop
sub
mov
fld
rcl
jne
jle
adc
and
pop
add
push
jmp
jmp
inc
fst
mov
sbb
push
add
test
push
dec
dec
jecxz
rep
add
sub
inc
inc
mov
gs
mov
out
rcr
adc
(bad)
lahf
sbb
(bad)
repnz
add
inc
sub
xchg
mov
aaa
loopne
mov
dec
or
fs
jp
ds
aad
lock
mov
mov
fistp
loopne
pop
pop
outs
xchg
in
enter
stos
sbb
pop
jno
inc
xchg
stc
xchg
inc
mov
or
iretw
push
jmp
sbb
popf
pop
jae
push
mov
in
div
jne
in
aam
or
mov
mov
out
nop
pop
or
fdivr
sub
add
pop
mov
inc
xor
cmp
pop
jl
addr16
xor
jbe
mov
or
aaa
call
pop
lahf
cmp
sub
add
sbb
mov
dec
leave
sub
sbb
int
sti
mov
and
xlat
gs
push
push
vpmaddwd
cmps
add
pop
mov
hlt
cs
fld
mov
jmp
sbb
xchg
or
mov
fxch
add
jp
(bad)
adc
push
adc
std
jb
cmps
call
fmul
and
dec
lds
popf
dec
adc
inc
jb
ficom
(bad)
(bad)
push
das
ret
pop
jmp
cmps
sbb
or
ins
cmc
fisub
add
pop
pop
mov
pop
(bad)
and
int
loopne
xor
je
sub
je
cmps
jne
push
or
xor
and
dec
imul
int3
ret
jb
jge
or
(bad)
rol
les
push
sbb
push
inc
bound
push
in
cmc
jg
sub
dec
mov
jns
and
daa
xor
lahf
enter
fs
sbb
and
fbld
fadd
push
jle
movs
pop
pop
ret
pop
xchg
sub
dec
xchg
into
jl
jne
dec
add
cmp
add
stos
cmp
(bad)
ficomp
cwde
jmp
addr16
mov
int
sbb
imul
sbb
push
outs
call
shl
xchg
test
and
mov
repz
mov
fsub
shl
add
adc
mov
add
gs
sbb
rol
in
dec
cmp
ret
enter
push
inc
ins
ja
add
pop
jmp
sub
mov
ja
sub
and
pusha
js
rcr
inc
cmp
mov
gs
fidiv
mov
and
mov
add
std
pop
gs
cmp
call
aad
movs
ret
inc
and
xchg
xchg
movs
imul
clc
add
enter
sub
mov
add
and
push
sub
cmp
xchg
push
out
pop
lea
xchg
inc
mov
xchg
pusha
pop
es
out
retf
std
(bad)
dec
sbb
shl
pop
and
inc
adc
push
adc
outs
mov
lods
pusha
sbb
(bad)
mov
jecxz
mov
leave
inc
jae
scas
cmp
fadd
pop
movs
jmp
arpl
sub
xchg
cmp
push
(bad)
data16
fiadd
int
pop
push
mov
adc
mov
aaa
pop
jmp
leave
arpl
popa
fdivr
sahf
push
rol
neg
sahf
xchg
or
dec
in
fidiv
xchg
add
mov
out
int
jg
test
(bad)
push
je
inc
mov
cmp
xchg
inc
aad
cmps
(bad)
cmp
pop
xchg
hlt
shl
sub
and
xor
sbb
mov
mov
stc
jle
movs
jmp
or
shl
inc
out
mov
mov
call
jmp
scas
pop
xchg
jecxz
test
push
jmp
and
xchg
dec
test
loopne
inc
(bad)
sbb
loope
jle
outs
fwait
shr
gs
repnz
in
and
jmp
cmp
sbb
inc
sbb
inc
(bad)
nop
sbb
out
out
sub
stc
ja
cmps
scas
mov
repnz
push
int
shl
adc
sbb
xchg
test
sbb
jns
jmp
arpl
repz
gs
in
push
sub
inc
mov
inc
dec
mov
fsub
push
push
mov
cmps
mov
mov
iret
outs
xlat
cwde
sub
cwde
push
sbb
(bad)
scas
pop
sti
adc
and
xchg
cmp
jge
aas
mov
cmp
jnp
inc
adc
pop
ja
icebp
xor
sbb
mov
fwait
mov
push
gs
das
mov
mov
or
push
inc
xor
sti
es
xchg
pop
ret
cmps
data16
inc
hlt
and
ins
sbb
pop
jne
shr
imul
pop
mov
xchg
inc
sub
sbb
jp
xor
loop
in
add
cmp
(bad)
fadd
int3
add
xor
loopne
push
cmp
adc
into
sar
pop
cmps
xor
pop
loop
jbe
lods
mov
(bad)
pop
add
mov
in
pop
push
xchg
push
test
or
add
xor
clc
iret
adc
cmp
out
xor
ror
retf
cmps
imul
pop
icebp
mov
movs
pop
xchg
aas
pop
ja
mov
fs
and
sbb
popa
pop
jle
outs
sbb
add
les
call
jge
stos
shl
adc
call
jns
inc
fwait
aad
pop
out
add
ficom
dec
jge
js
div
jo
idiv
push
push
mov
mov
sub
cmovo
shr
cdq
ficom
jno
push
(bad)
cmps
pop
fiadd
jo
mov
xchg
and
(bad)
daa
adc
cmps
ret
sbb
jns
xchg
clc
jb
aas
test
cdq
push
jnp
inc
aad
loope
popa
retf
fcom
xchg
xchg
inc
pop
and
sbb
retf
mov
bound
jb
push
sar
mul
shl
clc
repz
push
fnstsw
jae
jo
int3
add
in
jne
rol
out
mov
and
bound
lds
fdiv
fwait
inc
mov
sub
nop
dec
adc
cmc
cmp
fwait
dec
add
rcr
xchg
(bad)
iret
push
push
arpl
mov
iret
mov
inc
daa
shr
mov
rcr
jl
xchg
das
sti
ror
jl
popa
div
sbb
dec
jl
aam
pushf
add
mov
sbb
int
push
push
cmp
out
in
jle
(bad)
push
addr16
les
pop
inc
jle
xor
add
fs
fcmovnb
push
xchg
(bad)
sub
into
mov
jo
pop
lods
aam
adc
fcmove
adc
scas
sti
test
cmp
call
cmp
sar
ret
mov
jg
(bad)
xlat
and
push
mov
xor
or
add
pop
loopne
xchg
mov
push
sub
out
lock
adc
add
out
sbb
(bad)
jg
cmp
adc
pop
int3
movs
das
jl
jmp
or
mov
sub
jge
fnstenv
jmp
mov
xor
in
pusha
xor
(bad)
mov
test
in
cmp
mov
mov
sbb
dec
leave
cmp
pop
test
sub
jne
aaa
mov
out
and
enter
dec
mov
popa
add
cdq
cmp
ss
mov
hlt
and
shl
mov
inc
rcr
push
retf
pop
ror
cs
popf
push
xchg
xchg
adc
add
imul
jnp
in
mov
mov
mul
shl
adc
lods
imul
pop
es
mov
adc
mov
repz
pop
mov
xchg
shl
push
mov
pop
arpl
mov
stc
mov
xchg
enter
out
pusha
lock
mov
pop
sbb
mov
add
aad
inc
cmp
and
ja
sahf
jmp
fidiv
mov
mov
push
jo
mov
push
rcr
shl
and
push
xchg
dec
or
pop
mov
out
loope
pop
js
sub
xor
into
nop
call
dec
dec
inc
std
and
sub
xchg
dec
jecxz
jmp
pushf
adc
inc
pop
psadbw
out
xor
cmc
scas
pop
je
pop
sbb
pop
imul
popf
fwait
push
xor
movd
mov
clc
dec
pop
xlat
inc
jp
pop
daa
cmp
(bad)
call
sbb
mov
mov
push
cli
fwait
add
sbb
or
test
xor
and
mov
jmp
xlat
and
test
mov
sar
and
and
jl
xor
(bad)
mov
inc
pop
jmp
out
adc
sti
ss
cmp
fidivr
test
aaa
mov
push
ss
fbstp
aam
push
icebp
mov
cmps
out
push
ror
in
out
jne
inc
xchg
push
or
sbb
hlt
fdivr
cwde
sbb
jle
cmp
aaa
jae
sbb
or
imul
in
push
loop
push
fistp
je
cmp
loopne
aas
and
xchg
push
xchg
or
aad
mov
sti
jo
sar
jmp
pop
mov
shl
jmp
mov
jb
ins
jl
sbb
lock
sub
add
cmc
mov
sub
push
mov
ror
adc
daa
add
lods
mov
pushf
cli
or
add
inc
push
mov
(bad)
or
cmp
fbld
or
add
shl
das
test
jge
(bad)
dec
int
mov
fcom
jge
arpl
mov
aad
pop
fild
or
sbb
mov
retf
cmp
mov
leave
out
adc
pop
cs
sbb
movs
ins
push
sbb
inc
stc
repz
sub
sub
xchg
sti
push
lods
xchg
fadd
xor
xor
mov
test
sbb
xor
ret
inc
ror
push
enter
pop
ror
mov
lahf
jecxz
sbb
stos
jo
call
sub
dec
pop
dec
es
inc
gs
call
and
fsubr
mov
mov
(bad)
sbb
dec
cmps
nop
adc
ror
adc
movs
dec
pop
sub
mov
push
loopne
jge
adc
dec
imul
cli
inc
lahf
in
ret
and
pop
sbb
xchg
gs
push
pop
rep
cmp
pop
cdq
jmp
enter
(bad)
in
bound
cli
sub
mov
movs
rcl
cmp
push
cmp
dec
repz
mov
sbb
lods
xor
push
fistp
mov
sti
xlat
scas
ds
call
xchg
pop
inc
cmp
push
push
or
mov
aas
psubw
test
imul
popa
mov
mov
add
cwde
shr
xor
mov
enter
imul
fld
push
dec
push
pop
es
cwde
ja
movs
(bad)
xchg
fist
xor
mov
xlat
add
call
leave
ret
push
in
mov
adc
rol
(bad)
sti
ret
xor
js
clc
mov
pushf
and
add
stos
inc
push
movs
xchg
mov
cmp
add
cwde
loope
push
xor
cli
mov
pop
repnz
sbb
and
in
imul
ror
arpl
mov
in
cmp
inc
cmp
gs
call
xlat
inc
jo
iret
out
jnp
jae
dec
xor
stos
add
push
push
sar
(bad)
jbe
adc
push
and
pop
rep
mov
sbb
xchg
or
jne
mov
jge
jecxz
or
xor
aad
add
sbb
idiv
(bad)
pusha
test
(bad)
shl
pop
(bad)
jmp
movs
xchg
cmc
stc
push
cmp
or
xchg
xchg
push
aam
jnp
inc
ret
mov
sub
cmp
bnd
outs
xor
retf
mov
mov
test
sbb
call
pop
ja
push
add
mov
xlat
ret
pop
inc
in
shl
cmp
adc
iret
adc
jecxz
clc
cmp
inc
dec
aam
push
aad
arpl
jmp
rol
adc
test
sbb
imul
addr16
dec
mov
ret
push
pop
movntps
xchg
ror
dec
in
sti
cld
in
mov
outs
mov
mov
clc
iret
into
in
cli
pop
cmp
iret
scas
outs
adc
push
push
cmp
add
test
lds
dec
sbb
aaa
(bad)
repz
or
push
cmps
push
(bad)
js
fcom
fdiv
cmp
sub
outs
cmp
push
mov
mov
fistp
jl
enter
or
inc
xor
hlt
mov
in
dec
in
xchg
adc
push
test
test
mov
mov
mov
add
les
loop
test
inc
push
adc
push
pop
dec
xchg
stc
fld
out
jp
call
(bad)
js
add
xor
mov
call
movs
adc
loopne
push
into
das
adc
push
mov
adc
sbb
mov
mov
pop
sahf
xchg
jmp
jl
stos
mov
test
(bad)
and
ret
mov
mov
add
inc
mul
sbb
jno
jle
dec
add
push
lahf
in
adc
je
dec
out
mov
repnz
push
push
xchg
mov
jp
lds
xor
push
dec
jle
cmp
pop
pop
int3
mov
shl
sbb
push
repnz
pop
fld
int3
repnz
sbb
or
imul
fucomip
dec
push
mov
(bad)
pusha
js
fistp
cdq
sbb
mov
mov
and
(bad)
and
adc
and
into
mov
xlat
cmp
pop
adc
jb
adc
aas
inc
rcr
xor
rcr
xchg
das
mov
jne
cmc
xor
mov
fnstsw
xchg
inc
cmp
mov
adc
fs
loope
js
sbb
retf
mov
add
pop
ja
lods
cli
dec
add
dec
test
aam
xlat
ins
or
mov
sub
outs
inc
lock
jge
cmp
sub
call
pop
out
aad
push
das
jp
cmp
(bad)
pop
movq
mov
icebp
pop
mov
hlt
mov
sbb
rol
adc
aam
sub
add
int3
ja
sti
pop
adc
push
add
(bad)
mov
(bad)
sub
jo
into
sbb
leave
(bad)
mov
aas
in
and
cmp
mov
test
cmp
add
or
fidiv
test
daa
and
test
add
or
out
imul
mov
sbb
fsub
imul
or
or
pop
cmp
sbb
stos
rol
lods
push
mov
sub
dec
cmc
lods
mov
push
bound
and
repz
call
adc
ror
mov
push
jl
pop
call
(bad)
call
aam
push
cli
fcomp
es
(bad)
mov
inc
pop
inc
hlt
jo
call
aam
jge
lods
pop
test
adc
cmp
cmp
jbe
add
lods
clc
mov
add
ror
mov
out
or
mov
push
push
or
adc
mov
dec
dec
add
lock
mov
mov
movs
test
xor
jg
push
cld
pcmpeqb
xchg
jp
and
mov
sub
push
pushf
mov
aas
xchg
test
dec
dec
jo
outs
loop
xchg
addr16
(bad)
retf
jo
xchg
pop
int
and
cld
ins
sub
mov
xchg
aas
jmp
dec
cwde
call
inc
jmp
rcr
call
inc
xlat
sbb
aam
pop
xlat
pop
(bad)
xlat
(bad)
and
aaa
cwde
mov
xchg
pushf
pop
ins
cs
sbb
popf
jnp
aad
sub
fnstsw
adc
mov
bnd
gs
clc
mov
jmp
icebp
out
cmp
sbb
inc
mov
jmp
sub
cli
(bad)
(bad)
les
ds
pushf
jae
sbb
cmp
out
daa
lods
ins
imul
sub
(bad)
cmp
dec
sbb
xrelease
(bad)
pop
pop
inc
mov
mov
cwde
sti
scas
pop
inc
leave
hlt
pop
mov
and
addr16
jmp
mov
mov
jge
jb
mov
adc
cld
push
or
push
cmp
adc
mov
xlat
add
dec
fxam
retf
pop
mov
jmp
sbb
test
cmps
xor
movs
sti
pop
pusha
push
xchg
pop
jmp
adc
mov
aad
push
pop
sub
inc
imul
call
lods
mov
jne
xor
adc
pop
ins
mov
push
or
call
push
mov
push
mov
movs
dec
pusha
sbb
xor
sub
mov
or
xor
pusha
mov
movs
xor
ss
and
jge
lahf
push
cmp
cld
lds
push
retf
int3
mov
or
cmps
and
jecxz
cli
rcl
add
mov
clc
and
add
or
pop
in
pop
lock
jp
xchg
popf
mov
leave
lods
sbb
dec
into
adc
jne
sbb
ja
cli
loop
ror
mov
and
loope
call
hlt
mov
sti
frstor
(bad)
xor
inc
and
jns
fstp
movs
and
ins
pop
in
push
stos
stc
stos
fist
mov
shrd
pusha
or
or
jecxz
in
test
fwait
pop
daa
or
mov
jns
nop
push
pop
aad
(bad)
sub
mov
adc
in
push
adc
add
fcomi
mov
scas
jmp
in
icebp
out
(bad)
sbb
mov
sub
retf
mov
add
outs
xchg
and
push
adc
or
mov
sub
aad
or
cli
(bad)
rcl
out
iret
enterw
adc
or
xor
push
xor
hlt
dec
popf
sbb
pushf
pop
shl
push
fild
xor
and
pusha
neg
xor
daa
add
cmps
mov
js
inc
ror
inc
cld
mov
aas
xor
adc
mov
sub
repz
fstp
sbb
retf
fiadd
lahf
ret
out
xchg
in
test
pop
inc
ret
cmp
cmps
ss
movs
push
mov
xchg
add
shr
add
pop
pop
jbe
xor
int
inc
add
or
ror
sub
mov
fs
inc
sbb
push
push
pop
jl
arpl
xor
jae
das
pop
mov
shl
aaa
adc
imul
pop
cdq
sbb
adc
int3
push
pop
xor
int3
addr16
pushf
loope
das
xor
xor
rcl
inc
es
mov
add
gs
push
lods
adc
je
inc
div
aad
in
adc
mov
cmp
or
lock
and
popa
mov
xor
xchg
dec
push
mov
mov
adc
mov
push
gs
pusha
push
jecxz
jmp
fsubr
mov
xchg
mov
push
ret
adc
inc
mov
out
adc
mov
dec
das
mov
ins
fmul
movs
jmp
sahf
jge
sbb
push
test
ret
jmp
call
fcom
mov
daa
add
jns
movs
mov
or
mov
sbb
dec
mov
add
out
add
test
mov
adc
mov
(bad)
(bad)
cs
mov
adc
push
xchg
repnz
outs
xchg
fisttp
je
js
loope
fist
(bad)
ret
mov
sbb
mov
xchg
mov
es
push
xchg
je
js
fst
xor
jge
repz
cdq
xor
inc
jmp
loope
imul
inc
sahf
enter
inc
ror
sbb
dec
xchg
pop
pop
fs
xchg
imul
adc
sbb
push
imul
pop
xchg
adc
inc
adc
movs
inc
xchg
shl
out
jno
inc
jns
mov
ficomp
mov
retf
shl
sub
or
xor
daa
scas
sub
or
cmc
ss
jle
add
les
and
dec
test
sub
mov
cmps
out
out
out
loop
or
lods
xor
cmp
clc
adc
xor
mov
outs
sub
mov
sbb
es
xchg
inc
xchg
sub
imul
inc
ins
addr16
adc
daa
fistp
repz
mov
test
(bad)
(bad)
xor
cmp
or
lahf
or
inc
push
out
xchg
add
jae
sbb
pmulhw
dec
ins
sahf
lahf
mov
or
dec
scas
or
adc
cmps
xor
lods
stc
xchg
xor
popf
stos
and
mov
adc
sbb
xchg
mov
movs
std
push
hlt
cwde
ins
popa
pop
dec
jecxz
and
ins
push
call
retf
int3
mov
pop
push
call
pushf
inc
push
bnd
icebp
scas
lds
retf
or
fistp
bound
add
std
xchg
fdiv
cmp
retf
jnp
pop
push
popa
pop
cmp
pop
sub
or
pop
adc
jg
mov
lods
stos
or
and
xchg
push
push
mov
cld
popa
mov
fstp
xor
or
stos
add
into
add
test
inc
push
push
mov
mov
inc
sub
in
cwde
in
repz
rcr
jmp
into
and
or
sub
xor
jmp
movs
mov
icebp
jbe
nop
add
gs
sub
std
push
pop
jg
push
cmp
leave
test
inc
ror
call
or
test
fstp
iret
pop
(bad)
outs
jae
xor
stos
and
ret
mov
sub
out
cld
or
(bad)
push
push
das
sbb
mov
mov
mov
inc
cld
(bad)
push
ret
cmc
xchg
retf
and
ins
adc
cmp
or
mov
mov
add
adc
out
sbb
mov
pop
call
aam
dec
or
mov
dec
bound
xchg
inc
mov
push
retf
or
dec
mov
cmp
shl
fnstenv
div
jnp
shl
pop
lds
and
mov
xchg
or
adc
and
ror
cmps
or
or
pop
jg
mov
pop
scas
push
mov
(bad)
push
add
jmp
push
nop
mov
sub
mov
sub
mov
fmul
sbb
repnz
mov
add
pop
(bad)
sbb
cmp
pop
sbb
bound
push
nop
mov
push
sbb
stc
jo
dec
cmp
sub
xlat
leave
test
out
pxor
xchg
jb
push
data16
nop
push
daa
in
imul
icebp
test
lahf
jns
cmps
lahf
out
and
add
daa
loopne
mov
jno
sti
inc
in
inc
and
inc
inc
nop
test
xchg
call
and
or
push
sub
mov
nop
scas
int
out
push
mov
jg
movhps
xchg
mov
xchg
rcl
pop
jnp
add
ins
pop
jl
fsubr
cwde
sahf
in
mov
call
mov
mov
mov
cmps
or
mov
fcomp
xor
(bad)
jge
sti
pushf
mov
enter
and
das
or
xchg
xor
mul
or
loop
xor
ror
out
sbb
add
sar
dec
in
out
sahf
lods
call
or
in
add
shl
push
mov
les
jl
sub
sub
add
(bad)
push
xchg
mov
ret
xchg
pop
xchg
rol
dec
adc
gs
or
cmc
scas
inc
std
add
(bad)
pushf
rol
cdq
call
into
js
dec
mov
repnz
jl
ficomp
shr
pop
lock
neg
in
add
leave
inc
add
cmp
cmp
ins
pop
jns
outs
or
or
test
lahf
call
fsub
jg
mov
ds
add
and
xchg
rcl
cli
mov
clc
fisubr
loopne
dec
or
jecxz
scas
out
fsub
pop
pop
(bad)
or
sub
inc
pop
icebp
lahf
mov
or
jb
adc
lea
scas
int3
push
cld
mov
sahf
fdivr
pop
(bad)
sbb
inc
mov
les
inc
sbb
bnd
scas
test
mov
fwait
scas
clc
pop
retf
rcl
and
call
arpl
mov
lock
inc
sub
stc
pop
test
sahf
mov
in
cmp
add
je
pop
pop
scas
cdq
inc
popa
dec
mov
lods
xchg
daa
call
inc
(bad)
jmp
mov
pop
jge
mov
mov
mov
mov
mov
pop
ds
jae
mov
sub
add
pop
cmp
xor
js
lahf
adc
fdivr
mov
lahf
mov
push
xchg
or
outs
cmps
iret
add
xor
sub
clc
jg
xchg
loope
mov
fld
mov
imul
ror
retf
adc
mov
xchg
sub
xrelease
lods
out
(bad)
imul
sbb
fidivr
mov
push
or
arpl
mov
aad
cmp
mov
mov
stos
sbb
adc
sub
push
pop
retf
neg
or
xchg
mov
push
outs
push
cmps
adc
cdq
jle
dec
sbb
cdq
shr
inc
cmps
ror
pop
jl
mov
cmps
xchg
push
daa
into
and
pop
imul
pusha
inc
and
inc
push
xchg
jmp
mov
jp
fiadd
xor
in
add
fdivrp
test
ds
retf
or
scas
les
in
stc
cmp
pushf
pop
xchg
test
icebp
mov
das
lahf
imul
addr16
popf
inc
add
xor
adc
adc
popf
dec
stc
sahf
mov
neg
xor
cmp
push
pop
les
push
stc
add
data16
cmp
outs
jbe
cdq
or
call
sub
mov
mov
mov
mov
and
or
(bad)
pop
div
test
pusha
push
bound
inc
paddb
pop
inc
sbb
push
mov
dec
daa
popa
sbb
jno
pop
mov
jl
shr
jb
les
fnstenv
pop
lods
mov
pop
addr16
adc
pop
test
dec
push
repz
mov
out
inc
shl
hlt
mov
dec
xchg
ret
mov
popa
mov
add
mov
cld
mov
inc
cmp
xor
jmp
outs
jecxz
popf
jae
pop
inc
scas
cwde
mov
xor
jmp
push
lea
jnp
scas
adc
adc
xchg
sub
das
test
or
cdq
ficom
jg
test
mov
sub
xchg
push
inc
jne
sbb
(bad)
cmp
jmp
push
push
dec
xchg
xlat
daa
stc
cmps
sti
jge
push
xchg
shl
mov
aas
dec
sub
mov
pop
and
push
cmps
jge
cwde
inc
xor
in
test
ins
mov
jnp
xchg
sbb
or
or
aas
cdq
mov
pop
test
push
lods
add
push
mul
popa
cli
jbe
pop
cmp
(bad)
data16
stos
cmc
movs
sbb
ret
lea
push
fnstcw
loop
xchg
div
scas
test
sbb
or
sub
retf
cmc
sub
retf
gs
pop
xor
test
mov
dec
sbb
ret
dec
cmp
aas
les
mov
jecxz
hlt
mov
enter
mov
push
(bad)
mov
repz
jne
inc
push
jbe
or
ds
sbb
or
adc
adc
out
movups
mov
sbb
mov
cmp
cmp
or
dec
jle
outs
hlt
in
(bad)
dec
jg
xor
sbb
sbb
xor
dec
out
xchg
nop
enter
ins
and
push
test
mov
sub
bound
idiv
test
sub
scas
into
inc
sub
daa
pop
das
push
sub
in
add
jb
xchg
sub
les
(bad)
out
dec
jne
cmc
ror
xchg
add
dec
adc
mov
lock
movs
(bad)
call
sub
scas
enter
push
imul
test
scas
lock
adc
pop
mov
(bad)
iret
aam
and
repz
rcl
dec
mov
push
repnz
pop
test
xor
cmp
jns
sub
(bad)
fisttp
stc
adc
xor
pop
or
ret
and
xor
push
dec
mov
out
sub
xchg
rcr
mov
push
cmc
sbb
cmp
sub
js
imul
inc
pusha
fisub
push
pop
mov
scas
adc
cmp
xor
test
push
lea
jnp
cmps
xchg
pop
das
pop
cmp
cmp
icebp
inc
xchg
neg
push
leave
jle
icebp
pushf
aas
in
or
popa
jo
dec
and
add
inc
pushf
jmp
mov
sub
cmp
cmp
aam
pop
sbb
fidivr
dec
ins
xor
pusha
jecxz
test
cmp
loope
pop
lds
lock
fdiv
in
jg
pop
mov
loope
add
call
pop
into
xchg
(bad)
shl
dec
mov
push
js
mov
sahf
push
sar
hlt
sbb
sbb
(bad)
cmp
loop
sbb
das
and
push
push
test
sub
fcomp
mov
inc
sub
cmps
sub
pop
xchg
aad
in
stos
mov
imul
(bad)
push
and
sub
dec
xor
mov
movs
and
adc
jne
or
ret
les
sti
push
and
sbb
cmc
adc
add
pop
repnz
leave
pusha
rol
jmp
cs
fdivr
(bad)
mov
push
or
mov
cs
(bad)
sub
push
cmp
test
mov
fmulp
xor
mov
mov
push
cwde
std
aaa
and
jns
sbb
jns
or
mov
mov
aam
mov
xor
xor
stos
mov
jge
loop
xlat
shr
rcl
inc
push
and
neg
dec
dec
test
(bad)
inc
test
xchg
dec
sub
push
aam
mov
xchg
cmp
pop
inc
sub
cmp
retf
inc
(bad)
adc
xor
stc
rol
in
jl
sti
je
ds
jmp
jno
std
cmp
adc
sahf
jb
jo
jl
ja
popa
ins
xor
rcl
int
and
pop
adc
(bad)
sbb
xor
lods
pop
lds
test
paddw
pop
in
sbb
lea
sbb
sub
xor
iret
call
jnp
sub
inc
les
adc
in
(bad)
int3
or
(bad)
sbb
mov
add
mov
pop
pop
push
neg
imul
add
or
cmps
cmp
xchg
(bad)
push
pushf
es
mov
rol
pop
sbb
and
sbb
sti
add
push
lods
adc
or
sub
les
xchg
scas
push
cdq
jne
jno
add
fdiv
mov
out
lods
loopne
and
add
dec
sbb
sahf
mov
jl
mov
sbb
std
sub
or
mov
pop
mov
xor
stos
or
sahf
and
fcomp
jmp
imul
or
test
jge
or
add
add
and
int
in
sub
aam
xor
mov
(bad)
call
lock
ss
nop
scas
out
iret
sbb
jbe
(bad)
cld
rol
pop
xor
in
enter
add
dec
loope
push
rcr
push
push
enter
in
aaa
xchg
xor
xchg
imul
and
adc
xor
inc
push
sub
mov
repz
sti
imul
or
jl
test
mov
add
stos
jbe
aaa
les
cli
cmp
jb
fisub
aas
aam
shl
or
fs
jae
inc
(bad)
jecxz
retf
std
repz
or
fistp
movs
sub
inc
les
xchg
push
push
push
sbb
add
sub
hlt
cs
mov
push
dec
out
in
ins
repnz
dec
mov
(bad)
scas
imul
push
mov
mov
shl
sub
xchg
fs
aaa
outs
sub
test
das
out
xor
fistp
mov
mov
popf
and
jo
lahf
lahf
jo
(bad)
push
ror
jecxz
add
in
loope
dec
imul
faddp
ins
lock
sub
push
xchg
std
add
ins
ins
(bad)
out
loop
cli
sbb
mov
dec
sub
pop
dec
push
rol
addr16
stos
xlat
or
pop
pop
stos
paddusw
push
fdivr
or
scas
aaa
jno
mov
jae
jge
cmp
dec
add
or
inc
cld
out
loope
and
xchg
scas
aam
mov
mov
jno
mov
adc
shl
nop
(bad)
pop
es
or
jge
jnp
call
mov
sbb
dec
out
cmp
or
int
out
les
xchg
adc
sbb
es
ret
retf
xor
cli
(bad)
adc
push
jmp
ret
(bad)
xor
sbb
mov
popf
(bad)
push
push
and
ins
icebp
clc
shr
je
inc
push
push
inc
mov
mov
cmp
jg
mov
or
push
(bad)
sub
add
mul
sar
cli
fsubr
aad
xchg
mov
and
cld
mov
lahf
mov
or
xchg
(bad)
pcmpeqb
pop
cmp
push
fs
push
popf
mov
push
fwait
sbb
fwait
and
mov
push
inc
jns
jbe
js
jo
nop
lahf
jb
pop
cmovbe
test
(bad)
cmp
fimul
jecxz
(bad)
repnz
fdivr
jecxz
pop
shl
retf
(bad)
mov
push
push
rcl
or
in
in
jns
xor
mov
mov
jo
daa
rcr
cdq
jbe
rcr
daa
imul
jmp
ins
inc
xor
dec
mov
mov
or
sahf
cwde
loop
adc
adc
push
(bad)
dec
cmps
shl
js
dec
push
inc
push
(bad)
adc
out
in
arpl
and
out
inc
outs
arpl
bound
aam
xor
pop
mov
mov
in
xlat
sbb
pop
mov
xchg
jecxz
(bad)
ds
sub
jle
ret
push
jle
push
xchg
lea
sbb
retf
and
pop
pop
pop
es
test
out
aaa
iret
mov
mov
mov
fdiv
(bad)
mov
std
ror
inc
sub
movs
cmp
push
sub
fcmovne
scas
inc
scas
retf
mov
test
or
sti
in
xor
or
mov
int3
pop
in
test
add
push
ins
mov
test
xchg
adc
dec
sub
fwait
xchg
shr
mov
in
test
div
and
add
cmp
cmp
mov
pop
fsubr
adc
jecxz
fdiv
movs
sbb
addr16
add
xchg
mov
in
fcom
jo
and
cmc
push
fidiv
mov
mov
adc
inc
out
inc
xor
xor
xchg
sbb
imul
push
and
pop
push
ins
xor
jo
and
out
or
sub
cmp
fdiv
xchg
jmp
xchg
test
add
pushf
pop
jo
xchg
inc
test
xchg
leave
int3
or
std
xor
adc
xor
fs
retf
xor
lods
and
scas
mov
adc
push
xchg
push
sbb
dec
xlat
fistp
movs
loopne
cdq
push
inc
mov
cli
mov
add
pop
shl
data16
frstor
sbb
hlt
adc
gs
vsqrtpd
aad
leave
popf
push
mov
pop
mov
(bad)
xor
jo
cdq
mov
dec
popf
adc
mov
dec
jmp
dec
loope
cmp
add
pusha
add
jle
dec
mov
inc
sbb
lahf
ins
test
neg
push
lock
std
je
adc
jge
fnstcw
sbb
and
xchg
shl
popa
mov
jno
xor
loopne
(bad)
fild
mov
ret
shr
int
ret
or
jmp
xor
push
xchg
cmp
fistp
push
push
xor
dec
pop
sub
push
or
mov
sbb
cmp
cmp
daa
pop
jge
or
cmps
jge
and
iret
xchg
gs
rcl
sbb
pop
jp
ins
mov
js
xor
adc
mov
inc
mov
xor
dec
jp
sub
xchg
aad
iret
inc
fisub
xor
mov
sbb
lea
dec
enter
fst
arpl
xchg
fnstenv
ins
movs
mov
cmc
aas
jb
jbe
retf
pop
jp
sbb
(bad)
shr
mov
rcl
les
data16
(bad)
in
or
push
xor
xchg
clc
inc
in
pop
dec
push
imul
fist
fldenv
mov
sbb
adc
xchg
int
push
(bad)
shl
mov
adc
mov
or
xchg
mov
in
outs
in
push
out
push
div
mov
pop
push
enter
or
and
in
adc
aaa
mov
or
add
pop
jl
cmps
push
push
xor
retf
push
mov
popa
call
sub
dec
inc
mov
jns
sti
loop
out
push
ret
xor
aaa
or
xor
aam
mov
enter
and
jle
dec
retf
and
mov
jg
lods
and
div
fistp
inc
jge
loopne
test
les
add
pop
mov
push
movs
and
sbb
xor
pop
test
push
cwde
push
in
sub
hlt
pop
push
(bad)
(bad)
mov
icebp
or
push
sar
push
ror
push
and
repnz
dec
cmp
iret
push
mov
sub
sbb
mov
inc
lock
fisttp
or
jne
retf
push
mov
leave
repz
shl
aad
rcl
cld
sub
popf
mov
sub
arpl
in
push
jbe
jbe
jnp
cdq
imul
xor
lahf
popa
jb
push
movq
sub
pop
div
jae
cmps
sbb
push
lahf
rcr
jnp
dec
neg
push
push
(bad)
dec
mov
cli
icebp
arpl
mov
adc
push
dec
jp
aam
cmps
fmul
sahf
and
jge
retf
sub
imul
jge
and
shl
fld
mov
loopne
rol
js
fldenv
push
test
ds
repz
mov
and
pushw
outs
sub
loopne
mov
ret
jmp
scas
cld
push
iret
pop
outs
or
fsub
lods
lahf
push
je
push
rol
mov
sub
sub
mov
push
add
adc
push
div
dec
and
mov
dec
test
or
in
adc
cld
jmp
push
mov
jno
mov
push
dec
or
xchg
inc
mov
xor
ins
or
daa
mov
ss
pop
popf
push
in
das
dec
jp
mov
shl
aad
inc
imul
rcl
jne
cmp
pop
or
not
pop
sar
jns
imul
xor
lea
inc
jp
and
dec
add
xor
add
call
adc
(bad)
jg
push
pushf
push
cmp
mov
fcom
pop
add
rcl
pop
mov
jle
pop
stc
fnstenv
dec
retf
scas
aad
int3
int
out
xchg
sbb
repnz
bnd
sub
mov
imul
jl
pop
ret
test
mov
(bad)
push
sbb
(bad)
in
jnp
call
imul
mov
mov
adc
xlat
jp
xchg
fldenv
or
movs
(bad)
int3
add
mov
dec
pop
pusha
dec
ins
call
mov
(bad)
push
(bad)
pop
(bad)
mov
pop
push
sbb
std
ins
xor
cmp
cli
aad
aam
add
mov
xor
imul
jb
mov
pushf
add
xchg
mov
adc
pushf
pop
mov
pop
and
add
or
cs
aaa
jle
mov
lahf
add
mov
cmovg
xor
lahf
stos
mov
mov
pop
retf
daa
jmp
test
jge
call
fcmovbe
pop
popa
(bad)
mov
mov
out
mov
mov
clc
aaa
jb
jae
mov
xor
mov
xchg
repz
iret
out
sahf
pop
mov
xor
lods
popa
loope
aaa
sbb
xor
cmp
repz
inc
sub
adc
adc
dec
retf
adc
sub
cwde
or
mov
mov
clc
xchg
xor
call
call
ret
mov
jnp
push
loopne
repz
push
push
mul
cld
(bad)
pusha
xchg
push
int
and
jne
pop
mov
mov
mov
mov
aam
xor
add
retf
inc
retf
nop
pop
sub
hlt
pop
mov
repz
loop
jo
pushf
(bad)
xor
test
fcmovnu
adc
inc
cs
shl
push
fidiv
jnp
jg
inc
or
cli
loopne
jo
pop
outs
ror
cmp
lods
push
in
and
js
gs
sub
mov
mov
out
pop
mov
push
cmc
ins
push
xchg
ja
dec
or
inc
out
std
pop
jne
mov
dec
call
jecxz
shl
sbb
add
js
adc
cmp
xor
push
inc
cmp
dec
sar
xor
fwait
xchg
es
nop
add
pop
ret
jns
sub
out
out
or
jecxz
sbb
jge
jno
add
cmps
dec
inc
in
in
lock
retf
dec
test
jge
jnp
cmp
fstp
ja
lods
stos
or
sti
fld
mov
mov
pop
mov
movs
fwait
xor
gs
xchg
dec
test
cmps
pop
das
cmp
(bad)
xlat
push
jge
cwde
push
dec
outs
loope
add
mov
push
cmps
test
cmps
or
mov
jns
fnsave
les
push
dec
call
pop
inc
(bad)
fmul
aas
lea
outs
sahf
jge
xor
dec
and
fsubr
daa
sub
xchg
sub
push
or
ret
mov
(bad)
bound
mov
stos
push
lahf
mov
and
adc
cmp
jl
imul
sub
shl
outs
jmp
push
sub
mov
repz
fdiv
mov
popa
push
call
adc
popa
sbb
jo
add
sbb
and
lock
pop
fdiv
aaa
dec
sbb
dec
inc
dec
mov
imul
pusha
cmp
imul
jo
xor
dec
add
call
fdiv
outs
pop
sub
push
mov
shl
mov
cmps
or
shl
fstp
mov
jae
adc
jne
ins
cmp
adc
mov
and
rcr
or
imul
ins
or
jae
pop
dec
stos
(bad)
repz
or
popf
mov
mov
popa
jo
stc
cmp
cmp
and
jp
add
sbb
push
xchg
sub
pop
xchg
shr
push
xor
stos
dec
arpl
add
ficom
fnstcw
xchg
adc
push
mov
mov
daa
jle
ret
movs
cmp
test
mov
adc
inc
(bad)
hlt
push
iret
jecxz
es
xlat
add
mov
push
dec
in
jp
aam
movs
nop
add
sahf
cmp
in
push
ret
jo
cmc
repz
je
nop
sbb
nop
hlt
pop
pusha
or
lock
cld
sahf
cdq
mov
or
xchg
xchg
js
leave
jno
mov
or
cdq
dec
or
push
xchg
mov
fadd
add
out
(bad)
loop
ret
jmp
out
inc
xlat
mov
into
mov
ins
add
lahf
and
cmp
xchg
mov
shr
hlt
pop
ja
sbb
xor
mov
rol
or
add
or
lock
popf
(bad)
cwd
xor
popf
and
out
inc
fild
jmp
repnz
movs
jmp
adc
push
push
inc
inc
mov
sbb
sub
pop
jno
push
cmp
jbe
cmp
inc
and
mov
cmp
xchg
xor
push
leave
xor
das
sbb
jp
lock
cli
cmp
cmp
ds
or
push
adc
add
push
fstp
les
xor
sbb
addr16
js
cmc
(bad)
pop
or
idiv
push
sbb
js
fucom
outs
mov
inc
cld
mov
or
jl
sbb
add
retf
mov
mov
or
add
dec
mov
cmc
mov
pop
inc
dec
and
or
fild
inc
scas
mov
mov
jmp
cmps
ja
sub
into
pop
repz
cmps
cmps
js
inc
repz
inc
aaa
repnz
mov
fsub
mov
jmp
push
mov
jmp
sub
sar
jne
test
arpl
mov
fs
loopne
imul
jge
lahf
jle
divps
cmp
call
enter
ret
(bad)
jge
push
dec
aaa
mov
xor
out
js
test
push
repnz
das
mov
push
repz
jo
sub
lds
pop
jmp
mov
sub
jecxz
dec
or
out
pop
push
jl
xor
push
addr16
sbb
mov
es
adc
cwde
pop
jmp
pop
mov
jo
mov
in
dec
lea
int3
mov
sub
fild
mov
add
add
movs
push
sub
sbb
pop
adc
mov
addr16
mov
out
nop
iret
fstp
lods
dec
lea
xor
shr
data16
out
pop
ret
push
add
(bad)
movs
daa
fsub
mov
xor
mov
push
out
pop
pushf
adc
ins
and
lea
adc
xchg
sbb
jmp
pop
cmp
js
nop
push
push
sub
push
movs
cmp
sbb
rol
mov
jo
mov
cmp
das
rcr
inc
mov
(bad)
in
and
push
xchg
mov
mov
ror
fisttp
sti
sbb
or
(bad)
ss
fist
pop
mov
adc
xchg
add
or
xchg
jle
loop
je
pop
jmp
sbb
les
jmp
imul
and
or
dec
xchg
add
sar
mov
xchg
clc
jb
jae
inc
data16
add
push
sti
inc
sbb
xor
movs
sub
jge
(bad)
retf
jns
(bad)
dec
mov
xchg
mov
test
xchg
cmovns
pop
inc
jae
out
push
int
ds
lahf
in
inc
out
push
stos
xor
or
xlat
imul
add
int
out
push
lea
sbb
retf
std
pop
mov
daa
dec
jp
sub
cdq
xchg
out
push
mov
fstp
lods
jmp
leave
call
ins
jl
shl
iret
bound
fiadd
inc
mov
out
jae
dec
sbb
clc
shl
dec
add
jp
call
or
dec
jbe
mov
mov
xor
cmp
aad
sub
dec
imul
and
loope
push
in
out
jmp
push
js
call
pop
iret
dec
xchg
jb
jecxz
adc
les
stos
lds
mov
pop
pushf
inc
jo
mov
push
mov
dec
scas
xchg
push
add
leave
cmp
xor
jmp
rcr
xor
pushf
pop
mov
dec
jecxz
pop
frstor
mov
stc
scas
test
jbe
jp
inc
jmp
and
mov
fdiv
sub
pop
shl
out
js
sbb
add
and
(bad)
push
dec
and
es
not
dec
dec
mov
movs
in
mov
fmulp
dec
mov
pop
dec
pop
std
mov
bound
shl
xor
fcmovne
imul
aas
sbb
loope
mov
enter
bound
lods
jne
dec
jle
mov
xor
mov
push
mov
test
and
js
out
xor
mov
out
sbb
pop
push
pushf
sbb
xchg
(bad)
xor
test
xchg
cmp
sbb
jno
mov
retf
inc
xor
arpl
ja
in
outs
dec
mov
pop
mov
push
xchg
iret
xor
out
cmp
or
pop
out
push
xchg
out
sbb
fcmovu
into
jg
loop
xchg
dec
call
ds
rcl
fcomp
mov
jmp
push
pop
call
xchg
push
(bad)
jge
fnstcw
nop
clc
sbb
cmp
adc
xor
pusha
xor
adc
fsubr
test
cmp
iret
push
test
push
scas
xchg
jmp
pop
adc
push
rcl
dec
mov
push
fwait
xchg
push
xchg
xchg
fs
mov
mov
cmpxchg
test
stc
out
sahf
lds
adc
adc
mov
arpl
stc
cdq
jno
pushf
ret
jb
sbb
nop
popf
sbb
xor
inc
jae
jne
outs
sub
jbe
push
fst
out
mov
jecxz
daa
inc
xlat
jbe
int
mov
inc
push
test
xchg
xchg
mov
push
fld
inc
mov
mov
leave
idiv
mov
sbb
jle
cmp
inc
ds
jo
dec
xor
test
es
sbb
loope
mov
mov
ror
lahf
ret
ss
pop
cmp
push
or
inc
cld
outs
inc
mov
test
hlt
xor
arpl
enter
mov
rol
xor
retf
lds
mov
add
jb
lds
adc
inc
fwait
jb
inc
and
idiv
shl
mov
mov
cmp
xchg
push
cmps
mov
lods
in
int
stos
pop
ds
aaa
in
dec
enter
cmp
or
sub
fisttp
xor
imul
inc
and
cmps
add
fistp
(bad)
xor
dec
add
js
enter
fiadd
stos
jle
fimul
out
icebp
pmuludq
outs
cmps
loop
dec
push
gs
lock
popa
fiadd
and
cmp
pop
adc
xchg
adc
or
stos
(bad)
ret
rcr
mov
ret
popf
sub
jb
mov
and
xchg
xor
inc
push
movs
xchg
and
lock
and
xor
mov
es
jb
jne
test
das
lods
mov
inc
fisttp
fbld
pop
aam
lock
mov
and
lods
(bad)
fs
xor
les
sbb
imul
ror
imul
jge
sub
lods
cwde
pop
pop
dec
aam
daa
mov
call
clc
xchg
fs
xchg
adc
out
(bad)
push
push
in
jmp
cmp
fnclex
jecxz
adc
mov
test
(bad)
sbb
cmps
icebp
es
jmp
loope
xchg
in
push
pusha
fnstcw
or
aas
push
sbb
dec
or
mov
mov
inc
and
sub
sti
ins
sub
xor
pop
lods
pop
cli
mov
mov
rol
lods
cli
loop
inc
fsubp
add
jl
int3
sub
scas
mov
jne
add
push
mov
test
outs
popf
add
add
cmps
jno
gs
loopne
int
fwait
xor
or
leave
jmp
cmp
xchg
ins
pop
int3
xchg
xchg
out
pop
mov
leave
outs
repnz
mov
ret
pop
imul
sbb
jle
cmc
cmps
pop
jp
movs
mov
call
mov
sub
shr
or
push
push
xor
cmp
cmp
popa
std
imul
xlat
xor
pop
add
rcl
cs
not
enter
lods
push
mov
(bad)
mov
pop
in
shl
mov
in
arpl
or
test
movs
inc
mov
add
pop
push
sti
jnp
ror
xchg
pop
push
ror
xchg
imul
sub
mov
and
ss
push
js
arpl
addr16
test
pop
inc
psubsb
cmc
ds
xchg
hlt
cmps
inc
dec
dec
(bad)
cmp
jno
xor
inc
fistp
cmps
int3
xlat
cs
sti
jge
add
repnz
and
adc
push
sub
enter
into
xor
push
popa
aas
std
bnd
sbb
cmp
adc
pusha
cmp
scas
outs
shr
or
xor
or
inc
outs
mov
pop
push
sbb
cmp
mov
shl
jge
adc
mov
arpl
mov
push
aas
fwait
ret
cmp
in
pop
jmp
push
(bad)
dec
mov
popf
cdq
adc
xchg
cmp
push
in
pop
repz
out
dec
adc
add
leave
ret
push
and
add
xchg
lock
jno
pop
leave
ror
pop
in
pop
(bad)
push
in
xchg
loope
mov
aaa
inc
imul
or
jmp
dec
icebp
sub
mov
sti
adc
mov
push
in
and
push
loop
pop
test
mov
mov
retf
inc
cmp
pop
mov
cmp
dec
leave
xchg
ss
in
je
mov
xor
xchg
jmp
fnsave
xor
in
cmc
push
clc
xchg
add
dec
adc
mov
xor
pop
dec
out
add
rol
dec
mov
cli
fs
pop
(bad)
pusha
aam
in
jmp
or
outs
push
aam
cmc
cmp
mov
mov
out
jnp
fs
dec
dec
sub
sub
mov
scas
out
xor
dec
lods
pusha
loope
xchg
add
inc
int
jbe
(bad)
mov
clc
arpl
xor
les
inc
pop
daa
cmp
mov
dec
add
icebp
xchg
repnz
add
cdq
sub
xchg
mov
add
push
int3
and
inc
adc
xchg
ja
popa
or
push
in
adc
js
movs
rcl
mov
mov
out
std
(bad)
loope
cld
inc
aam
add
jge
push
jno
lods
cmp
sub
imul
xor
dec
or
mov
sar
mov
or
xor
or
lahf
(bad)
outs
adc
out
icebp
mov
lock
in
aaa
adc
cmp
or
add
ins
rol
pop
not
rcl
inc
inc
jbe
inc
test
xor
mov
dec
popf
sub
pop
out
sbb
push
(bad)
int
adc
push
lods
in
sbb
mov
fs
or
push
icebp
cmp
les
mov
inc
ja
lods
xchg
and
clc
and
pop
push
sar
cli
les
sub
and
mov
cmp
xchg
dec
rcr
push
out
xchg
pop
mov
bound
or
add
stos
dec
fisttp
inc
dec
imul
ds
cmps
dec
out
rcr
daa
(bad)
jl
xchg
aas
push
fs
mov
nop
gs
mov
xor
add
xor
xor
push
push
les
jg
test
jl
xor
inc
aam
mul
jecxz
in
push
pop
sbb
(bad)
std
add
leave
(bad)
popf
push
push
inc
pop
mov
jl
(bad)
pop
test
mov
jns
call
sbb
push
les
adc
stc
push
inc
and
jno
push
mov
scas
js
outs
test
dec
mov
pushf
(bad)
fisub
cmp
imul
cld
and
lods
inc
jg
call
les
mov
xor
jg
scas
into
push
mov
cdq
inc
mov
or
shl
pop
push
mov
sbb
scas
sub
lds
shr
ret
aad
adc
orps
xchg
xor
pop
lods
movs
fild
and
sub
push
dec
ret
sbb
aam
inc
les
and
adc
push
inc
or
xchg
mov
test
cmp
dec
and
ins
loope
sbb
cmps
add
xchg
jbe
addr16
push
or
fs
nop
test
mov
mov
div
fst
adc
push
sbb
ror
dec
leave
push
dec
xor
inc
test
cmp
sbb
push
dec
mov
mov
icebp
lea
ds
mov
and
xor
mov
iret
fsubr
(bad)
jmp
dec
mov
pusha
lods
push
and
aas
xchg
cmps
xchg
loop
repnz
ret
add
lds
loopne
and
and
mov
pop
push
outs
ja
jg
jno
xor
jmp
and
test
push
sbb
fwait
jne
inc
cdq
retf
mov
mov
cmps
shl
sti
movs
or
shr
fld
add
cdq
jp
xchg
stos
movlps
movs
pop
jmp
dec
jne
or
xchg
and
cmps
retf
enter
and
jnp
ins
aaa
stos
stos
dec
aam
aam
mov
in
icebp
pop
and
inc
movs
pop
add
or
xlat
cli
ss
cdq
jnp
inc
and
sub
(bad)
and
adc
pop
(bad)
ficomp
lds
mul
cmp
mov
into
xchg
iret
mov
cmps
sub
mov
pop
pop
rcl
pop
frstor
arpl
inc
rcr
pop
bound
loop
and
fdivr
loopne
mov
mov
sub
(bad)
adc
icebp
ret
call
cld
cmp
sti
sub
pop
cmps
jp
outs
int3
inc
adc
shl
dec
mov
xchg
pushf
pop
rep
sub
leave
mov
dec
cwde
dec
bound
into
or
aaa
cdq
inc
pop
in
scas
inc
cmps
xor
rol
adc
sub
jecxz
(bad)
add
add
jecxz
push
loop
dec
push
fld
and
jg
test
pop
push
pushw
mov
mov
adc
pop
cmp
sub
cli
pop
mov
xchg
frstor
adc
aaa
jo
push
dec
int3
call
call
add
ds
inc
mov
push
sbb
adc
sbb
or
leave
(bad)
cmp
xchg
les
inc
test
xor
popf
cmp
scas
(bad)
push
mov
push
lock
sub
cld
jo
ffreep
push
sbb
scas
fxch
jmp
sahf
fdivr
loope
sub
add
mov
pop
dec
stos
jbe
mov
loopne
mov
push
enter
in
je
adc
add
jl
popa
loop
ss
in
ret
out
pushf
js
fbld
loopne
cmp
ss
ja
inc
fidiv
push
push
ss
pop
hlt
test
inc
jmp
push
lock
pop
mov
icebp
fs
or
mov
sahf
arpl
aam
arpl
fadd
cmp
(bad)
scas
aad
movs
stos
pop
ss
mov
shl
sub
fistp
lock
into
into
sbb
sbb
inc
add
jno
inc
adc
aam
test
pushf
loop
inc
mov
push
ret
pop
pop
cmps
(bad)
dec
cmp
xor
cmps
sti
leave
or
adc
inc
dec
jecxz
rcr
aas
rcl
lods
cmps
pop
or
pop
jle
lds
pop
pop
push
adc
dec
call
scas
xchg
jl
pop
fistp
push
inc
add
sar
out
fld
sub
jno
js
jl
mov
fisub
cmp
mov
or
inc
int3
cmp
mov
inc
adc
div
scas
push
adc
(bad)
rcl
and
inc
cli
inc
mov
pop
lock
pop
pop
dec
xchg
mov
jmp
popa
shr
mov
xchg
cmp
mov
lahf
or
and
adc
mov
pop
std
data16
pop
mov
xchg
mov
sub
xchg
and
xchg
std
pop
rcr
ss
repz
xor
scas
dec
jle
push
js
lahf
push
mov
or
jle
iret
sahf
outs
cmp
cdq
aam
in
xor
xor
sbb
cmps
sahf
dec
pop
jge
stc
inc
fcmovnbe
adc
cmps
xchg
fsubr
add
(bad)
mov
hlt
add
ds
pop
out
bound
pop
and
(bad)
add
jmp
add
mov
js
out
jg
arpl
lds
in
sub
es
inc
jl
js
dec
mov
inc
jge
lahf
and
and
ja
adc
(bad)
sub
add
scas
adc
ins
push
or
gs
mov
fwait
div
fst
and
push
loopne
and
jbe
into
frstor
jp
fist
retf
cmp
jb
test
aad
retf
out
inc
jns
sbb
gs
jecxz
mov
fwait
sub
mov
(bad)
xchg
xchg
mov
xchg
add
sub
ds
fstp
(bad)
mov
sar
fld
cli
lds
jbe
sbb
in
mov
fidivr
xchg
push
sbb
movs
retf
pop
jmp
pushf
pusha
jecxz
xor
mov
ret
out
mul
leave
fimul
push
jo
mov
push
and
sbb
inc
mov
enter
out
(bad)
jmp
fisttp
hlt
clc
pop
stos
imul
sar
adc
xor
mov
mov
cmp
sahf
push
mov
sub
popa
lock
repz
sbb
sub
jb
pop
or
and
test
repz
dec
push
jns
jne
mov
sub
jl
outs
mov
(bad)
loopne
call
dec
les
pop
adc
cmp
mov
pop
push
scas
pusha
or
push
popf
cld
inc
dec
rol
stos
fld
test
or
jge
pop
call
inc
ins
test
in
ror
jmp
test
adc
mov
push
xchg
popa
shl
and
jg
adc
mov
in
sub
daa
(bad)
(bad)
(bad)
mov
fdivr
fst
add
xchg
xor
mov
enter
popa
xor
jb
inc
push
sub
pop
mov
in
stos
inc
in
jecxz
push
sbb
inc
cmc
xchg
popf
pushf
out
and
mov
sbb
jns
dec
int
mov
xlat
std
jnp
mov
push
hlt
sbb
imul
aaa
add
cwde
dec
sbb
mov
shr
or
mov
sbb
outs
shr
dec
dec
xor
xchg
pop
xchg
mov
sbb
jnp
mov
pop
das
stos
iret
(bad)
adc
nop
inc
adc
outs
mov
or
popa
imul
inc
and
push
cli
in
mov
sbb
xchg
or
shr
shl
xor
push
stos
add
inc
jg
mov
sbb
lock
test
mov
cli
int
add
inc
pop
or
sub
rol
test
mov
mov
pushw
mov
retf
int
test
pop
pop
pop
inc
cmps
aam
sbb
xchg
cwde
push
aad
and
add
sub
in
fdivr
movs
or
xor
or
xchg
dec
mov
pop
shl
jnp
pop
jle
mov
xchg
fld
push
and
mov
(bad)
nop
movs
nop
xlat
pop
shl
cmc
out
dec
mov
movs
push
int
cmps
add
mov
loopne
pop
mov
cmp
push
and
out
dec
cdq
test
popa
xor
call
mov
push
in
les
ins
xor
xchg
mov
push
loop
movs
fnsave
or
push
jg
pusha
scas
mov
nop
es
stc
repz
dec
test
adc
jg
mov
shl
rcl
icebp
out
xchg
aam
fmul
sub
push
push
bound
xor
dec
icebp
jl
adc
pushf
mov
inc
sti
xor
aad
mov
sbb
add
jge
outs
xor
mov
das
xchg
push
pop
cmp
mov
jmp
dec
sbb
das
sbb
jge
jmp
repz
mov
jmp
xchg
xor
jae
pusha
cmp
lods
ror
cmp
pop
push
pop
into
and
pushf
xor
int
mov
push
mov
js
fadd
adc
out
xchg
ins
jmp
call
data16
mov
nop
scas
or
nop
aad
jbe
cmc
call
inc
shl
push
repnz
repz
mov
mov
cmp
push
repnz
mov
inc
jmp
addr16
mov
hlt
adc
jle
push
jno
cmp
test
test
xor
enter
int3
jmp
fistp
ret
sub
xor
pop
sub
jle
cmp
or
ins
cmove
xor
xchg
and
scas
adc
mov
rcl
mov
sbb
into
arpl
cmps
inc
out
mov
rcl
sti
loop
por
loop
add
ins
or
arpl
repz
inc
les
xchg
icebp
sbb
imul
int3
aas
pop
mov
mov
enter
mov
xchg
dec
xor
inc
in
pop
dec
test
pop
and
xchg
pop
rcr
out
lods
bound
dec
adc
pushf
pop
test
jle
ror
sar
sub
sbb
xchg
mov
sub
ret
push
aam
pop
sub
mov
popa
jae
sub
cmp
outs
retf
push
fistp
mov
lock
push
fidivr
jne
aaa
inc
sbb
or
xor
mov
repnz
dec
ins
pop
cmp
or
and
les
test
sub
jg
lahf
jae
push
and
dec
aaa
clc
mov
jge
ficom
pop
inc
jg
inc
lock
ffree
push
xchg
pop
and
icebp
mov
jnp
sbb
xchg
(bad)
jmp
repz
add
inc
xchg
scas
xchg
or
push
inc
xchg
mov
jns
cmp
cmp
(bad)
fist
add
mov
mov
rol
in
xor
cmc
dec
mov
out
mov
daa
add
cmp
push
xchg
test
dec
jg
sbb
aas
(bad)
pop
jmp
or
jbe
xchg
lds
cmp
call
(bad)
enter
push
es
push
or
ret
or
ds
dec
adc
out
push
(bad)
cmps
mov
scas
adc
fld
sub
adc
add
add
or
xor
cmp
pusha
pop
push
leave
sub
inc
or
retf
int
inc
mov
les
int3
retf
mov
inc
sbb
or
lds
jae
ret
sbb
int3
xor
fistp
mov
sbb
imul
sbb
inc
add
ss
mov
lock
xchg
sbb
adc
int
add
xor
or
pop
dec
call
xor
jle
sbb
aas
push
cdq
mov
push
xor
aad
pop
fsubp
loop
pop
jle
push
jo
in
idiv
inc
scas
mov
daa
cmp
mov
retf
cwde
icebp
ins
push
mov
inc
aaa
fld
jg
mov
mov
imul
inc
popa
adc
adc
mov
adc
enter
push
popa
jb
cmp
fiadd
addr16
cmp
fst
push
out
jno
mov
push
outs
xor
cmps
gs
ror
xchg
mov
das
sub
xchg
(bad)
mov
rcr
ss
ret
or
and
jns
mov
jp
(bad)
mov
lock
stc
test
sub
and
cli
or
fiadd
arpl
xchg
cmp
mov
pop
out
jnp
inc
(bad)
push
mov
jbe
adc
gs
xchg
push
imul
test
neg
test
loopne
out
gs
mov
jg
jp
in
mov
mov
shl
cmp
or
mul
icebp
mov
sbb
sub
clc
mov
or
xor
aaa
mov
jl
push
std
xchg
shr
fsub
test
jecxz
add
mov
fwait
idiv
push
cmp
fist
push
fld
push
and
push
and
xor
pop
inc
or
es
sub
mov
aad
(bad)
adc
inc
jbe
aad
jg
cmps
cli
stos
retf
stos
sub
push
jne
xchg
addr16
out
mov
stos
jns
mov
daa
xchg
dec
retf
es
add
das
push
into
mov
into
sub
mov
in
cld
sahf
mov
xor
(bad)
shl
out
jmp
mov
int3
retf
pop
dec
fnsave
jmp
std
pop
xchg
lods
mov
xchg
jecxz
lds
mov
lods
mov
std
mov
ja
adc
xchg
xchg
push
daa
cmp
xor
sbb
addr16
jns
sbb
fstp
jae
pop
mov
dec
and
dec
test
jge
aad
iret
aaa
mov
in
test
ins
(bad)
(bad)
ja
sbb
mov
mov
xchg
jae
push
(bad)
or
jb
retf
movs
sbb
retf
scas
mov
add
aaa
pop
mov
add
cdq
imul
xor
xor
sar
dec
retf
inc
test
mov
inc
mov
mov
pop
or
mov
adc
mov
repnz
inc
sub
icebp
xchg
aam
call
add
and
clc
retf
das
or
ja
hlt
loope
das
xor
in
jge
sbb
mov
pop
nop
inc
jl
adc
jns
je
add
popa
sub
test
pop
jge
inc
xchg
test
add
push
cmp
cli
mov
in
cs
xor
cli
test
and
lods
add
sub
mov
outs
add
test
test
(bad)
test
dec
mov
into
sti
cmp
inc
mov
ret
pushf
fwait
lods
retf
adc
loopne
(bad)
out
jg
cwde
xor
cmp
sbb
xor
aas
mov
and
cmp
add
push
sti
jge
mov
leave
ja
pop
in
or
pop
icebp
out
loope
sub
int
adc
test
gs
outs
or
clc
mov
enter
mov
les
jb
dec
and
(bad)
fild
mov
cmp
mov
pushf
xchg
stos
push
push
adc
push
cli
fs
inc
lds
lods
iret
in
in
out
dec
mov
mul
jp
aam
addr16
test
test
lock
mov
mov
cmovae
push
paddb
mov
push
in
data16
fmul
sar
fdivr
je
sbb
mov
mov
xor
adc
xor
or
fidiv
int3
adc
mov
push
push
jle
rcr
inc
imul
retf
scas
cmps
sar
pop
fidiv
xchg
aam
add
pop
sub
jb
and
and
movs
popf
in
aaa
cmps
loope
mov
cmc
push
push
cli
pop
jmp
push
out
mov
lods
std
int3
js
inc
xchg
imul
push
popf
cmp
shr
cld
imul
fstp
clc
adc
cwde
out
or
jb
fiadd
aas
or
js
adc
inc
imul
and
jno
add
fisubr
shr
pop
or
lock
cmp
out
pop
lods
xor
fnstsw
push
bound
mov
fsubrp
and
xchg
adc
popa
jp
fwait
shl
push
adc
dec
ror
mov
sub
aam
ja
je
aam
lods
jne
jne
sbb
pop
test
sti
repz
pop
in
(bad)
inc
cmp
adc
fcmove
rcl
fdivr
ret
push
pop
repz
pop
daa
cld
ret
fild
add
inc
sub
aas
pop
rcl
cmp
xchg
mov
add
and
ret
popa
(bad)
mov
xor
ffreep
add
xor
mov
(bad)
cli
mov
pop
adc
test
pop
dec
ret
or
add
pop
ret
das
pop
outs
ficom
addr16
loopne
or
test
mov
mov
mov
pushf
ror
add
jb
fucom
jle
in
pusha
cmc
jl
aaa
mov
cmc
pop
fld
jmp
mov
inc
push
aaa
daa
loopne
add
(bad)
push
ret
dec
imul
dec
mov
js
enter
cmp
das
mov
push
sahf
mov
jmp
push
outs
neg
stos
sub
call
repnz
mov
cwde
test
pop
mov
or
scas
jb
int
scas
xchg
shl
pop
push
aaa
les
imul
out
mov
enter
je
xlat
adc
jl
mov
or
jle
pop
sbb
ds
mov
cmp
inc
mov
jle
pop
into
or
mov
sub
push
cmp
(bad)
imul
jno
push
lock
stc
nop
imul
jmp
shrd
sbb
bound
cmp
inc
push
adc
jne
cmp
idiv
mov
enter
dec
and
repz
repz
loopne
repz
sbb
hlt
int3
dec
add
sub
mov
ins
dec
and
dec
ret
and
std
pop
(bad)
mov
cmp
jno
sbb
aad
call
xchg
fcomp
add
(bad)
leave
es
lahf
pop
jmp
fiadd
les
in
sbb
scas
push
imul
mov
pop
movs
xchg
js
inc
mov
call
out
cmp
hlt
dec
or
sar
dec
xchg
cmp
sar
push
mov
push
addr16
(bad)
popf
push
enter
xchg
or
ds
mov
or
addr16
pop
mov
pop
cli
jmp
sub
xchg
jnp
add
pop
test
xchg
ror
fcom
cmc
xor
sar
nop
add
lock
clc
adc
leave
fld
outs
jl
retf
jle
and
sti
wrmsr
lods
bound
sbb
push
cmc
push
inc
mov
jmp
movs
das
mov
jb
jecxz
sbb
and
jbe
dec
pusha
test
push
push
mov
pop
jno
cmp
mov
retf
shr
cwde
test
outs
or
(bad)
xchg
(bad)
fwait
push
cmps
xchg
repz
xchg
and
adc
and
adc
pop
sub
cld
std
pop
fucomp
lock
xchg
add
mov
sbb
jo
(bad)
repnz
pop
push
int
sbb
dec
add
ins
in
arpl
adc
and
sbb
iret
inc
pop
rcr
adc
outs
xchg
adc
push
pop
cs
icebp
stos
test
dec
pusha
sbb
xchg
call
jmp
call
ror
loop
pop
fidivr
sbb
fcmovnbe
cli
mov
out
adc
addr16
js
(bad)
(bad)
(bad)
loopne
adc
mov
lods
xor
in
idiv
cmps
ja
inc
push
stos
and
and
adc
push
aad
mov
mov
mov
cmps
mov
aaa
stos
jne
xchg
popa
js
sar
cli
int
jne
ins
addr16
loop
pop
std
xchg
xlat
pushf
pop
pop
mov
cwde
daa
xor
pop
and
pop
out
cs
and
or
cwde
neg
neg
aas
sub
loop
stc
and
fwait
lea
xlat
adc
inc
xchg
daa
push
std
xchg
jo
adc
push
stc
mov
xchg
ds
out
or
repz
neg
add
imul
mov
mov
jg
mul
mov
inc
les
xor
inc
scas
scas
mov
adc
mov
cmp
dec
mov
je
mov
jae
mov
jae
jl
into
pop
outs
xor
jo
jbe
div
(bad)
jb
xchg
daa
jmp
or
call
jg
sbb
xchg
mov
sub
cwde
scas
cld
mov
fidiv
fs
jne
pusha
cmp
cmp
pop
lock
dec
jae
sub
xchg
sti
scas
push
pop
imul
adc
int
adc
ds
cld
retf
aas
fcmove
ror
test
jg
gs
int3
sahf
jge
aam
jmp
enter
push
sub
mov
scas
jns
bswap
mov
mov
shr
pop
sbb
retf
fist
add
test
xor
pop
mov
sahf
pop
cs
dec
dec
aam
sub
cli
cli
add
and
into
pop
dec
or
movs
out
cmps
xchg
cdq
mov
div
mov
mov
cmp
jmp
in
fwait
je
nop
mov
xor
sub
push
ja
adc
cmp
push
pop
sahf
jbe
loop
or
inc
mov
cmps
loop
inc
lods
mov
pop
pusha
in
mov
call
fcom
adc
ret
or
iret
fbld
cdq
sbb
ins
or
les
out
aas
mov
pop
xchg
mov
ins
loopne
jns
cwde
sub
in
or
add
leave
into
ins
mov
mov
js
xor
pushf
shl
add
aaa
adc
pop
gs
jge
dec
mov
shl
int3
js
daa
in
cs
and
add
push
jo
or
cmp
mov
jo
mov
mov
inc
test
xor
cwde
cmp
(bad)
icebp
pop
out
xor
add
int3
repz
cmp
pop
bound
mov
pop
add
inc
xchg
dec
mov
jmp
mov
lock
mov
scas
xchg
mov
mov
jb
xor
jmp
mov
mov
and
mov
sbb
clc
outs
and
gs
fidiv
mov
or
pop
loopne
mov
jg
cmp
jge
push
mov
cmp
enter
in
(bad)
sar
cmp
daa
stos
ss
test
aas
pop
dec
leave
pop
mov
jge
into
push
xchg
sbb
inc
sub
mov
mov
xchg
xor
pop
sar
mov
mov
pop
div
lea
xchg
enter
(bad)
and
xor
add
or
push
pop
cmp
stos
push
(bad)
push
sahf
xchg
mov
shr
jb
add
inc
add
shr
or
or
int
scas
adc
(bad)
out
mov
aam
pushf
and
std
inc
enter
out
rol
daa
push
xor
inc
jmp
jne
in
cdq
xor
jne
mov
rol
imul
sub
ins
xchg
repz
push
or
jno
in
ret
ss
adc
movs
mov
daa
sbb
lods
push
add
stc
cli
jmp
xchg
bound
mov
mov
fdiv
lods
rcl
xchg
call
and
inc
addr16
into
sbb
popa
and
pushf
mov
dec
jl
cli
repnz
push
pop
xchg
sbb
test
aaa
add
sub
outs
dec
or
js
mov
outs
ret
mov
push
(bad)
mov
push
cmp
ja
fisub
adc
pop
int3
cwde
ins
or
cmps
mov
cmp
outs
(bad)
test
rol
out
lahf
mov
sub
inc
call
xchg
mov
xchg
movq
cld
cdq
(bad)
dec
int3
idiv
repnz
loope
pop
sub
ret
ins
fdiv
cwde
inc
adc
repz
pop
or
xor
sahf
jl
ja
pop
cmc
pop
cmc
(bad)
adc
retf
inc
fmul
int3
fisubr
cmps
cli
jbe
mov
jo
jl
movs
dec
dec
push
sub
repnz
repz
scas
imul
xchg
mov
lods
mov
pop
mov
add
mov
sub
sbb
or
leave
or
adc
(bad)
shr
inc
mov
retf
test
push
adc
adc
xchg
jo
daa
sub
sbb
push
jb
sbb
aaa
inc
jno
lods
pop
push
adc
push
scas
jbe
je
pop
sbb
idiv
fcomp
sbb
cmp
sbb
sbb
mov
push
mov
or
push
scas
xor
push
fmul
push
mov
scas
mov
xor
je
xor
adc
int
mov
add
xchg
in
mov
jecxz
neg
ss
jno
das
mov
jmp
aaa
lock
xlat
ds
mov
mov
nop
jecxz
dec
popa
jecxz
add
sbb
mov
pusha
or
or
cdq
ss
(bad)
imul
sbb
and
aam
inc
cmp
cmc
(bad)
mov
inc
adc
dec
push
xor
(bad)
sahf
pop
add
dec
pop
scas
sub
mov
mov
mov
fstp
push
mov
xchg
test
adc
stos
repnz
leave
xchg
push
and
in
pushf
(bad)
clc
imul
sub
or
pop
adc
cmps
sbb
stos
add
cmp
push
pop
fmul
cdq
or
fdivr
xchg
or
mov
(bad)
jle
popa
pop
sahf
in
fisttp
push
rol
mov
push
mov
aam
xchg
xor
bswap
aas
add
jecxz
ins
xor
adc
or
inc
js
sbb
sbb
shr
xchg
add
mov
sahf
mov
push
fisttp
jecxz
or
and
shl
jnp
or
mov
sbb
or
(bad)
jnp
push
and
push
xor
daa
rcl
pop
int3
rol
outs
(bad)
mov
es
lods
repnz
xchg
pop
cwde
stos
je
mov
test
jle
lahf
sti
dec
adc
cwde
dec
inc
out
scas
sbb
enter
rol
ins
lods
cwde
mov
inc
xchg
mov
xor
jg
or
mov
mov
cmp
jle
ficomp
xor
pop
loope
test
movs
in
sbb
shl
or
std
and
mov
cmps
cmps
xchg
jmp
xchg
and
jecxz
aaa
mov
pushf
xlat
iret
dec
arpl
pop
sahf
jbe
jl
ins
sbb
das
adc
push
mov
mov
std
loopne
in
dec
ret
pop
lea
and
fwait
scas
inc
jmp
mov
xor
aaa
mul
inc
lods
add
shl
xor
dec
mov
out
sub
jo
cmps
dec
fisub
aad
(bad)
sbb
ss
dec
test
stos
cli
cmps
mov
lea
sbb
mov
mov
jmp
sub
or
xchg
jb
outs
outs
dec
test
int
cmps
jle
sahf
std
mov
aam
jmp
(bad)
pop
lahf
push
cmp
pushf
es
les
sub
js
mov
mov
(bad)
mov
and
sub
push
mov
pop
rcr
int
jnp
push
ins
(bad)
out
mov
dec
mov
stc
popa
mov
mov
or
scas
push
sub
dec
shr
mov
mov
mov
pushf
fldcw
psllw
jnp
jnp
clc
mov
popa
movs
in
adc
int
or
ds
add
stos
mov
or
push
mov
icebp
fst
mov
adc
mov
mov
ins
dec
mov
js
pop
sub
mov
xor
mov
aad
call
dec
mov
lods
pop
ror
and
(bad)
pop
jb
pusha
mov
push
lock
jnp
mov
daa
and
dec
retf
retf
mov
retf
lea
movs
sar
add
dec
xchg
xlat
cmp
pusha
(bad)
push
xchg
in
and
dec
rol
lahf
fwait
inc
inc
aad
enter
aas
jmp
pusha
and
adc
sbb
ds
mov
inc
cwde
add
xor
inc
das
xor
xchg
outs
push
or
cmp
mov
inc
sbb
repz
push
dec
std
sbb
outs
outs
ror
xchg
js
hlt
mov
das
push
push
mov
mov
outs
add
xor
push
add
cmp
call
and
call
inc
dec
xor
retfw
sbb
adc
popa
iret
sub
mov
mov
out
in
pop
dec
adc
inc
add
scas
cmps
fisttp
test
rol
dec
frstor
icebp
pop
mov
xchg
fiadd
les
cli
ds
dec
cwde
icebp
adc
mov
cld
mov
popf
in
std
in
jns
push
jmp
mov
cdq
out
sahf
or
aam
cmp
mov
adc
sub
out
push
fadd
jno
cmp
adc
ins
aam
fsubrp
cmps
ins
shl
in
rcr
push
movd
jle
in
ret
jp
stos
xor
sub
lods
push
and
ins
sar
jecxz
inc
mov
dec
fbld
out
nop
and
(bad)
or
inc
adc
dec
or
mov
push
pop
fbld
fist
sub
repnz
fist
push
mov
frstor
out
cmc
ss
and
movs
cmp
ins
repnz
shl
inc
jmp
shr
mov
cli
inc
pusha
push
gs
mov
lock
(bad)
sub
lods
or
fisubr
clc
mov
icebp
mov
test
xchg
xlat
or
cmc
outs
sbb
xor
push
mov
or
mov
pop
lea
std
test
fmul
sbb
inc
inc
mov
dec
inc
dec
pop
ins
sub
push
dec
or
mov
in
push
inc
cs
in
jl
push
or
movs
daa
sbb
jbe
loopne
mov
pop
adc
ins
jle
xlat
test
enter
icebp
popf
ret
xor
push
cmps
cmp
stos
pop
jae
jb
pop
dec
vunpcklpd
ins
fbld
adc
adc
std
mov
inc
arpl
push
mov
or
ja
or
out
dec
in
sub
push
shl
(bad)
adc
enter
mov
lds
mov
mov
clc
adc
in
fistp
iret
nop
adc
pop
mov
imul
pop
scas
sub
jne
arpl
adc
leave
lahf
inc
sar
ror
(bad)
popa
sbb
jns
icebp
and
mov
jl
inc
xchg
xchg
cdq
ffree
repz
icebp
mov
add
rcl
mov
or
add
shl
jo
mov
xor
jo
add
movs
loope
xor
adc
mov
sub
xor
or
mov
xor
add
mov
or
xchg
loop
out
push
jbe
mov
dec
jno
jecxz
cmp
push
fild
add
mov
(bad)
mov
addr16
dec
sbb
pusha
mov
sub
scas
lock
clc
mov
mul
push
lahf
jp
adc
and
jge
cmp
pusha
add
mov
test
rcl
push
add
call
fwait
jg
pop
pop
lock
arpl
test
or
sbb
ret
push
not
inc
call
daa
cmp
mov
stc
mov
pop
jb
fs
dec
mov
push
mov
das
shl
loope
repnz
outs
inc
mov
loope
push
jbe
adc
adc
adc
cmovns
sbb
inc
dec
call
inc
das
cmp
add
or
ins
xchg
mov
sbb
movs
pop
push
das
and
xor
push
xchg
out
cmps
cmp
dec
fldenv
cwde
out
(bad)
ss
push
outs
cmp
mov
add
shr
dec
dec
imul
add
test
inc
jmp
add
stc
iret
cdq
adc
lods
xor
lods
stos
sbb
arpl
out
inc
lahf
mov
pop
pusha
and
adc
mov
cs
xchg
cmp
pop
outs
mov
dec
hlt
aam
cdq
(bad)
lock
lahf
fs
dec
push
push
test
shl
mov
mov
fwait
xchg
xor
in
and
cmp
dec
pusha
add
xchg
mov
iret
xchg
outs
sbb
mov
inc
test
(bad)
inc
pop
push
rcr
xchg
sbb
imul
add
pop
jbe
fdiv
ficomp
int
jle
(bad)
ins
inc
std
push
outs
lock
cmp
adc
push
push
hlt
popa
push
dec
xor
push
push
test
les
adc
jnp
pop
add
aam
sbb
xchg
push
cmc
sbb
xor
movs
jno
cmps
in
mov
mov
push
sub
and
clc
in
mov
scas
mov
xor
out
sbb
enter
sahf
or
mov
(bad)
in
addr16
sub
cdq
lods
std
(bad)
je
push
leave
cmc
in
dec
cmps
icebp
adc
call
pushf
xor
xchg
pop
inc
mul
mov
cdq
pop
daa
jmp
pop
dec
enter
gs
push
das
out
jae
ds
lods
fld
repz
fsubr
fistp
push
and
in
cmp
shl
leave
sub
xor
mov
inc
xchg
lock
pop
mov
sbb
and
pop
inc
xor
stc
ins
or
mov
sbb
jp
mov
ds
ss
push
sub
add
cmc
sahf
xchg
test
imul
mov
push
out
mov
ret
imul
(bad)
inc
mov
xchg
jo
adc
jecxz
xchg
daa
add
cmp
pop
(bad)
les
sbb
outs
es
cmp
aad
rcr
cmp
shl
(bad)
daa
pusha
jne
scas
inc
rol
shl
idiv
test
jbe
xor
or
popf
mov
mov
dec
or
mov
mov
sbb
retf
shr
jecxz
jns
jmp
pusha
sbb
int3
dec
rol
mov
mov
inc
mov
cmp
fild
adc
sbb
leave
sti
adc
retf
nop
aas
mov
jge
lahf
outs
dec
dec
icebp
aaa
xchg
mov
outs
mov
lods
ret
in
add
dec
mov
adc
adc
stos
ins
mov
vcvtpd2ps
mov
xlat
mov
ins
leave
ds
mov
mov
lods
xor
out
dec
mov
or
ret
cld
leave
out
fstp
movs
xchg
fadd
add
outs
push
jns
movs
adc
jp
dec
out
test
(bad)
stc
or
test
in
add
retf
ins
and
int
mov
mov
jecxz
xchg
push
movs
cmp
or
int3
stos
test
jae
push
dec
push
mov
adc
jle
mov
mov
cmp
and
or
dec
loop
or
pop
movs
sti
adc
es
cs
inc
js
add
fdiv
lahf
jge
mov
in
stc
jg
push
(bad)
fbld
js
cmps
popf
or
push
imul
sub
sub
nop
ror
add
popf
push
mov
sbb
nop
inc
std
into
fstp
mov
scas
aad
push
pop
clc
push
cld
cmc
sahf
cmp
hlt
adc
nop
inc
out
fwait
shl
mov
mov
(bad)
xchg
out
xchg
sti
pop
adc
fnstcw
mov
fisub
in
cmp
jae
shr
cmp
fbstp
subps
jl
or
push
sub
imul
push
mov
stos
in
or
xchg
and
sbb
dec
pop
shl
and
xor
inc
pop
daa
mov
(bad)
adc
jle
mov
les
or
add
mul
pop
aam
lea
clc
mov
inc
pop
test
in
push
push
sub
pop
add
leave
cmp
xor
push
add
retf
mov
sahf
shl
dec
dec
adc
int
mov
ret
jne
fs
cmp
or
sti
test
mov
mov
cld
ins
stos
xchg
out
psubsw
ins
stc
aas
dec
sar
mov
aam
(bad)
jle
hlt
xchg
add
sub
clc
push
mov
and
imul
xchg
popa
sar
or
dec
add
xchg
jmp
test
fwait
call
add
sar
cs
leave
lods
(bad)
iret
nop
mov
sub
sub
pop
push
sbb
xchg
pop
outs
cmc
test
imul
call
and
(bad)
es
out
test
push
xchg
add
sub
pop
push
leave
js
call
ds
cmp
stc
mov
jno
repz
inc
add
pop
sbb
mov
out
sbb
gs
dec
push
fadd
pop
dec
lods
scas
aad
cmp
jl
cmp
lahf
(bad)
sub
inc
lds
xor
daa
stos
lods
jbe
mov
jl
dec
imul
in
mov
sti
aad
popa
mov
add
(bad)
cmp
sub
inc
add
adc
dec
cdq
rol
add
pop
in
pop
movs
imul
mov
xchg
retf
sbb
scas
sahf
stos
icebp
jae
xor
add
sbb
dec
add
mov
add
add
mov
in
dec
sti
retf
jmp
stos
int3
xlat
jno
add
adc
push
loopne
adc
sbb
cmps
ret
xchg
ins
test
aaa
jns
rcl
push
mov
imul
mov
dec
out
mov
and
nop
lds
es
inc
jmp
popf
push
sbb
jno
(bad)
repz
pop
ins
cdq
sub
stos
pop
dec
in
dec
xor
adc
dec
jo
fsubr
dec
push
mov
repz
jae
adc
stos
fmul
mov
sub
iret
cmp
ret
bnd
adc
idiv
ficomp
in
div
xlat
pop
lea
xchg
jnp
sbb
mov
jg
sub
js
mov
jmp
mov
(bad)
jp
enter
repnz
jle
mov
fwait
(bad)
pop
inc
and
inc
inc
outs
rcr
pop
(bad)
cmp
sub
(bad)
ficomp
sbb
xor
adc
and
mov
das
mov
scas
adc
jmp
out
test
mov
leave
jg
pushf
loop
(bad)
imul
sub
inc
mov
imul
fiadd
pop
sar
inc
or
adc
(bad)
cmc
cmp
sbb
cmps
test
add
call
cli
ret
add
ins
push
mov
fsubr
bswap
and
mov
dec
add
pop
(bad)
mov
xchg
mov
xchg
push
std
cmc
enter
loop
aad
xchg
retf
daa
pop
cld
daa
push
jl
sub
mov
adc
loope
push
xchg
data16
mov
bound
push
pop
loope
div
int3
push
cld
xchg
shl
fistp
xor
fcmovnbe
(bad)
sbb
dec
mov
or
push
and
popf
repz
mov
or
test
inc
out
out
call
mov
sub
adc
sub
sub
sub
mov
pop
pusha
add
sbb
scas
scas
dec
fsubr
pop
push
mov
or
add
jae
bound
push
test
mov
mov
sbb
sbb
rcr
lds
lock
inc
pop
fild
cmps
pop
aas
inc
push
pushf
xchg
xor
loop
adc
aaa
arpl
push
inc
add
daa
or
lock
loope
sbb
cmp
dec
add
out
das
cs
movs
dec
aaa
lods
lds
pop
fcom
pop
xchg
push
pop
inc
out
add
mov
rcl
cs
dec
sbb
test
jae
cs
out
sub
jnp
inc
gs
cmp
jg
dec
ficom
aad
cs
and
enter
jmp
dec
aas
push
cmp
jle
daa
jno
xchg
mov
ret
xchg
sbb
jmp
mov
int3
fld
ds
loope
scas
imul
das
in
and
mov
dec
inc
xchg
aaa
adc
lock
ins
fsub
cdq
fs
dec
fisub
pushf
adc
rcr
mov
daa
adc
rep
xchg
fdivr
ins
lods
inc
jecxz
add
pushf
mov
not
scas
mov
rcr
inc
in
xchg
mov
dec
xchg
and
push
repz
fsub
in
aam
scas
pushf
push
sub
xchg
test
jne
xor
stos
fist
call
xor
and
mov
inc
call
xor
movs
sbb
test
or
fstp
sbb
sub
popf
inc
cmps
dec
push
cmp
xor
outs
inc
push
fldcw
dec
mov
call
mov
std
out
mov
mov
scas
inc
leave
bound
fcom
cmp
inc
or
(bad)
pop
mov
stos
jnp
jmp
jae
in
pushf
jbe
jno
inc
shl
data16
mov
iret
mov
push
mov
adc
sbb
push
mov
shl
imul
imul
xor
stc
scas
dec
pop
sub
in
leave
dec
cmps
xchg
mov
lock
add
pop
lds
out
pop
movs
push
mov
leave
push
mov
push
cmovb
test
mov
cld
cmp
dec
jmp
and
iret
cmp
mov
fbld
cwde
mov
fstp
mov
imul
cli
add
cmps
dec
inc
add
add
cli
lahf
sub
jnp
and
jae
pop
test
ins
cwde
sbb
js
mov
mov
or
jae
mov
push
inc
in
xor
outs
sub
popf
mov
mov
jae
xor
iret
cmp
shl
cmc
loop
and
push
rol
mov
dec
push
cmp
mov
pop
jo
sub
or
inc
std
int3
and
inc
mov
xchg
cmp
call
call
mov
das
or
add
or
pop
jmp
data16
adc
pushf
cs
push
add
sub
div
dec
push
xchg
and
inc
mov
movs
jp
loop
scas
push
fwait
lods
fcomp
cmps
jecxz
out
xchg
pop
adc
cld
mov
xchg
test
ins
pop
inc
stc
das
imul
inc
leave
cmp
stos
add
xchg
xor
mov
in
push
fsubr
and
or
or
add
test
dec
ret
sbb
xor
push
popa
pop
test
and
dec
push
add
stos
and
das
hlt
sub
mov
in
xor
mov
mov
shl
repnz
xchg
fnstenv
mov
adc
icebp
jg
xchg
stos
lds
loopne
sub
ds
dec
mov
jnp
xor
out
sbb
cdq
test
xor
popa
cs
and
mov
jno
aam
add
push
dec
lahf
sub
cmp
retf
add
inc
aaa
dec
pusha
popa
xor
cmp
and
xor
push
not
(bad)
retf
hlt
push
loopne
or
adc
jl
retf
test
jle
dec
sbb
push
pop
nop
mov
and
call
and
fwait
out
xor
fucomi
outs
int3
dec
mov
xchg
call
lods
or
test
jns
cmp
mov
push
cmp
rcl
mov
imul
and
daa
aaa
imul
cwde
xor
jmp
in
xchg
aad
mov
dec
jp
sbb
jecxz
xor
push
or
or
adc
push
cmp
or
cmps
pop
scas
mov
rcr
mov
xchg
cmp
in
pop
or
mov
jo
fiadd
shr
xchg
sbb
push
cmp
add
mov
mov
(bad)
int3
fs
(bad)
or
mov
mov
adc
lds
into
pop
sub
shl
xchg
push
lods
mov
mov
cmps
push
add
rcl
dec
retf
jo
iret
add
mov
popf
mov
lods
mov
xlat
je
jno
mov
push
lahf
sbb
stos
dec
pop
xor
lods
add
(bad)
jecxz
ins
mov
cmp
call
xchg
loopne
cdq
fdivr
retf
and
call
and
into
sub
mov
and
subps
mov
push
(bad)
xchg
inc
sbb
inc
jmp
adc
xchg
gs
ret
mov
imul
test
stos
test
sub
mov
iret
movs
inc
add
pop
out
fcom
mov
ins
pop
pop
mov
mov
aas
loope
loope
ret
jmp
das
push
retf
cmp
cmps
xor
ret
mov
push
(bad)
call
call
not
nop
out
jnp
cmp
mov
inc
or
xchg
mov
scas
retf
mov
jae
out
push
cmp
mov
in
mov
in
xor
stos
inc
xor
popf
mov
cs
lea
mov
(bad)
les
jmp
iret
adc
hlt
inc
cwde
jno
cwde
stos
ficom
leave
sbb
sub
xor
push
fisub
scas
cmp
popa
mov
mov
jb
xchg
push
stos
add
lea
mov
mov
gs
aaa
and
cmps
xchg
out
add
fst
jecxz
ret
push
mov
mov
cmp
cwde
and
test
add
out
xor
sbb
ror
and
in
ins
dec
mov
std
pushf
push
and
push
cmp
addr16
fcmovbe
push
jg
xor
aas
(bad)
jecxz
cld
cmps
push
out
stos
mov
jl
xlat
pop
repnz
xchg
dec
in
movs
dec
mov
sbb
ret
in
inc
sahf
mov
fbstp
retf
push
das
arpl
fcomp
and
push
(bad)
mov
lea
pop
xor
mov
or
lods
add
and
cmp
dec
in
(bad)
cmp
out
cmc
push
test
xchg
nop
xchg
xor
xchg
xchg
movs
xchg
xor
and
mov
jne
lods
and
and
dec
mov
adc
adc
mov
mov
adc
movs
retf
std
mov
jge
add
jge
mov
xor
mov
fcmovne
xlat
or
cmp
cmp
stos
xor
or
sti
add
push
clc
sahf
lds
ror
je
test
in
sbb
adc
ja
cmp
and
pcmpgtb
push
out
adc
lods
sbb
in
out
ins
nop
aaa
aad
cmp
out
ss
outs
das
nop
movs
enter
sub
xchg
jecxz
or
xchg
mov
dec
cmp
retf
sbb
push
cmp
mov
scas
cld
test
retf
ret
mov
pop
ror
int3
clc
ins
repnz
cmc
dec
pop
push
cmp
popf
leave
mov
dec
sbb
xor
call
leave
fimul
lods
adc
mov
stos
jmp
and
sbb
xchg
das
cmp
(bad)
dec
bound
pop
hlt
out
fdiv
fsubr
dec
inc
push
int3
mov
dec
test
push
aad
rol
mov
pmullw
mov
mov
iret
enter
push
add
int
ja
in
test
dec
shl
xor
sub
mov
sub
out
jae
dec
pop
ja
push
pop
loop
(bad)
add
ror
fst
retf
ror
xlat
xor
imul
fs
adc
inc
mov
je
pop
mov
call
jle
fisttp
inc
mov
cwde
movs
xor
and
sbb
sub
xor
push
push
jbe
mov
inc
or
fdivr
jnp
data16
jns
retf
or
fnsave
shl
add
adc
cs
mov
push
loope
out
add
mov
push
push
iret
(bad)
out
mov
jl
stos
movs
cdq
lahf
mov
(bad)
(bad)
aaa
imul
add
jp
cmp
repz
jae
jl
mov
jo
pop
ja
fild
loope
hlt
stos
mov
mov
cmp
iret
test
cli
iret
inc
add
icebp
sub
or
fs
sbb
jge
lods
and
ins
push
pop
mov
jmp
dec
add
imul
and
dec
movs
sub
lds
dec
(bad)
jo
hlt
movs
mov
sub
cmp
sbb
aam
mov
rep
dec
adc
je
sbb
sahf
dec
sar
mov
mov
(bad)
mov
add
jno
cmc
sub
popf
leave
nop
xlat
(bad)
dec
daa
adc
int3
jae
inc
mov
or
inc
jo
mov
int
je
xlat
xchg
xor
(bad)
push
xor
stos
xchg
sub
in
jg
mov
scas
xchg
xchg
and
int
jbe
pminsw
stc
and
leave
pop
cdq
xchg
and
push
jno
or
lea
scas
std
or
iret
dec
imul
and
cmp
mov
mov
stos
add
sbb
mov
dec
adc
ret
repnz
fld
sbb
or
add
add
lea
fs
cwde
pop
mov
pop
pushf
fisttp
je
movs
sub
out
(bad)
jno
arpl
and
mov
(bad)
in
pop
and
(bad)
lods
cmc
scas
cmp
sub
sbb
jp
or
mov
popa
daa
addr16
cmp
lea
adc
repnz
sub
call
clc
push
pop
xor
hlt
mov
mov
mov
xchg
enter
loope
or
inc
or
push
movs
daa
and
mov
xor
jne
jmp
sahf
pop
add
xchg
std
fcmove
jbe
in
cmc
stos
xchg
adc
push
jnp
les
ror
pop
pcmpeqd
scas
stos
mov
(bad)
mov
pusha
cli
cli
mov
pop
movs
ror
push
pop
not
pop
dec
sbb
jmp
in
aaa
jmp
push
sub
cwde
add
daa
shl
sahf
lods
sub
js
jmp
jle
int
pop
repz
jecxz
cli
or
iret
adc
ins
ds
sbb
cwde
retf
loopne
mov
sbb
cs
jp
sbb
mov
popf
call
cmp
push
inc
push
icebp
or
mov
cmps
test
out
push
leave
add
sbb
cmps
xor
push
jecxz
jo
push
cmps
test
ffreep
ret
and
mov
imul
xchg
mov
cmp
pop
mov
dec
pop
mov
mov
push
cmc
sbb
mov
call
sti
or
mov
jmp
retf
xor
pop
and
xchg
aam
ret
test
sub
jb
daa
daa
not
xor
ret
daa
inc
xchg
call
dec
or
outs
dec
adc
and
jo
(bad)
lahf
cs
adc
mov
push
xlat
sub
jl
add
mov
hlt
out
dec
outs
iret
dec
aaa
iret
retf
xchg
out
push
aaa
loop
inc
aad
jmp
pusha
mov
inc
rol
cmp
push
fst
add
cmp
add
scas
je
pop
pop
jo
and
inc
jp
test
clc
cmc
ficomp
pop
ja
(bad)
call
cmc
rol
dec
sbb
jo
xor
pop
xchg
daa
jns
push
in
inc
xchg
ret
test
push
js
addr16
jmp
in
shr
out
scas
dec
int
js
xchg
scas
mov
es
adc
xchg
stos
(bad)
pop
test
push
sub
sub
hlt
out
aas
popa
pop
repz
sar
out
cmp
and
xchg
ins
dec
xchg
pusha
mov
dec
add
inc
aam
dec
or
jle
push
mov
in
ins
cmp
mov
dec
je
push
mov
(bad)
fstp
and
ret
out
hlt
jns
sbb
aad
xor
cli
sbb
sub
sub
rcl
test
mov
cmps
mov
inc
pusha
dec
xchg
popf
cmp
fwait
in
push
and
loope
(bad)
aas
test
xor
push
jb
out
mov
and
inc
iret
and
(bad)
test
pushf
push
mov
or
cwde
mov
jae
inc
cmps
jp
mov
leave
mov
fidivr
dec
popa
movs
int
jns
pop
sar
xchg
outs
popa
aam
test
popa
cwde
cwde
and
(bad)
dec
jp
and
in
xor
cld
xor
lds
push
iret
xor
fdivr
mov
loope
adc
scas
mov
lea
push
hlt
pusha
outs
mov
push
inc
push
cmp
dec
fidivr
jp
fstp
cmp
pushf
std
sbb
adc
ins
(bad)
xchg
in
xchg
pushf
or
dec
pop
and
jl
lock
xchg
pop
(bad)
jne
xchg
adc
in
in
or
lea
ss
push
aad
xchg
cmp
jno
test
and
sub
pushf
(bad)
sbb
cdq
and
jmp
jns
ins
mov
mov
in
fmul
fcmovbe
sbb
je
jno
jmp
dec
cmps
lock
repz
jno
rol
xchg
hlt
push
dec
cwde
jge
mov
jb
stos
or
push
sub
data16
adc
nop
ins
das
mov
pop
sub
pop
fidiv
cmp
cli
pop
jnp
jne
ins
ror
adc
jno
and
aad
jne
mov
sub
cmp
fwait
or
shr
fwait
div
mov
jne
sbb
and
push
sub
xor
inc
clc
jae
jmp
or
es
ins
jns
stc
jmp
jo
lds
nop
mov
outs
and
xchg
sbb
add
mov
xchg
aad
call
out
cmp
cmp
mov
mov
jmp
dec
and
cs
ss
ds
mov
imul
cmp
sub
lock
add
test
sub
inc
cmp
jmp
jmp
sub
xor
sub
lock
in
push
xor
mov
popa
or
cli
aad
pop
out
stos
mov
cmp
and
fiadd
sub
push
xlat
jle
stos
into
sub
jnp
mov
sbb
addr16
rol
pop
adc
retf
outs
imul
lods
iret
popa
inc
stos
lea
pop
sti
lock
ja
mov
jg
xchg
fld
sbb
mov
mov
movs
cmps
mov
retf
fcomp
cld
popa
loopne
aas
sub
ret
retf
pop
out
ja
jae
test
mov
mov
mov
shr
scas
mov
sub
push
adc
test
jge
mov
loop
test
rol
daa
sub
(bad)
sub
xchg
dec
(bad)
test
(bad)
retf
pop
add
adc
lea
in
xor
je
in
into
sti
push
daa
push
xchg
push
adc
pop
cmp
loope
rol
sub
retf
xchg
jge
out
outs
aam
stos
(bad)
pop
(bad)
mov
fwait
push
mov
pop
mul
sbb
pop
add
paddb
(bad)
jmp
push
lea
vmovdqu
mov
fsubr
jb
ret
outs
test
xor
add
ins
pop
push
aaa
xor
pop
adc
push
sub
sub
and
mov
cmc
xchg
sbb
dec
cmp
push
xchg
adc
add
(bad)
inc
sbb
sar
mov
fs
cld
mov
pop
movs
sub
int3
lds
stos
lods
pop
cmps
inc
lahf
out
mov
sub
(bad)
cmp
loopne
sub
loope
pop
into
iret
sbb
sbb
sbb
inc
adc
sub
bnd
dec
push
and
sub
pop
fincstp
jne
js
imul
jmp
leave
add
mov
sub
xor
clc
xchg
mov
sti
mov
jae
enter
jb
(bad)
dec
jnp
mov
out
(bad)
cmp
addr16
rcr
push
hlt
in
pop
pop
and
mov
sbb
ja
nop
or
test
jne
sub
adc
jg
addr16
ficom
jmp
ins
movs
addr16
jae
idiv
js
mov
aas
(bad)
jno
xor
jg
xlat
or
mov
popa
cmp
outs
das
push
bound
cdq
arpl
jmp
aaa
sub
(bad)
adc
or
lock
push
test
fisub
fcmove
(bad)
jnp
or
inc
cmp
mov
cmp
test
inc
aaa
mov
inc
(bad)
sbb
xor
mov
cli
addr16
pop
fwait
icebp
fst
iret
push
pop
dec
push
stos
push
xlat
fnstenv
jl
push
hlt
sub
ja
aas
push
test
jo
push
sub
imul
call
inc
sub
cmps
retf
(bad)
in
clc
mov
(bad)
retf
pop
enter
imul
push
sub
daa
in
add
and
mov
xchg
mov
pop
mov
mov
bound
dec
xchg
sub
test
sahf
push
sti
add
aaa
or
out
stos
(bad)
sbb
adc
xchg
sub
cmps
ja
xchg
mov
xchg
call
jns
sar
or
leave
push
fs
test
dec
pusha
neg
sahf
jb
mov
gs
or
cli
es
jnp
push
jmp
xchg
xchg
xchg
inc
xor
pop
sub
cmp
nop
pop
je
ret
jno
clc
mov
cmp
push
mov
js
xchg
ror
pop
cmp
xlat
pop
jmp
xchg
xor
(bad)
or
outs
cdq
cwde
and
xor
int3
out
std
jnp
popa
jb
pop
sub
pushf
and
dec
scas
lahf
repnz
or
cmc
or
repz
push
inc
loop
pushf
cmp
cmp
mov
es
fucomi
xchg
test
outs
in
ds
jmp
adc
(bad)
arpl
mov
mov
ret
out
sub
cmp
or
sbb
mov
mov
add
jmp
jecxz
int3
xor
(bad)
push
xchg
icebp
cmp
dec
adc
adc
adc
mov
dec
mov
(bad)
shr
jo
lds
or
fucomp
xchg
inc
sub
jmp
xor
outs
push
cmps
test
xchg
adc
mov
pop
push
mov
jp
std
das
fld
adc
ret
mov
xchg
data16
pop
xchg
xchg
(bad)
(bad)
pop
jne
jmp
cdq
pop
xor
mov
test
pop
retf
ficom
fld
ins
sbb
and
push
push
push
sbb
movs
inc
mov
cdq
pop
mov
in
clc
ret
xor
sub
xchg
lea
imul
xor
add
jge
faddp
es
push
fwait
sub
aam
enter
push
ds
sbb
inc
jo
sbb
adc
fldcw
push
xchg
jne
and
cmc
inc
in
ficom
pop
xor
lea
and
dec
pusha
dec
in
cmc
mov
fucom
pop
out
xor
mov
dec
nop
mov
push
xchg
std
stos
push
fidiv
sbb
add
pop
sbb
test
stc
cld
ret
pop
frstor
cs
mov
pop
cdq
call
iret
xchg
push
stos
xor
and
mov
pop
push
xor
add
push
xchg
shr
mov
cmc
adc
cmp
pop
adc
sub
cli
push
push
outs
lock
mov
fwait
clc
leave
inc
(bad)
cmp
out
add
inc
dec
push
adc
hlt
sbb
xchg
icebp
mov
ret
ins
shl
pop
xor
sub
push
test
dec
jnp
stos
sbb
or
rcl
xchg
fcmove
aam
xor
div
xchg
pushf
inc
vrsqrtps
cmps
cmp
push
adc
lock
xor
pusha
jg
outs
lock
ret
xchg
je
scas
dec
add
mov
cmp
or
jmp
loopne
ds
mov
hlt
push
daa
and
sbb
fstp
and
sahf
fwait
pusha
std
pop
jle
pop
cwde
sbb
mov
mov
jg
addr16
push
jns
xchg
cmps
inc
jge
or
mov
jp
sub
or
fnstsw
cmp
pop
and
fidiv
and
mov
inc
push
inc
in
sbb
or
cmps
les
js
fucom
and
(bad)
xor
push
sbb
cmp
fs
sub
mov
mov
ret
cmp
jmp
popf
push
outs
mov
mov
and
xchg
lds
adc
xor
popa
(bad)
stos
or
(bad)
mov
xchg
nop
(bad)
ror
shr
pop
jno
pop
push
xor
inc
sbb
pop
dec
inc
mov
push
sbb
repnz
lahf
mov
(bad)
(bad)
into
mov
dec
mov
push
mov
ror
sub
fnstenv
pop
and
mov
jns
and
cmp
jns
imul
bound
push
aaa
ss
cmp
bound
mov
aas
(bad)
aas
rdmsr
arpl
bound
test
adc
das
sbb
inc
push
js
(bad)
ficom
jl
std
dec
add
mov
repnz
cmc
mov
rcl
add
fbld
push
stos
cld
call
js
repz
fbld
inc
pop
shl
dec
push
adc
jae
jp
popf
call
sub
ins
mov
sub
cli
mov
loope
mov
inc
je
cli
out
mov
mov
das
sbb
pop
dec
or
dec
fwait
inc
dec
sub
fucom
imul
adc
sub
scas
inc
mov
movs
sbb
mov
aas
lds
(bad)
ffreep
mov
mov
push
rcl
loopne
push
lock
push
call
out
push
add
jbe
push
inc
test
cmp
fbstp
ds
dec
jmp
lea
cmc
fld
cmp
or
mov
push
cmp
popa
inc
pushf
inc
or
or
pusha
xchg
lahf
dec
stos
stos
icebp
mov
cld
inc
rcr
mov
enter
mov
push
adc
mov
cld
outs
dec
loopne
adc
or
sbb
ins
jbe
(bad)
out
and
adc
push
dec
cmp
pop
or
mov
or
gs
mov
(bad)
std
ret
dec
sub
jl
cwde
or
icebp
add
sub
aaa
retf
pusha
loope
cli
(bad)
cmp
loop
fistp
mov
cmp
and
and
jmp
inc
rcpps
and
cmp
sub
push
int
fnstcw
or
scas
mov
aad
sub
(bad)
cmc
xchg
mov
sti
or
sub
or
add
fbld
dec
sbb
mov
mov
call
imul
lahf
(bad)
jnp
clc
out
scas
and
popf
push
daa
aad
sbb
jg
jp
(bad)
jae
test
xchg
popf
shr
pop
fnstenv
in
sbb
lds
jno
pop
jb
enter
dec
repz
nop
jbe
cmp
pop
lods
fldenv
gs
sub
mov
push
movs
mov
or
dec
mov
cld
mov
push
mov
adc
mov
loopne
push
xchg
cmp
pusha
cmps
sub
popf
dec
mov
sub
inc
icebp
mov
sahf
xchg
xchg
int3
sahf
xlat
xchg
ja
or
jns
mov
cmp
push
(bad)
xchg
cli
jle
fidivr
adc
jno
dec
fcomp
aaa
mov
jmp
and
inc
push
mov
pop
push
(bad)
jp
in
(bad)
jae
inc
sbb
loop
add
pop
pushf
in
aaa
fld
call
sbb
cmps
sub
in
adc
mov
dec
add
inc
dec
stc
and
mov
cmp
je
aam
je
inc
jp
pop
in
mov
sahf
test
fucomi
shl
mov
mov
inc
xchg
push
pushf
outs
jecxz
inc
pop
or
int3
repz
push
push
dec
repnz
sbb
das
jle
nop
sbb
push
inc
fsubr
mov
sub
inc
fs
inc
mov
xchg
out
push
lahf
rcr
adc
mov
sub
(bad)
mov
fwait
and
pop
into
imul
cld
(bad)
cmp
sar
aad
pushf
pop
sub
fmulp
and
push
jmp
or
inc
ins
ins
mov
mov
call
mov
leave
dec
ds
(bad)
mov
mov
ret
pop
call
inc
(bad)
sbb
rol
push
adc
sbb
(bad)
or
dec
and
inc
cmp
in
xchg
pop
mov
mov
or
ins
xchg
mov
xchg
mov
in
pop
pop
cmps
ss
loopne
lds
data16
jecxz
mov
push
and
leave
movs
shr
enter
outs
xor
mov
loope
hlt
ficomp
aam
ja
push
clc
(bad)
gs
shr
cmp
stos
movs
and
addr16
test
sbb
pusha
add
xlat
jb
push
loope
ror
in
bound
aam
popa
mov
pop
lahf
push
mov
inc
lods
leave
jnp
xlat
inc
out
outs
sub
ins
cmps
inc
dec
pop
xchg
xchg
cmc
mov
rcl
rcl
aad
icebp
xor
mov
pop
inc
xchg
cld
push
jmp
mov
scas
adc
sub
int3
add
dec
or
xor
retf
mov
test
jmp
aaa
dec
inc
sub
leave
inc
je
sbb
push
cmps
stc
mov
enter
xor
sbb
jo
test
lock
xchg
loope
dec
scas
idiv
hlt
add
(bad)
xchg
sub
ins
lock
sub
and
ror
sub
(bad)
nop
mov
rcl
je
gs
jle
pop
jne
mov
je
push
add
std
mov
pop
lock
sbb
outs
pop
neg
adc
cmp
xor
sar
jae
ret
adc
(bad)
data16
jns
and
inc
push
pop
or
dec
lods
jmp
sub
fcmovne
cmp
imul
and
mov
mov
loop
dec
outs
addr16
pop
xchg
outs
test
mov
dec
mov
nop
es
dec
xchg
xchg
lds
push
adc
jge
call
push
pop
int
xchg
test
pusha
cmps
jb
adc
cmp
jmp
or
into
add
inc
lods
ror
imul
or
in
cli
xchg
loop
dec
jmp
scas
mov
test
push
(bad)
jp
jp
mov
push
mov
mov
loope
and
fsub
push
test
jbe
cmps
inc
sub
cmp
push
push
xlat
dec
hlt
mov
inc
pop
out
vmovntps
inc
cmp
bound
and
mov
out
or
fwait
inc
movs
xor
shl
cmp
sbb
cmps
push
or
pop
fiadd
mov
jne
dec
inc
add
and
enter
(bad)
or
jmp
adc
hlt
mov
shl
leave
cmp
retf
std
mul
jmp
sahf
in
mov
xchg
dec
cld
outs
leave
neg
and
add
sub
stc
add
pop
jmp
out
jb
cwde
scas
inc
mov
jae
sbb
outs
mov
imul
mov
sub
(bad)
and
scas
or
inc
mov
push
mov
or
push
retf
sub
xchg
cmp
inc
dec
jg
mov
(bad)
stc
push
outs
xor
add
add
lock
mov
cli
test
and
cmps
xchg
les
cmp
push
out
sbb
mov
call
repz
ins
push
ss
(bad)
pusha
jb
jmp
(bad)
call
cmp
sub
ret
loopne
push
sahf
or
mov
daa
inc
adc
cmp
add
sub
ror
xchg
cmps
or
out
call
jno
adc
ffree
mov
loopne
sar
test
(bad)
mov
sbb
in
ins
mov
mov
dec
pop
out
cmps
(bad)
fnstenv
lea
mov
sbb
sbb
mov
xor
test
sbb
outs
call
or
adc
loope
outs
push
mov
jb
or
inc
or
ss
stc
or
pop
imul
and
jp
int
push
mov
inc
mov
int3
sahf
int3
hlt
stos
mov
imul
daa
add
dec
enter
(bad)
in
popa
inc
mov
ins
cmps
adc
sar
outs
sbb
add
jle
mov
or
imul
inc
jmp
int
lahf
mov
cli
(bad)
gs
xor
cmps
loopne
ret
pop
push
cmp
pop
sbb
push
cs
sub
jno
outs
cmc
repnz
pop
dec
mov
arpl
xchg
adc
sahf
pcmpgtw
push
shr
and
sub
int3
xlat
es
xchg
stc
jno
pop
dec
outs
jecxz
sti
dec
inc
lock
(bad)
dec
jl
dec
and
sbb
push
hlt
call
push
sar
imul
cs
cmp
dec
and
shl
lods
cdq
mov
dec
cmp
ins
pop
push
push
arpl
xchg
mov
mov
mov
loope
adc
mov
imul
pop
fisubr
int3
scas
sti
mov
dec
dec
xchg
adc
(bad)
fistp
mov
mov
add
imul
jne
add
cmp
xchg
ror
add
rcr
(bad)
loopne
mov
mov
and
stos
mov
ins
fidivr
jp
aam
lods
mov
cmp
stc
xor
or
in
ficom
adc
shl
imul
mov
ins
lock
icebp
inc
push
les
loop
aam
mov
data16
mov
pusha
sub
push
popf
and
xchg
(bad)
stc
ja
dec
sbb
xchg
sbb
pop
imul
and
sbb
jl
jno
cwde
pop
cwde
mov
fdivr
jge
push
into
out
nop
inc
stc
jnp
(bad)
jmp
inc
mov
ret
adc
bound
movs
or
sbb
call
aaa
loope
pop
jmp
adc
mov
retf
xchg
sub
ds
mov
or
mov
(bad)
pop
push
adc
int3
push
mov
and
mov
idiv
retf
sbb
dec
push
xor
xor
inc
or
(bad)
dec
and
mov
or
add
adc
xor
push
push
and
cld
xlat
push
jge
data16
mov
pop
add
inc
daa
test
out
sub
mov
mov
aad
bound
scas
stc
push
in
rol
scas
shl
stc
push
test
fwait
push
dec
fs
(bad)
jecxz
pop
aas
dec
pop
pop
repz
loop
pusha
fld
sbb
jecxz
or
cli
out
fcom
sbb
dec
sub
(bad)
in
imul
gs
aas
cmps
out
out
inc
iret
cli
lods
adc
jno
xlat
xchg
jmp
and
call
aad
xchg
xor
mov
pop
js
mov
sub
ret
jns
xor
int3
or
ja
sbb
pop
gs
call
pusha
xor
gs
in
test
dec
mov
push
scas
pop
cdq
pop
xor
lahf
adc
clc
rcl
add
jle
mov
xchg
sbb
daa
mov
sub
repnz
fsubr
int
in
add
(bad)
jg
xor
jbe
dec
es
and
call
dec
or
mov
pop
adc
das
cld
jl
and
out
fldcw
push
mov
shl
adc
pop
mov
pop
mov
ds
add
push
pop
or
xchg
cmp
in
out
lea
div
icebp
popf
adc
and
pusha
cs
repz
aad
jp
xor
cmps
adc
sub
mov
aaa
call
ror
and
pop
jmp
std
cmp
pop
push
into
add
lock
inc
jmp
mov
sbb
or
inc
and
sub
and
leave
sbb
mov
mov
xor
cmps
outs
sbb
cdq
shl
fidivr
dec
push
ret
call
test
push
(bad)
out
xor
or
in
pop
imul
pop
xor
mov
sub
xchg
les
dec
hlt
nop
aad
xor
sub
int
mov
dec
div
js
repnz
jl
stos
orps
push
mov
cmps
pop
ret
std
int
jl
jl
xchg
add
sub
cmp
dec
int3
cmp
ins
scas
cdq
pop
sbb
cmp
dec
call
in
mov
and
in
ja
and
sub
jp
push
(bad)
out
(bad)
test
les
scas
cmp
std
ja
jl
jg
aam
dec
icebp
scas
(bad)
ss
or
outs
hlt
ja
adc
sahf
jmp
mov
mov
imul
sahf
mov
hlt
nop
sbb
call
hlt
stos
mov
(bad)
in
scas
or
and
adc
test
or
jge
test
test
xor
fucom
mov
aas
rcr
push
xchg
stos
jmp
mov
pop
jecxz
arpl
shr
mov
xchg
pop
retf
mov
sbb
push
adc
mov
xor
in
xchg
xor
push
pushf
scas
sub
sub
iret
push
in
outs
pop
and
test
pop
fld
ds
jmp
into
inc
inc
inc
add
mov
jno
jp
lods
ins
mov
nop
adc
call
or
and
cmp
enter
add
lock
imul
and
push
fldln2
outs
ja
jae
arpl
mov
dec
cli
mov
mov
cmp
into
fwait
repz
push
mov
sub
cmp
pop
push
ja
stc
xlat
push
mov
and
into
sbb
sbb
mov
movs
loop
inc
(bad)
lds
aas
dec
dec
inc
fbld
push
push
retf
out
sub
fcomp
sbb
push
mov
gs
jb
fs
popf
push
jb
or
imul
in
cmps
cwde
sbb
outs
arpl
adc
(bad)
into
cmp
fsub
ret
adc
ins
push
sub
scas
xchg
mov
adc
pop
fidivr
or
fnstcw
outs
push
mov
aam
cmp
lods
repnz
push
xlat
jns
pop
pushf
js
scas
pop
aam
out
mov
add
xchg
jae
das
dec
mov
pop
out
rol
or
pusha
scas
inc
push
mov
inc
sti
fadd
mov
cld
push
in
imul
push
stos
aaa
retf
shl
jg
or
pop
test
jl
mov
test
popf
push
in
retf
and
push
fbld
dec
loope
lods
mov
aaa
add
enter
lock
sub
xor
or
jno
and
or
push
out
xor
out
xchg
inc
and
ror
pop
sub
jge
push
mov
iret
bound
and
sub
sbb
scas
les
xchg
outs
xchg
inc
loopne
cdq
and
rcl
outs
adc
dec
sub
push
sbb
inc
pop
sbb
xor
int
jnp
jmp
iret
mov
mov
xchg
dec
pop
dec
(bad)
xor
clc
cmp
push
and
movs
xor
int
sbb
jecxz
sahf
cmp
mov
xchg
push
or
dec
push
push
sub
pand
dec
rcl
inc
mov
cli
mov
mov
scas
popf
cmp
test
add
pushf
cmp
and
mul
mov
adc
fstp
inc
fld
cmp
mov
test
int3
rcl
pop
call
push
push
xor
inc
sub
ja
push
adc
(bad)
push
in
xor
or
add
xor
loop
dec
mov
and
ja
test
xor
int
pop
cmps
adc
dec
test
dec
lock
loope
lds
stc
xchg
fist
js
xchg
mov
scas
loopne
cmc
cs
cwde
mov
jbe
cmp
jecxz
aaa
es
fisubr
shl
mov
cmp
add
call
lahf
pop
cmps
add
cmp
push
gs
pop
xlat
inc
xchg
mov
dec
mov
inc
in
bound
or
fst
cmp
dec
retf
mov
jnp
mov
daa
and
std
pop
ja
push
retf
adc
xor
pop
adc
stos
sub
pop
neg
sbb
pusha
pop
push
xor
call
outs
arpl
adc
je
rdpmc
push
or
add
aaa
adc
xor
adc
into
jl
shl
push
push
sub
mov
cwde
jne
mov
hlt
sub
pop
pushf
or
xchg
daa
iret
push
daa
pop
cmc
ror
sar
sub
xchg
popf
inc
cmp
adc
sub
jns
and
inc
add
frstor
mov
or
pop
sbb
mov
in
jmp
nop
mov
fnstcw
aas
pop
fs
mov
mov
xor
fsubr
addr16
jecxz
xchg
cmc
jle
and
push
jmp
jne
jp
xor
jge
fcmovnu
scas
inc
sbb
(bad)
push
sahf
ret
test
sub
(bad)
xchg
and
mov
sbb
ficomp
xchg
fsub
arpl
push
pop
xchg
dec
dec
mov
ss
ret
inc
mov
sbb
sbb
add
sar
cmp
fstp
sub
pop
add
cmc
xchg
das
sbb
pop
cmc
out
add
dec
pop
cwde
mov
pop
xchg
pop
add
rol
ror
sbb
rcr
or
adc
aad
add
or
inc
ret
fld
loope
sub
aad
ins
aaa
loope
into
sub
fsubr
bnd
repnz
inc
mov
pushf
ret
xlat
sbb
cmp
cmp
mov
add
test
les
jp
add
out
add
mov
daa
retf
xor
push
mov
pushf
test
loop
jo
cli
adc
add
loop
dec
imul
imul
adc
sub
and
sti
in
popa
mov
sbb
cmp
(bad)
jecxz
push
les
xchg
xchg
icebp
sbb
addr16
into
dec
repz
pop
mov
mov
idiv
rcr
stos
aaa
jns
sub
outs
sbb
add
adc
and
jbe
jle
pop
xor
jge
rcl
push
sbb
bound
cmp
jnp
mov
(bad)
sub
and
mov
arpl
stc
nop
adc
shl
jae
jmp
jmp
push
and
mov
stos
cmp
add
ret
in
shl
add
mov
call
cld
and
loope
dec
imul
mov
push
jo
into
test
addr16
out
mov
lea
mov
push
movs
adc
leave
sbb
inc
mov
jb
xchg
repz
inc
rcr
mov
int3
inc
add
push
in
add
ret
sub
std
es
cs
push
and
cs
jns
inc
push
mov
fistp
xchg
jmp
push
mov
push
ins
movs
call
adc
push
fucomip
add
cmc
dec
daa
mov
data16
cld
jg
mov
rol
ss
fst
sar
pop
jl
pop
idiv
js
mov
xor
(bad)
and
inc
mov
aaa
and
jae
xchg
jmp
mov
dec
fidiv
out
jne
jo
clc
dec
jo
xchg
fdiv
mov
push
mov
mov
xchg
pop
sbb
jbe
push
je
sbb
ja
push
push
rol
shr
pop
lea
add
jmp
mov
fs
enter
mov
push
xchg
push
cmp
or
jge
test
sub
popa
pop
imul
nop
inc
ds
das
and
xor
mov
inc
mov
sub
mov
std
dec
adc
inc
fnstcw
adc
into
pop
push
mov
jecxz
jmp
fadd
push
pop
xchg
lods
cdq
add
call
sub
xchg
dec
pop
rcr
inc
dec
mov
packuswb
mov
aaa
dec
fmul
mov
dec
bound
pop
push
mov
fucomp
cmps
xchg
in
cmp
add
cld
dec
ret
mov
es
sbb
mov
out
fstp
or
sub
ins
cli
add
pop
mov
fcompp
lock
popa
inc
dec
xchg
rep
mov
adc
iret
sub
cld
and
popfw
sub
xchg
lahf
cmps
jp
add
(bad)
fst
mov
push
or
mov
lahf
inc
or
xor
push
push
mov
in
adc
xchg
xor
lock
or
jns
inc
call
hlt
mov
jne
xor
mov
vfrczss
shl
dec
sbb
xor
test
sbb
aad
(bad)
(bad)
mov
mov
pop
imul
sub
push
xor
xchg
sbb
mov
les
scas
add
jecxz
mov
add
add
dec
push
push
xor
jmp
nop
push
jo
add
rcl
(bad)
xchg
xchg
(bad)
mov
sbb
clc
mov
dec
repnz
mov
test
test
jmp
scas
adc
adc
mov
push
ja
ret
or
fldcw
xchg
sti
pop
imul
call
pop
or
pop
adc
sub
ror
jno
pushf
aad
and
mov
lods
xor
and
mov
shl
cs
add
mov
dec
sbb
lea
xchg
xchg
adc
pop
addr16
jb
sub
clc
imul
pop
pop
pop
mov
xor
hlt
sub
adc
xor
lock
loopne
jmp
int
inc
mul
xchg
add
out
sub
and
stos
inc
push
mov
xchg
(bad)
jp
mov
shr
mov
ins
pop
xchg
pop
and
(bad)
mov
scas
into
aaa
(bad)
mov
jmp
xor
jae
(bad)
fiadd
xchg
inc
iret
fdivr
mov
add
lock
repz
adc
mov
push
cmp
jae
xor
shl
sub
or
sti
xchg
lea
int3
mov
gs
mov
dec
adc
enter
cmc
es
push
or
dec
test
cli
ins
test
fsub
dec
popf
mov
call
add
sbb
mov
idiv
test
pop
out
out
mov
es
mov
sbb
push
jbe
gs
cs
int
inc
adc
add
lahf
xchg
mov
fstp
js
push
inc
mov
lds
pop
ret
into
pop
ja
repz
sbb
jno
mov
mov
js
ss
cdq
fld
mov
sub
mov
aad
mov
sbb
push
mov
mov
adc
jns
mov
mov
xchg
pop
jno
add
add
call
js
repnz
call
jmp
fisttp
ret
cmp
div
fwait
mov
xchg
and
jmp
pop
stos
push
dec
and
adc
jge
test
pop
into
add
pop
adc
(bad)
cmp
jg
mov
adc
pop
out
cmp
dec
push
dec
fistp
jmp
(bad)
pop
cld
sub
jo
mov
mov
inc
xchg
and
and
scas
push
pop
mov
mov
(bad)
push
loopne
or
retf
sbb
jno
xor
pushf
and
mov
inc
dec
sub
pop
jb
inc
call
cmps
dec
add
xchg
jno
mov
out
call
dec
leave
ins
fwait
or
push
adc
fisub
jns
fcmovne
out
aad
repnz
adc
inc
and
sub
xor
daa
in
stc
inc
mov
scas
xor
dec
ins
jmp
ret
add
jg
adc
mov
add
and
or
xchg
mov
aad
sbb
aad
fcom
add
mov
push
ja
mov
es
into
(bad)
push
outs
ds
fiadd
dec
dec
xor
jo
push
mov
btr
sub
fnstsw
mov
jbe
cwde
push
push
mov
adc
sub
neg
push
popf
fisubr
int3
push
xchg
or
and
aam
cdq
cmps
xchg
jl
pop
xchg
mov
dec
bnd
cmp
inc
stc
xlat
push
or
dec
sti
mov
push
dec
(bad)
jecxz
retf
icebp
mov
inc
jns
in
scas
test
cmp
mov
inc
adc
icebp
(bad)
xor
test
xchg
movs
sar
jns
cmp
call
jmp
lock
loope
jg
mov
int3
mov
add
xchg
or
push
push
or
test
push
and
mov
adc
arpl
sub
jae
adc
jno
in
test
enter
xchg
sbb
cmp
mov
and
xchg
adc
jmp
xchg
push
js
test
fcom
mov
(bad)
popa
pushf
sub
mov
jg
xchg
mov
fcmovnb
push
daa
cmp
imul
sub
adc
nop
(bad)
xchg
iret
add
enter
lea
dec
into
out
(bad)
imul
pop
or
adc
fs
jecxz
jnp
add
adc
xor
pushf
stc
sbb
xor
mov
push
test
test
sti
popa
mov
xchg
mov
push
jo
outs
shr
sub
retf
imul
sbb
push
ins
and
jne
cmp
sar
je
xor
popa
xchg
sar
pop
(bad)
mov
or
or
add
pushf
jge
dec
push
rol
jno
div
mov
dec
push
xor
jno
leave
int3
mov
push
sbb
dec
repz
je
xor
mov
je
mov
ret
xlat
sbb
into
jge
mov
fdiv
je
int
cmp
xor
fdiv
or
or
outs
(bad)
push
push
std
retf
cdq
nop
mov
dec
lahf
out
and
inc
call
popf
test
cmp
sbb
sub
scas
sbb
pop
shr
dec
sbb
mov
outs
xor
(bad)
fidiv
jns
in
loopne
jae
cdq
inc
xchg
mov
cmp
out
movs
push
ins
add
lods
dec
jge
(bad)
imul
xchg
leave
xor
pop
mov
jb
add
mov
int
push
(bad)
mov
mov
xchg
push
lock
lods
fstp
fsub
sbb
pop
push
loope
dec
gs
dec
cmps
mov
xlat
pop
mov
pop
inc
div
pop
push
adc
or
daa
fnstsw
stos
cld
sbb
into
dec
int
sti
jmp
mov
mov
arpl
and
or
mov
lds
outs
adc
out
inc
ds
pop
mov
mov
or
mov
cmp
push
or
pusha
into
cmp
loope
iret
push
mov
add
pusha
out
xchg
pop
lea
pop
push
movs
jge
add
mov
jle
and
(bad)
pop
push
pop
hlt
idiv
fs
std
out
push
fsub
(bad)
imul
xchg
push
dec
pop
jmp
aaa
sbb
mov
cdq
fstp
cmovb
fidiv
sbb
lods
neg
(bad)
mov
inc
pop
int
aas
lock
arpl
cdq
mov
add
xor
(bad)
mov
inc
mov
pop
xor
call
scas
push
sbb
mov
jmp
dec
sbb
mov
add
mov
jnp
retf
jmp
inc
sub
in
repz
fistp
pushf
ins
sub
jge
cmps
cdq
je
clc
lods
retf
dec
add
mov
push
cdq
or
push
stc
dec
aas
mov
adc
xchg
lock
(bad)
push
push
xchg
fs
and
into
cmc
mov
adc
jl
jne
pop
ins
xor
inc
ins
es
xor
jp
and
cdq
fs
sub
cmps
arpl
mov
shl
jns
(bad)
fbld
push
adc
enterw
popf
(bad)
jnp
ins
cld
xchg
mov
pusha
or
fadd
in
cmp
iret
(bad)
lods
inc
dec
sub
jle
rcr
xchg
push
mov
ror
enter
pop
mov
adc
mov
mov
out
jne
outs
lds
xchg
sub
mov
fld
push
push
xchg
in
inc
mov
call
call
xor
push
inc
jg
and
stos
inc
inc
mov
ja
cmp
or
rcl
adc
hlt
in
dec
cmp
adc
out
cmp
pop
imul
jae
sbb
jne
stos
mov
ins
mov
repz
or
repz
loop
fwait
int
lock
mov
sbb
repz
jmp
or
xchg
mov
sbb
dec
test
sub
dec
push
sub
mov
js
imul
lock
test
ret
sbb
push
mov
fisubr
pop
cmp
dec
mov
and
mov
mov
loope
pop
pop
xchg
inc
add
pop
aam
mov
fisttp
dec
sub
pop
mov
ds
or
fldlg2
(bad)
jle
mov
or
stos
inc
movs
push
je
iret
cmp
jmp
sbb
adc
push
dec
mov
dec
dec
adc
sbb
add
adc
mov
(bad)
adc
cwde
xor
xor
inc
xor
imul
adc
sub
ror
dec
mov
nop
aad
push
sbb
test
mov
imul
das
aaa
test
inc
jnp
push
jo
jo
fisttp
nop
out
sbb
jno
clc
cdq
out
fst
pop
push
stc
movs
cmp
data16
ret
loop
hlt
inc
push
mov
test
ins
sub
fwait
pop
jae
in
mov
pop
jae
mov
fcomp
mov
push
xor
jns
adc
in
or
es
inc
adc
out
test
mov
ins
rcr
mov
cld
push
retf
pop
inc
push
imul
rcr
fstp
rcr
lahf
arpl
shl
in
push
stos
aaa
push
loopne
fwait
inc
call
push
mov
xchg
inc
out
push
mul
repz
mov
jo
jl
test
mov
mov
test
jecxz
adc
je
aas
pop
pop
into
jl
retf
(bad)
or
rcr
iret
inc
mov
or
clc
mov
sbb
ror
push
inc
xchg
nop
jge
sti
or
clc
in
mov
lods
jb
mov
mov
pusha
mov
movs
dec
or
jae
dec
jne
xchg
sbb
cmp
mov
inc
adc
push
sti
xor
sbb
pushf
clc
ror
(bad)
pushf
call
je
(bad)
push
iret
mov
jge
or
outs
fucom
and
xchg
sub
mov
fist
pushf
lahf
xchg
cmp
(bad)
push
mov
les
pop
fcmovu
mov
scas
xchg
mov
xchg
and
leave
and
in
xlat
out
inc
stos
add
aaa
sbb
sub
shl
enter
pop
jb
sub
dec
or
repz
rol
sub
fdiv
xor
cmp
push
lea
xchg
sti
test
ins
aaa
aad
(bad)
cmp
xor
inc
dec
fmul
or
pop
idiv
sub
into
cmp
mov
mov
pop
xchg
into
mov
fdivp
dec
pop
xchg
lods
packssdw
adc
test
add
(bad)
cmps
pop
rol
and
das
clc
cli
pop
int
or
pop
clc
jb
sbb
test
xchg
lahf
fist
(bad)
jmp
xchg
enter
jae
jo
cmp
sub
mov
mov
jne
cmps
les
adc
(bad)
push
mov
sbb
add
in
in
fisttp
jg
cli
xchg
xchg
dec
dec
mov
sti
cdq
repnz
fsub
call
mov
jmp
ror
mov
add
xchg
push
or
xchg
stos
out
mov
cmp
in
pop
out
(bad)
or
hlt
mov
push
xchg
pop
shl
mov
stc
data16
sbb
(bad)
jl
xor
jnp
enter
cs
jg
cmps
(bad)
cmp
mov
push
push
or
adc
call
mov
and
mov
dec
bound
jnp
mov
sbb
and
aam
mov
cmp
xchg
push
lahf
enter
mov
mov
ins
pop
mov
or
rcl
cli
adc
inc
mov
pusha
sbb
adc
fcomp
bound
jge
sbb
or
adc
or
and
lahf
push
and
pop
mov
push
int
push
mov
mov
or
ja
mov
jle
jae
mov
add
and
(bad)
jge
not
test
pop
push
inc
push
cmp
enter
add
fild
into
mov
stos
push
ret
loop
out
les
nop
pushf
pusha
pop
jmp
add
es
lods
pop
fld
xor
mov
cmc
mov
push
jb
push
xorps
pop
test
cmp
inc
or
jp
repnz
xor
call
popf
test
sbb
mov
inc
ret
mov
or
repz
or
pop
ss
xchg
ficom
aas
mov
aaa
out
jno
es
lahf
movzx
aam
arpl
les
mov
push
aad
popa
scas
adc
pop
dec
outs
pushf
ds
xchg
(bad)
sti
aam
iret
and
jns
in
popa
addr16
jno
data16
pop
pop
enter
daa
jbe
into
sbb
and
in
lds
popf
push
push
shr
adc
fdiv
in
xor
mov
inc
adc
test
sub
push
rol
aam
cld
adc
pop
xchg
shr
push
mov
adc
adc
lods
rep
outs
add
inc
fdivr
rcl
les
cld
or
cwde
retf
mov
pop
sbb
mov
jmp
adc
mov
push
into
sub
xchg
jns
xchg
jns
add
fwait
aas
pmulhw
mov
in
and
in
mov
mov
mov
shr
les
ins
pop
pop
sub
aaa
or
out
ja
jg
xor
pop
lods
cmp
xchg
popa
leave
(bad)
push
sub
xor
dec
or
mov
(bad)
fsubr
(bad)
loopne
fmul
je
out
mov
adc
out
mov
xor
xlat
pop
inc
mov
cmp
in
mov
into
sti
fwait
call
lahf
cmp
fdiv
dec
rol
sbb
cld
movs
jle
adc
imul
ds
ficomp
mov
add
les
mov
push
sbb
inc
pop
cmps
mov
push
add
lods
mov
dec
es
push
add
adc
sub
add
push
inc
mov
lds
mov
mov
rcl
xchg
push
outs
or
out
std
jae
outs
jo
pop
dec
inc
pop
add
pusha
or
scas
xchg
xor
iret
push
call
mov
ds
into
(bad)
adc
imul
inc
test
mov
mov
std
rcr
fst
push
mov
int
mov
cs
inc
movs
pop
xor
fsub
test
xlat
mov
outs
retf
outs
cli
adc
test
sbb
scas
mov
fistp
pop
mov
ss
imul
push
rol
jb
push
test
pop
movs
sbb
push
push
arpl
cli
or
fs
arpl
aaa
push
fcmovbe
mov
pop
fdiv
mov
cs
push
xchg
aad
hlt
mov
mov
add
pop
jmp
or
mov
cld
ja
retf
xor
mov
inc
cmps
not
movs
adc
retf
in
outs
dec
inc
outs
ins
jmp
lea
xor
xor
cld
inc
mov
xor
test
fisub
pop
lds
jmp
test
mov
retf
push
sti
mov
cld
lods
xchg
and
mov
jp
or
cmp
jecxz
dec
clc
sub
jo
test
lsl
cmp
xchg
or
push
retf
and
sub
mov
daa
inc
mov
jg
sub
pop
movs
fnstsw
and
and
ret
and
inc
ret
iret
push
mov
in
jne
icebp
out
hlt
jecxz
retf
inc
pop
or
(bad)
mov
mul
fidiv
ret
repz
or
jmp
into
dec
repz
lods
aam
in
fs
das
push
test
mov
or
push
add
addr16
pop
sub
inc
mov
jge
mov
popf
mov
test
int
mov
jae
pop
inc
mov
shl
dec
dec
jmp
push
jp
inc
(bad)
xor
stos
sbb
retf
push
lods
mov
je
imul
cmp
stos
loop
cli
retf
cmp
xor
mov
mov
dec
xchg
mov
jmp
fs
ja
cli
mov
repnz
cmp
mov
loopne
sbb
movs
cmp
pop
cmp
fldcw
bound
mov
pop
mov
(bad)
lock
and
cld
jg
push
leave
rcr
sub
sbb
retf
xor
pop
xchg
jo
lock
ret
and
xor
lahf
mov
jnp
fisttp
shr
pop
es
(bad)
mov
(bad)
fld
or
retf
lods
(bad)
(bad)
mov
ins
push
pop
lahf
mov
dec
cmps
xchg
js
daa
inc
fist
jecxz
out
or
bound
stc
les
jg
cmp
adc
loop
xchg
ret
neg
in
jecxz
mov
jp
in
sbb
ja
pop
jp
call
imul
mov
jle
movs
jne
popa
adc
mov
pop
dec
mov
sbb
cwde
jle
mov
mov
pushw
jmp
outs
test
jp
(bad)
sbb
jmp
mov
jnp
dec
cld
stc
xchg
div
mov
loopne
lock
out
jo
adc
adc
push
cmp
daa
loope
loop
jl
cwde
out
and
dec
repnz
or
mov
sbb
xchg
out
xchg
iret
inc
call
cdq
dec
pop
push
pop
push
cmp
popw
mov
mov
pop
sti
push
leave
pushf
mov
mov
(bad)
push
sbb
sub
xchg
or
aas
adc
mov
sub
pop
jno
sbb
inc
xor
sahf
mov
fistp
and
mov
mov
sbb
fild
jo
cmp
sbb
dec
pop
bound
(bad)
push
int
in
jmp
call
(bad)
inc
sbb
dec
into
rol
mov
in
mov
mov
(bad)
adc
test
outs
dec
adc
shl
dec
ins
js
(bad)
mov
loopne
push
mov
cld
bound
dec
sahf
jl
shl
sub
jo
xchg
push
loop
jl
mov
stos
adc
dec
out
sub
dec
cld
mov
xchg
or
repz
or
data16
adc
lods
lds
xchg
mov
into
jb
ret
mov
test
fs
or
pop
mov
xchg
jae
movs
jne
mov
dec
fcmovnu
out
bts
call
push
(bad)
and
xor
pop
pusha
dec
jmp
xlat
mov
mov
mov
repnz
movs
mov
or
mov
into
pop
mov
cmp
inc
loopne
mov
ret
dec
mov
fsubr
jns
mov
xchg
scas
xor
xor
xchg
repz
inc
fisub
sub
arpl
in
mov
jmp
std
out
out
dec
fwait
das
adc
sub
inc
mov
(bad)
gs
cmc
int
mov
call
adc
mov
xchg
call
mov
fld
cmc
mov
push
pop
push
loopne
and
mov
sti
inc
pop
cmp
adc
mov
or
push
sub
mov
inc
xchg
imul
pop
adc
imul
or
mov
adc
xchg
cmps
mov
sub
xor
inc
cs
fld1
jnp
into
push
ret
push
add
sub
ja
xchg
push
cs
xor
in
fist
in
jmp
dec
fucomi
push
outs
stc
cwde
(bad)
rcl
push
ins
dec
sbb
shl
into
ror
jge
pop
sub
mov
adc
mov
xor
mov
cs
inc
gs
popa
xchg
mov
cdq
mov
lds
adc
cli
(bad)
call
push
add
add
pop
nop
outs
mov
sub
data16
ins
call
xchg
mov
pop
and
js
inc
mov
test
pop
sbb
jmp
bound
cli
test
mov
pop
aaa
rcl
mov
cmp
scas
jecxz
jnp
sub
sub
lock
daa
xchg
inc
push
int
popa
repnz
stos
lea
add
mov
pop
jle
loope
push
popa
out
fld
ins
inc
stc
xor
popa
ss
pop
inc
js
icebp
imul
leave
ror
xchg
pop
out
das
jns
fldcw
cmps
inc
pop
sar
enter
dec
cmp
cld
mov
xchg
popf
adc
punpcklbw
xor
pop
mov
jbe
sub
push
sbb
ja
xchg
mov
loopne
not
adc
xor
xchg
imul
(bad)
fxch
mov
lods
dec
adc
ret
js
loop
jne
mov
fidivr
fwait
popf
push
icebp
push
cmp
push
jns
aaa
aam
test
dec
jne
sbb
es
inc
adc
aam
push
movs
in
(bad)
outs
les
adc
push
dec
fs
and
push
outs
adc
adc
push
cdq
sbb
add
inc
sub
(bad)
lahf
inc
sub
or
inc
sar
ins
loope
js
nop
sbb
cmps
lahf
xchg
std
stos
lds
addr16
popf
cdq
cmp
or
retf
mov
fist
xlat
push
mov
lds
pusha
test
outs
js
mov
ror
fistp
pop
sbb
imul
sbb
arpl
and
addr16
les
push
dec
mov
mov
mov
iret
repz
mov
mov
mov
(bad)
inc
test
loope
hlt
mov
or
and
dec
add
sub
jne
ins
mov
push
pop
jno
xlat
movs
add
movs
mov
std
(bad)
push
fwait
inc
push
int3
adc
je
mov
or
adc
cmp
jo
mov
dec
mov
cmp
pop
sbb
ret
ret
or
imul
and
iret
dec
idiv
jnp
add
and
ret
mov
jmp
test
sub
mov
xchg
pop
xor
inc
ds
in
mov
and
and
(bad)
cmp
sbb
out
xor
test
xchg
fiadd
adc
dec
mov
(bad)
lds
ret
inc
cmps
in
mov
test
fucomip
aas
pusha
int3
sahf
ins
call
pop
jb
pop
in
fld
sub
cmc
retf
cmp
outs
fld
(bad)
jg
xchg
mov
mov
dec
out
fiadd
cmp
ja
sbb
movs
mov
jns
xchg
lods
repnz
xor
sbb
mov
jl
loope
dec
mov
mov
jmp
lds
ror
stos
ror
inc
dec
add
mov
push
test
daa
data16
sahf
sbb
inc
mov
cdq
add
je
sbb
sbb
add
mov
jns
add
or
pusha
pop
rcr
seta
sub
ja
sub
and
mov
xor
loopne
cmp
loope
push
js
pop
adc
mov
push
sub
push
mov
pop
adc
sub
push
call
les
ret
mov
sbb
test
jle
fadd
adc
test
mov
fisubr
add
mov
mov
scas
xchg
jnp
sbb
pop
lds
cmp
cmp
hlt
jbe
movs
jmp
lds
mov
dec
aas
and
or
push
lods
lds
inc
mov
mov
leave
out
sahf
mov
dec
mov
js
dec
in
push
xchg
push
in
push
in
hlt
xchg
mov
sbb
jmp
loopne
fwait
test
iret
lahf
xor
cmps
(bad)
sahf
inc
push
jbe
jnp
adc
iret
or
or
js
and
mov
ss
ins
(bad)
arpl
sbb
pushf
add
xor
mov
lock
retf
cmp
mov
jbe
jns
icebp
push
outs
fst
fdivr
xor
scas
int
(bad)
sub
repz
dec
pop
stos
push
dec
(bad)
lds
mov
out
dec
loopne
int3
bound
rcr
sbb
scas
div
mov
jle
cmp
in
mov
aam
add
in
xchg
fisub
imul
stos
pop
ror
pop
les
out
add
push
rol
push
aad
cmp
sbb
jno
(bad)
fs
mov
pop
js
sahf
jbe
fmul
sub
add
adc
loop
clc
dec
pusha
push
mov
or
push
xor
xchg
cmp
mov
and
fild
cmp
sti
movs
stc
repnz
into
mov
cmp
enter
lea
stos
xchg
nop
sub
add
mov
in
pop
test
mov
push
dec
mov
mov
inc
outs
ret
sub
lea
pop
in
bound
mov
mov
icebp
jno
dec
arpl
rcr
das
sub
popf
les
ja
mov
push
jnp
xchg
sbb
retf
(bad)
mov
call
ds
and
(bad)
fidivr
inc
push
mov
add
push
xor
retf
mov
out
inc
mov
clc
hlt
lock
cmp
adc
ret
mov
(bad)
xor
inc
iret
in
popa
adc
stos
push
dec
adc
sar
and
ror
rcl
sbb
xor
add
data16
js
ror
xchg
inc
mov
scas
mov
inc
mov
push
dec
jno
push
fs
and
xchg
iret
push
lahf
adc
jnp
daa
and
sahf
es
rcl
xlat
or
mov
retf
retf
push
pop
movs
xor
mov
or
rcl
pop
sbb
xchg
(bad)
out
add
cld
les
pop
and
nop
adc
sbb
mov
lea
movs
test
xor
push
loopne
add
cld
rcr
lahf
mov
jmp
cwde
repnz
rol
sub
lods
(bad)
out
xor
sar
xchg
bound
inc
stos
outs
jbe
lsl
jl
retf
leave
stos
mov
stos
pop
pop
in
push
ret
and
jns
mov
dec
je
retf
sub
lock
fidiv
lods
outs
dec
mov
ja
inc
sar
cmps
push
jecxz
adc
push
push
pushf
jle
rol
lock
pop
cmp
adc
sbb
cmps
mov
pop
jecxz
call
xor
adc
jmp
cmp
or
dec
shl
adc
dec
pop
popa
or
jno
ret
push
mov
cmp
mov
jbe
mov
dec
jnp
pusha
adc
inc
push
lods
mov
imul
and
cmp
add
inc
cmc
ja
loop
neg
ficom
out
cld
sub
je
sar
xor
in
loope
cmp
scas
test
sub
ins
xchg
and
cmps
mov
sti
xchg
inc
cmp
fcmovne
sub
push
jns
or
jl
adc
pop
mov
add
lock
loopne
sbb
jnp
push
xchg
push
mov
cmp
push
add
push
xchg
or
inc
inc
dec
lea
scas
adc
test
test
fld
add
fistp
cmp
in
pop
pop
iret
sbb
jno
dec
out
daa
mov
dec
pop
sar
dec
rol
adc
mov
or
inc
dec
sub
das
inc
stos
leave
adc
mov
sti
pop
inc
add
jo
push
mov
movs
xor
dec
cmps
jbe
or
mov
dec
pop
jl
scas
mov
loopne
cmp
scas
xchg
cmp
dec
dec
pop
cmp
or
(bad)
je
xchg
adc
dec
shl
xor
cmps
jns
in
ins
jne
nop
xchg
cmp
loopne
mov
sbb
sub
not
iret
dec
cmp
int3
aas
pop
cld
sahf
sahf
aaa
dec
mov
(bad)
int
and
in
stos
xor
xor
push
inc
jecxz
adc
aad
and
jmp
push
fsubr
mov
sub
cmp
mov
aad
cs
xor
outs
cli
inc
cmp
out
cwde
int3
out
pop
adc
ds
dec
xchg
in
inc
xlat
pop
std
mov
movs
push
cmp
sbb
mov
frstor
mov
clc
adc
imul
cdq
lea
ret
fcom
dec
enter
rcr
jmp
mov
loopne
mov
mov
jno
sub
lods
aas
pop
push
add
out
dec
(bad)
in
mov
fadd
or
dec
dec
mov
xchg
mov
retf
xor
(bad)
adc
mov
pop
call
rol
ins
dec
lods
jp
rcr
movs
jo
addr16
hlt
mov
(bad)
cld
inc
movups
jg
dec
pop
loopne
pop
and
push
in
mov
movs
inc
repz
aam
cli
fbstp
and
add
call
cli
jp
jg
ins
movs
xchg
in
xchg
xchg
in
pop
or
enter
(bad)
test
jae
inc
jmp
data16
(bad)
jmp
scas
sbb
cld
sub
out
or
jmp
jbe
dec
xchg
int
int
add
leave
loopne
lock
inc
out
retf
sbb
popf
ins
mov
mov
pop
and
retf
adc
lahf
inc
dec
sbb
mov
push
psrlq
clc
fs
adc
loop
cmp
cmp
aad
cmp
adc
in
scas
jmp
mov
mov
mov
out
adc
mov
adc
push
lds
mov
mul
cmp
mov
xlat
cwde
enter
push
add
retf
sub
pusha
dec
mov
sbb
mov
ins
iret
pop
and
imul
nop
pop
push
fs
mov
loopne
mov
inc
pop
pop
out
cmp
dec
push
test
fisttp
cmp
sahf
in
sar
jmp
cmps
imul
cmp
sbb
adc
shl
into
push
xchg
cmps
adc
ds
mov
and
fs
lahf
cmp
test
sub
push
push
repz
xor
mov
enter
mov
inc
mov
jb
sub
call
and
fstp
mov
xchg
sbb
sbb
xlat
pop
jmp
dec
rcr
cmp
jns
pusha
cmp
mov
out
pop
push
mov
mov
iret
sahf
in
fld
or
leave
fcomp
mov
mov
fsub
dec
pop
icebp
shr
mov
in
or
addr16
arpl
pushf
movs
cmp
mov
test
add
test
inc
data16
js
fwait
popf
mov
mov
sub
and
data16
or
cmps
sar
fild
std
stos
in
or
cli
gs
mov
call
out
inc
mov
jmp
and
ja
mov
sub
sti
stos
(bad)
jp
imul
aaa
pop
sar
lea
pusha
(bad)
cmp
adc
retf
inc
dec
ds
push
and
xchg
mov
repnz
jp
dec
addr16
cmp
jno
jno
or
cmp
outs
xchg
fs
imul
xor
jg
pop
sbb
test
call
xor
push
ja
push
mov
xchg
ds
data16
fsubr
bound
pop
jbe
mov
test
std
and
sar
dec
push
in
push
ja
frstor
xor
xchg
cmp
sub
lods
mov
lds
cmps
dec
adc
pop
into
push
dec
or
sbb
int
dec
popf
xor
fidiv
jo
dec
fsub
inc
mov
test
jae
(bad)
frstor
sub
int3
stc
imul
xor
iret
jmp
iret
ficomp
rcr
imul
cmp
test
lahf
add
push
sar
fldcw
mov
add
jne
rol
das
add
js
and
sbb
push
add
fsin
jmp
sbb
lea
nop
lock
mov
out
adc
xchg
sub
lods
jnp
out
(bad)
mov
stos
add
mov
xlat
push
adc
sbb
retf
jle
aad
mov
(bad)
and
xor
jno
xchg
icebp
mov
xchg
(bad)
es
fmul
xchg
xchg
repz
cmp
mov
test
cmc
fnstcw
ss
cmp
cdq
imul
(bad)
mul
(bad)
xor
mov
sub
mov
in
bound
xor
aad
ja
inc
jl
sti
xchg
fnop
or
cmps
aaa
jg
dec
mov
ret
push
push
push
bound
pop
jl
sub
aaa
(bad)
mov
jns
clc
jecxz
cmps
cmp
pop
sar
or
pop
daa
adc
leave
mov
jae
sbb
sbb
lods
pop
imul
fstp
pop
jmp
ins
push
jp
jmp
shl
test
stos
cld
lock
test
push
jbe
loop
loopne
and
jo
pop
mov
lea
in
sub
sbb
fdiv
ret
xchg
mov
adc
out
jmp
jge
jge
sub
jl
add
je
mov
jl
inc
dec
dec
mov
xchg
add
mov
fimul
jbe
mov
mov
sub
popa
xchg
adc
sub
in
ins
mov
xchg
call
jmp
pop
pop
inc
push
adc
cmp
in
movs
add
pop
lods
lds
sub
mov
xor
les
stos
xchg
les
cmc
pushf
mov
out
fstp
jne
sti
pop
lods
movs
ror
fwait
push
rcl
aas
mov
sub
adc
add
cmp
fistp
mov
pushf
(bad)
jmp
js
mov
push
xor
xchg
pushf
rcr
fs
gs
dec
popa
push
push
sbb
les
jl
add
clc
fisttp
scas
iret
sar
mov
sbb
cs
jl
and
cs
in
pop
(bad)
cmp
push
int3
rol
in
test
mov
imul
sub
jb
test
adc
lahf
push
sub
call
pop
jb
cli
sbb
jl
mov
fstp
neg
cmp
movs
push
push
fs
movs
jb
in
pop
xchg
jmp
lds
xor
push
mov
dec
scas
sub
into
dec
ds
push
fidivr
cmp
int
fwait
dec
cs
popf
pop
pop
mov
repz
div
mov
adc
inc
mov
mov
cmp
pop
test
sbb
dec
mov
sbb
leave
int3
mov
cmc
push
mov
test
mov
sub
dec
fimul
daa
jne
pop
xchg
loope
fucomip
mov
stc
out
call
into
push
test
cmps
push
mov
int3
dec
and
aam
in
movs
dec
jns
aad
int3
and
test
js
push
leave
rcl
add
ror
stc
shl
test
neg
push
pushf
std
fisubr
xlat
cmp
aas
fstp
(bad)
mov
jmp
mov
push
int
xor
adc
dec
(bad)
inc
leave
or
push
cmps
or
es
lods
add
dec
mov
seta
or
jmp
pop
mov
adc
inc
add
and
lea
jl
push
jmp
pop
scas
(bad)
jbe
pop
push
jmp
imul
adc
jns
out
aad
sahf
xchg
outs
ins
cld
inc
imul
add
es
pop
dec
mov
inc
lods
(bad)
push
cli
dec
xlat
rol
cdq
fsubr
jb
xchg
loop
xchg
scas
mov
scas
and
repz
inc
and
cs
inc
mov
out
mov
sub
mov
dec
outs
cs
mov
jmp
rcr
les
vandnps
mov
mov
gs
clc
jl
jb
out
out
mov
push
fdiv
(bad)
enter
imul
push
mov
in
es
mov
loope
fstp
adc
jno
jb
adc
xchg
xor
test
dec
shr
out
out
jne
clc
out
cmps
and
jmp
enter
ss
cmp
pop
push
cmp
movs
ror
les
ficom
cmp
lds
adc
out
inc
mov
ret
jmp
sbb
dec
shr
push
dec
pushf
(bad)
sub
push
mov
adc
dec
mov
movs
adc
call
sbb
shl
cmp
or
jg
jbe
shl
movs
jo
pop
outs
dec
out
pop
movs
lahf
sub
sbb
lock
das
int3
sbb
pop
(bad)
and
cmp
dec
sbb
std
add
xchg
mov
cmc
stc
and
hlt
inc
clc
out
mov
mov
or
arpl
add
mov
addr16
dec
imul
xchg
cs
sub
sbb
inc
inc
jg
push
mov
pusha
js
(bad)
iret
(bad)
ds
inc
sbb
xchg
or
push
arpl
inc
shl
lock
repz
pop
lahf
inc
dec
movs
imul
fnstsw
mov
cmp
mov
div
call
jnp
dec
movs
lahf
and
mov
shl
mov
inc
inc
add
push
mov
jbe
into
sub
jns
xchg
mov
mov
inc
mov
mov
aas
out
shr
dec
push
(bad)
fcmovnu
sbb
add
ficomp
repz
pop
jno
pusha
test
cmp
sub
mov
retf
jle
xchg
daa
imul
test
push
sbb
add
inc
mov
cwde
or
push
stc
int3
cmps
add
arpl
iret
jo
in
shl
inc
stos
test
sbb
mov
dec
sbb
mov
cmps
arpl
xlat
cmp
sbb
cmps
xchg
(bad)
push
mov
aas
pop
push
or
fsub
push
ins
fsub
mov
add
xor
pop
(bad)
call
in
jp
iret
pop
aaa
nop
push
rcl
jo
push
cmps
ja
test
repnz
cmp
mov
push
lods
jae
mov
push
xchg
jnp
adc
mov
pushf
jbe
shr
mov
iret
in
jo
mov
cvtpi2ps
cmp
xchg
dec
mov
nop
icebp
cmp
dec
cld
movs
pop
jnp
cmp
outs
dec
imul
mov
sub
cmp
mov
lahf
mov
or
arpl
mov
xor
jg
out
sub
xchg
pop
mov
cld
xor
test
mov
ror
outs
or
pop
pop
ja
mov
xchg
inc
xchg
cli
lock
test
leave
or
and
pop
mov
sub
dec
jns
data16
ins
push
dec
push
xlat
clc
inc
cmp
dec
jl
test
sbb
mov
cmps
push
loop
jg
ret
inc
pop
cmp
or
mov
(bad)
jmp
and
inc
test
mov
inc
es
jle
frstor
push
push
(bad)
push
jb
cwde
jle
lahf
fdivr
cmp
popa
inc
cmp
pop
ja
cmps
popf
daa
sti
and
and
push
test
and
(bad)
mov
repz
fisub
clc
lahf
and
div
jge
pop
stos
loopne
or
cmp
sub
scas
inc
cwde
clc
sub
clc
mov
dec
mov
sbb
addr16
arpl
cwde
mov
jp
or
ja
xchg
jb
xor
adc
and
imul
mov
xchg
dec
(bad)
test
xor
gs
js
dec
nop
inc
jno
adc
cmp
sub
rcr
push
icebp
push
in
pushf
add
jle
imul
repnz
cmp
aam
adc
sbb
mov
imul
nop
imul
inc
xchg
inc
mov
or
and
test
mov
rol
dec
rol
inc
inc
stos
fisub
(bad)
sub
sbb
nop
mov
sbb
add
mov
ror
jb
push
jge
imul
fstp
dec
hlt
les
xchg
repz
pusha
lock
add
jo
add
lahf
loop
int
sub
in
fcomp
dec
aaa
cmp
jl
jp
fcomi
jne
and
cdq
jmp
(bad)
iret
jp
call
(bad)
scas
mov
in
gs
cmp
inc
retf
mov
adc
fisttp
in
xchg
jno
daa
cmp
dec
in
push
shr
hlt
popf
out
sbb
aad
sbb
retf
push
icebp
mov
xchg
hlt
push
add
aaa
mov
inc
xchg
je
pop
pop
xchg
sbb
xor
sbb
(bad)
scas
ins
mov
inc
repz
out
dec
jb
pop
iret
xor
lds
xlat
xor
cli
mov
xor
mov
mov
cli
sub
lock
inc
scas
jl
fstp
cmps
inc
and
mov
xor
and
push
adc
sub
cmc
jmp
(bad)
sar
nop
fcomp
imul
xchg
repz
ins
mov
out
pusha
outs
es
fist
cmovl
mov
push
pop
rol
mov
(bad)
lods
or
inc
mov
mov
add
xchg
js
(bad)
movs
das
add
cs
sbb
jmp
inc
inc
cmp
xchg
mov
test
out
cmp
pop
xor
jnp
movs
cmp
push
mov
cli
pusha
cmps
ds
mov
(bad)
fnstsw
ror
icebp
ffree
retf
popa
push
pushf
mov
cmp
xor
out
jmp
push
or
jae
or
(bad)
sar
outs
out
mov
and
in
lea
ins
pop
add
cmp
in
xchg
lds
or
mov
and
lahf
dec
or
or
test
pop
mov
mov
mov
xchg
rcl
inc
sar
xor
bound
or
into
xchg
loope
or
mov
mov
and
ins
and
dec
inc
adc
cwde
jp
fdivr
lock
push
int
cli
inc
scas
adc
mov
mov
mov
xor
mov
clc
cmp
cmp
in
out
adc
cld
icebp
and
inc
jl
lods
in
fbstp
jne
jns
inc
ror
xchg
rcr
outs
ins
bound
xor
scas
scas
push
(bad)
sbb
mov
fs
shr
jp
pop
xlat
int3
jo
cmp
mov
jle
or
dec
jb
int
imul
imul
jp
push
sub
push
pop
mov
mov
mov
stos
std
fsub
ficomp
test
sahf
cwde
jns
mov
fnstsw
inc
es
mov
(bad)
mov
inc
aad
push
fisttp
cmc
push
push
repnz
(bad)
(bad)
shr
cmp
inc
mov
sub
jg
inc
repz
or
sub
sbb
in
mov
mov
test
sub
inc
add
cmp
sub
cmp
fild
and
ret
inc
or
shl
ins
jno
cli
xlat
pop
hlt
lahf
addr16
or
xor
aad
adc
mov
test
mov
jno
jmp
inc
push
push
mov
cwde
xchg
enter
sub
pop
out
mov
das
and
push
xchg
ins
mov
sub
jnp
mov
mov
jle
shl
cmps
fs
cdq
cmp
dec
mov
lahf
jmp
mov
addr16
sbb
xor
aad
and
rcl
ficom
jecxz
je
fisub
jae
sti
jno
sub
mov
cld
lods
fwait
xchg
ds
sbb
xchg
jbe
sub
mov
retf
sub
xor
mov
sub
test
xor
mov
or
mov
mov
and
test
fdiv
outs
dec
ja
adc
push
dec
dec
xor
loope
mov
push
mov
mov
dec
lock
fwait
jmp
into
mov
jns
hlt
fwait
cmps
mov
int3
fsub
ss
sbb
xchg
mov
in
add
mov
jp
sub
and
int
mov
aad
dec
xor
push
jnp
push
push
dec
movs
int3
mov
stos
pop
int3
xchg
pop
add
mov
jno
cmp
add
push
mov
fcomp
jbe
or
xchg
sti
(bad)
mov
retf
mov
aas
jnp
ret
in
xor
pop
jo
jno
js
or
mov
xor
aaa
or
mov
and
push
and
mov
jl
xchg
jns
push
push
pop
gs
imul
sbb
pop
jno
das
test
clc
cmp
jle
sbb
icebp
pop
dec
jecxz
pop
xchg
pop
sbb
dec
ins
pop
aam
enter
daa
pusha
cli
mov
mov
xor
(bad)
lock
and
xlat
icebp
sub
adc
xor
dec
stos
out
das
(bad)
call
push
jp
or
(bad)
stos
xlat
into
cld
in
call
push
sahf
or
movs
xchg
adc
xchg
mov
push
cmc
test
jge
pop
push
xor
ins
mov
sti
js
call
xchg
cmp
and
out
mov
retf
fnstenv
sbb
sub
dec
add
jnp
outs
mov
adc
in
adc
inc
(bad)
cli
in
mov
mov
xchg
fs
icebp
sti
pop
push
cmc
aaa
xchg
push
cs
jp
cdq
xor
inc
jmp
dec
dec
out
dec
jb
mov
xor
adc
pop
clc
sub
test
lea
ja
push
xchg
jl
xchg
sbb
leave
mov
mov
pop
jge
adc
pop
dec
sbb
mov
mov
test
sub
xchg
push
push
dec
mov
pop
dec
sub
pop
mov
cmp
out
das
xchg
mov
in
sbb
inc
mov
arpl
jmp
gs
mov
std
push
movs
or
gs
xchg
cld
inc
sub
jnp
jno
nop
test
sbb
jmp
cs
or
imul
loop
inc
rcl
mov
mov
je
pop
int
scas
inc
fld
xlat
iret
jle
test
inc
(bad)
int3
push
jecxz
add
aad
pop
popa
test
add
rol
jp
pop
test
int
test
mov
daa
dec
dec
loope
inc
pop
inc
(bad)
mov
jmp
scas
and
cmps
jb
xor
mov
int3
call
call
rep
jg
shl
cs
mov
dec
stos
inc
lahf
scas
mov
jno
cmc
push
aaa
and
ss
mov
xor
(bad)
lea
retf
cmp
das
add
stos
sub
sub
(bad)
jecxz
fwait
dec
pusha
pushf
(bad)
mov
test
int3
aam
(bad)
sbb
ja
stc
jno
aaa
jne
jmp
int
mov
imul
enter
sbb
xor
dec
repz
jae
in
xchg
hlt
stos
lds
stos
aam
sbb
test
mov
mov
push
xchg
xchg
push
mov
push
mov
sbb
add
dec
push
or
into
mov
push
jmp
fdivr
adc
in
xor
sbb
cmp
cmps
(bad)
xlat
jmp
das
out
ret
popf
jnp
ins
es
sub
pop
das
mov
mov
push
gs
jae
xchg
js
fs
(bad)
in
fnstcw
jp
repz
sbb
ins
ja
and
lea
xchg
lods
test
shl
mov
pop
dec
mov
and
xchg
dec
test
mov
and
xchg
loop
scas
add
dec
push
mov
retf
cmps
mov
lods
xchg
inc
xchg
(bad)
rcpps
outs
cmp
sub
mov
jmp
add
cld
mov
fmul
cmps
inc
jge
(bad)
mov
cmps
mov
inc
pop
push
pop
out
(bad)
mov
mov
test
dec
mov
sub
loope
gs
jl
xchg
ror
inc
inc
popa
sbb
pop
and
xchg
jns
in
(bad)
inc
xor
cmp
int
sti
test
loopne
and
sbb
or
js
pop
cmc
js
push
or
movs
and
push
mul
popf
std
mov
cmp
ss
loope
cmp
sub
jo
xor
lods
sub
loope
frstor
add
jmp
rcr
repz
cmp
inc
push
dec
jecxz
in
ja
push
adc
push
add
mov
dec
mov
stc
pop
inc
bound
repz
out
mov
pop
je
out
add
inc
ret
lock
mov
or
lds
or
es
data16
out
xchg
sahf
aas
sbb
pushf
ret
iret
and
mov
js
or
mov
inc
aam
push
mov
push
mul
fdiv
es
xchg
std
add
(bad)
sbb
adc
aad
clc
pop
sbb
dec
je
mov
retf
dec
mov
enter
jb
push
int3
xor
daa
hlt
into
jbe
aaa
test
fcom
xchg
ins
cld
ret
test
iret
enter
jnp
dec
mov
pavgb
repnz
push
call
ret
pop
ins
test
jae
jle
popf
(bad)
int
(bad)
aam
ja
xchg
mov
inc
test
cmp
pop
addr16
or
add
cmp
mov
cmps
shr
leave
sti
popa
push
(bad)
xor
shl
adc
mov
dec
test
scas
ret
stos
sub
dec
adc
sbb
outs
add
sbb
sbb
jo
cmc
add
outs
adc
sti
xor
jbe
add
outs
jne
imul
lahf
mov
aam
xchg
mov
test
dec
das
sbb
sub
jno
dec
shl
inc
pop
stos
cmp
fadd
les
mov
push
fistp
xchg
push
scas
sub
cmp
std
mov
push
fwait
xchg
xor
or
out
jns
and
fadd
das
push
cmp
std
pop
mov
imul
fiadd
xor
nop
sub
xchg
call
adc
(bad)
pop
loopne
outs
shl
fldcw
inc
aam
adc
repnz
scas
rcr
push
inc
or
add
into
enter
push
xchg
das
cld
in
es
neg
xchg
in
cmp
push
push
shl
repnz
retf
popfw
mov
les
(bad)
shr
push
lods
and
mov
lock
loope
hlt
movs
sub
movs
xchg
sbb
daa
push
pop
fwait
daa
int3
sbb
addr16
mov
sub
xchg
sbb
cmp
cmps
ret
sbb
(bad)
jne
cmp
pop
push
or
fcomp
cmc
fdivr
add
out
test
cld
cli
(bad)
inc
movs
idiv
les
(bad)
mov
sbb
xchg
(bad)
jmp
mov
add
pop
fild
push
xchg
cmps
rol
adc
std
imul
mov
pushf
pop
pushf
xchg
mov
adc
inc
xlat
or
jmp
sub
dec
out
daa
(bad)
inc
test
addr16
jmp
xlat
jecxz
inc
mov
jb
retf
sti
bound
pusha
sub
jmp
int
das
jae
push
xor
mov
jl
sub
nop
mov
pop
test
mov
outs
xchg
cmp
dec
pushf
arpl
xor
adc
out
bnd
xchg
fs
inc
fs
mov
adc
lods
fcom
mov
mov
adc
xlat
(bad)
jmp
int
mov
jg
sub
sbb
xchg
xor
mov
icebp
ds
mov
mov
jmp
jl
sub
adc
test
test
xor
jl
bound
lods
(bad)
mov
stc
ja
dec
xchg
stos
sbb
into
jle
in
mov
cmp
mov
inc
inc
sbb
mov
cwde
add
(bad)
data16
xchg
mov
fnstcw
adc
cwde
and
movs
fs
mov
scas
xchg
adc
(bad)
lods
adc
xchg
adc
cmp
push
loope
test
dec
test
aad
out
(bad)
xchg
into
jae
(bad)
cmp
mov
adc
cmc
rcl
sub
jbe
mov
call
mov
imul
lods
sbb
jmp
adc
cmp
mov
in
or
add
mov
mov
or
pop
add
mov
repnz
xchg
mov
fld
xor
push
jmp
imul
adc
out
pop
movs
jp
das
in
test
xor
jle
add
nop
add
mov
clc
and
dec
clc
ss
push
xor
pop
rcr
sub
cmps
jbe
loop
rcl
push
jmp
(bad)
ss
loopne
pop
test
(bad)
pop
xchg
adc
aaa
bound
jb
shr
enter
mov
mov
stos
adc
push
es
int3
rol
retf
cld
add
adc
adc
cli
fwait
repz
data16
das
loop
mov
repz
loop
pusha
push
aad
ss
or
and
push
rcl
mov
push
scas
xor
imul
sub
in
fiadd
push
(bad)
jns
inc
sub
(bad)
ss
lods
scas
pop
ret
jae
aas
hlt
cmps
jbe
(bad)
stc
pop
fisttp
mov
inc
jmp
(bad)
push
sub
aaa
pop
cmps
aam
fidiv
hlt
loopne
jg
mov
mov
pop
mov
jo
jg
or
lods
rcl
jnp
pop
jnp
sbb
xchg
mov
pop
popa
pop
in
jns
inc
js
sbb
out
push
xor
sbb
inc
push
cmps
xor
sub
sbb
and
inc
mov
xchg
and
push
mov
push
fs
mov
enter
in
lea
dec
fstp
and
ins
sahf
xchg
adc
sbb
outs
push
loope
dec
pop
or
mov
lods
sbb
jmp
sbb
dec
xlat
mov
sub
push
xchg
and
xchg
and
mov
fistp
loop
mov
pop
jo
mov
mov
retf
in
push
lock
shr
mov
retw
push
xchg
or
imul
aas
add
push
pop
ret
(bad)
jg
and
dec
shl
cmc
mov
mov
aaa
ins
lods
sbb
aam
sar
xchg
jle
aad
dec
sub
inc
push
cmp
sbb
stos
bound
and
inc
mov
test
lds
fst
test
js
stc
shl
push
sub
scas
inc
out
sub
(bad)
mov
cli
adc
and
les
adc
push
js
loopne
lea
dec
inc
shl
add
cli
cmp
aas
push
and
sbb
add
das
daa
outs
mov
add
xchg
jmp
(bad)
jmp
mov
xchg
mov
stos
dec
ja
in
mov
jmp
int3
inc
jecxz
xlat
xchg
jmp
jp
inc
xor
xlat
rol
push
add
adc
inc
or
xor
nop
not
fimul
sbb
les
cmps
fidiv
mov
add
jbe
std
mov
mov
addr16
mov
or
jg
dec
aas
jge
sbb
js
sub
addr16
das
cli
or
mov
mov
lods
call
mov
adc
mov
push
shl
cmp
pop
xor
daa
push
pop
sbb
xor
ror
enter
cmc
adc
dec
arpl
jbe
cdq
dec
cmc
loopne
mov
outs
bound
outs
jp
das
push
ret
xchg
or
cli
mov
lahf
push
jecxz
adc
dec
push
shl
push
add
mov
cmp
mov
jle
push
arpl
ret
in
aas
or
inc
push
jns
dec
mov
and
imul
push
mov
fisubr
icebp
jne
daa
ud1
sub
jnp
push
ds
jmp
push
mov
pop
or
test
add
repnz
icebp
(bad)
jmp
lock
mov
mov
cmps
fsub
push
dec
or
mov
cmp
sub
cmp
xor
lds
movs
xor
outs
sar
xchg
call
mov
dec
das
in
aas
(bad)
scas
mov
pop
lods
jp
sub
ficomp
sub
in
jmp
sub
mov
mov
int3
jecxz
and
xchg
scas
retf
jp
xchg
cmps
movs
pop
sub
scas
ins
pop
cdq
sub
cdq
add
popf
pop
pusha
mov
push
adc
imul
add
xlat
push
lods
fmul
ret
(bad)
or
test
adc
mov
xor
scas
pop
dec
pop
stos
test
push
sub
mov
cwde
outs
sub
sar
mov
addr16
and
call
cli
add
xor
loop
pushf
sub
jbe
jne
hlt
mov
add
push
cdq
xchg
outs
loope
mov
shl
out
sbb
ror
test
sub
mov
fwait
ss
jge
sub
and
idiv
adc
mov
or
out
fstp
ret
xchg
popf
and
in
pushf
jmp
mov
pop
mov
pop
sub
push
in
clc
mov
stos
imul
sbb
std
repnz
and
mov
test
in
mov
test
lods
xor
pop
aas
ficomp
mov
repz
cmp
rcl
gs
push
hlt
retf
xlat
pcmpgtw
in
lock
push
sub
pop
add
je
pop
lods
lahf
stos
fisub
fnstcw
xchg
ins
sahf
cmps
mov
movs
jae
das
repz
adc
mov
push
ins
out
aad
(bad)
adc
aaa
test
ja
and
into
and
xor
call
adc
jne
inc
mov
dec
test
push
cmps
and
push
gs
xor
cmp
sub
jmp
cli
out
cli
fmul
push
ins
add
hlt
mov
mov
hlt
fistp
push
call
lahf
frndint
pusha
sbb
(bad)
jge
cli
jno
mov
pusha
mov
inc
out
popf
xchg
out
sbb
dec
bound
adc
jle
mov
inc
adc
int
inc
xlat
daa
jecxz
xchg
adc
shl
add
add
pushf
scas
mov
fistp
sahf
mov
xor
pop
shr
sbb
outs
cmps
dec
adc
and
fdiv
xor
push
jmp
retf
or
sbb
pop
repnz
and
cs
ds
retf
cmp
xor
sub
addr16
adc
test
mov
xchg
dec
pop
jbe
dec
cmps
inc
push
popf
in
aam
xchg
push
imul
mov
xor
push
cdq
dec
mov
addr16
mov
arpl
xchg
pop
cwde
pop
cmp
fsubrp
repnz
inc
pop
ret
sub
dec
fild
pop
jno
push
jno
enter
sbb
mov
or
addr16
mov
aad
sub
imul
add
or
in
retf
or
test
gs
shr
push
add
add
push
or
stos
dec
aas
loope
adc
bound
inc
rol
jb
fld
push
pop
add
xor
sub
adc
sbb
push
xor
in
cmp
daa
sub
js
test
pusha
mov
xchg
movs
das
enter
jmp
pop
sub
mov
popf
lock
cmp
adc
shl
fist
mov
(bad)
pop
push
jl
add
adc
fisttp
xor
lods
mov
pop
mov
and
repnz
dec
iret
in
scas
xchg
push
fs
mov
pushf
lods
test
jne
cmp
movs
jg
stos
push
jp
xor
(bad)
lods
or
cmp
(bad)
ss
cmp
or
stc
pop
xchg
ins
loopne
xor
or
outs
enter
push
out
dec
sub
push
es
and
jnp
in
enter
outs
push
fdiv
lock
mov
push
and
dec
lock
mov
test
xchg
xor
mov
add
out
loopne
jo
mov
dec
mov
lahf
add
mov
mov
enter
(bad)
add
mov
pop
test
cmp
aad
jae
sbb
imul
push
mov
test
sbb
or
pop
mov
rcr
xlat
stos
pusha
or
(bad)
enter
ror
dec
sub
imul
ds
arpl
push
daa
je
sub
xlat
adc
xor
out
int3
out
xchg
ror
inc
adc
ins
popf
pop
jle
call
sar
push
ja
jecxz
mov
ficom
dec
inc
dec
mov
adc
pop
arpl
movs
loopne
mov
jnp
pop
jle
fdivr
mov
push
mov
outs
jns
mov
pop
fcomi
movs
push
cmp
in
pop
popf
dec
dec
mov
or
in
mov
(bad)
mov
loop
aad
push
fist
ins
add
xchg
imul
pop
out
cmp
jbe
push
push
cmp
cmp
cmp
cmp
push
in
test
or
fisub
jbe
pop
inc
movs
sbb
mov
dec
sbb
cs
add
xlat
fnstcw
fwait
test
mov
(bad)
xor
jmp
popf
stc
rcr
mov
dec
sbb
not
cdq
xlat
inc
pop
cld
les
inc
mov
in
into
ret
in
mov
jl
pop
inc
mov
pop
sahf
push
sbb
mov
or
dec
test
cli
mov
inc
pop
adc
xor
add
mov
sbb
ins
loopne
cmps
or
clc
mov
scas
cmp
push
stos
sbb
mov
xchg
pop
push
xchg
retf
mov
inc
loop
(bad)
out
shl
gs
cld
(bad)
pusha
cmp
sub
aad
inc
jmp
str
ret
pop
add
mov
mov
mov
dec
out
xchg
cmps
inc
mov
ja
aad
sub
into
jmp
lea
lahf
cmp
mov
(bad)
hlt
movs
push
fadd
cmp
rol
inc
ret
or
pushf
sti
imul
pop
les
pop
loop
leave
or
movs
aam
nop
shr
cmp
movs
into
jae
jge
mov
cli
adc
aam
sub
aas
jae
movs
and
jecxz
push
cmp
jle
imul
inc
rcr
inc
sub
ficomp
cmps
js
mov
mov
out
add
cmp
rcr
clc
mov
adc
add
or
jmp
xchg
add
xor
mov
and
gs
push
aam
add
sub
xchg
adc
mov
push
sbb
fndisi(8087
movs
push
(bad)
push
pop
adc
adc
xchg
dec
bnd
mov
pop
ficom
imul
iret
xlat
cmp
fild
lock
dec
cmc
out
cs
enter
sbb
sbb
rcr
cmp
test
(bad)
repz
jmp
dec
int
movs
inc
imul
into
call
shl
xchg
test
dec
cdq
mov
jbe
sub
fisubr
sub
jb
adc
push
push
inc
xchg
pop
or
mov
sub
jmp
iret
jns
xor
push
lds
icebp
sbb
lods
push
ficomp
jbe
into
xor
mov
scas
sbb
pop
popa
ror
bound
lods
push
and
xor
pop
aam
xchg
push
dec
jbe
dec
hlt
push
sahf
ins
mov
nop
dec
xchg
add
adc
xchg
jno
mov
mov
jno
lahf
add
cmp
xchg
push
(bad)
aaa
ins
and
pop
mov
rol
fadd
cmp
pop
jg
clc
mov
jne
jg
xor
mov
hlt
add
cmps
adc
test
es
movs
movhps
mov
jmp
sbb
pop
add
ins
out
cmps
mov
mov
mov
in
add
mov
or
int
or
rol
dec
jle
cmp
in
mov
pop
xor
data16
bound
rcl
icebp
pop
popf
jae
and
push
sub
cmp
fs
jno
shl
lea
sbb
mov
ds
js
ss
in
out
loopne
ss
sahf
les
pop
mov
inc
cmp
jo
add
mov
fucomp
aaa
jb
cwde
aad
ds
xchg
adc
sbb
cli
cmp
lods
call
in
mov
imul
stc
xchg
cmp
mov
test
lea
dec
xor
in
xchg
inc
repnz
(bad)
pop
fnstsw
movs
mov
mov
mov
aas
sbb
loopne
sar
ficomp
add
pop
push
das
sub
sbb
mov
aad
inc
lods
imul
lods
add
jg
push
pushf
mov
and
(bad)
into
ss
scas
lods
mov
loope
int3
mov
sub
jmp
adc
test
dec
or
hlt
arpl
xor
test
or
retf
lock
push
scas
nop
mov
push
enter
mov
fwait
retf
inc
fimul
scas
sahf
imul
push
(bad)
mov
xlat
pop
and
movs
(bad)
loopne
xor
pop
enter
paddusb
mov
xchg
fwait
xlat
shl
sahf
popa
stc
inc
retf
daa
(bad)
icebp
lds
mov
(bad)
mov
cmps
mov
(bad)
ds
ret
hlt
repz
sar
dec
(bad)
push
clc
out
push
adc
inc
(bad)
fcmove
jp
arpl
leave
add
pushf
mov
dec
cmp
into
ins
and
int
inc
lahf
jg
scas
fdiv
mov
jo
jmp
cwde
lods
jp
sbb
xor
loop
in
cmp
cmps
adc
mov
sbb
adc
mov
jo
pop
lods
scas
jmp
and
pop
sbb
dec
mov
ss
xchg
cmp
imul
ds
pop
dec
jne
or
sub
stos
out
rcl
stos
push
add
pusha
mov
daa
shr
adc
pop
cli
push
push
pop
(bad)
push
ret
jecxz
mov
popa
jge
fs
mov
icebp
push
dec
popa
shl
lahf
add
push
add
cmps
test
push
out
(bad)
retf
jb
cmp
mov
ds
mov
mov
sub
add
jne
scas
pop
inc
cwde
sahf
inc
xchg
rcr
stos
call
xchg
mov
xchg
or
cmp
ror
inc
push
mov
out
out
int3
add
nop
mov
dec
fstp
or
data16
int
jae
cmp
addr16
xor
adc
xchg
lods
adc
pop
rcl
repz
fistp
pop
inc
sub
ror
stc
jnp
aad
cld
add
shr
mov
leave
enter
mov
mov
sub
(bad)
fbstp
and
mov
sbb
(bad)
scas
(bad)
in
cwde
dec
pop
fmul
mov
retf
(bad)
ret
pop
xor
outs
sub
and
js
inc
stos
cli
mov
mov
xor
lods
xchg
inc
or
lock
mov
jle
cmp
cs
(bad)
xchg
enter
loope
(bad)
xor
push
or
push
inc
sub
loope
mov
mov
ror
xor
aaa
xlat
sbb
bound
shr
imul
dec
js
mov
adc
xor
std
jle
xchg
xchg
sbb
xchg
outs
xchg
lahf
jp
(bad)
inc
movs
jo
adc
lods
jmp
into
das
movs
xchg
aaa
iret
dec
push
sar
add
cmps
call
idiv
leave
xor
lds
dec
dec
adc
test
push
ins
sub
cmp
jne
mov
sbb
movs
dec
and
(bad)
fild
push
cmp
push
xchg
cmp
(bad)
dec
rcr
dec
push
dec
jne
add
ret
pop
fcmovnu
cdq
jne
and
dec
push
fldenv
ret
adc
lea
out
aad
scas
fsubr
xchg
iret
dec
das
gs
add
jae
push
pop
lea
idiv
out
jge
(bad)
xor
in
push
retf
stos
jp
scas
jo
(bad)
test
or
fmul
das
adc
shr
std
or
repnz
cwde
mov
xor
pop
jecxz
push
fwait
push
test
adc
sti
mov
push
jle
cmp
mov
sub
push
fstp
inc
xor
xor
add
mov
adc
imul
inc
jns
sub
jmp
div
aad
loope
add
stc
mov
sub
repz
fmul
std
stos
adc
adc
inc
adc
cdq
adc
pop
or
sub
inc
sub
rcl
and
ins
push
les
aad
xchg
shl
adc
ja
inc
scas
fwait
ror
jnp
outs
push
cli
cmp
test
jge
cli
inc
rcl
scas
in
clc
adc
test
add
es
mov
add
fld
mov
(bad)
adc
push
loope
jmp
adc
stos
ss
xor
les
mov
adc
mov
ja
pushf
add
xor
push
mov
in
cmp
xor
xchg
or
push
icebp
and
es
jecxz
xchg
nop
rol
add
inc
dec
ficom
sub
popa
mov
dec
ret
mov
xchg
mov
(bad)
cdq
sub
or
(bad)
pop
ins
cmps
dec
out
ret
add
out
xchg
or
es
ror
mov
and
pop
sbb
and
pop
mov
pusha
jne
sbb
ret
lods
loopne
add
arpl
cmovns
aad
inc
lods
jmp
jb
jbe
(bad)
mov
mov
das
mov
(bad)
call
leave
sbb
mov
into
mov
dec
data16
in
(bad)
hlt
mov
push
add
pusha
mov
or
fsubrp
shl
and
adc
scas
pop
add
aad
mov
xchg
dec
cwde
ins
div
shl
push
inc
cs
fs
mov
push
adc
outs
cmp
dec
gs
jg
js
data16
pop
test
int
jno
cli
pop
es
sub
xor
jecxz
cmp
and
xlat
ja
fs
mov
dec
sbb
ja
jge
xchg
xor
pop
jns
pusha
outs
inc
jle
sub
aas
leave
jg
ret
xor
mov
in
enter
clc
sub
add
push
sub
ds
test
in
test
xchg
adc
xor
fstp
dec
arpl
inc
gs
stos
jecxz
loope
call
add
clc
jne
xchg
and
ja
push
scas
push
adc
les
ficomp
stos
(bad)
rol
xchg
xchg
sar
cld
and
fnstsw
sub
mov
in
sub
xor
sub
pop
dec
xor
sub
push
lods
xor
fcmovnbe
mov
or
(bad)
aam
inc
mov
outs
lods
rcr
xchg
lods
stos
bound
sub
lds
dec
xor
add
(bad)
jecxz
out
xchg
push
mov
mov
icebp
mov
frstor
pop
mov
and
fs
pop
(bad)
mov
push
pop
sub
pop
push
sbb
and
pop
mov
or
add
(bad)
jg
and
aam
mov
fs
ja
movs
sbb
xchg
loopne
inc
xor
pop
push
mov
mov
jne
popf
mov
add
sub
mov
or
std
mov
scas
xchg
fs
cmp
test
outs
cmp
outs
ins
xchg
xchg
aas
daa
jbe
xor
adc
xchg
pop
xchg
pop
jns
dec
call
or
out
cmp
call
aad
ins
xchg
aas
xchg
ficom
mov
in
(bad)
rcr
imul
adc
das
div
test
add
cmp
pop
or
dec
rol
out
sbb
add
or
mov
test
in
or
outs
xor
jl
sbb
xor
int
mov
cli
sbb
dec
(bad)
repz
call
push
in
xor
or
jns
sub
sbb
int3
dec
push
das
cmp
sahf
jne
jl
fmul
jo
shr
xor
dec
stos
xchg
push
addr16
jbe
imul
pushf
push
loop
add
add
into
jno
imul
sbb
iret
mov
and
dec
retf
outs
std
mov
jecxz
clc
adc
jno
xchg
pop
jl
and
ror
stos
in
push
add
in
xchg
sub
and
cmp
loop
pop
xchg
call
and
jmp
mov
fdivr
test
aaa
mov
mov
xor
sahf
sub
dec
inc
and
sti
mov
inc
rcr
add
xchg
loop
in
ret
cmp
(bad)
call
ins
fsub
sub
fwait
and
pop
xor
xor
sub
xor
cmp
aam
loop
or
xchg
cmp
cmp
call
in
mov
(bad)
hlt
icebp
mov
xchg
repz
sub
sbb
fmul
sbb
and
repz
cmc
jge
(bad)
inc
cmps
stc
cmc
es
out
not
pop
inc
pop
dec
test
jb
xchg
xchg
les
stos
push
jle
addr16
dec
mov
scas
cmp
sbb
out
loop
push
retf
jge
mov
lahf
sub
jnp
fs
fs
imul
repnz
test
sbb
scas
mov
data16
pop
xor
jae
xchg
cdq
cmovnp
lea
(bad)
mov
mov
sub
jg
imul
in
pushf
loope
dec
bound
push
sub
hlt
xchg
loop
aaa
cmp
or
out
ss
push
jle
mov
(bad)
inc
int3
mov
(bad)
cmps
ffree
cli
mov
inc
jns
outs
adc
cli
clc
push
gs
sub
xchg
(bad)
fwait
(bad)
stos
xlat
jne
jge
std
inc
inc
xor
loopne
add
mul
test
ja
xchg
sbb
call
clc
push
stc
add
adc
in
mov
in
sub
fisub
inc
es
mov
not
jmp
sti
sub
xchg
inc
mov
push
repnz
jecxz
mov
stc
scas
neg
(bad)
pop
loop
cmps
in
cdq
sar
pop
or
cld
loope
pop
fcmovbe
call
xor
(bad)
test
repnz
mov
repz
clc
inc
cmc
mov
mov
and
lds
sbb
test
mov
jp
ins
xchg
es
lea
rcr
jl
ficomp
test
mov
or
(bad)
in
sbb
das
fimul
or
add
jno
xchg
dec
test
jmp
lock
retf
xchg
retf
fmul
mov
xchg
mov
adc
stc
or
stc
add
mov
shr
xchg
mov
adc
dec
shr
and
ja
xlat
mov
cmp
lds
push
mov
cli
test
push
(bad)
stc
pop
or
imul
jmp
aam
loopne
(bad)
into
std
mov
pop
and
mov
js
retf
jbe
dec
es
(bad)
jp
xchg
cmp
jno
es
inc
mov
xchg
retf
xchg
inc
jnp
push
arpl
xchg
(bad)
cmp
xchg
mov
push
cmp
push
jo
inc
out
scas
jg
add
xchg
test
pushf
aaa
xchg
adc
outs
sub
aam
ja
add
into
pop
inc
outs
or
cli
inc
shl
pop
test
mov
dec
jmp
jno
in
leave
or
daa
loopne
push
shr
aas
dec
clc
repz
lds
dec
call
mov
pushf
inc
in
mov
cmp
or
out
push
and
or
rsm
pop
sbb
in
xor
sbb
push
xor
cli
lods
scas
retf
push
dec
daa
enter
test
fsubr
add
sbb
inc
ins
and
jne
stos
test
inc
mov
cs
push
adc
jecxz
xchg
es
xor
ret
cmp
sbb
idiv
mov
retf
xchg
or
jns
lods
test
mov
jg
jl
inc
fcmovne
or
mov
movs
pushf
stos
clc
mov
push
sbb
sbb
adc
add
repnz
inc
fisub
lods
ficom
cmc
mov
fnstcw
inc
dec
je
and
(bad)
adc
and
push
xlat
and
adc
xchg
inc
xor
dec
outs
jmp
dec
push
mov
jne
pop
frstor
lahf
(bad)
sar
js
popa
sbb
(bad)
inc
outs
dec
inc
sub
dec
pop
iret
mov
repnz
aaa
fcomp
dec
in
or
mov
xor
dec
outs
xlat
pop
or
les
and
fmul
test
cmp
mov
jo
das
leave
xor
xlat
ret
scas
dec
push
fadd
pop
shl
mov
cmc
sub
fdiv
mov
imul
or
outs
sbb
cmp
(bad)
mov
cvtps2pi
cmp
clc
jge
pminub
or
pop
aaa
ror
das
mov
cmp
sbb
es
pop
sub
jo
mov
push
mov
xchg
sbb
repz
fcomp
je
jae
ret
cdq
aad
lahf
stc
int3
jmp
xchg
push
add
out
(bad)
pop
lds
scas
mov
cli
dec
cli
pop
sbb
xchg
and
repz
mov
fs
imul
cmps
xchg
cmps
test
repz
std
mov
mov
pop
sub
daa
call
xchg
in
mov
cmp
pop
dec
das
imul
adc
(bad)
sbb
pop
idiv
pop
jg
stos
or
sub
mov
adc
adc
mov
fcmovne
jb
sub
dec
mov
adc
push
xor
cmp
imul
movs
add
stos
int3
stc
mov
xor
scas
aad
push
inc
cmps
push
adc
mov
out
scas
imul
iret
movs
scas
jp
pop
inc
nop
adc
stos
call
cmps
xchg
mov
add
data16
cli
mov
test
pop
jbe
int3
and
jmp
or
jno
cmp
aam
dec
mov
adc
or
aaa
push
or
jbe
xchg
imul
fild
mov
mov
(bad)
addr16
stos
pop
aad
xchg
cli
sub
sub
pushf
adc
jg
mov
push
xchg
or
clc
cmp
push
mov
fdivr
aad
pop
cld
ds
mov
push
dec
popf
bound
stos
pop
add
add
fldcw
jno
cmps
out
xchg
outs
es
std
ret
cmp
jp
mov
mov
jg
mov
push
dec
scas
cmps
jl
stc
(bad)
rcl
aad
sub
enter
sbb
cs
pop
(bad)
xchg
cmps
fwait
mov
dec
and
in
sbb
add
sar
mov
ins
jge
ds
cld
dec
or
call
xchg
sbb
push
imul
mov
and
inc
(bad)
sbb
mov
or
jbe
mov
sub
cdq
adc
cdq
pop
leave
pop
movs
mov
aaa
or
frstor
nop
sub
pushf
pop
and
push
xor
sub
movs
push
dec
and
test
mov
(bad)
sub
aam
jo
jmp
cmovno
push
mov
loop
or
sti
test
shl
fwait
sbb
int3
xchg
scas
xor
mov
ja
ret
mov
lods
inc
push
cmp
and
xchg
inc
sbb
jns
jns
ds
mov
jmp
pop
push
ret
pop
jno
pop
rcr
mov
je
out
es
adc
inc
mov
(bad)
out
and
shr
out
mov
or
cld
dec
cmps
sbb
out
(bad)
lds
cwde
mov
test
adc
pusha
daa
cmc
aam
test
call
jnp
mov
out
stc
lea
dec
adc
ins
sbb
cmps
dec
mov
ins
les
mov
xchg
(bad)
mov
inc
mov
cld
cwde
pop
push
pusha
aam
test
in
(bad)
loopne
bnd
ror
mov
popf
mov
mov
cld
cmps
popf
cmps
pop
jbe
jle
addr16
and
jo
mov
out
inc
int
cwde
out
pop
and
cmp
sub
es
push
(bad)
call
icebp
push
xor
pop
mov
das
xchg
push
out
js
stc
imul
in
mov
(bad)
call
aad
adc
(bad)
in
jle
scas
sysret
and
push
mov
push
imul
cmp
out
xchg
and
add
sbb
ds
out
jb
inc
(bad)
pusha
mov
push
shl
mov
(bad)
into
mov
dec
ins
popa
(bad)
pop
fbld
sahf
cmc
lock
mov
cwde
pushf
mov
and
bound
out
jnp
jle
les
mov
sub
bound
dec
call
adc
pop
jbe
or
cli
inc
test
or
xchg
loope
mov
sub
mov
into
or
mov
push
cmps
repz
dec
jo
lods
pop
inc
pop
sbb
inc
std
pop
mov
inc
fs
sub
mov
test
adc
xor
pusha
popf
outs
jno
stc
add
aaa
mov
sbb
jb
fiadd
push
push
xor
add
jle
sbb
fisubr
jp
in
or
stos
loopne
sub
leave
adc
ins
dec
ficomp
xor
enter
xor
in
in
cmp
xor
or
in
shr
xor
and
les
inc
pop
inc
test
mov
jecxz
sbb
jnp
fmul
push
mov
(bad)
shr
dec
mov
mov
jo
or
mov
fs
and
ins
int
jmp
loop
push
dec
mov
sbb
adc
push
fisubr
pushf
or
and
push
leave
jb
mov
loop
mov
aad
cdq
push
dec
test
test
out
pop
mov
iret
nop
out
je
call
shl
mov
retf
pop
out
lahf
inc
clc
adc
data16
dec
mov
enter
pop
push
xchg
pop
mov
mov
cmps
(bad)
test
ins
mov
xor
dec
dec
xchg
ins
rcl
push
daa
iret
push
or
add
sbb
mov
push
pop
(bad)
dec
xchg
inc
data16
scas
xchg
and
out
dec
movs
adc
in
inc
mov
jae
shl
xor
repz
cmps
or
pusha
fst
jge
jb
pusha
dec
rcr
repnz
add
outs
cli
loop
push
mov
imul
inc
ds
mov
cmc
jl
lods
and
movs
bound
loope
dec
out
or
call
push
lods
and
mov
jae
lods
aad
add
fdiv
aam
cmps
ja
into
or
jmp
cmp
mov
retf
push
mov
mov
mov
inc
fcom
jnp
mov
(bad)
adc
in
jmp
lds
xchg
xor
fst
lea
or
adc
dec
jae
gs
div
aam
sub
out
fimul
pusha
xchg
pop
in
mov
dec
hlt
push
xor
loopne
or
fdiv
cmp
std
mov
xchg
lds
cmps
movs
push
mov
arpl
jp
xor
gs
in
pop
and
in
push
movs
aam
movs
sub
(bad)
inc
push
mov
xor
jbe
inc
jge
dec
add
jg
push
xor
add
sbb
neg
add
les
mov
dec
aaa
mov
lods
or
sub
mov
mov
ja
mov
call
int
in
mov
out
imul
sbb
push
cmp
retf
inc
push
sbb
mov
push
stc
xor
cmp
jae
push
mov
enter
ja
shl
sbb
pop
lods
mov
xchg
xchg
shr
push
jmp
inc
inc
cmp
jbe
movs
xchg
adc
popf
pop
xor
mov
xchg
test
pushf
shr
fild
lea
mov
adc
ret
in
mov
mov
jmp
retf
dec
retf
mov
dec
mov
fsubr
push
jle
test
lods
lahf
xchg
ja
sbb
sbb
movs
lahf
cmp
mov
adc
mov
aam
or
lods
xlat
push
adc
test
movs
xchg
sbb
mov
sbb
sbb
scas
or
popa
lock
fiadd
shl
fdiv
sub
cmp
cli
or
jbe
xlat
fisttp
outs
jns
push
fstp
rol
add
cmps
stos
and
sbb
dec
jbe
push
imul
bnd
jmp
push
test
ret
push
lahf
data16
and
outs
cdq
or
push
popf
sub
or
aad
push
pop
or
jbe
ins
imul
icebp
das
fsubr
dec
xchg
aam
add
js
scas
out
call
repnz
jne
retf
adc
add
xor
or
(bad)
fistp
repnz
aas
fcmovbe
add
movs
div
jle
test
and
push
cmc
push
push
shl
jae
rcl
push
leave
shl
mov
scas
popa
add
mov
(bad)
push
fadd
adc
scas
xchg
mov
sub
shl
mov
jmp
aad
pop
add
movs
call
xchg
popf
mov
add
stc
mov
mov
inc
iret
int
mov
jno
and
neg
fiadd
jo
das
dec
(bad)
int
pop
fcomp
and
and
mov
enter
fcom
data16
repz
call
(bad)
xor
mov
mov
call
mov
cmp
fsub
add
jo
pop
dec
xor
lods
mov
imul
add
inc
gs
cmps
add
fcomi
ins
leave
js
xchg
(bad)
sti
push
dec
iret
dec
(bad)
je
jnp
out
mov
daa
xor
pop
cmp
(bad)
cwde
cmps
fsubp
mov
mov
or
jno
push
aam
ss
aaa
mov
adc
jmp
dec
jle
cmp
xlat
dec
outs
adc
sbb
fistp
dec
mov
inc
addr16
pop
inc
xchg
pop
gs
scas
inc
xlat
cmp
sub
in
and
into
cmps
repnz
push
retf
stos
fcmovbe
loope
jg
lods
fnstenv
cmp
in
pop
ds
push
or
mov
rcr
ret
or
push
ret
mov
push
jno
test
sbb
fs
mov
fidivr
add
mov
ds
push
pop
or
sub
stos
scas
in
movs
push
movs
jno
or
cmps
mov
sbb
mov
leave
jmp
mov
repnz
stc
xor
fcomp
dec
lea
cld
mov
pop
das
xchg
inc
push
or
cmp
inc
jnp
clc
sar
xchg
retf
test
jb
ds
push
or
xchg
sar
loope
call
ror
outs
popf
add
jb
adc
xor
pop
jns
(bad)
jge
xchg
cdq
in
mov
adc
(bad)
and
push
fimul
arpl
je
adc
lock
cmp
mov
lock
sar
mov
jno
push
or
sbb
jo
fdiv
cmp
or
int
outs
pop
test
xlat
jns
sbb
and
imul
pop
mov
add
mov
and
retf
adc
(bad)
mov
add
jg
fst
cs
inc
mov
xchg
xor
imul
cwde
test
retf
mov
push
ins
cmp
loope
and
pop
xchg
aas
sbb
mov
jno
outs
xor
add
mov
jne
push
cs
xchg
pop
retf
call
inc
sub
cmp
sbb
cmp
mov
jb
jnp
dec
nop
mov
popa
pop
fnstcw
jbe
pop
sbb
dec
and
xrelease
and
and
and
ror
dec
test
or
data16
(bad)
iret
and
enter
inc
mov
dec
psraw
mov
jns
xlat
jno
es
(bad)
sar
and
jg
dec
cwde
dec
xor
push
(bad)
sti
xor
mov
bound
int3
or
imul
iret
nop
xor
mov
mov
(bad)
adc
loop
xor
or
sbb
in
cmp
(bad)
(bad)
mov
movs
les
cmp
mov
out
lods
inc
sub
outs
je
mov
int
and
hlt
les
sar
push
ds
mov
stos
xor
pop
mov
add
fcmovbe
retf
in
push
cmps
out
div
inc
pop
mov
neg
xchg
mov
int3
fs
lea
fild
into
or
cmp
mov
das
leave
push
lods
push
int
pop
dec
call
clc
jnp
je
sub
bound
icebp
adc
sbb
cmp
inc
pop
xchg
jae
jg
test
sbb
and
jno
dec
inc
mov
pop
mov
(bad)
push
lahf
push
pusha
je
ins
scas
dec
sbb
adc
sbb
movs
lock
lods
add
stos
mov
push
push
add
cdq
sahf
pop
and
add
sbb
ret
dec
mov
outs
(bad)
jge
mov
outs
or
xchg
jb
lea
jmp
dec
or
lds
xchg
xor
cmp
std
mov
xchg
retf
push
mov
adc
sbb
sbb
arpl
xchg
and
or
fcomp
(bad)
shr
js
push
push
dec
outs
imul
fld
ds
call
sub
and
cmp
push
dec
adc
ss
pop
repnz
and
add
mov
imul
adc
sub
popf
popa
ds
test
imul
xchg
rol
push
(bad)
loopne
daa
mov
and
mov
fdiv
repnz
jno
push
mov
push
fnsave
cmp
pop
add
les
jo
add
cmp
out
daa
jmp
push
je
xor
sbb
pop
dec
scas
hlt
xor
aaa
cmp
xlat
mov
push
and
pop
sti
lahf
stc
ins
dec
mov
arpl
lea
xor
mov
outs
push
es
mov
push
cmp
mov
mov
mov
inc
push
imul
js
xor
stc
pushf
xor
(bad)
mov
pop
or
jb
jne
and
push
or
in
xchg
xchg
je
mov
addr16
cs
inc
retf
(bad)
push
xor
outs
pop
ret
scas
dec
ficom
outs
and
bound
mov
pop
and
mov
stos
shl
adc
ficom
mov
(bad)
lea
mov
out
test
adc
mov
add
in
in
popa
jg
js
lods
test
pop
jne
out
shr
sbb
sub
popf
pop
jno
cmp
(bad)
stos
rcr
dec
call
movs
scas
test
mov
clc
mov
pop
mov
mov
imul
pop
xchg
movs
call
test
jo
sbb
bound
das
mov
jns
addr16
dec
lahf
dec
movs
mov
mov
clc
jno
scas
in
outs
fmul
addr16
imul
add
arpl
pop
or
les
xor
neg
es
movs
lods
sub
lahf
mov
dec
jecxz
inc
cdq
sub
mov
stos
inc
sub
in
xchg
cmps
imul
dec
lahf
sti
movs
ds
lods
(bad)
imul
aaa
sbb
cmp
sbb
popf
xor
fld
popf
pop
push
outs
jo
xor
mov
sbb
inc
paddb
dec
add
shr
fiadd
push
test
ins
inc
adc
lds
jae
repz
sahf
or
sub
push
pushf
push
fwait
cwde
jecxz
push
test
push
out
imul
jmp
fcompp
cld
jecxz
jae
inc
xchg
mov
ins
(bad)
jno
pop
jge
and
jne
mov
cmp
scas
out
sub
push
and
adc
jecxz
inc
ret
call
in
je
mov
loope
mov
mov
push
mov
lods
rol
lea
imul
rol
stos
sbb
imul
inc
jg
lahf
push
movs
or
pop
pop
and
(bad)
or
xchg
dec
fs
out
xchg
cmp
and
xor
mov
popf
jl
ins
dec
push
jae
adc
std
aad
mov
mov
repz
into
ficom
jle
and
adc
pop
cwde
mov
call
fmul
cs
jmp
or
popa
fiadd
loope
out
repnz
and
fadd
cmps
lea
rcl
mov
push
xchg
mov
sbb
fiadd
out
lods
movups
ret
mov
mov
retf
mov
xor
add
sbb
jecxz
push
mov
das
dec
mov
lds
hlt
inc
xor
ja
lods
xor
rol
mov
pop
push
adc
jo
dec
xchg
in
add
xchg
out
popf
sar
imul
ret
xor
fld
sar
in
imul
imul
xlat
xor
dec
mov
(bad)
jmp
push
xchg
jle
movs
cmp
dec
icebp
add
neg
int
ins
cmp
cld
(bad)
fistp
arpl
mov
les
(bad)
pop
xor
cmp
jno
int3
mov
ret
fwait
jb
(bad)
lods
cmp
xchg
aad
outs
in
ds
mov
ins
sub
popa
in
inc
sub
rcl
inc
jp
inc
sti
aas
sub
in
cwde
loop
push
fdivr
sub
mov
imul
cmp
mov
add
cmp
adc
xor
and
outs
xrelease
(bad)
xchg
jbe
enter
popf
pop
cmp
xor
in
mov
mov
xor
xchg
adc
test
das
mov
mov
dec
cwde
mov
pop
ret
pop
and
(bad)
sbb
ins
jle
push
mov
stc
add
in
movs
push
dec
jmp
mov
(bad)
push
dec
(bad)
jg
inc
in
pop
mov
dec
pop
pop
pop
cld
and
lock
push
fisub
push
outs
test
div
push
repz
data16
addr16
sub
push
in
stc
sbb
sahf
fsub
jp
pop
lods
jne
cmp
addr16
imul
dec
movs
pop
je
mov
das
loope
adc
mov
cmp
push
and
pop
aaa
out
in
inc
push
out
inc
sub
lea
pop
jbe
cmp
(bad)
out
add
loope
dec
lahf
ficomp
es
xor
mov
sbb
sahf
inc
inc
cmp
in
nop
test
mov
adc
adc
sub
xor
test
out
mov
out
jecxz
jmp
stos
lods
not
sbb
cmp
sub
inc
addr16
js
arpl
js
pop
stos
mov
xchg
adc
sar
out
or
mov
aaa
jae
daa
jae
retf
push
(bad)
mov
int3
test
jecxz
xchg
lahf
and
aaa
pop
inc
mov
retf
shl
test
push
xchg
cli
cmps
pushf
xchg
sti
xor
jo
mov
adc
les
in
(bad)
and
shl
das
cmp
push
sbb
retf
adc
test
mov
xor
mov
outs
stc
mov
sbb
mov
ins
fiadd
repnz
sbb
jmp
jg
or
xchg
xor
loopne
mov
lahf
sub
nop
add
fsubr
nop
xor
ret
adc
cmp
jb
rcl
ficomp
test
aad
cdq
dec
rol
(bad)
iret
xor
std
inc
enter
inc
or
mov
push
pop
xchg
cli
shr
dec
mov
and
adc
fisubr
mov
sub
xchg
inc
mov
inc
es
xchg
addr16
outs
ret
dec
sub
lahf
jle
stos
sbb
xchg
imul
idiv
or
dec
xchg
cmp
out
cmp
fisttp
jns
test
push
and
jge
sar
mov
je
repz
jnp
das
imul
sahf
or
sub
movs
out
sti
jle
push
adc
adc
cwde
fldcw
ja
pop
pop
mov
add
adc
call
es
mov
fisubr
or
cmp
mov
mov
jbe
inc
mov
daa
jmp
cld
call
mov
push
dec
sub
pop
test
gs
jb
mov
mov
pushf
stos
rcl
adc
aam
lock
imul
sbb
out
ss
or
enter
mov
sub
lea
push
pop
out
sub
lea
pshufw
cmc
xchg
addr16
xlat
add
sbb
cmp
out
outs
push
add
push
in
add
push
sbb
dec
sub
or
pop
pop
test
test
nop
out
pop
fisttp
ja
cdq
sub
push
pushf
mov
cld
adc
out
mov
sub
gs
push
in
pop
repz
push
fs
cmp
add
fcmovnu
add
aad
mov
or
out
sahf
lods
outs
jmp
in
or
test
ja
lock
mov
cwde
cdq
aad
int3
enter
sbb
fisttp
push
scas
lods
mov
data16
xchg
and
out
cwde
repnz
push
dec
cmp
add
adc
std
pusha
fwait
mov
mov
jnp
loope
cmps
cwde
inc
popf
sbb
xor
jle
add
out
sar
or
or
sub
sti
xor
xchg
inc
push
jb
das
sbb
cli
add
mov
shl
push
pop
xchg
dec
and
fwait
ror
test
fisubr
daa
adc
stos
inc
call
lods
repnz
push
sub
pop
pop
add
dec
inc
mov
add
and
outs
add
push
fwait
or
imul
and
push
adc
push
and
stc
adc
dec
or
inc
fwait
ror
sbb
or
xor
mov
ds
mov
xchg
or
fwait
repz
xchg
adc
adc
cli
and
pop
add
sbb
stos
push
call
mov
dec
push
or
inc
mov
fisub
jae
call
(bad)
dec
jmp
cdq
addr16
call
fsubr
dec
and
add
inc
mov
or
adc
add
fild
lds
(bad)
in
xor
and
jmp
ja
pop
adc
pusha
cld
push
das
test
dec
popa
xchg
rcr
and
repz
mov
jmp
push
pop
shl
(bad)
movs
cdq
sbb
push
mov
lods
dec
punpckldq
adc
xchg
sahf
cwde
lock
imul
out
jo
icebp
int
mov
xchg
test
std
lahf
pop
hlt
dec
arpl
in
add
sbb
dec
and
sar
arpl
push
hlt
enter
out
xor
xchg
cmps
add
dec
aas
pop
dec
pop
push
imul
repnz
sbb
ret
je
jecxz
pop
mov
xchg
push
dec
xor
jae
std
inc
mov
pop
pop
movs
call
ins
or
fwait
dec
pop
cmp
jno
and
xchg
std
pop
xchg
test
inc
jmp
adc
dec
je
and
add
nop
dec
clc
test
mov
repz
and
cld
push
adc
jl
bnd
imul
out
dec
mov
call
sbb
out
xor
fbstp
int
push
add
mov
cld
push
sbb
mov
mov
dec
rcr
fild
cmc
push
push
stos
loop
xchg
or
and
repz
iret
dec
stos
or
aad
mov
xchg
jg
adc
sub
push
xor
out
sbb
sub
mov
add
js
jl
mov
or
jle
sub
mov
sub
fst
jno
or
enter
add
push
xchg
ds
push
mov
mov
clc
xchg
cdq
inc
push
mov
push
std
sub
fwait
mov
mov
add
imul
pop
adc
out
dec
dec
dec
mov
mov
loope
mov
(bad)
jle
cmp
shl
xlat
das
xchg
inc
fs
mov
push
cmp
add
icebp
fistp
addr16
ss
or
cmp
adc
pop
fwait
add
mov
inc
js
jne
out
and
sbb
movs
cmp
into
in
cdq
xchg
retf
test
inc
ja
std
push
jp
mov
sub
lds
xchg
cld
sub
gs
fldenv
dec
mov
movs
(bad)
or
pop
shr
lods
mov
xchg
cmp
xchg
push
fistp
and
push
fstp
ss
push
push
mov
jae
fiadd
inc
fisttp
xlat
(bad)
adc
pop
sub
jno
data16
cmp
cmp
xchg
dec
dec
inc
mov
test
mov
or
xchg
lea
pop
adc
pusha
stos
je
mov
sbb
fs
jp
xchg
mov
fmul
and
pop
inc
jae
cld
aaa
icebp
movs
jmp
dec
push
mov
lods
push
mov
push
mov
retf
xchg
repnz
cli
in
adc
jo
bound
sub
cmc
dec
xor
jb
dec
mov
int
gs
fldcw
aaa
push
xor
sbb
cmp
mov
xchg
inc
mov
stos
stc
outs
push
stos
push
dec
test
(bad)
and
lahf
in
sub
dec
mov
adc
xlat
xchg
adc
jmp
sbb
adc
cmp
mov
cmc
jo
loopne
retf
enter
lods
mov
xchg
es
cmp
mov
test
dec
(bad)
(bad)
push
in
dec
test
(bad)
mov
daa
icebp
and
in
jne
out
lods
jecxz
iret
cmc
retf
dec
js
iret
sbb
jbe
inc
xchg
icebp
retf
(bad)
xor
retf
(bad)
fistp
mov
outs
call
jno
into
mov
fldenv
push
xor
mov
mov
test
enter
add
jo
or
(bad)
aad
dec
(bad)
jnp
aaa
xchg
sbb
in
inc
popf
bound
jmp
inc
arpl
sbb
(bad)
inc
mov
lods
cmp
pushf
test
mov
fild
fidiv
cmp
fmul
sbb
adc
and
and
mov
das
and
nop
cwde
sbb
pop
adc
sbb
mov
jl
ins
push
pushf
in
pop
xor
dec
xor
scas
je
jmp
shl
sbb
or
jmp
add
test
aad
xchg
(bad)
push
sbb
outs
lock
sub
push
lock
in
push
mov
out
and
and
cmp
and
xchg
mov
mov
or
adc
outs
mov
lahf
mov
mov
test
and
leave
pop
push
jg
add
test
out
call
xchg
inc
pop
fimul
sbb
mov
adc
pop
mov
outs
shl
fwait
push
out
sahf
pop
not
fcmovnb
mov
test
adc
or
inc
jle
mov
(bad)
push
and
push
lods
lahf
sbb
je
push
shl
neg
sbb
xor
jae
fild
jo
sbb
mov
inc
fs
ror
scas
push
in
add
(bad)
pop
jmp
pop
mov
fisubr
pop
push
mov
cmp
xchg
inc
out
mov
mov
mov
and
ja
cmps
push
pusha
dec
sub
addr16
jp
mov
aam
xchg
ss
inc
in
and
shl
fistp
cmp
cmp
ins
push
out
jmp
ds
dec
xchg
jmp
int
test
jne
push
fidiv
retf
retfw
call
pop
(bad)
aam
scas
call
repnz
and
bound
fdiv
ss
cdq
(bad)
sar
and
cld
shl
ret
xchg
aad
cli
idiv
mov
imul
fstp
ret
sbb
gs
jmp
mov
mov
push
adc
retf
sub
cmp
mov
mov
jg
stos
push
sar
addr16
dec
jl
leave
mov
test
rol
lock
mov
dec
sbb
ja
add
jmp
mov
mov
cmp
(bad)
not
pop
pop
sti
add
inc
mov
idiv
or
xchg
sbb
pop
bound
shl
call
adc
sbb
xchg
pop
cmp
lea
(bad)
call
push
mov
scas
loope
cs
dec
jo
mov
xor
into
inc
inc
inc
add
push
sub
cmp
xchg
jmp
in
in
mov
inc
xchg
rol
pop
in
inc
movs
fisttp
ins
pop
jl
inc
lods
xchg
push
jge
xor
cdq
and
adc
cld
inc
jl
imul
xor
mov
into
daa
jp
cmp
push
pop
and
cwde
les
jle
and
dec
jle
(bad)
xor
addr16
shr
fpatan
lahf
dec
jmp
imul
cmp
adc
sbb
cmp
inc
sub
sbb
or
sub
inc
add
cld
mov
cld
push
(bad)
ret
neg
dec
jl
push
ds
stos
add
sub
enter
mov
retf
xchg
xor
mov
daa
les
push
pop
test
sbb
jb
pop
js
lock
aam
mov
sub
sbb
out
pop
fs
adc
sti
mov
loope
fiadd
add
dec
lds
lsl
fdivr
or
imul
mov
icebp
(bad)
nop
mov
(bad)
leave
pop
inc
jnp
sbb
popa
xor
ffreep
mov
mov
xor
sahf
stc
and
loop
xor
sub
and
cmp
lahf
lock
test
sbb
cmps
ficomp
test
lods
inc
mov
call
and
pop
xchg
iret
inc
mov
test
push
xlat
fistp
cdq
jne
jle
cmp
stos
imul
loop
cmp
cmp
outs
sbb
in
inc
sbb
dec
lock
cwde
nop
iret
jns
sub
je
push
or
scas
adc
push
lods
imul
cdq
aad
cdq
dec
adc
mov
aaa
dec
cld
or
les
(bad)
dec
ror
out
lods
(bad)
xor
or
inc
scas
mov
mov
fmul
fwait
pop
sub
cwde
and
mov
add
repnz
mov
ficomp
adc
mov
jnp
shl
nop
xor
aad
push
mov
mov
clc
hlt
sbb
jmp
cmp
daa
add
mov
aad
out
jmp
out
mov
repnz
add
inc
int
mov
mov
adc
inc
add
or
mov
or
and
or
xor
cdq
dec
movs
inc
test
pop
inc
mov
push
dec
adc
add
call
out
aas
js
mov
pop
stos
dec
pop
mov
jo
shr
mov
icebp
hlt
das
mov
xchg
jne
add
xor
das
mov
jmp
cdq
sbb
mov
(bad)
test
aas
cmp
retf
das
xchg
sub
lea
ror
jb
mov
and
(bad)
adc
gs
mov
mov
dec
pop
pop
mov
lock
imul
inc
push
jnp
add
sti
fldenv
mov
jbe
popa
shl
xchg
dec
add
sbb
or
scas
cmc
mov
sbb
arpl
jge
xlat
out
sahf
push
aam
push
xchg
cmps
loop
cmc
add
pop
add
popf
repnz
xor
out
shr
mov
pop
and
ficom
mov
lock
jle
xchg
(bad)
push
daa
test
pop
pop
xchg
or
imul
inc
out
loope
mov
(bad)
mov
addr16
popf
xchg
mov
out
and
and
mov
imul
neg
xchg
(bad)
ja
inc
ret
inc
mov
xchg
push
push
pop
push
aad
out
xchg
ins
mov
mov
jbe
sbb
adc
retf
lds
xlat
jecxz
leave
cmp
push
cli
movs
dec
mov
pop
or
sbb
add
and
iret
dec
push
fldenv
xchg
jo
xor
test
ret
xor
fisubr
retf
push
mov
or
mov
rcl
lods
push
adc
sbb
xchg
sub
sub
fs
cmps
pop
fwait
jbe
aad
pusha
mov
(bad)
repz
mov
sti
out
add
add
retf
in
repz
(bad)
loop
xchg
jp
mov
(bad)
mov
mov
pop
in
mov
or
imul
or
leave
rol
mov
mov
mov
jno
mov
pop
xor
sub
sub
mov
adc
jne
xor
push
adc
xchg
jmp
cdq
xor
retf
mov
sbb
push
push
xchg
out
xchg
or
add
mov
gs
mov
pop
repnz
adc
cdq
sbb
pop
int
cmp
push
call
jecxz
pop
xor
push
mov
push
or
xchg
stos
jae
mov
call
movs
mov
pop
scas
jp
sbb
lock
rol
popf
adc
jge
imul
cwde
cmps
dec
aad
aaa
cmc
mov
lds
jne
jns
xor
div
je
js
or
and
push
mov
mov
addr16
pop
inc
add
es
xchg
xchg
pusha
sub
pop
sbb
pop
loop
xlat
sub
sub
jmp
dec
scas
js
in
pop
icebp
ins
pop
into
movs
into
ja
shl
push
test
sub
cmp
mov
and
and
test
(bad)
mov
in
ret
lods
push
push
and
nop
dec
mov
jmp
xchg
inc
fldenv
pop
and
sbb
cmp
mov
dec
dec
fidivr
adc
loop
fisub
(bad)
mov
push
ins
mov
imul
mov
pop
scas
cmp
fwait
retf
js
adc
and
mov
push
xchg
mov
pop
jbe
mov
fstp
jb
ficomp
les
mov
(bad)
(bad)
lods
xchg
inc
adc
mov
lock
mov
out
or
dec
mov
and
pop
cmp
push
stc
pop
add
lahf
jo
jle
adc
cmp
icebp
sar
test
inc
mov
test
rcl
or
mov
inc
test
popa
out
mov
adc
push
pop
(bad)
sbb
push
icebp
stos
inc
mov
sti
inc
push
pop
pop
fwait
adc
shl
pop
outs
inc
jns
add
popa
les
sbb
popa
mov
add
lods
fisub
not
fmul
imul
add
jbe
push
dec
(bad)
inc
mov
add
(bad)
cli
and
imul
shl
inc
int
mov
jne
addr16
mov
movs
bnd
jp
cmp
pop
xor
or
cmp
stos
add
mov
mov
xor
pushf
mov
xchg
xchg
and
xor
mov
mov
sbb
inc
imul
cli
nop
or
add
xchg
xchg
xor
jmp
mov
mov
dec
push
cmps
cmp
push
call
stos
popa
rcl
mov
cdq
jnp
or
les
movs
pop
cld
in
retf
or
push
cmp
jecxz
retf
ret
fild
fwait
sub
ja
pusha
xor
mov
xor
bound
push
pop
icebp
cmp
jns
idiv
jmp
icebp
sub
push
push
pusha
cmp
addr16
imul
jle
or
aad
xchg
dec
sahf
icebp
dec
pop
pusha
pop
leave
mov
sub
js
int3
div
pop
pop
push
push
add
pop
xor
retf
jmp
xor
(bad)
push
mov
inc
or
es
sbb
imul
pop
cwde
cwde
dec
cmp
and
and
scas
inc
loopne
dec
jle
sub
fwait
mov
sbb
out
(bad)
inc
stos
cmp
jle
retf
popf
scas
scas
jle
cli
je
or
(bad)
and
scas
gs
sub
add
pop
xor
outs
imul
stos
mov
ret
ret
das
mov
mov
and
imul
fidiv
(bad)
inc
mov
int3
loope
test
cli
sbb
mov
inc
or
jno
push
sub
iret
retf
(bad)
add
retfw
or
mov
push
push
inc
jo
mov
sub
test
rcr
add
pop
push
sbb
cmc
adc
pop
sbb
movs
cmp
popf
mov
jp
sub
int3
push
test
jecxz
sub
push
pop
jecxz
out
sbb
call
mov
push
aam
inc
cmp
mov
mov
fistp
scas
int
sbb
fistp
mov
iret
push
push
test
cmp
adc
cmc
dec
test
or
pop
mov
jno
iret
ret
cmp
fdiv
leave
mov
pop
sub
(bad)
jmp
ins
(bad)
mov
push
repnz
cmp
jno
fs
repnz
sub
enter
xchg
mov
(bad)
mov
or
sub
pop
in
popf
mov
mov
push
sub
aas
mov
shl
add
es
adc
mov
jae
push
test
mov
cmps
ror
cmps
inc
jmp
arpl
int3
fcom
and
call
sar
cdq
dec
adc
mov
gs
inc
cmp
xor
jg
jge
outs
jge
lock
mov
adc
test
mov
jle
in
das
and
cmps
pop
ret
or
pop
fild
aam
jo
lock
lea
test
mov
loope
lock
jmp
fstp
fisttp
jne
adc
rcl
std
cmps
inc
rcl
ret
in
fsubrp
mov
pop
inc
mov
xor
xchg
loope
mov
and
push
mov
or
xchg
inc
lock
sbb
and
mov
jge
fucom
addr16
push
sbb
in
mov
sahf
cld
aad
movs
or
jg
repz
test
xchg
loop
sub
xor
addr16
lods
popf
cld
adc
push
mov
cmc
rcr
lock
stos
lods
mov
(bad)
nop
sub
dec
xor
adc
fucomi
dec
aam
xchg
inc
dec
std
mov
lahf
inc
inc
js
sbb
retf
jno
arpl
int3
into
popa
add
inc
enter
fsub
xchg
sub
inc
nop
xchg
mov
cdq
mov
mov
js
and
ins
call
dec
ss
gs
jl
(bad)
fnstenv
pop
cli
fild
sbb
pop
enter
and
(bad)
leave
dec
inc
sysret
ja
jmp
movs
out
jb
and
adc
sar
ds
sub
cld
jmp
out
mov
pushf
mov
aaa
cmps
fcom
int3
ss
push
ror
nop
in
mov
dec
aam
loope
push
mov
(bad)
xchg
ja
fisubr
sbb
sar
ror
add
inc
mov
enter
xor
mov
inc
movs
xchg
(bad)
adc
and
test
jne
push
in
mov
enter
mov
jae
jb
dec
pop
add
ins
jae
sbb
xchg
sub
call
mov
jnp
test
mov
or
lock
rcr
out
xchg
bnd
not
daa
call
pop
fdivr
mov
bound
pop
lahf
fwait
inc
div
(bad)
scas
(bad)
neg
mov
push
mov
cmps
mov
outs
scas
sub
mov
mov
jb
js
sbb
ins
or
test
sub
cmps
pusha
mov
in
sub
ss
dec
arpl
cs
dec
pop
call
add
lahf
xor
and
sub
jg
jae
xor
and
cdq
cmps
sbb
pop
dec
add
cli
cmp
pop
pushf
dec
fwait
inc
icebp
push
ret
mov
mov
xchg
out
mov
test
jmp
call
inc
or
jmp
jmp
sti
mov
fwait
inc
rcl
cmp
push
into
or
dec
xor
stc
or
out
les
jecxz
movs
xchg
lea
in
fdivr
mov
add
sub
mov
mov
pushf
ja
jge
jbe
outs
daa
pop
jecxz
jle
inc
mov
scas
lds
(bad)
iret
and
mov
por
ret
out
(bad)
push
ret
xor
ins
(bad)
dec
fdivr
jnp
cmp
imul
test
imul
or
cli
stos
movs
in
sbb
out
mov
xchg
sub
(bad)
and
movs
leave
jae
mov
mov
fwait
fs
out
mov
push
xor
pop
sbb
cmps
(bad)
mov
and
push
mov
sahf
lea
dec
jp
popf
iret
push
stos
and
retf
cmp
push
and
sbb
push
repz
cmp
fld
jge
push
cli
rcl
inc
jl
shl
jl
(bad)
fst
pusha
xchg
sub
outs
push
sbb
cmps
jecxz
and
(bad)
in
sbb
bound
cld
fs
mov
jl
cmp
mov
mov
inc
loope
adc
in
mov
data16
lods
cmc
xchg
mov
inc
xlat
cmp
cmps
lock
addr16
in
sti
sub
push
(bad)
cdq
sbb
outs
push
aam
adc
jno
adc
stos
pop
mov
jne
pop
mov
clc
aam
sub
push
dec
and
sbb
call
std
ins
fidivr
add
cmc
fwait
xor
push
and
ror
xchg
into
aam
adc
push
mov
fild
and
jnp
movs
jge
in
(bad)
cwde
(bad)
int3
mov
mov
mov
aas
push
ins
pusha
jecxz
div
sub
mov
cmp
push
inc
xor
daa
add
sahf
inc
fild
leave
aas
sub
inc
dec
push
aad
pop
leave
xor
movs
aad
repz
xor
mov
loop
cmp
xor
nop
add
push
cmps
scas
mov
cmp
pop
push
les
mov
or
int3
lea
push
inc
xchg
push
jle
adc
enter
loop
ins
lods
pop
mov
ret
test
daa
mov
mov
inc
jne
jbe
cmps
(bad)
in
jle
lds
pop
and
pop
mov
push
loopne
das
in
mov
mov
xor
add
inc
lea
aam
mov
fs
stos
xchg
xor
dec
stos
mov
adc
aaa
xor
push
push
out
cmp
sbb
lock
jo
lahf
mov
lods
xor
out
(bad)
rol
mov
sahf
adc
addr16
std
mov
aam
ins
sbb
xor
pop
jmp
mov
pop
xchg
or
mul
inc
push
les
xor
xchg
leave
ins
adc
rol
xchg
push
sahf
shl
dec
sbb
out
lods
add
or
push
outs
pop
jnp
push
adc
or
sub
push
dec
sbb
(bad)
sub
aad
inc
rcl
(bad)
and
or
sub
scas
xchg
fldcw
cmp
pop
jnp
xchg
xor
sti
in
std
push
aad
add
mul
leave
fwait
adc
push
jns
sbb
inc
cmp
mov
(bad)
shr
add
test
inc
add
ds
sub
clc
fstp
cmp
sbb
inc
jecxz
clc
jmp
dec
call
jecxz
loop
jge
movs
pop
mov
test
call
dec
ja
xor
push
cmp
int
push
stos
pop
mov
and
(bad)
in
movs
pop
rol
pushf
jmp
cmp
fistp
sbb
fisttp
sbb
clc
pop
sbb
or
pop
xor
xor
jecxz
sub
xlat
mov
ss
sub
mov
mov
mov
ret
xchg
ja
adc
xor
test
dec
rol
ror
xchg
push
push
inc
aad
dec
retf
das
push
mov
(bad)
outs
outs
jo
rcr
or
cmova
sbb
std
in
mov
js
cmp
mov
js
jl
daa
push
jo
or
pop
xor
cli
(bad)
cmp
imul
pop
jmp
iret
outs
imul
sub
int3
lds
jbe
test
ins
(bad)
pusha
ja
push
mov
ins
push
sti
or
fwait
sub
xchg
add
push
xchg
jo
xchg
or
pop
in
jmp
sbb
enter
xchg
test
pop
inc
pop
call
out
stos
call
and
out
push
outs
inc
or
aad
push
sbb
stc
hlt
int3
inc
push
xchg
jb
vmread
pop
mov
scas
mov
cli
into
or
movs
rcl
pop
leave
in
aaa
popf
lds
dec
scas
cs
and
xchg
rcr
into
bound
ins
fisub
mov
push
stc
or
(bad)
aad
in
cmc
add
jp
icebp
(bad)
or
cmp
iret
imul
das
arpl
repz
out
xor
adc
and
xchg
push
repnz
jp
xchg
in
mov
pop
repnz
nop
mov
ret
add
lock
js
adc
add
addr16
cld
inc
(bad)
cmp
std
push
sbb
jb
or
adc
aam
adc
push
mov
test
pop
aam
in
lahf
and
lods
clc
mov
jo
popf
mov
ds
mov
push
rol
jp
test
xor
sub
mov
dec
call
stc
mov
jae
jno
xchg
lea
inc
pushf
cwde
mov
outs
scas
std
mov
cwde
neg
inc
pop
in
inc
push
gs
lea
pop
pushf
inc
inc
aad
inc
push
pushf
mov
pop
into
ror
test
cmc
(bad)
repnz
into
fst
pop
mov
jle
add
pop
sar
pop
add
lea
(bad)
push
test
add
or
loop
aas
ins
xor
dec
and
sub
test
sbb
or
or
inc
bound
paddsw
gs
sbb
out
xchg
add
data16
sub
jnp
mov
sub
xor
cli
jl
pop
adc
aaa
mov
test
mov
js
mov
or
movs
dec
fist
cmp
retf
retf
fidivr
pop
inc
xchg
sub
mov
lods
xlat
js
jg
xchg
fldenv
xchg
pop
(bad)
adc
cmp
(bad)
aaa
push
fstp
and
jg
int3
mov
test
dec
xor
sbb
xchg
mov
push
ret
push
mov
adc
jl
xchg
aam
xor
pop
pushf
adc
sub
int
mov
out
repnz
ror
lods
xchg
test
cld
or
cli
imul
mov
(bad)
mov
pop
cmp
pushf
and
and
enter
movs
mov
mov
inc
adc
out
leave
inc
push
fwait
stc
add
mov
stos
cli
cmp
sbb
cdq
clc
or
fst
sahf
mov
push
push
lock
or
pop
pop
imul
jmp
cmp
mov
and
push
push
cmp
les
outs
outs
out
int3
dec
push
mov
cmp
stos
rcr
pusha
xchg
lea
cmps
inc
pop
mov
sbb
call
or
and
add
xor
mov
lods
iret
or
inc
sahf
mov
mov
in
mov
retf
cdq
outs
mov
mov
scas
aad
clc
inc
mov
pop
fcmovnbe
push
or
adc
mov
add
out
xchg
pop
sbb
sub
jb
push
sbb
inc
push
dec
call
inc
hlt
scas
aaa
retf
mov
inc
sub
dec
ret
in
pop
mov
mov
jl
das
outs
fs
in
movs
movs
mov
xor
pop
push
rcr
sub
sub
cmp
pop
retf
sub
mov
sub
cdq
mov
mov
stos
pop
mov
ja
sti
and
cdq
mov
bound
rcl
scas
push
pushf
push
ss
jl
xlat
movs
mov
xchg
mov
jmp
fst
icebp
shl
cmp
mov
stos
ins
adc
sub
loop
lods
bound
(bad)
(bad)
push
leave
mov
sbb
mov
mov
add
pop
push
idiv
(bad)
shl
pusha
sbb
push
(bad)
sbb
rcr
adc
xchg
shl
nop
adc
push
jecxz
daa
push
mov
mul
loop
in
outs
sar
inc
into
in
or
fs
int3
jl
lock
loopne
sbb
xor
mov
adc
sbb
es
xchg
pop
cmp
out
pop
xchg
xor
push
cli
jmp
add
jo
gs
cmp
in
cli
cmps
cmp
and
sub
loopne
shr
stc
add
fild
test
lds
imul
dec
dec
sub
fmul
inc
push
push
imul
std
push
fisub
shr
jno
std
cwde
mov
mov
fidivr
pop
push
and
fs
mov
sub
dec
adc
test
test
jo
shr
sti
jbe
sbb
fwait
and
or
stos
xchg
pop
sti
lea
pop
int
ret
into
add
std
or
jl
pop
mov
nop
and
mov
stos
inc
mov
imul
rol
and
inc
ds
dec
out
or
(bad)
movs
push
dec
dec
fidivr
xchg
xchg
or
lahf
dec
popf
pusha
movs
adc
push
pop
mov
push
mov
xor
popf
shl
push
inc
es
mov
sahf
fdivr
into
out
aas
and
cmp
push
adc
mov
mul
sub
xor
dec
imul
in
test
sub
loope
pop
jns
cmps
xchg
mov
xor
pop
dec
setnp
pop
push
test
cdq
fimul
push
add
dec
or
jnp
add
inc
inc
and
out
push
xlat
cli
mov
sbb
cmp
dec
adc
pop
mov
xchg
fs
rcr
fisub
dec
stos
ret
and
adc
shl
ins
(bad)
rol
in
or
clc
and
or
mov
out
lods
sahf
fdiv
stc
out
sahf
mov
fdivr
jnp
aam
or
xchg
cmovp
mov
clc
call
fsubr
pop
xor
and
adc
and
or
out
or
hlt
fadd
dec
mov
cs
aas
add
adc
xchg
xchg
xor
not
jb
sub
pop
jp
ss
cmp
pop
call
test
mov
pop
mov
dec
dec
leave
inc
mov
scas
lahf
int
mov
cmps
fld
gs
mov
push
cld
das
dec
mov
sbb
arpl
into
movs
jl
sbb
dec
sar
adc
mov
cmp
sbb
fld
dec
(bad)
aaa
xor
ss
xor
ins
scas
(bad)
cmps
push
cli
or
inc
cmp
inc
data16
loopne
push
adc
mov
dec
outs
and
loopne
aam
fcmovu
mov
jge
jmp
push
jecxz
push
imul
dec
jg
or
cli
adc
xlat
(bad)
mov
xchg
sub
mov
test
push
imul
and
mov
(bad)
retf
sbb
(bad)
sbb
inc
test
jl
fs
sbb
cmp
fdiv
(bad)
adc
dec
mov
cmp
aas
xchg
lods
xor
stc
(bad)
mov
pusha
ret
mov
aaa
(bad)
(bad)
xor
retf
dec
loopne
mov
dec
jne
mov
mov
mul
push
mov
push
inc
out
fistp
nop
clc
les
pop
fsubp
dec
les
pop
or
cs
add
and
cmp
sub
xchg
movs
stc
pop
fs
jle
jl
shr
jns
test
jmp
and
mov
cmp
lock
pop
mov
in
ins
sbb
fisubr
and
pop
out
mov
add
mov
test
retf
bound
lods
sar
inc
add
lock
stos
fadd
pop
lahf
xor
icebp
jp
push
sbb
cmp
stc
sub
lds
xor
nop
jno
push
mov
inc
pop
sti
call
pushf
mov
inc
pop
call
dec
mov
gs
mov
push
pop
add
mov
xchg
ret
movs
dec
mov
xor
mov
sbb
out
fidivr
push
adc
dec
mov
push
ins
sbb
add
imul
sub
or
fiadd
mov
push
mov
(bad)
int3
lds
push
(bad)
jp
adc
inc
pushf
dec
push
aaa
ins
mov
dec
pop
daa
mul
pop
cs
fcomp
sub
int3
std
(bad)
clc
(bad)
and
xor
mov
je
dec
inc
xchg
gs
imul
enter
pop
sub
pop
jle
enter
cmps
cmps
sbb
inc
(bad)
scas
pop
xor
jg
add
mov
mov
pop
cwde
or
pusha
lods
sbb
and
fcmovu
sub
inc
jmp
sub
outs
dec
fidiv
and
push
mov
sub
or
test
(bad)
jo
idiv
test
cmp
or
test
test
call
add
sub
lock
nop
sbb
xor
jge
xchg
xor
inc
xchg
ins
push
ficom
stc
xor
nop
mov
repnz
or
aas
retf
pop
mov
in
retf
sub
jmp
fsubr
push
push
xchg
mov
adc
test
pop
dec
dec
and
xor
dec
ja
xlat
or
xchg
data16
jg
bound
jmp
leave
out
mov
mov
retf
and
jp
push
(bad)
push
in
xchg
je
ins
cld
test
test
mov
xchg
pop
loop
push
shl
clc
sbb
sub
daa
js
xchg
push
sub
mov
hlt
cli
xchg
xchg
in
lahf
in
(bad)
mov
movs
loop
xchg
mov
xor
or
mov
fist
pop
mov
lahf
sahf
xchg
je
jmp
ret
add
add
sbb
jo
mov
iret
adc
into
add
lods
std
(bad)
xor
pop
pop
mov
add
ret
push
mov
jne
adc
dec
fisttp
mov
int3
int
popf
pop
push
cwde
and
imul
dec
add
leave
ss
(bad)
lods
xor
out
mov
mov
mov
jae
loopne
jnp
xchg
jbe
ja
cmp
mov
cmp
mov
pmaxsw
fst
out
popa
mov
push
sbb
cmp
pop
ja
mov
and
add
and
xor
sbb
fldenv
push
nop
xor
and
pushf
jmp
(bad)
cmp
push
std
jecxz
sub
cmp
loopne
enter
imul
mov
movs
repz
mov
ret
jns
shr
jp
ins
and
into
cmp
sti
cmp
cs
shr
das
pusha
fistp
out
pop
loopne
fs
and
jle
es
mov
setge
add
xor
and
jecxz
and
test
adc
add
(bad)
cmp
sti
xor
fisubr
mov
dec
int3
or
pop
mov
pusha
imul
jb
dec
or
push
daa
fistp
sub
sbb
jge
mov
in
repnz
out
lahf
dec
or
pop
inc
add
cmp
and
mov
cmp
jnp
das
jle
in
cmp
test
sub
nop
movs
arpl
test
inc
add
aas
lock
and
int
dec
test
stc
sbb
scas
rcr
mov
mov
cmp
(bad)
mov
js
in
mov
stos
retf
ror
jg
test
mov
xchg
nop
cmp
pusha
or
mov
inc
add
adc
in
pop
das
pop
popa
mov
fimul
sti
lock
push
retf
shl
daa
(bad)
lahf
popa
jmp
add
in
hlt
(bad)
fwait
and
or
lods
addr16
iret
int
jne
xchg
add
out
ret
push
mov
loope
mov
inc
xchg
call
xchg
and
sub
outs
imul
mov
dec
push
pop
sbb
movs
dec
call
xchg
or
ins
mov
into
call
and
sbb
pop
pop
push
sub
add
fwait
add
(bad)
and
ror
enter
loopne
imul
mov
xchg
sti
inc
sub
cmp
and
je
in
mov
inc
or
dec
or
lods
jmp
daa
test
mov
sbb
xor
or
das
mov
rcl
popa
in
out
retf
xor
cmp
imul
jne
cmc
test
imul
and
xchg
std
popf
or
movs
test
retf
add
imul
in
mov
mov
mov
sbb
xor
push
(bad)
fild
das
add
popa
mov
sbb
push
add
in
outs
bound
jmp
clc
icebp
je
add
inc
addr16
and
jns
jmp
adc
fwait
add
clc
enter
popa
call
or
adc
xchg
pmulhw
jmp
sbb
sbb
bound
adc
lahf
aad
out
aas
pusha
icebp
je
mov
bswap
xchg
bound
cld
pop
push
jo
sub
mov
ins
sbb
push
int
mov
sbb
and
sub
je
inc
fbstp
test
jo
fimul
add
dec
imul
(bad)
jbe
adc
lds
mov
aaa
and
add
fs
(bad)
jo
(bad)
mov
daa
je
or
daa
js
pop
int
out
dec
mov
jmp
pop
daa
retf
jecxz
push
test
dec
inc
jge
inc
push
pop
movs
xchg
dec
xor
into
jae
mov
inc
cmp
xor
cmps
sbb
mov
retf
dec
cmp
dec
or
cmps
jnp
stos
arpl
out
mov
mov
leave
mov
arpl
inc
adc
aad
je
jmp
cmp
fld
mov
and
push
or
mov
adc
or
push
cmp
dec
pop
jl
test
adc
pop
add
std
mov
je
pusha
add
mov
out
xor
fidiv
jmp
inc
push
push
sar
in
mov
lock
sbb
xor
xor
repz
xchg
mov
and
enter
(bad)
(bad)
fidiv
add
pushf
ds
inc
pop
mov
lods
push
inc
push
cmp
jno
xor
std
push
mov
jg
into
das
out
mov
clc
sub
or
scas
and
adc
(bad)
call
aad
xchg
ins
xchg
in
pop
fcom
shl
sbb
pop
mov
fcom
mov
xor
jnp
paddb
sub
jno
jmp
sub
int
pop
clc
movsx
adc
push
test
xor
pop
pop
outs
lds
out
cmc
test
xchg
adc
xor
das
popa
sahf
jl
out
cs
outs
repz
retf
nop
es
push
mov
(bad)
test
cwde
in
push
pop
push
xchg
jg
dec
push
xor
jns
cpuid
mov
adc
rcr
sub
loope
rol
out
clc
shr
mov
sahf
ds
sbb
call
lods
leave
test
adc
add
add
ror
movs
push
(bad)
xchg
mov
dec
cmps
in
mov
jnp
pop
jbe
dec
mov
xor
lds
imul
cmc
punpckhdq
and
pop
cmc
retf
test
inc
int
mov
les
ret
sub
jno
jo
dec
dec
test
jl
ret
into
xchg
movs
and
je
pop
mov
in
jnp
xlat
hlt
and
jo
push
out
push
push
push
inc
dec
outs
add
mov
sub
arpl
inc
add
jmp
sbb
movs
data16
lock
aam
ds
sbb
popa
(bad)
out
cmps
sbb
leave
sub
pusha
sub
sbb
and
rcl
sub
lea
aam
sbb
add
pusha
ins
retf
inc
test
aad
mov
out
(bad)
mov
enter
pop
mov
add
imul
arpl
rcl
inc
mov
jmp
dec
out
popf
and
fnstcw
mov
cmp
mov
out
push
je
lock
push
ss
pop
xchg
scas
mov
jl
cwde
into
ret
mov
dec
mov
loopne
xchg
and
xchg
out
inc
je
pop
neg
pop
adc
pop
test
or
inc
or
mov
inc
fld
cwde
out
aaa
das
adc
hlt
mov
shl
cmc
jae
out
and
jmp
retf
cmp
mov
aaa
call
mov
xchg
push
scas
mov
jmp
or
mov
test
scas
mov
dec
push
nop
xchg
(bad)
aaa
or
pop
jbe
mov
push
sbb
repnz
int
add
loopne
jl
fnstsw
jg
inc
xor
ret
push
das
rcr
ja
aaa
mov
inc
inc
fs
pop
mov
gs
push
cli
rcr
push
dec
and
std
push
jl
push
dec
ficom
mov
leave
or
in
and
jo
loop
cmc
movs
mov
aam
jns
(bad)
mov
out
or
call
push
push
inc
stos
lock
jb
idiv
jne
pop
movs
jne
retf
in
adc
mov
inc
or
test
rol
xchg
cmp
ins
cmp
(bad)
outs
push
int
push
jo
add
pusha
sbb
inc
jae
test
adc
fidiv
lods
xor
leave
jmp
test
xchg
pop
pop
jae
inc
js
sub
movs
xchg
cmp
or
dec
dec
and
mov
adc
bound
call
repnz
inc
mov
into
mov
imul
cmp
loope
jle
pop
outs
sti
pushf
add
pusha
push
push
mov
jmp
test
gs
dec
fwait
mov
fwait
test
cmp
jne
mov
movs
pop
mov
bswap
daa
repz
inc
scas
push
data16
in
clc
xchg
mov
mov
je
das
pop
mov
aaa
xchg
push
addr16
shl
repz
dec
and
mov
out
lods
adc
jns
nop
movs
push
ins
nop
jecxz
and
jnp
lahf
xlat
mov
fwait
and
popa
scas
dec
fs
sahf
loopne
mov
cwde
jecxz
sbb
push
outs
sti
inc
in
(bad)
in
sti
pop
inc
jmp
fld
hlt
ins
pop
ret
sbb
pushf
cmps
(bad)
hlt
push
nop
ss
(bad)
inc
scas
dec
iret
call
xlat
imul
push
cmp
sti
mov
ja
mov
(bad)
loope
and
mov
ins
test
fldenv
jp
ja
ficom
and
fwait
stos
inc
cmc
mov
inc
mov
mov
(bad)
xchg
sbb
cmp
test
mov
fistp
push
inc
xlat
outs
mov
addr16
loopne
in
jne
jmp
cmp
ret
out
outs
in
sbb
arpl
fmul
nop
xchg
jge
push
test
pop
and
dec
(bad)
fsubr
das
push
jae
cmp
add
dec
xchg
inc
jge
lods
jno
jmp
and
xchg
xor
xchg
mov
mov
mov
adc
data16
icebp
or
push
mov
loope
into
scas
cli
outs
jg
push
fdivp
push
xchg
fs
pop
xchg
sub
in
fstp
xor
jnp
xor
jp
aad
adc
jmp
aad
mov
inc
sbb
adc
or
in
pop
push
cdq
pop
xor
inc
sbb
(bad)
retf
inc
inc
cmp
bound
(bad)
in
xchg
ds
mov
cmp
dec
pop
pop
outs
sbb
lock
push
pop
inc
jae
push
arpl
lods
in
or
lds
ds
xchg
adc
clc
leave
adc
jg
sub
push
sahf
pop
push
pop
push
mov
mov
sbb
mov
sbb
in
mov
add
mov
pop
xchg
(bad)
mov
xchg
sub
movs
adc
mov
sahf
mov
in
je
adc
xor
call
jge
mov
push
inc
or
bound
sbb
jl
dec
(bad)
adc
jns
iret
repz
sub
jno
or
and
xchg
inc
cmc
loopne
cmp
jecxz
fist
xchg
add
mov
inc
adc
imul
jmp
cld
mov
cmp
mov
mov
and
add
repz
cmp
jae
pop
jg
dec
icebp
pop
push
adc
jle
add
popf
push
ror
xchg
sub
lock
loope
jns
or
retf
push
aam
rcl
or
adc
push
mov
cmps
mov
in
mov
sar
xchg
dec
pop
inc
push
test
cmps
and
fwait
push
mov
ds
inc
and
jbe
mov
in
xchg
ja
mov
outs
and
and
sub
bound
jne
sar
or
push
test
imul
jg
fdivr
mov
gs
ds
pop
clc
mov
mov
mov
and
mov
and
sbb
cwde
cmc
cld
push
fistp
xor
test
fmul
push
leave
fcomp
je
stos
mov
sub
stos
sub
xor
data16
es
fcomp
in
mov
enter
and
inc
mov
mov
call
jmp
or
js
xchg
out
in
mov
mov
mov
pop
aas
jle
gs
xor
popf
xchg
dec
xchg
push
xchg
popf
sub
ds
pop
dec
or
or
lods
aad
lahf
in
fisubr
fnsave
mov
int
sbb
loopne
(bad)
sub
xor
push
jns
mov
dec
xchg
fs
push
and
mov
fdiv
pop
sub
ret
idiv
shl
sbb
scas
fcomi
test
lods
pop
mov
sti
push
push
mov
cld
stc
push
push
mov
pop
pop
pop
mov
fdivr
jmp
enter
fmul
xchg
mov
rcr
mov
or
and
movs
leave
leave
movs
in
repnz
push
or
xchg
lods
inc
dec
scas
mov
mov
xor
sbb
scas
aaa
and
cmp
fld
xchg
sbb
cmp
movs
mov
repz
cmp
test
sbb
int
jmp
add
or
jp
sahf
sbb
or
int3
lds
inc
mov
cmp
inc
stc
idiv
mul
cmps
sub
mov
jge
enter
fadd
rcl
adc
jno
fsubr
nop
dec
das
std
pop
scas
jo
lods
mov
push
out
sub
mov
in
push
and
mov
fisttp
out
sar
fidiv
mov
mov
rol
(bad)
pop
sub
loope
xor
and
outs
popa
jno
pop
push
cld
or
call
xchg
cmp
adc
sbb
loope
inc
ds
inc
cli
jecxz
adc
xchg
xchg
and
movs
mov
fistp
ja
add
out
cmp
mov
movs
lods
loop
call
and
mov
lock
enter
sahf
push
ficom
adc
out
lea
daa
xor
in
adc
mov
jb
and
sub
sbb
add
call
ds
popa
nop
cmp
push
sbb
(bad)
into
xor
retf
aam
(bad)
jnp
mov
aaa
dec
mov
xchg
mov
inc
mov
mov
add
das
pop
fadd
push
pusha
ret
jns
sbb
repz
aam
pop
int3
and
(bad)
loopne
mov
cmp
outs
aaa
aam
mov
xor
jbe
jns
cmp
mov
rcl
fmul
inc
cmp
daa
pusha
int3
mov
push
in
cmp
mov
sbb
test
adc
dec
into
cmp
stc
mov
bound
and
mov
xchg
je
xlat
sub
in
or
gs
(bad)
dec
push
pop
cmp
in
sti
test
jl
scas
sub
cmp
mov
sbb
call
loopne
ds
scas
rcr
sbb
cmp
xchg
js
outs
das
and
add
xchg
jge
mov
adc
sbb
dec
dec
daa
gs
imul
(bad)
adc
(bad)
aas
jp
aaa
jb
imul
dec
pop
shl
push
and
(bad)
shl
mov
dec
sub
ret
xchg
jg
pop
neg
lahf
fist
lock
inc
sub
xor
mov
mov
push
scas
inc
add
inc
shl
fld
(bad)
imul
adc
and
push
sbb
pusha
(bad)
out
add
adc
cmps
fs
fsub
pop
lea
push
cld
xlat
ja
test
cmps
dec
sub
sub
aad
cli
aam
imul
or
push
cdq
call
cmc
(bad)
(bad)
je
and
retf
mov
out
add
clc
jns
cmps
js
mov
or
outs
arpl
push
jae
pop
pushf
cmc
lahf
adc
xchg
gs
jbe
cmp
into
jmp
pusha
adc
or
icebp
xchg
push
cdq
hlt
nop
jnp
xor
jl
jae
fwait
pusha
sub
jno
xchg
jb
(bad)
fsub
movs
mov
in
mov
dec
call
js
popa
pop
jbe
sbb
xchg
jl
sbb
leave
fchs
mov
pop
mov
jns
mov
dec
lods
(bad)
pop
sub
test
inc
enter
sub
pop
mov
ss
xor
push
lea
lahf
mov
(bad)
xor
lods
retf
cmps
mov
cmps
or
adc
dec
xchg
lahf
lea
iret
outs
xor
pop
mov
mov
mov
pop
jmp
adc
and
daa
mov
push
sub
enter
jmp
pop
sbb
cmc
je
sbb
push
(bad)
adc
cld
out
(bad)
int3
ins
nop
sub
pop
jbe
mov
clc
dec
jae
mov
mov
cmp
pop
pop
ins
inc
jae
push
mov
mov
sbb
or
xor
xor
xor
pop
mov
mov
loope
ret
ds
add
and
cmp
mov
push
pop
idiv
stc
data16
(bad)
pop
jnp
cmps
fiadd
(bad)
in
add
lahf
jno
mov
test
sbb
inc
jp
pusha
push
cmp
xor
xchg
sbb
sub
pop
adc
dec
jle
in
dec
fdivr
sbb
aas
dec
jo
into
in
inc
pop
adc
mov
mov
mov
repz
outs
pop
clc
in
push
jmp
test
mov
jle
push
mov
cli
jno
pop
dec
mov
mov
and
pop
and
sbb
sub
mov
cdq
jae
push
cmp
add
dec
test
xor
ss
pusha
pop
stos
pop
movs
aad
jae
jno
mov
adc
call
or
inc
rol
pop
fimul
ficomp
out
in
popf
das
test
test
pop
jmp
jl
mov
jmp
imul
xchg
fstp
push
mov
(bad)
ficomp
cld
pop
dec
add
sub
mov
push
ds
sub
adc
push
das
inc
out
mov
jge
xchg
test
jne
stc
pop
adc
push
sub
loopne
inc
jge
mov
jecxz
jmp
daa
pop
aad
adc
and
outs
or
ja
popa
ds
scas
jne
sub
adc
sbb
ss
push
inc
xor
or
sub
pop
lods
dec
and
imul
mov
xor
sub
adc
repnz
std
loop
jg
js
or
or
(bad)
and
call
std
mov
mov
inc
pop
or
sub
jmp
pop
mov
mov
adc
js
mov
sub
aaa
mov
jmp
pop
push
(bad)
mov
inc
inc
lods
pop
and
shl
scas
iret
add
adc
ffree
scas
dec
repnz
mov
adc
dec
mov
or
push
bound
jnp
fstp
retf
xor
pop
sbb
mov
mov
enter
dec
hlt
jmp
pop
sbb
cdq
ins
mov
out
outs
xchg
movs
jecxz
dec
mov
ss
retf
imul
int3
sub
fs
pusha
sub
sbb
stc
(bad)
shr
out
push
push
push
cmp
cmp
mov
repnz
mov
fdivrp
pop
outs
movs
imul
(bad)
pop
(bad)
ror
mov
sub
add
out
mov
xchg
(bad)
repnz
xor
inc
xchg
mov
lea
cmp
sub
adc
push
int
(bad)
fld
jle
add
test
cli
not
push
push
mov
fcmovne
aaa
ds
jno
test
jae
test
sbb
push
push
rcl
(bad)
xchg
adc
stos
js
mov
in
xor
jp
psrlw
mov
mov
retf
sbb
mov
js
retf
int
mov
mov
pop
cdq
pop
es
adc
or
ret
mov
or
add
retf
out
hlt
repnz
(bad)
jg
fnsave
xchg
push
inc
pop
xor
mov
or
cs
pop
fdiv
cwde
test
sub
push
mov
out
gs
(bad)
stos
or
sub
mov
or
xor
pop
jge
repnz
or
rcl
aad
je
test
lds
jmp
jnp
cs
and
cs
pop
adc
pop
push
mov
aaa
fistp
cmp
arpl
clc
cld
sub
sub
gs
imul
or
sbb
popf
lock
mov
cmp
mov
rcr
push
das
xchg
inc
sub
add
inc
fs
dec
mov
cmp
imul
mov
repz
out
mov
aam
jo
adc
aas
dec
mov
std
icebp
push
jmp
and
icebp
mov
jle
lock
movs
jl
adc
fisttp
mov
dec
loopne
xor
xchg
popa
into
add
ficom
inc
out
dec
jnp
in
movs
cmp
repz
or
xadd
lds
xchg
fidivr
mov
mov
push
inc
fbstp
imul
dec
or
sub
and
fimul
push
add
push
fwait
jmp
mov
jmp
jae
or
sub
sub
ins
pushf
fdivr
inc
cmp
mov
(bad)
int3
into
addr16
xchg
sbb
dec
sub
imul
push
test
mov
and
popf
push
sbb
push
hlt
dec
push
lds
xchg
jb
push
push
push
imul
xchg
push
test
inc
xchg
push
iret
pop
pop
or
xchg
mov
mov
inc
mov
jge
pop
inc
sti
sbb
out
lods
lods
arpl
mov
ins
div
cmp
jge
push
dec
scas
fcmovbe
mov
fistp
xchg
outs
xor
je
sbb
mov
jg
add
jnp
retf
ror
std
lea
pushfw
sahf
push
por
jae
mov
add
test
cwde
imul
sar
fsubr
inc
mov
mov
push
je
loop
add
sahf
xor
(bad)
faddp
cmp
adc
sub
ss
or
cs
dec
(bad)
in
imul
pop
or
dec
sbb
lods
xchg
mov
adc
mov
stos
outs
imul
repnz
rcr
mov
hlt
inc
loope
mov
inc
xlat
imul
(bad)
mov
bound
push
adc
out
adc
and
sbb
xor
mov
cmps
push
mov
movs
(bad)
cmp
ins
les
mov
add
dec
enter
dec
stos
fisub
push
cwde
ret
push
in
mov
mov
mov
jle
std
mov
(bad)
out
neg
dec
xor
mov
xchg
js
int3
fldenv
or
aaa
out
arpl
adc
pop
sub
mov
aas
in
add
jbe
dec
std
jmp
add
xchg
(bad)
cld
(bad)
jne
xchg
inc
test
lahf
lods
xchg
mov
push
loopne
xor
sahf
(bad)
xchg
mov
or
popf
call
add
into
fdiv
pop
xor
mov
mov
divps
(bad)
mov
aaa
mov
sub
gs
daa
arpl
ret
cwde
add
jle
xor
inc
mov
gs
push
or
jg
pop
xchg
retf
jne
mov
ds
lods
ror
cmps
sub
bound
pop
mov
cmc
dec
std
xor
icebp
inc
jns
shl
ret
mov
in
mov
mov
xchg
jbe
adc
jg
jmp
cwde
xor
jg
pusha
addr16
fcomi
xchg
cmp
outs
mov
aad
push
movq
aad
(bad)
neg
push
pop
retf
fisttp
adc
retf
fisttp
mov
xchg
js
jecxz
pop
arpl
fst
push
adc
and
shl
and
js
mov
mov
dec
add
inc
fsub
lds
lahf
out
je
xchg
xor
adc
or
xchg
push
jno
xchg
mov
clc
inc
(bad)
call
cmp
inc
cmp
and
or
jbe
fst
mov
dec
add
add
in
push
pop
mov
cmp
xchg
rcl
(bad)
fldenv
fxch
xor
out
and
(bad)
rsm
sbb
mov
adc
sbb
or
push
stos
retf
in
mov
xchg
popa
xor
mov
adc
aad
xor
out
mov
jg
lock
ins
mov
xor
outs
sti
xlat
popa
pusha
inc
test
js
mov
xor
pop
adc
outs
mov
ds
movs
sbb
ret
sbb
cmps
clc
ret
mov
sub
lds
je
cs
and
mov
loope
pop
push
pop
mov
fstp
and
adc
adc
inc
shr
bound
fidiv
inc
or
sub
and
jns
mov
retf
jmp
fwait
lea
push
jae
xor
xlat
enter
adc
push
or
dec
dec
push
or
cmp
xor
inc
popa
sti
cmps
or
test
lahf
fbld
inc
mov
jb
lods
js
loop
(bad)
fistp
push
xor
adc
xor
mov
repz
sub
mov
add
fwait
shl
sub
push
add
test
pop
dec
daa
fwait
dec
mov
push
mov
inc
adc
iret
mov
in
push
movs
int
xchg
inc
sub
mov
daa
sar
nop
icebp
pop
call
push
pop
(bad)
lods
mov
xchg
leave
mov
loopne
into
imul
fs
daa
xchg
inc
sti
jecxz
pushf
inc
push
mov
ret
xor
add
cld
mov
sub
rol
fist
dec
ficomp
add
enter
rcl
mov
dec
ins
mov
jp
and
popf
sahf
shl
mov
and
cmp
jb
xor
nop
rcr
jp
pop
xor
rcl
hlt
push
cmovbe
cwde
(bad)
mov
repz
int
popa
ss
mov
mov
call
dec
lock
xchg
xchg
jo
lods
push
fs
das
imul
sbb
jmp
(bad)
fadd
lock
jmp
aaa
mov
in
mov
sub
cwde
sbb
fsubrp
mov
ja
add
xor
inc
mov
sub
jno
sub
ins
lock
sbb
mov
cld
shl
repz
ins
xchg
sbb
test
adc
or
xor
cwde
daa
shl
mov
imul
push
sub
cmp
or
push
jo
retf
cmp
aad
add
push
pop
jp
imul
clc
stos
mov
push
and
std
pop
(bad)
sbb
and
ss
push
int
out
mov
fcom
ret
addr16
mov
je
aaa
pop
test
fcom
stos
cmp
sbb
dec
div
lods
mov
xor
jg
outs
lods
xchg
sub
xor
rol
xchg
inc
ss
pusha
push
outs
jmp
xor
push
fisttp
mov
sub
iret
xchg
iret
sbb
loope
mov
push
jo
call
jne
adc
test
sti
repnz
rcl
jnp
lock
cld
rcl
retf
adc
out
lock
cwde
in
pop
xchg
inc
outs
icebp
sbb
add
ds
loopne
rcr
mov
pop
bound
or
imul
and
sbb
leave
cdq
or
shl
pop
and
or
jmp
mov
and
mov
jae
int3
mov
inc
cmp
and
clc
pushf
std
push
jle
mov
push
in
or
shl
jle
out
(bad)
gs
mov
inc
push
(bad)
in
mov
cmc
stos
inc
cmp
fucom
xchg
popa
push
hlt
test
fs
stc
cmc
outs
add
mov
push
push
push
inc
dec
xchg
push
adc
mov
in
dec
push
ins
sbb
mov
jle
mov
stc
mov
adc
mov
jecxz
jl
popf
sbb
sahf
int
xor
cmp
out
daa
add
mov
pop
xchg
mov
or
jge
sbb
cld
jmp
push
fwait
sbb
xchg
aad
sub
mov
bound
imul
mov
jne
es
cmp
inc
daa
inc
mov
sub
(bad)
xor
fs
mov
push
stc
push
fstp
int
icebp
iret
jp
enter
ja
mov
std
leave
jmp
movs
cmp
mov
xchg
repz
sub
push
fadd
push
(bad)
jmp
jle
lock
xor
sub
not
inc
icebp
pusha
movs
mov
stc
fist
mov
sbb
call
jmp
rol
shl
push
pop
jge
or
loope
mov
mov
cmp
sbb
mov
add
in
je
inc
call
pop
mov
mov
ds
and
jnp
pop
sbb
inc
retf
jmp
xor
xor
add
pop
and
jmp
in
pop
pop
inc
dec
loop
in
jmp
dec
xor
rcl
inc
mov
(bad)
jns
xchg
mov
jmp
xchg
dec
je
leave
cld
xchg
sbb
pop
mov
xlat
pusha
pop
push
icebp
or
outs
ficomp
movs
mov
mov
mov
xchg
rcr
rcl
pop
sub
mov
in
pushf
imul
sbb
pop
pop
jecxz
push
scas
movs
sub
jmp
sub
arpl
cmp
loop
sub
or
cmp
and
in
mov
pop
xchg
ret
xchg
pop
mov
ja
dec
xchg
out
mov
aad
jmp
test
cmp
aas
sub
stos
pushf
cmp
push
jns
and
push
arpl
or
dec
mov
imul
sbb
mov
or
sahf
pusha
mov
mov
orps
scas
ja
(bad)
push
icebp
dec
hlt
pop
and
push
mov
adc
sub
call
rcl
test
arpl
xchg
ret
add
adc
or
jbe
mov
addr16
push
je
addr16
push
cmps
push
xor
adc
mov
jp
cwde
or
int
fucompp
push
icebp
(bad)
xor
jnp
dec
cmovp
cmp
retf
or
test
jbe
mov
jno
add
ret
ret
cwde
cmp
mov
inc
mov
scas
dec
sbb
stc
clc
cdq
popa
inc
dec
dec
adc
pusha
pop
scas
fld
push
aad
popa
add
stc
rol
fimul
stos
loope
das
dec
sub
fwait
mov
pushf
push
xchg
dec
pop
pushf
cmps
cmp
mov
xchg
cmp
ins
repz
mul
icebp
jns
add
test
popf
loopne
xor
push
mov
or
xchg
or
mov
adc
dec
pop
jp
add
ficomp
inc
aas
or
in
mov
jge
(bad)
sbb
retf
push
aas
sbb
dec
xchg
inc
cmp
push
ret
mov
cli
ret
xor
aam
imul
cmp
out
and
ja
adc
mov
fld
mov
jae
xchg
(bad)
loope
scas
imul
sbb
(bad)
loopne
lock
lock
push
xor
push
pusha
add
xchg
shr
lods
clc
iret
jmp
in
cmp
push
mov
add
jnp
cmovnp
out
sub
inc
out
movs
fbstp
popf
cli
pop
and
int3
xchg
retf
fst
(bad)
mov
mov
jmp
stc
lahf
mov
enter
out
cmps
test
jl
jecxz
cmp
div
mov
xchg
push
or
mov
movs
cmp
cmps
in
ror
push
dec
add
or
ds
push
retf
call
ins
pop
mov
loop
mov
loope
mov
pop
add
push
shl
test
mov
popa
adc
dec
mov
imul
jnp
into
adc
daa
sti
rcl
jmp
mov
or
push
shl
mov
pop
mov
pop
sahf
test
cmp
cld
lods
stos
sahf
into
(bad)
je
imul
mov
cmp
sub
movs
shl
and
xchg
mov
cmc
lock
and
xor
cmp
xor
and
inc
jp
mov
adc
mov
std
mov
pop
cmc
lock
icebp
loope
test
mov
fimul
cmp
dec
and
jns
xchg
xor
gs
loop
(bad)
mov
cmps
das
inc
xchg
adc
out
dec
call
xchg
and
and
mov
and
mov
movq
test
aaa
iret
add
xchg
xchg
xor
outs
mov
cmc
push
lds
add
xchg
sbb
pop
test
lods
retf
(bad)
les
dec
adc
test
or
xchg
mov
out
bound
xor
mov
dec
push
std
xchg
cmps
shr
fcom
dec
sub
inc
pop
pop
mul
mov
pop
pop
dec
mov
(bad)
push
mov
ret
std
daa
not
outs
push
pop
jbe
pop
fimul
xor
mov
out
cli
mov
(bad)
mov
and
pop
xlat
and
adc
adc
mov
pushf
movs
test
add
fcomi
xlat
ss
add
cmc
cmp
push
mov
adc
sub
adc
push
fimul
pop
pop
push
sub
or
pop
fbld
out
scas
lea
pop
dec
adc
jl
(bad)
out
jo
enter
pop
sbb
pop
push
call
adc
push
mov
retf
pop
dec
or
mov
xchg
jg
mov
push
pop
mov
sbb
dec
and
jp
sub
jmp
loop
push
bound
ret
inc
pop
loopne
pop
fwait
xchg
sbb
xchg
fidiv
stc
fwait
loope
push
dec
inc
das
push
push
ret
aad
stc
shl
enter
out
pop
cmp
cmps
jns
mov
nop
into
mov
imul
cwde
movs
lea
jmp
mov
add
mov
or
jo
aad
mov
lds
dec
out
loop
(bad)
clc
(bad)
jecxz
fbld
aam
rcl
lds
push
cmp
fimul
ja
iret
xor
sbb
cli
stos
add
neg
je
fmul
cmp
test
stc
out
mov
fwait
bound
jg
hlt
dec
inc
jbe
lahf
adc
repnz
dec
mov
cmp
cmp
inc
les
cmp
es
loope
inc
test
lock
jae
(bad)
outs
shl
mov
add
fisttp
loop
dec
cmp
push
and
popf
in
rcl
sub
push
test
out
rcr
(bad)
fisubr
jg
inc
imul
inc
or
lods
adc
ror
fs
and
ret
cmp
aam
push
and
pop
fisttp
xchg
xchg
ins
repz
inc
mov
aad
mov
adc
mov
aaa
mov
retf
push
mov
adc
or
push
cmp
adc
retf
sbb
and
mov
(bad)
stc
inc
jae
mov
cmp
and
jmp
les
push
sahf
std
int
lds
pop
ret
adc
inc
scas
ins
jp
outs
xchg
aaa
jbe
and
scas
mov
push
stc
xchg
inc
mov
jb
and
and
aaa
xchg
xlat
mov
neg
ds
(bad)
mov
fcomp
inc
dec
scas
retf
add
jl
je
mov
jl
cmp
mov
cmp
std
mov
cli
test
fst
mov
pop
mov
out
or
aas
cmp
ret
xor
loop
mov
(bad)
sub
mov
xor
repnz
cmp
add
xchg
inc
push
xchg
mov
mov
mov
cld
ftst
push
lea
dec
pushf
xlat
or
xchg
mov
or
lods
mov
mov
imul
jge
nop
fnstcw
sub
adc
pop
pop
xchg
fdiv
cmps
pop
push
jge
mov
jb
xchg
sub
mov
jl
push
int3
mov
jp
dec
cmps
loopne
pusha
test
sar
inc
jecxz
mov
xor
add
outs
cwde
push
in
lea
push
rcr
pop
xadd
xor
jns
jb
rol
sbb
cmp
xor
xchg
cmps
mov
mov
scas
retf
cmp
jb
(bad)
push
(bad)
mov
or
mov
push
pop
mov
push
cmp
rcr
and
scas
and
out
aas
add
out
rcl
or
rcl
repz
leave
aaa
xchg
xor
mov
rol
sub
sbb
daa
pop
imul
cmp
jge
mov
pop
cmp
push
lods
push
and
repz
pop
iret
jle
or
mov
push
sbb
jo
mov
je
out
(bad)
pop
lods
xor
fucomi
mov
jge
sbb
imul
pop
ds
jmp
push
fld
sar
and
out
jnp
and
jo
jb
lods
jae
(bad)
fsubr
fs
mov
inc
add
movs
pop
sbb
js
push
push
lock
add
push
in
xor
imul
imul
push
xchg
dec
loop
mov
or
(bad)
outs
loope
lods
dec
jbe
mov
jno
mov
sbb
mov
dec
mov
rol
imul
mov
push
mov
arpl
cmp
mov
jg
pop
and
retf
movs
out
push
ss
arpl
mov
pop
and
pop
jae
cld
cdq
addr16
sbb
cwde
ja
push
cld
popa
dec
pop
mov
das
aas
or
push
or
imul
xchg
dec
mov
cmp
adc
dec
lods
xor
out
arpl
xor
std
pop
mov
dec
cmps
mov
test
and
mov
test
pop
or
sub
stc
ret
ja
jno
jge
push
ss
pop
gs
out
adc
cmp
bound
ins
retf
dec
popa
or
ret
xchg
jns
push
test
enter
dec
jp
mov
shl
push
std
sub
xor
jg
jge
push
mov
clc
push
xchg
jmp
xchg
adc
inc
push
mov
(bad)
xlat
xchg
fcomip
add
out
imul
add
fistp
pop
pusha
jmp
xor
cli
dec
xchg
addr16
sub
inc
or
fdiv
xchg
aad
mov
lods
lock
mov
cmp
ror
stos
jle
add
xchg
and
and
mov
ret
jb
mov
int
loopne
and
jnp
dec
sbb
and
aaa
ja
jb
push
pop
mov
test
shl
pop
(bad)
(bad)
shr
jo
out
ins
pop
sub
push
(bad)
lock
cwde
imul
mov
jo
cli
stos
jmp
add
adc
sub
xor
mov
add
out
mov
std
ins
xchg
pushf
bound
loopne
stos
mov
mov
inc
sub
in
xchg
arpl
es
sub
push
lahf
repz
je
push
hlt
push
stc
pop
xchg
dec
xor
jp
int3
bound
dec
adc
xchg
cmp
retf
(bad)
xchg
out
push
dec
pop
jb
lods
mov
mov
cmps
mov
shl
out
loopne
dec
js
inc
lods
cld
out
mov
mov
xor
mov
popa
loop
popa
jne
cmp
lahf
mov
lods
xchg
xchg
xor
mov
jnp
xor
mov
outs
jg
es
daa
aad
push
pop
xchg
(bad)
scas
iret
ss
mov
inc
lds
std
into
out
lods
or
retf
mov
aaa
shl
xlat
and
and
in
in
fstp
inc
outs
stos
jmp
xchg
movs
or
ins
push
and
jge
mov
fs
bnd
inc
test
loop
repnz
jnp
popa
stc
leave
jp
sub
xchg
imul
dec
xchg
push
inc
mov
cli
or
xchg
add
xor
clc
cmps
mov
cmp
shl
loope
sahf
ss
push
adc
xlat
push
mov
fcmovbe
mov
ror
ins
es
cdq
push
cld
shr
push
mov
xchg
sub
mov
pop
retf
adc
je
xchg
pop
stos
int
cmp
add
sbb
xchg
aas
mov
shr
fst
dec
jmp
jns
mov
repz
outs
enter
mov
mov
scas
popf
mov
ins
push
push
rcl
das
fstp
fsubr
pop
fld
push
jns
mov
xor
lds
and
add
adc
gs
enter
adc
jmp
mov
pop
add
and
sahf
ds
movs
rol
or
es
pop
xor
sub
and
cs
mov
gs
sti
into
inc
inc
bound
cmp
lods
test
dec
or
inc
imul
dec
mov
jp
mov
xchg
push
shrd
pusha
retf
mov
and
push
push
pop
div
mov
lods
pop
xchg
sbb
idiv
scas
xchg
retf
lods
mov
leave
les
lock
xor
dec
xor
pop
retf
sbb
retf
retf
xor
jg
in
mov
movs
add
push
jae
fcmovb
in
mov
scas
sub
jno
xor
cmp
add
xor
mov
fninit
jge
rol
sub
scas
ds
fbstp
sbb
push
stos
add
outs
inc
cdq
ja
cdq
imul
dec
xchg
stos
sbb
push
ss
cwde
mov
xchg
ret
lea
addr16
dec
outs
addr16
rol
cli
mov
enter
fdivrp
cmp
into
jg
adc
pop
lock
lea
dec
mov
xchg
lock
sub
repnz
xor
call
mov
out
jns
and
test
ins
add
seto
shl
repnz
daa
int
retf
xchg
lods
aaa
pop
popa
cmp
pop
stos
stos
cmp
shr
sti
push
popa
mov
stos
inc
inc
fnstcw
mov
jge
dec
xor
mov
mov
aad
(bad)
mov
sar
sbb
popf
call
mov
dec
mov
dec
out
inc
push
xor
popf
inc
je
xor
cmp
mov
ins
loope
adc
jg
fcom
xor
into
arpl
adc
lds
sar
ds
iret
aas
push
(bad)
jge
xor
jno
mov
dec
jbe
ret
cmps
ins
(bad)
out
stos
mov
loop
dec
in
xor
les
movs
fnstcw
xor
jmp
scas
(bad)
into
js
or
and
test
xor
mov
movs
push
out
mov
in
repnz
scas
rcl
aam
je
or
push
jo
inc
xor
dec
test
jo
xchg
sub
es
xor
scas
sbb
out
shl
sti
pop
jnp
pop
jno
mov
cdq
mov
xor
pusha
into
inc
adc
cmp
cwde
and
int3
and
stc
fadd
inc
cmp
(bad)
xlat
movs
xor
pop
cmc
(bad)
popf
rol
cmp
or
mov
dec
add
sbb
mov
mov
inc
inc
add
mov
scas
or
xor
out
gs
test
xchg
mov
mov
out
pop
or
fwait
pop
mov
sub
rcr
addr16
push
fs
imul
push
std
push
xchg
cdq
xchg
lea
adc
stc
sub
xor
rol
adc
or
fnsave
out
sar
loopne
(bad)
mov
push
iret
mov
jecxz
mov
imul
pop
push
sahf
or
add
adc
popa
cmps
ret
push
out
lds
int3
das
xchg
sbb
popa
ja
xchg
retf
dec
sbb
mov
dec
mov
adc
mov
xchg
inc
ss
in
push
sub
out
in
xchg
test
pop
or
pop
ja
or
add
repnz
fwait
mov
aad
shl
jns
mov
into
cmp
inc
ror
and
sub
shr
lods
icebp
push
ret
mov
sbb
rol
test
and
push
loopne
lods
fucomi
sbb
retf
and
jns
cmp
ds
fcom
mov
in
gs
push
mov
inc
int3
push
push
out
xchg
popf
mov
ins
aam
stos
icebp
aad
adc
jl
mov
add
popf
dec
in
out
pop
ret
xchg
sti
stos
pop
mov
pop
(bad)
aas
pop
dec
or
add
pop
xchg
add
lods
lahf
mov
mov
or
inc
dec
pop
mov
add
mov
sub
push
cli
sbb
std
ss
mov
dec
in
xlat
ftst
pop
jb
xchg
les
imul
cwde
cmp
sahf
dec
test
stos
sbb
push
pop
dec
or
sti
(bad)
sub
(bad)
(bad)
int3
push
cmp
cmc
out
mov
inc
fldcw
mov
stc
ror
pop
xchg
xchg
outs
xchg
into
out
lods
stos
(bad)
stc
jecxz
pusha
scas
sbb
mov
or
scas
loopne
fist
pop
mov
movs
lds
imul
cwde
jl
movs
dec
enter
icebp
mov
xor
sbb
and
jns
and
shl
loope
fcmovne
ficom
mov
xchg
cmp
push
and
loope
stos
lods
mov
sti
cmp
int3
and
stos
test
cld
sub
lock
xchg
imul
ffree
xchg
call
aaa
mov
in
ret
cmps
sbb
xlat
mov
sbb
out
pop
dec
or
not
sbb
or
mov
jmp
retf
sub
outs
imul
out
test
std
inc
sub
push
xor
or
test
xor
je
div
repnz
jae
jge
push
push
xchg
mov
pop
sub
add
aaa
out
test
arpl
push
mov
lods
and
inc
neg
jb
das
lods
js
add
and
jp
ss
jl
dec
into
inc
out
push
fabs
inc
neg
stos
jbe
sub
jmp
fnstcw
cmps
xchg
aaa
jns
inc
xchg
xlat
fyl2xp1
pushf
movs
adc
imul
cld
mov
imul
mov
pop
fsubp
nop
jle
mov
cdq
jno
movs
push
call
cmp
jnp
push
mov
outs
jp
jl
jne
in
jmp
pop
out
std
cmps
pop
lahf
out
daa
add
fwait
and
lea
repz
fucomip
in
shr
mov
jno
gs
mov
pcmpeqw
jno
sar
adc
jns
sbb
and
rcr
fs
test
out
in
jnp
or
mov
aam
or
(bad)
dec
pusha
rol
and
inc
or
bound
aam
push
shl
fs
rol
mov
cs
aaa
jle
cmps
enter
mov
pop
cdq
adc
lds
test
add
mov
sbb
mov
mov
ja
pop
loope
jno
inc
inc
(bad)
pop
stos
xor
imul
retf
stos
clc
repz
or
push
into
mov
cmp
sbb
jns
movs
inc
pop
lods
cmps
or
jb
loope
inc
push
jne
add
fdivr
xchg
mov
pop
mov
nop
shl
and
and
jo
push
test
ins
outs
add
or
jbe
mov
cmp
inc
push
pop
fwait
arpl
into
and
mov
sub
adc
loop
fwait
cld
pop
mov
mov
mov
or
call
aaa
add
aad
jb
lods
dec
fld
sbb
push
push
xor
ret
or
adc
cmps
push
mov
mov
jecxz
dec
jg
call
mov
test
ss
mov
mov
xor
stc
mov
(bad)
leave
sti
mov
fbld
stc
out
loop
in
jns
or
jecxz
mov
xor
inc
sbb
nop
dec
jae
iret
fst
mov
xchg
(bad)
mov
lahf
imul
jmp
cld
jge
(bad)
jmp
pop
dec
jmp
push
lock
jns
mov
or
or
pop
mov
jmp
lods
clc
pop
jg
in
out
movs
(bad)
lods
push
rol
jg
mov
or
push
es
or
jg
jecxz
push
rcr
jo
out
fadd
movs
mov
sub
adc
sub
dec
repz
das
xor
cmp
push
push
imul
std
jmp
mov
inc
sub
fld
jnp
sar
ror
lods
or
push
mov
jecxz
out
shr
push
pop
fldcw
clc
pop
and
enter
out
or
dec
pop
xor
pop
repnz
cmp
das
mov
jp
jecxz
int3
lods
fs
sar
les
dec
xchg
call
jae
fstp
div
mov
imul
jp
(bad)
mov
push
(bad)
outs
out
ja
push
or
jns
idiv
in
mov
push
enter
inc
jg
mov
rcl
popf
xor
ret
sbb
fs
and
mov
sti
into
xchg
sub
push
push
bndstx
adc
cmps
push
or
mov
inc
adc
pop
sbb
mov
mov
xchg
mov
adc
pop
dec
mov
jmp
and
xor
das
fdivr
cmps
aam
sbb
and
inc
cmp
sbb
(bad)
mov
lods
cmp
mov
aas
repnz
test
inc
push
js
test
cmp
aaa
test
push
dec
les
jl
stc
push
shr
imul
enter
test
popf
rol
pop
mov
imul
cmps
loope
fisub
cmp
mov
mov
mov
push
jge
jg
imul
jne
nop
dec
rcr
stos
mov
mov
dec
movs
adc
mov
dec
mov
repnz
dec
or
sbb
int3
sbb
arpl
jp
pop
retf
jmp
fs
xor
movs
mov
mov
pop
inc
fidivr
push
mov
xchg
push
jecxz
sub
xor
ins
pushw
std
pop
(bad)
sub
xchg
push
push
pop
es
inc
push
nop
ror
div
xor
xor
in
movs
imul
dec
sub
mov
sub
mov
jp
inc
stos
add
jno
or
mov
push
jg
out
mov
repz
call
call
(bad)
cmp
repz
xchg
movzx
imul
pop
adc
mov
mov
(bad)
and
dec
(bad)
imul
imul
xor
cmp
xor
mov
iret
(bad)
loopne
sti
xchg
sbb
cmp
movs
repz
rol
xor
jne
(bad)
adc
call
mov
pop
test
icebp
int
mov
fcomp
daa
mov
and
push
xor
(bad)
adc
sub
adc
(bad)
dec
aam
out
mov
daa
adc
pop
enter
sub
add
xor
or
sbb
adc
or
xchg
or
jle
shl
into
push
dec
xchg
push
pop
add
pop
mov
stos
fist
daa
jmp
mov
(bad)
leave
mov
loopne
in
pop
inc
inc
test
and
ret
lods
inc
jmp
cmc
xchg
(bad)
lds
hlt
out
aas
mov
mov
lds
xchg
or
in
cwde
lds
nop
dec
jg
es
(bad)
in
xor
fs
stc
(bad)
push
push
push
mov
add
sub
aaa
dec
or
or
int
sub
stos
jl
mov
mov
les
rcr
(bad)
mov
int3
inc
mov
push
dec
popf
rol
je
mov
adc
add
inc
dec
cmc
(bad)
push
out
and
sbb
jne
pushf
push
inc
aad
mul
sar
addr16
mov
sbb
pop
cmp
adc
mov
dec
dec
mov
xchg
pop
in
inc
sbb
lock
nop
pop
adc
ins
mov
inc
jo
lock
push
pop
xor
or
mov
jmp
or
test
adc
sbb
xchg
(bad)
cmp
sbb
cmp
jnp
sub
(bad)
out
dec
sub
call
jg
mov
retf
cmps
mov
fs
xlat
mov
shl
scas
daa
dec
pop
sub
pop
xor
les
pop
nop
xchg
dec
movs
sbb
jmp
dec
and
icebp
xchg
xor
jns
sahf
jmp
ja
jnp
add
mul
jnp
mov
es
dec
stc
sub
xor
int
sbb
push
ds
sub
adc
or
push
mov
push
xchg
stos
jmp
(bad)
pop
nop
(bad)
push
scas
push
and
sub
popa
push
mov
inc
and
adc
ja
cmp
loope
into
(bad)
or
xor
lahf
push
xor
iret
pop
sub
lods
jne
stos
or
(bad)
adc
adc
test
add
popf
clc
lods
or
push
and
dec
xchg
neg
cmc
int
add
ror
pop
rcr
(bad)
cdq
jae
addr16
aad
dec
cmp
loop
or
dec
movs
add
sti
push
mov
rcr
cmp
cmp
daa
inc
inc
push
jmp
mov
mov
mov
sub
mov
aas
mov
inc
dec
lods
cmp
fnsave
or
neg
add
xchg
out
in
sbb
adc
in
popa
pop
pop
jo
clc
fild
or
stc
mov
(bad)
idiv
lea
jns
lods
inc
jge
mov
mov
jmp
and
jno
out
jo
outs
test
xchg
nop
test
in
repnz
cmp
pop
mov
inc
ds
push
mov
add
dec
out
call
sbb
test
push
pop
pushf
(bad)
mov
fmul
push
push
inc
push
mov
adc
nop
cdq
scas
ss
shl
fstp
imul
xchg
pop
mov
mov
dec
push
jmp
mov
add
and
cmc
std
cmp
sbb
push
adc
in
out
icebp
loop
push
mov
mov
cwde
xor
sbb
mov
scas
loope
and
sbb
mov
outs
mov
aas
add
ds
add
(bad)
push
mov
pusha
aad
jecxz
push
push
fisubr
int
jbe
inc
movs
mov
nop
mov
pop
ss
jnp
adc
or
jp
js
movs
mov
aad
mov
nop
pop
mov
fucomp
inc
sbb
test
in
sbb
push
dec
pop
leave
and
(bad)
call
xor
cmp
push
xchg
xchg
sbb
out
(bad)
fstp
xor
js
outs
push
add
dec
(bad)
mov
xchg
sbb
mov
fadd
ja
adc
dec
xor
sbb
ins
sub
jmp
dec
mov
add
test
leave
xor
into
arpl
ds
and
mov
push
xor
mov
cli
clc
jb
fcos
pusha
mov
gs
push
cli
inc
jle
dec
sar
cmp
stc
mov
dec
mov
(bad)
push
lahf
(bad)
je
push
inc
sbb
and
mov
(bad)
(bad)
lea
je
inc
cmp
mov
in
mov
ja
mov
jno
test
call
sbb
push
or
jg
nop
jle
daa
js
jb
dec
int
sbb
adc
cmp
das
jmp
and
out
(bad)
pop
movs
shr
xchg
es
xor
pop
pop
inc
lods
jmp
(bad)
xor
mov
addr16
dec
xchg
sub
xchg
cdq
outs
push
div
dec
adc
and
mov
mov
ss
ficom
popa
push
dec
and
rcr
mov
test
xchg
dec
fsubr
scas
inc
inc
mov
inc
out
jl
and
cmp
inc
mov
adc
ror
loopne
mov
das
fs
jno
inc
es
enter
xchg
leave
xor
sbb
shl
push
(bad)
jnp
(bad)
enter
pop
or
sub
mov
or
stos
adc
aad
rcr
jp
sahf
sbb
pop
adc
bndstx
xor
cmp
movs
aad
jbe
cwde
xchg
outs
mov
xchg
mov
or
fwait
push
pop
stc
inc
fwait
stc
in
or
dec
dec
adc
int
dec
push
cwd
test
mov
xchg
jnp
add
inc
bound
pop
push
test
mov
jne
lds
je
and
and
and
fs
(bad)
retf
inc
push
pop
retf
loopne
neg
fwait
or
add
cmp
push
jns
jmp
mov
cmp
sbb
ds
stos
movs
dec
jno
mov
sub
cli
std
arpl
rcr
fs
mov
cli
inc
mov
icebp
cmc
and
ret
stos
stc
aas
sbb
or
movs
pop
dec
mov
fdiv
dec
mov
ja
icebp
in
aaa
pop
int
jg
sub
pop
push
std
jmp
jno
stc
or
int
xchg
loop
(bad)
add
jo
mov
fisub
add
push
imul
arpl
data16
add
xchg
mov
outs
xchg
fidiv
(bad)
je
lods
xor
jns
cmp
into
daa
mov
ins
mov
into
(bad)
(bad)
jl
(bad)
ds
adc
pop
pusha
jle
sahf
inc
addr16
mov
pop
test
mov
dec
addr16
mov
retf
jp
mov
xchg
sub
aam
cmc
add
xchg
es
jp
imul
loop
push
in
push
lods
outs
js
js
mov
call
cmp
mov
xor
cmp
push
(bad)
dec
push
sbb
test
xchg
cmp
pop
xor
inc
pop
xchg
and
lea
push
into
pop
retf
ror
jge
xchg
sbb
adc
mov
push
ins
push
lea
mov
mov
int
push
fdiv
(bad)
pop
retf
sbb
test
push
push
sti
test
cmc
add
jb
int
rol
aas
xor
jp
imul
xchg
inc
adc
xor
push
jo
popa
inc
inc
gs
stc
stc
or
xchg
mov
jg
(bad)
test
in
dec
xor
push
mov
and
sahf
out
add
fwait
sbb
in
jb
into
mov
pop
mov
dec
sbb
and
ret
movs
mov
jb
push
out
outs
(bad)
xor
cmp
inc
dec
jne
test
pop
push
iret
in
adc
xchg
scas
cs
mov
pop
das
pop
add
dec
xlat
cmp
mov
lods
sub
shr
lock
hlt
sbb
add
lahf
loope
mov
fdivr
xor
outs
lods
dec
sbb
inc
fisub
stos
pop
retf
jbe
or
loope
lock
imul
cwde
adc
jbe
cs
mov
mov
gs
dec
push
push
sbb
mov
or
push
in
jnp
pop
out
add
pushf
xchg
lods
sbb
out
sub
cmc
xchg
out
and
xor
es
out
push
ret
fmul
jo
lea
push
and
imul
xchg
and
inc
out
es
pop
sub
push
call
or
push
iret
push
or
xchg
cmc
test
dec
xor
mov
aas
mov
sbb
jns
stos
sti
into
mov
pop
shl
adc
mov
jno
adc
not
lds
cmps
mov
xchg
jl
fwait
jp
and
pusha
fimul
push
xchg
xchg
in
mov
ins
adc
into
shr
call
fadd
or
mov
cmps
pop
cli
aam
and
es
or
or
add
cmc
push
or
pop
sbb
ret
inc
lods
add
(bad)
movs
jg
fsubr
popa
lods
sbb
mov
cmp
jecxz
fcomp
and
sbb
xchg
cs
inc
xor
mov
xlat
cs
mov
mov
push
ss
outs
popf
or
sub
add
call
mov
repz
mov
pop
mov
push
(bad)
(bad)
pop
loopne
fs
in
push
repnz
into
les
push
popa
arpl
sbb
ret
mov
je
in
and
cmps
mov
inc
pushf
sub
mov
movs
dec
popa
arpl
mov
mov
mov
shl
sbb
stos
int
xor
loop
xchg
mov
push
cmp
push
pop
or
cmovb
fadd
pop
cmc
repnz
push
xor
lods
sbb
out
sub
xor
sbb
int
cmp
fnstsw
rcl
add
xchg
lods
xchg
mov
inc
mov
(bad)
xor
push
aad
jns
jle
cmc
jge
mov
mov
jne
sub
retf
shr
jl
jno
push
push
jp
in
add
sar
jb
sbb
xchg
call
push
push
jo
ret
fsub
fwait
sahf
dec
leave
push
mov
pop
loopne
sahf
mov
jmp
or
dec
add
hlt
iret
xchg
mov
mov
sub
jmp
std
jne
jnp
and
out
imul
mov
dec
push
fisttp
in
add
stos
or
sub
adc
and
push
push
dec
dec
xchg
lods
adc
pop
push
mov
dec
jb
movs
xchg
je
pusha
cmc
outs
fcmovnu
add
pop
pop
iret
mov
jo
inc
mov
test
mov
lahf
out
xor
hlt
into
data16
int3
(bad)
jmp
(bad)
mov
mov
inc
fidiv
mov
push
sbb
xor
mov
jbe
pop
and
jo
xchg
aad
rol
xor
jne
xlat
xchg
add
sub
mov
js
sbb
ret
sub
retf
ins
add
inc
jge
push
inc
pop
pop
xor
ss
xchg
popf
fwait
pusha
ins
xor
test
pop
jbe
push
add
mov
add
nop
rol
xchg
mov
test
jne
cmp
mov
daa
fstp
daa
stc
pop
int3
inc
push
ins
push
leave
out
dec
(bad)
cmp
clc
xor
fisttp
pop
xchg
xor
inc
mov
cmp
dec
and
arpl
push
(bad)
cmp
cmp
sub
jbe
mov
imul
data16
or
pop
enter
dec
cdq
sahf
out
xor
dec
and
aaa
sbb
(bad)
jne
aam
int
loopne
jmp
scas
mov
add
fist
sub
mov
jmp
out
sahf
in
inc
jmp
add
js
loope
shr
cmc
imul
lods
cdq
mov
into
jae
out
mov
mov
inc
pop
outs
gs
test
xor
not
xchg
sbb
hlt
nop
sti
pop
jl
(bad)
mul
push
jnp
ror
jb
(bad)
in
xchg
ss
jge
mov
ja
xor
cmp
xor
je
repnz
int
sahf
std
(bad)
(bad)
outs
dec
pop
outs
fs
gs
push
loop
scas
fstp
jg
ins
mov
push
into
lahf
cli
pop
jae
cmps
pop
inc
ins
neg
or
mov
movs
mov
outs
fild
mov
mov
xchg
jge
sub
hlt
push
cmc
cld
adc
imul
sub
loopne
out
sub
mov
ud2
fxch
dec
out
xlat
out
or
mov
aas
aaa
pusha
xchg
mov
sbb
sbb
pushf
push
addr16
les
adc
pushf
and
mov
mov
add
mov
fistp
jno
cmp
loope
mov
push
push
(bad)
mov
mov
dec
push
or
add
push
int3
cmp
push
add
jbe
shl
and
push
or
(bad)
jge
and
lss
adc
dec
ror
sbb
rcl
pop
mov
scas
stos
adc
xchg
div
fmul
pop
pop
jnp
sbb
push
xor
cmp
clc
pushf
out
out
fcom
inc
rcr
inc
add
retf
mov
hlt
jne
pop
lea
mov
icebp
rcl
imul
push
sbb
mov
jecxz
jmp
jecxz
mov
cmc
pop
or
shl
mov
call
cmp
and
or
stos
push
jnp
sbb
xor
jl
stos
mov
inc
push
xchg
push
out
add
sbb
ficomp
push
cli
mov
dec
mov
mov
jbe
daa
jge
or
mov
ins
mov
out
mov
mov
arpl
stc
fcom
pop
mov
sub
dec
stos
mov
xchg
add
popf
retf
jmp
scas
xchg
jg
adc
loopne
dec
fistp
aas
cmp
loope
stos
mov
cmp
add
or
pushf
dec
dec
xor
in
and
jge
call
inc
mov
cmp
or
mov
cli
xchg
jl
mov
mov
jnp
jo
outs
inc
int3
xchg
xchg
add
dec
mov
(bad)
into
jae
jmp
push
adc
adc
xor
es
or
mov
scas
fwait
mov
add
ss
outs
mov
lds
push
test
push
cmc
outs
iret
adc
scas
push
shl
mov
inc
or
and
pop
push
sbb
ins
xchg
gs
jecxz
sub
cmp
leave
clc
pop
in
xchg
mov
cdq
cmp
test
or
outs
iret
neg
outs
mov
mov
mov
pop
cmp
mov
sub
retf
js
repz
push
into
ins
daa
pop
ss
adc
clc
mov
lea
dec
cmps
les
popa
inc
inc
and
sbb
sub
mov
xchg
mov
popa
cmp
push
mov
and
aam
push
stos
fs
test
pushf
jg
cld
push
pop
jl
enter
jmp
mov
es
ins
repnz
add
dec
stc
in
test
stos
or
aad
and
or
adc
add
cmp
jmp
pop
popa
pusha
add
shl
and
in
mov
cmps
cli
daa
mov
sbb
inc
daa
das
mov
xchg
cli
mov
adc
mov
xchg
loopne
cmp
push
mov
pop
mov
jg
int
sbb
fsubr
sub
and
(bad)
adc
fwait
xchg
or
sub
(bad)
or
call
in
mov
lods
jnp
jg
xchg
jmp
adc
scas
mov
mov
out
les
imul
sti
in
arpl
sub
or
jne
repz
push
add
xor
bound
adc
mov
test
dec
stos
mov
(bad)
fiadd
push
rep
stos
out
push
popa
xlat
dec
adc
clc
std
pop
mov
into
dec
xchg
div
cmc
cmps
xchg
(bad)
mov
(bad)
cmp
jne
mov
sbb
sbb
pop
push
test
add
test
(bad)
or
mov
gs
fild
mov
xchg
je
aam
push
lahf
int
mov
cmp
push
sbb
pop
fucomp
test
mov
das
fdivr
mov
jmp
mov
mov
jmp
iret
int
movs
mov
in
cmp
cmp
cmps
aad
into
pop
xchg
mov
push
call
or
cli
sub
mov
ret
clc
push
xor
mov
lods
jg
inc
mov
pop
cs
add
add
sub
addr16
push
mov
loope
(bad)
popa
test
sub
das
mov
ins
dec
pop
in
mov
shr
mov
push
mov
jecxz
dec
jo
inc
xlat
lahf
push
xchg
jno
and
cwde
int
jbe
and
or
push
ss
sub
mov
or
push
lea
jge
jno
cmc
adc
pop
xchg
add
pop
sub
jle
mov
jmp
fimul
add
push
mov
scas
mov
hlt
arpl
sbb
pushf
es
push
pop
adc
in
dec
lea
arpl
mov
xor
loopne
push
loop
and
and
push
inc
ret
scas
movs
and
adc
cmp
dec
cmc
inc
mov
sub
lods
test
in
std
sbb
and
and
and
sub
movs
fstp
xchg
leave
(bad)
jge
ja
push
(bad)
and
and
clc
sahf
cmc
leave
cdq
and
aad
in
cli
arpl
(bad)
sar
ins
inc
prefetchw
and
mov
cmp
cmp
inc
icebp
daa
popf
jp
or
fwait
jg
xchg
lods
stos
sbb
or
clc
push
mov
pop
shl
test
push
mov
stos
xlat
add
pop
pop
inc
bound
leave
in
sbb
cmp
add
jne
inc
ret
call
jne
call
into
fwait
or
sahf
test
pop
push
bound
fisubr
xchg
pop
loop
aas
mov
jmp
inc
cli
pop
ds
cmp
cwde
ret
rcl
test
iret
ins
and
int3
push
dec
xor
add
hlt
push
scas
aad
fsub
pop
cmp
arpl
cmp
push
or
int
cmp
push
loope
sub
mov
mov
pop
clc
sti
jl
jg
cmp
xchg
movs
cmp
aam
push
fidivr
xchg
stc
push
push
xchg
cld
ror
add
div
xor
test
mov
cli
mov
cs
(bad)
out
leave
cmp
mov
or
pop
mov
or
mov
loopne
xlat
and
sub
xor
add
call
ror
icebp
or
shl
or
xchg
je
fmul
out
xor
cmps
sti
add
inc
ins
sub
xchg
add
mov
mov
sub
cmps
fbstp
cs
cmp
inc
adc
in
and
shl
cli
(bad)
mov
or
pushf
xor
icebp
jae
sub
cmps
pop
test
cs
(bad)
rcl
and
push
scas
ins
mov
mov
call
aad
into
add
sub
sti
inc
rol
mov
inc
pusha
fsub
mov
pop
popa
cdq
and
loop
add
adc
out
mov
push
in
js
push
rcr
ret
outs
sub
or
fwait
jmp
pop
jmp
or
and
pop
fs
outs
out
cmp
dec
lods
leave
jmp
test
push
dec
jnp
jmp
and
dec
cmp
jg
mov
jnp
icebp
dec
(bad)
and
mov
xor
xchg
ja
xchg
jb
dec
mov
add
mov
sbb
push
ins
xchg
lahf
in
in
leave
leave
push
pop
cmp
cwde
aam
aas
add
popf
rcl
push
inc
imul
push
sub
sub
ds
(bad)
call
and
psubsb
mov
jg
sbb
and
in
fwait
cmp
xor
cmp
jo
mov
pop
sub
inc
dec
out
out
loop
mov
outs
ins
loop
sub
in
in
xchg
sub
inc
mov
pop
sbb
mov
sub
inc
cld
cmp
and
iret
movs
in
dec
ins
retf
jns
scas
pop
outs
xor
cdq
ins
aaa
dec
lahf
pop
(bad)
(bad)
jl
ret
in
dec
cmp
mov
aad
stc
or
mov
jns
(bad)
mov
int
pop
inc
push
stos
xor
call
adc
cmp
in
push
inc
rol
data16
and
mov
out
fs
aas
xor
out
pop
pop
xchg
fcmovbe
daa
sub
mov
loope
(bad)
fmul
idiv
cdq
mov
cmp
jne
sbb
bound
and
out
mov
lahf
fsubr
cmp
cdq
aaa
rcr
adc
xor
xchg
lods
mov
clc
jmp
jmp
pop
das
pop
inc
add
pop
dec
mov
dec
enter
cdq
daa
jmp
dec
idiv
fstp
or
and
fdiv
dec
movs
pusha
enter
mov
adc
test
clc
mov
fdivr
cdq
lods
pushf
ja
inc
jns
popa
call
adc
ja
or
sub
aaa
adc
jbe
jmp
pop
fnstenv
loopne
sbb
cmp
dec
sbb
hlt
or
xchg
aam
(bad)
pop
pop
or
cli
or
outs
jae
idiv
push
scas
or
and
pop
cmps
icebp
sti
inc
mov
sub
out
inc
dec
pop
cmps
push
sbb
jbe
jmp
adc
stc
cmp
shl
sti
cld
shl
jecxz
or
dec
repz
mov
into
xchg
inc
int3
popa
cmp
inc
adc
adc
adc
ds
mov
xor
pop
xchg
jle
push
push
sbb
out
fcomp
(bad)
dec
sbb
cmp
mov
movs
adc
repz
pop
bound
sbb
dec
rcl
pop
and
jecxz
sub
push
and
inc
in
sti
test
pushf
lock
jle
movs
sub
int3
ror
in
neg
ins
fisub
pop
adc
jnp
(bad)
mov
sub
or
and
ror
jmp
push
xor
pop
(bad)
cdq
cmps
es
(bad)
sbb
add
dec
pop
mov
test
mov
jmp
leave
out
in
popf
ins
fcomp
popf
out
cmc
xchg
enter
and
dec
retf
jae
cmp
push
retf
scas
loope
adc
dec
jmp
outs
pushw
mov
push
pop
inc
jne
add
popa
xchg
push
xchg
push
cwde
xor
movs
add
xchg
and
mov
xor
(bad)
jl
mov
jno
xchg
out
repz
xchg
(bad)
sbb
push
sub
fnsave
ss
repnz
iret
jl
out
adc
outs
inc
movs
sub
xor
xchg
add
mov
mov
mov
pop
xchg
cwde
test
mov
(bad)
jbe
dec
mov
inc
inc
cmps
inc
dec
std
aaa
imul
fld
fsubr
inc
(bad)
in
jns
call
retf
push
out
sti
xchg
adc
dec
or
test
pop
retf
jb
inc
or
or
jecxz
fs
adc
jno
in
cmps
mov
xchg
scas
lds
outs
fwait
in
sbb
arpl
(bad)
and
sbb
xchg
nop
cmps
in
cs
int3
ja
dec
rcr
xor
addr16
bound
mov
stc
out
mov
lods
push
mov
imul
adc
xor
hlt
(bad)
nop
mov
adc
dec
sub
rol
dec
jge
cmp
or
data16
pop
jns
dec
test
mov
dec
or
repz
iret
aas
inc
out
push
pop
sub
push
sbb
inc
jmp
arpl
xchg
cli
mov
lock
aad
mov
push
xchg
inc
es
fistp
push
ret
repz
outs
mov
iret
out
mov
(bad)
fiadd
or
shl
xchg
mov
cmps
cld
push
pusha
xchg
int
add
in
or
sbb
jnp
stc
ror
pop
sub
cmp
loop
movs
or
mov
cld
add
scas
cmp
imul
test
or
(bad)
pop
lds
les
jge
jns
vmread
adc
push
loopne
push
popf
mov
jecxz
je
sbb
addr16
test
jo
push
into
sub
cwde
push
dec
push
mov
sbb
shl
pushf
fisub
pusha
and
dec
push
add
adc
jns
xchg
aam
arpl
cmp
cmp
xor
out
push
mov
or
(bad)
dec
arpl
and
push
in
cs
mov
mov
or
cli
cmps
or
mov
cdq
test
inc
loop
mov
pusha
jl
aam
not
(bad)
cmp
mov
iret
jg
mov
mov
pop
cmp
dec
add
dec
mov
add
pop
leave
fwait
mov
push
jge
jg
dec
sahf
and
add
dec
push
and
fidivr
call
pusha
clc
push
mov
out
js
or
fsubr
in
mov
mov
enter
test
xchg
fisubr
xchg
frstor
lock
loope
sar
adc
cmp
add
and
push
inc
xchg
scas
ss
mov
loop
xchg
pop
pop
lahf
push
ret
sbb
stos
sbb
jle
out
and
fnsetpm(287
mov
sub
lds
shr
aad
leave
es
or
repnz
out
jp
mov
fdiv
out
sub
loope
in
mov
in
sti
mov
dec
mov
adc
repnz
sar
(bad)
retf
cmps
sub
addr16
out
xchg
dec
push
mov
mov
std
add
int3
leave
fisubr
push
ins
cwde
add
mov
and
cs
and
add
out
fadd
dec
(bad)
js
sub
jns
cwde
das
push
or
js
push
mov
jmp
call
leave
adc
arpl
retf
mov
pushf
(bad)
aad
aam
sbb
shl
les
imul
mov
sub
push
gs
cli
push
aad
sub
out
or
outs
xchg
clc
stc
mov
and
xlat
repz
adc
xor
or
or
cli
inc
js
sbb
inc
cmc
pop
inc
cld
mov
mov
xor
test
inc
mov
ja
and
xor
mov
jno
sti
in
cmp
cwde
add
jns
lods
cmp
sub
and
loope
(bad)
push
sbb
popf
mov
xchg
mov
jge
mov
xor
jle
ins
jbe
addr16
ret
addr16
add
sbb
cmp
fld
js
dec
pop
into
mov
mov
cmc
rcl
dec
push
fcomp
fst
xchg
inc
call
adc
scas
dec
movs
sahf
inc
xchg
mov
loop
loope
das
out
cmp
je
bndstx
dec
das
jle
push
aam
mov
pop
fsubr
pop
sbb
xchg
xchg
xchg
adc
ss
outs
and
bnd
xor
adc
jns
sbb
sub
sbb
sub
jle
mul
xchg
outs
or
fmul
jae
enter
xor
scas
add
push
aas
ret
std
jge
call
and
jge
push
lea
push
jle
xor
jmp
icebp
sub
stos
movs
adc
jge
leave
mov
ins
adc
(bad)
sti
push
ror
ja
push
or
push
(bad)
mul
xlat
xchg
sub
scas
mov
pop
inc
and
jg
pop
in
cmps
aaa
aad
push
xchg
das
js
and
or
ror
sub
add
(bad)
stc
(bad)
jmp
pop
sub
rcl
cli
push
ins
fist
shr
movs
sbb
dec
jmp
ins
test
inc
fwait
dec
(bad)
add
mov
das
or
cmp
or
pop
jp
xchg
je
outs
into
test
shr
adc
mov
daa
cld
in
add
retf
out
clc
bound
je
push
push
mov
(bad)
sahf
add
inc
call
outs
sbb
add
pusha
jmp
enter
push
inc
pusha
loop
(bad)
popa
gs
sar
aad
inc
ja
cdq
(bad)
sbb
rep
mov
stos
xchg
iret
and
pop
xchg
std
add
jmp
test
pusha
int
add
mov
sbb
jge
mov
lea
adc
(bad)
lahf
pop
mov
addr16
inc
repnz
sbb
mov
mov
lahf
idiv
xchg
mov
aaa
push
ror
cmps
cwde
jbe
repnz
int3
pop
in
lea
ja
or
mov
dec
jg
fnstsw
movs
xor
in
pop
xchg
repnz
cs
(bad)
or
jg
xor
push
clc
mov
dec
out
fstp
push
aaa
fadd
and
aad
jp
mov
test
mov
lock
(bad)
mov
rol
shr
xchg
jecxz
mov
sahf
loopne
cli
pop
inc
js
sub
in
cmps
pushf
aaa
adc
outs
add
mov
lds
adc
loope
cmps
cmps
js
mov
and
stc
jns
cmc
mov
cmps
and
sub
xlat
int3
rcl
outs
das
pop
fsub
fld
add
pushf
popf
mov
xchg
test
aam
lds
and
loope
mov
add
cmp
jl
xor
xchg
mov
inc
fild
stos
sar
call
xchg
lods
test
pop
mov
inc
mov
out
jecxz
mov
mov
or
sbb
pop
outs
mov
or
mov
mov
ds
mov
sub
adc
push
sbb
push
aad
dec
addr16
sar
mov
into
in
je
and
push
aad
lahf
sbb
cmps
imul
inc
add
movs
in
movs
xchg
retf
adc
or
push
fwait
sbb
std
in
pop
pop
xor
cdq
sub
cmp
or
sti
cwde
shr
div
not
outs
icebp
inc
push
out
shl
sbb
not
stos
add
shl
cwde
sbb
sub
adc
aam
jge
xor
mov
out
add
mov
dec
addr16
arpl
popa
pop
sub
mov
movs
fild
je
push
jle
mov
pop
or
xchg
sub
dec
sbb
lea
xchg
sahf
and
je
adc
mov
jge
mov
lea
sbb
mov
jns
push
xlat
push
or
stos
push
out
mov
(bad)
test
test
aaa
pop
scas
mov
or
add
(bad)
out
pop
or
sub
cmp
daa
int
xchg
(bad)
push
ret
and
sbb
xchg
(bad)
jno
xchg
fldenv
push
add
je
sub
sbb
jbe
retf
aad
in
xor
movs
and
mov
pop
adc
test
jp
ror
outs
push
pop
lods
enter
jmp
and
cdq
ror
cmc
mov
sahf
sbb
mov
adc
ss
jnp
adc
ds
int3
int3
jl
pop
loopne
fisub
retf
mov
loop
rol
fdivp
add
dec
pop
cmp
out
xchg
mov
pop
lods
sbb
test
mov
mov
xchg
and
pushf
mov
cmp
mov
push
into
mov
xchg
(bad)
rol
scas
sbb
and
out
xor
shr
cmps
mov
inc
sahf
xchg
mov
xchg
or
pusha
jl
jae
shl
loopne
cdq
dec
sbb
enter
xchg
outs
cs
cmp
adc
pushf
or
(bad)
cdq
clc
pushf
in
lock
mov
dec
movs
mov
dec
sbb
cmp
int3
(bad)
(bad)
fsubr
dec
jle
mov
test
shl
xor
hlt
fisttp
jne
popa
das
ins
xor
push
shl
pop
inc
je
into
(bad)
call
inc
or
imul
sbb
sub
iret
sub
es
push
dec
out
(bad)
fdivr
mov
test
in
imul
jbe
in
cmp
pop
aaa
pop
pusha
inc
adc
and
mov
cs
(bad)
sub
and
mov
out
or
dec
stos
fsubr
xor
mov
add
aaa
es
sbb
out
adc
adc
mov
mov
(bad)
repnz
cli
inc
fwait
mov
mov
adc
push
test
scas
cld
iret
pop
mov
xchg
or
or
mov
mov
ret
ret
jno
push
xlat
nop
sub
not
dec
push
out
ss
mov
(bad)
aad
pusha
mov
add
cmc
aam
and
loopne
aad
stos
inc
sub
cmp
je
push
lock
mov
cwde
enter
rcl
jle
retf
test
fiadd
repnz
sahf
xor
cmp
xchg
add
dec
daa
adc
das
xchg
ficomp
xor
jns
loop
push
jbe
fisttp
push
and
in
and
pusha
or
pop
xor
push
cmp
(bad)
shl
sub
or
dec
sbb
int
xchg
shl
stos
test
daa
ins
jno
push
(bad)
icebp
cwde
aas
aaa
(bad)
pop
sub
daa
daa
push
mov
and
cwde
lea
dec
push
cdq
mov
fsub
retf
mov
int
into
xor
mov
or
and
mov
jne
pop
pushw
pop
add
fdiv
sahf
lock
(bad)
push
adc
sub
xchg
adc
sti
adc
adc
add
(bad)
jmp
sub
adc
dec
xor
(bad)
pop
movs
out
xor
sub
lods
or
test
mov
cld
or
clc
test
ret
pop
xlat
rol
jge
push
and
or
jae
cmp
xchg
sub
jno
test
mov
push
adc
adc
or
pop
or
dec
adc
test
sub
cli
fstp
or
ret
and
out
shl
imul
sbb
push
lods
mov
inc
jp
nop
cmps
bound
test
inc
dec
or
xchg
mov
cmps
cmp
mov
les
push
pop
jle
lods
xchg
xor
imul
sbb
xchg
leave
(bad)
lock
xor
pop
or
pop
dec
addr16
jl
cmc
add
cmp
dec
hlt
retf
loop
xchg
jmp
sub
cli
stc
scas
mov
mov
xchg
ror
jge
mov
cmp
sbb
outs
cmp
cmc
cli
imul
dec
add
adc
add
dec
mov
shl
dec
(bad)
jnp
arpl
jecxz
push
xchg
leave
xor
add
jmp
jl
loop
(bad)
xchg
fmul
(bad)
iret
jbe
mov
jmp
push
call
(bad)
gs
jle
pop
dec
ins
or
add
and
jns
mov
jmp
std
xor
pop
pushf
inc
in
inc
adc
cmp
arpl
sbb
inc
test
mov
mov
inc
hlt
clc
clc
ror
pop
add
jns
xchg
aaa
jmp
push
xor
imul
sub
rcr
or
les
dec
dec
clc
mov
xchg
stos
cmp
adc
in
dec
shr
lods
jbe
lahf
cmp
clc
idiv
ins
add
pop
mov
test
jmp
icebp
loop
mov
cmc
stos
pop
je
js
scas
inc
jns
in
dec
repnz
and
push
test
push
je
jb
sar
js
test
fcmovnb
push
ret
inc
inc
push
inc
cmps
ror
ins
fmul
iret
outs
push
daa
xchg
cld
test
popf
repz
aad
dec
(bad)
xchg
enter
in
enter
and
mov
xlat
ins
scas
das
add
ins
test
and
ss
adc
pop
jnp
pop
ja
inc
lahf
xchg
add
jo
push
out
and
rol
jns
cli
das
or
add
outs
and
aaa
jmp
or
and
mov
repnz
and
adc
aam
pushf
mov
sub
repz
sbb
aam
retf
frstor
stos
add
or
cmp
push
mov
fnstsw
mov
nop
imul
es
dec
sub
cmp
or
repnz
or
les
ret
mov
int3
call
lods
popf
dec
imul
push
mov
xchg
and
xor
lods
dec
ins
dec
pushf
es
bound
jae
(bad)
aaa
mov
stc
jnp
mov
cs
loop
and
and
adc
fist
adc
mov
in
jo
mov
mov
sahf
pop
aad
in
mov
push
int3
sbb
aas
test
icebp
or
jg
je
out
mov
gs
ds
sub
jge
sbb
inc
xlat
(bad)
xlat
jnp
xor
jmp
jge
ret
mov
(bad)
jb
hlt
ret
xor
popf
and
aam
add
and
dec
imul
dec
jp
shr
push
cld
daa
and
(bad)
xor
cmp
loopne
jge
xchg
mov
ins
not
mov
xor
dec
icebp
sub
sahf
call
movs
clc
push
push
mov
lods
les
(bad)
lods
add
fidivr
(bad)
ds
into
lea
mov
(bad)
dec
inc
mov
fcomp
jo
xchg
push
mov
popa
cmc
or
sahf
inc
das
and
outs
out
dec
or
mov
pop
and
jle
imul
and
inc
push
dec
mov
iret
fld
xchg
(bad)
or
in
add
inc
pop
mov
pop
jbe
cmp
es
mov
retf
sub
(bad)
(bad)
stc
cmps
fwait
in
ffreep
pushf
loope
outs
fs
xchg
es
mov
push
retf
scas
ffree
mov
sbb
fsubr
daa
sbb
lods
aas
ds
xchg
ret
pushf
mov
xor
inc
jecxz
stos
enter
and
dec
or
mov
or
mov
jno
daa
xor
shl
daa
enter
mov
stos
test
sub
cmps
and
add
jl
frstor
shl
call
cmp
and
bound
lods
jecxz
arpl
scas
cwde
es
ror
sbb
test
test
fadd
rol
fwait
jmp
pop
in
push
pop
popf
add
mov
pop
into
and
das
add
nop
inc
cmc
inc
xor
or
push
int
std
mov
dec
and
stos
js
mov
data16
outs
jg
pusha
ret
xchg
push
sub
xchg
retf
das
sub
and
push
mov
xor
cmps
dec
out
or
rol
addr16
cmps
(bad)
retf
cmp
mov
mov
add
dec
out
sbb
out
enter
(bad)
sahf
pop
pop
je
daa
mov
lods
sub
arpl
(bad)
mov
mov
mov
xchg
ins
and
test
cvttps2pi
cmp
in
cs
mov
cwde
shl
mov
mov
pop
mov
cmp
jb
jecxz
sahf
dec
dec
imul
into
scas
xor
mov
movs
ins
test
add
loop
stc
push
inc
jnp
cwde
cdq
cwde
test
mov
shl
inc
push
hlt
push
jns
and
mov
push
xchg
sub
xor
sahf
clc
sub
mov
lods
mov
push
dec
cmovne
mov
jecxz
sub
es
cmp
scas
mov
jb
je
sbb
mov
jmp
cmps
popa
clc
(bad)
cmp
into
sbb
push
pop
mov
pop
cmps
mov
out
or
test
and
mov
bound
cmp
cmp
sti
mov
imul
sar
jb
xchg
sti
sub
stc
cmp
sbb
lahf
xchg
push
xchg
xor
jb
mov
clc
into
and
test
call
test
push
cmp
and
dec
add
lock
shl
fcmovb
inc
xchg
ins
and
leave
test
jmp
pusha
scas
or
jge
or
mov
xor
popa
psrld
scas
(bad)
ds
cmp
ficomp
push
neg
add
(bad)
dec
test
js
out
mov
sbb
adc
jle
add
pop
jle
out
lea
fs
mov
pop
push
and
fisubr
fxch
cmps
das
pusha
xor
pop
sub
stos
ins
push
cmc
dec
out
int
cmps
add
(bad)
fnstsw
movs
jo
pop
test
cmp
adc
psrlw
out
idiv
dec
pop
popf
icebp
es
hlt
cmp
lock
cmp
stos
jno
push
push
push
mov
mov
xchg
(bad)
sbb
scas
mov
imul
pushf
pop
stos
call
mov
test
(bad)
ins
jbe
test
icebp
mov
les
push
xchg
add
sbb
stc
lahf
ins
sar
scas
mov
jecxz
ror
cmp
cwde
xchg
loopne
(bad)
int3
fidivr
shr
dec
jp
jle
leave
xor
sub
or
or
push
pop
cmps
int3
mov
ja
lods
aam
adc
int3
pop
dec
inc
dec
pop
cwde
ret
sti
push
dec
xchg
data16
jbe
ret
inc
scas
imul
xchg
out
xor
mov
or
cli
rcl
(bad)
xor
xchg
repnz
xor
mov
cdq
push
mov
or
loope
into
sub
je
and
rcl
mov
into
jmp
dec
mov
or
stos
or
dec
or
shl
mov
pop
pop
loope
std
fsub
or
icebp
mov
jecxz
js
test
xlat
cmc
test
add
cmp
or
inc
sbb
mov
(bad)
fidivr
xchg
into
jnp
mov
adc
push
jmp
mov
dec
pop
and
std
cmp
hlt
fnsave
adc
cmp
les
sbb
ret
xlat
imul
xor
out
hlt
pop
lods
call
(bad)
mov
sbb
dec
stc
mov
jecxz
sub
and
stc
pop
ins
test
push
loopne
lds
mov
(bad)
xchg
stc
jp
test
adc
pop
push
jno
loopne
mov
loope
dec
into
cli
mov
or
int
movs
mov
mov
jno
fst
jb
xor
xchg
les
dec
popa
mov
into
jmp
cmp
or
jnp
retf
inc
inc
push
mov
shl
push
stos
jl
cmp
daa
imul
sub
inc
dec
jge
mov
pushf
mov
mov
loopne
fstp
clc
sahf
mov
retf
adc
retf
xchg
fist
ret
mov
(bad)
mov
test
icebp
sbb
mov
dec
lea
mov
or
mov
or
dec
cs
fsubr
inc
int3
sti
int
adc
mov
add
adc
icebp
movs
(bad)
call
ficomp
push
jl
jbe
fistp
imul
mov
cli
mov
shl
rol
and
aaa
lock
mov
(bad)
dec
mov
into
cld
pop
ss
or
mov
fwait
or
mov
shr
mov
or
sub
adc
xchg
sub
mov
sub
psrlq
test
sbb
add
rol
call
out
sbb
std
mov
dec
aam
xchg
nop
jne
ret
enter
sti
in
xchg
mov
std
cdq
sub
mov
pop
loopne
push
mov
sbb
or
add
leave
push
fcmovne
push
sbb
fistp
pop
daa
add
retf
inc
cdq
(bad)
(bad)
into
test
nop
(bad)
adc
cdq
mov
div
xor
lea
sub
das
cmovae
fadd
fld
in
mov
loopne
add
push
(bad)
and
cdq
fucomip
jp
xchg
inc
cmc
push
sbb
sub
adc
ins
and
fisub
sub
xor
and
push
in
adc
lods
sbb
sub
xor
outs
cmp
div
je
adc
push
mov
mov
sub
xor
je
out
mov
inc
enter
jp
mov
bound
and
getsec
sar
ss
and
cs
lahf
imul
push
fldcw
call
or
jno
sub
cmp
mov
or
jae
es
mov
add
and
rcr
ins
js
add
and
dec
stos
mul
loop
and
icebp
push
mov
xchg
ror
xor
mov
jns
pop
call
fisub
fsub
jle
lods
push
or
lea
or
loop
cmp
out
mov
es
(bad)
xor
scas
jmp
pop
in
js
xchg
hlt
jmp
movs
xchg
mov
mov
and
test
push
or
mov
ins
aaa
mov
ficom
test
push
fstp
inc
xor
mov
scas
jns
pop
pop
push
jo
gs
push
pop
movs
inc
xchg
add
pop
cmc
jne
jne
clc
mov
(bad)
(bad)
fst
sbb
jbe
mov
jb
sbb
add
in
or
jge
or
sbb
or
adc
aam
es
mov
push
(bad)
pop
cdq
call
movs
dec
dec
pop
ins
shl
mov
loop
push
dec
xchg
push
push
push
ds
mov
adc
gs
clc
fsub
or
sub
mov
out
push
cmps
sub
adc
je
test
dec
cmp
retf
xchg
mov
retf
pusha
loope
sub
pop
sbb
mov
inc
adc
test
cli
add
jne
add
gs
popf
and
fisubr
xor
repnz
xor
mov
jmp
fdiv
mov
sar
sbb
mov
nop
(bad)
cld
add
ds
aas
fsubr
inc
je
test
dec
xor
movs
dec
mov
test
ret
repnz
(bad)
out
enter
ja
jmp
sahf
data16
aaa
dec
addr16
cmp
sti
fs
mov
mov
imul
and
stos
lahf
pop
cmp
lods
fsub
mov
clc
out
stos
pop
dec
jmp
das
jecxz
pop
cli
cmp
xchg
cmc
add
int
mov
icebp
ins
push
pushw
mov
das
adc
inc
sar
retf
jmp
xchg
hlt
add
imul
xlat
mov
out
cli
mov
ja
jmp
jo
mov
mov
ja
push
jne
add
mov
movs
pop
outs
aam
pop
outs
xor
stos
push
dec
pop
(bad)
push
cmps
bound
adc
mov
aaa
jmp
retf
int3
cs
and
add
dec
mov
neg
rcl
push
dec
sub
and
xor
mov
test
in
mov
cmp
sbb
ret
cmp
repz
dec
cld
dec
adc
mov
or
retf
jno
push
cld
inc
loope
xchg
mov
loop
inc
push
mov
inc
clc
cwde
xchg
mov
push
nop
inc
pop
test
sti
jle
out
test
repz
adc
mov
lea
cmp
pop
jecxz
pop
lea
mov
mov
adc
ror
out
in
or
cmp
mov
retf
ins
out
or
pop
inc
aad
rcl
pop
push
daa
call
jns
xor
sbb
push
ret
jmp
sbb
push
dec
and
pop
aas
add
jle
in
repz
mov
mov
scas
mov
or
push
fs
pop
xor
ficom
jns
dec
xor
stc
seto
lods
cmp
or
je
test
adc
lahf
mov
inc
aas
inc
adc
dec
cld
mov
mov
fisub
cmp
loopne
add
push
xchg
pop
rcl
adc
adc
aaa
cmps
pop
ja
ror
dec
lds
push
dec
mov
int
xor
imul
jb
jnp
and
repnz
push
(bad)
movs
ins
mov
loop
iret
mov
loop
push
jns
ja
xor
jle
pop
test
sbb
cli
and
mov
movs
hlt
or
lods
mov
cwde
in
pop
inc
dec
or
not
mov
test
mov
cmps
out
mov
clc
lds
dec
jae
cwde
idiv
retf
in
sub
enter
sub
pop
cmp
repnz
mov
dec
push
adc
mov
fwait
sar
adc
call
ins
or
jp
push
cmp
ss
addr16
push
mov
cli
stc
sub
xchg
or
adc
movs
cmp
rcr
vmread
rol
retf
std
loop
or
addr16
or
int3
sbb
xchg
add
dec
sub
lods
dec
sub
pop
dec
cmp
into
push
dec
std
aaa
mov
sub
push
and
gs
repz
xchg
cmps
mov
jle
jmp
cmp
out
sub
dec
repz
int3
mov
inc
dec
int3
cmp
inc
aas
xchg
neg
lock
mov
lds
fwait
and
loopne
sub
je
mov
aaa
in
shr
xchg
push
mov
lods
(bad)
imul
push
dec
das
int3
lods
xor
xor
ror
inc
es
out
push
fwait
popf
int
dec
ins
add
sbb
xor
fidiv
push
jb
fstp
call
adc
lods
ret
dec
and
mov
push
fwait
jno
shl
pop
data16
cmp
jae
sub
loope
inc
jae
cmp
ret
ret
shl
rcr
mov
jg
push
inc
sbb
arpl
repnz
outs
and
push
add
xchg
cmp
retf
jl
cwde
in
pop
mov
out
xchg
test
dec
cmp
lds
sub
xchg
mov
test
shl
and
lock
std
ja
dec
cld
xor
mov
dec
push
aas
fst
pop
cwde
mov
daa
(bad)
sbb
mov
stos
in
retf
(bad)
out
sub
mov
adc
jmp
adc
add
out
mov
cmp
push
mov
dec
xchg
cli
(bad)
mov
mov
in
into
mov
(bad)
xchg
mov
test
jge
sbb
xor
adc
nop
out
aad
imul
adc
and
rol
dec
add
mov
fstp
dec
leave
cmp
sub
test
sub
test
(bad)
xor
cwde
and
xor
cmp
cmp
dec
fisttp
das
sti
outs
jne
ret
iret
inc
addr16
pop
add
add
cmps
adc
push
imul
cs
add
jae
jmp
mov
sbb
push
add
clc
aam
xor
shr
bt
rol
les
and
mov
inc
cwde
and
xlat
push
dec
bound
cdq
push
nop
add
fs
clc
cmp
jae
cli
jmp
nop
mov
out
sub
xor
xchg
test
movs
jo
jecxz
jmp
ret
mov
xor
lds
mov
fidiv
mov
mov
call
jo
call
stc
inc
xor
adc
dec
sbb
in
mov
(bad)
nop
mov
sbb
and
cmps
xchg
xchg
sub
sbb
dec
adc
mov
sbb
call
popf
sbb
sar
inc
das
mov
call
nop
sti
lods
adc
or
adc
sbb
std
rcl
sbb
inc
retf
pop
sub
js
and
movs
leave
out
jns
and
ret
lds
xor
jmp
xlat
fistp
adc
scas
push
fs
ror
(bad)
jg
push
mov
xchg
inc
jae
cmp
imul
out
movs
cmps
repnz
clc
or
pop
pop
fidivr
adc
loopne
call
cdq
jl
mov
or
dec
mov
add
sub
movs
xlat
aam
jmp
xor
fwait
arpl
sahf
mov
pop
sub
es
mov
jbe
rcr
mov
je
pusha
lea
addr16
mov
rcr
pushf
inc
pop
mov
gs
add
stos
push
xlat
push
es
mov
xchg
or
shl
adc
jne
or
addr16
outs
mov
cmc
push
stc
or
pop
adc
outs
fld
test
sbb
movs
mov
xor
jge
dec
cmps
fiadd
jecxz
js
cmps
jmp
cmp
push
(bad)
jo
push
enter
adc
sbb
pop
movs
mov
sub
push
movs
out
cli
add
pop
repz
cmp
inc
jle
data16
push
pop
lahf
out
rol
(bad)
mov
mov
and
cmps
mov
sbb
jo
out
mov
mov
loop
mov
inc
push
push
inc
add
pop
repnz
mov
xchg
or
fmul
arpl
push
jmp
add
cld
addr16
lods
push
leave
mov
pop
addr16
in
out
das
in
(bad)
stos
inc
cmp
adc
xlat
jp
push
jno
mul
imul
xor
xchg
pop
jnp
xor
jl
cmp
mov
dec
dec
and
inc
mov
(bad)
js
outs
inc
ds
sbb
hlt
sub
and
sbb
mov
adc
pop
mov
push
call
or
cmp
mov
xor
mov
ret
je
stc
inc
rol
xchg
jle
call
push
gs
add
adc
in
ins
inc
dec
adc
pusha
inc
jnp
cmp
pop
ins
movs
ins
or
inc
adc
jbe
fs
das
pop
or
aad
mov
pop
mov
xchg
jae
lods
mov
pop
cmp
or
adc
sbb
push
mov
ror
push
mov
fisttp
fstp
add
push
(bad)
(bad)
in
fwait
stc
movs
pop
mov
fisttp
jle
(bad)
mov
mov
fdivr
hlt
repz
sub
jg
fist
sub
sbb
fild
outs
int3
in
fcom
jns
and
fisub
aam
les
jecxz
js
aas
shl
mov
jmp
clc
jnp
dec
rcr
add
dec
push
xor
lahf
cmps
and
(bad)
ret
dec
outs
sbb
dec
mov
repz
dec
adc
dec
ror
push
sub
test
adc
movs
push
mov
dec
not
mov
in
retf
mov
sub
je
gs
mov
neg
ja
xor
xor
test
sub
cld
stc
xor
ins
daa
mov
dec
lea
adc
pop
aas
adc
xor
push
pop
test
jg
inc
fnstenv
adc
inc
(bad)
or
int3
imul
inc
xchg
in
pushf
sub
adc
sub
cmp
cmp
jmp
inc
clc
jne
mov
xchg
inc
jbe
ds
outs
dec
pop
inc
test
bound
xchg
les
movs
std
int
push
idiv
pop
lahf
das
push
pop
jl
daa
test
sar
xor
movs
push
and
jg
aam
and
pop
sub
rcr
call
ins
and
inc
addr16
mov
mov
add
mov
(bad)
mov
push
lods
mov
mov
sbb
sbb
and
test
cmps
mov
jno
in
sbb
inc
pop
xchg
sub
outs
mov
cmc
adc
sbb
test
mov
fs
xchg
mov
or
cmp
fst
aad
out
mov
inc
mov
test
or
mov
and
xor
stos
int
mov
add
cmp
pop
add
cmp
pop
cs
call
test
cli
dec
imul
inc
push
repnz
clc
lods
push
loop
das
or
stc
mov
sbb
mov
mov
dec
fld
pushf
mov
dec
repz
lahf
sub
in
xor
out
adc
mov
inc
and
test
gs
stos
dec
arpl
pop
sbb
fwait
loopne
ins
jg
mov
popa
(bad)
enter
jle
(bad)
fadd
fucom
jns
mov
jae
xchg
mov
cmp
popa
fild
lahf
pop
mov
adc
bound
test
mov
gs
shl
pop
pop
push
push
and
xchg
enter
lods
mov
inc
repnz
mov
(bad)
clc
in
sbb
sub
fwait
jl
lods
movs
add
inc
mov
dec
out
jbe
xchg
fs
push
or
pop
in
xor
in
enter
pop
cmc
ins
push
mov
stos
in
jmp
mov
fldcw
js
adc
mov
mov
and
dec
ffreep
aad
or
jne
push
outs
sbb
adc
dec
rol
push
dec
sub
sbb
mov
std
sub
mov
data16
test
popf
add
test
fwait
mov
jne
mov
retf
pop
mov
cmc
and
je
and
loop
mov
add
jb
inc
mov
icebp
push
test
add
pop
cwde
cmp
mov
mov
cmps
mov
mov
loope
pusha
test
daa
sbb
xchg
cmp
mov
rcr
sub
test
popf
mov
and
mov
imul
fwait
push
out
cmp
mov
gs
jmp
adc
jl
inc
xchg
movs
xor
mov
xor
or
pusha
push
outs
das
dec
(bad)
into
mov
pop
retf
inc
mov
aas
cmp
(bad)
test
sub
jl
movs
movzx
imul
cmp
sti
pusha
mov
push
pop
jnp
ror
out
aas
mov
xchg
int
and
pop
sub
pop
push
mov
jne
sbb
jo
fist
xchg
inc
fimul
lahf
cmp
test
jno
jae
cli
xchg
or
xchg
mov
jmp
gs
loopne
ins
jp
pop
jge
mov
out
lea
dec
fs
mov
mov
mov
inc
mov
or
sbb
sub
addr16
fisub
iret
mov
push
add
dec
xor
xor
add
test
xlat
xor
push
xchg
inc
out
rcr
stos
daa
sub
pop
xchg
inc
adc
arpl
xchg
das
jge
inc
add
jmp
xor
ja
out
push
leave
std
lock
mov
cmp
push
inc
int3
jb
(bad)
hlt
je
and
cmps
lds
ins
sbb
push
pop
shl
jo
xor
repz
mov
(bad)
fs
adc
int
popf
xor
pop
sub
mov
pop
gs
xor
dec
dec
lahf
inc
outs
xchg
mov
imul
mov
xor
dec
inc
push
stc
inc
retf
dec
sar
rcl
in
ss
scas
mov
lods
shl
lea
mov
pop
(bad)
sub
ja
pop
ja
jecxz
stc
cmp
push
and
hlt
push
sbb
dec
and
add
inc
pop
jne
icebp
sbb
cmp
inc
jmp
pop
push
loope
sbb
popa
bound
push
jle
popf
inc
cmp
cdq
lahf
sbb
ja
add
add
inc
xchg
bound
in
mov
dec
sbb
(bad)
dec
pop
out
imul
popa
inc
ja
pop
loop
sar
repnz
ror
cmp
call
and
adc
pusha
call
sub
mov
out
inc
idiv
push
mov
adc
inc
and
mov
push
pop
sbb
push
or
test
shr
inc
pusha
and
fcomi
fistp
ret
sub
jae
fldl2t
pop
mov
jae
cdq
xchg
sahf
sti
push
jnp
add
retf
mov
sub
cmp
mov
hlt
sahf
or
sbb
mov
je
stos
inc
mov
call
mov
push
imul
add
call
and
inc
sub
repnz
ror
aas
sub
cmp
ds
mov
mov
or
dec
cmc
sbb
add
push
xor
mov
pop
inc
jne
pop
mov
adc
inc
scas
dec
pusha
call
mov
iret
mov
adc
xchg
jnp
push
push
cdq
ins
adc
(bad)
sub
adc
not
mov
bound
sti
out
adc
push
clc
inc
mov
arpl
add
pushf
sub
call
icebp
mov
cwde
(bad)
ds
and
ret
xor
add
adc
dec
pushf
aas
adc
cmps
or
sbb
mov
push
mov
push
push
sub
xchg
jb
push
add
jae
pop
and
cmc
and
stos
out
mov
mov
mov
shld
xor
mov
out
jne
dec
adc
fdivr
push
cdq
pop
loop
mov
in
cs
outs
sub
jecxz
test
cmps
call
jmp
cmps
add
out
or
fcom
ret
in
and
sub
dec
xchg
aas
cmc
stc
je
(bad)
cmp
and
fisubr
inc
stc
adc
outs
(bad)
in
xor
ret
jb
or
xchg
ins
icebp
inc
adc
fcom
xchg
fnstcw
imul
xchg
or
or
popf
mov
mov
add
test
(bad)
or
scas
out
and
jle
aad
sub
jl
push
and
mov
movs
sub
addr16
(bad)
jl
sar
or
mov
sbb
test
ficomp
test
add
test
or
cmp
push
or
dec
mov
test
sbb
ficomp
stos
sbb
jmp
cmps
mov
clc
out
div
xchg
das
arpl
xchg
int3
jg
jo
push
sub
mov
sbb
rcr
arpl
adc
aam
and
call
sub
icebp
sbb
aam
jbe
repz
shl
fisttp
fimul
(bad)
xchg
dec
push
add
mov
jecxz
stos
xor
sahf
ret
sub
daa
inc
xor
fst
call
out
or
(bad)
(bad)
dec
xchg
popa
xor
push
inc
mov
out
lods
or
add
inc
mov
nop
pop
loopne
jnp
jne
stos
push
sub
jp
hlt
test
(bad)
pop
xor
bound
in
mov
mov
dec
test
inc
xor
cmp
fnstenv
setb
cmp
mov
leave
dec
dec
fstp
cmp
push
nop
test
push
inc
sub
pop
jecxz
call
dec
push
lahf
jb
mov
dec
add
dec
push
jae
fsub
jl
adc
or
adc
xor
popa
cwde
mov
shl
or
jmp
xchg
inc
xor
xor
shr
xchg
jmp
loope
mov
or
fcmovb
outs
ror
out
mov
dec
pushf
xchg
sub
loopne
shl
stc
adc
(bad)
movs
scas
push
xchg
mov
cmp
pushf
xchg
jp
xchg
in
pop
shr
shr
hlt
xchg
xor
cmp
pushf
mov
ins
xchg
aas
push
push
cdq
xchg
mov
arpl
cld
addr16
jmp
es
(bad)
cld
aaa
or
sub
lods
test
(bad)
push
(bad)
mov
loope
cmc
adc
inc
js
loope
enter
or
and
or
xchg
shl
push
xor
mov
outs
push
push
mov
jns
xchg
mov
inc
arpl
push
imul
xor
jle
xor
dec
lahf
imul
fldenv
xchg
clc
(bad)
mov
cs
test
jno
sub
sar
mov
imul
mov
mov
loop
ja
mov
add
push
sti
retf
stos
ret
cwde
sbb
push
fnsave
pop
outs
jge
jmp
(bad)
(bad)
mov
jns
jbe
repnz
and
sahf
int
and
shl
addr16
push
repz
rcr
fdivr
call
inc
dec
xchg
and
sub
icebp
jg
das
(bad)
sbb
mov
and
lock
loope
mov
push
xchg
jae
lds
aam
call
loop
(bad)
xor
sbb
popa
sub
ror
add
sbb
stos
popf
or
fisttp
(bad)
mov
loopne
push
outs
add
ins
inc
test
dec
leave
or
sub
mul
inc
aaa
imul
cs
mov
icebp
push
sbb
out
mov
jge
push
mov
add
xor
dec
shl
sbb
out
bound
add
into
cs
and
xchg
sub
mov
out
push
mov
push
or
xor
inc
or
pop
(bad)
pop
lea
sbb
out
mov
cwde
mov
cmp
aam
sub
lahf
(bad)
scas
(bad)
jb
jle
sub
hlt
add
cld
stos
(bad)
sbb
or
int
iret
mov
movs
mov
mov
dec
lods
icebp
das
fimul
enter
mov
inc
cmp
or
scas
mov
sti
mov
cmp
adc
mov
sbb
aaa
adc
loop
loopne
cmp
mul
ds
sub
or
(bad)
push
ds
jle
nop
or
sar
xor
cs
add
inc
imul
sti
in
pop
adc
(bad)
sbb
mul
ja
mov
pop
repnz
stos
pop
pop
shl
fmul
pop
xchg
xchg
retf
in
adc
mov
cmp
inc
repnz
xor
fdivr
and
dec
shl
mov
ja
push
out
sub
or
lds
mov
arpl
mov
mov
dec
imul
inc
push
in
sbb
loop
push
in
jnp
rcr
shl
lahf
call
neg
or
cmp
data16
jmp
inc
mov
loope
dec
in
add
je
or
xchg
ss
std
xchg
test
sub
adc
or
fnstsw
je
sbb
leave
aaa
cld
and
loope
mov
and
jbe
mov
adc
mov
xchg
daa
call
mov
dec
lea
jno
cwde
in
movs
cmc
in
inc
lea
inc
shl
aaa
cld
mov
sub
ret
vcvtss2si
push
or
jne
(bad)
sub
push
stc
dec
pusha
mov
pop
mov
xchg
ret
jnp
push
sahf
dec
pop
pop
test
fdiv
into
xchg
popf
mov
mov
js
pop
or
mov
sbb
lods
int
mov
(bad)
push
jge
jmp
repz
add
imul
les
std
mov
enter
jl
movs
sub
daa
call
lea
xchg
scas
out
(bad)
mov
pusha
mov
mov
out
push
fisubr
add
(bad)
cld
(bad)
pusha
out
leave
and
pop
enter
scas
jmp
mov
xchg
inc
mov
iret
push
add
ss
mov
or
test
inc
pop
mov
lods
dec
and
js
ss
jbe
mov
adc
lods
mov
ror
(bad)
cwde
and
loop
(bad)
out
push
fstp
xor
pop
push
xchg
or
dec
dec
cwde
inc
cmps
int
and
mov
(bad)
imul
gs
call
aas
and
or
movs
mov
icebp
pop
out
sub
jmp
pushf
out
loop
call
sbb
push
xchg
mov
in
push
push
sbb
add
fsub
pop
jecxz
or
cmp
sub
test
scas
sub
mov
ss
sub
out
pushf
mov
push
xchg
sub
fisub
addr16
movs
jp
and
leave
int
xchg
mov
or
cmp
cmp
sub
xchg
jne
inc
mov
dec
sbb
add
adc
or
lds
pop
xchg
mov
out
rcl
mov
jne
adc
add
cmc
into
add
scas
shr
jo
jbe
xchg
call
push
rcr
adc
cmp
or
sbb
sub
cld
pop
jnp
jg
mov
stc
dec
adc
sbb
inc
adc
mov
inc
mov
or
out
pop
ds
hlt
in
and
cmp
inc
stos
xchg
call
mov
popf
mov
push
mov
fistp
neg
push
xchg
cli
mov
mov
pop
mov
xor
jb
dec
rol
push
pop
and
push
call
js
lods
lock
adc
ja
and
mov
xchg
dec
add
aas
int
shl
sbb
xor
adc
cdq
(bad)
cld
aaa
dec
fldenv
js
std
addr16
cld
lods
dec
aaa
ins
rep
daa
cmc
cmp
mov
sub
pop
bsf
imul
leave
stc
lahf
xor
mov
jl
xor
and
and
and
cmps
add
in
aas
mov
js
xchg
jb
or
mov
xchg
dec
xchg
dec
mov
adc
adc
ret
or
mov
or
cdq
rcr
test
jle
push
xchg
sar
mov
xchg
mov
xor
and
mov
adc
mov
jp
popf
push
popa
push
cli
pop
repnz
pop
pop
imul
repnz
jno
jnp
xchg
ins
cmp
pop
jp
push
fild
call
in
mov
pop
aam
jl
adc
inc
jnp
adc
xchg
cs
rol
pop
test
shl
out
add
call
mov
add
shl
lds
(bad)
cmc
sub
fcomp
cmp
imul
push
js
inc
jmp
sub
loopne
or
mov
(bad)
adc
ins
arpl
sbb
pop
pop
scas
int
ins
mov
sbb
ins
sar
and
in
or
or
push
das
xor
(bad)
xchg
pop
aam
imul
repz
es
sahf
je
popa
nop
loop
(bad)
mov
in
int
outs
and
dec
pop
pop
nop
push
add
push
dec
int
leave
(bad)
sbb
retf
outs
dec
or
adc
jae
sbb
sbb
sub
loop
adc
mov
mov
daa
xchg
das
xchg
mov
pusha
jb
add
jp
push
mov
dec
lods
(bad)
dec
cdq
jbe
jno
push
push
mov
mov
in
dec
lods
push
dec
mov
mov
xchg
mov
sub
cmovnp
fcomp
or
xor
and
push
jp
push
and
pop
push
push
movs
and
dec
xchg
call
icebp
ins
jo
popa
cmp
es
push
mov
jne
xchg
pusha
and
shl
sar
pushf
call
in
adc
retf
or
mov
cmp
das
pop
pusha
lahf
stc
mov
shr
and
daa
pushf
fsubr
ja
shl
mov
mov
lea
cmp
adc
call
xor
pop
es
and
in
push
jp
test
jge
dec
xor
shl
add
xchg
adc
push
pop
xor
aad
sub
je
repz
jnp
jb
cli
fucomp
inc
cwde
cwde
sub
inc
xor
sub
lahf
xchg
lahf
mov
xchg
rol
push
fwait
gs
add
adc
fs
adc
stc
data16
repz
out
outs
aas
and
jae
sbb
enter
push
dec
and
(bad)
adc
and
dec
pop
fisubr
or
in
das
inc
loop
test
adc
pop
enter
dec
test
or
push
lods
adc
enter
(bad)
push
in
int
add
sub
repnz
cmp
cwde
scas
(bad)
fisub
cld
ds
cmps
cmp
inc
dec
xor
sahf
jge
mov
mov
mov
inc
es
mov
fldl2e
outs
cmp
je
mov
js
and
pop
push
jnp
jo
(bad)
out
and
lods
mov
fld
movs
fcmovb
xor
or
cwde
or
scas
and
jo
xchg
cli
in
xchg
in
mov
aam
repnz
sbb
dec
aas
fnsave
aaa
je
mov
cmp
mov
arpl
das
add
and
dec
xchg
in
or
push
adc
in
fnsave
mov
mov
pop
or
jge
or
and
outs
mov
adc
mov
sar
scas
in
add
popa
fsubrp
sub
mov
loope
mov
push
sahf
mov
jno
loope
addr16
inc
xor
shr
fstp
stos
dec
pop
push
sbb
bound
in
inc
test
xchg
mov
scas
xor
sub
sub
mov
mov
mov
pop
and
cwde
push
idiv
sub
pusha
cmp
push
sbb
pushf
loope
pop
jge
mov
add
lea
sub
adc
pop
test
sti
push
dec
jb
cmp
mov
call
cmp
or
push
pop
sub
cmp
mov
cmps
dec
sbb
movs
retf
adc
shl
push
push
aam
outs
push
leave
mov
fldenv
out
pusha
out
push
(bad)
push
je
call
mov
pop
adc
or
jl
push
adc
in
out
adc
xor
inc
sbb
fsubr
pop
xchg
jmp
sub
adc
(bad)
pop
icebp
mov
fdiv
lock
inc
dec
jp
jb
popa
cmp
dec
push
adc
movs
dec
xchg
je
adc
or
mov
and
sub
mov
xor
and
and
add
pop
push
shr
xchg
jmp
add
cmp
pminub
xor
dec
mov
adc
jecxz
sub
ror
sub
rcr
int
(bad)
and
adc
mov
ss
es
adc
xor
(bad)
and
xchg
mov
std
cs
pop
cld
stc
pop
in
push
jno
or
movs
sbb
iret
mov
jb
jbe
add
aaa
adc
(bad)
jmp
mov
push
push
in
sub
mov
out
iret
fnstenv
adc
or
inc
aam
sub
xchg
sub
jnp
add
mov
sbb
lds
enter
cmps
or
data16
jecxz
icebp
in
je
mov
sub
push
stos
das
lea
in
push
inc
and
push
iret
mov
and
mov
xor
mul
jb
lahf
mov
sbb
xchg
inc
sbb
mov
lea
dec
jp
int
aas
ret
mov
imul
cli
aas
(bad)
std
mov
jge
scas
mov
mov
(bad)
rcl
mov
push
xchg
jnp
por
pusha
push
dec
adc
push
es
rcl
mov
cmp
dec
or
outs
dec
stos
sub
lock
in
ficomp
clc
fldcw
xor
xchg
adc
idiv
test
or
sub
les
add
lods
cmp
lock
jae
stos
mov
ins
cmp
das
and
mov
pop
ss
pop
xlat
mov
xchg
es
push
clc
je
cmc
xlat
sahf
cmp
mov
and
gs
rol
sub
add
xchg
add
std
clc
xor
and
aad
mov
pusha
mov
ss
js
and
ror
adc
adc
sub
adc
pop
imul
inc
xor
stos
lods
das
inc
jmp
ret
hlt
sbb
addr16
loope
movs
and
pop
(bad)
jmp
push
in
enter
mov
push
inc
cmp
xchg
cmp
jmp
rcr
xor
adc
or
dec
mov
jo
jmp
mov
dec
mov
xchg
in
or
out
inc
pop
jmp
mov
xor
je
mov
mov
mov
push
xchg
cmp
sub
xchg
out
imul
les
mov
mov
aad
and
xor
in
and
pop
cmp
inc
std
sahf
xor
inc
xchg
and
arpl
jnp
cld
xchg
push
pop
pop
pushf
lods
and
pusha
pop
clc
or
mov
movs
hlt
jne
fldcw
sbb
scas
cmp
mov
xchg
jno
xchg
jp
and
shl
xchg
dec
movs
imul
push
xor
test
pop
jae
xor
in
sub
lods
adc
mov
xor
out
dec
mov
mov
(bad)
add
push
fadd
scas
xor
pextrw
pop
rcr
rcl
call
xchg
es
xor
(bad)
rcr
int3
or
test
cld
sub
mov
in
jmp
adc
subps
add
cmp
push
retf
sahf
push
xor
icebp
loopne
pop
clc
jmp
add
mov
clc
sub
stos
outs
fild
and
dec
in
imul
rcr
jmp
pushf
push
cmp
xchg
mov
out
lods
mov
push
push
xor
movs
push
or
int3
aad
push
movs
or
ja
mov
out
imul
jg
cmp
in
les
and
enter
pop
into
enter
scas
mov
or
int
(bad)
xchg
cmp
xchg
and
or
sbb
xchg
cwde
inc
clc
xchg
or
jecxz
sti
sbb
push
xchg
stos
sbb
jbe
adc
inc
cmp
and
mov
(bad)
add
xor
pusha
xchg
push
cmp
push
scas
movs
pop
fcomp
xor
pop
sub
cmp
mov
popa
jno
sahf
cmp
clc
jo
loopne
cmp
fldenv
into
(bad)
in
mov
cs
push
mov
pop
out
and
xlat
outs
dec
fnsave
cmps
dec
bound
aad
xor
sar
jp
(bad)
sub
push
ja
pushf
jge
(bad)
push
dec
test
add
cmp
les
std
jg
xor
aad
je
xchg
fcomp
cdq
jno
or
sahf
fmul
and
iret
xchg
mov
xchg
cmp
dec
and
jns
data16
dec
outs
mov
add
fisttp
mov
or
fisttp
ds
out
icebp
outs
movs
leave
or
jmp
shl
xor
mov
jne
push
jo
ja
push
mov
xchg
dec
pop
push
les
mov
pushf
mov
ss
xor
arpl
sub
push
jae
jae
add
mov
jle
fst
mov
mov
lahf
add
out
out
jne
mov
mov
jns
jne
jnp
xor
ficomp
pushf
or
push
or
xchg
and
jno
push
cli
sbb
sar
scas
out
inc
jge
scas
pop
sti
mov
mov
ins
xor
clc
or
imul
xlat
jbe
push
cmps
enter
push
jmp
mov
popa
aaa
es
shl
pop
jp
cdq
aas
aam
in
inc
and
movs
fnstcw
and
out
dec
sar
xor
mov
and
cdq
cmc
scas
and
mov
fs
mov
jno
dec
dec
push
rcr
and
aaa
jae
out
mov
je
out
gs
enter
and
or
lock
pop
pop
xchg
mov
mov
sub
and
jb
mov
adc
inc
(bad)
into
sbb
mov
mov
push
lahf
out
push
gs
mov
(bad)
or
push
cs
cmp
shl
dec
dec
int3
out
xchg
pusha
ins
(bad)
jle
test
add
push
fadd
in
or
mov
xor
jle
push
pop
test
mov
dec
faddp
out
in
pusha
cmp
push
add
push
sub
jbe
test
(bad)
xchg
data16
sar
inc
mov
ins
mov
xchg
add
movs
hlt
sub
mov
cs
stos
ja
mov
int3
jns
ds
ins
clc
(bad)
fs
hlt
push
arpl
test
(bad)
ins
lds
fmul
pushf
adc
in
jo
jmp
inc
dec
imul
hlt
mov
push
xor
bound
ficomp
mov
lds
enter
repz
push
std
test
push
jg
jmp
xor
out
inc
test
add
cmps
jns
jle
ja
inc
pusha
jge
test
push
mov
call
adc
mov
cmp
cli
add
pop
ja
add
icebp
fidivr
test
cld
test
rcl
mov
pop
add
or
test
das
scas
(bad)
ins
pop
pop
sbb
sub
mov
ins
shl
push
jge
dec
mov
push
sub
mov
adc
push
pop
xlat
es
pop
and
mov
int3
fs
jg
jae
mov
clc
xchg
inc
leave
add
sub
mov
cli
out
shl
icebp
adc
and
repz
add
xchg
jno
rcl
jo
inc
setb
push
xchg
nop
mov
push
cmc
movs
and
inc
xor
jg
push
das
jnp
or
ss
pop
cmps
inc
jmp
add
lods
mov
lea
arpl
and
pop
sbb
aas
fnstcw
fcomp
mov
rcl
mov
cmp
scas
mov
mov
adc
shl
cs
sub
lods
sub
jp
scas
loope
test
jmp
sti
lock
pop
xor
push
push
pop
dec
mov
ins
ror
out
and
dec
inc
bound
pop
aam
xor
shl
mov
popf
out
xchg
mov
into
movs
mov
cs
dec
clc
push
inc
mov
mov
and
pop
js
in
fsub
mov
gs
sti
jbe
stos
mov
sub
std
add
(bad)
xchg
pushf
rol
push
test
scas
ins
sub
out
inc
loopne
repz
sub
ret
test
sahf
cmp
cmps
js
dec
clc
cmp
out
xor
iret
adc
popf
cmp
fisub
add
mov
fwait
enter
pop
scas
mov
dec
movs
or
ja
mov
sar
jecxz
pop
jno
scas
ret
xchg
loop
adc
test
mov
ret
fwait
pop
clc
arpl
aad
cwde
fstp
sub
retf
movs
jp
mov
into
cli
dec
jmp
inc
(bad)
dec
xor
(bad)
push
sbb
cmp
mov
bound
rol
and
add
les
in
pop
gs
inc
mov
mov
mov
es
xchg
out
sbb
jnp
mov
push
arpl
push
jo
mov
sbb
dec
sub
sbb
div
aaa
or
loopne
in
stc
xchg
fld
retf
xchg
jo
repnz
test
out
xor
dec
jg
cwde
dec
push
sbb
jmp
mov
mov
aad
(bad)
mov
fst
cmps
out
fld
rcl
add
add
stos
adc
enter
sub
jnp
sbb
(bad)
mov
push
out
retf
clc
jbe
push
xor
test
cmp
pop
sar
les
fisttp
push
sahf
add
xchg
enter
loop
lds
popf
fmul
int3
pop
fnsave
pop
shl
mov
mov
dec
pushf
add
ja
pop
pop
inc
pop
stos
nop
in
in
dec
clc
(bad)
hlt
adc
(bad)
jb
xchg
inc
ror
lods
jecxz
jbe
retf
cwde
mov
sub
sub
mov
rcl
call
cmp
fidiv
call
es
call
das
inc
xor
jp
lea
cli
add
in
test
adc
xor
repz
dec
test
jp
cld
dec
(bad)
sub
sbb
lods
fst
cmp
cmp
xchg
jns
jne
jnp
lahf
inc
mov
fisttp
aad
pop
sub
xchg
fsubp
xchg
jle
mov
pop
outs
sbb
mov
stos
popa
nop
mov
dec
sahf
div
clc
xchg
xor
inc
ins
adc
enter
push
cmp
mov
xlat
test
add
test
in
mov
stc
xchg
jl
fdivr
or
or
xchg
sahf
aaa
das
cmp
ins
ins
jno
inc
pusha
xor
test
test
sub
sahf
cli
out
icebp
add
mov
inc
popa
cdq
cmps
loope
sub
lods
movs
addr16
push
push
sub
mov
xchg
mov
xchg
scas
sub
aaa
mov
mov
adc
scas
xchg
clc
mov
ret
mov
hlt
in
mov
adc
loope
sub
mov
or
out
push
mov
ss
xor
popa
dec
fstp
jge
jnp
repz
sub
aas
sbb
sbb
mov
inc
ja
mov
fadd
pop
pop
ret
rcl
je
jge
jecxz
pop
cmp
mov
ss
inc
loopne
ja
mov
mov
mov
pop
clc
popa
push
mov
mov
shl
xor
adc
push
jmp
call
mov
fwait
push
rcl
mulps
fcom
loope
jmp
mov
shl
aam
xor
and
cmc
sub
not
lods
jp
lock
xchg
loope
dec
jle
cmp
dec
push
sub
xor
sub
or
out
mov
lea
cmp
fidivr
push
push
enter
std
pop
jp
push
sub
cmp
jnp
ss
add
scas
ror
dec
jge
adc
fadd
lds
cli
pop
mov
stc
xor
mov
ret
add
in
ds
out
mov
xor
cmp
out
add
pop
movs
push
sub
mov
jmp
lea
sbb
sti
bound
scas
test
jns
pop
cmp
les
div
cld
not
das
mul
out
movs
mov
sub
xchg
sahf
sbb
aad
push
in
int
sub
adc
pop
or
xor
mov
sub
stos
ins
call
repz
dec
ja
sbb
mov
cs
mov
lods
mov
(bad)
std
mov
in
cli
jne
adc
mov
int3
sar
add
inc
out
or
rol
and
adc
pop
push
cmp
push
repnz
clc
dec
pusha
pop
mov
mov
sbb
sbb
push
mov
pop
es
mov
call
mov
test
stos
dec
pop
xor
mov
test
add
mov
or
dec
mov
jae
xor
mov
repz
dec
sub
shl
jae
out
out
out
xchg
pop
ds
dec
mov
jl
dec
pop
aaa
je
imul
imul
shl
jae
(bad)
stc
jge
sbb
loopne
cmps
imul
retf
cmps
adc
(bad)
lods
mov
cmp
mov
lahf
outs
gs
in
fsubr
setbe
mov
adc
rol
lods
pushf
cmp
shr
jecxz
retf
int3
stos
ins
cdq
xchg
aaa
inc
cmp
push
dec
cdq
pop
lahf
test
mov
pop
rol
and
inc
or
cdq
arpl
cwde
xchg
test
mov
add
push
mov
jmp
inc
addr16
mov
sbb
fs
jo
outs
movs
adc
stc
cmp
fst
push
bt
inc
in
aad
jge
popa
gs
xchg
dec
fcomi
leave
ins
xchg
(bad)
cmp
aam
or
mov
push
enter
rcl
dec
or
xor
pop
sub
stos
int3
ss
xor
cwde
mov
or
mov
les
jle
sbb
int
scas
scas
dec
sbb
xlat
stos
push
sbb
not
cs
and
jge
rcl
ja
sub
fdiv
push
mov
ss
jae
lods
adc
retf
or
mov
lea
inc
sub
push
adc
mov
in
daa
or
cmc
(bad)
je
dec
outs
retf
(bad)
out
mov
scas
aas
dec
fisttp
push
or
jl
fstp
pop
clc
(bad)
test
dec
sbb
stos
test
sti
xor
jae
mov
ins
rol
loope
pop
jmp
or
neg
aas
(bad)
fdivr
mov
jmp
les
sbb
push
cmc
cli
scas
pop
movs
sets
mov
inc
sahf
aas
xchg
out
cdq
pop
iret
stos
inc
fmul
pop
gs
xchg
sub
xlat
loop
mov
sar
push
aad
imul
aas
sub
dec
mov
push
jae
fwait
mov
cdq
imul
out
and
add
xchg
mov
or
out
cmp
(bad)
jo
movs
add
and
pop
add
push
cld
sbb
push
lods
je
in
xor
retf
or
scas
fist
mov
mov
(bad)
in
sti
inc
dec
jmp
push
(bad)
enter
out
bound
ja
gs
mov
xchg
sahf
cmp
dec
into
or
aam
dec
push
push
imul
jne
clc
test
sbb
inc
rcl
add
lods
mov
sar
ja
test
mov
xor
sahf
jno
in
push
pop
cdq
fwait
shl
mov
pop
scas
int3
test
adc
fnstcw
addr16
pop
mov
xor
daa
mov
or
sahf
sbb
mov
mov
rcl
ins
xchg
or
add
add
(bad)
push
pop
jmp
daa
dec
aaa
imul
xor
xchg
cmps
scas
mov
xchg
pop
(bad)
enter
push
inc
mov
call
mov
mov
jmp
stos
adc
sub
sbb
adc
xchg
xor
repz
adc
fisub
icebp
push
adc
add
enter
ja
xlat
aad
inc
inc
das
lds
mov
push
sbb
xchg
repnz
push
dec
push
cdq
into
mov
mov
mov
cmps
add
call
inc
(bad)
mov
push
call
and
ret
sub
mov
xchg
gs
scas
(bad)
xchg
adc
cmovno
ja
pushf
std
xor
adc
ds
rcl
mov
in
push
xlat
nop
pop
(bad)
push
stos
in
mov
cld
fwait
das
pop
jbe
popf
rcl
cld
je
cmp
pop
sbb
cdq
cmp
mov
fimul
outs
add
push
sbb
add
ins
push
push
sti
fidivr
out
rcl
fcom
xchg
push
mov
jl
sbb
movs
xchg
xchg
jno
test
xor
xchg
les
ret
repz
stc
or
or
push
pop
push
jp
xchg
adc
inc
mov
or
aam
inc
xlat
add
lahf
ret
lock
jecxz
ffreep
push
or
xor
xchg
mov
jo
lock
fst
ret
repz
and
add
aas
imul
gs
mov
dec
mov
test
jae
sbb
cmp
inc
retf
jno
fistp
ror
jmp
pop
out
push
mov
jp
jp
cmp
mov
popf
mov
xor
nop
mov
outs
retf
inc
cmp
es
call
sub
ret
dec
sbb
rcl
lds
mov
and
push
ss
or
(bad)
in
jp
dec
(bad)
jnp
xor
jg
sub
jno
cs
js
push
jbe
es
push
ficom
push
leave
mov
in
mov
lahf
jnp
jmp
inc
popf
fist
xchg
xor
ja
mov
mov
sbb
push
xchg
outs
jb
push
pop
movs
ror
gs
dec
scas
xchg
cs
dec
inc
sbb
(bad)
push
imul
aam
stc
pushf
aad
pop
and
push
adc
mov
sub
lds
mov
pop
retf
rcr
inc
inc
stc
fwait
cmp
arpl
add
inc
loope
stos
paddd
sub
cmps
or
sub
mov
in
adc
fmul
jns
in
pop
(bad)
mov
xor
mov
or
cmc
fistp
outs
cld
jecxz
fldcw
dec
mov
jb
pop
or
enter
scas
mov
mov
cmp
jnp
in
mov
dec
call
stos
sbb
stos
cdq
mov
inc
cmp
mov
dec
outs
mov
shl
mov
push
shl
dec
dec
out
pop
mov
pop
(bad)
sub
or
fidivr
mov
cmp
mov
and
ret
dec
inc
hlt
or
sahf
mov
mov
xchg
out
int
push
cwde
loope
sbb
lods
call
push
mov
cmps
lods
rcl
adc
ins
in
fld
xor
lods
sbb
sbb
out
shl
dec
into
mov
push
mov
inc
in
xor
stos
lea
jle
xor
dec
sti
xor
cwde
inc
mov
mov
mov
(bad)
pop
pop
jl
inc
sar
inc
fwait
or
fmul
fwait
lea
mov
sub
pop
cmp
jno
repz
iret
iret
xor
icebp
jg
popa
not
mov
les
cmp
push
outs
jge
mov
dec
push
jecxz
xor
call
rcr
(bad)
shl
mov
sbb
adc
mov
pop
cli
stos
pop
push
aaa
or
stos
adc
clc
outs
ins
call
mov
lods
add
adc
cmps
add
lods
movs
inc
adc
or
mov
call
movs
rol
and
push
mov
or
(bad)
cmp
cld
popa
daa
jo
call
mov
out
push
call
and
icebp
push
icebp
mov
or
mov
imul
popf
rcl
mov
mov
js
jmp
mov
adc
stos
ins
cli
jnp
dec
nop
xchg
pushf
inc
or
lahf
mov
into
cmp
pop
cwde
icebp
(bad)
push
retf
dec
iret
arpl
mov
pusha
and
fisttp
mov
std
dec
call
not
stos
jp
outs
retf
ins
jg
(bad)
cmp
test
cs
hlt
clc
loope
jns
das
jae
add
(bad)
stos
pop
mov
pop
cmps
pop
cli
pop
jbe
fdivp
mov
sub
mov
dec
xlat
mov
lods
sub
push
std
push
and
xchg
cs
fld
or
int
in
mov
sub
loopne
push
test
push
sbb
jae
or
cwde
inc
cmp
add
mov
mov
fidiv
sar
es
sub
pop
sub
sbb
jbe
xchg
dec
push
(bad)
and
dec
mov
xchg
push
dec
loope
pop
pop
jns
les
jno
pop
push
cld
loopne
ds
or
adc
lock
(bad)
iret
dec
sahf
or
and
nop
add
stc
pushf
push
cmps
sbb
leave
jecxz
cmc
mov
pop
cmp
and
jecxz
or
inc
shr
retf
adc
scas
cmp
shr
xchg
add
test
lods
push
stc
retf
outs
out
ja
fwait
jl
jmp
out
sub
outs
xchg
xor
lods
dec
dec
fld
inc
lods
xchg
add
fcmovbe
cmc
test
and
sbb
scas
adc
mov
dec
inc
mov
stos
push
xchg
shl
xlat
rol
clc
cmps
les
movq
push
sbb
out
lahf
and
mov
fldpi
arpl
fmul
cmps
inc
lock
adc
jecxz
retf
pop
ret
enter
xchg
add
mov
int3
lock
xchg
jp
sbb
test
dec
jb
cld
add
div
ja
xchg
jae
pop
mov
jmp
int
adc
in
inc
lods
xor
push
add
cmps
clc
or
lods
dec
mov
std
sub
cmp
retf
rcr
pusha
fist
test
xchg
icebp
xor
mov
pusha
dec
arpl
adc
sbb
sbb
xor
sbb
aaa
xchg
popa
(bad)
push
sbb
pop
add
pusha
jge
pop
retf
call
xor
or
es
sbb
sti
call
mov
test
fbld
mov
jmp
mov
shr
movs
and
ds
dec
fdiv
retf
test
cs
jo
sbb
xchg
inc
mov
lock
clc
push
add
je
add
cmps
out
call
daa
inc
int3
outs
pushf
test
fs
clc
mov
jg
xor
pusha
mov
fisubr
pop
jne
ret
add
push
imul
xor
dec
dec
test
dec
add
jbe
call
mov
xchg
xchg
jmp
test
retf
rcr
cdq
das
pop
push
ins
jo
push
int3
push
sub
ret
into
test
pushf
xor
sub
jmp
pop
cmp
mov
ss
or
mov
push
out
in
xor
push
loope
push
dec
sub
(bad)
cdq
imul
in
loope
sbb
push
clc
sbb
dec
mov
jle
ja
xor
pop
sbb
(bad)
jmp
(bad)
test
mov
and
ds
fld
mov
cmp
sub
lods
push
movs
loope
inc
dec
sub
dec
loop
push
call
int3
idiv
sub
dec
cmps
xor
outs
inc
and
sbb
pop
imul
jge
bound
xor
test
push
xchg
fistp
dec
sub
dec
call
stos
ds
push
int
add
jmp
xor
xchg
and
or
sar
or
push
sbb
push
leave
icebp
cmp
add
push
xchg
lock
sar
push
cmps
sbb
or
loop
jae
cmp
js
(bad)
pop
xor
not
out
jbe
or
sbb
fild
mov
mov
sbb
(bad)
xchg
dec
vpsllq
mov
call
retf
pop
popa
mov
xchg
test
adc
mov
sub
adc
cli
or
xor
mov
or
jp
cmp
and
fdivp
loope
jo
pusha
mov
inc
jmp
adc
cmp
out
add
das
mov
jno
and
pop
pop
call
ins
xchg
mov
imul
sar
ror
jp
test
cdq
jb
cmp
fdiv
xor
bound
pop
inc
ret
(bad)
js
dec
cld
sbb
jge
sub
xor
inc
sbb
test
popa
dec
lock
scas
cmc
sahf
xchg
and
xor
xor
inc
fcomp
pushf
in
out
retf
or
int3
enter
push
enter
pop
mov
(bad)
hlt
push
pop
cmp
call
jmp
mov
pushf
in
jmp
loop
xchg
mov
pop
outs
mov
je
pop
mov
or
jno
icebp
fadd
dec
js
aaa
retf
mov
repz
dec
or
mov
or
sbb
sbb
fcomp
rol
mov
cwde
push
sub
test
xchg
outs
mov
aas
add
movs
(bad)
fisub
ins
xor
ds
xchg
pop
jmp
mov
pop
jne
in
add
lock
pop
inc
or
lods
mov
push
sbb
pop
test
fisttp
cld
test
mov
(bad)
push
scas
fwait
mov
mov
and
and
adc
mov
pop
jns
mov
mov
bound
fcomp
adc
ins
rol
lods
imul
int
pop
mov
sub
jmp
not
and
fidiv
jge
lea
aas
inc
jle
mov
call
push
sbb
test
xchg
push
sahf
mov
mov
div
and
arpl
es
sahf
les
in
icebp
scas
sub
inc
xchg
repnz
adc
pop
and
cli
outs
inc
mov
leave
inc
jp
aaa
call
call
lods
js
ins
es
jge
fdivr
stc
jne
mov
imul
mov
cmp
sub
mov
aas
vpmacssww
push
sub
and
push
xlat
(bad)
loope
push
ficom
mov
xchg
dec
inc
jg
shl
into
push
xchg
xlat
or
je
test
xchg
inc
daa
add
jmp
(bad)
add
leave
xchg
add
mov
or
pop
aad
inc
les
loope
out
mov
or
int3
std
cmps
sahf
in
call
xchg
clc
mov
push
mov
and
(bad)
inc
xchg
repnz
and
daa
jge
sub
or
out
mov
les
scas
cdq
inc
or
adc
test
push
aas
mov
cmp
enter
rcl
ret
adc
ds
call
push
int
add
fs
jge
adc
test
je
das
popf
outs
mov
(bad)
mov
push
push
fwait
xor
pushf
jo
rcl
in
ss
in
cmp
sub
loopne
xor
imul
push
fcomp
scas
xchg
ds
test
jmp
mov
mov
dec
(bad)
xor
xchg
sti
jnp
inc
and
or
adc
xlat
ss
push
add
push
ds
and
and
cmc
mov
xchg
push
xchg
call
into
(bad)
dec
(bad)
and
scas
xlat
pop
xor
fwait
mov
cdq
imul
sub
dec
pop
adc
jb
jb
xor
cmps
mov
pop
adc
pushf
push
adc
sar
pop
xor
mov
pushf
pusha
sub
push
ds
mov
inc
jns
sub
pop
test
push
sbb
fs
or
into
repnz
fst
movs
xchg
out
push
stos
int3
pop
dec
cmps
pop
and
pop
sbb
lds
(bad)
adc
pop
int3
sbb
addr16
fldcw
repz
or
ret
push
cwde
xchg
ss
push
out
addr16
xor
out
push
xchg
loop
push
pushf
dec
fidivr
push
fnstenv
push
or
push
paddw
test
fisub
test
jl
xchg
hlt
push
ins
idiv
or
hlt
aas
mov
and
mov
aam
or
outs
adc
sub
in
mov
jns
mov
sar
loop
push
xchg
add
jge
add
cmp
add
jae
pop
push
test
pop
std
mov
ret
sbb
mov
pop
js
add
or
jg
cmp
dec
adc
push
stos
cdq
push
mov
out
test
inc
fcomp
div
dec
jp
xor
mov
lods
(bad)
jecxz
(bad)
arpl
jmp
mov
retf
xor
ins
jb
loopne
ss
jb
fwait
mov
ss
sbb
cld
popf
ficomp
jp
ss
popa
cmp
cmc
scas
mov
loope
cmc
imul
push
enter
mov
push
popa
inc
out
out
mov
xor
std
pop
push
push
push
push
xchg
fwait
sahf
and
mov
aas
jg
rol
mov
push
xor
inc
add
jge
mov
xchg
dec
aad
sbb
sub
test
xor
imul
loop
inc
inc
pop
mov
adc
and
cdq
scas
fimul
cs
inc
push
add
imul
aad
pushf
mov
mov
mov
nop
xor
daa
jnp
dec
xor
out
jge
scas
xchg
and
pop
(bad)
push
push
cdq
neg
mov
rol
jne
dec
rcl
xor
ins
or
ins
sbb
mov
cmp
out
mov
adc
xchg
fadd
pop
out
mov
add
dec
mov
inc
jno
js
sub
cmc
mov
pop
lock
scas
les
jb
out
mov
jo
mov
cmp
mov
inc
adc
push
inc
outs
xchg
sub
and
pop
out
movs
and
out
jnp
popf
adc
jae
clc
retf
gs
retf
xchg
es
cs
mov
jecxz
jnp
inc
leave
cdq
fld
jp
stos
dec
shr
loop
xchg
out
es
mov
cmp
in
pop
ins
int3
and
hlt
and
mov
inc
or
jecxz
mov
xor
adc
jle
pushf
xor
rol
and
add
dec
xchg
inc
loope
cli
stc
jb
das
das
xor
rol
loope
jb
fld
jbe
mov
push
jnp
jo
adc
inc
icebp
jne
inc
je
lahf
mov
iret
pop
add
jnp
mov
cdq
hlt
jecxz
mov
push
xor
lds
imul
push
imul
adc
mov
aas
xor
call
popa
or
lods
inc
sbb
ret
xchg
in
adc
pop
cmp
(bad)
rcr
ja
inc
outs
adc
mov
fndisi(8087
popa
mov
je
aas
pop
lahf
sbb
cmps
pop
aaa
sub
mov
mov
and
dec
xor
lods
add
daa
xchg
xor
imul
jo
mov
adc
add
in
test
aad
inc
inc
inc
cli
xor
in
add
xor
or
test
and
loopne
jl
jg
frstor
adc
popf
movs
outs
and
jle
sub
test
dec
aaa
inc
fwait
std
xchg
push
xchg
mov
add
or
pop
loope
or
shl
mov
mov
inc
cs
sbb
and
out
mov
mov
xchg
call
ds
(bad)
xor
mov
xchg
icebp
shr
cwde
jecxz
pop
inc
or
sub
adc
ins
repnz
sbb
mov
pop
ds
js
push
inc
loopne
outs
lds
leave
adc
sub
push
or
dec
xor
xchg
adc
xchg
(bad)
cmps
adc
shl
call
or
(bad)
jae
pop
jo
ja
(bad)
xor
movs
xlat
sub
je
into
mov
pop
pop
into
pcmpeqd
fmul
pop
ret
popa
xor
sbb
adc
in
and
push
inc
cmp
or
mov
les
fisub
mov
xor
es
xchg
or
stos
dec
xor
xchg
dec
aaa
rol
xchg
in
inc
out
and
imul
pop
cs
repz
or
bound
and
dec
xlat
imul
or
add
add
iret
add
jecxz
xchg
mov
mov
pop
sub
stc
adc
test
mov
into
push
add
cmp
outs
dec
out
retf
inc
out
ins
pop
jmp
dec
in
mov
xchg
es
pop
aas
(bad)
in
adc
pop
out
mov
mov
nop
add
cmovb
lock
in
fdivr
sbb
mov
in
fmul
ret
je
pusha
das
pop
adc
cdq
dec
shld
aas
dec
or
rcr
mov
cmp
jns
ret
mov
pushf
jno
mov
outs
cmp
dec
leave
xchg
pushf
sbb
dec
inc
sbb
lea
ret
dec
jecxz
sub
adc
sub
mov
cs
mov
push
pop
mov
ins
and
xor
sub
leave
test
repnz
stos
push
xor
sub
push
scas
xchg
retf
fisub
xchg
cdq
or
mov
pop
dec
mov
inc
div
fiadd
rcl
xchg
add
mov
push
icebp
cmp
clc
xchg
out
fbstp
out
push
sti
add
into
add
ins
or
xchg
mov
fmul
fbstp
push
cmp
mov
adc
dec
push
xchg
popa
pop
shr
je
pop
ret
add
shl
dec
jl
sahf
inc
mov
(bad)
push
fs
mov
mov
daa
mov
jns
test
dec
pop
and
push
xor
sub
jmp
dec
adc
mov
xlat
pop
mov
stos
mov
cmp
lods
sbb
arpl
mov
iret
ret
stos
jnp
adc
xor
lods
xor
cmp
jl
cmps
pop
dec
mov
test
fs
xchg
or
ins
das
dec
(bad)
rol
test
mov
loop
imul
mov
scas
pop
mov
or
xchg
fs
or
sub
push
bound
cmp
push
cld
and
mov
adc
mov
push
jmp
pop
(bad)
es
fstp
mov
jno
js
add
jmp
sbb
inc
and
mov
cmp
xchg
cmp
popf
lods
add
mov
cmc
test
cmp
aaa
inc
aaa
mov
shr
mov
or
rol
mov
test
xchg
add
ret
inc
test
es
shl
imul
retf
and
inc
aad
mov
mov
pop
sbb
xor
test
dec
out
(bad)
xchg
jbe
cmp
(bad)
aad
fisub
mov
dec
push
inc
scas
shl
add
(bad)
jns
aas
repz
test
cmc
movs
xor
in
push
jg
(bad)
push
pop
sub
or
cmp
add
mov
push
das
push
cmps
int3
or
inc
inc
mov
push
test
dec
or
loope
(bad)
out
xor
mov
and
jp
adc
sbb
mov
push
jmp
and
push
cmp
and
cmps
gs
inc
shr
jnp
dec
sub
add
add
mov
push
inc
enter
add
ror
fisubr
add
fld
div
or
jg
into
fisttp
(bad)
cmp
fidiv
icebp
jbe
outs
loopne
sbb
xchg
jmp
loop
addr16
or
ds
ja
xchg
cmps
add
clc
pop
repz
aam
mov
mov
lahf
mov
mov
(bad)
xchg
test
mov
fld
mov
loop
sahf
call
jno
fisub
fs
ja
ja
(bad)
adc
cmc
jl
(bad)
fimul
sti
stos
cmp
cmp
int
in
or
call
pushf
mov
sahf
add
pop
or
mov
mov
fadd
inc
cdq
imul
outs
fimul
pop
sahf
mov
movs
(bad)
mov
cli
cmp
fistp
retf
popf
cmp
es
shl
mov
clc
mov
mov
mov
stos
mov
ficom
ror
mov
push
(bad)
icebp
mov
test
lahf
adc
jmp
sub
ja
and
(bad)
lods
xor
add
inc
mov
das
and
pop
fidivr
rcl
sbb
nop
iret
daa
adc
cmc
add
sub
push
add
and
mov
(bad)
mov
imul
inc
inc
xor
mov
sar
lahf
movs
jmp
push
mov
cmp
pop
lods
or
hlt
sti
mov
xchg
mov
cmp
dec
pop
sub
in
mov
or
jge
cmc
mov
push
mov
mov
pop
push
into
int
movs
sub
leave
mul
mov
(bad)
jp
lock
add
(bad)
add
adc
leave
add
jo
jg
jne
arpl
push
daa
das
lods
adc
push
add
jns
cmp
in
lods
mov
mov
or
push
enter
nop
pop
xchg
(bad)
sbb
push
out
mov
cwde
mov
out
mov
cmp
sahf
retf
mov
int3
shl
out
hlt
pop
(bad)
out
test
test
div
jl
pusha
mov
push
jp
inc
lods
je
or
push
fcomp
mov
pop
push
xchg
aaa
inc
or
lahf
inc
sahf
scas
clc
dec
push
push
and
adc
pushaw
mov
dec
add
call
add
sbb
sub
xchg
lods
sar
mov
sub
xchg
and
xor
inc
(bad)
xchg
adc
dec
and
mov
sub
mov
fmul
pop
xchg
dec
push
cmp
adc
daa
mov
(bad)
or
push
inc
sub
jmp
retf
jle
push
out
cdq
sub
aad
test
add
xor
jg
adc
out
push
pop
stos
mov
call
(bad)
and
cwde
xor
inc
xor
fimul
(bad)
cmp
or
mov
daa
mov
shl
jl
shr
or
mov
sub
push
adc
dec
adc
mov
clc
cmp
iret
inc
jae
jge
ss
shl
bswap
mov
fsubr
xor
dec
js
cmc
mov
adc
sbb
out
lods
mov
out
sbb
in
test
cwde
fcmovnb
imul
mov
nop
je
stc
aad
push
xchg
(bad)
push
sub
test
inc
jge
xchg
mov
pop
test
xchg
and
add
mov
std
xchg
loopne
fucom
out
mov
or
mov
rol
out
pop
cmp
retf
push
imul
inc
xor
xor
dec
mov
mov
xchg
outs
mov
aas
fst
daa
xchg
dec
mov
mov
scas
push
inc
jg
scas
pop
mov
outs
or
cli
jle
or
jo
arpl
daa
lds
push
jnp
les
leave
xor
ins
push
push
test
pop
sub
jmp
aam
or
push
sti
into
repz
shr
jmp
inc
pop
or
mov
pushf
push
adc
iret
loop
sbb
fidiv
cdq
call
pop
(bad)
(bad)
adc
pmuludq
lods
mov
js
sbb
inc
cmp
in
inc
inc
pop
sbb
inc
push
out
sbb
mov
sti
inc
ins
dec
pop
dec
mov
xor
cli
nop
lds
mov
push
dec
cdq
(bad)
xchg
inc
sub
movs
ror
push
and
inc
mov
loope
fbstp
(bad)
jb
sbb
outs
rol
cs
xor
push
out
lods
loopne
ret
cmc
jle
cmps
jae
shl
inc
push
cmps
jp
lods
lds
stos
push
mov
push
push
mov
adc
jns
add
push
movs
jle
push
adc
mov
sbb
in
pop
and
(bad)
fdiv
mov
es
mov
dec
push
repz
or
(bad)
cld
out
fistp
mov
and
scas
jo
sub
sbb
cmp
(bad)
jmp
xor
fild
push
mov
sbb
(bad)
xor
mov
(bad)
jl
das
and
ss
sub
mov
cmovnp
add
test
xor
outs
(bad)
or
cmp
pop
lds
cmp
xchg
int3
xor
arpl
aam
push
push
jmp
sahf
sbb
inc
xchg
jmp
and
(bad)
xchg
mov
xor
jg
xchg
icebp
sub
fdivr
enter
punpcklbw
cmovno
push
(bad)
jle
dec
mov
retf
js
xchg
fldenv
xor
ss
jb
jns
out
pop
add
(bad)
and
punpckhbw
(bad)
idiv
imul
das
jne
inc
mov
inc
or
in
adc
or
std
(bad)
mov
push
cmc
ins
aas
push
sub
jmp
mov
xchg
push
ffreep
ins
retf
ds
popa
shl
inc
js
push
sub
adc
jnp
(bad)
loope
in
jns
push
ds
test
popf
xchg
cdq
mov
in
pushf
cmp
in
cmps
or
jb
pop
pop
cmp
xor
jno
fistp
sub
mov
add
(bad)
mov
pop
cmp
pop
and
(bad)
hlt
xchg
xchg
jge
jmp
cmp
add
arpl
inc
xor
pop
ins
mov
add
inc
cwde
fimul
inc
push
loopne
pop
dec
xor
jne
test
fld
adc
mov
push
lea
or
lds
pushf
dec
adc
fcmovbe
xchg
and
retf
imul
outs
jmp
pushf
jno
mov
out
stos
scas
clc
popf
sbb
or
hlt
int
add
sbb
jmp
cli
pop
iret
mov
sti
je
inc
cmc
loope
das
test
shl
loop
jmp
(bad)
pop
pop
pop
aas
jle
into
push
mov
ror
jae
xchg
and
inc
inc
stos
sub
pop
scas
mov
cmp
and
pop
ret
in
jae
add
int
push
push
fwait
cmp
xor
add
cmp
lea
stos
mov
mov
data16
pop
imul
lds
adc
push
scas
mov
push
test
inc
out
lods
dec
mov
xchg
addr16
(bad)
pop
adc
mov
xlat
mov
and
in
dec
iret
pop
retf
pop
repnz
xor
add
cwde
mov
in
xlat
inc
sti
in
jle
std
pop
fwait
lahf
xchg
mov
dec
lods
movs
sar
or
mov
(bad)
adc
xchg
xor
in
cmp
push
icebp
sar
cmp
(bad)
jl
sub
stos
xor
jge
mov
daa
aad
pop
push
xchg
inc
pop
push
cli
mov
pushf
pop
mov
xchg
mov
into
retf
pop
test
into
xor
mov
jmp
xchg
mov
dec
stos
mov
int3
into
cmp
mov
jo
(bad)
jne
push
pop
jnp
xor
out
sti
sbb
popf
test
cmp
jl
lahf
mov
mov
out
into
sar
jp
pop
sub
or
mov
dec
pop
xchg
dec
xchg
pop
inc
push
xchg
add
xchg
pop
pop
pop
cmp
int3
ret
rol
shl
in
push
dec
mov
aaa
mov
ror
mov
jl
ds
rol
cmp
scas
les
push
(bad)
cdq
mov
les
out
es
outs
inc
push
mov
mov
pushf
mov
hlt
push
push
mov
not
cld
pop
inc
mov
push
jo
sbb
pop
xlat
xchg
ins
aam
mov
jp
in
sbb
rcl
ins
into
ret
inc
ret
push
push
hlt
(bad)
fidivr
test
jmp
mov
jmp
ja
cmp
jno
add
dec
mov
push
enter
inc
mov
push
and
mov
movs
idiv
sbb
int3
ret
inc
(bad)
out
outs
sbb
mov
sub
jp
stc
push
mov
js
rcr
js
lahf
fadd
mov
or
jne
in
and
movs
push
scas
mov
and
jecxz
add
imul
inc
mov
jle
xchg
(bad)
std
mov
or
cld
mov
xchg
and
jle
add
out
fnsave
movs
(bad)
out
jbe
sub
dec
sub
xchg
cmc
aas
push
daa
pop
outs
sub
sub
mov
retf
cwde
cmp
pop
pop
mov
ins
sahf
cmps
push
xor
inc
(bad)
xor
ret
test
cdq
sti
ja
inc
fcom
push
mov
adc
sbb
fisttp
xchg
xor
out
adc
bound
dec
jae
lea
push
pop
inc
jne
mov
dec
mov
xchg
mov
(bad)
sub
fbstp
int3
cmp
inc
call
cmp
dec
fs
jae
jo
test
sbb
repnz
mov
push
cwde
aad
pop
ds
xor
in
pop
imul
into
pop
mov
ds
push
test
push
jl
mov
adc
inc
fdiv
push
(bad)
lahf
retf
mov
std
push
push
lahf
ret
clc
shl
inc
repz
dec
xor
nop
pop
jecxz
push
dec
setnp
test
jge
mov
jnp
adc
fs
(bad)
mov
or
xchg
pop
call
pop
cmp
aas
call
sbb
repz
sub
dec
mov
jmp
ins
popf
div
inc
pushf
mov
retf
aas
sbb
push
xadd
fs
push
mov
inc
ss
mov
fistp
cdq
ror
add
ss
mov
sub
lods
fwait
xchg
xor
repnz
adc
mov
jno
inc
nop
cmps
int
add
cmps
aaa
aaa
lahf
or
sbb
fld
jmp
repz
fidiv
sahf
dec
jmp
fimul
enter
popf
mov
push
aas
mov
mov
cmp
sbb
jne
inc
fwait
(bad)
adc
fcmovnbe
int3
retf
fs
jmp
clc
inc
adc
cmp
ret
ja
cmp
sub
xchg
mov
cmc
xor
dec
lds
es
mov
xlat
enter
mov
jecxz
test
int3
mov
lahf
cmp
add
push
loop
push
ds
xchg
sbb
js
xchg
sub
pusha
jb
and
sahf
aad
and
xor
retf
stos
out
push
loop
popf
push
and
cmp
repnz
bound
call
xchg
mov
es
sbb
cmp
dec
ror
lods
xor
xchg
push
loope
dec
mov
inc
stc
push
pop
and
je
movs
cmp
inc
push
mov
scas
stos
cmp
or
outs
rcl
sub
xchg
shr
inc
push
loope
push
push
(bad)
cld
add
adc
pushf
pop
mov
mov
ret
cmp
cmps
ret
lock
xor
pop
jle
retf
and
jno
or
push
outs
push
or
push
jge
and
ins
sub
imul
mov
sbb
xchg
mov
fwait
cmps
test
call
sbb
cmp
leave
sbb
aaa
jns
pop
imul
retf
outs
jo
pop
daa
lea
dec
mov
les
icebp
inc
or
jmp
std
into
imul
aaa
and
inc
ds
popa
jl
pop
fistp
jg
dec
in
test
je
and
pop
pop
mov
and
test
test
adc
es
sub
sar
cmps
ds
or
sbb
xchg
ja
sub
sub
cmp
and
fs
loopne
pop
lds
lods
lods
jmp
push
or
nop
and
cmp
fcmovne
dec
repz
stc
mov
push
inc
push
sub
add
cli
xor
nop
mov
mov
pop
scas
sbb
test
push
iret
pop
sbb
jp
inc
mov
jle
adc
mov
mov
sub
out
movs
jns
std
outs
out
ror
(bad)
mov
mov
ja
sub
adc
mov
fdiv
fmul
mov
dec
ror
in
pop
dec
adc
loop
mov
into
lods
fidiv
loope
stos
xlat
call
bound
ret
fild
mov
push
cli
mov
push
or
fild
nop
jg
repnz
pop
cmps
xchg
mov
repnz
pop
mov
cpuid
fldenv
cld
sub
or
push
sti
mov
mov
rol
movs
push
push
inc
cmp
icebp
sbb
pop
adc
add
and
cmp
aam
scas
retf
mov
mov
mov
or
xor
call
add
stc
es
or
add
mov
pop
fwait
jns
cs
lahf
ror
rcl
pop
xor
gs
mov
in
(bad)
das
call
inc
sbb
jp
push
jmp
js
fisubr
adc
mov
jmp
mov
dec
repnz
push
in
xor
outs
adc
sbb
push
fbld
call
sbb
leave
xor
dec
enter
and
outs
dec
sbb
mov
mov
xchg
jge
enter
fcomi
jp
mov
push
cli
bound
push
jge
dec
mov
push
ds
cli
or
mov
sbb
test
inc
cmp
setl
ret
stc
add
dec
ret
nop
cdq
loope
das
lea
retf
sub
pop
nop
rcr
jl
pop
repz
mov
rol
or
fldcw
or
push
jbe
xor
and
loop
je
adc
movs
inc
ins
sbb
out
repz
mov
mov
ins
jb
leave
addr16
mov
mov
call
inc
ds
fild
retf
push
(bad)
mov
fwait
das
loop
push
arpl
inc
call
mov
cli
push
int3
push
pop
loopne
imul
bnd
push
das
jecxz
inc
outs
xchg
ss
push
and
mov
mov
adc
out
sbb
xor
sbb
call
lds
push
shl
push
pop
shl
out
sbb
out
sub
push
xor
lahf
lods
js
jo
das
mov
sahf
(bad)
fimul
inc
mov
out
inc
mov
add
jo
jae
xchg
rcl
and
sbb
xlat
ins
mov
sub
and
mov
mov
inc
sbb
leave
add
in
aam
jp
jp
jle
int3
dec
and
adc
call
sbb
xor
out
mov
fs
ins
arpl
clc
xor
push
inc
mov
sbb
or
pop
push
(bad)
dec
or
mov
jmp
aaa
dec
or
jb
pushf
movs
push
push
repnz
dec
retf
sbb
jo
fist
pop
xor
and
fstp
(bad)
imul
jo
(bad)
test
push
pop
test
pop
lahf
cli
aaa
xchg
cmp
in
mov
xchg
jnp
adc
movs
cmp
push
xor
sbb
shl
adc
ret
mov
xchg
inc
pop
adc
popa
adc
sbb
mov
push
push
retf
sbb
adc
mov
adc
mov
mov
(bad)
shl
loop
dec
fs
mov
pusha
push
sbb
lods
(bad)
cmp
iret
jle
psubusb
pushf
imul
add
mov
fwait
enter
es
jmp
push
push
in
ins
cmp
mov
lahf
js
add
xor
pop
bound
std
popa
push
adc
mov
xor
adc
inc
into
lods
cmp
jne
sbb
adc
imul
adc
pop
movs
ss
pop
cmp
pop
loopne
xchg
adc
scas
and
push
nop
out
inc
mov
sbb
mov
and
push
mov
adc
pushf
sbb
mov
into
jecxz
fwait
int3
xchg
fdivrp
in
adc
test
(bad)
adc
inc
int
mov
jbe
jmp
ds
adc
jno
(bad)
dec
iret
cmp
inc
cli
mov
(bad)
pushf
mov
and
jp
and
in
int3
gs
xor
popf
mov
es
or
cwde
in
dec
xor
in
imul
lods
mov
xlat
scas
jne
jle
or
mov
mov
scas
pop
inc
or
sub
inc
(bad)
popa
xchg
and
pop
scas
loopne
in
sub
dec
mov
or
mov
stos
fnstcw
imul
fnsave
sub
int
test
repz
cli
jnp
pop
jle
int3
fadd
add
ja
(bad)
sti
sbb
and
mov
int
sub
pushf
iret
and
fsubr
and
(bad)
dec
pop
stos
dec
xlat
xor
into
jmp
out
mov
pop
mov
enter
jnp
lock
inc
add
bnd
mov
mov
mov
clc
cmc
js
dec
scas
mov
sbb
and
adc
and
mov
or
push
cwde
mov
xchg
(bad)
jno
jg
jno
push
or
imul
ins
adc
push
sbb
push
scas
push
cmp
dec
mov
push
call
cmp
mov
or
lods
mov
out
mov
jo
cdq
xor
adc
fxtract
cmp
jmp
mov
and
jl
xlat
cmp
mov
adc
stos
jne
cmp
xchg
xlat
loopne
mov
(bad)
in
mov
loope
retf
pop
jmp
push
cmp
iret
pop
aad
xlat
jns
imul
mov
jb
push
dec
outs
into
push
ds
lods
leave
mov
mov
or
xor
or
ins
mov
sbb
mov
ins
mov
or
das
ret
dec
rol
xchg
dec
jl
popa
mov
dec
(bad)
stc
adc
mov
je
xchg
mov
(bad)
inc
or
nop
jae
push
dec
lahf
mov
cmps
sub
sub
iret
xor
test
jmp
xchg
push
and
enter
ret
cmp
jle
push
add
pop
xchg
popf
inc
mov
sbb
pop
cmc
xor
call
jb
mov
sbb
ficomp
repz
fild
xchg
mov
xchg
dec
(bad)
xor
push
jmp
cmps
push
aas
or
push
push
sbb
mov
push
push
add
(bad)
int3
jp
and
stos
imul
push
sti
ja
iret
test
dec
bound
outs
adc
cmps
sti
dec
jno
out
rcr
movs
stos
sbb
shr
mov
ror
lods
pcmpeqd
out
sub
xor
call
add
cli
inc
sub
fadd
sti
mov
cld
ret
add
xor
inc
xchg
out
cdq
fdiv
std
pop
ins
mov
nop
sub
xor
xor
clc
fdivr
jnp
dec
dec
aam
ret
int3
cmps
dec
adc
leave
add
inc
push
imul
out
aam
sar
mov
sub
lds
dec
ds
adc
sub
mov
and
dec
test
stc
mov
pop
fiadd
or
mov
pop
ss
inc
add
cmp
inc
lock
icebp
sti
cmp
fimul
mov
push
sub
sub
mov
mov
mov
mov
jb
jns
fwait
cmp
je
jle
fdivr
ror
jg
les
inc
dec
stc
(bad)
sti
mov
push
push
or
int
jmp
inc
test
push
out
pushf
nop
je
hlt
jp
adc
pop
dec
or
inc
stc
int
(bad)
out
dec
sahf
ins
sbb
mov
arpl
pushf
inc
test
(bad)
rol
mov
pop
and
mov
int
inc
and
daa
push
xor
and
mov
sub
sahf
sbb
shr
sub
mov
outs
in
std
add
call
xchg
and
cmps
rcl
pop
(bad)
retf
out
int
adc
dec
jnp
or
retw
inc
adc
in
pop
aaa
xchg
xchg
xchg
movs
idiv
xor
mov
jo
or
jecxz
mov
bound
movzx
xchg
and
sbb
(bad)
stc
inc
lahf
mov
inc
lahf
pop
sub
xor
popa
adc
enter
loop
rcr
cmp
inc
popa
xlat
jmp
sar
mov
int3
icebp
test
rcl
mov
je
imul
add
push
int3
addr16
aad
shl
xchg
and
and
mov
(bad)
cwde
shr
icebp
shr
xchg
dec
pop
imul
mov
jle
mov
mov
push
add
mov
and
fwait
and
fwait
mov
sub
add
iret
aaa
jb
mov
xlat
add
add
pop
dec
push
jns
mov
fcom
inc
daa
aaa
and
jecxz
jo
dec
jo
movs
div
(bad)
hlt
fdiv
sub
nop
fs
cwde
cld
sub
mov
push
add
retf
sub
aaa
ficomp
pop
int3
dec
pop
xchg
xchg
push
iret
xchg
jle
push
loop
cwde
add
jo
aaa
mov
outs
pop
loop
fsubr
inc
adc
xchg
xchg
repnz
xchg
mov
inc
mov
or
rcl
mov
clc
test
pushf
loope
aam
loope
(bad)
loop
mov
mov
mov
xchg
jle
clc
sub
dec
add
in
cld
js
call
fwait
dec
inc
cmp
out
lock
dec
shr
shr
pop
push
rol
push
push
in
mov
mov
sbb
sub
repnz
shr
imul
jg
(bad)
data16
jp
jne
mov
mov
jns
add
push
ja
call
sahf
movs
aad
sub
mov
enter
mov
mov
sub
ror
inc
fwait
enter
mov
test
pop
or
cdq
imul
or
out
sub
ficomp
mov
xor
std
call
jae
add
xor
cmps
out
push
shl
sbb
and
mov
cmps
inc
(bad)
or
das
sbb
and
mov
adc
out
pop
sbb
repnz
xchg
and
mov
test
xor
retf
sub
fdiv
adc
aad
retf
(bad)
clc
lock
enter
inc
cmp
sbb
aam
fsub
jecxz
mov
mov
test
ins
aaa
mov
js
jge
movs
jbe
mov
inc
xlat
and
push
fld
loopne
icebp
xchg
fwait
lods
sub
test
mov
mov
push
xor
movs
mov
sub
fld
and
in
movs
mov
in
pop
add
ins
in
imul
mov
xlat
push
into
mov
cmp
inc
xchg
out
cmc
jnp
jo
mov
and
test
iret
pop
mov
jge
loope
push
jns
aam
xchg
jg
popa
mov
scas
js
aas
pop
mov
sahf
fadd
fidiv
sbb
mov
or
xchg
sub
out
test
fsubr
cmp
push
mov
pop
inc
in
shr
mov
xchg
mov
sahf
test
icebp
test
push
repnz
pop
jo
or
bound
mov
cs
mov
xor
out
xchg
mov
aaa
jnp
test
cld
fcom
ret
or
(bad)
pop
ins
adc
xchg
push
and
enter
test
in
dec
stc
inc
lea
dec
pop
jmp
pop
jnp
in
dec
and
mov
movs
xchg
cmp
jg
cmp
sbb
lods
xchg
push
(bad)
sbb
adc
mov
loop
sub
mov
enter
jne
jmp
jbe
and
(bad)
pop
inc
imul
mov
jnp
scas
jb
jns
rcl
out
shl
rcl
in
mov
ja
sub
sbb
pop
push
jb
inc
sub
jbe
xchg
or
push
mov
lea
sub
ins
inc
fistp
and
fwait
aas
fisubr
push
loop
loop
jl
sub
pop
sahf
dec
imul
mov
mov
jno
in
fs
jmp
or
jmp
pavgw
movs
cld
into
fs
popa
add
xchg
jbe
adc
enter
jge
loop
cmp
icebp
adc
in
jecxz
test
lods
movs
jbe
leave
pop
adc
push
jne
mov
sub
jbe
add
inc
xlat
or
imul
(bad)
ret
(bad)
repz
dec
out
jmp
and
jl
xor
mov
dec
cmp
mov
popa
lods
push
pusha
ds
in
pop
adc
add
int3
lods
scas
call
mov
dec
jecxz
push
dec
fimul
aad
jg
call
sbb
call
mov
push
adc
pop
fadd
xor
xor
cwde
scas
adc
mov
mov
int3
mov
jne
xchg
jno
nop
jg
and
dec
push
jns
jb
and
fdivr
addr16
xlat
je
shl
retf
scas
push
hlt
jmp
sub
or
enter
neg
cmp
aas
(bad)
cld
pushf
push
mov
ret
xlat
add
mov
retfw
inc
jg
retf
pushf
xchg
sbb
(bad)
adc
xchg
xchg
jno
mov
push
mov
add
push
ja
mov
mov
shl
les
and
pop
xchg
or
stos
adc
cli
sbb
cdq
or
jbe
dec
int
xchg
imul
out
jb
pop
ds
add
(bad)
jl
pop
sub
mov
xchg
mov
cmp
sub
test
mov
inc
clc
mov
add
mov
xchg
inc
ud1
pop
sar
dec
jmp
loope
and
ret
sub
ret
xchg
xchg
sub
fs
jnp
dec
into
jb
scas
fsub
push
push
push
adc
das
leave
dec
jb
mov
cmp
popa
out
shr
mov
and
mov
push
mov
mov
addr16
or
data16
pop
int
dec
xchg
retf
mov
sub
jbe
sbb
cli
hlt
(bad)
xor
mov
into
fsubr
and
adc
mov
mov
sbb
outs
pusha
mov
(bad)
scas
mov
xchg
pop
add
cdq
jnp
dec
(bad)
out
mov
cmp
jb
mov
sbb
into
push
ja
pop
sbb
hlt
or
pop
jmp
ret
loopne
jnp
cmp
jl
in
mov
push
and
mov
sub
out
jnp
jae
mul
rcr
push
dec
fdiv
sbb
stos
ret
mov
cdq
mov
(bad)
pop
les
pop
cmp
daa
sub
in
les
popf
jo
adc
and
imul
add
and
pop
cmps
and
mov
or
xchg
lods
sub
out
cmp
cmps
sbb
xor
std
leave
mov
pop
fiadd
push
mov
push
sub
xor
hlt
ins
pop
arpl
or
pop
push
push
imul
or
call
sbb
stos
inc
pop
inc
sahf
cmp
push
xchg
out
(bad)
test
and
inc
fwait
(bad)
js
jb
push
xor
mov
push
rcr
test
imul
pop
pop
das
add
cmp
stos
cmps
mov
or
repnz
jbe
mov
outs
push
dec
not
stc
or
hlt
pop
call
adc
in
nop
add
mov
fist
test
and
mov
sbb
jmp
sbb
adc
rcr
xchg
fbstp
arpl
adc
sub
mov
and
sub
jle
add
xchg
mov
cmp
shl
add
xchg
pop
mov
(bad)
aaa
jo
cmp
sahf
test
mov
rol
xchg
daa
pop
ret
sub
pop
pop
mov
xchg
push
ds
loopne
test
es
neg
adc
push
jp
and
aam
fwait
mov
into
and
sbb
fucomip
add
ror
xchg
mov
retf
jl
xor
mov
ret
ja
dec
mov
push
and
jmp
pop
test
rcr
xchg
pushf
mov
and
inc
into
push
pop
scas
movs
loopne
mov
out
mov
js
push
adc
pop
test
xor
lea
pushf
inc
ins
mov
xor
ret
nop
mov
retf
out
retf
fnstenv
sbb
mov
jmp
and
rol
pop
lahf
push
psrlw
sbb
mov
aas
xor
mov
imul
inc
adc
sbb
cmpxchg
add
cmps
mov
test
fisubr
stos
lods
hlt
cmp
das
add
adc
or
ret
ins
retf
mov
cmps
or
adc
dec
paddusb
stc
jge
mov
aam
xchg
and
lock
je
or
shr
cmc
and
cmp
mov
mov
xlat
retf
(bad)
fdiv
mov
or
pop
sub
mov
sbb
jo
push
push
mul
lahf
imul
mov
sar
cmps
(bad)
xor
ins
mov
data16
push
sub
movs
neg
out
cli
scas
or
mov
ror
cmp
lahf
and
pop
in
or
inc
sub
lea
aam
addr16
add
mov
movs
es
xor
outs
out
jns
ds
sbb
dec
jl
ss
mov
test
nop
sbb
cwde
xor
or
mul
or
sub
push
in
inc
lea
and
add
push
int3
add
movs
cmps
fcom
movs
pop
adc
lods
cmp
lds
outs
push
adc
mov
mov
xor
jmp
mov
jne
jbe
or
fisttp
gs
jnp
lahf
mov
test
(bad)
fmul
int
adc
mov
mov
mov
mov
popa
aas
mov
mov
or
not
ins
(bad)
inc
sub
test
addr16
data16
call
mul
push
mov
mov
arpl
cmp
sub
out
or
out
aad
movs
scas
jne
or
mov
shr
pop
fisub
int
stc
add
test
cmp
cmp
in
jnp
sahf
cmps
bound
stos
push
mov
sahf
mov
and
call
xchg
mov
icebp
mov
inc
inc
out
sbb
pop
lea
jnp
icebp
xor
lahf
jmp
dec
xrelease
mul
gs
mov
pop
xchg
dec
(bad)
cmc
or
sbb
mov
cmp
push
movs
in
ret
jl
je
sub
movs
test
fwait
mov
dec
inc
inc
mov
add
retfw
inc
push
mov
es
cmp
inc
mov
outs
mov
xchg
push
sub
scas
mov
jmp
(bad)
stc
jo
je
cmp
push
aad
out
js
cmp
out
hlt
popf
inc
cmp
mov
sbb
shr
ins
cmps
jle
mov
or
jp
jnp
fs
ret
mov
shl
inc
or
call
jecxz
movs
push
ret
sub
je
xlat
xor
sahf
retf
adc
add
outs
jbe
push
js
pop
int3
push
jge
jp
scas
mov
or
in
push
inc
retf
or
sub
mov
aaa
or
iret
hlt
or
ss
jne
ror
pop
gs
jl
mov
mov
bound
or
pop
lods
les
cdq
add
push
jns
test
jle
mov
pushf
pop
pop
dec
xchg
mov
(bad)
popf
push
xlat
adc
fstp
ds
adc
shr
or
push
mov
xchg
dec
iret
mov
xchg
in
stos
je
mov
sbb
mov
pop
or
sbb
sar
outs
or
mov
hlt
je
inc
out
lahf
dec
xchg
sahf
lods
mov
fs
std
mov
push
retf
jecxz
sbb
scas
pop
movaps
sub
add
test
in
movs
mov
daa
adc
dec
rol
sub
es
jnp
ds
push
fnstsw
mov
sbb
or
adc
pop
jmp
adc
(bad)
(bad)
pop
sub
scas
icebp
cmp
xchg
int
je
in
in
push
cdq
adc
mov
pop
sub
push
dec
and
or
fild
(bad)
outs
pusha
ficomp
icebp
mov
test
inc
or
into
test
retf
dec
je
call
mov
push
stos
jnp
xor
or
cmp
and
icebp
enter
dec
enter
sbb
aas
dec
and
jnp
or
inc
add
add
aas
xchg
icebp
push
push
add
inc
rol
and
cmp
outs
push
jae
sub
bound
arpl
sub
add
inc
fadd
test
mov
call
repz
mov
cmp
jp
sub
repnz
ins
shl
cmps
lods
out
push
or
push
cmovnp
jbe
iret
fsubr
cld
push
lock
mul
mov
jno
sbb
cmp
sub
jno
ins
xor
and
pop
test
dec
shl
ret
sbb
bnd
jnp
fcomip
clc
fdivr
or
leave
pop
dec
xor
mov
lea
and
mov
test
stos
pushf
shl
sbb
in
mov
pop
enter
in
in
cmp
out
adc
sub
jns
cmp
sub
xor
xor
jb
jl
mov
mov
xchg
popf
xchg
movs
idiv
jle
xchg
sbb
cmp
xor
push
xor
adc
push
icebp
sub
rcl
jmp
push
in
cmp
sub
(bad)
stc
cmp
mov
xlat
les
adc
aad
scas
xchg
cwde
sbb
push
pushf
stos
retf
mov
cmp
xor
mov
xor
inc
xchg
xchg
add
fldcw
inc
addr16
push
jns
sti
mov
call
fild
sbb
mov
ror
push
sub
or
ds
(bad)
into
call
loope
mov
rcr
add
call
jle
jp
sahf
retf
test
jge
ret
xor
adc
mov
xchg
repnz
lahf
fsubr
sar
out
aam
rcr
mov
xor
push
call
adc
cmp
xchg
arpl
lods
rcl
into
pop
ret
or
in
cmp
cmp
mov
cmp
gs
daa
and
rol
clc
imul
pop
pop
pop
mov
lods
shr
add
movs
adc
lods
sbb
add
xchg
retf
mov
neg
jmp
aaa
push
dec
sub
push
(bad)
and
lods
adc
aam
or
int
test
xor
bound
push
aas
test
mov
xchg
fcmovnu
sub
ins
popf
popa
cmp
fidiv
add
aam
add
fild
fnstsw
inc
fimul
jnp
push
pushf
mov
(bad)
mov
cmc
retf
or
mov
(bad)
std
sub
mov
stc
lods
ins
aam
in
clc
and
push
(bad)
loope
pop
gs
jae
jp
cmp
or
or
dec
nop
mov
stc
jo
or
jmp
addr16
shl
sets
es
lods
repnz
or
cli
cli
or
cdq
stos
fs
rcr
inc
lods
fnstsw
mov
rcl
hlt
lods
push
mov
dec
movs
cdq
mov
jl
cwde
pop
pop
rcr
sbb
inc
hlt
push
add
dec
pushf
lea
enter
aaa
(bad)
test
sub
push
(bad)
xlat
test
mov
mov
(bad)
xchg
pop
or
xor
jns
mov
test
dec
mov
jp
pop
pop
jo
(bad)
jbe
add
les
cmp
add
pop
aad
dec
ins
pop
mov
mov
cli
lock
aam
mov
sahf
imul
xor
ja
pop
push
mov
mov
or
cs
jmp
fcomi
ror
icebp
inc
std
movs
pop
mov
aad
and
jp
(bad)
imul
lods
repnz
xor
and
dec
mov
jecxz
lods
adc
jnp
dec
fs
add
push
mov
sub
sub
sbb
mov
sub
popa
xor
push
cmp
pop
dec
pop
lods
jnp
xchg
ror
mov
test
cld
push
or
mov
sbb
gs
sbb
mov
push
enter
push
jmp
rcr
jle
fdiv
pop
je
cmp
pop
push
mov
mov
rcr
les
call
xor
imul
aad
xchg
ja
or
(bad)
fisubr
repz
xor
outs
cli
mov
les
pop
push
stos
xlat
mov
ja
mul
add
aas
cdq
and
loop
enter
lahf
aas
iret
fnstsw
mov
addr16
stc
or
dec
mov
sbb
inc
sub
ret
xchg
or
jb
fs
mov
dec
in
or
push
or
test
cmp
nop
std
or
xor
push
jnp
test
sub
mov
cdq
mov
(bad)
call
fdiv
add
loop
sub
leave
fistp
and
out
inc
scas
stos
sub
sbb
sbb
lods
xlat
int3
inc
push
sbb
les
xlat
not
mov
lea
in
sti
ror
fist
loopne
repz
cmps
mov
sti
not
cmp
mov
inc
sub
pop
push
sbb
xor
(bad)
into
mov
fcmove
les
iret
mov
mov
fsubr
popf
js
mov
sar
mov
sub
sbb
xor
in
lods
(bad)
leave
clc
jne
push
test
push
out
inc
push
dec
sub
pushf
xchg
cld
mov
ins
inc
stc
cld
(bad)
out
inc
inc
ficom
popf
pushf
popa
dec
mov
mov
cmp
scas
fdiv
stos
std
call
push
push
mov
or
ins
sbb
pop
sub
hlt
retf
jmp
mov
or
call
sbb
out
sbb
icebp
movs
pop
bswap
into
or
shr
xlat
cdq
lods
mov
pop
mov
jmp
sti
push
xchg
or
icebp
(bad)
pop
adc
jno
mov
and
test
ds
lods
inc
scas
dec
js
shl
aas
(bad)
mov
ja
gs
in
repz
out
xchg
mov
clc
out
ds
stc
xor
sbb
mov
clc
sbb
icebp
bound
sub
and
es
sub
mov
fnsave
cs
imul
in
std
shl
fcomp
pop
xor
dec
push
adc
dec
repnz
cmp
add
pop
and
div
mov
lds
pop
mov
add
adc
and
jmp
sub
xor
cmp
out
push
aam
in
inc
cdq
sbb
das
xchg
out
and
mov
call
retf
movs
in
ficomp
jecxz
adc
mov
push
push
xor
imul
cwde
sub
cmp
inc
cmp
sub
jle
sbb
rcr
jae
test
rcr
fbstp
adc
sub
jb
idiv
cmp
pop
dec
cli
cmp
inc
movs
inc
in
cmp
not
jno
jmp
xchg
dec
mov
stos
or
aam
popf
jg
mov
jl
adc
dec
adc
imul
(bad)
jge
stos
fdiv
ss
xor
sbb
sbb
push
ins
mov
pop
stos
fucomip
call
hlt
nop
cmps
sub
xchg
and
jbe
mov
ins
xor
sbb
popf
cdq
cmps
popf
and
mov
fild
xor
pop
loop
dec
and
loop
jb
push
loop
cwde
call
sti
js
(bad)
rol
sub
push
les
ficom
inc
fbstp
mov
sbb
push
lahf
out
(bad)
mov
rcl
lds
jb
cs
adc
pop
cdq
addr16
popa
adc
out
xchg
xchg
sbb
es
leave
shl
and
fwait
cmp
add
sub
cmps
jge
jmp
sti
(bad)
pusha
(bad)
sub
(bad)
iret
inc
ins
fstp
mov
or
fucomip
add
push
sub
gs
sti
(bad)
imul
aad
pusha
iret
cli
retf
mov
xor
out
in
xor
dec
faddp
lea
cwde
xchg
jle
into
pop
push
mov
mov
sub
xor
mov
mov
in
jp
je
in
std
xchg
data16
stos
pusha
rcl
data16
mov
pop
test
repz
sub
sbb
push
movs
cwde
push
dec
data16
xor
shl
fs
push
cmc
daa
push
cmps
inc
std
jnp
xchg
dec
or
inc
fimul
sbb
dec
in
dec
inc
xchg
cmps
push
pop
cmps
call
mov
sub
mov
pop
dec
outs
jnp
mov
shr
fimul
add
repz
loop
mov
mov
mov
mov
test
cdq
or
or
dec
cwde
movq
fnstcw
mov
and
inc
cmp
mov
hlt
not
inc
cld
out
stos
xchg
fwait
jns
mov
test
jne
and
ja
push
(bad)
test
xor
add
adc
mov
out
pop
jle
test
inc
aaa
ins
(bad)
cwde
sti
sbb
scas
lods
mov
cdq
outs
mov
scas
push
arpl
jmp
arpl
xchg
sar
cs
test
iret
stos
pop
sub
pop
ret
fisubr
(bad)
aas
dec
xchg
xlat
lahf
enter
push
pop
jge
xlat
dec
push
test
or
cli
jae
sub
or
inc
inc
and
adc
sahf
ins
in
xchg
cmp
or
aaa
jne
test
mov
in
mov
mov
adc
mov
daa
push
dec
dec
ins
lahf
sar
fwait
push
cwde
idiv
mov
ror
pop
sub
ds
ror
js
or
or
push
lock
push
xchg
(bad)
add
and
cmp
or
rcr
cdq
sub
fcmovbe
jnp
dec
lds
aad
pop
push
fld
mov
fcom
mov
adc
pop
int
or
jmp
inc
push
mov
sbb
mov
(bad)
jae
mov
imul
pminsw
cmp
stc
outs
xor
mov
leave
in
mov
jae
add
push
xchg
dec
adc
stos
es
xor
popa
call
lds
jle
jge
aaa
jg
sahf
push
test
mov
cmp
retf
push
push
loop
inc
movs
push
adc
jo
sub
mov
and
or
retf
rcr
iret
xchg
popa
adc
sbb
sub
test
jle
popf
jp
aas
mov
xor
inc
pushf
dec
ds
pop
loopne
hlt
dec
fmul
(bad)
mov
jo
sub
push
push
pop
pop
fimul
or
add
cmp
ins
fstp
mov
inc
cmp
les
push
and
dec
inc
push
mov
imul
add
lahf
dec
loopne
jns
aad
rcr
or
cmp
mov
or
stos
inc
push
stc
xlat
dec
pop
dec
sub
leave
stos
jns
ret
push
(bad)
(bad)
sti
xchg
cmp
shl
cs
xor
adc
mov
loope
ret
sbb
mov
pusha
push
cmp
xor
(bad)
(bad)
cmp
(bad)
fist
jmp
cwde
jo
outs
xchg
int3
jp
xchg
add
int
sbb
in
aaa
mov
int3
inc
xchg
dec
lea
jae
and
mov
mov
loopne
loope
mov
bound
pop
scas
clc
adc
adc
dec
and
inc
(bad)
clc
lea
xchg
jns
ins
jb
dec
ins
mov
fadd
movs
fxch
push
enter
xchg
test
xor
jo
lea
pushf
add
lods
iret
int
mov
(bad)
mov
mov
dec
jno
mov
imul
leave
repz
sahf
xchg
fbstp
sub
rcl
xchg
ret
repz
stc
mov
fnstsw
xchg
jmp
push
mov
(bad)
sub
fldenv
lds
cwde
mov
lds
inc
mov
mov
cld
sbb
push
mov
jp
pop
and
sub
jmp
jg
sbb
aaa
lods
push
ss
popf
sbb
(bad)
lahf
add
gs
jle
cld
(bad)
pop
jmp
mov
ja
js
push
push
loopne
sub
call
cmc
cvtps2pi
(bad)
mov
inc
fincstp
xchg
pop
pop
stos
sub
mov
push
call
push
sbb
shl
dec
icebp
sub
aam
add
dec
cld
dec
mov
mov
xchg
mov
mov
arpl
imul
xchg
sahf
std
mov
sbb
mov
dec
mov
lahf
mov
sbb
xor
cmp
sti
or
(bad)
adc
mov
adc
lock
xchg
xchg
and
cmp
out
test
cld
cli
pop
pushf
mov
retf
ficomp
jle
int
movs
mov
mov
iret
arpl
inc
dec
and
hlt
fiadd
xchg
loopne
mov
pop
jl
push
or
xchg
adc
hlt
jmp
scas
call
sub
cmp
cmp
sub
stc
jmp
hlt
sub
pop
add
sub
add
mov
js
jmp
and
cld
pop
and
and
mov
xor
jl
inc
xchg
std
mov
push
nop
jbe
cmp
mov
loope
pop
and
ja
clc
jbe
sub
pop
push
std
imul
cmp
(bad)
push
dec
mov
push
shr
retf
and
mov
sbb
fcomp
idiv
loope
push
inc
(bad)
data16
xchg
xor
jae
jmp
shl
push
mov
sbb
push
(bad)
shl
fistp
out
gs
xchg
mov
popf
pop
pusha
xor
into
repz
and
or
mov
mov
out
outs
add
adc
aas
xor
into
xchg
mov
dec
or
iret
inc
sbb
je
ror
xchg
cld
push
lea
cmp
pop
gs
cmp
scas
cmp
test
inc
inc
les
in
pop
fs
dec
or
pop
add
in
iret
iret
out
fs
mov
(bad)
and
and
jae
ds
setb
test
xchg
jmp
scas
stos
clc
nop
dec
jmp
movs
mov
mov
imul
cmp
mov
xchg
call
outs
sbb
aam
aaa
in
inc
je
iret
mov
push
ret
and
and
mul
(bad)
in
outs
add
add
adc
aaa
jnp
pop
and
mov
pop
sub
mov
popf
cs
pop
jmp
into
jg
test
dec
jnp
jae
jle
push
push
sbb
fs
test
imul
iret
xor
sub
push
push
loop
jmp
xchg
cmps
or
xchg
ins
cmp
into
stos
mov
jge
push
(bad)
js
(bad)
and
xor
push
mov
(bad)
jns
cmc
jl
ror
dec
mov
xor
sahf
mov
pop
ret
(bad)
int
xchg
rcl
out
cmp
pop
xchg
sbb
adc
push
(bad)
and
loopne
sbb
jl
cmc
sub
jmp
add
push
hlt
jmp
out
data16
xor
icebp
in
mov
pop
adc
test
cwde
inc
or
add
mov
adc
cs
movs
jp
xchg
or
mov
and
sub
pusha
dec
cmp
add
or
test
out
(bad)
cmp
cmp
cmps
scas
dec
adc
adc
fs
rcr
mov
ror
in
jo
mov
pop
sti
mov
xlat
xchg
xor
clc
push
xor
call
shr
popf
mov
sub
(bad)
(bad)
aad
sub
popf
push
leave
shl
mov
jns
shr
push
cwde
xchg
js
xlat
push
pop
mov
push
in
dec
jno
cwde
pop
jecxz
push
mov
fild
jb
loopne
dec
inc
push
mov
mov
mov
dec
cmp
icebp
(bad)
gs
movs
mov
pop
push
adc
addr16
add
movs
rol
add
call
mov
add
cmp
stc
and
mov
mov
shl
arpl
cmps
es
movs
jg
icebp
xchg
jb
sahf
mov
lods
retf
fld
(bad)
not
mov
movs
mov
mov
mov
dec
imul
daa
pcmpgtd
pop
cli
pop
mov
out
jb
jne
push
xor
repnz
dec
lods
mov
psadbw
nop
std
pop
(bad)
push
add
mov
pusha
jle
pop
pop
stos
jne
cmp
push
sub
mov
xchg
mov
and
fdivr
lock
cwde
or
fist
mov
inc
(bad)
sar
bound
and
jb
js
jmp
xlat
and
pop
stos
xor
pop
jbe
fidiv
fidiv
(bad)
push
jle
cwde
mov
aad
adc
call
shr
in
lea
and
jp
push
pop
ins
repz
je
cli
nop
dec
xchg
mov
dec
in
sub
pop
(bad)
outs
ret
shl
retf
adc
jmp
ss
xchg
pop
push
adc
pushf
shl
dec
lods
bound
mov
sbb
cmp
and
pop
daa
data16
ficom
loope
repnz
sti
sahf
push
mov
aad
or
div
pop
jnp
sbb
xchg
mov
jle
icebp
aad
xchg
push
imul
xchg
repz
add
cmp
add
out
div
jnp
or
mov
add
pop
test
call
inc
jmp
inc
fprem1
mov
cld
es
mov
jle
xlat
mov
pop
xchg
cmps
cld
adc
and
mov
mov
pmaxub
leave
jnp
lahf
pop
xchg
xlat
lods
sbb
sti
add
pop
xchg
or
mov
lock
sub
addr16
mov
(bad)
ds
inc
mov
jne
and
rol
repz
push
call
sbb
fiadd
jno
sbb
mov
push
push
push
ret
mov
pop
ja
fcom
div
out
out
add
mov
leave
cmp
add
ins
and
push
shl
test
mov
or
dec
int3
dec
mov
sti
retf
(bad)
aam
out
cmp
mov
xor
movs
aaa
stos
lea
pusha
(bad)
fild
push
push
adc
addr16
out
je
popf
adc
pop
std
fnsave
pop
jp
cmps
xchg
xchg
or
cmp
jecxz
and
sub
adc
mov
cmps
jecxz
inc
fadd
rol
push
sbb
xchg
imul
shr
ins
mov
dec
or
sub
push
arpl
in
sub
push
ja
sub
loop
aas
pop
daa
out
sbb
push
pop
xor
dec
mov
pop
enter
dec
jbe
add
dec
cmps
cmp
dec
mov
(bad)
arpl
test
adc
(bad)
loope
cmps
clc
mov
or
addr16
dec
cmc
pop
mov
inc
repz
ret
(bad)
sub
sub
lods
inc
jnp
mov
(bad)
cli
aaa
inc
stos
cmp
mov
sbb
fistp
call
add
push
mov
xor
sub
fisub
cmps
dec
adc
lods
cmps
loop
dec
mov
mov
lds
lods
mov
mov
in
mov
cmp
push
push
and
cdq
loopne
jb
retf
pop
scas
into
cmp
push
into
xchg
outs
outs
mov
and
pop
pop
ret
mov
pop
sbb
jmp
sahf
add
fwait
movs
xor
push
cwde
jne
out
addr16
or
add
pop
iret
out
mov
mov
call
mov
cli
ds
call
sbb
mov
lods
xor
sub
or
shr
movzx
outs
mov
adc
mov
jg
and
adc
mov
sbb
xor
mov
pop
dec
imul
xor
mov
sub
enter
xor
into
pop
dec
xor
mov
jl
outs
mov
pop
and
xor
inc
pop
jnp
push
mov
mov
pop
lods
scas
call
rcr
dec
adc
cli
aaa
test
repnz
loopne
int
pop
addr16
add
fstp
or
xchg
jbe
add
loopne
cld
fcom
cmp
in
jmp
push
fwait
push
aam
in
bsr
pop
in
out
mov
adc
jns
xor
(bad)
cli
cwde
pop
out
and
cmp
add
mov
ret
or
jno
idiv
inc
pushf
in
test
sub
xor
mov
inc
test
cmp
call
call
push
(bad)
pop
jp
mov
mov
es
jae
jo
(bad)
aas
inc
inc
popf
shr
mov
jb
mov
sbb
fisubr
adc
add
pop
ret
mov
jg
jp
rcl
mov
adc
inc
loope
int3
push
in
into
pusha
push
stos
xlat
add
mov
sbb
pushf
pop
mov
sbb
push
jle
fadd
xchg
(bad)
cwde
and
sbb
jns
mov
jmp
shl
std
(bad)
jl
pop
adc
inc
js
mov
je
test
or
xchg
dec
jno
sub
or
pop
push
inc
add
les
pop
cmp
mul
xchg
sub
lods
popa
adc
sti
in
dec
inc
or
enter
sub
icebp
pushf
xor
cmp
shl
mov
addr16
sub
mov
jg
push
push
pop
test
and
(bad)
ss
sub
gs
ds
into
jbe
jno
(bad)
add
fist
hlt
xor
scas
mov
jne
mov
je
out
sub
mov
ins
(bad)
ss
je
call
lahf
sbb
aam
sub
xchg
xor
lods
push
std
mov
and
xchg
xchg
inc
sti
cmps
add
dec
lds
or
imul
sahf
or
sbb
daa
jns
sbb
jle
inc
test
pop
inc
mov
xlat
and
sbb
int
test
jbe
mov
adc
mov
call
stos
sub
cli
in
jg
es
(bad)
jo
shl
ins
pop
lea
push
ret
dec
(bad)
fcomp
enter
popa
xor
adc
add
not
cwde
add
dec
(bad)
in
and
fimul
imul
ror
inc
aas
ja
mov
gs
jb
stos
cmp
pop
xchg
mov
mov
pushf
xchg
push
jmp
shr
push
xchg
fwait
push
ss
iret
mov
ins
pop
mov
lods
and
stc
lds
sub
ror
shr
and
dec
stos
test
cmps
pop
nop
push
std
inc
xlat
lds
popf
add
leave
inc
pop
adc
outs
sti
dec
(bad)
sar
sub
adc
inc
add
add
cwde
out
(bad)
out
out
mov
and
dec
test
scas
ja
xor
mov
aad
sbb
pop
fst
fstp
stc
not
call
add
std
in
nop
and
out
inc
or
test
sub
repnz
or
int
xchg
(bad)
aas
jae
out
jp
jp
lahf
out
or
jmp
pop
xchg
and
cmc
les
cdq
fistp
jecxz
rcl
add
xor
push
dec
push
inc
jge
jne
cmps
push
mov
fistp
popa
sbb
mov
sti
outs
fisubr
cmps
pop
add
mov
sbb
bound
mov
pop
xor
and
cmp
ins
outs
xor
mov
mov
dec
mov
aam
mov
xor
lds
pop
jno
sub
mov
or
fsub
push
mov
loope
xchg
mov
rcr
es
movs
das
mov
xchg
and
icebp
or
and
ins
inc
add
bound
mov
cmps
push
rcr
movs
dec
adc
je
sbb
aas
loop
inc
pop
in
data16
(bad)
sahf
mov
xchg
jmp
jne
shr
nop
jbe
push
dec
inc
out
or
int3
retf
out
scas
xlat
or
cmp
sbb
dec
and
xchg
test
aas
cmc
aas
test
xor
rcl
jno
jle
test
jo
adc
repnz
aad
push
adc
popf
jmp
push
push
or
dec
cli
rol
xchg
dec
or
ds
add
arpl
push
adc
xlat
sbb
rcr
pop
enter
push
adc
int3
sbb
shl
xchg
mov
std
adc
lds
cmp
test
mov
loope
push
lds
stos
mov
in
in
fs
mov
push
add
aad
add
push
ins
dec
aad
mov
and
cld
cmp
scas
mov
cmp
push
pcmpeqb
mov
jae
cmps
xchg
adc
push
loop
loope
out
push
xchg
pusha
inc
add
out
xor
aam
push
pop
movs
and
pop
push
pop
pop
ins
stos
fstp
mov
ins
pop
xor
movs
adc
fisttp
mov
push
push
mov
mov
dec
cmps
movs
mov
and
jne
repnz
mov
xor
fdivr
call
loopne
aam
sub
scas
adc
sbb
call
dec
mov
mov
mov
icebp
jmp
ret
or
mov
jbe
int
es
mov
jo
stos
mov
std
xchg
mov
(bad)
(bad)
cdq
push
dec
cmp
shr
cli
sahf
jb
cli
inc
out
call
lods
lea
imul
pop
jecxz
and
pop
pop
and
ror
shl
dec
ds
push
pushf
xchg
mov
xchg
imul
les
mov
ret
cmp
fmul
and
repnz
gs
je
repnz
mov
daa
mov
and
bound
xor
outs
rol
leave
in
xor
mov
jl
xchg
push
pop
jbe
inc
xor
and
cmp
cli
out
stos
jg
mov
pop
xor
jbe
aam
popa
retf
mov
js
inc
jbe
shl
out
sbb
and
add
pop
mov
adc
xchg
or
out
fdiv
scas
mov
test
xlat
push
push
add
das
retf
shr
aaa
cmp
xor
jmp
clc
(bad)
add
js
xchg
cmps
mov
dec
scas
loopne
pop
into
retf
dec
xchg
dec
jmp
adc
mov
nop
sub
push
scas
xchg
mov
and
push
jbe
js
jmp
(bad)
scas
jge
push
xor
ins
or
cli
adc
fisttp
pop
stc
and
ror
sbb
cld
xchg
(bad)
call
sub
dec
mov
cli
cmp
xor
inc
clc
and
sbb
jecxz
xor
xor
jle
xor
into
jnp
loope
or
push
push
fbld
inc
in
(bad)
(bad)
xor
movs
mov
and
call
rcr
mov
rep
cld
arpl
call
sbb
mov
jb
xor
test
sub
dec
ror
int3
sar
es
dec
add
xor
idiv
int3
fnstenv
in
push
repz
mov
jb
loop
mov
inc
call
mov
and
cli
xor
je
cli
call
sub
cmp
lock
or
pop
cdq
call
ins
call
(bad)
inc
pop
adc
aam
sub
dec
cld
mov
in
fcomp
mov
int
leave
leave
sub
dec
jle
sahf
ja
pop
push
in
xchg
sbb
ror
cmps
jo
xor
sar
(bad)
inc
jge
retf
dec
dec
mov
pop
xor
push
pusha
inc
lods
mov
xchg
adc
push
jmp
inc
jae
mov
jecxz
int3
cmp
pop
sbb
mov
int3
out
in
cmp
mov
movs
popf
cmc
das
cmp
retf
jl
cs
xor
(bad)
(bad)
dec
pusha
mov
cwde
push
ror
or
je
mov
outs
mov
mov
movs
mov
dec
adc
inc
sbb
loop
inc
loop
or
imul
in
mov
pusha
inc
and
mul
arpl
out
dec
mov
lods
leave
sbb
cmp
adc
or
pop
cmps
sub
push
ds
outs
int
loope
push
pop
lea
xchg
cmp
iret
sbb
stos
in
outs
xor
dec
mov
test
into
inc
sub
(bad)
xlat
(bad)
mov
(bad)
pmuludq
mov
and
ja
pop
stc
inc
cmp
push
enter
out
xor
jp
ss
jmp
(bad)
mov
repnz
retf
push
sbb
movs
cs
fsubp
sub
ror
cmps
xor
retf
cs
mov
ss
idiv
(bad)
test
ss
lahf
xor
xchg
xor
ja
(bad)
test
ins
lods
mov
stc
jne
inc
fnstenv
movs
rol
mov
loop
in
cli
jl
loopne
add
or
cmp
movs
jae
dec
outs
sahf
lea
xor
(bad)
cmp
idiv
jae
push
push
push
ja
xor
sbb
add
test
xor
xor
add
fsub
xor
lds
mov
out
test
loop
pop
push
mov
cmp
xchg
int3
aad
and
mov
mov
sub
dec
sub
(bad)
xchg
dec
jns
push
sbb
scas
sar
dec
stc
xor
popf
push
cmp
pop
out
sub
sahf
adc
out
arpl
xor
fcomp
pop
push
outs
leave
mov
add
and
cmp
cmp
mov
push
jb
dec
adc
mov
mov
movs
add
(bad)
pop
das
shl
push
arpl
dec
outs
(bad)
loopne
sub
mov
and
mov
ins
mov
pop
jne
lds
int
mov
or
pop
push
and
ss
out
xchg
not
jmp
cmp
cmps
jle
and
pop
cmp
hlt
xchg
(bad)
stc
jb
retf
push
pop
test
sub
adc
outs
dec
leave
dec
add
idiv
xlat
jl
sbb
sti
pop
jecxz
out
cld
cmp
mov
push
pop
mov
xor
mov
daa
mov
lds
out
mov
sub
mul
ds
fdivp
(bad)
mov
or
(bad)
mov
in
inc
mov
xchg
fwait
inc
mov
push
stc
jne
cmc
lea
jb
add
aaa
popa
push
xchg
push
stos
xor
adc
mov
std
mov
sub
push
sbb
fs
adc
jl
cmps
ss
dec
fst
dec
pop
xchg
push
jmp
adc
icebp
jmp
out
cs
fisub
pop
test
pop
jnp
sub
clc
je
jns
xor
xor
in
gs
pop
jo
dec
ror
imul
push
cs
arpl
jb
and
pop
cmc
push
dec
or
mov
xchg
ins
push
imul
add
stos
in
dec
or
pop
jge
xor
out
shr
(bad)
mov
aas
call
stos
ud2
jmp
into
test
imul
sub
inc
rcr
fild
adc
test
into
xor
mov
ins
repnz
cdq
mul
rcr
cmp
iret
fdivr
mov
jecxz
daa
lods
adc
mov
cmc
adc
sub
xlat
(bad)
sbb
push
ja
dec
(bad)
inc
loopne
mov
push
fidivr
and
xor
and
fs
mov
sbb
test
jo
les
mov
cmp
cmps
xchg
xor
xor
jne
jecxz
sbb
jnp
mov
xchg
jo
daa
neg
xchg
in
repz
cdq
pop
mov
outs
js
mov
test
dec
jp
(bad)
sbb
sahf
packuswb
cdq
push
lods
cmps
int
fisubr
pop
shl
int
inc
popa
mov
cmp
pop
mov
jae
dec
aaa
push
or
jmp
mov
push
sub
out
test
stos
ds
mov
dec
adc
aaa
dec
adc
push
mov
push
cmp
jge
jmp
bnd
movs
call
adc
imul
xchg
sbb
fldenv
and
inc
loop
cwde
arpl
popf
xor
and
popf
pop
mov
jb
xor
fstp
inc
xchg
retf
aam
pop
shr
or
adc
ror
cmp
bnd
inc
or
push
adc
sub
jb
es
icebp
inc
test
ds
pop
loope
test
add
mov
in
outs
sub
(bad)
in
aad
pop
aas
dec
aaa
pop
aam
dec
enter
aas
ret
adc
lods
stos
cmp
dec
int
pusha
jg
dec
aaa
dec
fsubr
stos
dec
fwait
dec
push
xlat
jb
adc
pop
aas
adc
xor
arpl
rol
repz
adc
icebp
or
sbb
mov
les
adc
imul
retf
cmp
dec
mov
sub
xor
sti
icebp
mov
test
movs
stos
call
ret
sahf
sub
cmc
adc
call
jnp
pop
daa
imul
xchg
cmps
push
inc
xchg
jg
jmp
ret
inc
sub
mov
inc
mov
xlat
shl
ror
repnz
mov
jge
dec
jle
jmp
dec
cmp
popf
sbb
jbe
lods
mov
ins
push
clc
push
and
mov
in
rcr
retf
loopne
fisub
mov
or
xor
pop
pop
xchg
xor
push
scas
inc
xor
outs
push
mov
or
out
cmp
daa
nop
add
inc
and
aad
ja
int3
mov
inc
jnp
and
xor
lock
stos
cmp
fidivr
(bad)
mov
push
stos
call
data16
(bad)
mov
out
push
sti
sti
sahf
nop
adc
xor
sub
jnp
stc
popa
cmp
jo
push
push
mov
outs
lock
scas
pop
mov
and
mov
das
adc
mov
pusha
and
rol
hlt
cli
ficomp
push
mov
mov
sub
adc
mov
or
mov
cmp
mov
jmp
mov
xchg
xor
xchg
sbb
(bad)
pop
pushf
push
push
repz
mov
je
xchg
xchg
popa
fistp
sbb
(bad)
mov
mov
cdq
cmps
cwde
xor
das
pop
add
rcl
popf
repz
aad
sbb
mov
push
retf
sti
int3
cmc
rcl
lods
fadd
je
pop
and
mov
out
add
neg
fdiv
jno
jnp
push
mov
movs
ins
jae
pop
xchg
nop
pop
test
int
lock
mov
add
and
addr16
cli
sbb
push
es
push
repz
dec
movs
jno
xchg
shr
dec
mov
add
mov
cmp
push
repz
jmp
data16
fs
lahf
movs
sub
add
mov
mov
xor
mov
jmp
aaa
clc
mov
fisttp
cmc
push
mov
fisttp
jns
fldenv
mov
push
mov
stos
push
repz
cli
add
gs
pop
jmp
inc
jae
add
dec
cwde
xchg
shl
sub
pop
sbb
enter
mov
mov
sbb
push
xchg
xchg
test
stos
sbb
push
lods
mov
retf
out
sub
cmc
jbe
(bad)
sbb
pop
jl
and
shl
inc
xchg
jne
xchg
and
xor
fimul
xlat
pop
clc
or
fst
lock
mov
adc
sbb
mov
mov
jmp
pop
icebp
movzx
jmp
or
mov
stos
pop
arpl
mov
inc
add
mov
push
fwait
ins
cmp
push
push
jle
and
push
mov
pushf
jmp
inc
sbb
mov
dec
or
push
dec
sbb
pushf
or
jno
not
mov
mov
jg
cmp
mov
cmc
inc
push
mov
cld
shl
mov
arpl
or
adc
cmps
xchg
xor
xor
xor
rol
lahf
das
pusha
jmp
xchg
mov
mov
jle
scas
mov
inc
aaa
or
fist
cmp
fcomi
mov
mov
retf
push
add
cdq
mov
shl
xchg
or
jne
add
(bad)
or
xchg
jbe
dec
sbb
pop
cmp
jne
mov
cld
stc
imul
cmc
push
ret
in
xor
scas
or
in
jo
ins
push
mov
sbb
mov
xchg
out
xchg
dec
xor
dec
imul
scas
mov
and
inc
push
jbe
xchg
xor
dec
(bad)
fsubr
xchg
jg
test
xchg
hlt
pop
xor
test
xchg
dec
xlat
in
push
test
push
push
nop
sbb
add
(bad)
xchg
inc
lds
mov
xor
push
cli
cwde
and
je
add
inc
mov
push
sbb
xor
mov
movs
mov
and
xor
and
cli
mov
jb
jo
mov
mov
inc
xor
xor
xchg
mov
das
xchg
jnp
lahf
add
imul
test
sbb
enter
cld
xor
data16
movs
jns
fwait
test
xchg
inc
mov
popf
jl
retf
jae
(bad)
arpl
in
test
push
daa
jns
and
je
fistp
mov
mov
clc
sub
adc
(bad)
jne
movs
retf
fldenv
jo
bound
stc
out
(bad)
outs
jg
or
mov
jmp
sbb
icebp
stos
ffree
mov
xchg
loope
(bad)
pushf
sub
adc
push
outs
aaa
popa
push
push
iret
cs
rcl
mov
aaa
(bad)
sbb
mov
cmp
xchg
push
xchg
fs
cmps
inc
sbb
inc
jle
ret
shl
dec
cs
lods
xchg
clc
add
mov
imul
std
test
pop
ror
fcmovne
mov
ins
adc
sbb
xor
fcom
das
in
adc
jo
dec
mov
bound
mov
ds
dec
cmp
xor
sub
and
cmps
sbb
cmp
mov
inc
icebp
pop
mov
rcr
and
xchg
mov
fwait
pop
test
and
lahf
push
add
test
cmp
jmp
sub
push
sub
push
call
sub
push
les
dec
daa
arpl
mov
pushf
fdiv
loopne
xchg
cmp
gs
sub
mov
and
adc
mov
stos
es
cmp
(bad)
enter
mov
xchg
xor
jno
lods
pop
or
mov
jne
jo
(bad)
xlat
and
pusha
sub
cs
add
(bad)
dec
sbb
(bad)
loope
xchg
ds
shl
xchg
jmp
imul
clc
fild
jecxz
cmps
scas
dec
outs
add
adc
stc
fdiv
(bad)
ins
cwde
sub
ss
loope
jno
inc
ret
les
cmp
pop
iret
jmp
das
aad
out
ins
adc
leave
xor
and
bound
xor
sub
ror
sub
and
pop
cmp
sbb
push
int3
mov
hlt
xchg
mov
xchg
loop
fadd
push
fiadd
jp
cwde
inc
or
jg
jmp
or
sbb
add
fsub
pushf
mov
xchg
retf
xchg
int3
outs
sub
dec
jecxz
fstp
lods
push
dec
push
stc
cmp
cs
pop
mov
adc
loopne
mov
pushf
push
cmp
int
ins
or
mov
loop
lods
(bad)
or
jns
mov
in
dec
dec
pop
inc
inc
popf
mov
push
sbb
pop
mov
or
mov
ja
xlat
test
div
xchg
xchg
gs
xchg
jp
addr16
or
or
jmp
addr16
pop
xchg
sub
dec
push
or
xchg
repnz
or
addr16
popf
sbb
adc
jbe
mov
popa
retf
xchg
mov
push
or
mov
popf
outs
in
xor
retf
sub
sbb
sahf
inc
and
pop
push
sub
cwde
pop
jns
mov
sbb
fisub
outs
dec
lahf
xor
mov
out
(bad)
mov
and
repnz
push
repnz
mov
sbb
jne
jns
push
jb
adc
xor
cs
aas
imul
xor
scas
or
or
inc
fimul
lea
retf
clc
sti
sbb
mov
adc
(bad)
icebp
stc
lods
mov
data16
pop
push
aas
jle
ficomp
shr
xchg
xor
sub
and
sub
xor
pop
inc
and
jl
push
stos
lods
rol
dec
enter
inc
push
dec
shr
push
jo
xchg
jg
pop
push
test
fiadd
je
xchg
inc
cmp
dec
push
adc
int
outs
push
push
test
push
in
icebp
in
mov
test
pop
into
inc
mov
sbb
pop
pop
push
int
fwait
pop
pop
cmp
fwait
clc
mov
push
sbb
out
aas
cmp
aas
stos
stos
cmp
mov
lahf
cmps
das
adc
inc
jmp
sti
cmp
push
sti
retf
lods
sbb
scas
cmps
add
js
add
xor
pop
and
lods
scas
jnp
dec
pop
idiv
(bad)
sbb
gs
aas
and
pusha
xlat
out
push
fwait
cmps
add
inc
paddusb
jno
int
mov
inc
mov
test
in
jge
jp
pusha
and
push
rcr
cdq
sub
jo
iret
fild
dec
lods
stos
mov
and
jl
cmps
adc
lea
add
lahf
mov
in
inc
xchg
ins
les
clc
or
add
push
(bad)
or
cmps
pop
lods
mov
int3
xchg
stc
jg
in
dec
sar
add
imul
cmp
mov
pusha
retf
iret
cmc
test
jcxz
imul
fs
dec
bound
out
dec
mov
xor
(bad)
movs
leave
pop
(bad)
sbb
jmp
pushf
sar
ins
int3
mov
lds
test
stos
jo
add
mov
inc
sbb
add
xor
xlat
inc
leave
adc
push
dec
mov
int
and
xchg
fidivr
mov
(bad)
xor
icebp
imul
ret
vpackuswb
rol
cmp
push
or
add
imul
mov
pop
pop
fild
stos
and
jg
and
adc
ret
or
addr16
fstp
dec
push
(bad)
mov
inc
inc
pop
jmp
cmps
sbb
fisttp
adc
sub
inc
jns
xchg
ja
push
mov
cmps
jbe
mov
pop
pushf
loop
xor
cli
into
ror
pushf
dec
icebp
loope
loopne
or
mov
sub
sbb
cmps
repnz
mov
icebp
inc
loopne
inc
sbb
xchg
rcl
sbb
mov
mov
shr
push
mov
mov
sbb
xor
xor
pop
mov
sbb
in
jbe
and
xchg
rol
xchg
sbb
pop
inc
in
xor
jbe
movs
jge
mov
or
cli
mov
and
sub
movs
addr16
aam
aam
cmp
test
popa
sbb
mov
cmp
popf
out
pop
cwde
pop
addr16
in
hlt
psrlq
ins
mov
mov
or
call
pop
inc
pushf
xor
in
imul
inc
cmps
or
mov
mov
mov
xchg
or
sub
xchg
aam
aam
pop
arpl
dec
ds
fs
sub
dec
in
xlat
sbb
xchg
(bad)
dec
adc
pop
sub
pop
scas
ret
iret
mov
adc
and
aas
push
jnp
dec
add
pop
enter
stos
stos
lock
and
(bad)
rcr
imul
mov
cmp
push
jbe
pop
sub
mov
and
jecxz
into
jns
or
ja
cmp
add
mov
cli
sub
and
push
xchg
mov
push
mov
jl
jne
inc
jno
aaa
addr16
fidiv
pop
pop
add
bound
push
iret
popa
mov
push
sbb
adc
sbb
mov
mov
cwde
not
in
mov
add
stos
xchg
xchg
dec
fwait
pop
push
mov
add
cmp
sbb
je
adc
push
mov
in
adc
fidivr
jns
jecxz
jmp
mov
repz
and
std
push
pop
mov
push
xlat
cmps
add
mov
std
sbb
dec
hlt
rcr
cmp
cmps
rcr
std
add
push
loope
std
outs
mov
or
xor
ret
clc
and
xchg
in
lods
sub
inc
mov
lods
or
imul
ret
cmp
fistp
scas
xchg
and
scas
(bad)
and
inc
cmp
sbb
scas
sbb
mov
rcr
out
pop
mov
into
cmp
mov
jg
mov
into
sub
out
and
test
fisub
xor
cmp
jo
data16
outs
lock
popa
cs
bound
jmp
int
push
pop
pop
out
mov
cmovs
and
inc
xlat
(bad)
rcr
adc
fnsave
sbb
sub
(bad)
adc
ja
mov
push
xchg
test
in
xor
retf
add
or
push
sub
push
cmps
and
mov
ret
fcomp
jno
xor
movs
sar
sub
mov
repz
cmp
icebp
dec
adc
gs
mov
xchg
out
inc
or
xchg
pop
mov
pushf
repnz
or
mov
ret
mov
jp
or
pop
inc
mov
aas
push
mov
daa
xor
mov
sbb
clc
push
cdq
stc
mov
out
cmps
jo
int3
push
push
xchg
xchg
jge
inc
adc
retf
xchg
out
mov
ret
shr
adc
push
and
fwait
pop
popa
scas
cmp
pop
push
add
dec
sbb
or
xchg
sbb
(bad)
mov
js
jb
dec
retf
cmp
add
sbb
pop
mov
add
cmps
test
call
inc
sub
inc
loop
dec
ins
and
retf
jo
cmp
adc
sub
aaa
scas
inc
inc
push
sub
lahf
and
loope
jmp
mov
call
dec
jo
ins
test
mov
lds
jmp
sti
mov
das
shl
call
shl
jmp
pop
pusha
cmc
add
or
xor
xchg
call
push
icebp
fwait
cmp
fadd
es
jo
jmp
jmp
ins
cmp
jo
add
cld
mov
xchg
loope
outs
mov
fnstenv
iret
pop
xchg
and
and
xor
aas
dec
push
(bad)
mov
push
and
push
rol
xchg
push
pop
nop
mov
adc
jb
mov
fwait
fwait
outs
jae
push
ror
aas
dec
jge
pop
mov
stos
jle
cmps
mov
mov
jmp
arpl
movs
dec
cli
aam
dec
daa
push
inc
iret
mov
cld
cdq
jmp
sar
push
stos
fcmove
outs
push
iret
or
pop
gs
(bad)
or
pop
cwde
fxtract
psubq
dec
mov
cmp
or
sub
retf
dec
lahf
js
shl
sub
cmc
sub
adc
jae
mov
ins
jo
xchg
mov
push
addr16
out
adc
stc
ret
adc
mov
xor
and
push
cld
inc
sbb
xor
cmp
pop
(bad)
adc
bound
call
outs
das
shr
dec
jge
add
sub
xchg
add
mov
(bad)
mov
outs
mulps
lahf
push
imul
ficom
popa
popa
int
sbb
pop
cld
fwait
rol
test
or
ror
pop
fucomp
adc
pop
cdq
jecxz
test
pusha
or
or
fiadd
or
(bad)
mov
cmps
js
pusha
xor
pop
cmp
lea
imul
outs
push
push
mov
add
daa
cmps
mov
cmp
mov
mov
dec
and
dec
mov
lods
(bad)
gs
rol
sub
push
sbb
pop
sti
sti
jl
pop
scas
shl
lds
sbb
mov
es
push
xlat
and
mov
jp
mov
mov
sbb
out
fwait
mov
es
mov
and
shl
aam
dec
loope
sbb
add
aam
div
stc
leave
jno
movs
in
jl
stc
fcomp
je
adc
push
inc
int3
mov
xor
ret
stos
sub
xchg
push
movs
pop
and
cld
xor
iret
rcr
fwait
cmp
push
sub
sbb
imul
ja
int
adc
cli
imul
adc
movs
cld
(bad)
lock
mov
mov
mov
inc
cld
(bad)
xchg
push
pop
in
repz
fldenv
ins
dec
pushf
imul
ret
pop
aas
loopne
mov
aam
jmp
fs
mov
mov
imul
pusha
sbb
cld
pop
jl
test
mov
enter
cld
shr
add
in
imul
(bad)
add
pop
inc
fcomp
jbe
ins
xor
jne
in
mov
(bad)
pop
inc
or
mov
call
(bad)
fist
bound
push
out
sbb
xor
mov
cmp
or
and
lea
scas
fcomi
xchg
ds
lds
repnz
das
push
adc
nop
lods
adc
out
push
mov
or
inc
mov
rol
cmp
push
(bad)
enter
loop
and
(bad)
jno
xor
fisub
ja
mov
push
mov
repz
imul
dec
push
mov
dec
lods
int
xlat
loope
lea
add
add
dec
in
arpl
repnz
or
or
pop
add
cmp
popf
xchg
ja
repz
cmps
sub
fstp
sub
(bad)
into
sbb
jmp
dec
mov
sbb
cmc
rol
lock
rol
pusha
mov
jae
and
jp
push
adc
scas
push
popa
int
mov
cmp
and
popa
jae
(bad)
cmps
and
inc
jp
popa
push
mov
push
ja
push
mov
or
sbb
push
nop
sti
sub
in
sbb
jl
fs
hlt
jp
add
sub
arpl
mov
repz
test
data16
xor
jg
pop
xchg
pop
movs
jbe
push
and
inc
cli
xchg
das
jno
push
mov
mov
ret
adc
addr16
mov
cs
mov
cmp
mov
push
push
push
cmp
push
(bad)
ja
adc
out
mov
sub
xchg
enter
(bad)
jae
fwait
adc
mov
inc
mov
and
add
mov
jle
sbb
inc
sbb
sbb
xchg
push
lea
dec
inc
sar
add
inc
sbb
aam
clc
and
xchg
jns
retf
sub
sub
test
sbb
xchg
push
mov
cwde
pop
inc
add
pop
pop
push
cmp
inc
push
mov
shl
in
or
adc
jae
sub
out
jmp
mov
das
push
shr
mov
push
push
or
add
jl
jle
mov
fisubr
sub
es
xchg
fiadd
jle
xor
movs
mov
dec
push
lods
cmp
jno
(bad)
cmp
gs
adc
cmp
sub
mov
cmp
sbb
es
data16
push
mov
jg
das
test
movs
push
push
adc
outs
mov
xor
mov
cmp
aaa
sub
jnp
and
test
cli
sahf
cmp
outs
mov
data16
or
ficom
jg
cwde
dec
mov
xor
cli
int
sub
jns
push
enter
mov
test
nop
jne
xor
cmp
add
push
cmp
retf
mov
push
pop
jecxz
sbb
pop
jns
and
jp
or
retf
jl
push
push
lock
xchg
aam
mov
test
ror
jb
icebp
xor
das
cs
cmp
mov
mov
fdiv
(bad)
enter
mov
push
rcr
sbb
addr16
adc
jp
mov
pop
adc
ins
popf
test
adc
cmps
jmp
jg
cmp
enter
gs
dec
xchg
test
xor
test
in
mov
dec
pop
addr16
push
or
xor
jae
(bad)
out
mov
inc
sub
push
cmp
adc
mov
jecxz
sbb
xor
push
neg
mov
mov
mov
cmp
pop
sbb
xor
loop
hlt
ins
scas
dec
mov
sub
jp
fsubr
nop
nop
(bad)
pop
stos
sub
retf
(bad)
fnsave
inc
add
jb
mov
adc
lods
mov
cmp
xor
jne
dec
rcl
mov
sbb
stos
bound
shl
inc
sbb
mov
jecxz
cmp
mov
and
out
stos
mov
mov
and
in
or
loopne
lock
pop
scas
out
retf
inc
pop
jg
cmc
paddw
jno
(bad)
aaa
inc
and
jne
mov
jge
jl
pop
mov
mov
dec
xor
loope
xchg
push
sbb
jb
and
shl
jns
shl
pusha
xor
retf
xchg
push
xor
sahf
test
cmp
cmp
leave
pop
gs
push
xchg
rcr
(bad)
stos
fnstsw
repnz
mov
mov
lea
popa
js
loope
stc
xchg
adc
ja
repnz
leave
xor
pop
lods
or
dec
jle
shr
sbb
cdq
add
push
mov
pop
push
ror
es
jmp
aam
mov
add
dec
or
xor
je
pop
sti
das
ins
push
iret
push
jns
lock
sub
jnp
inc
test
xchg
sbb
adc
dec
arpl
and
inc
nop
and
loopne
jne
xchg
cdq
mov
retf
pop
pop
stos
fdiv
in
stc
out
fsub
jecxz
xchg
(bad)
outs
fmul
fild
and
mov
stc
and
add
test
jns
and
int
fwait
icebp
mov
add
mov
sub
call
cmp
loopne
lods
in
sub
lods
add
and
inc
add
fs
xchg
dec
jns
cmp
ja
sub
jns
arpl
pop
imul
icebp
(bad)
pusha
xlat
rcl
cmp
inc
mov
jge
push
mov
dec
nop
arpl
mov
std
in
data16
sti
in
rcr
or
cmp
mov
les
int3
xchg
retf
dec
xor
and
outs
ret
or
or
dec
xor
pop
leave
and
vpextrw
lds
cmp
xchg
sub
pop
push
inc
xchg
mov
xor
ret
xor
mov
cdq
je
xchg
inc
mov
mov
test
ja
fnstsw
inc
addr16
into
retf
out
mov
sbb
fimul
jmp
and
push
and
sub
shr
ins
ins
ret
retf
or
pop
cmp
jmp
(bad)
cmp
pop
inc
ja
push
out
imul
add
mov
push
sbb
pop
mov
les
test
or
adc
movs
sbb
inc
and
xchg
sub
cwde
pop
fdiv
and
pop
nop
cmp
jnp
xor
outs
aas
pushw
in
(bad)
movs
addr16
mov
cmp
int
jp
push
shl
xor
lods
test
scas
mov
push
add
fstp
mov
cli
cli
js
jge
add
lods
add
pop
mov
clc
mov
fild
cmps
inc
sahf
mov
js
loop
cmp
xchg
leave
fucomi
scas
add
fwait
mov
jg
fucomi
xchg
mov
int
xchg
xor
jne
cdq
push
stos
dec
push
ror
call
mov
in
mov
shl
inc
sub
out
dec
fsub
imul
jmp
adc
push
jl
ds
or
repz
inc
mov
fadd
xchg
lahf
out
or
fwait
mov
jmp
arpl
mov
arpl
test
ins
jmp
(bad)
inc
sbb
mov
pop
(bad)
push
pop
push
pop
or
pop
icebp
retf
or
retf
sbb
mov
push
aaa
mov
loop
cmova
sub
pop
ficomp
add
cmp
cmps
leave
loop
mov
das
gs
gs
cmp
xchg
cmp
nop
jmp
(bad)
push
xchg
adc
and
call
add
cmps
jns
mov
jl
sub
dec
leave
pop
or
cdq
cmp
div
jmp
jge
jge
cmps
mov
or
sub
dec
mov
mov
xchg
jne
jecxz
stc
mov
mov
sub
xor
retf
daa
xchg
leave
and
mov
test
jl
fst
cmp
movs
xor
push
mov
mov
loopne
in
sub
das
mov
retf
in
ds
jno
jmp
jae
mov
call
mov
mov
je
dec
js
jnp
cs
xor
repnz
dec
fs
(bad)
cmp
imul
xchg
cmps
xchg
cmp
mov
cmp
mov
mov
shl
shr
jge
movs
or
push
mov
rcr
test
bnd
adc
in
ror
into
jne
jae
sbb
mov
sbb
adc
push
sbb
sbb
sbb
cwde
fwait
xor
mov
and
jle
add
xchg
xchg
adc
aas
xchg
(bad)
mov
sbb
mov
sbb
popf
rol
xchg
jle
ja
dec
mov
sbb
call
mov
push
xor
shr
xchg
jae
rsqrtps
test
jbe
mov
sub
push
gs
cmp
test
jo
gs
dec
pop
adc
shl
iret
and
cs
popa
cld
add
div
or
ret
mov
stc
jne
push
and
push
jmp
shl
stos
cs
stos
das
daa
push
cmps
or
pop
cmp
das
jmp
and
sbb
cmp
xchg
adc
test
mov
pop
ret
arpl
dec
imul
adc
push
mov
lahf
mov
mov
adc
add
imul
mov
out
xor
retf
sub
popa
sar
scas
aaa
movs
loop
dec
(bad)
jle
or
mov
xor
add
sahf
dec
es
jmp
push
aas
xor
or
mov
fmul
(bad)
scas
inc
leave
stc
mov
push
sub
pop
fimul
sbb
sahf
xchg
jp
stc
ficomp
mov
cwde
(bad)
jg
mov
inc
out
loopne
ror
pop
aad
jno
lea
and
call
mov
pop
nop
daa
imul
(bad)
xor
sbb
jp
sbb
lahf
ror
ja
cli
add
movaps
repz
loope
aad
mov
outs
les
jg
mov
xor
test
mov
pop
xchg
cmp
fwait
repnz
inc
mov
into
das
popf
rol
out
clc
inc
repnz
mul
xor
jle
add
test
push
js
lds
sub
jp
lock
(bad)
sbb
imul
es
stos
jmp
sub
lds
sbb
aas
sub
test
add
icebp
mov
into
psllq
xchg
cdq
jmp
jb
mov
ins
jl
mov
dec
(bad)
adc
fsub
leave
cmp
imul
xchg
mov
and
add
mov
into
push
ror
jnp
xchg
out
mov
aad
or
and
icebp
mov
sub
dec
dec
fimul
aas
inc
cmp
ret
jbe
jo
dec
into
jb
push
fs
sub
cmc
dec
sub
xor
test
(bad)
(bad)
xor
mov
dec
(bad)
pop
adc
adc
push
icebp
mov
nop
sbb
push
push
std
mov
je
add
mov
mov
inc
imul
por
aam
add
inc
outs
jae
sar
or
lods
pop
test
pop
fdivr
pop
dec
mov
adc
gs
jp
sub
retf
mov
fs
inc
cmp
test
test
dec
leave
int
loopne
cdq
fcom
cmp
push
(bad)
adc
dec
sub
jl
ss
inc
das
ret
mov
push
stos
in
xor
scas
and
and
enter
sbb
pop
in
das
ret
(bad)
fnsave
xor
pop
cmp
jnp
lods
adc
xchg
pop
lods
pop
xchg
xchg
mov
cmp
dec
das
pop
hlt
scas
jmp
loopne
dec
and
popf
sub
sub
mov
dec
jnp
pop
vmwrite
pop
fs
push
sub
mov
(bad)
int
cmp
mov
scas
dec
cmp
aam
test
fstp
dec
hlt
pop
pusha
iret
loopne
and
jmp
xchg
push
mov
cdq
in
sub
inc
push
repz
dec
xchg
xor
clc
add
test
mov
scas
sbb
mul
xchg
gs
mov
idiv
call
das
js
mov
push
retf
or
add
or
mov
movs
jecxz
jnp
jbe
rcr
movs
push
jo
push
inc
sahf
fucom
or
pop
cmc
pop
(bad)
ds
jge
retf
adc
stos
inc
and
out
mov
ins
dec
stc
xchg
push
and
adc
shl
push
sbb
lahf
push
and
(bad)
es
or
and
xor
jmp
push
jns
push
xchg
sub
lods
aad
repnz
data16
out
add
add
inc
call
rcl
not
xor
xchg
xchg
or
test
test
sub
mov
and
test
mov
push
or
dec
mov
test
enter
sub
rol
call
jne
adc
inc
test
dec
loope
sub
inc
pop
cmps
cmp
pusha
mov
and
pop
adc
jle
nop
jns
and
popa
mov
inc
(bad)
in
cmp
clc
dec
(bad)
test
cmp
dec
pop
sub
pop
and
xlat
mov
push
mov
rcr
mov
sti
shr
movs
jge
imul
loopne
or
dec
sahf
cs
adc
pop
dec
cld
(bad)
pusha
adc
xlat
cdq
(bad)
call
(bad)
jecxz
push
test
repnz
cmp
imul
sbb
pop
pop
cli
es
fisub
xchg
pop
stos
imul
not
add
aaa
fstp
jno
out
outs
jo
not
out
adc
out
mov
pop
xor
repnz
xchg
(bad)
sbb
cmp
adc
std
xor
add
pop
fld
imul
ret
aad
push
ss
inc
or
sar
shl
add
dec
outs
push
mov
int3
dec
ins
es
xlat
add
int
dec
dec
or
(bad)
xlat
inc
jno
sub
outs
ret
pusha
add
call
lods
sub
bound
mov
ins
sbb
inc
push
repz
pop
movs
imul
(bad)
movs
test
aaa
arpl
(bad)
sar
cmc
in
add
cwde
ret
lds
bswap
xchg
push
out
or
jno
add
inc
ffree
add
jb
cmp
mov
adc
add
loope
lds
adc
inc
aaa
inc
and
mov
adc
icebp
and
mov
and
jl
jbe
aad
fimul
push
inc
jp
and
jo
push
push
mov
movs
xlat
push
mov
repnz
je
xchg
iret
push
inc
jmp
push
popf
add
fmulp
daa
fdivr
or
pop
fwait
lds
mov
push
mov
xor
sbb
cmp
ret
sbb
pop
(bad)
fdiv
fwait
mov
cmp
and
(bad)
test
sub
aas
out
in
xchg
mov
jmp
mov
and
cld
cmps
push
mov
outs
pop
aas
inc
(bad)
icebp
push
ins
xor
lods
push
push
out
rcl
enter
aas
xchg
adc
pop
add
js
stc
cmp
stos
shl
jmp
fiadd
je
pop
lods
add
inc
sbb
inc
aam
and
ror
push
sbb
iret
xor
jb
fstp
adc
adc
adc
mov
test
and
push
xor
add
ds
jg
into
dec
cmc
or
jnp
add
arpl
clc
mov
aas
stos
int
not
test
and
cld
clc
mov
repz
push
mov
pop
sar
jbe
cmp
loop
jae
or
mov
jecxz
cmp
xchg
sub
jno
jbe
ins
mov
out
mov
clc
in
fwait
popf
dec
push
and
xor
(bad)
cmp
in
xchg
mov
dec
ins
push
add
push
jo
fimul
push
nop
pop
ret
js
ss
call
retf
lahf
pop
sbb
adc
pop
dec
adc
in
and
or
mov
jle
std
ss
mov
int3
or
and
loope
nop
xchg
push
or
push
fwait
mov
dec
stos
jg
push
je
mov
fisttp
adc
cmp
dec
nop
out
xor
mov
mov
xor
cs
push
les
mov
(bad)
(bad)
and
sbb
cdq
jne
fisttp
es
add
jne
mov
fisttp
out
test
xchg
push
pop
cwde
test
mov
xor
pop
lock
fistp
jp
dec
and
icebp
mov
xchg
retf
cmp
mov
xor
sbb
push
sbb
inc
mov
sub
pop
mov
enter
mov
add
inc
ins
scas
ret
pop
ds
mov
shl
out
xchg
fisub
lods
loop
imul
and
mov
rol
cmc
jb
push
add
(bad)
mov
jg
gs
hlt
mov
movs
pop
add
(bad)
inc
and
inc
pop
xor
mov
xor
dec
mov
cmps
retf
push
mov
jnp
out
jnp
add
cwde
(bad)
jle
sub
pop
xor
imul
in
xor
test
push
(bad)
por
bound
push
pushf
xchg
push
xor
or
sbb
aaa
push
mov
and
or
jp
fbld
scas
push
and
or
fcmovnb
and
xchg
cdq
cmp
stos
dec
aaa
scas
adc
dec
popf
mov
test
popf
xchg
xor
sub
hlt
(bad)
shl
add
lea
pop
jns
inc
gs
mov
(bad)
call
loopne
pop
and
pop
ret
or
mov
mov
imul
push
sub
lods
imul
sub
fs
mov
imul
fs
xor
shr
sbb
xchg
and
dec
addr16
xchg
les
or
ds
mov
stos
xor
jmp
push
ss
adc
rcr
je
xchg
data16
pop
(bad)
jle
sbb
dec
retf
movs
inc
pop
jb
mov
stc
aaa
fisttp
mov
retf
sbb
mov
dec
jns
in
(bad)
xchg
call
jbe
and
inc
(bad)
mov
mov
cmp
add
popf
hlt
or
push
and
xchg
push
jae
ficomp
stos
imul
outs
imul
or
fld
and
sbb
lahf
xchg
xor
int
fdiv
mov
(bad)
cmp
adc
sub
cs
stos
and
hlt
sbb
pop
lds
xchg
sbb
push
leave
mov
(bad)
loop
jne
cs
jo
mov
xchg
in
inc
loope
in
push
in
(bad)
dec
fcom
adc
adc
push
inc
(bad)
les
data16
(bad)
cs
cli
imul
shl
push
fcom
pop
nop
jno
sbb
(bad)
std
fadd
lods
mov
cdq
dec
pop
mov
push
leave
std
jo
sbb
or
cmp
xor
adc
sbb
lds
fdivr
dec
adc
out
and
fmul
dec
pop
dec
pop
xor
inc
dec
test
scas
or
adc
mov
mov
iret
jno
mov
adc
mov
stos
xlat
sub
loope
loope
stos
cmps
cs
adc
add
(bad)
(bad)
pop
adc
jb
mov
xlat
fadd
push
in
test
lea
mov
ret
enter
add
cmps
out
je
add
mov
arpl
jg
fisubr
aas
mov
fidivr
rcr
xchg
dec
and
into
in
push
mov
sbb
xchg
call
jmp
or
xlat
sar
cdq
ret
xor
or
mov
sub
adc
xor
cdq
repnz
outs
ins
cld
xchg
and
(bad)
iret
es
pop
sbb
mov
sub
xchg
xchg
adc
push
xlat
xor
dec
add
mov
adc
outs
cmp
into
pop
fs
mov
push
pushf
pop
push
arpl
jg
cld
jmp
pusha
xchg
mov
mov
ret
aas
mov
mov
push
test
mov
sub
adc
es
mov
seto
movs
in
addr16
jmp
adc
jb
(bad)
jbe
cwde
jo
shl
addr16
sar
cmp
outs
rcl
adc
adc
mov
rcl
pop
in
shl
or
int
cmps
xchg
and
or
and
adc
ins
ret
ss
xor
sub
repz
mov
cmc
cmps
mov
nop
cmp
xor
mov
and
xchg
mov
(bad)
cmps
out
mov
aaa
cs
mov
sbb
sub
mov
push
inc
mov
sub
lds
mov
dec
out
adc
es
jmp
es
mov
in
cli
add
retf
mov
jg
mov
cmp
xchg
fisttp
jmp
pusha
pop
pop
nop
push
and
retf
call
daa
sar
push
jge
mov
cld
cmp
pop
pusha
mov
cdq
pop
sbb
or
inc
ss
xchg
sbb
cmps
js
jne
sub
push
or
jecxz
sub
imul
add
xchg
fidiv
fiadd
das
add
cli
mov
out
sahf
fst
inc
sub
fmul
pop
jmp
mov
or
inc
ret
mov
fcom
ret
pusha
fiadd
pop
jno
scas
sub
call
add
fmul
mov
pop
adc
mov
sbb
imul
test
je
push
push
pop
jbe
mov
xchg
mov
pop
and
mov
repnz
mov
xor
sbb
loop
adc
pusha
aam
pop
fld
je
dec
cmp
(bad)
ror
test
mov
jbe
sub
fdivr
movs
out
imul
popf
xchg
(bad)
in
pop
mov
outs
sub
xchg
jl
pop
add
sub
mov
and
cdq
xchg
mov
jno
jnp
push
ret
fmul
mov
or
movs
adc
mov
fcmovbe
outs
aad
outs
je
shl
xor
test
std
mov
leave
pop
or
sbb
scas
ret
push
enter
cmc
ror
shl
and
mov
xchg
fisttp
pop
pop
arpl
xor
ret
imul
xchg
mov
jne
inc
cmp
xchg
jl
pop
fnstenv
pop
das
jle
ja
iret
or
xor
xchg
add
xchg
fidivr
cdq
ret
mov
in
jo
(bad)
aas
sbb
inc
inc
test
sub
cdq
inc
stc
call
inc
stos
into
cld
cmp
or
ret
push
dec
out
test
fwait
mov
cmp
push
mov
icebp
outs
je
rol
mov
xor
dec
add
or
jns
adc
adc
test
popf
std
jmp
shl
lock
ins
dec
in
je
aad
pop
std
test
mov
pushf
rcl
pop
loopne
or
dec
stc
adc
fstp
sub
mov
fwait
enter
jmp
adc
test
push
inc
mov
xchg
outs
test
cmp
push
mov
js
jmp
and
ins
dec
lds
stc
jp
fdiv
pop
iret
push
pop
and
shl
rcl
cmp
inc
ficom
xchg
xchg
adc
out
jmp
mov
out
pop
adc
adc
sub
pop
fld
jnp
jmp
jnp
in
shr
and
xchg
sub
ja
mov
mov
mov
sbb
inc
in
in
pop
dec
jle
loope
or
mov
add
pop
nop
mov
mov
aaa
and
xor
cs
inc
jno
add
rcl
repnz
and
and
adc
mov
jecxz
push
adc
pop
dec
pushf
mov
inc
ret
test
js
and
out
cli
test
dec
or
dec
data16
jmp
jnp
mov
rcl
outs
push
(bad)
adc
push
adc
mov
xor
out
sbb
dec
ror
in
mov
das
sub
sub
stc
cdq
fdivr
out
lahf
xchg
fbld
sub
je
es
repz
outs
inc
sbb
test
push
adc
(bad)
mov
push
xchg
sti
dec
stc
and
ins
out
iret
mov
inc
xor
sti
(bad)
cmc
xchg
aad
mov
inc
in
fcmovne
scas
gs
je
out
iret
int
cmp
mov
push
xor
push
loopne
or
mov
jg
cmc
or
sar
addr16
xchg
bound
mov
sub
pop
adc
add
push
imul
jb
out
fild
jp
(bad)
fdivr
in
mov
mov
imul
ja
test
mov
call
mov
ss
inc
enter
add
pop
ins
loope
push
sub
pop
pop
enter
ds
inc
jl
or
mov
lds
(bad)
aam
cs
xchg
repnz
(bad)
fldenv
aam
(bad)
shl
mov
rcr
cs
outs
xor
sub
popf
add
mov
rcl
movs
leave
fld
sbb
sbb
push
jns
cmps
mov
repz
ror
test
and
jbe
clc
sbb
sahf
and
jne
mov
cmp
or
xchg
aaa
int
jg
imul
pop
fsub
es
push
hlt
push
jge
jns
ins
movs
out
adc
shr
inc
fbstp
sbb
(bad)
sti
mov
imul
lods
push
cmp
lock
add
jp
push
mov
imul
inc
push
outs
xor
call
or
mov
xlat
call
fcom
sbb
out
jmp
cmc
fild
or
(bad)
fcomip
dec
mov
sbb
cwde
dec
jg
push
and
lods
pop
pop
dec
push
push
mov
jmp
cli
inc
lods
pop
addr16
xor
sahf
dec
push
cmps
mov
(bad)
or
mov
fcomp
pop
ds
fmul
sub
jno
sub
pop
mov
ds
and
xor
dec
xlat
ds
mov
xor
(bad)
inc
into
rcl
and
popa
dec
(bad)
mov
mov
sbb
add
mov
int3
sbb
outs
nop
int3
int
out
inc
or
xor
push
mov
xchg
ficomp
push
push
cmp
inc
ret
push
(bad)
xchg
(bad)
call
fcomp
inc
xchg
das
fnstcw
in
lock
mov
int3
push
mov
pop
cmps
add
in
jae
repnz
jae
fwait
jge
scas
pop
sub
cmp
mov
sbb
xchg
pop
adc
in
cli
stos
inc
add
xchg
mov
mov
les
icebp
xchg
in
xor
hlt
sub
mov
mov
mov
mov
ror
xor
cmc
sbb
jbe
ins
repnz
aas
rcr
mov
movs
mov
imul
das
mov
mov
aaa
in
dec
jnp
push
mov
outs
clc
call
push
push
mov
retf
mov
mov
inc
push
daa
cmps
inc
xor
add
xchg
pop
fdivr
sub
cmp
sti
imul
mov
ja
sbb
lds
ds
inc
xchg
je
sahf
adc
push
mov
push
pop
popf
test
inc
mov
sub
clc
rcl
add
cmp
dec
push
bound
cmc
(bad)
iret
mov
popa
lods
imul
test
data16
jbe
xchg
push
and
add
sbb
cmc
sbb
add
and
inc
retf
xchg
repz
inc
lods
or
adc
mov
pop
(bad)
xchg
jl
push
scas
movsx
lds
lods
call
(bad)
outs
dec
mov
mov
ds
cmc
dec
leave
(bad)
fistp
push
pop
sbb
mov
xor
je
sbb
sub
mov
ins
sub
mov
inc
jno
or
or
stc
and
jb
adc
mov
push
int3
shl
pop
push
jnp
in
pop
xchg
mov
pushf
ret
cld
xchg
push
iret
popa
xor
sub
imul
jmp
loopne
test
sbb
jle
xchg
retf
lods
mov
pop
cmp
jg
dec
inc
cwde
inc
das
pop
adc
js
jg
shl
call
stos
push
pop
mov
cmc
ret
cmp
sbb
rcr
les
cmp
sbb
test
cmc
popa
xor
aam
mov
mov
dec
add
cmp
cdq
mov
loopne
sbb
into
cmp
adc
inc
lods
xor
lods
or
mov
(bad)
test
stos
ins
cmp
fdiv
lea
call
fidiv
jmp
aam
clc
lahf
imul
pop
pushf
lods
push
xor
xor
xlat
pop
xchg
dec
std
leave
push
push
stos
xchg
mov
push
lds
or
rcr
mov
in
pop
ja
push
mov
mov
or
cmps
or
cli
adc
test
jmp
push
add
je
ins
retf
rcl
enter
nop
aas
repnz
push
dec
test
and
popa
repnz
pushf
ds
ret
int
dec
add
shr
cld
cmp
mov
scas
fdivr
and
fisttp
ja
inc
ins
std
cmp
es
xchg
jno
ja
adc
inc
and
pushw
mov
pushf
sbb
popfw
loopne
in
xor
loopne
dec
retf
out
clc
call
mov
jecxz
push
mov
fwait
call
in
xchg
movs
mov
std
jnp
push
push
add
push
(bad)
stos
push
movs
out
dec
loope
lods
mov
mov
imul
imul
mov
add
mov
sbb
xchg
call
xor
jnp
mov
xor
into
mov
cmc
add
mov
mov
loop
shl
test
dec
in
call
pop
outs
test
mov
into
sbb
pop
repz
stc
lock
mov
xor
push
add
add
jnp
cmp
test
mov
mov
sbb
shl
and
imul
jge
cmp
shl
add
jp
add
and
es
jg
xchg
mov
add
mov
repz
out
push
loope
into
cmp
pusha
jb
in
xchg
rcl
ret
shl
fld
movs
and
jne
into
out
test
mov
add
into
pop
inc
repz
add
out
pop
mov
pusha
and
xor
xor
(bad)
xchg
fnstsw
cmp
out
xor
push
adc
loope
scas
adc
add
sar
inc
repnz
ja
test
rcr
dec
xor
test
into
frstor
ins
aad
or
lds
add
add
retf
mov
gs
enter
pop
hlt
push
in
test
mov
xchg
pop
ret
xlat
jle
ror
xchg
pop
bound
mov
push
or
outs
xor
cli
jne
stc
lock
sub
sbb
cmp
mov
push
enter
ss
cdq
adc
mov
mov
pop
cmps
fmul
pop
pop
lock
sbb
rcl
int
aas
addr16
loop
mov
ins
dec
dec
adc
adc
cli
push
call
inc
push
call
mov
das
pop
or
sub
pop
nop
iret
add
dec
pop
imul
enter
jmp
repz
(bad)
mov
popa
sar
into
jae
pushf
dec
or
int
inc
call
mov
hlt
rol
sbb
lds
fldenv
adc
pop
iret
xchg
cmp
mov
xor
scas
mov
stos
out
sub
xchg
and
adc
adc
mov
ret
mov
ret
daa
imul
cdq
add
mov
pop
add
stos
pushf
aaa
lea
call
add
les
cld
xchg
daa
leave
cmp
pop
pop
sbb
xchg
outs
daa
aad
add
movs
sbb
or
cs
jns
inc
outs
adc
mov
sbb
test
mov
pop
mov
int3
dec
push
inc
push
mov
mov
stos
adc
lock
loope
inc
das
sub
jnp
and
js
xchg
push
xchg
jmp
(bad)
mov
scas
pop
xchg
sub
push
mov
(bad)
test
push
jge
lock
xchg
(bad)
pop
push
mov
sub
out
pop
lahf
lea
cmp
aam
add
mov
adc
jg
xor
dec
popa
fucomi
push
pop
xor
and
rol
or
jecxz
inc
adc
push
stos
and
inc
adc
nop
repz
sbb
shl
sahf
fiadd
inc
inc
inc
push
bound
and
mov
push
add
fstp
xor
or
das
lock
arpl
bound
inc
adc
pop
shl
pop
pushf
(bad)
call
test
inc
and
mov
mov
sub
xchg
fcom
iret
inc
in
call
jns
sbb
xchg
sub
push
or
cld
test
popa
sbb
adc
cmps
cdq
xlat
push
cdq
and
rcl
mov
stos
cmp
adc
sub
fisubr
sub
test
add
mov
mov
cmp
push
aam
jmp
add
cli
push
jl
xchg
mov
push
xchg
test
mov
imul
aam
push
(bad)
xchg
sub
daa
lea
lods
pop
cmps
sub
movsx
cli
adc
xor
dec
and
mov
lods
add
jnp
mov
ror
scas
aas
(bad)
mov
jecxz
xor
mov
fidivr
add
mov
jnp
xor
inc
xchg
mov
inc
scas
sbb
dec
inc
out
sbb
out
leave
shl
js
xor
fnstcw
mov
jl
mov
dec
mov
cmps
outs
add
repz
mul
bnd
leave
fs
pop
xor
pop
scas
es
ja
movq
mov
push
cmps
or
dec
(bad)
mov
adc
inc
or
sbb
out
pop
in
mov
je
ss
lds
icebp
fdiv
xor
inc
sar
or
stos
jmp
mov
xchg
xor
(bad)
out
xor
push
fcmovnu
imul
mov
jp
gs
or
jmp
pop
mul
sbb
inc
in
rcl
sub
push
jmp
adc
into
and
out
cmp
in
mov
and
dec
aam
test
mov
fst
je
shld
cli
xchg
pushf
(bad)
push
lods
adc
imul
jae
movs
cmp
push
cwde
pop
jecxz
dec
cmp
adc
aam
jns
inc
pop
fs
sti
add
jge
pop
dec
dec
stc
fwait
jae
addr16
addr16
cmp
retf
ja
or
sub
sbb
inc
int3
push
jae
jno
sub
mul
cmp
inc
pop
in
inc
shr
jne
aas
out
dec
push
bound
adc
xor
xchg
scas
rcl
stos
fild
call
loop
jbe
or
pop
mov
jmp
cmp
je
push
or
push
enter
pop
fdiv
(bad)
pop
add
out
push
out
dec
xchg
mov
add
adc
inc
call
jae
xor
inc
aas
pusha
adc
mov
xchg
aaa
das
in
xchg
shl
mov
lds
psrlq
cmp
mov
stos
dec
sub
jge
mov
add
test
or
repnz
jmp
jnp
cmp
loop
xor
sbb
jge
leave
pop
xlat
std
je
mov
call
add
push
stos
cli
js
xchg
in
fdiv
inc
test
xor
xchg
(bad)
mov
gs
mov
pop
jo
test
pop
mov
inc
pop
or
cmp
rol
cmp
xchg
lods
cmp
scas
fnsave
sub
mov
pop
mov
imul
or
gs
rcl
lahf
jae
loope
mov
or
imul
repnz
and
inc
imul
popf
add
cmc
xlat
inc
mov
iret
dec
sbb
xchg
push
dec
dec
cmp
inc
mov
cs
mov
test
cmp
xlat
dec
xchg
dec
dec
sahf
push
cmp
push
hlt
push
(bad)
dec
test
push
sbb
add
enter
shl
jb
loope
add
(bad)
rcl
(bad)
ja
jnp
(bad)
ficom
jns
push
push
ja
push
cmp
int
add
aad
xchg
addr16
adc
es
iret
and
and
pop
sub
xor
pop
sbb
inc
cmp
call
pop
cmp
sub
stos
fld
jle
stos
sub
les
xchg
cld
pop
jmp
jae
loope
test
(bad)
jnp
das
mov
sbb
aas
jle
mov
fcmove
xor
movs
jbe
jo
or
dec
repz
and
js
mov
inc
and
into
scas
mov
xchg
sbb
(bad)
inc
cmp
inc
cmp
mov
ins
push
mov
adc
idiv
aaa
mov
mov
xchg
or
int3
cmp
shr
push
out
jo
cmp
cmp
outs
clc
cwde
sbb
gs
pop
sbb
pusha
clc
inc
push
in
mov
xchg
icebp
movs
push
pop
int
jmp
call
mov
inc
lds
push
aad
leave
jge
mov
rol
ret
out
hlt
leave
aad
dec
les
mov
loopne
inc
(bad)
dec
mov
inc
hlt
dec
dec
cmp
pop
rol
adc
push
dec
call
jecxz
inc
and
pushf
inc
or
push
sbb
xchg
mov
jne
dec
retf
inc
sar
xchg
sahf
add
retf
pop
iret
dec
jmp
ins
jbe
push
in
adc
loope
or
imul
mov
jmp
xchg
xchg
inc
scas
jmp
inc
mov
push
int3
pusha
mov
xchg
aaa
and
ja
mov
ins
adc
(bad)
cdq
or
arpl
xor
sub
pop
xor
outs
daa
push
adc
jl
jmp
add
test
push
add
js
lds
xchg
es
les
mov
aas
and
pop
sbb
pop
mov
fs
add
ins
push
sub
mov
out
push
or
mov
cmps
sub
adc
(bad)
jb
sar
dec
mov
mov
vmread
clc
enter
call
add
push
shl
cmc
sbb
nop
inc
shl
mov
mov
out
push
retf
dec
aaa
fcmovnb
sub
cmp
inc
adc
xchg
fldenv
add
repz
mov
sub
aam
jae
mov
fwait
iret
pop
outs
push
adc
fcomi
mov
sub
cs
or
or
mov
inc
cwde
scas
jbe
daa
mov
out
jb
cld
stos
int
test
xchg
aam
imul
pop
pushf
inc
and
xchg
inc
push
mov
movs
mov
mov
cld
jmp
adc
out
xlat
sbb
sbb
adc
mov
cld
cli
and
pop
cmp
dec
sub
lock
dec
mov
xor
dec
and
fisttp
js
std
(bad)
jmp
scas
pop
sar
ret
pop
push
jbe
and
push
addr16
cmp
out
jecxz
imul
jns
lock
adc
fistp
lods
push
push
jmp
or
cmp
adc
or
cdq
std
push
loop
lds
out
movs
push
fs
in
jle
in
push
retf
mov
imul
push
inc
not
scas
or
in
mov
dec
or
fucomip
ins
sbb
fdivr
lahf
xchg
xlat
push
daa
enter
std
cmp
aas
sti
sub
inc
dec
lock
int
cmps
pusha
push
rcr
mov
sub
inc
pusha
(bad)
inc
cmc
adc
mov
(bad)
js
imul
xchg
ds
sub
das
pusha
movs
xchg
mov
movs
pop
stos
sub
mov
into
int3
xor
xchg
push
ficom
adc
jmp
and
loope
dec
mov
out
int3
fmul
ins
mov
jecxz
mov
mov
daa
test
add
sti
dec
jo
or
xchg
lods
dec
jmp
call
retf
ret
adc
pop
lea
push
test
add
je
shl
and
or
jmp
clc
pushf
or
jle
es
aaa
adc
mov
paddd
sub
in
scas
and
xchg
call
dec
mov
icebp
dec
add
sahf
imul
fs
mov
sub
cmp
pop
int3
sahf
mov
and
into
pop
or
shl
call
and
sbb
mov
movs
inc
xor
aad
gs
mov
hlt
add
leave
xor
js
stos
xchg
stos
addr16
push
imul
movs
cmp
iret
jmp
sti
xchg
sub
enter
fisttp
jns
js
push
mov
adc
dec
test
add
mov
retf
jbe
jp
psrlq
sub
mov
je
stc
dec
jecxz
fstp
rcr
in
xchg
xor
bound
mov
pop
ja
push
adc
or
mov
inc
and
daa
mov
test
inc
push
outs
adc
add
inc
dec
mov
fwait
call
xchg
repnz
push
push
not
adc
cmps
pop
mov
popa
add
test
cmp
gs
(bad)
rol
mov
push
stc
and
mov
(bad)
push
stc
mov
mov
rcr
out
jns
adc
adc
cmp
shl
mov
or
popa
test
mov
sub
sub
pop
outs
sbb
arpl
jae
out
xor
and
mov
cmp
jecxz
mov
int
mov
test
pop
dec
into
or
push
retf
mov
push
and
inc
adc
and
mov
shl
test
sub
cmp
sbb
call
fild
out
or
aam
xor
dec
pop
xor
sub
mov
sub
inc
xor
jge
inc
dec
push
add
jo
push
mov
push
hlt
ret
imul
cmp
add
ret
mov
out
push
fwait
add
cwde
call
popa
mov
pop
dec
outs
in
rcl
rol
pop
clc
mov
dec
cmp
cmps
inc
jne
jmp
and
es
or
gs
and
xor
inc
into
das
loopne
mov
jnp
cmps
scas
xchg
pop
xor
cmp
add
idiv
int3
outs
(bad)
in
dec
test
xchg
lds
jne
pushf
push
lods
daa
sub
xor
enter
xchg
out
rcr
nop
mov
stos
cs
out
cs
dec
and
mov
fst
push
adc
(bad)
pop
imul
sbb
hlt
in
inc
lods
out
push
add
pop
lds
or
dec
jno
(bad)
lods
popa
fisttp
ss
adc
jg
loopne
cs
pop
popf
arpl
push
jg
adc
mov
push
out
xchg
pop
(bad)
lds
push
xchg
mov
sub
cli
fistp
call
cmp
pop
jbe
ins
fsubr
popf
cli
mov
push
pop
cmps
bound
aas
(bad)
mov
xchg
fimul
leave
mov
inc
jp
lock
out
cmp
fimul
jne
adc
push
cmc
pop
dec
sbb
add
int
cdq
(bad)
xchg
push
pushf
and
inc
sti
sbb
pop
jno
fld
jl
or
mov
call
stos
jmp
pusha
inc
pop
xor
loope
hlt
jne
fs
rcl
mov
aaa
(bad)
cwde
add
repnz
clc
cs
dec
jecxz
inc
pusha
loop
scas
div
dec
repz
mov
pop
mov
les
iret
shl
cmp
pushf
scas
mov
mov
sub
sub
repnz
xor
call
mov
cmp
and
aad
or
cmp
xor
out
ret
addr16
(bad)
fdivr
mov
pop
dec
pop
push
repz
mov
add
nop
out
into
cmp
sbb
cwde
fdivr
or
mov
or
dec
in
sub
arpl
aam
inc
(bad)
xchg
arpl
sbb
div
mov
leave
xchg
imul
add
mov
popf
das
imul
clc
add
scas
out
imul
outs
xchg
xor
mov
daa
pop
inc
aam
cld
mov
pop
jae
adc
mov
jge
xor
sahf
addr16
pushf
arpl
add
stc
xor
(bad)
std
out
dec
push
add
jg
xchg
lock
inc
push
retf
ret
sub
mov
mov
pop
enter
adc
dec
inc
cmp
fnstenv
pushf
jns
stos
adc
js
addr16
xchg
inc
pop
loop
cmps
aaa
push
fsubr
loop
test
add
jbe
cdq
(bad)
or
dec
ret
xchg
call
cmc
imul
sti
call
xchg
loopne
jecxz
lea
test
xchg
or
jl
inc
mov
nop
imul
mov
aam
mov
lahf
loopne
cmp
inc
cld
loop
es
(bad)
leave
stos
(bad)
xor
mov
pop
rcr
mov
rcr
shl
sub
xlat
push
xchg
mov
test
pop
jg
cmps
ins
sbb
jge
or
inc
mov
test
in
(bad)
in
sub
pop
mov
add
mov
adc
rcl
ds
fcomp
add
jg
test
push
cmp
test
pop
mov
xchg
adc
imul
fisubr
sub
xor
clc
ret
test
xor
mov
fisttp
push
and
pop
jo
mov
dec
lahf
mov
ret
ds
mov
jnp
inc
xchg
add
(bad)
aad
mov
xchg
adc
int3
mov
sub
pusha
add
mov
push
cmp
mov
xchg
out
pop
mov
(bad)
push
in
stos
scas
pop
dec
cdq
sbb
outs
mov
add
pop
dec
fisub
xor
jb
jg
(bad)
aad
outs
popa
gs
je
sbb
je
mov
jmp
fcom
movs
arpl
popf
xor
lods
lahf
or
mov
or
enter
jbe
imul
sti
xchg
mov
xor
mov
xchg
lock
nop
sub
add
and
ss
popf
cdq
popa
(bad)
and
sbb
enter
mov
add
gs
call
loop
(bad)
xor
neg
dec
add
mov
fistp
popf
popf
cmc
fsubr
arpl
call
imul
neg
(bad)
aad
icebp
bswap
cmp
cdq
cmp
(bad)
cmp
jbe
imul
pop
and
(bad)
stos
cdq
in
fwait
pop
add
call
mov
loope
fld
mov
cmp
loopne
push
hlt
(bad)
jle
jb
pop
fsub
std
jmp
pop
outs
sbb
xchg
push
fcomp
mov
or
fistp
lods
pop
shl
jbe
inc
mov
or
push
sbb
or
lock
lods
mov
cmps
movs
xor
or
sub
imul
dec
fwait
xchg
mov
xlat
daa
enter
in
xor
out
mov
loope
xchg
sub
popa
ins
sub
ja
mov
out
mov
fild
nop
addr16
pop
cmps
ret
mov
fbstp
push
std
or
and
xor
shl
out
pop
stc
push
in
lds
or
mov
adc
in
sbb
loope
adc
lods
pop
int
jge
mov
or
test
sub
pushf
mov
mov
loope
cli
mov
pop
xchg
cmp
mov
mov
mov
pop
fucomi
cmp
repnz
jecxz
or
(bad)
loop
jecxz
test
add
aam
mov
sub
ins
ja
pusha
cwde
rcr
loop
dec
add
sbb
xor
add
push
sub
adc
adc
jnp
neg
out
jge
cli
(bad)
fwait
or
ret
pop
test
jmp
add
ret
xor
movs
ins
xor
int3
test
sub
sub
xchg
retf
push
inc
loop
aam
mov
or
xchg
xlat
xchg
inc
mov
aad
out
repz
loope
aas
cmp
xchg
jmp
aas
pop
enter
xor
inc
pop
jno
into
and
add
mov
jae
test
fwait
or
cld
xchg
cmc
ds
push
out
call
mov
dec
lods
les
or
push
scas
pop
in
mov
or
adc
or
jmp
arpl
call
adc
dec
push
inc
mov
in
sub
aas
jmp
jnp
and
sub
sbb
in
test
mov
in
mov
jmp
jns
leave
aas
shl
test
pop
mov
sbb
arpl
fcmovnbe
push
out
sti
adc
xor
aas
es
(bad)
ret
jl
inc
not
jbe
dec
push
dec
fs
xor
xor
push
mov
fist
call
or
in
ss
repnz
xor
in
mov
cmps
(bad)
fbstp
add
lahf
mov
xchg
sub
mov
pop
hlt
mov
push
arpl
mov
xor
sti
cld
fld
pop
cmp
cmp
pop
repnz
fucomi
or
pop
pop
and
mov
daa
ds
xchg
pushf
cmp
sar
jge
sbb
jbe
imul
adc
mov
rcr
or
data16
ins
mov
rcl
mov
add
in
pop
sub
fs
mov
sbb
adc
mov
jmp
repnz
mov
rol
adc
cmp
fmul
mov
cli
aaa
fiadd
pop
add
es
cmp
ja
ret
inc
xor
popf
js
mov
popf
rol
mov
cdq
in
mov
sbb
pop
mov
lods
fisttp
adc
(bad)
sti
imul
or
sub
test
rol
adc
pop
pop
xor
inc
xchg
mov
mov
stos
stc
cmp
adc
pusha
inc
aad
jmp
fimul
test
fld
jl
add
xor
adc
ret
es
pop
pop
sti
pop
popa
test
cmp
js
add
dec
imul
jle
adc
rcl
jae
pop
jg
aas
adc
sub
scas
fsubr
loopne
adc
out
es
test
out
mov
das
add
div
je
mov
mov
icebp
add
jg
movs
push
mov
inc
dec
mov
xor
scas
jae
pop
daa
push
into
push
push
xor
dec
mov
shl
fldl2e
or
jo
idiv
sbb
retf
es
ins
cmovne
mov
inc
mov
mov
int3
mov
mov
dec
popa
mov
inc
mov
fnstsw
les
les
inc
add
mov
or
and
or
fidivr
pop
mov
inc
stc
mov
test
inc
xor
inc
aas
sbb
pop
pcmpgtb
sub
pop
test
or
inc
mov
add
mov
and
cmp
inc
addr16
int3
stc
dec
imul
cmp
daa
out
gs
jnp
int
in
sub
cmp
ins
loope
icebp
add
adc
loopne
pop
pop
mov
icebp
xchg
rol
or
mov
mov
jmp
mov
neg
sbb
(bad)
sub
popf
test
jmp
ins
xchg
ret
jmp
sub
push
cwde
add
add
add
repz
cmp
push
mov
ins
hlt
ins
cmp
dec
lods
(bad)
mov
adc
leave
add
mov
mov
imul
push
cdq
ret
add
jno
jnp
sub
pop
outs
aam
or
inc
movs
scas
xor
scas
xor
sub
jge
(bad)
aad
add
inc
jmp
push
pop
fmul
cmp
popf
ins
push
dec
push
(bad)
sub
sub
rol
in
pop
xor
ds
cmp
pop
lahf
jb
lds
cdq
retf
sbb
mov
mov
retf
xor
clc
mov
jae
ret
pop
ror
mov
xor
movs
inc
sbb
push
mov
inc
mov
rcl
ror
pop
fbstp
pop
xchg
push
ja
js
shl
rcr
push
sbb
outs
adc
scas
call
mov
ret
cmovs
mov
adc
pop
mov
ret
adc
loop
retf
(bad)
lea
cmp
movs
popf
lea
push
ret
scas
cmp
scas
mov
sbb
xchg
ins
bound
nop
xchg
test
jp
mov
test
dec
dec
cmps
out
mov
psubsw
xor
movs
mov
retf
mov
movs
adc
push
xchg
std
inc
(bad)
dec
(bad)
jle
jmp
out
or
mov
jb
or
xchg
(bad)
es
scas
jnp
add
cld
and
inc
pop
fwait
add
unpcklps
mov
mov
jns
lods
cmp
ret
push
xor
test
or
dec
xlat
test
loopne
xor
xlat
in
pushf
add
clc
das
fwait
inc
mov
fcomp
inc
(bad)
popa
or
dec
push
test
inc
test
cmp
mov
stos
sbb
ret
lock
das
inc
movs
mov
repnz
lods
xor
shl
gs
mov
loop
cli
icebp
ret
std
sbb
retf
int3
in
in
sub
aas
es
sub
add
idiv
xor
arpl
push
pop
test
inc
mov
loop
sbb
call
(bad)
mov
stc
mov
shl
scas
(bad)
push
and
stos
cdq
test
retf
sub
aaa
cwde
mov
sub
or
xchg
inc
(bad)
in
bswap
xor
sub
pop
pop
test
push
int
arpl
push
and
inc
test
sub
jb
or
sbb
rcl
jmp
or
stos
icebp
jg
jnp
popf
dec
popf
xchg
pushf
cmp
imul
xor
xchg
push
push
movlps
(bad)
xor
xchg
inc
push
sbb
xchg
outs
retf
inc
mov
xchg
fbstp
or
fisubr
inc
fs
stos
mov
sub
sar
popa
jbe
jbe
push
repz
pop
pop
inc
xor
jne
inc
in
movs
pop
ins
xor
jmp
inc
lds
aam
ret
(bad)
inc
test
mov
jno
inc
div
loopne
ret
loop
imul
xchg
dec
rcl
cmps
in
pop
add
xor
sub
data16
xchg
out
bound
sti
or
addr16
hlt
dec
and
cld
push
rcr
shr
pop
cwde
in
xor
and
cmp
js
add
jg
cld
cwde
hlt
cmp
mov
call
imul
out
adc
adc
mov
dec
jnp
cmp
jb
ds
dec
in
inc
xchg
dec
jg
xor
ror
mov
sbb
ficom
pop
imul
out
pop
inc
push
(bad)
not
mov
hlt
xchg
sub
loopne
and
pop
jge
push
mov
inc
mov
ror
out
sbb
aaa
ret
xor
cmps
lea
(bad)
adc
push
push
fnstenv
add
sbb
inc
mov
out
mov
sub
shl
ja
add
pop
pushf
fcom
sar
mov
lods
mov
adc
pop
aam
sub
push
adc
xchg
gs
push
cld
and
shl
xchg
call
enter
dec
ret
inc
(bad)
jg
jmp
popa
jae
cmp
ja
js
pop
dec
dec
(bad)
test
imul
jmp
in
iret
retf
adc
cld
jo
xchg
adc
sbb
seto
mov
jo
inc
shr
inc
adc
xchg
inc
mov
add
cli
outs
enter
cli
(bad)
adc
popf
sbb
imul
sub
popf
scas
test
sbb
inc
sahf
jle
pop
mov
je
xor
aam
jb
dec
inc
lea
retf
and
fnsave
ss
dec
sub
outs
jnp
add
adc
pusha
push
lock
outs
mov
or
dec
and
xchg
in
sti
rcl
out
ror
mov
push
add
jmp
and
cmp
int3
adc
adc
jg
push
(bad)
fidiv
hlt
bound
sahf
xchg
loopne
push
xchg
mov
adc
cdq
aam
dec
stos
xchg
ja
ins
sub
ja
xor
inc
stos
call
dec
and
loopne
adc
xchg
cli
dec
or
and
(bad)
in
js
sbb
mov
icebp
xor
mov
adc
(bad)
outs
or
pop
cmp
shl
jmp
jmp
xlat
push
ret
retf
mov
pop
jmp
imul
or
mov
mov
xchg
cs
call
mov
pop
ds
inc
mov
in
add
add
js
sbb
loope
das
and
fs
push
aad
popa
scas
dec
jmp
cmp
push
imul
sbb
aad
std
stos
dec
shr
in
lods
cdq
sbb
jg
push
cdq
mov
fsubr
and
(bad)
lock
js
jmp
mov
pop
dec
xchg
mov
fwait
mov
test
shl
jmp
icebp
sbb
jmp
test
add
stos
cmps
sbb
out
repnz
lods
xchg
sub
mov
xchg
jg
shl
adc
sti
shl
push
(bad)
ins
ret
xchg
imul
dec
daa
xor
movs
inc
mov
test
nop
fiadd
out
cwd
js
add
stos
ss
arpl
push
add
aaa
fs
fwait
sub
xor
retf
pop
cmc
or
mov
out
fsub
or
jl
adc
ficom
jmp
pop
and
leave
add
aad
dec
ret
ds
dec
pop
les
mov
div
cmovo
xchg
scas
pop
jecxz
xchg
(bad)
nop
and
inc
sub
add
sub
leave
test
push
sbb
fcmovne
xchg
dec
out
outs
push
aas
ja
cmps
into
movs
sub
in
mov
sbb
lods
and
push
jmp
into
call
lods
or
add
xchg
out
cmc
ja
mov
bnd
cmps
arpl
(bad)
(bad)
push
data16
ds
cli
xchg
pushf
popa
pop
outs
mov
xor
pop
(bad)
(bad)
imul
adc
push
popa
pop
jge
dec
or
cwde
jge
sub
cs
push
lods
xchg
dec
pop
ficomp
test
lods
and
stos
xor
ret
push
mov
sti
jmp
and
dec
sub
push
add
mov
repz
stos
jne
xlat
mov
mov
mov
pop
xlat
pop
xor
or
push
out
stos
into
lock
fmul
and
sar
retf
pushf
xchg
ss
adc
dec
inc
das
je
dec
xor
add
das
ss
fwait
stc
(bad)
dec
push
test
jb
mov
cli
dec
cli
push
in
mov
sub
imul
loopne
and
mov
mov
lea
addr16
fnstcw
ror
int
xchg
ja
jne
xchg
neg
push
fsub
sahf
pop
movs
test
stos
lea
loopne
push
std
xor
jb
mov
cwde
push
sbb
test
xchg
dec
pop
push
sbb
pop
xor
popf
leave
xlat
sub
or
mov
cmp
scas
dec
test
push
js
sar
pop
jnp
(bad)
jp
int
(bad)
mov
fistp
pop
adc
fwait
push
add
xchg
push
scas
pusha
or
(bad)
aam
cmp
xchg
sub
jbe
push
mov
sahf
cmp
adc
add
mov
clc
mov
cdq
inc
shr
push
retf
dec
(bad)
int3
jmp
daa
pop
rol
bound
dec
mov
fst
lods
push
jmp
sub
add
jbe
out
cmp
fsubr
sbb
push
fdivp
cs
mov
je
push
dec
sbb
xchg
adc
or
cs
clc
mov
cli
push
gs
mov
and
jbe
in
xor
xor
push
mov
fadd
js
mov
lods
add
sub
scas
out
cmp
inc
push
ret
sbb
stos
sub
shl
out
out
fdivr
scas
jb
sahf
or
xchg
push
and
in
adc
in
fs
ret
push
ret
(bad)
and
pop
adc
call
jbe
icebp
xor
sti
outs
aas
mov
imul
xor
pop
ret
pop
(bad)
ficom
inc
and
repnz
pop
push
mov
fld
sub
mov
sti
mov
sub
sbb
cmps
pop
mov
push
cmp
lods
test
je
jo
jns
sbb
jg
xor
sar
jnp
ss
call
pop
das
inc
sub
cmc
mov
movs
cmp
xor
loope
sub
sbb
popa
xchg
mov
add
les
pop
adc
imul
shl
lea
mov
xchg
enter
inc
in
lods
inc
push
mov
mov
and
pop
add
or
cmp
mov
out
sbb
adc
je
pop
adc
mov
vpminsw
mov
stos
pop
adc
mov
sbb
jnp
test
cmps
push
or
pop
pop
push
inc
cmp
and
mov
or
xchg
retf
mov
cmp
imul
pusha
sahf
icebp
in
jns
int
dec
mov
jmp
or
cmc
in
rol
aam
je
lahf
(bad)
mov
mov
mov
enter
sub
dec
data16
outs
clc
jmp
div
pop
push
stos
lock
loop
add
pop
sbb
popf
rol
sbb
test
adc
pop
push
rcl
xchg
push
sub
arpl
outs
imul
retf
hlt
inc
inc
popa
je
in
dec
fdivr
or
mov
xchg
div
jge
(bad)
cmp
sub
sahf
pop
sbb
icebp
xchg
push
ret
(bad)
cmps
pop
call
fisub
jmp
cmc
icebp
xor
stos
xchg
or
ss
(bad)
movs
cwde
dec
ja
mov
jo
lock
dec
sbb
sbb
jb
cmp
mov
pop
imul
sar
ss
mov
les
inc
(bad)
(bad)
sbb
jne
(bad)
sahf
fwait
xlat
sbb
xchg
lahf
clc
lods
xchg
add
ficom
or
push
popa
adc
pop
out
cld
add
sbb
mov
iret
push
fist
inc
jecxz
add
lea
inc
dec
mov
sbb
imul
xor
adc
adc
mov
loope
clc
aad
clc
pop
cld
adc
(bad)
loopne
imul
bound
cmp
pop
add
and
shl
sbb
clc
inc
pop
xlat
and
cmps
cdq
pop
mov
lods
rol
fs
icebp
outs
jge
xchg
inc
retf
scas
pop
xor
js
neg
push
sar
cmovp
add
in
leave
fiadd
jne
xchg
jge
inc
sub
(bad)
push
cmp
aam
aam
loop
mov
xchg
fimul
cmpxchg
aaa
jo
js
js
adc
xchg
mov
push
fisub
add
or
and
xchg
das
cld
sub
adc
call
pop
xchg
sbb
ret
imul
adc
sti
and
sbb
(bad)
out
inc
hlt
xor
mov
mov
add
mov
dec
retf
stos
test
mov
mov
aaa
test
xor
dec
and
jne
pop
push
pop
arpl
out
xor
enter
cmp
fstp
xor
push
aas
pop
(bad)
inc
in
sub
push
data16
jl
out
and
cmp
add
and
pop
movs
ins
jmp
mov
out
jb
dec
stos
aas
mov
jl
and
lods
mov
fnstsw
mov
pop
or
movs
mov
sub
sub
fisubr
xor
hlt
jp
xchg
xchg
mov
xor
bound
adc
pop
fnsave
mov
retf
icebp
cmp
add
mov
lds
push
pop
pop
adc
stos
scas
lds
xchg
add
xor
stc
cmp
xchg
out
retf
xor
pop
ror
jl
repnz
jnp
lahf
inc
(bad)
in
out
push
mov
jge
mov
mov
dec
enter
push
stos
mov
xchg
aaa
nop
arpl
mov
or
pop
stos
jne
shl
jmp
test
push
sbb
mov
out
(bad)
mov
cdq
mov
jns
ficomp
in
ins
hlt
ins
shr
push
and
mov
xor
or
out
in
icebp
and
call
jle
ja
xor
xchg
cmc
(bad)
push
lahf
cmp
clc
int3
pushf
mov
aad
pop
jmp
inc
aaa
push
inc
stc
(bad)
jb
call
push
out
cmc
jne
adc
mov
add
sbb
cmp
retf
or
mov
push
pop
xlat
ret
sbb
xchg
mov
mov
xlat
sbb
mov
adc
stos
fdiv
aaa
pop
jmp
add
in
stc
mov
ins
mov
mov
xchg
mov
imul
xchg
fld
xor
push
xchg
and
mov
xchg
push
dec
cdq
dec
mov
jp
fiadd
aad
scas
lea
neg
in
mov
dec
popa
mov
test
daa
test
call
jle
sbb
dec
sbb
seto
std
popa
inc
out
aad
sbb
dec
call
call
xor
cmps
and
in
pop
movs
sub
out
inc
cmp
sahf
and
icebp
pop
dec
stc
shl
int
arpl
dec
popf
js
pop
scas
xor
fldcw
je
enter
mov
repnz
push
in
cmp
push
scas
inc
aas
(bad)
sar
sti
pusha
lock
mov
xor
pop
inc
imul
dec
dec
sbb
or
(bad)
nop
aaa
test
mov
test
imul
test
into
add
and
sahf
xchg
fisttp
ds
mov
inc
cli
and
pop
sub
mov
push
bound
mov
xchg
xlat
cmp
sbb
int3
jg
xchg
sti
stos
dec
inc
cs
pop
aam
jmp
push
stos
jns
mov
sub
retf
call
xor
inc
repz
call
imul
rol
shl
test
add
rcl
mov
sub
mov
pop
int
sbb
xor
jecxz
cmp
pop
lods
dec
and
and
adc
in
gs
sub
cmp
dec
les
call
call
mov
call
ins
pop
imul
jmp
cli
sub
sub
out
mov
push
mov
mov
add
aad
stc
stos
iret
icebp
test
call
movs
mov
in
push
push
sbb
mov
xchg
pop
lods
stos
repz
pop
(bad)
loope
and
mov
enter
pop
icebp
loop
xlat
adc
leave
nop
lahf
pop
sbb
mov
in
and
movs
cdq
jae
inc
ficomp
and
out
call
mov
and
(bad)
repz
lahf
or
inc
cmp
mov
mov
jp
mov
mov
popa
inc
mov
ffreep
dec
es
cmps
sub
clc
or
adc
popa
adc
(bad)
adc
mov
ror
leave
xor
arpl
jbe
icebp
icebp
add
(bad)
adc
mov
stc
(bad)
adc
and
movs
jno
dec
or
mov
popf
push
dec
sbb
(bad)
test
std
mov
dec
cmp
push
pusha
out
pop
(bad)
out
add
iret
push
sbb
pop
dec
(bad)
cmp
push
mov
dec
push
and
jmp
xor
mov
movs
xor
dec
hlt
push
js
ds
mov
sub
jo
sbb
popf
push
mov
icebp
nop
icebp
or
sub
xor
or
add
xor
xor
aad
lods
dec
out
adc
xor
inc
mov
mov
xor
ds
int
inc
add
jmp
mov
add
and
popa
mov
or
test
mov
mov
xor
sub
push
cdq
sub
inc
and
pop
ins
test
imul
arpl
sbb
add
aam
add
pop
int
push
mov
pop
aad
xchg
mov
pop
not
pop
cld
or
lea
dec
cld
cmp
je
out
pop
leave
mov
sbb
mov
cmp
or
push
loop
adc
cmps
inc
xchg
lods
adc
je
data16
movs
jno
or
jb
cwde
xchg
or
cmp
push
stos
dec
mov
out
dec
or
add
lock
fwait
mov
push
mov
cmp
jecxz
pop
scas
lea
adc
clc
mov
cs
stos
mov
hlt
mov
sbb
gs
call
clc
addr16
xchg
dec
stos
out
xchg
or
out
out
xor
sub
pop
or
ss
inc
and
cli
(bad)
mov
(bad)
and
jle
push
cld
push
pop
sbb
imul
cs
std
cmp
pop
jnp
sbb
cmp
clc
jg
mov
xchg
lds
xor
xchg
mov
sti
ss
mov
mov
adc
dec
push
sub
xor
mov
sub
fisubr
ins
das
fistp
or
push
lahf
mov
and
mov
pop
inc
lahf
stos
xchg
pop
pop
pop
(bad)
mov
mov
push
jle
popf
add
mov
jo
ds
or
sbb
bound
in
push
iret
sar
xchg
add
jns
lock
cmc
add
add
addr16
or
lea
and
sbb
clc
push
dec
and
lods
pop
pusha
in
enter
retf
pop
icebp
inc
into
(bad)
cmps
repnz
cmp
(bad)
or
mov
cmps
push
movs
sub
in
bnd
dec
and
jb
sti
push
int3
rol
test
and
fucomip
jmp
in
out
cmps
or
inc
hlt
cs
adc
pop
push
out
add
leave
test
ficomp
jnp
or
mov
outs
ds
pop
adc
aam
sbb
or
cmc
push
xor
shl
xchg
dec
jae
mov
sbb
stos
adc
adc
adc
test
and
scas
mov
add
mov
xchg
out
xchg
jmp
mov
je
jmp
ja
out
push
and
sbb
imul
cs
mov
push
jp
lds
loopne
into
test
ins
fdivr
or
adc
sub
push
jns
mov
xchg
adc
mov
xor
xsha256
cmps
push
jne
add
mov
(bad)
call
iret
sbb
jge
dec
push
mov
fstp
lea
cld
push
xor
add
out
push
sbb
ret
pop
(bad)
push
push
sbb
or
pusha
and
mov
stos
lods
lock
jb
test
push
mov
dec
mov
imul
not
addr16
jmp
sub
(bad)
jns
movs
jno
ss
scas
cs
(bad)
fsubr
rcr
push
test
outs
(bad)
xchg
xor
jg
enter
cwde
mov
call
adc
inc
lds
sub
adc
pinsrw
mov
call
ins
mov
loopne
push
cmps
icebp
xchg
push
je
sbb
into
enter
retf
clc
mov
xchg
xchg
inc
push
lods
scas
ficomp
retf
and
sub
nop
and
test
in
scas
dec
outs
ret
sbb
xor
add
mov
mov
xor
into
mov
xchg
fnstsw
(bad)
(bad)
mov
fdiv
add
mov
jecxz
mov
loopne
cli
mov
xchg
cmps
clc
shl
inc
rol
or
cmp
test
mov
xchg
and
sbb
inc
pop
inc
dec
outs
shl
jmp
mov
jecxz
add
mov
jmp
xchg
pop
ins
ret
test
sbb
sar
inc
push
stos
add
ins
cmp
cmp
shr
pushf
jbe
pop
fs
in
loopne
cwde
add
xchg
shr
imul
icebp
and
xchg
call
mov
push
out
rcl
arpl
mov
popf
pop
shl
mov
rcl
jb
test
dec
leave
daa
jbe
sbb
inc
or
mov
les
stc
pop
adc
mov
sub
xor
cli
out
repnz
jo
fwait
bound
or
push
or
push
je
mov
jo
hlt
fwait
mov
push
rcr
mov
and
sar
cmp
adc
sub
sar
fadd
mov
or
stos
cmp
outs
push
push
sbb
pop
push
fisttp
mov
popa
jmp
and
xor
xor
push
dec
push
push
sub
jmp
aam
mov
arpl
aaa
mov
cmps
xchg
je
cmps
fucomi
je
push
mov
mov
or
xor
iret
test
push
movs
hlt
pop
not
popf
jb
bound
and
retf
xchg
push
ins
or
out
(bad)
xor
(bad)
in
loop
xchg
iret
adc
add
ins
dec
push
jmp
pop
mov
daa
popf
(bad)
outs
jmp
imul
inc
pop
(bad)
adc
xor
pop
rol
scas
mov
jp
sub
jbe
call
enter
aas
shl
popf
add
xor
fbstp
out
push
mov
inc
ss
retf
mov
leave
test
jle
shl
xor
pop
ja
sub
stos
mov
sub
les
stos
jb
sahf
mov
or
(bad)
cmp
es
mov
mov
or
add
mov
fs
or
mov
dec
xor
cmps
jmp
ds
scas
sub
adc
xlat
ds
mov
dec
pop
popa
mov
cld
inc
cwde
loopne
mov
sub
cmp
cmp
out
sahf
mov
cli
(bad)
aas
popa
mov
add
cmp
mov
mov
mov
mov
mov
ficom
mov
cmp
and
push
aad
daa
inc
adc
and
fucomi
call
jge
cmc
je
(bad)
in
lods
neg
jb
dec
fldenv
mov
int3
pop
jno
mov
mov
pop
sar
imul
jmp
jmp
clc
pop
pop
iret
dec
mov
ret
hlt
xchg
ror
cmp
fimul
inc
lods
jbe
xchg
push
call
daa
inc
jnp
loope
into
xchg
sub
adc
bnd
inc
sub
ficomp
mov
je
adc
xor
push
jg
inc
mov
scas
mov
mov
cwde
in
jmp
xchg
mov
stc
(bad)
pop
loop
aaa
sbb
into
cmp
add
inc
push
xchg
and
and
int3
in
push
push
cmp
pop
jmp
push
inc
int
ret
lods
mov
cmps
call
test
std
call
inc
fbld
test
mov
sbb
pusha
mov
fsubp
xchg
pop
xchg
adc
jo
push
mov
jo
ret
retf
push
stos
scas
sbb
mov
sub
int
cli
mov
(bad)
aam
add
sti
out
in
les
pop
in
mov
mov
inc
add
push
push
jmp
ret
lock
out
out
into
inc
(bad)
jmp
adc
inc
fdivr
sbb
mov
cmps
popa
in
push
inc
mov
push
(bad)
les
or
add
add
out
retf
fidiv
push
ins
int3
sar
fwait
pop
stos
inc
xchg
mov
in
sahf
sub
out
cdq
xor
xchg
gs
jo
sete
and
xor
daa
ins
fbld
jo
dec
push
sub
mov
sub
dec
mov
sub
sbb
movups
fcmovu
add
div
sahf
and
addr16
sub
jo
call
push
sbb
inc
xor
mov
jnp
ror
fdivr
sbb
or
lods
punpckhwd
retf
cmp
call
rcr
inc
mov
(bad)
pop
xor
iret
mov
aam
xchg
js
jnp
dec
dec
in
sar
push
xor
mov
out
sub
mov
xchg
in
add
cmp
adc
mov
jnp
cwde
adc
out
jmp
push
inc
arpl
push
loopne
jno
add
test
retf
dec
addr16
(bad)
repnz
adc
fimul
pop
dec
aad
push
inc
mov
jle
fnsave
sub
and
ins
push
cmp
pop
pop
mov
cs
sub
shl
test
and
lds
stc
jns
nop
mov
jnp
or
xchg
mov
jo
ins
mov
sub
pop
aam
push
dec
shl
jmp
sbb
or
outs
fcmovnb
inc
cdq
xor
mov
ins
and
xchg
or
jmp
mov
push
shl
xchg
shr
pop
not
jbe
out
fld
dec
xchg
jp
cmps
and
push
icebp
xor
inc
or
stos
sub
(bad)
cs
scas
inc
xchg
(bad)
loopne
pop
mov
cmp
cmp
push
mov
cmc
pop
add
neg
std
xchg
(bad)
sub
xchg
out
pop
shl
repz
bound
push
movs
gs
mov
push
mov
mov
mov
rsqrtps
call
repnz
out
mov
int
mov
loop
in
adc
rcl
adc
sub
pop
adc
cmp
cmp
mov
das
push
sbb
loopne
adc
mov
ret
ja
mov
jae
dec
imul
mov
lahf
call
div
retf
sub
gs
sti
sub
fcomip
ds
movs
data16
jo
mov
call
jl
adc
mov
mov
rol
or
popf
and
xor
out
cs
add
cli
push
inc
mov
test
push
mov
out
mov
je
mov
and
mov
push
jl
fild
test
imul
lods
inc
pop
mov
js
fucom
pop
push
sbb
adc
and
aam
iret
push
xchg
cmc
and
and
imul
push
popa
cmp
and
lahf
sub
(bad)
sahf
dec
(bad)
sti
mov
gs
dec
mov
xchg
ret
shl
outs
lods
repz
hlt
push
pop
das
std
in
clc
inc
and
pop
popf
sub
sahf
ret
call
lahf
pop
add
mov
ret
mov
mov
jge
adc
sub
pop
in
leavew
inc
mov
inc
add
cmp
outs
mov
inc
jbe
pop
mov
hlt
inc
adc
(bad)
fldcw
adc
in
dec
fistp
sub
or
stos
ret
sbb
jg
loope
into
inc
xor
push
cmp
shl
cdq
aam
pop
add
movs
mov
and
es
cmp
pop
es
ffree
loope
iret
mov
jae
dec
popa
imul
and
pushf
push
cld
in
jbe
adc
stos
adc
sbb
mov
clc
xchg
aas
out
inc
sbb
pop
out
aas
bound
mov
nop
jnp
sub
fsub
or
nop
mov
xor
cs
call
stc
cmp
or
sahf
xchg
add
jbe
dec
pop
in
cmp
out
pop
loope
lahf
cmp
(bad)
mov
adc
shl
pop
rol
sub
cmc
adc
xchg
nop
mov
push
(bad)
cmc
out
cmp
jle
jo
scas
adc
aad
mov
outs
adc
dec
xor
ss
dec
xchg
inc
push
add
xor
lods
arpl
retf
jae
scas
xor
add
xchg
adc
xchg
mov
and
mov
pop
in
in
std
test
arpl
jnp
popa
test
idiv
pop
aad
test
xchg
(bad)
xchg
xchg
and
mov
in
call
mov
mov
loopne
movs
(bad)
pop
mov
div
add
pop
aad
cdq
jmp
leave
cs
jmp
das
dec
dec
jbe
out
cld
das
cmp
test
sbb
std
mov
sar
jb
sbb
neg
dec
jge
xchg
pop
mov
mov
and
pop
les
aaa
jns
into
outs
mov
inc
fisubr
sbb
outs
movs
dec
std
out
out
loop
stos
mov
js
push
jecxz
and
jno
mov
adc
adc
dec
push
mov
sbb
sbb
jo
outs
mov
jg
xlat
or
test
sbb
push
add
mov
jl
in
in
div
out
in
stc
pop
mov
mov
test
scas
ds
clc
out
pop
bound
test
push
push
mov
lods
ret
and
repz
jo
inc
enter
cmp
retf
dec
out
les
jl
and
(bad)
(bad)
lods
mov
cwde
inc
loop
popf
rcr
fidivr
out
xor
inc
mov
sti
jecxz
jge
xchg
sub
cld
push
push
int
call
mov
xchg
dec
push
inc
sub
je
fild
fcom
jle
js
ret
call
jecxz
push
fisttp
ja
push
imul
or
in
push
dec
or
imul
push
sbb
je
cmps
xchg
pop
mov
dec
leave
mov
push
lods
int
mov
mov
sub
cwde
icebp
push
loope
(bad)
mov
xchg
(bad)
dec
cmp
sbb
arpl
test
cmp
scas
xor
test
es
push
jge
cmps
retf
aaa
and
inc
in
sbb
jmp
add
xchg
out
push
retf
cmps
pop
mov
ficom
push
sbb
out
ret
retf
pop
inc
inc
push
ds
inc
ds
int
ds
push
push
sub
push
sub
pop
cmps
or
and
scas
mov
or
jne
cwde
fxch
(bad)
je
fld
(bad)
mov
sbb
pop
fwait
and
movs
push
cs
xchg
jmp
xchg
mov
call
sbb
jbe
mov
ss
ret
test
mov
push
inc
mov
ret
pop
and
loope
push
sahf
jecxz
xchg
pop
inc
js
test
sbb
sbb
inc
retf
movs
xlat
lds
or
jmp
retf
leave
xchg
cmp
clc
popf
leave
adc
cmp
rol
dec
or
in
scas
add
mov
clc
xor
(bad)
arpl
adc
loope
mov
inc
rcr
scas
jecxz
shr
sbb
fstp
rcl
cmps
mov
jecxz
push
(bad)
stos
mov
mov
push
(bad)
push
mov
outs
add
in
push
jmp
stc
dec
adc
in
xor
jo
and
ss
or
cmc
loope
push
mov
adc
pop
and
mov
xchg
mov
cmp
jl
xor
cmp
fistp
sub
mov
rcr
stos
fld
mov
in
pop
add
and
das
loope
pop
test
inc
pop
shr
sti
push
inc
jge
stos
pusha
add
xchg
xchg
push
test
cdq
jmp
stos
fs
mov
xchg
cdq
and
test
movs
test
rol
ins
mov
js
mov
loopne
lds
mov
mov
xor
push
add
cmp
lahf
rep
mov
adc
sbb
adc
push
dec
and
int3
adc
jnp
fld1
add
imul
mov
cmp
stos
in
in
add
jns
and
push
je
in
xor
fwait
hlt
pop
call
popa
push
sbb
mov
js
mov
imul
(bad)
int3
and
mov
cld
xchg
pop
push
in
lods
fcomp
adc
hlt
cmp
push
ja
xchg
pop
adc
cld
(bad)
mov
push
mov
jg
cmc
jg
inc
int3
dec
lods
shl
ret
sub
sbb
pop
xchg
ins
sti
stc
push
inc
pop
or
xor
popf
adc
repnz
test
int3
adc
scas
je
das
in
jo
(bad)
mov
outs
sbb
jle
out
fsub
jno
lds
inc
lods
mov
sbb
(bad)
retf
sbb
mov
mov
mov
push
jo
and
jp
test
dec
mov
pop
clc
cmp
sbb
scas
je
idiv
retf
jb
sbb
xchg
into
out
mov
aaa
shl
out
adc
mov
push
xchg
or
cdq
push
xor
pop
ss
xor
ret
int3
(bad)
out
nop
idiv
push
jbe
aas
add
scas
xlat
sbb
not
sbb
or
cld
ret
add
or
pop
adc
xor
dec
repnz
lea
(bad)
mov
pop
cmc
sub
loope
mov
push
call
dec
pop
ins
sub
leave
retf
je
aad
and
push
aas
cmp
mov
sub
(bad)
xchg
out
bound
sbb
fbstp
pusha
ins
bound
mov
data16
dec
ret
mov
dec
inc
imul
fwait
inc
xchg
stos
mov
or
push
dec
mov
es
(bad)
jno
lds
and
test
mov
sbb
push
mov
pop
add
loopne
repnz
ss
pop
aam
fldenv
fistp
scas
clc
inc
adc
popa
push
sti
or
rol
jae
jmp
or
jecxz
int
repnz
fwait
sbb
cmps
std
sar
cmps
bound
sub
pop
adc
stos
cmp
add
jb
lahf
in
cmp
cmps
mov
pop
addr16
les
push
(bad)
sub
jl
idiv
arpl
sub
loope
jmp
loope
aas
or
es
mov
jle
stos
xor
movs
adc
sbb
lea
mov
add
retf
std
sbb
adc
xchg
int3
xor
adc
retf
(bad)
push
jg
fdiv
enter
mov
push
addr16
popf
ret
outs
dec
gs
jecxz
hlt
push
pop
mov
dec
mov
imul
jmp
repnz
mov
jnp
sbb
push
xlat
jmp
xor
cmp
gs
dec
sub
cmps
icebp
inc
or
stos
inc
inc
xchg
xchg
mov
test
mov
neg
div
jbe
fisub
gs
sbb
jne
mov
loope
pop
xchg
or
outs
push
mov
sbb
mov
fs
imul
xchg
sub
xchg
outs
and
fcomp
frstor
(bad)
jp
inc
nop
cmp
mov
add
out
mov
and
cmp
sti
and
frstor
movs
cmps
push
repz
xor
xor
test
and
or
loopne
into
shr
sbb
(bad)
mov
in
mov
fnclex
inc
dec
hlt
push
add
adc
adc
frstor
loopne
xor
mov
mov
jmp
das
iret
pop
mov
xor
int
inc
out
lods
jl
dec
cmp
sahf
inc
aam
outs
adc
ret
mov
jo
mov
sahf
push
ror
push
push
cmps
xchg
dec
push
xor
add
scas
push
or
es
mov
push
int3
xchg
push
enter
shl
add
rol
pop
movs
dec
push
lea
stc
sbb
les
jne
fist
adc
(bad)
test
bound
mov
pop
add
push
repnz
test
and
mov
inc
std
mov
in
dec
pop
int3
jmp
xchg
pop
shr
(bad)
sbb
enter
icebp
aam
jae
fmul
pop
mov
jp
cmp
outs
pop
pextrw
push
loopne
je
scas
enter
jno
inc
arpl
clc
out
clc
adc
dec
leave
inc
and
inc
dec
fsubr
cmps
lods
push
mov
fsubr
mov
clc
dec
push
fisttp
sbb
pop
(bad)
dec
mov
addr16
or
je
mov
dec
push
mov
stos
shl
into
xchg
adc
mov
dec
scas
test
popa
shl
jg
dec
data16
cwde
mov
test
(bad)
fbstp
jmp
loopne
jp
iret
and
mov
hlt
ret
in
mov
mov
fnstcw
pop
into
xor
xlat
sub
sbb
sub
(bad)
ss
or
jo
xor
pop
or
sub
jmp
gs
data16
mov
push
inc
push
dec
jle
neg
pop
or
dec
in
sbb
enter
add
in
inc
cmps
hlt
mov
inc
gs
repz
cmp
push
pop
inc
mov
je
test
sub
test
sbb
push
lods
ret
sbb
push
cmp
dec
inc
push
cmp
cld
enter
xor
cld
mov
mov
jbe
inc
rcl
movs
cmp
daa
jo
rcl
fcom
stos
dec
sub
or
and
push
push
add
loope
add
or
xor
mov
cmc
pop
call
push
ins
add
fsubr
mov
and
daa
rol
jo
(bad)
xchg
jmp
dec
push
adc
cmp
popa
lods
sbb
mov
inc
ficomp
push
sub
sbb
xor
mov
add
lea
rcl
inc
mov
mov
or
mov
test
mov
lods
sub
pop
js
pop
(bad)
cmp
pop
imul
sub
inc
mov
cmp
std
add
push
(bad)
mov
xchg
xor
sbb
imul
xor
sbb
xor
inc
test
es
pushw
dec
pop
(bad)
scas
mov
(bad)
clc
das
test
jl
or
jno
sub
mov
pop
sbb
jmp
jg
dec
jmp
dec
mov
or
jmp
adc
xor
mov
dec
popa
pushf
mov
xchg
(bad)
jno
sub
aas
lods
xchg
test
scas
shr
push
add
sbb
dec
mov
mov
xor
or
ja
or
sbb
lea
mov
pop
imul
test
xor
imul
mov
pop
or
(bad)
cwde
mov
ds
fsubr
and
or
gs
push
call
jmp
xchg
fs
sub
repnz
mov
scas
mov
vmread
shl
int3
fs
test
jge
ror
cwde
push
outs
fcom
imul
cmovae
gs
jg
(bad)
retf
sbb
shr
or
jae
jle
idiv
sbb
cmps
xor
cmp
clc
ret
or
xor
sub
stc
out
inc
sub
xchg
loop
push
cmc
sbb
pushf
in
loopne
clc
in
das
clc
cdq
nop
jne
test
(bad)
jmp
jmp
or
es
int
fnstsw
popa
sbb
jmp
pop
xor
(bad)
and
mov
mov
popf
mov
hlt
mov
cdq
pusha
add
pop
popf
mov
inc
dec
into
aam
pop
xlat
stc
inc
xchg
sbb
xor
push
and
out
xchg
inc
push
push
(bad)
in
xor
int
stos
dec
add
rcr
shl
inc
shl
iret
out
pop
inc
repnz
and
sub
adc
enter
les
adc
nop
ror
pop
push
loope
cmp
dec
jmp
in
jbe
push
and
push
push
sbb
and
daa
pop
data16
sahf
xchg
mov
mov
jecxz
out
add
and
cmp
pop
sub
loop
ret
jne
push
xor
push
jbe
xor
cmp
scas
sub
pop
mov
mov
in
ds
and
sahf
hlt
cmp
fucomi
adc
enter
jl
pop
test
cmps
jne
test
add
or
or
mov
les
ins
je
call
lods
rcl
jns
push
mov
add
sbb
cmp
retf
mov
xor
lods
or
popa
in
fcmovu
push
inc
inc
dec
sbb
dec
ins
push
cmps
xor
pop
pop
(bad)
push
stc
jo
les
cwde
pop
in
adc
test
mov
mov
push
add
fcomip
jle
arpl
or
dec
inc
inc
or
pop
jb
and
rcr
add
or
sub
xorps
or
sar
les
loope
cmc
loopne
aad
sub
div
shl
call
fild
into
lds
adc
cmps
movs
call
inc
mov
call
jns
push
(bad)
push
pop
push
inc
fsubr
dec
push
mov
sar
movs
sub
lahf
jmp
and
ss
cmp
xchg
jge
mov
inc
adc
lock
mov
pop
lea
lea
adc
inc
cmps
(bad)
xor
xchg
sub
and
mov
mov
retf
and
loop
pop
jge
dec
dec
dec
jnp
lock
push
imul
fsubr
inc
(bad)
outs
shl
sti
loop
pushf
cmp
lods
pop
pop
jp
mov
ins
mov
dec
or
add
aam
pushf
push
(bad)
stos
sbb
and
or
mov
inc
call
cmp
push
mov
test
cmp
dec
jnp
mov
inc
and
iret
xor
adc
ja
jle
sti
iret
test
mov
inc
xchg
mov
jo
retf
(bad)
xlat
icebp
mov
fdivr
dec
mov
enter
mov
and
and
mov
mov
(bad)
push
ret
xor
mov
scas
bnd
inc
fcmovbe
push
lock
pop
adc
mov
dec
in
js
test
das
add
outs
pop
ret
int3
hlt
(bad)
pop
dec
cdq
stos
xor
adc
xor
leave
add
js
and
inc
call
cmps
jbe
mov
adc
mov
(bad)
xchg
js
mov
lods
sti
xor
sub
sbb
jmp
ror
test
jge
shl
and
rcr
jne
aam
out
pop
sub
jmp
pop
cmps
push
stos
arpl
sbb
popa
adc
aad
dec
dec
test
movs
test
xchg
mov
aaa
(bad)
jmp
mov
jns
hlt
(bad)
into
movs
(bad)
jle
push
sub
mov
fwait
xor
cmp
in
aas
cli
adc
inc
xor
dec
adc
inc
icebp
add
cwde
ds
pop
scas
aas
push
and
push
pop
push
push
add
mov
dec
cmps
loopne
loop
ds
jmp
add
push
sbb
add
mov
inc
jl
int3
mov
inc
lods
not
cdq
ins
jne
out
cmp
imul
ret
retf
cwde
xchg
std
jne
or
rol
enter
sbb
mov
mov
int
cs
add
out
js
call
or
lods
lock
repnz
pop
ins
jo
scas
std
add
out
sbb
loope
sti
test
test
retf
push
into
scas
aaa
sub
mov
repz
pushw
cdq
cmp
jl
and
cmps
bound
add
adc
jmp
jmp
std
dec
lea
pusha
push
inc
mov
cmp
dec
imul
xchg
in
pop
mov
or
mov
lea
mov
popa
jl
leave
adc
mov
out
inc
sub
movsx
aad
inc
push
aad
mov
sub
sbb
mov
sbb
or
cwde
adc
(bad)
sbb
cdq
cmp
ror
mov
push
in
inc
rcr
aam
shl
into
xchg
mov
cmp
hlt
mov
(bad)
call
push
push
out
vcvtsi2ss
in
jbe
lahf
pop
xchg
dec
fcom
sets
cmp
mov
out
ror
cmp
sub
sti
mov
(bad)
ss
rol
push
dec
mov
shr
dec
adc
cmps
imul
(bad)
pop
lea
bswap
jbe
sub
fucomip
xor
into
in
xor
and
push
iret
dec
sub
les
pop
stos
jmp
xor
lods
mov
adc
dec
or
test
dec
jns
mov
ins
ds
add
lock
xchg
cli
mov
fs
push
(bad)
sbb
and
jnp
call
scas
or
mul
cs
mov
pusha
dec
sub
inc
out
stc
ss
push
or
fisubr
test
sub
dec
fs
cmp
jge
int
cmps
mov
je
xchg
xchg
imul
stos
icebp
ds
push
mov
push
loopne
push
pop
mov
add
xor
jno
das
and
adc
push
movs
(bad)
cmp
cdq
lock
jns
aas
int
cdq
pop
xor
(bad)
jns
sbb
push
cmp
mov
jmp
add
adc
rcr
and
or
mov
lods
mov
sbb
mov
neg
dec
xchg
pop
ficomp
out
xchg
push
and
jmp
push
rcl
jge
inc
pop
adc
jns
adc
sbb
push
mov
xchg
cmp
sbb
sub
push
xchg
movs
cld
jge
loope
or
dec
stos
fs
call
sub
add
push
ret
jo
jo
gs
mov
and
cmp
xchg
popf
add
mov
std
rcl
sbb
dec
and
adc
mov
(bad)
into
je
ss
cmc
ja
sbb
js
out
cmps
inc
mov
test
scas
dec
add
cld
inc
stos
mov
js
out
aaa
sub
or
loop
xlat
mov
sub
dec
push
xor
das
sbb
cmp
push
in
adc
inc
sub
call
xchg
mov
or
pop
push
or
mov
lahf
sub
mov
xor
mov
cmp
mul
jb
stos
inc
(bad)
add
js
call
mov
(bad)
clc
stos
mov
outs
std
out
not
cmp
dec
jb
xchg
jno
loopne
fmulp
dec
sbb
lds
inc
or
and
mul
movs
pop
nop
(bad)
inc
adc
sub
pop
cmp
mov
add
test
enter
scas
xor
or
nop
push
scas
lock
mov
shr
ds
or
aad
(bad)
or
inc
lods
adc
cs
mov
dec
out
and
sub
xchg
repnz
aad
mov
fwait
iret
nop
clc
sub
pop
cdq
sti
shr
retf
out
cmp
adc
add
jecxz
icebp
clc
retf
and
push
adc
pop
cmp
out
das
dec
test
inc
xchg
pop
scas
mov
ins
div
sahf
popa
xchg
dec
fdivrp
pause
ja
(bad)
into
stc
sar
arpl
outs
jmp
or
out
pop
mov
push
clc
sbb
mov
idiv
adc
mov
cmc
mov
mov
and
inc
sti
fild
sub
or
popf
fld
(bad)
aad
mov
fcomp
scas
fcom
push
sahf
cmp
jge
mov
jno
call
ja
or
fnsave
push
cs
cmps
je
inc
sbb
js
retf
nop
jae
lahf
test
mov
jmp
loop
add
and
fsubp
ficomp
sbb
push
(bad)
test
(bad)
fbld
cmp
mov
xchg
dec
outs
mov
sub
icebp
les
(bad)
cwde
outs
pop
test
ja
xor
jae
sbb
sub
fidiv
add
pop
das
mov
sti
dec
(bad)
loopne
lds
mov
mov
push
mov
cmp
jb
mov
mov
test
mov
sbb
ret
mov
(bad)
enter
test
ficom
sbb
inc
popf
push
repnz
mov
push
and
int3
adc
jae
(bad)
out
test
outs
jno
mov
pop
pop
push
xor
cmp
jnp
jecxz
xor
inc
and
mov
push
out
xchg
inc
pop
xchg
aaa
mov
mov
sbb
and
jo
inc
or
arpl
std
jbe
(bad)
mov
rcl
and
sbb
dec
sub
or
jp
(bad)
shr
push
mov
jb
arpl
cmp
mov
lock
sub
leave
lds
xor
loopne
jle
push
loope
test
mov
movs
jb
(bad)
pop
in
in
fadd
dec
xor
arpl
test
shl
out
push
cwde
cmp
pop
xchg
jae
inc
add
retf
mov
in
push
dec
out
sub
jns
inc
sub
jne
cwde
rol
xor
push
xchg
jmp
xchg
or
imul
repz
push
mov
push
iret
ret
add
or
xchg
shr
inc
out
push
sbb
mov
inc
pop
icebp
lock
inc
ss
or
add
inc
and
pop
dec
lock
mov
out
mov
or
les
lock
aad
cli
sub
mov
test
xor
pop
ss
pop
add
push
ror
fsubr
xchg
stos
adc
cmp
dec
movs
sahf
push
inc
pop
dec
ret
xor
push
xchg
mov
mov
out
mov
jmp
cmp
cwde
ins
xchg
sti
inc
push
aas
pop
xor
or
xchg
xchg
popa
cmp
sbb
pop
xchg
int
push
jb
pop
add
or
and
push
ret
add
jp
sbb
ss
pushf
movs
and
add
imul
je
add
pushf
jge
pop
or
xor
data16
inc
jne
stos
iret
dec
mov
inc
xor
cmp
jb
scas
sbb
and
std
lahf
mov
daa
jo
push
fcomi
mov
stc
icebp
or
ret
adc
dec
add
mov
stos
adc
xchg
mov
jmp
mov
fcomp
jp
fidiv
es
xor
pop
jg
push
pop
stc
cdq
int
sbb
or
movs
les
push
sub
aas
shl
mov
xor
bound
pop
inc
push
sub
imul
gs
xor
test
(bad)
sub
repz
or
mov
dec
in
dec
adc
loopne
pop
shr
fxch
or
aaa
shl
(bad)
in
inc
stc
aaa
dec
loope
int3
pop
cld
jle
neg
fiadd
pop
inc
stos
jge
pushf
cs
pop
or
pop
add
call
test
xor
aam
pop
(bad)
iret
xor
sbb
inc
out
aam
mov
dec
push
stos
(bad)
jno
test
movs
in
repnz
jno
sub
or
mov
call
or
inc
arpl
ins
inc
cmp
in
adc
loopne
ret
ds
push
inc
xor
int
xlat
in
movs
jmp
(bad)
adc
outs
shl
and
shr
inc
inc
sub
rcr
aas
clc
xlat
in
mov
repz
(bad)
adc
mov
(bad)
adc
mov
xor
cdq
data16
test
xor
rol
in
scas
test
scas
jmp
ret
aas
dec
lea
scas
dec
das
inc
ins
stos
pop
sub
jecxz
inc
(bad)
mov
and
rcl
or
sbb
pop
adc
dec
xor
repz
sbb
das
pop
stc
mov
sbb
cmp
ret
pushf
loope
sub
mov
fnstcw
aaa
cld
aam
dec
out
add
punpckhwd
not
or
stc
repz
adc
cmps
adc
adc
push
inc
push
ret
sbb
shl
outs
retf
(bad)
or
push
sbb
ja
je
lock
pop
fnstcw
push
jp
cmps
cmp
enter
aam
pop
add
pop
cmp
xchg
inc
fimul
in
cmp
out
int3
cs
loop
lahf
pop
(bad)
xadd
pop
pop
add
outs
imul
inc
sub
pop
ror
lea
cmc
cmps
pop
and
enter
repnz
mov
sti
mov
mul
sub
sbb
cmp
sbb
sub
mov
dec
xchg
je
mov
popa
outs
add
out
stos
neg
ja
fstp
mov
scas
fadd
xlat
mov
add
pop
jno
sbb
aam
movs
addr16
outs
ret
sbb
leave
lods
add
sbb
jg
int
cmp
cmps
mov
int
int
dec
ret
xchg
pop
pop
or
jmp
and
jns
outs
mov
jae
or
iret
imul
cmp
push
repnz
leave
das
lahf
push
imul
mov
adc
ror
shr
cmps
lahf
arpl
out
pop
or
ret
mov
xchg
sub
sub
jne
call
nop
rcl
mov
xor
xchg
push
pop
xlat
sub
outs
pop
cmc
int
in
out
enter
cmp
cwde
(bad)
ss
dec
pop
mov
shl
mov
and
lahf
addr16
inc
out
stos
push
jns
or
xor
rcl
mov
js
aas
pop
cmps
rcr
fcomip
xchg
push
sbb
mov
mov
dec
movs
fisubr
daa
inc
mov
cmp
jmp
cmc
rcl
sub
cli
ret
gs
sbb
repnz
xchg
stc
mov
shr
and
jae
xchg
jae
add
jae
push
fpatan
and
leave
cmp
mul
mov
and
push
ret
push
ds
inc
ins
cmp
mov
les
adc
mov
cdq
fs
in
movs
pop
sub
sub
mov
ja
test
sti
pushf
push
imul
pop
cdq
xor
push
mov
cmp
or
or
movs
xor
test
cmp
jae
mov
pop
scas
pop
cwde
in
sbb
pop
push
push
lds
dec
pop
rcl
xchg
sub
call
sbb
xor
sub
int
fild
xchg
adc
xor
stc
pusha
enter
adc
jbe
ss
mov
repz
cmp
mov
push
idiv
sub
call
mov
and
test
xor
cdq
popf
(bad)
cli
or
inc
cmp
push
add
mov
movs
movs
push
xor
dec
fdiv
xor
mov
int3
mov
jmp
sbb
jmp
scas
mov
repz
xchg
pop
pop
pushf
dec
test
test
dec
jbe
or
and
and
test
(bad)
mov
dec
push
jle
arpl
in
rcr
loop
dec
add
sbb
int3
and
add
sar
xor
inc
fs
or
loop
enter
sub
call
imul
shr
cmc
xchg
fs
pop
jle
test
lock
push
std
outs
inc
fdiv
add
mov
jb
cmp
mov
fld
mov
in
jmp
sub
xor
stos
push
xor
int
clc
aad
jg
out
and
cmc
mov
leave
out
mov
stc
mov
out
mov
push
cli
neg
add
loope
cmp
push
xchg
push
mov
sti
jae
jmp
out
dec
jb
push
lods
mov
dec
mov
cs
push
xchg
test
inc
je
jo
or
mov
lock
mov
dec
mov
add
lock
call
sub
icebp
stos
in
sbb
popf
aam
mov
push
lods
pop
adc
jl
sub
sub
sub
and
adc
jno
xor
loope
and
aam
pop
sbb
jl
mov
jae
dec
dec
pop
ins
mov
icebp
adc
(bad)
shr
mov
daa
push
sbb
xchg
(bad)
jle
cs
lods
jg
fadd
jmp
fs
sahf
scas
into
xchg
dec
xlat
fcomp
mov
(bad)
or
pop
or
jmp
ror
ror
sub
mov
jnp
lock
pop
rcl
and
inc
xchg
aas
pushf
mov
mov
adc
loope
jle
cmp
data16
into
loopne
sub
dec
fisub
fmul
and
inc
cwde
xchg
jp
out
mov
pop
push
(bad)
clc
loop
fs
je
xchg
das
or
jns
dec
cwde
sbb
in
(bad)
xor
popa
lock
jmp
push
mov
leave
icebp
ins
xlat
cmpxchg
addr16
out
ja
hlt
pop
jne
(bad)
in
and
imul
stc
movs
jno
loope
jns
jp
jge
push
push
cmp
mov
push
pop
(bad)
and
mov
stos
data16
xchg
add
fidiv
push
out
test
or
ret
mov
sti
cs
sub
mov
adc
mov
sbb
pop
mov
into
sbb
mov
imul
mov
(bad)
push
xor
lea
das
inc
pop
mov
jb
pop
adc
dec
jnp
in
mov
adc
push
add
outs
jnp
or
jne
pop
sahf
lea
cmp
cli
jp
push
les
jae
mov
outs
ss
data16
dec
pop
movs
pop
mov
xor
pop
sub
push
out
mov
sbb
mov
xchg
cdq
(bad)
push
fimul
xchg
js
mov
dec
addr16
fdiv
mov
rol
(bad)
pop
out
cwde
adc
sar
adc
retf
fldcw
test
inc
add
scas
push
and
mov
push
push
clc
pop
xchg
adc
cdq
pop
add
pop
sbb
test
jle
icebp
(bad)
add
cld
(bad)
jmp
cli
add
add
dec
movs
std
movs
inc
js
sub
fnstcw
adc
sub
loop
mov
pop
dec
xor
push
ror
mov
xor
push
mov
xchg
inc
in
ja
jecxz
cdq
push
mov
mov
pop
cmp
lahf
jmp
inc
(bad)
mov
loope
xchg
int3
and
loopne
je
jo
jbe
or
popa
xor
adc
int3
fstp
call
xchg
cmp
pop
fld
jo
movs
fld
div
push
cmp
repnz
xchg
pushf
or
clc
xor
jg
cmp
mov
imul
jmp
inc
add
mov
mov
dec
inc
cdq
popa
lods
aaa
test
arpl
ds
repz
mov
add
sub
mov
inc
inc
mov
xchg
mov
inc
(bad)
dec
lahf
(bad)
mov
out
les
mov
(bad)
aam
pop
shr
jns
call
mov
pushf
sub
push
inc
jl
fldenv
jnp
js
nop
mov
and
hlt
adc
and
jl
sub
pop
out
ins
or
add
loopne
dec
aas
scas
push
xchg
jecxz
retf
mov
mov
pop
imul
mov
(bad)
push
and
int
jmp
shl
jno
or
fsubr
cmp
dec
push
imul
je
sbb
jp
sar
into
retf
xchg
sub
je
xor
pop
pop
les
or
pop
jmp
add
fs
jmp
ret
xor
clc
out
lea
call
add
(bad)
je
test
arpl
push
mov
sbb
add
push
xchg
lods
pusha
retf
out
inc
lea
jb
jnp
push
fs
hlt
mov
in
adc
cli
pushf
or
(bad)
cmp
sbb
xchg
adc
clc
lock
inc
sub
test
and
js
scas
mov
les
xor
xchg
or
stos
scas
sahf
es
movs
stos
ins
push
pusha
enter
into
xor
sbb
cwde
popa
mov
sbb
inc
inc
xchg
adc
or
(bad)
jmp
jae
or
loope
jg
jbe
lods
sbb
xchg
sbb
push
jmp
pop
repnz
dec
and
jne
add
mov
call
xchg
pop
sar
(bad)
sti
push
movs
in
mov
test
(bad)
imul
scas
cmps
mov
add
popa
les
lods
mov
fmul
movs
stos
icebp
adc
and
push
add
out
and
fbstp
stc
mov
xchg
jge
in
cmp
(bad)
mov
inc
xchg
inc
sahf
fadd
jecxz
cmp
mov
mov
jnp
leave
mov
daa
icebp
sti
add
push
mov
repz
xchg
loopne
mov
cmc
jge
jp
sub
push
jno
or
xor
popf
scas
inc
int3
bound
pop
out
or
xor
mov
es
cmp
pop
(bad)
cmps
mov
and
cdq
cmp
(bad)
inc
mov
mov
push
repz
enter
into
test
mov
repnz
inc
jmp
xchg
cs
dec
mov
adc
and
in
xor
lock
add
jne
dec
cwde
loop
out
sti
sbb
pop
adc
mov
add
jns
aas
arpl
outs
mov
mov
sti
mov
xor
mov
pop
scas
ds
jb
push
dec
add
xchg
(bad)
lock
ins
and
sub
push
mov
push
mov
aam
test
jle
shl
xor
test
int3
pop
clc
cmc
idiv
(bad)
xor
es
retf
cs
mov
cmp
retf
mov
aam
lahf
mov
mov
adc
mov
jecxz
cmp
pop
data16
and
imul
and
loop
(bad)
test
fcomp
mov
xlat
push
push
test
stos
pop
cmp
test
cs
cmp
sub
mov
rcl
push
movs
jmp
cmp
sub
xor
std
stc
xlat
cdq
sub
jmp
inc
mov
lahf
mov
clc
push
mov
mov
inc
iret
or
enter
inc
mov
test
dec
cdq
mov
fnsave
sar
movs
pop
lods
shl
sub
dec
ror
mov
mov
push
cli
sub
repnz
loopne
lock
hlt
push
std
jle
aas
xor
mov
repnz
aas
mov
cmp
and
jmp
lea
addr16
in
jbe
sbb
out
imul
stc
xchg
sub
sbb
mov
sbb
imul
test
fild
sub
sbb
push
ds
add
call
fwait
ins
mov
sti
inc
cmp
push
mov
fisttp
fadd
push
push
imul
bound
xchg
lods
mov
sbb
cmps
fs
iret
mov
popf
pop
xchg
(bad)
mov
mov
sub
mov
dec
fbld
pop
js
sbb
pop
je
int3
mul
out
sbb
ret
or
loop
pop
mov
sahf
lods
sar
in
or
mov
push
pop
lock
sub
xchg
xchg
push
lods
ja
cvtpi2ps
dec
mov
sbb
and
(bad)
in
jp
cmp
add
call
jnp
sub
xchg
icebp
hlt
imul
sbb
jmp
xchg
clc
jge
ds
ja
jns
jle
pop
or
jmp
push
cmp
mov
mov
push
dec
pusha
aad
mov
jecxz
enter
fstp
cmp
daa
jg
aad
dec
sahf
cs
and
sub
xchg
and
fbstp
push
(bad)
int3
cwde
mov
hlt
fbld
fs
mov
add
add
sbb
xor
cmps
push
(bad)
and
and
mov
jns
push
dec
and
sbb
sbb
cli
pop
or
jge
sub
xchg
jns
gs
xchg
sub
loopne
in
mov
test
cmp
imul
in
mov
popa
xchg
xchg
dec
out
in
bound
das
mov
cdq
test
adc
ds
iret
icebp
push
or
mov
mov
mov
pop
ins
jbe
cvtpi2ps
ins
in
jne
(bad)
pop
loop
and
aaa
mov
inc
cld
loope
push
adc
xlat
pop
adc
mov
js
retf
or
jb
sbb
push
scas
push
cmps
or
ja
btr
dec
inc
lahf
sbb
shl
pop
pop
test
cmp
xchg
mov
call
push
popa
dec
mov
pop
and
mov
inc
mov
push
fidiv
enter
lods
or
or
imul
pop
out
add
lods
cld
cli
push
xchg
(bad)
inc
ss
dec
and
lahf
(bad)
imul
and
mov
ret
test
jb
sbb
dec
pop
xchg
push
cdq
aaa
mov
push
retf
(bad)
push
in
idiv
adc
sbb
inc
lds
ins
sbb
inc
mov
inc
adc
jnp
or
mov
dec
cmc
sbb
inc
int3
add
(bad)
(bad)
sbb
into
popf
fcomp
addr16
jge
test
hlt
xchg
push
out
push
stc
pop
scas
inc
iret
pop
mov
cmp
pop
adc
mov
aaa
inc
pop
sti
out
sbb
sbb
loop
and
inc
mov
shl
stc
repz
lods
dec
std
ins
xor
pop
jp
pop
adc
add
stc
sbb
stos
cmp
mov
push
mov
sahf
jp
(bad)
outs
mov
(bad)
ds
xchg
mov
adc
ds
adc
or
imul
in
in
cmc
idiv
inc
inc
push
xor
lock
lahf
cwde
pop
les
pop
sbb
sbb
fisttp
mov
jecxz
cld
xlat
xchg
test
movs
cmp
jmp
out
nop
ss
aad
dec
data16
repnz
pusha
test
sub
call
(bad)
mov
loop
shl
jo
fs
mov
adc
mov
stc
daa
push
bound
xor
mov
push
aad
stos
popa
mov
push
ficom
daa
xlat
stc
imul
jnp
icebp
xchg
sub
pop
in
mov
mov
inc
mov
adc
mov
fld
fidiv
bswap
and
and
inc
gs
test
not
scas
in
dec
fmul
jge
sub
sub
sbb
mov
add
neg
pop
inc
lahf
jle
cmp
dec
mov
cwde
test
lods
test
inc
pop
clc
adc
mov
cs
sub
stos
xchg
mov
outs
mov
sbb
in
sub
sub
pusha
lods
jmp
repnz
fmul
sbb
add
or
lods
dec
mov
xchg
loop
jns
out
lock
sar
imul
shl
xchg
mov
sti
call
cwde
xchg
mov
pop
push
les
aaa
dec
mov
sub
ja
pop
push
inc
push
add
push
imul
adc
xchg
cdq
push
sbb
jne
fisubr
sbb
idiv
out
push
shl
out
gs
xor
test
mov
xor
pop
adc
rcr
or
daa
and
push
outs
test
pusha
inc
mov
push
iret
mov
adc
cmp
add
fsub
cwde
add
into
mov
ret
and
retf
mov
cdq
sub
sub
push
shl
ja
mov
or
jno
pop
mov
sbb
cs
add
enter
es
loope
fadd
int
mov
and
fld
mov
lods
push
popa
sti
ret
and
mov
pop
and
mov
out
in
xchg
scas
sub
xor
out
lods
mov
mov
sub
in
stos
jbe
leave
in
mov
cld
dec
test
mov
pop
aas
ss
inc
fist
mov
idiv
pop
jb
xor
(bad)
gs
jnp
xchg
sbb
sahf
outs
addr16
xor
out
xchg
fwait
lods
pop
in
or
mov
(bad)
adc
add
sbb
std
cmps
lock
xor
jge
pop
push
cmps
sub
xchg
xor
outs
inc
neg
xor
and
inc
push
xchg
loope
adc
clc
stos
add
xchg
cmc
jbe
ins
xchg
add
and
cmp
(bad)
xchg
mov
cld
xor
mov
pop
movs
ret
inc
pusha
test
pushf
call
cs
inc
mov
test
outs
push
aas
jbe
movs
cmp
jl
bound
sub
xchg
imul
pop
mov
mov
mov
mov
dec
jae
test
mov
sahf
mov
or
adc
arpl
fld
push
cmp
call
lock
aam
jnp
mov
mov
icebp
pop
pop
hlt
xchg
cmp
mov
js
mov
lods
jle
iret
cmp
jnp
xor
pop
cmp
xchg
push
xlat
xchg
cwde
minps
ficomp
fisub
jmp
outs
rcr
gs
adc
mov
add
bound
lods
jnp
jle
sbb
or
sbb
push
push
loopne
push
int3
mov
pop
or
adc
add
sbb
xor
pop
shl
sbb
jge
aad
cld
pop
mov
fs
pop
retf
xadd
ret
inc
sbb
pop
jg
leave
jmp
adc
aas
loop
pusha
test
sbb
mov
lods
inc
rol
jmp
imul
nop
add
cmps
cmp
add
lods
cmp
mov
xchg
out
test
cmp
pop
pop
stos
mov
movs
dec
push
mov
dec
movs
or
daa
sub
iret
cmp
scas
test
adc
(bad)
out
stc
push
ret
sbb
xchg
sub
or
idiv
cmp
jno
xchg
or
cld
call
iret
adc
adc
lea
shl
and
je
xor
sub
xchg
fst
rol
sbb
call
xchg
inc
mov
pop
pop
jbe
sub
dec
into
dec
sub
retf
pop
dec
sbb
jne
xor
iret
mov
ficom
push
dec
dec
sar
jnp
mov
sahf
sub
jbe
out
sbb
das
out
and
and
pop
mov
dec
jae
push
pop
clc
inc
xor
sbb
and
iret
ret
xchg
xchg
sub
inc
std
add
aas
ror
in
ins
mov
mov
adc
mov
fild
pop
cdq
popa
lods
je
jne
ds
int
scas
push
or
test
icebp
jmp
call
popf
inc
mov
xor
mov
rcr
loop
mov
jle
jne
sahf
mov
jns
sar
push
pop
push
sbb
and
adc
push
ret
sbb
iret
dec
mov
push
repnz
test
cwde
int3
xor
ins
aam
cmp
inc
aaa
mov
in
fcmovne
repz
movs
add
(bad)
mov
pop
dec
sbb
sub
xchg
and
dec
adc
adc
(bad)
inc
les
jbe
cs
pop
pop
sar
(bad)
out
(bad)
xchg
mov
pop
push
dec
and
adc
or
fdivr
arpl
inc
icebp
xchg
sub
sub
out
jle
outs
leave
call
retf
mov
test
cs
push
xor
ins
or
lds
loop
push
jp
jg
add
pop
out
lods
xor
in
add
fwait
shl
gs
es
adc
dec
mov
xchg
jns
cmp
scas
xchg
or
out
and
fs
pop
aas
les
push
mov
(bad)
rcr
adc
mov
sbb
pop
jo
push
and
pop
dec
xor
push
mov
or
mov
mov
in
aas
mov
xlat
(bad)
call
cmp
inc
cmps
hlt
mov
das
push
outs
daa
lds
pop
cld
or
rcr
mov
stc
enter
jp
ins
(bad)
sti
add
push
div
cmps
xor
scas
adc
mov
loope
cmps
or
hlt
and
inc
test
xor
push
leave
xchg
mov
ror
std
mov
popf
mov
mov
push
jl
mov
jg
or
cmp
inc
mov
push
push
xchg
and
sbb
out
add
adc
loope
jns
mov
add
xor
mov
push
jne
or
cmp
push
movs
call
pop
mov
test
ror
xlat
mov
adc
addr16
inc
aaa
and
in
loopne
lods
add
aaa
push
imul
jp
xor
pop
ds
cwde
push
pop
or
sbb
sbb
push
pop
in
mov
mov
jo
cs
addr16
mov
push
std
mov
call
fisubr
les
lods
or
xlat
and
lds
data16
cmc
dec
sahf
xchg
(bad)
cmp
mov
ins
push
sbb
xchg
mov
pop
inc
dec
xchg
into
inc
lahf
or
mov
call
mov
lea
out
push
sti
jp
(bad)
push
sub
cld
(bad)
jmp
in
jmp
pusha
clc
loopne
ret
push
ds
push
shl
fwait
les
(bad)
fidivr
dec
and
mov
cmps
pop
lds
jnp
mov
mov
mov
pop
in
loopne
push
push
jmp
inc
inc
adc
jecxz
mov
lods
cmp
ds
push
and
dec
jae
pop
fwait
cld
pop
mov
pushf
arpl
sbb
inc
cmps
jns
mov
push
cmp
sbb
test
fistp
mov
clc
das
add
ret
cdq
je
mov
jbe
mov
ret
jnp
rol
retf
and
jmp
pop
jle
scas
jb
dec
sub
ret
and
fld
std
sub
popa
mov
ror
call
add
call
cmp
jge
cwde
outs
mov
push
mov
mov
push
mov
jg
xor
hlt
xor
enter
xchg
mov
int3
cmps
inc
cmp
push
or
neg
int3
add
xchg
mov
ins
dec
popf
pop
cmp
call
cmp
enter
pop
daa
test
lds
enter
(bad)
jge
cmp
push
jno
sub
sbb
mov
push
sti
data16
mov
inc
inc
adc
les
xchg
and
aam
pop
cmps
adc
(bad)
mov
retf
in
mov
mov
jg
sbb
sub
fld
cli
lock
xor
es
pushf
int
(bad)
jmp
xor
outs
dec
jae
pop
inc
out
or
pushf
jp
adc
outs
mov
(bad)
scas
mov
inc
aam
iret
lock
xchg
aaa
jmp
dec
sti
pop
push
and
xlat
pop
dec
push
pop
push
mov
xor
jnp
pushf
dec
mov
dec
in
fbstp
and
pop
hlt
or
inc
mov
mov
aas
imul
lods
xchg
push
clc
adc
cmp
xor
nop
(bad)
ds
addr16
iret
shr
ret
and
ds
add
mov
sub
sub
mov
and
mov
ds
sar
fadd
dec
xchg
pop
add
leave
xor
ret
jmp
or
and
movs
push
xor
xlat
mov
cmps
or
and
xchg
mov
fist
int
mov
pop
ins
pop
push
jae
mov
je
shl
xor
dec
push
ins
push
xchg
mov
(bad)
fist
push
out
cmp
stos
in
int3
jp
(bad)
xor
or
scas
dec
sahf
pop
pop
retf
pop
rcl
ret
sub
add
clc
jl
push
jbe
dec
gs
sub
jge
call
dec
mov
movs
mov
stc
outs
je
test
icebp
adc
int3
jns
dec
shl
(bad)
xor
dec
xor
jo
adc
int
dec
mov
push
add
push
jmp
push
pop
lods
xchg
outs
push
push
repnz
outs
dec
mov
enter
xor
fs
add
je
inc
pop
xchg
es
cdq
in
cmps
pop
nop
fwait
int
push
fs
stc
and
pop
inc
ss
in
pusha
mov
clc
jge
call
add
aam
popf
xor
mov
fwait
push
xor
ret
call
pop
jmp
inc
sub
test
ret
repnz
in
mov
xchg
mov
ss
icebp
fild
fwait
scas
jae
jmp
and
mov
lahf
scas
mov
mov
mov
shl
xchg
push
mov
and
mov
in
std
cmp
cld
sbb
(bad)
jl
in
fistp
std
enter
inc
aas
leave
movs
fidiv
int3
cmp
shl
dec
lods
jmp
adc
clc
call
out
push
das
or
mov
in
mov
dec
inc
jl
out
les
mov
out
pushf
enter
test
lea
dec
jne
fs
fcomp
sub
sub
push
data16
clc
mov
xchg
cmps
add
add
sar
in
jp
xchg
pop
movs
mov
sub
dec
inc
sbb
mov
ins
mov
clc
movs
jle
mov
and
xchg
jmp
dec
repz
mov
mov
add
and
test
movs
in
test
dec
cmp
sub
or
cmc
sub
(bad)
fsub
jp
or
popf
mov
aam
and
mov
pop
mov
sub
mov
and
pop
out
sbb
mov
push
cmp
mov
fmul
ss
int3
addr16
dec
or
(bad)
shr
xor
pusha
cmp
inc
fs
and
pushf
ins
pop
xchg
fstp
ss
pop
sub
scas
daa
cmps
pop
jp
lods
mov
cmp
cmc
dec
(bad)
cmp
jne
jecxz
or
jp
or
lock
add
dec
mov
xchg
sbb
ret
pop
cmp
mov
lds
or
inc
popa
mov
mov
cmc
in
sub
lock
jmp
fisubr
jns
enter
cld
stos
cmp
push
enter
dec
fwait
nop
lea
or
dec
lea
jg
mov
inc
js
arpl
or
pop
mov
popa
xchg
leave
sub
retf
dec
sti
xor
xchg
mov
sbb
scas
nop
jge
add
xchg
aaa
in
idiv
retf
push
test
or
inc
(bad)
lods
xor
xor
mov
add
ss
cmc
adc
neg
aas
cmp
js
movs
push
jb
sbb
lods
dec
jns
mov
into
sub
mov
jle
fdiv
dec
bound
mov
stos
and
ins
ds
sbb
out
popf
or
nop
cdq
es
pop
sbb
mov
cmps
(bad)
pop
sahf
in
or
lock
push
jp
inc
frndint
jo
repnz
xchg
and
inc
add
and
xchg
jp
inc
inc
inc
xor
dec
ins
xchg
mov
(bad)
stc
cmp
xor
inc
cli
sub
fcom
scas
shr
xchg
lods
mov
(bad)
scas
push
jo
test
xlat
outs
imul
mov
sbb
stos
jecxz
mov
pushf
movs
jnp
push
push
cmps
test
inc
leave
xor
js
les
sti
sbb
jno
ins
or
xchg
mov
push
xchg
inc
mov
mov
jne
sar
mov
rol
cmp
sahf
mov
sub
jmp
pushf
test
jo
icebp
jmp
xor
pop
dec
icebp
aam
jle
mov
enter
dec
add
fbld
cmp
ins
or
ins
mov
je
gs
dec
mov
push
outs
xchg
in
imul
test
mov
daa
ret
mov
loope
and
sar
icebp
shl
mov
xchg
jp
arpl
pop
retf
repnz
repz
(bad)
jecxz
xchg
repnz
fdiv
sti
ins
fdivr
xor
call
sub
adc
pop
xchg
int
or
and
sbb
mov
in
stc
push
inc
jmpw
or
sub
aas
das
retf
movs
sbb
cmp
bnd
pop
sub
test
lock
cmps
xlat
rcl
retf
bound
mov
retf
(bad)
int3
mov
mov
(bad)
or
dec
dec
dec
scas
xor
movs
push
das
pop
fadd
lock
jo
imul
xchg
jge
hlt
add
push
idiv
jbe
mov
xchg
test
mov
mov
lds
or
(bad)
mov
fdivr
xor
imul
mov
jbe
pop
adc
outs
ins
arpl
xor
dec
std
popf
cmp
ret
add
out
add
mov
dec
pop
call
xchg
cmp
or
hlt
jmp
sbb
jmp
dec
and
and
pushf
test
or
faddp
cmps
mov
lahf
lea
fild
int
jns
mov
cmc
stos
sub
dec
jg
ja
sbb
xchg
pop
mov
pop
xchg
add
adc
(bad)
stc
cmc
gs
in
fisttp
mov
ret
in
dec
out
icebp
sub
or
dec
into
pushf
popa
sub
call
lds
(bad)
xor
sbb
enter
stos
ins
jmp
mov
pop
ds
cmc
in
add
shr
push
dec
adc
rcr
outs
inc
jmp
xchg
sbb
add
pop
mov
sahf
pop
aad
push
mov
retf
ret
and
sbb
lods
in
mov
sbb
stos
mov
xchg
add
sbb
fdiv
shl
mov
fwait
mov
fnsave
add
std
test
push
sahf
push
xchg
jnp
fst
fucomi
int
add
es
cmp
call
ins
fcmovnu
fwait
fwait
lahf
es
push
adc
push
sbb
out
out
popfw
aam
(bad)
jne
pop
cwde
out
lods
repz
push
dec
sub
cwde
xchg
cli
imul
and
mov
fild
iret
inc
mov
ret
pop
(bad)
stos
hlt
data16
xor
xor
dec
mov
imul
cmc
nop
mov
jl
cmc
shr
or
dec
mov
scas
jo
adc
ror
jmp
sub
test
mov
call
pop
xchg
push
pop
test
push
mov
pushf
sbb
mov
push
(bad)
stc
fistp
mov
mov
fst
jne
cmp
jecxz
mov
test
out
shl
xchg
and
scas
sub
lods
pop
call
fcom
sbb
test
mov
cs
cmp
xchg
lock
(bad)
bound
fisttp
shr
cmps
imul
test
adc
fdiv
aaa
jmp
dec
jle
dec
jl
dec
jl
xchg
fnstcw
(bad)
iret
jmp
je
(bad)
jge
out
ds
out
push
rol
dec
fst
clc
(bad)
rcl
inc
jmp
sub
cmc
bound
and
cmps
and
jno
lea
pop
or
and
push
pop
xchg
imul
sar
push
pusha
xor
xchg
jne
adc
rep
pop
pop
nop
aad
and
ret
repnz
call
sub
fistp
jmp
fstp
and
in
jl
mov
data16
icebp
xor
jmp
int
retf
(bad)
mov
push
fild
(bad)
xor
and
imul
enter
fsub
cli
or
mov
in
sbb
mov
sub
pop
xchg
dec
cmp
mov
cmp
jecxz
test
enter
pusha
or
cs
int
cmp
cmps
aam
(bad)
(bad)
out
jg
cs
ror
sti
stc
out
scas
in
adc
call
mov
in
mov
adc
aaa
shl
push
mov
xchg
je
mov
mov
jb
cs
pop
sbb
js
or
fwait
lods
lahf
dec
out
sbb
(bad)
jb
test
push
rol
cmp
into
cmp
call
call
adc
icebp
imul
xor
ja
or
mov
fwait
dec
or
aam
lea
shl
push
addr16
scas
dec
gs
loope
sub
aaa
adc
mov
pop
neg
inc
enter
mov
pop
(bad)
adc
mov
rcr
mov
adc
bound
mov
or
mov
sahf
push
sub
cld
jecxz
aas
add
mov
lods
jno
xchg
in
stos
shl
xchg
or
mov
std
sbb
lock
pop
lock
in
push
sub
sub
or
and
aas
gs
cmp
popa
stos
lods
xor
add
int3
fstp
xchg
cmp
in
div
ror
ret
ror
mov
pop
lods
push
nop
ins
lock
stos
dec
int3
movs
sub
xchg
cmp
add
pop
sbb
push
jge
mov
or
pop
add
inc
add
jecxz
ja
dec
mov
cmp
mov
add
out
and
sub
lds
sbb
mov
inc
jno
mov
das
jbe
jo
mov
call
xchg
dec
test
les
shr
test
in
push
add
mov
rol
retf
hlt
push
fild
adc
arpl
sub
mov
xchg
lods
fbld
sbb
add
imul
mov
stc
and
push
xor
test
jg
push
mov
and
rcr
pop
ins
jo
loop
repnz
or
cld
and
mov
lods
test
add
sub
shr
in
outs
pushf
cmp
inc
pop
ret
(bad)
daa
jmp
outs
xchg
fstp
inc
pop
inc
jo
mov
ror
aaa
xor
xchg
sub
xchg
in
test
sub
nop
fnstenv
add
xchg
push
adc
lods
cmp
mov
sbb
in
sbb
push
mov
fsubr
mov
ret
mov
or
push
xchg
and
mov
or
dec
loope
mov
xchg
push
pop
pop
add
and
imul
mov
neg
xchg
imul
mov
fnstcw
cmp
loopne
add
int
pop
shr
iret
leave
push
fisttp
xor
pop
jo
jle
cld
mov
dec
cmp
mov
mov
xchg
and
pop
mov
xchg
pop
cmp
sub
retf
cdq
in
imul
mul
jne
mov
xchg
call
mov
push
(bad)
mov
mov
jb
and
xor
pop
gs
leave
or
call
mov
in
mov
int3
scas
xchg
pusha
cmp
and
jmp
sub
out
popf
push
in
push
lea
in
jne
sbb
call
stc
nop
dec
call
sub
ins
cmp
imul
mov
fst
lods
jl
jnp
dec
clc
mov
sbb
icebp
jp
sub
aaa
jb
test
sbb
loope
sub
out
sub
cmp
mov
inc
fnstenv
push
out
push
rcr
add
lods
adc
sub
call
cmps
jge
mov
imul
add
jnp
sbb
lods
xor
jmp
es
adc
sbb
and
jge
int3
jnp
outs
mov
lock
xor
push
mov
xchg
adc
lahf
in
frstor
sbb
push
outs
ds
xchg
push
inc
imul
(bad)
cmp
mov
mov
xor
retf
aaa
push
in
mov
ss
ret
push
arpl
test
loopne
mov
push
adc
jo
das
pop
lea
cdq
fs
aaa
int3
pop
pop
std
stos
inc
lea
lods
sbb
pop
sbb
pop
mov
aaa
xor
or
jmp
imul
lahf
repnz
and
ret
inc
sbb
adc
dec
mov
fisttp
pusha
push
shl
push
ret
aaa
mov
test
call
ficom
stos
push
test
imul
inc
dec
or
int
mov
aad
adc
mov
or
sbb
lods
pop
inc
int3
sub
push
push
int
lea
jle
sbb
movs
xor
jb
mov
lahf
xor
dec
dec
hlt
cmp
in
daa
fsubr
inc
and
xchg
mov
daa
push
dec
inc
sti
mov
aad
inc
pop
dec
hlt
daa
aaa
push
xor
js
xor
out
and
mov
inc
inc
xchg
mov
loopne
jb
jnp
test
inc
adc
ror
fdivr
aas
std
pop
ins
xchg
ins
jecxz
xchg
xlat
xchg
or
or
mov
(bad)
adc
pop
and
inc
dec
fidivr
or
and
retf
or
jns
cwde
imul
movs
loope
icebp
push
cmc
mov
or
daa
xchg
cmp
adc
cdq
aaa
push
shr
out
loop
das
xchg
jo
addr16
ror
aad
adc
inc
test
and
inc
jae
pop
cmp
sbb
nop
inc
movs
sub
fnstenv
fldenv
aam
rol
sbb
xor
retf
jae
add
cmp
outs
cld
stos
aam
push
(bad)
ds
leave
clc
push
repnz
mov
or
mov
imul
push
pop
inc
xchg
dec
inc
lea
out
jnp
xchg
call
sbb
psubusw
out
and
push
dec
mov
sub
popa
pusha
sbb
mov
push
int
add
dec
xor
push
aad
fist
push
mov
add
xor
dec
jg
pusha
and
mov
pop
out
or
pop
xor
push
sbb
sbb
xor
add
xchg
add
jae
jg
out
popa
(bad)
ins
cmp
addr16
sub
rol
in
add
daa
jmp
mov
mov
jno
push
rcl
fs
iret
pusha
(bad)
jle
scas
std
test
jb
jmp
fldcw
cmp
iret
push
nop
int
xchg
inc
add
mov
stos
scas
xor
inc
(bad)
jmp
adc
mov
test
push
mov
test
or
pop
pop
push
pop
or
add
hlt
enter
(bad)
outs
mov
mov
daa
push
jne
fdivr
cmc
sub
sbb
mov
mov
icebp
mov
les
aam
add
sub
jle
cmp
jmp
data16
push
cmp
std
outs
sbb
mov
(bad)
xor
and
and
aas
inc
(bad)
fdivr
addr16
mov
inc
adc
and
jmp
in
nop
sub
dec
repz
cmp
js
pushf
add
ret
das
push
sub
(bad)
xor
dec
xor
clc
inc
int
ret
inc
mov
lods
rol
js
push
xchg
jo
in
call
les
push
mov
loope
lods
pop
out
adc
mov
out
xchg
in
sbb
or
mov
jne
jmp
push
jecxz
sub
mov
inc
fbld
gs
stc
call
sbb
fisub
test
xchg
adc
xor
push
(bad)
xchg
clc
jp
(bad)
arpl
cld
mov
icebp
mov
adc
dec
fiadd
dec
ja
lds
loopne
out
xchg
pop
push
mov
lock
adc
dec
int3
adc
push
sbb
dec
mov
retf
push
sub
dec
cmp
iret
dec
cwde
test
sbb
dec
cli
bound
sahf
xchg
imul
add
add
sbb
cmp
ins
lods
into
imul
imul
repnz
cld
fstp
ins
adc
inc
jnp
call
pop
add
loopne
neg
add
mov
stos
ja
in
pop
(bad)
inc
inc
sahf
int
mov
sub
xlat
mov
into
out
(bad)
push
fcomp
fstp
(bad)
aas
cmp
jne
(bad)
cmp
mov
(bad)
xor
xor
in
je
jle
and
push
jbe
cmp
xor
pop
(bad)
ja
rol
push
dec
push
scas
pop
cmp
sahf
lahf
mov
adc
div
sbb
(bad)
test
fsubr
call
jl
or
popa
shl
adc
dec
xchg
and
push
push
cmp
xor
ret
stos
xor
imul
mov
mov
push
pop
ins
es
jmp
inc
mov
and
jge
jbe
aam
mov
add
xchg
sub
jl
push
add
mov
rcl
mov
jp
cmp
int
mov
arpl
fiadd
fisub
inc
ret
test
int
cmp
into
hlt
call
push
(bad)
enter
mov
mov
loop
dec
cmps
aad
cmc
jo
sub
cmps
imul
cmp
retf
fld
rol
test
push
retf
push
mov
cmp
add
push
xchg
push
movs
mov
(bad)
fidiv
popa
in
cmps
in
ja
cld
mov
shr
xchg
jo
mov
jge
dec
mov
mov
xlat
mov
pop
xchg
and
mov
lods
dec
scas
xchg
sub
in
or
test
aas
imul
inc
cmp
push
mov
outs
or
das
mov
xor
sub
xchg
bound
add
(bad)
cmp
mov
add
push
cmp
xor
mov
xchg
test
les
mov
dec
jae
aad
push
(bad)
mov
mov
fstp
(bad)
jl
(bad)
mov
test
bound
xor
dec
xchg
(bad)
int3
push
lahf
xor
pop
pop
push
jne
jg
mov
push
mov
mov
fimul
(bad)
jno
scas
pop
push
inc
gs
xor
jno
pop
pop
rcr
adc
sbb
add
out
sub
pop
addr16
and
mov
adc
aaa
dec
gs
sar
push
xor
repz
jne
(bad)
stos
sub
and
pop
sbb
xor
mov
cmp
jmp
shr
sbb
movs
xchg
mov
pop
hlt
xor
call
retf
adc
add
push
cwd
imul
add
or
mov
adc
sub
mov
jne
mov
cmp
mov
in
lods
pop
and
xchg
(bad)
and
scas
push
jbe
rol
popf
int3
cmp
xor
and
sbb
(bad)
pushf
jns
aas
and
mov
cmp
xchg
popa
jl
xor
xchg
inc
and
popf
and
inc
inc
lods
ds
outs
sub
and
or
cmp
pop
loopne
leave
int
push
clc
xor
adc
test
and
dec
arpl
sub
and
pop
xchg
or
jp
mov
or
sar
jl
js
xchg
fwait
inc
inc
dec
gs
sbb
cmc
mov
loop
adc
outs
enter
pop
inc
and
mov
scas
pop
push
mov
add
ffreep
aam
pop
mov
test
jg
pop
pop
pop
retf
or
and
icebp
xchg
inc
xor
pop
mov
push
ja
xchg
push
addr16
test
icebp
xchg
dec
int3
sbb
fstp
adc
push
cmp
call
mov
sbb
(bad)
adc
fiadd
and
in
popf
mov
popf
xchg
cmp
movs
aas
popf
call
mov
movs
pop
fnstcw
sbb
outs
lea
cmp
in
adc
mov
adc
rcl
inc
mov
push
call
push
cmp
or
out
add
mov
aas
xchg
pusha
gs
cmp
xor
push
hlt
stos
fimul
addr16
adc
jle
stc
call
mov
jbe
jno
shl
mov
sub
mov
in
inc
xlat
test
movs
mov
call
or
mov
into
sub
out
repnz
int3
xlat
hlt
xchg
mov
out
dec
mov
js
add
fist
inc
add
(bad)
mov
cli
outs
outs
jbe
lods
pop
imul
sub
cdq
pop
cmp
mov
lds
clc
fwait
jg
pop
pop
adc
ror
gs
xor
lahf
inc
mov
adc
cmps
cmp
or
pop
shl
cmps
jbe
pushf
xchg
or
je
push
mov
outs
fiadd
mov
(bad)
cmp
dec
pop
bound
in
adc
mov
loopne
jmp
das
outs
mov
mov
enter
stos
push
clc
aad
clc
push
xor
lock
sub
dec
out
sbb
pop
shl
sub
into
js
ja
ds
ror
and
jmp
xor
std
push
out
pop
shr
mov
or
push
or
xchg
or
in
sbb
lahf
in
bound
push
cmp
jmp
in
mov
xchg
add
les
pusha
arpl
je
sbb
lahf
xor
es
adc
xor
fwait
adc
push
cmps
fst
out
pop
test
mov
ds
shl
enter
add
sar
pusha
call
pop
cs
dec
pop
xor
icebp
pusha
or
shl
mov
mov
imul
test
pop
ror
jle
add
(bad)
mov
sahf
or
or
fsubp
inc
dec
cld
hlt
pop
mov
das
add
int3
pop
cmp
or
daa
dec
imul
jmp
pop
mov
mov
and
jne
repnz
sbb
sub
jmp
jb
jmp
pop
sub
shl
sub
pop
lods
sahf
out
ret
mov
pop
dec
sti
push
in
and
dec
dec
pop
xor
mov
jo
add
jnp
shr
cmp
xchg
ss
(bad)
out
ret
mov
or
das
add
lahf
cdq
mov
and
test
rcr
stc
sbb
sub
jge
mov
in
imul
jno
mov
mov
div
(bad)
jge
xchg
xchg
xlat
push
inc
dec
daa
pop
cmp
dec
adc
test
cmovge
push
jbe
dec
int
mov
std
and
cmp
mov
xchg
cmp
cmp
add
sub
icebp
sti
mov
out
int
idiv
add
aam
mov
or
xchg
pop
mul
push
repnz
mov
adc
ret
jmp
inc
pop
mov
cmp
inc
inc
adc
add
retf
push
mov
mov
xchg
loope
pop
pop
mov
sbb
or
or
and
cmp
test
ins
mov
sub
ins
movs
mov
or
and
dec
gs
rcr
adc
inc
add
mov
jno
sbb
std
jmp
lds
xchg
xor
xor
jns
and
inc
repz
inc
in
cdq
pop
test
mov
mov
bnd
pop
mov
fstp
fstp
scas
cmc
inc
sub
movs
loopne
ins
jmp
inc
jne
and
push
push
movs
fwait
add
pop
in
mov
cmps
sub
inc
ret
mov
sbb
pop
je
fs
clc
pushf
add
push
mov
push
scas
imul
addr16
jle
ins
push
sar
cld
inc
imul
es
mov
pop
aam
(bad)
int3
mov
and
and
std
(bad)
adc
mov
test
cmp
mov
xor
inc
es
mov
dec
xor
jo
(bad)
aaa
aad
pop
out
ss
pop
adc
mov
rcl
fldlg2
xchg
ja
adc
rcl
or
les
and
(bad)
sub
xor
and
hlt
retf
pop
inc
fmul
jecxz
add
lahf
(bad)
std
cwde
add
stos
in
(bad)
cmp
ja
(bad)
mov
jg
push
inc
je
jl
push
mov
inc
loopne
sub
cli
xor
push
loop
(bad)
fs
cli
mov
or
jns
(bad)
imul
test
or
popa
xor
and
ja
pop
and
mov
(bad)
leave
pcmpgtw
retf
aad
push
fcomp
imul
lea
(bad)
out
xor
(bad)
sub
imul
mov
(bad)
jmp
test
cmp
in
clc
lock
stos
test
mov
and
scas
or
and
inc
jmp
mov
dec
outs
fs
add
cmp
pop
mov
rol
push
push
jnp
hlt
shl
xor
clc
ins
das
das
out
mov
xchg
mov
and
xchg
stos
and
or
fwait
movs
mov
aaa
in
inc
cmc
pop
js
mov
push
jae
in
mov
dec
push
mov
das
fnclex
push
icebp
ins
cmp
bound
pop
jmp
aaa
ror
aad
add
movs
test
xor
pop
ss
push
jmp
sbb
ins
mov
cmps
stos
js
mov
imul
aam
pushf
sbb
add
jmp
mov
inc
pop
push
cmp
(bad)
js
in
pop
mov
nop
(bad)
mov
outs
jbe
xor
loop
or
lahf
dec
popa
xchg
sbb
sub
ins
test
fwait
mov
add
int3
push
push
pusha
push
adc
stc
cwde
cmps
dec
cs
in
sbb
xor
mov
fnstsw
outs
sub
ffreep
xor
pop
push
scas
add
xchg
retf
mov
(bad)
retf
xor
sbb
jmp
mov
cmp
sub
lds
inc
call
push
sbb
xchg
lods
inc
cmp
pop
mov
mov
adc
call
sbb
std
call
fisubr
mov
push
add
test
push
out
(bad)
repnz
mov
in
retf
in
dec
daa
mov
add
jnp
fcom
in
(bad)
out
xor
mov
sar
jnp
mov
mov
jmp
and
leave
outs
hlt
shr
xor
cmps
pop
push
adc
movs
and
sar
ja
addr16
fld
and
inc
adc
fcomp
ret
cmp
enter
nop
or
movs
add
sahf
and
push
jp
movs
mov
cmp
jb
adc
push
pop
xchg
or
xchg
lods
dec
mov
dec
jb
fnstenv
imul
out
cmp
ds
aas
sub
pop
pop
jnp
imul
pop
xchg
push
lea
dec
xchg
scas
retf
arpl
mov
jle
test
fadd
ret
nop
in
xchg
call
push
daa
push
add
ror
inc
inc
fmul
pop
js
jp
test
hlt
add
imul
std
stos
inc
jbe
sbb
or
xlat
or
mov
cmp
dec
sar
cmp
mov
lods
cmp
sahf
fst
pop
lock
add
sub
mov
sub
and
push
ja
fsub
cli
push
jl
mov
jo
jle
(bad)
xchg
mov
fld
pusha
push
push
repz
popf
sbb
mov
dec
fldl2e
mov
test
in
mov
jne
test
pop
pop
mov
add
sub
out
hlt
lea
call
(bad)
fsubr
or
or
dec
mov
stos
or
out
or
pop
int3
sbb
push
std
scas
or
adc
ds
cli
and
aam
push
adc
stos
cmp
jnp
cmp
xchg
mov
dec
outs
outs
jae
mov
aam
jae
push
add
pop
sahf
or
(bad)
fimul
push
mov
call
in
pop
mov
retf
jb
movs
loope
push
or
inc
out
out
fisttp
pop
and
pop
bts
fiadd
je
aad
pop
inc
mov
mov
sbb
xchg
pop
xchg
nop
not
nop
adc
iret
scas
cmp
fcomp
cmovp
jb
sbb
cmp
test
fmul
fxch
daa
cmp
ins
mov
movs
or
inc
mov
popf
mov
loopne
lods
ins
or
(bad)
repnz
imul
add
dec
push
jnp
dec
xchg
or
or
(bad)
imul
dec
lahf
and
(bad)
xor
stos
mov
or
cmp
or
(bad)
adc
aam
sbb
stc
int
mov
sbb
lahf
or
outs
pop
adc
cwde
pusha
cmps
cwde
adc
cs
inc
jbe
mov
add
inc
lods
test
jns
sbb
jb
jnp
push
inc
(bad)
stc
mov
cmp
fcmovnbe
pop
cwde
dec
cmps
adc
pop
pop
jo
fcmove
mov
addr16
dec
mov
sbb
sub
fstp
and
loopne
cwde
movs
pop
vhaddpd
inc
test
int
fcomi
lock
icebp
retf
xchg
xchg
pop
mov
jne
mov
mov
jns
std
add
add
lahf
in
rcl
jmp
push
dec
jge
test
mov
xor
iret
xchg
jl
cmps
mov
in
cmps
leave
stc
mov
int3
mov
bnd
test
dec
popf
or
xchg
xchg
inc
test
xor
call
hlt
and
out
movs
mul
pop
cmps
mov
clc
adc
out
jns
sar
daa
hlt
push
scas
push
inc
call
fisttp
or
sub
int3
xchg
div
ja
jbe
pop
aaa
or
out
sbb
sbb
cmp
fcmovbe
clc
js
mov
leave
sub
loope
inc
frstor
jae
sbb
pushf
or
je
(bad)
sub
adc
xor
mov
popf
or
sbb
dec
mov
shl
push
push
shr
inc
stos
adc
add
inc
ficom
daa
mov
cwde
xchg
pop
movs
jp
adc
xor
mov
dec
ins
rol
ss
cli
into
pop
or
and
popa
and
movs
sbb
test
pop
cs
hlt
sub
adc
push
ret
add
icebp
loopne
inc
mov
sbb
jbe
inc
sar
fcomp
scas
shl
dec
or
jb
or
sahf
stos
shl
fist
stos
add
sbb
jg
inc
push
loopne
or
in
fldcw
jns
loop
jbe
popf
repnz
cmp
or
or
or
push
adc
add
mov
pop
ret
and
addr16
mov
aam
frstor
xor
pop
jg
cmp
inc
mov
in
(bad)
pushf
sbb
loopne
and
sbb
je
push
mov
popa
mov
mov
mov
sbb
lock
js
and
and
imul
mov
add
and
cmps
jmp
sbb
mov
jns
dec
in
gs
pop
adc
mov
neg
push
cld
jne
add
aas
jecxz
add
(bad)
cmps
pusha
sbb
jge
xor
mov
sub
out
retf
sbb
jl
lahf
test
xchg
adc
in
ins
xchg
sbb
push
rol
cmp
dec
xchg
and
icebp
and
jb
in
and
arpl
and
or
sbb
mov
dec
mov
cdq
stos
mov
push
mov
mov
dec
push
into
addr16
out
rol
and
dec
repz
adc
out
in
adc
lock
mov
jge
addr16
xchg
aam
xchg
sub
ret
sbb
mov
push
mov
sub
ins
cmp
fs
and
adc
xchg
mov
pop
jne
dec
xlat
mov
add
vrsqrtps
push
pop
fst
jae
xor
cmps
push
(bad)
popf
mov
cld
das
jp
int3
pop
sub
push
jmp
pop
and
and
push
adc
xchg
es
adc
(bad)
cmp
mov
sbb
cmp
call
imul
push
je
cmps
pop
(bad)
cmp
mov
pop
leave
in
mov
or
movs
aaa
mov
fidivr
xor
aad
adc
adc
or
test
sub
cwde
dec
add
(bad)
scas
mov
sbb
push
sar
pop
and
pop
inc
das
dec
jbe
std
movs
push
cmp
sbb
add
push
sub
jge
(bad)
xor
int
mov
pop
retf
pop
dec
call
fst
xor
push
arpl
repz
xchg
movs
mov
pop
arpl
test
sar
jge
push
jne
out
fucomip
nop
arpl
pushf
mov
test
inc
push
push
inc
retf
arpl
sub
add
shl
imul
rol
mov
push
mov
mov
retf
cmp
jmp
lea
es
mov
clc
sysret
imul
inc
das
popa
add
jnp
retf
pushf
int
mov
inc
mov
dec
outs
push
pop
jecxz
inc
xchg
pop
push
jecxz
mov
cmps
xor
mov
cmc
int
fisub
cmps
fwait
xor
rcl
pop
mov
mov
push
push
mov
sbb
or
out
xchg
shl
mov
push
mov
aad
ficomp
jge
xor
hlt
sub
int3
in
sbb
sbb
xchg
ret
test
adc
xchg
push
push
add
xor
retf
pop
push
or
leave
sbb
ds
(bad)
loopne
xor
mov
(bad)
xchg
and
mov
icebp
addr16
aam
xchg
fwait
lea
mov
mov
cmps
mov
mov
push
dec
call
and
pop
call
repnz
ret
ins
lahf
(bad)
sti
sbb
mov
mov
adc
add
in
xor
pop
sbb
pop
mov
aad
stos
xchg
mov
stc
jno
mov
rol
inc
lods
jae
sbb
scas
adc
int3
clc
dec
cmc
jmp
int3
outs
sub
adc
fsubr
sti
inc
inc
add
mov
xchg
ja
stos
push
scas
loop
iret
retf
jns
in
sub
push
cs
mov
adc
mov
je
out
cmps
mov
ins
ret
mov
and
or
pop
addr16
jg
push
and
pop
stos
cs
out
idiv
test
enter
sub
(bad)
mov
xor
mov
ret
fcomp
inc
jl
inc
jmp
or
dec
retf
ds
test
adc
lahf
dec
retf
rol
jle
outs
adc
and
fmul
mov
pop
aas
pop
lea
cwde
xor
xor
lods
cwde
and
add
mul
dec
cli
mov
in
ret
adc
aaa
mov
data16
retf
and
imul
pop
sub
push
add
out
push
(bad)
push
cli
ja
mov
call
xor
mov
mov
(bad)
adc
fdiv
outs
scas
enter
jo
sbb
jae
pop
adc
push
fbld
lods
popf
and
jo
adc
mov
dec
mov
and
and
lea
sbb
xlat
pop
and
fst
add
jns
inc
pop
mov
leave
test
out
xor
jb
scas
pop
mov
(bad)
arpl
push
mov
adc
fcmovu
cmp
pop
and
sub
ds
stc
cmps
cmps
clc
inc
loop
jmp
stc
dec
or
adc
out
push
push
pop
inc
js
xor
into
inc
sahf
in
jns
cdq
fld
aad
xchg
fsub
out
and
cmc
mov
clc
test
sar
ds
adc
dec
pop
adc
(bad)
dec
mov
adc
cli
jge
xchg
adc
pusha
inc
movs
fdiv
(bad)
push
popa
sbb
pop
push
std
lea
mov
rcl
add
gs
aad
sbb
in
les
sbb
sbb
dec
push
fimul
test
jbe
(bad)
bound
add
(bad)
sub
test
dec
jmp
jne
stc
push
test
imul
sub
pop
cs
dec
out
call
push
xlat
js
add
cmp
and
test
xchg
inc
ret
inc
mov
je
push
pop
call
cmp
sahf
scas
popa
bound
mov
mov
and
cmps
mov
aaa
scas
into
aam
add
mov
mov
out
jge
sub
and
in
int
shr
add
js
clc
outs
or
push
stc
pop
rcl
pop
mov
ret
lahf
xor
test
xchg
pushf
add
loop
jmp
xchg
inc
sbb
inc
nop
xchg
or
cld
bound
leave
dec
loopne
iret
push
rcl
lods
jecxz
cmp
iret
xor
inc
scas
and
dec
push
jbe
push
loop
ret
pop
gs
cmp
xchg
add
xlat
pop
and
cs
xchg
cmp
cli
mov
sub
jno
sub
stc
outs
hlt
mov
and
xor
fstp
shr
mov
add
mov
daa
sar
cmp
fidiv
mov
jb
sub
sub
repnz
push
or
dec
add
fld
and
sar
cs
fisub
add
dec
(bad)
jno
add
call
sub
leave
rol
(bad)
lods
inc
mov
pop
pushf
imul
mov
xor
inc
movs
mov
pop
stc
mov
add
mov
cmp
leave
scas
ret
idiv
dec
cmp
scas
mov
daa
ins
jno
cli
xchg
push
sbb
pop
and
retf
mov
xor
cmp
es
jo
or
pushf
call
lock
loopne
std
test
mov
retf
scas
test
(bad)
jmp
lds
fisub
pop
adc
ss
lods
neg
pop
add
mov
in
xchg
cmp
xchg
push
enter
jecxz
push
or
mov
mov
aas
xchg
and
dec
addr16
xor
xchg
jno
ins
adc
mov
mov
adc
adc
push
vorps
xor
mov
icebp
jp
adc
lods
and
mov
dec
and
adc
push
mov
pop
mov
pop
inc
stc
xor
dec
cli
outs
add
pop
js
mov
inc
jle
mov
(bad)
push
shr
jo
pusha
sub
push
bswap
lahf
stc
and
push
mov
movs
loop
pop
pop
movs
dec
inc
inc
inc
cmc
int
jmp
adc
(bad)
(bad)
mov
adc
jecxz
pop
push
sti
dec
(bad)
jno
retf
and
or
xchg
jne
pop
xor
push
ins
jge
adc
stc
bswap
(bad)
addr16
mov
adc
xor
jne
mov
mov
push
or
(bad)
data16
and
add
xchg
cmovno
test
xchg
lea
xlat
mov
push
outs
jbe
out
adc
(bad)
inc
push
mul
test
sahf
cld
inc
(bad)
repz
inc
in
outs
jbe
out
int3
mov
mov
push
xor
daa
xchg
repnz
or
arpl
mov
xor
dec
fisttp
inc
push
jo
setno
int
xchg
dec
aad
adc
inc
sbb
imul
adc
sbb
leave
cmp
adc
(bad)
aad
sub
into
fnsave
add
jp
xor
push
cmp
jp
mov
xor
mov
(bad)
jbe
out
mov
mov
pop
icebp
ins
mov
xor
pmulhw
ficom
xchg
pop
(bad)
int
lods
arpl
js
aaa
push
mov
in
fwait
dec
jmp
scas
mov
daa
test
icebp
sbb
or
adc
pop
rol
sub
pop
jno
pop
xor
cli
adc
cmp
stos
mov
jle
div
cmp
lods
add
cmp
fist
aad
mov
cmp
adc
aad
imul
add
fistp
frstor
movs
xchg
(bad)
push
sub
xchg
jge
xchg
(bad)
mov
loop
rcr
bound
inc
mov
dec
adc
push
pop
rol
cwde
pushf
loopne
pop
js
fld
cmps
xchg
or
rol
retf
test
ja
mov
sub
rol
jbe
jae
dec
adc
aam
(bad)
push
stos
dec
dec
cmp
xchg
and
pusha
inc
lea
mov
xchg
jbe
data16
ret
push
movs
xor
pop
dec
pop
mov
push
cmp
mov
xchg
out
sub
push
jge
mov
stc
inc
and
inc
lods
fiadd
hlt
pusha
cdq
sub
and
dec
push
mov
ss
jg
test
repnz
xchg
dec
xchg
aad
sub
add
pushf
push
(bad)
xor
repz
out
push
mov
pop
adc
push
jge
xor
xor
fisub
add
sti
xor
sub
push
jb
int3
xchg
jl
push
push
mov
icebp
mov
mov
add
cmp
cmps
sbb
out
add
jmp
sub
mov
xchg
mov
aaa
cmp
into
inc
sub
stos
cmp
lods
pop
retf
pop
clc
push
pop
sub
or
mov
jmp
cs
add
mov
sbb
lds
(bad)
sub
in
cmp
add
xchg
pop
push
adc
and
sbb
ds
ret
icebp
push
enter
push
sbb
mov
aaa
and
sub
dec
sub
xor
and
sbb
xor
inc
test
sbb
arpl
xlat
or
fnstsw
pop
inc
and
push
push
mov
scas
adc
mov
and
mov
cmp
push
sbb
mov
xchg
sub
ins
inc
or
lods
leave
jno
jge
dec
xlat
mov
mov
sub
scas
xor
jmp
mov
dec
sbb
push
mov
(bad)
mov
cmp
sti
add
xchg
push
push
into
outs
cmp
jb
(bad)
idiv
and
add
adc
daa
in
cmc
adc
inc
cmp
or
scas
cmp
data16
sahf
in
imul
and
(bad)
sub
pop
jle
mov
mov
cmc
out
icebp
dec
rcr
jmp
mov
xchg
and
pop
xchg
icebp
fs
xchg
and
jnp
sub
loopne
aas
test
sub
sub
sbb
bnd
jne
out
or
xor
xchg
dec
sub
icebp
pop
out
dec
push
in
sahf
mov
je
imul
popa
cmp
cmc
sub
gs
push
pop
add
ret
jno
or
loop
jmp
fldcw
lock
and
jmp
loopne
jg
enter
xor
sbb
or
xor
xchg
outs
pop
sub
ins
jl
bound
cmc
pop
jmp
adc
mov
out
fcmovnbe
mov
and
mov
jmp
inc
jbe
jnp
xchg
shr
sahf
pop
xchg
jae
pop
test
mov
sub
call
mov
hlt
dec
aas
aaa
iret
cmp
pushf
ins
dec
scas
and
pop
in
or
dec
scas
iret
mov
pop
lock
inc
sahf
sub
mov
sbb
xor
xchg
pop
int3
xor
sar
add
movs
dec
enter
push
cmp
bound
into
sbb
sub
dec
(bad)
loop
pop
xor
lea
xchg
mov
enter
jmp
sbb
cdq
test
xchg
push
or
mov
adc
pop
pop
cmp
out
mov
clc
xor
cwde
and
bound
sbb
add
mov
cmp
je
jge
cmp
retf
jmp
mov
je
xchg
jns
nop
push
jmp
mov
dec
inc
sub
in
xchg
push
fwait
xor
mov
fistp
xor
je
daa
pop
dec
or
fnstsw
fisub
mov
arpl
sub
sub
dec
cdq
xchg
hlt
inc
mov
idiv
aaa
pop
jo
lods
pop
jl
mov
cmc
jo
add
inc
pop
icebp
hlt
sbb
jg
scas
ja
mov
dec
jns
xchg
or
pop
lods
push
jl
add
xchg
xchg
fldcw
dec
popa
mov
mov
push
(bad)
xor
lods
jo
(bad)
mov
mov
jle
jbe
mov
iret
xchg
cmp
push
pop
(bad)
retf
ficomp
inc
ins
fwait
test
mov
ins
mov
pop
and
jo
mov
popa
adc
add
push
pop
jecxz
jb
add
movs
or
or
scas
fld
xor
popa
xchg
aaa
test
dec
pop
fnstenv
mov
popf
jbe
mov
xor
stos
retf
hlt
loopne
add
add
inc
jge
sahf
jl
mov
pop
sti
ret
sbb
push
clc
xchg
in
enter
or
jecxz
add
scas
sbb
out
cmp
jo
cs
sar
out
cwde
test
jbe
xlat
mov
fs
mov
js
jmp
adc
shl
xchg
outs
or
jb
inc
push
jp
and
test
jl
sub
mov
sbb
jmp
neg
cdq
popf
xor
popf
std
lea
dec
xchg
sub
loopne
mov
pop
addr16
mov
push
es
mov
xor
gs
pop
push
inc
enter
sub
inc
int
ret
xchg
or
out
dec
cs
push
push
xor
(bad)
adc
outs
mov
jns
pop
xchg
inc
(bad)
or
pusha
stos
popf
ret
ror
dec
fdivr
fwait
arpl
mov
gs
inc
out
ss
sbb
mov
and
push
sahf
push
test
mov
(bad)
rcl
sub
sub
dec
xor
scas
hlt
jmp
ins
jo
sub
push
and
out
dec
inc
jle
mov
push
xchg
std
mov
loope
or
test
ss
dec
push
jp
jnp
pushf
mov
inc
ins
leave
int
shl
adc
jp
fdiv
fsub
setp
cmps
(bad)
or
mov
popa
fwait
xchg
enter
xor
pop
gs
je
aad
loop
lahf
push
test
repz
push
mov
rcl
imul
fld
int3
push
xor
popf
out
mov
and
jl
retf
push
xchg
fild
inc
jne
ret
js
cmp
mov
pop
pop
mov
(bad)
push
pop
in
int3
inc
repnz
xlat
inc
scas
fld
int
pop
popf
imul
pusha
test
pop
pop
jo
adc
(bad)
iret
jl
cli
popa
xor
sahf
adc
imul
xchg
out
out
xor
pop
sub
jnp
add
xchg
fs
aas
mov
push
pusha
lods
iret
pop
mov
sub
sbb
popf
inc
ror
and
hlt
mov
imul
sbb
das
scas
push
dec
and
sti
adc
xor
or
(bad)
xchg
and
jge
out
mov
pop
inc
push
pop
dec
stos
ins
(bad)
fdiv
cmp
fisttp
popf
or
ja
lock
js
sub
out
xchg
xor
sub
hlt
lock
adc
stc
inc
into
fiadd
jo
add
(bad)
and
inc
cdq
add
iret
fdivr
out
inc
rcr
and
dec
sbb
ror
jno
dec
jp
sbb
and
sti
cmc
int
outs
jne
retf
push
inc
sahf
ja
enter
pusha
(bad)
sti
jne
xchg
mov
or
and
cmp
pop
aam
xor
add
or
cmp
fsubr
rol
mov
outs
lahf
cld
mov
test
lds
or
push
call
scas
sbb
(bad)
sub
sbb
dec
jp
sub
pop
(bad)
outs
ins
ins
enter
mov
fnstenv
ds
fs
mov
popa
mov
test
mov
imul
idiv
rcl
or
push
fwait
out
fisttp
ins
adc
je
mov
or
inc
lahf
shl
dec
hlt
xor
pop
enter
dec
in
jg
jecxz
ins
jg
ret
mov
int
dec
scas
push
ret
mov
push
into
test
sub
(bad)
sub
inc
add
mov
xchg
mov
(bad)
xchg
mov
idiv
enter
aaa
or
add
js
adc
stos
movs
ja
xchg
mov
movs
gs
stos
push
mov
xchg
push
mov
jo
imul
cmp
fstp
push
popa
inc
fild
mov
mov
push
inc
add
push
test
xchg
xor
mov
cmps
sub
retf
imul
js
pop
movs
jno
xor
dec
ja
retf
sbb
adc
call
fld
hlt
pop
and
pop
xchg
jge
jge
mov
pushf
sub
cmp
cmp
or
pop
fstp
fst
mov
je
jnp
enter
hlt
ins
js
add
dec
gs
add
push
xchg
ins
fld
adc
loop
ja
mov
cmps
mov
sub
jmp
retf
mov
call
mov
cdq
cmp
inc
xchg
pop
mov
sti
add
xor
cmp
mov
not
jmp
mov
mov
mov
mov
sbb
inc
or
iret
adc
pop
aam
stos
sbb
scas
fcom
push
test
sbb
cmp
div
and
shl
add
iret
ss
sti
mov
dec
sbb
in
pop
push
jmp
hlt
retf
stos
lods
mov
xchg
cwde
out
out
clc
inc
mov
adc
dec
push
and
dec
xchg
adc
push
xchg
jnp
(bad)
div
out
or
mov
(bad)
xor
dec
sti
fiadd
adc
push
push
iret
sbb
rcl
cmp
into
scas
fbstp
dec
inc
mov
pop
adc
movs
imul
(bad)
add
and
xchg
push
icebp
out
(bad)
out
leave
dec
mov
repnz
xor
push
clc
add
jns
(bad)
(bad)
lods
jb
inc
ss
add
cmps
jae
les
movd
mov
xchg
pusha
stos
lahf
test
cmp
mov
and
stos
and
(bad)
lock
lods
imul
mov
push
mov
xchg
and
fild
mov
movs
into
sbb
std
nop
shl
int
xchg
mov
jmp
inc
xor
pop
dec
add
pminsw
mul
loope
mov
mov
dec
stos
pop
xor
mov
stos
xchg
inc
inc
cld
movs
push
pop
push
inc
cmps
retf
call
xor
(bad)
(bad)
movs
dec
pushf
and
mov
(bad)
in
fwait
mov
repz
push
xor
jl
sbb
int
sub
rcr
mov
test
popa
push
test
dec
mov
jb
and
je
xchg
std
popf
add
shr
sbb
jmp
sub
enter
cmp
daa
jns
push
jbe
mov
add
imul
inc
outs
rcl
ret
dec
stos
adc
mov
and
adc
or
mov
jmp
sbb
sbb
push
into
mov
or
xchg
push
repnz
mov
loopne
jle
clc
ret
jmp
test
xadd
adc
adc
retf
in
mov
dec
fnsave
adc
retf
add
sub
jmp
inc
or
dec
mov
jbe
mov
aam
fist
and
mov
mov
or
nop
lahf
push
mov
pushf
fucomip
ss
xlat
repnz
lahf
ret
loopne
ja
leave
je
dec
(bad)
fdivr
aaa
fsub
daa
push
lods
add
xor
movs
xchg
leave
mov
clc
mov
hlt
push
(bad)
data16
ss
sbb
test
dec
sbb
rol
push
ins
mov
in
inc
imul
lods
sahf
scas
jmp
cmp
pop
lea
(bad)
dec
lods
xor
push
jge
test
iret
inc
(bad)
cmp
pop
mov
fs
add
inc
std
test
cdq
daa
mov
inc
popf
mov
retf
das
lds
repnz
data16
loope
in
pop
fnstenv
mov
ret
mov
lahf
inc
add
lods
sbb
mov
and
imul
push
popf
push
push
push
(bad)
pop
mov
out
push
inc
outs
or
xchg
dec
mov
fld
cs
xchg
xor
out
aam
adc
out
out
lods
cmp
xor
cmc
fcom
push
sub
add
add
call
inc
dec
int
in
fwait
into
rol
clc
jge
cld
sub
rcr
ss
aam
xlat
add
cmp
leave
fimul
and
repz
adc
mov
jb
pop
or
call
lahf
push
aas
add
outs
adc
mov
outs
adc
stos
pushf
neg
rcl
por
xor
cli
and
push
dec
hlt
daa
or
pushf
rcr
xlat
aas
fiadd
inc
xchg
mov
das
cmp
adc
inc
mov
xor
outs
lds
stos
(bad)
(bad)
adc
pop
dec
popf
(bad)
sbb
rcl
fcom
std
pop
test
rcl
imul
out
outs
sbb
mov
mov
test
mov
jle
das
xchg
rol
pop
scas
mov
cmp
in
push
shl
mov
pop
or
ret
adc
gs
retf
sti
fnstsw
mov
fcmovnb
mov
pop
out
pop
cmp
ficomp
ss
xchg
jbe
add
cmp
mov
data16
mov
fdiv
fsub
adc
fisttp
addr16
xchg
jmp
shl
imul
push
cmps
hlt
sub
pop
push
cmp
cmc
lods
mov
push
mov
sbb
jbe
out
ss
mov
sbb
out
mov
test
movs
xor
mov
or
mov
xchg
jge
dec
xchg
enter
sub
add
pop
js
pop
and
js
mov
imul
sbb
sub
popf
dec
or
out
clc
lods
jmp
movs
sub
std
xlat
inc
popa
aas
mov
dec
out
bnd
and
stc
push
in
rsqrtps
push
push
call
or
mov
sub
popa
out
test
xchg
pop
fs
add
mov
ret
scas
imul
xchg
(bad)
cmp
mov
jecxz
outs
ds
jns
or
xchg
ins
bound
cli
jae
mov
idiv
push
or
mov
inc
outs
or
mov
ss
sbb
stc
cmp
xchg
sbb
out
ins
jae
adc
inc
sub
lods
xor
gs
adc
pop
aam
xor
(bad)
repnz
sar
movs
xor
out
inc
jae
aam
cwde
xor
dec
gs
int3
xchg
and
icebp
cli
push
cmp
xor
shr
addr16
and
xchg
test
cmp
pop
push
dec
or
ins
mov
xchg
cvtdq2ps
ss
or
and
cmp
popf
mov
mov
mov
mov
mov
adc
push
push
xor
les
push
cmp
pop
jmp
sbb
ins
sub
or
push
shl
dec
mov
cmp
sbb
push
push
adc
adc
jb
push
push
dec
les
pop
inc
div
pop
mov
or
adc
cwde
imul
adc
mov
xor
cs
and
movd
dec
loope
sub
jge
jnp
inc
mov
jge
out
dec
bound
scas
mov
aad
add
in
cdq
out
push
call
(bad)
cmp
mov
(bad)
mov
cmp
(bad)
aaa
in
into
retf
pushf
aas
sahf
imul
in
test
mov
add
or
in
mov
jecxz
inc
enter
(bad)
jbe
rcl
cli
pop
push
add
aaa
shr
mov
mov
pop
lods
fsub
push
dec
and
xor
int3
xchg
mov
aas
shr
sub
push
jo
cmp
or
jb
fbstp
lods
xor
int3
(bad)
in
pop
daa
mul
mov
inc
cmp
jge
mov
jbe
mov
and
ds
jg
jle
sbb
sub
pop
sti
test
pop
mov
sahf
push
out
jae
xchg
cld
sbb
sbb
dec
xchg
(bad)
jp
add
xchg
mov
call
sub
lea
ficom
sub
aaa
or
cwde
mov
rol
adc
xor
rcr
add
mov
shr
(bad)
rcr
xchg
cmp
dec
pushf
cwde
push
xchg
inc
ins
dec
or
xlat
mov
sub
lahf
add
sub
in
shr
mov
shl
mov
js
jmp
es
lds
mov
push
mov
xlat
and
adc
xor
xlat
mov
pop
test
movs
loop
lods
and
test
and
sahf
(bad)
int
ja
inc
cmp
xlat
mov
pop
pop
cmp
xchg
cmp
(bad)
mov
mov
adc
scas
rol
mov
jo
nop
add
push
sub
ins
stc
in
lods
adc
into
mov
call
lock
xor
push
punpcklbw
push
pop
xchg
mov
(bad)
stc
xor
movs
sub
jge
push
mov
ins
adc
sub
pop
shr
lods
xchg
xor
outs
outs
lea
leave
jnp
aaa
jl
in
or
retf
popa
dec
dec
mov
adc
addr16
cmp
inc
fidivr
dec
adc
cmps
in
push
sbb
jp
or
add
lock
and
sub
jl
aam
lahf
dec
jmp
fistp
xchg
push
jp
jbe
jl
pop
cmp
addr16
sub
cmp
sahf
int3
inc
jmp
nop
sbb
mov
jp
xchg
pop
(bad)
aas
add
add
push
ds
inc
lock
jo
xchg
push
add
xlat
arpl
ss
push
mov
neg
dec
sub
add
sbb
jo
jp
or
(bad)
xlat
out
loop
arpl
je
data16
mov
xlat
or
push
sub
stos
cmp
test
mov
(bad)
xchg
inc
cmp
outs
scas
adc
mov
mov
ret
xor
repnz
pushf
inc
fcos
mov
das
lods
call
lahf
loopne
mov
push
cli
fdivr
aad
cld
test
adc
jo
add
pop
pop
mov
ds
nop
lahf
add
lock
mov
and
sar
out
jecxz
mov
and
sbb
or
pop
cmp
push
mov
test
rcl
mov
add
xor
cli
pop
lahf
aam
fwait
les
adc
push
add
jle
mov
inc
and
(bad)
clc
outs
push
loope
das
push
or
stc
xchg
shl
and
sbb
adc
lods
fld
inc
adc
sbb
push
ins
xchg
ds
mov
dec
ss
xor
jge
mov
adc
mov
dec
xor
inc
repz
(bad)
in
(bad)
adc
fdecstp
xor
dec
rcl
sub
pusha
or
lods
loope
xlat
jle
jo
bound
call
shl
xor
ja
xchg
cmp
pop
sub
aaa
(bad)
outs
cmps
pop
(bad)
cli
rcl
pop
in
pop
mov
adc
enter
scas
outs
test
test
mov
pop
mov
push
xor
ret
test
mul
mov
jnp
std
imul
or
idiv
xchg
iret
adc
cs
xchg
pushf
loop
repnz
jnp
mov
push
cmp
mov
cmp
push
arpl
shl
adc
je
cmp
and
add
test
xchg
test
lods
in
xor
shl
call
mov
or
jb
cmps
mov
aam
adc
adc
inc
call
jge
adc
jns
sub
xor
dec
xchg
sbb
sar
je
stos
rcr
xor
aam
ror
(bad)
loop
repz
push
mov
jbe
rol
mov
mov
ror
fild
pop
pop
xchg
clc
dec
jg
mov
ja
mov
int
lods
test
test
sbb
jg
cmp
add
mov
mov
mov
clc
mov
or
lods
ja
das
inc
pop
outs
pop
into
les
aam
aam
scas
pop
popf
push
bound
int3
fcmovnu
int
int
in
daa
jecxz
sbb
jbe
daa
ins
lahf
std
arpl
arpl
mov
xchg
dec
inc
and
mov
dec
in
mov
gs
adc
mov
jo
data16
cdq
sub
daa
mov
in
pop
ins
bound
(bad)
cmp
das
fadd
jl
adc
inc
cdq
pop
cmp
inc
(bad)
and
ret
addr16
jl
aad
cmp
add
lods
cld
add
and
out
out
xor
pmulhuw
and
loop
xchg
mov
ins
dec
(bad)
inc
pop
mov
in
stos
imul
int
xchg
fild
mov
jne
add
and
dec
adc
fstp
stos
jae
push
mov
lods
push
mov
shl
xor
or
pop
aas
jnp
adc
out
leave
dec
cmp
jne
repnz
xor
xor
int
(bad)
cmp
movs
mov
rcl
xlat
ss
cmps
ins
addr16
sbb
repnz
jge
shr
push
rcl
mov
and
and
and
mov
push
cmp
jns
inc
sub
icebp
sbb
and
pop
pop
fimul
sub
outs
pop
jp
jl
xchg
xlat
pop
clc
pinsrw
sbb
test
in
or
push
outs
scas
(bad)
scas
push
pop
mov
and
dec
sub
push
ins
mov
cmp
call
out
dec
mov
jb
jmp
ret
or
call
or
leave
inc
cmp
cwde
out
pop
and
dec
inc
jnp
test
in
(bad)
or
push
mov
xchg
pop
leave
push
sub
mov
pop
xchg
popf
xchg
rcr
add
mov
inc
ins
aam
lods
pop
mov
hlt
rcr
mov
add
or
add
or
cmp
cmps
lock
gs
add
cs
cmp
fnsetpm(287
mov
sbb
addr16
push
dec
mov
mov
mov
jmp
in
fidiv
arpl
add
(bad)
xor
mov
xor
fucomi
aam
jp
add
cmp
xor
lea
leave
sub
neg
and
dec
cmp
call
add
enter
or
daa
imul
dec
fisttp
inc
clc
in
adc
icebp
test
mov
cmp
xor
adc
loop
clc
cmp
ss
mov
repz
mov
and
and
push
xor
imul
push
es
lea
int
pop
dec
data16
push
sub
push
add
into
call
pop
movs
jmp
inc
inc
xchg
mov
jno
pop
sub
add
ficomp
sub
addr16
sbb
add
lahf
add
ins
push
in
xchg
stos
std
bound
loopne
test
push
mov
mov
(bad)
sahf
dec
cmp
into
out
xchg
lods
leave
jnp
repnz
mov
loopne
bnd
out
sbb
icebp
js
in
mov
cs
mov
cmp
add
add
sbb
sbb
mov
hlt
cmps
dec
lods
sahf
lods
jmp
mov
mov
xchg
add
jns
leave
cmp
movs
fcomp
lods
inc
dec
jns
(bad)
int3
loope
sub
push
(bad)
or
in
dec
loopne
jmp
(bad)
pop
dec
aas
jae
sbb
mov
jecxz
into
mov
je
cmp
ret
and
push
shl
pushw
daa
mov
dec
test
sub
jo
aad
xor
sbb
retf
fidivr
nop
cmp
call
out
f2xm1
clc
dec
add
and
inc
sbb
dec
repnz
xor
cmps
retf
xor
(bad)
jp
mov
sbb
xor
or
dec
lds
dec
push
je
jp
not
cs
jl
cs
stos
push
xchg
outs
pop
inc
fnsave
fs
pop
push
(bad)
sbb
jb
mov
and
and
xchg
lods
mov
pop
and
repz
pop
movs
repz
xchg
mov
enter
mov
sbb
cld
xchg
and
and
mov
ss
ja
jne
rol
mov
jp
push
mov
xchg
push
pop
retf
xor
push
or
dec
pop
mov
xchg
mov
cmps
nop
dec
cmp
inc
pusha
dec
and
or
fcomp
jle
out
cmps
es
mov
or
mov
ds
stc
xchg
in
(bad)
ficom
add
adc
pop
inc
mov
mov
adc
data16
xchg
cld
mov
pop
lea
add
mov
inc
sti
push
cmps
je
gs
inc
xlat
sbb
cmps
stos
pop
mov
bound
or
pop
add
or
test
xor
out
ds
add
lods
iret
mov
inc
pop
cs
sbb
int
in
xchg
(bad)
mov
mov
les
iret
and
std
sub
rcl
sub
mov
jo
repz
and
idiv
xor
mov
cmp
pop
scas
xlat
jge
ins
jbe
(bad)
and
inc
retf
mov
adc
add
rcr
daa
sar
nop
outs
stos
xor
and
xchg
sahf
inc
inc
call
clc
ret
or
sub
dec
cmp
pop
(bad)
pushf
push
pop
pavgb
aam
mov
xlat
push
mov
test
stc
fcomp
dec
fucomip
stc
mov
cli
inc
cmp
fs
in
aas
jno
repnz
nop
popa
leave
xchg
sqrtps
aad
ja
sbb
stos
pusha
mov
mov
rcr
vmwrite
pop
jl
test
mov
(bad)
imul
lock
call
movs
push
ficom
dec
sbb
jnp
push
enter
mov
vminpd
pop
inc
loope
scas
lahf
retf
push
daa
adc
add
and
data16
js
jne
(bad)
in
push
retf
and
sub
jbe
outs
fst
push
pop
push
mov
movs
clc
xchg
push
cmp
add
mov
add
xchg
add
add
js
pop
ja
push
lock
push
xor
neg
pop
arpl
xchg
int
push
sub
pmulhuw
ja
jns
sbb
dec
mov
loope
jp
rol
outs
in
or
xchg
xchg
shl
add
jb
inc
mov
cmp
movs
into
inc
in
cwde
pop
push
push
shl
pop
lea
inc
cmps
imul
aaa
dec
enter
addr16
repz
push
into
push
mov
dec
retf
test
xor
cwde
cs
adc
cli
cs
cwde
aas
jae
pop
push
jmp
scas
pop
pop
xchg
test
rcr
cmc
stc
sub
mov
mov
into
loopne
jno
push
lods
je
cdq
push
fwait
push
frstor
ins
and
pop
add
sbb
cmp
sub
mov
dec
inc
fldenv
aas
gs
pop
add
inc
sub
and
mov
lock
jmp
and
cmp
dec
stos
push
xchg
(bad)
into
sub
push
out
pushf
out
mov
jb
mov
shl
mov
and
dec
mov
nop
in
imul
push
or
dec
cmp
xor
add
inc
es
stc
mov
jmp
in
cld
xchg
pop
test
pop
pop
pop
out
stos
test
sar
sub
popf
jge
mov
lahf
adc
dec
aas
rcr
pop
aad
stos
fisub
adc
frstpm(287
xor
cmp
cmp
je
inc
popa
inc
movs
cs
xor
cld
dec
into
sar
and
popa
fnstsw
add
pop
cdq
sub
pop
xchg
retf
test
out
movs
or
adc
jmp
pop
pop
jmp
retf
cmp
inc
mov
stc
test
aam
shl
xchg
aam
(bad)
jnp
movs
hlt
lods
mov
xchg
ins
pushf
stc
xlat
adc
icebp
loop
cs
cmc
jmp
xor
lods
jo
xlat
xchg
pop
mov
add
cmp
xor
mov
xor
scas
cmp
mov
aas
adc
dec
fcom
mov
(bad)
jecxz
xor
xor
stc
push
jmp
add
es
movs
xchg
or
mov
inc
mov
fmul
add
addr16
stc
imul
jo
ficomp
cdq
and
scas
gs
fsubr
pop
ret
or
outs
cmps
ins
sbb
out
pop
jecxz
shr
std
mov
mov
pop
add
jmp
fwait
or
repnz
les
sub
(bad)
popa
mov
test
sti
das
test
inc
loop
cdq
xlat
fs
xor
and
sub
inc
cld
mov
xchg
and
fld
jecxz
mov
shl
cmp
pop
or
pop
fwait
imul
adc
mov
(bad)
xchg
jmp
lock
ror
es
jge
in
mov
jo
mov
(bad)
jecxz
adc
aad
(bad)
and
cwde
fiadd
jnp
push
mul
xor
cli
sbb
test
arpl
sub
mov
sub
rol
cmp
push
push
xor
into
shr
lods
daa
js
jge
pop
popw
jge
mov
scas
aam
cmp
mov
fimul
push
xchg
sbb
inc
cdq
mov
retf
in
div
jmp
int3
(bad)
in
dec
xor
xchg
cli
add
cld
jl
pop
imul
mov
stc
pop
jmp
mov
je
in
and
dec
lahf
or
ror
mov
cdq
push
mov
jo
cwde
jecxz
mov
lahf
add
lahf
and
mov
ss
es
and
ds
inc
and
das
push
mov
and
imul
test
cmp
mov
and
lea
or
ret
pop
cdq
xor
sub
rcl
ret
dec
in
(bad)
adc
sbb
in
imul
jb
jge
cmp
mov
jg
push
mov
mov
(bad)
mov
xchg
pop
mov
sbb
(bad)
repnz
call
lods
cmp
pusha
push
cmp
js
call
fisubr
(bad)
ds
scas
in
push
xchg
xchg
fcom
dec
test
and
xchg
add
pop
xchg
mov
xlat
aad
test
rcl
fwait
sbb
mov
popa
xor
mov
call
shl
aas
dec
das
xor
js
xor
aaa
shl
outs
sbb
lds
and
icebp
pop
pop
fwait
cdq
and
or
jae
call
and
xchg
ins
xchg
adc
mov
xor
xor
and
fisttp
mov
push
mov
adc
xor
pop
sub
xchg
dec
mov
push
ins
fsub
adc
mov
push
push
mov
movs
dec
push
mov
adc
lods
clc
rol
pop
ja
enter
and
or
scas
leave
pop
add
sub
and
xor
in
fidiv
out
pop
shl
sub
sar
push
xchg
imul
mov
jo
pop
or
add
arpl
leave
mov
lods
imul
add
dec
(bad)
mov
pusha
dec
shl
jns
ret
cli
add
cmp
lds
jmp
mov
(bad)
(bad)
out
icebp
xchg
add
fwait
arpl
jge
rcl
cmps
adc
xor
jmp
(bad)
stc
jl
fld
das
mul
sti
sbb
and
and
ss
xchg
stos
aaa
addr16
sub
daa
arpl
pop
les
mov
cs
pop
out
mov
sbb
add
fwait
xchg
pusha
sub
inc
adc
push
fldenv
scas
std
lds
xchg
push
sbb
sub
or
pop
push
push
les
push
cmc
lods
pop
in
mov
mov
enter
cmp
ss
mov
mov
or
inc
sbb
ins
mov
mov
test
inc
sbb
mov
outs
(bad)
fs
xor
iret
xor
cmp
(bad)
stc
in
mov
jbe
aad
jg
xlat
xor
push
mov
mov
dec
push
dec
ss
shl
mov
in
test
dec
test
(bad)
int
add
or
clc
inc
push
bound
fdivr
mov
iret
pop
ins
hlt
mov
lock
sbb
or
add
push
jb
add
cmps
lea
sub
mov
jns
int
mov
test
daa
test
sbb
shr
jbe
inc
jecxz
in
retf
pop
out
adc
out
fdivp
(bad)
xchg
into
mov
scas
or
movs
or
call
call
aam
retf
push
sar
fsubr
mov
daa
cmc
cmp
test
out
xlat
sub
stc
ffree
xor
cmp
(bad)
fidivr
inc
std
xor
fistp
fwait
sahf
int3
add
sub
pop
fmul
call
xchg
push
(bad)
jnp
sahf
scas
inc
cli
fwait
pop
(bad)
pop
pop
inc
cld
xor
or
xchg
dec
mov
hlt
retf
daa
out
inc
les
sub
mov
add
ret
push
cmc
cmp
jne
loope
push
sbb
jae
aas
dec
jbe
fwait
ret
in
push
fsubrp
adc
adc
daa
retf
push
(bad)
lock
ror
mov
mov
sar
or
adc
pop
ins
adc
in
call
pop
sar
test
jae
sbb
ret
jns
cs
sub
mov
cmp
rcr
in
movs
and
xor
sbb
adc
fwait
mov
xor
call
adc
ss
push
xchg
sbb
xchg
es
aad
cmp
and
cmp
pushf
and
cmp
pop
dec
fwait
stos
jbe
retf
push
xor
inc
xor
pop
fstp
ficom
jmp
lea
mov
dec
xor
pop
ds
dec
mov
or
ret
mov
mov
adc
lock
aaa
pushf
add
mov
or
xlat
jmp
daa
test
rcr
mov
lock
cmps
xchg
xchg
pop
in
push
ret
repnz
loopne
dec
add
pop
(bad)
fdiv
mov
ret
push
sub
das
mov
adc
inc
mov
gs
jb
push
(bad)
and
mov
pop
imul
les
lea
ret
lock
arpl
push
mov
clc
jge
fs
xor
fstp
add
out
pop
popf
mov
(bad)
arpl
je
or
jmp
inc
add
sub
or
pand
mov
out
xor
push
mov
scas
cmp
xor
mov
jbe
jp
add
stos
out
test
xor
inc
mov
cmc
call
xchg
inc
daa
(bad)
hlt
inc
stc
in
xor
pop
mov
jg
cmps
mov
shrd
loope
in
pop
or
sti
sti
ss
jae
xor
or
aam
inc
pop
outs
xchg
scas
push
sbb
jbe
leave
sub
stos
and
cwde
push
fwait
dec
sbb
adc
leave
xor
sub
es
add
inc
jmp
int
aad
mov
cmps
dec
int3
adc
pop
sti
adc
inc
stos
fs
xor
or
dec
inc
xchg
adc
mov
jb
jno
popf
xchg
out
call
xor
jb
je
pushf
jle
idiv
clc
jmp
nop
pop
(bad)
(bad)
fwait
(bad)
iret
adc
(bad)
sub
mov
sahf
cmp
adc
jle
inc
jno
test
push
ja
xchg
test
test
push
add
cmp
in
iret
push
call
add
adc
and
xchg
and
pop
leave
into
mov
inc
(bad)
mov
mov
jmp
push
push
daa
pop
jne
mov
mov
jbe
push
jb
xor
sub
push
or
mov
retf
inc
fiadd
jl
je
xor
adc
mov
ds
push
mov
movs
aad
cmps
in
mov
add
pop
pop
inc
jae
rcr
inc
retf
push
push
mov
dec
mov
mov
pop
imul
jne
out
lods
or
aad
xchg
xchg
mov
fcom
into
aam
and
fsub
push
pop
pop
es
add
pop
enter
cmp
ds
mov
xchg
push
retf
mov
pop
jecxz
aaa
add
add
mov
movs
clc
lea
adc
je
or
(bad)
rcr
lods
mov
cmp
int
fdiv
jno
add
sbb
adc
cmp
sbb
mov
shl
sti
nop
mov
dec
and
imul
repnz
ror
sbb
je
inc
adc
vpcmov
lea
add
inc
repnz
jno
icebp
leave
sti
xchg
or
mov
pusha
fld
xor
or
fcomp
cld
push
(bad)
bound
setg
(bad)
push
push
fadd
stos
cli
and
aam
fisttp
vpextrw
adc
mov
add
cmp
cmp
inc
fldcw
js
xlat
loopne
fisubr
repz
outs
shr
movs
arpl
mov
outs
mov
iret
fwait
cmc
sar
gs
ins
jmp
adc
cdq
pop
data16
stc
jne
daa
hlt
call
fdivrp
outs
xor
push
loop
fidiv
loope
push
shl
aas
fild
test
dec
pop
cmp
sbb
cmp
mov
les
in
sar
inc
das
push
cwde
fwait
hlt
mov
xchg
loope
adc
inc
mov
sbb
loope
mov
xchg
inc
cwde
(bad)
sar
dec
retf
mov
into
retf
(bad)
inc
sar
mov
jg
ror
iret
jb
leave
and
or
inc
add
leave
or
pusha
dec
int
loopne
adc
or
cmps
or
(bad)
jmp
xor
sar
(bad)
retf
mov
pop
jae
shr
(bad)
retf
dec
ret
(bad)
nop
nop
or
popa
push
div
cmps
pop
div
and
fs
popa
cmc
and
mov
cmp
outs
jg
cwde
push
mov
fimul
fadd
out
mov
add
adc
inc
jne
sbb
rcl
retf
and
push
jbe
add
out
sahf
bound
icebp
retf
fwait
pop
aas
das
xchg
push
mov
shl
lea
and
in
adc
or
or
gs
xchg
add
pop
mov
pushf
sahf
fsubr
mov
add
fstp
inc
cmp
xor
sub
lods
mul
xor
inc
fwait
pop
cld
jmp
ja
xor
scas
bound
xor
in
cwde
icebp
mov
pushf
in
sub
xor
cmps
(bad)
xor
pop
bound
xor
add
sbb
adc
adc
popa
outs
stos
inc
iret
dec
jae
cmc
pop
scas
push
(bad)
(bad)
loop
inc
pop
mov
inc
inc
ins
out
mov
bound
cmp
arpl
mov
stos
sub
xchg
test
push
jl
adc
xchg
and
mov
out
inc
inc
mov
mul
cld
data16
push
sub
inc
imul
or
ins
repz
dec
(bad)
div
jb
dec
pop
sub
xor
xchg
dec
inc
cld
xor
dec
push
push
mov
daa
shl
test
movs
test
je
out
xchg
mov
inc
push
mov
xrelease
jmp
cmp
call
in
outs
jnp
std
call
pushf
jmp
out
or
bound
enter
in
xchg
push
mov
mov
or
mul
mov
in
dec
jns
mov
push
add
push
push
imul
add
cmp
femms
and
adc
js
inc
loope
and
retf
sar
xor
shl
sub
movs
lods
xchg
fbstp
adc
fadd
adc
xlat
loop
mov
inc
shl
xchg
js
mov
sbb
mov
inc
xor
cmp
cmp
xor
add
mov
push
in
pop
mov
xchg
repz
shl
enter
mov
(bad)
out
(bad)
frstor
and
jb
inc
movs
fcom
or
xor
sub
(bad)
or
and
adc
cmp
jmp
cmp
lods
into
lahf
pop
and
pop
leave
or
fcom
sbb
xor
les
and
adc
scas
js
adc
xlat
inc
es
adc
sub
inc
mov
push
push
pop
dec
mov
scas
test
gs
add
cld
retf
out
call
outs
out
call
sbb
(bad)
out
stc
or
dec
and
(bad)
pop
mov
sub
dec
nop
push
leave
mov
jbe
and
sbb
adc
or
ror
cmp
mov
xor
sar
mov
fwait
mov
xor
mov
pop
and
int
adc
leave
aad
arpl
sbb
dec
test
dec
cmp
leave
pop
popf
push
fs
loop
cmp
inc
xor
ror
(bad)
cmp
adc
add
sub
pop
push
xor
and
mov
pop
das
push
and
ret
push
pop
xchg
cmp
arpl
fsubp
inc
and
push
dec
lock
mov
enter
pop
test
xchg
cmp
lds
or
sub
push
ficom
or
xchg
cwde
push
pop
int3
adc
push
push
hlt
xor
jp
shl
add
jb
shl
out
sar
ret
add
inc
mov
lock
icebp
inc
dec
std
push
mov
xor
sbb
lods
popf
cmc
pop
mov
ds
dec
ins
fist
hlt
jmp
int
test
outs
aaa
fadd
inc
mov
daa
sub
add
psubw
ja
(bad)
call
cmc
cld
jg
int3
pop
xchg
dec
adc
retf
aad
push
xor
sti
adc
fwait
idiv
or
sbb
(bad)
push
pop
push
es
scas
jg
cmp
cli
mov
retf
cmc
rcr
adc
cmp
das
ja
out
iret
mov
cmp
in
movs
(bad)
imul
push
test
out
call
enter
into
popa
cld
fwait
mov
bound
scas
and
adc
pop
cwde
ret
arpl
loopne
in
stc
pusha
fwait
push
lock
dec
scas
faddp
adc
xor
or
loope
dec
call
xor
data16
out
out
(bad)
cmp
mov
daa
adc
ret
or
sbb
mov
push
inc
push
push
push
stos
add
out
sub
xlat
ror
ret
and
mov
(bad)
dec
jecxz
and
ins
mov
les
fnsave
and
into
lock
jae
or
mov
mov
cwde
pop
clc
rcl
aaa
jmp
or
adc
ds
xor
dec
into
push
pop
sar
fnstsw
aam
push
out
pushf
adc
mov
lahf
mov
js
rep
pop
dec
mov
bound
arpl
out
jg
(bad)
retf
(bad)
or
push
or
pushf
cmp
push
inc
mov
daa
jmp
jnp
cmp
in
pop
push
icebp
out
mov
dec
jno
mov
dec
jo
jmp
cld
shl
pop
pop
loop
sbb
jb
retf
and
mov
idiv
dec
outs
(bad)
lock
pusha
xor
fist
push
out
or
das
ins
jle
std
push
pop
pusha
mov
aaa
dec
inc
cmp
in
paddsw
shld
outs
and
pop
fisubr
cld
arpl
popa
hlt
daa
pop
test
xor
leave
add
mov
fbld
jle
mov
jne
fist
loopne
rol
cli
cmp
push
inc
add
mov
push
test
push
loopne
sub
pop
mov
dec
cmp
mov
cmps
adc
push
jge
dec
adc
mov
repz
test
stos
jne
push
pop
xchg
mov
(bad)
push
out
cmp
mov
cs
or
jp
aam
push
inc
cs
or
daa
repnz
dec
(bad)
fcmovnu
xor
ret
fistp
fsubr
inc
movups
mov
aas
adc
hlt
inc
(bad)
sbb
int3
push
xchg
fimul
ins
int
jmp
shl
dec
aas
sbb
retf
js
and
sbb
adc
jns
iret
cwde
in
cld
push
and
or
imul
sbb
adc
pop
sbb
repz
cmp
(bad)
jmp
movs
aad
and
add
fisubr
mov
std
addr16
adc
add
sbb
mov
dec
loop
adc
jae
jbe
cmps
cmp
add
ins
push
xchg
cmp
mov
sbb
mov
xchg
icebp
mov
sub
das
mov
pop
neg
das
or
jl
sahf
mov
mov
shr
xchg
popf
(bad)
cli
sbb
fiadd
adc
push
and
xchg
ja
xchg
out
jecxz
xchg
mov
jb
popa
and
mov
stos
add
stos
cmp
je
sti
sbb
fmul
and
add
add
(bad)
cwde
mov
std
jge
dec
les
add
scas
inc
ficom
dec
mov
or
shr
clc
(bad)
jle
dec
ins
dec
and
jmp
or
mov
sbb
cmp
fimul
xor
or
dec
mov
or
and
and
mov
ds
xor
xor
rcl
not
mov
lods
adc
add
dec
ss
cmp
adc
js
dec
scas
jno
sbb
fs
cmp
jge
shr
dec
jnp
jo
pop
adc
sub
cmps
mov
dec
dec
dec
sbb
and
es
xor
pushf
repz
out
rol
sub
popf
jmp
mov
mov
jns
sar
mov
dec
dec
adc
mov
rcr
fidiv
loope
xchg
push
jnp
xchg
and
cmp
jge
test
dec
add
pop
xchg
(bad)
dec
add
mov
jae
scas
mov
cmp
retf
jp
push
ret
ja
push
loopne
mov
inc
push
lock
mov
retf
frstor
imul
ds
and
or
les
mov
add
push
xor
cmc
mov
dec
outs
sub
iret
repz
sti
inc
icebp
(bad)
out
xor
xchg
inc
stos
adc
jnp
pop
imul
cwde
repnz
cmp
and
xchg
lods
out
jle
jne
hlt
mov
loop
pop
sahf
test
ror
cld
jg
jp
jmp
(bad)
lock
adc
hlt
mov
mov
ror
out
or
sti
leave
sbb
dec
xchg
adc
and
add
inc
push
xor
cmc
jle
add
add
hlt
xor
movs
(bad)
ins
fcomi
lea
xor
mov
mov
mov
jl
jno
push
repnz
gs
fbstp
jle
xchg
adc
adc
sbb
inc
mov
ficom
adc
jl
jge
adc
outs
pop
and
sub
repz
js
pop
movs
cwde
out
mov
mov
pop
aam
icebp
add
push
movs
mov
and
dec
sbb
pop
enter
movs
(bad)
ds
das
test
retf
jno
jae
mov
mov
clc
out
jg
lahf
out
dec
inc
pop
daa
lea
mov
leave
mov
mov
pop
movs
pop
push
jecxz
ficomp
(bad)
lock
cmc
cwde
inc
repz
push
jno
ins
int3
jle
sbb
lds
add
arpl
push
daa
and
mov
sub
pop
fst
jg
pop
mov
ja
xchg
mov
pop
mov
div
push
outs
dec
js
test
jg
mov
int3
jmp
pusha
cmp
aad
dec
cld
outs
push
or
(bad)
std
mov
xchg
mov
(bad)
inc
pop
rcr
lods
xor
loopne
push
jo
sbb
int
and
add
jmp
rep
jg
pushf
pop
les
inc
push
fisubr
mov
jg
sub
xor
add
mov
sub
push
add
xor
mov
dec
pop
sub
aaa
iret
cmc
es
or
aaa
cli
scas
icebp
xchg
sti
add
xchg
cmp
pusha
push
cmp
shr
les
or
jns
in
out
outs
jnp
lods
lods
fcomp
or
mov
xchg
stos
nop
lds
inc
cmp
sub
adc
jb
push
dec
cwde
ss
nop
ds
test
and
jl
ret
fs
xlat
(bad)
imul
inc
sbb
outs
ds
xor
fimul
dec
popf
mov
(bad)
adc
rcl
fsub
dec
cmc
repnz
sub
cmp
mov
int
loope
(bad)
scas
sub
push
pop
in
jo
int
sub
lock
ins
movs
movs
test
jg
pushf
and
out
push
adc
dec
in
movs
mov
pop
cs
mov
clc
mov
dec
xor
sub
push
int3
jmp
jmp
mov
jmp
cmp
shl
fisub
iret
ret
lahf
ds
add
scas
out
mov
jne
fldenv
or
out
and
fisttp
pop
fistp
inc
push
ds
call
sub
into
(bad)
push
jbe
jecxz
add
or
pop
inc
leave
push
(bad)
dec
outs
aad
sub
add
mov
jle
outs
mov
and
xor
movs
inc
cmps
jle
shl
mov
pop
(bad)
add
pop
mov
mov
and
mov
inc
(bad)
fstp
mov
adc
push
push
loop
push
pop
les
cwde
push
outs
pop
mov
sub
loope
js
retf
clc
rcr
das
ss
jle
fs
cmps
repz
and
jae
out
pushf
shufps
test
scas
ret
dec
mov
sahf
dec
inc
(bad)
mov
inc
xchg
sub
ins
addr16
out
addr16
pop
push
inc
pusha
adc
push
aaa
ret
and
push
scas
cli
inc
std
rcl
pop
fbld
es
fnsave
adc
mov
aaa
sub
jp
ror
or
sub
jno
test
cmc
push
pop
sbb
adc
pop
and
sub
sub
lahf
xchg
je
add
in
sub
mov
or
or
gs
in
mov
fcom
adc
mov
jmp
fsubr
pop
fist
xor
xchg
mov
shl
int3
in
lods
into
xor
dec
lods
out
jne
lea
stos
rcr
add
sub
xor
enter
fdiv
scas
xor
gs
call
not
or
scas
pop
jmp
dec
mov
ret
sbb
cmc
cmp
mov
mov
fcmovb
mov
dec
outs
daa
shl
frstor
or
scas
movs
and
nop
inc
aas
rcr
icebp
pop
mov
(bad)
mov
div
adc
push
jmp
in
test
dec
xchg
(bad)
fist
xchg
test
push
cmp
sub
in
stc
xchg
pusha
push
jmp
ror
and
loopne
(bad)
and
rol
fbstp
inc
mov
add
push
bound
test
inc
xor
jle
outs
adc
fnstsw
lock
(bad)
mov
adc
ds
cwde
mov
aam
dec
sahf
xlat
addr16
call
and
dec
mov
imul
ins
pushf
xor
test
xor
dec
shr
ror
retf
(bad)
icebp
cmp
cmp
mov
mov
movs
ss
push
popf
cmp
jl
cmp
push
loopne
lods
pop
jnp
pop
mov
les
fld
add
scas
cmp
adc
mov
sub
inc
pop
dec
adc
sub
cmps
popf
pop
shr
clc
mov
and
dec
cli
test
pushf
and
ins
outs
sahf
sub
mov
inc
in
inc
lds
or
mov
xchg
sbb
dec
hlt
push
jmp
ret
nop
jnp
pop
jo
push
push
inc
cmps
jns
ret
nop
xchg
mov
test
daa
ror
enter
pop
gs
std
mov
push
and
mov
fistp
sbb
call
jno
add
popf
loop
in
jl
sub
in
jbe
jbe
pop
in
sbb
popf
push
jmp
inc
mov
adc
cld
popa
cmp
into
or
cmp
pop
sahf
push
jmp
push
mov
scas
ret
(bad)
xlat
mov
mov
sbb
mov
jp
add
mov
stc
loope
jl
cld
and
fwait
repnz
movs
mov
dec
pop
or
jge
inc
adc
add
push
(bad)
push
inc
or
ret
push
pop
sub
jo
js
mov
stos
cmp
dec
loop
sar
jne
push
sahf
inc
push
mov
mov
xchg
jb
push
add
or
or
dec
retf
cs
jecxz
jmp
es
(bad)
retf
call
std
aaa
mov
mov
outs
xor
enter
lods
adc
xchg
movs
cld
add
dec
aaa
int
push
and
mov
xor
jb
push
cdq
pop
mov
pop
mov
repnz
enter
les
fcmovnb
cmp
dec
jbe
call
out
pop
add
jmp
pop
pop
dec
out
ss
mov
popa
(bad)
add
mov
arpl
xchg
dec
leave
bound
fisttp
jb
imul
adc
xchg
retf
test
jbe
inc
test
mov
out
dec
dec
cmc
mov
ror
ins
sub
mov
in
and
shr
aam
ss
and
inc
inc
cli
dec
jmp
sbb
xor
lahf
lock
jg
es
cs
cmps
fld
xchg
push
fs
test
jo
ja
dec
mov
cdq
cdq
in
sahf
pop
xor
je
cmp
sbb
mov
mov
(bad)
cmp
xor
and
dec
leave
dec
fwait
sar
mov
retf
ins
movs
cmp
ds
aad
cmp
jns
in
sub
mov
test
xor
jnp
jle
sbb
xor
cs
jae
or
js
fs
pop
dec
sti
ins
cmp
xchg
mov
push
add
xchg
frstor
sub
dec
call
lods
xor
jnp
xchg
jecxz
mov
dec
push
pop
mov
mov
ins
fidivr
dec
fldcw
dec
(bad)
cmp
lods
pop
xor
hlt
xor
out
test
scas
pop
stc
in
pop
mov
pop
test
cmp
fisubr
dec
jae
mov
jp
inc
pop
out
jl
push
test
jecxz
mov
call
push
repnz
out
push
and
pop
movs
dec
aad
mov
mov
pop
(bad)
push
bound
aam
rcl
sbb
stos
pusha
imul
dec
mov
lock
or
test
dec
sub
lods
imul
shl
aaa
fcomi
jae
push
inc
mov
jb
les
lock
ds
dec
scas
fdivr
add
xchg
pusha
add
data16
dec
mov
push
ins
pop
pop
les
or
xchg
jg
repnz
lods
stos
int
mov
push
or
lods
inc
adc
cmp
jmp
adc
sahf
rol
js
lahf
loop
sub
xchg
in
jbe
lock
out
ins
outs
xchg
aam
jmp
xor
or
out
and
pop
in
punpcklbw
adc
les
ret
xchg
inc
out
push
sbb
pop
xchg
sub
mov
jns
inc
lods
call
out
add
shl
xchg
and
rol
lods
aad
jae
fadd
(bad)
movs
call
xor
push
sbb
sbb
fcmovne
mov
inc
jo
scas
mov
not
adc
aas
ror
mov
jg
adc
out
stos
mov
fisub
sub
inc
in
jl
sbb
aas
jmp
cmp
pop
sub
push
dec
adc
dec
cmc
dec
adc
and
scas
and
lock
xor
sub
mov
jmp
push
inc
(bad)
out
cmp
adc
jb
cmps
mov
test
icebp
in
in
js
or
pop
inc
cmp
pop
loop
xchg
inc
loope
cmps
sbb
adc
sbb
push
push
nop
rol
test
lods
repnz
xchg
test
mov
mov
or
test
es
repnz
and
(bad)
sub
add
inc
(bad)
mov
call
out
inc
or
xchg
fnstsw
test
sbb
mov
xchg
retf
xchg
mov
cwde
(bad)
or
ret
mov
mov
cs
ja
fisubr
rol
sbb
outs
pop
lock
nop
jl
call
mov
inc
cwde
ss
inc
and
sub
mov
mov
movs
shl
and
addr16
fcom
fdiv
xchg
call
mov
xor
mov
cdq
inc
sbb
sub
push
and
push
jno
retf
popf
push
in
jo
fnstenv
ret
xor
movs
sbb
or
mov
jmp
add
scas
and
or
jl
jmp
ficom
enter
mov
movs
ins
movs
pop
sbb
xchg
mov
dec
sub
or
pushf
ins
scas
sahf
cmps
dec
fld
daa
loopne
xor
pop
fist
cmp
rol
or
xchg
sar
pop
movs
gs
mov
adc
(bad)
or
cmc
mov
and
out
dec
fdivr
lods
mov
adc
xor
cld
push
jb
xchg
pop
jae
mov
loop
sahf
cld
enter
ins
pop
sub
in
adc
movs
mov
call
es
sbb
push
or
lock
sahf
lods
inc
(bad)
sti
mov
or
test
mov
js
dec
mov
pop
ret
push
inc
cmp
push
push
cwde
mov
jne
into
loopne
cmp
adc
pop
push
cdq
mov
fadd
in
cmp
popf
inc
mov
xlat
sbb
iret
iret
rol
(bad)
fnstsw
sar
dec
(bad)
aaa
leave
mov
test
leave
push
clc
lods
push
cwde
cmp
std
mov
add
movs
cmps
sbb
out
mov
or
retf
mov
(bad)
cmp
xor
mov
mov
mov
and
ins
pushf
xor
mov
xchg
xchg
in
xchg
push
jge
pusha
and
rcl
mov
inc
out
jo
mov
js
out
fstp
jne
xor
icebp
sar
adc
xchg
out
adc
push
gs
je
adc
push
test
inc
cdq
sub
jno
add
or
(bad)
fsubr
sub
loope
mov
inc
stos
inc
pop
push
mov
and
mov
clc
sbb
cmp
ins
adc
(bad)
out
(bad)
out
es
or
ss
adc
into
(bad)
std
lahf
loope
retf
sbb
in
out
sub
pusha
lds
outs
movs
dec
sbb
fnstenv
shl
test
dec
fild
mov
cmp
scas
lahf
jbe
push
mov
aad
xchg
sub
inc
in
mov
push
cmp
sub
test
jae
push
out
jo
jecxz
popa
sbb
not
xchg
daa
sub
int
addr16
or
iret
mov
push
mov
pop
mov
clc
ss
cmp
jmp
adc
imul
jb
aaa
(bad)
pop
loopne
cmp
adc
cmp
stc
dec
push
cmp
cmovb
(bad)
sbb
jl
sub
mov
jg
cmps
daa
adc
daa
test
cmp
push
push
shl
fnstcw
(bad)
out
fistp
je
jbe
sbb
arpl
adc
jge
or
mov
(bad)
dec
mul
or
adc
sub
sahf
aas
pop
push
rol
inc
imul
adc
or
inc
and
test
cdq
out
mov
mov
mov
ds
mov
aam
fimul
fs
jne
xor
sahf
jmp
mov
xchg
and
cli
sub
shl
mov
and
mov
push
xchg
mov
or
jns
(bad)
bound
mov
sahf
cmp
and
test
jnp
and
popf
fmul
call
rcr
xchg
mov
(bad)
mov
sub
dec
mov
jne
cld
adc
adc
jge
xlat
mov
jl
xor
pusha
xor
shl
call
and
in
jl
jecxz
mov
and
push
dec
imul
(bad)
pop
xchg
(bad)
lods
pop
mov
outs
sub
xchg
xchg
shr
or
shl
hlt
(bad)
xlat
cmp
jg
mov
int
clc
inc
xchg
loop
sub
es
sbb
push
rcl
mov
inc
into
mov
loope
jmp
les
iret
scas
jb
dec
and
out
adc
inc
movs
jmp
inc
pop
mov
sub
lds
test
jle
test
push
push
cmps
dec
imul
imul
or
mov
pop
mov
pop
neg
xor
dec
dec
jg
les
xchg
mov
mov
adc
or
fs
mov
test
push
xlat
loope
push
(bad)
(bad)
cdq
xor
stc
push
cmp
shl
in
or
push
dec
out
xchg
and
add
out
dec
fistp
loope
jp
imul
jo
pop
mov
les
sub
mov
add
push
sti
add
aad
in
aad
inc
xchg
stos
jecxz
clc
and
dec
loop
mov
std
popw
cmp
out
outs
popa
cmc
shl
ins
xchg
daa
jmp
jle
fs
std
mov
adc
inc
jge
pop
jge
sub
xchg
jmp
cmp
stos
sar
cmp
in
mov
mov
aaa
push
jg
cwde
repz
xor
outs
leave
stc
(bad)
pop
loopne
daa
stc
loope
jl
sbb
mov
push
fstp
and
das
jbe
int
(bad)
or
adc
test
fs
scas
inc
jmp
mov
sub
loope
cmp
push
cmp
es
mov
pop
jnp
cdq
xchg
retf
call
mov
dec
ss
lea
push
cmp
and
sbb
inc
es
sub
pusha
popf
and
fucomip
xor
rcr
pop
push
mov
(bad)
addr16
in
bound
inc
xor
in
xor
fild
call
sub
les
pushf
call
mov
add
setns
popf
bound
ret
mov
push
or
pop
movs
mov
mov
icebp
mov
mov
push
inc
pop
jg
aam
loop
aas
ins
push
cmp
popa
into
push
sbb
adc
mov
aas
inc
mov
jecxz
mov
fcomp
and
fimul
xchg
jb
add
jae
into
imul
or
repz
inc
inc
(bad)
jle
mov
nop
sub
je
mov
jge
push
adc
loope
in
push
int3
sbb
pop
xchg
push
repz
add
mov
scas
jl
ja
jnp
inc
imul
inc
push
dec
aaa
xchg
mov
inc
pop
(bad)
ror
push
or
sub
jmp
fbld
rcl
push
push
sbb
fwait
push
rol
mov
retf
inc
inc
stos
outs
mov
add
std
or
mov
ins
or
int3
xchg
mov
mov
push
popa
dec
loopne
(bad)
xchg
xor
(bad)
pushf
fs
aad
daa
add
xlat
cmp
adc
dec
pop
mov
repz
bound
or
and
inc
pop
add
cs
stos
mov
push
xchg
inc
cli
arpl
cmp
sbb
imul
xchg
and
(bad)
lea
out
das
xchg
fisub
adc
inc
push
rol
lds
dec
mov
inc
pop
or
sub
adc
nop
int3
xor
fwait
out
ret
(bad)
and
pop
pop
movs
clc
xor
xchg
inc
sub
test
icebp
pop
movs
rcr
or
stc
xchg
and
jmp
xchg
pushf
rcl
pop
ror
xchg
pcmpgtd
sbb
scas
fst
cmps
push
sub
out
movs
sub
mov
pop
xor
pushf
sti
mov
pop
jne
fld
cmp
xor
ins
push
dec
push
and
stc
xor
fistp
add
retf
fwait
ds
ds
fnstsw
shl
and
test
repz
jg
nop
sti
cld
mov
mov
nop
hlt
or
pop
xchg
movs
adc
ss
sub
cld
mov
and
cmps
dec
aas
mov
push
jne
push
std
xor
pop
in
sbb
push
(bad)
xchg
inc
inc
sti
cmp
test
sbb
in
stc
inc
repnz
pusha
push
leave
dec
sar
push
xor
xlat
cmp
jmp
mov
cli
pop
enter
adc
int
daa
addr16
xchg
and
xchg
dec
jne
and
adc
mov
mov
std
ins
jecxz
pusha
scas
jns
push
test
daa
sar
jp
dec
aaa
add
cmp
push
cli
lahf
add
pop
mov
jge
xchg
pop
mov
in
jae
pushf
or
in
adc
repnz
adc
lods
mov
call
out
(bad)
iret
int3
mov
dec
ficom
jo
out
jb
je
popf
pop
sbb
xor
std
xchg
mov
cmps
cld
xchg
sbb
or
(bad)
in
shl
fcmovb
fild
dec
jae
retfw
les
dec
xchg
aaa
jmp
call
inc
dec
mov
adc
push
lds
mov
arpl
imul
inc
inc
cmp
inc
pop
imul
fidiv
dec
mov
lds
das
inc
lock
pop
cmps
leave
sbb
aam
ret
xor
(bad)
fist
inc
mov
jns
and
jne
mov
xor
jne
(bad)
sub
arpl
jg
and
in
pop
out
add
cmp
(bad)
je
dec
pop
cmp
fdivr
mov
jp
and
jecxz
inc
(bad)
adc
xchg
xchg
pop
fsubr
pop
and
sub
sub
(bad)
retf
lock
inc
cmp
lods
jo
push
dec
push
out
fimul
pop
xchg
cmp
adc
sbb
clc
push
lahf
mov
and
jns
pop
xchg
daa
xor
inc
ins
adc
stos
mov
cwde
sahf
test
dec
shr
out
in
mov
push
sbb
repz
outs
stos
aad
daa
out
jo
fwait
clc
cmp
loope
mov
cli
inc
sub
push
daa
jg
lods
lods
cmps
mov
aas
push
dec
adc
mov
mov
mov
ficom
add
cmp
dec
push
shr
xchg
add
xchg
adc
xchg
push
out
outs
push
hlt
and
pop
fmul
mov
xchg
fcomp
add
mov
adc
sbb
mov
cmps
xor
jne
sahf
popf
retf
sbb
jae
sbb
sbb
fidivr
inc
int3
leave
shl
adc
mov
add
dec
mov
xchg
inc
mov
es
lea
test
rol
adc
lahf
pop
mov
stc
mov
icebp
and
push
popa
sar
or
xor
and
int
push
jae
jne
push
lds
movs
repz
shl
fdiv
into
or
pop
inc
xor
sahf
cdq
inc
sub
stc
inc
stos
sub
push
aam
and
(bad)
pushf
sbb
inc
mov
shl
dec
mov
cmp
icebp
loopne
push
js
cmc
lea
add
dec
sti
and
imul
aam
aaa
jge
mov
pop
ret
dec
add
inc
repnz
enter
cmp
and
adc
das
sbb
cmp
mov
xchg
xchg
pop
sbb
push
shl
and
movs
mov
cmc
mov
stc
cmps
xchg
clc
and
and
arpl
iret
fcomp
out
cmp
mov
cs
xchg
or
xchg
daa
mov
or
ds
test
pop
pusha
add
sbb
sub
mov
cmp
push
mov
(bad)
cli
cdq
mov
push
pop
int3
xchg
fnsave
sub
in
fadd
pop
mov
inc
ja
xchg
mov
or
jle
pop
or
jl
lahf
aas
adc
sub
jecxz
cmc
push
cmp
in
outs
aam
and
xchg
not
sbb
minss
pop
mov
lahf
ja
xchg
mov
pop
cmp
ror
hlt
xchg
scas
or
pop
push
leave
cdq
lock
cli
xlat
inc
sahf
and
sbb
sub
stos
jp
sti
and
adc
call
jecxz
xchg
lahf
and
inc
(bad)
jge
xchg
xor
sub
push
add
adc
mov
(bad)
inc
mov
cmovle
test
ja
inc
cmp
scas
adc
xlat
int
add
repz
jo
pop
loope
mov
mov
mov
push
pushf
mov
js
jmp
pop
add
inc
shl
ror
ret
or
(bad)
pusha
pushf
push
aas
cdq
into
sbb
cmps
pop
(bad)
imul
cwde
loope
ffree
xor
mov
scas
mov
fist
dec
push
push
xor
jle
div
scas
add
push
int
fidivr
mov
(bad)
outs
sbb
imul
aam
in
scas
(bad)
adc
push
nop
icebp
jmp
add
cs
aad
gs
lods
cmp
cld
push
pop
dec
stos
shr
bound
xlat
cld
retf
imul
cmp
adc
cmp
aad
lahf
or
cmp
push
lods
mov
ror
dec
push
cli
jl
jp
cld
inc
data16
and
push
mov
mov
scas
pop
retf
xchg
mov
sbb
xchg
fs
pusha
jmp
or
pop
push
sbb
aad
xchg
mov
mov
mov
sbb
mov
outs
retf
xchg
hlt
in
add
rol
xchg
out
in
inc
sub
jle
mov
rol
loope
sar
and
gs
(bad)
retf
mov
pop
das
scas
mov
popf
dec
xor
mov
and
mov
lods
pop
inc
cmp
mov
loope
xor
mov
xor
fsubrp
xchg
imul
out
inc
retf
aam
or
stos
inc
mov
mov
push
push
je
(bad)
push
(bad)
cmp
es
mov
xor
lods
in
add
hlt
adc
nop
and
sbb
std
jbe
jg
sub
pop
cmp
js
and
jle
push
and
push
stos
das
sub
jb
and
dec
iret
clc
ds
xchg
test
into
fsub
dec
or
movs
lock
aaa
mov
inc
add
xor
shl
clc
shl
dec
sbb
ror
mov
imul
int3
fldenv
sbb
push
or
lock
push
sbb
ja
adc
sahf
xchg
xchg
data16
fistp
dec
cmps
retf
cmp
dec
call
sar
in
test
adc
and
mov
mov
inc
add
mov
cwde
test
fimul
inc
stc
jp
xchg
or
adc
mov
add
iret
pop
test
sub
popf
and
retf
adc
fsub
xchg
bound
inc
enter
addr16
pop
fstp
popf
cdq
dec
ds
fnstsw
adc
push
fld
xchg
imul
rcr
xchg
xchg
sbb
jne
mov
mov
std
push
cmc
inc
mov
or
cmp
sbb
push
(bad)
cmps
jg
stc
sub
outs
popa
xchg
xor
scas
and
mov
ss
cdq
xor
mov
addr16
adc
add
sbb
mov
ret
mov
cmp
pop
and
rcr
not
pop
fs
lahf
jnp
clc
sub
call
fsubp
mov
xchg
xchg
imul
std
cwde
iret
cmc
outs
pop
call
call
sar
mov
lock
adc
jg
mov
dec
dec
rcr
xor
or
fwait
repz
or
cs
cdq
push
loop
xlat
(bad)
or
mov
xchg
sahf
pop
add
(bad)
jecxz
cld
push
add
addr16
hlt
out
call
cwde
mov
cmp
hlt
jns
out
scas
and
inc
arpl
(bad)
dec
dec
lods
jne
test
ss
shl
xor
jmp
xchg
and
bound
jl
stc
jmp
mov
xchg
(bad)
in
mov
and
fmul
scas
arpl
nop
enter
enter
retf
sub
jo
or
js
lock
dec
int
call
fadd
mov
mov
imul
push
mov
imul
imul
inc
cmp
gs
ins
jmp
sbb
fwait
dec
mov
mov
push
rcr
mov
xor
outs
or
fadd
xchg
les
popa
loopne
enter
or
repnz
dec
mov
dec
jne
cmp
push
or
ins
mov
push
jecxz
xchg
dec
dec
adc
jns
iret
shl
xchg
cs
push
inc
mov
jo
icebp
dec
ficomp
js
fmul
pop
jae
lods
xor
repz
mov
pusha
setge
test
int3
and
mov
cmps
aad
in
sub
inc
ins
push
icebp
outs
pusha
push
aaa
xor
jle
outs
push
aad
iret
ror
mov
das
shr
push
cmp
push
(bad)
lods
out
add
(bad)
std
mov
xchg
jo
inc
xchg
sub
xchg
mov
dec
sub
mov
sbb
xchg
mov
jp
jg
in
mov
jmp
pop
leave
sbb
dec
pushf
sub
movs
out
dec
pop
shl
sub
sbb
je
fimul
ss
idiv
add
gs
in
adc
ds
popa
inc
inc
imul
and
add
fimul
sub
fucomip
fwait
cld
sub
cmps
jmp
push
push
in
xlat
(bad)
sti
mov
mov
push
mov
(bad)
adc
mov
ds
xor
mov
xor
push
lock
ins
cmps
jnp
xor
and
add
scas
imul
ror
sbb
ds
mov
add
jae
das
cld
lahf
fldl2e
mov
and
cmp
out
cmp
xchg
inc
daa
sbb
cmps
and
and
add
leave
imul
mov
(bad)
imul
inc
pushf
mov
sbb
inc
ins
(bad)
pop
jns
jge
out
bound
pop
rcl
jns
xor
ficomp
es
es
lds
or
cmp
adc
mov
jle
pop
icebp
mov
mov
cwde
test
pop
pusha
fcomp
int3
dec
call
cmp
xor
sub
sbb
pop
shl
in
and
add
rol
jge
jbe
outs
into
aaa
dec
outs
adc
push
leave
mov
sbb
jp
pop
dec
dec
cmp
clc
pop
pop
shr
inc
jmp
inc
test
in
sbb
mov
loope
mov
ret
cmp
jns
hlt
mov
pushf
sbb
outs
(bad)
scas
(bad)
test
fistp
in
cmps
out
cli
ret
ins
retf
or
aaa
xor
pop
into
and
push
dec
inc
push
jmp
adc
mov
imul
xchg
int3
pop
mov
pop
cmps
inc
mov
cwde
jmp
push
cmp
mov
mov
dec
es
popf
push
dec
and
imul
repz
in
adc
pop
fist
or
mov
loopne
aad
cmp
adc
in
stos
and
xchg
sub
cmc
xor
(bad)
retf
outs
imul
push
mov
movs
xchg
cmp
mov
out
sbb
mov
pop
xor
mov
inc
aad
mov
addr16
xor
xchg
dec
xchg
lahf
test
dec
cmps
inc
rcl
out
mov
iret
aad
lock
ss
retf
neg
ss
jp
icebp
sti
stc
lahf
jl
xchg
jb
lods
jle
jb
push
ret
adc
xchg
pop
xor
jno
jl
lahf
outs
loop
push
stos
(bad)
imul
xor
(bad)
pop
cmps
enter
dec
mov
shr
jecxz
xchg
mov
inc
xor
aad
out
cmp
cmp
or
push
icebp
jg
icebp
jge
fstp
cmps
ins
imul
cmps
mov
mul
jne
les
test
mov
nop/reserved
test
adc
xlat
mov
sar
inc
scas
xor
out
ins
mov
pop
add
xchg
repnz
sbb
push
mov
shl
retf
pop
jo
and
mov
inc
test
and
sbb
icebp
cmp
pusha
lds
(bad)
xor
dec
scas
mov
mov
cwde
add
jb
adc
mov
cs
mov
adc
jecxz
jns
cli
or
addr16
adc
fist
push
push
sbb
push
sbb
daa
add
mov
sub
std
test
cmps
hlt
cld
loopne
int
push
out
push
cmp
inc
out
pop
ds
fld
movs
mov
pop
pop
adc
out
arpl
and
arpl
inc
iret
inc
sbb
call
push
into
pop
imul
in
mov
xor
test
or
movs
rcr
lahf
gs
stos
sub
mov
jno
jg
cmp
add
pop
(bad)
cmp
test
or
aaa
call
ins
aaa
cmp
xor
mov
out
dec
sbb
and
jne
fidivr
adc
jg
mov
cmp
ss
pop
jle
inc
jnp
mov
pop
in
test
scas
cmp
mov
test
and
adc
jns
sub
lods
xchg
sbb
les
mov
mov
sahf
dec
test
dec
es
ret
out
dec
jl
mov
xor
add
(bad)
jg
fst
repnz
fwait
adc
retf
pop
mov
xor
fwait
int3
aad
xchg
retf
sbb
add
mov
jne
hlt
stc
bound
sub
mov
leave
mov
dec
out
xchg
out
and
and
or
mov
adc
pop
sar
sbb
cmps
or
jl
inc
inc
pusha
sti
dec
clc
stos
mov
jp
pop
adc
fdiv
movs
lea
mul
sar
inc
and
jno
pop
push
sub
in
mov
and
inc
repz
inc
and
adc
cdq
jae
loope
or
ret
and
cs
retf
mov
retf
retf
or
loope
or
ret
std
xlat
clc
fbstp
imul
push
adc
cmp
movzx
stos
mov
outs
or
retf
out
jb
lahf
hlt
outs
and
aaa
mov
xchg
jmp
push
sub
lahf
data16
addr16
jmp
out
xchg
fsub
xor
es
sub
sar
or
icebp
mov
adc
(bad)
push
ja
push
pop
cmc
push
idiv
in
aas
(bad)
mov
ret
inc
mov
push
sbb
retf
jg
dec
pop
scas
movs
push
test
and
(bad)
sbb
loope
pop
xor
je
mov
adc
cmp
cmp
adc
out
aam
xor
fidiv
dec
push
out
daa
scas
jb
cmp
lock
mov
mov
out
(bad)
xor
pop
xchg
mov
xchg
int3
jae
lds
fadd
xchg
pop
mov
inc
jno
mov
jne
inc
pop
cmp
cdq
(bad)
retw
inc
fnstcw
add
adc
pop
out
aad
pusha
fisttp
test
push
push
pop
clc
and
mov
(bad)
push
sub
add
xchg
push
sub
sahf
adc
push
cdq
cmps
repnz
fwait
xchg
mov
xor
dec
aas
aad
adc
mov
mov
jae
sbb
sbb
inc
imul
mov
out
push
xor
or
mov
test
ret
cmp
(bad)
mov
ret
push
in
lds
add
dec
or
mov
das
xchg
imul
int
and
clc
pop
mov
push
outs
mov
addr16
mov
adc
pusha
mov
mov
adc
xlat
paddsb
mov
imul
add
popf
push
xor
lahf
ins
inc
push
repz
into
xchg
test
cmps
leave
mov
cmp
dec
cli
push
imul
pop
in
sub
sub
lods
lea
test
sub
mov
cmp
cmc
or
in
add
mov
adc
fild
retf
mov
es
jl
inc
push
ret
out
je
or
data16
inc
mov
std
pop
pop
xor
(bad)
jb
pop
fisub
push
xchg
stc
xchg
jle
xor
xor
clc
jl
call
pop
repnz
push
push
jmp
sbb
dec
dec
jge
addr16
(bad)
jl
mov
or
fcmovnu
dec
or
and
out
adc
scas
enter
loope
cmp
std
loopne
addr16
pop
fsub
mov
xchg
pop
ja
jne
cli
sbb
inc
add
gs
or
in
enter
or
dec
dec
(bad)
(bad)
push
xchg
xor
sbb
pop
mov
ds
sub
(bad)
add
stc
out
icebp
xor
adc
or
or
(bad)
dec
imul
stos
sub
popf
dec
mov
and
mov
fsubr
sbb
cmp
(bad)
jge
ja
out
cld
xor
in
sub
loop
xor
sub
mov
in
in
into
fnsave
pushf
popa
cmps
cmp
(bad)
out
clc
jno
sub
in
test
push
mov
jecxz
aas
push
adc
xor
mov
mov
or
xchg
mov
jns
xor
lahf
stos
repnz
aam
or
movs
xor
rcl
cmp
je
jno
pop
outs
ret
or
fadd
jo
mov
and
and
ss
rcr
lahf
xchg
aas
das
inc
lea
push
mov
sub
inc
jb
mov
idiv
icebp
cmp
shl
neg
aaa
js
inc
popf
jbe
push
aad
lods
in
scas
fistp
sbb
sbb
popf
adc
ss
push
fdiv
ins
dec
das
fistp
mov
outs
sbb
lock
in
xchg
repz
or
mov
push
mov
xchg
cmp
in
xor
clc
mov
mov
xchg
pop
ret
loop
sbb
cmps
mov
jns
inc
fdiv
jbe
retf
or
dec
dec
adc
aaa
mov
ret
(bad)
pop
dec
jnp
cmps
mov
xor
out
cmp
xor
jne
mov
or
ins
cmp
(bad)
cmp
es
xchg
aaa
repnz
mov
std
iret
call
mov
mov
jle
inc
sub
dec
fimul
or
outs
add
es
xor
fcom
fs
dec
sti
sbb
inc
lock
jnp
into
mov
pop
adc
(bad)
mov
xchg
aaa
push
or
in
icebp
fisubr
jne
xor
lahf
call
xor
mov
dec
adc
sub
fcmovnu
ds
adc
mov
(bad)
iret
cmp
adc
fidiv
push
mov
adc
xor
retf
cmps
mov
push
jo
sbb
xchg
shr
outs
js
mov
or
xor
dec
push
mov
lods
test
cmp
push
sbb
js
cs
dec
dec
jne
int
outs
pop
add
mov
adc
ds
xchg
jmp
cwde
aaa
fcomp
pop
div
fisubr
adc
mul
cdq
daa
inc
sub
bound
mov
or
test
int3
mov
mov
movs
pop
sbb
cmp
push
adc
test
je
xchg
mov
lods
dec
aaa
mov
jmp
loop
push
iret
mov
pop
mov
daa
sbb
or
inc
xchg
xchg
fdiv
add
jbe
daa
mov
dec
data16
sbb
push
jge
cmp
add
repnz
aad
ror
mul
lods
sbb
inc
aas
jle
jecxz
lahf
mov
ins
div
out
mov
les
inc
in
push
jne
cwde
pop
test
adc
push
pop
xchg
jecxz
jmp
cmp
ds
mov
fisubr
pop
clc
inc
je
cmp
mov
sti
scas
(bad)
sbb
pop
fidivr
or
ds
cli
jecxz
dec
(bad)
stos
repz
jmp
icebp
mov
cli
loopne
aam
mov
(bad)
stos
in
mov
or
adc
dec
lahf
(bad)
int
sub
jne
rol
les
movs
cmp
fucomi
xlat
pusha
adc
ds
pop
sar
(bad)
pop
adc
xor
loope
div
push
adc
in
sbb
mov
iret
push
and
xchg
mov
fcom
leave
mov
mov
jne
into
adc
(bad)
out
fucomip
outs
push
stc
shr
xchg
es
sbb
sbb
(bad)
les
adc
aaa
cmp
dec
vaddsubpd
jmp
out
add
les
xchg
sbb
sbb
mov
mov
leave
inc
adc
(bad)
jle
xchg
shr
clc
jne
jo
loop
push
push
cmp
aaa
repz
aad
ja
xchg
push
sbb
push
(bad)
in
ss
lahf
push
pusha
or
sbb
and
xor
and
out
rcl
jne
push
mov
icebp
mov
(bad)
test
mov
jae
call
into
jmp
or
cmp
inc
arpl
cli
cmc
mov
or
je
aad
xor
ret
loop
fcom
jmp
(bad)
mov
enter
out
int3
sub
xor
addr16
xchg
sub
and
jbe
clc
xor
jo
adc
mov
sub
add
lods
cwde
mov
push
lahf
or
jo
or
loopne
jb
movs
dec
adc
aam
sub
pop
xor
cmps
sti
pop
outs
(bad)
in
cmp
int
pop
push
ds
je
pop
dec
cmp
(bad)
mov
mov
and
pop
call
sub
pop
cmp
add
mov
loopne
call
add
jge
bound
stc
movs
cmp
ret
out
cmp
and
or
pop
mov
js
pop
test
pop
and
mov
xor
inc
cmc
mov
push
inc
or
test
jmp
in
dec
jp
pop
or
ins
add
int
cmp
outs
push
adc
dec
aas
pusha
add
test
jmp
js
int
fdiv
push
pop
js
stos
mov
loopne
(bad)
ret
in
mov
outs
shl
cld
mov
adc
sub
call
lea
pop
dec
mov
sahf
sbb
pop
xchg
test
les
dec
xchg
shr
push
fisttp
add
shl
mov
and
add
xlat
iret
add
shr
push
popf
or
int3
rol
sbb
mov
jb
xor
add
aam
push
xchg
xor
repnz
adc
out
add
aad
in
or
(bad)
and
sar
sahf
das
xchg
push
ret
retf
inc
dec
dec
jecxz
test
jle
stos
frstor
loop
out
arpl
pop
aaa
cmp
in
je
iret
jle
cmps
cmps
mov
mov
pop
pop
xchg
xor
out
mov
shr
push
retf
push
push
cld
mov
xor
or
out
mov
and
je
jbe
and
daa
idiv
sti
pop
cmp
(bad)
iret
mov
sub
sub
ret
fs
inc
push
pop
mov
ret
lods
mov
adc
scas
imul
repnz
xlat
cmp
push
jbe
fcomp
scas
cwde
test
jne
neg
sub
int3
cmps
xor
xor
fst
jge
shr
scas
repnz
repnz
push
ss
cld
dec
int
stc
mov
scas
xor
ins
jnp
popa
loop
call
and
jp
xor
and
scas
mov
jle
xor
cwde
mov
cmp
push
mov
in
mov
movs
fmul
je
scas
pop
mov
retf
imul
inc
xor
push
xchg
test
sub
or
sbb
das
xchg
std
fdivr
(bad)
in
sar
scas
lds
sbb
(bad)
xor
sahf
push
lds
adc
fcmovnu
xlat
push
mov
scas
mov
repz
pushf
(bad)
(bad)
add
cld
retf
shl
inc
or
jmp
stc
(bad)
adc
call
mov
xor
jmp
inc
mov
mov
hlt
ins
push
mov
jno
fidivr
push
enter
sub
inc
cmp
jle
movs
int3
pop
push
xor
imul
add
ror
jb
sar
mov
inc
sub
(bad)
mov
cmp
addr16
movs
test
out
lods
xchg
xchg
scas
pop
hlt
pusha
stos
dec
clc
mov
and
int
push
mov
push
je
mov
mov
jns
pusha
and
push
mov
dec
inc
jmp
stc
sbb
push
cmp
leave
gs
or
xor
sbb
leave
or
cdq
hlt
push
call
cmp
push
mov
ds
sub
outs
mov
or
in
adc
fld
retf
mov
xchg
fadd
xor
repz
lahf
test
cmp
(bad)
std
(bad)
imul
xchg
push
jno
outs
jl
dec
les
psubsw
cli
aaa
cmc
cs
ins
hlt
test
cwde
add
out
in
loop
mov
cmps
stc
pushf
jbe
cmp
xchg
inc
jo
and
mov
mov
scas
xchg
std
call
icebp
imul
or
xchg
sti
xchg
(bad)
out
sub
xchg
lahf
test
fwait
in
fisubr
ret
shl
xor
das
add
xchg
aam
fdivr
xchg
call
pop
xor
cmp
sahf
(bad)
adc
cmps
(bad)
push
fmul
pop
test
cmp
loope
pop
push
sbb
cmps
rol
loop
sbb
and
ret
jne
nop
out
cmp
adc
pop
cld
pop
jno
mov
out
lock
das
xchg
(bad)
bound
call
mov
stc
mov
ins
adc
pop
push
inc
add
call
int
je
mov
int3
pop
scas
cmc
mov
or
stos
pop
je
mov
mov
cmp
xchg
into
dec
cwde
stc
inc
js
add
xor
fisubr
sub
loopne
pop
sub
fisttp
cmp
xlat
int3
idiv
cmps
ja
ficomp
loop
cmps
xor
je
jmp
add
jae
in
clc
stc
retf
mov
lods
sbb
and
dec
out
jno
shr
adc
mov
mov
pop
test
push
aad
mov
dec
xchg
xchg
loop
lea
out
pop
ficom
enter
xchg
jo
lods
dec
cdq
add
xor
mov
aad
fild
xchg
(bad)
fld
jnp
lods
pop
aam
sub
add
sub
dec
add
iret
lds
jno
sub
pop
push
daa
push
cs
jle
hlt
pop
fsub
clc
sub
ins
popf
ret
inc
in
sbb
xchg
xchg
test
aaa
xor
imul
or
fwait
inc
push
fist
jne
loopne
test
les
(bad)
jmp
inc
dec
xor
out
sub
loope
pop
test
fisubr
call
mov
arpl
(bad)
mov
mov
not
dec
or
es
loope
mov
sahf
mov
daa
ss
xchg
ror
cmp
outs
pop
fdivrp
into
push
(bad)
dec
mov
or
adc
add
pop
sub
cdq
aam
shl
mov
pop
pop
cmps
cmp
std
sub
cmp
or
enter
popa
and
test
pop
das
inc
xor
adc
mov
mov
faddp
call
push
popf
inc
ret
repnz
repnz
ins
retf
rcl
push
ins
cmps
jecxz
pop
aaa
adc
ror
cmp
or
mov
mov
fldcw
and
sahf
aad
xchg
cmp
cmp
and
sbb
scas
mov
mov
push
inc
push
inc
cmp
inc
rcl
leave
sbb
pop
imul
pushf
outs
dec
mov
pop
or
popa
test
ins
lods
push
les
sub
out
int
pop
adc
xor
mov
add
pop
(bad)
adc
jp
mov
pop
lahf
jmp
and
inc
cdq
jp
and
add
ins
push
push
mov
pop
xor
jge
in
mov
ins
adc
dec
inc
inc
cmp
cmps
and
sbb
add
inc
push
(bad)
repz
pop
push
sub
jmp
mov
ror
sub
jmp
xor
sub
lea
fwait
in
pop
clc
dec
xor
jmp
pop
pop
cmp
mov
or
sub
(bad)
ficomp
adc
fs
mov
fstp
loope
xchg
xor
pusha
in
out
inc
enter
adc
test
xchg
hlt
jae
inc
add
mov
cmp
sub
pushf
popf
pop
add
dec
push
outs
push
push
inc
mov
mov
sub
out
mov
(bad)
call
repz
dec
sub
push
test
ficom
cmps
inc
rol
dec
push
sbb
daa
repz
test
adc
cld
xchg
adc
push
xor
cmp
push
adc
fsub
lods
fistp
mov
movs
jb
in
in
call
fiadd
inc
lock
int
xor
test
inc
fld
xlat
or
push
or
mov
mov
push
mov
mov
jge
fsubrp
jb
in
in
or
push
les
sub
das
dec
ins
sbb
test
jnp
xchg
jo
rol
mov
(bad)
pop
xchg
push
sbb
sbb
mov
pop
and
jl
xor
pop
jne
lock
xor
jo
and
cli
retf
retf
and
imul
(bad)
sti
mov
fistp
neg
mov
imul
sbb
imul
dec
fcmovu
mov
pop
push
xchg
cdq
add
hlt
mov
nop
aad
scas
jo
jb
cmc
je
jmp
cmp
ror
cmps
add
shl
jbe
jp
inc
sbb
inc
sbb
std
aad
push
pop
xchg
mov
cmp
cli
pop
push
mov
fs
cwde
push
mov
xchg
stc
jnp
retf
dec
xchg
jmp
leave
stc
cmp
mov
add
call
in
or
mov
cmc
stos
jle
imul
jo
in
imul
or
dec
mov
test
push
out
mov
xchg
aaa
mul
retf
dec
ja
jns
xchg
ret
bound
scas
arpl
mov
sbb
and
das
or
ret
mov
sbb
dec
mov
sti
sbb
pop
xchg
fcom
mov
adc
push
pop
sbb
(bad)
call
stc
and
shl
mov
jo
nop
mov
pop
pop
sbb
stc
imul
(bad)
jmp
sahf
mov
fucomi
xor
jl
pop
cmp
mov
or
enter
out
sbb
ror
loope
sub
out
sbb
and
lock
sub
adc
jg
and
mov
push
push
nop
and
call
mov
or
repz
(bad)
retf
adc
jp
rol
push
sbb
inc
out
dec
sbb
cmp
sub
cwde
idiv
and
and
out
enter
imul
je
loope
cmp
pop
fisttp
retf
daa
sbb
sbb
loop
xchg
xchg
jp
or
sbb
push
add
xchg
jecxz
les
cmp
dec
aaa
adc
into
mov
pop
xchg
popf
aad
mul
or
cmp
js
call
sub
aaa
dec
je
in
arpl
jg
and
iret
inc
clc
neg
mov
out
stos
ins
cld
addr16
jl
(bad)
idiv
clc
mov
je
sbb
fldenv
mov
push
add
mov
enter
loop
nop
and
imul
jle
xor
lock
inc
mov
jmp
cli
scas
outs
inc
push
out
out
fld
mov
popf
pop
push
cli
dec
push
loopne
(bad)
enter
push
mov
or
xor
cmc
jae
call
adc
mov
pop
or
mov
add
or
cs
and
xchg
cmp
pop
pop
pop
int
fwait
gs
int3
sub
add
jns
cmp
push
je
inc
jmp
gs
mov
jne
out
xchg
xor
adc
xchg
push
rcr
add
(bad)
enter
cmp
ja
and
cs
(bad)
lods
mov
int
xlat
movs
adc
shr
call
arpl
scas
ja
pop
scas
or
or
and
push
mov
js
ret
sub
sbb
inc
stos
in
mov
xor
outs
cdq
add
or
ds
push
xchg
out
xlat
lock
fist
icebp
outs
into
rcl
int
data16
addr16
fcomp
pop
sub
lods
cmp
dec
shr
push
cmps
push
inc
aam
mov
in
add
pop
xchg
ins
xor
(bad)
ins
ins
pop
dec
aam
sbb
stc
jbe
adc
adc
je
(bad)
or
inc
xor
jl
mov
out
cld
or
fs
pop
scas
adc
xchg
popa
mov
retf
jnp
inc
dec
jge
adc
aad
mov
pop
pop
push
pop
addr16
xlat
cmp
inc
cld
xor
xchg
push
mov
test
sub
mov
fwait
mov
frstor
mov
jmp
enter
sub
js
or
cdq
in
or
lahf
and
jo
jb
ss
stos
and
les
push
sbb
ret
push
pop
ror
loope
(bad)
fcom
mov
xchg
es
cmp
iret
scas
mov
dec
pop
cmps
jecxz
xchg
imul
pop
mov
mov
aam
mov
call
or
xchg
out
imul
pushf
imul
das
jmp
cmps
inc
pop
mov
neg
not
jecxz
das
(bad)
mov
xchg
cmp
and
push
jle
jmp
jo
mov
cmp
cwde
cmp
or
xchg
pop
fucomip
nop
mov
sbb
mov
jae
inc
cwde
cmp
cli
add
mov
dec
(bad)
sbb
lods
mov
pop
loopne
fdiv
test
mov
push
pop
repnz
push
mov
lock
jmp
inc
cs
mov
sti
sub
ret
aaa
addr16
xchg
cli
pop
mov
(bad)
cmps
shr
xchg
pop
inc
inc
(bad)
mov
push
popa
adc
lahf
add
movs
xchg
repnz
gs
jecxz
(bad)
es
das
fimul
out
xchg
test
pop
sbb
pop
xor
lods
xor
xor
push
lods
mov
test
aaa
mov
push
dec
jbe
jne
mov
dec
fstp
arpl
(bad)
mov
xchg
pop
out
outs
cmp
mov
sub
neg
mov
loopne
(bad)
jbe
push
adc
mov
or
xchg
inc
cmp
push
popf
push
fisttp
cmps
push
fst
or
cmp
push
mov
dec
sbb
cmps
pop
jmp
inc
(bad)
enter
stc
nop
jle
sahf
(bad)
cli
or
push
mov
cmp
cmp
fdivr
cs
pusha
pop
sbb
sbb
jae
shl
cwde
idiv
clc
mul
dec
jns
rcr
stc
sub
jo
push
sub
enter
ja
icebp
mov
mov
mov
cwde
xchg
xchg
ja
mov
outs
repnz
bound
call
mov
add
push
dec
ret
jl
pop
mov
mov
pusha
pop
retf
push
fwait
fs
inc
jae
pop
or
push
xchg
or
test
push
add
pop
shl
jp
push
in
jecxz
int3
jno
and
out
loop
push
test
push
xchg
movs
inc
pop
push
push
pop
bnd
fidivr
test
cmp
int3
fisubr
sbb
cdq
jbe
xchg
aam
daa
or
xor
add
dec
cmp
scas
pushf
test
and
mov
ror
stc
movs
pop
arpl
push
psrlq
mov
call
jl
dec
mov
push
xor
aaa
shl
popf
aad
cmp
pop
mov
cs
push
fdivp
rcl
lods
cmps
cmp
ja
mov
repz
retf
ss
div
push
and
and
sub
pop
pop
mov
sahf
sahf
rcr
and
enter
sub
jge
cld
clc
lds
adc
int3
repnz
sbb
push
pop
in
les
pop
jmp
pop
push
jge
call
push
mov
sub
(bad)
push
cmc
pop
(bad)
es
add
ins
push
mov
mov
sbb
jge
xchg
jp
mov
xchg
mov
fsubr
jno
jo
add
pop
add
cli
shl
or
stc
ret
mov
cmp
jnp
(bad)
jne
(bad)
std
sub
ja
jae
cmp
mov
es
mov
out
repz
aad
imul
pop
xchg
mov
js
in
dec
sbb
adc
dec
js
push
sti
je
out
inc
dec
test
in
jo
imul
cdq
sbb
ds
inc
pop
pop
push
loopne
dec
push
das
mov
dec
call
jl
cmc
mov
add
scas
sub
push
inc
(bad)
test
mov
outs
out
loopne
mov
lock
or
(bad)
loope
mov
xor
push
lock
outs
xor
iret
cmc
call
jnp
sbb
jmp
fnstcw
loope
cdq
and
dec
mov
popf
aad
or
sbb
dec
xchg
out
xchg
fs
jg
pop
dec
adc
push
lds
push
cmps
jb
fisttp
icebp
jno
pop
aad
mov
add
lods
scas
add
(bad)
sub
(bad)
inc
sar
aas
fisubr
in
icebp
repnz
call
aam
out
jne
xlat
push
mov
inc
repnz
movs
push
add
sbb
ror
push
aam
mov
out
and
pop
neg
mul
jmp
(bad)
int3
and
push
retf
cmps
rol
leave
lahf
sbb
mov
les
repnz
stos
fcomp
pusha
lahf
pop
jmp
arpl
loop
or
inc
pop
mul
mov
or
dec
xadd
or
iret
and
fdivr
(bad)
dec
test
inc
inc
fdiv
add
xor
int3
push
mov
rcl
adc
cwde
ja
xor
adc
sahf
mov
stos
adc
xchg
adc
push
adc
push
pop
sahf
sub
icebp
xlat
aas
mov
or
pushf
int3
cmp
(bad)
mov
in
imul
mov
fldl2e
icebp
mov
jne
inc
xchg
jmp
lods
(bad)
mov
out
pushf
or
out
and
xor
aam
loopne
pop
repz
pop
mov
inc
push
or
and
aam
push
out
and
mov
jecxz
jmp
scas
dec
mov
jp
and
enter
jl
int3
int
lods
popf
jne
sub
(bad)
or
les
dec
addr16
cmp
clc
and
push
add
int3
add
mov
jle
mov
lods
into
lock
add
mov
int3
test
leave
sbb
bound
mov
ins
dec
ins
stos
test
jmp
les
push
shl
stos
lds
sub
cmps
sub
xchg
xor
sub
dec
dec
or
cmp
fs
mov
sar
push
out
cmp
cmp
and
jo
in
jb
clc
fnstenv
loope
retf
scas
xor
nop
pop
out
iret
pusha
push
adc
sub
sub
lahf
jo
int3
xor
out
push
cld
int3
ficom
sub
cwde
mov
not
inc
dec
in
push
cmp
inc
loopne
jle
rol
cmp
lock
pop
sub
dec
and
leave
dec
repnz
xchg
(bad)
fstp
fisttp
sbb
add
or
mov
sbb
sti
xor
sbb
mov
test
cmps
sbb
rcl
lods
xchg
jmp
scas
sti
sbb
dec
pushf
xrelease
stos
adc
pop
mov
retf
inc
add
into
cmp
fmul
(bad)
jnp
pop
mov
mov
nop
ret
pop
cmp
out
jp
in
cwde
mov
sbb
call
mov
shr
es
ins
add
int3
fsubp
jg
pushf
mov
call
cdq
jne
out
xchg
js
outs
xor
arpl
fidivr
sub
pusha
inc
pop
(bad)
xor
dec
mov
push
push
std
push
dec
pusha
xchg
jnp
cmp
cmp
jno
push
ins
(bad)
push
or
mov
cwde
push
xchg
xor
frstor
mov
push
ins
les
jecxz
dec
sub
xchg
movs
cmps
push
or
pushf
xchg
jnp
fcom
cli
sub
cld
int
stos
bound
cmovae
add
and
in
xchg
test
loopne
imul
add
jmp
out
data16
popf
xchg
and
push
int3
xchg
test
loop
mov
mov
or
cmps
rcr
test
rol
pop
pop
hlt
jbe
test
xlat
push
sahf
adc
sbb
int3
mov
and
inc
lds
cmp
xor
frstor
cmp
jle
fcom
xor
(bad)
xchg
mov
test
push
xchg
inc
adc
sub
scas
(bad)
push
push
mov
popf
cmp
das
inc
cli
mov
cmp
push
xchg
and
sbb
xor
lds
aas
std
push
jge
xchg
je
push
enter
jge
fisttp
in
mov
mov
jge
ss
sbb
mov
mov
scas
pop
jno
sub
xchg
div
xor
fiadd
jmp
cmp
push
outs
and
cmp
xchg
pop
or
jns
bnd
call
xchg
push
push
in
lock
fidiv
outs
scas
call
jo
cmp
add
cwde
cmp
inc
sbb
fsubr
push
dec
lods
icebp
and
add
inc
sbb
push
mov
inc
sbb
add
or
inc
and
jmp
sub
pusha
sbb
scas
(bad)
dec
inc
or
and
push
ds
push
es
mov
not
jb
xchg
mov
jo
mov
mov
fdivr
mov
xor
xor
and
test
xchg
into
mov
dec
jg
ins
push
lahf
loopne
mov
sub
daa
rcr
es
add
sar
add
imul
add
push
pop
sbb
mul
pop
imul
outs
out
fist
mov
cmp
xor
jmp
pop
mov
dec
ret
das
xchg
jg
dec
mov
movs
ret
cld
in
mov
adc
fdiv
add
pop
shl
ror
call
cmps
inc
call
push
cmps
repz
popf
inc
or
rcl
das
cdq
mov
aam
retf
xor
sbb
ret
repnz
(bad)
aam
es
pop
xchg
adc
lods
push
movs
in
dec
sub
gs
in
sahf
jle
lds
cmp
cmp
js
or
dec
and
shr
addr16
mov
xor
jns
adc
fisub
mov
xor
loopne
jb
lock
add
das
popf
sti
mov
aam
jne
add
fs
frstor
jae
fld
inc
mov
ret
adc
adc
xor
jmp
cmps
sub
sbb
leave
rcr
mov
inc
adc
daa
sub
mov
fisttp
loopne
dec
ja
dec
test
mov
inc
stc
push
fisubr
ja
hlt
out
mov
je
adc
inc
and
jecxz
shl
fwait
enter
jae
(bad)
dec
or
jns
fsincos
int
jg
imul
add
adc
sub
dec
dec
inc
mov
sbb
daa
xor
cmp
push
(bad)
inc
in
(bad)
rol
jae
imul
(bad)
and
sti
popf
outs
push
sti
push
and
rcl
mov
arpl
sar
mov
(bad)
hlt
outs
add
mov
add
loope
cld
cmp
xchg
stc
inc
cmp
jns
call
push
cs
icebp
add
lea
or
and
pop
add
mov
push
imul
sbb
push
test
inc
xor
inc
in
aam
(bad)
rcr
daa
and
pop
retf
adc
xchg
out
ja
push
imul
(bad)
pusha
in
jp
rcl
popf
rol
je
add
mov
call
jae
movs
push
sub
test
lods
mov
pop
jae
xchg
inc
mov
sub
shr
mov
ja
pop
test
fwait
inc
mov
push
mov
iret
cmps
adc
add
iret
sbb
adc
xchg
aas
cmps
add
push
inc
shr
jns
(bad)
jmp
lahf
cmp
test
cwde
xchg
out
mov
ret
push
lea
dec
jbe
in
test
add
xor
pop
mov
lods
mov
sub
movs
xlat
cmp
retf
pop
mov
add
sar
and
icebp
les
sub
sub
xor
cwde
fistp
push
call
pop
jl
jecxz
xor
js
in
jnp
sub
push
test
add
aaa
and
(bad)
popf
dec
or
shr
fcmovnbe
push
jecxz
in
hlt
movs
mov
sub
outs
mov
stos
jl
shr
adc
fsubp
mov
mov
inc
test
mov
cmp
(bad)
movs
repnz
sub
push
add
adc
out
xor
inc
inc
dec
pop
cmp
pop
ret
rol
dec
in
adc
mov
mov
jge
lahf
inc
retf
test
int3
neg
push
dec
mov
dec
mov
sbb
add
ins
cmps
mov
add
stos
dec
add
out
cmp
sbb
xchg
ror
loope
jbe
rcr
cmp
xor
or
push
adc
test
xchg
sbb
loop
int3
sbb
jg
jnp
push
mov
jne
fstp
retf
leavew
push
and
fst
lods
push
loope
pop
lahf
icebp
shl
je
loop
int
mov
jae
xchg
ja
pop
or
pusha
xor
or
pop
ja
push
mov
xchg
push
dec
(bad)
pop
pop
inc
das
sbb
leave
idiv
lods
push
push
pop
xor
inc
lods
sti
sub
inc
jmp
dec
pop
jnp
mov
retf
leave
pusha
mov
mul
addr16
aas
retf
(bad)
movs
jecxz
hlt
call
arpl
fcom
sbb
in
cmps
jns
mov
call
add
imul
push
sahf
aaa
lods
xor
call
sub
push
mov
(bad)
into
popa
mov
test
das
sbb
stos
dec
mov
addr16
sub
cmc
cld
push
inc
into
ins
inc
in
ret
mov
(bad)
jg
push
pop
pop
hlt
fsub
arpl
mov
push
jne
xor
in
sar
mov
adc
mov
mov
movs
pop
ror
jmp
int3
je
pop
inc
icebp
shr
cmps
aad
and
aad
imul
pushf
fist
jecxz
dec
in
pop
mov
xchg
iret
xor
xor
adc
jmp
sub
mov
adc
pop
neg
call
daa
xchg
sbb
mov
jge
adc
arpl
cmp
mov
pop
lahf
mov
popa
xchg
cmp
mov
jl
jmp
icebp
push
xor
je
push
add
movs
(bad)
jle
sub
ins
add
push
push
sbb
mov
and
ficomp
xlat
dec
and
ds
std
dec
adc
scas
out
jmp
test
pusha
dec
cwde
jl
aaa
dec
sub
dec
test
jl
nop
out
jae
imul
lods
mov
ret
sub
xlat
inc
jg
loop
xchg
cwde
outs
push
les
out
jecxz
test
dec
rcr
and
inc
and
or
mov
xchg
std
push
xor
shr
ss
test
(bad)
sbb
mov
fcomp
cmp
push
adc
xchg
ss
cmp
jb
aas
aaa
in
jnp
pop
(bad)
jmp
xchg
push
(bad)
loope
shr
in
loope
aas
ret
fidivr
jl
or
cmove
xor
mov
mov
rcl
(bad)
cmps
ja
or
dec
rcr
xchg
retf
jp
in
pop
or
mov
pop
arpl
mov
imul
scas
mov
add
adc
or
rcr
xchg
dec
inc
call
xchg
shr
jle
jne
in
and
jmp
cwde
xor
cwde
test
lahf
push
mov
push
pushaw
lods
xchg
loop
cmp
xor
push
cmp
push
mov
rol
rcr
sub
dec
jmp
sahf
pop
fild
xor
ror
mov
popa
mov
xchg
xor
cli
cmp
fimul
lea
test
fisubr
sbb
and
daa
clc
call
je
xor
retf
jmp
sub
out
ss
mov
mov
shl
lods
inc
dec
lods
dec
push
es
inc
in
xchg
ret
je
jge
mov
retf
loope
jb
jle
in
in
xor
test
(bad)
adc
pushf
or
push
mov
jmp
inc
sub
push
rcr
cmp
jg
cmps
mov
ret
xchg
test
ins
lea
jns
scas
xchg
sbb
imul
jg
sub
cli
int3
dec
or
jne
test
gs
push
pop
jecxz
mov
js
rcr
push
es
and
data16
mov
ss
push
aam
mov
ins
mov
jne
pop
out
cmps
div
xchg
or
xchg
test
xor
out
ret
test
movs
add
add
xor
cs
leave
cmp
jecxz
push
aas
ret
fistp
push
shl
push
xor
push
xchg
fadd
mov
js
imul
inc
jne
clc
movs
cdq
rol
mov
dec
mov
fimul
(bad)
inc
test
fs
xchg
pop
pop
pop
(bad)
jge
mov
clc
mov
sbb
cmp
popa
fbstp
dec
fimul
in
repz
pop
aas
fwait
mov
jmp
sub
lds
push
cmps
sub
push
sahf
fs
jbe
dec
xor
sbb
les
cmps
fisttp
retf
pop
xor
add
jae
lahf
jmp
cdq
push
and
cmps
js
repnz
stos
seto
or
mov
sub
mov
sbb
jecxz
cmp
test
mov
mov
fidiv
call
addr16
mov
push
outs
mov
mov
mov
loop
mov
aaa
test
push
clc
fld
add
sbb
pop
pop
test
dec
test
jecxz
dec
fsub
faddp
inc
fild
int3
addr16
shr
scas
lea
scas
push
mov
jge
sbb
dec
retf
sub
jmp
jge
and
fnstcw
jae
jo
cmps
adc
cli
or
jmp
pop
fmul
xchg
mov
sub
jmp
ins
ins
and
cwde
mov
popf
dec
ror
cmp
inc
scas
pop
fistp
mov
xchg
fisub
push
pop
rol
aad
shl
clc
test
mov
push
push
inc
cmp
jle
pop
loopne
in
repz
push
bound
push
or
in
aam
hlt
shl
daa
jle
mov
push
out
repnz
lods
int
sbb
cmp
cwde
adc
loopne
push
ins
sahf
stos
xchg
sub
xor
aad
add
(bad)
mov
push
sub
cwde
ins
dec
aas
stos
(bad)
leave
mov
stc
imul
(bad)
pushf
iret
out
ds
add
jmp
out
sbb
pop
mov
mov
fild
cs
ins
add
popa
xchg
hlt
imul
push
rcl
xor
push
test
mov
cli
sbb
dec
sti
ss
and
std
mov
inc
sbb
xchg
and
loopne
mov
xor
out
sbb
sbb
into
lds
xchg
lods
imul
ret
cvtpi2ps
bound
push
xchg
fdiv
aaa
aam
popf
sti
sahf
not
pushf
push
push
push
imul
nop
rcl
cmp
inc
hlt
sub
shr
sub
jne
sub
mov
pop
mov
push
popa
into
pop
call
or
(bad)
and
jns
and
xor
add
in
(bad)
sub
dec
xchg
pop
pusha
sub
(bad)
adc
jmp
pusha
pop
mov
xor
xor
xor
mov
jb
fbstp
inc
ss
xchg
pop
dec
mov
dec
xor
jae
test
rol
ds
jge
add
movlps
sbb
push
ins
lock
jmp
ins
pop
mov
(bad)
ret
fdiv
leave
shr
int
(bad)
cwde
pop
in
or
fld
test
inc
ret
ja
sbb
(bad)
rcr
daa
mov
xchg
lahf
rol
mov
cli
aas
mov
rol
xchg
or
mov
mov
unpcklps
cwde
cmp
mov
push
pop
mov
or
fwait
retf
mov
xor
xor
mov
or
dec
es
xor
cld
clc
jns
pushf
jns
out
cs
ss
stos
lods
inc
adc
not
or
adc
inc
inc
fwait
mov
jmp
loopne
jle
push
mov
fnstenv
push
fidiv
scas
push
ins
xchg
mov
adc
loope
retf
sbb
or
arpl
adc
fnsave
stos
mov
mov
push
dec
out
fisttp
push
push
mov
xchg
mov
loope
in
or
jmp
inc
hlt
repnz
lods
sbb
stos
push
sub
into
(bad)
inc
in
xor
jne
aas
bound
imul
inc
int3
call
inc
adc
dec
enter
in
repz
jmp
mov
cs
push
inc
mov
popf
cmp
sar
pop
cmps
test
aam
add
jl
fcmovnu
jp
pop
fcom
xchg
mov
sti
xchg
inc
stc
mov
sbb
pop
mov
add
mov
not
push
(bad)
cmc
dec
fidivr
mov
cmps
xchg
push
add
adc
inc
xchg
xchg
jmp
jbe
adc
int3
sbb
sahf
mov
ja
xor
sahf
xor
cwde
rol
lock
(bad)
xor
imul
arpl
or
xchg
aad
aas
in
repnz
iret
std
pop
(bad)
xlat
cmc
push
xor
mov
add
jnp
jmp
into
push
pusha
(bad)
rol
or
ss
fidivr
loopne
jno
push
call
add
xor
inc
and
mov
ins
movs
adc
jb
fwait
jae
pushf
popa
cs
movs
jnp
jmp
mov
pop
cwde
cmp
jb
sbb
mov
push
inc
shr
in
out
outs
and
cwde
xchg
mov
inc
jmp
and
sbb
enter
xlat
ret
sbb
fmul
mov
aas
(bad)
das
stos
imul
adc
xchg
fs
xlat
sahf
pusha
ss
scas
xor
mov
push
or
js
test
and
sbb
xor
mov
mov
cmps
add
loope
xchg
xchg
std
or
ficomp
xchg
jnp
in
js
arpl
movs
sti
sbb
sub
cmp
pop
mov
sti
es
adc
inc
pop
sbb
aad
scas
or
jmp
sbb
mov
inc
pop
popf
sub
arpl
es
jmp
jne
movs
xor
ins
jle
mov
sub
test
inc
push
popa
in
ja
jae
rcl
nop
imul
inc
inc
std
xor
mov
add
into
retf
mov
xchg
repz
mov
movs
mov
sub
aaa
cmc
pop
out
loop
add
pop
adc
cmp
dec
das
mov
mov
repz
inc
in
int
dec
fadd
push
leave
xchg
fs
mov
fadd
movs
pushf
xor
out
push
test
test
push
clc
(bad)
or
push
cmps
cmp
ja
jns
ss
push
mov
pop
daa
push
dec
fisttp
xchg
fnstcw
clc
and
ret
xchg
popa
and
out
inc
scas
iret
not
addr16
mov
sbb
loopne
jl
ds
pop
fdiv
push
push
pop
jae
xor
cwde
inc
ret
push
and
sbb
jge
dec
mov
jp
in
sbb
add
les
pop
push
ficomp
leave
sbb
jle
jno
cs
sub
and
repz
mov
mov
or
push
and
add
and
mov
dec
lock
jle
lahf
mov
retf
push
cmc
jl
sbb
retf
xchg
adc
lods
push
mov
jne
ds
hlt
add
lds
scas
inc
adc
push
jo
stos
mov
std
sub
in
add
mov
int
and
(bad)
mov
loopne
bound
dec
repz
jae
xlat
nop
sub
jmp
ds
call
mov
mov
je
inc
das
jmp
jnp
jno
les
stos
rep
fild
stos
mov
int
test
cli
jge
push
mov
sub
add
(bad)
retf
nop
ins
arpl
add
fmul
jnp
mov
lds
fnstsw
jmp
jmp
mov
fcomp
(bad)
ret
loopne
xchg
pop
stos
popa
jbe
ins
ret
clc
leave
sar
fild
dec
add
mov
pop
sub
test
dec
adc
sahf
ds
pop
jle
push
test
xlat
xchg
ss
sub
or
or
jno
xor
push
lods
adc
enter
outs
xor
cld
data16
not
xchg
mov
dec
movsx
gs
daa
mov
popf
ror
and
dec
add
ret
pop
mov
lea
push
aaa
imul
std
outs
lods
ret
scas
push
or
pusha
(bad)
cwde
jb
scas
cs
rcl
mov
leave
in
dec
dec
cld
jo
fimul
pop
daa
jns
sti
xchg
ins
std
(bad)
leave
inc
push
sub
xchg
add
call
pop
and
mov
xor
push
push
add
loop
sub
or
and
pop
(bad)
popa
clc
(bad)
stos
outs
pop
in
xor
mov
daa
sub
adc
in
addr16
fsubr
pop
xchg
dec
mov
sub
lods
lahf
ds
add
mov
mov
and
in
ins
xor
sbb
fxch
adc
add
out
imul
push
push
pushf
xchg
cdq
xchg
and
jae
in
pusha
ret
sti
fadd
cmps
cld
xor
(bad)
push
test
add
in
sbb
test
inc
xchg
pop
mov
rol
inc
cld
cmp
dec
fs
repnz
push
das
pusha
ret
sub
cmp
mov
mov
xor
push
test
mov
adc
xchg
sbb
ins
shr
sbb
stos
jbe
cs
jnp
dec
leave
and
inc
push
mov
sub
cmp
jl
sar
dec
clc
shl
cdq
(bad)
cmp
sub
sbb
pop
clc
loopne
push
cmp
cmps
fistp
call
ds
sub
jecxz
mov
mov
cli
cmp
sub
out
retf
sbb
dec
add
pop
adc
jge
pop
stc
add
ss
pop
dec
ja
pop
stc
jl
dec
adc
stos
movs
sbb
jl
scas
dec
pop
clc
xchg
iret
neg
inc
mov
mov
mov
sahf
(bad)
cli
xor
adc
cmp
jne
int3
and
jg
sbb
(bad)
mov
adc
int
in
enter
cmps
cmp
jns
pop
push
jecxz
in
out
push
add
es
push
cmp
inc
dec
xchg
or
mov
or
push
arpl
adc
cwde
jp
inc
add
xchg
(bad)
data16
enter
or
mov
(bad)
in
push
rol
jae
jl
adc
dec
push
scas
lods
outs
xchg
into
pop
dec
imul
inc
pop
sbb
cmp
sbb
fidiv
(bad)
jecxz
push
inc
pop
mov
cmp
cmps
in
fist
push
pop
pop
cmp
sub
adc
lods
adc
cli
mov
or
ins
inc
adc
fisubr
xor
dec
shl
sbb
dec
loop
nop
fcomp
test
mov
lds
mov
pop
mov
pop
sbb
lods
dec
jmp
xchg
mov
mov
fcom
mov
mov
adc
add
jo
adc
dec
pop
push
pop
call
lock
xlat
cmp
push
call
in
daa
(bad)
adc
mov
loopne
repz
pop
imul
rol
in
rep
push
cmp
les
xor
xchg
adc
jnp
add
movs
fild
mov
or
loope
sub
mov
xchg
icebp
xchg
adc
and
lock
aaa
popf
sub
jecxz
cwde
lock
inc
inc
rol
stos
pusha
inc
sub
add
push
xlat
mov
ja
inc
lock
pop
loopne
and
push
adc
jecxz
movs
or
xchg
aaa
bound
jmp
xchg
lea
sbb
sbb
add
xor
sbb
or
cmp
in
in
jns
and
call
(bad)
cmp
int3
cmc
popa
mov
sti
xchg
stos
xchg
pushf
dec
in
iret
sbb
dec
repnz
inc
jge
dec
pop
mov
jmp
push
mov
sbb
fdiv
in
sub
jp
push
aam
leave
cmp
mov
sahf
cmps
rcl
or
cmp
and
test
sub
dec
xor
add
mov
sbb
mov
adc
jae
gs
stc
(bad)
movs
xchg
and
mov
in
lock
push
or
je
pushf
mov
sub
shl
mov
in
or
cmp
mov
cmp
pop
sti
adc
xchg
cmc
in
scas
jns
(bad)
or
adc
lock
inc
push
loopne
adc
dec
iret
or
shl
cmp
pop
lods
imul
nop
jns
mov
sub
sahf
xor
inc
fld
arpl
inc
pusha
and
std
test
mov
enter
loop
sbb
pop
fnsave
add
cmp
mov
jg
cmc
ret
out
into
cwde
outs
pop
repz
push
lods
fisubr
retf
dec
xchg
jbe
ja
inc
jne
cmp
push
rol
xchg
(bad)
mov
inc
stos
and
js
jge
and
mov
sbb
pop
(bad)
xchg
lahf
and
fistp
mov
add
iret
adc
(bad)
cmp
inc
mov
imul
mov
shl
js
mov
jno
cmp
gs
mov
test
mov
push
mov
dec
pop
pop
fcom
in
sbb
js
mov
pop
xor
dec
or
shr
movs
inc
imul
fild
sub
test
dec
adc
pop
push
xchg
call
sbb
ins
es
outs
sbb
fwait
jp
add
test
pop
mov
add
mov
test
xchg
aad
add
fwait
xchg
out
call
bound
shl
adc
cli
je
adc
(bad)
int
or
fsubr
aas
jno
in
int3
mov
and
adc
fmul
pop
loop
pop
mov
mov
sti
repz
imul
adc
ds
push
jb
cmp
lods
jmp
repnz
sub
pop
xor
sbb
jae
in
inc
cld
mov
call
rcr
cmp
and
mov
hlt
sub
cmps
push
fwait
nop
inc
ret
or
mov
sub
vhsubpd
jmp
addr16
sbb
cld
(bad)
loope
pop
or
pop
mov
hlt
and
adc
test
xchg
pop
cmps
test
pop
sbb
and
or
mov
lods
(bad)
xchg
sbb
(bad)
das
ret
loop
std
cmovbe
leave
dec
adc
cmp
retf
bound
ja
imul
xchg
xchg
jnp
cdq
cmps
pusha
add
dec
div
jmp
jmp
and
mov
inc
nop
loope
jge
inc
or
in
sub
push
sub
fistp
fcmovne
in
lods
adc
jb
retf
nop
cmp
shl
retf
and
mov
mov
pop
ror
jo
mov
mov
mov
add
scas
sbb
pushw
mov
cmc
lock
leave
dec
ins
mov
pop
lahf
inc
or
mov
(bad)
fild
das
jne
dec
mov
lock
ins
mov
fnsave
push
and
jmp
int3
imul
and
mov
dec
cwde
je
scas
dec
inc
or
ja
adc
imul
or
sub
cmp
mov
xchg
and
or
dec
stos
cmp
je
into
popf
mov
jnp
push
sar
sub
or
scas
mov
xchg
shl
fcmovne
das
cdq
je
lods
xor
aad
cwde
add
pop
xchg
je
int3
pop
push
js
jb
bound
sahf
pop
mov
mov
xor
cmc
dec
cld
stos
lds
sub
ret
and
xchg
mov
cs
icebp
sub
push
xchg
mov
seta
mov
scas
sbb
(bad)
jp
es
sub
(bad)
in
out
(bad)
mov
add
jle
loopne
dec
xor
cwde
movs
out
pushf
lds
rol
add
jbe
sbb
sbb
fistp
sbb
or
hlt
xchg
mov
push
loop
xchg
dec
arpl
xchg
aas
mov
sti
push
shl
adc
jbe
sbb
enter
das
xor
ret
lods
mov
push
(bad)
std
mov
movs
and
inc
sub
mov
push
fbstp
and
mov
jne
out
xchg
hlt
cmp
dec
(bad)
mul
shr
dec
jnp
cs
xchg
lock
hlt
lahf
or
fldl2e
pop
sbb
push
or
sbb
in
mov
mov
mov
mov
xor
xor
jno
ret
js
popa
pop
scas
cmp
sub
and
mov
xor
and
xchg
pop
mov
jne
xlat
inc
cmp
push
(bad)
mov
repz
push
paddb
call
mov
(bad)
imul
fcomp
lahf
stc
int
or
sub
daa
mov
movs
jl
jno
push
pusha
ficomp
jle
adc
pop
jg
dec
pop
xor
aad
jne
xchg
or
mov
or
outs
mov
mov
cmp
in
mov
(bad)
adc
ja
pusha
sbb
arpl
in
mov
pop
xchg
and
jnp
mov
cmc
mov
push
dec
pop
xchg
adc
add
jmp
ror
push
lds
jo
in
mov
neg
pop
push
mov
dec
vmulss
xor
mov
ret
lahf
popa
xchg
fmul
mov
jg
cld
outs
movs
jmp
jge
dec
aad
(bad)
dec
aaa
test
cmp
xchg
sbb
dec
push
repnz
inc
jmp
mov
push
mov
cmps
aaa
test
scas
icebp
ds
jbe
cmp
inc
ds
cmp
sub
dec
fadd
cmp
test
mov
into
cmp
loop
adc
pop
cmps
mov
gs
adc
inc
addr16
ja
hlt
jno
jns
and
aad
adc
popa
aam
ret
sub
xchg
retf
pop
cmp
push
push
push
push
in
ret
cs
adc
pop
pop
dec
push
mov
es
pop
jl
adc
pop
xchg
push
mov
(bad)
rol
sbb
int3
icebp
jb
pushf
mov
jae
imul
mov
jg
xor
int
dec
aaa
push
loope
cld
sub
pusha
jns
cs
icebp
fst
retf
push
sbb
data16
iret
fcomp
push
rcl
jb
je
movs
xchg
lods
pop
cmp
xchg
fwait
push
call
cs
dec
and
jnp
mov
mov
inc
dec
push
add
enter
jne
and
arpl
imul
mov
inc
fisttp
enter
loope
adc
sbb
or
loopne
push
jbe
push
push
in
gs
jl
xchg
jp
outs
adc
mov
fsub
jae
out
ret
jne
sti
scas
mov
jle
cli
cmp
push
sub
outs
cli
inc
and
ss
or
les
ret
mov
rcr
scas
sub
adc
les
dec
mov
pusha
cmp
cs
jae
and
mov
cwde
in
xchg
call
push
jb
div
cmp
or
mov
push
(bad)
xchg
test
xor
mov
jo
mov
and
or
ins
mov
mov
inc
nop
jge
push
xchg
iret
push
movs
add
outs
adc
aam
cmp
lss
popf
jecxz
leave
mov
movs
mov
add
test
cmp
sbb
inc
int
loope
add
nop
jmp
daa
mov
push
mov
jge
cmp
enter
daa
push
sahf
jae
mov
xchg
stc
mov
ret
cwde
push
jnp
out
or
int
mov
mul
rol
xchg
je
mov
dec
arpl
aad
or
mov
inc
in
shl
outs
inc
mov
popa
ret
pop
sub
cmp
enter
out
inc
or
js
cmc
jge
fs
cdq
xor
mov
movs
xchg
jle
ins
and
lahf
and
fwait
xchg
out
(bad)
push
mov
add
cmp
or
add
icebp
ud0
push
dec
sub
dec
cmc
mov
addr16
push
scas
mov
pusha
out
loopne
pushf
mov
and
mov
fsubr
pop
enter
es
push
bound
das
in
sub
gs
sub
shl
fld
cmp
cmp
mov
into
loopne
jae
push
nop
rol
push
or
shl
cmp
lods
data16
lock
icebp
inc
xlat
push
jb
push
jmp
out
movs
je
hlt
mov
adc
(bad)
cmp
inc
pop
or
inc
cs
xchg
(bad)
call
pop
outs
dec
mov
jecxz
scas
push
repz
stc
loop
and
add
fdivr
push
cdq
loop
nop
add
xor
int3
sub
dec
push
jge
mov
mov
inc
(bad)
ss
rcr
ss
lahf
push
inc
sub
jo
loop
and
stos
es
pop
and
inc
jno
mov
add
jns
mov
call
imul
mov
mov
repnz
jl
jmp
icebp
and
mov
shl
pop
xor
sti
xor
inc
(bad)
xor
lods
xlat
stos
mov
outs
xor
bound
outs
jl
dec
mov
push
jne
inc
cmp
pop
into
mul
push
mov
in
adc
sahf
pop
gs
in
aam
sub
xchg
push
in
std
rcl
lods
xchg
and
icebp
jns
std
rcr
int
addr16
repnz
xchg
daa
retf
jns
shl
dec
push
fcmovne
cdq
mov
retf
xchg
sub
icebp
aam
fisubr
cmp
pop
sahf
call
jmp
push
adc
jb
test
xor
stos
imul
cmps
xchg
in
fld
add
xchg
sbb
lods
sbb
push
pop
imul
cmc
add
sbb
add
in
pop
jae
lds
or
sti
sbb
arpl
lods
jo
scas
add
ret
scas
cli
iret
mov
cmps
mov
ds
jns
outs
inc
cmps
inc
mov
popf
arpl
jnp
xchg
push
and
mov
in
xor
je
aam
jnp
sbb
push
jnp
inc
in
(bad)
jo
loopne
addr16
dec
stos
cld
or
or
fnstcw
loopne
test
imul
call
pop
mov
movs
inc
out
push
loop
jnp
mov
rcl
shl
rcr
fist
test
scas
push
adc
sub
pop
mov
push
dec
mov
sub
dec
push
mov
js
cmc
js
call
test
adc
xchg
cli
hlt
outs
pop
es
jp
push
adc
xor
push
and
adc
loop
push
cs
add
adc
loop
mov
lea
and
hlt
pop
fstp
and
pop
in
or
xchg
push
fcmovnbe
xor
ror
mov
dec
rol
jle
xor
sub
add
sub
xor
mov
imul
jmp
aaa
add
fwait
sub
icebp
pop
sbb
test
addr16
pop
xor
fcmovnb
push
push
leave
hlt
sbb
shr
jb
cdq
iret
or
shl
adc
inc
cmp
mov
push
jmp
ins
in
mov
imul
leave
adc
aaa
cmp
pop
cmp
lods
cmps
sub
sbb
push
adc
jo
mov
ss
or
pop
and
jle
mov
inc
pop
fbstp
aad
pop
pop
icebp
cmc
fstp
rol
xor
push
mov
cli
jo
adc
hlt
es
mov
cmp
rcr
movs
mov
pop
pop
xchg
pop
xchg
pop
inc
jbe
add
(bad)
cmp
idiv
sub
fbstp
inc
sub
mov
in
jbe
add
leave
add
out
hlt
pop
imul
outs
dec
dec
inc
int3
cmps
xchg
data16
(bad)
or
iret
ja
sbb
inc
sbb
inc
(bad)
cli
cs
xchg
(bad)
dec
mov
das
out
dec
jg
icebp
xor
sbb
push
adc
push
jne
inc
push
(bad)
fsub
arpl
jns
jg
je
ins
retf
dec
jns
adc
cmp
ja
mov
scas
sub
(bad)
jns
leave
mov
int3
cmovle
(bad)
push
dec
mul
mov
test
mov
popa
dec
(bad)
fmul
shr
or
jge
outs
xor
mov
out
popa
and
pusha
frstor
(bad)
retf
enter
adc
xlat
xor
pop
dec
push
pop
sti
adc
jne
jns
sbb
ins
popa
ja
dec
adc
enter
dec
sub
nop
mov
jno
dec
or
jae
int3
call
cmp
sub
call
mov
cmc
xor
aas
ret
sbb
jmp
rol
xchg
shl
mov
ins
mov
xchg
sbb
mov
test
push
xchg
cmp
enter
bound
loop
movs
sbb
aas
repz
jo
xor
lds
sahf
mov
js
lods
add
jb
or
pop
xchg
or
imul
push
inc
xchg
mov
ins
adc
cmps
sbb
adc
out
mov
and
in
mov
pusha
fcomp
mov
xchg
in
mov
inc
adc
stc
ret
sbb
inc
xchg
mov
dec
(bad)
fld
icebp
cmp
test
jmp
xchg
push
enter
cmc
add
aas
pop
mov
cli
jo
fucomp
icebp
ret
xchg
or
in
pusha
test
clc
arpl
xlat
adc
inc
aas
push
push
dec
mov
xor
pop
inc
ret
sub
fs
arpl
sar
cld
mov
lods
imul
(bad)
pop
or
jmp
mov
in
ja
in
pop
cmp
test
lock
xor
stos
pop
pop
mov
hlt
test
movs
adc
fidiv
jne
int3
lock
jp
pop
sbb
push
scas
scas
in
ficom
(bad)
hlt
jmp
fsub
ret
push
xlat
adc
jl
leave
jbe
wrmsr
repnz
xchg
lahf
inc
bound
repz
pop
jle
jns
pop
sub
mov
xor
adc
(bad)
neg
xor
in
lods
std
jb
adc
sar
jae
mov
xor
scas
retf
shl
add
jge
push
xchg
iret
cld
sub
dec
lahf
inc
cld
iret
mov
sub
push
mov
rol
adc
lods
adc
dec
cmps
sub
ret
sub
pop
loope
pop
sbb
loope
pusha
movs
leave
sti
pop
add
inc
lds
fild
sub
shl
int3
or
ss
xor
fstp
js
cmp
pushf
push
mov
das
push
fnstsw
das
sbb
jbe
repnz
adc
cmp
lods
loope
pop
sub
out
sub
ror
jmp
daa
out
mov
push
push
fs
data16
adc
test
xchg
rcr
xor
movs
push
push
sbb
lods
pop
push
cmp
or
adc
jb
hlt
cmc
sahf
arpl
sub
addr16
sbb
lahf
add
jle
sub
lahf
xor
sbb
jns
icebp
aas
fimul
pop
pop
jecxz
and
adc
lock
jg
jns
not
movs
psrlw
pop
mov
xor
fist
push
arpl
retf
sub
es
mov
push
sub
fdiv
cld
outs
mov
jo
aas
jmp
into
xchg
pusha
push
inc
push
dec
fnstsw
mov
mov
ss
cmc
xchg
push
bswap
clc
out
mov
lea
stos
popf
addr16
mov
loope
mov
nop
mov
cmp
sti
adc
and
sub
pop
sub
test
fst
(bad)
(bad)
jg
pop
and
movs
pop
outs
leave
outs
mov
ret
xchg
jecxz
lods
cmc
pop
pop
int
xor
(bad)
push
mov
fwait
xlat
mov
mov
pop
xor
out
sub
push
outs
sbb
fild
test
adc
push
pop
mov
push
cmp
pop
mov
inc
push
arpl
add
jge
sbb
outs
test
dec
cmp
(bad)
je
fwait
mov
cli
xchg
scas
aam
sub
imul
add
ror
scas
pop
jo
sbb
or
sar
stc
sub
mov
jl
das
fcomip
push
sbb
or
mov
xchg
or
sar
div
mov
ror
fnsave
out
loope
push
jnp
jo
jge
sbb
arpl
xor
sbb
xchg
bound
and
and
adc
pop
sbb
xchg
jl
(bad)
inc
add
in
jo
mov
push
mov
int
arpl
test
js
pop
mov
call
push
jb
es
jg
mov
dec
outs
mov
leave
daa
(bad)
push
outs
mov
adc
je
or
repz
repz
ja
stos
cmp
push
pushf
enter
shr
aas
pushf
dec
cmp
cmc
ins
stos
dec
sbb
lahf
call
test
aam
clc
and
cmps
aam
and
or
lods
or
daa
or
jno
dec
out
loop
ret
sbb
sub
dec
bound
mul
in
xchg
pop
shl
xchg
lahf
cmp
loop
inc
jg
fstp
aas
push
or
dec
jmp
inc
adc
mov
call
mov
mov
lock
dec
inc
cmp
(bad)
dec
test
or
add
out
movs
into
fdivr
popf
sbb
sub
cmp
hlt
sahf
cmps
inc
leave
jge
cwde
jl
inc
dec
fist
xchg
adc
bound
xchg
int3
(bad)
jle
cmp
(bad)
sbb
add
pop
arpl
xchg
cmc
(bad)
ins
(bad)
int
(bad)
jmp
jae
xor
(bad)
cmc
movs
mov
adc
jae
addr16
call
and
pusha
mov
dec
std
pop
fnstcw
lock
or
xor
dec
mov
out
bound
mov
(bad)
sub
xchg
jl
imul
mov
push
cmp
ficomp
mov
xchg
add
clc
inc
jns
ret
lahf
or
(bad)
fsubr
and
ret
push
mov
adc
adc
xor
inc
mov
or
test
out
mov
cmps
adc
mov
jg
xor
mov
(bad)
test
sub
sar
outs
lock
jb
and
mov
clc
mov
out
xchg
mov
cli
fsub
cmp
fstp
nop
cmp
out
cwde
and
ins
xchg
and
push
daa
aam
lahf
mov
or
sar
sub
movs
or
mov
in
mov
mov
fld
stos
loope
pop
loope
jbe
les
data16
pop
daa
pop
ja
dec
cmp
mov
lds
pop
dec
ret
mov
shl
ss
adc
and
jo
data16
dec
fadd
xor
call
imul
or
inc
pushf
adc
je
add
loopne
mov
sbb
lock
lea
and
xor
dec
test
pop
retf
jbe
jns
shl
mov
cmp
shr
adc
inc
or
cmp
popf
cmp
sbb
repz
jge
cld
push
jnp
push
mov
in
sub
add
les
cld
add
jle
int3
jbe
pop
cs
mov
xor
leave
sub
jno
jbe
and
xlat
push
fldenv
mov
sub
cdq
add
and
inc
inc
sbb
shr
call
fcom
hlt
nop
add
pop
cmps
fstp
int3
and
inc
adc
ds
dec
xchg
fsubr
add
lock
ins
adc
push
pop
loopne
add
mov
mov
xor
mov
shl
shr
dec
hlt
imul
out
mov
or
or
js
push
outs
in
mov
(bad)
(bad)
pop
ins
sbb
sbb
mov
xchg
push
xchg
cs
mov
sub
in
aad
ss
mov
sub
mov
or
rcl
mov
icebp
add
adc
int
push
or
xchg
mov
pop
push
cmp
mov
sbb
add
in
dec
in
mov
mov
sub
jne
fisub
cmp
dec
jnp
(bad)
in
sbb
repz
mov
inc
or
push
cld
fisttp
jmp
push
sub
or
inc
and
xor
pop
arpl
in
pop
fstp
int3
(bad)
mov
loop
enter
icebp
fs
sbb
mov
mov
mov
ds
push
neg
ret
cmp
imul
je
jl
std
dec
lea
cmp
fwait
stos
mov
add
lods
xlat
inc
test
inc
push
loopne
add
inc
(bad)
ret
jb
and
pop
bound
inc
stos
rdmsr
into
inc
(bad)
sti
mov
push
pop
sar
mov
and
clc
push
inc
loope
push
inc
cmp
mov
cmp
xor
shl
out
adc
push
test
(bad)
or
xor
test
mov
push
out
push
add
mov
out
xor
cmp
retf
xor
lds
lods
or
test
push
loope
js
mov
jne
adc
jmp
and
jg
shr
pop
mov
pop
push
pop
ins
pop
jge
push
mov
push
push
push
mov
sbb
jnp
(bad)
add
xchg
stc
push
add
mov
sub
aas
dec
cwde
or
sbb
pop
and
fimul
push
gs
icebp
mov
add
push
movs
mov
sbb
mov
es
fs
push
(bad)
mov
in
mov
in
and
stc
js
jl
pusha
shl
jnp
adc
xor
jno
or
xchg
or
dec
inc
call
arpl
cmps
jbe
xor
cmp
add
dec
sub
clc
mov
scas
or
jmp
pop
add
mov
jcxz
jnp
mul
xlat
sahf
jmp
mov
retf
push
inc
mov
jbe
popf
cmps
xchg
call
add
(bad)
xor
and
rol
fs
and
jo
jb
ins
sti
mov
mov
fsub
sbb
push
cmp
pushf
sbb
in
fmul
cmps
movs
push
adc
cld
fdiv
push
es
inc
imul
push
(bad)
(bad)
mov
inc
push
add
stos
pop
push
test
pop
mov
xchg
mov
sbb
sbb
push
add
movs
xchg
adc
sub
(bad)
mov
push
sbb
inc
aaa
and
xchg
xchg
xchg
sbb
scas
nop
push
aaa
mov
test
inc
jge
(bad)
xor
jmp
dec
cmc
enter
mov
sub
out
mov
out
hlt
xchg
clc
movs
fwait
sub
add
in
popf
(bad)
cmps
nop
mov
(bad)
xchg
out
inc
sub
ins
imul
into
jae
loopne
and
xor
in
push
dec
adc
stos
sub
push
mov
push
dec
int
or
cld
loopne
dec
shr
xlat
jbe
mov
sbb
dec
jl
scas
lahf
arpl
mov
(bad)
push
jae
gs
(bad)
das
ret
mov
push
bound
(bad)
mov
sahf
mov
mov
jae
mul
dec
sub
mov
cmp
inc
mov
jl
test
les
jo
push
ret
fdivr
cmp
add
cwde
push
pop
shr
pop
lock
fstp
fild
bound
loop
cmps
stc
fld
cmp
sbb
ror
push
push
or
nop
imul
cmps
aaa
leave
cld
inc
dec
jg
cwde
movs
push
(bad)
dec
outs
out
into
sub
push
shl
mov
and
popa
mov
out
test
out
jmp
pop
je
in
shl
mov
pusha
and
adc
mov
mov
rol
icebp
sub
popf
push
rcl
int
call
sub
test
ret
push
(bad)
push
(bad)
cdq
pop
icebp
jle
and
enter
jo
gs
sbb
inc
sbb
popa
or
test
pop
lahf
cmp
pusha
add
es
xor
cmp
pop
imul
or
xor
dec
lahf
scas
mov
adc
sub
call
jns
fisub
sti
push
shl
ret
xchg
adc
gs
stos
imul
call
jp
sahf
pop
mov
inc
xor
mov
stc
sub
xchg
sar
dec
sbb
cmp
fistp
add
dec
pop
xchg
les
pop
push
mov
pop
int
mov
mov
xchg
div
jnp
mov
ins
jge
pop
mov
adc
push
inc
mov
jl
icebp
xchg
ins
sbb
add
pop
pop
and
test
mov
push
out
mov
fisub
cmp
movs
push
and
cld
jecxz
jmp
lea
shl
cmp
mov
int
les
or
sub
ds
pop
mov
fsub
sbb
cmps
adc
fidivr
push
xchg
loopne
ins
push
lahf
pushf
cmc
js
xchg
in
dec
jo
daa
mov
xchg
push
loopne
adc
jge
pop
movs
xor
xor
inc
mov
inc
dec
mov
enter
jge
push
cld
call
and
inc
jb
mov
stc
icebp
(bad)
test
fcmovbe
stc
lea
leave
(bad)
ja
mov
and
pop
fdiv
push
cwde
or
lods
sti
cmp
xchg
aaa
in
fmul
fwait
rcr
adc
mov
iret
stos
mov
das
mov
ret
push
retf
daa
ds
adc
pushf
xchg
int
mov
mov
cld
pop
push
pop
xchg
jmp
cmp
(bad)
jge
mov
dec
stos
and
jb
cmps
pop
movs
fcompp
or
out
and
or
call
add
mov
jmp
dec
sti
popa
loop
dec
mov
lods
fcomp
mov
in
sar
mov
cdq
lods
jmp
xchg
or
ret
cwde
push
sahf
add
cwde
int
(bad)
aad
jle
sub
xor
inc
dec
out
repnz
in
or
(bad)
in
push
sbb
mov
mov
pop
fst
in
inc
sub
dec
sub
(bad)
addr16
push
ja
retf
mov
jmp
loop
xor
in
and
ins
mov
adc
pop
xor
clc
cmp
(bad)
push
lock
add
cs
lods
adc
push
xchg
cmc
or
out
fadd
(bad)
aas
pop
in
mov
test
xor
ficom
jb
jge
mov
push
jmp
xchg
leave
lahf
retf
sbb
or
lea
loopne
inc
jbe
jno
xchg
add
jnp
std
repnz
in
adc
jns
enter
inc
dec
in
jp
lea
dec
enter
and
push
inc
iret
jg
mov
xor
jecxz
and
in
cs
ret
xor
jg
jl
add
iret
sub
jnp
cmp
and
mov
mov
loop
in
dec
cmp
push
hlt
fwait
(bad)
fild
jle
mov
clc
lods
inc
pop
int
cmp
cmc
push
repz
mov
add
inc
dec
and
or
hlt
arpl
hlt
push
inc
arpl
rcr
cli
lods
(bad)
or
mov
gs
push
retf
xor
mov
test
add
aaa
fcomp
test
js
or
xor
fldpi
cmps
and
add
jb
pusha
sahf
jno
outs
aam
adc
pusha
add
aam
jns
cli
fwait
jecxz
rol
sbb
loope
sub
lea
adc
pusha
icebp
lods
mov
ss
mov
out
cmp
mov
sub
cmp
sub
xor
hlt
jp
push
cmp
inc
mov
and
popa
pop
test
sub
adc
xor
test
push
and
xchg
adc
cmp
sub
add
fnstcw
lds
push
ror
xchg
cmp
mov
sbb
dec
push
pop
jecxz
xor
pop
leave
inc
or
xchg
mov
fs
mov
fbld
icebp
cmc
and
mov
ds
mov
ss
jmp
aad
stos
aam
lods
jl
pop
mov
mov
and
cli
cmps
push
mov
imul
addr16
sub
cwde
stos
inc
je
xchg
movs
ret
xchg
xchg
lock
test
fld1
call
mov
cmp
mov
js
outs
pusha
push
aaa
jl
es
leave
repnz
nop
jbe
or
(bad)
in
add
dec
ins
mov
hlt
imul
icebp
stos
and
push
enter
jne
out
fcomp
jmp
xchg
dec
mov
xchg
vpackuswb
and
addr16
int
and
enter
enter
push
pop
mov
je
push
ja
stos
pushf
add
xchg
mov
bound
sbb
sbb
loop
sub
outs
jl
jmp
popa
xor
or
adc
aas
sbb
mov
pushf
mov
(bad)
mov
and
fs
icebp
bound
xor
popa
pushf
fdivr
mov
movs
hlt
ret
fld
dec
sbb
pop
retf
xchg
mov
ins
(bad)
popf
jle
lods
pop
ja
repnz
mov
mov
lods
cmps
mul
mov
aaa
stc
sub
lock
or
add
mov
fsub
lods
imul
lods
mov
xchg
aam
pop
xor
imul
test
(bad)
mov
sub
enter
adc
adc
mov
cmp
push
mov
add
push
xor
ret
in
push
dec
ja
cmps
inc
bound
mov
mov
retf
jle
outs
mov
adc
cdq
icebp
sbb
ins
lods
in
or
sub
pop
daa
add
rcl
rcl
fdivr
push
pop
mov
jg
sbb
add
addr16
test
xchg
test
add
sub
pusha
aam
cmp
jecxz
es
add
mov
cmps
and
loop
jle
call
arpl
(bad)
inc
push
mov
xor
pop
sbb
mov
ret
sub
(bad)
fcmovbe
lahf
in
mov
jge
cmc
xor
js
xor
std
out
adc
push
lea
sub
jo
ins
sub
popa
nop
jmp
pop
fst
imul
push
jae
cli
sub
mov
aad
icebp
ret
aad
xchg
(bad)
call
xchg
test
pushf
mov
fs
cmp
push
pop
xchg
or
popf
sbb
stos
ror
mov
sti
xor
call
or
xor
xor
fidiv
shl
call
int
or
inc
mov
sbb
mov
shr
cmp
lea
scas
ins
or
mov
xor
add
sub
sbb
jo
jbe
cmp
setne
scas
adc
ficom
cdq
movs
mov
fsub
mov
push
or
fsubr
mov
dec
sub
seto
bound
mov
fistp
jmp
iret
push
cmp
adc
sbb
out
add
(bad)
cdq
loope
loopne
sbb
sar
push
sbb
fs
adc
sbb
mov
push
adc
dec
mov
push
xchg
(bad)
fistp
dec
iret
aam
bound
adc
fldcw
pushw
inc
sbb
pop
scas
(bad)
fistp
(bad)
pop
or
push
in
cmp
push
gs
inc
inc
xor
push
loop
outs
out
adc
push
dec
aad
sbb
ror
mov
mov
scas
pop
add
mov
jmp
dec
clc
mov
neg
ror
dec
push
or
dec
push
sbb
and
or
sub
int
cli
inc
enter
sbb
mov
push
pop
retf
mov
sar
inc
sbb
(bad)
in
add
push
inc
pusha
iret
addr16
push
pusha
or
add
retf
inc
add
out
sar
xor
scas
mov
xor
mov
jle
(bad)
xchg
ss
mov
sub
shl
mov
push
lods
mov
mov
adc
popa
call
xchg
jbe
popf
jbe
mov
call
div
mov
sbb
std
icebp
sbb
jns
pop
mov
push
xor
cmps
cmp
rol
inc
std
and
popa
cdq
ds
loop
test
addr16
psrlw
in
sbb
mov
je
aad
test
cmps
popf
xchg
push
add
mov
cmp
sub
mov
pop
into
std
js
ror
cmc
stos
sub
sbb
mov
xchg
adc
addr16
inc
lahf
(bad)
push
cmp
sub
cli
or
sahf
adc
sahf
(bad)
aad
dec
xchg
fs
scas
sbb
push
mov
scas
test
ins
clc
dec
adc
and
movs
lahf
dec
mov
cmps
mov
out
cmp
inc
dec
shl
aad
cmp
jge
(bad)
call
inc
and
call
sub
sar
fidivr
push
inc
xor
pop
cld
fsubr
cld
pop
pushf
xchg
repz
dec
leave
in
xor
ds
adc
xchg
lea
aam
mov
data16
push
fistp
out
mov
(bad)
fild
mov
jmp
stos
ds
dec
mov
jp
ins
jp
add
dec
into
out
push
addr16
int3
retf
sbb
xor
jne
inc
xor
arpl
sub
les
xlat
mov
out
xlat
arpl
or
adc
imul
aad
(bad)
fsubr
lods
xchg
pop
pop
int
adc
jg
mov
dec
hlt
mov
fldcw
imul
lods
arpl
jo
ret
rcl
pop
mov
sub
sti
enter
ficom
and
xor
jo
lods
popa
ins
out
movs
sub
xchg
pop
int3
adc
pop
push
mov
sub
jl
jmp
sub
cmp
ror
ins
loop
shr
gs
(bad)
(bad)
cmp
add
jnp
pop
or
add
jae
fwait
mov
xor
sar
push
xchg
hlt
retf
ret
ins
mov
movs
adc
mov
out
and
lock
popf
ins
lea
or
mov
pop
mov
ins
test
inc
and
adc
cwde
rol
sub
in
pusha
test
sub
and
cdq
xor
(bad)
movs
adc
or
aaa
xor
stc
fisttp
dec
mov
imul
xor
dec
fsubr
dec
ds
inc
jae
cdq
or
fmul
push
pop
jbe
pop
not
push
sbb
pop
(bad)
mov
sbb
js
or
push
addr16
jle
mov
xchg
jge
xchg
dec
cwde
push
imul
push
mov
sub
mov
push
jmp
xchg
frstor
retf
imul
shr
sbb
jo
icebp
bswap
(bad)
sbb
imul
xor
cmps
push
and
stos
inc
retf
inc
adc
or
(bad)
sub
idiv
into
retf
dec
xchg
jnp
dec
mov
out
bound
push
jge
mov
mov
xchg
or
xor
xor
js
cli
call
jge
mov
dec
lods
mov
rcr
fisubr
pop
stos
lods
push
dec
leave
ss
outs
mov
fild
in
jbe
dec
daa
push
bound
and
jb
jmp
xchg
and
sub
add
pop
push
inc
mov
sub
inc
push
xchg
test
movs
imul
adc
inc
ja
fdivr
fldcw
lods
mov
neg
jl
std
mov
aas
ret
movs
jmp
sbb
gs
push
inc
cli
(bad)
adc
cmps
adc
daa
add
pop
mov
in
xchg
int
xchg
push
mov
loop
idiv
xor
jmp
mov
ja
xlat
inc
push
xchg
ins
loope
xor
add
loopne
loopne
adc
loope
jno
jp
xchg
icebp
inc
jp
pop
pop
aaa
xor
or
stos
fcomip
aam
cmc
ror
mov
xchg
adc
adc
(bad)
xor
push
(bad)
sahf
dec
push
cmp
out
pop
enter
sti
push
dec
pushf
cld
jp
(bad)
je
(bad)
push
add
ss
mov
dec
push
sub
shl
scas
(bad)
push
mov
jle
or
movs
scas
mov
mov
fisub
outs
pop
int3
push
xor
push
inc
sub
push
mov
push
sub
lods
cld
cmp
and
dec
xchg
ret
push
xchg
sub
arpl
mov
outs
popw
cmp
and
push
popf
stc
dec
and
dec
push
nop
push
inc
mov
push
repnz
or
xchg
rcr
xor
enter
xor
mov
push
add
in
or
out
pushf
outs
mov
push
jecxz
fcom
inc
aaa
cmp
ins
pop
cmp
xchg
or
hlt
mov
push
retf
push
(bad)
pop
fldenv
cs
xor
out
test
call
inc
jb
data16
fcomp
out
xchg
dec
mov
lods
push
pop
jle
inc
xchg
and
aam
call
pop
push
cmp
mov
popf
xor
fwait
sbb
xchg
push
xlat
sbb
fst
nop
sbb
jbe
retf
xchg
mov
adc
jmp
imul
add
jb
sbb
add
fdiv
dec
(bad)
scas
or
out
sti
mov
or
pop
push
jmp
cld
fsubr
dec
retf
and
(bad)
popa
mov
in
mov
ss
xor
add
mov
ins
cmp
loopne
inc
xchg
lds
inc
popa
inc
xor
sub
dec
add
imul
mov
mov
push
(bad)
cmp
mov
jmp
cmc
add
hlt
jg
xor
mov
mov
rcl
sbb
lahf
push
stos
mov
sahf
push
je
nop
xchg
cmc
adc
scas
inc
xor
scas
repnz
out
sub
and
sar
pop
test
mov
jae
call
sbb
(bad)
mov
xchg
pop
mov
sbb
clc
cmp
shl
sti
cmp
out
lock
mov
mov
popa
jecxz
int3
jae
fcmovnbe
push
pusha
adc
lea
scas
ret
jbe
not
shr
mov
xchg
jns
xchg
adc
shl
mov
pushf
jne
arpl
sbb
dec
xchg
jecxz
or
aam
aas
arpl
xchg
mov
and
dec
dec
dec
fcomp
movs
sbb
fcom
cld
adc
cmps
mov
xor
mov
popf
jne
mov
dec
or
jno
jae
or
jne
inc
std
mov
jp
mov
cmp
mov
mov
or
mov
or
and
push
sub
mov
int3
shl
xor
aam
(bad)
fidivr
mov
push
test
xor
sbb
fs
adc
imul
shl
daa
pop
lds
jne
call
push
pop
es
fstp
xor
mov
loope
cmp
or
aas
dec
aad
xor
cdq
xor
popf
cmp
mov
adc
add
or
adc
ret
fistp
pop
in
sbb
mov
aam
or
push
sub
enter
xor
adc
dec
xchg
mov
fdivr
push
push
xor
sbb
cmp
iret
test
xor
mov
mov
fcom
sbb
xor
dec
mov
mov
hlt
cmps
sti
ss
inc
and
mov
sub
rcr
mov
arpl
popf
sysret
mov
test
fsub
dec
gs
jo
es
cmp
mov
inc
push
js
or
mov
cld
xor
and
xchg
das
je
mov
sar
fisub
dec
push
jle
imul
(bad)
mov
retf
push
or
arpl
mov
or
or
dec
sub
xor
ss
push
xchg
mov
inc
or
xor
pushf
cmp
adc
sub
xchg
jb
fsub
sbb
cmc
outs
jns
arpl
mov
retf
icebp
jno
cmp
test
nop
adc
adc
out
fwait
inc
aaa
cld
je
inc
cmps
aad
cmp
cmp
cmp
jle
cmp
mov
ss
and
or
xlat
and
mov
stos
jle
jnp
movs
cwde
aad
out
mov
push
xchg
fisub
push
loop
pop
cmc
ret
sub
jb
sbb
lahf
xor
jmp
xor
add
call
cmp
ins
sbb
out
cdq
(bad)
out
ds
push
xchg
stc
cld
push
pop
jns
pop
or
inc
mov
dec
add
push
iret
mov
pop
lea
or
imul
lea
fnstcw
stc
mov
das
xchg
jns
mov
stos
dec
pushf
in
dec
popf
cmps
pop
aam
mov
out
mov
in
or
imul
test
(bad)
push
push
push
rol
sub
inc
clc
enter
shl
xor
dec
std
xor
or
inc
xchg
and
fmul
xchg
rol
mov
js
aas
adc
add
pusha
jmp
mov
add
setb
cmp
add
inc
sub
xchg
push
std
(bad)
in
(bad)
xor
inc
and
jmp
xchg
jmp
sub
and
dec
push
mov
inc
mov
cmp
mov
or
dec
and
xor
add
pusha
pop
retf
sub
mov
cdq
fcom
ret
ja
outs
sahf
sub
cmovns
rcr
mov
aas
into
xchg
inc
mov
mov
sub
xchg
push
xor
mov
jae
fsubp
dec
xor
pop
fisttp
xor
cwde
inc
sub
orps
xor
xor
xor
sub
stos
jae
jnp
daa
fsub
addr16
stos
lock
xor
add
mov
pop
jo
sub
sub
add
xchg
and
cmp
dec
add
test
cmp
jne
or
je
loop
scas
mov
jae
mov
aad
gs
ja
fdivrp
fcom
jns
(bad)
dec
gs
out
jmp
test
jle
out
dec
and
push
xchg
pop
xor
lods
xor
sub
mov
sahf
push
push
mov
js
movs
ins
xchg
inc
inc
sub
pop
inc
add
(bad)
push
imul
push
outs
add
or
cmp
pop
jno
cdq
bound
lock
int
add
and
mov
mov
jecxz
jne
out
ja
int3
ja
daa
or
pusha
outs
je
xchg
pop
cmps
loop
mov
jnp
fnstenv
popa
outs
mov
call
aaa
adc
jge
sbb
and
clc
imul
nop
scas
pop
ret
shr
jmp
xor
push
repz
dec
and
fisubr
jmp
fbld
or
or
mov
push
imul
outs
repnz
add
popf
(bad)
mov
jge
(bad)
push
lods
nop
das
or
xor
mov
mov
jp
sub
dec
lds
push
in
popf
cs
xchg
sbb
mov
adc
cmp
mov
div
loope
sub
loop
xchg
inc
mov
push
hlt
mov
sbb
(bad)
cmp
imul
inc
mov
gs
sbb
aad
mov
jmp
xor
pop
pop
test
out
ds
push
sbb
xor
adc
or
mov
or
xor
lods
inc
xchg
cld
mov
movs
(bad)
int
push
into
mov
add
mov
shl
ds
hlt
(bad)
cmp
and
repz
bound
sbb
clc
mov
arpl
xchg
mov
jmp
pop
push
and
jp
sbb
(bad)
fnstenv
dec
out
jmp
les
dec
adc
call
sub
mov
mov
mov
sbb
arpl
cmp
and
call
inc
mov
movs
in
mov
call
sbb
jmp
push
push
cmp
aam
cmp
js
clc
adc
cmp
jne
(bad)
jmp
sub
fstp
xlat
mov
fwait
dec
pop
xor
cmp
pop
or
add
(bad)
mov
int3
xchg
xchg
cwde
xor
cmp
mov
jmp
mov
inc
or
cli
and
sbb
test
xor
mov
test
xor
push
jecxz
mov
mov
pop
sub
pop
or
xchg
retf
xchg
test
pop
(bad)
or
push
dec
call
cmps
ja
sub
push
adc
mov
xlat
add
pushf
mov
mov
sti
mov
cmp
fcmovnbe
jl
xchg
clc
xor
pop
loope
adc
adc
mov
repnz
inc
(bad)
or
ror
or
loope
mov
(bad)
push
adc
jp
fst
dec
lahf
test
cmp
xor
pop
fistp
cdq
pop
xchg
and
sub
xchg
xor
cmp
xchg
push
sbb
ret
cwde
int3
dec
cs
push
jge
sbb
xchg
dec
cmp
xor
xchg
mov
stos
xchg
shr
xor
xor
arpl
jecxz
fadd
pop
xchg
add
xchg
popf
ss
dec
ret
jle
jb
je
or
fisub
fsub
int3
or
mov
lea
xchg
scas
mov
push
xlat
rcl
mov
pop
stos
sbb
pop
dec
aaa
arpl
sbb
pop
fcmovnu
pop
(bad)
sbb
les
std
fsubr
mov
loopne
fst
mov
sub
sub
scas
inc
cmp
jno
push
retf
push
enter
es
scas
jecxz
xchg
inc
mov
and
iret
mov
mov
sub
jl
ss
ficomp
lock
pop
fstp
cdq
fnstcw
jp
xchg
or
dec
fcmovb
mov
fs
out
mov
jnp
scas
jbe
stos
hlt
pop
sahf
mov
and
push
sub
(bad)
gs
sbb
movs
push
rcl
int
cmp
xor
xchg
mov
pop
add
hlt
les
mov
and
push
in
cmp
jns
mov
mov
xor
and
sbb
lods
inc
sbb
push
dec
mov
aam
stos
lea
stos
push
lods
xchg
mov
movs
push
add
xor
js
pop
lods
push
mov
xor
retf
sub
rol
cmp
xor
sar
cmp
push
sub
pop
mov
shr
mov
dec
push
addr16
movs
call
ficom
xor
xchg
out
push
mov
rcl
lea
and
iret
ins
cld
(bad)
xor
push
bnd
lock
lahf
push
sub
mov
add
add
add
pop
in
xchg
movs
scas
sub
popa
(bad)
lea
cmp
jge
cdq
dec
rol
xor
mov
das
push
popf
into
jnp
xchg
aaa
imul
pop
mov
pfrcpit1
fwait
das
cmc
push
bound
mov
adc
aam
xor
xchg
repnz
or
xchg
cmps
adc
fstp
inc
clc
inc
fsubr
shr
sub
push
shl
xor
mov
jg
inc
mov
sub
mov
mov
daa
loope
xchg
out
dec
mov
lahf
dec
(bad)
rcr
inc
sub
dec
or
arpl
(bad)
sar
jle
test
pop
fwait
mov
push
ja
mov
add
into
ins
xchg
push
mov
push
scas
mov
jae
push
cmp
mov
jae
int
adc
xchg
adc
fimul
nop
mov
sub
xchg
arpl
mov
add
mov
push
div
xchg
aam
jle
shl
in
mov
add
ins
and
xchg
adc
stos
into
cs
popa
mov
add
movs
sbb
sub
pop
fcomp
inc
sbb
xchg
loope
test
or
outs
into
dec
sub
mov
adc
dec
xchg
dec
mov
sub
fdivr
test
mov
cmp
mov
xor
addr16
sub
push
inc
in
mov
loope
jecxz
shl
repz
jl
(bad)
fst
pop
out
xor
call
bound
xchg
jbe
and
hlt
and
jge
lock
fcmove
sub
(bad)
icebp
mov
add
ret
push
cmps
lock
mov
pop
add
jmp
push
loop
xchg
jp
xchg
adc
sub
mov
xchg
jns
jo
dec
jle
mov
test
cmps
or
out
shl
call
dec
stc
movhps
aas
fisub
inc
shl
int3
pusha
imul
in
jecxz
sub
inc
jb
movs
mov
outs
mul
ret
ins
test
adc
xchg
cmp
push
xor
lock
mov
xor
cwde
cmp
xchg
or
sbb
bound
push
mov
stc
iret
mov
in
cmp
retf
mov
outs
jns
jp
je
jecxz
dec
cmp
dec
dec
mov
and
shl
jmp
scas
popa
jno
inc
sbb
sbb
rcl
jmp
pop
cld
cmp
jbe
les
not
shl
inc
inc
cdq
jbe
dec
xchg
(bad)
pop
xchg
sub
mov
mov
imul
mov
in
pop
loope
mov
adc
pushf
int
or
scas
retf
sbb
fs
aad
shr
add
ja
pusha
mov
enter
adc
jge
cmp
xchg
jmp
imul
push
cmps
por
gs
lea
inc
pop
add
std
mov
pusha
push
xchg
das
sub
into
pop
jbe
xor
mov
sti
xchg
jecxz
jge
call
sub
or
lahf
into
xor
in
dec
dec
mov
scas
sar
jbe
retf
inc
repz
pop
adc
cmp
fidiv
xchg
pop
mov
fldlg2
push
cdq
sub
lods
aas
std
fcomp
dec
jmp
daa
jb
(bad)
fwait
hlt
xor
sub
frstor
lds
pop
add
sbb
call
xchg
test
ss
or
adc
out
call
dec
dec
pop
and
sbb
cmp
mov
lock
js
movs
ins
neg
retf
jecxz
loop
push
fstp
cmp
(bad)
div
lods
iret
imul
push
test
mul
sub
pop
mov
push
mov
adc
(bad)
mov
gs
mov
mov
mov
xchg
sub
int
mov
push
loop
push
cmp
cmps
or
and
cs
mov
cmp
adc
(bad)
dec
dec
ins
mov
std
mov
sar
mov
dec
jecxz
test
pop
or
push
dec
sbb
stc
movs
xchg
repz
loopne
jns
daa
jge
std
repnz
sub
rol
push
sahf
test
stos
sub
fwait
fs
cli
xchg
inc
jo
fild
data16
lods
scas
xor
rol
outs
sub
xchg
add
(bad)
mov
and
repz
pop
add
test
mov
jg
addr16
retf
mov
push
lahf
or
call
pop
mov
pop
sbb
sbb
cmp
cmp
push
dec
movs
fnstenv
mov
or
push
mov
push
ss
cmp
lods
scas
movs
xchg
inc
out
fnstenv
(bad)
cmp
and
hlt
das
fdivr
addr16
retf
les
ins
jle
mov
inc
(bad)
jmp
fisttp
(bad)
test
jg
xchg
xchg
push
cmp
fist
cmp
mov
xlat
push
mov
shr
add
adc
mov
inc
nop
jp
sub
jp
mov
mov
aaa
ds
push
xchg
dec
ret
dec
dec
xor
pushf
sub
mov
(bad)
(bad)
mov
xor
les
push
jnp
adc
pop
push
ror
jne
or
add
out
mov
xor
repnz
sti
cmp
icebp
xchg
and
jnp
and
repz
idiv
mov
mov
pop
inc
pop
stc
pop
cli
xchg
push
lahf
push
or
xor
fnstcw
mov
ss
mov
enter
fdivr
fs
fs
mov
push
pop
bound
xchg
add
cmp
cmp
xlat
fsub
fld
scas
cmp
imul
jbe
outs
push
mov
into
pushf
idiv
fbld
mov
outs
dec
sbb
inc
in
loopne
sar
(bad)
push
iret
cmc
ins
xor
das
imul
icebp
add
and
sbb
lea
or
rol
cli
aas
pusha
add
packsswb
xor
add
mov
(bad)
cmp
jae
push
push
gs
mov
inc
and
pop
(bad)
les
inc
fsubp
sbb
pop
not
(bad)
inc
jae
sbb
push
ror
cmps
push
adc
dec
xchg
jnp
call
mov
xor
push
or
dec
mov
test
push
inc
and
jecxz
jg
test
sbb
pop
mov
pop
jnp
xlat
sar
icebp
in
add
mov
add
adc
push
or
hlt
test
push
int3
(bad)
in
test
push
cwde
aaa
adc
shr
adc
std
outs
xor
out
call
jg
shl
retf
mov
fnstsw
inc
pop
mov
mov
push
mov
pop
or
mov
pop
cmp
mov
jg
std
push
es
in
mov
xchg
jmp
push
push
(bad)
and
(bad)
sti
in
sbb
sub
mov
ret
and
cmp
rcr
fld
push
jae
push
sub
fwait
ja
ins
fcomp
movs
and
outs
push
ret
ins
add
iret
(bad)
(bad)
cs
sub
or
hlt
mov
add
rcr
mov
cmps
call
imul
push
sbb
xchg
lods
sbb
int
(bad)
xchg
enter
cmp
push
fwait
mov
jmp
in
mov
mov
cmp
aaa
jge
sub
js
and
cmp
xlat
gs
inc
daa
jae
mov
stc
cmp
out
int
push
pop
(bad)
cmp
pop
jae
je
lds
xor
push
jecxz
iret
sahf
outs
push
lar
sub
out
adc
push
int
xchg
pusha
out
(bad)
adc
lock
sahf
shr
xchg
cdq
mov
pop
ficom
and
retf
pop
or
and
nop
mov
push
scas
sbb
fld
mov
mov
in
stos
and
fld
or
sbb
mov
jge
dec
fisubr
cmp
clc
pop
inc
into
inc
jl
ror
or
pop
je
mov
jae
mov
xchg
push
and
pop
xchg
pop
ds
inc
ins
pop
int3
mov
loop
and
int3
xchg
scas
cmps
ret
call
sbb
or
xchg
mov
bound
dec
inc
loope
xor
(bad)
into
xchg
bound
sub
and
mov
mov
and
leave
out
pop
in
dec
nop
jno
outs
or
mov
ins
or
popa
dec
jnp
into
mov
and
cld
push
sub
gs
fcmovnu
in
retf
call
popf
sbb
jl
adc
out
xor
jb
push
sub
mov
sub
inc
mov
inc
mov
iret
push
std
push
fucom
mov
hlt
lods
dec
std
mov
or
retf
div
cli
int3
sahf
out
xor
fcom
das
pop
adc
mov
mov
cs
sub
xchg
push
ins
mov
jp
cdq
popa
ror
xchg
sar
sub
lock
cs
aas
jb
inc
pop
fild
(bad)
test
in
shl
cmp
rol
mov
cmp
icebp
fs
(bad)
out
iret
lods
aaa
inc
fnstcw
add
mov
jo
adc
inc
ror
mov
leave
xchg
sub
mov
push
mov
cld
outs
sbb
rol
outs
test
mov
pop
xchg
xor
out
je
ret
xchg
inc
repz
add
and
outs
xchg
stc
pop
jne
in
jle
xor
push
jno
in
cmp
push
lods
jmp
sbb
add
leave
push
sub
dec
addr16
loop
adc
aaa
jg
dec
lea
mov
test
xlat
xchg
add
aam
aam
call
push
out
cwde
dec
sub
movs
xlat
scas
call
mov
ror
push
out
enter
clc
adc
push
jp
mov
or
stos
dec
imul
push
imul
call
jp
jnp
sub
inc
push
sub
push
mov
ins
cmp
cdq
xchg
and
movs
je
mov
icebp
aas
xor
adc
push
xor
xlat
in
fnstenv
add
push
aam
pop
lea
and
(bad)
push
inc
idiv
and
std
sbb
(bad)
fnsave
mov
jl
add
rcl
arpl
jo
lahf
mov
jmp
fcom
push
pop
(bad)
push
push
and
pop
cmps
adc
int
push
dec
push
mov
into
pop
cs
jns
pop
cs
mov
pushf
jmp
jae
push
js
cmp
fidiv
and
(bad)
js
in
cdq
pop
cwde
(bad)
not
mov
mov
das
dec
outs
mov
push
dec
sub
out
leave
and
jno
leave
sub
dec
cmp
mov
sar
retf
sar
sub
test
sbb
and
adc
mov
out
and
jmp
add
test
das
or
rol
mov
ja
pop
gs
clc
cwde
fbld
je
inc
scas
push
test
jge
xchg
inc
xor
nop
jle
xor
push
sub
inc
or
sbb
fisttp
ins
xor
sar
mov
mov
aas
xchg
cmp
cmps
jns
(bad)
fisub
jmp
test
or
out
pop
cmp
shl
inc
pop
inc
les
fist
sub
mov
in
push
dec
xor
fdivr
hlt
mov
cdq
xchg
push
sbb
fisttp
dec
inc
shl
add
les
icebp
adc
out
lods
xor
push
pop
jmp
mov
cmp
int3
(bad)
scas
xchg
hlt
rep
xchg
data16
mov
in
cdq
pop
movs
inc
jle
sub
add
scas
movs
and
add
dec
pop
sbb
loop
cmc
in
push
inc
and
mov
sti
push
into
loope
xchg
xchg
or
sub
gs
mov
lds
dec
jg
sbb
or
lods
loope
adc
push
arpl
outs
aam
stc
dec
adc
jnp
mov
ja
push
scas
repz
jns
push
mov
ins
out
jnp
push
cmp
mov
jno
mov
fsubr
stos
add
or
xor
adc
xchg
mov
jbe
popa
and
std
inc
push
and
out
les
repnz
push
sub
(bad)
adc
jg
push
jmp
frstor
jb
jecxz
imul
or
xor
dec
mov
mov
or
mov
aaa
mov
in
jge
sar
mov
or
out
cmp
cmp
in
ret
mov
jno
popf
mov
xchg
dec
call
dec
pop
xor
add
fwait
subps
ins
and
pop
xchg
pop
loope
inc
xchg
std
jmp
mov
jmp
add
lahf
je
mov
sub
retf
fdivr
sbb
dec
retf
cli
push
cmp
xor
sbb
cmps
and
in
cmp
xchg
jmp
pushf
and
jg
push
mov
jae
xchg
imul
dec
stc
cmp
inc
or
(bad)
loope
dec
jl
adc
xchg
fidiv
out
mov
je
cmc
hlt
mov
push
mov
icebp
fisubr
aas
mov
jno
cs
push
mov
push
xchg
cs
rcl
in
ins
rol
pop
pop
add
cmc
sub
inc
repnz
pop
icebp
pop
mov
jecxz
and
adc
sbb
push
int
shl
stos
cmps
mov
jb
rcr
not
push
mov
loopne
pop
sub
push
push
jmp
jg
stos
pop
movs
pop
or
add
retf
loop
cmp
xlat
xchg
sub
push
aas
ss
aaa
xchg
xchg
test
iret
mov
sbb
adc
fidivr
(bad)
push
ret
lds
fadd
cmp
cli
enter
xchg
pmovmskb
push
cmp
movs
popf
mov
xchg
adc
and
sbb
mov
mov
enter
mov
xor
pop
mov
cmp
and
in
or
mov
jle
fwait
xchg
and
dec
push
aas
push
mov
out
lods
xor
fdivr
mov
bound
(bad)
stc
mov
sbb
xchg
inc
loop
test
inc
retf
or
dec
xor
data16
pop
sbb
xchg
xchg
jmp
sbb
les
inc
pushf
sub
mov
sbb
add
ret
pop
pushf
cmp
fistp
in
call
(bad)
mov
jbe
mov
data16
xchg
jmp
cmc
retf
push
sahf
and
shl
mov
out
cs
xchg
sub
push
mov
sub
pop
jg
mov
ins
inc
test
(bad)
call
iret
dec
mov
sub
xchg
(bad)
js
inc
scas
popf
cmp
lods
lds
int3
mov
or
repz
sub
push
pop
pop
pop
sub
and
push
scas
ja
fadd
and
iret
xor
push
push
xor
cmp
ja
enter
fisub
(bad)
inc
sbb
cmps
cmp
push
scas
mov
cmp
jg
sub
jae
adc
outs
and
dec
inc
sbb
adc
mov
cmp
sbb
push
sti
out
cs
xchg
xchg
dec
jp
outs
dec
mov
jp
fwait
jbe
dec
cwde
cmp
rcr
call
or
push
mov
test
imul
out
outs
sahf
xlat
ins
xor
fdiv
pop
push
enter
(bad)
dec
movs
jecxz
push
outs
and
adc
jl
int3
movs
xchg
xchg
cmp
ins
out
pop
fstp
sti
mov
(bad)
cmp
mov
push
(bad)
cmp
adc
pop
call
loope
dec
jne
cld
stos
(bad)
out
call
(bad)
push
mov
outs
dec
push
xchg
ss
fs
pop
jo
mov
outs
stc
fisubr
dec
jle
repnz
js
je
mov
jne
push
sbb
aam
loop
ja
cmp
sub
sub
dec
push
daa
sbb
ret
push
push
cmp
fwait
dec
mov
(bad)
mov
sub
and
scas
jne
ins
cs
sbb
push
inc
loope
mov
push
dec
outs
int
fadd
jmp
push
ja
xor
mov
or
lods
inc
pop
aad
push
lea
bound
pusha
test
jg
sub
xor
(bad)
iret
mov
dec
pop
jge
add
mov
cmps
and
mov
call
cmp
inc
dec
call
mov
push
pop
addr16
lods
call
push
sbb
pop
mov
adc
div
jge
jmp
outs
test
cmps
inc
push
leave
adc
xor
arpl
(bad)
push
xchg
mov
mov
pushf
lds
int3
xor
pop
and
arpl
jge
cmp
dec
cmp
pop
(bad)
jo
push
repz
cmp
mov
mov
mov
je
dec
out
push
jle
push
or
call
jne
inc
leave
in
cmp
adc
xchg
jmp
cmp
xor
pop
inc
jmp
mov
stos
xchg
mov
popf
call
add
mov
push
sbb
and
int3
xor
mov
outs
call
ja
rcl
jge
hlt
je
inc
mov
ins
push
dec
xchg
pop
add
mov
pop
xchg
repz
pop
pop
jg
or
loop
push
into
mov
repnz
dec
lock
fdiv
ins
push
icebp
ret
shr
adc
shl
pop
mov
imul
dec
pop
adc
jle
jge
and
sbb
xchg
stos
xchg
dec
out
push
add
popf
dec
add
jnp
jmp
cmp
and
mov
push
xor
jbe
mov
es
push
cld
push
pop
addr16
(bad)
out
call
hlt
inc
xor
jbe
pop
loop
xchg
fnstcw
lock
out
lahf
dec
shr
or
mov
ins
mov
in
pop
dec
add
mov
or
inc
push
xor
ficom
cld
cmp
sub
lods
mov
pop
(bad)
jno
dec
stc
xor
add
loope
loop
ds
jb
movs
jecxz
xor
pop
push
cmps
xlat
call
push
mov
fs
(bad)
outs
ror
les
cmp
daa
loope
ffree
sub
std
out
push
mov
int3
push
test
sar
sbb
cmps
xor
push
or
xchg
shl
scas
pop
lods
cmp
cmp
(bad)
aad
in
ror
outs
(bad)
es
repz
xor
and
mov
mov
inc
xor
xchg
sti
ds
xor
gs
gs
pop
rcl
sar
aas
mov
pusha
push
sbb
pop
(bad)
dec
jb
retf
ja
mov
xchg
or
(bad)
outs
dec
jb
(bad)
retf
cmp
scas
cmp
xchg
mov
cwde
std
addr16
ja
inc
pop
push
and
sti
ror
ret
stos
mov
je
into
push
scas
mov
retf
enter
mov
sub
jge
xchg
mov
iret
loope
outs
popf
add
scas
imul
stc
add
ds
fs
jmp
cmp
and
mov
jmp
push
jmp
retf
xor
retf
push
daa
and
cwde
pop
mov
dec
add
sbb
iret
push
jnp
clc
adc
jmp
bound
in
test
cld
outs
cmps
cmps
mov
xchg
inc
mov
pop
pop
ss
push
xchg
enter
xor
in
mov
(bad)
mov
daa
ss
cmp
gs
(bad)
rcr
mov
inc
out
cmp
mov
data16
ret
dec
mov
cld
shl
cmp
sbb
(bad)
aas
xchg
dec
sub
add
cli
mov
cmp
in
iret
movs
adc
js
jg
inc
fstp
ret
sbb
stos
push
aas
jne
cmc
popf
call
push
pop
adc
sub
je
ror
jb
(bad)
xchg
cmp
nop
stc
js
dec
mov
jecxz
pop
xchg
jnp
in
fdivr
out
sub
push
mul
lods
repnz
mov
or
scas
sub
inc
or
cmp
cmp
inc
std
arpl
add
xor
jno
test
les
lods
xchg
int3
fucom
lods
popa
data16
(bad)
fisubr
inc
ror
sub
std
and
loope
jnp
in
jg
add
dec
data16
mov
movs
mov
mov
add
movs
mov
in
enter
and
jge
ins
dec
mov
in
rcr
stos
(bad)
or
xor
cmp
adc
je
rol
xchg
sub
(bad)
sbb
jns
stos
mov
pop
fsubr
xchg
add
cmps
mov
jmp
sti
and
fdivr
jmp
lods
sub
fcomp
adc
sbb
lea
adc
fs
push
cs
test
xor
dec
scas
pop
das
sub
cmp
adc
lahf
dec
and
jle
inc
or
dec
loopne
daa
mov
dec
xchg
iret
dec
sbb
sar
daa
cmp
stc
lds
push
xchg
(bad)
push
hlt
jg
xchg
sub
xor
inc
xor
lds
mov
push
(bad)
mov
jb
int
jae
jo
sbb
dec
sub
dec
ss
cmp
jae
(bad)
stc
push
pushf
movs
lds
xor
inc
dec
scas
xor
fdivr
xchg
mov
aaa
stc
xor
xor
fwait
mov
xchg
dec
adc
ret
jg
mov
cs
cld
sti
jmp
aas
inc
enter
test
loope
sbb
cmps
ins
out
push
mov
jl
stos
sbb
and
jne
(bad)
(bad)
adc
icebp
push
call
fwait
push
jno
xor
std
mov
pop
mov
not
scas
sub
mov
gs
fwait
cmp
in
jge
jg
or
add
cmp
jg
sar
add
mov
mov
and
jmp
in
imul
outs
xchg
movs
mov
outs
add
mov
lods
pusha
imul
fst
push
cmp
mov
push
add
ins
fwait
popf
lahf
icebp
cmp
dec
jns
pop
iret
jl
fsubr
jl
test
push
inc
sub
jns
icebp
mov
call
(bad)
sbb
adc
(bad)
rcr
fiadd
mov
div
data16
sub
ficom
fwait
cdq
jecxz
cld
add
cmp
sub
jb
pop
dec
push
cmp
out
loop
sub
pop
outs
add
stc
mov
popa
out
(bad)
sahf
(bad)
inc
nop
jmp
aas
xchg
mov
ret
add
(bad)
xor
ds
(bad)
jmp
test
dec
sbb
sub
dec
ds
in
shl
call
sar
popf
daa
jb
mov
mov
cdq
inc
inc
imul
pop
out
ins
add
adc
shl
inc
mov
xor
aad
fwait
ja
test
repz
je
shl
out
stc
adc
sub
(bad)
xchg
sti
es
(bad)
cmc
add
and
cli
test
clc
mov
scas
cdq
mov
lock
call
mov
ret
push
dec
hlt
add
cmp
lods
push
jg
inc
movs
clc
repnz
add
popa
inc
xchg
dec
xchg
mov
mov
jae
sub
adc
fnstcw
and
loopne
es
fidivr
cmps
sbb
popf
int
cmp
xchg
dec
movs
pop
stc
cli
mov
mov
lds
(bad)
inc
xchg
les
jmp
jb
mov
cmps
icebp
in
cld
sub
jge
pop
jmp
sbb
out
(bad)
clc
and
sbb
and
mov
xchg
adc
es
xchg
xchg
and
daa
(bad)
std
and
pmaddwd
dec
xchg
xor
push
and
xchg
xor
jmp
aas
aaa
xor
cmp
addr16
outs
mov
arpl
fcom
lock
cwde
fs
lock
push
dec
xlat
sub
das
movs
and
nop
dec
pop
jl
push
push
inc
je
dec
clc
cmps
out
jp
mov
mov
mov
pop
and
sbb
movs
scas
dec
sub
pop
and
dec
cmp
aas
loope
mov
cmp
lahf
mov
push
loopne
fsubp
hlt
xchg
pop
or
adc
fldcw
mov
dec
mov
xlat
xlat
jbe
cmp
jmp
inc
addr16
loop
scas
pop
les
and
rcr
jae
stc
std
adc
inc
pop
dec
push
add
and
dec
sbb
mov
sub
mov
mov
pusha
cmp
sar
scas
xchg
cmps
out
or
lds
push
leave
pusha
pop
jle
mov
rcl
push
xor
jo
xchg
and
test
ss
jne
xchg
add
sbb
pop
push
arpl
xchg
dec
sub
dec
mov
sbb
in
(bad)
les
inc
ret
cmp
add
mov
lods
xchg
mov
bound
(bad)
loope
rol
loop
not
mov
lahf
inc
pop
in
pusha
sub
sub
fiadd
gs
pushf
fimul
nop
iret
retf
jl
(bad)
mov
repnz
fcmove
data16
repnz
out
rol
fcom
hlt
add
push
push
sub
jo
(bad)
push
xchg
sub
imul
popa
fcmovnu
fld
mov
xor
out
loop
sub
cmp
dec
xchg
push
mov
inc
add
push
or
xchg
sub
sbb
(bad)
jmp
shl
pop
ret
pop
call
ins
xor
aas
jns
fwait
xchg
and
das
sahf
cwde
les
sbb
iret
inc
fld
or
into
push
inc
dec
(bad)
jle
sub
or
cdq
scas
add
inc
arpl
fs
mov
(bad)
xor
movs
push
jns
push
mov
outs
mov
xchg
mov
in
jl
imul
or
cmp
loope
push
pop
mov
dec
stos
push
and
mov
jns
inc
out
xchg
into
jae
test
sbb
or
mov
pop
sub
and
pop
cdq
fbld
aaa
sub
je
inc
jae
stos
and
outs
mov
fidivr
inc
test
sub
repz
sbb
lods
mov
cmp
pop
push
call
xchg
fs
test
mov
leave
and
pusha
retf
dec
mov
xchg
retf
imul
and
stos
fadd
dec
inc
sbb
xor
in
sbb
sbb
xchg
cdq
rcr
in
out
sahf
mov
xor
push
leave
cmc
xchg
jge
les
data16
xor
xchg
jo
sub
mov
dec
jb
shl
(bad)
scas
js
and
sub
xchg
inc
mov
xchg
dec
or
mov
xor
jbe
test
cmps
mov
xchg
inc
push
xchg
inc
stc
aam
and
repnz
mov
repz
jecxz
cld
dec
sub
cdq
sub
imul
stc
lds
push
push
arpl
adc
outs
cwde
ss
jmp
dec
movs
push
pop
pusha
xchg
(bad)
pushf
sar
das
cdq
or
add
jne
adc
(bad)
daa
xlat
push
add
inc
pusha
stc
xor
ins
sub
movs
dec
sar
adc
push
sahf
stc
mov
arpl
ins
pop
ins
mov
cwde
aad
pushf
mov
push
dec
xor
cwde
iret
sti
mov
dec
push
out
lods
cs
sar
ds
xor
jne
fs
inc
add
jge
loope
retf
in
adc
add
adc
inc
dec
lahf
jo
push
out
imul
lock
and
je
and
adc
mov
and
mov
adc
fild
jmp
mov
test
out
sbb
or
jae
add
adc
sbb
xor
mov
imul
loopne
cmps
hlt
iret
xchg
(bad)
cmp
aam
mov
mov
(bad)
fstp
mov
dec
icebp
inc
cmp
iret
xor
pop
stos
cs
in
and
(bad)
and
outs
ss
or
shl
cwde
mov
je
ds
push
mov
icebp
cmp
xor
fcmovnu
imul
bound
mov
inc
mov
pop
cmp
sti
or
sbb
xchg
add
movs
test
stos
cmps
cld
(bad)
mov
test
sahf
xchg
int3
sub
test
cmc
repnz
pusha
repz
or
xor
dec
into
and
pusha
dec
and
and
in
push
add
mov
adc
inc
call
xor
add
dec
xor
cmp
(bad)
sar
adc
into
or
jae
pop
jle
xchg
jge
pop
cmp
jns
push
inc
and
inc
push
add
mov
and
or
sbb
leave
leave
hlt
pop
shr
mov
arpl
loopne
out
push
mov
cmps
cmps
cmp
or
retf
pop
call
clc
sub
push
and
out
into
fs
push
lods
add
test
stos
adc
mov
js
cmp
mov
loopne
out
or
adc
jae
(bad)
ror
or
xor
mov
call
pop
fimul
lds
push
pusha
add
(bad)
pusha
mov
test
(bad)
stc
jl
push
jae
jge
jae
test
stc
enter
sub
adc
in
and
mov
sbb
sbb
loopne
fist
push
sbb
cmp
ret
adc
dec
fnstcw
fild
sub
and
jo
icebp
mov
cld
mov
sub
hlt
je
jne
daa
mov
sub
push
popa
or
daa
punpckhdq
mov
mov
jo
scas
mov
lock
test
mov
(bad)
xor
jmp
in
aam
sub
rcl
sbb
mov
pop
int
push
push
jge
ins
pop
dec
mov
sahf
cmp
sahf
mov
mov
ret
adc
cmc
mov
data16
mov
mov
mov
fwait
jno
sti
xor
jge
ds
rcr
test
pusha
cli
dec
out
mov
gs
mov
sahf
retf
ror
pop
mov
dec
mov
mov
push
cdq
pushf
loope
jle
xchg
push
sbb
(bad)
sbb
ret
mov
cli
and
sub
stos
retf
int
shr
push
lods
cmp
les
or
cwde
xor
ret
(bad)
out
out
test
add
mov
jbe
xor
stos
jmp
mov
out
jp
xor
sbb
mov
xor
xor
(bad)
dec
je
dec
aam
sub
inc
sub
retf
repnz
stc
sub
xor
cdq
repz
mov
aas
dec
dec
dec
gs
jnp
or
fistp
repnz
popf
pop
stos
repz
idiv
push
in
and
mov
sbb
push
sub
cmp
jae
bound
(bad)
sub
inc
sub
mov
fs
xchg
mov
dec
inc
jge
retf
pop
push
push
cmc
pop
ja
sbb
cmp
xor
mov
dec
mul
adc
xor
shr
and
fcomi
mov
mov
xchg
push
je
xchg
(bad)
int3
popf
xchg
adc
mov
fld
xchg
scas
ret
mov
dec
jp
int
ja
jmp
sbb
lods
addr16
dec
(bad)
xchg
sub
daa
and
adc
ror
outs
imul
in
cdq
ins
cmp
stos
dec
mov
ja
jnp
cmp
in
mov
dec
out
push
inc
jecxz
push
mov
mov
test
xchg
or
mov
shl
ret
dec
inc
(bad)
mov
popf
lock
pop
or
sti
mov
ror
mov
add
outs
scas
repnz
jle
jae
stos
sbb
mov
sub
sub
push
aad
test
cmp
push
shr
lods
cmp
jmp
lods
pushf
pop
sbb
cmc
retf
(bad)
fidivr
push
xor
inc
jns
jmp
lea
and
imul
jge
sub
sub
popf
jae
(bad)
sbb
sub
dec
inc
outs
push
ret
(bad)
cmps
pop
fdiv
mov
fsubp
push
push
mov
retf
clc
aad
shl
inc
scas
dec
icebp
push
mov
jno
cmp
mov
stos
jo
jle
jb
clc
sub
inc
idiv
add
pop
aam
aas
cli
and
outs
aaa
cld
push
retf
sbb
sbb
nop
mov
sbb
sbb
add
aam
inc
mov
mov
ins
(bad)
push
mov
inc
adc
out
pop
mov
out
cmp
and
push
mov
sahf
test
popa
adc
and
fistp
cmp
daa
xchg
mov
mov
rol
sbb
aad
call
sbb
mov
adc
rol
ror
cmc
sahf
outs
adc
std
pop
pop
aas
in
cs
and
mov
add
(bad)
and
jns
fmulp
xchg
es
(bad)
aad
(bad)
cld
aas
mov
mov
retf
push
jo
cmp
les
call
mov
xor
mov
inc
cmc
movs
icebp
js
out
inc
jae
aad
dec
push
inc
(bad)
pop
jmp
xor
stos
fimul
cmp
ficom
add
mov
ror
mov
out
(bad)
(bad)
pop
sbb
daa
scas
push
mov
ror
cmps
aaa
ds
cmps
and
mov
cdq
gs
lds
rol
lahf
leave
cld
fisub
icebp
cld
push
leave
ficomp
test
xor
js
pop
les
or
and
mov
daa
mov
mov
retf
mov
in
or
sbb
ds
pop
sub
jle
call
add
xor
pop
pusha
rcr
cmc
dec
sub
bnd
jle
push
or
int3
(bad)
rcr
shl
and
in
dec
inc
mov
(bad)
jle
call
xor
mov
or
or
sar
psubd
xor
xchg
mov
movs
and
sahf
rcr
loopne
sbb
retf
mov
inc
xor
sub
push
ds
iret
mov
mov
je
ret
sbb
jno
sahf
lds
and
fcom
je
mov
mov
push
icebp
inc
inc
enter
lahf
scas
ins
xchg
mov
cmp
cmps
in
pusha
int3
rcl
in
inc
mov
lahf
daa
mov
pop
rcr
out
jnp
sbb
ret
cmp
pop
ins
mov
adc
sbb
mov
sti
inc
pop
fmulp
jle
(bad)
stos
adc
gs
cli
push
jne
adc
adc
and
sbb
push
sbb
push
inc
(bad)
cmps
add
bound
xor
rcl
rcl
mov
pop
pop
mov
(bad)
dec
inc
call
ror
mov
xor
mov
mov
cmp
movs
test
clc
fisub
mov
popa
push
cmp
shr
mov
dec
dec
pusha
add
cmc
hlt
jge
in
stc
push
sbb
lods
mov
stc
mov
pop
jne
xchg
pop
cld
je
(bad)
repnz
fs
es
and
in
sub
sub
ja
int3
adc
xor
fst
adc
jecxz
xor
cmp
xor
dec
sbb
cmp
mov
mov
sbb
bound
push
add
sbb
pop
out
adc
aad
mov
push
push
push
jmp
mov
mov
(bad)
in
inc
test
cmc
(bad)
test
test
lds
push
and
xor
das
aaa
cmc
je
adc
cmps
sbb
push
icebp
mov
pop
sub
repz
push
pushf
inc
out
sbb
fimul
mov
repz
int
mov
mov
es
(bad)
mov
call
rol
jb
call
bound
enter
push
jno
(bad)
mov
push
sbb
jae
int3
inc
pop
ret
ins
jp
aad
push
out
test
adc
in
dec
mov
sub
movs
mov
jmp
mov
cmp
in
test
(bad)
cmps
mov
lds
test
mov
imul
leave
dec
sar
xor
add
imul
scas
sti
out
not
fwait
out
or
sub
cli
out
stos
aas
mov
sub
ret
pop
das
call
mov
dec
sub
add
adc
add
sub
pusha
fs
sbb
sub
xchg
nop
hlt
les
pop
xor
mov
jne
shl
pusha
add
or
clc
cmps
out
jo
arpl
cmp
(bad)
jle
shr
call
out
inc
dec
sar
mov
(bad)
idiv
ss
inc
int3
neg
in
mov
retf
dec
xor
(bad)
mov
jno
sbb
ficomp
clc
shl
lods
push
pusha
and
adc
or
test
xchg
js
lahf
lea
push
pop
pop
icebp
shl
cwde
mov
ret
cmp
call
jle
lods
add
jbe
push
cli
lea
xor
inc
adc
into
std
mov
push
push
ficom
xchg
mov
arpl
dec
dec
sbb
mov
mov
mov
in
leave
imul
xchg
nop
jmp
outs
std
mov
js
imul
ins
loopne
inc
push
xor
sbb
inc
ret
inc
cdq
jnp
push
aam
retf
sub
or
fldenv
push
mov
in
sbb
push
mov
adc
xchg
jnp
cmps
add
in
aam
adc
int3
pop
add
cs
(bad)
sub
scas
ret
mov
adc
mov
ficomp
or
fwait
adc
nop
arpl
enter
adc
push
std
retf
fmul
movs
call
test
cmp
or
push
mov
adc
add
fwait
ds
sbb
sbb
(bad)
xor
cmp
sahf
rcl
popaw
add
or
out
gs
dec
les
out
pop
fisttp
and
out
jl
addr16
cmps
test
out
aam
xchg
fstp
js
popf
call
aad
xchg
dec
mov
loope
push
sub
(bad)
ins
fisttp
xor
ins
outs
iret
pop
lods
jg
mov
cmp
or
fcom
fwait
mov
(bad)
aam
sbb
dec
outs
mov
mov
movs
adc
clc
out
inc
and
rol
imul
xchg
jno
ins
outs
ret
clc
cmps
in
pusha
ss
mov
pop
xchg
jae
add
pop
sbb
(bad)
push
mov
adc
ds
dec
and
xchg
inc
cmp
adc
mov
xchg
sub
shl
gs
sbb
mov
enter
mul
jo
ins
and
popa
or
xor
xor
(bad)
pop
sbb
xchg
int
sbb
stc
test
jg
jge
retf
movs
and
lods
int
daa
outs
mov
sbb
fisttp
(bad)
jg
fs
push
push
(bad)
push
mov
outs
je
push
sbb
fisubr
sar
aam
mov
inc
jbe
jb
outs
or
and
push
loop
aaa
sar
and
call
aam
add
nop
fcmovne
xor
cdq
jmp
ss
test
les
into
xlat
adc
pop
cmps
fldcw
ins
push
pusha
mov
pushf
and
icebp
dec
sbb
lea
loop
push
cmp
xchg
addr16
je
lea
add
sub
sbb
outs
mov
cs
hlt
pop
add
pop
pop
sub
push
cli
mov
or
add
dec
(bad)
ins
js
mov
xchg
in
retf
or
mov
xor
mov
sbb
mov
pop
sub
lods
shl
sub
xor
movs
(bad)
in
aam
inc
cmps
push
mov
outs
add
addr16
call
xor
jge
mul
scas
push
scas
mov
ds
xor
das
sub
push
sbb
adc
ja
xor
retf
ins
sbb
jle
mov
ja
leave
shl
cli
aas
fwait
cmp
jmp
fidivr
xchg
ins
pop
jecxz
jecxz
inc
cmp
in
sub
sub
xor
mov
and
ret
push
div
jecxz
test
and
cld
dec
(bad)
les
adc
fnstsw
fstp
movs
gs
ret
(bad)
xor
stc
ins
outs
mov
or
dec
arpl
push
mov
cld
jle
mov
les
push
jle
fadd
and
cmp
std
test
xor
add
adc
in
xchg
ins
or
daa
pop
lds
into
push
mov
dec
jmp
lds
push
sbb
mov
movs
lock
push
sti
(bad)
cmp
ficomp
and
(bad)
pop
test
in
xor
mov
dec
mov
cmp
das
das
xchg
in
sbb
das
outs
or
inc
sbb
and
scas
fiadd
lock
sub
mov
push
(bad)
cmc
push
sub
pop
push
fwait
push
in
xchg
push
(bad)
test
add
mov
fs
mov
mov
xchg
mov
test
add
jno
outs
inc
inc
fist
dec
ret
push
sub
sar
fwait
test
stos
inc
fmul
inc
dec
in
bound
mov
and
shl
daa
ja
adc
loopne
arpl
dec
push
hlt
test
push
daa
loope
xor
mov
nop
sub
rcr
inc
aaa
ror
jnp
bound
repnz
movs
test
inc
lods
push
ret
jge
fstp
xchg
cdq
inc
lods
imul
mov
mov
mov
stos
ret
or
cmp
je
(bad)
iret
pop
sbb
test
pop
sub
fwait
sahf
add
cmp
xlat
imul
jbe
data16
cld
inc
add
in
dec
sub
clc
xor
dec
inc
in
xchg
and
pop
icebp
xor
jmp
dec
xchg
or
xchg
clc
ror
jbe
loopne
int
dec
adc
push
dec
mov
pop
sbb
sbb
outs
xchg
jne
jnp
int
movs
pop
daa
fdiv
(bad)
lahf
sbb
repz
dec
lods
test
xchg
dec
lea
inc
jbe
js
lock
stos
(bad)
cwde
cmp
or
xchg
xor
adc
fimul
retf
adc
or
pop
cmp
rol
push
sbb
mov
in
cli
pop
inc
ret
jmp
fisttp
rcl
test
int3
pop
fnstenv
push
fst
icebp
sbb
and
xor
loope
(bad)
out
repnz
test
cmp
dec
into
mov
je
xchg
int3
lahf
icebp
or
into
jmp
sub
loope
cmc
ret
mov
push
cmc
mov
mov
sub
iret
xor
and
xor
cdq
movs
fstp
stos
sti
dec
sub
dec
push
sbb
test
lods
(bad)
dec
shr
or
call
shl
cmp
cmp
enter
lea
movs
xchg
test
clc
dec
jb
(bad)
mov
inc
popf
sub
js
jno
std
sub
loop
xor
cmps
mov
fisttp
mov
mov
aad
xchg
call
out
popa
aad
xchg
mov
pop
mov
jb
and
inc
arpl
in
rcr
scas
imul
leave
lahf
dec
jg
icebp
fdiv
fisubr
nop
fwait
jmp
cwde
xor
inc
push
push
mov
(bad)
mov
sub
outs
push
mov
fwait
gs
retf
jg
mov
fisub
pop
call
xor
movs
leave
add
neg
and
les
iret
mov
cli
pop
scas
dec
xor
xlat
cmc
(bad)
sbb
xor
inc
mov
shl
pop
repnz
sub
(bad)
pop
mov
cmc
test
call
xor
inc
adc
mov
pushf
jo
push
xchg
rcl
mov
imul
pop
xor
jne
jmp
scas
cli
sbb
xor
xchg
mov
in
data16
mov
stc
fs
pop
cmp
out
sbb
cmps
clc
(bad)
sub
fstp
sahf
dec
cld
jl
popa
in
push
jmp
div
adc
daa
jmp
xor
popa
rcl
mov
shl
aad
jle
jp
mov
sar
nop
fcomp
add
pop
call
js
sbb
cmc
out
pusha
cmp
aad
mov
mov
pop
xor
movs
out
test
mov
fs
jmp
in
mov
fs
push
data16
out
arpl
mov
sub
vminpd
cmp
not
add
out
(bad)
lock
jnp
and
pop
out
jo
fs
xor
cwde
out
imul
sti
mov
ret
(bad)
xchg
inc
or
jbe
or
cdq
sub
js
and
leave
cli
mov
stc
retf
xor
push
ret
xor
fldcw
mov
fwait
js
pop
and
mov
xor
xchg
mov
inc
stos
cmp
iret
out
mov
cmc
shl
mov
mov
es
shr
adc
jno
inc
mov
clc
jmp
inc
(bad)
je
inc
sub
cli
xchg
dec
inc
fist
or
cmp
hlt
loopne
push
aad
jmp
jae
push
(bad)
loop
add
ins
or
shr
out
xor
mov
pop
or
add
add
xchg
dec
cmp
push
aaa
and
stos
mov
or
lods
mov
dec
or
push
xchg
je
std
mov
lock
xchg
(bad)
in
push
jbe
and
mov
mov
fisttp
push
lea
das
add
push
jae
sar
inc
ret
std
ror
arpl
add
jge
xor
(bad)
gs
out
cwde
ins
inc
inc
icebp
jnp
pop
xchg
inc
shr
mov
rcl
rol
movs
mov
pusha
push
add
clc
fstp
xchg
mov
imul
mov
addr16
mov
bound
les
popa
das
push
pop
ja
pushf
jnp
xor
(bad)
int3
add
sti
sbb
dec
pop
jle
mov
sub
fisttp
inc
or
fsubr
cdq
or
adc
mov
add
lea
sub
and
gs
inc
dec
dec
ins
pop
jg
push
dec
call
(bad)
and
push
mov
div
pushf
dec
call
loope
retf
popa
pop
icebp
cmp
mov
popa
fstp
movs
int
cs
sbb
mov
sahf
gs
pop
rol
xchg
pop
xchg
data16
sbb
fsubr
xchg
fnstcw
inc
daa
ss
mov
loope
push
mov
cmps
inc
mov
test
mov
loopne
sbb
push
test
push
pusha
inc
adc
dec
xchg
es
icebp
arpl
daa
idiv
pop
add
inc
mov
and
push
inc
add
mov
test
in
mov
loop
movs
push
mov
nop
test
sub
add
jmp
mov
adc
sub
loope
out
call
add
movs
push
add
(bad)
adc
(bad)
retf
xor
sbb
push
xchg
mov
sti
adc
fcom
push
and
adc
in
iret
mov
adc
aaa
jb
add
cdq
fcmovnbe
ror
inc
es
fcomp
pop
mov
clc
xlat
sub
dec
outs
dec
sbb
mov
jmp
(bad)
arpl
adc
lods
into
push
dec
int3
(bad)
mov
mov
and
inc
and
je
mov
dec
add
(bad)
pop
or
dec
aam
arpl
pop
inc
frstor
stc
xchg
repz
mov
scas
xor
cmp
jae
adc
sti
daa
push
push
pusha
pop
adc
mov
ds
(bad)
or
or
jbe
dec
sbb
pushf
jo
aas
xor
mov
ja
xor
jp
jmp
loope
sbb
dec
sbb
rol
jecxz
cmp
pop
push
loop
gs
fcmovne
push
adc
mov
in
sub
mov
dec
xor
sub
loop
popa
xchg
fwait
add
test
mov
push
daa
adc
in
sahf
(bad)
out
push
jl
ds
pop
lock
sbb
inc
rol
rcr
cdq
jnp
cs
jns
ins
pop
xchg
xchg
test
and
or
xchg
repnz
sar
dec
addr16
rcr
loop
pushf
add
aam
inc
outs
inc
pop
in
test
pop
leave
movs
dec
cmp
dec
ret
pop
dec
sub
test
ins
push
ins
add
inc
clc
out
shr
jge
fnsave
mov
or
pop
mov
aam
inc
fwait
push
add
cld
mov
sub
fwait
cs
(bad)
xchg
test
jecxz
(bad)
ficom
or
inc
inc
aad
mov
aas
sbb
jg
and
xlat
cmp
jns
das
mov
daa
aaa
mov
mov
inc
sub
pop
xchg
sbb
inc
out
push
push
sbb
loopne
sub
aaa
sahf
(bad)
div
xor
test
into
stc
and
jmp
cmp
mov
div
push
cmp
test
inc
push
xor
xchg
sahf
lock
adc
fidivr
push
hlt
cmp
call
jge
xchg
and
paddsb
cs
es
(bad)
adc
cmp
mov
nop
sbb
push
mov
movs
call
xchg
xchg
sti
call
pop
add
test
(bad)
jns
mov
jge
clc
movs
pop
jo
ja
sbb
std
movs
xor
jg
adc
stos
mov
pop
scas
lea
and
xor
loope
pop
push
mov
sub
or
xchg
(bad)
and
cmp
sbb
ins
xchg
cs
mov
ins
test
pop
cmp
not
push
mov
mov
cmp
and
push
icebp
mov
adc
data16
mov
mov
xchg
repz
iret
push
imul
not
cmp
adc
cmp
jb
dec
inc
cmps
dec
pop
xor
dec
mov
add
inc
mov
push
adc
repnz
jb
mov
js
sub
add
sahf
or
in
mov
mov
(bad)
jae
jno
dec
xlat
mov
xor
repz
sti
test
rcr
adc
out
lods
mov
(bad)
pusha
sbb
xchg
jae
pusha
imul
pusha
nop
lea
jne
mov
jp
jo
and
sar
cs
or
xor
cmc
ret
les
and
fs
cmps
inc
stos
jmp
mov
out
mov
into
stos
dec
clc
out
cmp
rcr
sbb
test
sbb
jecxz
loope
sbb
push
xchg
in
push
jae
adc
sbb
adc
js
cmp
outs
xchg
mov
pop
cmp
mov
pop
inc
pop
test
push
movs
ja
inc
aaa
pop
pusha
cli
shr
stos
jne
cmp
sub
fs
inc
mov
push
sbb
ds
fdiv
inc
hlt
inc
add
mov
push
mov
pop
not
xchg
sbb
mov
push
data16
in
sbb
addr16
bound
out
sahf
jge
xlat
aad
or
arpl
(bad)
mov
dec
leave
push
push
sub
pop
xchg
mov
sub
dec
cmc
sbb
mov
adc
cdq
stos
mov
pop
mov
mov
inc
pop
sub
inc
test
or
push
sar
jg
aad
test
sub
inc
push
or
(bad)
add
add
icebp
xchg
pop
xchg
ficom
dec
xchg
cs
or
aaa
mov
mov
cli
xchg
jo
dec
add
xor
pop
lds
out
and
outs
loop
push
retf
movs
jg
fisttp
loope
scas
jl
mov
inc
sbb
stos
jg
shl
mov
out
leave
cmc
cli
pusha
nop
and
xchg
sub
outs
pop
push
xchg
imul
cmps
cmps
push
out
mov
push
or
sahf
and
and
cmp
sahf
fidivr
enter
cmps
jmp
sbb
push
push
sbb
sbb
daa
fcom
push
pop
add
jmp
rcr
aas
not
mov
and
mov
push
jae
(bad)
cmp
xchg
jae
xchg
add
sbb
test
test
jno
sti
cwde
iret
cmp
(bad)
and
mov
xchg
sub
mov
push
inc
xor
lahf
dec
or
jmp
jge
ret
fiadd
sbb
mov
inc
rcl
xchg
out
lods
dec
(bad)
jnp
pop
add
xor
and
inc
not
aam
clc
sbb
push
mov
test
stos
or
xlat
or
imul
mov
and
dec
adc
jge
push
xchg
imul
cmp
stc
or
inc
xchg
pop
jae
rol
out
cdq
mov
(bad)
mov
ret
cmp
push
sbb
and
sub
mov
stos
sbb
stos
cmps
cwde
inc
xchg
stc
push
mov
into
test
or
cwde
sbb
mov
imul
cld
pop
fisubr
fsubr
out
xor
or
call
nop
push
std
mov
mov
stos
pop
cdq
sbb
in
aaa
outs
sahf
rcl
clc
pop
cld
dec
add
aas
lock
adc
inc
(bad)
fsub
mov
scas
cmp
add
mov
imul
cwde
xchg
push
jb
add
jge
mul
and
cmc
icebp
pop
pop
ja
lock
jns
jns
inc
adc
or
mov
xchg
adc
mov
loop
jnp
and
jp
sub
mov
cs
fsubr
daa
push
aam
or
and
aaa
cmp
jle
sub
repz
mov
add
daa
jmp
jbe
pop
mov
and
sahf
ja
mov
adc
inc
dec
lahf
out
fisub
jo
mov
pop
adc
jp
jle
mov
mov
movs
fisub
jnp
ins
repnz
imul
sub
(bad)
cmp
sub
sub
xchg
sub
and
ret
cmc
in
jnp
lds
pop
cmp
outs
pop
sbb
mov
and
nop
and
out
data16
push
inc
push
bound
test
js
mov
add
loopne
dec
pop
pop
cli
popa
inc
inc
push
movs
jmp
sbb
mov
mov
mov
pop
xchg
aam
jns
jne
mov
jl
adc
(bad)
lods
xchg
outs
ins
push
int3
jb
mov
sar
pop
pop
sub
xchg
loopne
mov
jbe
ret
mov
adc
pop
or
adc
into
gs
fistp
push
mov
or
cli
pop
sbb
dec
(bad)
loop
push
fwait
mul
xchg
sub
jbe
cmp
dec
adc
repz
cli
mov
data16
sbb
and
push
inc
jae
push
out
es
ss
aad
sbb
jge
sahf
sbb
std
xchg
or
bound
ret
ja
sub
adc
mov
lahf
stos
mov
loope
lods
call
mov
(bad)
cmc
mov
jno
test
das
jl
out
jbe
jle
sub
stos
test
lods
pop
and
pop
fbld
call
mov
jne
inc
dec
enter
test
xchg
push
jbe
push
jl
test
jl
mov
enter
or
in
loop
mov
scas
js
ins
lahf
js
std
cmp
pop
pop
fs
aaa
mov
xchg
(bad)
xchg
in
out
gs
mov
ret
test
mov
lods
shl
inc
sahf
add
loopne
loope
repnz
(bad)
cld
push
adc
and
push
cmp
xor
push
jl
mov
(bad)
adc
stos
loopne
retf
pop
xchg
scas
sar
loope
mov
cmp
inc
fistp
int
movs
and
xchg
push
imul
fucom
retf
mov
sub
and
out
mov
xchg
ret
retf
xor
arpl
jge
addr16
mov
mov
popa
or
sub
or
aaa
pushf
xchg
inc
lahf
pop
mov
pop
fs
(bad)
repz
or
ss
push
cmp
movs
jmp
sti
mov
dec
fidivr
pop
or
jno
hlt
or
cld
xor
xor
loopne
push
and
test
xchg
mov
push
mov
pop
pop
pop
nop
(bad)
push
(bad)
push
jne
adc
sbb
cs
mul
xchg
lds
out
jb
fistp
data16
movs
shl
mov
dec
sub
adc
xlat
iret
and
(bad)
into
mov
push
xor
xchg
aaa
int3
aad
pop
sub
popa
mov
jl
or
ret
cmc
data16
xor
in
pop
cli
lds
pop
inc
add
or
mov
leave
es
mov
xor
xlat
cmp
dec
jns
daa
dec
add
sub
sub
ja
sbb
dec
js
nop
xchg
or
add
lds
lahf
mov
xor
not
pop
and
jnp
jle
test
out
dec
ds
lea
adc
js
nop
sub
xchg
jns
xchg
mov
inc
adc
maxps
and
test
cld
jl
jmp
xor
mov
imul
hlt
mov
das
(bad)
mov
scas
xlat
cmp
cmp
pushf
pop
inc
or
popf
fucomi
imul
jg
adc
repz
add
or
pop
enter
sbb
push
clc
ja
mov
cld
cdq
sub
add
out
(bad)
inc
sbb
rol
and
mov
sar
movs
mov
xchg
inc
repz
(bad)
dec
jge
test
lahf
data16
(bad)
adc
mov
jno
xchg
test
add
and
cmp
pushf
push
xchg
inc
imul
jmp
movs
arpl
(bad)
mov
cmp
dec
jb
leave
fs
cli
xchg
retf
in
iret
loopne
(bad)
fmul
adc
outs
push
movlps
ror
iret
cmps
mov
mov
xchg
cwde
mov
fs
loop
cmp
push
ds
jnp
and
inc
jb
xor
cmp
or
jge
mov
adc
daa
jp
sub
push
push
adc
out
jp
add
and
int3
xchg
imul
jb
scas
xor
(bad)
mov
push
pusha
sti
or
cmp
inc
cld
xor
rcr
mov
dec
cli
jns
enter
xchg
enter
mov
cmps
adc
data16
cmps
and
iret
mov
out
push
mov
push
and
call
sub
addr16
jo
cmps
jno
std
rcl
scas
jle
add
add
sub
push
(bad)
call
mov
bound
fldenv
sti
bound
pop
jae
add
mov
loope
fdivp
mov
in
out
loopne
ja
xlat
adc
pop
pop
dec
or
data16
sbb
jns
mov
sub
push
mov
or
int
pop
es
sub
push
push
xchg
fistp
mov
push
sub
out
data16
or
test
inc
push
add
stos
loop
loopne
repz
ficomp
cs
mov
call
mov
jbe
dec
gs
into
lds
add
daa
and
pop
jne
adc
fsub
pop
adc
sbb
add
jecxz
retf
and
in
lea
xchg
mov
adc
fs
mov
repnz
out
cmp
inc
mov
cld
test
movs
retf
or
pop
sar
or
aas
mov
pop
sub
or
mov
push
sbb
leave
and
jne
dec
or
add
fcom
sbb
(bad)
sti
xchg
nop
lea
add
cmp
jnp
jg
(bad)
sbb
dec
dec
bound
adc
lds
push
aaa
das
rcl
xor
js
retf
or
mov
sub
jmp
and
xor
xchg
sbb
ss
cmp
addr16
ror
dec
push
xor
test
mov
out
ret
dec
cmp
dec
pusha
mul
mov
jns
push
loop
mov
fsubrp
inc
mov
sti
adc
call
movs
pop
push
pop
pop
hlt
popf
mov
or
test
mov
jne
pusha
or
(bad)
aas
fild
test
addr16
jbe
(bad)
aas
jbe
xchg
test
jne
lods
mov
popa
add
push
shr
sbb
shr
leave
scas
mov
mov
icebp
xor
mov
int3
mov
lock
adc
jg
stos
call
inc
xchg
or
fisttp
xchg
repnz
and
push
and
sbb
aaa
pop
inc
mov
inc
loopne
pop
xchg
inc
stos
push
or
int3
mov
mov
movs
sti
addr16
stos
xchg
int
pop
jnp
inc
cdq
bound
sub
add
sub
push
ret
pop
mov
mov
mov
aas
int3
cmps
push
dec
xchg
or
and
cdq
or
add
test
leave
sbb
dec
ret
ss
popf
sbb
(bad)
sbb
sbb
fistp
in
mov
cmp
in
in
neg
repz
mov
inc
sub
inc
les
int3
jp
mov
arpl
lea
inc
out
push
push
jns
sbb
push
cmps
cld
das
es
fdiv
pop
mov
add
cdq
gs
and
adc
ret
mov
cmps
aad
in
ins
cmp
dec
shl
out
xor
jns
push
mov
retf
imul
xchg
lods
loopne
jne
push
scas
sub
xchg
cwde
sahf
imul
(bad)
mov
push
dec
cmp
jae
mov
stos
sub
or
cli
dec
ret
popf
sahf
daa
and
jle
and
pop
hlt
in
inc
pop
outs
xabort
daa
loopne
pushf
pop
and
mov
hlt
push
pop
ja
idiv
fisub
outs
jns
xchg
test
js
imul
xchg
xchg
stos
add
mov
mov
mov
icebp
push
adc
lods
inc
xchg
out
xchg
xchg
adc
push
xor
pop
add
mov
xchg
inc
mov
push
adc
inc
sbb
sahf
std
pusha
loopne
mov
cmp
pop
jp
pop
inc
repnz
jle
sub
loopne
pop
iret
(bad)
jno
out
inc
cmp
and
stos
adc
iret
jno
dec
into
inc
or
aad
hlt
lahf
inc
loopne
sbb
or
mov
mov
repz
jne
adc
dec
in
dec
push
aad
pop
push
fisttp
imul
int
xor
xor
mov
mov
and
xor
pop
push
adc
aaa
jno
js
repz
and
ins
xchg
pop
mov
stos
popf
stc
cmps
(bad)
push
pminub
(bad)
fld
mov
jno
dec
jne
loope
or
jl
jnp
push
jecxz
mov
bound
xlat
cmps
rol
sub
sbb
cmps
jp
ret
mov
add
or
shl
fst
std
rcl
ins
sub
mov
sub
push
call
mov
mov
mov
jecxz
retf
push
pop
xchg
jle
xchg
or
(bad)
lea
test
lock
or
mov
xchg
xchg
xor
mov
and
and
jo
add
lds
sub
inc
icebp
sub
dec
push
add
jns
test
sbb
je
push
xchg
les
(bad)
icebp
pusha
nop
daa
ret
mov
iret
cmp
enter
mov
loope
lods
dec
shl
into
bnd
arpl
fist
and
enter
(bad)
jge
js
xchg
xchg
shr
add
scas
out
cli
test
jp
add
xchg
test
fisubr
jg
cmp
mov
lahf
lods
push
dec
mov
rcr
jp
pop
dec
fistp
aas
stos
sbb
test
(bad)
(bad)
xor
ja
loopne
imul
mov
lock
or
into
push
into
pusha
mov
mov
pushf
inc
pushf
aad
sbb
jo
mov
aad
cmps
int3
(bad)
xlat
dec
xchg
ds
push
outs
fld
inc
movs
idiv
xor
dec
jns
add
in
lock
push
pop
repz
xor
adc
add
aas
mov
cmp
shl
jo
push
sbb
adc
iret
out
data16
rol
arpl
and
mov
test
cmp
test
inc
cwde
popf
push
in
(bad)
mov
test
clc
test
and
sub
or
cld
movs
aaa
arpl
cmp
inc
das
loop
jp
adc
push
aaa
ja
popf
cmc
fcomp
xchg
push
and
jne
lds
xchg
sub
or
iret
cli
retf
inc
jge
and
(bad)
fisubr
pop
les
xor
mov
popf
add
pop
in
test
retf
arpl
lea
sbb
and
sti
rcl
dec
add
mov
push
inc
sbb
out
test
cmp
xchg
pop
inc
xchg
and
cwde
div
ins
mov
or
jecxz
push
and
jbe
call
push
and
leave
scas
inc
mov
clc
enter
dec
adc
icebp
pop
fistp
ins
cmp
cmp
(bad)
xor
mov
jmp
xchg
pop
jb
cmp
sbb
nop
retf
loopne
loope
mov
(bad)
jg
int
jmp
sbb
jmp
cdq
out
mov
push
lock
inc
mov
and
mov
mov
(bad)
cmc
paddsb
mov
das
retf
mov
cmp
repz
fnstenv
dec
cdq
jo
ja
mov
add
fwait
inc
jno
adc
imul
fdivr
out
pop
mov
(bad)
or
icebp
mov
adc
adc
fwait
mov
loopne
gs
sub
les
jmp
lock
int3
xor
inc
fsub
bnd
mov
lods
sahf
retf
in
push
push
or
jne
cmps
outs
sbb
in
or
call
arpl
inc
dec
es
push
cmp
mov
mov
xchg
jno
xor
xchg
inc
pop
fisubr
aad
dec
dec
rcl
mov
cmps
imul
lahf
in
push
jo
jae
(bad)
hlt
scas
mov
mov
or
test
retf
sbb
jmp
add
mov
sbb
inc
add
jp
cmps
in
popf
lds
sub
daa
dec
adc
mov
pop
loopne
fcmovb
mov
lods
mov
ficomp
aad
xchg
mov
or
shl
mov
cmp
pop
mov
fcmovbe
in
sub
test
outs
add
aas
cmp
fwait
push
cmp
ror
mov
ins
fsub
pusha
inc
jecxz
sub
shl
fisubr
addr16
in
adc
xor
sub
mov
cld
xchg
movs
push
rol
mov
call
xchg
movs
sub
push
loope
push
mov
(bad)
adc
ffree
es
xor
mov
cmp
out
dec
and
shr
push
(bad)
cld
shl
(bad)
lds
adc
popf
in
call
xchg
xchg
pandn
js
mov
push
movs
inc
mov
mov
(bad)
add
mov
cmp
arpl
out
(bad)
inc
movs
and
ins
xor
jmp
xchg
mov
ss
push
stc
pop
sub
(bad)
jmp
lods
es
mov
xor
xlat
add
adc
inc
jmp
in
repnz
pop
cmp
xchg
sahf
mov
mov
cwde
int
and
and
pop
in
icebp
not
arpl
sub
inc
mov
(bad)
cmp
cmp
stc
adc
repnz
push
jns
or
shl
stos
hlt
adc
iret
sbb
sbb
das
retf
out
out
xchg
cdq
scas
(bad)
(bad)
push
out
mov
ret
xchg
cli
and
and
addr16
inc
fucomp
jae
push
xor
jmp
xchg
hlt
shl
sbb
sbb
or
imul
xchg
add
cmps
adc
(bad)
into
stos
jno
dec
inc
rcl
sti
dec
adc
inc
sar
add
mov
push
and
mov
jnp
sbb
inc
mov
loop
ins
xor
and
popf
add
mov
xor
clts
mov
sbb
and
cmps
jp
outs
xchg
sbb
cdq
and
and
adc
cli
pop
mov
cmp
inc
mov
das
lea
xor
out
dec
(bad)
xchg
xor
sub
(bad)
mul
je
inc
mov
fwait
in
iret
cdq
mov
pop
rol
imul
repnz
ins
stos
das
stos
or
les
nop
rol
loopne
std
xor
push
sahf
test
enter
or
sub
sub
popf
cld
sub
mov
in
sbb
or
dec
stc
sbb
fisttp
dec
aam
pop
pop
sub
xchg
or
inc
lods
std
aaa
or
pop
fld
xchg
fnstsw
mov
push
mov
pop
adc
cli
les
leave
arpl
stos
adc
cmp
jne
pop
or
out
jno
loop
mov
adc
push
jae
aad
dec
xor
mov
lods
gs
dec
bnd
arpl
pop
retf
inc
mov
mov
sbb
dec
les
and
mov
xor
push
leave
movs
sub
daa
(bad)
or
arpl
not
cmps
aad
clc
jno
stos
xor
push
rcl
iret
psubq
sbb
jb
mov
pop
xchg
sti
or
repz
xchg
pop
mov
ja
pop
shl
jns
sahf
mov
add
mov
dec
xor
mov
mov
xchg
bound
mov
adc
lds
aam
lahf
xchg
ins
dec
sti
dec
cmp
fdivr
lods
pop
std
jp
and
ins
dec
add
fisttp
(bad)
jmp
clc
jle
cmp
xor
ret
test
sbb
stos
in
(bad)
dec
test
ret
push
lds
popf
mov
call
jbe
scas
or
sahf
int
or
and
xchg
repz
mov
gs
aas
inc
jae
out
mov
sbb
jno
cdq
(bad)
xor
adc
stos
or
popa
mov
push
test
lods
mov
movs
push
cs
test
jbe
ret
dec
xor
js
cmps
or
jne
mov
sub
aam
js
sbb
into
call
test
add
aam
addr16
inc
dec
xchg
mov
jmp
fdivr
mov
and
(bad)
retf
jge
dec
push
in
adc
popf
pusha
xlat
push
out
sbb
mov
cwde
scas
rcl
dec
shr
cmp
nop
inc
das
mov
shl
mov
in
push
cmp
cmps
jg
lods
fstp
int
mov
ja
xchg
sbb
mov
xchg
ins
ins
repz
add
nop
jp
push
lds
fwait
repz
mov
adc
or
pop
mov
and
mov
sub
adc
pop
test
pushw
rol
cld
jns
scas
adc
push
leave
ret
bndldx
mov
add
stos
xchg
sub
cmp
inc
out
add
addr16
nop
mov
(bad)
push
xchg
pop
mov
dec
imul
cmp
fcomp
retf
outs
ins
aad
dec
cmova
not
pop
sbb
mov
mov
shr
inc
ficom
loope
movs
pushf
fucom
jns
mov
pushf
icebp
adc
add
bound
shl
cmp
or
rcr
idiv
sbb
popf
and
das
daa
sub
(bad)
fnstcw
xchg
scas
sbb
push
cs
je
mov
pop
leave
jns
inc
and
jl
cmp
mov
rcr
inc
push
push
std
repnz
mov
push
mov
jl
cmp
sub
xchg
push
add
push
sbb
push
ss
push
cmp
lds
sbb
cld
mov
cmp
aam
inc
out
in
scas
sub
sbb
inc
call
stc
cmp
test
add
out
into
imul
loop
fldenv
dec
sbb
das
ds
fwait
mov
hlt
dec
dec
inc
pop
xor
loope
jo
je
mov
mov
add
mov
repnz
mov
cmps
pop
dec
xor
fwait
xor
xchg
(bad)
pop
into
push
push
lods
adc
stos
dec
push
adc
pop
jmp
dec
scas
adc
inc
aam
das
(bad)
adc
and
fistp
pop
sbb
or
cmp
lock
cdq
das
js
out
cmps
xchg
shl
xor
hlt
dec
sbb
push
mov
movs
xor
jle
xor
cld
add
mov
loope
nop
fmul
mov
mov
xchg
or
mov
scas
scas
pushf
or
jl
(bad)
and
mov
test
jb
jno
bound
fs
daa
jle
jnp
repnz
jnp
daa
fs
inc
mov
sbb
jbe
xor
retf
pop
into
arpl
sti
inc
inc
ret
xchg
(bad)
jns
sub
jle
das
jnp
idiv
and
retf
mov
cmps
xchg
je
push
push
jb
fadd
pop
jp
xor
sub
imul
mov
mov
inc
pmaddwd
adc
push
mov
not
imul
(bad)
ret
push
lea
mov
pop
je
mov
icebp
addr16
push
cmp
push
mov
inc
stos
cmp
mov
(bad)
cmp
sub
(bad)
cmp
ret
arpl
dec
adc
out
inc
(bad)
stc
lods
jp
add
adc
mov
pop
cli
scas
out
int
(bad)
dec
fwait
aas
cmp
push
jmp
jle
outs
dec
add
push
es
xchg
ins
mov
shr
test
in
or
inc
ja
mov
jne
mov
add
iret
push
shr
or
stc
mov
jnp
popa
push
gs
dec
aad
fistp
dec
fistp
mov
xlat
outs
into
jmp
inc
adc
aam
pop
sti
inc
shr
test
fsubr
in
cld
add
adc
retf
ret
ds
add
shl
xor
(bad)
cmp
add
gs
test
les
cmc
ja
adc
push
leave
adc
(bad)
push
sbb
pusha
mov
jecxz
adc
or
push
push
cmp
test
mov
cmc
push
jmp
or
bound
adc
cli
pop
mov
cmp
(bad)
xchg
inc
outs
imul
and
cli
setnp
or
xor
inc
clc
xchg
jne
sar
inc
out
xchg
cmp
ret
loope
in
inc
gs
outs
xor
dec
addr16
aas
paddq
xchg
and
mov
push
add
mov
lods
xor
sar
inc
int3
pushf
ss
mov
sbb
sbb
test
ds
stos
outs
sbb
and
in
cmps
fimul
aaa
xchg
cmp
add
pushf
pop
out
retf
popa
(bad)
sti
data16
aaa
xlat
gs
sahf
ins
(bad)
(bad)
stos
movs
adc
pop
mov
cmps
cmps
mov
lea
pop
xchg
dec
iret
inc
pusha
hlt
mov
mov
lods
add
imul
sbb
sbb
lods
fiadd
movs
inc
inc
jbe
pop
mul
sub
fild
add
jmp
xor
lahf
add
sub
mov
jg
ret
(bad)
inc
or
std
pushf
push
sti
pop
repz
push
nop
mov
adc
fisttp
loop
push
sub
movs
mov
test
(bad)
dec
and
aas
add
inc
dec
mov
pop
mov
mov
int3
mov
ins
jmp
sbb
add
aaa
mov
ret
out
push
movs
mov
jecxz
or
sbb
push
(bad)
out
idiv
cmp
ret
aas
ret
push
test
sub
push
outs
in
sbb
dec
pop
in
dec
sbb
pop
dec
dec
imul
push
xchg
ffree
jmp
das
jg
mov
hlt
jg
in
bound
ins
clc
xor
fstp
mov
jne
fcomip
aad
hlt
sbb
xor
jbe
jne
outs
repz
gs
fmulp
movs
sub
lock
pop
int3
ficomp
mov
out
(bad)
mov
sub
jnp
inc
nop
in
jecxz
cmp
jns
mov
ja
inc
mov
fild
jecxz
inc
mov
push
xchg
fs
aam
movs
aas
dec
ret
and
pop
dec
mov
int3
loop
xchg
sub
sub
sti
es
out
aaa
cmp
jnp
div
aad
aaa
push
aaa
les
adc
test
ss
fisttp
retf
das
xchg
(bad)
push
pushf
das
mov
scas
inc
xor
stos
xlat
cdq
lock
outs
dec
jmp
fucomp
push
mov
jg
pop
inc
loop
mov
sub
adc
inc
dec
das
fidivr
(bad)
int3
out
xor
sub
jmp
cmp
push
mov
and
mov
sub
sub
dec
adc
mov
lods
dec
xchg
sub
xchg
test
ror
adc
test
pop
(bad)
out
iret
jmp
pop
mov
jno
xchg
fcmovnb
jp
or
pop
add
sub
ret
aas
xchg
aaa
sbb
jns
mov
sub
mov
jmp
push
adc
pop
pop
pop
xchg
dec
retf
cs
jp
mov
aaa
jb
(bad)
dec
cmps
movs
cmc
mov
aaa
iret
std
mov
jmp
ret
xchg
test
mov
add
mov
pop
in
in
aam
jne
movs
inc
sbb
push
out
fisub
mov
pop
fistp
retf
pushf
dec
dec
mov
sub
mov
or
pop
push
(bad)
xor
jg
inc
das
ins
je
push
jp
sti
data16
mov
into
icebp
xchg
jmp
inc
nop
push
sbb
sti
pop
outs
add
jmp
mov
mov
inc
aad
je
xchg
sbb
or
inc
adc
adc
mov
ret
(bad)
mov
test
outs
pop
xchg
les
push
pop
(bad)
xchg
leave
loop
add
je
mov
in
jge
sub
mov
mov
and
cmp
adc
mov
(bad)
push
in
inc
and
xchg
add
loope
retf
(bad)
pop
lea
rcr
or
mov
rcr
xor
out
jne
sbb
popa
dec
fdivrp
imul
int
nop
sub
sub
add
or
outs
gs
adc
jns
mov
pop
lock
rcl
call
sbb
xchg
retf
inc
fdivr
ins
dec
xor
mov
rcr
sbb
xchg
mov
fwait
xchg
mov
inc
pop
push
pop
lods
cmps
fimul
inc
push
js
jg
jmp
mov
push
int3
xchg
xchg
outs
out
push
aaa
call
sbb
fst
adc
je
jecxz
(bad)
jns
cmp
jle
mov
xchg
dec
(bad)
cmp
loop
dec
stos
shl
inc
xor
js
adc
cmps
stos
sub
add
lock
xlat
outs
fstp
adc
gs
out
out
or
mov
fist
lods
cmp
es
xchg
aad
dec
mov
pushf
ds
loopne
pushf
(bad)
push
sub
cli
lahf
adc
sbb
call
adc
and
gs
movs
adc
mov
mov
pop
dec
mov
popa
icebp
call
jle
mov
jo
cwde
inc
cli
ins
int3
add
or
jmp
mov
outs
inc
add
mov
mov
cmp
push
sbb
jo
mov
test
call
mov
scas
imul
rol
lds
jmp
jmp
mov
xor
pop
jbe
outs
repz
push
daa
out
in
mov
sbb
fisub
and
pusha
add
lds
mov
lods
jns
sbb
das
fnsave
adc
cmc
rcr
jecxz
mov
cmc
pop
push
xchg
pop
xor
test
into
mov
fistp
cli
aam
arpl
fisub
jbe
adc
ret
clc
enter
add
mov
shl
push
cmp
mov
mov
hlt
out
ss
pushf
or
pop
or
mov
fstp
xchg
mov
sub
(bad)
in
inc
imul
or
xchg
enter
mov
push
int
imul
mov
int3
fldcw
push
imul
pop
sub
mov
inc
jge
mov
shl
mov
cmp
xchg
call
dec
jp
dec
sub
std
mov
push
or
cmp
bound
or
push
pushf
mov
bound
loopne
pop
daa
out
aas
es
ror
sti
sbb
xor
inc
cld
data16
icebp
push
aas
mov
sub
in
and
xor
mov
popf
popa
cs
inc
lods
sbb
cmp
mov
and
cmp
shl
jl
mov
or
lds
shl
cdq
lea
pop
adc
add
imul
jbe
cmp
cs
add
(bad)
stc
shr
test
dec
enter
movs
out
int
push
adc
mov
dec
xor
inc
gs
mov
and
ret
sbb
jne
pop
and
sbb
and
sbb
std
xor
out
(bad)
pop
xchg
xor
jne
cmp
push
(bad)
js
mov
sahf
int
jns
cmps
mov
pop
mov
sub
cmps
call
sbb
mov
mov
add
call
inc
sti
nop
xchg
aad
pop
dec
sub
push
data16
aam
cmp
aas
adc
pop
(bad)
loop
sub
mov
mov
call
push
jg
sub
(bad)
and
mov
mov
mov
cli
push
in
cli
(bad)
jno
cdq
shl
das
jmp
mov
cmp
and
push
stos
add
retf
rcl
jg
enter
push
icebp
popa
jne
pop
inc
jmp
retf
cmp
scas
lods
pop
daa
mov
imul
neg
ds
sti
fmul
lock
stc
dec
dec
outs
ds
(bad)
or
pop
cmc
addr16
push
cdq
dec
xor
loopne
jbe
xor
pop
aam
fmul
jo
push
mov
fwait
das
and
cmps
mov
mov
xchg
sub
dec
pop
je
fidivr
jp
pop
cs
das
in
push
loop
cmps
test
and
jp
pop
aaa
iret
pop
outs
fild
jecxz
push
rcr
sub
jecxz
and
movs
xchg
popf
rol
lahf
jmp
loopne
inc
ja
ret
mov
and
adc
cwde
retf
or
test
dec
pop
fcmove
push
arpl
outs
test
aad
int
pop
push
xchg
stos
addr16
push
jno
ret
enter
xor
sbb
repz
(bad)
and
add
aaa
add
lea
retf
hlt
daa
shl
out
cmc
add
jmp
push
jp
movs
test
jmp
pop
mov
jp
movs
hlt
push
pop
pop
mov
sbb
pop
xchg
push
sub
sub
iret
lock
cmc
clc
jmp
retf
in
clc
fcmovbe
mov
idiv
ffreep
jp
movs
cld
mov
retf
jle
inc
push
mov
ret
imul
sub
mov
push
fsubr
mov
leave
pop
les
cmp
shl
(bad)
pop
jno
std
fld
aad
imul
add
ret
retf
fldcw
out
xor
in
inc
aas
jns
fs
(bad)
xchg
aad
xchg
add
and
push
mov
cmps
xor
or
(bad)
(bad)
retf
(bad)
xor
push
dec
mov
or
cmps
mov
jmp
out
cmc
loopne
cmps
xlat
mov
sbb
int3
retf
dec
dec
shl
push
loop
pop
out
packssdw
sbb
data16
mov
sbb
shl
jg
sub
popa
in
imul
xor
push
fsubr
cs
cli
sub
or
mov
xor
mov
std
push
and
sub
sub
add
cmc
sbb
pop
push
fwait
mov
sbb
(bad)
loope
jl
mov
mov
sbb
retf
(bad)
push
outs
dec
pusha
(bad)
dec
pusha
inc
mov
out
fstp
pop
loop
inc
or
scas
jmp
sbb
mov
mov
sbb
inc
call
mov
stc
jmp
dec
lahf
int3
or
add
inc
mov
add
jae
std
pop
js
jle
popa
xor
sub
sti
lds
cmc
call
loope
sbb
mov
daa
or
xor
ins
cmp
test
in
and
mov
fnsave
ret
sub
std
je
ss
pop
dec
mov
or
fiadd
jnp
fild
mov
push
sbb
and
popf
imul
push
ret
mov
sub
ss
in
and
cmp
bound
jle
jo
push
push
xor
out
or
pop
cmp
nop
adc
stos
xchg
loope
push
in
rcr
and
mov
call
mov
ds
push
clc
mov
fucomi
add
fimul
add
imul
jb
dec
pop
adc
repz
nop
fiadd
outs
jae
mov
test
xlat
imul
xchg
es
xor
scas
out
add
in
shr
clc
push
or
out
add
aad
xor
adc
cdq
cmp
dec
sub
cmps
loopne
movs
push
imul
hlt
cmp
in
addr16
mov
(bad)
js
cmps
or
movs
aas
mov
ret
ror
imul
scas
sbb
jb
mov
popa
push
xchg
popf
nop
ins
jnp
xor
fnstsw
test
cmps
movs
jecxz
cwde
push
dec
mov
mov
pop
add
dec
xchg
shl
popa
lea
mov
or
aam
(bad)
xchg
mov
cmp
mov
ret
inc
cmp
icebp
dec
mov
push
push
imul
ja
cmc
out
adc
ror
ins
mov
pop
ins
push
push
push
xor
pop
dec
repz
adc
xor
lods
in
jbe
push
int
inc
mov
sub
adc
or
call
pop
jnp
lods
and
ins
aad
cdq
retf
push
(bad)
mov
enter
(bad)
jg
dec
in
sahf
pop
imul
and
cmps
xchg
mov
dec
adc
test
loop
inc
jmp
jo
shr
xchg
jno
jmp
mov
pop
dec
aaa
ins
icebp
jp
or
mov
fcmovb
mov
test
adc
mov
xchg
and
lods
je
fstp
push
or
xchg
gs
cmp
in
mov
xor
jae
push
arpl
cmp
repz
dec
cmp
and
push
out
jmp
sbb
call
jmp
push
loope
repnz
lahf
sub
sbb
sbb
mov
push
mov
push
cmp
adc
call
mov
pop
push
(bad)
popa
xchg
clc
retf
arpl
movs
mov
scas
lock
and
push
into
mov
or
cmp
das
add
push
pop
stc
xchg
xor
sub
cmp
in
lods
scas
ja
test
mov
out
das
add
lods
sub
scas
sub
ror
cli
push
xchg
sar
sahf
(bad)
mov
cwde
jnp
stos
retf
fimul
enter
or
aas
in
xor
mov
jno
retf
cdq
jnp
cmp
cwde
xchg
push
jle
push
pop
mov
mov
into
cmp
or
cmp
test
or
or
jge
jb
dec
push
mov
mov
adc
out
cmp
adc
pop
mov
mov
inc
cli
aaa
mov
xor
in
xchg
cdq
mov
std
sub
imul
ds
xor
out
ret
daa
jg
pop
mov
inc
push
mov
add
dec
arpl
add
popa
int
cdq
fs
mov
repz
inc
or
cmp
mov
pop
push
shr
je
jo
jmp
push
call
push
frstor
pop
xchg
fwait
pop
into
addr16
sbb
jmp
cli
add
and
sub
or
push
fwait
imul
les
arpl
sbb
fwait
mov
imul
mov
jbe
cdq
call
mov
xor
mov
shr
inc
(bad)
push
xor
cmp
cmps
cmp
xor
lahf
aam
test
jmp
jb
jbe
in
ss
xor
add
adc
movs
inc
out
popf
call
or
je
xchg
out
scas
retf
mov
inc
rcl
loop
mov
sub
mov
pop
or
cdq
sbb
add
sbb
push
push
pinsrw
mov
pop
in
int
cmp
test
lods
dec
xchg
retf
xchg
pop
pop
xchg
pop
inc
test
aaa
out
jns
hlt
jo
mov
call
das
pop
pop
test
call
dec
and
xor
mov
add
jno
mov
cdq
lahf
mov
pop
cli
xor
lods
cmp
adc
movs
sbb
push
inc
cmp
dec
cmc
(bad)
fisubr
mov
jbe
mov
cdq
sub
cmp
lods
dec
jp
sub
sub
fpatan
in
fs
sbb
mov
sub
mov
loopne
sub
add
out
cli
arpl
mov
nop
xlat
mov
sti
jmp
xlat
push
or
push
shr
movs
sbb
mov
fstp
cld
and
ret
pop
je
int3
cmps
cmp
add
push
or
push
xor
sbb
dec
mov
pop
cmp
jl
xor
rol
ret
inc
pop
mov
and
mov
out
push
mov
dec
jbe
test
dec
not
dec
lds
sub
cmc
std
dec
or
xchg
retf
pop
sbb
outs
inc
nop
daa
stos
mov
and
push
out
jle
xor
fisttp
inc
bound
or
adc
pop
cmp
mov
ficom
(bad)
mov
imul
jb
mov
fwait
loop
sub
das
mov
out
jne
repnz
cmp
dec
stc
lahf
jmp
je
pop
dec
or
jb
rol
test
xchg
shr
push
inc
mov
dec
inc
mov
pop
inc
jmp
xor
xchg
mov
pusha
fidiv
icebp
fwait
dec
scas
ret
rol
scas
inc
xchg
imul
jp
push
frstor
out
xor
xchg
jg
inc
pop
mov
adc
jecxz
in
or
sub
aam
repnz
pop
js
sub
and
std
fxch
sar
mov
sub
data16
aam
and
stc
js
mov
mov
ret
or
pop
pusha
es
jae
fwait
add
shl
pushf
imul
xor
jmp
xchg
cs
popf
pop
lods
aam
mov
movs
test
dec
popf
push
fwait
out
jle
pop
xchg
and
imul
in
xor
inc
and
ds
jbe
and
or
outs
xor
and
mov
outs
pop
popf
mov
jbe
add
lods
ftst
das
scas
lds
pusha
call
jl
daa
lock
pop
dec
fimul
in
jns
mov
mov
(bad)
nop
rol
fs
(bad)
xor
push
push
mov
call
sahf
and
into
in
movs
push
aad
push
sub
mov
xchg
mov
and
xchg
pop
lea
mov
sahf
scas
enter
scas
rcr
loop
leave
ret
addr16
es
enter
lahf
retf
or
in
jo
pop
adc
inc
cmp
fmul
cmps
sbb
fwait
jmp
or
pop
pop
into
mov
sbb
pusha
mov
lds
loopne
cmp
sub
adc
adc
(bad)
(bad)
sbb
mov
loop
pop
push
cmp
jb
dec
rol
(bad)
push
pop
cmp
mov
add
adc
pop
mov
mov
push
xlat
dec
js
mov
cmp
push
mov
sbb
push
dec
push
inc
loopne
mov
sub
out
xchg
mov
and
fs
pop
addr16
rcr
popa
push
mov
cs
aaa
inc
in
push
sahf
mov
(bad)
mov
mov
sub
inc
aam
shl
push
mov
jae
scas
dec
test
sbb
outs
adc
cmps
test
das
iret
pop
cs
pusha
pop
sbb
aaa
jmp
mov
sar
cmc
xor
pusha
push
aam
lods
mov
fistp
xchg
ss
sub
mov
or
inc
push
je
loopne
test
sub
(bad)
push
lds
ds
adc
push
push
jnp
add
popf
dec
imul
call
ins
lea
sahf
idiv
pop
out
scas
das
inc
(bad)
aas
iret
mov
pop
repz
imul
jno
add
lea
imul
adc
cmovb
aam
add
sti
lahf
inc
sbb
mov
cmp
in
sub
sub
call
repnz
and
(bad)
retf
push
xchg
ret
lahf
addr16
in
in
das
mov
xchg
ret
(bad)
pop
push
mov
adc
stos
mov
pushf
push
add
cmps
addr16
add
js
jge
sbb
cmps
or
aaa
test
lods
test
or
xor
(bad)
xchg
out
int3
aaa
pop
sub
jmp
jns
pop
mov
into
mov
movs
test
inc
leave
pusha
mov
fdivr
aaa
xchg
fisub
add
ss
jb
je
sbb
test
xchg
arpl
mul
adc
mov
clc
xor
mov
push
rol
push
imul
pinsrw
add
stos
aas
push
xchg
test
and
xchg
fstp
sbb
pop
out
dec
dec
cmp
push
nop
sti
cmc
xor
pop
(bad)
(bad)
mov
loopne
and
cdq
push
push
mov
mov
jecxz
inc
and
mov
ret
outs
push
push
xchg
shr
stos
push
mov
cli
inc
xor
in
inc
scas
sbb
dec
loope
mov
push
inc
sub
jb
add
add
(bad)
jnp
pop
add
jge
inc
xchg
rol
add
inc
mov
outs
stos
mov
inc
dec
or
div
inc
fmul
or
les
imul
in
mov
call
jbe
mov
retf
fwait
jbe
mov
push
loopne
in
inc
nop
sbb
fisttp
inc
shr
test
pop
push
sbb
push
inc
pop
retfw
pop
daa
inc
repz
aas
sar
(bad)
push
sti
idiv
ret
(bad)
je
imul
jl
sub
lods
or
mov
je
dec
or
cmp
shl
inc
xor
in
pop
ror
lods
(bad)
mov
jle
hlt
cmps
pop
push
xchg
das
(bad)
jl
xlat
mov
add
mov
out
mov
xchg
and
mov
xchg
or
inc
cmps
loope
mov
popa
push
inc
jmp
fistp
test
sti
call
mov
dec
in
fistp
pop
(bad)
xchg
loop
aad
mov
sti
sbb
mov
mov
add
fmul
pop
dec
repz
jnp
and
adc
std
or
int3
stc
pop
movs
add
lods
daa
mov
lahf
ror
or
aas
cmp
push
sbb
jbe
jne
xchg
dec
loop
cmp
call
cdq
pusha
(bad)
sahf
xchg
cmps
call
push
movs
scas
dec
out
cmp
sub
call
ss
jg
sbb
ins
(bad)
scas
test
in
(bad)
mov
fucomip
mov
stos
and
ffreep
or
ss
xchg
movs
es
cmp
stos
jae
xchg
adc
dec
jnp
xlat
mov
and
push
cmp
mov
mov
mov
and
push
inc
pop
push
cmp
data16
(bad)
out
out
js
clc
(bad)
pop
stos
mov
sub
and
fistp
sub
push
jae
mov
aad
aas
push
lahf
stos
mov
sahf
pop
add
repnz
inc
shr
sub
inc
ins
dec
lea
xor
shr
jge
mov
lods
mov
sbb
iret
mov
and
jmp
fstp
adc
in
in
mov
push
arpl
xor
lods
pop
out
mov
mov
lods
fidivr
pusha
(bad)
sti
push
push
(bad)
(bad)
mov
in
cld
fisttp
dec
mov
cli
xor
shl
loop
cld
mov
pusha
adc
dec
cmp
inc
and
fadd
fstp
xchg
scas
and
fwait
dec
fcmove
clc
addr16
xor
pop
push
loop
cwde
jo
fild
mov
imul
test
pop
cld
dec
stos
adc
lods
or
jecxz
mov
pushf
fldenv
jg
(bad)
mov
cmps
fwait
cld
jno
aaa
call
dec
jno
mov
mov
jmp
sub
aas
inc
or
sub
mov
add
dec
repz
and
out
int
(bad)
dec
pushf
cmp
sbb
movs
leave
shl
sbb
int3
xchg
jg
repz
stc
xchg
stc
sbb
mul
mov
pusha
sub
outs
cmp
mov
sbb
xchg
int
mov
push
lahf
cmps
mov
adc
push
leave
dec
add
mov
daa
aam
xchg
and
cmp
dec
dec
out
jno
scas
das
ror
sbb
xchg
mov
jb
xlat
nop
into
pop
dec
sahf
pop
outs
pop
and
jno
les
cmp
jnp
dec
(bad)
xor
add
sub
sti
aam
sbb
jae
jmp
hlt
fsubp
(bad)
pop
adc
repnz
inc
sub
dec
push
xor
push
xchg
(bad)
sahf
popf
and
mov
push
loope
test
retf
in
scas
push
call
jns
out
js
mov
es
jl
nop
inc
out
es
jge
movs
hlt
rcr
je
dec
cmp
rol
ret
pop
xor
aaa
fsubp
cmps
hlt
shl
fnstsw
or
call
test
movs
pop
mov
sbb
mov
dec
add
mov
or
xchg
das
jno
pop
mov
adc
fwait
xchg
cmp
inc
das
push
push
das
outs
lea
arpl
mov
stos
pop
nop
fadd
dec
(bad)
mov
push
xor
vcvttsd2si
out
fistp
imul
lahf
into
jp
inc
mov
aas
sbb
sar
mov
xchg
dec
jo
push
repz
or
scas
jns
cld
push
sti
sub
inc
lods
mov
fadd
in
inc
push
or
push
mov
fs
jge
and
rol
dec
add
aaa
mov
lea
aam
imul
jge
enterw
and
cli
pop
xor
mov
fs
(bad)
sbb
push
cdq
jne
adc
push
push
cmp
add
add
xchg
stos
mov
jl
(bad)
test
push
dec
or
inc
into
test
mov
repz
test
cmp
call
mov
cmps
mov
mov
pop
adc
fadd
loopne
out
lock
fdivr
psadbw
sub
repnz
fstp
bound
pushf
or
mov
dec
push
pop
sbb
add
clc
(bad)
pop
outs
or
pop
xchg
jns
xor
sbb
loop
jo
cmp
mov
add
mov
std
jne
sbb
pop
outs
pop
fwait
xor
sub
mov
sbb
xor
cdq
stos
ins
sub
retf
gs
aaa
pop
jle
jbe
cmp
sub
sbb
mov
jmp
loope
pop
xor
mov
ins
sar
cmp
aad
popa
aam
retf
jle
sahf
inc
or
xchg
jae
dec
sub
shr
ret
add
sbb
push
jb
add
push
jnp
sub
or
sub
xor
push
mov
in
lahf
jle
sub
jno
fbstp
xchg
mov
pop
or
xchg
(bad)
in
daa
xchg
push
jecxz
push
jne
dec
(bad)
retf
fist
lods
xlat
test
pusha
out
frstpm(287
dec
bnd
xor
fisttp
cmp
or
mov
ss
jns
hlt
mov
movs
call
or
(bad)
pushf
dec
inc
mov
cmp
sub
xor
and
loopne
push
(bad)
xor
lahf
or
adc
dec
mov
sbb
sahf
xchg
cmc
mov
jle
mov
adc
push
xchg
neg
in
icebp
push
je
adc
jnp
cmp
mov
hlt
jne
daa
fmul
dec
nop
xchg
rcl
xchg
mov
dec
fsubr
shl
ins
xor
mov
jbe
repz
add
test
addr16
sti
jmp
test
or
xlat
lds
add
movs
pop
shr
fsubr
outs
mov
mov
fdiv
and
cmps
inc
loopne
mov
push
rcr
ins
nop
scas
int
cli
push
test
(bad)
xor
jbe
aas
jae
jge
sub
mov
jb
cmps
and
mov
fimul
or
mov
push
inc
loope
movs
stc
sbb
mov
hlt
or
mov
mov
jb
cmp
int
popa
add
cdq
fistp
scas
stos
dec
xchg
das
add
pop
je
mov
add
xchg
or
(bad)
jmp
das
xchg
fnsave
(bad)
fistp
in
test
mov
dec
add
or
mov
cmp
mov
in
rol
ret
sub
xchg
out
adc
jmp
push
adc
pop
xor
mov
cdq
mov
or
or
xchg
icebp
pop
and
mov
sti
retf
cs
fyl2xp1
sbb
cmp
xlat
pop
dec
and
cmp
add
sub
ret
adc
push
fstp
xor
sti
repnz
mov
mov
adc
mov
add
out
cmp
push
or
mov
mov
and
ror
ret
push
es
xlat
test
push
dec
loop
xchg
fwait
sar
push
xabort
iret
test
leave
pop
adc
pop
test
ret
stc
push
mov
add
adc
scas
or
xor
je
dec
stos
jp
cld
push
mov
sub
fs
cmp
movs
out
mov
popa
and
fist
js
push
mov
les
mov
pop
jae
mov
and
les
(bad)
cmp
or
pop
out
dec
mov
aas
test
jmp
ficom
xchg
cdq
(bad)
out
repnz
pop
cmp
sbb
ins
mov
loop
or
cdq
and
(bad)
daa
(bad)
mov
xor
sbb
lods
enter
out
lea
ja
mov
loopne
adc
add
xor
inc
das
pop
nop
jl
in
inc
cmps
dec
addr16
clc
ss
mov
out
cmp
pop
ds
mov
xchg
ds
xchg
inc
fldenv
(bad)
pop
imul
push
and
(bad)
or
or
jmp
sub
sbb
xchg
xchg
pop
mov
push
(bad)
fimul
inc
xor
push
mov
call
inc
in
(bad)
adc
or
mov
in
inc
jle
push
das
and
sti
and
(bad)
mov
cli
inc
xchg
daa
jg
mov
icebp
outs
not
cs
fidiv
mov
int
enter
adc
sbb
jae
or
inc
clc
sub
pop
and
xchg
mov
lods
inc
cmps
mov
mov
sbb
int
por
data16
and
jge
xchg
or
aam
dec
pop
mov
fwait
push
pop
or
cdq
sar
int3
shl
bound
das
aaa
scas
jge
inc
outs
or
mov
fmul
scas
dec
sub
xchg
xor
and
out
dec
mov
mov
push
pop
add
dec
cdq
into
mov
sti
sub
rcr
push
scas
jbe
in
push
mov
xchg
ja
rcl
aam
into
fs
push
dec
xchg
inc
pop
pop
cli
imul
call
push
cmp
add
pop
jns
cmc
push
jne
pop
lahf
cmp
inc
inc
adc
ins
stc
dec
aad
out
mov
fistp
pop
or
in
in
or
push
mov
mov
pop
popf
adc
in
retf
rcr
sahf
arpl
cwde
mov
adc
sbb
cmp
fs
nop
xor
cmp
pushf
mov
inc
lds
adc
or
mov
out
pushf
adc
push
ficom
rcl
jecxz
cs
cmp
inc
aaa
sbb
pop
jecxz
pop
dec
jmp
and
sahf
add
xchg
mov
or
mov
nop
daa
pop
mov
(bad)
ds
sub
and
cmp
adc
icebp
aad
jecxz
psubb
mov
cld
cwde
mov
cmc
popa
icebp
or
jnp
(bad)
icebp
shl
aas
push
sub
mov
movs
int3
lods
adc
jle
mov
inc
jae
mov
test
add
sub
or
mov
stos
inc
push
sub
outs
dec
or
cs
jle
sahf
call
xchg
ret
ficomp
pop
or
sbb
out
push
mov
loopne
aas
sbb
cmp
pop
adc
punpckhbw
or
call
adc
cmps
inc
xor
aad
js
jnp
out
iret
adc
shl
mul
push
out
jp
dec
ins
bound
stos
dec
out
xchg
mov
fwait
push
retf
call
cmp
xchg
retf
test
sahf
pop
cdq
adc
out
leave
inc
mov
ror
mov
icebp
xchg
xchg
add
adc
add
mov
ffree
inc
inc
int
lock
mov
inc
mul
xchg
xor
shr
add
lods
aad
enter
call
popf
mov
xchg
push
sti
cs
fisubr
pop
mov
mov
outs
sub
inc
mov
in
dec
jmp
cmp
sub
and
adc
lea
dec
arpl
xchg
dec
jmp
and
pop
ficom
call
icebp
movs
lods
popf
sbb
shr
push
adc
(bad)
retf
push
xchg
sbb
add
jecxz
sub
jge
in
inc
push
jns
shl
ret
clc
jle
shl
pop
in
jne
jmp
fisubr
mov
out
sub
mov
sbb
xchg
push
mov
jmp
sbb
and
cmp
scas
daa
fmulp
or
ret
in
retf
or
mov
fneni(8087
adc
mov
dec
out
inc
dec
add
inc
push
mov
(bad)
retf
fs
bound
xchg
in
dec
push
jecxz
dec
mov
mov
xchg
scas
mov
and
xor
sbb
push
shl
mov
and
pop
nop
push
add
movs
fs
adc
dec
stc
iret
out
cmp
and
loopne
scas
mov
pop
mov
xchg
pop
mov
aas
xchg
(bad)
jo
fild
inc
jl
pop
mov
dec
retf
ins
dec
stos
outs
repnz
pop
fsub
xor
xchg
mov
shr
cs
dec
sbb
mov
test
imul
std
je
sbb
push
(bad)
in
enter
push
push
into
out
xchg
push
mov
lock
xchg
and
lea
sub
add
je
and
popa
push
fwait
stc
mov
es
and
leave
jns
sbb
inc
mul
push
jecxz
popf
cmps
inc
mov
cmps
pusha
inc
mov
pop
xchg
sbb
xchg
pop
mov
into
push
xor
inc
dec
(bad)
lods
arpl
xchg
and
out
gs
pop
pop
fdiv
(bad)
ffreep
jbe
cmp
push
jle
cdq
mov
(bad)
scas
jecxz
clc
mov
dec
outs
loopne
push
and
pop
int
test
loop
xchg
xor
inc
rcr
pop
aaa
mov
cld
mov
pop
ds
adc
adc
inc
test
hlt
sbb
inc
mov
xchg
inc
dec
addr16
push
stos
sti
neg
call
sbb
js
adc
sub
xchg
pop
test
iret
jne
clc
and
(bad)
int3
aas
ja
adc
int
fadd
xor
inc
dec
out
jle
and
jb
addr16
stos
fild
or
out
imul
loop
lds
push
sar
neg
or
test
(bad)
mov
and
mov
cmp
jno
and
es
addr16
mov
test
dec
pop
sbb
hlt
mov
or
dec
push
inc
push
sub
mov
retf
xor
imul
loop
clc
pusha
fidivr
sub
je
sbb
push
xor
cmp
push
sbb
sbb
jl
push
std
dec
pop
outs
add
scas
nop
inc
cmp
dec
jb
push
out
(bad)
dec
pop
les
cs
and
jbe
retf
repnz
mov
fidivr
and
push
loopne
aad
sbb
cmp
inc
ss
cmc
addr16
out
fstp
push
xchg
inc
xchg
pop
fiadd
and
shl
inc
add
inc
test
out
inc
or
adc
jne
add
test
add
mov
enter
mov
(bad)
(bad)
jns
cmps
nop
inc
jno
pop
push
cmp
push
jle
or
ret
xor
outs
mov
xchg
dec
(bad)
loopne
push
ss
mov
fidivr
sub
cld
or
out
lea
mov
mov
and
or
xchg
hlt
scas
movs
stos
adc
repnz
sbb
jmp
mov
(bad)
sub
and
add
js
jne
dec
mov
enter
addr16
add
ins
mov
scas
pushw
fisubr
add
mov
add
mov
sbb
push
inc
xchg
retf
mov
sbb
daa
loop
ficomp
jg
mov
push
inc
inc
mov
imul
into
xlat
and
ja
xchg
imul
ins
icebp
mov
jbe
aas
sbb
or
add
add
outs
and
sbb
mov
and
adc
mov
hlt
out
jmp
cdq
lahf
test
(bad)
xor
cmp
mov
loope
push
ja
adc
adc
push
mov
pusha
mov
jns
mov
mov
lds
xchg
push
loope
(bad)
loope
cwde
lock
in
aam
push
and
and
push
mov
jae
xchg
sbb
inc
adc
out
sub
sbb
push
mov
dec
add
push
dec
repnz
push
mov
ins
jmp
push
mov
jl
mov
inc
imul
icebp
sub
(bad)
loopne
or
scas
icebp
xchg
add
fcomp
cld
shl
mov
repnz
shl
loope
jge
dec
adc
data16
dec
lea
mov
in
push
js
sub
idiv
popa
scas
pop
movs
sbb
std
xor
mov
lds
and
cmp
cdq
inc
mov
(bad)
xor
imul
ss
dec
inc
ret
lahf
test
in
xchg
loope
cmp
data16
stos
xor
fst
repnz
mov
adc
mov
outs
inc
inc
dec
in
clc
in
and
sbb
adc
xchg
sbb
fadd
and
pop
jno
in
add
shl
fnstcw
xor
in
and
(bad)
iret
scas
xchg
js
and
hlt
fbld
shl
sbb
xchg
jno
jl
outs
mov
cmc
(bad)
inc
mov
outs
and
movs
into
test
mov
cmps
in
imul
sub
loopne
jne
jnp
clc
jmp
mov
push
add
movs
je
lock
test
dec
cmp
mov
inc
loop
(bad)
pop
out
sub
xchg
pushf
sub
xchg
shl
xor
fcmovbe
jmp
call
jmp
out
pop
sub
jl
cdq
loop
imul
dec
or
fsub
adc
fnstsw
mov
xor
fdiv
aam
ja
mov
fwait
(bad)
repz
mov
push
mov
push
mov
xchg
es
and
shr
mov
retf
inc
js
hlt
mov
mul
inc
inc
adc
(bad)
in
sbb
mov
push
and
std
sahf
repnz
scas
cmp
xlat
xchg
jne
sahf
xlat
jl
adc
js
add
loop
pushf
push
xchg
pop
lds
xor
movs
dec
out
add
jmp
xor
mov
jo
xor
sub
cmc
pop
adc
(bad)
sbb
xchg
(bad)
sub
dec
sub
fld
xor
cmp
pop
jge
mov
mov
cmp
dec
inc
call
fimul
adc
inc
adc
jne
and
cmps
and
push
inc
jne
repz
nop
push
dec
xchg
pushf
xor
jl
xchg
outs
add
cmps
aad
outs
out
xchg
pop
push
push
cmp
dec
in
add
pop
pop
cwde
push
pop
test
std
adc
jle
int3
test
mov
out
sub
sbb
sbb
push
jno
jg
push
test
sbb
mov
mov
sbb
and
ficomp
xchg
arpl
push
adc
aad
xor
dec
scas
add
les
pusha
mov
sahf
lea
mov
push
js
push
sub
(bad)
dec
cs
add
hlt
sti
loopne
jb
ror
aaa
jmp
jge
leave
or
jmp
mov
and
and
inc
imul
mov
cs
adc
pop
inc
mov
test
xor
push
xchg
mov
and
ss
mov
ds
jno
popa
cmp
pop
sub
mov
mov
sti
fmul
push
mov
xchg
and
js
and
push
ror
xchg
push
cmp
and
mov
repnz
int3
xchg
pop
jl
popf
xchg
clc
fmul
pop
or
and
in
push
push
call
shl
jl
pop
or
aaa
adc
mov
dec
test
cmp
(bad)
nop
inc
xor
rcr
mov
mov
sub
mov
ret
mov
pop
(bad)
jge
mul
retf
jb
inc
jp
enter
jp
shr
xor
mov
sbb
xlat
sbb
jae
(bad)
mov
ja
out
in
nop
and
data16
mov
xor
jns
pop
xor
cmp
into
retf
leave
in
cwde
mov
mov
leave
push
mov
xchg
scas
xchg
rcr
xor
dec
gs
sbb
dec
jmp
ds
xlat
and
or
sbb
jmp
and
adc
dec
mov
mov
cmp
push
mov
mov
jecxz
pop
sbb
pop
mov
movs
and
cmps
push
movs
cmp
xchg
rcr
push
shl
arpl
pop
cmp
pusha
pop
test
inc
mov
outs
cmp
std
(bad)
loope
xchg
test
outs
daa
popf
test
or
cs
in
mov
adc
jnp
out
cmps
add
pop
stc
enter
ins
ins
mov
(bad)
ficom
sub
dec
fsub
dec
push
aas
xchg
push
(bad)
lods
inc
inc
cmp
aam
stos
cmp
pop
add
sub
xor
push
and
xor
pop
push
inc
jns
pop
mov
and
xor
popf
es
xchg
out
adc
or
imul
icebp
enter
mov
mov
mov
and
cmps
mov
pop
or
mov
jg
retf
arpl
scas
cmp
js
ins
ds
lea
or
jmp
jbe
xor
or
cs
stc
(bad)
sbb
popa
inc
sub
lea
sbb
outs
xlat
jg
xchg
dec
sbb
fadd
imul
pop
sbb
fld
(bad)
stos
(bad)
add
pusha
sub
mov
movs
aas
outs
fwait
push
xor
xor
dec
bound
xor
lahf
mov
and
mov
xor
in
inc
sub
(bad)
jo
inc
cdq
xchg
sti
mov
cld
jmp
dec
cmc
push
jmp
into
push
cs
sbb
add
retf
lods
mov
clc
loop
xchg
add
fcomp
je
push
lea
loop
mov
jbe
cmc
icebp
out
jae
cld
jne
jp
mov
out
or
add
clc
scas
shr
lods
sbb
or
mov
jno
das
arpl
stc
shl
jb
stos
xchg
std
pop
mov
ret
outs
clc
stos
fmulp
out
mov
fiadd
cwde
int
sbb
in
imul
es
enter
loop
inc
aaa
jb
leave
test
pop
loope
add
icebp
push
std
xchg
mov
icebp
icebp
push
xor
mov
call
shr
ja
or
adc
sar
add
icebp
sbb
(bad)
or
cmps
dec
mov
fidiv
add
gs
xchg
add
and
dec
add
sbb
mov
dec
cwde
fs
in
aaa
xchg
mov
fistp
mov
sub
cmps
pop
(bad)
push
cmp
rcl
pop
push
xor
daa
mov
dec
sbb
or
mov
int3
lea
xor
cli
jle
mov
in
jae
inc
(bad)
xor
xlat
mov
lods
or
imul
pop
dec
daa
sub
es
xchg
outs
and
push
out
pop
(bad)
neg
dec
(bad)
pop
push
pushf
or
hlt
mov
call
gs
(bad)
sub
ds
cli
adc
ficomp
push
add
cmp
and
mov
stos
fsubr
cdq
cmps
scas
je
dec
dec
cdq
cmp
loope
lea
sub
mov
arpl
daa
push
loope
pop
jg
mov
pop
lock
in
sbb
jbe
stos
sbb
sbb
iret
jne
add
mov
dec
aaa
sub
xor
xchg
pop
adc
das
jbe
cmps
mov
push
or
out
rcl
cmc
xor
dec
xchg
inc
sbb
jns
call
retf
sbb
rcl
pop
in
mov
jmp
scas
rcr
lods
imul
dec
lahf
sti
cmp
or
sbb
mov
pop
out
jno
or
hlt
sti
cmp
ror
jle
or
stos
ds
jne
rol
in
inc
dec
leave
push
cmp
cmc
ret
enter
pop
int3
mov
int3
sti
data16
inc
and
out
adc
repnz
mov
cmps
xchg
jg
rcr
dec
test
add
mov
adc
xor
mov
jg
scas
mov
inc
jmp
shl
ss
pop
cmps
ror
mov
and
in
stos
ins
bound
cmc
scas
mov
call
scas
and
xlat
(bad)
mov
aam
mov
mov
jp
(bad)
stos
ins
popf
push
sub
jmp
sahf
arpl
out
dec
sbb
test
push
adc
out
mov
dec
js
inc
loop
push
dec
mov
jle
sbb
mov
add
stos
imul
lods
popf
(bad)
mov
sub
mov
mov
pop
outs
scas
sti
push
add
jmp
mov
cmc
outs
push
xor
test
mov
jnp
adc
scas
rcl
std
rcl
test
sbb
mov
pop
cdq
adc
int
dec
push
scas
mov
scas
scas
lea
repz
push
sub
test
lods
xchg
jb
loope
mov
les
pop
dec
out
lock
(bad)
dec
arpl
inc
int
or
sar
jp
push
ds
je
retf
pop
leave
jno
sbb
add
retf
push
ds
loope
test
or
aad
ss
leave
or
cmp
mov
leave
bound
add
fisubr
(bad)
adc
movs
sbb
enter
pop
repnz
adc
cmp
push
ds
(bad)
rcr
aam
push
ret
sub
pop
add
aas
sub
push
mov
in
pop
and
fs
ins
mov
push
fsub
sar
and
mov
jp
adc
or
jge
test
pushf
out
cmp
adc
stos
pusha
sbb
mov
mov
outs
aad
and
sbb
sbb
fisttp
call
jp
out
stos
sub
ret
sbb
xor
(bad)
jo
mov
leave
xchg
jp
pushf
adc
leave
loop
imul
jmp
hlt
or
(bad)
or
inc
stos
mov
(bad)
pop
jno
retf
out
sub
and
sti
pop
push
jne
ror
xchg
cld
call
rcr
mov
repnz
(bad)
push
dec
sbb
shl
add
add
inc
fdivp
cmc
les
xor
pop
jo
(bad)
gs
dec
int
xlat
dec
fdivr
scas
pop
shr
stc
pop
mov
xchg
xor
xchg
mov
jno
push
shl
push
mov
cs
iret
inc
or
loopne
jo
add
sbb
arpl
hlt
mov
mul
xchg
or
mov
push
lods
xor
inc
jno
push
xchg
xor
lods
popf
arpl
cmp
dec
(bad)
push
jno
jo
sub
fimul
push
dec
adc
sub
cmp
mov
inc
sub
mov
jecxz
mov
jp
fiadd
repz
cli
sub
mov
cmp
cmps
iret
(bad)
movs
(bad)
pop
mov
cld
sub
mov
or
iret
in
add
(bad)
(bad)
enter
into
dec
into
dec
mov
inc
icebp
fxch
or
inc
bound
push
and
clc
mov
ror
cmp
pop
ret
xor
inc
inc
xor
pop
call
loope
outs
xchg
(bad)
xor
pop
stos
ds
adc
sbb
retf
cmc
pop
test
sub
cmp
out
mov
pop
arpl
aas
sbb
sti
aas
jno
sbb
fisubr
jno
xor
sub
xchg
push
jp
mov
xor
inc
and
jo
xrelease
dec
or
ret
mov
pop
jbe
dec
jle
and
(bad)
test
sbb
or
dec
ins
ins
repz
push
nop
hlt
iret
inc
cli
push
nop
xchg
adc
test
dec
repz
or
mov
arpl
fisubr
pop
add
(bad)
push
rcr
(bad)
test
(bad)
lahf
mov
sahf
mov
cmp
(bad)
dec
add
mov
mov
cmp
mov
jmp
xchg
(bad)
retf
loope
push
popa
xor
scas
das
(bad)
in
pop
sub
xchg
and
push
inc
jl
mov
inc
test
xchg
mov
mov
and
std
retf
popa
fiadd
outs
out
xor
jmp
aam
aas
jle
sub
jge
pop
outs
int3
(bad)
push
neg
adc
(bad)
adc
push
pop
stos
jae
je
cmp
adc
leave
(bad)
loopne
lahf
inc
outs
sbb
push
fbld
fnstenv
das
sbb
sbb
pop
stos
or
and
sbb
jae
shl
and
pop
repz
jmp
popf
inc
mov
ror
pusha
sahf
mov
push
data16
fnstenv
lds
lea
push
fwait
xchg
add
xlat
ins
outs
adc
mov
sbb
rol
in
mov
adc
xlat
add
or
mov
shl
pop
pop
adc
xchg
ret
idiv
xchg
mov
xor
xor
in
pop
hlt
icebp
push
dec
jne
ror
not
sti
sub
repnz
mov
test
leave
aaa
out
pop
cmp
mov
sub
xchg
loop
icebp
fs
pushf
xor
shl
icebp
or
test
and
repz
mov
ja
and
xchg
mov
jmp
stos
(bad)
mov
sbb
scas
cwde
in
imul
daa
imul
sbb
jmp
adc
mov
arpl
fwait
cld
retf
cmp
push
cmp
retf
mov
xchg
jge
fwait
js
bnd
ss
std
sbb
mov
and
dec
mov
mov
xlat
xor
fwait
and
ja
inc
jnp
in
stos
sbb
inc
fimul
nop
scas
mov
push
fmul
mov
cmp
cmp
mov
in
test
sbb
add
mov
in
sub
movs
xlat
in
cld
sbb
dec
fistp
pop
pop
pop
xor
add
jmp
push
pop
ds
clc
add
lds
adc
cmp
es
movs
or
xor
shr
xor
adc
test
mov
jae
inc
cmp
push
sbb
push
les
mov
(bad)
(bad)
mov
nop
arpl
or
jne
out
(bad)
jns
dec
and
test
mov
loope
(bad)
pusha
shl
mov
or
xor
and
pop
dec
pop
sbb
aaa
mov
push
jg
jb
(bad)
jge
fcom
dec
fst
mov
cwde
mov
pop
std
stos
call
enter
pop
pop
xchg
in
pop
or
adc
and
mov
mov
mov
movs
jg
lea
add
icebp
inc
sub
dec
or
sub
xchg
(bad)
adc
ds
sar
jle
mov
mov
pop
cmps
cld
das
call
cmp
das
jno
mov
fist
jg
out
sub
mov
popf
pop
mov
pop
rol
(bad)
jge
in
or
and
mov
popf
add
xlat
push
dec
test
jbe
stos
or
mov
add
fstp
adc
mov
xor
dec
icebp
and
add
xor
js
and
xchg
cmps
push
enter
test
test
mov
sbb
ins
mov
xchg
clc
xchg
xchg
pushf
icebp
icebp
ja
xchg
(bad)
les
xchg
sub
clc
idiv
daa
outs
cmp
add
mov
mov
mov
daa
fimul
(bad)
les
leave
outs
adc
cs
fucom
(bad)
push
push
js
and
and
inc
adc
movs
xchg
pop
out
test
push
(bad)
pop
and
mov
in
mov
ret
ins
sub
push
movs
ror
xor
mov
cwde
sub
repz
mul
imul
ficomp
mov
arpl
sub
push
push
add
inc
mov
inc
fist
jmp
mov
fisubr
adc
aas
js
push
push
cmp
adc
sub
fwait
dec
inc
jge
leave
mov
gs
sub
pop
cld
or
push
aam
mov
or
jae
or
adc
and
pop
stos
pop
sbb
lea
mov
dec
xor
cmp
nop
les
fisttp
pop
jbe
scas
push
scas
(bad)
jl
fwait
mov
xchg
jb
cld
jg
fild
add
dec
aaa
repnz
dec
shl
movs
sbb
ds
sbb
dec
jg
mov
cmp
jbe
or
xchg
mov
out
dec
pmulhw
add
loopne
das
pop
dec
jno
cmp
sahf
xchg
xor
mov
pop
adc
push
mov
je
imul
into
or
xacquire
mov
fistp
xor
dec
xchg
mov
mov
mov
lods
lods
jmp
mov
loope
inc
les
mov
xor
jg
mov
add
cmp
xchg
mov
fucomi
(bad)
mov
test
stos
popa
cmp
dec
sti
mov
push
jmp
cli
adc
xchg
arpl
and
daa
xchg
ss
xchg
out
and
and
add
mov
psubsb
or
(bad)
or
jge
dec
arpl
adc
add
sbb
mov
pop
pop
push
inc
mov
mov
cmp
sti
call
fcmovnu
sub
fnsave
cs
mov
pop
(bad)
mov
repz
pop
dec
cmps
inc
xrstor
test
mov
bound
mov
adc
pop
pop
and
jne
cmp
popa
inc
pop
mov
sbb
cmps
neg
xor
add
js
and
mov
sar
nop
cmp
xchg
cmp
mov
add
les
mov
xchg
ret
arpl
push
fdivr
sub
pop
cmp
sbb
mov
push
push
push
mov
ret
xor
adc
or
cmp
push
and
test
push
xor
shl
fs
adc
mov
fistp
lods
fsub
inc
lea
mov
xchg
out
mov
dec
sub
push
add
xor
sub
test
xor
ins
iret
pusha
adc
repz
imul
mov
cdq
mov
in
jle
rcr
call
push
xor
loope
mov
fs
ds
adc
out
fstp
in
mov
es
sbb
pop
sbb
repnz
push
push
xchg
in
mov
(bad)
pop
ds
clc
adc
cmps
in
pop
pop
push
daa
movs
je
sbb
scas
fiadd
push
xor
sbb
pop
inc
mov
and
ret
xor
stc
popa
sbb
fiadd
cmp
or
and
sbb
out
inc
out
movs
fwait
add
push
or
aas
test
(bad)
movs
bound
fidivr
jge
lods
in
adc
sub
fbstp
and
add
in
(bad)
xlat
loopne
fmulp
movs
dec
inc
push
sbb
pop
pop
(bad)
out
call
jbe
jp
in
arpl
ja
jbe
pop
mov
imul
(bad)
mov
loope
sbb
push
pop
cwde
mov
pop
lds
sub
xchg
pusha
xchg
mov
mov
int
xchg
sbb
pop
sti
add
sahf
inc
mov
jmp
xlat
inc
or
mov
in
or
or
fcmovu
(bad)
jmp
lahf
inc
mov
cs
nop
(bad)
mov
ror
sub
icebp
in
jge
xor
or
cmp
pop
icebp
push
or
call
or
mov
mov
jg
inc
in
xor
xor
push
jge
or
pop
pushf
lods
sub
xor
push
xchg
pop
pop
mov
movs
frstor
jmp
retf
jns
inc
je
shl
inc
lods
or
pop
sub
fwait
xchg
test
lahf
push
mov
dec
pusha
test
ret
push
or
push
lea
test
popf
aam
mov
xchg
mov
mov
cmp
sub
xor
adc
dec
mov
mov
in
retf
loop
pop
mov
pop
xor
retf
dec
out
popf
test
cmp
jno
jae
rcl
js
in
sbb
sbb
adc
iret
mov
xchg
push
adc
test
fcom
adc
cmp
dec
icebp
fcomp
sbb
mul
and
push
ficomp
cmp
mov
lods
icebp
sti
jo
jmp
popf
iret
xor
stos
sub
jmp
xchg
adc
dec
sar
or
xlat
pop
mov
jle
jne
pop
jb
mov
test
out
pop
movs
sub
lea
jno
mov
xor
cmp
fwait
out
sbb
fucomip
mov
add
popf
inc
jae
ss
pop
push
cdq
aas
shl
les
or
outs
mov
cmp
(bad)
or
lahf
idiv
test
mov
or
xchg
xor
cmps
adc
mov
fisub
hlt
cmps
pextrw
pop
push
cwde
mov
(bad)
ins
add
js
scas
add
and
sub
jne
ins
shr
pop
(bad)
jb
repnz
loop
in
ja
cmps
push
push
pop
sar
scas
dec
shr
sub
ret
out
jg
inc
xchg
shl
xor
jno
mov
mov
leave
aaa
dec
jmp
push
xchg
xlat
xchg
cmp
cmps
mov
ret
xlat
imul
sbb
popf
lds
fisttp
cmps
mov
fwait
daa
fs
imul
xor
pop
in
inc
sbb
arpl
add
sti
test
fsubr
dec
jl
jb
lods
mov
std
cmp
xchg
sahf
cmc
shl
add
mov
mov
adc
push
out
and
jnp
shr
(bad)
jae
mov
enter
loope
jmp
mov
mov
neg
and
push
cli
push
adc
dec
add
(bad)
adc
sub
cwde
cmps
xor
sbb
push
jge
push
stos
cmps
jp
retf
inc
xchg
sbb
aaa
out
data16
mov
es
adc
dec
xor
into
adc
repz
mov
into
add
cwde
sub
xchg
imul
retf
int3
mov
repz
ins
jb
aas
xor
cmp
bound
outs
push
in
and
xchg
enter
call
pop
push
jnp
mov
lods
pop
xchg
(bad)
lds
xor
pop
jg
scas
mov
adc
aaa
data16
das
and
retf
add
(bad)
mov
fmul
fsubr
cs
stos
adc
dec
pop
mov
push
pop
stc
inc
ds
mov
adc
stos
popf
bound
sub
cmp
xchg
add
cwde
bound
mov
push
add
test
jno
xchg
jge
mov
retf
in
cmp
sub
pop
outs
sub
dec
lds
sub
call
clc
and
cmp
dec
jecxz
jge
and
aad
aas
movs
mov
jp
pop
mov
mov
or
jns
nop
pop
and
aaa
ss
movs
dec
adc
jnp
imul
sub
sub
adc
fisubr
imul
jns
push
addr16
mov
dec
mov
push
jp
xor
sbb
push
ret
or
addr16
shl
pop
sbb
(bad)
sti
in
lock
dec
jbe
in
push
ins
iret
ja
mov
xchg
pusha
push
xor
pop
in
and
out
mov
mov
imul
aam
fwait
imul
daa
popa
cwde
ins
mov
imul
add
aam
add
jmp
addr16
int3
add
int
(bad)
call
in
mov
add
loope
push
popf
int
mov
inc
xor
pop
mov
ret
mov
pop
and
xchg
(bad)
test
cmc
(bad)
aad
les
sub
sti
shr
dec
cmps
mov
inc
xlat
jecxz
inc
cmps
push
pop
add
adc
mov
dec
shl
nop
mov
cmp
mov
pop
jge
cwde
ds
mov
add
pop
rcr
movs
stos
adc
sbb
idiv
mov
adc
retf
ret
add
test
in
sub
popf
outs
call
jl
xchg
fxch
pop
adc
int
int3
loope
mov
pusha
pop
jle
xacquire
mov
sti
dec
js
adc
add
xchg
pop
nop
pop
xchg
popa
data16
leave
dec
add
adc
aad
sbb
xchg
mov
pop
lea
dec
std
dec
adc
mov
pusha
pop
and
pop
or
push
mov
dec
lahf
gs
push
sti
daa
dec
push
sub
aad
sub
xor
dec
pop
js
mov
mov
xchg
push
int3
xor
jae
adc
je
in
fstp
jbe
ins
and
pop
xchg
nop
mov
jle
push
push
scas
xlat
dec
dec
aam
xchg
jo
jno
mov
std
sub
push
push
retf
fild
jno
idiv
pop
dec
repnz
xor
mov
or
and
add
fsub
dec
test
adc
enter
push
cmps
jns
inc
fistp
jbe
sbb
dec
js
(bad)
push
les
adc
(bad)
fisttp
gs
cmc
sbb
cli
lock
push
add
stc
mov
and
mov
(bad)
pop
sbb
inc
mov
lock
xor
jge
dec
inc
in
xchg
jns
jge
ds
movs
jbe
sub
in
clc
and
retf
popa
repz
in
adc
xor
jl
push
mov
push
test
aaa
jns
test
in
mul
xchg
gs
loope
sub
add
je
cdq
and
ins
push
fnstenv
fdiv
jnp
jmp
lods
test
pop
pop
push
push
adc
mov
dec
push
cli
loopne
in
sbb
or
(bad)
cli
or
lock
psubsw
clc
and
std
mov
xchg
fnsave
or
sub
repnz
and
jne
ret
push
xlat
push
dec
pop
push
xchg
sbb
xchg
inc
ret
aas
pop
mov
pop
mov
jmp
cs
jecxz
and
and
mov
dec
sahf
movs
jmp
out
or
push
cmps
inc
dec
in
arpl
imul
es
mov
push
hlt
aaa
outs
cmps
pushf
push
fs
mov
push
in
jmp
cmp
or
bound
xor
inc
pop
mov
je
push
ss
push
out
pop
xor
mov
out
test
popa
lea
cld
adc
lea
dec
imul
dec
or
cld
push
out
jb
movs
xlat
rol
jge
outs
xchg
mov
stc
pop
mov
fucomi
dec
pop
pop
fldl2e
pop
pop
retf
inc
inc
mov
pop
cmp
pop
stc
scas
jno
sbb
mov
scas
je
push
lea
int
inc
push
sub
ins
mov
jmp
add
les
add
cdq
ror
movs
cmps
add
pop
retf
loop
outs
idiv
add
xchg
or
lahf
loope
mov
xchg
pop
movs
or
arpl
gs
iret
lods
sub
mov
bound
mov
and
fcom
fcom
add
pusha
push
cmc
repnz
outs
out
or
jmp
scas
pushf
cdq
mov
inc
ss
je
jle
add
ja
mov
and
mov
sub
sbb
test
ss
mov
mov
iret
jnp
mov
push
pop
fs
or
pop
push
fild
fucomp
jns
or
pop
int
aad
xchg
push
addr16
push
cwde
dec
inc
or
(bad)
xchg
cmp
push
hlt
(bad)
loopne
dec
or
dec
sub
lock
idiv
adc
mov
or
sub
sbb
inc
cs
out
pop
mov
aas
xchg
loope
cld
popa
jecxz
sbb
xchg
ins
xchg
mov
add
stos
cmc
jge
push
push
scas
fsubrp
daa
inc
or
cld
mov
jl
aad
mov
jmp
ins
push
adc
fisubr
mov
push
push
mov
enter
shl
jnp
adc
adc
cmp
push
pusha
inc
dec
test
retf
leave
idiv
sbb
call
cmc
lds
mov
mov
cmp
pusha
ret
mov
push
inc
loopne
add
out
mov
iret
ret
lds
xlat
icebp
xchg
jg
aad
call
pop
les
mov
(bad)
mov
(bad)
mov
push
dec
or
add
inc
mov
mov
repnz
pop
cmps
xchg
jp
retf
inc
fs
cli
ss
jmp
pminsw
aaa
xchg
sar
dec
push
shl
call
or
in
xchg
push
div
loopne
ret
loope
int
fdiv
sbb
and
enter
inc
mov
mov
jecxz
sub
retf
repnz
add
loope
nop
idiv
sub
ret
adc
push
adc
test
sbb
push
mov
sub
push
or
aam
jbe
rcl
ja
push
imul
xor
pop
mov
icebp
aad
jl
or
jne
pop
dec
inc
xor
push
xchg
pop
(bad)
mov
sbb
or
adc
push
test
or
mov
shld
movs
dec
ds
out
dec
or
or
xor
sbb
xchg
xor
fsubr
arpl
push
push
push
mov
pop
in
loop
cmp
ins
std
repz
stos
scas
addr16
daa
inc
pop
icebp
xor
xchg
sbb
in
int3
add
mov
nop
shl
dec
call
jp
add
retf
or
sub
cmp
loop
popf
es
xor
pop
das
rcl
and
and
(bad)
(bad)
cmps
scas
sub
add
inc
call
leave
xchg
push
cmp
sbb
fndisi(8087
xor
jo
fisttp
and
je
and
sahf
mov
js
into
lods
imul
push
fld
and
iret
add
add
jno
cmc
jae
ins
iret
pop
and
addr16
mov
jbe
add
push
fidivr
xchg
cmp
jno
or
pop
outs
enter
lea
or
xchg
fnsave
pop
adc
pushf
aas
test
xchg
push
xor
cdq
test
lods
add
sti
pop
sti
movs
das
dec
inc
imul
mov
sahf
data16
pusha
sub
imul
jmp
adc
sbb
xor
adc
shrd
jb
arpl
mov
movs
loop
ins
retf
pop
mov
dec
imul
ror
daa
in
pop
pop
std
jno
adc
add
scas
sahf
sbb
mov
jle
imul
addr16
push
test
dec
loop
(bad)
rol
sub
dec
dec
movs
xchg
mov
sub
add
xchg
xchg
pop
das
cmc
xchg
stos
jle
dec
mov
cmp
push
or
test
pop
jns
mov
aas
shl
fs
pop
neg
cs
mov
ins
push
pop
inc
pushf
test
not
pop
sub
retf
cli
lds
in
mov
mov
mov
gs
sbb
inc
sti
add
mov
pop
mov
or
popf
xchg
int
sbb
imul
(bad)
jne
(bad)
jo
bnd
inc
adc
fadd
or
inc
sbb
test
cs
push
adc
repz
sar
in
into
add
sbb
cmp
shl
xchg
add
push
cmp
fwait
cmp
cli
sbb
iret
push
push
stos
pop
or
inc
fimul
mov
sub
or
xchg
mov
pushf
iret
add
stos
xchg
adc
add
rcr
outs
test
pop
std
cmp
or
inc
sub
mov
ds
cmps
xchg
adc
cmp
std
adc
push
xor
xor
mov
and
sbb
repz
in
mov
test
jg
and
add
jle
ins
mov
jl
add
dec
cs
int
inc
std
call
push
jae
(bad)
jl
test
in
fs
adc
xor
inc
popf
jnp
xor
jg
sub
xor
xchg
mov
sub
arpl
adc
cmp
sbb
iret
popa
jnp
xchg
ja
fcos
(bad)
inc
push
jns
xchg
or
push
ja
(bad)
dec
push
sbb
lock
pop
jnp
jno
push
pop
jbe
cli
scas
not
mov
imul
sub
jle
sub
out
ss
push
rol
jl
mov
and
push
popf
cli
jno
neg
in
mov
xchg
sub
and
or
in
inc
cld
pop
loope
mov
pop
or
div
fcomp
mov
cmc
jge
out
adc
adc
pop
(bad)
popa
jo
(bad)
minps
cmp
add
(bad)
int3
repnz
outs
push
add
add
stos
nop
cmp
inc
cmp
clc
imul
xchg
repnz
pusha
pushf
add
vmread
dec
sbb
and
jge
mov
mov
xchg
pop
shl
xor
pop
addr16
div
ins
mul
cdq
cwde
(bad)
mov
cmp
repz
push
cmps
or
pop
into
loopne
pusha
int
jo
test
and
dec
xchg
or
cmp
call
mov
xor
add
fsubr
dec
fs
imul
clc
sbb
cwde
mov
ret
(bad)
pop
and
loop
repz
and
aad
stos
scas
lds
movups
fwait
dec
jnp
xlat
test
jo
mov
cmc
sbb
out
sub
mov
jle
xor
mov
in
jg
adc
push
aaa
jp
xor
push
xchg
and
test
push
dec
add
jp
fsub
(bad)
mov
or
shl
xchg
mov
movs
arpl
add
xchg
sub
outs
or
dec
mov
ins
jge
jmp
and
dec
lea
nop
retf
or
sub
int
cdq
push
cmp
pusha
outs
xchg
into
(bad)
push
fcom
mov
repz
cmps
lock
pop
stos
movs
inc
ret
sub
pop
retf
sbb
push
bswap
mov
sar
daa
ret
mul
in
leave
xor
xchg
xlat
mov
out
adc
or
xchg
mov
jne
mov
dec
push
push
ret
mov
fadd
push
push
or
movs
icebp
xchg
push
jmp
and
mov
fnstsw
and
pop
retf
data16
jno
stos
(bad)
shl
int3
aam
inc
adc
sub
push
mov
pop
and
lahf
js
pop
cwde
test
push
adc
shl
movs
sbb
mov
push
mov
push
pop
push
call
bound
je
xchg
call
pop
jmp
inc
jno
out
out
mov
mov
ins
push
iret
jg
mov
inc
cld
inc
into
cmps
jmp
pusha
iret
loop
fwait
push
(bad)
jb
aad
mov
cld
out
mov
pop
loop
xchg
mov
imul
mov
lods
rcr
ret
push
and
stos
ss
inc
clc
or
xor
(bad)
repz
cmps
ja
jl
push
(bad)
outs
daa
mul
repnz
mov
dec
xor
and
xor
cld
pop
xlat
ss
pushf
xchg
pop
fstp
aaa
sbb
pop
jns
in
mov
pop
sub
xchg
or
lea
std
fadd
dec
int3
out
imul
mov
adc
in
sbb
call
sub
mul
mov
adc
jmp
add
sub
xor
push
adc
pop
stos
xlat
xchg
fwait
scas
mov
int3
inc
adc
mov
les
dec
adc
pop
dec
push
movs
xchg
pop
imul
mov
sub
pop
sti
and
mov
dec
fild
stos
icebp
cmp
push
pop
cwde
jbe
int
sbb
inc
es
mov
retf
lds
jmp
mov
mov
imul
arpl
(bad)
sub
mov
mov
mov
xchg
ror
ret
xor
iret
sti
hlt
lods
dec
sub
cmps
mov
xchg
imul
das
shl
mov
dec
or
sbb
mov
(bad)
mov
popf
push
bound
sbb
fcmovb
int
jmp
aad
xlat
pusha
or
cmp
fnstcw
ror
sub
(bad)
dec
dec
outs
xchg
cmps
jo
mov
add
cmp
test
call
adc
in
push
cmp
or
out
xchg
nop
imul
dec
add
dec
push
(bad)
push
and
mov
jl
movs
ja
lds
push
pusha
jle
pushf
jge
jns
dec
fisub
fsubrp
add
add
sub
push
dec
std
xchg
mov
iret
pop
shl
add
push
fmulp
jo
adc
fcomp
int
mov
jmp
mov
add
call
pop
inc
fidivr
and
jnp
mul
sbb
or
cmps
iret
and
out
(bad)
dec
dec
pop
mov
or
je
pop
xchg
fcom
push
mov
cdq
inc
mov
ss
mov
bound
pusha
cmp
add
icebp
cmp
adc
iret
es
movs
jmp
mov
dec
mov
addr16
add
mov
int3
call
jg
xor
pop
sub
sub
jecxz
shl
ror
clc
and
pop
into
add
cmp
push
mov
nop
rcl
xor
(bad)
pusha
dec
mov
lsl
jne
dec
test
in
push
xchg
add
sub
pusha
and
mov
popf
xor
mov
adc
icebp
inc
test
retf
stc
out
sub
inc
repz
cmps
push
outs
mov
push
pusha
(bad)
push
test
jl
repz
sbb
inc
sahf
in
call
inc
pushf
sti
ss
sub
mov
inc
jmp
lahf
nop
mov
not
jbe
push
jo
inc
outs
std
les
loopne
cdq
xchg
add
or
lahf
mov
push
mov
aam
cmp
pop
push
daa
mov
cmps
cmp
dec
push
iret
test
xchg
mov
inc
mov
ror
adc
pop
pop
int3
xor
rcr
add
mov
iret
push
std
cmps
adc
add
mov
sbb
cmps
jmp
fdivp
mov
je
cs
pop
ret
xchg
add
sbb
sub
test
cli
and
int3
add
pop
pop
dec
rcr
out
xor
mov
jmp
inc
iret
(bad)
into
mov
js
lahf
cmp
add
xchg
mov
(bad)
outs
mov
lods
push
adc
sahf
mov
js
das
(bad)
cld
cwde
stos
mov
ficomp
jnp
arpl
add
and
push
mov
(bad)
pop
adc
jne
xor
retf
movs
retf
addr16
sub
sbb
mov
inc
pop
sub
xchg
cdq
mov
repnz
sbb
cwde
inc
mov
cmp
aas
pop
rcr
scas
data16
pop
inc
adc
push
mov
xchg
cwde
push
fdivr
pop
adc
or
xchg
pop
mov
inc
fsubr
xor
jns
ficomp
stc
cmp
push
sar
popa
(bad)
stos
jge
cwde
dec
push
and
and
outs
movs
pop
xchg
ret
xor
xchg
into
imul
cdq
dec
and
dec
cmp
push
clc
(bad)
cmp
adc
repz
push
mov
loope
or
push
jnp
pop
push
push
lea
lods
xchg
or
sbb
inc
pop
pop
mov
jg
stos
mov
sub
(bad)
in
data16
(bad)
jne
jp
adc
push
(bad)
push
mov
xchg
and
lods
and
loope
in
int
sbb
push
ret
dec
cli
inc
mov
loopne
std
in
xchg
mov
sub
in
dec
cmp
in
fisub
outs
or
cdq
sub
cli
sbb
and
pop
(bad)
xchg
fdivrp
cmp
loope
ret
push
cmps
dec
jge
fidiv
inc
pop
mov
sbb
mov
adc
loope
cmp
ds
push
and
imul
in
xor
sub
pushf
mov
je
rol
cmc
adc
inc
jns
dec
aas
add
and
add
sub
dec
loope
mov
push
cmp
or
push
xor
sub
mov
sub
dec
pop
ins
lahf
sbb
lea
addr16
in
shl
mov
add
retf
add
xor
jl
mov
sub
mov
cmp
cmp
lahf
mov
gs
icebp
scas
mov
scas
mov
ficom
leave
dec
or
and
jmp
jns
mov
cwde
clc
sahf
adc
push
sbb
inc
inc
nop
nop
popf
and
ins
test
adc
pop
cld
push
imul
dec
push
push
push
sub
xchg
addr16
stc
clc
cmc
push
not
pusha
pop
mov
test
clc
jbe
pop
scas
mov
jb
das
mov
pop
dec
dec
int
scas
movs
sub
inc
sub
(bad)
jmp
and
and
adc
fld
xchg
mov
pop
inc
mov
in
pop
xor
cmp
enter
frstor
movs
pop
or
pop
cmp
pop
xor
nop
loop
xor
in
lahf
sar
mov
loopne
lea
xchg
div
dec
add
movs
xchg
lea
std
cmp
sar
retf
adc
js
idiv
cmc
adc
cs
int
inc
hlt
shl
mov
loopne
shr
std
cli
cmp
ret
int3
out
in
popa
push
push
lock
scas
je
jecxz
and
inc
dec
call
outs
rcr
and
sbb
mov
cmp
es
mov
and
jg
and
adc
push
daa
mov
mov
(bad)
dec
fsubr
sbb
mov
push
fsubr
fst
stos
fbld
cmp
xor
call
sbb
imul
iret
mov
or
mov
pop
stos
lea
fld
adc
xor
pop
mov
push
cmp
mov
add
xor
push
push
(bad)
es
add
mov
(bad)
mov
(bad)
lds
mov
call
add
loope
retf
iret
and
adc
pop
fwait
mov
inc
out
inc
inc
pop
fdiv
and
and
sub
loope
gs
cli
es
(bad)
mov
pop
into
xor
cmps
and
adc
cmp
pop
(bad)
and
mov
or
add
xlat
sbb
pop
dec
push
std
cmp
cmp
add
imul
mov
pop
aas
test
cmp
inc
jmp
dec
xor
mov
xor
ret
scas
int
sbb
pop
test
add
add
lock
in
add
sub
stc
inc
dec
stos
sbb
out
lea
and
hlt
and
(bad)
gs
cs
mov
sar
lock
inc
push
and
retf
sub
cmp
outs
icebp
(bad)
dec
(bad)
push
ja
aad
jl
and
movs
inc
xchg
sbb
sbb
jmp
push
jnp
push
sub
dec
adc
jp
cmps
les
movs
ins
mov
cdq
mov
xchg
mov
stos
fwait
sub
enter
mov
inc
movs
ss
push
pop
sbb
push
into
push
xor
into
(bad)
aas
and
int
inc
cmp
mov
inc
or
(bad)
cmp
pop
adc
ss
repz
add
repnz
cmps
gs
cdq
hlt
xchg
jle
and
das
pop
cmp
inc
jmp
add
mov
mov
(bad)
push
adc
push
lea
cli
sub
xchg
mov
imul
call
(bad)
xor
dec
sbb
icebp
(bad)
adc
sbb
xchg
jnp
mov
adc
ror
ret
push
xchg
cmp
jbe
mov
add
fist
cs
cmp
add
push
sub
or
fisubr
iret
inc
aad
sub
add
sti
jle
add
mov
retf
or
pop
call
int3
ins
cmp
(bad)
jp
je
inc
and
sbb
adc
dec
jmp
jb
imul
in
sub
xchg
inc
pop
jnp
inc
out
pop
xchg
xor
pop
add
xchg
sub
repnz
popf
movs
dec
and
ds
mov
ret
test
cmp
and
jae
adc
jae
in
call
mov
call
aam
and
repz
dec
jle
push
mov
inc
push
cmps
sahf
lock
sti
cmp
push
inc
out
dec
in
xlat
lock
rol
mov
mov
stos
inc
icebp
sahf
add
and
sbb
dec
push
or
daa
scas
push
ds
iret
repnz
lock
jb
dec
pop
mov
sub
push
std
addr16
data16
imul
sbb
retf
mov
(bad)
nop
stos
dec
jnp
jne
adc
push
iret
fcmovnb
in
xor
sar
aaa
(bad)
cwde
jecxz
in
and
sbb
rol
push
dec
(bad)
into
mov
in
or
and
retf
aad
cwde
sbb
out
mov
inc
je
std
push
push
loop
retf
scas
mov
cmps
add
xchg
pop
xchg
push
(bad)
movs
shr
lahf
mov
das
pop
jl
xchg
fwait
push
push
bound
fbstp
sub
jl
or
cmps
xchg
sbb
stos
shr
xchg
mov
movs
mov
in
push
ins
fwait
push
mov
mov
and
lahf
leave
popa
sub
stos
jl
push
xor
mov
fwait
call
repnz
push
add
hlt
sahf
and
jo
jbe
mov
imul
ficomp
call
fstp
or
mov
cwde
enter
sub
mov
mov
inc
loope
shl
loope
(bad)
mov
pop
lahf
gs
cld
std
inc
cmp
ret
adc
add
out
std
data16
into
js
xor
xchg
mov
jb
mov
mov
pop
jne
shl
clc
shr
outs
repz
mov
mov
out
mov
loopne
push
jno
repz
aas
mov
or
xchg
xchg
(bad)
fstp
cmps
mov
popf
call
mov
cmps
jmp
ret
les
add
jge
add
fabs
popf
and
push
inc
cmp
pop
pop
out
sbb
or
pop
push
out
test
inc
aaa
imul
cmp
imul
sub
or
cmp
retf
aad
jmp
jnp
jo
push
xchg
mov
and
jo
aas
sar
push
retw
jo
jo
sub
jbe
int
push
(bad)
cmp
addr16
push
push
inc
inc
(bad)
aad
lahf
inc
addr16
stos
inc
call
call
not
pop
fsub
scas
jno
inc
pop
(bad)
jnp
out
and
scas
int
retf
add
cmp
lods
or
push
cmps
je
(bad)
fadd
sub
pop
(bad)
retf
inc
xchg
or
stos
xor
shl
ds
rep
push
sbb
sar
loope
dec
clc
dec
pop
mov
call
sbb
adc
in
(bad)
jnp
ins
sti
cmps
out
jmp
cmp
pusha
fist
mov
in
xlat
dec
or
inc
std
sub
imul
pop
test
stc
mov
xor
js
fisubr
mov
sbb
in
adc
shr
ins
loope
xchg
ret
jl
push
fcmovu
out
xchg
popf
(bad)
xchg
xchg
aaa
out
add
movs
jl
in
in
mov
ret
loope
ds
js
dec
push
xchg
sbb
sbb
mov
lea
loope
push
inc
in
popa
movs
lods
stc
leave
addr16
push
push
out
scas
int
sti
lea
xchg
ret
and
sbb
adc
mov
daa
mov
aas
or
inc
repnz
lds
(bad)
test
sbb
fcmovbe
jnp
out
std
inc
into
push
xchg
in
fsubr
stos
push
mov
pop
xor
sbb
jle
jne
test
cmp
(bad)
dec
leave
vmovapd
xchg
sbb
or
inc
data16
lods
pop
(bad)
out
shl
mov
or
mul
gs
push
push
fmul
adc
xchg
es
pop
xor
mov
mov
retf
movs
cmp
out
jge
in
test
cmps
xchg
fisubr
mov
aaa
cwde
cmps
nop
mov
inc
xlat
xchg
mov
and
imul
sub
jmp
shl
push
sub
jno
fbld
retf
jge
dec
adc
jmp
out
je
xor
je
sbb
adc
ss
fidiv
cmp
stos
sbb
sub
jmp
pop
loopne
dec
ins
xchg
xchg
add
xor
jg
mov
add
adc
dec
adc
mov
cmp
mov
test
xchg
or
sub
fiadd
(bad)
jbe
pushf
retf
test
in
cmp
jl
sbb
mov
jb
call
pop
(bad)
out
add
xchg
out
jg
shld
and
scas
cs
sub
mul
sbb
movs
lds
movs
mov
nop
pop
ins
jb
pop
call
push
cmp
mov
dec
or
in
das
or
jmp
cli
fdivr
in
call
sbb
sbb
adc
and
loope
test
int3
(bad)
inc
pop
popf
les
es
(bad)
adc
inc
dec
push
popf
outs
and
or
js
or
stos
jbe
mov
mov
iret
ret
add
(bad)
out
inc
mov
push
pushf
jecxz
ret
dec
inc
jb
xchg
jge
outs
dec
add
inc
sbb
sbb
push
(bad)
pop
in
dec
out
jge
adc
and
lock
rcr
jecxz
xlat
mov
mov
mov
(bad)
jno
jnp
pop
pushf
in
jnp
mov
inc
mov
fst
in
mov
stc
dec
cs
cwde
jbe
pop
push
fsubp
pop
and
aas
shr
outs
xlat
arpl
mov
(bad)
cld
dec
sbb
popa
adc
sub
mov
rol
call
aaa
in
fbld
jg
mov
inc
sbb
je
xchg
scas
(bad)
jmp
hlt
push
sbb
(bad)
fst
(bad)
cs
in
cdq
push
fdiv
addr16
mov
pop
and
xor
lods
adc
sub
arpl
ror
ss
fnstsw
leave
mov
or
(bad)
sti
movs
push
je
mov
out
loopne
lock
gs
loopne
dec
sub
mov
aaa
sbb
xor
fs
sbb
dec
dec
add
dec
movs
ins
cmp
xchg
sub
xor
cmps
mov
mov
mov
adc
mov
xor
test
pop
lods
sbb
mov
inc
iret
inc
jne
cld
mov
test
adc
xchg
sub
cmp
je
rep
sbb
cwde
xchg
(bad)
dec
adc
pop
pop
mov
fwait
ins
shr
ins
mov
daa
inc
xlat
(bad)
or
cmp
inc
ret
cmp
ins
push
mul
movs
fnstsw
sar
pop
ret
data16
rcl
pop
adc
(bad)
mov
in
sub
sub
mov
add
mov
mov
lods
jecxz
out
sti
clc
add
pop
(bad)
iret
xchg
sub
cld
mov
test
loopne
mov
pop
adc
pop
mov
jg
(bad)
cmp
dec
das
jno
stos
jbe
push
jg
pop
xchg
rol
jmp
xchg
push
jge
xor
sbb
push
push
xor
clc
movs
pop
cmp
out
xor
and
mov
cmp
rcl
das
mov
hlt
repnz
out
push
cmp
outs
dec
xor
jge
int
jne
outs
loop
pop
xchg
cmps
scas
in
dec
stos
into
dec
jbe
aaa
inc
adc
aaa
sub
call
mov
clc
aam
std
xchg
and
add
or
mov
fwait
sub
cli
jmp
iret
jns
int3
mov
mov
mov
enter
int3
fsubr
loope
mov
push
retf
adc
jp
(bad)
fist
mov
cmp
je
arpl
hlt
push
sahf
jle
jo
cs
gs
xchg
in
and
ffreep
push
outs
fcomp
or
inc
ins
mov
or
xchg
jmp
stos
sub
addr16
stos
dec
mov
rcl
enter
and
xor
inc
xor
enter
push
sahf
inc
mov
gs
sub
cmps
cwde
xchg
mov
lods
clc
inc
pop
cmp
je
and
jl
shl
pop
or
sbb
das
inc
pop
ficom
mov
fcomp
add
(bad)
arpl
call
arpl
and
jae
rcl
cmps
fild
out
cmps
adc
lock
add
push
fs
les
mov
or
push
imul
push
jnp
push
cli
adc
cmps
jp
sub
stos
and
test
cmp
mov
stc
neg
xchg
mov
aam
sbb
push
add
in
cli
rol
enter
popa
inc
pop
dec
(bad)
cli
or
das
cmp
push
daa
out
dec
pop
and
ds
jb
cmc
xor
in
sti
mov
push
xor
movsx
sub
sub
out
lock
movs
into
push
mov
push
dec
and
cwde
(bad)
fadd
and
cmps
xchg
fcmovu
jae
add
add
mov
xchg
inc
push
imul
cdq
jmp
retf
mov
inc
jmp
daa
cmp
sbb
push
jmp
sub
call
cmps
add
adc
scas
lods
push
in
int
sbb
loope
sub
ss
and
dec
fdivr
jo
cmp
ss
addr16
call
pop
das
in
dec
dec
mov
lods
out
xchg
jg
les
mov
(bad)
in
xor
retf
jmp
sub
das
sbb
cmps
mov
dec
stos
int3
js
scas
mov
push
sub
sahf
mov
sbb
or
(bad)
nop
dec
mov
cmp
(bad)
xchg
or
aad
int
jp
mov
xchg
sbb
jmp
jp
xor
push
jmp
test
scas
arpl
sti
inc
call
mov
jecxz
mov
mov
cmp
push
xchg
mov
sub
add
mov
(bad)
cmp
clc
dec
add
fadd
cld
mov
test
sar
inc
dec
sub
jecxz
adc
mov
lea
and
clc
add
push
adc
fld
xlat
jle
push
jnp
mov
std
jmp
mov
xchg
mov
dec
loop
jg
push
popa
pushf
out
xchg
stc
shl
dec
int
inc
cmps
inc
push
test
fist
mov
outs
cmc
mov
jns
lods
dec
cmp
jl
in
mov
les
retf
pop
ror
cmp
jg
sahf
outs
xor
pop
jmp
mov
retf
ror
lea
dec
pop
adc
or
or
aaa
mov
loop
pop
mov
vxorps
shr
pop
jge
add
dec
out
xor
ins
test
adc
and
dec
sahf
push
sub
call
add
icebp
loopne
les
jns
es
cld
adc
psubd
cdq
and
test
cmc
adc
jo
div
lds
repnz
addr16
cs
and
push
dec
jecxz
jnp
dec
inc
mov
mov
dec
pushf
jmp
xor
inc
sub
adc
call
sbb
jbe
stc
rcl
scas
das
and
xchg
push
aad
pushf
push
jns
mov
sbb
push
rcl
dec
bound
pop
imul
push
mov
imul
lods
xchg
scas
out
jb
pop
popf
jmp
in
mov
mov
push
pop
or
xor
xor
ret
cmp
xchg
dec
or
inc
add
sbb
add
push
push
outs
jns
hlt
and
in
rol
xchg
ja
(bad)
and
mov
mov
ja
popa
mov
jne
ds
dec
ja
(bad)
in
mov
outs
into
mov
es
sbb
xlat
xlat
(bad)
fsubr
ds
fwait
lods
lea
fistp
adc
push
pop
in
shr
out
and
js
and
js
out
aas
sbb
addr16
call
cmps
sbb
lods
pop
dec
inc
fld
aam
xchg
imul
(bad)
fucomi
scas
(bad)
and
add
cmps
ss
int3
js
xchg
push
jnp
pop
xchg
retf
or
fdiv
popa
cmp
imul
or
cmp
es
pop
and
and
jg
jne
loope
rol
out
xor
add
jbe
popf
dec
(bad)
lahf
movs
pop
pop
cmp
mov
adc
xor
cmp
and
lea
adc
push
xchg
rol
and
mov
fnsave
cmp
fmul
jnp
jnp
ins
xor
in
inc
adc
cli
(bad)
retf
in
icebp
sub
call
movs
call
pop
sub
mov
cwde
adc
nop
nop
iret
dec
lahf
xchg
adc
fsubrp
mov
sbb
jl
shl
lods
mov
sub
sbb
mov
jg
inc
sbb
dec
(bad)
sysexit
cmps
inc
(bad)
mov
push
dec
mov
sub
push
shl
pop
jne
sti
jo
push
leave
(bad)
imul
cmp
nop
ins
pop
mov
sub
mov
mov
mov
add
imul
pushf
sbb
ja
sub
ins
sbb
loop
cwde
adc
or
ret
sbb
jecxz
popa
jns
push
std
mov
xor
xor
in
(bad)
jp
pop
(bad)
sar
in
shl
rcr
xchg
ins
(bad)
fisub
test
not
push
outs
call
imul
aad
adc
neg
scas
cs
loopne
add
jno
shr
sbb
jecxz
mov
inc
mov
jnp
cmps
enter
out
sub
jg
pop
cmps
ror
pushf
xor
sub
xor
inc
jb
in
(bad)
mov
dec
pop
icebp
mov
push
jno
xor
out
mov
retf
xchg
pop
push
jne
mov
push
icebp
push
ffree
aam
jbe
inc
mov
or
mov
inc
push
xlat
imul
fidiv
aaa
loop
iret
mov
and
xchg
in
sub
sbb
dec
addr16
outs
jmp
dec
mov
test
fld
inc
ins
pop
(bad)
jmp
imul
jne
inc
push
mov
adc
in
jbe
push
add
popf
(bad)
dec
in
cmp
dec
ins
mov
cmp
mov
iret
lock
fcmovnbe
jp
dec
mov
mov
mov
and
jne
call
ret
(bad)
xor
cmp
aam
cmp
pop
jb
test
jnp
xchg
cmp
xor
jp
mov
mov
mov
nop
cmp
mov
inc
in
mov
push
out
jae
nop
das
sahf
xor
push
into
inc
cmp
out
cmp
jne
push
or
pop
jmp
mov
push
add
sbb
aad
int
(bad)
je
call
outs
pop
mov
mov
cmp
iret
les
scas
push
popf
stc
sbb
xor
rcl
call
mov
inc
and
call
cmp
adc
cwde
hlt
scas
ret
jb
mul
push
mov
call
(bad)
inc
jo
aam
fisttp
in
mov
or
pop
stos
xchg
rep
and
or
out
imul
sub
ror
sub
dec
and
bound
sar
add
aad
(bad)
scas
xchg
outs
leave
scas
lock
fstp
push
xchg
addr16
add
push
xchg
sub
xor
xor
popa
call
cmc
mov
inc
jno
add
out
aad
mov
jmp
inc
out
sbb
inc
inc
(bad)
cmp
(bad)
scas
jbe
add
mov
and
mov
or
jb
jle
jg
pop
jp
pop
lds
jae
dec
fstp
inc
mov
(bad)
retf
xchg
sbb
pop
mov
push
popf
inc
ins
or
inc
jno
inc
test
jnp
rcr
test
popf
push
sbb
push
cwde
cmp
fistp
and
ins
in
fistp
enter
aaa
sub
jmp
push
es
iret
int3
mov
inc
dec
add
addr16
cdq
inc
mov
push
mov
ins
push
sti
sahf
push
cs
rol
pop
mov
aam
mov
or
shl
mov
aam
and
popf
sar
repz
sbb
xor
xor
out
lods
hlt
pop
imul
data16
mov
mov
push
pop
mov
xchg
not
ss
les
mov
aad
mov
mov
inc
sti
fmul
out
pop
and
xor
xchg
mov
retf
mov
test
enter
aaa
cdq
icebp
stc
jg
pusha
adc
jne
mov
jns
dec
pop
pop
jmp
mov
outs
outs
and
mov
add
cmp
popf
jo
out
mov
cs
ss
aad
sti
rcl
into
xchg
mov
and
push
push
fwait
jg
cmp
out
and
or
sti
adc
and
mov
test
xchg
jp
dec
sbb
mov
or
jg
jnp
aam
add
jmp
aad
add
call
cmp
mov
pop
add
hlt
sbb
xor
clc
add
pop
jg
cld
mov
push
in
sub
jnp
fisttp
mov
push
jb
call
add
sti
les
in
addr16
and
push
xor
inc
movs
loopne
pop
inc
cmps
outs
adc
ret
retf
sti
mov
leave
push
pop
cmp
rcl
jmp
sub
fist
mov
and
cdq
and
cwde
add
push
pop
push
lods
pop
jmp
repz
dec
aaa
ins
shl
mov
adc
inc
imul
pop
or
(bad)
cmp
pop
jmp
inc
jnp
out
mov
and
(bad)
push
mov
lea
pop
xor
mov
repz
cmps
or
xchg
xchg
mov
sbb
mov
fnstcw
add
mov
and
adc
cmp
and
adc
or
adc
inc
inc
fnstsw
test
mov
xchg
aam
jae
jl
cmc
push
and
js
(bad)
mov
inc
mov
inc
or
and
mov
mov
sub
mov
shl
pop
ds
mov
pop
pop
mov
in
jge
call
stos
add
or
lds
call
jns
push
adc
jmp
xchg
sub
rcr
push
lods
iret
loop
fild
mov
fadd
jb
into
jp
mov
or
(bad)
retf
lock
mov
sbb
push
adc
sub
or
push
mov
push
(bad)
add
jl
pop
adc
xor
and
cmps
dec
sub
sbb
mov
jbe
icebp
test
xchg
push
call
sbb
jb
leave
ins
jmp
out
out
movs
in
(bad)
ins
ss
inc
nop
(bad)
mov
mov
dec
fwait
in
push
pop
scas
ja
mov
adc
inc
pop
jp
and
or
call
mov
loope
mov
jle
in
sbb
dec
mov
mov
add
icebp
nop
stc
and
mov
mov
sub
add
sub
jge
mov
and
jecxz
sbb
push
rcr
adc
xchg
fldcw
xor
jb
add
pop
xor
inc
in
call
mov
xor
cmp
or
out
stc
pusha
fsub
cmp
xchg
mov
sub
xor
cmp
mov
(bad)
into
inc
jo
jl
nop
data16
scas
in
pop
xor
in
js
ins
out
cdq
cli
cmps
push
push
sar
sub
aam
(bad)
mov
arpl
movs
out
ds
ret
nop
arpl
jbe
cmp
stc
(bad)
mov
stc
int
test
lds
adc
cmp
hlt
xchg
jle
and
mov
int3
dec
std
add
sbb
das
push
adc
inc
push
ret
push
or
adc
cmp
cdq
jmp
or
aad
jnp
xor
ds
xchg
popf
jmp
pop
mov
xlat
xchg
jl
mov
adc
cmp
push
fcmovnb
pop
mov
out
retf
into
cmp
addr16
std
test
std
pushf
mov
test
sbb
xlat
sub
add
push
sub
dec
in
and
mov
jns
push
or
ds
xchg
test
(bad)
rol
adc
or
fwait
sbb
pop
jle
clc
cmp
xor
xchg
push
lds
loopne
add
ret
fstp
push
xchg
aad
mov
jae
retf
call
sbb
cmp
push
push
and
sbb
ds
adc
imul
out
addr16
push
or
shl
inc
out
cmp
inc
cmpxchg
xor
movs
sbb
mov
inc
dec
adc
adc
outs
mov
pop
mov
cmp
mov
cmp
aam
jne
xchg
test
sti
js
aas
int3
jbe
aas
nop
mov
push
cmp
xor
mov
js
adc
inc
in
ss
nop
and
xlat
(bad)
jl
cmp
fdiv
mov
iret
aaa
push
imul
xchg
scas
das
repnz
scas
lock
cli
mov
ror
ds
aaa
adc
into
adc
lahf
ja
and
adc
xchg
bound
test
and
dec
scas
mov
push
sbb
repnz
mov
inc
sub
xchg
fwait
call
and
test
mov
cld
rcl
xlat
shr
mov
push
fldenv
imul
std
sub
sub
fs
retf
and
cmp
(bad)
pushf
xor
push
ins
mov
into
idiv
std
movs
sbb
pop
and
adc
outs
xchg
lahf
popf
xor
bound
popf
xchg
cli
xor
xor
mov
pop
in
fadd
mov
adc
adc
xchg
fimul
sub
(bad)
mov
push
cmp
xchg
sahf
add
mov
iret
sub
push
push
inc
int3
sub
or
pop
iret
ins
enter
into
fsub
xchg
mov
push
les
adc
adc
sbb
dec
fst
inc
es
ret
(bad)
ret
mov
mov
icebp
stc
in
adc
cmp
inc
push
pushf
push
or
mov
mov
pop
cmps
xor
cli
clc
cld
loop
cld
loopne
pop
push
mov
jno
out
pop
mov
retf
div
iret
mov
and
jp
stc
dec
or
stos
add
jae
ins
inc
cmp
les
xor
dec
xor
movs
inc
movs
fnstcw
aam
loope
(bad)
add
adc
movs
(bad)
cmp
fs
sub
call
push
mov
jmp
mov
or
lods
cdq
dec
test
in
push
iret
push
cmp
xor
sbb
xor
jns
mov
xchg
std
cwde
mov
xor
push
aad
int3
int3
lods
aad
jge
or
mov
test
inc
(bad)
sbb
xchg
push
inc
sub
cmc
popa
dec
cmps
fistp
cmp
and
iret
dec
test
mov
mov
or
add
movs
sbb
push
clc
mov
mov
dec
jg
pushf
inc
inc
xor
cmp
adc
nop
push
retf
cdq
aam
push
out
out
fadd
rol
aaa
or
retf
js
pushf
or
iret
shl
jle
sbb
mov
in
mov
jo
sub
fwait
jae
lea
or
dec
in
xor
rcl
push
jne
add
and
cld
das
xchg
cmp
push
pop
and
fidiv
jmp
ret
add
cmp
jl
inc
inc
icebp
mov
retf
jp
mov
movs
or
loop
and
xchg
dec
or
or
iret
fidiv
and
clc
mov
mov
(bad)
movs
loopne
mov
inc
in
xchg
lds
sbb
repnz
or
mov
movs
cmps
xchg
adc
dec
fwait
cmovno
mov
mov
push
into
mov
cmp
xchg
mov
call
dec
fs
outs
hlt
add
mov
test
aas
(bad)
or
gs
imul
push
and
sbb
loop
std
fdiv
mov
ins
std
or
movs
jmp
sub
jg
(bad)
(bad)
inc
jb
jmp
ins
mov
aas
dec
mov
cwde
ja
pop
into
add
shl
push
je
jg
(bad)
iret
dec
push
jp
jb
scas
inc
scas
push
popf
fwait
(bad)
retf
mov
out
cdq
sbb
je
retf
push
adc
test
xor
push
sbb
jp
arpl
mov
sar
mov
shr
bound
mov
push
lods
xor
cmp
dec
jb
and
lods
or
rol
inc
into
int
jecxz
jle
mov
mov
pop
fucomip
xchg
inc
push
adc
mov
xchg
nop
mov
inc
es
mov
mov
jnp
mov
sub
adc
popa
pop
in
jecxz
bound
div
call
test
jne
mov
cmp
mov
enter
cmp
xor
sbb
je
mov
mov
mov
call
sub
ret
aad
das
push
inc
retf
jne
jmp
shl
test
in
xchg
fnsave
sub
ins
sub
sahf
mov
dec
cmc
int3
retf
dec
adc
push
jecxz
retf
popa
add
pop
mov
and
jb
(bad)
cdq
bound
cwde
ins
outs
inc
inc
or
dec
cmps
dec
push
or
inc
js
js
sbb
sbb
inc
std
push
sub
cmp
and
lods
idiv
mov
mov
icebp
ins
scas
dec
and
xchg
loope
jne
cdq
adc
in
fist
sub
stos
out
icebp
inc
xor
retf
sahf
sbb
push
int
or
(bad)
push
jno
sub
lea
push
adc
mov
cli
push
pop
add
retf
stc
stos
mov
out
or
pop
push
pop
daa
mov
ins
ret
inc
mov
mov
jl
mov
jp
fldcw
jns
fld
ret
rcr
adc
in
sar
test
mov
lock
mov
cmc
pushf
nop
ins
imul
jp
mov
stos
adc
add
repz
lds
es
int3
mov
lea
aam
lahf
add
push
les
enter
mov
xchg
pop
push
mov
sbb
stos
ror
xor
add
test
dec
ins
sti
(bad)
mov
jnp
cmp
mov
shr
push
inc
push
push
ret
bswap
inc
mov
dec
outs
imul
out
push
mov
pop
mov
and
cs
icebp
shl
lock
les
dec
(bad)
(bad)
sub
pushf
sub
loop
xchg
enter
cmp
sahf
stos
xchg
retf
jae
and
into
push
and
push
arpl
mov
ret
es
mov
sub
movs
je
xchg
push
pop
inc
mov
hlt
adc
cmp
or
fwait
jo
mov
add
pop
loope
jmp
(bad)
xor
ficom
movs
add
ss
or
pop
cmp
repz
in
test
lods
jno
rol
cs
stc
jmp
jb
mov
loop
push
shl
(bad)
jecxz
sub
mov
add
mov
push
lock
inc
repnz
or
cmp
jns
sahf
inc
adc
xor
sar
xchg
cmp
mov
mov
sbb
js
and
mov
xchg
(bad)
in
jno
inc
lock
jns
(bad)
and
xchg
xor
repz
pop
and
xor
clc
jmp
mov
or
(bad)
test
mov
cwde
cmps
inc
in
arpl
sub
ins
or
les
sbb
aas
nop
jae
and
(bad)
cli
popa
cmp
push
push
loopne
mov
pusha
pop
pop
and
sub
in
cdq
les
inc
ss
add
pop
xchg
add
imul
sub
push
add
ss
lods
call
rcl
sub
cmp
jns
sti
push
pop
jnp
jl
test
jb
(bad)
sbb
inc
outs
adc
sub
jae
movs
mov
int3
dec
jne
cmp
(bad)
out
cmps
xchg
arpl
fsubr
pushf
inc
push
jnp
jo
cdq
mov
push
ret
sar
data16
call
cmp
stc
or
jmp
fwait
loope
lock
stc
pop
mov
call
jns
or
and
push
add
data16
xchg
aas
jge
and
xor
test
push
arpl
push
lds
or
xor
add
inc
(bad)
xchg
xchg
mov
xor
jl
pop
iret
cwde
and
add
dec
les
jno
dec
mov
cli
jmp
mov
xor
push
pop
mov
or
push
fisubr
fnstsw
sub
pop
fmulp
mov
or
sbb
(bad)
lods
jl
test
cmps
and
leave
cmp
idiv
push
push
and
push
data16
sti
js
js
and
test
jb
ret
pop
jne
cmp
push
cmp
rol
inc
retf
bound
mov
pop
xor
jmp
add
es
sbb
lods
and
and
dec
mov
paddb
(bad)
mov
cmp
shl
aaa
xor
scas
xor
mov
xor
mov
or
movs
adc
in
mov
fdivr
mov
cld
lods
push
clc
ins
sbb
jo
inc
outs
stc
fmulp
(bad)
xlat
in
retf
inc
cs
push
cmps
and
scas
nop
mov
inc
sub
sub
and
dec
test
cmp
test
repz
fwait
dec
or
out
pop
and
mov
mov
shl
dec
adc
xchg
es
xchg
sar
add
outs
and
shl
xchg
scas
inc
aad
mov
mov
sub
ret
into
aas
test
dec
stc
adc
ret
fcmovbe
sbb
mov
mov
into
inc
outs
dec
jecxz
enter
or
mov
jne
cld
popa
gs
mov
icebp
cdq
inc
inc
fstp
es
inc
nop
popa
test
dec
jne
arpl
outs
xchg
clc
shr
popa
aam
sub
mov
fs
xor
jo
xchg
mov
call
jg
push
and
and
fldcw
dec
call
push
popf
and
jns
mov
inc
mov
mov
xchg
mov
lods
jae
and
pop
leave
shr
cmp
push
in
jno
mov
jmp
push
mov
push
mov
push
movs
bound
popf
inc
je
cdq
mov
pushf
or
not
cmps
xor
and
inc
gs
in
jns
jnp
sahf
mov
xor
addr16
push
inc
xlat
dec
xchg
cmp
icebp
adc
hlt
mov
cmp
mov
sbb
jne
das
imul
jecxz
fld
pop
lahf
daa
lsl
dec
jl
in
jmp
and
mov
cld
scas
adc
stos
push
cmps
call
mov
xor
xor
mov
loope
dec
mov
pop
ins
jae
iret
ins
add
pushf
xor
ss
test
jne
inc
call
sub
add
push
mov
out
or
mov
rcl
jae
inc
pop
call
jb
mov
lods
popa
pop
je
ins
cmp
cmps
stos
mov
data16
test
nop
movs
out
pop
ins
push
adc
push
cmp
pop
arpl
ja
cmp
(bad)
sbb
jbe
push
ds
jp
sub
int3
xchg
sub
or
mov
mov
outs
mov
and
js
fwait
push
pop
add
adc
call
movs
dec
adc
sti
xchg
xchg
fstp
test
fmulp
mov
int3
and
std
jp
ins
lea
sbb
sbb
lods
dec
fwait
out
movs
jmp
sub
cld
sti
mov
sti
fs
xchg
fldcw
sub
push
push
dec
in
jl
jl
pop
sub
js
dec
adc
(bad)
cld
leave
repz
das
cmps
sub
or
adc
ins
int3
jne
ret
mov
push
std
xchg
ret
mov
and
or
clc
shl
inc
adc
ret
xchg
stos
jmp
jnp
sbb
cmp
adc
addr16
aad
and
call
and
test
fstp
data16
push
cmps
out
sub
mov
add
xchg
(bad)
(bad)
push
ins
and
inc
cld
pop
test
xor
xchg
(bad)
adc
xor
imul
retf
xchg
cmps
sbb
dec
test
loopne
loop
push
or
ror
aam
push
fdivr
adc
mov
pop
sub
xchg
push
mov
or
scas
adc
repz
pop
stos
aad
test
xlat
popa
out
arpl
cmp
jg
sbb
dec
ja
test
ds
in
dec
sub
sub
cmc
jle
pop
js
mov
or
jnp
pop
xor
js
xchg
int3
sub
or
cdq
pop
(bad)
fdivr
cmp
in
cli
sbb
int3
leave
cld
sub
shr
and
cmp
cld
int3
jg
in
test
out
enter
push
or
adc
(bad)
shl
xchg
js
adc
jle
shl
and
ret
scas
shl
mov
mov
xor
arpl
out
jae
fisttp
xchg
ret
(bad)
int3
pop
es
pop
jle
ss
mov
sbb
call
cmp
fdiv
lahf
pushf
leave
xor
or
movs
or
jae
add
mov
inc
pop
(bad)
out
pop
stos
push
dec
in
jae
dec
and
mov
inc
pop
rol
adc
imul
sbb
jle
mov
shl
outs
popf
sub
xor
push
nop
in
call
sub
(bad)
repz
push
inc
neg
adc
xchg
xchg
sub
push
(bad)
clc
or
sti
mov
mov
dec
adc
mov
js
cmps
jnp
xor
adc
(bad)
popf
and
ficom
add
add
ss
push
mov
or
xchg
cld
or
icebp
out
mov
ja
ins
jle
cmp
(bad)
sub
inc
cmps
out
out
adc
imul
jmp
mov
sbb
pop
shl
lods
sar
dec
cmps
cmp
push
(bad)
outs
test
int
(bad)
mov
dec
push
push
(bad)
fst
cmps
sub
dec
mov
push
daa
out
daa
mov
add
mov
pop
mov
add
fnstsw
das
mov
add
inc
pop
and
std
cmp
add
fbstp
jmp
je
pop
sub
enter
sub
jge
mov
rcr
fst
xor
cdq
cld
mov
jle
aaa
(bad)
fcomp
loop
sbb
scas
leave
sbb
bound
jge
fsub
jno
in
icebp
xchg
mov
inc
test
lds
clc
test
mov
mov
mov
inc
jb
jae
sar
fsubp
adc
jl
les
test
mov
scas
push
ins
sbb
bound
inc
out
mov
mov
pop
push
outs
pop
or
sbb
push
sub
xchg
outs
jecxz
or
xchg
sahf
mov
or
xchg
adc
add
imul
add
daa
add
jne
mov
mov
sub
pop
mov
arpl
in
dec
push
or
dec
repnz
leave
sar
push
pop
inc
out
movs
xlat
adc
aam
jecxz
call
fimul
push
pop
movs
aam
cmc
lods
push
fldenv
lods
adc
mov
(bad)
aad
ret
sub
bound
push
ja
leave
lea
movs
(bad)
dec
push
loop
fdivr
mov
into
sub
int3
popf
addr16
imul
ret
aam
rcr
jns
cmc
int3
jb
arpl
add
xchg
mov
adc
rcl
pop
xchg
call
neg
addr16
mov
jae
imul
enter
add
out
mov
call
(bad)
mov
out
movs
ds
xor
sub
push
loope
inc
pop
or
cmp
hlt
jge
arpl
out
fistp
mov
mov
les
test
test
(bad)
cmp
test
or
add
cs
pop
inc
and
jmp
dec
sahf
icebp
outs
aaa
(bad)
pushf
sahf
shl
es
sbb
clc
ss
dec
mov
dec
rcr
inc
inc
or
sub
push
add
pusha
data16
ins
ficom
dec
jle
push
mov
xor
aas
mov
mov
test
pop
xchg
movs
mov
mov
fidiv
add
into
xchg
repnz
jnp
out
in
aaa
cmc
rcl
push
adc
or
mov
repnz
adc
xchg
je
shl
sub
xor
sub
cmps
inc
jns
pusha
ror
cld
fldcw
mov
das
jg
dec
je
pop
inc
or
xchg
push
add
and
bound
push
cmc
jne
add
stos
mov
mov
outs
mov
(bad)
fcomi
cmp
jmp
mov
sbb
data16
cmps
add
fdiv
aas
adc
and
cli
xchg
mov
dec
lds
sub
cwde
clc
pop
or
adc
cmp
in
fwait
mov
call
lahf
shl
aaa
mov
mov
xchg
pusha
fisttp
out
ja
mov
xlat
sbb
mov
movs
daa
fdivr
stos
movs
shr
fild
stos
pop
and
mov
cmp
lahf
push
push
xor
mov
cmp
add
rol
fs
pop
lahf
aaa
sahf
sub
retf
jno
out
mov
mov
sahf
pop
cmps
(bad)
cwde
jae
mov
cmp
jmp
push
fld
inc
aam
dec
mov
push
add
and
fsubr
add
jmp
test
mov
mov
push
test
out
movs
mov
fisttp
ret
add
fimul
fsub
pop
mov
push
outs
sbb
lods
inc
cmc
lods
mov
cdq
sbb
jo
or
xchg
cwde
popa
frstor
and
retf
std
sbb
shr
xor
sub
push
sbb
jae
xchg
or
or
pusha
or
mov
cmc
mov
mov
cwde
std
add
in
mov
mov
cmp
daa
ins
sbb
mov
addr16
movs
outs
imul
pop
or
stc
not
stos
je
out
lea
(bad)
pop
dec
mov
and
xor
push
mov
or
mov
mov
mov
es
sub
inc
je
jns
dec
retf
add
push
out
sahf
mov
rcr
ret
mov
xor
or
jno
dec
in
mov
scas
pop
sar
push
or
inc
in
mov
inc
shr
out
adc
mov
pop
inc
loope
mov
and
cmp
pminub
xchg
je
into
mov
cmps
dec
stos
mov
mov
jecxz
mov
cmp
aam
or
stos
stos
cmp
outs
add
dec
jne
add
and
std
(bad)
cmp
popf
inc
sbb
pop
sbb
bnd
sub
dec
stos
add
sub
es
fwait
aam
out
fadd
pushf
xor
ds
and
std
add
xchg
and
sub
pop
jmp
int3
xor
shl
sbb
add
push
jle
or
sub
sbb
dec
fcmovnu
nop
jmp
fiadd
xchg
mov
mov
jno
aaa
js
scas
jge
pop
mov
sub
or
mov
aad
push
add
mov
pop
pop
or
fmulp
pusha
push
clc
jne
repnz
cmc
sahf
pushf
push
or
test
mov
sub
mov
ds
xlat
push
jo
sbb
cmp
pop
jle
scas
out
inc
fstp
adc
jge
es
and
xchg
adc
jle
add
jo
inc
xor
movs
dec
pop
mov
pusha
mov
in
push
mov
mov
fsubr
mov
dec
ss
lods
inc
cmc
and
inc
xchg
popf
xor
pop
mov
das
mov
sub
in
std
sub
ins
pop
ror
cmp
and
sbb
push
out
fisttp
push
cld
mov
mov
addr16
xlat
adc
dec
pop
retf
and
jns
pop
inc
test
jne
out
and
xchg
dec
cmp
add
xchg
sub
jmp
pusha
pop
sub
dec
jmp
call
into
sub
cs
scas
pop
jmp
adc
mov
jle
fwait
iret
adc
mov
jne
cdq
and
adc
es
mov
icebp
push
div
sub
jns
or
daa
movs
sbb
aad
sti
push
popa
aaa
retf
aas
retf
cwde
ja
xor
jl
out
das
ins
xchg
sbb
mov
int3
add
inc
stos
nop
pop
jmp
(bad)
mov
push
outs
ds
add
dec
gs
sub
in
or
pop
clc
mov
dec
jo
jmp
push
out
mov
fisttp
rol
mov
dec
mov
xchg
hlt
or
xchg
add
out
inc
cmp
xchg
adc
ret
inc
pushf
lods
push
rcl
call
cld
test
and
mov
mov
test
jg
mov
dec
xchg
and
or
test
scas
fs
iret
mov
lods
dec
retf
inc
and
(bad)
out
test
fst
imul
pop
daa
lock
xchg
push
leave
hlt
(bad)
shl
push
xchg
movs
iret
inc
in
push
retf
inc
push
dec
aad
add
sti
mov
inc
mov
in
ins
mov
and
jbe
loop
sub
repnz
clc
stc
inc
sbb
cmp
lock
cdq
mov
popf
stos
sti
mov
jl
mov
loop
fldcw
stos
retf
or
das
xor
mov
jno
(bad)
push
xor
lds
sub
(bad)
fcom
xor
dec
xchg
push
scas
dec
out
jb
out
and
loope
movs
int
aad
rol
xchg
gs
sbb
add
mov
mul
xor
pop
dec
inc
loop
movs
xor
xor
or
dec
lods
pop
xor
loopne
mov
xchg
pushf
jae
sbb
mov
sar
(bad)
sti
in
loopne
mov
imul
cmp
div
mul
mov
mov
xlat
and
mov
les
retf
mov
dec
cdq
cmp
cmps
xchg
cmp
pushf
xchg
scas
jmp
fucomi
xchg
fidivr
gs
pop
mov
and
call
push
shl
hlt
test
dec
aas
js
jl
adc
into
sub
lahf
pop
xchg
mov
xor
or
cdq
imul
clc
mov
imul
and
retf
call
aad
xchg
lock
adc
jg
add
mov
fldcw
push
add
retf
(bad)
mov
pop
(bad)
xlat
test
into
mov
stos
aam
jecxz
jno
jl
gs
imul
add
push
aaa
xor
movs
or
sub
shr
fstp
test
push
mov
into
push
push
ins
xor
and
cmc
ss
xor
xor
and
inc
add
(bad)
and
dec
jno
mov
push
cmps
push
mov
cmp
dec
cld
jmp
add
fadd
fs
bound
retf
movs
jg
jae
sbb
fwait
mov
sbb
loope
cmp
mov
sub
adc
jo
mov
cmp
sbb
adc
jmp
call
cmp
jmp
lock
(bad)
xor
stc
mov
rcr
mov
ret
cli
inc
jl
cmp
sbb
lds
push
or
mov
push
jnp
push
jo
sbb
cmc
jecxz
or
mov
cmps
dec
dec
inc
pop
ins
ss
shl
(bad)
push
das
mov
cmps
fistp
fdivr
inc
fisttp
aas
xchg
xchg
movs
and
adc
arpl
push
or
mov
cs
sbb
xor
lds
dec
push
out
push
ins
push
and
jnp
scas
jne
jb
loope
pop
adc
ds
inc
aaa
cmp
stos
adc
xor
adc
sub
imul
test
cld
add
adc
xor
sub
dec
xor
xor
test
pop
popa
in
loope
aad
fs
jb
js
ds
pop
in
xor
movs
pop
push
inc
xchg
pop
aas
cmp
or
push
fcom
xor
clc
into
adc
xor
rol
mov
dec
adc
jecxz
cwde
imul
mov
xchg
icebp
rcl
fisttp
inc
shl
repz
fwait
or
pop
adc
mov
in
(bad)
pop
imul
or
fsub
add
in
shl
shl
and
(bad)
mov
lock
daa
jg
pop
loopne
xchg
scas
cs
(bad)
pop
jnp
dec
int3
shl
adc
add
mov
inc
sub
mov
or
daa
mov
in
dec
call
ins
xchg
mov
leave
cmc
scas
les
jp
mov
js
movs
aam
or
test
mov
scas
push
jl
xchg
hlt
pop
mov
push
movs
lahf
fisubr
sti
jb
cdq
mov
and
aam
mov
mov
add
fxch
sub
das
shl
repz
cs
mov
mov
mov
repnz
adc
dec
mov
movs
repz
jl
dec
call
fwait
sbb
xchg
shr
fimul
push
pusha
addr16
mov
ficomp
dec
aaa
push
popf
fidiv
popf
jbe
jl
pop
ret
jp
out
push
js
sub
xor
xor
cmps
cmps
ret
pop
pusha
es
push
gs
fistp
jmp
mov
cmp
push
xchg
in
test
inc
popf
les
jecxz
ja
loope
leave
xor
jecxz
dec
xor
ins
jecxz
test
cmp
daa
out
std
jnp
aam
idiv
sahf
bswap
add
xchg
arpl
xchg
mul
call
dec
in
jno
cwde
ret
mov
ds
xor
enter
aad
inc
stos
icebp
pop
popf
outs
and
xor
xor
cmp
lock
jmp
xor
outs
pop
pop
jmp
xlat
loop
ror
push
imul
das
test
xor
loope
into
sub
icebp
int3
fidivr
ja
(bad)
and
jecxz
mov
inc
and
xor
jp
mov
out
and
and
pusha
pop
in
xchg
std
hlt
jl
add
pop
or
lds
lods
mov
(bad)
fdiv
jp
sahf
je
cmp
dec
pop
sahf
xchg
clc
cmp
pop
cmp
adc
add
aaa
lahf
pop
mov
div
clc
and
and
xor
clc
xlat
dec
pop
mov
rol
test
xor
or
dec
imul
cmp
sub
sub
stos
or
adc
pop
in
stc
outs
clc
and
xlat
mov
push
mov
iret
lahf
inc
sub
call
xchg
aad
mov
or
in
popa
jl
rep
xor
xor
adc
jb
and
xchg
shr
shl
dec
mov
(bad)
inc
and
push
out
loope
jge
mov
jl
fcomip
xor
stc
jae
inc
xchg
dec
lods
adc
cmp
test
adc
test
jb
add
add
data16
cdq
mov
cli
data16
fdivr
mov
cmps
xlat
stos
imul
popf
aas
cmp
xor
mov
add
push
mov
ret
mov
cmps
xchg
cwde
add
mov
ror
xchg
and
sbb
sub
cmp
xor
sub
shl
push
aam
cmp
jae
dec
adc
add
(bad)
fst
inc
mov
sbb
dec
fbld
lods
loop
hlt
adc
mov
push
xchg
(bad)
adc
mov
scas
arpl
jmp
in
mov
jmp
push
test
lock
adc
lea
sti
cli
jae
xor
aam
mov
pop
or
test
xor
mov
jb
or
gs
push
dec
sbb
mov
xor
sbb
sub
adc
mov
dec
test
int3
bound
jp
fwait
add
mov
xchg
lods
pop
push
hlt
aad
cmp
adc
cmp
add
out
out
xchg
loopne
mov
jp
mov
or
dec
xor
les
jp
popa
test
ret
call
dec
das
retf
mov
(bad)
repz
out
in
sti
fst
pusha
idiv
outs
nop
retf
aad
push
ret
adc
vpaddd
aas
iret
push
imul
sub
cld
dec
imul
push
sbb
frstor
stos
xchg
popf
cmovbe
mov
dec
test
push
push
fnsave
mov
mov
rcl
cmc
in
shr
push
adc
dec
(bad)
inc
add
sub
hlt
sbb
js
pop
jb
mov
mov
cmc
mov
test
call
bound
hlt
cmp
clc
clc
push
jbe
mov
bound
movs
mov
mov
inc
push
popa
push
(bad)
cmovl
mov
mov
mov
aam
std
mov
xchg
popa
pop
lock
les
sub
xchg
daa
cmp
add
test
shr
in
inc
nop
jge
retf
in
mov
dec
ins
mov
inc
outs
out
rcl
scas
mov
sub
lahf
(bad)
idiv
shl
push
push
jmp
adc
das
popf
lds
dec
(bad)
(bad)
pop
lods
mov
xchg
fstp
scas
adc
shl
jecxz
jb
pop
mov
stc
mov
inc
jg
jo
xor
addr16
mov
pop
add
jmp
std
pop
scas
mov
shl
leave
xchg
cmp
sbb
inc
icebp
mov
sar
cmp
scas
cmp
(bad)
out
xchg
push
xchg
loope
call
push
push
mov
lahf
cmp
(bad)
rcl
jnp
(bad)
sub
add
adc
pop
mov
cli
popf
dec
cmp
icebp
sbb
in
dec
jp
fild
out
xchg
mov
int
fcom
push
das
pop
xor
jmp
xchg
add
test
jl
add
dec
test
mov
adc
mov
lahf
dec
lods
mov
stos
cmc
mov
sub
add
push
jmp
mov
je
sbb
rol
adc
shl
fstp
ss
in
pop
pop
push
rcr
shl
leave
stos
es
inc
and
inc
xor
sub
scas
or
jle
mov
pop
loopne
jno
push
mov
xchg
dec
imul
in
scas
ins
lds
xor
inc
or
push
sti
push
call
or
push
and
in
test
cmps
push
lahf
jecxz
out
mov
mov
test
pop
lods
adc
adc
cmps
jecxz
mov
retf
mov
mov
or
iret
ror
(bad)
aad
sub
int3
cmc
std
sub
pop
push
xchg
test
call
mov
int3
lods
push
sub
mov
mov
mov
adc
leave
out
fistp
or
paddsb
xchg
or
repz
push
add
and
out
fild
mov
mov
ins
iret
rol
xor
scas
call
dec
xchg
ror
jg
popf
dec
fiadd
shr
jl
xlat
pop
xchg
mov
add
pop
xchg
push
(bad)
imul
nop
and
inc
jnp
stc
mov
and
mov
fsub
inc
pop
pop
cli
loopne
xor
dec
mov
loop
add
push
ficomp
mov
xor
ins
or
int
jl
js
push
fstp
pushf
mov
or
pop
fdivr
loopne
ds
xchg
mov
popf
sbb
and
jnp
inc
aam
or
in
adc
add
lods
or
push
ds
int
push
sti
fdiv
sub
push
dec
repnz
or
out
stos
fstp
inc
sub
sub
inc
inc
fisubr
pop
pusha
fwait
push
clc
call
sub
sbb
ins
mov
outs
xchg
retf
mov
call
fist
jnp
sbb
push
xchg
and
outs
ret
mov
push
dec
xchg
sub
inc
repz
gs
jb
stc
adc
push
xchg
mov
mov
bound
fld
es
dec
icebp
test
jp
test
pop
test
xor
mov
sub
jb
jbe
mov
outs
and
out
jns
in
nop
adc
push
mov
jno
mov
aaa
push
xor
std
xor
push
dec
cmp
(bad)
call
xlat
xchg
mov
repz
rcl
mov
dec
movs
pop
push
popa
mov
inc
jmp
lods
add
inc
icebp
je
cld
push
lods
sar
in
sbb
aas
stos
push
(bad)
mov
shl
pushf
cmp
mov
cwde
sub
dec
pop
push
clc
in
out
xlat
sti
mov
add
loope
lock
mov
add
and
cdq
inc
inc
loopne
push
test
(bad)
fistp
sti
sub
cmp
sahf
xor
out
mov
mov
inc
loop
push
pop
mov
test
outs
mov
adc
jne
jge
repnz
bound
dec
xor
inc
shl
aaa
cmp
mov
loop
or
xor
pop
jmp
mov
outs
imul
mov
mov
jo
xchg
or
bnd
mov
in
leave
enter
add
in
cmp
pop
cmc
add
loop
xlat
hlt
add
pop
cmp
mov
or
test
fst
or
cmp
dec
sbb
pop
inc
jecxz
sub
mov
bound
iret
xchg
cmovge
std
ins
sub
popf
pushf
xchg
(bad)
test
pop
je
and
scas
ret
aam
outs
mov
lds
mov
ins
stos
int3
mov
stos
daa
mov
jnp
mov
sub
fistp
inc
sti
cmp
adc
dec
push
adc
mov
adc
push
xchg
mov
nop
ret
call
sar
imul
jp
mov
mov
inc
and
add
and
repz
sub
jb
mov
sbb
repz
cwde
xchg
add
sti
rol
jecxz
jns
jo
ret
jno
sub
test
jge
das
loope
xor
icebp
push
stc
or
mov
adc
movq
bound
stc
call
in
inc
adc
gs
sahf
push
outs
enter
addr16
test
out
ja
push
and
vmovups
jge
mov
retf
pop
cmp
pushf
xor
mov
inc
ret
add
pop
mov
jo
adc
dec
retf
jge
mov
mov
icebp
sbb
xchg
push
xor
sub
cmp
stc
pop
mov
ins
pop
pop
(bad)
xchg
pop
cs
push
ret
jmp
push
ins
mov
add
mov
jmp
sub
push
dec
inc
and
jmp
test
in
xor
shr
mov
mov
int
mov
jp
mov
sbb
loop
retf
or
rcl
in
std
test
mov
shl
push
jg
in
pop
cmp
jle
xor
or
pop
cmc
ins
jp
bnd
push
nop
xchg
icebp
or
test
add
mov
sub
cwde
adc
arpl
xchg
inc
push
and
lahf
fadd
sbb
pop
and
loop
push
dec
scas
and
lods
aas
jg
add
jns
aaa
test
sbb
test
dec
sub
xchg
retf
rol
jmp
cld
lahf
icebp
inc
mov
(bad)
mov
into
add
sub
jmp
fdiv
adc
in
je
pushf
in
std
call
stos
mov
daa
inc
add
dec
adc
and
scas
shl
xor
in
pop
add
retf
lods
xchg
and
call
xor
pop
push
out
and
cld
loopne
lods
in
push
add
popa
lods
scas
imul
xor
push
out
xchg
in
inc
dec
repz
sar
mov
lods
jp
data16
retf
cld
adc
jg
mov
imul
or
mov
mov
out
mov
mov
(bad)
adc
sbb
mov
jne
stc
push
shl
sub
pop
jnp
pop
xlat
inc
mov
push
sub
jns
test
cmp
xor
outs
dec
pop
cli
mov
xor
test
add
mov
test
xor
fist
loop
push
ss
pop
push
retf
mov
lods
inc
dec
shl
mov
test
sbb
rep
inc
mov
(bad)
push
pop
fld
ss
add
jb
jp
call
push
dec
stos
arpl
mov
mov
(bad)
sbb
into
cmp
into
data16
in
aad
mov
es
pop
sbb
push
adc
lea
sahf
jnp
fdivr
mov
jo
aas
les
pop
jg
xchg
dec
xor
icebp
call
push
xor
jge
pop
sti
mov
hlt
add
jns
sahf
ret
scas
mov
pop
or
enter
ret
adc
mov
pop
inc
jbe
aaa
clc
neg
sbb
pop
or
int3
push
pop
push
inc
dec
rcr
and
pop
shl
enter
cmps
scas
add
jg
dec
or
pop
retf
aam
mov
shl
retf
(bad)
adc
popa
addr16
jns
cmp
ins
or
dec
mov
jmp
shl
shl
mov
call
inc
retf
dec
jl
xor
das
imul
js
fstp
sub
ss
(bad)
cmp
sub
xor
add
(bad)
sub
push
psrlq
jne
dec
daa
xchg
mov
xchg
int3
in
jno
ins
push
cmc
sbb
(bad)
xchg
(bad)
jg
and
in
mov
cld
cmp
fadd
or
cmp
jo
enter
jbe
dec
and
push
fs
fmul
lds
rcl
cmp
add
les
push
cmp
in
test
cmp
add
xchg
in
mov
in
sub
cmp
xchg
ds
ret
mov
mov
shl
gs
cdq
(bad)
mov
pop
push
and
pop
mov
jle
xchg
nop
jg
aad
bnd
popa
loop
leave
std
aad
push
mov
xchg
int3
js
lea
adc
add
test
inc
call
add
retf
lds
jmp
mov
xor
icebp
sub
sbb
cmp
idiv
aam
mov
stos
test
mov
arpl
cmp
push
(bad)
mov
stos
push
sti
div
hlt
mov
fs
xlat
cld
stc
mov
xchg
imul
(bad)
in
cmp
xchg
sub
scas
sub
pop
cmps
mov
cmc
pop
xchg
ins
movs
es
xor
outs
xor
ja
lea
push
or
cmp
add
idiv
add
inc
push
sbb
mov
xor
hlt
leave
inc
dec
fcomp
call
push
fs
movs
and
pop
movs
mov
adc
popf
bound
(bad)
popf
sub
outs
cwde
add
jg
in
sbb
add
dec
stos
sahf
fsub
imul
cs
mov
pop
pop
xchg
xor
dec
pop
out
retf
cmp
xchg
jmp
cmp
cli
jbe
in
stos
je
fisttp
push
imul
sub
xor
sbb
jp
jnp
stc
mov
and
add
or
cmc
ss
out
mov
mov
in
adc
inc
pop
ret
shr
mov
enter
cmc
inc
cmp
sub
(bad)
aaa
and
ja
dec
push
pop
sbb
xor
out
rol
mov
or
mov
test
cmc
data16
iret
mov
sub
pop
je
push
call
sub
cs
cmp
cmp
movs
xchg
xchg
pushw
test
push
retf
jae
jne
or
jb
cmp
dec
or
push
push
mov
jge
in
ds
push
lods
popa
inc
push
adc
mov
popa
add
push
adc
xor
jmp
mov
xlat
cmps
and
mov
mov
xchg
and
sbb
scas
arpl
push
jo
cmc
inc
mov
and
std
push
pop
add
(bad)
push
add
pop
call
inc
ss
xor
mov
dec
mov
loope
sub
inc
int
mov
add
pop
and
jmp
xor
and
fbld
add
in
cmp
call
call
mov
or
call
pop
cdq
loop
cmps
sbb
inc
inc
iret
pop
stos
push
sbb
sub
movs
lods
jne
cmp
jmp
shl
dec
xor
in
pop
jns
dec
mov
dec
jp
inc
clc
jl
xlat
inc
mov
cmp
into
push
jle
cmps
jl
ja
mov
inc
icebp
int
cmp
scas
pop
test
sar
jmp
mov
fsub
adc
cmps
push
mov
daa
mov
push
nop
sti
int3
pop
(bad)
pusha
add
div
arpl
lds
jne
sub
in
js
cmp
es
repnz
in
sub
inc
imul
cmp
aaa
and
ret
popa
pop
neg
add
sub
ficomp
xchg
push
dec
push
enter
shl
inc
nop
movs
pop
imul
mul
fild
(bad)
xchg
cwde
cmc
sahf
inc
add
iret
mov
das
popf
cld
call
repz
xchg
dec
(bad)
push
test
xor
pop
gs
data16
sbb
enter
daa
shl
or
cmp
imul
dec
int
aad
into
cs
add
cwde
dec
cmps
mov
scas
xor
pop
js
pop
jns
fld
push
rol
add
sub
jae
push
jnp
or
and
mov
dec
inc
jecxz
fisubr
call
jg
in
out
cwde
fldenv
adc
loop
fcom
xchg
mov
sub
sbb
xor
inc
push
pop
pop
fidiv
aas
push
mov
test
xchg
pop
ficomp
in
mov
call
in
outs
jo
jne
ret
int3
jbe
div
(bad)
pop
or
addr16
xlat
loop
sbb
adc
sbb
jne
cmp
xchg
xor
xor
push
inc
sbb
or
and
xchg
lds
sbb
dec
in
ins
mov
movs
scas
fldenv
xchg
jae
cdq
adc
test
cwde
retf
xor
push
in
bound
hlt
test
adc
outs
jecxz
xchg
dec
into
dec
sbb
or
pop
int3
mov
jecxz
xor
test
mov
jb
imul
lea
xor
mov
in
data16
mov
pop
or
xchg
outs
fnstsw
jg
sbb
add
and
pusha
out
call
and
push
aam
or
scas
adc
mov
mov
cmps
mov
leave
cdq
add
loope
mov
push
dec
mov
pop
mov
stos
add
inc
mov
dec
xor
push
xchg
imul
dec
in
jmp
adc
jl
mov
jo
or
cdq
test
mov
movs
mov
fimul
dec
retf
cmc
mov
sar
sar
mov
imul
jecxz
cmp
int3
inc
cwde
adc
xchg
ins
stos
mov
rcr
and
imul
adc
arpl
push
les
mov
(bad)
aaa
mov
mov
pusha
shl
nop
jb
mov
popf
xor
push
sub
xor
sub
push
sbb
ficom
test
fwait
shr
add
mov
mov
cld
xor
ffreep
sar
cld
call
enter
jg
and
add
mov
jno
rol
shl
cdq
cmp
pop
sahf
push
mov
aam
push
out
xchg
iret
cmps
push
or
prefetch
pop
sbb
or
fcmovbe
bnd
jg
cmp
cdq
inc
lahf
pushf
cmp
mov
mov
and
cmc
add
dec
push
cmc
pop
and
mov
pop
cmovo
(bad)
(bad)
push
adc
xchg
jle
(bad)
cmp
sbb
push
mov
cs
and
nop
xchg
stos
lock
mov
jge
push
mov
(bad)
cld
jle
test
push
sub
inc
js
rol
ret
xor
sbb
sti
mov
es
out
or
popf
mov
pop
dec
mov
es
cmp
dec
jnp
das
shl
sub
(bad)
out
ret
pavgb
mov
xchg
or
pop
popa
xor
lods
xchg
cmp
mov
int
in
leave
jle
popa
mov
mov
scas
ss
mov
or
cmc
adc
nop
fidivr
sub
int3
mov
arpl
dec
cmp
mov
push
inc
fiadd
leave
xchg
outs
mov
dec
add
cmps
mov
adc
mov
cmp
xchg
in
push
xor
adc
pop
sub
adc
and
test
retf
mov
pop
scas
stos
lods
push
add
mov
mov
xor
and
pop
aaa
sub
push
inc
mov
pop
loopne
enter
mov
out
fbstp
jnp
mov
in
lds
jp
adc
cwde
(bad)
daa
test
into
push
rol
xchg
pop
sub
mov
stc
out
clc
jne
mov
inc
push
movs
mov
pop
lahf
xor
fld
scas
cmp
xlat
(bad)
pop
inc
fidivr
mov
add
jp
sbb
stc
aad
or
sbb
jbe
dec
std
(bad)
xchg
ret
sbb
in
fidiv
and
xrelease
imul
pop
rcl
iret
push
leave
mov
es
fs
mov
setb
xchg
jge
cmc
dec
pop
xchg
test
jmp
sub
outs
inc
add
retf
shl
outs
out
hlt
push
gs
xor
dec
loope
xchg
(bad)
mov
or
pop
(bad)
jns
xchg
std
psadbw
nop
xlat
fucomp
sub
jae
pop
push
leave
xchg
xor
out
inc
imul
loopne
aas
imul
jnp
inc
and
adc
loop
scas
add
pop
es
xor
je
outs
pushf
cmp
cmps
push
fisub
loope
cmp
push
add
mov
pop
aas
jle
jmp
cmp
(bad)
cwde
jmp
xor
sub
icebp
push
or
aam
cmps
sub
xrelease
sbb
inc
sbb
aad
ret
jo
push
or
fidiv
lahf
mov
lods
cli
jge
cmc
mov
pop
mov
cmp
dec
xchg
(bad)
call
cld
adc
and
lea
inc
ret
fsincos
xchg
das
rcr
shl
call
imul
out
test
mov
dec
push
push
pushf
mov
pop
imul
add
out
sub
sbb
enter
xor
xchg
shl
adc
in
sbb
fcmove
add
fcom
int3
add
mov
add
jbe
dec
xchg
or
and
push
out
shr
push
adc
push
into
clc
nop
call
popa
enter
in
xor
lods
lea
iret
(bad)
cdq
push
fstp
sub
call
ret
in
or
jg
jbe
mov
pop
jp
add
sbb
adc
call
js
sub
sub
sti
xchg
pop
scas
xchg
sub
jmp
scas
mov
ficom
jp
ror
sbb
mov
retf
adc
test
add
mov
lods
add
iret
push
and
jg
repnz
outs
cli
es
mov
push
inc
mov
adc
mov
inc
push
popa
cdq
adc
sbb
loopne
xchg
retf
push
(bad)
mul
mov
cmp
aas
jo
retf
repz
add
int
lods
mov
jmp
addr16
ins
pop
pop
pop
xchg
jbe
or
and
pushf
loope
or
push
(bad)
pop
push
mov
jae
cmp
(bad)
icebp
pop
pop
pop
enter
mul
mov
mov
sub
dec
cmp
iret
icebp
pushf
push
mov
sub
int
xchg
cmp
push
mov
enter
pop
lods
or
aam
mov
adc
adc
in
fnstsw
cmp
cmp
and
xor
push
call
sbb
icebp
mov
clc
mov
mov
or
xchg
mov
mov
dec
ins
dec
cwde
add
ins
jmp
enter
aas
inc
es
ror
mov
ror
mov
and
inc
out
pop
push
inc
int3
xor
inc
jecxz
ja
movs
cmp
push
cmp
clc
test
outs
lods
adc
sbb
and
hlt
jmp
ss
in
in
es
mov
push
adc
fisttp
cmp
repnz
cvtps2pi
int
cli
test
push
push
dec
cmp
cs
adc
out
cs
or
clc
mov
push
cmp
(bad)
cld
lods
imul
ret
jo
and
fbstp
scas
sub
aad
mov
add
mov
in
adc
xor
pop
xchg
sbb
push
aad
jmp
popf
(bad)
call
mov
adc
and
fcom
daa
call
repz
pop
ret
int3
das
vpermil2pd
sub
xor
sub
cdq
call
mov
xor
(bad)
movs
push
jno
stc
test
push
dec
or
cmps
fcomp
clc
mov
pop
inc
in
cmp
sbb
retf
outs
xlat
xchg
(bad)
retf
fisubr
push
leave
cmp
or
das
clc
fcom
push
(bad)
push
sar
or
adc
sbb
pop
dec
xor
push
xchg
leave
pop
nop
js
ins
xor
fidiv
sar
fsub
and
dec
push
fwait
das
jecxz
pop
lahf
loopne
jp
adc
adc
stos
cmps
inc
ins
pop
dec
jbe
jp
shl
and
call
dec
push
xor
push
xchg
pop
cmc
bnd
adc
sbb
in
(bad)
ficomp
pop
sub
mov
mov
lods
push
jmp
fcomp
and
add
sbb
cmps
out
out
mov
or
jae
in
das
inc
inc
xchg
sbb
cs
ja
fadd
inc
gs
mov
dec
ds
dec
jmp
pop
and
sub
sub
setbe
stos
(bad)
loopne
lea
jp
int3
dec
test
or
or
std
jae
jb
adc
cmp
cmp
mov
add
cmp
repz
adc
mov
sub
mov
dec
or
mov
fild
(bad)
jnp
pop
(bad)
call
inc
jmp
call
popf
outs
lods
pop
leave
out
sar
dec
add
or
xchg
fs
movs
test
loop
mov
dec
push
(bad)
xchg
movs
lea
les
pop
inc
mov
add
add
jb
out
push
cmp
pop
(bad)
shl
mov
(bad)
xchg
les
pop
xchg
mov
push
ins
mov
int3
cmps
shl
xor
push
inc
push
adc
in
es
xchg
(bad)
jl
lods
mov
mov
sub
mov
enter
psrlq
imul
xchg
adc
mov
sbb
jmp
data16
adc
jge
and
adc
(bad)
out
push
push
or
cmp
pop
add
retf
les
jb
fcomp
fwait
and
aaa
rcr
jle
pop
inc
jecxz
fdivr
adc
jge
xchg
cmp
adc
jl
ja
inc
jle
or
xor
xchg
mov
mov
and
sti
mov
cmp
jecxz
movs
test
push
(bad)
pushf
mov
cwde
lods
and
out
mov
sti
mov
inc
popa
cmp
cmps
inc
or
fmul
push
add
and
or
jmp
repnz
data16
(bad)
outs
dec
mov
addr16
ins
add
lds
and
test
xor
and
mov
sbb
xor
pop
jmp
add
inc
lods
cmps
add
sahf
mov
cmps
pop
or
mov
rol
out
mov
int3
jle
sbb
sub
mov
movs
adc
cmp
inc
jnp
dec
push
pop
adc
or
mov
dec
mov
(bad)
retf
ror
xchg
jne
lods
out
mov
mov
jne
and
push
popf
out
and
mov
mov
xchg
push
scas
cmc
movs
mov
mov
sub
shl
lea
std
mov
push
fild
or
pop
mov
nop
push
shl
int
test
into
cwde
scas
lods
pop
mov
mov
pop
retf
pop
or
lock
jp
jns
into
gs
mov
hlt
and
and
sbb
xor
ins
xor
les
leave
xchg
mov
jmp
push
push
cmp
out
push
sar
mov
ficomp
jb
mov
pop
ds
ja
pop
fcmovnu
sti
mov
(bad)
das
push
mov
lock
mov
sub
jl
inc
dec
jl
jle
retf
mov
outs
dec
js
mov
fucomip
outs
xor
mov
mov
xchg
adc
sti
and
outs
int3
push
adc
jbe
dec
iret
shl
mov
xor
(bad)
or
mov
cmc
inc
(bad)
cmp
in
ret
stos
push
loope
ret
mov
mov
or
mov
inc
sar
test
xchg
cmp
jb
cmp
outs
lods
mov
in
push
les
jle
add
adc
retf
xchg
mov
test
dec
movs
and
mov
in
push
or
cmp
adc
sbb
jge
jmp
lock
and
fnstenv
scas
in
adc
aaa
xchg
jle
push
fistp
inc
scas
add
xchg
pop
and
stc
add
retf
xor
adc
out
adc
cwde
xor
ret
xchg
es
ficomp
xchg
pmaddwd
mov
xor
ror
dec
sub
ins
cmc
movs
scas
and
inc
adc
nop
xchg
and
dec
shl
jp
call
dec
xchg
mov
inc
loopne
or
pop
pop
jmp
bnd
mov
xor
mov
mov
stc
mov
dec
jl
mov
cmp
inc
adc
push
retf
addr16
inc
push
call
jmp
outs
sbb
mov
xchg
xor
add
ret
xchg
xchg
cmp
mov
cmps
clc
out
add
jecxz
cli
mov
mov
inc
jb
fadd
xor
fnsave
scas
popa
jecxz
in
inc
ds
(bad)
cld
into
inc
imul
in
adc
jle
xor
push
call
jge
jmp
cwde
(bad)
adc
mov
mov
fisub
pushw
xchg
lea
and
stos
fcomi
adc
fidivr
mov
sub
pop
or
sub
mov
f2xm1
cmps
and
jp
pop
add
fnstsw
jl
imul
push
clc
sbb
jns
push
retf
xor
dec
inc
and
mov
sub
movs
inc
ret
hlt
pop
ins
pminub
popa
mul
mul
mov
(bad)
cmp
rcr
dec
(bad)
xchg
mov
or
retf
cwde
cmp
add
inc
ror
add
xor
mov
fcomp
or
sub
mov
or
jae
sub
pop
loope
xchg
cmp
inc
cmp
js
cld
xor
test
push
adc
mov
cdq
int
div
ret
mov
sub
dec
dec
and
jno
adc
mov
shl
dec
mov
fs
sub
sbb
push
out
mov
or
xchg
add
push
in
stos
pop
mov
dec
test
inc
inc
add
(bad)
fadd
push
aad
lock
iret
or
add
nop
(bad)
and
repnz
xchg
mov
jmp
stos
xor
dec
call
stos
adc
mov
mov
in
nop
mov
or
xor
push
pop
or
sub
cmc
inc
cmp
adc
addr16
jecxz
lea
xor
xchg
push
jmp
push
mov
mov
sub
push
arpl
jmp
loop
test
cmp
arpl
mov
push
stc
cmp
mov
sub
cmp
sub
push
pop
in
into
jb
popa
mov
add
pushf
sub
mov
mov
das
xor
adc
xor
lods
jle
fsub
sahf
dec
neg
ficomp
pop
push
repnz
stos
stc
dec
mov
xor
test
pop
jl
cmc
pop
mov
cld
or
retf
push
imul
xchg
cdq
enter
in
iret
repnz
jno
jge
loopne
pop
mov
scas
push
aam
leave
pop
sbb
js
pop
shl
cmp
callw
call
(bad)
cmp
test
sub
fidivr
xchg
mov
sbb
js
iret
mov
mov
call
int
fld
dec
inc
push
adc
jg
xor
jp
inc
pop
mov
mov
dec
inc
and
sub
dec
call
sar
in
loopne
push
adc
daa
rcr
jne
xor
adc
bswap
je
xor
lahf
inc
inc
enter
inc
mov
retf
in
jae
test
jle
mov
xor
cmp
adc
imul
jge
mov
add
inc
inc
jg
loop
pop
cli
xor
cmovle
mov
mov
pop
stc
xor
xchg
int3
fnstsw
cwde
lock
mov
dec
mov
test
xchg
or
mov
out
fnstcw
test
jmp
fmul
sub
imul
fwait
dec
pop
stos
inc
mov
jns
pop
shl
mov
jmp
retf
or
mov
pop
adc
scas
(bad)
jae
pop
out
jge
ret
dec
inc
cmp
sahf
sbb
shl
(bad)
mov
fs
stos
mov
or
or
push
loope
outs
in
lods
jge
xor
fstp
das
ins
push
xor
test
popf
xor
mov
outs
pop
shl
mul
shl
sbb
aaa
lds
cdq
out
lods
lahf
or
and
fistp
inc
sar
(bad)
cmp
mov
xlat
and
or
iret
xor
rol
int3
push
xor
sbb
and
and
mov
jmp
enter
inc
cs
jne
in
add
pop
je
or
in
cmps
dec
shr
(bad)
xchg
jmp
push
adc
fdivr
or
pop
adc
push
ins
pop
pop
cld
adc
cmp
clc
pop
es
sub
outs
ja
shr
or
leave
sbb
pop
rcr
jo
mov
xchg
bound
xor
fisub
pop
(bad)
in
mov
sahf
cmp
in
xchg
pop
shl
(bad)
sti
pop
adc
in
pop
or
fstp
ins
mov
sbb
lea
add
or
fs
loopne
je
mov
jb
add
pop
dec
leave
jge
or
adc
lock
iret
xchg
adc
dec
cmp
ficomp
lock
rol
out
inc
push
adc
ins
repnz
call
xchg
fadd
sbb
loope
lea
(bad)
xchg
sbb
(bad)
mov
add
mov
dec
aad
dec
fwait
push
daa
rcr
xchg
cdq
pusha
jmp
add
cmp
xor
xlat
imul
push
mov
and
and
mov
or
dec
(bad)
gs
or
cmp
cmp
sub
enter
(bad)
addr16
ret
clc
or
push
push
cmc
out
icebp
pop
bound
sbb
icebp
shl
add
retf
ret
sub
inc
out
push
movs
iret
xor
xchg
in
mov
hlt
mov
or
adc
jae
dec
scas
pop
loope
jle
into
push
dec
jo
push
xchg
movs
ss
push
and
shr
xchg
jnp
test
mov
inc
loopne
nop
or
mov
xchg
ds
mov
int
in
das
sbb
cs
lea
xchg
dec
outs
fdiv
mov
enter
ror
in
jnp
out
(bad)
jmp
ja
add
or
ret
sbb
in
mov
jo
add
push
add
std
inc
xor
test
sbb
sub
sbb
mov
fisub
push
adc
mov
or
sahf
xor
xor
fidivr
inc
test
xchg
jae
adc
dec
xchg
pushf
push
retf
mov
cmps
(bad)
ror
lds
push
push
cmc
dec
inc
jnp
dec
loop
les
lock
mov
dec
sbb
hlt
pop
inc
mov
arpl
jge
scas
lahf
cmp
(bad)
dec
sub
push
gs
loop
fist
inc
push
lahf
not
addr16
mov
(bad)
pop
and
and
xor
adc
jecxz
ror
push
sub
lock
sub
(bad)
frstor
rcr
(bad)
cmp
lds
movs
push
scas
jmp
je
ins
sar
push
cmp
pop
mov
dec
fld
xchg
sbb
push
js
ret
packssdw
add
push
or
add
mov
jmp
not
or
push
mov
xor
rcl
push
imul
cs
adc
cwde
xchg
pop
cmps
lds
inc
fnstsw
je
xchg
in
dec
push
sbb
mov
and
pop
xlat
imul
xchg
outs
push
push
cmp
xor
jle
out
movs
pop
inc
rcr
xchg
clc
adc
loop
push
xchg
cmc
cdq
push
pop
or
enter
nop
out
xchg
ds
ror
adc
mov
jmp
mov
mov
sti
mov
dec
daa
xchg
outs
mov
push
mov
xor
icebp
add
mov
dec
mov
loope
adc
dec
jne
cld
or
cld
cmc
xchg
cmp
sar
movs
movs
shl
int
(bad)
popf
mov
mov
add
pop
cmp
in
fisub
mov
ja
push
leave
stos
shl
ret
mov
fnsave
pop
lea
loop
jg
out
in
lods
xchg
pop
clc
or
mov
xlat
shl
adc
rcl
pop
sub
mov
test
mov
aaa
adc
cmp
mov
cmps
sbb
push
sub
aaa
dec
into
lahf
in
das
fmul
clc
outs
shl
inc
or
dec
movs
mov
push
retf
shr
inc
mov
loopne
cmc
sub
xchg
retf
stos
and
call
sbb
call
mov
pusha
or
hlt
pushw
pusha
cmp
or
mov
adc
ret
ret
fs
in
jns
sbb
stos
jnp
mov
cmps
push
jo
in
xlat
(bad)
clc
pop
mov
and
inc
mov
jmp
sbb
fcmovnb
ins
out
lock
push
inc
dec
sbb
cmp
sbb
jp
or
adc
(bad)
in
mov
sbb
mov
push
loop
mov
js
lods
cwde
sbb
hlt
inc
mov
stos
cmp
inc
and
or
shr
mov
mov
inc
test
push
int3
xor
in
xor
dec
or
mov
sar
leave
call
add
or
fisub
call
dec
push
pop
mov
push
add
movs
push
or
or
dec
cvtdq2ps
xchg
mov
xor
loop
inc
int3
pushf
jnp
pop
movs
dec
(bad)
or
dec
(bad)
xor
jb
ror
outs
xor
mov
inc
std
xchg
pop
fdivr
or
scas
test
jg
push
movs
adc
js
movs
(bad)
mov
xchg
les
add
inc
(bad)
cmps
pusha
ins
rcl
enter
(bad)
aam
mov
and
es
push
dec
imul
add
shl
or
pop
or
shl
push
lea
test
fs
imul
leave
mov
imul
ss
and
out
add
push
sbb
pop
mov
pop
mov
mov
and
jns
push
mov
jl
or
dec
jecxz
das
jmp
fdivr
mov
adc
adc
lea
in
stc
sbb
outs
sti
adc
lds
and
cwde
(bad)
fisub
dec
fdivr
icebp
push
push
cwde
test
push
xchg
sub
imul
mov
ja
cmp
ror
jmp
mov
hlt
push
aam
call
shl
push
js
push
shl
test
stos
add
fdivr
std
dec
and
out
movs
sbb
icebp
hlt
jbe
adc
lds
scas
dec
adc
adc
mov
sub
in
or
mov
mov
mov
xor
mov
jbe
sbb
push
jmp
cmp
enter
inc
mov
sub
ret
mov
mov
cmp
sbb
dec
movs
int3
pusha
push
inc
sar
je
int3
push
mov
and
fcmovnbe
call
rcl
mov
mov
(bad)
stc
sbb
scas
test
xchg
std
push
addr16
mov
fst
call
cmps
mov
mov
cmps
mov
leave
xor
xchg
cmps
xchg
movs
outs
movs
arpl
or
jnp
fldenv
push
xchg
jge
idiv
jno
jge
leave
rcr
addr16
ds
call
fnstenv
int3
fwait
xor
in
(bad)
rol
push
lods
rol
or
xchg
inc
mov
dec
pop
or
mov
mov
inc
or
push
jne
jp
ret
xor
fwait
sar
out
adc
dec
mov
dec
repz
mov
outs
les
movs
xlat
popa
dec
test
mov
out
push
rcr
sub
pop
add
add
lods
mov
es
or
mov
leave
xor
test
test
repnz
xchg
ret
xchg
push
mov
scas
lods
jl
pop
push
into
rcl
stos
jg
xchg
int3
sbb
add
ret
shl
and
movs
jb
fstp
clc
jl
mov
lock
ins
call
inc
jp
popa
pop
shr
dec
imul
xor
cmps
pop
xor
into
lock
sti
push
dec
add
jge
mov
out
arpl
xchg
jb
ins
xchg
add
les
mov
retf
jmp
jbe
and
and
or
int3
cmp
(bad)
mov
movs
or
jnp
sub
mov
int
add
mul
stos
add
dec
cmp
push
(bad)
mov
cmp
into
cld
jnp
inc
daa
int3
(bad)
shl
mov
jecxz
call
ins
test
mov
cmp
sub
push
cmp
(bad)
pop
in
xchg
adc
pop
(bad)
out
and
lea
add
jns
pop
jp
mov
or
stos
dec
or
cld
or
dec
scas
ror
or
push
out
jno
jb
and
cmc
mov
sbb
pop
imul
adc
jl
retw
or
cmp
sbb
es
leave
mov
imul
call
inc
movs
movs
(bad)
loopne
mov
shl
dec
xor
cmps
fwait
loop
out
cwde
dec
sar
xchg
ds
sbb
push
int3
mov
iret
adc
adc
add
inc
adc
and
jge
mov
iret
rcl
into
jno
jnp
add
hlt
add
ret
test
and
mov
fidiv
xor
shl
imul
repz
fxch
mov
repz
aam
enter
sbb
adc
fisttp
outs
jg
sub
std
add
int
in
retf
imul
push
xchg
mov
sub
je
push
mov
sti
sub
mov
es
inc
sub
push
int
xchg
test
fwait
mov
add
lea
pop
adc
shl
xchg
retf
pop
xor
pop
scas
lds
mov
cmp
(bad)
cmp
addr16
cmp
inc
call
scas
inc
xchg
adc
mov
push
rcr
fwait
jl
add
ins
repz
or
retf
(bad)
retf
cmp
scas
mov
mov
out
mov
or
cwde
cmp
lahf
mov
push
repnz
sub
popf
fsub
in
imul
mov
stos
mov
sar
loope
or
stc
jbe
movs
sub
and
mov
cmc
xchg
cmp
cmp
sbb
out
pop
xlat
inc
sbb
and
cdq
mov
ja
call
hlt
addr16
jo
push
arpl
int3
cs
inc
push
sub
sbb
(bad)
adc
push
test
sbb
imul
and
add
in
movzx
pop
xchg
jg
jmp
sub
lds
cwde
sbb
mov
mov
push
jnp
call
cli
and
rcr
data16
add
push
pop
dec
sbb
popf
(bad)
ret
in
xor
retf
dec
cmp
push
adc
out
fs
xchg
popa
adc
mov
xor
loope
mov
dec
enter
inc
test
mov
push
push
pop
bound
push
jns
dec
xchg
cmps
repnz
(bad)
lea
jns
mov
(bad)
push
aaa
(bad)
fsub
(bad)
sub
xchg
and
mov
pop
and
jns
mov
nop
xchg
or
pop
call
push
(bad)
sti
lock
mov
rcr
mov
and
ret
or
mov
rol
std
sbb
push
cmp
test
cmp
test
mov
out
sub
jmp
add
cmp
repnz
fcmovne
call
xchg
retf
ins
pop
sti
mov
fadd
or
sbb
add
push
test
cmp
cli
outs
sub
cwde
sti
clc
sti
mov
mov
(bad)
jmp
movs
add
imul
push
sti
mov
jle
xchg
arpl
jnp
mov
xor
jg
mov
int
pop
jne
pop
outs
cs
cli
push
retf
dec
add
int3
bound
inc
mov
frstor
cld
in
or
cli
pop
jo
add
mov
cwde
jo
or
push
outs
adc
enter
push
push
sub
and
leave
pop
leave
shr
push
inc
ja
push
cmp
enter
iret
xchg
or
ins
mov
pop
std
lock
sub
call
sbb
scas
xchg
ins
movs
data16
dec
add
add
sar
cld
imul
repz
push
xchg
cwde
add
js
jl
sub
and
or
sub
cs
(bad)
std
mov
mov
fcmovnb
fstp
dec
out
call
sbb
(bad)
jne
sub
ret
mov
sti
or
push
jecxz
push
ins
and
adc
or
popa
and
fstp
sbb
dec
js
jns
sub
or
das
mov
gs
mov
lea
ja
jecxz
jmp
mov
add
cdq
clc
cmc
adc
adc
mov
rep
inc
jmp
hlt
repnz
add
lods
imul
push
mov
rcl
aad
out
xchg
jae
stc
pop
and
jge
nop
in
popf
ja
push
jns
out
pushf
sbb
movs
gs
mov
mov
inc
pop
sbb
jno
push
xchg
inc
or
jl
imul
push
or
bound
sar
push
dec
in
add
in
fcmove
and
test
(bad)
pop
mov
fdiv
in
jg
add
push
es
lock
and
iret
aad
xchg
pushw
or
ja
inc
push
stos
jae
bound
pop
pushf
(bad)
lods
xor
dec
sbb
push
stc
ror
fwait
(bad)
mov
sub
add
adc
jbe
and
cli
mov
cmp
jecxz
outs
add
add
and
xor
xchg
xchg
leave
int
retf
xor
jl
mov
inc
xchg
and
pop
cld
lar
dec
not
push
jne
jb
cmp
pop
sahf
imul
and
pop
add
mov
fcomp
les
push
(bad)
out
call
mov
jge
xor
hlt
lods
mov
dec
dec
push
mov
cli
mov
dec
(bad)
xchg
mov
adc
addr16
sar
cmp
rcl
cmp
mov
sbb
mov
mov
hlt
pop
fistp
ror
js
outs
(bad)
gs
cmc
xchg
pop
jo
aad
mov
push
cmp
movs
addr16
(bad)
fsubp
int
mov
xchg
sub
add
popf
aaa
and
jmp
pop
mov
jmp
ror
ret
test
lods
cli
ja
push
mov
add
icebp
sub
fld
(bad)
aam
shl
cmps
and
jae
cmps
push
push
mov
add
or
xor
and
or
xchg
sbb
stos
push
div
scas
loopne
fs
jmp
sub
out
fld
fsubr
outs
xchg
les
out
mov
pop
popa
dec
fiadd
sub
not
imul
xchg
sbb
pop
outs
xchg
jbe
jb
mov
ins
iret
mov
sbb
jmp
fsubr
inc
daa
push
dec
(bad)
mov
jno
rcr
aam
or
outs
stos
jnp
sbb
adc
mov
mov
repnz
xchg
test
out
cs
mov
mul
xchg
lds
xor
(bad)
int
push
sar
lock
xchg
sbb
jmp
mov
dec
inc
mov
aad
jmp
or
push
into
dec
xchg
sbb
add
out
in
in
pop
push
mov
push
mov
jecxz
bound
rcr
push
(bad)
out
xchg
or
mov
stc
lea
push
inc
or
loope
int3
mov
enter
push
sub
fwait
push
inc
push
jo
inc
jmp
mov
push
dec
push
ja
mov
xor
sub
cwde
js
xor
or
lea
push
xor
loop
xor
and
cld
pop
jl
pop
dec
inc
(bad)
repnz
xchg
scas
leave
out
pop
mov
aad
or
sbb
btr
jns
cli
adc
jb
sbb
pop
retf
addr16
jns
popf
cmp
sbb
pop
cmps
push
sub
std
lahf
cmp
cmp
pop
mov
lahf
dec
or
cmp
adc
sbb
inc
pop
dec
sub
mov
sar
vmaxsd
add
mov
jge
jmp
lahf
out
cdq
pop
pop
xchg
xchg
mov
pushf
jnp
rcr
lods
dec
mov
adc
adc
sub
ds
into
stc
clc
std
fdiv
cmp
mov
rcl
in
push
ja
mov
movs
xchg
dec
adc
stc
jns
sub
stc
cmps
loop
xchg
mov
icebp
mov
bound
adc
movs
out
test
mov
bound
bound
cmc
mov
mov
(bad)
mov
ds
mov
push
popf
adc
stos
adc
call
push
clc
dec
nop
push
data16
mov
mov
cmp
push
dec
add
jmp
mov
scas
sahf
popf
movs
sti
jno
xchg
cs
test
stc
ja
and
out
fwait
movs
add
repnz
fs
mov
call
push
loope
mov
sbb
add
fwait
jnp
mov
stos
aaa
xor
test
ror
mov
arpl
(bad)
(bad)
nop
movs
call
(bad)
std
pop
loope
es
fst
cmp
add
sub
lea
outs
aas
hlt
inc
lea
stos
sub
rol
inc
dec
out
mov
sub
ffree
add
mov
cmp
sub
and
xor
inc
cld
data16
sub
dec
adc
fcos
sbb
out
int3
loope
iret
and
scas
sub
ja
sbb
addr16
loop
ret
cmp
cmp
outs
test
jl
sbb
mov
cmp
jmp
jmp
cmp
aad
mov
inc
cmp
daa
pop
call
dec
mov
iret
std
pop
sti
or
les
push
ficomp
inc
int3
dec
test
mov
sahf
add
fistp
pop
fwait
stos
xchg
dec
aas
ret
mov
fwait
pusha
xor
push
xor
ret
mov
adc
add
jmp
icebp
and
and
scas
xchg
sub
rol
xchg
clc
ret
je
js
arpl
cmps
xlat
cmp
stc
mov
jmp
int
add
or
out
sbb
int
mov
cmps
mov
xor
mov
inc
pop
(bad)
scas
js
push
mov
mov
mov
xchg
arpl
loope
into
pushf
sbb
test
inc
cwde
inc
out
jae
test
cdq
add
inc
mov
call
xchg
pop
dec
popa
in
pop
xchg
inc
sbb
shl
dec
gs
fisub
sub
leave
push
or
adc
fld
stos
shl
xchg
mov
pop
call
shr
xor
lods
push
lods
sbb
das
inc
cmp
into
and
pop
xor
push
xlat
xchg
pop
lea
jmp
(bad)
fild
xlat
jg
pop
outs
jae
sub
dec
xchg
call
adc
lahf
cmp
sub
push
add
loope
xchg
push
push
aam
sbb
dec
(bad)
push
scas
add
jg
test
fidiv
push
dec
sub
sub
and
and
test
xor
xor
ins
sub
mov
xor
mov
dec
test
mov
push
push
repnz
fnstcw
cmp
pop
push
mov
push
out
ret
cmps
test
sti
lds
mov
loopne
out
push
pop
lock
mov
cmps
or
inc
push
xor
cmps
loopne
jecxz
push
test
xchg
jno
jbe
mov
lods
jl
cmp
test
sbb
mov
cmps
sbb
ds
stos
test
and
and
xor
in
cli
jle
std
lods
cld
repz
jge
dec
push
dec
xor
call
mov
dec
push
fdivr
mov
and
(bad)
(bad)
mov
es
scas
popf
inc
xor
call
and
mov
ja
cmp
rcr
and
jg
mov
jl
cdq
pop
inc
es
xchg
ins
xlat
cmps
movs
fmul
in
push
pop
add
mov
cmc
mov
lea
and
(bad)
int3
add
rcr
neg
xchg
xor
push
frstor
sbb
shr
mov
sbb
dec
popf
aad
sbb
aad
pushf
cmp
add
dec
scas
mov
add
mov
dec
popf
mov
xor
repnz
pop
sbb
jae
cmp
(bad)
(bad)
mov
(bad)
div
loopne
xor
and
out
inc
push
int
aam
stos
inc
xor
pop
ins
clc
cld
mov
outs
push
sbb
inc
lock
retf
mov
sub
fs
xchg
(bad)
popf
fcomp
fs
test
pop
ja
(bad)
inc
call
mov
mov
mov
int3
(bad)
int3
dec
inc
lods
jns
mov
mov
fcom
pop
sub
xchg
call
mov
and
bound
out
popf
mov
nop
pop
rcl
sbb
shl
dec
cdq
hlt
xchg
mov
ins
push
mov
in
xchg
mov
inc
test
cs
pop
imul
mov
pop
xor
jae
mov
mov
jge
sahf
cld
sbb
dec
mov
sub
test
rol
pop
in
push
push
gs
bnd
fsubrp
jp
mov
fistp
mov
retf
mov
xabort
sub
test
sbb
pop
pop
push
lds
or
xor
push
add
ss
call
int3
out
call
jmp
sub
mov
(bad)
loop
hlt
lods
pandn
stos
outs
dec
fdivr
enter
sub
jl
inc
jne
push
mov
mov
push
inc
adc
in
inc
and
mov
hlt
sbb
mov
lea
pop
mov
cmp
pop
xor
and
inc
jmp
ret
mov
mov
and
pop
test
sbb
mov
scas
sar
sbb
pusha
outs
stc
test
mov
mov
or
inc
xchg
inc
ss
retf
into
xor
xor
test
not
cld
out
cmp
pop
mov
das
in
call
cmc
bound
mov
fwait
pop
fild
pop
sub
ins
sub
rol
jmp
pop
xchg
jne
dec
cmc
fucomp
add
jmp
push
and
pop
pop
sbb
mov
push
imul
xchg
(bad)
and
pop
jmp
mov
and
jb
jae
ss
rcl
stos
(bad)
in
ret
rol
scas
lahf
clc
add
ror
nop
movs
mov
push
mov
add
xchg
jl
or
sti
mov
daa
retf
pop
sti
xor
xchg
mov
rcl
pushf
push
jo
inc
add
stos
aas
xchg
dec
push
(bad)
mov
test
cwde
inc
(bad)
loopne
idiv
mov
mov
jp
fnsave
jg
stos
test
lods
test
ficom
out
movs
pop
jne
xchg
push
imul
mov
push
push
sti
push
inc
ss
loop
xchg
fstp
mov
jnp
add
xchg
dec
xchg
mov
test
stos
xchg
mov
and
ss
aas
pusha
add
popf
fs
cmc
into
push
jne
sub
retf
mov
push
int3
je
int3
ja
sub
xchg
or
pusha
xor
xchg
adc
dec
repnz
cmp
xor
inc
sbb
mov
in
fbld
sub
ja
sbb
xchg
xchg
inc
push
or
pop
xchg
dec
and
fistp
rol
idiv
jg
mov
xchg
mov
(bad)
xor
jne
adc
test
fidivr
xor
clc
cdq
dec
cmc
dec
outs
jl
and
pop
push
xchg
aad
xor
call
jmp
stc
loopne
xor
push
fldcw
or
sbb
sbb
stc
or
mov
std
sub
xor
aam
retf
ror
in
xor
leave
adc
dec
xor
arpl
pop
jg
data16
ja
ds
xor
adc
push
sbb
add
les
cli
ins
or
jo
pop
mov
fs
ret
stos
jmp
adc
xor
dec
rcl
cdq
and
loop
pop
mov
push
inc
retf
push
das
sahf
dec
shl
pop
clc
inc
cmp
icebp
imul
fisttp
cmps
(bad)
xchg
mov
pushf
or
pop
cmc
cwde
mov
jbe
push
in
cs
jb
sbb
jae
test
(bad)
add
cmp
(bad)
loope
call
push
cld
mov
or
sub
cmc
ds
xor
xor
dec
sub
in
and
lahf
dec
out
inc
test
repz
rcl
imul
mov
dec
xor
push
xchg
sbb
mov
adc
and
cmp
push
add
xor
sbb
add
mov
sub
jle
pushf
iret
or
cmp
dec
mov
cmc
inc
aam
ret
(bad)
jg
les
(bad)
xchg
xchg
push
xchg
loope
inc
mov
adc
adc
retf
lock
inc
xlat
inc
push
ss
cmp
and
xor
shr
enter
cmp
out
cmps
stc
and
imul
pop
or
dec
test
cmp
and
mov
fsubp
push
cwde
pop
xchg
movs
cmps
gs
sti
jbe
imul
sbb
xchg
xor
sbb
cmp
xchg
jb
imul
mov
call
repnz
xlat
fwait
xchg
in
dec
push
push
mov
push
mov
cwde
or
aaa
sub
mov
push
neg
mov
iret
pop
mov
pop
mov
sti
push
mov
fidiv
(bad)
sar
iret
neg
mov
fnstcw
aad
ret
sub
cld
int3
mov
data16
rcr
sub
in
scas
rol
dec
lds
test
dec
fwait
pop
out
inc
sti
popf
sbb
pop
jg
pop
jecxz
mov
sub
mov
les
push
stos
sub
retf
les
into
pop
rcr
adc
mov
mov
push
xor
xchg
arpl
xchg
add
aaa
es
sbb
jmp
pop
or
(bad)
jmp
push
jge
mov
or
hlt
out
xchg
mov
jge
or
pop
outs
pop
fild
fld
fidiv
jae
retf
push
sbb
int3
xchg
cld
enter
retf
test
cmp
cmp
mov
test
scas
movs
pop
pop
and
jbe
loopne
jns
(bad)
setnp
sbb
aad
lods
xlat
(bad)
hlt
ret
mov
dec
jne
in
dec
push
mov
dec
je
jo
dec
xchg
jno
cli
adc
cs
push
cmp
cmp
call
ds
loope
scas
les
adc
movs
sbb
or
lods
bound
pop
push
fidivr
int3
in
pop
into
in
and
in
faddp
in
sbb
add
sbb
(bad)
push
add
cmps
sahf
(bad)
xor
movs
pushf
ins
push
shr
dec
sbb
and
loope
cmp
pusha
xchg
rcl
iret
call
mov
push
jmp
inc
mov
jnp
xor
pop
jle
dec
mov
inc
push
cmp
xchg
xchg
sub
nop
cli
repnz
retf
xchg
xor
rol
pop
xor
mov
enter
movs
add
add
out
mov
xor
jb
push
stc
adc
retf
cmc
push
mov
outs
mov
fadd
imul
xor
cmp
xor
out
xor
dec
test
lods
adc
gs
neg
cld
mov
mov
lahf
jbe
call
imul
std
sub
sti
sbb
add
mov
pop
movs
mov
jns
add
mov
mov
xchg
adc
int
pop
mov
dec
mov
iret
add
or
mov
imul
shl
dec
hlt
mov
adc
cld
inc
mov
fsubr
popa
stc
sub
cmps
xchg
push
in
(bad)
mov
inc
in
sub
add
dec
sbb
jbe
cdq
jb
dec
stos
mov
xor
sub
inc
mov
push
mov
je
fldcw
ror
mov
dec
rcr
xchg
or
mov
cmp
mov
lahf
ins
cmp
loopne
jmp
rol
jo
xor
jl
mov
dec
(bad)
mov
call
cmp
xlat
data16
push
xchg
aad
fiadd
jge
push
pop
fwait
in
inc
rcr
repz
mov
push
popf
adc
jno
addr16
or
pop
mov
mov
outs
lods
mov
test
and
mov
inc
fimul
jle
lods
fs
xor
ins
sub
mov
popa
scas
ret
clc
xlat
or
jmp
xor
mov
sti
mov
retf
dec
sub
enter
and
jl
fstp
ins
loopne
or
add
xchg
mov
mov
out
push
sub
add
add
sub
leave
scas
or
fbld
and
lahf
jge
fxch
stos
fldcw
enter
jbe
pop
mov
scas
lahf
dec
dec
jnp
sbb
pop
popa
cwde
jecxz
retf
(bad)
loopne
out
jae
mov
ds
out
loop
dec
rcr
add
(bad)
movs
xchg
inc
(bad)
mov
mov
fmul
or
test
cld
sub
xchg
cdq
lea
pop
shl
jnp
stos
cmp
pop
inc
add
mov
mov
cld
sub
lahf
jne
add
jmp
mov
in
sub
test
cwde
xor
out
loope
(bad)
out
and
pop
pop
ror
sbb
jns
cmp
cld
loopne
inc
cs
sub
ret
ins
dec
pop
js
aas
fiadd
pop
ficom
pop
sub
push
scas
bound
mov
fild
mov
pushf
add
jp
imul
div
mov
imul
xchg
fld
fldln2
pop
push
mov
fwait
comiss
jg
sahf
and
stos
sub
retf
add
jne
js
push
stc
mov
fsub
repz
in
jbe
movs
cmps
ins
mov
push
out
mov
cmps
clc
aad
pop
push
in
inc
add
add
and
mov
lds
inc
out
cdq
inc
push
jecxz
out
scas
jae
(bad)
outs
lods
push
fldcw
mov
in
(bad)
(bad)
jo
icebp
adc
int3
lock
scas
icebp
inc
mov
xchg
xlat
addr16
fadd
or
mov
and
sbb
cmp
mov
push
into
adc
pushf
in
mov
mov
mov
mov
sbb
out
ret
cmps
xor
pop
popa
pop
push
push
in
inc
sbb
aaa
and
xor
lods
dec
mov
xor
outs
(bad)
fsubr
jb
sbb
fsubr
sub
cwde
cdq
popa
test
xchg
cmp
xor
retf
arpl
or
stos
jl
rcr
sbb
and
sub
inc
cmp
je
and
repz
stos
pop
mov
es
add
daa
es
in
pop
in
popa
push
adc
(bad)
cli
lods
xchg
imul
mov
push
jo
lahf
outs
iret
xchg
aad
mov
sbb
jge
shl
mov
mov
mov
ficom
(bad)
cmps
cmp
xorps
and
add
in
lea
ret
int3
(bad)
lock
call
mov
fidivr
(bad)
sub
jbe
mov
cmp
nop
fsub
sbb
dec
push
sub
xchg
jmp
stos
daa
xchg
xchg
mov
jle
mov
push
movs
int3
rcr
call
je
popa
inc
movs
cmp
push
jg
push
cmp
dec
stc
sbb
xchg
jb
push
lahf
cmp
jns
jl
(bad)
xor
sbb
into
jecxz
push
pop
mov
cmps
ja
add
inc
sub
dec
adc
aas
dec
jmp
sub
retf
jecxz
into
push
fcomp
and
push
adc
dec
add
nop
ja
pop
movs
adc
popf
mov
xchg
jmp
jg
adc
push
mov
and
lods
out
push
jle
inc
mov
lock
mov
loop
sbb
fsub
pop
je
sbb
xchg
cs
add
cmp
stos
mov
mov
mov
lahf
adc
sub
push
or
and
cmps
xor
adc
xor
jmp
sub
out
or
(bad)
ins
jne
js
(bad)
retf
pop
push
add
retf
pop
into
jg
and
je
add
outs
xchg
je
int3
das
pop
mov
mov
inc
cmps
movs
mov
inc
or
dec
iret
inc
movs
adc
mov
(bad)
pop
mov
mov
jns
data16
ret
adc
in
xor
lods
jns
sbb
pop
pop
(bad)
aad
pop
mov
shl
pop
mov
aas
loope
xchg
or
scas
push
aaa
xchg
and
jl
(bad)
and
mov
(bad)
jne
test
std
or
dec
adc
sub
jmp
es
lods
push
dec
pop
dec
add
jecxz
in
cmps
mov
jp
bound
jle
adc
jle
push
cli
push
inc
push
or
loopne
daa
cmp
rcr
xor
cmp
jno
pop
mov
rcl
scas
das
pop
inc
add
fidivr
or
jp
sbb
cs
cmp
jno
loope
movs
add
xor
mov
push
mov
icebp
inc
rcl
sar
add
daa
mov
jo
sub
dec
ret
movs
pop
sub
pop
pusha
cmps
cmp
sti
sub
xchg
mov
sbb
rcr
fbld
sub
out
test
mov
test
fwait
push
xlat
fist
aam
inc
in
(bad)
(bad)
mov
fsub
sub
cmp
inc
mov
mov
push
les
cmp
xchg
daa
push
push
cs
sub
xchg
cs
imul
in
pop
mov
xchg
stos
xchg
lods
aam
xor
pop
mov
pop
cmc
xchg
add
frstor
sub
sub
js
xchg
jmp
fiadd
push
fs
retf
cmp
sbb
mov
mov
movs
sub
or
pop
push
xor
jbe
pusha
cmc
mov
call
sub
adc
js
aad
int
into
scas
jne
ret
bound
call
movs
(bad)
rcr
push
scas
cmp
add
lds
mov
out
add
mov
xor
adc
retf
sbb
shr
push
and
fdivrp
js
inc
gs
out
or
jne
mov
sbb
inc
mov
test
sbb
xor
mov
(bad)
out
imul
jno
(bad)
dec
cmp
pop
mov
mov
enter
stc
and
sti
jae
leave
jp
adc
test
add
or
inc
(bad)
lock
xor
dec
cmp
xchg
jnp
iret
xor
ja
sbb
in
add
cld
aam
add
jmp
mov
mov
add
or
adc
sub
imul
pop
adc
sub
clc
sbb
ins
leave
jle
out
add
dec
iret
lahf
pop
push
push
dec
sbb
psubb
mov
and
scas
mov
xchg
dec
test
(bad)
mov
test
arpl
in
fld
push
test
cmps
or
push
adc
push
enter
fwait
mov
mov
test
mov
sub
into
mov
int3
sub
pop
mov
cmc
mov
or
xchg
mov
pop
adc
addr16
or
aad
(bad)
sub
inc
inc
and
inc
mov
loop
or
mov
mov
push
sbb
and
icebp
icebp
inc
or
rcr
fst
mov
in
xchg
shl
fwait
sub
sub
daa
lahf
xlat
inc
add
test
dec
out
jno
push
mov
cmps
popa
xchg
dec
loop
aaa
or
ret
jne
es
sbb
lods
adc
xchg
adc
jne
mov
scas
push
mov
int3
pop
popf
repnz
pop
mov
repnz
ret
cli
shl
and
sub
sub
test
sbb
or
adc
or
inc
xchg
out
and
and
std
gs
stos
dec
and
mov
out
jb
out
pop
pop
mov
call
xor
inc
js
inc
sub
mov
adc
pop
std
dec
cli
cwde
div
xchg
out
sbb
stos
mov
add
ret
cs
add
cdq
mov
cmp
jle
sbb
aad
mov
dec
jb
mov
fcom
cld
xchg
dec
xor
fwait
pop
movs
out
adc
mov
mov
adc
mov
jnp
test
and
cmp
rol
push
jl
xchg
es
add
ret
pusha
xor
mov
retf
je
cmc
fbld
push
inc
pop
repz
int3
out
outs
movups
mov
mov
xchg
aad
sub
xchg
mov
sbb
sti
into
aad
pop
(bad)
lock
pop
pop
push
rcr
push
push
dec
fidivr
xchg
pop
arpl
test
inc
mov
shl
outs
add
jl
push
into
cdq
xchg
cmp
fisttp
and
cmp
loopne
cmp
push
or
or
jae
lock
push
out
add
imul
imul
neg
repnz
sub
dec
fiadd
cld
fisttp
xor
mov
jbe
inc
or
imul
repz
sbb
pop
hlt
jb
and
and
push
dec
adc
jb
or
or
dec
xchg
pop
aam
xor
mov
cmp
or
cmc
sub
xchg
push
test
mul
pop
inc
shl
xchg
xor
mov
fidiv
and
mov
test
add
nop
in
inc
out
rol
fcmovu
mov
lods
(bad)
and
int3
and
push
xchg
mov
pop
sub
loop
pop
sbb
mov
arpl
inc
push
xor
fwait
lock
mov
sbb
push
imul
call
lods
adc
jb
int3
pop
add
jbe
mov
jns
sub
pop
arpl
adc
ret
dec
(bad)
push
iret
push
scas
loopne
inc
out
dec
nop
and
test
nop
repz
aad
add
fmul
lea
lods
push
dec
jmp
lock
test
movs
xchg
adc
jecxz
push
sbb
sbb
adc
mov
mov
sbb
adc
sub
clc
push
adc
inc
aas
dec
cmps
pop
cmp
call
xchg
or
pushf
jecxz
pop
rol
cli
cmp
inc
icebp
test
dec
and
test
cld
sbb
mov
mov
aaa
je
jecxz
inc
add
pop
fs
inc
fild
repnz
test
add
daa
cmp
cmp
pop
dec
dec
pop
or
jp
sar
test
ins
cmp
push
out
inc
retf
xchg
rsqrtps
neg
aam
popa
loope
fcomp
aaa
add
pushf
mov
xlat
icebp
inc
js
jno
xchg
loopne
jge
adc
loope
adc
jnp
add
mov
inc
mov
rcr
sbb
push
fadd
in
stos
jp
imul
or
lahf
dec
in
xlat
imul
or
aaa
sbb
adc
adc
inc
xor
mov
(bad)
and
outs
aaa
inc
pop
xchg
ret
jae
mov
test
call
pop
popf
push
and
bound
dec
inc
push
push
sbb
push
jle
(bad)
loop
rol
retf
repz
ins
adc
pushf
jo
std
loopne
imul
xor
ret
mov
xchg
and
cld
cli
call
je
inc
call
pop
sub
repz
xor
stos
leave
test
sub
lahf
inc
je
ds
and
fild
scas
pop
inc
std
or
ss
xchg
(bad)
outs
aaa
clc
add
sahf
inc
dec
dec
js
jge
jns
imul
shl
push
dec
daa
fisttp
mov
std
cli
mov
xor
movs
(bad)
fs
sbb
ret
cwde
sub
retf
and
lea
popf
(bad)
jnp
push
xchg
and
and
lea
dec
enter
ficom
mov
inc
stos
dec
leave
popa
ret
lods
scas
sub
imul
pop
call
test
outs
push
out
jmp
sti
test
iret
adc
dec
ja
enter
hlt
jne
jmp
cmps
push
ficom
popa
test
stos
shl
lea
mov
sahf
mov
mov
cmps
add
xor
repnz
xchg
mov
inc
push
jecxz
jmp
or
pop
mov
fmul
adc
inc
adc
in
out
jp
and
movs
add
test
mov
add
cmp
dec
stos
push
in
bound
out
jmp
test
add
sub
cld
or
add
jno
jae
jle
fst
rcr
push
data16
push
xor
dec
std
arpl
into
jecxz
frstor
in
mov
push
adc
aas
aas
fiadd
adc
clc
and
xor
mov
jmp
push
or
xor
mov
mov
and
fsub
enter
mov
mov
cmp
stos
push
gs
ss
shl
daa
std
fcom
std
enter
adc
inc
lds
outs
(bad)
or
loopne
adc
cmp
mov
in
rol
xor
cmps
or
mov
mov
fcomp
jne
clc
xchg
out
dec
pop
add
add
sub
cmp
aam
jbe
ja
pop
mov
add
dec
jmp
icebp
mov
mov
mov
or
sbb
inc
push
cmp
ins
or
push
jle
idiv
pop
dec
jl
cs
sbb
rcr
inc
(bad)
push
neg
push
add
mov
call
mov
cmp
ds
xchg
sub
lock
call
xchg
push
pop
mov
xlat
or
pop
xchg
adc
clc
out
jl
mul
mov
and
and
dec
push
out
jns
out
jb
inc
stos
jb
push
lods
(bad)
lds
jmp
movs
std
and
retf
or
mov
aas
ja
ja
ss
out
lock
jl
call
aaa
fabs
jnp
sbb
and
pop
and
dec
sbb
xor
and
mov
repnz
or
lock
add
or
fisttp
sub
lds
jl
not
cmp
xchg
sub
scas
jmp
ins
mul
add
xor
outs
xlat
mov
inc
push
and
loopne
pop
xchg
in
push
mov
adc
std
sub
push
ds
jb
jnp
shl
call
hlt
or
and
aam
xchg
xor
pop
shl
out
xor
(bad)
jb
ja
sub
xchg
repz
dec
jae
pop
dec
lea
pop
lea
sahf
aas
pop
jmp
pop
mov
imul
lods
jge
hlt
xchg
xor
or
adc
mov
aaa
aas
adc
retf
ret
inc
scas
bound
ja
adc
dec
int
xor
loop
(bad)
xchg
sbb
in
cld
cmp
test
ret
stos
adc
sub
clc
lea
setle
add
shl
mov
cmp
and
mov
add
test
cwde
int3
fist
stos
mov
pop
dec
aaa
and
inc
shl
das
clc
adc
fcmovb
arpl
sbb
xchg
leave
xchg
or
ror
dec
push
push
popa
cdq
dec
fxch
arpl
jmp
movsx
xchg
retf
xchg
sub
inc
mov
ja
inc
aas
out
inc
adc
cmp
mov
call
shl
aad
stc
imul
fisub
dec
cld
sbb
cmps
rcr
icebp
push
retf
cmps
cwde
fadd
and
push
dec
sub
mov
fnstsw
fwait
or
and
scas
jp
je
es
ds
fwait
call
jp
fdivr
sbb
mov
mov
pop
xchg
mov
cmp
jmp
stos
adc
jge
leave
in
xchg
push
jne
mov
cdq
cli
sti
pop
adc
jns
cmp
mov
fadd
movs
adc
jl
fistp
bound
xchg
jno
add
(bad)
out
cmp
repz
pop
shr
hlt
dec
jo
jns
adc
leave
hlt
sub
fsubp
sbb
mov
or
aaa
adc
and
cmp
out
lods
sub
jmp
int
aad
cwde
ins
sti
mov
loopne
pushf
bound
mov
pop
mov
mov
in
xor
xchg
loopne
inc
aas
js
mov
jne
jae
sub
add
aas
cmps
daa
call
test
xchg
jnp
xor
stos
mov
rcr
stos
mov
jmp
mov
push
xchg
jne
popf
aaa
or
push
fsub
leave
adc
hlt
cmp
push
xchg
mov
cmps
lea
ds
adc
xchg
sub
mov
cmp
imul
push
jns
jle
xor
sbb
dec
or
mov
sub
mov
or
ds
mov
xchg
stc
or
hlt
lock
fistp
ror
fcom
es
mov
fcomp
das
loope
cmps
stc
cli
cmp
mov
and
mov
inc
outs
xor
mov
jns
cmp
mov
retf
sbb
loope
fsubr
inc
cdq
mov
das
jge
add
enter
std
adc
jb
(bad)
jo
add
nop
(bad)
(bad)
mov
and
ds
inc
popa
and
lea
sbb
sti
addr16
daa
aad
fimul
test
jb
sbb
pushf
movs
mov
inc
icebp
cmps
mov
(bad)
mov
jae
fcomp
and
retf
es
add
xchg
push
push
sub
jae
jp
out
dec
scas
addr16
aam
and
(bad)
and
jmp
sbb
outs
cmps
push
push
mov
pop
mov
xchg
sbb
(bad)
jmp
mov
dec
cmp
and
jmp
push
outs
into
stos
push
iret
fldcw
mov
test
cmp
xchg
push
or
and
inc
ins
std
ficom
stos
retf
pop
mov
dec
pop
jl
jns
mov
neg
and
mov
xchg
popa
xor
xchg
inc
ja
mov
pop
aas
xchg
pop
xor
(bad)
sbb
lahf
imul
push
mov
out
push
es
mov
(bad)
mov
lock
cld
lds
fldcw
push
in
and
cwde
mov
pop
data16
pop
adc
sbb
sbb
xchg
mov
movs
mov
(bad)
jae
ins
(bad)
cmp
ffree
pop
dec
jns
(bad)
sub
lds
shl
mov
sub
repnz
xor
adc
adc
adc
mov
push
ret
xchg
push
sub
sti
lea
xor
test
cmp
mov
repz
mov
std
rcr
cdq
out
sub
dec
sub
cs
mov
out
mov
shl
cwde
fiadd
sbb
retf
cdq
call
out
add
mov
pusha
aam
int3
clc
repz
dec
mov
movs
push
sub
jo
fwait
outs
fs
scas
rcl
imul
fwait
sbb
fcmovne
add
pop
cld
xchg
and
mul
push
dec
scas
fcomp
inc
sar
pop
xchg
popa
std
pop
hlt
inc
sbb
adc
scas
sub
push
xchg
and
mov
cld
cmps
xchg
test
lea
sbb
or
push
push
aas
lahf
pop
mov
lock
jne
sti
jnp
call
jg
push
sub
test
adc
popf
mov
mov
dec
pop
xor
(bad)
nop
mov
(bad)
sub
rcl
or
push
xlat
jecxz
scas
loope
test
rcl
adc
ins
pop
mov
add
push
sbb
adc
leave
je
loope
stc
xchg
jecxz
lea
(bad)
sahf
add
jg
fadd
dec
cmp
add
mov
sbb
xor
pop
xlat
sti
or
dec
mov
pop
es
mov
clc
xchg
xor
fstp
xchg
aas
sbb
inc
xor
data16
addr16
or
shr
out
jecxz
xor
clc
leave
mov
xor
or
xor
call
repnz
pop
bound
adc
repz
lds
mov
fcmove
inc
add
mov
mov
call
fstp
outs
and
hlt
cmp
push
push
js
fimul
adc
adc
pop
and
dec
mov
jp
outs
xor
sar
ins
jge
cmp
mov
inc
(bad)
fnsave
imul
dec
gs
clc
push
hlt
cmp
add
int3
out
sar
jne
sbb
stos
lods
lock
sub
sub
in
lods
inc
rcr
pop
push
jbe
(bad)
loope
gs
nop
data16
movs
(bad)
iret
pop
jnp
mov
sbb
jmp
lods
pop
into
adc
pushf
adc
shr
inc
dec
xchg
push
or
mov
jmp
cmp
dec
rcl
push
add
jnp
or
out
cli
aas
repz
sbb
and
fwait
scas
ret
sub
imul
jae
jne
ret
dec
jne
sub
sti
aam
test
add
and
mov
lock
scas
lods
lds
pop
pop
das
jecxz
jno
out
jbe
mov
call
pop
or
add
jle
inc
dec
mov
jl
cmp
mov
enter
daa
imul
pop
and
push
mov
popa
pop
adc
mov
cmp
or
cmp
sbb
mov
ins
or
dec
in
jecxz
push
inc
jns
js
and
or
and
call
adc
sbb
adc
inc
test
xor
clc
call
ficomp
mov
or
jmp
ret
(bad)
(bad)
fbld
pop
sar
sub
inc
pop
pop
mov
inc
pop
fcmovbe
fild
(bad)
push
mov
test
xchg
cmps
jge
lods
cmp
add
mov
cmc
push
inc
fist
sar
loopne
loope
xlat
dec
aad
and
pop
into
aad
test
push
dec
and
xor
jmp
in
push
cmps
imul
adc
inc
sti
rcr
mov
adc
std
xchg
jmp
inc
xchg
cmp
stos
mov
outs
loop
stc
sbb
int3
sub
mov
push
sbb
lock
pusha
push
retf
dec
mov
cmp
sbb
test
or
and
sbb
sub
lahf
pusha
xor
jbe
fisttp
xchg
(bad)
dec
outs
and
aas
pusha
daa
dec
stc
jo
cmc
and
add
and
xchg
ret
jo
rcl
pop
cmp
call
in
inc
inc
cmc
rcr
call
out
js
je
pop
fwait
scas
aaa
inc
xchg
push
push
jns
mov
int
bound
push
loope
(bad)
fdiv
mov
sbb
push
mov
or
xor
rol
add
(bad)
neg
es
iret
ins
pop
nop
xchg
jmp
inc
sub
aad
sub
mov
adc
mov
test
and
fist
sub
bound
mov
(bad)
out
out
cmps
(bad)
xchg
xor
mov
jge
sbb
stc
std
(bad)
xor
push
or
xor
sub
mov
call
in
push
adc
push
js
xchg
retf
cwde
inc
rol
push
push
add
mov
push
repnz
sti
cmps
mov
movs
daa
fwait
aaa
cmps
out
jg
and
mov
cmc
or
dec
inc
cli
inc
fidiv
mov
cld
sbb
mov
xchg
out
aad
mov
xchg
into
xor
int3
add
xchg
into
jne
xor
or
(bad)
vmovss
adc
dec
mov
ret
jo
repnz
cld
mov
(bad)
fs
jg
call
popf
es
int3
xor
mov
sbb
into
iret
test
add
mov
lahf
arpl
inc
xor
daa
arpl
xchg
add
mov
push
ror
cmps
xchg
fisub
jmp
mov
js
or
retf
xor
repnz
out
sub
lahf
add
and
or
pcmpgtd
shl
or
mov
mov
add
stc
ret
ret
mov
pop
int3
aad
xor
daa
out
push
xchg
cmp
loopne
xor
mov
leave
sbb
ret
or
adc
ins
not
data16
enter
cmc
lock
lds
add
sub
mov
in
sbb
sbb
add
adc
(bad)
mov
outs
cmp
and
aaa
xchg
rcr
outs
or
arpl
jmp
mov
sub
cs
sub
push
xchg
xchg
or
xor
push
add
push
movs
pop
sbb
les
cld
pushf
fsub
arpl
lods
xchg
mov
jae
mov
popa
sbb
dec
xchg
xchg
add
xlat
cmp
popa
shr
test
push
out
shl
jmp
mov
sub
dec
cmp
mov
pop
sbb
mov
out
jge
popf
mov
aad
test
lods
fistp
fwait
add
in
xchg
leave
xchg
fistp
jmp
jecxz
je
inc
mov
jne
mov
ds
and
arpl
js
adc
xor
xchg
imul
outs
outs
lock
sbb
inc
shl
mov
mov
jmp
aaa
cmp
loop
add
sahf
and
or
lods
jno
dec
ror
cmp
cli
xor
jmp
dec
jl
cmps
aad
cmp
sbb
fisttp
mov
sbb
in
and
pop
push
xlat
xchg
sbb
fild
xchg
adc
xchg
nop
ins
jmp
lds
(bad)
fisttp
test
jl
sub
scas
xchg
dec
mov
mov
pop
cwde
stos
pop
loop
mov
jno
sbb
cld
add
xchg
mov
sbb
stc
hlt
xchg
aam
pop
loop
sbb
into
sub
jecxz
fs
dec
jb
xlat
mov
scas
loope
push
pop
mov
cmps
jnp
in
xlat
jae
sbb
dec
inc
movs
gs
add
mov
call
xlat
ror
xor
scas
jne
xchg
mov
mov
ror
punpckhwd
and
sar
sbb
mov
test
rcr
or
fucomp
and
add
cdq
adc
fsub
cs
push
ss
loope
and
pop
dec
mov
shr
lock
sub
pop
dec
ja
mov
fiadd
outs
ins
and
xchg
dec
nop
shr
(bad)
pushf
mov
addr16
scas
xor
(bad)
je
dec
fmul
sub
aaa
push
mov
ficomp
lods
sbb
daa
dec
call
mov
push
test
cmc
fisttp
fcom
call
mov
pop
xor
or
cli
loope
pop
dec
stc
ret
add
(bad)
retf
pop
mov
jbe
xchg
pop
adc
mov
mov
pusha
aam
mov
mov
int3
sub
mov
loope
push
jl
in
cmps
mov
ins
mov
sub
and
xchg
mov
push
mov
das
or
fcmovb
pop
sbb
ins
sub
jg
sbb
mov
mov
xlat
pop
popf
aad
xchg
push
fbld
xor
xor
or
ficomp
in
mov
xor
or
mov
mov
mov
inc
retf
loopne
mov
out
pop
inc
push
xor
adc
xchg
inc
test
push
mov
jg
xor
mov
xchg
scas
lods
fmul
xlat
cmp
and
fs
or
das
(bad)
movs
test
adc
out
add
lea
sbb
repnz
lods
mov
cs
lahf
cmps
ret
xor
test
out
add
aas
pop
and
das
cwde
pop
push
loopne
inc
xor
xchg
imul
cmp
mov
retf
add
addr16
(bad)
into
lea
js
mov
loop
pop
push
cs
xor
retf
sti
sub
loop
mov
add
retf
fwait
cmp
hlt
stc
test
retf
jno
(bad)
push
pop
xlat
mov
dec
sub
pop
mov
mov
xchg
mov
imul
sbb
dec
mov
sub
xchg
lahf
mov
mov
js
out
and
inc
and
inc
sub
jge
pop
lds
retf
xor
in
(bad)
arpl
and
jae
mov
mov
(bad)
cmc
pop
data16
cwde
sub
shl
out
pusha
lock
stc
les
mov
and
faddp
push
in
idiv
mov
mov
jmp
sub
mov
dec
fcom
add
or
mov
xchg
pop
add
mov
xlat
ss
in
pop
pop
xchg
and
push
cmp
jo
ja
push
jb
(bad)
jle
fild
test
adc
inc
outs
pop
test
cmc
es
sub
in
mov
je
xchg
sub
xchg
sub
sub
sbb
loop
arpl
cwde
arpl
rcr
fcmovbe
shl
inc
push
daa
inc
xor
push
mov
(bad)
cwde
pop
xchg
lahf
aaa
in
(bad)
(bad)
aas
fcmovne
dec
call
push
dec
dec
leave
sahf
add
aad
mov
adc
fstp
inc
sbb
lods
inc
neg
fiadd
mov
fnstcw
pop
mov
int
xchg
sub
cmp
in
mov
fist
sub
repz
icebp
retf
sub
push
cmp
mov
jno
xchg
jecxz
dec
fcmovnu
adc
sbb
inc
adc
shl
jbe
stos
mov
add
inc
add
aam
mov
jmp
jo
stos
sbb
sbb
sbb
mov
retfw
in
dec
dec
adc
das
out
and
mov
(bad)
jo
cmc
out
stc
out
retf
in
cdq
fisttp
(bad)
add
sub
mov
call
mov
cs
dec
lock
xor
sub
or
xchg
ret
das
iret
mov
pop
daa
inc
push
mov
pusha
mov
ins
dec
xchg
sbb
fcom
jno
xchg
push
cmps
cmp
and
mov
leave
mov
out
pop
xchg
or
(bad)
sbb
rcr
add
imul
cmp
test
addr16
test
mov
add
sbb
fistp
xor
push
into
xlat
xbegin
scas
lods
jmp
add
je
xchg
or
icebp
popa
mov
and
xor
retf
jp
into
cmp
fiadd
iret
mov
cmp
cmp
adc
jl
pop
adc
jle
jns
lods
test
jmp
ror
mov
lea
imul
push
mov
mul
adc
nop
jnp
call
fcom
add
and
cmp
dec
cmp
xor
pushw
push
fldcw
xor
sar
pusha
aas
fisub
imul
je
rcl
aad
rcl
fs
xchg
mov
jo
gs
aaa
lahf
inc
pop
dec
xchg
jne
sbb
sahf
inc
lock
addr16
add
popf
dec
push
adc
enter
mov
rcr
stos
cmp
pop
xchg
movs
xchg
push
gs
push
adc
outs
cdq
add
sti
shl
mov
enter
lods
mov
lods
mov
mov
lea
xor
std
mov
cld
jns
sub
mov
xchg
push
mov
jne
sub
xchg
jnp
or
popf
pop
pop
popf
xor
loop
es
mov
sahf
dec
mov
into
jbe
in
(bad)
pop
(bad)
jmp
cwde
push
jbe
les
xchg
aam
pop
sub
aas
push
xchg
cld
lahf
sub
mov
jns
jns
xchg
or
cmps
stos
pop
arpl
jbe
adc
(bad)
inc
mov
ret
or
sbb
mov
inc
add
cmp
in
inc
enter
movs
jns
movs
stos
mov
lea
adc
adc
dec
retf
mov
stos
push
iret
inc
pop
lahf
and
fs
push
fs
fs
adc
test
jecxz
movs
fstp
daa
xor
adc
pop
popf
cmp
mov
(bad)
lds
pop
call
mov
mov
(bad)
xchg
jle
xor
jns
sub
(bad)
jo
call
xchg
fisub
fld
inc
movs
add
ret
test
jp
and
jb
mov
in
cwde
in
pop
cmp
jns
xchg
sub
bound
inc
inc
int3
int3
iret
fild
jne
and
lds
int
push
push
lock
cmp
and
mov
mov
mov
push
out
(bad)
cmps
sub
std
mov
and
lock
xchg
and
dec
in
push
push
addr16
jae
in
jbe
pop
in
in
pop
pop
data16
adc
xchg
jecxz
adc
(bad)
and
cmps
inc
push
sbb
fwait
push
inc
lea
pop
xchg
sub
sub
mov
or
retf
mov
push
mov
mov
xor
sub
jmp
fsubr
movs
call
loope
dec
sar
or
retf
jbe
clc
pop
adc
adc
or
push
jp
adc
push
call
(bad)
cld
loope
hlt
pusha
mov
jno
adc
inc
sahf
enter
das
lea
idiv
arpl
add
add
pusha
imul
cmp
aad
sub
fisubr
inc
stos
sti
mov
scas
lods
cmp
cmp
call
lods
fcom
test
jne
or
sub
dec
cmps
outs
pop
mov
js
and
popf
nop
rcl
fbstp
mov
lock
xlat
call
and
ins
cmp
and
aam
push
popa
sub
ja
shl
(bad)
jno
(bad)
into
mov
xchg
cmps
push
imul
mov
push
sbb
jae
jae
pop
aad
push
stc
mov
test
push
je
mov
push
inc
jmp
add
pusha
lods
pop
jg
pop
dec
aad
nop
dec
js
into
addr16
inc
test
inc
mov
mov
popf
lock
std
push
mov
inc
push
sub
add
xchg
out
jle
pop
cdq
test
repnz
out
push
mov
iret
mov
push
std
mov
cld
push
push
out
std
cmp
mov
mov
adc
ins
inc
add
jno
cmp
add
jns
ret
cld
mov
jmp
mov
std
pop
mov
and
xchg
push
ins
in
shl
xchg
push
dec
pop
es
add
stc
retf
popf
aas
icebp
or
push
repz
pop
and
pop
sbb
sbb
sub
cld
sbb
jl
or
fistp
mov
sbb
outs
jnp
fwait
add
jb
das
aam
test
xchg
xchg
sbb
fwait
sub
ss
aaa
(bad)
test
or
push
xchg
pop
jle
outs
push
pop
adc
mov
shl
addr16
pop
xchg
das
xor
xchg
jae
mov
adc
std
jmp
loop
fwait
sub
pop
js
or
or
(bad)
fild
jo
mov
push
pop
push
repnz
xchg
stos
ja
call
sub
jae
in
into
movs
retf
mov
hlt
das
jle
ret
mov
or
ret
fisub
pop
sub
loope
adc
sbb
push
jns
push
repnz
fistp
mov
pop
aad
jl
xchg
dec
or
fadd
adc
cmp
or
mov
fcom
ja
daa
push
ins
and
leave
jmp
mov
sub
gs
outs
das
fisubr
pop
jne
scas
aam
pop
mov
jno
test
mov
ins
hlt
and
mov
cmc
add
or
dec
in
call
dec
js
loope
jo
(bad)
ret
bound
retw
and
pushf
iret
inc
push
mov
cmps
jle
sar
jmp
and
ds
repz
addr16
test
push
adc
repnz
sub
add
dec
adc
adc
out
cmps
outs
not
das
cmc
paddsb
add
jmp
xchg
push
dec
inc
sbb
loop
rol
test
sbb
or
shr
mov
xor
push
add
fmul
xchg
dec
int3
retf
out
jp
dec
xchg
dec
and
mov
in
call
les
dec
js
jmp
fsubr
je
rcr
mov
inc
movs
ss
fs
or
aaa
imul
cdq
les
or
shl
and
aaa
add
pop
mov
push
push
cli
jge
dec
and
icebp
xor
and
mov
sbb
mov
sbb
dec
mov
cmp
push
pop
add
push
pushf
xchg
clc
push
sub
xchg
pop
imul
ins
mov
mov
dec
vpmacssdql
ror
out
idiv
imul
and
add
push
pushf
dec
cmp
xchg
jmp
or
xor
xor
scas
adc
fsub
push
iret
movs
movs
jmp
sbb
pop
in
ja
xchg
ret
fdivr
mov
dec
das
mov
int3
and
in
cmp
jbe
cld
movs
sub
shl
and
jbe
add
lahf
aaa
fstp
cld
es
into
add
push
fnstcw
and
jo
xchg
mov
jg
test
xor
test
adc
rol
xor
movs
sub
addr16
arpl
add
mov
ja
mov
pop
sbb
int3
frstor
xor
pop
sub
mov
out
sbb
jbe
mov
adc
in
and
int3
and
out
jbe
aam
mov
out
xchg
pop
jecxz
mov
xor
xchg
ret
add
push
mov
retf
sbb
adc
sti
movs
shl
stos
ficomp
pop
shl
cwde
or
sub
fs
repz
sahf
and
(bad)
repz
imul
pusha
pushf
out
mov
ds
jmp
adc
dec
mov
push
mov
jle
ror
mov
dec
and
pusha
jne
outs
outs
and
add
xchg
push
shl
push
test
inc
inc
loop
cwde
imul
cli
xor
aaa
adc
mov
aam
cdq
gs
sbb
add
dec
retf
cmps
xchg
or
jp
repnz
iret
or
push
out
das
xchg
mov
xchg
inc
loopne
mov
cmp
loop
push
(bad)
les
imul
ds
cmp
xchg
and
dec
cmc
add
test
push
ret
mov
adc
into
mov
mov
imul
jno
or
mov
aaa
scas
cmps
(bad)
shl
into
cmp
addr16
fidiv
fld
in
daa
or
pop
hlt
mov
sahf
pop
push
mov
ins
(bad)
or
mov
clc
push
pop
fstp
pop
cwde
hlt
mov
mov
repnz
mov
loop
sbb
jb
mov
dec
jl
cmps
arpl
xchg
and
retf
adc
(bad)
and
cmp
add
iret
test
int3
pop
int
int3
xor
xchg
adc
out
es
sti
sar
retf
stos
std
test
out
lea
addr16
daa
jne
sbb
jecxz
repz
push
loope
sbb
sub
mov
or
and
jl
cmp
mov
inc
repnz
pop
enter
dec
retf
pop
jnp
lods
scas
mov
xor
icebp
inc
test
call
fsub
(bad)
push
mov
das
jbe
mov
repz
inc
xor
repz
sbb
leave
in
jns
cmp
dec
mov
adc
out
jns
test
cwde
push
repz
adc
lahf
cmp
push
or
pop
les
popa
aad
jp
push
add
nop
aas
xchg
stos
inc
xchg
lods
fmul
enter
pop
scas
dec
add
movs
mov
sub
stc
aam
mov
sub
push
sub
stos
lock
sar
push
clc
push
jo
and
xchg
jno
mul
cmp
push
fscale
or
inc
sub
xor
daa
cld
xchg
lods
lock
sbb
adc
pop
cmp
inc
stos
jno
mov
adc
fcmovb
dec
mov
push
ret
rep
into
mul
lods
fldcw
sub
scas
jle
cmps
mov
xchg
push
(bad)
pop
add
add
sar
cmp
mov
inc
push
xlat
imul
adc
inc
lahf
mov
sar
mov
scas
stos
cld
add
retf
or
aad
inc
add
push
popa
lea
mov
sbb
adc
les
push
cwde
aaa
iret
mov
in
inc
cmp
les
cld
in
div
arpl
cmp
or
and
mov
mov
sbb
movs
es
adc
pusha
test
je
dec
mov
pop
ror
lods
dec
(bad)
mov
enter
cmps
enter
mov
test
fld
push
neg
mov
xor
nop
and
ds
dec
movs
rcr
push
adc
jle
rcr
push
xchg
aad
pop
mov
push
sub
jmp
pop
and
fcmovnu
push
aaa
mov
mov
xor
ds
cmc
add
pop
or
mov
in
mov
in
xor
test
jg
(bad)
stc
out
inc
aas
sbb
stos
mov
sbb
cmps
scas
call
popf
add
pop
jne
sub
cmc
je
push
(bad)
mov
jne
cmp
scas
xor
or
outs
or
add
mov
sbb
mov
stos
lea
iret
push
cmp
shl
cmc
loope
or
fs
sbb
fst
add
mov
data16
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
pusha
dec
test
rol
add
or
