adc
add
add
dec
add
add
add
add
add
add
add
add
push
pop
dec
add
and
adc
and
sub
add
add
add
add
xor
add
add
add
add
add
sub
add
or
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
sub
add
add
sub
sub
xor
add
add
add
add
jae
add
or
jae
add
or
jae
add
or
add
jae
add
or
add
adc
add
adc
add
add
add
add
add
add
and
add
and
push
sub
cld
adc
add
adc
add
add
add
add
add
add
and
add
and
push
sub
cld
adc
add
adc
add
add
add
add
add
add
and
add
and
push
sub
cld
adc
add
adc
add
add
add
add
add
add
and
add
and
push
sub
cld
adc
add
add
and
es
push
sldt
push
jae
add
or
add
or
and
inc
or
add
or
add
or
sub
add
and
push
add
push
and
sub
add
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
xor
add
add
push
add
adc
sub
add
and
push
add
push
and
sub
add
and
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
outs
add
or
push
sub
add
and
das
add
or
adc
add
add
xor
inc
add
add
add
adc
outs
xor
add
or
pop
sub
xor
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
xor
add
and
mov
mov
add
sub
add
xor
add
add
or
add
jle
add
add
bound
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
xor
add
or
or
call
add
sub
es
sbb
add
add
idiv
(bad)
(bad)
jle
add
add
fisub
or
pop
or
add
push
imul
add
add
(bad)
(bad)
call
jle
add
add
pop
sub
add
add
or
or
add
add
add
sub
add
sub
add
or
add
adc
add
sbb
add
or
add
add
add
xor
add
and
add
and
push
sub
cld
adc
add
adc
add
or
add
add
sub
add
or
push
sub
cld
adc
add
adc
add
or
add
add
pop
add
add
aaa
add
or
sub
sub
sub
push
sub
xor
add
add
add
add
add
sub
add
or
sub
sub
push
sub
add
xor
add
add
add
add
inc
or
sub
sub
or
adc
adc
sub
add
sub
sub
add
sub
add
xor
add
add
push
add
adc
add
add
add
adc
push
add
add
add
add
add
sub
add
sub
add
or
add
adc
add
inc
add
add
add
adc
jle
add
or
inc
or
sub
jle
add
or
sub
sub
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
sub
sub
sub
push
sub
add
adc
add
cmps
add
add
add
add
add
cmp
add
and
add
add
add
cmp
add
sub
add
or
add
or
add
sub
add
or
add
sub
or
add
cmp
add
or
add
cmp
add
or
sub
add
and
add
and
add
cmp
dec
add
push
and
add
and
add
inc
sub
add
and
add
and
add
pop
sub
add
and
add
and
add
sub
adc
add
inc
add
add
add
adc
sub
sub
add
push
and
add
and
add
push
sub
add
sub
add
push
sbb
inc
add
push
inc
or
sub
sub
sub
sub
add
push
add
hlt
add
add
add
xor
add
add
add
add
add
add
push
sub
add
sub
add
or
add
add
add
xor
add
add
adc
add
or
inc
add
push
sub
add
and
inc
add
or
add
or
lea
add
and
add
or
dec
add
push
and
add
and
add
and
fidivr
and
or
add
pop
adc
inc
add
push
sub
add
pop
sub
add
sub
add
and
add
and
add
or
or
inc
add
or
add
push
sub
add
add
add
add
add
dec
dec
add
daa
add
add
xor
add
add
adc
add
add
add
add
push
mov
or
or
inc
add
or
inc
add
or
or
inc
add
or
add
add
or
dec
add
push
and
adc
sub
add
and
adc
dec
add
or
add
and
sbb
inc
add
push
sub
add
adc
adc
sub
add
and
lea
add
and
sub
add
pop
pop
and
inc
add
push
inc
adc
adc
sub
sub
sub
or
lea
add
and
sub
add
(bad)
ins
pop
sub
dec
add
push
pop
sub
or
add
and
cld
add
sub
es
pop
xor
dec
add
push
and
add
or
or
sub
add
and
or
or
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
adc
dec
add
or
cmp
inc
add
push
push
pop
inc
sub
add
push
add
or
or
add
cmp
add
add
idiv
(bad)
dec
or
adc
sub
add
and
dec
add
or
add
push
and
add
sub
es
les
add
adc
dec
add
or
inc
add
push
push
pop
dec
sub
add
push
add
or
or
add
xor
or
ins
or
sub
add
and
dec
add
or
add
push
and
add
sub
es
ins
add
add
dec
add
or
sub
sub
sub
add
or
add
sub
add
and
add
and
sub
add
add
fidivr
or
or
pop
dec
sub
add
sub
add
and
add
push
and
add
and
add
and
add
or
or
inc
add
or
add
push
sub
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
daa
add
add
xor
pop
add
add
add
adc
sub
sub
add
push
and
add
and
sub
sub
push
sub
adc
add
mov
add
adc
add
add
push
sub
add
or
adc
push
sub
add
or
add
or
xor
add
outs
dec
add
or
inc
adc
adc
sub
(bad)
or
or
pop
sub
add
(bad)
or
inc
push
adc
sub
or
xor
sub
sub
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
pop
sub
add
sub
sub
add
add
(bad)
(bad)
inc
sub
sub
sub
xor
add
add
add
sub
add
sub
add
and
sub
add
or
or
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
push
add
or
add
or
add
and
push
sub
add
and
add
sub
add
and
dec
add
or
pusha
sub
add
and
or
or
add
sbb
sbb
add
(bad)
(bad)
call
push
push
sub
add
and
or
add
add
push
and
adc
sub
add
and
inc
add
or
push
adc
sub
add
adc
add
or
dec
add
push
and
adc
sub
add
and
add
and
add
adc
or
add
sub
add
or
or
add
jo
cld
sbb
add
add
idiv
(bad)
jmp
push
add
or
add
and
add
and
add
and
add
outs
push
add
or
add
add
push
and
adc
sub
add
sub
sub
sub
add
and
dec
add
or
add
or
add
aaa
sub
or
pop
or
push
and
add
and
add
or
add
sub
or
inc
add
or
sbb
or
add
add
add
add
sub
or
add
add
cld
pop
sub
add
add
add
cmp
add
cmp
add
add
add
add
add
add
xor
add
add
add
sub
add
sub
add
and
inc
add
push
sub
add
and
add
and
add
pop
js
inc
add
push
fisubr
add
or
sbb
dec
add
push
and
add
sub
es
adc
or
or
sub
add
fiadd
add
sub
add
add
add
add
dec
dec
add
sbb
add
add
add
jl
inc
add
push
sub
add
and
add
add
push
and
add
or
add
sub
add
jae
add
or
push
and
inc
add
push
and
add
push
outs
pop
add
or
add
sub
add
inc
or
sub
sub
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
outs
pop
add
or
jle
add
add
sub
add
add
fimul
or
sub
add
fiadd
add
sub
add
add
add
add
add
mov
add
sbb
add
arpl
add
push
add
adc
add
pop
sub
add
and
add
and
add
mov
add
sub
add
sub
or
and
inc
add
push
jle
add
add
add
and
add
push
jle
add
add
add
or
adc
or
or
sub
add
fiadd
add
sub
add
add
add
add
push
push
add
sbb
add
push
add
add
add
adc
add
cwde
add
add
inc
add
push
sub
pop
and
add
push
and
inc
add
push
pushf
pop
and
add
push
and
inc
add
push
pushf
pop
or
adc
or
or
sub
add
fiadd
add
sub
adc
add
add
add
add
sbb
add
sub
add
sbb
add
add
sub
add
push
sub
add
or
ficom
sub
or
sub
add
push
add
inc
add
or
add
push
sub
add
add
add
add
add
adc
add
daa
add
add
xor
xor
add
or
add
add
sub
push
add
add
lods
add
add
inc
add
push
outs
pop
add
or
fimul
or
sub
add
fiadd
add
sub
add
adc
add
add
add
and
or
sbb
or
dec
add
add
add
adc
add
and
add
push
and
add
and
add
adc
sub
add
and
add
sub
add
sub
add
and
ficom
sub
or
sub
add
push
add
inc
add
or
add
push
sub
add
add
add
add
add
xor
add
add
xor
add
add
add
adc
add
sbb
add
add
daa
add
push
sub
add
and
add
and
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
add
sbb
add
add
ficom
sub
or
sub
add
push
add
inc
add
or
add
add
add
add
add
add
cmp
add
daa
add
add
xor
sub
add
or
add
add
sub
and
add
and
add
and
fimul
or
sub
add
fiadd
add
sub
add
adc
add
add
add
sbb
or
sbb
push
add
add
sub
push
add
sub
add
push
add
sub
add
add
add
add
adc
add
nop
add
push
and
add
add
inc
add
push
or
mov
inc
add
push
or
xor
add
and
add
xor
add
pusha
adc
adc
sub
sub
sub
sub
add
stc
add
sbb
add
and
add
push
and
add
or
add
popa
add
or
mov
inc
add
push
inc
adc
adc
sub
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
rol
add
inc
add
push
jae
add
or
or
or
add
or
add
or
add
add
push
mov
push
add
or
inc
add
or
or
or
pop
sub
add
and
add
sub
add
pop
sub
or
sub
add
and
add
sub
add
and
add
or
or
or
or
push
adc
and
add
add
inc
add
push
adc
outs
inc
add
or
add
sub
add
fisubr
add
or
or
sub
dec
add
push
and
add
and
add
and
sub
dec
add
push
and
add
and
nop
add
push
and
add
push
sub
add
and
add
add
inc
add
push
inc
adc
adc
sub
sub
sub
sbb
add
add
(bad)
(bad)
jmp
sub
add
and
add
data16
or
adc
jle
add
add
loopne
add
sub
add
jle
add
add
add
push
and
add
or
adc
or
dec
add
or
add
sub
add
outs
push
es
and
add
add
inc
add
push
outs
imul
or
add
or
adc
outs
imul
or
adc
push
xor
ins
add
or
add
or
or
or
sub
add
and
add
add
push
add
push
jae
add
or
add
or
or
or
add
add
outs
add
or
sub
add
add
add
sub
add
and
add
and
add
sub
add
inc
adc
adc
sub
sub
sub
sbb
add
add
(bad)
(bad)
jmp
sub
add
and
add
data16
or
sub
add
push
jae
add
or
add
push
and
add
sub
add
inc
or
hlt
add
add
inc
add
push
inc
pop
adc
adc
sub
sub
cld
adc
push
aaa
add
push
jae
add
or
add
or
push
adc
sub
add
push
and
add
add
fld
sub
or
sldt
jle
add
add
popa
add
or
adc
add
or
add
add
jo
add
add
sub
add
sub
add
and
adc
add
sbb
sbb
add
add
idiv
(bad)
jmp
sub
add
and
add
add
or
or
sub
add
fiadd
add
clc
add
add
inc
add
push
sub
add
add
sub
add
add
inc
add
or
add
add
inc
xor
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
jb
add
and
add
add
or
or
add
add
add
sub
add
sub
add
add
sbb
add
add
add
adc
add
jae
add
and
sub
add
add
add
or
add
and
add
or
add
inc
add
push
or
add
push
and
add
add
inc
add
push
ficom
add
sub
sub
or
adc
adc
add
pop
xor
dec
add
push
and
add
and
add
and
add
and
add
add
add
sub
add
(bad)
adc
add
add
sub
sub
add
or
add
cmp
jle
add
add
add
or
add
sub
add
inc
adc
adc
sub
sub
cld
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
jns
add
add
fadd
sub
add
add
add
or
cwde
mov
add
sbb
add
add
add
add
add
add
add
and
add
sub
add
and
add
add
inc
add
push
and
add
sub
add
outs
jp
add
and
imul
or
and
add
add
inc
add
push
or
add
add
or
or
pop
add
and
sub
add
add
idiv
(bad)
call
sub
add
or
das
add
push
and
sbb
cld
sbb
add
add
(bad)
(bad)
jmp
sbb
add
sub
add
sub
sub
cld
and
add
add
inc
add
push
or
pop
sub
pop
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
or
sub
add
fiadd
add
sub
add
add
add
add
or
ds
add
adc
add
jne
add
sbb
add
jnp
add
and
add
sub
add
pop
or
and
add
sub
add
sub
xor
dec
and
add
add
inc
add
push
or
aas
pop
sub
cs
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
sub
add
sub
cs
sbb
add
add
(bad)
(bad)
jmp
cmp
add
sub
add
sub
add
add
xor
into
add
add
add
adc
and
add
sub
add
sub
add
and
add
pop
add
or
pop
add
or
add
sub
add
or
add
add
or
push
and
add
inc
add
push
and
add
sub
add
outs
pop
add
or
dec
add
add
inc
add
push
inc
or
jle
add
add
and
add
sub
add
or
push
sub
add
add
dec
add
outs
pop
add
or
jle
add
add
and
add
inc
add
push
or
xor
and
add
sub
add
or
and
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
pop
add
or
pushf
sub
sub
sub
sub
pop
sub
add
xor
add
add
adc
add
sub
add
and
sub
add
add
pop
add
add
inc
add
push
inc
adc
adc
sub
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
add
inc
add
push
adc
add
add
stc
adc
or
add
or
add
or
add
or
add
add
inc
add
push
sub
add
and
add
sub
add
inc
sub
add
push
and
pop
adc
sub
sub
sub
sbb
add
add
(bad)
(bad)
jmp
ins
add
add
inc
add
push
or
pusha
add
add
jo
add
sub
add
(bad)
adc
adc
add
push
mov
add
pop
adc
sub
jmp
and
or
add
sub
add
or
inc
add
or
sbb
inc
add
or
add
and
add
sub
add
or
add
add
cld
push
sub
add
add
add
add
call
add
add
xor
dec
add
add
add
adc
and
add
inc
add
push
or
sub
sub
sub
add
push
and
add
and
sub
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
add
leave
sub
push
sub
add
xor
add
add
add
add
adc
sub
add
and
add
pop
add
or
sub
sub
sub
push
sub
sbb
push
add
add
add
add
adc
and
inc
add
push
adc
adc
sub
sub
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
add
add
add
and
add
push
sub
adc
adc
and
inc
add
push
and
add
push
pushf
adc
and
inc
add
push
and
add
push
pushf
adc
and
inc
add
push
and
add
push
pushf
adc
and
inc
add
push
and
add
push
pushf
adc
and
inc
add
push
and
add
push
pushf
adc
and
inc
add
push
and
add
push
pushf
adc
and
inc
add
push
and
add
push
pushf
adc
and
add
add
inc
add
push
and
add
add
inc
add
push
pushf
adc
or
jae
add
or
add
or
add
adc
enter
sub
add
outs
add
or
and
add
add
inc
add
push
adc
adc
sub
sub
sub
sbb
add
(bad)
(bad)
jmp
dec
add
or
adc
rol
add
sub
add
outs
test
add
add
pop
and
add
add
inc
add
push
jae
add
or
add
adc
xchg
add
and
add
add
dec
add
push
and
add
or
add
or
add
add
add
add
add
or
add
add
dec
add
push
and
add
or
add
or
add
or
adc
call
inc
add
push
outs
mov
add
add
or
add
mov
add
and
add
sub
add
jae
add
or
push
add
lock
add
inc
add
push
adc
adc
sub
sub
sub
pop
inc
add
add
idiv
(bad)
jmp
dec
add
or
adc
add
hlt
add
add
inc
add
push
add
add
push
and
add
or
adc
outs
imul
or
add
xor
push
jle
add
add
add
clc
add
add
inc
add
push
inc
adc
adc
sub
sub
cld
sbb
add
add
(bad)
(bad)
call
push
outs
jns
add
add
fmul
outs
pop
add
and
xor
add
sub
add
add
cld
add
add
inc
add
push
inc
adc
adc
sub
sub
cld
sbb
add
add
(bad)
(bad)
call
add
jns
add
add
fadd
fidiv
or
add
add
add
add
add
sub
add
inc
adc
adc
sub
sub
sub
sbb
add
(bad)
(bad)
dec
outs
jns
add
add
fsub
add
add
sub
add
adc
adc
sub
sub
sub
sub
add
add
or
add
add
cld
push
sub
add
add
add
sti
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
test
add
xor
add
add
add
add
add
or
add
mov
add
mov
add
add
add
add
xor
add
add
add
add
add
sub
sub
add
push
add
sub
sub
sub
add
add
xor
add
add
add
add
add
sub
sub
add
add
sub
sub
sub
add
add
xor
add
add
add
add
add
sub
sub
add
push
add
sub
sub
sub
add
add
xor
add
add
and
add
add
add
add
add
add
xchg
add
or
sub
mov
add
sub
add
or
add
jae
add
or
pop
adc
add
jle
add
add
sub
sub
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
and
add
sub
add
xor
add
add
add
add
adc
jle
add
add
sub
sub
sub
push
sub
add
or
or
add
add
add
sub
add
adc
add
sub
adc
add
add
add
add
add
cmp
add
and
add
sub
add
and
add
jle
add
add
xchg
add
or
sub
sub
push
sub
add
xor
add
add
add
add
cmp
add
and
add
sub
add
sub
add
and
add
xchg
add
or
sub
sub
push
sub
add
xor
cmp
add
and
add
add
cmp
add
and
add
sub
add
and
add
jle
add
add
xchg
add
or
xor
add
and
xchg
add
push
or
add
add
add
sub
add
xor
add
add
add
add
add
add
add
push
sub
sub
add
add
sub
add
xor
add
add
add
add
add
add
sub
add
add
xor
add
add
add
jle
add
add
sub
sub
sub
push
sub
adc
add
adc
add
and
sub
add
and
sub
sub
push
sub
add
push
add
sub
add
sub
xor
add
add
adc
outs
inc
add
or
mov
add
and
add
add
inc
add
push
or
push
add
outs
dec
add
or
or
rcl
add
and
add
add
inc
add
push
arpl
popa
rcl
add
and
add
sub
add
bound
add
rcr
add
sub
add
pop
or
pop
sub
sub
sub
sub
xor
add
idiv
(bad)
call
sub
add
es
jae
add
or
fild
add
xor
add
add
adc
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
add
or
add
or
mov
call
add
or
add
or
popa
push
sub
add
and
add
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
jle
add
add
sub
add
or
push
add
add
add
add
add
add
sub
sub
add
xor
add
add
add
add
add
add
add
sub
sub
add
xor
add
add
add
add
jle
add
add
sub
adc
push
add
add
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
or
inc
add
add
idiv
(bad)
jmp
jle
add
add
add
push
sub
add
adc
add
add
add
adc
add
add
aas
jb
add
jo
push
sub
add
or
add
or
mov
call
sub
add
or
outs
add
or
popa
push
sub
add
and
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
xor
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
push
jle
add
or
sub
es
add
add
push
outs
call
pop
sub
sub
add
add
add
dec
add
add
add
add
add
add
sbb
add
xor
add
sbb
add
(bad)
(bad)
(bad)
jg
sbb
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
adc
outs
xor
add
or
pop
sub
xor
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
xor
add
and
add
sbb
add
mov
add
adc
outs
xor
add
and
jg
add
mov
or
push
das
and
inc
add
add
idiv
(bad)
call
sub
add
es
jb
add
jo
mov
or
push
das
adc
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
addps
push
pop
outs
dec
add
or
outs
cs
push
pop
outs
dec
add
or
adc
add
(bad)
(bad)
(bad)
jle
add
add
add
pop
adc
add
or
add
add
sub
es
add
and
add
movs
add
or
add
add
add
adc
add
add
add
add
sbb
add
and
add
sub
add
jle
add
add
or
cmps
add
or
popa
push
sub
push
and
pop
sub
push
sub
add
add
add
or
push
sbb
pop
add
add
sbb
add
sbb
add
adc
add
add
push
add
push
and
es
popa
push
sub
push
or
add
sub
add
adc
add
add
add
or
or
adc
pop
add
add
add
add
adc
or
add
add
pop
or
or
outs
test
add
or
pop
or
sbb
icebp
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
ror
jecxz
add
jae
add
or
add
sub
adc
push
outs
stos
add
or
adc
or
sub
adc
add
push
push
push
outs
stos
add
or
pop
adc
adc
and
adc
or
or
sbb
add
(bad)
(bad)
call
adc
sub
push
pop
pop
adc
adc
adc
push
and
adc
sub
sbb
add
add
(bad)
(bad)
jmp
sub
add
and
add
and
add
push
outs
mov
add
jle
add
add
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
adc
add
outs
stos
add
or
add
or
movd
add
add
sbb
add
lods
add
or
add
add
push
lods
add
or
add
mov
add
adc
adc
outs
scas
add
or
or
add
or
adc
outs
scas
add
or
add
and
or
add
or
add
and
outs
mov
add
and
sub
add
or
adc
outs
stos
add
or
adc
adc
adc
push
outs
mov
add
and
sbb
add
or
adc
outs
mov
add
adc
or
pop
push
outs
stos
add
or
mov
add
idiv
(bad)
inc
adc
add
add
or
or
stos
add
or
adc
add
add
or
pop
imul
movd
add
add
movhps
movaps
imul
sbb
add
push
push
push
lods
add
or
add
add
or
pop
cmp
sbb
add
add
add
(bad)
(bad)
(bad)
jle
add
add
add
add
add
add
idiv
(bad)
(bad)
jle
add
add
outs
stos
add
or
outs
lods
add
or
movd
add
sbb
add
lods
add
or
add
add
push
lods
add
or
push
jae
add
or
adc
call
adc
adc
test
add
and
adc
adc
adc
outs
stos
add
or
adc
xor
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
adc
adc
outs
mov
add
adc
adc
das
int3
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
pop
sub
pop
outs
pop
add
and
stos
add
or
add
or
test
add
adc
adc
adc
add
push
and
add
or
adc
add
xor
add
add
add
add
add
sub
add
or
add
xor
ret
add
add
add
and
add
sub
add
sub
adc
add
and
add
sub
add
and
dec
add
push
mov
sub
add
and
add
add
inc
add
push
adc
sub
add
pop
or
sub
add
sub
add
sub
es
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
xor
add
sub
add
or
and
add
sub
add
pop
adc
adc
adc
push
imul
add
add
(bad)
(bad)
jmp
cmp
add
sub
add
sub
sub
adc
add
daa
add
add
cmp
add
sub
add
jae
add
or
add
push
outs
mov
add
sub
add
and
cmp
add
sub
adc
add
das
add
add
add
sub
add
and
cwde
add
add
dec
add
push
and
add
add
dec
add
push
push
sub
es
add
or
add
xor
add
add
adc
mov
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
adc
fucom
add
add
sub
add
sub
add
and
add
and
inc
add
add
dec
add
push
and
add
and
das
sbb
add
add
(bad)
(bad)
inc
outs
jo
add
and
inc
add
add
idiv
(bad)
jmp
inc
add
add
inc
add
push
adc
fisttp
pop
add
push
and
add
add
inc
add
push
and
add
inc
add
push
or
pop
add
push
and
mov
xchg
add
and
inc
add
add
idiv
(bad)
inc
and
add
dec
add
push
and
add
and
add
inc
and
add
sub
add
adc
add
push
and
inc
add
add
idiv
(bad)
call
add
add
add
idiv
(bad)
jmp
push
add
add
inc
add
push
adc
fucomp
add
add
or
sub
add
and
pop
add
add
inc
add
push
adc
and
add
inc
add
push
jae
add
or
push
add
push
fimul
and
add
sub
add
adc
fiadd
adc
sub
sbb
add
add
idiv
(bad)
jmp
add
add
inc
add
push
adc
fst
cdq
add
add
dec
add
push
and
add
adc
adc
and
dec
add
push
and
add
adc
adc
sub
sbb
add
add
idiv
(bad)
jmp
push
inc
add
push
and
add
or
push
popa
add
push
jae
add
push
jle
add
or
add
push
es
add
add
sbb
inc
add
add
idiv
(bad)
jmp
ins
add
add
inc
add
push
adc
ficom
add
add
fiadd
and
add
sub
add
sub
or
add
add
add
add
les
add
pop
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
jle
add
jg
add
std
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
xor
add
add
add
add
add
sub
add
or
add
add
sub
add
sub
add
add
mov
add
and
add
mov
add
add
add
sub
add
sub
ror
add
add
add
add
sub
add
add
add
add
sub
add
sub
add
or
add
add
add
add
add
and
add
rol
or
add
add
add
add
sub
add
sub
add
inc
add
add
sbb
adc
add
add
gs
sti
int3
sbb
and
xchg
push
sti
mov
mov
pop
bound
add
xchg
lea
stos
sbb
xchg
pop
cdq
fld
ins
rcr
and
js
mov
test
nop
popf
mov
mov
sbb
es
fist
es
fwait
adc
loopne
sti
repnz
shl
sti
retf
ror
out
cmp
cmps
inc
and
adc
and
xchg
rol
scas
xchg
movs
int
(bad)
aaa
test
jnp
(bad)
(bad)
jns
inc
(bad)
aad
jle
into
dec
sbb
xchg
fwait
xor
dec
les
test
dec
test
fsub
gs
push
int
inc
dec
pop
xchg
es
cmp
(bad)
fimul
or
xchg
and
jmp
or
out
and
stos
xor
dec
pop
scas
(bad)
pop
pop
dec
pop
push
retf
ror
int
or
mov
popf
pusha
lods
mov
mov
and
test
imul
sub
jb
jbe
mov
and
fcomi
lds
repz
pop
adc
in
cmp
jl
dec
ja
push
pop
xor
or
push
fwait
not
xor
cmps
nop
dec
fidivr
fadd
test
mov
sar
into
xlat
fidivr
add
cmp
pop
lds
jns
clc
arpl
xor
clc
sub
fimul
pop
and
lock
cmps
cwde
mov
and
clc
test
xor
push
jecxz
push
loopne
mov
or
add
movs
or
cmp
test
dec
aaa
call
stos
inc
or
dec
mov
pop
xchg
jmp
mul
ficom
mov
xchg
xchg
sbb
xlat
test
add
push
xor
jns
cs
push
and
in
mov
fcom
pop
test
dec
jmp
xchg
in
push
ds
adc
or
bound
dec
jmp
fistp
jmp
mov
push
rcr
loopne
xchg
dec
enter
lods
je
cwde
add
sahf
out
cdq
call
out
dec
test
sbb
ins
xchg
or
mov
mov
sub
leave
cmp
and
xchg
outs
movs
sub
sbb
xchg
push
aad
lea
add
adc
aad
es
(bad)
call
rol
aas
xchg
scas
mov
jle
adc
push
add
neg
imul
je
dec
pop
cmps
cmps
(bad)
and
push
sbb
sbb
popf
mov
sub
les
inc
rcr
jmp
(bad)
cmp
mov
mov
xor
or
test
pop
repz
dec
fs
out
test
xchg
xchg
cwde
ins
mov
mov
dec
push
inc
bound
xchg
mov
and
ja
xchg
jae
es
fcmovb
sbb
arpl
clc
sbb
imul
mov
sbb
adc
pop
(bad)
(bad)
pop
lods
push
sub
ror
je
call
sub
dec
jle
es
push
sbb
mov
test
lock
push
or
mov
movs
fstp
mov
inc
jnp
fsub
fwait
jbe
js
sub
cmp
ret
out
lea
xchg
xchg
jnp
inc
jp
shl
xor
jl
xchg
sub
xor
xchg
push
and
inc
jle
lahf
icebp
aaa
sti
int
mov
clc
mov
inc
adc
lods
cmp
xchg
pusha
sbb
call
outs
cmp
mov
mov
aad
les
cdq
gs
aam
cmps
jg
push
mov
(bad)
test
mov
push
sbb
pop
out
inc
dec
rcr
retf
mov
pop
iret
mov
imul
pop
test
(bad)
jg
mov
push
gs
int
sbb
jno
and
stos
fild
ret
cmp
call
and
jecxz
mov
in
fld
sahf
or
inc
xchg
and
les
lods
cmps
stos
loop
test
mov
loope
mov
and
xor
sub
sbb
fild
cmc
cmp
or
mov
lds
loope
sub
xchg
pop
mov
pop
sub
int3
mov
bound
pop
sbb
(bad)
jno
rcl
shl
pop
(bad)
inc
loopne
and
sub
inc
adc
dec
xchg
jge
cld
dec
movs
std
adc
pop
add
test
push
es
mov
sbb
loop
xor
push
push
cdq
iret
leave
test
mov
or
or
inc
or
and
stos
push
add
push
repz
lods
sub
cmp
jge
ss
vpsrlw
pop
or
pop
or
bound
push
add
jl
daa
xchg
adc
loopne
and
stos
xor
fs
jecxz
push
mov
or
aaa
cmp
mov
in
xchg
arpl
mov
push
jb
sub
popa
test
add
sub
fstp
out
add
bound
inc
mov
mov
fcom
lods
dec
cdq
jmp
and
rcr
ror
ja
cmp
retf
fdiv
push
sub
in
(bad)
fsub
push
outs
push
pop
xor
pop
call
mov
and
mov
mov
pop
jnp
mov
dec
inc
je
cmp
mov
adc
jg
mov
xor
push
cmp
push
jae
mov
shl
pushf
inc
mov
out
mov
pop
sbb
sub
pop
iret
or
inc
repnz
(bad)
cli
jnp
(bad)
dec
pop
push
cli
lods
(bad)
cmp
mov
ss
stc
iret
sub
fisub
push
xor
jmp
jle
or
in
add
dec
in
adc
mov
out
repz
cmp
adc
cmps
cmp
out
stc
mov
nop
out
pop
pusha
dec
mov
dec
shl
lods
mov
mov
pop
pop
clc
movs
ss
je
ja
xchg
aad
mov
dec
jns
clc
mov
push
or
shl
call
sahf
or
inc
or
fist
test
ds
cmps
ja
ret
pushf
inc
movs
shl
dec
pop
pusha
shr
clc
ret
and
mov
cmp
cli
dec
push
dec
pop
scas
sub
dec
xor
cmp
or
mov
jge
lods
icebp
jbe
xchg
and
pop
inc
ret
mov
inc
cmps
int
cs
mov
(bad)
jae
std
and
frstor
lahf
int
popf
(bad)
push
lock
add
sub
push
xlat
sbb
std
inc
mov
sbb
in
(bad)
fisubr
daa
or
arpl
xchg
pop
add
mov
pop
ror
push
xor
into
xchg
or
retf
add
imul
push
dec
jno
jo
lds
sub
ret
movs
and
and
repnz
xchg
jmp
push
fs
js
xchg
out
xchg
repz
test
idiv
mov
(bad)
jbe
ror
test
and
push
inc
dec
xchg
or
rol
mov
(bad)
push
dec
sub
shr
fidiv
ror
inc
mov
adc
push
pop
mov
pop
inc
sbb
pop
pop
mov
pusha
jl
xor
adc
push
fild
push
lock
lea
mov
mov
stc
adc
xlat
loope
stos
sbb
mov
dec
cmpxchg
rcl
cmp
mov
data16
cdq
in
in
mov
test
stos
cmp
sti
pusha
mov
dec
xchg
adc
xor
loopne
xor
aas
test
dec
sti
lea
test
into
nop
leave
rcr
mov
xor
push
jno
push
leave
mov
inc
lds
pushf
push
call
aad
(bad)
ins
lds
lods
test
lock
cs
enter
adc
bound
push
cmp
mov
xor
leave
lods
jns
pop
jmp
scas
inc
mov
(bad)
neg
mov
inc
dec
inc
mov
lods
sahf
aam
sbb
sahf
sbb
mov
retf
pop
mov
push
add
add
xchg
mov
push
add
lds
fadd
ds
test
retf
mov
dec
lock
mov
mov
rol
push
xchg
jmp
push
mov
sbb
(bad)
sti
daa
or
xor
fimul
mov
fldcw
(bad)
cmp
mov
adc
jns
push
mov
sbb
shr
outs
repz
in
push
mov
xchg
mov
icebp
mov
lods
loope
clc
jg
jmp
out
(bad)
in
mov
dec
(bad)
xor
and
cmc
into
or
test
push
out
sbb
call
ficom
lods
push
enter
adc
clc
mov
push
jle
inc
cmp
cmp
hlt
xor
lods
dec
(bad)
test
fcom
or
arpl
push
arpl
call
jmp
repz
inc
adc
aam
jge
and
jmp
lea
jle
lock
dec
cmp
(bad)
(bad)
les
dec
jle
mov
xor
es
pushf
idiv
mov
push
in
or
mov
push
in
add
lods
fdivr
ins
jle
cmps
jecxz
mov
test
adc
out
lahf
rcl
pusha
dec
adc
mov
retf
jns
push
sbb
jecxz
sbb
sub
dec
nop
inc
cli
mov
cmp
xchg
scas
aas
mov
mov
mul
rcl
adc
inc
jp
or
es
jne
retf
push
ficomp
push
call
rcl
dec
mov
jmp
lea
jnp
mov
int3
mov
xlat
imul
in
inc
mov
jmp
leave
repnz
scas
leave
add
mov
cmps
movs
pop
gs
fisub
and
mov
add
dec
icebp
inc
sahf
std
lods
bound
out
add
jl
cmc
xor
jbe
clc
int
push
(bad)
mov
jle
jmp
inc
cmp
xchg
(bad)
ror
fwait
xchg
ja
inc
cli
mov
xchg
add
gs
pop
sti
fwait
ret
test
retf
das
xor
test
cdq
jo
adc
out
adc
dec
daa
in
adc
dec
in
sbb
les
and
mov
lock
inc
sti
hlt
inc
jnp
mov
loope
xchg
mov
fisub
jmp
outs
jecxz
ds
addr16
mov
sbb
mov
jns
jne
cmp
inc
adc
xor
cmp
xor
or
arpl
cmp
and
(bad)
sbb
push
es
xchg
or
inc
mov
outs
shl
lea
xchg
cmp
xchg
mov
mov
fwait
rcl
movs
pop
js
push
mov
imul
push
pop
jge
dec
jae
shl
xor
xchg
call
movs
pop
daa
sar
sahf
ins
inc
outs
xor
jecxz
ret
and
daa
push
xchg
jnp
imul
mov
mov
retf
mov
add
in
pop
mov
movs
gs
sub
fcomp
xor
js
mov
daa
lds
dec
fild
add
sbb
dec
test
xchg
xchg
icebp
into
push
in
aad
mov
cmps
pop
pop
test
jecxz
mov
push
aas
pop
aaa
shl
pop
fsubp
loopne
hlt
jge
dec
inc
sar
inc
mov
adc
push
outs
ins
jno
rcr
add
stc
aad
mov
pop
jno
xor
dec
inc
or
call
inc
ret
inc
jmp
inc
pop
push
stos
in
pop
std
out
and
scas
rcr
add
jae
dec
xor
xor
cmp
adc
jmp
inc
ins
inc
pop
push
push
cmp
in
sti
pop
popf
inc
ret
mov
repnz
or
test
adc
lods
or
lods
mov
mov
fs
or
push
shr
into
pop
sar
in
xchg
push
mov
push
(bad)
push
cli
movs
xlat
cmp
ret
repnz
dec
push
add
pusha
icebp
loop
out
inc
mov
adc
pushf
pushf
je
xchg
and
and
mov
mov
push
(bad)
xchg
pop
dec
xchg
jno
aaa
lods
outs
jb
pop
xor
mov
sub
je
sub
add
lock
dec
adc
pop
xchg
push
cmps
push
mov
sub
jo
or
daa
movs
mov
outs
adc
push
mov
sub
in
or
sbb
stos
sbb
icebp
and
jnp
stos
pop
dec
sub
out
xor
ss
mov
arpl
lahf
ins
outs
push
in
push
mov
sbb
inc
or
call
push
inc
data16
mov
es
inc
inc
mov
test
mov
fcomp
ror
cmc
push
or
xchg
fnstcw
mov
pop
push
and
jg
add
pop
loop
test
(bad)
clc
inc
inc
pusha
fbstp
popf
retf
out
inc
and
or
loop
add
daa
cdq
into
fisubr
mov
mov
inc
xchg
stos
pushf
loope
or
out
div
pop
cmp
repnz
xor
icebp
mov
pop
add
jl
out
and
cmp
cmps
or
mov
movs
jb
sub
mov
inc
mov
les
push
or
sub
or
aam
add
retf
(bad)
xor
mov
push
in
push
mov
dec
jb
lods
lods
or
dec
into
shl
pop
dec
or
xchg
(bad)
test
dec
fldcw
mov
mov
ins
xchg
(bad)
fdiv
(bad)
xlat
push
lods
inc
outs
xchg
ja
adc
push
bound
add
xchg
sbb
call
pop
packssdw
(bad)
mov
sub
inc
fwait
iret
xchg
push
nop
js
fimul
repz
ror
inc
int
mov
aaa
mov
shr
pop
inc
mov
sbb
je
mov
jbe
push
xor
ret
add
or
fdivrp
pushf
sbb
inc
jbe
mov
cmps
or
stos
inc
mov
jecxz
mov
nop
pushf
test
mov
xchg
ds
imul
cld
sub
jns
je
jne
ins
stos
push
cmp
stc
adc
popf
or
dec
mov
shr
retf
cs
mov
int
jmp
lods
ins
repz
in
gs
adc
or
add
xchg
sub
scas
lahf
in
cmp
inc
out
and
dec
and
sub
not
sbb
rcl
jge
mov
sti
push
in
mov
mov
shl
adc
jmp
test
js
add
add
xchg
setns
lea
mov
or
mov
fstp
mov
lea
mov
push
inc
neg
cmp
scas
stc
pushf
mov
dec
add
xor
inc
push
int
mov
loope
jmp
ins
imul
inc
repz
das
out
cmp
fadd
mov
cwde
aad
push
mov
repnz
pop
add
xor
fs
aam
outs
push
xor
cli
pop
push
cmp
push
and
pushf
sub
sbb
clc
add
repnz
scas
popf
bswap
jg
xor
add
in
sbb
inc
cdq
push
jno
aad
pushf
jmp
loopne
shl
sbb
lea
imul
outs
daa
xchg
adc
dec
sbb
cld
or
int
add
adc
pop
jg
adc
mov
adc
leavew
rol
push
push
sub
test
and
xor
ffreep
repz
retf
cmp
shr
mov
arpl
jecxz
out
cmp
clc
and
ins
lds
mov
mov
mov
stc
fisttp
xchg
scas
cmp
cmp
push
ret
push
cli
jge
ds
or
dec
mov
add
mov
cdq
mov
aaa
xor
out
inc
adc
ins
loope
mov
xchg
je
push
xchg
mov
jne
ffreep
leave
ficomp
les
inc
(bad)
xchg
ret
in
pop
popf
fimul
(bad)
pop
lock
xchg
aaa
or
xchg
in
repz
mov
adc
push
mov
jmp
pop
repz
cwde
inc
mov
hlt
rol
mov
cmp
test
fld
iret
fnstenv
pop
cs
push
bound
adc
out
repnz
(bad)
lahf
cmps
stos
(bad)
retf
pusha
jl
adc
inc
sub
scas
mov
test
xor
pop
inc
jg
test
mov
mov
xor
push
ret
outs
jge
push
sahf
dec
push
and
invd
mov
jnp
and
jnp
sub
sti
mov
pop
cmps
das
out
fwait
or
shr
push
mov
pop
mov
test
jp
inc
pop
sahf
sbb
hlt
pop
inc
add
jl
jge
adc
pop
fucom
mov
repnz
jae
cmp
adc
cmp
ja
pusha
jbe
(bad)
retf
in
xor
pop
call
xchg
push
retf
idiv
sub
pop
cld
mov
hlt
or
gs
sbb
jmp
inc
xor
out
or
sbb
arpl
xchg
(bad)
cli
sub
(bad)
(bad)
icebp
or
popa
leave
xchg
pop
or
xchg
mov
inc
mov
and
dec
adc
ficomp
dec
cdq
sti
fwait
xlat
call
and
jl
sub
cmp
in
icebp
xchg
call
xor
arpl
loopne
mov
mov
sar
xor
inc
call
popf
mov
ds
(bad)
jg
movs
push
ja
cld
jb
inc
mov
mov
fisubr
jge
mov
leave
ret
sub
pop
test
pop
or
mov
sbb
nop
aam
int3
jmp
add
push
mov
call
add
into
je
loope
xchg
stos
shr
mov
adc
pop
mov
xor
lods
fnsave
hlt
ret
int
pop
jnp
xchg
xchg
push
push
xchg
int3
xor
sbb
or
outs
push
mov
in
addr16
mov
test
or
sahf
aad
mov
lods
es
mov
fmul
aas
push
or
jne
cdq
sti
call
jg
cmp
cmp
cmp
sub
mov
movs
dec
dec
mov
or
outs
inc
(bad)
ds
hlt
sbb
adc
pushf
ror
or
andnps
xchg
mov
ins
add
ss
jnp
sahf
jmp
sbb
jno
stc
pushf
fisub
push
push
jmp
cs
mov
add
mov
dec
sub
xchg
inc
scas
ins
out
test
mov
cmp
bound
inc
dec
inc
js
push
jmp
popf
pop
cli
inc
das
scas
dec
push
rcr
xor
int
jmp
or
pop
int
dec
movs
push
in
ds
mov
ret
dec
inc
test
ret
mov
sub
pop
sbb
and
call
loope
imul
outs
xchg
repz
(bad)
icebp
dec
sbb
mov
inc
inc
std
test
adc
arpl
imul
mov
arpl
mov
out
pop
pop
adc
(bad)
lock
and
std
push
add
inc
and
imul
xchg
out
adc
sbb
xor
push
xchg
and
xor
or
std
hlt
int3
push
daa
sbb
retf
and
aas
jmp
fstp
pop
(bad)
retf
sub
jmp
add
addr16
pop
xchg
leave
(bad)
jmp
inc
test
pop
xor
movs
test
ja
sbb
jl
cmp
jmp
in
daa
push
xor
movs
cmp
adc
(bad)
sbb
(bad)
xchg
push
int
stos
xor
or
lods
push
jg
sub
cmp
stos
and
cmp
xchg
mov
jmp
hlt
int
xchg
movs
sub
xchg
cmp
repnz
mov
jecxz
call
jp
adc
jle
dec
mov
cmovne
push
sbb
cdq
mov
(bad)
fbstp
jle
scas
jmp
popa
pop
in
or
imul
loopne
dec
push
or
xor
inc
mov
mov
push
jecxz
xor
fild
mov
mov
sub
sar
mov
sahf
inc
push
sub
(bad)
scas
xchg
addr16
stos
call
or
inc
rcl
jg
shl
jmp
imul
push
fsub
imul
and
or
imul
and
jo
pop
cld
retf
add
data16
repz
dec
stc
cmp
mov
inc
lock
and
int3
mov
and
sub
std
sbb
(bad)
loop
push
popf
xor
das
dec
sbb
cmp
int
fucom
or
push
and
mov
fidiv
out
or
jns
stc
push
mov
hlt
test
test
shl
gs
pushf
dec
mov
sub
jge
pop
pop
rol
or
scas
adc
stos
dec
pop
stos
sbb
in
call
xor
jmp
xor
loop
dec
movs
in
mov
jns
add
jo
dec
pop
hlt
stos
sbb
adc
outs
push
jne
fisubr
mov
leave
mov
add
jbe
dec
ins
xchg
adc
push
pushf
mov
dec
clc
and
inc
push
fbld
out
bound
test
jmp
inc
push
clc
push
and
jl
bound
pop
pop
sub
out
inc
jl
outs
stos
daa
mov
lea
ss
mov
js
add
sbb
out
scas
es
add
cmp
cmp
jae
fistp
adc
lods
xchg
rcl
push
bnd
pop
rcr
push
aad
dec
xchg
cmp
loop
sub
pop
xchg
add
mov
rcl
mov
fst
retf
lea
sbb
fdiv
in
or
dec
jns
std
test
push
ins
xchg
rcr
sub
jmp
adc
mov
js
mov
outs
adc
(bad)
sar
and
imul
outs
scas
sub
and
mov
fucomip
sub
mov
dec
push
mov
arpl
and
mov
push
jae
aas
(bad)
jne
sub
imul
sub
mov
clc
add
in
mov
cmp
ficom
and
fwait
sbb
ja
xchg
inc
pop
inc
push
or
sahf
aam
aaa
or
add
pushf
rol
outs
loop
sub
mov
sbb
mov
shl
imul
lock
arpl
test
cmps
(bad)
xchg
das
inc
fcmovne
cmp
jbe
aaa
ret
cdq
pop
pop
js
xchg
stos
jle
ss
add
adc
mov
mov
cmp
sbb
cmp
dec
jge
gs
int3
stos
pop
jp
out
fldcw
cmps
icebp
push
pop
or
sub
sub
xchg
scas
push
xor
add
popa
fcom
mov
aad
sbb
add
mov
jge
push
mov
or
jmp
inc
pusha
ret
push
test
push
ret
xchg
push
and
gs
lahf
rcr
popa
and
push
ret
and
loope
sub
pop
mov
and
scas
xchg
mov
mov
sbb
push
repnz
cs
ins
push
(bad)
mov
jle
cwde
and
and
aam
fistp
xor
daa
cmps
ds
pop
mov
inc
cmc
lods
add
or
pushf
mov
in
rol
sbb
sbb
iret
and
daa
ds
xor
dec
adc
sub
into
pop
cld
mov
fcom
fldenv
xor
fucomp
pop
lea
cmp
inc
test
pop
outs
pop
dec
and
push
push
mov
call
les
and
fisub
frstor
pop
xor
mov
adc
push
sub
add
sbb
test
adc
mov
add
inc
push
push
out
push
sub
add
adc
push
js
cwde
push
push
pmaddwd
cmp
push
in
ins
out
cmp
aaa
aad
(bad)
jg
mov
daa
or
sub
inc
dec
shr
neg
jno
dec
lock
cmp
jle
dec
xchg
jo
cmc
outs
sub
jne
jae
dec
inc
aad
call
out
ror
xchg
or
in
cld
lahf
fimul
pop
std
adc
mov
movs
cdq
sub
add
shl
mov
mov
or
popa
sahf
or
pop
xor
xor
lods
xchg
jle
loop
push
cmp
in
pop
mov
sbb
leave
cwde
jnp
ins
adc
sbb
inc
jle
popa
je
sbb
into
nop
pop
push
sub
ret
cmp
inc
pushf
repnz
(bad)
fcmovnbe
mov
mov
and
popa
cs
fsub
jbe
sub
or
add
sbb
outs
dec
add
(bad)
rep
pusha
ret
xchg
rcl
stos
sub
aaa
fs
pop
shr
mov
icebp
cmp
call
popa
cmc
fwait
hlt
popa
(bad)
xor
pop
rcl
loopne
jmp
jbe
dec
movs
cmp
jbe
imul
aad
loope
push
fcom
int
movs
rol
push
repnz
iret
and
pop
scas
shr
push
mov
popf
into
pop
dec
call
sub
inc
in
xor
push
or
push
(bad)
fnsavew
and
dec
sbb
cmps
adc
popf
add
sub
ins
jg
call
dec
cmp
xchg
jge
fistp
stos
mov
retf
mov
loope
cli
int
outs
call
jg
loop
push
repnz
test
cmp
movs
add
mov
dec
in
ins
rol
jl
imul
mov
push
mov
addr16
push
lahf
add
cdq
xor
xor
lods
pop
mov
pushf
mov
cdq
loopne
jns
mov
add
sub
mov
out
js
js
mov
xchg
jle
div
xchg
dec
icebp
sub
mov
pop
push
jg
and
mov
and
jmp
imul
out
outs
jnp
add
mov
push
mov
gs
add
pop
mov
rol
mov
repnz
popa
and
mov
fisubr
out
cmp
fdivr
js
(bad)
(bad)
mov
cwde
jnp
dec
movs
and
cs
test
dec
cmp
mov
sbb
pop
les
into
mov
test
imul
js
mov
inc
test
inc
aas
retf
sbb
out
stos
push
jno
push
sahf
push
lahf
add
aam
inc
in
cmp
and
inc
pop
push
push
pusha
(bad)
mov
pop
push
cmps
in
xchg
retf
pop
pop
hlt
or
mov
add
rcl
and
push
add
inc
xor
xchg
mov
inc
pop
fdiv
cwde
jle
popa
fisub
sbb
aas
outs
test
push
and
jle
mov
push
cmps
xchg
push
in
lods
(bad)
test
jo
dec
repnz
xor
ret
popf
lock
dec
inc
mov
push
mov
call
pop
fstp
das
int
cmps
popa
xor
icebp
xor
cmp
jae
push
(bad)
retf
or
imul
push
lahf
inc
sbb
add
jae
add
push
and
xchg
sti
test
in
jge
(bad)
xchg
into
xchg
dec
and
in
xor
sbb
dec
jecxz
jl
je
mov
call
inc
add
pop
rcl
stos
xchg
cmc
shr
jge
popf
dec
data16
mov
fld
lea
pop
cmp
pop
retf
mov
xor
xchg
mov
mov
and
cld
out
cwde
jecxz
and
hlt
cwde
mov
out
arpl
cld
(bad)
fild
call
(bad)
arpl
jb
mov
cs
jecxz
mov
das
add
push
(bad)
push
xchg
and
jle
xchg
rol
into
pusha
ret
shl
lods
inc
ror
cli
mov
stos
mov
jecxz
dec
pop
(bad)
mov
dec
cld
or
in
mov
lds
sbb
mov
adc
jge
push
inc
or
sub
in
jecxz
out
cli
dec
fucomp
jno
test
int
mov
xchg
pop
cwde
or
mov
add
mov
les
push
xchg
lahf
xor
jns
sbb
and
jno
ja
jo
ds
jne
jl
cmp
add
fnstsw
add
sbb
repz
sub
cmps
not
repz
inc
aam
pop
repz
mov
xchg
and
mov
xor
pop
push
ret
mov
stos
fucomip
and
(bad)
mov
mov
mov
lock
add
dec
(bad)
out
or
mov
mov
adc
sub
les
fistp
loope
fs
inc
xchg
fldenv
inc
mov
ret
cmps
pop
push
sbb
lds
repz
mov
test
das
mov
mov
xor
lock
cmp
icebp
push
aas
cwde
push
cld
test
leave
retf
fwait
sbb
ja
icebp
jae
sub
xor
movs
mov
xlat
jl
mov
ror
mov
cmpxchg
inc
gs
enter
(bad)
cmp
cmp
push
stc
cmps
test
rcl
mov
push
inc
xchg
push
das
jmp
mov
adc
fisubr
dec
inc
sbb
fadd
or
push
test
outs
adc
test
mov
mov
rcl
push
xchg
push
inc
mov
nop
jmp
fld
stc
jmp
test
cmps
push
aas
xor
and
das
or
sahf
pop
jmp
pop
retf
daa
ficomp
push
cmp
sub
stos
repnz
fistp
push
jle
enter
sti
aad
stos
sub
xchg
push
jecxz
and
mov
popf
xlat
add
dec
cdq
mov
retf
xchg
hlt
arpl
clc
pop
add
push
xchg
or
mov
movs
inc
mov
sub
test
adc
das
mov
cmp
xchg
sbb
pop
jae
(bad)
ins
retf
(bad)
sub
gs
shr
cmp
adc
int3
scas
bound
frndint
sub
fwait
retf
in
adc
lea
fld
int
iret
mov
ins
daa
inc
enter
mov
adc
dec
sbb
dec
jl
pop
leave
movs
stos
clc
loope
out
sub
add
pop
xor
imul
jge
inc
(bad)
and
dec
add
lahf
mov
pop
inc
xor
adc
pop
and
push
pop
push
adc
dec
adc
and
int3
je
xchg
in
xor
sbb
xchg
shl
xchg
inc
std
sti
jge
sbb
call
out
jne
rcl
push
dec
dec
call
mov
clc
cld
jns
push
and
or
cld
jmp
sti
sub
push
jnp
pop
test
push
pop
ins
push
jmp
ins
mov
add
aam
and
das
pop
push
or
icebp
or
jbe
cmp
std
sti
pop
in
in
dec
das
ins
popa
sub
cmp
daa
cmc
sub
mov
push
or
push
lock
mov
sbb
push
inc
sbb
jg
add
mov
xchg
adc
cdq
sar
mov
(bad)
call
dec
rcr
movs
bound
fnsave
fnstenv
cmp
ror
xchg
dec
add
test
je
jmp
add
and
add
jmp
std
jns
push
movs
js
add
es
mov
scas
rcr
mov
jl
cbw
inc
add
popf
mov
and
ror
mov
or
jnp
push
sahf
shr
add
and
ret
movs
and
add
or
(bad)
xor
cmp
xchg
push
dec
xchg
lds
(bad)
or
cs
and
sti
mov
call
jg
(bad)
shr
push
stc
jecxz
jae
xchg
fmul
test
push
mov
pop
fdiv
bound
and
mov
mov
push
outs
xchg
std
add
sar
or
bound
lods
dec
bound
dec
out
xchg
repz
out
ja
test
mov
push
mov
aam
sbb
in
test
aas
int
xchg
jo
scas
mov
sbb
mov
jmp
push
out
mov
push
in
dec
mov
sbb
cmp
stos
xchg
and
xor
mov
rol
daa
and
dec
jle
ins
in
cmp
shr
aaa
mov
pop
jo
mov
adc
dec
cld
push
into
dec
ins
cs
xchg
(bad)
repnz
(bad)
pop
xor
mov
mov
popf
inc
pop
push
ret
adc
ja
retf
mov
call
push
adc
das
cli
shl
xor
stc
out
push
ret
popf
mov
loope
add
shl
test
ja
mov
push
push
in
jmp
cdq
lahf
lock
stc
sub
addr16
es
push
adc
pushf
mov
pop
(bad)
cmp
mov
sbb
or
push
popf
sub
jmp
pop
leave
inc
out
mov
sub
aas
(bad)
or
jmp
or
outs
stos
push
mov
push
mov
adc
pop
aad
xchg
push
test
jmp
movs
ror
mov
in
add
push
cmp
mov
int3
push
jne
sub
cwd
jnp
push
fs
outs
jb
inc
loopne
(bad)
jmp
ret
add
xlat
push
sub
icebp
mov
dec
lock
sub
adc
in
push
js
int
mov
add
fcomi
dec
dec
stos
jg
mov
sbb
add
shl
pusha
xor
pop
adc
mov
mov
clc
mov
xor
xchg
test
jo
pop
mov
ins
shr
jbe
(bad)
adc
sub
adc
(bad)
cld
dec
xlat
push
sub
lods
dec
mov
repz
ins
in
inc
mov
int
jno
dec
push
clc
in
jmp
lock
jae
mov
std
lods
inc
test
jp
pop
sub
test
xchg
mov
push
sub
mov
sub
pop
inc
jp
retf
xor
cli
mov
push
push
jae
inc
push
adc
or
mov
push
ja
pop
push
cmps
push
jge
push
fist
jae
neg
stos
add
mov
stc
inc
mov
sbb
jmp
mov
movs
mov
dec
jp
movs
sbb
rol
xor
into
loopne
lods
xchg
pusha
imul
stos
ret
clc
mov
dec
mov
test
and
and
fidiv
out
inc
daa
retf
and
iret
into
das
retf
adc
fmul
adc
dec
cmp
div
pushf
cli
and
jl
call
cli
dec
jns
neg
pop
mov
retf
hlt
mov
int3
sub
cli
arpl
pop
push
adc
pop
aas
pop
xchg
jnp
mov
ret
xchg
pop
sub
mov
xchg
leave
cmps
push
pop
pop
xchg
inc
(bad)
pop
sbb
jecxz
daa
ja
sbb
test
add
jmp
sbb
push
scas
popf
mov
add
popf
xchg
sbb
sahf
cmps
cmps
fldenv
push
jle
aas
adc
ret
push
jecxz
call
je
xchg
jbe
mov
imul
mov
bound
(bad)
xor
xchg
push
xor
in
aas
and
mov
dec
les
inc
jbe
fwait
int
loopne
cmp
shl
cmp
inc
mov
adc
pusha
jo
xor
fisub
adc
ficom
jnp
not
pop
mov
js
adc
dec
das
and
lock
add
sbb
ss
aam
movs
cmp
dec
aam
mov
sbb
in
mov
add
cmps
push
ins
adc
push
mov
je
mov
jb
mov
shl
or
push
jg
add
movs
rcr
jge
ja
fistp
push
or
movs
pop
outs
jl
shl
adc
mov
xor
ins
jmp
aaa
cli
stc
dec
mov
nop
mov
mov
inc
in
lea
dec
mov
mov
push
inc
repnz
in
cmp
bound
xchg
into
xchg
mov
mov
fmul
stc
lds
fcmovbe
rcl
ret
mov
loop
es
cli
cdq
add
cmp
arpl
pop
sub
add
or
pop
sbb
xchg
sti
push
adc
adc
dec
xor
and
push
xchg
and
in
mov
fwait
std
jge
push
es
in
imul
out
fwait
xlat
test
dec
fistp
int3
xlat
push
out
xor
mov
cmc
inc
mov
xor
aam
mov
add
out
pop
ret
and
sub
scas
je
in
imul
push
cmp
jae
push
fdiv
fild
into
push
and
push
repnz
mov
in
mov
jp
cld
retf
fdivr
clc
and
ins
pop
xlat
pusha
outs
lock
and
popf
das
lock
sbb
adc
push
sbb
jmp
js
push
xor
push
jbe
std
addr16
lods
bound
mov
movs
and
jge
stc
dec
lock
and
lahf
cmc
fimul
test
data16
loope
ror
push
xchg
clc
popf
dec
mov
retf
scas
jne
shr
pop
pop
shl
mov
(bad)
and
bound
lods
jecxz
rcr
daa
or
mov
and
or
test
dec
stos
add
jmp
outs
jnp
inc
movq
jbe
scas
push
or
and
popf
cmp
in
jnp
test
jne
inc
(bad)
pop
and
stc
out
and
or
sub
clc
jns
jne
loope
jmp
inc
and
das
cmps
or
clc
push
es
aam
aam
and
push
and
leave
xchg
inc
scas
ins
je
sbb
shl
fdivr
test
dec
in
stos
xchg
fimul
mov
movs
cmp
lods
fnstenv
(bad)
mov
mov
adc
adc
dec
addr16
push
ror
test
ret
les
cmp
adc
adc
sahf
out
fcomp
pop
fisubr
sub
shl
cmps
pusha
in
push
je
sub
dec
cmp
or
push
pop
mov
push
lods
mov
jp
add
fisubr
mov
and
out
aad
(bad)
out
fild
dec
retf
mov
dec
dec
jl
cmp
out
jbe
pusha
dec
dec
sahf
pusha
mov
jbe
ja
dec
mov
bound
ret
xchg
jne
ret
xchg
outs
lea
push
lock
imul
fadd
push
fstp
shl
scas
sbb
lock
ret
and
sub
movs
adc
fistp
test
out
adc
call
sbb
movs
jl
fisub
aas
in
enter
xor
mov
std
retf
bound
jbe
(bad)
scas
ret
aas
and
xor
mov
loope
adc
cmp
mov
mov
mov
lods
and
xor
pop
test
movs
imul
dec
mov
ja
in
pop
jmp
pop
bound
cmp
pop
arpl
rol
jle
mov
jnp
rcr
aas
cmp
pop
sti
push
retf
std
add
fidiv
daa
xchg
pop
stc
xchg
lods
xor
or
pop
(bad)
outs
or
cld
fs
sub
shl
pop
movs
rcl
test
adc
adc
frstor
and
adc
(bad)
sbb
cdq
jl
gs
hlt
js
xchg
dec
out
lds
das
pop
dec
mov
jne
cmp
(bad)
retf
jl
and
xor
pop
sbb
js
test
ds
xchg
jge
and
and
jge
mov
out
nop
data16
sub
imul
or
mov
jmp
add
xor
(bad)
mov
popa
pop
mov
pusha
fcomip
scas
dec
ss
mov
popf
add
clc
mov
sub
pop
mov
jp
push
aad
xchg
dec
xchg
hlt
mov
fs
ficom
mov
ins
int3
fimul
cmp
call
or
clc
pop
je
jg
xchg
and
or
xchg
retf
(bad)
shl
ins
add
test
push
cmps
mov
dec
push
ffree
sub
add
fadd
inc
pop
adc
ror
or
xor
out
sbb
mov
xor
pop
loopne
mov
out
aad
cmp
add
jnp
xchg
lahf
sbb
dec
jecxz
inc
xor
std
pop
push
and
pop
and
int3
push
xor
lds
xchg
push
inc
lods
movs
mov
push
mov
pop
in
mov
fld
ret
fcmovne
test
(bad)
jmp
mov
inc
idiv
je
jb
lds
jecxz
je
mov
ins
movs
xchg
inc
loope
ret
jne
mov
mov
jno
jnp
out
movs
cwde
loopne
cmp
mov
xor
aas
std
or
(bad)
enter
adc
pop
sub
xchg
jecxz
mov
(bad)
in
pop
in
rcl
test
scas
aam
arpl
movs
pop
xchg
imul
(bad)
stc
lods
mov
pop
mov
shr
mov
(bad)
push
test
jle
push
mov
mov
mov
xchg
ins
icebp
lahf
add
push
je
mov
icebp
mov
sub
call
mov
les
mov
dec
mov
outs
mov
add
adc
das
jmp
push
ja
ds
jle
(bad)
addr16
cmp
inc
dec
xor
and
outs
fcomp
xor
xor
pop
xchg
ficom
mov
cmp
movs
or
add
repnz
dec
retf
aas
add
dec
daa
clc
pop
xor
jge
out
xchg
jo
jmp
mov
mov
push
aam
sbb
sbb
add
sahf
data16
stc
cmp
out
movs
mov
inc
pop
dec
scas
dec
sbb
mov
mov
sbb
ins
outs
test
daa
in
jge
pop
mov
cli
dec
mov
jmp
or
sub
in
xor
aam
imul
add
mov
or
jge
add
push
(bad)
scas
sbb
mov
scas
ja
out
fsubr
shl
push
outs
iret
and
add
lahf
mov
sub
pop
adc
aad
jnp
cmp
rol
nop
sbb
jb
pop
pop
jmp
push
dec
inc
mov
jns
pushf
adc
addr16
ds
push
or
sbb
and
les
out
cwde
mov
sub
mov
lea
test
stc
sbb
stos
xor
add
dec
jmp
loop
push
cwde
jmp
out
enter
dec
and
mov
xlat
lock
lods
mov
and
cmc
adc
rcl
pop
sub
sbb
jg
add
mov
add
ins
inc
push
or
cmp
mov
mov
into
shl
in
lods
mov
stos
ss
lahf
retf
sub
into
mov
inc
add
sbb
push
stos
or
(bad)
xlat
or
adc
mov
dec
rol
ja
clc
jl
int3
aad
pop
imul
cmps
jo
test
mov
mov
lahf
mov
test
xor
popa
and
add
mov
enter
fld
sahf
loopne
sahf
test
cli
sbb
cld
shr
in
(bad)
hlt
sbb
jns
cmp
jge
stos
push
and
enter
xor
fld
into
pop
push
fs
shl
rcr
pop
push
push
mov
fadd
fxch
pop
push
dec
scas
mov
sub
dec
add
mov
lods
movs
xchg
(bad)
pusha
sahf
(bad)
xchg
mov
hlt
out
push
xchg
test
xor
xchg
call
xchg
outs
dec
jge
jbe
(bad)
push
adc
jl
mov
sbb
sbb
add
fidiv
xchg
daa
sub
gs
mov
in
pusha
(bad)
ja
retf
dec
mov
inc
push
out
adc
push
pop
mov
xlat
fnstsw
add
lahf
(bad)
clc
rcr
jle
add
xor
imul
jge
xor
fld
xor
xlat
gs
js
xchg
je
lahf
popf
xor
xor
cmc
lock
rcr
out
dec
ss
add
and
cmp
add
mov
xor
in
xor
dec
or
adc
aas
sbb
in
jle
scas
sub
stos
stos
popf
out
jae
leave
mov
test
adc
fsubr
icebp
fild
pop
cmp
pop
cwde
call
dec
std
push
cwde
shr
or
adc
mov
retf
push
xor
add
neg
daa
mov
pop
scas
inc
or
sub
ficom
add
add
mov
inc
xchg
in
push
add
mov
ja
and
and
mov
pop
push
fdivr
scas
add
mov
xchg
out
mov
pop
cmp
jmp
sbb
shr
jg
and
cmps
jo
push
push
les
mov
popf
and
aaa
popf
pop
pop
enter
fbstp
mov
aaa
pop
sub
dec
sbb
mov
aad
or
imul
push
dec
inc
mov
push
mov
push
dec
inc
into
shl
push
idiv
cld
mov
fisubr
mov
pusha
shl
mov
xchg
cmp
pop
lods
lds
pop
and
loop
mov
jp
push
retf
icebp
pushf
popf
outs
inc
jg
or
stos
pop
pop
or
retf
xor
add
retf
and
mov
xor
loope
jp
xor
test
call
inc
int3
(bad)
xlat
in
and
bound
shr
aam
inc
sub
gs
pusha
or
dec
push
push
repnz
ret
int3
lea
shr
in
test
adc
ss
sub
push
sub
sbb
int3
add
jg
cmp
fnstenv
push
test
shr
test
push
mov
fild
stos
div
sub
outs
div
jmp
jmp
cmp
or
leave
arpl
clc
cmc
add
xchg
dec
push
jge
dec
in
out
mov
neg
ret
jmp
cmp
fstp
retf
(bad)
jnp
adc
(bad)
add
mov
and
mov
jp
push
mov
gs
lahf
push
pop
sbb
inc
retf
push
mov
or
movs
cmp
xor
sbb
test
retf
push
ins
in
lahf
mov
sub
sub
call
ins
fmul
mov
xlat
add
mov
xchg
loope
adc
inc
dec
(bad)
stc
dec
aad
sbb
xor
adc
movs
cmps
scas
jmp
enter
mov
cmp
fadd
inc
fadd
lock
enter
jo
leave
call
and
fwait
ins
fstp
xchg
(bad)
neg
mov
xor
jl
jnp
dec
gs
dec
retf
(bad)
daa
out
sti
sbb
pop
cmps
inc
ja
pop
jbe
or
pop
out
nop
lea
(bad)
aam
push
mov
xor
xchg
outs
adc
mov
xchg
add
js
out
(bad)
mov
mov
daa
pop
clc
or
sub
bound
ret
adc
push
inc
push
shl
push
dec
icebp
add
sbb
mov
xchg
cwde
jmp
mov
lods
movs
or
je
push
xor
pop
cmps
pop
out
or
std
xor
rol
outs
pop
es
mov
pop
cmp
dec
push
sub
rcr
sub
icebp
ins
or
out
bound
addr16
ins
jg
cld
sub
dec
popf
or
or
sar
stos
sub
push
mov
mov
stos
iret
popa
out
call
jb
hlt
(bad)
pop
and
jnp
not
xor
sbb
xchg
push
add
xor
movs
mov
es
js
cdq
outs
push
inc
xor
cmp
xor
aad
fdiv
mov
push
cld
jmp
inc
stos
test
cmp
pop
dec
pop
and
hlt
dec
mov
fbld
mov
(bad)
aam
fsub
repnz
cld
nop
xor
loope
cdq
aaa
ja
add
pusha
(bad)
es
lds
cmp
pop
sbb
mov
sti
fld
movs
cmp
cmp
sub
nop
inc
cmp
pop
mov
cmp
or
pop
in
jnp
push
or
fwait
dec
push
ds
sbb
push
lahf
test
bound
fwait
pushf
jle
mov
fld
add
add
inc
mov
pop
fnstsw
adc
enter
movs
fisttp
enter
hlt
mov
or
repz
ss
jmp
cld
int3
dec
cmp
aam
mov
es
mov
aaa
mov
bnd
js
loope
pushf
push
push
rol
jle
clc
sar
xchg
shl
mov
aam
adc
mov
aad
test
loope
clc
adc
dec
clts
sti
inc
sub
in
aad
call
or
ds
lea
lods
xor
push
xchg
aad
cwde
outs
add
sub
cmc
pop
fdiv
retf
adc
dec
cmp
lahf
in
ds
and
and
mov
or
cld
sub
test
pop
movs
mov
stos
lock
pop
stos
addr16
cmp
data16
mov
test
jle
mov
xchg
inc
push
ins
fld
xlat
xor
mov
das
cmps
ds
sub
aas
mov
hlt
in
push
push
add
cs
imul
das
inc
int3
pop
cmp
dec
pop
(bad)
lock
dec
stos
arpl
test
ret
cdq
enter
pop
outs
mov
mov
call
jle
loopne
and
pop
addr16
js
pusha
(bad)
les
movs
push
jno
repnz
icebp
push
push
les
jns
pop
and
mov
lock
enter
inc
in
pop
mov
iret
mov
(bad)
(bad)
cmp
cmp
jb
cmp
pop
mov
das
mov
in
pop
inc
fs
cdq
movs
int
push
mov
or
add
pop
jge
ficom
stos
xor
mov
sar
push
pop
leave
call
stos
sbb
lahf
push
aad
scas
cmp
loope
ror
or
pop
inc
shl
mov
inc
xchg
mov
into
imul
or
xor
mov
dec
in
retf
mov
xor
aas
jbe
iret
in
jne
mov
sub
jl
adc
mov
jo
push
adc
outs
fisubr
sub
xor
(bad)
fsub
gs
stc
push
and
pop
jp
or
cmp
enter
fstp
pop
cmc
add
sub
loop
shr
in
lea
outs
push
fcmovnbe
push
daa
out
pop
jnp
lea
mov
mov
xchg
push
cmps
fnstcw
js
cli
inc
ss
movs
dec
cmp
inc
(bad)
mov
pop
mov
fdivr
pop
xchg
sub
and
jnp
frstor
aad
jo
push
jge
xor
hlt
gs
sahf
(bad)
jnp
mov
mov
or
fiadd
sbb
sub
jg
inc
adc
fcom
mov
or
mov
nop
jle
lds
mov
ins
sbb
mov
pop
or
mov
imul
stos
and
lock
adc
(bad)
popa
cmps
inc
add
lds
mov
psubusb
cmp
fimul
(bad)
in
and
not
ret
ret
into
test
dec
or
and
imul
arpl
sbb
xchg
icebp
xor
adc
(bad)
mov
pop
stos
les
adc
scas
vdivsd
pop
or
(bad)
scas
mov
or
retf
dec
std
dec
xchg
out
dec
pop
aaa
pop
adc
fnstcw
push
shl
sbb
test
std
out
push
es
push
mov
sar
mov
fcomp
sbb
jmp
aam
or
fild
inc
cmpxchg
lock
out
xlat
out
push
cmp
clc
cmp
mov
jg
lds
cmp
stos
stc
xor
and
arpl
dec
cmp
outs
into
ucomiss
jmp
sub
pop
clc
cli
in
sub
mov
jbe
clc
mov
jmp
dec
cmp
retf
push
cmp
cmps
or
mov
(bad)
aas
addr16
pop
mov
dec
cmp
iret
fsub
fsubp
int3
outs
mov
jmp
clc
idiv
or
stos
push
push
add
ins
pop
mov
dec
dec
inc
fs
inc
int3
lahf
sti
and
dec
cmps
std
loop
jno
ins
push
xchg
push
mov
in
sub
pop
sbb
dec
sbb
in
les
addr16
dec
bound
cs
pop
shl
popa
adc
leave
mov
adc
in
aaa
pop
popf
stc
xchg
inc
jge
ins
test
aam
ds
mov
data16
(bad)
into
and
xor
jge
ds
lds
sbb
hlt
inc
aad
(bad)
push
shl
cmp
xor
xchg
cdq
fwait
and
adc
pushf
xchg
into
cmps
add
jb
fild
iret
in
xor
ror
in
jb
mov
fstp
les
xchg
pusha
mov
jmp
hlt
dec
(bad)
retf
push
xor
fwait
adc
cmp
aam
mov
jnp
fild
rol
imul
rcr
inc
fidivr
dec
in
sbb
sbb
add
jp
add
nop
ret
outs
outs
or
pusha
mov
cmp
inc
inc
addr16
sahf
cld
outs
add
dec
mov
xchg
push
and
mov
adc
pop
mov
leave
mov
loope
fs
shr
dec
jp
test
dec
loopne
mov
sbb
dec
fstp
or
inc
stos
dec
pop
adc
push
out
js
fst
cld
mov
cmps
mov
fs
std
sbb
in
inc
pusha
ficomp
sub
add
std
movs
aaa
xor
push
popf
ja
mov
push
out
jnp
add
jnp
fidivr
cmps
xchg
fldenv
mov
xor
mov
adc
mov
push
mov
inc
pushf
fadd
sub
stc
jle
xor
jmp
ins
addr16
add
call
xchg
adc
sahf
sbb
xchg
repz
and
gs
aas
int3
(bad)
test
pop
mov
addr16
cmps
loope
sbb
adc
daa
mov
jecxz
and
movs
loopne
push
xor
sub
mov
dec
cdq
aaa
sub
cwde
ficomp
test
dec
ret
xor
pop
movs
loop
(bad)
xor
pop
mov
popa
dec
fbld
test
sbb
adc
inc
sub
call
mov
mov
sbb
ret
movs
or
call
xor
aas
out
test
mov
mov
xchg
mov
jmp
dec
pusha
mov
addr16
cmp
addr16
lock
dec
(bad)
pop
sti
pop
xchg
xchg
xchg
mov
dec
cmp
sub
test
loope
gs
hlt
and
aas
xor
cs
test
mov
ja
mov
fistp
hlt
js
pop
(bad)
div
add
pop
cmp
mov
xor
xchg
std
or
inc
ret
and
mov
pop
ds
mov
xor
dec
xor
ins
mov
jb
adc
xchg
clc
int3
push
xor
(bad)
cmp
cmc
xchg
cmp
std
mov
push
inc
cmp
xor
pop
mov
jae
cld
dec
sbb
ins
mov
sbb
js
repz
mov
pop
push
jmp
and
pop
aam
mov
add
mov
ret
popa
stc
jne
fcmovbe
out
jbe
popf
sbb
js
or
sub
dec
(bad)
xchg
(bad)
adc
iret
or
push
push
or
cmps
inc
inc
pop
scas
jo
pop
out
fild
jae
sti
pop
(bad)
jne
je
mov
pop
lock
(bad)
jne
(bad)
sub
loop
mov
pop
shr
push
data16
add
les
ret
add
lahf
das
dec
into
aad
jecxz
lahf
test
clc
imul
test
out
jg
mov
xlat
jb
mov
pop
adc
add
enter
xlat
and
sbb
lahf
xor
xchg
xchg
inc
jmp
rcl
ret
jp
pop
mov
sbb
push
pop
fldenv
xor
lods
inc
sahf
pop
add
cmp
cmp
out
into
call
xor
pop
sbb
or
movs
adc
adc
repz
stos
mov
xchg
arpl
je
icebp
and
iret
or
repz
test
add
shl
and
clc
ret
sbb
cmp
mov
gs
lds
xlat
sti
leave
xchg
push
icebp
or
push
pop
push
js
ds
sbb
dec
fld
xor
xlat
into
jno
push
inc
pop
jbe
mov
test
mov
xchg
pop
mov
xor
jg
out
push
call
jp
dec
jo
jmp
sub
cmps
inc
push
mov
test
add
push
fld
in
inc
and
jmp
push
push
enter
inc
jge
add
mov
push
push
in
xchg
xor
jg
cmp
int3
rcl
fsub
xor
xchg
xchg
bound
mov
shr
pop
and
mov
scas
pop
mov
dec
sbb
and
jmp
and
test
inc
loopne
dec
retf
mov
xor
xlat
jnp
jbe
mov
loope
jb
pop
cmp
cmps
mov
adc
repz
dec
dec
(bad)
shr
cmp
adc
mov
jmp
stc
mov
dec
sbb
xlat
add
adc
sbb
push
xchg
dec
scas
add
cmp
cwde
imul
(bad)
jbe
xor
out
adc
out
push
xchg
lea
cs
rol
push
fimul
pop
inc
out
adc
clc
ds
sbb
sbb
ret
and
cs
sbb
mov
test
push
dec
push
and
cmp
sbb
cmp
scas
in
movs
xchg
(bad)
cli
cmps
jno
fdiv
rol
xchg
inc
add
dec
xchg
test
or
pusha
cwde
mov
sbb
mov
mov
test
xchg
daa
push
jns
retf
scas
push
ror
fimul
das
in
fsub
cli
addr16
shl
addr16
or
add
sbb
(bad)
rcr
inc
push
push
bound
and
movsx
sar
or
aam
lahf
dec
adc
sbb
popa
mov
or
or
repnz
jns
push
pop
mov
sub
xchg
test
loope
pop
or
push
je
and
push
mov
stc
xor
ss
inc
pop
stos
inc
xor
jae
dec
pop
loop
imul
(bad)
jecxz
outs
call
iret
cmps
adc
jge
push
jle
out
mov
imul
rcr
(bad)
fs
mov
adc
pop
out
mov
fsub
push
push
call
mov
nop
pop
dec
in
xor
sar
mov
cdq
sub
outs
pop
cmps
nop
sahf
xor
call
cmp
dec
xor
add
pop
jns
xchg
add
xchg
(bad)
mov
shl
xor
pop
les
cmp
rcl
addr16
sti
(bad)
into
mov
scas
test
jno
test
cmp
ja
cmc
push
push
enterw
jle
std
sti
pop
call
adc
fdivr
shl
push
mov
cld
test
pusha
xor
loope
mov
push
mov
jns
dec
mov
outs
lock
iret
or
shl
inc
add
popa
icebp
std
scas
cmp
aaa
and
aad
xchg
sbb
pop
lea
jno
jbe
xchg
pop
cmp
pop
test
pop
retf
mov
jl
sub
xchg
int
dec
ja
std
jne
(bad)
int
add
rol
sbb
fisub
call
or
cs
adc
loop
retf
sbb
mov
push
lods
jae
jb
or
sbb
xchg
dec
mov
call
xchg
sub
pop
pop
sub
xchg
lods
bound
mov
ret
retf
aaa
mov
or
(bad)
stc
test
stos
in
sbb
lea
out
data16
xor
pop
into
daa
jl
leave
pop
sahf
inc
hlt
adc
xlat
fld
aas
mov
mov
sub
aam
sbb
or
add
pop
shl
pushf
jecxz
jbe
mov
dec
and
fidivr
fist
xchg
popf
or
(bad)
cmp
dec
call
mov
aaa
cli
fs
inc
jmp
pop
jae
arpl
and
shl
push
shl
push
cmp
jge
stos
and
add
pushf
test
adc
out
and
add
in
cmp
mov
rcl
push
ins
gs
fisttp
in
fwait
aam
retf
cmp
cmc
pop
jnp
paddusb
and
int
arpl
shl
and
sub
mov
ret
jp
rcr
and
adc
mov
(bad)
jno
arpl
pushf
movs
mov
cmp
popa
cmp
or
sbb
xchg
and
mov
jne
pop
jp
pop
jg
fdivrp
sbb
dec
fimul
out
sbb
(bad)
cs
iret
ret
jb
push
mov
sbb
bound
dec
jmp
mov
leave
jnp
fwait
into
into
jo
lods
jno
mov
inc
outs
stc
xor
stos
lds
jo
mov
sub
mov
ret
das
add
jns
ret
fldcw
jge
sub
sbb
fcmovb
push
and
dec
fld
fsubr
inc
push
sub
movs
pop
inc
sub
mov
aas
mov
sub
cld
out
add
pop
imul
pop
imul
or
and
or
fst
stos
sbb
lods
fld
lock
mov
iret
ja
cli
dec
add
out
push
int
out
xor
fsubr
inc
rcr
(bad)
setnp
pop
stos
sub
enter
daa
call
ds
sub
arpl
mov
lahf
inc
sbb
mov
test
and
jnp
mov
lds
into
xor
xchg
retf
sbb
push
push
retf
mov
(bad)
(bad)
dec
jmp
mov
cmps
(bad)
dec
out
sti
lock
pop
imul
loop
repz
(bad)
fwait
pop
ins
inc
pop
sub
dec
inc
push
xchg
inc
outs
or
outs
xlat
aaa
dec
mov
loope
call
xlat
stos
mov
pusha
xor
movs
bound
movs
cmp
push
and
jle
jns
xchg
ss
sbb
jle
inc
test
adc
out
cmp
ds
mov
jae
rcr
push
fdivr
imul
mov
xor
lods
dec
jno
jo
add
dec
cmp
les
xlat
dec
out
xor
sub
add
outs
xor
and
sar
mov
(bad)
test
outs
xlat
push
rol
mov
rcr
into
ror
mov
cmc
sbb
dec
imul
xor
retf
mov
cmp
mov
in
jo
stos
popf
sub
rcr
push
test
mov
sbb
aaa
xchg
bound
xchg
outs
ins
mov
loopne
cmp
(bad)
or
leave
xchg
mov
adc
pop
mov
popf
fidiv
cmps
nop
clc
mov
cmp
sub
cli
sbb
dec
imul
repz
hlt
xor
addr16
dec
or
sar
retf
cs
mov
movs
xor
dec
je
outs
xor
test
ret
stos
enter
das
or
xchg
mov
mov
mov
jecxz
cmp
leave
sbb
gs
pop
pop
sub
in
pop
stc
jle
mov
jns
sub
les
js
(bad)
cld
loopne
loope
push
fwait
cmp
xor
dec
mov
aad
or
and
stc
cmc
jmp
dec
aam
push
jp
push
pop
or
mov
pusha
stos
jl
mov
ins
push
push
dec
mov
test
fdiv
adc
sub
jl
js
sbb
mov
ds
sbb
aam
and
or
sbb
xor
movs
mov
out
adc
jge
outs
dec
jp
xor
test
call
mov
and
pop
fld
sub
arpl
mov
push
jb
shl
std
adc
rcr
jmp
lock
sbb
sbb
test
arpl
jp
ins
ret
jmp
push
data16
push
loop
xor
stos
dec
fnstenv
pop
mov
add
shr
test
pop
sbb
pop
jmp
mov
or
push
shr
jbe
sub
pop
jbe
xchg
les
jo
dec
xor
loopne
lds
inc
add
out
add
sbb
fimul
add
jbe
arpl
retf
and
or
outs
nop
jge
in
cmp
inc
push
pusha
cmp
test
loop
daa
fsubp
pop
lods
push
pusha
shl
ja
into
jle
test
dec
xchg
fidiv
out
mov
out
adc
jecxz
lds
or
(bad)
lods
repnz
aas
add
jbe
daa
out
pop
jmp
adc
inc
addr16
(bad)
xor
ds
popa
and
test
or
test
dec
fnstsw
mov
cmp
push
pushf
sub
dec
cmp
sbb
push
call
enter
dec
cwde
in
adc
xor
sbb
jecxz
imul
push
in
mov
sub
cs
dec
push
popa
cmp
test
cmps
nop
test
dec
mov
push
mov
cs
icebp
mov
mov
(bad)
jbe
inc
add
jp
sub
cmps
ss
repnz
mov
push
xchg
les
lods
or
xchg
or
(bad)
stos
cmp
mov
bound
mov
les
xlat
(bad)
in
int
cwde
jno
pop
cmp
add
lods
and
sar
jns
ja
shl
or
jb
into
jmp
stos
mov
and
adc
call
rcl
icebp
sti
dec
fs
mov
push
daa
xchg
cmps
cmps
rol
adc
ficom
aaa
or
mov
cmps
inc
imul
in
adc
inc
mov
cmc
or
fdiv
(bad)
xchg
or
sub
dec
xchg
or
xor
loop
sbb
adc
pop
in
jecxz
xchg
sar
pop
push
and
fistp
mov
ret
ficomp
js
mov
mov
sbb
pusha
loope
jl
ret
or
sbb
outs
cmp
imul
ficomp
xor
sub
xchg
cmp
push
shr
inc
rcl
clc
(bad)
xchg
leave
out
push
fucomp
mov
dec
dec
ja
jns
sbb
mov
fwait
ror
pop
fsubr
call
ror
ds
dec
push
mov
ds
and
xchg
xor
test
bnd
test
xchg
ins
cmps
repnz
push
inc
pop
dec
imul
xlat
add
mov
fs
cmp
inc
fcomp
xchg
sti
xchg
hlt
pop
sbb
xor
pop
stos
pop
push
ja
push
retf
adc
dec
xor
mov
nop
sbb
lea
jae
stc
repnz
add
cmp
es
inc
inc
dec
sbb
jge
scas
mov
std
jg
jmp
sahf
or
mov
es
ja
cmps
fxch
ficomp
jbe
adc
mov
jne
out
mov
outs
es
xor
xor
dec
retf
cli
sar
cli
jecxz
call
jg
xchg
pop
in
sub
mov
mov
inc
bound
or
or
nop
jp
cmovl
imul
mov
outs
test
(bad)
(bad)
and
fwait
or
and
into
push
out
test
inc
test
inc
pop
pop
mov
aaa
mov
cld
jp
xchg
mov
pop
popa
jae
cwde
je
dec
mov
and
loope
int
movs
out
fmul
sub
popf
and
das
scas
add
xor
add
lods
fisttp
mov
push
sbb
xchg
cs
and
mov
and
inc
bound
outs
pushf
les
inc
cwde
and
xor
pop
das
bound
scas
jbe
mov
shr
lea
mov
jp
dec
in
jnp
sub
dec
jle
inc
test
fdiv
stc
test
sub
xchg
xor
js
jmp
pop
data16
adc
arpl
das
add
sub
fcmovbe
mov
pop
in
jo
out
and
mov
sub
and
and
mov
je
adc
add
cmp
dec
sub
shl
dec
pop
cmp
fucompp
xor
xchg
mov
out
xor
inc
dec
push
sbb
daa
xor
movs
imul
xchg
push
nop
jmp
inc
dec
pop
inc
dec
lds
inc
movs
jmp
out
test
xor
dec
cmp
js
leave
mov
not
dec
cmp
mov
push
sar
mov
lahf
adc
xchg
mov
push
fidivr
loop
xchg
xchg
mov
repz
jb
jb
jo
sahf
test
in
xlat
test
mov
div
sub
cmp
lods
adc
es
cmp
mov
mov
aam
xor
fidiv
sub
les
xchg
leave
not
add
outs
aas
adc
lock
(bad)
fiadd
inc
std
sub
pop
(bad)
pusha
sahf
jns
lods
hlt
movs
fistp
sbb
enter
lods
popa
je
and
pusha
rol
adc
adc
dec
sub
das
in
dec
jmp
pop
push
ja
in
popa
dec
call
or
inc
clc
mov
(bad)
sbb
dec
pusha
hlt
adc
cli
aam
mov
push
movs
pop
mov
xor
hlt
lods
xchg
xlat
outs
push
scas
sar
mov
addr16
pop
sar
movs
xlat
jns
sar
sahf
fdiv
mov
cmp
and
xor
mov
loop
jnp
stos
mov
loopne
cmp
iret
nop
and
popa
xchg
into
popa
push
and
cld
inc
inc
inc
test
cmps
es
test
xchg
lods
test
(bad)
push
xor
stc
rol
loope
enter
pop
cwde
xor
in
pushf
push
sub
mov
pop
push
cs
sahf
repz
cwde
fcomp
out
or
in
xlat
stc
add
fadd
fwait
mov
xchg
jge
and
sub
dec
ret
shl
pushf
cwde
jnp
xor
test
adc
(bad)
sub
jo
(bad)
out
dec
ja
repz
sbb
ss
pop
test
jae
in
jno
push
es
fadd
add
fdivr
aam
(bad)
call
rcl
mov
scas
popa
inc
repz
scas
adc
or
loop
jle
xchg
push
jno
adc
pop
js
dec
add
add
cmp
jg
or
xchg
fsubr
or
push
inc
push
mov
leave
call
add
movs
push
aad
dec
jae
repz
mov
(bad)
bswap
outs
pop
pop
out
push
add
adc
(bad)
fadd
test
arpl
iret
mov
inc
or
cmp
cmps
sub
inc
cmp
dec
cmp
movhlps
dec
mov
cwde
hlt
mov
adc
(bad)
or
fidivr
and
das
mov
ins
adc
dec
add
xchg
jno
adc
imul
add
cli
fldl2t
mov
dec
or
mov
loope
retf
adc
push
mov
idiv
pop
lahf
clc
int3
test
pop
mov
(bad)
call
add
push
shl
in
sbb
adc
rol
sub
inc
pop
add
jno
ds
push
mov
ins
cmp
push
mov
xor
inc
jle
mov
push
and
loop
add
sbb
push
xchg
adc
pop
std
ja
dec
movs
or
push
inc
pop
mov
fwait
adc
mov
mov
mov
sbb
retf
mov
inc
icebp
xor
dec
xchg
sbb
jle
iret
shl
mov
out
lea
sub
fnstenv
scas
dec
or
pavgw
test
mov
lods
retf
outs
in
popa
jnp
lods
and
cwde
and
and
sbb
fwait
add
iret
xor
cmp
repz
aas
into
pop
xchg
jnp
cld
jmp
ret
mov
fprem1
sub
ret
dec
sub
jmp
mov
neg
mov
mov
inc
jp
and
dec
jnp
xlat
lahf
pop
cmp
jb
loop
ror
dec
add
into
aaa
adc
jnp
inc
hlt
inc
inc
pop
hlt
ret
pop
dec
fcomp
sub
adc
adc
into
add
aad
pop
add
cmp
cs
pop
aaa
push
js
push
jmp
xchg
xchg
jne
mov
stc
repnz
mov
clc
lods
jmp
xchg
xchg
adc
imul
pop
mov
sbb
jecxz
(bad)
mov
jb
rcr
sbb
cld
outs
and
ins
call
mov
ror
fcmovb
adc
ja
cmps
scas
arpl
outs
bnd
cmps
lock
mov
dec
retf
retf
cmp
(bad)
cli
mov
and
call
cli
sub
je
or
cmc
jns
and
sbb
pop
push
xor
popa
cld
in
cs
(bad)
daa
stos
call
or
jp
xchg
aad
cmc
fisub
test
inc
stc
je
xchg
sub
stos
xchg
dec
inc
xlat
inc
xchg
or
xchg
test
jne
jl
popa
iret
out
mov
xchg
std
scas
imul
xlat
mov
adc
pop
mov
xchg
(bad)
mov
fcomp
dec
mov
pop
mov
mov
aas
and
popf
push
xchg
mov
outs
cmp
out
add
sub
cmp
daa
rep
dec
push
jb
out
movs
pop
lea
arpl
ins
inc
push
rcr
pushw
js
imul
mov
xchg
inc
sti
aaa
or
cmp
xchg
mov
mov
or
lahf
lods
xchg
test
(bad)
dec
movs
and
add
hlt
cmp
hlt
dec
add
jbe
pop
outs
ins
xor
imul
pop
mov
leave
retf
aad
and
inc
hlt
neg
inc
stos
mov
leave
inc
not
jb
add
lds
daa
(bad)
(bad)
jl
cdq
ins
dec
dec
js
cdq
cmp
lods
shr
or
in
(bad)
add
or
mov
sub
mov
mov
xor
pop
mov
and
push
inc
jmp
popf
and
xchg
jg
jns
xchg
sti
loopne
lds
pop
pop
outs
rcr
push
leave
je
push
cmp
sbb
jno
dec
dec
enter
ret
pop
ret
lds
push
push
repnz
sub
mov
pop
add
shr
or
adc
nop
sub
xor
lea
or
sbb
jge
hlt
xchg
jmp
xchg
repz
jmp
cmp
cmp
popf
cmc
mov
popf
dec
sbb
(bad)
out
(bad)
sub
mov
loop
dec
inc
cmps
pop
cs
std
(bad)
jns
jecxz
push
int3
jns
inc
ins
fisttp
sbb
pop
outs
cmp
div
pusha
xor
sub
jmp
ror
pushf
out
retf
sar
or
sub
leave
and
fnsave
out
(bad)
or
ja
mov
or
jnp
call
iret
or
xor
out
mov
or
inc
jns
push
push
add
dec
outs
add
in
iret
sub
sbb
enter
mov
add
test
sbb
pushf
pop
loop
mov
and
ja
jno
ja
sub
xchg
jbe
or
iret
repz
je
push
cmp
and
stos
mov
pop
ret
add
mov
xor
hlt
or
iret
xor
repz
or
aas
jecxz
dec
pop
xchg
sbb
std
sbb
out
push
rcl
test
mov
repnz
add
ins
out
sub
(bad)
mov
int
mov
mov
xchg
stc
int
int
lds
or
mov
mov
or
inc
icebp
sub
add
and
mov
addr16
sub
inc
fldcw
cmc
repz
cmp
push
test
pop
aam
xor
fidivr
inc
pop
mov
fnstsw
ret
cdq
xor
je
xchg
inc
and
imul
mov
cmp
mov
pop
xchg
lds
loope
pushf
es
cmp
jmp
aam
cdq
add
and
sbb
out
addr16
mov
adc
pop
add
nop
lds
(bad)
dec
sub
add
or
push
fld
clc
test
clc
(bad)
vcvtsi2ss
icebp
pop
mov
xor
ja
mov
ja
ds
push
sbb
or
adc
push
ins
jnp
shl
xchg
xlat
dec
mov
hlt
cwde
shl
or
xlat
push
mov
icebp
movupd
lock
push
adc
xor
cwde
imul
push
clc
ret
pop
test
xchg
iret
push
push
aas
push
jbe
test
push
inc
fisubr
ja
(bad)
gs
scas
movs
or
pop
jp
in
push
mov
repz
xchg
pop
cmp
stos
xor
inc
clc
jb
adc
cmps
cmp
or
fidiv
jno
daa
add
jge
dec
in
adc
adc
xlat
aam
xchg
jbe
sti
imul
cld
push
clc
xchg
push
std
pusha
in
rcr
imul
mov
push
sbb
in
jmp
mov
retf
retf
adc
inc
popa
cmp
sbb
dec
sbb
aam
(bad)
xchg
push
jge
pushf
sahf
xchg
hlt
push
shl
pop
add
sbb
inc
adc
xor
dec
(bad)
les
scas
aas
xchg
cdq
sbb
jg
movs
ror
out
push
add
rcl
sbb
or
jb
fcmovnbe
(bad)
mov
add
cdq
fst
popa
push
iret
ins
or
in
sti
dec
sub
lods
scas
cmp
sbb
popa
add
mov
pushf
mov
push
xchg
pusha
sub
xchg
pop
cmp
cmp
mov
mov
fst
pop
cmp
dec
js
arpl
xchg
neg
movs
fcom
sub
sub
adc
test
fist
mov
wrmsr
and
xchg
je
push
mov
fnstsw
rcl
xchg
add
xchg
test
xchg
je
and
loop
aaa
sub
inc
mov
into
pushf
rol
add
gs
les
cld
neg
lock
mov
and
add
pop
jle
inc
outs
sbb
mov
xchg
mov
ss
lahf
or
sub
sar
lock
push
jp
sbb
jno
in
enter
out
jno
mov
jae
sbb
mov
cmp
cli
stos
fdivr
mov
inc
xchg
add
fistp
pop
jle
push
or
bound
ins
xchg
dec
fistp
fwait
clc
and
pop
ror
loopne
cmc
fs
sub
ret
sbb
aad
icebp
xchg
cmp
xchg
fimul
push
int
sti
mov
ror
ret
out
iret
sbb
add
or
jbe
fnsave
ins
arpl
inc
push
push
outs
mov
or
xchg
ins
test
push
pop
imul
rcr
outs
mov
xor
xchg
pop
dec
inc
es
outs
jb
sti
mov
or
mov
arpl
out
xor
jmp
add
(bad)
(bad)
repnz
dec
lods
aas
(bad)
mov
adc
mov
mov
cmp
or
xlat
adc
aad
mov
imul
sahf
ins
std
or
adc
xchg
lahf
mov
out
pop
stc
adc
fimul
adc
inc
test
sahf
sti
or
dec
fisttp
repz
std
(bad)
fstp
dec
jbe
sub
pop
(bad)
push
clc
add
ficom
add
fcomp
jg
inc
jmp
out
adc
and
pushf
and
pop
mov
cwde
(bad)
iret
gs
mov
in
test
out
cmc
test
mov
jp
jmp
ror
cmps
ins
xchg
mov
xor
mov
xchg
les
inc
xchg
cli
inc
imul
fisttp
dec
and
xor
mov
ja
mov
pushf
jg
dec
sub
mov
jae
xor
push
aad
pop
xlat
push
mov
es
imul
(bad)
fdiv
mov
dec
dec
ins
std
jmp
sub
into
in
adc
dec
xchg
dec
idiv
inc
inc
loope
inc
stos
cmp
adc
dec
(bad)
pop
retf
cmc
sbb
push
inc
(bad)
mov
inc
mov
xor
cld
fiadd
jge
loopne
and
adc
retf
mov
xchg
popf
pop
aam
gs
jno
out
sbb
ror
pop
popa
cmps
das
iret
cmp
out
fmulp
aam
test
jo
push
ds
ins
xchg
sbb
fstp
imul
mov
scas
mov
push
or
fstp
(bad)
xchg
inc
dec
adc
gs
adc
mov
adc
add
push
stos
imul
add
retf
mov
jg
sub
lea
sar
cmp
add
inc
loope
fidivr
(bad)
mov
mov
pminsw
pusha
push
ds
sub
cmc
sbb
mov
inc
es
cmp
sbb
(bad)
jns
or
jg
jmp
clc
sti
cld
loop
stos
fldenv
fcomp
mov
xchg
cmps
push
xor
push
mov
aad
dec
retf
sub
lds
call
movs
inc
das
push
mov
xor
sti
test
ins
jecxz
pushf
mov
aad
test
cmp
loope
stc
pop
shl
ja
pop
imul
mov
clc
push
repz
sbb
push
jbe
ins
cmp
jl
jno
sahf
in
(bad)
shl
push
lods
xor
mov
cmps
push
retf
jg
lds
lds
mov
out
das
or
daa
sub
fwait
or
cmp
jno
pop
mov
pop
mov
scas
cmp
dec
dec
sbb
into
cmp
mov
add
sar
cmc
add
mov
add
cmp
mov
push
repz
sbb
add
or
mov
or
inc
push
mov
jae
mov
out
mov
imul
pushf
mov
daa
jbe
(bad)
cmp
(bad)
jp
cmp
dec
mov
push
fldcw
inc
xlat
aad
jmp
or
call
pop
sti
cmc
out
lods
adc
loope
scas
mov
adc
bound
sub
mov
dec
xor
test
ins
je
add
inc
jp
cld
jmp
add
and
mov
(bad)
bound
cld
xor
push
fwait
push
mov
fwait
push
leave
mov
cwde
gs
inc
(bad)
dec
cmp
push
in
push
in
cdq
xchg
dec
jne
mov
pusha
adc
loope
inc
mov
xchg
jae
icebp
sub
lds
cmp
jl
cmp
shr
pop
add
jo
and
addr16
fwait
sti
aad
retf
mov
aas
in
lods
mov
std
add
call
pop
loopne
mov
pushf
add
into
push
push
cli
aas
rcl
retf
xchg
sub
mov
std
sti
imul
cmp
out
and
(bad)
cdq
or
and
fidivr
xlat
jmp
cdq
movs
(bad)
sbb
and
rcl
cmps
mov
out
or
pushf
xlat
out
icebp
ins
xor
test
xor
jne
mov
call
lods
jae
stos
ret
ins
(bad)
dec
jae
ds
inc
xlat
dec
ret
add
jae
stos
sbb
push
out
mov
cmp
nop
cli
jno
repnz
sub
xchg
add
xor
mov
fbstp
(bad)
cmp
ret
mov
loope
pop
mov
imul
lods
jecxz
sbb
pop
and
mov
sbb
or
xor
mov
outs
push
cmps
cld
jg
add
sbb
daa
out
jne
mov
mov
popf
loope
pushf
xchg
fwait
aas
mov
aaa
stc
cmps
iret
dec
and
ins
push
mov
cmp
sub
and
mov
fild
fnstsw
data16
shl
fcom
(bad)
hlt
(bad)
std
sub
in
neg
popf
cwde
mov
or
ins
pop
cmp
lea
lods
sbb
mov
mov
out
call
js
and
cwde
mov
or
test
fistp
int
inc
js
mov
mov
add
cld
push
push
cmp
push
mov
dec
add
inc
rcl
push
push
cwde
jns
xchg
mov
jbe
jge
jno
js
retf
push
mov
ds
jo
gs
(bad)
mov
mov
jg
push
pop
punpcklwd
cli
inc
sub
push
lock
(bad)
out
mov
cmc
cs
cs
enter
loop
and
test
stos
mov
and
bound
popf
div
xor
out
fcomp
mov
test
lods
mov
adc
arpl
adc
je
sbb
jno
inc
fimul
ja
imul
sbb
icebp
jno
jle
sar
jbe
retf
xor
and
aad
mov
inc
leave
pop
cld
loopne
push
popf
dec
pop
or
mov
add
pusha
fmulp
loope
add
mov
pop
or
inc
xor
jne
lahf
mov
test
adc
sub
pusha
das
adc
stc
add
imul
stos
repnz
js
rcr
out
mov
xor
sub
sub
ins
push
and
into
loopne
(bad)
and
dec
repnz
cwde
test
jmp
or
arpl
mov
cld
mov
lea
xchg
mov
inc
inc
(bad)
hlt
jp
adc
ret
pop
pop
outs
data16
in
push
aad
push
mov
mov
imul
jae
add
mov
sbb
dec
ds
outs
inc
pop
retf
arpl
shr
int
add
stc
jle
add
xor
rol
scas
out
ds
fsubr
push
in
(bad)
shl
mov
sub
punpcklbw
mov
icebp
mov
push
ja
xor
push
into
and
gs
cwde
movs
pop
push
adc
xchg
ficomp
(bad)
push
push
cmps
out
push
xlat
icebp
adc
inc
aam
test
fcmovnb
push
dec
and
jne
into
mov
ins
push
inc
popf
cmp
push
jnp
xor
fcmovbe
leave
pop
adc
mov
loopne
jge
xchg
push
push
mov
pop
push
jnp
retf
push
dec
fdivr
(bad)
jo
dec
lea
out
xchg
test
push
pop
ss
xchg
pop
and
and
les
(bad)
aas
inc
jne
fadd
add
push
cmc
sbb
iret
cmp
aas
jecxz
pop
push
std
int
jl
mov
and
xor
pop
sub
mov
retf
test
inc
sub
mov
fmul
lahf
dec
push
test
and
scas
push
es
pop
inc
mov
ins
lahf
stos
sbb
ja
adc
jge
jmp
xchg
or
bound
xchg
jmp
daa
push
sub
ss
jne
xchg
jnp
cli
das
jbe
pop
call
(bad)
push
mov
test
sbb
jecxz
lahf
sbb
int
movs
aas
adc
aas
or
or
jge
add
cwde
imul
and
std
frstor
cmp
call
push
mov
cmp
lds
jmp
sbb
ds
and
pop
xchg
xchg
rol
inc
mov
enter
and
push
mov
mov
fnsave
fiadd
mov
xchg
and
push
push
shr
cdq
and
mov
retf
fild
imul
xchg
stos
xchg
test
mov
movs
(bad)
in
aad
and
jecxz
pop
fisttp
retf
mov
mov
xchg
call
and
imul
sub
mov
loopne
mov
fstp
push
ficom
push
shr
add
cmp
adc
xor
(bad)
(bad)
dec
addr16
mov
ds
sbb
sahf
outs
fninit
fst
stos
aas
pop
jae
inc
mov
pop
mov
movs
xchg
push
or
push
push
mov
cdq
adc
pop
je
xchg
outs
jae
cmps
xchg
mov
or
pusha
movs
sub
pop
pop
mov
imul
mov
jp
inc
dec
test
push
mov
loop
cli
inc
dec
cmp
ret
(bad)
loopne
pop
fdivr
(bad)
cmp
and
xchg
push
cmp
cld
rcl
jo
loop
pop
(bad)
movs
mov
cdq
push
aad
adc
mov
mov
js
adc
pusha
stos
call
sub
inc
sub
cmp
sub
and
out
cmp
test
mov
mov
jecxz
mov
xor
xchg
addr16
cs
(bad)
push
(bad)
jno
std
(bad)
fcom
xchg
lea
or
movs
int
mov
es
mov
in
ret
ds
test
add
jge
add
fidiv
leave
popf
shr
mov
fstp
push
arpl
sbb
retf
pop
lahf
jp
popa
dec
xchg
sub
xchg
push
mov
pop
jmp
popf
sbb
jge
sbb
rol
adc
or
div
out
dec
out
inc
pop
xchg
loopne
dec
jp
je
lahf
push
mov
sbb
push
mov
mov
jmp
add
inc
in
stos
test
jmp
dec
sbb
cmp
push
inc
test
xor
aaa
mov
(bad)
jle
jmp
shl
cmp
adc
cld
loopne
sbb
fcomi
xor
lds
popf
neg
cmc
adc
xor
dec
out
or
inc
pop
test
pop
loop
nop
mov
pop
mov
fstp
repz
out
inc
mov
mov
jns
mov
cmps
inc
adc
leave
fnstcw
add
xor
addr16
out
fld
aad
mov
mov
xor
mov
(bad)
ds
clc
ficomp
sub
or
mov
lods
fimul
cld
xchg
gs
fiadd
sbb
jge
dec
fist
inc
fst
bound
jmp
inc
adc
cmp
lahf
mov
sub
in
lea
lea
or
jmp
in
cwde
dec
ja
push
cmps
xor
loope
fadd
retf
inc
xchg
cwde
lahf
stc
outs
adc
mov
in
retf
push
test
jmp
out
or
in
cmp
jne
dec
add
fbstp
mov
test
mov
cmp
loop
pop
mov
test
rcl
les
imul
or
sbb
dec
add
xor
mov
push
scas
and
adc
mov
bound
add
movs
repz
mov
fild
icebp
sar
adc
shl
xor
cmp
inc
repz
dec
jle
add
lock
shl
cmp
daa
int
push
ins
pop
add
push
sub
fld
pop
pop
fld
icebp
dec
jge
mov
add
fistp
imul
mov
sti
aas
sbb
push
sbb
mov
push
jl
push
sub
cmps
sbb
pop
xchg
fist
mov
repz
jle
mov
jno
fwait
jne
fcomp
gs
mov
or
mov
sub
cli
cmp
and
sub
sbb
pushf
loope
pop
xor
loop
mov
ins
or
jbe
(bad)
cld
jb
fcmovne
or
ficom
inc
push
jp
sti
sub
lock
adc
enter
ins
das
mov
(bad)
in
adc
cmp
inc
fst
jns
icebp
add
add
addr16
nop
xchg
out
pop
shr
(bad)
or
adc
lods
xchg
adc
or
cmp
sub
sbb
and
and
ja
cmps
jb
jne
dec
or
push
inc
jp
test
in
sbb
xor
ficom
cmp
xchg
cmp
leave
sbb
or
mov
push
pop
xchg
out
test
das
sbb
stos
test
push
fistp
std
pop
pop
inc
push
(bad)
pusha
mov
cli
rcr
inc
jne
in
cmp
and
mul
stc
fisubr
dec
dec
inc
popf
int
std
lods
aam
or
fidiv
fidivr
cli
test
por
es
movs
cmp
pop
adc
inc
rol
sar
(bad)
in
push
int
div
cld
(bad)
rep
or
inc
xchg
mov
mov
sub
xchg
mov
or
mov
mov
xor
mov
cmp
or
xor
sub
cdq
xor
(bad)
xlat
sbb
push
inc
and
inc
and
xlat
test
xchg
aas
pop
dec
aam
arpl
dec
loop
popf
cli
in
and
sub
call
ja
dec
sub
and
add
mov
pusha
xor
add
shl
jl
shl
dec
sbb
test
xchg
ss
mov
dec
scas
mov
push
mov
sti
adc
test
int3
repnz
sbb
sti
pop
mov
or
mov
xchg
ret
inc
add
inc
loop
(bad)
(bad)
xor
in
jl
cwde
and
clc
jb
test
cmp
add
out
lods
jne
xchg
(bad)
sbb
pop
push
aam
sub
mov
jae
sbb
rol
pop
or
out
outs
pusha
cmp
aam
icebp
and
ret
loope
mov
test
push
adc
pop
jae
xchg
js
aas
aam
mov
fst
xchg
jb
stos
mov
mov
in
sub
cwde
icebp
and
enter
ja
mov
push
xchg
sub
loop
repz
mov
mov
cmp
pop
sahf
test
mov
jge
ret
aam
scas
xor
mov
adc
and
push
mov
jne
mov
push
cmp
add
jmp
(bad)
cdq
adc
movs
adc
ins
push
std
inc
cwde
add
inc
sub
cmc
push
push
ins
lea
sbb
pop
push
mov
js
mov
retf
mov
dec
jmp
bound
mov
or
push
xchg
sbb
scas
hlt
jecxz
or
mov
vmulpd
xchg
add
(bad)
mov
(bad)
fidivr
clc
and
jb
loopne
sub
test
(bad)
in
(bad)
(bad)
mov
adc
push
mov
xlat
out
mov
bound
test
mov
xor
mov
stos
xor
scas
loope
repnz
or
mov
or
mov
out
or
jo
lahf
into
out
sub
neg
loope
clc
(bad)
adc
std
gs
xor
push
mov
xchg
xchg
bound
repnz
adc
adc
jl
jge
loop
push
cmp
sti
stc
xchg
ins
push
ins
mov
fist
ins
ficomp
test
xchg
aaa
cdq
fimul
sahf
sar
scas
icebp
mov
mov
inc
test
push
(bad)
jmp
pop
xchg
nop
out
sbb
xchg
pop
jnp
or
aad
dec
dec
mov
fwait
cli
sub
mov
pop
(bad)
leave
xchg
retf
stc
aam
test
mov
ins
inc
call
add
adc
mov
inc
jo
test
cli
dec
ss
lds
sub
in
sbb
addr16
cmp
enter
mov
xlat
(bad)
jns
mov
jmp
hlt
leave
aad
xchg
out
jno
aam
js
xchg
lahf
fcmove
leave
pop
cmp
sar
pop
test
push
std
push
push
or
fwait
outs
jne
sbb
retf
dec
push
in
pop
and
aad
sub
jne
mov
js
ffreep
sahf
mov
jle
cmp
std
addr16
(bad)
and
jo
and
out
(bad)
fsubr
ret
xchg
pop
inc
xlat
add
fucom
mov
scas
shl
fnsetpm(287
mov
sti
jmp
loop
push
sbb
frstor
int3
(bad)
mov
call
push
adc
jbe
out
das
cmp
mov
bound
pusha
mov
mov
xor
iret
popa
ja
popa
add
push
popf
mov
jae
adc
test
out
xlat
gs
ins
pushf
add
lahf
mov
sub
movs
lock
adc
fucomp
mov
mov
in
lods
dec
pop
hlt
mov
and
sub
test
pop
xchg
shl
ins
push
and
and
inc
or
sbb
fistp
mov
or
push
and
cmp
cld
sbb
cs
xchg
out
fisttp
arpl
imul
shl
js
adc
cmp
cld
jns
in
fdivr
fwait
sbb
add
sbb
xchg
(bad)
jmp
fcom
div
adc
(bad)
leave
xchg
xchg
jge
aaa
cwde
shr
pushf
arpl
dec
push
mov
add
cmp
lea
adc
lahf
icebp
out
lfs
or
out
cdq
iret
out
jp
add
stos
pop
mov
push
hlt
adc
movs
shl
neg
into
shl
sub
pop
call
mov
sub
sbb
sub
xor
mov
fcmove
imul
mov
fild
loopne
inc
addr16
or
(bad)
mov
and
in
jmp
push
ret
fst
mov
loopne
fwait
mov
mov
mov
ror
bound
sti
daa
and
jns
xor
packuswb
mov
loop
retf
addr16
xchg
adc
lock
adc
jmp
dec
fsin
mov
add
push
test
pop
gs
xor
cmp
add
jbe
add
pop
adc
stos
jae
or
stos
mov
push
mov
sbb
movs
outs
out
icebp
pop
addr16
cmps
ficomp
jnp
fwait
test
frstor
movs
leave
xchg
adc
jbe
or
jp
loop
imul
mov
test
xchg
xchg
js
je
mov
jne
fisub
shr
in
push
cs
pushf
fidivr
ret
jmp
xchg
sar
push
push
inc
xchg
push
push
outs
or
lahf
mov
jg
in
push
retf
test
xor
push
inc
sub
int
popf
dec
adc
or
sbb
movs
jb
inc
aam
icebp
dec
jns
or
outs
mov
pop
jbe
add
shl
enter
dec
nop
lock
pop
loope
loopne
cs
repz
imul
pop
repnz
push
rol
pop
mov
sbb
dec
jp
aam
nop
lahf
xchg
mov
mov
ds
lahf
cmps
pop
jge
push
cdq
xlat
mov
and
lss
(bad)
data16
sahf
mov
int
mov
in
push
shr
cmp
push
leave
retf
jmp
push
mov
push
cmc
in
ret
and
sub
xchg
cmp
push
cmp
mov
add
add
std
rcr
stc
(bad)
mov
enter
(bad)
push
ins
int
push
cli
repnz
ret
out
fcomi
mov
sub
add
mov
lods
sbb
es
push
out
mov
mov
pop
pop
pop
mov
inc
xchg
nop
add
cld
pop
scas
adc
push
or
adc
in
or
or
and
js
rol
mov
jne
inc
xlat
push
pop
push
mov
dec
in
loope
cmp
fwait
es
fs
xchg
cmp
outs
add
or
or
test
inc
retf
enter
mov
push
ss
lods
mov
les
pop
push
gs
sahf
cmc
(bad)
loope
push
mov
cmp
out
fsub
jo
dec
pop
dec
in
icebp
mov
mov
push
or
fisttp
fdivr
xor
or
enter
bound
aam
shl
jb
or
(bad)
data16
std
or
fst
xor
jb
sub
sub
stos
add
jne
xchg
mov
fistp
popa
mov
or
pop
add
sub
movs
push
scas
push
lea
hlt
jnp
dec
or
jmp
mov
sub
stos
int
mov
sbb
je
(bad)
in
loope
sbb
mov
pop
or
in
hlt
gs
leave
push
(bad)
sub
push
pusha
jge
sbb
add
cwde
(bad)
rol
sbb
stos
mov
cld
add
cdq
mov
int3
rcr
push
xchg
clc
fisttp
stos
ror
clc
xchg
lock
push
jmp
syscall
popf
mov
mov
sub
ja
cmp
jmp
inc
and
imul
mov
adc
and
int
jae
or
bsr
push
adc
rcl
xor
fiadd
inc
xor
retf
inc
inc
mov
adc
xchg
rol
push
sbb
mov
ins
xor
add
(bad)
in
inc
cmp
mov
adc
scas
repnz
mov
jp
repnz
cmps
les
mov
fadd
addr16
repz
aaa
bound
or
call
sub
es
lods
jbe
aas
(bad)
jmp
and
fst
cmps
mov
enter
add
jns
fadd
pop
loop
scas
ror
fidiv
addr16
mov
aad
call
fwait
sar
rol
jns
int
enter
mov
out
mov
(bad)
aad
jnp
cs
xor
ds
mov
popf
mov
xor
aad
leave
cmp
mov
and
jnp
mov
fadd
popw
add
or
add
mov
inc
sub
in
push
inc
mov
cmp
stc
shl
inc
in
(bad)
loop
es
and
rcr
xchg
lahf
arpl
jne
push
xchg
rcr
cmps
retf
popa
add
or
clc
add
arpl
pop
push
call
or
movs
popf
shl
psraw
leave
inc
popa
inc
inc
mov
rcr
xchg
mov
shl
into
hlt
lods
inc
add
std
out
nop
pop
sbb
fiadd
cs
test
adc
push
push
pop
inc
test
xchg
pop
inc
inc
pop
xor
inc
fistp
mov
fist
loope
(bad)
jne
sahf
fbstp
mov
in
and
dec
xlat
mov
pop
sub
lahf
mov
add
jge
mov
xchg
jns
sbb
ret
dec
xchg
mov
pop
stos
ja
(bad)
and
mov
rol
add
mov
retf
dec
in
cmc
and
jns
mov
add
mov
sbb
add
ret
dec
icebp
inc
fsub
cmp
sbb
jns
scas
pop
mov
cmp
xchg
test
dec
jb
inc
retf
or
sar
push
add
jno
jnp
movs
and
nop
pextrw
mov
sub
and
adc
cmp
test
sahf
mov
ficom
call
pop
fucomp
add
pop
pop
jbe
adc
(bad)
ret
popf
sub
cwde
std
pop
dec
sbb
inc
js
cmp
mov
gs
outs
pop
adc
fdiv
adc
dec
aam
dec
and
clc
clc
push
test
sbb
jg
pop
pop
pop
mov
into
rol
je
xor
inc
call
repnz
shr
dec
addr16
rcr
sbb
lock
aam
repnz
(bad)
push
mov
ja
cwde
inc
inc
cwde
dec
mov
ror
cmps
outs
sbb
cwde
jnp
push
pop
fimul
mov
out
enter
push
mov
and
scas
mov
gs
or
and
pop
push
mov
mov
sbb
cmpps
icebp
je
adc
pop
in
cld
or
push
fldlg2
xor
xor
aas
shl
add
in
jle
bound
retf
push
out
cmp
mov
pop
call
lods
inc
jmp
pushf
adc
fistp
jmp
pusha
test
cmps
sub
in
push
or
aas
push
cmps
add
pusha
leave
ja
sub
jmp
add
jp
mov
faddp
mov
inc
fidivr
lods
adc
sbb
sub
and
(bad)
outs
repnz
sbb
dec
fbstp
stos
cmp
jb
mov
adc
push
cli
jbe
cmc
rol
add
stc
mov
hlt
xchg
xor
arpl
adc
(bad)
add
jmp
mov
pop
fwait
xchg
jmp
test
jo
sbb
in
sub
cmps
jg
test
movd
or
jbe
iret
imul
cdq
add
sub
xchg
mov
or
mov
stos
and
clc
push
lock
jae
push
popa
sub
push
(bad)
mov
mov
mov
dec
repz
ins
mov
sbb
push
xlat
ss
inc
fidiv
xchg
pop
addr16
fstp
push
or
inc
out
hlt
adc
sbb
in
jbe
(bad)
mov
xor
fisttp
repnz
sub
mov
sub
int
stc
in
bound
inc
sub
xor
int3
idiv
sbb
or
ja
aad
push
jecxz
adc
mov
cmp
adc
cmp
inc
out
pop
xchg
xchg
adc
sti
adc
add
inc
pop
dec
sahf
and
pop
push
cmc
mov
test
fwait
push
test
loope
retf
xchg
pop
push
cmp
push
and
dec
and
mov
push
xor
ret
retf
outs
inc
int3
sahf
jp
or
inc
pop
(bad)
shl
enter
adc
(bad)
dec
nop
mov
xlat
sbb
inc
sbb
push
outs
inc
mov
jge
jmp
imul
(bad)
cmps
or
lods
mov
dec
and
sti
int3
test
scas
mov
add
cmp
xor
fs
int3
pop
frstor
sbb
retf
fs
cmp
fwait
in
xchg
(bad)
mov
mov
xchg
pop
push
scas
jnp
icebp
imul
inc
sub
imul
sti
cli
sbb
sub
adc
mov
shl
and
xchg
sub
iret
popf
or
push
aaa
or
pusha
das
cmp
lods
push
add
xor
cmps
push
mov
ss
fdivp
mov
pop
cmps
popa
(bad)
je
pop
mov
pusha
cmp
mov
imul
fwait
mov
push
aad
shl
pop
jb
dec
push
mov
shr
ds
cld
fst
fldenv
int
pop
maxps
mov
jle
outs
sub
cmp
les
and
mov
addr16
inc
xor
pop
dec
adc
pop
sbb
xchg
lods
and
sti
or
pop
inc
test
dec
or
loop
(bad)
cmp
jge
jmp
lock
and
outs
sbb
sbb
inc
test
dec
ret
mov
fdivr
mov
mov
sti
(bad)
mov
(bad)
jne
jmp
outs
and
cwde
push
(bad)
stos
clc
adc
in
aaa
js
pop
mov
imul
xor
js
out
(bad)
mov
pop
les
enter
xchg
int
test
jns
je
mov
retf
(bad)
lea
pusha
cmp
lock
dec
push
addr16
or
test
out
test
mov
inc
push
push
mov
or
inc
fild
mov
mov
xor
pop
jp
and
cdq
pusha
xchg
mov
jmp
outs
cli
push
gs
push
dec
out
int
push
inc
scas
je
fcmovnu
in
rol
cmp
retf
loopne
dec
jae
icebp
mov
dec
add
retf
out
and
mov
dec
jp
inc
bound
test
add
sbb
movs
repnz
jb
mov
hlt
retf
das
mov
xor
or
xchg
push
sub
cmps
(bad)
int3
sub
cmp
aaa
mov
inc
mov
scas
ins
pop
mov
sbb
sti
test
add
xchg
jl
push
(bad)
mov
mov
jbe
add
inc
xor
jbe
out
aaa
pushf
or
retf
lds
repnz
sub
mov
jne
fisubr
adc
jge
pusha
cmp
shr
jb
cdq
std
mov
mov
mov
fild
outs
test
cmp
or
adc
sub
addr16
xor
push
jnp
loop
mov
mov
mov
jp
cwde
in
jns
sbb
stos
mov
cmps
adc
stos
add
xchg
or
cmp
mov
mov
fisubr
in
xor
mov
scas
inc
loop
or
je
pop
jg
fnstenv
das
mov
outs
scas
pop
xchg
add
sti
xlat
mov
stos
mov
or
mov
mov
fnstsw
xor
mov
xor
daa
jbe
loopne
es
cmc
sub
xor
sbb
lods
push
(bad)
adc
les
and
pop
ret
mov
popa
xchg
jb
or
mov
movs
sbb
lahf
and
add
scas
xor
mov
pop
mov
sub
ja
jp
shl
pop
call
add
imul
test
sets
jo
std
outs
xchg
mov
mov
add
push
retf
mov
add
add
dec
daa
dec
enter
jmp
jne
stc
adc
rol
mov
test
out
inc
stos
fbstp
lods
mov
sbb
jmp
mov
fbld
fucomi
mov
ret
shl
enter
sub
fisub
stc
jl
inc
sub
add
jg
(bad)
mov
ins
fdivr
pop
push
or
movs
mov
fst
xor
jne
nop
mov
jmp
daa
ror
test
gs
sub
jae
retf
mov
je
xor
and
and
(bad)
dec
xchg
fbstp
jmp
dec
imul
cwde
mov
xchg
mov
mov
xchg
bound
push
ret
(bad)
xor
shr
repnz
add
rcr
add
(bad)
pushf
pop
mov
movs
xor
adc
jge
fwait
jp
mov
data16
retf
imul
pop
(bad)
popa
push
ret
push
dec
add
or
int3
(bad)
mov
add
cli
adc
fucomi
idiv
rcl
fnstsw
ret
movs
ret
sahf
in
jmp
sub
fistp
pop
mov
ss
ret
ret
sub
popf
xchg
(bad)
push
xor
xlat
push
and
nop
loop
outs
inc
sbb
aam
jns
dec
adc
popa
sbb
jb
push
out
mov
jo
lahf
mov
stos
cmp
cmc
xchg
dec
cdq
xchg
mov
fmul
push
xchg
cmp
out
sub
sbb
xor
jl
xchg
sti
movs
icebp
mov
mov
out
or
mov
in
rol
push
mov
outs
mov
mov
div
push
mov
or
and
inc
push
lds
fidivr
fisub
xor
and
jb
mov
xor
rol
gs
fiadd
mov
in
popa
call
enter
mov
fmul
pop
out
sti
cmp
in
mov
push
add
call
inc
add
mov
sbb
imul
inc
jmp
imul
int3
pusha
adc
adc
push
not
mov
mov
xchg
jl
stos
test
scas
mov
push
mov
arpl
stos
call
outs
inc
daa
aas
xchg
bound
mov
or
add
push
ds
in
in
iret
hlt
xchg
pop
jne
or
mov
dec
test
jbe
aam
fdivp
pop
xchg
push
cmp
lea
in
pop
or
(bad)
cmps
pop
jp
inc
xor
aas
ret
imul
mov
ror
push
xor
lds
cmp
xchg
add
sbb
mov
clc
inc
sub
cmps
jmp
movs
push
repz
repnz
sbb
not
push
sbb
mov
jns
mov
adc
out
out
cmp
rcr
sub
cmp
scas
shr
xchg
js
jle
cli
inc
and
dec
push
or
mov
nop
jmp
xchg
mov
loop
sbb
dec
xchg
inc
ds
stc
test
adc
and
or
mov
mov
pop
mov
pop
pop
mov
xchg
add
adc
xchg
add
dec
std
ds
leave
jne
fbld
fst
push
jmp
jb
cmp
int3
fld
dec
mov
xchg
sub
fcomp
xor
dec
jge
and
adc
nop
psrlq
fmul
mov
add
lods
mov
clc
mov
and
jl
jo
call
ss
or
dec
call
aad
jno
(bad)
fnstsw
cld
dec
and
push
dec
int
fld
out
loopne
push
ja
out
push
movs
(bad)
movs
pop
leave
push
arpl
ja
pop
push
(bad)
repz
jno
sbb
jg
int
rcr
or
jae
imul
enter
add
pop
fstp
in
jnp
fsub
imul
pop
pop
movs
push
call
ficomp
or
xlat
add
mov
xor
jl
adc
mov
popa
push
aam
mov
cmps
cmps
adc
cwde
or
cmp
ds
(bad)
mov
and
cli
xchg
push
sub
in
(bad)
jmp
mov
fsub
xchg
hlt
out
xchg
les
mov
mov
pop
xchg
add
and
mov
and
cdq
popa
out
sbb
test
out
(bad)
addr16
ins
and
(bad)
out
outs
(bad)
xchg
mov
inc
ret
jmp
add
mov
pushaw
test
retf
jns
push
push
leave
scas
push
mov
pop
pop
ficom
push
not
(bad)
out
jl
xchg
in
mov
in
call
pop
popa
mov
(bad)
pop
cli
ja
in
push
call
jp
mov
gs
icebp
sbb
mov
lea
jne
mov
cmps
jmp
test
push
clc
or
jmp
inc
sbb
sti
mov
dec
je
push
je
or
xchg
lds
jmp
xchg
dec
xchg
adc
shl
fcomp
lock
sti
jle
inc
pop
mov
ja
pop
and
dec
icebp
mov
jecxz
dec
das
test
mov
retf
icebp
dec
fcomp
inc
pop
dec
mov
retf
sub
dec
sub
jmp
mov
mov
mov
add
pop
inc
sbb
push
aaa
or
enter
cmps
cmps
add
ins
cmp
sar
ja
out
popa
sar
cmp
ss
mov
movs
sub
adc
pusha
shl
xor
mov
lock
mov
stos
int
xor
push
jne
xchg
in
sahf
mov
ins
shr
mov
mov
push
jge
hlt
inc
loopne
jne
aad
jno
aad
pop
stos
add
mov
cmp
dec
mov
add
inc
neg
lock
mov
in
push
cmps
leave
pop
loop
xchg
dec
enter
(bad)
inc
inc
test
outs
fnstcw
push
ss
movs
dec
retf
popa
mov
adc
test
adc
mov
push
hlt
loop
sbb
scas
imul
popa
enter
jns
push
or
rcr
push
std
std
sar
and
adc
jg
mov
xchg
xor
and
inc
sbb
and
and
sbb
push
dec
xor
jp
inc
and
retf
mov
repz
adc
jge
aam
or
push
mov
(bad)
jmp
cli
std
jno
dec
sbb
jo
inc
(bad)
adc
movs
push
and
retf
out
push
push
imul
dec
stos
cmp
test
das
pop
aam
sub
adc
std
not
dec
push
inc
test
nop
cmps
leave
add
push
inc
arpl
dec
addr16
sub
mov
popa
push
push
pop
inc
fwait
add
add
outs
push
in
sbb
or
mov
pop
pop
adc
retf
mov
adc
and
push
push
ins
and
ret
lea
js
add
loopne
dec
push
and
inc
jns
add
pop
xor
lds
aam
fimul
xor
pop
and
adc
jecxz
or
lds
or
xchg
jmp
pusha
sahf
or
or
call
push
xor
adc
add
ret
cmp
(bad)
push
ins
adc
leave
sbb
push
fdivr
(bad)
fst
push
repnz
sbb
in
dec
sub
jl
mov
out
ror
out
lock
mov
jbe
addr16
ds
xchg
lds
xor
shl
xchg
ja
add
push
xchg
cs
xor
fs
mov
rcl
es
shr
sub
lods
ins
xor
push
ins
hlt
fcom
cs
push
movs
lds
inc
xchg
out
mov
jecxz
ds
test
jmp
into
dec
(bad)
dec
pop
mov
xchg
pop
fld
es
mov
stc
ror
repnz
mov
and
cs
lea
or
cmps
jle
and
stc
sti
aam
pop
jo
pop
xchg
lock
retf
and
push
sahf
xor
adc
and
jb
jle
cmps
lahf
mov
mov
xchg
punpckldq
fdiv
cmp
popf
aaa
aad
cmp
mov
mov
nop
jno
or
add
mov
movs
jnp
mov
xchg
out
add
xor
data16
push
pop
cs
or
sbb
js
inc
icebp
mov
add
mov
jne
pusha
(bad)
cmp
cs
jecxz
or
cwde
and
dec
(bad)
neg
pushf
or
mov
cli
inc
xchg
dec
or
into
xor
pop
or
rol
fwait
cmp
outs
push
and
jp
sub
cmc
adc
pop
dec
cli
jae
aam
sub
dec
ffree
cmp
fidivr
dec
test
dec
je
inc
xor
or
mov
lahf
push
in
inc
out
mov
mov
cld
cmp
sub
out
aad
dec
add
loopne
lods
cmp
add
jge
scas
and
and
leave
inc
pop
jnp
push
cdq
ror
jecxz
jl
xchg
cmp
dec
mov
inc
fldcw
retf
in
cmp
adc
push
test
scas
ret
add
inc
enter
dec
aad
clc
adc
mov
in
neg
add
out
and
inc
mov
adc
xchg
mov
mov
xor
mov
popa
cmp
fsub
loope
stc
mov
inc
jae
mov
jmp
cmp
or
repz
pop
in
adc
inc
(bad)
xor
(bad)
push
shl
outs
stc
js
into
push
xor
and
out
or
pop
fld
popf
sbb
mov
mov
push
adc
out
cmps
pop
jbe
mov
daa
sbb
dec
dec
inc
(bad)
pushf
popa
mov
add
push
add
rol
dec
pop
imul
or
into
stc
mov
lahf
push
aaa
and
jne
push
imul
int
imul
ret
xchg
mov
jns
sbb
stos
dec
daa
aaa
pop
xor
(bad)
sahf
jbe
in
fdivr
lods
aad
pop
xor
xchg
mov
cwde
(bad)
movs
mov
mov
inc
cmp
dec
rcr
mov
mov
fldcw
das
test
sbb
int
push
cs
sbb
xchg
shl
dec
dec
scas
jmp
pop
jb
addr16
pusha
imul
inc
mov
add
xchg
xor
push
in
js
ins
enter
lahf
xor
in
push
sub
jg
xchg
(bad)
repz
add
dec
mov
dec
cmc
leave
xchg
cmps
popf
mov
ss
xor
ins
sbb
aam
inc
gs
inc
fcom
cwde
rol
out
cli
(bad)
cmp
xchg
cmp
or
jae
mov
pop
popa
stos
xchg
sbb
mov
imul
pop
sbb
ins
xchg
ret
add
or
sbb
into
dec
jno
sbb
mov
inc
inc
xor
xor
jmp
les
(bad)
sbb
jae
add
in
hlt
bound
imul
test
fmul
call
jl
test
jmp
lea
fstp
mov
sbb
adc
int
mov
and
inc
out
sbb
adc
xchg
and
xchg
ja
inc
push
dec
sbb
mov
pop
jae
aas
test
mov
add
(bad)
sbb
aaa
cmp
div
arpl
dec
mov
adc
mov
push
xor
add
push
sbb
pushf
pop
jnp
push
inc
loope
lock
dec
stos
xor
loopne
sbb
(bad)
in
test
test
and
mov
jge
mov
push
and
jbe
shl
adc
(bad)
pop
mov
mov
lds
ret
in
and
gs
aaa
and
or
fs
(bad)
fwait
enter
cdq
xchg
in
scas
pushf
jbe
mov
sub
out
in
sub
(bad)
pop
es
sub
xor
sahf
cmps
xor
cmp
fmul
repz
cmpps
and
cs
adc
cmp
mov
mov
ja
ss
jb
push
out
jno
inc
dec
and
pop
inc
xchg
sahf
lods
ret
dec
add
mov
cmps
cwde
mov
dec
push
push
dec
jmp
pop
rcr
push
xor
sub
daa
ret
sbb
(bad)
xchg
xchg
push
mov
or
pop
fldcw
outs
(bad)
cmp
daa
sbb
push
cmp
(bad)
(bad)
movs
jne
call
ja
(bad)
leave
push
add
rcr
cli
(bad)
cwde
daa
adc
adc
push
jge
jne
int
sar
pop
rol
push
cmp
fidiv
jg
and
jmp
xor
and
popa
sub
jnp
iret
jl
and
ret
and
jbe
lods
push
push
fcmovu
cmp
xor
test
sub
ret
dec
jbe
ds
cs
jbe
js
mov
inc
movs
push
ret
fist
loopne
adc
cld
mov
mov
mov
xchg
inc
ror
popa
and
ja
repz
xchg
inc
imul
in
adc
sbb
ret
dec
sar
sbb
or
or
cli
sbb
cmp
dec
dec
in
cmp
clc
dec
fwait
inc
stos
out
lock
dec
loop
push
sbb
or
inc
adc
stos
push
pusha
push
test
inc
icebp
jge
les
cmp
add
loopne
xchg
xchg
mov
sub
pusha
pop
mov
adc
fmul
push
inc
mov
pop
repnz
in
ins
cld
iret
fsubr
int
xor
cli
cmp
loop
lods
sbb
jmp
xchg
loopne
rcr
xchg
inc
cmps
das
fsubr
fild
jb
push
and
cld
cs
daa
test
mov
mov
mov
scas
push
push
mov
repnz
pop
xchg
fidivr
xchg
mov
jbe
scas
hlt
mov
pop
add
adc
add
lock
mov
mov
in
into
push
rcl
rol
popa
mov
clc
dec
or
push
jg
mov
inc
cmp
shl
inc
add
aam
ds
scas
sub
repz
inc
int3
int3
xchg
aas
lea
and
push
push
in
daa
mov
add
stos
aad
xchg
adc
pushf
dec
push
dec
div
and
mov
gs
pushf
and
je
and
repnz
sbb
and
xor
pop
jbe
cmp
cmp
mov
test
popa
xor
push
xor
sub
cmps
in
es
mov
int
xlat
mov
cvtps2pd
xchg
xor
xchg
fisub
adc
mov
and
out
ins
daa
int3
adc
ja
test
xor
ss
stc
call
add
or
scas
xor
addr16
addr16
rcl
mov
ds
pop
ror
jnp
je
push
push
pop
fmul
cmp
cmps
dec
call
mov
dec
inc
sub
test
adc
nop
fisub
das
mov
sub
mov
aaa
movs
xor
adc
push
cmp
cmps
cmp
les
ss
fcom
or
je
xchg
(bad)
push
add
loopne
cmps
pop
fwait
popa
out
(bad)
and
les
lahf
ins
xchg
xchg
jmp
js
test
mov
out
sahf
jl
ret
data16
fstp
scas
mov
jg
pop
xor
cld
sbb
adc
cld
rcl
cmovno
mov
jge
push
dec
ins
pop
cmp
cmp
aam
lock
fidivr
xchg
cli
mov
jg
mov
sbb
out
lock
sbb
js
cld
jno
shr
outs
xchg
out
pop
out
adc
pop
mov
mov
mov
test
int3
pop
mov
daa
sti
int3
js
jmp
clc
in
pop
sub
xor
les
dec
xchg
fcmovbe
mov
mov
jmp
out
inc
and
ins
(bad)
mov
mov
movs
out
mov
clc
aad
jne
push
jb
mov
scas
jmp
jge
push
jne
inc
mov
jnp
aaa
dec
ret
inc
push
cwde
into
push
push
jo
retf
mov
push
repz
retf
retf
pop
pop
test
cld
inc
mov
repnz
xchg
mov
mov
stc
sub
push
adc
dec
repnz
test
cmp
out
bound
test
mov
push
xchg
dec
jae
cmps
lea
or
jg
mov
push
popf
jae
leave
shl
mov
repz
mov
test
add
shl
jns
xchg
inc
rcl
mov
pop
xor
mov
add
push
fcomp
(bad)
and
xor
mov
(bad)
or
mov
ins
repnz
pusha
mov
in
out
fs
sahf
btr
mov
lods
xlat
pop
cwde
sub
test
daa
daa
(bad)
jl
or
or
rol
(bad)
pop
mov
fcom
imul
vunpcklps
xchg
and
add
sub
out
(bad)
and
and
mov
in
ss
jmp
test
or
inc
call
(bad)
fsubr
aam
pop
popa
jmp
pop
int3
dec
pop
lock
sub
jo
sbb
inc
repnz
pop
mov
inc
dec
push
and
fistp
and
(bad)
xor
xchg
dec
iret
lahf
push
xor
imul
xor
pop
(bad)
lods
push
cs
outs
lds
push
push
ror
adc
shr
pop
or
inc
in
sar
aaa
mov
retf
test
or
call
mov
mov
add
ins
push
xor
xor
in
dec
cmps
adc
neg
cmp
jmp
(bad)
xchg
lock
dec
lock
jno
fnstsw
push
pop
mov
push
push
cdq
adc
call
xor
aad
xchg
fs
sub
add
inc
(bad)
and
mov
push
std
jecxz
add
test
push
mov
add
loopne
jmp
out
inc
cli
fidivr
stos
data16
mov
pop
fcomp
idiv
in
mov
call
test
call
xlat
mov
xor
pop
lds
mov
mov
push
mov
xor
fs
mov
pop
add
jne
jp
adc
int3
mov
sti
jmp
fcom
jo
mov
pusha
iret
and
inc
pop
adc
xor
sbb
push
xor
mov
ss
pop
(bad)
movs
je
adc
imul
mov
cmp
outs
xchg
ss
cmp
aad
int
movnti
xor
xor
push
cli
pushf
lods
jmp
test
je
xchg
sub
fwait
std
pop
and
mov
dec
and
dec
xchg
add
call
adc
xchg
sub
mov
xchg
add
sbb
pop
pop
int3
ss
sbb
jp
dec
mov
or
jl
xchg
or
loope
(bad)
sbb
pop
les
scas
enter
adc
mov
mov
movs
sub
pop
push
mov
sub
inc
pushf
rol
aaa
push
std
pop
add
js
lds
jge
out
inc
push
or
mov
imul
xor
sar
or
push
mov
jne
lock
gs
push
ss
cmp
mov
and
scas
jb
jno
xchg
fwait
jb
jge
lea
(bad)
mov
movs
cmp
in
test
dec
fisub
es
mov
and
repz
or
ins
enter
lds
idiv
enter
and
lds
cld
shr
mov
retf
jmp
xchg
dec
bound
jmp
jmp
add
jo
ds
div
inc
sar
cmp
or
sub
(bad)
xlat
sub
cli
sub
fwait
jle
call
imul
es
sbb
adc
or
outs
pop
fisubr
ror
push
dec
imul
cwde
out
pop
(bad)
(bad)
pusha
ins
or
adc
jp
or
mov
pause
mov
mov
dec
lds
pop
lock
popf
mov
xor
xchg
sahf
or
retf
jae
cmc
adc
(bad)
fwait
xlat
movs
add
cld
adc
mov
test
jb
mov
xlat
cmc
sub
fimul
sub
rcl
jbe
inc
pop
pop
mov
(bad)
daa
shl
xchg
sbb
fbld
sub
and
jbe
add
pop
mov
or
adc
ror
cmps
cdq
movs
dec
loop
mov
ds
pusha
movs
fimul
and
dec
leave
loope
ss
dec
or
test
mov
push
gs
and
fild
aas
jbe
popa
xor
mov
sbb
and
in
mov
mov
popa
or
ds
ins
sub
add
sub
ds
xor
ret
and
shr
in
cld
cs
dec
mov
push
jl
mov
scas
or
mov
fwait
mov
sbb
jo
add
aas
out
leave
jg
sbb
sub
js
std
push
arpl
hlt
sar
int3
daa
lods
jae
pop
sbb
cmp
push
jp
scas
rcl
data16
scas
cs
ins
imul
adc
jl
pop
or
(bad)
inc
fistp
iret
jmp
fwait
push
imul
mov
jle
ds
repnz
mov
and
mov
cmc
jno
or
or
call
cli
or
mov
mov
mov
cmp
pop
jmp
ds
bound
mov
cmp
clc
jnp
add
sahf
push
or
adc
mov
xchg
test
(bad)
in
xor
(bad)
jl
mov
js
sbb
sti
call
xchg
mov
dec
dec
out
das
and
mov
add
ins
ins
(bad)
mov
call
sbb
dec
and
ins
add
adc
push
enter
push
push
lock
and
shr
fisttp
add
(bad)
xchg
in
das
inc
sub
adc
rcl
sbb
jmp
int3
cmps
fmul
cmp
cmps
dec
pop
pushf
(bad)
inc
xchg
call
jle
jl
pop
jae
push
mov
mov
icebp
inc
jge
jae
pop
test
jmp
sbb
cdq
mov
test
into
adc
out
nop
adc
mov
in
jecxz
scas
and
and
data16
xor
push
rcr
add
add
and
xchg
inc
and
lods
inc
jnp
test
mov
cmp
out
xor
or
mov
lds
dec
jmp
addr16
(bad)
loope
mov
sbb
sub
shl
scas
add
fs
add
and
out
mov
mov
fdivr
fisttp
mov
mul
inc
mov
cmp
in
jmp
or
leave
push
cmc
adc
pop
xor
jp
push
jae
xchg
dec
icebp
sbb
jp
les
xor
xor
pop
jecxz
adc
cmc
sti
lahf
xchg
into
mov
or
jle
nop
add
rol
mov
cmp
fisubr
xchg
jge
xchg
sub
repz
mov
pusha
push
int3
push
sub
fstp
test
mov
iret
and
lock
adc
add
add
pop
cmp
dec
jge
inc
jmp
scas
scas
and
pushf
dec
das
cld
jmp
out
ficom
jo
mov
inc
pushf
sbb
test
xchg
push
push
or
sub
adc
mov
neg
icebp
jne
jmp
imul
shl
test
cmp
mov
sti
cli
add
pinsrw
add
pop
cmps
dec
out
mov
jne
mov
cmps
jmp
dec
sbb
rcl
mov
mov
dec
(bad)
scas
dec
jp
ror
mov
jns
cdq
stc
into
sbb
retf
ror
and
gs
es
fisub
inc
mov
aas
cmp
enter
rcl
or
pop
gs
aaa
pop
pop
mov
ja
jp
xor
test
test
jae
fbld
repz
es
add
or
sub
sar
jo
lock
fild
jb
lea
test
add
or
in
xor
lock
(bad)
jmp
mov
adc
data16
dec
das
mov
repz
sbb
mov
or
or
(bad)
in
cmp
adc
adc
(bad)
jle
sub
adc
xchg
or
stc
add
repnz
or
xchg
sub
cmp
test
outs
aam
shl
aaa
test
pop
mov
fild
mov
(bad)
sti
int3
mov
push
movs
xor
and
push
hlt
adc
(bad)
dec
loopne
push
and
jecxz
sub
jmp
je
nop
xor
or
cmc
mov
imul
pop
add
xor
push
imul
movs
adc
addr16
and
pop
cdq
ja
enter
push
dec
pop
repz
cwde
xchg
push
test
loopne
cmp
mov
jg
test
inc
scas
fxch
sahf
(bad)
mov
jp
data16
dec
cmp
pop
push
pop
dec
pop
out
push
mov
imul
cdq
jb
imul
pop
fnstcw
jle
fsubp
sar
push
and
jle
xor
outs
(bad)
out
cmp
gs
add
sbb
mov
or
sub
or
push
ret
dec
(bad)
pop
add
mov
neg
mov
in
ror
sbb
loop
mov
mov
cmp
or
sub
aas
mov
mov
adc
jmp
js
lea
retf
call
not
rcl
stc
mov
push
inc
in
lods
loopne
pop
inc
push
add
hlt
test
push
xlat
iret
pop
in
repnz
test
sub
dec
popf
cdq
test
xor
int
jmp
cmp
pop
lods
(bad)
int
lods
pop
add
call
inc
jbe
les
dec
jge
rcl
xchg
fidivr
adc
mov
loope
xlat
sbb
outs
neg
mov
jecxz
mov
popf
jle
xchg
arpl
bound
and
scas
outs
clc
ret
jl
imul
(bad)
push
sti
hlt
jae
ret
fst
push
cmp
dec
pop
pop
les
mov
inc
in
or
inc
inc
xchg
adc
lock
outs
xchg
add
sar
or
neg
inc
int
pop
in
push
mov
shr
imul
and
div
retf
(bad)
mov
xchg
mov
loop
arpl
jl
hlt
cld
xor
shl
mul
in
xor
xchg
mov
shr
in
push
call
movs
adc
push
pop
pop
and
call
cmp
psubusb
mov
mov
cmp
inc
xchg
and
into
sahf
xchg
and
inc
pop
je
lahf
dec
sub
(bad)
test
xor
jns
mov
pcmpeqd
mul
lahf
popa
sar
mov
imul
or
inc
stos
ret
repnz
sub
xor
dec
popf
mov
push
(bad)
nop
xchg
call
cs
push
xor
xchg
adc
inc
sbb
cmp
in
xor
bound
inc
scas
aam
lahf
cmps
jmp
inc
stos
add
mov
jp
std
stc
sbb
or
push
inc
stos
mov
mov
cli
dec
sub
inc
lea
pop
in
push
into
scas
dec
ret
pop
xchg
xor
adc
cmp
pop
fcom
fsubr
pop
pushf
imul
mov
and
pop
cmp
add
mov
mov
enter
jbe
test
mov
fdivr
je
ficom
mov
push
xchg
ins
in
xor
xor
mov
test
xor
leave
xchg
lock
rcr
or
ss
hlt
sub
mov
ins
mov
popa
std
in
mov
arpl
or
mov
mov
nop
mov
fnstcw
les
ins
sbb
push
lock
fcmovnb
mov
aam
xchg
pop
je
popf
add
and
rcr
in
shl
push
push
stc
std
sahf
outs
leave
test
mov
leave
out
outs
outs
jecxz
sbb
sbb
inc
cwde
add
jmp
adc
cmp
sbb
loop
cmp
add
lds
sub
cmp
imul
imul
pop
data16
mov
adc
mov
retf
outs
movs
inc
xor
cmps
nop
das
ins
inc
adc
das
pop
movs
add
lods
test
hlt
int
(bad)
addr16
pop
and
dec
fcomi
add
mov
data16
out
(bad)
imul
pop
push
and
push
xchg
stc
cli
mov
stos
in
adc
lea
stc
imul
push
fcom
pop
mov
jb
call
mov
push
xor
mov
mov
or
jns
(bad)
cmc
sbb
cmp
and
out
sbb
pop
jg
ficomp
shr
mov
inc
retf
jle
xor
test
aas
jnp
sbb
add
int
in
jle
add
movs
std
xchg
sbb
push
pop
cld
dec
pop
daa
pushf
mov
es
xor
das
jl
js
cmp
mov
arpl
jne
inc
mov
jnp
push
xchg
push
xchg
jmp
xor
hlt
jno
stos
and
pop
scas
test
out
mov
mov
jno
add
pop
ss
pop
(bad)
xchg
outs
adc
test
add
ret
lock
push
dec
push
jg
lea
test
mov
clc
adc
sub
mov
lea
ins
clc
dec
mov
shr
push
cmp
shl
clc
ja
lods
jns
mov
and
cld
cmc
push
push
add
pop
jle
retf
std
mov
imul
jecxz
int
inc
aas
repz
jmp
cld
pop
repz
dec
and
sub
pop
adc
pop
xchg
cmp
int
lea
mov
mov
sti
mov
loopne
pop
xlat
pop
mov
adc
ja
aaa
sub
or
std
pop
or
(bad)
jmp
not
popf
jg
pushf
(bad)
hlt
(bad)
inc
mov
je
ins
and
mov
mov
sahf
aaa
mov
sbb
cld
call
sar
aam
and
pop
dec
inc
movs
clc
mov
in
aad
repnz
and
out
jae
sub
int3
cmp
pop
push
fwait
cmp
xchg
dec
add
mov
pusha
xchg
mov
dec
inc
leave
imul
aam
or
iret
movs
sub
fwait
jo
add
sti
je
xchg
imul
push
scas
fsubr
into
cdq
cmc
add
cmp
cli
mov
dec
in
mov
fcmovne
push
add
int
sub
pop
xchg
adc
inc
cs
cmc
jns
lods
sbb
mov
(bad)
(bad)
pop
fistp
xor
stos
mov
iret
jne
lods
test
addr16
xchg
pop
shl
xchg
mov
sub
sub
adc
sbb
shl
mov
mov
mov
sbb
call
sbb
mov
dec
inc
push
shl
sti
clc
out
mov
cdq
jg
xor
cwde
fld
push
jae
shl
mov
or
jmp
mov
ins
sub
or
push
mov
imul
test
dec
icebp
mov
pushf
fidiv
sub
adc
in
push
add
sbb
es
xchg
xlat
lahf
cmc
lock
fwait
mov
push
sub
xor
iret
loop
push
mov
and
and
adc
cmp
lea
or
mov
lock
outs
pushf
outs
mov
lods
push
mov
(bad)
xchg
pusha
sbb
arpl
loopne
jp
in
out
hlt
cwde
jbe
pop
xor
test
int3
pop
nop
and
std
rol
inc
aaa
mov
xor
jp
leave
xor
cwde
shr
mov
cmps
sub
and
add
fstp
cld
iret
pop
outs
pop
cmp
pop
sub
das
cmp
ins
mov
les
pop
fld
and
dec
mov
push
ins
cmp
inc
xor
push
imul
daa
fs
add
ins
test
inc
mov
sbb
dec
scas
sbb
sahf
xlat
repnz
jne
paddd
sub
fstp
loop
xlat
pop
stos
jecxz
fs
fisttp
adc
inc
mov
pop
imul
imul
sbb
aas
jae
les
(bad)
popf
or
jg
push
hlt
sub
jnp
(bad)
hlt
or
cmc
cmc
cli
adc
popf
in
add
jae
add
mov
das
hlt
movhps
xor
scas
sub
pushf
in
ss
xchg
xchg
ret
or
or
lahf
out
adc
jmp
jge
test
xchg
push
loopne
(bad)
push
popf
cmc
and
sub
or
mov
jl
xchg
or
pop
xchg
xor
shr
mov
push
pusha
xchg
sar
loop
(bad)
aad
(bad)
imul
shr
cmp
test
mov
jecxz
test
fcomp
(bad)
arpl
lods
xor
xchg
or
mov
mov
xchg
ins
dec
mov
not
pusha
jo
jne
and
sbb
or
and
add
rcl
ret
dec
outs
add
es
sbb
imul
adc
push
(bad)
fcmovnb
imul
fst
jmp
jge
out
daa
mov
and
(bad)
out
xchg
mov
sahf
lods
ja
scas
and
mov
mov
neg
retf
loopne
shl
cmp
addr16
pop
retf
pop
and
and
sti
int3
daa
stos
and
mov
test
or
mul
les
cmp
xor
call
test
jle
cmps
retf
call
mov
std
iret
or
jns
stos
xor
jmp
sbb
cmps
loope
leave
shl
sub
xchg
(bad)
xlat
xlat
add
(bad)
daa
jne
cs
jae
mov
shl
push
add
aaa
push
dec
sub
sub
aaa
xor
cld
fs
pop
jns
push
ins
xor
popf
in
popa
push
in
inc
push
das
push
stos
push
idiv
(bad)
mov
movs
add
xchg
fist
or
mov
fimul
not
pop
rcr
sub
imul
xor
pushf
stos
ss
mov
jns
retf
sar
fnstsw
or
jle
inc
hlt
mov
mov
loope
mov
adc
icebp
dec
dec
xor
jne
cmp
scas
mov
inc
and
mov
push
enter
adc
(bad)
cmp
xor
and
and
pop
data16
(bad)
call
inc
ss
push
xor
pop
jle
inc
jns
cmp
inc
mov
mov
jno
jbe
retf
and
push
int3
cmp
aas
cmps
dec
test
dec
jmp
xchg
jge
xlat
lea
rcr
pop
xchg
ror
xlat
pop
push
ret
test
jae
cmp
dec
sahf
or
sbb
shl
cmps
mov
sbb
pop
std
sbb
mov
loopne
imul
out
leave
aam
mov
stos
pop
lods
rcl
mov
std
stc
mov
mov
loop
mov
fstp
addr16
dec
dec
xchg
mov
sub
sahf
jle
mov
push
push
pop
xchg
es
int
leave
lahf
add
xchg
out
iret
nop
push
stos
mov
fwait
jl
pop
fld
cmps
adc
ins
pop
xlat
clc
dec
imul
add
int
add
enter
sbb
push
movs
lods
push
sub
jo
jg
icebp
sub
sub
les
je
or
mov
imul
sti
jbe
popf
(bad)
clc
jo
xchg
retf
inc
outs
xor
jne
add
or
pop
call
cmc
aad
js
inc
aam
lods
add
mov
fist
(bad)
fiadd
sub
cmp
leave
outs
ret
sti
shl
mov
pop
retf
cmp
mov
retf
test
fs
xor
in
jmp
sbb
sub
cmp
mov
fnstcw
outs
loopne
jne
sub
sti
push
xchg
ds
fisttp
cdq
mov
xchg
fisttp
adc
std
pop
pop
push
jbe
dec
sbb
or
call
imul
(bad)
stc
push
dec
xchg
sub
shl
xlat
fidivr
cdq
sbb
rcr
ins
add
mov
shl
repz
mov
ja
inc
fistp
(bad)
clc
rcr
lock
dec
pop
data16
xor
xor
inc
adc
shl
outs
sub
bound
push
xchg
popa
hlt
clc
push
fisttp
bound
jbe
pop
sbb
mov
js
movs
les
sbb
dec
(bad)
xor
sub
xlat
hlt
pushf
or
xor
sub
push
mov
and
push
jmp
lds
sub
stc
mov
sub
mov
call
imul
fs
lock
cdq
cmp
(bad)
sub
cmp
inc
pop
ja
and
sbb
test
dec
sub
sahf
mov
sti
aad
sbb
in
pop
xor
or
sti
inc
in
adc
loop
pop
jmp
in
sbb
xchg
cmps
or
add
sbb
aaa
loop
mov
inc
call
sub
call
into
std
in
pop
or
je
xchg
cmps
sub
das
pop
xor
mov
dec
data16
enter
inc
ins
mov
sbb
jns
adc
xor
outs
mov
cmp
sub
aam
jno
jg
mov
int3
mov
test
iret
(bad)
in
sbb
cmp
stc
jmp
movs
adc
(bad)
xchg
loopne
cmps
sbb
add
jmp
rcl
jge
scas
hlt
cmp
ins
pop
xor
add
push
mov
fdiv
xor
dec
aad
xor
pop
xchg
push
imul
inc
pop
sbb
add
xor
enter
or
ror
push
push
dec
call
(bad)
daa
test
pop
retf
pop
and
mov
adc
sub
adc
test
jecxz
popf
sub
push
xchg
dec
inc
mov
xchg
mov
stc
loope
pop
xchg
cmp
addr16
adc
add
mov
inc
and
loopne
mov
dec
iret
adc
xor
and
push
rcl
stos
push
pop
pop
or
and
jle
cmp
inc
jmp
fadd
and
retf
inc
cs
fbstp
hlt
repnz
and
sahf
jmp
xchg
ds
push
sahf
into
add
cmp
(bad)
(bad)
mov
pop
xchg
ret
cmp
dec
pop
daa
iret
in
nop
loopne
stos
dec
stos
(bad)
mov
lds
dec
test
test
je
je
adc
lods
lods
sub
pop
and
sbb
xchg
clc
lods
xchg
mov
mov
scas
cmp
ins
int
adc
add
xchg
dec
dec
inc
popf
shl
pop
(bad)
jmp
pop
rcr
stc
mov
add
push
enter
push
add
lea
jecxz
cmps
sar
dec
call
ficomp
cmp
and
jmp
je
or
and
xor
mov
mov
int3
sti
aam
loopne
pop
xchg
lods
mov
scas
or
pushf
mov
dec
les
pop
sub
pop
sbb
sub
rcl
test
or
fld
ret
leave
jg
add
cmp
gs
call
(bad)
or
sahf
xchg
ds
add
jno
and
dec
(bad)
mov
mov
data16
mov
sar
shl
into
and
scas
popf
xchg
mov
mov
xor
fcmovnb
int
lods
(bad)
xchg
out
mov
iret
cli
sub
push
in
and
mov
push
pop
rcl
mov
xor
xchg
push
add
lea
pop
into
loopne
in
mov
mov
jnp
test
les
add
ins
jmp
cwde
push
ds
pop
js
cwde
xchg
inc
bound
inc
xor
gs
int3
(bad)
(bad)
fld
dec
jnp
into
out
dec
call
jecxz
movs
push
loop
adc
fs
inc
adc
pop
jge
jmp
ins
xor
int
loope
add
xor
mov
imul
stos
lds
mov
jmp
movs
xor
(bad)
ret
xchg
ds
ins
out
retf
xchg
fnstsw
stc
jmp
add
out
mov
jmp
mov
xor
cdq
xchg
mov
out
jbe
scas
imul
sbb
lds
cmp
outs
in
fdivr
inc
dec
mov
add
jmp
leave
mov
dec
(bad)
je
mov
imul
(bad)
mov
or
(bad)
add
fisttp
add
push
pop
xchg
je
mov
inc
inc
xchg
jo
mov
mov
push
sbb
sbb
pop
popa
sub
std
mov
pop
sbb
test
movs
and
push
xor
das
(bad)
jmp
je
lea
inc
mov
sub
adc
stos
sahf
xchg
sbb
scas
(bad)
sub
test
ins
add
mov
inc
test
hlt
jg
loop
retf
je
mov
mov
(bad)
xchg
fwait
not
xchg
or
mov
cs
shl
adc
ins
daa
push
cmp
loope
nop
push
movs
push
and
cmp
pop
push
dec
add
mov
add
popa
leave
inc
fcomp
inc
dec
sub
push
iret
xlat
inc
mov
jg
xchg
repz
in
(bad)
ja
cmc
sbb
leave
add
fist
adc
out
push
push
ins
cmp
or
shr
mov
retf
or
sbb
sub
mov
add
das
scas
out
cmp
call
shr
xchg
pop
xchg
xlat
pop
pop
push
ret
mov
cmp
mov
pop
lods
adc
cmp
jmp
dec
sub
mov
cdq
aaa
les
std
pop
stc
adc
dec
xor
aaa
push
iret
leave
or
call
mov
cmp
arpl
out
fadd
pop
sbb
and
or
ss
sar
sub
or
cmps
jo
shr
and
fucomp
mov
daa
stos
add
repz
adc
xor
and
mov
sbb
call
ins
jmp
mov
add
mov
xchg
sub
mov
fild
sbb
in
mov
xchg
cld
xlat
and
ins
sbb
inc
aas
int3
je
mov
lods
(bad)
jae
retf
mov
sbb
xor
push
popa
dec
mov
(bad)
xchg
sub
adc
loope
xchg
xchg
or
pop
mov
aaa
add
gs
ret
scas
in
bound
add
mov
and
cmp
adc
out
int
and
pop
inc
sbb
jge
cmps
cs
cmp
adc
add
sahf
lods
push
rcr
sub
test
jnp
mov
sti
in
shl
cmp
fwait
jo
mov
stos
push
imul
pop
das
sub
xor
jmp
daa
mov
outs
rol
(bad)
(bad)
jne
in
nop
(bad)
fsubr
jge
inc
arpl
call
push
test
imul
cs
push
push
clc
pop
adc
add
cmp
stc
inc
add
inc
bound
test
xchg
xor
(bad)
mov
pusha
mov
ins
mov
sbb
iret
xor
aas
ins
mov
xchg
ror
or
or
cdq
mov
es
and
mov
push
out
jo
sbb
jbe
ja
sub
fimul
xchg
mov
and
ja
jmp
cmc
sbb
xor
lods
and
add
call
inc
pop
pop
loope
jb
xchg
mov
call
inc
sbb
dec
xor
pop
ins
cmps
sbb
lods
lock
jno
adc
pop
and
(bad)
sub
mov
(bad)
cmps
in
call
fild
cmp
xor
mov
mov
fdiv
jns
arpl
push
adc
jo
push
(bad)
pop
in
or
jae
adc
movaps
shl
(bad)
sub
outs
movs
dec
pushf
inc
adc
out
adc
inc
xchg
int
add
(bad)
js
inc
push
scas
data16
push
jnp
dec
pop
(bad)
cmp
cmp
pop
hlt
fstp
cmps
rcr
jl
sub
popf
lods
mov
pop
xor
jns
jl
stc
mov
mov
xchg
ins
(bad)
jbe
in
(bad)
call
into
sub
mov
push
mov
adc
test
(bad)
shl
dec
adc
push
xchg
sub
stos
imul
dec
sub
or
mov
ja
jmp
add
je
out
inc
and
ret
push
test
push
jne
lea
dec
jg
inc
aas
sbb
test
mov
mov
(bad)
leave
pushf
mov
sbb
mov
loopne
inc
mov
in
sar
inc
aaa
daa
call
pop
dec
into
stos
shr
neg
inc
into
jmp
push
pop
repnz
xor
out
out
mov
dec
and
inc
inc
scas
adc
inc
add
mov
lods
cli
and
in
js
scas
or
pushf
rol
icebp
inc
sti
lock
stc
add
cmp
cdq
add
xchg
sbb
sub
enter
pop
stos
inc
sub
xlat
mov
xor
xchg
out
outs
div
sbb
push
inc
or
pushf
fld
(bad)
and
add
adc
les
mov
and
add
mov
mov
popa
add
hlt
cs
lahf
sub
inc
imul
adc
jl
pushf
dec
mov
das
repz
shl
xchg
fidivr
pop
pop
jg
aaa
pop
mov
repnz
xor
rcl
(bad)
aas
xor
test
jl
cmp
imul
popf
dec
rol
ja
sahf
sub
out
pop
jns
cwde
mov
fwait
mov
jp
iret
outs
pop
cmp
mov
test
in
cdq
xchg
dec
lsl
cmp
retf
cwde
xor
fcom
sub
repz
mov
mov
inc
mov
sti
adc
das
xchg
fld
jmp
push
ror
popf
repnz
xor
pop
add
mov
inc
sub
dec
popa
repnz
cdq
shr
fstp
pop
leave
push
fsubr
mov
enter
pop
or
inc
dec
sbb
sti
sub
mov
fnsave
sbb
pusha
push
hlt
in
xchg
aam
push
lock
xor
xchg
mov
xchg
test
hlt
xchg
mov
jo
scas
xor
fmul
movs
sub
sbb
rcr
mov
mov
sbb
inc
jbe
cmps
xor
loope
pushf
addr16
add
xchg
lods
push
push
fs
mov
clc
scas
cmps
cmps
xor
push
mov
popa
jnp
mov
mov
or
scas
(bad)
cmp
bound
lahf
cmps
loop
daa
addr16
push
xchg
sbb
or
es
cmp
mov
in
fs
fnstenv
inc
out
xchg
pop
out
xchg
xor
inc
cmps
jns
sti
cmp
pop
jae
push
repnz
stos
xchg
cmc
and
pop
or
cmp
fsubr
push
add
dec
xchg
cmp
(bad)
mov
or
gs
cmp
mov
mov
jp
sti
push
into
and
leave
data16
bound
addr16
mov
pop
out
hlt
pop
(bad)
lods
xor
mov
(bad)
into
in
push
push
push
aam
cmp
into
repz
push
push
aas
lds
sbb
or
mov
and
add
or
cmc
xor
mov
pop
adc
cmc
pop
ins
push
mov
mov
ja
test
push
jl
pop
jecxz
sahf
mov
and
xchg
pop
inc
int3
retf
push
inc
mov
sub
jge
xchg
cmp
xchg
dec
test
call
xchg
pop
mov
sbb
cld
data16
scas
mov
jp
fidivr
cs
xchg
repz
push
out
ss
pop
enter
jmp
jae
or
jae
and
imul
ror
mov
dec
add
inc
ret
add
stos
xchg
(bad)
in
inc
jnp
lahf
ins
push
jl
(bad)
jmp
add
mov
sub
pusha
les
sub
aad
inc
inc
xor
idiv
shr
outs
fstp
stc
jmp
mov
dec
cs
fnstenv
jp
inc
das
pop
ins
popf
pop
xor
jbe
fsub
mov
jl
push
ins
jnp
xchg
retf
nop
mov
mov
into
mov
jnp
(bad)
sti
or
adc
push
js
fistp
loope
jbe
dec
out
inc
cmp
and
or
cmp
sbb
arpl
int
mov
cmp
scas
jmp
cmps
push
daa
push
mov
in
xchg
cmp
in
cmp
pop
and
cmps
xchg
mov
cmps
sub
add
(bad)
push
emms
or
jg
mov
scas
xor
or
adc
ss
arpl
dec
sbb
pop
mov
lds
sbb
fcom
jne
cmp
scas
cmps
lods
sub
rcl
out
sbb
mov
or
fst
int
cdq
xlat
inc
xchg
dec
dec
sub
and
repz
call
jmp
adc
pop
jge
dec
repnz
mov
in
adc
ja
sub
(bad)
fistp
pop
cmp
push
sbb
push
cmps
push
in
dec
mov
fwait
data16
dec
and
push
fnstenv
jne
xor
xor
fidiv
or
repnz
loopne
xchg
push
aad
mov
loope
ins
cmp
add
ins
shr
out
jg
aas
cmc
outs
push
push
fisttp
sbb
or
adc
fwait
jmp
sti
xor
cmp
dec
in
pop
int3
cmps
push
outs
xchg
sahf
fld
cmp
and
fimul
in
pop
retf
clc
call
or
ds
add
inc
push
fs
mov
pushf
gs
mov
lock
jmp
adc
dec
adc
inc
add
pop
cs
fucomi
dec
nop
and
aam
lea
pop
or
ins
sbb
sub
inc
inc
cmps
pop
adc
rol
not
ins
inc
scas
mov
jo
sub
in
push
mov
int
sub
jb
loop
mov
mov
add
xchg
fsubr
inc
jo
clc
pop
imul
mov
cmc
and
inc
pop
pop
movs
test
icebp
xchg
mov
and
retf
arpl
xchg
mov
jns
je
xchg
js
pop
inc
mov
daa
or
jne
inc
xchg
and
ret
test
fidivr
imul
shl
xor
data16
test
clc
jecxz
sub
call
ror
or
repz
stos
sbb
in
cli
in
xor
ret
cli
adc
cld
cmp
jno
(bad)
cmp
cmp
(bad)
jmp
mov
push
lods
mov
mov
pop
xor
leave
or
adc
mul
or
xchg
xlat
add
xchg
gs
jl
popa
ja
push
xchg
shr
sub
mov
push
jp
jne
pop
jecxz
repnz
pcmpeqd
rcr
rcr
aad
das
cmps
aas
nop
test
mov
push
mov
icebp
adc
adc
rol
call
dec
jb
js
dec
mov
ret
mov
enter
xchg
shl
movs
xchg
or
scas
mov
cmp
fisub
out
stc
push
pop
add
mov
sbb
je
out
xlat
mov
jmp
jae
mov
mov
jge
sbb
(bad)
sub
scas
adc
xor
xchg
lods
into
pop
jmp
aas
sbb
shl
and
push
dec
ja
pop
adc
jecxz
or
xor
mov
iret
and
push
dec
test
cdq
add
test
and
xchg
push
cs
push
and
mov
ret
mov
das
xor
mov
stc
pop
stos
xlat
cs
out
sbb
in
lock
sti
or
xor
(bad)
and
dec
test
push
cmps
inc
and
div
sbb
hlt
jg
(bad)
dec
(bad)
ror
push
aad
dec
(bad)
addr16
push
push
mov
pop
push
repz
clc
jp
les
popf
lea
ja
mov
pop
sub
cmps
cmp
add
daa
push
push
xchg
fisttp
dec
test
mov
fstp
or
not
jmp
mov
scas
push
(bad)
out
jge
sbb
pop
dec
(bad)
xlat
adc
dec
int
sbb
call
cmp
xor
rcl
push
mov
out
dec
lea
mov
call
ja
aas
jae
mov
dec
mov
cmp
in
xor
dec
fdiv
shrd
sub
and
push
cmp
fcomi
loopne
cmp
dec
or
sub
rcr
call
retf
mul
(bad)
mov
pushf
(bad)
rol
pop
cld
(bad)
cmp
and
scas
das
ret
lahf
into
and
cmps
pusha
(bad)
xchg
mov
add
test
push
sub
sbb
jecxz
pop
jnp
gs
xchg
fdivp
xchg
mov
or
loopne
popa
mov
or
cmps
lods
lahf
bound
scas
xor
mov
or
int3
adc
dec
jp
jmp
shr
stc
jno
es
adc
icebp
jns
jbe
aad
xchg
mov
lods
movs
and
sbb
clc
ds
movs
mov
imul
les
mov
dec
jnp
and
xchg
jl
ret
pop
cmp
(bad)
test
pop
xor
outs
mov
mov
mov
xchg
jmp
mov
push
mov
addr16
jp
mov
xchg
adc
or
push
(bad)
ja
fwait
cmp
sub
xchg
pop
frstor
rcr
stos
(bad)
adc
jns
cmps
inc
xor
daa
push
xchg
retf
push
mov
loopne
adc
mul
stc
adc
jo
popa
add
mov
inc
mov
movzx
cmps
xor
out
xor
jnp
and
pop
cmp
das
stc
xchg
sub
int3
push
out
xor
int
call
and
retf
jnp
out
not
jne
shl
jmp
retf
mov
ret
mov
sbb
lock
push
stos
push
fimul
xchg
xchg
xchg
stos
loop
jb
fistp
mov
cli
js
mov
dec
sub
movs
xor
sub
stos
sbb
push
ret
pop
bound
mov
(bad)
adc
inc
add
idiv
mov
bswap
mov
mov
ror
sbb
imul
fsubr
fs
or
mov
adc
add
fidiv
popf
hlt
or
mov
add
(bad)
out
push
popa
pop
xlat
(bad)
add
arpl
adc
cmp
mov
ins
mov
popf
push
inc
mov
mov
push
mov
fnstenv
not
push
int
ficom
ror
push
out
imul
adc
mov
push
push
mov
sbb
mov
push
mov
adc
inc
xchg
in
push
mov
and
ja
shl
imul
pop
sbb
add
leave
lods
cwde
xchg
dec
sbb
adc
lock
outs
popf
xor
es
int
enter
(bad)
ja
xchg
lahf
adc
rcr
pusha
ins
out
in
in
xchg
and
or
xchg
int3
sbb
jp
add
mov
std
imul
push
out
xchg
xor
dec
and
mov
repz
gs
rcl
pop
adc
push
push
push
jnp
mov
push
or
jmp
mov
jbe
dec
mov
fcmovb
scas
sbb
or
adc
mov
mov
adc
jl
jp
loope
push
outs
imul
add
inc
lods
into
jo
mov
loopne
jne
dec
sub
mov
les
push
fwait
les
adc
repnz
cmp
fisttp
movs
lock
imul
lahf
push
(bad)
aad
jmp
rol
cld
adc
cld
push
adc
(bad)
enter
pop
xchg
mov
mov
mov
push
enter
aad
and
sbb
cmp
mov
inc
mov
cmp
pop
inc
nop
mov
pop
inc
hlt
stc
mov
dec
(bad)
in
bound
cmp
retf
es
adc
fld
mov
pop
loopne
loope
sbb
mov
adc
out
mov
inc
loop
fimul
out
or
cmp
mov
xchg
sti
push
push
sti
jp
mov
add
jno
xor
inc
int3
cwde
int3
xchg
mov
dec
(bad)
and
mov
shr
clc
(bad)
and
or
fbld
and
les
sbb
pusha
in
or
in
mov
into
jo
dec
scas
xchg
cmc
nop
das
adc
mov
mov
xor
stos
test
fstp
mov
jne
outs
test
(bad)
adc
in
jle
pop
mov
es
pop
push
sbb
lahf
adc
xchg
mov
jle
jg
aad
mov
dec
cmp
js
dec
(bad)
cmp
mov
sbb
movs
add
out
stc
xor
add
call
xor
mov
xor
ins
fisubr
lahf
aas
shl
retf
and
addr16
xor
retf
cmp
fcom
enter
shl
sahf
mov
scas
cmp
add
inc
jne
push
je
mov
movs
pop
arpl
imul
dec
imul
loopne
stos
retf
xchg
inc
adc
and
mov
inc
or
lods
adc
icebp
xor
cli
nop
mov
cmp
xchg
outs
and
mov
fcmovnbe
and
mov
clc
dec
mov
es
or
in
add
cmp
es
add
out
sub
sbb
cmp
or
cs
fcomp
mov
cmp
dec
rol
mov
loope
rcl
pushf
mov
or
pop
cmp
pushf
jb
push
sub
jle
xchg
pop
sbb
mov
push
add
sub
jbe
or
jne
inc
push
jmp
in
and
pop
pop
pop
inc
imul
jae
pop
test
sub
loop
sub
jg
out
loop
or
sti
(bad)
stos
into
cld
sbb
xchg
ds
pop
out
sub
rcr
cmp
add
pop
ret
gs
daa
dec
pop
daa
jge
jbe
sub
pop
push
fnsave
enter
jae
mov
loopne
cmp
out
sbb
leave
cmp
loope
bound
rep
les
jg
mov
xor
sub
les
mov
mov
in
loop
or
ds
jecxz
sbb
xchg
sub
ret
iret
int3
mov
aam
push
nop
in
popf
loop
movs
imul
int3
jge
mov
xchg
jnp
ss
jbe
arpl
imul
mov
jno
aas
sub
stos
bound
xchg
shl
cmp
sahf
int3
dec
aas
jge
xchg
xchg
cld
dec
ins
jae
push
test
inc
movs
or
nop
mov
(bad)
xchg
daa
pop
outs
mov
leave
add
stos
sti
adc
xchg
mov
dec
xchg
xchg
imul
sub
std
or
repnz
mov
mov
ins
je
loope
(bad)
iret
xor
pop
xchg
imul
call
test
push
iret
neg
mov
sub
rcr
sub
push
inc
or
cld
loopne
sub
pop
bound
dec
sub
cmp
inc
inc
or
into
mov
scas
mov
call
ds
jbe
mov
jmp
hlt
jle
sbb
nop
and
das
cwde
test
pop
inc
adc
dec
push
mov
jnp
fld
xor
mov
(bad)
in
inc
(bad)
imul
mov
rol
cmp
push
scas
movs
xor
rol
xchg
test
pop
xchg
jno
push
push
int
stos
ror
rcr
mov
repz
mov
test
mov
dec
sub
sbb
loop
in
mov
inc
mov
fcmovb
mov
enter
ret
sub
frndint
gs
jb
xchg
int3
ss
add
cmps
xor
inc
ins
mov
scas
test
inc
cdq
in
rcl
cmps
stos
mov
jecxz
mov
and
cmp
dec
in
and
sub
shl
out
fidiv
push
adc
and
push
(bad)
jg
in
or
outs
push
mov
call
sbb
jbe
mov
or
jle
int3
into
fs
xor
sbb
out
xor
sbb
xchg
and
enter
and
adc
mov
aam
ds
and
outs
std
cmc
add
pop
das
mov
repz
rol
xchg
fisubr
dec
iret
gs
daa
cmp
lea
jge
cdq
neg
add
repnz
int
jnp
sahf
sbb
(bad)
mov
xchg
pop
pushf
cld
in
jmp
mov
repz
mov
jl
adc
retf
stc
iret
sub
inc
adc
out
cmp
lahf
push
shl
cld
jne
sbb
call
or
jae
shr
xchg
jo
cld
dec
das
sub
faddp
push
adc
test
xchg
fsubr
jp
inc
ins
jae
pop
mov
mov
cdq
mov
dec
push
lock
or
fwait
aas
das
nop
cs
xchg
sub
mov
ins
and
pop
dec
sub
rcl
dec
inc
ja
cld
add
(bad)
xor
or
into
sbb
in
dec
lea
jp
dec
into
jl
repz
mov
out
das
pushf
outs
inc
mov
das
or
mov
or
mov
adc
jp
mov
pop
pushf
retf
retf
jecxz
enter
cld
les
fdiv
sub
cdq
bound
and
ja
idiv
mov
sbb
cmp
mov
and
aad
fld
fidivr
xor
cmp
arpl
pop
movs
inc
xchg
ds
mov
mov
adc
out
xchg
fsubr
add
fwait
sub
dec
add
push
stc
or
rcl
pop
out
popf
sbb
out
cmp
ret
inc
jmp
xor
call
cmp
mov
rcr
jmp
sbb
in
lahf
sbb
and
retf
test
loope
mov
or
aaa
xchg
scas
mov
out
dec
inc
mov
test
and
cmp
stos
(bad)
jle
mov
mov
dec
pop
jno
or
xor
dec
xchg
retf
jne
or
or
scas
cmc
scas
ret
dec
pop
push
jle
jg
sbb
loope
add
test
outs
pop
lock
mov
xchg
push
jecxz
cmp
pop
imul
cmp
mov
sbb
mov
and
je
lock
or
icebp
leave
sbb
xor
cs
aaa
lahf
jle
neg
xchg
push
sahf
xlat
push
xor
add
add
aad
(bad)
cmc
fsubp
mov
mov
mov
mov
adc
jmp
jmp
mov
mov
xchg
aaa
adc
imul
out
out
int
addr16
fmul
lock
(bad)
cmp
fist
inc
dec
ss
data16
xchg
push
pop
cmp
sub
es
adc
out
push
mov
mov
mov
mov
repz
outs
mov
out
enter
mov
stos
dec
cdq
retf
loope
imul
and
mov
in
dec
pop
test
xor
cmp
std
pop
arpl
add
(bad)
mov
mov
into
cmp
aas
inc
retf
sub
mov
sub
repnz
xchg
jecxz
pop
aad
leave
mov
in
mov
mov
(bad)
jmp
jns
fisub
pop
mov
add
imul
mov
mov
arpl
push
(bad)
pop
pushf
sub
dec
jns
pop
mov
pop
(bad)
cld
pushf
retf
sbb
shl
(bad)
in
adc
das
xchg
cmp
mov
dec
ret
xchg
pushf
pop
push
sbb
cmp
inc
xchg
daa
mov
pop
daa
xchg
aad
sub
cld
repz
test
jmp
rol
(bad)
xor
scas
jg
or
sub
sub
or
mov
icebp
aam
adc
stc
xacquire
push
mov
inc
inc
add
jb
lods
addr16
pop
xchg
push
daa
fist
xchg
outs
xor
pop
sbb
cmp
repnz
lods
into
sub
inc
and
loopne
shl
std
(bad)
or
inc
inc
xlat
xor
adc
mov
loop
mov
and
xor
mov
sub
pusha
pop
nop
or
fcomp
loop
test
leave
lods
sub
or
enter
sar
push
mov
push
dec
clc
cwde
ficomp
mov
mov
outs
dec
aam
adc
cmc
fdiv
out
xchg
ror
rcl
scas
mov
pop
call
mov
pop
sub
mov
push
retf
loopne
dec
mov
mov
in
mov
xor
into
jecxz
jl
pop
lods
std
pop
mov
clc
hlt
movs
(bad)
push
lock
xchg
jecxz
jnp
inc
les
imul
mov
add
lahf
sbb
adc
imul
push
daa
push
loop
mov
push
mov
jmp
sbb
mov
push
push
or
(bad)
call
jno
loopne
sub
outs
lods
and
(bad)
rol
loopne
div
imul
pop
mov
fwait
sbb
sahf
arpl
pop
xor
jmp
mov
push
jo
test
loopne
add
pop
arpl
inc
mov
sub
clc
push
cmp
sub
mov
sub
mov
clc
js
push
fmulp
jmp
ret
fild
test
(bad)
cld
inc
adc
pop
jge
mul
pusha
stos
retf
(bad)
mov
sbb
and
or
jmp
retf
jmp
es
cs
mov
mov
cwde
movs
sti
xchg
out
int3
xor
movs
leave
mov
gs
xchg
or
mov
mov
sub
pop
add
movs
bound
dec
mov
jmp
mov
add
rcr
test
mov
outs
or
mov
jae
adc
mov
ret
mov
cli
mov
sub
mov
arpl
pop
stc
pusha
sbb
mov
mov
or
fwait
aaa
xchg
jmp
cdq
mov
inc
and
or
sub
xor
mov
sar
xchg
rcr
dec
fnsave
and
ins
push
jmp
sbb
adc
and
sti
out
adc
fs
in
in
fcomp
sub
js
ja
mov
ins
mov
loopne
fsub
aaa
test
setb
pop
pop
push
jne
mov
push
adc
adc
push
(bad)
sar
adc
(bad)
cmc
mov
jl
outs
stos
mov
adc
retf
xchg
mov
mov
cmp
clc
dec
das
push
sbb
add
dec
pop
nop
fbstp
jle
push
cs
mov
mov
test
pop
fcomip
aas
in
mov
dec
ja
mov
jl
jp
pop
adc
ss
clc
inc
jg
sub
inc
sti
cmp
int3
xor
push
cwde
daa
cdq
or
(bad)
adc
retf
lock
ficomp
aad
dec
cs
and
fsubr
loop
arpl
out
cli
and
jne
push
add
inc
cmps
int3
iret
xor
sub
dec
mov
inc
mov
das
stc
cwde
call
xchg
bound
push
mov
pop
xor
jle
dec
out
mov
dec
mov
sbb
out
inc
jg
inc
hlt
sub
push
jno
popa
jno
daa
fwait
cmp
jge
clc
mov
push
inc
xchg
cmps
aaa
movs
or
inc
lahf
js
call
aam
jae
sti
mov
mov
movs
or
or
mov
mov
and
jb
test
dec
push
in
in
loope
cmps
jle
dec
(bad)
lods
outs
mul
lds
mov
mov
pop
(bad)
out
addr16
or
fs
cli
mov
jg
mov
ror
ror
test
mov
cmp
retf
bound
or
dec
push
push
nop
inc
dec
cmc
or
ins
push
xor
pop
mov
or
push
mov
and
cmps
nop
mov
and
lea
cmp
mov
jg
jbe
ret
mov
in
sbb
pop
pop
mov
imul
in
in
mov
cmps
mov
loop
stc
mov
mov
bound
mov
aaa
stos
cmp
dec
xchg
mov
pop
jge
add
dec
adc
sbb
lods
int
ret
cmp
and
fdiv
xor
mov
add
add
adc
(bad)
or
fmul
inc
imul
dec
pop
stc
adc
push
xor
dec
xchg
pop
scas
nop
jmp
popa
push
dec
inc
scas
mov
xchg
push
ins
scas
and
shr
sub
pop
inc
xchg
sub
or
cmps
xchg
and
or
(bad)
stos
mov
adc
cmp
push
sahf
imul
rcl
mov
and
stos
call
and
retf
fistp
inc
jno
pop
(bad)
jg
and
pusha
div
push
pop
pop
shl
cmp
loop
jbe
pop
jnp
retf
outs
adc
cdq
call
sbb
xchg
mov
addr16
inc
inc
cs
inc
adc
cmp
sub
push
jmp
ins
xor
lahf
(bad)
mov
fcomp
adc
icebp
and
push
xchg
and
mov
xlat
sbb
pop
enter
and
aad
adc
in
shr
inc
mov
mov
sub
push
out
stc
mov
mov
sub
movs
cmps
ja
lock
xor
adc
ins
xor
out
sbb
loope
pop
stos
and
adc
and
into
push
jmp
movs
es
push
mov
push
inc
call
outs
jo
mov
test
xor
xor
mov
sti
add
scas
push
xor
pop
jmp
icebp
rcr
scas
sub
aam
enter
sub
pop
hlt
inc
out
push
arpl
jmp
repnz
(bad)
ror
mov
les
cmp
icebp
arpl
inc
jmp
mov
add
outs
loope
sbb
pop
and
push
jmp
cmp
jge
jl
into
leave
dec
push
retf
dec
(bad)
sbb
sub
into
jae
hlt
add
jae
push
jle
cmp
mov
gs
mov
imul
aas
arpl
xor
xlat
xchg
sbb
mov
lea
xchg
shl
mov
int3
mov
mov
int3
mov
or
in
out
push
mov
jmp
aad
stos
xchg
or
inc
nop
(bad)
int3
push
dec
pop
adc
pop
jmp
out
pop
adc
xor
add
mov
arpl
outs
adc
(bad)
in
gs
mov
mov
push
int3
dec
shl
xor
movs
mov
cmc
ja
fld
(bad)
out
xchg
xchg
adc
xor
and
and
fstp
(bad)
jae
shr
cmp
(bad)
je
push
repz
xchg
(bad)
idiv
xchg
mov
xchg
mov
sbb
and
jb
outs
cs
inc
(bad)
stos
jl
fstp
aam
jecxz
out
aam
mov
xor
sbb
inc
sbb
les
sub
ret
ss
imul
aas
add
ss
sbb
adc
(bad)
call
xchg
loop
and
jmp
mov
data16
and
pop
adc
out
outs
(bad)
jmp
jmp
jmp
std
dec
repz
test
(bad)
repz
cmps
lds
push
cmp
jnp
cli
loope
cld
mov
mov
sbb
cmps
retf
enter
and
imul
test
je
mov
cdq
pop
jecxz
pop
jmp
mov
(bad)
push
shr
jmp
xchg
lods
push
push
push
jl
jle
(bad)
enter
ins
xchg
xchg
mov
neg
iret
cmc
repz
fimul
lds
pop
(bad)
push
push
add
fdiv
or
(bad)
neg
xchg
xor
or
pushf
outs
repnz
jnp
jb
push
clc
leave
or
sbb
inc
nop
sub
sahf
pop
add
test
jmp
daa
push
mov
sbb
and
sahf
or
in
loop
mov
bound
fs
into
mov
es
cmp
push
pop
test
push
xchg
js
jecxz
ins
mov
pushf
xchg
sbb
imul
xchg
push
das
out
repnz
stos
xor
imul
outs
add
imul
or
jecxz
call
fwait
push
shl
dec
lahf
ja
sbb
jno
sub
outs
dec
inc
les
mov
pop
push
adc
cwde
xchg
dec
mov
mov
sbb
sti
aam
dec
dec
aas
loop
cli
test
(bad)
popf
pushf
mov
cmp
test
out
and
mov
dec
push
ins
loope
cmp
test
aas
pop
mov
mov
pusha
repnz
sub
dec
lods
pushf
pop
hlt
movs
ret
adc
xchg
clc
push
cwde
adc
push
add
pop
pop
cmc
push
aas
sub
pop
dec
adc
movs
jge
int3
out
ins
inc
push
mov
ret
dec
cs
rcr
pushf
ffree
xchg
lea
pop
inc
sub
scas
adc
ins
sahf
test
inc
test
add
aaa
xchg
jmp
jmp
xchg
fwait
test
fadd
inc
out
lock
(bad)
pop
imul
inc
(bad)
jmp
mov
movs
jno
jp
push
push
mov
(bad)
movs
add
and
xor
and
sub
jno
fstp
jp
xchg
xor
dec
push
ficom
in
inc
jnp
pop
arpl
in
xor
pop
loop
pop
imul
push
pop
scas
ret
je
sub
fdiv
sbb
retf
addr16
push
fstp
imul
out
xlat
xchg
int3
shl
cmp
pusha
inc
xchg
mov
xchg
jle
and
sub
and
aas
fisub
mov
es
jp
aam
mov
rol
sbb
push
fdivr
cmp
push
retf
das
aad
push
xor
ins
xchg
dec
mov
or
out
inc
inc
mov
mov
xchg
add
popa
xchg
mov
aaa
stos
(bad)
xchg
lahf
stos
std
ret
fnstcw
ds
in
je
adc
(bad)
lods
xchg
movs
cmp
xor
or
mov
xlat
loope
sub
sub
xchg
in
mov
sbb
jns
retf
mov
sahf
cli
call
mov
test
popa
das
jo
jp
lds
add
hlt
or
pusha
xor
push
scas
mov
in
bound
stos
sub
and
int3
cli
out
and
dec
cli
sbb
inc
sub
pushf
(bad)
popa
iret
pop
mov
pusha
imul
repnz
rcr
xor
mov
cmps
adc
stos
pushf
std
(bad)
clc
jl
(bad)
and
pop
hlt
mov
inc
add
movs
or
es
shl
adc
sti
push
dec
lds
ss
dec
addr16
neg
lods
fidivr
add
ret
inc
fwait
inc
(bad)
pushf
cs
cmp
in
movs
push
dec
dec
or
adc
mov
xchg
sbb
xchg
imul
push
xchg
or
xor
sbb
jmp
(bad)
mov
inc
sar
(bad)
jmp
jmp
cld
dec
in
leave
jmp
jbe
loopne
jae
mov
in
jns
shr
es
or
popa
push
mov
pop
pop
ret
imul
mov
(bad)
cmp
sbb
in
add
push
gs
sti
fadd
add
jp
push
test
or
dec
jno
sbb
jle
sub
dec
popf
je
xchg
and
sub
std
icebp
mul
or
push
mov
cmp
fldcw
fdivp
jno
or
xor
add
inc
dec
(bad)
and
sbb
leave
sbb
loop
mov
push
es
sub
inc
cmc
cmps
xor
mov
xchg
stos
repz
cmps
(bad)
mov
aam
jo
and
push
pop
mov
sbb
in
fadd
lds
std
cmc
mov
pop
and
push
sub
pop
pop
in
sub
add
or
adc
mov
mov
dec
push
adc
inc
ror
test
or
sub
mov
aam
xchg
sub
jl
sub
retf
aas
scas
sub
adc
in
dec
scas
adc
stos
xor
lea
jg
cwde
cmp
jl
outs
hlt
in
stc
mov
pop
mov
adc
(bad)
in
cdq
add
or
or
shl
and
push
lods
(bad)
adc
imul
dec
rcr
repnz
cmp
out
push
cmps
mov
adc
jnp
push
pop
and
push
shl
(bad)
cmp
cmp
gs
test
ret
mov
xchg
cwde
or
pop
cs
and
xor
cmp
pop
(bad)
sub
in
sbb
xor
frstor
sub
pusha
push
sar
xchg
fistp
in
outs
mov
shl
xor
cmp
(bad)
xor
daa
lea
mov
ror
das
dec
mov
add
cmp
push
adc
jge
jne
imul
rcr
lock
mov
sub
pushf
enter
mov
aad
pop
xchg
rcl
mov
icebp
mov
ret
add
call
jmp
pop
xlat
pop
and
cmp
mov
mov
fdiv
push
adc
fnstsw
xchg
jb
inc
xor
or
repz
movs
sub
rol
mov
pop
mov
mov
add
mov
clc
xchg
inc
push
pop
stos
jmp
rol
and
das
pop
aas
jp
mov
xchg
cmp
aam
sbb
mov
aad
jmp
scas
lea
inc
jecxz
js
mov
xlat
mov
mov
dec
jmp
add
bound
fld
lea
jp
mov
and
lods
lds
mov
retf
mov
sub
test
out
inc
sti
cdq
cmp
and
stc
cdq
mov
aas
js
aaa
add
or
sub
sub
sar
dec
mov
add
scas
movs
sbb
and
dec
mov
mov
repz
fwait
adc
inc
push
adc
adc
(bad)
push
jnp
cmp
push
(bad)
outs
loop
adc
push
ret
push
js
push
das
xchg
jp
test
mov
mov
pop
adc
add
call
je
inc
ror
push
scas
out
mov
pop
jbe
pop
aas
pop
fldcw
mov
sub
mov
outs
inc
or
hlt
jae
mov
retf
cmp
or
mov
sbb
mov
cmp
cmp
jp
jo
cld
cmc
(bad)
enter
or
cmp
sbb
cmp
in
xchg
js
cmps
cmps
repnz
mov
jmp
outs
adc
fistp
dec
jmp
mov
cmp
ins
push
rol
add
(bad)
inc
pushf
(bad)
fwait
xor
jecxz
add
inc
stos
retf
mov
test
leave
pop
adc
test
movs
jbe
test
stos
inc
mov
inc
frstor
xchg
pop
mov
add
imul
imul
add
xor
dec
lds
or
jmp
push
mov
xor
sub
xor
hlt
test
out
(bad)
sti
pusha
test
(bad)
sub
(bad)
xor
lods
(bad)
cwde
dec
ins
jnp
cmc
push
sub
into
adc
je
jle
lods
pop
adc
mov
lods
ins
stos
pop
add
addr16
fs
cld
dec
mov
inc
ret
out
add
push
sub
dec
cmp
push
mov
mov
pop
cli
xchg
jecxz
jp
add
rcr
lods
jo
fs
and
add
cdq
xor
mov
test
adc
sub
mov
xor
push
std
dec
push
ss
mov
and
jb
test
xchg
xor
push
inc
and
mov
lods
das
aad
xor
push
pop
add
pop
xor
arpl
pop
arpl
jb
ret
jl
add
or
in
addr16
inc
cli
adc
dec
jge
por
pop
(bad)
sbb
mov
mov
dec
cmp
arpl
mov
dec
xor
inc
daa
ret
sbb
mov
mov
sbb
xor
xor
into
pop
xchg
lock
loope
pop
xor
rol
add
xchg
repnz
in
in
xlat
adc
mov
jge
scas
or
neg
sbb
div
icebp
mov
test
xor
in
fisttp
mov
aad
add
aas
cdq
inc
out
add
pusha
bound
ret
push
jle
int3
mov
mov
popa
and
cmp
push
jmp
repz
push
xlat
pop
cdq
mov
or
push
cmc
mov
cs
mov
mov
mov
mov
adc
repnz
clc
xlat
les
ins
push
mov
mov
and
daa
retf
push
jge
mov
cmp
es
cmp
or
pop
jno
test
sub
pop
jbe
loope
jmp
mov
stc
(bad)
jae
test
sbb
xchg
retf
mov
iret
fnstcw
test
ds
push
hlt
loope
hlt
(bad)
mov
jbe
or
iret
jb
iret
lds
out
cmp
pop
sub
cmp
arpl
sbb
inc
gs
outs
mov
test
sbb
xchg
mov
outs
adc
retf
push
pop
int3
movs
and
and
push
pop
add
jo
dec
icebp
rol
add
das
fiadd
xchg
jmp
retf
test
daa
or
fsubr
sub
cli
sub
test
dec
icebp
test
cmp
adc
add
cmp
adc
adc
inc
out
xchg
or
bound
push
enter
add
test
cld
scas
fldenv
test
rol
or
cmp
jmp
ds
xor
sub
stos
sub
push
js
popf
je
inc
or
retf
scas
test
dec
loope
jge
cmp
icebp
(bad)
enter
and
mov
jg
imul
cdq
xchg
xor
fld
or
pop
adc
leave
jmp
(bad)
ins
or
enter
cmp
add
(bad)
test
jecxz
dec
addr16
push
xchg
jge
xchg
jl
adc
mov
js
and
mov
jbe
pop
mov
xchg
ins
out
inc
data16
fdiv
cmc
mov
mov
xchg
inc
pop
mov
xor
cmp
jns
ins
add
mov
cdq
pop
cmc
(bad)
xor
je
cmp
mov
cs
popf
loop
rol
int
lods
int3
or
mov
and
stc
adc
call
jae
aad
mov
jmp
ds
daa
cwde
dec
inc
mov
fsubr
mov
std
ins
(bad)
pushf
movs
dec
in
mov
lahf
dec
or
out
inc
xchg
enter
fisub
sub
and
and
cmp
mov
xor
aam
fstp
pminsw
pop
push
and
xchg
xor
loop
jle
(bad)
in
inc
movs
sub
test
jp
xlat
daa
call
pop
push
das
adc
test
sti
xchg
cmps
mov
scas
inc
inc
adc
test
push
sub
cmp
or
cmp
scas
cmp
jae
push
fild
jecxz
mov
outs
fdivr
dec
jb
cdq
push
jecxz
jnp
shr
lahf
popa
adc
cmp
pop
adc
inc
aaa
xchg
push
inc
pop
cmp
mov
cdq
pop
ss
jmp
cmp
in
setge
inc
js
inc
push
aas
inc
mov
inc
mov
xchg
out
fsub
xor
pop
push
inc
and
sbb
scas
push
test
gs
jnp
(bad)
aas
or
jne
icebp
loope
aam
jg
rol
dec
pusha
fild
cmc
adc
arpl
sbb
and
sbb
mov
adc
sti
jnp
cmps
push
scas
and
adc
xor
xchg
or
mov
mov
out
scas
xchg
shl
mov
jp
add
int3
adc
dec
movs
pushf
loope
loope
sub
mov
test
movs
cmp
pop
cdq
xor
or
xor
ins
pop
into
fs
lods
adc
xchg
ret
cdq
cwde
push
call
cmp
fidivr
jns
push
sub
push
js
add
mov
xchg
aaa
fcmovnb
or
push
popa
jne
fdivr
enter
push
mov
jl
outs
push
pop
out
mov
mov
js
sbb
jb
pop
xor
movs
imul
sub
cdq
inc
fcomp
or
sub
pop
lods
shr
sbb
sar
dec
jg
movs
lds
jp
and
push
hlt
dec
pop
dec
and
pop
shl
cmp
push
mov
or
out
(bad)
cmc
mov
inc
test
or
bound
in
mov
dec
ret
push
adc
sub
pop
enter
ja
data16
xlat
ss
xchg
addr16
sahf
pop
sbb
push
sub
es
stos
mov
retf
(bad)
stos
adc
mov
lods
daa
xchg
jne
(bad)
je
dec
int
pushf
(bad)
xlat
mov
sbb
scas
fisubr
xchg
sub
shl
out
inc
push
repz
cdq
stos
icebp
pop
mov
mov
cmp
lods
jnp
iret
pop
or
adc
jg
jbe
scas
cld
out
ret
add
ficom
inc
push
pop
xor
(bad)
mov
std
movs
mov
pop
in
outs
jmp
dec
pop
cdq
mov
frstor
dec
mov
and
dec
cmp
jbe
lock
in
cmp
or
add
mov
adc
fwait
lock
add
retf
lahf
fwait
sbb
push
mov
imul
add
inc
mov
xchg
dec
cmp
arpl
lods
mov
cmps
inc
cmp
popf
sti
sub
shl
nop
fstp
fdiv
mov
int3
nop
mov
enter
inc
and
xor
lock
retf
sub
xchg
xchg
vsubsd
mov
push
repnz
icebp
out
push
pop
add
or
add
adc
repz
fiadd
jp
sahf
mov
push
call
mov
jnp
push
std
add
in
mov
cmp
out
scas
sub
and
ret
lods
and
test
popa
sub
in
scas
es
arpl
icebp
outs
retf
push
test
in
cmp
sub
ss
cmp
lods
hlt
cmp
test
iret
and
sub
mov
gs
into
add
fldcw
mov
arpl
fnstcw
arpl
popf
mov
mov
ror
pop
repnz
sub
(bad)
das
lods
and
lock
(bad)
sahf
pop
sbb
jno
outs
push
dec
clc
out
add
pop
test
fild
jbe
dec
int
mov
mov
data16
mov
lods
pop
div
xchg
scas
neg
sub
mov
push
cmps
call
and
xchg
outs
mov
dec
and
and
jmp
mov
popf
hlt
mov
bnd
sub
sbb
cmps
sahf
(bad)
cmp
ja
sub
push
pop
mov
jo
push
int
pop
loop
loop
adc
(bad)
je
cmp
push
jge
stos
jg
hlt
or
pop
xchg
pop
jg
push
jae
and
push
ja
inc
dec
sbb
fcomp
cmp
sub
(bad)
and
cmp
jno
out
mov
sti
int3
call
sbb
and
add
pushf
mov
ss
jo
std
dec
cwde
(bad)
iret
in
ins
mov
(bad)
pop
jmp
popf
(bad)
iret
mov
mov
int3
xor
push
lds
xor
cmp
jl
push
jmp
ins
and
dec
je
xchg
mov
lock
push
adc
mov
xchg
and
gs
les
fsubrp
mov
scas
push
cmp
sub
pushf
cdq
sbb
aad
dec
loopne
xlat
call
mov
add
pop
fadd
cmps
scas
dec
ja
xchg
pop
scas
shr
jle
inc
pop
cli
add
cld
loope
jmp
dec
xor
jae
in
test
cmp
ret
mov
mov
cli
sbb
movs
pop
repz
into
dec
popf
js
and
(bad)
iret
add
adc
sbb
jmp
cmp
nop
mov
scas
loopne
mov
add
ret
cmc
inc
lods
mov
nop
pop
pop
call
movs
adc
lods
push
pop
loope
fistp
sbb
mov
mov
push
xchg
mov
cwde
push
outs
sbb
jae
and
and
push
loope
cmp
icebp
push
ret
pop
dec
sbb
rcr
popf
xchg
repnz
sub
add
loope
jmp
xchg
push
xchg
xlat
cmp
mov
in
inc
adc
in
cwde
push
out
xor
test
ret
adc
in
leave
xor
cmps
test
dec
(bad)
push
mov
add
out
out
ret
sbb
push
imul
xchg
mov
push
or
mov
jl
stc
inc
jg
push
arpl
sbb
in
mov
sub
push
(bad)
pushf
imul
mov
sub
jns
or
add
sbb
jg
push
dec
icebp
mov
adc
test
and
mov
xor
aaa
push
aas
std
std
mov
xchg
mov
xchg
mov
mov
mov
test
aas
jmp
add
sub
cmps
ds
fisubr
call
cld
pop
test
lock
mov
sbb
xchg
mov
push
mov
adc
push
pop
mov
div
pop
sbb
popf
xchg
ss
fwait
out
and
ss
cmc
lods
xor
dec
clc
xchg
mov
pop
arpl
stc
scas
push
sti
jnp
stc
push
sub
pop
lods
je
and
push
pop
sbb
mov
jns
outs
and
xor
add
aaa
sub
pop
lahf
inc
adc
jmp
in
xor
xchg
iret
push
pop
pop
pop
enter
xchg
push
daa
jge
mov
mov
pusha
or
xor
ret
es
or
sti
das
mov
push
dec
clc
mov
stc
push
inc
cmp
or
pusha
mov
inc
sub
inc
(bad)
sbb
sub
push
add
and
add
jns
(bad)
mov
and
out
loope
mov
sbb
or
aas
mov
mov
(bad)
jno
xchg
(bad)
outs
(bad)
or
dec
repz
or
cld
popf
adc
(bad)
push
loopne
mov
mov
jns
jo
mov
loope
(bad)
and
cld
stos
loopne
loopne
stos
cmps
fcmovb
mov
xor
lods
mov
pop
lock
ins
add
mov
jns
push
ret
jae
arpl
aaa
leave
stos
in
iret
sbb
jne
inc
loope
xor
rcr
inc
aas
ret
push
dec
adc
rcl
cmp
(bad)
jno
addr16
fdivp
std
jo
mov
int
cmp
retf
mov
data16
iret
movs
or
clc
and
sub
jp
cmps
cmps
dec
std
jg
xor
sub
sub
or
lods
and
mov
jo
stos
xchg
cmp
pop
js
mov
xor
outs
out
lods
add
pusha
xchg
(bad)
mov
adc
(bad)
sub
cli
out
lds
pop
jp
xor
in
and
cmp
sti
scas
sar
popa
popa
pop
push
xor
xor
mov
push
lds
and
movs
mov
sbb
shl
rcl
xor
add
loop
imul
call
and
or
push
ror
dec
jbe
retf
sbb
and
aas
js
std
jns
int
add
call
pop
push
pop
cdq
adc
push
in
jle
dec
add
adc
mov
xor
push
or
pop
outs
mov
popa
mov
ins
xor
jbe
retf
and
out
pop
xlat
(bad)
xor
mov
add
(bad)
pop
into
xlat
inc
mov
ror
out
xor
xor
test
fsubr
fistp
xchg
call
mov
cmps
jecxz
and
xchg
or
inc
cmp
das
adc
pushf
js
mov
jg
dec
xor
sti
jge
mov
stos
lods
dec
ror
mov
lods
and
inc
es
(bad)
loope
push
mov
or
inc
adc
fst
aad
sbb
push
mov
ret
push
cld
mov
push
test
mov
test
sub
data16
aaa
lods
mov
clc
fbld
iret
cmp
xchg
cdq
addr16
frstor
mov
push
(bad)
and
inc
stos
mov
push
xchg
mov
leave
retf
dec
xor
cld
bound
jno
xor
inc
rcr
mov
shl
adc
mov
je
aas
jmp
mov
dec
jne
push
mov
cs
push
cmp
push
test
sbb
icebp
shl
aad
(bad)
and
lahf
cs
(bad)
or
or
dec
push
call
or
(bad)
fldcw
push
xlat
cwde
fcom
add
mov
mov
jae
adc
push
out
xchg
xchg
out
dec
ret
lock
cmps
sbb
mov
jge
mov
xchg
pop
xor
inc
adc
xchg
pusha
fdivr
lds
rcl
push
scas
rcl
sahf
adc
mov
(bad)
mov
xor
mov
cmp
mov
stos
jns
or
out
or
(bad)
fild
sub
std
ficomp
retf
mov
xchg
into
outs
ins
inc
pop
ds
pusha
mov
rcl
jecxz
int3
push
lods
int
retf
aas
cmp
xor
in
leave
pop
sbb
fstp
lods
mov
xchg
test
pop
ror
popf
dec
test
pop
sbb
mov
frstor
pop
dec
mov
mov
ret
inc
sub
(bad)
jmp
adc
movs
cdq
pop
jle
les
xchg
out
jae
inc
lock
dec
popa
(bad)
pusha
add
(bad)
lock
in
int3
(bad)
icebp
pop
add
or
lds
mov
xchg
rol
lea
loop
loope
inc
popa
mov
xor
xor
adc
mov
or
pmulhuw
cdq
es
push
and
dec
(bad)
fidivr
xchg
(bad)
mov
(bad)
std
test
mov
fwait
arpl
int3
lods
icebp
scas
sub
inc
in
test
bound
enter
sub
cdq
sub
mov
sbb
cmc
jbe
ret
pop
xchg
das
mov
or
sub
xchg
retf
xor
test
mov
imul
cmc
mov
fsubr
out
jmp
mov
mov
aas
cmp
stos
inc
mov
fstp
out
xor
mov
cmp
jge
pop
movs
(bad)
iret
les
jle
pop
add
push
or
enter
shl
pop
mov
or
test
dec
ret
xor
dec
fnstcw
push
jae
repnz
mov
fwait
pop
aaa
iret
aam
sti
mov
push
scas
xor
mov
neg
fmul
adc
adc
mov
sbb
xor
xchg
add
inc
push
and
mov
sub
retf
ror
xor
inc
push
rol
push
mov
test
loopne
stc
lea
adc
pop
sbb
sub
popf
or
in
fs
sub
push
mov
idiv
ret
sub
retf
(bad)
jmp
repnz
out
and
push
call
jns
add
sub
repnz
cs
ret
(bad)
jg
pop
inc
sbb
add
ss
sahf
repnz
fst
call
pop
js
out
ret
test
push
mov
xchg
loopne
adc
sbb
cmps
xor
daa
(bad)
fwait
shr
push
leave
mov
cmps
sub
scas
out
sbb
lds
dec
fldcw
and
iret
into
sbb
mov
mov
xchg
jl
mov
jb
jbe
xchg
stos
mov
or
mov
sub
pop
xchg
es
pop
aas
or
or
ds
(bad)
maskmovq
test
fidiv
mov
mov
or
(bad)
lock
test
aad
vcvtsi2sd
clc
cdq
xchg
adc
xchg
sub
adc
into
jle
gs
or
inc
or
cmp
mov
pop
not
sahf
cmp
jecxz
hlt
rcr
xchg
push
xchg
dec
outs
ds
pop
jne
inc
rcl
std
or
sub
retf
fcomp
or
(bad)
std
fdiv
mov
add
fwait
mov
enter
mov
inc
mov
xchg
js
js
fadd
test
movs
nop
or
mov
shl
jno
pop
adc
gs
imul
or
stos
arpl
or
das
idiv
xlat
push
add
xchg
mov
(bad)
fist
shl
stc
push
jno
retf
inc
push
ja
icebp
leave
add
pop
add
shr
in
sub
mov
xchg
or
fsubp
mov
cmp
rcr
sbb
or
jmp
(bad)
fcmovnbe
pop
cmp
es
ret
ins
cmps
fs
mov
push
mov
scas
cmp
pop
mov
daa
enter
or
sub
inc
clc
xchg
inc
(bad)
jmp
repnz
push
mov
jnp
push
shr
test
or
icebp
fstp
jge
(bad)
push
(bad)
jmp
push
cs
stos
test
xor
(bad)
dec
leave
add
rcr
scas
(bad)
daa
jno
sbb
inc
cwde
mov
jbe
sbb
stc
es
stc
xchg
(bad)
(bad)
cmp
rcl
sbb
jae
fisub
mov
test
out
ret
in
mov
and
mov
pop
daa
jmp
cwde
call
xchg
outs
fisubr
cmp
shr
fisub
push
or
mov
rcl
lods
pop
sbb
call
pop
sub
rcr
or
pop
movs
pop
mov
outs
or
sbb
shl
add
or
rcr
clc
mov
push
int
xchg
out
pop
lea
les
jo
sbb
mov
ds
call
push
popa
arpl
call
neg
loope
push
pop
add
adc
mov
lods
adc
ret
pop
xchg
je
sbb
dec
aad
inc
cmp
retf
sub
shld
add
or
lock
test
mov
repnz
xchg
push
inc
xor
(bad)
clc
or
and
in
or
add
sbb
shl
adc
jb
xchg
mov
mov
adc
es
test
mov
and
inc
imul
imul
xchg
ror
mov
(bad)
rcr
mov
sbb
test
test
loop
neg
push
repz
(bad)
jl
out
mov
xchg
scas
jp
pushf
lea
inc
mov
push
rcr
imul
out
dec
jmp
xchg
jbe
ins
and
mov
pop
cmp
stc
ss
data16
out
les
stos
xchg
das
scas
je
xchg
xor
inc
adc
add
(bad)
sti
gs
and
iret
idiv
push
dec
inc
sbb
(bad)
scas
cmp
hlt
out
mov
out
or
sbb
test
dec
sub
mov
loop
push
pop
(bad)
cmp
xor
mov
inc
rep
not
(bad)
(bad)
mov
push
pop
xchg
or
sbb
out
mov
lock
aas
xlat
sar
shl
inc
je
xor
int3
ror
aaa
adc
aas
mov
sub
repnz
aad
pop
jne
or
add
mov
rcr
dec
ins
pop
mov
cmp
jb
clc
push
loope
sbb
stc
sbb
es
mov
fsub
movs
push
repnz
mov
fistp
aas
inc
mov
xor
add
aad
add
xchg
mov
and
lahf
fidiv
mov
push
test
lods
div
int3
inc
xchg
and
cmp
or
push
dec
pop
popf
mov
jbe
pop
in
loope
mov
dec
neg
sbb
add
inc
mov
scas
add
pop
mov
lock
jge
mov
aam
ja
icebp
enter
push
or
cdq
stos
call
test
jle
jle
call
xor
mov
add
xchg
dec
loop
scas
dec
ror
adc
inc
ins
xchg
cmps
stos
xor
fwait
xor
sbb
cmp
push
sub
mov
sbb
out
aas
inc
cmp
bound
dec
iret
adc
(bad)
cwde
out
rcl
xchg
jbe
xchg
or
(bad)
scas
and
mov
fs
inc
je
or
xchg
dec
icebp
xchg
sub
fcom
movs
sub
call
retf
push
aaa
xor
add
xor
sar
idiv
xlat
outs
cwde
cmps
pop
dec
call
iret
inc
fs
mov
push
pusha
iret
imul
popf
and
out
or
mov
pop
(bad)
int3
adc
lahf
mov
push
xor
shr
or
add
pop
bound
adc
mov
mov
adc
shl
add
fst
(bad)
out
iret
ja
(bad)
xchg
int
xor
xor
imul
mov
out
inc
push
fwait
iret
or
loope
mov
in
mov
pop
push
aaa
mov
or
leave
rcr
fsubr
mov
scas
pop
push
push
mov
mov
imul
jg
xor
popf
mov
mov
jo
test
inc
fmul
mov
or
pop
shl
push
pop
mov
lods
cmc
mov
int3
dec
push
das
(bad)
ins
arpl
enter
ins
sti
jne
xor
cmp
pop
jg
dec
pop
xlat
test
fcom
dec
xchg
stos
xchg
(bad)
push
mov
popa
fcomip
popf
in
out
or
std
cli
lahf
jp
rcl
out
sbb
sbb
mov
dec
aam
xchg
or
jbe
mov
and
jmp
bound
adc
neg
inc
mov
add
pusha
pop
pop
loope
mov
mov
dec
js
jmp
sbb
add
stos
pop
cmps
adc
jg
xor
ja
(bad)
dec
test
mov
mov
dec
in
xchg
cmp
dec
(bad)
xchg
popf
inc
pop
out
mov
into
shl
push
add
pop
add
cmp
stc
dec
sub
jnp
mov
xchg
xor
jno
dec
add
(bad)
jnp
adc
and
daa
mov
(bad)
jl
mov
ret
jns
dec
pusha
shld
or
jge
jmp
inc
(bad)
push
mov
dec
imul
xchg
jge
aad
ins
xchg
adc
repnz
push
push
popa
daa
dec
add
dec
and
dec
out
jl
or
pop
popf
sbb
sbb
in
in
or
sub
rol
(bad)
adc
cmps
sub
js
lock
cmps
daa
test
dec
cmp
push
dec
test
icebp
xchg
dec
cmp
push
push
pop
sti
ins
jmp
fistp
scas
movs
and
sbb
hlt
imul
mov
fidivr
push
dec
mov
sbb
add
ins
jb
jno
sbb
aam
sbb
mov
mov
and
in
cdq
mov
pusha
loop
popf
or
gs
repnz
dec
cmp
mov
shl
imul
push
xchg
sub
out
into
mov
mov
mov
adc
dec
dec
mov
xor
and
xor
push
push
adc
sbb
pop
shl
push
jg
imul
test
and
jno
push
mov
sar
mov
addr16
loop
inc
arpl
cmc
push
xchg
imul
test
lods
jo
rol
enter
in
rcr
(bad)
(bad)
push
sub
call
or
cmp
scas
add
inc
pop
inc
shl
sub
dec
sub
gs
or
sub
pushw
lahf
inc
aad
pop
sbb
ret
in
sbb
cmp
rcl
enter
jb
lea
pop
jp
cmp
adc
sahf
push
test
push
retf
ja
cdq
mov
out
call
pop
dec
cmc
out
adc
add
xchg
cli
sbb
(bad)
jnp
jmp
cmc
popf
fcmove
enter
or
pusha
sub
cmps
stos
cmp
adc
sbb
add
outs
add
rcl
dec
add
add
ror
rcl
mov
aas
and
add
aas
movs
sub
inc
icebp
mov
jg
lods
retf
scas
adc
(bad)
push
adc
leave
adc
add
or
cmc
xor
mov
push
mov
in
or
call
dec
popf
retf
leave
aaa
adc
bound
aaa
data16
into
in
pop
stos
out
pop
pop
pop
clc
push
mov
inc
and
idiv
push
add
adc
adc
add
and
and
sbb
fcmove
lods
ret
jp
mov
jae
inc
mov
and
lock
pop
jo
mov
jae
and
fimul
jl
and
push
mov
hlt
fwait
sub
int
push
push
or
div
mov
jne
dec
jle
pop
push
jo
mul
les
scas
in
push
or
ins
sbb
daa
lods
in
in
mov
or
add
xor
push
sahf
xor
mov
das
jp
sbb
xor
adc
(bad)
fbstp
test
xchg
(bad)
nop
adc
js
mov
cmp
das
mov
aam
cmp
jne
sub
popf
and
pop
mov
or
cmp
cs
push
aam
dec
pop
sub
mov
jecxz
stc
sar
dec
inc
aas
dec
cmp
xchg
(bad)
in
rcl
mov
bound
scas
nop
int
pop
pop
pushf
sbb
sub
pop
in
add
or
add
or
add
in
push
dec
xor
xchg
retf
or
xchg
test
call
cmp
mov
or
adc
(bad)
lahf
(bad)
jne
xor
out
or
imul
dec
les
repz
jecxz
in
inc
std
cmc
fadd
enter
sub
dec
inc
push
jne
push
cmp
mov
mov
mov
jmp
jb
aaa
ret
out
xchg
xor
add
mov
call
xchg
mov
cmp
cs
fisubr
call
repz
pop
adc
cwde
push
test
lds
mov
int3
sub
scas
pushf
push
mov
and
xor
lahf
mov
gs
add
in
jecxz
inc
pop
sbb
add
xchg
cmc
fimul
rcr
repz
repz
jmp
sahf
movs
cli
mov
pop
loopne
mov
imul
push
jo
pop
not
std
mov
dec
push
fisub
pop
push
addr16
ds
lods
jmp
enter
mov
sub
pop
sahf
sub
outs
fbld
loope
mov
jp
pop
sbb
add
or
fldcw
cmp
rcl
mov
out
add
movs
mov
xchg
ud1
or
push
imul
inc
out
ss
sbb
jle
add
or
add
fdiv
mov
iret
out
adc
or
repz
imul
cmp
into
cs
out
jbe
stc
out
icebp
lods
mov
xchg
xchg
or
adc
movs
cmp
rcr
adc
out
in
jmp
(bad)
xchg
mov
ins
and
mov
sbb
fist
ret
jae
mov
cmps
push
mov
loope
xchg
repnz
shl
outs
cmc
sub
ja
xlat
pop
(bad)
in
or
bound
xchg
sub
cld
inc
dec
out
xor
mov
xchg
ds
or
mov
inc
and
jns
popf
cdq
out
mov
adc
and
imul
imul
(bad)
xchg
or
mov
div
cmps
add
stos
pop
push
mov
mov
rcl
adc
dec
loopne
shl
test
test
repnz
push
iret
inc
lea
cmp
pop
xlat
xor
fcomi
aaa
or
mov
add
arpl
lahf
mov
inc
int
in
cmp
cwde
imul
xor
outs
test
ret
leave
ror
pandn
test
mov
sub
or
dec
rol
and
(bad)
mov
pusha
leave
loopne
jmp
dec
fisub
push
sbb
mov
xor
mov
test
loopne
add
and
pop
pop
jo
pop
push
fadd
fisubr
sub
sub
cmc
pop
nop
inc
pusha
and
or
shl
gs
dec
lods
(bad)
cmp
fst
and
pop
adc
fst
adc
jmp
jp
adc
mov
in
call
or
mov
je
cmps
ins
xchg
xchg
cmp
in
outs
sub
in
xor
push
add
prefetch
or
fsin
xchg
shr
cmps
popa
xor
push
rcr
fidivr
push
and
je
jns
mov
arpl
inc
ins
fiadd
pop
jge
cli
pop
call
xor
movs
fwait
inc
sar
cli
sub
pop
(bad)
sti
mov
outs
loop
xchg
aas
xor
in
cli
in
sub
popa
mov
push
and
sbb
scas
jo
push
cs
dec
inc
sar
dec
jmp
movs
pop
push
lods
jbe
jl
test
icebp
add
mov
jne
cld
fld
dec
gs
push
fsub
dec
inc
call
adc
jno
jl
in
add
push
mov
inc
clc
pop
xchg
jmp
mov
loop
jmp
lahf
push
push
ins
and
pop
mov
jmp
sbb
popa
inc
pop
inc
retf
mov
inc
loop
(bad)
mov
loop
fld
imul
int
pop
xor
daa
mov
mov
outs
inc
inc
aam
sub
ss
pop
jo
out
stos
imul
lock
mov
je
pop
nop
(bad)
jnp
cli
pop
int
stos
add
or
scas
fistp
mov
shr
pop
sbb
jno
out
stos
out
(bad)
fcomp
inc
call
lock
rol
sbb
add
and
adc
adc
bound
gs
add
dec
ret
cmc
pop
repz
push
popf
mul
rcr
(bad)
sub
or
call
xchg
rcl
imul
xor
pop
out
call
or
inc
lods
dec
jae
mov
xchg
pop
loopne
leave
rcr
stos
push
mov
scas
pop
cmp
cli
inc
lods
arpl
adc
inc
stos
inc
popf
sbb
sub
fsubr
es
mov
jl
popa
dec
xor
jl
sbb
mov
das
(bad)
fldcw
arpl
mov
jmp
adc
test
lock
in
cmp
repnz
test
or
mov
test
inc
lds
cmps
cmp
or
shr
gs
jnp
xchg
push
jne
leave
ins
cmps
mov
jmp
std
cdq
out
push
repz
and
push
rcl
dec
xchg
mov
xchg
sub
addr16
fistp
ret
ins
push
or
or
stc
sbb
lock
or
cmp
push
xchg
out
xchg
lods
jo
aaa
leave
mov
movs
xchg
xor
jge
push
xchg
fsub
jne
repnz
cmp
cwde
or
leave
add
jl
push
dec
push
lock
leave
or
hlt
push
cmp
jae
xor
xor
(bad)
int3
in
cld
fild
push
scas
popa
dec
pop
sar
enter
mov
push
mov
xor
push
jae
push
sub
fisubr
sbb
or
inc
xor
xchg
push
xchg
fs
hlt
fisubr
nop
xchg
mov
mov
sti
or
mov
aam
mov
and
push
cmp
xor
jmp
dec
ins
sbb
das
retf
aas
jg
lods
ret
int
inc
std
(bad)
sub
mov
loopne
xchg
repnz
dec
je
jnp
das
lods
jecxz
in
pop
adc
or
js
rcr
daa
aam
lds
loopne
sub
push
in
leave
jns
int3
cld
push
ja
hlt
adc
jle
or
mov
dec
cmps
mov
xchg
lock
and
mov
or
add
sub
push
clc
add
dec
push
test
xor
(bad)
jecxz
pusha
sti
dec
cmp
pop
mov
icebp
mul
rcr
adc
jecxz
mov
push
push
add
(bad)
aas
loopne
cli
ror
cwde
iret
clc
ins
mov
arpl
aad
inc
mov
hlt
fstp
push
xchg
mov
mov
add
sbb
ret
sbb
inc
mov
popa
mov
or
add
ficomp
jno
dec
jbe
adc
fsub
mov
sub
lock
dec
outs
fwait
jmp
mov
or
ja
outs
and
xor
inc
cmp
pop
xor
sahf
sub
in
inc
and
fwait
jno
dec
jmp
shl
mov
sub
push
aas
mov
bound
sbb
mov
or
push
mov
jns
add
jl
add
mov
add
push
xor
push
pushf
cld
xor
dec
push
add
adc
push
sbb
sub
mov
jmp
stos
in
adc
cwde
ss
mov
in
loopne
ja
or
mov
sub
inc
dec
(bad)
(bad)
imul
rol
imul
add
adc
adc
and
pop
cmp
mov
ret
mov
push
mov
or
sub
mov
push
xlat
cmp
sbb
out
xchg
and
push
push
ins
out
sbb
and
push
jnp
push
es
mov
(bad)
sub
inc
outs
imul
je
fucom
mov
cmp
sbb
test
enter
xchg
or
cdq
(bad)
sti
daa
call
inc
loopne
add
iret
outs
jns
bound
jnp
into
cmp
add
dec
out
and
aad
sbb
push
mov
sbb
or
and
rcr
sub
es
clc
repz
sub
int3
call
sub
es
es
(bad)
lds
mov
std
push
add
fmul
push
retf
std
stc
or
push
cli
adc
das
dec
and
xchg
nop
pop
dec
popf
adc
add
(bad)
stos
sbb
mov
cmp
or
dec
call
or
hlt
adc
adc
stc
push
add
fnstsw
cli
adc
pop
shl
stc
in
dec
repz
push
stos
cmp
fadd
loope
movs
pusha
and
(bad)
mov
aas
leave
movs
adc
or
xchg
jb
cli
cli
push
pop
xchg
cmp
loop
cmp
jmp
push
sbb
std
ins
je
xchg
inc
jmp
adc
pop
or
dec
jmp
mov
int
(bad)
fst
inc
cmps
shl
in
cmps
inc
dec
in
fbstp
mov
call
inc
mul
mov
ds
(bad)
fmul
(bad)
xor
and
pushf
stos
les
or
jno
xor
cmp
cmp
push
jns
inc
push
lods
push
inc
and
hlt
lods
mov
(bad)
dec
push
add
mov
sbb
jns
dec
hlt
ins
jle
mov
mov
dec
cld
mov
pop
inc
out
lods
pop
ror
adc
jp
ja
(bad)
out
mov
fidivr
mov
or
push
sti
and
stc
sub
mov
ss
je
jns
dec
ds
xchg
lock
adc
push
jns
push
enter
aaa
ss
cwde
mov
or
(bad)
out
clc
push
lods
adc
sub
xchg
popa
jns
fld
add
ret
cmp
mov
mov
sub
leave
ret
je
adc
std
(bad)
(bad)
xor
inc
push
cmp
add
outs
mov
mov
push
xlat
dec
adc
js
fst
sbb
push
movs
fsubr
neg
cmp
pop
pop
loope
dec
jno
pop
push
arpl
hlt
ret
xorps
jl
xchg
jl
ins
sbb
dec
or
jp
ror
push
pusha
adc
mov
loopne
or
lds
fistp
in
jp
and
hlt
mov
inc
imul
mov
aas
ficomp
mov
pusha
sub
push
mov
adc
or
fucomp
fldz
in
dec
sbb
lahf
mov
data16
xor
sbb
pusha
lea
fistp
mov
pop
mov
add
or
sbb
out
bound
xor
xor
(bad)
fisttp
mov
xlat
stc
movs
sbb
mov
lahf
jmp
enter
jecxz
pushf
fwait
imul
mov
sti
leave
jns
dec
(bad)
add
scas
idiv
scas
mov
mov
or
je
push
cli
fs
in
stos
hlt
aad
push
push
or
push
jmp
xchg
outs
cld
dec
mov
aaa
sub
sub
shl
jnp
xor
das
out
mov
dec
loop
lods
mov
mov
inc
ds
stc
into
inc
jmp
mov
sub
imul
jne
(bad)
stos
xor
sbb
sub
jbe
rcl
ins
cmp
rol
js
pop
inc
into
or
jnp
test
ret
jne
cmp
adc
ins
xchg
dec
mov
dec
jbe
loopne
enter
xchg
loop
adc
or
add
lds
add
fmulp
mov
add
data16
push
outs
jnp
dec
pop
xchg
hlt
rcl
push
xor
je
in
mov
daa
xchg
cmps
push
retf
loop
xchg
jecxz
test
push
pop
mov
or
fs
mov
xor
xor
inc
retf
lea
and
jmp
cmp
mov
test
fwait
mov
iret
test
out
xor
cmp
cli
xlat
retf
clc
push
fistp
outs
cmp
jg
jecxz
sar
pop
cld
fnstsw
out
pop
xlat
fsin
ja
ja
jmp
pusha
(bad)
xchg
leave
inc
in
repz
loope
jmp
sub
call
xchg
int
cmp
dec
or
cld
pop
jle
jo
sbb
cmp
std
adc
fcmovbe
mov
les
push
push
xor
retf
mov
xor
out
test
jge
fmul
jne
xor
jle
cmp
add
das
gs
stc
out
or
dec
aad
imul
or
into
xchg
mov
push
inc
adc
ja
mov
xor
pop
push
int
or
push
jns
and
arpl
ds
popa
call
addr16
mov
int3
xor
mov
or
enter
fcom
push
xchg
mov
mov
sub
das
pop
sub
popf
imul
dec
outs
mov
xor
pop
sub
sbb
jnp
jecxz
enter
jno
lock
dec
test
mov
and
pop
gs
mov
or
sbb
add
and
fcos
scas
or
mov
dec
pop
mov
mov
gs
int3
dec
jecxz
add
mov
mov
or
sub
scas
cdq
dec
fcmovnb
fild
ins
add
test
call
or
fisubr
cdq
aam
cmp
rcl
mov
cmp
mov
out
arpl
cmove
shl
scas
inc
pop
and
fiadd
mov
dec
add
clc
push
repz
add
movs
mov
dec
int
stos
sub
jne
mov
sbb
lods
fist
mov
jg
dec
bound
stc
mov
xlat
inc
mov
sub
mov
inc
jmp
loopne
lods
in
mov
inc
xor
xchg
daa
(bad)
jns
(bad)
ins
shr
loope
test
movs
cmps
adc
jmp
pop
cld
retf
xchg
loop
mov
jmp
call
loope
lahf
aas
jmp
mov
retf
icebp
pop
je
and
or
push
xchg
inc
sti
or
push
lods
ja
pushf
fild
sbb
xchg
enter
push
pop
aam
out
xor
inc
test
or
imul
leave
bound
inc
out
mov
icebp
or
cmps
sti
and
sbb
cmps
sub
push
addr16
je
mov
or
mov
std
xlat
scas
in
icebp
jae
push
scas
add
mov
inc
(bad)
push
fucom
mov
mov
ss
mov
and
sub
pop
or
std
mov
push
mov
cmc
shl
jg
mov
xor
outs
or
ficomp
mov
xchg
sub
adc
fsubp
sub
(bad)
div
mov
dec
lods
mov
inc
pusha
pop
lock
push
xchg
cmps
mov
mov
cdq
loopne
mov
in
pop
xchg
push
int3
push
mov
xchg
arpl
push
xor
das
sbb
mov
xchg
pop
stos
cmps
and
repnz
sub
into
jae
sbb
jo
mov
jmp
push
popf
mov
(bad)
pop
push
sahf
cwde
jge
dec
out
adc
add
(bad)
cmp
int
cmp
pop
jmp
cmp
(bad)
xlat
stc
mov
fwait
lods
pop
repnz
jmp
xor
fdivr
ja
into
mov
cmps
inc
and
mov
jne
xchg
test
ja
inc
popf
mov
sbb
out
jl
aad
int
scas
cwde
rol
mov
fsubr
aam
inc
sbb
cmp
(bad)
sub
jge
or
lods
jge
sti
pop
arpl
or
cwde
jmp
sar
sbb
cld
push
cmp
mov
div
push
cdq
leave
(bad)
call
jno
adc
fwait
mov
xor
or
or
jne
sub
jno
call
jae
add
loope
mov
pushf
push
imul
or
mov
mov
cmp
cmps
dec
stos
mov
cli
add
rcr
sbb
lods
cmps
cld
cwde
push
jno
fcomi
and
dec
push
mov
push
xchg
aad
ss
pop
pop
jg
dec
mov
push
mov
test
in
dec
lds
xchg
rcl
mov
xchg
cmp
jmp
push
jg
lods
inc
bt
mov
xlat
iret
sub
mov
mov
adc
daa
mov
icebp
adc
dec
test
or
cmp
lock
pop
jae
mov
cmps
(bad)
adc
inc
ffree
ret
pop
dec
fnstenv
ror
outs
or
fmul
adc
xchg
test
pop
in
inc
inc
or
(bad)
daa
or
xchg
xor
sub
outs
sub
sub
inc
push
lahf
sub
adc
fild
dec
push
(bad)
shl
xchg
xor
sbb
sbb
test
inc
into
dec
dec
xor
and
fsub
icebp
pop
lahf
neg
lods
mov
cld
in
(bad)
int
nop
jle
dec
lds
repz
enter
jmp
sbb
out
and
adc
out
std
mov
xor
je
xor
aad
arpl
mov
cmp
enter
add
push
dec
rol
test
jmp
jnp
inc
adc
add
adc
push
or
lock
and
cmc
adc
cmp
sub
cmc
mov
fbstp
adc
jne
sub
inc
int3
or
cwde
sbb
mov
xchg
jnp
mov
mov
gs
gs
mov
movs
and
aad
sub
or
push
int3
mov
cli
in
out
ds
cmp
jb
scas
(bad)
xchg
mov
cwde
push
mov
imul
test
mov
in
pop
out
retf
xchg
sub
in
in
jnp
mov
dec
ja
aaa
push
fidiv
mov
or
shl
inc
jae
mov
aad
sub
out
retf
sub
xchg
es
rcl
fst
jne
pop
adc
fs
ret
sahf
xor
dec
outs
fucom
and
push
mov
push
adc
inc
jmp
in
cld
lea
popa
movs
cmp
adc
cld
dec
dec
or
jmp
fadd
mov
stc
rcr
in
frstor
jmp
out
jo
push
aad
pop
ret
clc
push
in
cmps
ret
ins
cmps
in
shr
xchg
rol
aaa
mov
cmp
daa
add
inc
icebp
lea
inc
lds
xchg
ret
mov
jae
jecxz
retf
or
(bad)
stos
ror
cwde
scas
pop
fwait
lds
adc
(bad)
mov
mov
ds
pop
push
fcom
mov
push
sbb
hlt
jmp
cmp
add
push
jb
std
call
xor
scas
stos
push
fwait
cmp
ins
iret
mov
test
xchg
mov
mov
sar
hlt
fs
test
xor
lock
sbb
call
std
dec
jno
loope
and
mov
mov
sti
popa
movs
cmp
daa
inc
pop
sub
int3
(bad)
(bad)
inc
fnstenv
xchg
pop
dec
mov
adc
movq
mov
push
dec
inc
add
fldcw
xchg
and
cmp
xchg
push
xchg
and
xor
stc
cmp
jae
int3
fisub
loope
xor
adc
jae
cmc
in
or
cmp
mov
jmp
sar
stc
loopne
xchg
in
pop
inc
vpsubsw
call
add
cmovle
and
outs
sbb
pop
stc
lea
jmp
push
jne
into
pusha
call
jbe
mov
aam
in
ret
dec
add
in
test
dec
movs
adc
pop
fsub
jns
retf
stc
gs
cmp
retf
adc
adc
mov
mov
fdiv
jne
pop
out
idiv
lock
js
les
dec
popf
pop
jae
pusha
outs
sbb
lea
je
leave
cmp
in
inc
mov
iret
sbb
ss
sbb
push
xchg
mov
mov
jno
sub
pop
mov
popa
popf
mov
aad
fmul
and
push
pusha
jl
push
je
push
mov
pop
sub
jl
lahf
inc
gs
mov
mov
mov
mov
data16
pushf
jb
mov
mov
shl
adc
ret
data16
retf
hlt
sbb
jne
inc
mov
mov
out
cmc
push
mov
test
mov
cwde
and
jge
sti
push
xchg
aas
lds
jmp
push
test
mov
push
pop
daa
pop
xchg
stc
mov
jmp
or
stc
loope
mov
sbb
lea
mov
repz
scas
inc
(bad)
repnz
nop
jbe
add
mov
sbb
cli
pop
test
cld
je
mov
add
mov
lahf
and
mov
cmp
cs
mov
pop
repz
nop
jo
or
mov
xchg
adc
test
mov
lahf
iret
add
jnp
aad
out
faddp
shl
xchg
cmps
(bad)
repz
cmp
cmp
xchg
mov
out
leave
add
test
ret
inc
push
dec
popf
xchg
mov
or
jns
inc
retf
rcr
pushf
das
(bad)
sti
lahf
cmc
(bad)
out
popa
ret
outs
enter
and
or
jl
jmp
or
imul
out
fsubr
xchg
pop
push
adc
pusha
ins
dec
push
mov
push
push
xor
cmp
das
or
lahf
out
push
pop
icebp
dec
cs
dec
add
jmp
or
cld
mov
xchg
sbb
dec
mov
fs
jb
lock
retf
jmp
lds
jo
call
mov
popa
shl
push
int
cmp
addr16
aam
movs
jne
and
ja
push
clc
jne
mov
stc
loopne
or
pusha
in
cmp
dec
fs
pop
and
std
cs
or
aam
cmp
imul
adc
and
aaa
test
popa
mov
frstor
cli
test
pop
mov
les
xchg
stc
mov
fcmove
adc
pop
jbe
and
jbe
sub
call
mov
jae
imul
out
jl
xchg
or
push
mov
cmp
jl
stos
sub
mov
out
call
push
jno
add
jns
jmp
int
(bad)
mov
push
repnz
rcr
or
aad
add
(bad)
repnz
in
(bad)
mov
dec
sub
xchg
fnstenv
leave
mov
adc
cmps
ret
ins
cld
js
push
jge
push
xchg
cli
sub
adc
sbb
pop
add
leave
jae
inc
pop
and
and
aam
mov
pusha
mov
mov
mov
mov
popa
inc
jo
mov
out
xor
sbb
adc
mov
lea
(bad)
mov
sbb
stos
cmp
int
(bad)
int3
aad
jne
stos
or
pop
xchg
dec
or
add
nop
xchg
imul
pop
data16
fcomi
or
pop
add
or
dec
jne
dec
mov
mov
push
dec
jns
mov
mov
in
iret
dec
inc
cwde
add
inc
cmp
daa
or
fucomp
mov
sub
inc
es
xchg
sahf
jmp
sbb
mov
pop
scas
sbb
adc
xor
add
clc
repz
add
mov
xchg
sbb
inc
fist
or
out
cmps
fcmovnu
sbb
retf
jb
mov
mov
test
inc
in
sub
mov
les
adc
jne
(bad)
(bad)
or
fistp
xchg
mov
push
idiv
push
pop
inc
loope
push
mov
test
(bad)
scas
push
xchg
(bad)
daa
mov
add
push
pop
repz
add
sub
dec
xor
xchg
inc
mov
imul
repnz
inc
adc
mov
mov
stos
(bad)
pop
push
jge
neg
mov
sar
daa
prefetcht0
pushf
hlt
retf
call
stos
pop
imul
mov
push
jb
ins
pop
out
mov
mov
ins
sub
cmp
or
test
xchg
je
and
xchg
and
adc
lock
div
cmp
cmc
enter
mov
push
aaa
ret
inc
test
je
cld
sbb
xchg
pop
fnsave
mov
and
dec
sti
clc
jns
cmp
jnp
mov
fldcw
dec
repz
clc
jno
popa
adc
jnp
push
int
mov
std
aaa
xor
jnp
loope
cmp
(bad)
mov
jl
sti
mov
fadd
pop
cdq
loope
pop
retf
daa
sub
mov
push
mov
pop
xor
xlat
sub
jp
gs
retf
and
add
popa
and
xchg
jae
imul
xor
js
fiadd
jns
mov
fmul
cmp
ror
push
cmp
xor
or
stc
jecxz
fmulp
shr
ds
sub
bound
mov
mov
cmps
int
out
sub
lea
ss
mov
(bad)
fld1
cmp
adc
retf
scas
in
aam
pop
lock
int
or
or
cdq
not
cmp
bound
(bad)
frstor
fcomip
push
ins
jno
jnp
push
push
and
mov
pop
and
fild
mov
or
(bad)
cli
ins
jle
sub
lods
mov
fisttp
mov
jge
pop
xlat
add
out
jne
jp
out
jp
sub
dec
push
dec
adc
xchg
xor
and
lds
inc
adc
stc
or
outs
frstor
mov
popf
jmp
mov
lock
or
repnz
xor
jecxz
imul
ret
mov
xchg
push
(bad)
stos
fst
ss
pop
xchg
xor
nop
jmp
outs
xchg
xor
stos
sub
jecxz
jmp
cmps
and
pop
mov
mov
or
out
arpl
or
call
and
pop
fsubr
jne
sub
inc
jl
and
pushf
popf
mov
pop
push
xchg
jo
add
pop
jg
sbb
out
mov
mov
call
xchg
inc
mov
mov
inc
mov
and
je
xor
lock
hlt
std
inc
jno
jae
pop
and
ins
out
fmul
xor
jecxz
popa
dec
aaa
loopne
and
in
sbb
push
push
les
loopne
fdivr
ror
cdq
or
dec
jecxz
jmp
stc
rol
cmp
cdq
dec
shl
fdiv
xor
xchg
mov
add
add
inc
mov
or
inc
aad
div
movs
idiv
(bad)
fs
mov
pop
fisttp
xchg
jns
adc
push
push
jbe
lea
sbb
retf
pop
or
inc
and
retf
xchg
mov
ss
ds
inc
mov
sahf
mov
sbb
mov
aam
mov
fwait
cld
mov
jl
jmp
jl
scas
xor
push
mov
cmps
cli
inc
fs
push
jns
jp
cmp
push
iret
xlat
ss
arpl
(bad)
jnp
sbb
jmp
xor
fcmovnbe
cmp
ja
xor
sub
and
addr16
clc
fcomp
adc
xchg
mov
out
cmp
or
lds
mov
es
push
lahf
jecxz
and
js
cld
sub
push
pop
xor
nop
aad
lods
mov
mov
stc
mov
bound
pop
sub
int
jb
fcomp
or
retf
scas
cmp
and
es
mov
retf
retf
push
and
sub
psraw
sub
aad
push
retf
adc
sbb
cwde
jg
ss
add
xchg
xchg
xor
xchg
das
in
mov
adc
jg
and
fcomp
xor
jmp
test
jp
sbb
bound
icebp
mov
lods
adc
mov
imul
adc
or
aas
imul
rcl
aam
aaa
xchg
push
mov
xchg
loopne
sbb
movs
cmp
dec
jns
jp
rcr
or
inc
pop
sub
inc
add
loopne
mov
cmp
(bad)
lock
fwait
mov
ins
(bad)
lods
popf
out
je
push
fldln2
(bad)
stc
xchg
xlat
pop
ins
ret
mov
xchg
outs
add
dec
arpl
pop
aas
adc
xor
out
arpl
dec
sub
jmp
(bad)
movs
adc
inc
fwait
mov
out
int
imul
jge
push
mov
sbb
ss
xor
stos
push
(bad)
cmps
dec
cmps
test
mov
push
mov
xchg
cdq
push
mov
movs
cmp
dec
fild
in
and
ins
mov
lea
loop
pop
sbb
sbb
imul
push
leave
jl
retf
mov
and
js
xor
das
call
pop
mov
ds
sbb
out
jno
pop
push
movs
push
icebp
out
cmp
test
scas
sub
cmp
fdivr
ret
int
mov
enter
mov
sbb
pushf
popf
bound
jp
bound
lahf
jno
or
adc
addr16
push
xchg
je
js
mov
mov
xor
mov
lods
rcl
hlt
clc
je
pop
fs
in
mov
xor
xchg
pop
mov
inc
ds
mov
mov
popf
xchg
dec
leave
jle
and
(bad)
arpl
inc
jmp
and
das
jae
imul
jl
push
adc
lahf
or
repnz
inc
xor
pop
inc
shl
adc
or
mov
test
das
push
loop
and
imul
pop
(bad)
fcos
es
(bad)
mov
pop
pop
das
shr
xor
inc
pusha
pusha
mov
in
fldenv
add
jae
push
adc
or
mov
push
mov
mov
ss
and
lods
add
cmp
scas
jne
inc
sbb
rcl
pushf
cmp
out
jbe
cld
rcr
cmp
mov
cmp
enter
xchg
call
retf
mov
jmp
je
push
jg
addr16
vpaddsw
je
cmp
mov
dec
pop
jae
imul
ret
call
sbb
mov
repnz
loope
inc
sub
jne
mov
mov
push
adc
xlat
jno
mul
cdq
cmp
test
adc
test
pop
sub
xchg
jo
jg
or
loope
loope
inc
scas
mov
xchg
pop
stc
and
push
(bad)
sub
jbe
arpl
sub
ds
jns
mov
dec
add
test
shl
loopne
and
out
xchg
inc
adc
inc
out
dec
out
outs
inc
xchg
mov
jmp
out
mov
add
adc
or
jnp
push
add
iret
test
sub
clc
push
addr16
jp
push
pop
sbb
sub
sbb
into
mov
push
dec
scas
sub
adc
mov
mov
cmp
cmp
in
push
enter
mov
mov
mov
aam
leave
mov
(bad)
jl
add
(bad)
or
cmp
test
xor
pop
ins
ja
sub
add
shl
adc
mov
fdivr
stos
(bad)
dec
repnz
jg
sbb
neg
xchg
jae
mov
sub
ins
lock
cs
or
cdq
xor
xor
loope
inc
add
xlat
imul
mov
mov
mov
jb
or
mov
sub
cwde
push
lods
mov
or
pop
dec
jge
ds
aam
mov
comiss
js
inc
test
hlt
jp
ror
sbb
fs
mov
repz
jmp
out
jb
dec
movs
popa
pop
mov
fidiv
jo
mov
shr
inc
pushf
inc
test
inc
in
ja
test
int
dec
jbe
(bad)
cmc
out
mov
cmp
mov
xchg
fisub
dec
(bad)
retf
leave
add
or
jno
sub
pop
push
sub
arpl
retf
fstp
adc
(bad)
idiv
(bad)
sub
push
pop
cmp
(bad)
sbb
cmps
mov
or
add
test
sub
lods
or
ins
iret
add
mov
sbb
cdq
rcl
mov
xchg
mov
in
popf
pop
jl
enter
sbb
daa
fnstcw
std
sbb
dec
cmp
mov
push
adc
add
fwait
ds
add
pushf
movs
mov
iret
xchg
sbb
iret
push
jbe
popa
mov
jecxz
mov
add
nop
add
fsub
mov
push
add
cmp
(bad)
or
setne
mov
retf
data16
jp
out
retf
push
cld
test
sbb
lods
cmp
pop
pop
lds
rol
int
into
test
and
jbe
jle
nop
shl
ret
(bad)
out
adc
ret
mov
sbb
mov
sub
loop
fimul
test
nop
out
push
add
out
int
adc
add
(bad)
mov
pop
rol
cmps
mov
sub
(bad)
movs
scas
enter
mov
addr16
or
mov
add
adc
sbb
(bad)
push
fwait
xchg
rcl
add
push
cwde
pop
inc
lea
adc
inc
cmc
sub
sahf
leave
xor
xchg
fsub
inc
je
jle
pop
cmps
jge
mov
xor
cmps
sbb
test
sbb
pop
repnz
xchg
pusha
repz
gs
pushf
push
pop
fld
mov
leave
mov
repz
lods
jb
or
(bad)
jno
ins
cmp
aaa
or
(bad)
sti
mov
sbb
mov
sbb
and
mov
popa
push
imul
push
mov
sbb
imul
xlat
addr16
pop
mov
jno
xor
aaa
sbb
xchg
mov
sbb
push
xchg
sbb
repnz
in
or
cs
add
jmp
faddp
add
sub
(bad)
(bad)
push
mul
sub
je
mov
mov
dec
mov
push
or
pop
sbb
mov
adc
push
xor
push
dec
mov
mov
pusha
out
jmp
mov
jo
pop
pop
clc
cmp
jp
call
icebp
jnp
retf
xchg
sub
lods
adc
or
loope
add
int3
cmp
push
in
and
pop
mov
test
add
push
fnstsw
and
shl
lods
or
mov
leave
mov
or
add
jle
sbb
xchg
ret
mov
mov
fwait
push
(bad)
sbb
adc
int
cmc
xor
push
cli
and
ret
or
test
pop
lea
and
or
xor
aas
pop
stos
pusha
cmp
test
sbb
xchg
mov
fisttp
rcl
push
mov
inc
nop
ins
int3
pop
pop
mov
jbe
popa
clc
xor
sbb
out
imul
jmp
retf
std
and
test
mov
ins
sub
addr16
lahf
pop
cld
aaa
daa
sti
stos
xchg
outs
mov
fisttp
les
xchg
push
std
push
in
push
dec
push
pusha
jge
push
dec
xor
lock
push
xchg
test
sahf
out
enter
adc
xchg
popf
cmp
pop
inc
or
pop
mov
xchg
hlt
mov
imul
jmp
dec
dec
out
ds
call
popf
cmp
xchg
in
cwde
scas
lea
xor
or
ret
adc
call
xor
aaa
push
ret
push
jl
(bad)
rcr
jp
or
sub
push
ror
cdq
mov
sub
scas
adc
stc
dec
push
jnp
or
xor
jbe
test
xor
or
(bad)
leave
leave
mov
push
jb
pop
sbb
cmc
mov
into
cmp
clc
sbb
mov
das
pop
mov
int
mov
jnp
ins
call
fld
adc
gs
call
dec
pusha
add
inc
xor
in
cmp
adc
pop
dec
pop
push
xor
jg
xchg
daa
lahf
test
or
sti
ins
add
popf
pop
fidiv
outs
adc
sub
enter
iret
cdq
shl
xor
lahf
sahf
cwde
fstp
xchg
in
clc
jl
mov
mov
xor
and
and
xchg
out
or
adc
push
movs
pop
das
push
cmp
mov
xchg
mov
mov
push
test
call
mov
out
rcl
test
out
mov
sbb
push
arpl
adc
sub
dec
test
repnz
mov
je
stc
xor
shl
xor
push
jp
popa
or
cdq
cmps
jle
mov
rcl
bswap
push
inc
push
movs
jmp
sub
iret
xor
aas
leave
test
cmps
mov
aaa
add
repz
pop
cmp
jmp
sar
mov
retf
bound
jle
sbb
rcl
mov
imul
jns
mov
push
cmps
jo
ds
popf
adc
sub
jg
push
and
fistp
repnz
fisubr
xchg
or
pop
push
add
mul
sbb
and
popf
dec
stos
xor
ds
cdq
dec
inc
dec
pop
sub
inc
(bad)
push
scas
popa
jmp
mov
mov
push
nop
dec
rol
xor
in
pop
xchg
pop
jnp
adc
push
mov
add
loop
xchg
mov
loope
sar
ss
jb
inc
mov
sub
inc
push
nop
inc
aad
repnz
jo
xor
out
mov
or
inc
ins
hlt
out
rol
push
mov
clc
pushf
jmp
movs
xchg
mov
mov
adc
popf
call
ret
add
sub
fiadd
adc
mov
jmp
cmp
or
mov
ja
dec
mov
hlt
loop
enter
inc
sbb
leave
add
ret
or
inc
lods
mov
jecxz
or
sub
fld
bound
dec
fucomp
push
gs
das
es
dec
xchg
(bad)
jne
sub
mov
mov
aas
pop
mov
repz
pop
xchg
aas
jno
mov
inc
lds
adc
aas
jo
cdq
dec
mov
jecxz
pop
mov
pop
mov
dec
arpl
and
inc
fdiv
fcom
js
lds
mov
or
cmp
rcl
adc
push
imul
jg
imul
rcr
dec
dec
cmp
mov
icebp
xchg
out
push
aad
or
add
push
lock
or
sub
mov
sub
sub
mov
stos
aam
(bad)
fadd
push
adc
sbb
sbb
enter
push
clc
cmp
and
adc
fsubr
pop
mov
lea
fs
adc
cmc
cmp
sbb
mov
add
cli
push
stos
aam
push
adc
call
inc
xchg
mov
lods
mov
leave
std
cmp
repz
dec
fnsave
fidiv
stos
jnp
into
(bad)
(bad)
mul
and
pop
mov
push
mov
cdq
jle
sahf
mov
fwait
js
in
cmc
pop
aaa
sti
cmc
jno
ret
mov
movs
or
fwait
leave
sti
pop
outs
xchg
retf
pop
xchg
sbb
add
arpl
inc
sbb
xor
sbb
out
xor
dec
push
lea
and
and
dec
inc
mov
std
test
sti
std
mov
imul
(bad)
sub
mov
push
xor
sbb
mov
jnp
mov
and
xchg
inc
jb
cld
loopne
fwait
sub
xor
or
jmp
jle
jo
push
dec
enter
sub
retf
prefetchnta
or
ins
fwait
js
std
sbb
sub
pop
and
fdivrp
(bad)
out
push
mov
and
jle
ins
pop
mov
es
push
retf
or
repnz
push
sub
out
push
rcr
adc
aad
pop
aaa
fadd
fisttp
jmp
and
add
xor
sbb
mov
dec
int3
xor
test
jne
adc
adc
lea
xchg
add
jecxz
clc
sbb
sbb
xlat
je
sbb
mov
pop
xor
clc
mov
sahf
xor
mov
adc
inc
xor
shl
xchg
mov
pop
aad
cmp
lea
jmp
add
pop
and
sub
shl
xchg
out
or
outs
and
stc
or
xchg
xchg
sub
jb
sbb
fisttp
xor
xchg
movs
jno
xchg
fmul
repz
push
push
dec
shl
inc
movzx
clc
adc
bound
aad
push
cmp
fidiv
mov
pop
test
mov
dec
aam
imul
pop
cmp
mov
rcl
mov
out
mov
sub
jae
mov
adc
push
repnz
adc
and
adc
fcom
sub
mov
mov
(bad)
into
clc
int3
and
mov
mov
test
and
jmp
inc
jecxz
jp
xor
pop
push
cs
push
ret
inc
dec
(bad)
repz
add
shl
hlt
in
add
daa
sub
mov
fs
mov
aad
mov
or
adc
movs
or
push
pop
icebp
jbe
pop
fld
sub
xchg
push
out
mov
iret
icebp
xchg
das
mov
lahf
push
push
mov
mov
jle
es
ins
mov
movs
push
mov
mov
mov
mov
neg
mov
std
(bad)
data16
stc
(bad)
jl
cmp
pop
push
pop
pop
sbb
inc
adc
push
mov
imul
jl
scas
frstor
loop
sti
bound
pop
fstp
jns
cmps
jo
or
jge
pushf
push
mov
push
jmp
cli
cmp
out
adc
aam
inc
jbe
(bad)
mov
(bad)
les
mov
xchg
mov
inc
inc
icebp
jmp
and
ds
in
add
sti
xor
scas
ret
mov
xchg
cmp
dec
push
and
mov
sti
and
and
mov
(bad)
mov
loopne
into
jg
stos
xchg
lahf
fdivr
pop
call
adc
pushf
stos
mov
or
in
add
xor
push
push
pop
js
js
jg
test
jle
jnp
fs
mov
inc
lds
and
data16
push
dec
ficom
adc
js
sahf
movs
mov
(bad)
dec
in
cmps
lods
stos
xchg
jnp
cmp
fsubr
mov
fild
push
jp
call
sub
addr16
pop
xchg
jae
loop
repz
dec
jmp
xor
adc
xlat
and
in
xchg
or
inc
movs
fild
cmps
pop
inc
rcr
iret
gs
jo
imul
xor
mov
rol
xchg
scas
or
ror
mov
jns
fsubr
ret
lahf
and
mul
cmp
push
frndint
es
xor
lock
ins
aas
js
adc
mov
inc
push
or
out
test
xor
rcr
push
loope
cli
das
lods
and
lods
daa
or
aas
xor
xchg
loopne
(bad)
xor
stc
outs
mov
pushf
ins
mov
lds
sbb
xchg
aam
or
add
cmp
test
push
xchg
cmc
or
dec
add
shl
call
pop
jle
pushf
cmp
pushf
js
lea
jge
mov
test
leave
jbe
cmp
add
sbb
and
mov
dec
loope
hlt
dec
pop
jbe
sub
xor
cdq
inc
push
jne
push
jno
jl
or
cmp
jg
repz
repz
ret
in
push
out
mov
jne
ret
stc
popf
nop
add
rcl
mov
xchg
mov
(bad)
loop
lock
fwait
sub
test
movs
sub
outs
jae
cmps
and
sub
xor
xor
cdq
push
ja
mov
inc
in
fsub
test
fimul
aad
mov
mov
mov
sbb
retf
inc
sub
xor
test
jmp
pop
adc
in
jmp
mov
xchg
inc
jg
and
mov
push
out
shl
xor
xchg
mov
mov
cmc
mov
add
imul
jg
sub
popa
outs
cld
pop
pop
mov
out
adc
cld
movs
push
cli
push
mov
cmp
(bad)
arpl
loopne
pop
daa
test
push
inc
sbb
retf
in
stc
stc
push
stos
fdiv
lods
adc
popf
sti
jae
and
stos
inc
and
loop
vcvtps2dq
xor
sahf
in
in
fidiv
aaa
div
xchg
pop
cmp
cdq
or
loopne
push
add
pop
mov
stos
push
fs
pop
dec
icebp
(bad)
fdiv
mov
fisttp
loope
retf
fisttp
iret
fistp
cmc
ss
push
mov
cmc
sub
out
sub
test
adc
mov
add
add
movs
lock
xchg
jb
dec
(bad)
xchg
stos
test
pushf
pop
dec
jl
xchg
push
jmp
inc
jle
mov
inc
pop
cld
int3
xchg
push
dec
or
mov
dec
dec
cmp
into
mov
fdivr
dec
into
lock
fidivr
out
pop
sub
hlt
sub
ret
les
xchg
stos
xor
lods
sar
lea
and
adc
ja
cmp
push
jb
cli
cmps
xchg
cs
stos
or
add
pop
adc
rcr
cwde
(bad)
dec
xor
cmc
jecxz
lea
dec
(bad)
and
stos
dec
mov
sbb
out
cmps
ss
(bad)
(bad)
ins
mov
imul
xchg
dec
bound
fldcw
lahf
movs
cmps
xor
inc
adc
mov
pop
or
shl
hlt
in
or
xor
mov
cli
je
pusha
mov
add
xor
adc
and
jl
xor
sub
xor
aad
cdq
fnstsw
repz
cdq
fs
idiv
push
xchg
dec
ins
mov
into
xlat
add
loop
ret
add
es
call
daa
ds
adc
mov
popa
jbe
iret
push
movs
adc
or
cmp
repz
push
pop
je
mov
je
lock
sub
add
mov
add
xchg
aas
je
add
push
test
dec
fist
mov
jae
test
push
iret
adc
mov
inc
hlt
jno
or
sub
in
pop
push
and
sbb
add
mov
cmps
lods
shl
jne
pop
add
lock
cmp
sbb
in
adc
jbe
mov
ret
jo
dec
xor
aad
cmps
push
pusha
xchg
rol
add
or
repnz
sahf
adc
hlt
mov
adc
jo
iret
cmc
sbb
xchg
adc
pop
enter
enter
lahf
cmp
sbb
mov
outs
leave
jno
push
sub
gs
adc
cli
fisub
mov
sub
mov
pop
ret
dec
ins
or
fwait
add
into
push
cmp
adc
test
add
adc
adc
add
ret
pop
loop
cwde
stos
mov
jmp
shl
test
cmp
std
push
inc
and
les
sub
or
sbb
pop
inc
movs
fwait
lods
xchg
and
ins
mov
(bad)
rcl
enter
push
data16
sbb
iret
(bad)
xchg
jmp
outs
retf
loop
aas
ret
jge
cmp
pop
or
push
es
aad
inc
push
adc
cmp
jmp
hlt
dec
sti
iret
and
ins
in
cmp
mov
into
adc
pop
or
clc
iret
lock
or
mov
dec
loope
cmps
jle
mov
mov
(bad)
cmc
inc
iret
ja
mov
sub
sbb
scas
fs
push
mov
dec
pop
mov
call
push
xor
sbb
mov
dec
push
dec
add
mov
imul
or
jne
sub
jge
cmp
repz
mov
lock
(bad)
int
in
(bad)
jno
and
pop
jbe
adc
sbb
inc
sbb
fisubr
leave
dec
pop
repnz
sbb
outs
dec
add
cmp
push
mov
pop
inc
pop
mov
jne
arpl
je
xchg
outs
outs
scas
in
sub
sub
in
sahf
and
test
push
test
fstp
ins
lods
call
pop
fld
movs
jecxz
loope
aad
retf
pop
jg
sbb
popa
rep
push
mov
repnz
in
int
push
add
outs
out
outs
pop
aas
xchg
jne
push
add
idiv
retf
jmp
rol
aas
repz
pop
ret
jb
jne
es
lods
out
push
lods
out
stc
fidiv
cs
and
add
movs
fwait
retf
ins
xor
imul
and
xchg
out
or
sbb
cmp
mov
push
mov
aaa
stos
pop
xor
mov
adc
jmp
mov
cli
outs
cmp
lds
add
js
or
push
adc
movs
fwait
into
push
inc
and
imul
push
cmp
in
(bad)
mov
outs
mov
sub
pop
adc
gs
mov
xchg
mov
inc
(bad)
inc
(bad)
int3
sar
jae
call
mov
out
inc
hlt
mov
push
mov
mov
stc
jle
xchg
fsub
mov
ins
or
cmc
mov
or
mov
sub
imul
push
or
cdq
pop
iret
pop
push
(bad)
xchg
inc
shl
adc
rcr
xchg
mov
dec
xor
scas
mov
push
jl
sahf
mov
sbb
sbb
std
xchg
adc
imul
lahf
xlat
sub
jne
ror
test
ds
les
mov
outs
in
push
push
fidiv
push
sbb
aam
mov
mov
cmps
sub
or
fld
push
call
sbb
xor
outs
jmp
mov
scas
jmp
je
into
pop
xlat
sbb
push
retf
pop
add
push
(bad)
push
lock
repz
adc
fisttp
bnd
push
mov
jnp
cwde
mov
addr16
jmp
dec
pop
pusha
imul
imul
cmps
cld
sbb
add
fisttp
xor
mov
sbb
jns
adc
dec
movs
aam
mov
cs
mov
std
push
adc
gs
dec
movs
fcos
enter
es
addr16
push
inc
mov
pop
cmp
dec
outs
lahf
push
aad
rcr
rcr
daa
pushf
xchg
jg
mov
pushf
push
xor
shl
push
push
jo
and
lock
retf
xor
xchg
dec
js
sub
adc
aam
xor
js
(bad)
inc
stos
jecxz
inc
fisub
dec
pop
outs
xor
bnd
inc
add
mov
jge
test
ja
and
mov
xchg
call
cmp
retf
cmp
outs
out
dec
mov
xor
js
icebp
movs
sub
movs
in
pop
test
inc
shr
adc
(bad)
data16
and
sar
push
aaa
and
xor
mov
and
mov
dec
sub
push
stos
xor
inc
(bad)
inc
icebp
xlat
fldcw
push
push
in
int
add
mov
mov
stos
mov
inc
out
aas
je
adc
sbb
data16
iret
in
pop
ja
outs
cmps
jbe
xchg
shr
mov
dec
mov
or
(bad)
stos
sbb
jmp
stos
out
ds
inc
es
push
imul
lods
push
jne
mov
push
inc
add
pop
out
xor
test
(bad)
or
int3
aas
rep
int
call
cmps
ret
les
sbb
leave
mov
stos
and
add
pop
xor
repz
sub
je
addr16
lods
pop
mov
movs
into
fstp
or
pop
je
push
pop
(bad)
jp
test
jecxz
sti
sub
cmp
ja
dec
ror
jbe
and
(bad)
div
inc
and
inc
not
mov
das
mov
int3
movs
sbb
jge
xor
mov
lds
push
loopne
sub
outs
fsub
daa
bound
ja
xchg
div
data16
dec
out
pop
inc
sbb
pop
inc
ret
ror
mov
rol
leave
add
fld
dec
add
ffreep
push
cmp
out
sbb
mov
or
sub
dec
(bad)
cmps
sar
mov
mov
sub
shl
xor
stc
cmp
aaa
or
add
pop
lods
in
add
add
inc
cmps
lock
ins
cmc
mov
fist
mov
loope
(bad)
lahf
or
xchg
dec
outs
sub
and
(bad)
jo
and
js
(bad)
xchg
(bad)
jbe
pop
dec
pop
std
jmp
adc
sar
retf
add
lods
push
or
mov
movs
xchg
or
inc
xor
or
mov
(bad)
push
sti
push
fsub
cwde
cwde
arpl
in
je
fisttp
das
and
inc
repz
je
retf
dec
sub
scas
mov
push
ja
pop
mov
push
push
out
(bad)
jge
sub
jmp
inc
push
dec
sub
add
stos
mov
and
sub
mov
xchg
mov
jmp
(bad)
jmp
out
push
add
loop
inc
jg
stc
movs
xlat
mov
jge
fsub
(bad)
icebp
xor
leave
adc
imul
cmp
pop
mov
add
aam
mov
xor
pop
cmp
push
stc
mov
or
adc
popf
adc
je
mov
jle
loopne
adc
test
sbb
push
cmp
(bad)
lds
enter
push
sub
or
in
xchg
mov
cmp
inc
mov
fcmovnb
jle
or
ss
or
retf
sub
xchg
jmp
push
adc
push
icebp
sub
int
mov
cmp
mov
(bad)
shl
push
sbb
mov
sbb
in
jb
cmp
std
xor
inc
mov
mov
mov
sti
or
jge
push
int3
(bad)
dec
inc
xor
imul
arpl
mov
jg
lods
ss
cli
cmp
or
test
push
adc
sub
add
push
cmc
movlps
cmp
sbb
xchg
ins
or
fst
jl
cmp
cmp
jae
mov
scas
ret
clc
push
aas
xchg
mov
inc
or
aad
(bad)
ja
shr
repz
addr16
inc
test
retf
aas
xor
aaa
or
adc
call
add
movs
ins
mov
push
push
daa
jmp
movs
jns
mov
pop
lfs
cmp
mov
xchg
aad
push
xlat
or
lods
daa
adc
mov
add
cmp
jl
ror
xchg
bound
push
std
jge
jns
inc
in
ds
stc
shr
scas
rcr
dec
xchg
loope
enter
js
push
cmp
ins
ja
cdq
jo
les
inc
sub
dec
xchg
mov
jge
lahf
xchg
clc
mov
out
rcl
stc
jns
rol
dec
push
ud0
cmps
iret
mov
cli
xchg
stc
bound
xchg
cmp
fs
fwait
das
in
stc
xchg
mov
add
cmp
push
int
lahf
jb
fwait
test
cdq
cwde
and
jns
lahf
jns
xchg
aaa
out
push
dec
aad
int
fimul
sbb
mov
fld
ret
shr
sbb
movs
ja
and
loop
sbb
bound
sahf
sbb
ficom
xchg
mov
fbld
call
jo
jmp
add
adc
mov
add
test
loopne
push
mov
or
das
ror
push
aam
cmp
sbb
aaa
fcomip
call
adc
adc
cli
nop
add
(bad)
push
dec
icebp
outs
stc
scas
adc
jns
outs
and
mov
repnz
sub
inc
(bad)
clc
pop
repz
push
aas
xor
outs
inc
(bad)
in
pop
adc
fnstcw
mov
std
jbe
mov
and
push
fisubr
pop
mov
mov
sar
and
sbb
dec
lock
adc
xchg
and
xchg
push
aaa
fisttp
and
and
ins
inc
imul
fsub
clc
add
and
cli
sbb
out
loope
pop
dec
xlat
pop
in
push
pop
push
pop
jb
fsubr
daa
pop
and
push
jnp
pop
add
scas
and
mov
cmp
in
cmc
xchg
loop
test
cli
retf
push
bound
jns
loop
es
inc
add
popf
sar
push
dec
sub
push
das
xchg
(bad)
or
fild
mov
push
push
test
mov
das
mov
sbb
mov
jo
dec
div
mov
ss
jl
xlat
movs
pop
add
mov
shl
xchg
pop
xchg
daa
cmps
ja
dec
imul
dec
imul
adc
mov
sti
and
call
add
mov
jg
mov
mov
shl
and
cmc
jb
adc
and
jle
inc
sub
fnstenv
push
(bad)
into
mov
push
dec
mov
jp
jl
jb
and
movzx
inc
mov
inc
inc
or
xor
adc
cmp
test
dec
xor
jns
pop
scas
(bad)
imul
mov
repz
inc
stos
loope
es
not
loopne
sub
cdq
mov
jmp
(bad)
test
pop
mov
mov
jo
data16
out
sbb
push
sbb
test
pop
int
loope
push
pop
loopne
test
sbb
adc
xchg
xor
cld
das
and
loope
sti
add
in
jge
rcl
or
cmp
sbb
adc
push
jae
dec
int3
(bad)
or
ss
sub
pop
(bad)
int3
shl
sbb
jnp
push
sub
xchg
jns
ins
ss
loope
repnz
aas
jmp
cmc
xchg
(bad)
fwait
nop
jle
add
adc
xchg
lods
es
(bad)
in
outs
mov
aas
dec
sbb
mov
nop
mov
data16
dec
and
cdq
out
inc
cmps
test
or
xor
(bad)
sar
inc
outs
arpl
mov
popa
xchg
or
shl
or
xchg
push
out
mov
dec
js
inc
xor
(bad)
retf
in
in
or
in
pop
retf
push
add
ret
mov
pop
push
and
jb
nop
(bad)
shr
mov
and
fnstcw
jne
jge
mov
push
push
dec
loopne
div
pop
test
rcl
adc
pushf
jl
int3
mov
add
adc
jbe
enter
repz
mov
and
cs
not
inc
popa
cmp
push
sub
lahf
imul
sbb
push
sbb
clc
cmp
mov
inc
or
out
test
(bad)
icebp
sub
out
sbb
in
push
(bad)
push
mov
mov
mov
jmp
push
cwde
enter
fist
jg
sbb
add
inc
jae
pop
lahf
imul
xchg
adc
je
push
xor
jnp
aam
mov
ds
inc
jno
xor
mov
push
imul
add
and
test
pop
movs
add
ret
neg
arpl
jl
mov
add
sub
or
bound
sbb
addr16
mov
add
call
jno
pop
dec
mov
jge
cs
mov
xor
xchg
dec
outs
push
int3
mov
push
push
sti
jno
retf
daa
mov
sbb
cmc
jl
aas
mov
js
jmp
pop
mov
push
mov
aad
or
shr
add
mov
adc
pop
pop
xchg
movs
cwde
adc
clc
inc
mov
cmps
jns
retf
sub
jmp
imul
mov
push
jg
sub
pop
sbb
push
test
or
ins
sbb
nop
sbb
cld
mov
clc
adc
gs
sbb
pop
or
dec
(bad)
out
cmp
add
xchg
ds
inc
cli
mov
outs
out
jle
movs
in
aam
xor
cmc
xchg
xor
push
je
lds
add
fwait
std
add
cli
or
(bad)
(bad)
ds
stos
or
aas
neg
nop
test
dec
inc
adc
add
(bad)
popa
lea
ins
out
mov
inc
ins
(bad)
retf
test
out
int3
loope
lahf
arpl
push
dec
ss
nop
jae
jbe
add
arpl
stos
mov
lods
bextr
xor
dec
xor
xor
stc
outs
pop
and
fwait
or
and
mov
popf
ret
xchg
sbb
loopne
sbb
int3
aas
mov
(bad)
inc
push
mov
(bad)
fmul
jbe
sbb
or
dec
cmp
sbb
js
mov
aam
scas
and
arpl
xor
xor
fs
mov
aam
loop
xor
inc
mov
inc
mov
jg
inc
fadd
xor
shl
call
sbb
pop
xchg
inc
xchg
daa
aad
mov
jo
push
mov
popf
cdq
and
mov
dec
(bad)
push
dec
push
mov
xchg
xor
mov
arpl
jae
push
sbb
cmc
add
scas
leave
rol
adc
inc
mov
xor
add
xchg
inc
ror
repnz
push
pop
stos
xor
ins
sahf
push
xchg
(bad)
in
popf
mov
push
fwait
pop
xor
movs
stos
pusha
push
aam
in
in
hlt
outs
and
mov
adc
sahf
push
mov
xor
or
rol
add
inc
mov
(bad)
in
sub
test
imul
push
inc
cld
pop
test
in
push
xchg
jecxz
push
(bad)
dec
sbb
(bad)
cmp
inc
les
cld
jbe
xchg
(bad)
fsubr
pop
xchg
xor
aam
push
(bad)
mov
cmp
adc
mov
imul
lock
xor
cmp
push
dec
imul
sub
push
dec
pop
push
jne
mov
pop
push
(bad)
xor
xchg
mov
in
shr
jns
(bad)
aaa
out
sti
mov
xlat
xchg
xor
aam
mov
shl
dec
xor
xchg
xor
bound
enter
cmp
mov
ins
and
(bad)
sbb
cdq
or
mov
sub
sbb
pusha
imul
in
sti
das
push
mov
mov
push
push
xchg
xor
push
sbb
shl
xchg
push
aad
jmp
icebp
stos
mov
jecxz
ror
xchg
popa
mov
mov
jmp
push
pop
push
lahf
or
pusha
sar
jnp
ss
and
sbb
or
retf
imul
xchg
arpl
test
mov
inc
into
js
cmps
xchg
pop
push
call
sbb
pushf
jbe
test
and
dec
mov
lock
push
cmp
outs
loopne
movhps
dec
xchg
jge
gs
out
(bad)
in
inc
loop
fist
cli
add
push
retf
ins
or
sbb
push
pop
mov
fnstcw
xor
cmp
or
xchg
jmp
mov
inc
xchg
rcl
call
mov
je
sbb
sti
int3
add
jg
add
push
scas
add
pop
(bad)
pop
scas
mov
cli
repnz
cmp
sub
cdq
iret
or
push
and
jnp
pusha
push
icebp
out
idiv
or
ss
fs
pop
lar
loope
sbb
cmp
mov
and
adc
(bad)
out
add
add
repz
mov
push
in
(bad)
push
push
fs
xchg
xor
pop
test
ficomp
outs
ins
sub
(bad)
pop
in
rol
mov
ins
into
popa
idiv
mov
xchg
jle
sub
sbb
jl
xchg
cmps
cmp
imul
dec
loopne
shl
inc
out
call
push
or
fistp
in
cld
daa
mov
mov
call
imul
iret
sub
out
mov
xor
jbe
ins
xchg
arpl
adc
sub
cmps
mov
add
(bad)
int3
inc
popa
add
jg
popa
jnp
pop
sub
xchg
cs
icebp
adc
call
mov
add
jmp
inc
dec
inc
out
sub
lahf
cmp
jl
pop
cmp
(bad)
push
inc
fs
add
push
xor
dec
mov
jbe
xor
mov
push
fwait
push
mov
adc
or
fmul
mov
sbb
adc
xchg
pop
ja
jne
iret
stos
cmp
jle
enter
fwait
out
(bad)
fst
lods
loope
retf
fcmovbe
mov
xchg
cmp
in
xor
xor
xlat
sahf
cmp
mov
fwait
adc
add
cmp
mov
or
cs
mov
test
mov
adc
cli
ja
rcr
imul
jmp
ins
loope
jno
mov
in
adc
inc
jae
inc
cmc
or
and
xor
push
adc
movs
and
leave
xchg
mov
inc
aad
fcomp
sbb
xchg
inc
sbb
sub
push
ins
(bad)
scas
xlat
pop
push
jo
nop
adc
int
sbb
jmp
or
xchg
adc
je
mov
stos
mov
icebp
aaa
repnz
ret
(bad)
jmp
popa
inc
mov
shr
add
mov
pop
add
add
adc
xchg
mov
jo
daa
push
ror
inc
test
sub
cwde
pop
cwde
xor
gs
fmul
pop
dec
cmp
es
retf
scas
fadd
mov
jge
mov
mov
ds
mov
out
mov
popa
ins
in
fistp
iret
add
adc
mov
gs
xchg
xchg
shl
retf
and
mov
imul
mov
cdq
or
out
push
mov
shl
add
or
dec
arpl
pop
icebp
cmp
loope
push
add
jecxz
(bad)
or
jl
shr
xchg
inc
xor
jecxz
xor
das
and
cmp
cmps
mov
mov
and
pop
cwde
loop
neg
ret
sub
in
push
stos
adc
das
mov
inc
dec
cmp
xor
push
in
lods
mov
(bad)
mov
lahf
call
mov
xor
imul
sbb
pop
arpl
fidiv
out
out
retf
sahf
adc
xchg
pop
push
sub
xchg
or
mov
sahf
shl
ret
fsubr
enter
fldenv
icebp
push
cs
fisttp
test
jbe
mov
out
jb
shl
int3
push
mov
add
pushf
or
je
test
sub
test
aam
nop
ja
mov
push
sbb
push
inc
sti
cmps
loope
jno
popa
dec
push
add
ret
lods
shr
xchg
jmp
or
jno
arpl
lahf
push
fimul
add
imul
jmp
loopne
mov
xor
aam
jle
(bad)
jns
xchg
jle
scas
and
ss
div
leave
mov
mov
repnz
mov
lods
popa
(bad)
into
mov
addr16
pop
sar
movq
mov
adc
repnz
sub
mov
and
ins
fmul
test
adc
jmp
das
push
push
lods
test
aad
jns
retf
stc
cmp
imul
ror
icebp
mov
cmp
xchg
xor
stos
into
sbb
sub
aad
jmp
pop
pushf
pop
sub
adc
sub
cdq
enter
xchg
jp
shr
pop
mov
ins
sbb
repz
fadd
jl
sbb
cmp
movs
ret
jb
mov
mov
cmps
out
lea
adc
or
iret
add
or
les
jb
pop
dec
adc
push
std
out
xor
or
dec
or
xor
out
stos
sub
scas
jnp
xchg
in
pop
pop
pop
pop
lahf
(bad)
out
cli
push
mov
push
sub
pusha
rcl
sti
mov
fcom
sar
cmp
jge
or
sub
fsubr
push
sbb
inc
das
or
call
push
mov
movs
out
sub
ret
repnz
mov
cwde
(bad)
mov
cdq
rcr
jb
bound
sub
imul
mov
adc
sbb
int
push
out
and
jmp
mov
adc
imul
inc
aam
nop
mov
cwde
jno
dec
xchg
cmp
ds
mov
ret
dec
scas
popa
outs
hlt
call
je
stos
inc
mov
sbb
jg
mov
test
sub
rcl
fucom
and
or
cmps
icebp
sub
inc
add
and
test
xchg
inc
xlat
pop
ins
movs
add
clc
cdq
popf
in
mov
fiadd
test
pop
add
push
jnp
movs
pop
cs
add
lock
add
push
pop
xchg
fstp
call
js
sub
js
out
jmp
push
mov
mov
lahf
pop
mov
fidiv
adc
xor
or
or
xchg
stc
or
add
sar
fist
xor
adc
add
or
dec
out
dec
clc
loope
outs
push
scas
retf
dec
jnp
fsubr
movs
xchg
shl
push
or
mov
mov
stos
cmp
scas
mov
fcomp
jno
or
mov
push
ins
push
sahf
lods
and
fnstenv
mov
inc
fdivr
inc
popf
fild
jmp
lea
lods
inc
mov
repnz
mov
fcom
shl
pop
fs
mov
retf
mov
mov
mov
adc
push
xchg
lds
mov
test
repnz
inc
test
aaa
shl
inc
jmp
xor
jle
mov
scas
dec
add
je
aas
into
cmps
adc
fdivrp
popa
sar
and
sub
test
adc
test
out
(bad)
or
push
pop
sbb
out
stos
inc
mov
cld
test
out
ins
sbb
xchg
stos
mov
inc
test
or
pop
cmp
ss
pop
adc
pop
mov
popa
(bad)
retf
call
mov
std
aam
scas
xor
sub
xor
in
or
in
jmp
adc
ror
es
pop
xor
mov
push
add
dec
fcmovnu
pop
stos
jle
test
bound
xor
mov
mov
movs
out
popa
lods
jp
(bad)
adc
dec
int
sub
pushf
push
movs
ins
jl
rcl
push
xchg
pop
pop
add
mov
or
add
lods
dec
xchg
push
lods
retf
pusha
pop
retf
xchg
mov
ja
stos
mov
imul
xchg
xchg
into
cli
fimul
xchg
daa
xor
or
fisubr
cmp
push
gs
mov
fcom
mov
add
mov
pop
bound
sub
leave
jg
inc
cld
cmp
call
jecxz
jg
sub
dec
out
cmp
add
fadd
gs
test
push
popa
int3
shl
test
adc
call
add
pop
push
mov
xor
jmp
aad
xor
mov
lahf
shl
cmp
xor
stc
gs
imul
mov
mov
and
mov
mov
lea
movs
sbb
push
jno
jae
mov
aaa
mov
popa
imul
mov
enter
xchg
cld
jmp
push
push
jecxz
jmp
xchg
xor
xchg
xor
inc
repnz
inc
inc
aas
outs
das
xor
arpl
pop
pop
mov
xor
lods
ret
popf
or
(bad)
(bad)
inc
pop
xor
arpl
in
je
outs
rol
addr16
push
iret
mov
mov
pop
shr
shl
(bad)
stc
dec
pop
add
fimul
adc
sub
adc
push
lahf
fs
int
test
dec
sbb
dec
jecxz
stos
mov
out
pop
dec
jge
(bad)
jp
int
xor
and
pop
adc
or
out
mov
pop
cmp
das
fst
adc
xor
pushf
sub
dec
inc
mov
dec
in
sub
call
mov
push
add
ret
cli
in
iret
in
repnz
and
jecxz
inc
(bad)
mov
and
mov
gs
or
pop
cmps
test
leave
idiv
repz
mov
mov
ficomp
sbb
pusha
pop
out
clc
imul
xchg
xor
movs
mov
sbb
push
sub
sahf
push
lods
repz
aaa
sbb
xchg
jbe
stos
mov
in
add
jmp
out
sar
pop
call
jns
jmp
pop
mov
cli
xchg
add
es
mov
lds
ins
mov
das
mov
inc
mov
inc
adc
idiv
ret
test
repnz
jno
sub
int
popa
in
jp
fld
rol
add
fimul
movs
jns
lahf
adc
int
jp
dec
test
mov
and
(bad)
mov
shl
sub
adc
mov
mov
mov
cwde
cmp
ret
outs
sti
in
iret
repnz
bnd
pop
push
add
mov
and
jg
xlat
xchg
out
xchg
inc
adc
test
aaa
pop
popa
fnsave
jmp
into
cmp
fisttp
adc
cdq
sbb
lock
jmp
inc
fild
mov
adc
mov
ins
loope
jge
movs
out
adc
push
(bad)
sti
(bad)
sbb
mov
rcl
jge
mov
fdiv
jle
data16
mov
fist
pop
rol
sbb
in
aaa
inc
pushf
sub
adc
pop
pop
cdq
ret
xor
icebp
xor
push
ss
(bad)
sar
out
add
or
repz
jg
xor
sahf
je
retf
fwait
ret
(bad)
call
and
xor
mov
fld
mov
pop
xor
or
lods
inc
jnp
xor
xchg
and
xchg
hlt
add
sbb
outs
xchg
mov
pop
retf
mov
or
add
or
push
sar
mov
adc
test
fadd
push
(bad)
scas
mov
inc
pop
xor
and
pop
(bad)
stos
icebp
es
sub
fnstcw
lahf
out
mov
ds
mov
not
xor
mov
or
(bad)
xor
mov
pop
(bad)
rcr
jne
and
int
push
(bad)
stos
repz
test
in
inc
loopne
(bad)
cld
mov
mov
pop
jl
cmps
cli
(bad)
popa
xor
push
adc
lds
sbb
adc
inc
iret
inc
in
dec
rol
mov
fstp
inc
arpl
mov
cmp
push
hlt
movs
ja
push
icebp
imul
ja
push
(bad)
cmp
scas
push
clc
enter
adc
repnz
dec
fld
and
push
call
mov
pop
fdiv
inc
dec
(bad)
adc
pop
and
adc
rol
adc
fs
push
mov
jae
adc
add
jge
adc
dec
sub
cmc
push
dec
fs
jns
sti
or
add
push
pop
jmp
mov
mul
pop
cli
mul
xor
in
and
(bad)
lock
and
lds
iret
xor
dec
pop
jmp
inc
das
mov
adc
je
push
(bad)
push
mov
dec
scas
pop
ficomp
adc
xor
or
sub
adc
fidivr
and
fdivp
scas
rcr
outs
std
sub
stos
repnz
loopne
fidiv
cmp
adc
xor
xor
out
fld
push
cmp
in
in
push
pop
(bad)
out
cmp
das
jae
ret
scas
mov
cmp
or
sub
(bad)
xchg
fmul
pop
sbb
test
and
inc
jne
js
or
test
enter
ret
(bad)
push
inc
push
mov
fwait
mov
jle
mov
jle
adc
xchg
cld
loopne
ins
retf
dec
cdq
repnz
sar
imul
cld
jmp
jne
xchg
pop
mov
mov
fistp
push
inc
imul
aas
xor
sahf
rcr
loop
sub
or
retf
jge
or
cmp
pusha
cmp
mov
sbb
in
jg
adc
test
stos
mov
mov
add
jmp
ret
sub
sub
and
xchg
adc
lahf
inc
dec
repz
cmp
xor
pop
jae
imul
jl
xchg
sub
cmp
sahf
mov
xor
sbb
jns
cmp
sti
or
dec
jno
arpl
mov
dec
out
jle
aaa
repnz
mov
in
gs
cli
and
jge
fidivr
mov
sbb
jmp
nop
jns
test
(bad)
add
jp
xlat
je
inc
mov
nop
shr
ss
rep
sub
dec
pushf
mov
mov
ja
test
shl
push
movq
sbb
mov
or
fxtract
jge
retf
mov
dec
jmp
loope
mov
lods
arpl
add
daa
pop
stc
sbb
push
adc
(bad)
daa
pop
xlat
frstor
dec
mov
mov
ret
outs
nop
ins
jo
fdivp
adc
loope
(bad)
dec
cmp
stos
cmp
mov
add
std
arpl
mov
not
push
mov
enter
cmp
mov
daa
dec
icebp
cmp
mov
or
mov
cmp
cmps
jmp
or
adc
jno
ja
mov
std
push
sbb
mov
or
jno
cmp
dec
jbe
adc
cs
rol
jl
sti
aas
mov
add
das
adc
les
jge
ficomp
and
xchg
adc
mov
jno
(bad)
mov
jg
and
fs
jmp
das
pop
icebp
aaa
mov
fadd
xchg
lahf
mov
xor
enter
jl
test
push
ins
adc
mov
pop
xchg
sbb
out
jb
scas
cmc
(bad)
jge
and
loop
and
jbe
xor
addr16
add
mov
out
jecxz
retf
push
lahf
xor
ins
sbb
gs
(bad)
and
retf
and
mov
daa
ss
mov
cmp
add
xchg
(bad)
push
inc
adc
out
not
mov
push
adc
cwde
out
inc
imul
sbb
ret
fldcw
xor
jle
sub
jge
push
ins
and
in
mov
inc
ret
sbb
jmp
ss
jne
pop
jno
aam
mov
xchg
xchg
(bad)
ss
frstor
int
mov
jo
pushf
outs
push
mov
gs
mov
dec
sub
(bad)
adc
test
jmp
inc
or
shl
stc
mov
fs
push
jg
mov
sbb
jns
out
mov
test
fild
xchg
dec
pop
mov
repz
fcomp
test
adc
fs
es
repnz
loopne
sub
adc
dec
cmp
sub
and
inc
and
jns
cld
jmp
jg
jne
jl
sbb
test
cli
sbb
sub
hlt
push
inc
mov
ja
sub
rdpmc
inc
leave
pop
mov
xlat
scas
pop
movs
hlt
xchg
test
stos
in
arpl
test
(bad)
out
mov
add
daa
cmps
js
mov
jmp
stos
cmp
movs
jle
pop
push
fild
cdq
out
je
sti
mov
jmp
and
dec
xor
in
enter
mov
mov
test
dec
xchg
pop
jmp
cmps
jecxz
add
iret
jp
mov
adc
mov
test
fidivr
inc
inc
retf
adc
mov
mov
jp
xor
outs
pop
jl
fucomi
xor
lahf
daa
(bad)
xchg
xchg
pop
sbb
stos
add
addr16
int3
retf
out
jo
out
inc
fnstenv
or
inc
sub
dec
popa
out
xchg
test
add
mov
inc
mov
mov
(bad)
mov
mov
adc
xlat
cmp
mov
jecxz
in
sti
cli
and
mov
sub
jb
sub
xchg
fisub
mov
inc
adc
shl
mov
inc
ficomp
xor
cdq
sbb
data16
cmps
push
jo
xor
sbb
cli
dec
dec
pushf
rcr
xchg
jo
sbb
and
jno
adc
pop
push
aas
jno
in
xchg
and
push
and
icebp
out
icebp
pushf
jnp
fiadd
aam
xor
(bad)
fcom
pop
outs
enter
adc
or
mov
or
lea
mov
iret
jle
push
fs
clc
adc
mov
js
cld
jle
mov
pop
popf
movs
push
mov
ja
out
into
cli
jl
jmp
cs
les
pop
pop
(bad)
ss
jo
cmps
sub
bnd
test
add
aam
pusha
clc
aam
jg
jno
push
ret
(bad)
jmp
jne
cmpps
mov
rcr
dec
leave
retf
fldenv
retf
push
les
jl
sub
push
rol
rcr
xor
cmps
jg
int3
mov
sar
fnsave
int3
sub
movs
cs
add
in
aaa
enter
pop
js
push
mov
push
mov
(bad)
push
call
jae
add
leave
xchg
push
or
inc
sti
or
stos
ficom
or
hlt
mov
jne
stos
sub
add
jmp
push
sbb
and
fild
sbb
scas
dec
adc
sbb
test
fadd
mov
leave
and
jle
pop
xor
cmp
popa
dec
cmc
push
ret
push
fs
push
in
test
mov
inc
iret
cli
loopne
xchg
ss
in
push
inc
bound
dec
and
dec
in
std
fst
xor
mov
pusha
(bad)
ins
xor
mov
out
loopne
cmp
fwait
imul
into
mov
jl
cmps
lds
das
pop
imul
jge
xchg
rol
xor
push
std
push
push
or
(bad)
fldcw
outs
mov
out
dec
xchg
jno
inc
cmp
faddp
cdq
push
xlat
dec
inc
in
adc
std
mov
cdq
or
sub
push
xchg
test
dec
xor
movs
mov
mov
(bad)
inc
xlat
or
adc
or
sub
outs
jnp
out
cmp
sub
dec
jbe
xchg
repz
cld
ja
test
mov
movs
out
jle
fs
mov
push
ror
(bad)
jns
cmps
in
push
sub
push
ficomp
sti
adc
push
jg
xchg
adc
inc
retf
sub
je
or
bndstx
pop
pop
cmp
andnps
dec
rcr
dec
popa
ins
pop
outs
mov
arpl
push
div
shr
adc
or
std
pop
nop
mov
stos
add
cmps
ins
das
sub
pushf
les
(bad)
pcmpeqd
sti
mov
add
jmp
push
push
(bad)
fwait
jg
sbb
imul
cli
fpatan
movs
iret
dec
movs
pop
fidiv
clc
push
ret
cwde
and
(bad)
sub
leave
test
and
repnz
pushf
test
adc
rcr
addr16
enter
xchg
cmp
push
out
push
or
push
lods
call
test
or
fldcw
ins
or
and
out
(bad)
sbb
mov
scas
add
cmp
xor
out
cmp
int
not
and
xor
scas
fld
inc
cs
add
inc
jge
push
loop
fucom
mov
or
fs
dec
cmp
test
loope
loopne
pop
popa
sbb
xchg
xchg
add
dec
js
add
inc
jle
imul
mov
ja
aam
cmp
mov
inc
add
mov
loope
(bad)
clc
call
cmp
sbb
in
mov
sbb
mov
push
test
mov
mov
mov
or
sti
pop
js
adc
xchg
pop
xor
ffree
adc
mov
in
sbb
adc
cli
jp
adc
and
jb
push
fidiv
retf
scas
sar
test
adc
dec
jge
pxor
out
(bad)
jmp
retf
cmp
sahf
in
out
mov
shl
adc
jge
das
fcom
or
and
adc
jmp
inc
mov
push
ss
add
inc
ret
adc
mov
adc
mov
pop
ss
movs
push
out
add
mov
sahf
fild
aam
dec
mov
jno
scas
xchg
repnz
mul
jl
cmp
mov
gs
mov
jmp
adc
js
dec
add
xchg
add
and
jmp
repnz
mov
push
push
push
scas
inc
fild
ins
sub
xchg
fnstsw
jo
or
pop
sbb
sub
xor
test
lods
imul
jne
inc
sbb
repnz
xor
mov
ja
sbb
mov
stos
cmp
push
pop
fnsave
ins
mov
add
mov
test
mov
stos
paddd
fld
fidiv
xor
clc
sub
sub
mov
or
jb
ret
xor
movs
(bad)
(bad)
pop
mov
dec
mov
push
jb
xchg
dec
mov
adc
jns
scas
pop
ja
retf
cmps
icebp
jno
push
(bad)
or
lds
(bad)
push
mov
mov
dec
inc
cs
fsub
push
lods
xchg
jge
pop
addr16
pop
stos
lock
pop
in
mov
push
jae
(bad)
lahf
adc
cdq
test
mov
aad
xlat
sub
inc
jae
or
jmp
pop
add
loopne
cmp
pop
shl
repz
and
or
dec
mov
neg
ins
xchg
iret
(bad)
lock
(bad)
push
scas
stos
adc
mov
pop
cmp
int
sub
inc
cs
je
std
pop
dec
pop
xchg
not
adc
sbb
test
in
sub
mov
cmps
lods
push
jmp
imul
js
add
pop
aaa
and
jmp
test
push
add
fnstsw
push
jo
pop
in
mov
fwait
adc
mov
lock
fmul
or
shl
arpl
stc
out
or
pop
lds
jbe
xor
leave
push
ss
or
xchg
sub
push
adc
(bad)
aaa
pop
push
mov
dec
dec
out
cmp
out
outs
fadd
and
icebp
pushf
imul
int
xchg
sbb
scas
mov
and
mov
shl
sbb
mov
and
(bad)
dec
call
and
push
sbb
cmc
mov
add
jmp
(bad)
lods
jno
adc
mov
mov
mov
fs
push
mov
mov
idiv
fwait
(bad)
jbe
cdq
shr
ret
lea
in
add
inc
push
ficom
inc
xchg
cmp
repz
fisubr
push
push
xchg
hlt
xchg
hlt
out
and
xchg
mov
and
and
and
test
stos
clc
jo
adc
stc
push
ins
jp
mov
mov
iret
sub
scas
call
adc
mov
jnp
sbb
inc
mov
push
mov
pushf
or
aad
mov
sub
cwde
ret
test
js
fs
sub
aaa
repz
sysexit
cmp
aas
xor
jmp
add
sub
std
pop
out
add
shl
mov
cmp
mov
addr16
sahf
jne
mov
ins
(bad)
sub
sbb
(bad)
mov
mov
test
out
inc
adc
xchg
ja
out
fild
test
in
test
mov
adc
ds
mov
repnz
pop
cmps
jnp
les
in
int3
mov
and
and
inc
lahf
xchg
fimul
xor
ss
loope
into
jbe
int
clc
jecxz
inc
xchg
mov
jg
and
cmp
loope
mov
dec
clc
into
push
rcr
sbb
jo
sbb
not
jns
(bad)
cmp
ror
xchg
push
or
cmp
stos
and
xchg
cmp
mov
jle
sub
cmp
bound
mov
mov
xor
lock
mov
adc
xchg
mov
add
leave
or
inc
imul
cli
ret
fsub
lea
icebp
retf
in
xor
xor
mov
push
jle
int3
or
cmp
cmp
movs
shl
fisubr
std
push
xchg
sbb
adc
dec
popa
jecxz
call
xchg
stos
imul
imul
sub
adc
push
xor
movs
(bad)
pop
add
jb
jnp
mov
cmp
and
les
mov
(bad)
call
fidivr
sub
pop
mov
or
pop
or
out
ror
adc
aad
push
add
jbe
sub
fidiv
jle
xor
add
fndisi(8087
out
in
xor
int
add
push
(bad)
loopne
test
mov
cmp
stos
and
int3
add
mov
leave
push
das
ss
jg
mov
cmc
jecxz
popf
sub
mov
jns
jg
dec
aam
pop
push
test
mov
push
add
mov
xlat
scas
xchg
push
inc
pop
xor
fcmovnu
add
mov
aad
outs
pop
pop
addr16
dec
aam
mov
inc
sub
xchg
jnp
imul
lahf
icebp
mov
jnp
sbb
or
sbb
jmp
data16
sub
pop
pop
or
mov
in
adc
(bad)
lds
mov
faddp
rcl
xor
sbb
sbb
shl
cmp
jl
jae
push
mov
icebp
dec
jl
xor
pusha
jb
imul
call
sub
xor
std
jle
(bad)
fisubr
xor
add
popa
adc
adc
pop
pop
int
xchg
shl
stos
or
bound
sahf
push
scas
call
mov
(bad)
shl
inc
out
popa
jmp
sub
dec
pop
jg
or
cmps
jno
jb
std
dec
pop
pop
or
into
ret
addr16
cmp
ins
sbb
mov
cmp
shl
sub
mov
mov
loopne
push
push
xchg
test
dec
out
or
sub
or
add
dec
repnz
loopne
out
mov
bound
or
clc
mov
out
popf
fwait
jno
jb
cmp
ins
sti
and
fwait
pop
outs
cmp
cmps
mov
dec
xchg
cmp
fs
inc
sub
into
dec
je
pop
push
push
(bad)
xlat
xlat
adc
add
push
aam
xlat
add
sbb
push
(bad)
sbb
fwait
lea
add
fs
jnp
fidivr
sub
xchg
call
out
fsub
leave
jmp
push
cmps
dec
jmp
mov
test
mov
mov
test
les
lea
mov
bound
inc
jmp
xchg
dec
(bad)
arpl
jl
iret
shl
inc
add
pop
mov
fisubr
cmp
xor
push
jecxz
loope
in
(bad)
sti
retf
fcomp
jne
popf
enter
(bad)
in
inc
add
inc
gs
repnz
inc
sub
cmp
sti
lds
and
cmp
or
popf
dec
in
mov
pushf
xor
clc
sbb
sbb
sbb
dec
test
dec
jns
sub
fistp
push
jbe
retf
aaa
es
hlt
fiadd
hlt
(bad)
fild
mov
jnp
xor
daa
xchg
jle
add
cmp
jne
dec
xchg
fimul
or
in
dec
jl
arpl
aas
jbe
add
std
js
add
ret
lock
pop
mov
stc
add
mov
fidivr
js
loope
jp
int
das
xchg
mov
mov
xor
xlat
sub
out
popa
aas
sub
pusha
rcl
pop
fisubr
nop
xchg
xchg
bnd
jecxz
cmps
dec
aas
test
jnp
movs
xchg
add
push
(bad)
push
inc
and
push
dec
clc
int
inc
inc
fwait
jmp
mov
mov
imul
and
pop
cmp
mov
cdq
mov
add
mov
sbb
retf
push
cmp
ins
xor
stos
mov
sub
jo
sub
mov
call
ror
pusha
pushf
inc
dec
mov
mov
rcl
xor
in
dec
fild
into
fcom
jae
sbb
mov
xchg
bound
aas
xchg
scas
retf
mov
mov
rcl
loope
ds
ins
cdq
loopne
cwde
dec
popa
and
sbb
cmp
fs
jl
mov
rol
fisttp
xchg
int3
(bad)
cs
add
rdmsr
adc
sbb
aam
imul
dec
mov
aas
xor
mov
fisubr
jle
add
stc
mov
stos
push
and
fadd
ins
mov
cwde
xor
call
pop
jo
lods
and
scas
inc
jecxz
clc
jecxz
lds
push
cmp
dec
dec
pop
dec
call
outs
dec
xchg
and
or
cmps
push
cdq
outs
inc
jnp
jns
xchg
inc
outs
mov
(bad)
jmp
cmps
neg
je
xchg
std
ins
inc
inc
out
pusha
add
and
inc
mov
call
cdq
pop
add
retf
mov
jge
shl
in
adc
out
lock
xor
add
mov
ins
lds
in
or
dec
sbb
dec
jmp
mov
or
repz
pop
jbe
or
jnp
lahf
xchg
sbb
inc
sbb
retf
fisub
add
add
jno
call
outs
das
push
cs
lods
mov
inc
test
retf
out
std
daa
and
xchg
pop
pop
ficom
mov
enter
or
outs
inc
sti
mov
and
mov
jns
dec
cmc
xchg
xchg
add
add
add
shl
cmps
clc
loope
loop
clc
dec
jle
nop
retf
test
clc
pop
and
scas
sub
jecxz
sub
test
push
jae
cli
in
ds
inc
jecxz
mov
mov
dec
mov
jno
xor
sub
movs
mov
(bad)
xor
xor
push
mov
add
dec
jae
adc
inc
lea
test
push
aas
jmp
gs
push
xchg
rcr
scas
dec
scas
stos
call
out
pop
dec
outs
not
movs
push
ss
xchg
dec
jmp
pop
adc
push
mov
call
ret
out
dec
push
retf
outs
add
inc
loope
inc
and
add
push
xchg
pushf
push
mov
scas
aas
iret
bound
movs
sbb
out
jg
dec
movs
jno
sar
pop
sub
add
or
aas
pushf
inc
ja
fsubr
inc
mov
add
jo
movs
out
mov
scas
loop
push
adc
dec
es
and
mov
loop
push
pop
xor
into
sbb
push
lods
xchg
movs
leave
retf
test
fcomip
scas
icebp
mov
enter
scas
mov
mov
retf
out
jmp
jo
idiv
sub
sub
sub
shr
bound
push
rcl
arpl
pop
cmp
lds
daa
jno
into
jmp
inc
jnp
mov
(bad)
int
dec
shr
xchg
(bad)
jmp
imul
jno
outs
imul
xchg
pusha
push
data16
scas
das
cmp
aas
dec
call
dec
iret
in
adc
xchg
jmp
icebp
mov
xchg
mov
in
fistp
push
iret
xchg
loope
les
bound
cmp
jp
mov
lea
mov
dec
daa
xor
clc
arpl
add
inc
mov
scas
xor
popf
loopne
mov
add
fwait
dec
in
xchg
and
or
add
enter
ret
sub
loope
push
(bad)
test
fcomp
jp
cdq
sub
push
fisubr
adc
dec
cmc
lds
adc
repz
inc
js
jbe
not
mov
loop
xlat
push
dec
xor
scas
sbb
enter
int
stos
add
add
cmps
pop
mov
daa
mov
and
inc
push
pop
pop
sub
idiv
sub
and
cwde
mov
mov
sub
add
shl
retf
pop
pop
and
xchg
or
mov
jae
inc
imul
adc
ins
sub
jp
mov
iret
movs
xchg
div
sbb
mov
dec
or
fstp
jecxz
cmc
cmp
leave
mov
cmp
enter
cwde
fadd
aad
inc
mov
int
push
into
ja
enter
jb
mov
std
jl
mov
outs
cmps
enter
fnsave
shl
rol
fcomp
(bad)
stos
mov
mov
vmulss
outs
mov
sbb
fcomi
lods
mov
mov
pop
std
outs
mov
xchg
test
cmp
add
lahf
lock
push
adc
adc
gs
and
inc
and
fld
(bad)
xor
out
adc
jo
inc
fstp
and
(bad)
push
xor
jle
fwait
int3
xchg
dec
in
fdivr
(bad)
sub
pop
xchg
jmp
lods
jl
and
xor
cwde
and
pop
sbb
test
shl
bound
call
mov
xchg
inc
dec
data16
daa
shr
stc
hlt
test
outs
lock
adc
xchg
in
mul
(bad)
jae
bound
cld
sbb
ds
and
fisttp
fcomp
sahf
test
cld
mov
mov
retf
inc
jge
mov
lods
rep
into
iret
fwait
(bad)
shl
fcomi
and
mov
adc
push
int
ins
mov
imul
cmp
dec
in
jns
adc
shl
sbb
(bad)
xchg
xchg
xchg
and
cmp
adc
daa
pop
pop
in
ror
push
ror
idiv
into
dec
mov
lods
pop
cmps
sub
mov
outs
xchg
jl
cmp
and
jbe
cmc
and
xchg
sbb
inc
sbb
dec
int
cdq
push
movs
aas
and
or
push
cmp
cmps
mov
aaa
fcmove
xchg
jp
dec
pop
jbe
ja
push
out
pop
add
(bad)
adc
xchg
repz
or
ss
jecxz
dec
cwde
mov
scas
lock
in
aad
ret
sub
lds
cmps
sub
ret
icebp
(bad)
sub
cmp
cdq
jo
test
mov
push
jno
jbe
mov
mov
inc
jg
sti
ja
stos
jle
jecxz
das
outs
in
inc
cmc
fld
fmulp
fbstp
imul
imul
pop
ss
imul
mov
cmp
inc
adc
mov
cmps
mov
pusha
dec
add
les
into
retf
mov
lods
adc
adc
sbb
mov
pop
push
mov
(bad)
bound
call
add
sub
mov
sbb
push
mov
dec
out
push
js
das
shl
int
imul
mul
loopne
stos
fild
jno
test
mov
pop
int3
pop
inc
xchg
pop
leave
shr
sti
push
or
sar
cmp
inc
pop
retf
and
sar
inc
shl
push
or
pop
fnstcw
mov
dec
stos
(bad)
call
lods
lods
ins
mov
adc
dec
(bad)
xchg
pop
cmp
mov
imul
ins
push
mov
mov
(bad)
lock
call
dec
add
push
push
dec
movs
fdivr
cld
sub
jg
test
mov
cmp
push
jle
pop
mov
retf
(bad)
pop
sahf
cmp
retf
xor
test
xor
aaa
push
lea
pop
xor
cmps
xor
stos
cwde
shl
xor
(bad)
pop
call
push
cmp
sbb
jb
sbb
cli
cmp
dec
inc
popa
test
out
add
lds
ins
je
inc
loop
lahf
call
fscale
cli
mov
xchg
cmp
mov
or
and
out
or
xchg
mov
lods
jae
mov
jp
mov
inc
das
add
mov
mov
retf
fisubr
data16
jp
and
pop
inc
ja
jmp
lahf
ret
xchg
fcomp
lods
mov
loope
mov
xor
popf
mov
ret
in
jne
push
repnz
cmp
(bad)
pop
fidiv
mov
sbb
xchg
mov
aaa
stos
icebp
mov
pcmpeqd
retf
test
outs
add
hlt
lock
inc
xchg
imul
outs
jmp
pop
inc
cmp
imul
mov
adc
sub
adc
les
mov
data16
push
pop
neg
daa
les
ror
mov
mov
dec
inc
jmp
cmp
sbb
imul
pushf
dec
or
hlt
fsubr
mov
sahf
push
gs
push
pop
push
in
test
mov
(bad)
call
xor
cmp
out
cmp
ja
mov
xchg
and
cmp
pop
xor
and
push
fs
mov
adc
idiv
ds
pop
xlat
mov
xchg
shr
fcmove
lods
push
cli
aad
loopne
lock
push
adc
mov
push
les
jno
sub
arpl
std
std
dec
dec
lsl
mov
scas
inc
inc
jne
shl
out
lahf
cmps
pop
pop
mov
mov
adc
out
adc
das
mov
mov
movs
test
stc
jge
inc
mov
fld
or
cmp
test
shr
xor
rcl
arpl
in
int3
cwde
scas
add
retf
or
dec
push
ficom
fld
and
jb
mov
outs
add
add
pop
in
scas
jmp
leave
ins
jae
sti
out
ffree
lock
ins
jb
add
loopne
(bad)
(bad)
lods
mov
in
push
jnp
ficomp
mov
sti
pop
ins
stc
pop
data16
aas
je
es
sbb
imul
inc
add
inc
mov
fs
pop
xchg
fisubr
inc
push
popw
dec
js
dec
movs
scas
xchg
sbb
jp
pop
(bad)
icebp
jnp
add
pop
and
mov
jnp
cwde
pop
push
mov
(bad)
fcomp
mov
xchg
cmp
add
xchg
(bad)
xchg
and
push
fidivr
stos
in
and
pop
lods
pop
or
rcl
(bad)
loop
and
dec
retf
sbb
cmp
cs
push
cmp
movs
adc
(bad)
cmps
repnz
aas
dec
jbe
push
jbe
pop
dec
retf
mov
daa
inc
test
das
xchg
mov
stc
shr
xchg
aaa
in
movs
push
inc
push
ins
push
mov
fwait
mov
out
call
push
push
cmp
add
fsubr
inc
add
push
sbb
aas
inc
outs
cmc
pop
cmc
pop
jmp
xchg
xor
retf
and
xor
test
imul
and
outs
jmp
std
mov
push
(bad)
xchg
push
into
sti
xchg
aad
push
jmp
adc
lock
push
scas
sub
fisttp
fwait
pop
data16
push
add
lea
and
jno
mov
imul
in
pop
mov
aas
jne
mov
sti
mov
mov
jnp
push
mov
adc
push
sub
aas
es
not
inc
js
aaa
cld
mov
cs
pop
add
addr16
xor
aam
dec
(bad)
stos
mov
mov
pop
(bad)
pop
sub
mov
stos
mov
or
xchg
or
ror
int3
mov
invd
sahf
adc
xor
or
inc
or
sub
sub
xchg
sbb
and
hlt
or
jle
xor
test
sbb
inc
sub
xchg
xlat
pop
sub
push
call
imul
outs
int3
sbb
std
mov
inc
mov
or
je
cdq
cwde
push
outs
and
mov
out
mov
push
shl
addr16
cmps
stos
xchg
adc
hlt
fdivr
out
ret
(bad)
retf
es
aaa
push
call
add
xlat
mov
cmp
mov
xchg
inc
xchg
mov
adc
add
imul
or
lock
mov
retf
cli
scas
in
lds
mov
push
outs
psubusb
nop
pop
push
es
pop
dec
out
sbb
cmps
or
mov
lods
(bad)
push
dec
retf
mov
xor
cmps
rol
test
xor
lods
out
sbb
jg
daa
xchg
(bad)
push
mov
push
adc
push
mov
clc
push
inc
pop
fcom
pusha
aaa
cli
jl
fisub
jle
fadd
xlat
imul
or
fistp
sbb
and
cmps
jmp
inc
nop
dec
les
xchg
icebp
clc
lahf
mov
lea
pop
out
hlt
clc
cs
or
in
and
push
sbb
push
xor
adc
cld
jbe
and
inc
das
xchg
fimul
mov
jl
call
mov
xor
imul
jns
adc
fidivr
xchg
jmp
inc
(bad)
retf
daa
out
int
dec
mov
xchg
xchg
pop
cmp
ret
cmp
jbe
dec
fs
or
pop
sub
push
inc
mov
sahf
mov
push
push
fucom
push
pop
push
mov
les
sub
or
lods
pop
or
mov
test
bound
mov
enter
scas
loop
inc
dec
ss
and
dec
dec
sbb
and
bound
inc
push
add
inc
lock
jb
xchg
in
cs
es
xchg
lock
shl
and
pop
(bad)
ja
(bad)
cmp
iret
xor
(bad)
pop
je
aam
xchg
adc
inc
cmp
(bad)
int3
sbb
fadd
pop
cmps
loope
gs
cli
push
imul
mov
push
out
imul
das
test
aam
xchg
xbegin
loope
xor
mov
pop
add
fst
lock
call
loope
mov
fcomp
cmps
jmp
aam
adc
sbb
mov
cli
jo
into
dec
arpl
mov
push
pushf
inc
sbb
inc
outs
std
es
and
in
and
repz
cmps
aaa
mov
jmp
fadd
xchg
imul
aas
jmp
ja
loope
ja
aam
xor
stos
push
xor
sub
sub
imul
mov
sbb
(bad)
ds
pop
sar
ror
mov
xlat
ins
sbb
sub
push
or
js
jmp
mov
stos
push
es
fadd
in
jbe
leave
sub
enter
aaa
push
js
mov
cld
xchg
jmp
or
and
inc
stos
sbb
jecxz
or
fwait
dec
or
enter
loop
popa
clc
dec
xlat
mov
sbb
push
xchg
and
pop
xchg
arpl
and
mov
dec
or
add
sbb
adc
fdivr
xchg
arpl
pop
scas
sti
stos
nop
neg
inc
mov
das
mov
jo
xchg
repnz
clc
push
mov
in
(bad)
xlat
inc
out
dec
push
mov
sub
pop
or
push
dec
add
push
add
rcr
call
pop
xor
adc
enter
inc
cmp
or
imul
jae
xchg
in
mov
mov
aam
sbb
xchg
js
sti
pop
hlt
cmc
or
add
push
ret
xor
push
inc
jge
jno
push
std
lods
and
daa
ret
dec
mov
xchg
arpl
mov
(bad)
mov
add
sub
imul
cmp
repz
push
fs
jnp
retf
in
xchg
xor
jne
xchg
pop
addr16
add
ss
out
aaa
push
adc
sub
mov
pcmpeqb
add
mov
mov
mov
frstor
and
test
cmp
inc
ss
loope
cmp
idiv
test
cmp
add
ret
xor
xor
aaa
int
and
outs
or
sti
mov
xor
or
push
inc
idiv
jl
in
xlat
imul
js
movs
adc
dec
in
adc
push
xchg
or
jmp
arpl
enter
(bad)
call
sbb
scas
dec
bnd
retf
lahf
inc
mov
into
cmp
scas
cli
mov
push
(bad)
push
jl
mov
adc
ror
dec
push
push
jmp
repnz
(bad)
mov
or
jmp
mov
push
inc
push
push
(bad)
xor
mov
jnp
out
jnp
mov
push
cli
mov
jmp
and
sahf
(bad)
xor
and
popf
xor
adc
enter
xor
push
add
xchg
push
jne
js
pop
adc
sbb
hlt
jp
in
dec
mov
jns
outs
and
push
(bad)
outs
aad
cli
push
and
adc
add
test
mov
add
inc
psrld
pop
jp
jb
cmps
movs
aad
adc
adc
or
cmps
jl
imul
das
out
ss
addr16
mov
xchg
push
sbb
stos
sahf
into
xor
cld
xor
scas
mov
inc
mov
into
aad
mov
mov
sbb
xchg
pusha
inc
mov
sahf
cwde
pop
js
pop
add
dec
xchg
xchg
arpl
mul
mov
xor
out
inc
sbb
mov
xchg
push
sub
mov
mov
jp
jb
cmp
ret
fwait
xchg
inc
jge
add
fwait
aas
jb
push
loop
enter
mov
iret
jecxz
mov
xchg
mov
(bad)
jo
loopne
repz
imul
mov
pop
call
ffreep
pop
pop
sub
add
xchg
add
xor
in
test
mov
xor
pop
adc
sub
push
push
shl
loop
stos
mov
sub
add
cmps
iret
adc
push
mov
mov
or
cld
cmp
add
pusha
ja
mov
or
mov
loop
inc
mov
test
mov
test
push
icebp
and
mov
push
cdq
icebp
lods
fisttp
jmp
mov
add
test
mov
xor
pusha
push
rcl
xor
dec
fld
loopne
inc
mov
cdq
mov
jmp
sub
mov
push
mov
dec
out
test
ror
daa
push
aam
push
(bad)
mov
outs
xchg
dec
mov
adc
jmp
dec
xchg
jg
jecxz
fdivr
fimul
xor
(bad)
inc
add
cmp
fcmovnbe
mov
sbb
xchg
jbe
adc
sbb
fimul
ror
xchg
jmp
shr
lahf
jmp
in
mov
sbb
mov
stos
mov
pop
mov
pop
adc
xchg
stos
push
pop
and
add
xor
mov
jmp
mov
xor
pop
mov
scas
and
cli
mov
js
inc
shr
adc
pop
test
jne
push
mov
and
and
xchg
jo
jno
sbb
ret
dec
gs
in
cmp
sti
stos
mov
mov
shl
push
inc
mov
sbb
popa
xchg
inc
sub
cmp
mov
mov
jmp
shl
mov
dec
push
xor
push
jecxz
cmp
mov
pop
imul
pop
push
jmp
push
(bad)
ret
and
push
scas
rcr
mov
imul
ins
leave
adc
rcl
lods
daa
loopne
pop
paddd
(bad)
fucom
les
aam
cs
pop
and
iret
and
aaa
ds
ins
rcr
enter
ja
mov
xor
or
ins
sbb
pop
mov
or
sub
sbb
xchg
popf
cmp
cmc
push
bound
scas
sub
mov
ja
add
loopne
adc
cmp
std
add
push
mov
nop
mov
(bad)
fwait
and
xchg
xchg
pop
aam
inc
stos
out
dec
test
clc
es
mov
call
cmp
clc
mov
sbb
add
mov
push
stc
daa
jb
jge
ins
aas
inc
push
xchg
add
test
push
or
test
xchg
xor
loope
pop
out
pop
pop
aad
xchg
dec
jne
and
mov
movs
mov
leave
mov
out
out
or
daa
(bad)
mov
xchg
test
xor
and
hlt
adc
sahf
ror
call
test
(bad)
in
cmp
mov
cdq
hlt
mov
mov
in
cli
stos
fbstp
fistp
(bad)
(bad)
push
jo
inc
and
ja
outs
jmp
sar
ror
lods
fisub
mov
pop
dec
inc
adc
xchg
sbb
jbe
jp
push
mov
test
pushf
mov
add
push
xchg
cmc
adc
mov
adc
push
loope
sbb
rcr
popf
pusha
dec
inc
int3
xor
ret
arpl
stos
in
stc
pop
jmp
cmp
jg
adc
xor
daa
sub
sub
rcl
add
xor
mov
dec
arpl
sub
faddp
aas
push
inc
sahf
lods
mov
call
mov
test
test
into
out
sub
ds
icebp
pop
or
xor
inc
ja
(bad)
out
cmp
gs
adc
in
mov
cs
adc
(bad)
mov
xchg
inc
sbb
xor
xchg
fadd
rol
fwait
inc
stos
loope
mov
cmp
and
popf
mov
mov
cmc
push
push
pop
dec
jl
pop
mov
ret
push
das
(bad)
out
sbb
hlt
jmp
scas
adc
jp
pop
and
dec
shl
hlt
adc
loope
push
imul
ret
in
shl
mov
dec
or
inc
mov
arpl
or
in
mov
push
jmp
lods
repnz
mov
inc
pop
xchg
or
out
fild
and
(bad)
sti
jecxz
push
add
jecxz
movaps
fwait
mov
sub
mov
inc
sub
hlt
inc
ins
jb
push
cmp
mov
mov
je
adc
jmp
or
inc
pop
bound
dec
adc
xor
scas
je
bound
ja
fwait
and
xor
jmp
sbb
shl
pop
cld
arpl
scas
int
cmp
xor
mov
icebp
xchg
xchg
sbb
mov
xchg
sub
std
push
pop
mov
jns
xor
jp
cmp
sti
jg
or
cmp
aas
stos
xchg
(bad)
clc
sti
pop
xor
(bad)
mov
into
sub
stos
iret
(bad)
cmp
imul
or
aam
or
or
mov
xor
(bad)
les
jo
xchg
cdq
mov
fstp
or
cmp
icebp
(bad)
fsubrp
jmp
movs
cld
mov
push
jmp
fstp
sar
hlt
loop
in
jb
jno
jb
jg
push
ret
and
mov
or
add
mov
xor
ins
fcom
xor
imul
dec
sbb
push
jo
fsubr
jmp
adc
iret
callw
(bad)
jmp
scas
(bad)
ja
or
lahf
add
add
xchg
and
xlat
enter
cs
pop
xchg
(bad)
(bad)
add
int3
inc
add
or
imul
mov
stc
mov
inc
cmp
icebp
xchg
or
(bad)
jge
stos
cmps
fimul
inc
jae
(bad)
inc
es
xor
imul
leave
xchg
dec
stos
inc
pop
out
fs
xchg
push
mov
in
or
push
lahf
cmp
stos
pop
and
mov
out
push
in
inc
lock
outs
cmc
sub
ror
jns
mov
sub
mov
mov
(bad)
(bad)
xor
jle
(bad)
and
mov
and
xor
xchg
mov
test
xor
push
in
ret
mov
ds
fdiv
xlat
adc
push
shr
jno
dec
stos
addr16
pop
mov
ss
movs
imul
scas
les
mov
jnp
mov
loop
jnp
loope
(bad)
sbb
ja
mov
movs
xchg
jbe
mov
mov
pop
xor
les
pop
das
jno
into
enter
movs
mov
dec
xchg
fisub
sbb
or
sub
jmp
xlat
inc
or
jne
dec
cs
ror
in
jg
fiadd
leave
test
rcl
(bad)
(bad)
jecxz
ins
pusha
ja
sub
pop
mov
(bad)
mov
mov
xchg
pop
push
push
js
mov
je
repz
push
mov
mov
adc
lahf
mov
(bad)
xor
or
rol
les
cli
mov
out
not
mov
dec
jp
ror
rcl
pop
and
cli
das
test
xchg
push
(bad)
ror
mov
sub
dec
and
mov
pop
retf
mov
xchg
cdq
cwde
aaa
into
push
mov
leave
or
jns
pop
jae
mov
aad
dec
mov
popa
jo
data16
call
jp
in
xchg
sbb
out
jmp
mov
sub
push
mov
(bad)
dec
add
stos
mov
pop
or
mov
jbe
loope
xor
in
cmp
xor
je
push
(bad)
cmp
mov
cmp
in
movs
mov
dec
cmp
aad
(bad)
out
hlt
and
stc
ins
xchg
idiv
pop
push
xchg
jmp
inc
scas
rol
retf
fcomp
mov
popa
add
rcr
sbb
jb
jmp
mov
(bad)
(bad)
jbe
xor
push
ret
cmp
sub
xlat
test
call
ins
popf
jg
push
std
out
cmc
push
or
xor
les
aas
mov
das
das
lods
test
dec
aad
mov
and
movs
jb
dec
outs
mov
enter
fstp
test
sbb
xchg
vcvtss2si
adc
dec
xchg
in
dec
popa
fdivp
cmp
push
pushf
cld
pop
xlat
cld
fiadd
or
jmp
div
int
push
inc
pop
mov
imul
mov
cmp
iret
cmc
nop
adc
push
sbb
and
leave
dec
inc
inc
sti
or
push
inc
mov
mov
jno
mov
out
xchg
jecxz
pop
pop
out
inc
je
push
pop
movs
xchg
les
push
fnstcw
repz
movs
rol
das
shr
and
push
mov
cvtpi2ps
sbb
out
pop
mov
aam
sbb
jne
pop
(bad)
or
movs
mov
dec
sub
xor
bound
cdq
pmullw
mov
mov
inc
push
aam
fwait
sbb
out
mov
mov
aam
fistp
xchg
mov
jns
xchg
xor
mov
jge
or
hlt
loopne
test
mov
adc
pop
movs
pop
mov
in
jno
jecxz
add
dec
mov
dec
aas
inc
mov
xor
into
pusha
mov
rcr
sbb
retf
mov
ja
fcom
inc
shr
lds
jle
jmp
icebp
adc
sub
ret
add
xchg
xor
je
outs
jae
dec
les
rcl
js
in
sub
jle
int3
(bad)
jmp
fist
inc
icebp
lds
retf
adc
stos
lods
xlat
(bad)
pop
enter
ins
xchg
ficom
pop
aas
add
dec
push
pop
nop
adc
mov
dec
sti
cmc
popa
cmp
inc
push
das
push
xchg
cmp
sar
xchg
ins
mov
enter
sqrtps
cmp
push
loop
jmp
sub
idiv
jge
mov
fucom
push
mov
in
lods
cmp
mov
pop
das
leave
dec
xor
sbb
cmp
into
outs
clc
mov
jae
jne
pop
mov
mov
(bad)
adc
call
gs
cld
mov
jne
mov
sti
mov
call
pop
test
leave
inc
add
cmp
lahf
(bad)
jne
lods
pushf
repz
sbb
jl
push
cmc
sub
test
xchg
pop
cmp
jae
movs
xchg
neg
sub
pop
mov
fstp
xchg
xchg
pop
push
stc
pop
bound
sar
inc
or
xchg
mov
fld
sti
and
mov
in
dec
xor
call
lock
(bad)
cmps
div
in
cmps
imul
push
sub
pusha
adc
push
inc
stos
sbb
loopne
scas
mov
popf
dec
pop
inc
mov
xchg
adc
retfw
stos
fs
test
fxch
xadd
push
jmp
pop
mul
test
pop
lahf
mov
cmp
adc
xchg
mov
into
ds
aad
shr
mov
xchg
sbb
fnstcw
sub
or
sbb
ins
lea
test
pop
cmp
cmp
mov
lods
adc
mov
and
(bad)
rcr
push
imul
stc
sub
ret
cmp
mov
mov
retf
(bad)
(bad)
mov
sub
cmps
(bad)
enter
call
outs
in
scas
cwde
xor
ins
xor
gs
shl
stc
cmp
lock
mov
cli
hlt
push
sbb
xchg
cmps
mov
push
in
push
je
lock
cmp
push
pop
mov
loope
popa
das
scas
mov
pusha
shl
dec
fsubr
xchg
fdiv
mov
xchg
adc
add
jp
pop
inc
cmp
clc
mov
inc
inc
fldenv
cmp
loopne
aad
test
xor
pop
and
mov
sbb
sub
or
mov
out
inc
js
paddusw
mov
jnp
mov
daa
mov
mov
sub
pop
mov
fwait
jle
out
outs
inc
mov
jg
(bad)
movs
xor
ins
leave
in
inc
sub
and
bound
cmps
out
(bad)
popa
sbb
nop
push
dec
(bad)
and
pop
dec
adc
push
cmp
mov
lods
test
jmp
cmp
pushf
adc
or
adc
sub
jl
mov
rcr
mov
mov
or
inc
or
sub
inc
or
jmp
icebp
gs
sub
pop
xchg
xchg
iret
mov
ja
push
sub
(bad)
cli
mov
inc
movs
mov
scas
icebp
fnstcw
sbb
std
mov
push
rol
shl
cmp
and
(bad)
ror
into
gs
adc
mov
enter
mov
fwait
nop
out
pushf
jno
and
dec
and
loop
push
test
adc
mov
bound
pop
mov
rcl
movs
mov
xor
mov
xchg
mov
in
and
dec
mov
add
fs
push
inc
lods
and
fldcw
add
or
xchg
loop
test
(bad)
fs
stos
cmp
xchg
rol
push
and
or
inc
mov
daa
xlat
in
or
cmovbe
xor
cmps
nop
xchg
sbb
inc
ins
stos
cli
mov
sahf
lea
cld
std
sbb
pushf
xlat
xor
inc
shl
pop
fwait
and
sub
aad
in
rol
xchg
cmp
mov
in
push
jo
inc
out
jbe
in
lds
jns
ja
clc
mov
hlt
mov
cld
lds
pxor
fisttp
xchg
push
js
aaa
pop
int3
or
add
pop
enter
cmp
leave
dec
xchg
es
xor
mov
dec
mov
pop
out
stos
sub
lock
lds
pop
dec
ja
js
sub
js
bound
fwait
push
idiv
popa
jmp
cs
cmp
pusha
sha256msg2
cdq
shl
mov
(bad)
and
jg
mov
adc
push
pop
mov
dec
fisttp
pop
xor
adc
pop
es
in
inc
es
jl
ins
mov
test
mov
and
ja
mov
cld
nop
and
cli
arpl
add
sub
mov
repnz
cmp
xchg
lods
scas
repnz
outs
mov
pop
mov
mov
push
mov
mov
repnz
mov
call
push
inc
cmp
stos
dec
push
jp
lds
out
push
mov
daa
pop
jo
cmp
aaa
sub
sub
nop
dec
xchg
(bad)
gs
jl
mov
inc
push
fdivr
push
in
sbb
or
adc
lods
inc
retf
(bad)
pop
out
xor
retf
ret
daa
mov
daa
cmp
adc
or
retf
mov
and
lds
push
lock
loope
leave
pop
sbb
dec
in
pop
pop
(bad)
retf
jne
xor
jno
pop
int3
repnz
sbb
xchg
mov
mov
aam
int
cmp
mov
xchg
dec
imul
dec
xor
jl
retf
stos
push
pop
jbe
icebp
dec
sbb
jge
dec
mov
leave
arpl
mov
je
pop
cld
push
je
cmp
xor
lea
rcr
pop
into
loopne
mov
retf
sub
dec
out
ins
cmp
or
dec
repz
inc
dec
sub
cdq
cld
retf
outs
push
fucomi
cmps
push
sub
mov
add
(bad)
int3
push
xchg
pop
add
xchg
and
aaa
dec
loopne
dec
cmc
in
call
adc
lahf
and
xchg
scas
push
jge
fnstcw
push
data16
inc
test
div
and
pop
fwait
loope
jmp
adc
and
push
sbb
xchg
addr16
jne
repz
xchg
pop
cmp
fnstcw
jo
test
pop
mov
or
enter
jl
sub
(bad)
jns
leave
or
dec
jb
pusha
aam
sub
inc
lods
mov
scas
cmp
les
mov
add
aam
cdq
ins
pop
adc
fisttp
dec
pop
ss
std
fidivr
jle
ret
mov
cmp
data16
lds
imul
arpl
outs
xchg
or
inc
or
nop
stos
loop
js
jns
mov
imul
outs
mov
cmp
mov
add
add
test
inc
test
adc
neg
daa
test
cld
lock
out
cmp
fldenv
mov
mov
jae
fnstcw
xchg
add
mov
pop
cmps
movs
mov
out
add
mov
push
lods
call
lds
aad
icebp
jmp
fistp
xchg
int3
dec
outs
fstp
das
aad
aas
(bad)
and
sti
mov
mov
sub
and
cmp
or
arpl
sub
js
enter
loop
add
call
inc
xchg
sahf
int
sbb
pop
aam
cmp
test
add
rcl
mov
mov
xchg
pop
jle
pop
sub
or
sar
ja
xchg
mov
jmp
ja
jmp
nop
call
mov
dec
cli
push
jge
sbb
fstp
loope
ficomp
ficomp
popf
test
in
mov
push
jae
xchg
inc
test
jbe
fld
and
add
jl
sub
jmp
cmps
jbe
cwde
popf
shl
add
push
add
cmp
outs
stos
repz
pop
mov
xor
adc
icebp
es
mov
jns
and
dec
inc
jns
inc
fwait
nop
mov
xchg
or
cmp
(bad)
icebp
xchg
sbb
dec
ins
fmul
sbb
fwait
(bad)
and
cmp
jge
inc
arpl
mov
sti
retf
jmp
sar
add
int
add
jo
mov
std
leave
out
mov
mov
rol
dec
sar
mov
pop
mov
push
repnz
ds
or
ret
stos
mov
mov
pop
and
sbb
dec
retf
pop
ds
call
inc
fisttp
in
aas
push
ja
pop
jns
(bad)
sti
and
outs
outs
xchg
daa
out
adc
or
lods
mov
ficomp
mov
inc
push
lods
mov
aas
dec
xchg
fild
xlat
sub
add
(bad)
rcr
movs
add
les
ins
les
daa
mov
cli
and
inc
jbe
adc
mov
dec
sub
aad
cld
pop
mov
lds
sub
and
sbb
sub
(bad)
ret
shl
movs
mov
mov
mov
pop
sahf
push
ds
adc
mov
jl
mov
bound
movs
jg
in
ret
stos
cmps
loope
push
pop
hlt
inc
and
xchg
shr
ds
fstp
inc
retf
ins
jno
mov
dec
aad
out
nop
imul
arpl
xor
jmp
ror
out
jmp
imul
pop
int
cmps
bound
stos
aam
cmps
mov
into
leave
dec
mov
push
mov
pop
push
or
adc
aad
jo
int
mov
lods
outs
mov
lea
sahf
je
test
xchg
push
imul
test
xchg
aas
inc
cld
stos
sbb
ds
xchg
call
ds
out
push
outs
mov
popa
arpl
sbb
adc
push
xchg
push
movs
out
xor
xor
pusha
push
pusha
rol
stos
jmp
inc
or
mov
and
mov
pop
jmp
mov
adc
call
jns
clc
sbb
call
adc
add
mov
hlt
pop
aad
test
pop
lds
and
xchg
mov
xchg
(bad)
mov
mov
das
mov
call
pop
jmp
bnd
push
cmps
or
mov
mov
mov
out
push
dec
jmp
cmc
mov
and
int
icebp
sbb
jo
adc
(bad)
idiv
addr16
jle
mov
call
adc
(bad)
jae
mov
(bad)
es
sub
arpl
lods
jecxz
jl
mov
jae
fnstcw
xchg
into
jo
and
and
push
enter
ins
sti
scas
and
popf
shl
out
cmps
push
dec
scas
ins
adc
xor
(bad)
xchg
(bad)
xchg
push
and
xor
in
out
xchg
adc
xchg
jnp
bound
dec
mov
imul
mov
lds
add
push
jmp
adc
mov
mov
and
pop
mov
adc
in
ins
ds
ret
cmp
outs
daa
int3
fcmovne
mov
mov
push
push
ss
leave
and
ret
cmps
ret
inc
adc
mov
(bad)
imul
int3
xor
xor
mov
sbb
mov
xchg
fidivr
push
fsub
or
sti
pop
pop
iret
mov
std
popa
dec
ror
(bad)
mov
fxtract
mov
loop
push
dec
mov
jnp
mov
fwait
xchg
and
ds
jb
out
in
pop
adc
test
fld
or
jae
jecxz
retf
cmp
add
adc
(bad)
ins
(bad)
fldcw
push
mov
jmp
mov
mov
mov
fstp
imul
fadd
push
push
out
lahf
(bad)
(bad)
mov
dec
push
cmp
jo
not
sbb
add
xchg
pop
popf
pop
dec
addr16
sbb
pop
or
sub
jnp
pop
call
das
push
addr16
mov
mov
mov
mov
xlat
jne
in
adc
sub
xor
sbb
jns
adc
sbb
cmp
xor
movs
mov
add
xor
hlt
cmp
sub
dec
in
call
lods
or
and
and
test
cwde
cld
pop
sub
aad
shl
ja
inc
sbb
cs
xchg
push
push
mov
mov
dec
inc
lock
(bad)
xchg
dec
add
adc
test
mov
out
xor
push
sbb
test
or
js
jmp
fsubr
lds
lea
loope
mov
sub
loope
shl
mov
or
cmp
sub
add
jne
and
xlat
gs
xchg
add
jnp
and
pop
dec
inc
in
jnp
ss
pop
sbb
xchg
scas
pop
addr16
mov
mov
pusha
mov
push
out
xor
and
mov
js
jecxz
loop
jge
and
pushf
out
jecxz
sbb
leave
mov
mov
mov
xor
ds
movs
in
sub
std
xchg
loope
jo
outs
lods
pop
sub
fdivp
add
mov
add
adc
inc
inc
sti
les
shl
inc
popa
cs
sub
xchg
in
pop
je
lods
retf
lods
mov
popf
mov
jno
ret
sti
add
push
cli
popa
aaa
push
dec
imul
enter
das
into
iret
add
push
nop
lods
nop
rcr
lahf
xchg
stos
pop
push
add
movs
fs
mov
sub
aad
push
cld
call
mov
pop
sub
mov
or
nop
cmps
stos
(bad)
gs
cli
and
inc
arpl
inc
add
xor
sub
jmp
ffree
dec
xchg
mov
inc
pop
aas
push
jo
es
xlat
adc
mov
and
shl
test
test
je
push
push
sbb
and
cld
mov
sbb
push
mov
test
je
xor
and
xor
pop
push
test
out
inc
(bad)
jno
mov
mov
test
cli
fist
test
mov
std
or
addr16
ret
imul
jns
add
inc
sahf
aam
pop
cmp
xor
scas
lods
dec
add
mov
inc
(bad)
jecxz
iret
cmc
ficom
lods
call
addr16
stc
icebp
out
sti
out
jmp
std
aas
inc
xor
mov
lea
and
or
push
retf
mov
push
add
stos
fidiv
out
jmp
les
pop
aad
pop
mov
push
xor
in
or
stos
mov
xor
dec
and
pop
fstp
in
fdivr
push
add
push
iret
movs
adc
adc
mov
pop
sar
cmc
xchg
or
xchg
div
pushf
dec
enter
(bad)
bound
js
jecxz
pop
mov
cmps
outs
pop
mov
aad
jns
mov
loop
ss
cwde
das
cmp
mov
cmc
xor
retf
pop
repnz
pop
or
xchg
adc
dec
xor
or
xchg
int3
outs
add
pusha
push
sub
and
dec
jle
mov
adc
inc
jle
loopne
sar
sar
mov
jmp
add
add
cmpxchg
or
xor
rcl
gs
xor
add
xor
int3
push
xor
adc
mov
mov
add
sbb
sub
mov
js
or
js
lock
fild
cdq
jl
fmul
inc
add
or
xchg
cli
out
imul
push
or
adc
push
sbb
sahf
or
mov
jbe
fmulp
dec
cld
inc
arpl
push
cmp
push
mov
(bad)
and
pushaw
or
mov
cs
in
cmp
(bad)
rcl
rcl
jo
mov
das
retf
mov
push
inc
add
nop
(bad)
pop
std
add
inc
pop
sbb
inc
add
je
mov
or
cs
xchg
dec
sub
pop
dec
sub
std
xchg
(bad)
jbe
xchg
sar
mov
sub
cmp
push
rcr
pop
es
sub
fcomp
push
mov
sub
(bad)
out
add
jae
scas
add
xor
jns
aas
fistp
xchg
in
adc
int3
or
dec
(bad)
call
loopne
or
fld
cmp
pop
sub
movs
inc
outs
xchg
jmp
push
push
mov
jne
cmp
dec
cmps
call
int3
push
(bad)
scas
test
pop
pop
not
pop
mov
pop
popa
and
ret
pop
out
data16
xchg
or
inc
mov
jns
xchg
enter
mov
pop
xchg
mov
mov
cs
lods
cpuid
push
pop
push
(bad)
jecxz
fnstcw
test
add
test
aaa
sbb
or
xor
inc
dec
inc
cmp
cmp
mov
sub
addr16
lods
inc
cmc
pop
xlat
inc
add
cmp
mov
pusha
xor
enter
cdq
mov
test
push
mov
jl
retf
pcmpgtw
leave
cli
in
or
call
jo
sbb
add
aas
mov
pop
jmp
inc
aaa
or
pop
jnp
ds
out
sub
stc
inc
rol
pop
lods
(bad)
xor
pop
cdq
in
sbb
inc
mov
(bad)
sbb
iret
push
xchg
sub
cdq
jae
loope
loop
sub
aas
call
ret
fisttp
adc
outs
aaa
aas
test
test
inc
out
cmp
mov
fmul
mov
fldcw
test
int
mov
shl
or
sub
inc
test
scas
add
mov
xchg
mov
mov
add
arpl
inc
or
jl
lahf
mov
cmp
test
push
ds
gs
mov
push
cmp
mov
addr16
inc
push
shl
dec
fucomp
stos
pop
sbb
aas
xchg
ins
cmp
inc
test
clc
sub
lods
les
xchg
sbb
(bad)
jns
out
mov
mov
nop
fisub
int
add
test
mov
leave
(bad)
sbb
gs
mov
jo
shl
jns
sub
xlat
push
cmp
cli
push
lods
pop
ja
sub
stos
sti
pop
cmp
add
movs
and
pop
call
ja
out
inc
or
outs
add
loope
test
(bad)
je
or
cmp
or
and
cmp
push
inc
and
add
outs
push
xchg
inc
rcl
loope
mov
call
dec
mov
retf
(bad)
mov
adc
sbb
xlat
loopne
cmc
mov
xchg
cld
or
jno
xchg
jo
mov
cmp
or
adc
cmp
test
mov
shr
(bad)
repz
jp
mov
fisubr
shl
jg
es
cmp
sub
mov
fiadd
retf
in
retf
stos
int3
ins
jmp
cmp
out
lahf
in
mov
iret
aad
stos
scas
jp
out
in
hlt
mov
gs
jno
push
adc
aaa
je
sti
outs
mov
mov
inc
(bad)
mov
mov
or
inc
xor
push
ror
sahf
imul
movs
movs
pop
out
ret
or
popa
clc
push
fst
mov
adc
or
retf
retf
lods
test
stc
adc
jo
movaps
pop
test
cmp
jae
mov
int3
imul
loop
jae
push
inc
nop
lea
hlt
or
fild
inc
jp
mov
ja
ror
and
imul
push
jl
aam
mov
mov
or
ja
cdq
mov
xchg
sbb
xchg
dec
dec
lahf
ins
scas
push
mov
sbb
test
xor
mov
fincstp
test
pop
push
push
stos
retf
stos
push
xor
inc
frstor
and
xor
pop
inc
fwait
and
scas
add
shl
in
aad
ins
sti
bound
inc
add
aas
mov
lea
shl
cld
sub
sub
sub
(bad)
or
and
cmps
or
pop
xlat
mov
jmp
mov
sub
sub
js
(bad)
dec
jne
icebp
mov
stos
pop
test
jb
cld
aam
xchg
sbb
in
popf
mov
(bad)
enter
mov
aaa
jae
mov
mov
jge
adc
cmp
scas
pop
jae
mov
aaa
test
cmp
rol
pop
add
ret
mov
and
jmp
xchg
jno
inc
into
(bad)
push
jo
leave
and
daa
sbb
pop
add
std
push
cmp
lock
popf
jbe
mov
push
stos
mov
lods
pop
xchg
push
adc
sub
jle
inc
cli
dec
xor
cmps
push
push
fsubr
xor
(bad)
mov
mov
xor
sbb
dec
iret
fild
jmp
out
iret
rol
push
or
not
daa
mov
adc
loop
jmp
shl
push
pop
and
fisttp
inc
loop
mov
aaa
mov
popf
mov
outs
jb
sub
xchg
xor
shl
push
icebp
aam
ret
push
jg
fidivr
out
add
jecxz
in
sub
and
inc
add
cmp
xor
and
stc
jbe
mov
or
scas
mov
in
ret
idiv
mov
repnz
sub
shl
(bad)
aas
inc
jmp
add
sbb
test
xchg
jno
add
imul
or
push
adc
ror
dec
movs
dec
or
adc
pminub
mov
or
xchg
sbb
push
call
(bad)
popf
adc
sub
pop
mov
and
adc
shl
icebp
mov
pop
scas
mov
pop
mov
push
ds
test
fstp
pop
rol
jg
clc
adc
(bad)
rcr
xchg
mov
push
ret
jle
jmp
sub
jnp
stos
test
dec
mov
cmp
das
jnp
and
das
or
push
jmp
or
inc
retf
sti
adc
aad
sub
jg
sbb
les
inc
mov
(bad)
jl
pop
call
pop
in
mov
sub
add
mov
sahf
imul
fcmovbe
mov
xor
and
sahf
sbb
push
cmp
jmp
repnz
shr
por
mov
or
xchg
dec
adc
movs
dec
sub
lods
stos
and
pop
xor
mov
pop
popa
ret
loop
fwait
mov
mov
jb
inc
(bad)
and
xchg
fwait
inc
xchg
push
sbb
iret
movs
ret
ffreep
mov
adc
add
fwait
in
adc
retf
dec
imul
test
call
bound
inc
aas
mov
outs
mov
sub
jae
and
sahf
sub
jae
pop
std
lea
daa
pop
jle
mov
les
std
adc
mov
bound
jmp
jge
inc
shl
mov
addr16
cmp
stos
mov
cmps
pop
gs
sub
iret
hlt
ins
mov
xchg
bound
test
mov
sub
jp
data16
add
xor
ins
xchg
jo
fst
mov
lea
mov
loopne
sub
bound
scas
mov
test
adc
adc
je
sub
rol
xchg
jno
ret
xchg
push
gs
jo
enter
pop
and
sub
sbb
dec
xchg
jg
push
add
rcl
pop
and
(bad)
sahf
shr
pop
retf
shr
lods
ds
inc
inc
push
cs
add
(bad)
cmp
add
call
mov
nop
xor
ds
jns
sub
out
inc
jnp
jmp
ds
push
cli
inc
add
push
fcom
push
movs
outs
test
xchg
cmp
sbb
cmp
sub
cmp
rol
sbb
cwde
push
jne
(bad)
jno
pushf
ins
adc
mov
add
out
es
add
dec
cdq
fwait
or
cmp
sub
adc
bound
call
fwait
xchg
lds
call
mov
add
adc
push
cmp
rol
and
in
ds
(bad)
in
test
jmp
sbb
call
cld
fisub
mov
aam
sahf
aas
mov
hlt
adc
jne
outs
or
shr
push
sahf
popa
lods
jmp
jb
outs
dec
in
call
call
imul
and
test
mov
imul
mov
or
ins
imul
cmps
mov
out
push
and
pop
push
into
inc
mov
sahf
adc
repz
dec
cmps
pop
scas
jg
loopne
sti
or
add
jae
dec
retf
lock
rol
ficom
fdivr
cmp
(bad)
sti
push
jb
push
nop
(bad)
loopne
sbb
popf
test
cmp
pop
hlt
in
div
pop
aam
mov
es
stc
xor
xchg
or
fs
jecxz
outs
pop
popf
xor
jl
inc
ror
gs
xor
add
lahf
mov
pop
adc
xor
mov
or
mov
imul
inc
inc
dec
cmc
pop
(bad)
add
js
(bad)
aas
adc
jle
mov
adc
cdq
clc
shl
lock
lea
or
jbe
movs
dec
or
xor
or
loop
xchg
pop
lea
jno
cmps
ret
mov
jb
inc
je
popf
mov
jle
je
push
mov
xchg
sub
les
push
sbb
hlt
jno
mov
cmp
mov
in
into
(bad)
jmp
jp
and
pop
push
jo
ret
jl
push
test
inc
int
mov
push
xchg
out
cld
adc
and
sub
in
xchg
data16
fimul
push
je
or
icebp
int3
xor
or
(bad)
or
ds
test
inc
fucom
fild
xchg
push
push
stos
mov
jo
xor
lods
enter
and
ss
inc
push
mov
outs
cwde
sbb
mov
fnstcw
stos
cld
ror
repnz
and
gs
jg
mov
int3
sbb
fwait
adc
inc
or
pop
cmp
add
dec
push
xor
outs
test
std
rcr
aas
(bad)
les
add
push
in
lds
mov
ret
xchg
or
adc
mov
cmp
imul
and
sar
daa
adc
aam
mov
jbe
sub
pushf
xor
daa
out
add
jns
inc
in
mov
fld
cmc
cwde
and
test
pop
jmp
js
out
out
dec
into
adc
adc
adc
dec
add
in
jbe
sti
icebp
pop
outs
cwde
mov
repz
enter
and
inc
jg
adc
dec
test
mov
add
inc
cwde
addr16
dec
jg
fcomp
rcr
mov
(bad)
outs
fs
out
or
sub
xor
popa
push
sbb
push
mov
xlat
les
sub
bnd
and
rcr
and
inc
in
ffreep
push
test
lea
fnstsw
mov
mov
push
jg
fsubr
add
loope
iret
mov
inc
or
stos
push
(bad)
lock
push
sahf
retf
adc
xchg
jo
scas
push
add
dec
push
cmp
shr
push
inc
xchg
inc
pop
jle
popa
mov
icebp
movs
cwde
jg
fcomp
in
adc
jp
inc
js
jg
psubb
test
popf
or
mov
mov
xchg
ret
(bad)
cwde
rol
dec
(bad)
bound
movs
mov
mov
mov
pop
push
repz
and
and
xchg
push
inc
aas
xor
hlt
cmp
sub
in
popa
aad
gs
and
ins
test
or
dec
or
imul
dec
loopne
pop
out
movs
sub
inc
jno
push
mov
inc
test
(bad)
mov
jb
xor
mov
call
test
in
call
js
mov
sbb
mov
repz
aam
mov
cwde
pop
xchg
pop
fs
and
cmc
aam
jecxz
inc
fbstp
loope
test
aad
(bad)
mov
movs
and
jb
pop
push
out
sbb
pop
dec
jmp
or
lds
dec
(bad)
jo
inc
add
push
in
stc
(bad)
mov
and
and
test
xchg
cmp
push
adc
repz
(bad)
mov
push
iret
fwait
mov
push
cmc
jecxz
sbb
xor
pop
jl
sbb
cmp
add
hlt
neg
xchg
xor
js
push
aad
jno
test
cmp
fnstsw
and
(bad)
mov
dec
and
fbstp
adc
out
enter
add
gs
pop
fisub
(bad)
mov
xchg
inc
pop
sub
or
ins
rcr
rol
dec
sub
fidivr
fstp
sub
inc
xor
ins
cmp
adc
out
and
xchg
inc
retf
mov
retf
cli
mov
fs
pushf
into
dec
sbb
lods
fwait
xchg
mov
cwde
popa
shl
sub
cmp
add
inc
sub
xchg
adc
fwait
adc
mov
jmp
shr
adc
(bad)
movs
add
enter
push
sbb
xchg
add
xor
(bad)
rcr
ins
cmc
stc
push
xor
lds
push
jbe
retf
pop
add
xchg
adc
es
pusha
imul
aas
xlat
cmp
push
mov
ret
repz
xor
les
inc
in
jmp
jmp
cmp
xchg
aaa
ja
sub
add
(bad)
xchg
pop
lods
dec
dec
lds
fdiv
jge
enter
dec
jecxz
out
(bad)
push
stos
lods
mov
xor
hlt
mov
(bad)
enter
lea
arpl
movs
jo
inc
cld
fbld
and
mov
push
pop
in
xchg
xor
outs
pop
(bad)
lods
jno
sbb
rcr
fstp
pop
sahf
icebp
pop
or
in
outs
rcl
lea
cs
loop
iret
cwde
cmp
inc
push
in
lahf
push
adc
cmp
lock
test
inc
sub
mov
es
or
cmp
aad
in
or
nop
or
and
sub
xor
cli
imul
rcl
adc
xor
(bad)
dec
mov
push
xchg
mov
out
xor
movs
jo
jnp
lahf
sti
ds
or
es
cs
cmp
dec
pop
xor
sbb
stos
sub
push
in
add
dec
mov
mov
push
sahf
bound
cld
mov
mov
inc
cmp
loope
inc
push
in
inc
dec
loope
adc
test
cdq
push
fistp
cmp
sub
loopne
shl
int3
shr
and
inc
std
pop
lea
push
lock
ss
adc
in
cmp
sbb
test
push
call
test
test
sub
or
loopne
daa
dec
leave
sbb
jg
arpl
lock
inc
outs
dec
outs
xor
jl
repnz
push
aad
stos
scas
xor
int3
fs
jge
mov
push
xor
out
mov
icebp
les
out
cli
mov
int3
adc
stc
cmp
adc
and
sub
jnp
mov
nop
inc
rol
jns
mov
sbb
daa
xchg
loopne
cmps
sub
loop
mov
pop
ja
into
xchg
ds
shr
push
repnz
sti
mov
wrmsr
mov
push
gs
fdivr
outs
cmp
mov
push
lods
pop
cs
(bad)
(bad)
scas
xor
jns
test
ror
mov
fsubr
dec
mov
loop
cld
mov
ins
pusha
push
mov
pop
adc
push
inc
mov
or
push
and
stos
fs
and
mov
ret
cdq
mov
jmp
adc
adc
aad
mov
hlt
imul
icebp
js
pusha
jmp
jbe
mov
jge
dec
push
mov
jmp
adc
jge
sahf
jle
in
sbb
xchg
jns
sbb
les
int
mul
or
push
leave
mov
xchg
sub
pop
loope
xchg
pop
push
pop
and
gs
mov
add
imul
(bad)
push
out
in
pop
scas
test
inc
dec
out
fisub
pop
mov
movs
or
or
ds
add
(bad)
dec
retf
test
test
dec
dec
mov
xlat
mov
sbb
pop
dec
push
sub
in
xor
es
in
inc
inc
xchg
loopne
push
push
sub
jge
jge
lea
xor
mov
inc
enter
test
push
iret
loop
mov
sub
hlt
lods
sbb
push
pop
out
xchg
int3
(bad)
mov
(bad)
push
pop
nop
icebp
dec
imul
mov
inc
sbb
mov
test
xchg
pushf
push
push
call
mov
stos
mov
mov
or
and
stc
pusha
cdq
push
mov
fisttp
and
add
push
mov
lods
cmovno
(bad)
stos
loopne
xor
jo
(bad)
repz
mov
cmp
retf
pop
xchg
fwait
sub
cmp
add
out
mov
(bad)
scas
push
(bad)
ss
and
aaa
jle
xchg
mov
(bad)
inc
push
and
aaa
push
or
sub
add
icebp
nop
pop
sbb
mov
jo
call
add
iret
call
repnz
div
or
nop
loop
arpl
stc
sub
das
dec
out
repnz
mov
add
(bad)
dec
jge
sub
dec
inc
scas
fdiv
arpl
jl
hlt
sbb
inc
sbb
sub
repnz
rol
mov
das
aam
mov
inc
fst
jp
popf
cli
mov
or
add
adc
not
mov
sbb
fsub
xchg
out
mov
pop
imul
into
xchg
inc
sbb
add
add
mov
call
adc
outs
sbb
dec
mov
add
xor
lods
or
cmp
push
sub
push
aad
mov
js
fs
ret
mov
or
and
sbb
jbe
inc
mov
gs
int
rcl
fld
and
int3
mov
loope
or
mov
(bad)
or
sbb
fstp
data16
loop
xor
adc
outs
and
xor
mov
jne
or
cmc
inc
repz
push
sub
pop
sbb
(bad)
mov
(bad)
(bad)
cmp
jg
aas
ret
mov
fwait
popf
xchg
stos
imul
sub
add
or
stc
add
test
push
mov
jmp
xchg
add
sbb
pop
xor
sub
scas
pop
xchg
xchg
mov
popf
test
je
push
jns
mov
cmc
sub
mov
mov
add
mov
rol
imul
bound
cwde
dec
cmp
jge
test
mov
popa
cmp
aaa
sub
fcmovne
sbb
ins
push
jbe
xlat
mov
inc
cmp
fsubr
and
stos
(bad)
into
inc
popa
js
mov
fisub
xchg
test
aaa
mov
and
dec
into
push
retf
test
mov
sbb
stos
(bad)
arpl
cmp
xor
xchg
sahf
movs
adc
cmp
cmp
imul
cmp
or
mov
and
adc
repnz
mov
into
mov
sub
jmp
xchg
sub
mov
dec
sbb
rcl
jo
or
xchg
cli
int
mov
cmp
or
mov
imul
(bad)
rol
xor
mov
shl
or
repz
icebp
test
sub
idiv
jecxz
jge
or
xchg
and
mov
xchg
cs
mov
loopne
rol
sbb
mov
shr
push
pop
cmps
jg
sbb
cwde
push
out
mov
clc
cmp
loope
xchg
add
out
and
retf
jmp
inc
cs
or
jl
push
xlat
mov
jno
fsubr
dec
sub
or
je
xchg
stos
sbb
mov
fwait
push
lods
shr
xchg
sub
shl
int
mov
mov
shl
and
xchg
mov
xchg
jl
std
ret
aad
jmp
das
cmps
xor
lods
(bad)
push
mov
mov
sub
or
(bad)
dec
in
shl
icebp
loope
cmps
add
jb
jae
test
dec
hlt
dec
add
jg
mov
xor
or
(bad)
jnp
pop
mov
mov
or
or
inc
mov
push
cwde
push
mov
cli
test
add
repnz
int3
lods
int3
mov
pop
movs
fdiv
in
stc
cs
popf
(bad)
push
jmp
add
cmp
loope
pop
cmp
mov
gs
adc
inc
aad
pop
fild
adc
inc
pop
fistp
and
std
cmp
sbb
data16
out
dec
(bad)
in
push
add
or
iret
rol
jmp
jae
push
(bad)
mov
xlat
sar
mov
or
push
cmovno
add
test
or
or
push
cs
jl
stos
sub
enter
mov
and
fcom
mov
push
xor
les
sub
cmps
in
fdivr
fidiv
mov
pop
cs
iret
(bad)
(bad)
dec
call
mov
arpl
dec
data16
(bad)
jmp
std
call
adc
es
repz
push
std
mov
inc
or
ins
cmps
das
leave
inc
push
mov
mov
mov
mov
push
dec
push
add
mov
inc
xor
xchg
mov
stc
dec
push
mov
fistp
or
jp
xchg
or
and
cmp
iret
adc
pop
in
adc
dec
mov
push
mov
nop
pop
adc
ins
dec
pop
inc
mov
push
jge
sub
mov
out
repz
adc
out
arpl
add
mov
mov
mov
(bad)
std
lea
das
pop
ss
xor
fmulp
out
mov
es
addr16
mov
and
rcl
aaa
mov
mov
hlt
daa
xlat
push
out
or
xor
xchg
sub
add
lea
enter
pop
mov
xchg
imul
fwait
xor
sbb
lea
xor
jecxz
xchg
push
(bad)
movs
push
jle
mov
nop
and
or
or
clc
vpcomd
xor
cmp
in
scas
dec
push
jg
cmc
mov
add
cmp
rcr
ror
or
and
dec
mov
xor
sbb
scas
out
inc
inc
mov
inc
fsub
mov
xor
pop
adc
sub
jmp
test
leave
fcomip
sbb
outs
ret
scas
fsubr
nop
cld
sbb
scas
cmp
adc
lock
les
cmp
jg
sub
adc
movs
jp
xor
inc
add
data16
mov
push
fadd
xor
xchg
fcmovnbe
push
push
lock
or
(bad)
mov
mov
push
scas
scas
sub
and
adc
sbb
test
mov
and
movs
cmp
xchg
lahf
pop
dec
repnz
les
mov
push
imul
xor
lea
ds
jmp
ret
imul
lock
movs
call
sub
fwait
leave
sbb
stos
push
cwde
sbb
pop
and
enter
addr16
fnsave
out
outs
sbb
scas
movs
out
xchg
int
sub
jg
fisubr
mov
(bad)
pop
sbb
cdq
dec
jnp
shl
lock
or
sti
inc
and
ror
push
adc
adc
fsubr
or
xor
jo
fcom
xchg
add
retf
push
dec
jg
mov
sbb
mov
jge
adc
mov
jmp
mov
test
mov
lods
xchg
xchg
fiadd
xchg
dec
ret
clc
mov
mov
cmps
test
cmps
mov
mov
lods
adc
cmp
xor
dec
in
ret
mov
pushf
mov
jae
pop
inc
jmp
test
adc
stos
sbb
jge
popf
rol
xor
(bad)
jne
jecxz
xchg
or
pop
lods
mov
mov
call
scas
jnp
sti
jmp
in
pop
dec
mov
scas
int3
xchg
xor
int3
and
cdq
rcl
pop
add
loope
push
jnp
cmp
or
xor
add
push
pop
les
lock
jb
cmps
inc
hlt
push
lds
aam
mov
and
pop
or
pop
cmps
in
rcl
rol
xor
les
popa
mov
faddp
mov
jo
mov
xor
aaa
xor
xchg
dec
icebp
out
fldl2e
ja
fisub
inc
xchg
cld
rol
mov
and
dec
sahf
or
push
jg
imul
dec
je
stos
and
jne
or
addr16
xor
popa
mov
add
sub
inc
mov
out
add
inc
add
fidiv
out
mov
dec
or
mov
outs
ins
mov
add
inc
xchg
stc
rcr
aam
fisttp
adc
sahf
jnp
xchg
pop
adc
xchg
add
pop
sbb
xor
cmp
jg
xchg
fcom
xchg
inc
cdq
xor
stos
jno
inc
add
jno
sub
push
fcom
dec
xor
fwait
jns
in
or
dec
jne
or
and
jl
imul
je
fiadd
mov
push
addr16
jne
iret
sub
movs
dec
pop
fst
cmp
push
fnclex
cmp
push
aam
movs
sub
icebp
or
pop
add
cli
popa
scas
mov
call
lahf
add
fst
adc
push
xlat
push
pop
or
pop
push
std
pop
imul
aad
inc
pop
jne
or
mov
push
lods
out
pop
sbb
aad
add
add
mov
mov
stos
cmp
fsubr
inc
jle
inc
cmp
add
popa
jmp
mov
sbb
outs
into
ja
inc
and
pop
hlt
push
cmp
pusha
jmp
daa
jbe
and
or
push
mov
dec
jmp
sub
(bad)
or
inc
js
call
rcl
mov
adc
add
in
mov
test
in
mov
mov
xchg
dec
aaa
stos
test
cmp
je
inc
mov
add
dec
dec
out
sub
xchg
mov
movs
aaa
lahf
xchg
leave
mov
repz
mov
in
out
push
pusha
sub
cmp
jecxz
jge
add
fnstenv
cmp
pop
(bad)
btc
sub
pop
imul
push
loope
or
repnz
idiv
repz
fstp
js
jg
inc
inc
dec
leave
(bad)
(bad)
in
sbb
mov
xor
cli
dec
mov
lahf
movs
retf
sub
pop
outs
mov
mov
pop
xor
int
xchg
jge
sub
hlt
mov
rcr
icebp
imul
jl
int
mov
add
xchg
add
sbb
iret
ret
pop
lock
dec
js
jne
pusha
sbb
inc
imul
lock
mov
xchg
push
add
pop
or
inc
xchg
adc
and
pop
leave
loopne
daa
idiv
mov
or
xor
xchg
std
ja
aad
outs
nop
rcl
ret
cdq
sbb
xor
mov
inc
sar
jnp
fldenv
lahf
adc
sbb
das
jmp
neg
xor
aaa
imul
out
pop
adc
push
test
push
mov
mov
outs
xor
jae
and
(bad)
cmp
pop
ret
(bad)
in
push
sbb
jle
inc
mov
outs
retf
aam
mov
sar
xchg
xchg
cmp
pop
or
nop
inc
push
add
jae
daa
imul
xor
jo
(bad)
out
push
dec
sbb
pop
xchg
ins
pop
stos
and
int3
addr16
fstp
mov
adc
mov
stos
in
inc
gs
inc
dec
repz
mov
dec
fsubr
inc
cld
mov
loop
scas
lods
iret
jmp
sbb
aam
mov
push
out
aam
xchg
xchg
or
pop
out
mov
mov
sbb
inc
popa
or
or
push
lock
js
push
and
mov
bound
shl
enter
rol
fcomp
idiv
mov
jno
mov
scas
mov
fidivr
adc
movs
jecxz
int3
cmp
dec
sbb
sub
and
pop
and
cwde
jmp
pushf
mov
push
cwde
add
sub
shl
push
inc
jne
pop
xor
js
hlt
les
ss
(bad)
stc
sub
in
cmp
inc
sbb
dec
test
sbb
aam
call
adc
add
int
mov
dec
imul
cli
aas
add
or
dec
xor
mov
pop
stc
and
or
add
retf
jae
pop
fdivr
ja
aad
ret
pop
sub
adc
out
push
dec
lds
jne
jb
inc
and
jb
or
mov
cmp
xchg
push
mov
cdq
pop
scas
das
pop
shr
scas
jns
cmp
push
movs
lods
mov
push
add
jle
sub
mov
pushf
mov
outs
mov
mov
xor
pusha
pop
mov
cmps
jg
cmps
pusha
(bad)
daa
jl
int3
mov
xor
mov
ds
dec
xlat
jmp
xor
iret
jmp
add
xchg
dec
xchg
loop
sbb
sub
dec
movs
or
push
call
inc
retf
mov
sbb
and
stos
js
jbe
js
rol
sub
xor
jmp
or
fnstcw
loopne
das
call
dec
jmp
call
or
push
mov
into
mov
cmp
(bad)
aas
out
cmp
nop
sbb
add
push
sbb
das
stc
sub
xor
dec
or
leave
out
mov
std
cld
sub
sub
inc
daa
fwait
sahf
cmps
pop
inc
inc
clc
xchg
adc
ret
sbb
shl
mov
pop
mov
sub
pop
mov
xchg
ins
mov
xchg
cmp
sub
in
outs
gs
dec
hlt
test
or
pop
and
and
jo
ficom
aam
pop
sar
jg
sbb
inc
add
fdivr
loopne
and
fadd
adc
das
mov
call
inc
aas
dec
fild
fwait
jb
jo
adc
enter
inc
loopne
lods
jle
dec
call
imul
imul
mov
fild
bound
daa
ss
stc
jp
call
test
mov
int3
pushf
cwde
add
cmp
inc
rcl
into
cld
mov
xchg
and
call
je
daa
and
mov
rcl
retf
push
cmp
int
stos
pop
push
ret
sbb
fs
dec
stc
xchg
pop
xchg
fmul
mov
test
xlat
enter
or
scas
sub
shr
xchg
xlat
jp
add
(bad)
sub
inc
cwde
xchg
push
sahf
popf
and
ins
mov
imul
fld
or
mov
and
fbld
lods
inc
push
adc
cmp
(bad)
or
inc
cmp
xor
ss
and
test
(bad)
push
ja
jle
jno
lahf
ret
dec
test
fsub
xchg
pop
ret
movs
(bad)
stc
(bad)
enter
jmp
xor
mov
lock
inc
cmps
ja
stos
mov
jp
dec
(bad)
out
hlt
inc
dec
xor
or
daa
jecxz
in
jno
add
arpl
(bad)
cmc
sub
(bad)
repnz
icebp
dec
mov
sbb
into
jg
mov
retf
mov
pusha
inc
ins
xor
iret
push
jp
xor
data16
jae
cmc
sbb
sti
retf
fs
mov
inc
xchg
cmp
adc
mov
into
jo
xchg
std
push
ret
out
int
stos
and
adc
jmp
je
push
fistp
or
mov
in
out
push
sar
retf
jne
adc
pop
lahf
popf
lods
sbb
mov
inc
inc
jge
sub
fistp
lods
popa
xchg
xchg
lds
loope
(bad)
dec
pop
dec
cmp
mov
fwait
cli
les
mov
(bad)
mov
idiv
popa
call
frstor
jne
leave
adc
mov
inc
popf
jbe
hlt
clc
inc
dec
mov
jae
cmc
bts
adc
jp
or
shl
call
sub
sbb
aad
xchg
sbb
shl
clc
clc
inc
aad
add
xlat
dec
add
cmp
adc
test
xlat
xor
inc
(bad)
push
sub
mov
mov
aas
sbb
and
pop
xchg
setnp
mov
xchg
js
dec
out
leave
dec
sar
pop
pop
scas
icebp
fst
push
inc
cmp
mov
cmc
jmp
sub
and
mov
aaa
lahf
(bad)
in
add
(bad)
mov
mov
adc
imul
imul
inc
adc
or
lods
sar
pop
arpl
xor
leave
inc
xor
push
fnstenv
jg
mov
cmc
lock
cmp
inc
nop
mov
add
movs
aam
or
inc
ret
aad
shr
inc
cmc
loopne
cwde
and
out
push
cmp
mov
fild
or
xchg
sahf
dec
and
add
fs
imul
jbe
push
ror
jae
add
mov
jae
dec
lods
dec
cmp
mov
icebp
push
lahf
xor
jmp
jmp
mov
dec
pop
or
mov
sbb
sbb
mov
pushf
sub
jecxz
cwde
in
mov
shl
dec
dec
xchg
enter
mov
jl
imul
xchg
xor
lods
shr
cdq
cmps
or
jg
pop
gs
fstp
jae
jmp
or
fsubp
jl
repz
add
pop
cdq
mov
jp
mov
scas
push
mov
sbb
call
mov
cmps
push
enter
call
mov
pop
push
push
pop
fisubr
and
jno
dec
or
movs
sub
into
sbb
outs
jne
add
xor
icebp
inc
idiv
mov
mov
stos
lock
fucomi
arpl
cwde
jl
icebp
dec
mul
dec
add
adc
cli
cs
cmc
movs
idiv
fistp
or
jns
sub
adc
stos
sbb
push
jg
or
xlat
mov
sbb
inc
scas
icebp
mov
sub
mov
cmp
adc
(bad)
leave
pushf
xor
retf
xchg
loopne
cmp
mov
lahf
mov
iret
cli
cld
data16
in
pop
sub
dec
or
and
ins
mov
aad
lods
xor
fwait
das
pop
cld
inc
xchg
jp
inc
cmc
push
lods
mov
mov
cs
add
enter
xchg
cmc
in
xchg
add
push
int
(bad)
fcom
ss
icebp
pop
out
shr
push
mov
pop
sub
mov
xlat
mov
mov
push
cwde
aaa
jbe
jg
fst
mov
(bad)
sbb
adc
mov
ror
xchg
push
inc
lds
rol
std
cmp
cmp
mov
clc
imul
or
loop
sbb
push
test
fst
xchg
cmp
sub
adc
pop
dec
mov
leave
call
sbb
and
add
lds
and
add
data16
mov
inc
mov
aam
and
sbb
lds
inc
dec
lods
stos
and
mov
out
popa
adc
data16
mov
into
stc
dec
mov
lahf
ss
cmps
fimul
or
ret
or
shl
sbb
aad
cmp
or
mov
loopne
ret
push
mov
ret
(bad)
lock
leave
outs
jo
call
(bad)
pop
jmp
push
jmp
shl
(bad)
imul
inc
scas
movs
ja
mov
out
adc
pop
add
mov
lods
clc
and
pop
jecxz
mov
or
jnp
mov
jb
cwde
add
jo
cld
mov
jecxz
mov
mov
dec
pause
in
mov
ds
movs
and
pushf
out
ror
cmp
add
(bad)
cmp
pop
rol
ins
jmp
ins
test
dec
das
jg
call
mov
inc
xchg
test
pop
inc
(bad)
test
pushf
(bad)
or
ss
adc
xor
inc
and
jno
adc
pop
push
jb
jno
add
mov
dec
fdivr
cs
cmp
push
(bad)
icebp
cmps
(bad)
daa
inc
xor
adc
sbb
mov
rcr
push
jmp
push
out
out
jp
dec
repz
arpl
inc
jnp
sub
mov
mov
dec
and
aam
mov
push
out
ds
cmp
(bad)
fcom
xchg
aad
sub
xchg
call
sub
out
mov
scas
lock
imul
(bad)
mov
mov
movs
jge
rcr
fwait
pop
mov
and
push
cmp
cmp
xchg
inc
jae
and
fiadd
cmp
xchg
lods
loope
sbb
cmp
idiv
adc
or
or
loope
jno
add
aas
ficomp
rcr
stos
dec
icebp
jmp
in
or
xchg
cmp
stos
adc
jmp
push
fld
lahf
and
ret
jecxz
inc
inc
popf
cmps
sbb
add
cwde
ret
in
lock
xchg
push
cdq
out
inc
cmp
pop
xchg
jp
mov
sbb
ins
fist
mov
outs
repnz
jo
xchg
pop
test
into
cmc
and
sub
les
jle
xchg
je
outs
cmp
fsub
(bad)
cmps
inc
fsubr
ja
mov
sub
stos
repz
imul
ds
(bad)
fnstsw
test
xchg
push
int
adc
adc
or
sub
cmps
test
shr
adc
(bad)
retf
scas
ds
sub
fimul
inc
retf
mov
push
movs
idiv
push
fdiv
fwait
ins
movs
ror
mov
sti
sti
std
fs
in
lock
lds
movs
adc
pop
and
scas
dec
mov
in
xor
pop
xor
pop
sub
mov
aaa
sahf
nop
xchg
push
into
icebp
repnz
pop
lock
inc
jnp
push
push
mov
dec
ins
xchg
mov
jecxz
jo
idiv
call
loop
pop
add
jle
sub
pushf
bound
xchg
inc
shl
sbb
cmps
push
mov
aas
jno
mov
and
call
scas
mov
call
add
mov
jns
shr
test
adc
js
jnp
mov
ss
mov
sub
sub
cmp
ret
sar
inc
cmp
call
and
inc
das
out
xor
scas
dec
xchg
xor
mov
xchg
mov
pop
jo
jge
push
push
stc
add
and
mov
jecxz
rcl
hlt
ror
cmc
imul
and
test
loop
mov
push
stos
jge
pushf
les
sbb
pop
loop
and
pop
stc
repz
jo
cwde
inc
jecxz
pop
aam
(bad)
stc
retf
or
retf
in
mov
cmps
xor
rcl
adc
scas
mov
add
pop
pop
int3
jbe
sbb
dec
and
push
loopne
out
idiv
shr
cmp
rcr
pop
jne
xchg
loop
xchg
retf
test
(bad)
push
push
cmp
arpl
xchg
mov
xchg
(bad)
jecxz
hlt
jae
out
mov
jnp
or
mov
shl
cs
je
jns
jmp
lahf
jmp
or
arpl
xchg
push
mov
sub
mov
gs
or
cdq
in
shr
aad
cmp
jns
retf
lea
add
mov
pop
icebp
cmp
enter
xchg
sbb
inc
ffree
inc
cmp
cli
aaa
and
sub
push
lea
xchg
jp
imul
jb
loop
sub
outs
sub
call
sbb
stc
(bad)
sahf
sub
aas
mov
push
sub
xor
(bad)
jns
pop
addr16
cmps
out
rcr
sub
jbe
outs
js
cmp
push
push
pop
mov
and
add
or
sub
sbb
xor
jmp
repnz
icebp
cmp
jge
btc
dec
repz
xor
out
(bad)
fst
mov
dec
test
inc
mov
mov
add
xor
inc
icebp
mov
jmp
mov
adc
out
arpl
enter
(bad)
pop
jmp
test
call
retf
outs
push
test
stos
fistp
daa
sub
mov
jmp
(bad)
jmp
mov
push
inc
scas
daa
lock
mov
repnz
lds
sub
pop
outs
outs
mov
repnz
daa
repnz
gs
xor
dec
call
ins
jno
xor
or
jg
imul
aas
dec
sub
ja
cmp
xor
jp
push
adc
xchg
jns
lds
aas
adc
data16
mov
cmp
stos
push
add
pop
xchg
xchg
sbb
ret
daa
dec
inc
rcr
js
jg
lahf
xor
mov
(bad)
mov
inc
out
aas
cmp
dec
sbb
mov
xchg
fisttp
push
ret
push
jns
sbb
ret
push
cmp
fld
pop
sbb
xchg
stos
enter
push
fmul
aam
cmp
pop
cmp
ja
mov
add
jg
cmps
ror
add
jp
or
push
cmps
or
stos
movs
pop
or
addr16
inc
xchg
test
ror
dec
sbb
mov
inc
jo
retf
stos
inc
dec
and
mov
sbb
lea
(bad)
jl
lea
jno
les
movs
mov
push
dec
fisttp
xchg
das
fidiv
sti
cld
pushf
push
(bad)
retf
push
jg
xchg
and
cmp
int3
test
jns
jge
in
jle
cli
add
jp
inc
jo
shr
pop
popa
dec
ins
adc
mov
sbb
pop
std
(bad)
iret
push
pop
sbb
(bad)
pop
sbb
sub
push
pop
repnz
hlt
cwde
inc
jecxz
iret
cmp
gs
test
retf
sbb
cmps
pop
or
scas
xchg
inc
push
adc
sub
and
mov
int
add
(bad)
std
dec
scas
les
sub
cs
fst
call
pop
mov
mov
mul
xor
cmp
or
fs
jo
pop
(bad)
jp
dec
movs
pop
fdivr
adc
shl
sar
and
xor
adc
enter
or
pop
mov
movs
push
adc
mov
fstp
add
ss
or
mov
lahf
dec
lds
cmp
sar
aas
mov
sub
jecxz
loop
(bad)
mov
or
or
fisubr
scas
mov
retf
push
cwde
das
rcl
fmul
xor
add
adc
mov
jg
xchg
out
adc
fwait
bound
pusha
fsub
in
dec
rcl
push
xlat
or
repnz
or
jns
mov
xor
repnz
pop
mov
adc
(bad)
jno
sbb
(bad)
cmp
pop
cdq
xor
jo
sub
jge
cmp
xor
or
xchg
dec
cmova
jns
lahf
data16
or
push
push
adc
cmp
sahf
mov
bswap
fwait
fs
mov
mov
cmp
je
fisubr
(bad)
and
jnp
dec
call
push
adc
vmread
or
ret
ret
inc
pop
jg
and
push
pusha
popf
out
repnz
inc
ret
(bad)
test
sbb
adc
jno
gs
or
sahf
pop
or
ds
sub
jmp
add
jae
and
les
popf
loopne
rol
or
and
add
fsubr
jecxz
jecxz
jae
mov
idiv
lds
mov
add
popf
jae
call
pop
mov
fild
xchg
fild
das
dec
push
imul
pop
dec
jmp
cmps
dec
rcr
jns
mov
outs
mov
call
aas
rcl
xchg
push
fsubr
cmp
mov
push
pop
inc
fbstp
(bad)
mov
sbb
xor
mov
pusha
dec
jnp
das
cmp
pop
loope
mov
mov
fst
imul
cmp
mov
or
dec
sub
(bad)
mov
test
arpl
mov
test
scas
pop
cmp
shl
les
sub
inc
aam
push
cmc
adc
jg
(bad)
in
push
repz
cwde
out
mov
dec
retf
ds
push
pop
(bad)
mov
sub
inc
int
dec
push
mov
adc
unpckhps
jmp
clc
test
pop
enter
and
pop
enter
mov
cmps
stos
cld
or
sbb
push
(bad)
std
xchg
out
pop
inc
pop
or
adc
cmps
fisub
cdq
sub
imul
cli
lods
mov
mov
stos
out
icebp
adc
out
ror
add
inc
jae
dec
add
jg
pop
push
sar
jl
fdiv
sbb
inc
jns
mov
into
bound
add
jp
and
fidiv
lock
mov
push
pushf
retf
mov
inc
mov
or
add
movq
mov
jg
or
and
add
les
fimul
mov
dec
stc
sar
repz
(bad)
push
jne
popf
fisttp
adc
imul
aaa
mov
adc
mov
push
ds
cli
bound
mov
in
dec
xchg
mov
sbb
repnz
and
jl
adc
pop
js
and
xchg
inc
pushf
mov
ret
push
fnstsw
xlat
add
in
push
frstor
test
lahf
mov
jns
shl
std
pusha
pop
mov
repz
and
retf
lea
cmp
xor
aaa
loopne
mov
jp
xor
mov
mov
(bad)
add
sub
cmps
sub
inc
ret
cmp
jecxz
push
arpl
(bad)
mov
scas
nop
movs
mov
jmp
add
mov
sub
rcr
pop
cmp
mov
lods
xchg
imul
adc
dec
xchg
(bad)
mov
jmp
dec
push
std
shl
and
fwait
mov
push
mov
popf
jmp
pop
xor
mov
stc
mov
jns
fbstp
adc
test
jp
leave
loope
out
fs
stos
cmp
retf
jno
inc
jo
adc
mov
and
mov
cmp
sub
in
mov
jmp
imul
ins
adc
mov
test
in
or
rcr
and
jmp
cwde
(bad)
xchg
pusha
push
ror
imul
out
pop
mov
fs
sbb
adc
mov
dec
std
and
test
loop
add
mov
lods
lahf
mov
jmp
outs
and
movs
je
mov
imul
in
sub
pop
(bad)
mov
jecxz
mov
mov
jmp
xchg
test
pop
nop
cwde
add
scas
cld
add
or
cmp
or
icebp
(bad)
nop
int3
and
and
add
xchg
fwait
jmp
xor
loopne
ja
hlt
out
jg
dec
xor
sar
xchg
lahf
xor
mov
inc
test
loop
cli
xor
mov
pushf
enter
xchg
ret
xchg
(bad)
push
and
imul
movs
pusha
scas
je
pop
xchg
fwait
inc
sub
(bad)
mov
push
pop
mov
js
arpl
lods
add
setge
pushf
div
xchg
in
mov
sub
xor
popf
add
sub
pop
scas
inc
gs
push
lods
movs
adc
lods
mov
bound
mov
xchg
mov
jo
inc
xlat
mov
add
sar
nop
jmp
js
lahf
scas
dec
into
pop
lock
jnp
dec
dec
int3
xor
mov
sub
fisubr
out
stos
lahf
pop
jg
sbb
jle
jle
push
sbb
sbb
inc
adc
jg
jnp
popa
sahf
jp
clc
jg
and
sahf
xchg
or
add
sbb
(bad)
std
dec
out
pop
mov
sub
ins
inc
stos
mov
sbb
jb
fs
stos
fcmovb
lds
and
sti
fisttp
jo
adc
and
mov
cmps
test
adc
jns
mov
popa
sub
idiv
cli
xor
and
cli
jno
dec
sbb
or
mov
dec
or
or
les
lahf
(bad)
in
xchg
fisubr
sub
or
ficom
inc
adc
ror
push
hlt
daa
mov
and
ret
(bad)
fld
outs
mov
xchg
lahf
jae
jnp
mov
cmc
jl
sbb
or
mov
mov
sbb
ret
lock
ffreep
adc
popa
loopne
inc
stos
leave
lods
inc
out
pop
jg
jge
sbb
in
push
dec
repnz
pop
mov
or
movs
inc
pop
fcomp
lock
in
jne
sub
cmp
fistp
aas
stos
stos
xchg
in
ins
mov
cmp
fwait
sbb
std
jmp
mov
fld
mov
iret
idiv
pop
pop
xor
mov
jae
pop
test
cmc
push
clc
and
xor
pop
(bad)
and
xchg
movs
(bad)
mov
push
retf
call
xchg
ret
in
stos
jmp
xor
jecxz
mov
outs
xor
jb
jne
fld
rcl
xchg
xchg
(bad)
int3
cdq
jb
test
jge
adc
jl
daa
out
pop
sbb
mov
rcl
out
mov
xchg
sub
pop
pop
mov
push
cmp
or
es
fwait
arpl
out
and
fwait
cmp
xor
pop
outs
push
jns
call
jecxz
sub
std
jle
test
push
sbb
jmp
(bad)
xor
mov
pop
bound
xchg
dec
fdiv
sub
dec
iret
jae
jmp
fsubrp
pop
stc
bnd
xor
jo
jns
stos
pop
dec
pop
xor
out
retf
sahf
repnz
mov
shl
inc
mov
shr
add
jae
push
mov
aad
ins
loopne
mov
ror
cmp
xor
mov
in
mov
imul
cwde
outs
ret
and
xlat
adc
sub
hlt
sti
ins
clc
ds
jp
push
cmp
pop
jg
call
add
ja
xor
pop
inc
div
adc
retf
push
jl
mov
and
stos
mov
inc
outs
inc
dec
(bad)
jecxz
mov
or
xor
pop
ret
mov
dec
mov
mov
out
jmp
rcr
clc
sbb
out
adc
jge
inc
ret
into
xchg
gs
call
inc
pop
pop
push
dec
jno
shl
jp
mov
xchg
sub
test
mov
lds
mov
push
repz
sti
inc
xor
inc
aas
shl
jl
mov
es
inc
inc
or
imul
test
(bad)
jecxz
shr
pop
neg
test
cdq
rcl
ins
inc
out
mov
mov
jbe
cmp
pop
test
pop
imul
mov
packuswb
mov
icebp
adc
mov
inc
out
or
push
icebp
lds
fimul
aaa
(bad)
pop
sbb
inc
xchg
xchg
mov
scas
test
cmp
mov
jno
out
and
mov
pop
xchg
ins
test
fist
adc
ret
xchg
mov
inc
push
cmp
test
dec
lods
or
xor
push
sbb
(bad)
fld
mov
sahf
xchg
scas
div
daa
stos
add
mov
fwait
push
add
dec
in
add
jne
ror
xor
add
retf
addr16
stc
xor
add
sti
and
pop
aas
(bad)
cdq
movs
mov
(bad)
dec
call
inc
push
mov
dec
loop
mov
xchg
dec
bound
jg
sbb
call
lds
adc
push
ins
aam
out
outs
cmp
dec
aas
sub
dec
aaa
shr
jg
mov
in
scas
outs
or
jecxz
int3
mov
jmp
jle
or
and
add
dec
imul
push
out
inc
mov
sbb
mov
sub
lods
adc
inc
cmc
xor
jns
mov
mul
and
sti
mov
fiadd
push
sbb
pop
(bad)
pop
ja
cwde
mov
adc
mov
test
add
fsub
js
xchg
cmp
fdiv
test
xchg
cmps
sub
jge
inc
sti
movs
sub
dec
pop
jp
pushf
lods
mov
mov
jae
mov
daa
push
call
mov
jp
sub
dec
in
out
pop
jnp
pop
xor
aaa
push
loope
cmc
dec
in
repnz
ins
ja
aam
or
shl
push
daa
cmp
fisubr
push
fldcw
mov
(bad)
(bad)
hlt
pop
fwait
add
xor
ss
sub
retf
sub
int
fist
shr
sahf
lods
push
ds
in
sbb
pop
rcl
cmc
sbb
outs
enter
pop
dec
movs
xchg
aam
sub
lods
retf
pop
test
(bad)
and
mov
addr16
add
stos
repz
and
data16
enter
jp
xchg
push
lock
inc
mov
outs
jo
pop
mov
pusha
sbb
rcl
call
push
inc
inc
mov
mov
cmps
(bad)
int3
or
les
dec
cld
mov
outs
lea
cmp
or
aad
stc
pushf
dec
outs
mov
lahf
and
adc
es
adc
push
mov
adc
inc
aaa
add
sbb
mov
lahf
xlat
ins
stos
ins
retf
fldcw
enter
add
test
inc
mov
and
or
push
jg
xchg
dec
mov
lea
out
push
out
fbstp
aam
mov
sub
adc
pop
pop
das
mov
mov
push
xchg
ja
add
xor
fsub
push
inc
jb
xchg
rol
cwde
mov
dec
sub
out
add
adc
mov
dec
sub
(bad)
mov
lahf
icebp
adc
mov
in
scas
mov
fld
clc
adc
lods
frstor
pop
test
(bad)
dec
mov
inc
jae
test
aam
sbb
aaa
dec
jbe
mov
push
xchg
in
out
sbb
xchg
sbb
jnp
int3
push
cli
pop
pop
enter
in
sub
data16
aad
and
icebp
les
call
shl
loope
cmp
mov
inc
cmp
mov
les
pop
sbb
dec
mov
test
(bad)
pop
inc
shl
mov
into
out
fs
inc
lss
js
jae
je
fiadd
in
pop
inc
or
aas
push
sar
mov
mov
in
dec
es
cmp
call
cmp
pop
cmc
jecxz
stc
jecxz
(bad)
xchg
scas
push
test
mov
in
pop
js
mov
inc
lea
mov
xor
mov
xor
fisub
scas
or
sbb
pop
dec
in
add
icebp
sbb
stos
rcr
sub
retf
add
ja
test
add
pop
adc
cmp
jle
mov
lea
or
or
fisub
cmp
xchg
dec
(bad)
retf
adc
enter
into
xor
les
cmc
test
jecxz
and
shl
lods
cwde
ss
pop
xor
test
mov
xchg
sub
push
ins
js
mov
inc
fisub
xchg
call
mov
ficomp
jp
pop
retf
or
stos
shr
sub
mov
lock
jae
mov
lds
cmp
jnp
cmp
xchg
or
xlat
pop
adc
cs
sub
dec
std
mov
cmc
repnz
adc
jns
pusha
and
scas
and
lds
mov
pop
cmps
xchg
pop
inc
pop
in
daa
sbb
add
mov
sbb
push
mov
mov
sbb
and
add
pop
pop
jmp
jo
(bad)
(bad)
in
jp
xor
fisubr
scas
(bad)
xor
inc
mov
sbb
dec
sub
add
xor
and
adc
out
stos
retf
leave
stc
xchg
sub
fisttp
scas
push
xchg
lock
xchg
jl
xor
lods
mov
push
or
cmp
sbb
jecxz
dec
cld
mov
sub
dec
cmps
add
pop
lea
pop
mov
mov
or
mov
and
sbb
mov
das
shl
lods
repnz
cmp
and
and
add
fdivrp
xchg
(bad)
test
pop
ret
jp
xchg
call
pop
pop
mov
(bad)
in
jle
clc
nop
arpl
shl
leave
dec
xchg
push
or
xchg
or
imul
test
or
dec
push
adc
stos
or
lock
out
ins
adc
hlt
adc
pop
lods
daa
mov
mov
jmp
or
adc
retf
sub
arpl
or
js
inc
add
test
push
gs
push
daa
pop
aaa
pop
lods
hlt
nop
push
adc
pop
dec
jb
popf
mov
out
fild
ins
out
gs
jge
lods
push
call
mov
pop
mov
jnp
inc
dec
inc
ret
sub
mov
iret
jb
out
sub
inc
xchg
call
lahf
pop
test
pop
scas
xchg
hlt
movs
jo
pop
push
inc
pusha
pop
add
xchg
in
jae
das
and
cmp
sub
call
addr16
push
lds
call
loopne
nop
sbb
ret
add
cmps
neg
iret
xchg
movs
(bad)
out
pop
mov
aam
fbld
pop
cmc
sub
add
mov
mov
int
imul
add
mov
sbb
(bad)
stos
xor
xchg
mov
xchg
dec
pushf
and
dec
fadd
inc
adc
and
xchg
push
outs
mov
xchg
add
repnz
xor
mov
push
leave
sbb
out
push
arpl
push
aas
in
retf
mul
ja
sbb
int
jo
inc
or
mov
out
test
lock
mov
(bad)
fidivr
cwde
mov
idiv
jge
fstp
das
cli
mov
push
xchg
mov
or
add
xchg
push
ret
movs
je
and
int
mov
inc
aad
test
xchg
add
clc
aas
sub
jmp
pop
sbb
adc
inc
mov
xchg
fisubr
adc
pop
(bad)
imul
out
ss
mov
mov
sar
pop
mov
das
not
mov
mov
lea
fyl2xp1
(bad)
retf
mov
pop
add
inc
or
lods
scas
push
inc
pop
cs
test
sub
xchg
clc
repnz
hlt
out
or
sub
hlt
lea
addr16
std
gs
jecxz
test
popa
adc
jge
mov
xchg
jb
or
pop
mov
pop
pop
xor
rcl
jle
mov
inc
cli
aaa
sbb
pop
scas
inc
aam
xchg
pop
mov
std
mov
fs
sbb
inc
int3
ins
mov
push
test
fwait
sub
pop
aas
cmp
add
enter
sar
push
int3
or
jno
js
and
and
mov
in
push
or
test
mov
mov
xor
outs
jb
or
sbb
mov
xchg
arpl
out
sar
mov
add
jne
mov
shl
shl
es
imul
pop
int3
dec
aad
pop
mov
push
mov
dec
mov
daa
stos
sbb
pop
lahf
repnz
sub
sub
(bad)
pusha
inc
mov
jae
mov
out
inc
xchg
mov
sbb
fld
retf
xlat
call
push
dec
cmp
out
je
leave
mov
sub
test
dec
xor
rcl
xchg
jmp
add
mov
or
stos
mov
retf
lods
fisubr
fistp
push
shr
push
sub
jbe
retf
int
inc
add
mov
mov
mov
jmp
mov
mov
mov
mov
(bad)
mov
stc
bound
sbb
iret
loope
lds
repnz
push
shl
jge
aas
xor
dec
neg
repz
push
mov
dec
lods
rol
clc
xor
jp
push
adc
in
call
and
push
push
and
mov
mov
leave
dec
ins
add
mov
pop
sbb
hlt
lahf
cmp
xchg
dec
mov
sar
(bad)
retf
mov
jle
sahf
jo
(bad)
mov
adc
ja
adc
push
jnp
add
pop
jge
mov
mov
jbe
dec
xor
push
xor
push
sub
xchg
rol
push
pushf
fimul
fiadd
dec
ret
xchg
fcom
sbb
icebp
sub
scas
std
or
jge
xor
loop
aaa
out
out
pop
aam
mov
adc
lock
out
pop
pop
inc
add
sub
and
es
sti
mov
add
push
pop
fld
jg
xor
mov
inc
mov
jmp
test
cmp
ret
push
(bad)
pushf
dec
test
xchg
pop
adc
xor
rcr
pop
jno
add
fist
pop
sbb
std
loop
into
sbb
push
adc
adc
lahf
aas
sbb
int
mov
mov
xor
xor
push
or
cmp
pusha
and
and
fnstsw
push
mov
xchg
es
push
shr
pop
(bad)
cmc
push
sub
mov
dec
adc
or
cmp
cmp
and
pushaw
push
int
std
mov
sbb
mov
lods
pop
mov
jbe
xchg
or
enter
iret
push
lods
int
arpl
mov
repnz
test
push
fwait
cmps
leave
xchg
fld
icebp
xchg
and
xchg
jno
cmp
dec
sbb
xlat
push
in
mov
(bad)
mov
jnp
loope
inc
mov
repnz
adc
leave
stc
les
mov
inc
xchg
jns
adc
aaa
hlt
or
or
pop
fadd
xor
not
and
and
jae
aas
ds
xor
jl
cli
in
and
lock
(bad)
cmp
add
push
les
sbb
jecxz
and
out
cmps
and
xlat
pop
mov
inc
ret
sub
fadd
les
lock
inc
mov
not
xchg
mov
outs
ret
fs
in
adc
(bad)
call
mov
retf
rcr
je
xchg
mov
stc
fistp
jae
sub
cmp
shl
in
pusha
sbb
rcr
sub
pusha
cmp
in
mov
daa
std
xor
xor
mov
dec
inc
lock
mov
pushf
cmp
es
adc
in
xor
jo
xor
push
pop
sub
sahf
mov
push
push
(bad)
std
loope
pop
sub
in
(bad)
push
dec
aad
push
jecxz
jnp
out
int3
ss
test
hlt
hlt
loopne
ds
scas
sub
(bad)
icebp
sbb
xlat
fisubr
dec
or
es
mov
popf
popf
mov
sub
cli
sbb
or
test
dec
cmps
(bad)
repz
mov
jmp
push
mov
out
out
push
fld
cmp
dec
scas
pusha
and
hlt
pusha
cmp
inc
sub
dec
les
(bad)
aas
retf
inc
ret
lods
inc
cmps
shl
sbb
lahf
rcr
cli
repnz
sbb
adc
das
out
xlat
cmc
(bad)
cmps
cmp
add
inc
mov
scas
clc
scas
pop
or
stos
xchg
imul
inc
push
shl
mov
jge
jae
push
neg
fst
push
mov
(bad)
dec
add
imul
jb
mov
sahf
xchg
jne
repnz
(bad)
stos
mov
add
fisubr
jnp
cmp
pop
inc
adc
jl
add
loop
fidiv
cmp
and
inc
push
cmp
jb
repz
(bad)
jns
pop
outs
shl
inc
mov
jp
push
das
mov
je
xor
push
inc
pop
mov
and
or
mov
inc
cmc
ror
sub
sub
in
lock
test
mov
push
add
jg
xor
jge
jmp
mov
cli
in
cli
rol
loope
test
pop
xchg
lea
or
in
sbb
es
lahf
jne
and
lds
cmp
test
xor
dec
dec
mov
fcom
ret
dec
cmp
pop
out
jmp
stos
mov
pop
pushf
mov
cmp
rol
mov
pushf
dec
std
and
nop
jp
sbb
add
add
femms
mov
gs
push
push
sub
sbb
not
jp
add
mov
xchg
(bad)
mov
aaa
nop
enter
pop
pop
sbb
mov
mov
sbb
and
call
push
or
xchg
movs
xchg
imul
aam
(bad)
mov
mov
sub
pop
pop
xchg
pusha
aad
jmp
sbb
cld
mov
(bad)
(bad)
dec
jae
out
hlt
in
mov
dec
fisub
or
es
into
cs
xchg
push
jae
fimul
gs
jnp
popf
mov
sbb
mov
popf
and
mov
into
push
cmps
adc
push
(bad)
jae
jbe
loopne
dec
xchg
mov
dec
hlt
out
test
pop
int3
push
jmp
pop
push
pop
mov
sub
out
fdiv
pop
sbb
xchg
retf
sbb
test
jnp
das
push
push
sub
pop
outs
jno
fmulp
mov
idiv
mov
lods
scas
clc
fdivr
cmp
xchg
xor
test
mov
inc
popa
xor
js
fsub
adc
mov
dec
lea
outs
lods
inc
loop
sub
pop
mov
pop
xchg
movs
retf
stos
adc
call
test
cs
ja
cmp
add
mov
mov
into
pop
retf
sbb
jge
fmul
push
test
adc
xchg
cmp
inc
ins
xchg
xchg
das
inc
sub
aas
mov
dec
(bad)
(bad)
adc
jbe
xor
mov
cwde
push
jno
mov
pop
cwde
movs
cmp
or
adc
ins
shl
aas
lods
adc
mov
sbb
(bad)
xchg
mov
sub
cdq
fs
dec
call
and
jl
je
lds
out
mov
(bad)
sbb
mov
sar
pop
dec
icebp
sub
leave
es
out
xchg
out
pop
in
ins
test
adc
pop
pop
addr16
int3
sub
mov
popa
jge
sbb
sbb
cmp
cwde
mov
ds
cdq
adc
hlt
aas
out
out
inc
in
(bad)
mov
retf
les
add
push
mov
jns
add
lock
sbb
idiv
dec
cwde
fwait
cmps
mov
mov
jmp
xchg
xchg
imul
add
outs
pop
jmp
mov
inc
pusha
push
sub
leave
fcomp
in
(bad)
cs
les
(bad)
shl
or
popf
mov
or
int
dec
test
xor
cwde
out
add
stos
sbb
mov
nop
add
repnz
sbb
cmc
sub
push
hlt
cmp
jae
fld
je
cs
dec
mov
jnp
jecxz
push
fsub
sar
in
jbe
inc
inc
adc
xchg
push
sahf
stc
les
mul
and
js
inc
mov
test
cdq
call
popf
movs
ret
sbb
fiadd
out
xchg
sti
ins
cmpps
pop
cwde
jmp
cmp
mov
dec
add
inc
mov
add
(bad)
rol
xlat
pop
or
push
push
lahf
push
fdivr
pop
sbb
fs
pop
gs
scas
xchg
in
xchg
dec
into
pop
loopne
push
push
ins
js
gs
addr16
adc
mov
inc
dec
mov
cdq
cld
mov
retf
cwde
call
xchg
in
sub
sub
inc
gs
push
xlat
or
or
repz
mov
cmp
fisub
fmul
sahf
cli
test
rol
mov
inc
mov
ja
idiv
ret
arpl
pop
push
mov
push
lds
mov
into
cmps
pop
sar
mov
mov
xor
repnz
and
out
popf
cmp
push
push
push
and
or
jo
cdq
jl
(bad)
cmp
int
das
cwde
jbe
leave
mov
test
daa
mov
(bad)
push
mov
mov
dec
call
outs
nop
xor
inc
std
rcl
icebp
sub
es
adc
sti
mov
xor
lea
jge
xchg
fsubr
mov
cwde
cmp
push
sbb
(bad)
cli
rcr
les
jne
lods
rcr
imul
packssdw
jo
sub
fdivr
sub
add
test
mov
setbe
mov
xor
in
lods
ret
mov
iret
lahf
xchg
movs
mov
mov
inc
fild
adc
aam
std
pop
sbb
jmp
sub
sub
jb
scas
ins
jb
cmp
dec
fdivr
mov
pop
popa
adc
add
inc
and
sbb
dec
xchg
aam
sbb
ret
mov
sbb
xchg
cs
inc
icebp
cmc
add
cmp
mov
iret
jbe
popf
sbb
fist
call
jno
pop
mov
clc
push
push
loope
es
shl
or
push
inc
jno
bound
jmp
sbb
pop
call
test
or
and
gs
retf
mov
ret
inc
mov
test
shl
mov
xchg
cmp
repz
in
loop
fimul
push
(bad)
clc
and
fidiv
xchg
xchg
xchg
mov
out
rcr
sbb
les
in
lods
icebp
push
movs
dec
xchg
pop
(bad)
aaa
mov
xor
and
loope
int
jb
jnp
xor
jmp
shr
(bad)
dec
fwait
cmps
sbb
inc
(bad)
mov
mov
sbb
xor
mov
rcl
or
and
push
ins
imul
or
cmp
xor
and
out
sub
push
fs
xor
add
push
rcr
out
fcomp
xor
in
sbb
bound
cdq
mov
adc
and
and
clc
mov
and
call
mov
dec
stos
into
popf
or
mov
inc
push
fidiv
cli
retf
fdivr
sti
dec
sub
cmp
repnz
in
ins
xor
in
adc
xor
aaa
inc
mov
mov
dec
fnstcw
inc
push
cmp
test
es
fbstp
ss
fistp
add
jmp
(bad)
mov
fdiv
jle
into
push
sti
movs
jne
(bad)
repnz
mov
ins
(bad)
(bad)
mov
xor
fistp
jg
hlt
mov
fs
xor
inc
jmp
popf
mov
pop
in
jbe
shr
movs
jno
pop
cmp
mov
or
lock
cmp
outs
int
add
jge
xchg
scas
xchg
cmp
jecxz
mov
mov
je
scas
mov
sbb
inc
jbe
xchg
in
ror
sbb
add
adc
mov
dec
sbb
fst
in
out
bound
fld
stos
pushf
cdq
nop
or
leave
sbb
or
mov
adc
sbb
and
push
pop
repnz
daa
mov
idiv
adc
push
jmp
shl
adc
xchg
inc
pop
jo
push
pop
push
and
imul
arpl
or
xchg
mov
and
retf
xchg
lods
in
jmp
outs
push
mov
pop
jmp
xor
push
cld
xchg
push
jge
adc
or
sbb
fbld
xchg
jb
pusha
adc
xchg
imul
lods
jno
mov
sbb
mov
sbb
cmp
add
sub
and
add
fcom
mov
dec
cld
adc
mov
inc
push
mov
fsub
loope
jg
sbb
jae
ja
xor
jmp
(bad)
dec
out
adc
sbb
cmps
imul
loope
push
mov
dec
mov
mov
aas
dec
in
scas
cmp
out
int
test
mov
clc
push
mov
aam
sbb
jl
dec
ins
push
or
dec
test
xchg
adc
mov
push
cmp
xchg
cmc
sbb
dec
out
pop
sahf
pushf
push
ffreep
dec
dec
outs
ret
ret
stos
inc
dec
dec
pop
push
stc
les
imul
mov
ret
les
add
sub
xlat
add
dec
in
pop
push
xchg
mov
and
daa
aad
dec
outs
xchg
xor
ja
sub
jno
mov
sbb
fsubr
jno
jmp
fadd
into
mov
fsub
add
jo
imul
push
nop
dec
jg
(bad)
(bad)
dec
xchg
shl
shr
imul
imul
in
pop
lds
ret
cmps
add
test
mov
mov
out
ss
cmp
adc
fld
out
imul
loop
inc
pop
xchg
(bad)
out
cdq
pop
sbb
xor
retf
out
push
cmps
pop
cli
or
(bad)
cli
mov
inc
inc
addr16
add
inc
sti
add
movs
and
outs
mov
dec
outs
fldenv
add
scas
mov
adc
xchg
ja
aam
loopne
fild
les
stos
fistp
js
stos
inc
push
or
jb
mov
push
das
or
test
sub
mov
repz
sahf
push
test
and
xchg
les
xchg
xor
sbb
test
fdivr
jns
addr16
daa
outs
cmp
mov
retf
iret
test
jno
lahf
sbb
test
das
inc
adc
out
bound
adc
mov
or
(bad)
fisttp
(bad)
mov
sbb
repz
stos
and
xchg
into
test
test
cs
rcr
pop
xchg
cmp
ds
mov
and
cmp
sub
push
sbb
jbe
mov
add
mov
and
pop
mov
or
mov
aas
aas
dec
ja
adc
rcr
jnp
div
xchg
scas
cmc
mov
scas
jmp
cmp
sbb
test
and
popa
dec
enter
jp
sub
push
dec
out
in
scas
data16
lds
push
pop
mov
jnp
inc
jmp
xchg
bound
shr
mov
cmp
push
mov
push
pop
fistp
outs
sub
and
sbb
push
cmp
icebp
stos
and
dec
mov
and
std
rcr
nop
add
mov
and
jb
or
fnstsw
rol
adc
xchg
and
cmp
fwait
icebp
jge
out
mov
inc
rcr
cmp
dec
xor
out
arpl
ret
popa
xchg
sub
out
(bad)
cmc
les
cdq
inc
gs
in
sbb
outs
sbb
in
pop
aam
gs
cdq
push
in
hlt
dec
xchg
dec
pop
sbb
cmp
fwait
push
add
pop
dec
sti
(bad)
js
add
outs
sub
out
sbb
xor
repnz
mov
sub
inc
(bad)
popf
pusha
cli
xor
stc
test
push
inc
mov
jo
push
add
dec
out
les
pushf
push
call
sub
mov
in
jbe
(bad)
xchg
cwde
push
scas
scas
outs
or
nop
add
pop
jnp
push
xchg
and
movs
dec
jbe
add
mov
cld
pop
fyl2xp1
in
xchg
lods
leave
leave
xchg
repnz
adc
fwait
sbb
adc
jno
cld
pop
dec
add
jno
jo
sbb
jns
mov
mov
cmp
push
push
movs
inc
mov
and
int
out
addr16
and
ret
scas
lock
pop
sti
jl
or
add
jne
lea
jbe
sbb
sbb
pop
fisttp
rcl
mov
dec
cld
js
sbb
inc
mov
sub
pop
mov
jne
call
dec
aam
inc
inc
cmp
pusha
cmps
(bad)
sti
sub
jns
mov
shr
push
aas
int
repnz
mov
mov
lods
mov
out
push
inc
dec
loopne
in
fcom
test
div
or
cli
pop
xchg
les
push
push
retf
jae
lods
xchg
xor
outs
sub
jno
iret
inc
jecxz
lds
call
jb
push
pop
jno
call
sti
mov
in
inc
fwait
sub
mov
aam
sbb
into
pop
call
xor
mov
jae
ss
shl
and
lds
mov
fwait
mov
dec
outs
and
cmp
and
xor
repnz
pop
xchg
fisttp
loop
out
neg
xor
popf
cmps
loop
in
mov
xchg
in
cmps
add
imul
inc
mov
add
mov
(bad)
cmp
add
sub
movs
call
ds
nop
ins
jmp
and
jg
stos
rcr
popf
rol
ret
ja
adc
sbb
sbb
push
xor
cmp
test
ds
xchg
icebp
pop
(bad)
inc
sbb
and
int3
xchg
inc
lea
and
bound
imul
xchg
stos
push
sti
or
icebp
in
push
rcl
fs
jg
sti
retf
inc
mov
jmp
push
sub
scas
inc
movs
xor
push
ins
inc
jnp
dec
xchg
add
sbb
or
or
or
je
cmp
and
cld
adc
rcl
mov
sub
or
push
jl
(bad)
jae
repz
cmc
adc
retf
inc
dec
js
xor
push
jbe
sbb
cmc
jbe
inc
mov
std
fdiv
pusha
test
enterw
jmp
fimul
or
test
mov
sar
gs
inc
jbe
aas
push
push
mov
adc
ss
sub
xor
cmp
fcomp
popf
dec
mov
sub
jle
inc
cli
cmp
mov
mov
pop
vpmulhw
daa
mov
pop
std
fwait
pushf
or
mov
aad
adc
outs
cmp
adc
cmp
mov
cmps
cmps
jbe
loopne
stos
pop
pusha
ds
sbb
xchg
les
xor
into
push
sbb
jbe
sub
rcr
(bad)
cli
jg
loope
mov
mov
cmp
jno
adc
retf
cmp
ret
sti
jg
add
adc
or
cmp
in
dec
iret
(bad)
xor
and
inc
fisub
addr16
pop
fst
rol
xor
inc
int
cmc
(bad)
icebp
es
cwde
sub
je
out
iret
sbb
gs
lahf
movs
and
mov
adc
leave
jno
inc
mov
inc
cld
cmp
add
cmp
inc
dec
in
pop
stc
xor
in
inc
xchg
in
xor
dec
lahf
out
and
cmp
lahf
xor
stc
mov
jmp
aam
test
push
(bad)
out
jge
xchg
fisub
add
mov
jnp
xor
in
mov
mov
or
xor
out
pop
sti
ss
or
std
sub
psubusb
mov
xchg
fadd
jbe
push
cdq
ss
push
sbb
add
xchg
pusha
lahf
idiv
pop
pop
xchg
lods
int
in
es
or
pop
cli
jb
jge
cmps
outs
loopne
std
push
stos
rcr
sbb
pop
push
mov
ja
jmp
cmp
mov
inc
or
cmp
dec
mov
in
mov
fdivr
push
fld
aaa
mov
mov
or
pop
add
lds
push
xchg
(bad)
out
imul
dec
lahf
sub
adc
mov
dec
js
cmps
or
cld
fcmovnb
lods
ins
sbb
mov
cmp
leave
lods
xor
retf
xchg
jmp
retf
addr16
bound
cmps
dec
inc
shl
(bad)
dec
mov
vaddps
in
dec
or
mov
outs
sub
outs
outs
jae
push
jp
pop
xchg
retf
jecxz
mov
pop
inc
xchg
aad
mov
ds
push
pusha
fnstsw
cmp
and
push
cmps
jge
lods
xor
inc
add
arpl
adc
or
int
std
stos
sub
xor
xor
pop
mov
fsub
(bad)
in
sub
cwde
jecxz
loop
dec
mov
jle
movs
(bad)
jge
jg
cmp
xchg
mov
in
dec
adc
add
pushf
push
movs
inc
clc
call
sbb
sbb
add
test
bound
pusha
sub
inc
xchg
dec
and
arpl
pushf
inc
and
sar
mov
fdivr
adc
cli
xchg
mov
outs
gs
add
(bad)
(bad)
and
and
stos
out
xor
add
lahf
or
xchg
outs
mov
iret
adc
jno
ins
jl
push
in
pop
jecxz
imul
xor
(bad)
frstor
jne
lods
sti
fstp
inc
out
jno
and
or
loope
jg
mov
test
ds
sub
jp
aas
mov
add
sbb
jecxz
ins
mov
inc
pop
cdq
jo
adc
push
or
(bad)
fldenv
and
push
push
movs
outs
data16
sahf
xor
adc
test
repnz
sbb
test
or
cmp
pop
outs
dec
and
mov
iret
popf
in
mov
jmp
and
stos
and
pop
xor
pop
pop
pusha
mov
fstp
jp
repnz
xor
out
sbb
push
out
sbb
call
out
addr16
in
mov
hlt
ins
in
movs
shr
pushf
repz
adc
sbb
push
test
popf
push
and
dec
pop
sbb
pop
jne
(bad)
mov
jp
bound
inc
int3
xchg
jge
mov
jne
ret
(bad)
aad
xor
popa
js
xor
out
mov
mov
nop
test
jmp
in
stc
ins
loopne
push
pop
push
mov
jo
or
add
and
(bad)
xor
ror
mov
dec
fmul
push
inc
enter
jbe
lds
dec
ins
clc
cli
mov
jle
mov
call
pop
mov
in
sbb
cmp
mov
add
aam
sub
aaa
dec
mov
mov
inc
ins
pop
rcr
cmp
add
mov
mov
lock
(bad)
ret
xor
(bad)
adc
dec
add
mov
xchg
stos
fmul
pop
loopne
(bad)
in
jbe
and
sub
push
mov
scas
dec
mov
add
xor
gs
arpl
xchg
(bad)
fisub
add
mov
cmp
pop
cld
push
sbb
loop
scas
mov
xchg
cs
xchg
push
mov
mov
xor
mov
mov
push
mov
or
or
cmp
sahf
sahf
inc
xor
xlat
stos
hlt
nop
xchg
in
jns
inc
pop
mov
mov
push
outs
repnz
sbb
mov
shl
scas
mov
std
std
retf
out
and
cmp
jne
pusha
and
lock
xor
daa
pop
std
cmps
scas
add
sub
jle
mov
xchg
add
and
cld
scas
pushf
or
xlat
jge
add
nop
jmp
sub
dec
sub
lods
loop
pop
mov
and
mov
(bad)
sbb
outs
fcom
push
es
jbe
aaa
mov
push
iret
loopne
popf
xchg
mov
sub
ret
call
pop
cmp
js
pushf
mov
pop
in
hlt
out
cmps
enter
fsqrt
adc
dec
push
out
sub
movs
mov
fstp
out
shl
lock
jbe
cmp
std
mov
icebp
in
jb
inc
dec
imul
jno
fwait
retf
jmp
(bad)
loop
out
lock
jmp
sti
out
adc
dec
gs
outs
or
and
mov
inc
addr16
mov
xchg
cmps
mov
add
aas
jb
(bad)
xor
ffreep
out
jp
cmp
ja
mov
movs
dec
(bad)
outs
xchg
es
sbb
jb
call
fmul
cmp
test
push
into
imul
mov
retf
adc
jb
lahf
ins
mov
out
and
lea
mov
mov
out
or
adc
(bad)
dec
(bad)
jle
sbb
nop
lods
cmp
fbld
hlt
jge
je
outs
leave
sub
outs
jae
lahf
mov
cmp
sbb
dec
aad
(bad)
icebp
dec
cmp
or
addr16
dec
retf
aam
sub
xchg
cdq
loopne
fchs
adc
das
mov
stos
std
repnz
out
mov
sub
xor
sbb
sbb
or
xchg
arpl
xchg
shl
fst
cmp
idiv
xchg
cwde
aam
cmps
cmc
pushf
data16
fwait
xchg
mov
add
jl
mov
xchg
imul
das
jmp
in
add
syscall
cli
(bad)
lods
mov
add
movs
sub
aaa
ret
xor
stc
aam
fistp
jae
xchg
push
ins
mov
inc
test
xchg
pop
iret
das
loopne
and
cmc
stos
jns
cmp
fsubr
and
sbb
jno
movs
enter
cli
aad
sub
inc
jbe
dec
pop
test
and
jbe
call
(bad)
hlt
xchg
popa
popf
mov
or
out
jae
movs
jg
or
lock
int
dec
xlat
add
out
jl
mov
cmc
movs
jmp
xor
(bad)
in
jne
rcr
push
in
daa
dec
stos
push
mov
or
or
leave
jns
pusha
push
jae
xor
addr16
jmpw
push
inc
hlt
lods
out
push
clc
movs
or
mov
gs
push
shl
adc
sti
jp
push
mov
sar
imul
and
dec
pop
jecxz
mov
cli
sub
out
mov
add
mov
lock
add
mov
ficomp
push
sub
loope
out
dec
mov
out
mov
movs
mov
leave
cwde
xchg
adc
mov
or
out
mov
or
cdq
inc
loop
mov
lods
jne
into
rcr
fisttp
out
dec
dec
js
scas
adc
mov
mov
mov
sahf
jmp
dec
dec
mov
sbb
movs
and
cmp
(bad)
jne
iret
movs
test
in
scas
fcomp
mov
sub
pop
sub
jecxz
jmp
push
test
and
pop
xchg
inc
idiv
adc
(bad)
jecxz
or
mov
dec
call
push
mov
ins
pop
and
mov
sub
adc
jo
cdq
fwait
cmc
cli
aam
and
out
mul
test
shl
push
mov
aas
sub
nop
(bad)
xchg
out
pop
sti
fadd
sbb
je
outs
xchg
scas
cmp
aas
jno
cli
pop
not
xor
ficom
cmp
mov
test
jmp
jnp
push
jae
(bad)
fiadd
lea
jo
push
frstor
add
dec
loopne
inc
in
je
fs
jmp
arpl
cdq
loopne
stos
jge
call
push
out
cdq
test
mov
dec
or
xchg
mov
iret
dec
jno
test
lods
cmp
sbb
inc
jae
xor
leave
or
test
adc
shl
add
dec
dec
ret
mov
xchg
icebp
fs
mov
ss
mov
je
sbb
xchg
lahf
mov
int3
fs
cwde
cmps
fdivr
lods
cmp
das
fisubr
pop
pop
xor
in
mov
push
sub
nop
nop
and
mov
dec
pop
(bad)
out
pop
fs
sahf
call
movs
add
iret
pop
aam
adc
xlat
lock
sbb
data16
jl
test
pop
out
mov
test
cmp
pop
xchg
add
aas
mov
mov
mov
dec
pop
jnp
sbb
cmps
xchg
fild
inc
adc
cmp
mov
sub
cwde
(bad)
fcomp
and
mov
outs
mov
mov
adc
test
push
cli
stos
cmp
cmp
cld
scas
sbb
and
or
rcl
fdivp
stos
jne
stc
stc
lea
inc
mov
(bad)
sbb
ret
sbb
imul
(bad)
gs
dec
inc
movs
sbb
inc
and
jbe
mov
cmp
fld
fucomip
mul
aad
cmc
pop
jg
jge
call
push
test
mov
imul
mov
stc
pop
ret
enter
mov
not
fcom
int
cdq
int
mov
inc
mov
and
dec
push
dec
ds
jg
neg
add
mov
xor
aam
dec
test
xchg
data16
and
mov
jecxz
in
leave
adc
sbb
sbb
shl
int
jmp
pop
jle
shr
or
aas
adc
cmp
mov
ins
loope
(bad)
pop
jmp
imul
inc
pop
jecxz
cmp
mov
inc
aas
or
mov
test
jle
add
mov
pop
inc
push
js
sbb
cmp
es
pop
inc
rcl
add
xor
mov
xchg
push
fsubr
in
xlat
mov
cmp
pop
stos
movs
pop
jb
push
or
lock
jae
push
cmp
mov
or
lods
pop
sub
dec
xchg
jo
popa
sub
and
or
mov
xchg
imul
and
pop
(bad)
xor
mov
mov
inc
jbe
bswap
jno
test
cwde
imul
inc
je
aam
inc
sti
dec
lahf
loope
mov
lahf
es
in
xchg
in
add
mov
cmp
call
jp
push
ss
sbb
and
ja
mov
retf
and
in
fwait
inc
and
test
es
gs
clc
dec
pop
push
mov
and
scas
sbb
movs
sbb
fsubr
lods
cmp
inc
mov
mov
or
lods
movs
mov
sub
in
mov
in
and
push
cmps
pop
inc
pop
mov
mov
sbb
mov
mov
sbb
fnstenv
arpl
xchg
mov
jl
outs
push
lea
mov
xor
sub
ss
push
cmp
lds
cmp
ins
pop
pop
scas
push
aam
mov
ret
test
ins
sub
xchg
retf
mov
sti
test
add
cdq
jo
dec
loopne
push
push
rcl
fisub
mov
cdq
lods
or
movs
das
in
sahf
repnz
cmp
pop
pop
push
(bad)
es
dec
cmps
cmp
cmp
sti
inc
sbb
mov
bound
imul
test
sub
in
fnstsw
xchg
jmp
(bad)
push
mov
outs
outs
leave
cmp
and
aaa
cmp
or
mov
jbe
lods
out
mov
push
mov
les
fdivr
fcomp
push
dec
call
push
cmp
ins
js
sub
(bad)
movs
add
movs
adc
xor
cmp
bnd
and
int
and
dec
jmp
or
mov
dec
xor
arpl
ja
sub
out
inc
jae
push
sbb
js
lock
aam
sub
jmp
out
jmp
dec
push
or
mov
fsub
jnp
xchg
retf
adc
mov
shl
popf
fcom
hlt
fisttp
add
dec
mov
push
sti
add
dec
imul
outs
jmp
(bad)
shl
in
push
mov
ds
loopne
mov
nop
inc
enter
xchg
sub
bound
or
test
push
dec
push
or
mov
sar
pop
out
push
hlt
xor
jae
test
add
push
test
adc
or
(bad)
shr
lahf
ds
cmp
loopne
not
dec
push
mov
or
gs
sar
cmps
scas
sub
daa
add
fnstsw
mul
(bad)
push
mov
(bad)
xor
fidivr
xchg
xchg
fist
daa
dec
fsubr
jnp
shr
cmps
lods
and
sti
pop
dec
and
sub
and
push
adc
call
iret
adc
je
sar
sbb
xchg
inc
out
imul
pop
add
hlt
adc
sar
js
inc
jge
sbb
jmp
clc
cmp
scas
jmp
adc
dec
mov
xor
(bad)
cmps
retf
mov
pop
ds
(bad)
pop
icebp
shl
cmc
pusha
repnz
lahf
mov
mov
enter
push
cmp
sub
cwde
xor
jl
ret
push
xor
and
push
cmp
jnp
mov
ds
retf
adc
clc
add
or
sbb
data16
xor
(bad)
mov
(bad)
lods
xchg
mov
daa
loopne
cmp
and
or
dec
nop
jle
pop
inc
jmp
aas
jl
push
push
xchg
mov
in
cmc
push
test
scas
pop
xor
or
xchg
mov
daa
pop
adc
out
pop
(bad)
icebp
out
jno
cmp
cmp
(bad)
cs
mov
out
mov
lahf
jb
into
jnp
ins
sbb
aam
pop
daa
mov
xchg
cmp
in
add
repnz
mov
jge
fist
out
jecxz
in
addr16
iret
lea
dec
(bad)
sbb
hlt
aas
pop
xor
xor
adc
(bad)
movs
ds
mov
push
mov
cs
jp
push
sub
in
neg
dec
jl
xchg
pop
sbb
jnp
rol
cwde
push
test
push
jge
outs
inc
data16
mov
mov
push
mov
sub
sub
mov
fidiv
jb
xor
aam
hlt
push
jl
and
test
inc
mov
(bad)
pop
mov
cwde
adc
push
cmps
dec
fcmovu
xor
ins
xchg
push
int
push
adc
pop
jl
dec
inc
in
push
mov
inc
mov
cwde
jno
test
hlt
movs
imul
dec
es
xchg
inc
pop
(bad)
sub
test
mov
into
xchg
pop
pop
add
mov
cmps
or
sub
in
fwait
mov
loopne
test
xchg
adc
repnz
jne
push
es
add
inc
mov
(bad)
or
test
and
rol
test
push
mov
jmp
mov
retf
adc
out
jns
adc
repz
lock
scas
mov
in
loopne
fldcw
lds
jnp
xchg
pop
in
push
push
test
call
std
push
push
gs
pop
jg
jp
repz
cmp
jge
push
shl
jmp
jae
iret
test
outs
push
sbb
ret
xor
pusha
push
xor
add
out
xchg
outs
pand
mov
push
xchg
(bad)
push
(bad)
mov
cmp
mov
mov
jmp
sub
(bad)
in
ja
mov
or
xor
inc
push
and
es
fist
and
lock
mov
and
pop
ret
adc
or
add
dec
jmp
pop
xchg
jp
jge
sbb
fndisi(8087
adc
int3
daa
and
sbb
addr16
ja
cmc
pop
out
add
fucomp
ret
cwde
loope
enter
dec
xchg
mov
fcmovnu
sti
push
push
add
sbb
in
aad
xchg
mov
(bad)
jno
jns
test
xor
das
mov
add
lods
out
mov
retf
aad
cmp
and
mov
sub
mov
bound
and
leave
aam
add
mov
dec
stc
(bad)
adc
stc
lods
ins
and
cmps
jae
push
mov
push
mov
cmp
stc
push
adc
pop
bound
in
push
cmp
inc
(bad)
frstor
ror
in
aam
imul
das
stc
mov
mov
mov
and
add
(bad)
cli
clc
in
hlt
push
or
js
pop
push
jg
out
push
mov
sti
xchg
retf
pop
mov
add
retf
pop
xchg
mov
xor
push
pop
out
xor
ja
arpl
dec
cmp
pop
and
in
jg
fdiv
and
daa
pop
test
aad
push
inc
into
cs
jo
jmp
jp
push
popf
out
popa
pushf
xor
adc
pop
and
fst
jo
(bad)
fst
adc
pop
add
push
cmp
pushf
sub
aad
icebp
and
jnp
xor
int
call
mov
(bad)
movs
rol
inc
(bad)
push
add
stos
movs
pop
scas
ja
jae
and
push
es
mov
push
in
shr
jb
(bad)
outs
fisub
mov
dec
(bad)
sti
test
xchg
mov
jnp
mov
xor
pop
cmp
cmp
outs
mov
mov
and
push
pop
sbb
cmp
das
popf
loop
ret
(bad)
test
movs
push
out
cdq
int
jecxz
sahf
fsubr
shr
and
mov
inc
xchg
push
mov
mov
popa
sahf
imul
cmp
push
xchg
mov
repz
aam
out
jmp
mov
pop
push
mov
scas
or
add
aad
inc
mov
mov
cs
hlt
push
repz
adc
ss
shl
ss
fbstp
push
stc
add
sbb
pusha
jg
in
xlat
adc
loope
and
or
stos
inc
sti
cmp
xor
and
das
cmp
push
push
test
pop
pop
fcomp
push
test
or
pop
in
sbb
int
pop
add
mov
mov
add
mov
and
xchg
ds
ins
cmc
pop
ror
outs
jmp
std
jmp
xchg
ss
pop
movs
movs
stos
adc
cmp
cmp
stos
cwde
pop
mov
mov
jne
ficomp
iret
in
jg
add
bound
mov
push
sub
jb
mov
das
push
or
cmp
pusha
push
outs
mov
int3
fcom
scas
enter
sbb
xor
and
jmp
pushf
movs
movs
ret
lahf
pusha
int3
inc
ins
repnz
rol
mov
pop
xchg
jns
pop
test
xchg
adc
push
daa
test
adc
sub
fadd
out
adc
or
cmps
or
call
dec
popa
pop
inc
push
outs
rcr
into
out
push
jg
je
in
xchg
mov
call
xchg
stos
iret
into
(bad)
leave
mov
or
fcomp
xor
shr
dec
cmp
pop
and
lea
loop
jb
cmp
or
js
mov
in
or
sub
mov
test
xor
xor
rol
out
jne
lahf
js
in
and
jb
push
xchg
call
pop
sbb
pop
mov
pop
jno
or
and
adc
jmp
sbb
sub
test
shr
aad
inc
mov
out
and
(bad)
(bad)
sub
das
mov
(bad)
mov
fs
adc
aam
lds
ret
xchg
inc
adc
cwde
fist
imul
jg
jp
lods
pop
push
cmps
addr16
sbb
das
xchg
jmp
(bad)
ds
xor
dec
jge
jecxz
pushf
mov
cli
add
stc
mov
mov
xchg
push
sahf
das
retfw
add
(bad)
fild
and
xchg
mov
mov
dec
xor
cs
call
(bad)
std
repz
jge
mov
add
and
push
movs
cs
push
test
sbb
inc
movs
jbe
mov
pop
pop
mov
push
jne
(bad)
dec
cmp
rcr
jbe
jne
fwait
ds
inc
mov
clc
movs
sub
mov
push
pop
out
clc
rol
jp
or
mov
(bad)
fcmove
cmp
pop
lods
xor
cmp
call
je
repnz
pop
ret
xchg
std
or
jno
mov
push
lea
js
in
xor
leave
jge
xchg
jg
xchg
sbb
xchg
stc
out
nop
jno
test
cld
in
xchg
or
ins
inc
push
or
sbb
repnz
mov
(bad)
push
int3
mov
rol
cli
mov
or
push
mov
retf
xchg
xor
sub
out
inc
sub
jecxz
lds
rcl
cld
in
pop
sar
mov
mov
and
call
in
sbb
test
into
cwde
outs
mov
(bad)
push
push
cmp
mov
mov
call
std
popa
push
sahf
les
movs
js
rol
push
add
xor
js
jb
clc
cmc
mov
add
icebp
mov
xchg
inc
shl
inc
dec
sub
neg
mov
repnz
push
xchg
mov
stos
mov
ficomp
js
inc
and
inc
arpl
xchg
sbb
xchg
sbb
push
jmp
and
repnz
retf
mov
in
mov
xchg
mov
mov
stos
and
mov
rcl
cmp
jmp
rcl
add
jb
inc
cmp
xchg
or
jp
addr16
add
(bad)
inc
enter
jb
popf
pushf
cld
sub
sbb
add
and
rcl
aaa
cmps
cmp
and
out
sbb
mov
jnp
xor
add
lahf
js
pop
pop
dec
jmp
xchg
adc
sub
push
pop
sbb
pop
fs
fld
cmc
mov
cmc
inc
int3
fsubr
sbb
push
inc
daa
gs
fidiv
(bad)
mov
xchg
ret
push
mov
pop
rcl
sub
and
fcom
xchg
pop
gs
inc
jnp
pushf
pop
mov
xchg
cmps
push
or
mov
mov
and
ficom
stos
scas
dec
lea
push
imul
xor
cmp
push
bound
dec
mov
pop
jmp
shr
retf
sub
push
cmp
sub
dec
(bad)
mov
ffree
cli
sub
les
stos
int
add
xchg
rol
div
jbe
hlt
ds
cdq
aam
imul
sub
in
sub
and
add
out
jl
xchg
sub
xor
jnp
push
jp
jmp
add
xchg
in
jo
mov
mov
test
jl
test
lods
aas
(bad)
xchg
adc
data16
pop
(bad)
in
out
mov
sbb
sbb
(bad)
inc
and
loop
pop
xchg
adc
adc
out
scas
leave
gs
popa
into
mov
mov
adc
dec
add
stc
dec
(bad)
stc
inc
lock
out
ror
idiv
shr
aas
jb
inc
sbb
cmc
sbb
call
mov
xlat
std
sub
iret
cld
sar
cmp
adc
sbb
and
aam
adc
fucomi
imul
jmp
mov
mov
or
in
pop
adc
cs
mov
sub
std
int3
adc
jecxz
shl
push
or
ret
ss
int
adc
xchg
sub
idiv
xchg
mov
scas
sti
lea
neg
imul
inc
(bad)
outs
sub
in
in
and
fs
idiv
popf
mov
adc
(bad)
dec
xor
shl
das
je
out
inc
or
pushf
xchg
stos
xchg
out
(bad)
jae
dec
cmc
jl
hlt
dec
push
sti
ss
std
(bad)
sbb
jno
not
sbb
out
sub
jle
pop
hlt
xor
imul
dec
imul
pop
aas
xchg
dec
test
nop
cmc
mov
cmp
lock
mov
mov
and
cmp
dec
lock
push
popf
(bad)
jae
in
add
adc
mov
out
mov
and
cmp
add
or
int
add
lock
mov
pop
dec
sbb
(bad)
push
ins
jecxz
(bad)
out
pop
and
fisttp
mov
jae
xor
push
xchg
les
jnp
push
sbb
adc
sbb
inc
sub
lods
dec
ins
sar
cmp
sub
idiv
(bad)
mov
js
dec
jle
xor
stos
add
push
and
jmp
fmul
lods
adc
int
pushf
daa
pop
mul
nop
pop
data16
xor
jmp
xor
and
sbb
jmp
out
sbb
sahf
leave
(bad)
jno
icebp
js
or
add
pop
or
outs
pop
xchg
cmp
ffreep
lahf
dec
dec
lods
xor
jmp
sub
in
bswap
fs
js
mov
pushf
add
xchg
cmc
pop
jmp
jno
fld
cmp
push
pop
leave
pop
sbb
cs
scas
ret
xchg
aaa
jmp
cs
mov
movs
ret
movs
cmp
xchg
retf
gs
ret
mov
and
lods
xchg
mov
mov
mov
es
cmp
jne
xchg
sub
cmp
fisttp
adc
lods
addr16
adc
rol
and
call
outs
bound
shr
clc
fwait
div
or
jne
xor
clc
cli
or
or
dec
or
gs
scas
and
mov
aam
sub
out
adc
and
or
ret
cmp
jns
test
push
stc
call
scas
dec
fst
add
pop
fcmovb
cld
jg
xor
push
hlt
cmp
pop
loop
or
repz
adc
iret
pop
sub
push
cs
cmp
mov
dec
jns
scas
jmp
dec
imul
jecxz
out
mov
clc
sbb
adc
fwait
mov
aam
push
mov
mov
clc
fld
ret
push
and
imul
cmps
outs
rcr
jmp
ja
mov
and
not
push
call
std
int3
mov
test
leave
fdivrp
cmp
ins
enter
movs
and
cmp
mov
(bad)
mov
cwde
scas
clc
not
mov
cmp
inc
mov
xchg
xchg
fwait
int
mov
sbb
or
fidivr
and
ja
jns
outs
mov
std
push
pop
jp
xor
jmp
lds
cmps
stos
mov
rcl
std
pop
jno
inc
(bad)
(bad)
fstp
test
mov
jle
(bad)
(bad)
xchg
pop
mov
jge
inc
or
push
int
cld
(bad)
(bad)
push
popf
jmp
add
inc
or
xchg
js
frndint
adc
mov
enter
shl
add
mov
pop
int
lods
adc
jae
(bad)
mov
shl
stos
and
test
loopne
popa
not
out
je
cmps
mov
loop
push
lods
repz
stos
js
push
loope
pop
lods
push
inc
sub
shr
and
adc
rol
shl
mov
(bad)
sbb
mov
dec
add
movs
fadd
addr16
jmp
fnstcw
nop
inc
cwde
ret
add
push
daa
cmc
cmp
rol
sub
dec
mov
inc
ja
inc
add
rcr
(bad)
fstp
or
sbb
ror
sar
mov
add
aas
adc
mov
push
mov
dec
stos
in
loopne
div
ins
pushf
sub
or
ret
add
or
mov
sub
push
cmp
frstor
test
and
(bad)
mov
push
push
sbb
sbb
inc
or
adc
mov
dec
arpl
lods
(bad)
and
inc
ins
mov
cmp
out
sub
icebp
retf
or
push
icebp
push
cmp
cmp
push
int
dec
cmps
mov
clc
adc
call
bound
cs
sbb
cmc
xor
fs
cmp
jmp
dec
ins
xchg
pop
mov
test
pushf
out
sub
dec
inc
lods
xor
mov
bound
mov
xor
xchg
cmc
dec
mov
daa
js
pop
jge
xchg
loopne
xchg
xchg
fsub
nop
add
or
push
sbb
frstor
xchg
sub
ins
cmp
outs
movs
loopne
lods
(bad)
js
add
xor
dec
das
ret
xchg
sbb
xchg
cmp
xor
fidivr
pop
(bad)
into
popf
xlat
cmc
and
push
xchg
sbb
adc
call
xor
inc
lods
and
mov
enter
push
je
test
jle
xor
mov
jmp
call
lock
popf
stos
loopne
(bad)
jnp
adc
ret
stos
jle
jo
jmp
loop
mov
push
mov
sub
test
mov
(bad)
mov
sub
stos
int3
jmp
push
cmp
sub
mov
push
xchg
sub
call
jl
stos
es
add
cwde
sbb
pop
pop
xchg
lock
sbb
inc
cdq
mov
in
mov
ret
and
loope
ins
lods
inc
mov
jno
cld
jmp
mov
or
dec
repnz
sub
mov
dec
xchg
fiadd
xchg
cld
scas
(bad)
adc
psubsw
mov
rcr
lahf
adc
sub
mov
jmp
lea
cmps
sbb
pop
or
sbb
sub
jno
(bad)
sti
mov
test
jle
fs
loop
test
push
test
push
sub
pop
in
jle
pop
mov
pop
xchg
scas
mov
dec
imul
arpl
jae
pop
loope
in
jp
ds
dec
int3
push
dec
mov
in
mov
mov
stos
pop
lods
push
in
jnp
inc
lock
sub
ret
push
mov
mov
repz
jno
inc
sub
movups
pop
ret
cli
mov
mov
jecxz
dec
sub
xchg
test
lock
mov
(bad)
mov
pusha
ret
je
xchg
xchg
cld
into
inc
cli
inc
movs
int
scas
jge
lea
inc
mov
jle
imul
stos
(bad)
seto
push
dec
xchg
lahf
xor
jg
in
bound
lods
xor
daa
jae
mov
test
lods
imul
cmp
xor
cmp
inc
xchg
adc
dec
imul
push
dec
test
fs
repnz
in
xchg
xchg
aad
popa
xor
jecxz
mov
les
push
bound
mov
scas
xchg
adc
retf
jp
pop
(bad)
pop
mov
cmps
pop
jmp
cmp
mov
push
or
nop
inc
pusha
inc
and
in
mov
enter
pop
inc
mov
xchg
add
inc
xor
(bad)
outs
lock
or
mov
loopne
in
cmp
pop
mov
imul
inc
lea
out
shr
inc
fisub
shl
out
mov
xchg
mov
jecxz
shl
xchg
sub
sbb
sub
nop
add
stos
dec
add
in
inc
fidivr
clc
imul
fwait
or
daa
sub
jle
imul
icebp
xor
mov
push
test
test
mov
and
pushf
add
cmp
jge
fcom
cmps
mov
xchg
or
mov
and
mov
sar
cwde
das
dec
xor
jecxz
adc
mov
add
out
aas
inc
mov
fistp
cs
in
cmp
cmp
loopne
jg
in
das
repnz
cmps
or
mov
mov
inc
sub
jecxz
mov
sbb
ja
jno
sub
ret
dec
dec
xchg
jge
test
(bad)
es
fadd
sub
lods
and
pop
inc
dec
mov
stos
inc
ret
xor
mov
and
scas
arpl
out
call
(bad)
scas
mov
sbb
rcr
dec
add
out
dec
jle
xchg
cmp
mov
mov
rol
xchg
data16
mov
jecxz
inc
fld
push
mov
pop
push
sbb
dec
ins
mov
daa
pop
imul
out
dec
cli
push
or
jae
add
sbb
dec
add
sbb
or
sahf
adc
inc
xor
jecxz
imul
shl
dec
mov
push
pop
adc
cld
daa
inc
les
lea
jno
and
cmp
pop
lods
cmps
int
cli
rcl
ja
pop
pop
je
jbe
cld
and
mov
popa
xchg
sbb
scas
adc
jmp
bnd
or
imul
outs
adc
fld
std
movs
cmp
mov
push
sub
sub
sub
call
test
cmp
or
pop
in
fst
mov
nop
call
push
jmp
or
sahf
mov
test
mov
psubb
dec
imul
and
xor
cmp
clc
cld
movs
loope
ins
addr16
sub
(bad)
jns
adc
add
in
aad
xlat
pop
(bad)
dec
adc
add
jmp
fdivrp
adc
pop
vmwrite
push
mov
mov
push
jns
fist
sub
sbb
dec
mov
aam
fidiv
mov
and
adc
ja
sub
pop
test
and
pop
cmps
dec
cli
mov
push
shl
adc
inc
dec
enter
cdq
mov
mov
mov
xor
movs
(bad)
fld
adc
and
lods
aad
jno
xor
aam
push
(bad)
xor
ja
pop
jmp
push
loopne
stc
adc
inc
pushf
fidivr
cmps
pop
cmp
pop
repz
and
repz
mov
lods
jmp
dec
jg
in
add
movs
outs
mov
cmp
(bad)
repnz
and
mov
jl
add
mov
sar
fs
inc
add
sbb
aad
and
arpl
sbb
ja
and
xchg
lds
stos
jno
mov
jge
push
cmp
adc
test
call
pop
cmps
ficomp
dec
pop
rol
mov
push
lea
push
mov
mov
repz
sub
call
stos
repz
jle
cmp
inc
mov
cmp
jo
inc
jae
push
ins
and
or
xor
push
or
cwde
pusha
add
ret
jle
mov
(bad)
enter
mov
jmp
daa
push
inc
sti
sbb
pop
xchg
adc
ss
data16
aaa
fimul
push
(bad)
out
in
jbe
scas
adc
mov
cmp
in
or
add
xor
std
inc
xchg
push
mov
mov
pop
mov
jno
adc
(bad)
inc
neg
pop
mov
lods
sub
pop
xchg
add
mov
inc
push
in
ficom
sub
mov
ror
loopne
xchg
xor
pop
js
daa
cld
push
stos
dec
jmp
cdq
mov
imul
mov
mov
jg
pushf
mov
mov
dec
inc
jg
jo
jno
stc
loope
hlt
loopne
(bad)
(bad)
stos
or
fwait
mov
(bad)
in
xchg
pushf
adc
ror
adc
aam
scas
ins
xchg
and
sub
scas
jns
xchg
pop
hlt
cld
rcl
mov
sbb
lock
push
push
push
sub
sahf
sub
inc
xor
sbb
je
sahf
cmp
sar
cmp
mov
(bad)
mov
cs
xor
mov
sub
mov
ins
add
pushf
xor
enter
mov
pusha
adc
xchg
sbb
inc
and
and
scas
pop
mov
and
mov
cmp
dec
test
cs
fadd
test
xor
mov
icebp
mov
test
xor
sub
cmp
stos
stos
mov
mov
into
inc
(bad)
in
mov
add
sbb
arpl
mov
jmp
outs
add
dec
mov
jo
xchg
add
jmp
std
hlt
sbb
movs
inc
out
loopne
xchg
mov
mov
ds
loope
push
and
(bad)
cmp
adc
scas
or
mov
shl
popf
stc
test
(bad)
repnz
adc
adc
int3
out
xchg
mov
push
stos
popf
mov
cmp
pop
jle
mov
ins
xchg
scas
pop
popf
cs
movs
imul
pop
sub
mov
popf
jg
daa
(bad)
hlt
mov
stc
jl
push
sbb
mov
sahf
les
xchg
outs
jnp
sbb
hlt
lds
dec
shl
dec
xor
push
scas
pop
mov
mov
dec
mov
rol
push
sub
loope
jns
enter
jns
data16
push
pop
retfw
daa
add
bound
add
icebp
enter
ror
sub
movs
push
inc
push
mov
shl
cmps
fstp
and
aaa
clc
push
xor
outs
(bad)
fld
pusha
pushf
cmp
xchg
iret
xchg
rcl
or
out
adc
dec
outs
(bad)
std
push
cmp
cmp
addr16
imul
rol
ins
int3
pushf
mov
cmp
mov
movs
xor
leave
je
add
iret
jmp
popf
jbe
sub
in
cmp
sub
mov
idiv
sbb
sti
sub
into
sar
pop
jg
sbb
mul
sub
push
stos
movs
into
and
shl
dec
hlt
adc
sbb
data16
call
(bad)
mov
adc
xchg
jmp
and
push
(bad)
stos
adc
xchg
pop
dec
sub
stc
fst
sahf
shl
mov
(bad)
stc
std
pop
adc
jle
jge
rcr
xlat
rcr
in
cmps
xchg
xor
mov
push
inc
and
aaa
xchg
lods
adc
and
retf
leave
mov
sbb
mov
in
sbb
aaa
ds
xor
dec
scas
imul
adc
fisttp
or
aas
sbb
mov
cld
iret
and
aas
cmps
adc
das
pop
outs
daa
sub
in
sbb
pop
and
jns
arpl
sbb
add
push
loop
out
pop
jg
xor
xor
and
mov
mov
idiv
mov
aam
scas
(bad)
jg
ds
clc
daa
aas
cmp
push
inc
retf
fistp
adc
and
jp
mov
mov
xchg
(bad)
mov
aam
ins
es
xor
stc
inc
sub
out
in
mov
in
(bad)
jae
mov
sbb
(bad)
cs
repz
cmp
sbb
dec
pop
inc
sub
ja
sahf
jge
bound
cdq
in
or
fwait
inc
push
jecxz
jno
jae
fldcw
test
add
daa
inc
push
jg
pop
cs
add
(bad)
sti
jl
in
sub
fbld
mov
pop
sbb
movs
pop
out
fst
inc
dec
pop
jl
test
dec
push
inc
(bad)
mov
sbb
shr
push
sti
mov
in
imul
push
and
push
or
out
adc
sub
add
mov
loope
retf
cmps
xor
jne
mov
xor
cwde
fsub
mov
fwait
mov
je
sbb
fcom
mov
sti
aam
ss
aad
or
daa
or
test
and
sahf
mov
bnd
jne
add
es
dec
icebp
adc
adc
push
and
inc
jmp
pop
lock
xor
mov
xchg
jecxz
sbb
in
fs
mov
fxch
adc
out
xor
popa
inc
pop
xchg
xor
loope
mov
enter
shl
cwde
and
mov
adc
lahf
ins
pop
nop
out
xchg
scas
mov
cmps
test
sub
jne
mov
sar
mov
sub
(bad)
cmps
mov
repnz
scas
ret
or
jno
xchg
ret
cmp
mov
cmps
clc
inc
lds
inc
dec
and
cwde
fninit
mov
mov
rcr
or
dec
push
aaa
push
imul
adc
out
nop
pop
retf
push
outs
sahf
stc
mov
imul
jle
push
push
fimul
sub
icebp
add
cwde
fld
cdq
sti
dec
hlt
ss
cdq
mov
je
pop
fwait
push
xor
les
add
lds
ja
imul
push
int3
lahf
out
inc
fwait
or
mov
cmc
mov
aam
or
xchg
loopne
mov
loope
dec
mov
add
addr16
jecxz
aad
sbb
inc
xchg
in
pop
call
cmp
call
and
mov
fst
nop
cmp
xor
and
repz
movs
mov
retf
push
out
adc
dec
fst
and
je
aaa
add
jmp
popa
inc
ins
and
mov
mov
in
mov
xor
xchg
js
xchg
or
outs
cdq
jg
ja
sti
gs
and
inc
adc
std
lock
ret
push
inc
jbe
jmp
sahf
arpl
out
lods
adc
mov
scas
push
sub
sti
inc
push
cmp
push
mov
add
das
movs
xchg
push
sar
shl
les
mov
hlt
mov
sar
inc
bound
ret
pop
pop
lods
add
push
mov
dec
xchg
mov
rcr
jl
int
jmp
dec
pop
ret
jnp
(bad)
retf
push
xchg
add
add
out
mov
hlt
adc
std
and
nop
call
cmp
inc
cld
lods
jmp
sbb
jmp
mov
mov
clc
adc
sti
out
jb
jno
shr
inc
aam
xor
dec
inc
dec
das
fsubr
imul
jle
jge
in
add
imul
adc
popf
mov
icebp
mov
dec
cmp
or
arpl
push
cmc
jle
and
and
in
mov
jb
sub
mov
push
push
adc
test
sbb
xchg
mov
les
data16
mov
jnp
fild
sti
push
xchg
mov
jp
xor
mov
sbb
cli
dec
pop
adc
mov
imul
cmps
sub
mov
out
shl
cmp
sub
scas
ficomp
(bad)
call
dec
cmp
jle
ss
mov
mov
cs
fscale
lahf
add
xor
inc
sub
sub
out
add
cdq
gs
rcr
inc
xor
jbe
fadd
pop
dec
call
jne
shl
and
repnz
fidiv
jp
enter
aaa
popf
movs
xor
sahf
sub
inc
test
cmc
js
pusha
ja
mov
adc
out
les
and
je
or
sbb
and
call
sar
pop
xor
xor
xchg
out
or
addr16
xchg
jle
cmps
hlt
and
cmp
mov
fsub
push
cmps
push
and
jns
jne
test
push
sar
xchg
push
xor
mov
bound
js
ss
in
lods
loop
jnp
mov
scas
add
stos
call
or
lods
mov
push
sub
push
sub
cli
ja
sahf
mov
(bad)
das
repnz
pop
scas
pop
sti
mov
mov
call
push
repnz
push
in
pop
jae
(bad)
icebp
and
stc
imul
popf
out
cmp
cmp
fs
mov
add
mov
mov
cmp
or
sbb
mov
lea
mov
(bad)
fucomip
sub
fisubr
aaa
stos
push
das
inc
inc
xchg
cwde
repnz
scas
lea
mov
push
fisub
mov
fnstcw
das
movs
push
jle
call
inc
stos
enterw
sub
push
and
mov
ins
dec
sub
mov
cmc
cmp
(bad)
sub
int3
adc
jb
cmps
xchg
je
(bad)
cmc
inc
inc
sub
xchg
loop
push
in
jl
sbb
adc
pushf
mov
mov
cmp
add
mov
(bad)
sbb
call
push
clc
xor
and
popf
mov
mov
dec
ds
xchg
jae
pop
xor
mov
in
cmp
je
sbb
xchg
test
retf
lock
setp
call
addr16
sbb
aaa
outs
fidiv
cmp
and
sti
cmp
aas
push
mov
dec
nop
pop
or
add
sbb
add
jbe
hlt
sub
ficom
push
cdq
pop
dec
jno
fistp
sbb
mov
rol
sbb
or
adc
lods
jecxz
stc
call
sahf
mov
xor
test
jne
pusha
jns
xor
sub
loope
mov
jnp
or
jbe
mov
xchg
dec
xor
inc
and
mov
dec
shl
pop
or
xchg
push
ds
arpl
mov
sbb
jae
push
imul
pop
fst
(bad)
dec
push
dec
xchg
ror
js
call
sbb
popf
pop
inc
pop
mov
stc
cmc
inc
ins
mov
push
ret
pop
stos
jae
mov
push
das
pop
mov
sub
repnz
dec
cmp
test
popa
mov
fisub
adc
pop
xor
push
jae
mov
mov
pop
out
call
mov
fwait
imul
mov
push
stos
mov
lock
gs
cmp
inc
sub
arpl
mov
pop
inc
pop
jg
xchg
or
in
icebp
jmp
dec
push
scas
stc
dec
not
cmc
xor
call
popf
imul
cmc
ror
push
inc
cmp
cmp
push
sub
retf
loop
mov
rol
or
pop
out
cld
cmps
sub
cmp
inc
jecxz
push
sbb
cs
add
out
mov
and
sti
inc
outs
adc
ins
lods
jbe
mov
xchg
xor
je
pop
ja
mov
pushf
xchg
pusha
leave
out
mov
sbb
cmp
shl
mov
mov
shl
aaa
jg
aas
ds
sub
jnp
shl
push
push
cmps
idiv
xlat
xor
std
jns
mov
push
scas
mov
mov
pop
fcomp
mov
hlt
and
or
scas
lods
icebp
pop
xchg
sub
into
cmps
adc
or
out
fadd
addr16
outs
fidivr
or
mov
call
cmp
cmps
leave
aaa
repnz
inc
push
mov
inc
ror
call
inc
jge
test
shl
or
leavew
jg
push
in
dec
jecxz
xor
push
jns
outs
loope
dec
mul
out
pop
push
arpl
int
pop
in
dec
out
dec
aaa
call
lods
mov
retf
cwde
pop
(bad)
adc
jbe
add
test
mov
dec
and
icebp
aad
jnp
sti
mov
rol
xchg
sti
push
sbb
cmps
cmp
aad
and
leave
mov
dec
jp
jae
clc
cmp
push
cmp
push
inc
aaa
ins
pop
outs
mov
ins
add
test
mov
movs
mul
int3
jecxz
jo
jbe
addr16
xchg
push
jmp
sbb
pop
or
scas
popf
dec
cmp
ficom
mov
mov
in
out
mov
add
push
pop
mov
jmp
add
rol
cs
xchg
movs
arpl
mov
into
adc
stos
pop
outs
xchg
xchg
mov
repnz
dec
adc
cmps
jecxz
fcom
shl
loop
aas
pop
jecxz
adc
cmp
add
jbe
ins
out
add
call
push
mov
ins
stc
daa
je
fld
movs
cmp
cmps
clc
dec
and
cmps
mov
les
dec
jo
(bad)
sub
mov
cmps
or
out
pop
dec
std
sbb
mov
rol
fist
ret
movs
dec
or
stc
fcom
dec
shl
scas
nop
jl
mov
fidivr
mov
xor
mov
test
ror
xchg
rol
mov
cmp
jae
mov
retf
retf
mov
pop
xor
ficom
mov
loope
inc
sub
dec
stc
dec
sahf
retf
inc
and
cs
jno
lds
ficomp
lods
clc
dec
pushf
aaa
cwde
jl
(bad)
mov
adc
mov
test
fadd
sbb
lds
loope
cmp
scas
fs
cmps
test
fcmovnu
les
lods
jo
shl
movs
mov
push
lods
pop
std
xor
add
dec
ficomp
jns
out
aad
div
inc
xor
inc
inc
cmp
jno
inc
rcr
nop
popw
in
call
and
ss
rol
ficom
pop
sub
(bad)
je
repnz
lea
popa
loopne
cmp
les
sahf
jp
(bad)
fdiv
popf
jo
pop
fadd
aas
dec
mov
imul
jg
(bad)
scas
jmp
outs
sub
mov
out
or
and
outs
fisubr
les
xchg
clc
inc
add
inc
hlt
mov
pop
popa
scas
pop
out
int
mov
jge
daa
call
(bad)
out
mov
mov
cmps
pop
lock
push
push
sbb
shl
cmp
rcr
push
xchg
sahf
hlt
xor
sti
push
pop
ror
mov
mov
jmp
cmp
clc
das
das
lds
out
dec
push
jle
ja
sub
mov
dec
mov
stos
std
adc
dec
xchg
inc
mov
xlat
popa
and
aas
jecxz
out
frstor
cdq
mov
dec
push
jle
repz
mov
mov
lods
ret
movs
ret
sbb
ret
aad
adc
xchg
xor
adc
mov
imul
or
adc
int3
xor
jg
test
xchg
bound
adc
sbb
dec
int
dec
sub
inc
or
iret
inc
adc
(bad)
cmps
jmp
dec
dec
jb
fstp
jo
mov
add
lds
jbe
adc
xor
movs
or
(bad)
pushf
sahf
cmps
jo
push
mov
jbe
sub
jle
xchg
push
push
mov
hlt
cmc
test
retf
popa
imul
outs
xchg
int
bound
mov
gs
add
sub
mov
lods
movs
jg
xchg
aad
cmp
retf
adc
int
add
pop
inc
(bad)
mov
mov
sbb
das
(bad)
retf
outs
jmp
and
shl
shld
mov
setl
loop
outs
pop
(bad)
out
dec
or
(bad)
cmp
add
dec
pop
mov
push
dec
sbb
ins
cli
stos
bound
aas
and
jno
push
les
cwde
push
mov
stos
mov
jo
inc
cld
leave
cmp
jge
xor
mov
icebp
pop
mov
inc
sub
fcom
clc
fst
inc
and
in
int
aad
dec
inc
pop
cwde
cdq
leave
pusha
or
adc
adc
pop
cmp
add
clc
in
fidiv
test
scas
sub
in
test
jmp
scas
in
aad
test
mov
pop
sub
adc
jge
cmp
sbb
test
mov
pop
icebp
fist
addr16
jnp
not
xchg
jns
shr
sub
and
push
cmp
add
scas
fnstcw
imul
cmps
dec
inc
jp
jmp
shl
sub
xchg
xchg
push
stos
out
repz
or
iret
pop
(bad)
fsubrp
xor
repnz
imul
inc
sti
add
jmp
cs
xchg
clc
cdq
je
jmp
cmp
xor
leave
pop
sar
mov
mov
dec
pop
ins
inc
popf
stos
mov
xor
add
scas
inc
sub
and
cmps
fwait
cmp
mov
shl
test
dec
jp
cmc
xor
outs
mov
mov
mov
mov
iret
in
aam
test
out
dec
mov
pop
mov
mov
neg
les
mov
push
cld
retfw
jmp
fwait
cmp
les
imul
cmps
in
xchg
cmp
add
enter
adc
jge
sub
addr16
push
cmp
ret
push
mov
mov
stos
sub
or
adc
aas
cli
int
test
or
(bad)
pushf
mov
cmc
and
int3
pusha
mov
cmp
mov
repnz
adc
jecxz
jb
jg
test
adc
into
push
loop
xor
sbb
imul
cmp
pop
dec
aaa
adc
(bad)
stos
sub
inc
cmp
outs
mov
enter
sub
(bad)
dec
lea
push
mov
sar
mov
mov
rol
mov
mov
imul
mov
rcl
(bad)
(bad)
sbb
jns
pop
mov
(bad)
out
cmp
ret
ins
adc
cmp
add
mov
jg
jbe
jmp
xor
xchg
int
pop
ins
mov
data16
pop
jge
mov
push
out
adc
inc
push
jno
call
div
mov
dec
lods
repz
mov
cmc
adc
stos
pop
pop
cmps
adc
mov
dec
fnstcw
out
(bad)
sub
inc
aaa
pop
(bad)
cli
int
sahf
pop
popa
lds
arpl
stos
mov
mov
movs
ins
jge
movs
dec
push
popf
mov
mov
test
adc
fld
arpl
mov
dec
and
sub
adc
jmp
es
push
mov
scas
cmps
dec
outs
dec
fild
xchg
adc
call
and
pusha
lods
jnp
pop
or
(bad)
mov
dec
jge
nop
dec
sub
cli
test
fnclex
push
movs
cwde
sbb
jae
mov
fisttp
aas
out
mov
push
cld
loop
sub
xchg
and
mov
add
mov
hlt
mov
mov
arpl
xor
scas
rcl
mov
shl
pusha
nop
popa
in
test
aas
lahf
jecxz
loope
jecxz
(bad)
mov
jbe
sbb
jb
or
sti
mov
fs
sbb
shr
aam
jmp
arpl
(bad)
out
fs
in
dec
mov
out
dec
sar
into
xchg
jbe
jmp
into
or
xchg
ins
xchg
sahf
mov
fdiv
mov
sub
or
call
push
inc
loope
loope
cmps
(bad)
cmps
scas
sahf
ror
rcr
xor
push
mov
jns
cmp
outs
fbstp
jl
and
sbb
mov
dec
out
(bad)
push
xor
cli
test
add
push
(bad)
adc
cmp
lock
rcl
cli
fst
mov
sbb
sub
arpl
test
push
mov
and
push
cmps
xchg
inc
fdiv
jns
jo
mov
push
aaa
call
jb
adc
mov
push
test
cmp
pop
js
jg
out
adc
cli
pop
loop
cli
or
shl
dec
hlt
cmps
hlt
jp
inc
stos
loop
inc
push
and
and
aad
add
inc
mov
mov
cwde
mov
jns
loopne
lahf
add
xchg
test
jp
rcr
and
and
push
pop
sub
(bad)
cmps
out
mul
loope
pop
jle
rcl
push
ja
repz
ficomp
push
scas
retf
mov
sbb
inc
cmps
imul
shr
jge
xor
and
xchg
call
cmp
jb
jne
pop
mov
outs
int3
mov
push
sbb
sub
sar
add
aam
push
pop
push
and
sbb
fisttp
(bad)
outs
mov
push
push
push
(bad)
jmp
add
jp
xchg
mov
(bad)
adc
fsub
adc
outs
outs
sahf
scas
sar
lds
(bad)
(bad)
icebp
and
adc
push
jne
ja
ret
mov
not
gs
mov
in
stos
aam
push
leave
aaa
int3
add
mov
dec
adc
push
jecxz
adc
daa
arpl
mov
arpl
fsubr
dec
push
rcr
dec
inc
outs
dec
daa
add
mov
cmps
iret
jmp
ins
mov
addr16
mov
dec
jmp
into
push
and
mov
push
inc
xchg
lods
test
xor
xor
xchg
aam
push
js
dec
ret
mov
sub
arpl
jnp
sbb
pop
or
and
shl
xor
cld
sbb
sub
test
stos
enter
cmp
jmp
pop
outs
push
mov
sbb
in
data16
scas
test
jmp
push
(bad)
fadd
xchg
xor
xchg
test
sbb
ins
in
or
jbe
pop
arpl
enter
das
sbb
in
(bad)
mov
add
test
cmp
or
dec
fs
inc
xchg
ins
stc
shl
(bad)
adc
test
sbb
sbb
test
or
and
push
(bad)
add
mov
dec
xor
and
add
jne
mov
stos
or
cli
push
mov
push
jb
out
mov
adc
pop
test
add
pop
ror
loop
sbb
fdiv
seto
xchg
sbb
mov
jns
inc
push
dec
sub
data16
pop
jns
mov
movsx
faddp
cmp
lahf
nop
popf
add
(bad)
push
jnp
loope
repnz
js
jns
dec
lods
xchg
adc
push
mov
jnp
mov
mov
clc
stos
mov
fnstcw
pop
mov
inc
xchg
call
pop
sbb
(bad)
adc
ret
dec
test
xchg
adc
lods
jge
mov
ror
(bad)
pop
or
jb
sub
pop
pushf
cmp
test
in
test
ror
mov
mov
fistp
stc
scas
stos
lods
stc
cs
or
enter
jecxz
int3
ja
adc
sbb
sub
pop
fldcw
std
dec
jmp
push
sub
push
sahf
ret
dec
pop
jb
xlat
mov
adc
pop
hlt
aaa
and
mov
movs
aam
(bad)
or
(bad)
or
ret
cmp
xor
jmp
mov
mov
sub
cs
call
xor
jmp
adc
int3
pop
in
das
(bad)
scas
dec
aam
cmp
adc
in
sbb
pop
shl
mov
movs
push
(bad)
sbb
pop
mov
mov
and
xor
push
loope
push
bound
xchg
scas
jmp
sbb
lods
jge
es
nop
in
fisttp
out
push
(bad)
push
sub
cmc
lods
mov
push
pop
mov
jmp
push
fisttp
xchg
mov
jbe
xchg
jb
mov
ins
and
xchg
popa
ins
cdq
ins
xor
pop
in
fs
(bad)
iret
cmp
enter
icebp
cmp
std
cmc
mov
mov
lds
adc
int
cwde
ss
hlt
mov
jnp
popf
mov
mov
(bad)
adc
jl
sbb
dec
cmp
cmc
enter
ds
and
rol
jb
iret
xlat
jp
out
nop
adc
mov
xchg
icebp
pop
dec
(bad)
pop
cli
inc
(bad)
fcomp
popf
aas
mov
pusha
setns
sbb
aad
scas
mov
sbb
and
mov
mov
out
push
cmp
push
int
push
cli
xor
sar
call
cmp
xchg
and
and
retf
pop
popf
adc
cmp
ins
add
xchg
shl
loop
in
ret
test
push
lahf
fiadd
nop
ds
inc
clc
movs
aad
fbld
iret
ins
mov
pusha
sub
xor
daa
sbb
mov
jbe
pop
sub
inc
int
adc
out
cmp
shr
(bad)
mov
sub
fcom
mov
sub
sbb
mov
fstp
sahf
rol
pop
xlat
je
or
lods
inc
and
mov
and
js
icebp
inc
and
push
sahf
push
xchg
push
aad
repz
sub
test
mov
and
loopne
push
ins
stc
je
fimul
inc
inc
jne
imul
cwde
bound
repnz
jo
idiv
fld
pop
sub
adc
jno
call
out
add
lods
xor
adc
cli
and
fsubr
mov
test
mov
mov
pop
mov
mov
(bad)
popa
movs
fist
xchg
fisttp
mov
cmp
add
outs
adc
sbb
iret
mov
test
dec
pop
pop
loop
movs
or
fidiv
jb
fstp
add
inc
data16
in
lahf
cli
sub
icebp
mov
jecxz
push
and
cwde
das
imul
fstp
push
push
imul
mov
mov
inc
call
mov
shr
test
mov
repz
test
mov
or
sbb
push
jae
xchg
jne
push
in
fwait
add
jp
retf
dec
call
rdpmc
xor
or
je
daa
pop
aaa
pop
inc
jge
and
das
jne
hlt
cwde
in
pop
fs
retf
pop
sub
dec
call
mov
or
retf
jmp
or
je
sbb
aaa
(bad)
cmp
and
rcl
dec
adc
nop
ins
push
pop
dec
mov
pushw
pop
nop
aam
dec
mov
int
or
jmp
lds
xor
mov
dec
imul
jecxz
jecxz
test
jge
mov
shr
pop
push
fwait
retf
mov
cli
xlat
cli
pop
push
dec
(bad)
or
push
or
mov
daa
into
push
pop
mov
jle
pusha
cmp
std
(bad)
retf
pop
or
mov
ins
jmp
pushf
jb
push
(bad)
push
fldl2t
test
dec
mov
lds
fcomp
push
pop
in
and
and
xchg
retf
sub
pushf
pop
fdivrp
push
sub
ret
add
shr
std
test
sti
push
loop
inc
add
lahf
cli
adc
(bad)
jno
xchg
popf
and
scas
mov
(bad)
jo
push
mov
mov
xchg
sub
addr16
rcr
jnp
imul
push
pop
push
pop
add
sti
and
and
dec
test
scas
sub
fmul
mov
stos
outs
lods
push
inc
add
cmps
cld
addr16
mov
mov
ds
push
fst
dec
or
sbb
mov
adc
dec
data16
ins
int
cmc
and
sub
int
in
jnp
cwde
test
pop
loope
sub
pusha
repnz
push
jns
jmp
xchg
lods
fild
adc
fiadd
add
sbb
xchg
mov
inc
fisubr
cmp
iret
in
iret
in
xchg
movs
or
cmp
pop
in
mov
and
cwde
xchg
in
adc
rcl
loop
loope
addr16
cmp
dec
cmc
jl
inc
scas
push
clc
inc
sti
pop
jns
std
jmp
mov
mov
sbb
popf
imul
lea
ret
mov
dec
push
xor
and
ins
xchg
cdq
js
dec
test
inc
pusha
pop
out
sub
xor
jmp
cli
repnz
enter
imul
fld
into
jno
ret
jl
inc
xor
outs
aam
cmps
push
mov
inc
out
xchg
lods
jecxz
inc
mov
es
clc
and
je
inc
imul
cmp
out
push
xchg
setno
xor
sbb
call
adc
repnz
adc
aas
cmc
jno
loope
mov
ror
ds
outs
cmovle
pop
out
ja
push
ins
inc
sbb
sub
xor
out
icebp
popf
popf
lods
lods
test
cmp
call
xchg
adc
mov
in
or
dec
push
out
ret
das
xchg
pop
lods
xchg
std
scas
lods
bound
lods
out
jmp
and
jmp
in
xchg
jnp
ret
in
sti
movs
out
fmul
repz
adc
ja
mov
pop
sbb
sbb
pushf
psrad
xrelease
enter
mov
aad
outs
dec
ret
ror
rcl
xchg
mov
cs
stos
sbb
leave
loope
into
sbb
mov
dec
stos
xor
lods
pushf
sbb
push
out
mov
mov
loop
adc
rcl
push
outs
xchg
xchg
in
cmp
inc
jns
and
sar
mov
test
add
sti
loop
ret
test
adc
inc
sbb
out
fwait
mov
scas
inc
gs
jbe
pop
aam
ror
inc
xchg
cmp
inc
sub
push
fadd
dec
mov
out
mov
sahf
mov
pusha
les
dec
cmc
pop
dec
mov
add
lock
sti
mov
mov
ret
sub
test
aas
movs
adc
push
jge
mov
mov
inc
outs
pcmpgtb
pop
(bad)
popf
or
mov
xor
push
dec
pop
lods
mov
scas
fsubr
mov
ins
retf
(bad)
mov
mov
int3
out
in
dec
push
mov
pop
mov
inc
dec
mov
or
or
sbb
sub
stos
(bad)
sti
jo
bound
scas
mov
call
outs
push
aad
int
out
jecxz
fistp
push
cmps
dec
cmp
pop
ja
and
mov
inc
push
cdq
and
hlt
lock
stc
dec
mov
test
cdq
fsubp
repz
mov
(bad)
icebp
jne
jmp
leave
adc
aas
adc
ins
sbb
add
xchg
mov
dec
out
mov
jmp
inc
xchg
cmp
dec
(bad)
imul
idiv
pop
pop
xor
shl
xchg
das
int3
adc
not
test
mov
(bad)
xor
jecxz
ins
in
cmp
loop
jne
or
mov
xchg
sbb
es
dec
push
and
or
pusha
mov
push
into
dec
test
jb
in
push
dec
mov
push
gs
adc
inc
scas
jo
(bad)
arpl
mov
scas
or
xor
ret
mov
psubw
in
sbb
add
jmp
stos
daa
inc
cmp
neg
imul
inc
pushf
iret
mov
cwde
add
adc
sahf
cld
cmps
je
xchg
push
pop
and
js
arpl
shl
ja
sti
mov
sub
fmulp
sub
rol
xchg
lahf
jo
loope
jno
loopne
in
movs
stc
stc
jns
mov
outs
add
mov
cwde
dec
fisttp
or
add
int
sbb
add
(bad)
pushf
test
stos
jns
test
cmp
cld
arpl
pop
fist
rcl
dec
push
jbe
pop
jnp
push
aad
dec
sbb
fnstenv
dec
sbb
push
sti
and
ds
sahf
outs
add
je
or
inc
xor
icebp
in
jno
push
popf
xor
adc
jg
nop
cmc
nop
xor
mov
sbb
push
jge
lea
cwde
outs
fcom
in
mov
std
out
cld
fld
pop
cmp
hlt
cs
loopne
pop
jno
jecxz
jmp
cmp
push
add
sbb
sbb
xor
nop
lahf
hlt
lods
adc
and
daa
mul
xchg
mov
mov
push
sahf
stos
jp
and
or
aad
pop
arpl
adc
fwait
daa
xchg
ja
cmp
and
(bad)
das
mov
jmp
dec
sub
scas
aas
and
xchg
push
dec
dec
shl
mov
push
ror
push
lods
lods
mov
adc
cwde
jmp
xchg
cmp
int
pop
sub
xor
pop
cld
mov
add
jno
mov
lock
loope
imul
jp
shr
dec
dec
pop
fcomi
fwait
ins
or
mov
mov
lods
jge
nop
dec
mov
jb
lods
neg
ins
in
sub
jp
daa
(bad)
jmp
add
call
in
cmp
dec
add
imul
and
out
mov
lea
out
pop
cmp
cmp
dec
icebp
dec
cmp
and
outs
into
xor
std
push
inc
and
fld
test
mov
mov
xor
jnp
shl
fmul
loope
dec
xchg
push
inc
cmp
jp
push
mov
dec
jmp
inc
cli
dec
bound
push
and
addr16
in
aas
xchg
jp
mov
push
sub
imul
mov
inc
dec
sar
int
out
mov
mov
pusha
push
jnp
dec
jge
out
fstp
dec
mov
mov
dec
neg
retf
push
mov
lds
mov
(bad)
mov
pop
test
mov
stos
cld
sbb
push
enter
jns
cs
xchg
xchg
fucom
inc
aad
mov
shl
push
inc
sti
sbb
push
cmps
mov
push
mov
push
jo
aas
or
xchg
jo
idiv
cmp
mov
sub
adc
fstp
sub
test
(bad)
pusha
jl
adc
sbb
and
neg
movs
fwait
(bad)
fsubr
jg
fild
cmps
sti
clc
mov
jmp
in
mov
inc
or
int3
fabs
outs
add
dec
popf
shl
jmp
sbb
outs
in
and
cdq
sub
and
int
(bad)
scas
bound
mov
in
mov
ja
xor
push
dec
mov
sub
movs
out
dec
or
lds
outs
push
movs
mov
inc
adc
cdq
push
xchg
xchg
push
push
test
xlat
scas
dec
lods
adc
fdivr
pop
hlt
mov
in
mov
mov
mov
adc
sti
mov
ret
pop
pop
out
xor
xchg
retf
inc
test
mov
fnstsw
add
pop
fdivr
pop
xchg
ror
jmp
fimul
aaa
pop
ficom
out
retf
rcl
jne
icebp
fs
push
or
test
int
and
push
nop
out
push
call
add
and
mov
and
lahf
les
ror
mov
(bad)
out
adc
popf
mov
mov
icebp
in
add
mov
inc
mov
sub
div
sahf
in
in
jmp
fist
cwde
popf
cmp
sub
adc
xor
jmp
pcmpgtw
sub
das
nop
aaa
fist
xchg
inc
std
lods
les
jp
enter
xchg
mov
xchg
and
inc
ficomp
ret
test
test
adc
cmps
pop
jae
out
test
icebp
or
popf
pushf
je
mov
or
loop
ja
xchg
daa
sbb
fldcw
xchg
jmp
ins
call
or
fisub
mov
stos
cdq
and
(bad)
je
and
adc
arpl
ret
xchg
fsub
aam
clc
or
push
mov
popf
adc
loop
cmc
cli
adc
sbb
jb
in
pop
and
push
outs
inc
push
dec
stos
inc
pop
gs
push
iret
xor
mov
xchg
push
inc
fld
jl
or
call
push
imul
lock
and
or
push
loope
ins
xor
jo
outs
cli
xor
sub
js
mov
ret
adc
mov
sbb
dec
popa
cmps
or
imul
mov
btc
sbb
inc
dec
shr
push
out
sub
sub
sbb
mov
ds
cmc
shl
scas
mov
arpl
repz
mov
dec
mov
sub
jae
loope
jecxz
std
cmps
pop
push
pop
ins
push
xor
icebp
push
sub
popf
jmp
cmp
nop
cmps
gs
jl
add
or
pop
push
inc
lods
(bad)
bound
dec
js
push
sti
test
sbb
mov
pop
mov
xor
or
cmps
jl
inc
pushf
out
add
xchg
mov
sub
imul
and
sar
ins
mov
sbb
enter
dec
(bad)
push
inc
imul
jmp
in
loopne
push
adc
dec
mov
push
mov
mov
mov
or
mov
cmp
imul
sbb
and
mov
sahf
dec
loop
shr
and
aad
mov
ret
cdq
shr
enter
jb
inc
test
aaa
dec
jp
idiv
xchg
sbb
std
or
xchg
cwde
imul
aaa
sub
daa
loop
loop
xchg
pop
int3
push
jae
pop
cmp
jp
lahf
and
xchg
jbe
ins
mov
mov
push
and
out
imul
imul
movs
pop
stos
jb
sub
sbb
push
inc
movs
mov
cmps
inc
das
cmp
js
ss
call
sbb
sub
(bad)
popa
xor
ss
xchg
ss
addr16
ja
cmp
int
stos
cld
sub
or
pop
sbb
mov
mov
sar
mov
aad
mov
inc
mov
fnstcw
or
dec
push
dec
fs
in
in
fnstenv
mov
cmp
pusha
jnp
xchg
sub
in
in
add
jns
push
mov
in
ja
pop
adc
loopne
push
in
mov
dec
outs
jae
gs
fwait
inc
mov
mov
xchg
ret
mov
adc
sbb
or
mov
imul
fisubr
mov
cld
jb
out
dec
and
or
pop
or
es
push
das
pop
loopne
cdq
pop
aad
lock
in
js
pop
retf
pop
call
ja
sub
xchg
and
push
ret
cmp
dec
mov
das
imul
fstp
push
pop
fisttp
sar
pusha
sub
rcl
jp
clc
shl
jle
aas
or
repnz
or
in
adc
retf
lds
call
push
imul
mov
mov
out
sbb
pop
mov
test
gs
pop
ror
daa
and
mov
shl
fwait
sti
and
gs
ins
js
inc
mov
int
jns
jle
xchg
cmp
push
iret
inc
hlt
cmp
dec
mov
lds
dec
jb
cmp
cmp
dec
mov
into
aam
inc
call
push
inc
outs
aaa
scas
lods
fsqrt
lds
sbb
stos
sub
mov
shr
sbb
das
rcl
mov
fs
jno
std
pop
mov
outs
mov
sbb
je
cmp
cmps
arpl
shl
sub
test
sbb
cdq
adc
lds
adc
les
aad
aad
inc
pushf
xchg
xor
jnp
in
test
sbb
(bad)
das
xchg
ins
shl
test
add
mul
(bad)
in
cmp
mov
add
ret
shl
in
sbb
cs
fwait
clc
push
xchg
and
mov
fst
jmp
movs
movs
cmc
mov
sahf
xor
mov
jecxz
mov
jp
fcomi
mov
ret
sub
cdq
sub
dec
fbstp
pop
iret
push
or
movq
stc
inc
and
pop
ins
or
push
sbb
test
loop
stos
ror
inc
push
or
inc
xchg
loope
pop
xlat
sbb
dec
add
outs
sbb
stos
sub
dec
pop
retf
mov
adc
fdiv
or
test
jp
leave
sbb
inc
push
test
cmp
sbb
dec
lds
push
out
adc
imul
sub
mov
or
ins
inc
and
dec
jmp
jnp
jp
cs
ror
dec
jp
cmps
cli
rep
clc
pusha
ja
sar
jle
test
jecxz
sahf
pop
test
add
sub
add
int
(bad)
in
add
xlat
pcmpgtd
rcr
sar
popa
sbb
std
xor
(bad)
aam
sahf
push
sti
jno
xchg
inc
jb
fld
movs
mov
adc
add
pop
mov
xor
lods
aas
pop
leave
cli
inc
mov
mov
test
retf
push
popa
das
dec
or
scas
and
dec
sbb
and
into
mov
repz
sub
sub
sub
mov
lods
jmp
cmp
jmp
jno
jnp
xchg
cli
data16
lock
movzx
push
cmps
pop
shr
cmp
mov
ins
xchg
test
mov
sbb
inc
movs
pusha
int
cmp
fist
add
xchg
(bad)
fld
ret
pop
push
or
inc
adc
cld
mov
inc
mov
mov
nop
or
dec
jae
inc
and
mov
stos
das
pop
ins
imul
dec
es
int3
push
retf
xchg
and
pcmpeqb
imul
mov
jne
popf
jmp
(bad)
lahf
stos
fidiv
mov
sub
xchg
sbb
bound
cmps
mov
sub
fmulp
adc
and
bound
cmp
jbe
out
inc
(bad)
push
imul
sbb
(bad)
test
gs
lea
ret
in
or
icebp
add
imul
mov
jo
std
test
ss
cmp
adc
xchg
popa
mov
adc
scas
xor
(bad)
mov
adc
cmp
movs
dec
push
(bad)
jnp
cmp
mov
test
mov
shr
aas
or
pop
fwait
add
sub
jo
in
iret
sbb
shrd
or
addr16
fdiv
std
test
adc
fisttp
and
mov
xor
jo
xchg
aaa
sub
out
repz
jmp
enter
repnz
add
pushf
cs
and
push
sti
outs
lods
dec
push
cli
ror
cmps
ja
es
mov
mov
out
mov
mov
int
in
or
mov
je
adc
pop
ds
neg
jb
pop
push
mov
jl
test
out
push
loopne
in
push
xor
jne
(bad)
cli
aas
mov
mov
inc
dec
movs
(bad)
icebp
pushf
pop
aad
fwait
mov
jl
mov
inc
out
aam
daa
xchg
sbb
mov
sub
ja
(bad)
sub
add
outs
icebp
pushf
mov
inc
loopne
cld
xor
fs
sbb
scas
ss
es
xor
pop
dec
cwde
retf
pop
xor
imul
in
jo
dec
call
fstp
out
ins
mov
and
inc
push
dec
mov
jp
popa
sub
xor
sub
in
outs
or
xor
loop
stc
jmp
fstp
fst
pop
ins
div
inc
bnd
add
jae
pop
adc
mov
loop
adc
mov
outs
sbb
jmp
ror
(bad)
sub
outs
xor
pop
sbb
jb
loopne
pop
lahf
pushf
lods
mov
neg
fst
cmp
cmc
mov
jbe
xchg
xchg
push
lock
inc
ret
mov
fst
lods
mov
mov
cld
mov
push
imul
mov
xor
dec
neg
into
inc
hlt
jl
add
(bad)
dec
mov
cmp
pop
inc
dec
xchg
popa
sub
cmp
std
daa
mov
xor
(bad)
mov
mov
call
xchg
out
adc
jb
mov
jnp
aam
mov
xor
push
mov
mul
add
add
xchg
xor
enter
push
loop
mov
add
iret
ja
cmc
push
fmul
(bad)
in
pop
loope
mov
jns
jae
pop
cmp
dec
test
popf
neg
aas
scas
or
inc
xor
mov
cwde
shl
adc
fs
add
dec
jns
sbb
mov
fadd
dec
dec
cmp
mov
mov
fnsave
jmp
test
test
rcr
jle
adc
bound
movs
cmps
jnp
mov
ret
bound
fst
push
dec
mov
mov
add
test
sub
icebp
inc
push
adc
and
sub
hlt
mov
nop
idiv
xor
sub
arpl
pop
in
test
cmps
(bad)
(bad)
stos
adc
mov
push
test
call
push
cmps
cdq
pop
add
in
inc
bound
aas
mov
pop
icebp
lock
pop
jns
call
xchg
mov
int3
data16
mov
jbe
(bad)
push
adc
retf
pop
mov
aam
xor
or
pop
cli
and
push
pop
sbb
lods
cmp
and
add
lds
xchg
in
cs
mov
dec
jle
imul
stc
jo
cld
sbb
or
dec
pop
mov
loope
push
test
inc
ins
outs
xor
xor
push
push
xchg
inc
dec
xor
push
cdq
call
dec
dec
sahf
call
mov
ss
and
dec
ja
fwait
sahf
sbb
shr
cs
sub
nop
in
pop
js
add
and
sbb
test
pushf
mov
out
(bad)
xor
jle
int3
scas
repz
inc
add
mov
mov
cli
add
repz
jnp
shl
xchg
push
add
adc
and
call
jle
out
and
and
xor
fadd
xchg
hlt
iret
jae
xor
adc
or
push
sbb
push
mov
enter
sbb
jl
add
inc
fs
jbe
rcl
cmp
xchg
shr
lahf
pop
and
sbb
or
inc
stos
jae
xchg
popa
mov
and
xchg
jecxz
push
pop
jns
(bad)
adc
dec
adc
outs
lods
xor
cmps
int
popf
inc
ret
jbe
fstp
mov
test
leave
inc
call
jp
or
jb
iret
popa
into
movs
mov
dec
and
shl
sbb
test
mov
xor
push
aaa
mov
and
das
xor
pop
add
xchg
mov
mov
addr16
push
pop
shr
out
sbb
fwait
dec
enter
mov
dec
ror
(bad)
lea
lods
pop
rol
in
scas
dec
in
movs
sbb
mov
iret
aas
jg
inc
sub
cwde
add
pop
scas
mov
jbe
stos
ror
push
cmps
sbb
jnp
adc
pop
pop
mov
xchg
fisub
jo
push
ja
fdivr
adc
push
push
ins
out
iret
cmc
xchg
mov
dec
mov
ins
add
adc
jmp
cmp
and
dec
push
fbstp
inc
or
outs
into
pop
xor
clc
sbb
push
fs
and
jne
xchg
(bad)
imul
and
pop
push
push
mov
repnz
sbb
add
cmps
cmp
fst
out
loope
mov
lahf
test
fsubrp
and
xchg
sbb
and
test
push
js
fldenv
cdq
or
stos
pop
dec
or
mov
leave
mov
dec
xor
mov
fmul
rep
sbb
fisubr
mov
mov
pop
pop
mov
loopne
int3
test
xchg
gs
movs
data16
and
fistp
jb
dec
jl
pusha
xchg
push
pop
adc
aas
repnz
out
push
mov
rcr
push
inc
sahf
std
sbb
xchg
sbb
retf
mov
out
fadd
daa
jg
push
data16
inc
(bad)
in
inc
rcr
scas
add
mov
jmp
mov
cmps
xchg
cmp
hlt
cmp
stos
mov
sub
sub
jae
and
lea
ja
arpl
jl
aam
adc
cmp
movs
and
imul
pop
cmp
dec
(bad)
pop
push
call
test
es
pop
cs
and
mov
jns
mov
std
ror
pushf
mov
fwait
dec
xor
test
or
push
scas
cmp
sub
pusha
lea
xacquire
xor
jle
das
cmps
int3
sub
mov
fmulp
dec
sbb
xchg
fnstenv
es
and
aaa
dec
cwde
pusha
ss
(bad)
repz
xchg
in
jp
popa
mov
fbld
mov
or
adc
or
adc
xchg
inc
push
popf
fisttp
push
mov
mov
mov
lea
add
stc
add
push
inc
sbb
and
add
in
lds
std
es
add
es
inc
hlt
mov
jbe
imul
and
add
or
fmul
dec
in
xlat
cwde
shl
std
lock
adc
push
aaa
push
sar
ins
pop
sti
test
test
es
fnstsw
inc
or
cmp
cmp
fcom
dec
retf
and
out
inc
idiv
adc
jns
mov
shl
push
jne
ss
jmp
int3
xchg
nop
sub
dec
pop
cli
xchg
cmps
xchg
sbb
mov
mov
adc
lods
gs
leave
xchg
out
push
aaa
or
das
fdivrp
(bad)
mov
mov
xlat
add
add
jmp
pop
adc
xor
fiadd
ja
dec
mov
jmp
inc
jmp
xor
cli
ja
xchg
add
pushf
inc
lahf
fsubr
ss
jle
faddp
push
and
sbb
jno
add
cmp
mov
lods
aas
imul
sbb
pop
jnp
test
fs
and
nop
xchg
fild
mov
sub
cmc
xchg
shr
dec
mov
aad
bnd
sti
nop
repnz
popa
pop
mov
sbb
xor
mov
fimul
shl
daa
out
sub
add
pusha
mov
fmul
xchg
mov
ret
call
xchg
mov
dec
mov
rol
and
pop
mov
arpl
mov
call
retf
mov
loopne
mov
mov
iret
add
xor
cs
mov
jb
clc
push
mov
sbb
cmp
adc
sub
cmp
ror
add
in
rol
int3
lds
mov
pop
icebp
scas
dec
lods
cmc
xchg
sub
adc
jmp
inc
cld
shl
pop
repz
jge
cdq
adc
or
mov
add
fucomp
sbb
out
push
push
lahf
mov
leave
jb
dec
pop
mov
xor
dec
rcl
call
push
and
dec
addr16
arpl
push
cmps
push
mov
das
and
in
mov
mov
mov
or
and
nop
jns
(bad)
adc
add
pop
stos
arpl
retf
cmp
das
popf
jmp
xchg
nop
mov
sbb
jmp
icebp
jp
popa
neg
test
shr
add
daa
jno
mov
pusha
pop
dec
mov
lea
jmp
js
arpl
mov
into
add
dec
mov
cli
push
jp
sbb
mov
mov
jae
(bad)
int3
dec
cmp
push
sbb
cmp
xchg
sbb
fs
push
ror
xchg
fst
jle
(bad)
cmps
fdivr
(bad)
test
lods
call
test
stos
xchg
hlt
push
inc
cmp
push
mov
gs
jmp
call
daa
add
lods
pushf
mov
sub
sti
pop
mov
sub
lods
data16
cmp
call
fs
sub
cmp
lea
test
jl
stos
mov
(bad)
retf
test
in
mov
cmp
sar
out
js
xchg
not
mov
adc
add
mov
sbb
fldenv
out
lock
ja
jle
adc
inc
or
mov
push
lock
mov
mov
outs
je
int
shl
popf
out
push
adc
arpl
cmp
rep
mov
jne
cmp
inc
ins
pop
enter
pop
push
mov
sub
das
popf
pop
cmps
mov
das
or
sub
inc
mov
cwde
js
inc
jmp
loope
daa
push
jbe
pmaxsw
loop
jle
push
jno
sub
dec
daa
jnp
das
xor
in
mov
mov
push
dec
ins
or
repz
stc
cmp
pop
xchg
adc
cwde
mov
pop
fwait
mov
jbe
addr16
push
jno
and
jo
inc
rcr
mov
popa
ficomp
aas
cdq
pop
call
jle
xchg
aas
(bad)
imul
jge
mov
cmp
fisubr
or
bound
inc
(bad)
sbb
mov
pop
das
inc
cmp
add
cmp
cmp
or
cs
scas
mov
and
cmps
or
(bad)
mov
and
jae
xor
jo
(bad)
cmps
and
sar
inc
sub
adc
push
adc
dec
or
cmp
adc
xor
and
mov
stos
icebp
arpl
fmul
and
mov
or
mov
push
hlt
push
pop
(bad)
fisubr
dec
stos
adc
pop
pop
push
je
inc
mov
retf
(bad)
popf
icebp
jl
push
xor
sbb
cmp
pop
and
out
jg
xor
push
push
cdq
sub
aad
icebp
xor
adc
fstp
jmp
add
mov
dec
loope
cmp
and
add
mov
xchg
rcl
sub
xchg
or
lods
cmps
inc
dec
fistp
std
jecxz
fs
(bad)
and
dec
imul
ja
data16
ja
push
(bad)
cwde
loopne
out
add
out
in
push
mov
shl
xor
mov
les
cmp
xchg
dec
mov
rol
and
cld
mov
ficomp
cmp
into
cmp
xor
int3
mov
shr
and
mov
dec
jmp
push
cmc
out
repz
sar
dec
mov
jne
mov
xchg
ret
push
lds
test
scas
xor
and
imul
ror
add
sub
push
or
pusha
fisubr
in
mov
pop
xchg
add
fsub
das
push
ins
iret
xor
cmp
push
pop
inc
inc
xor
dec
dec
fidivr
stc
xchg
mov
mov
leave
mov
xor
sub
mov
jmp
shr
test
imul
fidivr
fwait
cdq
iret
cmc
out
mov
iret
sbb
xor
cmc
pusha
mov
pop
or
adc
jnp
pop
jns
xchg
adc
xor
mov
jo
adc
icebp
arpl
sub
das
dec
push
aaa
mov
data16
lock
jecxz
or
inc
fld
push
dec
ja
jns
(bad)
popa
xchg
mov
or
scas
(bad)
and
mov
push
inc
stos
repz
pushf
cmps
adc
imul
sahf
sub
mov
jmp
shl
push
cli
or
lds
jb
adc
stos
movs
outs
jne
jo
or
cld
pop
sbb
dec
inc
mov
push
fild
and
xchg
loop
(bad)
les
cmp
mov
mov
outs
pop
dec
pop
xchg
mov
aaa
stos
shl
pop
fs
sub
ins
adc
fild
(bad)
rol
call
cmp
pusha
ins
push
fst
sti
fs
push
not
pop
xor
bnd
pop
mov
jp
xchg
aas
pop
cdq
enter
adc
xor
bound
outs
fs
jle
dec
adc
sub
add
mov
cmp
add
das
mov
loope
lods
popf
mov
pop
inc
mov
nop
les
shr
jns
push
cmp
shl
mov
dec
iret
mov
mov
movs
aas
or
scas
stos
push
xor
enter
gs
pop
push
cwde
mov
add
ja
sbb
mov
cmps
ds
out
jmp
dec
outs
loope
fistp
sbb
dec
mov
fs
add
out
in
arpl
rcl
fprem
add
nop
mov
aas
test
add
idiv
push
mov
xlat
ret
dec
loope
push
aad
js
jae
sub
cwde
xchg
cli
jae
in
(bad)
jbe
sar
retf
push
int
fwait
ret
ret
jbe
fstp
das
sbb
sub
add
inc
ins
shl
cmp
pop
sub
jg
jmp
rcl
xor
(bad)
out
add
mov
les
pop
dec
and
stos
sar
and
push
repnz
pusha
jns
push
mov
retf
int3
add
or
jg
mov
xchg
xor
imul
lods
inc
and
in
fwait
mov
adc
jnp
pop
xchg
cmps
cli
pop
gs
psllw
cmp
mov
sub
loopne
inc
aam
ja
mov
ret
movs
adc
das
jle
add
or
fdivr
xchg
aas
mov
aas
psraw
movs
sbb
mov
xchg
sbb
ret
fidiv
cmps
stc
or
outs
and
iret
mov
sbb
aad
out
lods
mov
ret
imul
push
cmp
pop
aaa
nop
cld
cmp
scas
jnp
or
cmp
cmp
daa
sti
pop
add
call
add
into
in
lods
dec
jnp
(bad)
out
ss
adc
pushf
xchg
out
bound
pop
ja
mov
and
je
sub
ret
lea
and
test
jl
or
retf
push
mov
cmp
mov
inc
jbe
and
imul
adc
mov
or
out
cmp
xchg
push
sub
clc
and
mov
xchg
and
dec
and
push
push
and
cmp
ftst
cmc
iret
scas
icebp
je
push
mov
call
mov
adc
and
pop
sub
push
pop
loop
cmps
aam
jmp
or
es
shl
push
xchg
or
sbb
push
dec
jecxz
and
cmp
ret
test
mov
lods
fcom
push
jae
xor
not
mov
and
cdq
cmps
jo
fnstcw
fs
jg
movs
cmps
cmps
inc
push
inc
sub
or
rcr
dec
shr
sub
sbb
xchg
jge
push
xchg
mov
mov
std
rol
or
dec
in
(bad)
jmp
outs
popf
adc
adc
and
in
push
and
jle
rcl
test
aas
dec
in
test
inc
sbb
push
or
cmc
gs
fsub
xchg
fwait
sub
mov
sbb
cmp
test
aad
mov
fcomp
ins
inc
sub
dec
leave
push
pop
xor
mov
mov
pushf
mov
mov
fimul
bound
mov
mov
shufps
pusha
into
add
cmc
sti
mov
loop
outs
in
mov
dec
into
jno
pop
mov
inc
pop
sub
pop
inc
ins
xchg
jge
stos
push
into
rcl
ins
cld
pop
mov
std
sbb
fwait
cmp
mov
mov
repnz
jmp
mov
push
add
les
dec
jbe
js
xchg
daa
jne
cmp
pop
xchg
(bad)
jmp
(bad)
fisubr
aad
inc
add
pop
pop
jmp
xor
push
(bad)
fadd
mov
(bad)
mov
outs
mov
cmp
ficom
(bad)
dec
sbb
jmp
cmp
loope
les
in
mov
and
call
(bad)
iret
out
outs
cmp
sar
cmp
nop
pop
cmp
push
iret
and
lds
pop
and
mov
sub
ins
xchg
rcl
xor
ss
mov
pop
test
cmp
jo
jae
ds
inc
movs
test
add
cmp
add
sub
popa
(bad)
push
ins
jb
sar
mov
or
adc
es
cmp
xchg
xlat
test
cmps
cwde
inc
in
pop
test
add
jmp
inc
jge
leave
call
adc
inc
sub
xor
cmps
dec
or
rol
push
add
dec
(bad)
fistp
lods
dec
push
(bad)
dec
lds
cmc
pusha
shl
pusha
pop
cmps
pop
das
fisub
cmps
dec
dec
aam
retf
and
fnsave
fidiv
jmp
leave
sub
and
and
mov
nop
mov
mov
and
dec
popa
inc
jle
out
mov
adc
cs
fdiv
jb
mov
imul
add
xchg
inc
adc
inc
out
cmp
movs
push
pop
mov
call
test
mov
cld
outs
inc
leave
scas
or
mov
popf
sbb
ror
sub
je
sbb
and
call
push
xor
mov
jecxz
xchg
fst
dec
shl
adc
pop
enter
es
data16
das
ret
in
ret
in
mov
and
adc
popa
int
or
retf
xchg
mov
aas
jmp
mov
sub
and
cmp
and
(bad)
jl
xchg
out
pushf
fs
bound
xor
in
or
mul
push
pushf
jo
(bad)
sbb
pop
or
mov
fistp
sar
loopne
jbe
dec
out
xor
jns
xchg
jo
cmps
xor
test
pop
loopne
mov
jne
popf
test
add
mov
mov
push
jg
cmp
(bad)
inc
in
mov
outs
mov
repnz
dec
pop
aas
outs
retf
lods
ins
push
mov
repz
sbb
or
pop
and
fstp
mov
cmp
mov
sbb
cwde
aam
cld
punpckhdq
jb
clc
dec
aas
jo
je
aad
les
fs
or
adc
mov
imul
mov
jg
dec
ror
push
pop
mov
shl
cmp
mov
add
jl
mov
ret
mov
retf
dec
call
add
sub
sahf
popf
push
ret
test
push
mov
pop
imul
lock
inc
sub
(bad)
jne
call
mov
push
ret
xchg
fcom
jbe
mov
fstp
mov
das
push
add
xor
xlat
jp
dec
cld
cmp
xchg
aaa
enter
rcl
movs
es
inc
out
es
daa
pop
int
push
int
jl
movs
dec
out
(bad)
push
inc
cli
mov
popf
jb
or
inc
jmp
clc
xor
dec
and
cdq
std
iret
and
cmc
shl
outs
adc
pushf
outs
div
or
xlat
mov
pusha
push
mov
pop
or
pop
mov
pop
shr
ins
mov
jae
js
fld
mov
popf
lahf
pop
push
je
aam
or
sub
nop
xor
xor
cmp
add
leave
push
jne
sub
inc
push
mov
rcl
(bad)
fsub
mov
mov
sbb
loope
(bad)
xor
fst
or
dec
jb
loop
push
or
popa
pop
hlt
mov
jg
outs
mov
mov
dec
aad
fistp
push
test
(bad)
call
call
mov
stos
adc
push
or
psadbw
pop
and
pushf
outs
fs
add
stos
lock
fsubr
popf
sub
mov
pop
cwde
je
inc
enter
inc
pop
xchg
pusha
stc
jge
inc
cld
jle
retf
xor
sub
or
mov
test
bnd
sub
ja
mov
mov
xlat
hlt
mov
fbstp
(bad)
(bad)
ficom
aad
sti
nop
xor
mov
jl
call
jecxz
or
cs
mov
lods
jle
sbb
mov
std
mov
call
rcr
scas
pop
mov
inc
outs
xchg
inc
pop
jmp
sub
lods
pop
cmps
sub
fisttp
ins
dec
sub
inc
aas
lea
icebp
movs
cmp
cmp
sub
imul
mov
dec
pop
xchg
retf
loope
push
scas
adc
adc
arpl
ins
cmp
shl
inc
mov
icebp
pop
inc
sub
pop
(bad)
mov
mov
arpl
and
sub
add
js
sbb
lds
mov
call
mov
mov
xchg
in
push
mov
or
cmp
push
ins
push
xor
jae
sbb
test
test
and
retf
fisubr
xchg
ror
rep
pop
sub
daa
or
mov
mov
sbb
mov
mov
shl
or
mov
xchg
arpl
clc
lods
inc
pop
mov
add
retf
jbe
ss
jbe
lods
pop
pop
inc
or
std
xchg
xor
adc
jo
inc
sub
add
mov
mov
pop
jno
xor
ret
ds
dec
enter
loope
xor
cs
into
(bad)
xchg
aaa
aas
push
push
out
pop
dec
ins
cli
pop
mov
sbb
push
inc
aaa
lds
inc
sub
dec
mov
jne
add
add
fmul
mov
mov
sub
cmp
icebp
and
stos
mov
stos
in
inc
jns
rol
push
inc
dec
mov
int3
add
mov
add
xor
cdq
hlt
les
rol
popa
sub
jmp
add
in
pop
repz
and
cmp
dec
mov
fst
push
xchg
inc
and
clc
add
js
loopne
(bad)
ret
push
pushf
xchg
scas
sbb
mov
rcr
pop
clc
into
scas
push
or
push
fsubr
test
stos
ret
xor
jge
lods
sbb
mov
cs
out
(bad)
sahf
stos
jbe
lods
jno
(bad)
jne
or
sar
jne
pusha
cs
call
dec
sub
pop
mov
cmp
(bad)
pop
in
pop
nop
push
xchg
leave
push
mov
or
ficomp
into
movs
push
int3
cli
(bad)
aas
and
and
sbb
loopne
test
fs
pop
shr
fadd
icebp
test
and
bound
pop
(bad)
push
icebp
jge
jno
mov
xchg
loopne
fcom
fucomi
popa
cdq
mov
push
inc
xchg
popa
push
add
adc
mov
mov
scas
push
aam
xor
sub
push
das
call
fadd
cmp
push
call
jnp
pop
inc
mov
out
pop
pop
dec
mov
(bad)
shl
mov
jns
jnp
inc
cwde
cmc
cmp
mov
js
cmp
cs
jmp
fisttp
inc
pop
es
inc
sbb
test
sub
hlt
cmp
repz
push
movs
aad
xlat
pushf
mov
cli
jmp
adc
xchg
addr16
dec
addr16
rol
add
add
pop
out
clc
add
shl
jmp
jnp
(bad)
jp
pushf
push
sbb
add
adc
xchg
lds
fs
dec
sbb
sbb
cmp
push
lods
mov
mov
jge
movs
xchg
inc
fild
cwde
aaa
xor
dec
jns
ins
and
sub
xchg
sbb
mov
xor
mov
stos
inc
mov
push
lods
in
or
inc
mov
sti
cmc
xor
inc
cwde
idiv
fdiv
int
push
push
mov
mov
inc
mov
add
dec
add
dec
test
sub
in
push
cmp
mov
movs
xchg
mov
cmp
mul
mov
in
mov
jo
push
imul
int
loope
xlat
and
mov
fidivr
inc
jns
jno
add
leave
hlt
fs
shr
in
scas
dec
clc
jo
dec
test
inc
pop
les
in
or
test
xchg
xlat
inc
jnp
shr
mov
push
add
cmp
stos
dec
push
and
ins
xchg
jmp
nop
push
inc
xchg
dec
les
call
push
cmp
outs
push
cmps
loop
fcmovnb
jb
mov
sub
out
pop
jmp
inc
repnz
mov
push
mov
(bad)
loopne
and
push
jns
jle
jmp
retf
ja
cmp
stos
es
scas
add
int
lea
scas
jae
fiadd
cli
scas
ret
cmp
mov
sti
jmp
inc
shr
pop
icebp
(bad)
in
(bad)
add
dec
fistp
dec
neg
fwait
or
imul
test
push
pop
stos
mov
mov
sub
js
push
je
push
or
sar
mov
clc
jmp
jae
adc
mov
and
pop
push
push
mov
in
imul
xchg
add
stos
int3
(bad)
hlt
addr16
xchg
mul
inc
outs
stos
inc
jg
aas
in
fstp
cmp
(bad)
popf
pop
jnp
arpl
inc
xor
and
aaa
pop
arpl
arpl
and
jecxz
lock
je
adc
addr16
add
stos
and
push
mov
or
rcr
in
fs
je
add
push
dec
loop
arpl
sbb
std
sub
shl
pushf
int3
jmp
and
dec
enter
adc
mov
sub
and
adc
add
xchg
stos
shr
and
stos
push
(bad)
aam
stos
ins
jp
(bad)
xor
popf
inc
pop
mov
and
and
(bad)
stc
mov
pushf
test
bound
ins
into
arpl
xor
fcomp
scas
push
out
push
mov
push
jno
movs
xlat
test
inc
stc
add
push
xchg
xor
shl
ins
and
ret
pop
les
and
dec
aas
xlat
xchg
xlat
imul
pop
cld
movs
sar
mov
cld
or
jecxz
fcom
add
ficomp
push
mov
in
pop
lahf
mov
pop
xor
adc
jb
mov
stos
shl
add
pop
xchg
loope
jnp
xchg
stos
gs
out
push
push
inc
mov
pop
int
sub
push
mov
js
cld
loopne
fld
dec
jno
inc
cdq
sbb
or
(bad)
jnp
and
add
mov
rcr
sar
test
loopne
push
loope
pushf
push
jl
adc
xor
inc
pop
pop
scas
sar
mov
xchg
mov
addr16
xor
scas
rcr
push
dec
lock
mov
movs
push
movs
adc
inc
icebp
int
push
fs
aam
or
inc
xor
adc
jno
mov
jge
hlt
enter
je
dec
push
jnp
fld
cmps
scas
inc
repz
mov
xor
push
fmul
cmp
jbe
gs
dec
(bad)
xor
mov
aad
add
ret
sbb
mov
scas
lds
jne
or
ficom
mov
sub
fdiv
and
pop
mov
sbb
adc
mov
jmp
(bad)
pop
jb
adc
shl
xchg
fcom
lds
dec
sbb
imul
dec
(bad)
sbb
add
sub
adc
and
cwde
out
cmp
movs
(bad)
jmp
lea
gs
xor
xchg
sub
cmp
cdq
sub
inc
(bad)
hlt
fisttp
or
mov
inc
je
push
fimul
test
(bad)
mov
lods
push
cmp
mov
imul
inc
cmps
std
push
lods
mov
push
jecxz
and
lea
jnp
pop
call
xlat
fwait
pop
adc
dec
imul
mov
mov
add
push
ret
outs
adc
or
movs
js
rcl
sbb
jl
inc
mov
or
stc
jecxz
adc
mov
inc
cmp
cwde
inc
rcl
es
mov
fisub
cmp
lahf
jl
and
cs
sub
adc
cmp
(bad)
test
xchg
(bad)
mov
dec
dec
mov
test
dec
adc
jb
movs
lds
sar
loope
jb
scas
mov
fcomip
sub
pop
lock
je
jae
push
mov
retf
sti
int
pop
je
ja
shl
call
mov
loopne
sub
inc
pop
mov
aaa
je
jb
or
cs
add
dec
shl
inc
push
jb
cmp
ret
test
jne
call
(bad)
in
das
popf
jge
lds
fcmovnu
addr16
push
pop
call
leave
mov
inc
scas
ret
push
fcom
scas
lods
push
inc
repz
out
pop
pushf
popf
fcom
ja
push
in
add
push
or
popf
out
inc
test
ror
hlt
int
ret
adc
rcl
sbb
mov
inc
scas
push
pop
daa
imul
adc
(bad)
sbb
rcl
mov
pop
std
out
push
or
xchg
sub
push
ja
jecxz
jns
ret
sbb
and
movs
or
ror
out
jnp
(bad)
sti
xchg
movs
lods
sub
mov
fld
xor
scas
sbb
adc
(bad)
jmp
and
repnz
inc
sbb
push
aam
(bad)
loope
jo
xlat
gs
mov
dec
(bad)
in
scas
cmp
in
xchg
hlt
pop
test
xchg
ins
mov
test
adc
sahf
mov
and
and
jbe
xlat
(bad)
fwait
xchg
les
dec
pop
js
push
sub
scas
mov
xor
mov
xchg
les
ins
aad
push
lods
aad
(bad)
adc
call
push
nop
pop
add
cmp
test
inc
aam
sti
sub
fistp
in
lods
push
nop
cs
xchg
ds
inc
cwde
or
ss
dec
cmp
push
sbb
or
cwde
popa
out
out
div
jno
mov
iret
sbb
aaa
jae
shr
fucom
outs
pop
lods
add
jmp
or
loope
add
lods
dec
inc
inc
mov
inc
fsub
aad
jmp
sbb
mov
mov
or
out
jle
loop
cmp
repz
fwait
and
test
pop
push
div
inc
test
arpl
(bad)
les
inc
clc
pop
(bad)
mov
loopne
or
aas
je
sbb
in
pop
and
popf
int3
sti
or
ret
sub
push
mov
addr16
mov
scas
xor
sub
cmp
pop
push
cmc
fidivr
(bad)
cmp
jecxz
xor
push
mov
movs
pop
not
fild
repnz
ret
xchg
aam
imul
ret
outs
les
lods
dec
push
ja
pop
arpl
push
push
out
mov
fld
frstpm(287
and
lock
(bad)
adc
pop
out
call
(bad)
call
dec
mov
(bad)
mov
sbb
cmp
in
xor
aad
pop
adc
push
xor
push
pop
sbb
mov
mov
cli
inc
mov
icebp
mov
pop
sbb
pop
fisubr
xchg
or
push
cmp
aad
jae
mov
ss
inc
into
push
sbb
cli
dec
jbe
xor
das
dec
adc
jne
or
jne
daa
dec
scas
mov
pop
(bad)
aaa
retf
jl
fisttp
cs
loop
dec
daa
adc
(bad)
push
mov
sbb
pop
pop
bound
mov
jp
pop
imul
mov
sar
or
push
or
popf
and
sbb
lahf
mov
and
jmp
sbb
jb
cld
sti
mov
cmps
lahf
test
test
retf
sub
sbb
cmp
pusha
xchg
push
xchg
int
icebp
iret
stos
movs
mov
cld
dec
icebp
mov
loop
in
ins
test
loop
mov
lock
pop
mov
rcl
cmp
dec
in
adc
stos
cli
mov
cs
pusha
jge
cmps
in
add
repz
daa
dec
popa
adc
sbb
dec
xchg
sub
popa
or
xor
aad
retf
test
mov
out
rcl
jne
push
pop
enter
xchg
sub
inc
fld
cmp
sub
ins
dec
cmp
in
push
retf
pop
aaa
fs
sub
adc
jbe
mov
(bad)
cs
test
adc
sbb
sti
in
pop
cwde
jb
aas
pushf
aam
das
ins
xor
or
fcomip
mov
rcl
test
pop
pop
mov
popf
pop
imul
scas
push
loop
fstp
pop
cmp
and
add
inc
test
sub
into
aam
mov
xchg
shr
pop
jecxz
fwait
jle
jmp
scas
inc
(bad)
les
cli
cwde
dec
mov
popf
jb
inc
sbb
push
imul
test
(bad)
xlat
sar
sbb
enter
dec
imul
cdq
icebp
pop
push
xor
mov
in
adc
sbb
jo
inc
adc
stc
push
or
xor
jg
fst
in
mov
inc
(bad)
repnz
leave
jge
jg
bound
addr16
push
mov
cmp
rol
inc
repnz
xchg
cmps
outs
or
lahf
pop
sub
imul
(bad)
pop
cmp
not
mov
jecxz
into
out
mov
test
push
pop
push
sub
out
sub
mov
pusha
mov
test
or
dec
pop
stos
jno
es
sbb
add
test
fdivp
lock
scas
mov
push
fist
jmp
(bad)
(bad)
xor
jmp
jp
sub
adc
dec
hlt
add
icebp
outs
inc
mov
mov
(bad)
neg
xchg
(bad)
mov
and
cmp
or
xchg
sbb
cli
sbb
dec
mov
fistp
or
add
leave
out
call
movs
out
xor
mov
sbb
add
adc
push
sub
jmp
das
movs
pop
or
frstor
fpatan
scas
ret
xchg
fwait
je
mov
and
fisubr
addr16
inc
les
rol
mov
xchg
stos
mov
mov
jno
and
xchg
mov
xlat
mov
xlat
loop
xlat
mov
data16
mov
in
jg
push
xlat
fsub
cmps
fs
xchg
es
push
xlat
and
or
fild
cld
inc
push
push
daa
xor
in
pop
sbb
cdq
arpl
test
je
out
call
push
xchg
sbb
ins
ins
or
into
add
mov
push
outs
jmp
loope
cmps
(bad)
in
fld
call
(bad)
jecxz
xabort
sbb
cmp
dec
sti
jbe
pop
movs
ret
mov
mov
jmp
stos
pop
js
jns
push
sti
stos
adc
mov
shr
xor
xchg
or
mov
or
jecxz
push
fdiv
jl
fwait
lahf
mov
nop
xlat
mov
aaa
adc
xor
jmp
xchg
ins
jae
(bad)
pop
lods
sbb
sahf
xor
sbb
fmul
pop
sbb
lahf
mov
dec
bound
pop
push
and
jae
jno
jecxz
xchg
ds
retf
mov
dec
xor
mov
imul
mov
xchg
sahf
clc
and
(bad)
cmc
cli
out
sub
outs
shl
rcr
mov
jne
into
adc
loopne
scas
out
cs
mov
mov
in
imul
arpl
push
sub
jno
shl
scas
jnp
test
ret
(bad)
and
fwait
inc
dec
jo
xchg
in
jne
or
test
jle
mov
dec
shl
mul
sar
lods
shl
cs
popf
jp
int
cmp
mov
dec
dec
out
or
xchg
jae
jmp
inc
sbb
iret
ret
aas
into
xor
xchg
cwde
and
mov
mov
jnp
xor
jbe
jecxz
jge
cmp
adc
and
stos
shl
dec
jbe
mov
xchg
xchg
cs
nop
inc
mov
call
jge
loopne
int
push
fdiv
sub
xchg
or
mov
in
jo
test
add
dec
jle
in
aad
aam
lods
inc
(bad)
(bad)
dec
xchg
push
aas
pop
and
out
test
pop
dec
mov
hlt
xor
fnsave
jmp
adc
out
repz
push
dec
push
cdq
outs
loopne
sti
std
push
add
mov
sbb
in
cmp
inc
int3
aaa
out
hlt
pop
xchg
sbb
in
sbb
fisttp
dec
fs
push
push
mov
ja
imul
pop
add
mov
xor
xor
pushf
bound
scas
adc
dec
jle
stc
xchg
mov
fsub
xor
pop
into
push
mov
out
mov
and
mov
cdq
ja
mov
sub
xor
jge
repnz
xlat
mov
xlat
in
fwait
stos
nop
cdq
pop
xor
mov
dec
mov
pop
test
repnz
cdq
mov
ins
clc
lds
jmp
pop
mov
pop
mov
push
cwde
xor
dec
jnp
dec
mov
enter
lds
mov
call
jae
xchg
call
push
inc
pop
aas
mov
gs
mov
icebp
xchg
stos
call
movs
lock
loopne
clc
mov
add
push
int3
xchg
icebp
popa
sub
nop
sub
push
lds
add
mov
mov
jg
cmp
les
cmp
add
xchg
push
inc
cmp
push
sti
xchg
dec
mov
jmp
sub
je
pop
ror
mov
int3
mov
pusha
push
cmps
lock
xor
clc
mov
add
xabort
cmps
pop
inc
sub
cmp
popf
aad
je
outs
push
sbb
or
mov
aad
xor
dec
add
test
or
retf
dec
fdivr
lahf
mov
mov
lock
xor
mov
test
lods
jns
aam
fist
sub
adc
mov
mov
mov
xor
shr
lahf
aas
fbstp
fst
mov
fstp
jae
lods
sub
mov
jne
clc
mov
push
sbb
inc
sbb
fdivr
shl
pop
push
fidivr
lds
xor
test
ficomp
je
jns
sbb
dec
fs
nop
mov
inc
mov
inc
loopne
das
bound
xchg
mov
cmp
fcom
les
xchg
movs
xor
dec
fistp
and
inc
mov
shl
fsubr
iret
out
test
jmp
shl
cmp
and
and
mov
adc
es
int3
das
loopne
sbb
clc
mov
inc
xor
push
cwde
dec
push
fcmovb
pop
nop
jl
pop
and
cmp
push
add
push
cli
pop
mov
xchg
int
loop
repnz
vmwrite
jle
mov
in
pop
push
adc
out
mov
popf
xchg
mov
jnp
test
pop
inc
xor
icebp
sub
mov
ss
(bad)
test
jo
loopne
mov
mov
and
ret
mov
stc
jmp
and
mov
fs
in
rcr
or
add
fcom
mov
jno
xchg
xchg
jne
stc
mov
pop
cmp
fs
cmp
sub
adc
sbb
fsubr
inc
mov
sub
in
pop
stc
rep
in
pop
xor
ins
adc
mov
cmp
xor
dec
leave
xlat
iret
sbb
push
jmp
in
push
shl
xlat
pop
dec
shr
sub
cmp
xchg
or
mov
sbb
(bad)
fcmovnb
scas
dec
jnp
or
test
movs
adc
aam
enter
scas
test
inc
(bad)
mov
jecxz
dec
inc
cmc
cld
das
les
mov
lods
and
test
push
(bad)
stc
leave
es
mov
rcl
jp
cld
and
mov
lahf
imul
xor
xlat
lea
imul
push
push
and
js
pop
inc
cli
jmp
dec
dec
popa
and
and
inc
adc
in
pop
leave
push
repz
jl
mov
jmp
jmp
sti
mov
lods
dec
cmp
add
sub
dec
fistp
dec
addr16
sub
icebp
mov
(bad)
loopne
push
mov
shl
lahf
arpl
mov
jno
shl
les
cmps
mov
ss
imul
cmp
(bad)
enter
cmp
dec
add
loopne
daa
pop
arpl
(bad)
mov
xor
test
dec
enter
popa
or
pop
dec
jnp
adc
leave
pop
push
call
les
aam
inc
pop
or
mov
out
gs
push
call
cmp
inc
and
pop
jp
cmp
mov
dec
in
and
leave
imul
stos
mov
mov
push
ret
mov
dec
aas
mov
mov
popa
add
push
fdivr
test
jns
adc
(bad)
sbb
adc
into
xor
ss
xchg
or
and
(bad)
and
pop
in
mov
pusha
sbb
popa
dec
js
test
ret
ss
aad
jecxz
out
pushf
les
add
scas
fiadd
inc
fs
sbb
loope
(bad)
lea
and
in
jl
mov
mov
out
ds
cdq
dec
mov
pop
add
push
jnp
xchg
xor
mov
ins
mov
ret
in
pop
cmps
fimul
lods
mov
mov
das
pushf
je
imul
and
and
xor
jle
stos
repnz
in
cwde
and
mov
jns
lods
push
mov
and
xchg
inc
sub
test
inc
or
dec
outs
(bad)
das
adc
xchg
out
cmp
(bad)
push
xor
inc
imul
(bad)
loopne
push
pusha
mov
or
or
add
(bad)
rol
add
aad
test
adc
mov
lock
pop
daa
sar
out
fistp
mov
mov
adc
cs
inc
lods
clc
sbb
sbb
sub
enter
stos
in
mov
and
test
rcr
cmp
ret
cdq
jns
xchg
sub
inc
stos
lea
mov
push
sub
add
les
pslld
pop
call
shr
sub
cs
mov
mov
int3
mov
daa
push
sub
(bad)
hlt
dec
sub
push
add
iret
aaa
mov
cmp
stos
(bad)
ins
test
call
ins
add
sar
xchg
test
and
pop
jle
xor
sub
lahf
cmp
mov
imul
into
sbb
cmp
rcl
cmp
cld
or
xchg
aam
add
add
push
cmp
dec
test
int
mov
stos
call
in
into
and
fdiv
shl
mov
fst
dec
sub
popa
into
cmp
adc
js
fs
stos
cmp
push
popa
jne
scas
fwait
jo
sub
jne
test
or
pop
lock
pushf
aas
int
imul
adc
js
std
and
fwait
pop
sbb
push
fnstsw
into
cs
aad
popa
jo
dec
fnstenv
sbb
xchg
sub
repz
fild
push
xchg
jbe
lock
cmp
mov
jge
das
jecxz
mov
bound
std
outs
clc
xor
sbb
cli
xchg
push
xor
cmps
loop
mov
sbb
jnp
sbb
mov
test
jne
movs
ja
scas
leave
dec
cmp
call
in
and
cmp
loopne
hlt
rol
retf
inc
pop
jo
es
mov
inc
mov
cmp
les
shl
daa
cmps
sub
(bad)
aas
add
inc
pop
test
add
das
rol
test
pushf
push
std
inc
push
(bad)
adc
mov
mov
sub
cmp
fmul
int3
ins
jmp
cmp
mov
add
dec
jp
cmp
in
ds
add
je
mov
mov
xor
dec
ret
imul
pop
(bad)
or
(bad)
sbb
pop
jge
shl
cmp
movs
adc
mov
lock
lahf
or
pop
adc
and
jmp
cmp
jno
xchg
adc
movs
or
cmp
cmps
sub
bound
bound
and
push
fild
jnp
sub
in
cmps
jo
jmp
mov
adc
mov
cmps
inc
dec
fstp
xchg
xchg
call
xchg
fdiv
stos
xor
cmp
mov
rcr
push
(bad)
out
ret
push
jle
xchg
call
iret
xchg
dec
cmp
cwde
jge
dec
repnz
dec
mov
jo
test
sar
je
adc
out
les
stos
mov
shr
dec
loope
push
xlat
cmp
ficom
ret
jecxz
add
(bad)
leave
mov
mov
test
xor
je
mov
psubsw
les
jbe
addr16
fld
cmp
bound
outs
cmp
setb
add
inc
mov
jecxz
adc
dec
iret
mov
mov
jg
jne
pushf
and
fisubr
and
shr
jne
adc
add
push
fisubr
ror
jo
jmp
mov
loope
stos
mov
add
ret
pushf
dec
ss
sub
ja
jmp
call
mov
cmp
jne
sbb
lock
cmc
ret
rcl
add
cmps
push
addr16
jp
faddp
mov
xor
ins
aam
jle
in
call
fadd
jl
adc
jecxz
outs
repz
shl
adc
and
cmp
(bad)
xchg
les
cmp
mov
imul
ja
lds
data16
dec
mov
or
and
cmc
and
jns
mov
push
(bad)
jle
sahf
es
xor
mov
mov
push
out
std
enter
add
arpl
mov
fidivr
test
or
and
push
into
ror
cs
xor
cs
scas
jne
xchg
pushf
pop
in
rcl
je
icebp
hlt
xchg
add
rcr
xchg
pop
jl
fwait
inc
mov
or
stos
(bad)
aas
icebp
xor
and
jo
lock
and
pop
xchg
lea
or
jae
fdivrp
xchg
bound
mov
fsub
test
and
inc
inc
cmp
movs
xchg
sub
xor
(bad)
fcom
mov
cmc
jns
(bad)
fild
sti
pop
xchg
pop
mov
push
inc
out
cld
mov
pop
clc
lock
sbb
inc
fucomp
jne
inc
cli
call
mov
pusha
ret
sub
push
mov
jae
xchg
cs
mov
test
les
in
pop
push
je
jno
sbb
dec
inc
adc
xchg
pusha
das
jnp
shl
outs
dec
mov
xor
lahf
xchg
out
mov
fs
ja
(bad)
xor
push
in
rcl
fidivr
add
scas
xlat
push
ret
mov
test
mov
inc
out
mov
jecxz
or
mov
and
cwde
push
or
mov
jp
ins
(bad)
mov
sar
stc
xor
dec
xor
push
mov
fiadd
sub
cmc
sti
xor
dec
mov
out
xchg
in
ret
and
pop
sar
lods
push
jecxz
cmc
xchg
sub
mov
retf
std
shr
jmp
in
jp
and
movs
imul
sbb
inc
add
sub
mov
int
syscall
fadd
xor
sbb
mov
xchg
fisub
pop
mov
les
cmp
mov
adc
jp
jecxz
or
adc
fidiv
shr
add
inc
ins
and
fidiv
pop
call
outs
mov
aad
sub
dec
test
jnp
ja
cmp
mov
or
icebp
enter
das
in
icebp
jb
mov
shl
push
lock
push
sbb
xchg
clc
sbb
pop
out
sub
in
jo
xlat
or
cmp
mov
pop
not
loope
sti
inc
inc
mov
pop
into
ds
fdivr
add
mov
arpl
div
aas
fistp
cmp
rcr
add
fxch
rcl
xchg
sub
fcomi
jne
push
into
sbb
data16
nop
jo
ret
repz
push
push
jge
out
mov
pop
and
cdq
popa
jno
pushf
xor
nop
mov
cmps
xchg
in
inc
mov
push
in
sub
pop
fwait
mov
aas
cmc
retf
call
fiadd
out
jle
adc
das
out
jo
jns
cmps
scas
loop
fwait
adc
adc
(bad)
sbb
sbb
fwait
add
loop
stos
and
cmps
fimul
inc
mov
mov
bts
rcl
jno
sti
jg
push
cmps
daa
cli
push
adc
in
xor
jnp
or
cmp
pop
xchg
mov
dec
jb
or
clc
pop
out
loopne
mov
test
mov
js
mov
mov
mov
pop
(bad)
aas
imul
dec
loope
xor
(bad)
fst
iret
mov
jecxz
hlt
pop
rcl
fs
scas
push
sbb
pop
sbb
out
(bad)
pop
inc
xor
out
jnp
rol
popf
arpl
add
imul
test
jns
jmp
stc
mov
adc
lds
js
lods
mov
push
in
sbb
scas
mov
jno
and
sub
add
inc
adc
icebp
adc
ins
xor
addr16
jp
xchg
rol
adc
loope
fld
inc
push
dec
and
sub
aas
outs
or
in
in
int3
jne
cmp
cdq
les
ja
retf
jmp
mov
sbb
js
jb
add
jp
jmp
stos
pop
stc
ins
cmc
retf
std
cmps
xchg
popa
dec
mov
addr16
dec
(bad)
idiv
xchg
xchg
add
push
cld
ss
neg
jle
pop
addr16
mov
jg
adc
loop
sbb
mov
mov
jmp
mov
jmp
aaa
jb
jb
dec
aam
ja
pushf
or
dec
add
loopne
arpl
fidiv
xchg
xor
fcmovb
jmp
or
scas
xor
or
movs
out
lods
addr16
in
test
(bad)
cmp
adc
vmread
pop
outs
dec
outs
call
xchg
mov
inc
and
es
scas
sbb
add
mov
popa
mov
cmps
and
(bad)
mov
js
push
xor
pop
add
ret
adc
(bad)
jmp
jbe
imul
mov
mov
mov
(bad)
jle
xchg
adc
ss
mov
add
iret
and
xor
jno
out
lods
aaa
icebp
dec
xor
sbb
xchg
mov
and
mov
sbb
mov
enter
or
add
lahf
aam
add
inc
rcr
or
sbb
pop
push
push
or
iret
enter
cmp
add
loope
sbb
mov
(bad)
jmp
rol
sub
hlt
aas
cs
pop
out
xlat
pop
pop
fadd
retf
in
push
xchg
jg
pop
ret
rcl
clc
and
dec
mov
xor
mov
aaa
mov
or
add
ins
mov
clc
lock
out
and
xor
lds
hlt
or
stos
outs
out
out
adc
sub
sahf
cmp
imul
cs
xlat
(bad)
icebp
push
hlt
out
and
inc
inc
xor
(bad)
scas
cmps
ja
pusha
cmps
(bad)
push
outs
jns
cmp
shr
out
loopne
mov
xor
scas
imul
int
adc
aad
bound
(bad)
jp
mov
les
push
pusha
rcl
ror
sub
jb
xor
cld
or
adc
add
mov
xchg
enter
push
(bad)
ds
mov
movs
je
add
loopne
into
scas
mov
mov
ins
mov
movs
cmp
ins
clc
pop
sub
addr16
cmp
fsubr
ins
loope
dec
outs
ja
aad
pushf
fdivr
xchg
jle
sub
mov
cmp
fs
dec
out
sbb
push
data16
lock
dec
xorps
push
or
fwait
jecxz
cmps
test
(bad)
cdq
out
dec
cmp
cmp
mov
mov
sar
or
push
jbe
inc
div
adc
xchg
ret
mov
jnp
mov
aas
sar
(bad)
mov
pushf
add
jo
jecxz
(bad)
(bad)
mov
sub
jb
dec
dec
xor
adc
xchg
in
add
or
loopne
dec
es
pop
lock
pop
pop
sbb
push
dec
lahf
jmp
in
push
cmp
fldcw
mov
push
js
cli
test
pop
scas
lock
stc
xchg
in
repnz
cmp
(bad)
and
je
jo
or
fiadd
mov
(bad)
cmp
mov
loop
pop
adc
cmp
xor
adc
imul
xchg
fiadd
xchg
mov
loop
pop
test
cmp
in
cmp
aad
(bad)
ins
test
mov
lods
mov
test
push
mov
shr
jge
xor
sbb
lea
and
and
std
xor
jmp
hlt
mov
mov
jp
and
test
cs
(bad)
aas
sbb
mov
and
cld
lods
sbb
outs
test
mov
and
aas
xor
pop
sbb
inc
test
je
leave
arpl
add
dec
dec
pop
jno
icebp
aad
add
sbb
sub
sub
std
inc
aaa
aas
ins
int3
jge
jae
in
adc
inc
ds
fchs
and
mov
jl
jecxz
test
mov
add
push
gs
push
dec
mov
scas
sbb
imul
ror
mov
sub
push
jne
adc
push
fbld
push
sub
std
test
adc
mov
ins
pop
xchg
add
mov
push
push
outs
pushf
rcr
test
or
fadd
or
mov
sbb
xor
or
std
pop
xor
div
cld
js
dec
je
out
popf
mov
pop
lods
leave
push
nop
sbb
nop
push
inc
cmps
repnz
push
jecxz
outs
ja
cdq
pop
add
mul
inc
dec
leave
add
xchg
jo
mov
fadd
(bad)
cmps
mov
movs
push
adc
sbb
jg
inc
push
add
push
mov
mov
mov
sub
or
pop
xchg
retf
mov
jl
jns
sub
test
cs
pop
enter
cld
fwait
adc
xor
mov
(bad)
mov
sbb
std
mov
sub
adc
imul
cmps
xchg
lods
mov
test
popf
clc
psraw
call
push
fiadd
scas
add
add
jl
ins
scas
cmp
in
add
sub
and
nop
sbb
mov
push
lahf
in
push
push
or
ins
fwait
div
inc
pop
mov
pop
test
pop
cmc
(bad)
outs
and
lds
fisubr
out
cmp
sbb
cmp
xchg
stc
hlt
xor
not
ret
dec
es
retf
or
inc
(bad)
inc
mov
mov
test
rcr
add
mov
ret
scas
out
out
inc
mov
sahf
sub
mov
mov
mov
or
jle
(bad)
fisubr
mov
xchg
cdq
popa
mov
ret
(bad)
add
jmp
int
cmp
sub
push
lahf
les
xor
xchg
mov
nop
outs
(bad)
fwait
inc
mov
or
and
and
jo
lea
mov
(bad)
dec
(bad)
jmp
jae
movs
icebp
push
mov
xor
mov
dec
fsub
mov
jecxz
mov
add
pand
stos
jp
arpl
call
enter
mov
add
sbb
xchg
jl
lods
jp
push
js
rcr
pop
xchg
xor
jmp
loopne
mov
inc
repz
sub
call
mov
(bad)
xor
xchg
loopne
fnstcw
sbb
imul
test
clc
call
pop
rcl
in
repz
retf
int
sub
pusha
(bad)
mov
pushf
jno
cmp
mov
repnz
xchg
xchg
dec
outs
std
rcr
sbb
pop
dec
mov
jne
movs
enter
jle
ds
ins
push
ins
popf
popa
lods
cmp
test
clc
mov
mov
adc
inc
and
scas
les
jl
mov
or
sub
and
scas
sahf
or
cmp
pop
imul
(bad)
xchg
pop
aaa
inc
fnsave
jecxz
ds
gs
adc
dec
imul
mov
jae
xor
hlt
leave
outs
nop
sub
int3
jnp
rcl
pop
sub
imul
mov
aas
sub
xchg
adc
jae
mov
pop
add
jnp
adc
rol
movs
add
sub
inc
(bad)
je
add
pop
in
sbb
hlt
pop
mov
inc
lods
aaa
mov
rol
lods
int3
jb
aaa
gs
mov
and
out
mov
xor
fs
retf
xchg
pop
loop
adc
movs
mov
ja
mov
sti
ins
sub
inc
das
into
fistp
push
xor
(bad)
sub
push
jo
or
(bad)
adc
xchg
mov
arpl
fs
jl
sub
int
mov
div
jl
fldenv
sar
rcr
nop
inc
(bad)
push
cmps
leave
and
pop
es
pop
and
retf
into
iret
or
cmp
or
loope
cld
mov
in
pop
cmp
jmp
ins
pop
mov
rol
dec
mov
test
cmp
gs
mov
outs
cdq
mov
or
push
mov
hlt
fdivr
push
pop
pop
xor
pusha
ficomp
out
inc
jns
fstp
std
mov
clc
retf
xor
sbb
and
mov
arpl
(bad)
popa
mov
add
add
(bad)
(bad)
push
fstp
mov
sub
jp
cmp
fisub
test
enter
iret
push
lods
push
cld
push
sti
cmp
mov
jmp
add
int3
mov
xchg
pop
aad
or
(bad)
jmp
das
rcr
popa
pop
test
jl
or
aam
mov
push
adc
stc
(bad)
fs
fistp
mov
aaa
adc
xlat
jno
jecxz
adc
mov
addr16
mov
aas
mov
or
leave
push
pusha
cmp
push
arpl
cmps
or
dec
bound
rcl
jg
in
dec
add
jae
call
shr
push
rcr
test
jne
fimul
push
ins
mov
jle
pop
adc
fsincos
sbb
std
in
bound
inc
push
pop
ret
scas
retf
and
shr
cmp
fwait
jge
xor
leave
(bad)
mov
mov
mov
push
fist
jp
cmps
mov
(bad)
and
jl
enter
mov
clc
mov
and
shl
test
and
or
jp
cmp
sub
dec
aaa
pop
lods
repnz
nop
push
and
scas
mov
sahf
xor
fadd
leave
xor
pop
les
jge
test
ins
mov
cmps
fs
adc
das
push
fisub
inc
frstor
add
sti
outs
test
jge
fnstsw
daa
imul
dec
call
dec
cwde
xor
push
sub
jne
(bad)
(bad)
pusha
push
adc
test
pop
adc
hlt
inc
arpl
adc
mov
aaa
jo
inc
scas
test
sti
add
mov
pop
pop
cmps
dec
cmps
mov
cld
test
cmps
(bad)
scas
movs
sbb
xchg
inc
jge
adc
bound
popa
or
cmc
add
out
xchg
sub
push
or
adc
lods
ficomp
shl
xchg
mov
mov
stos
add
cli
adc
arpl
lods
jne
cmc
fidiv
popf
lods
scas
cmps
(bad)
aas
cld
scas
add
inc
dec
fwait
aad
mov
mov
dec
retf
mov
in
xor
in
and
jge
aaa
add
aas
(bad)
push
cmp
dec
push
or
icebp
mov
call
(bad)
mov
nop
and
cmp
dec
mov
add
mov
cmps
lds
mov
sub
stc
xchg
int3
xor
repnz
jp
cdq
hlt
pop
lods
sbb
dec
adc
xchg
(bad)
pop
js
outs
cmc
out
ret
add
xor
adc
adc
mov
cmp
fs
push
daa
lods
adc
sahf
sbb
sub
jbe
xchg
pop
std
sub
adc
fisttp
rcl
mov
sub
fcmovbe
pop
cmps
popa
repnz
(bad)
push
mov
xor
jp
xor
mov
add
cmp
(bad)
cli
adc
mov
lahf
shl
(bad)
imul
out
out
sub
rcl
sbb
dec
mov
adc
or
sbb
dec
push
inc
jle
mov
je
lock
xchg
repnz
cmp
xor
and
push
add
xor
stc
lea
dec
and
sbb
push
sbb
mov
cmp
pop
idiv
dec
fs
adc
dec
adc
cmps
imul
daa
clc
aaa
pop
push
mov
jle
mov
mov
or
jbe
fiadd
fidiv
fcomi
lea
enter
rcr
and
out
sub
add
call
ins
xchg
ret
jbe
cdq
(bad)
loopne
outs
dec
test
sbb
popf
pop
push
sahf
cmps
cmp
shl
je
mov
pop
cmc
rol
outs
ja
cmps
js
add
cmp
jno
icebp
xchg
aaa
sti
lock
sbb
lock
cmp
add
jo
push
dec
shr
out
pop
jp
ret
loope
jbe
pop
mov
cs
cld
xor
aam
popa
mov
lods
cs
lods
pusha
mov
xchg
sub
es
xchg
repnz
mov
rol
push
xchg
fwait
call
mov
jl
(bad)
ror
dec
jmp
cmp
push
das
xlat
call
cmp
ss
outs
xchg
inc
lds
pop
sahf
fcmove
nop
push
adc
in
inc
mov
ja
mov
jle
ins
xchg
and
mov
push
mov
cmc
idiv
dec
adc
das
vunpcklps
or
sbb
cld
lds
inc
aad
cmps
repz
test
jg
mov
cli
adc
rcl
inc
xor
mov
imul
(bad)
sub
mov
inc
loope
add
dec
rol
mov
mov
(bad)
repnz
sar
arpl
je
bound
into
push
leave
sbb
mov
es
(bad)
aam
mov
sbb
fidiv
cmp
leave
sub
xor
jns
cmp
lahf
shl
mov
dec
mov
in
iret
mov
in
push
push
sbb
rcl
call
sbb
add
ins
cmp
lea
cmp
or
or
lds
bound
ds
pop
sbb
or
test
adc
bound
das
imul
jno
aam
cmp
xor
and
int
jnp
ins
mov
loopne
xlat
mov
cmps
dec
pop
es
add
inc
push
push
sub
cmp
xchg
pmuludq
int3
sub
jmp
ficom
das
mov
stc
fist
test
add
mov
push
xor
push
sbb
sub
out
adc
and
imul
imul
mov
mov
pushf
repz
rcl
rol
push
mov
sub
aam
pop
das
gs
sbb
nop
xchg
pop
mov
loopne
sub
jae
mov
lds
jb
jecxz
sub
in
sbb
(bad)
xchg
add
nop
mov
das
mov
ror
imul
loop
emms
cs
mov
inc
fisttp
cmps
push
jns
movs
fs
push
(bad)
mov
add
jp
mov
cmp
cli
shr
addr16
popf
or
test
daa
std
dec
les
rcr
fcom
add
call
sbb
popa
adc
fistp
enter
inc
cmc
cld
sub
adc
and
cdq
xlat
adc
add
and
push
cmp
out
dec
arpl
int3
jl
(bad)
xlat
jb
call
sub
mov
xchg
inc
push
loope
jecxz
push
cmp
mov
(bad)
xchg
adc
xor
fsub
std
popf
add
outs
rcr
xor
sahf
fwait
sbb
iret
das
fisub
ins
neg
lods
aam
cmp
push
imul
pop
jp
jl
cs
jp
imul
mov
popf
sub
cmp
cvtps2pi
jl
jb
cmp
adc
sub
js
mov
jmp
cwde
push
xor
(bad)
mov
cmp
pop
dec
sub
sti
shl
adc
popa
(bad)
mov
adc
adc
push
adc
arpl
mov
jnp
and
dec
ror
pop
sbb
pop
cmps
dec
sahf
ror
stc
ret
xor
mov
or
fmul
or
push
pushf
(bad)
xlat
stos
iret
add
and
push
das
fisttp
cmp
aas
fwait
(bad)
lock
sbb
lahf
data16
add
add
retf
rcr
pop
jbe
xchg
test
stos
jg
cdq
arpl
adc
lods
push
push
cmc
fisubr
jp
jno
addr16
repz
js
(bad)
bound
sub
and
jecxz
push
mov
leave
sbb
sbb
push
fistp
xor
xor
movs
mov
add
retf
daa
loope
pop
and
cmp
ds
mov
jle
mov
cmc
aam
lods
loop
pushf
test
push
mov
mov
push
push
cli
push
push
fdiv
data16
outs
inc
(bad)
jb
(bad)
stos
outs
daa
dec
iret
ret
in
inc
ins
imul
inc
adc
out
mov
jb
dec
sub
fdivr
mov
adc
mov
cmps
ja
xchg
in
inc
aaa
sub
out
call
sbb
iret
aas
adc
js
(bad)
xchg
ja
dec
sbb
imul
in
data16
push
push
xchg
movs
dec
loop
shl
add
mov
pop
scas
ficom
(bad)
es
in
sub
fistp
pop
sub
in
cmp
xor
pop
xchg
jb
dec
or
or
jl
mov
mov
xor
adc
std
pushf
jo
int
jecxz
push
ja
fimul
or
imul
test
loop
(bad)
scas
cdq
cmp
mov
ss
sti
xlat
movs
aas
(bad)
dec
mov
cmc
pop
(bad)
in
xor
icebp
aad
bound
ja
loopne
dec
addr16
adc
push
jmp
ret
mov
add
imul
loopne
nop
aaa
jg
and
outs
dec
stc
popa
fs
cli
inc
cmp
mov
adc
mov
fcmovb
adc
push
inc
jecxz
inc
in
(bad)
clc
inc
jmp
mov
cmp
dec
ror
mov
dec
sub
sub
out
(bad)
das
mov
dec
mov
arpl
aaa
pop
mov
mov
stc
inc
imul
jl
out
mov
lea
sub
or
adc
mov
in
xchg
pop
call
or
add
jb
loope
out
sti
xchg
adc
fist
push
test
dec
or
add
out
mov
or
mov
ja
cs
sub
stos
cmps
fidiv
fisttp
or
dec
sbb
xchg
stos
int
shl
pop
push
xchg
out
mov
inc
cmp
in
inc
jne
xor
jns
mov
jno
sub
mov
call
aad
std
ss
adc
call
sub
inc
enter
xchg
adc
cmp
xor
add
fistp
mov
jmp
sbb
sbb
retf
sbb
or
mov
or
cmp
fmul
cmps
and
out
jmp
in
xor
pop
or
push
pmuludq
sbb
pop
sahf
add
std
sar
hlt
add
sbb
ja
aam
jle
fcmovnb
add
cmp
mov
push
dec
mov
dec
xor
inc
jle
iret
retf
or
js
mov
pop
mov
dec
xor
pop
dec
popa
cmp
adc
ret
sbb
std
push
cmc
dec
xchg
inc
call
inc
popf
sub
sub
xor
inc
shl
imul
dec
push
(bad)
jns
jle
dec
aas
(bad)
add
(bad)
inc
aas
jg
cmp
sbb
fbld
addr16
mov
iret
xor
sahf
loop
fild
gs
not
add
test
mov
adc
test
cmps
lahf
hlt
rol
fwait
imul
in
push
leave
clc
test
jl
sbb
ret
inc
das
nop
cmp
rcl
mov
mov
fst
in
mov
jmp
cmp
repz
or
inc
xchg
loop
mov
mov
and
hlt
mov
dec
mov
lea
fild
add
shl
pop
hlt
scas
xchg
jge
sub
xchg
add
and
pandn
in
mov
lds
push
sub
adc
mov
not
aam
jmp
es
mov
pop
add
lds
adc
movs
test
fld
inc
cmp
(bad)
mov
mov
pusha
add
adc
mov
xsha256
cmps
push
jmp
push
test
jae
adc
push
sbb
sub
or
hlt
sbb
icebp
cmps
mov
lock
mov
mul
jb
lds
ds
sub
xchg
mov
mov
add
cmp
sbb
shl
(bad)
mov
jne
enter
out
push
push
cmp
ja
into
arpl
outs
es
push
pop
mov
shr
xchg
test
push
xchg
dec
(bad)
fs
aaa
popf
fsqrt
ds
lea
push
mov
and
adc
dec
jno
pop
pop
add
or
mov
sar
not
hlt
jo
aas
mov
into
fs
pop
fld
jns
aas
in
lahf
out
cdq
rcl
pop
adc
adc
nop
or
into
xlat
repz
sbb
outs
(bad)
cld
jbe
xchg
xor
sar
not
pop
loopne
enter
sbb
and
jno
pop
rcl
or
fmulp
sbb
mov
cmp
and
cmps
outs
jnp
xchg
test
or
shl
mov
sahf
push
cmc
lea
fistp
or
jbe
inc
pop
and
mov
and
dec
neg
jmp
call
pop
add
xor
fstp
sahf
dec
in
sub
jle
aad
ss
popa
outs
lods
into
je
jl
jmp
mov
sbb
jmp
(bad)
rcr
jne
stos
xchg
inc
push
out
push
cmp
cmps
mov
pop
xchg
adc
(bad)
cmps
int
(bad)
mov
int
and
sub
dec
imul
mov
int
das
fidivr
mov
adc
jmp
push
sbb
fdiv
fwait
into
push
lea
pop
add
pop
cmp
mov
scas
js
cdq
xchg
adc
or
mov
dec
sbb
add
in
es
adc
cmps
jl
test
push
mov
fist
fbld
arpl
imul
hlt
loop
pop
mov
lock
adc
fld
fistp
jle
jbe
bound
add
push
cmp
inc
pop
pop
fs
jg
cmp
xchg
adc
in
call
sub
dec
aas
test
sub
(bad)
retf
rcl
mov
ja
in
test
xlat
and
fwait
xchg
xchg
push
bound
dec
mov
fwait
push
add
add
pusha
retf
push
push
call
mov
inc
test
mov
jl
lahf
inc
(bad)
out
imul
leave
es
cmp
xor
sahf
and
mov
fwait
xlat
add
jmp
cmp
pop
fwait
push
jo
enter
rcr
mov
mov
mov
setns
gs
movs
in
and
inc
(bad)
sbb
retf
in
add
(bad)
je
popa
loope
xchg
cmp
mov
loope
imul
fisttp
xchg
pop
retf
mov
pop
pop
je
jl
push
push
popa
sbb
jae
imul
xchg
(bad)
fdiv
test
push
rcl
dec
xor
xchg
mov
or
repnz
mov
retf
push
mov
mov
cmp
les
or
les
inc
adc
fdiv
(bad)
lahf
mov
jo
ins
sbb
(bad)
dec
jo
into
mov
jmp
lea
(bad)
shr
and
call
mov
xchg
adc
retf
inc
cmp
out
imul
inc
mov
pop
imul
cmps
ss
mov
lahf
add
shl
sbb
or
sbb
add
xor
inc
mov
nop
sbb
mov
popf
mov
test
push
stos
dec
mov
adc
or
(bad)
jl
mov
movs
mov
cmp
pop
imul
call
inc
jp
cld
xor
dec
out
add
pop
psubd
adc
mov
dec
out
or
ins
jg
enter
retf
jmp
je
aam
xlat
cmp
xchg
sub
hlt
movs
pop
aaa
mov
inc
inc
or
and
push
cmp
popf
mov
sbb
test
adc
sahf
cmp
jno
cld
mov
lods
fcom
test
leave
arpl
test
pop
inc
out
loopne
das
mov
sub
cmp
fucomi
pop
xchg
cmc
pop
lods
movs
mov
in
mov
xchg
mov
fs
jbe
pop
cmps
jg
in
adc
mov
xchg
stos
shr
pop
pop
push
call
and
mov
mov
sub
cmp
cmp
pushf
xchg
(bad)
js
xor
jmp
fs
std
push
inc
call
ds
cmps
pop
or
cmps
div
pop
aad
inc
mov
clc
cmc
mov
mov
inc
imul
dec
or
leave
aas
aad
add
sub
inc
push
push
jo
inc
push
nop
push
and
lahf
aad
ins
imul
out
rcr
mov
xchg
hlt
jmp
(bad)
int3
mov
daa
sbb
cmp
jnp
inc
lahf
inc
mov
std
call
aad
mov
sub
les
mov
xchg
add
jl
dec
or
shl
es
(bad)
out
cs
outs
sbb
jbe
add
arpl
adc
cmp
bound
xchg
sub
cmp
cdq
add
adc
fdiv
mov
loop
enter
lea
stc
push
cmp
out
and
xchg
jnp
inc
jge
cmp
add
out
inc
sub
aam
or
mov
lea
lods
or
mov
es
cmp
cli
rcl
lea
or
cmp
aas
push
movs
cmp
call
jno
and
sub
and
loop
call
call
jmp
clc
pop
push
outs
and
sub
std
push
xchg
test
call
mov
lock
sub
sahf
out
jle
inc
push
mov
mov
retf
int
push
cmp
dec
cmp
mov
sbb
pushf
mov
mov
xchg
mov
popf
xchg
ds
xor
xchg
mov
iret
inc
dec
jne
in
mov
pop
enter
or
dec
pusha
jne
test
or
xchg
ins
xor
addr16
xchg
mov
hlt
mov
es
test
xor
adc
out
out
cdq
nop
je
ror
dec
in
test
sbb
aaa
pop
or
sub
push
jle
cmp
repz
push
mov
popa
cs
in
inc
stos
mov
arpl
lods
push
ins
mov
fldcw
jmp
retf
and
mov
pop
test
adc
rcr
shl
sub
stos
pop
jno
jns
push
sbb
inc
xchg
iret
add
leave
add
adc
cld
jmp
xchg
sub
sahf
xchg
mov
jg
pop
sub
shl
mov
popa
pop
lea
jmp
jnp
ins
ror
stc
hlt
sar
mov
ja
xchg
pop
xor
in
ja
push
enter
pop
cmps
ror
call
int3
push
xor
movs
or
fdivr
cmp
aam
xchg
jbe
movs
hlt
mov
ret
mov
adc
loop
push
sub
mov
test
sbb
inc
ret
xor
add
dec
add
mov
and
and
mov
test
sub
jge
ins
test
adc
sub
xor
bound
pop
xlat
mov
popa
jmp
jns
push
test
or
outs
pop
jge
jbe
movs
repnz
add
(bad)
frstor
bound
cmp
cwde
xchg
xchg
ud1
(bad)
aam
scas
mov
jb
push
hlt
outs
in
adc
sbb
or
sub
mov
mov
rol
sub
aam
movhps
sub
leave
lds
fwait
in
pop
test
stos
jl
lods
iret
add
and
and
cmp
and
int3
gs
scas
inc
push
loope
mov
push
jns
scas
adc
rcr
inc
mov
sub
pop
fucomp
dec
dec
enter
and
fadd
jle
pop
xchg
int3
loopne
cmp
jg
frstor
cmp
aas
push
test
push
jg
sti
jno
sti
movs
dec
mov
jmp
mov
aas
sbb
outs
sub
cmp
sbb
sub
cmp
jmp
jmp
cmp
jns
fisubr
xchg
add
pop
lahf
cwde
sub
call
cmp
ret
dec
loope
mov
and
mov
jne
lods
mov
inc
push
stos
sti
ss
mov
jne
cmp
push
ss
dec
mov
sahf
loopne
in
dec
mov
inc
mov
inc
inc
cmps
mov
xor
sti
xor
xor
adc
out
or
dec
outs
xor
mov
sub
in
adc
mov
pushf
sar
jp
pop
add
jl
icebp
icebp
arpl
jbe
pusha
jg
scas
jo
test
ret
aas
add
inc
mov
sbb
gs
gs
push
stos
int
mov
popf
push
int3
outs
cmp
call
stc
outs
ja
or
lea
fdivrp
push
mov
in
iret
div
sti
movs
call
and
inc
jmp
lods
xor
shl
daa
out
mov
aas
pop
adc
mov
or
jne
call
mov
iret
adc
push
sbb
lds
ins
xor
pop
arpl
ror
loopne
jecxz
xchg
int3
sbb
jge
cld
add
mov
cmps
adc
jb
inc
cmp
mov
js
cld
push
mov
inc
jb
add
cmp
inc
sahf
sti
sar
sbb
or
push
xor
pop
ins
xor
out
push
push
mov
cmp
fnstsw
cmp
add
test
cmp
cdq
outs
jmp
retf
jnp
fs
popa
and
mov
sub
jmp
dec
mov
rol
mov
push
jnp
nop
mov
fmul
adc
int
mov
adc
jb
les
shr
addr16
xchg
mov
enter
test
test
mov
leave
jne
test
outs
cli
in
imul
ret
arpl
add
xor
or
not
fisubr
sub
int3
or
xchg
(bad)
cld
push
mov
call
adc
adc
sub
retf
sub
out
ror
in
mov
jnp
out
imul
sbb
mov
sub
jnp
cli
ret
or
jae
stos
movs
lea
mov
cld
dec
mov
inc
sub
ins
ds
xchg
and
cmps
and
inc
cmp
xlat
daa
adc
imul
aam
cld
int3
pop
sbb
sbb
inc
cmp
push
jmp
jae
sbb
mov
ins
(bad)
pop
xchg
sbb
mov
add
mov
xchg
cmps
dec
hlt
movs
outs
xchg
xor
mov
div
pop
mov
rcl
aam
repz
retf
add
sbb
scas
pusha
jge
adc
into
in
push
jle
add
enter
cmp
hlt
dec
dec
js
jg
dec
jae
movlps
pop
arpl
mov
bound
in
into
inc
sbb
imul
shl
pop
leave
inc
outs
call
mov
rol
adc
push
xor
leave
sbb
jmp
out
jmp
data16
jp
jge
fadd
or
ins
pop
pushf
inc
add
or
mov
rol
arpl
sbb
loop
pop
sub
push
(bad)
push
cs
xchg
(bad)
xchg
cdq
mov
fistp
and
es
mov
fdiv
add
lea
jb
js
cli
jns
adc
mov
dec
jmp
mov
add
rcr
adc
call
loope
add
sbb
inc
jmp
mov
mul
jae
les
jmp
mov
mov
dec
fdiv
pop
mov
aaa
pop
cdq
mov
and
ins
leave
xor
sbb
or
(bad)
repnz
pmulhuw
arpl
(bad)
out
xchg
cdq
or
int3
movs
and
ret
pop
inc
test
out
fisttp
fisttp
repnz
scas
lods
inc
cmc
sahf
mov
jno
fs
retf
mov
repz
inc
sub
xchg
jno
retf
jecxz
jns
mov
mov
test
push
ror
sbb
jecxz
inc
sbb
test
test
mov
movs
mov
mov
data16
cmp
mov
jo
push
scas
add
sbb
or
pop
xor
or
jae
imul
repnz
out
rcl
cmp
dec
adc
cmps
push
and
pusha
push
dec
je
das
adc
sti
or
daa
cmp
cdq
ror
xor
push
hlt
mov
enter
pop
pop
sti
popf
pop
scas
inc
and
adc
push
jmp
and
jbe
into
loopne
xchg
rcr
repnz
jo
popa
mov
mov
sub
add
xchg
add
bound
mov
sub
mov
test
mov
std
fcmovnbe
push
call
and
movs
aas
icebp
ins
cmp
inc
mov
mov
xchg
into
scas
call
(bad)
pusha
repnz
mov
sub
ret
cmp
push
cmps
ss
add
rol
scas
jg
mov
jmp
mov
dec
adc
hlt
push
cmp
jnp
dec
add
mov
dec
movs
and
inc
neg
popf
cmps
shl
fbld
fcom
dec
sahf
inc
push
push
gs
push
ins
pop
js
inc
mov
adc
sbb
dec
cmp
mov
mov
adc
mov
or
xor
cli
call
sahf
cld
sbb
pop
mov
xchg
xor
ss
dec
mov
add
dec
movs
pop
lods
jo
or
aad
push
mov
mov
inc
add
push
rol
pop
ja
pop
jno
cmps
add
dec
push
sbb
shl
clc
enter
pop
xor
push
addr16
imul
jo
dec
add
(bad)
(bad)
aas
push
push
stc
or
call
sbb
dec
push
adc
mov
inc
rol
out
(bad)
int
rol
push
pop
cs
or
and
add
mov
out
aas
(bad)
mov
sub
mov
scas
xchg
enter
dec
adc
int
or
faddp
mov
popf
bound
mov
and
out
xchg
pop
int3
and
mov
shl
dec
mov
mov
jp
imul
in
push
pop
std
cmp
mov
pop
jns
mov
mov
retf
(bad)
mov
arpl
sbb
mov
lods
icebp
pusha
mov
cld
dec
in
data16
cs
lahf
outs
add
(bad)
sahf
xchg
add
out
fwait
call
cmps
cmps
mov
div
and
sbb
ds
mov
stos
outs
das
imul
lock
inc
mov
int
inc
(bad)
stc
cmps
imul
push
xchg
sbb
cmp
inc
jo
ins
lods
mov
je
inc
outs
jmp
jg
mov
out
jno
lahf
dec
fisubr
mov
jne
dec
shl
pop
mov
mov
sbb
ins
repnz
out
es
jb
jg
les
add
add
push
pop
dec
push
fucomi
clc
or
les
pop
sub
movs
mov
mov
cmp
mov
(bad)
adc
bound
mov
ins
mov
xchg
test
inc
cmc
ret
gs
pusha
mov
inc
sbb
sbb
test
cli
push
mov
mov
mov
push
pop
in
xlat
add
rcr
pop
push
fwait
call
repz
icebp
add
(bad)
adc
and
dec
cmp
mov
push
push
fild
xchg
or
inc
mov
cmps
xor
hlt
or
or
retf
xor
mov
ret
inc
ror
bound
ffreep
sub
jge
adc
push
loop
add
ss
inc
outs
add
and
shr
and
xor
lods
data16
(bad)
repnz
adc
add
(bad)
jmp
push
mov
push
dec
xor
in
into
xor
or
(bad)
clc
in
dec
ror
call
sbb
sub
pop
leave
jae
mov
inc
xbegin
fstp
sub
and
adc
jmp
mov
or
sub
cs
ret
push
ror
xlat
aad
push
xor
push
and
je
push
jae
pop
dec
out
clc
inc
rcr
data16
lea
fild
mov
enter
bound
fwait
pop
cs
js
bound
push
dec
pushf
inc
push
sub
lock
cmp
jmp
mov
push
push
mov
cmp
(bad)
sbb
stc
add
popf
jne
mov
sub
test
mov
xor
inc
add
push
je
ret
xchg
aaa
repnz
xor
or
rcr
and
cmp
mov
xor
pop
add
mov
enter
ss
sbb
mov
dec
js
or
pop
loope
mov
outs
inc
inc
xchg
add
cmp
in
mov
and
sbb
stos
push
add
div
pop
xchg
shl
jb
mov
clc
sar
test
adc
push
sbb
hlt
out
jle
jecxz
call
cmp
push
cmp
fidivr
mov
mov
adc
adc
dec
mov
and
fdivr
sub
jg
xchg
mov
cdq
inc
aad
mov
jecxz
adc
mov
aam
dec
ret
pop
mov
pop
in
cli
dec
or
fisubr
inc
jno
mov
clc
pusha
and
enter
mov
sti
pop
cmp
ffree
sub
movs
ret
or
sub
mov
mov
mov
push
xor
cli
mov
ss
hlt
inc
pusha
mov
xchg
ret
cmp
inc
pop
pop
and
add
xlat
jns
or
or
call
cmp
dec
jmp
mov
mov
lahf
cwde
jmp
pop
sahf
dec
xor
add
scas
mov
jg
sar
outs
repnz
xor
les
xor
movs
mov
ins
out
es
leave
mov
jl
mov
sub
scas
cwde
in
cmp
imul
sub
mov
cmp
test
fbld
(bad)
aaa
mov
sti
add
add
mov
das
(bad)
sbb
adc
loope
push
jp
popf
sub
rcr
rcr
fs
or
adc
jp
fst
mov
sub
aaa
push
fisttp
push
sbb
mov
and
int
xor
add
jg
sub
(bad)
cmps
mov
int
shr
xchg
fild
or
xchg
sbb
adc
mov
sub
shl
and
mov
popf
sar
dec
(bad)
lahf
(bad)
mov
repnz
lea
xor
xlat
jo
and
mov
xchg
call
push
mov
cmps
out
imul
mov
fwait
inc
fdiv
mov
mov
in
popa
out
sub
add
nop
aaa
pop
add
mov
mov
aad
test
test
sahf
sbb
cdq
or
dec
fcomip
xchg
xchg
sti
sbb
cs
mov
lods
imul
or
popa
jo
cmp
mov
xchg
inc
add
dec
xor
mov
cmps
iret
inc
in
hlt
aam
aaa
cmc
cmp
call
mov
inc
push
inc
push
aas
lahf
xor
ret
cs
retf
iret
outs
mov
fcom
ds
movs
sbb
push
sahf
stc
pop
pop
jmp
pop
and
test
xor
inc
dec
mov
shl
fcom
or
ret
sbb
jno
stos
pop
sbb
popa
leave
sbb
lods
pushf
out
icebp
stc
cmps
inc
mov
add
sub
outs
cmp
ror
iret
in
pop
(bad)
daa
mov
dec
add
mov
mov
inc
shl
fs
popf
pusha
push
imul
lea
(bad)
in
jbe
inc
mov
fidivr
movs
push
pop
cmp
xor
neg
pop
outs
ss
call
nop
ins
push
add
jnp
fwait
xchg
dec
xchg
push
repnz
pop
neg
jae
cwde
xchg
cli
jbe
aas
ds
inc
outs
mov
fnstcw
aam
cmps
xor
jno
xchg
ss
mov
jmp
add
enter
out
jno
xchg
cmp
xchg
xor
pop
cwde
ins
dec
rcpps
xor
bound
or
and
xchg
(bad)
or
int3
sub
xor
cwde
push
inc
(bad)
xor
fucomp
lahf
xchg
mov
jle
in
test
jno
and
repz
xlat
mov
(bad)
(bad)
std
xor
sahf
aam
les
cdq
adc
jnp
push
add
dec
adc
mov
push
lock
enter
or
ret
fidivr
xchg
int
jbe
adc
fcmovbe
loope
mov
mov
xor
xor
out
cmp
fs
inc
(bad)
dec
add
add
cwde
lods
mov
data16
ins
xor
jmp
lds
popa
inc
leave
nop
and
push
stos
aad
imul
sbb
iret
(bad)
hlt
mov
ins
sub
xor
pushf
cmp
into
lds
cmp
mov
mov
push
mov
aaa
loopne
adc
popf
dec
adc
and
pop
stos
ds
pop
sbb
mov
lea
cmc
movs
leave
dec
fldcw
adc
push
fwait
rol
scas
xor
bnd
imul
pushf
iret
aam
ins
outs
clc
push
add
adc
jmp
and
ss
jbe
arpl
aad
pop
fcomp
add
ins
push
dec
mov
mov
cld
cmp
aad
fbstp
dec
pop
call
shl
(bad)
mov
mov
sub
xchg
mov
cmp
shl
pop
push
in
int3
mov
addr16
xor
aad
imul
pop
push
cmp
call
xchg
jl
cmc
dec
add
neg
not
mov
mov
xor
and
and
ficom
sti
dec
mov
bound
sbb
jbe
jp
cld
neg
stos
in
cmp
retf
and
ds
adc
repz
fisttp
movs
sti
sub
cmp
test
adc
dec
jmp
dec
outs
xor
or
adc
into
out
xchg
retf
clc
daa
arpl
fs
into
sub
arpl
scas
jnp
std
arpl
mov
(bad)
loope
jle
in
cli
sub
imul
mov
xchg
jne
inc
dec
add
pushf
call
jns
push
and
xchg
mov
push
xchg
xchg
pop
loop
sbb
mov
push
pop
icebp
xor
fs
(bad)
jmp
pop
fs
jmp
(bad)
push
xchg
in
(bad)
call
xchg
sub
mov
add
or
jle
ror
das
push
mov
cmps
jmp
sbb
fs
pop
dec
xchg
(bad)
repnz
xor
imul
arpl
mov
(bad)
push
or
mov
xor
in
shr
movs
in
shl
ret
jmp
push
ins
imul
sbb
add
scas
xchg
jns
or
sti
(bad)
fs
icebp
outs
inc
pop
cmps
xchg
push
inc
outs
cmps
out
aam
push
jne
int
ins
push
jno
push
push
aaa
push
fnstcw
mov
je
popf
adc
or
fild
and
retf
mov
inc
xchg
xlat
popf
push
jp
xchg
aaa
and
or
sar
dec
pop
jnp
jo
neg
mov
cs
and
out
jge
and
je
rol
idiv
xchg
out
add
in
mov
test
and
leave
ins
jb
rol
jne
test
jecxz
push
pusha
scas
or
cmp
and
sar
cmps
jae
out
pop
mov
leave
jl
(bad)
dec
mov
jno
jno
lock
es
outs
outs
jb
jns
xor
adc
mov
in
mov
(bad)
nop
rcr
jmp
xor
push
pop
ror
inc
sbb
je
fwait
or
mov
push
push
inc
push
push
sbb
xor
xlat
das
jmp
mov
pop
pop
cdq
es
cmp
aad
push
jne
data16
movs
cmc
cli
mov
inc
and
popf
pusha
mov
(bad)
dec
sub
mov
gs
sbb
outs
aam
mov
dec
es
aaa
iret
adc
xor
loope
ins
sar
cmp
add
popf
mov
outs
pop
lea
xchg
shr
sub
dec
mov
cmp
jns
adc
or
shl
xchg
xchg
mov
push
push
push
jg
sub
dec
jb
hlt
addr16
push
fnstenv
mov
pop
xor
mov
push
xor
or
dec
dec
pop
pusha
outs
retf
adc
imul
xor
jg
push
add
sub
and
fwait
xor
sar
ror
and
mov
pop
push
push
aad
fst
movs
mov
xlat
ins
cwde
sbb
adc
movs
sub
aam
adc
cmp
mov
leave
and
jbe
cwde
push
in
mov
ret
sub
pop
(bad)
in
test
mov
aad
add
outs
stos
mov
jo
or
fucomi
imul
loope
pop
dec
and
in
imul
push
popf
jnp
push
mov
stos
daa
jmp
enter
adc
jp
mov
dec
mov
jne
cmps
rcr
ss
push
xor
mov
xchg
in
jno
in
push
cmp
mov
fcmove
fnsave
jmp
je
outs
push
mov
imul
mov
fldcw
mov
mov
sbb
mov
fwait
movs
mov
pusha
push
ins
push
aas
pop
les
das
call
push
push
mov
push
or
imul
jo
gs
push
cli
sbb
cdq
imul
dec
mov
sti
sub
or
sti
push
mov
mov
push
mov
sub
daa
shl
pop
push
enter
and
mov
out
mov
imul
jge
movs
rcl
ja
(bad)
enter
fmul
cmps
fs
or
arpl
ins
lahf
cmp
pop
or
pop
mov
dec
enter
sbb
and
(bad)
repz
jae
add
(bad)
stc
es
outs
rcr
xor
sub
add
or
pop
pop
(bad)
ins
lds
xchg
push
xchg
sbb
cvtps2pd
dec
jecxz
push
xlat
sub
sub
dec
inc
out
ss
aas
mov
jl
sub
lds
outs
sub
shl
xor
and
xchg
test
mov
jg
mov
jns
pop
lea
push
xor
xor
je
mov
sbb
pop
cld
clc
fs
cmp
test
and
pop
int
inc
adc
arpl
sbb
(bad)
xchg
jno
lahf
nop
xor
cld
add
in
xchg
sub
inc
add
je
fidiv
retf
fisub
jnp
mov
js
addr16
(bad)
paddsw
aas
rol
lea
jns
jne
or
pop
xchg
mov
mov
sub
inc
mov
lods
mov
cld
imul
or
movs
stos
jg
retf
adc
aam
leave
(bad)
loopne
outs
xchg
retf
dec
push
cmps
cmps
jae
lods
jo
sti
jge
jae
aas
cmc
or
push
jecxz
inc
mov
cs
out
in
xchg
(bad)
and
outs
ja
mov
inc
pop
inc
out
and
mov
mov
test
retf
mov
scas
sub
add
cmp
sbb
stos
bound
fcomp
or
dec
(bad)
aam
leave
out
pop
shl
(bad)
das
mov
pop
mov
mov
ds
cmps
add
sub
sub
pop
ss
rcl
mov
mov
or
jge
shl
cmp
sbb
hlt
ror
push
enter
dec
inc
dec
ret
loop
mov
pop
fist
add
test
ja
jge
xor
push
mov
int3
daa
pop
pusha
(bad)
(bad)
lahf
jne
mov
cs
rcr
addr16
inc
fbld
int3
mov
pop
aas
std
inc
xchg
scas
dec
outs
in
push
xor
or
stos
in
jg
movs
or
mov
sbb
ret
dec
mov
push
pop
jo
jecxz
pop
mov
cmp
into
mov
mov
fdivr
mov
and
mov
lock
inc
je
fnstenv
push
mov
push
sbb
stos
xor
fisub
push
xor
inc
and
jmp
lods
cmp
ja
imul
aam
and
or
ret
shl
out
sub
xor
jmp
ss
jo
stc
xchg
mov
pop
mov
jg
jecxz
fcmovb
inc
cmp
in
xrelease
out
dec
lods
repnz
cmp
cmps
or
test
pop
rcl
xchg
xor
and
pushf
ins
test
push
ins
les
cmp
mov
lock
bound
or
in
fcom
sbb
sub
sahf
add
sub
dec
ror
jg
lds
out
outs
and
add
jl
test
cmps
dec
cmp
shl
sbb
aad
xchg
jp
not
js
inc
push
call
jle
loop
pop
and
outs
add
xchg
aas
add
scas
cmp
pop
fnsave
adc
mov
push
popf
sub
mov
cdq
mov
mov
(bad)
jmp
pushf
inc
mov
lea
cli
xchg
movs
sub
sbb
sahf
stc
push
xchg
arpl
jg
jnp
or
scas
fdivr
mov
fbstp
lods
jmp
push
mov
xor
cmp
cmp
cmp
mov
cmps
pop
push
jmp
sub
fs
movs
cwde
lea
icebp
mov
mov
inc
or
sbb
mov
ins
sub
push
in
mov
sbb
imul
inc
inc
xor
add
lds
pop
sub
repz
sar
inc
fbld
(bad)
mov
mov
inc
mov
call
xor
pusha
push
jne
push
push
jmp
aam
les
jge
ret
das
(bad)
out
sub
cmc
div
mov
cmps
or
jmp
dec
push
pop
xor
mov
loop
test
(bad)
jae
imul
add
xchg
mov
push
div
pusha
push
sbb
je
imul
mov
or
adc
retf
xchg
clc
lock
stos
xchg
das
adc
sbb
mov
cmp
or
in
xchg
fcom
jmp
and
xchg
xchg
jne
xchg
sbb
xchg
jle
test
and
push
sub
mov
dec
mov
jnp
mov
out
xchg
fwait
int3
or
shr
ja
loope
mov
xchg
push
xchg
mov
cmp
rcl
das
and
(bad)
xchg
outs
push
imul
or
dec
sbb
push
mov
cmp
xchg
xchg
(bad)
daa
jmp
lods
xchg
(bad)
(bad)
inc
cmps
ins
sub
add
sbb
mov
dec
xchg
xor
fistp
call
cmp
int3
(bad)
je
call
pop
mov
xor
lods
popf
pop
sbb
in
imul
outs
push
add
jb
in
bswap
mov
(bad)
and
pop
outs
pop
jns
cs
lock
(bad)
repnz
adc
or
in
in
cmp
jmp
add
adc
loope
xor
pop
retf
inc
xchg
rcl
xor
aad
bound
test
push
fld
pop
inc
xor
repz
push
add
push
push
mov
and
dec
ss
jge
arpl
mov
pop
mov
int3
inc
leave
and
add
jmp
sbb
jbe
mov
fsubr
mov
sbb
jmp
adc
xor
movs
jle
lods
adc
retf
stos
repnz
dec
out
push
(bad)
xchg
cli
pop
jae
test
xor
aaa
and
not
or
add
outs
repz
inc
push
sbb
jp
add
lods
or
mov
and
fsubr
dec
rcl
cmp
ins
repz
sahf
xchg
pop
(bad)
pop
pop
adc
repz
js
dec
add
push
test
jge
cld
jecxz
cli
out
in
aas
dec
outs
jbe
cld
rcl
mov
test
addr16
sbb
jp
sub
add
repz
fisubr
scas
jl
hlt
fwait
push
push
xor
inc
push
or
jno
rol
fisttp
push
cmc
clc
dec
retf
aas
es
fcomp
sbb
or
repnz
pop
fisub
(bad)
fcomp
sti
inc
push
popf
jmp
(bad)
xlat
sbb
popa
cmps
fistp
lahf
adc
clc
adc
mov
aaa
arpl
or
addr16
mul
jmp
xchg
or
jno
and
cld
and
repnz
and
and
icebp
retf
cmp
mul
jbe
jns
ins
test
call
cmp
inc
arpl
cmps
fistp
cmp
sahf
mov
mov
jmp
fcom
ror
mov
aad
(bad)
pop
jae
mov
cmps
rol
ds
jae
xchg
pop
or
sbb
lahf
enter
loope
xor
inc
add
or
cdq
push
scas
inc
add
jbe
scas
sub
aam
nop
sbb
out
sbb
xchg
pop
pop
(bad)
leave
xchg
adc
sub
iret
cmp
cmp
sub
push
call
iret
jmp
push
into
push
jge
inc
xor
xor
ret
mov
dec
mov
sbb
cmp
adc
pop
xchg
and
cmp
push
idiv
pop
es
push
inc
icebp
gs
sar
ja
push
or
sbb
fwait
sub
inc
xor
clc
ins
inc
movs
or
out
fwait
inc
popf
loopne
pushf
cmc
cmp
xchg
gs
data16
mov
in
imul
push
sub
sub
sti
ucomiss
mov
mov
movs
shl
test
adc
leave
xor
adc
sti
mov
out
xor
adc
mov
jle
xchg
sbb
pop
or
xor
xor
adc
and
enter
push
jg
out
mov
outs
repz
jb
push
rcl
ficom
in
mov
cmp
lds
sar
jbe
push
or
shr
inc
mov
(bad)
(bad)
jle
xor
inc
dec
mov
icebp
or
imul
inc
ja
inc
inc
test
sbb
mov
sar
outs
mov
adc
stos
lods
shr
adc
shr
pusha
iret
gs
pop
scas
loope
cmp
retf
and
mov
or
xchg
outs
cmps
or
movs
xchg
jp
jo
inc
mov
ins
ins
or
sar
pop
lahf
mov
jns
add
fld
inc
sbb
mov
mov
pop
sbb
sbb
dec
(bad)
xor
fxch
adc
sub
cmc
mov
pushf
out
and
xor
loopne
sbb
cwde
sbb
aad
pusha
pop
iret
scas
js
ret
movs
and
push
jnp
jge
pop
sti
jmp
ret
mov
fadd
arpl
xchg
stos
pop
les
push
out
push
imul
scas
shl
arpl
cmp
popa
xchg
xchg
adc
call
sbb
stc
jno
lock
sbb
out
pushf
(bad)
sbb
xchg
ja
ins
ror
lahf
pop
ret
pusha
cmp
jne
xchg
push
outs
push
stos
push
or
jo
pop
xor
js
out
sub
js
and
or
pushf
push
shr
inc
fs
or
fsub
lods
lods
mov
mov
cmp
pop
inc
sbb
outs
movs
xor
pop
out
ucomiss
pop
sub
mov
idiv
retf
out
jmp
addr16
movs
sbb
pop
and
cmps
cmp
jae
pop
nop
mov
shl
adc
bound
sub
jg
(bad)
imul
in
das
jl
nop
adc
pop
sub
stos
inc
pop
add
popf
jb
xlat
pop
xor
cmp
xor
int
xor
adc
or
frstpm(287
add
mov
mov
inc
cmp
(bad)
div
dec
mov
(bad)
call
mul
dec
daa
test
jbe
out
xchg
xchg
jbe
xchg
mov
fdiv
arpl
icebp
mov
mov
inc
mov
xor
pop
icebp
rcr
adc
or
push
cdq
ins
push
scas
js
inc
jmp
setnp
shr
pop
mov
jmp
(bad)
(bad)
pop
cmp
mov
dec
or
cli
ins
in
jecxz
scas
arpl
scas
xchg
push
cmp
xor
invd
fs
jb
sti
rcl
ror
pop
sub
inc
into
scas
inc
xchg
ins
std
inc
and
add
shl
mov
add
js
lea
repz
inc
xor
cmp
cdq
sub
dec
jmp
outs
rcl
imul
sub
(bad)
mov
loope
push
in
fidivr
mov
gs
mov
pop
mov
inc
mov
aaa
sub
pusha
cld
dec
fdivr
jl
aaa
popa
rcl
stc
sbb
mov
mov
ror
lods
imul
ret
xor
je
push
cmc
iret
xor
scas
push
adc
dec
rcr
jbe
(bad)
mov
fiadd
push
inc
ins
xor
out
not
out
pop
or
sbb
or
pop
cmp
add
dec
mov
and
push
sub
cmps
and
movs
mov
and
loope
mov
cdq
pop
clc
ss
stos
out
mov
push
xlat
call
and
hlt
leave
pop
in
xor
mov
ret
dec
xor
mov
cld
mov
clc
xchg
push
(bad)
repz
xchg
scas
frstor
xor
jge
sbb
cli
in
sub
pop
into
cmp
sub
ret
push
pop
out
(bad)
aad
push
iret
jl
int
repz
je
dec
bswap
aas
into
mov
imul
cli
clc
outs
push
mov
into
sub
gs
jne
xor
imul
dec
gs
int3
xchg
inc
and
(bad)
fwait
jno
ja
xchg
jo
xor
jb
or
add
dec
loopne
rcr
mov
fsub
fisubr
xchg
cmp
mov
rol
pop
popf
cmp
test
xchg
lock
mov
pop
retf
ins
dec
mov
sbb
mov
xor
imul
mov
rcl
jae
ins
pop
test
das
xchg
popa
outs
mov
push
outs
fadd
out
pop
add
mov
retf
movs
scas
or
sar
bound
push
mov
cmps
adc
retf
test
daa
lahf
mov
shl
xchg
add
pop
scas
sub
or
lds
fadd
add
or
and
mov
sar
push
es
ror
cmp
das
in
cmp
enter
cmp
loope
add
js
fdivr
sbb
push
cmp
das
xor
jmp
lods
xor
adc
bound
out
dec
mov
mov
hlt
dec
pop
sti
jp
cmc
pop
xchg
dec
sub
jnp
cdq
in
xchg
stos
push
inc
shl
ret
mov
test
jmp
xchg
jmp
scas
inc
sbb
jg
ret
call
cmp
jge
lods
inc
push
jns
add
sub
mov
dec
push
jae
xchg
psubusw
push
xchg
jmp
scas
push
xor
cmp
clc
fst
jbe
(bad)
cmp
jg
cmp
fadd
int
test
les
jp
sahf
mov
mov
pop
sbb
int3
cdq
sub
sub
int
dec
stc
mov
mov
jle
ret
jno
rcl
hlt
mov
leave
sbb
lahf
xor
push
dec
sub
rcr
adc
push
jns
xchg
int
pop
and
ret
out
gs
push
outs
loope
bound
dec
adc
repz
aas
in
test
fstp
push
pcmpeqw
xor
mov
sub
jl
add
sub
jno
into
mov
mov
in
addr16
sub
das
mov
loopne
or
inc
dec
mov
pcmpgtw
(bad)
jecxz
jmp
sbb
das
scas
push
fucomp
sbb
or
sbb
rcr
ds
push
xor
pop
gs
pop
pop
pop
jmp
xor
test
test
shl
fwait
mov
shl
mov
sbb
jmp
(bad)
fisub
sub
ins
adc
mov
add
loopne
leave
(bad)
push
mul
cmp
inc
mov
les
mov
pop
push
mov
test
rcl
push
(bad)
cmc
jp
imul
dec
add
mov
add
xchg
lahf
sbb
add
mov
add
sub
and
push
push
sub
xchg
daa
or
mov
pop
nop
clc
rcr
pop
fs
jg
dec
addr16
dec
xor
stos
(bad)
je
pusha
inc
lods
add
jns
xor
in
loopne
inc
ins
mov
add
and
es
xchg
(bad)
and
test
imul
mov
jb
test
rol
pop
in
mov
and
and
push
and
mov
cmp
or
leave
daa
xchg
retf
sub
lock
popf
daa
bound
xchg
jae
mov
in
sub
sbb
dec
mov
mov
jmp
(bad)
xchg
(bad)
test
aas
aas
scas
jmp
mov
mov
jp
sub
nop
fsub
das
inc
(bad)
cmp
push
dec
cmp
inc
imul
inc
xor
or
push
xchg
and
adc
adc
in
leave
pop
or
nop
test
mov
or
xchg
pop
sub
lahf
pushf
in
int3
ss
mov
jno
pop
and
add
sub
ja
fild
dec
sub
or
cmp
pushf
(bad)
idiv
jmp
push
mov
repz
jmp
cli
(bad)
xor
cmp
sbb
cmp
mov
mov
gs
xlat
test
rcl
pmaddwd
push
popf
out
or
or
adc
or
popa
outs
sub
lock
(bad)
mov
push
js
dec
scas
push
inc
in
dec
pop
shr
outs
lds
(bad)
mov
loop
out
push
inc
add
add
cmp
pushf
xor
add
jge
mov
fs
xchg
sbb
or
test
mov
xchg
fdivr
gs
outs
xor
stc
inc
mov
add
retf
clc
sub
out
js
repnz
in
in
cmp
fild
xchg
mov
jmp
stc
fdivr
push
leave
jecxz
mov
hlt
(bad)
ror
sub
aad
inc
data16
cmps
lahf
movs
mov
sbb
sbb
sub
dec
or
jp
(bad)
mov
out
mov
ins
imul
ss
pushf
fwait
adc
or
ss
or
mov
or
mov
lods
xor
in
std
xor
je
out
pop
pop
div
add
jg
jns
lock
ja
mov
adc
scas
lahf
clc
or
mov
cmp
repnz
push
das
mov
stc
xchg
aad
push
call
sbb
lock
push
mov
push
push
sbb
je
sbb
jbe
mov
jl
and
retf
xchg
jns
xchg
xchg
pop
cmp
out
add
shl
(bad)
mov
ins
cld
or
aam
(bad)
loop
pop
retfw
popf
hlt
stos
jnp
fisttp
lods
loop
stos
xchg
mov
sub
aas
add
out
push
fs
sahf
pop
mov
pmulhw
jns
push
xchg
fiadd
dec
and
das
push
push
cmps
addr16
sub
jo
dec
push
jmp
mov
fld
sbb
ins
out
lea
fidivr
mov
mov
mov
mov
cmps
jp
movs
mov
ss
stos
or
test
jnp
sbb
adc
retf
inc
sbb
(bad)
mov
loopne
sbb
xchg
(bad)
and
jp
sbb
(bad)
mov
dec
scas
fild
aas
stos
xchg
add
pop
int
or
hlt
enter
ds
adc
push
iret
in
sahf
ret
rcr
push
in
or
xor
pop
aas
pop
popf
push
pop
inc
push
aad
mov
(bad)
jl
ret
mov
mov
ins
or
call
arpl
shl
xchg
add
loopne
cdq
fimul
ret
es
(bad)
pop
ds
(bad)
test
ror
jo
dec
mov
sub
jae
ss
scas
sub
lea
popf
cwde
cmp
adc
push
jle
pop
xchg
sub
sbb
(bad)
ins
out
cmp
mov
mov
dec
cli
(bad)
adc
repnz
pusha
and
jmp
or
cmps
xor
inc
add
fisttp
pop
(bad)
lods
mov
cmp
mov
daa
scas
dec
jb
and
stos
test
adc
mov
stc
push
add
mov
cmp
or
lea
fcomip
(bad)
out
ja
lea
jle
loopne
inc
nop
jne
pop
and
lods
outs
(bad)
xor
pop
movs
popa
cmp
stos
push
jecxz
add
xchg
movs
adc
add
cs
icebp
fcmovb
or
aaa
mov
mov
aaa
add
cwde
outs
adc
or
ret
mov
push
pop
mov
cmp
mov
pushf
jae
push
push
push
cmpps
add
cdq
popf
cmp
jo
in
mov
adc
les
inc
mov
cmp
rcr
inc
mov
xchg
int3
jnp
sub
cwde
add
xor
sbb
add
cs
je
das
cli
xor
(bad)
stc
(bad)
inc
es
jle
movs
cli
jno
test
fild
xor
loopne
retf
dec
xor
je
arpl
popa
push
sbb
out
jnp
mov
pop
pop
rol
push
aad
aas
(bad)
mov
pop
pusha
in
push
sub
rol
xor
pop
xchg
jno
xchg
add
lahf
movs
loope
call
dec
fdiv
imul
push
cmc
lea
(bad)
fnstenv
push
inc
cmps
xor
(bad)
pop
mov
retf
(bad)
and
cli
xchg
popa
inc
mov
stos
(bad)
retf
jl
hlt
push
pushf
jnp
pusha
add
sbb
mov
hlt
or
pop
mov
je
sbb
lea
in
(bad)
hlt
pop
xchg
gs
inc
dec
out
dec
mov
or
sahf
imul
jle
or
mov
sub
addr16
test
dec
repnz
std
(bad)
jbe
pop
imul
sbb
lock
mov
repz
pop
bound
cdq
push
dec
jb
out
sti
data16
cmp
mov
push
pop
lds
mov
push
mov
mov
data16
or
int
fs
mov
cmp
movs
mov
sbb
frstor
mov
lea
clc
into
pop
sub
jb
ss
add
xchg
arpl
adc
(bad)
in
pusha
nop
mov
lods
adc
cs
outs
fnstcw
mov
jno
mov
imul
pop
mov
imul
in
popf
jae
fmul
or
stos
loopne
push
sbb
sub
mov
pop
jae
xchg
sar
in
daa
xlat
jge
in
pop
out
xchg
out
int
push
adc
daa
add
sbb
into
push
mov
and
push
xchg
repnz
lds
adc
adc
pushf
inc
retf
imul
adc
cmp
sub
out
pop
xor
je
(bad)
test
test
iret
push
xchg
ins
mov
stos
cmp
ds
sbb
pop
jle
jmp
add
out
repz
test
rcl
pop
jb
sub
or
rol
jo
(bad)
lods
jne
lds
add
push
adc
jbe
ret
in
dec
jmp
iret
xchg
fnstsw
loopne
inc
mov
sub
mov
and
adc
mov
retf
sub
push
mov
mov
sar
mov
xchg
stos
dec
sbb
fisubr
out
std
push
js
inc
int3
adc
mov
add
mov
mov
push
out
rcl
std
test
test
mov
div
xor
mov
sar
mov
sar
addr16
in
or
fild
sbb
popf
dec
lea
fwait
mov
inc
mul
or
adc
es
and
or
fadd
pop
pop
test
fs
xchg
push
(bad)
loopne
xchg
stc
add
les
cli
aad
mov
inc
(bad)
cwde
std
sub
lods
out
test
std
mov
pusha
add
sbb
into
popf
cmps
cmp
bound
cmp
iretw
jp
dec
or
pop
call
push
test
mov
cmps
test
gs
xchg
jns
and
add
int
(bad)
repz
cmps
rol
or
dec
nop
add
mov
mov
xor
cmp
in
pushf
shl
inc
cmp
add
js
jl
sar
movs
pop
inc
imul
jg
mov
push
cmp
leave
pop
outs
jg
movs
les
jp
sub
adc
mov
add
dec
cli
or
pop
and
xchg
ror
lds
xor
mov
xor
adc
or
dec
sub
addr16
xchg
add
in
jne
push
hlt
cmc
stos
jne
stos
jno
mov
push
mov
push
js
inc
add
or
test
fst
popa
push
fild
(bad)
enter
xor
mov
add
loopne
mov
adc
jo
das
out
sti
sahf
icebp
cmp
mov
or
loop
retf
xchg
ret
or
mov
stc
add
xchg
rol
es
adc
pop
inc
push
add
cmp
(bad)
sub
bound
sbb
dec
gs
stos
pop
movs
xchg
sti
mov
xchg
enter
inc
push
imul
fld
fsub
dec
das
cmp
dec
xor
fist
mov
pop
and
ret
fwait
out
test
mov
add
in
cmp
cmp
sbb
aaa
popf
mov
aas
lahf
mov
imul
les
mov
cmp
daa
outs
jbe
jno
xor
jb
shl
enter
push
adc
sar
jnp
outs
sub
inc
ss
(bad)
fst
xor
leave
pop
xchg
push
xchg
pop
and
pop
xchg
shr
mov
pusha
cmp
ss
inc
ja
xor
in
das
out
cli
mov
out
adc
add
cli
jmp
sbb
mov
xchg
popf
dec
dec
ds
and
mul
jae
and
loop
jae
sub
loopne
dec
and
or
retf
dec
mov
xchg
lods
nop
xor
push
shl
xchg
stc
sbb
(bad)
fs
push
mov
mov
inc
adc
ins
and
je
jae
cmp
xchg
mov
data16
mov
add
test
ja
(bad)
shl
jmp
mov
test
call
test
outs
pop
call
mov
cmp
jg
mov
jnp
fyl2xp1
mov
cmp
mov
xchg
gs
outs
inc
xor
repnz
push
sub
outs
mov
jae
add
adc
fwait
ror
popa
inc
or
nop
add
inc
jmp
stos
retf
push
mov
sub
xor
mov
scas
test
sbb
add
call
cmc
sub
sbb
and
ret
(bad)
stos
loopne
mov
sub
push
inc
ret
sub
dec
aad
clc
ins
repz
pop
sub
dec
push
and
outs
(bad)
scas
imul
lods
movs
dec
fisub
mov
or
out
ficomp
out
adc
cwde
pop
add
(bad)
mov
mov
scas
xchg
test
and
jmp
sbb
outs
xchg
inc
mov
push
xor
dec
mov
and
pop
jmp
xor
sub
xchg
inc
push
pop
or
xchg
sbb
xchg
sub
fs
into
aam
jg
movs
or
xchg
jg
xchg
dec
test
sub
pop
xor
ins
jae
out
push
les
je
push
inc
xor
add
cmp
ins
jg
jb
pop
cli
sub
iret
or
lea
mov
jg
sub
imul
sub
ret
ss
xor
jmp
ins
das
inc
ret
pushf
adc
fstp
jecxz
rcr
mov
push
push
sbb
adc
add
rcr
cld
mov
xor
xor
xor
imul
das
xchg
fisubr
pop
jp
stc
retf
daa
mov
gs
mov
and
(bad)
cmps
(bad)
jmp
ins
mov
cwd
push
dec
movs
dec
mov
cmp
add
fcom
out
data16
fild
pop
add
in
retf
fisubr
or
test
and
jl
mul
push
add
mov
inc
rcl
or
cmp
shl
cmp
out
sub
rcl
xor
dec
mov
clc
cs
and
xor
sbb
call
sub
dec
pop
daa
pop
sub
call
sar
outs
cwde
and
jle
scas
out
mov
in
dec
sbb
aas
mov
add
int
mov
mov
dec
add
dec
je
ja
pop
pop
xor
and
push
fadd
aad
daa
or
inc
xchg
test
or
hlt
sub
mov
loop
cmp
sbb
aaa
pop
dec
adc
fistp
les
mov
inc
cmp
add
push
mov
adc
add
scas
or
cli
or
cli
stos
in
inc
inc
popf
repnz
lods
je
ret
out
inc
sbb
sub
mov
mov
xchg
push
or
out
cmp
lea
add
mov
jb
fadd
xlat
xchg
xchg
mov
stc
fcmove
ja
(bad)
dec
aas
gs
dec
dec
fdivr
sub
push
xchg
lods
out
rol
mov
sar
icebp
xor
fnstsw
mov
call
ja
mov
sbb
dec
inc
fwait
add
jnp
outs
fld
dec
inc
mov
or
inc
xchg
lock
retf
jae
jle
aad
mov
pop
push
jp
pushf
mov
lahf
and
out
mov
dec
push
xor
(bad)
adc
int3
dec
mov
push
pop
xchg
cmovno
jge
cli
das
adc
ficom
les
mov
stos
inc
shl
cmp
pushf
cli
mov
in
dec
xor
and
or
mov
fild
mov
sub
mov
jl
or
inc
(bad)
and
jle
dec
test
adc
cmp
adc
das
sar
push
mov
into
inc
inc
pop
js
mov
fstp
loopne
pusha
adc
xchg
dec
ret
retf
sub
dec
mov
jmp
cmps
loopne
push
mov
inc
jg
sub
(bad)
(bad)
mov
mov
push
fnstenv
pop
stos
int3
dec
mov
mov
rcl
and
inc
jns
arpl
arpl
cmp
add
gs
adc
in
out
lock
mov
cmc
xlat
test
adc
pop
clc
rcl
clc
mov
lds
xrelease
mov
mov
mov
pop
outs
jmp
lods
push
dec
pop
jecxz
push
dec
mov
sbb
sti
mov
xchg
out
mov
sbb
movs
pop
add
lods
shl
add
jbe
mov
mov
sar
les
adc
jmp
scas
sub
jo
das
xor
in
add
xchg
movs
dec
xor
clc
hlt
xlat
mov
jmp
xor
or
test
cmp
or
mov
or
not
rol
dec
aaa
call
push
sbb
cmps
jne
pminub
test
clc
inc
fwait
in
inc
repnz
fld
xor
push
pop
jecxz
adc
je
jle
push
xchg
(bad)
pop
stos
and
cmp
cmp
xchg
xor
jnp
pushf
sub
pop
(bad)
fist
mov
jo
bound
shl
(bad)
jle
test
out
xchg
add
rcr
and
xor
adc
jge
test
rcl
sbb
aam
xor
icebp
scas
mov
and
stos
ja
js
jecxz
ins
into
pop
test
clc
test
or
and
sub
movs
jns
jmp
ret
mov
jns
test
and
mov
div
jnp
mov
xchg
xchg
xor
jne
inc
std
enter
icebp
pop
in
popa
inc
hlt
fwait
das
lock
dec
dec
in
(bad)
bound
pusha
mov
cmp
cdq
in
test
mov
xor
push
sar
jl
fld
daa
lods
adc
cmp
rol
cmp
cmp
out
imul
xor
fs
push
push
fs
js
push
jp
ins
dec
xchg
scas
mov
stos
retf
and
shl
fwait
sbb
das
sbb
(bad)
iret
add
icebp
movs
jmp
ret
dec
pushf
push
std
push
iret
std
ja
mov
mov
or
adc
jecxz
mov
movs
cmp
sbb
and
jns
es
pop
dec
pop
lock
cli
inc
xchg
adc
js
pop
std
xor
movs
cmp
loope
xchg
fld
inc
sub
sbb
dec
xchg
mov
jns
jmp
push
push
pop
xor
add
jmp
push
outs
mov
pop
xor
dec
cmp
push
aad
add
bound
repz
adc
sti
retf
aaa
mov
out
int
jg
jno
xor
inc
mov
imul
iret
inc
jns
test
lahf
(bad)
xor
std
push
movs
ficom
dec
lock
mov
nop
cwde
or
je
push
ins
in
sub
in
popa
xchg
pusha
push
mov
fmul
adc
push
push
mov
sbb
inc
(bad)
jecxz
mov
movs
dec
xchg
mov
push
jle
xchg
sbb
pop
cmp
test
iret
push
pop
mov
in
pause
add
ins
cmps
fidivr
lea
int
movnti
int3
call
dec
inc
outs
mov
mov
shl
outs
data16
mov
cli
push
movs
xchg
jns
xchg
out
int3
(bad)
ds
mov
not
inc
stos
xchg
or
jb
sbb
fldenv
mov
mov
outs
inc
fstp
pop
call
cmp
loop
jo
mov
movs
mov
jo
mov
enter
pop
mov
fadd
add
mov
test
rol
inc
sub
int
scas
enter
hlt
jecxz
inc
push
mov
push
stos
dec
(bad)
pop
adc
xchg
mov
xchg
cmp
sub
xchg
and
int
je
sti
jae
and
mov
push
loope
ss
rcl
gs
lahf
mov
mov
(bad)
rol
cmp
pop
jge
jp
mov
pop
lea
icebp
or
mov
push
adc
mov
cmp
mov
fisttp
pop
mov
push
mov
dec
out
mov
sbb
push
mov
jecxz
add
pop
jmp
nop
div
pop
jge
dec
inc
adc
or
jne
mov
sbb
xor
add
xchg
mov
in
mov
test
mov
sbb
movs
je
add
pop
std
aad
adc
je
arpl
push
jecxz
(bad)
dec
shl
cmps
ins
stos
jp
pop
xchg
jle
inc
pop
xor
mov
mov
imul
adc
or
(bad)
das
push
stos
push
push
enter
dec
dec
pop
out
lea
xor
mov
addr16
or
add
lahf
lods
cld
pushf
in
inc
fcomp
or
mov
mov
sbb
or
clc
mov
pusha
into
arpl
std
shl
rcr
mov
inc
pop
stos
fsub
je
mov
pop
inc
and
pop
ret
pop
push
dec
jge
faddp
push
or
ror
push
pop
and
xor
into
add
outs
stc
mov
movs
add
pop
jae
xor
aas
rol
dec
rcl
cmps
fwait
dec
xor
xor
neg
pop
ror
das
xchg
int
mov
fwait
mov
sbb
call
mov
test
lea
push
fdiv
arpl
xchg
pop
mov
fisttp
cmp
fild
aas
fs
in
xlat
jns
cwde
xor
(bad)
(bad)
clc
(bad)
(bad)
jnp
imul
jae
sbb
aam
sub
fld
fsub
mov
add
pop
lods
inc
movs
sbb
mov
sbb
sti
aam
adc
outs
retf
mov
xchg
xlat
sub
inc
(bad)
push
push
movs
jmp
(bad)
(bad)
movs
cmc
xlat
adc
sub
movs
sub
shr
arpl
mov
nop
scas
ds
loop
les
and
sub
mov
mov
aaa
mov
(bad)
pop
scas
mov
shl
or
stc
fwait
sbb
adc
dec
mov
xchg
mov
imul
push
or
xchg
lods
cmps
enter
sbb
rcl
or
sub
scas
mov
pop
xchg
in
scas
push
mov
pop
cmp
call
add
jmp
lods
int
pop
lds
rep
adc
sub
add
add
push
aam
outs
loope
sub
push
sub
push
lods
sbb
retf
cmps
jo
add
arpl
mov
adc
push
inc
outs
dec
pop
movs
cmp
es
cmp
add
mov
lds
(bad)
int
retf
loopne
das
inc
pop
cmp
aam
mov
push
mov
mov
push
aaa
or
inc
mov
jl
andps
cmps
jmp
or
retf
dec
sub
ins
iret
sbb
out
out
int3
mov
cmp
inc
or
or
inc
xchg
add
add
pop
sub
gs
or
xor
fstp
mov
outs
loopne
std
outs
jge
push
mov
(bad)
sub
xor
inc
cmp
popa
aad
enter
aad
stc
cmp
or
jae
sbb
imul
add
xchg
ror
int
sbb
into
outs
jo
popf
mov
adc
xor
mov
pinsrw
sbb
int
in
push
hlt
or
retf
pusha
aam
addr16
dec
mov
sub
push
xor
mov
push
add
push
cmp
mov
mov
ret
test
ss
(bad)
es
mov
rol
xchg
or
mov
je
or
jne
dec
push
(bad)
gs
ds
push
xor
sub
scas
cmp
pop
aaa
les
jmp
or
leave
scas
rcl
ins
inc
icebp
adc
fdivr
cmp
mov
cmp
push
shr
pop
sahf
or
or
sbb
fiadd
je
push
inc
test
or
add
cmps
push
and
fld
bound
jmp
push
pop
movs
cli
push
pop
pop
fwait
cmp
mov
jle
fnstenv
xor
stos
dec
imul
out
mov
test
retf
rcl
nop
add
cmc
cld
rcl
pop
cmp
out
outs
jl
sbb
mov
cmp
stc
push
nop
mov
fcom
pop
ret
in
jb
add
sbb
inc
pop
or
out
mov
popa
add
push
push
iret
ins
retf
imul
in
sub
pop
je
mov
out
repnz
mov
cmps
loopne
adc
aam
cmps
or
les
cmp
mov
sbb
dec
ja
icebp
cmps
pop
pop
dec
xlat
aaa
idiv
outs
dec
mov
fdiv
inc
jle
xchg
popf
mov
cmp
push
xor
push
mov
popaw
xchg
fst
and
mov
sbb
or
or
add
stos
fnstcw
int
hlt
xchg
dec
mov
dec
and
in
loop
jp
clc
shl
pop
xchg
inc
in
pop
jecxz
sub
cmps
lea
cmp
mov
and
mov
fcmovb
bound
or
call
(bad)
out
mov
mov
lods
dec
stos
cdq
xor
push
jecxz
sbb
sahf
jns
jae
and
pusha
or
fdivp
aas
mov
nop
mov
dec
sbb
add
and
test
ds
dec
dec
mov
lea
mov
loop
loope
repnz
jle
jg
popa
pushf
movs
sub
das
jmp
pop
push
pop
jmp
dec
inc
sbb
es
pop
dec
xor
inc
std
sti
stos
hlt
sbb
sub
and
mov
mov
pop
movs
mov
popa
sbb
pushf
jns
pop
bound
and
retf
sbb
push
je
xor
test
sub
cmp
or
lods
xor
inc
dec
outs
dec
jne
ficom
xlat
pushf
int3
retf
sub
ins
cdq
xchg
add
cmp
jg
jmp
shl
inc
popf
mov
dec
int
xor
cwde
push
loop
sbb
push
adc
aaa
add
push
mov
jecxz
fcom
les
mov
ins
ins
rcr
test
enter
stos
fmul
mov
xor
and
mov
retf
test
hlt
clc
xor
adc
jge
push
test
rol
xor
mov
dec
les
push
in
mov
gs
test
mov
shr
pop
or
fmul
or
mov
nop
push
jb
loopne
icebp
pop
test
dec
sbb
in
mov
es
and
inc
stos
in
cmps
mov
add
out
das
mov
push
push
mov
cmp
(bad)
jl
cmp
sbb
cdq
ss
push
lahf
hlt
mov
pop
movs
addr16
xchg
repz
mov
xchg
push
(bad)
mov
push
dec
xor
adc
in
mov
mov
daa
push
cmp
push
in
xchg
fimul
pop
stos
retf
jp
aaa
ins
inc
pop
push
stc
xchg
cmp
pushf
movs
xchg
and
push
jb
jle
jmp
inc
movs
int3
cmp
retf
mov
or
cmps
pop
add
stc
clc
and
sub
dec
dec
and
das
or
(bad)
out
fnstsw
sbb
push
mov
and
addr16
(bad)
pop
adc
repnz
jnp
jmp
ins
pop
das
mov
mov
mov
fwait
xchg
mov
ret
xor
bound
and
push
inc
cmp
push
push
mov
aaa
fxch
mov
mov
icebp
rol
pop
in
and
out
sti
mov
sub
sbb
jne
inc
or
lods
jl
ds
push
mov
imul
js
jmp
test
mov
in
and
call
sbb
push
cwde
addr16
pushf
lock
mov
rcl
push
outs
mov
mov
cmp
cs
fmul
jbe
inc
pop
dec
xor
popf
and
or
add
out
in
pop
sub
xor
jno
pop
imul
outs
dec
ror
add
mov
jns
lock
xor
leave
arpl
loopne
or
push
and
nop
sub
mov
std
cmps
stos
test
and
fcmovnb
fcomp
push
xchg
mov
mov
and
xor
push
jecxz
push
ins
ret
cs
or
inc
xchg
cs
add
aam
cmp
jns
retf
inc
cmp
je
cmp
stc
push
pop
test
les
scas
or
mov
or
inc
test
xchg
dec
shr
(bad)
adc
int
or
mov
mov
and
shl
xchg
push
adc
mov
inc
rol
retf
fnstsw
int3
pop
(bad)
into
ins
jmp
movs
pusha
arpl
pop
adc
mov
rcr
adc
or
mov
lods
mov
mov
xor
dec
int
push
imul
retf
imul
push
hlt
inc
cmovo
imul
pusha
stos
loop
ins
jns
dec
adc
lds
rcr
cmps
push
out
cmc
cmc
pop
and
js
ss
sbb
jno
popa
aad
cmp
jbe
cmc
push
push
adc
mov
inc
sub
fldcw
div
je
pusha
cwde
sbb
mov
or
jmp
aaa
push
sub
in
out
mov
movs
push
in
fdivr
adc
and
mov
sahf
sub
data16
popa
sub
push
mov
cmp
jmp
add
xchg
or
mov
(bad)
loope
rcr
pop
and
push
xor
in
aas
adc
jmp
or
sub
push
jno
xor
test
aam
push
mov
sbb
test
adc
jl
int
shl
aad
push
and
fisttp
and
inc
push
sbb
mul
sub
inc
das
fwait
dec
cmp
jge
fistp
adc
call
or
mov
or
jno
(bad)
sbb
dec
lahf
sbb
leave
bound
sbb
sub
cmp
push
(bad)
test
jecxz
jmp
adc
popa
mov
adc
cmps
daa
add
push
cmp
sub
aam
xchg
push
xor
int3
cmp
mov
jnp
and
fdivr
mov
push
icebp
test
lock
sbb
push
and
aaa
push
push
and
loope
lahf
sub
pop
imul
add
fidiv
in
test
mov
std
and
std
jle
int3
fmul
(bad)
in
out
inc
push
lds
data16
cld
mov
and
mov
fistp
imul
pop
sbb
and
popa
std
retf
xchg
cmp
mov
jle
push
lahf
cmps
inc
out
repnz
cld
cwde
nop
xor
cmps
cmc
icebp
pop
test
inc
imul
xchg
jg
xchg
pop
mov
mov
movs
out
(bad)
sar
cmp
dec
xchg
data16
mov
adc
jb
out
mov
adc
inc
jl
mov
jle
cs
stc
mov
in
pushf
hlt
and
je
mov
das
mov
push
dec
xor
mov
leave
je
popa
daa
movs
cmp
sbb
cli
xor
pushf
and
cmp
sub
mov
xchg
test
iret
and
vpmaxub
add
jnp
lahf
cwde
clc
xor
js
xchg
mov
pop
scas
cmp
mov
les
jbe
fcmovne
(bad)
fwait
stos
sub
pop
aaa
lods
aad
scas
jbe
test
inc
jmp
sbb
push
push
add
xchg
inc
sbb
jmp
and
sbb
stc
pop
adc
(bad)
sub
pop
out
sar
cmp
mov
cli
inc
into
adc
fstp
hlt
rcr
cmp
adc
and
xchg
mov
xchg
icebp
xor
lahf
pop
gs
outs
enter
inc
rol
xor
test
mov
movs
mov
rol
cmp
fld
jmp
adc
add
cmps
adc
(bad)
add
push
lods
pop
call
loop
and
aam
jne
adc
mov
sub
jge
int3
movs
movs
aad
inc
outs
cmc
ins
and
lock
into
imul
or
iret
mov
rol
jp
cmp
sahf
stos
jg
mov
shl
mov
mov
imul
fiadd
jbe
das
adc
jmp
fsub
call
les
in
shl
stc
pushf
cmp
data16
out
(bad)
xchg
xchg
push
ds
fld
(bad)
mov
push
iret
jmp
pop
test
pop
shl
xor
adc
mov
and
jge
mov
xchg
std
pop
inc
jp
sub
das
mov
stos
sub
scas
int
adc
mov
clc
gs
push
stc
mov
adc
xor
inc
jg
cmp
sub
pop
outs
push
jbe
xchg
or
data16
mov
aas
xchg
xchg
add
bound
xor
pop
xchg
add
xor
pop
fcmove
jge
nop
std
test
jo
test
std
or
into
pop
dec
ds
xchg
mov
mov
sbb
outs
xchg
movs
push
sbb
jp
mov
stos
(bad)
sbb
ror
retf
jo
and
xor
in
lahf
shl
sub
or
pop
sbb
sbb
pop
sub
pop
cld
or
mov
sub
and
sahf
aaa
popa
(bad)
jmp
arpl
iret
or
cmp
shl
pushf
jecxz
inc
aaa
clc
lods
mov
and
addps
or
push
add
xchg
call
popf
pop
push
cld
xchg
xchg
push
std
cmp
adc
fidiv
jmp
test
sub
push
int
mov
cli
jge
daa
push
mov
push
rcr
and
jmp
and
ja
retf
sahf
out
aam
or
into
xlat
adc
mov
push
and
xor
pop
stos
fiadd
stos
(bad)
pop
(bad)
mov
(bad)
jmp
jg
dec
adc
lock
lods
(bad)
cmp
mov
sbb
pop
xor
push
leave
cwde
mov
add
es
push
push
js
jmp
ins
lahf
ja
mov
repz
aad
jl
bound
inc
imul
test
dec
(bad)
emms
loopne
push
push
pop
(bad)
retf
out
(bad)
adc
jmp
scas
cmp
xor
data16
and
adc
cli
or
sbb
pop
ficom
ret
inc
mov
stos
movs
sub
lods
imul
dec
arpl
xchg
retf
test
dec
mov
cmps
(bad)
out
jmp
mov
shl
test
jge
cmp
add
sahf
fnstcw
fidivr
lock
imul
shl
inc
les
mov
mov
and
mov
bound
into
leave
call
push
stos
cmp
xchg
pop
jno
mov
loopne
hlt
fsubr
test
dec
es
ins
fcomp
scas
or
sub
fcomp
xor
inc
or
clc
dec
ds
shl
outs
neg
push
enter
(bad)
xchg
cdq
in
xlat
aad
or
and
jmp
nop
sub
ret
cdq
aas
mov
add
cmp
xor
jg
pop
fwait
aam
mov
pop
scas
neg
ret
pop
jl
inc
out
into
xor
fcomp
inc
inc
ss
xchg
outs
cmps
push
mov
cmps
push
or
shl
and
nop
leave
dec
hlt
jo
xchg
cmps
call
lods
cmps
clc
xchg
adc
push
and
popa
retf
mov
aam
scas
push
fcom
adc
cmp
mov
cmps
push
mov
outs
sbb
pop
test
sbb
mov
fstp
loopne
dec
and
push
fs
(bad)
std
mov
pop
jbe
call
pushf
adc
xadd
and
inc
pop
pushf
test
out
mov
out
cmp
imul
daa
(bad)
(bad)
mov
dec
outs
mov
idiv
mov
imul
stc
jmp
ror
jne
lahf
push
(bad)
xchg
adc
dec
jb
cdq
push
xlat
adc
adc
stos
mov
adc
ins
mov
(bad)
(bad)
stos
iret
nop
xor
jmp
aad
adc
sub
les
pop
repnz
icebp
out
fisubr
xor
retf
sub
inc
add
fnsave
sbb
out
cdq
sub
fsub
dec
nop
popf
cmps
hlt
shl
iret
dec
fwait
mov
push
push
inc
es
pop
or
mov
and
ja
test
call
adc
fadd
push
std
adc
js
xchg
mov
fstp
sbb
cwde
add
les
clc
stos
dec
loop
inc
mov
(bad)
ss
mov
test
or
outs
push
test
es
imul
sahf
ja
pusha
outs
or
cmp
xchg
cmc
mov
jbe
outs
out
fisubr
jp
std
mov
fild
mov
push
imul
fsubr
push
ret
cli
mov
test
in
(bad)
lods
fld
sub
test
pop
mov
sub
aaa
jo
cmp
test
retf
shl
into
imul
cmc
repnz
sub
dec
(bad)
adc
test
ja
in
mov
mov
push
imul
mov
lea
jp
jmp
xor
mov
push
scas
call
repz
aaa
fwait
scas
aad
push
or
out
outs
je
in
xchg
cmps
iret
mov
mov
pop
repz
dec
lods
popf
add
push
dec
adc
out
or
pop
mov
shl
data16
inc
movs
iret
dec
mov
pusha
mov
mov
in
in
out
dec
arpl
lock
sub
pusha
push
xchg
xor
adc
or
mov
xor
leave
popa
sar
sahf
fwait
cmc
add
mov
fnsave
shl
add
mov
pop
mov
dec
cmp
pop
imul
add
inc
add
inc
popa
test
cs
int3
pop
jle
cld
lods
test
cdq
popf
ins
fld
cmps
in
and
jg
mov
pop
cmp
test
shl
ret
inc
adc
jns
out
adc
mov
enter
and
gs
add
xor
and
or
mov
inc
jle
sub
xchg
into
clc
push
sbb
jle
xchg
pop
cmp
xchg
mov
call
push
ret
leave
pusha
call
dec
jbe
jb
enter
(bad)
into
mov
mov
xor
neg
add
sbb
sahf
mov
inc
inc
iret
mov
loopne
push
jle
(bad)
push
xor
xchg
push
fsubr
shl
sbb
sub
cwde
(bad)
push
fstp
inc
add
sub
rcr
in
repz
sbb
ret
sub
rol
js
call
dec
cmp
or
push
and
adc
ins
cmps
loopne
push
divps
daa
rol
popa
outs
lea
pop
add
lds
mov
jo
cmps
sbb
cwde
inc
ret
repnz
jge
scas
jge
jge
mov
popa
mov
xchg
jno
int
nop
in
add
cli
jbe
rcr
popf
and
imul
popa
(bad)
sti
ds
sbb
aam
adc
pop
retf
mov
loope
jmp
cmp
in
push
pushf
and
sbb
enter
dec
or
mov
ret
xchg
retf
gs
clc
clc
sbb
or
sub
mov
mov
jo
push
inc
cwde
or
mov
add
je
je
pop
xchg
jmp
inc
dec
inc
xor
xor
xor
cwde
fdivr
rep
cmp
dec
arpl
and
xor
pop
bound
mov
pop
inc
jle
nop
xor
repnz
or
or
in
out
adc
jae
dec
sub
mov
shl
pop
ins
jl
imul
and
clc
xor
(bad)
mov
aaa
out
repz
cwde
sub
inc
and
push
add
jecxz
push
mov
xchg
jmp
dec
xchg
pop
mov
push
icebp
cmp
ja
clc
test
or
dec
push
fisttp
push
add
cmp
dec
popa
test
jnp
(bad)
out
or
xor
out
xor
mov
addr16
inc
pop
push
inc
ss
mov
jg
or
xchg
adc
cmp
sahf
jno
pop
cdq
cmp
adc
adc
ror
jge
outs
push
push
nop
mov
(bad)
push
adc
inc
cmp
popa
mov
neg
cs
xchg
movs
cs
shl
(bad)
(bad)
fld
popf
or
mov
je
sub
sbb
mov
pusha
inc
mov
pop
jecxz
xchg
jg
neg
std
cld
xchg
inc
dec
and
pop
je
mov
jp
retf
fwait
cld
setbe
mov
pop
or
jb
jne
ins
mov
push
mov
inc
sbb
test
add
xlat
jle
bound
out
scas
jg
adc
out
mov
retf
lods
mov
mov
ja
mov
sub
mov
or
mov
mov
sahf
jmp
cdq
ror
sbb
jmp
push
mov
nop
pop
sub
push
ins
mov
push
inc
stos
fld
xchg
lahf
in
fsub
mov
dec
mov
retf
retf
sbb
je
or
add
loopne
(bad)
mov
push
ins
dec
call
or
push
dec
mov
mov
mov
push
jnp
xchg
jge
mov
push
js
ins
inc
gs
bnd
push
cmp
repz
cmps
mov
(bad)
dec
xchg
or
ins
shl
xor
inc
pop
mov
mov
jae
or
fnstcw
popa
jg
or
imul
adc
fistp
cli
add
movntps
inc
sbb
pop
std
fmul
or
jns
push
mov
adc
fcom
ret
jmp
mov
xchg
enter
and
mov
mov
shr
add
clc
pusha
jecxz
mov
iret
sub
inc
imul
cmp
movs
jmp
mov
call
jno
xor
sbb
leave
pop
pop
sbb
cs
mov
sbb
jo
sub
fcmovnbe
movs
jns
adc
hlt
mov
std
xlat
aad
icebp
scas
aaa
sub
out
mov
test
mov
mov
sub
jge
inc
jbe
ret
push
out
fwait
cmp
jl
push
jns
lods
sub
mov
sbb
adc
pusha
dec
(bad)
xchg
stos
popa
arpl
fiadd
loop
xadd
sub
out
inc
add
pop
jb
fnstcw
and
(bad)
dec
loope
cli
sub
popf
ins
adc
mov
repz
or
jb
out
adc
sub
ds
cwde
sbb
dec
mov
fcmovbe
out
dec
daa
and
and
data16
repnz
xchg
retf
inc
int
arpl
xchg
sub
ins
mov
xor
daa
imul
fwait
(bad)
cmp
ret
bound
jne
cmp
xchg
xchg
aaa
jmp
and
cmps
loopne
push
in
mov
push
imul
dec
loopne
movs
fcom
adc
jle
or
or
fld
int3
idiv
or
aas
sbb
inc
push
retf
popf
out
loopne
mov
cmps
dec
or
cmp
sub
sub
stc
cmp
retf
les
jno
dec
sbb
xor
push
dec
stc
ins
jmp
inc
push
pop
cmp
aad
jmp
movs
push
fistp
imul
jo
jmp
outs
nop
xchg
(bad)
push
cmps
shl
push
stc
enter
cmp
imul
cmp
fs
js
jo
test
sbb
lock
scas
in
dec
popf
movs
repnz
aaa
xor
xchg
popf
or
leave
mov
mov
pop
or
retf
adc
int3
xor
in
dec
cmp
sahf
sub
repz
nop
jp
das
xor
fidivr
(bad)
cmp
xlat
fcomp
stos
fidiv
sub
pop
call
mov
push
(bad)
sbb
sub
lds
imul
mov
test
(bad)
adc
sbb
sub
xlat
adc
div
sbb
out
add
adc
out
rcl
cdq
sbb
mov
xor
out
retf
cs
jl
cmp
hlt
sti
ret
outs
cmc
xchg
and
test
popf
outs
and
mov
xchg
fsub
mov
xlat
outs
in
icebp
in
daa
rcr
pop
mov
ss
scas
mov
es
mov
imul
scas
push
(bad)
movs
dec
pop
std
(bad)
rcl
mov
mov
mov
cmp
outs
and
and
jle
repnz
les
call
addr16
movs
jecxz
cmp
xlat
push
pop
mov
mov
aaa
in
daa
jno
cli
(bad)
dec
bound
out
inc
pop
in
xchg
dec
in
mov
jmp
mov
lods
add
mov
mul
pop
sub
jle
in
hlt
cld
fwait
loop
fiadd
mov
in
(bad)
sub
or
and
push
add
push
(bad)
(bad)
stos
sub
addr16
push
jle
and
jl
test
mov
test
xor
adc
or
(bad)
out
mov
out
sbb
mov
call
dec
push
cwde
mov
idiv
or
jle
sbb
ficom
(bad)
bound
dec
or
lds
xor
(bad)
lods
jecxz
rcr
and
sbb
bound
call
add
(bad)
ds
outs
(bad)
mov
push
pop
or
sbb
(bad)
mov
jg
pop
or
call
sbb
cmp
adc
push
repz
xor
and
gs
pop
(bad)
cmp
sub
dec
and
shr
dec
and
cdq
ds
xchg
wrmsr
push
mov
inc
add
je
scas
stc
jns
repz
dec
fst
sbb
movs
or
jb
aam
fidivr
repnz
fisub
lock
inc
arpl
rol
dec
push
ficom
mov
push
xchg
push
xchg
iret
push
std
or
lods
popa
jge
(bad)
loope
or
pop
lods
fiadd
out
fist
jp
adc
jmp
mov
push
inc
add
outs
(bad)
pop
nop
or
xchg
nop
mov
or
jns
xlat
inc
out
sar
jecxz
inc
addr16
cmps
(bad)
mov
and
mov
or
cs
loope
dec
mov
xor
and
mov
or
add
inc
inc
push
out
jbe
mov
mov
enter
inc
sub
sub
mov
cmps
mov
xlat
mov
add
int
or
jae
mov
retf
push
mov
xor
mov
ss
cwde
stos
jg
sub
(bad)
call
push
push
fidiv
mov
mov
imul
or
aad
loope
movs
fwait
xor
inc
cli
cmps
inc
pop
and
jae
mov
cmp
mov
imul
dec
stos
(bad)
jg
and
(bad)
and
repnz
dec
sub
mov
cwde
xchg
fisubr
jns
jns
in
mov
pop
movs
cmp
ins
mov
pop
sub
and
ret
adc
retf
stos
add
dec
fiadd
shl
pop
loop
inc
bound
sbb
adc
add
dec
not
loopne
pop
(bad)
ins
sti
mov
shl
jo
jne
(bad)
sbb
and
and
xchg
aam
fidiv
shr
xchg
and
xor
in
fstp
(bad)
jno
mov
mov
aam
(bad)
nop
mov
and
mov
jmp
pop
xchg
adc
cld
or
fldenv
inc
adc
ins
stos
fs
sub
bswap
and
sbb
or
xchg
call
cs
xchg
call
popa
pop
sbb
pop
lds
adc
adc
repnz
(bad)
inc
ror
lds
(bad)
mov
out
arpl
popf
push
hlt
retf
sbb
push
add
call
imul
push
xchg
test
pusha
mov
movs
neg
iret
sub
push
xchg
in
cdq
inc
imul
cmp
mov
push
xchg
in
mov
outs
or
fwait
jmp
mov
jmp
idiv
add
and
mov
movs
std
fbld
jecxz
js
(bad)
into
sbb
data16
push
xchg
mov
xchg
jae
inc
aam
shl
(bad)
fadd
pop
mov
es
adc
cmp
lods
jns
mov
jl
inc
popa
ja
neg
jno
or
sbb
aad
add
scas
les
clc
jne
ret
pop
mov
(bad)
popf
les
inc
fwait
add
ficomp
test
pop
fstp
sti
sbb
xchg
and
pop
movs
mov
cmp
mov
or
mov
push
sub
inc
cmp
pop
xor
(bad)
cmp
hlt
xor
test
add
add
mov
cmc
jno
cmc
xchg
imul
clc
nop
iret
out
lea
fst
pop
mov
cmp
out
shl
xchg
sub
and
test
cmp
push
and
sub
cmp
in
and
aas
xor
ja
pop
lock
(bad)
aaa
and
ja
retf
xchg
mov
xchg
int
sbb
cmps
lea
dec
mov
inc
retf
xchg
into
mov
test
ins
cmps
xchg
xor
out
out
out
pop
or
xor
mov
add
rcl
push
mov
jmp
mov
dec
int
lock
div
push
inc
clc
mov
movs
jge
push
pop
pop
stc
cmps
add
arpl
mov
mov
das
jge
imul
dec
jp
clc
inc
push
cmp
rol
stc
(bad)
repz
aam
add
pop
std
inc
gs
xor
outs
std
inc
int3
lahf
in
fisubr
push
cwde
jno
shl
jmp
sub
jbe
inc
or
int
cs
cmp
lods
mov
mov
das
sub
stos
xor
mov
xor
bound
push
sub
adc
ror
cmp
stos
mov
(bad)
dec
mov
sbb
mov
es
retf
out
xchg
mov
dec
cmc
mov
add
dec
jo
dec
sub
jae
mov
(bad)
mov
mov
pop
cs
pop
mov
shr
xlat
pusha
or
cli
mov
mov
icebp
sar
adc
inc
cmc
inc
mov
mov
es
push
cmp
mov
scas
icebp
scas
and
mov
test
mov
mov
xchg
sbb
jo
sub
sub
push
adc
cmp
push
xor
outs
aam
arpl
xor
jle
add
(bad)
rol
mov
in
jp
repnz
cld
jnp
outs
adc
add
shl
les
pushf
mov
lea
adc
in
jp
adc
mov
push
out
pusha
movs
psubq
jmp
in
cmp
scas
inc
jno
mov
loope
push
in
retf
jnp
sub
inc
shl
xchg
or
dec
test
xor
mov
sub
pop
ucomiss
adc
int3
fs
or
les
into
std
movs
or
inc
mov
and
xor
or
cmp
jge
xor
inc
sti
or
mov
sub
push
mov
js
nop
jg
xchg
cs
and
jp
ret
das
ins
dec
mov
mov
adc
jb
dec
and
dec
pop
push
repnz
call
sub
stos
jle
xor
dec
cs
mov
inc
cdq
ja
inc
mov
repz
mov
push
outs
inc
mov
mov
mov
or
inc
cmp
outs
pop
mov
js
xchg
mov
lahf
in
lock
push
inc
js
mov
xor
outs
sbb
adc
cli
pop
cmp
shl
adc
and
mov
adc
(bad)
xacquire
ins
jae
sub
push
sti
les
inc
push
sbb
jbe
(bad)
pop
jecxz
mov
mov
xor
mov
ret
nop
inc
push
pop
sbb
sub
mov
out
mov
fiadd
push
sbb
pop
sbb
fs
test
push
cli
dec
imul
jg
aad
pop
cmp
jmp
jo
or
inc
rol
mov
in
sbb
jmp
mov
aad
dec
mov
jg
int
aam
lahf
jnp
dec
sbb
jmp
cmp
test
div
(bad)
pop
outs
fldcw
sahf
and
mov
dec
and
xchg
push
xchg
push
mov
dec
(bad)
cli
xchg
stos
jns
push
les
imul
cmp
fiadd
dec
add
cmp
push
gs
sbb
xchg
inc
mov
(bad)
icebp
ins
sub
xor
cmp
and
mov
mov
add
dec
mov
and
jecxz
enter
call
lods
jnp
cmovae
int
add
pusha
sbb
inc
sbb
xchg
xchg
xchg
inc
(bad)
cmp
jbe
xlat
mov
and
pop
into
lods
inc
adc
popa
repz
dec
loop
inc
pop
mov
retf
sub
pop
mov
sbb
pop
cmp
movs
repz
ins
pop
shl
dec
xor
push
inc
ins
jne
not
fsubr
cli
cli
jp
add
sub
retf
scas
in
pop
loopne
js
fcomp
adc
enter
and
punpcklbw
and
cli
pushf
mov
ja
sub
pop
test
mov
test
push
dec
push
(bad)
in
add
frstor
lods
and
jnp
cmp
mov
aad
ins
cwde
popa
add
not
adc
inc
push
mov
adc
jno
cwde
pop
outs
cmp
cdq
mov
xchg
jmp
cmp
ds
fdivr
xchg
stc
mov
inc
icebp
jnp
idiv
mov
outs
sti
cmp
lods
(bad)
pop
jbe
mov
cmp
xchg
cmp
add
ss
outs
inc
fcomp
inc
sbb
(bad)
addr16
xor
or
sub
xchg
int3
or
les
test
jecxz
push
test
adc
mov
pop
shr
xchg
(bad)
(bad)
retf
stos
iret
jge
in
outs
test
and
(bad)
es
cmp
add
lock
adc
aam
inc
js
stc
data16
frstor
gs
jno
inc
push
popf
mov
dec
xchg
cdq
mov
sbb
or
cmc
popa
pop
mov
xor
adc
sub
and
test
in
adc
test
sub
mov
mov
icebp
outs
pop
stos
sbb
cmp
sbb
mov
loop
sbb
pop
push
push
out
mov
pushf
jge
mov
cmc
idiv
cmp
call
js
mov
mov
lods
add
add
call
enter
pop
and
pop
dec
pop
imul
and
mul
loope
mov
mov
mov
ins
pop
and
xor
xchg
xchg
sbb
sub
sbb
daa
aad
sbb
(bad)
and
add
movs
adc
sub
hlt
xor
cmp
std
xor
ret
adc
mov
mov
leave
stos
mov
add
sbb
scas
xchg
inc
(bad)
lock
xor
inc
fmul
jnp
sub
scas
xchg
js
call
mov
idiv
mov
pusha
push
push
dec
bound
loopne
sbb
out
pop
cld
sbb
mov
not
lds
dec
mov
(bad)
js
adc
je
inc
sbb
sahf
xor
fisub
and
mov
inc
jno
fidivr
aas
dec
and
test
mov
icebp
sahf
cmp
push
ds
jp
mov
addr16
jecxz
pop
ret
xor
jmp
xchg
and
imul
sahf
jl
mov
ds
sbb
arpl
xor
in
jmp
xchg
rcl
fsub
cwde
add
enter
call
fcom
popa
imul
sub
(bad)
imul
(bad)
lea
and
gs
repnz
xchg
test
pop
adc
lahf
jle
je
mov
xor
xchg
pop
idiv
scas
fcomp
repz
mov
add
and
jne
ins
sti
push
ins
sub
cmp
mov
into
dec
test
adc
adc
pop
loopne
dec
inc
push
cmp
mov
movs
push
dec
rol
jmp
mov
mov
mov
aaa
stos
jg
jge
mov
pop
ja
pop
adc
int3
jg
xchg
cwde
inc
mov
fwait
das
dec
and
adc
mov
mov
rcr
outs
cmp
or
int3
outs
mov
in
dec
iret
rcl
jnp
sub
push
int3
adc
je
aaa
jo
out
or
sbb
cmp
pop
jae
pop
stc
jmp
sti
les
sbb
jecxz
nop
push
and
ins
in
sub
mov
fcom
mov
out
inc
sub
cwde
bound
mov
stos
xor
xor
and
std
loope
xchg
lods
sar
pop
push
dec
mov
hlt
outs
jmp
xchg
mov
xchg
test
xor
push
les
mov
(bad)
rcr
loop
push
movs
loopne
and
test
scas
push
sub
mulps
cmp
pop
mov
in
jle
pop
and
inc
retf
gs
and
cmps
(bad)
das
push
and
je
test
repnz
push
and
pop
int
adc
fldenv
aad
mov
pop
sar
mov
leave
mov
test
sbb
ds
mov
ins
and
not
sub
(bad)
into
mov
mov
das
cdq
add
fnstsw
pop
jle
jnp
les
jnp
push
lods
call
xchg
fcomp
jle
cmp
fs
test
lea
xchg
sub
(bad)
fptan
push
and
cmps
rol
sub
sub
pop
or
or
call
int
jnp
int
cli
xchg
and
repnz
sbb
sbb
mov
inc
jle
stc
mov
call
ins
daa
ret
mov
inc
int
mov
popf
ds
jecxz
sbb
loop
xor
inc
dec
nop
inc
retf
xchg
cdq
or
mov
ins
sbb
fadd
xchg
aaa
mov
or
inc
sbb
and
cmp
popa
pop
push
sub
mov
add
iret
cli
pop
lds
movs
inc
sbb
gs
pop
or
cmc
retf
xor
jecxz
jae
ret
je
out
adc
jl
(bad)
xchg
int3
jle
push
jns
lods
and
(bad)
dec
sbb
sahf
lds
push
(bad)
mov
cmc
ret
inc
or
fiadd
cli
add
or
xchg
stos
(bad)
fst
nop
pop
pop
mov
(bad)
loope
ds
push
rcl
xchg
cmp
ins
loope
std
mov
push
cmp
loopne
push
test
adc
mov
out
outs
push
jl
lods
xlat
xchg
pop
sbb
(bad)
jecxz
imul
cli
scas
xor
mov
jg
stos
retf
lahf
pop
ja
cli
pushf
xor
mov
call
inc
mov
outs
push
and
xor
mov
cli
(bad)
in
xchg
push
call
xlat
xchg
xchg
xor
inc
adc
and
ret
ror
shl
mov
inc
loope
es
(bad)
test
mov
push
mov
in
test
add
imul
fmul
les
sbb
sbb
jle
or
adc
gs
call
fsub
(bad)
mov
mov
adc
sbb
stc
test
idiv
ret
mov
xor
fst
sub
popf
mov
and
or
add
ret
(bad)
pop
mov
adc
es
mov
fild
sub
mov
popa
inc
test
out
fwait
mov
sbb
sbb
mov
pop
daa
test
mov
not
pop
ja
add
call
push
add
aas
jmp
(bad)
xor
pusha
sbb
fisub
dec
pop
mov
ret
ret
loopne
test
adc
outs
adc
mov
jo
push
ret
or
out
dec
mov
jmp
mov
outs
shl
and
pop
fdiv
mov
or
sbb
add
out
jmp
es
enter
sub
adc
cmps
adc
(bad)
mov
jo
dec
cmp
aas
addr16
or
sti
inc
loop
inc
sbb
mov
shr
mov
xchg
sub
in
jnp
adc
mov
das
dec
adc
cs
or
dec
jae
pop
mov
adc
or
in
jmp
sub
call
cmps
test
in
cmp
add
push
cmp
popf
dec
push
mov
pop
fisub
dec
inc
enter
hlt
jmp
xlat
pop
repz
(bad)
jb
ficomp
push
sub
stc
adc
cld
out
or
dec
mov
outs
xchg
push
push
or
aam
icebp
or
pop
sbb
retf
or
sbb
pop
or
test
shl
push
repz
adc
cwde
inc
ins
sub
xchg
(bad)
js
cmp
jmp
inc
and
pop
cmp
out
pop
shl
add
xchg
js
mov
add
jbe
cmp
mov
addr16
retf
nop
ins
inc
mov
aaa
xchg
adc
cmp
jg
iret
mov
xor
sub
outs
add
stc
nop
and
sar
push
fcmovnu
add
add
pop
pop
and
mov
rcr
xor
lock
pop
mov
retf
ins
ret
sbb
mov
sub
mov
(bad)
stc
je
jnp
jno
daa
into
movs
imul
sti
scas
jne
xchg
bound
jp
ficom
mov
add
into
cs
xchg
mov
aad
cmp
fild
call
out
push
xchg
fdivrp
mov
dec
jbe
mov
pop
inc
add
cmp
stos
xchg
add
inc
inc
mov
inc
push
mov
js
push
mov
mov
ror
ss
inc
add
mov
pop
mov
mov
cmps
xchg
adc
add
stos
xchg
add
fbld
push
fcom
(bad)
mov
cmp
scas
xchg
aas
punpckhwd
cdq
jnp
fwait
push
in
mov
jmp
int3
es
dec
or
div
xor
adc
mov
cmp
in
aad
into
ss
pop
imul
jno
out
dec
jecxz
push
or
movs
outs
add
sub
iret
push
(bad)
mov
inc
dec
je
dec
retf
and
mov
ja
xchg
pop
adc
aam
mov
adc
xchg
gs
xor
ror
retf
jo
add
xchg
inc
xor
sti
xchg
xchg
jno
lock
mov
sti
or
cmp
mov
add
jl
das
jne
fs
fbld
jecxz
aam
cmc
fnstenv
add
jecxz
ds
ds
dec
sub
mov
imul
mov
cmp
xor
je
mov
out
leave
mov
xchg
push
into
cmp
xchg
bound
mov
aad
mov
jecxz
movs
xchg
xor
adc
jecxz
xor
push
and
cmp
(bad)
cmps
out
push
das
cwde
push
mov
mov
and
mov
cli
mov
and
nop
xor
xor
or
jo
mov
inc
pop
inc
push
and
xor
cmp
retf
leave
cwde
sbb
push
sub
pop
call
sti
mov
push
and
and
cld
mov
adc
xchg
fwait
iret
adc
bound
pop
or
cmp
aam
sbb
xchg
mov
jno
(bad)
iret
lea
cmp
and
(bad)
lods
mov
shl
(bad)
enter
stc
and
(bad)
xchg
mov
xchg
outs
jg
or
ror
lahf
loopne
sbb
std
cmp
xor
jnp
arpl
push
sti
rcl
pop
or
lods
scas
pop
cmc
xchg
or
pop
dec
sbb
pop
ins
jne
(bad)
fnstsw
cs
sub
(bad)
adc
xchg
retf
cmp
call
and
stos
rol
adc
(bad)
lock
aam
sub
popf
adc
and
inc
fimul
mov
pop
or
jmp
cmp
mov
adc
neg
xor
push
pop
lods
icebp
jg
(bad)
cs
inc
jnp
mov
fwait
adc
shl
dec
call
add
push
push
popa
mov
xlat
mov
xchg
add
adc
repnz
aad
xchg
inc
fbstp
shr
pop
fdivr
push
mul
ins
shl
and
fdivr
mov
adc
mov
nop
dec
inc
mov
inc
and
xchg
adc
gs
imul
dec
rcr
int3
sbb
push
loope
test
repnz
mov
mov
or
stos
icebp
loope
mov
cmp
jmp
or
out
es
dec
cmp
cwde
ja
sbb
and
clc
sub
fstp
sbb
les
div
out
push
and
inc
and
(bad)
cmp
popa
out
push
push
in
jno
lock
mov
adc
retf
gs
data16
js
(bad)
adc
jo
dec
or
ds
pop
push
cld
(bad)
psraw
jae
sub
mov
jge
push
adc
ds
fmul
push
aam
test
sbb
add
out
xchg
out
mov
sbb
sub
imul
faddp
cmc
mov
add
sub
add
xchg
dec
pop
inc
xchg
sub
mov
adc
or
pusha
scas
xchg
push
aad
adc
pop
jbe
mov
ss
cmps
arpl
std
sbb
xor
fwait
icebp
call
mov
(bad)
cmp
xor
fsubr
adc
push
les
daa
mov
mov
call
lahf
cmp
cmp
ror
jne
mov
jae
mov
and
fwait
(bad)
sahf
mov
outs
cmp
push
into
jae
retf
sbb
sub
push
fnstsw
pushf
dec
data16
jecxz
push
cmp
ins
push
add
cld
je
xor
std
jecxz
not
dec
mov
push
and
pop
stos
cmps
fadd
cmp
fmul
out
loopne
bswap
jae
cdq
out
add
ret
cmp
xor
mov
mov
into
pushf
sub
sub
pop
add
popf
cld
inc
(bad)
mov
fs
dec
stos
or
les
cmp
popa
cmp
mov
frstor
mov
shr
or
mov
mov
iret
int
mov
xor
enter
shl
fadd
sub
mov
mov
mov
and
stos
(bad)
(bad)
jl
mov
(bad)
js
adc
mov
mov
jae
cmp
retf
add
dec
xchg
mov
jne
cmp
cld
loope
pop
add
cmp
clc
cmp
(bad)
shr
test
xor
es
mov
add
add
lods
xchg
call
gs
movs
mov
fild
out
xor
mov
push
ja
and
pop
sub
push
and
clc
hlt
or
in
push
mov
pop
aas
sub
pop
sbb
xor
jle
(bad)
rcl
add
aam
cmp
jg
ror
test
dec
cmp
xor
or
push
and
ja
inc
xchg
nop
inc
and
outs
outs
cmp
adc
test
pop
adc
adc
push
jmp
(bad)
push
jl
mov
pop
cmp
ror
add
mov
inc
into
sbb
sahf
sahf
jae
mov
mov
cmp
mov
cmps
fild
jecxz
mov
jge
mov
mov
(bad)
lds
loopne
xor
dec
pop
jle
push
repz
dec
dec
scas
(bad)
jg
scas
test
adc
fbstp
pop
(bad)
hlt
stos
scas
mov
mov
cdq
adc
mov
dec
or
pop
push
sub
sbb
sub
shl
mov
or
pop
js
mov
cld
jno
dec
xchg
jo
add
mov
jle
bound
sub
cdq
(bad)
and
aas
std
add
add
lods
mov
ins
(bad)
(bad)
push
jmp
xor
adc
sar
icebp
xchg
mov
test
and
pop
jmp
inc
ds
(bad)
sahf
test
adc
imul
push
mov
aas
lahf
fwait
dec
or
lock
push
jnp
inc
cmp
fwait
jb
adc
rol
out
outs
push
and
dec
jae
pusha
repz
loope
jo
in
test
call
dec
and
push
mov
leave
cmp
daa
inc
xchg
(bad)
std
cmp
movs
sub
jbe
or
inc
ss
dec
inc
cmp
rdpmc
push
loopne
or
push
sub
mov
push
scas
rol
mov
js
mov
xchg
mov
mul
pop
jno
rcl
lock
leave
lds
xchg
imul
movs
movs
dec
cmps
adc
popa
aad
test
push
gs
inc
add
xchg
push
cld
stc
(bad)
test
cmp
and
ret
pause
mov
mov
(bad)
lock
cmp
test
or
into
sahf
xchg
dec
shl
jo
pop
int
xor
mov
fistp
push
adc
jbe
adc
inc
in
sbb
repnz
aam
inc
adc
sbb
dec
mov
popa
sbb
sub
cli
and
xor
repz
scas
fild
xchg
and
out
xchg
and
mov
ja
aas
aas
push
outs
cmpxchg8b
(bad)
retf
repz
mov
lods
jmp
push
push
mov
or
pop
adc
jbe
adc
push
sbb
mov
xor
int
sbb
(bad)
imul
lahf
xor
inc
cmps
sbb
outs
inc
ins
test
mov
pop
and
add
jne
jecxz
into
inc
jl
sbb
mov
dec
scas
out
outs
mov
(bad)
sti
fsub
ret
jns
rcr
xchg
and
jo
iret
ja
sub
(bad)
es
(bad)
pushf
sbb
scas
aad
loope
mov
out
cmp
bound
and
jg
loop
in
retf
stos
stc
mov
in
aad
sbb
push
and
push
cmps
in
out
das
add
dec
pop
inc
and
(bad)
mov
add
int
cmp
aas
xchg
jns
pop
add
cwde
xchg
clc
aas
xchg
mov
in
call
test
ret
xor
adc
xor
nop
inc
cld
pop
xor
adc
xchg
pop
enter
push
pushf
or
sbb
repnz
adc
cmps
iret
lock
shr
adc
cmc
or
and
sub
jae
shl
push
jne
pusha
jp
jnp
mov
(bad)
out
dec
sub
loopne
mov
sbb
cmp
sub
shl
outs
fild
sbb
xor
rol
in
pop
aas
mov
xchg
jbe
mov
call
sub
push
fcmovu
rcr
add
dec
popf
xchg
mov
outs
in
push
out
xor
ror
sub
xchg
cmp
jne
outs
imul
dec
pop
inc
ror
adc
pop
enter
(bad)
or
inc
inc
arpl
out
inc
mov
mov
adc
pop
push
jecxz
repz
pop
sbb
xchg
mov
sbb
(bad)
cdq
int3
sub
mov
pop
push
cli
mov
rcl
xor
dec
push
sub
push
aam
fs
call
test
rcl
enter
push
test
pushf
inc
stc
xlat
or
aad
lea
cmp
cmp
stc
in
lods
jo
hlt
ins
and
repnz
out
ror
gs
push
adc
adc
jns
push
mov
in
add
cmp
leave
and
or
adc
xchg
out
adc
add
rcr
push
bound
dec
cmps
mov
pop
cmps
pop
fmul
ret
or
ins
pop
fcmovb
xor
fstp
das
test
xor
mov
jae
sub
cmp
das
test
sub
lods
dec
ss
push
xor
jecxz
gs
dec
popf
inc
es
add
test
(bad)
mov
push
xor
in
ins
test
cmc
and
push
mov
fadd
daa
push
xor
hlt
cmp
out
and
popf
les
push
cmp
xchg
dec
and
dec
mov
lahf
or
dec
out
(bad)
dec
dec
rcr
retf
scas
lock
dec
jb
jge
jmp
mov
xor
sub
or
or
aas
stos
cmc
mov
cmp
daa
adc
xchg
(bad)
mov
lods
xchg
jl
jnp
jo
jne
fimul
xchg
pop
pop
cs
push
mov
xchg
sbb
push
pop
loopne
push
or
jmp
or
jo
cmp
inc
test
daa
cmp
dec
pop
inc
xor
jecxz
lea
or
xchg
retf
or
test
mov
inc
mov
mov
(bad)
cmp
or
fld
repnz
hlt
cmp
gs
shr
and
mov
retf
and
push
aad
inc
adc
pop
xlat
int3
and
add
test
ins
inc
imul
jecxz
adc
or
jle
adc
sbb
jnp
popf
outs
in
test
scas
mov
add
push
ror
ins
bound
pop
ins
inc
cmp
movs
jge
push
xchg
test
int
xor
outs
xchg
pop
fadd
push
add
add
cmps
retf
mov
jle
xchg
adc
pop
(bad)
(bad)
das
repz
rcr
inc
mov
ror
fdivr
inc
fimul
push
adc
fdiv
push
adc
(bad)
jne
fstp
xchg
xor
sbb
fidiv
stc
rol
out
jle
ja
or
xor
popf
mov
push
dec
mov
outs
jb
mov
jne
call
std
mov
mov
inc
inc
or
sub
iret
inc
mov
enter
ins
jno
push
push
pop
and
nop
sbb
push
mov
pusha
sbb
sub
mov
jns
dec
dec
repnz
push
pop
scas
mov
sub
push
pop
pop
push
xchg
daa
cmc
pusha
inc
or
imul
mov
jecxz
imul
add
inc
push
pop
pusha
sbb
adc
inc
ja
cmp
aaa
neg
xchg
and
xor
fstp
fsubr
xchg
mov
dec
fidivr
sbb
test
jb
mov
loope
jecxz
imul
pop
mov
(bad)
cdq
mov
aad
fcomp
fld
repnz
jae
test
add
ja
mov
cmp
sbb
xor
add
cli
ins
test
ret
into
bound
imul
ss
mov
cmps
int
sub
mov
ror
repz
dec
jnp
les
inc
push
add
rcr
pop
aaa
cmc
push
or
adc
js
push
cmp
sar
xchg
clc
pop
xchg
xor
jae
cld
dec
inc
inc
adc
mov
(bad)
test
cmp
ins
sahf
fidivr
fwait
add
mov
push
es
mov
and
sub
cdq
or
mov
xchg
push
jo
(bad)
stc
mov
sub
push
loopne
xlat
scas
mov
outs
mov
fbld
xor
xchg
mov
sub
mov
pop
out
pop
or
mov
pop
popa
cmps
xor
rcr
int3
(bad)
adc
in
gs
cld
clc
mov
repnz
push
add
cmp
test
data16
sbb
ret
jecxz
xor
xor
int
xor
sbb
xor
out
mov
stos
(bad)
mov
xchg
cmp
dec
xchg
test
std
out
xor
movs
ins
push
sbb
mov
stos
pop
sub
in
inc
popf
push
rcl
xchg
xor
sbb
xor
mov
jnp
xchg
xchg
xor
xchg
push
sub
repz
sti
retf
push
ins
aaa
(bad)
xchg
jne
repz
(bad)
push
repnz
xor
aam
cdq
test
and
ret
xor
repz
or
aad
jl
movs
xlat
test
iret
cs
out
repnz
xchg
push
into
enter
cmps
xchg
sub
jno
push
mov
xchg
call
fcomp
(bad)
lahf
daa
adc
out
imul
dec
mov
jno
mov
push
(bad)
mov
(bad)
cmp
add
xchg
stos
aas
data16
adc
mov
loop
push
jo
sbb
xchg
push
neg
xchg
mov
xor
xor
bound
movs
xchg
pushf
mov
and
movs
ja
in
mov
xor
imul
push
fnstcw
stos
xchg
loope
add
dec
add
mov
cwde
loopne
cwde
or
jo
adc
push
fs
cmp
dec
rcr
(bad)
bound
inc
inc
shl
ds
cld
cli
aad
and
(bad)
std
mov
fcmovnu
cmps
xor
or
in
cmc
xor
jle
pop
pop
je
sbb
mov
mov
imul
cmp
fisttp
sub
cmp
clc
lea
push
xor
push
xchg
jecxz
and
sbb
fnstenv
out
add
jle
iret
jg
mov
lods
mov
and
sahf
inc
into
mov
add
push
cmp
retf
inc
retf
xor
aad
sti
dec
retfw
jnp
pop
or
sbb
lock
ins
cmp
jp
push
xor
xchg
add
mov
test
jmp
inc
dec
xor
mov
jg
cmp
push
mov
mov
daa
sbb
push
jecxz
hlt
sbb
jl
enter
mov
arpl
xor
sub
into
dec
adc
repnz
adc
int3
or
call
je
out
sbb
repz
test
test
jecxz
call
xchg
inc
jecxz
jnp
push
ja
dec
pop
in
mov
mov
lock
mov
inc
mov
cld
add
add
ja
jg
sbb
scas
icebp
jp
rol
sub
cmps
jmp
cmps
ds
sar
aad
inc
iret
scas
scas
mov
ret
xchg
pop
xor
or
adc
pop
jmp
in
scas
int3
fistp
jae
xor
jo
jae
test
sub
cld
and
mov
mov
vpsrad
outs
dec
mov
add
(bad)
or
test
es
or
ror
add
not
dec
or
gs
fsubr
mov
int
mov
in
inc
jmp
jmp
cmp
aas
retf
sbb
jno
call
addps
xor
inc
pop
xchg
mov
lock
pop
sbb
imul
add
cmps
fcmovbe
in
or
jns
cmp
cmp
cmp
dec
inc
movs
seta
(bad)
(bad)
sahf
dec
in
ja
icebp
add
sbb
fcom
or
aaa
ins
mov
out
jne
dec
inc
cli
sub
leave
inc
ins
fbstp
aaa
stos
adc
fdiv
retf
repnz
add
mov
mov
not
sbb
sbb
inc
push
in
das
push
clc
adc
push
pusha
cmp
jae
push
mov
(bad)
fnstsw
inc
and
call
loop
mov
dec
inc
xchg
or
scas
mov
cmp
rcl
fdivr
jmp
into
mov
ret
jae
inc
push
lods
test
dec
push
and
adc
lods
sub
adc
sub
jae
mov
cmp
scas
sub
nop
ds
retf
xchg
mov
xchg
arpl
pop
and
clc
adc
adc
push
adc
pusha
mov
mov
scas
add
push
ret
dec
mov
mov
cmp
pop
je
dec
imul
test
fldcw
fisubr
bound
xchg
shl
in
mov
pop
xchg
jecxz
inc
cmc
jle
mov
ror
bound
lds
jecxz
ds
pushf
xor
xchg
and
pop
sbb
or
popa
mov
mov
jmp
out
dec
add
fstp
lock
push
ficomp
pop
ins
in
xchg
das
cmp
aaa
sub
jbe
mov
in
movaps
lahf
add
cmp
arpl
adc
imul
jns
int
cld
and
call
xor
add
repz
xchg
mov
cmp
out
cmp
out
sbb
cld
xchg
and
scas
jp
pop
add
je
(bad)
sbb
(bad)
push
push
mov
inc
cmp
ins
sub
ret
inc
fnstcw
push
fst
mov
(bad)
pop
call
xchg
sub
test
cdq
fcomp
sar
sub
loopne
aam
pushf
pop
shl
add
add
nop
aas
add
fiadd
ins
and
sbb
iret
add
sbb
or
jo
fsqrt
icebp
std
mov
mov
ss
arpl
cmps
mov
clc
jg
popf
sbb
test
into
cmp
cdq
dec
dec
xor
jmp
dec
and
xlat
add
test
fnsave
movs
clc
fldenv
pop
clc
cli
ror
push
mov
xchg
daa
ins
sbb
daa
pop
mov
or
ss
or
jmp
pusha
(bad)
mov
test
sub
and
xchg
jne
aas
fisubr
jno
cmp
sub
or
mov
push
aad
push
mov
fistp
mov
ret
push
and
shr
or
dec
test
add
in
cmps
gs
jno
les
in
stos
fidiv
(bad)
loope
xchg
push
fild
or
in
stos
das
lds
(bad)
add
ins
push
popf
xor
or
pushf
inc
in
in
js
jo
adc
mov
cmp
dec
jne
aad
sub
fucomip
push
push
inc
mov
push
inc
int3
out
ja
mov
cwde
mov
(bad)
es
frstor
mov
fstp
xchg
jecxz
push
jbe
xchg
idiv
mov
ins
xor
int
ja
push
cmp
loop
jge
cmp
(bad)
ja
mov
lock
std
fsub
sti
std
or
btr
mov
cmp
jp
adc
sub
xor
and
aas
or
imul
stc
in
repnz
cmp
dec
ds
push
sub
sbb
fdivr
sbb
xlat
dec
and
aas
movs
popa
and
sub
push
popa
adc
sbb
jmp
out
(bad)
aam
xchg
jnp
cmps
jmp
xchg
push
push
xor
xor
xor
iret
cdq
gs
lock
not
gs
fwait
mov
dec
test
mov
aad
dec
inc
jne
or
scas
pop
mov
mov
gs
movs
aaa
mov
rep
adc
jge
add
inc
bound
add
sub
mov
add
or
and
jb
adc
sub
neg
and
xlat
jmp
in
add
std
daa
jl
aaa
imul
mov
fnstcw
mov
shr
sbb
jmp
icebp
lea
(bad)
(bad)
mul
and
add
sbb
xchg
sub
pop
repz
xchg
xor
loope
mov
retf
add
sbb
sbb
xchg
stos
je
pop
xchg
cwde
pop
mov
dec
clc
outs
lock
push
pop
sbb
xchg
inc
ins
movs
push
jne
or
xor
call
mov
mov
fistp
arpl
xchg
das
daa
xchg
mov
fild
loope
dec
retf
or
push
out
(bad)
and
fisttp
repz
mov
sbb
cmp
xor
lods
xchg
call
into
mov
test
inc
inc
cmps
dec
enter
dec
cmc
or
cld
pop
or
fcomi
fdiv
mov
psubd
fistp
ficomp
rcr
dec
sub
(bad)
xor
or
jmp
push
dec
xor
mov
inc
xchg
pop
sub
ss
or
xor
lods
ja
sbb
mov
(bad)
nop
dec
mov
adc
fs
jle
pop
xchg
repnz
loop
pop
mov
cmp
addr16
es
xor
jne
push
push
jp
in
mov
je
sub
hlt
xor
jmp
hlt
int3
into
cmp
cmp
les
mov
mov
inc
adc
test
add
mov
add
mov
push
fidiv
or
fs
mov
add
stc
xchg
mov
xchg
jg
jmp
mov
out
jg
add
div
xor
or
dec
ror
test
ss
pop
mul
sub
out
lock
test
add
adc
ss
sub
pop
std
rcr
and
fbstp
bnd
sar
sbb
into
movs
fidiv
mov
in
add
jb
xchg
dec
fisttp
dec
pop
and
dec
adc
adc
aad
xor
sahf
ret
xor
xor
or
cmp
mov
and
adc
xchg
push
pop
jl
sbb
jo
jb
adc
hlt
mov
dec
sub
outs
and
add
enter
ja
dec
retf
cmp
push
call
cld
cmp
fbld
leave
push
dec
push
or
add
inc
test
sbb
in
xchg
ss
add
jbe
and
mov
push
mov
mov
jnp
jmp
aad
jmp
pop
ins
dec
call
js
ins
dec
cmp
addr16
dec
fcomp
aam
and
dec
jbe
add
inc
jb
icebp
imul
ror
jle
xor
sub
sar
in
mov
ja
mov
mov
hlt
xor
sub
jmp
movs
imul
sub
xor
repnz
repz
data16
sti
fsubr
iret
stc
lahf
jae
(bad)
jl
(bad)
int3
push
jns
inc
fs
fcomp
xor
dec
push
cmp
lahf
xor
mov
fs
es
mov
jb
pop
xchg
stos
fild
lea
data16
scas
cs
push
mov
out
xlat
sbb
push
inc
cmp
mov
and
sbb
jne
out
(bad)
pusha
mov
in
push
pop
test
sub
push
stos
inc
mov
xchg
mov
pop
dec
(bad)
fdivp
sbb
enter
shl
je
xor
sar
movs
xor
movs
jne
push
in
mov
cmp
test
pop
jns
mov
fcmovbe
add
lods
into
pushf
addr16
mov
and
cmc
add
dec
in
add
rcr
enter
push
loope
push
(bad)
retf
inc
or
or
shl
int3
int3
jle
lock
lock
sahf
cmp
cmp
xchg
xchg
sub
sbb
sbb
mov
add
int
hlt
lds
cmp
imul
loop
test
push
push
sub
mov
fnstenv
mov
ret
call
cmp
sbb
dec
jmp
hlt
jne
adc
(bad)
xor
sub
ds
mov
push
push
repz
movs
mov
dec
aas
rcr
push
addr16
nop
jecxz
pop
cmp
cld
ja
adc
shl
sub
loopne
pop
sub
ret
fist
cmps
mov
ja
push
cmp
ret
out
mov
push
ret
(bad)
pop
mov
(bad)
cmp
push
inc
dec
lods
arpl
inc
push
mov
jmp
adc
dec
test
inc
dec
fist
or
cmp
add
adc
dec
ins
xor
sub
rcl
jnp
rol
rcr
jmp
into
rcr
xor
mov
in
jp
mov
(bad)
imul
jmp
stos
loop
or
and
add
mov
mov
jl
rcr
test
int3
fldcw
jnp
add
jmp
arpl
or
(bad)
addr16
clc
es
cmp
retf
mov
xchg
leave
inc
(bad)
pop
hlt
shl
test
jmp
and
(bad)
fucomi
repz
inc
push
push
into
xchg
popf
mov
xchg
jmp
jnp
repnz
outs
xor
sbb
mov
and
sar
or
jecxz
(bad)
dec
fwait
add
pop
dec
xchg
rcr
pop
nop
dec
jne
jbe
inc
in
repz
ror
and
nop
push
fs
sbb
push
mov
scas
cmp
cmp
ins
cdq
mov
pushf
loop
add
out
add
pushw
cmp
dec
aas
repz
fidivr
cmp
or
call
xchg
dec
das
popa
dec
in
cmp
pop
rcl
lods
lods
imul
cmp
pop
cmps
inc
mov
sbb
and
(bad)
sbb
aad
sub
(bad)
xchg
ror
nop
rcr
aam
xchg
cmp
dec
jo
dec
sbb
xchg
pop
cli
mov
sub
int
push
mov
jae
enter
in
fnsave
cmp
mov
xchg
nop
sbb
jp
jae
sub
jbe
xor
in
(bad)
mov
jb
push
cli
pop
xor
or
(bad)
js
fwait
dec
into
out
out
sbb
(bad)
in
cmp
loope
cdq
mov
push
xor
add
inc
or
inc
cmp
retf
xchg
mov
jge
fstp
(bad)
sub
adc
xchg
xor
push
dec
test
icebp
mov
js
push
cmp
and
(bad)
jb
hlt
adc
push
mov
scas
aad
loop
in
inc
pushf
stos
scas
xchg
fild
xchg
aaa
imul
loop
push
sub
dec
xor
xchg
mov
cmp
cmp
jmp
dec
cld
mov
add
xor
inc
cmps
out
es
sbb
push
sub
(bad)
cmp
in
mov
enter
inc
call
mov
(bad)
jae
and
jae
std
ins
push
lods
and
fwait
out
dec
inc
shl
xor
xor
rol
inc
std
call
test
mov
jo
or
shl
or
loope
jle
sub
jb
push
inc
call
mov
jmp
xor
inc
add
sub
xor
xchg
mov
les
ficom
cmps
(bad)
mov
sbb
addr16
xor
dec
mov
test
pop
mov
cmps
lahf
push
add
add
cmp
out
int3
mov
add
cmp
mov
in
stc
push
movs
es
inc
pop
int3
jge
adc
lahf
in
mov
mov
je
cmp
ins
lds
jbe
mov
jg
dec
add
sub
or
lods
(bad)
fidivr
xlat
in
add
rcl
jg
and
add
mov
cwde
xor
fnsave
cwde
xchg
xor
push
adc
dec
cmps
cmp
sar
addr16
xlat
or
es
test
mov
jae
or
(bad)
push
clc
ins
jnp
sub
inc
mov
shl
ss
jge
aam
ret
(bad)
add
xor
mov
bound
xchg
lahf
les
jl
mov
add
sbb
inc
enter
jb
jge
ins
jp
jno
mov
push
das
pop
xchg
test
scas
ret
pushf
hlt
add
rcr
mov
cdq
leave
retf
cmp
add
neg
cli
int3
inc
mov
mov
clc
idiv
xchg
stos
pop
jp
inc
sub
cmps
and
lds
and
mov
jecxz
cmps
adc
cmp
mov
ret
lods
enter
pop
rcr
mov
mov
imul
xchg
fcomp
addr16
pop
jecxz
sub
(bad)
mov
mov
dec
cmp
addr16
mul
mov
xor
or
test
cpuid
mov
test
pop
sbb
mov
(bad)
pop
sub
jae
or
jb
jnp
inc
lods
add
in
(bad)
mov
mov
xor
add
repz
enter
add
xor
inc
mov
addr16
loope
sub
loope
ret
inc
inc
mov
xor
shl
jno
clc
inc
lock
lock
xchg
pop
lods
jg
xor
retf
mov
mov
cmp
xlat
mov
cli
xchg
ins
cli
mov
daa
sbb
mov
mov
jmp
adc
adc
push
dec
rol
lock
push
jno
rol
fidivr
test
aam
sti
pop
aam
xor
div
push
js
mov
or
mov
in
dec
mov
jae
scas
(bad)
xchg
rcr
rep
jl
call
test
jge
and
pop
pop
std
int
stos
and
push
xchg
inc
push
xchg
popf
pop
bound
inc
repz
stc
movs
and
jmp
mov
test
out
sbb
hlt
je
addr16
xchg
jbe
ud0
jns
cli
adc
sub
sbb
jp
inc
shl
sub
lods
cmps
inc
aad
cli
sbb
outs
mov
shl
fwait
hlt
push
aam
and
push
xor
or
dec
mov
popf
push
std
test
and
fnstsw
jne
aad
xchg
bound
out
retf
dec
or
mov
mov
xchg
sbb
lea
ja
inc
mov
jmp
or
mov
pop
popf
pop
out
data16
retf
cdq
pop
pop
push
dec
sahf
pop
cmp
sbb
jle
in
mov
ds
(bad)
ds
and
jmp
cmp
std
daa
pushf
out
dec
xor
(bad)
loop
xor
sti
jae
xchg
es
add
icebp
add
pop
mov
lock
push
xlat
(bad)
and
adc
adc
xor
sub
mov
push
sbb
xchg
out
fs
or
and
lods
jge
and
fiadd
rcl
fnstenv
mov
cmp
jp
neg
pop
push
push
sbb
mov
sbb
in
push
inc
loopne
sbb
(bad)
lods
jg
into
in
add
xchg
push
mov
add
call
and
cmp
bound
xchg
dec
jmp
dec
jbe
cdq
daa
hlt
fstp
add
mov
ret
add
shl
fmul
sbb
xor
dec
adc
mov
push
in
xor
enter
inc
inc
pushf
sub
pop
xor
pushf
loopne
mov
jp
arpl
push
add
ss
push
test
jg
movs
jb
test
dec
aad
add
adc
leave
call
sbb
sub
pushf
lods
jle
xor
jmp
mov
shl
sbb
pop
adc
sub
loope
dec
add
sbb
stos
dec
arpl
mov
leave
sbb
fstp
jne
sbb
jnp
jo
das
inc
fisub
jo
faddp
jl
push
sub
neg
xchg
sti
cwde
sahf
jo
outs
xchg
je
inc
jno
imul
mov
repnz
jae
mov
in
bound
sbb
xor
push
into
sbb
test
mov
xchg
leave
movs
call
mov
sbb
or
ret
jle
lahf
mov
test
mov
out
and
arpl
mov
push
and
js
sub
xchg
sbb
push
and
imul
mov
repz
or
fldl2e
ffree
add
stos
es
and
add
fwait
mov
xchg
cmps
icebp
add
fs
cmp
and
cmp
sbb
jl
in
jnp
or
inc
call
or
call
jne
sti
adc
loope
repz
and
adc
ficomp
lock
and
inc
pop
sub
addr16
call
nop
xchg
leave
adc
xlat
cmps
fdiv
dec
or
cdq
das
sbb
pop
push
vfmaddsub132pd
push
pop
xor
push
cmc
pop
jge
xlat
inc
inc
xchg
xor
mov
jecxz
fucomip
cli
cmp
out
imul
or
loope
or
cmp
inc
loop
sahf
test
or
or
or
and
mov
aam
mov
jg
dec
sub
repz
lahf
neg
mov
and
and
mov
leave
bound
xor
dec
loope
cwde
pmullw
or
inc
aam
bound
lods
dec
popf
xchg
call
mov
jg
mov
add
inc
cmc
mov
les
dec
cmps
pop
pop
push
fnstcw
movs
mov
dec
jecxz
push
or
or
and
or
in
and
add
cmps
or
jmp
xor
add
add
push
(bad)
cmp
cmp
(bad)
stos
mov
(bad)
in
repz
mov
pop
push
add
mov
ins
js
push
daa
sbb
(bad)
movs
pop
jmp
aaa
sti
aaa
jne
int3
leave
jne
cmps
arpl
ret
jne
movs
mov
in
dec
inc
mov
leave
mov
push
xchg
adc
xchg
jb
ficomp
inc
xor
and
(bad)
mov
dec
sbb
loopne
(bad)
mov
fstp
jmp
pop
jg
gs
xchg
mov
ret
pop
sub
imul
loopne
(bad)
dec
rol
add
cmps
or
adc
aas
lahf
out
mov
daa
xor
enter
sub
push
jbe
ret
jnp
mov
jbe
inc
push
test
sbb
inc
xchg
jge
jg
loopne
out
cdq
std
ins
mov
fadd
cmps
sub
faddp
(bad)
pop
mov
mov
mov
out
add
sub
mov
pusha
ror
sbb
test
shld
loop
mov
xor
xchg
loop
neg
or
dec
mov
into
inc
mov
jmp
sahf
xchg
je
imul
arpl
xor
mov
and
test
cs
cmp
leave
popa
call
sbb
ret
add
fisubr
dec
cmp
cmc
bound
or
fwait
lods
sti
jo
xchg
in
dec
hlt
ins
xor
push
adc
pop
push
mov
add
iret
dec
in
xchg
xchg
test
push
gs
daa
mov
and
mov
adc
cmp
mov
hlt
aam
sti
and
pop
jle
or
push
xchg
(bad)
and
adc
sub
cmp
cmps
mov
test
int
jne
ss
sub
test
dec
xchg
xor
rcl
cmps
xor
fstp
and
ja
xchg
adc
pushf
jecxz
jmp
mov
cli
rol
ss
or
xor
mov
mov
adc
mov
in
push
rcr
fsub
daa
xchg
es
pop
stos
repz
pusha
dec
inc
inc
adc
push
enter
mov
lock
and
ret
fwait
cmps
sub
addr16
cli
imul
dec
retf
or
xchg
das
cmp
jbe
push
cmp
add
repnz
iret
mov
ret
lds
cmc
push
dec
mov
pop
test
adc
adc
cdq
and
cmps
mov
aas
aaa
and
call
or
push
daa
jbe
lds
jae
mov
dec
inc
cmp
loop
cmp
cmps
pop
aaa
mov
das
movs
pop
jl
inc
and
push
call
call
jecxz
dec
ret
das
nop
std
retf
mov
loope
repnz
inc
shl
mov
lods
nop
(bad)
iret
shr
sbb
cwde
and
stc
clc
mov
(bad)
cmp
push
icebp
neg
push
pop
sbb
add
lods
jno
(bad)
jp
push
test
sub
adc
add
add
inc
lahf
loope
pop
add
aaa
neg
xlat
xchg
xor
xchg
fisub
outs
pusha
pop
adc
pop
bsf
cdq
mov
jl
dec
imul
push
sub
add
mov
jge
or
mov
cwde
pop
cmp
scas
call
or
mov
test
adc
(bad)
call
mov
lods
jecxz
xchg
aaa
leave
jmp
aad
fiadd
inc
jle
sub
pop
pusha
xor
add
(bad)
or
sub
push
std
stc
hlt
outs
push
call
jnp
jmp
mov
gs
test
sbb
out
mov
push
cdq
pop
jne
repz
iret
adc
ret
cmp
cwde
mov
sbb
pop
fnsave
mov
out
add
jmp
cmp
lock
pop
loope
push
das
(bad)
sahf
test
jo
mov
daa
push
adc
jno
popa
and
loopne
dec
push
ficom
mov
sub
mov
pop
push
cmp
xchg
dec
sub
ret
jb
stos
xchg
sbb
xchg
pop
pop
xchg
in
pop
icebp
shr
je
inc
mov
div
ret
xchg
scas
xor
movs
icebp
adc
cwde
push
lds
jnp
cdq
mov
into
fst
adc
sub
sub
push
add
pop
push
xor
scas
dec
inc
sub
add
cmc
adc
pop
test
xor
jmp
mov
mov
xchg
cmp
(bad)
cmp
popa
lods
adc
push
mov
jmp
mov
jne
inc
sub
jbe
jecxz
mov
jo
mov
or
retf
pushf
mov
mov
pop
arpl
mov
jg
jnp
mov
dec
and
lahf
sbb
cmps
and
push
pop
addr16
lock
in
int
(bad)
ror
adc
out
push
int
mov
cld
or
mov
cld
leave
sahf
add
pause
imul
dec
adc
int3
fs
in
imul
icebp
nop
ins
pushf
cmp
pop
pop
cmc
popa
retf
in
add
cmp
scas
add
(bad)
fdiv
push
cwde
pop
hlt
out
xchg
add
rcr
ins
mov
int
lds
xlat
mov
movs
dec
and
jl
push
mov
xchg
push
mov
call
ins
ins
cmps
repz
les
adc
adc
push
movs
retf
jmp
and
dec
out
jl
es
inc
call
dec
mov
data16
std
ss
push
fistp
lahf
push
dec
cmp
xchg
out
imul
lahf
fwait
mov
fild
xor
cmp
outs
xchg
mov
cmp
aas
sbb
sub
mov
or
sub
fbstp
aaa
ss
test
or
push
int
add
xor
mov
inc
ja
mov
xchg
jg
adc
add
sub
jp
push
dec
imul
shl
loope
(bad)
dec
in
pop
sbb
call
cmp
mov
into
dec
lea
inc
stos
or
scas
jae
jp
jge
sub
mov
inc
aad
sub
test
cli
std
inc
lds
(bad)
shr
sub
sbb
and
inc
mov
sbb
pop
pusha
sar
es
pop
dec
(bad)
push
sub
ss
test
push
mov
fmul
cmps
mov
jae
dec
cmc
in
sbb
test
mov
inc
lods
ja
mov
xor
add
adc
aad
(bad)
neg
xchg
mov
arpl
cdq
mul
mov
mov
mov
in
test
or
outs
fld1
hlt
arpl
mov
dec
lea
push
dec
push
(bad)
sub
mov
adc
mov
adc
sbb
nop
pop
addr16
bound
loop
je
aas
mov
lahf
mov
sub
jecxz
fwait
(bad)
and
dec
outs
mov
adc
iret
dec
add
cmp
cmp
idiv
sbb
pushf
out
mov
cmp
shl
inc
loope
cmp
xor
scas
cmps
fwait
jge
mov
add
jmp
sbb
rcl
aad
mov
hlt
stos
push
jb
arpl
test
cmp
rcr
in
dec
fwait
inc
pushf
test
jb
retf
cmc
push
das
jge
jae
(bad)
xor
sti
es
out
popa
lea
fistp
loope
pop
cmp
inc
stos
js
cmps
push
jmp
pop
push
cmp
jecxz
(bad)
dec
jmp
iret
stos
fwait
jge
leave
add
fisubr
mov
xchg
popa
xchg
sbb
sub
xchg
aas
js
pusha
scas
xchg
mov
dec
xor
int3
sub
ret
push
cdq
mov
mov
jnp
cs
lock
push
in
pop
retf
int3
push
add
shl
cs
fnstcw
or
mov
sbb
inc
test
jecxz
test
mov
and
lock
clc
leave
icebp
cmps
adc
loop
test
add
sbb
add
mov
in
cmp
push
fbstp
xor
das
aaa
push
sbb
push
add
lock
int
jb
fwait
or
and
jae
inc
push
stos
js
(bad)
shl
jae
push
sti
ins
das
jmp
add
inc
xchg
xor
jp
nop
in
or
in
xor
movs
adc
dec
or
es
fwait
pop
jmp
popf
fs
icebp
sbb
lods
pop
mov
jmp
in
jb
(bad)
int3
mov
sub
into
mov
sub
sub
jmp
sbb
lock
adc
in
stos
movs
das
movs
scas
or
loop
cmc
nop
xor
mov
mov
(bad)
sar
js
xor
shl
mov
sub
sub
inc
into
inc
dec
jmp
stos
fnstenv
out
scas
push
adc
xchg
mov
test
jge
popf
leave
cmp
mov
repz
jne
pop
add
retf
(bad)
loopne
in
mov
sub
push
test
call
lea
cmps
movs
sbb
std
add
xor
xchg
and
lahf
sbb
push
xchg
ss
mov
and
ja
xchg
fdivp
mov
movs
mov
(bad)
mov
mov
(bad)
out
mov
cs
push
add
push
in
push
dec
loopne
jmp
or
cmp
jbe
adc
(bad)
fdivr
pusha
icebp
leave
add
mov
and
xchg
sbb
popa
pop
je
cmp
(bad)
fst
sub
ficom
inc
movs
ins
fist
xchg
in
in
and
lods
mov
je
inc
mov
mov
or
dec
je
jbe
xchg
test
and
mov
test
je
push
pop
fdivr
and
xor
jge
mov
cmp
xchg
mov
adc
sub
fdiv
jmp
or
cmp
shl
ficom
fadd
(bad)
ja
mov
pop
dec
inc
jle
fsub
xchg
push
je
mov
shl
mov
push
mov
push
jmp
add
or
push
dec
xor
(bad)
jmp
(bad)
ss
(bad)
cli
loope
xchg
sar
adc
and
inc
and
add
cdq
sti
add
outs
dec
jnp
out
outs
jbe
test
xchg
adc
int3
scas
xor
cmp
imul
shl
scas
cmc
inc
mov
mov
das
xchg
or
loopne
mov
iret
iret
repz
pusha
lods
inc
xor
test
repnz
ss
and
sbb
mov
xor
xor
aad
rcl
movs
xchg
dec
jae
(bad)
loope
xchg
popf
and
mov
push
and
movs
push
xor
dec
dec
cmp
inc
xchg
out
xlat
rol
mov
movs
cmp
lods
out
jmp
jnp
inc
test
in
xor
pop
loope
xchg
adc
pop
xchg
adc
dec
out
sahf
neg
xchg
jb
(bad)
or
or
iret
setle
pop
(bad)
ss
js
mov
xchg
fstp
pop
pop
jnp
lahf
in
fcomp
mov
mov
sbb
sbb
cdq
int3
outs
cld
(bad)
push
cmp
mov
pop
or
push
jmp
pop
jnp
mov
cli
jmp
dec
arpl
addr16
jbe
add
inc
jno
out
into
cmc
fsub
mov
xchg
fimul
ficomp
imul
repz
lock
dec
ret
push
push
test
inc
paddq
int
iret
outs
push
test
or
stc
pop
adc
add
push
mov
add
iret
pop
push
gs
es
movs
cld
pop
jne
cmp
pusha
dec
add
repnz
(bad)
iret
out
xor
dec
dec
loop
lea
loope
xor
push
xchg
jns
inc
xor
mov
imul
(bad)
or
jmp
in
push
lods
fs
pop
and
arpl
lock
sbb
stos
mov
mov
inc
ret
fnstcw
out
jg
add
aas
das
scas
fwait
dec
pushf
stos
loopne
add
jnp
mov
push
push
hlt
push
mov
mov
test
jne
xor
cld
iret
popf
dec
fstp
lea
fnstcw
scas
loopne
adc
loopne
in
sub
fcmovnb
dec
sub
inc
out
mov
fs
lea
pushf
pop
retf
fmul
ds
pop
imul
cmp
ror
icebp
mov
pop
cmp
add
push
jecxz
clc
into
nop
sbb
inc
dec
push
sbb
jne
xor
jge
stc
xchg
fcom
jmp
aam
lahf
arpl
mov
lods
push
(bad)
rcr
inc
xor
sub
mov
xchg
mov
ins
js
rcl
cmp
push
mov
or
sahf
test
ja
xor
mov
jmp
js
mov
inc
cmps
cli
pcmpgtd
lahf
loopne
lds
inc
aad
sub
adc
add
cmp
push
js
mov
out
pop
and
dec
mov
dec
lds
mov
mov
mov
test
jb
clc
mov
mov
jmp
ret
not
popf
fistp
inc
scas
repz
mov
jmp
ficomp
cmc
cmps
jl
mov
popa
leave
out
push
call
pop
mov
jno
outs
cmps
mov
jge
dec
mov
mov
dec
sbb
rcl
push
jle
movs
mov
or
cmp
ins
ret
ficom
daa
jge
fcomp
retf
sbb
and
mov
mov
or
std
adc
xor
mov
adc
sub
add
pop
push
sub
bound
cmps
or
sar
cmp
aad
leave
aam
les
pop
pop
(bad)
shr
(bad)
fstp
xchg
daa
ins
push
jmp
ret
add
test
mov
lea
(bad)
gs
stos
pusha
movs
ret
test
out
test
fnstsw
dec
mov
rcl
lods
push
push
dec
push
add
int
pop
xchg
popf
data16
lea
not
ins
jmp
xchg
lods
inc
pop
mov
mov
xor
cmc
jb
push
mov
shr
test
sbb
rol
mov
out
add
xor
xchg
stos
out
inc
xchg
or
ret
adc
jl
mov
sti
xchg
mov
cmp
mov
lahf
ins
xlat
ret
xor
sub
rcl
sbb
shl
xor
or
or
push
dec
jge
idiv
imul
in
ins
mov
push
out
xlat
jae
xor
push
and
mov
pushf
sub
pushf
jb
adc
add
xchg
in
xor
int
stc
xchg
and
add
scas
push
mov
(bad)
movs
addr16
out
cmp
lds
ins
mov
push
ins
xchg
dec
lods
sbb
mov
jbe
pop
int
or
mov
dec
cdq
push
bound
sub
cmp
ins
stos
cmp
mov
lds
repnz
cwde
mov
neg
jnp
stos
(bad)
push
push
xchg
xchg
push
aad
xor
jbe
imul
push
fcomi
sbb
push
sar
jg
mov
and
test
ins
mov
lods
inc
xor
in
mov
push
cmp
sbb
lock
inc
loopne
nop
addr16
pushw
js
mov
fsub
xchg
mov
cmp
or
fwait
mov
pop
xchg
dec
mov
and
ret
jmp
imul
mov
int
jecxz
pop
imul
jae
outs
or
lods
call
adc
cmp
fmul
fistp
push
inc
imul
in
sub
cmp
sbb
xor
sbb
in
aad
mov
fistp
and
inc
xchg
loop
mov
je
nop
xrelease
push
cmps
icebp
push
mov
push
addr16
mov
mov
jno
sub
add
cmp
movs
out
fs
ins
cld
adc
xor
rcr
retf
call
test
lea
fild
dec
es
adc
sar
sbb
loopne
mov
dec
out
dec
xor
cli
cmps
outs
push
push
aam
jecxz
ret
(bad)
xchg
lods
sbb
mov
mov
mov
adc
push
inc
aam
ret
jge
ror
xchg
js
mov
pop
(bad)
fsubr
sahf
pop
rcl
push
pop
pop
add
xor
add
rcr
outs
inc
push
pop
push
xlat
rcl
push
sub
sti
sbb
xchg
ret
popa
mov
mov
xchg
xor
jp
and
shl
xchg
mov
push
xor
jno
loope
jo
xchg
cmp
mov
mov
xchg
mov
adc
pop
int
mov
mov
fucom
lahf
pushf
fwait
xor
pop
in
clc
cwde
or
mov
cmp
lds
mov
sub
sahf
adc
inc
(bad)
daa
cmp
xchg
shl
xchg
sbb
push
or
cwde
add
(bad)
jae
mov
cmps
dec
shl
int3
mov
xchg
and
fild
xchg
and
jge
and
add
cli
bound
cli
lea
and
mov
in
(bad)
repz
rcl
sub
dec
pusha
sub
sub
push
addr16
popa
jle
or
(bad)
std
(bad)
addr16
sub
inc
mov
ret
idiv
lahf
adc
fcomp
dec
push
fdiv
mov
stc
out
adc
cld
mov
jae
(bad)
repz
arpl
lds
enter
pop
cmp
mov
inc
aas
sub
clc
xchg
stos
sub
ret
outs
cli
inc
push
ds
clc
push
dec
ds
icebp
mov
test
jbe
out
test
cmp
and
or
jbe
mov
mov
ins
outs
gs
xchg
adc
inc
mov
std
adc
call
mov
inc
jne
pop
jge
ins
dec
shl
fwait
daa
mov
cmps
ffreep
ins
and
loop
dec
and
call
xor
jecxz
mov
adc
fcmovbe
(bad)
adc
mov
sbb
cmps
int
call
pop
in
xchg
icebp
aas
fidivr
addr16
repnz
xchg
lock
ret
mov
inc
daa
test
jmp
mov
dec
je
sub
int3
inc
pop
ss
push
lods
jnp
lods
int3
stos
retf
mov
push
std
loope
sub
mov
sbb
mov
push
add
test
jp
sbb
or
pop
test
mov
inc
jo
cmc
sub
cmp
mov
push
xchg
dec
sbb
pop
(bad)
les
(bad)
sahf
addr16
mov
inc
inc
scas
gs
out
jl
lods
push
or
jb
sbb
or
ret
add
imul
iret
int
loope
daa
fbld
pop
fisub
inc
outs
cmps
cmp
(bad)
mov
push
sub
adc
movs
bound
cmp
push
outs
movs
mov
sti
adc
and
ins
int
jmp
loope
dec
cmp
push
pop
clc
fstp
jmp
inc
dec
mov
fsub
cwde
push
push
pop
and
shl
inc
and
js
xor
push
aam
adc
mov
adc
sbb
inc
cmp
ret
xor
nop
jb
pusha
xchg
mov
add
cmc
jecxz
call
jns
or
or
out
jg
mov
mov
or
hlt
add
leave
movs
sub
enter
leave
leave
mov
scas
test
or
push
retf
jmp
clc
xor
test
cwde
pop
dec
test
(bad)
mov
mov
lds
pop
and
(bad)
push
cwde
mov
retf
out
xor
mov
jae
cmp
shr
jg
cli
xor
punpckhbw
inc
cmp
add
jmp
cmp
mov
(bad)
jns
movs
xchg
mov
cmp
stos
dec
xchg
aad
push
lock
jmp
xlat
mov
mov
cmp
cwde
adc
adc
retf
scas
outs
dec
or
mov
cs
jae
das
pop
scas
cdq
ins
call
or
or
outs
jno
lahf
cmp
push
mov
xor
lock
leave
leave
push
pop
call
inc
inc
je
loopne
or
sbb
loop
push
pop
mov
mov
in
sub
stos
mov
ror
and
outs
inc
xchg
sbb
es
enter
pop
imul
xchg
stos
inc
in
and
mov
bound
shr
js
jg
or
pusha
clc
adc
imul
cwde
aaa
jle
sti
aas
xlat
sbb
(bad)
inc
lea
ja
adc
inc
(bad)
lea
sahf
add
jbe
sbb
pop
(bad)
repz
test
cdq
test
adc
mov
cmp
hlt
xor
sbb
xchg
inc
sbb
imul
adc
retf
add
add
xor
inc
inc
xchg
das
push
fbstp
and
sti
retf
cmps
out
sbb
pop
ds
xchg
es
test
push
cmp
loope
enter
aad
out
cmp
cld
popf
jnp
pop
fnstenv
daa
push
xor
or
je
sub
lea
rol
mov
lahf
imul
das
mov
addr16
or
gs
xchg
push
dec
adc
outs
mov
jo
mov
jnp
ret
xchg
and
test
mov
jl
adc
push
jp
ret
mov
pop
outs
fdivr
dec
sahf
adc
jecxz
pop
mov
push
inc
adc
adc
add
int
push
xor
jbe
(bad)
mov
out
rcl
jl
stos
sahf
cmp
push
cmc
test
jne
jge
rol
or
dec
sub
pop
and
push
in
(bad)
jecxz
pop
adc
(bad)
push
mov
and
sbb
popa
dec
add
out
mov
adc
iret
and
mov
leave
lahf
sbb
mov
dec
sub
pop
in
adc
fwait
out
ror
push
jnp
sahf
and
inc
cmp
sub
dec
fsub
cld
mov
pop
pop
inc
jnp
ja
inc
pop
clc
das
xchg
cld
xchg
mov
or
loop
pop
jge
jmp
fsub
(bad)
clc
sahf
mov
sar
mov
push
jle
mov
xchg
(bad)
adc
sti
push
adc
pop
jb
scas
pushf
sub
cs
sbb
jge
pop
out
mov
jg
push
mov
sub
or
fnsave
and
test
add
sub
mov
push
call
or
int
mov
inc
ss
fild
mov
inc
pop
jmp
lods
pop
sti
xor
xchg
scas
push
test
xor
xor
pop
test
adc
iret
pop
sub
or
clc
fsubr
ss
mov
pop
sbb
stc
sbb
add
pop
and
mov
dec
(bad)
xchg
lods
(bad)
stc
mov
ret
mov
and
xchg
bnd
jp
rol
dec
fidiv
cli
mov
mov
push
test
ret
adc
mov
jbe
call
mov
sahf
ret
aaa
ds
xchg
inc
out
and
sbb
mov
jmp
or
movs
dec
push
cmc
push
pop
test
sahf
push
cmp
scas
sub
out
push
(bad)
sbb
rol
fldcw
mov
cmps
and
dec
dec
test
pop
and
dec
mov
leave
test
stos
popa
jle
out
in
popa
cdq
pop
icebp
jmp
sbb
cld
or
pop
xor
xchg
mov
mov
cmp
fadd
push
and
jno
(bad)
packsswb
push
aas
cmp
or
mov
push
cli
add
imul
add
(bad)
cdq
sbb
adc
xor
leave
xchg
jp
in
xor
pop
pop
sar
lea
(bad)
les
mov
adc
sbb
bound
js
out
inc
adc
mov
cmp
or
in
xor
jge
les
std
aas
cmps
scas
cmp
int3
cmp
ja
enter
sub
cmps
pop
das
inc
xchg
cmps
in
or
pop
jnp
dec
or
cmp
iret
push
add
imul
push
dec
stos
ror
mov
xor
push
mov
shl
mov
mov
jmp
loop
movs
js
hlt
ds
call
imul
mov
sahf
lds
jae
pop
adc
scas
and
dec
jnp
lods
cdq
out
imul
push
pushf
xor
inc
repz
xchg
out
(bad)
stos
pop
pop
das
pop
xor
inc
push
rol
pop
out
xor
cmp
jmp
arpl
pop
jp
sub
sub
jecxz
mov
daa
repnz
adc
iret
out
sahf
inc
ror
pop
out
ret
sub
mov
xchg
jmp
inc
cld
arpl
loope
jno
pushf
dec
nop
cmp
(bad)
xchg
sbb
mov
pop
rol
and
lea
sub
or
mov
mov
(bad)
shl
enter
push
rol
sbb
daa
ins
mov
or
leave
sub
mov
sbb
sbb
jle
push
pop
test
push
jge
or
jp
mov
xor
icebp
dec
cmps
jmp
xor
and
jbe
mov
mov
sbb
cmps
shl
adc
push
cs
retf
pop
ss
mov
popf
pop
aam
inc
je
lods
(bad)
fisub
push
repnz
fmul
(bad)
iret
mov
ins
xor
cmp
clc
sar
jb
aad
rcl
jb
mov
jnp
jnp
leave
mov
or
and
movs
enter
daa
in
loop
mov
or
retf
or
inc
xor
push
int3
fs
int3
imul
mov
lds
and
bound
sub
and
shl
mov
mov
xchg
retf
xchg
test
inc
out
je
mov
sbb
pusha
pushf
jl
mov
aam
adc
and
or
inc
outs
push
icebp
fadd
scas
inc
add
sahf
hlt
test
sar
push
or
aad
outs
test
ror
sub
mov
stos
icebp
les
mov
cmp
sbb
outs
pusha
sbb
mov
inc
xor
pushf
fld
movs
scas
iret
loope
(bad)
loopne
or
ja
out
inc
ja
ret
ins
push
and
push
sub
sar
xor
aas
ror
add
lock
sub
lds
push
mov
clc
adc
jns
adc
push
sub
add
jb
add
sbb
jg
mov
xlat
mov
or
(bad)
jo
pop
mov
cmps
adc
adc
cmps
mov
lods
push
mov
daa
push
push
sub
in
xchg
inc
pop
push
mov
daa
xor
sahf
or
sub
mov
fsubr
jns
repz
cli
cmp
cmc
push
pop
inc
int
pop
ins
sbb
add
jge
out
popa
mov
xchg
hlt
mov
mov
jl
pop
ror
add
jno
retf
out
jge
fld
jg
leave
ja
imul
rol
jmp
retf
sub
mov
pushf
add
(bad)
ins
fisub
sub
out
mov
push
shl
or
mov
stos
push
lds
mov
jecxz
or
and
xlat
leave
jmp
jbe
fnstenv
cmp
adc
mov
xchg
data16
movs
(bad)
mov
pop
lock
cmp
in
sbb
xchg
push
adc
lods
call
mov
loop
imul
adc
adc
ja
jno
mov
jo
pop
(bad)
fisub
sbb
dec
pop
in
dec
mov
cmp
or
(bad)
cmp
repnz
ins
clc
aaa
test
jp
adc
cwde
cwde
mov
cmps
mov
xor
test
add
jne
sti
sub
nop
sbb
mov
mov
add
(bad)
stos
fwait
xor
sbb
scas
mov
mov
ins
in
popa
(bad)
(bad)
pop
xchg
push
jp
sahf
dec
jecxz
sbb
add
fistp
out
std
lahf
cmps
jo
dec
aas
jl
aam
mov
(bad)
lds
mov
mov
and
inc
push
(bad)
or
jo
mov
xor
cmp
xchg
adc
lods
sbb
mov
push
loopne
int
retf
int3
into
aad
xchg
sub
popa
in
(bad)
push
daa
loope
bound
outs
das
fiadd
cld
dec
push
adc
movs
mov
mov
cmp
cmp
add
add
adc
std
hlt
pusha
imul
inc
cwde
inc
lods
sar
aas
sub
push
mov
jmp
jo
pop
xchg
and
jno
(bad)
fcom
mov
dec
dec
outs
pop
shl
shr
and
pop
cli
cmp
sbb
(bad)
test
cs
scas
mov
push
mul
and
mov
and
aad
(bad)
xor
mov
and
aad
cmps
jne
retf
mov
jnp
jne
jp
shr
xor
gs
xchg
leave
xchg
repz
sub
jnp
stos
push
imul
aas
xor
movs
fadd
icebp
retf
mov
push
retf
mov
imul
or
dec
sti
push
sub
std
js
fimul
add
jns
cmp
and
aam
mov
fucomp
push
pop
fcmovnu
sbb
push
xor
out
imul
repnz
push
pop
nop
in
xchg
outs
es
mov
jnp
ja
in
pusha
lock
jle
in
jp
jae
out
daa
jae
ss
iret
aam
(bad)
dec
jge
nop
and
cmp
push
fistp
sub
sub
xor
mov
outs
lock
sbb
push
lea
xchg
push
push
sub
or
clc
adc
loope
push
jg
sub
cmps
mov
loopne
inc
shr
aad
add
cmp
scas
dec
cmp
sti
outs
aas
cwde
jno
push
shr
xchg
dec
scas
pop
mov
and
sbb
mov
xor
push
iret
out
out
xchg
pop
sbb
push
ret
ins
aam
cmps
xchg
nop
rol
movs
pushf
lea
sar
push
adc
jbe
das
arpl
scas
mov
and
jmp
mov
or
out
sbb
xlat
mov
xor
fadd
(bad)
out
adc
clc
push
add
movs
push
pop
or
call
push
adc
sub
sub
fnstsw
push
pop
jbe
outs
ret
xor
mov
ret
lock
mov
jp
retf
xor
js
movs
add
(bad)
bound
mov
repz
repnz
pop
push
fnsave
cmps
pop
fist
xchg
adc
push
inc
or
cwde
lahf
mov
icebp
ins
test
inc
in
adc
rcl
jnp
in
sahf
add
(bad)
lods
(bad)
cmc
xchg
mov
mov
fisub
nop
xchg
imul
xor
das
dec
in
mov
xor
add
les
xor
sub
je
fld1
popf
idiv
pop
sbb
add
cmp
pop
dec
test
mov
pop
jmp
retf
push
and
adc
popa
sub
nop
arpl
or
addr16
xor
retf
jmp
(bad)
out
test
ss
sbb
(bad)
mov
jns
shl
xchg
push
ror
inc
inc
and
loope
push
push
or
push
ss
xchg
adc
jb
rol
in
dec
push
xchg
call
mov
pusha
inc
mov
aas
aaa
cmp
mov
sub
cs
mov
inc
cmp
cmp
cli
push
mov
and
xor
loope
lea
(bad)
(bad)
lock
dec
std
(bad)
and
int
cli
jb
aas
cmp
rcr
cmc
cmp
sub
xor
adc
xor
jp
dec
inc
cld
pop
push
arpl
stos
pop
and
hlt
aam
fidivr
addps
cmp
jp
lds
aad
dec
push
stos
call
shl
xchg
test
(bad)
movs
inc
in
out
ins
lds
pop
and
mov
adc
pop
cli
jae
jnp
xchg
jne
push
adc
(bad)
pop
aaa
scas
mov
jge
ds
add
and
dec
cdq
(bad)
jo
in
lds
jmp
aam
(bad)
jmp
jp
inc
mov
inc
and
inc
add
jmp
dec
jg
push
sbb
outs
sub
es
or
jge
sar
dec
test
dec
(bad)
mov
mov
inc
xchg
push
jecxz
aad
xchg
push
cmps
pop
xor
pushf
mov
or
mov
jmp
xor
shl
aad
gs
rcl
in
test
sbb
mov
and
int
mov
mov
jne
imul
jge
mov
pop
cmp
or
jo
outs
cmp
xlat
and
lahf
mov
push
mov
loop
push
cmps
repnz
xchg
add
out
pop
popa
mov
xor
dec
dec
ins
pop
add
mov
pusha
shr
xor
cs
mov
sbb
or
sbb
lds
rcr
sbb
test
scas
outs
pop
dec
mov
test
ins
fadd
std
arpl
pusha
xchg
hlt
mov
cwde
movs
pushf
xchg
repnz
dec
cmp
mov
ins
pop
pusha
cdq
cmps
scas
vpmacssdd
adc
loop
mov
idiv
dec
adc
push
sbb
in
in
mov
sti
pop
sbb
xor
sub
fist
sbb
movhps
or
bnd
test
mov
add
les
and
lods
xlat
mul
pop
dec
adc
and
test
add
mov
cli
inc
rcl
xchg
jns
dec
inc
cwde
fdiv
out
or
cmp
hlt
popf
sub
mov
mov
jne
xchg
mov
cli
out
cmp
push
fisttp
sub
(bad)
fucomp
add
cmc
add
mov
sbb
push
fisttp
cmc
xlat
sti
hlt
push
out
popf
xor
repnz
jb
ja
push
rcr
mov
mov
mov
retf
jbe
mov
mov
pop
adc
dec
jmp
sub
or
pusha
repnz
mov
cwde
in
xchg
mov
bound
int
inc
ja
shl
push
jp
dec
int
sub
loop
sub
cmp
outs
dec
mov
lods
jbe
inc
jne
adc
pusha
push
push
gs
out
loop
push
das
pop
int
jmp
cs
mov
es
dec
push
and
cmp
and
popa
lahf
jmp
xchg
imul
scas
dec
or
jecxz
jl
aas
cmp
push
out
sub
in
xor
in
(bad)
(bad)
jge
mov
aaa
outs
sub
adc
xor
nop
in
mov
fs
xlat
(bad)
daa
jns
dec
mov
push
in
mov
aaa
and
jnp
push
mov
add
popa
loope
sub
push
(bad)
test
int
scas
test
jae
push
jo
and
cld
push
xchg
adc
sbb
js
xchg
xor
stos
mov
stos
sbb
push
cmp
and
rol
jg
push
xor
adc
or
shr
xchg
mov
les
jmp
ret
movs
sub
mov
ins
pop
jbe
loope
push
xor
adc
mov
mov
mov
and
mov
int3
mov
popa
pop
pop
cld
fidiv
daa
data16
sub
mov
inc
nop
and
mov
jge
retf
fcomp
xchg
mov
scas
gs
les
xchg
pop
cwde
add
mov
(bad)
ins
inc
out
dec
fwait
cmp
or
jmp
mov
or
les
loopne
cmc
mov
in
les
gs
sahf
dec
and
mov
mov
je
arpl
sub
jnp
fidivr
(bad)
dec
popf
jp
xor
add
push
inc
div
push
imul
(bad)
sub
sbb
adc
repz
mov
xchg
jne
scas
mov
scas
xchg
pop
int
lea
or
mov
sub
push
push
xchg
in
mov
pop
jae
arpl
xchg
test
jecxz
push
sub
and
and
jge
ins
push
or
pop
and
icebp
xchg
add
jl
mov
lds
mov
jmp
in
leave
xchg
cmp
sahf
mov
fsub
out
(bad)
cli
jecxz
pop
add
inc
into
retf
out
mov
cmp
sbb
not
inc
sbb
(bad)
sti
push
cmc
sub
popa
ret
xor
sub
mov
cmps
push
adc
lods
adc
arpl
dec
imul
scas
(bad)
dec
stc
and
jne
fcom
jge
and
cmp
cli
iret
les
sbb
fucomi
pop
adc
ret
inc
pop
sub
jns
or
fst
sti
and
pop
nop
fisubr
push
es
ss
sub
repz
inc
inc
push
jno
cmc
pop
push
out
stos
mov
push
pop
test
int3
cld
or
popf
jmp
loop
jb
jle
mov
mov
xchg
adc
jmp
call
sbb
div
xor
mov
adc
cmp
dec
cmp
dec
xchg
loopne
sub
inc
push
cmp
test
mov
loop
aas
mov
inc
retf
pop
rcr
jg
repnz
adc
fs
jg
dec
outs
inc
adc
cmp
clc
stos
(bad)
or
push
xor
(bad)
mov
cdq
in
inc
iret
cld
mov
inc
jecxz
xor
adc
xchg
push
stos
or
jb
and
or
movs
in
cwde
addr16
pop
add
(bad)
in
add
dec
in
stos
ins
or
cld
jns
jae
pop
lock
cwde
repz
fstp
sti
mov
or
jnp
data16
inc
aaa
pop
jge
sbb
jno
les
ss
or
repz
(bad)
(bad)
shl
xlat
rep
stos
mov
iret
sbb
push
cmps
shl
add
lds
test
aaa
call
sub
pushf
xor
loopne
or
leave
sbb
mov
mov
dec
sti
sbb
mov
in
fiadd
imul
iret
loopne
push
retf
inc
aad
mul
push
sbb
jecxz
retf
fnstsw
cmp
and
or
mov
movs
inc
bound
clc
jb
inc
sbb
call
adc
mov
inc
in
shl
jmp
call
jge
movs
nop
mov
(bad)
and
sub
inc
js
sub
jmp
(bad)
xor
mov
test
(bad)
loopne
adc
lods
sar
std
inc
adc
aaa
cmps
inc
iret
in
sbb
mov
mov
daa
adc
aas
add
and
rcr
mov
rol
retf
pop
std
pop
and
nop
push
bound
call
(bad)
out
push
mov
je
or
call
(bad)
out
dec
mov
fimul
push
outs
xchg
js
(bad)
adc
xchg
pop
and
sub
bnd
in
hlt
cld
inc
and
retf
popf
mov
mov
pop
loopne
add
mov
aaa
jno
aaa
retf
jo
mov
inc
(bad)
retf
add
sub
xchg
mov
cmp
add
test
gs
movzx
dec
xlat
cmp
xor
pop
arpl
dec
retf
aam
sahf
cmp
jb
jne
out
(bad)
retf
sub
into
fs
or
jns
push
sbb
popa
dec
pushf
fnsave
adc
cmp
stc
popf
das
cmp
ins
je
test
sbb
adc
cmps
idiv
cdq
(bad)
mov
ror
mov
push
fistp
sahf
je
call
push
pop
cmp
lods
fist
cdq
imul
pinsrw
lock
dec
fs
call
call
mov
ror
dec
stos
js
pop
jbe
fisttp
into
xchg
mov
dec
mov
dec
dec
fidivr
pop
clc
mov
arpl
arpl
xchg
ss
aad
rcl
mov
bnd
mov
adc
adc
nop
jle
dec
imul
inc
xchg
in
xor
push
or
pop
test
mov
sub
rcl
jne
or
rol
xor
mov
rcl
fld
mov
fsubr
pop
shl
jmp
(bad)
xor
lahf
into
push
mov
xor
mov
and
push
lahf
ret
push
cwde
adc
push
lds
adc
or
ret
cmp
xor
adc
sar
aad
test
cmp
mov
jle
push
cmps
fdiv
mov
js
xchg
sub
jecxz
xchg
adc
frstor
int
retf
rcl
dec
adc
jl
add
rcl
(bad)
imul
xor
fsub
pop
lds
mov
psubq
rol
test
pop
add
adc
jno
dec
xchg
das
cmps
mov
pop
aam
jmp
mov
lods
pop
(bad)
jmp
inc
pop
and
xlat
mov
fbld
add
pop
pusha
aad
mov
ss
mov
add
(bad)
xchg
stos
fst
mov
inc
fsubr
dec
test
mov
push
in
mov
add
and
dec
cwde
jecxz
lock
xchg
je
mov
scas
aam
lods
cdq
or
(bad)
and
imul
iret
(bad)
cmp
xchg
sub
inc
into
inc
ins
into
mov
bound
dec
mov
scas
lock
nop
inc
icebp
add
dec
jg
lea
jmp
push
pop
dec
jle
mul
add
inc
mov
and
pop
int3
cmps
adc
xor
mov
xor
cs
clc
in
repz
sub
sbb
aam
sub
adc
xor
cwde
mov
pop
cmps
gs
mov
xchg
repz
mov
pushf
push
push
sbb
mov
int
and
push
aas
push
out
sub
(bad)
sti
je
js
ss
ret
push
xchg
add
daa
inc
mov
sub
pop
rol
aaa
cmps
outs
in
pop
adc
mov
mov
jecxz
sbb
adc
aas
aam
rcr
dec
cmp
mov
adc
scas
call
sti
mov
xor
jno
sbb
and
pusha
cmp
inc
xchg
arpl
mov
push
cmp
jno
rcl
push
mov
mov
(bad)
inc
mov
outs
pop
stos
and
mov
ins
pop
(bad)
jns
dec
ja
in
jmp
xchg
into
push
call
shl
xchg
inc
mov
pop
rol
jmp
cmp
fst
adc
cwde
sbb
sub
cmps
or
xor
mov
or
mov
and
or
adc
scas
cwde
adc
jo
xchg
jmp
sub
sbb
adc
cmp
scas
jne
mov
fs
dec
test
pop
mov
out
movs
mov
mov
adc
clc
jnp
ficom
lahf
ds
xchg
or
add
out
fsub
bound
add
xor
pop
iret
cmp
mov
ds
xor
sub
outs
mov
jno
inc
adc
cld
mov
cmp
mov
cdq
movs
push
xor
and
icebp
xchg
imul
adc
call
in
mov
rol
imul
lock
sti
cmp
adc
dec
cmc
sahf
int3
mov
jbe
cmp
imul
lahf
out
push
jecxz
int
pop
out
arpl
dec
outs
add
sub
and
shr
mov
in
xchg
mov
mov
in
add
test
cmp
sti
call
or
or
or
add
stos
jbe
or
mov
push
loope
inc
push
or
add
out
inc
xchg
mov
xchg
int3
popf
leave
cmp
push
cmp
loope
sar
repnz
imul
cld
sub
pop
dec
pop
les
retf
mov
dec
adc
loop
mov
stos
add
dec
jb
out
popa
sub
dec
scas
out
inc
jno
or
out
inc
dec
mov
mov
dec
bnd
arpl
test
xchg
xlat
call
pop
scas
jmp
jns
aas
or
jnp
mov
xchg
mov
int
mov
mov
pop
xor
push
mov
call
xchg
sbb
call
push
popa
imul
or
loope
xchg
movs
add
cmp
push
ja
mov
rol
xchg
dec
je
cs
mov
pop
popf
mov
dec
sahf
push
and
jno
aaa
test
out
jne
movs
in
mov
mov
test
std
cmp
daa
inc
inc
sbb
fs
push
mov
ret
pop
mov
mov
mov
lds
sti
dec
mov
les
aad
push
retf
fstp
jle
inc
and
pop
std
pushf
pop
xchg
or
das
sub
(bad)
int
les
cld
push
dec
jnp
stos
ret
sbb
xchg
jp
cli
arpl
iret
jmp
xchg
fcom
fs
mov
das
fidivr
inc
outs
cmps
ss
lods
std
inc
and
mov
jns
movs
xlat
fild
sti
movs
adc
mov
outs
into
xchg
add
fild
clc
pop
(bad)
sub
pop
dec
cmp
rcl
mov
ja
enter
ret
(bad)
dec
cmp
mov
retf
or
out
mov
or
retf
dec
push
inc
sbb
jle
adc
sbb
jmp
fisttp
sbb
fidivr
mov
jle
push
fldenv
out
and
or
xchg
les
(bad)
xchg
je
dec
xchg
inc
in
jb
jns
repz
mov
jecxz
leave
out
dec
sbb
nop
pop
add
leave
pop
pushf
push
cmp
cld
fstp
clc
iret
sbb
and
cmp
xchg
popa
jmp
cmc
and
jg
movs
add
mov
xchg
retf
cmp
pusha
pop
out
sub
cli
repnz
aad
mov
dec
pop
ror
inc
or
jo
cmp
inc
fcomp
dec
jns
lods
iret
inc
pop
sbb
xor
leave
or
jle
scas
xchg
cmp
xchg
push
loop
lock
test
shl
jne
mov
(bad)
adc
mov
push
lock
cdq
movs
mov
cs
xor
push
cmp
pop
inc
mov
outs
imul
in
jne
stos
out
pusha
mov
mov
dec
jne
test
and
call
(bad)
in
mov
cmp
sub
cwde
retf
xchg
cs
push
jle
push
fwait
or
out
xlat
test
bound
mov
ret
(bad)
jecxz
movs
popa
fisttp
add
shl
repnz
or
jnp
mov
mov
xchg
pop
jecxz
shld
add
push
push
push
pop
adc
jp
ror
jnp
or
sar
(bad)
adc
daa
mov
xchg
and
xchg
out
add
jl
pop
or
scas
jno
stc
aas
push
xchg
sbb
xchg
out
push
mov
(bad)
test
addr16
xchg
push
mov
scas
repnz
sbb
mov
add
push
call
es
mov
outs
(bad)
jo
and
inc
ja
mov
ret
xchg
sbb
mov
in
movs
ret
jne
ds
jo
push
ret
mov
xchg
loope
dec
mov
addr16
mov
jl
sub
icebp
add
or
test
pop
push
cmp
in
loope
(bad)
(bad)
jl
ror
jecxz
sub
mov
push
out
(bad)
fcomp
mov
jnp
dec
xor
fs
scas
sbb
int
lds
rcr
(bad)
adc
jl
and
xor
daa
xor
add
std
add
inc
inc
(bad)
shr
xchg
arpl
in
les
pop
jge
je
jl
dec
js
lods
jbe
pop
xchg
jmp
ret
dec
shl
dec
fwait
imul
clc
bound
test
cmp
lds
mov
pop
xor
adc
retf
and
cmp
xor
push
mov
retf
jle
aad
xchg
(bad)
lds
or
scas
mov
(bad)
mov
jp
rol
lods
mov
xor
xchg
add
neg
pop
test
jl
xchg
jle
imul
push
rol
popa
scas
sbb
bound
adc
xor
movs
sbb
inc
mul
sub
loopne
jmp
push
jmp
or
lahf
adc
stc
xchg
xor
fidiv
test
and
push
xchg
ss
shl
pop
push
mov
ret
call
scas
push
fist
shl
mov
nop
cmp
cmps
inc
inc
cmp
jmp
dec
sub
test
arpl
hlt
lea
push
icebp
cmp
and
sbb
ret
jmp
mov
jmp
sub
ds
jl
and
jno
mov
call
pop
push
sub
std
xor
mov
popf
es
nop
retf
xor
xchg
fisubr
cmp
rep
ret
in
shr
and
popf
cwde
dec
jp
sub
lahf
in
or
dec
shl
xchg
pop
aad
push
or
fxch
cdq
lea
add
mov
clc
sar
adc
cmp
call
sar
loope
mov
ficom
test
pop
sub
and
mov
(bad)
out
xchg
cmp
das
push
push
mov
mov
dec
aam
stc
add
es
fnstenv
pusha
jg
(bad)
dec
rol
pop
mov
push
cmp
xchg
sub
jnp
gs
cmp
dec
call
aaa
sbb
hlt
mul
hlt
movs
ja
push
sbb
xchg
js
cli
inc
mov
pop
push
fucomi
mov
mov
xlat
mov
sub
xor
icebp
mov
outs
fisttp
repz
dec
pop
xor
les
pop
pushf
or
inc
ss
js
sub
shl
push
xchg
dec
pusha
adc
xor
pop
cmp
stos
into
sbb
jnp
ret
popa
call
dec
adc
dec
fwait
rol
shr
mov
jns
jge
sbb
fdiv
mov
mov
cwde
mov
into
jae
jo
fsubr
cwde
jbe
nop
inc
movs
cmp
(bad)
xchg
imul
mov
fld
jb
adc
xchg
outs
sti
fadd
pop
and
push
jo
aad
bound
cdq
jge
ret
mov
push
add
and
std
sbb
sar
mov
(bad)
cld
push
inc
mov
dec
fdivp
or
inc
sahf
loopne
add
or
xor
cli
movs
stos
mov
jle
jmp
xlat
das
pushf
cld
inc
cmc
fidiv
iret
jmp
adc
pop
nop
or
ss
mov
hlt
jnp
jg
mov
mov
lds
jo
push
dec
jecxz
lds
aaa
gs
cld
lahf
(bad)
int3
int3
jno
xor
cli
je
push
hlt
jae
or
mov
retf
clc
mov
and
xchg
mov
movs
lea
movs
xlat
pop
(bad)
fucomip
adc
(bad)
(bad)
fiadd
sbb
ret
xor
sbb
inc
xchg
cmp
and
arpl
lock
test
je
jge
iret
jbe
scas
call
mov
xor
in
jle
pop
pop
dec
ins
jno
inc
add
jno
or
stos
inc
sbb
or
nop
pop
gs
sub
pusha
mov
cli
inc
into
mov
out
inc
sub
xchg
dec
cmc
push
sbb
dec
leave
add
stos
inc
in
add
loope
or
push
and
xlat
loop
dec
xor
std
xor
mov
push
pop
cmc
ret
jmp
aaa
ja
pop
sbb
cmps
mov
data16
mov
cdq
or
mov
sub
or
lods
arpl
mov
call
repz
push
in
loop
mov
push
ss
pop
movs
xchg
sbb
es
loope
adc
test
mov
(bad)
cmp
sub
sbb
ins
sti
push
push
mov
jmp
loop
cdq
jle
rcr
ja
cmovp
movs
sbb
mov
mov
sbb
cli
push
push
sbb
jb
sti
fwait
lds
div
xor
and
push
mov
mov
mov
cmps
outs
aaa
stos
jns
les
inc
jbe
jmp
(bad)
lea
lds
dec
lahf
std
or
push
jecxz
sub
cmps
fdivr
xor
dec
mov
add
sub
pop
and
mov
sub
loop
mov
aaa
stos
test
dec
or
dec
mov
in
add
cdq
aas
out
xchg
imul
mov
cmp
(bad)
push
sub
push
fdivr
push
jbe
sub
popf
out
mov
out
lahf
fdivr
fstp
inc
inc
mov
out
push
cmp
(bad)
imul
aad
std
xor
pop
cld
stos
pop
push
loopne
icebp
pushf
adc
push
xchg
leave
pop
mov
and
loop
dec
ja
or
stos
cmps
es
jl
lea
sbb
adc
add
dec
(bad)
xchg
xchg
sub
xchg
ss
and
ins
movs
xor
mov
ds
cmp
fist
adc
loopne
(bad)
push
xchg
xchg
fcom
movs
loope
mov
pop
out
xchg
jl
add
sbb
jne
jbe
jae
jmp
ja
inc
movs
add
ins
push
(bad)
data16
aam
push
mov
icebp
in
xchg
test
out
loope
or
out
push
push
data16
xchg
cmp
cld
repnz
jnp
cdq
test
pop
(bad)
fwait
(bad)
aad
jp
ror
out
xchg
movs
pop
adc
mov
cmps
add
(bad)
xchg
lods
sub
test
or
or
loopne
mov
xor
and
adc
cmp
loopne
addr16
cmp
mov
sbb
pop
out
pop
jo
test
adc
out
punpckhbw
sub
xor
nop
lock
push
test
mov
aas
xor
xlat
test
ror
outs
imul
and
iret
lds
enter
loop
movs
dec
jecxz
aaa
push
popf
ins
enter
call
adc
jge
jle
mov
repz
jb
enter
mov
push
cmp
push
int
loopne
scas
adc
(bad)
mov
dec
aad
inc
in
(bad)
adc
adc
setp
mov
lods
cs
stos
push
outs
mov
(bad)
mov
push
stos
cmp
clc
add
add
iret
jbe
aad
dec
or
mov
jge
jne
sbb
sub
lds
pop
mov
scas
(bad)
shr
sbb
sbb
fsub
inc
sahf
mov
xchg
aas
nop
pop
rcl
gs
xlat
pop
aam
test
enter
int3
adc
inc
mov
movs
clc
jne
(bad)
or
ret
add
repz
hlt
(bad)
mov
movs
sahf
aam
cdq
adc
xchg
xchg
add
xchg
(bad)
idiv
int3
dec
enter
pop
ins
push
sbb
pop
pop
fcomp
fld
and
dec
push
retf
loop
test
pushf
mov
mov
je
jmp
lods
xchg
bound
add
movs
jbe
hlt
repz
pushf
jns
sub
mov
and
dec
mov
jmp
or
retf
and
xchg
imul
pop
stc
jge
mov
retf
mov
mov
lods
mov
fistp
nop
outs
aad
xchg
dec
lods
ins
aad
jg
(bad)
mov
inc
pop
into
stos
fbld
jae
mov
mov
xchg
test
inc
in
mov
out
cmc
stos
paddd
aad
mov
pop
lock
mov
sub
scas
mov
mov
cmp
push
aad
cmp
dec
lods
rcr
adc
dec
cmp
cmc
movs
pop
repz
ret
ds
mov
mov
mov
push
xor
fld
scas
jb
out
mov
mov
xor
mov
xchg
xchg
scas
ror
mov
fidivr
add
push
adc
or
xchg
das
xor
int3
sub
enter
test
mov
out
jmp
xchg
lods
or
push
add
sbb
dec
cwde
iret
and
outs
fild
cli
and
fld
jne
and
mov
gs
in
jg
sub
int3
iret
in
mov
sbb
adc
shl
ss
xor
pop
nop
test
mov
pop
pushf
test
mov
pop
mov
dec
not
jle
out
test
push
pop
sbb
xor
je
cmp
pop
hlt
jne
ins
inc
hlt
push
mov
push
in
or
cmp
pop
xchg
adc
jle
out
adc
(bad)
xor
pop
scas
xor
adc
mov
mov
pop
pop
inc
adc
sub
inc
mov
and
mov
not
hlt
pop
jmp
cdq
or
(bad)
imul
enter
mov
xchg
retf
cld
into
in
mov
mov
and
push
repz
sbb
xor
dec
mov
or
mov
in
cmps
leave
in
rcr
and
lahf
xor
loope
pop
push
call
push
mov
arpl
pop
or
fisubr
test
dec
jb
data16
mov
adc
mov
add
shr
loopne
cmp
test
fcom
enter
(bad)
shr
mov
sahf
cli
fisttp
mov
or
mov
(bad)
out
dec
mov
push
retf
lods
ror
ins
pop
push
(bad)
std
mov
sbb
adc
or
jg
nop
push
jle
xchg
add
ss
stos
add
pop
mov
gs
xchg
mov
xchg
lea
mov
lea
scas
jl
xchg
mov
rcr
rol
dec
jcxz
and
jnp
add
pop
and
aam
pop
dec
mov
loop
xor
outs
js
xchg
jmp
gs
sar
mov
mov
add
mov
mov
push
stc
push
loop
cmp
pop
out
test
or
in
push
and
iret
pop
push
scas
out
add
outs
or
in
dec
lds
xor
cmp
shl
jbe
call
movs
sub
(bad)
out
fist
mov
pop
rol
call
jno
pop
push
sbb
mov
mov
xlat
or
adc
sbb
test
and
jmp
jb
jg
or
jae
push
shl
loop
fwait
rcl
es
dec
xchg
call
cmp
lock
repz
test
stos
xlat
clc
add
or
lea
lahf
or
or
in
dec
fdiv
and
outs
adc
sub
and
xchg
pop
cmp
fs
cwde
stc
in
imul
lea
jbe
arpl
push
add
int
and
inc
mov
xor
lahf
cmps
cmp
std
cwde
popf
fsubr
pop
daa
pop
test
xchg
rcl
xchg
mov
add
into
enter
sahf
cmp
pop
arpl
in
loopne
daa
and
pop
or
mov
push
xchg
mov
(bad)
ror
cmp
sti
sub
push
int3
push
add
retf
cmp
pushf
jns
imul
xor
aaa
jp
movq
pop
jg
xor
test
ficom
ins
xchg
ror
mov
sbb
xor
push
icebp
call
dec
pop
dec
fstp
cli
pop
cwde
in
pop
pusha
adc
jo
std
pop
ret
pop
ror
xor
sbb
sbb
retf
loop
fidiv
push
dec
dec
inc
mov
out
jo
retf
xor
dec
mov
into
les
lock
xor
cmp
xor
mov
imul
and
jg
mov
fnstsw
ret
call
pop
jl
mov
imul
repz
lods
faddp
fldcw
adc
mov
or
or
popa
stos
xchg
add
mov
xor
mov
je
call
dec
sbb
es
mov
add
popf
(bad)
add
cli
aad
imul
pop
in
adc
push
popa
addr16
loopne
iret
jp
push
arpl
xor
fwait
mov
lods
and
inc
pop
leave
dec
pusha
gs
dec
sub
cmp
fld
dec
pop
inc
clc
iret
sahf
retf
gs
dec
push
in
arpl
dec
mov
sti
sbb
xlat
sahf
fisub
xchg
sbb
fisttp
pop
test
mov
pop
add
jmp
loop
adc
sub
and
pusha
aaa
scas
fidivr
mov
ss
or
mov
push
pop
lea
jmp
xor
pop
lods
jmp
ins
lods
mov
repz
ins
pusha
dec
mov
mov
xor
pushf
sbb
(bad)
jp
adc
ins
add
aas
pop
imul
retf
push
retf
dec
jnp
push
sbb
mov
(bad)
fld
adc
jl
daa
xchg
outs
repz
daa
sub
or
xchg
ret
inc
loope
or
cmp
sub
push
test
mov
fsubr
push
and
adc
icebp
arpl
cmp
xor
frstor
scas
sbb
push
dec
sbb
lahf
or
jb
jbe
dec
aad
and
repz
or
clc
cli
ret
dec
jae
cli
das
(bad)
fld
ret
mov
dec
retf
add
iret
js
add
mov
dec
shl
je
aam
mov
(bad)
mov
mov
out
and
mov
or
jge
(bad)
shl
repnz
cmp
stc
ret
mov
repz
push
in
(bad)
out
cdq
je
and
inc
and
stos
fnsave
sub
aas
imul
jo
lods
mov
mov
sub
and
jmp
daa
(bad)
jb
fimul
xchg
xchg
xor
sbb
push
jne
add
popa
out
test
call
and
stos
xchg
lock
aad
sti
icebp
or
jle
mov
lea
xlat
out
sub
ja
in
lds
cli
mov
loopne
or
ins
xchg
sbb
xchg
sub
icebp
es
pop
scas
aaa
cmps
out
jecxz
dec
sbb
mov
in
es
mov
or
inc
sub
inc
mov
scas
sbb
sub
out
cwde
scas
and
and
repz
stos
addr16
mov
push
inc
fdivrp
daa
push
jno
mov
cmp
and
mov
in
out
scas
mov
ds
xor
inc
sub
mov
ins
retf
test
mov
sub
jp
aad
cmp
jo
ds
ficomp
not
loop
xor
jne
xor
xchg
pop
shr
pop
fnsave
stc
jnp
xchg
sar
inc
mov
cwde
out
iret
int3
mov
loopne
enter
aas
sbb
inc
sbb
jl
dec
pop
jns
mov
into
shl
scas
xor
mov
xlat
ins
dec
cmps
(bad)
fistp
xor
ret
in
jmp
push
xor
pushf
aas
cld
xor
or
jmp
loop
dec
daa
call
dec
fst
push
cwde
jl
inc
mov
pop
mov
fisubr
or
xor
jge
push
out
cs
jno
mov
je
stc
xchg
scas
inc
test
mov
push
and
jb
(bad)
cmp
movs
pop
popa
shl
mov
imul
cdq
ret
mov
and
add
mov
repnz
frstor
push
or
jno
inc
add
jp
test
retf
adc
push
pop
rcr
adc
jmp
pop
movs
mov
fisubr
lock
jmp
iret
cwde
es
or
jle
pushf
out
xchg
push
push
mov
mov
hlt
fistp
dec
push
inc
mov
or
fdivr
pop
movs
gs
(bad)
inc
movs
inc
mov
pop
std
sub
xchg
add
xchg
xchg
jnp
lahf
ror
pop
popf
cli
sub
in
ins
mov
adc
add
(bad)
push
adc
fdiv
fisub
mov
(bad)
dec
jle
inc
sub
adc
xor
inc
cdq
cli
cmp
cmp
stos
stc
retf
sar
fwait
int
nop
pop
mov
pop
cmp
out
push
scas
nop
mov
pop
aaa
movs
xchg
inc
pop
push
jg
jp
imul
cmp
jne
fstp
int3
leave
mov
shl
aas
stos
inc
pop
loope
mov
movs
std
mov
jb
lahf
stos
add
or
mul
js
push
push
jge
pop
jmp
xor
adc
mov
(bad)
mov
into
sub
inc
in
jle
(bad)
sub
jmp
cmc
ins
adc
push
retf
dec
rcl
pop
fnsave
jae
push
mov
(bad)
mov
jnp
fld
push
sbb
xor
dec
jbe
fild
inc
ret
push
adc
fwait
push
sti
xchg
pushf
ret
pcmpgtd
fwait
aaa
pusha
xor
push
mov
xchg
add
pusha
xor
add
mov
leave
inc
adc
add
fs
mov
mov
sahf
retf
stc
dec
xor
sub
xor
mov
mov
pop
je
jecxz
call
mov
lock
lock
jnp
mov
jmp
not
xchg
sub
mov
mov
dec
pop
adc
(bad)
mov
mov
xchg
js
cmp
jg
mov
or
push
sahf
loopne
out
stos
jmp
sbb
fcom
adc
cmp
jecxz
push
shr
bound
in
arpl
test
enter
sub
push
rcl
push
fdiv
dec
mov
dec
out
fwait
cmps
out
xor
enter
rcl
sahf
sbb
cmp
sub
dec
retf
jmp
test
pusha
or
in
xor
adc
scas
and
mov
cmp
mov
xor
out
pop
or
mov
jns
xor
out
ds
mov
jnp
bound
pop
xchg
or
mov
clc
mov
out
mov
scas
push
mov
ds
les
jmp
jle
adc
inc
mov
sbb
fwait
and
jne
xchg
fisttp
js
jle
cmp
lods
mov
in
push
out
jmp
xchg
pop
sbb
in
push
add
xchg
lods
fldcw
in
test
jne
cmps
jecxz
or
mov
sbb
mov
mov
jnp
(bad)
enter
mov
ins
mov
push
inc
bnd
jmp
fadd
push
xor
(bad)
cmc
sti
push
fstp
dec
outs
adc
lahf
(bad)
addr16
add
cwde
adc
cmc
movs
jb
mov
(bad)
stc
and
inc
ds
adc
movs
ja
into
jl
sahf
cmc
cdq
sahf
stc
nop
mov
fst
in
icebp
outs
adc
daa
xchg
rcr
cdq
pop
stc
mov
jmp
enter
out
movs
scas
pop
jge
add
mov
mov
ds
jle
mov
and
les
jp
test
rcr
daa
adc
scas
mov
push
mov
jnp
and
xor
call
inc
pop
nop
sbb
lock
(bad)
(bad)
mov
or
dec
mov
and
pop
pop
fist
adc
and
cld
mov
or
(bad)
repz
xchg
and
(bad)
lock
(bad)
and
mov
adc
add
sbb
imul
rcr
mov
popa
scas
and
jo
or
scas
test
lods
pop
pusha
outs
outs
(bad)
cmp
mov
in
shl
xor
cmps
sub
sub
rcl
xor
(bad)
data16
jnp
je
bound
shl
mov
cdq
shl
test
jecxz
xchg
cld
xchg
clc
leave
pop
scas
add
xlat
push
out
loope
call
adc
push
bound
mov
mov
fld
dec
(bad)
fcomp
shr
push
add
sbb
test
test
aaa
or
daa
adc
sub
stc
and
push
push
mov
popa
push
jb
jne
in
xor
xchg
jbe
jp
hlt
(bad)
cdq
ror
xor
sub
ror
inc
jbe
shl
push
mov
dec
rcr
jae
jae
adc
stc
test
(bad)
shr
mov
ret
add
not
sahf
lock
fs
idiv
cmp
push
or
cmovge
adc
dec
cmp
je
nop
jae
lock
je
cs
xchg
(bad)
aaa
push
jmp
jg
cmps
pop
(bad)
fs
cs
add
mov
movs
pop
fst
pop
dec
pusha
sub
push
inc
retf
(bad)
mov
test
pop
movs
leave
dec
stos
sub
scas
daa
inc
leave
cmps
pop
dec
cwde
mov
fucom
pop
cdq
imul
and
retf
and
bound
stos
(bad)
sub
jae
inc
shl
mov
dec
cli
rol
mov
ror
cmps
out
rcl
pop
jb
jp
push
xor
fstp
push
movs
inc
lahf
xchg
push
ins
inc
pop
push
jb
xchg
xchg
add
ds
outs
and
add
push
out
lea
adc
call
jb
jnp
sub
mov
stc
inc
fidiv
dec
jmp
test
cmc
inc
inc
ins
je
mov
mov
sub
jmp
dec
add
push
aaa
jns
iret
lds
out
pop
neg
fsubr
push
js
sub
lods
shl
mov
and
lea
cmp
cld
movs
scas
call
xor
adc
sub
add
xchg
out
movs
jle
lahf
cwde
(bad)
sub
or
mov
xor
sub
xor
pusha
orps
cld
rol
rol
(bad)
pop
loopne
mov
jo
mov
arpl
and
cwde
mov
pop
sub
in
icebp
pop
mov
and
xchg
cli
xor
jb
in
jge
ins
pop
shl
or
and
popa
enter
mov
xor
mov
fst
cmp
mov
stos
lahf
dec
gs
or
mov
sti
pusha
mov
into
sub
push
cmp
cdq
test
fdiv
sbb
add
dec
mov
xor
out
pop
pop
push
add
scas
and
jge
fs
push
sub
sbb
sbb
sbb
mov
jl
and
addr16
cmps
in
add
sub
loopne
int3
iret
out
dec
out
js
fwait
or
lods
mov
jg
movs
cmc
push
mov
xchg
or
add
pop
push
or
xchg
and
sbb
fwait
neg
imul
in
mov
out
in
dec
mov
dec
sub
sbb
test
inc
xor
loope
lea
mov
xchg
push
jmp
jae
pop
ror
arpl
add
xchg
rdmsr
mov
and
pushf
jo
ds
jmp
leave
xchg
fst
xor
(bad)
outs
enter
add
sub
shl
xchg
out
jecxz
adc
ror
jne
inc
sahf
mov
sbb
inc
sub
jb
xchg
enter
xchg
sbb
fistp
jp
call
test
xor
pop
adc
cmp
sbb
jbe
or
sahf
lahf
mov
add
ficom
mov
push
(bad)
aaa
rol
aad
div
mov
or
js
in
stos
adc
movs
cmp
sub
stos
rcl
xlat
int3
nop
pusha
add
add
cmp
imul
ins
xor
test
int
movs
and
test
jno
cmp
xchg
sbb
dec
mov
cli
mov
and
dec
(bad)
mov
dec
push
inc
popf
retf
push
or
loope
add
stos
sbb
sbb
add
ins
(bad)
nop
lds
and
push
push
cdq
or
out
out
sub
pop
dec
push
mov
pushf
mov
bound
and
sar
test
popa
sub
je
fwait
mov
dec
retf
and
jno
adc
dec
aad
mov
arpl
cmp
and
mov
pop
dec
or
xor
adc
xor
inc
sbb
inc
and
and
jbe
je
or
stos
xchg
inc
shl
and
sahf
frstor
not
inc
fprem
imul
and
cmp
xlat
add
jo
inc
shl
mov
sub
mov
or
fcomip
test
jae
inc
je
mov
push
xchg
cdq
and
pop
jecxz
pop
test
out
mov
cli
push
adc
not
sahf
push
inc
pushf
fwait
mov
xor
lea
mov
push
mov
add
jne
pop
retf
xchg
xchg
fs
or
sub
loop
arpl
xchg
push
aaa
inc
xor
mov
push
jae
int3
mov
adc
xchg
push
jp
xor
sub
xchg
clc
stos
fstp
stos
iret
shl
jge
mov
arpl
push
test
jp
cwde
loop
sbb
and
and
or
loop
cdq
out
dec
stc
push
rcl
and
push
sbb
mov
adc
mov
scas
les
sahf
mov
push
ins
cwde
jbe
fs
rol
lds
push
dec
es
jae
xchg
fisub
out
push
jg
lods
sub
(bad)
push
leave
push
aam
int3
cmp
push
cdq
mov
ds
sti
or
repz
dec
movs
int3
out
dec
jns
adc
push
pop
lods
mov
cmp
dec
inc
dec
(bad)
cmps
mov
shl
ror
aaa
lahf
and
push
sub
fsubr
xchg
xchg
xor
iret
outs
mov
test
sahf
cmp
test
mov
adc
pusha
cmp
fldcw
iret
sub
add
sub
or
mov
pop
icebp
dec
and
push
mov
push
adc
inc
aas
pushf
cmp
mov
push
sub
aad
xor
into
loope
jns
pusha
out
cmc
pusha
add
lock
sti
sub
enter
ret
dec
ja
push
dec
cdq
aaa
mov
pushw
mov
loop
push
adc
pop
sub
xor
or
jns
or
mov
les
sar
pushf
mov
mov
movs
cmp
retf
dec
xchg
fnsave
mov
push
or
cdq
cs
movs
pop
sbb
(bad)
lea
scas
mov
lods
lods
daa
ss
aam
sbb
lods
mov
mov
inc
jle
push
mov
mov
cmps
nop
inc
sub
dec
cmp
or
imul
or
push
ins
or
mov
hlt
dec
jge
(bad)
pushf
add
loope
mov
sub
or
ret
imul
cmps
(bad)
in
or
dec
cmp
inc
fnsave
mov
lock
xor
stc
fs
mov
xlat
adc
cmps
push
pop
cwde
jle
jge
(bad)
mov
call
je
add
pop
add
ss
pop
ror
fs
shl
jnp
mov
jns
or
ins
sbb
sahf
push
aaa
xchg
fwait
sub
aaa
cmc
loop
push
pop
and
shl
fwait
dec
xor
lods
push
sbb
xor
cld
ss
mov
(bad)
mov
sub
inc
mov
pop
xchg
(bad)
push
pop
jne
out
jno
out
js
mov
fs
or
push
xchg
jne
test
xlat
dec
sub
push
add
nop
xor
dec
scas
outs
call
fmul
fdiv
add
ss
adc
push
in
(bad)
int
dec
scas
pop
loop
das
xor
stc
adc
ficomp
not
push
jl
or
adc
pusha
jmp
lods
in
pop
ds
ja
cmps
inc
mov
pusha
push
sar
pushf
xchg
xor
popw
call
outs
add
adc
push
inc
sti
mov
adc
sub
test
xchg
stos
lds
das
cmp
(bad)
movzx
test
sbb
stos
stos
jmp
movs
sub
inc
fwait
and
cmp
dec
retf
rol
imul
mov
mov
les
inc
repnz
std
dec
jne
push
mov
ins
sub
out
and
and
loop
mov
out
je
outs
or
push
push
dec
fcom
fld
or
repz
jo
dec
mov
(bad)
in
jmp
cmc
jmp
and
push
cmp
mov
lock
jge
fidiv
js
xor
imul
sub
mov
cld
lea
cdq
outs
mov
fsub
jl
daa
adc
xlat
pop
ss
push
and
sbb
mov
jns
mov
sti
xchg
or
scas
push
dec
mov
retf
out
inc
out
out
push
mov
dec
(bad)
(bad)
je
push
ror
mov
mov
test
inc
xor
cld
pop
fsubr
aam
fnstenv
in
jmp
jb
jle
ds
dec
fisttp
cmp
pop
dec
ficomp
mov
pop
je
cmp
loope
mov
xchg
push
sar
push
(bad)
icebp
xor
into
mov
pop
fidivr
mov
jg
xchg
pop
xchg
stc
add
(bad)
and
loop
loope
jns
jle
dec
sti
sbb
and
dec
mov
shl
and
in
adc
mov
pop
call
shl
or
mov
mov
add
sbb
scas
and
jns
adc
outs
pusha
fcom
or
(bad)
loope
add
(bad)
push
hlt
mov
out
pop
xchg
mov
shr
test
cmp
lds
in
out
mov
mov
test
nop
xor
dec
push
rcl
xchg
iret
jecxz
xor
push
push
adc
popf
push
xchg
mov
cmp
add
js
aaa
sub
bound
stos
dec
stos
stos
scas
sbb
imul
sub
sbb
aaa
adc
out
out
xchg
in
xchg
cmps
cmp
mov
pop
push
mov
xchg
mov
inc
pop
test
xchg
adc
popf
in
mov
cdq
addr16
es
adc
sub
test
ins
inc
dec
stos
adc
das
mov
push
jns
test
in
adc
call
or
mov
push
test
div
retf
dec
ins
stos
dec
into
loope
in
sbb
mov
iret
mov
mov
loop
sbb
loopne
mov
fcom
gs
rcr
leave
cmp
xor
add
dec
jnp
test
push
in
mov
imul
pop
or
retf
cmc
ss
loopne
cmp
retf
sub
ds
js
inc
push
pop
movs
jg
mov
inc
cmp
push
jp
sub
inc
sub
add
and
popf
iret
sub
mov
aad
xor
loopne
inc
stos
mov
adc
iret
and
bound
pop
into
icebp
stos
mov
dec
aas
sub
inc
inc
out
push
leave
ds
in
lahf
repnz
imul
adc
cwde
xor
sub
add
rcl
dec
add
push
cld
cwde
test
xor
add
js
add
cld
sar
or
cmp
into
pop
dec
int
or
into
lock
jo
sub
push
jg
mov
jo
mov
fld
sbb
test
and
sar
adc
fstp
js
iret
enter
cmps
xor
jae
jp
gs
in
or
or
sub
inc
pusha
pop
stos
jns
or
les
in
adc
aas
mov
test
lahf
sti
rol
loope
or
aad
mov
in
neg
push
stos
jmp
mov
sti
test
ret
stos
xchg
or
leave
push
call
loop
sti
jle
fidivr
rcr
arpl
sub
mov
shl
push
jmp
(bad)
pop
mov
rcr
push
inc
lock
push
iret
je
inc
and
xchg
or
int
int3
ret
jno
shl
arpl
inc
mov
or
sti
ja
jp
xor
les
fild
inc
loope
add
ds
out
bound
retf
call
mov
dec
(bad)
mov
dec
xor
pushf
js
mov
(bad)
int
or
jge
gs
call
mov
pop
xchg
sbb
sbb
mov
test
xor
mov
mov
jecxz
fwait
lahf
sub
imul
fs
pop
lds
and
std
adc
cmp
inc
sbb
iret
ins
or
mov
lahf
loop
in
cmps
enter
push
arpl
jg
dec
cmp
inc
out
inc
lea
cs
mov
loop
mov
push
xor
sub
and
loopne
ficom
arpl
in
aad
push
mov
loope
fmul
or
aaa
push
or
and
dec
pop
or
jne
mov
leave
inc
stc
cmp
call
cmp
inc
shl
rcl
out
test
add
movs
jle
and
sub
and
dec
cmp
rcl
pop
xchg
in
xchg
add
cs
test
(bad)
mov
adc
rol
clc
push
mov
add
add
lahf
add
mov
or
adc
xchg
xor
ror
mov
xor
aad
mov
test
arpl
int
dec
inc
leave
inc
movs
pop
imul
and
sar
js
mov
jg
push
shl
shl
sbb
retf
fist
retf
addr16
data16
adc
mov
(bad)
jmp
in
sbb
into
xchg
inc
icebp
icebp
mul
test
test
sbb
mov
ficom
aaa
adc
stc
xor
loop
inc
icebp
sbb
mov
lahf
mov
test
call
nop
sar
sub
jnp
add
push
adc
std
push
fisub
jbe
out
and
adc
mov
xchg
or
aas
adc
push
fsubr
cmp
aas
and
sub
in
imul
jae
push
fwait
std
outs
mov
mov
sar
leave
mov
fcos
pop
sbb
nop
pop
int
jne
test
inc
mov
pop
push
pop
inc
stos
mov
lods
neg
sbb
aaa
pop
loopne
shl
inc
pop
out
fucom
xchg
pop
fcmovu
sub
(bad)
cmp
sub
xchg
mov
and
jmp
in
aaa
sub
cs
dec
addr16
out
in
lods
dec
in
jno
pusha
jmp
in
ror
mov
sbb
out
or
jmp
out
int3
les
pop
aam
add
lock
loope
pop
ins
retf
shr
pop
call
inc
adc
icebp
push
movs
jb
out
pop
or
jl
mov
mov
(bad)
test
ss
pextrw
sar
or
out
int3
mov
stos
scas
sahf
inc
in
lahf
jno
mov
imul
imul
mov
sahf
inc
scas
sahf
xor
adc
ins
fwait
cld
pop
jecxz
add
les
call
shl
xor
bound
or
inc
jp
loope
test
adc
pushf
jmp
mov
mov
lahf
es
pop
or
jns
inc
sbb
inc
push
jns
or
fcmovnb
call
jmp
imul
inc
jg
mov
push
int3
pushf
dec
xchg
idiv
ja
xchg
xlat
lds
jmp
mov
push
and
in
xchg
cmp
rcl
dec
adc
movs
mov
xchg
not
and
mov
dec
push
sub
fcomp
dec
(bad)
shr
mov
out
test
pop
mov
jmp
(bad)
cmc
mov
mov
push
fdivr
cmp
ds
adc
je
adc
xchg
pop
out
dec
pop
popf
mov
fs
jmp
stc
test
push
add
and
pop
adc
fist
jmp
sbb
cli
setno
loope
int
push
or
les
bound
dec
mov
xlat
add
mov
inc
fistp
sub
mov
mov
dec
cld
pop
add
mov
mov
out
add
xchg
add
pop
xchg
daa
mov
sbb
inc
repz
and
push
mov
add
in
xchg
fwait
cmp
jae
mov
clc
fild
cmp
sbb
and
ins
sbb
and
xchg
sbb
ror
and
cmp
mov
push
fadd
hlt
pop
sar
movs
std
mov
fld
shl
aam
fsub
fbstp
inc
sbb
aas
mov
loopne
sub
inc
in
or
mov
add
jb
outs
daa
call
pop
push
(bad)
scas
cld
xor
test
out
scas
popa
xor
mov
cmp
sub
push
xor
mov
dec
shl
mov
mov
imul
enter
adc
sahf
xchg
in
mov
(bad)
jmp
test
sar
nop
pop
sub
fisubr
in
lods
mov
push
and
das
pop
sti
clc
sbb
jge
xor
mov
data16
add
fmul
push
fwait
xor
fist
add
shr
inc
mov
push
int
movs
mov
mov
int3
clc
adc
adc
in
in
dec
shl
in
sbb
xor
and
xchg
jge
push
xchg
adc
mov
out
ror
popf
scas
dec
push
push
mov
inc
mov
sbb
sbb
int3
cmp
sti
and
inc
test
push
leave
daa
sbb
push
fs
stc
jno
rol
xchg
sbb
into
mov
mov
scas
imul
aam
rcr
adc
out
stos
pop
out
dec
xchg
fld
movs
and
xor
retf
jo
push
fcmovu
mov
xchg
and
mov
fistp
jmp
xor
xchg
mov
mov
or
cmc
pop
sub
popa
pop
sbb
mov
(bad)
mov
inc
scas
ret
xchg
cmp
pop
push
or
das
les
in
xor
out
jns
or
pushf
repz
add
push
aad
jl
mov
outs
adc
arpl
lock
lods
xchg
mov
in
add
mov
movs
or
xchg
gs
mov
or
dec
aas
and
inc
jb
popa
sbb
or
imul
pmaddwd
dec
mov
adc
call
cmp
inc
jg
or
xchg
cli
sub
xchg
imul
inc
inc
loope
je
or
sub
pop
retf
out
mov
cdq
movs
adc
dec
pop
je
push
shl
xor
dec
call
les
pop
ret
mov
sar
push
(bad)
or
jae
hlt
aas
dec
mov
test
inc
sub
push
jg
mov
adc
test
rcr
push
test
or
shr
call
cmp
jle
sub
add
xor
stos
popf
(bad)
pop
push
mov
jl
add
dec
dec
fimul
ss
jge
lods
shl
lea
inc
dec
imul
ins
lea
lds
mov
inc
cmp
jp
aas
add
xor
dec
pop
pop
pop
dec
seta
jecxz
mov
mov
sbb
push
fistp
and
sub
aad
dec
xchg
adc
test
loopne
retf
into
cmp
cld
cdq
fdiv
mov
loope
adc
jo
xor
mov
loope
add
pop
mov
pop
loopne
js
adc
bound
cld
push
out
sbb
cmps
or
sbb
in
cmp
mov
dec
inc
sbb
cmp
fimul
ja
or
dec
and
mov
add
inc
push
jnp
push
(bad)
mov
push
dec
cmps
into
pop
or
dec
sbb
test
loop
popa
mov
sbb
clc
jl
(bad)
xor
out
aas
in
test
es
ja
shr
or
jmp
bound
cmp
clc
mov
ds
pop
mov
xor
pop
in
lahf
in
sub
ss
fnstsw
dec
xchg
or
or
sbb
in
cmp
mov
sbb
jecxz
dec
adc
out
sbb
cwde
lds
lea
stc
push
ds
dec
repnz
jo
sub
adc
imul
mov
push
mul
dec
pop
std
bound
js
movs
(bad)
(bad)
and
mov
icebp
scas
(bad)
(bad)
lds
pop
push
or
inc
jecxz
xor
mov
in
push
in
dec
hlt
xor
cmp
pop
(bad)
jnp
int
dec
adc
lea
stos
cmp
int
and
sub
jecxz
jbe
jg
dec
dec
stos
lahf
adc
in
loop
jnp
imul
es
std
js
popf
push
sbb
lock
clc
inc
lods
sbb
test
and
add
out
jbe
cmps
cli
pop
scas
push
out
xor
cmp
test
mov
pop
retf
sar
mov
dec
inc
fstp
stc
or
xchg
mov
out
movs
das
sbb
aam
(bad)
jmp
pusha
xchg
add
inc
(bad)
in
mov
push
xchg
cmps
mov
xchg
call
lea
pop
pushf
jle
addr16
fwait
ins
pop
push
pop
fcmovbe
cmp
lea
aam
fidivr
cwde
lea
fcmovne
mov
or
daa
mov
cdq
movs
fnstenv
mov
add
enter
test
xchg
sub
push
or
daa
cdq
scas
iret
sbb
add
dec
jbe
sbb
movs
xor
or
xchg
enter
add
mov
add
loopne
fdivp
dec
mov
mov
sbb
out
push
in
and
mov
fidiv
mov
stc
aad
imul
ins
mov
lods
les
mov
push
stos
pop
or
in
shl
jl
mov
or
adc
xchg
adc
mov
xor
mov
pop
(bad)
cmp
in
xor
or
jae
or
adc
jns
adc
inc
in
int3
sbb
sti
pop
and
mov
inc
aam
cmp
push
stos
adc
and
ret
cli
dec
or
mov
add
ins
call
pushf
inc
movs
in
call
sbb
jmp
mov
shr
xor
push
retf
mov
inc
data16
mov
push
adc
jle
mov
mov
add
xlat
cdq
xchg
pop
(bad)
jnp
mov
push
test
mov
je
not
cmc
ror
ror
xor
cmc
jne
aaa
mov
(bad)
mov
je
xor
xor
mov
aaa
adc
pushf
arpl
fidivr
jmp
mov
nop
(bad)
test
out
scas
push
adc
cld
adc
mov
mov
in
test
das
rcr
test
adc
retf
dec
divps
jns
inc
pop
mul
int3
push
xor
sar
pusha
jg
(bad)
jno
sar
mov
das
inc
sub
mov
xor
stos
cmps
mov
cmps
sbb
(bad)
jb
imul
jae
push
inc
(bad)
sbb
sahf
iret
sub
clc
and
mov
jbe
(bad)
and
test
adc
adc
mov
pop
dec
mov
mov
jp
jle
mov
(bad)
neg
cmp
or
dec
xlat
pop
mov
xchg
in
xor
sbb
lahf
jge
dec
div
cld
cmc
mov
sub
jecxz
hlt
gs
cmps
xchg
xchg
add
adc
js
jle
addr16
neg
inc
dec
out
pop
add
scas
outs
mov
cmp
js
jmp
push
repnz
mov
cmps
cmp
ss
out
mov
mov
dec
add
adc
jbe
in
test
mov
not
ror
loope
cmps
sbb
mov
aaa
inc
stos
popf
je
xchg
sub
out
fwait
mov
leave
mov
fst
mov
adc
iret
mov
leave
inc
ja
sub
lea
(bad)
je
dec
or
hlt
push
loop
cmps
xchg
test
inc
rol
inc
cmp
jae
jecxz
xchg
adc
adc
cs
iret
pusha
add
in
dec
leave
xor
jge
xchg
arpl
sub
adc
mov
dec
ret
adc
lods
dec
fisttp
bound
xchg
fiadd
(bad)
gs
push
aam
or
inc
cmps
or
jmp
outs
mov
cmp
jne
lahf
adc
mov
scas
mov
or
stos
mov
pop
dec
leave
pop
jle
push
outs
aad
and
xor
(bad)
jle
jo
out
gs
aam
(bad)
nop
lea
push
jecxz
inc
pop
test
or
sahf
push
dec
fdivr
add
cmp
das
jle
mov
push
fisub
cmp
fcomp
cmps
cmps
lods
jae
mov
mov
test
and
xor
data16
aaa
sbb
sar
xor
or
ins
(bad)
loop
xor
xchg
mov
mov
mov
inc
or
jno
out
es
jp
out
push
mov
stos
mov
inc
sub
mov
add
ss
(bad)
mov
dec
xor
xor
pop
lahf
mov
shl
cwde
sbb
dec
jg
nop
adc
sub
cmc
jle
outs
popa
pop
jl
fnstsw
dec
adc
push
ror
mov
xchg
fsubr
mov
cld
jecxz
pop
dec
fisttp
sbb
(bad)
cmc
(bad)
je
add
fcmovne
jp
adc
adc
xchg
pop
std
test
fidiv
xor
sti
int
pop
inc
jnp
push
xchg
nop
cmp
out
sbb
mov
inc
dec
aam
push
cli
mov
jmp
dec
pop
(bad)
jae
leave
mov
cs
jns
mov
dec
sub
dec
cli
jns
inc
dec
jae
mov
outs
xor
movs
idiv
pushf
mov
or
sub
and
mov
sub
shr
mov
xor
aam
movs
xchg
xchg
out
enter
hlt
test
repnz
xor
dec
or
(bad)
test
push
outs
xchg
sbb
xchg
in
or
dec
sub
push
fild
sti
mov
cdq
pop
jecxz
pop
stos
popa
adc
mov
repnz
fbstp
cld
stos
into
jp
stos
push
jle
mov
cli
push
test
(bad)
pusha
push
es
cmc
or
inc
mov
push
mov
jp
pop
das
sbb
sub
test
mov
int
pop
sti
mov
mov
add
and
sub
sbb
jns
ret
and
cld
mov
in
ss
and
push
and
mov
imul
mov
iret
mov
(bad)
jb
xor
test
scas
xchg
mov
push
fwait
bound
stos
dec
into
jbe
xor
sbb
cdq
jnp
outs
cmp
xor
adc
shl
(bad)
into
cmp
fcmovne
stos
push
mov
or
cmp
mov
std
das
in
jecxz
shr
in
call
or
scas
jbe
out
inc
ret
inc
sahf
sub
xor
rcr
sbb
ja
dec
(bad)
push
mov
loope
ss
out
add
jge
retf
xor
mov
or
jecxz
and
(bad)
in
jno
xchg
or
adc
dec
pop
ficom
mov
jb
pushf
pop
mov
clc
push
jb
in
xor
jmp
jno
sbb
xchg
nop
sbb
mov
jns
imul
pop
ret
xor
mov
cmp
sbb
adc
jp
loop
xchg
(bad)
lods
xor
and
cmps
and
jp
mov
ret
cs
das
inc
push
pusha
adc
xor
and
imul
push
adc
mov
enter
fldln2
sbb
daa
inc
out
cmp
jmp
or
dec
cdq
jo
(bad)
or
je
sti
xchg
cdq
or
push
movs
inc
jl
stos
or
pmullw
push
adc
lods
xchg
mov
pusha
retf
push
adc
and
mov
xchg
dec
add
retf
jp
add
icebp
mov
std
sub
mov
daa
mov
pop
jo
push
mov
and
pop
mov
bound
dec
add
call
sti
sub
and
rol
pop
shl
inc
and
test
ja
mov
or
mov
(bad)
fidivr
test
fld
or
out
out
ins
mov
pop
push
pop
stos
xchg
cmps
loope
mov
imul
mov
mov
jp
pop
jb
cmp
jp
and
push
xor
jno
fstp
aaa
out
pop
mov
cmp
cmp
int
add
nop
inc
(bad)
jmp
add
out
mov
sub
cmp
movs
push
jg
outs
gs
jo
imul
(bad)
pusha
leave
sub
sub
je
out
dec
icebp
dec
dec
pop
sub
sub
aad
mov
not
jb
gs
sti
stc
jns
xchg
pop
cdq
cmc
sbb
cmc
int3
jge
bnd
fisubr
cmp
stc
es
jl
jecxz
shl
pusha
ret
push
outs
lods
pop
push
cmp
not
jmp
cmc
test
inc
mov
jbe
mov
or
pop
add
mov
je
xchg
push
jb
xchg
and
(bad)
pop
inc
inc
out
xchg
lock
adc
xor
mov
fcmovu
(bad)
push
mov
out
push
xor
lock
fsubr
add
lods
dec
sbb
and
cmp
rcr
in
fcom
lock
std
jbe
dec
mov
or
or
mov
adc
call
lea
inc
sbb
sti
dec
in
cdq
test
fadd
iret
aas
inc
outs
aas
push
and
mov
add
cmps
(bad)
inc
add
fldenv
pop
mov
lods
mov
test
mov
push
sub
cmps
push
sbb
pop
data16
mov
add
jmp
sbb
call
cmps
jg
pop
je
inc
adc
repnz
repnz
pop
aas
add
es
icebp
rcr
std
inc
popf
jge
fcom
mov
cmps
xchg
pop
repnz
cmp
jmp
or
pop
jns
or
lock
pop
cmp
and
(bad)
fwait
sub
in
adc
fbstp
jbe
daa
adc
xor
sahf
pop
push
repnz
jno
(bad)
mov
sub
retf
sub
xchg
push
inc
ds
cld
xchg
push
iret
adc
lea
push
xor
xchg
out
mov
in
mov
test
cmp
ret
mov
push
outs
enter
scas
jno
(bad)
sub
dec
pop
(bad)
movs
sti
das
nop
push
cmp
push
push
repnz
xchg
jbe
inc
xlat
inc
std
je
dec
leave
out
xor
cmp
test
xchg
xchg
lock
xor
bound
loope
cmp
dec
jle
add
movs
adc
or
pusha
jmp
fcom
jnp
or
push
mov
xlat
stos
jnp
(bad)
stos
xchg
mov
les
scas
xchg
jle
imul
push
jle
add
sbb
mov
ret
es
dec
mul
(bad)
inc
adc
sbb
adc
or
mov
int3
aaa
push
sub
inc
and
sub
and
rcr
xchg
stc
aaa
fist
sbb
cmp
cmp
int3
adc
mov
pop
push
mov
iret
xchg
rol
sub
int3
ss
lea
ret
adc
jmp
cld
dec
retf
lahf
pop
cmp
push
mov
and
push
out
imul
pop
add
cmp
fldcw
pop
inc
xlat
aad
cmp
hlt
inc
xrelease
push
xor
inc
mov
out
mov
enter
jbe
push
inc
jmp
mov
fisttp
and
adc
dec
push
mov
xchg
retf
not
bound
and
jle
mov
xchg
stos
cmp
out
inc
cli
das
scas
adc
addr16
dec
mov
mov
call
sub
arpl
xor
stc
pusha
or
jae
fucomip
sbb
jmp
xor
jg
shl
lods
aaa
push
mov
push
xchg
les
inc
stos
ret
adc
scas
add
arpl
push
mov
rcr
inc
sbb
add
enter
and
cmp
mov
cli
push
loop
and
dec
vmovaps
fcmovnu
sbb
xlat
or
test
retf
pop
cmc
adc
lahf
(bad)
mov
clc
pop
fadd
jge
repnz
outs
scas
jmp
aad
imul
jmp
xchg
es
pop
inc
and
jle
mov
or
push
sahf
inc
inc
std
add
scas
test
test
imul
shl
out
(bad)
ins
lds
sub
cmp
lahf
xlat
fcomp
inc
(bad)
ss
dec
out
test
sti
mov
movs
fimul
test
push
xlat
xor
ret
jae
cmc
xor
sub
cld
cmp
lods
fimul
pushf
adc
fs
(bad)
fiadd
mov
call
fcomp
jnp
outs
inc
xchg
in
(bad)
(bad)
sub
push
pop
pop
and
mov
sbb
push
adc
inc
cwde
ins
cld
push
push
jae
mov
cmps
aad
mov
inc
out
jae
shl
(bad)
cmp
aam
xchg
popa
or
ret
scas
jle
inc
shl
adc
call
push
add
sub
cld
xchg
or
jmp
inc
adc
scas
sbb
aad
mov
cdq
pop
mov
xor
iret
cwde
test
out
push
and
jnp
movs
repz
ret
sub
mov
ins
push
aad
ds
test
and
ficomp
(bad)
hlt
push
pop
xchg
push
xchg
retf
push
lds
mov
and
and
xor
ds
mov
or
(bad)
and
out
jno
icebp
mov
push
repnz
adc
jae
xor
or
sahf
inc
js
mov
jbe
retf
in
fstp
jne
push
out
ret
movs
pushf
cld
jne
xor
push
popa
call
cmps
cmps
sbb
jbe
pop
test
int3
jae
das
div
push
mov
movs
jnp
outs
inc
aad
lock
pusha
iret
loopne
adc
push
cld
gs
xchg
or
inc
and
imul
xor
jecxz
add
arpl
call
sbb
lea
in
fild
or
ds
neg
pusha
mov
out
in
test
mov
stos
imul
cld
dec
cmp
mov
gs
jne
pop
xchg
cmp
add
and
sub
mov
cmc
pop
xchg
mov
pop
fidiv
mov
jmp
or
dec
scas
lods
ss
xor
jno
sub
ins
sbb
pop
xor
stos
xchg
imul
fist
push
enter
sbb
adc
dec
aaa
mov
ret
fimul
mov
imul
imul
jo
test
ja
pop
push
xor
shl
sub
xchg
aaa
cli
sbb
les
sbb
cmp
pop
daa
ins
jo
int3
jbe
and
jnp
ror
and
imul
popf
fistp
mov
push
cdq
push
adc
xchg
fstp
xlat
mov
cmp
push
jae
mov
addr16
fsubr
pusha
out
adc
sti
mov
jl
mov
stos
jmp
or
loope
movs
adc
or
or
jl
mov
je
adc
lock
ins
pop
enter
mov
sbb
or
out
ja
scas
aas
adc
cmp
cmp
xor
pop
popf
popa
mov
push
xchg
xor
enter
xlat
dec
mov
adc
inc
fadd
inc
add
fcomp
fsubr
mov
cmps
cmp
rcl
adc
mov
and
lock
jg
push
mov
lods
mov
pop
push
pop
pushf
xchg
push
lods
cmc
bnd
mov
(bad)
lahf
std
adc
aaa
pop
xchg
push
lods
in
arpl
push
fcmove
push
es
mov
pop
arpl
push
inc
sahf
dec
popf
loopne
push
std
das
sti
out
les
sar
push
push
add
xor
shl
imul
scas
int3
idiv
sub
pop
fisttp
cld
cmp
push
outs
cli
aam
shl
push
jnp
pop
dec
push
iret
push
(bad)
daa
sahf
leave
cmp
mov
in
in
je
lods
arpl
or
outs
gs
shl
in
das
jle
in
xor
pop
fs
inc
xchg
sbb
xchg
mov
push
push
lock
xchg
cmp
inc
sbb
cli
rcl
popf
lea
xor
js
adc
mov
lods
xchg
loopne
jbe
rcr
in
fdiv
retf
mov
xchg
sbb
lods
push
add
and
or
aaa
(bad)
sar
cwde
jmp
lds
and
push
lods
mov
pop
pshufw
cli
mov
inc
repz
out
sbb
fs
mov
add
push
push
cli
lock
dec
inc
in
add
scas
pushf
xchg
jnp
sub
adc
(bad)
sub
out
dec
(bad)
push
xor
jp
in
retf
mov
scas
mov
cmps
iret
add
fisubr
fnstsw
fild
cmp
enter
mov
jmp
add
adc
push
sub
add
daa
jns
clc
daa
fmul
ds
jbe
dec
daa
ret
ret
dec
mov
jno
push
pop
cmp
adc
sub
ret
gs
mov
inc
(bad)
loope
jnp
imul
repz
xor
mov
add
cmp
jle
repnz
jae
push
add
mov
sub
adc
sub
cmp
xor
inc
mov
movs
xchg
sub
mov
jns
loop
xor
repz
pushf
jge
jno
gs
mov
xchg
jnp
xchg
mov
out
sahf
add
inc
or
cdq
mov
in
dec
sub
clc
push
xchg
test
mov
int
cmp
addr16
repz
jecxz
dec
mov
push
cmp
div
xchg
movs
add
mov
pop
aad
cmc
jl
les
pop
and
popw
dec
push
rcl
sub
popw
ja
sub
push
mov
movs
mov
and
and
cmp
mov
push
mov
and
mov
or
xor
pop
mov
std
push
xor
push
sahf
xchg
and
pop
add
mov
sbb
(bad)
jg
aaa
sbb
stos
adc
jbe
xchg
pop
out
jge
cwde
jmp
ss
and
shl
test
mov
ror
dec
and
pushf
cmp
xlat
adc
mov
ss
sti
jb
shl
sbb
and
adc
out
test
mov
mov
xor
xchg
push
rcl
in
mov
sub
sar
into
mov
lds
inc
cmp
and
sahf
lock
xchg
inc
shl
cld
mov
cmc
mov
inc
push
adc
mov
jle
arpl
into
inc
jns
cmp
leave
leave
sub
or
repnz
ss
mov
mov
or
call
add
les
push
xor
jo
inc
lods
into
or
scas
mov
mov
pop
loopne
ret
lock
cmc
call
stc
xor
xchg
inc
mov
push
daa
cmp
push
push
pop
fldcw
dec
aaa
cmp
jb
sahf
sbb
xlat
sahf
adc
mov
xchg
gs
pop
jmp
std
lock
jecxz
xlat
loopne
int
xchg
cdq
mov
ins
mov
outs
lahf
movs
sub
(bad)
in
xor
pop
inc
xlat
imul
mov
into
and
cmc
int
aam
mov
jno
mov
imul
or
push
fnstenv
ja
fsubp
and
or
mov
mov
pop
enter
loopne
lods
pop
cdq
xor
xchg
jae
push
adc
add
push
sbb
xchg
pop
popa
popf
retf
jno
jp
test
jecxz
pop
shl
repz
repz
fstp
div
sub
dec
enter
jns
cmp
js
or
adc
ins
hlt
je
pop
std
cs
mul
lds
xchg
sbb
ins
ds
call
pop
fwait
js
mov
retf
xchg
cmps
jmp
dec
sbb
call
hlt
mov
test
(bad)
sbb
enter
sub
ja
xor
push
out
cmp
push
pop
jmp
repz
pushf
dec
mov
jecxz
mov
test
or
iret
inc
ins
sub
push
cmp
out
loopne
fsub
je
loop
out
mov
fisubr
stos
cmp
js
dec
or
sub
push
mov
sar
sti
clc
shl
mov
cmp
sbb
gs
sub
int3
cdq
enter
sub
xchg
jle
fwait
mov
or
and
cmp
pop
mov
adc
dec
push
imul
sbb
scas
pop
push
out
repz
adc
(bad)
scas
or
lds
cli
mov
sbb
scas
into
or
mov
cwde
test
jo
mov
retf
inc
sub
fadd
push
int
pop
loope
add
dec
mov
daa
pop
gs
sahf
(bad)
pop
mov
(bad)
sti
scas
sbb
mov
dec
dec
pusha
retf
pop
mov
and
test
and
xchg
ficom
mov
call
ss
jnp
jmp
inc
xchg
imul
out
jbe
add
fcom
test
int3
in
push
movs
mov
out
cld
push
out
adc
leave
pop
lods
into
int
cmp
test
stos
mov
and
aam
fwait
push
outs
mov
pop
cli
retf
ss
ror
push
rcl
sub
arpl
aad
adc
pop
adc
ds
sahf
or
mov
(bad)
scas
icebp
ret
inc
es
mov
mov
in
pop
jnp
sub
movnti
cwde
aas
fidivr
aad
jb
xchg
imul
mov
into
daa
cmp
add
lahf
cmp
or
scas
cmp
cmps
out
enter
mov
xchg
sbb
hlt
mov
pop
cmp
into
xchg
fnstcw
add
mov
nop
test
pop
cmc
mov
imul
dec
cmps
sahf
stos
jmp
xchg
dec
dec
sub
repz
or
les
retf
aaa
mov
lods
shr
shl
mov
xlat
hlt
out
inc
jmp
and
jo
out
xor
jle
movs
mov
cld
mov
repz
push
repnz
stc
lea
jl
add
inc
mov
popa
sub
scas
add
sbb
add
adc
mov
inc
rcl
lock
loope
push
scas
movs
call
bound
lods
pop
neg
loope
push
push
jbe
out
pop
lahf
xor
push
outs
hlt
xchg
in
nop
ja
pop
pop
adc
or
jecxz
push
cwde
test
std
mov
popf
mov
arpl
or
(bad)
aam
shl
sub
imul
xor
pop
add
jbe
loope
imul
xlat
or
ss
data16
jb
iret
cmp
cld
cdq
cli
push
inc
pop
sete
mov
movs
jmp
mov
shl
(bad)
mov
adc
jo
push
adc
js
pusha
jl
mov
pop
hlt
xchg
inc
xchg
(bad)
pop
ficom
jecxz
sahf
(bad)
rol
mov
cmp
fmulp
in
jecxz
imul
int
inc
mov
sub
mov
mov
test
cmps
fnstsw
stc
scas
stos
mov
lock
aas
cld
outs
or
jl
retf
in
mov
aad
stc
aas
sbb
shr
push
cmp
lock
xor
add
popa
mov
mov
ror
ss
xchg
test
rcr
or
xchg
daa
je
mov
arpl
movs
push
add
das
inc
and
jo
xchg
aad
mov
movs
ret
ss
mov
stos
aas
mov
(bad)
cmp
and
call
adc
inc
daa
(bad)
mov
push
sub
lahf
stc
popf
ror
mov
movs
fwait
mov
daa
nop
inc
mov
mov
idiv
shl
es
cmp
inc
push
pop
cli
into
in
or
mov
outs
call
xor
scas
jmp
mov
jns
pop
pop
dec
shl
pop
jmp
and
inc
out
adc
inc
out
cmp
rcl
and
jp
test
xchg
mov
repnz
cmps
aad
inc
rcr
jbe
add
mov
setbe
mov
in
js
mov
clc
aad
mov
cmps
jp
push
xor
pop
cld
nop
fcmovnbe
jno
frstor
out
outs
pop
sbb
shl
into
leave
fdivr
(bad)
mov
sahf
adc
mov
mov
push
push
or
sbb
push
xlat
mov
(bad)
mov
adc
mov
mov
sub
inc
and
cs
xchg
dec
fidiv
scas
jno
inc
sbb
mov
mov
jb
iret
test
into
push
jmp
jge
xchg
jecxz
sbb
pushf
pop
mov
scas
(bad)
push
cdq
xchg
retf
jne
jmp
cmp
dec
sub
xor
retf
dec
shl
(bad)
pop
mov
push
dec
fwait
call
popa
sbb
sahf
in
(bad)
mov
mov
out
cmp
mov
xor
and
dec
gs
jae
aaa
xchg
add
stc
adc
add
stos
xor
mov
jecxz
imul
dec
xchg
push
int3
lods
in
dec
jp
mov
xchg
rcr
pop
stc
cmp
popf
sbb
push
lahf
rol
fcomp
push
inc
out
or
add
push
cmp
cs
pop
leave
sbb
xchg
mov
rcr
fst
xchg
(bad)
fbld
lods
test
(bad)
(bad)
fcom
sub
sbb
cmps
movs
sub
adc
mov
cdq
cli
adc
xchg
push
mov
sub
pop
retf
push
mov
std
pop
imul
gs
aas
mov
xchg
xor
loope
scas
jne
jae
sbb
and
retf
push
ret
push
ror
cmp
and
cmp
in
pop
sti
outs
xchg
or
pop
jne
push
fisttp
xchg
pop
(bad)
es
jg
mov
push
clc
dec
addr16
xor
sub
popa
push
in
jno
in
mov
xchg
push
pop
ins
add
pop
xor
loop
xchg
xor
push
push
repz
mov
cmp
or
and
into
adc
xchg
cs
mov
xor
inc
jo
scas
jno
add
int3
lods
xor
cmp
mov
or
cdq
jns
adc
dec
add
jns
stos
call
add
js
adc
jbe
add
shl
xlat
(bad)
call
mov
cmp
add
repnz
test
xchg
mov
mov
dec
(bad)
(bad)
mov
ss
cmps
jmp
adc
jecxz
int3
pop
xor
stos
adc
and
dec
cli
adc
pop
add
aad
sahf
pop
xchg
out
cmp
mov
or
xor
ja
stos
and
or
jl
movs
jp
add
enter
in
or
aas
push
fisttp
xchg
xchg
mov
int
cmp
out
sub
test
xor
out
jg
cmc
nop
scas
or
(bad)
fld
pop
lods
mov
or
inc
pop
and
stos
test
test
xor
cwde
cld
dec
int3
outs
inc
mov
mov
ins
jns
cmp
iret
cmp
lahf
cmc
stos
jns
and
mov
cli
js
adc
jae
mov
pop
xchg
xor
adc
test
sub
pop
sub
aaa
arpl
pop
mov
xchg
push
sar
imul
xchg
add
sahf
int3
ror
cmp
cmp
jns
loope
mov
outs
mov
adc
push
ins
xor
sub
sub
add
push
dec
bound
mov
cld
cmp
xor
or
or
xchg
fmul
(bad)
ret
xchg
pusha
mov
dec
cmps
movs
icebp
xor
lea
mov
xlat
adc
mov
jae
rcr
addr16
retf
mov
test
xor
jmp
sub
dec
ins
fidiv
jecxz
mov
std
push
push
push
mov
adc
(bad)
push
ret
xor
retf
ficom
xor
adc
shr
sub
mov
mov
out
js
adc
mov
push
inc
nop
outs
retf
cmp
(bad)
shl
push
xor
add
sub
mov
jbe
mov
imul
and
adc
push
arpl
sbb
scas
in
in
lea
dec
cmp
dec
leave
test
add
jo
std
aad
dec
mov
bound
jge
pop
aam
lds
add
mov
xchg
mov
jbe
sti
push
mov
xor
loopne
inc
rol
add
test
pop
inc
xor
mov
jl
gs
adc
mov
in
or
or
sbb
ret
xchg
cmp
jecxz
clc
clc
ret
jno
xchg
enter
sahf
cmp
sbb
push
jle
mov
fdiv
xchg
sub
jl
outs
jmp
mov
div
(bad)
fwait
inc
cli
mov
and
mov
ds
jae
or
mov
jo
in
stc
das
pop
mov
jae
mov
cwde
sub
out
push
or
fs
ret
mov
sar
pop
icebp
test
push
push
pop
dec
and
cmp
fild
push
cmp
jge
inc
inc
push
leave
loopne
mov
inc
xchg
inc
cld
(bad)
fisub
mov
xchg
call
xchg
shr
cmps
jge
aas
sti
xchg
jg
jmp
push
addr16
add
push
ins
in
or
add
inc
sub
(bad)
jecxz
xchg
fldenv
(bad)
fst
sub
out
xchg
frstor
out
jl
js
cmp
pop
fdiv
cmps
mov
je
jl
mov
fcmovnb
xor
in
inc
ja
into
retf
in
das
test
xchg
or
sub
add
and
imul
movs
add
aas
and
cwde
hlt
dec
fdiv
mov
adc
mov
push
mov
in
shl
in
xor
and
movs
lods
test
mov
ret
sub
push
cmp
cmps
dec
jnp
push
bound
jg
push
sub
xchg
pop
and
adc
shr
sub
adc
shl
mov
fdivr
dec
adc
cli
xchg
in
lods
ins
into
xor
or
jno
pop
xor
test
mov
dec
xchg
mov
push
dec
nop
fs
scas
sbb
mov
add
inc
sub
mov
retf
pop
ss
ror
ss
or
das
push
sub
xor
push
std
jae
ror
add
out
in
dec
xor
inc
add
iret
mov
stos
scas
add
cmp
iret
pop
test
imul
add
or
and
call
retf
xor
(bad)
in
and
les
xchg
popf
nop
adc
push
jbe
test
je
in
mov
mov
lahf
mov
fadd
mov
in
scas
push
xor
int3
outs
sub
mov
xor
loope
jnp
add
dec
popf
scas
dec
or
sub
fidivr
loop
sub
outs
add
adc
jmp
aam
or
mov
lea
mov
sbb
mov
push
or
pop
shl
mov
outs
sbb
mov
nop
imul
sbb
add
xchg
mov
xchg
fidiv
cmp
call
pop
enter
ins
imul
push
and
push
cs
dec
pop
out
pop
test
mov
or
and
fcomp
mov
(bad)
jb
or
or
push
je
adc
shl
(bad)
adc
mov
fistp
scas
aad
(bad)
dec
push
pop
inc
and
and
test
push
adc
(bad)
jmp
(bad)
cli
scas
fisttp
mov
sbb
call
inc
shl
and
mov
or
mov
jecxz
and
in
pop
xchg
hlt
cdq
pop
sub
xchg
pop
nop
or
xchg
sar
mov
xchg
cmp
aam
add
outs
pop
or
call
imul
mov
mov
out
lea
push
fwait
and
sub
sub
xchg
cmovb
sbb
cdq
test
and
repnz
lea
arpl
in
repz
mov
clc
movaps
icebp
push
adc
out
xor
and
mov
push
xchg
cmp
ins
adc
xor
adc
ins
pop
xchg
popf
sbb
(bad)
(bad)
jb
mov
mov
dec
aas
out
call
je
cwde
jne
xchg
cmp
push
ins
or
sub
mov
out
or
jp
lds
add
pop
mov
cmp
outs
in
fcom
and
mov
jns
nop
retf
jp
cld
jno
(bad)
ins
ret
jle
arpl
cmp
mov
retf
sub
out
inc
cld
mov
or
dec
and
(bad)
lods
out
adc
inc
and
fld
fcomi
xchg
pop
cmp
mov
dec
mov
lods
xchg
or
cmps
mov
mov
mov
loope
xchg
and
and
mov
ss
push
pop
mov
xchg
stos
dec
inc
jle
cmp
popa
out
iret
or
push
cdq
push
jo
xchg
es
xchg
mov
imul
dec
xchg
pop
jnp
adc
and
jmp
mov
fucom
or
mov
idiv
je
inc
ins
xchg
test
mov
push
fucomi
int3
lahf
mov
cmp
test
scas
lods
lods
xor
lea
jmp
add
add
jae
(bad)
in
xor
xchg
and
mov
addps
push
mov
push
xor
adc
or
into
and
xchg
sahf
sbb
retf
(bad)
xor
cmp
ins
dec
jg
cmp
dec
aad
jmp
(bad)
jo
jge
and
inc
pop
das
loopne
push
icebp
inc
popf
mov
aam
outs
test
inc
add
sub
out
push
out
xor
mov
xor
jle
sahf
in
push
push
in
enter
push
(bad)
cmp
cdq
pop
add
and
stos
xor
or
popf
mov
inc
call
lods
pop
mov
sub
jnp
xchg
mov
mov
in
push
pop
aad
loop
in
cmp
mov
jmp
(bad)
stos
jmp
fs
test
jb
fld
mov
mov
xor
(bad)
retf
fistp
mov
iret
(bad)
xchg
jbe
jmp
mov
test
mov
xor
pop
inc
stc
dec
js
add
lods
(bad)
xor
adc
sbb
xlat
mov
sbb
pop
ficom
iret
aad
ds
add
push
mov
fistp
gs
jmp
cmc
cs
addr16
test
and
pop
adc
(bad)
xchg
or
jnp
cdq
pop
enter
mov
rcl
loope
(bad)
cld
pop
cmps
std
jo
sar
out
jo
xchg
sbb
fisttp
cmp
xor
ret
cmp
mov
mov
or
(bad)
repz
pop
xor
stos
loop
stos
imul
addr16
repz
dec
pop
sbb
sbb
loope
push
mov
push
in
jns
movs
ja
jecxz
add
adc
sti
jne
cmp
xchg
add
cwde
sub
retf
pusha
cmps
in
jmp
mov
mov
push
jbe
sub
fucomi
push
test
dec
stos
mov
mov
mov
enter
int
sbb
add
je
shr
sub
or
out
inc
pusha
enter
adc
fcmovbe
and
int
inc
xor
jp
sbb
mov
pop
stos
cmc
fisttp
ins
pop
mov
cmp
adc
mov
or
push
lods
pop
imul
lods
clc
mov
push
and
int
icebp
test
and
inc
fxch
gs
popa
cmp
repnz
test
lods
popf
ds
imul
mov
xchg
jl
add
stos
pop
jle
rcl
test
mov
call
jnp
hlt
ret
sub
call
mov
call
jmp
fbstp
mov
adc
xor
or
sahf
shr
fwait
xchg
or
or
sbb
jne
(bad)
and
lock
bnd
add
je
push
cwde
out
fistp
jmp
rol
sub
jnp
or
fcom
loopne
push
aaa
les
ss
mov
sbb
xchg
cs
out
and
aam
packsswb
(bad)
fimul
inc
int3
xchg
(bad)
aam
mov
push
jp
es
and
jp
inc
or
sbb
fadd
cdq
imul
lahf
add
adc
mov
in
and
xor
add
js
jb
stos
in
sub
sub
sub
in
bound
call
std
sub
dec
or
jno
(bad)
aam
jmp
and
jg
stc
xor
sbb
popa
lds
xor
bound
xchg
imul
movs
dec
jnp
dec
push
mov
jle
inc
adc
jb
dec
mov
hlt
daa
hlt
mov
loope
out
scas
les
mov
mov
mov
and
mov
setns
(bad)
pusha
push
ins
repnz
retf
mov
pushf
(bad)
push
mov
mov
jl
xor
ret
pop
inc
and
mov
mov
xor
sbb
int3
mov
jbe
fcmovnbe
lods
test
push
(bad)
icebp
add
ds
ficomp
repnz
scas
adc
mov
mov
out
aad
xchg
dec
mov
cmp
gs
das
pop
dec
mov
xor
daa
xorps
imul
std
mov
daa
adc
inc
pop
or
loopne
add
push
sahf
bound
repnz
pop
mov
xchg
jne
pop
stos
mov
mov
sub
xor
xchg
or
int
cli
retf
and
jle
xchg
pop
cmp
adc
popa
test
dec
ret
pop
and
out
pop
call
lods
arpl
mov
mov
dec
cmp
imul
rcr
adc
out
aad
fidivr
loop
cmps
mov
and
das
xchg
dec
dec
add
mov
cmp
rol
int
lahf
mov
cld
stos
pop
movs
pop
(bad)
and
out
dec
(bad)
arpl
mov
stc
rcr
rcl
pop
xchg
out
xchg
lods
xchg
cmp
push
frstor
ret
mov
fisttp
or
push
and
arpl
aas
xor
sub
jne
jl
xchg
mov
xchg
inc
mov
cli
fwait
mov
push
call
retf
adc
aad
mov
mov
xchg
aad
js
aad
or
sbb
cli
jmp
and
cmp
mul
fstp
mov
in
adc
in
lods
push
jle
inc
rcl
cs
iret
sbb
repz
cwde
or
movups
add
mov
aas
gs
jne
lods
push
or
jle
cmp
lods
xor
out
out
mov
and
push
sahf
dec
pop
jo
iret
das
rcr
sub
inc
dec
pop
popf
cld
pop
adc
jp
jg
pop
and
ficomp
push
aaa
icebp
sbb
leave
pusha
dec
pusha
xchg
pop
jl
test
cmp
mov
out
xchg
lock
out
cld
out
test
or
push
popf
inc
cmp
inc
iret
loope
mov
aaa
inc
jo
stos
imul
ins
clc
clc
pushf
push
sub
int
push
imul
outs
mov
push
test
les
push
mov
cdq
mov
sub
lahf
xchg
mov
inc
sub
mov
imul
aas
inc
jo
push
fst
in
ins
es
int
ds
(bad)
stos
(bad)
rcl
xchg
aam
and
hlt
dec
adc
in
outs
mov
popf
fwait
jns
cmp
ror
(bad)
clc
mov
lahf
in
not
push
xlat
das
scas
mov
mov
imul
sub
fdiv
outs
int3
jno
mov
dec
jmp
sub
cmp
call
jbe
push
lds
ss
sbb
xchg
mov
daa
ja
iret
ins
sub
shl
mov
in
push
adc
jno
stos
lds
mov
in
xor
lahf
nop
clc
cdq
cmp
xor
jecxz
loopne
jo
arpl
push
nop
lods
mov
xor
cmp
cld
adc
frstor
sub
xchg
lock
push
dec
(bad)
(bad)
dec
div
lock
jle
sbb
dec
enterw
push
dec
int3
adc
dec
(bad)
imul
xchg
(bad)
sub
jmp
pop
jmp
push
stos
sbb
add
dec
jp
jle
sub
cdq
loop
or
cmp
sar
clc
and
in
sbb
pop
or
je
pop
sub
mov
sub
or
add
mov
int3
cli
push
popa
scas
and
jmp
xor
add
loope
stc
add
nop
mov
mov
in
inc
popa
cmps
enter
enter
xchg
fs
in
leave
or
adc
test
cmp
mov
push
test
adc
ds
dec
rcr
lods
sbb
stc
arpl
mov
dec
out
jmp
pusha
mov
mov
adc
cld
test
sti
push
or
es
add
stos
jecxz
cmps
popf
outs
fs
mov
stc
test
push
jl
mov
not
cli
test
and
ja
ffreep
enter
(bad)
aad
and
ss
or
pusha
neg
inc
mov
jp
mov
sub
daa
and
xchg
fisttp
icebp
pusha
dec
mov
sub
xor
neg
pop
jl
shl
inc
lock
lea
lods
xadd
xor
sub
add
add
jge
xchg
mov
add
(bad)
xchg
cmp
pop
aam
inc
mov
inc
loopne
push
dec
mov
sahf
pusha
pop
jp
add
movs
push
aas
loopne
nop
jp
mov
mov
aam
loop
jl
movs
xchg
mov
jnp
pop
cmp
into
aas
mov
inc
lock
lahf
dec
dec
daa
xchg
and
xlat
sub
and
repnz
pop
mov
jnp
mov
jno
mov
jecxz
das
sub
outs
dec
dec
add
popa
outs
pop
mov
push
enter
dec
arpl
jns
bound
mov
test
sbb
out
mov
jne
idiv
mov
aad
data16
and
and
stos
inc
pop
dec
dec
imul
or
sbb
gs
lea
nop
arpl
add
or
push
mov
popa
or
arpl
test
and
pop
push
pusha
sbb
(bad)
(bad)
pop
mov
aas
addr16
dec
inc
pop
xor
or
dec
dec
mov
out
into
rol
sahf
cmp
iret
fs
stos
(bad)
arpl
dec
xchg
dec
inc
movs
and
pop
enter
sub
call
call
fdivr
sbb
pop
sahf
std
popa
lods
enter
ficom
cmp
dec
pop
outs
push
cmp
xchg
popf
pop
sub
add
or
pop
xor
rep
fst
in
xor
mov
cli
sub
dec
mov
or
sysexit
icebp
xchg
out
aaa
in
xor
cmp
adc
pop
inc
adc
sbb
mov
into
mov
jns
jmp
push
out
xor
test
push
out
movs
pusha
jbe
xor
jmp
dec
mov
mov
push
xchg
dec
cli
pop
stos
in
stos
retf
scas
mov
pop
in
stos
jns
xchg
ret
shr
in
iret
rcl
repnz
adc
clc
add
dec
test
or
mov
mov
cmp
mov
stc
mov
fsubr
push
ins
inc
retf
sar
xor
cmp
call
add
pextrw
ins
pushf
mov
fcom
xor
fcomp
jnp
pop
aad
ja
add
call
loopne
push
in
enter
jl
enter
pop
lds
or
fnsave
int
andnps
movs
or
mov
mov
and
xor
js
scas
sbb
mov
nop
cmps
push
jno
ret
call
aaa
pop
test
xchg
mov
mov
dec
lock
mov
dec
mov
inc
fs
nop
push
inc
xor
mov
(bad)
push
(bad)
out
add
je
dec
push
in
jbe
iret
pusha
scas
enter
pusha
es
add
jp
icebp
and
out
xor
mov
jae
dec
repz
jbe
mov
and
push
sbb
add
mov
xor
or
add
int
push
add
fsub
jmp
cmp
outs
mov
loope
mov
add
xchg
(bad)
sub
adc
add
inc
test
aas
mov
sbb
dec
addr16
dec
fld
cmp
loope
mov
leave
or
jle
jbe
cmc
xchg
mov
xchg
push
popa
jp
adc
test
dec
pushf
stos
xchg
jno
retf
clc
adc
not
dec
iret
clc
sbb
cmp
sub
sbb
les
mov
or
(bad)
ds
fild
retf
out
mov
adc
push
test
mov
add
pop
or
lahf
fcomi
retf
cmp
outs
add
clc
sub
push
call
jae
xchg
out
fst
jnp
jmp
fidiv
mov
shr
fadd
les
out
jp
jb
mov
pop
mov
mov
push
call
sbb
jno
mov
out
lods
push
cli
inc
ret
mov
dec
xchg
(bad)
idiv
cmps
mov
rol
retf
xor
xchg
jno
inc
inc
stos
hlt
jmp
cmp
sbb
sub
jg
aam
xor
retf
dec
lock
out
push
mov
cld
xor
(bad)
or
push
mov
xor
imul
leave
push
retf
jmp
xor
mov
and
jl
pop
push
push
daa
aam
fistp
mov
ss
push
push
push
(bad)
popf
fimul
stc
enter
add
js
jecxz
mov
sbb
rol
push
cmps
mov
addr16
daa
mov
xor
icebp
in
xor
scas
ret
jle
add
ins
sub
inc
clc
js
cmp
js
and
jno
cmps
dec
ret
retf
pop
and
mov
nop
lahf
xlat
enter
js
jo
sar
mov
xor
pop
mov
retf
jecxz
paddq
rol
loopne
call
jb
add
mov
xchg
imul
into
fdiv
mov
adc
loopne
or
jno
adc
cdq
inc
xchg
inc
xchg
in
popa
xchg
xor
sbb
outs
pop
xchg
sbb
(bad)
mov
sahf
lea
pop
fs
jns
dec
in
cdq
push
inc
cmp
in
out
or
arpl
repnz
outs
cmp
inc
fistp
and
std
add
clc
mov
mov
mov
gs
mov
fmul
jno
sbb
sbb
ret
call
iret
jo
xor
adc
xchg
pop
pop
nop
shl
test
and
int
stc
call
pop
cmp
fistp
sti
outs
(bad)
mov
(bad)
in
and
add
iret
std
pushf
nop
or
mov
test
inc
add
ins
sub
aas
xchg
sahf
push
jge
scas
xchg
or
clc
mov
arpl
call
das
fadd
outs
(bad)
ficomp
mov
lods
aad
out
xor
jmp
ss
dec
mov
test
not
cmps
addr16
mov
sub
jle
pop
sar
jecxz
mov
aas
adc
xchg
inc
sbb
clc
fnsave
iret
add
shl
mov
test
jmp
add
sbb
dec
cmp
scas
add
sub
mov
mov
outs
fld
sub
push
ins
ins
mov
xor
pop
and
xchg
outs
sbb
xor
inc
push
dec
cdq
into
std
test
test
maxps
retf
or
cmps
xchg
pop
jg
cmp
add
mov
xchg
mov
jecxz
leave
sti
imul
into
test
push
sbb
call
sub
imul
pop
call
call
adc
jno
pop
mov
mov
cmps
in
sahf
jg
jmp
or
mov
push
mov
retf
jecxz
mov
jle
xchg
retf
jo
(bad)
(bad)
jns
sub
push
popa
popf
mov
in
out
mov
enter
push
pop
adc
mov
stos
adc
xor
gs
lods
mov
mov
mov
cwde
lea
icebp
or
(bad)
fst
jbe
or
aad
sbb
jns
dec
mov
iret
clc
pop
es
add
mov
inc
ret
clc
push
sbb
mov
(bad)
ins
pop
aas
or
call
cmp
xchg
xor
and
inc
push
add
push
outs
or
fiadd
aam
ror
stc
mov
mov
pop
adc
bt
mov
js
xchg
xchg
xchg
fucomp
jp
push
dec
mov
fcomp
and
push
pop
rol
and
sti
sbb
arpl
jno
iret
rcl
xchg
sbb
dec
xchg
push
fild
test
jns
mov
push
pop
mov
cli
inc
ins
aam
or
fs
mov
pop
sbb
call
cmp
rol
adc
sub
mov
or
or
mov
inc
pop
dec
shr
jl
pop
dec
gs
arpl
mov
ja
arpl
or
std
movs
add
pop
jl
enter
inc
inc
sbb
scas
jmp
jbe
out
pusha
sar
(bad)
xor
inc
stos
dec
inc
add
push
ds
and
out
imul
cld
cmp
stos
cmp
retf
and
or
out
jp
inc
stos
ret
xor
jp
bound
pop
cdq
push
cmc
mov
arpl
mov
into
add
arpl
cmp
xchg
outs
fistp
xchg
mov
loopne
dec
mov
mov
dec
and
icebp
jo
loope
xor
loop
cdq
retf
call
mov
mov
ds
stc
mov
or
pop
sub
gs
xor
stc
ret
push
lds
adc
jb
pop
mov
push
iret
scas
xchg
jbe
or
je
sub
pop
adc
xor
dec
pop
cld
dec
mov
mov
fcomp
mov
(bad)
jo
xchg
xor
push
adc
pop
pop
popa
hlt
repz
aam
push
les
sub
xchg
add
add
retf
mov
push
mov
mov
es
mov
pusha
sbb
dec
sbb
pop
xchg
push
outs
scas
inc
inc
and
push
aas
jg
mov
mov
mov
lahf
fnstcw
mov
mov
cmp
push
sbb
int3
into
loop
popa
test
call
popf
es
leave
popa
adc
(bad)
in
jo
xchg
call
(bad)
inc
xor
enter
outs
push
je
mov
mov
stc
or
repnz
and
sbb
mov
mov
enter
mov
mov
mov
jmp
xchg
push
adc
sub
pusha
(bad)
shl
pop
neg
push
fcom
pop
shl
int
bound
paddq
mov
and
xchg
sub
aad
push
jmp
xchg
inc
imul
cld
or
cwde
cmp
js
push
pop
daa
mov
push
lds
cwde
inc
js
dec
mov
scas
repz
jae
nop
mov
repnz
jo
pop
mov
mov
inc
inc
pop
or
push
mov
mov
sbb
scas
fimul
or
mov
pop
push
and
mov
lea
pop
outs
test
inc
inc
cmp
push
xchg
ucomiss
or
(bad)
jl
pushf
pusha
pop
mov
shl
into
test
ror
jp
mov
(bad)
mov
xor
enter
push
xor
retf
clc
aam
dec
dec
adc
mov
daa
inc
ret
(bad)
fsubr
fst
(bad)
(bad)
cmp
idiv
lock
adc
mov
sub
mov
ret
sbb
ret
push
retf
add
movs
scas
jo
lods
inc
dec
xchg
fwait
(bad)
cmp
aad
icebp
xor
aam
stc
retf
pop
push
or
mov
xchg
jnp
ret
mov
xchg
jns
retf
mov
(bad)
ret
push
stc
or
dec
sbb
pop
inc
sti
pop
jnp
xchg
jl
inc
pushf
cmp
in
gs
retf
pusha
mov
jle
jle
ficom
mul
pop
add
jmp
cmp
fmul
popa
inc
dec
sub
icebp
xor
outs
sbb
xchg
rcr
fwait
call
inc
(bad)
retf
fstp
retf
or
dec
out
sbb
rol
and
aad
and
mov
pusha
and
(bad)
jae
into
jp
movs
push
push
fst
add
cwde
js
sbb
mov
loopne
dec
(bad)
js
stc
fs
or
pusha
fisub
fist
add
cmps
outs
cmp
fwait
mov
and
out
ret
pop
fst
es
mov
ss
pop
pop
pop
mov
in
sub
xchg
movs
(bad)
pusha
sub
xchg
sbb
jbe
arpl
jmp
pop
mov
aaa
mov
sub
and
add
repnz
pop
das
fcomp
cli
int3
add
inc
fwait
or
iret
mov
stos
cli
adc
dec
ret
pop
sbb
jns
mov
shr
int
sub
mov
pop
popa
cmp
sub
pop
and
lahf
sbb
mov
xchg
aad
(bad)
(bad)
cmp
jmp
jo
cmc
adc
movs
or
mov
or
xchg
pop
jl
out
cmp
add
xor
inc
mov
stos
pop
cld
shl
rcl
xchg
stc
cmps
lock
fcmovnu
repnz
push
scas
repnz
ficomp
inc
lock
mov
xchg
adc
in
mov
mov
pop
sahf
rcr
in
in
movzx
in
adc
int
es
js
and
frstor
jno
add
cdq
mov
xchg
test
dec
scas
cwde
dec
(bad)
cmp
xchg
enter
inc
mov
(bad)
cwde
scas
pop
fmul
cmp
loop
nop
lock
call
jo
and
dec
or
fucomip
imul
fnstenv
jp
mov
mov
dec
aam
mov
dec
loop
icebp
test
or
out
js
jno
push
sbb
sub
ins
icebp
pop
lods
and
mov
mov
js
sbb
push
push
pushf
loopne
sub
pusha
mov
mov
data16
lahf
add
add
sub
or
stc
mov
cmp
mov
sbb
adc
mov
jecxz
mov
jg
jmp
pop
push
dec
mov
(bad)
call
xor
inc
shl
add
pop
(bad)
pushf
mov
jle
in
sbb
mov
or
call
sbb
ja
into
cmp
mov
dec
clc
out
mov
and
pop
and
imul
sbb
inc
sub
adc
icebp
mov
cmps
sub
inc
sbb
mov
sub
imul
call
nop
mov
add
fmulp
inc
mov
div
lods
mov
mov
sbb
push
push
mov
test
adc
push
and
cmp
mov
mov
scas
cmp
jmp
retf
fwait
pop
test
aaa
jno
inc
adc
add
and
mov
and
sbb
(bad)
outs
sahf
push
dec
dec
xchg
or
adc
out
and
inc
iret
xchg
mov
dec
test
(bad)
pop
sub
mov
aad
ror
outs
scas
cmp
(bad)
fist
push
aaa
rcr
imul
jecxz
sub
push
test
ret
cmp
sub
jp
lods
dec
fisttp
mov
movs
iret
popa
test
xchg
inc
cs
test
les
dec
pop
add
iret
mov
mov
push
xor
fimul
out
xor
iret
pop
lods
jle
xor
jb
cmp
cmp
add
jge
mov
enter
jl
mov
xchg
aaa
push
xor
clc
push
pop
jne
aad
or
xor
xchg
jl
je
das
cmp
in
mov
mov
and
mov
pop
pop
inc
fcomi
mov
or
inc
and
mov
xchg
sbb
dec
int3
fsubr
std
sub
pop
movs
lock
cmp
or
or
out
jo
loopne
pusha
push
sbb
xor
pushf
xor
or
add
cmps
jnp
sbb
push
pop
push
mov
mov
xor
imul
loopne
jne
mov
dec
sbb
pop
jle
cmp
shl
mov
cli
cmp
mov
and
ins
and
jl
cmp
(bad)
pop
fbld
cmp
outs
rcl
in
inc
push
push
push
cli
jg
dec
arpl
sbb
xor
ja
adc
rol
mov
ss
and
and
aam
jo
sub
mov
in
push
sbb
dec
test
dec
aaa
retf
out
push
popa
leave
pop
add
pop
fucomip
jbe
fistp
mov
iret
xor
mov
enter
sbb
rcl
movs
push
loopne
adc
lahf
dec
imul
(bad)
pop
xchg
push
cmps
mov
aaa
loop
cmp
bound
in
sti
push
es
out
mov
sar
dec
adc
shl
imul
cmp
std
mov
ja
jns
cld
(bad)
call
sbb
add
mov
fwait
push
lock
pop
ja
xchg
jle
xchg
dec
adc
imul
outs
jns
fs
inc
sbb
inc
(bad)
pop
inc
es
or
inc
sahf
xor
xchg
fndisi(8087
repnz
or
cli
jecxz
and
pop
push
or
bound
fmul
je
inc
and
pop
lahf
xchg
add
lds
or
cdq
pop
xchg
std
ds
add
cmps
ins
ret
xchg
xchg
or
ds
xor
shl
lahf
(bad)
jge
mov
call
fistp
int
jns
sbb
std
jns
mov
mov
cmp
push
mov
repz
loope
or
aam
call
arpl
add
xor
mov
inc
div
test
pop
ins
pop
adc
fwait
clc
pop
std
xor
inc
lea
(bad)
and
scas
push
inc
sbb
jo
xchg
sahf
push
push
cdq
(bad)
push
or
jae
push
sub
sub
dec
test
das
push
ficom
(bad)
cmp
jl
sbb
xor
clc
sbb
fld
js
and
mov
lods
or
dec
push
icebp
and
gs
xchg
fnstcw
cwde
loopne
aas
retf
push
dec
aam
inc
and
into
mov
xchg
call
ins
pop
aad
xor
xchg
mov
jmp
mov
ins
xor
inc
rcr
sbb
imul
iret
enter
add
ja
call
rcl
pop
mov
mov
pop
sbb
pop
dec
sbb
in
adc
mov
cmp
ja
and
xor
pop
pusha
xor
adc
xor
fs
es
add
inc
cmp
adc
xchg
and
xor
mov
mov
icebp
mov
call
pop
and
into
ja
cmc
sub
adc
es
aam
test
mov
ins
and
out
sub
push
inc
or
and
fdiv
nop
xor
jmp
shl
test
and
adc
jne
xor
or
cs
mov
vmovaps
scas
(bad)
push
xchg
mov
or
aad
and
dec
jg
es
test
nop
(bad)
adc
push
sub
xor
ds
inc
dec
and
mov
cmp
aam
in
iret
mov
frstor
movs
jge
scas
cld
mov
fstp
iret
add
pop
dec
imul
test
jne
je
jb
addr16
cld
jmp
dec
jo
push
lea
add
test
sub
adc
shr
imul
inc
dec
push
cli
and
sub
lods
xor
out
mov
pusha
cwde
sbb
jmp
ins
sbb
push
push
loop
pop
rcl
and
xlat
in
retf
jl
sbb
dec
ins
es
inc
adc
aaa
jg
sbb
addr16
dec
jp
jecxz
mov
gs
rcr
stc
imul
push
sub
xor
lods
lods
out
lods
test
adc
mov
std
(bad)
cmps
mov
frstor
cmp
push
dec
cwde
jmp
sub
jl
sbb
ret
pop
(bad)
pop
test
mov
out
dec
shr
and
xchg
jmp
push
push
jo
enter
in
loopne
cmp
cmp
or
sbb
dec
addr16
and
mov
sar
out
fwait
jnp
mov
fs
and
sti
mov
in
cld
movs
or
mov
ja
fcomp
dec
mov
dec
jge
add
mov
dec
and
pop
test
inc
pop
les
pop
cld
xchg
sbb
bound
jo
mov
in
or
shl
ret
call
jo
push
jle
add
dec
xor
scas
popa
mov
sbb
mov
add
dec
or
aad
mov
mov
addr16
imul
(bad)
ror
pop
mov
mov
push
stos
xor
cmp
mov
retf
sub
xchg
popf
sar
dec
sub
pop
test
push
add
call
pop
hlt
jne
sub
es
mov
sub
fadd
add
dec
lock
or
int
xor
rcr
pop
loop
cmp
mov
jecxz
push
in
rol
push
and
jb
mov
lahf
adc
sbb
in
xchg
dec
jo
adc
pop
ret
push
push
jecxz
inc
sbb
fistp
sbb
ret
fs
mov
mov
xor
mov
jge
cmps
jmp
adc
xor
mov
xor
sbb
lods
in
or
sub
outs
daa
stc
or
(bad)
dec
pop
cmp
jmp
dec
mov
add
dec
movs
fisttp
pusha
call
or
dec
xor
call
addr16
sub
pop
sub
pop
les
sub
and
jbe
xor
xchg
lahf
mov
gs
mov
xchg
dec
push
movs
xadd
sahf
cmp
int
lods
pop
test
cmp
cmp
jo
(bad)
xchg
cmp
out
pop
xchg
pop
fnstcw
push
or
mov
push
in
stos
cli
loop
(bad)
push
int
out
popf
dec
and
sub
sahf
push
loopne
imul
mov
mov
cwde
push
mov
sbb
scas
pop
mov
sbb
aam
int
inc
mov
rcl
jmp
popa
adc
add
sub
mov
cmc
inc
mov
(bad)
(bad)
aad
pusha
mov
jmp
mov
retf
movs
stc
pop
pusha
out
or
and
pop
cmp
pop
dec
test
sub
(bad)
mov
sar
imul
out
out
les
xchg
jp
xor
outs
xchg
push
cli
pop
sub
out
and
in
fmul
cmp
pop
add
lods
lods
pop
mov
push
pop
sub
add
daa
jnp
and
jecxz
jmp
jno
mov
iret
xor
pop
sub
aad
movs
adc
outs
pop
bound
test
mov
hlt
ret
dec
mov
(bad)
sub
test
add
mov
mov
push
imul
test
scas
test
loope
(bad)
inc
bound
add
scas
jp
dec
shr
and
xor
add
or
mov
adc
adc
add
inc
push
scas
movs
pop
mov
ret
popf
in
cvtps2pi
sub
repz
es
ja
adc
or
push
dec
inc
cmp
sub
adc
popa
and
in
imul
push
xor
dec
sub
std
xor
mov
lods
jl
cmovge
mov
add
not
leave
or
ja
int3
cmp
outs
or
jne
cmp
push
popf
std
inc
ja
xor
and
rcl
idiv
cmc
adc
mov
adc
mov
not
jl
xor
cmp
pop
cmp
sahf
lds
loop
imul
hlt
into
jb
icebp
in
aas
shl
push
imul
add
xchg
dec
push
inc
stos
inc
xchg
jo
in
dec
scas
mov
movs
sub
mov
xchg
and
ja
popf
ss
cwde
pop
add
pop
mov
dec
icebp
int3
frstor
add
jns
loope
fsub
or
jbe
mov
xrelease
lds
retf
or
jmp
mov
pop
aas
or
push
or
lahf
int3
cmp
pop
jg
aam
dec
mov
jmp
dec
movs
xor
popa
mov
stos
in
inc
pusha
mov
inc
sbb
out
add
xor
int
inc
jl
mov
test
ss
push
jp
add
hlt
imul
js
loopne
cmps
xchg
push
setb
sbb
ins
xchg
push
sahf
out
sub
ins
jg
mul
inc
jecxz
sbb
out
movs
pop
jb
pushf
mov
cwde
lds
add
daa
daa
fwait
ret
cmps
mov
popa
in
imul
mov
stos
sub
imul
jmp
movs
sar
sub
sar
icebp
in
stos
iret
cmp
jne
fistp
test
lods
xlat
scas
divps
xchg
inc
adc
jecxz
jmp
sahf
adc
jmp
xchg
shr
outs
es
add
inc
into
stos
arpl
or
das
rcr
adc
(bad)
ret
sbb
cmp
cmps
push
xor
xor
sbb
iret
in
sbb
call
and
sahf
fst
sbb
(bad)
outs
enter
js
jo
inc
jecxz
mov
pop
push
xor
aad
jmp
pop
test
in
sub
enter
idiv
fs
ror
or
xor
or
or
arpl
xor
mov
jmp
jb
call
clc
inc
pop
movs
mov
ins
cli
pop
jmp
repz
adc
mov
pop
test
xchg
inc
jmp
mov
lahf
or
mov
test
test
call
dec
shr
or
fpatan
imul
sbb
xchg
daa
pop
dec
mov
fild
jmp
pop
mov
psubsb
jnp
dec
shl
es
mov
arpl
pusha
sub
cwde
xor
mov
xchg
sar
iret
mov
push
leave
in
mov
cmp
push
pop
sti
into
aad
scas
daa
into
add
adc
loopne
jmp
imul
and
icebp
inc
out
adc
push
pop
jmp
mov
add
mov
or
cmp
sub
lods
xchg
sub
stos
xor
fs
xor
mov
and
sbb
daa
add
sub
xor
aad
xchg
sbb
loope
mov
adc
mov
adc
mov
std
cmps
dec
test
out
hlt
sar
jge
jno
sub
cs
int3
and
ja
cmp
imul
mov
fcmove
inc
lahf
in
stos
je
or
(bad)
mov
inc
sbb
(bad)
pop
into
test
ins
in
ror
adc
mov
pop
daa
cmps
bound
xchg
add
(bad)
mov
rol
or
pusha
movs
push
dec
lods
jg
leave
jge
popa
arpl
sub
aas
fdivr
or
jmp
mov
retf
std
shl
je
and
mov
mov
nop
adc
jmp
dec
and
cmp
push
mov
adc
call
sar
fisub
push
mov
shl
and
ins
lds
cmp
out
hlt
fiadd
in
leave
scas
sub
mov
mov
lds
push
dec
push
adc
or
xor
fcomp
les
in
pushf
jmp
mov
lock
dec
push
mov
fcomi
mov
cmp
gs
test
fsubp
cmp
(bad)
jmp
lahf
jnp
repnz
xchg
jns
mov
and
xchg
mov
push
pusha
or
pop
pop
jecxz
mov
mov
sub
stos
mov
rcr
xchg
xchg
cs
jmp
jne
movs
jle
cwd
add
adc
mov
adc
je
mov
or
das
ins
xchg
fwait
js
shr
push
xor
xor
repz
ret
push
dec
cmp
cmps
sub
shr
cmp
enter
pop
or
cmp
daa
pop
push
call
mov
add
(bad)
addr16
mov
ins
into
sub
xchg
gs
xor
pusha
dec
add
movs
cmp
mov
adc
xchg
xor
sbb
popa
push
in
mov
fucomip
es
pop
call
pop
pop
fwait
or
movs
cld
retf
inc
xor
xchg
(bad)
push
and
in
mov
adc
add
jne
add
mov
lods
mov
jmp
int3
pop
push
out
cmc
lods
imul
jp
dec
es
inc
leave
adc
and
xor
xchg
sbb
pop
add
sub
pop
cld
test
ss
push
inc
ins
lods
call
adc
cmp
cmc
mov
jo
jecxz
popa
sbb
mov
dec
dec
lods
and
mov
and
sub
push
xchg
inc
sbb
sbb
loop
xor
std
xchg
mov
scas
int
jno
retf
out
ins
stos
ret
push
dec
cmp
mov
rcr
jg
arpl
ds
inc
xchg
mov
mov
gs
add
out
cmps
xor
push
pop
out
movzx
daa
in
fs
pop
pop
movs
jbe
in
sub
pushf
or
pop
adc
imul
data16
retf
inc
jne
cmps
out
sahf
enter
data16
lods
into
pop
setge
push
ss
les
xor
xor
dec
js
push
jne
push
xchg
jns
ins
add
cld
stc
sub
xchg
shr
setne
data16
cmp
jne
mov
fld
sti
enter
lods
jns
aad
and
nop
jb
mov
add
cdq
push
jb
call
jl
sub
pop
cmps
scas
ret
loopne
sbb
pop
add
mov
clc
jb
dec
jge
int
mov
push
mov
pop
in
jle
mov
imul
push
loope
ss
les
dec
out
test
call
pop
out
adc
stc
or
inc
lock
out
sbb
jmp
lahf
std
add
lds
shl
rcr
jmp
dec
add
mov
int3
(bad)
adc
fistp
js
test
add
fsubr
(bad)
jl
xchg
rcl
fdiv
retf
nop
loop
cmp
int
add
std
cmp
int
icebp
dec
xchg
sbb
popa
add
inc
inc
int
jge
loop
cmp
test
je
xlat
mov
jnp
xor
(bad)
pop
dec
push
jns
mov
push
inc
imul
sbb
dec
loope
shr
add
pop
sbb
ret
(bad)
cmp
loope
jge
test
mov
repnz
into
or
jb
test
dec
cdq
pop
test
xchg
dec
fisttp
sub
push
addr16
jl
pop
add
data16
pop
and
pop
ss
pop
jl
aas
sub
psubusb
scas
sbb
push
and
sbb
and
add
hlt
dec
std
dec
jl
cmc
neg
scas
mov
jl
test
adc
pushf
fsubr
sub
fisubr
pop
xchg
adc
test
cld
test
mov
sar
rcl
jmp
jbe
lds
inc
mov
les
or
mov
mov
mov
or
dec
outs
movs
cmp
fmul
das
lods
int
mov
xlat
into
or
adc
add
jl
nop
or
rol
or
cmp
es
rol
xchg
(bad)
cmp
lds
cmp
sub
xchg
add
(bad)
das
vmwrite
push
in
cld
popf
bound
cdq
mov
stos
inc
sbb
pop
out
mov
lock
push
dec
cmc
lds
jmp
ret
fiadd
xor
jp
push
inc
push
sbb
test
xor
loopne
ins
aam
xchg
and
fdiv
mov
xor
add
retf
(bad)
lock
push
inc
push
loope
ret
sub
das
push
(bad)
xchg
cmp
popa
push
loopne
and
cdq
cmp
lock
fwait
ret
mov
mov
(bad)
pusha
cmps
jecxz
jns
and
test
adc
lods
pushf
enter
pop
add
sub
push
sbb
inc
mov
add
sbb
add
ds
cmp
stos
push
xor
jb
outs
dec
adc
out
aam
cli
cmp
mov
mov
sbb
movs
pop
sbb
adc
mov
or
out
popa
jo
aad
pop
push
loope
test
and
xchg
mov
add
pusha
cld
ins
je
arpl
(bad)
hlt
jno
pop
xlat
or
add
mov
cmp
mov
mov
dec
or
cmp
cmp
sbb
and
addr16
xchg
and
fnstcw
jecxz
ds
pop
add
loope
jp
loope
push
into
aas
mov
clc
fimul
(bad)
ins
inc
xor
ins
aam
xor
pop
mov
lods
aam
in
push
add
inc
xchg
or
jne
stc
mov
xor
jae
jne
sti
fisttp
call
pop
sbb
xor
mov
adc
scas
loop
pop
or
fdivr
retf
es
stc
inc
add
lds
adc
in
mov
mov
in
sti
retf
xchg
sbb
or
clc
fnstenv
mov
mov
pop
jbe
enter
out
add
and
fcmovu
cmp
sub
fisubr
popa
pop
add
pop
fisttp
hlt
xor
mov
repz
shl
shl
mov
punpckhwd
mov
not
cmc
cli
or
mov
sbb
rcl
push
xchg
inc
test
dec
cs
stc
movs
sub
repnz
jecxz
add
inc
push
mov
enter
pop
call
fild
out
rcr
fcom
imul
je
hlt
test
cwde
xchg
sbb
inc
call
and
xchg
loope
repz
inc
gs
jns
or
adc
loop
push
xchg
jnp
sub
mov
fdiv
(bad)
in
fdiv
mov
lock
mov
(bad)
cdq
dec
cmp
add
aam
inc
push
cmp
xchg
clc
or
pop
iret
cli
cmp
cmp
push
cdq
retf
adc
xchg
mov
ins
sub
icebp
(bad)
int3
push
sub
mov
jmp
mov
mov
or
nop
jecxz
test
pop
js
mov
sub
and
mov
int
sbb
mov
adc
es
out
pop
pop
test
out
mov
dec
lods
cmp
aad
and
nop
aad
add
adc
and
jns
fsub
or
push
inc
or
xchg
cmp
scas
or
inc
(bad)
jnp
jo
pop
mov
mov
xchg
add
in
sbb
in
adc
in
or
ds
xor
aas
push
and
sub
daa
mov
push
in
rcr
pop
lock
fld
movs
sub
and
push
fbstp
call
repz
lea
shr
ret
cmp
xchg
ret
adc
adc
retf
fld
xor
enter
fbstp
xchg
(bad)
mov
jg
jge
cmps
nop
jmp
addr16
dec
xor
leave
mov
aaa
inc
or
mov
xlat
pop
adc
push
out
aad
lods
xchg
pop
aam
rcr
cdq
aam
iret
xor
sub
test
or
adc
pop
sti
stos
(bad)
pop
call
call
sub
cmps
jge
in
loop
push
and
mov
push
out
gs
(bad)
sbb
dec
cs
sbb
xchg
adc
lds
cld
adc
sub
mov
sbb
sub
ins
inc
imul
inc
push
inc
lds
mov
jmp
push
jb
outs
cdq
jae
adc
mov
out
mov
xchg
mov
leave
(bad)
aam
and
in
jb
pmulhuw
fbld
mov
jecxz
jp
and
or
push
out
jmp
xchg
sbb
xchg
pop
(bad)
mov
out
or
es
mov
shr
arpl
dec
es
ins
jnp
and
in
jl
mov
push
hlt
ror
movs
pop
sbb
or
rol
cmp
xor
cmc
lods
into
mov
adc
sub
xor
ins
adc
cmp
adc
adc
mov
xor
jp
xchg
inc
push
jp
repz
sub
adc
aas
outs
les
ret
inc
out
dec
rol
xchg
js
inc
lahf
push
xor
sbb
lods
or
int
xchg
shl
xchg
arpl
or
pop
mov
fisub
fabs
stos
sbb
mov
pusha
ja
jbe
or
xor
sahf
mov
mov
into
dec
jg
(bad)
xchg
movs
push
xchg
mov
popa
outs
cmp
test
fcmove
sbb
clc
daa
or
imul
xchg
enter
loopne
inc
test
fadd
pop
dec
jle
sub
icebp
mov
inc
outs
ins
and
cmp
pop
add
mov
sub
push
(bad)
movs
push
fwait
outs
adc
pop
push
mov
adc
ret
call
mov
in
push
lds
sub
dec
stos
fwait
adc
mov
sbb
jne
cdq
jnp
push
test
adc
dec
push
pop
push
ud2
sti
outs
dec
cmp
pop
enter
in
cdq
and
cmp
popf
mov
sub
inc
dec
loopne
pushf
cmp
jnp
xchg
leave
jg
mov
sbb
cmp
aam
mov
push
(bad)
jg
or
push
mov
stc
pop
aas
int
mov
in
xchg
scas
mov
std
mov
add
inc
sti
je
ins
hlt
mov
ja
cmps
sti
push
lods
mov
inc
mov
mov
xchg
retf
inc
xchg
or
jo
mov
fdivr
std
xor
push
sbb
fcomp
(bad)
(bad)
retf
or
sbb
ret
add
mov
ficom
into
inc
jbe
pop
mov
add
inc
ficom
mov
inc
clc
add
cmps
jae
loope
mov
std
cmp
xor
jle
movs
dec
sar
repz
cmp
aam
loope
inc
or
ja
mov
xor
jecxz
push
rcl
jae
(bad)
xchg
das
jae
loop
aad
add
aaa
movs
xchg
sbb
mov
dec
xor
inc
push
push
push
test
(bad)
in
mov
sbb
outs
fwait
push
pop
jle
loop
retf
mov
shl
scas
pop
xchg
mov
arpl
aad
jns
sahf
sub
nop
dec
dec
add
mov
mov
retf
es
and
cmp
dec
fidiv
aaa
cmps
ret
das
outs
and
ins
cmp
push
adc
mov
adc
dec
xchg
movs
adc
repnz
maxps
push
push
xchg
add
loope
inc
cmc
into
dec
push
mov
aaa
mov
push
mov
pop
jl
or
adc
xchg
cmps
mov
movs
mov
stos
retf
push
and
outs
int3
aas
fstp
mov
les
push
pop
inc
mov
in
mov
jle
jmp
mov
pop
rcl
adc
jmp
lock
xor
inc
add
addr16
repnz
rol
pop
and
sbb
arpl
test
adc
pop
mov
(bad)
jg
cmp
cwde
in
es
xor
into
push
sbb
or
fidivr
js
xchg
test
adc
and
xor
add
sub
rcr
sar
retf
sub
add
pop
sbb
jb
jg
ins
addr16
and
out
mov
dec
(bad)
pop
ret
ret
inc
cmp
test
int
mov
xor
pop
aaa
data16
sahf
sub
sqrtps
adc
xchg
imul
adc
mov
dec
(bad)
push
and
or
xlat
mov
mov
add
dec
cmc
(bad)
push
(bad)
mul
inc
es
outs
jne
or
xor
sahf
cwde
pop
sub
aas
sbb
push
mov
out
retf
jne
ror
ror
in
adc
call
sub
adc
fcmovnu
push
int3
sub
and
fisub
data16
retf
push
nop
adc
hlt
jp
push
(bad)
and
sub
add
mov
fistp
mov
sbb
pop
shl
je
sbb
loope
or
xchg
sbb
mov
xor
xlat
test
dec
shl
repnz
inc
(bad)
or
je
aas
xchg
clc
inc
jmp
cmp
neg
mov
dec
add
mov
jp
push
sbb
ja
xchg
dec
mov
jnp
or
push
retf
(bad)
cdq
hlt
dec
clc
fcomip
(bad)
or
mov
sub
mov
mov
xor
mov
inc
dec
inc
or
xor
fild
mov
jl
or
cmp
xor
sub
js
pop
xor
fs
mov
and
ins
out
movs
pop
mov
adc
fwait
adc
push
push
inc
jp
cs
out
cdq
mov
inc
inc
fs
sbb
mov
scas
push
scas
fsub
lods
daa
push
adc
imul
sbb
xor
sbb
outs
out
cwde
aad
aam
sbb
xchg
mov
sub
fs
dec
xchg
mov
mov
mov
fs
iret
(bad)
je
adc
cmp
mov
xchg
xor
sub
shl
jbe
jmp
shr
leave
enter
jl
dec
mov
arpl
mov
fimul
push
(bad)
neg
pop
hlt
add
ins
cmp
jno
and
xchg
jne
and
into
repnz
inc
(bad)
sbb
inc
lods
sti
mov
cmps
sbb
ret
jl
xchg
mov
pop
cmp
out
mov
movs
adc
int
or
nop
cs
daa
(bad)
out
add
(bad)
adc
sbb
test
inc
hlt
(bad)
loopne
add
cmps
ja
iret
cmps
push
test
sti
jg
jg
fcmovnb
retf
pop
hlt
and
ins
stc
push
pop
add
jp
add
repz
out
daa
mov
dec
popa
add
cmp
push
xchg
call
loop
enter
cwde
es
hlt
pop
in
imul
and
jmp
dec
cmp
gs
lods
sar
mov
sbb
das
stc
movs
gs
ins
or
mov
inc
push
mov
xor
add
cmp
out
push
ds
mov
bound
lahf
lock
ret
cmp
cmp
ret
adc
enter
stc
push
lea
mov
inc
adc
ret
dec
sub
jl
mov
push
ret
xor
outs
lea
test
movs
or
stc
arpl
push
adc
jo
jo
rol
mov
and
(bad)
je
dec
rcr
jge
adc
aad
mov
cld
rcl
xchg
mov
arpl
ja
fst
ins
mov
pop
add
mov
jl
(bad)
rol
mov
sbb
pushw
outs
jne
jmp
dec
sub
sahf
stc
dec
jle
sbb
mov
ins
sbb
pop
push
les
in
sbb
nop
or
popa
pop
sbb
mov
fwait
inc
inc
nop
stos
sti
lock
gs
mov
push
lea
ss
pop
mov
or
aad
pop
arpl
or
sub
jae
addr16
pop
lock
lock
les
aad
(bad)
pop
mov
dec
stc
hlt
inc
ds
out
xchg
mov
add
adc
shl
aaa
xchg
mov
jmp
call
(bad)
jb
jbe
adc
pop
mov
retf
jbe
dec
jle
mov
or
push
xchg
mov
sub
pop
add
cld
ret
fcomp
or
ficom
mov
mov
jecxz
stc
popf
mov
push
xchg
or
aaa
mov
dec
sbb
fsubr
jae
xor
retf
icebp
ins
or
and
(bad)
ss
ror
inc
push
add
sbb
or
sub
pop
cwde
jmp
lds
mov
mov
pop
clc
rcl
push
sub
movs
std
jmp
retf
push
lahf
data16
sbb
sar
ins
and
add
add
add
jl
cmp
xchg
pushf
jae
xchg
push
inc
and
sbb
mov
fwait
stos
shl
add
ins
and
push
cmp
dec
jl
and
inc
ins
mov
popa
hlt
leave
cdq
adc
movs
sbb
mov
push
mov
pop
pop
(bad)
je
cwde
ror
adc
movs
psrlq
add
lock
stos
(bad)
int3
sub
sahf
jecxz
and
adc
xchg
iret
call
bound
test
mov
cmp
jbe
mov
test
sbb
nop
ins
into
inc
aaa
nop
fild
pop
xchg
movs
xchg
jbe
and
sbb
cmps
dec
lods
adc
inc
cmp
xor
data16
cmp
movs
test
in
cmp
jge
dec
cmp
ja
mov
cmp
dec
add
out
stos
ror
ja
jge
add
into
mov
(bad)
jnp
ret
stos
loop
xchg
mov
inc
mov
fmul
sub
call
pop
in
and
fnsave
jecxz
popa
mov
push
and
dec
ret
call
sub
fcomp
and
stos
jns
not
js
nop
inc
jmp
ror
add
ret
cmp
movs
out
sbb
push
shl
adc
sbb
sahf
aaa
enter
jmp
add
xchg
jae
stc
jno
mov
cmps
clc
lods
data16
iret
je
div
xchg
push
xchg
dec
sti
push
mov
je
lahf
sbb
sub
(bad)
push
pop
ror
out
dec
in
arpl
xor
cmps
sbb
and
in
pop
mov
fld
dec
sbb
sahf
jg
xchg
pushf
add
ret
call
(bad)
fdiv
adc
xor
repz
push
push
(bad)
sbb
xchg
mov
pop
rep
pop
jnp
(bad)
xchg
dec
mov
and
sahf
and
jae
mov
adc
fdiv
pop
rcr
nop
and
jb
dec
sti
stc
adc
pusha
push
xor
test
ret
cmp
rcl
cmp
arpl
fnstcw
gs
push
mov
add
(bad)
out
mov
sub
jmp
mov
in
xchg
push
and
push
movs
popa
cmp
ins
xchg
aaa
xchg
push
cld
and
dec
retf
leave
dec
aas
ret
push
or
ins
pushf
xor
stos
mov
(bad)
rcl
sub
dec
pop
and
add
aas
pop
sbb
pop
imul
imul
pop
pop
mov
push
add
mov
push
mov
shl
call
dec
xor
jae
pop
xrelease
mov
movs
popa
daa
mov
sub
add
push
out
mov
test
pushf
sar
mov
fmul
jmp
lea
pop
sti
test
mov
jge
retf
dec
xlat
int3
xor
out
cmp
adc
mov
sbb
jbe
scas
mov
add
push
fucom
arpl
pop
addr16
mov
adc
jmp
out
(bad)
std
sub
daa
clc
cs
rol
push
inc
ret
popa
(bad)
dec
inc
or
jge
xor
sbb
jns
daa
repnz
(bad)
fcomp
cs
shl
cmp
sbb
jbe
push
or
and
inc
inc
imul
jnp
aad
cs
sbb
inc
mov
xchg
fld
icebp
(bad)
loop
inc
push
cmp
push
sbb
mov
xor
xchg
into
retf
adc
push
hlt
addr16
mov
dec
pop
xchg
ins
pop
int
test
into
lock
std
mov
push
pushf
sub
pop
push
cld
sbb
jne
inc
fidivr
gs
push
and
xchg
xor
clc
mov
sqrtps
sbb
nop
sti
fsub
jmp
int3
xchg
mov
scas
fdivr
pop
cmp
cld
sub
je
call
std
call
xchg
cmp
add
test
mov
push
mov
adc
enter
add
push
imul
adc
stos
out
repnz
push
and
rol
jnp
test
retf
fwait
xchg
jecxz
in
jle
sbb
mov
sbb
xor
pop
fsubr
loopne
ret
cwde
jae
(bad)
mov
js
in
js
test
movs
mov
cmp
fnsave
push
xchg
icebp
jne
sub
sahf
jle
mov
ret
sahf
cdq
ror
adc
adc
add
ror
in
aam
outs
repz
mov
aaa
sbb
mov
ins
mov
lahf
push
jae
add
pop
push
add
dec
adc
pop
xchg
out
dec
inc
sub
mov
(bad)
outs
mov
mov
call
movs
loopne
inc
pop
xchg
clc
(bad)
jnp
cmps
mov
mov
out
jb
pop
mov
aaa
fwait
aam
cmp
sub
fcom
and
xchg
and
jmp
cld
sbb
je
xchg
jo
retf
or
ins
test
push
jnp
inc
push
adc
pop
test
pop
mov
hlt
jmp
aad
ins
mov
xchg
dec
out
add
lods
fs
mov
leave
jns
sbb
dec
call
push
add
xchg
dec
cmp
and
fs
cmc
or
add
stc
lods
stos
adc
push
into
cmp
inc
or
out
sub
jl
inc
mov
call
out
cmps
or
daa
lds
xor
and
pop
pop
adc
fimul
dec
mov
scas
sub
xchg
ficom
shr
adc
icebp
or
(bad)
mov
sbb
inc
data16
jmp
pop
sbb
dec
add
sbb
jecxz
jmp
call
fild
jno
cdq
outs
xor
dec
dec
ss
adc
mov
mov
pop
mov
and
and
int
xchg
pop
xchg
mov
push
or
ins
add
jns
push
jg
sar
or
mov
rcl
retf
jo
repnz
ficom
gs
cmp
or
retf
repz
xchg
pushf
mov
and
fist
out
pop
ss
fist
scas
in
xor
cmp
pop
ss
js
cs
in
inc
xchg
or
imul
xor
or
inc
(bad)
sbb
pop
or
stos
loop
add
pop
or
imul
xor
cdq
sbb
scas
ret
lods
pushf
and
dec
xchg
xchg
jno
popa
fiadd
push
jbe
fiadd
cmp
das
ret
mov
cli
mov
xacquire
cmc
mov
sub
lds
push
movs
push
movs
add
dec
sbb
jmp
daa
loope
xchg
push
xor
retf
out
jl
xor
push
stc
jmp
repnz
bound
into
data16
xor
or
adc
fcomp
push
arpl
jle
repz
jp
or
icebp
push
xor
retf
pop
mov
push
fidivr
xor
xchg
mov
jnp
push
xchg
push
fadd
adc
clc
(bad)
jo
sar
xchg
xlat
ins
push
popa
pop
mov
jmp
push
lods
or
imul
std
xchg
pop
jmp
lock
scas
mov
ins
dec
aad
dec
in
call
jbe
nop
mov
sahf
pop
and
fnstenv
push
ret
fisubr
outs
add
sti
and
ins
push
mov
mov
lods
call
cwde
movs
data16
ret
sbb
fidivr
push
mov
sbb
inc
cmp
sahf
repnz
movs
sahf
bound
inc
adc
xchg
mov
sub
mul
inc
into
pextrw
push
dec
pop
(bad)
or
mov
imul
inc
int3
cdq
sbb
push
popf
ja
stc
stos
fcom
mov
xor
mov
(bad)
ja
lock
mov
xchg
pop
cdq
xor
mov
fs
test
gs
mov
out
lds
(bad)
cli
je
jbe
push
push
icebp
or
sub
(bad)
pop
jmp
dec
ror
test
cmps
scas
int
pop
pop
dec
mov
push
sbb
shl
shl
jne
jmp
arpl
icebp
dec
in
int3
imul
cmp
pop
add
jecxz
data16
sbb
aad
out
loop
jp
scas
jl
mov
cmp
mov
mov
movs
jnp
das
mov
aad
sub
sbb
aad
ret
mov
test
sub
dec
mov
mov
das
xlat
retf
fidivr
icebp
outs
ds
movs
lods
or
fbld
jle
or
or
sti
out
sbb
cwde
int
iret
jmp
jb
ss
mov
mov
not
loop
or
ret
lock
inc
das
in
into
pop
push
test
aaa
cmp
mov
and
push
ds
lahf
cld
fld
(bad)
add
dec
(bad)
mov
fnstsw
pusha
fdivrp
mov
jo
sti
pop
add
lock
add
std
mov
mov
(bad)
shl
fs
xor
cli
js
cmpps
sbb
push
push
add
int3
pop
jge
and
adc
imul
icebp
js
pop
sub
and
sbb
ror
adc
inc
jne
in
pusha
push
aad
xor
rcl
icebp
mov
mov
scas
je
or
push
mov
xlat
add
pusha
and
fwait
cmp
stos
ror
std
shl
stos
jge
cwde
sbb
or
jp
in
sub
jmp
inc
cmp
fcom
or
jbe
adc
sbb
push
adc
or
sub
xor
into
mov
jmp
out
push
push
cmp
jge
mov
idiv
adc
cmps
mov
es
lahf
mov
out
outs
mov
jg
add
sahf
sbb
fidivr
arpl
push
pop
pop
stos
inc
cli
cmc
adc
je
(bad)
sbb
mov
cmp
inc
das
inc
mov
test
mov
leave
cmp
and
add
or
cwde
mov
dec
stos
push
ja
(bad)
(bad)
pushf
aad
mov
pop
mov
jbe
push
sbb
aaa
and
sbb
daa
or
mov
hlt
adc
jecxz
arpl
mov
lock
mov
retf
xor
das
sti
in
xor
stos
add
mov
jle
add
or
scas
into
faddp
push
test
add
mov
jne
int
adc
fild
lods
sbb
cmp
loope
mov
jg
out
mov
push
jge
mov
mov
or
push
and
mov
add
xchg
push
mov
adc
stc
jg
dec
adc
mov
inc
xchg
jmp
push
(bad)
aas
fmul
test
cs
cmc
jge
(bad)
bound
je
mov
es
push
retf
lock
repnz
ins
iret
mov
jl
add
xchg
mov
sbb
adc
adc
test
int
cmc
jle
out
iret
sub
(bad)
into
xor
sahf
mov
and
retf
push
jp
scas
cmp
cmp
jmp
mov
movs
pushf
mov
pop
dec
mov
jle
xchg
push
xchg
push
cdq
push
push
sub
xlat
jp
movs
test
mov
mov
aaa
jo
mov
imul
mov
push
mov
xor
lea
jo
loopne
(bad)
imul
mov
dec
sbb
div
pop
in
int3
ins
das
cli
mov
fnstsw
scas
out
push
fisub
enter
rcr
in
fs
wbinvd
int
jne
dec
out
in
adc
fnstenv
adc
and
pop
mov
(bad)
call
leave
adc
inc
shl
out
add
pop
pop
xor
jne
ror
ins
mov
data16
cmp
loop
and
dec
fs
pop
dec
(bad)
in
sbb
lods
jp
cdq
repz
mov
out
movs
jo
or
sub
sbb
add
dec
jmp
mov
lock
repz
and
cmps
xor
outs
fs
and
test
rol
out
mov
push
leave
(bad)
aas
fst
les
(bad)
push
adc
dec
jmp
jmp
pop
add
jmp
adc
cld
sbb
xor
in
call
daa
pop
int
fldenv
mov
xlat
rcr
data16
cwde
scas
jl
sub
and
xchg
mov
inc
inc
adc
les
enter
sub
popa
inc
(bad)
enter
cmc
dec
lock
lods
stos
(bad)
bound
and
imul
mov
cmp
mov
or
and
dec
ins
fsubr
mul
outs
mov
and
sub
xchg
(bad)
mov
or
inc
fcom
pusha
push
push
or
jle
movs
add
sbb
ror
dec
or
inc
pusha
ret
sbb
mov
das
add
mov
or
gs
fcmovnu
jle
in
jle
sti
test
shl
outs
mov
mov
push
test
sti
sbb
mov
call
add
fwait
test
sar
pop
iret
jnp
dec
adc
fcom
and
mov
jg
lods
div
test
je
push
or
movs
ins
orps
dec
pop
dec
aam
or
test
sti
jp
xchg
xor
mov
or
and
(bad)
mov
pop
lods
icebp
pop
cs
call
das
ins
jns
or
out
or
out
jmp
lea
mov
int3
stos
scas
push
mov
fdivrp
push
or
hlt
test
jg
scas
jno
push
mov
fiadd
xor
std
pushf
xor
ficomp
outs
ret
out
or
add
iret
loopne
cli
xchg
imul
cli
test
add
mov
inc
rcr
push
adc
cmp
(bad)
xor
cmp
sar
icebp
fst
mov
mov
xor
dec
mov
jl
xlat
mov
mov
inc
addr16
mov
out
fbstp
xor
pop
out
mov
dec
jno
icebp
arpl
lahf
inc
jmp
int
(bad)
mov
outs
jo
mov
xor
add
cmp
shr
mov
aaa
sub
(bad)
jb
(bad)
pop
sar
in
(bad)
repnz
push
pop
aam
mov
retf
inc
or
cmp
lea
fst
push
mov
xchg
pop
cli
jmp
scas
and
pavgw
inc
cmps
pop
or
pop
dec
test
arpl
inc
data16
bound
mov
cmps
int
add
lods
or
add
xchg
cs
outs
sub
cmps
rcr
iret
scas
retf
sub
inc
jg
dec
lea
pop
cwde
aam
loope
gs
mov
ja
mov
push
xchg
je
fld
gs
stos
mov
(bad)
jmp
mov
mul
pushf
enter
pop
cwde
cmp
pop
mov
mov
cmp
vdivps
lea
fisttp
push
ds
xor
xchg
jb
loope
mov
cmps
xchg
ret
adc
adc
test
mov
icebp
mov
aad
pushf
cli
jbe
and
(bad)
(bad)
sub
test
cdq
adc
sbb
inc
cmp
mov
lock
lea
dec
dec
jbe
sub
pop
sbb
rcl
mov
fwait
cdq
mov
pop
js
(bad)
fnstsw
mov
out
jo
xor
xor
push
sahf
out
pusha
mov
adc
ret
cwde
jg
(bad)
xchg
test
fscale
aas
mov
gs
mov
sub
inc
pop
mov
lock
popf
add
xor
sub
cmps
ins
test
ja
in
cld
sub
sub
jp
(bad)
pop
add
inc
xchg
test
aam
xchg
pop
xor
jbe
(bad)
in
mov
inc
sub
jecxz
shl
or
push
popf
fs
mov
push
sub
xor
outs
adc
sub
mov
dec
ss
mov
lds
push
outs
lods
mov
(bad)
sbb
mov
push
rcr
shl
hlt
and
pop
pop
js
xchg
jmp
sub
fbld
jge
mov
das
scas
test
scas
inc
sbb
push
xor
cmp
or
inc
loope
xor
add
scas
pop
cs
xchg
test
inc
mov
jecxz
das
jg
dec
mov
fadd
xor
adc
jg
xchg
and
loopne
jge
pop
jae
xchg
and
cmps
mov
xor
jmp
cli
xchg
je
xchg
sub
leave
and
lods
sub
xor
and
mov
call
bound
arpl
sahf
add
cwde
mov
jno
push
cmc
fmul
ds
mov
fisttp
ins
pop
pop
in
ins
mov
call
loopne
test
pusha
jecxz
or
jle
(bad)
fmul
jnp
jo
cmps
ins
sti
ss
or
mov
xor
add
or
shl
add
stc
or
add
in
scas
mov
loopne
or
jb
sub
dec
jl
push
ins
jge
inc
push
xchg
mov
int
enter
in
cmc
and
loop
xchg
bound
fs
mov
mov
pop
mov
mov
push
or
adc
inc
sbb
fwait
mov
sar
imul
cdq
(bad)
xchg
add
mov
sub
movs
fnstsw
fidivr
fcomip
aas
call
stos
pop
sbb
fsub
out
gs
mov
out
adc
aad
push
ins
dec
in
xchg
sub
sar
lea
xor
xor
shl
mov
adc
mov
pop
dec
push
adc
lods
pop
mov
dec
or
fistp
outs
nop
mov
mov
mov
mov
push
repnz
push
pushf
jmp
mov
(bad)
rol
mov
jp
pop
push
and
not
fs
(bad)
push
push
lock
scas
ret
adc
movs
xchg
xchg
inc
mov
loop
pop
xchg
and
pop
jp
cld
shl
repz
popa
jmp
cmps
xchg
cli
add
adc
enter
sub
dec
sub
mov
stos
stos
cli
sub
push
sbb
mov
loopne
into
aaa
xchg
push
mov
loopne
inc
daa
xor
push
mov
jge
jmp
enter
fadd
shr
mov
ins
aas
xchg
mov
rol
shr
cmps
cld
aaa
sbb
dec
nop
inc
scas
(bad)
dec
mov
push
mov
movs
pop
retf
and
sahf
cs
inc
pop
es
fisttp
retf
stos
mov
push
mov
pop
ins
mov
(bad)
fild
call
lods
dec
shl
mov
xchg
sahf
enter
push
lds
mov
aad
mov
dec
mov
mov
gs
mov
mov
(bad)
or
adc
add
getsec
pop
loop
pop
push
xchg
int3
aam
mov
pop
aaa
cmp
xchg
icebp
jno
pushf
dec
ja
jge
enter
and
ja
jne
xchg
mov
mov
inc
xlat
inc
outs
leave
lods
das
pop
rcr
jge
pop
aas
leave
jmp
scas
ss
cmp
cbw
or
retf
gs
dec
pop
ja
clc
lds
adc
retf
xor
pop
retf
adc
sub
inc
je
adc
sbb
jle
sbb
pop
stc
or
push
cs
sbb
sbb
cmp
fdiv
inc
mov
adc
in
inc
jp
sub
fisubr
mov
xor
or
fistp
cmp
xchg
fsub
cmps
in
cld
(bad)
aaa
fwait
xor
cs
fld
adc
mov
xchg
dec
lods
mov
scas
pop
push
adc
not
(bad)
ins
jo
dec
jb
hlt
push
sahf
dec
xor
mov
repz
pop
mov
xor
lods
mov
hlt
fst
lea
cwde
ret
rol
mov
outs
lods
pop
out
xor
shl
and
cmps
loope
or
outs
(bad)
data16
cmp
sub
jg
xlat
(bad)
std
gs
call
pop
mov
(bad)
sti
fcom
ret
add
stc
dec
inc
cmps
enter
cmps
add
dec
pop
mov
outs
loope
sub
popf
pushf
out
push
inc
cmps
cli
daa
inc
stos
test
jns
in
mov
(bad)
jp
adc
arpl
(bad)
rol
in
cmp
pop
dec
pop
fucomp
pop
les
sar
and
les
ret
mov
mov
scas
pushf
and
test
jnp
xor
xchg
(bad)
jge
cmps
mov
aaa
mov
add
icebp
and
xor
adc
push
(bad)
and
loop
stos
ja
sub
inc
push
sub
jle
popa
in
popf
mov
adc
push
dec
int
mov
cmp
fldenv
scas
sbb
or
mov
(bad)
cmp
jmp
fst
call
dec
mov
repnz
add
or
rcl
retf
jb
loopne
xor
xchg
(bad)
push
out
outs
mov
xchg
rcl
mov
into
je
push
or
adc
sub
jp
mov
and
xor
aad
fisttp
scas
and
ins
and
jns
jmp
or
fucom
and
es
test
std
or
cmp
mov
sub
fucom
icebp
push
jb
inc
movs
rcl
sbb
mov
jmp
xchg
xchg
aas
and
test
fld
xchg
into
gs
es
and
in
jne
das
xchg
(bad)
leave
mov
xchg
das
ja
xor
shl
aad
mov
scas
pop
sti
sub
push
inc
mov
dec
test
cli
mov
(bad)
popf
cwde
stc
in
xchg
cmp
outs
mov
cmp
hlt
sub
mov
push
scas
mov
jecxz
pusha
dec
retf
leave
adc
sti
mov
and
fimul
lods
jg
int3
out
push
clc
imul
and
fcomp
sub
pushf
imul
adc
inc
mov
jp
retf
retf
(bad)
jl
push
dec
(bad)
mov
ss
jle
jno
loope
loopne
cmp
jmp
inc
sub
nop
shr
in
fsub
dec
xor
fs
arpl
ins
jl
fcmovu
cmp
pop
jns
ins
add
xchg
push
test
push
push
xchg
push
out
imul
xchg
adc
mov
sub
xor
mov
loop
push
push
in
into
push
push
cli
stos
leave
(bad)
cld
popf
cli
dec
inc
fdivr
push
cdq
or
lock
cmc
jecxz
repz
pop
stc
pop
cmp
add
test
fldenv
loop
mov
jge
test
pop
in
pop
dec
in
bound
ss
add
ds
nop
cmp
cmc
xor
push
push
pop
or
or
mov
push
dec
xchg
dec
in
sbb
out
ror
adc
cmp
gs
adc
rcl
hlt
adc
daa
enter
cmc
nop
test
jmp
add
outs
stos
(bad)
mov
ds
inc
add
into
jl
aas
movs
xor
jecxz
in
add
sbb
inc
push
sub
cld
inc
nop
or
mov
inc
and
bound
enter
dec
pop
mov
hlt
js
pop
clc
cmp
push
add
mov
dec
es
ret
sbb
retf
xor
pop
imul
sbb
enter
dec
jns
repz
push
ins
dec
adc
out
cmp
jns
mov
xor
push
aam
retf
sub
adc
or
pushf
ins
test
stc
sbb
(bad)
aam
arpl
push
jp
test
cs
add
xchg
dec
pushf
jl
cmps
addr16
repz
mov
in
cmps
add
sbb
or
xchg
jne
cli
sbb
data16
sbb
push
sbb
addr16
out
call
xor
les
mov
outs
jae
jbe
push
dec
pop
repnz
xor
and
icebp
test
push
stc
adc
mov
ret
outs
mov
and
sbb
mov
les
rol
xchg
aaa
bnd
mov
inc
add
int
int3
inc
jns
int3
pop
xor
pop
jb
(bad)
cld
pusha
or
inc
fsub
mov
mov
cdq
jne
jecxz
push
mov
dec
inc
xchg
jg
rol
popf
rol
mov
pop
cmps
mov
jle
jae
pop
and
inc
xlat
xchg
xor
xor
mov
jb
fdiv
mov
stos
pop
adc
lahf
pop
aaa
mov
ins
mov
and
ins
int3
icebp
pop
lods
imul
jmp
push
inc
lahf
jno
test
sub
pop
adc
fs
cli
inc
xchg
add
or
daa
sar
fcom
xlat
push
movs
mov
popa
xlat
xor
adc
jnp
and
sub
retf
or
inc
push
dec
mov
inc
(bad)
pop
xchg
sub
dec
cs
mov
loope
mov
(bad)
jecxz
mov
addr16
inc
mov
jecxz
sbb
(bad)
xchg
in
mov
jp
push
or
aad
push
ins
(bad)
pop
retf
out
pop
pop
adc
ss
in
hlt
ds
mov
push
mov
mov
sbb
fdivp
mov
pop
mov
push
push
in
add
xchg
cmp
ret
jne
(bad)
or
leave
inc
mov
mov
(bad)
fdivr
rcpps
je
adc
xchg
push
repz
fldcw
fld
jmp
push
imul
data16
movs
cdq
ins
test
or
iret
aaa
mov
sahf
pop
sub
cmc
mov
sbb
sbb
and
jmp
not
pop
xchg
outs
lds
nop
inc
mov
and
int3
mov
adc
xor
mov
out
cld
ja
push
arpl
cmp
add
mov
cs
sub
shl
pop
fdivr
mov
repnz
ja
jecxz
jp
dec
not
xor
out
fcom
ss
pop
or
call
ficomp
cli
or
pusha
add
push
dec
add
xchg
mov
mov
jle
js
gs
das
(bad)
mov
mov
clc
push
daa
xor
xchg
enter
jle
loopne
push
jns
adc
fidivr
adc
out
inc
pop
add
aaa
lock
pop
repnz
fnsave
enter
paddsw
sub
xor
neg
mov
das
imul
into
adc
sub
adc
xlat
dec
xchg
mov
sub
lahf
loope
lods
ins
lea
adc
push
mov
cwde
(bad)
sub
pop
push
leave
mov
xchg
jno
scas
stos
aaa
cwde
and
(bad)
jne
add
leave
xlat
push
add
jmp
cmp
push
pop
add
test
jp
test
sub
cmp
push
fild
push
ins
stos
rol
rol
retf
ret
sub
sbb
bt
out
xchg
jae
lods
pusha
aad
mov
sbb
das
or
mov
and
std
pop
stos
arpl
or
add
fsubr
out
sub
mov
pop
mov
adc
inc
push
cmp
add
xchg
test
mov
pop
test
sbb
jae
pop
loopne
or
dec
(bad)
div
aam
into
int
repnz
ret
ins
std
ss
mov
fsubp
mov
adc
dec
int
int3
inc
mov
push
pop
mul
jbe
enter
js
push
js
repnz
and
in
inc
mov
xor
dec
mov
shr
mov
fdivr
mov
cs
and
mov
dec
mov
stos
pop
mov
fs
out
bound
into
pop
arpl
outs
add
mov
lods
popf
xchg
mov
add
ins
jne
cmp
ror
mov
les
pop
adc
push
popf
push
push
mov
cmp
pop
fs
add
das
aad
jb
dec
add
mov
push
(bad)
mov
hlt
mov
fisttp
scas
push
call
loop
inc
dec
aad
loop
out
mov
add
pop
push
dec
xchg
push
inc
sub
xor
lods
mov
fisub
cmp
mov
cli
scas
dec
imul
dec
or
dec
xor
jmp
ret
int3
and
fmul
ror
ds
outs
nop
cmp
mov
div
cmp
jl
xor
mov
hlt
sbb
fnsave
es
dec
inc
mov
jbe
aaa
push
lods
in
add
out
loop
cdq
cld
sub
mov
add
(bad)
popa
stos
lods
sub
inc
push
lds
dec
or
repz
cmp
inc
add
inc
rol
dec
or
repz
dec
ins
sbb
adc
in
mov
lods
ficomp
or
xor
lods
jmp
imul
call
int
mov
xlat
mov
and
xor
xchg
ss
daa
pop
xchg
lea
and
addr16
push
js
mov
jecxz
(bad)
sbb
inc
clc
(bad)
fld
mov
mov
sbb
jo
jle
in
arpl
je
or
mov
adc
in
fs
stc
cmp
cmp
loope
enter
pop
mov
jge
lods
add
jb
pop
cmp
nop
mov
inc
xor
xor
dec
inc
pop
rcl
dec
jno
cmp
inc
pop
add
inc
dec
mov
pop
in
dec
outs
push
sbb
int3
movs
push
ret
pop
adc
pop
hlt
cmc
mov
xchg
lock
call
mov
pop
and
out
sub
xor
out
push
shr
sbb
les
retfw
out
sbb
repz
stos
push
and
stc
dec
sbb
lods
shl
clc
or
lods
xor
push
dec
sbb
inc
inc
stc
sbb
mov
pop
aaa
rcl
push
mov
add
push
into
pop
or
sub
mov
dec
add
(bad)
fsub
in
pop
cmp
sbb
int
jb
and
adc
mov
pushf
mov
mov
jle
test
fsub
xor
movs
push
loopne
adc
int
inc
lea
xor
call
loop
mov
cmp
add
inc
mov
dec
scas
xchg
fisubr
scas
push
rcr
fidivr
and
or
xchg
mov
or
xchg
pop
inc
xor
xor
aam
push
das
mov
ror
popa
mov
and
ret
adc
je
test
push
shl
daa
pop
push
add
popf
pop
fcmovb
fistp
or
inc
popa
(bad)
fs
push
mov
sbb
xor
cmp
or
mov
xor
adc
(bad)
data16
mov
movs
data16
das
(bad)
pop
movs
nop
sub
rcl
dec
ret
and
cmp
dec
loopne
aad
jmp
mov
pop
and
cmp
fiadd
mov
pop
shl
push
jmp
mov
mov
mov
aas
pop
test
mov
popa
add
pop
ja
fldcw
aas
fbstp
xor
push
push
xchg
mov
mov
mov
xchg
adc
mov
dec
pop
sbb
lds
push
(bad)
mov
clc
cmp
div
dec
dec
in
mov
shl
push
adc
sub
lods
and
adc
cmp
cmp
cli
jg
aad
in
mov
xor
and
jb
adc
mov
sbb
inc
test
(bad)
cmp
jno
pushf
xlat
fwait
xchg
les
icebp
xchg
lea
add
enter
fdiv
scas
lds
in
push
adc
and
movs
pop
aad
push
mov
loopne
ja
loope
mov
xchg
or
pop
xor
mov
or
cli
repz
shl
and
(bad)
xchg
lods
adc
test
inc
pusha
(bad)
lock
push
icebp
ins
xchg
mov
outs
nop
add
outs
push
adc
fidivr
outs
fidivr
fbstp
repnz
push
cmp
data16
out
sbb
pop
mul
test
jl
dec
(bad)
dec
sbb
cmp
inc
dec
dec
icebp
push
jne
loopne
test
pop
or
hlt
inc
mov
mov
pop
xor
arpl
imul
int3
inc
fwait
popa
jbe
movs
test
jmp
add
out
div
cmps
shl
icebp
mov
loop
mov
push
pop
or
fmul
scas
ja
pushf
xor
les
mov
xor
cwde
(bad)
call
dec
clc
lods
(bad)
add
jmp
daa
inc
push
cdq
cmp
mov
push
jb
lock
fsub
jo
push
enter
or
out
jp
inc
loope
push
data16
mov
sti
sbb
mov
or
push
adc
pop
shl
or
dec
xor
pop
nop
inc
pop
call
in
sti
jne
or
dec
nop
mov
aad
lds
scas
and
mov
pop
ret
hlt
cmp
push
loope
out
les
cmps
xchg
jg
cs
jmp
mov
jae
bound
adc
xchg
ins
mov
sbb
pop
ss
jle
ja
jle
leavew
add
dec
(bad)
mov
call
cmps
or
push
pop
cmp
mov
ficomp
popa
repnz
lahf
jno
sub
(bad)
loope
add
idiv
sbb
pop
int
dec
inc
outs
add
addr16
out
into
sbb
fistp
femms
mov
jae
xor
lods
into
stos
ins
pop
push
xlat
cli
and
scas
mov
inc
jmp
push
out
outs
xchg
add
in
mov
shl
loop
jecxz
(bad)
xchg
call
je
fstp
rcr
jmp
nop
sbb
sub
xor
in
jp
dec
inc
ficom
xchg
cdq
mov
aad
push
dec
and
lods
xor
jl
hlt
fcom
and
push
fnstsw
dec
pop
sub
sbb
test
cmps
xor
into
movs
mov
pushf
jo
mov
cmp
pop
popf
push
dec
or
out
or
not
jp
lahf
mov
jecxz
imul
mov
xor
addr16
lock
aas
pop
retf
push
nop
ds
sub
fild
loope
rol
jns
in
cmp
gs
push
pop
aad
xor
in
daa
sub
mov
or
jmp
xchg
mov
xor
(bad)
shl
mov
aaa
jp
mov
or
hlt
shl
sbb
sub
and
or
xchg
cmp
(bad)
cmp
mov
leave
jmp
aad
sahf
or
test
sub
(bad)
and
adc
xor
imul
sar
dec
movs
push
jg
dec
xor
jecxz
pusha
or
pusha
add
iret
mov
mov
cmp
xchg
sti
adc
xor
jo
xchg
push
fs
cdq
div
ds
fiadd
jne
pop
data16
loope
pop
pop
or
rol
cmp
add
adc
ret
inc
dec
mov
or
inc
shl
imul
push
es
mov
xor
sub
cwde
sahf
add
xlat
jne
push
fwait
movs
enter
add
mov
pop
xchg
and
aad
in
mov
mov
jmp
pop
inc
out
and
push
stc
xchg
mov
aaa
mov
mov
push
(bad)
aad
int3
mov
into
(bad)
cmp
aas
cmp
xor
nop
mov
push
cmp
push
lea
dec
jmp
not
sbb
mov
mov
lods
(bad)
sbb
push
aad
ds
jne
jo
dec
aad
fcmovnu
fst
in
call
mov
lods
mov
pop
xchg
bound
xor
sbb
adc
jl
outs
jae
aaa
add
cs
shr
add
nop
jle
out
mov
adc
gs
stos
in
and
(bad)
aaa
in
icebp
outs
inc
popf
outs
push
sbb
pop
nop
lds
xlat
popa
jnp
mov
jb
cmovnp
pop
xor
sbb
mov
stos
outs
fdivr
mov
or
and
in
shl
ins
out
in
push
cmp
mov
or
lods
cmp
jle
jne
adc
sbb
dec
sbb
movs
jg
or
dec
fidiv
add
push
dec
jne
stc
xchg
icebp
pop
je
cmps
repnz
stos
and
fs
mov
or
adc
jge
or
push
dec
or
mov
pop
daa
jp
jg
xchg
cmp
xor
cmp
icebp
mov
ins
sub
js
clc
pop
sti
das
cmp
sbb
push
outs
xor
data16
jmp
or
in
cmp
jp
adc
shr
or
fadd
sbb
and
aaa
xchg
xor
mov
mov
dec
lea
shl
jecxz
sub
in
shr
movs
(bad)
shr
jae
jb
pop
jne
xchg
jbe
lds
cld
sub
mov
jmp
add
lahf
push
inc
movs
and
inc
adc
lahf
jbe
into
mov
or
sbb
add
dec
fidiv
mov
pop
or
test
xchg
jnp
fdivr
pop
cld
imul
pop
mov
xchg
mov
jecxz
xlat
sbb
movs
arpl
popf
in
sbb
dec
loop
sahf
sbb
and
ds
jp
mov
jbe
test
ret
test
jns
cdq
out
(bad)
xchg
adc
dec
into
adc
scas
xchg
sbb
cmp
add
cmp
out
daa
ins
(bad)
mov
shl
xchg
mov
xchg
mov
fwait
xor
dec
(bad)
pop
xchg
xor
daa
cmps
movs
sbb
aaa
sbb
adc
dec
or
loope
out
or
pop
(bad)
jno
in
into
inc
xor
push
mov
xor
pusha
cmc
push
bound
movs
call
sbb
or
scas
xor
lahf
mov
cs
mov
mov
fld
pop
push
mov
adc
aam
and
dec
jle
jne
stos
test
lock
ror
adc
aam
in
repnz
leave
pop
xchg
mov
push
ins
imul
sub
xchg
dec
mov
test
je
fwait
dec
dec
xlat
lods
aam
jbe
jle
cmp
or
fadd
(bad)
push
arpl
je
imul
pop
pop
push
mov
imul
inc
jb
ret
dec
dec
inc
jle
push
mov
int
inc
cmps
cmp
(bad)
shl
and
test
rol
retf
jbe
scas
sbb
or
push
push
pop
cmps
fwait
xor
aad
pop
xchg
xor
dec
ret
imul
push
cld
xlat
in
push
or
push
fisttp
and
out
xor
mov
adc
cld
push
or
xchg
cmps
loopne
add
sahf
mov
enter
sub
mov
mov
ds
xor
clc
sbb
sbb
in
jo
loop
aas
or
stos
repz
(bad)
aas
(bad)
scas
inc
mov
jb
fistp
cli
outs
inc
mov
adc
mov
aas
mov
hlt
ds
repnz
xlat
xchg
test
mov
loope
mov
mov
push
out
ins
hlt
test
adc
shl
inc
push
push
xor
leave
es
mov
sbb
shl
mov
loope
cmp
sbb
loope
and
pop
leave
(bad)
rcr
shl
dec
shl
and
sub
pop
cmp
pop
xchg
pop
sbb
add
jbe
xchg
jae
xor
ret
push
movs
scas
mov
gs
fdiv
les
es
adc
inc
sbb
push
cmps
sub
pop
push
jl
cmp
mov
push
js
in
sbb
es
mov
inc
cmps
or
push
add
sub
cwde
adc
fcmovu
cwde
pop
mov
int3
xchg
or
popa
and
add
jo
push
or
es
arpl
mov
popf
mov
sbb
mov
sub
jl
mov
mov
xchg
pop
nop
xchg
mov
test
daa
pop
mov
mov
xor
dec
loopne
int3
ins
sbb
mov
adc
loope
push
cmp
outs
fcomp
out
push
aas
ret
mov
or
add
or
sub
(bad)
lds
loop
xchg
addr16
push
push
(bad)
(bad)
popa
lods
into
loope
cmp
inc
add
sub
mov
cmp
push
movs
xchg
dec
call
mov
div
nop
cs
cmp
sti
(bad)
jl
dec
cmc
(bad)
or
mov
int3
aam
das
mov
pop
es
pop
outs
das
sbb
pushf
(bad)
push
cs
outs
sbb
int
xchg
sub
out
push
(bad)
and
je
sahf
je
ja
jae
pop
dec
mov
call
shr
daa
int
imul
push
xlat
push
push
and
jl
popf
push
aad
(bad)
jecxz
mov
sbb
sub
cmp
mov
cwde
ret
repz
or
iret
dec
aas
mov
add
pop
and
jae
pushf
inc
sbb
adc
mov
int3
out
int
pop
mov
(bad)
pop
and
js
pop
sbb
fwait
mov
(bad)
xor
add
(bad)
dec
lahf
loope
mov
fmulp
shl
and
cmps
lahf
add
scas
inc
ins
movs
bound
sub
mov
cmps
jle
fcomp
imul
jnp
fnsave
pop
mov
fcmovb
or
or
and
sub
xlat
jg
xchg
pop
mov
(bad)
arpl
popf
fldenv
pop
cmp
retf
push
addr16
lods
inc
icebp
jbe
pop
cmp
out
pusha
mov
iret
mov
loopne
xchg
cmp
jg
cmp
push
mov
pop
sbb
xchg
sub
jmp
adc
pop
add
mov
pop
mov
outs
push
sub
add
in
aam
out
stc
(bad)
jmp
retf
retf
dec
repnz
(bad)
mov
or
xchg
sub
repnz
mov
mov
ss
ficomp
push
pop
(bad)
cmp
dec
cmp
xor
mov
xor
mov
mov
xor
jb
add
or
add
mov
out
sub
add
cmp
pop
sub
ss
imul
rol
outs
pop
ret
or
out
xor
sub
call
pop
push
or
shr
ds
mov
jbe
lods
lock
(bad)
adc
push
stc
jle
adc
jl
adc
mov
push
mov
push
push
cmp
mov
das
pop
sbb
inc
scas
sub
in
(bad)
sub
call
enter
xor
jmp
cmp
(bad)
movs
sub
mov
mov
movs
pop
prefetcht1
ret
xchg
push
in
jbe
lock
push
push
jnp
adc
shl
add
ret
push
aad
mov
iret
or
inc
adc
adc
jle
fidiv
mov
push
pop
in
pop
mov
cmp
push
clc
icebp
cmp
sti
in
mov
pop
mov
outs
mov
dec
loop
mov
and
pop
es
and
inc
scas
mov
push
inc
ret
sub
add
cmp
push
dec
fimul
idiv
rcl
fnstenv
mov
les
push
xchg
push
movs
mov
pushf
and
out
sti
gs
int3
shl
daa
loope
cmp
jae
(bad)
js
mov
xor
push
xchg
mov
cli
dec
mov
add
popf
jle
inc
scas
dec
mov
ficom
in
lea
and
call
imul
stc
gs
repnz
out
call
inc
jecxz
pop
add
seto
pop
or
test
leave
xchg
and
pop
dec
cwde
or
retf
jbe
lods
scas
mov
adc
jmp
cmp
jns
sub
ficomp
pop
cli
mov
cld
mov
mov
out
or
pop
adc
call
lods
out
adc
(bad)
icebp
movs
imul
cmc
cmc
js
dec
arpl
inc
push
lods
inc
adc
call
ja
pushf
xchg
outs
adc
inc
imul
(bad)
adc
fwait
push
xlat
mov
mov
pop
push
or
rcl
inc
fnsave
mov
cld
loopne
xchg
jg
ds
jge
in
jns
call
lods
push
pop
push
retf
ficom
push
dec
mov
int
jg
mov
mov
dec
retf
mov
sub
ror
mov
mov
fcmovnb
adc
test
std
imul
jge
sbb
ficomp
mov
lods
out
int3
mov
dec
pop
repnz
sub
mov
cmps
xchg
cmp
rol
add
gs
xlat
or
jns
aad
cmp
sbb
xor
inc
repz
pop
loope
or
sbb
dec
sub
call
iret
pop
dec
sbb
icebp
leave
push
sub
xor
sub
or
mov
xchg
add
adc
sub
sub
jno
or
cmp
out
sub
int
arpl
xor
mov
cmp
repz
dec
xor
or
in
sar
pop
stc
std
pop
inc
das
retf
sahf
mov
mov
fdiv
ins
cmp
test
in
fdiv
inc
dec
clc
cdq
sti
sub
aam
enter
fsubr
inc
jge
adc
xchg
mov
les
pop
lahf
xchg
pop
jne
push
dec
mov
fcmovnu
sub
mov
clc
pop
add
in
xchg
add
dec
out
inc
and
je
(bad)
push
or
xchg
(bad)
loopne
fidivr
xchg
dec
jns
xchg
hlt
ret
sti
mov
fdiv
xchg
mov
or
(bad)
popf
arpl
ss
sub
call
inc
retf
into
adc
in
inc
and
pop
xlat
out
jg
cmps
push
(bad)
jbe
lds
add
mov
scas
mov
inc
mov
fs
in
cmp
(bad)
jb
xchg
cmp
mov
mov
sbb
clc
in
movs
xchg
mov
inc
jns
(bad)
fs
xchg
adc
loop
das
fld
lock
mov
xchg
xchg
ss
movs
pop
and
push
xchg
sti
cmova
enter
adc
cmp
rcr
das
cli
(bad)
jnp
std
imul
or
push
jb
js
aam
sub
inc
repz
sbb
into
int
mov
inc
imul
sub
jge
inc
aaa
adc
dec
xor
les
sbb
adc
outs
cmc
in
in
outs
cmp
jge
cdq
push
mov
dec
mov
mov
jae
push
xor
ret
sbb
mov
sti
movs
dec
mov
clc
and
sbb
lods
fsubr
jno
dec
pop
and
mov
fnstcw
test
inc
sub
sbb
push
mov
jbe
mov
inc
test
add
mov
mov
xor
shl
adc
cmp
add
in
xor
add
shl
mov
push
shl
jg
(bad)
push
push
mov
sbb
sub
xlat
push
leave
push
icebp
lock
push
cmps
xchg
push
shr
les
not
pop
mov
pop
adc
repz
pop
xchg
mov
lods
mov
fidivr
or
mov
(bad)
bound
xchg
add
push
inc
and
and
int
icebp
icebp
xchg
dec
push
rol
xchg
dec
add
leave
xchg
lods
push
out
jmp
retf
nop
stos
nop
adc
sub
add
movs
xchg
imul
dec
jne
add
hlt
repnz
push
xor
std
jmp
mov
int3
push
int3
adc
fs
ss
retf
aad
mov
add
mov
and
add
fistp
xchg
mov
fmul
mov
xchg
mov
adc
retf
movs
sbb
in
es
scas
into
dec
loop
pushf
push
inc
lahf
int3
mov
test
in
jle
(bad)
rcl
add
cmp
fmul
mov
iret
push
pop
xchg
pushf
test
gs
mov
jle
push
push
cmps
inc
pushf
in
adc
sub
ret
nop
outs
arpl
clc
popf
mov
sub
cmp
in
rol
movs
shl
adc
sbb
pop
or
cmp
jae
xor
sti
adc
jno
cmp
call
popa
mov
push
ins
pop
add
mov
xchg
dec
cmp
push
add
js
push
cli
test
rol
add
ss
jge
xlat
dec
add
xlat
fld
push
xor
jo
into
jge
dec
dec
dec
je
stos
sbb
or
and
push
push
jmp
imul
adc
jae
out
add
aad
xchg
xor
sub
push
mov
push
xchg
sbb
sub
push
dec
dec
loopne
out
fs
and
fimul
aad
jg
lods
test
inc
mov
or
adc
sub
fwait
loopne
(bad)
les
add
jo
xchg
mov
shl
into
adc
inc
xor
mov
sbb
enter
repz
xchg
push
pop
test
into
mov
aaa
xchg
xor
popf
lahf
adc
push
cmp
repz
ret
jge
push
and
mov
adc
mov
out
jno
inc
adc
scas
pusha
(bad)
clc
cs
adc
xchg
push
xchg
mov
push
ret
mov
jmp
sbb
jle
jne
push
adc
sahf
fbld
inc
fisub
mov
inc
fiadd
push
mov
or
shl
adc
jl
jae
popa
adc
adc
les
mov
cwde
daa
cs
dec
inc
fistp
pop
adc
stc
or
cwde
(bad)
mov
xchg
mov
fnstcw
cdq
cld
add
or
push
adc
adc
adc
xor
xchg
xor
add
aam
fdiv
xchg
jne
and
mov
test
pop
rcr
ret
(bad)
mov
fnsave
cs
jmp
mov
cld
outs
add
aas
dec
ss
mov
pop
aas
sbb
dec
(bad)
pop
into
jns
pop
inc
repnz
or
das
push
aaa
mov
lds
repz
cld
movups
mov
push
dec
dec
or
(bad)
push
pop
mov
(bad)
mov
dec
mov
out
retf
mov
or
adc
or
jg
std
retf
sbb
mov
jle
jp
in
jge
dec
push
mov
pop
aaa
rol
vunpckhps
xor
xchg
cs
xchg
cli
std
outs
pop
stc
and
pop
pop
jp
dec
aas
add
shr
pop
sbb
dec
ror
inc
out
pusha
dec
lock
sbb
test
push
sbb
mov
pop
xor
dec
popa
mov
inc
xor
pop
imul
inc
and
sub
jp
add
cdq
dec
popf
lds
and
inc
adc
inc
dec
jecxz
pusha
in
cmp
mov
fnstsw
adc
or
mov
stos
scas
inc
leave
dec
(bad)
lods
jp
mov
add
(bad)
fistp
jae
jb
adc
push
pop
imul
lock
dec
adc
push
lock
or
push
push
movs
lea
mov
dec
inc
xor
mov
xor
movs
movs
sub
ror
sub
mov
cmp
sbb
int
dec
out
adc
adc
xchg
or
in
dec
aad
ds
call
dec
into
lods
sub
or
div
cmp
jp
jmp
and
xor
jbe
stc
mov
inc
cmp
cwde
xor
and
push
xor
or
add
cmps
lds
mov
jge
pop
das
lock
jno
push
sub
pop
lahf
mov
mov
dec
loop
iret
addr16
(bad)
mov
or
es
xor
loop
and
or
stc
mov
(bad)
out
sub
add
cmp
pop
cmp
dec
and
cmp
mov
and
sub
xchg
jmp
sbb
sbb
or
jb
dec
fild
int
jmp
pop
adc
ds
mov
xor
cmp
add
mov
call
adc
sbb
fldenv
repnz
add
clc
mov
sub
lea
(bad)
adc
es
jmp
or
call
sar
cli
aaa
sbb
mov
je
stos
adc
enter
add
call
lds
fld
and
call
mov
call
pop
(bad)
jb
sub
call
push
push
ror
scas
and
jmp
movs
arpl
xchg
scas
mov
retf
sbb
sbb
aad
xchg
jne
jp
lea
dec
adc
std
inc
icebp
jnp
push
ffreep
sbb
or
popf
mov
or
xchg
fs
loop
cmp
rcl
and
call
xor
(bad)
mov
dec
aad
mov
fwait
stos
repnz
int
(bad)
enter
shl
cmp
cmp
lods
mov
mov
push
mov
sets
dec
inc
(bad)
cmp
mov
mov
push
out
outs
dec
movs
mov
xchg
out
and
mov
push
inc
mov
push
fs
jmp
popa
mov
je
shl
jl
mov
dec
call
pop
push
jle
xor
pop
mov
sti
shl
pushf
(bad)
lock
cmps
sbb
add
das
jl
mov
dec
sub
rcr
pusha
xor
pop
mov
push
call
bound
aas
push
sbb
xor
jne
iret
mov
int3
in
in
call
test
jnp
add
dec
add
shl
sbb
icebp
jl
jle
pusha
lds
test
cmp
sbb
sbb
arpl
movs
das
frstor
pop
adc
and
ret
push
xchg
xor
sbb
push
shl
pop
loop
mov
in
cs
ret
xchg
out
cmps
data16
aam
test
test
mov
addr16
mov
inc
adc
jecxz
xchg
xor
jno
adc
inc
sub
adc
mov
adc
mov
sbb
or
(bad)
ror
push
fsubrp
cmc
jecxz
mov
fwait
pop
test
adc
sub
rol
imul
inc
mov
mov
ds
nop
inc
adc
das
shr
ret
into
dec
xor
add
cwde
add
inc
test
scas
xchg
adc
mov
jmp
sbb
lea
fcomp
aas
jne
std
mov
push
gs
mov
mov
jnp
pop
stos
les
push
xlat
nop
rcr
mov
scas
push
jge
mov
loope
jb
inc
es
popa
retf
sbb
mov
out
cmp
xchg
fld
adc
stos
xchg
push
push
adc
dec
fld
fst
ss
xor
(bad)
pop
xchg
push
or
sbb
out
xchg
sti
add
shl
movs
out
jl
jno
ds
out
icebp
xor
fcmove
sub
mov
in
mov
in
fs
push
push
push
fbld
int3
loopne
jne
retf
movs
inc
and
das
cmp
sub
cmc
clc
and
mov
call
stos
call
int3
(bad)
lahf
adc
loop
jp
in
repnz
and
add
popa
or
ins
and
(bad)
dec
loope
idiv
sbb
pop
rcr
test
repnz
jno
cmc
cwde
test
ja
push
xchg
cdq
adc
mov
inc
int
xchg
sub
xchg
je
das
and
jg
pop
push
in
and
pop
(bad)
push
pop
ss
mov
mov
xor
mov
and
stos
repnz
cld
pop
mov
push
rcl
push
add
stc
lock
int3
push
jb
fs
sub
jmp
xchg
retf
lea
jmp
inc
xor
dec
add
xchg
mov
data16
aam
rol
pop
cs
push
jge
mov
mov
inc
sub
xchg
ret
dec
mov
aam
sbb
(bad)
add
cmp
aad
dec
loopne
pop
push
retf
rcl
mul
fbstp
push
xlat
inc
add
pusha
mov
cmp
cld
pop
es
jne
movs
cld
test
sbb
cmp
pop
push
gs
jbe
mov
xchg
out
dec
movs
inc
dec
js
jnp
push
mov
lods
and
jbe
in
icebp
pop
aad
sbb
pop
(bad)
lea
dec
mov
adc
sub
push
gs
mov
mov
pushf
into
dec
pop
and
push
dec
pop
inc
lock
jns
(bad)
mov
pop
aas
idiv
fist
retf
sahf
outs
xchg
xchg
sub
addr16
ins
sti
ds
push
jnp
mov
test
or
push
inc
das
loope
fild
jge
mov
mov
test
out
(bad)
ins
movs
sbb
cmp
or
lods
cmp
cdq
mov
push
push
sbb
mov
mov
je
pop
mov
jb
movs
pop
fidiv
ret
mov
dec
icebp
jp
rcl
loope
cmp
push
push
lods
lods
sti
aaa
out
mov
addr16
adc
mov
cs
adc
pop
mov
aad
fisttp
mov
xchg
lea
lods
icebp
ss
mov
stos
sub
or
mov
loopne
inc
imul
push
(bad)
neg
and
loop
call
or
pop
adc
inc
ret
sbb
jno
jmp
cmp
dec
(bad)
movs
outs
cmp
adc
jno
cmp
sti
sbb
jns
xor
pop
push
and
aad
mov
(bad)
aam
and
mov
dec
fadd
mov
sbb
push
and
retf
add
adc
add
test
add
sbb
imul
stos
test
cld
sub
ror
(bad)
test
addr16
cmovs
les
mov
jl
dec
or
dec
call
rol
lahf
ror
mov
mov
sti
or
ja
pop
and
push
ds
cli
jmp
xor
add
arpl
aam
icebp
movs
ret
clc
inc
lods
mov
je
push
inc
xchg
sti
mov
retf
mov
mov
call
jmp
or
cli
ret
mov
cmp
mov
push
dec
in
xchg
sbb
fadd
or
push
pop
out
test
js
call
addr16
dec
xor
in
pop
mov
cmp
aas
stc
sub
fsub
scas
es
mov
repz
pop
pop
mov
lods
scas
lahf
mov
leave
test
and
fist
out
repz
jns
out
push
cmp
mov
gs
je
mov
mov
mov
dec
fidiv
and
(bad)
xchg
mov
cmp
push
and
int3
retf
xchg
cmp
mov
fcomp
mov
or
jle
int3
adc
(bad)
test
cdq
retf
lds
sbb
xlat
fwait
mov
sbb
xchg
xor
mov
dec
mov
lods
jmp
icebp
pop
retf
jmp
and
mov
mov
(bad)
mov
repnz
lahf
jg
mov
(bad)
mov
dec
and
(bad)
dec
cmc
adc
mov
in
cdq
xor
push
mov
inc
imul
add
mov
sbb
cwde
sahf
push
fwait
mov
dec
mul
ss
hlt
xchg
mov
sahf
mov
cmc
mov
mov
and
push
shl
push
sbb
cld
and
(bad)
and
and
push
in
scas
xor
out
jo
adc
add
hlt
mov
push
imul
cmps
pop
jbe
inc
xor
jge
dec
push
push
ja
or
fild
cmps
test
or
hlt
xchg
rcl
jb
dec
loop
ror
inc
jecxz
stos
loope
popa
rol
push
dec
mov
pop
sub
pop
add
add
cli
cmp
shr
stc
repnz
xor
fnstsw
(bad)
bound
jmp
jge
mov
dec
xor
mov
push
dec
aam
or
xchg
loopne
mov
outs
jae
(bad)
cld
int
xchg
cs
int
push
popa
cmp
pop
jae
test
fs
jbe
pop
sub
arpl
pushf
or
pop
push
pop
add
cmp
and
xor
shr
xchg
xor
and
jmp
aas
(bad)
adc
movs
and
sti
cmps
pop
es
(bad)
(bad)
push
inc
mov
xchg
dec
ins
leave
jns
adc
jecxz
fisttp
fldenv
push
nop
push
mov
ror
xchg
adc
or
xchg
dec
sub
sub
jo
retf
or
push
mov
dec
(bad)
pinsrw
shr
pop
inc
push
or
sbb
mov
jb
out
in
jnp
mov
(bad)
(bad)
add
jge
jno
pop
jnp
stc
pop
into
shr
(bad)
jge
iret
and
mov
lea
xchg
out
push
xchg
mov
mov
xchg
ja
inc
mov
xor
jo
jmp
cld
inc
jnp
inc
mov
inc
fwait
or
adc
ins
cdq
sbb
jno
mov
das
mov
mov
dec
jns
cmp
aam
imul
jns
fsubr
pop
movs
mov
out
mov
lods
pop
movs
and
mov
arpl
cwde
fisubr
add
adc
lock
repnz
in
(bad)
hlt
and
adc
lods
and
adc
or
pusha
loop
fs
adc
pop
popa
inc
stos
dec
mov
inc
lsl
loope
stos
in
pop
pusha
sbb
mov
loopne
cld
dec
jecxz
test
lods
lods
aas
adc
pushf
test
jmp
test
stos
fisttp
in
mov
jl
lea
aam
and
inc
or
es
dec
fisttp
sub
push
cmps
pop
pop
mov
sub
fcom
add
movs
aas
xor
add
out
rcl
out
loope
mov
hlt
jb
sub
es
mov
xchg
stos
add
(bad)
pop
xor
jmp
mul
push
(bad)
mov
fdivr
xchg
push
and
sbb
cli
sbb
push
popa
call
(bad)
cmp
push
xchg
outs
xor
sbb
aam
jo
xor
in
into
mov
or
xchg
jns
nop
sub
(bad)
jae
call
add
enter
xchg
pop
or
push
sub
mov
and
in
xchg
cmp
mov
out
(bad)
xlat
push
pop
pop
xchg
pop
retf
sbb
fild
cli
dec
and
(bad)
bound
push
stos
lods
stos
daa
or
jo
adc
pop
push
rcr
push
jmp
mov
js
adc
add
aas
dec
mov
jg
mov
and
pusha
cmp
ret
outs
popa
aas
repz
or
aaa
xchg
enter
pop
scas
push
add
mov
mov
sahf
add
test
popf
and
push
adc
xor
or
pop
mov
pusha
movs
nop
fld
dec
mov
in
jmp
js
test
mov
dec
ret
xchg
aad
jb
inc
fistp
sub
shl
mov
adc
nop
cmps
pop
cmp
rcr
shl
and
and
jecxz
cli
movups
inc
cmp
cld
mov
sub
adc
jmp
xor
fld
mov
and
mov
jnp
inc
xchg
fcmovbe
mov
push
ret
aaa
xchg
lock
in
ja
inc
in
adc
inc
pop
mov
sbb
jne
sahf
loop
sti
cmc
iret
dec
and
shl
sub
shr
cs
icebp
retf
test
sub
ds
sub
adc
sbb
imul
dec
ins
inc
pushf
pop
dec
cmp
movs
repnz
cmp
imul
xchg
jno
sbb
sahf
cmps
mov
fdiv
es
pop
sub
mov
sub
cdq
(bad)
enter
mov
test
sub
jecxz
repz
shl
in
push
or
in
cmp
or
ret
xlat
mov
loop
pop
push
push
retf
ja
inc
outs
dec
dec
cld
push
cmps
std
ja
int
je
jns
inc
or
jb
movs
jmp
in
cmp
xor
arpl
mov
test
jg
or
hlt
arpl
sbb
pop
jnp
adc
mov
popf
sar
in
cdq
out
and
ds
mov
sbb
out
lea
sub
lods
fiadd
lahf
cwde
repz
cmp
xor
outs
jne
in
or
fnstsw
cmp
mov
ret
ja
push
sbb
jbe
dec
mov
pop
push
aad
div
daa
mov
or
cld
aaa
push
dec
xchg
sahf
popf
cwde
or
mov
ret
cwde
loopne
test
cmps
cli
jecxz
nop
sub
and
cmps
rcr
xor
bound
fnsave
or
cmp
fldcw
ja
ja
outs
push
loopne
adc
adc
sub
stos
test
sti
mov
cmps
js
pop
test
inc
push
mov
les
inc
pop
nop
and
mov
mov
xchg
mov
rcl
mov
jno
pop
loopne
ins
aad
andnps
mov
mov
fdivr
(bad)
std
and
outs
outs
add
arpl
loopne
xchg
sar
div
or
ror
(bad)
mov
xlat
add
outs
out
pop
xchg
jecxz
fwait
ret
dec
pushf
dec
sbb
xor
mov
inc
inc
jmp
loopne
mov
pop
scas
iret
or
je
push
cmp
sbb
js
cdq
aaa
shl
push
push
popa
lock
in
in
and
xor
or
inc
pop
mov
movs
mov
or
xor
add
mov
sti
(bad)
cld
fld
xchg
icebp
adc
(bad)
jno
and
(bad)
(bad)
dec
mov
cmp
jle
movs
enter
push
pop
dec
or
cmp
adc
test
fdivr
popa
enter
inc
fwait
in
js
push
nop
enter
dec
jle
mov
out
xchg
push
ins
out
ror
and
dec
(bad)
mov
(bad)
call
loop
into
sti
lahf
dec
movs
sbb
mov
xchg
sub
dec
mov
mov
jp
ds
dec
pushf
aam
cmp
fidivr
dec
sub
cmp
push
scas
je
pop
retf
push
mov
test
pop
inc
mov
(bad)
fsubr
xor
data16
xchg
sbb
xchg
std
cld
shr
ins
bound
pop
xlat
lea
mov
mov
cmc
out
pop
dec
sahf
call
adc
outs
out
fs
xor
mov
ss
hlt
mov
in
xchg
mov
iret
out
mov
pop
add
shr
dec
adc
xchg
xchg
dec
adc
ss
mov
mov
dec
fadd
loop
repnz
call
sub
(bad)
(bad)
lods
ret
sbb
fsubr
leave
pop
(bad)
cmp
clc
loope
jno
daa
adc
jecxz
dec
popa
seto
dec
pop
jge
fldenv
pop
dec
add
or
fiadd
fisttp
ficom
stc
(bad)
lock
mov
mov
ret
dec
mov
movs
sub
js
or
loopne
jnp
xlat
out
sbb
or
mov
pop
int3
mov
inc
mov
or
gs
inc
enter
xor
mov
mov
daa
or
dec
add
lahf
sbb
push
test
mov
jle
test
inc
test
imul
mov
xor
dec
test
loope
jbe
mov
sub
les
stc
inc
pop
jne
fdivrp
xor
jbe
add
xchg
push
pop
loopne
mov
jmp
fs
jno
cmp
push
and
imul
inc
adc
mov
mov
fmul
push
cdq
push
mov
sub
mov
iret
jo
imul
push
or
in
popa
or
stc
dec
pop
int3
loopne
pop
jb
or
mov
mov
xor
xchg
fwait
add
push
inc
mov
test
pusha
fistp
sub
pop
mov
test
or
adc
or
xor
cmps
or
ss
jo
cmps
ret
add
int
aas
jae
mov
(bad)
mov
cdq
gs
shr
xor
out
test
stos
push
dec
xchg
stos
scas
aad
sub
pop
push
ret
js
inc
mov
je
loop
mov
sbb
pushf
(bad)
cmc
sbb
mov
fisub
(bad)
in
jbe
push
in
into
mov
push
push
jmp
mov
push
icebp
inc
std
aam
mov
(bad)
and
jle
mov
adc
pop
mov
scas
and
inc
test
adc
jne
adc
cmp
jle
push
ret
in
inc
pop
jns
pop
add
out
shr
fwait
mov
mov
(bad)
cs
xchg
das
fldenv
jmp
pop
inc
std
cmp
(bad)
dec
(bad)
fcom
cmp
sbb
mov
dec
ins
dec
inc
add
ja
es
jp
push
push
(bad)
or
in
pusha
mov
jb
add
push
dec
popf
ret
sbb
push
lea
shl
mov
cli
retf
ror
dec
xor
fisttp
test
outs
push
test
push
mov
test
or
fist
inc
sub
fcmovnb
inc
mov
adc
je
dec
jbe
cli
test
adc
retf
(bad)
cmp
es
arpl
mov
rcl
leave
icebp
jae
je
movs
push
pop
push
out
pop
mov
fld
out
fxch
test
ins
jae
mov
xchg
mov
mov
int3
cmp
std
inc
xlat
mov
imul
jbe
and
(bad)
xchg
imul
arpl
and
das
cmp
jbe
add
imul
adc
jne
mov
int3
stc
mov
push
push
xchg
loope
aas
xor
rol
pop
ret
cmc
in
xor
cwde
es
or
add
test
stos
leave
and
jmp
mov
loopne
je
sub
test
push
or
fsub
cmp
cli
xor
clc
and
je
ret
loopne
out
outs
fcmovb
mov
enter
and
cdq
and
jno
sub
outs
je
and
push
cmp
int3
outs
popf
(bad)
mov
or
dec
mov
fnstcw
cmp
xor
sub
cli
push
cs
jns
hlt
mov
jbe
stc
outs
cmp
gs
or
dec
test
jle
lods
mov
movs
and
pop
movs
clc
sbb
jbe
popa
adc
sahf
into
sbb
jo
push
push
xor
jns
inc
cmp
sub
int3
mov
sub
inc
sbb
pop
dec
(bad)
in
ss
pusha
pop
sub
inc
inc
or
push
pop
popf
daa
(bad)
in
cmp
jbe
push
and
sub
xchg
test
jnp
mov
dec
xchg
cmp
pop
mov
mov
jno
cmp
xchg
push
lods
pop
add
pop
(bad)
mov
xor
cmps
xchg
out
xchg
cmps
push
sub
std
outs
je
sbb
dec
lods
push
xchg
rol
pop
test
in
imul
fisttp
aad
imul
mov
call
mov
sar
loopne
iret
xchg
ret
enter
pop
mov
ret
xor
pop
out
outs
adc
jo
inc
or
sahf
push
push
cmp
adc
outs
(bad)
data16
pop
add
mov
sahf
pusha
inc
mov
pop
adc
sub
push
lock
push
imul
jp
sbb
clc
ret
daa
mov
inc
jecxz
pop
and
loop
mov
mov
mov
ret
push
lods
(bad)
enter
or
pop
add
dec
jo
jbe
stos
and
jmp
fstp
ja
fcomp
or
dec
test
lods
jl
imul
fisubr
push
shl
adc
hlt
call
out
icebp
hlt
sub
idiv
outs
les
dec
cmp
mov
les
(bad)
push
sub
dec
(bad)
(bad)
sbb
pop
pop
ss
add
mov
sar
mul
jo
xor
add
test
sbb
dec
fmul
and
(bad)
add
pop
inc
jnp
not
mov
sub
and
ja
push
sti
scas
inc
fs
sub
mov
push
scas
jno
push
loope
mov
mov
repz
mov
jge
(bad)
leave
imul
stc
xchg
adc
in
movs
dec
sbb
and
push
cmps
jns
push
stos
sub
movs
loope
in
lods
pop
adc
out
in
mov
xchg
arpl
jp
ds
sub
lds
inc
retf
push
cmp
loopne
adc
mov
pop
ds
jl
sbb
jno
and
cmp
add
rcl
ficom
adc
(bad)
push
pop
lods
jecxz
push
push
fsub
inc
dec
mov
mov
dec
mov
cld
shl
movs
pushf
cmp
lahf
pop
xchg
das
mov
sub
or
ins
mov
or
push
lock
fldenv
mov
xor
mov
in
mov
enter
or
jmp
(bad)
cmp
dec
(bad)
mov
and
pusha
fidivr
sbb
cmc
inc
mov
adc
popf
test
cmp
inc
icebp
mov
loopne
loope
sar
add
lea
ss
jo
pop
xor
add
xor
adc
into
fcom
adc
or
xor
cmp
test
xchg
jle
dec
sbb
cwde
or
sbb
je
out
cs
loop
mov
xchg
inc
add
mov
into
rcr
movs
mov
push
or
test
ds
add
aas
or
xchg
repnz
(bad)
mov
xor
and
lods
cmp
adc
push
aad
push
push
adc
mov
(bad)
mov
mov
and
mov
pushf
dec
mov
aad
into
mov
inc
rcl
mov
pop
sub
and
(bad)
pushf
inc
add
bound
mov
clc
in
lea
xor
pop
das
push
dec
enter
mov
leave
ds
add
aaa
sub
ss
in
cwde
sbb
imul
shl
loop
(bad)
adc
sbb
push
dec
mov
test
rcl
loopne
inc
pop
inc
out
sahf
call
adc
push
adc
and
xchg
mov
xor
popa
mov
inc
in
inc
ror
in
sbb
jg
shl
iret
ja
(bad)
mov
in
imul
es
mov
in
(bad)
rcl
pushf
ret
sub
or
adc
add
mov
jmp
mov
test
adc
adc
fimul
mov
mov
and
(bad)
es
out
cwde
push
pop
sub
push
pusha
sub
push
or
adc
arpl
inc
xchg
fidivr
call
ins
inc
jl
pop
fwait
pop
mov
ret
push
sbb
adc
xor
inc
leave
or
adc
popf
sub
ins
pop
scas
xor
sub
mov
mov
and
loop
gs
cmps
sub
mov
or
(bad)
xor
in
push
xchg
and
mov
or
inc
add
cmp
fistp
mov
js
xchg
pusha
xor
add
or
push
out
cmp
add
sahf
pop
push
mov
jno
sbb
pop
adc
mov
stos
or
mov
std
movs
hlt
cwde
dec
pop
vmovshdup
jl
or
inc
sti
fisttp
push
iret
mul
mov
adc
adc
out
inc
and
shl
push
pop
dec
cmp
sub
mov
push
sub
fadd
adc
pop
sbb
or
call
xchg
or
sbb
(bad)
mov
out
jl
adc
shr
and
add
pop
ins
push
es
push
dec
adc
imul
mov
repz
mov
neg
in
push
push
lds
fucomip
sbb
cmp
or
push
and
(bad)
loopne
push
xor
popa
pop
retf
adc
adc
ins
fiadd
dec
adc
in
sbb
aad
add
xchg
sbb
addr16
imul
or
pop
and
imul
pop
int3
dec
mov
inc
mov
in
mov
mov
push
push
ss
jns
out
sahf
sar
sets
rcl
scas
lds
ja
adc
mov
xchg
(bad)
adc
lock
lea
pusha
sub
loopne
aaa
pop
cmp
or
stc
push
cmp
jne
mov
scas
dec
dec
loope
add
or
cmc
push
sbb
pusha
repnz
out
dec
scas
mov
test
je
daa
int3
mov
out
cmp
mov
and
movs
fld
adc
mov
jecxz
(bad)
and
lock
sbb
in
xchg
je
xor
fwait
outs
imul
(bad)
cmp
xchg
out
pop
dec
iret
out
sub
or
xchg
jae
xlat
iret
add
(bad)
jae
dec
out
call
mov
pop
movs
jno
dec
(bad)
and
scas
or
mov
mov
mov
mov
mov
push
push
sbb
or
lahf
pusha
aam
stos
dec
movs
xchg
fcom
test
nop
arpl
jne
daa
jecxz
cwde
fdivr
daa
out
xor
daa
sahf
mov
adc
aaa
push
scas
fistp
add
jns
loope
rol
(bad)
sub
rol
mov
fwait
pop
pop
lock
mov
or
pop
test
pop
dec
mov
(bad)
fiadd
(bad)
fs
(bad)
mov
scas
push
sar
bound
ins
(bad)
nop
add
loope
loope
test
adc
pop
adc
cmps
cld
lahf
ror
movs
(bad)
mov
scas
dec
and
or
bound
push
in
add
mov
cmp
cmp
or
or
loopne
adc
jmp
ret
fsub
cmps
sahf
fs
jno
mov
or
mov
pop
int3
jg
pop
cmp
xor
inc
mov
in
into
mov
sbb
mov
push
dec
movs
dec
scas
aad
(bad)
pop
popa
xchg
push
arpl
xor
mov
inc
fiadd
jmp
test
mov
dec
ds
xchg
into
shl
repz
cmp
or
test
lods
out
push
sti
lods
lahf
test
mov
cmp
push
jmp
and
pop
lahf
aas
pop
and
dec
xor
jmp
sbb
jns
push
(bad)
js
scas
jge
mov
jbe
loope
ja
mov
test
or
push
lods
jg
enter
sub
dec
inc
push
cld
adc
stos
push
mov
mul
inc
pop
mov
sub
mov
mov
outs
mov
jge
mov
cmc
pop
je
out
pop
jnp
and
outs
push
add
int
ss
rcr
and
xchg
shl
pop
push
xlat
xor
xchg
mov
mov
lock
mov
test
mov
mov
aad
cmp
ins
outs
and
dec
cmp
jbe
cmc
fwait
mov
(bad)
aam
xchg
mov
and
adc
pop
mov
int3
data16
inc
fcmovnb
fsubr
mov
pop
mov
out
xor
outs
cmp
das
fs
lock
adc
xchg
(bad)
mov
adc
mov
cmp
in
les
fmul
inc
xor
lods
loopne
or
push
call
inc
in
sti
mov
ret
into
push
stc
pop
into
sub
inc
cmp
loopne
gs
sub
cli
cs
ds
dec
int3
sbb
push
cs
cmp
xor
xchg
cmc
xor
pushf
imul
adc
xchg
push
adc
add
mov
imul
cmc
sahf
repz
inc
loopne
sbb
inc
inc
pop
outs
mov
jmp
sbb
lock
ins
adc
iret
jnp
retf
sbb
mov
nop
push
popf
out
cmp
into
dec
int3
pop
aad
lods
into
shr
mov
les
or
mov
pop
adc
jae
and
inc
add
jne
dec
inc
pop
cmc
or
adc
shr
sbb
mov
aam
clc
imul
push
pop
cmp
push
mov
xor
mov
jbe
xor
fyl2x
dec
movs
or
enter
data16
mov
fcmovnu
popf
mov
xchg
pushf
cmps
push
out
push
das
inc
test
push
xlat
ds
cmp
push
add
dec
mov
push
push
sahf
add
loopne
out
(bad)
mov
push
mov
andps
dec
cmp
fld
sar
add
ins
jne
mov
fsubr
sar
mov
(bad)
adc
sbb
and
and
or
fisub
mov
xor
sub
test
xor
mov
jno
fsubr
nop
sar
movs
popa
clc
jne
stos
pushf
or
das
dec
aas
adc
sub
cmc
pop
loope
xor
dec
int3
out
jnp
leave
cmp
xlat
jno
sub
test
mov
mov
sub
add
int
pop
mov
enter
rol
imul
and
add
enter
cs
fcmovnu
inc
and
pusha
(bad)
out
xchg
jmp
fstp
and
enter
hlt
retf
dec
in
cmp
icebp
out
mov
cmps
sbb
mov
inc
(bad)
jle
je
push
push
test
mov
(bad)
or
pop
aam
mov
sbb
push
sub
add
sub
or
xor
bound
pop
push
push
mov
sbb
mov
call
jo
push
sbb
jne
cmp
test
sub
test
out
pop
adc
add
mov
jle
inc
inc
xor
movs
ds
jne
enter
movs
pop
retf
loopne
cmps
ins
movs
mov
xor
sub
push
adc
aam
or
ret
repz
cmp
sub
mov
push
push
not
fbstp
clc
jl
cmp
retf
cmp
repnz
mov
add
push
push
mov
dec
xor
test
fucom
mov
jae
and
jmp
hlt
pop
fistp
adc
mov
(bad)
aaa
xor
iret
cdq
mov
clc
push
and
outs
sub
mov
mov
cmps
or
ins
push
xchg
mov
out
loopne
test
nop
pop
into
cmp
ins
scas
in
jmp
sahf
pop
arpl
imul
ficom
aad
scas
fdivr
in
rol
adc
hlt
aas
(bad)
ss
sbb
inc
adc
enter
sti
retf
cld
fwait
hlt
sub
xor
pop
mov
cmps
push
sti
lock
test
xor
bound
xchg
xchg
and
cmps
cmc
loopne
cld
cmp
push
in
fwait
sbb
push
stc
push
sbb
sbb
stos
dec
popf
and
mov
mov
aaa
adc
cmp
test
and
inc
sahf
out
rcl
stc
outs
sar
sub
gs
push
and
dec
mov
enter
scas
jg
jle
stos
mov
push
jns
ins
arpl
mov
aaa
cdq
mov
mov
or
mov
fidiv
and
cmp
hlt
pop
sbb
push
int3
sbb
inc
(bad)
mov
es
fisub
out
xchg
add
xor
rcr
shl
pop
jae
add
mov
push
mov
shl
xchg
mov
inc
paddusw
or
cdq
add
mov
sub
mov
adc
fs
rcl
xchg
xchg
jl
dec
xlat
pushf
popf
cmp
shl
mov
inc
lods
(bad)
jne
popf
sahf
popa
push
lods
mov
icebp
shl
in
adc
push
cwde
jb
adc
je
pop
js
popf
movs
shl
cdq
dec
mov
push
outs
ds
and
adc
mov
xlat
push
(bad)
loope
push
pop
fnstenv
sub
xor
repnz
cmp
or
call
adc
adc
fcmovnu
in
dec
dec
mov
xchg
mov
js
push
xlat
nop
jle
sub
mov
adc
push
jo
cld
jg
aam
out
xchg
xchg
data16
and
mov
mov
mov
idiv
std
fidivr
adc
jecxz
int3
cli
mov
mov
ins
pop
icebp
jg
in
gs
movs
push
pop
scas
mov
or
ja
push
xchg
enter
mov
lock
dec
pop
xchg
dec
das
cs
sbb
rol
sbb
fist
add
mov
and
mov
call
dec
inc
jg
bound
std
mov
popa
add
pop
fnstsw
lods
mov
push
jge
xchg
jmp
cmp
inc
mov
retf
inc
cs
les
push
sar
mov
or
pop
gs
fst
xlat
push
addr16
std
cmp
out
sub
mov
aaa
loope
xor
xor
jl
inc
in
xor
pop
xlat
pop
push
pushf
push
mov
pusha
out
out
jg
push
neg
sbb
pop
adc
mov
retf
mov
pop
push
push
xchg
ds
mov
call
clc
clc
cmps
or
mov
push
cdq
jne
cmc
cmp
les
sbb
push
loop
cwde
loopne
and
pop
leave
inc
stos
pop
push
out
mov
mov
sbb
and
push
jb
imul
dec
je
cld
jb
pop
cwde
push
fcmove
push
stos
mov
sbb
out
sub
inc
cmp
ret
push
shl
add
ret
sub
sbb
pop
cmp
sub
mov
dec
adc
pusha
call
sub
(bad)
jmp
mov
push
cmp
gs
fdiv
xor
(bad)
es
aam
out
out
aam
ror
and
test
stos
in
dec
nop
cdq
gs
repnz
es
fwait
mov
xchg
cs
push
not
out
ret
test
dec
pop
pusha
xchg
leave
cmp
jmp
add
pusha
pop
scas
xor
dec
add
jne
pop
(bad)
neg
iret
mov
jmp
sub
cld
jns
inc
adc
lods
or
rol
nop
xor
xor
sbb
cmc
and
aas
jecxz
push
in
pushf
lods
jp
cmp
and
adc
xor
es
push
sub
cmc
push
or
adc
enter
lea
cmp
fcom
out
pusha
repnz
icebp
int
mov
test
scas
ror
fsub
jne
mov
imul
movs
aas
adc
nop
push
push
rcr
shr
xchg
in
loopne
movs
mov
push
leave
lods
aaa
div
ds
sbb
into
xchg
sub
(bad)
sbb
adc
dec
stos
call
pop
stos
mov
in
cmp
jmp
cmps
lahf
push
xchg
ds
sub
(bad)
push
push
pusha
xor
sar
test
jbe
mov
jmp
cmps
dec
pushf
jl
push
xchg
xchg
push
cmp
lods
adc
sbb
sahf
mov
mov
pop
bound
call
ja
fcom
clc
mov
les
sub
dec
push
and
pop
xor
pop
push
ret
xor
mov
jecxz
jbe
mov
fiadd
imul
mov
dec
pop
sbb
sbb
mov
xchg
xchg
push
loop
retf
pop
mov
aad
or
cs
in
mov
nop
or
gs
popf
fucom
jl
xor
out
or
int
mov
sbb
(bad)
jg
jp
pop
and
bound
fmul
outs
std
xor
and
mov
sbb
mov
fimul
int
(bad)
adc
sub
jae
inc
mov
mov
sbb
jg
sbb
stos
imul
push
leave
aad
loope
mov
add
stc
mov
mov
ret
dec
imul
mov
test
cwde
sbb
leave
fistp
jnp
fstp
push
pop
xchg
pop
and
loopne
retf
inc
xchg
out
rcr
cmc
xchg
mov
xor
push
ret
jno
mov
sahf
xchg
adc
or
lods
stos
fidivr
mov
dec
lds
add
repnz
sub
xchg
mov
mov
inc
outs
inc
nop
frstor
mov
mov
(bad)
pop
popf
(bad)
in
mov
sahf
mul
cdq
scas
out
add
fstp
mov
push
sbb
je
jae
adc
mov
hlt
inc
add
in
or
inc
retf
push
dec
lea
add
inc
inc
adc
aaa
cmp
jg
mov
pop
lods
outs
nop
push
push
pop
in
jl
(bad)
retf
adc
lock
mov
fisub
mov
pop
pop
into
mov
mov
inc
scas
mov
call
popf
sbb
mov
sub
inc
nop
pop
movs
std
(bad)
cmp
movs
arpl
xor
imul
mov
movs
jecxz
sub
push
daa
mov
pop
mov
mov
push
enter
or
aam
fstp
inc
cmp
adc
push
iret
jmp
jb
iret
xchg
mov
jecxz
loope
imul
inc
stos
and
jne
mov
or
movs
mov
xor
jns
xchg
add
jnp
test
xchg
jge
rcl
ficom
(bad)
push
inc
jns
fadd
daa
retf
mov
cdq
and
test
(bad)
dec
xchg
and
jae
pop
or
inc
stos
pop
adc
xor
dec
dec
xor
mov
in
cmp
rol
(bad)
pusha
lock
mov
loop
xchg
aaa
in
call
cmc
adc
mov
sbb
je
dec
jns
call
add
(bad)
cmc
inc
adc
xor
shr
repz
sub
dec
fcom
inc
lock
dec
mov
mov
pop
push
push
adc
mov
and
add
add
mov
adc
cwde
inc
jns
in
in
xchg
aad
clc
ret
mov
pop
(bad)
push
push
jae
or
adc
mov
test
ja
mov
mov
or
or
imul
shr
in
ficom
add
sub
jns
movs
add
jno
mov
cmp
or
mov
adc
addr16
pop
int
jae
mov
rcl
and
cmps
cmc
inc
call
outs
idiv
xchg
add
and
push
jb
lods
jp
data16
cli
je
or
push
int3
jmp
cmp
es
(bad)
inc
push
jne
pop
(bad)
push
sub
xchg
and
in
mov
in
or
repz
call
mov
mov
imul
fistp
fsubr
dec
fist
add
cmp
jne
dec
cli
shl
repnz
push
sbb
inc
and
outs
dec
xor
call
push
sbb
sub
sbb
in
mov
or
dec
sub
cmp
fisubr
or
rcl
shl
ins
xor
stc
mov
sti
cmps
out
inc
push
or
dec
jbe
int
ror
cmp
cmp
lods
mov
sar
in
pop
imul
xchg
sbb
and
push
push
gs
xlat
mov
shr
or
and
add
movs
jbe
fwait
pop
jb
xor
cld
add
mov
out
and
repz
lods
cmp
jle
xor
jmp
adc
pushf
mov
mov
pop
xchg
sbb
cmp
fldenv
arpl
xor
loop
call
aas
cmp
(bad)
mov
rol
cdq
lock
mov
scas
cmp
sbb
retf
lods
rol
mov
mov
mov
jb
sbb
sub
ret
test
sbb
jbe
dec
sbb
retf
stos
pop
sub
out
and
out
add
cmps
clc
int3
fadd
push
rcr
bound
mov
pop
shr
pop
mov
mov
inc
outs
cmp
shr
jae
popf
repnz
aaa
jmp
sbb
adc
adc
cmp
and
adc
fiadd
stos
mov
loope
mov
cmp
cmps
mov
cmps
loope
outs
retf
fldenv
dec
in
jmp
mov
jae
push
xlat
cmp
mov
push
in
(bad)
aas
jecxz
(bad)
push
test
aas
(bad)
jae
les
pop
popa
js
mul
mov
and
dec
jg
sub
xor
retf
das
push
xchg
cmp
dec
pushf
aaa
fwait
enter
sbb
(bad)
add
scas
pop
xchg
cmp
out
push
mov
rol
xchg
add
cli
enter
mov
sahf
scas
rol
outs
out
outs
mov
fstp
or
(bad)
pop
and
sub
inc
jecxz
ror
imul
addr16
mov
mov
and
inc
mov
repnz
jne
mov
jnp
(bad)
jo
pop
xchg
mov
push
mov
pop
sub
adc
add
sub
imul
int3
jle
test
push
xchg
cli
ins
pop
inc
inc
xor
mov
jmp
aas
pop
js
or
dec
sbb
sub
sbb
(bad)
xor
pop
std
mov
and
fiadd
addr16
adc
(bad)
adc
xchg
loopne
or
dec
xchg
mov
inc
data16
inc
mov
mov
lock
js
inc
int
lds
fs
scas
lock
fdiv
arpl
sti
adc
mov
sub
mov
push
fsubrp
adc
push
sbb
ror
pop
push
icebp
leave
popf
jbe
pop
push
in
fisubr
mov
push
jno
xor
out
mov
arpl
pop
(bad)
push
into
adc
(bad)
and
rcl
pop
sbb
sub
mov
es
inc
ins
pop
sbb
sbb
mov
xlat
jns
jo
cld
xchg
shl
and
aad
adc
xchg
push
enter
scas
jmp
js
scas
push
mov
je
jnp
fucomp
pop
(bad)
mov
xor
pushf
adc
push
push
mov
push
sub
inc
pop
mov
xchg
inc
imul
fidivr
mov
cmp
xor
repnz
call
int3
retf
call
mov
add
seto
sbb
ins
out
mul
pop
daa
iret
fistp
jbe
pop
je
test
into
nop
loope
movzx
leave
repnz
retf
aaa
mov
mov
jl
pop
jl
shr
(bad)
mov
or
jb
jb
or
stos
cdq
pop
mov
cmp
xor
jp
retf
cld
or
enter
or
xchg
inc
cli
and
cs
xchg
out
out
cmp
jmp
jns
sar
sub
in
sbb
mov
cdq
sti
cmps
dec
jo
adc
scas
push
or
ins
scas
sub
ror
sti
push
fst
cld
push
xchg
movs
jns
add
ins
push
call
pop
xor
and
jmp
fs
pop
mov
popa
and
outs
jg
dec
jbe
sub
pop
retf
or
xchg
stc
sub
std
(bad)
cdq
xchg
js
popa
push
call
sub
popf
(bad)
setg
sub
ins
in
outs
loop
inc
dec
aad
in
psubw
ja
nop
jne
outs
jmp
sub
ds
ins
mov
mov
cli
fldcw
hlt
popf
ror
jno
and
push
cmp
xlat
ror
sbb
add
fiadd
scas
outs
jl
cld
cmps
xor
pop
cmps
mov
xchg
jae
and
(bad)
lock
jg
ret
mov
jbe
add
shl
pop
fstp
xor
outs
pop
pop
test
lock
xor
add
inc
cmp
enter
sbb
jl
add
int3
rcr
mov
icebp
loopne
pop
or
mov
push
movs
je
sub
and
(bad)
pusha
fxch
call
test
sub
out
push
xor
and
cmp
or
xchg
cld
pop
cmc
mov
push
and
test
xchg
mov
mov
(bad)
xchg
and
pop
popf
inc
and
mov
mov
hlt
ret
push
fwait
scas
and
jb
adc
and
test
jecxz
push
push
mov
mov
adc
movs
int3
in
jo
xchg
fdiv
cld
int3
into
sub
outs
mov
call
hlt
pop
inc
(bad)
movs
add
int3
(bad)
test
dec
push
pop
loopne
fimul
or
dec
push
sub
xor
sahf
cmp
mov
fbstp
xor
das
dec
push
out
xor
(bad)
out
in
cmps
push
push
cmp
lea
add
(bad)
retfw
fld
or
sbb
mov
fwait
inc
retf
cmp
repz
imul
das
push
pop
dec
jbe
push
xor
inc
or
push
cmp
iret
mov
cmp
test
push
fstp
add
or
mov
outs
mov
jbe
test
mov
inc
xlat
add
cmp
cmp
cmp
xchg
(bad)
clc
movs
mov
jns
lea
push
movs
imul
leave
push
mov
jmp
or
mov
xchg
xchg
out
jle
neg
in
sar
cmp
push
xchg
or
or
pop
fs
add
mov
pushf
pop
mov
mov
inc
(bad)
fistp
int
(bad)
dec
xchg
jnp
pusha
aad
ffree
or
or
stc
les
es
and
jns
fisub
fild
pusha
clc
sub
fild
aad
(bad)
fistp
inc
(bad)
push
cld
jae
inc
pop
xchg
xlat
push
xchg
pop
push
hlt
ja
sahf
iret
adc
mov
cmp
daa
dec
ds
in
pop
outs
cmp
mov
push
sahf
push
inc
rol
out
xchg
adc
ja
stc
dec
sub
test
ins
xor
pushf
dec
and
into
stos
push
fwait
lock
add
xor
add
mov
in
sbb
inc
adc
daa
jmp
push
pop
inc
xor
push
scas
lock
xor
aad
nop
gs
jle
leave
xor
hlt
jmp
stos
sub
and
jae
test
ins
jmp
jg
push
xchg
lods
dec
mov
(bad)
fistp
lods
and
inc
push
add
push
ja
mov
stos
sbb
les
(bad)
jmp
loope
push
inc
add
retf
outs
xor
jmp
add
mov
cmp
test
shr
sub
add
adc
cmp
popa
fistp
jmp
mov
xchg
or
icebp
dec
sbb
je
xor
adc
inc
cdq
mov
mov
imul
pop
dec
ins
xor
hlt
push
movs
fcmove
pop
(bad)
mov
inc
daa
push
sub
mov
pop
popf
int
jnp
popf
pusha
aas
jmp
sahf
cmp
push
(bad)
fstp
cwde
out
ss
xor
jae
inc
or
push
jecxz
xchg
scas
ficomp
mov
fwait
call
data16
fdiv
(bad)
sti
adc
push
sbb
push
jne
outs
cs
call
adc
fst
or
cs
mov
mov
rcl
jbe
sahf
mov
js
jno
call
xor
shl
scas
xor
fwait
push
aam
xchg
jbe
loopne
retf
test
call
pop
push
inc
cwde
retf
pop
dec
enter
pop
rcr
mov
sbb
jecxz
and
cmc
fild
pop
ret
js
dec
and
xlat
push
mov
fcom
or
push
jno
fcmove
push
add
dec
sub
shl
sbb
xchg
adc
mov
std
ins
pop
dec
pop
jae
aas
(bad)
cli
cmp
ret
push
mov
push
rcl
cmp
scas
mov
cmp
adc
jae
cmp
lea
in
ficom
in
mov
mov
mov
pop
dec
shr
test
in
je
ins
out
push
stos
or
push
data16
in
lahf
imul
push
sbb
add
in
xlat
in
or
out
adc
pop
mov
(bad)
into
pop
(bad)
imul
jb
test
cmp
xor
fadd
pop
mov
sar
(bad)
pop
aas
icebp
mov
rcr
jl
loop
in
inc
fs
into
lods
neg
jbe
mov
cs
cli
(bad)
repnz
stos
loop
inc
cmps
cmc
xor
jle
jl
pop
rsm
push
dec
push
jl
setle
inc
mov
loop
jmp
push
aaa
mov
stc
mov
(bad)
pop
scas
ss
fisttp
popa
xor
pop
stos
mov
lea
cmp
xchg
sbb
test
add
lds
cmps
dec
dec
xor
int3
rcpps
or
rcl
je
es
pop
call
lea
rcr
pop
add
cmp
in
mov
loopne
es
movs
outs
lock
xchg
ins
pop
in
gs
pop
popf
lahf
xor
pop
in
jmp
loop
leave
pusha
mul
retf
ja
mov
retf
in
or
or
mov
ins
cmp
or
loop
popf
movs
dec
loope
cmc
xor
repnz
leave
fld
aas
dec
lock
repnz
xor
call
std
sbb
sti
aas
inc
cmps
and
add
scas
shr
das
cdq
cli
cmp
push
imul
sar
test
sub
out
cmp
xor
adc
lods
cli
retf
push
mov
sti
xor
movs
ja
xor
imul
sub
js
out
ins
loope
jecxz
call
adc
nop
mov
lods
loope
mov
or
dec
pop
inc
push
arpl
inc
sbb
inc
les
push
mov
stos
retf
pop
out
movs
in
nop
jmp
(bad)
stc
add
inc
push
pop
pop
repz
cmp
jns
fnsave
jno
adc
scas
xor
lds
sub
sub
outs
test
test
dec
repz
jne
scas
and
add
add
cwde
xor
stos
sub
dec
cmp
inc
into
out
pusha
ins
es
lods
or
adc
and
or
pop
cmps
seta
bound
pop
xor
cld
xchg
dec
jmp
retf
push
mov
test
push
jl
mov
idiv
adc
and
fdiv
pop
pop
pusha
out
xor
lods
mov
fadd
addr16
rcl
and
or
cld
and
aas
lds
adc
xchg
cmp
(bad)
mov
aas
or
dec
das
popa
adc
sahf
xchg
or
in
mov
(bad)
(bad)
(bad)
lahf
xchg
jmp
out
data16
ret
sbb
pop
xchg
jp
nop
lock
sbb
ss
push
inc
and
pusha
pop
(bad)
pop
add
scas
popa
jle
or
and
xor
sub
gs
adc
mov
inc
add
sbb
or
(bad)
sub
pop
cmc
retf
pop
cmp
pop
jns
(bad)
sub
ror
mov
inc
int
fwait
mov
add
div
xchg
xchg
sbb
mov
adc
inc
es
fldcw
div
cs
mov
jno
sub
jmp
jmp
push
jp
pop
and
cs
push
call
pop
cmp
or
icebp
sahf
jge
xchg
or
daa
mov
int
into
(bad)
(bad)
aad
push
cdq
adc
cmp
jmp
mov
retf
in
push
test
test
pop
loopne
fadd
in
ins
xor
pop
cwde
fbstp
adc
ins
dec
push
xor
fdivrp
cmp
scas
loop
cmp
and
sahf
clc
popf
nop
push
dec
sub
cli
mov
mov
in
lds
lock
inc
push
add
cmp
mov
inc
mov
aaa
sub
lea
cld
in
inc
jnp
fcmove
or
ret
ins
cs
mov
pop
(bad)
dec
and
pop
push
add
pop
outs
lods
aas
pop
or
loope
mov
cld
rcl
mov
add
xchg
sti
loope
data16
adc
jmp
gs
ins
pop
std
xchg
xor
je
xchg
fwait
sbb
or
xchg
xor
and
mov
sub
ror
(bad)
hlt
jb
daa
ficomp
mov
xor
add
jmp
outs
jne
test
repz
out
mul
push
inc
or
rol
std
adc
rcr
sar
cmp
mov
pusha
or
or
xchg
clc
fdiv
seta
retf
loop
sti
iret
xchg
fnsave
ja
(bad)
mov
fs
mov
loop
inc
ins
inc
movs
movs
cmc
add
adc
ins
loop
mov
add
inc
dec
scas
push
aam
repz
ins
cli
stos
jae
cld
jg
xor
and
mov
pop
push
nop
lods
mov
out
dec
adc
push
test
cmp
out
add
xor
loope
repnz
stos
std
es
cmp
pushf
movs
mov
mov
fcomp
test
sbb
pop
sar
int
mov
int
xchg
je
int3
inc
clc
inc
cmp
pop
(bad)
hlt
aaa
jg
pushf
in
call
push
js
cwde
je
int3
sub
adc
cmp
dec
lods
xor
jl
repz
jl
(bad)
mov
pop
mov
loopne
push
stos
adc
stos
jns
fdivp
add
dec
pop
push
jne
repnz
mov
call
push
cmp
mov
retf
out
xor
sub
dec
fbstp
rcl
adc
mov
das
mov
mov
cmps
aaa
stos
dec
pop
sub
test
xchg
mov
cmp
(bad)
xchg
sub
mov
inc
imul
fsubr
jns
mov
pop
bound
and
pop
mov
push
mov
xchg
pop
jp
pop
dec
imul
adc
xor
pop
add
mov
addr16
(bad)
aaa
push
sbb
ror
popf
loope
enter
call
repz
popa
(bad)
in
jmp
jbe
leave
ficomp
sbb
fwait
inc
iret
pop
jg
mov
pop
pop
push
jo
mov
gs
icebp
adc
loopne
scas
(bad)
test
mov
dec
jne
sbb
dec
fidiv
ins
jp
jecxz
(bad)
cdq
loopne
cdq
and
pop
test
aad
sbb
sbb
cmp
repnz
push
jno
fild
mov
xchg
and
inc
pop
adc
inc
add
fisub
and
push
xor
nop
popf
outs
gs
loopne
sub
mov
mov
mov
inc
xchg
jp
cmp
add
xor
cmp
pop
retf
adc
iret
iret
pop
add
test
popf
add
retf
out
mov
jg
xchg
or
ja
(bad)
and
push
add
xchg
inc
enter
sbb
test
xor
mov
jo
sbb
mov
cs
ja
jl
or
out
dec
std
and
popa
cdq
sysenter
cmp
pop
(bad)
lods
jmp
push
ss
jo
repz
(bad)
daa
lds
ret
imul
pop
mov
enter
es
inc
in
cmp
mul
mov
or
and
adc
movs
loope
aam
je
pop
daa
mov
int3
scas
in
btr
pop
dec
mov
stos
scas
mov
cmp
sahf
sbb
pop
mov
sub
lds
pushf
sahf
jp
in
jle
dec
inc
cmp
aam
adc
jp
hlt
jae
jnp
jmp
loop
lahf
xor
std
adc
lea
enter
add
xor
popf
in
inc
add
ja
mov
movs
mov
sub
int
(bad)
xchg
inc
or
fld
(bad)
jp
xchg
or
cwde
repz
(bad)
movs
popa
inc
dec
ret
mov
jb
cmp
ds
cdq
or
enter
scas
inc
push
out
mov
jo
push
outs
jmp
test
dec
push
in
int3
sub
xor
dec
jp
inc
jbe
shl
fidivr
in
sub
inc
push
call
inc
sbb
or
xchg
add
adc
repz
(bad)
movs
and
sbb
ror
in
int3
(bad)
outs
(bad)
pop
pop
(bad)
sti
mov
xor
dec
fcomp
add
dec
loopne
ds
hlt
pop
dec
dec
adc
(bad)
mov
loope
jb
lock
ficom
mov
jnp
ins
inc
mov
xchg
xor
pop
ss
sar
mov
xchg
imul
in
dec
push
in
sbb
jmp
pop
mov
fs
outs
push
jne
bound
pop
or
mov
fsubr
arpl
shl
cmp
sub
xor
mov
std
cmp
dec
mov
int3
sub
sub
fisttp
mov
js
add
in
loop
pop
xor
std
cmp
ins
sub
sbb
mov
mov
pop
mov
dec
call
push
xchg
loop
not
int3
sub
or
mov
cmp
(bad)
or
aas
cmc
je
mov
dec
test
xlat
cld
ins
or
ja
(bad)
adc
xchg
ror
loop
retf
mov
stos
js
push
push
sub
fnstsw
ret
loopne
scas
or
les
mov
mov
lea
test
loope
jmp
mov
dec
in
push
rcr
loope
mov
xchg
popa
stc
inc
and
mov
pop
mov
ss
hlt
sahf
ficomp
and
out
sub
inc
dec
pusha
jo
sbb
xchg
push
pop
sub
pop
repnz
sub
xor
lahf
or
xchg
ins
xchg
and
inc
push
mov
fisubr
imul
call
mov
(bad)
mov
test
ins
add
cmp
in
jns
in
jns
hlt
mov
retf
pop
push
push
push
inc
push
pop
sub
xchg
cwde
and
into
ror
lods
shl
pop
ficom
and
(bad)
stc
mov
fisttp
push
sbb
dec
repnz
or
xor
push
rcl
pop
(bad)
(bad)
rcl
cs
mov
cmc
mov
aam
xchg
sub
frstor
les
push
or
dec
xor
adc
test
ins
rol
ins
push
(bad)
pop
or
sti
idiv
(bad)
xor
sbb
test
lahf
cmp
fstp
shr
test
pop
sub
arpl
and
inc
hlt
mov
cdq
mov
lahf
test
pop
push
aad
xor
xchg
push
into
jecxz
jl
mov
out
add
pop
and
in
jmp
fsub
retf
shl
out
or
jecxz
retf
outs
rcl
(bad)
dec
cdq
pop
sub
movlps
pop
int
sub
leave
mov
push
jp
std
scas
aas
ret
ss
ins
push
cmp
in
mov
loopne
cmp
cmp
dec
mov
aaa
mov
or
loop
fcomip
pop
xlat
push
add
ins
aad
inc
mov
retf
or
pop
push
hlt
ins
mov
pop
in
sar
add
pcmpeqw
fisubr
popa
push
push
add
ror
cmp
(bad)
mov
stos
jno
add
push
cs
scas
push
xchg
hlt
dec
adc
outs
stos
je
push
fcom
scas
jb
or
sbb
pop
xchg
push
jl
jge
inc
sbb
lahf
push
cmp
pop
std
cdq
inc
mov
loopne
movs
(bad)
mov
xor
and
imul
mov
add
lahf
add
jae
ret
cmc
fisubr
test
into
xor
push
mov
mov
in
(bad)
mov
fimul
sub
cmp
pop
ins
cmp
sub
sti
cs
add
imul
dec
test
sar
je
mov
ins
sub
and
repz
dec
in
mov
cmp
or
or
jmp
shr
cmp
cmp
test
xor
data16
nop
out
mov
scas
fidiv
pop
inc
outs
fimul
and
inc
push
popf
xchg
inc
sbb
pushf
(bad)
jo
dec
xor
jnp
xor
or
call
daa
icebp
jo
mov
add
rol
iret
clc
fwait
cdq
cs
push
mov
or
xor
inc
sbb
repz
pop
push
jmp
enter
inc
mov
sub
cmc
sbb
cmps
scas
js
fisub
cmps
das
push
cmp
xchg
ret
inc
adc
sub
inc
sti
jnp
into
sbb
jae
add
cmp
stc
and
retf
jb
xor
adc
push
add
enter
arpl
cwde
cmp
loop
out
pop
arpl
sbb
or
lds
sbb
out
fsubr
jecxz
sbb
lock
sbb
mov
adc
jl
mov
mov
aad
and
je
xlat
add
add
loop
cmp
or
in
cli
leave
push
scas
adc
jne
xchg
cmp
adc
in
mov
cs
push
bound
adc
je
dec
nop
lahf
adc
inc
ret
es
pushf
rcl
jne
cmps
cld
scas
xor
push
movs
es
ds
pop
xchg
xchg
dec
push
ror
popf
fcomp
clc
push
push
leave
mov
push
mov
push
jecxz
cwde
gs
cmp
and
sbb
mov
sbb
mov
stos
dec
mov
push
dec
fnsave
xchg
add
mov
mov
int
xchg
dec
es
sub
cmc
test
dec
jl
call
lahf
jg
or
rcr
push
jl
je
cmp
inc
jmp
fcomp
(bad)
push
pop
sub
push
ins
dec
pushf
rol
popa
mov
sbb
mov
sti
sub
mov
popf
pop
mov
enter
dec
jmp
jg
dec
sbb
shr
push
out
mov
aas
push
add
jbe
out
xchg
cdq
mov
or
dec
push
jmp
push
sahf
fisubr
leave
push
adc
xchg
add
adc
add
dec
mov
sahf
inc
dec
adc
and
sbb
aam
shr
sub
xor
mov
(bad)
push
repz
loop
cmp
lods
pop
push
mov
outs
imul
inc
out
jmp
inc
push
aad
cli
inc
(bad)
mov
shl
imul
jg
int3
jbe
push
mov
inc
cmps
je
test
mov
dec
test
push
mov
lea
xchg
add
inc
xchg
cmps
sti
ss
rcl
xor
pause
not
fidivr
xlat
jmp
mov
dec
fcmove
push
dec
mov
fdiv
shl
int3
pop
div
mov
mov
xchg
lds
xor
out
dec
pusha
into
loopne
(bad)
(bad)
push
jl
test
(bad)
push
push
cld
mov
out
mov
cmp
inc
mov
fstp
lock
loop
pushaw
mov
int
sbb
repnz
loopne
inc
in
jle
push
movs
adc
test
loope
in
daa
imul
ja
cmp
aam
(bad)
lock
jno
leave
mov
sahf
mov
adc
adc
mov
(bad)
pop
mov
test
xor
mov
repnz
ja
mov
into
jae
frstor
or
push
popf
mov
repnz
outs
adc
shr
test
mov
add
adc
mov
jle
cwde
sub
imul
inc
inc
shl
push
mov
ja
jmp
fbld
push
ja
std
lahf
aad
mov
and
push
test
in
scas
mov
nop
(bad)
xchg
mov
popa
mov
cwde
lds
xchg
stos
das
jle
adc
punpcklbw
sbb
sti
dec
sub
xlat
pop
sahf
xlat
jne
adc
dec
sti
sahf
mov
pop
sti
fisubr
xchg
cmps
jg
outs
dec
jmp
call
stos
sub
bound
ret
ret
inc
loopne
push
call
sbb
js
data16
inc
pandn
inc
mov
mov
cmc
fst
push
mov
xchg
jmp
ret
hlt
xlat
inc
fsub
or
mov
es
xchg
(bad)
neg
dec
push
in
xor
jne
push
rol
cdq
sub
or
push
lds
xor
loop
pop
daa
mov
adc
fistp
cmps
enter
dec
into
dec
jno
dec
inc
dec
rcl
xor
ja
lea
(bad)
pop
xchg
and
mov
pop
jae
inc
nop
int3
sbb
cmp
jmp
cmp
test
arpl
enter
aad
dec
in
fld
iret
sub
mov
ins
test
mov
push
xchg
inc
iret
or
cmp
push
rcl
aaa
pop
xor
mov
fadd
fldenv
leave
push
out
loop
mov
sti
push
lds
ror
retf
ins
aad
adc
call
adc
mov
pop
test
mov
mov
pop
mov
or
data16
sub
add
dec
sub
or
dec
pop
in
popf
mov
adc
dec
and
out
enter
stos
test
pop
cmp
fsubr
std
imul
mov
inc
stc
push
xor
xor
cld
sub
pop
test
cdq
mov
cmp
arpl
fiadd
jle
xor
mov
das
xchg
fisubr
icebp
(bad)
cmp
dec
cmp
adc
std
in
inc
sbb
xor
sub
mov
imul
mov
cld
sub
jl
imul
xchg
jg
ret
pop
(bad)
(bad)
(bad)
xor
jo
scas
jge
or
arpl
test
cmc
inc
xor
pop
cmp
push
test
adc
int
cmp
mov
dec
jns
mov
fidivr
sar
xchg
test
das
out
jmp
(bad)
ins
xlat
lds
shl
and
mov
out
mov
and
sahf
cmc
clc
mov
es
icebp
stos
mov
xchg
mov
mov
mov
in
mov
sbb
push
inc
popf
stc
jb
add
mov
xchg
mov
imul
retf
sbb
cmp
push
push
xor
xor
xchg
pop
(bad)
fistp
jp
mov
int
clc
sbb
add
mov
mov
and
es
mov
add
xchg
cmp
jle
and
add
sahf
inc
mov
cmp
xor
sti
push
pop
sub
call
into
add
push
mov
in
aad
ins
fs
adc
sahf
adc
sar
inc
hlt
adc
outs
inc
add
pop
and
icebp
mov
loope
cwde
adc
es
xchg
mov
cmp
or
push
jp
stos
mov
pop
adc
lock
(bad)
jne
xchg
add
xor
pop
push
aad
cwde
mov
and
ret
mov
push
addr16
xor
(bad)
repz
or
out
into
mul
mov
les
inc
adc
xchg
sbb
push
add
dec
js
mov
or
sub
pop
test
fiadd
daa
mov
add
fdivp
leave
out
call
leave
dec
push
movs
rol
mov
mov
adc
jl
jbe
sbb
repz
adc
mov
mov
sbb
or
add
fxch
popa
pushf
out
addr16
pop
js
fist
pop
cmps
mul
imul
movs
xchg
nop
bound
xchg
mov
(bad)
loop
mul
push
mov
aaa
ds
inc
push
mov
fisubr
cld
fwait
aas
jnp
gs
aas
cli
pusha
pop
mov
and
jmp
push
(bad)
outs
push
(bad)
xor
loopne
iret
cmp
jbe
pop
adc
lods
or
xchg
jl
pushf
lods
jmp
push
mov
mov
pop
mov
pushf
mov
cwde
mov
xor
pop
ds
aas
mov
lods
or
mov
outs
inc
mov
std
jnp
punpcklwd
mov
xlat
push
mov
cdq
adc
sbb
mov
mov
inc
popf
sbb
jmp
les
icebp
sub
pop
inc
dec
and
pushf
or
stos
stos
out
cs
aam
fcomp
dec
pushf
in
(bad)
mov
retf
push
sub
js
push
push
inc
sub
add
sub
mov
xchg
and
mov
dec
fadd
dec
in
fdivr
inc
mov
xchg
cmp
xchg
add
out
sti
mov
mov
pushf
push
pop
jmp
fild
and
mov
inc
pop
stos
cmp
adc
dec
xchg
jmp
aad
mov
sub
push
stos
adc
mov
add
fnstcw
push
sbb
outs
cmp
shr
out
sbb
out
test
dec
jge
or
stos
dec
sbb
in
stos
adc
inc
mov
mov
cdq
test
xor
mul
pop
dec
les
ins
dec
mov
je
jb
cmps
adc
sbb
push
gs
aaa
mov
push
mov
out
pop
lahf
add
mov
scas
push
adc
fwait
mov
xlat
cmp
mov
mov
dec
push
dec
inc
aas
xchg
mov
ss
out
mov
push
xor
xor
nop
data16
sub
add
(bad)
mov
sbb
mov
cmc
imul
sbb
sahf
sbb
mov
sar
outs
pop
es
xchg
xchg
sub
xchg
xor
jno
ds
jl
mov
xchg
aas
inc
das
rol
jno
stc
inc
dec
pop
fmul
mov
(bad)
cwde
push
lahf
ins
adc
into
sub
pop
mov
fwait
push
inc
mov
cmp
jns
scas
xor
repz
cmp
cmps
outs
lods
jp
inc
in
cmp
mov
cmp
loope
pop
retf
icebp
mov
mov
adc
and
retf
fcmove
pop
call
push
mov
lds
pop
cmp
mov
pop
cmp
adc
mov
fisub
test
gs
cli
fstp
aad
aad
outs
mov
rol
into
xchg
pop
jbe
enter
add
in
outs
div
(bad)
movs
out
fldcw
bound
ret
jns
xlat
out
je
(bad)
and
cld
mov
cmp
xor
sbb
xor
idiv
push
xchg
(bad)
cmp
pop
dec
out
test
imul
js
test
adc
pop
fnstcw
maskmovq
xchg
fdiv
cld
sbb
retf
in
inc
cli
in
jae
bound
lods
push
or
sub
fidivr
ret
push
lea
adc
xor
inc
xchg
push
dec
adc
fimul
dec
push
stos
xchg
and
hlt
je
data16
add
rcl
mov
mov
and
(bad)
xor
adc
loop
arpl
dec
stos
test
mov
arpl
dec
mov
pop
sbb
test
ins
fstp
pop
xor
in
repnz
push
sub
loope
inc
shl
dec
sub
mov
pop
test
adc
rol
les
xchg
sub
shr
and
out
sti
add
cdq
sti
call
shl
jp
dec
and
(bad)
push
xchg
iret
push
movs
and
imul
rcl
cmp
jae
sbb
adc
cmp
js
les
adc
popa
fmul
outs
inc
ins
arpl
jp
outs
neg
push
jmp
push
adc
pop
fild
int
push
or
dec
push
mov
test
mov
adc
enter
sub
jmp
jp
jp
int
ret
lock
(bad)
mov
inc
mov
aas
mov
hlt
sbb
push
cmp
push
or
sub
icebp
push
cdq
sub
(bad)
div
mov
shl
rcl
es
fucomp
jle
sub
lea
mov
icebp
repz
add
dec
jnp
sub
push
dec
pop
cmc
mov
ror
adc
adc
js
xchg
repz
in
std
xor
outs
lds
adc
scas
js
call
ret
jmp
add
inc
loop
stc
pop
jns
aam
adc
es
icebp
jno
movs
cwde
hlt
out
add
xor
idiv
cmp
in
or
ja
push
adc
call
lods
xchg
stos
pop
loope
mov
sbb
push
inc
jne
and
adc
gs
mov
jmp
(bad)
lahf
xchg
int
sub
leave
and
mov
shr
adc
mov
lods
ins
xchg
or
popa
inc
push
in
inc
jo
and
stc
add
inc
dec
push
lock
ja
retf
pusha
gs
inc
rol
mov
push
mov
nop
adc
pop
cli
mov
ins
shr
test
(bad)
lds
ss
inc
sub
int3
mov
mov
pop
sbb
pop
popf
or
mov
int
(bad)
jnp
scas
aas
retf
pop
sbb
loop
das
push
jmp
cmp
mov
mov
pop
je
pop
mov
test
and
mov
leave
xchg
xor
xadd
inc
add
(bad)
push
retf
cmp
add
int
xchg
dec
inc
pop
xor
cmp
repz
mov
fs
es
jp
in
(bad)
call
in
mov
xor
icebp
and
call
dec
jge
mov
test
inc
ds
ins
sub
pop
stc
xor
fsub
pop
movs
mov
sahf
das
push
pop
mov
iret
mov
push
outs
push
jns
and
sbb
inc
xor
inc
ins
dec
retf
(bad)
int3
repnz
pop
call
(bad)
data16
out
and
cli
das
popa
push
enter
out
arpl
sub
dec
stc
jge
pop
xchg
fldcw
enter
sub
jo
cmps
jg
jmp
rcl
movs
push
xchg
xor
jb
mov
loop
sar
cmp
mov
cmps
cmp
pop
push
add
int3
dec
adc
push
inc
dec
xor
jno
xchg
dec
adc
cs
call
sbb
lds
mov
jle
mov
clc
sub
mov
ret
call
xchg
push
mov
jb
cmp
aam
lea
fbld
out
arpl
mov
mov
out
sub
cmp
std
jbe
cmp
imul
inc
sub
cmp
cmp
push
mov
push
xchg
add
push
fimul
mov
mov
adc
(bad)
sub
add
pop
cmps
fist
ja
mov
pop
ss
mov
adc
int
pop
cmp
mov
cld
scas
movs
mov
mov
retf
mov
jle
(bad)
mov
and
test
sbb
add
js
mov
adc
ret
leave
ret
mov
pushf
(bad)
mov
dec
sbb
in
(bad)
sbb
nop
es
bound
iret
dec
push
jl
sub
ds
sub
ror
push
imul
(bad)
pop
xor
pop
pop
pop
sbb
lods
cld
and
adc
and
mov
push
je
fmul
pop
js
leave
loop
sub
add
sbb
test
inc
add
out
in
push
sbb
pop
mov
adc
movs
aas
fcmove
pop
jp
cmovle
xor
das
inc
adc
dec
pop
or
fisttp
adc
inc
cli
jle
sti
xchg
xlat
rcl
(bad)
call
mov
test
test
not
mov
pop
xor
pusha
js
aam
test
adc
add
aaa
sbb
mov
xchg
fldenv
mov
cwde
ins
jg
xor
adc
push
xchg
mov
mov
adc
je
mov
mov
add
repnz
adc
adc
inc
inc
adc
fisttp
or
popa
jmp
sbb
pusha
inc
mov
xchg
or
sbb
sub
xlat
enter
leave
mov
mov
rcr
movs
cmps
loope
inc
(bad)
xchg
retf
stos
adc
mov
gs
repz
repz
arpl
std
clc
sbb
jb
retf
sub
push
sub
add
cli
dec
push
cld
ret
push
mov
inc
imul
(bad)
jecxz
pop
adc
fisttp
push
mov
fcmove
mov
mov
jmp
add
cmp
mov
jae
and
jno
in
cdq
out
lods
mul
inc
test
jno
loopne
scas
(bad)
retf
mov
mov
push
mov
or
inc
sub
jl
add
add
jmp
push
push
sahf
and
mov
cdq
fld
xlat
xor
fsubr
xor
push
dec
out
or
cmp
dec
xchg
push
mov
inc
cmp
rol
je
std
jmp
lahf
mov
jns
jl
cmp
mov
or
mov
mov
outs
repnz
sar
pushf
and
ds
in
push
jl
es
cmps
lds
sahf
fdiv
retf
jle
mov
lods
sbb
adc
mov
sbb
jecxz
lds
sahf
sub
ret
jae
or
inc
dec
loop
mov
imul
into
push
test
ret
fistp
repz
jb
mov
outs
sub
ss
pop
js
mov
jns
movs
in
xchg
lahf
ret
and
jl
in
in
xor
or
in
mov
ret
inc
dec
pop
jecxz
sar
out
rcr
push
(bad)
stc
cmp
lahf
xor
in
jo
(bad)
out
add
lods
inc
mov
dec
fisubr
sub
xor
inc
es
addr16
mov
mov
retf
mov
push
jbe
sub
cmp
loope
jae
icebp
add
hlt
adc
cdq
add
das
(bad)
xor
xchg
xchg
js
and
mov
out
dec
jnp
cmp
jo
pop
sub
cli
ror
dec
cdq
rol
or
or
inc
jbe
(bad)
mov
stc
xchg
pop
adc
sub
sbb
popa
lds
ret
rol
adc
or
int3
push
mov
pop
adc
lods
jmp
sub
add
pop
(bad)
out
cdq
in
in
inc
ja
and
popa
lds
jno
ss
push
sub
jmp
cmp
lds
and
jmp
mov
fbld
mov
pop
out
cli
das
mov
sbb
xor
cmc
loop
pop
cld
jmp
jno
lods
xchg
push
xchg
cmc
int
and
mov
inc
mov
fs
push
ja
jmp
in
imul
jmp
adc
mov
push
cmp
fucom
mov
dec
add
xchg
or
outs
mov
mov
jge
xor
xchg
fs
aas
cmps
mov
dec
das
mov
adc
sbb
xlat
xlat
cmc
cmps
push
inc
out
xor
add
mov
adc
push
jnp
popf
adc
xchg
cmp
xchg
jae
or
test
cmp
add
in
aaa
dec
xchg
push
mov
not
clc
pop
cs
fbstp
add
adc
nop
int3
dec
xor
mov
enter
fmul
fwait
test
in
das
mov
int3
out
sti
xor
out
cmps
ret
loopne
xchg
pop
pop
adc
xor
cmp
jb
adc
gs
push
fcmovnb
mov
xor
dec
test
cmp
xor
mov
out
xchg
call
fwait
addr16
sbb
inc
lea
dec
aam
adc
or
jl
or
push
fsub
nop
mov
pop
mov
pop
xchg
cld
inc
push
out
adc
adc
pop
lock
int
ret
mov
mov
jmp
cs
cdq
into
mov
sbb
mov
mov
sahf
leave
cmps
push
xchg
test
sti
aas
scas
mov
mov
sub
sbb
cmp
ds
scas
or
sbb
test
fldcw
or
cmp
not
mov
fdiv
sti
sub
jmp
mov
imul
retf
mov
cld
xchg
enter
mov
adc
movs
pop
repnz
sub
lods
fcomp
mov
sahf
jbe
xchg
pcmpeqd
xchg
outs
jae
sbb
xchg
fs
cli
(bad)
in
out
sbb
dec
int
lods
inc
ret
lods
adc
or
mov
in
inc
(bad)
xor
cmp
sbb
dec
sbb
ins
sbb
sub
pushf
mov
pop
jo
add
sub
outs
mov
gs
cld
dec
shr
out
and
rol
fwait
aam
movs
or
xor
ja
mov
adc
sub
outs
cdq
inc
dec
and
push
das
or
cwde
push
rol
cld
mov
mov
add
ja
(bad)
int
cmp
push
test
aaa
dec
dec
retf
mov
out
iret
movs
add
stos
loopne
mov
mov
popa
jno
arpl
cs
xchg
cwde
xchg
sbb
fild
fsub
inc
xchg
jp
push
push
test
push
rcl
xchg
mov
stos
outs
push
gs
clc
inc
mov
pop
and
in
xchg
sub
stos
push
test
les
xchg
ja
jmp
fcom
es
daa
xchg
test
jge
into
cmp
push
shr
(bad)
out
mov
and
cdq
pop
mov
or
push
(bad)
ficom
cmp
test
mov
cmp
and
sahf
mov
cmc
adc
outs
sub
pop
push
mov
out
test
cmp
lea
ret
pop
ficomp
jmp
out
mov
sbb
jbe
and
mov
add
cmp
sbb
jmp
mov
int
xor
jno
imul
(bad)
(bad)
int
mov
loope
mov
loope
(bad)
fsubr
in
dec
xor
jno
xor
jl
rcr
push
jp
aam
pop
dec
in
fisub
push
jb
ss
cwde
loopne
push
fcom
sbb
cmp
pusha
int3
int
xor
jno
xchg
mov
cmps
inc
sub
sbb
add
frstor
nop
pop
add
cmp
add
add
int
in
repnz
das
xchg
push
fadd
pop
cmp
adc
cmp
adc
addr16
mov
or
xchg
sbb
sti
je
and
shl
mov
mov
jno
jg
(bad)
in
and
sahf
mov
xor
pop
loopne
adc
out
dec
repnz
push
inc
dec
mov
xchg
mov
retf
pop
pop
mov
inc
call
jecxz
loopne
mov
mov
push
add
fwait
test
(bad)
sub
and
rcr
inc
cmp
push
mov
xchg
mov
sar
mov
pop
scas
xor
inc
add
jmp
inc
mov
push
mov
inc
outs
inc
mov
scas
push
hlt
neg
imul
pop
jae
cmc
js
fs
push
imul
daa
stos
out
imul
movs
or
add
in
shr
dec
xchg
pop
fwait
cmp
xchg
out
pop
ins
mov
push
jbe
icebp
mov
add
jns
aam
in
test
ds
add
ins
jp
sbb
mov
int
arpl
jnp
out
lock
cs
jns
idiv
adc
outs
push
mov
arpl
aad
mov
mov
imul
add
and
stos
inc
dec
mov
adc
sbb
pop
les
pop
sbb
ja
loopne
pop
cs
xor
push
imul
push
dec
jmp
jle
inc
lds
scas
cli
mov
jle
(bad)
cli
and
lods
cwde
call
pop
(bad)
jno
push
out
lock
hlt
push
movs
add
sub
aaa
adc
loop
or
jb
push
iret
mov
es
mul
popa
sub
pop
movs
shr
xchg
lods
cli
inc
arpl
jg
sahf
push
fstp
sub
adc
pop
sub
mov
rcl
inc
xchg
in
add
in
xor
mov
mov
cmps
call
fistp
imul
adc
test
dec
repz
add
int
xor
cmps
jbe
mov
daa
test
push
inc
inc
xor
cmps
push
cmps
cdq
xchg
iret
and
ds
scas
loopne
fild
mov
xor
jp
jmp
xchg
ins
into
call
mov
popf
call
repnz
adc
adc
stos
stos
xor
jmp
cmp
mov
gs
cmps
(bad)
cmc
cmp
jp
pusha
xchg
mov
in
sbb
dec
lahf
lods
ret
cmp
and
mov
rcr
mov
mov
jae
sbb
xchg
retf
into
pop
sbb
mov
hlt
pusha
cwde
call
aas
xor
adc
ror
xchg
lock
pop
imul
(bad)
sbb
jl
sub
push
inc
push
lods
ins
(bad)
out
jmp
xchg
xor
out
pop
adc
jge
pop
fs
ficom
jle
jbe
scas
add
adc
push
xchg
hlt
fimul
ins
mov
mov
jl
int3
mov
xor
mov
ja
mov
jnp
push
xchg
test
mov
pusha
imul
jo
sub
or
ss
hlt
adc
xor
sar
jb
pop
inc
jo
cs
inc
out
sub
fcmovnbe
inc
loop
iret
pop
fcmovnb
xchg
sar
in
add
dec
hlt
xor
xor
ror
push
movs
pop
pop
fwait
add
jle
push
pop
mov
test
sbb
mov
dec
fcom
xor
adc
out
pop
aam
inc
or
test
xchg
xchg
(bad)
xor
ins
jnp
mov
(bad)
dec
push
add
dec
dec
jge
retf
add
push
inc
xlat
test
or
pop
pop
lock
in
repz
test
adc
add
and
mov
enter
jns
jb
ror
mov
pop
push
adc
test
into
jae
lea
out
loope
and
int3
xchg
in
pusha
test
out
arpl
icebp
popa
sub
add
mov
aas
add
jbe
icebp
cs
cmp
jmp
push
out
sbb
jp
add
mov
mov
mov
int3
sbb
xor
test
pop
fdivp
xor
out
push
jle
gs
pop
movs
out
mov
ret
sbb
jmp
test
jg
jge
leave
inc
into
jp
inc
loop
mov
call
es
in
(bad)
xor
or
repnz
popa
mov
stc
mov
ins
shl
mov
lea
jle
pushf
shr
cmp
ins
sub
xchg
sub
pushf
sbb
outs
mov
aam
out
das
sbb
or
aaa
adc
xor
outs
(bad)
xor
or
addr16
fldenv
xchg
adc
xchg
xor
sub
mov
jno
jl
ror
xor
cdq
pop
movs
jp
iret
popf
jg
hlt
push
mov
sub
jl
daa
xchg
jae
cmp
das
ins
push
jmp
mov
push
repnz
push
cmp
mov
and
shl
nop
fwait
adc
or
pop
rol
call
adc
adc
pop
pop
xor
iret
iret
pop
mov
cmps
xlat
add
or
adc
das
xchg
ror
push
sahf
jno
jp
imul
cmp
cmp
mov
mov
lahf
xchg
mov
ins
push
xor
xchg
pop
in
shr
pushf
lds
mov
pop
(bad)
mov
adc
test
repz
sahf
cmp
out
jb
sbb
dec
mov
jg
push
jnp
jecxz
pop
xchg
mov
adc
test
dec
rcl
imul
mov
or
mov
xor
(bad)
stc
lods
repnz
pop
dec
neg
shl
xor
add
xlat
mov
inc
mov
test
out
(bad)
xor
jp
push
out
add
call
sbb
sub
fwait
push
jnp
data16
xor
ret
js
sub
mov
mov
dec
jns
scas
movs
sbb
jmp
in
(bad)
cmp
jns
jl
pop
inc
xchg
rcr
xchg
mov
mov
aam
jbe
(bad)
imul
jecxz
push
mov
and
dec
movs
dec
rcl
cmp
leave
je
jno
loope
xor
shl
jmp
inc
cli
out
fcomp
js
loop
loopne
test
jmp
push
js
ja
pushf
retf
clc
repnz
pop
in
ss
data16
out
dec
js
xor
cwde
push
out
dec
test
xchg
gs
aad
mov
fdivr
jmp
xchg
aad
cld
icebp
jne
push
adc
stos
data16
dec
inc
and
movs
enter
fs
mov
sahf
mov
sbb
mov
scas
mov
xor
aaa
sub
ficomp
repnz
sbb
adc
or
adc
mov
inc
jns
sahf
add
ret
jne
int3
stos
pushf
test
das
mov
sbb
bound
and
es
retf
mov
jne
or
ret
pop
ins
jnp
and
lahf
jmp
xchg
push
(bad)
aaa
jne
push
dec
xlat
inc
lock
lock
sub
adc
bound
into
cld
(bad)
ss
push
sbb
push
ret
ror
psubsb
push
jbe
int
jmp
dec
sub
inc
mov
int3
(bad)
adc
push
xlat
daa
aad
test
add
pop
les
jge
out
in
dec
cli
dec
daa
xchg
push
cmp
fisttp
or
add
adc
sahf
inc
inc
xchg
fsubr
jmp
retf
or
setb
push
test
bound
out
mov
sbb
sub
fistp
mov
mov
mov
jns
mov
aas
xchg
cmp
sets
data16
rcr
pop
lea
xchg
inc
bound
cmp
fisub
sbb
jb
mov
sub
sahf
mov
stos
jne
test
(bad)
mov
mov
adc
(bad)
cmp
xchg
stos
(bad)
jns
and
mov
cld
shl
adc
test
int
cdq
xchg
out
add
test
test
lahf
cmp
xchg
cwde
int
mov
jmp
or
pop
leave
scas
mov
(bad)
mov
lock
mov
daa
push
ins
jne
jne
sti
mov
sub
mov
fwait
pop
test
aas
sub
xor
lahf
out
or
cmp
cdq
icebp
jl
hlt
mov
xchg
and
cmps
push
or
push
pop
jmp
jl
(bad)
push
jle
jmp
inc
xor
sbb
sti
pusha
pop
in
out
cmps
jmp
jns
call
add
push
int3
add
push
fcmovnbe
pop
or
lock
and
sti
aad
aam
push
xchg
ins
mov
call
cmps
adc
fwait
pop
mov
stos
imul
dec
jg
std
xor
shl
js
push
mov
and
cmps
imul
xchg
shl
or
or
push
fldenv
xchg
or
(bad)
add
inc
data16
loop
jnp
into
repz
pop
imul
sub
inc
sti
sub
shl
mov
cmp
jecxz
pop
or
sti
jbe
arpl
cmps
xchg
mov
dec
test
cmps
dec
and
push
inc
leave
out
push
(bad)
ss
or
inc
arpl
div
mov
shl
adc
inc
push
scas
loope
jbe
test
bound
call
push
pop
push
dec
push
cli
(bad)
sbb
dec
adc
sahf
push
das
mov
je
aam
iret
(bad)
push
mov
xor
xchg
xchg
aam
jnp
cmp
les
cmp
mov
rol
test
out
mov
sub
add
idiv
pop
rcl
repnz
cmp
add
cmp
sub
retf
sub
outs
sbb
lods
pop
scas
stos
dec
xor
sbb
scas
mov
add
push
outs
cmp
ss
data16
adc
nop
sub
sub
rcr
mov
cmc
gs
jbe
jge
lahf
mov
xor
ret
sub
xor
ret
ret
clc
add
std
jl
in
stos
test
pusha
jns
mov
je
mov
or
in
mov
inc
dec
(bad)
sbb
cmp
mov
je
cmps
sub
pop
imul
out
shl
lods
dec
pop
ret
adc
sar
dec
push
jg
mov
imul
pop
mov
fild
xchg
sub
push
mov
sbb
call
sbb
out
push
imul
ret
jns
jge
mov
mov
cli
mov
sbb
fs
int
add
rol
push
ins
push
pusha
sub
jns
aaa
lods
inc
cmp
xchg
loopne
test
daa
sbb
mov
pop
xor
sub
(bad)
push
rcl
repnz
pop
(bad)
push
mov
enter
rcr
cmp
push
into
leave
push
ins
and
push
mov
int3
adc
addr16
(bad)
adc
or
jmp
dec
js
out
lahf
popf
std
cli
mov
pop
push
cmc
pop
clc
jae
cli
push
pop
xchg
in
push
push
(bad)
outs
mov
pop
shl
cmp
adc
jns
ss
aaa
mov
scas
aas
daa
fmul
mov
mov
es
jecxz
push
lock
jl
sbb
call
xlat
out
out
nop
scas
inc
sub
push
inc
dec
cmp
stos
cmp
add
mov
stos
fbstp
sub
and
or
inc
ins
loopne
daa
mov
psubb
adc
push
and
and
mov
pop
popa
xor
pop
mov
xchg
mov
lahf
rcl
loope
jp
loope
mov
adc
nop
icebp
cmp
movs
fs
sbb
pop
mov
test
pminsw
fist
sub
mov
mov
test
hlt
cmps
outs
rcr
leave
leave
jnp
mov
lahf
outs
mov
popf
add
mov
xor
inc
pop
and
and
add
xor
outs
cld
adc
or
and
add
lahf
pop
sub
or
outs
mov
push
cli
ror
cmps
sub
or
or
lahf
in
into
cmp
jg
repnz
mov
mov
mov
inc
jbe
test
jle
outs
adc
pop
popa
add
inc
lods
pop
(bad)
into
jne
data16
pop
nop
popf
xchg
lods
scas
scas
mov
inc
arpl
xchg
test
addr16
mov
xchg
(bad)
call
cwde
out
repnz
loop
in
cld
or
cmc
pop
sbb
mov
in
scas
fmul
fnsave
ins
add
jge
and
iret
in
pop
lock
sti
sub
and
cmc
dec
cwde
(bad)
sub
ins
inc
jp
jge
mov
or
or
in
imul
push
push
jne
ss
xor
psubw
hlt
pop
fwait
push
mov
mov
and
mov
fld
scas
mov
jg
push
ror
or
xchg
pop
pop
mov
(bad)
loop
shr
bnd
les
push
mov
inc
mov
jne
pushf
cmovb
sbb
pop
aam
push
xor
mov
sub
out
dec
rcl
cdq
fdiv
loope
jnp
js
or
pop
mov
imul
and
loopne
xchg
sbb
mov
sbb
ins
leave
in
and
ja
jmp
not
inc
mov
xchg
xchg
lods
fidiv
pop
mov
mov
mov
adc
jo
movs
lods
pop
sbb
out
add
cmp
pusha
adc
push
sbb
and
adc
dec
pushf
pop
xchg
dec
cmp
or
mov
jae
shr
add
xchg
lock
ins
jg
nop
jb
sub
xor
ins
mov
ss
and
mov
inc
in
lock
arpl
cmp
jmp
fisubr
xchg
xchg
jne
(bad)
jmp
adc
jl
add
and
push
add
sahf
and
test
jnp
mov
jns
ja
fadd
das
(bad)
push
add
push
sub
jmp
movsx
div
imul
and
inc
push
jecxz
cmps
pushf
je
scas
jne
inc
rol
fld
adc
or
imul
in
arpl
push
pop
xchg
js
out
dec
jno
xchg
(bad)
mov
pop
add
ins
inc
add
dec
pop
stos
push
or
xor
fnstenv
scas
xchg
data16
(bad)
mov
xchg
call
ins
clc
(bad)
mov
add
dec
ins
mov
inc
pop
sub
adc
adc
hlt
test
and
dec
in
out
xchg
xchg
ret
or
test
jns
retf
je
into
das
icebp
dec
addr16
mov
mov
adc
rcr
pop
sub
pop
inc
sub
(bad)
and
popa
(bad)
(bad)
pop
mov
sub
aad
daa
xlat
ror
test
bound
xchg
scas
ret
ins
sub
lock
cld
dec
mov
pop
mov
jnp
(bad)
mov
mov
rol
in
fsub
ds
mov
adc
std
or
iret
jmp
mov
dec
pop
and
mov
sub
inc
add
data16
sub
ret
push
in
push
jb
jo
in
call
push
sub
push
add
cdq
hlt
xor
mov
test
mov
add
out
inc
bound
aaa
out
push
popf
adc
aas
fld
js
pop
out
adc
int3
jle
xor
mul
xlat
and
nop
fimul
mov
xor
sbb
pop
adc
enter
add
xlat
adc
adc
jnp
scas
fbstp
sub
(bad)
fsubrp
mov
xlat
pop
movs
push
add
pop
jmp
outs
mov
dec
cmp
xor
jmp
lahf
sub
adc
lods
jle
(bad)
aad
movs
fistp
adc
cdq
stos
data16
mov
cmps
fmul
fadd
mov
movs
into
imul
or
push
jg
icebp
cld
xor
int
lods
stc
lods
test
and
jecxz
outs
cmps
dec
shl
inc
push
push
xchg
stc
into
ins
push
outs
shl
pop
or
add
mov
out
or
adc
stos
rcl
(bad)
mov
sahf
in
mov
int
aad
xchg
pop
sti
in
cwde
retf
test
arpl
test
jnp
or
xchg
sbb
ret
adc
stos
xor
mov
push
ja
pop
mov
mov
or
fadd
xchg
push
jns
cmp
leave
cwde
fist
addr16
dec
xchg
and
hlt
pop
mov
retf
jo
jl
push
xchg
in
rol
xchg
xchg
lods
icebp
pushf
sbb
iret
mov
xor
mov
mov
or
fnsave
call
test
dec
dec
retf
xor
sub
cmp
ficom
scas
outs
fwait
mov
and
repnz
pop
jl
div
cmps
sbb
stos
adc
scas
jge
jmp
sub
mov
add
repz
mov
or
cmp
xor
test
inc
pop
cmc
cmp
push
shr
jg
xchg
fsub
bound
adc
scas
stos
repnz
push
lahf
and
cmps
iret
dec
inc
sub
fcmovnu
fwait
mov
in
push
stos
jb
mov
inc
inc
mov
mov
sub
imul
cmp
loope
test
mov
or
stc
push
pop
idiv
out
aas
data16
rcl
jl
jbe
bnd
dec
call
push
mov
mov
into
xor
dec
jnp
test
movs
or
clc
cli
call
in
dec
dec
out
push
imul
jecxz
ja
(bad)
adc
in
outs
lods
fld
scas
add
test
jo
or
in
dec
outs
or
in
and
xor
gs
cld
or
xor
xcrypt-cfb
cmps
and
jnp
jg
das
xchg
aam
inc
mov
daa
dec
stos
into
mov
call
lahf
arpl
push
and
loop
sar
mov
fiadd
mov
dec
rol
or
scas
mov
cmps
mov
ret
les
in
mov
xchg
mov
and
cwde
and
addr16
test
add
mov
mov
push
and
call
(bad)
scas
(bad)
xor
cld
fstp
popf
or
pop
(bad)
pusha
adc
test
outs
cwde
ret
lock
leave
push
adc
cld
test
enter
(bad)
outs
inc
mov
shl
fidivr
shl
dec
dec
iret
in
add
pop
fadd
(bad)
jle
jecxz
push
inc
mov
cmp
or
or
cmps
cmp
addr16
idiv
out
movs
scas
mov
xor
in
cli
add
xor
push
lods
xor
ja
iret
cmp
nop
pop
leave
out
dec
(bad)
and
ds
push
mov
jp
and
stc
call
xor
fld
(bad)
inc
out
pop
sub
jge
mov
cmp
xor
xor
aaa
mov
sub
jge
leave
mov
lea
data16
dec
jno
mov
push
sub
lods
adc
adc
pusha
dec
imul
xchg
jo
xchg
push
mov
xor
and
cwde
jne
aas
in
and
push
sub
cmp
in
jae
inc
out
test
(bad)
dec
(bad)
(bad)
cmp
rol
pop
push
in
or
push
jmp
loope
push
mov
cmp
dec
or
std
xchg
je
nop
mov
(bad)
stc
cld
jmp
bound
cmc
pop
xchg
xchg
js
jp
popa
cmp
jmp
jb
int3
push
push
rol
sbb
pop
fwait
add
mov
sub
outs
fistp
inc
jl
clts
xchg
xchg
mov
mov
test
std
mov
dec
(bad)
push
imul
cmp
pop
cmp
push
fmulp
and
pop
jecxz
fwait
(bad)
mov
loop
iret
dec
in
icebp
rol
and
pop
dec
push
push
stc
mov
sbb
lds
retf
mov
int3
sub
inc
addr16
pushf
out
mov
mul
push
sub
or
push
pop
std
jge
lods
icebp
mov
xlat
push
push
int
in
pop
add
mov
adc
jns
cmc
movs
cmps
loope
or
shl
sub
nop
and
push
pop
pop
outs
xchg
cmps
inc
scas
adc
arpl
mov
push
ins
xor
retf
xor
loopne
mov
daa
push
aad
jecxz
jno
and
call
adc
pusha
push
xor
jg
push
inc
hlt
mov
or
ss
ret
xor
jp
iret
call
xchg
push
aas
dec
popf
enter
int
(bad)
bound
push
and
mov
cdq
push
sub
xor
cmp
mov
in
mov
jb
ins
cld
scas
ja
(bad)
(bad)
mov
inc
aad
ins
and
stc
std
enter
jmp
gs
pop
cmc
cmp
jg
ins
call
shl
push
ins
(bad)
adc
lds
retf
sbb
ja
popa
push
push
aaa
cs
inc
dec
sub
xchg
movs
inc
inc
push
inc
out
sbb
mov
push
aas
jbe
xor
outs
imul
jmp
ss
cmp
fwait
into
adc
mov
mov
cmp
cmp
test
mov
aaa
mov
rcr
movups
cmps
sub
and
add
and
in
test
loopne
stc
fldenv
js
pop
loope
mov
test
std
cdq
add
add
mov
shl
mov
cmc
and
or
mov
hlt
and
mov
sbb
sub
stos
ret
sbb
add
or
and
jle
fistp
fs
sub
adc
jo
add
icebp
xor
call
jmp
(bad)
(bad)
pusha
in
push
outs
js
or
lods
scas
sbb
mov
mov
ins
jmp
sbb
or
inc
outs
mov
mov
or
scas
push
cmc
pop
add
or
xchg
push
clc
xchg
jmp
inc
sbb
aad
mov
(bad)
ret
cmp
pop
xor
and
lds
sub
push
leave
rol
inc
sbb
retf
mov
stc
ret
hlt
inc
dec
sub
sbb
mov
cdq
jl
dec
lds
clc
pop
(bad)
cmp
ins
jge
mov
inc
int3
jae
pop
add
es
xchg
cld
stos
mov
sub
push
outs
mov
inc
pop
jecxz
jne
ins
lods
and
inc
lods
div
add
xchg
add
movs
and
mov
aam
rcr
or
lahf
or
mov
or
das
(bad)
mov
sti
xchg
add
fidiv
adc
movs
mov
sbb
push
sbb
or
loope
jne
and
xchg
jno
dec
sbb
nop
sbb
sbb
rcl
clc
aam
sub
or
std
ss
xor
call
je
jge
or
xchg
mov
in
inc
xor
test
rcl
push
js
sub
cmc
mov
xchg
ins
and
add
xchg
pop
mov
hlt
loop
adc
leave
ror
dec
shr
mov
push
xchg
mov
jmp
adc
std
sahf
or
xor
add
dec
ja
enter
rcr
xchg
cmc
lock
jp
out
xchg
std
pushf
xor
fimul
(bad)
lahf
push
and
pop
int
mov
jp
ins
stos
loope
daa
scas
xchg
fcom
pop
pop
out
(bad)
hlt
push
jo
mov
cmc
ret
fwait
leave
fstp
cmp
mov
test
into
(bad)
icebp
in
lods
mov
xor
adc
stos
or
pop
cs
xor
mov
arpl
aam
lea
mov
sbb
and
(bad)
fisub
sub
in
bound
mov
lahf
dec
rcl
jg
xor
jns
fdivr
fadd
adc
ins
pop
cmc
aaa
loopne
int
cmp
sbb
dec
and
add
into
(bad)
std
dec
jb
xor
inc
jg
icebp
xor
and
loopne
fst
repnz
in
adc
imul
pop
in
ror
leave
ror
pop
pop
mov
sbb
cmp
cli
frstor
pop
rcl
pusha
out
and
ret
pop
and
jl
rcr
mov
cmp
xchg
pop
push
stos
daa
xor
jnp
ins
fst
cmp
adc
jnp
xor
xchg
js
dec
cmp
adc
dec
out
push
int3
jnp
scas
int
mov
fcom
fwait
test
in
cmps
out
inc
es
pop
xchg
or
mov
fdiv
imul
mov
inc
fs
or
cmp
ja
call
or
in
dec
es
lods
dec
cdq
mov
ins
sbb
and
das
cld
mov
jae
loop
mov
push
lods
das
test
cli
mul
add
int3
scas
cmp
or
cwde
js
push
inc
mov
repz
std
ror
mov
jnp
mov
pop
xor
dec
push
mov
cwde
cdq
(bad)
fstp
test
mov
add
data16
or
sbb
cmp
aam
cld
lds
sahf
pop
pop
cmps
pushf
fmul
jmp
pop
push
dec
push
mov
cmp
cmps
pop
sub
faddp
stc
lock
iret
mov
add
add
add
icebp
nop
(bad)
(bad)
xchg
cmp
xor
bound
lods
jl
inc
cmp
jmp
pop
push
ret
out
lahf
push
push
or
pusha
mov
or
jge
push
dec
fsub
lods
sub
sub
mov
das
cmp
xchg
(bad)
lock
cmps
mov
xchg
repnz
mov
sub
cmps
jmp
leave
jae
add
shl
sbb
cmp
or
pop
int
hlt
data16
mov
daa
test
xor
rol
jbe
(bad)
and
sbb
sub
shl
and
nop
mov
xor
sub
pop
mov
dec
cmc
cmps
cmp
mov
loopne
fbld
lea
jmp
cmp
add
push
jle
inc
mov
pushf
test
mov
cmp
and
out
cli
add
cdq
cmp
(bad)
and
adc
push
stos
or
and
daa
sbb
je
pop
jns
inc
adc
nop
xchg
mov
mov
mov
add
jmp
je
es
aad
and
mov
imul
dec
adc
out
in
jg
push
dec
in
mov
mov
data16
stos
push
mov
jl
lods
ja
lds
mov
xor
jo
dec
pusha
sub
mov
inc
mov
or
out
lea
mov
jmp
pop
jecxz
jmp
mov
push
sub
mov
inc
inc
mov
ret
fwait
inc
jmp
shl
xchg
ret
jo
nop
cmp
xchg
out
fs
fs
(bad)
stos
mov
add
addr16
add
pusha
mov
and
fdiv
sti
mov
pop
or
inc
mov
push
and
mov
and
push
mov
add
cmp
inc
xor
pop
call
div
call
ins
xor
pop
xor
repnz
xor
loop
dec
and
sahf
and
std
js
or
jno
imul
cmc
ret
jmp
scas
and
xor
ins
dec
ins
xchg
in
sub
arpl
xor
push
adc
jne
test
pop
mov
add
je
push
adc
lods
push
push
les
push
stc
(bad)
or
inc
dec
mov
dec
mov
mov
jecxz
xrelease
fidiv
bound
out
inc
outs
das
mov
xor
inc
fld
xchg
adc
xchg
cwde
getsec
sar
push
test
hlt
bound
pop
and
inc
dec
sub
out
mov
jl
xchg
adc
pop
std
push
aas
pop
inc
lods
ret
in
adc
xchg
in
mov
movs
popf
sub
inc
aaa
jb
push
dec
mov
jecxz
daa
sbb
dec
loop
imul
jne
add
jo
mov
pop
pop
ja
psrad
mov
mov
outs
xor
test
ds
sbb
pop
xor
push
mov
mov
jp
shl
imul
jmp
outs
mov
sub
movs
sbb
sub
mov
mov
inc
sbb
xchg
shl
cwde
mov
addr16
sub
in
push
cld
mov
pop
sub
push
inc
cmp
add
cs
out
lock
out
xchg
stos
loope
cwde
add
xchg
movs
pop
lds
cmp
sub
out
cdq
jp
jl
test
test
movs
pop
sbb
stc
js
std
adc
push
(bad)
cmp
xor
mov
popf
sub
out
shl
jno
mov
or
js
jno
or
maxps
std
loopne
and
inc
lock
sahf
mov
lods
pop
(bad)
enter
mov
adc
fs
cld
jb
pop
xchg
leave
push
retf
test
fsub
inc
inc
adc
bound
pushf
push
into
mov
and
push
add
push
repz
xchg
(bad)
cs
cmp
imul
(bad)
push
inc
push
mov
push
mov
or
jbe
ds
push
int3
popf
jmp
jne
or
mov
test
pop
push
xor
sbb
nop
std
test
mov
and
nop
mov
dec
mov
adc
push
jnp
hlt
jp
ins
jbe
adc
hlt
mov
cmps
ss
add
sbb
xor
mov
cwde
addr16
xor
dec
rcr
sbb
add
movs
pop
jg
aaa
std
or
stc
(bad)
jmp
aam
jp
fs
popa
mov
adc
jne
xlat
mov
sub
outs
adc
xchg
neg
popa
push
scas
inc
jge
mov
sahf
pop
std
dec
pop
(bad)
mov
mov
dec
dec
push
xor
pop
jae
clc
jecxz
sub
or
cmp
fld
(bad)
mov
(bad)
push
fmulp
lahf
xchg
adc
call
adc
xchg
icebp
jo
mov
jg
inc
mov
fsub
adc
ins
xor
lods
dec
outs
sbb
int
mov
popw
pop
or
aaa
cmp
fwait
sub
xor
sub
sahf
lods
rcr
push
cmp
lods
mov
jge
repz
cmps
imul
addr16
addr16
popf
adc
or
pop
je
sub
pop
push
mov
cwde
fsub
fdivr
aas
aas
outs
push
push
(bad)
or
cwde
sbb
inc
loopne
mov
or
and
xchg
pop
aaa
dec
cmps
test
shl
test
imul
cmc
or
test
push
mov
dec
outs
fistp
xlat
and
xor
or
xor
nop
div
ror
inc
test
mov
pop
cwde
enter
xchg
mov
adc
gs
sbb
stc
mov
push
cmp
cli
pop
mov
pop
jmp
mov
xchg
xor
in
test
imul
pop
push
pusha
int
pop
int
enter
scas
rcr
call
(bad)
pop
sub
xchg
sub
add
sti
jmp
and
sti
sbb
std
mov
aam
mov
pop
movs
mov
push
pop
jb
xchg
push
enter
mov
(bad)
fsubp
mov
inc
cmp
pop
call
jbe
adc
sbb
mov
fst
jns
es
mov
aaa
pop
rcr
fcmovbe
(bad)
adc
and
ins
jp
dec
jle
mov
(bad)
repz
(bad)
out
or
stc
jge
mov
xchg
call
cdq
pop
push
mov
aad
xchg
dec
dec
xlat
cmc
jnp
ficomp
mul
add
ret
jmp
and
aaa
mov
xchg
jnp
xchg
repnz
sbb
cld
fwait
scas
mov
gs
lock
jecxz
sub
lods
call
test
or
repz
popf
sti
ret
add
gs
xlat
dec
adc
jnp
rcl
aam
ficomp
sbb
sub
shl
cmps
xlat
adc
sbb
mul
leave
mov
dec
in
xlat
add
lods
sub
pop
pop
out
and
cmps
mov
sbb
push
or
and
xchg
mov
mov
sub
pushf
mov
pop
pop
bound
adc
es
pop
dec
cld
es
jns
dec
call
ins
mov
std
mov
div
loopne
mov
or
lahf
in
mov
cmps
push
push
pushf
(bad)
and
arpl
sbb
inc
lea
jns
mov
push
test
dec
lea
and
popa
adc
fdivr
sbb
outs
lods
fistp
and
iret
adc
inc
or
push
and
les
adc
loopne
test
xor
ret
test
mov
cld
pop
add
test
mov
or
push
pop
inc
pop
add
mov
or
or
inc
pop
sub
mulps
hlt
pop
fdivr
fistp
clc
into
adc
aam
or
sbb
xchg
js
push
sbb
dec
retf
sub
add
pop
adc
jmp
loope
add
dec
push
imul
and
sub
loop
rcl
call
sub
scas
je
push
and
loop
jb
xchg
fs
and
stos
inc
cdq
cdq
cmc
in
mov
push
mov
xor
jecxz
in
loop
add
adc
pop
pop
jno
popf
or
lahf
daa
shl
dec
or
in
fisubr
push
ror
in
mov
push
cmp
repnz
(bad)
bound
pop
scas
pop
push
mov
movs
lahf
mov
mov
sbb
imul
lahf
push
inc
daa
es
xchg
mov
lods
or
sub
add
pop
(bad)
fisttp
inc
outs
push
out
mov
dec
fdivr
ins
inc
sub
fcomp
pop
adc
popf
rcr
sub
xchg
jmp
xlat
cld
cmp
jmp
pop
js
(bad)
fidiv
in
jmp
mov
in
scas
test
or
pop
popf
pop
leave
push
xor
imul
ficom
xchg
test
add
mov
inc
mov
jbe
cmp
ret
stos
sbb
ret
hlt
and
cmp
imul
sahf
inc
sbb
lahf
add
dec
jno
dec
xchg
sar
cmp
and
add
inc
add
nop
dec
mov
pop
or
sub
pop
add
lods
clc
mov
js
or
push
add
inc
aaa
mov
push
jp
add
ret
push
shl
jnp
sbb
or
(bad)
pop
adc
(bad)
pop
jmp
jmp
push
in
jecxz
add
mov
push
imul
push
call
lds
pop
out
sub
or
cs
lds
or
ds
inc
les
push
xchg
dec
mov
cmp
cdq
xor
and
iret
int
dec
out
(bad)
mov
or
pop
push
mov
mov
adc
xor
mov
inc
test
outs
mov
scas
xor
(bad)
mov
inc
jne
repnz
loope
inc
jg
push
das
pop
adc
retf
inc
xor
cs
jnp
aam
retf
sbb
inc
xor
add
enter
fisttp
push
dec
and
adc
aad
(bad)
sbb
aas
push
gs
fldenv
cmp
xchg
xlat
xchg
sub
dec
xlat
adc
test
push
pop
into
pop
mov
sbb
mov
sbb
or
and
in
cmps
mov
call
call
push
(bad)
stc
loopne
sub
ret
cmp
sbb
sti
fwait
stc
adc
xor
jne
or
jg
imul
dec
xchg
cmp
xor
pop
in
inc
jmp
mov
xchg
fwait
sub
out
dec
adc
ret
fcmovnu
push
xor
cmp
push
dec
mov
(bad)
shrd
adc
push
test
ds
adc
pop
push
not
push
add
imul
xchg
jp
enter
sub
pop
pop
pop
xor
dec
jnp
ja
les
sub
jb
movs
and
cmc
sub
das
test
sar
xlat
in
mov
rol
sahf
jg
and
mov
test
mov
imul
imul
scas
pushf
daa
jb
cmp
arpl
mov
in
ds
mov
mov
jg
rol
ret
sbb
xor
adc
pop
add
sar
mov
add
daa
test
sbb
(bad)
jo
cmps
js
sub
neg
sbb
dec
or
fiadd
mov
sbb
out
imul
fsubr
outs
adc
push
out
jmp
xor
retf
and
jns
jle
pop
lods
pop
and
add
lods
mov
adc
in
cmps
add
pop
jge
in
dec
repz
aaa
arpl
mov
fdivr
cld
inc
sahf
(bad)
popf
movs
loopne
js
mov
je
jae
popa
jg
pop
dec
imul
imul
in
clc
sub
inc
xchg
ret
add
mov
and
jmp
iret
sub
and
dec
retf
or
pop
adc
dec
into
pop
mov
and
ficomp
xchg
adc
xchg
xor
shr
or
adc
inc
inc
pop
ret
sbb
sub
sti
xor
mov
not
and
fstp
sbb
outs
adc
dec
cmps
addr16
or
or
imul
aad
jl
addr16
cmp
sbb
scas
or
outs
xor
shl
jb
repnz
call
test
and
inc
mov
jg
inc
cmps
fistp
rcl
and
sbb
xchg
les
xchg
out
(bad)
mov
push
jnp
mov
sub
imul
jno
adc
les
push
dec
push
cmp
fs
dec
sahf
rol
push
mov
fistp
cmp
pop
hlt
(bad)
push
stos
je
nop
ret
pop
adc
(bad)
jmp
ror
test
mov
dec
pop
xchg
xor
cmp
sbb
test
mov
dec
mov
fwait
(bad)
mov
ins
or
or
lahf
retf
push
cld
aas
ds
out
xchg
outs
xchg
pop
mov
pop
aaa
mov
mov
ins
mov
lahf
jge
mov
push
int3
jecxz
cmp
pmuludq
push
dec
fidiv
sar
push
xor
popf
jne
inc
add
movs
loopne
adc
aad
push
leave
adc
cmp
push
popf
mov
mov
xor
and
sub
icebp
xchg
in
mov
mov
pop
imul
sahf
lock
fcomp
xchg
adc
scas
mov
retf
jmp
adc
pop
aas
ins
bound
mov
unpcklps
jne
push
jno
out
sub
mov
cmc
cdq
cmps
sbb
out
cmp
or
lods
aas
inc
add
loopne
in
push
mov
pop
mov
hlt
xchg
mov
cwde
jecxz
test
or
fcom
mov
xor
fwait
sbb
mov
mov
ins
mov
jmp
mov
test
jbe
iret
(bad)
sahf
cli
stos
daa
out
xor
jp
mov
clc
sub
mov
lahf
pop
ret
dec
jg
jno
and
sbb
jae
cmp
pop
jb
mov
add
push
jp
mul
aaa
pop
sub
fnsave
les
fwait
mov
dec
adc
pop
jge
xor
inc
inc
sahf
inc
sbb
sbb
mov
pop
out
pop
inc
out
xchg
fcmove
adc
fistp
adc
cmp
fldenv
push
or
sub
ss
cli
or
scas
mov
std
ss
popa
jno
adc
sbb
or
fistp
fnstcw
jecxz
jle
jo
jne
push
cli
(bad)
bound
call
js
push
pand
or
ins
push
(bad)
push
add
retf
ret
pop
les
pop
mov
mov
sub
mov
jae
dec
out
jae
sbb
int3
and
push
and
lahf
aam
sub
add
pop
mov
shl
cli
mov
mov
jl
fnstenv
jo
mov
(bad)
xchg
or
mov
cmc
and
jmp
mov
rcr
add
jmp
rol
add
fsub
adc
dec
stos
or
mov
cmc
sub
sbb
xchg
jl
sbb
fisubr
mov
dec
(bad)
sub
sub
jle
jbe
sub
int3
out
into
nop
ds
add
and
outs
scas
aad
pop
xor
scas
sbb
outs
mov
adc
shl
std
in
pop
cld
push
jecxz
pop
mov
addr16
int
cmps
movs
cmp
xor
rol
push
pop
dec
xchg
iret
test
out
dec
ja
pusha
dec
loop
jmp
adc
inc
cld
stc
stos
jle
adc
add
mov
jmp
movlhps
mov
es
in
enter
dec
mov
jbe
pop
arpl
dec
push
rcl
inc
xor
fmul
test
mov
cmps
push
jb
lahf
mov
push
loopne
xor
mov
add
xor
push
dec
jg
pop
pop
cwde
xchg
pop
xchg
sub
cli
sbb
outs
test
shr
fucomp
mov
and
add
inc
or
dec
popf
stos
sti
adc
dec
or
outs
inc
push
nop
pop
xor
pop
and
sar
gs
mov
pop
lahf
call
cmp
mov
dec
repnz
int
sbb
jmp
rcl
or
shl
jle
aaa
popf
jns
repz
mov
mov
fldcw
(bad)
jge
mov
test
dec
les
neg
add
push
(bad)
scas
aas
dec
push
repz
jecxz
movs
ins
adc
cmp
jns
dec
push
sub
test
or
and
mov
in
js
and
xchg
push
aas
outs
push
out
or
cmp
fisttp
dec
add
xchg
push
and
sti
mov
loop
jecxz
or
aaa
adc
pop
xchg
cmp
scas
pop
pop
ss
mov
push
mov
mov
dec
sbb
aam
cmp
cmc
test
outs
cmp
imul
movs
xchg
data16
pop
push
shl
aam
add
fwait
popa
or
jge
dec
push
mov
movs
nop
aas
mov
mov
hlt
push
pop
mov
test
lods
dec
(bad)
or
add
mov
pop
call
call
adc
enter
sub
dec
jns
or
lods
push
pusha
sub
mov
inc
sub
xor
inc
int3
add
leave
leave
jbe
push
push
mov
and
les
mov
lar
(bad)
mov
in
test
out
mov
sub
stos
or
rcl
or
sub
call
std
cmp
dec
sbb
mov
(bad)
leave
into
xor
xor
and
pop
aad
sub
pop
dec
std
jmp
test
das
arpl
loopne
retf
pop
xchg
outs
jns
add
cmp
pusha
or
les
mov
iret
shr
jno
cmps
pop
dec
mov
loopne
and
sar
sbb
jne
sbb
cdq
push
jp
and
inc
pop
and
cmp
push
(bad)
and
and
sub
cmp
push
jnp
mov
scas
push
or
mov
add
cmp
push
adc
cli
fistp
pusha
test
cdq
call
fdiv
test
imul
sahf
mov
cwde
dec
and
dec
or
and
push
dec
lock
repz
mov
pop
dec
sar
fisubr
push
mov
lock
jne
les
out
xchg
add
ret
es
rcl
mov
bound
mov
or
push
lods
adc
add
loop
or
mov
mov
jns
nop
sbb
adc
shl
xlat
jmp
and
mov
fstp
inc
pop
(bad)
mov
inc
jg
sub
dec
ins
add
and
ret
inc
dec
dec
pop
and
lds
push
xchg
push
mov
shl
scas
or
push
push
push
and
push
repz
jge
pop
dec
sub
out
sub
cmc
and
out
add
into
mov
cdq
xor
mov
jno
(bad)
mov
and
xor
push
add
pop
inc
adc
lahf
outs
or
dec
xchg
mov
xchg
push
jle
das
sbb
push
aaa
and
xor
dec
xchg
xchg
jecxz
push
jae
push
fadd
and
into
dec
inc
test
jl
pop
mov
shl
add
sbb
xchg
scas
repnz
inc
sbb
test
sub
pop
(bad)
sbb
xchg
lea
sub
pop
in
outs
movups
shl
add
popa
pop
jae
icebp
sub
inc
out
jge
call
in
dec
pop
popa
pop
repnz
sub
clc
jns
aam
sub
rol
test
pop
mov
int
(bad)
mov
movs
xchg
dec
adc
jns
cmp
out
or
leave
cli
aam
icebp
xor
jle
mov
jbe
xor
popa
inc
mov
jecxz
inc
loop
daa
retf
pop
bnd
cmc
mov
jg
or
pop
xor
(bad)
cmps
(bad)
lock
jecxz
out
ja
jns
mov
mov
mov
lods
mov
addr16
jbe
ret
gs
dec
sub
adc
hlt
test
out
lahf
lahf
xchg
pop
out
mov
div
mov
jo
stos
jnp
xchg
or
ret
leave
sar
inc
lock
xlat
adc
xlat
outs
stc
adc
int
(bad)
lea
xor
call
aam
push
mov
data16
and
lock
dec
inc
adc
mov
repz
mov
sbb
pop
shl
sub
mov
dec
push
loopne
sub
ficom
sbb
ror
(bad)
loop
dec
bnd
xor
sti
repnz
dec
push
sbb
cli
and
ds
push
(bad)
jmp
inc
mov
dec
lea
mov
ins
add
inc
loopne
mov
push
dec
enter
stc
pop
sahf
mov
fisttp
arpl
mov
jp
mov
mov
mov
push
mov
push
cmps
sub
and
lods
fwait
add
xchg
pop
mov
inc
aad
pop
xchg
xchg
test
sub
mov
call
int
das
mov
cmp
lock
dec
or
and
mov
sbb
sub
cwde
push
(bad)
xchg
int
mov
or
out
addr16
sahf
out
cmp
cmp
inc
jb
dec
add
adc
xlat
test
(bad)
in
sub
inc
pop
shl
inc
loopne
mov
jbe
les
cdq
pop
arpl
(bad)
mul
clc
jnp
sub
ror
sti
sub
aaa
sar
mov
mov
shl
pop
cmps
les
xchg
mov
adc
xchg
inc
dec
cmps
leave
scas
or
inc
repz
test
xchg
scas
and
in
pop
xchg
shl
popf
inc
push
xchg
inc
inc
xchg
pop
inc
sub
xchg
mov
dec
add
sbb
jnp
mov
aam
and
aad
and
aam
push
push
xor
(bad)
push
xor
nop
js
and
shr
or
mov
inc
test
pop
push
ins
mov
sbb
and
movs
jp
fcomp
std
mov
push
xchg
dec
fs
mov
enter
std
in
xchg
in
mov
sub
sub
or
iret
or
in
stos
leave
(bad)
adc
out
add
scas
dec
dec
ds
lock
rol
scas
mov
mov
test
sub
leave
xchg
scas
(bad)
cmp
jmp
imul
pushf
push
inc
mov
repnz
fidiv
pop
inc
fst
mov
mov
cs
mov
sbb
sar
or
pop
xor
push
cmp
out
arpl
jae
pop
hlt
or
push
ins
add
retf
int3
cwde
dec
jmp
cdq
jb
add
sar
ins
or
xor
xor
frstor
inc
jnp
loop
mov
xor
imul
test
xchg
pop
cli
lods
in
sahf
inc
clc
cmp
add
clc
ror
pop
cmp
or
mov
inc
mov
inc
gs
stos
scas
(bad)
adc
test
div
jle
in
jae
data16
mov
mov
push
sub
out
imul
mov
mov
sar
sub
dec
push
push
pop
pop
cli
aaa
jmp
fsub
sbb
and
mov
jmp
out
fdivr
mov
fcmovu
or
or
fcomp
xor
daa
push
jecxz
add
cld
mov
add
loope
je
loopne
(bad)
ins
push
mov
or
iret
or
into
cmp
cmp
xchg
mov
jae
in
jbe
push
sub
push
hlt
mov
sti
outs
add
push
add
pop
popf
xchg
xor
nop
out
pop
mov
lock
jle
and
mov
sbb
aaa
xchg
cmp
into
fstp
cmp
dec
mov
test
test
add
out
es
test
popa
add
and
int
mov
out
ret
add
xchg
test
out
jl
out
jbe
jecxz
int3
push
sbb
hlt
fistp
pop
(bad)
retf
mov
push
into
imul
sti
clc
add
or
dec
jo
ins
push
push
jae
xchg
test
sub
call
jp
mov
inc
stos
in
mov
xchg
cmp
mov
jb
pop
xchg
mov
xchg
sub
js
call
mov
fptan
or
scas
xor
mov
lahf
adc
jno
ins
push
fwait
(bad)
retf
aas
sbb
lock
cmps
cld
pop
push
sahf
(bad)
dec
jmp
in
cmp
add
stos
call
arpl
fs
fiadd
cs
sub
push
int
inc
pop
and
js
push
and
into
or
mov
(bad)
stc
imul
adc
sbb
retf
imul
mov
gs
and
es
jae
sbb
js
lods
movs
dec
aam
dec
sub
jecxz
aad
shl
mov
sbb
mov
jbe
jle
pusha
loope
daa
xchg
adc
mov
js
sbb
mov
xchg
imul
sub
in
sbb
add
(bad)
xchg
jmp
add
popf
jmp
jmp
cmps
iret
(bad)
popa
mov
push
xchg
jp
jmp
xor
cdq
scas
pop
out
push
in
outs
adc
je
(bad)
out
jno
pushf
jns
xor
call
ret
dec
cs
(bad)
jmp
jne
dec
mov
mov
inc
mov
bound
inc
cmp
ret
sub
pop
inc
xlat
adc
out
enter
call
out
mov
cwde
inc
mov
not
cwde
js
test
inc
cmp
sbb
sbb
jne
xor
icebp
jge
inc
(bad)
xchg
fs
loopne
test
call
test
or
ror
xchg
(bad)
dec
int3
test
pop
call
lods
ror
push
dec
ins
cmp
cs
sahf
dec
nop
popa
(bad)
out
stos
xor
push
and
sbb
sahf
mov
repnz
dec
in
cmp
gs
(bad)
ins
scas
mul
push
fistp
push
retf
or
push
mov
les
sbb
xor
mov
pop
mov
and
xor
xor
xlat
div
or
mov
dec
inc
movs
hlt
arpl
cdq
(bad)
xchg
ret
test
int
jmp
xchg
ins
cwde
mov
mov
pop
add
jns
push
retf
js
ja
mov
movs
(bad)
sub
(bad)
scas
push
into
lahf
xchg
mov
popa
xchg
cmp
inc
mov
sub
or
cld
mov
pop
inc
and
pop
xor
dec
arpl
cmp
lds
push
jb
pop
ret
cmp
jmp
mov
arpl
fild
adc
mov
(bad)
jae
mov
out
stos
out
pop
std
mov
xchg
ret
test
hlt
mov
sahf
xchg
add
sub
dec
jle
jae
scas
(bad)
out
cmp
xlat
rcr
add
mov
sti
stc
lods
dec
fcom
call
pop
push
jmp
ror
mov
outs
into
inc
test
int
out
leave
fcmovnbe
test
lock
pop
dec
retf
test
(bad)
mov
fldenv
clc
outs
push
test
push
stc
rcr
inc
fdivr
dec
not
cmp
and
cmp
mov
cmps
std
pop
das
(bad)
aam
loop
retf
mov
shl
cmp
or
xor
xor
and
cld
jno
cmp
mov
ins
jg
jne
adc
pop
add
popa
movs
mov
dec
jmp
xchg
cmp
test
test
repz
pop
fist
mov
shl
js
jbe
cmp
xchg
bound
adc
push
sbb
pop
xchg
jnp
(bad)
imul
out
mov
call
(bad)
mov
mov
call
paddusw
mov
push
pushf
fldcw
aas
jmp
and
push
mul
outs
test
in
push
outs
in
sub
inc
loope
loope
arpl
jne
loope
ds
scas
jo
and
xchg
sar
or
cmp
xor
pop
and
push
or
icebp
or
icebp
cmp
js
jmp
es
add
push
outs
aaa
jae
std
and
adc
xchg
jns
or
ins
adc
mov
mul
cld
call
xor
fisttp
pop
call
mov
or
mov
mov
jne
gs
jne
jae
pop
push
cld
jmp
sbb
or
popf
popa
and
mov
(bad)
sub
clc
sub
jb
scas
push
push
adc
mov
pop
mov
pushf
lahf
(bad)
aas
ins
in
call
inc
pop
cmp
push
imul
iret
jbe
mov
call
jae
jnp
popa
scas
test
scas
jmp
test
in
rcl
out
push
dec
mov
cmc
mov
or
(bad)
mov
in
jle
pop
cmps
pop
fmul
enter
clc
push
push
sbb
enter
dec
adc
aad
jp
mov
fist
popf
lock
pusha
test
into
fcomp
sub
mov
gs
aaa
inc
das
add
popa
test
xor
fimul
sbb
or
rcl
movs
jo
(bad)
push
inc
ins
or
add
xor
sbb
jp
mov
retf
add
loop
dec
(bad)
lock
iret
mov
sar
sbb
jp
xor
mov
idiv
retf
aas
jnp
inc
aas
out
push
sub
mov
add
or
popf
repnz
xchg
adc
stos
inc
push
sbb
jmp
push
ja
push
rsqrtps
add
out
ror
fnstsw
out
jne
or
xor
jle
rol
xchg
in
sub
loope
mov
out
scas
push
repnz
leave
or
mov
xor
inc
aad
jecxz
dec
fwait
in
ret
test
dec
add
(bad)
(bad)
loop
(bad)
fiadd
dec
sahf
dec
pop
leave
jmp
shl
jle
dec
inc
pushf
hlt
push
push
pop
cwde
out
pop
xor
jno
pusha
push
xor
aad
or
fisub
cmp
pop
call
mov
ins
outs
xor
ret
pop
cmp
cmp
out
out
call
hlt
jle
(bad)
xchg
mov
sub
les
cmp
sub
ds
addr16
and
dec
into
jmp
stc
pop
or
leave
(bad)
mov
cli
lods
out
pop
add
or
mov
fisub
div
dec
sub
into
in
cwde
(bad)
cmp
mov
dec
je
push
(bad)
rol
aaa
aam
cmp
int3
push
pop
sbb
cli
jg
int
xlat
or
cmps
int3
adc
in
xchg
mov
push
push
daa
cmps
jle
or
sbb
adc
imul
aaa
arpl
test
mov
sub
test
adc
das
mov
push
xchg
es
sahf
xlat
add
add
icebp
xlat
xor
push
and
mov
call
cs
inc
outs
pushf
shl
fst
les
adc
sub
loopne
push
mov
jns
clc
and
scas
out
pop
mov
jnp
into
mov
test
in
push
mov
cmc
jg
dec
or
mov
xchg
cmp
sub
out
add
ror
clc
into
jge
inc
lods
inc
sub
xchg
imul
mov
push
shl
inc
out
pop
shr
add
pop
stc
loope
xlat
mov
(bad)
pop
inc
and
idiv
xchg
pop
ds
out
adc
int3
push
pop
mov
mov
int
mov
adc
and
inc
cmp
out
(bad)
sysenter
jno
sbb
loope
cmps
pop
xchg
je
fiadd
pop
out
fwait
push
out
(bad)
inc
lea
(bad)
dec
ror
out
fst
mov
ror
fadd
sbb
mov
and
movs
jecxz
push
fcom
aad
and
xor
dec
pop
add
pop
sbb
into
pop
adc
lods
xchg
or
inc
dec
scas
popa
in
pop
jmp
ret
mov
mov
out
test
pop
ja
xor
jle
or
mov
(bad)
hlt
and
jne
sub
or
add
lahf
bound
inc
scas
ret
in
in
mov
popf
leave
sub
jecxz
jae
jl
cmps
lods
or
mov
dec
pop
call
fisub
movs
std
cmp
push
sub
icebp
sbb
xchg
or
sub
cmp
movs
out
mov
ds
stos
aam
in
into
mov
in
verr
aaa
push
mov
xchg
dec
dec
fld
int
test
loop
imul
sar
mov
dec
sub
dec
jmp
xchg
pop
in
test
lahf
sub
shl
pop
dec
mov
por
mov
lock
data16
jl
cmps
mov
xchg
xchg
(bad)
scas
dec
fiadd
xor
mov
push
test
jmp
mov
and
jecxz
ret
daa
loop
inc
shl
outs
(bad)
sbb
cmp
jno
pusha
xor
sbb
xchg
fnstcw
aas
les
shl
out
retf
mov
xchg
mov
(bad)
loopne
sub
loope
or
xor
(bad)
xchg
xchg
cmp
pop
pop
pop
lahf
outs
icebp
gs
mov
jns
mov
sbb
jmp
dec
call
test
imul
push
and
lock
lea
aas
adc
xor
mov
mov
sbb
and
inc
sub
jb
sbb
jo
adc
je
add
popa
mov
pop
dec
mov
inc
in
in
push
pop
cmp
mov
add
xchg
adc
sub
ss
or
or
xor
loopne
add
pop
lds
pop
sub
sahf
inc
lea
push
xchg
jae
pop
xchg
push
stos
(bad)
pushf
stc
mov
std
test
mov
mov
and
push
mov
xor
dec
push
clc
stc
push
dec
ins
ja
jnp
push
and
sub
jbe
fwait
(bad)
(bad)
rcr
cwde
int3
dec
pop
sbb
cdq
mov
(bad)
xchg
leave
sub
sbb
push
push
call
sahf
mov
or
add
xchg
das
pop
aaa
loopne
neg
ss
mov
add
lds
lods
pushf
xor
pop
loope
pop
push
jnp
adc
xor
loopne
hlt
sub
rcr
nop
push
ja
sti
jne
cmp
or
jo
mov
and
sti
or
mov
fidivr
movs
pop
and
shr
rcl
loop
jge
pop
mov
sub
dec
cmp
push
pushf
cmp
(bad)
or
cmp
outs
sub
push
in
cmp
push
ja
cmp
fwait
xchg
nop
out
out
pop
lods
jbe
fidivr
cmp
sub
mov
outs
imul
leave
call
xchg
iret
fcmovnbe
clc
jle
push
jmp
jp
enter
mov
aad
into
xor
test
sahf
lods
or
mov
mov
ror
push
ffreep
mov
sub
shl
xchg
pop
cmp
push
sbb
dec
and
in
pop
and
(bad)
cwde
xchg
retf
repz
shr
inc
pop
or
pop
loop
ss
xor
pop
xchg
test
mov
int3
jae
xor
push
stc
inc
jb
jge
xor
in
retf
inc
cmps
fild
mov
ret
cwde
call
xchg
mov
aas
fbstp
inc
add
cld
in
cli
fisttp
xchg
rol
mov
cmp
scas
enter
cmc
add
ret
test
rol
sbb
enter
test
mov
cmp
mov
add
push
popf
sub
popa
out
and
sub
aad
(bad)
mov
and
add
jb
and
(bad)
cmps
shl
mov
std
mov
sub
dec
ins
mov
pushf
and
in
cmc
cld
sbb
mov
inc
(bad)
nop
out
pusha
and
jmp
cs
loop
int3
retf
and
pop
out
inc
call
rcr
or
(bad)
dec
inc
(bad)
xchg
pop
cmps
xor
push
lea
pop
scas
cmps
xchg
or
xor
dec
push
mov
sbb
in
mov
sti
mov
leave
aam
xchg
repz
mov
jle
adc
xchg
cmps
jmp
mov
ss
test
mov
cmp
mov
mov
in
into
mov
adc
adc
stc
add
adc
cli
add
cmp
jnp
in
cmps
neg
fdivr
sub
movs
ja
(bad)
scas
pushf
popa
lods
fistp
les
mov
rcl
mov
sub
arpl
ins
sub
mov
loopne
xor
aad
mov
fs
es
jmp
push
push
cwde
int
retf
in
xchg
adc
adc
or
sbb
shr
mov
xchg
adc
or
stos
outs
pop
mov
push
ffree
scas
js
adc
les
push
pushf
add
popa
aaa
dec
xchg
xchg
xchg
xor
(bad)
ins
mov
mov
mov
add
fbld
inc
ds
inc
bound
test
leave
inc
sub
or
stc
mov
jo
loop
cdq
push
fwait
stc
cdq
cwde
pop
push
sbb
es
jl
or
jp
movs
pop
int
repz
ins
xor
cmp
and
xor
ins
(bad)
shl
sub
sub
cmp
xor
cmc
mov
(bad)
test
adc
jl
(bad)
xor
mov
(bad)
or
loopne
sub
mov
enter
inc
test
push
ins
rcr
std
xlat
imul
and
sbb
loope
out
add
scas
daa
push
les
movs
mov
inc
pop
sub
jne
fldcw
jmp
mov
mov
dec
jge
dec
pusha
adc
jmp
call
jp
push
ins
fld
jmp
outs
jle
in
sub
cli
cmp
ja
lock
inc
pushf
(bad)
jne
lahf
cmp
test
inc
xchg
in
mul
xor
(bad)
cdq
(bad)
cdq
add
jb
jo
outs
mov
sbb
in
sbb
mov
stc
rol
hlt
scas
cwde
popf
jb
retf
cld
xor
cmp
ret
xor
cmp
ficomp
rcl
jg
adc
cli
push
pop
scas
mov
inc
mov
mov
add
jle
add
adc
inc
test
cdq
lods
xor
imul
pop
push
icebp
xor
test
imul
std
push
mov
out
sar
test
cmc
(bad)
xor
pop
ja
push
dec
(bad)
adc
pop
pop
fisttp
stc
stos
dec
cmps
push
in
push
sbb
pop
xchg
stos
pop
inc
stc
push
js
xorps
mov
hlt
fimul
sub
pop
imul
add
ror
lock
push
in
movs
fdiv
cmp
jo
push
into
out
pop
push
add
mov
clc
or
dec
iret
in
in
scas
push
dec
inc
sub
bound
cmps
jnp
add
cwde
shl
or
push
push
call
adc
sub
out
outs
adc
fistp
ss
sbb
dec
retf
les
sbb
(bad)
imul
nop
ds
dec
movs
dec
(bad)
call
push
add
mov
in
pop
jb
test
sub
ss
dec
dec
jge
call
add
loopne
in
ja
icebp
push
bound
test
aad
mov
cwde
lods
or
pop
xchg
arpl
enter
dec
les
sub
sahf
push
cmps
ins
imul
je
loopne
xchg
push
out
xchg
xor
dec
xchg
jp
stc
loope
pop
(bad)
adc
mov
loope
adc
je
mov
out
xor
das
adc
fwait
call
cs
pop
js
push
fidiv
in
pop
adc
leave
std
lahf
lods
lea
jge
shl
in
xchg
out
mov
mov
add
int3
es
jo
jo
popa
sbb
sbb
fcom
fstp
rcr
es
int
sub
lods
test
das
out
mov
pop
xlat
addr16
ret
jne
(bad)
(bad)
iret
mov
bound
gs
call
arpl
fisttp
sbb
jmp
dec
push
cmp
pop
iret
outs
data16
in
stc
test
add
and
inc
loop
lods
dec
adc
mov
pop
jne
imul
mov
pushf
cmp
mov
add
sar
cmps
add
xchg
cmp
popa
enter
fldenv
out
mov
and
push
mov
cwde
addr16
push
xlat
aam
fcom
bound
jns
push
jne
and
xchg
ss
push
or
in
daa
rcr
into
into
imul
push
mov
mov
sub
inc
cmp
lods
sbb
stc
xor
push
std
cmps
inc
pop
sub
push
test
sahf
or
aam
or
fiadd
jmp
mov
push
mov
imul
xor
mov
sbb
or
jmp
fdivr
popa
add
fmul
scas
(bad)
fbstp
xor
add
sbb
jno
cdq
retf
mov
fwait
cmp
jmp
add
in
jne
std
shl
jo
test
cmps
xlat
pop
xchg
lahf
pop
xor
sti
(bad)
clc
push
sbb
xchg
(bad)
in
aaa
dec
adc
bound
push
out
mov
and
inc
dec
bound
scas
rsqrtps
inc
rol
mov
mov
fidivr
test
test
clc
js
push
enter
leave
and
pop
xlat
loope
mov
daa
fucomp
ret
inc
and
popa
sahf
add
ds
push
adc
sti
(bad)
fcom
pop
inc
xchg
mov
(bad)
and
in
and
call
sahf
idiv
cmp
sti
loopne
repnz
mov
popf
or
pop
cmps
xchg
mov
rol
cdq
add
jbe
in
les
and
mov
push
fsubr
aam
or
retf
bnd
push
mov
mov
test
push
pop
or
or
lods
add
cs
mov
pop
mov
out
mov
pop
test
sbb
les
sbb
mov
adc
lods
pop
mov
ror
xor
sub
cmp
(bad)
cmp
jl
shr
xchg
mov
xchg
dec
push
inc
(bad)
cmp
arpl
dec
mov
lea
inc
outs
aaa
movs
xor
cmp
outs
push
jae
(bad)
sbb
sub
and
cli
xchg
xor
dec
rcr
jns
pusha
and
sbb
sti
jns
pop
call
jnp
cmps
xor
out
jmp
aas
lods
pop
lahf
cmps
popf
jp
stc
ss
ins
(bad)
retf
sbb
pusha
sub
in
imul
and
pop
mov
dec
mov
loope
test
lods
jmp
sti
outs
sbb
adc
mov
pop
cmp
inc
pavgb
jle
add
or
hlt
test
lods
xlat
daa
addr16
adc
sub
shr
test
mov
cmp
xchg
pop
outs
daa
add
mov
sbb
(bad)
clc
retf
xor
enter
mov
mov
pop
aad
cmps
jg
sbb
xor
imul
ins
xor
movs
movs
enter
jae
mov
frstor
jle
lahf
fwait
in
inc
or
jmp
scas
ror
mov
add
test
mov
(bad)
jmp
movs
imul
adc
sub
iret
mov
mov
inc
fisub
pop
int3
loop
or
jmp
iret
addr16
inc
call
jge
add
or
ja
add
mul
sbb
adc
push
sub
bound
clc
cmp
pop
xor
mov
lods
retf
loop
test
jo
les
loopne
fs
dec
adc
add
mov
jmp
ds
jnp
mov
or
and
add
scas
sub
cmc
sub
mov
cmps
pop
cmp
in
mov
inc
and
jle
imul
pop
dec
sbb
push
add
jb
xor
ja
outs
pop
(bad)
test
cdq
mov
popa
jl
in
repnz
scas
loope
fidiv
jb
shl
loopne
js
dec
pop
mov
(bad)
iret
and
xchg
mov
mov
mov
cdq
push
(bad)
sbb
neg
mov
repnz
adc
or
jp
lds
out
ins
fmul
mov
cmp
inc
pop
mov
jo
cli
pop
dec
data16
imul
pop
outs
fsub
mov
mov
(bad)
mov
movs
rcr
pop
dec
mov
mov
test
data16
or
test
int
cmc
xchg
lods
push
das
add
cmovno
sbb
rol
sub
dec
popa
push
jb
rol
loope
mov
pop
lahf
out
and
test
retf
pop
sub
lods
pop
shl
js
pop
(bad)
out
add
dec
cwde
pushf
fistp
cmp
add
lds
xchg
pop
lahf
pusha
push
jae
stc
sbb
pop
stos
pop
lods
fs
in
xchg
xchg
sub
stos
xor
fsub
loope
add
popf
mov
(bad)
xchg
fld
or
(bad)
push
cdq
xor
stc
dec
mov
int3
push
inc
in
lock
inc
ja
jb
test
jecxz
mov
mov
mov
xchg
sub
cmp
movs
shl
ss
lahf
add
js
out
mov
cmp
mov
out
jmp
js
pop
imul
test
fs
loope
int3
retf
pop
repnz
and
sbb
ins
xchg
sbb
xchg
lock
lds
fcomip
add
pop
cmc
adc
push
adc
outs
pusha
inc
xchg
arpl
dec
test
push
in
aam
jae
dec
ds
arpl
out
adc
mov
movs
adc
jmp
std
jns
mov
xchg
imul
cmp
jl
stc
xor
ds
pop
pop
lock
adc
mov
dec
loope
aaa
mov
cmc
sbb
sub
sub
(bad)
dec
jno
mov
adc
pop
sub
adc
cli
scas
push
jae
movs
inc
jmp
popf
retf
lods
(bad)
scas
pop
fimul
mov
out
in
pop
stos
sbb
jo
xlat
imul
adc
and
mov
mov
or
clc
and
mov
xchg
dec
add
ss
stos
sbb
push
nop
out
movs
cwde
mov
mov
in
ret
test
cmp
sub
arpl
mov
ins
xchg
ror
jp
retf
inc
sahf
sti
jl
inc
mov
stos
cmp
dec
mov
pop
ret
cli
xor
mov
je
jae
ins
mov
xor
not
push
test
inc
push
jmp
scas
repz
scas
cmp
aam
mov
ja
cwde
les
les
inc
pushf
shr
aaa
or
fcomp
rcr
aad
out
dec
and
sub
xchg
int3
jns
loopne
shl
inc
(bad)
mov
pop
out
sahf
jecxz
jmp
jbe
(bad)
stc
dec
dec
test
das
and
shl
adc
shr
adc
enter
xor
sub
das
xchg
sbb
mov
lds
stc
push
stos
jb
push
mov
jl
fdivr
aad
loopne
out
ja
repz
xor
mov
mov
ins
dec
imul
clc
ret
push
push
jg
std
ins
adc
loope
cwde
rcr
jp
daa
in
and
adc
jmp
out
push
imul
(bad)
dec
inc
mov
aas
jp
loope
xor
jecxz
fs
std
movs
sbb
xor
or
sbb
push
xlat
dec
xor
inc
push
cdq
int
jl
ret
mov
daa
xor
cmp
imul
repnz
push
jmp
sub
popa
fstp
adc
mov
jecxz
xlat
mov
jg
test
popw
xchg
and
cmp
inc
jae
pop
sar
fwait
and
call
pop
push
xlat
xchg
add
sbb
jg
sub
pop
mov
jge
adc
jne
xor
sbb
push
fild
fisub
dec
or
(bad)
mov
adc
setno
test
lods
ror
(bad)
hlt
mov
stos
enter
rcr
lds
cli
outs
pop
dec
and
cwde
fldcw
inc
dec
scas
imul
gs
mov
pop
sbb
jne
add
sar
scas
gs
mov
dec
mov
aad
mov
jmp
and
inc
add
jmp
add
xchg
xor
bound
mov
in
cmp
js
xlat
cmp
add
and
adc
push
cli
lea
sbb
jae
jmp
xor
xor
inc
into
(bad)
jge
jge
mov
aaa
push
stc
int3
cs
sahf
add
aaa
push
retf
repnz
stos
or
push
retf
inc
xchg
frstor
mov
adc
mov
(bad)
lahf
int
movs
stc
adc
or
(bad)
aas
pusha
xchg
xor
pop
neg
jne
cdq
pop
iret
xchg
and
mov
cmps
nop
cld
ret
mov
cmp
stos
aaa
add
fwait
and
adc
jo
ins
mov
outs
or
xlat
xor
fdivr
or
outs
enter
mov
xchg
adc
bswap
xor
jl
movs
cwde
cmps
adc
call
pusha
push
inc
mov
and
pushf
adc
cmp
in
inc
in
xlat
sub
stos
and
test
bound
mov
mov
sbb
shl
add
das
add
das
push
fldenv
mov
and
nop
push
(bad)
cmps
pop
fwait
adc
pop
xchg
mov
dec
mov
pop
test
mov
and
out
pop
mov
mov
inc
push
inc
ret
aaa
and
push
mov
xor
test
mov
stc
sti
add
xchg
repnz
loopne
ret
loope
cmp
pop
jge
icebp
movs
xor
cmc
loop
cmp
das
mov
push
mov
sbb
and
xchg
fs
mov
sbb
adc
xor
loopne
mov
test
aas
div
pusha
arpl
mov
rcl
jmp
or
pop
and
cmps
jg
add
addr16
adc
mov
pop
ins
ret
gs
mov
xchg
adc
scas
xchg
or
mov
sub
jno
out
sbb
sbb
dec
sub
pop
jg
sbb
mov
jmp
retf
and
repnz
sub
jecxz
inc
aad
and
rol
dec
mov
mov
inc
jle
jle
arpl
int
add
in
add
sbb
cmp
sub
loop
neg
cmc
xor
dec
xchg
mov
dec
xor
push
cmp
sub
js
fdiv
inc
daa
cmps
pop
in
xor
add
call
mov
pop
(bad)
cld
xchg
shl
dec
sub
dec
cdq
dec
frstor
ds
sub
xor
jg
jbe
data16
push
(bad)
lock
into
pop
(bad)
outs
and
ret
pop
rcl
cwde
adc
and
fild
enter
(bad)
fadd
and
jmp
sar
push
pushf
out
mov
in
mov
test
pop
jnp
cdq
cmps
adc
inc
fsubr
aad
inc
fucomp
ins
jle
lock
mov
jae
data16
lds
mov
outs
sub
jnp
ins
fdiv
aas
scas
mov
or
inc
movs
xor
cld
inc
stc
shr
shr
jl
scas
fcomp
mov
jle
bound
xchg
mov
inc
ret
mov
mov
aas
mov
mov
inc
add
cmp
pop
sar
push
mov
in
inc
stos
xor
push
in
mov
cmp
xchg
pop
je
adc
jno
mov
jecxz
(bad)
test
mov
adc
fdivr
out
dec
cld
scas
push
mov
xor
sub
icebp
mov
aas
dec
add
sbb
sbb
das
pop
xchg
adc
mov
(bad)
pushf
lea
in
dec
in
pop
cmp
push
lahf
movs
push
mov
jmp
popf
jbe
lahf
adc
shr
mov
int
leave
inc
scas
or
jbe
and
in
add
test
xchg
aad
fsub
rol
fst
xor
fs
or
xor
dec
test
enter
test
lahf
ss
std
test
jnp
jne
fidivr
dec
mov
(bad)
cmps
mov
(bad)
rcl
lods
les
je
int3
mov
cmp
jmp
test
cmps
jl
js
loopne
stos
sub
inc
dec
in
jb
sub
fwait
push
test
call
je
add
cs
(bad)
mov
push
jo
bound
icebp
inc
mov
adc
shr
push
or
mov
ret
lods
jge
sar
jne
into
in
ret
popf
ss
xchg
jmp
(bad)
std
(bad)
pusha
fnsave
rcl
sbb
cmp
out
sub
mov
pop
fwait
in
mov
push
test
fsubr
adc
cdq
aaa
gs
mov
jb
adc
cmc
jmp
mov
mov
ds
in
dec
push
fcmovnbe
mov
mul
push
pop
cmps
pop
sbb
cmp
jle
imul
ror
cmp
dec
jecxz
push
movs
adc
pop
dec
lock
inc
icebp
scas
jl
inc
sbb
retf
ror
adc
xor
aam
jne
mov
xchg
sbb
pop
pusha
je
das
loope
mov
jecxz
sbb
imul
js
es
sub
mov
addr16
mov
cs
pop
mov
xor
pop
loop
mov
cmc
sbb
rcr
test
push
cmp
xor
pop
fstp
in
fadd
fs
icebp
cld
mov
shr
inc
fisttp
imul
add
es
jp
dec
inc
daa
xor
adc
dec
or
xchg
mov
push
pop
pop
pop
inc
iret
push
cwde
retf
lods
jge
bound
in
movs
fs
adc
cmps
cwde
mov
mov
cmps
pop
retf
dec
mov
mov
cmp
add
shr
imul
mov
mov
mov
lea
pop
jbe
ja
inc
pop
arpl
cmp
mov
ja
mov
mov
dec
scas
clc
inc
adc
not
mov
mov
sti
mov
adc
cmp
cmp
ret
cdq
pushf
outs
in
sbb
dec
inc
loope
or
mov
push
je
scas
adc
ficomp
adc
push
leave
test
xor
sbb
dec
mov
sahf
(bad)
pop
jae
in
adc
and
test
stos
iret
shl
shr
mov
mov
xlat
aas
lods
add
mov
pop
add
popa
scas
jb
ret
sti
fbld
inc
xchg
inc
repz
mov
push
movs
imul
and
inc
call
(bad)
sahf
jmp
in
jmp
xchg
or
imul
scas
fstp
or
mov
ja
mov
(bad)
mov
pop
add
leave
mov
movs
pushf
out
inc
cwde
mov
cmps
or
fnstsw
rcr
fprem1
movs
xchg
fyl2x
sbb
sbb
leave
(bad)
jmp
push
add
mov
adc
inc
lea
das
(bad)
jo
ins
sbb
push
daa
jb
jbe
push
mov
jl
fs
and
cmp
dec
mov
jl
cdq
sub
inc
mov
adc
xchg
inc
nop
dec
mov
stc
loop
push
sahf
pop
push
loop
push
xchg
sar
xchg
jg
mov
(bad)
sti
pop
fdivr
in
(bad)
ja
mov
dec
mov
xchg
jl
cli
jns
or
cmps
sub
into
or
add
lods
inc
out
xor
retf
aam
or
imul
scas
or
xlat
push
push
aam
in
mov
or
sbb
pop
push
gs
lods
mov
dec
fstp
mov
fstp
lock
pop
bound
popa
pop
js
adc
xchg
sbb
mov
pop
pop
not
jbe
data16
mov
popa
push
cwde
int
sbb
xchg
cli
xchg
aam
mov
cmp
sahf
cmp
lds
sbb
mov
out
cmp
push
mov
xchg
xchg
or
xchg
movs
daa
inc
imul
cmovbe
cli
call
lods
fs
mov
loope
xor
add
xchg
push
mov
jge
out
xchg
xchg
ins
adc
mov
jne
cs
nop
call
rcl
sub
fdiv
sub
mov
(bad)
out
mov
adc
mov
dec
outs
mov
lods
jp
adc
adc
cmps
imul
jae
push
das
(bad)
in
xor
jno
stc
int3
shl
fld
xor
cmp
jno
mov
movs
push
ret
rcr
pusha
cmp
dec
cli
xchg
outs
aas
push
in
loop
add
jle
pop
inc
push
shl
or
cmps
or
cmps
in
in
fdivr
mov
fnstenv
pop
repz
dec
inc
inc
stos
addr16
sub
popa
jl
dec
or
aaa
adc
lods
mov
push
sbb
push
ds
rcl
ins
add
xlat
je
pushf
xor
in
push
aas
xchg
fist
shl
cmps
imul
push
or
sbb
mov
sub
and
adc
call
das
fadd
popa
iret
dec
adc
pop
call
gs
cmp
mov
fsub
test
call
jbe
fst
fnstcw
jmp
mov
into
push
inc
jecxz
shl
xor
sub
test
(bad)
cs
cld
aam
ret
fs
jle
and
imul
xor
outs
loope
xor
dec
push
test
inc
fnsave
push
or
mov
add
or
mov
pop
or
dec
cs
mov
jmp
iret
add
cmp
mov
dec
out
ds
ds
(bad)
out
dec
push
inc
call
outs
cs
iret
mov
jno
cmp
outs
pop
adc
(bad)
jmp
das
pop
dec
sahf
add
push
or
scas
int3
push
jo
or
fcmovnb
xchg
push
push
loopne
movs
lock
or
mov
lods
pop
add
or
mov
js
outs
sbb
dec
jecxz
rcl
test
rcl
es
shl
hlt
ins
retf
clc
or
sbb
inc
out
js
xchg
int
mov
pop
mov
lock
cmp
jno
fidivr
ja
lahf
pop
cdq
jnp
push
jmp
jnp
shl
inc
test
push
cmp
pop
xchg
cmp
jmp
hlt
movs
icebp
leave
cdq
xchg
lods
or
rol
or
and
lods
outs
mov
or
fcomi
retf
call
rol
push
out
xor
bound
cli
xor
aam
je
test
xchg
sar
loop
xchg
mov
movs
les
(bad)
je
shl
cli
sub
pop
jns
mov
fst
fwait
push
leave
(bad)
cmc
inc
(bad)
cwde
lods
jmp
push
xchg
rol
push
sbb
or
in
pop
jae
and
mov
mov
clc
loopne
mov
mov
cdq
sahf
pop
xchg
pushf
mov
cmp
mov
or
mov
loope
hlt
jmp
pusha
retf
xor
jb
pop
jmp
jge
jmp
fstp
and
xchg
xor
mov
ret
nop
lock
daa
mov
mov
test
int3
adc
and
mov
stos
jo
fs
inc
loop
lea
xchg
inc
pop
mov
test
mov
ja
add
arpl
inc
je
adc
lea
cmp
(bad)
bnd
dec
(bad)
out
adc
sub
lahf
lds
aam
call
xlat
jo
hlt
sbb
xor
dec
adc
xor
popf
pop
adc
xor
clc
add
imul
lahf
int3
mov
ins
sbb
les
inc
cmc
sub
mov
xor
push
loop
repnz
loopne
stos
xchg
lea
sub
test
cmp
and
cdq
inc
je
je
lock
dec
aaa
aas
mov
test
(bad)
mov
mov
mov
xchg
push
pop
test
popf
or
fadd
mov
(bad)
jmp
fwait
enter
js
inc
addr16
dec
sar
outs
es
mov
loop
dec
inc
push
in
loope
sub
or
fidivr
(bad)
fistp
and
mov
test
fdiv
fld
sub
jnp
push
jle
nop
mov
pxor
(bad)
cmovs
cdq
ds
in
sub
out
mov
cmp
div
and
dec
ret
lods
mov
fidivr
ret
movs
adc
xor
mov
fmul
or
cmp
mov
sahf
cmp
call
xor
xchg
mov
sbb
inc
mov
mov
ins
xchg
jl
push
addr16
and
xchg
hlt
push
test
xor
dec
xor
lahf
push
mov
(bad)
cmc
jg
inc
clc
call
adc
outs
inc
movs
mov
adc
push
mov
xor
stc
stc
sub
inc
pop
cwde
mov
gs
loopne
adc
and
fs
loopne
stc
fstsw
jnp
xchg
or
xchg
push
push
ror
cmp
(bad)
pop
iret
jo
test
adc
(bad)
push
mov
pop
(bad)
ds
mov
ss
jle
xchg
ds
out
mov
imul
jle
seta
ss
ss
mov
push
adc
in
adc
dec
lock
push
fidiv
out
jecxz
xchg
in
sub
pop
pop
and
enter
add
mov
scas
in
jbe
jno
stc
std
lock
push
fdiv
in
test
retf
add
push
lds
lahf
dec
ret
cld
mov
lods
mov
or
sub
cdq
dec
addr16
cmp
pop
stos
fs
xor
push
lea
test
jbe
mov
js
inc
cld
or
nop
dec
fstp
pop
retf
fwait
cmps
loop
mov
cmp
mov
aaa
dec
inc
push
stos
pop
cmp
adc
sub
jae
add
dec
push
stos
xchg
rol
fwait
ss
dec
cmp
and
xor
xchg
sbb
cmp
or
arpl
adc
fcomp
aas
cmp
mov
xor
inc
je
sub
leave
leave
jmp
das
jge
adc
test
(bad)
cli
jle
sub
jo
int
pop
xchg
test
adc
into
mov
xor
or
xchg
icebp
in
and
pop
push
mov
jo
mov
mov
jmp
stc
or
aas
mov
int3
sub
push
cld
(bad)
out
push
loopne
fst
loop
or
ror
stos
cmps
(bad)
out
aas
or
fnstcw
push
jb
jnp
popa
ins
imul
sbb
int3
retf
and
adc
dec
pop
adc
jne
or
mov
mov
test
lahf
sub
(bad)
pop
fdivr
fs
inc
bound
lds
push
cmps
adc
mov
enter
cli
cwde
sahf
rcl
add
movs
scas
loop
outs
add
dec
mov
das
fs
(bad)
dec
cdq
mov
and
push
mov
push
mov
std
pop
mov
dec
fs
outs
jle
ret
mov
lahf
xor
repnz
dec
mov
xlat
mov
pop
dec
(bad)
fdiv
cmp
xchg
fild
push
or
jo
push
jne
mov
sbb
test
or
xor
ret
(bad)
out
mov
add
mov
in
shr
xchg
sahf
stos
je
daa
lods
pop
out
xchg
adc
cwde
mov
(bad)
mov
lds
cli
ret
push
mov
mov
(bad)
test
xchg
stos
hlt
push
je
xor
daa
dec
inc
gs
imul
xchg
xchg
inc
dec
lahf
(bad)
ja
add
out
jmp
mov
dec
mov
sub
test
jecxz
add
ds
mov
mov
(bad)
jmp
clc
frstor
sub
clc
sahf
cmps
inc
inc
rdmsr
inc
pop
sar
jns
jle
dec
lds
loopne
aad
cwde
pop
mov
cmp
out
xchg
sub
xlat
adc
hlt
and
dec
ss
jns
sub
imul
pop
std
sar
stos
and
and
mov
pop
retf
push
addr16
test
mov
sbb
adc
pop
hlt
mov
push
jne
fwait
out
outs
fwait
pop
jmp
shr
inc
in
inc
adc
lods
push
or
mov
cmp
pushf
test
inc
inc
rcl
dec
xor
pop
sar
aad
pop
adc
jmp
xchg
or
aad
mov
arpl
mov
aad
or
shl
cmp
imul
lods
repnz
mov
(bad)
out
ret
add
xchg
sti
dec
mov
fdiv
xchg
dec
mov
movs
mov
cmps
test
cwde
pop
adc
xchg
ss
mov
pop
cli
mov
and
sub
cmp
push
cmp
mov
stos
movs
dec
or
std
in
(bad)
fs
xor
push
les
or
les
out
xchg
adc
cdq
cmp
cmc
ror
push
xor
push
mov
rol
ja
mov
mov
inc
cdq
out
stos
ds
jecxz
nop
or
clc
add
sbb
clc
ds
inc
rcl
je
scas
test
repnz
cmps
lahf
pop
lds
ret
dec
imul
js
je
cs
add
add
std
mov
imul
fs
iret
xor
mov
(bad)
pop
clc
lea
sbb
mov
dec
jl
mov
cmps
push
or
sub
or
sub
xor
mov
sub
aas
call
(bad)
popf
add
xor
jg
in
shl
and
xchg
jo
pop
cmps
inc
or
in
push
shl
mov
shl
jne
imul
popa
push
pop
or
fidivr
ds
mov
hlt
pop
icebp
int3
pop
in
jge
adc
rcl
xor
push
into
repz
inc
out
(bad)
lea
cmp
mov
cdq
bound
popf
jo
test
call
cld
push
jns
jne
ins
xor
or
movs
outs
out
jae
xchg
inc
mov
test
mov
inc
xor
and
jp
adc
cmp
lods
fisttp
add
jmp
pop
aad
test
or
(bad)
(bad)
jbe
jmp
jbe
sub
sbb
pushf
jmp
in
movs
add
lahf
and
into
add
std
repz
outs
sub
call
xor
lds
jl
push
sbb
imul
jno
xor
dec
dec
and
ins
or
movs
cmp
daa
repz
pop
mov
jns
mov
cld
mov
adc
push
mov
add
movs
cmp
inc
retf
mov
cmp
je
stos
(bad)
div
fcmovnu
repz
push
cs
loop
icebp
fistp
shl
xchg
push
inc
xchg
sbb
sbb
pop
xchg
leave
mov
neg
mov
adc
xchg
cmp
jbe
adc
xor
jbe
mov
push
(bad)
mov
push
pushf
ds
call
jecxz
pop
inc
cdq
pusha
pop
jae
push
and
aaa
ficom
jp
sbb
cmps
inc
movs
into
(bad)
adc
mov
jo
addr16
imul
dec
inc
in
jmp
scas
mov
xor
into
pop
int3
fiadd
xchg
jl
gs
les
xor
jae
or
add
loope
mov
daa
inc
add
ins
dec
sbb
jns
adc
scas
int3
lea
push
dec
int3
sbb
ficom
mul
adc
shr
test
pop
in
or
cwde
(bad)
cmc
or
add
inc
fdiv
(bad)
mov
sti
adc
cld
inc
ficom
push
push
daa
mov
mov
in
in
mov
mov
xor
push
push
xor
(bad)
xor
enter
push
div
sub
out
mov
ret
and
or
cld
sahf
(bad)
push
mov
test
jb
lahf
jmp
adc
vcvtsd2ss
pop
add
ss
sbb
movs
mov
pop
mov
jo
lock
xchg
mov
jecxz
imul
test
clc
stos
pop
out
sub
add
xchg
and
stc
dec
imul
jb
std
xor
out
push
adc
mov
xor
pop
frstor
jp
mov
jb
push
stos
xchg
addr16
xchg
fdivp
mov
pop
sbb
push
inc
in
div
in
mov
mov
add
adc
inc
ins
popf
jl
into
cld
push
aas
std
or
ss
addr16
push
hlt
(bad)
cs
jl
dec
mov
cmp
sub
cmp
xor
push
mov
fisttp
mov
shl
mov
mov
sbb
aas
(bad)
jl
mov
cmps
cmps
mov
rcr
sub
ret
inc
(bad)
fmul
popf
stc
jge
sub
push
sbb
jp
pop
movs
int3
sahf
cmps
fwait
rcl
mov
imul
fisub
lods
pop
adc
sub
scas
jp
mov
and
dec
js
pop
and
mov
loop
inc
sti
dec
les
xor
out
jl
adc
push
pop
push
rol
mov
fwait
cs
in
adc
test
cmp
inc
shr
or
cwde
push
sub
frstor
arpl
data16
dec
inc
daa
jge
cli
adc
sbb
pop
out
mov
mov
adc
cli
mov
pop
dec
sbb
test
mov
cs
xor
aam
inc
scas
cmps
xor
sti
sub
inc
push
fistp
sbb
pop
into
pusha
sub
sub
dec
mov
lea
inc
mov
cmp
push
adc
push
pop
int3
retf
mov
sbb
jne
cmps
push
jno
cs
adc
dec
mov
mov
out
hlt
mov
inc
pop
xor
jecxz
fsub
ret
xor
mov
mov
jbe
sub
bound
sub
nop
int
movs
push
adc
(bad)
(bad)
jmp
stos
add
ror
daa
sbb
mov
cmp
out
dec
sub
push
jns
mov
mov
aad
mul
mov
xchg
jb
int
call
or
rol
inc
mov
iret
sub
pop
add
ins
scas
or
push
xchg
outs
int3
jl
xchg
or
inc
jp
inc
aaa
stc
and
jnp
cmp
mov
or
les
std
add
inc
shl
dec
int
fwait
sub
test
mov
sbb
(bad)
popf
mov
shl
mov
adc
jnp
add
fwait
nop
retf
idiv
sahf
sbb
rcr
cmc
adc
shl
dec
jp
xchg
or
jmp
into
dec
jnp
cmps
je
cmp
inc
int
and
mov
dec
jno
retf
xlat
out
jl
push
inc
(bad)
adc
lahf
and
dec
adc
mov
and
out
cmps
jg
div
scas
pop
(bad)
pop
inc
arpl
mov
gs
push
out
push
(bad)
ja
retf
mov
xor
jg
iret
movhlps
jmp
addr16
enter
ins
mov
sbb
dec
pop
mov
and
popf
mov
lods
pop
push
mov
dec
pop
pop
and
bnd
adc
mov
inc
gs
ins
imul
outs
imul
sbb
(bad)
aaa
sub
mov
into
mov
mov
mov
mov
sub
sar
sbb
mov
sub
shl
iret
or
add
xor
cmp
cmps
in
sub
mov
loopne
xchg
pop
cmp
mov
adc
ins
daa
inc
dec
add
ret
push
dec
inc
and
inc
xor
in
test
sbb
cwde
or
rcl
shr
mov
mov
sub
ret
push
mov
add
mov
jno
ret
movs
push
(bad)
in
adc
or
sub
xchg
aas
movs
dec
mov
mov
or
jae
rcl
sbb
push
ret
inc
sbb
mov
xchg
sub
xchg
push
dec
or
mov
das
lock
ds
adc
mov
(bad)
retf
test
mov
xchg
arpl
outs
loope
pop
int3
in
jb
imul
pop
or
dec
lock
xchg
xor
jmp
je
stos
(bad)
cld
dec
jecxz
pop
cld
push
stos
fld
dec
jl
pop
mov
or
(bad)
lods
scas
xchg
lods
cmp
clc
cmp
in
loop
push
icebp
xlat
leave
jbe
jl
mov
in
xor
sahf
ficomp
xor
arpl
pop
sbb
test
stos
adc
or
sti
sbb
pop
dec
mov
adc
adc
or
pop
mov
jnp
mov
enter
dec
icebp
adc
mov
lock
outs
and
mov
out
sub
dec
out
push
loopne
xchg
in
push
ror
ss
fwait
xchg
adc
stc
mov
and
jecxz
sar
jne
inc
repz
test
jmp
rcr
in
jge
jecxz
(bad)
push
xchg
xchg
pop
outs
sbb
sbb
inc
out
or
(bad)
fbld
jns
in
and
repz
dec
retf
in
jne
mov
jns
in
sub
shl
lods
imul
jnp
mov
or
or
int3
test
out
call
fcomp
ror
sbb
push
or
sub
aas
in
scas
cmp
mov
push
push
out
icebp
movs
adc
lods
dec
stc
dec
int3
cs
jl
mov
int3
ffree
stos
sahf
mov
xchg
mov
ins
xor
pusha
jns
mov
fiadd
or
enter
int
in
push
or
dec
dec
arpl
cmp
mov
fwait
mov
jmp
sahf
xor
inc
add
push
ds
xchg
jne
mov
test
aad
aas
adc
(bad)
cmp
and
jns
das
adc
push
or
fwait
test
xor
add
jnp
xor
fs
shl
outs
stos
ss
inc
std
sub
mov
pop
cmp
sbb
mov
pop
cli
mov
mov
xchg
push
retf
sbb
push
sub
pop
(bad)
lea
adc
js
sub
jno
ins
jns
cli
mov
jge
jbe
dec
movs
sti
or
mov
shl
dec
sub
push
sbb
jmp
mov
add
xchg
or
dec
stos
ss
outs
cmp
inc
jns
xchg
cmp
jnp
xor
lock
cli
push
sbb
jg
push
fisub
aas
cld
repnz
adc
inc
mov
jmp
mov
out
jmp
iret
and
sbb
inc
xor
test
nop
cwde
push
cmps
(bad)
add
mov
push
movs
and
sub
loop
push
(bad)
jmp
jg
cmp
xchg
fcomp
cmp
sub
jmp
xor
shr
les
daa
scas
cs
mov
(bad)
mov
xlat
mov
cmp
aaa
pop
fmul
or
and
adc
inc
xor
repz
outs
fwait
into
fiadd
push
es
xor
push
ret
or
or
popa
dec
or
inc
in
mov
stc
mov
mov
mov
add
xchg
in
retf
jne
sbb
jge
mov
mov
xchg
jne
(bad)
jne
fstp
retf
mov
mov
test
icebp
mul
dec
mov
iret
pop
icebp
fstp
mov
cmc
xor
jmp
cwde
(bad)
cmp
mov
jne
(bad)
inc
mov
cwde
test
xchg
dec
pop
inc
call
inc
push
mov
jle
sub
loop
lods
nop
jmp
xchg
jmp
and
mov
mov
or
and
mov
sbb
and
ret
jnp
sbb
jmp
mov
sub
dec
loope
out
cmp
xchg
pop
add
mov
cmps
push
(bad)
cli
js
fst
sub
jb
add
outs
arpl
sbb
jae
mov
push
(bad)
jg
enter
mov
cs
adc
push
iret
mov
xlat
movs
test
jl
es
je
std
mov
and
mov
inc
pop
ret
jp
mov
clc
cmp
enter
add
loope
cmp
movs
imul
mov
aaa
inc
and
aam
sub
xor
add
push
addr16
jge
int3
hlt
mov
mov
push
fdivr
inc
fwait
mov
jle
lock
out
xchg
pusha
inc
xor
loop
pop
dec
out
push
add
mov
mov
mov
jae
ret
push
sub
push
clc
imul
popf
xor
xor
sub
or
imul
jmp
inc
in
or
and
mov
sbb
stos
(bad)
in
lods
mov
xchg
adc
mov
stos
mov
scas
mov
(bad)
shr
mov
bound
rcl
xchg
movs
mov
arpl
sbb
fist
ja
xchg
push
adc
mov
xchg
add
jae
jg
xchg
and
add
stos
outs
adc
pop
inc
and
mov
test
jnp
jne
jno
and
stos
jb
push
jle
popa
jg
dec
xchg
inc
ins
dec
sub
mov
cli
cmp
sti
ins
aam
jge
ror
retf
pop
and
lods
hlt
add
or
pop
jno
fiadd
je
ret
pop
push
ror
adc
repz
fild
in
and
mov
xchg
call
pop
pushf
and
mov
sahf
iret
fs
daa
inc
or
(bad)
pop
mov
rdmsr
sub
pop
sbb
xchg
iret
mov
sahf
sbb
sub
xchg
pop
leave
xlat
jmp
mov
push
gs
jno
mov
jl
sbb
repz
jl
xchg
sbb
out
(bad)
and
test
pop
test
xor
xchg
dec
fiadd
sbb
je
stos
shl
cmp
(bad)
sub
pop
jge
sub
adc
xchg
sti
out
fadd
cmp
pop
mov
adc
adc
ss
aam
inc
imul
jb
mov
out
xchg
dec
loop
push
(bad)
dec
sub
mov
xchg
inc
retf
pop
dec
rol
test
fldenv
shr
stos
lods
icebp
adc
inc
sbb
out
sbb
pop
cmp
stos
push
mov
(bad)
mov
test
test
aam
ins
pop
rol
clc
fstp
(bad)
out
imul
jle
jmp
pushf
mov
sbb
pop
mov
call
xchg
neg
mov
mov
lock
iret
pop
in
or
xor
pop
xchg
idiv
dec
cli
sbb
sbb
pop
pusha
sub
inc
rol
out
jns
jecxz
add
pop
and
push
jp
das
retf
jl
dec
cld
or
pop
je
xor
mov
cmp
(bad)
dec
and
mov
ja
dec
stos
cmp
idiv
es
js
es
addr16
dec
inc
in
pop
add
mov
mov
jno
xchg
push
or
inc
icebp
dec
push
and
jbe
ror
mov
lock
xlat
jg
test
sub
icebp
cmps
jae
dec
(bad)
leave
pshufw
out
hlt
inc
jle
add
sub
cmps
in
fcmove
jecxz
inc
inc
cli
fidivr
in
mov
xor
mov
inc
and
adc
call
xor
mov
mov
adc
sub
and
out
scas
jg
aam
in
test
enter
div
in
mov
and
rcl
mov
add
cdq
imul
push
mov
fcomip
jb
aam
mov
cmps
repz
mov
test
stc
rcl
xchg
mov
shr
loop
mul
repnz
jmp
mov
out
pop
dec
push
inc
leave
cmc
sbb
(bad)
int
inc
lods
mov
stc
repnz
in
sar
mov
fucompp
mov
retf
mov
std
(bad)
sbb
sbb
mov
xchg
vpaddq
(bad)
repnz
popf
lods
or
xor
jns
adc
jnp
je
and
adc
ins
loopne
sbb
jo
ror
or
shl
cmp
shl
gs
push
mov
mov
lds
add
mov
test
push
fild
sahf
lahf
arpl
xor
cdq
push
sub
loopne
test
fild
push
mov
inc
adc
pop
push
outs
cmps
and
jmp
and
call
pop
push
or
movs
fsub
pop
mov
pop
loopne
sub
sbb
cmp
pop
push
mov
jp
cmp
jno
jmp
mov
aam
sbb
and
fwait
mov
lods
and
jg
adc
lds
sbb
arpl
fstp
test
inc
daa
or
jno
mov
cs
cwde
adc
push
jecxz
push
mov
xor
xor
jae
push
mov
test
sub
lahf
in
mov
cmp
add
inc
sub
adc
xor
inc
xchg
jge
sub
sbb
out
mov
sbb
inc
or
dec
add
fwait
adc
push
(bad)
pop
ja
lds
shr
add
add
sub
in
mov
(bad)
pop
lahf
pop
nop
iret
loopne
pop
(bad)
mov
mov
sub
cmps
and
cs
enter
leave
pop
push
push
loope
jecxz
test
mov
and
(bad)
pop
mov
push
fsub
cld
dec
jo
imul
sub
adc
(bad)
adc
sbb
loopne
sub
fsubr
repnz
sub
jmp
repnz
inc
push
aam
mov
out
cmp
add
loop
inc
ins
bound
fwait
xchg
test
iret
or
test
xchg
cmps
jmp
sub
jnp
pop
popa
stos
jmp
and
call
outs
sub
sub
xor
es
adc
cld
inc
clc
add
mov
retf
call
add
dec
push
xor
adc
ja
dec
xor
in
cwde
inc
je
nop
push
aam
pop
imul
int3
jmp
sub
outs
fimul
pop
cmp
and
sahf
shl
aas
pop
div
jmp
mov
rcr
js
mov
mov
aam
ss
pop
jno
popf
fwait
aas
push
cwde
jle
mov
mov
push
jns
movs
lock
and
jb
pop
sub
mov
enter
bound
aad
sub
(bad)
addr16
xchg
pop
add
cmp
cmp
jmp
pop
jecxz
mov
xchg
in
mov
or
add
sbb
xchg
sbb
and
sub
jb
inc
inc
adc
bound
rcl
jne
lea
pusha
and
and
hlt
sbb
scas
cli
or
aas
cwde
sahf
stos
pop
mov
call
pushf
gs
or
sti
dec
imul
popa
ins
mov
or
mov
nop
nop
in
add
or
push
hlt
xchg
inc
leave
movs
(bad)
lock
mov
add
add
lahf
or
inc
(bad)
xchg
jl
pop
sahf
cmp
pop
sub
xchg
call
cmps
add
inc
mov
scas
pop
ficomp
xchg
mov
xor
mov
xchg
adc
push
cs
or
jl
add
pop
addr16
and
pushf
jp
push
stos
lods
cmps
or
les
sub
retf
mov
jne
stos
stc
jl
xor
lds
jno
out
aaa
stos
jno
inc
adc
sbb
add
mov
aad
bound
movs
jno
pop
fxtract
in
arpl
out
cmc
je
push
xchg
stos
call
sbb
jmp
popf
fsubr
xor
outs
out
jmp
(bad)
loop
iret
stos
xlat
sbb
push
push
inc
inc
sub
cmp
mov
sbb
pop
(bad)
mov
mov
jns
cdq
call
popa
ss
adc
add
in
xchg
mov
inc
xor
jno
repz
ror
cld
xchg
mov
mov
sar
sbb
lods
retf
and
adc
ret
shr
rol
ja
xor
pop
rcr
ss
dec
xor
xor
pop
jg
ins
fimul
dec
xor
xor
clc
addr16
ret
pop
daa
push
inc
push
frstor
sbb
clc
xor
aam
jle
sbb
rol
jge
add
sbb
push
sub
inc
(bad)
pop
je
call
(bad)
ret
sti
aad
and
mov
xor
call
cmp
nop
(bad)
dec
lahf
jnp
xlat
xor
or
jle
mov
daa
pusha
mov
mov
shl
fld
imul
push
adc
inc
mov
popa
pop
or
xor
and
mov
pop
cmp
outs
in
push
nop
cdq
sbb
xchg
push
mov
ds
arpl
cdq
bound
fild
inc
dec
inc
mov
push
shl
addr16
adc
ret
pop
xor
jmp
sti
sbb
(bad)
call
mov
xchg
adc
add
in
jecxz
cmc
cdq
and
div
dec
mov
mov
jno
stos
scas
retf
jae
push
test
mov
je
outs
and
fidivr
jg
(bad)
daa
push
ret
ret
shl
rcl
sar
fdivr
enter
jecxz
cmp
sbb
mov
mov
mov
cli
hlt
jb
pushf
ds
int3
adc
jg
or
movs
inc
call
push
or
lods
mov
loopne
mul
shl
add
ret
jns
gs
fsub
xor
popa
adc
in
cmp
pop
scas
cld
repz
outs
jo
add
and
push
mov
ins
mov
push
and
outs
pop
cmp
and
lock
movs
call
sub
repnz
xchg
mov
push
ja
adc
(bad)
mov
dec
leave
lods
fidiv
stos
push
push
inc
mov
push
lods
enter
mov
rol
loop
cwde
sub
mov
into
mov
aam
fidivr
mov
pop
jecxz
sbb
or
mov
imul
push
adc
add
adc
adc
inc
sub
push
jbe
jge
mov
adc
mov
pop
inc
popf
or
bound
xchg
inc
(bad)
adc
adc
sub
idiv
ins
std
inc
sbb
movs
push
lods
cmps
mov
or
rcl
mov
sahf
xor
lea
div
rcl
push
mov
mov
add
sbb
imul
jl
push
inc
fdivrp
and
mov
iret
pop
dec
push
jp
nop
cdq
shr
enter
cmp
fisub
mov
cli
cs
adc
add
xor
cmps
and
xor
pop
mov
scas
mov
nop
jl
adc
jle
(bad)
mov
ins
push
ins
lea
into
mov
aaa
mov
xchg
je
cmp
mov
popa
lahf
pop
mov
mov
pop
xor
stos
mov
in
pop
mov
and
add
or
movs
push
popf
jmp
imul
int
or
imul
mov
in
fadd
xor
pop
cli
or
ds
stos
xchg
mov
pop
shl
push
pmullw
sub
fisubr
sub
cmp
inc
lock
lahf
pop
or
fistp
push
xchg
jmp
add
and
outs
xchg
adc
and
lea
mov
cmp
mov
jae
or
add
fsubr
push
and
jl
cmp
clc
cmp
push
jnp
les
mov
pop
pop
pop
xchg
or
loop
test
jae
les
xor
dec
cmp
sbb
imul
(bad)
imul
fnstenv
inc
int3
lahf
cmp
push
aaa
jle
mov
jmp
call
push
mov
int
fcomp
cs
in
mov
xchg
pop
sbb
pop
in
push
sbb
in
push
test
out
add
mov
sbb
push
nop
xchg
mov
push
mov
test
jne
sahf
inc
ret
retf
pop
jno
das
or
enter
outs
ss
jmp
inc
mov
fld
or
daa
int
mov
daa
or
pop
shl
sub
add
pop
scas
and
loope
mov
js
inc
and
in
push
pop
mov
xchg
push
sub
jae
leave
jle
and
sahf
aaa
dec
arpl
adc
jnp
mov
sub
dec
inc
inc
mov
jmp
adc
cmps
popa
mov
push
stos
rcl
sbb
pop
je
cmp
mov
pop
or
fwait
cmps
xchg
dec
sar
cli
and
fisub
jbe
(bad)
aam
xor
fst
push
lea
loopne
loopne
outs
outs
scas
xor
fimul
and
neg
ret
out
jae
mov
jge
mov
xor
cdq
lea
mov
outs
ss
xlat
fcomp
mov
ja
test
pop
mov
pop
adc
adc
leave
es
movs
repz
scas
pop
stos
mov
jecxz
add
sahf
cmp
fwait
repnz
out
push
das
inc
stos
gs
sbb
dec
shr
fs
sub
cmps
inc
adc
test
in
es
call
cmp
int
push
sbb
out
int
ss
test
xor
jecxz
retf
jmp
movs
cs
daa
mov
lods
pop
inc
sar
(bad)
nop
pusha
cdq
fs
lahf
jg
sub
hlt
xor
or
mov
mov
jmp
jmp
and
repz
lea
and
add
ror
nop
mov
xchg
sahf
fist
mov
pop
icebp
push
hlt
jmp
push
push
(bad)
stos
cmp
push
xor
pop
push
popa
adc
adc
stos
sbb
jne
jae
and
pusha
es
ror
popa
mov
sub
rol
in
mov
sbb
movs
fisub
inc
sub
and
fisubr
cmc
add
cwde
sbb
jecxz
mul
mov
sar
sub
sub
int3
and
dec
cmp
into
iret
and
fprem
add
push
dec
dec
sub
jp
adc
mov
mov
jl
mov
sbb
sbb
sbb
ret
retf
pop
cmp
sar
ror
mov
std
aaa
outs
sbb
movs
jmp
daa
es
or
shr
cmc
and
bound
cmp
jg
push
aam
push
lods
popf
add
js
dec
mov
push
mov
mov
call
in
sbb
xchg
jl
jp
stc
mov
movs
push
loop
stos
imul
sub
lds
clc
xchg
and
sbb
rcl
aad
idiv
cld
shl
pop
adc
jo
lea
push
ret
jne
pop
outs
sahf
lods
dec
cmc
mov
ror
push
out
repnz
rcl
mov
mov
or
test
cdq
data16
push
adc
or
stc
add
sbb
mov
(bad)
int
cmp
imul
repnz
sub
in
xchg
loop
or
mov
ror
mov
sahf
and
out
sti
shr
inc
into
sub
ja
mov
mov
retf
jecxz
rcl
add
aaa
inc
xlat
pop
jmp
jmp
stos
xchg
daa
retf
mov
push
jmp
or
mov
dec
ffree
imul
fmul
push
imul
loopne
cmp
shl
ja
push
(bad)
ja
xor
push
sub
push
repnz
inc
call
fs
fimul
inc
dec
out
das
out
pop
movups
adc
test
test
push
fldenv
aad
mov
adc
adc
and
dec
mov
and
rcl
es
loope
test
in
xor
mov
push
retf
test
dec
xchg
dec
out
sub
or
xlat
cmp
xchg
ins
mov
sbb
movs
iret
mov
js
inc
push
add
data16
lock
or
mov
test
sbb
cmp
dec
cmp
mov
add
js
enter
mov
inc
fsub
fisttp
mov
jb
les
jne
jbe
jb
jns
sub
xchg
mov
es
mov
push
push
mov
xchg
out
mov
add
(bad)
xor
xchg
ficom
arpl
mov
adc
out
out
xor
dec
lds
icebp
and
fdiv
mov
inc
push
sub
aam
and
arpl
fwait
push
mov
in
push
lahf
movs
sub
push
out
cmp
retf
xor
in
cmps
rol
pushf
dec
sub
jle
push
test
mov
push
xor
clc
mov
rcr
or
add
or
cld
mov
mov
stos
in
and
out
jmp
sbb
sbb
frstor
or
push
jns
int3
ins
dec
ins
aam
bound
(bad)
aas
mov
and
das
lods
or
add
sar
mov
push
xor
je
xchg
cmp
bound
cli
and
imul
inc
(bad)
adc
out
add
and
inc
xor
push
push
or
aam
shl
push
out
pop
ins
jp
fwait
leave
int
sub
xchg
mov
ret
inc
or
inc
xchg
je
out
sbb
repz
and
daa
inc
adc
adc
and
jb
lds
adc
mov
sahf
inc
jmp
push
jg
arpl
adc
loope
cs
psrlw
loope
loop
std
test
push
adc
mov
jb
cmp
pop
jge
cmp
cmc
lock
movs
add
dec
push
lods
call
jbe
mov
fst
ss
jecxz
xor
(bad)
push
push
pop
pop
sbb
sbb
sahf
xor
in
fbld
mov
das
sahf
out
mov
fisttp
xchg
jns
mov
ror
or
adc
in
lahf
sbb
mov
xchg
std
ins
mov
and
cwde
jmp
shr
in
sbb
cs
cdq
addr16
push
sub
xor
inc
ins
les
pop
cmps
dec
pushf
mov
dec
adc
push
add
push
fdivr
fcomi
outs
push
(bad)
xchg
mov
xlat
imul
and
sahf
int3
dec
or
pop
rcr
iret
repz
inc
mov
enter
fidivr
int3
imul
mov
stc
push
sbb
out
pop
out
fnstenv
mov
rol
mov
inc
fldcw
dec
mov
sub
xchg
in
pop
pop
out
cmp
adc
shr
push
push
dec
xor
mov
in
shl
inc
xchg
int3
or
popf
or
cmps
sub
mov
cmp
pop
pop
ss
sbb
outs
(bad)
or
cmp
iret
xor
cmp
pop
dec
into
mov
and
jae
add
mov
arpl
dec
ja
sahf
jb
fild
loop
push
(bad)
stos
jmp
cmps
iret
pop
push
shl
mov
es
popa
sar
je
mov
push
dec
lods
cmp
sbb
call
stc
out
mov
or
lahf
inc
xor
xchg
xchg
and
(bad)
or
mov
shl
mov
test
mov
cmps
cwde
push
retf
mov
sub
xchg
retf
dec
(bad)
sub
or
push
fcomp
push
jno
xchg
xchg
push
shl
sbb
adc
neg
dec
jl
ror
sbb
lahf
std
ret
cmps
imul
add
jns
retf
mov
mov
sub
cmp
int3
mov
push
jb
cmp
mov
test
and
sub
or
out
(bad)
fisttp
leave
and
mov
(bad)
dec
mov
nop
mov
or
lock
scas
test
and
jb
fucom
aam
(bad)
jne
int3
mov
rcr
cmps
repnz
imul
fisttp
jge
jne
js
or
push
mov
sbb
aaa
sub
(bad)
dec
push
mov
push
lods
adc
and
mov
cmp
popa
outs
cmps
xchg
adc
cmc
xchg
leave
aaa
fs
cs
nop
sub
xchg
add
pop
leave
arpl
xor
push
add
dec
sub
out
sub
test
lock
ins
adc
(bad)
in
xchg
adc
fdiv
xchg
aam
jo
dec
cwde
loopne
popf
outs
inc
lahf
inc
add
cli
jle
mov
xor
jmp
cmp
sub
retf
mov
call
aaa
mov
outs
jo
pop
(bad)
sbb
adc
fld
adc
icebp
mov
sti
adc
pop
popa
stc
les
add
stos
mov
push
hlt
ret
adc
xor
cmp
or
in
add
mov
xlat
idiv
icebp
ja
aas
and
or
movs
mov
add
xor
fisttp
jno
(bad)
dec
sub
retf
retf
jl
fs
call
add
cs
pop
rcl
imul
adc
mov
and
or
inc
mov
(bad)
jo
add
shl
or
push
push
lahf
sub
push
push
mov
pop
out
into
fisttp
push
mov
mov
jl
pushf
cwde
(bad)
pop
stos
fwait
jmp
rcl
lds
or
sub
dec
int3
fisub
mov
fsubp
fbld
(bad)
adc
dec
sar
aas
cmps
push
mov
int3
or
pusha
fcmovbe
in
mov
loopne
movs
or
and
in
fstp
push
mov
dec
sub
xor
jnp
data16
mov
dec
push
xchg
mov
mov
and
call
dec
mov
inc
ins
xor
sub
mov
add
fbld
xchg
cmp
jle
push
push
fwait
mov
nop
shl
(bad)
jg
sti
dec
mov
push
jmp
or
xchg
push
cli
ja
gs
lock
push
paddusw
into
out
cmps
push
sbb
or
inc
push
inc
mov
cli
cwde
call
clc
mov
dec
addr16
das
mov
das
sub
gs
scas
mov
ret
jmp
xor
pop
xchg
sub
adc
cmp
fsub
ret
jns
movs
and
sbb
pop
adc
push
pop
leave
jl
push
ins
jle
mov
pop
test
out
sub
and
mov
or
dec
loope
push
mov
mov
mov
push
sub
cmc
adc
inc
push
sub
push
aaa
in
xor
mov
in
mov
(bad)
rcr
and
adc
test
dec
inc
lods
sbb
xor
test
lods
push
xchg
stos
in
mov
and
in
scas
cmp
addps
ins
cdq
rol
stos
jno
sbb
xlat
fisttp
cmp
mov
ja
hlt
lods
and
test
mov
cmp
add
retf
push
mov
inc
cmp
push
push
ja
das
ins
push
cli
jle
cli
stos
inc
loope
out
pop
call
fsub
and
retf
push
mov
jnp
mul
fstp
or
test
aas
pusha
xchg
push
jmp
and
mov
dec
test
arpl
rcr
jecxz
inc
inc
cmp
mov
sub
jne
mov
dec
inc
adc
sbb
inc
mov
push
outs
jl
repnz
sbb
add
into
sub
out
push
xchg
mov
lock
cmp
icebp
retf
jg
mov
adc
and
iret
sbb
xchg
fisttp
push
cmp
add
enter
lds
mov
jmp
xchg
repnz
push
outs
or
outs
lods
cli
repnz
jge
or
push
mov
adc
sub
jne
jne
shl
adc
sub
sbb
jb
sbb
or
jmp
in
lods
mov
icebp
jb
popf
in
imul
or
xchg
hlt
test
fisttp
adc
out
xchg
jo
jmp
pop
mov
clc
mov
shl
and
push
or
test
push
xor
and
je
inc
pop
add
mov
pushf
lods
rcl
and
cmc
jecxz
mov
scas
or
or
xchg
dec
xchg
pushf
inc
sbb
ins
out
cmp
lock
sbb
mov
mov
mov
mov
pop
adc
or
or
add
add
adc
cli
adc
loop
jae
mov
popa
das
pusha
outs
js
add
inc
xchg
pop
xchg
add
sbb
add
cld
mov
xchg
xor
out
jo
jmp
ja
cwde
inc
sub
mov
stos
sahf
cmp
pop
(bad)
loopne
pop
ret
cmps
pop
js
jb
mov
arpl
addr16
leave
inc
popf
adc
pusha
cmp
aad
out
enter
mov
pop
je
xor
stos
xchg
test
movs
fwait
and
sbb
std
div
add
xor
das
loopne
pushw
push
push
imul
push
adc
jo
xchg
cmc
cmp
adc
jmp
stos
adc
inc
aad
mov
inc
aam
callw
call
mov
pushf
(bad)
das
pushf
lea
pushf
ret
mov
inc
repnz
in
push
dec
cmp
mov
mov
loop
mov
or
add
lock
or
leave
jmp
xchg
rol
stos
pop
pushf
xor
daa
fcmovb
and
ins
(bad)
mov
cmp
adc
or
scas
int3
fidivr
pop
leave
cli
pop
cmp
mov
sub
(bad)
sar
cmp
std
mov
aad
adc
mov
pop
add
xor
mul
jo
cmc
cmp
mov
mov
cmp
in
jno
aaa
pop
and
jns
mov
mov
nop
jle
aad
mov
dec
pop
mov
imul
sbb
fsubr
push
mov
fst
pop
call
sbb
pop
imul
xor
mov
jae
mov
ins
cmps
aad
add
mov
rcr
adc
in
sbb
adc
dec
dec
aad
fcmovu
outs
adc
stos
add
jg
pusha
jle
dec
sub
pop
sub
adc
push
adc
and
mov
cmc
adc
mov
jl
inc
mov
fwait
inc
stos
mov
push
mov
(bad)
jbe
test
adc
xor
sbb
cmc
fwait
and
push
in
repz
scas
mov
jb
inc
xor
jge
cmp
adc
daa
sbb
cs
(bad)
mov
mov
xchg
(bad)
out
xor
mov
repnz
add
inc
ss
cmc
cdq
sti
pop
mov
lock
aas
inc
test
push
enter
push
out
cmp
repnz
icebp
mov
pop
cs
jge
mov
pop
mov
dec
mov
inc
fiadd
fld
adc
aam
mov
jae
or
call
cmp
mov
mov
mov
xlat
adc
inc
sub
stos
aas
sub
lock
dec
cmp
xlat
(bad)
aas
into
xor
mov
add
ficomp
sbb
cmp
rcr
test
loopne
mov
inc
cdq
and
test
fnstcw
dec
or
movs
daa
cmps
int
(bad)
mov
ins
mov
lahf
je
mov
jecxz
add
ins
mov
ins
movs
cld
adc
pop
push
sbb
and
call
jge
xlat
pop
sbb
pushf
jb
cmps
(bad)
psubb
loope
jge
pop
sbb
scas
enter
mov
lds
test
sbb
push
jge
call
add
mov
dec
adc
imul
js
ja
test
adc
scas
mov
aad
jmp
pop
ret
cmps
push
push
cmp
std
imul
or
mov
in
or
fisubr
loopne
lea
out
std
std
aas
cmc
sub
sbb
mov
pop
push
int3
in
inc
and
gs
pop
sub
in
(bad)
(bad)
jp
aad
std
imul
and
dec
les
jl
imul
and
shr
dec
and
test
xchg
jne
dec
dec
inc
sbb
ror
adc
adc
pop
pop
fisttp
xor
add
in
dec
cmp
mov
or
mov
xor
jo
pop
jecxz
in
repz
cdq
fidiv
test
adc
sahf
add
outs
xchg
lock
in
std
clc
add
stos
aaa
call
movs
mov
xlat
bound
inc
xor
lea
pushf
add
fbstp
inc
jbe
add
jl
outs
xchg
xor
pop
jb
les
or
popf
clc
xor
mov
pop
scas
shl
dec
out
nop
add
mov
xor
cld
push
sub
mov
jne
ja
ins
loop
repz
jmp
adc
fxch
fist
les
adc
outs
fmul
cwde
dec
jmp
lock
aam
inc
fwait
mov
xchg
retw
shr
in
jp
xor
retf
int3
out
mov
dec
push
pop
inc
arpl
pop
push
dec
imul
push
aaa
dec
mov
fmul
in
pusha
push
dec
sbb
data16
std
push
imul
loope
lods
mov
in
and
sub
(bad)
cmps
xlat
bound
sub
sbb
mov
stc
adc
sbb
and
outs
add
out
cmp
movzx
sbb
dec
sar
imul
jge
rcl
and
mov
cmp
push
jmp
mov
sbb
mov
xor
mov
test
daa
jle
inc
addr16
jmp
test
in
push
aaa
xchg
adc
xchg
inc
cmp
mov
ss
inc
and
ins
sahf
rcl
nop
repz
js
cdq
call
cmp
mov
imul
(bad)
or
pop
mov
xchg
pop
dec
inc
std
into
repz
mov
mov
je
retf
add
rcl
xor
loopne
adc
dec
(bad)
stc
int
push
mov
cmps
push
fistp
popa
daa
das
or
retf
sbb
adc
dec
push
add
push
or
loop
cmp
xor
mov
je
mov
in
in
call
les
(bad)
fild
test
push
into
add
mov
jne
(bad)
cs
mov
sar
ins
adc
pop
loopne
sbb
sub
ret
adc
(bad)
xchg
jecxz
out
lea
out
mov
mov
mov
xor
aad
push
mov
test
lods
dec
inc
mov
loope
js
cmps
scas
mov
in
mov
push
(bad)
pop
repz
leave
sti
mov
lahf
jns
mov
adc
ficom
out
push
(bad)
pop
cs
xorps
enter
jo
add
jns
out
xor
cli
xor
sub
adc
xor
call
lahf
jmp
cmc
add
cmps
dec
jle
int
cli
movs
dec
mov
inc
pop
stos
cmp
jp
inc
xchg
and
mov
sbb
fsubr
xchg
icebp
ds
adc
fnsave
pop
rol
fistp
mov
loope
xor
test
ficom
or
mov
jmp
hlt
jl
dec
sub
fcomi
fs
lahf
sub
ds
addr16
sbb
xor
fisubr
arpl
adc
imul
mov
clc
shl
icebp
arpl
dec
fsub
mov
popa
and
movs
imul
mov
dec
fmul
les
push
xlat
or
jl
and
sub
mov
sbb
mov
out
(bad)
in
(bad)
xor
sub
cmp
inc
jmp
test
jae
jns
mov
sub
ins
repz
cmp
(bad)
and
xor
ret
push
out
dec
dec
cli
or
ins
pop
jecxz
and
add
in
stc
loop
test
or
and
ret
add
jns
in
sbb
(bad)
mov
idiv
shrd
es
pusha
inc
add
xchg
test
lods
fcomp
fst
das
in
mov
out
js
cmp
sbb
rcr
and
(bad)
call
mov
lock
ror
jl
mov
lods
call
sbb
fdivp
(bad)
in
es
xchg
nop
jae
dec
cmp
and
add
or
mov
movs
xor
jbe
arpl
cmp
stos
mov
sub
into
inc
pop
and
adc
(bad)
shl
push
jg
dec
sti
(bad)
adc
int
add
jmp
add
out
pop
sub
xor
jno
pop
inc
out
or
sbb
mov
ret
fisubr
repz
cmp
stc
test
adc
xor
and
mov
mov
inc
mov
jno
inc
xor
out
sbb
sbb
sub
sbb
and
adc
std
xor
jae
add
pusha
sub
push
(bad)
and
mov
and
idiv
out
fstp
mov
sub
sub
rcr
jmp
jbe
pop
or
jns
jmp
fwait
jl
scas
or
push
arpl
mov
mov
cmp
das
push
sbb
and
pop
xchg
out
(bad)
cmps
dec
mov
xor
xor
mov
sbb
enter
inc
inc
mov
jg
(bad)
mov
xchg
mov
fbld
mov
lods
sar
ret
push
adc
in
dec
adc
add
mov
mov
fisttp
xchg
ins
sbb
and
add
add
out
and
mov
add
fmul
pop
js
sbb
(bad)
std
pop
in
cmp
leave
loopne
fistp
popf
cmc
pusha
das
xor
jnp
retf
xchg
das
pop
dec
push
cwde
xchg
rcl
adc
xor
dec
xor
mov
cmps
dec
jle
das
mov
cmp
jg
stos
pop
jmp
and
mov
xchg
cmp
cwde
mov
inc
adc
xor
mov
call
jmp
sbb
lods
jmp
jne
adc
lods
or
pop
mov
cmp
xchg
adc
and
cdq
sub
arpl
ds
and
ss
jg
pop
rol
dec
lods
aaa
int3
in
xor
pop
mov
mov
jb
mov
jne
repz
xor
je
out
repz
in
push
mov
lods
rcl
lods
pop
fwait
xor
sbb
mov
mov
bound
inc
in
mov
or
lahf
inc
or
xchg
fs
mov
movs
clc
cmp
xchg
jmp
add
call
dec
xchg
movs
leave
mov
test
mov
and
lock
punpckhbw
push
mov
inc
fidiv
outs
ds
cs
dec
xor
jo
leave
scas
cmp
ret
inc
std
rcl
inc
adc
cmp
clc
icebp
lock
mov
in
xchg
mov
xchg
movs
sbb
mov
ins
sti
xor
mov
sub
test
ins
ror
mov
rcl
mov
jmp
test
add
aad
pop
ins
xchg
sbb
adc
scas
fisub
movs
stc
test
push
sub
lods
adc
arpl
outs
mov
jl
pop
or
call
mov
jbe
call
xchg
pop
jns
mov
cmps
cmp
push
cmp
xchg
enter
jmp
dec
cmp
mov
dec
mov
mov
imul
cwde
ss
push
loop
inc
mov
in
popf
clc
out
jmp
mov
mov
pop
lahf
pop
xchg
fimul
jno
mov
daa
mov
retf
repnz
jbe
fcomp
jge
rcr
mov
retf
rcr
sysenter
dec
dec
add
cs
(bad)
xor
jno
and
sub
out
jmp
lods
(bad)
mov
and
in
fstp
jmp
icebp
aad
loopne
outs
mov
retf
test
mov
push
test
test
ja
ss
sub
cmp
push
pop
inc
mov
add
ins
js
pusha
push
mov
sbb
repnz
repnz
jmp
fs
sti
loop
dec
icebp
xchg
cmp
inc
xchg
or
xor
mov
xchg
xor
test
mov
pop
mov
lea
repnz
inc
or
fsub
aad
dec
sahf
mov
ret
repz
jp
pop
push
js
int
jl
loope
xchg
inc
inc
xchg
xchg
add
(bad)
sbb
mov
in
out
dec
cmp
gs
nop
stc
inc
rol
mov
dec
ja
loope
das
retf
icebp
cmp
jnp
in
fwait
dec
call
pop
push
(bad)
ja
sub
fwait
inc
int
(bad)
mul
fild
mov
into
mov
adc
fiadd
jg
cmp
mov
adc
fwait
inc
(bad)
imul
outs
repnz
mov
pop
gs
ins
aad
xor
pop
mov
add
mov
fstp
mov
mov
inc
or
push
xor
stc
js
xchg
adc
aas
call
jmp
dec
movs
adc
sti
lds
sbb
jmp
shl
mov
aas
jmp
je
je
push
xor
out
jecxz
shl
mov
enter
ins
xchg
(bad)
push
mov
movs
push
sbb
mov
int
test
retf
mov
leave
test
cwde
sbb
out
in
hlt
mov
ror
xchg
loop
push
setbe
mov
or
outs
fs
je
pop
or
ins
test
cmp
adc
pop
cmps
push
lea
iret
hlt
shl
xchg
pop
cmc
adc
xor
std
retf
div
lds
inc
cmps
and
xor
mov
add
out
test
jge
ror
push
xor
push
push
lds
xlat
fistp
mov
push
icebp
pop
lgs
scas
mov
js
ins
cmp
(bad)
nop
xor
jg
fldcw
mov
inc
pop
inc
push
dec
pop
(bad)
movs
fs
xor
adc
outs
sub
bnd
and
into
adc
push
sti
call
lea
pop
test
xor
inc
or
jg
pop
cdq
cmp
mov
leave
scas
adc
jbe
gs
mov
push
jbe
aaa
loope
out
shl
cmps
cmp
pusha
jl
retf
add
pop
inc
addr16
or
mov
push
out
mov
enter
dec
xchg
sub
pushf
ret
push
push
push
imul
(bad)
pop
fst
jmp
cmp
push
cmp
test
gs
and
mov
addr16
fadd
xchg
shr
push
and
test
out
mov
leave
mov
popf
jg
das
aas
enter
mov
cmps
test
pushf
xor
dec
fwait
inc
(bad)
mov
leave
fld
push
sbb
fwait
loop
retf
jns
scas
int
ins
jecxz
mov
popf
add
fnstenv
xchg
jo
cmp
mov
test
out
aad
test
out
test
scas
or
push
lds
inc
movs
xor
adc
retf
div
lods
sub
loopne
push
mov
shl
xor
inc
add
xlat
push
or
scas
or
shl
dec
sbb
test
cmp
fucom
push
xor
jl
sub
mov
lods
cs
xor
arpl
sbb
xlat
ret
xchg
inc
or
movs
fsub
repnz
mov
jb
jns
mov
(bad)
mov
mov
jecxz
jp
mov
popf
out
jo
mov
or
sbb
dec
xchg
in
into
fwait
mov
xchg
dec
jns
ds
cmc
inc
test
xchg
jp
mov
push
mov
sahf
push
mov
pop
dec
cs
stos
sbb
imul
movs
push
cmc
pop
hlt
daa
outs
mov
sbb
inc
mov
movs
push
xlat
and
or
jne
mov
cs
and
jp
adc
sub
into
xchg
xchg
sub
retf
out
mov
je
fs
add
stos
cwde
xor
mov
cmp
outs
push
mov
sub
mov
mov
sbb
mov
rcr
cmp
repz
sub
sub
movs
or
les
call
cmp
retf
cmp
jge
(bad)
es
adc
setne
in
lods
outs
xor
fmulp
and
cld
xor
inc
xchg
mov
(bad)
in
imul
enter
pop
and
xchg
test
fwait
push
adc
test
call
jmp
pop
stc
in
fild
pop
sar
test
movs
(bad)
repnz
jb
les
cmps
push
mov
fistp
xor
cmps
mov
xor
adc
mov
addr16
movs
shl
imul
ins
mov
pop
daa
add
aaa
mov
ins
in
in
and
retf
ret
inc
cmp
mov
cli
out
out
iret
pop
(bad)
loope
addr16
fs
gs
inc
jl
inc
cwde
adc
repnz
addr16
xor
aas
cmc
add
push
add
in
movs
inc
and
int3
mov
xor
jp
inc
ret
cld
mov
jae
or
shl
dec
mov
inc
mov
enter
(bad)
ins
retf
ss
ret
push
or
push
and
ins
lods
daa
adc
icebp
jo
shl
imul
mov
and
or
jp
xchg
mov
imul
sti
cmp
push
or
movs
cmp
cdq
(bad)
std
movs
push
ret
mov
sub
mov
popa
(bad)
and
sti
out
retf
clc
lea
out
stc
in
mov
sbb
and
cdq
sub
adc
shl
in
xor
mov
jbe
lock
mov
call
push
leave
push
mov
xor
dec
and
mov
mov
out
es
or
or
pop
daa
mov
fiadd
sbb
mov
out
lock
push
test
dec
out
and
inc
push
xor
fld
(bad)
sub
popa
inc
mov
gs
adc
sub
or
popa
sub
and
fndisi(8087
adc
sbb
xchg
inc
into
add
out
push
ror
lods
out
mov
xchg
push
mov
mov
lods
mov
popa
or
mov
mov
cdq
sub
js
sub
xchg
hlt
pop
les
push
inc
jne
push
or
adc
out
das
or
movs
jnp
dec
push
xchg
std
sub
scas
outs
sub
popf
mov
outs
stos
cmp
shl
push
adc
lds
mov
pcmpeqb
imul
pop
lods
pop
scas
in
jp
fsubr
lahf
cwde
inc
jbe
pop
adc
inc
push
mov
dec
dec
add
sub
inc
push
test
gs
ret
xor
(bad)
xchg
fisttp
xor
sub
pusha
jb
mov
sbb
and
dec
cmp
and
hlt
js
push
push
sti
dec
test
xchg
pop
and
adc
push
fsubr
cdq
xor
mov
adc
inc
dec
inc
mov
mov
ss
push
cmc
push
stos
push
cmps
scas
cmp
popf
add
add
jmp
sbb
cwde
das
adc
add
stos
push
retf
in
in
mov
cmp
jle
push
xor
push
mov
inc
mov
sbb
leave
cmp
or
xor
sbb
fcmovnb
push
vcvttps2dq
cmp
mov
dec
ins
ds
stos
ins
jl
or
and
mov
xchg
sub
stos
pop
inc
mov
mov
aad
std
fs
and
cmc
mov
lods
shl
sbb
inc
je
leave
scas
leave
stc
sti
pop
cmp
int3
in
test
cmps
fcmovu
mov
mov
ss
mov
cmc
test
(bad)
jae
enter
dec
push
imul
xor
in
imul
cmc
cmc
cmp
arpl
test
cdq
fwait
inc
js
out
pop
rol
mov
adc
mov
cmc
fild
cdq
pop
sahf
cmp
sub
inc
popa
clc
retf
sbb
dec
cmp
idiv
dec
sub
fstp
and
mov
cmp
cmps
test
jl
pop
push
adc
arpl
jo
inc
test
clc
push
pop
lods
aaa
mov
add
lock
loop
lds
test
push
xchg
retf
not
mov
sbb
stc
lock
rep
loopne
call
sahf
into
jns
setle
cmp
mov
sbb
das
push
or
xchg
sahf
pop
or
scas
cmp
inc
push
sbb
jmp
les
mov
ret
rol
sub
pop
or
mov
pop
inc
scas
jns
lods
std
jle
mov
add
out
cmps
dec
outs
xchg
lds
mov
cs
push
cld
pop
mov
icebp
(bad)
push
inc
pushf
inc
adc
jmp
sub
sub
mov
punpcklbw
sbb
sbb
sub
pop
xchg
retf
out
fldenv
push
inc
mov
push
stos
mov
stos
pop
addr16
cmp
js
jecxz
cmp
and
loope
lds
xlat
mov
pop
mov
loope
loopne
adc
add
lea
lahf
scas
retf
and
sub
in
mov
hlt
dec
mov
je
dec
push
pop
and
neg
adc
push
jmp
xor
test
sbb
in
aam
adc
(bad)
loope
mov
mov
mov
ins
push
dec
lds
dec
mov
or
jne
loope
add
mov
ret
arpl
adc
dec
lea
fcomp
push
mov
mov
ret
mov
(bad)
sub
pop
jmp
push
sub
xchg
sar
mov
psrld
cld
pop
fst
xchg
cmp
(bad)
idiv
pop
pop
leave
das
mov
ja
popf
ret
shl
jle
inc
call
adc
fs
daa
push
mov
ss
pop
rep
mov
adc
or
push
loope
dec
pop
cs
push
into
or
mov
mov
xor
or
cmp
pop
sbb
push
in
jmp
je
aas
push
cmps
or
xchg
dec
popa
jmp
(bad)
xor
or
jmp
dec
xor
loope
sub
xchg
add
loope
mov
sbb
xor
gs
sbb
and
push
mov
mov
pop
out
jbe
ret
int
add
pop
pop
sahf
sbb
aas
jmp
xor
mov
sub
gs
adc
jne
(bad)
(bad)
jl
pop
jb
in
adc
push
das
adc
mov
call
popa
(bad)
xchg
sbb
fld
lods
xor
push
pop
and
bound
jae
test
es
lds
rol
sbb
add
xor
cli
mov
shl
movs
and
les
sbb
ins
mov
fwait
mov
lahf
loopne
aaa
sar
leave
ror
(bad)
loope
in
sub
scas
mov
outs
js
pop
retf
pop
in
neg
(bad)
or
sti
cmp
sub
pop
loope
fwait
or
cli
ror
push
xchg
sbb
dec
orps
mov
imul
rol
xor
fstp
sbb
cwde
pop
add
cmp
popa
cmps
push
pop
dec
sbb
clc
nop
xlat
pop
scas
cli
mov
fiadd
call
xlat
jmp
adc
push
loopne
clc
mov
mov
js
leave
cld
ret
into
test
retf
rcl
jne
out
sub
push
(bad)
jmp
cmp
mov
cmc
xor
sub
or
mulps
(bad)
std
dec
aaa
jbe
fwait
jl
push
inc
xchg
sbb
fiadd
pop
mov
mov
shl
outs
in
fsubp
mov
and
mov
and
cmc
shl
pop
pop
mov
or
and
(bad)
int
sub
jge
jmp
sbb
mov
test
lock
sub
and
scas
mov
loopne
shl
test
fcom
add
repz
lds
movs
add
repnz
int
pusha
jecxz
dec
add
call
(bad)
lods
icebp
lock
push
push
sbb
sub
inc
ret
pop
pop
xor
xor
jecxz
out
xor
into
pop
hlt
fnstcw
add
push
mov
mov
into
cwde
sub
sbb
pop
jp
mov
cmps
sub
repnz
mov
lods
add
xor
sbb
iret
fwait
inc
xor
lock
leave
cmp
nop
inc
out
neg
cmp
sbb
push
sub
in
jmp
arpl
(bad)
int3
das
cld
mul
xchg
jecxz
sbb
aaa
out
jae
stos
sbb
cli
mov
and
aam
push
sub
cli
js
adc
fcmovne
test
pusha
fs
shl
push
jnp
shl
or
mov
test
adc
rdmsr
xchg
and
or
ss
ffreep
imul
pop
adc
(bad)
out
dec
mov
push
jbe
jnp
and
sub
jnp
mov
dec
and
dec
fldcw
fs
addr16
mov
adc
push
retf
fldcw
push
je
push
adc
dec
dec
jl
loopne
inc
mov
jp
in
inc
ins
lods
lahf
rcr
xchg
push
fimul
das
in
popf
pop
dec
outs
mov
pop
adc
dec
mov
jbe
sbb
jle
pop
or
cmp
int
clc
ins
sub
and
dec
push
xchg
movs
dec
in
and
sti
test
std
mov
mov
pop
lea
call
cmp
sti
add
stos
adc
ss
dec
les
xchg
stos
js
bound
cmps
jno
jle
and
push
sbb
xlat
pop
sub
out
add
sti
out
pop
sbb
xchg
in
mov
into
and
dec
sub
lods
mov
lock
dec
and
push
mov
dec
or
jae
push
lahf
les
imul
pop
push
mov
cmc
jp
rol
mov
iret
mov
enter
cmps
ds
mov
sar
jmp
test
out
xchg
shl
pop
cwde
mov
das
xchg
out
(bad)
xchg
push
cdq
push
movs
cs
bound
xchg
inc
fcom
jno
push
(bad)
int
fidivr
xor
mov
jae
and
rol
neg
hlt
or
stos
sub
and
xrelease
xchg
test
cdq
stos
test
push
xor
and
jle
jmp
sub
lods
(bad)
scas
dec
mov
inc
jg
ret
cdq
mov
xor
leave
sub
cld
or
fs
les
push
and
sbb
test
or
call
sar
pop
movs
push
mov
sub
loopne
movs
aam
data16
nop
sub
fs
je
loopne
push
mov
sbb
cmp
xchg
lea
push
stos
and
jae
and
xchg
push
dec
sub
pop
test
js
xlat
repz
inc
jl
pop
mov
aas
xchg
and
push
sti
scas
aaa
cmp
into
adc
xor
mov
hlt
and
mov
cmp
loopne
in
or
sbb
test
test
push
pop
add
shl
das
push
mov
dec
pop
js
inc
xor
hlt
pop
inc
add
mov
mov
bswap
sbb
aaa
test
bnd
cmp
aam
push
inc
pop
nop
sub
pop
dec
loopne
dec
sbb
sub
pop
inc
js
pop
movs
fnstsw
aad
xor
adc
cli
sti
xchg
mov
sbb
cmps
or
loopne
mov
aas
(bad)
cmp
nop
or
mov
sub
and
sub
push
mov
push
js
sub
dec
sub
cmps
fstp
stos
int3
pop
sub
data16
inc
jne
cli
loope
add
mov
or
adc
call
adc
adc
pusha
jp
imul
dec
data16
stos
out
popa
and
xlat
(bad)
pop
mov
jb
pop
xor
test
aas
ret
mov
adc
cli
lea
cmp
rcl
push
adc
xor
aad
pusha
out
add
data16
mov
dec
or
push
sub
js
pop
and
jae
jp
cdq
shl
ret
mov
cmp
(bad)
jae
xchg
sbb
in
pop
mov
(bad)
movs
stos
outs
pop
das
popf
je
aam
scas
xor
js
fld
call
jl
out
sbb
fadd
sbb
pop
cmp
test
xor
fcomp
ins
push
mov
loopne
sub
and
mov
sahf
call
outs
mov
push
xchg
lock
jge
inc
dec
int3
idiv
dec
aam
xor
jnp
out
inc
jae
dec
cmps
outs
call
in
cmp
sbb
(bad)
popf
sti
retf
cmp
leave
inc
inc
cmp
out
jbe
sbb
inc
scas
std
push
push
scas
xlat
push
mov
les
add
push
mov
fisttp
mov
pop
xchg
xchg
sbb
loope
xor
sub
test
in
pop
test
adc
inc
ret
xchg
mov
or
enter
out
(bad)
iretw
xlat
fcom
push
and
test
sbb
dec
ja
cli
jl
mov
add
jmp
and
push
cmc
xor
shl
push
stos
cmc
in
std
inc
lahf
cmp
test
mov
and
adc
add
xchg
sahf
inc
dec
(bad)
loope
add
jno
mov
(bad)
rol
sbb
push
sar
loope
push
in
data16
xchg
popf
mov
ins
jb
mov
call
out
outs
fdiv
movs
fstp
inc
lods
nop
clc
sbb
in
sub
in
ds
sar
sbb
or
push
int3
dec
xor
adc
pop
push
imul
leave
jo
dec
outs
sti
xchg
lock
ja
sub
aas
jns
ds
mov
(bad)
repz
inc
arpl
push
xchg
mov
je
fst
jg
mov
sar
inc
or
in
stc
pop
call
mov
push
mov
dec
mov
out
pop
dec
je
(bad)
jmp
jge
arpl
popa
pop
bound
pop
push
inc
push
sbb
mov
mov
jecxz
fld
add
dec
push
mov
mov
cmps
scas
jmp
mov
inc
cld
pop
stos
pusha
mov
or
add
cld
pushf
mov
sub
dec
cmp
jb
imul
hlt
mov
jns
shl
inc
mov
sar
int
call
push
daa
jnp
dec
lock
adc
sub
and
ret
dec
sub
mov
out
call
aam
test
xchg
fwait
cmp
add
jo
loop
add
arpl
push
daa
gs
enter
test
loope
jl
inc
jae
stc
jne
cmps
pop
mov
fst
xchg
sub
fwait
add
(bad)
sbb
jmp
cmp
gs
mov
ret
sub
pop
cmp
jnp
(bad)
mov
inc
mov
in
dec
jo
scas
repz
ds
dec
pusha
pop
rcr
mov
fdiv
mov
out
mov
scas
sbb
pop
mov
or
push
cwde
stos
imul
mov
out
cmc
cmc
dec
jecxz
addr16
cmps
mov
ror
outs
mov
fsub
mov
or
mov
cwde
or
mov
inc
mov
mov
es
std
jmp
or
push
and
adc
scas
mov
(bad)
mov
lahf
les
xchg
adc
scas
(bad)
pop
jmp
inc
mov
fsubr
sub
lods
and
mov
add
out
std
adc
xor
sub
xchg
mov
outs
arpl
pop
cmp
pusha
stos
push
mov
sbb
(bad)
clc
push
pop
in
cdq
pop
xchg
stos
mov
pop
fdivr
jmp
add
arpl
push
cmp
das
sbb
xchg
inc
mov
jmp
scas
inc
and
cmps
mov
jae
push
push
jp
cld
aad
ret
div
test
lea
xchg
push
out
leave
sahf
jp
dec
adc
das
mov
popf
les
shr
add
sbb
(bad)
popa
mov
fstp
dec
mov
cmps
aas
out
in
vmovlps
bound
(bad)
xor
add
dec
retf
jmp
sub
sbb
add
ds
cmp
cmp
xchg
sub
and
jns
pop
sub
mov
imul
ss
mov
inc
inc
les
mov
mov
cmp
(bad)
fld
xchg
adc
(bad)
adc
imul
outs
sub
test
push
mov
sub
pop
or
cmp
outs
jb
xor
ret
and
adc
sbb
push
scas
sub
sar
pop
add
addr16
mov
xchg
dec
(bad)
ficomp
pop
lahf
mov
or
jl
jae
(bad)
je
dec
loope
jle
test
xor
fistp
cmp
cmps
and
lods
repz
fstp
push
rcr
push
out
jl
jo
jae
push
sub
cmp
cld
stc
(bad)
popa
(bad)
stos
xor
in
pop
pop
xchg
mov
pop
or
lods
mov
jg
(bad)
call
mov
mov
test
push
out
(bad)
mov
aad
pop
loope
div
add
mov
xchg
repnz
and
sub
jecxz
sub
xor
ds
sub
xor
(bad)
scas
sub
inc
(bad)
int
jbe
leave
push
mov
(bad)
(bad)
jl
ror
mov
retf
xchg
and
cmc
push
ret
cmovg
xchg
cdq
sbb
sbb
mov
sbb
mov
test
xchg
sti
or
inc
syscall
repnz
or
sub
and
xchg
gs
gs
xor
in
mov
add
cmc
neg
sahf
or
mov
pop
sub
test
and
cmp
icebp
pop
enter
xor
mov
dec
xor
call
xor
or
pop
cmp
pop
fisttp
mov
stos
and
add
pop
call
push
or
es
push
mov
jb
mov
shl
push
les
test
gs
aad
fwait
leave
or
cmc
pop
adc
sbb
sub
jmp
mov
in
cmp
in
xor
outs
test
or
cld
push
mov
das
inc
ins
pop
sar
xor
in
jae
cmp
sbb
jns
sar
add
fstp
inc
lds
shl
adc
hlt
popw
nop
mov
dec
ficomp
mov
inc
pop
(bad)
cmp
mov
movs
xchg
ret
pop
xchg
add
fwait
jmp
jno
out
sbb
mov
icebp
pop
inc
(bad)
test
fdiv
pop
xchg
popf
stos
inc
mov
pop
test
loope
out
cmc
pop
shr
mov
pop
xor
xor
ret
push
or
mov
sbb
mov
mov
sbb
daa
push
push
sbb
call
inc
sub
jne
jg
inc
xchg
imul
loope
and
and
mov
rcr
inc
movs
inc
pop
sub
fwait
xchg
push
test
mov
clc
inc
pop
or
inc
xchg
sub
pushf
repz
inc
jecxz
mov
cmc
mov
addr16
push
jge
add
cmc
mov
xor
fidivr
or
xchg
retf
and
fistp
call
dec
add
sbb
adc
les
dec
jecxz
cmps
mov
jmp
in
dec
jmp
or
loope
cmps
pop
mov
xlat
and
std
repnz
xor
shl
jp
test
mov
pop
outs
cld
cmps
ret
aas
ins
pop
fdiv
call
call
jbe
mov
ret
ins
xchg
sub
cdq
pop
shr
les
lods
xchg
std
ds
scas
retf
or
or
xchg
dec
lock
ret
cmp
mov
mov
repz
lahf
fsubr
dec
stos
pop
(bad)
jo
popf
xchg
sub
xor
and
push
adc
mov
inc
cwde
or
xor
call
jmp
xor
js
push
lods
mov
xchg
and
data16
sbb
ret
push
sub
inc
push
mov
pusha
or
cmps
ror
aad
dec
test
dec
jle
push
imul
mov
xchg
xor
inc
mov
and
and
(bad)
(bad)
fdivr
fdivr
inc
add
in
and
xchg
(bad)
add
pushf
shl
and
popa
hlt
mov
pushf
mov
arpl
pusha
xor
ret
ret
cmp
outs
sti
pushf
jb
jae
pop
mul
jns
fucom
pop
(bad)
jmp
imul
push
scas
cmps
les
mov
mov
movq
test
and
jecxz
fdiv
stos
cmp
push
adc
jp
les
xadd
adc
xchg
mov
mov
mov
scas
lods
les
cmp
leave
jbe
jo
daa
rol
inc
mov
add
cmp
retf
cmp
or
std
sbb
aam
adc
pop
lea
or
test
in
call
jbe
and
pusha
jg
arpl
inc
outs
mov
rcl
mov
xchg
jmp
rol
jle
and
pusha
inc
xchg
mov
rol
push
lahf
xchg
mov
pusha
sahf
(bad)
jbe
dec
and
dec
or
dec
inc
sbb
pop
or
adc
pop
inc
mov
cmps
mov
dec
test
or
mov
mov
stos
or
mov
lahf
imul
inc
jecxz
pop
adc
pop
cmp
js
pop
bound
xor
jns
add
and
dec
out
push
pop
sbb
scas
xchg
cli
clc
ror
jl
mov
mov
ja
je
(bad)
lahf
and
pop
imul
mov
push
jg
sub
jbe
jns
push
stos
push
dec
adc
inc
pop
imul
jb
imul
inc
or
popf
sbb
fwait
rcr
arpl
test
pop
push
mov
sub
hlt
lods
mov
push
and
inc
rcl
mov
inc
push
or
pusha
sub
shr
jecxz
pop
adc
(bad)
mov
imul
addr16
xor
pop
push
out
xor
adc
call
push
add
cli
ss
push
shr
mul
outs
or
cmps
ins
add
adc
mov
in
ror
aas
sahf
xor
xor
nop
mov
cs
pop
lds
(bad)
aaa
add
sti
test
push
pop
fwait
push
pop
adc
repz
cmp
mov
add
cmp
add
cdq
adc
test
adc
loop
and
cmp
cli
xor
xchg
and
push
movs
sbb
adc
mov
(bad)
push
xchg
movs
mov
or
xchg
mov
hlt
cmp
lea
mov
ins
arpl
jno
inc
imul
push
call
pushf
sub
cwde
bound
or
push
addps
shl
repz
xor
sub
das
jbe
jle
xchg
jle
mov
cmp
(bad)
enter
and
mov
push
imul
pop
in
sbb
fsubrp
repnz
or
cmp
scas
cld
ins
sbb
(bad)
dec
sar
ss
imul
out
jmp
das
xchg
scas
mov
outs
imul
stc
into
inc
sbb
mov
sahf
cmp
pop
loopne
(bad)
dec
dec
loop
xor
pushf
or
test
ins
test
pushf
sbb
ins
add
popa
xor
cmp
movs
pop
pop
adc
or
jle
adc
jmp
lods
mov
jg
jb
in
and
aam
dec
int
push
or
fsubr
push
mul
movs
into
repnz
inc
cmp
ret
fwait
mov
repnz
xchg
retf
movs
sbb
adc
jge
ret
jne
data16
and
and
lods
mov
jbe
jle
pop
popa
data16
es
xor
movs
and
mov
or
icebp
daa
cmp
mov
mov
or
lea
mov
pop
inc
sub
in
pop
imul
sub
dec
pop
out
jp
sub
loop
repnz
ja
mov
lods
ret
pop
dec
adc
pop
out
gs
into
adc
jo
stc
push
imul
xor
push
scas
xchg
or
inc
and
cli
popa
out
mov
mov
xchg
(bad)
popa
les
inc
loope
ret
stos
inc
out
adc
(bad)
fiadd
fcomp
pop
adc
test
movs
pop
cmps
xchg
(bad)
retf
pop
call
test
ret
scas
sub
loope
jns
clc
shl
mov
jecxz
mov
and
popf
inc
mov
icebp
sbb
cli
in
out
push
rcl
lds
(bad)
mov
adc
dec
sub
shr
jl
jmp
or
mov
repnz
xchg
push
or
push
sub
dec
out
repz
int3
jnp
xchg
sar
inc
les
imul
test
in
sub
sti
pop
aas
icebp
xlat
pop
pop
stc
or
stc
(bad)
dec
les
(bad)
adc
faddp
imul
outs
sub
adc
cmps
test
dec
retf
add
xor
cdq
das
loopne
xchg
imul
retf
(bad)
movs
enter
push
test
enter
jg
cld
dec
xchg
sbb
test
and
mov
(bad)
mov
mov
ds
xor
sbb
scas
add
dec
mov
dec
inc
sahf
nop
and
arpl
xor
fcmovnbe
out
js
mov
pop
adc
pop
sub
in
mov
test
test
call
push
pop
outs
and
xchg
jp
push
lods
push
inc
adc
(bad)
cmp
xchg
addr16
xor
jns
jl
into
mov
in
jae
(bad)
loopne
xor
cmp
pxor
sub
jno
mov
push
push
push
ret
arpl
push
sar
stos
addr16
imul
push
fisttp
xchg
dec
icebp
sub
mov
mov
test
cmp
lock
xor
push
mov
pop
and
stos
mov
stos
dec
sub
jg
das
js
sbb
sub
pop
dec
and
pop
cwde
call
adc
push
les
mov
push
out
fisubr
gs
sahf
out
mov
out
sbb
scas
ret
dec
ret
jg
imul
xor
loop
jns
add
repz
pop
mov
dec
cmp
shr
xor
xor
(bad)
xchg
xor
sti
out
add
mov
add
aad
inc
imul
or
and
popa
aas
sub
xor
pushf
dec
(bad)
add
jno
cwde
mov
sub
movs
outs
leave
jl
xor
lea
xor
pop
cmp
xor
and
lds
outs
add
cmps
in
outs
sbb
in
in
pop
sbb
data16
xchg
dec
scas
enter
push
retf
dec
jmp
cmps
pop
lds
call
cmp
in
fild
loope
lea
inc
js
loopne
arpl
jb
in
ss
iret
lods
jmp
icebp
mov
movs
adc
or
mov
jle
sub
mov
iret
mov
loop
(bad)
out
stos
iret
lods
jb
out
xchg
xor
mov
xchg
add
daa
add
outs
or
test
test
mov
adc
xor
stos
retf
cwde
xor
mov
aaa
sub
arpl
add
movs
stos
mov
add
in
repnz
pop
inc
pop
leave
or
(bad)
add
enter
mov
sub
call
jmp
fld
not
bound
inc
ins
fiadd
test
cmp
xor
or
dec
cmp
xlat
mov
idiv
jbe
ds
xchg
mul
fcom
add
cdq
ret
xchg
es
mov
stos
mov
call
in
xchg
mov
cmps
ins
adc
mov
mov
jp
jecxz
sahf
cmp
loope
mov
push
mov
call
fcom
push
nop
or
add
jb
pop
in
push
rcr
shl
lds
idiv
sbb
fidiv
push
std
dec
fidiv
or
mov
stos
retf
or
das
and
movs
mov
(bad)
sti
sahf
test
mul
push
mov
test
sub
mov
cmc
sub
xor
cmps
rcr
std
lea
mov
fisttp
stos
and
mov
iret
out
mov
jne
iret
inc
nop
jle
pop
adc
jmp
in
dec
adc
mov
ret
sub
int
pop
xlat
cld
add
mov
push
mov
pop
push
sub
mov
in
popa
dec
or
push
sti
push
mov
(bad)
call
inc
cli
or
(bad)
dec
loopne
jbe
mov
xor
test
inc
arpl
push
mov
into
adc
scas
xor
gs
clc
adc
int
hlt
and
and
test
push
into
mov
movs
ins
test
cmp
dec
and
mov
xchg
cdq
loop
sar
bswap
and
sbb
rol
push
sbb
fld
or
sbb
sub
je
xchg
sbb
jl
movs
lods
std
cld
cmp
outs
sub
mov
or
out
sbb
je
ror
mov
xchg
and
jg
and
into
xchg
test
dec
mov
mov
mov
and
daa
lods
sub
sub
add
es
in
iret
mov
mov
(bad)
iret
mov
cs
xchg
push
push
push
test
cmp
arpl
shr
popf
neg
mov
dec
add
es
and
jb
and
jbe
stos
inc
adc
or
sbb
pop
dec
adc
gs
in
dec
(bad)
in
inc
jl
mov
mov
cdq
sbb
lock
shl
jnp
cmc
mov
js
(bad)
mov
push
dec
push
sbb
stos
in
jmp
xchg
mov
inc
nop
int
jp
jp
add
push
or
inc
sbb
es
dec
xor
inc
inc
sysenter
or
call
jmp
or
stos
loope
mov
les
lods
icebp
je
mov
cmp
mov
or
cdq
movs
jmp
ins
xor
xchg
ds
and
out
jle
test
dec
mov
mov
xchg
aam
cmp
adc
ret
(bad)
(bad)
cwde
clc
out
fs
or
sub
push
sbb
loopne
repz
inc
loopne
sub
enter
stos
call
sbb
mov
sahf
je
pop
mov
sahf
mov
mov
lods
adc
mov
in
sub
jns
push
in
push
scas
leave
scas
lods
xchg
sbb
jno
retf
add
imul
std
adc
enter
or
(bad)
push
fidivr
sub
stos
cli
adc
(bad)
arpl
call
push
jecxz
mov
xchg
test
and
mov
jecxz
dec
xor
mov
mov
and
aaa
ss
and
addr16
std
add
pop
xchg
mov
ins
jns
rsqrtss
data16
adc
iret
jge
and
std
mov
in
push
nop
pop
aas
test
cmc
sahf
bound
fstp
pop
push
shr
movs
and
push
movs
mov
xlat
adc
popa
test
xchg
sub
and
push
jge
inc
mov
(bad)
fucomi
push
mov
js
mov
iret
lods
std
inc
stos
cwde
push
outs
je
jle
mov
int
xor
ins
xchg
out
rol
cmp
(bad)
mov
jmp
test
and
mov
cmp
xchg
push
adc
adc
shl
cli
out
dec
in
add
fwait
aas
addr16
mov
mov
cwde
fcmovb
inc
cmc
aaa
sub
fucomip
(bad)
into
faddp
div
push
stos
out
mov
les
add
mov
adc
aaa
dec
or
aas
xor
ins
pop
movs
push
or
pop
aas
adc
mul
dec
and
fisttp
(bad)
mov
out
xor
sahf
in
mov
std
or
(bad)
sub
cmp
stos
cli
mov
cmp
cmp
aaa
loop
je
stos
sub
jle
sub
cmps
sbb
sub
ret
(bad)
out
int
aaa
sub
pop
rcl
pushf
jl
gs
or
sti
mov
jmpw
aas
xor
ret
aad
enter
fwait
(bad)
lea
add
scas
cld
retf
lods
push
cmp
sub
test
jns
leave
push
(bad)
mov
fmul
mov
imul
cmp
push
ds
xor
jl
mov
cmps
pop
mov
sub
mov
cmps
pop
int3
cmps
push
mov
or
imul
pusha
pop
leave
mov
ins
cmp
pop
cmps
mov
jge
js
and
shl
sub
gs
pop
js
xlat
jmp
adc
loopne
dec
and
loope
mov
xchg
jg
in
sti
sar
mov
fiadd
fnstsw
popa
mov
sbb
sub
dec
pop
shl
es
shr
hlt
pop
xchg
push
in
mov
iret
sbb
dec
ss
shl
(bad)
repnz
adc
cmc
and
xchg
imul
inc
icebp
push
sti
fidiv
add
jmp
push
jle
fldenv
std
daa
xor
xor
outs
shl
nop
scas
push
or
cmp
pusha
ja
out
je
xchg
sbb
in
xor
and
xor
das
aad
fsub
pop
push
pop
push
jno
dec
test
shl
xchg
add
les
adc
movs
retf
popa
push
inc
cmp
and
push
repnz
and
push
aas
adc
jge
inc
mov
jle
push
mov
fisubr
mov
stos
aam
add
push
out
fcom
jns
js
lods
mov
pop
pop
cld
jmp
xor
mov
push
mov
pop
sub
rcr
outs
pop
fld
ffreep
sub
aad
dec
in
out
xchg
and
mov
test
push
popa
outs
push
outs
xor
div
xor
inc
fcom
cmc
mov
xchg
int
out
ret
stos
sahf
ja
xchg
cli
and
pop
retf
xchg
cmps
adc
adc
faddp
mov
xchg
add
inc
adc
pop
outs
xchg
(bad)
pop
test
rdpmc
xchg
int3
rol
xor
jmp
jp
sub
mov
cld
sahf
enter
push
mov
dec
push
ss
mov
rol
je
dec
call
adc
push
jmp
inc
dec
cdq
ins
add
test
retf
pop
cmp
test
add
fwait
dec
arpl
push
and
sbb
cmp
aaa
inc
aad
outs
lods
mov
gs
lods
jp
sub
add
cmps
sbb
sbb
mov
adc
jmp
sbb
push
(bad)
icebp
imul
pop
adc
sahf
push
int
push
pop
repz
and
pop
arpl
sub
loopne
cmp
cmp
popa
sub
in
jmp
mov
adc
rcl
addr16
loop
adc
inc
lods
adc
aas
leave
pop
(bad)
mov
stos
mov
mov
lods
iret
icebp
imul
ror
push
(bad)
iret
mov
add
mov
add
push
icebp
xchg
xchg
sbb
call
jae
push
mov
nop
mov
jae
in
mov
and
in
shr
dec
mov
jl
jmp
mov
xor
ins
nop
inc
(bad)
push
sub
popf
out
out
fnsave
leave
xor
(bad)
inc
shl
sbb
jmp
lahf
sub
jae
xchg
dec
ja
sbb
jnp
sbb
push
(bad)
xor
leave
inc
movs
inc
icebp
shr
or
add
ja
jmp
mov
pop
ins
hlt
jecxz
jo
fsubp
pop
push
jae
test
addr16
ins
in
stc
mov
stos
les
add
inc
dec
mov
ret
stos
arpl
(bad)
aad
mov
not
xchg
test
mov
or
ss
lock
jno
cmps
jg
xchg
jl
aas
sbb
test
push
ret
mov
out
dec
add
pop
fistp
mov
or
retf
dec
pop
lods
sahf
clc
comiss
pop
jmp
jge
push
scas
pop
push
cmps
mov
push
popa
ficom
mov
push
das
lods
mov
out
stos
or
fistp
and
mov
cs
jae
lds
jmp
or
mov
add
popf
and
and
jmp
inc
mov
shr
mov
daa
mov
push
cs
dec
sub
cmp
mov
mov
int3
test
sbb
sti
sbb
lock
pushf
fist
lds
pop
sbb
test
mov
mov
and
or
fwait
cmp
sub
sub
(bad)
in
jge
jmp
xor
ja
cmp
ds
mov
jge
fld
test
sahf
jns
mov
or
(bad)
cmp
xchg
bound
cmp
pop
imul
dec
into
add
arpl
pop
and
add
fsub
and
and
add
dec
cmp
xchg
sbb
ins
enter
inc
inc
retf
mov
call
lahf
cmps
int
pop
sub
lock
int
dec
sbb
test
xor
cld
outs
and
lea
loopne
movq
hlt
mov
push
and
ret
cmp
out
loop
sbb
out
nop
arpl
sub
(bad)
ja
imul
cmp
ins
adc
push
ins
inc
adc
and
adc
mov
push
mov
stc
in
sbb
push
jl
and
aas
or
dec
dec
mov
mov
mov
ret
xchg
scas
bound
sbb
xchg
cmp
push
cdq
mov
cmp
inc
inc
popa
jmp
or
add
clc
cld
imul
popf
les
mov
mov
push
jae
add
adc
cmp
dec
add
data16
fiadd
les
xor
arpl
and
lfs
ins
fiadd
dec
mov
pusha
push
popa
cmps
and
sub
push
dec
sub
xor
jg
lods
push
push
(bad)
mov
xchg
mov
dec
jno
cmp
aam
ins
push
lahf
pop
adc
sahf
push
inc
jmp
sub
adc
pop
arpl
aad
sbb
mov
lea
out
fwait
jno
xchg
aaa
mov
jle
shl
mov
fnstsw
mov
fidiv
sub
js
sbb
addr16
test
jecxz
and
int3
scas
les
jno
mov
fdiv
and
pop
adc
nop
(bad)
mov
ret
imul
or
cld
pop
jns
cdq
scas
xchg
jnp
dec
mov
je
repz
cmp
int3
mul
push
sub
xlat
ret
daa
(bad)
int
push
pop
retf
xor
mov
hlt
jge
cld
pop
push
mov
mov
aad
jno
int
fs
std
dec
std
(bad)
pop
call
scas
inc
pop
repz
mov
xor
push
retf
xchg
call
push
ja
pusha
(bad)
inc
push
mov
lods
or
in
fistp
ds
rol
sub
mov
cmp
rcl
iret
ja
test
or
(bad)
cmp
cmp
fcmove
xlat
adc
add
and
int
or
test
sbb
xor
rcl
mov
mov
jo
xor
enter
push
sub
test
ds
mov
jecxz
pushf
aam
aas
push
adc
add
vmread
cmp
pusha
or
movs
and
cmp
sub
push
jl
xchg
and
jmp
xor
or
sbb
aad
mov
mov
or
and
mov
and
pop
retf
fst
ror
mov
(bad)
in
or
dec
test
scas
add
xchg
sti
jmp
ja
fldenv
xchg
lahf
xor
or
xchg
dec
and
cmp
daa
imul
pop
inc
mov
dec
push
and
call
push
repz
mov
repnz
mov
push
push
imul
adc
mov
jo
xchg
cmp
cmp
dec
js
out
stc
mov
or
mov
mov
push
xchg
sub
cmp
aam
jmp
hlt
fdivr
adc
js
sub
fs
call
js
fbld
jg
stos
shr
not
xchg
sbb
mov
add
popa
push
sbb
js
jo
outs
inc
mov
setge
sbb
mov
ret
or
fs
add
sbb
arpl
inc
mov
sbb
hlt
pusha
sbb
cmp
ret
add
mov
push
bound
dec
add
loop
pop
mov
adc
adc
mov
imul
loop
pop
repnz
xchg
mov
and
aas
mov
mov
cmp
and
pushf
jns
stc
in
mov
xor
jno
data16
(bad)
aaa
loop
(bad)
mov
lods
sbb
cld
outs
cwde
push
and
xor
jp
mov
loope
or
cmps
stos
sbb
retf
arpl
loopne
daa
and
mov
adc
lock
js
jmp
addr16
xor
cmps
ds
mov
dec
sbb
retf
sbb
xor
mov
(bad)
mov
(bad)
(bad)
std
ins
retf
fbld
pop
xor
rcl
or
gs
or
pop
and
retf
mov
dec
cmps
dec
jl
in
out
test
loope
xchg
lea
repz
xchg
xlat
add
dec
pusha
movs
dec
gs
add
movs
pop
xlat
and
mov
(bad)
pop
xor
lds
std
dec
xchg
jns
inc
xor
out
adc
adc
jno
inc
stc
and
cdq
cld
xor
mov
ret
scas
jmp
inc
icebp
enter
(bad)
fbstp
imul
js
fyl2x
out
sbb
push
xor
into
test
push
jmp
jns
mov
bound
xor
xchg
pop
fild
(bad)
in
aaa
cmp
in
clc
pop
lea
inc
ret
ja
outs
inc
imul
sbb
mov
in
mov
mov
mov
neg
addr16
pushf
push
in
sub
sub
pop
and
ins
pop
cmps
sbb
fisubr
pop
mov
xchg
jmp
js
popf
add
scas
aaa
sub
in
fisubr
sbb
sar
mov
lock
movs
and
(bad)
into
je
mov
test
je
adc
mov
adc
out
outs
mov
mov
mov
sbb
lods
cli
mov
hlt
into
jmp
retf
mov
inc
test
mov
jne
les
ins
fistp
cld
imul
jecxz
movs
stos
mov
mov
aaa
out
mov
cmp
vminsd
cmp
ret
pop
pushf
into
push
mov
data16
inc
adc
pop
cmp
adc
fbstp
inc
jle
es
aaa
movs
inc
fcom
dec
dec
mov
imul
gs
mov
add
ins
lahf
sbb
movs
loopne
test
sub
xchg
and
dec
popf
out
aaa
das
int3
or
ins
push
xchg
aas
aaa
mov
xchg
pop
mov
ins
lods
lods
sbb
call
loop
ins
ss
adc
push
fld
aad
int
out
dec
xchg
pushf
jmp
sbb
out
or
mov
loop
xchg
xchg
jns
inc
test
xchg
push
xor
cmps
mov
push
dec
dec
fcmovne
jp
sbb
jle
lods
cmp
int3
mov
pushf
fwait
fwait
je
jnp
pop
outs
pop
xchg
hlt
sub
pop
xor
add
push
and
xor
mov
int
jno
(bad)
lods
pop
cmp
cmp
fs
out
or
loopne
inc
out
fiadd
or
and
adc
iret
aam
(bad)
int3
jb
pop
mov
xchg
lods
jmp
sub
inc
imul
sbb
pop
into
mov
mov
js
into
adc
mov
adc
jne
dec
xor
jp
inc
aaa
test
xor
cwde
mov
and
call
sbb
mov
mov
sub
ret
gs
inc
icebp
push
(bad)
popf
cmp
push
daa
(bad)
pop
out
pop
fisubr
fdiv
add
inc
cwde
int3
lock
push
imul
or
icebp
xchg
push
dec
or
js
rcr
sar
dec
add
(bad)
dec
mov
adc
add
fimul
pop
shr
add
scas
push
xchg
shr
push
dec
nop
mov
dec
and
sub
lods
je
pop
push
dec
adc
cwde
push
cmp
je
cld
out
pop
or
xchg
out
push
inc
or
push
std
inc
add
jo
xchg
(bad)
iret
or
mov
outs
cmp
and
mov
mov
sbb
in
jmp
enter
aam
popf
dec
lahf
stc
aaa
mov
sbb
adc
daa
sub
mov
jnp
ins
sub
xor
fisub
pop
outs
dec
add
jb
cmp
ins
push
sub
adc
outs
push
pmaddwd
cmp
inc
push
jno
not
pop
lea
test
fwait
inc
pop
pop
ins
jg
lea
cmp
hlt
aam
jmp
dec
xchg
sub
inc
(bad)
out
push
js
jne
nop
cs
popf
jb
mov
inc
mov
or
push
or
fadd
sub
sbb
test
sbb
pop
mov
scas
inc
lds
shl
jne
(bad)
sub
jo
leave
pop
hlt
lods
pop
shr
jmp
sub
outs
inc
mov
dec
lahf
jnp
xchg
sub
dec
mov
sub
push
(bad)
repnz
outs
iret
jb
fbstp
jno
sub
fldcw
vxorps
cmp
popf
pop
and
dec
cmc
xchg
xchg
dec
jno
scas
pop
mov
jbe
imul
das
icebp
stos
std
imul
dec
or
mov
outs
sbb
sahf
add
cmp
push
adc
jp
mov
xor
daa
sub
dec
fimul
jp
add
sbb
nop
add
xor
xor
outs
mov
inc
js
in
(bad)
jne
jge
cmp
arpl
fwait
mov
jecxz
mov
add
daa
dec
adc
jp
test
push
ins
xchg
out
call
dec
loop
dec
ret
out
adc
mov
mov
push
enter
jle
add
fnstcw
ins
jno
jmp
sar
es
rcl
or
push
push
dec
ror
pop
out
jmp
cmp
fcom
aad
jbe
jmp
and
push
xor
jb
adc
push
imul
pushf
ja
xlat
sub
dec
stos
(bad)
inc
dec
xlat
in
jmp
xor
sahf
sub
add
nop
adc
xchg
inc
mov
xchg
jne
loope
pusha
std
pop
pop
hlt
das
sbb
xor
dec
cmp
add
fs
sbb
test
lods
icebp
dec
xchg
mov
or
pop
sbb
cdq
jg
or
jne
stos
rcr
stos
sub
mov
jecxz
data16
popa
call
sub
inc
sub
push
inc
push
push
xor
pop
or
mov
fwait
mov
int3
xor
shl
mov
xor
inc
fld
xchg
ret
mov
retf
lock
mov
or
movs
popa
jno
xchg
mov
fild
jp
popa
icebp
daa
pop
outs
loopne
fs
dec
lods
mov
and
jmp
jl
hlt
dec
or
jmp
mov
xor
(bad)
sbb
sbb
stos
mov
mov
je
mov
cs
dec
jae
push
repnz
sub
mov
jp
add
rol
sub
scas
push
ins
push
cmps
inc
add
ins
mov
ins
sub
outs
and
push
loop
pop
sub
or
or
adc
dec
xchg
xchg
add
mov
xchg
lds
or
jmp
or
jge
dec
dec
pop
loopne
sbb
adc
adc
call
and
pusha
pop
xchg
sub
jno
hlt
mov
push
cli
test
(bad)
repz
pop
push
sbb
adc
dec
aas
sbb
leave
div
mov
or
test
pop
addr16
pop
pop
(bad)
cmp
and
enter
xchg
loopne
and
pusha
pop
and
add
add
pop
mov
mov
mov
aad
fiadd
test
shl
(bad)
pop
pushf
shr
cld
sub
push
aaa
call
sahf
es
dec
movs
and
lods
loop
xchg
add
lock
xchg
fs
dec
and
mov
dec
push
lock
dec
push
repnz
retf
mov
add
pop
popf
or
jbe
(bad)
cmp
mov
nop
movs
ins
cwde
das
mov
mov
inc
icebp
aam
adc
push
in
cmp
adc
fiadd
dec
icebp
arpl
push
fs
test
xchg
int3
lods
push
mov
ja
(bad)
push
add
push
adc
add
in
mov
jl
sub
test
test
ret
mov
pop
les
inc
dec
fwait
test
jp
sbb
inc
sub
cdq
mov
sub
jmp
nop
cmp
and
and
push
enter
das
xchg
into
inc
sub
pop
gs
jns
pop
xor
sbb
mov
or
aas
pop
xchg
das
push
mov
ss
xchg
sbb
or
test
out
jmp
pusha
mov
stos
out
dec
sahf
fistp
pop
xchg
mov
movs
arpl
mov
int3
sti
mov
in
sbb
enter
sub
sete
push
popf
xlat
les
ds
jo
push
or
test
pusha
ret
ds
jecxz
dec
jp
or
and
sub
retf
ins
pop
fcmovnbe
retf
inc
sub
mov
fcomp
fistp
popf
push
test
mov
or
inc
(bad)
mov
ds
dec
sub
jmp
icebp
lods
jae
sub
lods
fstp
jbe
and
arpl
xlat
inc
dec
xor
xchg
inc
mov
and
(bad)
sbb
rcr
mov
dec
scas
sbb
scas
cmc
jle
aaa
xchg
ins
lds
pushf
xchg
imul
cld
cli
or
cmp
push
adc
mov
sub
outs
sbb
iret
inc
sbb
add
bound
mov
pop
repnz
jecxz
out
add
movs
adc
cld
das
ja
(bad)
sub
mov
mov
imul
shl
sar
leave
push
hlt
xor
aad
adc
(bad)
repnz
xchg
loope
out
js
jne
or
push
sbb
inc
cdq
repz
pop
int
or
mov
in
inc
mov
xor
out
in
dec
jecxz
and
ret
adc
sbb
cmps
aam
pop
xchg
dec
fwait
inc
mov
stc
push
pop
lock
mov
fs
test
sub
call
into
add
xor
pop
dec
arpl
cmp
inc
(bad)
jg
stos
jne
ss
aas
nop
mov
or
xor
pop
icebp
xor
xchg
sbb
xor
mov
sbb
sbb
ja
jmp
cmps
outs
push
mov
dec
xchg
(bad)
(bad)
retf
out
lock
mov
retf
jge
xor
jne
jbe
mov
jg
fdivr
jp
dec
pop
arpl
jb
fwait
add
add
ds
popf
out
sti
nop
pop
xchg
inc
(bad)
sti
adc
inc
mov
int
ds
lahf
xchg
inc
xor
or
imul
dec
sahf
sbb
pop
mov
inc
bound
dec
das
(bad)
and
cwde
mov
nop
int3
cwde
push
sahf
std
push
cdq
mov
jnp
pop
mov
jno
cdq
(bad)
loopne
inc
mov
mov
imul
(bad)
pusha
movs
cdq
push
mov
cmp
imul
sbb
pop
push
ret
test
cdq
sub
push
mov
aaa
adc
cmp
mov
xchg
into
data16
xor
adc
mov
jae
xchg
pop
lods
jae
scas
sbb
push
cmps
cmc
inc
outs
cmp
xchg
mov
ret
inc
add
(bad)
adc
pop
pop
call
dec
outs
imul
js
jb
xor
int
daa
inc
out
or
retf
cwde
stc
shr
ds
dec
mov
sub
mov
and
or
in
mov
pop
int3
(bad)
and
scas
mov
cmp
or
retf
aas
lea
gs
or
rcr
jae
inc
aas
sti
xlat
pop
gs
ret
loope
cli
aaa
or
push
mov
sbb
cmp
push
mov
in
push
stos
stos
or
fdiv
ret
cwde
sahf
lahf
inc
push
frstor
call
sub
push
mov
sbb
mov
lahf
xor
push
cmp
or
idiv
push
and
int3
push
cmps
fidiv
sub
sar
jb
fld
push
inc
imul
in
fcomip
sbb
jbe
jg
imul
arpl
loope
mov
(bad)
mov
sub
jge
xchg
je
dec
lds
xchg
inc
dec
call
cmp
xchg
push
outs
mov
neg
test
add
(bad)
cmp
test
loop
enter
push
test
aad
xchg
scas
call
(bad)
sub
push
pop
clc
xchg
jmp
(bad)
mov
in
test
push
mov
(bad)
cmp
push
push
jo
loopne
sbb
sar
push
mov
mov
inc
push
cmp
sub
cli
mov
aaa
call
mov
xor
sbb
cmp
addr16
push
ss
inc
push
cmp
ins
mov
pop
mov
retf
cli
sbb
sbb
and
fist
bound
sar
or
or
loope
xchg
jne
dec
aad
mov
dec
sub
ret
fisubr
pop
pusha
mov
inc
(bad)
rcr
inc
(bad)
xchg
jno
jmp
sbb
pop
push
cmp
(bad)
pop
retf
cli
div
icebp
push
sub
push
jmp
minps
mov
mov
cmp
xchg
paddd
inc
cmp
mov
stos
add
cmps
xor
out
mov
add
inc
sub
std
clc
cmp
int
mov
aas
pusha
jmp
mov
sub
out
or
into
icebp
push
dec
inc
mov
imul
jns
ret
jmp
xor
aas
dec
movs
jnp
(bad)
out
sub
iret
js
dec
imul
pop
pop
cdq
scas
mov
push
ins
repz
leave
jns
mov
test
cmp
mov
(bad)
jg
loopne
das
in
fld
fnsave
in
push
mov
mov
mov
fst
inc
mov
das
jl
jb
add
shl
arpl
aaa
pop
call
repz
jb
(bad)
out
inc
fcomi
cli
mov
fst
inc
scas
mov
int
lds
aas
outs
daa
jl
scas
inc
mul
add
mov
pop
xchg
or
cmps
xchg
mov
cmps
jg
mov
sub
dec
mov
fnsave
mov
xchg
lods
pop
mov
loopne
cs
cs
push
aam
outs
aas
movs
inc
pop
fild
cmp
neg
xchg
xchg
retf
pop
push
adc
dec
(bad)
shr
jnp
test
mov
dec
xor
stos
or
xor
cmp
inc
mov
pop
inc
frstor
in
mov
push
fst
dec
f2xm1
ror
sbb
push
push
push
dec
fmul
push
repnz
cmp
xor
repz
cmc
(bad)
adc
inc
js
and
sub
jle
stc
repnz
sbb
call
xor
enter
pop
in
pop
inc
out
pop
(bad)
adc
fs
sbb
nop
cmp
inc
adc
popa
jmp
mov
mov
xchg
dec
in
mov
sub
or
sbb
xchg
dec
cdq
mov
test
jecxz
test
inc
inc
ss
arpl
les
push
outs
es
bound
enter
or
lock
mov
jnp
fiadd
lock
hlt
int
ror
rcl
or
popf
lock
ins
mov
xor
mov
sti
jmp
in
lea
mov
adc
ret
or
ss
jge
adc
cmp
mov
icebp
and
loope
mov
xchg
sub
cwde
pop
adc
and
xchg
xchg
push
dec
jl
stos
or
push
repz
shl
inc
or
adc
out
mov
dec
xchg
mov
push
lock
sbb
and
inc
adc
push
clc
jbe
mov
stc
popa
test
retf
adc
mov
push
dec
jbe
(bad)
adc
aam
xchg
mov
fsubr
sbb
push
enter
inc
pop
or
and
pop
icebp
ja
rcl
push
out
mov
adc
js
adc
jnp
adc
dec
fs
inc
mov
cli
push
pop
ss
jmp
iret
xchg
inc
or
hlt
fdivr
sbb
pop
cs
jl
mov
jle
fwait
ror
ja
iret
out
pop
stc
inc
mov
and
cmp
mov
ret
sbb
cwde
(bad)
imul
retf
mov
lods
test
push
cli
push
test
xchg
int
sbb
int3
ja
or
pusha
xchg
mov
aam
jmp
call
dec
adc
sbb
dec
scas
lahf
sbb
ret
(bad)
icebp
sbb
jge
aaa
nop
cmp
push
jmp
push
jne
in
lods
(bad)
js
je
xor
out
dec
add
dec
sub
jge
jg
and
dec
(bad)
rol
and
pop
gs
jle
rcl
fwait
stc
in
out
jno
push
movs
push
mov
xor
cmp
push
push
shl
push
jne
jb
xlat
xchg
xor
fs
pushf
xchg
mov
cld
pop
rol
xor
adc
ret
add
repnz
sbb
test
mov
je
or
and
mov
sbb
jno
ffreep
in
movs
outs
(bad)
clc
add
push
push
hlt
jecxz
sar
and
es
mov
xchg
xchg
or
adc
sahf
scas
movs
cmp
mov
jmp
push
(bad)
pop
adc
jle
rcl
sti
hlt
jg
stc
call
mov
out
jmp
js
add
loope
arpl
and
cmp
sub
xchg
inc
jecxz
xor
jmp
shr
dec
push
fs
jle
lods
aas
pushf
mov
jecxz
ds
mov
fimul
mov
sub
jge
ss
das
adc
or
inc
adc
xor
sbb
xchg
inc
jb
stos
rcr
push
sbb
popf
in
push
pushf
jnp
sbb
repz
sub
pop
and
int
mov
dec
adc
ins
sub
push
push
sub
mov
jle
retf
rol
mov
mov
retf
xor
ficomp
sub
dec
xor
hlt
mov
mov
retf
inc
test
push
dec
mov
ret
mov
shl
dec
push
pusha
xor
xchg
mov
pop
sbb
sbb
pusha
xor
jo
adc
xchg
xchg
in
jecxz
push
loope
icebp
pusha
push
and
stos
cs
push
sub
cmp
and
ins
and
addr16
ss
push
sbb
aad
jo
fld
xchg
xor
addr16
mov
push
pop
jae
xor
xor
cdq
stos
je
gs
xchg
call
sbb
or
xchg
sub
adc
int3
push
jno
fs
retf
adc
fucomp
fwait
outs
mov
lock
xchg
popf
bound
(bad)
cmp
push
stos
arpl
mov
pop
repnz
ret
pushf
(bad)
out
push
or
cs
and
fild
pop
test
inc
sub
push
and
jecxz
or
stos
mov
pop
movs
fdiv
clc
mov
add
outs
add
test
adc
mov
ins
mov
mov
inc
cmp
push
jl
ins
push
xor
and
sbb
neg
out
sbb
jmp
xchg
jl
retf
adc
and
sbb
jne
out
dec
cmps
sbb
fisub
popa
pop
adc
cmp
sti
dec
push
jmp
je
fcom
push
xor
rcr
aaa
pop
scas
in
iret
mov
ja
fstp
mov
inc
ja
retf
dec
and
sti
daa
jge
daa
pop
push
cld
sub
cmps
rcr
or
jne
add
xchg
loope
idiv
sar
jl
(bad)
dec
movs
xor
fadd
daa
out
(bad)
out
cmp
std
xchg
cmps
les
aaa
jb
repnz
mov
mov
(bad)
call
fs
sbb
das
add
push
mov
jge
push
bound
mov
inc
cmp
addr16
adc
push
adc
ins
hlt
aad
dec
push
loope
xchg
repz
adc
int
adc
in
sub
xchg
ja
addr16
(bad)
jns
cmp
push
jp
retf
jns
xchg
sti
push
pop
neg
jo
bsf
hlt
pop
xchg
pop
push
sub
jmp
inc
xlat
adc
mov
pop
push
and
test
and
xor
ror
sbb
les
mov
dec
aaa
jg
sbb
lea
add
xor
mov
xchg
mov
push
pop
sbb
mov
ret
lahf
push
stos
cmps
or
outs
mov
int
xchg
cmc
test
xor
push
xor
push
(bad)
call
xor
push
fdivr
jge
daa
cdq
ss
lahf
scas
sti
call
cmc
rcr
test
inc
add
in
push
ja
cmp
cmp
cli
aaa
pop
sub
fidiv
sub
sbb
bound
sub
cmp
jl
jmp
loopne
pop
and
lds
jne
push
cld
es
or
(bad)
loopne
packssdw
and
ror
aad
jmp
sub
and
pop
mov
movntps
test
imul
cld
data16
push
xor
sbb
ret
jns
push
pop
xchg
scas
enterw
ror
fbld
cwde
jg
ret
xchg
call
cmps
sbb
(bad)
xor
cmps
gs
or
js
lds
popf
shr
fild
shr
xor
push
movs
cli
add
test
lods
dec
dec
xchg
xchg
or
mov
pop
hlt
and
add
sbb
call
ja
or
xchg
or
mov
mov
outs
lods
std
xchg
popa
ins
aam
mov
jo
pop
and
dec
addr16
in
ds
daa
cli
adc
pop
mov
fdivrp
sbb
(bad)
js
push
cmp
push
scas
jle
ins
or
mov
out
and
jnp
ja
cmp
daa
pop
out
add
cmp
jecxz
out
outs
mov
ret
pop
jle
xchg
cmp
xlat
mov
cmp
rcl
inc
out
cmps
addr16
fild
and
fmul
pop
push
inc
ins
fcmovnbe
ins
and
sub
mov
and
loop
mov
cmp
push
stos
icebp
pop
inc
(bad)
out
xchg
pop
repnz
inc
js
dec
nop
mov
xlat
mov
outs
cmp
or
mov
fld
cld
or
sbb
adc
sbb
sub
cmp
lods
rol
push
jmp
xor
sbb
pusha
sub
jecxz
mov
jno
mov
and
popa
fbstp
inc
xchg
ficomp
nop
push
and
ja
dec
push
dec
outs
enter
xchg
dec
adc
js
xchg
push
shl
cmc
int3
popf
mov
pop
iret
(bad)
lods
jle
mov
mov
(bad)
sahf
aas
mov
add
pop
test
imul
inc
call
pop
pop
shl
mov
xor
bswap
fcom
dec
pop
jge
hlt
adc
sbb
cmps
jmp
ins
sbb
ret
mov
pop
mov
push
dec
sub
mov
xor
out
jb
xchg
push
mov
sbb
sub
cmps
xchg
sbb
sti
sbb
(bad)
int3
jae
faddp
popf
ins
jmp
mov
or
shl
(bad)
sbb
out
test
pop
sti
(bad)
mov
jb
mov
pop
jmp
scas
push
lods
xchg
or
xor
(bad)
retf
sbb
push
inc
mov
fnsave
out
sti
scas
imul
cli
retf
(bad)
sub
xor
adc
adc
sbb
int3
sbb
and
xchg
cmp
pop
pushf
(bad)
mov
in
sbb
jae
jae
pusha
push
lock
fdiv
loope
pop
movs
xor
ds
out
retf
sbb
push
pop
test
add
outs
sbb
dec
sar
enter
movs
and
in
push
out
loop
jl
in
ss
test
push
call
pushf
inc
cmc
pop
jo
test
fild
and
and
frstor
cdq
sti
jmp
mov
fild
push
lfs
xchg
mov
jo
pusha
out
test
lods
adc
sbb
sub
pop
loop
xor
dec
xor
push
ror
pop
sahf
ficom
sub
(bad)
inc
stc
xchg
aas
in
int3
inc
addr16
sbb
dec
pop
cdq
cmp
xor
repz
es
ret
inc
pop
mov
pop
fisub
cmps
or
jmp
pop
js
fisubr
xor
int3
add
adc
inc
popf
retf
jmp
sub
in
mov
rcr
sahf
call
or
pop
mov
(bad)
out
inc
pop
adc
into
xchg
gs
cmc
or
or
call
retf
mov
jns
enter
pop
stos
xchg
rol
jb
sub
cmp
dec
cmp
pop
sahf
xor
and
(bad)
outs
and
fiadd
fadd
enter
repnz
inc
jae
repz
cmps
mov
hlt
cmps
jo
cmps
div
jae
push
jno
mul
or
or
das
pop
outs
xor
cmp
xchg
stos
pop
lahf
outs
pop
sbb
cli
cmc
or
jbe
popa
mov
mov
push
stos
mov
popa
fiadd
inc
push
or
cmc
in
push
scas
sbb
mov
mov
pop
inc
inc
jmp
adc
xchg
push
aas
movs
imul
pop
jmp
cmp
ret
test
pop
fwait
in
cdq
ror
out
mov
jg
lahf
gs
fwait
out
jnp
das
stos
dec
and
iret
stos
cld
dec
add
jge
pop
fwait
dec
daa
int
jecxz
or
or
bound
push
push
ret
lods
sbb
xor
xor
sbb
es
adc
jg
adc
loope
(bad)
and
stc
and
cli
scas
aam
pop
(bad)
adc
mov
fiadd
into
cmp
ja
and
push
fbld
js
and
dec
xchg
cwde
inc
fucomip
xor
imul
mov
lods
into
mov
mov
add
sbb
bound
dec
shr
shl
hlt
sbb
jb
push
movs
mov
stos
mov
xchg
lods
or
scas
inc
push
xor
mov
(bad)
sahf
in
cmps
addr16
push
ins
jmp
lahf
leave
or
aaa
adc
mov
inc
adc
and
dec
repnz
dec
movs
add
rcl
fidiv
sbb
shr
push
jo
test
inc
mov
mov
and
xor
out
out
pop
sbb
sbb
rcl
in
add
mov
out
cmp
jno
xor
or
je
aad
dec
pop
in
push
cld
sub
or
mov
dec
rol
cmp
fcmovnbe
xor
loopne
call
data16
cs
stc
bound
sub
mov
shl
sub
outs
outs
popa
adc
or
xchg
int3
daa
aam
sub
cwde
jne
or
ins
repz
xor
sbb
in
jns
pop
into
rol
dec
dec
repnz
xor
xor
rol
and
jmp
sub
imul
and
push
xor
or
add
push
arpl
mov
jno
jl
sbb
add
mov
xor
call
outs
outs
sahf
stos
dec
mov
dec
and
(bad)
jo
mov
push
xchg
out
push
pop
pop
pop
push
pop
neg
pop
sbb
das
mov
outs
into
dec
movs
add
sbb
add
sub
mov
xor
in
sti
in
cmp
rol
scas
pop
cmps
inc
cmp
stos
test
sub
bnd
mov
add
pushf
mov
pop
jge
test
mov
enter
and
add
dec
inc
scas
xor
hlt
outs
loop
pop
fs
int3
call
fwait
or
cld
jmp
xchg
pop
lods
aad
mov
icebp
stos
xchg
mov
mov
movs
popf
mov
mov
mov
adc
test
hlt
pop
pop
push
(bad)
sti
mov
scas
sar
pop
sahf
mov
mov
stc
mov
pop
ins
ret
mov
hlt
pop
push
adc
xor
nop
sbb
das
fadd
neg
addr16
scas
cmp
mov
mov
cmp
imul
mov
(bad)
popf
fbstp
add
and
push
push
sbb
scas
and
(bad)
es
rep
mov
pop
cs
adc
mov
mov
pop
xchg
push
(bad)
sahf
push
jo
in
pop
push
mov
int3
int3
ror
aas
add
mov
cmps
leave
sub
inc
outs
mov
mov
or
loopne
push
adc
imul
jo
or
xor
aam
mov
mov
or
popa
jg
cmps
in
int3
jg
sbb
mov
ins
cmps
cdq
cmp
inc
imul
jns
pop
not
mov
das
inc
retf
icebp
mov
shl
push
outs
fild
mov
jne
push
arpl
sub
stc
push
mov
scas
jge
mov
in
xchg
or
repnz
stc
ds
add
dec
stos
scas
popa
call
mov
cld
imul
popa
pop
call
jb
lds
xor
ret
sti
stc
and
jecxz
mov
fdivr
cmp
test
mov
retf
ja
pop
pop
and
js
or
cmp
in
sub
or
sbb
cmp
aaa
jnp
inc
and
and
jmp
pop
xlat
clc
sbb
div
mov
pop
xchg
jg
je
push
(bad)
push
scas
push
outs
mov
mov
adc
add
pop
lods
mov
mov
jg
sub
ins
sti
xchg
dec
cmp
(bad)
push
nop
faddp
cmps
aaa
(bad)
pop
push
dec
xchg
and
xor
ins
mov
jl
adc
push
mov
adc
cmp
test
and
aad
call
sub
fdiv
xchg
iret
sub
jmp
and
arpl
(bad)
pop
fmul
retf
xchg
pop
rcr
hlt
and
push
sub
imul
mov
and
sbb
lods
add
int
movs
in
dec
cmp
aaa
jbe
pushf
cmp
in
jmp
and
inc
push
inc
cmp
add
cwde
xchg
jno
lock
sub
pushf
cmp
add
push
das
int
push
adc
adc
mov
into
push
and
push
xchg
push
in
(bad)
fmul
inc
(bad)
test
enter
js
(bad)
or
hlt
add
(bad)
hlt
dec
sbb
sbb
sbb
sub
scas
aas
xor
ror
add
sub
lods
int
pop
xor
push
adc
outs
gs
ja
mov
sar
xchg
xor
in
cmp
cli
popa
dec
cmp
xchg
femms
jne
push
mov
das
xchg
es
rcl
(bad)
repnz
push
dec
je
fistp
push
mov
push
ret
jo
and
ins
arpl
(bad)
out
movs
push
data16
sub
loope
popa
push
sti
push
icebp
jle
jp
inc
mov
ror
into
mov
stos
(bad)
and
icebp
push
scas
addr16
icebp
movs
pop
fisubr
and
mov
mov
or
out
dec
cwde
cmp
xchg
inc
dec
pop
sti
mov
add
sbb
test
inc
sbb
fdiv
cmp
sub
in
inc
shl
dec
jns
mov
xchg
mov
cmp
pop
loope
stos
lock
adc
aaa
mov
sub
call
pop
addr16
add
xchg
pop
and
stos
movs
out
dec
or
and
add
mov
in
xchg
pop
popa
dec
inc
and
scas
add
outs
neg
add
iret
int
icebp
add
pop
or
mov
pushf
xor
jmp
push
or
adc
clc
push
outs
int3
mov
push
sti
cwde
and
inc
mov
stc
scas
mov
jl
into
cs
sbb
(bad)
aas
scas
adc
adc
test
(bad)
loopne
adc
sahf
sub
lods
fldenv
mov
fcom
rcl
xchg
outs
mov
je
jmp
mov
xchg
pop
into
xor
pop
jae
or
add
out
minps
or
rcr
or
je
(bad)
(bad)
sub
sar
lods
repnz
and
mov
jns
es
push
(bad)
movzx
xor
int
cmp
inc
test
xchg
mov
(bad)
ja
sbb
jno
or
loop
fisub
test
shl
xchg
mov
test
rcr
lds
cmps
inc
int
dec
pop
rcl
and
sbb
movs
jmp
pop
ss
out
(bad)
shr
lock
add
in
dec
fldcw
pop
ret
cmp
adc
jno
call
pop
or
les
pop
cmp
fwait
pop
hlt
push
push
ficomp
jg
push
lea
pop
in
add
mov
(bad)
xor
outs
sti
jne
dec
fsubr
mov
add
fdivr
cmps
mov
hlt
or
(bad)
test
push
iret
jns
xchg
mov
aas
lds
stos
fadd
inc
mov
test
dec
sub
cmp
cdq
ret
mov
sbb
scas
ja
outs
popa
aas
jmp
push
jb
sub
mov
sub
or
sub
add
mov
jl
inc
xor
xor
sbb
cmp
and
mov
xor
(bad)
dec
in
(bad)
xlat
in
jae
cmp
jmp
arpl
push
cmp
fdivr
int3
dec
cmp
cmp
xchg
std
outs
or
(bad)
cli
iret
push
mov
dec
cmp
mov
rcr
ds
mov
aas
ficom
jno
(bad)
pusha
dec
mov
ss
jmp
and
pop
in
and
xchg
mov
pop
jns
mov
xchg
fdecstp
test
jle
dec
pushf
mov
xchg
dec
out
out
xor
popf
pushf
sub
jns
repnz
pusha
fimul
push
cld
ret
cmp
mov
mul
pop
ret
shr
in
je
enter
clc
adc
cmp
jo
dec
dec
mov
fdivr
fstp
cmp
dec
test
lea
jmp
push
ss
call
in
sub
mov
dec
loopne
dec
add
pop
int
std
and
add
loopne
adc
(bad)
aas
retf
xchg
xor
imul
cmp
push
ins
push
or
lods
out
xchg
pop
std
pop
adc
call
sub
jmp
retf
enter
inc
stos
(bad)
xchg
xchg
jmp
cmp
loopne
sti
sbb
out
mov
(bad)
jmp
pop
mov
enter
out
dec
inc
aad
xchg
add
lods
pop
adc
mov
push
hlt
lods
pushf
jns
daa
shr
and
in
sbb
stos
out
add
mov
xchg
sub
sub
fmulp
dec
inc
mov
in
dec
dec
test
scas
jge
outs
push
call
xor
push
add
jbe
pusha
addr16
cld
inc
fdivr
push
adc
shl
mov
or
es
dec
call
xchg
arpl
fcomip
fnsave
push
pop
xchg
fmul
pop
fnstcw
inc
jmp
add
inc
mov
fld
test
test
repz
test
(bad)
or
jnp
and
sbb
xchg
out
jb
adc
lahf
rcr
jnp
cmp
adc
jnp
aas
mov
cli
jae
pop
frstor
popa
push
add
xor
pushf
mov
sbb
jge
adc
mov
ins
outs
dec
cmps
cmp
pop
fidivr
sub
xchg
mov
rcl
sti
cs
inc
dec
mov
fsub
pop
leave
mov
xchg
data16
mov
or
jns
jno
add
popa
sub
adc
ins
nop
or
fld
jb
mov
mov
cmp
adc
pop
test
xchg
sbb
stc
dec
je
mov
out
mov
jbe
cmp
adc
push
popf
or
cwde
std
(bad)
retf
jg
or
fs
test
and
inc
push
pop
test
data16
or
rcl
in
sbb
mov
lea
mov
shl
push
push
pop
clc
jge
jmp
pop
jl
sub
stos
lea
(bad)
outs
inc
cs
popa
dec
popf
or
jns
shl
es
inc
aaa
sar
retf
div
repnz
xchg
rcr
hlt
inc
int3
jmp
adc
test
enter
cmp
mov
stos
xchg
and
adc
jb
iret
data16
dec
push
push
cmp
mov
and
pop
aam
push
cdq
iret
sbb
add
mov
(bad)
jbe
(bad)
sub
aad
xchg
into
pusha
sti
push
jmp
ja
mov
out
push
and
stos
sbb
pop
sub
mov
mov
int
add
mov
jb
jmpw
cmps
out
sbb
push
pop
cmp
inc
fst
mov
ja
out
sub
mov
iret
enter
mov
cs
into
clc
xor
jmp
mov
sub
aas
ss
fild
pop
lds
div
pop
xchg
mov
hlt
iret
mov
das
test
pushf
pusha
movs
push
sahf
movs
(bad)
jbe
dec
jo
mov
push
pop
not
into
lods
mov
mov
adc
movs
(bad)
push
mov
or
push
or
lea
rol
pop
(bad)
cmp
mov
mov
(bad)
mov
(bad)
icebp
or
test
cmp
push
mov
out
push
sbb
push
xor
xchg
or
mov
loopne
es
pop
or
gs
or
cmp
cs
and
fidiv
lock
xor
jmp
and
xlat
pop
fyl2xp1
leave
leave
(bad)
fs
imul
in
rcl
sahf
mov
scas
jns
cmp
mov
sub
jmp
cmps
pop
jp
into
(bad)
lock
push
popa
cli
cdq
add
imul
shr
jge
mov
fwait
aaa
xchg
std
and
repz
dec
dec
push
pop
dec
dec
daa
xchg
mov
xchg
mov
xor
sub
push
aaa
rol
shl
or
inc
mov
sub
and
xchg
les
jg
cmp
cmp
repz
mov
loopne
jl
jle
push
cmps
cmc
cmp
mov
test
fdiv
inc
out
retf
outs
or
push
shr
lock
mov
xchg
mov
scas
mov
fnstcw
icebp
adc
ret
and
mov
retf
cmp
call
or
sbb
lahf
daa
jns
xchg
mov
dec
inc
nop
cmp
cmc
and
lahf
cmps
out
jno
or
push
addr16
cli
popa
stos
arpl
jmp
and
fwait
mov
fcomp
and
inc
or
or
jno
popa
sbb
popa
ja
cld
mov
ret
or
jmp
rcr
xor
mov
(bad)
in
sbb
fdiv
inc
sub
mov
inc
xor
ffreep
and
clc
inc
rep
inc
sahf
push
std
ins
mov
push
push
push
hlt
(bad)
push
cmp
pop
enter
mov
sbb
add
adc
xor
cmp
fstp
es
or
mov
and
mov
int
in
neg
test
mov
cld
jmp
xchg
or
sbb
xchg
neg
mov
or
aas
(bad)
stc
or
movs
scas
push
int3
sub
xor
test
pop
add
leave
sub
cmps
jne
push
into
mov
xchg
aam
ret
daa
ss
(bad)
addr16
int
call
popa
(bad)
mov
mov
outs
out
scas
(bad)
repnz
inc
fld
les
or
repz
out
js
inc
xor
sar
sbb
push
stc
or
mov
dec
sar
add
push
push
imul
enter
push
pop
pop
jnp
lea
adc
pusha
inc
movs
sub
out
jno
or
daa
movs
adc
jns
pop
mov
push
pop
sub
jae
jge
std
sbb
cmp
lods
push
out
(bad)
icebp
sub
call
les
xor
or
fdiv
inc
retf
pop
dec
push
das
dec
mov
inc
xchg
retf
test
pop
aam
jno
jo
outs
add
scas
nop
sbb
inc
imul
xor
stos
push
xchg
into
iret
ins
imul
xchg
outs
into
ins
pushf
sbb
test
add
sahf
pop
or
lock
dec
sub
out
daa
add
xor
fsub
push
daa
mov
pop
adc
(bad)
cli
mov
jns
pop
mov
cmps
xchg
mov
cmps
imul
mov
adc
ins
xor
shl
sbb
inc
push
mov
xor
or
in
fwait
mov
call
fcom
sbb
sub
(bad)
jo
pop
or
pop
out
js
bound
xchg
addr16
mov
xchg
daa
xchg
mov
sbb
hlt
adc
div
jbe
and
push
ror
mov
push
(bad)
inc
sbb
cdq
cs
sub
leave
fist
test
cdq
(bad)
push
fstp
pop
mov
adc
aad
jmp
fld
sub
add
movs
jns
ficom
and
cmp
sahf
mov
(bad)
lock
popa
stc
std
mov
sub
dec
pop
les
out
or
adc
(bad)
js
xchg
sbb
push
push
outs
hlt
pop
dec
call
mov
add
jno
or
(bad)
pop
arpl
pop
sbb
pop
sti
push
sahf
nop
pop
cs
les
ins
jecxz
ret
xor
enter
mov
cmp
push
pop
sti
inc
cs
mov
movs
cmps
call
out
pop
lods
mov
neg
pop
add
push
jnp
mov
imul
sub
jecxz
or
pop
or
ficom
sub
pop
sub
mov
(bad)
cld
ins
xor
inc
add
(bad)
arpl
fstp
mov
dec
das
push
mov
in
cmp
rol
iret
scas
(bad)
jle
push
shl
sbb
pop
jl
stos
xchg
jle
in
push
int
lods
push
sub
sbb
rol
aam
rcr
imul
add
xchg
sbb
xor
xor
pop
cmps
and
mov
jbe
adc
or
push
jl
sbb
xchg
jge
push
push
pop
pusha
ret
sbb
cwde
add
lea
pop
cmps
mov
pushf
jge
int3
sub
add
xchg
sar
mov
icebp
pop
out
pushf
popa
paddq
sub
les
mov
rol
mov
lods
sti
(bad)
aas
jecxz
mov
scas
push
lahf
sti
mov
lock
sar
mov
into
test
movs
std
mov
stc
pusha
pop
je
inc
dec
inc
enter
push
gs
in
fdiv
clc
jle
dec
loope
(bad)
pop
inc
dec
fsubp
js
sbb
inc
call
lahf
pop
or
mov
jne
fcom
jmp
je
inc
jg
shl
scas
dec
sub
xor
mov
push
sub
cwde
xor
inc
xor
je
xor
cdq
mov
(bad)
adc
mov
push
repz
test
aad
add
push
aam
sbb
add
xchg
add
sub
sbb
cmp
add
xchg
mov
push
(bad)
inc
sub
shr
push
inc
in
movs
push
outs
xor
jae
sub
adc
push
sbb
adc
repnz
ror
and
pop
cmp
adc
xchg
je
int
(bad)
and
pop
test
dec
jbe
les
dec
sbb
or
(bad)
xor
(bad)
sbb
pop
test
jne
mov
popf
adc
xchg
fs
sbb
sub
mov
dec
pop
xchg
push
inc
sti
dec
xlat
adc
or
popa
mov
arpl
ror
add
daa
xchg
movs
jp
test
addr16
xchg
in
xchg
or
inc
push
jno
or
dec
rcr
jae
fisttp
call
cwde
adc
xchg
ins
sbb
(bad)
mov
or
sub
sub
imul
pushf
into
pop
out
std
ret
repnz
repnz
cmp
call
pop
jmp
or
cmp
jbe
popf
call
xor
xor
call
or
mov
pop
adc
fst
test
sbb
ins
xchg
jne
xor
neg
and
cs
xor
jle
iret
test
jp
ds
mov
pop
mov
les
mov
pop
jmp
inc
push
iret
std
addr16
es
push
mov
jne
pop
out
adc
and
sbb
ins
les
ja
fdivr
popa
aam
xchg
ret
ret
cdq
sub
clc
scas
fisubr
pop
shr
into
xchg
ret
lods
lahf
ds
push
cmp
and
push
adc
mov
pop
fldcw
std
stc
add
sub
cld
mov
fstp
scas
xor
les
pushf
mov
dec
or
ds
inc
pop
mov
jnp
dec
int
dec
sbb
les
adc
sti
icebp
xchg
inc
adc
add
test
ret
inc
mov
jne
shl
in
(bad)
out
jle
imul
jmp
jmp
dec
test
dec
bound
xor
adc
xlat
dec
ret
xor
mov
sbb
and
jp
sbb
push
dec
js
daa
ret
xchg
adc
mov
xchg
cwde
xor
xor
mov
data16
inc
(bad)
les
adc
and
push
mov
xchg
push
adc
(bad)
sahf
aas
xlat
ins
scas
imul
and
imul
cmp
mov
retf
or
(bad)
ror
mov
sub
out
mov
add
or
sahf
lods
and
cmps
test
xor
(bad)
add
mov
in
sbb
sar
in
mov
(bad)
xor
ins
sub
cmp
loop
out
loope
jbe
push
aad
sbb
call
mov
test
mov
pop
add
ror
jmp
scas
ror
test
jmp
stos
push
fisub
or
jb
ret
adc
cmc
push
lods
xor
popf
sub
cs
push
jle
cmc
rcr
or
sbb
loope
fimul
and
inc
fld
mov
ins
ja
nop
mov
sar
add
repz
fs
sub
mov
sar
pop
and
adc
sub
data16
ja
pop
jo
cmp
mov
movs
imul
test
cmp
jge
outs
jp
fdiv
in
xchg
mov
(bad)
stc
and
push
mov
leave
push
inc
les
sar
loope
sub
data16
loopne
dec
and
test
js
cmp
daa
jmp
cmps
loopne
and
adc
jbe
leave
xchg
shr
test
push
jns
sub
mov
cdq
xchg
in
mov
(bad)
fisub
sbb
xchg
dec
sub
and
repnz
sub
jbe
neg
(bad)
mov
scas
and
out
pusha
sub
mov
data16
hlt
pop
cmps
icebp
movs
push
outs
pop
adc
pop
lds
xlat
cs
rcl
fsub
or
cli
and
fstp
in
dec
test
test
in
std
ficomp
mov
pusha
in
je
iret
imul
cmc
jmp
inc
dec
dec
outs
xor
popa
xchg
pop
inc
or
xchg
(bad)
clc
adc
and
mov
outs
pop
leave
leave
loop
push
cli
jge
pop
xor
mov
std
adc
jne
ja
add
jmp
lods
mov
inc
push
out
pop
cmp
mov
out
repnz
jno
out
lods
hlt
shr
sub
es
std
in
cmp
mov
stos
and
call
jg
pop
stos
xchg
scas
sub
js
adc
(bad)
nop
jae
retf
ror
add
ja
jbe
les
bnd
and
into
dec
jmp
xor
xchg
lock
sub
sub
add
(bad)
jne
mov
loope
xchg
or
sbb
jmp
dec
push
int
lods
mov
jle
ja
jb
leave
adc
cmp
rcr
xchg
das
cmp
add
or
fdivrp
and
jg
inc
or
mov
mov
xchg
call
cli
out
pop
imul
pop
inc
cmp
lods
scas
loopne
push
or
fucomp
ja
aam
sub
lock
push
dec
loop
mov
pushf
xchg
pop
(bad)
xchg
pop
adc
call
je
sbb
add
dec
hlt
push
mov
pop
mov
push
push
gs
fnsave
add
dec
in
jle
in
(bad)
and
sahf
adc
add
out
mov
(bad)
icebp
sbb
pop
nop
add
out
ins
stos
lahf
rcr
pusha
pop
adc
jbe
mov
(bad)
xchg
mov
push
popa
std
into
ds
imul
mov
das
jge
shr
lds
sti
into
sub
outs
and
pop
jns
xchg
jb
or
push
xlat
movs
xchg
sbb
cdq
out
(bad)
gs
push
add
mov
bound
sar
sar
into
fisubr
mov
ret
jecxz
dec
jge
mov
pop
hlt
fsub
scas
les
cs
aaa
push
cmp
mov
pop
mov
jno
retf
idiv
cmps
jb
repz
dec
cmp
push
push
lds
xor
push
mov
out
sbb
mov
lahf
inc
and
dec
icebp
pushf
push
rcr
add
div
repnz
dec
fst
(bad)
mov
add
(bad)
xchg
sbb
dec
inc
jecxz
mov
aaa
out
adc
sub
jnp
fs
push
mov
fwait
cmp
and
xlat
jg
xsha1
cmps
iret
xchg
and
mov
nop
in
ds
arpl
mov
xor
out
imul
out
mov
dec
mov
push
or
or
into
cmp
jae
sahf
pop
daa
adc
out
mov
mov
mov
in
mov
into
add
cmc
ins
leave
or
mov
ror
sub
sub
adc
or
loop
in
fwait
jno
cmp
jae
test
mov
pop
lea
mov
(bad)
mov
mov
add
retf
sti
xor
and
(bad)
and
pop
dec
or
adc
js
xchg
fiadd
enter
(bad)
mov
(bad)
enter
ja
push
es
retf
mov
ds
dec
sub
push
test
inc
fisttp
xor
mov
pop
and
and
sub
mov
mov
mov
fstp
js
xor
hlt
(bad)
ret
adc
cld
into
pop
cmp
out
push
pop
push
or
inc
cmp
adc
push
cs
pop
jge
pushf
sbb
ds
add
cmps
jmp
div
or
push
(bad)
gs
movs
dec
dec
imul
sub
pop
dec
ret
lds
ret
push
repz
cli
(bad)
es
or
inc
jecxz
(bad)
adc
push
push
rol
push
cs
mov
mov
pop
retf
xchg
(bad)
mov
xlat
or
xlat
mov
push
add
add
mov
xchg
jmp
jmp
mov
rol
xchg
dec
pop
inc
xor
xchg
addr16
(bad)
and
dec
lahf
pop
loop
inc
outs
imul
jo
adc
repnz
push
cmps
jp
retf
test
loop
hlt
push
test
xchg
and
sbb
(bad)
ins
add
sbb
add
and
adc
lea
dec
data16
mov
inc
or
lock
fcom
jns
scas
lahf
stos
aad
jbe
ins
cmc
xchg
xchg
xor
daa
shl
push
loopne
arpl
js
call
cmps
repnz
aas
dec
xor
jle
push
cmp
xlat
sbb
xchg
test
dec
retf
call
sahf
popa
add
in
jbe
lods
xchg
cli
push
sub
mov
ss
vpavgw
js
mov
xchg
and
idiv
(bad)
out
stos
iret
and
cwde
fcmovu
rol
hlt
sbb
out
nop
inc
scas
loop
sub
loope
call
sbb
aaa
stos
pusha
push
(bad)
js
rol
pushf
or
int3
or
lock
push
xor
in
pop
mov
test
bound
mov
cld
push
inc
jmp
scas
sbb
jo
pop
je
sahf
outs
lock
retf
imul
shl
push
jmp
cli
dec
adc
(bad)
push
mov
sub
or
imul
ss
cmp
add
sub
jo
inc
test
and
movs
xor
call
lds
add
or
jge
mov
push
cmps
dec
sbb
imul
cmps
inc
shl
mov
dec
ror
add
lods
stos
sub
and
sar
gs
retf
and
into
add
std
test
mov
shr
addr16
adc
push
add
retf
add
xlat
pusha
dec
leave
cdq
dec
push
cli
in
push
add
pusha
or
call
pop
fwait
and
ja
xor
jo
or
(bad)
adc
aad
repnz
cld
or
mov
call
ja
xchg
ins
(bad)
inc
mov
aad
inc
movs
mov
xchg
icebp
call
mov
loop
pop
add
imul
jb
movs
or
add
and
ret
sar
jl
aaa
mov
mov
dec
outs
fdivr
inc
mov
jno
(bad)
jmp
out
pop
bnd
jp
mov
adc
cmp
clc
add
imul
scas
mov
popf
sub
and
sub
pop
or
aad
movs
or
loop
ret
xor
call
mov
ficomp
xchg
or
mov
inc
icebp
fwait
xor
sub
mov
pop
ror
daa
test
nop
jmp
mov
jmp
push
mov
fmul
xchg
push
ja
in
fs
sub
aaa
xchg
mov
xchg
pop
(bad)
dec
fistp
popf
(bad)
sti
push
loope
shr
ja
int3
mov
mov
inc
sbb
lahf
jmp
dec
cmc
(bad)
sahf
sbb
xchg
dec
dec
xchg
addr16
pop
loopne
or
lahf
jae
fwait
adc
jae
add
pop
inc
arpl
mov
sub
jg
mov
sbb
loopne
pop
sbb
xchg
out
cli
pop
aaa
std
sub
adc
out
mov
mov
into
popa
stos
lds
dec
fdiv
cmps
in
and
in
jmp
or
(bad)
mov
movs
scas
ins
or
push
lods
cmp
adc
inc
repnz
sub
or
inc
dec
ror
leave
cbw
push
por
sbb
stc
xor
leave
sub
stc
es
lahf
sbb
pusha
int3
cmp
sbb
inc
imul
les
stos
mov
ret
sub
xchg
add
xchg
aas
push
push
adc
pop
ficom
dec
inc
and
or
pushf
mov
ret
mov
cmc
and
loop
dec
mov
(bad)
cwde
retf
push
push
clc
out
repz
out
jae
lahf
cmp
loope
rcr
stos
mov
cmp
mov
cli
das
pop
mov
jno
mov
jecxz
addr16
aam
jmp
rcr
movs
(bad)
in
sahf
jp
and
cmp
iret
retf
fs
fcomp
jae
xor
inc
(bad)
cmp
pop
xchg
(bad)
cdq
test
jmp
(bad)
std
mov
(bad)
xor
pushf
(bad)
das
xchg
pop
int3
clc
sub
aad
cmps
xor
push
gs
(bad)
in
mov
addr16
jge
jae
mov
and
retf
adc
or
jp
jae
fistp
(bad)
xchg
xchg
outs
xchg
pop
lods
stos
pop
adc
cs
das
jmp
gs
mul
sub
stos
xor
fnsave
leave
push
pop
sbb
mov
xor
aam
(bad)
clc
inc
imul
dec
test
pop
(bad)
adc
ret
pop
mov
xchg
ret
bound
(bad)
ss
ds
rol
ret
movs
dec
pop
cmps
mov
movs
pop
ret
loopne
test
nop
xor
mov
fadd
mov
and
jmp
sub
and
stc
sahf
sbb
xchg
icebp
rcl
dec
mov
inc
sbb
test
mov
dec
xchg
outs
sub
out
sub
and
jecxz
sbb
iret
ret
mov
add
dec
fild
sub
dec
sbb
data16
out
movd
xchg
je
jbe
or
ins
es
mov
push
sbb
fldenv
adc
push
jmp
pop
lea
sar
imul
add
push
clc
movs
lea
out
jmp
cmp
fst
adc
aaa
push
push
cmp
mov
dec
xchg
test
xchg
fild
jg
fmul
mov
sbb
xchg
adc
push
adc
sub
pop
cmps
inc
mov
repnz
pushf
mov
and
sbb
fst
jns
fwait
popa
mov
mov
and
or
cli
cli
je
repz
mov
ret
cmps
test
mov
je
xor
daa
test
xchg
cmps
repnz
retf
mov
push
cmps
pop
in
(bad)
ins
mov
pop
inc
push
mov
inc
add
rol
xor
in
sbb
cmp
and
aad
pusha
ins
test
jge
les
(bad)
adc
std
push
out
je
sub
dec
dec
sbb
mov
and
out
movs
xchg
push
jno
dec
aaa
mov
push
cs
outs
cs
scas
and
mov
fisub
aas
xrelease
cmc
and
in
pop
cmps
stos
test
test
loop
outs
jb
cmp
push
inc
mov
push
xchg
mov
mov
pusha
lods
sbb
repz
adc
push
cmps
dec
ss
push
add
adc
inc
jae
pop
mov
imul
in
mov
cmps
jbe
xlat
ins
std
pop
cmp
retf
data16
lahf
jle
jbe
cs
push
ss
ret
sub
cmps
adc
mov
push
popf
mov
(bad)
jmp
mov
shl
lods
ins
or
movs
push
xlat
add
add
sbb
mov
or
jl
call
jns
pop
adc
das
xor
push
inc
test
or
(bad)
pop
xor
repz
aas
int3
loop
fsubr
pop
shl
int3
enter
ins
xor
mov
inc
push
ret
cmp
xchg
push
jmp
imul
pop
sub
fs
test
sar
pusha
test
sbb
adc
mov
jmp
inc
pop
pop
inc
movs
jp
or
mov
jp
gs
rcr
inc
cmp
pushf
push
sub
loope
mov
mov
das
stos
mov
bound
jp
pop
jo
cmp
ret
mov
push
icebp
and
fadd
jmp
push
mov
xchg
jno
mov
sbb
cmp
xchg
adc
stos
je
adc
out
pop
xor
lock
jbe
add
or
data16
or
dec
cwde
push
scas
mov
cmp
movs
mov
or
or
and
or
inc
mov
inc
movs
fiadd
cmps
and
(bad)
call
in
clc
out
aad
popa
outs
jno
xchg
sbb
dec
xchg
and
jp
xor
dec
repz
div
xchg
shl
outs
(bad)
aad
ins
jns
fwait
imul
add
mov
push
lods
jecxz
or
jp
outs
push
lds
arpl
pop
adc
jmp
rcr
loopne
adc
xchg
sub
sub
pop
or
outs
dec
and
jmp
fsub
sbb
cmp
not
dec
scas
xchg
sbb
mov
pop
mov
retf
mov
jo
xchg
aaa
inc
fcomi
push
ins
pop
add
(bad)
fsubr
ja
mov
loop
scas
cmp
popf
daa
in
repnz
movs
dec
test
push
xchg
and
and
add
shl
ficomp
mov
inc
ror
and
sbb
in
push
dec
xor
test
pusha
retf
lods
lods
inc
in
xchg
sbb
stc
or
stos
inc
cmp
ss
movs
inc
jns
or
and
das
and
loope
call
xchg
jns
cmp
adc
cmp
sub
aad
ror
fmul
and
and
fst
xchg
mov
xchg
adc
bound
cmp
jp
sbb
icebp
mov
pusha
add
xchg
cmp
shl
jmp
and
ss
ret
test
iret
inc
add
mov
mov
cmp
inc
fs
mov
cmp
icebp
test
mov
mov
into
repz
ss
test
push
jno
retf
loop
pop
push
mov
and
mov
or
mov
(bad)
fnstenv
push
xchg
call
stc
mov
jle
(bad)
(bad)
(bad)
(bad)
dec
cmp
lds
jo
push
cld
sub
add
sub
mov
mov
xor
bound
xchg
push
or
push
adc
out
jae
out
jp
das
pop
or
mov
xor
push
adc
sub
repnz
dec
dec
stos
sbb
pusha
and
cmp
mov
ins
mov
xchg
and
int3
std
pop
in
or
mov
retf
int
aam
rcr
xor
in
cs
dec
aam
push
cmps
ret
fsubr
fst
inc
jmp
and
jl
fidiv
int
test
leave
mov
sbb
ret
cmc
or
dec
push
loope
aaa
sub
pop
imul
sbb
jp
xor
aad
mov
push
dec
sbb
icebp
mov
xchg
dec
pop
add
sub
sub
test
sti
mov
out
mov
push
inc
jp
push
js
push
sbb
(bad)
cmp
movs
div
outs
bound
fisttp
stos
fsubr
cmp
fld
push
gs
xor
movs
hlt
push
out
pop
loope
xor
mov
and
xlat
push
scas
inc
js
in
pushf
cld
mov
lahf
outs
cld
outs
jecxz
pop
sub
ss
or
add
mov
or
scas
and
stos
mov
or
dec
mov
ror
int3
xchg
cwde
jae
fdiv
stos
pop
cli
mov
xchg
aam
xlat
jl
jge
cld
sub
repz
ds
ins
push
xchg
in
sahf
mov
cmp
das
ins
mov
mov
add
pop
jo
xchg
lods
dec
xchg
js
pop
inc
sub
in
call
inc
les
mov
push
cmp
mov
cdq
jmp
cmp
mov
inc
mul
pusha
push
pusha
dec
or
sbb
jp
shr
call
pop
add
mov
(bad)
loop
mov
add
in
addr16
pop
sub
pop
xor
fcmovu
cmc
xor
ss
mov
lds
adc
pop
push
sbb
add
adc
add
pop
jmp
lods
fisttp
lds
fadd
push
loop
sahf
nop
outs
int
ins
mov
push
mov
shr
into
into
add
mov
pop
adc
push
test
and
(bad)
hlt
sub
int
retf
adc
cld
add
movs
js
fadd
mov
jg
js
push
xchg
clc
or
lds
das
(bad)
lock
adc
mov
sub
jno
dec
ds
push
mov
jbe
add
loopne
pusha
xor
std
xchg
daa
mov
(bad)
out
add
repz
ja
(bad)
fwait
cmp
pop
inc
jmp
xchg
or
out
jo
retf
xor
lods
dec
lods
pop
jp
lahf
mov
inc
xchg
add
xor
inc
fnstsw
fcom
jg
mov
mov
mov
int3
sub
cmp
mov
rcr
inc
xchg
(bad)
call
add
mov
jge
lods
xchg
fist
lods
mov
das
xlat
mov
mov
sbb
data16
test
or
add
imul
int3
sbb
jbe
jae
adc
leave
addr16
in
rol
fisttp
sub
jne
cmps
jl
rol
cmc
popf
(bad)
stos
ds
sub
jge
mov
and
adc
sar
and
gs
mov
or
mov
jl
aas
stos
cwde
int3
mov
hlt
dec
pop
test
jge
repnz
es
fisttp
dec
cwde
add
test
arpl
or
ins
and
mov
jns
or
and
adc
mov
mov
ret
cmp
shl
push
cmp
jge
mov
lods
pop
stc
mov
lods
mov
jle
pusha
xchg
jne
adc
daa
in
push
jno
ins
jl
add
mov
movs
pop
adc
test
jns
xor
inc
movs
adc
mov
pop
dec
movs
imul
mov
popf
mov
inc
inc
inc
int3
mov
addr16
jne
outs
mov
cwde
scas
xchg
mov
shl
movs
push
(bad)
jmp
xchg
das
push
movs
pushf
loop
not
in
scas
and
mov
pop
cmps
cli
mov
xor
jbe
enter
cmps
js
dec
mov
call
sbb
pop
push
rcr
and
pop
stos
sbb
test
imul
mov
jl
cmp
add
adc
or
shl
and
lock
loop
pop
movs
lock
xchg
and
rcr
inc
jp
in
inc
xchg
es
dec
(bad)
test
mov
ins
and
pushf
fcomi
cld
or
iret
rcr
mov
cmp
dec
push
cwde
push
push
inc
dec
cmc
outs
pop
sbb
jno
(bad)
retf
jno
sub
pop
out
xor
adc
pop
pop
outs
push
pop
and
dec
shl
pushf
and
jge
push
cmp
cmp
(bad)
icebp
push
mov
inc
mov
dec
xchg
pop
fnsave
fist
loopne
int3
xchg
sti
shr
sbb
dec
dec
add
out
(bad)
aaa
push
fndisi(8087
xchg
sbb
adc
(bad)
repz
add
aaa
repnz
js
iret
add
and
sbb
rcr
pop
retf
cmc
pop
mov
mov
cli
cmp
and
int
push
ins
test
cmp
cs
sub
daa
(bad)
mov
mov
xchg
int
int3
dec
cmp
xchg
cld
sub
push
inc
cmc
cli
fst
out
push
xchg
and
rol
and
and
mov
sub
shl
fwait
leave
pop
sbb
data16
icebp
sub
call
dec
mov
stos
lods
popa
jecxz
into
mov
cwde
aad
jg
stc
iret
mov
cli
(bad)
sbb
in
mov
adc
gs
daa
lea
int3
mov
push
fs
or
sbb
or
popa
or
sub
xchg
in
add
ss
test
test
(bad)
hlt
jge
push
mov
mov
mov
mov
dec
in
push
push
(bad)
pop
repz
xor
xor
je
test
bound
mov
jo
pop
fcomi
or
pushf
pop
jne
fsubr
or
push
cli
push
and
cmc
push
add
fild
mov
aas
adc
es
out
inc
push
mov
iret
mov
add
fnstsw
ja
xor
mov
icebp
pusha
(bad)
push
lods
or
leave
dec
out
neg
dec
gs
nop
in
jns
ins
js
push
and
ja
dec
hlt
sub
cmps
inc
leave
dec
lea
xchg
or
fcomip
inc
inc
inc
nop
mov
or
mov
loop
inc
add
push
outs
sbb
jecxz
pop
jge
aam
pushf
enter
pushf
xchg
test
mov
mov
pop
icebp
push
ret
dec
sub
inc
inc
mov
sub
mov
bound
shl
lds
mov
out
ss
daa
ficomp
sti
div
jle
popa
cdq
mov
fist
xchg
inc
mov
push
jl
dec
add
add
test
push
dec
faddp
add
outs
cmc
push
mov
fistp
jp
jle
loope
push
test
cmps
add
mov
mov
xchg
or
pop
push
push
out
(bad)
leave
shl
and
pop
retf
and
mov
jp
or
icebp
shr
mov
sahf
fisub
imul
les
inc
inc
outs
jmp
push
inc
mov
mov
mov
shl
or
xchg
repz
adc
sbb
retf
int3
mov
inc
push
inc
mov
mov
add
mov
sbb
cmc
push
popa
mov
(bad)
mov
cdq
leave
aad
(bad)
cs
pop
pop
sbb
pop
aaa
push
scas
inc
xchg
fmul
xchg
xor
sbb
(bad)
aas
int3
retf
sub
sub
test
pop
dec
push
sbb
xor
jo
mov
out
lds
fwait
mov
cmc
in
cdq
pop
leave
xor
out
xchg
sbb
cmp
cmp
pop
aad
outs
icebp
sar
fwait
in
xor
dec
pop
mul
out
pop
add
or
gs
(bad)
xor
arpl
ins
or
ja
and
mov
add
cmc
push
test
repz
adc
push
adc
shr
rol
and
push
sub
int3
mov
cs
cdq
mov
sub
inc
jl
mov
pop
jl
js
hlt
push
sbb
pop
mov
and
retf
jmp
(bad)
push
and
icebp
or
jmp
xor
adc
div
inc
pop
leave
lds
pop
pop
aas
movs
mov
lods
out
(bad)
es
sub
sbb
sti
push
(bad)
mov
fs
pop
cwde
int
mov
or
add
or
lods
lods
lahf
call
sub
ffree
(bad)
mov
imul
and
nop
add
and
retf
(bad)
adc
cli
and
xchg
push
out
pop
scas
jnp
das
adc
push
pop
scas
das
jns
loope
cld
mov
lods
iret
cmp
out
pop
sub
jmp
mov
push
clc
test
push
xor
aam
cmp
ja
outs
add
sub
enter
in
das
dec
and
bound
mov
bnd
mov
retf
fwait
lods
push
into
test
das
lock
outs
jae
xor
call
cmp
jns
xor
jl
ss
(bad)
popf
adc
push
inc
repnz
sbb
mov
jmp
fwait
shl
idiv
pop
test
pop
jge
and
jmp
add
cmps
adc
ret
sar
pushf
push
xor
sbb
jle
jo
mov
bound
pop
daa
scas
or
and
repz
icebp
inc
pop
and
jb
mov
xchg
fwait
sbb
jl
adc
sbb
rcl
icebp
jnp
pop
sub
out
aam
iret
out
sub
push
test
mov
sbb
xchg
inc
ss
mov
pop
test
add
nop
push
dec
adc
test
and
loop
mov
test
retf
xchg
test
adc
fsubr
mov
pop
ja
jmp
cld
and
fbld
lahf
adc
adc
mov
xor
add
mov
repz
sbb
jmp
adc
push
pop
dec
mov
mov
cmps
(bad)
sbb
std
fstp
in
jo
test
call
ins
push
push
clc
adc
and
test
inc
mov
adc
(bad)
mov
inc
xchg
pop
lahf
mov
push
(bad)
pop
jle
maskmovq
mul
lds
xor
enter
dec
lods
add
into
sub
or
cld
or
sbb
std
sub
jnp
jg
xchg
xor
pop
mov
adc
sbb
and
shl
mov
pop
xlat
fstp
movzx
shl
inc
fadd
xchg
cli
inc
js
sbb
popf
and
pop
out
adc
dec
mov
fwait
rcr
add
sbb
jg
out
sbb
aam
xchg
mov
adc
cmps
lock
call
ror
in
cmp
(bad)
(bad)
inc
sar
fs
in
repnz
ds
push
xacquire
pop
lahf
jmp
push
rcl
lods
(bad)
jmp
cwde
aad
outs
jo
jo
sahf
and
jmp
retf
popa
adc
push
ins
pop
or
shl
adc
sub
imul
sbb
xchg
iret
inc
imul
je
lods
pop
inc
aas
popa
in
mov
push
in
iret
jmp
adc
adc
xor
test
stos
cs
das
pusha
jnp
out
mov
fadd
cld
mov
popf
mov
(bad)
mov
pop
or
cmp
jp
and
and
fcomp
sti
loope
(bad)
outs
jmp
fnstcw
les
mov
xchg
mov
xor
pop
xor
cmp
hlt
jo
fwait
mov
push
pop
mov
shl
push
xchg
sub
sti
test
fiadd
enter
cmps
sub
pusha
or
jg
sar
cld
cmp
call
scas
jecxz
xchg
fs
mov
sar
mov
xlat
cmp
jbe
rcl
in
test
adc
movs
lea
xchg
sub
or
dec
test
stos
rol
jbe
clc
mov
idiv
(bad)
cmp
pop
fsubr
xchg
cdq
adc
(bad)
dec
fcomp
outs
mov
pop
pop
clc
sub
mov
pop
(bad)
adc
fwait
xchg
loopne
int
out
sub
push
push
add
stos
mov
enter
push
or
scas
cli
mov
sar
jmp
bndldx
into
scas
mov
jl
js
cld
xor
jo
xor
ret
clc
mov
push
hlt
xlat
std
cmp
push
push
adc
mov
movs
int
(bad)
xlat
mov
(bad)
cwde
push
sbb
add
mov
pusha
adc
sbb
xchg
and
inc
test
sbb
push
cmp
or
sbb
rsm
lods
cli
bswap
xchg
jae
dec
mov
pand
jmp
adc
idiv
xor
ss
arpl
pop
lea
lahf
(bad)
stos
in
(bad)
call
sub
in
mov
int3
dec
ds
scas
xchg
pop
mov
and
pop
inc
pop
dec
jne
pop
shl
out
(bad)
mov
push
inc
cli
test
sbb
inc
es
div
ret
cld
gs
mov
ds
mov
imul
mov
mov
and
(bad)
dec
stos
lahf
inc
jl
push
dec
jae
fs
push
fidivr
jl
cmc
mov
(bad)
into
xchg
adc
dec
mov
xor
jl
dec
ret
mov
add
jne
mov
and
inc
adc
sahf
pop
xchg
mov
leave
cld
aas
mov
in
mov
adc
scas
jg
and
xchg
std
ins
dec
aad
ins
pop
movs
and
inc
xchg
mov
dec
fistp
pop
mov
xchg
test
push
mov
pop
adc
pop
xor
es
mov
lahf
lods
nop
fidiv
or
jp
outs
pop
or
fsubp
test
fdivr
in
lds
push
xor
inc
mov
cld
cmp
add
pop
or
iret
add
inc
imul
xor
adc
int
test
push
jmp
pop
mov
lahf
int3
lods
dec
push
dec
test
pop
or
jle
outs
jmp
pop
mov
mov
ret
mov
pop
mov
(bad)
fild
rcl
mov
and
xchg
enter
in
sahf
pop
test
xchg
mov
xor
dec
jmp
and
add
pop
bound
call
(bad)
out
jge
movs
mov
push
mov
div
push
not
out
add
scas
or
mov
mov
xchg
mov
push
xor
xor
add
enter
clc
and
push
cli
jo
xor
push
mov
hlt
dec
xor
mov
mov
inc
aad
jmp
repz
jnp
jl
call
xor
test
sar
stos
in
(bad)
sbb
cmps
mov
(bad)
loop
mov
pop
cdq
mov
mov
or
xchg
dec
mov
sbb
adc
ror
jle
mov
jbe
xchg
repz
dec
retf
sbb
stos
call
hlt
fwait
and
mov
push
mov
stos
cmp
stos
jp
mov
inc
sbb
push
cmps
out
jmp
mov
mov
and
push
mov
cmps
lods
sub
mov
inc
and
cli
or
inc
enter
stos
test
jbe
mov
push
fcmovb
add
xchg
outs
add
sub
movs
arpl
cld
mov
jmp
and
cmc
add
imul
fs
jmp
icebp
fild
dec
sub
bound
ror
push
jnp
push
sub
sbb
out
ss
fistp
hlt
ins
push
dec
sub
push
icebp
and
add
push
or
sbb
scas
xor
movs
sub
in
or
sti
iret
add
or
mov
adc
push
xor
push
dec
mov
popa
(bad)
sbb
jp
mov
scas
dec
in
jbe
arpl
xor
es
mov
mov
cmp
sar
sbb
mov
sti
push
or
add
mov
adc
add
aam
mov
pop
xor
inc
dec
lock
xor
jae
repnz
lock
and
fmul
and
lahf
xor
mov
bound
or
dec
mov
push
pop
add
add
in
or
scas
pop
xchg
fistp
push
jmp
mov
adc
inc
pop
cdq
fmul
mov
mov
pop
inc
mov
xor
jg
inc
or
pop
ja
repz
push
and
jle
fstp
shl
mov
add
mov
nop
push
push
fistp
ss
shl
jmp
push
lods
cld
adc
movs
sbb
jnp
ins
shl
adc
imul
outs
mov
mov
mov
cli
and
jle
mov
adc
dec
push
push
or
mov
xchg
mov
adc
pop
dec
inc
aad
mov
shl
push
dec
sub
cmp
stc
call
jns
lods
dec
and
cmp
and
scas
lods
push
(bad)
xor
xchg
push
cwde
repz
mov
jae
mov
imul
lods
dec
daa
sbb
inc
add
add
xchg
(bad)
std
jo
in
hlt
mov
xor
scas
jp
scas
xchg
sti
mov
retf
mov
maskmovq
idiv
mov
fwait
daa
sti
outs
mov
fbld
pop
push
inc
call
jp
mov
neg
jne
xor
cwde
fild
(bad)
add
out
pop
outs
sub
(bad)
mov
sbb
xor
fimul
lea
stos
dec
sbb
mov
lods
rcl
mov
sbb
loope
test
outs
nop
lods
int
mul
or
call
ffreep
lods
mov
ret
push
or
out
xchg
outs
aaa
dec
mov
pop
fild
int
pop
and
inc
xlat
into
leave
inc
mov
add
sub
loop
out
addr16
cmp
xor
leave
adc
loopne
mov
mov
rcl
push
sbb
jns
push
test
es
cmp
iret
ret
sbb
shl
jne
sahf
(bad)
sbb
push
jbe
outs
jmp
stos
or
je
leave
sbb
dec
call
ss
add
lods
xor
mov
and
jbe
(bad)
mov
mov
mov
jb
mov
mov
fldenv
sahf
pop
arpl
or
cmps
dec
rol
mov
inc
and
sbb
test
jbe
popa
sub
dec
stos
retf
lds
push
adc
clc
(bad)
push
mov
and
cli
cmp
jle
cmp
sbb
lgs
and
rol
cld
jo
cmp
and
pop
xor
stc
xor
xor
jge
ins
and
mov
gs
mov
movs
mov
mov
jb
aaa
jp
retf
mov
fst
sti
in
push
out
fcomi
or
jecxz
adc
pop
push
fisubr
lahf
mov
push
inc
jp
out
movs
xchg
bound
pop
mov
push
scas
push
jnp
cmp
fs
pusha
repz
xchg
xchg
and
xchg
mov
inc
mov
cmp
out
shl
shr
dec
mov
adc
sbb
shr
jp
mov
fild
cld
xchg
scas
fcom
cmp
xchg
inc
xchg
int
fdiv
adc
lds
push
fwait
ds
or
loopne
arpl
or
sti
pop
sub
loope
mov
adc
btr
push
arpl
daa
pop
cli
pop
call
mov
mov
mov
scas
icebp
cmp
(bad)
clc
jg
push
dec
out
xor
fnstcw
rcl
jno
mov
sub
cs
push
xchg
jb
adc
retf
push
push
sbb
cmp
mov
xor
cmps
adc
pop
dec
mov
push
or
mov
sbb
push
aaa
jmp
int3
xor
cmps
jecxz
cdq
lods
fwait
rol
mov
enter
addr16
jge
icebp
scas
cmp
mov
mov
pop
jmp
cmp
fstp
mov
aam
push
pop
mov
stc
into
jl
dec
test
imul
sbb
outs
enter
sub
pushf
in
ins
ins
enter
mov
dec
movs
fidiv
push
pusha
and
into
lock
add
and
ds
bound
mov
inc
movs
add
add
mov
movs
and
loope
mov
dec
sahf
jo
js
loopne
in
hlt
ins
cmps
stc
ret
or
or
jbe
cmp
adc
js
(bad)
into
jl
cmp
test
dec
pop
xchg
push
jae
(bad)
retf
imul
test
out
cmp
fneni(8087
stos
add
mov
stos
sub
cmp
adc
fs
jmp
cmp
jne
retf
sub
fdivr
arpl
loope
call
test
push
mov
(bad)
mov
arpl
cmp
bound
fcmovu
push
stos
xor
outs
jae
mov
ror
add
mov
pop
(bad)
data16
pop
stos
xor
xor
out
test
push
push
xor
pop
rdpmc
mov
enter
leave
inc
sahf
xchg
and
gs
mov
je
push
imul
and
stos
mov
lods
sbb
lahf
mov
aaa
cmp
lea
repz
or
cmps
shr
ror
fwait
cld
mov
scas
dec
and
movs
pop
neg
cli
outs
sbb
cdq
adc
add
push
sub
sbb
mov
cmp
fimul
popf
out
test
jge
loop
test
in
fisubr
aad
xchg
cmps
mov
cs
cmp
cmp
mov
leave
xchg
xor
cli
shl
push
and
inc
sub
fwait
nop
dec
mov
pop
or
add
mov
jg
mov
jge
sub
lods
adc
jae
mov
mov
adc
mov
mov
mov
or
out
out
dec
inc
pop
pushf
sub
push
jle
into
mov
xchg
cmc
call
mov
cli
mov
leave
out
test
mov
dec
arpl
mov
pop
neg
sub
scas
call
push
xor
sub
data16
sub
ds
pop
and
sbb
enter
xor
push
pop
imul
cmp
scas
int
cmps
fisttp
in
pop
test
jnp
adc
in
xchg
jo
jmp
jb
mov
imul
cmp
sub
clc
cwde
inc
rcl
stos
ja
lea
jbe
out
sbb
popf
mov
int
cmp
push
push
jnp
leave
mov
repnz
sub
(bad)
mov
and
fwait
mov
jbe
stos
jl
aas
in
ins
es
stos
jo
xchg
mov
(bad)
xlat
loopne
xlat
fsub
push
push
out
add
lods
leave
dec
push
mov
imul
fcom
and
stos
fld
jmp
retf
xlat
and
inc
push
stos
scas
and
push
leave
and
pop
sbb
push
shl
sub
loopne
inc
add
ret
pop
cmc
mov
mov
xor
fwait
mov
pop
sar
sbb
nop
pandn
(bad)
push
mov
adc
mov
fs
pop
inc
retf
dec
adc
or
push
mov
addr16
mov
xor
inc
in
out
(bad)
outs
sbb
or
and
(bad)
xor
lea
push
mov
pop
sbb
sbb
out
dec
dec
mov
inc
adc
std
cmp
clc
les
push
shr
popf
pop
sbb
mov
fs
lahf
aad
xchg
in
fbld
add
rol
out
mov
mov
mov
pop
mov
jnp
adc
push
or
add
lea
pop
adc
int3
(bad)
retf
inc
test
imul
cmps
xor
add
dec
psubw
inc
jns
lahf
mov
mov
imul
jnp
inc
or
(bad)
mov
or
mov
and
cs
and
cmps
push
xor
aam
fld
push
out
hlt
xchg
and
and
rol
pop
retf
lahf
cmpps
sub
shl
bound
sahf
jmp
push
pop
and
lods
inc
es
imul
out
int
mov
movs
jp
mov
loope
pusha
arpl
mov
out
inc
or
xor
es
mov
ss
aas
push
data16
scas
mov
ds
inc
mov
(bad)
adc
test
mov
sar
test
into
lea
xor
xor
xor
in
add
dec
lock
mov
sbb
je
jns
and
and
(bad)
in
dec
clc
mov
mov
pop
lods
mov
or
mov
mov
loopne
popa
mov
mov
int3
adc
adc
bound
test
lods
aaa
cmp
jge
mov
cwde
sar
out
cdq
mov
push
loopne
or
pop
pop
add
mov
pop
enter
jmp
repnz
jnp
icebp
sbb
push
les
dec
jp
bound
push
sub
fmul
fmul
jmp
loop
jmp
aas
(bad)
sti
pop
push
scas
or
pop
and
mov
dec
fst
jle
test
xor
push
dec
daa
aaa
pop
pop
push
mov
ss
mov
ss
xor
sub
and
add
inc
imul
push
test
(bad)
inc
inc
pop
xor
mov
xchg
pop
outs
cdq
cmc
push
in
add
inc
cmc
jl
out
es
test
sub
mov
inc
fiadd
pusha
dec
(bad)
mov
(bad)
mov
mov
sbb
lahf
or
jbe
xchg
dec
jne
test
mov
sbb
pop
and
jmp
aam
mov
cmp
aam
add
sbb
pop
mov
fisubr
jo
popf
(bad)
xchg
add
or
mov
dec
sbb
pop
xor
pop
add
mov
mov
jne
test
or
ins
ins
in
push
imul
and
adc
add
mov
sbb
sbb
call
or
mov
cmc
pushf
pop
xchg
lods
(bad)
loope
pop
mov
fnstsw
jmp
adc
das
lods
mov
imul
into
in
les
xchg
pop
add
mov
cmps
dec
out
jl
cmp
fs
xchg
sbb
hlt
push
pop
cdq
inc
add
push
fild
cli
jecxz
mov
mov
data16
jmp
movs
es
xor
xlat
or
sub
fst
enter
mov
add
repnz
push
adc
dec
jae
pusha
jmp
daa
dec
push
outs
sub
pop
cdq
(bad)
aad
icebp
call
jbe
mov
stc
in
push
sti
stos
lds
pop
xor
xchg
cdq
xlat
mov
pop
mov
and
test
rcr
add
inc
mov
jmp
fld
dec
outs
dec
xor
jbe
push
ja
inc
adc
mov
xor
sub
ret
mov
jae
jle
rcl
mov
daa
(bad)
das
cs
dec
xchg
(bad)
stos
push
(bad)
ins
scas
cdq
fldcw
cli
pop
and
cmp
call
jecxz
adc
xchg
and
sbb
retf
cmp
clc
pop
fwait
mov
mov
jbe
je
popf
aam
lods
add
call
ja
out
or
test
fs
imul
sub
jno
ss
and
xor
mov
not
push
cmp
ds
sub
(bad)
movs
xlat
jmp
out
push
jmp
add
push
dec
fwait
sbb
jns
mov
mov
sbb
sbb
daa
retf
xor
cmp
fcom
imul
scas
add
cmp
lds
add
inc
and
sub
mov
fist
jns
aaa
imul
dec
cdq
mov
dec
dec
xor
inc
xor
test
jae
sub
loopne
push
cmp
push
jno
rcl
icebp
hlt
ret
jo
sbb
out
jne
std
hlt
fisttp
jb
imul
fnsave
jle
imul
cs
popa
cmp
(bad)
idiv
inc
cmp
or
xor
jle
sub
jl
hlt
mov
or
xor
or
sbb
ins
stos
lods
sbb
icebp
push
sahf
lahf
cwde
or
popa
jb
enter
adc
pop
mov
push
mov
cld
adc
stos
sbb
xchg
lahf
push
cmp
jl
int3
ret
sub
mov
dec
xchg
clc
mov
jne
inc
sub
pop
jmp
test
(bad)
rol
scas
dec
dec
inc
imul
mov
or
loop
mov
xchg
mov
dec
pop
inc
xchg
fnstcw
dec
test
and
rcr
test
add
pop
jle
add
(bad)
lds
cdq
std
pop
cmp
push
ins
(bad)
xchg
add
std
repz
jae
or
cli
sub
jno
sub
xchg
mov
enter
aas
pushf
dec
xchg
xor
fwait
std
div
cdq
sbb
sub
adc
adc
adc
shr
inc
cld
pusha
iret
add
int
mov
push
xor
inc
inc
mov
push
adc
adc
inc
sbb
repz
loope
fsubr
cmp
add
xchg
and
inc
ret
pop
inc
aaa
xchg
(bad)
pop
stc
jbe
and
pop
in
cmp
je
sbb
mov
mov
ja
icebp
push
cmc
int3
push
js
jle
sar
jmp
es
sar
fs
dec
and
aaa
adc
call
addr16
out
dec
adc
push
aam
hlt
lds
das
jae
sub
sbb
xlat
adc
push
inc
dec
xchg
pop
or
sub
dec
inc
or
mov
jg
ss
es
inc
or
add
add
or
cmps
or
jbe
data16
sub
dec
lods
jl
and
add
and
mov
sbb
jmp
stos
push
aas
push
(bad)
mov
scas
xor
sahf
gs
inc
std
xchg
popa
push
scas
jb
test
les
nop
test
xchg
jo
mov
inc
add
retf
les
pop
jmp
scas
jmp
fdivrp
(bad)
sbb
pusha
push
add
(bad)
push
shr
mov
ret
jle
fmulp
movs
rcr
in
mov
xchg
mov
mov
scas
cmp
adc
jbe
hlt
call
push
inc
adc
scas
jecxz
aam
jne
ret
lock
imul
popf
or
pop
data16
mov
adc
int3
stos
add
or
pop
xor
sub
ror
mov
mov
movs
cli
sbb
cmp
out
adc
jns
dec
or
push
int3
aad
jno
retf
push
retf
adc
cld
inc
cmp
jge
cli
sub
push
add
js
js
lock
rol
(bad)
jbe
jae
(bad)
int
pop
aaa
in
sbb
sbb
xor
imul
cmp
fcomip
stos
pop
in
call
jl
push
and
jle
mov
pop
mov
pop
fistp
mov
xor
mov
pushf
push
sub
ss
pop
add
test
repz
or
push
push
or
cmp
rcl
aam
test
push
sti
scas
mov
hlt
jb
adc
mov
adc
cmc
inc
and
fcmovne
icebp
imul
or
pop
xor
(bad)
or
cmp
fidiv
cmp
dec
fst
cmp
dec
das
push
mov
sbb
and
pop
std
sub
mul
and
sub
inc
jbe
call
lahf
xchg
popf
cmp
and
shl
xlat
mov
add
(bad)
mov
mul
push
cmp
(bad)
sub
sub
cmp
pop
mov
xor
ror
jmp
dec
mov
push
cs
and
dec
jo
loopne
loope
jae
ja
int
lds
imul
jbe
pop
jmp
fcom
into
jbe
bound
jl
into
mov
jb
pusha
ss
jge
das
movs
ret
xor
mov
aad
lods
adc
into
and
std
mov
mov
sbb
xchg
adc
xchg
jae
mov
clc
adc
dec
or
jne
fild
fisubr
cmp
sub
push
call
mov
mov
push
cmps
sub
stos
pop
jmp
fs
dec
movs
stc
aaa
dec
pop
aas
or
push
data16
pop
leave
(bad)
js
mov
xor
jmp
cwde
sub
sub
xor
loope
es
mov
inc
div
mov
sub
imul
lds
or
xchg
loopne
sub
outs
cmp
das
jge
xor
in
cmp
pop
or
cld
or
repnz
mov
cld
jmp
das
jmp
rcl
hlt
xor
or
or
int3
pop
icebp
(bad)
pop
lock
test
adc
gs
jmp
lahf
test
and
in
mov
lahf
pop
mov
sbb
mov
jne
pop
jecxz
cmp
in
aad
loopne
inc
mov
dec
jnp
lods
cli
arpl
add
push
push
dec
xor
xor
pop
mov
sub
dec
inc
add
mov
push
jns
movs
lds
push
mov
mov
lods
in
xlat
xchg
cmp
aam
or
add
sbb
je
sub
fcomp
adc
lds
xlat
cli
dec
mov
inc
mov
add
adc
or
cld
mov
cdq
jmp
repnz
inc
imul
inc
mov
mov
scas
(bad)
jb
stos
sbb
retf
test
dec
sbb
ss
or
(bad)
jmp
xchg
outs
pushf
push
add
mov
cmp
in
out
mov
xor
je
enter
cdq
and
xchg
mov
ins
fucomi
xor
bound
ins
adc
stc
scas
push
int
loope
es
or
xor
jge
fwait
cmp
xor
and
scas
pop
ror
dec
lock
cmp
inc
dec
sahf
shr
and
in
iret
outs
fwait
pushf
and
adc
dec
int
loope
xchg
push
xchg
pop
mov
xchg
cdq
rol
sub
pop
pop
cmp
mov
lods
popa
jge
mov
sub
push
mov
js
(bad)
pop
add
outs
pop
mov
ret
mov
fist
dec
push
sbb
jns
inc
adc
pop
repnz
dec
into
xlat
shl
gs
shl
aad
or
into
cmc
pusha
int
jle
add
dec
push
jno
sbb
xchg
push
sbb
fndisi(8087
pushf
add
inc
sbb
mov
push
sti
inc
aas
fsub
mov
test
pop
mov
daa
lods
mov
sar
and
fsub
sub
mov
add
add
mov
outs
push
adc
inc
ins
add
dec
or
cmp
xor
sbb
sub
movs
push
iret
ds
inc
dec
(bad)
cmp
jbe
xor
inc
lods
xor
outs
cld
adc
jle
sbb
or
mov
loopne
mov
jp
cmp
xor
mov
pop
xor
cmp
jne
inc
dec
pop
jae
inc
pop
mov
push
test
jns
sub
and
int3
ss
cwde
jp
xor
into
inc
cdq
pop
push
js
cdq
adc
or
cs
call
cmp
dec
and
cmp
push
lock
inc
push
push
mov
cmps
shr
or
push
ins
jmp
xor
movs
out
imul
loop
stos
mov
aas
jnp
xor
adc
adc
adc
sbb
sub
stc
out
and
push
mov
sbb
mov
loope
gs
pop
outs
mov
push
icebp
popf
xor
mov
fdiv
fsubr
lods
ins
mov
inc
inc
data16
retf
mov
sbb
fwait
jg
xchg
and
movs
shl
mov
mov
outs
cmp
out
(bad)
js
jae
dec
mov
add
std
(bad)
lods
xchg
and
push
fisttp
loop
dec
in
xchg
jbe
pop
ret
clc
mov
repnz
mov
mov
or
jo
out
data16
mov
jno
test
push
mov
push
xor
fisttp
jns
aas
retf
sahf
gs
cwde
mov
xor
jge
icebp
jne
stc
sbb
cmps
and
es
fstp
dec
mov
pop
jne
loope
push
sub
dec
mov
sar
(bad)
ret
sti
mov
test
lea
(bad)
fadd
xchg
dec
in
sub
push
xchg
add
jno
movs
outs
dec
jecxz
pushf
test
push
and
(bad)
lods
jmp
inc
push
scas
jecxz
cmp
xchg
je
pop
es
inc
or
or
mov
or
xchg
inc
inc
retf
xchg
push
lss
sub
mov
es
mov
iret
mov
push
(bad)
retf
lods
mov
or
jns
mov
out
cmp
pop
xchg
mov
push
dec
js
xor
add
fstp
sub
and
sbb
xor
lahf
xor
aaa
and
dec
js
lods
in
js
int3
shl
mov
arpl
movs
daa
sub
not
adc
shr
pop
mov
out
mov
sub
inc
mov
add
fld
adc
outs
pop
imul
dec
das
jae
fist
adc
mov
cmovbe
inc
mov
sub
mov
inc
cwde
mov
loop
mov
xchg
jl
into
cli
lds
sub
lods
cmp
sbb
outs
or
xchg
lods
leave
popa
xor
cmps
popa
add
push
and
pop
sbb
cmp
addr16
jp
cmps
fsubr
in
test
fcomp
sub
sahf
adc
xchg
and
iret
(bad)
mov
call
aad
cmp
loopne
(bad)
mov
mov
lahf
lahf
xor
and
ror
aaa
push
aam
ss
cli
add
dec
in
push
nop
and
jbe
jae
sub
ja
jo
push
cmp
dec
ret
jmp
mov
test
dec
scas
dec
out
(bad)
and
adc
xchg
inc
jns
cli
arpl
dec
xchg
jns
sub
es
popf
jl
leave
enter
mov
aad
pop
xchg
mov
xor
mov
test
dec
mov
cmp
pop
or
lock
jne
adc
cmp
ja
xchg
pop
cmp
out
cmp
loope
retf
data16
xor
mov
in
lahf
ror
mov
mov
pop
mov
ja
inc
(bad)
and
cmps
sbb
mov
cmp
inc
pop
xor
xor
sbb
sbb
aam
xchg
xor
mov
xor
xchg
dec
fnstsw
adc
jae
mov
nop
popa
xor
lahf
sbb
in
fwait
imul
push
out
mov
lock
lea
out
enter
sub
enter
fisttp
stos
push
sti
inc
scas
inc
xor
cmp
clc
pop
data16
sub
test
inc
enter
adc
dec
mov
xchg
inc
adc
xor
pop
xor
jae
mov
inc
pusha
add
int
daa
ret
xor
call
jbe
outs
push
mov
mov
ficom
mov
push
(bad)
dec
lock
sub
ror
xchg
stos
in
mov
in
hlt
cmp
cmps
mov
(bad)
les
repnz
shl
xor
push
pop
push
push
aad
(bad)
mov
daa
pop
sbb
stos
fisttp
popa
xchg
push
lds
cmps
adc
jns
ret
iret
jne
xchg
ins
popf
pop
mov
or
out
lods
rcl
mov
pop
das
pop
adc
fcom
inc
out
sub
cmp
icebp
outs
jle
hlt
mov
xor
ret
inc
pop
movs
test
xchg
call
mov
push
gs
xchg
out
jo
pop
adc
mov
(bad)
mov
xchg
pop
xchg
adc
mov
push
lea
lock
cmp
cmps
mov
sbb
nop
sub
add
clc
mov
dec
test
jle
les
ror
imul
dec
pop
es
inc
jmp
push
in
les
out
sar
pop
or
pop
mov
cmp
mov
cmps
dec
js
push
in
and
mov
je
jno
mov
movs
sti
mov
(bad)
mov
jae
ss
pusha
mov
mov
push
lea
cmp
lods
dec
shl
into
xchg
mov
pop
ret
ins
aas
je
mul
popf
mov
out
or
mov
dec
dec
lock
pop
out
lods
cmp
mov
ret
add
pop
sub
iret
rol
loope
pop
movs
test
(bad)
dec
pusha
add
icebp
push
lods
push
dec
popf
jge
cli
mov
icebp
cmp
(bad)
out
(bad)
minps
lods
ret
popf
es
sar
aam
retf
and
fcmovb
(bad)
imul
cmp
inc
scas
(bad)
not
sbb
call
lea
dec
xor
div
dec
je
int
outs
pop
dec
in
lea
fidiv
ss
mov
inc
ins
fsub
mov
mov
dec
xor
cdq
lods
mov
lods
add
nop
fs
sbb
push
loopne
push
movs
iret
xchg
xlat
test
lea
sub
nop
inc
inc
(bad)
mov
dec
adc
aaa
mov
shl
test
fnstsw
std
cmp
jae
sub
jno
jo
mov
push
xchg
adc
inc
or
mov
mov
das
dec
or
fnstsw
sub
gs
ror
shr
mov
in
mov
xchg
inc
adc
push
xchg
jbe
loop
adc
xchg
lock
arpl
mov
jmp
push
in
jge
loope
inc
lea
retf
iret
adc
push
scas
rcr
or
cmp
es
stc
sahf
scas
in
adc
jg
pop
xchg
popa
sbb
out
in
and
adc
add
(bad)
std
loope
xchg
shl
les
xor
mov
dec
xchg
pop
(bad)
cmp
sbb
add
jle
mul
mov
mov
jp
xor
into
cmps
lea
mov
sub
mov
cmps
inc
ret
mov
call
adc
aas
mov
sub
xlat
retf
cs
sub
cmp
and
cld
cdq
push
mov
mov
test
jg
jle
cmp
mov
sbb
in
pop
jl
gs
xchg
mov
or
(bad)
xor
push
pmulhuw
mov
mov
in
sbb
or
pop
push
cwde
dec
shl
ins
dec
(bad)
cdq
ins
pop
lfs
pop
or
ror
repz
pop
ret
push
inc
dec
scas
push
mov
jmp
mov
cmp
cmp
jno
aad
sbb
xchg
dec
(bad)
lock
sbb
add
ins
add
mul
xor
push
push
in
mov
icebp
mov
cmps
lahf
test
(bad)
mov
int3
xor
ss
outs
xor
adc
cwde
loop
clc
mov
aas
frstor
sbb
push
mov
pop
inc
fsub
xchg
inc
loopne
(bad)
arpl
popf
mov
cdq
sub
dec
in
xchg
xchg
inc
push
dec
in
sahf
fbstp
add
loop
sbb
jmp
sbb
adc
pop
xlat
push
lods
gs
cs
iret
mov
mov
add
jg
xchg
mov
dec
cmps
adc
jg
sahf
fldcw
outs
mov
out
cld
push
jnp
mov
sbb
sbb
mov
shr
fcmovne
cmp
adc
sbb
call
or
or
xor
sub
ror
int
jmp
js
fnsave
sbb
fs
mov
fwait
scas
loopne
push
out
sub
mov
cmp
leave
xchg
inc
ds
and
fadd
(bad)
push
out
dec
mov
mov
fld
pop
or
sar
sar
lahf
sbb
fimul
xor
inc
loopne
test
inc
into
sbb
lds
xchg
mov
mov
lock
stos
retf
out
paddb
in
cld
mov
int
cmp
xchg
pop
sar
inc
ins
hlt
shr
cmps
shl
icebp
sub
int3
mov
dec
daa
mov
jae
adc
push
mov
push
inc
pop
fnstsw
push
inc
and
add
retf
jecxz
sub
sub
lock
jg
pop
shl
not
push
mov
sbb
sub
fnstsw
sbb
ret
inc
pop
dec
int3
pop
fistp
adc
lock
mov
push
pop
dec
call
movs
and
dec
jnp
shl
mov
push
test
push
add
out
xor
es
push
jns
pop
push
pop
fwait
arpl
addr16
inc
arpl
movs
adc
adc
ins
and
and
dec
(bad)
sar
lahf
sub
mov
push
fndisi(8087
mov
idiv
sbb
adc
pop
and
addr16
fwait
jnp
mov
pop
repz
aaa
pop
ret
adc
adc
jns
addr16
in
sbb
bound
sbb
cld
call
dec
das
lds
es
add
arpl
adc
cmp
fisttp
mov
fcom
or
sbb
xor
shr
xor
push
inc
clc
mov
jmp
or
mov
scas
pushf
jp
je
mov
adc
xor
sub
rcl
cli
daa
repnz
sub
sbb
cmp
sub
dec
movs
push
push
lds
xor
adc
retf
add
in
pop
(bad)
mov
cmc
stos
outs
inc
repnz
sbb
iret
sub
aas
cmp
test
mov
adc
inc
sub
je
enter
cwde
and
out
stos
sahf
rol
xlat
scas
xchg
sbb
fild
pop
jg
inc
add
loop
push
adc
jmp
and
adc
rcr
dec
nop
rol
outs
into
mov
push
daa
aas
push
(bad)
sub
sahf
loop
adc
inc
das
scas
inc
data16
int
sbb
imul
je
popa
adc
stos
movs
rcr
mov
cmp
shl
sbb
test
dec
ret
movsx
xchg
mov
pop
loopne
xchg
jbe
mov
push
and
(bad)
mov
add
dec
lahf
fadd
aad
rol
test
test
daa
jns
arpl
mov
mov
dec
dec
push
ins
xchg
xchg
push
xor
call
xchg
das
dec
fs
or
push
ja
inc
call
jmp
push
shl
xchg
mov
stc
mov
sbb
int3
cmp
retf
pop
mov
push
icebp
push
dec
test
jb
mov
adc
(bad)
add
jecxz
xchg
adc
jmp
movs
xor
xchg
dec
aaa
inc
loop
(bad)
aas
sbb
out
xchg
cmp
push
push
(bad)
mov
xchg
repnz
enter
loopne
pop
mov
pushf
in
mov
xlat
test
pop
stos
gs
mov
mov
imul
aas
cmp
mov
cdq
xlat
xchg
jae
inc
ds
fidivr
fist
lods
push
lods
popa
aad
daa
pop
dec
mov
retf
movs
out
test
dec
iret
sbb
repnz
pop
mov
add
inc
or
sbb
sub
in
aas
inc
movs
ffreep
jmp
ja
rol
popa
aam
cmps
xchg
mov
push
mov
call
(bad)
jno
jle
mov
enter
icebp
gs
jle
dec
test
push
aaa
inc
aaa
in
fstp
fstp
cmp
inc
push
iret
and
and
js
test
xchg
dec
icebp
fcomp
mov
lods
test
hlt
inc
stos
shl
mov
(bad)
adc
arpl
xor
std
stc
aad
mov
sbb
das
pop
stos
jp
pushf
fisttp
add
je
pop
xor
int3
push
jbe
lahf
int
inc
fsubr
sti
gs
xchg
add
mov
push
pop
sbb
dec
jae
data16
or
pop
loope
xchg
jnp
call
dec
js
adc
pop
shl
sbb
fnstsw
xchg
cmp
lock
(bad)
ret
and
les
loopne
xor
sbb
adc
mov
push
dec
inc
add
loope
test
popa
ins
inc
add
mov
push
jb
scas
das
mov
ds
dec
or
adc
push
push
push
mov
mov
(bad)
jg
retf
call
ins
pop
mov
popf
cmp
mov
in
mov
jo
dec
fistp
(bad)
in
les
jbe
outs
ror
dec
mov
in
inc
aad
jg
inc
loope
inc
lods
jmp
fisttp
xchg
fwait
cmc
jae
aam
jb
mov
dec
out
or
leave
(bad)
shl
dec
push
mov
fs
ss
repnz
retf
xchg
add
popa
push
add
cs
xchg
fsub
and
mov
leave
pop
jno
js
mov
mov
fimul
add
imul
pop
dec
pusha
ins
shr
out
lds
dec
retf
test
dec
and
inc
pop
push
and
dec
adc
cwde
xchg
je
rcr
jle
push
mov
inc
adc
movs
fiadd
cdq
fcom
mov
or
std
arpl
fprem1
pop
into
mov
sbb
adc
enter
(bad)
xor
sub
ins
adc
stos
or
pop
cmp
pop
sbb
fcmovnu
rcr
call
and
sub
sbb
cmp
sbb
mov
outs
mov
aas
push
pop
pop
pop
ins
sbb
dec
aad
out
lock
gs
out
jge
(bad)
(bad)
std
pop
jno
js
aad
or
dec
loop
jb
pop
icebp
lock
or
dec
pop
sbb
sub
push
xor
aam
xor
push
mov
es
pusha
inc
xchg
mov
mov
test
cmc
nop
repz
cwde
cmp
inc
cmps
pop
xchg
fnstenv
retf
pushf
xchg
loopne
mov
inc
dec
fisub
xchg
into
jno
ins
cdq
cmc
add
dec
pop
xor
push
std
std
pop
jge
in
ds
popa
call
dec
inc
mov
mov
add
mov
ss
sbb
arpl
cmp
or
pop
jmp
data16
cmps
mov
pop
cmp
push
mov
call
mov
and
mov
pop
into
int3
dec
dec
(bad)
xchg
lods
or
cmp
push
mov
ficomp
shl
rcl
sub
xchg
(bad)
jmp
nop
cmp
ror
xchg
cli
in
or
fcmove
aam
xchg
inc
jbe
mov
mov
aam
xchg
imul
cli
dec
rcr
int3
fcom
push
mov
fadd
in
cmp
jnp
shr
ins
aas
pushf
dec
imul
push
cdq
pushf
add
ret
push
sub
cmp
or
ficom
scas
ror
popa
call
add
push
pop
outs
pop
aaa
mov
cmps
jno
imul
fwait
aam
mov
and
add
jae
or
shl
outs
aaa
push
adc
jbe
dec
enter
jecxz
xrelease
js
or
jb
cdq
cmp
lahf
xchg
mov
jo
pusha
dec
leave
and
jnp
stos
inc
sti
aas
scas
jns
add
ficom
test
lock
cdq
mov
hlt
sub
icebp
xchg
movs
mov
sub
stos
mov
stc
out
popa
gs
je
fidiv
adc
cmp
out
pop
pop
ror
dec
mov
and
aas
fiadd
ret
rcl
cld
push
clc
pop
mov
shl
fcomi
mov
jnp
shl
fcmovu
ucomiss
pusha
retf
popa
sub
into
cmp
imul
imul
out
cmps
lods
(bad)
js
dec
lds
sti
bound
or
cmp
xchg
test
mov
mov
sub
loope
mov
sub
push
lea
div
jmp
js
xchg
inc
mov
cli
jmp
out
lahf
outs
sub
xor
xchg
cmps
daa
stos
into
aaa
xchg
addr16
out
mov
xor
call
mov
arpl
aam
cmc
or
scas
movs
loope
push
es
pop
push
pop
pusha
jge
cmp
push
data16
enter
pushf
or
test
sub
pushf
cmc
inc
int3
mov
jl
and
test
jp
mov
cmp
xor
jl
xchg
or
test
mov
xor
jmp
movs
aas
test
in
xchg
dec
sbb
inc
dec
sahf
mov
xchg
fiadd
sub
sbb
mov
push
push
mov
fcmovnbe
xchg
jb
fnsave
inc
call
popa
aam
dec
outs
adc
les
test
xor
and
sub
stc
sub
cwde
adc
mov
and
jg
iret
jns
mov
(bad)
jmp
fldcw
push
mov
inc
daa
cmp
jmp
dec
xchg
jmp
out
imul
pop
loope
jmp
rcr
or
pop
daa
icebp
sbb
(bad)
cs
mov
adc
mov
mov
dec
pop
div
sti
aas
push
loop
cdq
ficomp
retf
ins
mov
inc
jle
xor
dec
jne
dec
add
push
xor
sahf
push
lahf
cs
mov
into
push
push
sub
xchg
or
test
mov
mov
out
loope
addr16
pushw
or
add
add
cmp
pop
mov
dec
pop
pop
mov
dec
push
sbb
(bad)
cmp
je
lods
pusha
imul
stos
fwait
inc
jecxz
and
call
imul
mov
cwde
out
out
inc
pop
adc
and
into
adc
scas
jmp
mov
stc
jecxz
push
sbb
cmp
icebp
mov
xchg
adc
(bad)
pop
mov
mov
push
test
cdq
sub
cmps
jo
das
adc
bound
sbb
jne
jns
mov
es
shl
or
or
lahf
adc
repz
cld
xchg
inc
and
and
add
loope
lock
jb
js
je
movs
out
inc
jle
popf
or
sti
xchg
mov
jbe
sahf
pop
mov
mov
dec
sbb
ror
adc
ds
pop
pop
aas
pop
xchg
dec
les
mov
mov
mov
mov
xor
fst
inc
cmp
ds
(bad)
xchg
dec
jl
out
jmp
xor
xchg
out
std
retf
ror
fidivr
sub
shl
daa
emms
leave
les
xor
lock
inc
in
push
fcomp
fucomip
cmp
pop
(bad)
sub
inc
(bad)
pushf
push
pop
pop
ins
jo
test
fbstp
cwde
jg
xchg
mov
jp
fwait
sub
lea
movs
adc
dec
retf
dec
(bad)
addr16
fadd
cmp
leave
mov
and
inc
mov
mov
mov
arpl
out
cmp
add
fs
repz
pop
mov
mov
dec
mov
jg
mov
addr16
and
(bad)
jecxz
or
adc
stc
xchg
sbb
adc
icebp
jge
aam
sbb
jae
fwait
sbb
dec
nop
out
cmps
inc
fisub
and
sbb
jns
(bad)
mov
test
cmp
mov
rol
inc
push
retf
mov
lods
mov
bound
cmp
pusha
pop
inc
ret
mov
push
sub
imul
add
out
xchg
imul
es
aaa
jb
(bad)
push
add
sbb
push
js
int3
cmp
xor
retf
mov
pusha
cld
sahf
push
imul
sub
adc
es
gs
(bad)
push
inc
(bad)
mov
(bad)
mov
stos
jl
(bad)
sub
push
fcom
mov
xor
push
pop
cmp
test
push
jno
push
push
ins
in
push
push
push
jle
push
jns
dec
(bad)
sbb
leave
inc
fstp
jp
inc
jo
adc
add
sub
pop
int3
cmps
mov
dec
fs
push
outs
xlat
stc
clc
adc
repnz
xchg
push
cmp
mov
daa
(bad)
push
sbb
jns
push
in
hlt
test
push
pop
adc
pop
sub
fld
sub
and
call
mov
xchg
dec
inc
(bad)
out
stos
mov
mul
push
xor
mov
xchg
aas
jbe
dec
(bad)
jle
ret
and
test
(bad)
dec
in
jmp
or
cwde
outs
mov
inc
mov
lds
es
fimul
add
mov
mov
or
cmp
push
cmp
mov
pop
je
int3
inc
and
inc
or
imul
and
scas
mov
mov
ss
pop
mov
push
mov
sub
nop
xor
add
(bad)
jmp
jo
shl
hlt
add
popa
div
cdq
dec
mov
aaa
int3
inc
xchg
test
pop
pop
push
cmps
in
outs
or
in
stos
les
pop
inc
mov
ins
or
int
sbb
addr16
ss
push
cs
push
js
or
mov
mov
and
in
cli
pop
das
push
push
mov
aas
cmp
mov
stos
outs
out
inc
mov
inc
and
pop
jb
mov
add
aas
push
adc
inc
xchg
loopne
(bad)
fld
xor
ds
xchg
jae
adc
test
fild
pop
push
out
inc
test
pop
adc
add
pop
mov
xlat
sub
mov
cmps
aam
addr16
(bad)
jmp
pop
push
mov
sub
push
inc
iret
adc
mov
pusha
sbb
ja
pop
pop
je
sub
mov
xchg
ins
aaa
test
pop
fwait
mov
mov
mov
shl
pop
ins
jne
dec
cmc
arpl
sbb
adc
jmp
sahf
add
pop
push
es
in
call
or
fdiv
scas
test
shr
retf
cmp
dec
or
out
lds
loopne
mov
pop
outs
int
add
mov
sbb
xlat
push
cmc
jle
fwait
mov
dec
mov
icebp
div
pop
mov
pop
dec
test
adc
fs
psadbw
movs
or
fucomi
mov
sub
and
sbb
mov
cmp
outs
or
loope
or
leave
ret
mov
and
ins
in
or
in
push
(bad)
xlat
fisub
and
jmp
test
jo
stc
adc
push
in
aad
jns
lods
call
hlt
mov
aam
mov
test
aad
xor
jno
mov
popf
mov
in
xor
adc
jae
dec
fnstenv
cmp
mov
xor
pop
mov
shr
pop
ins
in
fld
pop
test
mov
dec
sbb
inc
adc
icebp
lea
pushf
lock
hlt
adc
push
mov
add
mov
and
push
jp
xchg
ins
xchg
mov
sub
popa
in
fist
jno
xor
dec
and
shr
pop
push
cmps
add
jge
movs
sub
mov
inc
jne
inc
adc
push
inc
fldenv
dec
ret
fst
cdq
sub
call
inc
popa
xchg
cmps
cmp
jg
shl
js
jp
xor
jne
(bad)
jmp
in
popf
in
cmp
(bad)
icebp
test
dec
lods
sti
sub
ror
push
and
jo
pusha
or
(bad)
lods
repz
mov
xchg
ret
aad
mov
xlat
push
nop
fwait
mov
ret
js
cmc
ds
inc
lahf
jl
xor
xor
jb
fnstsw
fs
mov
rcl
xchg
mov
test
dec
pusha
cmp
cmp
push
lods
je
cmps
inc
sbb
aam
les
pop
inc
sbb
and
push
adc
test
jle
inc
stc
cdq
adc
jge
inc
or
jb
test
and
daa
xchg
jne
push
shl
push
enter
pop
das
dec
xchg
jo
sub
mov
fs
mov
popa
cmp
cmps
stos
jb
sbb
fcmovnbe
pop
push
xor
ins
mov
dec
out
inc
(bad)
(bad)
stc
cmp
sbb
test
fdivr
mov
xor
adc
push
push
inc
(bad)
xor
jno
jmp
cwde
xlat
cmps
jge
(bad)
enter
sub
clc
vunpckhps
out
(bad)
cmc
jne
popa
inc
jbe
retf
sar
sub
mov
and
daa
sar
cmp
sti
mov
cld
loope
les
mov
call
or
lock
pop
(bad)
push
aam
popa
fwait
aas
mov
mov
(bad)
push
mov
xchg
add
cmp
or
psllw
pop
(bad)
cdq
shl
push
jl
sub
leave
sti
jae
adc
cmp
outs
stos
push
and
and
(bad)
imul
(bad)
fcmovb
push
out
cli
adc
idiv
adc
and
dec
in
jno
or
xor
hlt
(bad)
and
inc
inc
cmp
inc
rcl
icebp
adc
out
ins
imul
cli
aas
sub
shl
mov
jo
std
in
js
sbb
rol
psllw
dec
das
fcomip
retf
pop
and
mov
mov
lock
mov
push
jl
lahf
or
sub
cmp
mov
and
mov
outs
jmp
retf
imul
jmp
aaa
mov
pusha
mov
and
mov
ja
xchg
mov
data16
outs
push
jns
mov
jbe
adc
push
sub
stos
cmp
test
(bad)
sahf
xchg
adc
sub
sbb
fidivr
popa
xchg
scas
pop
push
std
std
pop
jbe
pop
adc
lea
popf
adc
sub
inc
inc
xor
mov
add
cmp
pop
stos
pop
pop
scas
repnz
xchg
fcomp
fst
sub
mov
cld
(bad)
jmp
retf
adc
push
je
in
fisub
sbb
xor
xor
inc
dec
(bad)
xor
test
jno
pop
jnp
(bad)
push
mov
loope
adc
adc
sti
or
jmp
(bad)
enter
push
jmp
jno
or
imul
jb
dec
sub
xor
mov
call
and
mov
(bad)
test
int3
add
lahf
addr16
shl
mov
mov
cmp
sub
dec
jmp
dec
mov
push
or
fcomi
pusha
(bad)
pusha
fsub
push
cmp
pop
and
pop
sti
outs
mov
xor
dec
push
imul
repnz
mov
jbe
pop
mov
push
popa
mov
sbb
xor
sbb
push
fldenv
sbb
cmovae
dec
mov
test
sub
int
cli
pop
pop
rcr
cmps
imul
sbb
jbe
mov
push
repnz
or
call
xor
addr16
jnp
cld
xor
adc
mov
mov
not
(bad)
movs
div
lods
cs
inc
rcl
add
loope
rol
aam
cmp
inc
adc
inc
sbb
dec
inc
inc
movs
out
push
mov
jns
add
sahf
mul
lahf
add
scas
mov
addr16
push
pop
mov
test
test
jecxz
fisttp
pop
or
out
xor
mov
movs
fidiv
adc
sub
out
ret
js
and
add
ret
sahf
dec
mov
daa
icebp
cmp
sbb
int3
and
lods
lods
jp
sub
cmp
mov
jns
add
dec
dec
outs
movs
cmp
addr16
test
popf
stc
pop
mov
jg
cld
fstp
mov
add
mov
lods
shl
pushf
xor
out
sub
(bad)
popa
fldcw
jb
xor
adc
or
lea
adc
jno
fist
(bad)
icebp
or
add
arpl
popf
mov
test
(bad)
test
out
inc
push
mov
aaa
aaa
call
mov
and
leave
fwait
xor
leave
mov
rol
pop
add
jg
adc
pop
gs
mov
mov
mov
arpl
aaa
cmp
sar
adc
and
sbb
add
sar
out
movs
into
call
cmps
mov
cmps
(bad)
jg
and
jle
xchg
nop
in
adc
stos
inc
push
xchg
repz
cmp
push
std
test
(bad)
push
jnp
cmp
icebp
mov
dec
ret
test
xchg
inc
push
jnp
and
xor
cmp
cli
aas
adc
outs
retf
in
std
adc
mov
das
hlt
cmp
xchg
aam
sbb
adc
mov
mov
or
sbb
dec
sti
mov
and
push
jae
inc
pop
pop
jno
add
sub
test
(bad)
ds
fwait
mov
add
sbb
push
push
dec
cvtps2pd
mov
pop
push
iret
mov
add
data16
test
push
aam
aam
xchg
or
push
(bad)
repz
sub
jbe
mov
jp
and
or
lds
mov
imul
mov
lea
lahf
into
fmul
dec
jno
pop
cdq
pop
jp
rol
push
in
pop
pop
sahf
icebp
test
leave
into
dec
test
out
jnp
xchg
in
scas
sbb
adc
out
add
ret
cmp
inc
or
sahf
xchg
outs
stos
sbb
movs
pusha
cld
sbb
es
les
push
jns
xor
daa
pop
and
mov
ds
aad
cmp
cs
jbe
jae
ss
mov
mov
ja
jno
push
add
popa
and
sub
pushf
fiadd
xchg
fimul
pop
push
test
cdq
jb
and
sbb
adc
cmp
adc
mov
add
movs
outs
fwait
arpl
cmp
ficomp
(bad)
fadd
pop
dec
jg
push
and
mov
jp
test
inc
aaa
sub
mov
sahf
mov
cmp
cmp
xlat
es
push
or
test
ret
sbb
jmp
mov
and
lds
sbb
mov
pop
call
out
cli
out
dec
and
loop
add
ret
call
mov
and
outs
out
out
test
jne
or
mov
in
cmp
stos
mov
jae
sbb
and
hlt
imul
fs
push
movs
sub
test
xor
jns
adc
cwde
pop
out
jmp
cwde
rol
push
loop
test
pop
inc
add
adc
fdivr
ins
in
lock
lock
aas
push
outs
ja
pushf
dec
leave
call
cmp
test
xchg
js
adc
xor
xlat
mov
pop
mov
outs
arpl
js
pop
(bad)
xchg
rcl
aaa
push
test
rol
aaa
inc
jbe
ret
add
popa
or
xor
test
pusha
cs
daa
xchg
in
ins
idiv
sbb
ret
pop
pop
cmp
icebp
mov
xchg
aad
inc
cmp
int
inc
xor
int
sbb
mov
cld
mov
fisttp
or
xor
imul
sbb
xchg
pop
dec
loop
pop
cdq
out
pop
cmp
push
cld
push
mov
cmps
xchg
mov
mov
pop
cs
or
sub
int3
(bad)
loop
ins
dec
popa
pop
jg
cmp
pop
and
xor
test
fiadd
sub
cmp
xchg
mov
sub
adc
fldcw
jbe
dec
pop
lods
and
pop
nop
into
jmp
je
lea
aas
call
mov
push
sar
(bad)
xchg
cmp
test
adc
cli
jno
sbb
cmp
mov
mov
cmps
aaa
jno
jno
sbb
add
int3
adc
movs
jmp
add
sub
ja
ret
dec
jmp
xchg
jnp
mov
xchg
or
sti
pop
fadd
jns
retf
fwait
xor
in
aaa
and
inc
cwde
lods
das
data16
push
and
mov
daa
add
xchg
mov
aaa
(bad)
cmps
and
push
div
xor
imul
in
les
and
push
mov
pushf
and
adc
bnd
jbe
fistp
(bad)
fwait
jmp
sub
pop
xor
call
mov
pop
mov
cmps
fwait
out
xchg
imul
mov
stos
xchg
push
pop
cs
idiv
xor
test
inc
mov
xchg
jp
out
mov
push
xor
cmc
dec
pop
jnp
mov
dec
cli
fcom
xor
pop
cs
cmc
push
dec
aaa
nop
pop
inc
sbb
or
jg
clc
out
clc
shr
push
arpl
pop
call
adc
mov
iret
sub
push
out
dec
or
mov
sbb
mov
xor
inc
js
mov
call
jne
xchg
xchg
or
rcr
add
lock
jae
cmps
mov
adc
test
or
mov
pop
repnz
and
or
or
adc
sub
lods
xchg
xchg
xor
sar
sbb
cli
call
sub
inc
mov
sti
mov
push
mov
mov
jecxz
cwde
loopne
and
ds
push
gs
cwde
mov
jmp
shl
xchg
adc
mov
cmp
mov
add
xor
pop
push
mov
push
xor
pushf
mov
sti
push
add
jnp
lea
jo
lahf
adc
xor
push
cs
ret
imul
xchg
and
fadd
mov
adc
stos
mov
mov
jb
mov
xchg
aam
and
adc
cdq
cmp
push
and
enter
adc
jb
jg
shl
cdq
or
xor
cs
mov
pop
stos
cs
jmp
in
add
mov
(bad)
imul
icebp
or
lahf
shl
lahf
jge
loopne
mov
adc
or
fwait
aam
ds
jmp
jo
dec
mov
arpl
mov
xchg
pop
cmp
xor
sahf
xchg
xchg
mov
mov
lods
aaa
cmc
imul
sbb
sbb
or
jo
add
cmp
sbb
xchg
adc
sbb
jno
sti
clc
mov
push
sub
jbe
dec
adc
inc
sub
test
cdq
shl
ss
and
(bad)
inc
rol
xor
ffreep
enter
test
shl
add
popa
mov
imul
mov
ror
aad
test
pop
popf
mov
jns
jp
lods
rol
xor
or
cmp
inc
sar
jp
mov
pop
mov
das
cmp
push
test
push
mov
cdq
lds
pop
jecxz
mov
and
mov
in
mov
xchg
movs
sti
xor
pop
sbb
jbe
pop
das
out
xor
mov
fs
and
cmp
dec
cmc
dec
stos
(bad)
ins
(bad)
xor
mov
add
dec
stc
xchg
cmp
mov
xor
mov
and
sub
mov
adc
push
lock
stos
mov
lock
or
sub
sahf
sar
inc
mov
inc
xchg
pop
popf
jg
mov
jl
ins
dec
aaa
pushf
sahf
cmp
(bad)
popf
push
lea
pop
and
mov
pop
mov
(bad)
fldcw
pop
loop
cli
adc
xchg
(bad)
jb
mov
ror
ins
sbb
movs
aaa
push
adc
jle
mov
pop
lea
add
jb
inc
xor
jno
pop
jl
pop
ret
in
sbb
adc
add
test
mov
daa
mov
aas
sub
and
add
(bad)
cdq
call
out
into
(bad)
lock
xor
sbb
add
sub
inc
out
and
adc
stc
aad
sbb
(bad)
std
retf
jae
dec
pop
add
cmp
pop
mov
add
cmp
add
mov
sbb
adc
mov
int3
dec
jo
imul
push
mov
ja
test
addr16
adc
sar
scas
inc
sbb
jle
popf
(bad)
xor
stos
xor
cmp
retf
fcomp
cdq
movs
xchg
xlat
stc
jg
mov
hlt
rcr
xor
ins
iret
repnz
xor
jo
dec
iret
addr16
pop
mov
sbb
bswap
lahf
mov
pop
js
add
jmp
dec
mov
hlt
inc
cmc
daa
ds
jb
jg
test
adc
xor
ficom
inc
in
stc
and
cmc
push
mov
pushf
sub
mov
in
call
scas
js
cmps
outs
out
pop
pop
(bad)
sub
jo
loope
xchg
xchg
in
pop
jp
sub
in
mov
(bad)
fs
push
add
(bad)
push
inc
push
mov
outs
(bad)
ins
add
pusha
or
sub
jmp
sbb
inc
add
idiv
or
scas
hlt
lea
dec
mov
icebp
scas
fidivr
mov
sub
mov
xchg
fcom
sub
push
or
push
popa
fist
xchg
cmp
inc
(bad)
in
pusha
jnp
mov
ja
js
mov
dec
scas
inc
fwait
sbb
not
push
je
(bad)
pop
in
pop
outs
cwde
stos
pop
mov
cdq
test
inc
imul
(bad)
xchg
sub
inc
aam
add
push
dec
std
sahf
not
xchg
pop
or
push
std
mov
rol
shl
or
xor
(bad)
fistp
or
push
jmp
fimul
sbb
dec
dec
mov
xor
in
ss
pop
jge
popf
sbb
push
xchg
lods
push
in
dec
pop
cdq
inc
stos
jne
ror
jb
inc
fldcw
ins
jge
and
loopne
jns
out
mov
xchg
jmp
ins
xchg
arpl
mov
dec
cdq
add
int3
jp
jge
jo
jl
loopne
adc
adc
lods
jns
rcr
enter
jns
sub
mov
cmp
nop
fdivr
gs
jmp
mov
cwde
pop
(bad)
(bad)
hlt
pop
jmp
loope
mov
jle
hlt
push
mov
push
and
xchg
jg
fwait
jmp
mov
rcr
sub
nop
sahf
xlat
dec
daa
dec
(bad)
ret
sub
mov
push
daa
mov
lods
fwait
scas
mov
movs
outs
cwde
js
imul
fcomip
xor
iret
sub
mov
(bad)
enter
mov
jnp
jmp
pop
nop
fwait
and
add
dec
xor
jl
fist
sub
mov
es
mov
fiadd
icebp
push
jmp
pop
ss
in
mov
lds
pop
jle
clc
pop
xchg
push
or
push
jl
pop
jle
cmps
jns
aam
repnz
cmps
stos
clc
mov
(bad)
xchg
cmp
in
xlat
popa
add
scas
sub
addr16
mov
add
push
aas
adc
jg
popf
inc
cmp
repnz
dec
jo
pop
xor
clc
xchg
bound
sar
jb
push
aam
sub
test
int3
sahf
mov
loopne
mov
fild
jl
mov
add
sbb
(bad)
push
mov
push
push
mov
xor
push
movs
or
retf
or
push
ss
stos
fisub
retf
mov
out
cli
sbb
pop
push
stos
fcomp
fst
arpl
pop
mov
sahf
shl
sahf
stos
lock
cmp
retf
js
into
bound
push
and
cwde
push
dec
push
aaa
xchg
ja
pop
jno
push
out
cli
push
adc
ss
sbb
aas
in
sub
clc
dec
adc
inc
mov
cmp
loop
movs
ja
mov
mov
scas
and
mov
aam
mov
clc
stos
pop
or
sahf
jns
sbb
push
jmp
mov
cmp
jns
pop
xlat
adc
loopne
push
into
push
jecxz
push
dec
xchg
repz
xor
inc
mov
out
js
and
test
pop
cwde
xchg
jb
je
test
cli
and
mov
jbe
mov
xchg
div
inc
jmp
push
and
aaa
and
arpl
shr
dec
lock
jge
aaa
pop
adc
call
cmp
xchg
mov
imul
in
sahf
pop
xor
sbb
and
call
jnp
sub
pop
imul
clc
add
xchg
adc
popf
in
mov
jmp
fild
adc
dec
dec
jae
or
loope
jl
pop
(bad)
push
outs
mov
stos
retf
mov
add
sbb
ins
jg
scas
inc
mov
pop
(bad)
sti
push
ins
push
sub
and
(bad)
add
shl
cmps
(bad)
cmc
movs
aaa
fsubr
add
mov
sti
(bad)
fwait
sub
add
scas
(bad)
xchg
dec
ds
imul
sbb
out
mov
popf
mov
sti
mov
imul
jmp
les
bound
jo
pop
inc
cmps
mov
aas
lods
sar
cmp
shl
repz
xchg
sbb
cmps
jb
(bad)
stc
xchg
xlat
imul
cmp
aad
sysexit
sbb
adc
loope
xor
mov
xchg
ficomp
add
ret
sub
shl
call
mov
xchg
enter
or
inc
jl
das
ins
mov
xor
aas
aas
or
xchg
inc
fwait
inc
sub
push
nop
das
and
icebp
not
fistp
sti
xor
outs
loop
(bad)
mov
aam
push
or
adc
dec
xchg
mov
and
mov
dec
sub
sub
sub
sbb
and
in
fidiv
sbb
xchg
sub
out
adc
ds
sahf
mov
xchg
mov
mov
xor
and
and
in
repnz
enter
jmp
jl
js
fsub
fisub
add
cmc
stos
mov
leave
cmp
enter
adc
ret
dec
in
fst
in
xor
es
push
jbe
loope
repz
ffreep
rcl
call
fsubr
add
xor
inc
outs
mov
push
lock
or
dec
add
or
ss
xchg
pop
inc
or
aaa
lds
arpl
push
sub
jp
inc
jo
in
jp
scas
jg
pushf
jbe
fisttp
jecxz
(bad)
jb
and
mov
mov
ret
dec
(bad)
lahf
adc
into
gs
cmc
xchg
stc
pop
icebp
scas
fmul
lods
cs
and
popa
iret
lds
mov
cmp
pop
pop
xor
jmp
leave
push
adc
mov
cmp
and
loop
push
mov
xchg
xchg
or
lods
pop
fsubr
inc
xchg
scas
in
xor
movs
mov
aaa
xchg
ds
aad
mov
push
push
loop
xor
hlt
mov
inc
or
(bad)
rcr
in
inc
jb
aad
retf
stos
mov
nop
xchg
lds
aam
fwait
in
rcr
xchg
mov
xor
push
daa
xor
out
mov
push
icebp
mov
sbb
xchg
jecxz
jge
pusha
movs
icebp
data16
mov
push
dec
sar
cmc
push
in
fs
mov
jmp
daa
aas
jmp
jecxz
or
sub
add
jmp
jecxz
push
mov
test
mov
pop
sbb
pop
ins
lahf
dec
xchg
enter
pop
icebp
add
ds
daa
jl
sub
jle
pop
pop
mov
in
(bad)
push
mov
or
jmp
push
fnstsw
lds
inc
fwait
cdq
mov
cmp
mov
jns
cmp
pop
in
sub
ds
push
pop
into
fnsave
pop
jl
(bad)
pushf
or
fstp
adc
add
shl
aad
fstp
out
fwait
xchg
or
sti
pop
ret
outs
push
mov
pop
push
rol
sbb
ret
jp
je
jl
fdiv
arpl
adc
imul
push
mov
xchg
and
jb
adc
shl
adc
scas
dec
dec
(bad)
std
dec
cs
ror
cwde
dec
xor
movs
nop
daa
push
cmps
jge
sub
mov
pop
xchg
dec
iret
mov
pop
loope
inc
or
inc
add
les
test
inc
sbb
mov
call
or
jmp
jmp
(bad)
ror
inc
lea
sub
ss
loope
pop
out
sub
sbb
xchg
push
pop
jecxz
int3
stos
inc
fist
xchg
inc
cmps
cvttps2pi
pop
out
or
pop
mov
mov
inc
or
imul
es
cwde
jnp
call
sbb
addr16
push
jns
and
push
fs
ins
jg
pop
cmps
fadd
and
in
sbb
xchg
hlt
or
jo
sbb
ret
lods
sub
cs
enter
(bad)
dec
push
inc
repz
sbb
mov
pop
mov
rcl
ja
mov
jp
pop
imul
(bad)
setl
dec
sbb
jns
xor
out
fcomip
ins
iret
(bad)
std
and
hlt
(bad)
int
rcr
mov
dec
add
iret
and
cmp
movs
aad
cmps
fisttp
mov
mov
aam
psllq
mov
loopne
sub
or
ins
cli
sbb
sub
stc
jl
movs
cmp
sbb
dec
dec
mov
jb
pusha
mov
loopne
jecxz
fisub
call
jg
mov
or
pop
movs
dec
xchg
rep
push
aaa
loop
ss
jle
in
push
(bad)
mov
popf
xchg
mov
(bad)
mov
cmp
xchg
sub
ss
scas
inc
push
xchg
xor
mov
mov
push
call
data16
xor
fld
inc
daa
cmp
aaa
dec
mov
enter
inc
outs
cmps
jmp
jb
push
call
mov
mov
push
cmp
dec
std
fs
scas
or
gs
inc
cmps
arpl
xor
and
sti
cdq
ss
int
sar
cmc
popa
js
or
push
push
adc
rcr
imul
(bad)
mov
push
imul
fcom
push
lds
mov
rcl
jo
mov
dec
lea
adc
inc
adc
xchg
jae
xor
stos
shl
lods
cmps
imul
xchg
sub
and
ror
and
mov
inc
out
(bad)
scas
in
mov
cmps
push
inc
or
push
xor
adc
sbb
pop
fmul
js
sbb
into
xchg
cdq
xlat
sbb
xchg
pop
leave
mov
mov
cmp
and
sub
pop
aam
add
mov
cli
fs
fs
retf
out
popf
fwait
sbb
imul
dec
int3
in
or
dec
or
xchg
loopne
sbb
xchg
(bad)
dec
not
icebp
outs
idiv
imul
hlt
dec
(bad)
lea
call
fs
nop
mov
ja
shl
and
push
push
cmps
scas
inc
mov
jge
mov
inc
imul
sbb
mul
nop
pop
pop
or
cmp
mov
jg
loopne
inc
loopne
cmp
mov
test
cmp
sbb
fadd
or
ret
inc
adc
(bad)
adc
cwde
shr
pop
(bad)
mov
push
and
hlt
cmp
xor
push
into
mov
pop
sti
cwde
shl
jmp
pop
cmp
jns
adc
mov
mov
(bad)
dec
pushf
rcr
in
shl
out
push
gs
into
sub
std
mov
ror
mov
outs
fwait
repz
jg
arpl
xchg
(bad)
pop
scas
inc
jb
mov
xor
and
jnp
push
in
sahf
mov
inc
mov
popa
or
fwait
xchg
pop
mov
aaa
movs
inc
inc
mov
(bad)
ins
sub
ins
stos
inc
shl
fwait
dec
test
adc
cmp
or
adc
stos
cmp
mov
sub
cmc
into
je
ja
adc
dec
out
inc
push
mov
enter
gs
mov
(bad)
rcl
jge
mov
out
fdivrp
(bad)
shr
std
sti
pusha
sub
sbb
or
sti
cmp
movs
cli
outs
sbb
push
in
lods
dec
dec
out
int
and
mov
add
outs
ss
outs
emms
aam
lahf
jmp
dec
outs
outs
ins
dec
jle
aaa
jle
mov
cld
push
cmp
xchg
call
ror
xchg
sbb
cmp
or
sub
adc
imul
push
pop
add
dec
cld
push
fcom
sub
rcr
icebp
ror
js
xor
jo
cdq
pop
jl
cdq
leave
mov
lods
sub
adc
rcl
ins
lods
movs
icebp
lea
scas
cvtps2pi
outs
shl
addr16
inc
(bad)
cmp
sbb
lds
push
outs
repz
adc
pusha
or
inc
or
mov
jmp
pop
ret
adc
cdq
pushf
js
out
xchg
rol
jle
or
cmp
xor
call
xchg
and
sbb
fsubrp
push
imul
xor
sub
daa
cmp
mov
push
jae
dec
or
pop
fcmovnu
push
jb
cmp
cmp
push
imul
scas
pusha
inc
pushf
or
jnp
adc
(bad)
mov
sti
js
ror
sub
test
sbb
(bad)
sub
adc
outs
pop
jecxz
sub
stos
pusha
xchg
jmp
lods
(bad)
ins
xor
clc
(bad)
scas
cmc
xor
sbb
or
das
aaa
sbb
xlat
or
pusha
sbb
mov
xchg
sub
fdiv
in
inc
mov
pop
inc
aad
sar
lds
push
fwait
ror
scas
pushf
adc
sub
inc
fidivr
xchg
(bad)
retf
xchg
push
jno
mov
mov
mov
jno
test
jg
jp
jg
cli
pop
popf
loope
push
(bad)
int3
xchg
jp
mov
imul
sahf
xchg
stos
lods
je
mov
lahf
ss
mov
adc
test
push
call
test
and
das
xchg
or
jnp
cmp
das
push
sbb
out
scas
scas
mov
repz
sub
jbe
push
push
fidivr
imul
sub
xor
jp
cmp
xor
sbb
fld
pop
fsubr
push
xor
leave
imul
ss
aaa
mov
popf
and
or
test
(bad)
inc
mov
sbb
xchg
pop
cmp
or
xchg
cwde
movs
inc
sub
jmp
enter
and
call
loopne
pop
rcl
ror
or
and
mov
aas
xor
out
pop
jae
pop
out
(bad)
daa
imul
jnp
inc
(bad)
dec
adc
mov
push
xor
mov
dec
enter
jae
jae
xor
push
clc
mov
sub
out
pop
xchg
cmp
mov
add
(bad)
mov
and
div
fisttp
test
popf
aaa
mov
fnstenv
xor
jo
sahf
(bad)
jmp
fsubp
call
jno
push
fs
rcr
rol
out
mov
adc
movs
lods
arpl
dec
or
jae
enter
hlt
sub
mov
inc
dec
jecxz
mov
xlat
pop
mov
inc
mov
and
lahf
xor
sbb
stos
jmp
fwait
jp
cli
xchg
into
stc
aam
out
adc
out
jge
jne
mov
outs
sti
push
inc
out
adc
mov
daa
mov
call
fdivp
sub
dec
sar
fnsave
mov
ja
xor
jl
int
cmps
or
in
add
(bad)
rcr
adc
addr16
jbe
or
mov
jle
jns
inc
jbe
dec
and
jge
out
imul
pusha
mov
data16
xchg
jnp
xchg
dec
mov
sub
add
jae
jmp
xchg
cmp
fcmove
nop
mov
stc
xor
sbb
xchg
ud1
push
icebp
adc
gs
cli
pop
(bad)
cwde
sbb
sub
xor
adc
inc
int3
push
jb
xor
mov
sbb
pop
shr
outs
push
into
mov
mov
and
adc
(bad)
scas
int
icebp
arpl
xchg
shr
in
mov
pop
adc
out
cmp
add
fld
mov
inc
pusha
add
jne
imul
test
mov
cwde
adc
dec
sbb
adc
mov
aad
retf
cli
push
xchg
jmp
jns
ss
scas
add
dec
ins
xor
mov
lock
jmp
in
mov
retf
stos
xchg
add
push
mov
enter
push
popf
dec
sahf
mov
sbb
pop
lea
inc
ret
mov
dec
retf
xchg
repz
enter
or
mov
push
dec
or
fisttp
out
(bad)
jnp
hlt
inc
pop
lock
fmul
push
sbb
data16
cmp
(bad)
push
dec
cmp
inc
sub
dec
mov
jecxz
stos
out
(bad)
xor
jbe
xchg
pop
push
or
sub
outs
lock
pop
cwde
stos
shl
js
cdq
lds
add
in
xchg
mov
jae
pop
retf
ror
bnd
sub
jno
mov
dec
out
adc
int3
in
mov
adc
arpl
ja
cdq
in
jle
or
cmp
shl
je
inc
lods
pop
or
into
push
or
or
jb
dec
cmp
loope
fidiv
adc
gs
stos
and
ror
push
sbb
cmp
imul
xor
adc
push
pop
ror
and
sub
ror
adc
dec
enter
jl
scas
inc
movs
xor
add
xchg
dec
push
pop
or
mov
std
jne
lds
retf
aam
fimul
xor
fldcw
or
dec
sub
push
push
mov
loop
(bad)
pusha
or
iret
ins
and
das
jmp
repnz
repz
add
jle
pop
bnd
mov
rcl
or
push
into
ret
lock
xchg
jns
xor
mov
das
movs
pusha
jmp
dec
out
cwde
jno
adc
xchg
mov
enter
and
add
les
mov
clc
push
cli
ret
mov
fstp
adc
out
or
arpl
mov
jp
nop
jge
sbb
xchg
add
mov
and
shl
pushf
sar
std
pop
add
pop
ss
aaa
xchg
cmps
xchg
mov
cmp
daa
jg
mov
fucom
mov
mov
push
xchg
imul
shr
retf
aas
push
cmp
popf
fild
fadd
das
je
xchg
outs
xlat
pop
push
(bad)
fcomp
jle
mov
inc
leave
sbb
sub
sbb
je
jle
shr
push
sbb
cmp
sub
fimul
mov
pushf
cmps
xchg
rol
dec
cmp
into
mov
and
out
adc
sahf
je
rcr
outs
mov
push
fdivr
cmp
adc
outs
stos
lods
mov
xchg
jle
and
sar
push
jae
add
in
cmps
xchg
push
mov
push
xor
jns
cmps
sahf
xchg
std
pop
mov
adc
in
dec
shl
cmps
sub
mov
test
aas
pop
daa
jbe
mov
dec
push
aas
fsin
mov
xchg
into
loopne
adc
pop
out
jmp
xchg
clc
ret
mov
fisubr
imul
retf
imul
xchg
sub
fsubr
mov
dec
sub
inc
je
enter
xor
xchg
fwait
jecxz
push
adc
pop
adc
pop
fistp
mov
lods
jmp
scas
xchg
call
pop
ins
adc
xor
je
retf
fisubr
inc
mov
je
mov
out
aas
sbb
push
cmps
mov
dec
dec
mov
mov
leave
(bad)
xlat
sub
sub
jo
cmp
mov
push
cmc
add
rol
cmp
popa
fs
mov
lea
repnz
mov
mov
cs
test
movs
xchg
ret
(bad)
mov
cmps
out
mov
mov
jecxz
sub
leave
pop
push
sub
push
push
xchg
daa
stc
mul
movd
rcr
add
ficom
imul
shl
push
xchg
jnp
cmps
not
dec
pop
das
out
mov
fstp
xor
or
and
add
fisttp
sbb
or
inc
fcom
(bad)
cmp
xchg
add
fld
xlat
mov
ins
mov
call
imul
shr
cs
xor
cmc
pop
in
pusha
push
scas
(bad)
and
fild
xchg
jno
push
retf
mov
jge
cmp
mov
call
jecxz
pop
leave
fcmove
test
sahf
lods
mov
xchg
cs
stc
pop
xchg
cmps
mov
dec
pop
scas
push
(bad)
mov
push
cmp
mov
add
jge
hlt
arpl
cmp
outs
fstp
sbb
sbb
inc
or
mov
add
cmp
adc
adc
test
fsub
xor
add
inc
dec
jg
dec
jecxz
std
add
mov
cdq
mov
pop
adc
mov
cmp
retf
lods
loop
(bad)
enter
mov
cmp
cmc
jo
(bad)
std
pop
lods
cmp
xchg
(bad)
into
xor
out
mov
xchg
mov
pop
es
xchg
xchg
ret
jle
loop
mov
jo
pop
pusha
push
mov
inc
cmp
mov
push
into
xlat
dec
push
fist
add
gs
cs
inc
movs
stos
cmps
(bad)
sar
mov
fidiv
lock
js
pop
mov
dec
push
add
inc
(bad)
pop
int3
bound
loop
mov
mov
jl
(bad)
ficom
sub
inc
out
loop
push
cmp
fstp
mov
sbb
rol
repnz
loopne
xor
or
lea
pop
mov
cmp
mov
jne
dec
dec
addr16
pop
int3
test
mov
js
add
jl
(bad)
jg
sbb
imul
movs
inc
inc
jge
jo
(bad)
pop
and
out
adc
dec
popa
inc
mov
mov
pusha
into
jmp
push
sub
push
inc
sti
jbe
dec
(bad)
(bad)
and
mov
stos
push
sar
lock
jo
xchg
retf
dec
pop
inc
push
ret
dec
or
or
push
adc
or
lods
cmp
cmc
add
inc
in
sti
adc
mov
dec
or
mov
shl
movs
call
dec
or
rcl
test
into
sub
pop
cmp
push
ins
adc
shl
mov
call
push
jmp
sub
xchg
fidivr
jae
shl
adc
sub
adc
add
mov
sbb
pop
xchg
cmp
lods
(bad)
jmp
sar
mov
cli
xlat
sbb
retf
cmp
cmps
push
mov
xor
sbb
stc
ins
repz
rcl
fdivp
add
cwde
and
(bad)
adc
pop
retf
cdq
fldenv
add
movs
jle
iret
and
inc
dec
pop
shl
sahf
jns
call
int3
sbb
sub
aas
mov
or
mov
jp
call
cwde
jmp
sbb
shl
pop
jns
lods
sub
lock
cwde
in
cmp
mov
cs
lahf
lods
out
push
es
lock
das
retf
push
mov
scas
dec
gs
jns
xor
push
inc
push
mov
pushf
cmp
(bad)
cmp
adc
mov
outs
push
xlat
xchg
test
icebp
xchg
rcr
in
push
jnp
cwde
cmp
shl
nop
pop
jle
add
test
scas
out
ret
sub
sbb
mov
jbe
pop
jne
dec
sbb
sub
sbb
gs
movs
mov
idiv
in
fsubr
repz
push
je
push
inc
push
cmp
dec
aaa
mov
inc
arpl
bound
jmp
data16
fcmovb
jmp
shr
inc
xor
mov
jle
jmp
rcr
loope
es
jno
jp
idiv
cmp
push
lahf
push
call
mov
pop
scas
or
cmp
bound
ret
dec
ja
xchg
shr
xchg
jecxz
(bad)
loopne
inc
retf
fsub
popa
and
movs
bound
out
push
adc
test
add
lods
pushf
inc
in
ins
nop
inc
(bad)
push
int3
data16
add
mov
lock
dec
lock
mov
retf
mov
push
in
je
lahf
and
mov
jo
out
ret
or
mov
mov
xlat
adc
mov
repnz
jnp
inc
dec
add
scas
clc
fisub
test
pop
(bad)
ficom
mov
(bad)
xchg
ds
jnp
test
into
jb
jmp
stc
dec
test
add
retf
sub
test
push
mov
mov
jae
xchg
push
stos
or
das
fisubr
push
xor
xchg
add
adc
inc
ror
xor
push
push
cwde
fcomp
mov
rcr
mov
jge
cmps
cmps
sub
dec
shl
fldenv
mov
ret
mov
ret
fdivrp
cmp
dec
adc
mov
mov
mov
gs
fbld
rol
imul
test
call
pop
test
call
popf
cmc
cdq
out
mov
fimul
(bad)
fdivr
dec
pop
ins
js
or
cli
(bad)
outs
push
inc
jp
es
stc
pop
cmps
cmps
cwde
and
and
mov
sahf
cmp
push
cli
stos
sub
xor
sbb
popa
mov
mov
dec
ret
push
pop
cmp
pop
lahf
push
int
xor
pop
out
push
sahf
nop
int3
jge
mov
xor
test
and
sub
push
xor
sub
xchg
ss
or
sub
inc
sbb
popf
or
or
dec
call
test
popf
call
sub
pop
add
or
mov
cmp
in
outs
cmp
cld
xchg
js
mov
fiadd
push
push
cmps
inc
xor
mov
add
inc
imul
jg
pop
iret
sub
cmp
arpl
mov
cmp
sbb
jno
xchg
ds
fs
jnp
sub
sub
push
call
sbb
add
mov
retf
xchg
and
mov
jns
adc
loopne
jmp
lods
jae
jmp
xchg
push
leave
mov
in
mov
sub
mov
jmp
leave
shl
cmp
inc
xchg
pop
vprotb
ins
iret
pop
inc
(bad)
xor
mov
shl
div
(bad)
popf
out
icebp
xchg
xchg
arpl
cmp
jbe
gs
ficom
push
call
sub
imul
aam
dec
ret
pop
ins
xchg
and
xchg
inc
sti
loopne
mov
push
fiadd
mov
or
pop
fs
add
dec
les
xchg
ret
out
popf
ret
inc
push
mov
ret
sar
dec
nop
sbb
rcl
sub
cmps
dec
stos
pop
ret
sub
and
mov
test
ja
hlt
cmp
jnp
lock
cs
shl
push
lods
out
add
lods
mov
and
(bad)
rcr
mov
or
aam
fld
sbb
mov
(bad)
and
mov
sub
cmp
leave
repz
jmp
jbe
push
sar
adc
jmp
cmp
nop
icebp
and
mov
pop
sbb
jle
fadd
xchg
cld
inc
push
es
pop
(bad)
xlat
ins
bound
or
xchg
xor
pop
retf
imul
ret
jl
aam
aaa
xchg
or
into
push
out
pop
mov
pop
loope
idiv
cmp
dec
iret
sti
rcl
cdq
les
mov
xor
cmc
ror
adc
add
inc
aas
sbb
xor
popa
jle
call
not
repz
call
mov
or
xor
lea
mov
jne
test
cmps
mov
push
cmps
sub
jno
ret
xchg
rcr
xor
cs
mov
mov
xchg
push
push
mov
sub
ret
cmc
in
mov
push
test
adc
leave
mov
ss
xor
ror
mul
fild
bound
shl
cli
push
add
push
in
fwait
sbb
push
xchg
add
pusha
das
lds
jecxz
add
(bad)
cmp
scas
xor
lock
sub
xchg
inc
inc
fwait
shl
das
mov
pop
mov
mov
jg
jmp
ins
icebp
xor
sbb
sub
imul
(bad)
fist
inc
jge
push
stos
inc
jbe
inc
jle
loopne
xor
adc
pop
popa
pop
add
xchg
je
in
outs
test
dec
xor
xchg
mov
ret
pushf
ret
mov
pop
jl
mov
push
and
enter
mov
lock
cs
daa
lods
jg
jbe
and
les
mov
fldenv
cmps
in
cmps
gs
pushf
mov
das
xchg
lahf
dec
mov
gs
mov
mov
or
test
int3
int3
inc
pop
sbb
rcl
fwait
in
dec
das
inc
and
cmps
pop
sub
sub
mov
daa
outs
repz
jmp
ds
xor
(bad)
in
push
pop
jp
dec
inc
fidiv
xchg
adc
daa
pop
pop
pop
mov
pop
imul
dec
sbb
fild
ror
in
call
fsub
movs
sub
test
das
pop
xchg
and
enter
cmp
push
push
data16
call
mov
cmp
push
inc
jns
test
sbb
jle
cli
int3
jecxz
cmp
sub
rcl
into
or
cmp
mov
mov
mov
push
loope
cmp
mov
rcr
lock
xlat
push
nop
cmps
dec
arpl
lods
ds
in
jbe
or
xchg
push
inc
int
fst
mov
jp
push
mov
leave
dec
popf
les
daa
and
out
dec
push
lods
xlat
push
icebp
xchg
sub
sub
xor
dec
mov
leave
enter
pop
mov
mov
cld
daa
or
psrld
push
ret
lds
or
cmp
adc
xor
mov
jne
dec
adc
xchg
pushf
inc
cdq
xor
test
mov
cmp
dec
and
sub
jle
lock
ins
nop
das
push
adc
jmp
pop
dec
sbb
push
loopne
inc
or
leave
sub
pop
out
or
ficomp
pop
pushf
neg
inc
push
push
pop
cmp
stos
inc
push
clc
rcr
je
jmp
movs
mov
test
sub
jmp
pop
sub
outs
les
mov
pop
or
jns
in
fadd
outs
and
enter
sbb
cld
push
arpl
inc
dec
clc
sub
xchg
mov
add
ret
test
jmp
sbb
into
dec
div
and
adc
out
adc
mov
sub
mov
movs
out
adc
fisub
pop
js
lods
movs
mov
sub
xor
jb
lahf
jne
das
sub
loope
(bad)
dec
pop
push
je
push
mov
lods
pop
clc
ss
(bad)
dec
in
das
ret
test
daa
jmp
retf
lods
lods
inc
arpl
stc
aaa
stos
leave
sub
add
add
lahf
mov
movs
ror
arpl
in
daa
retf
push
lahf
(bad)
pop
sbb
xor
push
mov
adc
mov
ss
popa
adc
sti
ss
jl
shr
mov
dec
das
jbe
xchg
or
repnz
retf
mov
cmp
scas
rcl
or
sti
push
out
push
mov
mov
inc
sbb
pop
ins
sti
clc
out
retf
pop
inc
leave
mov
mov
(bad)
cmp
xchg
(bad)
pop
enter
cmp
cmps
not
inc
cdq
neg
cmps
lods
xor
cmp
aaa
jge
sahf
aam
jnp
ficom
jmp
fbld
add
in
arpl
lds
cmps
inc
inc
mov
mov
retf
ret
mov
cmps
fcmovnu
or
ins
push
sahf
mov
xchg
jg
hlt
outs
cmp
or
in
out
(bad)
test
sbb
xchg
ds
cld
add
pop
out
lods
pop
pushf
fsubr
jne
mov
aad
fwait
mov
xor
mov
cdq
jge
test
data16
mov
push
clc
pop
dec
pushf
jg
gs
sub
pushf
out
popf
int3
add
je
imul
push
aam
sbb
xor
cmp
in
arpl
shr
mov
mov
add
fs
or
add
imul
push
push
push
outs
xchg
out
mov
dec
mov
(bad)
daa
test
jecxz
or
cmc
dec
imul
aam
hlt
xor
scas
mov
adc
xchg
pop
add
aaa
test
xchg
cmp
in
xchg
cmp
xlat
repz
pop
xor
pop
add
cmps
mov
fld
popf
fldcw
test
imul
and
mov
sub
popa
ret
out
shl
mov
add
jl
or
push
icebp
push
repz
cmp
inc
popf
pop
push
add
test
call
fmul
xchg
mov
jbe
cmp
add
les
mov
xlat
mov
mov
imul
mov
sti
jle
pop
push
adc
adc
mov
loopne
cld
fisubr
cmps
iret
fisttp
add
stos
pop
das
outs
and
jno
mov
sahf
(bad)
xor
push
pop
cmc
fs
shl
(bad)
cmp
pop
loop
movs
sti
xor
mov
stos
aad
(bad)
pop
and
(bad)
and
rcr
cmps
push
leave
inc
fcmovne
shl
push
int
or
or
mov
mov
mov
mov
ficom
icebp
pop
call
xor
pop
xchg
add
pop
mov
jmp
mov
ret
mov
ret
cmps
pop
jmp
(bad)
mov
popa
or
cwde
dec
(bad)
xchg
imul
(bad)
pop
mov
adc
test
addr16
sar
(bad)
repnz
das
scas
retf
repnz
fistp
fsubr
inc
xor
sub
gs
push
imul
sub
cli
shl
jmp
in
mov
movs
pop
test
into
xor
adc
cmp
add
mov
sbb
xchg
repz
or
(bad)
jmp
mov
fs
arpl
mov
mov
mov
mov
xchg
mov
mov
out
mov
mov
aam
sbb
aam
mov
(bad)
ins
and
or
retf
mov
dec
pop
or
sbb
pop
lock
jno
xchg
scas
hlt
das
nop
xor
adc
mov
sub
iret
pop
cdq
mov
cdq
dec
jg
mov
imul
scas
mov
mov
cwde
mul
test
mov
jb
mov
movs
or
and
pop
dec
hlt
push
xchg
mov
push
and
inc
adc
(bad)
pop
out
jl
jnp
imul
inc
mov
sbb
jns
cli
(bad)
fwait
dec
add
sub
dec
shl
xor
fs
cwde
fnclex
push
cmp
mov
jmp
xchg
add
xor
popf
inc
ret
xor
xor
pop
int
lea
repnz
xor
mov
ins
out
movs
mov
addr16
dec
int3
ss
fcom
sbb
add
ror
pop
dec
arpl
test
cmp
js
cmp
out
test
xchg
pop
mov
push
movs
cdq
and
fisttp
sbb
les
fisttp
mov
push
icebp
stc
dec
jnp
push
inc
inc
push
sbb
outs
mov
jne
in
repz
jle
ror
test
icebp
xchg
test
xor
add
leave
jl
das
pop
(bad)
leave
popa
cmc
repz
mov
call
push
sar
xchg
adc
push
es
into
(bad)
pop
inc
mov
ins
xchg
ficom
or
dec
fld
pop
test
pop
sahf
and
dec
in
inc
pusha
pusha
popf
scas
xchg
and
xor
mov
or
dec
ret
mov
add
mov
xchg
jmp
pop
scas
loop
dec
sub
mov
or
js
lds
mov
jne
sbb
cli
dec
cld
add
pop
ins
pop
sub
scas
pop
pop
into
ret
inc
push
add
ja
cld
pop
mov
sbb
popf
inc
push
mov
test
int3
ins
mov
(bad)
cmc
je
scas
cmp
cs
add
dec
loope
mov
sub
dec
mov
xchg
stos
mov
push
and
cli
pushf
adc
test
cmp
cs
sbb
retf
or
hlt
js
pop
xor
in
sub
jb
xor
stos
in
outs
push
push
mov
inc
shl
int3
or
sbb
cdq
adc
int
imul
dec
(bad)
js
shl
or
jg
call
in
imul
aas
scas
push
sub
in
jmp
in
rcr
mov
mov
pusha
push
pop
fucomip
jne
jb
loop
push
test
inc
mov
ja
mov
inc
into
and
pop
sbb
sub
fistp
jmp
mov
gs
or
icebp
mov
mov
inc
inc
popa
clc
jmp
hlt
shl
add
and
les
push
imul
jne
pop
(bad)
int3
mov
inc
pop
ins
bound
inc
into
cmp
test
stc
movs
(bad)
(bad)
test
ins
shl
cmps
or
sbb
lds
shl
shl
mov
xchg
push
int
dec
jge
sub
dec
out
es
push
mov
or
mov
add
or
mov
push
repz
inc
scas
add
(bad)
add
sbb
aam
movs
inc
sbb
push
lahf
pop
jecxz
cld
retf
(bad)
push
xor
cmc
pop
popa
dec
cld
or
xor
pinsrw
sti
push
xor
icebp
cmps
retf
bound
add
fnstenv
cmps
cwde
or
repz
add
mov
xor
or
aad
sub
hlt
jmp
retf
push
pop
lahf
xchg
ins
pop
cmp
loope
ror
popf
movs
push
inc
jne
sar
loopne
pop
mov
jmp
cdq
test
out
pop
add
and
add
jnp
jge
(bad)
and
jmp
inc
xlat
arpl
iret
cld
nop
scas
fcomp
pop
sub
popf
jnp
das
(bad)
int
mov
adc
ret
push
aas
pop
pop
mov
add
enter
adc
imul
cmp
inc
sbb
imul
cmp
pop
xor
add
imul
and
push
push
mov
cdq
int3
mov
xor
dec
cld
xlat
sub
popa
lock
mov
push
leave
rol
retf
je
mov
mov
jecxz
and
(bad)
icebp
mov
inc
repz
push
test
inc
popa
xor
inc
test
mov
pop
mov
jo
pusha
lea
push
pop
aaa
(bad)
aaa
(bad)
jnp
test
jge
cmp
inc
stos
or
sub
xchg
add
repz
pop
adc
stos
jo
cmps
mov
(bad)
bound
sti
int
scas
pop
sbb
adc
cdq
xchg
jge
xor
mov
adc
add
add
lea
mov
mov
into
cmp
mov
push
stc
sti
outs
dec
jg
aas
mov
out
shl
adc
aaa
aad
stos
js
out
or
movs
push
cli
add
add
fdivr
dec
inc
sahf
add
sub
test
jp
in
adc
pop
jp
sbb
adc
(bad)
push
cmp
fbstp
mov
out
pop
retf
and
stc
jne
clc
arpl
inc
ins
jmp
push
mov
xchg
pop
enter
frstor
jne
mov
inc
mov
dec
fcmovnbe
ret
sub
xchg
mov
cmp
fs
outs
rcl
pusha
not
push
mov
rcl
jnp
ins
(bad)
jne
jmp
push
pushf
cld
mov
(bad)
sbb
sbb
dec
sahf
das
mov
ffreep
sub
push
cmp
or
xor
mov
int
or
loope
jge
rol
outs
rol
pop
call
call
pusha
shl
pop
not
out
(bad)
adc
stc
rol
rol
add
lea
adc
adc
(bad)
ins
sahf
jae
in
ret
or
mov
mov
pushf
jg
sti
push
sub
pextrw
xabort
sbb
cmp
push
pop
test
(bad)
cmps
mov
sbb
sub
ja
push
or
fwait
or
push
mov
lods
cmc
sub
ret
imul
in
das
sub
movs
xchg
xor
fnstcw
test
xchg
cmp
xor
mov
adc
pop
je
pop
jmp
cld
outs
sbb
pop
out
(bad)
dec
mov
pop
lahf
fstp
pop
into
push
test
mov
jne
xor
mov
or
mov
(bad)
in
push
dec
out
jecxz
push
loope
cmp
icebp
imul
add
sub
push
pop
jp
jbe
xlat
cmp
adc
jg
and
ss
add
fcomp
nop
stos
ds
mov
fdivrp
cmp
mov
jge
pop
pusha
ja
add
pop
and
jmp
mov
mov
sbb
jo
bound
pop
nop
cwde
adc
mov
xchg
add
call
pop
push
or
fucompp
outs
mov
enter
add
clc
fbstp
push
jmp
ins
mov
push
inc
push
push
test
dec
pop
cmp
inc
sbb
sbb
fidivr
or
inc
jmp
stos
jmp
adc
or
inc
fmul
push
mov
fisub
push
sbb
jne
aas
xchg
mov
in
scas
inc
cs
sbb
mov
pop
mov
test
and
mov
add
sbb
xchg
cmp
mov
icebp
pop
faddp
inc
inc
xchg
xchg
(bad)
out
icebp
or
mov
enter
bnd
mov
in
xor
mov
inc
and
mov
lds
xor
repnz
in
and
xor
retf
add
dec
fbld
xor
inc
out
push
jnp
shl
mov
jmp
push
jnp
loopne
cvtdq2ps
idiv
hlt
mov
sahf
aaa
push
cdq
and
mov
cmp
cmp
loope
inc
inc
mov
ret
jmp
cmc
std
enter
mov
add
push
pop
lods
sub
and
mov
aam
icebp
jp
inc
in
jge
fld
jae
sbb
jmp
jns
stos
in
sbb
mov
jmp
jae
ret
mov
dec
and
(bad)
jl
into
xor
lods
jge
hlt
rcr
(bad)
mov
test
jno
mov
call
mov
jno
lahf
lds
sub
jae
movs
add
inc
movs
aam
push
out
call
sub
(bad)
xchg
cs
dec
fsub
sub
lahf
rcr
xchg
push
hlt
fst
inc
dec
and
aad
(bad)
sbb
push
mov
push
test
gs
arpl
push
aam
jne
mov
mov
(bad)
(bad)
es
add
pop
mov
add
in
iret
(bad)
push
sbb
gs
mov
cmp
or
xchg
retf
jne
in
sub
loopne
loope
stos
push
cmp
inc
inc
repz
cmp
push
adc
in
int3
jl
dec
or
pop
mov
pop
push
mov
jl
mov
add
stos
fdiv
out
inc
(bad)
fadd
jecxz
push
mov
ins
push
imul
ins
fisub
jns
xchg
pushf
dec
push
push
cmp
push
adc
push
mov
mov
imul
mov
repz
lahf
pop
faddp
pop
fwait
push
mov
shl
repz
push
or
add
lds
sar
cs
xor
pop
sar
mov
and
xor
fcomp
push
xor
ss
push
gs
mov
sbb
inc
scas
adc
fimul
scas
sbb
mov
aad
jge
outs
mov
or
sahf
fwait
add
call
fld
sbb
mov
adc
sbb
ret
dec
adc
adc
loop
add
jmp
ins
repz
loopne
inc
cmp
add
cld
enter
xchg
adc
push
call
dec
inc
mov
sbb
mov
out
shr
aad
lods
inc
pop
push
stos
aam
cli
push
mov
in
xor
jmp
rol
cmc
or
pushf
mov
out
shl
out
stc
mov
pop
sbb
clc
dec
imul
or
push
or
dec
out
dec
mov
inc
shr
lock
add
popf
add
aaa
loope
movs
popf
neg
dec
loopne
mov
dec
das
into
pop
dec
push
adc
pop
cs
stc
outs
xchg
(bad)
les
aas
cmc
repnz
bound
jbe
repnz
push
imul
not
xchg
cdq
adc
xlat
and
jbe
pop
sbb
sub
(bad)
in
nop
xor
in
gs
lock
(bad)
jne
sub
enter
sbb
ror
push
addr16
clc
jne
stos
adc
mov
pop
jmp
sahf
push
dec
scas
pop
jno
cmc
adc
rcr
(bad)
adc
dec
add
(bad)
mov
sbb
shl
sbb
mov
inc
add
rol
cmps
jb
xor
push
in
call
or
xor
pop
clc
cwde
js
dec
dec
push
aaa
lahf
pop
mov
lods
push
and
mov
test
xchg
nop
inc
mov
push
pop
and
into
jne
loope
dec
pop
pop
out
ds
mov
retf
jb
sub
xor
std
pop
cmp
fist
int3
jne
xchg
xor
xor
jp
pusha
repz
push
pop
jp
mov
ds
cli
iret
les
rcr
in
jle
mov
push
sub
sbb
pop
or
icebp
gs
jecxz
fst
(bad)
int3
push
cmc
cs
mov
xor
inc
sub
dec
test
dec
shl
fild
fnsave
div
idiv
push
add
and
push
cmp
pop
mov
mov
and
sbb
xchg
test
jne
popa
mov
mov
aam
popf
mov
inc
push
jno
xchg
cmps
adc
cmp
inc
mov
ret
aad
shl
sub
test
in
pop
mov
push
enter
enter
add
outs
ror
mov
rol
inc
sbb
mov
cmp
gs
and
ins
jmp
xchg
call
cld
das
pushf
cmp
cdq
push
or
jo
daa
dec
aas
int3
imul
ret
repz
sbb
dec
arpl
xchg
pusha
jns
in
or
mov
cmp
push
push
(bad)
adc
pop
sub
mov
xchg
mov
scas
jl
mov
call
pop
loop
adc
mov
ror
push
in
jo
loopne
xchg
jae
push
rcr
rcl
stos
mov
in
sbb
sub
sub
sti
imul
xor
imul
std
fld
popf
ficom
or
mov
sbb
stos
das
sub
retf
aaa
mov
cmpxchg
cmp
dec
repnz
fisubr
inc
and
add
push
dec
push
call
ja
scas
push
push
std
or
movs
loop
pusha
and
adc
mov
mov
xlat
out
pop
add
jg
add
pand
push
call
lds
imul
and
inc
jmp
fwait
mov
out
mov
popa
push
outs
push
test
in
adc
leave
stc
sbb
xchg
(bad)
mov
and
push
fwait
into
push
sbb
js
sbb
ins
inc
fldcw
push
sbb
adc
or
fwait
out
adc
retf
call
repnz
jns
xchg
(bad)
pop
outs
ret
int
mov
mov
loope
int3
mov
dec
adc
push
pusha
mov
rcr
shl
dec
push
mov
into
xor
repnz
(bad)
mov
dec
jae
pop
lock
push
repnz
nop
into
ret
mov
and
push
adc
xor
mov
fiadd
xchg
jns
and
dec
mov
(bad)
jns
popa
jl
pop
shr
cmp
adc
xchg
gs
(bad)
jg
not
rcr
fiadd
sub
jmp
ret
add
inc
jmp
sbb
cmp
jo
cld
in
fwait
aaa
shl
xor
aad
ss
inc
jle
dec
cdq
jge
cmp
movs
pop
retf
cmp
mov
test
push
ds
fidiv
cmp
mov
call
or
adc
sahf
mov
pop
(bad)
fimul
(bad)
mov
mov
mov
div
test
fcom
mov
jae
test
xchg
lea
je
xchg
xor
xchg
or
adc
mov
out
ret
dec
sbb
popa
xor
(bad)
dec
stc
jmp
cmp
mov
stos
imul
xchg
retf
sbb
in
add
and
ja
sub
or
retf
enter
lahf
jecxz
jo
push
jmp
(bad)
and
and
retf
jne
loop
xchg
mov
(bad)
push
scas
jae
(bad)
into
into
je
das
fimul
outs
xchg
movs
mov
push
sub
adc
mov
scas
or
fstp
push
add
loopne
pop
dec
sub
ja
addr16
(bad)
in
scas
cmp
out
outs
lea
ds
inc
dec
push
push
imul
cmps
popa
and
xchg
and
pop
inc
push
cmp
mov
push
push
xlat
mov
dec
inc
pop
ins
sub
inc
xchg
pop
shl
mov
mov
mov
mov
movs
(bad)
mov
fst
jge
add
mov
pushw
les
adc
ret
mov
or
and
and
sub
inc
pop
xchg
adc
(bad)
xchg
push
add
imul
fistp
rcr
stos
push
xchg
push
ins
inc
fmul
xchg
fcom
sub
lea
pop
enter
mov
jmp
or
add
fidiv
adc
mov
xor
mov
mov
mov
idiv
addr16
jnp
jb
cmp
inc
(bad)
lds
and
push
lds
mov
stos
adc
push
and
mov
arpl
mov
dec
loope
in
and
lahf
test
cwde
adc
lock
cdq
jnp
jl
sub
fidiv
xchg
mov
dec
out
inc
xchg
out
push
dec
pop
clc
pop
scas
pop
mov
mov
ret
xor
pop
jge
icebp
jbe
inc
into
adc
clc
das
iret
adc
out
pusha
in
ja
bound
mov
(bad)
mov
sbb
fcmovb
loope
test
imul
dec
imul
sub
jmp
into
mov
jmp
scas
xor
test
call
or
xchg
int
enter
sti
ja
fwait
fwait
cmps
or
mov
fist
jle
sub
retf
rcr
dec
xchg
fsub
out
sub
inc
mov
push
pop
arpl
jl
jge
repnz
out
sbb
data16
outs
repnz
sub
and
or
cmp
jmp
mov
jno
add
mov
sub
cmp
jns
sub
loopne
movs
sbb
add
add
sub
popf
adc
test
cmp
push
mov
shl
jg
sar
mov
push
mov
rdmsr
ror
in
stos
add
fst
in
stc
push
daa
idiv
inc
retf
pop
pop
test
lds
mov
push
stos
das
(bad)
mov
sbb
push
out
jmp
pushf
enter
mov
inc
xchg
inc
jp
iret
rcr
sub
addr16
sbb
int
(bad)
jmp
out
dec
dec
movs
cmc
adc
test
sti
arpl
mov
js
pop
xchg
mov
dec
div
cmp
sub
pop
ret
mov
dec
movs
test
sahf
pop
xchg
mov
dec
fsubp
pushf
push
cmp
dec
fxch
cmps
fimul
pop
xchg
popf
adc
addr16
call
push
aaa
sbb
or
std
hlt
idiv
or
cmp
and
(bad)
mov
mov
inc
add
stc
(bad)
out
inc
es
mov
xchg
inc
pop
mov
cs
jns
inc
arpl
rcl
fisttp
in
pop
or
xchg
and
lds
and
or
enter
outs
push
xor
mov
fnclex
int3
bndstx
add
push
xlat
mov
lods
adc
arpl
test
dec
ret
neg
(bad)
cmp
icebp
test
ds
pushfw
cmp
and
pop
stc
cmp
jge
fild
nop
xchg
je
cdq
stc
mov
lock
sub
mov
mov
xor
dec
cmps
out
inc
leave
sbb
or
push
push
xor
xchg
jmp
xchg
jp
inc
sar
enter
(bad)
xor
adc
retf
mov
sub
pop
dec
mov
mov
jne
les
(bad)
push
push
test
fucomip
div
sbb
imul
mov
jl
stc
pop
and
pop
xchg
iret
iret
push
loope
es
push
retf
(bad)
sti
mov
out
cmp
add
adc
mov
cld
into
or
js
loope
sbb
call
jno
ret
fadd
shl
mov
mov
adc
xor
int
sahf
inc
jecxz
scas
sahf
mov
stos
daa
call
sbb
mov
push
jbe
cmp
ret
mov
cmp
loop
scas
loopne
stos
je
jecxz
or
retf
(bad)
out
into
ror
stc
dec
inc
push
(bad)
rcl
mov
pop
or
dec
(bad)
mov
leave
pop
in
into
cwde
repz
mov
push
xchg
sbb
les
js
lds
push
jns
jmp
or
popa
pop
xor
push
sbb
mov
aad
xor
mov
sbb
add
std
jmp
xor
mov
pop
mov
rol
or
jg
pushf
cmp
and
lods
inc
xchg
ins
sub
shl
adc
retf
sbb
jb
mov
retf
xor
sti
add
sub
xchg
pop
lock
add
and
sub
jae
ins
cmps
test
add
mov
mov
cmp
mov
cmp
mov
adc
mov
lods
and
xor
xchg
mov
push
das
xchg
push
les
push
jmp
mov
lods
adc
and
imul
cmp
lods
jp
loope
dec
mov
mov
enter
imul
push
inc
mov
(bad)
add
dec
jmp
mov
mov
sub
mov
enter
je
mov
push
xor
sub
daa
mov
fdivr
pusha
jo
mov
and
add
dec
sub
inc
add
addr16
pop
pop
mov
je
fidivr
or
jae
cmovo
lock
pop
in
ret
mov
mov
xchg
repz
mov
push
mov
push
jg
and
or
into
push
js
push
stos
call
or
pop
add
fistp
in
lea
pusha
out
test
mov
sahf
sbb
rol
stos
xchg
leave
xchg
sub
mov
or
xor
fsub
sbb
mov
push
scas
push
inc
mov
mov
or
cs
dec
jbe
out
stos
mov
dec
loopne
not
push
aam
sub
push
pop
inc
xchg
mov
call
into
arpl
sbb
scas
adc
je
ja
xor
or
pushf
mov
daa
add
jnp
mov
fisttp
mov
dec
icebp
adc
pop
das
and
fldenv
ret
push
pop
sub
std
or
sub
daa
(bad)
sub
xchg
dec
iret
sbb
xor
loopne
sar
mov
sbb
mov
pop
or
xor
dec
das
xchg
scas
pop
movs
dec
orps
aas
push
jno
or
fs
fistp
or
int
inc
or
fnstenv
sub
mov
dec
inc
jne
push
call
sbb
push
sbb
sub
sub
retf
push
(bad)
and
sub
bound
push
pop
jmp
in
pusha
loop
in
pop
dec
inc
sbb
mov
dec
popf
sub
mov
cmp
mov
adc
and
leave
push
push
cmp
and
sub
jmp
push
push
rcl
das
xlat
jnp
mov
aaa
jbe
scas
push
ins
popf
enter
arpl
jnp
jecxz
sbb
dec
fldenv
outs
mov
lock
pop
mov
in
(bad)
cmp
mov
in
pop
add
push
ficomp
push
cmp
aaa
cmp
clc
xchg
pop
sub
and
push
jl
repnz
aas
push
cmp
cmp
fdiv
es
sbb
push
movs
push
or
clc
add
or
or
sbb
(bad)
pop
in
add
cmps
dec
sub
icebp
push
cmp
rcr
repz
mov
(bad)
lock
and
sub
sahf
lods
and
cwde
out
and
pusha
push
inc
xor
inc
xor
lods
(bad)
scas
and
retf
xor
nop
fistp
dec
aad
push
out
xlat
cmp
cs
or
xchg
shl
outs
and
mov
jge
jb
mov
or
mov
mov
retf
pusha
ss
mov
jp
pushf
lds
mov
fcom
lds
(bad)
hlt
mov
jb
(bad)
div
jmp
daa
and
(bad)
cwde
pop
and
dec
enter
addr16
mov
pop
popf
and
inc
and
(bad)
mov
clc
fidivr
sbb
fistp
(bad)
stc
jb
pushf
cwde
push
je
jb
icebp
jecxz
add
lea
fldenv
mov
es
xor
cmp
cmc
push
retf
add
ins
adc
iret
push
jmp
push
mov
test
mov
aam
fcomp
(bad)
into
and
mov
fisubr
jle
adc
or
cmp
aam
bound
jnp
enter
cmp
mov
mov
sub
inc
repnz
push
mov
mov
xor
pop
inc
je
addr16
pop
dec
add
dec
mov
mov
xor
(bad)
jmp
push
sbb
push
mov
mov
push
sub
(bad)
test
call
(bad)
xor
sbb
popf
xor
in
fstp
mov
xchg
add
mov
test
inc
or
mov
in
mul
iret
(bad)
mov
mov
xchg
loop
call
movs
(bad)
adc
pop
data16
add
cli
ret
sub
pop
cmp
mov
pop
jge
sbb
call
jbe
pop
push
pop
adc
sbb
mov
loope
call
pop
repz
pushf
mov
(bad)
cmps
adc
mov
mov
mov
or
jp
fnsave
hlt
xor
sti
sbb
add
int
es
or
cmp
adc
in
cmp
jne
les
fadd
xchg
(bad)
and
jle
mov
sbb
fdiv
adc
mov
outs
push
iret
shl
in
mov
int
in
inc
push
in
mov
mov
mov
sub
pusha
iret
lds
xchg
arpl
rcl
push
inc
jne
fst
xor
pop
out
push
push
(bad)
mov
pop
out
test
xchg
cmp
nop
pop
imul
ds
aad
test
push
adc
sbb
jmp
mov
push
dec
push
dec
rol
mov
fwait
sub
push
xchg
push
inc
cmc
mov
jmp
inc
sbb
aad
pushf
cwde
in
aam
(bad)
popa
int
inc
out
fwait
nop
jle
jns
jb
in
ficom
out
sbb
ror
or
dec
sub
sbb
gs
retf
and
sbb
mov
and
retf
int3
add
aam
std
and
push
push
xor
and
fdivr
fsubr
cmp
add
and
mov
ucomiss
shl
rcr
adc
ret
or
mov
adc
ror
push
ret
hlt
adc
(bad)
(bad)
jmp
movs
(bad)
imul
jmp
cmps
cmp
dec
inc
jns
mov
push
fld
adc
pop
dec
lea
mov
pop
in
mov
xchg
inc
cmps
mov
pusha
daa
mov
pop
popa
add
fbstp
push
mov
cdq
mov
ret
jne
jb
push
mov
aaa
add
sbb
jne
fxtract
ins
and
dec
pop
lods
push
xchg
push
adc
xor
mov
sbb
test
push
inc
cmp
jae
mov
mov
mov
mov
ds
push
push
sbb
push
inc
and
test
add
dec
jno
popf
bound
fs
cmc
cmps
push
arpl
adc
push
aas
jmp
jo
xor
mov
pop
or
xor
and
jns
ins
pop
or
sbb
out
mov
scas
sbb
aas
jmp
mov
jbe
mov
push
lods
lahf
lds
xchg
imul
popa
test
mov
xor
movs
repnz
aas
jns
mov
shr
dec
pop
or
loop
stc
ss
adc
mov
(bad)
jo
ss
cmp
loope
fmul
and
xchg
lea
dec
lods
idiv
push
lods
xor
pop
mov
xor
mov
cmp
dec
mov
fwait
or
dec
in
inc
mov
repz
dec
loope
dec
shl
sub
daa
mov
call
cmp
inc
add
xchg
dec
and
and
out
dec
sub
or
sub
call
mov
pop
inc
enter
or
jmp
sar
and
aas
fdiv
loope
repnz
sbb
pop
jp
pop
cmp
xchg
(bad)
cmp
cmps
movs
jge
outs
sahf
aam
fld
js
loope
cmp
mov
(bad)
scas
cmp
cmps
xchg
cli
test
push
mov
and
cmp
movs
jmp
jno
in
or
adc
in
inc
fisttp
pusha
std
inc
mov
scas
xchg
repz
mov
dec
dec
jnp
xchg
ja
and
mov
popf
and
sbb
stos
and
aaa
jmp
jae
ins
cwde
es
imul
inc
push
push
ret
push
lds
mov
mov
cmc
fwait
dec
rol
add
lock
rcl
inc
das
sbb
(bad)
sbb
cli
push
loopne
mov
push
jae
inc
jmp
ja
add
inc
sar
mov
(bad)
adc
pop
in
mov
call
and
dec
das
in
ret
push
daa
lahf
pop
pop
mov
popf
ds
xor
(bad)
cmp
add
nop
cmps
aas
(bad)
stc
push
push
push
xor
ret
je
xor
inc
sbb
inc
or
hlt
je
add
in
cli
pop
mov
aas
push
push
sbb
cli
cmp
pop
inc
popa
loope
and
stc
mov
sub
jno
es
popf
in
nop
in
sub
fidivr
icebp
cli
(bad)
pop
add
aam
pop
inc
push
test
cmps
xchg
lea
cmp
xchg
inc
dec
shl
imul
and
xchg
aam
lock
add
dec
push
mov
pop
cmp
mov
dec
mov
test
retf
sub
movs
jnp
(bad)
int3
bound
clc
(bad)
inc
xor
xchg
popa
xlat
and
or
xor
ror
test
xchg
enter
cmps
pop
pop
daa
jmp
dec
(bad)
jl
addr16
mov
fistp
cli
daa
push
pop
scas
mov
sub
add
clc
jo
xchg
arpl
in
scas
mov
(bad)
sub
or
inc
push
cmp
dec
ja
pop
mov
gs
lds
call
mov
pushf
mov
adc
imul
fimul
cmps
jle
and
ss
fcomp
sbb
adc
pop
mov
mov
outs
fwait
rcl
movs
and
sub
fld
adc
arpl
outs
add
cmp
sbb
inc
nop
push
retf
addr16
add
adc
imul
push
test
cmc
sbb
pop
sbb
or
sbb
popa
(bad)
mov
les
sub
xchg
iret
dec
mov
retf
add
paddsw
das
inc
retf
cmps
sub
(bad)
scas
popa
lahf
push
lods
(bad)
mov
mov
xor
int
movs
sbb
xchg
jo
xchg
xor
and
add
sub
mov
mov
das
(bad)
jle
mov
icebp
jmp
xor
jae
bnd
leave
lahf
xchg
add
mov
add
pop
xchg
and
dec
loope
pop
push
xchg
xor
mov
dec
dec
pop
test
mov
inc
cmp
imul
and
ds
fiadd
mov
adc
or
in
test
jp
mov
sub
mov
inc
jmp
jge
inc
xchg
jle
mov
pop
sbb
daa
xchg
mov
add
push
push
xor
sbb
(bad)
fldenv
jmp
fld
out
sti
fistp
pop
mov
retf
add
mov
dec
adc
rol
shr
cli
or
add
movs
or
push
fimul
push
pop
in
mov
xor
dec
rol
jl
div
push
mov
call
lock
in
rcr
xor
jne
mov
add
shl
xchg
test
push
in
enter
sti
adc
adc
lods
inc
stos
xchg
cmp
imul
lea
pop
mov
cdq
int
xor
sbb
dec
mov
xor
sbb
in
pop
lock
and
mov
inc
ror
int3
repz
in
dec
or
fdiv
(bad)
mov
or
popa
sbb
shl
push
lods
adc
pop
add
pushf
push
not
dec
in
daa
jo
(bad)
pop
(bad)
cmp
lds
inc
sbb
cdq
das
(bad)
sub
cmps
loop
adc
jns
(bad)
loop
or
mov
xor
pusha
xor
or
mov
(bad)
rol
sub
pusha
inc
mov
out
and
into
mov
mov
push
pop
stos
pushf
bound
ficom
xchg
xchg
imul
shl
or
push
or
or
imul
or
inc
or
cld
shl
fadd
pushf
dec
push
cmp
ja
imul
mov
or
popa
jae
lods
add
and
call
sti
enter
sub
mov
pop
lea
mov
push
aam
and
jbe
sub
(bad)
and
sub
mov
pop
xor
hlt
mov
sub
retf
stos
repz
ins
popf
mov
mov
(bad)
movs
jae
fwait
xor
inc
pop
mov
fldenv
add
pop
rcr
test
push
mov
cmc
outs
(bad)
int3
icebp
sub
adc
xor
fiadd
fiadd
jle
loopne
cmp
push
sahf
or
and
clc
jo
bnd
adc
es
sbb
and
push
jae
jbe
imul
cmp
add
dec
cmp
sub
jb
pop
fmulp
cmp
jmp
cdq
cmp
stos
xchg
mov
fnstsw
pop
mov
mul
ret
(bad)
outs
popa
sbb
pop
ins
shl
leave
push
mov
jl
mov
(bad)
jnp
stos
sub
cdq
ret
pop
movs
sub
or
cmps
push
xor
loopne
xchg
mov
jp
push
mov
fcmovnu
repz
in
adc
fs
jo
lahf
sbb
mov
dec
fdivr
stos
adc
(bad)
popf
pop
out
mov
out
lock
nop
push
std
adc
iret
mov
mov
stos
leave
mov
and
scas
push
xchg
mov
loope
ret
or
xchg
and
(bad)
fisubr
adc
or
popf
fld
inc
test
scas
(bad)
cmps
cs
in
gs
adc
mov
js
je
hlt
jge
cmps
stos
or
add
push
mov
or
aaa
xchg
adc
cmp
retf
pop
shl
test
dec
xchg
jl
dec
enter
pop
ins
leave
dec
mov
xor
add
mov
hlt
stos
mov
cmps
out
sbb
ins
(bad)
cmp
iret
sub
sub
movs
inc
(bad)
repnz
push
mov
xchg
sub
sahf
xor
imul
xchg
and
stos
(bad)
sub
xor
push
jno
xor
xchg
pop
mov
(bad)
enter
stc
xor
xor
rol
push
daa
shl
xor
jle
and
test
call
(bad)
leave
pop
xchg
mov
dec
addr16
fwait
mov
push
stc
adc
loopne
not
fdivr
aad
mov
mov
loop
int3
adc
xor
repz
adc
xor
adc
xor
xchg
mov
sbb
sbb
adc
lods
inc
pusha
sbb
mov
cmp
xchg
aaa
test
mov
xor
loope
rcl
cmp
data16
jle
sub
push
mov
mov
lock
adc
pop
outs
mov
test
cli
cmp
stc
ins
daa
mul
adc
pop
cmp
push
mov
movs
out
movs
ds
cmc
adc
mov
test
jne
rol
mov
push
(bad)
icebp
std
(bad)
add
adc
cld
fld
dec
mov
pushw
sbb
add
adc
mov
pop
push
je
ficom
dec
mov
inc
jl
fdivr
xchg
bound
push
adc
leave
or
cmps
fmul
fs
pop
sub
jmp
push
btc
nop
sub
dec
xchg
out
or
pop
adc
push
(bad)
fild
xor
jns
add
cdq
in
fnsave
mov
gs
les
and
add
inc
enter
inc
pop
push
data16
add
add
sahf
mov
(bad)
aam
or
jge
add
xchg
addr16
pop
jp
inc
jnp
pop
xchg
punpckldq
fs
test
sub
repnz
mov
pop
mov
lds
sbb
push
add
shl
or
mov
jl
mov
ins
inc
int
jp
xor
enter
lock
mov
nop
xchg
out
push
mov
cmps
sbb
ds
inc
adc
movs
push
and
test
add
fwait
add
inc
test
into
mov
sahf
mov
retf
cmp
xchg
push
shl
mov
sub
and
in
shl
in
loopne
ret
mov
stos
fprem1
jbe
in
mov
and
fwait
cmp
scas
xchg
push
cmp
mov
and
shr
push
adc
push
es
mov
rcl
out
test
syscall
jns
lods
pop
aad
in
or
jmp
iret
ins
into
xchg
fld
sti
fdiv
jnp
dec
stos
cmp
lods
mov
(bad)
mov
aas
sub
jae
fstp
test
repnz
dec
(bad)
fs
xchg
fwait
inc
xlat
add
test
xchg
mov
xor
sbb
mov
xchg
das
and
mov
and
imul
jmp
adc
test
add
mov
add
out
(bad)
ins
xor
mov
mov
mov
(bad)
(bad)
adc
retf
adc
test
push
inc
sbb
mov
xchg
push
jg
pop
mov
cmp
out
jo
mov
mov
scas
dec
pop
mov
retf
ret
pop
in
in
sbb
or
rcl
pop
jnp
pop
or
bound
cld
mov
fcomi
mov
mov
inc
push
shl
int
int
ja
int3
lea
mov
ret
push
lea
add
sbb
repz
daa
icebp
ins
adc
mov
ror
nop
ja
into
imul
imul
pop
stos
mov
cmp
loope
pop
sub
test
jecxz
jge
(bad)
cmp
and
inc
cld
add
push
pop
lahf
ins
xchg
mov
jnp
xchg
outs
dec
rol
data16
cmp
pusha
sub
call
mov
pop
push
in
xor
arpl
(bad)
test
xchg
add
push
fcomp
mov
cmc
movs
mov
mov
mov
lods
(bad)
or
jo
xchg
ins
dec
push
jg
dec
repz
sbb
out
lods
ja
iret
int
push
js
repnz
dec
div
or
(bad)
jecxz
imul
ds
push
dec
cmp
xchg
outs
mov
(bad)
lahf
pop
mov
or
push
inc
pusha
cmp
int3
dec
scas
hlt
outs
jbe
retf
mov
std
push
inc
cli
mov
sub
arpl
scas
enter
rcl
repnz
inc
rol
frstor
sub
dec
mov
and
and
dec
jb
pop
test
jns
out
inc
hlt
or
xor
aad
ins
push
push
add
inc
xchg
push
mul
shr
cmp
mov
test
pop
inc
pop
inc
popf
outs
cmps
inc
mov
icebp
xchg
sti
iret
pop
and
push
stc
mov
ffree
cdq
mov
push
aas
push
ins
adc
inc
(bad)
dec
xor
out
adc
out
xor
mov
xor
fiadd
ror
mov
int3
fadd
push
lds
xchg
(bad)
pop
outs
stos
lea
mov
xor
push
(bad)
sub
das
pop
adc
xor
push
aad
cmp
sbb
mov
push
push
push
rcr
add
retf
jge
shl
adc
push
dec
sbb
call
push
cli
adc
mov
mov
cmc
mov
sub
shl
xchg
adc
(bad)
sbb
push
ja
jb
outs
mov
and
aas
cmp
cvtps2pi
addr16
das
inc
cmp
gs
inc
xchg
outs
nop
push
or
outs
xchg
cdq
aad
push
ja
inc
pop
in
iret
out
mov
aad
cmc
mov
lea
dec
shl
mov
sub
mov
ret
mov
jno
pop
xor
iret
cwde
xchg
cmp
dec
mov
dec
cwde
ret
test
fisttp
cmp
jo
jns
xchg
and
aaa
xchg
(bad)
retf
stos
inc
sub
mov
push
sbb
stc
stos
xchg
jmp
pop
addr16
repz
jecxz
lods
push
out
dec
stos
mov
pop
xor
int
and
sub
and
nop
sbb
push
sar
leave
add
cmp
and
fbstp
pop
sahf
adc
add
push
ret
cdq
cmovo
adc
mov
jo
shr
shl
mov
adc
push
jne
add
xor
sub
sbb
shl
nop
or
(bad)
neg
pop
xchg
into
test
loop
je
mov
mov
js
mov
int3
or
sub
out
sub
pusha
xchg
xor
scas
mov
leave
cli
shl
movs
or
neg
xlat
mov
jp
rep
mul
xchg
or
or
cdq
int
movs
lods
jg
stos
lods
push
xor
xchg
sub
push
jae
sbb
mov
mov
push
pusha
js
sub
dec
mov
add
sahf
loop
sti
jg
or
neg
call
stos
dec
imul
ret
cwde
shl
mov
and
lock
add
push
movaps
hlt
jl
jg
fimul
mov
scas
cmp
inc
loop
test
xor
mov
adc
fdiv
xchg
add
push
iret
ins
cmc
(bad)
fadd
je
cmp
in
mov
movs
stos
hlt
imul
or
lods
dec
cld
into
pop
push
mov
lods
jmp
xchg
in
cdq
ins
jge
out
xchg
daa
fnstsw
daa
jmp
sbb
in
int
out
ds
adc
xlat
js
(bad)
fist
adc
repnz
cmp
push
inc
les
inc
mov
gs
mov
sub
nop
outs
dec
lods
out
std
sti
cmps
jae
cli
bound
push
push
enter
mov
jne
ror
mov
mov
jo
mul
mov
icebp
cmps
add
int3
lea
adc
push
and
movs
xchg
das
push
cmp
mov
ret
push
mov
lea
push
pusha
ret
repnz
xor
cmp
ins
dec
rol
daa
add
fild
into
cli
mov
inc
test
mov
cmp
ror
aaa
push
adc
cwde
test
pop
lds
pop
dec
pop
mov
rcl
in
inc
push
ror
nop
jbe
pop
pop
push
jmp
push
das
retf
push
mov
sub
cli
push
xchg
cli
jb
inc
fisubr
add
cmp
mov
xor
sbb
push
hlt
cmc
scas
(bad)
jl
push
nop
call
cmp
sbb
test
stc
adc
inc
jo
adc
mov
lods
inc
xchg
inc
lahf
retf
cli
ror
scas
inc
push
aas
sub
out
and
sbb
mov
aam
mov
lahf
ss
iret
cs
popa
lds
xchg
imul
int
test
adc
fwait
ins
dec
jge
mov
out
lods
ins
sub
test
sub
adc
ror
hlt
int
fs
pop
cld
repnz
rcl
sbb
jle
and
cmp
icebp
fist
and
shl
addr16
add
cmp
mov
out
rol
dec
add
inc
fsubr
cmp
or
sbb
mov
test
popa
imul
fstp
loope
test
std
xchg
sbb
inc
mov
test
adc
sbb
fwait
jno
or
jne
cmps
xor
stos
push
xchg
adc
mov
dec
jno
push
out
movs
enter
sub
xchg
inc
enter
hlt
mov
sub
pushf
dec
test
adc
aaa
mov
push
retf
add
cmp
mov
(bad)
and
and
jno
jbe
mov
fs
xchg
inc
cwde
and
aam
or
mov
out
or
cmc
sub
inc
push
adc
and
add
sub
jl
cmp
sub
mov
ret
fnstcw
lds
and
ficom
loopne
(bad)
mov
popf
xchg
call
jno
imul
or
fld
jge
jb
cdq
popa
mov
dec
(bad)
or
sti
inc
mov
adc
std
jb
lods
out
xor
pop
daa
add
fadd
shl
ror
fld
imul
inc
inc
inc
lods
stc
mov
movs
adc
call
xchg
lds
ret
cmovno
addr16
mov
xchg
mov
sbb
dec
jl
cld
shl
sub
mov
cmp
pop
(bad)
pop
nop
test
pop
pop
rol
cmp
push
fwait
gs
push
ja
aaa
add
repnz
icebp
mov
add
shl
jmp
(bad)
dec
inc
mov
pop
iret
das
in
movs
and
fadd
scas
pop
jmp
imul
fcomp
jp
pop
push
pop
add
mov
jecxz
fdiv
call
imul
retf
(bad)
dec
fnop
mov
push
ins
jne
data16
hlt
call
cmp
pushf
mov
sub
sub
fcomp
sub
out
mov
call
or
lea
pop
inc
aaa
xor
sbb
and
adc
jb
cmp
xchg
les
fs
inc
pop
or
leave
int3
mov
fcmovb
add
(bad)
in
xchg
xor
add
in
sahf
jmp
or
pop
clc
push
mov
dec
adc
add
jle
loop
inc
inc
nop
scas
sub
movs
push
sub
aam
cmp
jle
adc
or
js
lods
adc
jnp
xor
inc
jb
sti
repnz
adc
lods
mov
or
push
or
cwde
push
mov
cmp
ret
pop
(bad)
cmp
idiv
and
icebp
jg
movs
scas
xor
jmp
inc
aam
loopne
xor
popa
adc
pop
cmp
mov
aas
fisttp
xlat
loopne
cdq
outs
fimul
cmp
push
cmps
jp
xchg
out
aad
inc
push
adc
clc
std
movs
xor
gs
mov
pop
es
xchg
inc
(bad)
call
sub
xor
cs
xor
cld
aaa
inc
xchg
pop
xor
cmps
jno
in
pop
lea
or
movs
dec
leave
cmp
call
mov
mov
leave
ret
or
aad
inc
or
icebp
pop
fwait
mov
fs
daa
mov
mov
xchg
mov
ja
inc
jns
push
mov
call
adc
mov
shl
or
cmps
ins
out
fisubr
xor
dec
push
mov
jp
pop
out
jge
jne
call
push
test
jns
stos
mov
dec
jmp
dec
aam
call
inc
retf
jns
mov
xchg
out
xchg
sub
push
imul
jmp
fidivr
cld
ins
xchg
bound
fld
lock
daa
shl
mov
dec
jecxz
scas
mov
or
cld
or
push
pushf
mov
jl
(bad)
jmp
fistp
inc
jo
adc
outs
int3
mov
adc
xor
mov
retf
pop
push
mov
sbb
dec
xor
sub
out
inc
int3
jo
adc
int3
lock
fldenv
jb
jmp
mov
fist
cmc
dec
rol
ins
cdq
test
rcl
inc
cmp
sahf
gs
push
xchg
jle
lock
fild
adc
ins
or
jae
xchg
jbe
jnp
push
arpl
sub
dec
dec
in
push
cmp
sahf
jmp
int3
bound
loopne
xor
in
xchg
sbb
movs
jl
jbe
add
loop
leave
inc
inc
das
xor
enter
pop
and
fcomp
test
adc
hlt
add
cmp
jns
imul
(bad)
ficom
outs
pop
lea
cli
das
or
mov
mov
xor
xchg
add
dec
mov
lods
test
jnp
inc
cdq
ror
xor
mov
mov
ss
sub
mov
cmp
fisttp
ins
sar
mov
icebp
push
xchg
enter
or
mov
xchg
xchg
cmp
loop
mov
pop
sbb
dec
out
dec
adc
les
add
push
cdq
pop
xchg
pop
ror
aas
loope
nop
mov
pop
mov
jle
js
mov
or
lahf
daa
retf
jb
lock
xchg
shl
push
cdq
(bad)
je
imul
mov
icebp
sbb
sbb
popa
push
inc
or
sbb
icebp
mov
dec
mov
inc
inc
sbb
mov
dec
std
and
cwde
icebp
adc
sbb
test
(bad)
in
xchg
dec
adc
xchg
mov
(bad)
outs
icebp
idiv
shl
std
pop
sbb
mov
fwait
pushf
into
out
or
jns
xor
dec
ror
dec
icebp
outs
sub
in
data16
or
retf
repnz
mov
mov
pop
out
out
adc
fdiv
scas
js
and
xchg
or
frstor
clc
shl
jae
repnz
scas
inc
pop
or
sbb
add
add
sub
fisttp
mov
cmp
push
mov
push
scas
sbb
jmp
cmps
mov
mov
movs
out
mov
stos
push
pushf
repnz
sbb
sahf
fcmovnu
mov
cmp
jp
xor
cmp
int3
xor
fimul
mov
dec
and
fld
inc
mov
lods
dec
(bad)
arpl
mov
dec
jp
push
enter
in
out
outs
or
mov
xchg
or
xchg
push
or
in
pop
imul
ret
es
mov
call
cmps
aad
dec
aas
mov
mov
sub
rcl
xor
test
out
shr
sub
lea
hlt
lods
push
std
add
or
fsubr
push
mov
and
add
pop
xor
aas
jne
pusha
push
and
mov
dec
push
and
movs
sub
(bad)
xor
pushf
(bad)
mov
push
and
(bad)
jge
pushf
mov
mov
jne
das
adc
or
imul
push
jl
jb
test
bound
test
imul
mov
cmp
pop
mov
dec
pop
arpl
shl
push
retf
fnstsw
add
stc
add
ds
cmp
cli
jge
or
sbb
bound
xchg
mov
pop
mov
mov
retf
gs
mov
jno
push
or
gs
push
xor
inc
mov
cli
fisttp
adc
outs
int
es
xchg
pop
out
pop
enter
aaa
lea
ins
movs
and
in
out
adc
cmp
loope
pop
(bad)
clc
fdiv
mul
nop
fld
or
adc
aas
test
dec
adc
sub
pusha
rol
sbb
imul
enter
sub
ret
adc
mov
loop
out
jecxz
fwait
sbb
inc
push
mov
xor
fst
rol
pop
push
jne
test
sbb
fiadd
mov
pop
xor
sub
jmp
pop
dec
(bad)
scas
push
call
mov
int
ret
sbb
rcr
mov
jbe
mov
xor
out
jae
mov
daa
jg
jne
scas
or
std
cld
out
loope
push
xor
pop
xor
pop
fs
sbb
mov
mov
rcr
pushf
je
test
xchg
cmp
movs
jmp
nop
fild
cmp
dec
ins
adc
ins
(bad)
pop
jp
ficomp
xchg
push
add
gs
mov
mov
sub
pop
mov
mov
ins
ror
adc
loope
std
mov
mov
es
shl
xor
pushf
js
adc
retf
in
inc
movs
and
aaa
in
ins
push
repnz
xlat
jno
sub
mov
cmc
fs
fs
xlat
movs
in
sar
adc
or
int
stc
push
je
cwde
lea
(bad)
mov
dec
xchg
xchg
cmp
ret
out
movs
jnp
setg
sahf
scas
sub
xlat
pop
mov
enter
(bad)
sub
sub
jmp
cmps
and
xchg
jge
repz
xor
hlt
jb
sub
cld
pop
rcr
sbb
push
add
imul
(bad)
in
jb
test
imul
test
mov
or
test
xchg
shr
xchg
popf
das
jbe
retf
xchg
pop
mov
fadd
push
movs
sub
xchg
adc
arpl
xchg
(bad)
dec
in
inc
dec
cs
out
cld
xor
and
getsec
cmc
or
fstp
(bad)
xor
push
pop
repz
clc
leave
push
in
pop
sub
add
arpl
aaa
loopne
fsubr
adc
xchg
das
gs
adc
aad
enter
jne
xor
dec
xor
stos
icebp
add
push
sbb
inc
xchg
and
sub
cmp
push
or
arpl
test
cmp
adc
aas
mov
lock
push
outs
xor
push
in
fcmovu
call
dec
xor
rcl
mov
mov
and
rol
xor
das
jmp
inc
cdq
int3
pushf
mov
sbb
xchg
int
repnz
data16
lods
neg
lods
mov
mov
xchg
pushaw
out
fnstsw
mov
mov
push
mov
ud2
pop
xor
xlat
jno
dec
clc
or
mov
cmp
adc
scas
sbb
jo
sub
mov
icebp
add
mov
sub
or
leave
mov
jecxz
outs
ror
shl
mov
mov
test
(bad)
repnz
jae
icebp
inc
fcos
out
repnz
test
nop
imul
loop
std
xchg
adc
call
jae
(bad)
(bad)
jo
pop
and
les
sub
dec
lods
xor
push
out
inc
mov
adc
cs
inc
jb
sti
mov
sub
lods
inc
scas
pusha
mov
sbb
movs
xchg
into
imul
jnp
fs
(bad)
cmp
add
mov
jmp
xchg
aaa
pop
mov
out
scas
inc
dec
dec
aas
inc
inc
sahf
pusha
shr
call
in
inc
call
fwait
pop
mov
cld
sub
fsub
jne
(bad)
mov
xor
in
iret
cs
sbb
push
mov
ret
mov
scas
add
in
pop
fisttp
pop
pusha
jge
pop
(bad)
jo
iret
adc
or
jg
retf
jecxz
out
dec
xchg
push
in
es
jp
adc
cmc
adc
mov
and
mov
sub
or
test
or
addr16
popa
stos
or
push
js
jno
or
test
xchg
fs
mov
shl
dec
jne
in
or
stos
mov
sub
mov
and
movs
fs
aam
jmp
xchg
out
jge
leave
scas
jno
repz
sub
neg
clc
push
adc
push
pop
das
mov
jbe
out
fdiv
dec
pop
pop
lods
push
shl
sbb
jns
sub
retf
mov
jne
or
push
jge
jg
test
pop
jno
pop
scas
jne
xor
js
outs
les
and
push
mov
pop
push
push
cmp
sbb
lock
xchg
inc
out
cmps
imul
(bad)
pop
mov
out
mov
inc
lds
sub
inc
int
sbb
cmp
sbb
sub
sar
cwde
mov
ss
fnsave
fild
cmp
push
sbb
xlat
lahf
dec
(bad)
mov
jbe
mov
and
cmp
pusha
jnp
jp
int3
push
cld
inc
out
and
xor
(bad)
push
add
and
and
psubusb
fiadd
mov
and
dec
xor
jecxz
mov
jb
mov
xor
adc
mov
add
jp
bound
lds
inc
lahf
ret
dec
inc
(bad)
dec
sbb
ja
push
aam
sub
in
xor
ins
sar
int
jmp
jle
fistp
jle
mov
jno
sub
xor
inc
rol
clc
mov
div
fsub
cs
inc
lahf
xchg
sbb
mov
jmp
ret
rol
arpl
cmc
(bad)
adc
jecxz
test
add
sbb
nop
mov
dec
mov
xor
inc
(bad)
jo
in
fcmove
call
popf
out
add
(bad)
jb
test
aas
pop
xor
push
jne
pop
mov
push
adc
les
sub
sbb
fs
ret
mov
scas
sbb
ss
les
aam
and
mov
icebp
add
aas
lds
fmul
xor
sbb
cmp
push
in
or
inc
ja
mov
aas
fbld
movs
cmovs
jge
mov
sub
movs
stos
sbb
js
xchg
fmul
and
jnp
lahf
mov
fnsave
xchg
jg
aas
or
(bad)
into
cmps
mov
push
push
ins
add
jne
sbb
(bad)
push
inc
cmc
(bad)
sbb
imul
lahf
int3
dec
cmp
push
xor
push
jae
xor
cmp
mov
xchg
jl
pop
ins
dec
add
(bad)
in
inc
or
sbb
ret
pop
icebp
inc
ds
xchg
fnstcw
pop
and
add
mul
imul
les
cwde
es
cmp
loope
out
pushf
and
nop
out
pop
hlt
ficomp
pop
xor
mov
sti
adc
sub
in
adc
pop
xchg
(bad)
(bad)
stos
mov
or
scas
mov
faddp
mov
xor
out
out
aaa
(bad)
inc
shr
inc
retf
dec
inc
ins
stc
je
daa
and
push
ja
sub
in
mov
lds
mov
dec
iret
adc
sar
sub
xchg
outs
push
cmp
icebp
and
fs
dec
sahf
xor
mov
lds
push
add
xor
cwde
mov
rol
fdivr
xlat
xchg
cdq
sahf
sub
sub
add
mov
or
in
int3
mov
or
sub
neg
mov
clc
rcr
jp
stos
outs
jae
js
hlt
(bad)
xchg
(bad)
pusha
pop
xor
std
pop
add
scas
cwde
imul
aam
cmps
mov
sub
inc
mov
ret
sar
fwait
lea
mov
pop
or
outs
aaa
adc
lock
xchg
lahf
test
xor
out
rol
mov
sub
push
(bad)
sub
or
ss
int
adc
sti
pop
inc
mov
in
pop
push
test
inc
pusha
xlat
mov
pop
jns
cmp
dec
repz
cmp
xor
cmps
out
jo
cmp
xchg
xor
xchg
cmps
sbb
pop
and
in
inc
imul
mov
push
lahf
and
ins
imul
fidiv
sub
sub
inc
in
mov
push
ins
push
xor
mov
jo
sub
jl
jb
scas
inc
xchg
mov
mov
test
mov
xchg
retw
mov
or
lods
(bad)
int
js
cmps
ss
or
scas
scas
xchg
aaa
rol
fisubr
add
push
cmp
repnz
cmp
xchg
pop
xor
repz
enter
in
mov
imul
ss
xor
imul
or
dec
mov
pop
test
lahf
mov
aad
fmul
popf
mov
xchg
fisubr
mov
out
mov
sub
mov
xchg
aad
fld
xchg
in
aad
push
and
pop
sbb
mov
pop
xor
pop
mov
push
xor
add
or
retf
mov
push
(bad)
movs
fwait
loope
or
push
stc
cdq
icebp
std
add
(bad)
or
shl
sub
iret
and
sbb
push
pop
mov
fwait
mov
sub
pop
lods
xor
push
mov
mov
or
gs
retf
jb
pushf
pop
push
lds
ret
push
and
shr
push
and
push
add
add
in
pop
pop
adc
cdq
repz
lea
shl
cmp
out
adc
mov
aas
push
mov
jnp
cdq
adc
cpuid
sbb
or
mov
pop
push
fbld
or
push
popf
sahf
(bad)
jo
aas
add
xlat
and
call
neg
and
cmp
mov
xchg
les
daa
iret
mov
xchg
imul
aaa
mov
enter
stos
pshufw
sub
pusha
test
mov
jae
pop
dec
ffreep
push
add
int
jmp
mov
inc
pop
ja
(bad)
pop
or
xchg
out
lods
or
xchg
jne
shl
cld
cld
addr16
rep
push
scas
in
adc
leave
or
adc
xor
(bad)
pop
push
add
scas
mov
lea
sbb
inc
cmps
in
rcr
cmp
jne
xchg
in
xor
inc
sub
pop
jo
jl
and
ss
push
dec
hlt
and
nop
xchg
scas
push
call
and
iret
retf
dec
dec
scas
cmp
push
push
idiv
xchg
pop
push
(bad)
mov
iret
shr
leave
or
test
mov
mov
mov
inc
pusha
into
fwait
mov
inc
mov
mov
pop
pop
sbb
enter
rol
mov
sbb
sub
loope
repnz
aad
mov
jg
inc
rol
cmps
neg
aas
sub
das
mov
into
aaa
lds
xor
leave
(bad)
in
std
call
rol
imul
inc
xchg
ss
push
sub
pop
not
popa
ss
add
xchg
push
sub
push
test
xor
retf
sti
push
dec
cwde
dec
pop
adc
loope
test
lods
mov
mov
stos
jns
shr
in
or
inc
inc
xchg
fidivr
out
cdq
or
push
push
inc
push
aad
xchg
movs
neg
xchg
pusha
adc
dec
add
mov
out
loop
(bad)
mov
aas
mov
mov
pop
cmp
or
in
push
dec
jno
imul
fld
pop
xor
popa
cmp
fwait
int
sub
inc
adc
adc
mov
inc
sub
adc
sbb
fstp
pop
jl
mov
xor
(bad)
xchg
(bad)
cs
jge
xchg
pop
pusha
sub
dec
lahf
mov
or
aad
adc
mov
jg
and
stos
sbb
jnp
(bad)
daa
movs
scas
addr16
jmp
xchg
icebp
(bad)
cmc
jmp
cdq
lds
data16
pop
js
push
and
stos
adc
mov
sti
add
dec
mov
retf
push
arpl
std
data16
test
inc
and
adc
sbb
adc
out
pop
mov
xor
add
(bad)
add
or
or
push
adc
(bad)
or
jns
jmp
jge
jg
inc
inc
dec
lahf
repz
les
dec
pop
mov
stc
xor
mov
call
jl
jmp
cli
inc
out
cmp
xchg
xor
std
sar
sti
jno
add
shr
scas
dec
mov
repz
mov
and
mov
repnz
xor
(bad)
add
aam
popf
xchg
popa
push
and
or
mov
inc
sbb
push
fist
mov
rcl
fidivr
and
jns
sub
outs
js
pop
test
xchg
shr
dec
aas
mov
test
dec
cmp
(bad)
addr16
sbb
or
in
mov
call
inc
jne
and
and
and
sub
lods
mov
pop
test
mov
std
xor
pop
(bad)
jns
xlat
aam
je
addr16
jle
push
dec
aaa
mov
les
adc
push
cld
ds
pop
lahf
jge
mov
sbb
cmp
loop
add
mov
sti
outs
pop
mov
sub
aaa
jg
jno
sar
mov
ret
add
xor
shl
ins
cmc
fcom
rcr
aam
mov
add
mov
push
out
ror
push
or
push
push
bound
inc
mov
push
add
or
sub
hlt
adc
fldcw
pop
push
repz
dec
cmc
sub
(bad)
out
push
push
loopne
int3
cmp
rcl
push
pop
lahf
jns
jo
jo
call
imul
sub
(bad)
cmp
pop
aam
arpl
push
pushf
or
loope
bound
push
xchg
add
xor
or
push
fadd
dec
adc
je
and
jno
into
into
xor
jg
mov
es
ja
retf
xchg
out
rcr
imul
dec
fs
pushf
inc
shl
mov
mov
pop
in
pop
jae
mov
adc
cmp
add
pushf
enter
pusha
fild
imul
and
xor
xor
jnp
mov
xchg
enter
lods
and
pop
cmp
sbb
retf
xchg
clc
or
mov
stos
jle
es
leavew
cmps
push
add
loope
cmc
mov
or
push
or
jbe
(bad)
enter
xor
out
cdq
inc
jb
adc
(bad)
icebp
(bad)
sti
pushf
push
cmp
cmc
and
scas
(bad)
fbstp
push
fdivp
mov
cmp
out
mov
movs
cdq
pop
jb
add
xchg
pop
movs
cmp
mov
or
inc
dec
mov
dec
pop
xor
mov
cmc
jp
bound
xor
adc
out
adc
adc
fnclex
dec
mov
or
stos
dec
mov
cwde
jecxz
jne
in
lahf
shl
sbb
add
xchg
mov
adc
sub
mov
imul
mov
jne
dec
cli
loopne
and
fsubr
loopne
sub
shr
sub
adc
xchg
mov
add
lock
movaps
fwait
jae
dec
cli
sub
stos
int
dec
dec
dec
repz
and
js
and
inc
es
and
shl
inc
aas
sub
js
pop
xchg
(bad)
and
xchg
pop
push
or
xor
lods
das
sbb
es
ret
mov
fcomp
pop
loope
sbb
ds
enter
or
fisttp
inc
cld
call
adc
adc
pop
call
and
sbb
inc
aam
mov
popa
cli
push
cmp
dec
jbe
(bad)
retf
sub
jecxz
(bad)
or
fucomp
jns
adc
aaa
arpl
cwde
add
jecxz
or
loopne
inc
addr16
pop
cmp
inc
daa
and
mov
sub
inc
mov
(bad)
mov
sub
and
sbb
pop
icebp
pop
mov
add
mov
xchg
sti
sub
pop
inc
sub
dec
pop
test
cmp
push
push
mov
adc
or
movs
clc
bound
shl
hlt
lahf
pop
push
mov
lods
mov
push
inc
test
push
fscale
je
dec
mov
cmp
fstp
xor
aas
dec
gs
mov
enter
scas
jmp
js
adc
pushf
mov
push
mov
xor
arpl
(bad)
test
scas
fwait
xchg
rcr
push
cmp
sub
dec
cmovnp
cli
out
and
cdq
outs
xchg
test
and
movs
in
lock
xor
gs
pushf
mov
into
dec
dec
and
inc
and
fwait
pop
xchg
mov
mov
lods
adc
push
cmp
pop
sub
mov
add
or
cmp
aam
jne
jnp
fwait
sub
mov
sbb
pop
mov
add
push
ja
lds
lds
test
into
mul
rcr
adc
mov
aad
push
mov
jle
in
ins
popa
xchg
ret
sub
mov
mov
jb
xchg
inc
(bad)
iret
sub
add
xlat
out
jne
dec
jne
shl
push
das
dec
test
movs
(bad)
into
dec
in
pop
mov
adc
imul
pop
test
jnp
ret
mov
jae
fiadd
sub
clc
lds
mov
or
ins
mov
(bad)
jl
into
inc
ss
test
push
fistp
sub
mov
sbb
jecxz
xor
and
sub
xchg
cmp
xlat
aam
cmp
sbb
cdq
mov
aad
mov
or
ss
and
ret
aaa
push
mov
dec
enter
dec
hlt
je
and
sbb
out
or
cmp
jmp
cli
push
sub
mov
lock
mov
scas
xchg
das
add
push
fmul
ret
push
jb
xchg
idiv
push
xor
or
(bad)
div
and
mov
and
(bad)
jl
cmp
out
xchg
in
xchg
adc
(bad)
cmp
test
data16
arpl
sbb
jno
dec
xor
mov
jg
mov
mov
inc
leave
lock
sti
sbb
jmp
repz
jnp
and
out
sub
jb
call
jbe
jl
int3
and
sbb
pusha
add
and
or
sub
test
(bad)
and
push
add
outs
mov
fst
ins
mov
iret
lea
mov
dec
inc
cwde
mov
aad
cmp
gs
push
nop
push
seto
jo
inc
lds
movs
mov
adc
mov
mov
dec
ins
imul
mov
jae
mov
cli
ret
outs
and
dec
mov
fsub
push
repz
cmc
in
not
add
mov
pop
jmp
(bad)
jmp
mov
shl
jb
add
dec
imul
jg
add
dec
cmp
cmp
sub
cmps
in
adc
inc
lahf
(bad)
ins
or
neg
mov
int3
push
cmc
xor
jp
pop
add
pop
out
ffreep
sbb
xor
inc
les
loopne
ret
or
sti
xor
imul
mov
shr
sbb
repz
stos
mov
cmps
cli
cmp
xor
inc
inc
dec
adc
in
cmps
inc
rcr
stc
xor
dec
fst
lahf
and
jae
mov
scas
jl
jmp
fs
mov
sbb
and
sbb
pop
dec
int3
mov
test
push
(bad)
mov
xchg
push
mov
sar
sti
mov
pop
jo
hlt
movs
pop
inc
outs
fldenv
xchg
rol
test
pop
in
mov
add
retf
dec
lea
sbb
ja
push
add
out
(bad)
sbb
stos
mov
es
adc
test
(bad)
adc
fs
push
jb
mov
inc
or
inc
xchg
sti
int
jg
fadd
sbb
movs
imul
lea
adc
scas
daa
sbb
pusha
push
or
add
repz
cmps
cld
out
sbb
aas
mov
inc
les
call
sar
and
mov
cmp
dec
imul
jnp
xchg
and
ss
movs
fild
mov
repz
or
mov
loop
loop
mov
push
dec
add
or
mov
xor
mov
aad
fst
mov
jle
xor
cmp
popa
in
jg
mov
sbb
adc
push
fisttp
xchg
cmp
pop
clc
repnz
movs
dec
dec
push
sbb
sbb
mov
das
pushf
test
aaa
jle
pop
in
mov
or
lds
lea
pop
cli
fldcw
pop
push
retf
out
sub
rol
daa
(bad)
int
cmp
jg
nop
sti
sbb
sbb
push
sahf
lds
test
mov
pop
call
jp
adc
cmp
jecxz
push
mov
cdq
mov
nop
in
push
cs
push
cmps
(bad)
call
and
fcom
repnz
fsubr
outs
xchg
imul
aaa
enter
pop
or
xor
rol
and
sti
adc
sbb
xchg
xlat
jae
ins
imul
add
mov
jbe
jne
mov
mov
xor
into
(bad)
ds
mov
or
and
test
mov
dec
xchg
ss
pop
cwde
xchg
push
adc
cli
lods
in
add
jbe
aaa
mov
ds
outs
push
ins
jecxz
or
xor
inc
jle
adc
xchg
jle
xchg
mov
or
loopne
sub
popa
nop
ror
das
or
sahf
das
daa
and
out
jle
jns
pop
mov
push
mov
ins
call
xchg
movs
sahf
fld
pop
jg
lock
adc
mov
repnz
mov
mov
adc
test
and
pop
pop
mov
icebp
je
add
into
push
sbb
stos
cmp
sub
movs
out
psadbw
mov
fst
sti
pop
ret
mov
shl
jle
mov
sbb
(bad)
pop
add
add
inc
pop
stos
pop
cli
(bad)
retf
stc
js
xchg
mov
xor
cmp
fs
sbb
and
out
stos
sub
dec
cmp
xchg
inc
pop
rol
sub
fwait
mov
mov
push
js
outs
fstp
call
into
movs
dec
dec
(bad)
dec
ja
mov
xor
xor
mov
cmc
mov
std
jecxz
cmps
mov
mov
rcr
add
pop
and
in
pop
mov
das
push
mov
fnsetpm(287
(bad)
pop
scas
pushf
and
cmps
js
push
and
cmps
loopne
sbb
dec
xor
jp
and
sub
enter
xor
pop
imul
imul
inc
fwait
imul
and
push
inc
stos
out
mov
(bad)
jne
xor
out
and
add
push
lods
cld
pop
call
dec
push
gs
and
mov
retf
int
nop
test
add
sub
sti
mov
xchg
outs
mov
sbb
imul
pop
cmp
ss
mov
leave
xchg
ret
es
push
mov
out
imul
imul
push
int
mov
mov
inc
dec
cmc
iret
daa
xchg
mov
and
cwde
aas
xchg
mov
outs
fs
cdq
imul
jb
ja
pop
xchg
sub
mov
not
fwait
xchg
or
or
jp
and
push
lods
sbb
fcom
pop
and
hlt
inc
cld
fisubr
arpl
(bad)
mov
cmp
add
aad
push
and
fistp
sub
and
outs
sbb
test
(bad)
leave
push
mov
push
add
mov
test
jbe
scas
jo
clc
jae
cwde
mov
sub
push
lea
mov
(bad)
stc
sub
arpl
lds
(bad)
scas
std
into
sar
add
retf
mov
mov
pop
das
iret
std
std
cmc
pop
repz
add
pop
ins
dec
ret
loopne
mov
xchg
add
addr16
rcl
in
(bad)
aad
movs
lea
mov
xlat
xor
rcl
adc
repz
xor
cld
test
inc
xor
jbe
(bad)
das
cmp
out
xchg
mov
in
xor
mov
sub
int3
out
rcl
retf
rcl
mov
(bad)
(bad)
xchg
outs
lahf
shl
mov
aad
test
stc
inc
jge
mov
adc
push
xchg
(bad)
sub
push
call
out
les
xlat
inc
pop
(bad)
mov
seto
js
repnz
out
cwde
fimul
mov
xchg
(bad)
jmp
repz
arpl
shr
ins
sahf
push
lods
(bad)
dec
rcr
repnz
mov
xor
stos
leave
les
xor
dec
test
jl
das
nop
sub
mov
frstor
pop
addr16
cmp
test
and
adc
sbb
mov
jmp
sub
add
add
fwait
jns
jg
dec
out
sbb
(bad)
loope
jl
ss
scas
xor
loopne
outs
dec
xchg
fnstsw
iret
stc
(bad)
in
rol
aad
push
jge
xchg
and
sti
ins
call
sbb
sub
stos
js
and
inc
xchg
mov
mov
sbb
test
sub
mov
jl
loope
ins
adc
add
cmps
arpl
aaa
xor
int3
add
pop
mov
push
fmul
jp
hlt
push
adc
xor
lods
jl
dec
repz
lds
or
mov
and
and
pushf
sub
cmps
mov
fst
ss
xchg
gs
xchg
sub
mov
stc
lds
movs
fadd
test
cmp
cdq
push
mov
ss
xor
movs
movs
outs
mov
bound
push
clc
cwde
or
or
xchg
or
es
pushf
add
inc
arpl
je
or
xchg
jo
mov
pop
inc
sbb
xchg
dec
loope
ja
lods
pusha
push
and
mov
adc
cmps
ret
repz
stos
fmul
push
pop
rcr
in
jno
fist
push
jecxz
sbb
pop
adc
mov
dec
mov
daa
inc
adc
mov
pop
sub
jo
aas
xchg
test
add
inc
mov
mov
adc
loope
call
fidivr
dec
xor
lods
(bad)
sbb
sub
mov
jnp
pop
out
add
pop
jmp
retf
jne
inc
adc
fwait
mov
test
mov
test
dec
rcr
(bad)
(bad)
jmp
out
std
dec
cmp
xchg
imul
inc
sbb
mov
pusha
or
inc
cmp
(bad)
sbb
jp
mov
inc
cmps
or
in
sbb
cmc
and
daa
inc
cli
xor
(bad)
sbb
inc
mov
ins
jg
enter
fsub
pop
fist
scas
jne
and
add
pop
lods
dec
test
sbb
mov
jnp
out
mov
cdq
adc
and
fcomp
sbb
fcmovne
sbb
dec
shr
mov
je
mov
add
mov
popf
movs
push
ja
mov
stc
pushf
loope
scas
fist
jo
xor
dec
push
sbb
inc
jp
xor
adc
mov
mov
xchg
lods
cmp
mov
retf
call
ss
lock
pusha
std
push
aaa
lods
in
cli
repnz
jnp
inc
dec
lods
mov
stos
cs
sahf
adc
push
fwait
(bad)
mov
outs
xchg
retf
sbb
jne
pop
sar
jmp
add
in
jno
cmps
shl
nop
pop
int
pushf
add
aaa
in
sbb
jnp
inc
shl
jmp
mov
pop
in
mov
xchg
xor
jae
dec
ja
mov
adc
sbb
mov
add
int
ds
aad
ins
mov
xchg
cmp
jne
xchg
stos
pop
sbb
pop
fild
lods
fwait
sub
(bad)
in
cmp
jge
mov
es
xchg
cdq
add
ficomp
in
mov
mov
jb
es
ins
mov
hlt
repz
sub
sbb
push
ror
movs
js
outs
std
fdivp
cmp
xor
clc
test
(bad)
sub
mov
jbe
dec
adc
jmp
hlt
mov
sahf
retf
iret
shl
fidivr
dec
lods
lahf
je
(bad)
popf
dec
rcr
sahf
xchg
stos
push
cmps
inc
enter
int
cs
outs
dec
lds
aam
ss
cmp
bound
jecxz
push
or
jl
repnz
pop
jp
or
dec
or
fs
in
cmps
fmul
mov
jmp
jne
xor
out
div
mov
das
mov
movs
cld
xor
rcr
jae
ret
or
mov
sar
or
jne
imul
push
clc
into
call
or
or
std
sub
push
dec
mov
loope
sub
lds
jne
cmp
jb
stc
test
mov
dec
cmp
cmp
jp
jae
cs
cmp
adc
ret
push
popf
fld
push
push
(bad)
mov
popf
and
inc
add
sub
mov
sti
sbb
sbb
imul
mov
cli
mov
sbb
ds
popa
fwait
dec
movs
push
hlt
or
(bad)
mov
rol
scas
mov
je
shl
shl
xchg
fwait
or
pop
sar
fidiv
ret
mov
cmp
ins
in
jns
adc
jb
fist
and
add
clc
lds
push
mov
add
dec
or
jmp
adc
pop
xor
jns
jne
or
pop
out
jecxz
(bad)
mov
add
adc
xchg
xchg
movs
cmp
test
push
add
push
clc
out
in
retf
cmp
sahf
cli
fbstp
inc
pop
adc
cli
xchg
ret
mov
xor
es
jle
dec
jmp
and
adc
mov
stos
pop
out
sahf
inc
aas
pop
jge
mov
jnp
jo
add
not
icebp
test
jl
repnz
xor
mov
pop
push
aad
in
sbb
sbb
test
mov
nop
ror
mov
xchg
and
or
ror
sbb
xlat
call
sti
mov
loop
inc
inc
jne
bound
aam
ds
push
mov
push
fs
clc
jne
lods
dec
mov
xor
popa
sub
cwde
aad
or
pop
pop
or
aas
xchg
mov
les
and
xor
aaa
inc
pop
ror
imul
gs
or
xchg
xchg
ret
or
xchg
leave
jle
rcr
rcr
imul
pop
jae
mov
cwde
xchg
fadd
pop
sub
pop
(bad)
ret
popf
out
mov
fwait
rol
mov
dec
jecxz
and
jmp
add
call
jno
push
inc
int
lahf
test
mov
(bad)
shl
shl
inc
data16
lahf
push
fldcw
push
daa
pop
jle
push
dec
cdq
pop
push
adc
jb
adc
push
mov
xchg
mov
lods
lahf
fidivr
and
cmp
xchg
mov
test
xchg
ins
adc
call
sub
pop
sbb
xchg
cs
xchg
fiadd
(bad)
cmovle
xor
mov
iret
adc
es
pop
adc
or
retf
inc
in
pop
jne
xchg
test
or
add
cmp
rol
jno
retf
pushf
ret
call
mov
and
dec
push
std
scas
xchg
test
jnp
add
aas
sbb
jp
cmc
mov
sub
lods
call
ret
int3
xor
(bad)
jg
push
ror
inc
retf
xchg
loopne
dec
inc
sub
ficomp
mov
jnp
jb
inc
loope
in
stos
pusha
iret
lock
mov
mov
jae
movs
je
retf
ins
imul
cmc
mov
mov
cmp
imul
mov
xor
and
mov
sbb
adc
loop
daa
xor
in
shl
clc
adc
fimul
pop
adc
sbb
repnz
jmp
scas
fwait
out
xchg
sbb
push
ja
cmp
pop
fwait
aam
push
fbstp
or
call
inc
arpl
pop
mov
mov
pop
arpl
adc
jle
(bad)
fidiv
cwde
sub
cld
mov
repnz
sbb
sbb
mov
lock
sub
pop
jns
stos
xor
add
mov
cmp
movs
add
out
out
icebp
scas
fdiv
xor
pop
cld
cmp
bound
jae
mov
jmp
imul
into
inc
fs
arpl
xchg
clc
ret
mov
sub
push
or
dec
mov
xchg
psubusb
in
call
in
sbb
test
mov
mov
mov
lahf
sbb
add
cmps
iret
js
jp
jno
mov
movs
xchg
into
or
popa
sub
fmul
cli
test
cs
dec
inc
in
jp
adc
mov
outs
pop
mov
lods
push
mov
loop
addr16
test
ror
adc
iret
test
into
jp
fs
add
adc
xor
mov
test
fdiv
cmp
sbb
cmc
aas
aaa
xor
mov
cmp
out
sti
loopne
fs
sub
adc
ret
cs
mov
sub
cmp
out
jno
push
pop
test
dec
xor
inc
mov
dec
shl
add
sbb
fnstenv
repz
xchg
or
lods
jge
push
fsubr
and
jae
loopne
fst
xchg
rcr
pop
in
fcomp
cmp
std
mov
retf
jbe
in
data16
(bad)
fdivp
and
add
imul
daa
cmps
fnstsw
jl
pushf
fadd
pop
test
and
or
inc
fidivr
mov
ret
stc
fimul
test
dec
and
mov
jl
mov
pop
inc
jp
hlt
bound
jp
lods
mov
mov
movs
cdq
imul
in
lds
cmp
xchg
cwde
add
dec
cmp
jne
ins
aaa
cmps
push
mov
xor
fsubr
outs
jg
lods
sub
pop
xchg
pop
xlat
sbb
sbb
jo
or
and
std
adc
mov
lock
dec
(bad)
cdq
icebp
rol
add
jl
pop
and
call
jb
push
(bad)
std
lds
inc
movs
loope
fimul
jecxz
push
inc
mov
mov
(bad)
out
push
adc
aam
cmp
lods
add
in
jge
ins
xchg
add
sbb
cmp
sbb
sbb
add
je
ret
push
imul
sahf
mov
mov
adc
or
in
jg
sahf
push
cmp
gs
xor
into
xchg
add
(bad)
int
es
cmp
adc
adc
push
or
pop
or
and
jecxz
adc
or
imul
lods
dec
jbe
mov
test
xlat
(bad)
cmp
test
push
or
pop
push
push
lock
mov
adc
jge
outs
cmps
stc
popa
outs
stos
fbld
mov
xchg
idiv
movs
dec
out
cwde
mov
out
xor
stos
pop
sub
inc
out
mov
sbb
sbb
sbb
pop
jne
lods
sahf
addr16
movs
ss
push
imul
push
movs
or
adc
add
dec
ret
test
out
sub
adc
pop
and
ins
pop
pop
repnz
je
sti
enter
xchg
mov
and
adc
dec
js
mov
lods
add
enter
es
mov
pop
loop
ins
and
pushf
aaa
popf
jbe
pop
pop
icebp
aaa
or
in
push
push
into
mov
sbb
dec
pop
out
xchg
or
sub
sbb
scas
cmp
pusha
cld
sti
jl
xlat
shl
mov
cmp
xor
ins
inc
ret
pop
hlt
(bad)
and
aam
mov
dec
cli
scas
cs
mov
mov
out
fnstcw
sub
ins
mov
test
leave
cmps
xor
jecxz
mov
clc
add
or
aad
fbld
fmulp
push
mov
pop
in
mov
inc
aad
xor
inc
dec
jmp
push
sub
and
repz
mov
or
bound
jae
jl
aad
mov
xchg
push
shl
add
mov
stc
shl
jno
gs
adc
sar
mov
mov
push
cld
pop
hlt
jnp
mov
jns
cmps
push
ja
and
jne
adc
jmp
test
repz
movntq
out
iret
sub
lea
jb
ffreep
imul
rcr
popa
mov
sub
out
xor
fstp
lods
push
add
dec
(bad)
outs
mov
shr
scas
out
loop
jle
es
push
js
ins
je
popf
cwde
jle
fistp
mov
xor
psubsw
imul
adc
daa
sbb
movs
lods
in
fwait
ret
repz
aam
cmps
inc
dec
or
mov
xor
jmp
lods
sbb
cmp
adc
repnz
add
ret
mov
pop
aaa
pop
or
rol
sbb
cmp
inc
nop
push
inc
out
fst
loop
adc
mov
fld
clc
push
sbb
cmc
stos
inc
push
cld
mov
jnp
cmps
imul
bound
icebp
daa
pusha
cmp
sub
dec
and
and
loopne
dec
cmp
jg
lahf
cbw
xchg
jle
(bad)
aas
in
push
sub
movs
out
sub
loope
sbb
cwde
cmc
int3
push
sbb
sub
lods
adc
mov
cmp
lods
xchg
sub
in
adc
mov
mov
push
jne
xor
push
add
cmps
cmp
into
dec
mov
cmp
mov
inc
jbe
sub
pop
sbb
movs
fs
dec
(bad)
dec
jg
cmps
in
or
icebp
adc
loopne
test
nop
shr
mov
cmp
xchg
nop
xlat
lods
jae
shl
cmp
test
jbe
adc
and
or
and
mov
lahf
loope
cs
inc
ret
pop
add
int3
js
add
xchg
outs
ret
fist
mov
mov
xor
fisubr
call
and
pop
jg
shl
dec
dec
sbb
xchg
mov
jo
ret
or
mov
int3
mov
outs
mov
aam
cmp
jge
mov
jmp
jmp
fist
enter
add
sbb
xor
jle
and
sti
sbb
test
push
stos
cmc
repnz
addr16
mov
clc
xchg
lock
rcr
inc
push
xor
mov
push
add
add
std
ja
inc
jp
stos
ja
les
(bad)
mov
push
xchg
js
pop
push
pop
cmp
mov
cmp
(bad)
jl
int3
fwait
mov
lea
pop
ds
push
sbb
pop
jno
push
xchg
cmp
je
mov
icebp
das
and
std
sbb
fdiv
call
pusha
cmps
fimul
fimul
add
mov
mov
rcr
push
xchg
pop
ret
in
xchg
add
jbe
fadd
sbb
or
mov
xchg
push
mov
ret
nop
movs
(bad)
imul
mov
call
pop
push
arpl
mov
adc
mov
xchg
ficom
outs
lods
add
neg
sbb
ja
hlt
jo
or
adc
lock
jecxz
cmp
test
pop
or
shl
imul
jp
aad
ret
inc
leave
or
stos
sahf
jne
pop
cld
ins
mov
jmp
push
add
ja
xor
in
push
xchg
retf
mov
ret
into
call
xchg
aad
mov
seta
scas
lea
repz
rol
jmp
adc
jmp
add
xor
pop
mov
arpl
clc
mov
push
or
addr16
and
arpl
lock
icebp
mov
push
mov
pop
loope
pop
jae
pop
adc
mov
push
cmps
test
adc
mov
or
or
add
pop
cli
sub
rol
std
imul
sub
fidiv
in
push
xor
jae
cwde
test
sbb
xor
mul
outs
jb
add
pop
inc
jbe
inc
push
rcr
mov
xchg
fcom
sbb
into
push
push
test
jbe
mov
ficom
jmp
popf
sbb
shr
pop
mov
cs
cmp
test
jns
push
mov
jle
ret
xchg
dec
adc
lods
xor
test
add
add
in
sbb
mov
arpl
inc
in
neg
repz
sbb
dec
sbb
rcl
add
xchg
nop
adc
pop
addr16
pop
add
ds
jbe
fwait
mov
out
rcl
jo
pop
add
aam
stos
inc
in
test
aad
das
cli
ret
mov
mov
aaa
jbe
dec
lock
ds
add
mov
jne
inc
ret
jno
or
arpl
test
cs
fsub
xor
ret
test
popa
imul
and
push
arpl
ja
mov
pop
shl
xchg
sar
push
pop
hlt
ret
out
daa
sub
cmp
pusha
push
jns
xor
ror
xchg
(bad)
mov
fisubr
push
test
out
in
or
nop
(bad)
aaa
test
mov
lahf
scas
fld
mov
(bad)
into
outs
nop
xor
and
aaa
int3
dec
xchg
or
mov
pop
sub
pop
xchg
mov
xor
sub
push
dec
(bad)
fisttp
xchg
sub
fwait
clc
and
mov
adc
mov
add
cmps
dec
pop
cmp
popa
add
jp
std
push
jno
ins
pop
sub
add
dec
add
aas
xchg
lahf
fcomp
jns
mov
adc
push
(bad)
mov
inc
repnz
and
repnz
dec
jge
or
sub
add
xor
mov
out
sub
scas
pop
jne
sbb
inc
mov
inc
sbb
fnstsw
fwait
add
ins
scas
popf
fisub
pop
pop
sbb
inc
out
pop
xchg
inc
movs
cmp
ins
repnz
mov
sbb
mov
sbb
stos
or
dec
xchg
hlt
and
(bad)
pop
sub
fld
or
pop
mov
push
add
imul
mov
sub
fidiv
(bad)
aaa
jns
gs
add
jl
sahf
jns
push
daa
movs
push
pop
xchg
fwait
(bad)
push
cmp
sbb
and
xor
mov
cmps
(bad)
mov
in
retf
mov
add
and
inc
cmps
out
pop
in
pop
xlat
sbb
ds
clc
imul
adc
iret
(bad)
push
cmp
or
(bad)
fsub
call
fld1
xchg
inc
or
ret
lods
and
mov
push
dec
xlat
pop
popa
pop
and
sub
sub
repz
jecxz
leave
pop
dec
fld
pop
jmp
outs
sahf
(bad)
shl
ins
pop
and
push
(bad)
jns
mov
out
or
cmc
add
(bad)
jb
xchg
sub
cli
add
push
mov
jge
inc
movs
scas
iret
mov
push
std
jmp
bswap
shl
jle
cmp
mov
mov
push
push
cmp
mov
call
popa
arpl
mov
cmps
sbb
cwde
jmp
test
sbb
iret
mov
movs
mov
ja
dec
dec
sub
retf
adc
xchg
out
sbb
in
fs
out
(bad)
sub
xor
xor
iret
sbb
test
inc
mov
xchg
or
dec
repz
scas
fistp
ins
jmp
sahf
sar
jmp
jo
int3
inc
adc
test
sub
sub
or
mov
cmp
ret
xlat
mov
addr16
xor
in
fcmovnu
int3
out
movs
imul
adc
and
in
pushf
imul
or
sub
data16
dec
jmp
push
gs
inc
xor
mov
call
dec
push
adc
sbb
push
mul
xor
ficomp
push
dec
or
call
xchg
xchg
dec
push
cmp
dec
pop
mov
mov
cwde
xor
pusha
push
fs
lahf
jb
push
mov
dec
das
imul
movs
test
mov
in
jmp
push
lods
and
adc
cli
mov
xchg
and
cwde
loope
sti
(bad)
mov
ret
out
in
pop
shl
mov
jbe
mov
sbb
fcomp
pop
sbb
jle
fidivr
ins
cld
xchg
and
xchg
jg
or
jmp
in
jae
cmp
(bad)
mov
cmp
das
xlat
xor
fcmovu
sbb
repnz
leave
in
iret
mov
leave
mov
fistp
cwde
out
and
mov
outs
(bad)
arpl
data16
rol
inc
and
pop
enter
int
pop
ror
frstor
stc
int3
outs
adc
or
data16
mov
pop
add
jmp
loope
or
outs
or
sub
xor
outs
pop
push
push
jge
std
push
jle
xchg
xchg
pop
mov
jae
cs
dec
cmp
xor
mov
repz
jb
icebp
ja
outs
dec
mov
push
daa
or
dec
test
mov
sbb
fsubr
adc
fnstsw
xor
je
test
aaa
xor
fwait
test
stos
or
push
out
push
xchg
xchg
bound
les
mov
adc
jne
jns
sbb
mov
fcom
int
sub
mov
imul
lea
js
pop
mov
xchg
xor
mov
mov
jmp
cmp
xchg
dec
adc
pop
cmc
es
retf
and
test
adc
pop
fadd
dec
push
(bad)
lods
imul
dec
fild
xchg
ds
ror
sbb
xor
xor
aam
jno
fsubp
fsub
jbe
data16
cs
fcom
adc
fsubr
(bad)
cmc
xchg
push
aas
cmp
pop
pusha
mul
sub
(bad)
pop
outs
push
lea
cmps
or
sbb
iret
(bad)
enter
sbb
ds
sahf
stos
fwait
mov
fsub
push
sbb
push
sbb
test
test
pushf
dec
arpl
gs
sti
cmp
cs
pop
mov
test
rcl
cli
xor
or
mov
movs
inc
sti
dec
into
inc
cmps
mov
out
inc
push
or
nop
push
aas
cmp
div
jns
inc
and
ror
mov
dec
cli
pop
mov
cmp
xor
mov
xchg
sbb
sahf
es
or
inc
sbb
mov
fcom
xchg
stos
sub
or
mov
(bad)
(bad)
pop
outs
sahf
xchg
loope
ret
test
adc
dec
jecxz
add
push
cmps
(bad)
jae
mov
cmp
cmp
fwait
xor
push
fwait
add
xchg
and
popf
mov
popa
add
sub
sti
add
call
cmp
fst
push
fld
push
and
and
and
std
lea
inc
dec
sbb
dec
(bad)
inc
xchg
je
or
inc
dec
inc
mul
xor
mov
jmp
int3
gs
js
dec
aam
push
loopne
loope
dec
mov
cmc
sub
clc
cld
mov
ficom
pop
and
std
xchg
pop
adc
mov
(bad)
retf
or
push
sar
add
jbe
out
stos
in
arpl
pop
das
jo
jno
cwde
sbb
add
push
sbb
inc
adc
fnsave
repz
arpl
rcl
loope
sbb
ins
lahf
imul
frstor
das
cmp
fistp
sub
and
add
in
add
add
addr16
cmp
cld
pop
mov
std
aas
cmp
dec
add
sub
sbb
loopne
pop
sbb
lea
scas
and
outs
fidivr
scas
sub
or
xchg
xchg
jae
jne
mov
out
inc
inc
shr
mov
jge
rcl
jo
test
inc
ja
mov
std
add
arpl
sti
pop
push
ds
aaa
xor
dec
movs
or
fwait
pop
push
call
jl
pop
adc
in
and
and
jle
dec
push
(bad)
pop
jnp
shl
gs
inc
out
jmp
cs
mov
mov
sbb
lock
into
das
sub
mov
adc
cmps
loopne
enter
jmp
retf
xor
xchg
out
int
loop
jge
mov
(bad)
jge
cs
iret
pop
add
aas
xor
xlat
or
inc
mov
adc
mov
retf
(bad)
mov
or
mov
push
add
js
adc
test
cmp
jae
dec
push
cmps
jl
outs
ficomp
mov
addr16
dec
or
retf
test
lea
or
or
dec
daa
xchg
sbb
adc
xor
in
inc
sbb
add
mov
je
dec
out
inc
push
dec
and
cmps
xlat
pop
jmp
dec
outs
arpl
adc
nop
aas
xchg
cdq
mov
les
push
in
int
sti
fmul
test
movs
sub
dec
add
ret
fs
inc
mov
and
adc
inc
stos
adc
adc
pop
mov
sub
mov
push
push
xchg
retf
and
adc
out
adc
push
repz
xchg
adc
mov
or
ins
or
sbb
mov
or
repnz
retf
pop
add
ss
pop
dec
stos
inc
or
enter
xor
pop
call
adc
call
repz
or
outs
inc
test
fld
xchg
loop
dec
sub
movs
or
loop
jecxz
push
addr16
int
jb
jp
jge
out
mov
aas
test
mov
setns
rcl
cmp
mov
push
push
out
sar
or
xchg
aam
xchg
pop
or
mov
xchg
fistp
adc
xchg
jb
retf
loope
lahf
cld
or
out
mov
jbe
dec
cmp
fcmove
xchg
jle
cli
js
xor
xor
push
scas
ds
inc
into
lea
xchg
adc
jae
cdq
addr16
fs
sub
test
sbb
pop
jg
aas
push
outs
sub
adc
ds
cmps
push
push
aaa
push
icebp
ins
xchg
stc
sbb
cmp
sbb
idiv
jmp
mov
cs
sbb
idiv
cmp
ins
pop
push
push
dec
pushf
cdq
dec
int3
in
cld
mov
scas
das
xchg
mov
xlat
mov
cmp
neg
dec
adc
jecxz
call
mov
push
fcomp
popfw
js
cmp
fistp
(bad)
pusha
test
and
push
dec
and
sar
xchg
out
jo
fisttp
lods
fidiv
xchg
jmp
into
pop
stos
mov
out
fcomp
and
sti
movs
ret
dec
push
es
lea
push
jns
hlt
test
stc
push
xor
fistp
lods
leave
push
pop
test
ret
cld
imul
out
pop
push
mov
leave
test
imul
push
xor
add
mov
pop
xchg
xchg
jnp
dec
jmp
and
dec
clc
jns
cmp
fwait
cmp
sub
mov
int3
clc
dec
idiv
mov
inc
out
jae
pusha
lods
out
and
push
retf
dec
test
addr16
jle
mov
or
call
ror
xchg
push
call
and
mov
inc
fsub
adc
ficomp
inc
push
aad
icebp
out
xor
pop
xor
inc
mov
jmp
icebp
inc
aad
in
enter
call
fistp
add
and
or
dec
mov
cmps
loope
add
pop
sti
push
or
sti
jo
shl
pop
mov
ror
popf
jae
stos
mov
jg
scas
cld
jno
sub
and
test
xchg
scas
cmp
fld
retf
pop
loop
push
pop
cdq
jnp
ret
fwait
not
sub
xchg
mov
adc
mov
test
dec
sbb
in
ror
mov
or
outs
lock
push
cmc
or
imul
jmp
adc
sub
push
push
pop
mov
ins
shl
xchg
lds
pusha
jmp
push
dec
jno
cld
dec
mov
das
fmul
xor
xchg
inc
xchg
dec
stos
repnz
sbb
addr16
outs
mov
dec
idiv
mov
mov
add
bound
mov
rol
popf
pop
fmul
add
mov
loope
mov
call
dec
fwait
inc
mov
cmc
test
lock
cmp
add
test
les
test
cmp
nop
mov
cld
je
jmp
mov
ja
sbb
es
data16
not
gs
jne
call
out
scas
cmps
jb
push
outs
loopne
mov
test
dec
xor
pop
dec
xchg
std
ds
daa
push
test
out
and
sbb
pop
pop
dec
xchg
stos
jns
pop
addr16
movs
xchg
dec
sar
test
mov
inc
jg
ins
mov
cmp
pushf
out
or
(bad)
jle
out
jl
aaa
push
cmp
pop
cmp
mov
ficomp
jge
dec
xlat
shl
adc
std
ror
xor
adc
std
mov
or
jbe
shl
xlat
cmp
lock
retf
call
icebp
std
lea
arpl
rcl
(bad)
mov
pop
push
jl
stc
and
adc
adc
std
sbb
inc
(bad)
mov
fisttp
aam
jno
adc
je
mov
or
fwait
es
lahf
sbb
test
mov
int3
xchg
xor
or
int3
or
add
arpl
ds
push
pop
(bad)
xor
retf
adc
iret
js
mov
cmp
cmp
pop
xor
sub
fcomi
cli
std
jp
mov
sahf
sbb
sub
in
aaa
add
test
test
div
xor
call
cmp
pop
pop
add
aam
clc
in
rol
mov
jbe
xchg
push
push
cmp
jp
push
mov
cmp
push
repnz
xor
retf
mov
iret
sub
adc
inc
addr16
pop
fistp
lods
mov
not
mov
or
jae
mov
cmp
outs
sub
int
ins
lahf
jle
lods
fld
pusha
sti
outs
ins
les
loop
push
adc
mov
js
pop
xor
mov
pusha
jp
rol
out
fbld
outs
fsub
sbb
push
pushf
lock
and
arpl
xchg
int
lods
mov
push
movs
sbb
push
cmc
(bad)
xchg
aaa
fs
(bad)
in
and
nop
test
dec
lock
pop
loop
jmp
aas
movs
(bad)
(bad)
div
xor
sbb
push
rcl
fs
loope
das
hlt
sbb
mov
adc
and
pop
add
shl
add
lds
xchg
or
adc
fidiv
and
retf
in
imul
test
fiadd
sub
sub
push
add
fisub
das
lahf
push
pop
fwait
aaa
rol
cs
fimul
imul
fwait
inc
mov
push
xchg
pop
xchg
inc
addr16
xor
add
adc
or
mov
mov
out
mov
in
cli
mov
(bad)
fwait
add
and
add
xchg
es
mov
ds
daa
cmp
adc
and
add
push
sti
inc
movs
pop
push
push
jnp
ja
cwde
adc
mov
mov
lock
dec
add
or
jl
xor
arpl
cld
lods
cmp
cs
inc
or
xchg
ins
mul
pop
fbstp
dec
push
ror
inc
mov
sub
imul
icebp
xor
cmp
fs
out
fwait
int3
cmp
or
popf
xchg
mov
push
inc
jno
(bad)
jns
cwde
dec
call
in
into
mov
sub
sub
ins
aaa
add
xor
jo
gs
call
daa
out
scas
jnp
mov
push
pop
fbld
aam
add
std
xlat
or
hlt
ins
stos
push
mov
dec
sub
gs
add
or
aam
xchg
movs
js
cli
aad
aad
mov
ja
scas
push
sbb
cmps
inc
mov
shl
popf
or
cdq
sbb
ror
push
out
jo
loopne
xor
inc
add
cmp
sub
pop
jp
sbb
xchg
jl
loope
jae
cmp
test
sub
jnp
jb
xchg
clc
cwde
add
push
in
pop
xchg
cwde
imul
push
shl
jns
sub
xor
jle
xor
push
pop
fistp
lock
imul
dec
(bad)
or
mov
popa
scas
jmp
jmp
out
mov
int
aad
lods
data16
push
pop
xor
clc
mov
mov
dec
push
int3
cmps
enter
pop
dec
cs
sub
sbb
or
shr
pop
cli
sbb
neg
mov
ret
jns
xchg
jno
xchg
pop
pop
leave
inc
adc
cld
jo
mov
fmul
push
(bad)
jp
inc
ret
nop
push
mov
pop
outs
jecxz
or
mov
pushf
cmp
xlat
jg
imul
dec
ins
repz
jo
ja
inc
add
fidivr
jne
cmp
xor
xor
pusha
and
cmp
cmp
jne
lods
sub
sbb
adc
inc
(bad)
cmps
out
daa
push
sti
out
cli
xchg
or
jle
stos
mov
cdq
fstp
ss
stc
pop
dec
int3
pop
icebp
cmp
xor
cdq
ret
dec
adc
aas
lock
dec
jb
fwait
xchg
loope
xchg
push
(bad)
(bad)
and
xchg
xor
stos
cmps
mov
jmp
icebp
jle
push
das
lock
retf
and
repnz
pop
jns
sbb
xchg
loope
(bad)
cwde
xor
mov
iret
popf
cwde
pop
idiv
cmps
ror
outs
cli
add
push
mov
sub
ror
mov
rcr
mov
and
jmp
ss
inc
iret
popf
add
adc
sbb
cld
xchg
pop
push
out
inc
dec
push
push
icebp
mov
ins
or
in
int
add
(bad)
out
fiadd
dec
add
stos
clc
mov
xlat
imul
cs
pop
inc
sbb
fnsave
clc
test
xor
(bad)
cmps
push
in
(bad)
xlat
xor
test
inc
cld
in
je
mov
call
popf
xor
pop
dec
cmp
inc
or
les
inc
mov
popa
xchg
xchg
jmp
mov
lds
sub
xchg
inc
ret
xor
idiv
mov
cmp
mov
lds
jmp
sub
imul
sbb
out
in
mov
leave
dec
das
dec
and
out
xchg
adc
clc
mul
and
push
pop
popa
repz
popa
scas
(bad)
popf
je
aaa
pop
retf
loopne
lock
mov
dec
or
xchg
sti
mov
clc
or
jmp
xchg
aad
lea
dec
stos
push
pop
pop
ret
lods
das
pop
pop
pop
adc
cmp
sub
repnz
mov
scas
fadd
xchg
test
xchg
jge
pop
inc
cmc
jle
add
jb
das
jg
and
add
jmp
mov
sbb
clc
ret
mov
aas
push
push
push
les
lds
psadbw
mov
je
mov
jne
sbb
test
pop
popa
retf
loope
add
dec
dec
fbstp
test
or
lds
push
pop
and
pop
mov
ja
dec
mov
sub
test
adc
and
sub
mov
dec
dec
cmps
inc
movs
ins
daa
inc
mov
in
in
mov
inc
pushaw
loope
outs
jo
sbb
inc
mov
mov
sub
(bad)
ror
scas
into
out
xchg
(bad)
mov
pusha
xchg
mov
jo
mov
dec
jo
sub
jb
mov
out
loop
xchg
out
outs
add
setge
test
sub
mov
adc
ss
stos
imul
dec
in
js
sub
dec
push
cli
adc
arpl
and
ret
movs
xchg
pop
xchg
xor
sti
int3
xor
or
shr
jmp
loopne
icebp
sbb
clc
mov
sar
fadd
es
(bad)
test
add
icebp
mov
mov
mov
(bad)
popf
rol
push
imul
or
cwde
push
or
imul
or
mov
repnz
dec
popf
jo
mov
or
stc
sbb
das
jns
(bad)
push
jns
mov
hlt
add
repz
sbb
push
sbb
(bad)
cmp
mov
imul
int3
jmp
enter
mov
add
imul
add
push
or
jnp
sti
push
iret
and
xor
lock
call
mov
cmpxchg
jb
add
ins
adc
mov
leave
pushf
jp
and
jge
push
(bad)
jg
lea
pusha
or
mov
add
sub
std
call
fst
das
push
push
in
(bad)
sbb
push
call
int3
pop
add
fdiv
in
cs
retf
mov
inc
push
adc
ins
xlat
sub
ret
int
dec
out
mov
ins
fisub
xor
mov
ficomp
loop
and
icebp
aaa
imul
pusha
ret
cmps
pop
out
or
daa
in
imul
fisubr
pop
add
aad
mov
lods
mov
fidivr
push
xchg
test
fbld
push
inc
add
loopne
cmps
cmp
mov
inc
movs
cmp
or
int3
pop
adc
mov
jle
loopne
jb
loop
stos
iret
stos
add
dec
pop
mov
rcl
fnstcw
add
mov
push
(bad)
in
repz
push
sbb
fdiv
dec
xor
pop
dec
iret
mov
add
ret
jge
pusha
sbb
mov
stc
xor
mov
jl
jb
test
adc
das
sbb
mov
xor
pop
sar
hlt
mov
pop
mov
push
pop
(bad)
ror
mov
push
(bad)
adc
fisttp
je
stc
cmp
adc
jbe
dec
mov
push
sbb
retf
inc
jg
lahf
push
retf
pop
out
mov
sbb
sar
ins
jp
in
pop
pushf
cs
fistp
cmp
lock
aaa
mov
dec
icebp
call
js
dec
cmp
xor
popa
call
loopne
in
loope
xlat
sti
push
fst
dec
dec
dec
jno
cmp
jp
push
mov
sbb
cmc
add
sub
aaa
pop
je
dec
mov
test
test
add
xlat
jge
loope
jmp
xchg
sub
in
push
jae
sub
iret
jo
or
shr
(bad)
out
popf
pop
or
xor
or
lds
jmp
addr16
lds
ret
into
in
xchg
xchg
adc
in
cmovp
lahf
imul
xor
or
ins
jl
retf
outs
cmp
movs
dec
call
add
imul
jmp
imul
adc
cmp
adc
jle
mov
std
stos
sub
pop
addr16
jo
xchg
loop
cmp
(bad)
rcl
pop
rep
push
or
lock
(bad)
in
or
(bad)
sti
aam
inc
mov
xor
sub
mov
cmp
mov
mov
imul
inc
sub
jns
sub
out
inc
fsubr
(bad)
lahf
sbb
fst
or
inc
mov
and
adc
out
or
dec
out
xor
push
not
xor
dec
sub
push
popf
in
test
push
fnstsw
ficom
not
aas
sbb
pushf
sub
pop
shl
mov
adc
mov
ror
ins
aaa
or
iret
mov
(bad)
adc
cdq
loope
mov
xchg
stos
mov
arpl
sbb
call
int3
(bad)
lods
xor
add
movs
sbb
sbb
xchg
outs
imul
retf
loope
es
sar
clc
in
sar
retf
enter
aas
enter
stos
mov
in
mov
sub
(bad)
call
mov
(bad)
cld
in
mov
int3
jo
aas
div
ds
mov
aad
sbb
jmp
sub
adc
pop
ror
jbe
dec
xchg
hlt
sbb
test
stos
cmp
dec
movs
push
xor
repz
loopne
pop
dec
fwait
push
mov
xchg
jp
jne
cmp
pushf
jb
lock
dec
sbb
test
mov
or
pop
mov
divps
es
mov
ds
or
adc
mov
mov
or
jno
xlat
add
popa
mov
cmp
stos
mov
xchg
iret
test
xor
push
sub
add
jo
pushf
div
push
jae
xchg
sbb
es
xchg
clc
popa
add
shr
ds
inc
test
popa
imul
sub
enter
movs
in
inc
and
ret
test
ror
xchg
xor
call
loopne
fmul
pop
jno
or
out
(bad)
push
in
loop
movs
scas
xor
sbb
xchg
pop
and
dec
dec
(bad)
xchg
mov
inc
fwait
or
mov
mov
fldenv
cs
sub
(bad)
retf
fdiv
aaa
cmp
lahf
jle
adc
scas
inc
ret
mov
icebp
leave
sub
movs
(bad)
push
push
loope
fidivr
xor
push
bound
fwait
out
jg
sbb
rcr
adc
xor
imul
test
aas
fldcw
ds
and
xor
icebp
mov
push
retf
sbb
lahf
cmp
jno
outs
not
leave
daa
cmp
sub
adc
popf
inc
bound
loop
fwait
cmp
sbb
adc
push
sub
je
aas
jecxz
sub
dec
dec
adc
mov
js
cld
test
aam
cwde
in
fmul
rol
aas
cmps
inc
std
sar
add
ss
xor
jbe
xor
aaa
cwde
or
cmp
in
xor
mov
into
ins
push
xor
aaa
aam
retf
enter
stos
ins
sbb
and
jb
xlat
mov
add
mov
jns
add
arpl
comiss
lds
sub
jmp
outs
fwait
lds
(bad)
cld
jp
cli
dec
(bad)
dec
stos
fs
iret
inc
adc
adc
js
fdiv
aam
dec
fidivr
and
cmp
addr16
xor
repnz
fs
jle
push
push
pop
and
mov
stos
fcmovne
mov
hlt
add
jno
aas
pop
cmps
mov
push
call
mov
in
push
sbb
and
sub
test
iret
cwde
outs
daa
cmps
mov
cmp
outs
xor
cmp
pop
out
scas
vpcmpeqd
aaa
neg
cdq
loopne
in
mov
and
jns
add
and
xchg
call
xchg
mov
push
adc
sbb
push
mov
jp
push
test
repz
ss
popa
jo
push
out
fs
jmp
mov
sbb
xchg
lds
push
sbb
rol
(bad)
in
shr
scas
dec
jno
xchg
and
pop
push
cmp
cmp
fst
adc
test
xchg
pop
mov
pop
pop
xor
jns
adc
(bad)
fwait
std
xlat
lods
jo
add
jno
lea
push
call
cmp
pop
mov
rol
pop
add
cmp
rcr
mov
sbb
sbb
pushf
pop
jne
sub
popf
push
or
adc
rol
aas
mov
call
pop
sub
out
mov
fadd
jae
dec
pop
cmp
adc
ret
xchg
xor
sti
fwait
mov
mov
scas
adc
sti
xor
(bad)
ja
add
mov
pop
jg
aad
and
popa
add
bound
out
or
neg
dec
pop
cmps
mov
bound
mov
inc
add
add
xor
lods
test
jno
repz
mov
pop
jne
(bad)
test
and
test
imul
push
pop
ret
out
inc
cwde
jle
loope
loop
int3
xchg
dec
and
pop
ins
mov
and
in
inc
or
jbe
ror
jge
xor
xchg
adc
xor
mov
clc
xor
jmp
movs
call
dec
xchg
mov
mov
icebp
xchg
sbb
or
imul
int
inc
aaa
jns
gs
ror
retf
popf
or
dec
xchg
push
dec
loopne
cmp
into
mov
gs
dec
adc
sub
(bad)
push
mov
sbb
test
jne
mov
daa
lods
xchg
pop
inc
shl
push
sbb
cmp
(bad)
ins
repz
das
int3
jl
jb
(bad)
jmp
leave
cmps
dec
jns
pop
or
pusha
out
test
icebp
xor
std
cdq
in
jbe
sub
pop
sbb
and
or
jo
xor
dec
in
mov
pop
call
add
cmpxchg
cdq
mov
and
add
stos
iret
pusha
out
inc
loopne
into
dec
sub
sbb
fdiv
hlt
movs
int3
mov
loope
push
(bad)
lahf
jns
arpl
or
movs
push
jmp
sbb
dec
xor
call
retf
cmp
cmp
test
add
add
dec
push
jg
stos
cmc
push
xor
xchg
add
test
in
dec
jmp
mov
mul
mov
ss
add
and
iret
std
mov
sub
mov
test
ins
stos
fisub
repz
loopne
out
adc
pop
sub
test
fcmovne
sub
test
jl
dec
add
in
lods
lea
fst
je
shr
mov
add
aad
mov
xor
out
or
sbb
jns
ror
clc
adc
nop
test
(bad)
ror
adc
shl
push
cmc
call
out
push
ret
sub
outs
and
xor
ss
ficom
inc
cdq
lea
ins
mov
adc
test
mov
add
imul
mov
bound
out
mov
dec
js
test
or
outs
xchg
aaa
mov
pop
xchg
sub
pop
scas
rcl
lods
inc
sbb
out
lods
and
pop
mov
inc
xchg
dec
nop
push
aad
into
stos
pop
std
out
adc
and
pop
(bad)
push
push
das
movs
fsub
es
dec
jae
mov
xchg
test
pop
jae
pop
jne
dec
pop
stc
xor
repz
cmps
dec
push
xor
adc
in
jle
xchg
sub
test
or
push
mov
sbb
aaa
ret
pop
daa
push
imul
arpl
fld
enter
js
add
adc
mov
sbb
leave
in
cmp
push
xchg
pop
cdq
mov
mov
xlat
add
jnp
shl
in
dec
sub
leave
jne
daa
outs
(bad)
dec
xchg
retf
stos
mov
add
daa
test
sub
fcom
inc
rcr
pop
inc
jmp
mov
cld
inc
cmps
sti
jmp
das
inc
ror
inc
pop
sti
gs
test
dec
nop
ret
outs
sbb
cmp
clc
iret
and
pushf
sar
mov
and
push
inc
bound
mul
nop
enter
mov
test
scas
bound
sbb
pusha
daa
adc
rol
push
out
add
in
mov
push
jl
into
pushf
fxam
in
pop
add
test
in
test
jnp
xor
je
mov
outs
add
loop
mov
and
push
push
cmp
mov
icebp
hlt
jo
dec
dec
jmp
push
mov
xor
std
call
mov
fidivr
enter
xor
test
inc
cmc
cmc
bound
xchg
addr16
mov
rcr
pop
(bad)
add
lods
xor
outs
shl
cdq
xchg
jmp
sub
lods
sbb
cmp
inc
dec
aas
mov
or
dec
pop
push
cmp
clc
(bad)
jg
or
sub
fmul
cmp
xor
or
sub
push
mov
aaa
sar
out
ffreep
jmp
add
ja
xor
xchg
bound
jnp
test
test
popf
out
adc
cmp
jmp
in
bound
pop
dec
retf
cmp
sbb
loopne
inc
outs
ss
xlat
sub
pop
loopne
movs
inc
mov
sub
push
pop
cmc
xchg
mov
inc
cmp
stos
call
mov
jl
cmp
jns
shl
icebp
jbe
xor
lea
mov
mov
mov
fcmovnu
aad
enter
and
push
out
out
sti
sbb
cs
adc
sbb
data16
stos
mov
sub
adc
cmp
inc
outs
jecxz
adc
retf
call
or
pop
push
into
sub
pushf
cld
retf
test
push
xchg
imul
inc
mov
imul
and
mov
add
fld
cmp
sbb
add
xchg
(bad)
scas
les
or
or
jecxz
(bad)
mov
shr
ret
daa
jge
movs
nop
arpl
xlat
cmp
std
sub
push
pop
add
(bad)
scas
fdivr
mov
hlt
or
cmp
mov
ret
shl
jne
add
mov
jne
fs
mov
adc
imul
hlt
mov
pop
sbb
lods
(bad)
cmp
aas
sbb
and
sbb
cs
arpl
sahf
dec
mov
and
sub
movs
sub
cmp
dec
(bad)
data16
int
call
shl
and
mov
xchg
or
jns
dec
add
mov
fsub
dec
jno
xchg
fsubr
ss
xchg
and
jno
aaa
or
cmps
mov
(bad)
xchg
cdq
push
mov
ins
rcr
daa
xor
sar
retf
inc
dec
mov
cmp
sub
pop
xchg
repnz
ss
cmps
jge
xchg
popa
push
std
mov
movs
cdq
mov
jbe
cmc
adc
adc
into
pop
test
mov
xor
mov
sub
sti
add
mov
sbb
mov
sbb
mov
fisttp
xchg
aaa
nop
jge
int
inc
outs
dec
and
and
rcl
mov
cmps
cmps
jge
sar
pop
cmps
or
rcl
or
das
popf
ins
dec
pop
pop
xchg
rcr
sahf
jbe
pop
hlt
movs
mov
inc
xchg
shl
in
push
sub
(bad)
in
jmp
pop
pop
shl
adc
mov
adc
arpl
push
int
mov
cmp
rol
out
sahf
jmp
movs
pop
cdq
mov
das
mov
aad
fidivr
(bad)
mov
cmp
sbb
into
popf
nop
mov
inc
pop
(bad)
mov
jne
std
and
jbe
jo
sbb
mov
int3
push
fldenv
pop
jmp
(bad)
sbb
add
jmp
das
lods
mov
in
fxch
loopne
outs
or
dec
bound
dec
idiv
jecxz
rcr
inc
loope
cmp
dec
out
pop
xchg
xor
inc
fwait
pop
sbb
lahf
or
outs
inc
cli
xor
adc
dec
icebp
inc
aas
loope
sub
jle
mov
push
shl
or
jno
std
pop
jmp
mov
data16
fistp
inc
(bad)
out
mov
sbb
sbb
out
retf
mov
push
dec
inc
mov
int
(bad)
out
xor
div
mov
and
cwde
inc
in
repz
add
cmps
aad
or
(bad)
in
pop
mov
lahf
(bad)
mov
mov
in
fst
imul
stos
mov
hlt
cmp
fdivr
xchg
out
mov
xor
rcr
inc
add
call
dec
adc
bound
repz
jecxz
cs
aad
mov
add
add
jp
repz
jne
inc
xchg
adc
sbb
imul
es
shr
xchg
rcr
aas
iret
gs
pop
sub
dec
stc
push
and
dec
xchg
dec
mov
in
jmp
pop
fisttp
es
jle
ret
jge
mov
out
test
outs
mov
cmc
mov
jmp
shl
int
in
xor
xor
xor
sbb
dec
mov
cdq
mov
jnp
cwde
jge
cdq
push
les
movs
dec
loop
xchg
(bad)
lods
rol
bound
sub
cmp
jmp
mov
xor
jb
sub
xor
fnstenv
jle
adc
call
cwde
stos
(bad)
mov
js
push
hlt
pop
add
shl
fnstenv
mov
add
das
jecxz
clc
jp
pop
imul
je
xchg
inc
pop
stc
mov
jp
mov
aad
push
(bad)
std
sub
lahf
mov
cmp
sub
pop
sub
jg
fst
(bad)
sub
pop
out
add
fld
iret
ret
test
aad
dec
stos
mov
not
cwde
add
pop
loop
mov
ins
xchg
mov
sbb
xchg
sub
sub
jle
push
push
outs
xchg
add
push
xchg
or
dec
sbb
and
push
jecxz
push
adc
dec
in
sbb
retf
push
adc
js
pop
jmp
ins
sub
out
pop
ss
imul
jns
sbb
mov
(bad)
dec
mov
push
inc
outs
jno
adc
pop
(bad)
repnz
jmp
cmp
jmp
shl
(bad)
mov
adc
call
(bad)
stc
cmc
aas
out
xchg
pop
mov
mov
test
and
or
sbb
test
or
lods
xlat
imul
lds
gs
or
in
sub
fdiv
push
or
lods
ret
fwait
adc
sbb
ss
push
out
popa
fld
std
lods
push
or
out
sbb
arpl
dec
and
outs
fiadd
or
push
push
jl
(bad)
and
jne
mov
add
rcr
test
scas
adc
push
fisttp
cmp
mov
adc
dec
(bad)
jb
inc
call
dec
ret
mov
pop
mov
mov
adc
stos
nop/reserved
mov
and
pop
aas
mov
cmps
pop
push
cld
hlt
or
mov
mov
mov
int
clc
push
xor
out
mov
and
imul
sub
(bad)
outs
xchg
pop
or
shl
dec
mov
adc
mov
jno
xchg
in
movs
jne
push
mov
push
add
cmp
(bad)
imul
shl
fidiv
dec
(bad)
cmp
mov
adc
loope
add
and
rcr
mov
jbe
lea
mov
jns
push
mov
out
popf
xor
push
or
lds
mov
pop
mov
outs
push
imul
cmp
nop
loopne
jl
inc
or
xor
aam
jns
lock
sub
mov
inc
fist
adc
sub
xchg
xchg
mov
mov
imul
jle
pop
sub
cli
and
scas
push
sub
repz
mov
add
arpl
xchg
test
cli
cmp
nop
test
dec
out
retf
mov
sub
jp
mov
retf
xor
out
jge
pop
rcr
push
cmp
push
cmc
pop
inc
jmp
cmp
pop
xchg
ds
xchg
mov
repnz
into
jp
gs
jmp
ins
fidiv
mov
jge
inc
test
movs
ins
ja
ret
adc
in
push
rol
add
push
dec
mov
icebp
dec
sub
cmp
fiadd
and
cmp
cli
lods
xor
and
sar
shl
nop
push
ret
push
or
aad
bound
cmp
pop
cmp
xchg
fdivr
rcr
out
retf
popf
jnp
inc
nop
pop
loop
mov
xchg
and
dec
sbb
pop
or
dec
xchg
sub
jno
ins
vpsubq
sti
cmps
mov
push
sub
jb
fcmovnb
and
aas
outs
mov
loope
fisttp
cmp
adc
inc
xor
imul
push
push
or
push
std
sbb
cmp
sahf
mov
arpl
in
ss
mov
shl
aas
xor
add
cdq
cli
or
push
aaa
sbb
sub
mov
jbe
push
lds
adc
out
dec
mov
rcr
aad
out
mov
pop
xchg
sub
jecxz
push
sbb
push
mov
daa
mov
stos
call
ret
mov
ret
cmp
mov
inc
ins
les
int
nop
mov
pop
stos
and
mov
mov
lahf
stos
fcom
jne
dec
outs
fmul
sar
adc
into
test
outs
ret
xchg
jp
enter
jg
(bad)
lahf
dec
aad
xor
and
lods
cmp
cmp
fwait
daa
iret
int3
(bad)
add
jae
cmps
xlat
push
sbb
pushf
out
adc
ins
mov
xchg
adc
jge
sahf
(bad)
in
push
pop
jle
fsubr
pop
sbb
inc
cs
dec
ja
xor
or
jl
xlat
into
lahf
push
mov
das
dec
cli
(bad)
fcomp
sub
inc
add
popf
xchg
sahf
add
sbb
adc
adc
jecxz
fcomp
(bad)
jmp
push
rcr
mul
fnstsw
pusha
xlat
pop
pop
aad
in
sahf
xor
repz
call
xchg
iret
jae
mov
mov
retf
scas
sub
xor
adc
mov
sti
pop
js
in
imul
cmp
mov
adc
(bad)
and
inc
dec
mov
es
or
scas
push
repz
scas
fwait
xor
mov
mov
js
clc
clc
mov
xor
xlat
in
lahf
repnz
mov
push
sar
sub
fldcw
hlt
es
(bad)
and
fisttp
iret
cmc
aas
(bad)
lea
add
sbb
mov
push
push
mov
cmp
or
cs
hlt
fist
std
adc
and
inc
push
jnp
scas
mov
leave
into
test
pushf
aam
dec
dec
or
pop
push
ret
div
or
inc
jnp
sbb
(bad)
stc
int3
cwde
(bad)
and
mov
sbb
push
xor
xor
push
out
or
loope
or
jecxz
and
aam
add
(bad)
mov
lds
outs
mov
mov
or
int
cwde
push
and
adc
idiv
cmp
jmp
retf
in
enter
sub
xchg
fmul
or
or
fs
test
push
mov
test
push
ja
pop
xacquire
int
repz
icebp
(bad)
lahf
xchg
xchg
dec
gs
or
xchg
outs
popa
fild
out
cmp
lods
jmp
jmp
inc
loop
shr
and
in
fs
iret
aaa
es
jnp
mov
ror
pop
push
dec
repz
inc
cwde
lds
ja
in
and
push
adc
imul
cmp
(bad)
fdiv
pushf
push
rol
push
sub
mov
call
xchg
pop
add
dec
mov
add
and
fist
mov
inc
fucomp
xor
(bad)
mul
rcl
mov
scas
jo
sbb
and
test
adc
(bad)
inc
stos
movs
pop
pop
(bad)
movs
lods
add
xchg
mov
imul
in
(bad)
xor
mov
jae
sub
mov
lock
add
popf
xor
dec
in
mov
adc
fwait
xor
push
aaa
loopne
jnp
cmp
movs
popa
outs
cmp
dec
aas
mov
fldenv
inc
mov
adc
js
popf
mov
jmp
jae
cmps
adc
fwait
ins
clc
xor
stos
mov
xchg
pop
hlt
sbb
jecxz
cdq
jmp
sar
ret
fs
pushf
out
mov
out
retf
in
or
adc
mov
test
das
(bad)
daa
sbb
(bad)
(bad)
push
xchg
loopne
pop
std
mov
hlt
lea
int
push
push
xchg
fild
enter
sbb
xchg
push
iret
pop
data16
pop
fild
push
rcr
sbb
mov
adc
ret
dec
push
das
out
cs
inc
dec
mov
sahf
sub
xor
jl
aam
push
fist
daa
aad
push
call
int3
jmp
push
and
mov
daa
lock
fild
fsubr
js
ret
ret
sub
lsl
dec
xor
sub
std
mov
mov
add
lahf
or
cmp
pop
fstp
hlt
retf
cmp
or
pusha
pop
fild
(bad)
jp
retf
ins
nop
cmp
or
test
in
jo
enter
test
jns
jae
retf
cld
push
fadd
sbb
sbb
loopne
call
mov
in
(bad)
xchg
xor
mov
nop
mov
mov
sub
xor
in
jno
pop
xchg
loope
pop
jns
jb
or
in
add
sub
gs
mov
mov
cmp
fld
mov
cmp
pushf
shl
pop
jmp
cmp
stos
call
nop
fisubr
sub
mov
fild
pushf
jl
scas
(bad)
inc
not
into
sbb
cli
pop
int
mov
mov
push
je
stos
sbb
pop
lods
jle
repnz
sub
stos
adc
add
pop
xor
mov
std
imul
fbld
jg
test
inc
(bad)
mov
scas
jg
push
popa
mov
call
pop
out
call
rol
adc
cmp
adc
mov
push
je
sbb
add
cmps
ds
jns
scas
outs
jmp
mov
and
dec
mov
arpl
push
push
jb
jl
xor
and
mov
ror
fnsave
not
ret
push
lods
and
(bad)
fnstcw
inc
loop
jo
xchg
inc
pop
pop
shr
jb
push
sar
iret
lahf
loop
test
ds
pop
cmp
shr
mov
fbstp
mov
mov
dec
cli
and
or
mov
jecxz
test
test
xor
or
pop
shr
enter
pop
push
scas
mov
call
push
inc
jns
xchg
js
jle
and
ja
jnp
add
or
mul
popf
mov
cmp
lea
xchg
pusha
mov
push
pop
lea
test
sub
mov
mov
(bad)
movs
jno
cmp
adc
adc
loope
mov
shl
push
push
sub
ds
fadd
mov
jb
mov
inc
mov
bound
mov
dec
bound
pop
pop
ins
out
mov
ds
js
mov
scas
(bad)
addr16
push
jb
fcomip
test
fld
mov
dec
mov
sub
mov
push
mov
pop
lods
out
push
out
inc
xchg
fld
aaa
adc
mov
adc
xchg
dec
sub
inc
dec
cld
push
pop
fsubr
adc
cwde
stos
xor
popa
inc
imul
std
mov
mov
movs
add
ret
sbb
cwde
cmp
pop
dec
push
stos
mov
retf
fs
das
xchg
mov
popa
jns
push
xor
jns
ret
mov
xlat
rcr
dec
jbe
cld
add
into
dec
xor
jno
test
sub
les
in
add
ja
xor
dec
mov
lods
aas
push
aad
lods
stos
mov
add
xchg
cmp
ret
ret
mov
iret
lea
call
adc
push
lods
test
test
call
mov
addr16
mov
clc
sub
rcr
sbb
or
jo
(bad)
push
aad
pop
iret
fwait
xchg
cdq
mov
pop
mov
gs
xchg
or
dec
nop
retf
and
movs
jmp
outs
movs
sar
sahf
adc
mov
int3
add
data16
and
mov
xchg
xchg
in
xchg
jne
gs
imul
js
mov
aam
xor
mov
sbb
(bad)
push
push
and
fucomi
int3
add
rcl
jns
cmp
push
inc
bound
push
mov
push
mov
pop
ins
fidiv
sub
loopne
push
xor
xchg
test
aaa
fwait
shl
xchg
pop
aad
cwde
retf
mov
fiadd
aam
mov
push
mov
adc
(bad)
nop
dec
sub
jo
jge
mov
cmp
mov
mov
sbb
int3
push
fld
stos
adc
push
sub
pop
cdq
stos
and
and
sti
sbb
push
xchg
mov
imul
push
into
clc
sbb
pop
cdq
xchg
dec
es
enter
arpl
add
dec
imul
fcmovnbe
out
inc
adc
sbb
loope
je
jns
cmc
sub
ja
(bad)
ficom
and
inc
push
push
dec
jge
xor
fild
cld
sbb
jae
mov
dec
inc
cmp
js
repnz
xchg
mov
cmp
cmp
imul
push
dec
je
cmps
mov
in
cwde
rcl
jne
jg
inc
dec
add
dec
cmc
jo
imul
pop
cld
mov
cdq
mov
push
mov
xchg
fistp
ins
xor
or
push
xor
(bad)
fcmovnu
and
xchg
leave
sub
or
push
clc
jmp
xchg
div
enter
sub
shl
mov
sbb
adc
(bad)
cld
hlt
adc
fs
int3
adc
jae
cwde
imul
aas
push
jecxz
fldcw
cmps
jmp
div
iret
shl
daa
fld
sahf
dec
and
jge
jge
loopne
inc
add
cmp
not
cmp
(bad)
and
fs
jmp
cmc
dec
sub
aad
out
dec
sub
adc
mov
test
retf
imul
lahf
enter
repz
sub
mov
hlt
mov
outs
jle
out
test
sub
jae
(bad)
jmp
call
or
push
jmp
nop
imul
(bad)
in
das
gs
or
mov
xchg
aas
js
int3
mov
sub
or
inc
fdivr
sub
cwde
push
arpl
pop
jmp
in
fst
adc
ffreep
cli
mov
jb
test
adc
lods
ror
pop
mov
icebp
inc
test
in
sbb
adc
push
jne
aam
xor
pop
sbb
fist
jecxz
outs
les
jge
dec
ins
lods
jg
mov
jns
mov
mov
not
mov
inc
(bad)
jns
push
adc
movs
mov
in
adc
jmp
cmp
jp
push
les
inc
in
fisttp
mov
mov
push
dec
imul
xchg
cwde
inc
or
aad
mov
ja
cmp
pop
mov
(bad)
xchg
mov
mov
push
xchg
or
pop
arpl
sbb
mov
fstp
imul
add
ror
mov
mov
sbb
fistp
out
adc
sbb
test
sbb
leave
adc
xchg
pop
iret
xchg
sahf
jmp
push
mov
jg
outs
xchg
int3
or
sahf
xor
adc
dec
xor
add
inc
stc
clc
aaa
or
xchg
shr
pop
mov
and
mul
push
fucomi
aam
mov
(bad)
int
sub
fwait
push
pop
daa
jmp
xchg
push
int3
xchg
fimul
sti
ins
repnz
push
lds
popf
aas
and
add
out
loop
pop
(bad)
mov
jmp
inc
mov
mov
cmp
jmp
imul
cmp
xor
and
jp
ret
xlat
add
arpl
out
shl
mov
xor
fild
and
das
cmc
jb
sbb
or
cmps
out
fisubr
js
in
and
retf
ret
sub
or
cmc
mov
adc
pop
(bad)
lods
pop
fnstcw
lea
rol
jmp
sbb
lods
jg
cwde
push
inc
or
xor
dec
cli
jne
retf
test
(bad)
dec
mov
(bad)
inc
test
push
push
jecxz
mov
or
inc
inc
stos
ret
mov
inc
xor
push
fincstp
fs
fld
fdivr
mov
and
inc
dec
or
in
mov
call
add
push
test
xchg
push
push
inc
xchg
mov
cmc
or
call
xchg
xor
loop
push
pop
inc
inc
retf
sbb
dec
mov
jbe
(bad)
adc
push
outs
mov
pop
xchg
push
repz
jp
jo
cli
hlt
mov
add
inc
stos
cwde
xchg
pop
add
inc
movs
dec
int3
push
inc
loopne
push
call
push
push
mov
sbb
sbb
sar
mov
movs
jnp
adc
scas
jmp
das
ficom
data16
sbb
sub
out
or
pop
inc
mov
mov
cmp
add
pop
mov
dec
and
pushf
dec
cmc
mov
mov
outs
cmp
mov
sbb
cmp
fincstp
mov
aas
mov
sbb
aam
mov
int3
das
fcomp
jp
pop
rcl
fwait
mov
cmps
loopne
stos
and
shr
jmp
scas
xor
out
enter
or
pop
adc
out
adc
ins
push
add
aad
pop
jmp
dec
push
jno
loope
mov
cmps
jmp
jmp
add
loope
iret
adc
cwde
jmp
push
mov
mov
fucomp
adc
movs
ins
pop
dec
bound
shl
add
fdiv
ror
push
xchg
inc
mov
sbb
loop
push
push
xchg
ja
fdiv
mov
mov
fst
mov
cmc
cmp
stc
je
push
adc
and
mov
outs
sbb
idiv
imul
dec
xchg
mov
pop
and
mov
sahf
push
dec
cmps
mov
or
or
mov
retf
not
dec
lea
repz
add
sti
mov
pop
mov
push
jno
inc
push
push
popf
jg
mov
cld
push
fs
dec
test
clc
and
sub
or
pop
leave
das
repnz
cdq
xchg
cmp
arpl
xchg
lds
jecxz
pop
dec
repz
je
and
adc
data16
loope
out
cmp
test
mov
push
pop
cld
and
(bad)
cld
push
add
fcmove
mov
mov
arpl
push
or
cmp
pop
cmps
dec
or
retf
and
sub
leave
inc
sbb
cwde
pop
lds
frstor
repnz
cmp
out
test
movs
js
xchg
mov
shr
xchg
into
and
nop
mov
aaa
push
xchg
adc
lods
daa
xchg
lock
inc
push
jmp
xchg
scas
or
mov
call
inc
push
repz
sub
(bad)
pop
or
ja
popa
inc
ret
push
add
(bad)
in
fsubr
cmp
jle
(bad)
push
or
push
loope
cmp
inc
add
in
sub
add
mov
addr16
cmps
jbe
cld
push
std
xor
mov
xchg
push
add
xchg
cld
test
xchg
mov
and
call
rcl
(bad)
xlat
mov
into
ss
out
push
push
jp
vdivss
mov
push
ret
loop
scas
dec
jns
lods
loopne
call
das
inc
dec
aaa
pop
idiv
sub
ja
mov
call
push
push
cwde
mov
inc
sbb
fs
fidiv
mov
push
xchg
jge
add
xchg
cmps
test
jmp
adc
xchg
mov
lods
movs
out
jae
lods
and
mov
in
cmp
and
mov
repz
xor
iret
or
dec
mov
ret
cmp
lods
inc
xchg
jle
lock
gs
push
push
inc
repz
loopne
fwait
call
push
mov
(bad)
int
cmps
repnz
xor
das
jge
mov
(bad)
mov
mov
loopne
mov
lahf
aam
jns
mov
les
sub
lock
jmp
cmc
icebp
fwait
ins
aaa
cmp
arpl
loop
stos
push
fs
lock
iret
retf
mov
adc
(bad)
test
adc
fisttp
call
pop
das
pushf
sbb
sbb
add
lds
or
retf
jle
xlat
xchg
push
lods
dec
cmps
leave
dec
xor
not
jge
jb
sub
mov
test
fsub
xor
xchg
adc
loopne
fcmovu
stos
push
cli
mov
(bad)
sub
int
bound
sub
xor
push
mov
inc
lods
xor
xor
mov
adc
pop
and
ds
add
call
movs
add
pusha
xchg
lods
sbb
xor
xchg
lods
pushf
sbb
(bad)
dec
or
xor
out
repnz
in
out
cli
std
mov
mov
imul
cmc
fmul
aaa
adc
jmp
jmp
fdivr
lods
mov
or
lods
xor
push
and
dec
bound
jns
lahf
in
gs
or
push
rep
pop
mov
cwde
mov
sar
test
popf
xlat
popf
add
pop
dec
rcr
movs
popf
aaa
enter
add
out
loope
add
and
cdq
push
test
in
sub
xchg
bound
inc
cmp
call
in
imul
adc
or
pop
adc
sbb
(bad)
mov
pushf
or
ror
repnz
push
fidivr
push
xor
sbb
mov
and
ror
and
ja
sbb
cs
mov
out
push
hlt
mov
push
loop
aas
outs
pop
imul
test
test
mov
dec
add
cli
leave
rcr
paddq
push
sub
int3
arpl
or
jo
mov
pop
push
jb
sti
movs
iret
loop
pop
fwait
or
jo
mov
and
fist
dec
dec
pop
mov
fcomp
push
xor
(bad)
clc
dec
add
pop
sub
cmp
mov
adc
jl
gs
sbb
call
cmp
sub
push
inc
push
out
xor
sti
dec
sub
inc
push
push
add
call
pop
pop
imul
xor
push
push
sbb
cmp
xor
cmps
mov
mov
lods
test
pop
ret
cmps
and
and
jae
jmp
jne
stc
data16
cmp
out
pop
jbe
xchg
sti
mov
and
lods
js
jg
sub
mov
nop
sub
mov
sub
dec
adc
enter
ss
rol
dec
mov
mov
retf
pop
loop
stos
adc
aam
xor
ret
pop
mov
fwait
cmps
imul
fst
hlt
adc
mov
int3
mov
jp
jg
rcl
daa
je
(bad)
in
cmps
adc
out
fdiv
add
fldcw
mov
jge
stc
test
sub
loope
int3
cdq
jae
(bad)
sub
mov
xchg
in
mov
add
push
rcl
cmp
jl
ins
je
leave
xchg
adc
dec
in
outs
inc
sbb
sub
xor
mov
adc
(bad)
pop
cwde
inc
nop
sbb
sub
daa
pop
mov
lock
inc
cmp
mov
std
add
outs
mov
mov
mov
stc
mov
push
sbb
dec
adc
and
add
xchg
(bad)
out
call
imul
inc
test
nop
jl
xlat
mov
das
xor
xchg
or
fidivr
push
xchg
loope
clc
mov
into
rcr
retf
xor
cs
cmp
shr
mul
push
lods
push
ss
pop
mov
retf
xchg
in
dec
sub
and
inc
outs
and
ins
sub
sti
pop
adc
mov
(bad)
jns
(bad)
or
push
mov
xor
dec
or
dec
jl
push
inc
mov
shr
xor
mov
push
xor
out
js
shr
cdq
movs
ins
mov
mov
jl
xor
fs
in
add
std
(bad)
test
sub
cmc
mov
sub
add
fiadd
sbb
xchg
rol
push
std
mov
(bad)
pop
add
mov
pop
stc
dec
shl
nop
sub
dec
push
or
sbb
loope
xlat
mov
mov
mov
stos
pop
dec
sbb
add
movs
and
add
inc
stc
(bad)
push
test
aas
clc
test
adc
inc
push
cmp
test
add
and
ret
and
repnz
dec
loope
sub
xchg
dec
pop
add
lods
imul
mov
ins
xor
(bad)
fist
push
mul
adc
push
xor
cmp
pop
inc
mov
rcr
xchg
stos
out
push
retf
das
js
mov
nop
push
movs
in
mov
jmp
fsubr
loope
and
popa
pop
adc
pushf
mov
inc
ins
jne
mov
daa
lea
sbb
cmp
mov
jp
adc
loopne
fs
ror
or
mov
inc
out
mov
add
arpl
jecxz
in
mov
pop
dec
dec
fadd
mov
scas
es
test
mov
pop
push
mov
jae
adc
mov
mov
and
add
sub
test
xchg
jnp
sar
bnd
pop
cmp
fs
shl
ffree
cmp
push
sub
call
fcmove
xlat
bound
adc
hlt
push
into
cmp
sbb
fild
dec
adc
jg
fiadd
out
retf
fcom
or
outs
test
repz
push
cmp
shr
inc
out
loopne
stos
sbb
(bad)
stc
daa
test
rcr
add
imul
std
test
jge
mov
dec
sbb
outs
mov
cmp
xor
bound
movs
adc
addr16
test
retfw
push
loop
js
leave
mov
add
mov
cmp
popf
dec
adc
aas
pop
adc
add
cwde
jg
mov
fcom
es
mov
(bad)
mov
mov
dec
pop
mov
sub
nop
pop
out
or
rep
add
jl
rcr
adc
dec
mov
aas
rcr
outs
push
lock
cwde
jge
movs
push
rcr
xchg
fldenv
dec
popa
sahf
xor
rcr
xchg
push
pop
ja
jg
bound
loop
fiadd
adc
jbe
mov
popa
sar
movs
pop
je
stc
shr
icebp
cmp
push
adc
mov
xchg
mov
xchg
sti
jmp
test
and
adc
int3
inc
jnp
jmp
(bad)
out
enter
fcomp
fs
not
mov
mov
mov
jnp
sub
dec
jp
lea
fistp
push
inc
fwait
scas
mov
cmp
sub
dec
fcmovu
sub
xchg
scas
ins
mov
sub
cmc
mov
jns
out
ins
sbb
xor
push
xlat
mov
xor
lods
mov
and
pop
call
sar
fld
mov
pop
(bad)
ds
popa
mov
in
data16
sbb
in
test
inc
lahf
fmul
arpl
mov
pop
xchg
retf
repz
cli
daa
enter
push
sbb
dec
sti
lods
int
xor
xor
mov
adc
mov
sbb
push
jecxz
jo
fisubr
xchg
xchg
xor
mov
ins
add
int
or
dec
push
mov
movs
imul
cld
fisubr
std
cwde
outs
inc
aaa
jne
es
mov
pop
jo
mov
mov
jge
(bad)
(bad)
jmp
fild
(bad)
leave
cmp
aad
xchg
jne
cmp
xchg
mov
xchg
jg
xor
add
sub
xor
dec
pop
or
adc
sub
inc
(bad)
int3
dec
je
inc
xchg
ss
jno
adc
and
mov
inc
rol
pop
ins
ret
ss
adc
stc
mov
mov
inc
mov
shl
pop
arpl
fdivr
repz
call
hlt
pop
push
cs
pop
iret
cmc
sbb
nop
in
dec
retf
cmp
pop
push
xchg
push
or
imul
fsub
shr
mov
fild
inc
push
pop
nop
cs
std
mov
call
into
push
out
sub
inc
shl
mov
sub
fsub
jmp
lods
add
scas
mov
xlat
fild
inc
sbb
arpl
pop
jnp
fldcw
call
mov
or
jnp
mov
pop
mov
cdq
out
inc
push
xor
adc
sub
dec
repz
xor
(bad)
push
and
cmp
or
or
(bad)
fadd
and
(bad)
cmp
cmp
cld
mov
push
and
stc
enter
mov
pop
leave
and
adc
sbb
mov
in
pushf
push
loope
xor
test
test
pop
inc
jnp
add
mov
sub
mov
popf
test
shr
push
dec
clc
xchg
pop
mov
jnp
in
cli
out
push
gs
jmp
xor
bound
dec
shr
adc
movs
lods
push
ss
sub
push
sbb
fmul
hlt
(bad)
dec
adc
in
stc
jge
jno
jo
inc
mov
fdiv
in
mov
inc
mov
and
inc
retf
add
pop
imul
add
xchg
sbb
rol
sbb
(bad)
sbb
mov
mov
sbb
cmps
ja
mov
movs
add
jecxz
sahf
push
adc
xor
mov
cs
mov
stos
into
xlat
popa
pop
xlat
outs
data16
xchg
ficomp
popa
mov
mov
mov
movs
and
out
mov
xor
out
ja
push
loop
jl
loop
iret
in
pop
and
cmps
sub
push
fst
xor
cmp
(bad)
lock
push
imul
clc
adc
stc
into
jnp
pop
out
clc
mov
sub
sbb
in
inc
ss
scas
adc
xor
clc
push
stos
xor
mov
sub
in
ins
gs
xlat
mov
dec
sbb
(bad)
sub
jb
cdq
lods
ret
jg
mov
mov
mov
(bad)
mov
mov
cs
sub
and
je
(bad)
push
lahf
shl
and
fscale
mov
shr
test
jecxz
push
add
das
add
int
leave
out
push
pushf
loopne
xor
retf
enter
sub
(bad)
sub
mov
fld
xchg
out
cmp
jns
mov
ins
js
jae
ret
push
je
jge
call
mov
ins
jmp
pop
dec
sub
mov
iret
cs
mov
in
fstp
push
movs
fcmovb
lods
mov
les
mov
jmp
pusha
xchg
dec
fimul
dec
xor
icebp
imul
and
or
xchg
pop
xchg
pop
in
ficomp
or
sub
push
cmp
mov
push
inc
push
dec
mov
aaa
add
inc
inc
popf
mov
daa
mov
push
xlat
fs
out
mov
dec
data16
fst
fsubr
fimul
fmul
and
clc
(bad)
add
cli
and
add
sub
mov
std
shl
fwait
into
pushf
test
pause
jns
test
call
iret
idiv
ds
add
lds
push
dec
jns
jecxz
pushf
xchg
(bad)
mov
imul
pop
push
dec
aaa
popa
aam
outs
push
neg
xchg
inc
sub
scas
es
mov
add
out
repz
or
call
mov
je
ins
xchg
cmp
aam
lods
sbb
aaa
or
jle
mov
mov
lea
ret
jg
cmp
mov
int
stc
xor
push
push
mov
push
sbb
dec
fldl2e
xor
dec
add
add
push
mov
inc
ret
inc
adc
push
fld
enter
cmps
push
mov
sbb
xchg
mov
mov
movs
cmps
cwde
ja
mov
out
pop
cmp
addr16
cmp
mov
push
inc
stc
push
out
xchg
xor
or
mov
mov
in
xor
dec
add
call
push
rcr
or
ror
mov
cmp
dec
ss
shl
cmp
es
clc
inc
add
cmp
arpl
fcom
sahf
shl
sub
mov
mov
ins
pop
push
add
mov
int
lahf
mov
jmp
lock
xchg
mov
mov
mov
sbb
cwde
fst
push
sbb
jmp
lods
out
or
sub
xor
mov
pop
mov
push
ret
cmp
or
mov
inc
imul
lahf
xor
out
arpl
test
xchg
aam
push
jne
jbe
mov
mov
dec
and
mov
movs
shl
imul
js
sub
push
push
fisubr
jne
sahf
mov
imul
scas
mov
sbb
adc
mov
ret
lods
adc
pop
add
mov
sbb
(bad)
or
cmp
fsubr
jecxz
ret
enter
hlt
push
dec
inc
xchg
xchg
mov
push
mov
pusha
xlat
and
test
or
cmp
call
jg
dec
cmc
xor
sbb
js
mov
adc
sbb
add
arpl
xchg
addr16
cmp
adc
push
cmp
ins
mov
inc
movs
mov
lds
sbb
call
aaa
cmps
and
and
jb
mov
inc
lea
push
sub
out
scas
push
push
pop
pusha
push
sbb
cs
sar
aas
(bad)
push
fld
out
push
cdq
pop
xrstor
lea
aad
push
out
inc
add
or
push
leave
outs
aad
repnz
clc
jbe
xor
cdq
ds
icebp
repnz
dec
sub
nop
inc
fild
imul
xor
mov
(bad)
daa
cmps
pop
outs
mov
daa
inc
fisubr
mov
loopne
(bad)
mov
ss
sar
fild
push
rol
test
imul
(bad)
bound
test
cld
bound
call
and
or
icebp
movs
mov
out
sbb
xchg
les
xchg
bound
lds
ret
daa
pop
dec
jp
mov
stc
pusha
int
(bad)
shr
imul
rcl
ins
mov
out
xor
jns
aaa
les
imul
mov
xor
fst
and
push
jnp
add
xchg
sbb
in
sahf
pop
mov
lods
(bad)
mov
jp
loop
adc
in
push
test
out
dec
(bad)
adc
cmp
pop
aad
sub
(bad)
pop
out
pop
pop
ins
retf
out
xchg
mov
sti
inc
test
je
mov
scas
xrelease
sub
push
sbb
jge
out
sbb
leave
nop
popf
push
dec
dec
dec
adc
mov
jle
pop
and
sub
enter
in
test
xchg
or
std
call
test
push
or
data16
movs
loopne
add
sub
dec
and
cmps
in
dec
push
ror
pop
fwait
add
inc
fld
aas
lods
nop
and
or
outs
jle
jl
aam
push
scas
cmp
in
mov
cdq
pop
inc
movs
loopne
aam
and
pop
pop
ja
sbb
jecxz
gs
sub
jge
imul
ds
retf
stc
mov
out
idiv
in
or
cmp
mov
push
xchg
and
cmp
rcr
out
inc
push
loopne
push
and
mov
cmc
mov
adc
adc
inc
dec
pop
(bad)
or
cli
dec
imul
mov
cmp
outs
jl
xor
scas
sar
outs
je
(bad)
jmp
cwde
xor
pop
fidiv
and
jns
loopne
jg
repz
sbb
aam
out
(bad)
iret
dec
pop
popa
icebp
scas
or
jae
inc
outs
sub
shr
pop
out
std
sbb
xchg
push
mov
call
nop
xchg
dec
test
add
leave
xchg
or
mov
or
or
ffree
pop
cmp
je
aad
pushf
mov
pop
dec
jmp
fld
imul
or
xchg
inc
lds
rcr
jnp
repnz
stos
out
clc
pop
sahf
adc
xchg
fisub
cwde
(bad)
ret
or
inc
xor
div
jmp
push
pop
retf
or
mov
call
mov
scas
jmp
mov
pop
mov
sar
out
inc
push
dec
ja
or
iret
or
(bad)
in
sbb
inc
pop
cmp
pop
and
aad
pusha
imul
aas
sbb
xchg
test
xor
add
mov
or
xlat
ficom
push
cdq
push
inc
push
push
addr16
lock
push
pusha
adc
cs
mov
lock
xor
pop
les
cmps
in
push
jo
out
mov
std
add
popf
mov
mov
mov
fstp
test
mov
xchg
mov
nop
clc
repz
mov
xor
ss
or
pop
adc
dec
cmp
dec
pop
xor
or
pop
lds
push
stos
lods
mov
js
loop
cmp
xchg
pusha
(bad)
mov
ins
(bad)
mov
push
(bad)
into
mov
pop
retf
stos
sub
jle
push
std
neg
mov
pusha
sub
push
rol
dec
push
mov
push
add
add
push
inc
dec
(bad)
jno
enter
fiadd
ret
mov
push
rol
popf
arpl
add
aaa
and
cs
push
xchg
inc
cli
add
fwait
xor
xchg
in
cmp
stos
(bad)
je
adc
dec
mov
cmp
cwde
retf
iret
cld
cmp
es
rol
mov
lods
add
arpl
inc
xor
shl
ss
call
popf
sub
pand
jnp
mov
outs
leave
pop
mov
aas
jno
movs
bnd
scas
lock
outs
call
push
fmul
inc
xor
in
jg
adc
sbb
in
jb
imul
jmp
hlt
xor
daa
cmp
push
das
dec
mov
jbe
retf
or
in
sbb
(bad)
out
nop
and
jle
or
push
out
cmps
and
js
(bad)
sbb
xchg
rep
xchg
pop
mov
popa
jnp
push
fldcw
mov
jg
ror
push
xlat
stos
in
add
mov
popa
adc
inc
js
jbe
cs
arpl
xlat
mul
pop
aam
cwde
pop
fstp
mov
mov
push
jnp
retf
lods
push
mov
push
inc
jno
pushf
jne
enter
fistp
mov
mov
pop
dec
xor
dec
data16
push
(bad)
(bad)
lahf
jmp
nop
pop
xlat
dec
xchg
leave
ins
fst
or
(bad)
(bad)
clc
(bad)
aad
add
xor
xchg
shl
test
cli
xor
or
inc
sbb
call
sbb
in
lahf
fild
and
fist
cmp
cmp
dec
pop
mov
mov
sbb
and
jnp
sub
mov
jmp
inc
xchg
sub
jnp
jnp
pushf
cmp
sub
cmp
cmps
and
lahf
mov
mov
repz
jl
loope
mov
ins
ds
add
fdivr
mov
test
adc
jo
nop
xchg
jg
xchg
jp
pop
loopne
lea
dec
fcmove
jae
pop
pop
outs
and
in
dec
inc
mov
movs
push
inc
pop
push
or
iret
sub
iret
cld
fistp
lds
inc
xlat
mov
mov
adc
mov
mov
scas
xchg
jmp
jbe
repz
or
inc
fldcw
pop
jbe
add
sub
mov
sbb
mov
xchg
push
xchg
mov
sbb
push
enter
xchg
jae
jmp
enter
sub
lahf
add
add
jecxz
outs
xchg
loop
fs
sti
aam
bound
(bad)
icebp
mov
and
pop
push
cmp
(bad)
xor
stos
xor
sub
fs
jb
(bad)
icebp
cli
scas
(bad)
mov
push
push
mov
dec
jmp
ret
adc
aas
rcl
push
lahf
call
in
repnz
and
(bad)
imul
push
(bad)
out
inc
push
inc
sub
stos
sub
imul
bound
xor
not
inc
sbb
push
test
fisttp
mov
aaa
lea
lods
push
xor
ret
cmps
cld
bound
cmps
pop
test
addr16
sbb
in
ret
pop
lea
(bad)
add
push
pop
xchg
stos
int
jg
test
les
fcmovnbe
test
sbb
test
xchg
hlt
cmp
jne
pusha
xchg
jmp
add
mov
loope
push
icebp
ds
mov
and
and
adc
adc
fdivr
add
ret
popa
pop
push
cmp
or
movs
push
or
pop
cmp
sub
stos
pop
dec
(bad)
ret
adc
mov
mov
mov
retf
adc
or
or
repz
loop
daa
cdq
mov
or
mov
push
mov
icebp
pop
cmps
cmp
int3
cmp
cwde
and
loopne
in
mov
sub
cmp
sti
lds
jmp
adc
adc
pop
ins
sub
(bad)
sbb
retf
popa
cwde
dec
cdq
fs
mov
sbb
es
jmp
xchg
fsubr
lock
dec
enter
xchg
add
xor
dec
icebp
mov
sub
les
xchg
(bad)
cmp
cmc
sahf
(bad)
adc
mov
add
rcl
jg
fsubr
mov
adc
call
int3
js
cmp
mov
add
jns
sub
dec
sbb
movs
or
dec
test
(bad)
sti
add
push
in
xchg
inc
js
jns
jns
adc
es
fwait
lock
push
pop
outs
movs
cmp
imul
lods
cmc
sub
test
cs
(bad)
mov
xchg
ret
cmp
test
pop
pop
xor
or
sbb
fmul
add
xor
repnz
out
icebp
js
sub
stos
test
xor
push
loopne
aad
pusha
lods
sahf
test
xor
mov
out
std
(bad)
xchg
cmc
mov
lahf
sub
frstor
cmp
daa
lds
mov
popf
dec
mov
pop
(bad)
add
jns
and
sbb
jae
popf
(bad)
retf
sub
fdivr
and
mov
aas
cld
imul
xor
cmps
push
pop
fprem1
mov
ins
mov
popa
xchg
mov
cmp
loop
fidivr
pop
cmp
inc
sbb
fcom
rcr
sbb
adc
jmp
(bad)
call
jbe
xor
imul
jl
fisubr
add
aas
std
loope
adc
xchg
mov
test
fmul
jl
out
data16
je
les
loope
not
pop
fcom
sbb
fcmovu
add
aas
jge
fnstcw
push
pop
in
in
in
es
loop
pop
xor
and
xor
ja
xor
mov
and
and
push
pop
mov
shr
xchg
(bad)
cmp
movs
xchg
jmp
in
lods
fadd
inc
into
data16
scas
xor
loope
ret
je
mov
imul
ficom
or
in
(bad)
data16
add
daa
push
stos
cmp
xor
clc
mov
test
pop
mov
jns
push
jae
ja
(bad)
mov
jbe
call
in
das
sub
sub
stos
cdq
sti
sbb
or
loope
mov
les
push
aas
or
in
sub
fwait
sub
nop
mov
scas
xchg
mov
mov
jne
mov
out
imul
mov
xchg
xor
fisttp
inc
sub
cmp
xor
dec
inc
and
jg
push
xlat
iret
mov
xchg
fld
cmc
sbb
jnp
out
xchg
xor
sbb
sbb
fwait
inc
aaa
aaa
xor
jp
test
push
cmc
call
or
ss
lods
xlat
add
jg
loope
cmp
xchg
movs
cmps
pop
inc
push
pop
xchg
leave
jne
pop
aas
pop
sbb
shl
ror
jmp
into
and
cmc
xchg
pop
and
test
enter
mov
cs
call
sbb
and
jne
ss
test
enter
fist
push
fcmovnu
and
fld
inc
lds
cmps
pop
jl
xor
out
mov
stos
sbb
cld
loope
jmp
in
je
mov
ss
aam
std
cmp
daa
scas
and
mov
cmp
retf
maxps
(bad)
dec
push
shl
in
scas
cs
nop
imul
sbb
push
jmp
inc
test
retf
loop
imul
jecxz
punpckhdq
sub
mov
pusha
jmp
dec
add
dec
dec
jo
loopne
xlat
sar
push
fnstenv
jae
icebp
shl
loop
nop
lahf
scas
ret
(bad)
outs
dec
cmps
mov
jno
fcomp
fst
or
and
mov
pop
(bad)
sub
arpl
imul
retf
ins
fbld
mov
xor
dec
imul
lea
jg
mov
dec
cmp
and
xchg
rol
into
xor
dec
dec
sub
mov
mov
pop
sub
jns
and
pop
mov
out
mov
jmp
mov
aam
icebp
inc
sbb
add
(bad)
pop
jnp
ror
add
and
popa
mov
leave
jle
fwait
xor
mov
call
mov
mov
sub
fnstcw
retf
int3
or
enter
addr16
mov
jnp
sub
dec
std
shl
ins
iret
int
pusha
inc
push
scas
addr16
pop
mov
sub
into
fmul
outs
xchg
inc
clc
mov
ret
adc
push
pop
sbb
fisub
inc
jl
inc
pop
inc
jns
in
inc
xor
xor
cwde
repnz
faddp
out
sbb
adc
mov
sub
mov
(bad)
adc
dec
(bad)
rcr
aaa
push
rcr
arpl
leave
mov
das
mov
inc
xchg
aas
push
imul
lahf
cmp
into
jle
adc
xlat
cmc
stc
in
in
retf
test
mov
lods
mov
pop
das
mov
call
mov
sub
sbb
jle
test
add
out
into
lea
scas
and
mov
aas
daa
test
adc
jmp
into
ror
mov
sbb
sbb
int
mov
fnstsw
lahf
sub
or
jge
push
movs
or
mov
add
dec
cmps
arpl
loop
lock
arpl
mov
repz
or
repz
jno
jbe
xor
data16
shl
imul
out
xchg
xor
cmps
sbb
movs
mov
xchg
mov
out
icebp
cmp
cmp
repnz
xchg
pop
sub
aaa
not
ss
sti
repnz
xchg
sbb
mov
jae
pop
jle
jns
lea
mov
dec
hlt
rcl
add
mov
push
jle
mov
add
mov
clc
std
xchg
data16
stos
sub
popf
loop
xchg
cwde
cmps
adc
sbb
pop
repnz
jmp
push
call
jo
fiadd
pop
push
push
sub
call
xor
cmps
test
outs
cmp
xchg
stos
test
xchg
stc
cmps
sbb
rcl
shr
dec
shr
adc
icebp
mov
ins
imul
icebp
daa
ins
mov
in
lahf
shl
retf
and
sbb
jge
push
and
mov
or
pop
mov
jp
in
sbb
add
push
jmp
(bad)
retf
aaa
sbb
ror
dec
int
pop
aas
jno
dec
ja
dec
daa
imul
stos
stos
dec
inc
ret
xchg
nop
dec
dec
out
pusha
daa
xor
inc
repz
or
leave
repnz
or
jp
push
pusha
and
dec
mov
out
dec
mov
push
sar
xchg
in
lods
scas
les
inc
(bad)
into
lods
xlat
mov
repnz
call
and
mov
aaa
lods
jmp
retf
fmul
and
xchg
sbb
into
ins
fidivr
push
add
addr16
icebp
push
aas
icebp
dec
in
jp
jns
jle
mov
aaa
loope
popf
bound
jp
pop
cmp
add
sub
ins
jmp
(bad)
lods
shl
pop
dec
jae
pop
loope
and
cdq
push
sub
mov
add
scas
dec
retf
jle
mov
push
pop
mov
hlt
add
mov
xor
mov
adc
scas
jle
push
clc
push
test
imul
arpl
jp
jo
cld
pop
inc
fnsetpm(287
add
enter
rcl
popf
dec
pop
push
dec
xchg
fisttp
xchg
fsubr
(bad)
cwde
mov
jmp
pop
push
popa
xchg
jle
xchg
hlt
es
out
repnz
lahf
mov
mov
mov
mov
xor
call
ins
or
int
(bad)
jmp
jno
popf
pop
push
mov
pop
mov
adc
add
cmps
outs
push
in
test
gs
into
add
in
enter
ss
xchg
jmp
int
scas
pop
push
add
ret
std
sahf
lahf
loop
lea
(bad)
cmp
int
mov
xchg
jno
sar
sub
mov
je
bound
movs
call
xchg
mov
mov
stos
adc
pushf
xlat
cmp
hlt
mov
add
dec
pop
mov
outs
pop
adc
das
in
pop
push
daa
pop
out
xchg
(bad)
push
push
imul
cmp
shl
mov
xor
ret
je
jecxz
lods
nop
(bad)
pop
xor
test
int
cld
mov
inc
(bad)
pop
xor
mov
js
add
cmp
mov
ins
addr16
dec
aad
in
outs
repz
mov
iret
shl
sbb
and
mov
and
pop
mov
sub
int3
jbe
ins
xor
mov
mov
das
movs
sahf
(bad)
rol
or
jnp
jle
sbb
popf
aam
hlt
fcomip
clc
sub
sbb
mov
retf
call
xchg
jg
fsub
mov
(bad)
push
int3
push
cmp
movs
cmp
mov
call
dec
test
clc
jl
je
into
cmps
sbb
push
mov
xchg
sar
mov
cmc
enter
inc
arpl
xchg
dec
lahf
sahf
xor
pushf
mov
test
ret
mov
ins
or
pop
in
add
nop
shl
cmp
pop
inc
dec
jnp
shl
lock
fnstsw
mov
mov
jmp
test
adc
jmp
inc
cmp
xor
xor
lds
test
pop
test
icebp
popf
cmps
ds
test
pushf
and
inc
adc
dec
pop
idiv
xchg
push
daa
cld
loopne
mov
and
stos
in
add
out
xchg
jmp
(bad)
addr16
xchg
popa
mov
into
call
sbb
inc
dec
add
outs
stos
add
into
fwait
es
shl
aam
cmp
outs
and
mov
test
dec
loop
fadd
leave
xor
retf
aaa
movs
into
mov
cs
imul
pop
movs
(bad)
inc
ja
jnp
inc
fld
cld
(bad)
push
cmp
js
push
test
lods
mov
adc
movs
or
shr
ja
stc
and
xchg
(bad)
ror
dec
add
imul
lahf
pop
push
pop
sar
fidiv
fistp
(bad)
jmp
das
pop
bound
gs
movs
sub
movs
je
sbb
mov
xchg
sti
fst
and
lods
fwait
pop
mov
push
lock
daa
mov
daa
fisttp
xchg
(bad)
das
pushf
scas
push
mov
cmc
inc
add
mov
imul
call
xchg
out
call
add
inc
lahf
adc
lahf
xchg
test
lahf
mov
cmp
loopne
(bad)
dec
and
mov
fnstcw
jns
push
fnstenv
(bad)
add
jns
or
stc
add
dec
mov
aaa
pop
int3
mov
ins
out
mov
jg
pop
scas
stc
lods
add
pusha
out
mov
pop
and
js
retf
jp
lods
add
fcmove
pusha
inc
adc
mov
adc
mov
adc
jb
xchg
pop
and
xchg
lock
mov
imul
mov
inc
test
xor
out
test
repnz
adc
xchg
(bad)
mov
or
mov
xor
jmp
mov
adc
nop
fwait
sbb
repz
sub
fld
into
or
inc
pop
jae
out
loop
(bad)
add
add
repz
les
xlat
pop
xchg
(bad)
out
mov
xchg
jmp
outs
daa
jecxz
(bad)
jae
sub
ins
add
jg
rcl
pop
(bad)
adc
jno
fmul
(bad)
inc
test
ret
in
fstp
pop
cmps
das
lds
pop
xchg
mov
push
aaa
xor
mov
pop
dec
outs
and
jne
ins
mov
in
mov
sbb
adc
jecxz
xchg
xchg
popf
int3
loopne
xchg
dec
or
into
inc
mov
enter
and
jmp
(bad)
out
aaa
mov
test
loop
jle
cld
(bad)
cmps
cld
mov
mov
(bad)
frndint
jmp
into
call
daa
(bad)
xor
xor
test
stos
xor
(bad)
mov
add
cmp
sub
mov
sub
adc
push
cmp
jmp
xchg
leave
mov
in
push
adc
pop
jbe
cmp
scas
dec
jnp
or
std
test
loope
push
inc
dec
shl
and
adc
xchg
es
div
js
jb
inc
leave
int3
jl
call
call
rcl
jg
cmovnp
repnz
sbb
and
sbb
mov
ret
sbb
aaa
dec
movups
inc
test
ds
push
pop
ret
stc
sub
sahf
mov
in
dec
add
les
xchg
xor
mov
popf
lods
(bad)
push
jecxz
shl
or
imul
shl
xor
sbb
and
popf
adc
daa
inc
xor
mov
pop
(bad)
stc
movs
retf
sub
stos
xlat
test
repz
adc
in
push
sbb
and
cmp
aas
jg
imul
call
mov
fisub
mov
inc
cwde
addr16
or
ret
div
ins
mov
les
adc
or
push
stos
or
adc
mov
gs
shl
(bad)
jo
or
jbe
lods
pusha
les
jl
sub
xchg
aam
mov
pushf
stc
xor
or
mov
adc
lods
add
cdq
pusha
xlat
adc
push
test
xor
fild
push
sub
xlat
and
test
ret
mov
pop
(bad)
or
movs
sar
dec
fistp
and
int
push
cmp
loope
or
ins
stc
push
scas
rol
dec
xchg
xchg
test
pop
cs
arpl
fld
mov
popa
mov
dec
or
jb
mov
push
imul
jle
popf
icebp
ja
ror
(bad)
dec
je
lea
mov
jle
and
mov
sbb
ret
sbb
xlat
inc
rol
sar
sub
std
fisubr
and
addr16
fdivr
loope
and
mov
shl
nop
ins
add
ins
jb
mov
push
test
retf
adc
ror
fadd
or
sbb
cli
dec
(bad)
repz
xchg
jb
mov
mov
popf
cmp
inc
push
shr
mov
jecxz
dec
mov
and
push
(bad)
push
sbb
in
retf
das
adc
mov
cli
pop
jg
jp
mov
cmc
(bad)
loope
cld
jmp
sbb
cs
jno
sbb
shr
cmps
sahf
in
rol
dec
and
and
or
fidiv
cmp
adc
adc
movs
push
add
retf
test
sub
ret
push
push
movs
cmps
add
or
addr16
shr
lods
lock
test
retf
arpl
sti
cmp
sub
mov
pop
or
data16
dec
xchg
call
xor
enter
dec
cmp
push
lds
mov
pop
mov
xchg
pop
inc
sbb
popf
sub
pusha
fwait
inc
loopne
cmp
dec
mov
rcl
aam
retf
popf
in
cmp
test
pop
loop
and
repz
xchg
pop
push
push
sub
leave
out
movs
xchg
call
sbb
mov
mov
xor
pop
pop
repz
fst
call
pop
nop
sub
loopne
xlat
cmp
pop
xor
retf
sub
adc
mov
ret
gs
mov
sub
xchg
adc
mov
jmp
dec
icebp
popf
ds
pushf
fnsave
mov
loopne
ja
(bad)
mov
sub
xlat
jnp
add
stos
frndint
xchg
pop
(bad)
rcl
(bad)
aaa
scas
mov
test
adc
popa
and
jecxz
clc
cmp
add
jnp
or
pop
fist
daa
ret
mov
sar
in
cmp
mov
pop
sub
mov
lock
or
repnz
icebp
cmps
inc
inc
push
xchg
mov
dec
cmp
sti
pop
push
test
dec
repz
sub
mov
pushf
call
fucomi
or
mov
icebp
pusha
push
mov
movs
mov
cmps
and
and
je
movs
call
jp
stos
inc
push
pop
(bad)
fsubr
xor
mov
pusha
push
cmps
sub
in
(bad)
jp
adc
jge
jg
jmp
rcr
adc
hlt
jb
ret
jle
push
ins
push
jmp
bound
das
or
aad
imul
stos
lods
bnd
loop
loop
nop
or
pop
and
cmp
sub
rcl
mov
jmp
lds
outs
test
ja
scas
or
xor
imul
aas
or
lock
add
aad
jnp
dec
cmp
nop
in
test
push
cmovg
xor
jge
ja
sbb
push
in
lods
dec
and
leave
dec
mov
cmp
adc
fmul
icebp
outs
lods
ss
fisub
inc
mov
sub
shl
sbb
xchg
cmp
sub
fldenv
and
adc
cli
pop
in
lock
inc
in
in
rcr
inc
in
mov
pop
or
and
mov
sub
call
mov
adc
mov
xor
test
nop
sbb
mov
adc
xor
retf
mov
fbstp
jnp
xchg
sub
xor
jmp
out
inc
add
out
sub
cmp
(bad)
fdivr
nop
sbb
movs
pop
mov
pop
xor
xchg
cmps
lahf
xor
fwait
ret
push
clc
movs
cmp
lods
sbb
push
xchg
in
mul
ficom
mov
pop
jo
mov
pushf
aaa
(bad)
jg
mov
add
cmp
jp
sbb
mov
lds
mov
outs
cmp
push
mov
or
jb
ss
or
call
sahf
js
fwait
int
pop
fcomp
cmp
mov
mov
mov
adc
sub
std
jp
jo
push
adc
sub
test
adc
stc
adc
xor
(bad)
popa
cmp
lahf
xchg
jecxz
sbb
rcl
test
cld
imul
pop
int
cmps
mov
xlat
je
cmp
pop
cmp
ret
icebp
or
mov
stc
pop
pop
popf
push
push
sbb
xchg
in
xor
jg
(bad)
jmp
xor
mov
mov
mov
in
cli
repz
xchg
aas
jp
jp
jecxz
inc
xor
inc
adc
lds
movs
inc
cmp
push
in
pushf
mov
outs
mov
mov
pusha
and
xchg
(bad)
loope
int3
repz
mov
call
cmp
movs
mov
addr16
xor
dec
imul
jmp
pop
pop
paddsb
scas
into
cmc
mov
sbb
inc
push
ficomp
ins
pop
daa
(bad)
imul
push
mov
mov
daa
mov
xchg
out
aad
inc
inc
fsubr
xor
out
(bad)
out
sub
arpl
sbb
mov
jo
dec
lahf
and
dec
repz
mov
adc
mov
adc
push
out
(bad)
lock
loopne
lods
movs
scas
enter
jmp
sbb
dec
ficomp
cmps
sub
rol
and
test
jmp
rol
push
neg
test
icebp
add
mov
mov
mov
test
xchg
add
ret
cmp
adc
dec
mov
cmp
retf
imul
add
in
inc
dec
mov
(bad)
sbb
cld
mov
movs
xchg
cwde
cmp
iret
inc
pop
test
mov
sub
ja
mov
stc
xor
mov
stos
mov
icebp
and
push
popf
and
test
jg
jne
and
add
retf
xor
repnz
add
xor
and
jo
xor
add
cmp
push
daa
test
xchg
adc
idiv
jp
mov
mov
push
aad
jl
(bad)
cli
fstp
popf
rcl
inc
(bad)
lock
enter
cs
and
push
retf
sub
fst
and
jmp
mov
not
push
jmp
add
sub
das
sub
xchg
test
stos
jns
cmp
xchg
ds
mov
cmp
out
xchg
xchg
mov
scas
add
icebp
retf
cs
adc
push
pop
sub
adc
retf
mov
mov
scas
sti
fisubr
mov
and
and
adc
repz
inc
leave
loopne
lock
push
push
sti
rcl
mov
ret
mov
push
inc
in
jns
aaa
jle
xor
xor
pop
dec
out
loop
mov
dec
ret
jns
or
in
dec
or
int3
inc
shr
adc
ffree
call
mov
scas
nop
das
aad
xchg
pop
mov
cmp
idiv
mov
outs
cdq
cmp
jmp
sub
retf
ins
pop
imul
adc
mov
xchg
xor
xchg
pop
mov
xchg
and
pop
retf
pop
mov
add
cwde
push
aad
push
sahf
shr
jecxz
scas
sub
jl
mov
inc
stc
fadd
cmp
dec
pop
cs
ins
icebp
push
fcomp
mov
cmp
sub
into
out
scas
jns
xor
fscale
mov
loopne
cmp
ret
mov
in
xlat
sub
sbb
clc
pop
sub
adc
mov
dec
fwait
arpl
outs
sub
mov
data16
push
sub
jl
add
xlat
cld
test
daa
clc
(bad)
in
outs
movs
dec
ins
in
sahf
xchg
sti
hlt
inc
test
dec
mov
xor
stos
enter
lahf
mov
aam
fadd
rol
adc
cmps
or
fst
xchg
mov
cmps
mov
in
jl
push
(bad)
jae
sub
cmp
xor
xor
popf
xchg
sub
sbb
or
ret
cli
(bad)
pop
mov
sar
push
cmp
lds
push
movs
sar
lds
xchg
leave
xor
mov
mov
(bad)
mov
(bad)
test
xchg
aad
ins
aad
mov
mov
cmp
imul
ret
add
inc
dec
jne
cmp
mov
xor
imul
pop
sub
xlat
or
mov
repnz
push
sbb
out
xor
mov
aad
call
mov
xor
jmp
mov
ins
sbb
mov
fwait
inc
std
(bad)
pop
xchg
les
cmp
aaa
mov
push
fs
dec
mov
ins
sbb
mov
mov
(bad)
jl
sbb
or
sbb
test
dec
cmovns
pop
or
cmp
jo
sbb
outs
mov
ror
ret
and
cmc
mov
(bad)
repz
fild
or
out
or
leave
cdq
movs
sbb
and
in
out
ins
jae
cwde
inc
sbb
fidiv
sbb
hlt
dec
les
push
cli
push
add
ror
(bad)
dec
arpl
sbb
mov
(bad)
xor
cmp
cmp
adc
inc
jb
rol
aas
mov
loopne
xor
pusha
push
sbb
push
outs
scas
sbb
adc
icebp
push
loope
sub
(bad)
pop
xor
ret
mov
(bad)
mov
jnp
xchg
clc
scas
mov
cmp
daa
mov
push
sbb
or
stos
inc
jno
cli
ficomp
inc
mov
out
mov
stc
push
int
aad
scas
mov
(bad)
lods
xor
jge
js
push
imul
ret
jne
fimul
in
lock
and
sub
adc
aam
int3
xor
xor
dec
iret
scas
scas
rol
jle
push
in
inc
jp
dec
test
sbb
cmp
clc
inc
jbe
jae
jno
or
es
addr16
test
adc
dec
dec
jmp
rcl
(bad)
scas
shl
rol
imul
jns
jp
inc
std
mov
jge
cmp
adc
or
mov
mov
sub
(bad)
lods
mov
add
xchg
or
mov
adc
inc
repz
xor
test
sbb
hlt
push
push
fisubr
loop
(bad)
aas
sub
test
dec
(bad)
jg
pop
pusha
scas
(bad)
enter
add
je
lahf
push
test
push
retf
into
sbb
nop
aas
xor
mov
pop
adc
sbb
jg
bound
dec
dec
outs
lods
jmp
(bad)
mov
add
jmp
scas
in
aad
jnp
mov
adc
scas
jg
cmp
test
neg
loope
lods
xchg
js
stos
loopne
sti
push
add
pop
sub
push
sbb
outs
call
pop
js
push
les
push
add
jmp
pushf
inc
test
mov
push
fistp
das
cmp
(bad)
(bad)
mov
ds
inc
lods
stos
inc
addr16
cmp
mov
pop
jl
xor
fbstp
jb
cmp
mov
(bad)
movs
mov
test
int3
nop
in
fwait
fwait
add
cs
dec
jmp
sub
lock
arpl
sub
and
sub
ret
fdivr
(bad)
mov
daa
cs
dec
mov
jl
jb
hlt
pop
aad
push
sti
retf
xchg
push
stc
cmp
mov
and
inc
nop
arpl
adc
sub
popa
push
adc
aad
loope
outs
fistp
sub
sahf
loopne
in
and
out
or
das
rcr
pop
loopne
mov
movs
std
xor
sub
inc
adc
jbe
cmp
xlat
cmps
out
bnd
add
add
mov
xchg
aaa
or
(bad)
aas
nop
aas
jge
(bad)
mov
ins
sub
fadd
aas
xor
cmp
mov
pop
ret
es
dec
push
jmp
jne
loope
push
mov
std
xor
inc
mov
stc
dec
subps
(bad)
std
sub
mov
add
fwait
ja
movs
cli
repnz
loop
repz
dec
retf
xor
inc
mov
adc
xchg
dec
cdq
sti
mov
sbb
sub
push
jne
(bad)
sbb
inc
cmp
repz
or
inc
das
sti
leave
xor
xor
mov
int3
dec
retf
dec
push
add
ret
inc
pop
push
retf
push
or
enter
jb
shl
xchg
retf
xor
icebp
sub
inc
xor
dec
aam
and
cmp
ret
arpl
jp
mov
mov
inc
in
add
xchg
test
and
(bad)
stc
es
jmp
test
mov
mov
add
sub
arpl
rol
mov
jecxz
out
pop
pop
push
sbb
(bad)
push
xchg
stos
and
das
repnz
pop
mov
dec
jb
scas
call
imul
or
or
outs
dec
dec
jecxz
pusha
inc
ret
imul
fiadd
xor
in
cld
pop
and
push
sahf
icebp
dec
mov
enter
add
ja
bound
cdq
push
aad
add
pop
mov
ror
mov
rol
test
stos
dec
add
cmp
stc
jmp
fmul
mov
(bad)
fdivr
loopne
sub
ds
je
frstor
popf
pop
int3
rcr
repnz
pop
test
jmp
lock
xchg
fisubr
mov
inc
push
pop
xchg
ds
jge
xor
nop
retf
sbb
hlt
dec
sub
and
ds
pusha
mov
dec
fs
adc
test
out
popa
outs
pop
(bad)
xchg
jo
adc
test
jnp
cmp
leave
sbb
jmp
pop
jae
ja
pop
popf
xchg
shl
clc
call
data16
popf
stos
or
mov
jno
in
inc
xchg
xchg
jb
sahf
jmp
loopne
inc
repz
femms
out
dec
rcl
out
jb
dec
fs
mov
outs
in
pop
retf
push
mov
iret
je
adc
ins
dec
fldcw
jmp
push
sub
ds
es
repz
sbb
xlat
popf
mov
add
mov
es
not
jl
lods
mov
xor
adc
push
sub
push
and
out
fild
sub
sub
or
mov
or
mov
and
xchg
out
pop
test
fs
outs
fstp
jnp
sar
lock
jmp
mov
loope
stos
mov
add
push
mov
shr
xor
out
or
and
(bad)
dec
ins
or
pop
call
into
add
aas
fcomp
dec
xor
mov
test
jmp
retf
add
pop
cdq
pop
cmovns
push
add
push
out
in
les
xchg
jge
xchg
add
dec
call
loop
and
bnd
iret
in
imul
adc
fisttp
std
mov
addr16
xchg
test
call
or
jmp
push
pop
push
scas
ud2
movs
test
push
int
call
jnp
sahf
call
mov
stc
inc
jecxz
stos
jecxz
call
cmp
sbb
xor
leave
addr16
xor
mov
adc
cmp
out
push
cmp
dec
leave
cs
mov
retf
rcr
addr16
add
jnp
add
sbb
inc
pop
scas
mov
push
out
test
jl
sbb
jne
adc
in
adc
ins
imul
inc
adc
out
cmp
popa
xchg
sub
int3
loope
mov
jo
ins
xor
mov
add
out
jne
movs
ret
ss
add
push
pop
mov
cdq
mov
test
cmp
mov
mov
pusha
retf
adc
jge
xchg
sub
mov
pop
into
retf
(bad)
repz
js
push
cdq
cmp
add
test
loop
mov
outs
cmps
rol
ins
push
or
das
out
sbb
mov
inc
out
fistp
xor
iret
adc
jp
pop
sti
sbb
js
and
push
sti
dec
and
aaa
ds
inc
(bad)
jb
push
mov
jns
xchg
push
rcr
xchg
lahf
aad
sbb
add
mov
mov
inc
cmps
aam
inc
jmp
repnz
inc
les
test
dec
push
lods
adc
mov
aas
fdivr
mov
fwait
push
xchg
push
cli
sub
xor
mov
and
cmp
repz
outs
push
daa
(bad)
xchg
and
mov
jge
and
jne
sub
cmp
cmp
retf
mov
shr
and
sub
aaa
aaa
sub
bound
mov
shr
and
cs
ret
mov
jb
daa
dec
xchg
ret
pop
imul
dec
push
jle
daa
sub
rcr
adc
xchg
cmp
dec
cdq
ret
fst
inc
loope
test
push
adc
enter
aas
mov
add
stos
les
inc
or
pop
mov
scas
adc
sar
adc
mov
xor
push
add
ins
mov
mov
jnp
push
xchg
adc
xor
mov
adc
xchg
hlt
fadd
mov
adc
lods
mov
cmp
pop
xchg
sti
fadd
adc
mov
add
int3
fdiv
or
loopne
inc
dec
mov
mov
imul
xor
cmps
ja
inc
jmp
call
sbb
push
outs
inc
and
cmp
fnstenv
push
sar
(bad)
mov
push
xlat
outs
dec
dec
popf
in
ss
mov
outs
mov
dec
push
inc
and
or
xchg
call
dec
mov
adc
enter
test
movs
jb
pop
out
cmp
jbe
cdq
push
mov
sub
cmps
sub
xor
imul
in
pop
repnz
ds
addr16
inc
push
or
jne
int
inc
jae
mov
push
sub
dec
daa
mov
mov
lea
sub
stc
jae
not
ins
and
push
and
mov
cmp
nop
sub
icebp
push
clc
int
popf
sbb
xchg
add
das
sub
aad
jle
popf
in
pop
in
aas
push
sub
ins
adc
cdq
in
xchg
ja
gs
fwait
jecxz
cmc
fcomi
sub
xchg
jge
shr
add
aam
mov
fild
jbe
cmp
lods
shl
dec
adc
into
scas
test
jmp
and
cli
push
add
mov
dec
out
jmp
mov
lea
pop
xchg
adc
pop
adc
mov
mov
out
mov
imul
int3
rol
pop
cmp
cmps
call
push
scas
push
sbb
ja
fstp
ror
mov
sbb
inc
push
pop
enter
fnstenv
xor
push
std
stos
jecxz
inc
int3
jge
sbb
push
or
add
aad
push
ret
pop
rcr
stc
nop
mov
add
sub
inc
mov
out
pop
push
scas
mov
outs
stc
aas
cmp
jl
adc
and
mov
rcl
test
test
xchg
pop
jbe
call
test
mov
in
pop
sar
scas
or
push
setb
cmps
lea
jp
sub
dec
pop
pop
cld
repnz
mov
mov
(bad)
fcomp
test
fisttp
fsubr
(bad)
enter
out
dec
hlt
(bad)
sahf
retf
or
jl
push
push
movs
jp
cmp
cmps
cmps
mov
xchg
cmp
pop
cs
jmp
add
test
movs
cmps
and
lock
xchg
sahf
sub
lahf
and
pop
lahf
xchg
mov
repz
(bad)
gs
pusha
pop
outs
adc
int
add
xlat
add
sbb
or
adc
push
sub
sti
mov
cmp
rol
inc
dec
push
dec
adc
mov
cwde
or
mov
xchg
sbb
add
cpuid
sub
sti
pop
jmp
xchg
sar
inc
mov
cmc
dec
pop
and
popf
mov
ja
add
or
ins
scas
imul
movs
cmp
mov
dec
xchg
loop
sar
dec
and
mov
pop
sub
icebp
jge
xor
outs
sbb
jb
cli
fisub
mov
jne
aas
push
or
adc
sti
add
test
add
mov
sub
arpl
xchg
mov
out
xchg
pop
ret
jge
lods
pop
xchg
sti
cmp
mov
xsavec
jge
inc
leave
adc
sar
dec
enter
jl
ins
and
test
sbb
dec
xor
inc
sbb
call
fld
fbld
dec
bnd
mov
and
shl
push
test
sub
adc
jb
rcr
sbb
mov
mov
(bad)
sbb
add
or
jns
lods
mov
cmp
inc
add
fs
fisttp
mov
push
jns
sbb
imul
xchg
lods
inc
and
test
nop
stos
in
loopne
(bad)
ja
adc
mov
pop
loope
mov
mov
mov
popf
cmps
jb
aaa
dec
xchg
xor
cmps
cli
lahf
sbb
not
or
add
and
and
mov
in
pop
dec
push
(bad)
push
push
mov
stos
mov
and
sahf
test
sub
mov
jo
fs
push
mov
das
xchg
cmp
xor
lahf
repz
pop
mov
inc
push
mov
pop
cli
test
data16
popf
pop
cmp
push
call
jo
movs
je
jo
mul
(bad)
aam
push
cld
sti
lods
inc
std
jns
daa
push
loope
imul
pop
add
pop
xor
int
push
(bad)
es
mov
mov
sbb
pushf
push
ss
sub
and
sbb
jns
mov
ror
mov
adc
or
out
out
mov
cmps
xor
in
movs
sub
push
xor
ret
jmp
mov
leave
cmp
std
je
cs
adc
mov
cwde
hlt
push
mov
ss
mov
(bad)
fiadd
out
mov
add
fiadd
repnz
lods
cmp
hlt
inc
mov
out
retf
fld
jns
repnz
aam
push
retf
cmp
fs
cwde
outs
and
pop
div
(bad)
adc
call
fst
mov
les
imul
test
mov
xchg
push
mov
adc
mov
jb
xchg
or
mov
jecxz
push
in
call
fcom
cmp
mov
lea
cld
sahf
into
in
push
dec
ins
cmp
shl
lds
pushf
int3
imul
cmps
inc
retf
lods
inc
lea
xor
mov
ins
into
sub
push
add
ins
nop
lock
and
leave
add
add
lods
fst
ss
clc
ja
test
jg
pop
(bad)
div
mul
jo
(bad)
cmps
ja
xchg
sar
push
int3
ja
test
inc
add
sub
cmp
cmc
std
out
cmp
in
pop
jecxz
pop
push
lods
add
sub
fs
mov
cmp
mov
fild
dec
sti
xchg
rcl
stc
inc
jno
sub
inc
movs
rcr
add
adc
pop
dec
mov
push
popa
bnd
pop
mov
outs
push
mov
lea
inc
leave
xor
or
jecxz
push
push
ja
ja
rcl
inc
test
outs
call
cmc
or
jnp
ss
jp
pop
loopne
dec
xchg
and
cmp
mov
into
add
lahf
sub
int
out
mov
mov
xchg
push
mov
fstp
adc
call
xor
ins
push
enter
cmps
jmp
inc
arpl
imul
mov
fiadd
mov
xor
leave
call
arpl
push
lods
ret
or
inc
dec
leave
cld
or
jo
adc
sbb
add
repz
cmp
repz
jmp
mov
push
mov
cmps
inc
dec
test
prefetch
fst
sahf
hlt
jnp
movs
and
push
rcl
pusha
xchg
push
(bad)
push
jle
aas
movs
mov
sub
adc
sub
inc
xor
cld
imul
mov
mov
test
sbb
in
push
push
jae
lahf
mov
call
inc
cmp
xlat
call
cs
adc
fnstenv
outs
popa
and
scas
pop
inc
jecxz
sub
jge
mov
cmp
cmc
pop
or
add
push
out
aaa
ins
imul
or
out
sub
ins
lods
clc
daa
dec
or
dec
(bad)
or
imul
mov
or
jle
push
cmp
aas
add
call
shl
mov
aas
ret
jg
or
sub
aaa
and
dec
mov
nop
mov
std
stc
sub
sbb
xor
int
push
ins
jecxz
mov
popa
cld
repz
dec
lock
scas
inc
repz
inc
mov
or
ret
adc
sub
sbb
sbb
cwde
in
clc
aas
dec
lods
out
sub
lock
jmp
dec
cmovns
call
jl
xor
in
mov
fnsave
sbb
nop
mov
or
nop
movs
jg
ins
sub
ins
ds
dec
push
and
scas
enter
aad
arpl
ins
jne
cmp
call
int
dec
jnp
daa
xchg
xor
sub
mov
cs
mov
icebp
dec
ror
icebp
mov
inc
ins
shl
shr
unpckhps
sub
dec
int
mov
rcl
or
loope
adc
bound
or
xchg
pop
aaa
mov
imul
jbe
mov
xor
pop
and
push
adc
sbb
sbb
lahf
fistp
out
pushf
dec
push
movs
iret
sbb
jno
aaa
cmp
adc
xchg
mov
fmul
int3
ds
loop
xchg
inc
das
cmp
pop
adc
mov
sbb
mov
dec
push
xor
and
xchg
icebp
and
mov
pusha
aad
sub
mov
add
xchg
jl
out
mov
cmp
sub
dec
ins
nop
fwait
dec
cmp
pop
mov
(bad)
mov
dec
ins
adc
lock
outs
fwait
inc
stos
retf
mov
mov
inc
cmps
push
inc
xor
and
js
xor
inc
cmc
fiadd
retf
dec
adc
pop
mov
cmp
in
jecxz
punpcklwd
add
mov
sub
ss
and
out
cdq
fwait
lahf
pop
inc
mov
(bad)
es
xor
gs
add
xor
add
fadd
mov
mov
xchg
cmp
and
or
faddp
dec
mov
xor
data16
mov
pop
add
out
add
test
mov
out
cld
ins
test
sbb
(bad)
cdq
jo
test
inc
lds
retf
sub
mov
push
aas
jb
push
push
adc
mov
imul
push
sbb
cmc
mov
cmp
fnsave
stc
xchg
mov
mov
pop
or
xchg
fcom
das
pop
daa
jle
xchg
pop
fcom
xor
mov
out
adc
mov
movs
in
pop
add
cld
imul
add
and
out
add
fs
movs
sub
hlt
dec
std
(bad)
neg
jbe
xchg
lock
imul
leave
push
or
xor
jge
in
mov
ja
out
push
pop
lods
mov
xchg
test
and
sahf
mov
sar
jbe
lds
jmp
out
cdq
movs
sub
ret
and
(bad)
dec
inc
jno
pop
ret
jae
cmp
xchg
ja
fisttp
mov
mov
xor
add
test
xchg
adc
jbe
inc
aam
mov
shl
cmp
pop
jle
ins
cmp
retf
(bad)
push
xchg
std
and
aad
ins
dec
sbb
xchg
xor
mov
shl
clc
test
int3
outs
cld
pushf
mov
sbb
or
sbb
(bad)
movs
retf
mov
jb
lahf
inc
fwait
enter
ins
mov
and
jnp
xchg
jae
xor
pop
sti
clc
not
cmp
cld
shr
push
(bad)
fs
push
push
xor
cmps
call
cld
push
jbe
cmp
push
cmp
and
aad
out
scas
xor
dec
bound
xor
mov
fadd
imul
ins
sub
jmp
repz
jmp
in
dec
pop
into
dec
sub
push
aad
mov
xlat
pusha
dec
test
cmps
fidiv
aam
xor
adc
jno
movs
in
inc
retf
out
shr
das
fiadd
ss
(bad)
jg
dec
mov
mov
pop
std
xor
cdq
pop
inc
cmp
or
pop
or
mov
(bad)
mov
in
in
xchg
call
mov
popa
aaa
retf
adc
into
test
cwde
xor
in
je
imul
mov
mov
cmp
dec
xchg
out
xor
sahf
ins
ja
sub
js
fcmovb
dec
mov
iret
jge
xchg
rcr
mov
lea
call
ins
mov
sbb
inc
(bad)
cmps
call
fdiv
retf
ret
or
fist
std
jmp
xchg
push
fs
sub
cmp
test
ds
fnstcw
cdq
mov
xchg
dec
mov
push
adc
nop
fld
popa
jecxz
bound
(bad)
(bad)
(bad)
inc
clc
pop
out
jecxz
fistp
jno
jl
lock
xor
cmps
mov
jbe
push
mov
xchg
imul
loopne
jmp
aam
adc
into
pop
test
fbstp
jecxz
sti
push
enter
imul
sub
jo
dec
add
pop
loope
stos
dec
cld
stos
mov
cdq
fsubp
jp
(bad)
stc
cmps
imul
mov
loop
mov
cmc
mov
xchg
bound
jb
repz
mov
adc
dec
jmp
(bad)
fnstcw
pop
dec
addr16
mov
inc
les
sbb
repz
jb
mov
push
cmp
test
or
test
jno
outs
nop
sub
or
jo
pop
add
jo
int
pusha
bound
jbe
dec
xchg
and
inc
mov
loope
mov
adc
or
lea
repnz
jle
push
sub
loope
out
imul
adc
xchg
cmps
retf
imul
sub
js
jae
jnp
pushf
add
js
pop
stos
dec
aad
cmp
sbb
mov
leave
in
pop
cdq
xlat
rcr
adc
pop
inc
dec
leave
rcl
cmps
adc
(bad)
stos
sub
inc
xchg
jns
hlt
and
daa
dec
mov
popa
xchg
mov
inc
loope
xor
or
and
push
aam
rcr
adc
stos
sub
and
bound
test
sub
aaa
add
dec
out
cmc
stos
cmp
(bad)
dec
fadd
sbb
cmps
cmp
jecxz
xor
push
mov
idiv
push
pop
lods
dec
gs
sbb
adc
pop
mov
mov
push
or
or
jecxz
xor
(bad)
in
stos
sbb
clc
(bad)
rol
ja
out
mov
icebp
repz
adc
add
cmp
inc
add
mov
sbb
int
mov
ins
and
jmp
in
pop
mov
fs
pop
loopne
inc
sbb
pop
push
arpl
(bad)
loop
dec
and
ret
outs
loopne
aaa
mov
pop
mov
pop
jmp
in
gs
add
push
adc
cmp
mov
sub
xchg
pop
pop
aaa
mov
pop
ror
cmp
or
pop
scas
outs
mov
jmp
inc
cmp
adc
ja
cmp
xchg
into
and
(bad)
mov
mov
push
pusha
and
retf
cli
jmp
mov
rol
mov
mov
sub
xor
std
and
test
ins
mov
adc
jg
mov
inc
jo
cmps
sbb
stos
mov
stc
jnp
cmc
add
loopne
xchg
mov
push
push
mov
data16
xchg
dec
and
in
mov
lock
(bad)
mov
pop
xlat
and
lahf
mov
dec
xchg
sub
ja
sar
int
fcom
adc
clc
mov
dec
sahf
sbb
loop
lods
cld
je
and
stos
ret
mov
push
add
(bad)
and
loopne
ins
jb
add
sti
pop
(bad)
push
dec
jo
sti
nop
jo
nop
jns
icebp
fwait
mov
int3
pusha
fidiv
cmp
pusha
xlat
xor
pop
pop
test
push
add
aam
xor
iret
jbe
cmp
outs
or
test
das
bound
mov
ds
mov
push
loopne
nop
push
push
mov
dec
jl
movs
stos
jp
arpl
push
mov
push
cmp
in
es
call
(bad)
ss
jne
xchg
icebp
push
inc
daa
mov
xlat
or
loope
or
ret
xchg
out
cs
pushf
inc
mov
call
mov
shl
into
cdq
or
ss
pop
test
dec
mov
fstp
iret
sbb
shl
cdq
inc
inc
pop
fild
add
push
mov
nop
or
add
and
cmp
lea
push
and
mov
arpl
and
fnstcw
gs
xchg
inc
in
and
daa
fnsave
inc
cmp
lds
scas
push
jne
mov
pushf
push
jp
imul
pop
cmp
push
push
push
push
push
sub
jbe
and
or
cmp
enter
cmp
stos
adc
mov
cwde
or
push
xchg
xchg
inc
je
jge
fiadd
jbe
das
imul
cmc
push
xchg
dec
jmp
dec
adc
mov
push
ror
cmp
lds
and
sbb
lods
jo
xchg
xor
nop
mov
sub
scas
inc
fld
inc
movs
mov
cdq
repnz
sub
(bad)
mov
inc
jbe
pop
jp
add
fs
icebp
add
cdq
xor
pop
add
lods
call
sub
jle
add
call
xor
push
sub
mov
fsub
xor
ret
mov
mov
mov
and
and
mov
xchg
jae
scas
leave
lods
aas
xor
int3
cmp
pop
shl
push
add
xchg
or
mov
xor
push
lea
imul
sub
sub
mov
sti
mov
adc
rol
add
das
scas
outs
dec
(bad)
retf
and
pop
xchg
adc
jnp
enter
dec
(bad)
hlt
(bad)
sub
fnstcw
lock
(bad)
sub
mov
js
xor
jno
ficom
pop
cmp
inc
mov
and
jb
call
sub
xchg
mov
int
into
fs
xchg
mov
inc
or
int3
mov
iret
mov
push
add
inc
js
jl
into
(bad)
mov
ins
pop
mov
mov
mov
sbb
cmp
inc
and
dec
sbb
(bad)
(bad)
je
cmp
sbb
fdivr
jmp
dec
test
adc
mov
jg
loopne
mov
sbb
test
xlat
loop
and
xlat
sub
aaa
xchg
xchg
outs
dec
cmp
jne
mov
sub
xchg
mov
cs
mov
sbb
pushf
ret
aam
retf
add
jge
push
aam
add
cmp
ss
cdq
jmp
xor
and
out
push
ror
push
pushf
xchg
cld
dec
xlat
xor
rcl
mov
xor
xor
sbb
mov
push
rol
mov
pop
daa
lock
sar
or
sub
je
in
sbb
dec
outs
call
pop
test
(bad)
push
pop
or
inc
xchg
pop
jnp
mov
addr16
xchg
sahf
ror
mov
or
inc
xchg
push
mov
xchg
sub
sti
sbb
or
dec
in
push
loopne
xchg
adc
aas
test
and
out
mov
add
sub
add
mov
jmp
jae
out
popa
fsub
ret
in
add
mov
outs
lock
(bad)
outs
or
imul
call
or
mov
mov
jno
pop
jge
mov
cdq
jo
pop
push
mov
cmp
cli
add
mov
push
mov
rcr
sbb
inc
dec
aas
ret
sbb
out
test
sbb
fs
imul
or
sbb
jb
rcl
leave
fnstenv
inc
cmp
jnp
shr
ja
xor
mov
(bad)
pmuludq
dec
ss
rcl
stc
jb
jb
outs
pop
mov
mov
jge
sub
mov
jo
cwde
lods
inc
push
ins
push
in
push
fwait
mov
das
jb
adc
cli
es
sub
nop
sbb
call
call
pop
fld
mov
and
jge
jecxz
out
(bad)
lock
push
xor
inc
mov
pop
adc
add
stc
push
movs
aaa
sub
out
sub
mov
xor
pop
sahf
imul
xchg
pushf
mov
cmps
or
and
xor
xor
pop
imul
mov
lods
jmp
scas
push
sbb
jne
xchg
push
inc
out
pop
adc
and
add
iret
and
pop
cmp
sahf
movs
shr
mov
jne
imul
ret
les
sub
repz
push
and
cld
mov
cmp
jne
inc
sbb
xor
daa
or
lahf
xchg
mov
test
popa
test
test
jnp
scas
aaa
jmp
cmp
outs
push
cmps
mov
fwait
(bad)
fidivr
lods
mov
pop
adc
jge
scas
scas
addr16
pop
test
mov
repz
nop
std
mov
and
out
inc
mov
sub
call
push
cmc
cmps
pop
pop
sub
fiadd
movs
cdq
cs
in
(bad)
jb
lea
dec
loope
xor
and
call
adc
xchg
enter
sbb
dec
sbb
pop
je
inc
shl
and
das
lock
lods
push
cmp
mov
inc
xchg
leave
xlat
jp
ja
inc
les
adc
mov
cmp
or
push
int3
dec
dec
or
pop
mov
int
pop
call
fistp
pop
push
mov
pop
dec
(bad)
dec
mov
stos
mov
push
xchg
pusha
mov
xchg
push
mov
out
gs
and
push
ins
movs
scas
sbb
hlt
xor
mov
jbe
mov
pop
lods
call
cmc
retf
mov
sbb
jmp
mov
sbb
loope
cdq
sbb
mov
add
call
ret
xchg
rcr
lods
cld
pushf
les
pop
jbe
pop
jp
mov
mov
ret
cli
dec
pop
jne
scas
mov
lods
jb
fist
ret
out
test
(bad)
cmp
push
xchg
imul
and
out
pop
xchg
push
cmp
fsubp
nop
stos
xchg
into
ds
dec
add
push
jmp
adc
xor
in
cmp
fimul
cli
xor
nop
cmp
stos
inc
outs
sub
push
(bad)
std
inc
sbb
mov
dec
jnp
and
mov
push
or
enter
fld
shl
mov
into
sub
or
movs
add
out
cmps
(bad)
arpl
aam
adc
cmps
or
imul
jl
dec
(bad)
in
dec
sub
clc
push
cmp
inc
push
fldenv
in
and
call
dec
xchg
ins
push
dec
out
dec
cmp
or
bound
inc
mov
test
(bad)
jmp
cli
push
and
sub
imul
or
mov
jbe
lds
imul
out
dec
lods
and
in
loop
outs
test
and
stos
fmul
xor
in
cs
fisub
and
or
xchg
call
xchg
dec
xchg
ins
aad
sti
aas
or
push
scas
jns
mov
call
test
das
imul
fcmovnu
rol
mov
in
inc
fs
inc
in
pusha
loopne
push
sub
and
sub
loope
fs
addr16
leave
mov
nop
push
xor
sub
jecxz
loope
xchg
fs
mov
push
or
jmp
inc
jb
mov
xchg
ins
scas
inc
pusha
and
retf
cmp
stc
xchg
cmp
add
sub
adc
add
call
jbe
xor
lods
pusha
lock
pop
push
xchg
jle
dec
test
dec
mov
and
ins
stc
pop
int3
popf
clc
mov
ficomp
mov
in
fmul
mov
retf
and
fdivr
lock
repz
shr
clc
cmps
mov
sub
xchg
cmp
jmp
int3
je
icebp
push
pop
mov
add
pop
mov
pushf
mov
sbb
rcl
or
fucomip
adc
adc
push
daa
(bad)
ja
push
icebp
leave
xchg
sahf
retf
sub
mov
stc
dec
xchg
out
inc
push
mov
ffree
pop
out
mov
adc
jnp
sbb
sub
mov
xor
push
dec
ret
jbe
popa
or
inc
fadd
sbb
jg
mov
inc
out
jbe
jns
cdq
jae
sbb
into
sbb
sbb
sub
aas
jmp
xchg
call
mov
(bad)
mov
mov
inc
xchg
dec
or
js
jmp
push
cdq
adc
stc
retf
imul
sub
push
dec
lods
ss
or
sub
leave
out
cwde
or
retf
in
add
jno
rcr
inc
mov
icebp
mov
cmp
dec
pop
inc
cmp
mov
xor
shr
pop
cdq
adc
xor
pop
iret
in
hlt
mov
pop
push
loop
lds
movs
arpl
inc
jmp
test
out
nop
jbe
call
push
ret
leave
cdq
inc
sub
mov
shr
hlt
iret
test
adc
mov
scas
mov
out
mov
sbb
pop
mov
jl
mov
icebp
mov
sbb
inc
jno
mov
icebp
dec
jp
mov
fimul
jae
xor
mov
and
aas
in
fsubr
jo
retf
out
rcr
mov
and
sbb
push
shl
or
idiv
sub
mov
add
fldenv
pop
out
xchg
sahf
mov
lahf
inc
and
call
and
leave
test
mov
addr16
pop
daa
stc
hlt
sub
retf
mov
jne
jge
loop
fstp
les
cmc
repnz
adc
xchg
popa
cmp
mov
cmp
jmp
sbb
or
xchg
clc
(bad)
jmp
(bad)
(bad)
call
inc
jp
repz
xlat
mov
das
pop
or
sbb
icebp
mov
in
inc
cmp
jl
jp
scas
xor
repnz
call
xchg
lea
mov
cmp
xor
movs
and
into
lods
js
push
lock
pop
xchg
sbb
aad
div
cmps
mov
ret
nop
fisubr
shr
sbb
out
cmc
sub
sub
jnp
push
mov
xchg
imul
mov
lahf
jg
xor
push
push
(bad)
in
sub
jne
mov
cmp
mov
xchg
xchg
mov
into
and
push
inc
xor
mov
xor
push
fs
push
neg
add
xchg
test
sub
adc
ret
pop
fadd
push
sub
lods
or
inc
mov
adc
test
sbb
dec
(bad)
or
pop
fsub
pop
mov
in
pop
inc
mov
ret
pop
add
shl
xor
int3
cmc
and
outs
clc
in
mov
add
scas
cmp
push
inc
jb
mov
ins
std
dec
xor
retf
push
lea
sub
cmp
call
loop
std
int3
xor
pop
in
dec
fild
aam
ja
lock
or
(bad)
and
mov
cdq
mul
or
mov
popa
bswap
clc
push
sub
jae
(bad)
popf
jbe
repz
xchg
fst
outs
sub
ret
fcmovnb
lods
mov
mov
dec
iret
fxch
pop
(bad)
std
push
push
mov
aaa
(bad)
retf
mov
movs
ret
movs
dec
nop
lock
sahf
nop
pop
daa
mov
ins
jns
mov
repz
cdq
(bad)
jecxz
ds
leave
les
jp
arpl
add
cwde
dec
imul
cdq
mov
div
repnz
or
push
mov
fnsave
fadd
mov
stos
fs
mov
inc
adc
test
mov
fld
dec
dec
call
(bad)
call
dec
aad
movs
add
inc
cmp
mov
add
jno
repnz
sbb
push
(bad)
rol
daa
ins
mov
mov
sbb
cmp
sahf
inc
cmp
adc
xchg
sub
shl
cwde
aas
cmps
out
int
jb
loopne
jle
pop
lods
in
mov
dec
adc
iret
xor
movs
les
jmp
sbb
pop
mov
sbb
and
fdiv
adc
sbb
mul
jle
or
add
out
jns
repnz
test
in
aam
cs
mov
sti
push
and
jo
lahf
lock
push
int3
mov
and
xor
daa
ret
ins
data16
inc
pop
in
es
pop
jb
mov
jg
bound
xor
jnp
add
cmp
out
iret
fist
or
or
jecxz
imul
inc
cmps
mov
pop
outs
jge
mov
seta
push
inc
and
ja
fst
mov
inc
inc
(bad)
mov
mov
in
mov
les
outs
mov
not
das
mov
sub
addr16
mov
fistp
pop
jmp
hlt
add
test
js
pmullw
ins
aam
hlt
fild
stc
stos
enter
fistp
adc
fiadd
xchg
jg
test
stos
and
lds
xor
lds
xchg
test
xor
mov
xchg
mov
mov
fwait
stos
inc
pop
jnp
mov
mov
adc
repnz
mov
fidivr
mov
fsubr
add
and
shl
outs
clc
xchg
sub
out
pop
out
inc
push
cli
daa
aad
or
xlat
adc
xchg
sbb
sub
cs
mov
push
dec
sbb
lods
push
stc
or
stos
nop
or
push
js
cmp
push
pop
es
retf
jmp
lock
cmps
enter
pop
loop
jo
push
cmps
outs
pop
or
add
ret
movsx
cwde
sbb
add
stos
out
inc
or
mov
inc
fwait
cs
pushf
dec
cmp
(bad)
ins
jle
xor
imul
xor
sbb
retf
pop
jae
in
push
sahf
xor
fnstenv
or
nop
in
cdq
and
jo
xor
sar
aad
(bad)
mov
jns
add
enter
aam
push
stc
push
sub
fsub
or
xchg
or
iret
or
das
in
mov
push
scas
les
imul
cs
adc
adc
cli
daa
inc
out
xchg
jg
repz
add
cmp
inc
mov
nop
hlt
(bad)
repnz
sub
pop
pusha
push
sti
scas
and
cdq
stc
xor
pop
mov
inc
push
push
ror
js
mov
cwde
stos
adc
mov
out
sub
sub
pop
dec
(bad)
jle
add
sub
call
pop
or
inc
inc
fwait
xchg
repnz
inc
sbb
push
adc
mov
aas
loop
cmp
pushf
jp
sbb
pop
das
push
add
in
shl
mov
xor
mov
mov
call
dec
or
mov
pop
repnz
jge
xchg
leave
mov
or
rcl
out
xchg
or
shl
fldcw
jae
inc
cmp
adc
in
icebp
add
ins
mov
push
popa
aad
daa
jnp
fist
jno
fldenv
add
xor
out
mov
dec
int3
pop
or
int
push
sub
out
cli
push
aad
xor
pop
push
push
jl
jb
push
scas
cdq
cmp
call
sub
std
adc
jno
lock
cmps
gs
pop
jae
(bad)
rcr
test
dec
loop
jp
cli
adc
ror
mov
add
(bad)
stos
jmp
add
ret
inc
dec
cmp
(bad)
ins
mov
push
adc
cs
sti
inc
push
lods
outs
test
mov
adc
sbb
push
xchg
cmp
or
and
outs
fst
bound
sbb
xor
mov
stc
repnz
gs
add
and
push
lock
scas
in
xchg
jl
push
cdq
fst
mov
or
jno
mov
xchg
lea
push
in
jne
dec
jmp
push
pop
or
mov
(bad)
pusha
sbb
in
das
dec
scas
mov
mov
ret
mov
in
scas
mov
mov
mov
aaa
nop
scas
dec
aaa
and
adc
stos
outs
xchg
aam
popa
inc
xchg
rol
pop
dec
or
mov
mov
adc
inc
adc
inc
xlat
jecxz
pop
add
iret
sbb
shr
jmp
ins
lahf
jmp
jns
pushf
loope
adc
push
es
mov
rcr
scas
lahf
scas
jg
pusha
hlt
push
jge
scas
push
inc
push
dec
mov
or
pop
(bad)
fiadd
xchg
sti
push
jl
data16
aaa
push
pusha
jl
mov
pop
pop
out
and
loop
bound
cmp
xor
xchg
out
loopne
cmp
inc
push
adc
push
out
ret
addr16
je
pop
popf
cmp
sub
sbb
or
aas
(bad)
sub
test
scas
inc
ss
or
sbb
sub
dec
out
sub
retf
les
std
ret
and
data16
inc
dec
xor
fcomi
and
inc
inc
adc
pushf
div
jne
lahf
adc
xchg
test
mov
push
adc
xchg
js
dec
cmp
xchg
pop
aaa
sub
pop
arpl
pop
cmps
pop
add
test
mov
cmp
stc
aas
lahf
xchg
mov
sahf
push
sub
sbb
fstp
in
inc
mov
movs
(bad)
adc
xchg
sub
into
(bad)
bound
test
and
adc
and
push
sub
push
xchg
mov
push
add
stos
inc
out
fisttp
dec
adc
pop
sub
and
fdivrp
imul
lock
test
xchg
loop
xchg
retf
and
jo
add
xchg
cmp
xchg
retf
inc
push
mov
in
movs
ror
push
fstp
leave
imul
imul
lock
push
jmp
cld
add
ss
mov
gs
jl
mov
cdq
cmp
dec
xchg
push
xchg
neg
loopne
adc
(bad)
out
in
pop
or
mov
mov
mov
ret
mov
adc
xor
dec
clc
fistp
pop
jae
sbb
cmp
or
fld
lods
pop
xchg
jmp
repz
mov
cmps
inc
(bad)
cmp
adc
imul
lods
shr
xchg
sbb
mov
mov
lods
xchg
mov
jbe
ds
mov
push
stos
or
adc
sub
push
ret
ds
aaa
or
je
mov
call
cmp
ror
sub
cmp
jae
sbb
push
sub
gs
loopne
jno
dec
mov
sub
or
inc
xor
jb
ja
out
int
sbb
lock
sub
es
push
jns
inc
call
cmp
jmp
sti
pop
mov
mov
jmp
xor
lock
or
test
sub
lds
jne
jne
in
enter
and
push
fadd
loop
repnz
icebp
sub
aaa
pop
inc
pop
in
je
stc
enter
dec
outs
loope
mov
add
cmp
jmp
sub
ins
mov
push
lods
ret
shl
cmp
aad
ret
inc
mov
stos
xchg
std
cli
retf
scas
ret
movs
fadd
mov
mov
jecxz
inc
loopne
mov
xchg
cmps
xchg
(bad)
aas
dec
jmp
das
call
in
lahf
pop
add
cli
jp
ins
mov
mov
fcom
dec
test
mov
(bad)
pop
retf
push
addr16
les
push
sub
push
dec
(bad)
sub
icebp
call
stos
mov
out
and
adc
ja
jmp
pop
dec
imul
mov
and
ret
mov
neg
add
and
xor
jb
sbb
stos
outs
arpl
mov
sub
add
sub
test
call
adc
jne
stos
repz
mov
cmps
iret
pop
js
push
dec
inc
pop
rcr
push
in
outs
out
mov
out
mov
in
xchg
ret
bound
data16
addr16
and
ror
lds
mov
sbb
loope
(bad)
out
inc
xor
xor
es
fadd
aaa
outs
vmovsd
push
jo
sahf
ja
xchg
push
(bad)
adc
push
out
mov
fnstenv
outs
mov
add
pop
push
lods
or
ficomp
xchg
sahf
push
push
je
push
mov
jns
int3
cld
push
jno
les
out
sti
movs
inc
mov
mov
rcl
cmps
mov
fimul
inc
push
push
outs
ficom
data16
dec
cld
pop
adc
push
(bad)
aaa
clc
add
jne
adc
mov
dec
loope
in
js
and
in
and
es
lahf
or
test
leave
jmp
leave
pop
jecxz
xchg
or
repnz
call
or
adc
cmp
mov
pop
mov
cmps
test
iret
add
lods
mov
pop
or
loope
push
lods
or
pop
mov
jg
mov
or
mov
xchg
fs
or
mov
jmp
push
retf
fs
inc
das
adc
(bad)
lahf
test
lods
push
in
daa
fsub
into
shr
gs
retf
or
pop
iret
mov
pop
jmp
mov
or
rol
inc
fnstenv
fwait
jl
push
or
in
leave
rcl
push
xor
(bad)
push
xchg
ss
or
jmp
pop
fcmovnu
mov
adc
inc
cs
cmps
cli
jmp
outs
shl
sbb
push
xor
pushf
mov
pop
sbb
cmp
jno
sti
test
test
adc
xchg
add
int
push
lods
movs
and
lds
gs
push
xor
rcr
arpl
retf
and
inc
jae
mov
xor
xor
xchg
mov
fbstp
aad
cld
sub
adc
sub
jge
jg
or
cmp
stc
inc
ss
and
in
sbb
xor
ret
fiadd
adc
out
sub
push
inc
inc
and
cmp
mov
call
jecxz
out
jb
and
mov
jg
rol
jecxz
push
imul
xor
arpl
cs
dec
push
and
xor
fistp
fnsave
gs
sub
dec
lea
mov
(bad)
fldcw
(bad)
add
aaa
push
pop
xchg
jns
cdq
jmp
pop
jno
mov
mov
stos
adc
retf
mov
out
cmp
dec
ror
aas
sub
lds
xchg
xor
push
mov
sbb
dec
leave
(bad)
clc
push
mov
inc
ret
mov
cmp
mov
data16
test
push
(bad)
loopne
push
stos
shl
sub
push
fimul
xor
into
push
cmp
cmp
je
out
fisttp
mov
test
or
xor
mov
cmp
inc
mov
sub
sub
xor
sbb
mov
pop
push
or
dec
aam
xchg
xchg
test
dec
imul
(bad)
fld
dec
pop
mov
add
and
inc
mov
aam
aam
mov
hlt
cmp
inc
lock
dec
or
push
push
dec
dec
imul
jge
adc
mov
cmp
gs
xlat
jmp
int3
or
add
push
dec
adc
mov
xchg
push
xor
inc
stos
scas
sti
cmps
xor
add
and
dec
mov
mov
adc
cmp
stos
movs
repnz
sar
push
fisttp
ja
mov
jo
mov
aam
jo
xor
or
repz
jmp
test
jno
leave
or
and
jg
test
push
jmp
popa
inc
inc
push
jo
pop
jns
mov
(bad)
sti
or
cmp
and
loope
xor
ficomp
jge
inc
out
mov
mov
adc
xchg
mov
outs
ds
mov
js
rol
fimul
cmp
ret
dec
loop
sub
loope
add
lods
sub
push
test
mov
add
xchg
rcl
cdq
ror
xor
inc
inc
push
xor
xchg
lahf
add
fisttp
jbe
test
addr16
in
repnz
sub
retf
repnz
cwde
push
les
aas
xchg
fcmovb
ror
cmps
pop
and
push
jno
jbe
sub
push
fisttp
push
addr16
jns
pop
hlt
mov
add
imul
stos
sbb
pop
sub
inc
mov
push
mov
es
movs
push
sub
mul
cs
cmps
jl
pop
cli
fldcw
ffreep
fist
(bad)
test
lahf
int
push
fcomp
das
into
leave
shl
call
stos
call
lods
jbe
pushf
call
push
in
aad
dec
fnstsw
push
mov
cmp
jae
jae
add
movs
stos
xchg
push
cmp
sti
in
fdiv
and
in
call
mov
ins
mov
jae
mov
jg
(bad)
out
push
inc
out
or
in
dec
push
cmp
pop
into
and
cmc
in
adc
and
in
add
mov
hlt
rol
jmp
add
cmp
inc
pop
test
add
imul
ins
stos
jb
repz
xchg
cmps
jno
retf
(bad)
adc
in
push
mov
mov
cmps
jmp
pop
aad
fcmovbe
pushf
ins
inc
xor
cmp
pop
or
frstor
out
retf
imul
cmp
int
ficomp
fwait
stos
dec
pop
ds
scas
mov
out
stc
jmp
aam
lds
fsub
sbb
neg
and
inc
pop
inc
fs
adc
(bad)
pusha
mov
aas
ret
das
(bad)
mov
(bad)
pop
mov
pushf
test
or
out
xor
mov
loope
je
aaa
iret
push
inc
repz
out
xor
cs
xor
aaa
xchg
mov
lock
les
push
pop
jno
aaa
movs
rcr
shr
cmp
inc
test
stos
push
or
cmp
dec
nop
sbb
les
outs
mov
loopne
in
ins
es
or
inc
pushf
dec
jecxz
adc
push
lahf
fs
js
mov
imul
retf
sbb
int
xchg
xor
sbb
add
lahf
sub
jb
outs
rcl
xchg
pop
adc
push
adc
cmps
aad
out
pop
stc
pop
and
add
(bad)
cmp
pop
xlat
inc
dec
stos
cdq
cwde
gs
mov
xchg
and
out
addr16
fist
cld
xor
jae
arpl
fdiv
or
dec
fidiv
inc
ds
inc
xchg
or
in
dec
add
sub
jnp
std
adc
mov
movs
loope
cmp
addr16
dec
outs
pop
and
aad
in
scas
je
push
retf
adc
jp
push
pcmpgtb
xor
addr16
je
pop
pusha
ja
cmp
lds
push
mov
stc
jb
clc
stos
(bad)
jns
dec
jmp
mov
loopne
and
mov
es
in
pusha
sub
sbb
mov
push
dec
ds
dec
aam
mov
pop
pop
or
shl
adc
es
jmp
push
jae
rcr
inc
cmp
jns
cmp
ja
(bad)
(bad)
mov
inc
cvtps2pi
cli
loopne
imul
mov
das
das
cmp
xchg
mov
mov
or
fs
fnstsw
add
push
loope
or
cmps
nop
(bad)
xchg
inc
clc
dec
pop
rol
jg
out
lods
das
jp
or
icebp
jmp
ficomp
shr
hlt
xchg
sahf
adc
ja
(bad)
push
popa
and
loopne
jge
xor
add
add
aaa
fcom
int3
out
mov
outs
stos
inc
sar
ss
xchg
neg
inc
in
jmp
icebp
jg
out
pop
into
retf
jno
sti
pop
movs
mov
dec
lock
mov
pop
stos
push
sub
jns
dec
xchg
push
mov
adc
jae
dec
data16
adc
ret
xchg
int
fadd
mov
and
mov
fisubr
dec
dec
jge
lahf
in
aam
mov
add
add
sbb
in
shl
dec
xchg
xchg
arpl
sar
inc
xchg
aam
jmp
push
jb
jecxz
and
loope
dec
xor
idiv
aam
ret
test
aam
in
pushf
xchg
xchg
out
jo
mov
mov
test
push
sbb
xlat
or
sub
in
pop
xlat
outs
push
and
push
in
and
das
pop
imul
cmp
and
out
push
push
stos
mov
inc
mov
popf
sbb
retf
xor
sbb
pop
push
jmp
test
push
or
cmps
mov
mov
adc
pusha
sbb
mov
test
scas
or
pxor
pop
mov
test
mov
xchg
adc
jmp
pop
xor
mov
ins
ins
sub
xor
(bad)
std
xchg
xor
sbb
outs
inc
shr
(bad)
adc
add
cmp
adc
fcmovnb
cmp
shr
or
fisubr
nop
sub
mov
hlt
stc
jne
ja
scas
adc
push
mov
repz
mov
cdq
mov
xor
or
xor
dec
pop
jge
pop
cmp
ja
dec
xchg
sbb
inc
xor
jl
push
test
sbb
das
dec
outs
and
popa
outs
rcr
xor
jno
pop
dec
popf
repnz
sbb
sbb
cli
sti
imul
cmp
pop
pop
and
iret
fldenv
leave
pop
mov
push
add
inc
loopne
lock
sbb
xor
add
sahf
in
cmp
cdq
ret
fwait
movs
sub
sahf
repnz
in
arpl
add
and
std
fucomp
mov
inc
mov
cmp
fwait
dec
je
pop
add
outs
addr16
and
and
dec
and
xchg
or
push
or
mov
fisttp
jg
loope
or
shr
push
arpl
imul
dec
adc
rcpps
pop
fdiv
mov
cmp
aaa
std
pop
rcr
ja
call
mov
(bad)
cli
adc
mov
fcomp
mov
in
xchg
jg
jae
pop
in
cmps
imul
lea
dec
add
pop
add
add
pushf
das
jno
cmp
adc
jmp
cwde
in
in
ins
push
mov
jmp
sbb
push
ret
mov
fs
mov
xor
int
dec
cmp
out
in
add
das
xchg
neg
lock
inc
cmps
push
inc
push
push
mov
adc
inc
movs
inc
test
pop
ficomp
pop
xchg
enter
inc
imul
fsubr
mov
or
jecxz
in
mov
sbb
jecxz
cli
push
fwait
adc
fld
dec
or
outs
add
sub
push
cmp
bound
ins
sub
ret
pop
iret
and
mov
mov
sub
mov
sub
stos
dec
fucomip
clc
cmp
cmps
inc
adc
fisttp
ror
enter
inc
or
sbb
data16
mov
fisub
mov
out
int3
hlt
or
nop
dec
mov
or
aam
mov
lock
mov
mov
retf
push
xchg
outs
dec
stc
mov
add
jp
dec
jae
dec
fistp
push
xchg
push
push
rcr
xor
ror
or
aad
mov
mov
mov
and
clc
cdq
aam
lds
jb
out
push
into
rcl
(bad)
test
mov
pop
xchg
(bad)
push
sbb
inc
popf
xchg
and
rcr
mov
mov
fst
fld
aaa
mov
xchg
lods
or
les
arpl
jp
jle
nop
in
jae
and
xor
ss
inc
pop
in
pop
mov
push
jbe
cmp
inc
mov
jmp
mov
sbb
hlt
push
sub
mov
retf
cmp
je
mov
ins
and
jl
ret
mov
fisttp
call
push
sbb
push
inc
movs
and
mov
nop
dec
out
call
scas
sub
sbb
sbb
mov
cli
and
mov
push
retf
or
scas
xchg
mov
fimul
jb
jmp
outs
xor
jecxz
in
mov
lods
add
push
or
jnp
mov
cs
dec
push
mov
sub
cli
out
mov
mov
fdivr
retf
pop
sub
mov
out
movs
push
xchg
dec
outs
or
pop
mov
fsubr
sbb
out
inc
loopne
stos
std
and
xlat
repnz
add
out
mov
xchg
mov
and
sbb
test
push
test
push
stc
adc
jne
mov
push
inc
add
mov
imul
jno
cmp
les
cdq
outs
stos
out
dec
ja
pusha
pop
mov
jge
clc
jb
and
lock
cmovbe
lods
lds
addr16
mov
fdivr
push
cwde
xor
popf
push
add
jb
mov
lods
and
or
cmp
mov
out
mov
popa
xchg
out
xchg
xchg
(bad)
js
sbb
mov
ret
repz
pop
scas
mov
loopne
mov
fs
add
sti
cmp
fsubr
pop
js
lods
movs
(bad)
daa
jle
and
lahf
inc
mov
test
mov
clc
inc
dec
ret
cmps
nop
imul
(bad)
adc
fisub
enter
int
addr16
cmp
pop
cmc
enter
shr
mov
sbb
call
jo
inc
mov
(bad)
fs
pop
pop
dec
pop
movs
mov
cmp
ja
test
rcl
pop
or
cmps
adc
and
jmp
ja
sub
cli
les
ds
mov
adc
es
out
lods
adc
mov
or
outs
jb
imul
retf
and
(bad)
scas
(bad)
dec
sahf
xchg
fs
sub
test
or
dec
xor
mul
xor
enter
inc
adc
push
add
and
cmp
xlat
jnp
mov
lea
and
cmp
jp
dec
retf
add
jmp
push
and
call
push
pop
in
int3
aaa
push
or
call
push
pushf
repz
inc
sbb
call
fwait
push
mov
ins
dec
pop
cmp
jns
(bad)
jmp
pop
and
imul
mov
mov
retf
iret
fisubr
xlat
in
push
xor
cli
sahf
fs
adc
jbe
lds
out
stos
repz
pushf
mov
inc
xor
mov
add
in
mov
pop
arpl
std
or
aam
dec
add
outs
lea
lahf
out
add
retf
aaa
cli
inc
rcl
adc
retf
(bad)
paddsw
pop
add
sbb
addr16
mov
xor
ins
rcl
sbb
add
lock
jae
mov
lea
retf
mov
ins
push
call
sbb
movs
ss
scas
mov
imul
fisubr
xor
pop
and
idiv
loop
jb
cmp
mov
xchg
push
push
inc
pop
cmps
adc
xchg
and
mov
aam
es
push
cmc
cs
jge
cmp
cs
inc
les
or
mov
add
push
iret
inc
mov
ins
ret
cmp
sbb
jg
sub
mov
sahf
stos
pop
jbe
jae
push
or
jl
fscale
daa
out
mov
mov
push
ret
(bad)
push
bound
fwait
in
test
mov
test
pop
mov
add
adc
push
iret
pop
ret
pushf
ret
sub
mov
and
loope
inc
inc
cli
xchg
adc
adc
cmc
sti
psrlw
dec
push
sbb
push
call
daa
fdiv
pop
(bad)
push
aaa
pop
jae
(bad)
ja
jno
call
push
jbe
push
adc
arpl
movs
mov
xchg
xor
js
cmp
xlat
mov
mov
aad
xchg
loope
rcr
jb
sub
mov
ret
les
lea
lea
jo
dec
sub
cmps
sub
mov
cwde
fld
rcr
daa
cmp
xor
imul
mov
cmc
data16
dec
push
(bad)
aas
bound
push
in
push
ret
sub
jns
cmp
xor
pop
(bad)
js
inc
(bad)
mov
shr
mov
jmp
arpl
ss
rcl
rcr
popf
test
fld
ret
pop
mov
scas
push
call
jo
mov
retf
mov
pop
mov
mov
push
out
ret
xchg
jmp
add
cs
ins
jp
ins
sub
xlat
cmps
cmp
lods
add
inc
nop
sub
fild
adc
mov
sar
add
out
xor
int
mov
aas
push
(bad)
cwde
inc
stc
sti
push
fwait
xor
in
xchg
jp
aad
or
movs
inc
jle
(bad)
ja
adc
sub
mov
adc
call
cmc
dec
call
mov
fstp
mov
mov
adc
dec
cmp
pushf
inc
cmps
pop
mov
jmp
addr16
sub
jle
mov
jns
jp
adc
dec
out
jmp
jno
jb
push
into
ret
pop
out
ds
les
cmc
pop
retf
sbb
(bad)
(bad)
test
push
iret
in
iret
adc
xchg
adc
(bad)
mov
fnsave
sub
xchg
sub
test
xchg
cmp
add
movs
std
imul
mov
(bad)
sbb
push
mov
sub
xchg
pop
mov
js
mov
xor
xchg
adc
pop
rcr
or
add
cmp
mov
mov
lea
push
and
fsub
jp
lods
mov
xor
into
push
hlt
out
dec
push
je
ins
lahf
push
jns
mov
mov
out
fcom
arpl
sti
lock
je
inc
(bad)
(bad)
dec
push
cmps
out
mov
or
mov
and
pop
sbb
out
int3
cdq
lahf
dec
inc
std
cs
fld
sub
int3
pop
and
push
fmul
pop
xchg
sub
mov
xchg
pusha
push
pop
clc
out
mov
adc
lods
xchg
and
jae
jmp
dec
pop
xor
adc
sub
loop
sub
mov
push
sub
add
jns
call
ja
int
outs
ja
out
xchg
fistp
(bad)
lahf
adc
nop
shl
sahf
lods
call
ror
mov
ret
mov
out
or
cmp
ffree
imul
nop
mov
test
inc
mov
dec
hlt
scas
aas
pop
fwait
cmps
mov
and
mov
jae
sub
add
aam
push
ss
pop
in
fsubr
retf
cli
pop
data16
pop
xchg
or
ins
dec
out
fistp
sti
pop
cwde
sbb
xchg
leave
xor
add
xor
leave
das
jmp
pusha
cmp
(bad)
pop
mov
aam
fst
and
mov
mov
jb
sub
cmp
bound
or
push
data16
not
sub
jecxz
inc
clc
inc
int
pop
mov
jns
gs
xor
sub
aad
stc
lea
popa
cmp
push
mov
sub
movs
xrelease
iret
mov
xchg
retf
fisttp
sub
pop
cmp
lahf
xor
aam
push
jne
(bad)
push
(bad)
aaa
or
inc
mov
(bad)
push
or
xchg
mov
das
push
ins
dec
mov
retf
fadd
mov
adc
in
imul
cli
cmp
es
ss
adc
test
xchg
jle
add
rcl
inc
or
push
pop
push
push
je
dec
jns
dec
sub
ret
push
ret
dec
or
push
les
loop
sbb
mov
mov
sbb
mov
xor
cwde
ret
mov
add
add
xor
adc
or
(bad)
sti
cmps
and
jnp
mov
int3
in
cmp
stc
imul
cmps
or
outs
out
retf
fdiv
fs
loope
fwait
jnp
push
xor
(bad)
arpl
jg
jmp
dec
je
xlat
pop
jge
adc
sbb
imul
lods
mov
(bad)
pop
jnp
push
stos
jl
mov
int
test
mov
in
(bad)
inc
cwde
cli
push
out
popa
or
jmp
lock
dec
dec
fmul
shr
pushf
sub
mov
or
out
xor
mov
mov
or
in
nop
jl
adc
outs
xchg
retf
push
sbb
xchg
xchg
call
std
jae
jl
aad
push
mov
xchg
test
int3
cli
cmp
int
sti
stos
and
inc
loop
mov
sti
inc
aas
mov
leave
cmps
addr16
leave
cld
rcr
push
cmp
cmp
add
cli
movs
lods
jns
cmp
mov
lods
jmp
or
repnz
mov
or
retf
mov
cmp
sub
mov
repnz
xor
clc
add
push
mov
sub
jmp
lods
es
(bad)
push
cli
fdivrp
pop
xor
or
arpl
int3
sbb
mov
adc
mov
and
fld
add
mov
dec
loopne
enter
pushf
pop
inc
sub
mov
sbb
pop
mov
lea
or
pop
sbb
mov
mov
retf
shl
mov
shr
loopne
(bad)
mov
ins
lds
loop
adc
push
or
rcr
inc
cmp
cwde
out
shl
gs
mov
xchg
push
jns
test
sub
mov
cmp
hlt
scas
mov
test
push
jmp
icebp
daa
dec
sar
loope
aam
adc
or
xchg
cmc
jo
ficomp
call
adc
shl
ja
sti
bnd
push
sbb
(bad)
pusha
fnsave
and
ret
sar
loope
or
adc
call
int
ror
inc
inc
out
aam
xor
(bad)
push
movs
jmp
adc
and
movs
cmp
mov
mov
bound
popf
add
adc
pop
xor
pop
je
xchg
loop
cmp
jne
daa
mov
cmps
add
dec
lds
stos
adc
add
out
imul
inc
pushf
mov
rcr
pop
pushf
mov
push
in
add
jge
mov
jl
(bad)
lock
les
out
or
dec
xor
enter
out
sbb
push
push
enter
sub
shr
cmps
xchg
sbb
test
lahf
and
xchg
xor
int
or
(bad)
cmp
mov
inc
es
push
sub
fild
(bad)
mov
jmp
iret
loopne
push
lods
xor
push
add
(bad)
shl
scas
xlat
cmp
or
or
and
in
nop
iret
scas
cwde
(bad)
(bad)
loope
sbb
inc
push
dec
xor
sbb
xor
in
outs
cmps
pop
stc
mov
inc
and
xor
jbe
push
sahf
adc
xchg
fadd
mov
mov
inc
pop
inc
loopne
push
dec
add
push
jmp
and
xchg
das
sub
je
mov
inc
sbb
ins
mov
xchg
fcmovbe
sbb
jae
pop
into
imul
sub
xchg
mov
pop
mov
xchg
stos
push
and
shl
cmc
loop
repnz
jge
leave
aas
push
xor
push
sub
loope
(bad)
bnd
adc
and
and
pop
cli
cdq
retf
inc
out
mov
mov
inc
ret
mov
cdq
sub
or
add
dec
stc
test
fldcw
xor
daa
push
or
into
sbb
fdivr
adc
(bad)
in
mov
mov
add
inc
cmp
mov
cdq
jp
rcr
ds
pusha
and
ficomp
pop
mov
pop
lods
dec
in
cmp
and
repz
repz
icebp
xchg
arpl
data16
mov
or
mov
sbb
push
and
out
add
mov
jl
and
xor
cli
lods
fsubp
rol
cmp
and
imul
inc
lock
dec
in
fwait
nop
fxch
inc
add
xor
xor
xchg
jns
scas
stc
fs
aas
cld
jbe
movs
dec
sbb
mov
jecxz
jnp
adc
sub
out
jno
mov
retf
and
hlt
fcomp
adc
popf
add
mov
jns
adc
out
sub
das
push
dec
or
push
pop
sbb
mov
aas
ret
lods
fld
cmps
in
push
pop
push
sub
pop
cmp
loopne
sbb
and
fs
sbb
cmp
pop
es
sbb
mov
jecxz
push
loop
je
mov
leave
int3
mov
add
or
icebp
mov
add
loopne
fimul
cmps
or
movs
cmp
dec
mov
fs
addr16
jmp
xchg
and
bound
int3
pushf
and
cld
or
pop
popa
push
jns
pop
or
mov
add
jmp
pop
mov
mov
xchg
cli
and
add
or
popf
cmp
jnp
jne
cli
jne
mov
adc
add
enter
push
xchg
shl
js
xchg
icebp
repz
pop
pop
dec
and
in
xor
mov
fwait
push
or
nop
arpl
sbb
jo
push
jmp
ins
jae
cwde
cld
mov
cmp
adc
aad
and
push
sbb
into
xor
xor
lea
sti
mov
cdq
inc
aam
stos
out
enter
mov
mov
pop
clc
pusha
pop
jnp
mov
movs
push
daa
cld
int3
into
xchg
test
pusha
sub
push
fxam
dec
stos
fidiv
pop
ret
in
in
dec
cmp
pop
imul
test
fwait
xor
loop
adc
xlat
div
(bad)
cmps
pop
mov
pop
sbb
xlat
and
adc
call
adc
movs
sub
dec
ins
and
and
fidivr
test
fnsave
sub
retf
xchg
add
push
jae
dec
push
mov
mov
sbb
inc
retf
cld
(bad)
add
inc
ds
or
mov
aas
cdq
push
pop
and
xchg
mov
icebp
inc
cmp
add
and
pop
push
mov
mov
sahf
stc
inc
xor
pop
int3
push
inc
mov
aas
mov
enter
and
(bad)
fbstp
ins
add
pop
popa
mov
ins
add
popa
loop
mov
cmps
and
stc
ins
lds
je
sahf
dec
pop
adc
je
or
sbb
adc
sub
mov
pop
test
jne
popa
or
retf
mov
mov
mov
or
sar
in
cli
fadd
repz
fistp
lds
retf
add
mov
lods
cmps
xchg
pop
hlt
jno
repnz
cmp
pop
inc
bound
cmp
cmp
(bad)
xchg
lods
or
call
cld
add
pusha
sar
adc
mov
fs
cwde
xchg
mov
ja
in
mov
mov
and
jne
aas
outs
push
cmp
jno
jg
ret
test
cmc
aaa
addr16
push
je
scas
push
mov
bnd
icebp
push
mov
shl
add
jae
xchg
xor
push
mov
add
sbb
xchg
jbe
push
adc
cmp
loope
jmp
sahf
mov
in
xor
and
mov
es
pop
sahf
frstor
jo
cmc
pusha
cmps
jp
clc
sub
sbb
xchg
sahf
jbe
cmc
push
xchg
jbe
enter
mov
cmc
mov
adc
mov
and
mov
pusha
test
and
mov
mov
sbb
cld
mov
repz
pop
(bad)
inc
movs
lea
std
xor
jge
mov
jmp
ret
cmp
lahf
imul
sub
mov
jno
in
test
pop
imul
sub
jb
out
xchg
imul
push
xchg
dec
lahf
ds
jae
je
sub
mov
out
stc
je
adc
push
or
push
and
push
cmps
pushf
mov
cmp
inc
and
sbb
sbb
xor
and
lea
or
mov
xor
fstp
cmp
lods
or
xor
cmp
jno
in
pop
sub
add
pop
xor
ja
call
les
mov
test
out
stos
iret
ret
js
sbb
push
fdivr
or
adc
add
mov
xchg
xor
inc
rol
push
sahf
lods
adc
xchg
and
xchg
mov
mov
lahf
shl
jne
sub
sbb
out
aam
cs
inc
pop
repz
jle
sub
pop
mov
mov
ret
mov
lods
movs
pop
scas
push
dec
fadd
and
jb
std
cmp
fiadd
cmp
js
nop
adc
xor
cmp
jmp
mov
lds
xchg
xchg
jl
mov
pop
push
pop
fwait
arpl
es
clc
jmp
sbb
loopne
cmc
int
sbb
dec
mov
adc
pop
cmps
(bad)
fldenv
enter
sahf
sub
sbb
mov
xchg
out
cmps
mov
or
cmp
imul
mov
les
adc
or
mov
sub
sub
scas
test
loop
stos
cmps
or
sub
xor
xor
sub
xor
dec
test
sar
mov
ret
sti
xchg
jb
lods
aad
pop
mov
call
xchg
add
mov
mov
dec
pop
arpl
dec
scas
mov
inc
mov
xor
xchg
dec
xor
nop
jae
add
(bad)
cwde
call
lock
retf
inc
mov
retf
lds
fnsave
call
fidiv
inc
outs
fprem
xchg
mov
cmp
pop
dec
cmp
and
test
neg
inc
mov
jle
scas
mov
pusha
js
fidiv
and
or
mov
sti
out
fucomp
or
clc
mov
jecxz
pop
enter
int3
ins
(bad)
les
push
mov
pop
mov
push
outs
cdq
pop
sbb
divps
sub
add
outs
sub
or
xor
enter
pop
pop
and
and
movs
ds
push
cmc
jb
data16
pop
scas
lock
cmp
daa
pushf
fwait
dec
retf
(bad)
sub
add
out
fwait
repnz
jmp
(bad)
or
ins
jmp
pusha
mov
fimul
aas
cmc
iret
or
sub
lods
lock
inc
adc
dec
push
retf
cli
gs
daa
mov
sub
dec
rcl
in
add
mov
dec
cld
test
aam
mov
retf
sub
popf
jmp
push
fidivr
pop
(bad)
out
dec
push
push
aas
jp
aam
pop
and
movs
inc
cmovp
fwait
sbb
sbb
inc
jp
sub
mov
pop
fsub
cwde
fstp
(bad)
and
daa
cli
and
adc
mov
stos
sub
sub
jge
neg
push
cmc
dec
inc
xor
ja
pop
jno
cmp
rcr
sbb
jbe
cmc
add
mov
mov
inc
mov
fistp
sbb
xor
jecxz
jb
cmps
rcl
adc
hlt
(bad)
xor
jl
jnp
pop
cmp
aas
mov
fcom
inc
sub
(bad)
daa
cwde
pop
ret
ins
sahf
sahf
daa
or
push
xor
fadd
mov
cmps
pop
icebp
inc
(bad)
xchg
dec
and
in
mov
fwait
mov
pop
add
adc
mov
jo
add
loop
mov
mul
cli
push
sbb
mov
popa
jnp
ss
dec
lods
jp
jg
js
mov
jecxz
(bad)
jnp
and
pop
xchg
test
pusha
rol
out
not
dec
jg
xor
jl
push
push
mov
mov
cmp
push
mov
(bad)
push
mov
sbb
and
into
mov
rcr
mov
mov
stc
add
mov
add
loop
loop
mov
aaa
cmp
xchg
out
imul
stos
fld
jecxz
jg
retf
jbe
stc
or
or
add
jp
push
mul
mov
jl
les
and
shr
cmps
outs
or
(bad)
and
jmp
jae
addr16
cmp
dec
pop
push
icebp
sbb
fwait
es
sahf
fst
add
inc
push
xchg
lods
mov
push
pop
sbb
sub
mov
rol
(bad)
cmp
sbb
loope
mov
push
or
int
pop
xchg
loop
mov
fsub
adc
adc
stc
sub
out
jae
adc
mov
adc
imul
in
cmps
in
mov
dec
add
pop
loopne
bound
das
lock
xor
jg
jbe
(bad)
adc
and
pop
(bad)
out
inc
ins
gs
mov
sti
or
outs
mov
sbb
pop
xor
sub
adc
mov
jmp
adc
out
pop
jmp
mov
aas
fisubr
push
lea
inc
cmp
xchg
sub
adc
mov
cdq
mov
retf
lea
dec
shl
mov
pop
and
xchg
int
add
sti
out
add
repnz
jb
mov
not
pop
aaa
pop
and
push
and
xor
fld
cmp
mov
mov
cmp
push
in
daa
test
stc
jecxz
into
jmp
lock
push
ins
jno
jbe
out
fdivr
push
retf
(bad)
aam
inc
adc
jo
mov
pop
shr
mov
sub
ins
push
mov
xor
xchg
inc
xchg
adc
cmp
dec
cli
adc
(bad)
mov
shr
push
call
in
out
adc
dec
jecxz
retf
or
xchg
xor
cmp
push
dec
jo
sbb
add
push
inc
jns
dec
or
and
sti
(bad)
mov
(bad)
daa
push
aaa
jae
dec
dec
xor
mov
push
enter
xor
pop
inc
xchg
pop
sub
enter
fwait
sbb
int3
inc
push
sbb
sbb
shl
xchg
lock
addr16
repz
shr
pop
test
push
enter
mov
fld
jb
push
sar
and
push
jmp
fmul
dec
mov
sub
bound
mov
cmc
test
sub
repnz
movs
sub
xchg
cmps
retf
pop
inc
sub
scas
outs
inc
and
jbe
inc
icebp
push
imul
sub
pop
out
dec
jge
mov
push
add
js
and
jo
cmp
xchg
or
pop
das
retf
jnp
inc
dec
fadd
xchg
popa
sub
jmp
fistp
test
jecxz
retf
cli
test
retf
cld
xor
mov
jle
and
movs
xchg
adc
stos
ret
pop
mov
xchg
mov
xchg
add
(bad)
and
(bad)
dec
aam
jbe
xchg
out
push
sub
test
push
pop
mov
xchg
dec
mov
test
xchg
adc
cli
mov
shr
test
mov
iret
dec
icebp
mov
les
mov
jmp
lea
and
mov
pop
outs
nop
dec
xor
add
fsubr
dec
fmulp
test
sahf
mov
fcmovb
sub
jg
adc
pop
xor
mov
push
jnp
sub
or
in
cs
ror
adc
mov
pusha
pop
cdq
or
enter
inc
or
repnz
pop
xchg
mov
imul
mov
xchg
sub
push
push
movs
sub
jae
or
dec
push
adc
std
pop
dec
add
es
xchg
mov
jl
mov
add
test
cld
push
mov
cmp
lahf
dec
lock
sub
inc
test
xchg
popa
push
mov
loope
adc
mov
ins
in
sub
in
not
push
push
or
pop
push
push
adc
jg
lock
or
sbb
es
mov
and
aaa
cmp
out
imul
inc
icebp
sub
pop
sub
sbb
mov
sti
cmp
std
shr
(bad)
xor
int3
test
push
pusha
pop
fxch
int3
aad
lahf
mov
mov
(bad)
aaa
sub
mov
add
aas
pop
sbb
xor
cmp
fs
cs
das
jbe
sbb
mov
or
int
jns
cmp
in
popa
or
imul
mov
outs
inc
lods
sub
inc
(bad)
add
and
aam
mov
loop
push
enter
jecxz
outs
sub
mov
pushf
add
dec
dec
mov
shl
fldcw
sbb
idiv
je
retf
int3
daa
je
test
ins
and
scas
dec
cld
xchg
mov
rcr
and
test
cmp
mov
pop
je
daa
sbb
cwde
dec
lea
ins
(bad)
or
std
dec
jecxz
aam
fwait
rcl
scas
add
loopne
test
clc
cmp
sar
cmp
mov
pop
ss
and
or
xor
bswap
push
jns
xor
loopne
mov
(bad)
adc
dec
in
sub
push
cmp
ficom
dec
stc
adc
push
jle
daa
rol
loop
xchg
bound
xchg
popa
cmps
xchg
(bad)
pop
arpl
push
retf
fwait
sbb
ja
add
mov
pop
pop
xchg
xchg
cmp
imul
ret
test
cmp
fimul
xchg
test
pop
mov
neg
cmp
fcmovne
shl
xchg
push
dec
hlt
outs
leave
xor
cli
sahf
jl
mov
loopne
and
out
retf
xchg
xchg
jae
enter
mov
inc
subps
out
jb
xor
pop
sbb
cmp
push
jne
popa
fadd
ds
push
mov
fsub
outs
fstp
pop
xor
test
outs
push
ret
add
push
aad
fldcw
js
pusha
and
inc
add
iret
sti
mov
add
dec
fcom
sahf
cwde
mov
adc
mov
repz
jmp
add
jge
jl
into
test
fiadd
mov
lods
popa
dec
arpl
loop
data16
adc
gs
sub
movs
mov
push
cdq
neg
mov
movs
dec
pop
push
aas
fcomp
push
scas
icebp
loope
push
mov
mov
mov
and
sbb
shr
cld
inc
ror
cs
ret
add
in
mov
mov
push
or
ret
out
aad
inc
mov
(bad)
arpl
add
jl
or
adc
jne
popf
push
xor
std
iret
mov
cli
inc
xchg
fxtract
pusha
cmp
xchg
retf
in
(bad)
jl
jnp
xor
jl
enter
dec
cmps
push
lea
push
xlat
push
fwait
out
sub
xchg
js
movs
jbe
and
cli
lods
or
imul
rcl
enter
call
dec
xchg
cmc
mov
cmp
inc
arpl
inc
ja
call
sub
pushf
in
pop
call
rol
adc
ins
mov
shl
mov
and
fucomp
test
jno
mov
nop
mov
mov
out
xchg
or
jbe
push
xor
loop
mov
sar
idiv
jecxz
xor
push
sub
cmp
ins
pop
push
adc
sub
push
mov
mov
leave
daa
adc
fs
int
fstp
inc
aas
std
ja
hlt
push
pop
pop
inc
fisub
cmp
hlt
xchg
mul
adc
xchg
xor
call
cmc
test
xchg
leave
in
push
cdq
push
cs
out
mov
clc
call
or
xchg
dec
int
cmc
addr16
fisttp
jp
sub
pop
push
mov
int3
pop
inc
mov
daa
mov
into
mov
bnd
arpl
mov
sub
mov
pop
jo
xchg
sahf
mov
(bad)
mov
das
or
out
cld
cmps
pop
dec
(bad)
fldcw
(bad)
fbstp
jae
push
pushf
aas
pop
xor
pop
add
aam
mov
addr16
pusha
or
adc
inc
mov
jl
fistp
ss
xchg
not
inc
inc
aas
mov
retf
jns
jp
mov
js
fdivr
xchg
ret
cli
cmp
adc
fdiv
fs
mov
loope
add
push
dec
ins
daa
push
pop
outs
xchg
mov
sahf
loope
out
and
push
out
mov
cmp
add
inc
mov
mov
pop
jmp
ret
jg
mov
sub
sbb
fwait
mov
mov
push
mov
jmp
or
jo
ret
jo
or
nop
in
cmps
loope
rol
repnz
gs
je
es
inc
mov
add
cmp
out
rol
and
mov
mov
retf
push
out
imul
pop
inc
xchg
sbb
imul
and
retf
jns
fimul
push
xlat
pop
aas
mov
xchg
mov
pop
retf
pop
and
or
mov
xlat
jmp
nop
sub
mov
call
mov
in
fidiv
outs
cdq
faddp
sbb
dec
jmp
repnz
mov
aam
outs
sbb
cwd
in
or
shr
adc
mov
lahf
cdq
cs
in
xchg
(bad)
ret
(bad)
ja
add
cmp
pop
add
dec
cmp
xchg
or
stc
push
fwait
cdq
mov
ret
scas
stos
mov
xor
dec
xor
jno
icebp
xchg
outs
xor
loope
cmp
mov
test
jbe
imul
cmp
(bad)
outs
call
jno
daa
popf
pop
ret
push
mov
outs
xor
out
or
js
aad
push
(bad)
int
add
sti
jb
xor
and
stos
sbb
fstp
cmp
clc
inc
xor
xor
mov
mov
popf
pop
or
push
xchg
popf
rol
mov
mov
gs
mov
lds
or
jge
mov
popf
movs
retf
and
gs
xor
xchg
fbstp
jb
jne
mov
out
lds
push
lahf
push
cli
pop
jne
cs
push
or
test
dec
push
jmp
push
jne
leave
fistp
cmp
jne
inc
cs
lock
ins
ret
leave
jmp
xchg
push
xlat
mov
and
inc
dec
mov
pop
data16
aaa
lds
pop
ins
pop
cmp
fcmovbe
cdq
cld
mov
test
xor
xor
add
ret
cmp
cmp
in
mov
ret
adc
push
cmp
jge
shl
pop
sbb
inc
xor
movs
fstp
cmp
test
push
jl
push
xchg
mov
pop
out
inc
imul
xor
mov
xchg
pop
mov
and
jae
push
jbe
sbb
sbb
xchg
dec
pusha
jno
out
push
or
(bad)
adc
add
ror
adc
retf
adc
daa
(bad)
std
pop
pop
lea
inc
loopne
scas
inc
jmp
mov
push
into
lea
retf
ss
pop
dec
mov
xor
cmp
test
and
sub
adc
int3
inc
xchg
test
shl
test
sbb
dec
jnp
outs
sub
sub
movs
lods
mov
out
mov
or
out
dec
push
xchg
push
cmp
mov
scas
push
sahf
stc
sahf
push
mov
je
or
or
cld
iret
mov
xchg
sub
or
xor
lock
or
stos
adc
add
mov
pusha
loope
ss
test
xchg
and
adc
adc
pusha
mov
nop
fisttp
es
or
ror
dec
sbb
aad
scas
adc
sub
pop
(bad)
std
(bad)
aam
ins
dec
jmp
dec
fcmove
cmp
or
inc
push
inc
xor
sbb
ja
fucomip
fs
call
mul
adc
jb
(bad)
(bad)
adc
cmps
stc
jg
xor
cld
jmp
cmp
jbe
cmp
in
xchg
mov
cmp
into
rdtsc
(bad)
lea
lea
mov
xchg
push
adc
cmc
or
loop
push
xchg
xlat
xor
jnp
xor
push
xchg
mov
enter
sar
aam
sahf
std
xchg
push
iret
fcomp
mov
sub
iret
dec
lea
(bad)
out
addr16
(bad)
push
mov
scas
shr
jmp
das
xor
mov
inc
mov
movs
ret
ins
mov
xchg
or
int
daa
ror
lock
jmp
bnd
int
cwde
lahf
enter
rcl
xlat
add
sbb
hlt
mov
add
dec
or
xor
push
xlat
dec
mov
ret
inc
test
inc
rep
pop
adc
cmc
(bad)
xor
aas
mov
(bad)
fyl2xp1
aad
popf
push
not
imul
and
js
(bad)
mov
sub
and
xor
imul
dec
sub
ret
leave
lds
mov
mov
mov
pusha
cmc
dec
hlt
pop
das
and
sbb
adc
outs
dec
jle
pop
jmp
or
adc
stos
popf
das
lock
aad
mov
xor
push
push
mov
and
push
into
adc
cmp
cmp
jg
aas
inc
(bad)
aam
mov
sbb
adc
gs
inc
cmps
push
adc
retf
lds
adc
push
movs
jb
sar
inc
iret
push
jmp
and
mov
lods
stos
xchg
clc
or
ror
bound
addr16
out
bound
pop
ds
xor
outs
sbb
jno
cmp
or
mov
xor
and
shr
pop
mov
in
or
aas
popf
jns
out
jo
lea
test
xchg
(bad)
mov
lds
mov
dec
pop
add
call
outs
stos
or
stc
mov
mov
in
xor
cli
or
add
in
push
inc
cmp
jo
fnstsw
rcl
std
loop
or
cmp
in
lds
test
pop
sub
sub
dec
and
iret
xchg
bound
xchg
ins
outs
mov
jno
jecxz
rol
mov
stc
dec
(bad)
lock
retf
or
imul
add
cld
xchg
sti
sub
rcl
mov
call
mov
in
and
mov
ret
iret
test
cmp
or
dec
imul
cmps
push
sbb
fdiv
add
mov
lods
push
jne
dec
dec
dec
push
retf
cmc
pop
int3
mov
stos
xchg
pop
ud2
and
ret
cli
xor
jmp
push
jo
cli
pop
xchg
jmp
test
mov
sub
popf
gs
xlat
xor
jmp
push
hlt
ret
arpl
imul
leave
xchg
mov
xor
loope
fst
pop
les
sub
adc
sub
mov
aam
std
dec
mov
xchg
mov
mov
in
(bad)
aad
mov
mov
cmc
mov
push
ja
adc
(bad)
(bad)
rcl
not
js
mov
or
test
dec
and
ss
mov
sahf
add
ret
dec
leave
(bad)
ja
das
pop
adc
in
inc
addr16
and
mov
add
jnp
xchg
dec
push
push
fwait
or
in
ss
push
cmps
and
or
inc
xchg
shl
push
fcomip
nop
xor
loope
and
ret
jno
dec
cmp
popf
icebp
jae
push
jmp
pushf
mov
(bad)
xchg
pop
mov
cmps
inc
clc
paddsw
pop
hlt
jge
cli
enter
add
and
xchg
mov
loope
jne
inc
fmul
xchg
mov
out
mov
jne
cmps
push
xlat
mov
adc
int3
adc
lods
inc
std
test
pop
jle
sbb
out
push
or
ins
fadd
jbe
sub
pmaxub
adc
retf
dec
scas
push
push
xchg
ret
(bad)
jecxz
fldcw
sbb
jbe
out
mov
sbb
mov
add
test
test
pop
and
mov
fcmovnbe
ss
pop
jbe
in
outs
hlt
aad
push
(bad)
cld
mov
(bad)
sti
add
leave
into
inc
adc
retf
idiv
dec
xor
cmc
fst
and
mov
mov
nop
sbb
or
in
stos
inc
xchg
es
mov
out
rcr
or
bound
ret
std
add
and
xchg
mov
xchg
dec
imul
aad
mov
xchg
or
lods
iret
mov
pop
mov
pushf
(bad)
adc
cmps
shr
dec
int
out
xchg
xlat
mov
shl
cli
gs
lock
lahf
dec
cmp
add
shl
push
aaa
lods
movs
xchg
mov
pusha
jae
sub
push
sub
or
clc
xor
add
outs
mov
iret
outs
in
call
add
sub
xlat
pop
xchg
cmc
inc
les
in
aas
ret
cld
inc
test
daa
jae
out
repz
not
retf
lea
icebp
mov
iret
int
sub
in
shr
jg
ror
(bad)
popa
cmp
inc
aam
sub
jg
fstp
sub
mov
pusha
lods
stos
sub
not
(bad)
or
push
add
ficomp
cmp
(bad)
out
ins
jnp
das
sbb
jmp
inc
dec
add
xchg
mov
and
inc
push
inc
out
inc
mov
test
sti
(bad)
dec
cdq
mov
in
fcmovnb
ins
xchg
retf
movs
inc
add
mov
jo
bound
inc
xchg
xchg
sahf
pop
call
nop
xor
add
fs
xlat
ror
xchg
movs
aam
sti
dec
clc
dec
xor
sar
sub
jae
jno
sti
pusha
mov
div
mov
push
and
aaa
jno
pusha
ss
add
loope
sub
popf
add
and
in
idiv
xor
ror
lds
inc
xchg
mov
jnp
(bad)
out
pop
into
retf
idiv
sbb
iret
or
data16
(bad)
pop
cmp
hlt
test
jae
mov
sub
imul
cmp
mov
lods
adc
icebp
dec
jae
mov
dec
scas
cmp
push
jecxz
mov
test
xchg
cmp
shl
cli
packsswb
addr16
xor
xchg
pop
sahf
adc
mov
outs
into
and
mov
adc
inc
ins
lods
pop
iret
push
cpuid
imul
inc
pop
lods
sub
lds
xchg
bnd
add
push
cmp
cmps
fs
and
in
cmps
pop
out
fild
inc
adc
rcr
push
sub
sub
mov
addr16
push
pop
jae
addr16
ret
pop
sbb
out
scas
pop
stc
add
jns
push
rcl
xor
fld
cwde
cmp
hlt
add
pop
fstp
jmp
cdq
sbb
nop
lea
adc
lock
jp
pop
xchg
sbb
bound
jmp
enter
mov
daa
push
scas
stos
jne
aad
aas
push
(bad)
xchg
mov
adc
ret
mov
jo
test
or
adc
sub
ror
dec
retf
push
es
add
xor
add
adc
mov
xchg
mov
test
push
movs
cld
aam
arpl
lock
popa
add
and
or
pop
sti
xlat
pop
cmps
mov
fs
mov
shr
xor
pop
sub
ret
xchg
mov
pop
mov
mov
call
clc
dec
ret
aaa
xor
xchg
inc
xlat
imul
push
(bad)
jo
retf
cmp
push
mov
stos
push
cmp
and
jns
cmp
nop
jae
out
inc
movs
mov
xor
pop
or
xor
(bad)
dec
mov
inc
jbe
and
leave
or
sbb
mov
(bad)
push
push
out
sbb
mov
sti
sahf
mov
repz
push
mov
sti
(bad)
cmp
inc
(bad)
movs
gs
mov
ret
inc
add
pushf
add
arpl
test
sahf
into
or
jae
sahf
in
(bad)
arpl
xor
or
xchg
scas
mov
jno
mov
sti
inc
cmp
fisub
mov
or
inc
push
mov
adc
xchg
repz
icebp
dec
add
(bad)
(bad)
mov
mov
leave
outs
stos
sub
adc
mov
dec
jge
cmp
adc
mov
xchg
add
(bad)
mov
iret
jg
gs
lods
mov
xor
into
xchg
mov
bound
test
adc
repz
aaa
sbb
and
lds
lods
mov
js
and
inc
xor
in
mov
mov
int3
xchg
mov
cmps
dec
in
push
sbb
mov
in
cmp
sub
push
leave
sub
movs
rcr
lock
mov
add
(bad)
jmp
cmp
out
jbe
and
test
je
jge
sbb
xlat
jb
and
xchg
adc
cld
mov
push
adc
xchg
lds
stos
aaa
pop
mov
push
shl
mov
adc
or
dec
xor
sar
jb
shl
jb
lea
test
pop
mov
repz
lods
out
push
push
ret
mov
(bad)
sub
clc
hlt
mov
xor
and
jbe
xchg
dec
into
addr16
repnz
cmp
ss
into
mov
outs
ror
stc
mov
jp
xchg
add
cmc
push
lods
mov
gs
pop
popf
int3
push
imul
(bad)
scas
sbb
outs
lock
xchg
dec
add
or
xor
jmp
repz
mov
sub
push
retf
mov
inc
ret
loope
mov
fistp
add
fidivr
mov
les
sbb
dec
test
cmp
mov
inc
inc
pop
outs
pop
push
(bad)
mov
xchg
imul
ins
(bad)
stc
or
mov
mov
lahf
pop
sub
loopne
imul
mov
jae
popf
xor
dec
pop
jo
scas
das
jecxz
xor
mov
and
out
jae
add
(bad)
fdivr
xchg
(bad)
jb
xor
pop
sub
nop
and
gs
mov
inc
push
loope
into
or
fwait
in
jbe
xlat
dec
jns
mov
js
mov
xchg
ret
jle
push
mov
(bad)
xchg
mov
inc
push
or
je
and
mov
je
test
ret
sbb
and
jle
jns
call
dec
sub
add
sub
loopne
inc
cmp
cwde
xor
mov
out
je
add
jns
push
rcl
popa
add
lock
(bad)
enter
push
iret
ret
stc
mov
jge
sub
inc
fwait
mov
movs
pop
sar
popa
in
mov
xor
shl
pusha
adc
jmp
pushf
fcmovb
and
xchg
mov
(bad)
ins
ret
mov
repz
test
fcmovnb
shl
xor
in
mov
mov
mov
inc
xor
loope
cmp
push
sub
call
dec
or
es
jmp
test
xchg
test
ds
xor
xchg
push
into
ror
cmp
pushf
inc
push
jge
movntps
loope
pop
out
and
inc
ret
cwde
dec
frstor
rep
and
lahf
dec
push
xchg
adc
adc
call
cli
fs
shr
push
(bad)
and
mov
enter
mov
call
push
sbb
pop
cdq
jge
cmp
and
inc
inc
push
xor
pop
mov
out
push
jmp
les
jecxz
mov
not
push
sbb
int
cmps
mov
dec
xor
scas
neg
jge
mov
and
movs
(bad)
mov
mov
call
js
jns
(bad)
mul
jp
ficomp
push
mov
sti
lea
and
ja
fst
add
jg
and
pop
scas
mov
test
int3
xor
inc
test
push
test
mov
cdq
xchg
mov
pop
in
sbb
jge
(bad)
mov
mov
push
push
sbb
push
test
inc
pop
cmp
sub
fadd
outs
call
xlat
sub
xor
cld
inc
sbb
lods
leave
stos
xor
and
jle
cmp
jnp
mov
xor
xor
push
iret
stc
pop
pop
outs
sub
add
loopne
retf
out
mov
sbb
imul
lds
pop
pop
test
test
(bad)
pusha
dec
mov
sbb
outs
sub
mov
inc
in
bound
cmps
cmp
imul
inc
inc
mov
jmp
sub
pop
sti
xor
xchg
and
mov
cwde
ret
xchg
sub
aaa
lds
jecxz
test
mov
scas
out
ret
jecxz
push
sbb
mov
cmp
outs
js
or
and
add
jp
mov
test
(bad)
sbb
add
test
and
jl
data16
cs
mov
std
je
cmp
stos
xor
push
and
add
cmp
xor
pop
rol
add
push
jmp
xchg
push
and
xchg
add
rcl
push
xchg
xchg
or
mov
loope
dec
xchg
add
enter
fbld
mov
sub
lods
std
in
mov
in
fidiv
ret
cmps
(bad)
cmps
sbb
mov
mov
outs
div
in
out
pop
pop
jns
scas
push
dec
add
fnstsw
rcr
call
fs
jne
push
dec
push
lea
pop
aam
add
jno
cmp
fsubr
retf
xchg
cmp
ins
lock
mov
out
shr
stc
loope
xor
ret
push
lahf
ds
test
mov
jae
mov
outs
retf
test
int
add
push
xchg
aam
pop
push
sub
adc
push
fdivr
jecxz
jecxz
mov
add
mov
iret
or
sub
inc
push
js
ins
mov
jp
dec
ret
fcomp
pushf
xor
or
and
mov
sub
xchg
xor
lods
mov
cmp
movs
pushf
mov
cmp
jmp
in
scas
dec
dec
retf
pushf
sub
add
popf
xchg
mov
sub
push
jb
inc
push
lahf
and
jecxz
cmps
(bad)
or
(bad)
aam
mov
mov
push
pop
icebp
test
pusha
or
and
cs
mov
pop
cwde
mov
sub
cmps
leave
int3
scas
es
aad
popf
and
add
call
pop
dec
or
add
not
or
push
mov
popf
lock
sbb
sub
mov
std
mov
retf
adc
nop
sub
repnz
sti
and
int3
jne
mov
enter
and
bound
mov
aaa
not
xlat
mov
data16
pop
mov
popa
retf
dec
cmps
or
ret
dec
ret
sub
pop
mov
pop
nop
dec
aaa
aaa
push
sub
jp
xchg
shl
aad
sbb
scas
ret
xchg
leave
popa
add
ret
inc
test
cmp
imul
ret
cmp
test
dec
stc
xchg
mov
outs
mov
ins
jecxz
repz
pop
mov
adc
xor
mov
mov
scas
xor
jg
push
and
dec
fld
or
mov
or
int3
int
ins
ret
xchg
inc
cli
pop
popa
push
jl
sub
jne
or
aaa
stos
popa
aad
leave
iret
cmp
jmp
xor
xor
pop
das
push
movs
aam
or
and
jmp
mov
fistp
cmp
call
stc
xchg
addr16
arpl
cmps
adc
jno
ror
loope
cmps
(bad)
dec
aaa
pop
out
sub
add
test
imul
sbb
loope
jmp
out
sbb
mov
mov
pop
sti
xor
cmp
dec
or
data16
faddp
inc
add
dec
nop
sbb
jecxz
ins
ror
imul
(bad)
ret
call
cmp
add
push
imul
mov
adc
mov
loopne
imul
retf
inc
cli
dec
fisubr
mov
jmp
jns
test
dec
cmc
(bad)
hlt
fld
(bad)
push
xchg
or
add
and
jge
out
sti
fldcw
or
and
mov
pop
cwde
icebp
cmps
(bad)
daa
mov
mov
pop
jnp
fild
mov
lfs
push
or
push
mov
and
ret
cs
pop
ins
les
and
inc
fisubr
or
xor
(bad)
mov
aaa
(bad)
ss
pop
nop
outs
jnp
adc
loop
test
cmp
mov
loope
and
lds
je
cmp
lock
call
in
js
and
test
sbb
movs
mov
hlt
jne
sub
into
inc
ds
out
xor
adc
or
and
and
js
(bad)
stc
fistp
rol
and
aad
inc
sbb
retf
(bad)
stos
jmp
add
mov
dec
xlat
das
mov
xor
or
lahf
scas
jne
imul
fidiv
ins
in
ret
fs
inc
pop
lock
mov
test
scas
dec
sbb
adc
inc
mov
out
xlat
sub
or
sahf
sbb
addr16
dec
mov
test
enter
cmp
mov
dec
jle
dec
cmp
test
scas
mov
xor
leave
sbb
dec
fwait
sub
call
adc
pop
aas
loope
pop
adc
inc
add
and
xchg
pusha
inc
rcr
mov
fwait
xchg
pop
mov
mov
pop
(bad)
sti
sbb
mov
dec
ret
mov
adc
fisubr
jmp
dec
jmp
jb
and
sub
mov
push
xchg
mov
jno
mov
adc
outs
inc
fnstsw
xchg
mov
ds
xor
push
add
jg
push
ja
jmp
das
mov
mov
retf
xor
arpl
lahf
daa
cmp
push
aad
fwait
jnp
scas
leave
push
mov
sahf
mov
pop
add
outs
(bad)
nop
pop
test
dec
cld
retf
adc
xor
pop
std
mul
push
(bad)
jno
leave
out
(bad)
arpl
int3
loop
add
push
sbb
mov
cld
add
shl
ins
mov
daa
in
xor
ds
and
or
call
adc
pop
xor
outs
inc
out
jmp
cmps
xchg
out
loope
(bad)
mov
loope
add
rcl
dec
mov
cwde
xchg
xchg
mov
das
aas
pop
adc
aad
repz
les
out
adc
cmp
dec
jg
mov
call
out
cmp
aam
cld
fbstp
xchg
xlat
mov
in
sbb
mov
mov
sub
fchs
test
jle
mov
neg
es
sub
pop
mov
cmp
and
inc
pop
xchg
(bad)
lds
movs
in
sbb
push
fild
(bad)
mov
inc
push
stos
and
jmp
fs
daa
iret
mov
or
cmps
into
shl
mov
pop
adc
dec
mov
sbb
pusha
rol
mov
mov
xor
sub
or
sbb
loop
fstp
inc
nop
xchg
xchg
push
and
aaa
scas
lods
fnsave
(bad)
sbb
iret
add
scas
(bad)
shr
xor
sub
imul
les
dec
jmp
mov
stc
or
mov
es
and
sahf
cmp
mov
jo
jmp
popa
or
loopne
and
shr
or
mov
cmp
sahf
imul
pcmpgtb
enter
fistp
ins
mov
mov
std
(bad)
jne
addr16
ret
lods
xor
cmps
push
shr
leave
push
xchg
mov
mov
mov
pusha
sub
mov
or
lds
sbb
les
pop
cdq
inc
addr16
push
in
psrad
push
movs
jp
jo
scas
imul
mov
ss
inc
push
scas
imul
scas
xor
add
sbb
xchg
inc
inc
xchg
xor
dec
jne
call
iret
lahf
scas
ins
xchg
xor
scas
(bad)
dec
scas
jg
pop
shl
jle
(bad)
or
out
mov
lods
jle
sbb
retf
in
and
popf
cwde
push
cdq
pop
push
mov
pop
cmp
inc
sbb
jle
xor
sbb
mov
add
xchg
in
ror
ror
pusha
stos
out
(bad)
xchg
push
and
int
test
mov
pop
sbb
out
test
cwde
sahf
pop
jp
ud1
into
sbb
jmp
int
xor
or
fld
(bad)
sbb
adc
inc
mov
xor
out
inc
jmp
(bad)
sub
xor
jp
fcom
shl
mov
std
push
dec
sub
xchg
ja
outs
cli
jmp
test
repnz
mov
push
jle
(bad)
enter
add
inc
jle
iret
aam
cmp
mov
inc
cmp
mov
sbb
sub
fcmove
push
fsub
cmp
shl
jae
lods
ret
mov
push
dec
mov
mov
sub
jmp
mov
and
lods
sahf
out
aaa
mov
hlt
stos
inc
mov
mov
call
addr16
and
cmp
scas
icebp
std
push
(bad)
out
jg
fild
push
aas
je
adc
or
mov
pop
mov
(bad)
clc
push
pushf
int
sub
push
and
stos
mov
mov
lods
addr16
xor
pop
and
lahf
repz
sub
jo
pop
lock
adc
outs
jge
ja
xor
adc
inc
mov
inc
(bad)
xor
gs
out
(bad)
xor
aas
sbb
cmp
lahf
adc
ret
xchg
test
in
add
mov
jmp
mov
scas
sub
ja
sbb
repnz
icebp
pusha
push
popa
add
cli
cwde
sahf
mov
dec
sti
mov
mov
inc
jne
sub
fild
stos
sahf
pusha
xor
sub
xchg
inc
nop
aaa
iret
iret
dec
inc
adc
in
movs
sbb
mov
shl
fsub
mov
test
int3
dec
push
pushf
mov
es
add
sub
mov
mov
rcr
clc
push
mov
jae
mov
cmp
inc
imul
mov
dec
xchg
push
es
scas
imul
mov
je
fild
xor
cli
jmp
sub
mov
sar
sahf
mov
mov
ret
ins
pop
cwde
inc
ja
pop
adc
inc
pop
outs
stos
bound
repnz
lahf
outs
test
push
into
xchg
adc
pop
xlat
push
adc
cmp
leave
sub
(bad)
cs
push
les
out
inc
dec
pop
sbb
scas
push
sbb
fstp
(bad)
fcomp
and
xchg
test
test
mov
out
push
das
test
xchg
daa
dec
scas
test
mov
out
push
rol
cli
add
popf
jecxz
stc
cwde
xchg
add
sahf
lds
or
jno
mov
pusha
push
(bad)
jecxz
dec
clc
pushf
inc
cmp
rep
pop
call
add
sbb
pushf
sub
adc
xchg
(bad)
fimul
outs
popa
sbb
pop
shr
add
xchg
add
retf
jg
mov
sub
outs
xor
or
stc
xchg
sti
xor
hlt
push
stc
push
cmp
mov
daa
outs
enter
sub
add
stos
pop
xchg
rcl
daa
jo
sub
sub
mov
xchg
stos
jb
daa
mov
and
jmp
cwde
mov
imul
lahf
or
push
imul
dec
jmp
mov
in
inc
ja
mov
xchg
enter
ror
cmc
outs
loop
or
out
mov
xchg
fisubr
dec
adc
mov
int
sub
outs
sbb
push
std
int
mov
repnz
daa
mov
jmp
aaa
fisubr
ret
repnz
cmp
sbb
sbb
sub
or
xchg
icebp
xlat
push
sbb
jo
hlt
out
mov
push
pop
adc
outs
pop
mov
ror
dec
scas
cmp
icebp
sbb
mov
add
aad
mov
test
xrelease
adc
in
ins
shr
jbe
mov
and
(bad)
lahf
out
ins
lock
add
push
rol
mov
lock
stc
call
xor
call
pop
jle
pop
clc
jg
xchg
mov
lods
jnp
push
mov
and
addr16
cmp
rcl
sti
(bad)
mov
push
mov
push
mov
adc
and
adc
add
pop
sbb
std
push
jns
add
stc
test
mov
mov
xchg
pop
mov
xchg
es
push
mov
inc
pop
in
cmp
ss
pop
or
cmp
out
hlt
arpl
in
shl
pop
cmc
ror
repz
xchg
in
mov
sahf
in
or
pop
lods
xor
or
push
daa
add
sub
pop
xlat
pop
inc
jo
repz
push
lds
sbb
js
arpl
add
aas
pop
aam
push
sbb
ret
cmc
xabort
or
call
adc
pop
and
jl
dec
adc
sbb
mov
push
dec
jae
add
and
aam
addr16
adc
aam
xchg
sar
test
xchg
and
xor
add
es
inc
fsubr
adc
(bad)
cs
pusha
imul
jae
lods
add
js
stos
mov
loop
fdivr
and
fsubrp
mov
xor
test
(bad)
sahf
pop
inc
mov
mov
popa
test
adc
lods
popf
pop
dec
mov
sub
in
cmp
call
xor
pop
cmp
sbb
and
int3
nop
jmp
imul
xchg
add
fstp
das
test
mov
shl
push
loope
sub
sbb
pushfw
sub
xor
mov
adc
adc
retf
or
push
xlat
mov
lea
dec
jg
add
add
jle
js
xor
push
aad
rcr
(bad)
lds
ins
cmp
pop
dec
inc
ins
leave
les
in
xchg
cmp
scas
aam
lock
xchg
pop
daa
movs
test
or
push
test
sub
loop
idiv
mov
test
cmp
adc
mov
mov
inc
in
sahf
cli
cmc
jg
(bad)
mov
jp
icebp
ror
ja
js
das
(bad)
mov
daa
mov
out
cmp
(bad)
cs
pop
(bad)
xor
sti
push
dec
retf
movs
(bad)
iret
in
call
push
xor
sub
aam
inc
in
stos
or
sbb
and
rcl
pop
pop
scas
add
fst
adc
adc
test
pusha
adc
lods
xchg
inc
addr16
push
mov
call
cmp
cs
daa
mov
xor
push
mov
je
jmp
adc
(bad)
clc
add
xchg
mov
lods
test
lea
cmp
dec
(bad)
lods
pop
dec
fwait
sbb
jl
pop
mov
cmp
scas
jp
dec
dec
xor
jmp
fsubr
dec
movs
mov
add
or
or
icebp
lods
jmp
(bad)
outs
clc
test
retf
loopne
sbb
data16
arpl
ins
gs
push
xchg
push
cli
call
clc
and
xchg
jns
cmp
test
jmp
mov
adc
dec
arpl
gs
sbb
stos
clc
jle
fs
sti
dec
cmps
(bad)
push
lods
sub
popa
mov
call
sbb
jne
adc
cmc
movs
inc
dec
adc
aas
xchg
js
xor
dec
ins
(bad)
je
fcomp
cmp
pop
aad
xor
cmp
dec
imul
push
or
imul
pop
and
adc
push
or
rol
inc
(bad)
push
out
sbb
(bad)
(bad)
sbb
leave
adc
push
shr
and
pop
das
inc
dec
add
cmc
pop
or
es
sub
cdq
mov
push
mov
dec
pushf
fxch
test
das
pop
add
loope
lock
push
cmp
aaa
in
mov
nop
add
sbb
outs
and
add
mov
std
aam
jae
loopne
push
add
xor
or
adc
push
ficom
clc
add
ins
js
mov
rcr
sbb
outs
test
adc
sub
inc
jge
bsf
idiv
(bad)
js
cdq
sub
pusha
push
add
fs
dec
inc
in
es
xchg
shr
sub
mov
mov
sub
inc
jmp
or
and
scas
dec
mov
pop
bnd
adc
outs
jl
sbb
push
jle
pop
jg
pushf
mov
xchg
xchg
(bad)
jl
fcmovb
je
pushf
and
test
xchg
push
loop
mov
add
gs
pop
cmps
jne
mov
inc
jmp
sbb
out
scas
mov
cmc
leave
pop
mov
inc
pop
cli
mov
push
dec
jbe
pop
dec
cmp
ins
test
adc
and
pop
inc
jp
fmul
mov
(bad)
cmc
aas
outs
pop
xchg
stc
cmp
mov
push
sbb
push
dec
push
lea
shl
sar
arpl
jl
mov
repz
jb
loopne
dec
shl
sub
push
cmp
fisubr
ret
dec
jecxz
repnz
dec
sar
fbld
std
push
stos
leave
rcr
cdq
or
pusha
(bad)
aas
cmp
(bad)
dec
and
ins
pop
xchg
out
popa
push
fucomp
scas
cmp
adc
jg
push
rol
cli
(bad)
adc
xchg
xor
xor
push
mov
leave
adc
ss
out
leave
mov
inc
int
pop
inc
jmp
pop
adc
jne
repnz
enter
ss
xchg
push
adc
les
push
int
pop
sub
xchg
push
mov
retf
jmp
repnz
addr16
test
or
dec
pop
mov
dec
pusha
call
lahf
xchg
cwde
ja
inc
sar
je
retf
pop
xor
fwait
test
sbb
jo
in
or
scas
xchg
adc
fmul
out
cmp
imul
jne
mov
fidivr
dec
pop
call
sbb
pushw
push
jno
xor
xchg
push
inc
inc
xchg
cmp
inc
push
pop
aas
pop
jp
sbb
push
jmp
bound
std
xor
xchg
pop
dec
push
iret
(bad)
mov
gs
pop
popf
clc
out
pop
ins
stos
aas
and
add
jo
popf
or
rol
pop
retf
sbb
mov
out
in
iret
xchg
and
jmp
ins
inc
cwde
daa
lahf
arpl
jbe
shr
fs
cld
pop
mov
dec
ret
imul
jp
pop
and
xor
lock
dec
aad
(bad)
push
sub
jl
adc
sub
mov
popf
aaa
arpl
pushf
xchg
push
cmc
ret
in
ret
mov
pop
rcr
mov
daa
inc
enter
dec
jb
stos
dec
stc
push
call
mov
stc
xchg
sahf
cmp
stos
push
lds
cld
inc
pop
je
adc
jae
(bad)
loop
lods
pushf
mov
xlat
add
or
jg
sti
mov
lock
cdq
adc
fxch
push
ins
push
imul
div
xchg
or
push
clc
mov
movs
ror
(bad)
movs
les
add
ins
shr
jg
loopne
les
cmp
mov
retf
inc
and
push
dec
jnp
push
test
push
aad
arpl
ja
add
pop
aas
pop
inc
fucomp
mov
cmp
add
scas
sbb
lods
out
xlat
fld
dec
ja
fs
jg
fnsave
pushf
or
iret
mov
mov
mov
jo
cwde
je
push
jae
fdivr
loope
out
adc
fstp
push
in
adc
jecxz
in
fwait
mov
mov
pop
outs
add
sub
sub
xor
rol
dec
sti
movs
ds
xor
lock
jmp
xchg
dec
into
pop
rcl
jo
call
(bad)
sbb
out
aad
popf
lods
pop
push
push
cs
inc
xchg
in
sbb
sub
cmp
(bad)
mov
xor
inc
movs
repnz
pop
cdq
sahf
push
bound
es
xor
mov
push
call
adc
int3
add
bound
inc
popa
ss
push
jae
or
stos
fild
sbb
imul
es
outs
mov
into
out
add
mov
and
mov
rol
ins
imul
outs
inc
pop
inc
cmp
test
and
jecxz
xor
enter
mov
sub
fild
test
mov
in
repnz
stos
(bad)
jmp
mov
(bad)
pop
push
hlt
rol
or
mov
xchg
xor
lahf
clc
nop
call
inc
es
test
lods
scas
lock
jae
lea
mov
lods
icebp
xor
loope
push
aas
movs
xchg
pop
test
ins
inc
shl
jns
dec
nop
daa
pop
xor
clc
loope
call
or
mov
xchg
daa
pop
sbb
mov
xlat
add
out
popa
mov
mov
aas
pop
hlt
movs
and
sub
sbb
xor
inc
aaa
mov
mov
repz
fisttp
data16
fs
fs
lock
push
cmp
mov
ss
xchg
sub
lock
add
mov
pop
hlt
jb
pop
cmp
and
mov
inc
(bad)
mov
out
dec
dec
jae
push
lahf
pop
xor
ficomp
xor
imul
xor
mov
push
mov
outs
cld
and
cmp
lods
jne
push
mov
pop
fcmovne
aaa
call
fadd
xor
inc
lock
jne
loopne
pop
jmp
ficom
push
(bad)
pop
ds
cmp
or
(bad)
cld
mov
adc
mov
pop
push
sub
sbb
or
sbb
xchg
push
xchg
push
imul
adc
sub
inc
inc
out
sar
into
xor
mov
inc
pop
xor
iret
add
xchg
fild
dec
adc
mov
sub
fbld
mov
jp
fs
daa
cmps
fwait
xchg
nop
iret
push
mov
popa
inc
(bad)
push
stos
test
jno
adc
mov
mov
mov
gs
mov
sub
add
sar
jmp
or
ret
aad
es
test
jbe
pop
not
(bad)
fdiv
out
bound
out
adc
ja
adc
aaa
sbb
mov
add
inc
jnp
scas
push
xchg
xchg
retf
xchg
add
cmps
in
push
add
sbb
movs
(bad)
push
xchg
jno
sub
pop
mov
(bad)
fcmovnb
pop
call
inc
out
jge
mov
lahf
xchg
(bad)
jmp
xchg
mov
xchg
shl
jp
movs
dec
push
sahf
(bad)
xchg
sar
mov
mov
dec
inc
push
mov
mov
add
scas
add
loope
jae
in
in
pop
sbb
scas
in
push
pop
rcr
mov
out
js
jbe
mov
xchg
mov
lock
lock
addr16
sahf
fs
cmp
xor
sbb
fcmovb
pop
sub
lock
xchg
mov
adc
shl
ins
xchg
mov
lds
das
pop
mov
loope
js
xor
lahf
xor
vmovdqu
or
adc
lock
cmp
inc
sbb
jge
sbb
(bad)
scas
xchg
cmp
ror
call
pop
push
xchg
ud2
pop
sub
retf
(bad)
(bad)
arpl
arpl
bound
sbb
jbe
xchg
dec
mov
cmp
dec
mov
test
xchg
in
cdq
jp
mov
xor
inc
cmp
popf
dec
sub
pop
out
addr16
cmp
xchg
(bad)
aad
aas
(bad)
jl
push
sti
and
in
in
or
imul
stos
pop
fs
ret
je
cmps
mov
adc
pop
push
data16
mov
je
aad
test
test
daa
scas
fwait
sub
pop
xor
(bad)
pop
adc
inc
fsubr
mov
sub
gs
(bad)
jb
or
aas
and
mov
bound
test
cmp
pop
(bad)
ds
pop
sbb
sub
xor
rcr
mov
xchg
sar
mov
pop
dec
add
mov
pop
dec
dec
and
push
mov
push
sub
gs
scas
sbb
(bad)
dec
adc
(bad)
mov
mov
aad
mov
push
jl
jmp
mov
mov
data16
ror
jb
cwde
fisub
mov
and
and
jo
xchg
mov
jg
xor
pusha
push
ins
pop
pop
jo
ret
push
out
push
stos
movs
not
lds
adc
out
cmc
ficomp
mov
out
ins
pusha
retf
daa
imul
rcr
sub
cmp
shr
test
pop
popf
data16
aas
popa
shl
out
sar
dec
and
pop
fcomp
mov
and
popf
retf
test
retf
in
xchg
movsx
pusha
xor
into
fisttp
mov
pop
xchg
leave
out
std
dec
mov
dec
jns
(bad)
add
cdq
xchg
outs
push
rcr
stos
add
ss
jns
(bad)
cli
xchg
and
pop
jp
push
or
push
lock
(bad)
imul
inc
lods
fst
ins
push
dec
push
je
sti
push
std
pop
(bad)
xchg
inc
pop
mov
repz
sbb
xchg
and
xchg
mov
ins
imul
lds
pop
aas
lods
jecxz
mov
imul
mov
xchg
cmp
sbb
pop
cdq
dec
imul
cmp
pop
mov
aas
adc
add
scas
loopne
into
push
xchg
sub
loopne
fs
es
xchg
push
pusha
(bad)
add
xchg
idiv
adc
outs
push
shl
and
dec
or
loop
and
les
cdq
cmp
inc
xor
and
test
jns
mov
cmp
mov
xchg
lds
xor
fisttp
and
aam
pop
sub
jbe
bound
mov
neg
xor
popa
cmp
repz
dec
shl
cmp
push
setle
call
aas
(bad)
xor
cmps
jns
mov
mov
pop
dec
push
(bad)
xchg
out
dec
movs
mov
es
mov
jp
xchg
push
jp
xor
mov
inc
mov
dec
pushf
mov
jo
pop
loop
int3
lods
cmc
imul
inc
hlt
sbb
sbb
sti
cmps
sbb
or
dec
in
fdiv
push
call
out
sahf
xchg
jo
inc
addr16
movs
or
push
cmp
hlt
mov
sub
inc
stos
js
jnp
(bad)
out
jo
xchg
inc
fsub
mov
fiadd
out
xor
mov
mov
xchg
adc
mov
stc
jno
daa
mov
xchg
pop
sbb
cld
or
out
in
sub
cmps
ins
test
push
out
inc
lods
inc
icebp
enter
cmps
xchg
and
xchg
inc
sbb
jle
je
movs
jecxz
(bad)
add
mov
pop
fs
mov
mov
adc
call
scas
rcl
int3
jno
stc
nop
data16
cmc
fwait
mov
mov
aas
mov
mov
lahf
cmp
into
fild
inc
push
dec
xchg
dec
and
inc
adc
mov
pushf
out
jbe
sbb
jl
cmc
popf
bound
in
and
imul
hlt
pop
bound
mov
push
and
enter
or
dec
aad
push
(bad)
xchg
sahf
mov
(bad)
sub
ret
jge
(bad)
mov
fwait
or
jg
stc
aaa
xchg
mov
ins
mov
popf
jle
add
in
lock
out
cmp
push
add
fstp
cdq
in
movs
fs
stc
mov
and
in
shl
mov
imul
sub
or
fnsave
mov
cld
lea
push
in
das
xor
sbb
leave
nop
sbb
cs
inc
mov
xor
aad
jl
sbb
and
(bad)
fst
jno
leave
(bad)
mov
sub
jbe
movnti
(bad)
rol
(bad)
popa
pop
xlat
popa
fcomp
adc
jno
cmc
call
outs
(bad)
or
xor
pop
lods
stc
clc
and
dec
stos
sub
loope
(bad)
mov
cmp
scas
pop
xchg
out
add
mov
les
retf
call
in
xor
jle
ror
or
cmps
cmp
lahf
(bad)
jle
mov
iret
movs
popf
inc
in
mov
test
stos
neg
mov
cmp
jp
loop
or
into
or
xor
retf
out
fiadd
mov
and
lods
aad
mov
jle
cmps
dec
xor
add
test
xor
fisubr
movs
mov
loope
xchg
xchg
loope
imul
int
xchg
test
adc
add
xor
cmp
outs
popf
dec
push
ins
inc
loopne
sub
xor
and
push
je
fcomp
lods
fcom
xchg
add
test
or
sbb
inc
mov
out
das
sub
dec
mov
cmps
mov
sub
pop
dec
call
adc
fisttp
or
scas
cmp
jle
scas
pop
push
add
lahf
ins
mov
cwde
mov
dec
push
retf
outs
cmp
cmp
out
fisub
xor
adc
(bad)
adc
xor
jle
repnz
xchg
push
cmp
lea
test
leave
cli
add
outs
mov
repz
ins
into
ja
xor
or
and
cmps
push
test
push
push
sub
cli
sti
jle
push
iret
int3
(bad)
cwde
lahf
out
mov
ds
adc
nop
imul
sub
mov
call
mov
sti
inc
je
or
jp
div
in
repz
mov
mov
in
xchg
mov
stos
retf
xchg
sub
mov
movs
sti
mov
icebp
xchg
mov
outs
pop
div
cmps
sahf
imul
enter
mov
cmp
inc
cli
mov
(bad)
movs
cwde
sbb
mov
add
retf
jo
mov
mov
and
rcl
jb
xchg
cdq
popf
int3
sub
jmp
sbb
mov
xlat
dec
add
xor
mov
or
and
pop
out
add
jbe
cmp
jne
inc
loopne
adc
adc
sbb
js
add
push
jae
inc
cvtdq2ps
cmp
jo
push
or
lods
(bad)
pop
pop
lods
pop
scas
mov
daa
data16
sub
mov
fisub
test
cmc
in
fs
dec
ficomp
xchg
ss
mov
xchg
mov
loop
push
pop
es
popa
shl
push
jl
adc
push
call
movs
daa
fcom
and
mov
out
clc
xchg
(bad)
xor
retf
mov
outs
int3
ins
pop
adc
dec
dec
stos
in
shl
jge
inc
arpl
mov
loope
sahf
and
or
add
sahf
jmp
dec
inc
adc
xor
mov
or
std
das
movs
cmp
push
out
clc
aam
dec
jb
or
sub
mov
mov
add
lea
dec
test
sbb
inc
cmp
pop
int3
fsub
in
lods
js
inc
push
jnp
loope
xor
xchg
cmp
scas
pushf
dec
xor
je
adc
rcl
mov
shr
js
push
mov
sar
cdq
cmp
adc
cwde
shl
loop
xor
sub
test
fs
in
jmp
mov
stos
leave
loop
rol
inc
(bad)
and
inc
inc
push
hlt
setge
retf
loop
rol
enter
das
movs
outs
jbe
jge
ret
ret
inc
pop
cmp
mov
loopne
fild
inc
dec
movs
push
add
inc
cmp
push
or
push
push
mov
in
sahf
test
sub
jmp
sub
mov
jae
(bad)
(bad)
push
push
mov
jp
data16
mov
cwde
jns
push
in
(bad)
loope
test
add
dec
xor
inc
neg
and
(bad)
mov
ss
mov
pop
les
pop
into
les
idiv
mov
gs
dec
lods
dec
mov
out
dec
lds
and
jae
inc
aad
int
mov
dec
mov
aam
inc
dec
inc
ss
test
sub
or
sub
or
sub
mov
popf
pop
xchg
movs
dec
fstp
pop
push
scas
cmp
es
dec
je
loope
int3
and
or
mov
cdq
pop
push
push
adc
jg
dec
jecxz
test
popf
sub
sub
cmp
aad
sti
sbb
das
popf
ja
and
mov
(bad)
adc
mov
scas
push
inc
stos
lea
bound
int
pop
xchg
fnstsw
jnp
mov
push
mov
rcl
dec
ss
mov
mov
sbb
nop
shl
pop
push
iret
adc
add
addr16
cmp
jbe
xchg
les
cmp
lods
xchg
aas
test
add
sub
jmp
out
cli
cwde
retf
out
dec
mov
and
das
pop
inc
and
out
ins
addr16
frstor
bnd
and
sub
sub
mov
push
and
inc
xchg
dec
jg
or
fild
dec
sub
les
shl
sbb
call
or
add
fimul
(bad)
push
sbb
bound
or
popf
sub
push
imul
xchg
mov
sub
lods
add
js
stos
out
call
push
in
mov
push
jp
mov
or
jae
in
cli
out
jae
ja
sti
or
cs
aad
cmp
mov
pop
not
test
fnstcw
(bad)
sbb
into
stos
hlt
mov
push
sub
or
ror
(bad)
retf
jno
vmaxsd
fidiv
pop
push
test
pop
sar
xor
fild
add
ret
add
daa
sub
jecxz
mov
mov
js
jns
pop
sbb
add
ds
clc
xor
inc
jo
hlt
mov
retf
or
mov
sbb
inc
rcr
push
retf
repz
int
mov
les
or
mov
xchg
test
add
stos
push
repz
xchg
adc
jns
push
rcl
push
pop
xlat
ins
fidiv
push
retf
jb
xchg
fmul
dec
cwde
out
mov
mov
jge
push
shl
ja
leave
jae
iret
imul
test
push
adc
and
jecxz
sar
push
in
or
adc
ss
dec
mov
popa
out
cwde
add
daa
inc
mov
jb
xchg
inc
data16
xor
xchg
jmp
add
jle
movs
mov
clc
cmps
jmp
jp
les
and
out
in
pusha
out
(bad)
shl
sub
cmc
or
leave
in
mov
popf
out
test
and
call
shl
sub
(bad)
call
xchg
xchg
xchg
loop
lods
ins
cmp
stc
push
and
xchg
int3
ds
mov
or
jns
aad
les
mov
fnstsw
mov
jmp
cwde
bound
enter
rcr
sub
push
jbe
out
dec
fwait
repnz
fcmovnu
cmps
sub
inc
mov
fwait
jo
push
shl
scas
call
mov
or
xchg
jg
clc
lods
retf
push
adc
add
leave
add
imul
mov
xchg
fwait
mov
mov
mov
cli
loopne
sub
xchg
pushf
stc
lahf
pop
lods
sti
jmp
jp
fmulp
es
pop
pusha
in
nop
psubd
je
rcl
mov
mov
test
ficom
in
ins
dec
sub
or
mov
leave
faddp
dec
xor
fneni(8087
fistp
es
xor
data16
push
sub
push
ss
jg
cmps
xchg
bound
(bad)
popf
and
(bad)
push
adc
outs
shr
push
cmp
cmps
shl
xor
xchg
jecxz
in
add
(bad)
mov
xlat
and
lods
and
dec
mov
sub
in
sbb
pop
mov
xchg
sbb
push
adc
pop
test
ins
mov
loope
cmps
and
mov
push
movs
rcl
in
call
es
ja
pushf
scas
mov
or
stos
jmp
shr
jge
cmp
jle
xor
(bad)
and
out
pop
or
push
cld
jo
cmp
hlt
data16
push
lds
rcl
or
push
jo
out
xor
sub
ins
int3
shr
sahf
cli
dec
call
push
popa
mov
jmp
and
in
hlt
je
int
mov
mov
push
inc
sub
or
sub
inc
out
jle
push
fld
int3
lds
sti
jg
mov
pushf
mov
jl
aad
imul
jl
lds
dec
cli
mov
mov
nop
adc
xchg
dec
jno
add
int
icebp
aaa
and
jl
jb
and
inc
or
xor
bound
data16
mov
pop
jmp
inc
push
lock
cs
out
push
xor
(bad)
push
jle
add
xor
dec
daa
and
mov
mov
loopne
xchg
movs
dec
enter
jecxz
lahf
das
jge
(bad)
lock
call
sub
int
(bad)
and
mov
push
cmps
dec
scas
push
mov
cmc
cli
mov
or
(bad)
fcomp
dec
outs
retf
or
sub
and
or
fsubr
ret
push
popa
xchg
cld
jl
add
shl
lock
jo
in
outs
xchg
test
aas
nop
cmp
out
xor
cwde
xchg
(bad)
daa
add
jecxz
mov
test
dec
in
pop
ja
inc
dec
mov
ss
dec
jnp
test
cmc
stos
fbld
call
xchg
mov
jge
jnp
and
xor
add
(bad)
(bad)
add
sbb
mov
sub
cmps
xchg
cmp
cli
add
hlt
arpl
lods
jo
and
push
or
push
xchg
(bad)
and
jmp
(bad)
sbb
jecxz
push
xor
xor
repnz
ret
enter
movs
adc
mov
jbe
add
ins
or
mov
(bad)
lock
out
cmps
clc
push
or
xchg
push
mov
stos
dec
jnp
jne
xor
leave
inc
fisubr
and
xor
mov
and
dec
imul
ror
ror
cmps
mov
mov
push
fadd
jbe
lds
xor
adc
add
daa
outs
mov
adc
cld
std
call
pop
stos
xlat
sbb
xchg
adc
mov
mov
mov
cmp
retf
jae
inc
sub
mov
out
cli
push
fistp
mov
dec
sub
imul
aad
jno
stc
call
pop
cdq
icebp
aad
cmp
loop
movs
call
mov
lods
jne
mov
and
mov
jl
daa
mov
call
xor
mov
sbb
xchg
outs
mov
icebp
sub
loope
(bad)
pusha
xchg
push
dec
ja
call
jo
or
popa
mov
cmp
adc
test
mov
push
outs
jge
xor
inc
jl
gs
xchg
sub
cmp
leave
sti
or
xor
jb
pop
jmp
add
imul
hlt
clc
(bad)
adc
mov
cmps
mov
(bad)
push
adc
or
xor
cmps
std
fldenv
pop
push
out
aaa
(bad)
and
jnp
cmc
jge
add
push
mov
rol
mov
pop
or
push
shr
pop
fmul
and
lahf
stos
shl
inc
sysret
data16
call
(bad)
iret
xchg
pop
push
imul
and
or
xchg
push
mov
mov
call
pop
test
mov
cdq
dec
outs
mov
(bad)
jb
ja
mov
into
(bad)
loope
xor
inc
fstp
rol
push
arpl
jne
sar
cs
or
mov
scas
pop
out
inc
jae
xor
stc
aas
sub
ja
xchg
imul
std
adc
sbb
push
xor
add
push
sbb
scas
jmp
pushf
leave
and
add
fst
or
sbb
data16
pusha
int3
adc
push
push
lea
sub
fwait
jecxz
mov
push
push
jmp
add
jle
inc
fld
rol
mov
pop
mov
and
pop
mov
out
(bad)
and
mov
mov
adc
add
into
lock
(bad)
pop
cmp
mov
lods
jg
and
jae
cmps
(bad)
mov
inc
ins
ins
push
out
jmp
scas
mov
push
cmc
cmp
mov
push
scas
sbb
fwait
rcr
in
jno
push
stc
xor
daa
xor
dec
jnp
test
jl
add
inc
loopne
sub
imul
and
pushf
fdivrp
scas
cmp
push
mov
lahf
and
addr16
xor
aad
enter
mov
jge
add
fisttp
add
mov
movs
retf
in
lock
lds
sbb
repz
add
loopne
mov
vpshld
das
mov
loop
outs
adc
jg
adc
ret
(bad)
mov
add
and
mov
ficom
cmps
sbb
int3
outs
call
xchg
push
adc
add
sub
jg
pop
push
push
adc
jg
fild
pop
or
inc
mov
or
sbb
cmp
in
cmp
jbe
cmps
add
aad
(bad)
pusha
mov
push
add
xchg
xlat
popa
push
ss
mov
inc
or
adc
ror
fmul
in
push
rcl
retf
push
and
mov
dec
dec
(bad)
cmp
aaa
push
jmp
lds
mov
repnz
imul
cld
(bad)
push
xchg
aas
jmp
cli
mov
cdq
out
aas
fild
out
mov
aad
std
outs
mov
pop
pop
aam
mov
xor
mov
cmp
aas
inc
jp
jnp
xchg
sbb
xor
jno
and
pop
sub
cmp
cmp
out
cmc
addr16
pop
ds
mov
sbb
addr16
aad
mov
xchg
mov
cwde
sar
cld
dec
pop
int3
cs
jmp
pop
mov
jmp
fwait
ja
xchg
fcomp
(bad)
and
je
mov
jmp
xor
ds
cdq
pop
jl
mov
mov
cmps
xor
dec
ficom
push
sub
cmp
xchg
fsubr
sub
test
mov
aam
mov
push
fcom
inc
xor
jmp
adc
jge
push
sub
adc
cmc
lods
clc
pushf
or
es
push
xor
aaa
fld
stos
cmps
dec
fadd
jecxz
pop
sub
xor
(bad)
pushf
mov
in
lods
lahf
fisub
daa
mov
fwait
mov
sbb
loop
cmps
daa
out
int3
cmp
and
or
xchg
(bad)
and
fwait
dec
fs
cmps
loop
xchg
rcl
jne
jle
or
lock
rol
pop
lds
sub
adc
xchg
aas
test
popf
mov
movs
lods
sub
or
in
gs
clc
dec
or
add
jge
add
jmp
nop
xlat
ss
into
xchg
xor
jno
and
push
sub
repz
stc
fistp
add
push
shl
inc
sbb
out
or
popa
sbb
push
adc
cli
or
push
test
pop
inc
push
fdivr
repz
mov
out
les
les
stos
push
data16
prefetch
or
stos
(bad)
mov
mov
mov
mov
push
or
(bad)
jnp
test
mov
test
inc
jmp
xchg
fldenv
push
cwde
jb
lock
mov
mov
xchg
data16
jo
cmp
ficomp
jecxz
adc
mov
push
inc
test
je
jae
mov
xchg
repnz
clc
inc
imul
mov
push
nop
inc
xchg
popf
pop
jmp
loop
cmps
in
cli
cmp
fbld
pop
dec
rcl
out
in
lahf
pop
mov
cmp
dec
sub
push
push
aaa
icebp
xor
jne
js
ret
jg
out
icebp
and
call
dec
pop
lods
or
outs
(bad)
mov
sub
push
iret
or
mov
jmp
jno
or
adc
fidiv
fsubrp
dec
sar
hlt
jnp
push
rcr
arpl
push
and
jo
push
xor
or
ins
popa
pop
xchg
ins
push
pop
mov
dec
pop
xor
sub
enter
cld
std
je
aaa
dec
sbb
lea
movs
pop
xchg
pop
sbb
repz
sbb
das
push
pop
sysexit
jb
cmp
adc
scas
pop
xor
cmp
xchg
bound
shl
pop
daa
int
dec
xchg
push
xlat
dec
aaa
or
and
js
aad
bnd
mov
or
fs
jle
push
test
and
sbb
dec
push
ds
fcom
or
enter
jno
out
xchg
mov
aas
pop
test
and
mov
rcl
int
repnz
mov
call
loopne
sti
adc
int3
(bad)
mov
ja
fsubr
add
imul
pop
mov
jno
in
repz
les
mov
xor
mov
push
jmp
sub
inc
outs
pop
scas
das
dec
ffreep
shr
or
test
das
in
inc
pop
push
push
test
ret
xor
cdq
stos
js
inc
shl
xchg
sub
adc
inc
retf
pop
sub
outs
dec
(bad)
fnstenv
push
adc
xchg
cmp
adc
adc
ins
push
popf
call
add
mov
push
inc
sub
jp
popa
cmps
sub
inc
pop
rcl
imul
push
das
mov
mov
xor
hlt
or
jmp
xor
inc
mov
mov
cli
add
std
fcmove
add
push
(bad)
outs
and
add
fdivr
sbb
xchg
adc
mov
dec
sbb
dec
fcomip
sub
not
cmp
pop
jmp
lahf
push
mov
inc
clc
test
dec
xchg
ds
sub
xchg
aas
push
sbb
mov
fst
mov
retf
clc
shr
out
xchg
mov
sbb
sbb
push
jb
fnstenv
push
(bad)
scas
inc
cmp
sbb
sbb
fnstsw
sti
gs
lods
sbb
retf
dec
inc
loope
icebp
and
inc
ja
inc
(bad)
pop
xor
ret
add
inc
repz
pop
lods
stc
or
jae
repz
fdiv
xchg
retf
(bad)
add
jae
mov
cmc
test
ins
test
bound
retf
rcr
data16
mov
adc
test
repnz
add
in
ret
(bad)
out
popa
xor
adc
jge
cwde
rol
mov
(bad)
imul
loope
xor
cmc
jmp
adc
repnz
cmc
ins
push
cmp
gs
xor
mov
in
push
dec
fbstp
dec
or
add
in
(bad)
dec
inc
mov
test
bound
add
fwait
test
fcom
arpl
jnp
xor
addr16
and
add
mov
sub
mov
xor
dec
dec
and
jb
ret
stc
and
sub
repz
adc
sbb
mov
pushf
xchg
lods
xchg
jno
in
call
ror
scas
sbb
in
or
push
lock
clc
into
nop
ss
cs
sub
loopne
imul
jo
pop
and
sbb
pushf
dec
inc
enter
cld
xchg
data16
jbe
cmps
add
stc
jno
jns
sbb
jmp
aad
daa
int
jno
outs
repnz
jmp
cmp
xlat
mov
pushf
pop
xor
paddb
mov
fs
push
dec
cmps
ins
in
jg
mov
pop
mov
cmps
adc
or
out
or
mov
fldcw
into
inc
and
fs
rcr
fimul
jmp
jbe
xor
xor
imul
sub
add
(bad)
jle
ins
xor
add
sbb
and
fnsave
ins
mov
cmps
out
inc
mov
xor
out
pop
and
add
or
xchg
jp
and
add
push
test
aad
out
bound
dec
sub
or
or
dec
pop
sub
jl
add
gs
push
mov
icebp
dec
sbb
inc
test
add
outs
jae
pop
jb
pop
jnp
not
pop
add
popa
sub
sbb
enter
std
inc
inc
dec
mov
stos
push
xor
or
cmp
xchg
push
push
in
mov
mov
jo
dec
test
test
hlt
xor
lahf
rcl
pop
mov
enter
jns
xchg
mov
(bad)
jmp
shl
fldenv
jg
sbb
in
test
mov
push
jne
iret
cdq
lds
xchg
xchg
jmp
out
(bad)
in
rcl
xor
inc
rcr
movs
lds
js
push
lods
or
jge
dec
adc
dec
call
pop
daa
test
in
std
ret
push
cmovp
adc
cdq
ja
(bad)
cs
movs
in
aad
test
pop
inc
dec
(bad)
out
dec
inc
sbb
fnstenv
xchg
mov
adc
push
sub
hlt
mov
jl
mov
mov
aad
ret
or
cmps
ja
dec
jle
ror
ds
(bad)
cmp
jnp
and
cmp
mov
mov
out
dec
jp
mov
imul
popa
push
std
pop
inc
pop
sahf
loopne
dec
pop
push
jmp
(bad)
pop
dec
xlat
pop
sti
mov
pop
call
inc
cmp
popf
jb
mov
data16
ret
push
xchg
xor
popa
pop
pop
push
mov
imul
mov
ffreep
adc
sahf
ret
push
pop
push
(bad)
out
cmc
dec
push
mov
inc
aam
pop
ja
add
(bad)
bswap
data16
bound
inc
mov
imul
dec
mov
es
scas
sub
sbb
mov
out
in
xchg
mov
mov
rol
fisub
sub
or
loope
cmp
aaa
xchg
mov
xchg
mov
retf
ss
lds
jmp
pop
icebp
jo
sbb
pop
mov
stos
cli
lods
jae
cld
iret
push
add
imul
inc
hlt
xor
cmp
inc
dec
movs
clc
add
mov
pushf
inc
sahf
mov
dec
enter
hlt
push
mov
into
mov
fs
pushf
inc
dec
push
push
add
dec
pop
imul
cmovb
(bad)
add
xchg
and
sti
fs
cs
cmc
jb
fadd
or
cmps
sbb
stos
test
in
fs
das
adc
push
pop
cmp
sub
xchg
sbb
cld
(bad)
sti
jmp
push
shl
out
xchg
loop
in
jno
xor
cmps
or
repnz
addr16
sbb
jnp
shl
(bad)
loop
pop
inc
xor
push
(bad)
(bad)
fistp
mov
and
sub
retf
nop
inc
movs
cmp
hlt
ins
xlat
sub
push
stos
dec
pushf
push
int3
int3
pop
pop
xchg
sti
mov
sbb
stc
mov
jmp
in
rcl
(bad)
outs
js
fnstcw
mov
retf
lock
mov
push
add
mov
xor
mov
adc
shr
retf
jmp
mov
ret
or
xor
xchg
movs
adc
hlt
mov
jne
aam
xchg
adc
fimul
retf
dec
push
mov
cmp
clc
inc
test
xchg
in
repnz
ins
ror
pop
or
into
mov
mov
jg
cs
lds
xchg
jmp
arpl
test
aam
mov
(bad)
das
pusha
daa
sbb
pushf
add
stos
pushf
ret
pop
pop
aas
cmps
inc
mov
addr16
popa
or
mov
ins
gs
jbe
and
adc
inc
jno
xor
in
inc
xchg
cmp
nop
jge
cmp
in
and
adc
scas
std
xchg
push
retf
cs
fldcw
outs
iret
(bad)
retf
xor
in
jb
addr16
les
xchg
dec
add
inc
pop
sbb
sbb
clc
sahf
adc
xchg
daa
inc
out
lahf
xor
loop
cmps
add
in
jg
out
outs
push
add
int3
aad
xlat
push
add
mov
ds
imul
mov
xchg
outs
in
cld
jl
ins
adc
movs
fisttp
xor
addr16
xor
push
adc
clc
xor
popa
push
jle
cdq
in
adc
test
inc
addr16
daa
push
sbb
push
mov
fnsave
dec
mov
sbb
jg
f2xm1
leave
mov
in
cs
mov
push
in
sub
test
icebp
cmp
mov
jmp
jl
xor
mov
mov
and
mov
dec
jnp
jg
sbb
sbb
loop
popf
sub
neg
adc
sbb
shl
inc
sahf
inc
xchg
sub
(bad)
rcr
movs
je
mov
inc
test
imul
lea
sar
lods
(bad)
adc
aad
push
pop
mov
loope
sahf
in
jmp
ss
ror
movs
pop
sahf
cwde
mov
ins
rol
cmp
popa
cmp
loop
inc
or
into
call
outs
jne
mov
mov
xchg
jmp
push
adc
scas
call
retf
add
lahf
jmp
push
pop
xchg
xor
xchg
inc
and
adc
inc
jae
and
xchg
stos
outs
rcl
icebp
cmp
aaa
dec
not
imul
sbb
stc
popa
ja
cmp
adc
inc
lock
inc
jl
movs
fcmovne
js
retf
push
inc
add
mov
xchg
pop
ss
inc
fisttp
popf
data16
arpl
sub
clc
push
aad
fs
retf
dec
pop
jg
cdq
or
push
fsub
call
fisttp
add
jp
adc
fld
call
add
clc
(bad)
scas
lea
out
mov
sbb
repz
iret
movs
daa
pop
and
mov
push
les
cld
or
mov
aam
inc
sub
retf
fs
(bad)
fmul
scas
cmp
scas
imul
xchg
sti
xor
aas
mov
inc
add
jno
fidivr
jmp
jmp
jo
xor
mov
adc
mov
jmp
cmp
into
xor
inc
fld
jmp
adc
mov
scas
pop
adc
xlat
jo
push
inc
xchg
xchg
mov
in
fnstsw
out
in
adc
sahf
sbb
lods
fadd
push
test
(bad)
mov
out
cmp
test
add
mov
and
xchg
leave
push
ins
sub
jle
dec
mov
or
sub
repz
(bad)
fs
aam
push
inc
xchg
xor
mov
lahf
push
and
ffreep
test
imul
pop
test
mov
jae
pop
hlt
xchg
inc
jmp
imul
push
fwait
cmp
mov
in
sti
push
aaa
in
mov
add
loopne
pop
adc
mov
push
inc
push
dec
push
add
and
iret
push
dec
jns
jno
hlt
mov
push
sbb
push
les
fdivp
fwait
stos
cld
and
mov
call
movs
out
sar
js
push
aas
adc
ins
dec
cmps
pop
mov
sub
call
jle
cld
fisub
add
mov
fsubr
ficom
inc
repnz
scas
sti
inc
xchg
cdq
pop
test
clc
and
xor
cwde
mov
xchg
stos
leave
test
cmps
out
lahf
dec
push
gs
pop
call
add
cmc
stos
push
and
mov
lock
mov
xchg
push
popa
out
fadd
push
data16
ret
add
xchg
test
and
adc
sub
or
test
push
pop
xor
adc
sub
xor
mov
mov
pop
mov
ret
push
inc
repz
mov
and
inc
sbb
xlat
add
es
cmp
mov
jo
nop
iret
mov
ss
mov
push
cmp
imul
adc
test
bound
pop
iret
mov
(bad)
lahf
sbb
jmp
pop
xor
arpl
in
in
loope
adc
dec
dec
xor
pop
inc
nop
ss
dec
sub
sti
ds
stos
bound
ds
xchg
in
scas
xchg
idiv
jae
mov
aaa
mov
inc
pop
ja
int3
inc
pop
mov
call
in
std
mov
in
data16
imul
push
popf
jne
fiadd
mov
or
scas
sub
js
nop
mov
xchg
je
retf
jmp
in
stos
mov
out
clc
enter
cwde
dec
pop
out
and
retf
cmp
pop
retf
dec
mov
add
sbb
stc
jecxz
mov
jle
jmp
pop
pop
inc
ja
pop
cmp
pushf
ds
repnz
adc
scas
ins
mov
lahf
loope
xor
clc
hlt
icebp
addr16
pop
scas
in
dec
js
dec
xor
sbb
loope
test
mov
into
nop
nop
xchg
xchg
ds
inc
add
push
xor
mov
pop
push
jle
mov
fs
sub
js
repz
mov
inc
fsubr
js
stc
(bad)
jae
add
mov
push
xchg
push
inc
outs
cmp
sub
and
push
adc
xchg
or
adc
mov
shr
jo
mov
or
push
dec
cmp
xchg
cwde
test
ret
mov
imul
cdq
dec
xlat
jmp
adc
(bad)
ror
jo
mov
icebp
sbb
cmp
add
push
mov
ret
ins
sbb
ret
pop
jb
xchg
popf
test
mov
sub
(bad)
jne
pop
lock
retf
xlat
cmps
cmps
fadd
inc
add
pop
int3
ret
lock
cwde
pop
rol
repz
mov
dec
cmp
sbb
into
pop
and
push
push
add
pop
mov
mov
or
xchg
aaa
sahf
xchg
inc
mov
test
loopne
cld
pop
or
mov
clc
mov
enter
xchg
mov
leave
mov
mov
push
xor
sbb
frstpm(287
adc
shl
int3
cmp
outs
fiadd
sar
mov
mov
jmp
inc
sbb
sub
test
repnz
add
ja
imul
fs
pushf
aaa
cli
dec
pop
xchg
int
fsubr
repnz
add
xor
fistp
adc
add
sub
loopne
push
add
fld
je
mov
mov
mov
cmp
shl
jb
into
cld
pop
push
int
int3
mov
or
popf
xchg
ror
sbb
cmp
pop
les
xchg
sbb
sbb
cdq
dec
add
retf
test
sbb
pop
cmps
and
cmp
clc
in
sub
pop
test
and
xor
cmc
scas
rep
les
add
sub
or
xchg
iret
add
aad
into
stos
shr
(bad)
(bad)
aaa
xchg
pop
in
pop
div
mov
cdq
push
jp
sbb
mov
mov
add
mov
dec
popf
js
jns
out
dec
outs
add
xor
jae
xor
mov
jp
shr
push
icebp
mov
cmps
ret
out
jb
popa
mov
stc
dec
sbb
in
jge
mov
fsubr
lock
cli
inc
xchg
aaa
adc
loope
xchg
jne
addr16
push
sbb
stc
mov
mov
ret
scas
ja
ror
rcr
xchg
js
or
adc
add
outs
(bad)
sbb
loop
fisttp
cwde
xchg
and
popa
stc
mov
push
inc
lds
aam
push
repz
bound
mov
fcomp
gs
in
(bad)
pop
rcr
fnstenv
nop
and
cmps
lods
jb
(bad)
jecxz
push
jne
mov
std
enter
jnp
std
push
xadd
push
dec
popf
sub
sub
pop
fisttp
or
ret
jae
pop
ja
inc
inc
jge
dec
jnp
mov
mov
shl
mov
sbb
cmp
cld
cmp
mov
nop
sti
mov
cmp
retf
jo
jne
xchg
sub
sbb
jmp
push
sub
and
cmp
pop
jmp
loopne
fisub
gs
cmc
dec
cmp
retf
jb
xchg
dec
inc
cwde
jbe
jg
stos
inc
push
inc
nop
fcomp
movs
dec
mov
sbb
adc
repnz
lds
sub
mov
(bad)
push
or
xor
icebp
adc
jmp
fs
es
and
mov
mov
stos
test
pop
sar
jno
ret
sub
sub
mov
add
pusha
push
fisubr
into
pushf
jo
add
retf
pop
pop
int
ds
jecxz
loop
mov
inc
xchg
mov
mov
or
into
fadd
pop
lock
adc
mov
xchg
jg
mov
sub
push
inc
mov
jo
dec
mov
pop
pop
dec
mov
xor
or
mov
pop
jmp
clc
push
and
rcr
jno
not
out
sahf
pop
or
xor
push
stc
sub
xchg
jle
aaa
cdq
add
mov
inc
hlt
jnp
dec
outs
cmps
dec
fldcw
sti
inc
pop
aaa
cmp
adc
sbb
jno
mov
xchg
pop
xchg
sub
adc
dec
or
xchg
push
push
fist
xor
jp
push
pop
and
movs
retf
jp
adc
dec
pushf
add
dec
es
xchg
sub
sbb
clc
or
mov
sub
sar
sub
jae
mov
dec
mov
jae
je
lock
cmp
dec
in
mul
aam
pushf
fstp
fcomp
and
(bad)
mov
movs
int3
(bad)
or
loopne
cmp
aas
mov
and
in
adc
mov
sub
jmp
mov
jge
or
sbb
xchg
mov
adc
cs
inc
dec
adc
movs
popf
aas
adc
pop
pop
push
stc
and
daa
jbe
aad
(bad)
fadd
gs
cwde
push
mov
loopne
and
std
xor
dec
mov
mov
out
inc
and
cmp
int
outs
xchg
out
jge
js
xchg
int3
cld
(bad)
dec
ds
(bad)
div
sub
jl
cmp
ror
pop
and
sbb
xor
sub
push
dec
push
xor
std
jae
jmp
pop
add
or
sbb
scas
mov
xlat
lock
and
ja
ret
dec
inc
ja
push
in
dec
in
cmp
test
mov
xor
pop
je
sbb
mov
xchg
xchg
push
adc
jb
sbb
and
(bad)
fstp
push
shl
inc
jecxz
xor
mov
lock
push
sub
mov
fisub
daa
push
dec
mov
add
jmp
cdq
or
mov
dec
jg
stc
push
pop
das
mov
mov
ja
fs
push
test
jle
and
or
popf
and
add
mov
leave
stc
dec
sbb
xchg
addr16
push
stos
in
loopne
push
leave
pop
js
mov
mov
pop
pop
loope
dec
push
(bad)
shl
and
addr16
out
add
pop
push
sbb
popf
jg
out
and
mov
jmp
loope
test
and
stc
lods
(bad)
cmps
gs
loopne
aas
add
mov
adc
xor
mov
sub
fsubr
mov
push
or
dec
stos
dec
push
pop
imul
rol
jbe
mov
ror
pop
popf
lahf
(bad)
pop
(bad)
mov
imul
fcomp
xor
sti
(bad)
mov
cmps
out
mov
retf
int
pop
js
dec
daa
(bad)
adc
lock
jbe
mov
imul
add
mov
lock
(bad)
sbb
pop
fs
into
je
sbb
jge
jb
pop
sbb
dec
push
jbe
test
inc
and
nop
xchg
enter
pop
pop
adc
cmp
xlat
push
shr
lods
iret
loope
sub
mov
sar
popf
xor
adc
cmps
cmp
scas
aaa
and
ret
ins
mov
dec
pusha
(bad)
mov
xchg
outs
dec
inc
mov
scas
shl
and
mov
sub
jb
push
jbe
daa
cmp
sbb
cwde
retf
call
add
sub
(bad)
dec
push
cmp
loop
jecxz
xlat
pop
mov
aam
mov
jmp
in
fisttp
add
(bad)
pop
cmc
call
outs
cs
dec
aam
xor
inc
in
shl
push
clc
gs
sbb
ds
cs
sbb
mov
cld
jns
out
mov
jne
mov
and
mov
test
adc
ja
sar
mov
dec
dec
daa
jnp
inc
dec
fwait
cmp
or
cwde
mov
dec
cwde
xchg
outs
call
scas
xchg
add
pop
jl
mov
cmps
movs
fs
xor
imul
stc
clc
pop
loop
lods
add
sbb
frstor
jg
jmp
adc
jb
dec
inc
in
popa
adc
std
jge
aas
xor
add
push
cld
mov
add
call
out
cmps
aaa
out
ja
mov
cld
inc
cdq
outs
movs
inc
xor
test
retf
mov
jo
shl
pop
dec
call
rcl
pop
or
mov
mov
retf
jmp
addr16
mov
shl
fistp
data16
jge
xchg
popa
pop
shl
dec
xor
sbb
push
mov
jmp
adc
mov
lods
int3
cmp
xchg
pop
sar
in
xchg
xor
and
jns
fisubr
pop
fmulp
sub
xor
sbb
(bad)
je
js
repnz
pop
inc
in
adc
lods
xchg
icebp
dec
push
sbb
pop
out
add
es
aad
and
nop
leave
lock
aam
add
mov
push
add
mov
push
or
add
xor
and
add
fs
in
jb
iret
push
ss
xor
or
lds
out
fild
mov
mov
sti
pop
mov
movs
jne
jmp
stc
adc
mov
jg
es
jg
shl
inc
pop
call
lock
ret
dec
push
jns
fimul
arpl
cmp
into
cmp
or
xchg
xor
or
popa
dec
adc
jmp
clc
sti
(bad)
and
jae
or
fimul
fadd
dec
mov
fbstp
ins
int3
fsubr
xor
into
sbb
and
sbb
pop
data16
call
imul
mov
mov
mov
adc
test
push
push
jg
jae
dec
imul
into
mov
inc
outs
rcr
imul
push
add
hlt
mov
cdq
in
fsub
fucomp
mov
in
mov
adc
xor
cmp
sahf
leave
and
test
das
fistp
cmps
pop
stos
adc
xchg
loopne
cli
(bad)
sbb
mov
cmp
sahf
jmp
adc
into
xchg
lea
jp
mov
inc
push
mov
outs
das
inc
mov
lahf
int
stc
in
cld
pop
rcr
cld
(bad)
enter
mov
jnp
jne
leave
jmp
inc
lahf
jge
or
imul
or
mov
pop
sub
sub
mov
xor
push
leave
out
cmp
pop
jle
xchg
and
lock
bnd
jmp
sbb
out
cli
or
cmp
cmc
add
sahf
mov
mov
mov
pop
cmp
xor
pop
mov
mov
or
inc
pop
jge
jg
sbb
icebp
lahf
jb
pop
mov
sub
adc
jg
push
and
xchg
jge
sbb
inc
hlt
int3
pop
push
stc
jne
mov
sbb
les
hlt
dec
sbb
in
mov
outs
or
or
mov
or
lods
mov
ins
stc
rol
dec
mov
lahf
sahf
(bad)
lods
mov
int3
lods
push
and
or
sub
imul
mul
bound
mov
mov
mov
inc
jmp
out
push
xchg
sub
ret
xor
mov
push
aad
mov
mov
dec
int
mov
dec
ds
sbb
jge
and
jl
xchg
ins
add
pop
push
cmc
and
fld
adc
outs
add
dec
arpl
movs
jecxz
sahf
xchg
lds
(bad)
lea
mov
add
adc
and
out
or
mov
lock
ret
and
cwde
inc
inc
ds
inc
popa
sbb
dec
fadd
xor
popa
aas
adc
and
and
retf
es
push
adc
xlat
cdq
inc
sbb
xchg
sub
mov
jp
pop
jnp
pushf
xor
add
inc
stos
sbb
out
sbb
push
lds
mov
dec
or
xchg
pushf
mov
add
xchg
mov
xchg
push
repz
aas
popf
into
ds
push
imul
es
aaa
push
xchg
push
je
outs
je
pop
add
adc
gs
push
or
sub
int3
rcl
or
stos
stos
imul
repnz
dec
jmp
js
ss
(bad)
adc
inc
jae
es
xchg
outs
add
adc
bound
mov
stc
stos
(bad)
jle
cs
cmp
dec
stc
sub
add
loopne
sbb
cmps
xor
dec
jmp
xchg
(bad)
fidivr
sub
sbb
push
xchg
(bad)
mov
cli
mov
mov
sub
pop
retf
pop
cwde
mov
shl
mov
loope
pop
std
jae
sar
cmp
aad
fld
out
sahf
jns
pop
xor
pmuludq
adc
cmps
imul
cmp
and
stos
rcr
mov
aas
or
imul
repnz
push
pusha
pop
adc
pusha
aaa
mov
loope
sub
outs
fwait
leave
sub
(bad)
jecxz
dec
xchg
xchg
xchg
mov
xor
sbb
cmp
clc
push
mov
sub
shl
shr
xchg
dec
inc
mov
adc
push
sbb
outs
cmp
mov
pop
imul
sub
mov
sbb
dec
sbb
xchg
dec
stos
jle
mov
leave
les
push
arpl
test
or
(bad)
cmps
repnz
pop
fistp
iret
dec
inc
sbb
push
stc
loop
xchg
ins
pop
lods
lea
nop
stc
int3
or
fadd
call
(bad)
out
icebp
dec
mov
call
neg
fld
ds
add
push
aam
test
outs
mov
out
fbstp
mov
ins
or
(bad)
xchg
shl
mov
cmp
das
lock
sub
out
jno
dec
div
loopne
and
sbb
jg
dec
test
aas
inc
or
push
xor
add
mov
leave
jno
jmp
inc
outs
inc
dec
add
cmp
je
sub
xor
dec
pusha
mov
(bad)
adc
jne
dec
inc
pop
std
xchg
jo
movs
push
clc
cmp
mov
cmp
mov
test
jmp
dec
ins
jl
jecxz
adc
int3
jbe
nop
mov
hlt
fld
pop
dec
fidivr
(bad)
in
pop
pop
cmps
adc
xchg
daa
sbb
ja
pushf
xchg
rcr
jnp
jge
in
jnp
lods
and
mov
int3
icebp
and
fwait
dec
pop
dec
imul
fadd
pop
xor
sub
xchg
scas
lea
lods
and
hlt
dec
cmc
jle
ret
fstp
mov
inc
rcl
dec
movs
and
sbb
mov
or
jno
addr16
aas
cwde
leave
leave
int3
icebp
aad
mov
adc
clc
sub
cld
xchg
fiadd
xchg
loopne
cs
cmc
mov
pop
mov
sbb
retf
(bad)
outs
and
mov
fwait
neg
mov
icebp
pop
adc
xchg
mov
std
test
shl
das
popa
xchg
stos
nop
pushf
mov
inc
cld
inc
inc
and
push
sub
popf
cmp
inc
sub
inc
enter
and
mov
in
cmp
scas
lahf
cmps
ds
out
inc
add
adc
js
or
out
dec
fadd
popf
pop
mov
or
mov
cmp
movs
les
test
gs
cmp
xchg
dec
aad
adc
lds
sub
call
xchg
mov
shl
cmp
xchg
mov
into
adc
cmp
rol
add
int3
and
daa
aam
sub
dec
mov
adc
outs
push
test
inc
inc
xor
sbb
ds
stos
fstp
mov
(bad)
pop
pop
sti
icebp
cmp
lock
xlat
cdq
xchg
and
mov
mov
cmp
aam
aaa
pushf
mov
sub
shl
shl
aad
gs
xchg
push
pop
(bad)
adc
rcl
mov
dec
cmps
jecxz
ja
sbb
fld
fdecstp
push
push
in
ja
ss
ffree
call
hlt
mov
adc
push
in
dec
push
pop
jb
and
jnp
enter
xchg
iret
pop
sub
mov
in
mov
xor
sbb
fidiv
jp
jne
test
xor
xchg
xor
xor
shl
and
(bad)
cld
and
ds
mov
mov
sub
or
mov
bound
push
bound
bound
aaa
jmp
scas
xchg
xchg
push
inc
mov
outs
fiadd
cmp
repnz
mov
sbb
fdiv
int3
dec
pop
pop
cs
(bad)
popf
fdiv
cs
inc
retf
jo
sbb
(bad)
cmp
retf
mov
cmps
adc
mov
jb
bound
push
jb
inc
(bad)
or
test
retf
cwde
xchg
xor
gs
movs
mov
pop
dec
jno
iret
int
fwait
mov
aas
das
js
push
out
test
mov
das
test
jns
jecxz
loopne
ret
aam
cdq
leave
xlat
dec
ss
call
sub
hlt
mov
stos
push
sti
cmc
or
sbb
leave
push
test
fcmovb
dec
imul
and
or
cdq
out
dec
je
aas
sub
dec
inc
mov
mov
iret
cmps
xor
repz
xchg
mov
inc
call
and
mov
push
xchg
add
jb
and
dec
ret
inc
hlt
bound
sub
dec
pop
jmp
or
inc
imul
cld
sbb
out
mov
loopne
ror
fistp
dec
jno
jle
mov
lock
dec
pop
inc
xchg
movs
aad
mov
sbb
and
popa
shl
test
fmul
mov
(bad)
ss
inc
pushf
test
outs
xchg
inc
inc
push
xchg
mov
lods
mov
fdivr
dec
shr
jb
mov
out
sbb
pop
push
xor
stos
adc
ret
scas
sysenter
or
adc
mov
movs
jp
enter
aam
push
aam
(bad)
std
lahf
dec
ins
push
and
push
sar
int3
push
enter
(bad)
std
jno
les
push
or
pop
cmp
sar
ins
inc
xchg
pop
cmps
sbb
adc
call
push
xchg
in
cmp
idiv
cld
mov
lods
repnz
pop
cli
mov
popa
mov
pop
jb
cmp
xchg
stos
push
mov
adc
std
push
jno
jns
mov
retf
sub
(bad)
aad
(bad)
leave
pop
out
push
mov
mov
sub
sub
jp
sub
fld
in
and
push
dec
out
sbb
(bad)
mov
stos
nop
adc
pop
pop
je
jecxz
push
sahf
aaa
mov
mov
imul
in
sbb
sub
cs
add
xor
mov
and
add
(bad)
pop
cli
fsub
cld
icebp
or
add
or
add
fisub
lea
adc
sbb
(bad)
pop
int3
fistp
pop
xchg
aas
xchg
imul
repz
std
popf
test
gs
xchg
mov
ss
test
jmp
inc
pop
frstor
and
(bad)
nop
repnz
nop
jmp
xchg
jecxz
repnz
or
gs
mov
jp
outs
mov
xchg
jnp
out
jb
dec
in
sbb
and
jmp
dec
out
sub
sti
or
cmp
push
adc
ins
push
fadd
ror
and
lods
mov
inc
test
mov
or
mov
popf
aam
cmps
dec
clc
ins
push
leave
and
movs
push
ficom
and
cdq
cmp
push
sti
xor
repnz
mov
jmp
sub
icebp
push
inc
in
out
not
add
(bad)
test
cmp
and
push
and
test
rol
jno
test
rol
mov
jns
aam
mov
xchg
leave
push
mov
inc
cld
fwait
pushf
outs
push
ds
imul
inc
call
dec
push
icebp
popa
loop
icebp
clc
lods
es
into
(bad)
call
or
mov
(bad)
js
and
int3
jb
lods
xchg
or
shr
mov
sar
icebp
jp
push
int3
add
adc
in
inc
and
xchg
cli
in
adc
mov
adc
addr16
out
fwait
out
dec
into
dec
xor
fnsetpm(287
xor
jl
xor
movs
or
call
test
add
fimul
arpl
inc
outs
and
test
movq
push
cwde
repz
or
xor
sub
and
push
(bad)
aaa
lods
(bad)
xchg
std
push
loop
in
dec
int
repz
sbb
xor
xor
cli
sub
lods
stos
outs
sub
mov
mov
inc
push
pop
jg
test
int3
jno
outs
jb
xchg
xchg
jmp
add
cmp
ja
jl
cmp
mov
(bad)
xchg
cbw
stos
dec
add
or
xchg
retf
out
imul
or
adc
pop
test
mov
loopne
inc
xor
out
add
rcr
push
(bad)
and
in
mov
dec
lods
mov
addr16
ret
pop
xchg
cmp
xor
mov
xchg
push
pop
jecxz
pushf
imul
xlat
and
adc
adc
mov
pop
push
jns
test
mov
int3
cmc
adc
adc
inc
loope
aam
sbb
cdq
and
xchg
sub
mul
movs
movs
(bad)
out
data16
mov
adc
call
jns
pop
lea
(bad)
test
sbb
cmps
or
bnd
adc
add
mov
mov
cmp
mov
js
dec
repz
fdivr
sub
adc
fidivr
imul
push
lahf
sub
sar
aam
pushf
fcomp
mul
or
leave
dec
mov
push
mov
add
jo
xchg
cmps
cmps
mov
sub
inc
shr
enter
push
xchg
pop
or
and
cmps
mov
jge
call
int
cmp
es
movs
ins
inc
and
dec
pop
mov
cmp
cdq
pusha
loop
cli
in
jmp
out
push
jg
lock
lock
arpl
test
jb
(bad)
adc
in
cld
ret
xchg
fwait
mov
inc
push
outs
call
jle
dec
jle
or
cmps
(bad)
mov
js
test
dec
shr
cmp
out
xchg
xchg
sbb
add
cmp
push
(bad)
xlat
scas
or
in
int
outs
mov
cmc
imul
jmp
xchg
jecxz
mov
lock
fld
mov
adc
jno
dec
sbb
jge
adc
pushf
mov
aam
jbe
call
and
loope
fnstcw
lea
test
pop
push
mov
inc
lods
(bad)
aas
cmp
int
scas
call
ret
pop
arpl
in
jmp
mov
inc
or
rcr
mov
cmp
leave
add
push
xchg
push
cmp
in
stc
and
add
aam
rol
int
mov
iret
clc
int3
rol
fimul
rcl
div
repnz
cs
sub
lods
retf
ficomp
dec
pop
inc
xchg
ror
or
lods
ret
mov
lds
inc
je
(bad)
pop
fs
inc
pusha
dec
bound
lahf
jae
sub
shr
jp
xor
mov
loope
lock
xchg
shr
jns
(bad)
and
js
cmp
lods
mov
push
aas
ins
push
mov
retf
adc
es
sti
adc
sbb
jne
je
cmc
mov
inc
adc
cdq
movs
popa
or
je
push
add
xchg
sbb
cwde
cmp
lock
fnstcw
cdq
inc
int3
adc
(bad)
fcomp
jge
dec
loope
pop
inc
or
(bad)
mov
dec
pusha
jb
lods
fld
retf
icebp
pop
and
inc
fisubr
pop
and
mov
pop
mov
cmc
sbb
add
cmc
jle
and
cmps
add
pushf
ss
fincstp
jge
inc
stos
clc
jmp
out
int3
test
retf
outs
mov
dec
outs
arpl
in
sub
outs
ret
das
mov
popf
stc
retf
xchg
out
and
movs
sbb
out
and
mov
push
push
xchg
jb
outs
retf
mov
shr
sub
sar
pop
(bad)
mov
hlt
fld
clc
jnp
int3
je
and
xchg
dec
sub
xor
jmp
sub
clc
add
(bad)
sbb
sub
mov
and
imul
jns
xor
sbb
xchg
adc
adc
(bad)
dec
(bad)
adc
xor
jmp
iret
xor
inc
adc
and
aad
mov
in
shl
jbe
or
mov
aas
dec
and
xor
cmp
inc
jne
pop
add
rcl
add
sub
sub
sub
dec
jae
call
ja
jg
fimul
(bad)
aaa
dec
push
sbb
call
ins
xlat
xchg
fs
mov
js
mov
shl
jecxz
sar
mov
(bad)
mov
lahf
imul
push
jge
ror
into
mov
test
mov
fidiv
xchg
arpl
js
mov
iret
out
or
sub
sub
push
jle
fsubr
adc
fidiv
inc
in
mov
mov
add
movs
sar
stos
cmps
scas
loop
xor
jmp
imul
mov
dec
mov
sub
jmp
or
and
retf
inc
in
imul
lds
jg
jmp
(bad)
repnz
aam
scas
shr
inc
das
jge
dec
cmp
sbb
std
(bad)
imul
sbb
mov
pop
inc
aaa
ss
push
int3
das
ret
xor
fidivr
mov
xlat
fucomip
pop
push
push
add
sub
ins
js
jmp
xchg
xor
sbb
jns
mov
xor
(bad)
mov
stc
(bad)
cmp
cwde
stc
jmp
xchg
push
add
sbb
inc
inc
ins
sub
in
jo
retf
add
pop
adc
movs
sbb
mov
scas
jno
mov
xor
pop
je
addr16
xchg
(bad)
int
pop
jmp
add
adc
sbb
add
int
movs
sahf
jmp
push
pop
lds
push
leave
and
jmp
xor
imul
jp
fsub
inc
mov
mov
scas
add
je
and
loope
fisttp
bound
pop
test
lock
or
xor
icebp
in
mov
clc
xchg
fwait
add
pusha
xchg
(bad)
int
in
dec
movs
pop
add
pop
jl
and
out
push
ret
sbb
sbb
mov
mov
fsub
ins
or
jge
mov
mov
mov
je
add
fbld
adc
loopne
iret
mov
sbb
(bad)
fldenv
std
dec
fucomip
out
push
mov
or
(bad)
inc
mov
cwde
imul
push
test
push
cmp
jno
sbb
dec
repnz
not
icebp
mov
dec
je
imul
movs
mov
fxtract
imul
pop
repz
daa
cmp
cdq
test
ret
mov
or
(bad)
scas
stc
movntps
or
ins
inc
in
sbb
jecxz
fcomp
jmp
retf
jmp
fldenv
jns
je
jecxz
ins
shl
add
xchg
std
jnp
cmp
inc
dec
pop
pop
icebp
cli
xchg
mov
pushf
dec
pushf
fmulp
fs
mov
xchg
ins
repz
test
adc
push
cs
loopne
lods
(bad)
push
in
test
sti
cmp
jae
nop
pushf
fdivr
test
pop
cs
xchg
xchg
and
add
retf
std
scas
inc
push
adc
(bad)
loope
out
jbe
call
je
ins
ja
data16
addr16
jmp
outs
xchg
imul
punpcklwd
jle
fsubr
in
and
xchg
mov
xchg
cmp
rol
jg
add
in
hlt
sub
sbb
xchg
xchg
popf
pop
mov
sbb
retf
lods
xchg
xor
std
add
pop
out
imul
dec
(bad)
lahf
stos
lock
mov
pop
add
pop
xchg
xor
dec
cmp
lods
xchg
js
fs
push
out
imul
fadd
out
mov
xor
sub
ds
js
inc
mov
jmp
fisttp
pop
(bad)
aas
mov
add
test
les
jmp
cld
cld
sar
sub
and
icebp
out
dec
loop
sti
mov
ret
pop
jmp
xor
dec
inc
mov
cmp
mov
stos
sub
loop
jae
mov
inc
frstor
inc
or
xor
ret
sbb
pop
retf
in
out
fadd
xor
lods
xchg
mov
inc
pop
mov
jnp
sbb
iret
loop
push
cmp
push
push
cmp
bound
add
in
sub
jne
ja
pop
shl
icebp
jb
jecxz
pop
mov
shr
cmp
mov
fisttp
in
add
sbb
jo
push
scas
push
jp
shr
mov
aaa
ss
inc
ins
fidivr
fstp
jp
jno
or
sub
sbb
xchg
fnstsw
mov
cmp
sbb
xor
dec
ja
dec
dec
jnp
xor
mov
and
or
lock
pop
xchg
push
(bad)
sbb
daa
pop
xor
mov
imul
imul
dec
inc
arpl
call
call
adc
push
icebp
and
pop
or
leavew
addr16
scas
jo
push
mov
std
rcl
cmp
inc
cmp
inc
loope
or
sbb
jmp
sbb
das
sbb
cmp
push
mov
sar
gs
(bad)
mov
repz
out
push
push
das
jae
je
jbe
call
and
adc
sti
or
dec
xchg
jae
dec
xor
addr16
inc
add
setae
push
mov
cli
jmp
aaa
and
add
cmp
pop
fucomp
ins
mov
mov
int
sbb
sub
cwde
scas
in
xchg
(bad)
icebp
add
in
jp
cmp
or
enter
or
cmp
dec
enter
jg
sub
call
sub
popf
adc
xchg
jge
pop
mov
cli
in
bound
and
mov
sub
add
jp
lods
mov
mov
cwde
stos
das
sar
pop
lea
adc
xlat
(bad)
in
fst
ss
out
jge
sahf
xlat
pop
add
push
gs
jge
bound
cmps
mov
mov
adc
leave
sub
dec
leave
in
stc
and
xor
lea
or
imul
rcl
sahf
mov
sub
fs
xchg
sub
clc
dec
gs
xor
push
sub
add
mov
cmp
popa
enter
inc
(bad)
mov
lea
bts
pop
and
or
push
sbb
test
cdq
movs
test
sub
and
jbe
pop
lods
push
xor
int3
and
out
pop
popa
pop
mov
retf
(bad)
mov
and
es
add
push
cmps
lea
add
mov
scas
es
fisttp
jle
xor
cmp
clc
cmp
les
push
add
adc
sti
push
adc
mov
xor
push
rcl
or
inc
dec
xlat
push
xchg
(bad)
(bad)
xor
or
mov
cmp
and
cdq
xor
sbb
dec
or
push
mov
mov
mov
pop
mov
dec
sub
pushf
pop
cmps
adc
test
cmc
push
push
cli
rol
xchg
(bad)
loopne
pop
mov
dec
cld
xchg
nop
sub
dec
cmp
mov
sub
push
add
inc
inc
jns
cli
rcl
push
into
cs
push
pop
outs
xchg
jmp
rcl
add
xchg
cmps
jne
xor
inc
push
push
and
mov
(bad)
jnp
mov
xor
outs
sti
out
test
loop
pop
(bad)
(bad)
pop
or
mov
shr
and
or
mov
dec
popf
(bad)
jp
mov
fidiv
int
rcl
scas
jns
(bad)
neg
repz
or
jp
xchg
pop
iret
test
mov
outs
dec
scas
gs
jg
mov
cmp
in
pop
dec
or
mov
lds
fs
pop
push
lods
fdivr
cmp
aaa
in
scas
aam
xor
in
jo
test
scas
movs
jecxz
mov
ret
dec
hlt
das
sbb
jmp
push
push
aaa
push
sbb
shl
xor
and
ins
cmp
or
fldcw
push
(bad)
mov
loop
rcr
inc
es
xchg
(bad)
xchg
fild
push
inc
add
cmp
js
fldenv
dec
xchg
dec
ja
add
sbb
adc
cmp
push
dec
push
ins
or
xchg
imul
add
imul
dec
add
sbb
pop
out
push
movs
jae
retf
cmps
add
retf
sbb
shl
fiadd
jb
or
mov
jp
sub
fst
mov
inc
mov
push
mov
daa
xor
jg
or
fisttp
mov
pop
mov
(bad)
pop
out
in
xchg
retf
sbb
sub
add
add
and
and
xchg
ins
sub
ds
lahf
cmp
in
sahf
je
int3
add
xchg
js
je
pop
std
or
sbb
js
mov
ficom
into
leave
(bad)
sub
sub
add
ror
jnp
jmp
xor
or
pop
(bad)
push
xlat
xchg
sahf
std
jno
enter
popf
sub
ficomp
or
test
lods
rol
push
adc
dec
mov
xor
je
fdiv
jo
push
sub
(bad)
or
adc
pop
sub
inc
push
mov
mov
sub
xchg
inc
or
xchg
rcl
fcom
adc
jg
loopne
and
cmps
repnz
and
scas
cmp
or
cmp
cmp
ins
mov
lock
adc
cmp
in
pop
push
(bad)
(bad)
xchg
push
mov
sbb
mov
fidiv
out
cmps
fsub
into
retf
dec
add
and
mov
dec
xlat
repz
cmps
in
pop
in
inc
int
add
pop
dec
jg
out
mov
rcl
xchg
jb
das
add
mov
out
mov
(bad)
leave
xchg
cmp
loop
jl
mov
jne
dec
lods
repz
popa
xor
mov
sub
sbb
push
out
aam
stc
not
test
call
ss
adc
mov
sbb
or
test
adc
in
popf
fbstp
ret
mov
pop
cwde
scas
sbb
stc
out
xchg
ss
inc
mov
sbb
or
loopne
xor
mov
test
dec
movs
fdivr
mov
mov
in
and
push
cmp
push
cmp
xor
cmp
lods
xchg
inc
aaa
out
sub
test
rcr
int3
mov
mov
mov
das
inc
imul
add
inc
mov
dec
jmp
retf
lock
dec
ja
fdivr
cmps
jns
or
pop
xor
hlt
jo
cmp
leave
ror
jmp
add
ret
pop
cmp
test
mov
and
pop
jb
(bad)
push
push
dec
cld
push
push
arpl
cmps
stc
int3
pop
push
push
sahf
and
nop
jl
xchg
jge
icebp
jge
push
in
fsub
jbe
addr16
xchg
test
iret
test
fstp
xor
retf
icebp
cli
sub
push
inc
mov
sbb
cmp
mov
les
xor
dec
mov
in
sub
retf
pop
add
js
pop
call
xor
fiadd
mov
pop
push
iret
jle
mov
das
inc
out
push
out
into
fwait
outs
jbe
ret
cmc
xchg
dec
and
xchg
dec
popa
jmp
mov
std
dec
rcl
or
call
dec
mov
cmp
and
jne
cmp
mov
mov
imul
test
push
push
adc
sbb
mov
pop
shl
and
jb
inc
outs
push
adc
sub
add
ins
jecxz
stos
push
in
ins
and
fdiv
or
sar
push
repnz
push
cmp
fs
xor
fisub
fndisi(8087
out
push
xor
pop
and
xchg
pop
pop
xor
sti
mov
inc
adc
ins
cmp
or
arpl
adc
dec
repz
jnp
sar
sbb
xchg
push
sar
or
dec
std
sbb
mov
out
stos
fst
mov
mov
ds
pusha
mov
rol
sbb
ds
pop
xchg
or
out
dec
mov
ret
fstp
or
add
je
xor
add
(bad)
(bad)
je
sub
inc
int3
(bad)
xchg
sub
mov
repnz
out
sbb
fmul
imul
and
ds
scas
sbb
mov
lock
inc
fisub
inc
(bad)
stc
in
into
into
aad
xor
jo
sbb
stos
cmp
sar
xchg
gs
and
jmp
movs
(bad)
into
stos
loope
sbb
clc
inc
jne
inc
pop
enter
and
(bad)
jmp
sub
push
inc
(bad)
mov
out
pop
cmp
dec
int
call
ror
daa
ins
pusha
mov
cmp
mov
jns
cmp
xor
leave
int3
mov
pop
adc
arpl
hlt
xchg
jl
test
cmp
sub
mov
inc
cmp
push
inc
lock
leave
ror
or
mov
push
cmp
enter
out
cmp
adc
in
int
les
cmp
fimul
in
jmp
aam
sub
pop
sub
test
lods
push
or
call
mov
in
dec
sahf
xchg
cmp
mov
push
sbb
ja
dec
add
loopne
or
(bad)
adc
or
adc
addr16
push
push
arpl
adc
mov
cmp
mov
or
and
xchg
popa
mov
dec
loop
(bad)
fadd
pop
and
xchg
outs
not
mov
clc
lea
sbb
cmp
mov
fcmovnbe
inc
push
mov
xchg
call
sbb
pusha
sahf
jno
jle
cmp
mov
mov
mov
into
test
adc
xor
add
int
inc
sahf
movs
out
arpl
cmps
fucom
push
push
xchg
and
test
mov
into
repnz
cmp
push
cwde
xchg
retf
fdivrp
push
int
clc
mov
ins
cmp
dec
cdq
call
xchg
mov
aam
jecxz
lods
fldenv
pop
inc
sub
call
push
inc
lods
push
and
ins
adc
ret
inc
xchg
sub
sbb
frstor
pop
mov
loope
retf
mov
(bad)
sbb
mov
lds
outs
adc
and
imul
xchg
leave
push
push
fst
imul
imul
(bad)
pop
(bad)
repz
gs
in
jns
fistp
sbb
clc
dec
push
arpl
xor
cmp
imul
out
dec
xor
dec
fstp
or
mov
aam
or
dec
sbb
jnp
add
mov
adc
jbe
out
or
pop
sub
into
das
sar
mov
rol
mov
fmulp
pop
adc
mov
movs
mov
pop
sbb
arpl
ds
add
jno
(bad)
test
pop
xchg
sub
jo
sub
std
sub
mov
cmps
sub
pop
mov
xor
cwde
popa
jae
fcompp
sbb
fidivr
add
jae
clc
dec
popa
mov
push
ins
xrelease
lods
cli
mov
xor
mov
mov
int3
cmp
mov
jle
add
test
sub
push
in
fwait
pop
inc
push
inc
jg
lods
aam
push
sub
jno
pusha
and
test
aas
push
adc
mov
push
pop
jmp
cld
test
push
popa
out
icebp
mov
cmc
dec
fnstsw
sbb
and
lods
adc
imul
cmp
dec
cmp
popf
mov
fdivp
aad
dec
inc
xchg
pushf
aaa
fimul
push
out
ret
push
sti
dec
xchg
mov
xchg
(bad)
fcomip
sub
inc
int3
sbb
xor
and
clc
out
stos
cmp
js
sub
jne
push
and
shl
xchg
xchg
lods
cs
and
sbb
pusha
mov
mov
into
xlat
dec
mov
push
cmps
mov
shr
xor
in
aam
xor
xor
cmp
cmps
pop
jne
stos
(bad)
fst
ror
push
add
adc
lods
aaa
cmc
or
mov
jge
and
push
pop
xor
sbb
push
sub
sub
ins
(bad)
jg
mov
mov
out
xchg
cmps
imul
bound
mov
imul
or
in
push
mov
shl
cli
out
test
xchg
aaa
mov
adc
daa
out
push
imul
pop
xor
aam
je
lock
jle
loope
(bad)
sbb
mov
sbb
into
push
push
jl
push
les
mov
dec
xor
jecxz
inc
addr16
mov
xchg
cwde
not
aaa
add
or
sbb
inc
mov
ret
cmp
xor
xor
sub
jp
lock
push
mov
push
shr
sti
push
inc
in
mov
mov
mov
test
sub
scas
push
sub
push
or
arpl
or
mov
mov
outs
daa
and
cdq
xchg
sti
test
sbb
iret
test
push
sub
push
sub
fidivr
pop
jbe
add
(bad)
mov
rol
stos
pop
dec
cwde
jp
test
loop
mov
mov
out
retf
add
shl
outs
mov
fidivr
scas
add
pop
or
imul
shr
pavgw
pusha
mov
js
push
(bad)
pusha
inc
sub
int
loop
mov
call
dec
pop
jbe
or
push
(bad)
(bad)
hlt
cwde
jl
in
xchg
out
gs
ss
repz
mov
xchg
hlt
sub
push
fcomp
in
push
mov
dec
scas
call
shl
dec
inc
loopne
xchg
dec
jae
and
mov
xor
xor
or
mov
push
fisttp
or
sti
inc
pop
dec
adc
out
push
sub
mov
adc
mov
das
cmc
(bad)
test
hlt
retf
lock
sbb
sbb
mov
(bad)
and
movs
jle
mov
inc
mov
jp
ins
xchg
jae
in
push
cmps
and
and
dec
movs
mov
mov
in
jae
mov
(bad)
xchg
pop
aad
cmp
test
jge
mov
jmp
imul
les
call
call
sti
stc
cld
push
fwait
popf
mov
and
fcmovne
lock
fisubr
inc
retf
push
adc
pop
rcl
into
sti
adc
call
mov
call
clc
inc
add
jl
jnp
jae
sti
xor
pop
inc
es
or
xor
popa
hlt
mov
mov
mov
ins
stos
or
mov
or
mov
and
dec
jmp
or
inc
cmps
adc
hlt
popa
push
scas
sbb
dec
dec
sub
data16
pop
lds
test
pop
call
adc
push
mov
or
mov
lods
int3
push
dec
imul
movs
fsubr
fsub
or
popf
movs
xor
and
xor
xchg
add
icebp
mov
mov
inc
xor
pop
push
int
jmp
jp
(bad)
sbb
ins
cmps
daa
sbb
and
data16
popa
pop
icebp
pop
inc
adc
clc
out
adc
xchg
ins
ret
mov
mov
mov
and
ds
scas
lds
and
pop
or
pusha
jge
mov
mov
leave
pusha
js
ficomp
pop
enter
mov
into
in
retf
or
cs
mov
shl
jne
or
mov
jge
ds
test
das
jae
mov
push
push
aad
mov
jns
jmp
mov
sbb
sbb
adc
mov
sbb
xchg
xchg
inc
jb
ret
xor
push
gs
cmc
loopne
not
jbe
push
inc
pop
push
cmc
lahf
jmp
push
jne
outs
pop
js
or
jecxz
scas
lds
push
jo
add
mov
lock
cmp
jb
or
xbegin
repnz
rol
(bad)
cdq
cmp
je
adc
in
mov
push
movs
add
cmps
jnp
mov
ins
xor
and
inc
movs
pop
stos
push
cmc
retf
jne
mov
fcmovb
jge
sti
or
mov
jmp
outs
jl
inc
sub
fidivr
mov
cmp
xchg
aam
dec
stc
or
mul
push
inc
fldenv
loope
jle
jecxz
mov
ss
imul
xchg
mov
sbb
adc
xor
sbb
mov
lock
nop
sbb
push
xchg
xchg
(bad)
bnd
xor
xlat
lea
xchg
addr16
outs
aas
cs
das
sub
or
test
in
(bad)
arpl
repz
sbb
das
mov
int3
and
enter
push
jle
aam
jmp
adc
xchg
add
(bad)
scas
xchg
inc
adc
and
outs
movs
cdq
sbb
and
mov
sbb
adc
in
jmp
sahf
mov
fisub
aas
jg
and
(bad)
ret
adc
mov
mov
jl
mov
adc
stos
loopne
pop
out
cmp
pusha
push
sbb
imul
outs
sbb
xchg
push
mov
imul
jo
xchg
retf
and
adc
adc
mov
shr
shl
pushf
inc
lea
push
aam
imul
icebp
call
cmc
mov
xor
popf
lods
sbb
imul
cmp
sahf
call
fwait
pusha
test
jle
cld
mov
fadd
or
pop
fbstp
(bad)
arpl
lea
mov
jmp
cmp
cdq
retf
sub
pop
sbb
in
dec
pop
loope
shl
mov
mov
mov
fsub
shr
repz
lods
sub
sub
and
loop
aas
adc
(bad)
jmp
pop
outs
nop
or
or
xchg
mov
sbb
inc
xchg
ins
(bad)
call
ins
and
(bad)
mov
fsubrp
or
xchg
mov
sub
cmps
cmp
or
cld
jb
jg
test
mov
vshufpd
sbb
dec
push
dec
stos
xlat
movs
or
clc
stos
sub
mov
inc
mov
push
pushf
add
pop
xchg
imul
jmp
xchg
in
cmp
fadd
(bad)
mov
sub
sbb
push
pop
test
sub
xor
sub
jno
sbb
mov
test
push
add
dec
push
mov
es
(bad)
shl
icebp
xor
pop
call
mov
data16
stos
jo
lds
push
ret
mov
mov
jecxz
pop
dec
dec
jbe
ret
scas
dec
cmps
push
cdq
cwde
mov
loopne
push
push
call
stc
shl
ret
fwait
gs
adc
jns
jge
aad
aas
jecxz
addr16
rol
mov
and
and
push
or
push
into
and
cdq
pop
fwait
loopne
outs
clc
xchg
out
imul
adc
adc
clc
retf
and
out
mov
push
cmp
mov
sbb
lds
cld
push
aaa
sbb
sub
call
lods
lods
cwde
xor
pop
cmp
(bad)
popa
xor
xor
push
rcr
je
sbb
inc
sbb
lods
je
jl
adc
shl
add
xchg
es
mov
pop
mov
sub
xchg
jmp
xchg
int3
leave
jge
sub
div
push
add
jne
popw
mov
inc
mov
xlat
push
scas
call
cwde
ja
fsubr
fdiv
add
inc
jmp
call
data16
out
or
lds
cmp
retf
xor
sti
or
ins
jns
enter
sub
dec
test
int
cmp
xor
sub
dec
jle
mov
adc
cmps
xor
xchg
(bad)
out
stos
dec
adc
xchg
cmp
inc
and
jnp
outs
repnz
imul
pop
jo
jmp
(bad)
shr
rol
movs
push
pop
and
gs
xlat
les
jmp
add
mov
fistp
data16
retf
mov
inc
call
mov
jecxz
jge
sbb
pop
aas
xchg
and
pop
scas
test
cmp
lds
outs
adc
out
mov
test
push
sub
mov
ins
inc
inc
jecxz
sub
ins
imul
jl
fwait
sbb
idiv
jle
gs
sub
enter
cmc
test
jns
xor
add
lock
fdiv
fimul
bound
pop
inc
fnstcw
mov
push
jae
sub
ja
outs
mov
jg
test
hlt
xor
mov
add
jge
cmps
popf
mov
and
fadd
js
add
inc
fcom
addr16
retf
bound
test
ss
cli
ror
shl
data16
xchg
mov
jbe
in
sub
fstp
push
sub
xchg
out
gs
imul
dec
push
pop
aam
sbb
jmp
mov
jne
mov
pop
into
into
out
mov
jns
and
test
adc
(bad)
mov
xchg
push
mov
out
xor
inc
sub
fs
(bad)
mov
in
and
adc
push
fild
xchg
inc
push
cmp
push
jns
out
lahf
sub
dec
pushf
xchg
loope
sbb
data16
mov
cmps
xchg
in
xchg
in
mov
pop
and
jmp
xor
sar
jl
push
sbb
xor
div
adc
data16
sbb
movs
iret
rcr
icebp
cmp
mov
nop
ret
sub
mov
pop
jns
std
dec
jns
pusha
out
icebp
aas
xchg
cs
xrelease
ret
inc
push
sub
enter
push
adc
nop
pushf
inc
xchg
push
or
iret
adc
enter
cmp
pop
das
(bad)
dec
je
sub
sub
jp
xor
pop
cmps
ds
xchg
sbb
call
cmp
(bad)
mov
outs
or
mov
nop
in
push
mov
mov
iret
adc
cli
cmp
cmp
imul
lods
scas
inc
push
inc
adc
lahf
fistp
push
or
jo
add
jmp
in
rcr
imul
(bad)
sbb
sbb
in
push
mov
add
fisttp
dec
test
in
jmp
sti
mov
popa
js
outs
ror
mov
test
push
sub
sar
xchg
or
sbb
and
mov
push
ret
(bad)
imul
scas
ret
dec
push
stos
dec
dec
or
mov
call
ret
mov
fwait
sbb
xchg
add
hlt
mov
mov
ja
push
stc
aad
retf
test
push
mov
sbb
(bad)
stos
leave
jns
xchg
cmps
test
or
dec
icebp
sub
stos
call
mov
push
pop
data16
sahf
ja
hlt
mov
dec
fcmovb
retf
daa
stos
mov
repnz
loopne
push
pop
adc
sub
addr16
jne
sub
dec
pop
push
ss
xchg
in
or
test
xchg
lock
fild
mov
lds
lods
(bad)
jmp
gs
mov
hlt
dec
mov
mov
or
jnp
fimul
pop
xchg
or
lahf
das
test
js
push
call
xor
popf
sub
or
test
push
inc
pop
jle
(bad)
test
push
mov
pop
xor
fisub
lods
sub
test
sbb
adc
std
ror
outs
inc
cmp
ret
int
int
mov
mov
push
sbb
or
jmp
dec
sub
jl
cs
inc
mov
xchg
test
sub
xchg
add
xchg
outs
jl
retf
jl
stc
inc
jmp
xor
popa
movs
nop
dec
shl
nop
cmp
cld
jle
dec
and
push
test
je
(bad)
mov
pop
addr16
pop
cwde
lea
pop
cmps
xlat
int3
(bad)
mov
jae
xchg
inc
xchg
pop
mov
cwde
pushf
jbe
neg
xor
pop
ret
aaa
cmp
sub
mov
fadd
and
test
jb
adc
js
pop
push
cmp
and
mov
sbb
pop
sub
xor
inc
loopne
pop
rcl
cmp
jmp
aaa
(bad)
stc
and
push
mov
lea
add
stos
jecxz
call
mov
mov
or
cdq
inc
pop
mov
push
jp
jns
hlt
mov
mov
push
fisttp
retf
sbb
mov
icebp
xchg
imul
lea
push
neg
cmp
inc
add
js
pusha
retf
jmp
pushw
jnp
jb
aaa
sbb
mov
add
lahf
dec
sbb
lds
test
(bad)
mov
psubusw
add
stos
and
inc
(bad)
sub
psubb
adc
frstpm(287
scas
sar
lock
inc
shl
sbb
shl
das
xacquire
int
adc
adc
ret
imul
sub
inc
sub
iret
mov
pop
adc
pop
adc
into
sbb
int
pop
out
sub
test
mov
jl
inc
cli
push
in
xchg
movs
xor
pop
add
sub
ficomp
xor
mov
and
cmps
lods
cmps
lock
cmp
jmp
fucom
sar
and
add
or
pop
pushf
sbb
test
inc
test
bnd
sub
and
fisub
cmc
inc
clc
cmp
pop
sbb
or
leave
mov
sbb
cdq
leavew
add
rol
mov
repz
icebp
sbb
pop
cmp
call
enter
mov
or
push
fwait
daa
ror
pop
mov
sbb
repz
cmps
mov
jecxz
cmp
stos
fs
jle
push
jmp
mov
std
addr16
add
inc
lahf
inc
ret
imul
shr
imul
mov
fsubp
or
sbb
jp
cdq
fdivr
jl
fidivr
mov
xor
adc
pop
(bad)
rol
xchg
repnz
test
rol
in
out
cmp
pop
fs
push
sub
sub
repz
ret
aas
(bad)
clc
and
inc
adc
mov
sbb
outs
lods
shl
push
movs
cli
bnd
push
mov
and
(bad)
fnstcw
add
xchg
es
loop
adc
sahf
jmp
je
and
(bad)
int
push
jno
push
push
inc
sub
xor
popf
pop
jg
xlat
imul
movs
pop
pusha
cmp
sahf
(bad)
enter
fstp
sbb
rcl
xor
movs
cmp
nop
dec
imul
mov
imul
je
add
je
and
dec
mov
push
sub
xor
loop
mov
pop
test
sbb
loope
or
aam
jmp
mov
addr16
mov
fdiv
xor
lahf
add
sbb
add
or
popa
push
inc
clc
stos
or
jb
push
retf
inc
or
es
fcomp
mov
bound
pop
fsub
and
jmp
call
pop
and
mov
ins
mov
cs
mov
mov
push
adc
inc
pushf
push
push
xchg
jns
sbb
pusha
add
mov
popa
in
jnp
ja
test
pop
(bad)
movs
int3
mov
push
in
les
dec
(bad)
repz
pop
mul
mov
dec
rol
fldz
and
retf
pop
adc
jmp
test
sub
push
imul
imul
mov
mov
mov
aas
xchg
mov
cli
aas
mov
xor
mov
(bad)
cmp
stc
neg
xor
shr
(bad)
pushf
lds
adc
add
mov
adc
adc
(bad)
jne
mov
jae
adc
sbb
cmp
inc
sub
lea
mov
mov
sub
aam
test
push
scas
scas
add
std
fnstenv
jmp
jl
repz
inc
mov
rol
loop
pop
scas
push
(bad)
sub
sar
aaa
mov
dec
icebp
stc
outs
jl
arpl
xchg
xor
and
add
mov
cwde
mov
fnstcw
or
outs
pusha
xchg
inc
rcl
push
and
cmps
add
clc
(bad)
into
lea
xchg
shl
jmp
in
xchg
lea
stc
cwde
(bad)
scas
pop
sub
push
out
xchg
xchg
mov
leave
shl
iret
push
or
xchg
stc
aad
rcl
pop
mov
adc
add
fld
xor
or
dec
dec
lods
xlat
fsubr
fld
or
mov
in
dec
mov
lods
loopne
not
fucompp
adc
or
retf
push
sbb
gs
push
pop
ret
cwde
add
push
cmp
xor
sti
push
lock
hlt
out
push
enter
and
push
jle
cdq
(bad)
sbb
jnp
sbb
aaa
and
push
lea
sar
cld
adc
sub
mov
out
xchg
xor
mov
mov
into
pushf
lahf
rcl
retf
addr16
mov
loope
pop
aaa
dec
sahf
pusha
mov
lds
out
in
mov
xchg
fdivp
mov
icebp
ret
rol
cli
adc
nop
jo
dec
cmp
add
stos
or
adc
dec
jg
inc
retf
icebp
repnz
data16
inc
or
aam
jg
cwde
mov
test
jbe
(bad)
inc
imul
aad
pop
jbe
(bad)
out
movs
mov
or
fstp
push
enter
pop
fld
pusha
cmp
sbb
fmul
rep
sbb
push
add
and
shr
into
nop
jae
sub
shr
fild
jg
imul
pop
xchg
aaa
sbb
jo
cmp
jle
push
sbb
ins
sar
push
mov
cld
xor
mov
or
mov
std
or
lahf
idiv
or
test
movs
imul
scas
sahf
mov
bnd
cmps
mov
add
or
adc
iret
xor
sbb
dec
test
pop
arpl
pop
icebp
mov
xor
int
mov
mov
outs
jmp
out
call
imul
retf
loope
in
mov
inc
xor
mov
pop
les
jae
jl
mov
shl
push
mov
and
cmp
add
jg
pop
xor
lods
mov
iret
es
jmp
stc
pop
sbb
pop
push
fdiv
mov
or
pop
pop
fdivr
test
adc
dec
push
pop
sbb
dec
test
cmp
pop
(bad)
out
cmp
dec
icebp
mov
mov
aad
cld
nop
mov
stos
ja
nop
(bad)
ja
hlt
out
dec
xchg
inc
cmp
mov
adc
not
iret
f2xm1
add
jae
inc
mov
pop
mov
popf
pop
push
sub
mov
dec
mov
dec
arpl
sbb
inc
in
push
in
imul
push
test
nop
rol
jae
mov
jns
mov
mov
in
js
movs
shl
or
mov
jmp
push
lock
add
cmps
xor
mov
clc
xchg
mov
push
and
adc
das
ror
std
fisttp
dec
xor
add
loope
iret
dec
mov
lods
repz
aad
aad
movs
dec
jo
retf
add
imul
mov
das
add
arpl
imul
xor
add
fwait
adc
das
movs
adc
repnz
into
imul
aam
xor
push
xor
outs
jbe
inc
dec
ret
out
rcl
(bad)
sahf
gs
jne
iret
gs
lds
js
retf
dec
xlat
push
push
or
inc
add
in
icebp
hlt
shl
fdivr
retf
in
add
pop
push
dec
sbb
push
shr
in
shl
dec
xchg
fist
xor
sar
mov
bound
mov
push
jl
and
test
adc
add
cmp
and
cmp
lods
mov
sbb
cmp
mov
sub
jg
jmp
test
out
out
mov
ficom
xor
jl
inc
push
cli
xlat
ror
gs
jle
hlt
daa
scas
xlat
jb
es
ja
jne
adc
les
cmc
ja
mov
xchg
gs
pop
mov
lds
inc
inc
xchg
adc
push
dec
int3
mov
imul
je
mov
mov
mov
sbb
outs
sti
gs
outs
bswap
mov
cmps
jne
and
lock
in
ret
jle
rol
cmc
out
jecxz
test
sti
cmp
jne
and
lea
movs
mov
sub
xlat
pushf
pusha
mov
jecxz
sti
imul
in
jle
mov
fwait
cmp
iret
bound
(bad)
(bad)
sub
(bad)
jbe
fcomip
shl
(bad)
lahf
(bad)
and
dec
ret
pop
shl
jmp
movs
in
mov
repnz
pop
loope
test
mov
repnz
mov
outs
ins
push
add
test
(bad)
je
ss
cmc
jbe
mov
push
and
addr16
imul
hlt
scas
ins
mov
hlt
cwde
sahf
push
mov
push
cmc
retf
mov
sahf
pop
dec
outs
mov
stos
in
ja
adc
ja
jecxz
mov
add
pop
loopne
ret
cli
pop
scas
jne
mov
push
lock
pop
push
(bad)
dec
(bad)
fucomip
ffreep
push
ds
push
call
pop
fs
cmp
xor
arpl
in
ficomp
(bad)
pusha
mov
dec
outs
add
inc
xchg
jo
adc
popf
adc
jecxz
and
cld
xchg
pop
fstp
xor
inc
pop
push
rol
fidiv
cmc
stos
jae
cmp
push
inc
add
push
aam
cmp
push
imul
jmp
mov
jge
mov
xchg
int
push
jle
js
arpl
and
jb
pop
sub
js
pusha
sub
mov
and
mov
cmp
push
xor
(bad)
rol
mov
test
repz
lea
bound
push
ret
lock
mov
rcl
xor
mov
mov
push
imul
jle
add
adc
sub
xor
ret
lea
hlt
(bad)
test
pop
ror
jmp
push
popa
lock
push
fwait
jge
jb
add
xchg
mov
rcr
sub
push
stos
or
and
push
inc
in
sub
cld
leave
int
leave
test
lea
or
add
in
ror
adc
dec
push
push
sti
stos
lahf
dec
pop
fsubp
ret
adc
lea
(bad)
adc
neg
in
(bad)
jmp
aam
push
aas
shr
sub
sub
pop
mov
popa
jle
cmp
jns
movs
test
sub
scas
dec
push
(bad)
loop
ror
cli
sbb
xlat
sub
ins
or
sub
inc
outs
jmp
mov
pop
iret
mov
inc
mov
cld
sbb
jge
mov
push
imul
iret
mov
sub
rcr
sbb
and
fimul
mov
sub
in
cmp
xchg
inc
dec
sahf
pop
jge
mov
xchg
mov
mov
sbb
punpckhwd
scas
(bad)
leave
push
scas
(bad)
fistp
lds
xchg
fimul
pop
mov
add
test
enter
or
pop
pop
mov
mov
mov
adc
jg
xchg
cmp
cdq
pop
jecxz
mov
push
push
test
jo
or
sub
add
mov
xor
rcr
mov
push
adc
xchg
mov
jno
fild
mov
rcl
jg
scas
sub
jp
dec
inc
add
cmp
les
dec
xor
xchg
movs
popf
shl
or
stos
xchg
es
inc
ins
aam
or
in
fwait
jp
pushf
test
push
mov
js
jmp
mov
add
inc
cdq
sti
push
call
mov
and
add
inc
lahf
xor
or
xor
mov
xchg
dec
rcr
lahf
fcomi
push
xchg
lods
sub
test
push
mov
xor
and
jo
aam
or
retf
popf
cmp
adc
jns
push
cmp
inc
xchg
pop
dec
fdiv
add
inc
outs
cdq
pop
cmps
mov
or
mov
mov
rcl
dec
mov
jns
dec
retf
inc
jb
pusha
call
dec
sbb
xchg
icebp
dec
test
dec
pop
in
mov
mov
add
loop
mov
sub
or
dec
outs
adc
xchg
mov
shr
mov
dec
pusha
cmp
adc
mov
adc
xchg
mov
lea
ds
ss
je
inc
adc
dec
loope
dec
sub
rcl
jae
xchg
imul
mov
les
push
fcomp
sbb
add
and
xor
mov
push
and
shl
xor
sbb
mov
fwait
pop
les
hlt
jo
cmps
jle
add
repnz
xchg
sub
aaa
or
pop
mov
adc
es
popa
cwde
xor
or
ret
xor
lea
pop
hlt
dec
adc
jbe
jns
push
aad
mov
and
jbe
leave
jl
popa
dec
nop
push
jnp
mov
jp
dec
xchg
cmp
pop
push
xchg
test
push
mov
push
(bad)
pop
mov
hlt
inc
out
cld
test
xchg
mov
movs
jle
push
out
aas
mov
xchg
into
add
push
mov
dec
in
xchg
or
pop
push
loop
repz
dec
popa
lods
and
ds
ins
xchg
nop
mov
enter
iret
retf
ds
loope
loop
add
xor
lock
or
adc
leave
pushf
fmul
pop
cmp
addr16
mov
mov
lea
and
pop
adc
loope
dec
(bad)
aad
sub
repnz
mov
sub
mov
push
bound
ins
in
jno
or
jns
stc
and
xchg
es
xor
dec
imul
aas
mov
rcl
cmp
dec
lods
mov
inc
fs
jns
mov
movs
mov
add
xchg
inc
sub
xor
and
loop
mov
jmp
idiv
repz
pushf
push
fmul
and
push
pop
xchg
push
adc
sbb
pop
fadd
adc
out
aas
cmps
out
(bad)
jge
jae
jecxz
adc
retf
loop
loop
jae
fsub
xchg
out
or
fcomi
aad
push
add
mov
xor
pushf
mov
in
push
inc
pop
shl
repnz
cmp
push
inc
(bad)
shl
popa
jbe
pusha
fidiv
and
pop
or
mov
xlat
aam
jo
mov
inc
add
ins
xor
xchg
jmp
jmp
mov
shl
pop
mov
mov
push
push
loope
(bad)
push
pop
mov
mov
pushf
xchg
sub
xor
mov
lds
sbb
(bad)
mov
mov
cwde
stos
dec
add
xchg
push
(bad)
retf
mov
cmp
in
jbe
cs
jne
icebp
pop
mov
sbb
adc
pop
mov
scas
sub
cmp
mov
jmp
cmps
cbw
loop
jecxz
push
jle
mov
push
cld
dec
adc
movs
xchg
cdq
aas
sbb
repz
imul
call
mov
shr
fisubr
pop
inc
ss
xor
sub
add
sbb
popa
call
inc
jecxz
sub
pop
fidivr
add
mov
mov
push
pop
(bad)
test
idiv
sub
adc
das
xlat
mov
mov
xor
repnz
sbb
retf
add
les
mov
inc
retf
mov
movs
xor
xchg
xor
sub
and
lock
imul
scas
push
aaa
out
ds
cmp
jb
into
mov
push
sti
lahf
mov
jno
jmp
ins
xlat
ja
jmp
mov
fstp
xor
xor
xlat
fimul
cdq
and
pop
(bad)
fld
xor
loopne
sbb
sahf
jle
push
arpl
mov
push
repnz
fs
cli
mov
shl
std
mov
call
test
mov
sti
pusha
pop
push
dec
or
jno
outs
adc
jb
push
xor
dec
into
push
mov
xchg
xchg
sbb
outs
sbb
mov
sahf
sub
cmp
loopne
cmp
pop
fiadd
push
gs
jbe
les
movs
mov
pop
push
push
xchg
lods
fcomp
pop
adc
xor
inc
(bad)
(bad)
stc
ins
pop
int
adc
ins
ss
jge
push
mov
mov
adc
pop
push
nop
mov
push
movs
xor
jo
jns
sub
mov
xor
scas
mov
in
test
aad
xor
movs
xor
jp
out
stos
fsub
push
mov
sub
(bad)
stc
jo
jae
(bad)
push
cmp
fisub
and
sbb
int3
(bad)
retf
add
aad
dec
xchg
mov
adc
mov
and
inc
mov
sahf
daa
movs
xlat
stos
gs
cmp
sub
and
mov
lods
stc
mov
mov
jns
(bad)
rcr
(bad)
in
retf
cmps
mov
or
loopne
call
test
add
loope
jmp
bound
jecxz
jmp
and
jecxz
test
or
js
sbb
jle
lahf
push
mov
pop
iret
push
movs
retf
mov
arpl
ja
lds
bound
hlt
imul
jg
inc
int3
cs
mov
sub
jmp
in
dec
inc
mov
(bad)
(bad)
xchg
sub
(bad)
xchg
add
jge
test
jno
lods
loope
xchg
nop
mov
sbb
push
bound
cwde
js
jne
std
rcl
out
add
fsub
(bad)
js
xchg
(bad)
loop
shl
xchg
adc
sub
call
inc
test
mov
xor
popa
iret
add
in
inc
add
pop
push
push
movs
je
dec
push
cmp
adc
push
(bad)
call
out
mov
shl
jns
pop
mov
push
scas
cld
pop
gs
push
and
mov
fsubr
pop
cmp
pop
fst
pop
mov
jle
out
jne
adc
add
mov
jle
jg
mov
aas
pop
jp
fstp
sar
pop
fs
add
jmp
cmp
push
jne
cmp
stos
stos
push
movups
ins
inc
in
outs
jno
push
jle
cs
pop
inc
jg
mov
and
mov
ins
sub
mov
sub
cmp
push
fdivp
sbb
jmp
mov
mov
rcr
sbb
jl
xor
mov
jmp
hlt
gs
fstp
mov
mov
lods
mov
mov
mov
aam
dec
xor
sub
xchg
outs
pop
ins
mov
pop
adc
retf
dec
sub
sti
or
imul
dec
call
pop
sub
leave
retf
xor
sub
popf
mov
mov
push
mov
adc
(bad)
int
adc
sub
ds
xor
adc
push
aas
mov
retf
icebp
lahf
pushf
arpl
dec
xlat
fdivr
call
cmp
inc
mov
test
or
leave
int
nop
push
ret
sbb
cmp
mov
sub
inc
xor
loope
push
mov
sub
scas
js
faddp
and
xchg
or
aaa
add
gs
jge
repnz
mov
fstp
add
jmp
sub
jp
lods
pop
push
scas
push
test
adc
sbb
cwde
stos
mov
and
stc
xchg
imul
pop
jb
dec
pop
mov
and
add
outs
jmp
test
sbb
clc
ins
out
call
pop
add
test
movs
cmps
es
xchg
push
cmp
jae
ret
pop
pop
jb
ror
jne
nop
push
cmc
cmp
(bad)
loopne
stos
dec
fs
sti
adc
or
push
aaa
jb
loope
adc
es
sub
push
jmp
ds
inc
daa
push
in
jns
repz
sub
cmp
repnz
stc
mov
sub
mov
xchg
xchg
xchg
jo
popf
dec
das
inc
ret
pop
push
jo
into
inc
adc
test
mov
retf
adc
mov
cli
pop
sti
ret
mov
aaa
fs
inc
add
neg
int
scas
popa
pushf
ficomp
lahf
rol
clc
jns
mov
movs
dec
xchg
xchg
call
inc
sbb
sti
std
sub
cmp
out
xchg
ds
leave
fadd
in
shr
fs
outs
adc
fadd
repz
add
int3
and
adc
lahf
das
js
jae
ret
sub
push
sub
sub
imul
ds
mov
imul
shl
mov
aad
leave
pop
push
mov
lods
mov
add
xor
add
jl
xchg
and
inc
pop
sub
and
jg
mov
rcr
cmp
pop
sbb
(bad)
push
sbb
lods
adc
sub
mov
push
adc
icebp
mov
mov
rcr
inc
mov
mov
ins
fiadd
push
nop
into
rol
mov
ja
rcl
jmp
outs
(bad)
call
stos
pop
outs
adc
inc
inc
stc
or
push
add
jb
xchg
out
mov
pop
test
stos
add
dec
jl
inc
sti
mov
in
cwde
mov
xchg
ins
in
adc
xor
iret
outs
inc
jno
sbb
push
mov
xchg
sahf
dec
and
xchg
enter
xchg
loopne
lahf
or
adc
hlt
(bad)
shl
inc
push
mov
sar
push
(bad)
std
fmulp
fwait
xor
inc
jecxz
sbb
xlat
jns
arpl
dec
lods
test
push
mov
addr16
iret
adc
mov
test
mov
adc
mov
dec
cmps
push
pop
mov
and
bound
xlat
movs
repnz
fidiv
fidivr
dec
iret
push
sbb
xor
push
bound
pop
push
fisttp
push
cmp
and
shr
fidiv
fwait
xor
loopne
aas
mov
mov
jecxz
mov
or
mov
jle
test
pop
add
mov
bound
jl
jno
retf
and
sbb
cmp
fadd
cmps
(bad)
adc
mov
push
dec
dec
in
in
cmc
jl
stos
xor
std
inc
jecxz
dec
nop
mov
popa
pop
neg
lea
call
sub
addr16
xor
loopne
popa
pop
mov
cmp
jo
pop
mov
dec
cmp
pop
daa
xor
jl
mov
(bad)
outs
jmp
in
shl
data16
push
ja
ja
pop
mov
lods
jg
out
mov
pop
pop
push
in
push
ins
pop
retf
test
jb
pop
push
push
nop
loop
add
sub
adc
and
jnp
ja
(bad)
mov
out
jmp
stc
loopne
cmp
scas
mov
dec
sbb
ret
jl
cmp
(bad)
lock
pop
in
adc
dec
(bad)
mov
adc
fisub
cmp
sbb
fdiv
test
ins
mov
sbb
test
and
into
in
fcom
mov
jge
test
mov
sub
in
sub
cmp
imul
mov
test
xchg
mov
sbb
dec
push
sub
ficomp
push
lods
push
mov
sbb
lods
mov
sub
mov
or
test
(bad)
jo
xor
scas
push
fwait
or
jne
popa
iret
shl
cld
iret
or
stos
addr16
scas
arpl
sti
cmp
dec
retf
call
test
ret
aad
ss
sar
push
jnp
dec
dec
arpl
xlat
cs
hlt
test
and
movs
mov
mov
pusha
and
or
repnz
and
xchg
adc
cld
cmc
loope
dec
aam
jbe
push
fwait
adc
loope
add
push
sbb
sub
inc
nop
sub
fdivr
gs
xor
add
mov
push
cli
imul
pop
shr
int
jbe
es
jmp
neg
xchg
or
mov
lds
add
lea
sub
push
mov
(bad)
imul
dec
xchg
dec
inc
or
sbb
pop
aas
fldenv
gs
cmp
bound
fldcw
inc
adc
sbb
cmp
daa
fist
data16
jne
cwde
retf
push
imul
(bad)
sbb
shl
sbb
sbb
adc
mov
(bad)
and
mov
pop
xor
ret
adc
mov
mov
mov
mov
(bad)
scas
inc
pop
pop
in
mov
test
sbb
in
addr16
push
fld
in
sbb
xchg
mov
or
jecxz
int
bound
mov
mov
push
cmp
mov
fwait
adc
popa
jecxz
or
sbb
add
inc
and
sbb
movs
jmp
ret
popa
sbb
fdivr
sbb
pop
cmc
shl
fs
xchg
inc
shr
scas
pop
out
rcl
aaa
bound
sub
push
aad
rcl
lahf
cmp
aas
lods
stc
jle
mov
pop
out
scas
jae
push
mov
jl
or
jmp
xchg
popa
cs
loope
mov
jns
inc
xor
xor
add
outs
leave
nop
sahf
mov
scas
mov
data16
lahf
mov
sbb
rcl
adc
jp
inc
jne
(bad)
jmp
lahf
cmc
cmp
and
arpl
jbe
mov
xor
adc
pop
lock
(bad)
jno
mov
aad
stc
fidivr
shl
lods
xchg
ja
daa
cmc
cmp
test
(bad)
and
rcr
rcl
fcmovu
xchg
cs
bound
add
mov
dec
jb
sbb
popa
mov
sub
mov
addr16
out
aaa
ret
pop
lods
lock
ja
add
cmp
mov
scas
pop
dec
neg
ror
pop
into
jnp
sbb
dec
imul
push
movntq
out
into
cmp
not
fnstsw
xchg
sbb
mov
ja
cmp
add
inc
sub
add
xor
adc
cli
mov
out
push
add
nop
(bad)
aam
pop
ins
jl
ja
cs
enter
nop
push
and
sub
cs
adc
push
outs
mov
sub
js
cmc
and
pop
pop
and
cld
jns
add
mov
fs
scas
inc
cmp
push
out
jmp
fsub
mov
lock
push
test
mov
int
pushf
stos
mov
jbe
test
je
pop
push
daa
add
cs
repz
cmps
jb
lock
adc
mov
and
pop
mov
loop
inc
inc
xor
popa
in
inc
lods
cmp
jns
pusha
stos
fisub
inc
movups
jp
gs
xor
test
xchg
add
nop
lock
stos
mov
or
dec
xchg
mov
push
fs
call
in
fst
inc
cmc
xlat
pushf
inc
push
and
pop
xor
adc
mov
mov
dec
sti
jne
push
xchg
or
stos
sub
cmps
push
leave
in
mov
cld
movs
mov
pop
pop
or
adc
push
int
adc
inc
es
fld
xor
into
rol
clts
xor
or
inc
sbb
sti
addr16
adc
inc
in
gs
mov
mov
ds
xchg
inc
sub
les
xor
js
and
ret
push
xchg
mov
les
in
sbb
fistp
inc
add
shr
fcmovu
sub
std
cdq
stc
adc
fcmovb
mov
pop
scas
mov
and
xchg
xlat
daa
mov
push
fild
popf
push
mov
push
cmps
pop
jle
xchg
xchg
scas
xor
xor
mov
mov
inc
fldenv
pop
cwde
and
xlat
or
inc
stos
(bad)
and
cmp
adc
cs
mov
cdq
xchg
imul
inc
stos
ins
add
in
fldcw
push
int
xchg
push
and
jecxz
idiv
aad
fmul
hlt
jge
adc
mov
jns
in
pop
imul
fsub
shl
stos
jge
and
cld
sbb
mov
pop
push
mov
mov
push
mov
fiadd
mov
dec
sar
jo
mov
mov
and
pop
xchg
les
jmp
in
sbb
scas
cmp
aad
mov
sbb
mov
rep
fstp
clc
pop
mov
mov
mov
out
inc
call
stc
dec
jbe
jmp
ror
retf
jp
mov
cdq
mov
push
loope
push
xor
aas
pop
cmp
xchg
ss
cmp
out
in
pop
in
mov
loope
xor
ins
ret
sbb
cmps
push
pushf
rcl
int3
cli
push
popa
cmp
sbb
or
(bad)
test
xlat
stos
inc
dec
inc
pushf
and
adc
jge
iret
fst
sahf
int
jmp
sbb
stc
mov
pop
aaa
(bad)
(bad)
retf
pop
cmc
lock
xchg
dec
push
ficom
arpl
lods
sub
xchg
call
aaa
cdq
fldcw
dec
jae
xchg
aas
jno
sub
std
push
sbb
loopne
aam
mov
jmp
fadd
cld
and
cmp
cmp
sub
pop
aaa
or
jl
add
cmps
adc
xor
mov
nop
dec
call
dec
jmp
pop
sub
jo
cmps
popf
sar
sbb
out
push
arpl
dec
cli
xor
mov
call
inc
push
sub
std
adc
jo
add
mov
shl
or
jne
sub
mov
aad
push
jmp
loop
inc
jg
cmc
cld
mov
scas
pop
(bad)
fdivp
cs
jb
xor
and
call
mov
aam
cmps
into
sub
(bad)
sub
adc
imul
jge
imul
xchg
adc
mov
cmps
dec
pop
dec
jmp
fisub
sbb
xor
(bad)
jne
out
test
bound
gs
push
inc
out
jg
xchg
xor
ja
(bad)
push
cld
cdq
and
adc
push
das
aam
cmp
jnp
bound
sar
hlt
(bad)
or
inc
push
pop
fs
(bad)
retf
sub
je
pop
adc
(bad)
inc
or
inc
pop
in
pop
mov
dec
ja
adc
push
mov
outs
dec
mov
push
xchg
adc
push
mov
int3
retf
mov
xchg
call
jne
dec
dec
inc
sub
ret
add
ror
cmps
das
sub
xchg
xchg
mov
test
mov
(bad)
lods
lds
cli
scas
and
mov
retf
out
inc
daa
fwait
push
mov
sub
clc
ins
sahf
mov
or
xchg
sahf
mov
sbb
popf
out
mov
retf
movs
out
cmp
scas
fcom
call
stc
inc
int3
(bad)
inc
mov
cmp
addr16
les
cmp
mov
and
data16
stos
cmc
pushf
jmp
imul
pop
in
jge
cmp
in
lea
or
cwde
int
or
test
ja
dec
and
push
mul
fdivr
lds
sub
paddd
fidiv
cmp
and
xchg
sar
movs
push
mov
fwait
adc
das
jb
sbb
push
xchg
adc
(bad)
jle
push
or
ins
imul
mov
adc
push
in
int3
dec
dec
dec
adc
pxor
xchg
stos
mov
out
or
test
call
ja
lock
fsubrp
daa
(bad)
push
bound
mov
or
jmp
pop
lea
movs
or
popa
hlt
(bad)
jg
xchg
xor
les
mov
fild
pushf
xchg
inc
mov
out
jns
loopne
push
mov
das
or
stc
fstp
jae
pop
cmps
test
sahf
fldenv
mov
loop
hlt
jl
xchg
or
hlt
inc
mov
nop
aam
jo
je
inc
fs
sbb
rol
arpl
adc
out
stos
dec
jno
retf
mov
ret
jo
mov
inc
ds
push
jnp
arpl
test
jge
sub
movs
add
in
dec
out
pop
xor
jle
dec
(bad)
popf
scas
fstp
mov
ja
xlat
inc
(bad)
punpckhbw
xlat
add
push
inc
mov
mov
imul
xor
xchg
push
sub
xor
xchg
sbb
mov
add
inc
loopne
leave
jl
xor
push
sar
push
or
sbb
inc
push
das
aam
aaa
mov
inc
inc
or
aam
jbe
into
jne
lods
adc
(bad)
stos
in
pop
outs
jge
mov
or
shr
fisub
push
data16
rol
cwde
retf
cdq
stos
test
jb
and
call
sar
int3
sub
std
cmp
fcom
push
jl
clc
push
aaa
fnstcw
sub
mov
nop
add
mov
out
ins
push
pop
(bad)
mov
clc
mov
in
je
add
cli
sbb
push
iret
jle
rcl
and
jl
inc
pop
push
in
pop
pop
mov
fstp
enter
add
xor
mov
mov
and
and
hlt
jmp
xor
(bad)
movs
cmp
(bad)
pop
(bad)
mov
cmp
mov
popa
sbb
fadd
ror
jmp
inc
pop
aas
mov
gs
sub
int
push
in
fdivr
sahf
(bad)
dec
xor
sub
jbe
movs
jns
in
sub
icebp
xchg
cmp
mov
fisttp
leave
repz
sub
sbb
leave
sbb
inc
mov
daa
sti
cmp
or
rcr
cmp
cmp
out
retf
fs
add
mov
mov
test
jp
fcom
inc
add
cs
shr
jmp
ins
retf
push
ja
xor
xchg
mov
mov
xchg
arpl
inc
xchg
cmps
mov
cdq
push
push
div
push
jmp
add
xchg
push
rcl
fnstenv
dec
mov
dec
lahf
and
xlat
dec
outs
aad
(bad)
mov
sar
mov
push
push
loop
or
icebp
ds
cdq
inc
dec
inc
jo
sub
add
inc
mov
jmp
inc
cmp
xor
inc
jo
(bad)
mov
cmp
xchg
xor
aaa
pop
cmp
in
div
inc
repnz
mov
leave
icebp
into
and
adc
enter
xchg
inc
xor
jb
fistp
mov
test
xor
cli
pop
jnp
leave
shr
or
cmp
fistp
sub
push
popf
movs
mov
fwait
gs
jle
cmp
out
cmps
fsubr
f2xm1
daa
pop
jbe
push
xchg
es
call
neg
aam
jnp
cs
sub
mov
xchg
in
movs
dec
cmp
pop
push
jae
icebp
sub
cmp
xchg
pop
mov
nop
rcl
js
jb
xchg
pop
aam
fwait
xor
sbb
mov
push
shr
arpl
jp
mov
leave
icebp
test
in
test
std
mov
mov
add
xor
std
retf
sbb
ds
or
add
les
sbb
(bad)
int3
push
mul
push
out
nop
dec
or
fdivr
or
cmp
rcl
lods
lods
sub
inc
fsub
retf
jecxz
fdiv
xchg
hlt
hlt
jmp
cmp
repz
add
ret
mov
aad
int
xchg
iret
aas
push
cmp
and
ret
in
stc
jne
jbe
test
std
push
or
test
lea
mov
arpl
fdiv
fidiv
cwde
fnstenv
sub
mov
pop
lds
xor
into
mov
jg
in
gs
xor
or
sbb
sbb
add
idiv
sar
es
movs
push
jmp
sbb
(bad)
jnp
pop
inc
or
(bad)
cmp
sbb
or
enter
mov
push
mov
xor
cdq
dec
mov
sbb
sub
and
adc
push
jne
xor
popf
inc
ret
call
push
loopne
lea
xor
rcl
or
das
mov
adc
daa
mov
out
ins
sub
sti
lahf
aam
add
out
inc
push
pop
enter
test
ret
js
xor
xlat
adc
push
cld
cmp
retf
ins
add
jo
dec
mov
jecxz
pop
dec
inc
sub
mov
mov
icebp
mov
cmps
xor
mov
push
movs
outs
pop
xor
dec
dec
popf
out
adc
fchs
cmp
xchg
inc
icebp
add
xor
push
push
xor
cli
fs
loop
sub
jl
sbb
jle
sub
xor
(bad)
cdq
pop
mov
and
xor
in
outs
jecxz
push
sbb
lea
sub
ja
dec
mov
pop
dec
mov
inc
add
stc
int
sub
xchg
in
pop
cmp
cmp
frstor
pop
data16
cli
icebp
fdiv
or
pop
jo
pop
cmp
mov
jle
lea
mov
imul
pop
sub
sbb
es
addr16
push
mov
xor
add
xor
mov
sbb
inc
stos
mov
mov
inc
inc
xchg
add
sti
sbb
leave
iret
jne
jmp
and
popf
data16
or
pushf
pop
dec
ret
in
(bad)
fwait
jno
fst
lock
mov
cwde
push
ja
inc
jge
outs
xchg
mov
ss
dec
loope
popa
stc
ins
sub
scas
cli
ret
mov
inc
sti
rcr
add
cwde
lock
jae
test
and
jle
xlat
fadd
dec
out
(bad)
cld
lods
dec
movs
sbb
dec
xor
(bad)
dec
push
cli
push
mov
pop
xchg
cmp
mov
movzx
sub
and
stos
ins
test
rcl
inc
(bad)
mov
retf
in
aam
sbb
mov
sub
cld
test
push
xor
movs
fcomp
mov
pushf
mov
gs
mov
dec
push
mov
xor
sub
aam
into
inc
mov
xchg
in
ror
loope
mov
bound
out
je
xchg
sbb
mov
mov
sub
adc
dec
out
imul
or
xchg
mov
lea
and
dec
adc
push
pop
mov
pop
mov
pushf
mov
int3
pop
and
inc
push
xor
pusha
or
pop
push
fsubr
jle
push
outs
push
repz
add
popa
cmp
mov
popa
fistp
and
mov
aas
leave
and
ss
daa
aaa
outs
(bad)
ror
jle
jne
cmps
imul
stos
cli
(bad)
dec
in
lahf
xchg
mov
inc
sar
leave
add
mov
(bad)
sbb
shl
cmc
and
jle
call
in
stc
les
push
fwait
lods
inc
pop
outs
dec
jb
sub
mov
pusha
jbe
or
out
mov
sub
ret
sbb
or
xor
test
inc
jns
mov
lahf
pop
adc
pop
xchg
lea
jecxz
ret
pop
icebp
iret
test
out
ror
js
xchg
mov
mov
adc
fwait
add
xor
daa
push
mov
in
lods
cmp
cdq
(bad)
cmp
stc
in
or
out
mov
loopne
icebp
imul
out
jle
and
mov
mov
add
or
pop
jns
mov
adc
in
ja
adc
mov
or
cmp
and
jbe
jp
mov
xor
shl
jle
xchg
jmp
fwait
dec
jp
movs
aad
xlat
or
(bad)
cmp
inc
rcr
dec
fiadd
inc
popa
daa
clc
(bad)
das
and
jbe
pop
in
ret
adc
in
retf
sub
push
stc
jae
xchg
jmp
cld
cdq
movs
arpl
pop
pop
popa
test
and
jne
fdiv
pmullw
cld
push
xor
addr16
pop
shl
fwait
test
sub
aad
push
icebp
pop
dec
les
movs
dec
mov
out
mov
leave
cli
ret
test
xchg
les
aas
icebp
(bad)
mov
stos
mov
jbe
pop
or
push
test
(bad)
mov
ins
lds
loope
hlt
movs
cdq
shr
sahf
in
lock
mov
push
fisttp
xchg
cmp
sub
push
ret
sub
setg
in
dec
mov
mov
jbe
cmp
inc
pop
xor
cmp
movs
iret
pop
xor
lds
xchg
sbb
push
ss
cmps
xor
cmp
in
dec
mov
push
mov
sub
xchg
sar
in
jg
mov
test
cmp
xor
mov
pop
jbe
(bad)
fisttp
(bad)
(bad)
push
push
add
xor
addr16
sahf
mov
jae
jb
xchg
movs
and
test
mov
mov
loopne
sbb
retf
test
jmp
push
aam
cmp
mov
int
in
cmp
push
imul
and
and
lods
pop
aas
cmp
lea
pusha
cli
out
adc
dec
shl
outs
mov
and
outs
pop
mov
mov
xchg
shl
fwait
ss
push
or
jecxz
pop
xchg
and
imul
sub
gs
push
movs
inc
add
je
or
(bad)
mov
aas
pop
or
rcr
aaa
inc
cmp
or
or
in
sbb
iret
je
mov
jb
cld
iret
xor
push
dec
ja
mov
or
shr
adc
pop
xchg
out
das
fidiv
jmp
and
dec
in
and
add
test
ja
arpl
gs
mov
dec
and
adc
gs
movs
xchg
dec
outs
xchg
xor
cmp
sub
cmps
call
retf
or
mov
cmp
mov
(bad)
aaa
sbb
fmul
pop
ins
jge
fadd
push
js
push
pop
je
ret
sbb
cmp
ds
push
jns
pop
nop
call
xchg
scas
fcomi
ds
and
cdq
ficom
xchg
pop
push
int3
daa
xor
into
dec
mov
sbb
pop
push
add
adc
xor
sbb
xor
loope
fisub
xchg
sub
pop
(bad)
dec
mov
dec
ret
sub
xor
push
dec
lods
(bad)
xchg
cli
xor
retf
(bad)
(bad)
jecxz
lods
dec
in
pop
int3
xchg
out
mov
sar
dec
jnp
in
jno
(bad)
cs
push
pop
push
in
aad
icebp
mov
mov
push
cmp
je
mov
jno
(bad)
test
(bad)
pusha
lahf
mov
inc
repz
xchg
mov
mov
xchg
dec
out
cmc
mov
hlt
repnz
mov
cmp
jae
or
cli
fnstcw
jmp
in
xor
loope
movs
push
out
jmp
lahf
sbb
add
adc
pop
aad
sub
aas
sub
add
lea
call
sub
xchg
jbe
mov
sbb
mov
data16
(bad)
cmp
arpl
inc
cld
scas
adc
das
es
das
sbb
xchg
gs
sub
and
mov
cmp
addr16
dec
stc
push
xor
outs
mov
jl
inc
mov
(bad)
pop
xchg
daa
xchg
xor
dec
mov
es
xchg
loopne
fnstenv
das
imul
iret
in
mov
dec
rol
cdq
pop
xlat
jmp
retf
lea
ins
(bad)
movs
cmp
popa
inc
pop
jne
movs
cmc
inc
jl
sbb
and
enter
aam
cmp
arpl
sahf
add
sbb
cs
jae
out
adc
movs
xor
jbe
push
js
dec
mov
loope
(bad)
cmp
sub
add
adc
(bad)
xor
mov
arpl
cld
hlt
stc
das
test
stos
cmp
adc
sub
leave
jp
retf
inc
out
movs
cmp
mov
fbstp
test
dec
sub
xchg
jmp
(bad)
mov
cmp
mov
xchg
hlt
(bad)
inc
(bad)
sbb
push
fs
sbb
jl
mov
pop
jmp
pop
mov
pushf
mov
mov
into
add
js
pop
jae
inc
mov
xchg
aas
xchg
mov
inc
lds
out
xchg
inc
jmp
lods
push
push
test
aam
in
mov
scas
sub
xor
loopne
into
cli
dec
dec
ins
enter
loop
popf
scas
mov
add
dec
sbb
mov
add
inc
sub
sub
ins
xor
hlt
jne
in
add
(bad)
lea
and
xchg
inc
jecxz
push
mov
sar
gs
fidivr
loope
mov
test
jge
loop
pop
xor
ins
lock
rcr
sbb
sbb
imul
(bad)
xor
cmp
cmps
jle
ret
nop
mov
sub
sbb
inc
inc
add
in
xor
out
add
push
jns
cmp
push
sbb
jo
loopne
jb
xlat
sbb
pop
xchg
push
add
leave
adc
cmp
or
test
sub
jle
add
add
or
jp
cmp
scas
mov
dec
scas
push
loope
mov
push
sbb
sub
adc
cmps
add
lea
cdq
or
pop
xchg
ret
and
(bad)
cs
xor
repz
jmp
jb
scas
clc
xor
inc
mov
and
loope
frstpm(287
jb
or
push
xor
dec
sbb
sbb
sbb
(bad)
xchg
inc
jo
bound
sahf
(bad)
das
bound
sbb
cmp
xor
sub
dec
xchg
xchg
out
(bad)
mov
xchg
sub
js
aaa
mov
jbe
out
xchg
cmp
pop
jne
xor
lods
fsubr
inc
cmp
sub
jno
fsubr
and
push
pop
jb
cmp
and
pop
shl
xor
inc
adc
jnp
fild
pop
into
popa
push
arpl
mov
fimul
mov
test
sti
lock
cwde
imul
pop
cmp
add
loope
retf
sbb
xchg
std
dec
les
retf
or
frstor
shl
xchg
jmp
inc
dec
outs
mov
js
inc
jmp
sub
push
retf
and
es
adc
and
pop
daa
jge
adc
cmps
pop
jb
out
cmps
mov
aas
jno
mov
fcompp
lahf
or
cmp
neg
pop
xchg
ja
in
movs
loope
adc
sub
mov
movs
or
or
push
ins
inc
add
xor
movs
fidivr
jmp
jne
sub
or
dec
stos
cmp
xchg
mov
push
fidiv
loop
enter
push
jbe
xor
adc
inc
in
adc
sbb
hlt
inc
(bad)
cmp
loope
(bad)
lods
test
test
mov
sbb
pop
ja
mov
test
adc
in
cmp
out
aas
push
(bad)
jle
sbb
(bad)
jge
jp
mov
fwait
pop
fstp
ret
xor
cmp
mov
add
mov
nop
sti
popa
and
loopne
stos
inc
in
hlt
popf
sub
aad
lods
in
(bad)
fisubr
sbb
push
or
xor
dec
adc
add
push
sbb
pop
paddusb
(bad)
adc
fs
xlat
adc
hlt
mov
xchg
arpl
test
(bad)
out
and
push
inc
lds
and
mov
add
mov
daa
lods
popa
mov
xor
mov
add
sub
stos
dec
cmc
or
bound
push
and
adc
cmovno
sbb
inc
mov
adc
loop
jp
xchg
movs
movs
lock
dec
test
in
pop
sub
(bad)
sub
outs
(bad)
sub
or
aas
sub
mov
test
fdivr
les
dec
dec
mov
cmps
ja
in
mov
mov
loopne
push
pop
mov
enterw
lock
std
and
mov
push
div
xchg
dec
ins
xlat
mov
xor
dec
xor
inc
sbb
mov
mov
xchg
leave
and
sbb
mov
xchg
jecxz
lock
ins
mov
mov
into
mov
movs
jmp
and
sub
imul
movs
jo
dec
inc
leave
push
pop
mov
jp
iret
and
jnp
ss
stos
and
fld
clc
fld
add
push
scas
sub
jge
test
adc
mov
xchg
cli
add
imul
retf
cmp
cmps
loop
jno
cwde
mov
jge
mov
sbb
dec
cs
lds
(bad)
mov
lods
(bad)
sbb
mov
mov
mov
out
loopne
bound
adc
xchg
mov
xor
mul
xchg
pop
(bad)
stos
pop
inc
and
mov
pop
fs
icebp
sbb
mov
jmp
adc
ds
mov
pop
jle
sar
and
stos
retf
cmc
std
jle
sub
popa
test
ror
sub
add
pop
mov
mov
fsubr
xchg
push
outs
add
or
test
push
mov
(bad)
adc
lods
arpl
lea
push
lahf
enter
icebp
outs
jg
push
jl
mov
and
ins
sbb
sbb
rol
enter
aam
test
fnstenv
retf
xor
addr16
clc
sbb
scas
pop
push
adc
aam
outs
(bad)
push
enter
repnz
pop
arpl
jp
sbb
push
mov
cli
pop
xor
xor
mov
jmp
out
push
fs
mov
rcr
cdq
out
out
jnp
sbb
or
(bad)
(bad)
push
scas
push
sub
sbb
sbb
stos
mov
jnp
adc
jnp
cmc
jp
rcl
pop
mov
out
bnd
out
add
popa
popf
pop
jg
sub
add
movs
or
test
xor
xchg
xor
ja
xlat
sub
ja
sar
lock
addr16
and
adc
scas
mov
in
aad
not
push
or
addr16
xor
mov
xor
fsub
scas
(bad)
rcl
mov
std
dec
pop
pop
shl
aas
dec
test
xchg
jecxz
sub
cdq
mov
jmp
or
call
inc
push
mov
push
push
mov
add
push
sbb
cmp
xchg
mov
add
mov
push
push
aam
cld
xor
(bad)
inc
pop
repnz
imul
(bad)
sub
cld
jp
in
xchg
sbb
jp
mov
push
xor
lea
int
not
inc
and
movs
jecxz
fs
adc
adc
mov
outs
cwde
test
mov
stos
mov
adc
inc
xor
push
in
jge
out
(bad)
mov
pop
clc
shl
inc
mov
push
pop
in
xor
scas
jecxz
scas
pushf
das
neg
aaa
fist
mov
sbb
push
and
mov
mov
test
sbb
or
pop
ret
mov
and
sbb
jno
ret
mov
shl
in
scas
into
jne
push
inc
repz
add
add
div
push
push
cmp
adc
sti
add
inc
pop
adc
sub
mov
push
sbb
mov
cmp
mov
mov
mov
(bad)
jmp
xor
and
mov
movs
inc
les
mov
inc
nop
mov
mov
push
pop
mov
jbe
lods
gs
push
mov
dec
jne
js
adc
loop
cmp
rcr
pop
jno
or
push
(bad)
mov
jmp
in
mov
and
scas
rcr
mov
inc
adc
mov
push
xchg
dec
or
jecxz
das
ficom
mov
cdq
mov
sbb
mov
sahf
or
add
retf
sahf
lock
pop
or
pop
mov
inc
aad
fld
inc
xchg
push
nop
in
pop
cmp
mov
xor
(bad)
dec
int3
add
daa
cmps
popf
xchg
pop
mov
dec
ds
js
xchg
jp
mov
dec
push
ss
loop
js
ds
ja
mov
push
scas
cmc
push
xchg
pop
sbb
dec
das
icebp
pop
(bad)
(bad)
add
inc
jns
mov
mov
aad
shr
leave
lods
and
cdq
or
cld
enter
fidivr
ss
xchg
rcl
sbb
shl
in
dec
mov
dec
dec
xor
sub
inc
cmp
clc
xor
out
mov
out
dec
dec
add
fld
cmps
js
sar
or
and
mov
jae
retf
(bad)
bnd
jmp
lods
(bad)
out
pop
inc
inc
adc
cwde
mov
inc
pushf
in
aad
stos
test
das
dec
neg
push
out
(bad)
push
mov
sub
jmp
sub
out
inc
aaa
ins
stc
hlt
mov
test
vsqrtss
sub
adc
ja
mov
lock
aam
xor
ret
inc
out
dec
cwde
lea
cmp
dec
fsub
inc
fdivr
sbb
add
and
sub
cmp
je
or
and
or
out
mov
fbld
ins
mov
sub
and
or
jle
mov
add
icebp
push
mov
mov
push
mov
dec
fs
stos
dec
fcom
push
scas
dec
std
mov
jb
aas
in
sub
inc
xchg
fcom
enter
and
or
lods
aad
xchg
inc
enter
mov
jmp
ja
fcomi
or
sbb
inc
sub
fwait
nop
pop
outs
dec
sbb
mov
pop
sbb
cmp
pop
inc
stos
mov
xor
mov
stos
nop
push
ds
push
jbe
pop
imul
sub
into
int3
jb
add
add
xor
dec
cmp
dec
mul
adc
ror
loopne
inc
mov
bound
mov
or
clc
cmp
and
jmp
loopne
dec
xchg
ins
scas
iret
int3
mov
and
scas
sbb
jnp
pop
push
dec
movs
cmp
scas
jno
test
cli
shl
sub
(bad)
or
pop
add
retf
mov
jle
and
mov
test
das
shl
in
sub
leave
xlat
sub
shr
(bad)
(bad)
daa
mov
inc
iret
add
outs
in
jecxz
mov
cmc
push
and
push
mov
cmp
mov
cmc
dec
or
test
jns
push
pusha
jo
sbb
sahf
je
movs
dec
dec
movd
int3
aaa
dec
push
clc
inc
xor
outs
sbb
jbe
or
cmp
cmp
cmp
sub
dec
movs
adc
inc
fdiv
mov
and
mov
mov
xchg
xor
sbb
daa
sbb
scas
clc
mov
bound
pop
(bad)
into
sub
mov
pusha
cmp
movs
mov
mov
push
fist
shl
out
out
mov
int3
pop
call
cmp
call
call
nop
xchg
fs
mov
imul
mov
jge
cmps
inc
dec
out
in
ds
dec
inc
cdq
fldcw
or
je
rcr
pop
int
das
sbb
mov
shl
adc
push
movs
push
push
pop
lds
add
pop
cld
daa
dec
aas
push
(bad)
cld
xchg
(bad)
(bad)
mov
add
xor
adc
push
pop
inc
test
or
cwde
ds
sub
and
jl
dec
mov
mov
and
sub
mov
push
(bad)
cmp
iret
xchg
xchg
and
xor
mov
push
loope
cmps
dec
push
sbb
test
arpl
iret
xor
(bad)
leave
lds
mov
bound
ds
fcomp
ror
out
push
test
and
vshufps
imul
jecxz
xchg
pop
adc
mov
ret
jl
nop
mov
arpl
mov
iret
lds
loopne
in
and
jne
push
addr16
cs
shl
and
int3
ins
(bad)
hlt
ds
sub
jnp
icebp
setle
fwait
ret
push
sti
or
idiv
js
xor
push
inc
jle
pop
aaa
push
pop
pop
dec
push
das
dec
fstp
pusha
push
sub
mov
out
inc
aam
and
sbb
nop
and
test
dec
in
or
mov
pop
push
inc
add
jne
es
mov
sbb
out
mov
gs
repz
das
dec
and
out
into
inc
or
in
movs
pop
out
lods
lock
push
imul
dec
call
push
adc
jno
pop
mov
push
lock
jns
jnp
pop
inc
mov
sbb
(bad)
nop
mov
push
cmp
clc
test
out
clc
gs
fild
xchg
mov
les
je
mov
retf
xor
xchg
fsub
dec
dec
ds
mov
sbb
nop
jns
adc
shl
inc
in
data16
popa
rcr
or
sbb
add
push
in
call
out
pop
dec
add
add
cmps
pop
sti
xor
xor
popa
push
int
push
call
mov
setle
test
pop
outs
cmps
adc
jb
je
stos
(bad)
stc
les
dec
ret
mov
jmp
jmp
cmps
inc
imul
repz
jnp
add
jnp
xchg
dec
stos
push
inc
je
(bad)
xor
jnp
jmp
aaa
test
mov
dec
mov
test
(bad)
fisubr
stc
rol
dec
movs
add
cmp
pushf
mov
cwde
add
or
xchg
inc
mov
dec
mov
jmp
and
das
repz
sbb
xchg
and
push
out
sbb
jle
cli
pop
adc
imul
mov
ins
gs
sbb
and
(bad)
lods
lds
int
cmp
out
cmp
sahf
mov
stos
hlt
ffree
dec
cmp
mov
sbb
rol
aam
fstp
or
lods
add
cmp
dec
adc
mov
xchg
sbb
ins
push
fisttp
and
ret
cmp
test
inc
cdq
mov
out
les
(bad)
adc
sub
mov
popf
call
mov
sub
pop
dec
movs
fcmovbe
add
push
daa
sbb
pop
adc
xor
pop
xchg
cmps
dec
mov
adc
test
xor
nop
fdivr
dec
push
xor
jne
inc
cmp
push
jle
mov
iret
inc
ror
xlat
push
retf
repz
xchg
repnz
leave
cmc
adc
mov
pushf
stos
movs
jmp
jecxz
xor
pusha
iret
sbb
sub
retf
sbb
es
xor
or
xchg
xchg
xor
rol
nop
xlat
shl
lods
or
cld
retf
retf
cs
leave
repz
rol
mov
pop
sbb
imul
jmp
nop
pop
aad
dec
push
in
mov
div
inc
ret
test
mov
(bad)
cmp
call
and
sub
lahf
imul
push
mov
and
enter
xchg
push
xchg
out
push
mov
mov
cli
loope
adc
dec
aad
dec
rcl
jl
jle
popf
jmp
inc
xor
repz
jg
dec
dec
push
push
dec
ret
aaa
sub
out
mov
cmps
pusha
or
adc
pushf
mov
add
aad
push
stos
aad
inc
add
inc
cmp
jge
inc
sbb
or
or
push
rol
jae
xchg
fisttp
sahf
cmps
inc
inc
xchg
jp
je
sbb
xor
stos
inc
mov
push
jecxz
or
movs
mov
mov
pop
aaa
inc
mov
pushf
jne
loope
clc
stc
outs
jp
jne
gs
xor
mov
adc
out
aaa
cli
mov
loop
in
jne
adc
arpl
or
ret
in
push
add
js
jns
aad
in
sbb
iret
inc
rcr
neg
cmp
adc
mov
xchg
dec
push
dec
jne
je
mov
popf
pop
adc
lods
fwait
sub
pop
out
inc
mov
xchg
or
add
mov
rcr
jb
fsub
mov
push
mov
hlt
cs
ds
sub
mov
movs
cdq
add
stc
fldenv
push
fs
inc
push
sbb
sub
mov
lods
(bad)
addr16
push
retf
cdq
sbb
lds
lds
iret
and
inc
and
pop
xor
std
jo
mov
stos
sbb
or
mov
(bad)
ja
pop
into
inc
cmp
xor
dec
sahf
pop
lds
je
xchg
jno
mov
fwait
push
(bad)
fmulp
pushf
retf
shl
ror
lods
mov
pop
addr16
and
cmp
push
mov
sub
sti
in
in
cmp
push
movs
out
fstp
fsubr
adc
cmp
cmp
es
mov
mov
jmp
xor
minps
test
sub
pushf
je
cld
cmp
aam
aam
movs
into
xchg
shr
xor
xchg
pusha
fistp
imul
push
leave
dec
or
adc
mov
and
push
mov
popa
dec
push
adc
sub
pop
add
xchg
adc
add
or
retf
fsubr
shr
and
mov
daa
iret
push
cmp
ins
pop
int3
jmp
jl
pop
or
cld
dec
inc
push
xchg
jno
loop
sbb
push
sbb
sbb
sub
in
movs
sub
out
(bad)
xor
xchg
aad
inc
inc
cmps
xchg
dec
iret
loop
dec
or
pusha
mov
xchg
movs
stos
rol
lods
cwde
mov
clc
mov
dec
(bad)
mov
mov
(bad)
jae
jne
mov
ja
mov
cdq
adc
test
popa
mov
mov
and
push
sbb
adc
jp
adc
fldcw
jno
fcmovne
or
jo
andnps
lock
jns
test
cmp
test
add
pop
add
jo
loop
fistp
fdivp
dec
mov
rcl
cmp
daa
sub
stos
test
cmp
xchg
retf
sahf
(bad)
mov
or
int
pop
dec
inc
movs
out
icebp
out
stos
cli
adc
aam
stos
pop
mov
cmp
adc
clc
mov
jecxz
popa
(bad)
in
fucom
sub
pop
cmps
jb
mov
int
xchg
aad
xor
xor
adc
mov
jne
pop
data16
ret
or
lds
es
imul
in
(bad)
push
std
cmp
nop
sar
icebp
(bad)
into
pop
stos
mov
aas
xor
rcr
push
dec
cld
test
push
ins
lock
cmp
neg
dec
cmc
lods
test
mov
test
fldenv
mov
cwde
outs
jae
dec
jmp
loopne
mov
rcr
cwde
into
outs
mov
cdq
jne
dec
push
xchg
push
mov
loope
mov
cmp
cmp
imul
ds
cld
push
popf
mov
push
add
xchg
jecxz
scas
ja
inc
add
xchg
sub
pop
(bad)
cmp
sbb
and
sub
add
mov
sub
retf
cli
adc
fld
adc
sahf
mov
out
and
xor
sub
cmc
mov
pop
mov
fisttp
sbb
cwde
and
pop
dec
ins
call
leave
and
popf
mov
fs
gs
(bad)
sub
and
or
dec
outs
(bad)
cmps
pop
push
adc
add
push
shl
or
imul
dec
jo
xlat
mov
xchg
mov
xchg
dec
retf
movs
push
push
loope
bt
pop
pop
or
sbb
sbb
pusha
cmp
inc
mov
pop
inc
(bad)
stos
push
and
imul
movs
mov
mov
or
sub
dec
and
inc
ret
mov
daa
in
push
pop
popa
pop
outs
sbb
test
push
dec
(bad)
sbb
pop
rcr
sbb
or
aad
pop
pop
into
in
adc
inc
mov
jge
mov
pop
push
push
hlt
test
mov
push
gs
or
test
and
int3
leave
imul
pop
xchg
fdivr
addr16
daa
loopne
pop
(bad)
imul
add
stc
dec
ret
stos
js
lods
mov
push
fst
fcomi
jp
push
pop
xor
lea
loopne
das
fwait
mov
imul
adc
dec
inc
jo
out
(bad)
test
sar
mov
xchg
adc
jno
(bad)
push
cmps
rcl
inc
sub
outs
sahf
out
xchg
loope
gs
mov
push
daa
or
inc
cmps
sub
mov
and
icebp
cs
inc
jno
pop
aam
mov
fnsave
adc
jne
test
shl
or
repz
je
(bad)
sub
(bad)
cwde
inc
mov
fwait
add
mov
fcomp
sar
inc
adc
scas
pop
not
pushf
retf
je
test
call
sbb
fisttp
xchg
fsub
mov
sub
pop
cwde
pop
cmp
and
out
scas
fnstcw
add
jl
loopne
neg
cs
xchg
xchg
sub
ficom
push
scas
mov
inc
out
popf
sahf
cmp
arpl
sar
jae
and
or
sar
xchg
fsubr
inc
dec
and
popa
dec
dec
mov
sub
imul
jnp
cmp
aad
in
std
adc
jmp
fs
pop
add
inc
arpl
mov
loopne
int3
xchg
shl
jecxz
(bad)
rcr
scas
inc
(bad)
xor
or
add
(bad)
sbb
pop
sub
push
mov
xchg
push
and
(bad)
in
mov
hlt
mov
ret
unpckhps
xchg
mov
ret
sub
enter
jp
mov
ret
xchg
mov
mov
and
xchg
retf
test
test
stc
jmp
jne
cmp
mov
into
je
dec
(bad)
jo
adc
scas
xchg
cwde
lods
sub
xchg
push
push
push
mov
es
hlt
ror
shl
lahf
fs
les
xor
out
cld
jmp
xchg
mov
adc
dec
(bad)
imul
jbe
int3
adc
add
mov
adc
jo
sbb
jle
arpl
xchg
and
rcr
into
popa
sbb
(bad)
mov
js
ret
mov
cmp
pusha
pop
loop
sub
lds
call
mov
(bad)
cmc
adc
stos
js
sbb
pop
sub
nop
adc
cmp
and
test
xchg
(bad)
int
lock
adc
xor
mov
xor
cld
cmc
inc
leave
sar
sbb
(bad)
test
div
xlat
and
xchg
push
push
inc
rcl
push
sub
lock
hlt
test
dec
sub
out
(bad)
jmp
cmp
inc
(bad)
je
daa
in
out
jne
inc
bound
sbb
lods
enter
and
mov
sbb
aaa
sub
push
mov
xor
(bad)
push
(bad)
in
jp
clc
idiv
cmp
shr
and
mov
shl
sti
and
js
mov
sbb
stc
hlt
bound
push
in
mov
or
lods
sub
fist
ins
shr
popf
push
sub
dec
xchg
ret
or
cmps
popa
rcl
add
inc
inc
int3
std
nop
adc
xlat
stos
sbb
lea
xchg
fstp
hlt
test
or
pop
jns
mov
(bad)
movs
jbe
cmp
pushf
pop
xchg
bnd
fs
test
fsub
adc
int3
add
inc
or
sbb
iret
mov
adc
loop
mov
add
pushf
lea
rcl
(bad)
pop
xchg
mov
sbb
(bad)
icebp
jmp
ins
loopne
pop
pop
add
aam
fiadd
jle
(bad)
inc
dec
cmps
mov
aas
and
loopne
jmp
pop
shr
inc
dec
loopne
cld
ficomp
sbb
mov
mov
add
inc
mov
ins
lods
sar
xor
rol
idiv
xlat
dec
das
mov
push
mov
mov
nop
fst
(bad)
(bad)
add
stos
das
mov
div
imul
xchg
sub
mov
sbb
in
jle
popf
sbb
xor
dec
div
jb
lds
adc
inc
jge
and
pop
add
sbb
mov
cmc
adc
loopne
ins
loope
out
in
fcmovbe
sub
xor
outs
cmp
xchg
cmp
inc
xchg
pop
in
mov
fldcw
mov
pop
mov
cmp
sub
cli
loopne
and
sti
and
lds
ins
(bad)
mov
mov
xchg
dec
(bad)
and
pop
cmp
or
and
inc
cmp
rcr
fisub
add
dec
sbb
push
outs
mov
(bad)
test
jnp
jmp
mov
fnstcw
jne
mov
les
mov
pop
outs
aaa
dec
push
js
popa
or
or
jge
pop
jae
sahf
sub
xchg
xor
sbb
pop
mov
cmps
ror
xchg
mov
pushf
cmp
repnz
lods
add
sbb
rcr
xor
mov
repz
push
ins
fisubr
div
inc
xlat
sbb
jb
(bad)
pusha
dec
xlat
push
xchg
pop
mov
(bad)
iret
push
mov
or
or
mov
popf
sbb
sti
aaa
add
out
hlt
or
push
add
lea
push
pop
cmp
cwde
inc
into
gs
mov
das
test
xor
pop
add
rcr
jo
or
cs
push
stos
or
inc
dec
and
sbb
loop
aad
mov
mov
cmp
mov
lds
ds
pop
ficom
lods
sub
outs
xor
out
imul
popa
mov
xchg
mov
jl
aam
mov
mov
je
jg
add
adc
cmc
into
inc
add
jns
dec
pop
dec
xchg
and
aad
adc
xchg
mov
rol
push
je
xchg
lods
imul
ficomp
inc
movs
out
xchg
daa
pop
enter
and
pop
mov
cmp
cdq
out
sahf
jge
ds
into
fs
jmp
cmp
jae
(bad)
loopne
lock
loope
pop
cmp
jbe
daa
jg
push
fwait
mov
data16
xor
lods
(bad)
dec
ins
(bad)
dec
push
movs
les
add
inc
sahf
mov
jno
push
jge
cmp
jmp
mov
frstor
out
xchg
(bad)
(bad)
loop
retf
add
adc
imul
or
shl
jle
sbb
jo
fcomp
mov
xor
inc
and
call
jae
fcomp
rol
dec
inc
fwait
cmp
neg
push
in
hlt
imul
std
xchg
mov
lock
ds
(bad)
sti
out
pusha
cdq
dec
and
inc
add
addr16
inc
icebp
xchg
cmp
add
ss
arpl
into
pop
sbb
cmc
rcl
es
iret
cs
push
push
adc
shr
inc
sub
sbb
and
jae
hlt
imul
jne
stc
icebp
retf
mov
out
sbb
retf
mov
mov
leave
xchg
pop
test
xchg
fwait
mov
jb
imul
push
pusha
in
adc
lds
dec
cmp
cmp
lods
lock
push
(bad)
xor
adc
iret
(bad)
mov
mov
scas
out
popf
pop
adc
mov
lock
inc
add
xchg
and
imul
and
mov
adc
(bad)
xor
mov
fnstenv
das
outs
push
out
pusha
rcr
icebp
mov
mov
not
(bad)
in
rcr
xchg
scas
mov
addr16
repnz
js
push
inc
lods
push
adc
inc
aam
out
sbb
imul
das
inc
xchg
sti
mov
fist
test
adc
mov
(bad)
jns
jo
test
test
jnp
push
xor
dec
out
popf
(bad)
int3
adc
xchg
sbb
cs
fdivr
sbb
pop
inc
fdiv
inc
mov
cmps
xchg
(bad)
mov
aad
xchg
stos
jmp
fwait
jmp
ins
call
daa
mov
sub
jecxz
enter
jb
into
xchg
icebp
xchg
mov
jb
je
xchg
add
jmp
sub
or
pop
cmps
in
popa
setb
xchg
xchg
dec
mov
jnp
push
xor
loop
and
push
dec
lahf
fs
in
xchg
stc
xor
rcl
push
cs
aad
add
or
je
inc
aas
cdq
jle
in
cmps
inc
xchg
loopne
push
pop
shl
cld
loopne
out
cmp
push
fiadd
mov
adc
aaa
sbb
cmp
jp
sar
adc
push
mov
or
mov
std
pop
mov
and
sahf
mov
add
dec
stc
test
push
mov
lahf
xor
jg
push
pop
xchg
inc
push
out
xchg
mov
push
xor
push
xor
loope
outs
loope
popf
xchg
mov
xor
jbe
or
cmp
test
shl
jns
xchg
shr
mov
lahf
ds
sahf
or
sub
adc
dec
push
mov
and
jnp
push
movs
sub
fistp
jg
jb
outs
adc
test
out
adc
jbe
jae
inc
test
pop
ret
dec
ret
bound
xor
aas
mov
pop
mov
ja
out
cmp
push
loope
retf
pop
xchg
dec
fild
ret
fsub
repz
(bad)
or
mul
sbb
test
mov
xchg
scas
imul
sahf
in
scas
movs
neg
sahf
sbb
and
das
cmps
push
sub
mov
jno
fnstcw
mov
sub
mov
mov
sbb
sbb
ins
push
adc
scas
stos
dec
aas
popa
mov
xchg
ins
dec
pop
pop
sti
cli
aam
xor
hlt
repnz
je
mov
or
lahf
pop
and
add
leave
imul
jno
jne
pushf
mov
adc
add
or
cmps
dec
ror
push
cdq
mov
dec
icebp
and
cmp
push
jno
outs
adc
cmc
leave
fs
inc
les
call
inc
cmc
test
inc
push
cmps
int
mov
jmp
jne
in
pop
mov
pusha
xchg
cld
xor
mov
sbb
call
shl
and
push
push
in
sbb
(bad)
out
sti
bound
fcom
push
add
(bad)
jne
mov
or
jle
sbb
xlat
add
jns
xor
or
ret
dec
xor
jae
sbb
imul
out
inc
pop
push
pand
(bad)
jecxz
sub
mov
and
inc
push
shr
cli
add
bound
in
scas
cs
jmp
jecxz
mov
jp
mov
mov
sbb
scas
cmp
clc
shl
xchg
(bad)
inc
(bad)
test
sahf
jmp
push
out
sar
and
jbe
nop
or
popf
jle
sub
imul
(bad)
in
in
mov
call
xor
or
pop
jle
sbb
gs
sub
xchg
call
cli
mov
add
daa
test
fist
or
xchg
push
lods
xlat
inc
cmp
or
(bad)
adc
repz
cmp
retf
lds
mov
je
mov
push
add
mov
enter
or
jmp
icebp
mov
les
movs
cmp
dec
xchg
inc
push
push
push
cmps
(bad)
call
sub
xchg
call
mov
dec
mov
sbb
repz
or
mov
jmp
dec
bound
pop
fcos
int
daa
sbb
inc
aas
(bad)
cmps
jbe
jnp
pop
popf
out
push
or
ret
inc
push
aad
scas
mov
daa
daa
pop
push
mov
xchg
inc
or
sbb
loop
mov
fidiv
(bad)
sub
shl
xor
cmp
pop
xchg
mov
lock
cdq
jecxz
xor
rcl
fwait
scas
call
inc
sub
mov
test
mov
mov
mov
add
jge
push
xchg
pop
jae
sub
adc
rcl
push
cs
stos
xor
push
stc
js
popf
retf
hlt
xor
or
inc
iret
push
outs
out
stos
lods
sbb
fcmovu
adc
adc
mov
into
push
fwait
sbb
aas
(bad)
jmp
loopne
(bad)
test
or
mov
(bad)
and
pop
push
pusha
loope
dec
pop
scas
adc
pop
xchg
xchg
(bad)
and
in
and
jg
lods
out
xor
inc
xor
and
mov
push
adc
in
mov
jo
xor
push
imul
mov
add
lock
sub
ds
add
sbb
ss
xchg
xor
mov
push
sbb
inc
jns
xor
sar
dec
sbb
cli
sub
jo
pop
fldcw
sahf
jl
std
enter
call
add
(bad)
jmp
loope
inc
mov
mov
push
or
cmp
xchg
pop
lea
jae
popa
dec
add
sbb
inc
and
fwait
jecxz
lds
or
pop
inc
sbb
mov
(bad)
test
mov
sti
jmp
xchg
sbb
leave
push
test
retf
cmp
cmp
push
pop
and
xchg
adc
fild
adc
(bad)
imul
hlt
pop
inc
aad
lahf
cmp
mov
arpl
push
add
mov
imul
inc
mov
push
pop
hlt
(bad)
std
dec
and
(bad)
retf
add
add
scas
xchg
mov
jno
out
bnd
dec
push
pop
and
cmps
fst
mov
sub
mov
ja
loope
jbe
test
test
mov
imul
pop
push
mov
ds
pop
xor
stos
mov
xor
mov
push
pop
lods
mov
jl
cli
push
movs
int3
mov
(bad)
dec
loope
(bad)
fist
push
loop
inc
cmps
cs
adc
add
out
pop
(bad)
shl
fistp
je
in
mov
pop
pop
cmp
fisubr
pusha
mul
mov
(bad)
hlt
push
ins
outs
arpl
test
mov
jp
dec
or
lods
into
adc
iret
aad
pop
and
adc
imul
sbb
push
and
xchg
mov
cmp
outs
xchg
mov
mul
outs
add
cmc
in
mov
cmp
pop
faddp
or
sti
test
push
or
(bad)
shr
pop
in
clc
das
xlat
mov
adc
or
pop
cmp
scas
in
pop
pop
mov
enter
mov
test
mov
outs
push
jae
mov
mov
jecxz
inc
rcr
jge
lds
push
out
dec
push
xor
pop
stos
xor
leave
jle
xchg
adc
cmp
inc
ds
movs
or
add
enter
sbb
or
or
aas
sub
int
xchg
mov
push
ret
pop
das
push
inc
test
in
aaa
dec
push
in
in
cli
add
xor
cmc
inc
adc
test
sub
push
jne
ret
jmp
iret
fistp
xchg
ja
inc
xchg
push
dec
xchg
jmp
pop
movs
fs
scas
cmps
xor
fidiv
dec
inc
neg
std
mov
sub
inc
(bad)
dec
cld
les
je
scas
push
loope
aas
shr
jge
adc
popf
and
lods
js
push
stc
mov
(bad)
gs
out
sti
pushf
and
add
ins
enter
frstor
sub
sub
mov
xchg
xor
add
pop
cmp
pop
not
gs
xchg
fnsave
mov
lods
sub
out
mov
and
lea
xor
xchg
and
js
ficom
lahf
hlt
or
xchg
add
xchg
push
fcom
or
not
dec
xor
cli
ins
jmp
push
add
lods
mov
rcl
push
into
lods
stos
dec
xchg
push
inc
pop
adc
fdivr
xchg
popa
repz
out
xor
push
movs
into
clc
xchg
xor
sub
push
adc
push
ins
dec
js
call
mov
sbb
lods
jbe
into
(bad)
mov
daa
xchg
pop
cmps
movs
xor
pop
cmp
add
ret
rol
mov
pushf
adc
pop
lock
sub
cwde
inc
xor
std
xchg
dec
mov
ss
int3
mov
out
sbb
adc
or
pop
xchg
pop
not
pop
mov
imul
aaa
push
hlt
(bad)
aaa
bound
pushf
mov
mov
(bad)
push
mov
(bad)
test
dec
retf
dec
popa
lods
mov
dec
adc
inc
fwait
pop
sbb
jmp
aam
sahf
mov
out
js
inc
pop
pop
loopne
ret
mov
jle
test
adc
cmp
sub
sub
add
icebp
jmp
out
fisttp
or
jmp
call
add
jmp
scas
mov
movs
and
dec
sbb
mov
shr
outs
inc
mov
xchg
clc
sbb
add
push
sahf
adc
cmp
sub
jbe
into
push
mov
in
dec
enter
mov
ins
bound
xchg
add
and
sub
push
jae
ins
cmp
cmp
mov
add
ror
fwait
pushf
mov
xor
xchg
ret
loop
lods
ror
mov
mov
ins
scas
hlt
xchg
jge
pusha
or
push
fucomi
dec
mov
jae
cdq
lea
xchg
cmps
mov
std
mov
and
xor
cmps
sub
sub
mov
mov
test
popf
adc
scas
(bad)
cli
jle
arpl
adc
cmp
or
sub
jecxz
iret
or
adc
shr
cld
fisubr
adc
pop
push
lea
daa
ins
mov
sbb
scas
bound
in
jnp
mov
jb
jp
push
ds
and
mov
popf
or
retf
and
test
and
mov
call
pop
aas
out
xor
sbb
pop
mov
nop
mov
inc
daa
push
cmp
cs
retf
imul
cmp
and
loopne
stos
add
adc
dec
and
popa
(bad)
mov
mov
nop
mov
retf
cmp
int
mov
retf
add
push
push
popa
sub
and
test
pushf
mov
push
jb
push
mul
xor
add
(bad)
fmul
mov
shl
mov
add
mov
lods
jb
leave
push
xchg
pop
repz
call
repnz
fimul
xchg
mov
daa
(bad)
jns
sbb
clc
jae
xlat
sahf
sti
sub
jbe
rcr
(bad)
stos
out
cmp
or
int
sub
pop
dec
jmp
xchg
fistp
dec
into
loop
daa
pop
repnz
cmps
ror
cdq
fnstenv
mov
scas
(bad)
mov
mov
push
cmps
add
rol
xchg
hlt
jp
pop
push
leave
mov
pop
inc
inc
inc
mov
mov
and
cmc
add
push
dec
inc
and
bound
imul
cmp
es
retf
in
int3
inc
clc
fs
pop
xlat
pop
xlat
jae
jns
je
aaa
xchg
std
jne
and
rcr
daa
cmp
daa
xchg
ror
dec
in
out
sti
jns
shr
or
test
dec
cmp
test
outs
mov
sub
in
sub
fcom
push
icebp
sbb
cwde
retw
cmp
push
inc
sbb
loop
mov
mov
mov
fadd
and
mov
xor
mov
jb
sbb
out
lock
leave
push
mov
mov
shld
scas
shl
je
(bad)
cmp
test
aas
jl
(bad)
mov
mov
sub
push
test
xchg
imul
int
(bad)
je
(bad)
cs
clc
dec
repnz
mov
rep
sbb
div
fnstenv
cs
or
push
mov
cmp
adc
aaa
lods
rcr
fisub
int
xor
inc
movs
jnp
jmp
(bad)
repnz
lods
bound
ins
cs
jp
mov
arpl
pop
mov
mov
aas
popf
fisub
and
stos
push
not
adc
or
movs
adc
test
jg
test
mov
(bad)
neg
adc
scas
sbb
add
lds
mov
mov
xchg
jp
xor
sub
mov
(bad)
scas
into
iret
xor
pop
scas
leave
fld
cmp
pop
div
pop
xlat
xchg
dec
inc
pop
xchg
inc
ja
sub
add
(bad)
jnp
les
jg
sti
adc
out
test
dec
mov
mov
jne
push
jbe
int
xlat
test
out
fsubr
daa
in
xor
inc
imul
cmp
xor
jle
adc
out
out
pop
cmp
rcl
add
and
jae
ins
bndstx
xchg
mov
push
xlat
aad
popf
jl
repz
shr
ret
ficom
(bad)
loope
sub
movs
outs
lods
pop
inc
out
stos
scas
jg
scas
mov
dec
pop
outs
in
fdivr
xchg
adc
(bad)
xchg
fs
fstp
xchg
fucomip
xor
jle
call
pop
ja
test
repnz
push
test
cdq
jae
xchg
mul
sub
xor
das
jbe
jle
add
sub
sub
mov
daa
add
jae
leave
sbb
test
fs
fsubp
xlat
xchg
bound
pop
mov
inc
repz
stos
enter
dec
pusha
or
fsubr
jmp
pop
ja
int
or
mov
loopne
or
fs
or
cmp
enter
add
push
ror
out
pop
ds
sbb
inc
stos
jmp
shl
retf
daa
and
dec
ret
test
in
or
xor
jns
push
xchg
out
imul
xor
adc
ja
push
jne
into
fstp
xchg
in
mov
dec
gs
push
aad
pop
add
enter
pop
mov
mov
out
inc
push
sti
push
push
adc
sahf
jns
scas
popf
mov
push
inc
stc
inc
cmps
mov
mov
pop
arpl
jae
inc
add
pop
or
rcr
mov
sbb
cmp
cmps
rcr
je
mov
inc
les
daa
dec
fild
pushf
call
xlat
(bad)
call
leave
repz
fwait
inc
pop
sub
inc
jmp
outs
mov
add
inc
push
dec
xor
ins
ja
jne
pop
and
sub
hlt
ror
addr16
inc
scas
outs
rcr
add
jl
push
jl
mov
or
add
not
adc
mov
mov
enter
das
or
(bad)
stc
mov
aam
push
ins
fldlg2
(bad)
mov
ror
data16
(bad)
bound
xchg
repz
rcr
arpl
inc
jle
jo
fdivr
fsub
(bad)
cmp
fdivrp
sub
rcr
aas
jecxz
xchg
lods
mov
aas
push
fisub
aad
dec
push
mov
and
or
cmps
inc
sar
adc
adc
pop
pop
in
dec
icebp
xor
inc
cmps
adc
dec
jmp
(bad)
mov
or
sbb
into
call
retf
out
or
mov
mov
mov
mov
jecxz
mov
daa
sbb
push
sbb
call
scas
fwait
repz
mov
inc
xor
(bad)
jmp
imul
push
fsubr
js
fiadd
out
jae
xor
imul
sub
(bad)
and
push
add
xor
jmp
repz
push
pop
bound
mov
dec
xor
(bad)
mov
cmc
enter
or
fild
add
xor
(bad)
sub
jns
sub
sbb
mov
cmps
push
call
int
lds
push
inc
sub
push
push
popa
shr
iret
add
mov
cs
fwait
cwde
sahf
jb
xor
aaa
mov
push
jg
pop
push
dec
mov
int3
sti
sbb
pop
les
xchg
add
sbb
rcr
push
repnz
xlat
cmp
mov
out
hlt
shl
(bad)
push
dec
adc
mov
popa
out
pop
jae
lahf
shl
jl
ja
jle
into
push
and
fwait
into
push
imul
mov
cmp
or
imul
xor
mov
pop
(bad)
out
arpl
pop
pop
sub
fcom
jg
sbb
ror
xchg
in
not
mov
dec
stc
clc
dec
pop
sbb
mov
stos
cmp
sbb
jle
push
data16
cmps
pop
and
sbb
push
frstor
loop
call
mov
jb
in
sub
jb
jnp
adc
cdq
xchg
pop
and
sbb
ret
clc
adc
push
mov
mov
(bad)
addr16
dec
nop
sahf
stc
sub
(bad)
loopne
popf
add
mov
ret
ror
adc
cmp
push
lods
mov
sub
shl
and
push
mov
xchg
jo
xor
ds
mov
inc
sbb
mov
aas
les
sub
add
xlat
pop
push
xchg
ins
scas
in
jecxz
push
pop
ins
add
jo
or
push
and
(bad)
jmp
pop
jg
repnz
stos
fistp
sbb
mov
(bad)
shr
lods
cmp
add
sub
imul
add
push
sub
leave
repnz
add
retf
pop
inc
inc
inc
dec
mov
push
mov
add
inc
cwde
into
push
push
ins
mov
es
mov
push
xchg
cmp
retf
addr16
adc
jp
sbb
mov
sbb
mov
mov
mov
les
out
pop
or
cmp
ret
or
ins
fimul
xor
cld
xchg
mov
sub
adc
clc
fcom
or
adc
test
lea
mov
(bad)
in
or
fcom
jbe
sbb
sti
jo
sub
pusha
mov
loop
cvtps2pd
inc
stos
jo
pop
adc
pop
rcl
inc
add
inc
sub
xchg
push
pop
les
jb
iret
mov
mov
adc
rcl
sbb
jne
cmp
jp
sub
lahf
mov
xchg
cmp
cmc
into
sbb
aaa
arpl
xchg
and
mov
add
lock
test
jmp
mov
mov
test
rcr
cmp
add
pop
ja
test
pop
int3
call
enter
mov
mov
inc
xchg
cmps
mov
or
(bad)
outs
daa
and
pop
mov
lahf
pop
adc
push
and
xchg
mov
push
push
(bad)
adc
adc
into
and
out
cmp
xor
lahf
fcmovb
rcr
repz
sbb
jmp
inc
add
les
ins
test
sbb
pop
data16
pop
add
movs
pop
fs
test
dec
ins
xchg
jecxz
mov
in
lea
inc
mov
pop
ss
mov
(bad)
aas
push
jecxz
cwde
mov
out
or
push
add
imul
jnp
or
cmp
mov
sub
sahf
retf
nop
fmul
dec
loope
jg
jo
lods
dec
and
in
adc
cmp
dec
add
sbb
ja
adc
(bad)
(bad)
or
xchg
sub
outs
nop
inc
jmp
stc
iret
mov
or
mov
shl
xlat
and
jmp
xchg
inc
call
mov
adc
xchg
or
sub
(bad)
sub
xchg
fs
jp
test
push
aad
cmp
iret
jae
xor
fcom
pusha
jo
add
adc
dec
iret
inc
data16
call
pop
in
add
or
xchg
jo
jo
inc
ficom
sahf
adc
push
mov
lea
pop
jns
gs
sub
or
cmp
leave
fs
jno
sti
and
int3
jbe
(bad)
jmp
fwait
es
sbb
mov
out
cmp
(bad)
frstor
adc
ds
adc
retf
push
adc
hlt
or
out
jmp
loopne
iret
xor
mov
cmc
and
add
or
add
inc
out
pop
push
mov
jno
mov
ss
jecxz
or
pop
pop
jo
cmp
pop
sub
push
data16
(bad)
enter
inc
or
ror
add
pusha
xchg
fwait
push
icebp
mov
je
mov
retf
sbb
pushf
xchg
jmp
inc
je
es
test
cdq
inc
cld
or
adc
push
adc
pop
mov
ret
add
xchg
das
stos
cmp
imul
pop
call
int3
movs
in
iret
adc
add
mov
add
pop
push
and
je
pop
pop
sub
pop
cdq
jbe
jecxz
sbb
daa
nop
mov
or
inc
add
sub
out
das
pop
adc
jo
pop
ja
sub
nop
mov
pushf
mov
sbb
call
lods
lods
mov
cmp
or
jmp
jmp
leave
les
pop
pop
not
xor
lahf
rcr
push
inc
xor
aas
sub
adc
imul
mov
sub
mov
dec
add
mul
xor
xor
test
js
(bad)
jnp
ret
mov
je
jb
clc
inc
adc
mov
xor
pop
ins
mov
stc
mov
push
rcl
mov
push
retf
and
loopne
mov
es
ret
sub
add
cli
(bad)
pushf
dec
retf
retf
pop
add
imul
inc
inc
pop
mov
loopne
cwde
dec
mov
xchg
repz
dec
cmp
jmp
dec
cdq
jle
stos
jno
test
jbe
mov
push
jl
add
sbb
jnp
es
push
hlt
mov
clc
call
bound
ret
fsubr
aam
test
fs
jg
pop
add
stos
ins
mov
and
sar
pusha
mov
push
call
fstp
xchg
imul
push
jl
sub
cld
out
or
inc
stos
shl
add
in
cmps
aad
shl
retf
in
rcl
push
mov
mov
jo
sbb
push
les
div
xchg
adc
call
mov
sar
dec
cmps
sub
dec
sbb
push
arpl
jne
pop
or
out
int3
push
mov
ds
lea
xchg
call
cmp
xchg
jae
scas
retf
pop
fistp
call
jnp
loope
add
pop
repnz
mov
xor
sti
retf
mov
or
sub
ficomp
jl
or
jnp
ror
mul
out
test
cmc
rcl
add
fwait
jnp
sbb
in
cdq
adc
ja
jbe
scas
xlat
lahf
mov
adc
xlat
ins
lahf
ret
pop
data16
aaa
fidivr
mov
xchg
popf
jmp
or
fsubr
jns
ins
jle
jmp
lea
in
dec
jae
imul
loopne
mov
mov
push
movs
jl
popa
inc
loope
jne
aaa
ja
jnp
sbb
(bad)
je
(bad)
mov
jo
cld
in
add
pop
hlt
sbb
outs
inc
xchg
cmp
push
mov
int3
or
cli
xchg
sub
in
mov
das
pop
jmp
and
cmp
or
call
dec
(bad)
fistp
lahf
and
ficom
scas
xchg
ficom
mov
and
cmp
mov
into
loopne
xchg
outs
and
jmp
fwait
mov
or
fidiv
xor
cmp
cmp
xlat
sub
sahf
or
or
and
lea
aas
xchg
in
cwde
pop
or
mov
mov
sbb
xor
push
imul
imul
push
je
mov
movs
adc
mov
add
rol
shl
(bad)
arpl
cld
xor
and
xchg
repnz
hlt
(bad)
cmp
test
repz
push
adc
push
xchg
leave
cld
test
and
aam
rcr
cmc
leave
push
or
js
or
pop
dec
retf
pushf
add
(bad)
fmul
loop
cli
int3
test
jg
cmps
ss
inc
mov
jns
push
dec
xor
xor
jns
aad
mov
xor
lods
adc
in
mov
mov
pop
inc
fucomi
cli
jno
mov
mov
mov
lds
jl
mov
dec
gs
mov
scas
mov
daa
movs
xor
test
rcr
add
add
mov
ins
scas
ins
cdq
adc
xchg
int3
add
and
jns
div
(bad)
iret
dec
xchg
xchg
mov
sub
imul
loopne
pop
mov
pop
xchg
xor
and
mov
xor
call
xchg
mov
shl
loope
or
std
sbb
rcl
adc
aam
add
retf
or
jbe
stos
sub
ja
cwde
es
stos
gs
cli
pop
pop
sbb
push
int
das
xor
jnp
jl
or
hlt
sub
std
xchg
sub
and
mov
ret
shl
push
mov
xor
dec
or
enter
cwde
jb
push
mov
scas
xchg
add
ret
(bad)
jle
xchg
out
jae
cmc
cmp
sub
js
xchg
push
sub
push
(bad)
in
test
and
cmp
fild
sbb
out
cmp
dec
add
dec
add
stos
jle
mov
or
test
lods
add
cmp
pop
test
loop
(bad)
xor
sbb
cmp
mov
mov
mov
mov
movs
idiv
jns
push
sub
push
sbb
das
mov
sbb
add
in
adc
mov
jnp
or
(bad)
inc
sub
xchg
push
xlat
sbb
cmp
pop
fsub
xlat
loopne
je
or
rcr
push
sub
cmp
ror
mov
rcr
push
pop
retf
fbstp
mov
pop
pop
mov
mov
inc
mov
pop
xchg
or
addr16
stc
sbb
adc
xor
push
into
mov
lahf
mov
mov
enter
jmp
push
pop
clc
mov
movs
push
icebp
movs
xchg
xchg
inc
and
aaa
jbe
push
xchg
loope
dec
mov
mov
mov
sti
in
out
(bad)
jnp
add
mov
ins
push
cmp
bswap
add
stos
mov
scas
stc
mov
add
add
fisub
adc
xchg
call
pushf
jne
call
aad
call
sbb
sbb
push
inc
imul
ret
pop
push
neg
cwde
mov
(bad)
nop
inc
sbb
pushf
fs
and
cmp
mov
imul
mov
xor
pop
cwde
dec
push
leave
push
je
dec
call
inc
cmovge
out
int
xchg
mov
dec
push
aaa
push
in
or
jg
and
push
and
jno
pop
or
jle
xchg
popf
in
mov
fcmovnb
xor
cmp
imul
in
movs
retf
cld
cdq
nop
loopne
cmps
sbb
mov
rcr
in
sti
mov
shl
pop
jg
mov
add
or
pop
imul
(bad)
lock
pusha
mov
in
leave
push
xchg
cmp
retf
shr
dec
inc
add
(bad)
mul
fstp
shl
scas
jbe
push
xchg
loopne
nop
mov
inc
mov
dec
cmp
in
popa
sub
or
arpl
or
gs
loop
movs
out
lods
adc
pusha
mov
xchg
loope
pop
dec
test
cmp
fwait
cwde
jns
sub
mov
shl
xchg
loopne
je
sbb
mov
xchg
ror
loope
lea
js
and
call
sbb
mov
pop
and
mov
(bad)
push
pop
xor
inc
je
fild
sub
adc
jmp
sbb
iret
or
inc
inc
pop
repnz
mov
sahf
sub
or
lods
not
aaa
jge
mov
sbb
and
jmp
outs
in
xchg
pop
pop
mov
cmp
sahf
rol
cdq
xchg
add
cmps
test
aas
fwait
mov
std
rcl
les
sub
dec
loopne
jg
fwait
push
ins
add
xchg
(bad)
jb
arpl
fdivr
jae
pop
dec
mov
and
mov
test
mov
js
jp
sbb
mov
xor
mov
lock
je
sub
not
pop
sbb
mov
rcr
rcr
mov
sbb
in
mov
sbb
loope
pushf
movs
push
test
repz
adc
xor
(bad)
or
scas
out
xchg
mov
adc
dec
scas
mov
cdq
sub
push
mov
jmp
cmp
in
stc
ins
inc
ficomp
inc
enter
test
mov
pop
push
gs
ds
je
jnp
jns
add
rol
jp
and
push
bound
cmps
das
(bad)
sub
lea
scas
mov
ret
hlt
retf
mov
jno
push
mov
stc
movs
cmps
(bad)
aas
jno
repnz
xchg
or
mov
daa
push
loop
and
and
(bad)
mov
cwde
clc
ret
mov
add
mov
pop
and
and
int
fcmovb
mov
mov
and
add
int
push
ss
call
mov
push
cmp
icebp
rol
fyl2xp1
xor
outs
ss
mov
fsubp
clc
fld
int3
enter
dec
(bad)
scas
enter
and
into
mov
and
test
pusha
cmc
and
gs
sbb
shr
jl
and
push
mov
jno
sahf
mov
mov
in
lds
out
addr16
jno
dec
test
jae
sahf
mov
cmp
aad
retf
or
jp
int
sub
aas
xchg
scas
aam
mov
adc
push
and
rcl
and
push
and
xchg
push
inc
addr16
push
xchg
ret
push
sbb
out
and
leave
inc
adc
mov
shr
mov
mov
dec
(bad)
retf
rcr
sti
and
cmp
adc
jno
int3
out
xlat
repz
movs
int3
xor
xor
fs
dec
cli
pop
xchg
mov
sti
or
call
outs
ret
and
push
fsub
dec
and
inc
call
jle
adc
sti
nop
aam
leave
mov
sub
xor
and
fstp
jmp
out
mov
xchg
adc
cmp
cs
cmp
ror
mov
hlt
ror
iret
pushf
mov
sub
retf
or
jmp
sub
jmp
sbb
pop
inc
daa
fxch
sahf
in
mov
mov
leave
call
inc
pop
rol
push
gs
in
fxch
out
ss
cld
lea
fsubp
mov
jb
ror
in
xchg
aad
inc
mov
outs
gs
mov
adc
pop
fwait
push
retf
lods
or
push
cmc
push
mov
repz
sub
mov
mov
pop
dec
inc
mov
dec
jp
sub
cld
repz
mov
jns
stc
pop
call
xchg
or
imul
pop
inc
test
cmp
xchg
fidiv
adc
div
imul
add
dec
xchg
dec
dec
xchg
lds
pop
adc
adc
out
push
fsubr
push
mov
je
fstp
dec
push
(bad)
dec
cmp
jno
or
push
nop
iret
pop
mov
add
dec
push
bound
test
jle
push
push
dec
xchg
ja
fbstp
dec
shl
jmp
pop
inc
lds
pushf
(bad)
sub
test
mov
int
lds
jg
pop
add
mov
lock
mov
mov
or
cmp
cwde
or
jae
jge
push
rol
mov
leave
call
jns
in
cmp
dec
mov
jp
rcl
sub
leave
ds
dec
int3
jg
test
loope
icebp
in
lock
inc
test
stos
dec
ror
mov
jg
fsubrp
mov
loop
mov
fisttp
xchg
mov
sbb
dec
or
rcr
js
xor
or
jbe
and
sub
js
push
add
outs
repnz
test
sbb
shl
ins
mov
xor
scas
fdiv
or
daa
xchg
ds
sub
data16
(bad)
out
enter
jmp
pop
stos
mov
idiv
cwde
or
out
and
jl
outs
add
shl
inc
dec
loope
dec
sbb
call
sbb
ja
mov
repz
test
mov
push
add
int
pop
ins
mov
or
fwait
mov
jne
sbb
out
retf
int
rol
jbe
add
jae
xor
scas
cli
or
les
popf
ret
sub
and
pop
push
push
jmp
or
addr16
mov
xor
imul
rol
popf
ficom
lods
mov
lds
cld
sub
mov
adc
dec
sar
shl
or
jmp
stos
arpl
pop
push
sub
inc
call
push
push
xor
movs
mov
xor
hlt
adc
outs
jae
cmps
and
xor
stos
int
sbb
mov
aad
shl
imul
mov
pop
hlt
or
mov
jbe
push
jnp
pushf
push
mov
jns
fiadd
xchg
add
dec
add
xlat
mov
sar
les
neg
jp
(bad)
repz
sub
outs
arpl
and
jge
aam
lock
push
jbe
dec
ror
xor
dec
fstp
pop
arpl
push
or
idiv
(bad)
in
movs
push
mov
jp
mov
adc
and
sub
outs
jns
aaa
popf
shr
je
sub
outs
ret
mov
xor
dec
pop
out
ficomp
popa
es
and
imul
jo
hlt
sub
fwait
(bad)
mov
clc
push
in
test
das
movs
nop
repz
test
add
iret
sub
enter
dec
mov
movs
ds
jnp
(bad)
fs
rcr
hlt
xchg
call
fld
out
mov
sbb
mov
sbb
out
loope
shl
mov
mul
int3
rcl
leave
or
dec
fidivr
rol
hlt
xor
(bad)
shr
mov
int3
jp
sub
jl
push
loop
sub
adc
test
jecxz
mov
aam
ds
dec
push
jl
mov
repnz
mov
in
jnp
js
into
shr
nop
push
cmp
in
adc
or
jg
mov
sbb
clc
fiadd
pushf
aad
cdq
xchg
xor
cmps
daa
sbb
sbb
aad
cld
fs
arpl
aaa
sbb
mov
lds
mov
mov
cmp
fst
das
outs
inc
in
retf
push
mov
mov
push
jg
sbb
fsubr
arpl
mov
jecxz
and
dec
cmp
push
mov
adc
pop
dec
dec
push
xor
dec
mov
mov
loop
cdq
sbb
xor
loope
mov
mov
mov
jmp
push
push
loopne
daa
rol
loop
js
inc
outs
pop
mov
jnp
clc
push
pop
enter
mov
or
cmp
adc
or
data16
xor
pop
mov
lock
in
fnstcw
push
cmp
jbe
(bad)
mov
mov
std
mov
cmp
rol
xchg
inc
je
push
jns
sub
retf
mov
in
xchg
sub
sub
pushf
imul
push
fs
fdivr
push
hlt
loop
adc
dec
test
xchg
add
(bad)
(bad)
js
mov
add
ins
or
dec
cmp
inc
es
sbb
or
dec
pop
xor
sbb
mov
xchg
mov
out
sbb
dec
imul
stos
js
xor
mov
loop
pop
sub
in
mov
xor
out
jo
leave
add
cmp
dec
std
aas
data16
movs
shl
pop
in
pop
jno
sar
movs
cmps
int
add
mov
pop
scas
stos
es
test
sbb
sbb
pop
or
data16
mov
push
cli
jb
cmc
mov
test
mov
(bad)
push
jb
jae
pop
imul
lahf
iret
or
pop
xchg
fwait
jo
dec
(bad)
loop
pop
in
(bad)
scas
cli
pop
add
sbb
(bad)
jb
dec
aaa
pusha
pop
aaa
or
es
adc
jno
push
or
jmp
adc
or
push
cmc
and
mov
mov
outs
sub
add
arpl
ja
aas
rcl
out
push
daa
shl
jae
les
nop
xchg
or
fcom
hlt
call
mov
shr
mov
dec
add
mov
xchg
inc
adc
dec
xor
xchg
push
and
inc
fs
iret
and
pop
repz
fstp
loopne
lods
or
jne
mov
cli
mov
aaa
pop
pop
retf
inc
ss
sub
push
cli
iret
ja
shl
cmp
sahf
pop
(bad)
nop
or
outs
movs
jbe
fist
sub
or
xchg
fnsave
cmp
xchg
dec
and
jmp
mov
adc
jns
mov
stos
or
daa
lea
xchg
out
sar
popa
jnp
mov
sub
pop
aaa
mov
pusha
pop
nop
fdiv
sbb
out
mov
cld
mov
jne
cld
xor
mov
stos
iret
test
pop
jecxz
pop
test
pop
cmp
pop
sub
ret
or
inc
adc
sbb
sub
fstp
clc
rcr
imul
pushf
sbb
mov
and
or
sub
mov
(bad)
mov
pushf
iret
jmp
pop
cmp
or
pop
jle
int
scas
add
or
leave
or
add
loope
adc
in
cli
mov
xlat
push
ficom
xlat
and
fs
jecxz
in
scas
arpl
jo
xor
mov
pop
pop
(bad)
repnz
mov
adc
mov
(bad)
cmc
out
cld
pop
push
in
mov
cli
inc
push
movs
xchg
xchg
or
mov
adc
jbe
pop
iret
push
enter
cmp
imul
std
lahf
(bad)
mov
sub
jmp
jns
xchg
or
mov
jl
retf
mov
in
lahf
data16
adc
movs
xlat
(bad)
out
pushf
sti
adc
cmp
movs
jg
(bad)
in
clc
sub
add
in
sub
out
and
scas
mov
rol
bound
jmp
jnp
dec
pop
pop
movs
out
ucomiss
repz
sbb
xchg
xor
and
mov
(bad)
push
adc
(bad)
out
sbb
cld
call
jae
scas
mov
movs
and
push
mov
jle
mov
xor
xchg
xchg
(bad)
cld
cmp
push
(bad)
xchg
xchg
add
or
sub
mov
cmps
leave
es
sbb
mov
and
ret
dec
cmp
mov
adc
mov
sbb
cmp
cmp
mov
mov
rcl
adc
in
jecxz
cmps
cmps
int
outs
mov
ja
mov
cmc
fcom
push
sub
cmc
in
xchg
cmp
stos
sbb
out
outs
pcmpeqw
out
ds
and
inc
test
jae
and
mov
cmp
not
xchg
mov
fnstcw
push
mov
inc
pop
shl
bound
sub
das
or
push
pop
push
or
pop
jnp
pop
cdq
mov
imul
loop
cdq
pop
sub
(bad)
shl
(bad)
jns
arpl
(bad)
nop
jmp
sub
scas
xchg
shl
sbb
xchg
cli
jae
xchg
scas
fwait
mov
sar
jo
out
mov
mov
push
jmp
mov
lea
mov
inc
push
scas
gs
rcl
xor
leave
mov
pop
lea
loopne
pop
mov
sbb
adc
repz
xor
jp
push
mov
mov
fstp
scas
jne
jmp
add
test
int3
cdq
or
(bad)
adc
push
push
pop
scas
pop
fisubr
sub
inc
out
xchg
jp
inc
push
out
cmp
retf
xchg
mov
repz
add
mov
gs
arpl
xor
icebp
and
jmp
cld
movs
ror
push
push
dec
adc
jmp
xlat
add
or
jno
pop
stos
mov
mov
pop
fild
ins
in
callw
cwde
not
add
mov
or
mov
adc
or
jg
jmp
loope
enter
ret
adc
jno
mov
shl
out
inc
bound
mov
lea
adc
mov
ss
outs
xchg
mov
mov
push
jb
adc
in
jg
jnp
imul
lock
dec
add
icebp
mov
jae
mov
ds
dec
mov
xchg
aas
outs
in
sbb
cwde
out
sub
je
fs
dec
add
push
imul
scas
clc
add
mov
lahf
mov
xor
mov
pop
push
adc
mov
out
fcomi
int3
or
jnp
jnp
cmp
sub
mov
shr
fild
jecxz
pop
mov
mul
sbb
mov
add
add
mov
push
loope
nop
add
in
sahf
xor
push
mul
stos
or
(bad)
push
mov
pop
lock
pop
hlt
push
data16
mov
into
or
and
jns
das
push
mov
pop
pusha
stos
mov
lods
xor
add
mov
pop
pop
fs
(bad)
test
les
(bad)
adc
pop
loopne
mov
pop
xchg
pop
rcr
and
popa
icebp
cmp
out
(bad)
in
adc
push
pop
inc
jb
jecxz
lea
mov
jno
es
pop
loope
jno
(bad)
adc
ds
inc
mov
add
add
cld
cmc
sub
pop
repz
std
leave
push
cmp
out
cmp
sbb
jnp
sbb
scas
lock
call
jo
mov
push
nop
sub
cld
push
jno
or
(bad)
dec
dec
jbe
and
xchg
xor
fsubp
sbb
cmp
call
sbb
mov
mov
mov
fisubr
idiv
lods
pop
outs
sar
sar
jmp
lock
hlt
inc
xchg
and
mov
jo
add
(bad)
std
cmp
push
xor
adc
mov
jmp
sub
(bad)
cmp
xchg
imul
push
or
inc
loope
push
sahf
not
dec
out
int3
jl
data16
mov
or
aaa
(bad)
aas
outs
jno
fcmovnu
push
mov
(bad)
ror
repz
mov
mov
xor
mov
mov
repz
and
xor
inc
add
fdiv
cs
test
outs
leave
bound
dec
sub
sub
pop
push
xchg
dec
jae
and
jg
xchg
movs
jmp
inc
jge
pusha
scas
dec
es
inc
mov
repz
sub
inc
cwde
and
sub
add
xor
pop
mov
or
pushf
imul
mov
add
int3
xchg
add
fsubr
push
adc
jb
ret
arpl
mov
dec
xor
or
jg
mov
sbb
cmp
fisubr
adc
out
mov
or
and
hlt
test
mov
jb
xchg
lea
sahf
jns
test
push
dec
pop
stc
pop
mov
movs
mov
out
fdiv
cmp
mov
rcl
lds
enter
sbb
outs
data16
and
adc
dec
in
into
scas
sbb
call
mov
and
lock
dec
addr16
cs
pop
scas
xor
jmp
popa
(bad)
std
mov
lods
xchg
mov
ficomp
out
push
mov
js
xchg
cli
loope
jmp
push
mov
xchg
push
fsubr
push
mul
dec
out
pop
mov
jg
mov
jno
int3
mov
inc
loop
sti
mov
out
test
imul
lock
adc
cmps
out
lods
xor
dec
in
mov
jb
xchg
ret
fstp
push
xor
and
js
fist
rcl
pushf
jo
repnz
pop
xlat
jmp
mov
cld
mov
(bad)
cmp
popa
test
js
or
jp
call
fs
in
push
outs
jmp
jno
mov
stos
aad
fdivr
push
test
xchg
xor
and
mov
or
add
pop
sub
loope
out
add
xor
inc
aas
pusha
xchg
int
sub
xchg
sub
mov
imul
xchg
or
aad
mov
sub
(bad)
xor
mov
cmc
out
ins
inc
inc
cmc
pop
sahf
add
and
add
nop
pop
mov
fwait
push
push
sar
into
xlat
(bad)
sahf
push
inc
sub
or
movs
std
adc
retf
addr16
je
es
loopne
or
pop
or
add
push
cmp
sub
mov
movs
enter
mov
xchg
mov
adc
mov
push
rcr
sbb
xchg
push
or
pusha
xor
mov
dec
xchg
push
ja
in
jno
inc
or
rol
xor
sbb
sbb
push
cld
add
add
imul
loope
lea
in
push
or
lods
imul
les
lea
ds
cmp
icebp
or
sub
pop
(bad)
pop
(bad)
jmp
pop
mov
ins
sbb
push
test
inc
shl
push
addr16
dec
add
in
or
dec
shl
jp
sbb
test
xor
inc
into
push
test
retf
xchg
stc
adc
cwde
xor
jnp
inc
mov
sbb
repnz
icebp
loop
ds
in
stos
out
jge
add
and
jmp
ret
fisubr
and
pop
inc
cmp
test
cmp
sbb
(bad)
scas
cs
or
cwde
shl
icebp
mov
arpl
adc
xor
jne
int3
daa
(bad)
mov
ja
mov
jno
(bad)
rol
sub
mov
pop
mov
mov
mov
sbb
mov
clc
push
dec
dec
(bad)
shr
cmp
out
lods
loop
sub
imul
popa
shr
pushf
addr16
int
ins
in
push
hlt
lods
es
mov
or
push
sbb
and
push
lock
jne
fbstp
cmp
sub
and
mov
xchg
jmp
sub
ins
shr
imul
add
jae
mov
in
(bad)
scas
add
lock
cld
dec
frstor
outs
ds
retf
call
inc
jb
bnd
jb
xchg
mov
fcomip
lds
mov
xchg
xchg
and
ja
lods
mov
xor
(bad)
sub
add
fs
dec
and
aam
pop
pop
ret
mov
repnz
mov
push
dec
lea
mov
call
inc
add
cmps
xor
out
stc
add
push
aam
xchg
out
lock
sar
and
bound
fimul
scas
cmp
movs
xchg
xchg
fs
mov
gs
pusha
or
adc
push
sbb
mov
pusha
inc
out
pop
fsubr
pushf
popa
push
(bad)
sbb
outs
std
enter
dec
ficomp
dec
nop
xor
test
fld
and
clc
mov
mov
(bad)
adc
xchg
or
test
add
retf
jnp
jbe
xlat
inc
add
pusha
dec
(bad)
out
iret
sahf
out
pop
jbe
mov
and
div
dec
daa
xlat
cmp
sbb
and
pop
fwait
adc
cmp
rcr
jmp
sahf
xchg
dec
xor
test
sub
js
call
adc
(bad)
xchg
aad
dec
dec
adc
push
(bad)
scas
cmp
retf
sub
push
sbb
jb
jne
cmp
jmp
pop
pop
fisttp
add
and
push
jmp
dec
dec
clc
and
push
mov
cmp
inc
dec
cmps
dec
addr16
add
cmp
jo
push
fs
stc
mov
js
mov
dec
mov
xchg
sub
adc
push
pop
dec
ins
pop
xor
pop
shr
inc
adc
js
test
fld
repz
ja
in
mov
daa
jmp
dec
pop
dec
je
pop
repz
cdq
mov
fcomp
dec
push
lea
cwde
imul
aam
cmp
movs
shl
push
or
leave
mov
popa
(bad)
sti
xor
mov
sub
scas
retf
lods
or
shr
lds
cmp
loopne
pop
and
or
inc
mov
mov
push
xor
sbb
xchg
inc
sahf
jns
jmp
mov
movs
repz
shl
sti
cs
and
dec
outs
mov
add
adc
sbb
sub
mov
inc
cli
scas
pop
mov
inc
lds
mov
mov
push
mov
sbb
scas
jl
stos
or
cmovbe
push
pusha
pop
js
mov
jmp
call
dec
clc
xchg
fwait
inc
stos
pop
mov
in
arpl
cmps
inc
mov
shl
test
mov
cs
mov
add
mov
mulps
js
popf
mov
fs
cmc
xor
xchg
pop
mov
hlt
mov
and
sti
fisubr
sbb
inc
js
jl
not
bound
xchg
pop
outs
mov
rcr
pushf
in
aad
mov
inc
imul
pop
sub
mov
retf
jae
ret
movs
and
mov
repz
(bad)
fcomp
dec
in
lds
repz
pop
jecxz
cmp
cmp
ins
aaa
fisubr
ror
push
test
rcl
shl
add
mov
pop
std
xlat
ins
test
xor
das
jne
lods
das
inc
add
imul
inc
rol
rcl
shl
scas
add
push
nop
xor
push
cmps
or
call
sar
popa
(bad)
pushf
jae
and
and
and
out
(bad)
loopne
dec
shl
imul
inc
in
retf
clc
lods
in
mov
sbb
addr16
dec
addr16
das
and
sbb
(bad)
sub
cmp
es
ins
cmp
lahf
fcom
dec
pop
sar
je
add
jp
sub
push
aaa
sbb
sbb
and
test
rol
and
add
test
sbb
xor
xchg
jno
adc
call
mov
jg
sub
pop
jne
push
ret
cdq
inc
cld
pop
dec
call
imul
fdiv
push
mov
sbb
xlat
pop
jl
cwde
dec
or
jecxz
ficomp
dec
leave
in
adc
mov
add
and
fwait
pop
in
cmps
adc
push
pushf
ficomp
in
fist
aam
scas
jge
into
sbb
cdq
mov
jmp
jle
dec
dec
out
adc
mov
sub
cmc
ret
in
jmp
arpl
in
(bad)
sar
test
pop
popf
or
adc
ret
(bad)
test
mov
adc
and
icebp
and
pop
outs
pop
inc
cli
or
shl
push
sub
clc
push
clc
dec
stc
das
xor
popa
mov
js
enter
jl
js
inc
add
fistp
rcl
adc
xchg
mov
cmps
test
jg
push
jge
scas
and
pop
jno
in
fstp
xchg
xchg
push
sbb
clc
adc
cmp
add
into
in
mov
repnz
pop
cdq
mov
cs
aam
das
dec
int3
sub
xor
adc
daa
or
fistp
cld
mov
jmp
lods
xor
xchg
mov
lds
jno
fs
fsub
imul
ret
jne
pop
dec
leave
in
popf
pop
dec
out
out
aam
jge
adc
xchg
and
mov
inc
retf
arpl
(bad)
sbb
mov
(bad)
std
std
retf
retf
cdq
scas
stos
(bad)
(bad)
pop
push
shl
daa
popf
adc
mov
push
dec
jp
mov
out
dec
inc
mov
mov
fild
push
mov
movs
cmps
inc
dec
daa
jns
fmul
sbb
and
cmp
sub
xor
jnp
(bad)
cmc
popf
in
js
les
pop
das
je
jg
test
fs
push
(bad)
inc
aam
mov
mov
ins
das
mov
push
(bad)
fs
xchg
arpl
scas
push
push
rol
sbb
div
retf
mov
nop
xchg
and
and
xchg
retf
cdq
aam
xor
std
int3
scas
cmp
mov
(bad)
retf
or
jb
xor
shl
cwde
xor
cmc
inc
int3
into
sub
dec
je
xchg
daa
and
les
add
nop
popa
push
jnp
xchg
jbe
dec
push
inc
adc
sar
xchg
and
stc
hlt
mov
mov
fwait
push
jmp
inc
jp
(bad)
fdivr
jmp
ret
je
jnp
rol
fdiv
nop
pusha
mov
call
mov
pop
call
mov
sub
push
std
pusha
pop
fimul
push
out
add
push
fs
fs
jns
call
or
ins
pop
(bad)
ret
xor
add
call
pcmpgtw
dec
sub
sbb
and
xor
cdq
pop
mov
fdivr
dec
jp
jmp
movs
add
(bad)
push
xchg
or
inc
fld
ins
retf
push
jb
adc
in
adc
mov
fild
pop
and
xchg
jae
cmc
mov
stos
(bad)
push
aad
sbb
into
fs
or
lods
lock
sub
ins
aad
pop
xor
inc
push
inc
sbb
dec
adc
sahf
add
push
dec
stos
fisttp
lods
cmp
cld
or
adc
sbb
cmp
sbb
popa
imul
jnp
mov
add
cdq
cli
ins
fcomp
cmp
xchg
hlt
add
jne
sub
jl
cmp
xlat
sbb
or
jle
jno
imul
fisttp
inc
mul
ins
mul
cmp
mov
add
fstp
adc
or
inc
inc
test
jp
cmps
jmp
out
(bad)
clc
xchg
pop
push
nop
jns
mov
sub
mov
and
xor
push
mov
adc
cwde
sub
ret
jp
adc
cmp
mov
jmp
dec
or
loop
mov
push
add
pop
aaa
test
ins
lahf
cli
xlat
sbb
xchg
movs
cmps
in
xchg
sbb
aad
shrd
mov
mov
mov
xor
and
xchg
loope
movs
dec
adc
cmp
and
push
(bad)
jmp
push
adc
or
mov
dec
pop
sbb
aas
sub
ins
xchg
(bad)
jmp
mov
dec
mov
fisubr
and
push
jl
mov
cmp
sbb
xor
ins
scas
jae
(bad)
iret
dec
scas
fstp
aaa
inc
and
dec
mov
push
mov
mov
sub
retf
ret
int
test
(bad)
jecxz
jne
(bad)
sub
push
pusha
frstor
stos
jnp
push
xor
mov
mov
out
jmp
jo
mov
jno
push
mov
push
into
mov
rcr
push
(bad)
mov
dec
(bad)
inc
adc
out
inc
in
ficom
mov
mov
push
outs
inc
es
inc
aam
mov
lahf
xor
sub
mov
stos
mov
stos
iret
add
push
or
pusha
push
add
int3
xchg
aaa
(bad)
test
imul
icebp
xchg
add
mov
call
cmps
and
xlat
inc
xchg
sbb
popw
add
pop
mov
shl
imul
std
add
mov
mov
test
pop
addr16
rcr
in
lods
xchg
std
lds
imul
aaa
xchg
cmp
cmp
dec
dec
ja
jmp
(bad)
mov
push
adc
or
xor
enter
or
mov
gs
repz
dec
les
rol
(bad)
loope
add
mov
jg
xchg
clc
cwde
inc
movs
cmp
jl
popf
pop
mov
repnz
cmp
imul
mov
mov
sbb
cli
xchg
xchg
test
push
pop
mov
(bad)
jp
mov
dec
cmp
cmp
mov
cdq
retf
call
lock
pop
pop
sub
sub
lahf
xchg
cmc
jp
mov
aas
ss
test
inc
adc
pop
dec
jp
and
or
adc
mov
pop
aaa
mov
jo
mov
push
inc
call
pop
pop
hlt
and
out
fld1
rcr
cmp
dec
ficom
fidivr
pop
imul
(bad)
clc
cmp
cmp
mov
pop
adc
sub
xor
fwait
int
mov
dec
mov
test
mov
sbb
test
or
mov
lea
cwde
add
out
jns
lock
call
jle
jns
cmp
and
les
lahf
mov
lods
push
es
scas
les
pop
mov
mov
jns
push
and
pop
out
(bad)
es
jnp
cmps
and
pop
push
stos
sbb
ja
into
and
das
adc
mov
inc
xor
rcr
pop
dec
daa
mov
xchg
pop
mov
cwde
xor
and
jne
jge
sahf
ss
inc
mov
imul
or
sbb
mov
push
adc
dec
push
(bad)
ins
pop
jle
push
iret
push
xor
mov
rcr
add
sahf
dec
pop
jge
pop
cmps
mov
fwait
daa
je
out
xor
and
mov
sub
scas
icebp
add
xchg
(bad)
mul
icebp
mov
jecxz
mov
mov
fst
rol
mov
fs
xchg
mov
adc
lods
push
aas
mov
(bad)
dec
lods
ja
mov
repnz
or
into
call
jno
fistp
mov
dec
xchg
push
adc
mov
mov
mov
jo
stos
add
add
and
fistp
outs
in
pop
cmps
inc
adc
jb
out
lock
hlt
les
jmp
xchg
cmp
mov
in
push
imul
dec
and
mov
mov
cmp
(bad)
cmp
or
sbb
mov
pushf
enter
pop
push
imul
stos
mov
jbe
fistp
inc
scas
mov
ins
out
sub
in
mov
mov
in
and
jbe
push
add
stos
mov
les
fistp
shl
lods
cmp
out
arpl
int
push
iret
pop
(bad)
dec
push
stc
cli
pop
pop
inc
fimul
add
jne
adc
(bad)
xchg
inc
jbe
lahf
div
mov
mov
gs
jmp
mov
movs
call
mov
mov
mov
adc
mov
aas
push
pop
dec
xor
mov
(bad)
pop
sub
jmp
jp
in
iret
jns
fld
hlt
jecxz
push
adc
mov
popf
adc
push
sar
rcl
mov
dec
daa
push
or
adc
push
loopne
mov
adc
mov
cwde
outs
repz
lods
cmc
sbb
ja
or
jo
mov
jmp
mov
test
xlat
loop
test
and
or
lods
jp
pusha
leave
daa
lock
call
outs
cmc
mov
out
cmp
jb
out
pop
push
bnd
mov
jo
mov
push
push
cmp
and
stos
cdq
stos
out
iret
mov
outs
mov
or
out
dec
xor
xor
mov
pop
scas
xchg
xor
push
stos
into
out
mov
push
mov
adc
pop
fucom
loope
mov
cmc
pop
out
push
xchg
jmp
jmp
jmp
jne
mov
shr
and
mov
loopne
jge
int
js
out
mov
mov
stc
xchg
jb
fucomip
sbb
pushf
lock
inc
lahf
cmp
jg
icebp
mov
dec
xchg
and
enter
dec
out
hlt
aad
jg
pop
inc
xchg
ror
sub
mov
retf
dec
dec
ror
and
jp
xchg
(bad)
sbb
mov
add
mov
push
sahf
test
push
nop
fisttp
(bad)
data16
arpl
adc
les
pop
into
mov
jle
push
jle
jbe
mov
ja
mov
cmp
fs
out
and
adc
push
mov
daa
shr
mov
push
push
pop
pop
push
(bad)
lods
sub
mov
xchg
cli
fist
loop
push
adc
add
push
xor
adc
xchg
xchg
add
push
mov
sub
xchg
inc
add
mov
in
in
and
iret
add
or
add
xchg
pop
dec
jbe
pop
ucomiss
out
dec
xchg
mov
pop
sbb
das
push
sub
push
or
popa
fdivr
sub
lahf
or
add
sub
clc
in
mov
mov
mov
lods
aam
xor
aaa
pop
dec
dec
mov
mov
loopne
inc
xor
nop
int
lods
lods
xlat
ret
shl
(bad)
lds
rol
and
mov
inc
xlat
mov
and
jg
cmp
shl
sbb
jmp
pop
adc
out
out
xor
mov
retf
jecxz
add
sbb
imul
jmp
ins
js
pop
push
jge
shr
mov
popa
fcom
popa
inc
inc
cmp
mov
sub
fsub
sub
jo
or
out
cs
and
ss
fldcw
pop
mov
inc
add
pop
pop
xchg
in
jb
clc
es
mov
cld
adc
imul
test
cmp
or
jge
push
pop
dec
xchg
cmp
push
mov
and
imul
and
idiv
popf
rcr
jnp
addr16
xor
or
jae
leave
mov
cmp
jp
ret
ret
push
dec
sbb
stos
mov
pop
and
and
mov
mov
cmovs
(bad)
into
nop
push
popa
mov
or
popa
pop
fist
mov
mov
cmc
cmp
push
cmp
int
fcomi
movs
scas
dec
sbb
pop
xor
fwait
scas
stos
ret
int3
pop
outs
sbb
jae
fwait
stc
jmp
into
xor
fnstcw
xchg
cmc
inc
xchg
cmp
pop
adc
or
jns
out
shl
ss
jne
test
xor
in
rcr
cmp
push
iret
popa
pop
inc
pop
mov
or
test
pop
bound
or
mov
test
mov
pop
(bad)
das
enter
jmp
cli
add
test
scas
in
in
idiv
mov
sub
mov
nop
push
and
jbe
sbb
dec
jae
das
or
ror
xor
cmps
mov
into
(bad)
(bad)
sar
loope
in
stos
test
mov
aaa
ds
cmc
adc
lahf
xchg
in
pop
imul
mov
fs
push
xor
dec
rol
xchg
fs
inc
dec
and
jbe
mov
jae
aaa
push
dec
fxtract
data16
sti
mov
loopne
mov
lods
div
jbe
imul
rcl
cld
cdq
js
pop
fs
sti
jno
xchg
jmp
jnp
inc
adc
cli
fldl2t
and
mov
out
xchg
pushf
enter
pop
repz
jg
jae
aas
or
sub
stos
sbb
inc
cmc
push
xchg
popf
rcr
movs
loopne
mov
popf
call
pop
gs
sbb
fs
aaa
out
in
shl
rep
mov
cmp
enter
cwde
div
xchg
lods
jl
shr
gs
clc
lea
pop
xor
(bad)
test
and
push
dec
fdiv
push
fs
retf
xchg
mov
dec
or
popa
add
or
jbe
mov
(bad)
mov
mul
sar
sbb
repnz
adc
xchg
push
mov
sti
(bad)
mov
mov
jae
scas
mov
cmp
loopne
lahf
jns
test
mov
inc
push
sbb
cli
xchg
xor
cmc
sbb
inc
mov
push
mov
pop
xchg
fcmovu
test
push
jae
dec
fdivr
ins
mov
jl
imul
and
loope
aaa
jecxz
add
repz
inc
or
jl
enter
mov
pushf
dec
fdiv
cmp
add
or
cmps
scas
inc
push
int
fdivr
cmp
ficomp
jne
clc
gs
sub
and
test
xchg
adc
mov
pop
cmps
lea
out
mov
mov
cdq
retf
popf
pop
xchg
aad
xchg
in
xor
dec
mov
cmp
cmp
pop
cmp
fadd
fcom
(bad)
push
call
arpl
jne
int3
sub
mov
movs
adc
std
test
(bad)
jecxz
mov
pop
and
sbb
cmps
(bad)
hlt
inc
adc
stos
(bad)
and
test
popa
push
push
push
mov
add
jns
mov
push
jp
fwait
sub
inc
dec
pop
das
out
push
cmp
pop
rcl
jmp
or
jp
cmp
and
dec
fild
call
mov
fisub
inc
iret
add
sub
xchg
xchg
pusha
ja
shld
(bad)
rcl
mov
dec
mov
es
cdq
inc
adc
lods
pop
cmp
or
push
inc
push
xchg
sub
ret
dec
sub
test
mov
mov
es
pop
jp
scas
(bad)
mov
retf
mov
mov
fs
mov
push
rol
pop
and
push
aad
lods
xchg
rol
js
push
xor
and
push
iret
adc
(bad)
cmp
mov
cmp
cmps
sti
mov
mov
fld
pushf
bnd
sar
mov
dec
(bad)
and
fsubr
neg
sbb
jb
mov
test
jecxz
mov
mov
mov
cmp
stos
not
push
das
stos
adc
ins
leave
sahf
ins
arpl
fld
add
fcom
mov
mov
mov
out
into
xlat
mov
loope
push
aad
push
arpl
mov
xchg
inc
ret
xor
jmp
inc
add
or
mov
sbb
lods
mov
mov
mov
pop
mov
dec
sub
dec
aad
push
cmp
fwait
sub
std
xor
scas
push
scas
sbb
jmp
jp
retf
ficomp
ss
scas
or
arpl
fsubr
into
hlt
mov
outs
and
inc
ja
and
outs
ds
retf
and
sahf
sbb
(bad)
jb
and
retf
gs
pop
inc
dec
xlat
pushf
popf
das
mov
out
repnz
mov
ins
daa
fdiv
leave
dec
dec
bound
mov
push
imul
sub
out
sub
test
cwde
jmp
cmp
call
mov
out
or
mov
jns
cmp
cmp
dec
mov
aaa
push
dec
cmp
lahf
adc
mov
mov
aad
cmp
iret
ss
rol
gs
sar
xchg
mov
xchg
cmp
dec
int
lds
pop
(bad)
or
jg
fwait
cmp
mov
mov
(bad)
sbb
data16
dec
jne
in
enter
jae
ins
dec
enter
mov
enter
cmp
aam
mov
out
into
sub
test
es
shr
mov
lock
xor
or
aam
mov
dec
push
sar
add
js
fnstsw
mov
sar
xor
ja
pop
shl
jbe
cmp
sbb
mov
rol
xchg
rcr
adc
add
inc
push
in
mov
ror
jl
or
mov
mov
lods
adc
mov
fs
pop
(bad)
push
inc
(bad)
mov
pop
scas
rcr
ficom
or
lea
das
rol
inc
js
mov
push
gs
push
cli
or
push
sbb
enter
or
icebp
sbb
popa
xor
shl
xchg
in
and
sub
adc
leave
xchg
push
push
dec
int3
and
inc
scas
sbb
std
inc
and
mov
pop
inc
mov
test
lds
aad
iret
fistp
mov
(bad)
push
dec
pusha
cwde
lods
not
jo
sub
popa
sbb
loopne
gs
in
jo
out
mov
dec
push
arpl
fidiv
cli
sahf
ret
mov
add
ins
sbb
and
(bad)
std
scas
rol
jp
sbb
mov
cmp
div
jns
(bad)
int
mov
sub
push
sbb
add
cmps
fdiv
lods
push
sub
xor
mov
cwde
sub
xchg
cli
mov
aaa
pushf
mov
and
add
mov
loopne
iret
fsubr
and
lds
and
push
pop
mov
sar
push
sub
xor
jl
push
es
sbb
lods
pop
adc
outs
lahf
jmp
pushf
jb
mov
xor
out
repnz
pmuludq
sub
jmp
mov
or
dec
dec
shl
ja
loope
or
xor
test
cmp
lock
mov
mov
popa
int3
mov
mov
in
xchg
pop
lea
xor
loope
sar
in
icebp
mov
imul
add
and
bound
jnp
mov
or
fild
dec
push
aad
jge
(bad)
clc
lock
fs
xchg
bound
fidivr
pop
lock
retf
(bad)
xor
push
inc
pusha
pop
(bad)
pushf
fs
pop
inc
xor
xor
lds
adc
xchg
cwde
mov
mov
bound
stos
add
retfw
push
aam
jne
popf
movs
call
out
hlt
jle
cmps
push
loope
and
retf
cmc
mov
vpsrlq
mov
scas
mov
clc
shl
sub
test
and
adc
xchg
je
aad
mov
(bad)
fcmovnbe
mov
sbb
dec
ins
gs
test
xor
push
js
cdq
jge
mov
fmulp
jg
sbb
mov
mov
aam
mov
clc
jle
test
add
pop
jae
cld
cmp
mov
push
out
mov
dec
push
lock
push
movs
cmc
sti
mov
arpl
cmps
and
push
or
fiadd
loopne
push
pushf
cld
push
loop
sbb
pop
push
(bad)
dec
sbb
adc
add
std
jmp
gs
mov
or
or
add
scas
jns
mov
push
bound
and
aam
mov
and
ds
xchg
pop
xor
pop
ins
mov
nop
sbb
std
jae
push
pusha
stc
stos
mov
xor
sbb
sar
push
xchg
cmp
std
lock
loope
xor
xor
leave
dec
(bad)
sub
cmp
outs
ins
cmp
pop
out
jnp
(bad)
fadd
ret
mov
mov
and
(bad)
rcl
or
imul
adc
push
mov
std
and
(bad)
aam
pop
mov
das
or
pop
push
retf
cmps
mov
push
jp
imul
scas
adc
dec
pusha
ror
aaa
loop
xchg
les
popf
rcr
pop
add
test
and
mov
out
clc
fmul
pop
push
cld
cs
add
ret
inc
icebp
or
repnz
iret
cmc
jp
cmp
lock
retf
mov
xchg
cli
lods
das
stos
mov
xchg
push
sbb
sbb
xor
sub
push
jge
fstp
je
fisub
adc
push
xlat
fnstsw
pop
mov
lock
mov
inc
mov
arpl
mov
sbb
dec
adc
or
loop
test
sub
and
into
mov
xchg
cmp
and
jnp
loope
pop
sub
mov
or
adc
or
xor
imul
sub
mov
xchg
sub
xchg
push
xchg
sub
jl
jnp
sub
mov
sbb
pop
mov
xchg
sbb
aad
push
jmp
scas
push
loopne
hlt
(bad)
(bad)
repnz
icebp
add
sub
lds
fs
popf
js
push
jp
arpl
lock
xchg
dec
call
push
je
add
(bad)
in
xchg
xchg
mov
out
push
and
inc
(bad)
movs
mov
mov
mov
popf
sub
repnz
scas
leave
shl
aaa
jns
sub
lea
aam
int3
(bad)
test
mov
pushf
cli
adc
mov
fs
les
mov
sar
and
dec
les
(bad)
mov
dec
dec
adc
pop
xor
ins
daa
in
xlat
mov
add
jle
repz
daa
mov
ds
icebp
sar
jbe
bound
or
mov
cld
sbb
jmp
or
pop
cmp
ror
in
xor
stc
js
cmps
add
add
(bad)
aad
fbstp
dec
jge
sub
or
es
xor
mov
hlt
scas
push
fdiv
sub
xchg
retf
xchg
inc
or
mov
retf
hlt
and
je
or
mov
retf
jecxz
daa
mov
xor
push
adc
cmps
imul
sbb
out
cld
loop
xchg
ins
das
sub
and
fcmovnbe
in
enter
cmp
retf
push
mov
mov
(bad)
mov
bound
or
mov
into
stos
cmp
xchg
cmp
in
or
clc
push
mov
stc
push
xor
push
dec
icebp
enter
daa
xor
mov
in
xchg
mov
mov
test
adc
jbe
ficomp
and
retf
pop
sub
outs
inc
ss
aam
int
pop
nop
mov
ret
mov
pop
mov
mov
sub
fstp
hlt
clc
mov
sti
scas
cmps
aaa
hlt
xor
xchg
in
stc
(bad)
std
iret
aam
call
aad
es
xchg
push
aaa
test
sub
sub
inc
cld
aad
adc
js
mov
or
sbb
push
lods
pop
mov
sbb
push
jbe
mov
(bad)
dec
stos
cmc
push
ret
xchg
cmp
fisub
in
sbb
mov
mov
mov
jno
or
xor
or
ret
adc
repz
xor
mov
inc
out
imul
mov
enter
xchg
dec
bound
sbb
sub
or
aas
sbb
xor
cmps
mov
xor
idiv
mov
jmp
pop
sar
in
mov
in
mov
ins
xor
pop
or
xor
fadd
out
lods
mov
rol
addr16
cmp
dec
mov
(bad)
loopne
push
in
sbb
jp
ror
cmp
mov
test
pop
sbb
into
push
lods
mov
dec
sahf
cwde
jge
xchg
js
jb
cmps
mov
cli
mov
push
int
sbb
pop
or
out
mov
mov
pop
dec
pop
fld
mov
sub
cmps
dec
aam
movs
int
jl
dec
out
jae
cmp
adc
push
nop
pop
pop
outs
lods
(bad)
out
aad
outs
es
xor
call
retf
mov
jns
mov
fidivr
movs
mov
cld
stos
loop
ds
mov
shr
not
cmps
lahf
cmp
call
scas
inc
dec
sbb
add
xlat
adc
call
add
pop
sub
into
cmp
adc
leave
outs
idiv
cmps
adc
loope
ds
mov
(bad)
lock
fsubr
jb
gs
div
pop
sti
gs
ss
stos
cmp
inc
jl
dec
pop
cmp
ins
sbb
add
xchg
sub
jo
ds
in
fnstsw
aaa
xchg
fst
adc
jmp
cdq
sbb
add
sbb
sub
(bad)
jnp
mov
icebp
adc
mov
mov
test
push
aam
retf
jge
xchg
push
or
in
jo
clc
mov
out
js
mov
mov
fcomp
xchg
push
xor
out
mov
or
outs
adc
push
cmps
adc
xchg
jne
(bad)
cmp
pop
cmps
xchg
aam
xchg
repnz
pop
mov
(bad)
jbe
pop
and
std
or
(bad)
sub
push
fstp
mov
jl
sti
sbb
lea
int
sub
adc
movs
push
add
mov
fidivr
leave
cmp
cmp
ins
jle
cmp
lods
sbb
lods
loop
xor
xchg
(bad)
mov
push
lods
push
or
fldenv
pushf
loop
mov
mov
jmp
aaa
mov
dec
xor
sub
pop
pop
mov
jecxz
es
inc
mov
(bad)
jge
cmp
nop
addr16
inc
jne
gs
xchg
ins
popf
cdq
or
mov
mul
jmp
mov
or
cmps
movs
cmp
inc
sub
movs
add
and
int
jl
dec
ret
ja
bswap
sbb
push
(bad)
pop
dec
mov
add
xlat
inc
mov
into
out
out
mov
xchg
lods
push
(bad)
popf
mov
sub
shl
push
repz
inc
fs
mov
pop
fnstcw
je
sub
push
and
aam
fbstp
sar
pop
in
stos
dec
pop
sbb
cmps
mov
adc
cmp
out
jns
xchg
adc
mov
std
gs
add
mov
sbb
push
cld
jp
loop
pop
(bad)
ins
and
pop
and
out
xchg
sub
mov
test
outs
popf
(bad)
clc
or
mov
mov
pop
push
push
inc
sti
enter
daa
test
test
out
fbstp
leave
xchg
pavgw
fimul
mov
pop
out
sbb
jmp
push
mov
pop
lock
stos
hlt
in
cmps
leave
call
push
and
aad
xchg
and
fst
cmp
sub
icebp
and
add
xor
push
sti
jl
push
dec
mov
adc
mov
push
(bad)
jo
mov
sub
in
cmp
int
ret
mov
adc
mov
daa
and
inc
mov
xor
cli
aam
pushf
sti
push
test
cmps
ja
rcr
mov
inc
mov
shr
add
in
addr16
call
out
jno
or
scas
sbb
or
sub
mov
pop
addr16
in
push
add
movs
sbb
add
or
nop
cmp
sbb
inc
shl
fwait
cmp
pop
xchg
pop
push
sub
les
in
cdq
pop
jmp
ins
and
bound
push
mov
push
rcr
jmp
into
dec
mov
mov
xor
or
nop
out
xlat
sbb
jns
jo
lea
nop
retf
test
aam
push
xor
xor
aaa
and
add
ror
xchg
push
or
popf
je
dec
div
push
(bad)
mov
cmps
sbb
sub
es
push
mov
inc
cmps
xor
mov
cmp
shl
add
adc
aas
push
xchg
mov
cld
jp
pop
sbb
or
fcomp
xor
sbb
push
fisttp
pusha
inc
pop
cwde
inc
push
in
les
adc
int
xor
or
xchg
inc
mov
cmp
push
sub
or
mov
call
push
ins
mov
iret
sbb
sub
cmp
js
lods
mov
push
or
push
out
jecxz
adc
in
int3
movs
aaa
(bad)
js
dec
mov
mov
neg
sub
retf
popa
xchg
adc
ret
inc
mov
inc
xchg
sbb
jmp
retf
fnstsw
std
fdiv
test
add
sbb
mov
in
mov
pop
test
rol
jnp
cli
dec
push
sub
int3
cld
xor
pop
add
pop
jne
fwait
jne
rcr
retf
loop
inc
mov
pop
imul
cmp
cs
push
push
(bad)
dec
xchg
loop
leave
mov
lods
hlt
out
xchg
(bad)
xor
jo
pop
ins
sbb
adc
(bad)
arpl
xchg
mov
loopne
jg
loopne
aad
inc
stos
or
inc
dec
add
clc
imul
das
inc
inc
stc
scas
mov
gs
cmc
or
or
mov
push
pop
lahf
inc
(bad)
ficomp
call
push
inc
sub
xchg
aas
cmp
imul
xchg
sub
pushf
jl
fprem
std
jbe
fcmove
das
les
jmp
movs
sub
jmp
sbb
shl
fst
xchg
mov
aam
inc
sub
mov
lahf
push
dec
jne
push
mov
jo
xor
add
rcl
cdq
inc
sbb
mov
cwde
or
retf
aaa
dec
or
sti
dec
adc
jmp
mov
pminsw
add
out
pop
lods
das
push
test
fwait
jg
clc
dec
popf
add
jno
out
out
adc
mov
mov
lea
or
pop
xchg
sub
dec
push
sti
xor
movs
jge
imul
cmp
fisttp
cmc
and
stos
aad
jno
cli
das
cmps
mov
(bad)
mov
fwait
fwait
cli
mov
outs
inc
add
mov
fisttp
dec
inc
push
sbb
imul
dec
jmp
ss
jmp
or
inc
fcomp
in
jge
push
sbb
push
push
ja
dec
enter
mov
or
js
in
add
outs
add
ins
mov
retf
icebp
inc
cmps
pop
loopne
push
(bad)
jnp
mov
or
movs
mov
mov
xchg
push
mov
sar
mov
repz
inc
inc
in
js
inc
push
cmps
out
retf
paddw
(bad)
jbe
in
cmps
add
jmp
into
adc
sub
xchg
imul
jnp
ss
dec
jnp
clc
out
test
fst
jmp
mov
mov
push
pop
push
jne
movs
xor
sbb
std
in
adc
mov
outs
dec
push
dec
jp
stos
pop
mov
stc
jecxz
idiv
addr16
mov
lahf
and
pop
outs
lea
(bad)
into
push
cmp
or
inc
ds
lea
push
fmul
mov
test
stc
xor
cmp
call
popf
or
std
adc
xchg
popf
adc
inc
and
out
mov
xor
fdiv
push
sub
push
into
pop
dec
clc
xchg
dec
jbe
cmp
je
daa
mov
stos
cmp
fdiv
add
sub
push
or
inc
jns
mov
cli
xor
les
pop
xchg
inc
inc
into
inc
dec
cmp
(bad)
dec
mov
retf
mov
es
out
xchg
pop
in
aad
lds
pop
pop
push
jo
or
jmp
dec
ins
cld
dec
enter
and
push
push
or
jecxz
int3
xor
cmp
cmp
ret
push
bound
ja
rol
fbld
inc
std
jl
pop
add
push
dec
nop
inc
retf
stc
cld
mov
popa
je
lods
add
sbb
fwait
ds
or
xchg
in
xchg
mov
popa
jns
or
fwait
sub
call
sahf
mov
dec
enter
pop
test
aam
ffree
xchg
inc
jl
loopne
and
int3
sbb
jecxz
test
xchg
mov
mov
sbb
lock
add
jae
add
mov
cli
pop
inc
movs
sub
and
test
sub
xor
test
sub
scas
mov
in
pop
ficomp
dec
jecxz
ds
test
sbb
es
repnz
stc
movs
mov
call
jne
call
into
add
cdq
scas
outs
xor
push
aas
add
mul
and
mov
loope
cmps
and
cmp
sahf
and
xchg
cmp
adc
fild
mov
sub
mov
pop
inc
bound
scas
cwde
cli
ror
lea
jge
cmp
jmp
dec
aas
cmp
mov
mov
test
popa
jecxz
and
add
add
and
cmp
mov
xor
dec
ror
xlat
int
(bad)
and
jmp
sti
cmp
test
lds
sub
adc
pop
mov
sub
sbb
mov
fs
push
inc
(bad)
pop
jnp
pop
pop
sbb
adc
ret
in
lods
jnp
push
mov
sbb
push
xchg
jns
adc
jae
jno
and
cwde
sub
jle
stos
dec
pop
cmc
and
lods
sub
jae
int
push
xchg
popf
cld
inc
outs
in
les
out
shl
push
imul
adc
mov
cmp
jb
dec
ds
mov
dec
repz
mov
xor
(bad)
mov
dec
retf
les
std
leave
cmp
cmp
popf
jecxz
adc
mov
xchg
cmps
pop
mov
cld
icebp
inc
int3
cmp
ja
lea
ja
mov
xor
movs
fsubr
stc
fdiv
(bad)
call
mov
xchg
or
dec
jmp
ror
inc
push
jp
outs
int
lods
cmp
pop
test
adc
mov
push
push
pop
out
sbb
das
cmp
(bad)
nop
xchg
stc
dec
repnz
xor
int
push
scas
mov
rol
ja
std
add
add
cmp
imul
pop
sub
lds
stos
inc
and
into
cmps
ror
push
add
aad
retf
retf
gs
loope
cs
mov
inc
mov
mov
push
cmc
inc
jae
inc
xor
je
mov
repnz
inc
ret
test
add
aas
sbb
inc
and
shl
cmp
mul
fnstsw
mov
dec
pop
stc
dec
(bad)
jb
sub
pusha
outs
lea
jno
pop
cmp
jae
sub
xor
inc
inc
imul
xor
dec
std
mov
data16
int3
addr16
cmc
rol
pop
sub
xor
or
ficom
mov
xchg
mov
adc
mov
mov
lock
stos
(bad)
fcom
jno
cmc
test
repz
push
mov
cwde
sti
xor
push
popf
sub
cs
mov
sbb
loop
ds
fdiv
movs
iret
xor
xchg
cmp
or
sbb
mov
call
aaa
repz
adc
pop
loopne
xor
aas
sub
mov
push
dec
push
mov
test
mov
add
and
or
je
clc
mov
cmps
add
ja
rcr
and
adc
aam
adc
xor
rcl
or
ret
lods
xor
adc
jbe
push
retf
sbb
jb
mov
pop
jns
dec
out
lahf
test
mov
mov
mov
and
jae
je
adc
inc
pop
je
test
(bad)
push
and
adc
popf
xor
mov
push
jmp
xchg
jmp
es
icebp
loopne
lea
aad
jp
mov
call
dec
lahf
mov
aaa
pop
adc
shl
in
pop
dec
xchg
movs
stos
inc
outs
cld
add
jne
dec
mov
bound
add
mov
(bad)
and
and
sbb
je
stc
or
imul
ds
clc
fst
sti
sub
sub
outs
add
mov
imul
fidiv
sub
mov
pop
mov
or
iret
pop
mov
sub
adc
jp
aam
(bad)
out
out
sub
les
sbb
aam
js
xchg
(bad)
fadd
leave
xor
mov
retf
in
push
cmps
jge
jg
repz
and
test
ins
sti
adc
inc
jp
outs
addr16
cs
or
pop
mov
adc
aas
or
push
mov
sbb
inc
pop
retf
imul
mov
lock
mov
mov
(bad)
and
add
imul
mov
inc
call
out
pop
test
lock
idiv
shl
sbb
mov
cs
cmp
inc
or
idiv
sub
xchg
pop
mov
sbb
lods
adc
sub
xlat
push
mov
inc
shl
or
dec
sub
test
(bad)
not
retf
cmp
(bad)
aad
sbb
jl
in
aaa
pop
pop
outs
cwde
sbb
popa
mov
out
add
call
sub
fiadd
loopne
push
fidiv
das
enter
shufps
dec
(bad)
push
loop
xor
(bad)
bound
mov
inc
nop
dec
test
pop
imul
push
popf
xor
mov
std
rcr
mov
lods
add
dec
test
ror
cmp
push
xchg
std
mov
mov
cmps
movs
jns
mov
sbb
sub
mov
add
gs
cs
scas
call
les
sub
fiadd
and
pop
rcr
dec
imul
or
mov
repnz
fnsave
loop
dec
mov
pop
jns
popa
jno
retf
and
popa
test
jb
adc
shl
cmp
into
add
inc
scas
movs
sbb
inc
sub
and
(bad)
sbb
icebp
add
test
add
inc
jge
pop
sahf
inc
(bad)
sub
jp
add
jle
sub
sub
pop
jmp
cmp
aas
les
lds
pop
add
stos
xor
call
outs
test
add
xlat
cdq
mov
xor
xchg
xchg
fdiv
mov
test
loop
stos
(bad)
jmp
cmps
inc
mov
and
retf
cmp
or
aad
or
lods
(bad)
(bad)
push
add
mov
or
jmp
int3
dec
push
ss
aaa
cmc
stos
jns
aam
xchg
xchg
xchg
inc
pop
mov
leave
arpl
sbb
sahf
ss
pop
or
popf
mov
int3
fcom
add
push
out
iret
xchg
sbb
shl
pop
pop
jb
outs
sti
jmp
jb
ret
cdq
mov
jmp
ins
lea
cmp
sub
retf
inc
sbb
mov
and
and
pop
fst
push
ja
jno
add
fisttp
fst
sti
cmp
pop
loope
mov
push
retf
aaa
sub
cmp
pop
inc
push
add
fisub
fwait
shl
(bad)
movs
inc
leave
sbb
pop
cmp
or
ja
aad
adc
lds
lods
jne
test
adc
cmps
inc
mov
rcr
xchg
retf
(bad)
pushf
loope
dec
sub
enter
sahf
push
sti
mov
and
fsubr
mov
pop
and
mov
jecxz
jg
rcr
jle
cmp
and
or
push
popf
xchg
popf
into
fmul
mov
cmp
ds
aad
add
pop
shr
mov
add
popf
movs
scas
stos
scas
adc
sar
sub
loopne
ja
out
loop
movs
inc
and
push
inc
hlt
jmp
sub
(bad)
aas
ja
sbb
cmp
pop
clc
out
cli
sbb
fnstenv
retf
(bad)
xchg
adc
mov
adc
ins
xchg
push
push
and
pop
jmp
push
fucom
xor
sbb
mov
or
mov
mov
inc
add
sbb
add
mov
add
jecxz
inc
fisubr
stc
test
int3
mov
mov
out
inc
add
ins
mov
(bad)
bound
xchg
add
aad
test
into
(bad)
mov
push
fsub
cmc
lods
push
shl
stos
ja
cmps
xor
jecxz
fs
mov
repnz
pusha
or
stos
stos
jbe
pushf
jp
and
mov
sar
and
js
pusha
sti
add
je
pop
add
lock
xor
leave
in
ud0
addr16
push
cmp
aaa
(bad)
(bad)
jbe
push
scas
cld
sbb
icebp
hlt
fist
mov
outs
icebp
push
outs
stos
pusha
mov
cmp
mov
outs
fist
(bad)
pusha
cmp
aam
out
inc
outs
rol
iret
les
push
xor
in
or
cmp
pop
adc
lea
call
iret
jbe
inc
jns
dec
dec
pop
mov
mov
std
data16
in
mov
jno
dec
dec
sub
mov
jge
push
js
lods
ins
ret
xchg
int
mov
add
mov
push
push
sar
xchg
adc
jb
xchg
sbb
call
push
pop
sbb
add
dec
sbb
mov
fwait
(bad)
test
leave
cwde
lods
popf
jb
arpl
nop
jmp
xchg
shl
scas
mov
adc
push
push
cmc
pop
lods
arpl
loope
push
sub
lahf
xor
es
xor
ja
mov
addr16
aaa
jmp
sbb
pop
cdq
(bad)
pop
lea
xchg
mov
fld
and
and
data16
sub
add
not
mov
or
or
js
imul
addr16
scas
enter
inc
inc
jmp
inc
inc
jne
cmp
and
push
pop
enter
cmps
dec
jne
mov
mov
daa
je
xchg
add
lea
es
adc
add
idiv
popa
ds
pop
add
stc
mov
dec
inc
or
mov
fnstenv
ja
test
adc
xor
(bad)
out
sub
or
add
and
repz
push
jnp
dec
mov
out
gs
ret
retf
loopne
adc
or
xchg
pop
ins
mov
data16
fwait
hlt
sub
mov
jp
hlt
inc
push
mov
sbb
test
xlat
mov
fs
cmp
mov
xchg
cmp
stos
mov
ds
sbb
adc
cli
push
jl
in
xor
or
mov
stos
movs
aam
xchg
xor
jns
(bad)
mov
pop
call
gs
cmp
in
xchg
aam
retf
ffree
jae
jb
adc
out
mov
xchg
shr
xchg
clc
pusha
fld
pop
adc
push
sbb
push
sbb
daa
pop
sub
jmp
jbe
or
imul
mov
pusha
adc
in
cld
push
xor
bound
pop
test
inc
aaa
jl
cmp
sub
iret
cmp
arpl
in
and
in
mov
out
jge
and
jb
(bad)
xor
push
out
bnd
dec
clc
(bad)
out
lock
loopne
mov
sub
dec
imul
xor
or
call
out
cmp
popa
jmp
retf
jns
sbb
in
sub
call
(bad)
jg
cli
ret
clc
jle
loope
mov
xchg
mov
fnstsw
mov
cld
mov
es
xchg
cmp
sbb
fwait
aam
imul
aas
into
test
int3
movsx
jmp
nop
test
out
sub
jb
icebp
sub
mov
mov
es
and
mov
sub
adc
xchg
in
adc
cmps
stos
add
inc
sbb
nop
pop
pop
xlat
clc
xchg
jnp
loope
push
cli
jmp
xor
jae
adc
in
lock
xor
adc
sbb
sbb
cvtdq2ps
fist
pop
pop
sbb
shl
inc
test
ins
dec
in
push
adc
movs
outs
lods
cli
jl
loope
addr16
sahf
and
sub
inc
inc
lahf
outs
cdq
push
lds
pop
or
cmps
(bad)
in
jmp
mov
stc
cmp
sti
lock
adc
loop
scas
sub
outs
cld
push
pop
jle
cdq
out
pop
jle
movs
push
xchg
mov
scas
adc
jmp
xor
js
jo
repz
mov
out
add
inc
jb
pop
sbb
push
or
xor
or
pusha
dec
adc
add
jbe
adc
enter
js
mov
mov
(bad)
pop
rcr
or
xor
mov
add
dec
push
gs
test
mov
ds
sbb
jo
pop
pop
xor
push
sub
inc
(bad)
stc
cmps
not
cmps
mov
aad
jae
in
and
shl
aad
pusha
jp
je
push
inc
jb
das
ret
push
fidivr
call
daa
mov
xor
xchg
shr
leave
lahf
xor
mov
push
mov
mov
test
adc
mov
iret
xchg
pusha
es
dec
or
rcr
jmp
sbb
mov
test
mov
movs
test
adc
push
sahf
test
lock
pop
rcl
push
mov
dec
scas
jl
test
inc
in
stc
je
mov
in
mov
in
or
xlat
xor
out
icebp
jmp
push
sub
cli
inc
adc
push
and
mov
cmp
dec
mov
fisub
xor
or
das
lea
retf
sub
cmc
fs
iret
cmp
inc
int3
xor
adc
and
sbb
inc
jo
xor
and
sub
dec
mov
retf
ror
sbb
xchg
hlt
mov
data16
je
xor
cmp
jae
movs
cwde
dec
inc
addr16
ret
adc
hlt
sub
es
dec
pop
xchg
repz
scas
in
lds
pop
xor
loop
cmp
inc
jle
mov
mov
into
push
aas
jb
fcom
push
lock
xor
mov
mov
xchg
fdiv
call
cmp
mov
inc
sbb
jle
pop
and
dec
mov
loop
pop
jne
adc
push
mov
retf
retf
xor
inc
sahf
test
dec
cmp
popa
aam
jmp
hlt
jb
jo
xlat
fcom
cld
or
jmp
dec
jmp
jo
aad
sbb
in
(bad)
add
test
jp
mov
cmps
jle
sub
shl
test
fidivr
xchg
sti
mov
mov
(bad)
aaa
fsubp
push
cmp
jl
aaa
sub
sbb
sub
jmp
adc
in
adc
or
daa
sbb
cmps
ficom
inc
daa
movs
sub
in
int
(bad)
cmp
test
dec
not
and
push
push
dec
xor
add
mov
outs
lods
push
movs
jl
mov
jmp
out
xor
add
xchg
lods
ror
pusha
jmp
es
sub
xchg
mov
jnp
add
stos
call
ds
add
iret
inc
dec
sbb
dec
xlat
add
aas
ins
icebp
jnp
jecxz
je
loopne
xor
mov
ja
jle
pop
sahf
test
or
pop
cs
cmp
aam
jle
mov
mov
pop
cli
dec
mov
xchg
jecxz
pop
add
xchg
leave
or
rcr
(bad)
enter
xchg
add
jns
jmp
and
movs
loope
mov
dec
cmc
and
adc
add
push
sbb
cmp
xor
std
pop
pop
fcmovne
add
mov
adc
leave
cmp
xchg
or
inc
fild
cli
xchg
cmc
mov
ja
ins
xchg
sub
jns
xchg
xor
xlat
xor
mov
ins
stos
pushf
xlat
mov
push
mov
jmp
test
rol
movs
loop
cmp
push
sub
mov
adc
or
push
inc
push
mov
(bad)
pop
dec
adc
repz
xor
mov
aad
stc
inc
lods
jae
xchg
rol
mov
idiv
xor
(bad)
addr16
cmc
jge
pop
lock
sbb
mov
lahf
pop
leave
add
jae
push
sbb
or
mov
sbb
xchg
test
inc
scas
sar
icebp
jecxz
icebp
ret
data16
mov
bound
adc
icebp
add
xchg
mov
dec
adc
stos
xor
xor
lahf
(bad)
mov
imul
ja
adc
inc
(bad)
jecxz
ins
jmp
jae
ja
and
push
fidiv
inc
cdq
adc
loope
fiadd
mov
sar
or
sar
adc
push
dec
(bad)
and
jnp
xor
pushf
fldcw
das
jmp
push
or
das
lea
push
add
sbb
iret
mov
mov
mov
mov
xor
js
push
or
xlat
icebp
add
cmp
in
pop
(bad)
int3
mov
in
(bad)
test
dec
pop
les
mov
or
dec
ror
pop
mov
ror
shl
xor
mov
faddp
aaa
aas
popf
push
retf
xchg
xor
not
sbb
pop
clc
fadd
xor
cli
ins
pop
jg
retf
adc
stos
jp
push
xchg
arpl
in
dec
and
and
mov
int3
sbb
sub
mov
sub
dec
idiv
inc
inc
sbb
inc
mov
int3
stc
push
fnstenv
jmp
int3
xchg
inc
icebp
dec
jle
mov
aad
cmc
or
out
mov
fbstp
stos
and
push
outs
leave
mov
mov
mov
xchg
mov
stos
cmps
push
sbb
mov
test
test
xor
dec
xchg
in
cmps
mov
or
mov
imul
pop
fs
(bad)
ret
cmp
mov
(bad)
out
fwait
mov
xchg
jmp
jle
pusha
popa
inc
ins
add
jecxz
(bad)
sti
dec
loopne
mov
jb
dec
mov
cmp
scas
shr
sbb
(bad)
in
lods
and
rol
and
inc
in
shl
push
stos
scas
jmp
aam
adc
cmp
push
(bad)
and
cmc
stc
cwde
inc
jo
jmp
push
jno
repz
test
and
in
inc
dec
stos
repz
jp
ficomp
pop
(bad)
and
rcr
xchg
lock
inc
and
(bad)
xchg
aaa
xor
mov
mov
push
or
pop
xor
mov
bound
pop
sub
test
xor
in
and
inc
xor
jno
lods
add
mov
push
es
scas
aad
push
mov
jb
pop
mov
xor
dec
dec
out
xor
jno
sbb
mov
gs
stos
js
adc
test
xchg
dec
or
or
xor
pop
scas
ja
lea
scas
sbb
jnp
call
neg
jae
jae
add
dec
sub
add
and
and
sbb
lahf
(bad)
push
mov
push
pop
and
jmp
ficomp
cmp
sub
sub
icebp
adc
adc
sub
adc
test
xor
ror
movs
sub
mov
add
(bad)
repnz
adc
addr16
fs
jmp
cdq
call
fadd
dec
inc
loopne
mov
sbb
and
dec
mov
pop
scas
pop
mov
mov
mov
cmp
ins
add
enter
xor
inc
cmp
(bad)
cs
pop
xchg
jmp
das
shl
adc
xchg
xchg
sbb
cmp
stos
push
adc
adc
cmps
shl
pusha
mov
inc
popf
pop
popf
retf
mov
xchg
jae
jp
push
(bad)
outs
inc
xchg
mov
push
hlt
ror
jno
jge
fs
dec
leave
adc
xor
iret
jnp
mov
iret
rcr
cmp
(bad)
fist
(bad)
mov
aas
adc
mov
inc
mov
cs
call
fdivr
jae
sbb
rcl
lods
shl
dec
xchg
sbb
cmp
shr
inc
ins
div
(bad)
sub
scas
dec
ror
(bad)
xchg
pop
or
adc
scas
(bad)
(bad)
call
or
cmc
xchg
jge
jl
dec
push
inc
fwait
ret
loop
imul
adc
lahf
fcomi
rcr
sar
fistp
stos
jne
std
outs
icebp
dec
dec
lds
(bad)
and
jnp
add
gs
jbe
xchg
xor
pop
cs
mov
mov
push
mov
es
scas
aad
and
xchg
sbb
sub
mov
aaa
lods
and
xor
js
jbe
inc
mov
or
mov
pop
adc
xchg
inc
and
cmp
aas
jge
dec
mov
push
aas
and
(bad)
popf
adc
push
(bad)
add
hlt
ins
dec
push
sub
mov
dec
and
arpl
adc
or
aam
(bad)
das
nop
test
inc
stos
jbe
and
push
lods
stos
(bad)
push
mov
les
test
jo
sub
add
outs
test
and
mov
ja
sub
shl
mov
rol
cli
test
ja
lea
stos
add
dec
sub
into
dec
inc
and
mov
imul
dec
xor
adc
jae
jecxz
add
jmp
data16
and
xchg
xchg
add
pop
and
in
and
out
ret
inc
mov
mov
cmp
add
jb
pop
push
mov
mov
jmp
inc
aas
pop
mov
adc
sub
mov
(bad)
std
mov
dec
jns
mov
mov
pop
cmps
cmc
pop
repz
ficomp
js
(bad)
bound
xor
dec
xchg
mov
mul
(bad)
mov
imul
cmp
test
in
push
or
and
ja
push
fbstp
mov
icebp
adc
retf
jge
dec
and
mov
xchg
inc
inc
cmp
or
and
xchg
push
xlat
loope
mov
call
cmp
adc
fld
jae
(bad)
cmps
ins
fild
xchg
in
(bad)
jg
out
xchg
add
and
cmp
mov
retf
add
cld
mov
cmp
mov
scas
dec
mov
popf
push
mov
fadd
ror
movs
jl
gs
int
mov
loope
pop
xor
daa
xchg
jne
jne
add
inc
sub
or
(bad)
push
or
inc
cmps
sar
cmp
imul
mov
xchg
mov
pop
inc
cmp
sahf
loope
int3
xor
jbe
mov
aad
test
or
sub
pop
(bad)
push
sbb
or
mov
ins
jge
pop
dec
jns
fwait
call
or
mov
jnp
das
jb
sub
jle
jbe
clc
pop
jl
sti
sub
sub
int
lock
xlat
mov
jge
out
mov
cmc
(bad)
mov
out
ret
or
retf
jb
xchg
test
xchg
xor
jbe
dec
aam
xchg
mov
clc
push
xchg
pop
mov
xchg
out
sub
jbe
test
aaa
jl
icebp
dec
xor
jg
and
pop
dec
(bad)
fsub
sbb
pop
arpl
je
or
sbb
lods
xchg
test
mov
mov
in
sub
add
mov
push
xchg
cli
pop
iret
sar
and
psrlw
ins
movs
jmp
sbb
jecxz
scas
dec
mov
dec
xlat
(bad)
shl
xchg
mov
mov
inc
push
rcl
sub
inc
push
cmps
and
data16
sbb
inc
outs
cwde
pop
xor
fdiv
xor
or
mov
sbb
or
lds
outs
lahf
aam
addr16
sbb
dec
cmps
ret
fcmovnbe
fcomp
(bad)
jp
mov
mov
das
push
imul
pop
mov
je
fisubr
daa
mov
mov
mov
loope
lahf
(bad)
sbb
push
in
mov
pop
in
cmp
aas
cmc
pop
push
ror
and
push
jb
imul
jne
enter
fwait
mov
cs
shl
and
sbb
(bad)
sar
mov
pop
push
add
push
dec
jnp
and
pop
in
mov
jmp
(bad)
mov
stc
push
jae
dec
xor
xchg
mov
jnp
sub
mov
xor
jo
rep
retf
es
jge
les
xor
in
ss
jo
and
dec
or
icebp
ins
xchg
aaa
jno
mov
xlat
adc
enter
aad
mov
out
add
jmp
ins
addr16
mov
shl
es
cmp
mov
test
loopne
xchg
sbb
ret
mov
pusha
mov
aam
movs
mov
mov
mov
ins
xor
xor
std
or
iret
pop
das
mov
jb
xchg
cmp
das
adc
test
sar
daa
pop
fucompp
test
sub
pop
inc
xchg
push
cwde
dec
mov
adc
repnz
hlt
ins
inc
ins
aas
jae
mov
adc
into
aad
and
mov
push
cmp
call
inc
adc
add
xor
sub
cmp
shr
loope
fstp
mov
xor
repz
iret
sub
inc
addr16
add
sahf
mov
push
(bad)
popa
std
rol
xor
fldcw
fiadd
add
ficom
or
xchg
movs
cmp
mov
jmp
and
sbb
cmp
dec
adc
and
stos
retf
jmp
lahf
cmc
xlat
dec
xor
jbe
in
dec
imul
push
adc
and
push
es
xchg
and
pop
xchg
sub
jno
cld
iret
pop
sbb
pop
movs
inc
jnp
movs
aad
mov
int3
rcl
retf
data16
fld
or
jmp
xchg
push
xchg
mov
cmp
ret
add
gs
add
pop
mov
xchg
inc
out
ret
sbb
mov
in
or
jg
dec
mov
or
push
cdq
hlt
mov
enter
dec
nop
dec
jp
xor
sahf
push
or
sbb
mov
imul
xchg
popf
sub
cmps
sub
inc
adc
fwait
and
jo
rcl
ret
xor
leave
and
idiv
retf
add
sti
fisub
sbb
movs
mov
div
xchg
jl
and
arpl
cmp
xchg
sub
aaa
inc
pandn
add
xor
out
mov
jo
xlat
jmp
imul
imul
loop
cmp
fisttp
sahf
test
xor
icebp
push
mov
dec
xchg
or
ret
push
xor
test
xchg
xchg
adc
and
dec
call
mov
sub
or
sub
cmp
mov
imul
add
or
sbb
jo
nop
movs
out
mov
sbb
push
ja
int3
arpl
fidiv
pop
dec
fdiv
(bad)
repnz
gs
mov
jg
(bad)
movs
js
or
jns
out
mov
or
jbe
cdq
jmp
loopne
rcr
push
sti
test
add
dec
loop
sbb
fnsave
shl
xor
mov
out
xchg
push
mov
dec
out
jp
icebp
pop
push
jb
ins
test
fucom
jge
mov
rcl
jle
inc
sub
sbb
mov
jno
popa
mov
data16
in
inc
sub
xor
push
push
clc
push
popf
mov
pop
es
outs
gs
cwde
fnstcw
into
jno
jno
pop
inc
ss
jge
pop
ds
xchg
sahf
sub
dec
call
hlt
mov
call
rep
adc
popf
dec
push
sbb
push
out
push
jnp
adc
int3
mov
aas
and
inc
aam
(bad)
repz
xchg
inc
jne
dec
pusha
mov
imul
(bad)
cmp
fcompp
out
fidiv
xchg
xchg
cmp
jb
pop
addr16
and
or
or
lock
shr
ss
ds
push
xchg
cmp
iret
ret
les
inc
nop
ds
daa
add
stc
jmp
xchg
push
stos
pop
hlt
es
ja
xchg
addr16
(bad)
and
jl
and
mov
test
sbb
xlat
cmp
stos
and
mov
test
call
addr16
in
mov
ins
clc
jg
aad
or
lock
in
mov
add
pop
popf
cwde
mov
das
add
mov
mov
mov
or
mov
jmp
mov
jnp
xchg
sbb
loopne
movs
popa
cld
pop
outs
xchg
scas
inc
lods
pop
movs
cmp
cmps
inc
and
ins
fsubr
adc
aad
and
test
jp
push
ror
out
retf
mov
push
mov
ja
sbb
pop
ds
stos
sbb
cli
pop
sti
mov
cmps
mov
in
inc
call
call
fild
outs
nop
stos
out
dec
ins
icebp
cli
adc
ret
dec
push
and
mov
cmp
or
cmc
mov
addr16
cdq
dec
mov
and
das
jmp
retf
push
mov
mov
mov
add
push
aad
push
into
pop
push
jnp
shl
aaa
adc
popa
mov
sub
or
and
jo
pop
inc
jmp
clc
lea
sub
push
dec
push
iret
nop
dec
stc
jno
pop
rcl
jnp
(bad)
retf
xchg
or
int
mov
cmp
add
and
pop
cmp
fprem
nop
mov
fdiv
leave
xchg
push
sub
jbe
or
inc
xor
lea
test
push
fisttp
sub
call
(bad)
sub
add
fistp
pop
mov
jg
mov
xchg
scas
addr16
adc
sbb
dec
or
mov
daa
push
es
dec
fadd
dec
rcl
mov
sub
int3
dec
and
out
mov
add
scas
icebp
sub
mov
nop
push
cmp
test
ins
sub
cs
or
pop
(bad)
test
ins
outs
aad
test
fsub
into
adc
les
popf
mov
mov
mov
mul
and
fldcw
adc
je
das
in
jmp
push
mov
push
ss
push
pushf
test
(bad)
mov
mov
lea
hlt
mov
test
lds
cmp
iret
dec
dec
mov
mov
stos
mov
enter
ds
cmps
mov
xlat
mov
push
push
dec
dec
sbb
outs
inc
iret
jne
and
cld
jp
lds
rcr
jle
aam
retf
sbb
mov
scas
mov
push
outs
sbb
lea
cmp
push
add
xchg
and
mov
fild
daa
or
and
push
jl
mov
add
inc
xchg
lods
mov
mov
scas
test
mov
xchg
xor
call
xchg
fldcw
jbe
aaa
xor
and
mov
mov
pop
fsub
leave
push
jmp
add
mov
call
ja
mov
stos
sbb
fnstenv
add
mov
call
push
rol
sti
xlat
push
rcr
xchg
jp
sub
popf
les
xor
jb
xchg
and
ss
xchg
mov
push
xor
pop
push
shr
push
icebp
jb
lods
sbb
xor
xchg
scas
test
push
or
jb
dec
pop
ins
mov
mov
cld
xchg
(bad)
fidiv
push
pop
test
add
ret
sbb
cmp
bound
shl
lods
(bad)
pop
lds
jno
add
sub
push
addr16
movs
pop
adc
xchg
xchg
inc
in
or
stos
mov
call
mov
or
sbb
mov
fwait
in
in
xchg
shl
cld
fdivr
out
call
daa
ret
mov
js
bound
fld1
(bad)
xchg
lods
call
mov
cmp
sbb
out
rol
push
inc
sbb
jbe
imul
pop
dec
adc
cli
inc
xchg
adc
jl
pop
ja
or
add
inc
xchg
cmp
or
mov
lahf
or
(bad)
sub
fmul
aaa
ins
fistp
retf
sub
xchg
in
test
in
sti
in
jb
xchg
pusha
jo
xchg
sub
sbb
mov
jae
pop
movups
pop
scas
shr
iret
pushf
hlt
in
(bad)
into
inc
je
mov
stos
pop
xor
lods
xchg
int
dec
inc
dec
xchg
dec
jle
mov
push
cmp
(bad)
mov
dec
fs
jp
fadd
psrlq
fnsave
je
mov
pop
push
adc
cmp
ror
and
test
cmp
cmps
mov
imul
pop
pop
or
les
(bad)
scas
mov
add
popf
scas
xchg
pop
in
bound
sub
hlt
dec
or
mov
or
push
pusha
sub
mov
pop
jmp
dec
xor
ins
out
adc
mov
test
jmp
jmp
mov
repnz
clc
inc
mov
adc
in
popf
outs
and
cmp
stos
xor
es
dec
jmp
dec
fimul
inc
in
inc
mov
cmps
ins
retf
sbb
aas
ins
sbb
or
out
mov
outs
mov
jle
ja
lock
mov
inc
je
(bad)
in
jnp
xor
retf
das
adc
mov
xor
push
test
xchg
adc
or
sub
pop
or
(bad)
std
es
shl
push
test
je
movs
aas
mov
or
hlt
adc
ins
sub
js
adc
dec
dec
xor
mov
sub
fs
(bad)
jmp
out
test
mov
mov
push
std
(bad)
out
(bad)
(bad)
mov
and
pop
push
scas
pop
sub
out
(bad)
xor
xor
or
mov
dec
sbb
ret
cmp
outs
pop
push
mov
push
out
jge
mov
icebp
popa
popa
test
add
sar
(bad)
dec
lods
gs
pop
retf
leave
neg
imul
inc
in
mov
push
sbb
xor
into
jle
or
push
or
jmp
les
adc
xor
in
jno
add
mov
sub
retf
cdq
pop
cdq
mov
aas
mov
mov
ins
push
mov
ret
push
imul
mov
xor
or
jae
push
into
ss
and
(bad)
mov
pop
sub
jmp
stc
(bad)
and
sbb
dec
xchg
pop
mov
aam
loopne
stos
sbb
mov
mov
lea
fnsave
sub
rcl
pop
pop
retf
jo
mov
sub
jae
out
pop
or
out
iret
mov
pop
out
aaa
fadd
dec
cmp
xchg
push
pop
cmp
fisubr
mov
jle
and
nop
xchg
out
ss
jmp
ror
and
jns
jae
fwait
popf
xor
repnz
xchg
mov
jg
cmp
xor
xor
cmp
jbe
cmc
mov
sysexit
cmp
out
imul
rcl
or
xchg
adc
cmp
cmps
jl
int3
bound
push
lods
cmp
jae
dec
out
(bad)
adc
jmp
(bad)
jmp
pop
test
jp
sbb
mov
test
xor
jae
test
mov
pop
ins
mov
call
jp
(bad)
popf
jbe
pop
fs
aad
int3
scas
aas
or
lea
xor
mov
dec
mov
in
lods
xor
push
xchg
push
loop
inc
jg
pop
leave
inc
xchg
rcr
lea
ins
pop
mov
pop
xor
cs
int3
int
or
jo
hlt
ror
sbb
mov
popf
xor
sub
fist
xchg
inc
adc
lock
add
cmc
mov
(bad)
pusha
jp
in
mov
test
ret
int
pop
cmp
or
out
std
pop
inc
push
cmp
mov
repz
out
cdq
sbb
and
scas
pop
les
sub
repz
sub
es
dec
out
add
sbb
outs
leave
sahf
or
jae
inc
dec
mov
or
or
out
or
push
(bad)
in
repz
jle
add
jo
mov
sub
push
push
mov
jg
pop
scas
and
lahf
or
pop
shl
pop
dec
push
test
or
and
mov
fs
fdiv
icebp
jns
imul
ins
push
lock
sbb
and
nop
or
stc
rcr
lods
pop
inc
or
xor
in
xor
xor
mov
sbb
adc
ret
add
ins
cli
cli
add
addr16
push
(bad)
test
jmp
push
jl
mov
jmp
xor
shl
shl
movs
icebp
sub
mov
in
icebp
fwait
jne
and
fwait
jg
dec
dec
out
ja
or
(bad)
cmp
and
adc
pop
or
dec
fisttp
scas
push
jmp
push
sar
add
jae
inc
popf
popa
or
cs
and
dec
sar
dec
add
add
and
data16
cdq
mov
sbb
add
add
sub
and
jg
xlat
add
inc
jno
jl
arpl
xchg
call
xchg
add
lods
xor
cmps
jmp
jp
ds
stc
and
jge
test
fmul
jmp
ds
ja
dec
or
push
sbb
and
and
pop
ret
lods
outs
sbb
sbb
in
or
lds
aad
js
ret
imul
(bad)
pop
dec
mov
add
jge
pop
adc
or
mov
stos
ja
mov
push
jae
push
ja
jle
into
add
in
xchg
jg
dec
inc
test
and
push
stc
inc
ds
push
gs
mov
xchg
cmp
hlt
test
dec
mov
xchg
xchg
ror
pop
mov
adc
add
popa
in
and
les
loop
mov
repnz
add
(bad)
or
in
adc
bound
push
cmp
stc
xor
pop
enter
sub
pop
xchg
xor
cld
mov
or
cmps
add
out
mov
mov
inc
cmp
fs
es
jo
std
jle
cwde
icebp
dec
cld
jmp
test
push
pop
push
nop
xor
jo
out
(bad)
xor
cmp
mov
(bad)
mov
mov
push
ret
in
out
and
xchg
and
sub
mov
xchg
add
int
or
mov
xor
in
in
mov
popa
cmp
fiadd
xchg
iret
or
ds
push
inc
int
adc
aad
btc
inc
scas
fmulp
mov
cmp
xor
sub
movs
add
shr
mov
adc
pop
xchg
and
push
or
adc
movs
push
push
inc
repnz
sub
cmp
cmp
xor
out
jecxz
out
mov
mov
stos
xchg
in
or
repz
mov
dec
daa
inc
(bad)
add
inc
shr
sar
dec
ins
pop
es
mov
jmp
lds
push
dec
sub
outs
test
pop
push
(bad)
in
cmp
and
out
sub
adc
inc
xchg
sbb
jmp
or
push
(bad)
pushf
in
loope
cmp
mov
inc
ja
jb
rcr
test
jge
inc
test
sub
cs
out
jecxz
stos
sbb
mov
loope
jae
sbb
leave
mov
test
inc
and
out
fcmovbe
mov
mov
ins
mov
xor
cmp
sbb
call
(bad)
test
fild
cmp
inc
fld
popa
cmp
mov
sbb
cmp
and
pop
(bad)
xor
pushf
sti
sub
mov
call
or
pop
in
jecxz
jl
push
xchg
sub
sti
or
add
xlat
xchg
xchg
aam
dec
jecxz
imul
add
sub
jp
imul
jmp
movs
xlat
jmp
pop
test
gs
jmp
aam
push
cmp
ficomp
out
popf
scas
push
shl
pop
icebp
cli
sbb
neg
mov
cmp
inc
in
lahf
push
jle
jle
mov
jg
dec
xchg
lods
rol
add
add
push
stc
inc
pop
xchg
das
inc
sbb
cmps
mov
aam
sub
jp
inc
movs
xchg
mov
out
mov
dec
adc
sub
pop
jo
jl
pop
stc
xchg
xor
sub
push
ja
mov
adc
mov
call
and
push
jne
mov
repnz
dec
lods
adc
ret
mov
pushf
mov
mov
pop
div
cwde
adc
mov
pop
lds
mov
fisub
and
and
adc
call
mov
out
inc
xor
mov
push
jl
sti
sbb
mov
jne
push
add
pushf
pusha
adc
ins
addr16
push
scas
lods
pop
pop
push
dec
(bad)
stc
call
pop
call
sbb
aas
jmp
mov
xchg
test
retf
mov
push
int3
xor
mov
or
(bad)
push
adc
dec
shr
in
inc
nop
loop
call
sbb
xlat
adc
and
sbb
test
shl
idiv
in
pop
push
(bad)
adc
outs
int3
cmp
push
mov
es
stc
daa
mov
mov
mov
mov
pop
mov
or
jmp
jge
sbb
loope
sbb
and
into
mov
(bad)
jns
dec
loop
sahf
adc
sub
test
jle
cmp
movs
popf
enter
shl
dec
sar
lock
das
int
push
mov
cwde
ret
jo
mov
mov
repnz
leave
push
addr16
or
inc
and
pop
or
push
adc
in
fbstp
mov
fsubrp
jmp
(bad)
es
cwde
iret
sahf
jb
add
outs
push
cwde
jmp
arpl
jecxz
mov
xor
inc
mov
ins
push
jp
enter
idiv
into
in
add
cmc
xchg
mov
mov
mov
mov
scas
jo
pop
mov
pop
sbb
lods
lea
into
xor
hlt
pop
adc
retf
cmp
repz
ficom
(bad)
imul
jbe
rcl
dec
and
test
and
adc
xor
cmc
fild
clc
sub
inc
jmp
ins
inc
push
push
sbb
out
mov
pop
pop
dec
sub
lods
pop
mov
pop
daa
out
mov
push
int3
ins
aad
pop
movs
push
or
sub
xchg
cmps
ds
fnstcw
cmp
ins
rcr
das
loope
mov
rol
xor
out
pop
xor
lock
test
mov
and
dec
fdiv
in
adc
and
or
add
enter
popa
xchg
xor
dec
or
pop
fmulp
fstp
lods
in
rcr
push
inc
mov
xchg
call
jo
and
sbb
fcmovne
inc
ficomp
ja
or
in
mov
fidivr
daa
es
ret
push
movs
outs
daa
pop
std
ret
sub
cwde
or
iret
ja
cdq
push
mov
push
push
ja
dec
mov
push
sti
mov
pushf
fcomp
jl
loop
stos
fcmovne
add
loope
dec
jg
je
mov
fidivr
retf
movs
aad
pop
sub
bnd
ror
dec
inc
cmp
pushf
(bad)
pop
sub
(bad)
lock
sub
add
jmp
jmp
dec
in
sub
iret
clc
dec
cmps
mov
mov
popa
neg
cmp
pop
mov
ins
lods
jb
xor
xlat
mov
pop
adc
xchg
rcr
inc
mov
call
cmc
xor
push
pop
out
outs
jg
fadd
dec
int3
sbb
ret
aaa
rol
and
push
or
stos
ins
sub
jb
pop
mov
dec
imul
test
shl
fisubr
stc
out
enter
(bad)
sbb
in
mov
and
test
push
xor
add
pop
sahf
enter
pop
bound
scas
mov
lds
ret
pop
mov
lahf
or
sub
imul
pushf
addr16
add
out
add
aam
gs
repz
ja
mov
and
xor
inc
jmp
mov
fldcw
adc
stc
and
inc
cwde
stc
int
pushf
in
add
aas
jne
pop
sub
fs
test
sbb
cmp
xchg
loopne
push
add
xchg
push
(bad)
push
js
or
in
gs
(bad)
push
das
pop
jmp
cmp
dec
and
test
sbb
xor
push
xchg
loopne
or
movs
daa
jbe
int3
sbb
test
jno
xor
dec
jo
rcr
(bad)
fdiv
loopne
not
inc
test
pop
pop
add
add
xchg
fstp
andnps
pop
jbe
pop
repnz
sub
idiv
push
outs
adc
xlat
mov
iret
pop
inc
jmp
(bad)
(bad)
fwait
lahf
adc
adc
out
mov
out
jp
cmp
xchg
or
xchg
fwait
or
dec
jb
stc
jl
pop
fcomp
inc
xchg
cmp
mov
mov
mov
pop
adc
ret
mov
(bad)
jbe
jecxz
jmp
(bad)
stos
sub
enter
fcom
jns
or
push
push
in
jge
mov
mov
jl
jb
pop
jge
out
test
mov
push
call
pop
shl
mov
out
in
sbb
mov
cmp
push
dec
adc
pop
jmp
push
test
push
ret
pop
jbe
movs
adc
stos
jecxz
pop
mov
out
or
in
(bad)
sub
xchg
dec
add
cmp
mov
mov
pop
sub
lahf
jae
xchg
cmps
ins
add
push
xchg
into
xor
pop
mov
cmp
add
icebp
fsubr
hlt
add
mov
sub
add
stos
push
rcr
sbb
popa
mov
loope
jnp
pop
dec
fs
jnp
(bad)
cmp
mov
dec
call
mov
fisttp
pop
dec
xlat
xchg
icebp
pop
out
inc
mov
inc
cmp
gs
and
in
repnz
mov
xor
inc
data16
push
push
(bad)
adc
cdq
jmp
call
mov
aam
mov
hlt
mov
js
mov
inc
mov
fptan
xlat
or
fadd
shr
rcr
mov
(bad)
adc
retw
xor
cwde
imul
jmp
sbb
jo
pushf
test
sub
fdivr
jge
aam
cmp
xchg
and
dec
or
addr16
dec
out
dec
icebp
xor
and
push
cs
das
cs
jno
and
lahf
jge
adc
pop
movs
mov
and
stos
ja
cmc
jno
mov
loop
repz
sbb
adc
dec
sbb
cmp
or
mov
push
xor
ins
out
ficom
sub
fisub
pop
test
int
lods
cmp
jne
test
cmp
sub
aaa
fwait
jp
inc
fadd
mov
loopne
inc
pop
sub
push
movs
(bad)
and
ins
popa
dec
mov
dec
fisubr
push
fcmovnu
test
jl
sbb
push
sub
pop
aas
pop
adc
sub
mul
cdq
stos
sub
xor
sahf
stos
outs
mov
push
inc
dec
and
add
retf
sub
sub
div
lods
inc
ss
mov
pop
push
out
pop
movs
pop
jecxz
adc
ins
jbe
test
dec
outs
sub
(bad)
or
mov
jne
mov
les
scas
jne
enter
sub
and
std
xor
fld
mov
push
shl
push
and
cmp
dec
dec
pop
add
fst
add
cs
pop
push
mov
call
jne
cmp
push
push
call
mov
cmp
mov
je
inc
inc
pop
and
inc
clc
scas
pop
test
mov
aam
sbb
out
(bad)
pop
imul
out
in
stc
test
adc
(bad)
cli
aaa
shl
xchg
test
sub
dec
lock
xlat
xchg
cli
pushf
and
imul
(bad)
clc
add
cmc
pop
pop
rcr
ror
adc
cmc
mov
inc
and
pop
cmc
cli
aaa
(bad)
stos
sub
xchg
test
inc
clc
jmp
jle
loop
mov
sub
cmps
cmp
xchg
iret
jle
fwait
jp
mov
test
mov
ja
arpl
add
inc
push
xchg
xchg
bound
out
jns
scas
xor
test
xor
jb
lahf
adc
imul
cmp
sbb
daa
loop
jo
sub
fnstsw
adc
mov
jns
div
ror
dec
js
(bad)
iret
(bad)
jp
add
and
das
neg
pop
mov
ficomp
(bad)
fstp
mov
in
jp
addr16
outs
cmp
lea
mov
mov
rcl
int
xchg
repnz
dec
push
movs
cwde
das
iret
adc
fdivr
mov
pop
inc
push
loopne
push
(bad)
les
test
cwde
cmp
push
jl
fisttp
(bad)
xor
hlt
retf
movs
push
xchg
sbb
fwait
pop
add
xor
leave
outs
mov
(bad)
or
scas
lahf
mov
es
jmp
outs
mov
mov
inc
or
js
les
into
or
popf
xor
inc
call
pop
or
es
adc
push
mov
and
or
les
rcr
aad
out
sub
pop
mov
loop
mov
test
or
arpl
dec
push
(bad)
xchg
adc
push
jg
fst
inc
rol
sbb
jnp
xchg
mov
into
mov
test
dec
mov
mov
dec
mov
jmp
mov
stos
std
fcom
push
cmp
mov
popa
push
inc
push
jecxz
inc
mov
jno
cmp
push
shr
jmp
sub
and
mov
push
jnp
sbb
pop
cmp
fadd
mov
mov
das
mov
pop
pop
xchg
mov
in
mov
inc
iret
xchg
out
out
add
fnstenv
icebp
xchg
ss
fld
mov
cmp
mov
and
shr
inc
cmc
cmp
mov
mov
cmc
push
mov
mov
enter
pushf
push
ja
and
xor
daa
or
or
std
mov
push
and
jl
adc
loopne
cmp
dec
mov
aam
in
pop
ror
xchg
jnp
movs
(bad)
fisub
arpl
sbb
in
push
lods
xor
inc
push
mov
cmps
popa
dec
and
pop
stos
sub
add
or
int
shr
pop
fst
xor
test
xchg
arpl
inc
stos
lea
xchg
repz
push
pop
das
mov
jnp
in
sub
pop
add
mov
add
jns
movs
push
pushf
js
cdq
leave
mov
dec
imul
rcr
mov
mov
sbb
push
or
xchg
mov
(bad)
jne
push
dec
dec
jl
or
(bad)
int3
cmc
dec
pop
add
xchg
mov
je
mov
jle
movs
adc
ficom
pop
cwde
shl
stos
xchg
or
xchg
stos
pushw
mov
or
inc
cmc
jo
shl
stos
js
mov
jl
test
dec
mov
aaa
or
mov
jle
nop
and
xchg
into
cmp
movhps
and
in
push
cmp
mov
jl
out
and
mov
mov
test
jno
fdiv
push
mov
maskmovq
neg
and
stos
inc
mov
lock
cmp
cmp
push
cmp
and
into
sub
jge
mov
jne
or
cmp
icebp
int3
pusha
(bad)
jns
into
mov
jae
push
cmp
mov
inc
std
sub
jmp
out
push
int3
pushf
xchg
push
mov
inc
jp
pushf
cmps
ret
test
enter
dec
cmps
(bad)
jnp
es
inc
jae
cmp
sub
retf
pop
mov
out
gs
and
cwde
pop
inc
dec
int3
cmps
add
jmp
dec
and
xlat
std
test
test
cmp
int3
xchg
add
vhaddpd
inc
loop
enter
inc
ins
ds
(bad)
int
jle
push
div
aad
retf
jns
and
fwait
jae
or
push
lock
add
pushf
das
xor
nop
test
iret
popa
jnp
les
popf
pop
or
sbb
int3
mov
int3
fimul
xchg
dec
add
adc
xchg
adc
pop
sbb
(bad)
int
and
mov
adc
loopne
bound
pop
(bad)
enter
dec
pop
lods
sbb
inc
xor
push
inc
adc
xor
dec
in
cmps
add
cli
jb
es
scas
push
xor
jl
add
mov
je
cmp
xor
mov
push
fisttp
mov
int
push
inc
or
cwde
ja
js
jmp
sbb
int
sub
push
js
fstp
sbb
repz
icebp
or
inc
sub
rcr
fidiv
bound
(bad)
in
shl
retf
push
mov
hlt
in
push
push
mov
adc
out
add
dec
mov
repnz
dec
mov
cmp
inc
push
inc
sbb
mov
test
xchg
sub
fidiv
add
jle
cmp
mov
add
push
es
mov
sbb
in
pusha
add
std
loopne
imul
arpl
lds
(bad)
pop
gs
arpl
push
popf
hlt
cli
mov
lock
mov
push
cdq
mov
bound
(bad)
(bad)
loope
mov
and
inc
pop
imul
cmps
xchg
push
xchg
cmp
imul
sahf
dec
je
rol
mov
mov
cmp
jle
ins
cdq
daa
ins
gs
adc
mov
and
ins
cmps
aam
adc
dec
in
retf
jecxz
or
dec
idiv
loop
mov
sub
jecxz
jle
repnz
jno
cmp
jne
or
mov
and
ins
and
cwde
cmp
cs
imul
push
inc
cmp
fcomi
repnz
out
fs
popf
sbb
mov
jnp
(bad)
stc
push
lfs
mov
sbb
cmp
ja
dec
mov
addr16
mov
jb
ins
dec
call
aas
pop
dec
(bad)
icebp
mov
mov
jns
jp
in
pop
mov
into
fld
dec
pushf
and
jmp
and
xchg
in
adc
mov
add
addr16
push
aaa
sbb
dec
(bad)
aaa
ret
jae
in
jo
mov
mov
sub
and
(bad)
push
sbb
lods
retf
fst
outs
js
(bad)
pop
outs
pop
xor
inc
stos
add
inc
addr16
fmul
jbe
jbe
sahf
mov
(bad)
mov
cmovle
stc
loop
or
add
es
cld
out
mov
mov
jne
(bad)
push
test
jp
dec
xor
jne
movs
mul
jecxz
xchg
fnstcw
jmp
xchg
clc
ss
nop
dec
push
arpl
push
push
jne
loopne
fwait
jp
in
sbb
mov
pop
sahf
inc
cmp
push
push
les
jb
and
mov
mov
jno
stc
(bad)
jp
or
out
loop
mov
inc
sub
pop
mov
add
lods
fwait
xchg
test
(bad)
retf
dec
adc
repnz
add
test
cld
add
ds
dec
cwde
push
add
dec
fwait
jge
jge
fdivr
scas
test
mov
xor
fisubr
sub
adc
or
xchg
mov
jmp
hlt
pop
jmp
jle
cvtdq2ps
cwde
int
pop
adc
test
stos
sahf
loopne
(bad)
call
push
mov
push
sub
mul
mov
dec
les
fs
test
add
push
rcl
jmp
sub
(bad)
scas
jnp
push
sub
mov
pusha
jbe
pop
sbb
leave
idiv
mov
jg
xchg
inc
movs
gs
inc
shl
ss
dec
retf
pop
inc
push
fcom
jnp
or
scas
mov
mov
jne
ja
xchg
mov
call
lods
(bad)
out
push
inc
push
sub
mov
sahf
push
pop
sub
test
loop
ins
xchg
jg
mov
loopne
xor
cmps
sbb
cmp
repnz
(bad)
out
call
out
scas
sub
xlat
scas
lahf
ins
mov
mov
fwait
pop
mov
sar
adc
mov
rcr
jle
sub
push
mov
ret
push
mov
mov
mov
cmp
(bad)
fidivr
xor
fwait
jmp
icebp
in
jle
xchg
xor
mov
jp
les
addr16
add
xor
aam
fwait
aad
cmp
out
lahf
pop
mov
ret
nop
movs
(bad)
out
or
mov
xchg
or
sub
rol
jmp
dec
jne
hlt
pop
out
sbb
add
gs
cmp
jmp
fisttp
mov
and
test
dec
or
mov
ss
fist
xor
sbb
fcom
popa
iret
rcr
pop
movs
add
test
dec
xor
inc
fmul
dec
bound
jb
repnz
pusha
fidivr
ret
inc
movs
adc
inc
out
nop
outs
mov
(bad)
imul
or
add
xor
stos
fadd
sub
or
push
icebp
sar
stos
pusha
jns
push
dec
or
and
out
jp
mul
stos
mul
repnz
fdiv
xor
xlat
and
jns
gs
xchg
enter
sub
lahf
pop
mov
inc
mov
jp
push
cmps
mov
popa
adc
mov
ret
push
pushf
lods
mov
adc
enter
movs
sub
jecxz
mov
fidiv
mov
jle
mov
push
retf
adc
arpl
mov
sub
cs
aas
pusha
sbb
push
pop
iret
arpl
mul
mov
pop
retf
mov
sub
push
inc
xchg
pop
sub
ins
out
fimul
xchg
loop
test
das
pop
jmp
or
sub
mov
clc
and
je
rcl
cmp
enter
mov
jae
push
test
add
fdiv
call
leave
in
mov
or
in
inc
or
push
daa
mov
push
fist
and
fwait
retf
or
mov
cs
imul
inc
inc
outs
bound
cli
cdq
mov
xor
ins
scas
jb
shl
push
stos
mov
push
inc
fdivr
pop
mov
or
pop
ret
loopne
sub
lods
loopne
push
sub
das
retf
sbb
xchg
outs
sti
cs
mov
xchg
int
bound
cmp
jbe
push
xor
push
fidiv
iret
pusha
dec
and
mov
sti
mov
xlat
loop
and
(bad)
mov
(bad)
leave
jmp
mov
sbb
(bad)
int3
mov
jo
loop
sbb
pop
sbb
push
xor
mov
xchg
cmp
mov
ror
xor
cmp
stos
iret
xchg
pop
dec
ds
aaa
jno
lods
xchg
inc
mov
add
mov
or
add
daa
addr16
adc
pushf
jns
and
sub
sbb
dec
ins
xchg
xchg
inc
sub
arpl
jp
pop
retf
outs
xchg
jg
add
add
stos
daa
inc
fisub
iret
sub
dec
pusha
adc
mov
cmp
mov
sbb
adc
push
loopne
cmp
xchg
cmp
fwait
push
leave
sahf
inc
out
mov
lds
nop
jl
add
movs
fwait
cld
add
mov
in
sti
(bad)
in
jnp
outs
and
cld
(bad)
bound
mov
scas
add
pop
pop
mov
jle
and
xor
sub
sub
pop
int3
cld
cli
add
(bad)
push
out
sub
push
imul
daa
mov
ret
jp
xor
inc
idiv
popf
loope
leave
add
dec
sbb
jae
push
add
movs
sbb
pop
push
stc
add
call
ror
outs
and
mov
fidivr
inc
pop
push
pushf
and
fild
xchg
sub
lea
sub
push
cld
sub
and
daa
jmp
idiv
or
mov
mov
xchg
int3
xor
int3
into
jbe
mov
jecxz
stos
fadd
shl
pop
ss
lahf
xchg
or
mov
mov
les
cmp
es
test
and
push
std
pusha
push
loop
sbb
leave
inc
push
adc
aaa
retf
xchg
test
cmp
je
fwait
push
jmp
bound
jno
stc
out
mov
cli
mov
sahf
inc
icebp
mov
push
ins
jbe
cdq
pop
mov
add
sbb
cdq
jno
cmp
cmp
enter
(bad)
adc
cli
aas
mov
mov
mov
test
pop
jmp
clc
or
test
xor
outs
cs
das
pop
ret
rcl
(bad)
sub
jmp
mov
inc
mov
sbb
outs
(bad)
dec
imul
in
adc
mov
sbb
inc
pop
dec
mov
pop
ins
xor
xor
(bad)
sub
add
push
(bad)
mov
pop
out
xchg
add
mov
adc
dec
jmp
push
std
mov
mov
fwait
popa
imul
adc
shl
adc
fdiv
push
cmp
repz
mov
push
popa
lds
mov
pop
inc
icebp
jnp
sbb
push
cwde
inc
pop
or
pop
cmps
invd
ret
fwait
jmp
je
xor
dec
mov
cmps
shr
xor
lock
data16
cmc
push
std
mov
aad
mov
jmp
cmp
push
gs
cdq
sti
fs
int3
les
mov
sbb
sbb
das
mov
pop
add
nop
jnp
sahf
idiv
xor
pop
and
jno
cmp
push
imul
stos
sub
and
xor
mov
xlat
adc
lahf
hlt
xchg
mov
cmp
shl
sbb
fwait
adc
and
add
adc
adc
sbb
les
lods
jbe
dec
dec
aam
sbb
inc
push
and
scas
ds
repnz
and
xlat
xchg
(bad)
mov
in
es
ret
sub
add
test
mov
cld
pop
mov
sub
mov
movs
ficom
mov
imul
std
sbb
dec
jecxz
ins
out
or
mov
push
mov
fist
(bad)
test
adc
mov
xchg
mov
xchg
pop
popa
add
rcl
in
(bad)
adc
jbe
mov
aas
mov
loope
loope
mov
adc
mov
cwde
cmp
inc
mov
push
std
jmp
xchg
lea
jecxz
or
pushf
cmp
mov
inc
out
aad
test
clc
mov
rcl
inc
mov
iret
sbb
xor
cwde
xchg
push
sub
add
xor
stos
jmp
popa
sub
sbb
xchg
adc
mov
xchg
sub
sbb
(bad)
ss
gs
pop
int
test
adc
add
ret
loop
mov
repnz
addr16
dec
loope
push
arpl
stc
ins
push
mov
scas
hlt
outs
popf
and
mov
iret
test
inc
inc
mov
fistp
loop
or
cmps
xchg
stc
inc
aam
pusha
es
sbb
retf
pushf
cld
mov
sub
or
(bad)
pop
sub
sbb
ficomp
movs
lahf
xchg
imul
in
jl
pushf
(bad)
addr16
cmp
xchg
xor
inc
add
aaa
rcr
lahf
push
jno
ret
adc
pop
sahf
add
mov
sbb
std
or
push
cmp
call
rcr
jmp
push
and
mov
xchg
xchg
cdq
int
cwde
sar
cdq
adc
dec
sahf
mov
xor
ror
jnp
scas
std
add
sub
mov
pop
enter
sbb
push
push
xchg
or
dec
pusha
xor
call
mov
out
je
fdiv
fild
jmp
mov
jmp
mov
fsubr
xchg
xchg
push
aad
out
call
scas
les
cmp
mov
sub
adc
stc
push
pop
cmp
jecxz
pop
jb
dec
inc
scas
out
jecxz
aad
add
sub
mov
add
sbb
mov
adc
xchg
lods
out
jb
in
dec
test
inc
jmp
call
cmp
mov
mov
in
arpl
pop
cmp
fimul
push
imul
into
aaa
fiadd
inc
mov
outs
pop
sub
arpl
mov
push
(bad)
push
mov
loope
popa
add
fld
jno
xchg
ds
xor
ja
int
rcl
sub
je
scas
imul
push
jl
xchg
inc
sbb
in
mov
lds
adc
jle
jle
(bad)
nop
jns
pushf
jmp
lock
inc
sbb
imul
test
stc
jge
mov
aam
jmp
popf
test
retf
popf
fadd
inc
cld
cmp
test
mov
cld
nop
loope
dec
mov
cmp
push
das
mov
push
and
dec
mov
ret
cmp
jmp
add
daa
dec
jl
push
je
icebp
push
rep
dec
mov
add
and
aad
push
js
js
cli
sbb
jns
ffreep
and
fsubr
mov
inc
adc
(bad)
hlt
push
sbb
mov
dec
not
xchg
cmp
call
fistp
cmp
pop
sub
(bad)
cmp
xlat
mov
mov
shl
loopne
int
mov
test
les
push
clc
jne
xchg
les
cmc
xlat
ucomiss
or
mov
xchg
pop
jge
xchg
dec
push
sete
scas
inc
test
and
in
in
shl
jmp
mov
loop
xchg
lds
data16
repz
xor
jnp
jbe
out
xchg
cwde
popf
mov
in
adc
xchg
mov
jle
unpcklps
sar
mov
movs
jmp
lea
xor
adc
mov
jp
pushf
dec
retf
jb
or
adc
les
or
inc
clc
aas
ror
inc
xor
out
test
call
lahf
or
sub
xlat
ret
js
bound
jmp
lods
(bad)
enter
jae
(bad)
sub
adc
cs
pop
mov
call
shl
cwde
pop
pop
mov
sbb
push
push
mov
in
(bad)
or
cmp
push
mov
inc
xchg
pusha
adc
shl
dec
and
and
jbe
repnz
xor
inc
mov
cmp
scas
iret
adc
in
mov
out
xor
add
adc
mov
jne
mov
icebp
push
jl
mov
push
adc
cmps
mov
pop
leave
jns
cdq
stos
fsub
adc
mov
sahf
or
addr16
dec
jp
pop
and
jne
in
jmp
mov
fbld
jns
dec
jb
les
mov
bswap
sub
sahf
(bad)
jns
jnp
mov
out
es
ficomp
cmc
dec
xchg
jne
xchg
je
xor
(bad)
(bad)
xchg
push
or
push
add
xchg
(bad)
and
stc
pop
cld
add
mov
(bad)
(bad)
bound
shl
in
inc
fist
jge
dec
jmp
outs
cmp
sub
adc
mov
addr16
mov
sahf
rol
jns
(bad)
icebp
std
pop
xor
add
push
retf
inc
pop
out
or
movs
mov
or
adc
cmp
cmc
idiv
inc
arpl
rol
cmp
ja
aaa
dec
aas
jae
out
lds
jno
repnz
test
adc
jne
sub
xchg
mov
pop
mov
pop
(bad)
pop
cmp
jae
cs
or
adc
fldenv
fcomi
mov
inc
cmp
into
in
out
adc
and
dec
stos
aam
push
mov
jbe
rol
lahf
fistp
sub
mov
leave
mov
repnz
sar
pusha
out
gs
in
cmp
xchg
call
ins
ins
fstp
cmp
push
gs
or
stc
mov
js
lods
sahf
leave
pushf
or
xchg
imul
cwde
cvtps2pi
aam
addr16
ss
test
je
rcl
or
or
push
aas
es
loopne
add
sti
call
jp
bsf
stos
sub
push
or
jmp
pop
xlat
dec
jle
mov
push
(bad)
jns
cmps
ret
ficom
xor
mov
retf
enter
push
dec
jne
sbb
in
adc
add
sar
scas
(bad)
movs
repz
pop
mov
cmp
xlat
call
ret
mov
cmp
xchg
pop
adc
push
xchg
cmp
pop
(bad)
(bad)
test
scas
mov
movs
cmps
test
sub
xchg
mov
cmp
jbe
lock
fstp
mov
push
inc
cwde
(bad)
pop
sub
inc
cli
or
ror
int
leave
sbb
out
or
inc
mov
popf
jb
mov
int
jmp
imul
cmp
cmp
or
sub
xor
ret
sbb
add
repz
pop
inc
mov
push
das
push
sub
out
inc
lods
or
cld
jne
mov
add
push
(bad)
aam
jno
into
outs
cmp
std
gs
movs
(bad)
sub
retf
fwait
or
movs
out
and
or
pop
add
mov
shl
lahf
pop
add
cmp
stc
jge
mov
mov
lock
retf
aam
mov
inc
inc
popa
cmps
push
les
pop
push
sbb
xor
jp
or
push
adc
das
pusha
adc
sbb
add
(bad)
jb
and
mov
jo
into
mov
dec
or
mov
cmc
push
jmp
imul
lods
push
in
xchg
cmp
or
xchg
jns
and
int
mov
sbb
push
add
nop
sbb
jg
cmps
psubsw
sbb
daa
in
inc
mov
push
add
or
or
push
(bad)
jecxz
fidivr
and
xchg
les
ins
pop
sub
sbb
movs
inc
mov
adc
es
sbb
and
sub
dec
sub
mov
xchg
jmp
jae
and
pop
cli
aaa
pop
dec
push
jnp
add
jnp
mov
push
rcr
shl
sar
inc
pushf
loope
js
jmp
test
add
not
inc
adc
movs
adc
pop
mov
xchg
aam
std
pushf
pop
add
iret
mov
or
fwait
add
cld
push
cwde
cmp
xor
inc
jbe
imul
add
(bad)
cmp
inc
jo
cmps
inc
pushf
and
jmp
sbb
add
sbb
sti
outs
dec
adc
jno
add
(bad)
adc
daa
pop
stc
fcmovnbe
push
rcl
call
in
shl
cli
cmp
cmp
shr
xchg
scas
inc
sub
lods
dec
push
mov
push
int3
lea
pop
movs
xlat
pusha
mov
and
push
ss
pop
vmread
pop
xor
cmp
jmp
adc
mov
loop
add
iret
add
test
pop
push
or
mov
and
adc
fadd
and
xchg
ret
inc
repz
push
xlat
add
jmp
sbb
les
(bad)
in
mov
fwait
ror
inc
bnd
lahf
shl
(bad)
jge
das
in
xchg
hlt
cld
ja
outs
adc
mov
pop
add
fwait
jmp
push
push
push
test
cmp
push
jp
test
pop
test
test
and
push
xor
pop
cmp
and
cwde
push
push
push
movs
scas
inc
iret
push
pop
sbb
loope
xchg
pusha
sbb
ds
cmc
in
mov
push
kortestb
push
xchg
enter
add
hlt
sub
jmp
xchg
mov
jmp
jge
(bad)
xor
adc
leave
xchg
mov
dec
sbb
push
adc
dec
inc
pop
mov
or
jo
es
push
arpl
imul
ins
xchg
movs
cmps
outs
push
or
dec
xor
iret
sbb
in
or
xor
pop
sbb
outs
cwde
push
xor
out
out
test
in
add
aam
adc
repz
cmp
or
lods
mov
es
(bad)
shl
add
push
mov
cmp
xchg
and
or
mov
jb
sub
inc
jns
int
mov
push
pop
and
adc
shl
ret
adc
pop
mov
mov
push
lahf
inc
mov
ret
out
cs
pop
pop
ja
dec
dec
xchg
movs
xchg
mov
(bad)
imul
push
push
ds
mov
push
mov
nop
jge
dec
dec
push
jle
pop
pop
cld
popa
clc
lds
xor
jl
sbb
push
repnz
icebp
mov
add
xor
dec
sbb
sub
sub
popf
(bad)
jl
shr
ret
mov
stc
(bad)
gs
test
outs
retf
push
jp
loopne
(bad)
cmp
sub
cmps
sub
out
cmp
shl
or
jne
sbb
jno
mov
pop
xor
fwait
ror
pop
in
jbe
pmuludq
xlat
add
mov
mov
mov
lods
mov
in
cld
pop
or
inc
aad
mov
cmps
dec
and
shl
mov
sbb
in
clc
cmp
lds
mov
push
jge
stc
pushf
iret
xchg
pop
mov
mov
dec
cdq
dec
mov
cwde
sahf
jnp
pop
les
push
ret
bound
push
inc
push
and
loop
in
sahf
ja
lds
mov
into
icebp
sub
mov
and
dec
ret
stc
call
scas
daa
pop
and
retf
jp
jmp
xor
jp
xor
jbe
push
or
ins
repnz
in
out
ret
jge
outs
scas
pop
cmp
addr16
fsubrp
or
inc
sbb
mov
rcr
out
nop
cmc
pop
dec
outs
ja
mov
dec
jp
cmp
ja
dec
jnp
fild
pushf
inc
movs
and
push
enter
add
jge
push
inc
gs
inc
fwait
mov
or
mov
test
fidiv
test
test
(bad)
mov
and
sti
inc
pop
mov
lock
int
sbb
jecxz
(bad)
call
dec
stos
adc
les
jmp
lods
mov
aam
shr
ret
and
mov
add
add
pop
fwait
add
sbb
add
mov
jne
inc
cmp
push
sub
test
sbb
adc
add
sub
xlat
loopne
or
fisttp
mov
loop
jmp
fld
(bad)
jns
or
pop
cdq
imul
aam
pop
(bad)
in
mov
rcr
lock
adc
pop
ficomp
addr16
push
clc
or
(bad)
xor
sub
ins
mov
mov
mov
fcomp
lea
lock
fld
cdq
dec
cli
mov
cmps
push
test
dec
cwde
cdq
mov
retf
lock
iret
inc
mov
mov
mov
shl
and
mul
fldenv
and
(bad)
or
xor
test
call
call
out
xor
(bad)
outs
add
and
xchg
inc
pop
pop
leave
cwde
cmp
mov
jbe
xor
aaa
push
enter
add
ins
sub
cmp
mov
out
inc
in
xchg
test
mov
inc
mov
jecxz
pop
int3
stos
jmp
jne
mov
mov
fsubr
test
cdq
shl
push
(bad)
into
lock
push
sub
sbb
jbe
adc
(bad)
stc
or
push
xchg
jge
pushf
xchg
outs
add
push
iret
jb
in
fadd
cmp
dec
fcomp
mov
push
push
loop
sbb
push
aaa
sbb
mov
xchg
inc
jne
xor
pop
cmps
push
nop
jmp
arpl
sub
sbb
inc
call
rcr
inc
lds
stc
xor
fdiv
mov
jmp
xor
fld
push
mov
popa
add
xlat
fadd
mov
cli
call
aaa
mov
dec
sub
fmul
push
stc
test
jge
pop
lods
mov
pop
jb
int
jno
add
jl
test
push
push
or
outs
push
mov
or
sar
leave
repnz
jae
loopne
loope
(bad)
sbb
outs
push
stc
push
mov
pop
int
jns
fwait
loopne
adc
add
gs
or
and
pop
mov
sub
loop
sbb
and
sbb
pop
jb
loop
add
and
int3
(bad)
arpl
mov
pop
mov
inc
inc
push
leave
push
pop
movs
pushf
pop
repnz
or
repz
sub
fsub
fs
push
pop
ret
mov
mov
popf
push
dec
jmp
push
pop
pop
sub
pop
out
inc
cmp
stc
fmulp
mov
pushf
add
scas
popa
mov
ret
test
bound
retf
mov
pop
jnp
sbb
mov
inc
imul
mov
mov
dec
pop
shl
xor
and
(bad)
call
xchg
es
mov
div
mov
xchg
repz
or
add
lahf
sbb
repnz
mov
fisttp
pop
jne
dec
(bad)
call
push
inc
inc
ds
or
les
xchg
dec
mov
push
or
adc
add
push
not
add
(bad)
lahf
mov
pop
int3
sbb
(bad)
aam
movs
jne
repz
jle
jmp
ja
in
mov
mov
ins
xchg
daa
sahf
outs
ret
jmp
add
sti
les
fbld
test
push
lds
pop
push
pop
out
lea
adc
xor
mov
imul
or
dec
xchg
out
xor
(bad)
leave
int
retw
and
and
(bad)
stos
loopne
jb
scas
pop
push
rcl
icebp
sub
xchg
mov
inc
inc
cmps
rcr
(bad)
shl
repnz
inc
inc
daa
outs
imul
push
pop
scas
adc
(bad)
adc
popf
sub
xor
cmp
xor
xor
pop
xor
stc
sahf
pop
es
mov
pop
push
call
inc
movs
in
add
pop
dec
imul
mov
daa
cmp
xchg
test
mov
aad
jno
push
fs
gs
jmp
sub
shr
mov
outs
push
and
push
imul
push
pop
pop
mov
cmps
aad
ror
fs
fwait
dec
mov
and
sub
aaa
mov
cdq
fdivrp
stos
ds
xchg
push
push
pop
scas
inc
in
jp
aaa
in
popa
inc
cmp
sbb
loopne
ins
imul
sbb
mov
lods
and
cli
and
(bad)
stos
dec
xchg
mov
mov
ja
jno
jle
aas
push
sub
inc
(bad)
ret
sub
test
shl
mov
jmp
fidivr
push
dec
les
push
das
adc
sbb
sub
xchg
mov
jbe
sub
mov
xor
inc
cmp
pop
dec
pop
stc
mov
cmc
push
mov
ins
sti
and
xor
adc
adc
dec
lods
mov
movs
or
sbb
cmps
pop
iret
jl
nop
adc
sar
sub
mov
dec
inc
add
mov
jo
iret
jb
cmp
setp
movs
ror
popa
add
ret
jle
mov
cmp
stc
hlt
mov
js
repz
ja
in
test
xor
push
aam
sub
cmp
pop
cmc
mov
sub
retf
jmp
stc
mov
imul
mov
mov
(bad)
(bad)
sti
dec
imul
mov
sub
neg
pushf
add
stc
fsubr
xchg
mov
into
sub
aad
fdivr
repnz
push
loope
neg
jns
(bad)
ror
push
inc
jmp
and
ss
pop
add
shl
ss
pop
mov
popa
test
add
xchg
mov
inc
adc
and
push
xchg
cmp
aas
cmp
dec
and
mov
adc
test
fwait
jl
mov
inc
into
test
test
iret
pop
jnp
adc
jecxz
lea
xor
inc
or
inc
pop
test
and
loop
dec
xor
dec
fcmovb
cmp
add
ins
outs
xor
outs
push
arpl
or
and
xor
lods
mov
sbb
dec
jecxz
jg
mov
adc
loop
imul
or
loop
xlat
fist
aas
xchg
xchg
call
cmps
ss
xchg
push
inc
push
mov
fild
mov
pop
call
or
jae
fwait
nop
pop
jl
pop
popa
cmp
mov
(bad)
cmc
stos
jmpw
out
push
sbb
and
push
inc
popa
aad
repz
das
imul
push
sbb
in
mov
fs
pop
add
dec
call
jno
inc
adc
and
lds
mov
fstp
fidiv
mov
ins
push
cmp
and
mov
dec
out
pushf
int
mov
add
ror
xor
add
ror
dec
xchg
sub
not
cmp
push
shr
push
sbb
xor
cmp
call
pop
add
or
(bad)
pusha
pushf
dec
mov
pop
cmp
add
or
cmp
jecxz
pop
or
imul
mov
add
shr
cmp
cmp
int
or
mov
xlat
mov
push
sub
fdiv
jl
cmp
popf
mov
and
jg
sub
add
jmp
std
adc
call
pop
mov
pop
mov
mov
lock
stos
inc
jecxz
cmps
les
adc
dec
fdivp
out
inc
sti
(bad)
mov
fs
lahf
mov
scas
fistp
dec
adc
mov
arpl
rol
pop
mov
pop
jbe
pop
mov
ss
or
xchg
pop
imul
scas
mov
jl
mov
stos
or
popf
pop
push
jg
mov
or
nop
out
out
sahf
sub
xchg
inc
cld
mov
sub
mov
sbb
fstp
cmp
test
outs
cmps
in
sub
fisubr
ja
sub
mov
sbb
mov
aas
sbb
fidiv
(bad)
fs
mov
jl
fild
arpl
cmp
jbe
aam
idiv
mov
or
outs
mov
adc
stc
adc
jg
fadd
cmp
mov
mov
idiv
fild
fbld
push
sbb
test
js
cmps
out
out
mov
push
adc
pop
push
ins
pushf
jmp
aaa
pop
inc
rcl
add
dec
mov
fwait
push
movs
cmp
push
sub
xor
jl
push
jge
dec
cmp
into
sysexit
dec
rcr
xchg
cmps
jae
jno
repnz
sar
sbb
jbe
in
xor
int
or
addr16
movaps
ror
push
addr16
jne
push
mov
cmp
fdiv
mov
and
pop
add
enter
(bad)
test
sbb
sub
cmp
lds
inc
js
in
stc
mov
xchg
es
sbb
repnz
jle
inc
push
pushf
sub
jns
in
ror
test
aam
mov
loopne
bsf
sub
jle
cmp
call
in
and
ror
mov
retf
cli
sbb
push
pushf
xor
pop
jmp
xor
jns
and
call
nop
pop
pop
out
(bad)
or
pop
push
movs
bound
sbb
sti
mov
stc
lds
fucom
mov
fisttp
int
xchg
pop
sub
(bad)
mul
shl
and
sbb
cmp
div
push
mov
xchg
xchg
xor
mov
cmp
cli
pushf
jbe
xchg
mov
jg
rol
xchg
add
enter
pop
pop
xor
fwait
loopne
rcr
sar
pop
mov
xor
and
test
imul
mov
and
rcl
dec
or
pop
(bad)
cli
add
call
test
mov
hlt
jecxz
xchg
out
sub
stos
stos
cs
adc
jmp
and
std
mov
dec
jae
loop
inc
out
adc
stc
mov
cmp
sbb
je
mov
sub
popf
xor
or
pop
jecxz
adc
repz
xchg
(bad)
push
add
test
push
sti
and
push
int
popa
inc
add
inc
sub
xchg
in
imul
ins
jmp
ja
mov
add
ins
jl
ins
pop
test
jb
fldenv
push
push
lock
rdtsc
pop
imul
rol
(bad)
and
push
cmp
call
retf
cwde
jb
cmp
inc
aaa
int
loop
jo
inc
jae
loop
retf
and
mov
call
test
push
arpl
addr16
mov
sar
xor
jae
out
or
sbb
pop
cmp
test
(bad)
dec
dec
add
outs
mov
adc
int
sbb
mov
adc
sub
or
adc
lods
cmps
push
cdq
and
or
aas
std
pop
lea
push
push
ins
xchg
das
mov
aas
popf
loopne
bound
test
push
add
test
xor
arpl
pop
mov
cdq
or
nop
mov
jmp
mov
jbe
xchg
mov
(bad)
icebp
or
ret
ret
cmp
test
and
aaa
outs
adc
pusha
nop
std
rcr
inc
in
mov
in
sub
aam
sub
xchg
push
mov
mov
loop
push
int
and
jle
in
xchg
imul
cmp
ret
sub
and
mov
(bad)
std
jne
or
xchg
mov
jecxz
iret
jg
xchg
mov
fwait
jo
inc
jb
adc
fdiv
icebp
mov
sub
cmp
lea
or
arpl
sbb
rol
cmp
out
arpl
adc
inc
lock
icebp
xchg
mov
jae
and
loope
cmp
outs
scas
adc
test
sbb
in
push
ins
mov
xor
or
fcom
add
xchg
pusha
test
nop
adc
ret
arpl
pusha
ret
int3
jl
ds
call
aad
pop
clc
or
xor
push
enter
push
fmul
pop
dec
add
shl
mov
xor
sbb
rcl
pop
jge
push
scas
mov
iret
rcr
and
jne
popf
and
inc
mov
lea
lods
shr
xchg
add
pop
push
loope
cs
dec
js
pop
sbb
(bad)
movs
pop
dec
push
mov
(bad)
and
pop
sti
add
jo
ds
jb
repz
push
fimul
adc
xchg
pop
inc
stc
mov
add
push
cmp
mov
ss
mov
jo
or
pop
adc
outs
ins
ror
inc
adc
pushf
rol
popa
inc
adc
and
lock
xchg
cli
inc
jns
pop
adc
addr16
mov
mov
push
push
dec
ins
sub
mov
fldcw
pop
jnp
jmp
adc
dec
mov
out
pop
pop
dec
mov
cmp
cmp
in
sub
jno
sub
scas
ja
cwde
cmps
mov
jp
sub
lods
into
cdq
jg
popa
add
mov
dec
push
in
in
jo
enter
jb
inc
enter
adc
ds
adc
addr16
nop
adc
pop
or
push
fsubrp
lods
leave
lock
mov
cmp
test
aam
inc
cld
lods
cmp
idiv
cmp
movs
rcl
das
jae
push
adc
pop
and
in
sub
in
ror
icebp
mov
push
or
(bad)
cli
dec
mov
cmp
daa
fisub
xchg
enter
mov
xor
jecxz
xchg
rcl
pop
shl
push
int
mov
mov
movs
add
mov
(bad)
mov
pop
adc
pop
mov
out
stos
pop
sbb
ss
xlat
cwde
xchg
stc
(bad)
call
push
pop
mov
out
cld
and
mov
adc
aaa
mov
or
mov
xchg
ins
je
bound
div
es
dec
mov
sahf
jnp
out
data16
in
loop
retf
xchg
lods
xchg
adc
xor
fadd
shr
add
sbb
push
inc
sahf
xlat
daa
mov
iret
inc
loope
mov
pop
daa
xchg
or
out
ror
mov
mov
leave
xchg
adc
cli
push
dec
clc
push
out
jmp
repz
jns
add
imul
or
loop
xchg
mov
stc
dec
add
(bad)
retf
or
and
loop
jmp
pop
cmc
pop
jle
mov
xor
mov
iret
and
cmp
push
inc
adc
inc
mov
pop
sbb
cmp
scas
adc
jmp
ins
div
xor
idiv
sti
sub
pop
xor
fnstenv
push
cmp
jp
fcomp
sub
inc
jecxz
mov
push
push
fwait
jnp
sub
ds
mov
lds
je
mov
sbb
pop
stos
daa
xchg
push
inc
jecxz
inc
lea
dec
xchg
fmul
clc
and
lea
dec
jne
pop
xor
loope
loope
cmc
scas
popa
retf
xchg
gs
mov
in
cld
fist
sbb
ror
mov
mov
sbb
push
cmp
jge
mov
cmc
push
dec
cmp
out
xchg
jno
shl
mov
inc
loopne
xchg
shr
mov
les
mov
push
dec
and
test
fst
jno
stc
in
mov
outs
and
sub
(bad)
in
mov
movs
std
cmp
sub
and
cmp
iret
idiv
lods
dec
das
test
ja
sbb
xchg
xchg
sbb
push
int3
mov
(bad)
mov
test
pop
cwde
popf
jnp
and
sub
pop
or
push
adc
and
xchg
cs
inc
sbb
(bad)
out
push
std
pop
adc
adc
movs
lea
xor
(bad)
mov
jle
xchg
retf
test
js
pop
ja
das
movs
in
test
adc
sbb
sbb
push
mov
adc
retf
ret
aad
or
call
in
cmp
cmp
retf
and
adc
mov
dec
call
xchg
fldenv
dec
dec
jae
inc
pop
jne
cmps
jmp
cmp
ja
mov
xchg
(bad)
sub
call
adc
xchg
add
jmp
je
ss
mov
mov
mov
div
inc
jge
int3
bound
xor
shl
push
pushf
sbb
test
mov
lods
jnp
rcl
mov
repz
mov
adc
cdq
mov
adc
dec
out
mov
cdq
js
mov
add
jmp
mov
out
inc
shr
mov
xchg
add
inc
jne
hlt
push
adc
xchg
in
adc
test
xor
mov
fs
ds
push
repz
jno
and
add
or
ins
xor
ja
mov
and
mov
sbb
test
sti
and
aad
into
fidivr
or
xor
dec
xchg
loope
inc
aaa
imul
fwait
mov
out
jnp
jmp
push
xor
cmp
movs
cmp
outs
ins
sub
cwde
repnz
repz
mov
arpl
(bad)
enter
clc
mov
pop
ja
test
cdq
dec
add
pop
pop
fnstsw
cmp
mov
adc
fsubp
jecxz
and
addr16
mov
cld
clc
sahf
lods
inc
and
test
ja
mov
fidiv
sbb
out
inc
mov
imul
sar
mov
inc
imul
aas
mov
jmp
nop
adc
das
int3
aas
mov
pop
pushf
into
pop
sbb
enter
mov
(bad)
push
jmp
mov
cmp
push
ret
pop
cli
mov
les
push
xchg
in
stos
enter
xor
call
call
add
rcl
out
into
mov
mov
or
cwde
pop
pop
test
xchg
outs
sub
add
mov
inc
fimul
imul
add
mov
dec
stc
aas
jo
mov
pop
xchg
jne
add
jbe
lock
sbb
push
xchg
cmps
xchg
stos
or
(bad)
dec
cli
das
jnp
add
data16
xor
mul
cmp
dec
dec
shr
sti
ins
cld
test
mov
mov
pop
fisttp
test
mov
ds
outs
xor
sbb
loop
push
fst
pop
sub
pop
pop
mov
loopne
ins
add
or
in
pusha
shl
jns
and
cmp
cmp
or
push
sub
movs
outs
sti
jbe
enter
lea
mov
aas
push
pop
je
and
xchg
sbb
mov
das
sbb
mov
inc
in
iret
ret
adc
ror
dec
test
xor
add
or
or
and
fs
sahf
lahf
dec
hlt
dec
je
in
sub
adc
push
mov
shl
add
cmp
(bad)
shr
jp
push
sub
pop
ins
neg
icebp
ins
repz
rol
add
mov
adc
or
jbe
inc
xor
aad
pop
and
mov
xchg
jb
pushf
mov
xchg
outs
out
test
bound
mov
pushf
sub
fs
fcomip
mov
jp
adc
xor
(bad)
lock
int3
ds
adc
sti
adc
sbb
ret
adc
cmp
adc
loope
stos
and
pop
(bad)
ins
cli
fs
gs
or
inc
add
sti
and
sub
sbb
fwait
cmp
cld
(bad)
adc
xor
lods
hlt
imul
xor
nop
test
dec
xchg
push
repnz
or
ds
mov
clc
mov
adc
adc
cmc
mov
pop
push
ins
hlt
dec
cld
xor
adc
xor
out
add
in
(bad)
mov
sbb
xlat
and
mov
neg
pop
push
cmp
mov
pop
pop
xor
loope
cld
(bad)
ins
cmc
lods
call
leave
repz
pop
xor
(bad)
adc
repnz
out
mov
int3
xadd
sub
imul
mov
in
cs
int3
cmp
mov
out
add
retf
mov
or
ins
xor
pop
xchg
mov
cmp
bound
mov
aas
ficom
inc
loop
dec
add
push
xchg
jmp
leave
pop
or
ror
ins
aaa
cmps
daa
push
rcr
sub
jbe
cmp
jg
jmp
sbb
test
mov
cld
in
(bad)
mov
inc
fdivrp
scas
cs
jnp
pop
jecxz
xor
xor
and
and
mov
out
(bad)
jge
lahf
fcmovnu
mov
fsub
aas
push
stos
xor
dec
sbb
adc
daa
aaa
stos
enter
ret
pop
jb
inc
mov
jbe
sbb
mov
adc
mov
dec
pop
xor
das
aad
dec
ret
shr
jne
scas
leave
jno
xor
and
add
lods
test
cmp
cmovle
pop
jae
cmp
(bad)
and
jmp
bswap
lea
bound
jno
jmp
jnp
scas
cdq
jmp
jecxz
in
jge
mov
(bad)
out
mov
jmp
push
cmp
call
ds
push
cmp
mov
fldenv
inc
adc
mov
in
and
jp
in
ins
xchg
add
outs
mov
sub
mov
retf
cli
pop
ins
dec
cmp
jb
add
sahf
sbb
and
xor
fcmove
popa
popf
(bad)
movs
outs
mov
imul
mov
pop
mov
mov
push
popa
in
test
jb
sbb
and
inc
cmps
sub
dec
pop
aaa
das
pop
movs
sbb
mov
js
in
(bad)
jmp
out
pop
and
dec
pop
int
add
es
mov
adc
cmc
mov
pop
add
ja
or
sub
ret
cmc
int
cmp
sahf
xchg
cmp
cmp
sar
shl
lea
and
xchg
js
pushf
jmp
or
pop
pop
inc
and
daa
inc
dec
push
mov
stos
sub
lds
cmc
imul
push
and
enter
mov
push
lods
loop
jno
fisttp
imul
xchg
xchg
movs
dec
add
cmp
xor
lea
hlt
outs
icebp
repz
fmul
retf
inc
mov
cld
xchg
xchg
mov
leave
cmp
push
and
out
sub
xchg
sbb
add
add
jp
pop
int3
leave
push
jb
stos
jnp
xor
stos
add
inc
stos
aam
add
and
push
cmp
out
add
mov
push
cmc
push
inc
retf
aaa
mov
xchg
js
das
movs
inc
xchg
and
lock
ror
xor
sbb
adc
pop
addr16
ins
jp
jle
ret
clc
xchg
call
push
mov
retf
jmp
mov
cld
ret
and
mov
ss
test
int
ret
daa
push
sub
nop
outs
mov
imul
mov
popa
cmp
xlat
push
mov
pop
jge
mov
call
adc
rcl
out
loop
cmp
fwait
sub
lahf
in
jo
stos
mov
fdiv
sar
(bad)
daa
ror
mov
aam
loop
loop
mov
push
bound
jmp
or
popf
psllq
movs
ss
jne
jns
cs
ror
mov
in
push
mov
mov
lods
mov
xor
cmp
jnp
ins
nop
adc
mov
cmps
adc
mov
dec
mov
cmp
imul
into
adc
loope
adc
xor
or
pop
add
ret
sub
dec
xchg
push
int
xchg
sbb
pop
in
mov
mov
dec
idiv
pop
in
jle
pushf
cmp
sub
add
adc
xchg
in
mov
ins
jecxz
outs
push
pop
addr16
mov
daa
jns
loop
adc
test
lods
mov
jp
cmp
pop
jp
cmp
mov
xchg
mov
enter
xor
xor
loopne
and
and
or
xchg
jle
lahf
loope
call
(bad)
aas
out
adc
les
xchg
sar
push
pop
lahf
cmp
add
sub
cmps
loop
sub
addr16
mov
push
rcr
sub
data16
das
repnz
cdq
out
das
icebp
pop
clc
(bad)
and
aad
cmp
inc
pop
nop
mov
or
or
jge
scas
mov
(bad)
test
fcom
ror
or
arpl
lods
in
arpl
dec
lods
sbb
push
fisub
xchg
sbb
sbb
sbb
outs
mul
pop
jo
fisub
int
fbld
jmp
inc
cdq
sbb
dec
not
push
mov
clc
push
hlt
pop
lods
inc
(bad)
ins
mov
cmc
sub
mov
pop
inc
ror
dec
mov
xchg
leave
leave
(bad)
sub
pushf
shl
pusha
mov
xchg
cmp
cmp
pop
adc
hlt
mov
fld
mov
rcr
aaa
out
fs
mov
ja
push
test
std
dec
xchg
jge
dec
inc
jae
call
inc
pop
imul
fisttp
jecxz
in
mov
les
xchg
mov
inc
inc
jge
jg
xchg
mov
push
sub
pop
sbb
adc
maskmovq
div
pop
mov
inc
ret
push
mov
stos
pop
sbb
add
imul
pop
scas
jecxz
sahf
out
mov
cmp
clc
xchg
mov
outs
xor
cmp
xor
xchg
lock
scas
sub
cld
xor
leave
sbb
pop
jnp
data16
add
sub
iret
push
mov
aaa
enter
xor
mov
adc
icebp
dec
adc
cwde
mov
es
movs
jmp
int
out
fidivr
dec
shl
push
daa
movs
push
rol
pop
nop
cmp
je
sub
inc
pop
or
sbb
xor
or
and
fs
push
xchg
xor
mov
xor
repz
(bad)
lahf
(bad)
out
and
cwde
mov
ror
mov
push
(bad)
xlat
add
mov
inc
jmp
hlt
mov
rol
inc
jg
inc
movs
jnp
std
imul
(bad)
pop
lds
push
clc
pop
stos
pop
es
leave
fistp
out
cs
or
mov
push
(bad)
mov
pop
jmp
lahf
fwait
pop
loopne
adc
repz
or
lahf
test
inc
mov
dec
test
ret
daa
stc
adc
popa
add
neg
dec
stc
imul
push
imul
ret
inc
add
imul
xchg
bound
out
lds
into
push
les
push
out
ins
outs
ret
or
sbb
outs
push
fisttp
leave
lds
mov
inc
sahf
in
sbb
outs
test
mov
adc
inc
(bad)
cmp
adc
call
dec
ja
retf
ins
push
jmp
xchg
aas
add
int3
sbb
les
push
leave
lock
out
inc
inc
xlat
mov
lods
retf
xchg
adc
mov
xor
adc
pop
jl
sub
push
cmp
mov
jbe
imul
hlt
cmp
xor
cmc
sbb
movs
in
mov
pop
out
xchg
fldcw
fdivr
cmp
scas
in
xor
mov
iret
jmp
int
loop
mov
jne
sub
aaa
arpl
dec
inc
popf
inc
lea
adc
adc
in
adc
call
scas
adc
or
inc
dec
push
out
(bad)
or
or
adc
out
mov
bound
cmp
xchg
shl
xor
scas
sub
xor
mov
pop
lods
je
mov
xor
retf
mov
push
pushf
test
popf
or
inc
movs
cmp
mov
ja
aad
mov
or
lock
retf
test
xchg
and
jb
cmps
jmp
fimul
call
sub
add
cmps
mov
sub
add
imul
test
push
cmp
xchg
jle
out
mov
pop
dec
loopne
dec
lods
pop
mov
lods
mov
pusha
enter
mov
sub
or
xor
and
hlt
das
cmp
icebp
add
leave
and
xchg
out
pop
pop
sub
inc
mov
inc
mov
xor
stos
dec
in
sar
or
test
(bad)
out
pusha
xor
add
arpl
inc
or
test
outs
int3
inc
fld
jmp
fdiv
call
ja
std
fs
pop
dec
repz
rol
test
push
mov
retf
ss
mov
adc
sbb
or
mov
or
pop
and
repnz
jb
and
nop
pop
les
push
pop
mov
pop
pop
movs
imul
pusha
je
(bad)
fnstcw
mov
jmp
fldenv
sbb
adc
pop
andnps
call
xor
and
into
mov
retf
ss
es
and
ins
and
cmp
mov
dec
and
sahf
cld
dec
lock
mov
into
mov
jnp
lahf
(bad)
(bad)
mov
pop
shr
cs
sar
neg
and
xor
stos
repz
pop
std
sbb
cmp
dec
cld
mov
mov
pop
mov
out
adc
jbe
ds
nop
pop
arpl
push
mul
mov
aas
and
pop
cmps
les
data16
shl
and
or
aam
daa
sar
mov
inc
mov
push
adc
mov
jns
call
pop
xchg
in
sbb
xchg
or
mov
jno
push
and
jl
imul
cld
outs
psubusb
xchg
les
inc
imul
fwait
icebp
lock
or
and
bound
ret
out
mov
hlt
fwait
(bad)
cmc
imul
pop
push
leave
mov
adc
out
push
xchg
pop
mov
mov
ret
push
adc
in
jmp
not
xor
cmp
or
loop
movs
add
or
push
xchg
lea
mov
dec
(bad)
mov
pop
mov
push
push
sub
icebp
call
jg
push
addr16
inc
jmp
jmp
sub
push
xor
leave
aas
jecxz
inc
push
and
xchg
mov
xchg
iret
stos
mov
loopne
or
xchg
loope
dec
jl
inc
fadd
popf
jo
mov
jg
pop
(bad)
or
sbb
mov
setle
fnstsw
and
daa
aaa
daa
outs
arpl
aam
aas
fidivr
and
push
not
daa
cmp
nop
sub
jb
or
call
add
push
mov
xchg
jae
and
pop
lahf
mov
xor
cmc
pop
enter
popa
test
out
imul
dec
outs
xchg
jp
test
es
or
and
inc
push
cmps
inc
or
inc
je
lahf
adc
or
push
xchg
pop
add
xlat
or
aam
test
pushf
cmp
clc
adc
sbb
push
not
push
cmp
xor
inc
(bad)
clc
cld
cmp
fimul
pop
(bad)
int
repnz
cld
push
fild
cli
push
in
pop
mov
daa
dec
and
sub
sti
sub
jge
div
scas
mov
add
sbb
xchg
rcr
xchg
fs
mov
mov
cmc
(bad)
sbb
inc
leave
mov
les
add
sbb
jp
push
loop
or
jnp
imul
scas
mov
sbb
cwde
sub
gs
adc
retf
std
pop
and
into
cmp
mov
push
push
int
mov
in
fs
call
popa
jo
sahf
mov
js
aam
movs
xchg
push
test
js
in
inc
imul
fdivp
rcr
inc
mov
adc
ror
mov
mov
sbb
and
or
ret
addr16
ss
cs
dec
rcr
addr16
jmp
xchg
xor
push
aas
out
inc
dec
push
mov
clc
push
lods
mov
cs
adc
adc
das
cmp
sub
mov
adc
out
out
aam
test
push
push
sbb
shl
(bad)
jnp
movs
mov
pop
sbb
xchg
xlat
div
shr
jbe
mov
and
pusha
icebp
or
ins
fbstp
mov
shl
cwde
push
das
jns
out
jmp
add
xchg
adc
lds
cld
aaa
out
mov
into
sub
adc
jno
jb
test
out
test
call
sub
std
sub
adc
jnp
(bad)
test
into
call
loop
aaa
popf
call
cmovbe
inc
pop
cs
sbb
mov
jne
aas
lea
in
push
xlat
and
retf
and
in
retf
cmp
push
fdivr
sub
push
adc
and
and
xchg
cmp
nop
scas
int3
jmp
pop
adc
add
xor
ds
(bad)
aaa
mov
jmp
jecxz
loopne
popa
inc
lods
push
push
jl
into
enter
lods
addr16
jne
cld
outs
scas
(bad)
icebp
cmp
inc
push
xor
test
xor
out
push
pop
ficom
out
arpl
test
icebp
mov
cmc
or
pop
out
rol
popa
ins
inc
ja
(bad)
out
cmp
mov
(bad)
div
or
xor
fsubr
cdq
cli
iret
out
rcl
pop
sbb
sub
xor
outs
shl
pop
pusha
sar
inc
rcl
push
cmps
lock
loope
fstp
cmp
(bad)
sub
mov
mov
push
inc
aad
jg
sub
pop
jg
jg
rcr
adc
mov
ds
loopne
push
mov
jmp
jmp
clc
pop
push
mov
jg
(bad)
repnz
and
fstp
inc
test
cmp
call
jp
mov
es
cmp
cmc
lods
rcl
xor
mov
retf
jp
push
sahf
jle
mov
out
jp
mov
inc
dec
stos
cs
add
cmps
fisubr
push
sti
push
sbb
push
adc
enter
pop
or
mul
xor
sar
ins
sbb
loope
pusha
push
jmp
add
rol
gs
mov
and
xchg
mov
mov
les
sbb
jl
(bad)
pop
in
xchg
nop
or
sub
sbb
lods
sahf
inc
dec
xor
xchg
mov
or
retf
jb
in
or
mov
push
(bad)
loope
sub
mov
out
adc
inc
ds
rcr
push
(bad)
in
lds
repz
movs
pop
ret
outs
push
push
jle
mov
dec
aas
sti
adc
std
cmps
sub
inc
pop
jmp
loope
sbb
stos
(bad)
mov
push
jl
mov
scas
fmul
xor
imul
jmp
div
add
in
addr16
loopne
jno
or
inc
xchg
sti
xchg
adc
adc
xor
mov
xor
imul
xchg
mov
jae
xlat
add
jne
ret
repz
call
pop
or
push
adc
ret
push
std
pop
repnz
test
inc
mov
dec
jne
xchg
jns
mov
idiv
mov
and
imul
add
cmc
pusha
sbb
div
ror
addr16
fidivr
sbb
imul
cs
add
push
dec
sub
mov
repz
xchg
shl
idiv
sbb
mov
sahf
sub
push
jmp
jmp
dec
pushf
cwde
ds
mov
push
push
fcmovne
add
adc
lahf
fdiv
jge
mov
movs
(bad)
call
sbb
pop
dec
in
xchg
mov
loopne
sti
enter
ret
push
pop
add
sbb
push
lock
dec
mov
in
test
mov
xchg
add
leave
xchg
enter
inc
push
clc
mov
inc
fdivr
fcmovne
popa
jl
xchg
xchg
inc
xchg
aas
and
adc
arpl
xchg
movs
test
add
pop
pop
(bad)
push
aam
cmps
idiv
pushf
sbb
ds
loopne
lds
stc
call
pop
sar
add
push
(bad)
mov
jmp
or
jecxz
sbb
call
xchg
push
ds
dec
sub
lods
cmp
retf
ss
not
jns
and
mov
jecxz
push
cmp
pop
mov
(bad)
outs
adc
sbb
sbb
adc
sbb
stos
dec
xlat
jb
mov
test
int3
cmp
into
out
pop
mov
cli
in
add
xchg
imul
adc
test
inc
fwait
aad
mov
jb
xchg
push
aaa
retf
stos
mov
xlat
jg
jecxz
call
mov
and
push
(bad)
pop
out
repz
mov
out
cmp
xchg
nop
std
fldcw
pop
xchg
clc
and
imul
rol
jl
mov
mov
add
mov
fiadd
lock
or
xor
aas
xor
cmp
and
inc
inc
ins
aas
mov
ficomp
sbb
or
icebp
movs
add
movs
xchg
mov
cmc
not
cwde
jl
int
(bad)
out
dec
std
icebp
sub
mov
not
in
mov
outs
cmp
and
sub
sbb
mov
enter
test
leave
mov
sub
out
xchg
icebp
pop
(bad)
xchg
(bad)
adc
pop
or
hlt
xchg
sbb
dec
jmp
add
gs
cmp
add
cmp
fmul
stos
xor
pop
cdq
in
mov
mov
inc
out
mov
adc
jle
js
imul
xchg
sbb
pop
psrld
dec
outs
add
fild
enter
cs
and
xchg
xchg
sub
pop
push
sub
push
fldz
cmp
add
cmps
push
rcr
emms
mov
test
mov
icebp
test
shr
inc
mov
and
int3
mov
cli
cmps
pop
jge
jbe
xchg
ret
cmp
(bad)
add
dec
scas
adc
cmp
jne
jl
dec
mov
or
mov
adc
mov
jl
pop
mov
mov
fnstenv
nop
pop
cmp
repz
icebp
cwde
daa
lahf
inc
cmp
sub
inc
daa
adc
fcomp
sbb
pop
sbb
cmp
stos
sbb
fsubr
lods
xchg
sbb
fcmovne
(bad)
jmp
jp
xchg
leave
sub
xor
ret
sar
inc
pop
inc
or
int3
push
scas
add
add
inc
xchg
mov
sub
ss
(bad)
mov
call
in
adc
fsubr
mov
dec
movs
pop
push
fwait
xchg
cmp
je
(bad)
icebp
sti
pop
push
sub
rcr
stos
loope
cmp
dec
movs
nop
stos
sbb
inc
lods
clc
adc
pop
mov
xchg
ja
lods
push
push
lea
out
and
pop
into
sub
shl
ss
push
inc
fidiv
pop
inc
idiv
push
pop
mov
inc
push
cmp
dec
xchg
jb
inc
inc
mov
mov
or
lds
inc
sbb
stc
mov
add
pop
loopne
push
adc
dec
aas
loope
pop
sub
fwait
ins
sbb
push
movs
jecxz
mov
sbb
or
inc
jae
movs
xchg
adc
add
cmp
jmp
push
popf
aad
sar
mov
mov
xor
or
out
retf
fnstenv
daa
iret
push
std
test
bnd
cmp
aam
in
sbb
or
inc
xchg
(bad)
ret
daa
dec
sbb
sbb
test
ret
sbb
loop
push
dec
div
call
inc
hlt
mov
ret
add
or
jbe
pop
pop
pop
jp
sub
inc
test
aad
mov
jne
jg
mov
mov
pop
cmp
in
pop
sahf
mov
cmc
pop
nop
pop
pop
push
push
mov
cmp
scas
in
call
pop
jl
loopne
iret
mov
adc
inc
call
mov
lods
push
es
test
nop
adc
ja
(bad)
lds
hlt
test
retf
into
std
pop
pop
ja
nop
ins
frstor
xchg
mov
and
dec
pop
js
inc
xchg
jns
shr
dec
pop
outs
inc
inc
inc
adc
les
outs
iret
outs
cmp
jno
mov
inc
arpl
lods
lea
in
lea
cwde
add
movs
aaa
pop
pop
fs
mov
mov
nop
cli
sbb
and
inc
push
dec
jge
or
pop
mov
mov
cmps
mov
mov
push
and
jp
sbb
inc
ret
add
xor
fadd
sbb
and
cmp
mov
div
sub
popf
dec
jne
ror
nop
call
shr
xlat
inc
fist
inc
mov
mov
or
mov
cmp
fmul
test
enter
pop
outs
sbb
xchg
bsr
mov
xchg
sub
jge
xchg
add
data16
inc
lods
fwait
add
loope
and
cmp
xchg
cli
bound
jmp
lods
add
xchg
dec
pop
xchg
sbb
pop
or
mov
and
xor
jne
sub
mov
dec
and
(bad)
jnp
inc
js
jno
sar
push
shl
shr
sbb
adc
pop
shl
add
pop
mov
dec
sub
mov
popa
leave
inc
or
pop
cmp
cmp
std
dec
lea
jle
repnz
xchg
adc
scas
popa
das
hlt
mov
push
bswap
fstp
cmp
in
sahf
and
dec
push
int3
mov
sub
and
or
jmp
std
out
xor
vcvtsd2si
mov
imul
pop
push
add
push
jmp
mov
call
rol
stos
movs
sahf
pop
mov
jmp
ins
sub
in
sbb
dec
cmp
jae
cli
sar
mov
jg
pushf
bound
add
(bad)
leave
sub
mov
sbb
lea
out
cmps
(bad)
cs
mov
adc
pop
xor
mov
xor
out
sub
int
push
fidivr
sub
xor
pusha
mov
push
fiadd
mov
pop
adc
jo
xlat
xchg
jle
pushf
xchg
rcr
into
shl
adc
sub
or
mov
icebp
out
fs
fwait
xchg
push
dec
cs
movs
mov
jmp
rol
popa
cli
add
cld
rol
out
int
adc
(bad)
pop
inc
jg
mov
dec
shr
jbe
cdq
ret
adc
jae
push
xchg
pop
xchg
je
xchg
pop
(bad)
dec
js
out
xor
aam
out
jge
sub
add
cmc
addr16
clc
xor
imul
xchg
addr16
in
xchg
lods
cs
sbb
inc
gs
clc
fadd
push
nop
sbb
xchg
xchg
data16
lahf
test
(bad)
ss
aad
ds
adc
mov
sub
mov
fdiv
cmp
and
mov
jmp
test
stos
arpl
cmp
test
sub
xor
push
int
dec
(bad)
mov
add
fidiv
pop
jmp
push
(bad)
and
jns
mov
outs
jp
mov
test
shr
ret
cmp
aaa
mov
outs
push
inc
add
add
dec
pop
popa
sub
lock
inc
or
dec
test
nop
movs
inc
hlt
and
inc
inc
lea
setl
out
xchg
js
ja
inc
loopne
sbb
dec
sbb
adc
sub
sub
(bad)
out
das
or
ficomp
and
sbb
jge
mov
cli
push
cmc
mov
aam
(bad)
clc
cdq
adc
mov
sub
cs
or
js
das
test
shl
jmp
xchg
(bad)
ror
sub
rcl
out
loop
mov
and
retf
jae
xor
cmp
leave
cdq
repnz
inc
cmp
push
popf
mov
add
push
(bad)
rol
jge
or
jmp
sar
mov
mov
in
pop
sbb
into
or
fcmovb
hlt
mov
sub
jg
xchg
xchg
xchg
je
jns
sbb
(bad)
stos
inc
aam
(bad)
and
jo
cmp
rcr
dec
dec
repz
pop
cwde
pop
aad
cmc
test
ret
inc
cmp
add
aaa
dec
repnz
fsubr
packsswb
inc
xchg
sbb
or
mov
cmp
pop
enter
push
pop
cmps
xchg
mov
fidiv
test
jns
outs
or
add
mov
sub
out
xchg
pop
retf
jnp
push
add
(bad)
(bad)
loope
stc
test
pushf
dec
retf
sbb
das
sbb
push
int
fdiv
xlat
fisttp
out
(bad)
inc
cwde
sahf
retf
sbb
push
cmp
fwait
adc
js
pop
xor
or
dec
ret
jne
push
repz
mov
mov
out
cmps
pop
fdivr
aas
mov
imul
test
push
adc
outs
shr
xchg
fimul
xchg
cmp
in
(bad)
addr16
movs
outs
ins
outs
add
mov
leave
adc
cld
add
add
or
sub
jmp
cmps
pop
icebp
lea
mov
nop
daa
mov
ds
inc
cmp
loope
sahf
sub
jg
(bad)
jnp
sub
shl
loopne
pop
cmps
test
popf
adc
fs
mov
push
cmc
mov
outs
stos
aad
xchg
(bad)
sub
sbb
arpl
(bad)
call
les
sbb
adc
or
aaa
(bad)
into
stos
addr16
dec
ss
aas
test
icebp
ror
shr
pop
mov
pop
call
adc
(bad)
div
mov
cmp
ret
or
fisttp
test
ja
mov
pop
mov
add
cmc
rcl
stos
xchg
xor
xor
inc
shl
(bad)
or
loop
pusha
ffreep
addr16
cli
leave
imul
push
(bad)
cmp
sbb
and
adc
sub
outs
dec
je
jmp
push
xchg
int
and
xor
shl
test
or
fisubr
or
and
(bad)
pop
test
popa
or
push
or
jmp
inc
mov
outs
pop
jecxz
cmp
and
mov
stos
sub
aad
fwait
dec
cld
cld
std
inc
pop
ja
or
mov
(bad)
xor
mov
mov
cmp
dec
cmp
imul
jae
out
jmp
clc
in
fucom
int3
out
out
xchg
imul
cmp
sbb
loope
not
rol
dec
stos
adc
sbb
adc
pop
clc
lds
and
ret
sub
out
dec
loope
sbb
inc
loope
mov
fld
cs
std
cmp
mov
clc
jno
shl
retf
mov
scas
sub
jnp
mov
aaa
jl
xor
push
mov
imul
jecxz
mov
jg
ins
outs
mov
cli
xchg
adc
mov
jmp
push
cmp
jns
pushf
icebp
xchg
enter
ds
or
dec
inc
lahf
(bad)
xor
jae
pop
lahf
(bad)
cli
pop
adc
jg
cmp
sbb
add
dec
pushf
mov
out
or
xchg
es
or
jg
pop
cwde
(bad)
stc
sti
(bad)
mov
mov
adc
jge
xchg
mov
mov
leave
or
gs
mov
(bad)
mov
mov
mov
fwait
jnp
shr
xchg
stos
mov
xor
cmps
cmp
sbb
push
pop
or
inc
mov
ins
pop
sbb
pop
aam
xchg
jle
inc
lea
enter
cld
das
test
push
sbb
in
or
mov
xor
push
shl
add
stc
xor
sbb
mov
lods
pop
ficom
push
and
jnp
jge
data16
hlt
sub
int
mov
pop
rcl
or
push
jbe
scas
(bad)
(bad)
call
sbb
addr16
dec
mov
jl
inc
(bad)
popf
fisubr
sub
cdq
jae
(bad)
cwde
dec
and
inc
sub
dec
pop
or
push
push
sub
in
stos
pusha
out
(bad)
repz
sub
ss
inc
icebp
stc
jge
pop
xor
and
inc
adc
shr
movs
or
jb
shl
jl
inc
sti
ficomp
jecxz
sub
div
lahf
dec
jno
into
push
and
mov
call
(bad)
arpl
jge
xchg
outs
mov
jb
jb
call
pusha
adc
jo
pop
scas
stos
push
lea
pop
sub
sub
cdq
xor
je
push
xchg
xchg
jb
(bad)
push
out
push
shl
jg
push
out
lods
jle
int
push
jae
repz
xchg
mov
mov
in
pop
pop
loop
in
push
xor
pop
push
imul
sub
in
inc
cmps
dec
(bad)
xlat
jae
adc
dec
es
mov
retf
adc
test
das
das
fs
bound
lock
std
xchg
ins
add
or
into
pop
lea
fnstenv
sub
popf
xchg
dec
test
aam
mov
mov
mov
retf
sub
jmp
stos
push
sub
leave
pop
test
bound
call
je
push
mov
loope
jae
adc
enter
leave
or
lds
addr16
not
sbb
es
xchg
sub
loope
push
jmp
sar
fld
pop
pop
std
cmps
cld
ftst
dec
mov
and
movs
cmp
cmp
(bad)
push
fwait
sub
fidiv
cmp
ins
movs
mov
sbb
movs
pop
dec
test
data16
(bad)
test
test
in
jb
inc
jle
and
arpl
push
(bad)
daa
ret
inc
das
mov
add
fwait
fs
bound
push
mov
dec
stos
mov
jo
pop
dec
enter
xchg
stc
or
daa
in
lods
sub
ss
into
or
(bad)
adc
mov
sub
or
push
mov
adc
ror
imul
pop
inc
adc
cmp
adc
mov
and
dec
loope
call
and
inc
je
aam
mov
pop
xor
jmp
adc
sub
jg
es
xor
out
and
xchg
sbb
or
fucomi
out
cmp
mov
les
push
je
sti
lods
sub
add
xlat
mov
out
push
je
rcl
mov
inc
ds
cmps
and
fs
cmp
mov
scas
sti
mov
int3
push
retf
in
cmps
mov
repz
rol
in
sbb
sahf
sub
aaa
test
or
xor
lods
in
ins
lea
retf
sar
push
dec
cmps
and
sub
mov
lock
mov
pop
leave
cmp
mov
cmp
in
inc
add
(bad)
xchg
cs
mov
lods
xlat
and
shr
lods
leave
rcl
icebp
sahf
dec
add
fcmovne
icebp
xchg
gs
shl
loop
sbb
fsubr
mov
xchg
adc
mov
mov
in
in
outs
(bad)
out
sub
imul
xchg
adc
xchg
dec
data16
popf
pop
dec
and
sbb
and
sti
mov
out
daa
jp
pop
push
inc
lea
inc
mov
xchg
add
jbe
cmps
addr16
mov
mov
cmc
std
inc
sub
call
gs
rol
dec
xchg
int3
xor
xor
mov
xchg
clc
mov
loopne
cmp
xchg
jbe
lods
fistp
adc
pop
aaa
push
push
scas
add
popa
cmp
or
data16
(bad)
jg
mov
scas
or
or
dec
pop
arpl
(bad)
data16
sub
inc
and
test
movs
je
pop
cmp
mov
pop
cmp
ins
sbb
jo
add
add
or
fwait
test
dec
jne
popf
or
in
sub
call
iret
int3
push
push
inc
mov
shl
sbb
pop
sbb
push
push
inc
adc
setno
and
adc
cmp
lahf
out
or
ftst
(bad)
mov
dec
cwde
ficom
or
mov
sub
mov
xchg
cdq
pop
(bad)
inc
cmp
scas
(bad)
out
dec
movs
clc
ss
hlt
inc
(bad)
aam
adc
xor
sbb
(bad)
dec
push
sbb
mov
ins
das
jbe
mov
dec
push
dec
mov
lods
mov
out
pop
xchg
and
out
add
fadd
sahf
(bad)
mov
cmp
adc
pop
rcl
ret
sahf
pop
push
aad
ret
mov
dec
jno
pop
int3
push
cmp
daa
mov
pop
ror
in
and
jno
shl
and
jg
pop
jo
xchg
in
ret
ins
mov
gs
inc
sub
js
jnp
ja
jb
lods
fwait
rcl
cmp
sub
add
and
jno
jp
jnp
adc
js
inc
xchg
sti
lock
bound
cs
mov
js
xchg
inc
(bad)
int
jp
mov
push
loop
daa
sti
add
add
lea
(bad)
mov
mov
fisttp
pop
lock
(bad)
clc
inc
mov
rcr
pop
xchg
popa
or
loopne
lock
dec
in
adc
and
mov
sbb
mov
shl
dec
xchg
xor
aaa
sbb
in
xchg
dec
hlt
jb
cmp
out
adc
fisub
lfs
xchg
nop
pop
sub
jecxz
pusha
sbb
or
sub
jp
repnz
cmp
or
mov
dec
out
imul
sub
in
mov
mov
aad
adc
inc
dec
int
lds
addr16
and
test
cmp
into
inc
or
aam
hlt
loope
ret
test
xor
cmc
jle
daa
push
lahf
sahf
xchg
sub
in
jo
retf
int3
cmps
stos
dec
sbb
mov
retf
pop
pushf
outs
adc
loopne
(bad)
add
test
in
inc
and
sub
stc
sbb
mov
out
push
stos
xor
nop
add
sbb
xor
xchg
lea
out
cmps
ret
ret
dec
cdq
pusha
fucomi
and
jmp
pop
jne
xor
stc
cmp
inc
das
stc
push
(bad)
arpl
push
js
repz
mov
cmp
je
rcr
out
mov
inc
dec
pop
add
ret
mov
inc
mov
inc
mov
mov
mov
(bad)
(bad)
push
fs
mov
cmps
js
cmp
aas
shr
mov
xchg
mov
cs
or
mov
mov
cwde
loopne
xchg
add
ja
mov
inc
cmp
(bad)
sahf
(bad)
out
(bad)
js
test
mov
pusha
pop
movs
cmp
sahf
pop
push
adc
addr16
out
aad
lahf
daa
push
cmp
jl
pop
ficom
mov
cmc
out
sub
inc
dec
dec
ftst
inc
cmp
xchg
movs
int3
pop
imul
or
pop
or
into
nop
xor
gs
jg
xor
dec
mov
sbb
mov
fisub
sti
test
sbb
sub
xchg
cmp
sub
test
mov
je
clc
xor
mov
lock
imul
fld
imul
cmp
mov
sub
je
loope
(bad)
in
mov
outs
sub
(bad)
ret
xor
iret
in
xor
adc
xchg
add
pop
pop
das
cmc
mov
fld
fdivp
or
call
sbb
xchg
adc
mov
inc
int3
add
mov
dec
or
adc
cmp
pop
add
jno
iret
jecxz
shl
mov
adc
sahf
cwde
les
and
sub
dec
mov
inc
setae
and
fdivr
xchg
pop
mov
jecxz
push
inc
je
(bad)
clc
add
xchg
mov
ret
les
test
into
ins
pop
sub
jp
vsqrtsd
xlat
push
push
push
mov
sar
mov
mov
sbb
popf
mov
in
mov
sub
loopne
loopne
call
pusha
cmp
aam
jl
fcomp
sbb
and
sti
pop
jo
cs
jae
xlat
(bad)
xor
sbb
bound
push
daa
jb
fs
ds
sub
and
sub
xchg
retf
push
or
jnp
lock
ds
shl
fs
aas
push
outs
inc
dec
and
jp
sub
fdivr
in
dec
gs
(bad)
(bad)
push
adc
push
pop
mov
add
mov
in
js
inc
xor
outs
xor
ret
or
add
lods
addr16
or
fimul
std
push
rcr
dec
shr
int3
mov
mov
push
mov
lock
jmp
add
icebp
cmps
xchg
fwait
stc
xor
push
stos
mov
out
dec
dec
adc
pop
pop
xchg
jnp
loopne
push
inc
fs
outs
jg
or
dec
xor
push
xchg
cmp
mov
jle
sub
jmp
(bad)
mov
xor
ss
mov
pop
in
cmp
mov
pop
cmp
cmps
or
jmp
mov
jo
inc
in
ret
mov
or
adc
add
in
jno
push
test
dec
sub
pop
cmp
movs
sar
add
cmp
add
dec
test
jae
in
(bad)
xchg
cmp
sub
adc
mov
retf
add
icebp
call
aam
cmps
call
lds
xchg
adc
cmc
sar
popa
adc
mov
cs
(bad)
lock
push
xor
dec
add
pusha
or
inc
add
sti
fdiv
test
mov
cmp
mov
mov
cmp
sub
fidivr
mov
pop
fxch
mov
retf
push
ja
xchg
rdmsr
gs
jl
jns
pop
lahf
mov
icebp
repnz
aad
adc
adc
mov
mov
stos
loopne
mov
mov
es
mov
pop
packuswb
mov
loope
xchg
ffreep
xchg
push
mov
xor
push
sub
pop
jmp
ja
enter
cmp
fcom
mov
xchg
leave
mov
mov
ja
pusha
mov
push
mov
sbb
lods
mov
mov
or
mov
jmp
xchg
jmp
cmp
and
inc
test
cmc
retf
out
jbe
(bad)
sar
pop
cmp
add
outs
lea
arpl
rcl
push
retf
dec
imul
pop
mul
fistp
xor
loope
add
sub
iret
pop
call
xchg
aas
cs
es
jo
loope
fs
lea
xor
mov
dec
retf
or
push
lea
adc
(bad)
(bad)
adc
sub
aad
ins
pop
in
xchg
jne
jp
mov
xor
and
out
mov
lods
ret
pop
dec
jno
jo
mov
not
xchg
or
xchg
xchg
xor
dec
mov
dec
dec
repnz
dec
push
cmp
and
adc
jmp
imul
scas
rcl
fdivr
out
loop
or
lds
push
pop
rcl
inc
jnp
inc
jmp
ds
xchg
xlat
inc
adc
inc
adc
or
iret
inc
ja
inc
pop
jge
inc
scas
(bad)
jns
push
push
or
lods
sub
loopne
sbb
(bad)
shl
sbb
xor
clc
nop
popf
sbb
repnz
stos
xchg
fcom
fiadd
mov
loope
pop
xlat
jbe
adc
push
dec
adc
(bad)
inc
cmp
mov
adc
scas
add
repnz
ret
or
inc
add
fild
cmp
sub
xor
adc
lods
daa
jle
clc
fsubp
sbb
or
ja
ficomp
push
mov
jbe
mov
push
std
stos
push
in
rcr
push
out
loopne
mov
aas
test
adc
in
daa
dec
sbb
movs
cmp
adc
in
out
and
xchg
daa
and
scas
sbb
add
sbb
mov
ss
icebp
aaa
ffree
and
(bad)
fcom
mov
(bad)
jmp
les
les
lods
pop
inc
popa
xchg
movs
adc
das
mov
ret
into
dec
mov
sub
arpl
sbb
mov
mov
icebp
or
mov
ret
cwde
retf
fs
shl
sbb
je
xor
mov
stos
add
fstp
xchg
cmp
adc
stc
xchg
pop
dec
aas
adc
lock
and
pop
adc
mov
lods
in
xor
sahf
pop
push
popa
push
push
sub
mov
daa
lahf
ret
xlat
pop
or
test
xor
or
in
add
lock
cdq
push
xchg
add
jl
mov
gs
jbe
jne
dec
rol
into
out
inc
jne
ret
inc
mov
out
stos
push
xchg
cmp
outs
xor
iret
jae
xchg
ins
push
mov
ror
daa
jb
loopne
jns
sti
inc
mov
fcomp
(bad)
cmp
sbb
push
push
popa
or
mov
push
sbb
xchg
retf
xor
ficomp
fisub
mov
xchg
(bad)
out
sub
add
jp
push
push
mov
mov
add
push
dec
lods
scas
scas
inc
cwde
jecxz
mov
jbe
cmp
mov
cmp
daa
jecxz
or
mov
inc
add
jl
aad
daa
loop
push
fidivr
and
xchg
nop
cmp
daa
xlat
mov
ds
loope
sar
lahf
adc
pusha
sbb
pusha
scas
jnp
fcomp
shl
popa
adc
add
mov
sahf
inc
mov
pushf
mov
nop
sbb
faddp
mov
fisub
mov
add
loop
sub
pop
mov
bound
enter
iret
mov
pushf
dec
test
adc
mov
mov
xor
out
lea
ror
hlt
mov
mov
mov
(bad)
push
data16
addr16
inc
add
aaa
xor
repz
or
push
out
gs
nop
loope
gs
mov
std
add
(bad)
fldenv
fcom
jg
sub
ss
or
vpackssdw
lods
sbb
dec
into
retf
mov
imul
cs
pop
sti
outs
gs
dec
ror
xchg
cld
xchg
xchg
fdiv
(bad)
movs
or
xor
push
lods
sub
fistp
mov
scas
sub
cmp
lock
inc
xor
in
or
bound
scas
mov
push
jbe
jle
or
outs
(bad)
sahf
mov
push
lea
pop
cwde
in
repz
jge
fcomi
out
test
(bad)
cmp
(bad)
sqrtps
(bad)
xlat
xchg
fdiv
(bad)
add
bound
sahf
xchg
pushf
test
sbb
adc
stc
xchg
cwde
pop
or
outs
push
jne
adc
mov
js
loopne
cmps
and
fcmovne
ins
in
xchg
stos
sbb
out
(bad)
push
pop
ret
xor
push
lds
mov
push
iret
test
clc
push
fstp
mov
mov
ss
cmc
(bad)
loopne
pop
(bad)
stos
je
push
arpl
push
or
leave
ret
mov
les
add
add
scas
(bad)
nop
adc
bound
xor
arpl
xchg
addr16
sub
sahf
fwait
mov
mov
cmp
mov
out
data16
jl
inc
and
mov
stos
outs
mov
dec
push
int3
mov
ret
mov
mov
jns
dec
in
mov
(bad)
jg
mov
mov
xor
lahf
sbb
in
jecxz
mov
pop
inc
sub
dec
into
mov
add
inc
rsqrtps
push
out
fisttp
mov
sti
clc
out
retf
popa
pop
push
das
mov
add
xchg
iret
push
clc
xor
(bad)
mov
sub
mul
push
adc
(bad)
repz
jmp
sbb
add
pop
test
cmp
(bad)
sbb
xor
jl
jne
ins
cwde
loopne
mov
lock
pop
fidiv
les
ror
(bad)
dec
and
repz
cmp
cli
pop
retf
dec
movs
(bad)
sub
xchg
gs
out
out
dec
mov
jbe
mov
lds
ror
add
mov
xor
cwd
pop
push
shr
stos
or
push
or
ret
and
push
inc
test
sub
cmp
mov
test
mov
cmp
or
and
outs
ja
(bad)
and
sbb
in
inc
retf
xor
jne
(bad)
outs
dec
jp
aaa
adc
ds
mov
stos
out
jp
in
cmp
in
dec
(bad)
call
add
lea
fisub
(bad)
mov
stc
jl
bound
repz
shr
mov
cmp
mov
mov
inc
push
mov
mov
xchg
push
push
push
mov
pop
and
adc
sub
lock
jbe
inc
aam
arpl
dec
jecxz
dec
add
mov
das
repz
sub
add
dec
push
out
(bad)
in
outs
fistp
xor
xchg
sbb
dec
pop
stos
inc
je
test
out
xchg
fadd
jno
std
adc
in
push
push
mov
or
movs
xchg
aas
xor
xor
ins
push
push
inc
(bad)
sub
popa
mov
cmps
sbb
or
gs
movs
in
lds
dec
mov
gs
mov
ficomp
xchg
cmp
mov
or
mov
dec
xchg
adc
rol
mov
repnz
xchg
inc
inc
rcr
inc
fdiv
push
scas
int
sbb
mov
aas
pop
and
sbb
jmp
in
pushf
xchg
mov
clc
mov
cs
pop
xchg
pop
std
xchg
int
jnp
out
retf
fstp
push
(bad)
push
mov
adc
ins
cmp
cs
out
jecxz
aaa
loopne
fcom
mov
sbb
mov
jmp
adc
xor
jmp
sub
fild
enter
pusha
daa
jle
jno
cmp
sti
mov
(bad)
adc
cmc
movs
push
dec
mul
pop
add
dec
jno
rol
push
jge
adc
adc
sub
cmp
not
pop
push
test
inc
shl
jne
or
jmp
adc
jb
in
xor
sub
icebp
mov
cmp
lock
jae
mov
arpl
int3
inc
xor
and
sub
in
cdq
popa
hlt
loope
jmp
out
sbb
fcom
sbb
sbb
loop
(bad)
stos
in
sub
rcl
jg
dec
out
movs
ficom
sub
std
mov
pop
jg
(bad)
mov
inc
adc
repz
int
cwde
out
(bad)
les
jge
add
mov
mov
pop
(bad)
out
in
xchg
mov
sub
or
fs
movs
and
dec
mov
jnp
jmp
push
mov
mov
mov
pop
jae
ret
adc
mov
in
fdiv
(bad)
fwait
adc
cs
xlat
pop
shr
call
adc
lahf
jae
lods
pop
adc
or
repnz
xchg
sbb
clc
clc
mov
sbb
cmp
lahf
jmp
xchg
mov
int3
mov
or
cmp
outs
mov
inc
mov
data16
dec
adc
repnz
mov
js
lea
loopne
add
stos
enter
xchg
mov
jecxz
scas
mov
ss
in
div
test
cmp
sbb
push
data16
call
jae
add
lods
js
int
xor
xlat
jl
lock
adc
aad
imul
ins
and
ins
add
arpl
ins
and
or
imul
add
mov
mov
xor
add
mov
push
sti
jge
test
ret
fild
(bad)
test
hlt
jae
test
mov
mov
push
(bad)
sahf
dec
fcmovnu
les
pop
pop
retf
int3
adc
test
aam
dec
or
lods
sub
imul
seto
data16
stos
cwde
mov
inc
push
mov
out
jae
stos
adc
xchg
scas
ds
arpl
lahf
out
inc
mov
iret
aas
mov
cmp
aas
and
and
sub
jae
mov
dec
push
out
(bad)
dec
in
fadd
mov
sub
jb
cmp
ds
push
jno
sub
inc
jle
inc
adc
sbb
push
mov
mov
cmps
jne
jb
std
jb
cwde
dec
and
xchg
mov
jns
loope
or
hlt
and
jl
int
loop
ror
aam
adc
lods
pusha
fs
and
mov
or
cmp
sub
jns
mov
and
add
xchg
add
jmp
push
test
cmp
sbb
push
call
movs
iret
in
add
mov
dec
jae
adc
mov
pushf
cmp
add
mov
push
pop
push
dec
cmp
aaa
scas
pop
xchg
call
icebp
mov
aad
imul
dec
sbb
test
push
jg
sar
push
jae
jno
push
push
jns
scas
rol
shl
dec
mov
imul
dec
xor
shr
repz
in
pop
call
aaa
in
lds
pop
bound
(bad)
not
stos
xor
cmp
cmps
daa
(bad)
clc
shl
sar
fs
push
out
arpl
jbe
loopne
cs
cmps
push
adc
cmc
mov
retf
idiv
cmp
dec
or
push
fstp
sbb
inc
and
or
arpl
xlat
jmp
in
xor
fistp
inc
nop
ins
pop
fisub
inc
adc
mov
scas
jge
retf
mov
sbb
add
das
pop
fcom
rcl
push
out
push
push
push
leave
mov
cmps
mov
pop
adc
and
add
dec
adc
mov
mov
nop
xor
inc
dec
dec
pop
sar
out
mov
movs
iret
pop
pop
adc
inc
les
(bad)
rcr
mov
repnz
out
cmp
leave
mov
mov
popa
xlat
(bad)
je
loopne
and
sbb
sbb
jno
loopne
sub
sbb
stos
je
loopne
cli
(bad)
(bad)
adc
and
les
mov
mov
push
jne
pop
xchg
cmp
mov
(bad)
outs
out
aam
fimul
cmp
fnstenv
aam
sub
dec
inc
inc
jp
jae
jmp
cmp
inc
pop
xor
dec
pop
leave
enter
and
pop
scas
xchg
je
and
lods
cmp
je
mov
pop
fstp
popa
leave
pop
xor
xchg
pop
mov
mov
(bad)
jp
cdq
push
mov
mov
aas
test
in
adc
or
sub
lock
sub
add
or
fisubr
xchg
lods
nop
popf
pop
mov
inc
jge
jbe
adc
and
pop
test
fs
lods
aad
lods
pop
jae
xor
sub
or
inc
inc
xor
cmp
sbb
mov
fist
ja
dec
fdiv
shl
and
or
into
mov
mov
in
fwait
les
cmp
lea
jae
std
or
inc
ins
cmp
sbb
gs
stos
dec
mov
fmul
jae
mov
lds
sub
aas
xor
js
inc
loope
jg
idiv
inc
sbb
xor
adc
jmp
jb
adc
dec
or
sbb
test
mov
adc
stos
jno
pop
push
shr
fist
add
add
mov
lock
and
pop
fild
mov
sbb
dec
pushf
sahf
sub
sbb
lods
shr
push
pop
or
call
fwait
or
mov
(bad)
cs
call
xlat
pop
dec
std
or
push
js
outs
cmp
test
shl
rcr
lea
movs
imul
mov
jl
and
push
ror
ss
aas
in
add
pop
je
mov
push
jno
lds
mov
xchg
push
inc
mov
ror
repnz
cmp
and
hlt
jnp
test
dec
mov
mov
jle
pop
rcr
(bad)
mov
pop
lods
dec
mov
or
fmul
mov
pop
mov
push
pop
shr
cmc
popf
xor
(bad)
push
cmps
jnp
dec
lock
adc
ins
jmp
sub
out
sub
jmp
sbb
sub
mov
push
jae
xlat
xchg
xor
adc
ror
lds
mov
call
mov
sub
cld
jmp
rcr
mov
aaa
add
xor
nop
in
add
int
lods
mov
mov
mov
je
int3
mov
lods
lahf
repnz
adc
xlat
inc
sbb
jge
test
retf
in
lods
fidivr
gs
mov
out
into
(bad)
push
dec
cmp
mov
sub
xchg
cmps
cmp
fadd
cdq
imul
xchg
mov
pop
cmp
cmc
int3
adc
inc
adc
push
mov
imul
dec
jae
inc
mov
lea
stos
mov
and
fild
jnp
mov
js
mov
outs
xchg
xchg
adc
push
ja
sbb
dec
aas
outs
gs
jb
arpl
push
sbb
jle
loop
and
aaa
inc
jno
fcomp
std
cli
repz
pop
mov
xchg
jmp
xor
stos
aas
(bad)
aas
repz
mov
nop
aas
jecxz
adc
rcr
dec
pop
ins
inc
pavgb
out
add
pop
xchg
shl
dec
loop
sub
mov
sub
das
dec
cmp
lods
repz
stc
xor
stos
or
pop
scas
mov
js
cmp
mov
hlt
xor
pop
jp
ins
lahf
jo
push
(bad)
jmp
call
adc
xchg
push
jl
pop
xor
jb
test
mov
jns
pop
inc
dec
ret
push
push
jbe
mov
and
xor
jle
jmp
cs
inc
mov
icebp
lock
or
(bad)
out
jnp
cmps
fstp
mov
mov
mov
mov
dec
(bad)
jle
int
mov
xor
pop
xchg
mov
cmps
pop
push
mov
scas
push
inc
adc
clc
repz
(bad)
pop
arpl
fwait
sub
loope
fisttp
mov
xchg
jl
scas
pop
cmp
idiv
pop
adc
sbb
ffree
nop
adc
inc
cmp
pop
cmp
mov
sbb
push
out
icebp
or
rol
xor
gs
in
mov
mov
jle
xor
jb
daa
mov
jno
in
enter
idiv
je
sub
clc
mov
dec
mov
and
ins
lea
mov
aas
fbstp
(bad)
adc
dec
jnp
mov
out
xor
outs
push
shl
popa
mov
jg
xor
not
aaa
outs
sahf
(bad)
mov
mov
sub
and
and
cmp
jmp
loope
sbb
sbb
jmp
cmp
add
mov
pop
shl
lea
dec
daa
mov
jmp
inc
ss
popa
leave
int3
xchg
repz
jns
shr
data16
and
iret
ret
arpl
pop
inc
(bad)
or
dec
bound
loop
dec
lahf
mov
sahf
test
dec
test
adc
push
mov
cmps
int3
mov
jg
leave
call
dec
sbb
cdq
in
inc
(bad)
ror
inc
shl
cmc
scas
outs
scas
ins
popf
jmp
inc
lock
xor
in
pop
(bad)
xor
pop
lds
cs
in
cmps
jmp
sub
cmps
enter
fstp
pusha
jbe
and
loop
ss
push
dec
inc
inc
push
jp
loope
xchg
and
xchg
hlt
xor
outs
cmp
pop
into
jp
test
fwait
sub
xchg
cmp
pop
push
xor
xchg
leave
mov
sub
fiadd
fwait
xchg
fadd
out
xchg
pop
jne
xchg
cmp
xchg
das
rcr
ins
pop
sub
jne
repnz
int
or
pop
push
xchg
ret
cdq
scas
pop
cmps
int
or
mov
enter
(bad)
lahf
inc
sbb
test
mov
cmp
mov
out
sbb
pop
lods
adc
std
mov
test
adc
pop
popa
pop
shr
and
dec
pop
in
dec
ja
repz
outs
xchg
rol
outs
sar
push
stos
pop
cmp
add
pop
push
retf
es
test
sub
push
jo
daa
cdq
fdivr
push
loop
out
int3
addr16
pusha
push
pop
imul
jmp
inc
sub
pop
les
mov
out
fwait
lods
scas
cmc
sub
adc
lock
fcom
popf
push
mov
and
cmp
jl
fnstcw
push
or
mov
sub
test
adc
es
push
ja
xchg
xchg
ins
fsubr
sbb
and
idiv
xor
enter
inc
(bad)
adc
(bad)
xor
push
jb
addr16
adc
inc
adc
and
in
sub
push
add
adc
dec
mov
jnp
jl
jnp
pusha
ds
ins
add
mov
adc
out
hlt
xor
sbb
cwde
adc
(bad)
in
gs
jbe
xchg
xchg
iret
dec
popf
aas
push
dec
jae
mov
and
fbld
(bad)
fnstenv
or
clc
mov
lods
(bad)
pop
cmc
stc
mov
adc
cmp
xchg
cwde
(bad)
out
add
sbb
jge
pop
fyl2xp1
movntq
mov
icebp
lds
dec
fiadd
inc
dec
cmps
mov
mov
mov
inc
fld
ins
js
ss
sti
cdq
aaa
(bad)
int
xor
jge
adc
inc
xchg
push
mov
dec
push
rcr
fwait
pushf
sbb
pop
dec
sub
jl
sbb
in
sub
sbb
adc
cmp
sub
xor
jb
jo
adc
aaa
out
fld
mov
in
xchg
push
dec
popa
maskmovq
sbb
pop
cld
mov
adc
push
(bad)
fwait
mov
retf
jp
xor
inc
add
add
mov
sub
fst
xchg
sti
mov
inc
sub
xchg
inc
pop
pop
adc
inc
mov
fdiv
retf
mov
nop
mov
aas
xor
retf
sub
nop
rcl
push
(bad)
sti
out
std
mov
or
mov
dec
loop
daa
call
ret
shl
aas
ror
mov
es
push
or
push
and
fsubr
in
stos
aas
out
es
js
mov
bound
adc
hlt
js
jns
mov
nop
xor
div
xchg
xor
in
cs
fwait
adc
cwde
mov
into
push
push
sti
icebp
call
stos
(bad)
lods
cmp
and
sbb
shl
aad
add
xchg
mov
jbe
dec
xchg
cmp
popa
faddp
inc
retf
loopne
mov
push
popa
in
in
jmp
inc
jb
or
jae
jmp
imul
mov
xor
data16
lahf
fnsave
jnp
push
test
pushf
xor
mov
imul
hlt
push
add
ret
xchg
fiadd
inc
repz
in
add
push
mov
sub
dec
(bad)
sahf
sub
sub
cld
xchg
sar
js
inc
mov
inc
push
outs
xchg
hlt
lds
outs
je
cmp
icebp
cmp
mov
out
ss
loopne
scas
or
repz
outs
push
out
cmp
xchg
jmp
push
sub
inc
(bad)
adc
xor
add
ss
mov
pop
mov
aam
adc
and
movs
cmc
or
sub
cmp
jmp
ds
cmp
retf
push
rep
popa
stos
xor
push
dec
mov
fwait
inc
push
in
jmp
and
outs
and
or
into
push
push
sahf
xor
jo
scas
xor
retf
cld
pop
out
xor
shl
retf
pushf
nop
popf
jmp
sub
mov
pop
retf
inc
das
(bad)
mov
xor
adc
jae
sbb
xchg
pop
pop
jne
loop
inc
wbinvd
(bad)
fist
or
es
jp
ret
out
xchg
fcomp
cmps
icebp
xor
les
idiv
xor
ins
jmp
jmp
mov
mov
dec
and
mov
jl
test
sbb
inc
or
sahf
mov
shr
div
sub
inc
cwde
sub
push
inc
out
cdq
xlat
adc
imul
xchg
dec
stos
lahf
icebp
call
and
xchg
push
les
popa
mov
jno
daa
and
pusha
xor
mov
xchg
mov
popf
cmp
and
push
jno
inc
adc
dec
cmp
rcr
sbb
clc
add
or
pop
xor
jb
std
dec
or
or
out
push
jno
sti
or
hlt
pop
fcomip
xor
dec
nop
cld
arpl
pusha
fild
add
imul
inc
pushf
xchg
and
hlt
neg
dec
jmp
mov
push
or
adc
pop
cmp
lods
jb
jne
push
sbb
clc
scas
push
out
fcom
mov
(bad)
mov
xchg
inc
jmp
cld
std
cmps
inc
movs
inc
jg
inc
xchg
lods
adc
call
adc
lahf
xor
jecxz
push
es
add
cmp
inc
xchg
or
stc
push
je
sbb
mov
adc
xchg
rcr
pop
inc
movs
push
adc
mov
dec
cmp
push
and
xchg
jo
ins
mov
retf
jecxz
out
pop
add
xchg
mov
pop
and
mov
je
mov
pusha
retf
mov
outs
cmp
inc
adc
in
xchg
imul
call
in
retf
dec
mov
and
xor
mov
std
mov
(bad)
fld
add
mov
int3
data16
fisub
inc
cmp
scas
call
jae
inc
bound
xchg
ret
push
or
movs
mov
pushf
push
out
push
sub
xchg
jg
mov
dec
movs
(bad)
out
xchg
jle
push
dec
dec
cdq
mov
adc
(bad)
clc
inc
pop
xor
ror
out
loope
inc
jecxz
(bad)
std
inc
mov
addr16
test
cmc
and
stc
je
push
sti
cdq
lock
stc
movs
call
iret
pushf
dec
sti
cmp
inc
xchg
ror
into
xchg
in
fisttp
test
sbb
inc
int3
xchg
imul
ss
fdiv
jnp
and
dec
lods
mov
sbb
cs
push
adc
stos
xchg
dec
jbe
cmp
sub
daa
loopne
into
push
int3
imul
dec
mov
mov
inc
jmp
popw
ret
lahf
fistp
pop
pavgw
jnp
repz
mov
push
jl
jns
loop
popf
adc
cli
das
stos
ror
in
fist
cmp
popa
pop
mov
mov
arpl
mov
and
mov
leave
scas
rcl
cwde
movs
and
dec
mov
mov
js
jno
ds
lods
adc
sub
scas
mov
mov
fcmovb
mov
cmc
shl
mov
xor
jmp
(bad)
cwde
hlt
jecxz
or
pop
idiv
inc
retf
sbb
movs
and
xchg
mov
xor
cmc
sahf
mov
sub
inc
movs
mov
sub
retf
mov
pop
push
xor
jmp
fs
in
ins
cmp
sbb
and
ins
jno
mov
inc
xchg
data16
sbb
das
mov
xor
fldcw
sbb
in
and
stos
dec
lods
retf
pop
rol
push
int
inc
xchg
pop
and
push
jl
push
pop
repz
mov
push
stos
jae
pop
fbstp
fwait
push
bswap
dec
std
cdq
outs
push
(bad)
out
fdivr
adc
les
push
inc
iret
pop
pop
mov
mov
scas
mov
xchg
pop
pop
sti
sub
or
push
xor
pop
jns
cld
jb
add
(bad)
ds
aas
or
les
sbb
push
into
js
add
xor
pop
pusha
and
scas
xor
or
rcl
sar
ins
push
pop
mov
sub
into
and
xlat
pop
push
out
call
imul
call
push
mov
sbb
jmp
inc
adc
rol
fadd
mov
sti
inc
cmp
mov
sar
push
pop
pusha
(bad)
jl
mov
fiadd
cmp
and
cmp
dec
xchg
push
pop
push
add
sar
mov
aas
pusha
pop
xor
out
pop
push
xor
mov
dec
push
mov
add
cdq
(bad)
push
jecxz
loop
xchg
adc
popf
xor
pusha
xor
xlat
and
imul
jmp
fidivr
xor
out
neg
mov
mov
jae
pop
and
fwait
outs
fisub
aad
cmps
mov
sbb
mov
outs
outs
adc
pop
ret
mov
(bad)
cmp
aas
cld
hlt
ins
leave
xor
pop
jmp
sbb
mov
adc
fisubr
mov
pushf
clc
popf
push
pop
and
jne
ss
out
and
aam
adc
mov
popa
outs
les
(bad)
and
test
mov
and
adc
inc
jmp
retf
aaa
add
mov
push
dec
dec
and
pushf
rcr
mov
ja
call
xchg
lds
pop
sbb
ins
cmp
out
pop
and
adc
mov
aad
cdq
sbb
push
lods
mov
push
mov
hlt
pop
push
out
lods
cwde
push
mov
in
or
sbb
sahf
fdiv
rol
test
jo
mov
outs
in
popa
jl
push
jb
in
jnp
lock
mov
and
sub
add
dec
sbb
lahf
push
inc
test
inc
lods
fsubp
xchg
mov
mov
jmp
cld
push
xor
jg
add
test
jmp
push
into
jg
or
push
outs
out
gs
daa
ins
retf
into
push
sbb
in
jbe
inc
addr16
cmps
cmps
jbe
and
rcl
mov
xor
imul
mov
mov
mov
popf
into
inc
pop
test
and
shr
dec
leave
jne
in
pop
push
xor
sbb
mov
lds
ds
mov
or
scas
repz
aas
std
add
fiadd
cmc
mov
aad
sbb
pop
push
add
aam
jl
gs
inc
pop
pop
retf
pop
sbb
les
(bad)
lahf
gs
mov
dec
enter
inc
adc
sub
add
imul
pop
(bad)
jnp
xchg
call
dec
jo
cdq
add
xor
sub
cdq
in
jecxz
data16
mov
or
push
int
js
lds
pop
ins
jno
in
stc
push
aad
ins
mov
ds
and
js
pop
jne
sub
cld
stos
push
sbb
retf
(bad)
inc
sub
push
pop
push
push
add
adc
inc
retf
mov
call
mov
xchg
call
inc
loop
cld
mov
ret
inc
pop
mov
mov
push
lods
mov
xchg
mov
nop
sub
loop
mov
jp
inc
call
xchg
aad
in
es
push
jns
retf
mov
das
fnstenvw
gs
add
stc
push
and
mov
push
add
and
and
ror
mov
pop
sahf
xchg
pop
jmp
mov
call
test
jp
popa
jl
pop
scas
dec
fiadd
sub
xchg
out
or
add
inc
xor
inc
or
outs
cmps
iret
retf
pop
cmp
mov
jmp
xchg
fnstenv
retf
(bad)
jns
or
xor
int
sub
ja
fmul
mov
(bad)
iret
(bad)
cld
pushf
mov
(bad)
xor
mov
cmp
dec
cdq
and
inc
add
or
mov
rcl
mov
and
push
outs
inc
push
ins
adc
addr16
push
shl
sbb
dec
ins
call
xchg
xchg
mov
retf
or
shl
jo
das
or
jp
inc
or
daa
adc
fidivr
pop
lock
mov
(bad)
mov
popa
and
dec
add
push
std
daa
(bad)
nop
cli
jns
ins
cmp
aam
(bad)
cmp
cli
xor
inc
xor
or
fs
test
push
xor
mov
ins
aas
(bad)
(bad)
dec
enter
test
sbb
sub
inc
and
cmp
(bad)
adc
or
stos
push
mov
pop
rol
in
push
inc
test
rol
sub
fwait
call
inc
in
inc
push
pop
add
adc
mov
mov
stos
and
xlat
push
or
xor
or
pop
jnp
bound
add
and
or
ja
mov
or
dec
sub
rol
cmp
or
fistp
sahf
push
les
vsqrtpd
or
(bad)
arpl
neg
add
test
aaa
sar
out
scas
shr
in
lds
aaa
in
les
adc
mov
sti
fdivr
retf
mov
scas
cmp
ins
push
add
imul
mov
cmc
cdq
retf
aaa
dec
xchg
lds
pop
fisub
out
xor
ins
in
repz
fistp
jle
(bad)
and
fst
pop
mov
jge
sub
pop
or
jmp
xor
icebp
test
fcomip
outs
icebp
adc
push
ficom
fwait
mov
outs
pop
cs
xchg
popf
mov
pop
lods
or
sub
sti
adc
xor
fld
outs
(bad)
std
test
pop
out
jo
cmp
xor
test
jmp
rdpmc
in
pop
or
addr16
mov
mov
(bad)
retf
ins
outs
mov
jle
xor
mov
enter
sti
push
push
sub
and
loope
cmps
nop
in
mov
add
(bad)
jg
cld
jno
mov
js
cld
jae
ret
addr16
mov
fwait
xchg
adc
test
jg
mov
dec
syscall
loope
shl
aad
sub
inc
dec
jbe
sbb
push
loope
scas
add
push
cmp
sub
pop
cli
xor
ja
pop
add
rcl
jo
repnz
or
xchg
jg
push
(bad)
jmp
aas
repz
push
cs
sbb
(bad)
repz
mov
inc
mov
test
movs
call
adc
leave
pop
sbb
xchg
addr16
xor
in
sub
(bad)
sbb
jp
push
aas
je
movs
repnz
pushf
or
mov
pop
pop
jns
pop
xlat
xchg
push
das
cmp
loope
les
push
adc
push
popf
cmp
mov
push
lods
mov
push
dec
sbb
xchg
push
je
aas
adc
jns
add
cmc
(bad)
xchg
xchg
mov
mov
add
fisttp
jno
push
movs
dec
ins
adc
fyl2x
ss
cmc
sub
xor
inc
inc
adc
(bad)
sbb
shr
xchg
xchg
lock
call
push
cmp
stos
inc
fidivr
mov
scas
jb
outs
inc
dec
loop
dec
addr16
or
rcl
mov
(bad)
(bad)
add
ins
sbb
mov
icebp
sbb
inc
arpl
gs
jnp
out
cmp
nop
ret
arpl
outs
xchg
sti
es
scas
mov
rcl
pop
push
add
adc
jmp
(bad)
clc
push
sub
jne
rol
xchg
push
sub
outs
aam
push
inc
loopne
cmps
fldenv
in
jns
sbb
mov
rcr
cs
adc
fs
test
iret
lock
jle
or
or
sti
inc
fwait
aad
mov
push
add
test
aas
inc
xchg
fcmovnu
outs
jbe
adc
adc
cmp
sub
aam
popf
mov
mov
or
pop
dec
dec
fbstp
cmp
sub
mov
movs
sub
ror
push
cli
das
xchg
jmp
push
stos
loop
push
test
dec
dec
add
push
movs
sub
jno
adc
std
add
jmp
ss
(bad)
jmp
cmp
inc
mov
fst
mov
xlat
adc
(bad)
(bad)
pop
std
rcl
mov
fwait
js
adc
pusha
lods
mov
cli
rcr
dec
out
in
loope
jne
mov
xchg
in
sub
mov
or
aas
sub
test
xchg
push
xor
std
xor
pop
js
mov
int
jp
pop
xchg
mov
test
adc
mov
retf
mov
call
add
sbb
mov
test
cmc
jne
adc
cs
pop
xchg
mov
out
pop
shl
jmp
jle
mov
push
mov
xor
jbe
in
adc
in
inc
in
(bad)
dec
lods
fild
sbb
pop
shr
xor
(bad)
hlt
mov
push
xchg
out
cmp
jle
mov
test
test
or
pop
adc
jmp
stos
das
test
cmp
sbb
push
pop
retf
sbb
pop
mov
outs
push
dec
cmps
mov
(bad)
mov
ja
in
sub
push
shl
popf
neg
in
in
and
out
or
adc
xor
cmp
inc
(bad)
adc
xor
add
sbb
dec
jp
aam
clc
(bad)
push
pop
push
xchg
inc
dec
(bad)
and
repz
test
dec
xchg
inc
dec
xor
es
rcl
xchg
fs
inc
jns
je
add
mov
lahf
mov
cs
or
xchg
test
mov
out
xor
jne
jnp
repnz
sub
add
pusha
hlt
sub
cmps
aas
fild
(bad)
repnz
xor
enter
jg
out
dec
imul
lods
mov
inc
imul
and
add
movs
inc
out
ficom
mov
mov
cmp
jle
loope
loop
push
sbb
push
sub
cmp
dec
xchg
(bad)
fldenv
fsub
(bad)
test
outs
retf
int3
repz
data16
mov
adc
mov
xchg
out
mov
and
(bad)
fwait
cmp
mov
mul
pusha
in
stos
daa
xchg
mov
xor
mov
xchg
js
jl
pop
cli
loope
dec
and
(bad)
js
add
clc
cmp
mov
mov
push
fiadd
inc
bnd
sbb
jl
xor
xor
and
fwait
xchg
jmp
imul
jmp
mov
cmp
jnp
ret
add
push
outs
push
jnp
or
fcom
mov
in
or
scas
nop
adc
push
movs
and
ret
mov
adc
ins
ret
pop
or
(bad)
iret
inc
out
xchg
fwait
shr
(bad)
adc
enter
mov
jp
cmps
pop
or
push
add
adc
out
test
jecxz
add
and
jb
mov
push
jns
rol
and
sar
xor
ror
mov
push
outs
push
cmp
xchg
shl
mov
or
ins
pushf
stos
call
aaa
xchg
(bad)
out
call
dec
popa
fadd
sbb
popa
push
ret
call
jnp
pop
xchg
mov
inc
xchg
sbb
push
xor
pop
outs
sahf
mov
inc
pop
fs
leave
add
jbe
mov
xor
dec
cmp
addr16
imul
ins
outs
dec
push
adc
cld
cmc
ins
fsubr
push
push
das
push
dec
cdq
icebp
fstp
jl
jae
dec
leave
pop
mov
dec
cmps
out
mov
pop
xchg
ja
call
pusha
mov
daa
lahf
jp
in
ds
mov
cmps
jns
add
sbb
xchg
test
add
in
cmps
sub
(bad)
mov
sub
pop
mov
xor
sub
jb
xor
push
cmp
aam
ins
mov
pushf
out
call
pop
jp
pop
(bad)
ret
inc
mov
jne
inc
ja
sbb
(bad)
mul
or
daa
cmp
or
cwde
mov
jno
clc
or
loop
lock
add
ficom
jl
icebp
out
dec
dec
retf
aam
mov
das
mov
imul
or
sub
add
mov
mov
ret
push
clc
and
jg
add
jmp
shl
ja
jl
cli
imul
and
inc
xor
mov
or
add
cmps
sbb
js
gs
and
test
ins
mov
and
popa
call
dec
ins
mov
test
ins
push
icebp
mov
or
in
bound
adc
adc
xchg
cdq
lea
mov
push
arpl
(bad)
jbe
xor
inc
lods
outs
arpl
or
mov
push
int
(bad)
loop
adc
jg
mov
aas
mov
bound
cmps
loop
mov
jne
je
dec
and
jae
mov
sub
xchg
xor
pop
jae
(bad)
dec
jg
lea
lock
leave
add
xor
into
push
loop
cdq
xchg
gs
inc
mov
mov
lds
xchg
fisubr
stos
loopne
into
daa
mov
ret
sbb
inc
cmp
jmp
(bad)
or
jl
xchg
mov
mov
(bad)
mov
jnp
rcl
mov
mov
dec
rcr
(bad)
mov
les
js
enter
cdq
xor
call
pop
repnz
sbb
stos
sub
sbb
jmp
dec
aaa
and
mov
test
test
xor
cmp
outs
xlat
jno
clc
jmp
or
addr16
loope
inc
cmp
mov
and
leave
or
mov
jp
or
fild
mov
mov
es
ss
lea
inc
div
jo
mov
dec
mov
mov
sar
sahf
call
or
push
mov
sbb
inc
das
inc
fldenv
and
or
jl
aam
ja
retf
repnz
push
cmp
call
jns
stc
cmp
in
das
pop
inc
popf
inc
sub
xor
jns
mov
repnz
sbb
inc
sbb
dec
push
shl
and
push
jo
adc
jecxz
popf
push
nop
add
pop
mov
jns
or
in
and
ins
cmp
or
ror
xor
xchg
sbb
push
loop
aaa
pop
mov
inc
inc
sub
std
hlt
mov
clc
ds
les
adc
push
adc
ins
xchg
cmp
cmp
fild
pop
ins
wrmsr
push
jns
ret
outs
lea
xchg
in
jge
xor
inc
xchg
sub
sbb
(bad)
xor
add
xor
(bad)
gs
inc
mov
sub
xor
xchg
add
nop
pusha
cdq
adc
movs
mov
adc
pushf
xchg
mov
test
jl
jbe
pop
sti
mov
hlt
dec
inc
retf
xor
adc
push
in
inc
jl
repnz
jo
loopne
xor
mov
or
jge
inc
shr
or
mov
push
cmps
mov
pop
inc
add
test
stos
je
idiv
push
fnstcw
push
(bad)
leave
loop
loop
daa
sar
cmp
and
cmovns
add
pop
sbb
pop
call
aas
nop
dec
loop
(bad)
scas
not
movs
push
jmp
pop
dec
pop
cmp
mov
(bad)
jg
std
ins
inc
mov
dec
jmp
fsubr
hlt
fs
mov
aam
mov
adc
js
into
ins
(bad)
movs
add
or
sub
test
push
hlt
outs
arpl
clc
int
inc
lock
int
jmp
test
into
cmps
mov
test
add
inc
adc
inc
pop
pop
in
mov
xchg
stos
lea
stc
ss
sbb
ins
in
in
fsubr
imul
ret
push
inc
data16
mov
xchg
adc
ret
add
out
push
loope
jmp
mov
lods
das
mov
loop
and
dec
stc
jg
jae
fisub
jo
mov
mov
mov
or
jg
and
shr
inc
mov
adc
les
int3
pop
mov
in
js
idiv
ret
push
lods
fwait
pusha
xor
(bad)
scas
mov
jle
and
shl
push
outs
shl
iret
repz
fstp
sub
mov
add
cmp
aaa
scas
ret
jp
push
mov
or
in
(bad)
sbb
mov
pop
sub
sub
ds
inc
mov
pop
fs
stos
sbb
lea
xor
(bad)
mov
adc
stos
jno
aas
test
jne
or
jecxz
dec
in
xlat
test
test
push
lahf
test
inc
push
pop
(bad)
inc
sbb
stos
sbb
shl
dec
(bad)
jg
mov
add
ror
xlat
ja
adc
mov
aas
and
call
scas
inc
pop
ins
add
into
scas
ffree
loop
dec
ret
jmp
push
push
adc
push
into
add
mov
call
xchg
add
mov
(bad)
cwde
pop
mov
and
arpl
movs
sti
cmp
fwait
pop
adc
ret
test
sub
dec
dec
(bad)
jb
sub
mov
arpl
outs
inc
mov
in
push
add
inc
movs
adc
adc
call
enter
fimul
not
push
rcr
nop
mov
ret
movs
jecxz
movs
ror
push
sahf
scas
sti
aad
push
pop
xor
loopne
jg
(bad)
test
pop
mov
(bad)
xchg
dec
(bad)
call
xlat
mov
leave
xor
jmp
or
(bad)
jae
mov
loope
(bad)
fs
cmp
call
ins
add
fimul
xchg
ja
bound
jle
cmp
add
imul
xlat
ins
lods
dec
lahf
(bad)
clc
mov
push
fcmovb
stos
and
cmps
add
repz
cwde
call
inc
jmp
cmc
mov
push
test
int3
xor
inc
stc
fucom
mov
xchg
cmc
add
push
lahf
cmp
mov
push
shr
and
fadd
out
push
in
jmp
daa
sub
scas
jge
retf
inc
sahf
mov
dec
jecxz
call
out
(bad)
fldenv
dec
pop
or
mov
adc
xchg
pop
call
add
nop
dec
test
ja
lods
rol
push
pop
mov
sbb
aad
in
jl
gs
clc
adc
sti
pop
and
adc
and
scas
cs
xlat
jp
pop
(bad)
xchg
mov
and
outs
and
xchg
mov
jnp
push
call
in
fbstp
pop
add
rcr
sub
xlat
data16
in
sbb
pop
mov
fadd
jbe
ret
leave
jo
xchg
outs
loope
das
jmp
call
pop
ss
arpl
pusha
mov
popf
mov
add
std
fsubrp
add
jg
jmp
pop
test
jg
mov
pop
das
xor
push
push
int
(bad)
loop
sbb
pop
sub
sub
mov
mov
mov
in
mov
jecxz
and
sbb
push
imul
mov
cdq
add
cmps
rcr
mov
xchg
scas
and
out
imul
push
vminss
xchg
test
dec
xchg
sub
xlat
clc
in
retf
fcmovbe
push
stos
sbb
ficomp
out
data16
inc
or
inc
xchg
sbb
test
add
stos
xchg
push
xchg
int
aas
mov
jns
inc
add
cmp
(bad)
pop
jmp
sub
test
mov
hlt
jecxz
xchg
shl
mov
popa
fstp
enter
aaa
loope
inc
test
(bad)
mov
sbb
inc
cmps
inc
cwde
mov
xor
inc
push
js
repnz
cld
xor
jae
ins
lock
pop
xor
inc
jne
stos
add
and
xor
dec
retf
test
ins
loope
adc
in
cs
outs
lock
dec
mov
aad
mov
cmp
add
jo
test
mov
xor
adc
cli
stc
(bad)
mov
shl
into
std
xchg
repnz
mov
nop
mov
mov
(bad)
rep
and
sub
mov
rcl
(bad)
arpl
adc
mov
(bad)
sbb
fisub
mov
xor
stos
push
test
and
push
xchg
ins
test
imul
cmp
mov
test
dec
add
sub
pushf
je
jmp
adc
cmps
mov
daa
icebp
idiv
mov
push
mov
repnz
mov
aaa
shr
pusha
cmp
in
rcr
sub
outs
xor
stc
adc
xchg
mov
ss
adc
retf
(bad)
pop
mov
pop
aam
pop
call
jne
push
cld
mov
retf
pusha
ss
inc
add
inc
mov
data16
push
test
popa
(bad)
bound
mov
pop
adc
pop
xchg
fst
sub
mov
cmp
pop
es
pop
xchg
mov
in
adc
dec
mov
cmps
mov
shr
cli
or
movups
sbb
loopne
adc
push
test
xchg
cmp
mov
mov
aaa
int
mov
fs
fild
sub
add
ret
test
aaa
out
inc
test
(bad)
jl
pop
xor
xlat
aaa
je
push
mov
mov
ss
scas
adc
addr16
add
neg
mov
test
add
sbb
cs
ret
cmp
and
sbb
stos
adc
xor
popa
jne
std
sub
jnp
call
adc
xchg
(bad)
cmp
add
aam
push
xorps
jo
pop
(bad)
out
mov
lods
push
or
in
fisub
retf
jg
add
pop
aaa
aam
retf
pop
popf
loope
sar
and
test
xchg
inc
mov
push
inc
push
xchg
ins
pop
inc
les
test
test
mov
les
mov
fsub
jmp
vmread
pop
stos
push
pop
fldcw
and
adc
cmp
jg
push
int3
pop
arpl
out
std
cs
ins
outs
xchg
sbb
mov
and
out
dec
fabs
sbb
cs
mov
jle
jns
push
jle
push
loope
mov
stos
cs
push
jle
sub
mul
or
movs
pushf
jmp
ins
jp
sbb
inc
dec
pop
pop
scas
aaa
das
loope
sbb
push
xor
inc
jp
cmp
or
sub
add
gs
add
push
test
in
lods
das
xlat
pop
cmp
jbe
dec
and
jl
sti
fs
xchg
cmp
sub
dec
adc
push
out
mov
xor
cli
(bad)
jg
adc
aad
jae
iret
jnp
xor
push
mov
inc
aam
and
mov
test
arpl
fisubr
popf
mov
push
bound
scas
ja
icebp
js
xchg
pop
iret
sub
pusha
cmp
into
adc
jge
in
jg
push
fist
push
ret
js
lea
popa
pop
cmp
sub
pop
fnstenv
sbb
imul
ins
and
bound
push
xlat
lea
adc
or
out
(bad)
xor
mov
rol
repz
cmps
test
out
ins
xchg
cmps
in
je
leave
jecxz
lock
dec
xlat
call
inc
mov
xchg
mov
inc
cmp
out
div
inc
cmps
shl
xor
imul
sar
dec
nop
loop
mov
add
or
ins
xchg
mov
xor
mov
icebp
mov
and
push
inc
pushf
mov
lods
movs
sub
jle
push
inc
and
div
popf
addr16
retf
inc
sub
mov
dec
cld
retf
and
shr
ds
mov
push
ficomp
in
lock
xchg
dec
inc
pop
cmp
xchg
and
and
gs
jle
stc
js
add
ret
pop
adc
stos
fadd
adc
mov
gs
xor
and
(bad)
(bad)
sbb
out
shl
mov
lahf
xor
xlat
test
imul
and
loopne
imul
fld
fs
or
retf
dec
sar
clc
adc
sub
push
mov
in
ret
sbb
and
mov
mov
xor
loope
sub
pop
es
out
outs
pop
retf
sbb
xor
inc
sahf
xor
mov
jne
in
push
adc
mov
add
inc
cmp
lgs
cdq
adc
clc
cdq
call
mov
pusha
call
ret
dec
add
inc
mov
push
jbe
das
dec
push
cmps
(bad)
mov
mov
cmp
leave
aam
ins
or
ins
pop
call
mov
cwde
xchg
or
dec
outs
jle
pop
cmp
push
sub
mov
imul
(bad)
and
xchg
add
sub
outs
dec
sub
mov
clc
xor
sbb
in
movs
adc
leave
and
inc
mov
push
(bad)
repz
rol
mov
dec
or
stos
inc
xor
mov
retf
or
into
fimul
es
dec
pop
test
inc
(bad)
sbb
bound
shr
gs
mov
xor
mov
mov
add
mov
adc
jne
mov
aas
lea
mov
sbb
or
and
xor
dec
mov
sbb
imul
aas
mov
retf
xchg
out
pop
loop
fldcw
sub
repnz
pop
or
repz
push
daa
pop
enter
jmp
xor
inc
cmc
and
in
adc
fdivr
pop
rol
pop
jne
mov
scas
mov
rcl
lock
add
dec
dec
aas
inc
inc
das
push
imul
cmp
into
push
sbb
in
xor
fcom
xchg
mov
xor
aad
ja
adc
icebp
push
push
add
nop
das
wbinvd
dec
leave
cmps
cmp
loopne
loop
push
mov
jbe
xor
mov
dec
sti
and
cs
loopne
sbb
xor
add
int
pop
outs
jno
dec
adc
mov
nop
xchg
xchg
push
outs
test
jecxz
add
jge
stos
add
mov
jmp
mov
xchg
out
cdq
cmp
dec
faddp
es
(bad)
add
enter
ss
test
inc
aam
cdq
mov
or
push
shl
loopne
add
sbb
pop
rol
inc
jns
lds
bound
(bad)
bound
ja
lods
mov
fisub
arpl
ret
pop
outs
(bad)
push
outs
xor
inc
mov
fbld
jae
sbb
test
(bad)
mov
imul
sub
dec
sar
and
mov
mov
(bad)
mov
cmp
add
dec
out
adc
stos
sar
ss
popa
xor
stos
imul
xor
cs
push
or
out
xchg
sbb
or
retf
test
pop
cli
scas
cmps
outs
fld
lahf
xor
mov
inc
sub
xor
ret
dec
fisubr
sbb
pop
(bad)
and
jns
mov
ja
leave
mov
(bad)
scas
cmp
dec
or
(bad)
mov
dec
pop
leave
daa
add
and
stos
dec
xor
sbb
dec
mov
clc
inc
(bad)
sbb
rcl
in
hlt
stos
mov
ret
or
cmp
pop
push
leave
mov
fs
jne
jne
test
mov
gs
sub
test
ss
pop
mov
mov
jl
mov
sbb
dec
fmul
push
or
sub
pop
jne
cmp
push
xchg
and
mov
dec
pusha
ror
or
or
movs
cmps
inc
dec
cmp
mov
mov
in
push
xchg
dec
test
xchg
and
ja
mov
into
repz
pop
adc
mov
or
sub
daa
out
cmp
push
mov
cmp
loope
xlat
mov
push
push
daa
pop
dec
pop
enter
cmpxchg
cmp
add
push
jbe
xchg
ret
sbb
pop
mov
sbb
enter
jl
or
shl
cmp
in
add
mov
mov
ins
pop
inc
xor
std
lods
push
aam
xchg
mov
scas
mov
loop
psraw
push
mov
loopne
dec
(bad)
scas
push
xchg
add
nop
xor
inc
xchg
out
sub
clc
retf
shl
ins
mov
push
mov
push
push
ret
pop
shl
das
add
push
sub
ds
call
push
pushf
popa
pushf
pop
repz
(bad)
cmp
cmps
add
sahf
cs
inc
push
push
jmp
mov
pop
sub
jb
push
test
mov
mov
mov
push
lea
sub
mov
cmp
mov
mov
add
shl
imul
inc
ss
aaa
push
(bad)
xor
push
cmp
or
enter
cmp
inc
fwait
inc
add
and
push
dec
push
pop
cmps
jmp
les
adc
fisttp
cmps
(bad)
push
repz
xor
and
mov
jb
aas
fdivr
in
lods
xor
repnz
cmp
cs
push
pop
lods
mov
jb
js
(bad)
cmps
test
mov
jmp
or
jae
jmp
call
fidiv
loope
into
(bad)
call
ja
(bad)
mov
dec
inc
push
pop
aam
pop
pop
outs
pop
iret
loop
out
add
sbb
test
jo
cmp
push
mov
inc
sbb
daa
ss
retf
(bad)
test
arpl
ror
jl
mov
int3
bound
outs
pop
or
xor
retf
ins
xchg
pop
pop
lods
lock
add
mov
jb
mov
aam
jb
(bad)
mov
dec
imul
ja
mov
int3
out
dec
call
inc
xchg
arpl
or
nop
xor
lods
movs
pop
sub
dec
add
pop
push
pop
js
and
lahf
sbb
add
pusha
int
sub
test
mov
dec
add
dec
dec
add
popf
daa
or
das
sbb
jb
psubsb
adc
mov
fcom
xchg
dec
or
or
mov
xchg
xor
nop
js
pop
popa
push
mov
out
mov
dec
mov
test
hlt
add
retf
mov
cmp
mov
loopne
jne
sbb
mov
arpl
mov
sbb
rol
dec
mov
mov
ret
xchg
push
add
mov
mov
bound
xor
imul
jo
mov
cmp
add
sub
bound
fwait
pop
mov
push
mov
add
aas
xchg
jno
push
arpl
mov
call
outs
retf
push
adc
xchg
adc
ror
les
pop
push
xchg
cmp
mov
sub
xor
adc
mov
jae
sbb
nop
jp
inc
jne
int3
imul
xchg
xchg
das
xor
xor
movs
popa
out
outs
jg
arpl
mov
cld
fist
cmp
mov
aam
jge
pop
adc
xchg
xchg
icebp
pop
fwait
xor
mov
sub
sub
icebp
std
or
xor
push
data16
loop
addr16
out
or
fsub
push
out
pop
mov
mov
xor
aam
shl
cmp
mov
repz
push
mov
out
test
ret
dec
sub
fsub
mov
das
push
dec
mov
test
cmps
adc
xchg
inc
mov
int
inc
je
sbb
add
shr
mov
xor
fwait
pop
or
dec
adc
popa
jns
out
rcl
out
sbb
aaa
inc
cdq
cli
sbb
xor
pop
fist
push
push
jecxz
mov
add
dec
jg
das
test
mov
adc
dec
sbb
or
push
es
and
cmps
loope
cdq
add
jae
cmp
push
jl
push
mov
outs
or
xor
push
jecxz
mov
test
ret
(bad)
jnp
jb
test
outs
call
sbb
shl
jnp
arpl
in
mov
out
ret
fwait
mov
pop
xchg
pushfw
int3
mov
xor
xor
lock
jb
out
popa
imul
cmp
dec
push
mov
fisub
sbb
daa
xchg
inc
adc
imul
shl
fdiv
cmps
cmp
repz
pop
jecxz
dec
inc
or
(bad)
arpl
shl
shl
sub
xchg
mov
sbb
call
pop
int3
or
sbb
stos
es
jno
mov
add
jno
add
add
sbb
xor
xor
adc
xchg
ss
xchg
mov
adc
mov
sbb
sbb
retf
popa
movs
mov
pop
ret
scas
pop
adc
push
and
mov
popa
pop
or
jmp
retf
push
out
ret
mov
sar
ins
ss
not
fdivr
sbb
in
mov
or
lods
xor
xchg
jbe
sti
sub
movups
add
adc
shl
and
cdq
bound
lods
mov
push
test
push
sub
lods
add
out
mov
shl
mov
jmp
lods
bound
mov
cmp
leave
mov
sbb
test
fild
outs
test
dec
into
jg
and
repz
fld
(bad)
in
ds
mov
inc
dec
shl
mov
loope
js
jb
nop
data16
pop
imul
iret
sub
cli
clc
add
push
xor
sahf
jp
dec
adc
mov
adc
jg
ins
mov
mov
movs
ins
int3
ficom
(bad)
repnz
pop
dec
add
add
xlat
movs
adc
push
ins
rcr
mov
dec
inc
inc
cld
adc
sub
or
jmp
loope
or
mov
mov
mov
push
xor
iret
sbb
aam
xchg
iret
aad
mov
arpl
jb
popa
jo
sub
cwde
mov
adc
lahf
pop
jno
dec
cmp
or
ins
jecxz
and
fsubrp
push
inc
lea
jl
mov
lods
fs
inc
jmp
gs
not
call
movs
fcom
stos
and
pop
jb
ret
rcl
lahf
jg
sbb
inc
inc
out
push
add
xchg
nop
in
and
dec
sub
dec
xchg
dec
xchg
out
sub
repz
nop
repz
adc
(bad)
push
inc
(bad)
iret
lods
cmp
out
xchg
scas
test
icebp
xor
outs
dec
inc
ja
repz
ficomp
ds
mov
add
dec
outs
adc
repz
call
mov
jecxz
pushf
or
push
push
inc
cmp
shl
repz
bound
mov
add
push
xchg
mov
and
sbb
add
ins
xor
adc
push
addr16
popa
push
sub
xchg
cmp
pop
iret
int
test
test
sbb
mov
(bad)
jno
call
and
adc
nop
jo
imul
push
ret
(bad)
fsub
repnz
inc
aad
pushf
sub
popa
ds
pop
add
stc
aaa
es
dec
repz
int
rcl
jo
sub
pop
dec
mov
adc
lahf
jg
pop
add
push
cmps
ret
jmp
mov
addr16
mov
cs
leave
sub
fcmovnbe
test
rcl
(bad)
lock
dec
adc
xchg
push
mov
cs
(bad)
pusha
sub
mov
mov
test
test
cmp
or
push
inc
into
loopne
ds
ret
out
je
xlat
pushf
jle
(bad)
xor
ins
cmp
test
mov
jl
mov
xor
fstp
inc
fisubr
loop
add
cmps
mov
sub
cmp
sbb
dec
adc
in
(bad)
mov
adc
dec
jb
add
and
ja
out
scas
fild
into
sbb
jg
inc
cmp
adc
and
sahf
sub
ret
outs
or
mov
dec
(bad)
out
pop
mov
stos
int3
inc
jg
and
aad
sbb
stos
pushf
mov
adc
not
and
pop
or
dec
stc
or
add
sub
fild
dec
xor
xchg
div
ret
pop
cli
sub
mov
repz
mov
in
cdq
test
adc
inc
inc
comiss
mov
and
(bad)
xchg
jo
jo
jne
or
cmc
pop
pop
scas
mov
retf
pop
mov
ds
mov
(bad)
and
out
into
int
inc
xchg
in
xchg
jmp
shl
mov
add
mov
push
sub
sahf
mov
jmp
aaa
fadd
sbb
test
cdq
pavgw
and
cmp
or
jae
xchg
add
into
lods
fist
jmp
xor
mov
cmp
bound
and
pop
pop
fs
add
xchg
pop
movs
sub
into
(bad)
hlt
cwde
das
out
fdiv
cmp
repnz
ret
repnz
xchg
cmc
ja
mov
call
pop
pushf
jmp
test
hlt
not
neg
pop
sbb
mov
and
lds
jle
cli
iret
mov
cmovne
sbb
fstp
repz
xchg
dec
aas
add
ss
shr
cmp
push
out
sub
sbb
cwde
loope
(bad)
mov
fld1
push
out
(bad)
loope
cmp
pop
cwde
or
push
cmp
out
or
pop
push
nop
(bad)
test
in
into
xchg
pop
nop
xor
ja
dec
gs
mov
sbb
and
jecxz
outs
jp
jge
shr
iret
sahf
iret
cwde
xchg
cmp
dec
mov
add
das
sbb
out
dec
nop
pop
adc
or
int3
lods
xor
out
scas
scas
(bad)
mov
fisttp
add
cmps
out
sub
xor
lods
mov
jnp
popf
lock
jg
add
gs
sar
lds
xchg
test
dec
push
jno
mov
ins
call
sti
mov
int3
adc
test
test
pushf
(bad)
in
or
mov
fwait
xor
fistp
pop
pop
mov
sar
inc
xlat
aad
sub
dec
and
jp
pop
mov
jo
pop
mov
and
pop
or
das
sbb
cmc
cmp
sub
xchg
fild
sahf
adc
jl
cmps
out
imul
shr
enter
popf
and
or
push
outs
mov
ret
div
adc
sbb
pop
jl
cmp
push
cld
or
addr16
inc
xlat
loope
xchg
mov
icebp
mov
retf
inc
daa
ins
pop
pusha
call
call
shl
mov
sti
mov
ins
xchg
mov
mov
stos
jns
push
cmp
mov
pop
jbe
sbb
push
jle
mov
ja
dec
and
aad
mov
jb
lods
mov
push
cwde
add
rcl
ret
fisubr
jo
scas
in
sub
push
and
mov
jno
out
stos
outs
adc
fmul
or
aad
pop
js
sub
fldenv
xchg
sub
jno
adc
fsubp
fist
aaa
stc
movs
ror
std
out
mov
es
cmp
out
fistp
adc
pop
in
and
fdiv
adc
fistp
push
xor
into
mov
lea
fistp
ret
(bad)
popa
neg
sbb
cmp
adc
leave
js
jno
mov
pop
push
or
add
(bad)
fbstp
test
xor
sub
push
imul
cmp
movs
sbb
pop
cli
mov
adc
sti
xor
ins
das
pop
fbld
popf
rcr
and
mov
imul
xor
lods
popf
cwde
enter
xor
cs
xor
mov
iret
mov
imul
rol
aaa
xchg
sbb
adc
dec
sbb
xlat
shl
mov
sbb
js
mov
or
mov
mov
and
sub
add
mov
addr16
fst
rol
(bad)
and
lods
push
pop
and
pop
jne
sbb
js
pop
nop
out
pushf
jg
outs
(bad)
gs
xchg
outs
dec
mov
dec
jae
cmc
addr16
rol
mov
sub
push
stc
gs
inc
out
sbb
mov
cmp
sbb
pop
cmp
test
in
add
enter
adc
vshufps
test
mov
mov
out
loope
popa
lock
mov
cmps
fidiv
xchg
rol
xchg
cwde
(bad)
fcom
mov
pminub
xchg
jns
cmp
jecxz
fcomp
sbb
sbb
in
sbb
push
shl
in
(bad)
fsubr
mov
nop
iret
adc
in
cdq
repz
inc
out
or
jae
movs
jnp
jb
out
jns
aas
cmp
in
mov
adc
inc
aas
inc
fnstsw
mov
mov
sbb
retf
or
sbb
int3
out
dec
xor
ds
leave
cmp
cmp
frstor
out
ror
sbb
pop
xchg
add
movs
shl
div
mov
lahf
cmps
jmp
dec
fnstcw
bound
jp
mov
adc
xchg
(bad)
mov
xchg
aad
and
sub
jbe
push
es
fxch
enter
cmp
call
mov
out
xchg
mov
es
js
ins
adc
adc
push
retf
aas
neg
push
int3
push
test
mov
mov
cmc
xchg
inc
jg
add
cmps
aas
xor
mov
jle
outs
mov
rcr
or
pop
aad
and
push
repz
aas
adc
adc
(bad)
add
add
push
fdiv
cmp
popa
mov
movs
push
fild
xchg
js
jmp
movs
jmp
push
in
jbe
lea
ret
pop
dec
mov
adc
lds
sti
mov
inc
mov
shl
jg
jo
mov
fidivr
cmp
js
push
div
rcr
jge
mov
mov
shl
(bad)
jmp
sbb
push
mov
(bad)
iret
mov
hlt
imul
enter
cmc
sbb
les
ins
xor
shl
cli
scas
xchg
jnp
push
retf
scas
mov
(bad)
jg
add
xlat
in
(bad)
inc
arpl
add
jo
pop
xor
adc
mov
leave
cmp
sbb
rcr
pop
rcl
cmp
and
stos
dec
repnz
repnz
idiv
mov
sar
sub
mov
pop
push
push
sbb
xchg
ins
test
(bad)
sbb
enter
gs
stos
mov
repnz
cmp
mov
inc
cmc
not
in
xor
popf
gs
xchg
jmp
shr
sbb
push
sub
icebp
sub
out
aad
jmp
cmp
pop
or
sub
das
adc
pop
push
mov
mov
xchg
rol
movs
out
rcl
ret
dec
into
cdq
sub
sbb
push
test
in
sbb
bound
xchg
into
clc
test
xor
in
movs
push
inc
mov
jmp
call
xor
sti
mov
rol
(bad)
dec
xchg
call
jle
add
adc
stos
call
push
clc
inc
sub
lods
leave
adc
jmp
(bad)
fcomip
jmp
cld
xchg
les
mov
sub
and
add
cld
ins
out
imul
and
cwde
out
ja
cmp
xchg
jg
in
in
test
xchg
dec
inc
lods
call
sbb
jbe
xchg
hlt
das
scas
int3
sub
popa
mov
mov
sbb
aam
mov
mov
pop
sbb
or
push
jge
push
sbb
call
nop
mov
lahf
add
fiadd
jbe
mov
xchg
adc
xor
movs
pop
gs
ss
adc
(bad)
and
dec
retf
ins
cmp
push
jnp
(bad)
out
ins
jb
gs
gs
ret
add
mov
add
adc
cmp
pop
mov
pop
mov
sub
jle
fmul
xchg
xor
mov
xchg
adc
mov
jmp
lea
lds
fnsave
push
cmp
xchg
repz
sbb
adc
or
fst
jge
js
iret
or
jg
pop
sbb
imul
or
push
inc
mov
or
stos
pushf
(bad)
adc
jbe
gs
inc
mov
aaa
hlt
jbe
push
clc
xor
xchg
mov
or
pop
jl
dec
popa
out
test
jbe
jnp
in
mov
shl
cmp
gs
cmps
jnp
(bad)
push
adc
mov
cs
jnp
mov
gs
add
ss
rol
dec
div
test
mov
fwait
dec
out
inc
imul
pusha
xchg
ret
rcr
enter
aas
mov
adc
pop
pop
push
jmp
icebp
shl
retf
mov
cmp
clc
ror
imul
fwait
loop
lahf
imul
push
pop
repnz
push
cmp
inc
test
test
fstp
mov
push
push
ins
sbb
mov
jnp
shl
loopne
mov
xor
jl
clc
ret
stos
ss
add
pop
cmp
or
shl
xchg
into
and
leave
xchg
push
push
or
lahf
addr16
ins
dec
fadd
fcmovbe
mov
xchg
loopne
pop
sub
(bad)
push
push
dec
adc
pop
dec
xchg
lahf
outs
pop
xchg
and
mov
ret
movs
in
fucom
push
sub
push
sbb
rcr
and
xchg
mov
pop
(bad)
cld
or
or
stc
ror
and
cmp
addr16
stc
jb
pop
xchg
popa
and
lds
loopne
addr16
sbb
jb
call
xchg
fild
(bad)
int
or
dec
(bad)
nop
and
(bad)
mov
sbb
repz
pop
mov
mov
ins
and
inc
mov
rol
add
lea
mov
mov
or
mov
(bad)
add
sbb
dec
inc
nop
aad
or
xor
fwait
push
mul
xlat
out
int
es
cmp
adc
lea
push
scas
outs
out
xchg
sub
(bad)
lock
push
outs
fwait
and
loopne
test
jp
push
mov
push
sub
mov
int3
loopne
rcr
pushf
mov
shr
jae
test
mov
jnp
cmp
icebp
mov
xor
dec
and
mov
mov
repz
lods
test
sti
or
xchg
test
xor
sub
cli
pop
nop
mov
jae
mov
and
jp
sub
sub
rcl
hlt
imul
jmp
jge
pushf
leave
call
mov
sub
xchg
cld
and
cmp
call
inc
imul
and
cli
adc
mov
test
ds
iret
add
push
call
or
fs
add
nop
push
pop
out
enter
adc
lock
push
adc
adc
retf
xchg
inc
cmp
mov
ret
neg
sub
jle
test
push
jns
popa
pop
dec
inc
mul
cmp
xor
cwde
and
mov
or
add
(bad)
cs
adc
fisub
popa
hlt
stc
dec
cmp
mov
call
xor
enter
adc
jbe
and
push
cmp
mov
in
jo
adc
cmp
push
push
lahf
outs
sbb
jmp
mov
pop
iret
(bad)
dec
hlt
mov
jb
cmp
(bad)
fsub
fsubr
dec
idiv
jp
mov
mov
pusha
das
mov
xchg
aam
scas
retf
adc
into
mov
push
pusha
push
sub
pop
sbb
sti
push
inc
or
sbb
cmp
mov
add
fsubr
popf
mov
outs
outs
push
cli
cmps
xor
in
arpl
outs
into
or
cmc
stc
xchg
mov
outs
cmc
aad
out
test
and
outs
fwait
mov
jmp
sub
push
test
aad
pop
retf
sub
inc
mov
and
mul
mov
mov
(bad)
xor
ds
or
sbb
add
and
pop
fbld
in
push
bound
cwde
push
in
aas
xor
dec
and
stos
sahf
popa
pushf
jl
cmp
pushf
xchg
mov
mul
push
into
fimul
push
mov
pop
mov
mov
imul
loope
arpl
ficomp
shl
mov
stos
fwait
pop
out
mov
push
mov
add
or
add
xor
cmps
adc
or
sbb
push
xchg
dec
icebp
fdivr
mov
xor
sbb
mov
add
das
jge
and
(bad)
mov
fdivr
sub
adc
ins
cmp
scas
sub
mov
push
dec
test
jg
xchg
sub
push
xchg
jl
rcr
mov
aaa
xlat
mov
bound
xor
push
inc
inc
or
xor
retf
lods
ror
aaa
imul
add
shr
lock
add
ficomp
and
push
inc
and
into
stos
inc
in
fidiv
add
mov
aaa
outs
mov
xchg
iret
pushf
ds
inc
clc
lock
fidiv
push
gs
fs
dec
fldcw
lods
(bad)
jecxz
stos
or
shl
cwde
fistp
xor
mov
jo
cld
loopne
lock
rcl
pop
add
clc
ss
fldenv
pop
fcmovnb
jno
call
fsubr
ins
ror
lock
ss
cs
mov
mov
mov
add
sbb
mov
addr16
jg
shr
fwait
jmp
int3
in
xor
sub
lods
rcl
iret
add
adc
ja
cmps
xchg
pop
push
repnz
pop
pusha
pop
repz
sub
das
std
sub
sub
call
or
xchg
dec
dec
add
repz
xchg
into
fmul
add
pop
(bad)
(bad)
mov
mov
dec
pop
mov
cwde
retf
or
cmc
ins
fimul
aas
jnp
cmp
mov
or
xchg
jp
ret
mov
and
cmp
ja
inc
cdq
ror
nop
inc
inc
ins
sub
rcl
(bad)
and
test
cmps
fbstp
(bad)
(bad)
cdq
int3
lds
inc
iret
or
dec
mov
ret
out
sbb
fwait
loope
push
jmp
xlat
push
adc
or
lea
jo
cli
jbe
push
mov
push
jae
dec
pop
or
jmp
pop
jbe
pop
or
sub
xchg
or
sahf
adc
inc
mov
and
in
outs
cmps
or
cmp
ins
inc
mov
call
stos
in
xlat
je
in
mov
cmps
add
fistp
sub
in
rcl
adc
stc
in
and
or
mov
jl
inc
cmp
add
pop
pop
bound
adc
test
pop
dec
jmp
mov
imul
arpl
outs
jp
retf
sub
sub
aam
push
dec
rcr
jno
mov
mov
pusha
or
or
sub
or
cmps
dec
pop
inc
sbb
jae
pop
aam
ficom
add
cs
push
pop
arpl
cmps
outs
fist
cmp
push
xchg
inc
mov
jmp
stc
mov
shl
adc
call
rol
(bad)
mov
or
jnp
xor
outs
mov
test
jmp
sub
cmp
fs
mov
mov
lock
int3
mov
or
pop
or
not
inc
pop
(bad)
sahf
ret
call
aaa
mov
ins
mov
mov
push
call
xor
jle
daa
push
shl
pop
pop
jns
push
add
sbb
push
pusha
xchg
and
xchg
pop
arpl
adc
adc
imul
shr
and
dec
xor
inc
dec
adc
(bad)
shl
sbb
mov
jb
push
sub
pop
adc
adc
popa
pop
cmp
sub
inc
and
in
cdq
shl
ret
sbb
jmp
inc
add
xor
sbb
mov
push
mov
inc
push
lea
lock
out
pop
pop
inc
loop
cmc
rcl
fdivrp
into
js
retf
aas
repnz
(bad)
and
shr
inc
sbb
jle
pop
push
int
xchg
mov
int3
cdq
arpl
inc
push
dec
pop
(bad)
movs
pop
xchg
mov
mov
sbb
jg
push
dec
mov
mov
cs
xchg
cmps
jmp
sbb
push
push
jnp
dec
mov
(bad)
push
xor
jle
jae
mov
mov
inc
gs
mov
(bad)
and
adc
ins
mov
or
mov
jp
jbe
dec
sbb
aas
add
cmc
sbb
push
ja
std
nop
hlt
fnstenv
push
(bad)
add
retf
in
sub
call
inc
mov
inc
cld
jo
das
jbe
mov
push
xchg
popf
inc
sti
cwde
in
lea
jne
jae
(bad)
cs
mov
mov
pop
fs
movs
cmp
adc
cs
in
or
out
push
shr
clc
mov
mov
xchg
mov
repz
mov
sbb
jp
scas
adc
aad
jp
(bad)
(bad)
fsub
shl
jle
push
fwait
daa
push
gs
sub
mov
jecxz
out
ret
stos
push
push
jmp
xchg
(bad)
mul
push
mov
dec
pop
test
neg
sahf
pop
mov
fwait
lods
mov
jp
dec
jp
add
loop
mov
ret
cmps
mov
and
xchg
lea
hlt
or
lock
pop
nop
adc
fwait
repnz
xchg
int
scas
xchg
test
outs
sbb
cdq
fidiv
mov
aad
out
dec
mov
retf
mov
pusha
retf
adc
(bad)
scas
scas
movs
lods
jb
ret
repz
jmp
xor
fimul
push
(bad)
syscall
scas
idiv
jb
jae
clc
loope
jb
mov
mov
ins
(bad)
dec
add
dec
out
int
push
rcpps
mov
fisubr
test
pop
fwait
pop
lods
movs
fbstp
outs
dec
fptan
outs
(bad)
test
xor
movs
inc
inc
xchg
cmc
cs
inc
dec
jmp
mov
mov
cmps
lock
push
cmp
test
rcr
fcmove
(bad)
pop
and
pusha
das
sahf
sbb
shr
push
sub
inc
(bad)
pop
dec
jnp
add
jmp
jns
jbe
cmp
add
inc
sbb
fs
clc
inc
xor
inc
xchg
adc
sahf
mov
mov
jae
mov
pop
sub
inc
daa
sti
das
and
push
inc
adc
lock
mov
push
xor
xchg
jmp
cmp
cmps
into
in
lea
ret
dec
pop
fadd
rol
inc
pop
jno
aaa
xor
rol
hlt
push
push
rol
adc
fadd
sub
popf
and
call
jg
fxch
stc
outs
fist
movs
retf
adc
movs
je
outs
and
rol
push
dec
movs
pop
repz
inc
inc
pop
call
jecxz
repz
pushf
cmp
jno
call
pop
mov
fimul
movs
and
hlt
das
pop
mov
mov
jmp
fist
sub
xor
dec
sahf
or
aas
fistp
fisubr
jno
and
mov
ret
mov
mov
out
leave
dec
jge
cmp
stc
adc
jns
cwde
sub
sbb
xlat
sub
dec
sbb
sbb
sub
enter
repz
push
into
push
test
jnp
neg
test
in
dec
sub
push
mov
adc
cs
jnp
push
js
adc
jmp
sbb
icebp
sbb
sub
in
mov
pop
xor
(bad)
mov
sub
sti
ror
rcr
push
dec
paddd
dec
add
shl
sbb
adc
xor
xchg
mov
in
fild
pop
mov
push
lahf
bound
push
and
test
mov
cmp
or
sub
into
fs
mov
repnz
push
cmps
xchg
sahf
mov
stos
adc
xchg
mov
jbe
sar
push
sahf
push
mov
sub
div
ins
push
scas
mov
aas
xchg
cmp
in
and
lds
loope
mov
sub
jne
pop
mov
mov
mov
jbe
call
sub
xor
call
loope
mov
(bad)
and
sar
xor
es
stos
jp
inc
push
xchg
(bad)
sbb
xchg
ror
jmp
jecxz
dec
or
in
mov
or
(bad)
setbe
sahf
cwde
xchg
into
dec
stc
pop
sub
or
mov
inc
jmp
sub
inc
popa
sub
xchg
in
push
add
cmp
jecxz
mov
mov
add
fdivrp
fsubrp
pop
retf
pusha
test
cmc
call
and
mov
or
jmp
retf
push
jo
stos
sar
cdq
icebp
and
js
push
into
test
pop
mov
or
jbe
jbe
outs
inc
(bad)
arpl
cmp
mov
les
mov
adc
or
cmps
out
mov
ins
mov
mov
add
les
mov
push
jns
push
out
rcr
adc
mov
retf
aam
xor
xor
fisttp
aad
test
repnz
xchg
aaa
jle
iret
pop
mov
adc
adc
mov
inc
jno
ror
ins
cmp
(bad)
pusha
adc
(bad)
mov
add
(bad)
jg
add
fiadd
and
pushf
sub
cmp
pop
or
ficom
cmps
mov
add
repz
les
pusha
inc
pop
push
push
ja
fist
aad
xlat
leave
iret
ins
mov
shl
in
mov
ret
adc
mov
daa
imul
nop
xor
ds
jb
inc
pop
mov
out
pop
push
inc
mov
and
mov
pop
mov
aaa
fild
jle
test
mov
push
movs
cwde
xchg
xor
sub
je
(bad)
push
aaa
test
xor
sub
(bad)
lock
sbb
and
xchg
cdq
lea
sub
mov
les
js
push
nop
mov
outs
push
mov
pop
rcr
adc
mov
xor
test
loope
xlat
in
stos
retf
jg
scas
lods
aad
dec
fs
push
(bad)
into
shl
push
push
mov
xor
psubb
cmp
mov
adc
pop
sub
rol
fs
sbb
fwait
in
add
pop
movs
cwde
aam
inc
test
test
ja
(bad)
adc
mov
stc
outs
stc
mov
mov
mov
cmp
cmp
sbb
jno
jmp
mov
lds
mov
push
add
lahf
pop
test
in
cli
dec
mov
call
cld
cs
mov
in
jecxz
fcomip
lea
dec
in
cld
es
mov
and
jge
nop
in
xor
dec
xor
call
shr
js
mov
push
xchg
ror
outs
sbb
stos
and
popa
(bad)
repnz
call
dec
dec
f2xm1
pop
jns
test
out
movs
push
inc
sbb
push
xchg
push
and
loop
out
jns
aad
inc
inc
fs
xchg
in
push
popf
pop
jns
clc
mov
mov
loope
outs
ret
movs
scas
mov
dec
pop
adc
dec
pop
ret
movs
scas
inc
jnp
fistp
cmp
std
cmp
sbb
dec
jbe
xor
fabs
loopne
popf
std
call
retf
in
jecxz
dec
fadd
cmc
mov
addr16
std
lds
push
leave
call
adc
xchg
push
adc
adc
mov
pop
inc
pop
out
inc
movs
push
xlat
data16
retf
aad
in
pop
xlat
aam
cld
and
lods
sbb
mov
(bad)
icebp
int3
sahf
adc
or
dec
dec
xor
sbb
pop
repz
xor
fidivr
cmps
cmp
jl
pop
inc
pop
adc
enter
outs
push
jp
adc
lods
pusha
pop
mov
dec
out
xchg
out
iret
repz
fidiv
repnz
mov
dec
repz
mov
aad
add
xlat
iret
ret
jge
fist
jae
jmp
xchg
gs
int
pop
repnz
aam
inc
test
stos
ins
ins
hlt
cwde
adc
and
xchg
mov
loope
jbe
fmul
mov
stc
in
cmp
xor
outs
popa
pop
popf
or
dec
out
sti
ret
dec
cdq
lods
add
and
pop
push
scas
jmp
call
add
gs
jg
mov
popa
or
mov
ret
add
rol
clc
sbb
or
xor
inc
and
test
movs
imul
jle
retf
fsubr
adc
jg
mov
cli
xchg
shl
and
xor
push
xchg
adc
les
jb
xor
push
lahf
arpl
cli
mov
add
add
cmp
xchg
dec
and
cld
dec
(bad)
cwde
pop
aas
mov
xor
call
fnstsw
aaa
in
sar
dec
shr
xor
movs
add
es
loop
inc
loopne
cmp
ja
imul
lock
cdq
sti
sbb
iret
or
mov
(bad)
sub
ficomp
dec
loop
mov
sbb
dec
icebp
add
cmp
hlt
and
cmp
pop
(bad)
sub
fistp
(bad)
pop
retf
test
addr16
mov
lods
adc
movs
stc
mov
arpl
dec
in
repnz
jl
bound
xchg
or
cmp
xchg
or
in
inc
jne
xchg
sub
sub
stc
push
mov
jae
cdq
loop
xor
ret
lds
cmp
loopne
jge
adc
jmp
pushf
das
add
cdq
and
adc
stos
jg
lock
and
scas
cmp
push
xchg
or
add
adc
mov
pop
mov
sub
(bad)
retf
inc
adc
cmps
enter
pop
jmp
sbb
or
js
add
jg
jge
hlt
cmps
in
mov
int3
sub
xor
mov
(bad)
adc
dec
mov
imul
aas
cld
pushf
or
or
shl
inc
int
aad
movs
cmps
test
into
scas
push
test
in
out
ret
and
inc
cwde
sti
sbb
dec
pop
xchg
test
arpl
out
arpl
mov
or
mov
rcl
add
lock
lahf
xor
rcl
in
xchg
dec
ja
lea
dec
fistp
lock
(bad)
cli
imul
sub
mov
test
push
lods
aas
shr
clc
bound
ror
pusha
pcmpeqw
inc
ins
push
push
xor
xchg
jne
aas
hlt
ds
xor
xchg
or
(bad)
retf
mov
pop
scas
pop
arpl
xor
xor
jno
shl
inc
pop
mov
(bad)
ins
push
sub
dec
dec
sbb
sahf
push
scas
jmp
pop
cmps
xor
dec
sbb
repnz
add
sbb
mov
push
ja
call
pop
xchg
add
pop
ror
stc
adc
hlt
out
jecxz
out
les
test
or
add
xchg
inc
jno
mov
sub
dec
jmp
es
(bad)
leave
arpl
mov
push
jmp
cmp
jecxz
and
loopne
lsl
push
lods
repnz
hlt
cmp
loopne
lahf
xor
mov
es
jge
mov
loop
cmps
fistp
jne
fsubr
xlat
lods
and
push
movs
sub
fadd
dec
mov
scas
ins
lea
pop
xor
mov
dec
mov
jge
neg
movntq
call
fisttp
inc
push
lahf
jnp
inc
inc
fnsavew
pop
dec
cmp
call
mov
push
in
dec
xor
clc
mov
dec
movs
les
je
call
retf
arpl
(bad)
xchg
movs
dec
in
das
sbb
sti
repnz
mov
inc
into
or
xchg
and
push
shld
shl
cmp
or
jmp
mov
push
dec
imul
jmp
(bad)
cld
mov
mov
xchg
(bad)
dec
ficomp
fild
aad
and
dec
push
pop
jge
das
or
into
aad
xor
sbb
jne
(bad)
xchg
cmp
xchg
inc
inc
pop
xchg
call
jne
xchg
and
xor
sahf
popf
clc
out
in
int3
or
dec
inc
bndldx
ja
cmp
mov
(bad)
aaa
push
inc
lahf
add
arpl
fld
push
adc
outs
ins
jge
and
adc
mov
xchg
jmp
repnz
out
stos
retf
(bad)
les
mov
xchg
sub
dec
mov
jo
mov
jo
in
loopne
xchg
jge
cmp
cmp
ins
clc
into
lods
ror
cmc
jg
push
cmps
mov
push
mov
stc
daa
jle
jno
loop
fs
addr16
lods
js
cmp
sub
mov
mov
xor
adc
das
addr16
cs
in
imul
xchg
cmp
jle
jne
gs
cwde
sub
call
push
rol
lods
movs
xchg
mov
jno
adc
mov
cwde
add
and
jmp
adc
mov
rol
int3
ret
jg
lods
out
jb
mov
dec
push
xor
movs
push
mov
ss
ficomp
arpl
and
sahf
ret
mov
inc
jae
rcl
lea
dec
inc
xchg
xor
sub
imul
mov
fst
les
test
xchg
pop
xchg
push
xor
shl
and
jge
not
call
adc
jo
add
ins
cmps
repnz
jo
adc
mov
movs
adc
add
pusha
xor
pop
mov
stos
lods
cs
das
or
std
ret
push
ss
dec
adc
pop
adc
lock
in
ja
adc
xor
pusha
and
mov
dec
add
mov
retf
pop
xchg
cli
retf
aad
cli
lds
retf
and
es
jo
pop
es
out
idiv
fldenv
cld
or
cmps
and
jmp
mul
loope
mov
mov
in
shl
or
adc
pushf
les
loop
jns
loop
and
inc
loope
jp
loop
into
xor
mov
cmp
cmp
push
pop
mov
jge
jne
sbb
and
xchg
mov
sbb
mov
push
stos
and
xchg
mov
add
inc
adc
dec
popa
lods
adc
mov
addr16
jae
cmp
cmps
stos
and
cmc
mov
add
nop
xchg
(bad)
call
retf
or
xor
pop
push
out
dec
dec
mov
icebp
hlt
xor
jb
shl
retf
aam
and
in
and
lock
enter
shl
sbb
or
hlt
mov
push
iret
jbe
push
push
mov
add
sbb
inc
xchg
adc
xor
lahf
xor
out
push
mov
inc
cmp
push
push
repnz
(bad)
sbb
jnp
add
ds
inc
dec
xor
fisubr
push
add
xor
xchg
call
movd
hlt
retf
mov
sub
cmp
mov
sbb
cmp
int3
rol
and
add
xchg
rol
jmp
xlat
test
ret
movs
ins
ret
js
push
or
out
sahf
ins
popa
rcr
jge
retf
movs
pop
xchg
sbb
dec
icebp
push
and
movs
add
fcom
mov
add
add
(bad)
sar
cmps
sti
push
out
cmc
(bad)
ja
outs
outs
xchg
mov
loope
popf
cmp
shr
xchg
ret
mov
movs
lds
pushf
std
test
fbstp
retf
movs
jg
nop
and
adc
(bad)
inc
loop
mov
or
fcom
mov
test
cmp
test
ins
sbb
sbb
push
fsin
lahf
mov
cmp
mov
and
add
test
jl
cmp
xchg
push
or
dec
fistp
mov
xor
pextrw
adc
loope
xor
or
arpl
icebp
mov
inc
push
imul
sar
(bad)
add
aad
dec
sub
loop
(bad)
iret
jae
add
jmp
imul
pop
(bad)
fcom
(bad)
jno
sti
adc
fneni(8087
pop
shr
mov
jo
sbb
ins
in
aad
mov
imul
data16
cli
or
inc
jmp
popf
jne
popa
(bad)
pop
test
rol
cmp
jmp
fist
push
or
cwde
or
fdivr
cmps
(bad)
cdq
xor
xchg
arpl
daa
int3
cmp
pop
mov
pop
lea
inc
mov
xchg
(bad)
or
dec
cli
add
push
pop
les
scas
jae
dec
ret
test
dec
(bad)
sahf
xchg
lods
sub
mov
dec
or
into
repz
mov
mov
add
jle
mov
shl
scas
cli
mov
cmp
jle
lock
setb
jno
cmps
repnz
add
out
or
mov
cmps
rol
test
fsubr
aam
adc
pxor
mov
test
xchg
xchg
ss
ficom
pop
sbb
xor
ss
inc
fistp
or
in
call
dec
mov
inc
std
or
js
add
push
add
and
push
xchg
aas
gs
or
pop
movs
jno
pop
push
jbe
push
enter
pop
or
lea
int3
xor
push
sub
nop
sar
lods
mov
nop
in
cmps
or
lahf
imul
push
loope
mov
in
sub
hlt
ja
dec
pop
retf
loope
jmp
sub
sar
sub
test
and
les
jns
es
push
jae
sahf
nop
loopne
fldpi
lea
retf
call
push
cmp
out
cld
xchg
ins
mov
out
ja
mov
pop
sbb
and
cmp
and
ins
pop
imul
push
cli
mov
add
jmp
dec
mov
adc
nop
cmp
jge
sahf
je
mov
xor
out
(bad)
jae
imul
fcomp
inc
inc
lahf
inc
pop
mov
xchg
js
jecxz
aas
jnp
retf
stc
pop
push
jmp
pop
add
mov
(bad)
pop
test
jno
cmp
out
aam
fild
push
repnz
pop
mov
cmp
push
cmp
inc
fcom
nop
dec
scas
retf
ret
ret
test
cmp
scas
sub
add
test
inc
retf
fsubr
and
leave
mov
cmps
jno
int
arpl
rcr
(bad)
ins
xor
xchg
out
imul
cmps
(bad)
mov
jo
inc
mov
add
or
das
cs
stos
jnp
mov
cmps
push
mov
sbb
mov
popf
add
pop
pop
fwait
cmps
popa
pop
inc
xor
popa
js
(bad)
scas
inc
addr16
and
dec
jae
mov
in
in
loop
into
add
sub
rcr
js
sub
iret
inc
inc
sub
aaa
(bad)
out
pop
cmps
in
sub
stos
sbb
sub
outs
sub
lock
cmps
add
mov
push
push
in
pushf
xchg
push
test
mov
retf
cmp
(bad)
push
adc
scas
lea
das
adc
mov
dec
repz
inc
int
ins
into
or
xlat
in
xor
daa
adc
ss
inc
aad
stc
ficom
test
or
dec
push
adc
arpl
cli
ins
jmp
fsubr
aas
push
jns
jnp
xor
jbe
(bad)
push
mov
mov
in
inc
(bad)
cmp
adc
mov
dec
enter
pushf
push
push
adc
stos
sub
neg
pop
or
(bad)
fmul
mov
fsub
mov
dec
out
mov
icebp
in
mov
sub
loop
stos
jl
(bad)
cwde
pop
or
push
xor
jb
js
inc
xchg
imul
fnstcw
loop
adc
cmp
mov
cmp
fist
shl
mov
addr16
js
loope
or
call
retf
mov
dec
add
add
mov
iret
ficomp
icebp
mov
push
sbb
out
cmp
mov
lahf
xchg
push
scas
shl
repz
div
pop
out
pop
stos
cmps
xchg
jb
sti
test
pop
add
fld
push
cld
cmp
retf
shl
bound
nop
enter
mov
std
xchg
aaa
xor
or
clc
push
push
and
dec
cmp
in
jbe
jae
pop
add
stos
cs
sbb
mov
rcl
pop
stos
ins
retf
cs
mov
daa
and
add
push
sub
mov
or
sub
xor
ja
sub
jno
(bad)
int3
fild
(bad)
lods
out
sbb
inc
fs
xchg
adc
call
retf
xor
mov
xchg
push
add
cmp
fsub
mov
mov
inc
xor
leave
dec
cli
(bad)
mov
sbb
call
xchg
push
fist
aaa
adc
lods
xor
leave
outs
jle
xor
jae
aas
loopne
out
jl
add
add
or
mov
cmp
ffree
add
jno
jo
sbb
xchg
cli
lods
call
push
add
out
xor
shr
and
mov
mov
ror
int3
xchg
push
retf
inc
loop
fbstp
sti
lods
xlat
adc
ret
or
xlat
pop
and
mov
and
mov
xchg
jne
into
jl
rcl
adc
cli
lock
xor
dec
push
sub
scas
mov
push
mov
shld
imul
js
movs
and
out
sahf
adc
dec
add
mov
jne
stc
sbb
aam
inc
popw
push
xchg
pushf
mov
or
mov
cmp
imul
in
sahf
inc
fdiv
shr
sbb
mov
sahf
mov
into
les
mov
sub
loopne
lods
pop
adc
xchg
add
xor
(bad)
dec
adc
dec
adc
jns
mov
fld
cli
push
mov
aad
cmp
loopne
sbb
push
in
xlat
cmp
adc
test
jae
ret
push
(bad)
dec
outs
ins
ret
mov
stos
(bad)
mov
mov
aad
fisttp
cmp
xchg
cmc
std
cmp
dec
dec
loop
popa
call
inc
aam
aam
ret
dec
jno
jno
mov
push
bound
aas
inc
mov
mov
test
lock
mov
mov
aam
cli
scas
inc
stos
ss
adc
xlat
sti
sub
imul
aad
mov
dec
out
adc
adc
and
adc
or
adc
cmp
int
test
fsub
add
test
inc
sub
ins
jmp
cmc
retf
dec
sub
iret
and
test
out
sub
inc
retf
stos
retf
test
xor
in
shr
shr
into
jmp
and
test
jp
add
mov
dec
lods
pop
scas
cwde
jae
jmp
movs
(bad)
inc
jmp
cs
(bad)
jl
adc
dec
(bad)
std
push
jge
xchg
inc
out
stos
mov
or
sar
cmp
cmp
xchg
in
cmp
test
loope
dec
sbb
jmp
inc
xchg
jge
or
mov
sbb
lods
push
push
lods
push
push
dec
mov
std
dec
iret
repnz
jmp
mov
daa
mov
sbb
push
inc
neg
inc
cld
sbb
push
sbb
outs
mov
cmps
inc
sub
dec
jl
cmps
iret
addr16
sub
in
or
xor
add
stos
addr16
fsub
inc
cmp
push
inc
je
test
imul
popf
cmp
fisubr
movs
xchg
out
add
pop
sbb
in
xchg
mov
and
jle
inc
jmp
fld
xchg
loop
inc
mov
mov
rcr
ret
mov
je
jne
dec
pushf
inc
xchg
iret
adc
push
xchg
pusha
shl
xor
mov
cdq
retf
js
test
jne
int
cwde
sbb
mov
cdq
mov
retf
enter
movs
test
mov
sub
sahf
ret
mov
lea
lods
js
adc
xor
xor
mov
scas
sti
pop
xchg
iret
frstor
stos
rol
inc
sbb
sbb
sub
imul
outs
and
cmp
imul
jnp
fwait
inc
sub
fnsave
xor
cdq
scas
dec
xchg
add
inc
push
push
jb
stos
push
test
mov
push
stc
jno
xor
fild
jae
jno
pop
jge
mov
xchg
mov
sub
or
pop
test
xchg
mov
in
mov
jae
mov
jb
enter
inc
(bad)
in
adc
mov
cmp
mov
xchg
test
push
iret
mov
jnp
fimul
adc
sahf
out
inc
push
test
fdivr
div
xor
jnp
cs
sub
scas
cmp
jmp
pop
loop
jl
xchg
rcl
out
nop
sbb
mov
div
aad
push
das
or
repnz
fcomp
and
cs
inc
scas
out
imul
aas
out
rcr
or
(bad)
sub
jl
adc
imul
mov
jmp
mov
mov
push
mov
je
add
jmp
xchg
sbb
sub
pop
cwde
xchg
bound
mov
pop
movs
pop
adc
pop
and
rcl
sub
aaa
jmp
pop
adc
xchg
mov
js
ror
dec
test
push
add
bnd
fdivr
mov
push
adc
adc
cmp
push
inc
ja
or
xchg
dec
lds
les
sub
adc
add
out
out
and
xchg
sbb
cdq
jae
call
mov
or
mov
push
js
jmp
cdq
pop
dec
pop
imul
arpl
or
push
mov
jg
addr16
cwde
mov
and
inc
scas
movs
inc
mov
hlt
mov
push
jbe
pop
in
jae
jl
mov
daa
bound
sbb
xor
test
lock
lea
(bad)
hlt
(bad)
fnstcw
adc
adc
loopne
mov
fcomp
lahf
ins
fs
mov
test
push
push
popa
(bad)
out
loopne
scas
loop
(bad)
in
dec
xchg
and
scas
xor
add
out
fs
cmp
mov
jno
mov
push
or
fnstenv
push
jo
imul
jle
xor
jp
and
cmc
jecxz
jle
mov
or
int3
inc
sub
int
push
stos
repz
cmps
jbe
imul
add
jmp
fldcw
push
dec
out
xor
mov
or
push
add
loop
(bad)
xchg
ins
sbb
push
push
les
sub
cs
push
sub
mov
je
mov
outs
cmp
int
inc
cmp
loope
jle
adc
outs
jnp
rcl
movs
std
xor
xor
out
loop
jl
mov
mov
mov
imul
das
test
mov
or
xchg
jmp
and
mov
sahf
mov
ret
push
sub
sub
rol
sub
mov
inc
jp
aas
mov
add
xor
and
fbstp
mov
aaa
icebp
xor
das
sbb
mov
movs
frstor
imul
cli
mov
lds
xchg
aas
mov
cmp
lods
push
mov
jp
xchg
jbe
or
sbb
sbb
ss
imul
int3
sbb
bound
test
jbe
jle
lods
pop
dec
sbb
aaa
xchg
retf
leave
push
sbb
pop
bound
xchg
adc
mov
lds
scas
mov
dec
sub
ja
jo
es
pop
inc
cmps
mov
dec
in
push
xchg
and
les
pop
ds
out
xchg
fucomi
into
cmp
add
fbld
icebp
cli
gs
and
cmps
mov
jecxz
sti
mov
add
imul
add
xchg
int3
adc
mov
inc
cmps
(bad)
sti
sbb
dec
jbe
cs
imul
shr
push
mov
fdiv
ds
sub
fcom
mov
push
inc
test
adc
in
sub
push
add
sbb
dec
and
ret
add
ja
pop
movs
mov
mov
out
lock
mov
rcr
ins
cmp
jecxz
xchg
or
push
jne
inc
mov
add
and
dec
sti
(bad)
mov
cmp
fisub
pop
mov
(bad)
sub
ret
repnz
mov
or
mov
cmps
int3
outs
gs
ja
cli
add
jbe
leave
test
fstp
jecxz
xchg
dec
jb
sub
sbb
add
push
xor
lock
cwde
cmp
mov
imul
or
enter
(bad)
jo
test
outs
shr
inc
cwde
repz
aam
xchg
pop
test
mov
pop
inc
(bad)
idiv
int
xchg
adc
sub
call
add
jb
xor
imul
inc
imul
outs
je
jecxz
int
sbb
jno
mov
cwde
jns
mov
in
nop
arpl
(bad)
dec
cdq
enter
jb
leave
and
sar
or
pop
pop
pop
xchg
nop
add
movs
cmps
sub
add
(bad)
ss
jle
and
movs
sar
and
mov
xchg
movs
imul
pushf
fdivr
and
fsub
aad
mov
adc
in
sub
xor
dec
add
jnp
xor
rep
fstp
pop
push
call
pop
fsub
xchg
cmp
add
out
mov
push
scas
outs
pusha
dec
jmp
aaa
repz
push
or
jp
je
jmp
adc
imul
fs
push
and
mov
vsqrtpd
pop
cmp
add
inc
std
jns
xor
lahf
add
lea
xchg
mov
cmp
call
inc
adc
adc
mov
adc
out
je
xor
inc
fidivr
shr
test
mov
add
push
sbb
cmp
mov
jmp
mov
ja
pop
or
leave
frstor
outs
mov
sub
jg
into
dec
ds
mov
fnsave
dec
outs
pop
mov
lea
imul
add
(bad)
jl
xchg
jge
out
enter
jge
mov
movs
inc
or
xor
inc
into
mov
call
mov
fstp
ins
push
cwde
xchg
es
dec
loopne
movs
fld
add
js
ds
dec
mov
data16
jl
xor
add
popa
ret
inc
aas
mov
push
and
add
or
retf
out
test
mov
mov
pop
cmps
cmp
inc
add
mov
mov
cmp
shl
and
push
jae
dec
cmps
fstp
sbb
xlat
(bad)
pop
arpl
movs
xchg
sbb
das
mov
ss
lods
enter
cmps
inc
aam
(bad)
xchg
sub
dec
fldenv
repnz
pushf
xor
xchg
hlt
sbb
shr
xchg
sbb
sub
fisttp
into
sub
mov
scas
dec
push
xor
ja
(bad)
shl
rcr
dec
pop
sbb
loope
ds
sub
push
xchg
idiv
ret
inc
dec
mov
jg
inc
push
mov
into
cld
mov
arpl
jg
mov
movs
test
bound
lds
xchg
je
add
fucomi
push
neg
ret
rcr
stc
xor
sub
cmps
pusha
push
dec
mov
pusha
and
push
jmp
lods
lods
fnsave
mov
fs
lahf
je
inc
scas
cmp
les
and
pushf
pop
jl
xor
adc
(bad)
retf
into
pop
adc
icebp
call
fidivr
pop
or
add
xor
add
mov
imul
mov
sub
inc
adc
in
mov
push
jae
daa
(bad)
ror
adc
mov
xchg
cld
cmp
push
cdq
push
(bad)
sub
xor
cli
(bad)
mov
imul
addr16
push
(bad)
call
push
test
pop
pop
mov
ret
lahf
fisttp
aaa
call
or
cmp
adc
adc
sub
dec
jns
sbb
cmps
push
cmp
cmp
xchg
ret
or
dec
std
adc
mov
ds
aas
mov
push
retf
fisttp
sbb
mov
jp
sbb
loopne
adc
fcmovnbe
mov
lods
movs
xchg
fld
je
sub
inc
add
push
jg
and
pop
lods
fld
inc
xchg
cld
ds
mov
jmp
rcl
fimul
xor
std
ds
inc
sti
mov
sub
mov
cmp
add
movs
leave
jmp
or
mov
dec
icebp
and
or
in
sahf
add
lahf
iret
jnp
push
out
imul
sbb
xlat
repnz
ins
shl
sar
dec
jg
out
mov
arpl
mov
repz
inc
imul
dec
and
inc
and
xchg
hlt
pop
xchg
cmps
int3
shl
js
sub
lahf
xor
xchg
in
cmp
mov
cli
adc
inc
aaa
mov
sbb
fisubr
mov
or
inc
fistp
cmc
mov
sbb
les
lods
cmp
ins
adc
dec
mov
push
push
in
pop
call
mov
jmp
cmc
xchg
call
mov
arpl
outs
sub
ret
xor
xor
push
mov
frstor
mov
addr16
sbb
(bad)
fdivp
bound
repz
mov
leave
pop
mov
xor
ror
jg
mov
ret
shr
sbb
fdivr
jg
and
mov
or
daa
xlat
xchg
mov
test
(bad)
mov
sbb
lock
pop
push
retf
(bad)
xchg
xchg
mov
push
bound
mov
imul
in
xchg
mov
xchg
pop
jns
pop
cli
cmp
call
push
mov
pop
adc
not
stos
mov
shr
movs
ficom
jnp
pop
out
mov
mov
popa
psubusb
mov
popf
pop
adc
push
not
sub
lods
js
xor
sbb
in
mov
ins
dec
test
cmp
cwde
jl
xor
mov
test
push
test
pop
(bad)
xchg
pop
imul
sbb
addr16
xchg
imul
repnz
mov
(bad)
(bad)
retf
jb
test
pop
cmp
inc
xchg
sbb
ss
add
sub
aas
jbe
fdivr
ja
or
xchg
shr
sub
retf
mov
repnz
sbb
cdq
ss
lock
xchg
lock
ds
xor
in
out
push
push
pop
dec
xor
pop
sbb
jmp
jle
pop
test
mov
pop
mov
xor
jmp
int3
mov
sub
cmp
xchg
ins
loopne
pop
adc
pop
and
mov
ret
int
mov
(bad)
pusha
pop
xchg
add
cld
jg
shr
lods
je
out
ins
add
or
adc
lea
js
xchg
outs
jb
enter
repnz
mov
and
inc
or
xchg
(bad)
push
inc
mov
cmp
mov
mov
enter
into
daa
out
adc
imul
leave
jns
and
push
mov
addr16
fiadd
mov
jns
hlt
inc
mov
cdq
in
xor
jmp
jmp
mov
ins
jg
mov
fs
inc
ficom
adc
aad
dec
loopne
adc
cmp
dec
mov
fadd
push
or
adc
in
(bad)
push
into
fld
repnz
idiv
fmul
stos
call
xchg
and
xchg
mov
jp
dec
shr
or
shl
xor
add
mul
pop
jno
pop
clc
scas
pop
stos
push
stc
push
aas
mov
sub
cli
jns
(bad)
fnstsw
es
lahf
es
pushf
pop
jmp
aaa
enter
lods
mov
cmps
dec
lock
or
inc
mov
push
dec
push
out
sbb
dec
cmps
fistp
mov
lods
repz
data16
pop
daa
inc
pop
xchg
call
inc
jmp
(bad)
hlt
mov
(bad)
or
push
sbb
xchg
bound
pushf
shr
adc
hlt
and
dec
or
mov
cmps
stos
popa
das
jo
retf
aad
repnz
push
js
out
es
mov
xchg
loope
into
sti
xor
jmp
scas
mov
aas
mov
mov
or
fmul
ror
pusha
retf
xchg
or
cwde
imul
jmp
inc
pcmpgtb
inc
(bad)
xchg
or
icebp
jb
or
push
add
imul
xor
add
into
cs
xchg
ins
pop
dec
fs
imul
sbb
mov
mov
mov
sbb
outs
mov
stos
jmp
mov
cmps
loopne
pop
and
outs
inc
stos
jae
cdq
lea
push
push
std
cs
rcl
mov
inc
retf
int
xor
pop
into
push
(bad)
scas
sub
fcomp
adc
leave
mov
push
inc
dec
cmp
loop
icebp
fstp
inc
dec
xor
mov
and
mov
inc
inc
les
cld
repz
cmps
pop
outs
nop
call
pushf
adc
jl
or
in
das
out
mov
aaa
cmp
xor
jl
pushf
cmps
push
xchg
dec
or
mov
dec
sbb
xchg
test
mov
icebp
and
movs
(bad)
pop
cmps
sbb
jns
int
sub
dec
jns
inc
mov
aaa
push
and
lds
pop
mov
ficom
in
jmp
xor
sub
inc
inc
jg
jne
sub
push
mov
mov
dec
jmp
sub
scas
pop
or
mov
test
pushf
push
(bad)
xor
or
mov
add
imul
inc
cmp
inc
clc
les
mov
mov
cmp
aaa
mov
inc
or
call
inc
lods
pop
js
jge
sub
test
aas
in
and
into
(bad)
icebp
fsubp
fcom
and
push
jb
and
inc
mov
outs
in
mov
cmp
or
cdq
cli
in
aaa
mov
xor
fadd
ficomp
sbb
dec
ret
cmp
iret
sbb
retf
mov
mov
xchg
call
jbe
scas
test
dec
sbb
loop
in
mov
mov
mov
xor
pop
scas
mov
sbb
movs
cmps
sub
push
fiadd
(bad)
repz
cmp
jae
fcmovnbe
comiss
cmp
outs
pop
gs
std
mov
dec
movs
push
movs
sub
jmp
fdivr
ins
sub
push
cwde
adc
dec
je
pop
cmps
shl
mov
xor
fistp
inc
loope
test
jae
fidiv
inc
lea
mov
loop
mov
repnz
shl
cs
mov
or
push
xchg
push
aad
(bad)
cmp
loop
sub
push
mov
mov
rep
ins
aad
pop
lods
mov
cmps
adc
jne
aam
aam
pop
xchg
jmp
ss
and
adc
fnstenv
dec
push
jmp
inc
test
popa
out
addr16
rcl
pop
pop
out
xchg
fadd
xchg
ds
jbe
cld
je
test
das
out
cmps
inc
sti
jle
and
mov
dec
jbe
rcr
js
stc
xor
inc
xor
dec
(bad)
mov
pop
sbb
xlat
mov
fs
or
cdq
mov
add
and
mov
ds
push
fisttp
mov
xchg
adc
pop
push
dec
aam
fst
pop
ins
and
jns
pop
shl
mov
lea
popf
mov
int
add
test
and
dec
mov
stos
ds
jne
jbe
ins
cmp
mov
adc
lods
mov
ret
mov
mov
dec
cmc
and
jl
sub
inc
mov
mov
mov
clc
push
sbb
jmp
mov
mov
pop
cdq
ficom
aaa
popa
xor
xchg
adc
scas
mov
leave
or
scas
xlat
mov
jmp
mov
test
sub
mov
leave
mov
pushf
fcomp
jbe
mov
mov
pop
pushf
jmp
pop
mov
dec
mov
mov
dec
fisttp
push
jp
sub
xor
ja
retf
js
add
iret
cmp
sub
cmp
mov
sub
mov
jg
pop
mov
icebp
daa
sbb
retf
inc
sbb
loope
std
sbb
sbb
jmp
jp
cmp
and
cli
leave
mov
add
adc
test
movs
mov
lods
inc
or
sbb
repz
add
mov
cmp
ss
sub
push
mov
or
xchg
pop
mov
pop
push
push
mov
inc
mov
pop
aas
enter
pusha
push
in
addr16
popa
lock
push
je
sbb
mov
jmp
xor
leave
test
call
mov
ss
ins
cmps
adc
add
push
and
fidiv
push
pop
not
dec
sub
adc
aaa
pop
mov
jmp
or
pop
je
push
out
test
and
outs
inc
pop
inc
dec
mov
or
lods
not
mov
ror
(bad)
shl
cmp
mov
sub
call
cwde
cmps
jae
sub
std
push
mov
push
cld
cmp
ret
shl
ror
retf
or
mov
rcl
addr16
dec
retf
out
shl
add
out
neg
pop
(bad)
adc
pop
inc
mov
popa
push
enter
mov
das
cmp
cdq
ret
ins
(bad)
icebp
clc
pop
sbb
(bad)
or
add
xor
enter
dec
imul
and
int
retf
or
fistp
or
dec
jo
call
mov
xchg
xor
pop
or
inc
jns
mov
sub
xlat
jae
out
pop
mov
stos
mov
pop
sbb
jmp
cwde
inc
lods
jae
xchg
scas
loop
ret
jle
xchg
lock
retf
jmp
mov
jl
mov
out
fwait
adc
ins
jae
add
dec
jbe
ds
call
push
inc
ins
inc
add
sti
repnz
out
sbb
mov
pop
cmps
or
push
adc
je
jbe
mov
pusha
lea
je
bound
lods
gs
hlt
pop
repnz
cmovne
dec
xlat
mov
jae
rcr
(bad)
mov
or
stc
hlt
and
add
cdq
xchg
or
fidivr
xchg
mov
and
jg
rol
js
mov
mov
lahf
and
out
ss
repnz
fwait
pop
cs
dec
mov
push
xor
xor
clc
dec
call
cmps
sbb
and
fidivr
cdq
inc
adc
or
dec
cli
fs
adc
push
mov
fnstsw
lods
sub
scas
popf
imul
push
sub
push
sbb
mov
fild
adc
nop
ficomp
push
adc
daa
or
add
scas
sbb
mov
cmp
mov
jbe
xchg
sub
jecxz
imul
adc
sub
mov
(bad)
cli
mov
pop
push
adc
outs
push
std
mov
mov
xor
pusha
ret
inc
addr16
out
adc
jno
fbstp
sub
call
and
jmp
push
retf
aas
scas
push
cmc
addr16
sbb
fbstp
xor
dec
outs
icebp
je
adc
fdivr
jp
pop
xor
pop
adc
js
and
enter
mov
xor
push
adc
lahf
jge
xchg
inc
ret
fs
xchg
leave
sub
enter
sub
hlt
sar
and
test
sbb
inc
push
fcmovb
pop
loop
fidivr
(bad)
mov
imul
stos
cmps
rcr
add
aad
movs
jnp
out
ins
mov
dec
repnz
in
fcom
test
(bad)
bound
fcomip
mov
mov
push
imul
iret
xor
into
add
xchg
out
cmc
pop
or
hlt
(bad)
jmp
sar
cmp
push
shr
clc
push
and
cmc
sub
repz
jge
mov
mov
jl
mov
pop
push
inc
push
or
adc
rol
clc
mov
pop
or
cdq
xchg
int
push
mov
(bad)
pop
clc
pop
jg
test
xchg
pop
aam
mov
xor
pusha
jecxz
ret
in
call
test
sub
inc
sub
cwde
xor
push
push
push
pushf
mov
dec
jmp
repnz
pop
pop
and
jno
out
and
adc
shl
out
sbb
mov
loope
hlt
daa
push
lea
cmp
fidiv
movs
inc
lea
ds
cmp
es
rcr
sbb
fidiv
sbb
frstor
outs
aad
mov
stc
sub
adc
adc
(bad)
sub
jns
xor
(bad)
ficomp
iret
dec
xor
(bad)
imul
aaa
add
aaa
xchg
and
ins
dec
mov
das
cmps
or
push
sbb
xor
(bad)
sbb
adc
fs
retf
dec
mov
into
push
cmps
fs
mov
push
das
rcr
sub
cmps
or
push
add
es
or
mov
jl
shr
mov
cmp
not
mov
je
mov
movs
sti
jmp
loop
dec
sbb
pop
clc
mov
(bad)
(bad)
popa
daa
fs
push
(bad)
aam
pop
xor
adc
in
jmp
icebp
inc
mov
sub
mov
jmp
pop
pop
out
lods
es
in
cmp
and
fidivr
scas
xchg
les
(bad)
mov
scas
fld
push
cmp
les
mov
outs
(bad)
sub
sub
pop
jb
jl
push
fisttp
mov
and
adc
popa
xchg
lahf
pop
lods
or
mov
test
(bad)
retf
lock
mov
jb
jmp
loop
and
pop
into
cmp
in
push
(bad)
cmp
ror
dec
xchg
imul
pop
scas
int3
pop
dec
mov
sub
aas
lock
mov
push
sub
call
jge
sub
rcr
mov
adc
adc
mov
sbb
mov
jmp
xchg
imul
rol
js
in
imul
test
in
mov
ins
jle
xchg
mov
mov
int3
dec
cmp
test
mov
aam
mov
and
push
fidivr
sub
adc
fnstsw
rcr
cmp
mov
xor
cli
aas
ror
or
test
shr
retf
mov
hlt
mov
stos
stc
test
jge
xor
sbb
add
mov
mov
adc
or
cwde
mov
sub
dec
test
ret
pop
into
fbld
aam
mov
sbb
inc
jne
xchg
xor
add
jno
xor
pop
mov
test
or
dec
scas
xchg
mov
xlat
mov
into
push
(bad)
xor
shr
enter
fs
and
jecxz
icebp
push
or
and
test
rcl
(bad)
xchg
sbb
dec
inc
xchg
lods
aad
jno
xor
int3
adc
scas
mov
or
pusha
mov
xchg
dec
push
fsubr
ds
mov
mov
cld
or
retf
scas
fsubr
cld
in
and
xor
stos
and
or
sbb
adc
xor
jno
inc
stc
and
dec
and
sub
cmp
retf
xchg
pushf
ret
mov
jae
aad
push
push
push
les
rcl
dec
ret
(bad)
push
loop
into
out
(bad)
and
or
fmul
adc
inc
cmp
mov
nop
add
ins
mov
ins
mov
cmp
or
call
in
and
je
or
xchg
popa
jl
sbb
neg
aaa
push
out
out
icebp
mov
cmp
inc
sbb
mov
jmp
repz
cmp
rcl
(bad)
data16
inc
das
in
push
push
imul
mov
mov
inc
mov
arpl
jmp
xlat
sub
mov
cdq
scas
pop
or
int3
ret
cmp
popf
and
jae
cld
fadd
clc
push
ins
sub
or
sub
adc
xchg
loopne
adc
arpl
es
jl
cmps
jo
mov
les
and
push
sahf
outs
jg
and
data16
imul
mov
js
rcl
dec
fwait
out
cmp
outs
mov
and
jmp
fsubr
retf
mov
leave
push
out
push
ret
and
add
mov
or
scas
ins
in
xchg
and
ds
pop
sti
push
jge
pop
aam
fwait
stos
xor
xchg
repz
mov
test
push
mov
stos
adc
sub
cmp
int3
push
cmps
push
or
and
dec
stos
adc
jo
pop
test
popa
mov
iret
outs
in
lds
mov
outs
and
mov
ins
add
pop
dec
inc
inc
jmp
sahf
fistp
add
dec
sahf
sub
fist
xchg
das
dec
mov
adc
xor
push
enter
fidiv
push
cmp
push
lea
xchg
pop
xchg
(bad)
sbb
mov
lods
jb
sbb
cmp
ret
sub
adc
outs
gs
cmp
fwait
retf
outs
fisub
mov
cs
test
adc
sbb
or
mov
stos
xlat
loop
xchg
bound
cmp
pop
fidivr
xor
sub
dec
mov
sbb
(bad)
lahf
int3
loope
repnz
nop
cmp
sub
imul
lock
sar
mov
pop
jg
adc
sub
cld
loop
ror
jns
xlat
jne
mov
mov
fmul
mov
or
jecxz
inc
jmp
test
in
bound
pusha
stos
push
fsub
dec
mov
sub
cs
push
(bad)
push
not
fwait
jae
cmp
sub
or
cmp
bound
sti
xchg
loope
(bad)
and
cli
in
xor
push
fnsave
fcomi
imul
sub
jo
shl
dec
stos
sub
or
push
ja
jg
call
clc
pop
cmp
repz
xchg
call
and
dec
ins
mov
push
hlt
xor
sar
sar
fsub
inc
add
mov
mov
jo
xor
mov
ins
outs
cmp
push
popa
pusha
adc
std
imul
ja
push
ins
dec
sti
js
mov
push
mov
mov
push
push
cmp
int3
test
pop
push
mov
inc
xchg
xchg
cmp
dec
cmp
test
mov
call
adc
sti
xchg
push
rcr
or
sub
rcl
and
add
cs
psubw
mov
daa
outs
cmp
mov
add
inc
cmc
into
jne
jl
jbe
add
pop
sti
fxch
add
and
mov
sbb
stos
mov
sub
rol
mov
cmp
out
stc
mov
and
cmps
int
sub
mov
lods
or
aaa
in
jp
jecxz
cmp
scas
lea
jnp
shr
mov
lods
cdq
mov
cwde
aad
jge
adc
cmp
jmp
mov
lahf
ins
int
sub
jl
fwait
cmovns
jnp
sbb
in
dec
add
xor
out
dec
xchg
inc
sbb
push
dec
and
sub
mov
jb
sub
jno
jmp
or
fdiv
xchg
and
scas
sub
add
cmps
hlt
cli
or
inc
mov
pop
cmp
inc
cmp
popa
push
mov
inc
mov
or
xor
sbb
cmp
fsubr
mov
fwait
adc
sbb
test
xchg
xor
pusha
ins
sahf
(bad)
jecxz
jl
fs
mov
gs
clc
aam
mov
pusha
outs
mov
scas
cmp
xor
repnz
(bad)
movs
ret
cmp
push
mov
popa
inc
jbe
test
inc
out
or
sbb
cmp
mov
(bad)
dec
(bad)
pop
in
inc
adc
mov
add
out
idiv
mov
push
movs
sbb
pop
jl
loopne
std
gs
inc
fmul
fwait
jge
adc
xchg
xor
bnd
cmp
jns
jbe
add
mov
iret
jno
and
rcr
add
and
cmc
and
lods
int
inc
mov
out
rol
pop
(bad)
push
and
add
and
aad
push
mov
cmps
adc
ret
lods
aad
dec
fdivr
mov
push
ret
mov
std
and
imul
(bad)
xchg
inc
and
adc
fstp
imul
jmp
xchg
and
add
and
adc
les
cmp
lods
mov
jne
jp
sahf
adc
or
pand
cmp
iret
sub
inc
pop
aas
loop
sbb
and
aad
ret
retf
cmp
icebp
cmp
pop
push
pushf
icebp
es
xchg
shl
clc
ret
mov
ins
out
into
jecxz
pop
sbb
aad
add
or
ret
je
daa
xor
(bad)
mov
xchg
xor
jo
and
test
mov
jg
arpl
push
sub
and
ror
adc
push
sti
jns
rol
inc
idiv
leave
and
inc
inc
idiv
inc
into
add
xchg
jle
sbb
shl
call
movs
inc
xor
mov
cwde
pminsw
push
cmp
xor
adc
and
pushf
xchg
mov
jle
mov
les
pop
or
and
not
sub
lods
mov
xchg
outs
mov
call
adc
cmps
retf
fwait
sub
jae
mov
int3
xchg
push
cwde
in
icebp
cmp
and
bound
leave
mov
adc
nop
movs
mov
out
stos
mov
sub
test
js
cdq
or
mul
pop
sbb
jnp
cmp
inc
dec
out
mov
aad
popa
mov
inc
pop
push
fbstp
jp
jns
ja
stos
inc
pushf
int3
mov
xor
add
stos
pusha
call
cmp
mov
or
pop
xchg
push
in
popa
and
mov
mov
pop
cmp
leave
xchg
xchg
inc
sbb
cmp
jecxz
mov
jge
inc
in
xchg
fdivr
(bad)
repz
stos
push
xchg
lock
cs
add
sbb
xchg
es
mov
inc
pop
aaa
(bad)
iret
in
and
push
mov
lds
movs
retf
arpl
in
aam
out
rol
push
cwde
or
jnp
addr16
cmp
rol
xor
fcomip
xchg
sti
cdq
cmp
into
jp
stc
in
aam
inc
ret
cmps
xor
repnz
sti
cmp
or
adc
aad
leave
inc
jle
nop
mov
adc
js
jp
(bad)
bound
pop
sbb
xor
pop
push
dec
js
push
movs
pop
cmova
cmp
fcomp
adc
std
fadd
hlt
cmp
lock
mov
jmp
jo
imul
sub
lea
imul
aaa
jae
xchg
xor
rol
mov
adc
gs
jmp
ds
icebp
jl
or
cmp
mov
adc
fbstp
arpl
or
cmc
push
adc
or
stos
xchg
push
push
iret
sbb
mov
ficomp
cmps
mov
cmp
xor
fsubrp
lea
(bad)
xor
lods
rcr
jmp
in
or
xor
div
or
and
rol
jg
xchg
jbe
cmp
arpl
pop
sbb
push
shl
mov
dec
imul
shr
test
cli
pop
jp
pop
ins
ss
xor
mov
lds
jp
imul
mov
jp
retf
and
ret
fcomp
pop
push
adc
stos
cmp
pop
adc
add
(bad)
retf
stos
shl
adc
mov
sub
dec
pop
cdq
ins
out
(bad)
xchg
mov
xor
int
mov
push
cmps
inc
add
idiv
nop
shr
into
(bad)
cwde
cwde
push
repz
dec
into
call
mov
int3
lods
push
add
aad
cmps
jl
and
inc
and
shl
aaa
scas
or
pop
out
loope
push
and
arpl
(bad)
icebp
pop
fmul
mov
inc
pusha
add
push
inc
cmps
dec
(bad)
out
sti
jns
inc
aas
add
inc
xchg
mov
mov
sbb
xchg
dec
sbb
retf
mov
ficomp
jle
rcl
fisttp
pop
xchg
shr
dec
iret
xor
mov
dec
arpl
hlt
in
mov
inc
jbe
daa
stc
inc
inc
sti
cmp
call
sar
push
xchg
sub
pop
pop
lahf
bnd
stc
es
sbb
retf
sbb
xchg
aaa
fcmovbe
pop
xchg
jae
push
fdivr
aad
mov
xchg
xchg
(bad)
hlt
inc
pop
inc
jmp
inc
xchg
dec
sbb
pop
loop
xor
mov
inc
inc
call
arpl
aam
not
cs
outs
and
add
push
loopne
les
pop
imul
cmp
clc
icebp
neg
inc
cwde
aaa
jle
push
cmps
pop
ret
xchg
xor
dec
aam
ret
inc
fwait
xchg
add
mov
xor
cmp
retf
adc
xlat
dec
dec
fild
mov
inc
vpermq
dec
inc
jle
sub
arpl
or
fst
call
or
xor
outs
aam
add
loope
sub
or
xor
out
rcr
popf
movs
mov
stos
sbb
sub
loop
pop
out
xor
loop
jbe
add
pop
sbb
jbe
add
mov
adc
out
jno
mov
outs
xchg
(bad)
imul
(bad)
iret
fcomip
retf
hlt
into
add
xor
mov
pop
std
nop
push
and
adc
xchg
pop
aas
icebp
add
xchg
xchg
outs
pushw
nop
add
in
ret
(bad)
fs
cmp
sahf
sbb
sub
mov
sub
(bad)
icebp
push
push
repnz
add
mov
mov
xor
adc
call
or
cdq
mov
lods
mov
or
aaa
gs
sub
enter
and
cmp
test
cmps
pop
sbb
ret
dec
data16
ds
xor
int3
jne
mov
mov
xor
xchg
jno
ja
adc
rol
sahf
jae
aam
xchg
or
mov
mov
sbb
xor
stos
inc
test
push
(bad)
or
mov
aas
and
ins
sbb
dec
xor
out
(bad)
ss
fwait
mov
(bad)
call
(bad)
enter
push
loopne
sti
mov
das
clc
or
ins
ror
jns
pop
xchg
cdq
inc
push
outs
xor
xor
xor
and
and
outs
fisttp
call
xor
int3
xor
(bad)
sbb
and
das
repnz
xchg
dec
rcr
(bad)
aaa
and
jo
ss
fild
sar
rcr
mov
or
fdivr
sbb
icebp
xor
sub
aas
das
sar
xor
mov
sub
stc
imul
push
mov
push
dec
pushf
ror
ins
and
xchg
dec
(bad)
lods
mov
add
iret
adc
rep
or
or
add
cmp
dec
in
mov
mov
aaa
cmp
mov
dec
cli
push
pop
inc
in
mov
sbb
ss
adc
inc
xlat
jg
test
es
sbb
loope
ret
add
lods
pop
push
or
mov
outs
mov
pop
std
loope
repnz
rcl
xor
adc
sbb
xchg
xlat
add
sbb
mov
xchg
call
push
ret
pop
cmps
aaa
scas
xlat
mov
pop
and
xor
(bad)
ds
cmps
mov
mov
adc
pop
popf
mov
add
pusha
xor
jmp
dec
retf
or
pop
xor
cmovno
std
fcom
add
mov
(bad)
out
mov
cwde
xchg
ss
jo
push
cmp
div
pop
mov
movs
push
mov
mov
cmps
aam
mov
movs
icebp
adc
or
(bad)
in
jo
jp
mov
dec
ins
(bad)
jbe
and
sbb
adc
cwde
lock
fucomi
lea
out
lock
jae
dec
jecxz
jno
rdpmc
and
lahf
mov
adc
push
xor
sbb
repnz
ja
dec
mov
(bad)
push
cs
add
xchg
or
lahf
adc
add
pop
cwde
or
lea
rep
inc
hlt
pop
sar
lea
mov
(bad)
setno
in
or
pop
cmp
jge
add
xchg
jle
pop
jl
mov
pop
hlt
in
in
cs
cmp
inc
mov
sub
loope
xor
cmp
iret
sbb
jne
dec
jo
mov
jp
movs
xlat
adc
dec
sub
mov
dec
je
dec
daa
jo
outs
push
enter
push
dec
scas
jmp
or
cmp
xor
popf
cli
imul
pop
jbe
cli
lods
ja
ins
or
ror
pop
(bad)
adc
push
jg
outs
xor
jl
(bad)
or
push
jmp
jnp
mov
cmp
ins
inc
push
sti
shr
(bad)
shl
push
shl
or
cdq
mov
loope
jmp
pop
outs
cld
inc
jp
inc
jle
test
jmp
mov
mov
cmp
adc
jno
cmp
test
pusha
sbb
ror
fwait
inc
mov
out
dec
fwait
mov
ret
das
mov
loop
xor
and
xchg
mov
and
jle
popf
jbe
mul
pop
add
cli
lods
sbb
icebp
push
cmp
cmp
dec
inc
cmp
mov
cmp
cmovl
rcr
test
mov
hlt
je
cdq
in
mov
call
push
test
cmps
pop
jl
xchg
test
test
cmps
inc
popa
jbe
sahf
xor
mov
adc
test
xchg
push
adc
or
dec
xchg
mov
(bad)
cmp
and
xor
inc
stos
nop
scas
fadd
inc
xor
loopne
mov
test
sti
mov
ja
out
cmc
push
jo
cmc
(bad)
arpl
out
pop
in
and
dec
inc
in
in
pusha
outs
fcomp
adc
xlat
in
sub
adc
sbb
test
jnp
jnp
mov
shr
push
cdq
dec
sub
sar
aaa
mov
inc
popa
(bad)
jge
shr
xchg
jl
jbe
lods
and
mov
gs
dec
add
mov
ja
test
and
xor
aad
aam
out
add
mov
stos
sub
push
rcr
inc
adc
(bad)
in
in
xor
mov
and
out
repz
ror
xchg
and
in
dec
jb
sbb
mov
cs
(bad)
inc
fsub
add
fwait
cmovle
loopne
adc
cld
hlt
push
mov
stos
pop
jmp
sbb
dec
stc
ret
ins
inc
inc
and
add
push
ds
jbe
pop
test
mov
outs
push
ret
jg
cmp
mov
arpl
sbb
stos
jns
fs
(bad)
push
add
xor
mov
dec
pop
(bad)
mov
bound
sar
sbb
mov
(bad)
scas
pop
fsubr
pop
dec
jp
xchg
or
pop
mov
mov
pop
arpl
pop
mov
mov
or
xchg
or
je
jle
ror
xor
jecxz
jns
cdq
sub
cmp
jae
cs
pop
fs
in
xor
psrlq
adc
cmp
pop
jge
retf
mov
jp
shr
cmp
pop
hlt
out
mov
push
(bad)
das
mov
imul
sub
inc
xchg
xchg
push
imul
fild
adc
jo
out
xchg
xlat
lahf
cmp
outs
jnp
fdivr
xor
inc
xor
mov
scas
sub
mov
(bad)
mov
scas
xchg
jl
int3
stos
fisttp
dec
push
cdq
dec
fistp
sub
cld
mov
mov
cmc
adc
jmp
or
sub
pop
jne
nop
push
pop
mov
dec
pop
je
xor
stos
push
mov
enter
push
leave
and
out
loope
mov
fwait
in
ja
in
fnstcw
stos
pop
daa
lock
jmp
cs
arpl
mov
xchg
sar
or
add
nop
cmp
movs
xor
scas
(bad)
jg
adc
add
inc
cmp
nop
push
(bad)
fbld
mov
push
les
std
xchg
jge
xchg
scas
jmp
pop
ss
in
(bad)
(bad)
lods
mov
cli
xchg
inc
in
xor
jge
retf
cli
aad
loope
call
sar
pop
and
mov
fs
xor
dec
les
shl
rcl
mov
int
loope
sar
sbb
mov
out
icebp
xor
test
loop
pusha
test
inc
jb
mov
push
pop
in
sbb
dec
movlps
ins
aas
aaa
xchg
jne
dec
dec
rcr
and
cmps
nop
iret
adc
sub
rol
(bad)
push
push
push
out
add
dec
jb
mov
adc
iret
pushf
js
sub
dec
inc
outs
dec
sbb
mov
xor
xchg
scas
add
movs
jne
lahf
retf
das
sbb
and
aas
aaa
in
pop
(bad)
hlt
sub
or
push
(bad)
mov
pop
sub
test
push
das
ins
inc
mov
mov
lea
inc
stos
movs
push
mov
dec
adc
add
xchg
ror
xchg
push
mov
lods
loopne
sbb
jo
push
sahf
fistp
or
inc
gs
sub
sbb
and
xchg
shl
xchg
je
mov
(bad)
fild
inc
sbb
or
jmp
pop
stc
or
icebp
out
retf
pusha
pop
jg
and
(bad)
fsubrp
loope
sahf
pop
movs
jl
push
inc
(bad)
cmc
sub
movlps
loopne
mov
and
movs
fisttp
push
ss
xchg
push
retf
mov
jmp
mov
rcl
adc
lds
mov
jb
std
gs
cld
fcomp
das
aas
cli
push
ss
or
jb
dec
js
cmc
and
xchg
push
js
call
pop
adc
rcr
ss
pop
stc
lock
call
mov
push
sbb
jns
mov
inc
cmps
mov
push
adc
jmp
or
outs
ds
cmps
xchg
xchg
je
push
sahf
loopne
cmp
rcr
adc
std
cwd
cmp
out
mov
fstp
cdq
in
inc
sub
popa
imul
adc
cmp
popa
mov
fwait
pop
mov
mov
in
mov
lods
cmp
lds
pusha
(bad)
iret
mov
scas
lds
popa
jmp
inc
mov
ja
mov
mov
push
cwde
mov
mov
jnp
push
out
(bad)
scas
rcr
jb
test
mov
cld
push
xor
sbb
xchg
loope
or
inc
inc
sub
fldcw
retf
sub
mov
xchg
fisttp
not
imul
into
retf
ds
div
and
cmps
out
not
xor
out
add
jg
pop
and
pop
and
(bad)
imul
and
lds
mov
nop
adc
adc
jle
sub
jbe
sbb
sbb
add
xchg
sbb
ja
ss
das
push
and
ja
mov
dec
adc
pop
mov
imul
mov
inc
cmp
popf
push
xchg
nop
(bad)
jge
inc
arpl
xchg
push
shl
cmp
(bad)
in
or
mov
cli
sub
push
and
dec
cmp
push
es
stc
sub
in
out
dec
das
or
xchg
cmps
mov
pop
fmul
cmp
mov
mov
lock
jbe
jne
popa
js
popf
cwde
push
mov
imul
fst
out
loop
sub
mov
repz
xchg
mov
mov
pushf
mov
jbe
dec
adc
je
cmp
jb
pusha
jnp
test
and
es
mov
pop
push
sub
push
xchg
iret
sbb
imul
pop
jg
mov
out
ins
es
fstp
enter
es
cmps
sbb
popf
mov
fdivr
or
aad
scas
jnp
aas
push
mov
sbb
pop
call
cmc
push
loop
shl
mov
add
dec
adc
dec
and
dec
add
rcr
stos
in
clc
pushf
cmp
inc
in
mov
icebp
es
sbb
icebp
enter
jmp
sbb
inc
std
sub
retf
pop
inc
sbb
push
pusha
sub
ret
or
adc
adc
xchg
push
bound
das
test
rcr
xchg
or
dec
xchg
clc
cmp
jb
cmps
ror
or
popa
xchg
xchg
fs
sbb
jbe
jae
retf
push
mov
lahf
pop
cmp
(bad)
in
mov
jno
sbb
ds
xchg
cmovns
add
mov
mov
cmp
into
jae
and
xchg
dec
inc
jnp
sbb
not
je
jno
aas
adc
ss
add
fadd
sbb
sbb
(bad)
stc
cmp
cmc
hlt
in
xor
and
dec
jecxz
xor
fxch
sti
or
mov
mov
cmp
(bad)
dec
mov
mov
and
pop
ins
mov
fistp
call
fsubr
mov
mov
fldenv
cmp
or
das
mov
fwait
jle
aas
and
and
call
mov
and
aad
adc
jecxz
cdq
movs
fidivr
sbb
mov
outs
outs
pop
fdiv
adc
jg
sub
cmp
jmp
imul
xor
xchg
addr16
fadd
aam
fcomp
aaa
fcom
aaa
jp
std
pusha
or
cmc
in
sbb
mov
std
jb
in
inc
cmc
cld
ins
fst
push
pop
mov
or
ins
leave
pop
ins
fsub
aad
lods
sub
sahf
imul
mov
mov
sbb
add
js
loopne
mov
mov
jg
pop
adc
fxch
cmps
cmps
push
sahf
mov
popf
cmp
aaa
jmp
inc
sub
push
push
ss
stos
popf
cmp
fwait
les
lock
fs
push
into
lods
sbb
xchg
inc
dec
xor
fisttp
pop
imul
into
pop
sbb
cmp
lds
push
test
imul
retf
gs
sar
jp
test
movs
loope
push
sub
hlt
test
push
cmps
ins
sar
cmp
or
adc
pop
rcl
mov
lods
sbb
ss
and
(bad)
ja
mov
jmp
mov
pop
lock
adc
test
test
ins
push
cmc
sbb
cmc
sti
cmc
es
jp
mov
(bad)
add
cs
mov
xchg
xor
dec
mov
pushf
and
ret
jg
jb
leave
mov
jl
pop
and
out
fdiv
jne
(bad)
nop
aad
sbb
aam
mov
pop
cmp
jnp
mov
cmp
xchg
sbb
loop
dec
add
mov
gs
push
sbb
ja
sti
ins
(bad)
jg
pop
and
sub
jno
repz
data16
dec
(bad)
(bad)
repnz
and
test
mov
inc
(bad)
sahf
dec
icebp
cdq
jb
or
mov
fidivr
ds
repnz
pop
sbb
fwait
sub
cmp
je
sub
dec
call
jp
cld
hlt
lds
(bad)
xchg
sub
scas
inc
dec
jbe
out
mov
call
ret
outs
(bad)
test
xor
cmps
jne
pushf
pop
ins
jns
mov
aad
cs
stos
cmp
add
pop
hlt
mov
repnz
sub
sbb
add
rcl
cmc
cmp
inc
mov
into
enter
cmp
add
pop
and
pop
or
inc
push
mov
out
lds
nop
push
mov
add
aad
mov
inc
dec
fwait
and
inc
cmp
cmps
add
xchg
sub
push
sbb
call
push
xor
icebp
and
fsub
push
pop
push
dec
jp
pop
fld
jl
and
imul
inc
inc
xchg
daa
clc
(bad)
xchg
enter
cmps
ins
je
cmps
or
das
xor
movq
push
movs
xor
cmp
out
iret
loopne
outs
popa
pop
mov
mov
retf
xlat
cmps
lahf
dec
sub
(bad)
xor
retf
fistp
iret
pop
add
stos
das
mov
cmp
and
addr16
cdq
add
(bad)
(bad)
add
pop
sub
test
cmc
or
xchg
push
fsub
rcr
enter
aaa
xchg
movs
xor
repnz
int3
xor
psrad
(bad)
out
sbb
mov
dec
ins
sbb
in
and
cmp
adc
jmp
dec
sbb
jecxz
icebp
mov
jle
sbb
int3
xor
xor
aaa
inc
adc
imul
lock
(bad)
and
fsubr
out
jp
call
and
sbb
sub
es
push
push
shl
cmp
and
test
das
shr
add
add
mov
push
pop
fild
fisttp
mov
or
loop
pop
jb
aam
les
push
ja
xchg
add
sub
sub
mov
adc
pop
jp
mov
mov
outs
pop
call
(bad)
aam
or
scas
push
jecxz
push
jle
ror
cdq
xor
retf
popf
pusha
icebp
das
dec
sub
sub
dec
and
test
mov
cwde
addr16
cmp
out
jmp
test
xchg
sti
pop
clc
pop
sub
xchg
loopne
dec
jbe
add
(bad)
and
cmp
mov
jle
sub
sahf
xchg
add
add
repnz
aam
mov
mov
cmp
rcl
mov
jp
sub
mov
or
add
jne
jge
jae
pop
push
mov
pop
loope
jmp
rcr
gs
jmp
jmp
mov
pusha
enter
mov
mov
cs
mov
and
cwde
add
outs
fst
or
cwde
mov
dec
mov
adc
scas
mov
sbb
sub
out
xor
sti
inc
movs
js
cmp
jl
cmp
arpl
mov
mov
cld
clc
mov
mov
xor
aas
repz
(bad)
adc
or
in
dec
retf
call
cmp
rep
mov
xchg
adc
into
add
inc
dec
cmp
mov
ret
push
push
lahf
or
retf
mov
lahf
pusha
push
mov
or
mov
add
push
sub
jno
xlat
jae
jg
adc
sbb
mov
leave
sub
loope
sbb
pop
add
repnz
sub
cmp
add
jnp
mov
outs
loopne
scas
mov
gs
push
enter
(bad)
pop
movs
xchg
ins
and
neg
mov
rcr
cmp
(bad)
repnz
je
mov
mov
xchg
hlt
jns
xchg
pop
test
mov
retf
out
mov
xchg
and
add
lds
pop
dec
ins
xchg
dec
adc
repz
mov
addr16
push
ret
jmp
xchg
pop
and
sahf
pop
cld
xor
push
inc
std
fmulp
dec
adc
add
fisubr
mov
and
scas
cmp
push
pop
rcr
leave
ftst
test
fnsave
xchg
cs
(bad)
dec
mov
out
pusha
gs
pop
cmps
xchg
cmp
int3
addr16
jg
enter
loop
lahf
cmp
imul
mov
and
in
mov
in
mov
or
cmps
jno
pushf
xor
int
pushf
out
xor
rol
cmps
repz
pop
std
cmc
or
mov
loope
sti
jnp
es
xchg
test
mov
xchg
push
mov
data16
jp
push
lods
adc
mov
fadd
fwait
ret
icebp
out
ins
sbb
shr
pop
mov
out
xchg
call
mov
fst
jl
(bad)
cld
mov
sbb
push
jnp
dec
popa
inc
add
test
sbb
mov
and
stos
in
sub
rol
mov
lock
fistp
fadd
lock
mov
mov
mov
popa
rol
mov
mov
sbb
test
mov
ret
mov
or
xchg
sar
sbb
clc
add
dec
fldenv
inc
mov
test
cs
mov
jp
popf
fidiv
(bad)
sbb
pushf
stos
gs
cmp
pushf
movlps
mov
or
xor
xchg
sub
lahf
loop
movaps
leave
mov
lock
pop
scas
adc
ja
js
mov
test
adc
ds
sar
push
push
icebp
mov
mov
out
add
test
dec
pop
xchg
fimul
aad
mov
hlt
fiadd
mov
or
call
sbb
xor
add
lds
lods
mov
mov
das
mov
in
mov
hlt
xchg
inc
not
add
push
xchg
xchg
ret
movs
push
mov
retf
rcl
ret
push
mov
push
mov
shl
mov
iret
jnp
and
ja
sahf
out
dec
xor
cdq
add
test
adc
or
mov
icebp
xchg
in
lock
push
push
fld
icebp
test
jbe
in
icebp
mov
outs
mov
push
add
popf
ret
shl
jae
xchg
xchg
or
jg
adc
jmp
mov
cmp
jecxz
aaa
(bad)
(bad)
pop
mov
and
mov
add
push
stos
push
or
out
cmp
int
mov
push
pop
test
adc
cmp
or
mov
loopne
cmc
sbb
push
dec
mov
fwait
pop
stc
pop
fisttp
sub
mov
mov
(bad)
stos
push
loope
(bad)
out
(bad)
shr
jno
or
pop
mov
scas
cmp
jge
adc
mov
mov
xor
bound
scas
shr
sub
sbb
sub
ins
mov
pop
jge
mov
xor
aam
aad
sbb
cwde
fimul
jne
mov
cmc
outs
xor
outs
jp
imul
jmp
mov
lock
outs
and
lods
push
mov
inc
or
in
mov
call
pop
outs
das
jg
movs
mov
sti
ins
or
xor
push
mov
jg
das
mov
mov
push
and
call
jb
mov
pop
and
add
pop
imul
lods
enter
mov
(bad)
fnstcw
cwde
mov
data16
xchg
ja
push
rcl
imul
pop
sub
call
mov
movs
inc
loopne
cs
(bad)
mov
mov
mov
xor
mul
mov
add
cdq
adc
add
push
loop
xor
sbb
xchg
adc
rep
pop
inc
ins
in
les
cmps
in
or
push
pop
adc
fs
add
cmp
mov
inc
mov
pop
lock
mov
xor
lods
xor
outs
mov
lods
ins
mov
(bad)
mov
mov
retf
jne
cmp
mov
(bad)
je
repnz
je
stc
je
mov
push
ins
repnz
sbb
fldenv
inc
xor
fld
jmp
stc
retf
jne
cmp
pop
mov
iret
mov
inc
pop
popa
mov
mov
aam
cmc
jge
jl
sbb
pusha
sbb
sub
mov
and
add
adc
xchg
(bad)
sbb
stc
mov
push
sbb
(bad)
push
xchg
xchg
les
out
pop
leave
sbb
push
ja
loopne
lods
cmp
push
and
mov
mov
cmp
(bad)
sbb
out
cmp
mov
pop
push
in
lahf
scas
enter
inc
outs
dec
dec
pop
adc
xor
xor
(bad)
gs
arpl
mov
or
mov
mov
pop
mov
je
call
mov
cwde
aas
fild
inc
(bad)
sub
add
mov
mov
inc
push
dec
inc
enter
sbb
jp
dec
loope
sbb
cwde
(bad)
xchg
int
and
sub
sahf
out
shl
shl
fxch
ins
mov
cmc
cwde
xor
aad
xchg
mov
lock
ss
mov
add
sbb
stc
dec
loopne
jp
popf
cld
in
imul
test
cmp
popf
push
int
xchg
push
cmp
mov
lock
je
int3
cli
aad
mov
xchg
mov
mov
out
call
test
sub
xchg
sbb
call
icebp
xor
jbe
cwde
inc
fiadd
push
gs
adc
inc
lods
stos
in
cmps
mov
lods
mov
mov
pop
sub
not
push
lods
push
ficomp
mov
push
js
xchg
mov
mov
popa
outs
cmp
dec
into
xchg
dec
jmp
jbe
test
push
cli
movs
arpl
inc
sbb
inc
retf
sahf
mov
ins
jl
inc
cs
lahf
pop
pop
add
cmp
out
xchg
(bad)
(bad)
hlt
into
mov
fld
jp
or
jge
(bad)
mov
jle
xor
inc
imul
sbb
jge
movs
mov
adc
mov
in
test
mov
nop
pop
jp
imul
jecxz
jnp
mov
int3
pop
in
xchg
or
xor
(bad)
mov
test
pop
push
adc
sbb
out
xchg
fnsave
mov
pop
add
(bad)
mov
xor
xchg
bound
sub
and
lds
sub
adc
lods
xchg
mov
lock
or
xchg
mov
dec
das
adc
ins
(bad)
daa
push
inc
add
add
xchg
aaa
and
push
sub
inc
push
mov
cmps
xchg
cmps
xchg
pop
call
cdq
xchg
(bad)
or
stc
sbb
int3
lahf
adc
dec
ss
mov
pusha
lock
pop
cmp
dec
and
push
stos
push
xchg
in
scas
sbb
xchg
rol
stos
in
scas
dec
push
push
jnp
in
test
push
cmp
inc
add
test
ja
cmp
pop
mul
iret
fbld
loop
jle
jecxz
es
sbb
repnz
xlat
aas
cmp
(bad)
xlat
inc
sub
cmc
es
inc
scas
stc
cmc
sub
(bad)
fist
mov
mov
and
pop
test
pop
das
imul
cld
add
add
pop
aam
inc
xchg
enter
daa
std
jle
out
loope
cmps
xor
mov
(bad)
fld
or
mov
sbb
cmp
sbb
cmps
jle
leave
ins
scas
pop
not
mov
aas
sub
adc
mov
aaa
test
sbb
dec
stos
mov
call
fwait
mov
mov
mov
push
test
aaa
jmp
and
dec
or
pusha
retf
xchg
out
push
fadd
movs
cmovne
pop
push
inc
push
movs
xor
fmul
cmp
cmp
or
neg
(bad)
shl
or
dec
and
push
mov
loopne
jb
repnz
sub
adc
cmp
cwde
and
xor
cdq
mov
pop
jg
mov
test
xchg
xor
and
jb
adc
rol
pushf
fnstcw
mov
mov
call
jecxz
sub
pop
mov
in
jp
movs
xor
pop
aas
in
and
stc
sbb
stc
add
stos
sub
retf
sbb
sub
inc
lea
or
mov
dec
addr16
mov
sub
cs
repz
nop
xor
cdq
mov
jle
test
cmp
jne
add
ret
push
aaa
out
(bad)
push
push
fsub
std
call
ss
addr16
and
out
pop
movs
dec
push
push
jb
mov
movs
sbb
mov
mov
aaa
mov
jbe
enter
stos
lahf
sub
out
sub
scas
inc
jg
add
retf
addr16
nop
popa
jecxz
mov
loope
mov
dec
or
xor
ds
add
lods
adc
in
dec
xchg
test
jge
xchg
popa
and
xchg
test
inc
popa
pop
leave
lods
dec
lea
movs
sbb
mov
fwait
cdq
mov
push
into
jo
mov
mov
(bad)
sbb
out
pushf
add
test
fdiv
sbb
pop
leave
or
not
in
ins
xchg
or
stc
movs
pushf
out
push
imul
pushf
mov
mov
inc
jmp
mov
cmc
inc
pop
sbb
xchg
es
and
add
mov
fidiv
dec
sbb
jg
bound
jmp
pop
or
je
pop
and
xchg
and
packuswb
mov
out
cmp
or
sub
push
fst
into
sbb
cmp
shl
dec
or
pop
adc
(bad)
fdiv
popf
lock
outs
iret
adc
shl
nop
jns
mov
adc
pop
mov
or
cdq
popa
sub
sub
mov
retf
pop
push
push
xchg
lahf
sbb
dec
cmp
xchg
sti
es
pushf
jnp
cmc
fst
mov
fbld
repnz
pop
jno
pop
scas
xor
mov
das
dec
add
xor
(bad)
bound
dec
xchg
sbb
push
dec
aad
or
xlat
leave
call
(bad)
stos
and
sar
out
pop
mov
and
fidiv
pop
neg
inc
adc
mov
fdivr
int3
cdq
pop
xlat
lds
inc
rol
out
(bad)
mov
ret
or
test
aas
push
mov
sub
test
mov
imul
outs
data16
repnz
mov
pop
js
add
push
stos
and
call
call
jg
lea
sahf
in
sub
in
or
dec
popa
lods
jmp
imul
xor
xor
mov
dec
pop
cmp
repz
xchg
js
daa
cs
xor
out
add
sub
ret
sbb
out
ror
mov
fxch
cmps
pop
mov
jmp
mov
in
mov
std
push
fdiv
inc
test
dec
add
and
mov
sbb
mov
bound
movs
imul
fwait
ret
scas
sti
ins
push
pop
adc
hlt
xchg
inc
dec
or
sahf
dec
mov
(bad)
xchg
mov
lahf
stos
pop
test
lods
lahf
or
cmps
mov
call
pop
adc
push
(bad)
fidivr
push
ficomp
cmp
pop
out
mov
mov
les
mov
out
inc
cdq
fsub
test
xor
aas
jmp
adc
test
stos
ds
adc
(bad)
loope
clc
cmps
aam
or
xor
mov
xor
sbb
cwde
adc
mov
and
mov
xor
mov
mov
in
(bad)
out
repz
outs
sub
mov
leave
jecxz
(bad)
cmp
jno
lds
add
mov
mov
stos
shr
or
pusha
jne
ret
stc
add
xor
jnp
sub
xchg
push
sti
jle
cwde
add
pop
jecxz
dec
hlt
xchg
iret
mov
dec
add
and
scas
mov
push
xor
xor
inc
inc
ins
stos
xchg
popa
outs
cmp
jmp
imul
movs
sub
jno
mov
xor
push
(bad)
test
mov
(bad)
and
hlt
test
adc
fucomip
jmp
jbe
sbb
xor
dec
int
xchg
cli
adc
dec
push
js
addr16
std
in
add
fsub
mov
push
xchg
stos
daa
push
(bad)
mov
xor
not
jle
loope
add
(bad)
mov
repz
jge
jo
mov
add
mov
(bad)
cli
push
jo
sbb
dec
bnd
test
mov
push
xchg
push
pop
inc
jne
sub
or
mov
or
popa
cli
ins
or
inc
add
mov
arpl
add
or
into
add
fsincos
mov
enter
xor
inc
data16
and
xchg
push
mov
and
mov
mov
jle
pop
xor
inc
mov
lds
scas
jecxz
in
mov
bound
ds
movs
xchg
jle
pop
push
sti
daa
jle
mov
addr16
repnz
stos
neg
push
inc
popf
and
bound
loop
sub
pop
es
pop
push
mov
jbe
stos
xchg
sbb
xor
outs
call
mov
xchg
push
mov
adc
dec
imul
(bad)
test
cmp
push
fwait
pop
mov
loope
arpl
jl
cmp
shl
fwait
inc
adc
in
pop
jbe
cmp
ds
idiv
call
ins
hlt
sti
mov
push
and
cmp
mov
dec
imul
or
dec
mov
jp
xor
cwde
push
rol
fdiv
adc
js
xchg
mov
retf
adc
push
pop
aam
xor
push
(bad)
sbb
jp
dec
out
out
mov
scas
ret
aam
ds
cmps
or
sbb
mov
pusha
dec
mov
mov
pop
aas
das
mov
and
xchg
ins
shr
or
js
bound
dec
shl
xlat
int3
mov
mov
jmp
add
pusha
xor
stc
in
in
sub
jo
xchg
jb
popf
fisttp
fnstcw
mov
and
inc
jg
addr16
cmc
xchg
cld
add
imul
mov
clc
je
lods
addr16
aaa
aad
fldenv
scas
das
mov
inc
sbb
and
addr16
and
(bad)
outs
ror
mov
ret
fsub
sub
cmp
jmp
dec
mov
mov
ret
call
lea
clc
mov
adc
cmp
mov
push
dec
jmp
cmp
(bad)
(bad)
add
mov
bound
jg
xor
rcr
xchg
ret
mov
lods
xchg
sub
cmp
dec
push
xchg
movs
cwde
mov
sbb
inc
dec
sub
xchg
scas
dec
xchg
mul
adc
and
aad
popf
push
adc
test
shl
cdq
js
das
adc
sub
jmp
cmp
neg
xchg
ret
sub
push
push
nop
in
cwde
dec
lea
jge
call
pop
dec
mov
inc
das
(bad)
test
clc
dec
imul
adc
jmp
and
add
inc
test
inc
sbb
pop
xchg
lahf
adc
ins
leave
retf
gs
mov
out
sub
add
add
xchg
loopne
repnz
sub
loop
push
mov
popa
adc
sub
sti
in
add
movd
mov
ja
pop
or
int3
sbb
out
sub
and
out
inc
pop
sub
jg
push
push
call
jbe
mov
scas
xor
add
pop
(bad)
xchg
sbb
or
cmp
(bad)
mov
xor
dec
sbb
cs
pop
outs
xor
in
push
inc
fst
aad
mov
jb
mov
sub
mov
cmps
push
jge
shl
loopne
into
xchg
stos
dec
stc
arpl
icebp
dec
je
sbb
dec
ins
inc
lods
cmp
jmp
push
ror
call
mov
cmp
jp
xor
mov
cmps
cld
retf
dec
(bad)
test
je
ins
jae
mov
and
scas
pop
rol
push
jno
xchg
jae
mov
mov
pop
pop
enter
scas
dec
imul
mov
stc
repnz
test
retf
mov
inc
fs
xor
dec
inc
ss
in
int
cli
int
(bad)
xor
test
out
mov
jne
(bad)
xor
imul
xor
dec
ins
call
ret
cmps
aaa
lock
pop
(bad)
sub
add
push
and
or
mov
inc
fistp
aad
mov
movs
cld
gs
jmp
dec
fcom
lods
adc
push
movs
fmulp
sar
movs
jno
and
call
mov
dec
outs
std
push
es
cs
xor
dec
xchg
pop
shl
(bad)
in
pop
cmp
or
psllq
jbe
jno
or
mov
push
sbb
xchg
imul
mov
jb
ja
(bad)
mov
or
cmp
cld
cmps
dec
xor
jb
inc
push
or
mov
test
jmp
leave
shl
in
fisubr
mov
(bad)
aam
and
stos
ins
adc
rcl
cmp
inc
pushf
test
pop
(bad)
pop
cmp
loope
mov
(bad)
mov
femms
mov
mov
cli
and
jp
or
sbb
add
std
xchg
test
jns
dec
jne
out
adc
xor
adc
cmp
cmp
(bad)
int3
lods
adc
neg
inc
fisttp
inc
dec
ds
fwait
cs
add
push
aas
es
inc
(bad)
adc
jmp
or
dec
pop
mov
pop
outs
push
imul
std
mov
imul
mov
sub
push
es
push
in
xor
stos
push
fisubr
hlt
mov
adc
popf
xor
std
cs
fsubr
dec
mov
arpl
adc
push
pusha
pop
mov
dec
call
lock
aad
pop
xchg
cwde
fistp
xor
pop
cmp
ins
hlt
and
repnz
repz
or
bound
or
dec
mov
sbb
data16
repz
push
jb
stos
mov
jne
and
mov
jge
sahf
add
lods
add
xchg
adc
lahf
push
es
adc
jg
mov
fsubr
and
fcmovnu
jle
jecxz
add
mov
mov
loop
stos
iret
pop
push
gs
push
mov
loopne
mov
pop
ror
aam
cmp
mov
sbb
pop
push
push
dec
push
mov
int3
gs
(bad)
aad
cmps
rcr
bound
repz
mov
pushf
xor
ins
cmp
sub
cmps
or
adc
rcl
js
sub
jb
addr16
cs
loopne
xor
cmp
jne
xor
pop
std
sub
push
add
push
add
into
xor
das
adc
arpl
scas
rcl
enter
pop
sub
je
stos
cld
ins
pop
sbb
mov
xor
arpl
mov
fs
mov
pop
fldenv
sbb
mov
jg
sub
(bad)
(bad)
push
stc
push
inc
fcomp
dec
or
(bad)
in
aad
in
pop
es
push
addr16
jge
pop
push
xchg
inc
cwde
movs
ss
or
pop
push
bound
rol
(bad)
std
sbb
lock
xor
idiv
(bad)
and
push
bound
cdq
dec
inc
xchg
and
(bad)
pop
xchg
mov
pop
lods
rcr
mov
and
push
pop
in
lea
ja
outs
push
dec
push
sub
xor
rcl
adc
ror
nop
fnstenv
dec
mov
js
and
xchg
mov
cs
int3
inc
scas
pop
xchg
call
fisub
pushf
dec
jl
jae
rcl
shl
pop
outs
lds
rcl
cs
shl
jno
xlat
loop
adc
pushf
stos
not
pop
sbb
loop
mov
out
inc
mov
cmp
mov
pop
cs
xor
addr16
or
pusha
sub
test
jge
or
jbe
jbe
mov
fcmovnbe
outs
(bad)
inc
inc
lods
mov
lods
push
push
mov
jne
into
dec
scas
xchg
int
(bad)
mov
push
movs
cld
movs
pop
dec
push
jne
out
rcl
lea
mov
add
imul
jge
stos
lahf
or
(bad)
outs
mov
daa
cs
jno
add
fld
mov
inc
jne
cmp
(bad)
cmp
inc
or
inc
cmp
dec
mov
jb
add
mov
scas
call
inc
sahf
xor
(bad)
mov
lahf
neg
rcl
or
mov
pop
and
in
xor
sahf
popf
mov
inc
sbb
mov
xor
test
jnp
daa
in
mov
push
ret
inc
popa
popa
enter
cmp
push
ins
out
and
mov
nop
add
je
and
xchg
pop
jp
std
mov
loop
popf
cmp
fisttp
stc
jecxz
mov
sbb
xchg
or
in
ss
lahf
dec
mov
add
icebp
xchg
rol
test
pop
jmp
push
fild
in
mov
pop
xchg
lods
sar
and
inc
adc
or
or
mov
or
(bad)
fisttp
sti
stc
push
sbb
pop
in
psubusw
sbb
cmps
mov
xor
mov
push
retf
or
cli
pop
sbb
lds
rcr
sbb
mov
lock
lds
popf
pop
dec
out
movs
pop
lock
clc
add
fmul
add
push
mov
jg
out
aaa
or
outs
sbb
mov
sbb
stos
hlt
pop
bound
imul
adc
mov
add
les
aaa
mov
dec
or
inc
lahf
jecxz
test
test
stc
pop
dec
not
xchg
sub
shr
pop
jnp
mov
fiadd
int3
or
aam
and
out
hlt
mov
and
lods
mov
int
mov
sub
inc
push
pop
popa
mov
imul
sti
call
lahf
stos
(bad)
jecxz
test
push
pop
outs
pop
fadd
xchg
arpl
outs
xchg
fst
int3
push
dec
in
shl
hlt
aad
ret
jl
int
stos
pop
mov
scas
jo
pmuludq
mov
xchg
mov
loop
pop
cmp
adc
jg
cwde
cwde
jmp
data16
fcmovne
repz
lods
mov
mov
push
xchg
hlt
xor
lds
xchg
loopne
cli
in
into
xchg
fidiv
push
loope
fstp
adc
xchg
mov
pop
xchg
adc
sub
mov
cdq
pop
and
popa
(bad)
retf
repnz
push
push
cld
cmps
mov
and
sar
inc
fsub
or
dec
push
or
mov
mov
rcl
xlat
je
xor
dec
aam
add
mov
xlat
mov
lods
aaa
js
or
inc
pop
rcr
adc
xchg
or
(bad)
pop
shl
lahf
cmp
test
add
(bad)
sti
repnz
mov
(bad)
pushf
pusha
repz
jp
xchg
and
je
mov
lds
sub
mov
lock
jo
pusha
xor
or
adc
cmp
addr16
inc
xor
cmp
mov
push
dec
push
add
shl
(bad)
mov
xchg
hlt
cld
push
ss
pop
mov
push
jle
cmps
push
xchg
add
loopne
in
push
loop
ror
mov
ret
out
call
adc
in
(bad)
pop
xor
movs
mov
cs
xchg
fnstcw
sti
rcl
leave
mov
mov
add
popf
inc
sub
movs
fmul
xlat
push
stc
cmc
add
test
fmul
das
xchg
popa
scas
popf
pop
repnz
das
or
or
cmc
push
stos
out
add
and
jno
mov
jp
dec
add
or
sub
pushf
lds
mov
sbb
fwait
iret
sub
xchg
push
sbb
in
cmps
out
jo
loop
jg
cmc
pop
adc
push
ins
mov
fstp
pop
fsub
stc
add
mov
arpl
dec
or
jnp
or
out
add
mov
cmp
jmp
inc
push
fucomip
ins
add
fstp
aad
xor
and
movs
jns
lods
sub
inc
pop
(bad)
fsubr
push
mov
test
jmp
icebp
and
push
xor
je
cmps
fwait
push
push
lods
or
shl
inc
or
inc
inc
add
mov
in
jp
int
and
mov
cwde
imul
retf
in
adc
enter
xchg
std
cmps
daa
fsubr
adc
jbe
lock
dec
sub
pop
push
and
(bad)
jbe
jae
sub
xchg
jg
cmc
add
adc
in
cli
cmp
adc
sbb
lods
cmp
jbe
and
sbb
push
stos
adc
jmp
loope
mov
loope
sahf
or
xchg
inc
in
das
dec
push
jmp
(bad)
pop
stc
pusha
or
repnz
lds
cs
pop
sub
scas
sbb
call
cmps
jmp
push
inc
jmp
imul
jmp
adc
mov
xchg
xlat
sub
in
mov
ja
out
dec
jmp
sbb
loopne
pusha
push
popf
push
lods
and
or
push
not
sbb
xchg
xchg
sbb
adc
or
mov
(bad)
outs
shl
push
pop
bound
jl
inc
jl
std
movs
mov
out
dec
add
push
pop
out
mov
and
clc
cmps
sbb
dec
jne
lock
or
xchg
add
jae
ss
test
pop
sbb
test
jnp
out
mov
stos
aas
test
push
call
jecxz
mov
xor
fs
add
js
adc
rol
loopne
mov
sti
(bad)
rol
div
outs
movs
shl
jb
fwait
mov
jnp
pushf
dec
scas
loope
scas
std
leave
mov
pop
xchg
jne
jg
daa
inc
xchg
xor
and
add
jne
xor
adc
lahf
mov
inc
iret
push
mov
xchg
mov
push
sbb
loopne
jne
mov
pusha
or
lahf
sar
jae
pop
mov
dec
lock
xchg
mov
int3
jae
lahf
iret
and
cli
mov
addr16
mul
test
into
outs
dec
add
mul
aaa
jmp
popa
xor
fsubr
test
loop
fsubrp
loope
xchg
retf
clc
jae
mov
lahf
mov
dec
cmp
ja
and
out
mov
mov
je
dec
popf
add
mov
mov
push
leave
inc
sub
fwait
call
cld
ret
sub
sahf
sub
sbb
test
push
(bad)
int3
in
inc
jmp
fs
pop
xor
popa
icebp
pop
mov
xlat
xchg
xchg
inc
retf
pop
mov
imul
push
stc
pop
inc
pop
xor
add
pop
adc
mov
call
icebp
sub
and
cdq
out
js
xchg
jecxz
pushf
jmp
lea
jl
jb
gs
lock
loop
clc
mov
(bad)
std
pop
arpl
mov
mov
mov
push
pop
xchg
in
cmp
jno
lahf
pop
in
stos
mov
stc
das
sub
pusha
jle
jg
and
jp
cdq
mov
and
xchg
jb
xchg
aaa
xchg
cmp
cmp
add
ret
aaa
pop
aam
sahf
nop
movs
call
push
jle
mov
outs
test
addr16
(bad)
cld
aaa
or
adc
mov
push
push
pop
ins
mov
(bad)
or
ds
inc
pop
jns
sbb
out
pop
(bad)
push
cmp
cmp
lea
and
ret
push
int
movs
out
call
lea
sub
cld
cli
pop
jl
xchg
cmp
or
repz
jle
jmp
stos
mov
mov
jo
pop
mov
sbb
fwait
inc
in
mov
(bad)
sub
jne
and
in
scas
mov
shl
and
push
xchg
inc
mov
dec
mov
adc
push
std
inc
sub
movs
cmp
inc
jmp
arpl
mov
ins
hlt
mov
mov
jbe
test
fstp
jl
aas
imul
sahf
loop
(bad)
mov
ret
cld
test
rol
ret
pop
fwait
sub
adc
ret
push
mov
cmps
and
cmps
or
pushf
adc
sti
or
jecxz
in
sbb
ret
jne
aad
xchg
jmp
lds
cmps
mov
sbb
push
push
lea
lds
into
aam
js
add
push
movs
movs
call
sbb
jle
js
int
mov
inc
jmp
mov
iret
jl
movs
mov
and
push
push
mov
fnsave
js
pop
dec
push
mov
lahf
sub
lock
lock
push
loope
cmp
cmp
nop
loopne
xchg
xor
pop
pop
and
mov
xchg
(bad)
outs
sub
sub
dec
jb
lock
or
fwait
sub
jo
ret
jo
sub
and
lahf
lahf
inc
mov
cmp
pop
cmp
inc
inc
inc
cmps
aad
add
sbb
push
scas
sub
stc
mov
jo
sbb
pop
xchg
adc
jmp
and
loopne
rcl
sub
sub
lds
or
and
fist
inc
ret
cmp
rcl
mov
xchg
jbe
and
hlt
test
sub
mov
dec
jmp
popf
adc
jmp
pop
xor
mov
jmp
in
push
(bad)
sbb
std
xor
xor
jnp
rcr
jmp
in
dec
xchg
pop
call
xor
mov
aad
fs
or
test
push
repnz
cmps
ss
pusha
leave
rcr
xchg
xor
inc
cli
and
jbe
enter
std
inc
cmp
pop
nop
mov
inc
sbb
lock
test
fwait
xor
sbb
lahf
rcr
or
imul
and
pusha
dec
lods
clc
es
icebp
(bad)
dec
out
ja
or
inc
pop
cmc
fdivr
xor
pop
(bad)
xor
adc
mov
pop
add
pop
mov
jmp
pusha
je
stc
cmc
jge
fimul
add
sub
and
ret
and
dec
xor
or
scas
test
sar
adc
cwde
pushf
ficom
sti
test
pop
(bad)
hlt
cmp
jecxz
imul
cwde
pop
shr
cmp
jmp
push
bound
adc
jae
pop
mov
test
pop
arpl
stos
scas
push
loope
xchg
mov
mov
sub
mov
xchg
jmp
jbe
sahf
mov
dec
push
jmp
or
int3
stc
sub
lahf
xchg
mov
lock
les
fdivr
and
pop
cwde
mov
jmp
int3
mov
push
and
rcr
push
outs
xor
pop
sbb
aad
mov
mov
fwait
mov
or
sbb
mov
jge
xchg
es
push
ds
shl
mov
ret
and
push
push
push
dec
cmp
adc
xlat
loope
sub
mov
add
dec
pop
cmp
mov
push
jmp
test
out
js
pop
cmp
sahf
xchg
out
lock
std
and
cmps
movs
fistp
loopne
sbb
adc
jecxz
push
hlt
adc
dec
cli
mov
das
push
cli
push
cmps
adc
shl
xchg
mov
dec
dec
sub
adc
mov
pop
cmps
int
loop
stos
sub
cmp
mov
(bad)
lds
push
push
push
ficom
repnz
pop
mov
popf
sbb
dec
jge
or
add
dec
adc
or
add
fidiv
into
inc
pop
xchg
mov
xchg
pop
dec
or
bound
or
push
sbb
daa
dec
mov
clc
aad
es
adc
sbb
aad
jge
test
and
lea
adc
push
gs
dec
mov
push
push
inc
arpl
push
cmp
inc
add
pop
dec
adc
daa
mov
or
mov
lahf
cmc
push
enter
call
psrlq
ja
mov
sub
mov
loopne
lea
add
push
adc
cmc
sub
and
mov
retf
xchg
or
and
mov
cmp
push
mov
jno
push
add
les
dec
bnd
icebp
add
push
jne
jmp
mov
sar
arpl
adc
add
and
or
adc
dec
pop
push
(bad)
jae
sbb
arpl
test
lock
add
mov
adc
mov
add
mov
scas
mov
mov
repz
push
pusha
mov
imul
clc
lock
scas
jmp
xor
add
xlat
ins
dec
mov
cld
jl
mov
jmp
cmp
scas
mov
fsub
in
fucom
movs
adc
lock
mov
out
retf
call
or
pop
mul
lds
cmc
aaa
add
sbb
jbe
push
test
add
jmp
pop
xor
mov
fs
aad
push
daa
cli
nop
push
ret
mov
sub
cmps
mov
pop
jae
mov
jns
add
adc
mov
jo
test
retf
mov
pop
add
call
int
out
mov
inc
out
adc
sar
mov
mov
inc
js
push
(bad)
dec
push
jbe
and
sub
sbb
dec
mov
test
mov
push
stos
std
dec
push
ins
pop
lea
in
sbb
pushf
test
out
js
leave
cmp
rcl
fnstsw
out
mov
or
fwait
in
jmp
mov
rdtsc
fmul
mov
popf
loope
sub
lods
add
repnz
pop
je
imul
or
bsr
fxch
mov
pop
pop
dec
ds
xor
popf
out
cmc
(bad)
stc
mov
cmc
adc
jge
movs
sbb
adc
cmc
pusha
dec
xchg
out
mov
jb
sub
or
push
aam
add
adc
sub
push
rcl
jb
inc
nop
pop
inc
jmp
push
outs
stc
mov
or
and
ret
dec
and
in
pop
fld
xor
enter
mov
cmps
adc
xchg
dec
jge
push
cli
nop
mov
sahf
pop
out
inc
xchg
enter
leave
out
(bad)
xlat
cmp
stos
cwde
fiadd
pop
add
ins
jle
test
shr
or
dec
ja
into
daa
jl
mov
shl
dec
imul
mov
lock
repz
adc
loope
(bad)
fcmovnu
std
or
call
xchg
cmp
fstp
adc
or
xor
add
mov
out
stos
xor
mov
xor
std
or
or
ret
cmp
aas
fsub
ss
(bad)
loop
push
out
xchg
cwde
int
add
add
je
(bad)
out
pop
adc
call
mov
int3
popf
fisttp
in
movs
and
addr16
mov
scas
cmc
pop
inc
sbb
dec
std
imul
ds
jge
dec
in
push
jo
loope
ins
imul
cdq
iret
jmp
mov
mov
xor
dec
icebp
lahf
sbb
div
mov
nop
push
jmp
ins
mov
popf
cmps
dec
cmp
push
pop
dec
xor
adc
push
scas
mov
shl
jo
push
int3
dec
mov
fst
iret
mov
adc
popf
scas
mov
fwait
mov
pop
dec
cmp
outs
xchg
pop
out
in
test
or
jne
fdiv
nop
mov
or
dec
mov
fldenv
xchg
jb
call
xor
push
mov
mov
mov
fsubr
inc
mov
clc
mov
rcr
push
jmp
jle
mov
fwait
addr16
jo
xchg
in
cwde
dec
mov
sbb
ds
mov
jp
in
xor
lods
mov
aas
shl
retf
(bad)
movs
dec
cmp
push
push
jbe
test
nop
dec
call
mov
and
jnp
icebp
(bad)
out
dec
mov
jo
icebp
int3
mov
test
or
int
mov
out
daa
lods
jnp
(bad)
xchg
add
mov
push
(bad)
or
xlat
ds
push
in
loopne
clc
jg
cmp
icebp
inc
mov
jns
scas
arpl
xor
int3
and
fwait
in
popf
inc
pop
cmp
popf
mov
add
stos
leave
add
inc
pop
movs
aad
xor
and
outs
mov
xchg
out
cmp
mov
test
sbb
fldl2e
mov
push
cmps
outs
mov
gs
test
sbb
xor
fiadd
shr
pop
mov
push
scas
movs
stos
neg
inc
popa
sub
retf
sbb
pushf
stc
adc
xchg
add
call
xchg
aas
sub
mov
sub
or
or
cwde
(bad)
out
xor
add
lea
push
inc
and
mov
stos
sub
inc
call
out
xor
sbb
out
popf
push
call
add
cmp
add
in
pop
or
xor
jo
mov
je
sub
push
cmp
repz
outs
mov
imul
stos
jp
shl
inc
(bad)
mov
sub
jb
adc
push
adc
pusha
mov
mov
add
fdiv
fwait
inc
mov
push
xchg
mov
mov
in
movs
fnsave
retf
inc
vmwrite
cmp
outs
sbb
mov
dec
out
inc
scas
mov
cli
out
sbb
dec
xchg
mov
xchg
jno
jle
cli
cmps
int
add
clc
movs
xchg
mov
dec
pop
push
jnp
sbb
shl
cmp
stos
cs
sub
adc
push
push
xchg
das
xchg
xor
or
dec
retf
mov
inc
repz
cmp
push
mov
loopne
jb
call
add
je
call
hlt
dec
pop
fild
fstp
dec
in
(bad)
and
mov
xchg
rol
cmp
mov
jecxz
fwait
push
dec
xchg
mov
stos
cmp
pop
jbe
mov
add
mov
sbb
pop
mov
push
push
test
push
int
pop
add
xchg
shl
aad
xor
lods
push
push
fldenv
(bad)
enter
inc
inc
dec
loope
lods
ret
aad
in
sub
mov
ss
push
and
push
pop
stos
lahf
and
test
cmp
loope
popf
bound
push
or
xor
out
inc
fsub
enter
rcl
pop
jns
es
pop
test
mov
add
jl
mov
sub
fisubr
xor
xchg
movs
fisubr
retf
jge
push
stos
jge
fcmovb
bound
jno
retf
or
repnz
out
sub
out
jbe
cmp
stos
fst
retf
cld
pop
cmp
mov
push
les
je
or
pop
or
jmp
cwde
adc
and
test
iret
mov
fiadd
jo
mov
jbe
(bad)
pushf
fiadd
pop
cmps
mov
xchg
iret
xor
retf
rcl
sbb
xchg
sti
leave
int
ret
mov
fdivr
dec
pop
lahf
lea
mov
add
pop
iret
mov
push
mov
or
hlt
(bad)
jmp
sbb
mov
push
and
mov
call
mov
arpl
pusha
jno
fwait
mov
mov
retf
dec
test
mov
inc
pop
push
xor
aam
clc
sub
aam
dec
adc
mov
inc
neg
aad
dec
call
inc
mov
xor
dec
stos
ret
ret
pop
cmp
lock
cdq
fst
rol
jo
out
in
inc
jg
(bad)
cli
dec
(bad)
jb
imul
fisttp
loope
mov
repz
xor
jmp
out
(bad)
mov
push
xchg
lahf
outs
push
mov
mov
repz
int3
lock
test
movs
sti
lods
dec
pop
push
ins
jnp
xchg
cmp
jno
(bad)
pop
shl
cmpxchg
mov
loopne
clc
daa
outs
cmps
xor
push
mov
retf
fdivr
mov
sub
push
repz
in
inc
push
cmc
(bad)
adc
xchg
inc
fdiv
jle
lock
fbstp
ffreep
xor
imul
and
shl
es
loop
scas
add
(bad)
and
nop
push
push
mov
fsub
fnstcw
sub
stos
dec
stos
jae
jg
dec
and
call
and
popf
arpl
xchg
mov
dec
adc
addr16
je
rsqrtps
and
fcomp
fwait
jnp
push
mov
(bad)
and
push
dec
sub
or
out
push
addr16
aaa
mov
or
in
pop
je
popf
rol
mov
loopne
inc
and
add
aad
or
xchg
aaa
jmp
sbb
sub
(bad)
mov
iret
cmps
xchg
fldcw
push
hlt
inc
repnz
enter
test
pop
aaa
xor
dec
cwde
adc
jp
add
inc
mov
xchg
fnstsw
adc
sub
pushf
(bad)
jmp
dec
inc
mov
mov
call
sbb
sub
call
push
cvttps2pi
inc
ret
mov
(bad)
push
xor
adc
call
inc
add
ret
fs
sub
cwde
cdq
ror
xacquire
jb
mov
push
mov
fisubr
adc
idiv
nop
bound
popf
or
add
cmp
fild
imul
xor
add
jnp
js
dec
add
psrlw
mov
into
cmp
addr16
mov
xchg
inc
push
or
mov
xchg
cmp
push
mov
mov
int
aam
mov
out
xlat
adc
movs
icebp
stos
popf
and
clc
xchg
repz
mov
adc
pop
imul
push
icebp
inc
stc
enter
or
jae
rol
lahf
dec
aam
or
pop
jbe
pop
sbb
push
lods
jle
or
int
xchg
int
repz
xchg
mov
bnd
call
fsubr
dec
add
cli
into
sahf
rep
jg
test
mov
or
jb
pop
xchg
dec
mov
in
and
loope
push
lods
sbb
(bad)
loope
ret
sub
pop
or
push
xor
lods
pop
data16
lds
les
in
enter
cli
inc
jnp
ds
xor
scas
or
xor
mov
jb
jb
cmp
out
cdq
xchg
mov
sub
mov
movs
xchg
jae
mov
(bad)
out
test
push
push
aas
pmaddwd
or
fcomi
scas
and
scas
mov
rcl
cmp
fdivr
pushaw
test
mov
sbb
outs
dec
jmp
aas
or
loopne
fdivr
jmp
stc
in
leave
mov
sti
call
sar
push
mov
pusha
mov
add
mov
fucom
pusha
(bad)
and
mov
jnp
jb
xor
fcomip
loopne
pop
push
push
aam
cli
fild
mov
mov
movs
imul
pop
xchg
test
loopne
mov
test
lods
or
iret
or
pop
test
popf
jle
aas
fdivr
stos
sub
sub
fs
popa
jae
jnp
mov
out
pop
or
je
push
(bad)
aad
arpl
xor
and
mov
(bad)
pop
arpl
imul
push
sub
xlat
into
ss
xchg
fst
cmp
stc
and
jg
jl
iret
enter
or
and
js
sub
movs
and
push
rcl
xchg
sbb
xor
mov
inc
dec
dec
movs
sbb
ficom
push
cmp
cmc
shl
mov
imul
jp
cmp
jnp
inc
sbb
xchg
pop
fmul
je
das
add
(bad)
fmul
jmp
ds
leave
call
retf
mul
movs
xor
jp
div
repz
cwde
xor
mov
mov
ins
add
sub
xchg
fistp
lea
push
shr
cmp
lahf
hlt
not
aas
movs
push
std
ficomp
push
call
mov
sar
ficom
cmp
add
push
jmp
punpckhbw
pop
inc
pop
ficom
mov
ins
data16
fbstp
call
mov
jmp
dec
jb
in
dec
pop
adc
sbb
mov
dec
loope
pushf
mov
cdq
imul
loope
scas
adc
xchg
xor
mov
xchg
and
mov
or
sub
xchg
std
repnz
stc
add
inc
lea
ret
lds
inc
mov
xor
mov
sub
inc
rcl
inc
sti
sub
push
and
imul
cmp
cmp
xor
mov
and
push
hlt
fst
test
push
jl
mov
mov
add
push
dec
lods
mov
dec
adc
xchg
sbb
sbb
sbb
and
stos
dec
je
loope
jbe
sbb
cli
inc
out
inc
dec
stos
push
pop
call
add
push
inc
cs
or
sbb
xchg
loopne
jno
push
jb
cld
or
call
lods
xchg
push
jmp
(bad)
aad
fild
loop
cmps
mov
pushf
ror
addr16
aas
fst
inc
(bad)
xchg
inc
push
sub
fldcw
jecxz
inc
int3
idiv
jp
sub
stos
cmp
jne
popa
movs
xchg
popf
and
sar
les
cld
stos
stos
sbb
aam
lods
lods
cs
(bad)
dec
stos
ror
dec
push
push
ret
fsubrp
cwde
rcl
cdq
pop
leave
das
mov
cld
call
xor
push
aam
test
pop
retf
cwde
inc
(bad)
lahf
sti
arpl
and
and
shl
dec
les
jb
sar
xchg
cmps
pop
mov
mov
test
leave
jbe
cmps
add
push
into
and
hlt
(bad)
dec
cmp
xchg
ss
xchg
add
jnp
sti
in
cmps
aad
mov
push
ins
(bad)
mov
or
(bad)
in
aas
in
fstp
sar
jp
cli
(bad)
dec
out
cs
pop
leave
sbb
sub
cmp
mov
or
xor
add
iret
test
mov
mov
cmp
loopne
out
or
adc
inc
jmp
cmp
pop
test
xchg
repnz
sbb
(bad)
push
xor
mov
pop
aas
data16
add
arpl
push
push
pop
pop
xlat
pushf
data16
pusha
imul
mov
jno
sub
mov
out
fistp
dec
addr16
int
push
xor
mov
pop
sbb
fiadd
or
add
jnp
pop
add
xor
cmp
xchg
mov
mov
pop
in
test
or
xor
popf
add
imul
mov
xchg
xchg
call
jnp
lods
jb
mul
cmp
pop
lahf
xchg
cmp
in
push
cmc
push
sbb
jle
mov
push
mov
cmps
adc
or
arpl
pusha
adc
stos
idiv
mov
inc
call
loopne
sbb
sbb
dec
or
cmp
or
mov
daa
es
xchg
add
sbb
sub
ins
jle
stos
jo
fldenv
pop
inc
imul
add
test
jle
lock
cwde
or
adc
jg
dec
repz
cmp
or
mov
xchg
push
push
adc
fisubr
mov
jnp
mov
mov
jno
dec
mov
push
bound
xchg
std
pop
jns
ds
xchg
iret
xchg
outs
mov
mov
int3
xchg
(bad)
aam
sub
retf
and
imul
push
jp
jecxz
push
or
daa
enter
mov
or
fisub
cld
mov
jmp
pop
sub
adc
push
xchg
sbb
xchg
sbb
jl
in
xchg
mov
popa
or
push
xor
dec
sub
cli
cmc
pop
jne
(bad)
or
dec
(bad)
pop
hlt
dec
ins
(bad)
test
int3
mov
mov
mov
iret
rcl
jp
mov
sbb
jne
cmp
cmp
sbb
sti
addr16
(bad)
dec
dec
dec
jge
adc
push
cmp
and
je
and
or
mov
fwait
mov
or
adc
int3
neg
shl
or
dec
(bad)
in
fs
add
sub
out
xchg
imul
xor
sub
xor
lods
out
fcom
cmc
jnp
mov
ss
add
mov
xchg
clc
push
adc
mov
cdq
add
cmp
push
gs
dec
cs
inc
std
mov
iret
out
pushf
push
add
ja
test
imul
es
inc
lds
popa
mov
bnd
cmp
add
lods
adc
mov
jns
es
ror
scas
xchg
rol
das
jbe
xlat
aaa
dec
loopne
push
adc
cmp
cli
std
cmp
popa
push
dec
je
cmp
inc
cmp
inc
push
jne
mov
jg
sbb
jb
push
iret
sar
test
cmp
dec
sbb
xor
aad
enter
pop
das
sar
out
test
aaa
es
call
int
sti
mov
std
mov
mov
fild
sub
xchg
mov
pop
cmps
xchg
fisttp
dec
ror
add
and
icebp
adc
int
mov
mov
sub
pop
loopne
mov
add
adc
icebp
sbb
retf
push
sbb
mov
hlt
pop
mov
repz
gs
cmp
pop
push
inc
fwait
xchg
xchg
(bad)
popa
inc
std
clc
popa
mov
fcomp
jmp
push
xchg
sub
arpl
push
cmp
(bad)
pop
add
(bad)
daa
or
(bad)
push
sub
add
dec
or
pop
add
xchg
cs
fs
ss
xchg
and
mov
out
retf
outs
lea
inc
dec
jns
adc
pop
jmp
or
xor
and
jecxz
jno
fsub
cmp
nop
stos
xor
aaa
push
add
fidiv
call
inc
bound
xchg
outs
les
stc
dec
lock
inc
(bad)
jg
into
xchg
popf
fsubr
std
pop
das
movs
xor
mov
cdq
pop
lds
dec
repnz
ins
push
xchg
add
ror
mov
sbb
sar
and
rcr
aaa
mov
out
push
js
call
sub
aam
icebp
sbb
(bad)
or
mov
shl
xor
push
xchg
hlt
test
or
mov
stc
popa
pop
call
adc
fwait
or
jecxz
dec
sbb
fcomp
inc
or
gs
out
dec
addr16
adc
jle
push
dec
mov
sub
and
test
cli
adc
popa
bound
adc
scas
std
sbb
inc
push
sub
pushf
outs
jp
js
pop
dec
inc
es
lods
and
add
mov
movs
adc
dec
adc
out
int3
mov
push
rcr
ins
pop
(bad)
push
cli
sbb
mov
test
mov
jns
movs
pusha
sbb
xor
mov
jns
stos
es
lock
push
sbb
sbb
push
push
movs
xlat
inc
jmp
fld
iret
(bad)
loopne
ss
es
push
dec
xlat
sbb
repz
add
inc
test
test
mov
lock
test
jle
cmp
or
xchg
pop
or
call
add
xor
dec
cmp
or
sbb
inc
jns
(bad)
int
(bad)
sbb
dec
sti
xchg
push
xchg
daa
stos
test
sub
mov
mov
lock
repnz
and
jp
pop
ins
xchg
xlat
and
outs
mov
call
ss
repz
enter
jge
dec
adc
movs
dec
ins
jp
popa
hlt
push
pop
pushf
cmps
pusha
push
dec
inc
xor
mov
mov
lds
dec
mov
cmp
and
in
or
jg
adc
retf
adc
and
les
pop
sub
loop
ja
out
push
and
mov
inc
std
sub
adc
or
xchg
js
repnz
sub
inc
shl
xor
cmp
sub
retf
or
xchg
inc
je
inc
mov
call
pop
adc
push
mov
fstp
pop
mov
push
or
movs
adc
push
add
push
bound
movs
call
movs
adc
xchg
jge
cmp
jnp
cmp
inc
pop
push
mov
sbb
inc
lods
fcomp
pop
sbb
jo
cmps
mov
stc
popa
ss
sub
push
(bad)
shl
inc
test
sbb
jmp
mov
cmp
xchg
jmp
icebp
frstor
pop
xor
jmp
imul
test
push
aam
movs
sbb
je
or
fs
dec
cmp
clc
sub
pop
xor
outs
ds
mov
and
or
fisttp
mov
adc
mov
(bad)
xchg
lock
xchg
js
mov
in
pop
lock
cmp
outs
adc
ins
mov
jnp
add
inc
mov
test
mov
repnz
mov
jnp
fnstcw
jmp
mov
pop
shl
adc
fistp
pop
mov
sub
mov
xchg
(bad)
inc
mov
mov
sbb
fwait
push
sbb
inc
dec
jns
push
add
loope
cdq
and
push
in
inc
mov
mov
mov
not
jno
pop
mov
cwde
jmp
dec
pushf
xor
add
stos
jecxz
mov
xchg
test
rol
inc
push
mov
or
inc
lods
mov
pop
lock
scas
mov
adc
mov
jmp
push
ins
into
jle
daa
jmp
je
pop
cmp
xchg
lds
addr16
push
lea
inc
ret
adc
xchg
pushf
pop
cs
fistp
mov
mov
push
call
cmps
lea
out
push
push
aaa
imul
iret
out
pop
mov
xor
cmps
addr16
push
out
or
ins
mov
inc
daa
dec
xchg
out
(bad)
retf
jb
mov
or
mov
mov
mov
dec
xchg
mov
jle
movs
iret
mov
in
cmp
inc
lods
xchg
mov
popa
jecxz
(bad)
jecxz
push
sahf
pop
pushf
sar
add
push
or
mov
sbb
jg
and
rcr
jp
or
call
and
cmps
push
dec
cdq
inc
fdivp
and
call
push
fidiv
pop
loopne
loope
or
jae
aas
sahf
sub
mov
out
and
and
inc
aad
pushf
or
sbb
pop
dec
mov
cld
rol
mov
mov
jo
add
cmovno
jns
jnp
ror
inc
cmps
mov
inc
in
fs
inc
fdiv
jle
push
mov
bound
jge
pop
xchg
repz
cli
in
(bad)
xlat
sub
jmp
cmp
movs
sahf
ret
sub
dec
xor
ret
test
lea
mov
fst
pop
test
out
fstp
clc
or
cwde
sub
daa
pop
(bad)
push
push
in
js
xchg
sbb
fwait
jbe
fisub
adc
fistp
pop
and
xor
pop
or
lock
add
xor
test
data16
(bad)
scas
cmp
shl
enter
rcr
jns
fstp
sbb
cli
gs
mov
(bad)
sahf
jae
xor
popa
or
cmc
pop
mov
ja
mov
mov
imul
ss
or
lahf
lock
pop
loope
aas
js
icebp
ins
test
pop
jo
addr16
lea
clc
or
je
cwde
lds
cmps
jae
in
lock
mov
test
jecxz
sub
popa
pop
mov
scas
hlt
ret
(bad)
retf
adc
adc
fwait
jge
les
mov
inc
je
adc
sti
popf
fdivr
leave
mov
pushf
mov
movs
push
mov
add
dec
and
and
scas
fild
retf
(bad)
mov
retf
inc
mov
fsub
loop
mov
ror
push
inc
lock
nop
adc
mov
fcmovu
ins
and
cmps
mov
ins
fild
out
js
int3
in
adc
fucomi
cmps
pushf
(bad)
imul
sbb
mov
es
add
and
mov
or
(bad)
inc
icebp
jae
mov
cmp
enter
sbb
fs
adc
inc
mov
ror
fmul
iret
push
enter
in
xor
mov
aam
or
pop
sbb
push
call
xor
pop
out
idiv
xchg
pop
or
mov
add
add
sub
xchg
inc
rol
aaa
cmp
dec
outs
retf
mov
cmp
or
rcl
ret
pop
mov
jmp
in
lods
xor
mov
inc
int
add
cmp
je
int3
in
loopne
add
int3
jne
push
sbb
mov
mov
mov
add
or
cmp
inc
retf
cmp
out
cld
mov
sbb
jne
das
lds
cmp
and
mov
(bad)
fcomp
daa
jnp
jo
ds
xor
out
inc
int3
inc
xchg
jp
out
pop
fist
daa
jmp
test
test
sub
adc
or
and
add
add
jnp
jle
fsub
test
fcom
mov
mov
push
test
cdq
test
movs
mov
adc
nop
mov
inc
sub
mov
xchg
add
xchg
xor
adc
(bad)
test
out
sbb
addr16
dec
movs
mov
stos
push
aaa
and
aad
and
dec
lea
push
push
dec
sahf
ret
mov
shl
push
pusha
stos
pop
xor
cld
test
mov
adc
out
in
leave
dec
nop
clc
arpl
ss
jp
rol
das
xchg
mov
pop
push
mov
sub
dec
cdq
rcl
arpl
daa
mov
xlat
lods
shl
or
mov
mov
cmp
lea
cmps
mov
add
mov
fs
cmp
pop
std
pop
(bad)
mov
push
mov
fdivp
ins
sti
lea
add
pop
repz
aam
jmp
pop
xchg
cli
mov
ss
daa
adc
jns
push
push
mov
dec
(bad)
sti
sti
fstp
rcr
add
or
outs
das
outs
cmp
inc
cwde
and
xchg
mov
aas
lock
shl
lds
pop
mov
stos
mov
xlat
hlt
xor
sbb
cmps
les
push
cwde
and
sahf
rol
mov
and
(bad)
mov
std
mov
fsub
movs
rcr
repz
dec
(bad)
loopne
xchg
mov
cs
sub
in
and
lock
cmp
mov
push
jae
loope
test
jmp
iret
leave
jg
cld
fidivr
leave
sbb
(bad)
cld
dec
mov
es
pop
aas
and
lods
in
fldenv
fcmovnbe
rcr
lahf
pop
pop
sub
dec
aas
add
lock
jle
bound
adc
inc
(bad)
mov
aad
mov
popf
(bad)
stos
movs
std
hlt
test
pop
cmp
inc
ja
mov
push
bound
dec
popa
es
loope
jb
call
push
cmp
std
push
sub
push
adc
hlt
inc
mov
sub
imul
scas
ret
lods
sbb
push
sbb
inc
mov
xor
mov
dec
cmps
aad
in
in
fwait
mov
and
loop
fst
scas
pop
xchg
sbb
xchg
ins
fist
add
cdq
adc
test
mov
dec
shl
inc
mov
loope
xchg
xor
into
(bad)
retf
jmp
nop
hlt
mov
mov
mov
mov
pop
sbb
aas
xor
popf
dec
retf
push
sar
sub
ja
push
std
cmp
(bad)
fs
in
cmps
dec
out
mov
aad
cmp
and
retf
iret
shl
leave
shl
add
arpl
and
jmp
mov
and
or
cld
push
stc
bound
iret
cmc
jns
lods
lods
dec
dec
pop
mov
pop
pop
dec
or
xor
(bad)
je
xchg
xor
pusha
dec
pmuludq
call
movs
jge
lahf
add
leave
mov
cld
mov
jo
xor
fnstsw
pop
or
jb
push
jg
xchg
je
outs
jle
push
ds
cdq
sub
imul
pop
jae
xchg
les
or
mov
sbb
je
ss
mov
xor
leave
std
pop
ins
pusha
push
mov
push
in
dec
dec
cmc
jb
mov
pop
add
mov
aaa
pop
mov
adc
aam
ficom
cmc
xchg
ins
stc
icebp
mov
push
mov
add
rcl
mov
add
lods
push
mov
sub
cwde
xchg
xor
sbb
loope
jb
mov
mov
int3
xor
lea
dec
idiv
aaa
xchg
aad
call
outs
lock
cmp
cld
iret
sbb
jmp
mov
into
pop
into
repz
sbb
dec
mov
cmc
cmp
sub
mov
pop
pop
shl
fwait
lods
mov
mov
or
nop
pop
mov
out
sbb
lahf
rcr
mov
adc
out
inc
(bad)
fistp
std
icebp
stc
out
cdq
pop
push
std
repz
push
div
mov
dec
mov
ds
xchg
xchg
mov
mov
imul
mov
int
dec
jae
push
mov
cdq
std
pop
sti
mov
and
inc
lea
lods
sti
inc
std
add
mov
mov
jne
imul
fld
dec
cmp
test
cmps
test
sbb
test
(bad)
pusha
popa
and
(bad)
and
pop
ret
mov
cmps
or
pushf
push
pop
pop
pop
inc
in
daa
jae
jmp
cdq
dec
(bad)
lods
jmp
and
out
push
aam
idiv
dec
adc
sbb
cs
jmp
nop
push
mov
sub
mov
or
dec
int3
outs
lds
or
sbb
cmp
ror
ins
add
pop
mul
aam
sti
cmc
gs
ins
das
cld
push
add
popf
add
mov
add
cs
jle
xchg
push
in
or
dec
jl
ja
(bad)
aad
les
lods
cmp
ins
aaa
pop
daa
jp
mov
and
faddp
aad
xchg
jnp
mov
inc
jge
jae
jecxz
dec
lods
cmp
dec
nop
outs
mov
pop
adc
aas
xchg
mov
retf
mov
out
(bad)
jne
sahf
in
mov
jle
sub
sbb
jp
stc
retf
pop
aad
mov
in
test
shl
mov
cld
mov
add
lahf
xor
or
xchg
pop
or
rcpps
mov
and
cmps
mov
daa
mov
mov
dec
pop
pop
add
in
lods
adc
lods
(bad)
push
xchg
cmp
pop
push
mov
stc
je
inc
add
inc
jecxz
into
push
mov
out
std
int3
stos
xlat
xchg
xor
mov
mov
into
adc
jmp
stos
adc
leave
fild
enter
fwait
dec
shr
jmp
cs
scas
jl
test
mov
push
adc
fwait
js
dec
dec
rcl
and
ds
mov
rol
fscale
bound
ret
jmp
ficom
out
lock
jg
lea
xlat
or
and
dec
mov
in
into
cmp
sbb
imul
jo
adc
xor
sub
dec
ret
nop
jne
dec
sbb
sbb
pop
lea
mov
ins
push
cmps
div
popf
je
dec
dec
in
xor
js
sti
push
sbb
jmp
push
or
and
call
repz
jmp
sbb
adc
mov
dec
mov
push
inc
scas
add
das
(bad)
daa
push
push
sub
and
loope
rcr
dec
dec
popa
xor
dec
jo
and
mov
push
ret
sub
or
inc
fist
cmp
cld
jp
push
xor
or
std
pop
mov
jns
aas
leave
fstp
in
xor
shl
xchg
pushf
xor
xchg
mov
xor
in
sub
adc
xor
cmp
mov
and
ins
cwde
out
aam
fist
lahf
sahf
(bad)
xchg
imul
push
in
xchg
pop
scas
and
dec
mov
add
ficom
(bad)
adc
pop
aam
icebp
push
sub
in
clc
add
jecxz
inc
pop
in
test
push
(bad)
(bad)
mov
pop
test
push
sub
xchg
push
retf
cmp
mov
das
lods
jae
jp
in
add
xchg
int3
int
movs
xchg
stc
daa
adc
pop
xor
push
xchg
fincstp
aaa
mov
fiadd
jmp
pop
fnstsw
jbe
fimul
jno
cmp
sub
ds
ret
jl
jo
and
push
mov
sbb
ja
cmc
push
xchg
or
xchg
fadd
mov
and
iret
cmp
cld
call
inc
or
ds
aam
push
mov
out
sub
mov
popa
inc
call
sub
(bad)
ins
int
imul
call
mov
dec
outs
ds
ins
mov
pop
ret
daa
mov
gs
mov
repz
mov
sub
mul
es
stc
push
add
push
stc
ss
jg
das
sbb
dec
das
mov
mov
bound
fadd
adc
cmp
repnz
xchg
pusha
in
stc
retf
call
dec
nop
test
pusha
cli
ins
or
sub
add
bound
test
dec
fs
or
inc
lock
adc
adc
pop
jb
jno
xor
inc
scas
jns
cli
shl
sub
in
and
cmps
and
push
jns
add
push
arpl
push
jmp
push
dec
cmps
out
jg
les
mov
inc
cmp
stc
test
fnsave
fidiv
sar
icebp
pop
in
cmp
push
leave
xor
or
adc
xchg
aas
addr16
push
and
aas
jg
aas
xchg
mov
fdivr
xor
test
(bad)
daa
jb
iret
mov
push
mov
sbb
cmp
sar
mov
push
cmp
or
jno
xchg
js
or
jno
in
push
jge
xor
push
push
xor
jg
mov
push
nop
jle
loop
mov
ins
test
jo
or
add
xlat
cwde
mov
arpl
daa
shl
rcr
cmp
dec
std
call
mov
xor
xchg
push
in
sbb
sbb
sbb
inc
sar
aas
scas
jnp
fcomip
adc
jmp
mov
pushf
ja
dec
adc
sahf
(bad)
js
pop
mov
movs
je
push
add
jp
pusha
push
jne
movs
push
loopne
popf
icebp
add
outs
mov
loope
int
jge
or
leave
xor
sbb
cdq
enter
mov
add
add
push
fisttp
dec
outs
jo
scas
rol
push
mov
sub
dec
xchg
fdivr
dec
ss
mov
jge
jb
jp
sub
movs
mov
pop
jl
loopne
inc
jecxz
pop
mov
inc
gs
lahf
jle
inc
dec
mov
mov
test
ror
mov
(bad)
push
xchg
stos
inc
push
imul
repz
adc
mov
out
mov
pop
(bad)
stos
cmp
sbb
movs
les
outs
int
or
jns
test
leave
jbe
sbb
sbb
adc
cmps
inc
sub
mov
jge
push
cli
(bad)
out
mov
(bad)
outs
jp
adc
xchg
jg
adc
sub
lea
add
xor
inc
cld
sahf
or
imul
pop
ja
mov
adc
cmp
daa
or
jne
mov
cmps
push
inc
mov
push
jmp
movs
adc
adc
push
add
aad
je
jl
or
pop
(bad)
push
shr
in
dec
gs
sar
fst
clc
jo
fldenv
or
mov
mov
jnp
enter
scas
shr
movs
jmp
push
shl
(bad)
retf
mov
add
cmp
fs
mov
into
ficom
mov
nop
hlt
daa
out
movs
in
jg
cli
aas
mov
mov
test
and
jecxz
shr
inc
jg
jg
add
jge
fld
pop
jl
push
repnz
mov
push
cmp
mov
sbb
cld
popa
popaw
push
sub
adc
jp
jl
call
movs
xchg
push
pop
push
xchg
lock
jne
jb
push
lds
or
and
add
push
fwait
mov
or
inc
fimul
jecxz
jecxz
int
jae
inc
inc
fmul
push
push
or
retf
mov
cmp
ss
sub
and
mov
dec
and
into
imul
(bad)
pop
mov
scas
mov
or
test
dec
and
mov
fcomp
cmp
jo
or
int
lods
test
mov
clc
xlat
dec
fst
add
xchg
lods
mov
add
pop
jmp
inc
iret
push
lods
push
mov
sub
mov
jns
cmps
addr16
mov
adc
sbb
out
jno
adc
sar
(bad)
push
sub
in
bound
repz
xchg
xchg
jnp
cmps
gs
shr
fisubr
test
(bad)
or
sbb
dec
shl
in
aam
or
adc
stos
mov
add
sar
movs
push
sar
fidivr
lds
cmp
(bad)
xor
mov
jl
mov
xor
es
outs
outs
aam
xor
mov
ret
mov
shl
push
lahf
mov
and
jbe
cmps
mov
jne
adc
dec
adc
sti
(bad)
adc
mov
test
xchg
movs
iret
mov
inc
movs
pop
inc
push
popf
fcmovb
sbb
jb
push
jns
in
mov
adc
fcmovnbe
push
push
cmp
aad
mov
pusha
imul
outs
sar
out
ret
mov
cdq
dec
rcl
outs
jg
hlt
mov
mov
dec
hlt
mov
xchg
push
mov
bound
daa
cdq
push
fdiv
sbb
xchg
adc
lea
imul
pop
and
(bad)
fstp
(bad)
pushf
mov
outs
dec
test
sar
jge
and
repz
fnsave
dec
jecxz
retf
sbb
jb
aaa
sub
adc
jbe
mov
ret
and
pop
mov
sub
pop
cs
cs
es
sbb
imul
imul
xor
(bad)
cmp
ins
xor
pop
mov
inc
inc
jno
inc
cmp
mov
cmp
jo
pop
sub
fstp
and
sbb
push
(bad)
icebp
std
and
xchg
xor
mov
icebp
les
mov
test
dec
enter
mov
dec
out
pop
rcr
mov
xor
push
bound
es
ds
dec
ret
push
mov
cwde
xchg
es
mov
mov
adc
nop
cwde
test
dec
mov
(bad)
not
add
dec
mov
jecxz
cli
imul
mov
xchg
bound
add
std
test
add
jae
push
push
inc
dec
mov
jl
ds
mov
push
inc
jp
xchg
xor
jae
lods
push
inc
movs
scas
cmp
outs
fs
ins
sbb
test
sub
(bad)
push
in
add
daa
inc
sbb
jno
push
fdivrp
xchg
stos
sbb
loopne
(bad)
mov
out
jne
lock
(bad)
mov
clc
nop
enter
push
sub
sbb
in
pop
fdiv
loope
mov
jb
(bad)
std
jmp
in
ja
imul
push
(bad)
cmp
and
dec
(bad)
xor
(bad)
cmp
mov
imul
inc
movs
or
dec
push
add
cmp
mov
push
add
jnp
cmps
into
pop
(bad)
fidiv
loope
xlat
std
fdivr
sub
add
das
outs
int3
inc
lods
xlat
mov
movs
push
adc
sub
out
dec
or
inc
test
mov
sub
imul
jo
mov
test
in
(bad)
scas
mov
cwde
xor
xchg
push
xor
imul
or
add
fnstsw
mov
aas
es
jle
push
or
and
gs
cmp
pop
push
scas
pop
int3
ins
sar
cmps
jg
pusha
mov
or
inc
clc
sbb
lds
add
rcl
ficom
aad
in
and
enter
leave
adc
lds
jb
les
test
in
adc
inc
mov
xlat
into
inc
hlt
mov
cs
adc
lahf
xor
adc
jle
jae
stos
test
jg
mul
jno
ss
mov
mov
rcr
or
into
(bad)
and
scas
xor
dec
xchg
inc
lahf
jecxz
pop
add
addr16
xor
out
call
xlat
aam
jae
ficomp
mov
nop
dec
ja
movs
and
mov
rol
pop
out
(bad)
pop
xchg
jmp
xchg
fwait
xor
jbe
inc
(bad)
mov
push
cld
in
xchg
xchg
adc
xchg
enter
lock
push
pop
push
sub
or
addr16
mov
out
retf
jmp
dec
arpl
sub
inc
lods
sbb
xor
iret
enter
test
aas
mov
and
std
xor
adc
iret
adc
mov
adc
rol
out
mov
movs
add
sbb
imul
inc
in
icebp
xchg
jmp
mov
cmc
inc
xchg
test
cld
sub
xchg
test
push
xchg
in
retf
test
in
fsubp
bound
mov
jae
mov
int3
mov
xlat
or
loope
pop
cmp
bound
push
xor
inc
jne
adc
test
adc
inc
pop
ins
xor
lahf
(bad)
retf
scas
cmps
dec
mov
rcr
pop
mov
mov
loopne
adc
loope
pop
xor
les
out
mov
adc
push
call
outs
add
push
cmps
das
loop
jp
jns
loope
out
and
adc
data16
lea
add
jnp
fldenv
scas
xchg
mov
sbb
add
dec
inc
add
sbb
call
xchg
sub
mov
adc
mov
fucom
push
push
fild
pop
mov
push
leave
outs
shr
dec
dec
stos
push
adc
fmulp
push
jae
jmp
repz
pop
icebp
lods
or
(bad)
xlat
retf
cwde
jne
mov
mov
xchg
call
repz
mov
sti
lods
das
leave
jmp
xor
and
outs
mov
popa
(bad)
ffree
(bad)
gs
int
repz
mov
dec
pop
leave
arpl
cmps
mov
cmp
xchg
fisubr
mov
jno
mov
dec
hlt
pop
sbb
fmulp
fsub
cmp
xlat
cdq
cmps
daa
cmps
fmulp
jo
inc
test
pop
clc
rcl
outs
es
repz
mov
out
jb
iret
les
jns
xor
fild
nop
ret
jnp
add
mov
das
(bad)
lods
mov
and
sub
mov
cli
jle
repz
pop
in
mov
iret
call
push
xchg
sub
jo
sbb
adc
pop
outs
ret
pop
or
mov
mov
scas
pop
adc
mov
fild
(bad)
sbb
adc
sbb
sub
movs
mov
adc
into
cmps
and
mov
addr16
adc
sub
mov
scas
loop
movs
cs
outs
cwde
xlat
xor
mov
ins
mov
and
jmp
outs
and
div
jle
cmp
fs
cld
lock
cmps
push
jns
sbb
sub
leave
push
sti
adc
sub
push
and
shl
pop
mov
movs
xchg
aad
mov
push
pop
sub
rol
lds
cmp
pslld
(bad)
fisub
dec
(bad)
or
clc
cmp
mov
dec
push
aam
iret
outs
call
jno
mov
mov
scas
push
add
pop
fs
mov
dec
or
stc
or
inc
add
test
loopne
lahf
fmul
popa
sub
mov
addr16
pop
(bad)
pop
pop
outs
into
mov
in
xlat
imul
jg
push
mov
je
jmp
xchg
jg
nop
fbstp
stos
sub
jmp
mov
mov
and
sub
adc
(bad)
xor
lds
push
scas
add
lock
cmps
or
cmp
addr16
cmp
dec
cmps
adc
push
fcom
cmc
mov
or
repnz
fs
jb
push
in
or
jmp
mov
je
mov
shl
ins
imul
mov
jnp
test
ds
adc
call
jmp
(bad)
inc
adc
push
push
and
into
add
call
push
mov
mov
into
jno
sub
scas
(bad)
fucomip
fbld
and
jmp
clc
rol
jnp
inc
adc
into
scas
mov
push
ja
mov
div
jo
ffree
iret
dec
hlt
push
add
cmp
mov
inc
xor
push
and
mov
repz
adc
sbb
push
cmp
cdq
add
mov
retf
pop
xor
and
fisubr
mov
pop
cmp
cmp
sub
mov
les
cmp
cmp
cs
cmp
sbb
pop
and
fidivr
test
push
ins
cdq
ror
pop
nop
dec
ja
shl
push
sbb
adc
pop
mov
lods
and
aaa
(bad)
fwait
out
mov
cmp
xor
add
xchg
and
dec
jg
jl
sbb
in
dec
sbb
xchg
shr
lea
mov
and
mov
sbb
pusha
imul
test
push
lods
mov
cmp
test
xchg
shl
shl
dec
push
lahf
not
popf
mov
inc
in
adc
sbb
push
mov
fidiv
jb
idiv
out
xchg
mov
(bad)
push
push
xchg
hlt
jnp
in
call
les
shl
aam
test
lods
add
repnz
(bad)
xchg
dec
xor
inc
sar
retf
cli
and
mov
mov
sbb
add
cmps
lods
shr
sub
dec
ss
adc
and
jne
xor
and
in
shl
push
scas
retf
stc
into
sbb
mov
(bad)
repz
xchg
cld
mov
bound
loope
mov
in
movs
xchg
es
fisubr
loope
inc
inc
sub
js
jo
push
or
jge
bound
scas
push
add
sub
test
iret
imul
fisttp
or
out
fcmovnbe
(bad)
cmp
les
mov
inc
jmp
scas
sub
call
test
outs
xchg
cmp
adc
fld
popf
rcl
outs
loop
cmps
adc
xor
ss
sub
imul
cmps
out
jg
sub
out
in
push
stc
sub
out
add
leave
push
xlat
dec
adc
pop
xor
imul
mov
mov
(bad)
jb
inc
test
cmp
cmc
push
push
daa
outs
arpl
out
repnz
jle
jno
cmc
hlt
mov
lahf
jnp
int3
scas
jle
aad
jne
xor
ins
ret
inc
data16
and
scas
ror
inc
out
(bad)
nop
shr
mov
pushf
scas
xchg
icebp
jg
mov
sar
or
fst
dec
repz
scas
pop
pop
and
or
jae
push
daa
mov
movs
js
sub
ja
push
add
xchg
jae
mov
adc
ds
adc
dec
(bad)
stos
addr16
scas
sbb
loopne
stos
mov
dec
vmwrite
pop
pop
jecxz
jge
adc
jae
mov
mov
mov
movs
xor
ret
push
adc
mov
test
sub
mov
(bad)
(bad)
stc
clc
add
je
sub
test
pusha
loope
nop
les
xor
les
aas
call
jae
adc
inc
rcr
invd
sbb
sar
test
xor
into
xchg
sahf
icebp
and
cs
jge
pop
stos
and
jle
cmp
out
cwde
inc
inc
or
out
sub
es
push
mov
and
imul
call
inc
sub
das
sub
sar
jmp
hlt
inc
and
(bad)
(bad)
je
push
cmp
or
lock
in
push
out
scas
dec
or
push
push
stos
jmp
add
xchg
mov
push
push
ret
push
sub
mov
xlat
icebp
jb
bt
xchg
or
mov
popf
ja
dec
mov
(bad)
mov
or
dec
sti
add
ficomp
dec
or
jae
fimul
pop
push
jecxz
mov
imul
jae
mov
mov
sub
mov
or
imul
iret
and
jp
mov
std
adc
xchg
dec
test
mov
push
call
rol
(bad)
in
sbb
stc
pop
cmc
fst
push
fild
(bad)
into
sbb
push
or
mov
inc
or
or
sahf
out
pop
out
aas
push
iret
jecxz
sbb
push
pop
loopne
daa
cld
push
iret
mov
out
call
push
mov
ins
cmp
mov
mov
retf
cwde
xor
mov
sub
(bad)
data16
out
mov
jmp
push
pop
fwait
vpunpcklqdq
js
pop
jecxz
loopne
jo
dec
daa
xchg
addr16
sbb
pusha
push
aaa
rcl
jmp
cmp
push
mov
dec
inc
popa
scas
push
jae
arpl
xor
inc
les
not
pop
dec
bound
popa
jae
ret
jno
or
add
hlt
mov
ins
mov
jp
mov
add
adc
out
mov
fs
mov
or
dec
repnz
mov
popf
xor
fmul
test
arpl
cli
inc
mov
pushf
fs
push
mov
and
dec
dec
dec
mov
and
cmc
add
jge
mov
mov
(bad)
sar
mov
ror
sbb
push
aad
mov
push
adc
sahf
xchg
push
xchg
fimul
cmp
xchg
sbb
jo
dec
lods
xor
or
in
repnz
daa
sbb
test
nop
cmc
add
fiadd
cmps
and
xchg
add
scas
vmaxsd
dec
jmp
jbe
test
gs
mov
mov
push
das
int3
dec
das
retf
hlt
cmp
push
bound
mov
cmp
add
movs
add
outs
xchg
sbb
add
inc
mov
test
into
add
div
pop
ret
xlat
dec
push
in
aad
aad
xchg
pop
inc
out
jnp
adc
mov
in
mov
fnstsw
jecxz
aad
gs
jbe
cdq
movs
jbe
xchg
push
cmps
neg
mov
xchg
cli
scas
adc
sbb
nop
jns
mov
jne
pop
jecxz
fcom
xchg
adc
test
cmc
jns
lea
jo
cmp
outs
dec
cmp
and
retf
xor
jle
sbb
imul
das
popa
(bad)
in
inc
cmp
ret
xchg
sbb
(bad)
out
leave
repnz
stc
js
mov
fcom
jle
pop
popa
add
sti
repz
pusha
cs
push
mov
ret
sar
mov
xor
mov
or
adc
mov
fwait
cmp
push
cmp
retf
pop
xchg
pop
push
jl
mov
retf
add
leave
mov
fdiv
pop
mov
ret
lds
ds
xchg
dec
pop
add
cmp
jge
cmc
pop
mov
bound
push
xchg
call
pop
adc
sub
pusha
cmp
iret
call
cdq
xchg
outs
sti
xor
retf
adc
loop
outs
lea
adc
xchg
mov
daa
or
jl
hlt
dec
repz
mov
xor
(bad)
jae
test
cmps
xor
dec
mov
mov
jno
movs
jg
in
mov
and
sahf
xor
out
(bad)
sahf
sbb
cdq
pushf
mov
jl
mov
ja
sub
ss
sbb
add
addr16
or
out
mov
jmp
pop
jge
pop
pop
inc
jnp
mov
push
jns
push
cmp
cmp
(bad)
ret
xor
mov
mov
adc
shr
mov
std
out
pop
rcl
sbb
xchg
cmp
cmp
cwde
loopne
fs
fs
rcl
sub
add
fld
xchg
cmp
or
mov
xchg
xor
xchg
das
inc
xlat
jg
fisttp
(bad)
fild
and
push
xchg
sub
push
add
sub
xor
jecxz
push
imul
enter
inc
cmp
and
adc
add
dec
cdq
test
or
outs
pop
sub
pop
or
cli
aas
jp
dec
dec
fcomp
mov
pop
ss
outs
xchg
dec
push
inc
jbe
sbb
cmp
adc
push
repz
xor
cwde
loop
push
mov
jnp
fiadd
mov
addr16
dec
cmp
adc
fld
les
lods
fidiv
sbb
fnstsw
and
enter
mov
xor
mov
xchg
mov
inc
es
inc
or
ficom
iret
mov
loopne
push
cmp
jbe
inc
fwait
mov
stc
adc
inc
mov
xchg
repnz
mov
mov
(bad)
and
pop
inc
(bad)
aam
les
sub
ja
sbb
gs
int
and
cmp
daa
adc
and
cmps
into
mov
stos
mov
xor
inc
jns
dec
inc
mov
cmp
nop
popa
mov
push
mov
lods
sar
(bad)
and
jmp
push
cmp
into
add
stos
add
adc
aas
adc
out
(bad)
sbb
or
add
pop
das
aaa
int
and
and
jno
repz
sbb
xchg
pusha
mov
push
sbb
xchg
cmps
xchg
jmp
sub
lods
mov
xor
sub
gs
std
jp
es
mov
ja
sub
push
or
mov
sbb
aam
fsub
popf
scas
nop
xchg
(bad)
call
push
stos
in
sub
mov
pusha
daa
fisubr
jecxz
jae
sbb
or
ja
cli
imul
sub
mov
es
xchg
rcr
sbb
adc
mov
push
dec
dec
push
cmp
mov
pop
sub
jbe
scas
lds
daa
or
inc
ja
sub
out
pop
gs
jecxz
ja
(bad)
xchg
xor
xor
movs
inc
int
sub
mov
mov
frstor
cmp
imul
out
push
loop
mov
dec
fnstcw
push
mov
cdq
jnp
test
pop
xor
lods
ret
les
imul
inc
sub
sahf
loope
pushf
ret
push
mov
and
inc
jns
mov
pop
mov
jno
jg
and
mov
pop
xlat
and
in
fldenv
pop
retf
mov
icebp
bound
call
xor
shl
je
test
push
js
ss
xor
ror
mov
imul
and
push
das
scas
fwait
test
push
or
and
push
mov
ret
cli
jmp
pop
mov
mov
les
push
imul
sqrtps
leave
dec
push
inc
pop
cld
popa
stos
retf
cld
cmp
in
neg
out
push
imul
movups
call
and
inc
and
push
pop
mov
(bad)
bound
push
cdq
xor
adc
sbb
or
arpl
jns
sub
add
das
cs
aam
dec
pop
add
les
in
and
aam
mov
lds
popa
ds
xor
and
push
int3
js
push
mov
jmp
retf
inc
shl
enter
(bad)
pop
outs
xor
mov
repnz
aad
dec
fadd
adc
cld
inc
ins
push
cmp
push
mov
mov
cmp
add
mov
dec
sub
sbb
movs
cld
scas
ret
pop
jmp
jne
adc
inc
sub
sbb
leave
push
mov
(bad)
rcl
(bad)
jle
(bad)
adc
adc
addr16
inc
mov
pop
cmp
dec
test
jae
adc
and
mov
inc
arpl
(bad)
fidiv
pop
popf
dec
(bad)
in
adc
sub
jecxz
jnp
sub
jl
btc
or
mov
inc
(bad)
push
push
mov
sub
pusha
jnp
mov
je
and
je
cmp
push
retf
lea
add
loop
mov
(bad)
fistp
aas
xchg
cmc
in
mov
pop
in
test
call
and
adc
test
dec
pop
or
mov
cmp
or
pop
inc
sbb
pop
push
xor
jp
mov
xchg
push
std
mov
cmp
lds
mov
call
mov
pop
(bad)
mov
fmul
jp
sub
push
sub
push
std
fsubr
xlat
retf
das
and
push
in
stos
aaa
and
fcomi
mov
ins
stc
daa
fwait
cmp
(bad)
in
popa
enter
push
add
movs
in
(bad)
popa
fidivr
test
std
push
inc
mov
nop
call
push
fbstp
adc
push
in
lea
mov
cmp
xor
ror
dec
xchg
cmps
mov
cld
fist
jg
add
and
(bad)
cwde
lds
mov
adc
mov
mov
xchg
pop
mov
cli
push
ret
cmp
nop
cdq
add
aas
pusha
dec
mov
push
loop
mov
cs
addr16
gs
int
retf
frstor
adc
jp
sub
nop
jmp
add
sti
fwait
cmps
das
stos
xor
test
and
pushf
test
dec
inc
out
and
mov
xchg
or
mov
sub
mov
bound
jecxz
inc
jae
xor
pushf
xlat
scas
(bad)
sub
and
loop
gs
arpl
sub
cmp
pop
add
inc
aaa
pop
repnz
sbb
movs
adc
fild
je
xchg
and
(bad)
into
sbb
add
fidiv
mov
es
xchg
jne
sbb
jp
adc
ins
cli
ins
aas
cmp
add
ss
sahf
movs
sbb
iret
push
sub
mov
pop
jmp
int
sbb
sub
call
add
int
or
push
mov
stos
cmp
and
js
fld
or
cmps
inc
mov
dec
xchg
mov
cmps
sub
push
in
xchg
std
dec
xor
sbb
pop
sub
or
push
and
xor
popf
sbb
mov
outs
mov
ins
mov
(bad)
in
es
add
in
sub
mov
rcl
lods
int
mov
int
shl
and
cmp
rol
jmp
or
ror
jae
cli
push
imul
cli
mov
xchg
pop
push
imul
mov
mov
mov
je
lds
xchg
cmp
daa
xchg
sbb
sub
scas
cli
sub
daa
or
bnd
pop
or
scas
out
adc
call
push
add
pop
das
nop
nop
rol
xor
or
(bad)
(bad)
push
stos
push
fsubr
iret
fiadd
push
jae
rcr
sub
and
addr16
dec
mov
or
cli
ret
xchg
scas
je
enter
xchg
stc
add
and
xchg
cmps
sbb
push
div
imul
inc
call
xor
std
aad
shl
push
inc
arpl
jnp
repnz
fcomp
jl
inc
add
sub
pop
js
cmp
retf
sub
out
ds
rcr
outs
sbb
jno
and
shl
mov
xlat
fs
fild
pop
in
retf
js
cli
loope
jmp
aaa
add
ror
push
jo
repz
mov
xor
icebp
push
mov
or
sub
mov
not
cli
xchg
jmp
sbb
fisubr
ror
dec
jecxz
mov
sahf
repz
lahf
imul
push
pusha
int3
loop
push
add
aad
stos
sbb
cmp
push
cli
movs
sub
or
pop
fs
outs
add
pop
push
das
mov
aas
xor
adc
cmp
xchg
scas
xchg
loope
or
ds
mov
std
pop
sub
es
and
inc
aam
cmp
xchg
mov
outs
test
(bad)
xlat
cmp
jne
cmp
mov
jmp
inc
inc
data16
or
sbb
or
xor
dec
rcr
out
xor
out
lods
mov
jo
scas
lods
pop
dec
mov
xchg
(bad)
cmp
retf
mov
push
dec
sahf
in
add
push
rcr
jmp
bound
les
jae
pop
mov
dec
call
push
mov
sub
(bad)
or
sbb
scas
(bad)
mov
(bad)
dec
jne
mov
pop
jmp
cmps
(bad)
lea
pop
and
push
sbb
xor
push
mov
and
jbe
sub
cmc
nop
ins
lahf
or
dec
or
in
mov
loop
inc
jmp
mov
xor
fwait
(bad)
rol
jmp
sbb
or
add
test
add
inc
xchg
aad
mov
(bad)
mov
outs
(bad)
xor
xchg
cmp
sbb
and
xchg
fdivrp
into
lods
pushf
inc
and
imul
int3
or
xchg
(bad)
jg
fnstsw
mov
out
sbb
(bad)
inc
xor
sbb
pop
fild
int3
sbb
pop
adc
adc
xchg
sbb
sti
das
rcr
out
xlat
je
movs
mov
popa
cwde
call
push
imul
fwait
mov
pusha
add
into
(bad)
and
or
inc
pusha
enter
jb
(bad)
and
mov
lahf
loope
mov
aas
dec
outs
inc
pusha
pop
loop
cmp
aam
mov
into
ss
or
or
mov
pop
retf
push
push
pop
(bad)
sbb
mov
push
movs
xchg
cmp
repz
jl
xor
in
and
shr
push
pop
xchg
jmp
xchg
inc
call
push
sbb
and
push
sub
mov
add
repnz
mov
push
(bad)
sar
pusha
lock
cmc
int3
repz
sub
lahf
ins
jmp
pushf
and
cmp
mov
push
xlat
sub
or
jge
xchg
inc
aaa
fsubp
mov
in
or
outs
and
push
or
rol
test
icebp
ins
dec
cmp
sbb
sti
xchg
ins
fiadd
mov
(bad)
cmp
mov
enter
inc
xchg
(bad)
sub
aas
mov
addr16
aam
clc
cs
retf
int
scas
cs
push
push
mov
push
jp
dec
dec
scas
daa
push
repz
pop
in
rol
cwde
aaa
lods
mov
or
aas
mov
sbb
fidivr
cmp
lea
inc
dec
outs
loope
mov
daa
mov
mov
push
mov
adc
push
jbe
out
sahf
loope
loopne
or
pop
pop
cmp
bound
mov
mov
shl
or
arpl
jo
daa
inc
and
mov
idiv
fnstcw
js
icebp
int
jbe
les
and
sbb
inc
pop
and
mov
xchg
dec
out
fsubr
sbb
or
fbld
lds
outs
jae
jae
lock
repz
xor
lods
leave
cld
in
cdq
or
(bad)
int
mov
hlt
movs
ret
pop
mov
popa
das
ret
or
test
jnp
scas
imul
dec
retf
sbb
mov
inc
adc
mov
dec
ja
jp
sar
jle
pop
add
icebp
fst
sub
jp
sti
test
and
adc
jnp
(bad)
leave
ret
add
aam
addr16
xchg
hlt
push
aaa
or
sub
pop
inc
mov
jmp
(bad)
sti
in
stos
sbb
xlat
or
or
lds
aam
xor
mov
das
daa
stos
push
not
push
cmp
xchg
xor
mov
xlat
pop
ret
inc
dec
and
ins
push
out
shl
push
sbb
cmp
jbe
dec
rcr
neg
inc
sub
out
cdq
enter
scas
dec
mov
arpl
xchg
(bad)
popf
sub
mov
lods
jecxz
clc
movs
or
cmp
or
push
dec
mov
pop
xchg
jge
xchg
add
aas
xor
and
xchg
push
aam
(bad)
loopne
sbb
mov
test
push
popa
adc
xor
jae
add
or
(bad)
push
cli
pusha
mov
mov
vpsrlq
mov
xlat
sbb
add
inc
popf
bound
lods
mov
mov
jmp
add
test
inc
mov
adc
dec
lock
ret
push
mov
inc
cld
arpl
xchg
xlat
cwde
arpl
ss
cmps
jge
mov
jp
jo
jecxz
mov
das
or
loop
mov
dec
cmp
out
lods
movs
in
jo
loopne
(bad)
aam
dec
cmp
cmps
jg
jnp
add
enter
or
ds
lock
adc
mov
xchg
inc
push
cmp
popf
push
push
arpl
sbb
or
add
(bad)
pop
and
and
pop
xchg
les
shl
fadd
or
mov
scas
aas
mov
mov
dec
fadd
dec
xchg
cmps
rep
dec
jecxz
clc
add
shr
adc
add
push
push
imul
inc
mov
mov
mov
out
inc
popa
push
xchg
popa
ds
test
mov
sub
push
scas
and
xor
mov
adc
push
cdq
mov
aaa
jns
lock
in
cwde
repz
and
or
jle
(bad)
xchg
cmp
and
inc
icebp
xlat
lods
out
pop
loopne
sbb
ss
(bad)
push
adc
aad
mov
not
call
mov
ja
jmp
out
mov
outs
pop
cmc
std
sub
loope
or
mov
data16
mov
xor
cmp
call
push
repnz
nop
sahf
mov
cdq
jno
pop
scas
das
loope
mov
fsub
and
inc
xchg
inc
aad
cdq
mov
int3
shl
and
add
call
sub
xchg
loopne
int
push
mov
jbe
lods
adc
fadd
ja
or
enter
pop
mov
test
addr16
jno
(bad)
imul
push
mov
adc
push
inc
jns
ds
cmp
lods
cwde
in
cmp
sub
cmp
fst
popa
ror
(bad)
or
jae
leave
or
out
or
je
cld
adc
test
mov
je
lock
and
inc
fld
pop
repz
imul
cmp
lock
xchg
sub
fild
push
outs
imul
pushf
icebp
xchg
out
icebp
ror
leave
fisttp
sbb
xchg
sbb
or
sbb
scas
push
jp
imul
xor
retf
stos
scas
cli
add
call
out
mov
shr
mov
(bad)
xchg
lea
pop
(bad)
jns
cmp
hlt
les
repz
xchg
sbb
nop
jmp
mov
jg
jle
push
push
fisttp
hlt
mov
fwait
cmps
mov
adc
inc
cwde
(bad)
cmps
das
pusha
dec
je
ja
leave
cmps
imul
and
sub
pop
mov
jnp
mov
mul
test
mov
call
sub
js
fdivr
xchg
fwait
lods
mov
mov
jb
test
imul
mov
sti
xchg
scas
pusha
pop
mov
add
les
aaa
test
cmc
jno
pop
push
jns
rcr
scas
test
aas
and
xor
cdq
xchg
mov
aaa
push
stc
jns
(bad)
cld
cmp
jae
push
into
push
jnp
or
jnp
sbb
push
lock
ror
sub
pop
adc
or
in
hlt
test
mov
fld
jo
inc
rcr
jae
cs
xchg
scas
rcl
xor
gs
mov
pop
mov
bnd
dec
sub
push
jg
and
push
jb
cmc
xor
retf
js
dec
cmc
xor
fs
es
ja
in
xor
ins
cwde
xor
mov
sbb
sbb
mov
mov
mov
mov
loop
cmp
jl
dec
or
test
dec
add
pop
inc
loope
je
addr16
repz
std
(bad)
fnsave
imul
js
mov
ja
rol
imul
pop
sub
cmps
mov
jne
fistp
out
hlt
jmp
and
lahf
imul
cwde
mov
cli
test
or
fwait
(bad)
aad
imul
pop
inc
add
mov
mov
call
ins
inc
je
and
mov
pop
mov
xor
popa
ja
(bad)
mov
inc
je
mov
movs
cmc
jno
rcr
out
push
mov
dec
mov
les
jmp
jb
or
call
nop
mov
(bad)
les
inc
sbb
or
in
push
retf
inc
into
jecxz
fmul
and
cmps
out
inc
ds
mov
call
jp
icebp
lds
pop
mov
push
popa
ja
retf
xchg
stos
mov
fidivr
or
imul
in
push
jmp
int3
jmp
adc
mov
cld
bound
ins
gs
call
pop
stc
das
gs
inc
pop
jb
jnp
frstor
iret
aad
or
mov
div
int
jp
and
nop
dec
pop
mul
jb
(bad)
adc
sbb
jbe
rcr
icebp
sbb
sbb
fwait
mov
inc
pop
push
add
loop
pop
cmp
jp
outs
cmps
icebp
sbb
or
data16
loope
movs
sub
pop
xor
mov
add
pushf
mov
pop
cs
xchg
in
addr16
sub
int
cdq
loope
xchg
(bad)
addr16
call
push
rcr
mov
adc
sahf
in
retf
jle
xchg
adc
int
cmps
or
mov
xchg
adc
sub
out
push
jle
mov
sub
out
lods
xchg
pop
ins
cld
pusha
add
cmp
icebp
ss
cmp
cmp
ins
std
cs
setne
(bad)
cmp
aad
out
int
jnp
inc
jne
jge
push
xchg
push
out
xor
das
jbe
and
shr
shl
aas
es
inc
pushf
das
test
fisubr
push
mov
adc
pop
sub
cdq
in
iret
ins
push
pop
jo
jbe
xchg
add
xchg
mov
jge
pop
mov
fst
leave
push
(bad)
ss
adc
jg
aaa
push
push
popa
adc
jmp
push
dec
pop
push
in
fdivr
(bad)
les
pushf
out
push
mov
pop
call
inc
inc
int
cmp
aam
lds
test
cdq
sbb
inc
sub
ins
mov
and
mov
mov
int
aas
mov
xor
add
sub
pop
ss
in
ins
adc
rol
dec
(bad)
pop
pop
inc
loop
jo
add
xor
or
loopne
dec
jmp
push
arpl
push
shl
mov
mov
(bad)
pop
push
fwait
pop
jmp
cmps
jno
clc
mov
mov
inc
in
xlat
mov
enter
jmp
push
push
xor
jg
adc
xchg
lahf
or
nop
ret
rcl
mov
inc
rol
gs
cwde
mov
add
xchg
loopne
inc
inc
movs
dec
pop
jo
dec
cmp
sub
(bad)
sbb
rol
sub
mov
xor
sbb
cmp
mov
fnsave
add
movs
sub
stc
mov
add
in
jmp
jno
repz
stos
cdq
icebp
jg
pop
push
dec
or
adc
xor
pop
or
loopne
mov
loop
inc
stc
ins
inc
test
(bad)
repz
mov
push
fisttp
sub
jbe
in
adc
adc
(bad)
lods
or
clc
cmp
adc
div
xchg
or
into
lds
mov
loope
dec
hlt
jge
(bad)
sub
cmps
push
mov
jns
mov
mov
shl
sub
shl
mov
clc
push
pop
jns
aas
xchg
xchg
jecxz
retf
xchg
enter
pop
pop
fisttp
add
outs
in
xor
shl
cld
test
mov
add
daa
xor
into
pop
mov
mov
in
lahf
hlt
mov
out
mov
pop
call
and
popf
sbb
ja
fldenv
xor
and
mov
mov
out
es
inc
in
xchg
sub
aad
add
dec
xchg
clc
inc
and
push
push
xchg
popa
sti
cmps
pop
dec
mov
push
mov
mov
test
popf
arpl
bndstx
pop
cmp
leave
cmp
cdq
sub
add
dec
sti
leave
xor
push
pusha
jae
es
dec
enter
pop
mov
push
mov
clc
mov
xchg
add
inc
sbb
sti
icebp
mov
add
mov
push
scas
sbb
xor
xor
fstp
xchg
call
jo
jle
pop
out
jmp
add
and
iret
pop
mov
call
dec
leave
lds
mov
inc
fst
int
fisubr
scas
add
inc
outs
push
pop
or
int3
inc
jle
ins
xchg
mov
lahf
mul
mov
push
lods
jecxz
mov
pop
dec
sar
adc
pop
pop
leave
sub
std
inc
fimul
stc
xor
outs
push
jno
movs
cmp
jo
loop
cmp
jp
xor
pop
es
adc
(bad)
ffreep
scas
data16
xor
out
call
mov
popf
out
loop
addr16
xchg
inc
inc
dec
cwde
mov
mov
dec
sub
and
mov
call
xchg
or
std
loop
cld
adc
sti
cmp
cmps
ins
inc
aaa
movs
neg
jecxz
xchg
mov
int
mov
xchg
arpl
stc
scas
sub
repnz
pushf
mov
cmp
push
and
das
adc
shl
data16
ret
sahf
ds
iret
(bad)
movs
pop
jl
data16
enter
lea
(bad)
in
js
dec
lock
add
push
stos
mov
mov
xchg
retf
mov
mov
xchg
adc
aam
jo
jb
imul
xchg
sbb
xchg
adc
lea
pusha
jne
mov
lock
inc
repz
dec
fdivr
jle
and
das
fisttp
shr
sahf
out
dec
mov
sub
in
xor
add
push
push
repz
mov
data16
call
push
repnz
ds
mov
gs
add
popf
test
arpl
sub
dec
fnstenv
inc
in
loop
push
and
ds
mov
test
cmp
xor
sbb
inc
pusha
push
out
push
cdq
iret
(bad)
fstp
lea
enter
loope
mov
aam
fld
or
sub
jo
sbb
sar
enter
loop
pop
dec
popa
cmp
vcvttpd2dq
mov
imul
push
sbb
xchg
test
mov
leave
cmp
(bad)
sub
call
mov
addr16
gs
cmc
call
je
dec
sbb
or
(bad)
repz
xchg
cmps
mov
push
sbb
pop
(bad)
pop
sbb
jecxz
out
dec
inc
jecxz
cmp
nop
ret
iret
aam
sub
mov
pop
dec
ins
les
test
cli
ss
mov
aad
in
or
call
sahf
mov
or
(bad)
clc
xchg
mov
int
or
or
es
cmp
mov
pop
push
add
mov
lods
add
enter
jmp
fiadd
inc
loopne
aad
xor
bound
dec
test
nop
das
aaa
pop
cdq
and
fcom
cwde
loopne
loop
fdivr
daa
push
and
add
xchg
cli
aad
pusha
sbb
ins
cmp
xchg
push
clc
push
add
push
xor
and
es
inc
sbb
inc
adc
call
add
pushf
lods
mov
adc
jg
movs
mov
(bad)
out
shr
jge
push
sbb
xchg
add
icebp
and
lahf
mov
enter
adc
push
or
push
inc
or
(bad)
enter
cmovge
fs
sbb
adc
loope
rcl
rcr
jnp
mov
cmc
pop
cwde
test
mov
add
pop
sbb
and
sahf
repz
daa
fstp
sbb
or
pop
push
(bad)
iret
mov
and
jns
push
add
ja
sti
add
rol
jnp
cmps
retf
jmp
cmp
pusha
loope
aas
mov
shr
cmp
clc
adc
inc
retf
mov
mov
out
add
pop
adc
adc
aaa
inc
push
mov
and
cmp
mov
mov
(bad)
enter
add
ror
clc
ret
mov
and
xor
pop
test
mov
or
lock
push
add
push
or
push
mov
push
sahf
add
sti
push
xor
mov
loop
jg
mov
fdivr
jg
repnz
adc
aas
push
test
stc
sbb
mov
rol
stos
inc
mov
sub
mov
movhps
ror
add
into
fadd
aaa
cwde
mov
in
sahf
mov
mov
data16
mov
mov
das
or
add
cmp
(bad)
repz
arpl
cmc
pop
cmp
stos
pop
push
pop
stos
gs
(bad)
mov
stc
(bad)
call
or
stc
cli
test
jb
sub
xorps
pop
imul
ds
mov
outs
or
inc
enter
or
call
cmps
cmps
adc
addr16
mov
cmp
mov
mov
adc
icebp
add
in
and
inc
mov
add
out
rcl
and
add
ins
cs
push
push
add
aam
rcr
repnz
mov
jno
mov
loop
jmp
pop
dec
rcl
hlt
scas
call
bound
xchg
add
dec
pusha
xor
pop
fnsave
sub
dec
mov
mov
push
xor
loop
dec
paddsb
stc
xor
ficom
push
aaa
iret
dec
adc
xor
(bad)
leave
lahf
fist
dec
movs
test
out
push
sbb
shr
cmps
push
addr16
push
ss
mov
add
push
cs
sbb
sub
mov
ss
cmc
je
dec
fs
int
sub
xchg
ja
push
inc
fild
call
test
inc
jb
jge
imul
mov
int
ret
imul
nop
inc
ds
sbb
inc
sub
jo
cmps
(bad)
push
jns
xchg
pushf
pop
mov
lahf
repnz
mov
lds
dec
cmp
mov
sti
jns
test
nop
cmp
pop
test
fwait
add
mov
dec
xchg
pusha
add
js
int3
dec
pop
lock
xchg
cli
adc
call
addr16
cs
fsubr
sub
cmp
push
xchg
sbb
cmp
and
test
push
jmp
mov
mov
jmp
retf
or
pushf
add
sbb
sub
mov
cwde
mov
fcmovne
jg
pop
movs
cmp
or
ins
fild
adc
sub
lods
adc
adc
mov
ffreep
test
bound
and
iret
ins
jno
sbb
popf
dec
lock
jmp
fsubr
jno
mov
mov
push
sbb
hlt
jnp
js
and
out
inc
xor
lods
out
aam
xlat
int3
mov
xchg
aam
push
cli
xchg
fwait
les
pop
xor
aam
ret
jp
(bad)
cmp
mov
cmp
out
mov
cmp
cmovns
push
outs
pop
movs
xor
dec
enter
mov
mov
pop
sub
adc
ds
xchg
cmp
ror
mov
loop
out
pop
das
mov
pop
fdiv
push
mov
movs
sbb
xor
iret
fmul
xor
sbb
imul
xchg
xchg
cmps
and
fcmovnbe
mov
add
push
les
std
fld
loopne
sub
shl
dec
jmp
lea
test
(bad)
or
mov
int
push
(bad)
bnd
or
enter
xchg
add
mov
clc
fimul
push
adc
loope
pop
mov
lds
mov
adc
sbb
mov
push
mov
add
xor
ficom
jb
fdivr
test
nop
add
mov
add
(bad)
sahf
imul
and
arpl
or
dec
jmp
add
jle
add
dec
imul
mov
adc
mov
scas
xor
(bad)
jb
pop
jae
adc
xor
dec
jmp
jbe
pushf
call
retf
imul
inc
mov
or
xchg
outs
lahf
inc
loop
add
mov
out
dec
push
(bad)
xchg
jo
mov
xchg
cmp
add
mov
mov
inc
fsub
(bad)
lock
or
add
loope
fnsave
add
sbb
ins
cmps
push
mov
dec
shl
push
(bad)
sub
adc
aas
ror
sbb
aaa
jecxz
out
ffreep
mov
out
out
fidivr
jp
and
adc
mov
mov
arpl
jno
ins
push
(bad)
out
sbb
cmp
out
xchg
pop
adc
cmp
test
nop
cs
pop
shl
call
test
test
(bad)
push
and
and
mov
data16
fbstp
adc
leave
retf
xor
mov
inc
cdq
jbe
adc
mov
mov
sbb
cmp
jp
enter
ret
push
pop
xchg
into
xor
adc
ja
(bad)
xchg
xor
addr16
sbb
ror
mov
jns
push
pop
or
mov
call
retf
mov
jmp
daa
scas
mov
add
jg
add
(bad)
std
(bad)
cli
jnp
dec
ds
shl
pop
jo
xchg
xchg
sub
pop
aad
or
stos
add
add
jmp
stc
xor
push
hlt
gs
sbb
stos
cmp
add
stc
inc
in
sbb
lods
push
push
cmp
dec
(bad)
ror
sahf
inc
ret
pop
mov
push
dec
enter
pushf
(bad)
xlat
fmul
pop
cs
or
loope
xchg
mov
inc
les
inc
mov
lods
mov
leave
sbb
jb
popf
and
adc
add
cmc
mov
push
(bad)
xor
loope
xchg
ret
(bad)
adc
rcr
mov
and
add
xor
mov
movs
stos
ja
movs
sbb
scas
xchg
xchg
inc
sbb
push
inc
jecxz
in
and
fldenv
or
xchg
mov
dec
inc
cmp
adc
mov
add
gs
and
jmp
sub
pop
or
jnp
sbb
ficom
cmp
inc
cmp
(bad)
pop
dec
dec
xlat
fld
(bad)
push
jge
dec
jae
retf
loopne
dec
and
(bad)
test
sub
mov
mov
fdiv
ins
mov
lods
push
inc
jecxz
pop
push
push
and
mov
sti
dec
add
xor
mov
movs
adc
hlt
scas
lock
jne
call
std
push
inc
stc
mov
addr16
es
pop
(bad)
es
and
pshufw
arpl
outs
das
rcr
imul
xchg
lock
cmps
dec
sub
jmp
cmp
xchg
inc
fdiv
sbb
fwait
mov
pop
jg
lea
cmp
mov
and
sbb
inc
jbe
in
cdq
stc
inc
(bad)
pop
stos
xchg
scas
lods
and
pusha
not
popf
call
gs
(bad)
dec
cmp
sbb
cs
push
xor
movs
sub
ja
xor
sub
popw
adc
sbb
cdq
shl
pushf
push
sub
rcl
imul
pop
outs
shl
mov
lea
dec
mov
mov
mov
loope
int3
inc
sub
loop
test
sbb
fbld
push
aaa
adc
pop
sbb
movs
push
add
mov
retf
popf
jae
cmp
mov
fnstsw
popa
icebp
scas
scas
in
or
cmps
jp
outs
cmp
sti
dec
jnp
sub
dec
inc
mov
pop
mov
fwait
and
sbb
inc
jge
out
bound
jb
(bad)
adc
in
jne
in
mov
shl
stos
sbb
hlt
xchg
(bad)
push
in
mov
repnz
adc
adc
add
jmp
pop
sahf
pusha
lea
inc
aad
or
jo
pop
cdq
retf
cmp
mov
jmp
ss
test
lds
mov
bound
popf
jmp
nop
das
sub
adc
add
and
mov
cmc
jmp
mov
sbb
mov
jecxz
xor
mov
xor
je
jle
js
pop
fcom
fsubr
mov
mov
ds
aas
or
outs
fwait
jmp
aaa
mov
xor
xchg
cmp
fwait
xchg
jbe
xchg
je
(bad)
inc
in
inc
ja
inc
xchg
dec
inc
mov
loopne
push
aam
call
out
test
cli
sbb
mov
into
test
(bad)
push
stos
test
mov
mov
sbb
mov
and
dec
push
and
inc
lods
mov
sbb
cmp
stos
add
dec
(bad)
mov
add
out
mov
add
loop
pop
jno
sbb
cmp
mov
push
cmp
aam
sub
sbb
push
sbb
cmp
mov
sub
ins
call
xchg
js
jp
mov
outs
test
push
mov
mov
dec
rcl
pop
mov
outs
add
mov
cmp
out
jb
fcom
xchg
jle
mov
dec
cmp
push
in
pop
inc
call
sub
sbb
pop
aad
retf
dec
dec
js
mov
cmp
mov
pop
sub
mov
pop
or
pusha
add
scas
xor
outs
(bad)
inc
adc
int3
in
mov
dec
mov
jmp
hlt
std
cli
test
test
imul
push
mov
mov
sub
fcomp
push
je
hlt
inc
popa
mov
cmc
data16
lock
(bad)
aas
ss
sub
jcxz
and
cmps
scas
fcmovne
adc
jg
pop
mov
xchg
jmp
mov
aaa
or
ret
nop
ret
or
mov
push
add
sahf
push
out
je
(bad)
pushf
cmp
add
test
pop
mov
and
daa
add
mov
in
int
bound
scas
xor
jecxz
das
ja
popf
push
push
mov
sub
clc
cmps
ret
pop
dec
xlat
pop
test
inc
and
mov
stc
repnz
fld
sub
xchg
push
add
push
jmp
movs
cwde
aam
push
lods
or
js
xor
push
pop
cmp
xchg
sbb
int3
mov
push
in
add
shl
jl
jmp
call
mov
add
or
test
mov
enter
mov
in
sub
dec
mov
and
hlt
push
xor
xor
(bad)
mov
xor
cli
sub
ss
and
xchg
mov
lods
and
sbb
int3
jo
jno
or
pop
out
cmp
jb
out
sub
cmps
pop
ins
sub
sbb
xchg
out
cmp
std
sub
dec
cs
mov
int
rcr
shl
idiv
fs
xchg
or
or
or
pop
jnp
jae
push
in
mov
jb
pop
es
dec
cli
and
aaa
les
sbb
xor
dec
nop
adc
push
inc
xor
xor
bound
rol
es
dec
jmp
fcomp
sbb
lahf
cdq
push
add
enter
in
mov
in
das
loope
mov
int
mov
mov
pop
enter
leave
dec
movsx
fmul
xchg
sub
and
fdiv
push
mov
in
cld
sub
mov
call
push
mov
dec
dec
aad
inc
shl
fisubr
dec
xchg
out
pop
mov
out
movs
sub
cmp
mov
adc
cmc
inc
fwait
add
enter
ffreep
and
or
(bad)
mov
and
xchg
fistp
(bad)
popa
addr16
dec
push
adc
call
dec
add
das
daa
pop
mov
das
cmp
enter
int3
packuswb
stos
mov
loop
lea
sbb
push
mov
cmc
sub
cld
cmp
dec
or
mov
div
push
push
in
or
adc
mov
dec
dec
mov
cld
jnp
sbb
jmp
pushf
mov
out
cwde
cmp
daa
push
ins
pushf
cmp
in
dec
sahf
jno
imul
jb
mov
adc
cwde
in
or
mov
sub
mov
shl
cdq
mov
sub
rcl
hlt
dec
and
add
xchg
push
pop
ja
inc
mov
outs
movs
inc
xchg
xlat
dec
jecxz
cmp
jge
je
inc
stc
sbb
addr16
out
xchg
mov
ds
dec
mov
sbb
imul
push
adc
jno
in
dec
mov
in
repz
repnz
std
test
shl
inc
add
lds
mov
jno
jae
mov
call
sub
sbb
aas
xchg
ror
out
jno
jns
repnz
push
ret
sar
and
push
push
jo
rcr
push
xor
dec
sti
mov
mov
call
jl
sahf
fld
dec
sub
out
jne
repz
push
aaa
jnp
imul
sbb
mov
lods
xchg
(bad)
jl
sbb
ins
mov
sti
dec
inc
test
xchg
repz
jmp
jp
xor
retf
fstp
ins
push
mov
pop
lahf
jno
test
fucomp
jnp
test
pop
xlat
inc
sub
dec
icebp
add
clc
xchg
(bad)
ficomp
retf
cmp
leave
push
sbb
push
dec
ins
and
cmp
xchg
adc
clc
add
ds
rcr
pop
ins
push
mov
jle
imul
xchg
inc
pop
test
and
mov
mov
ss
ins
pop
in
jl
(bad)
mov
mov
push
inc
push
dec
or
xor
dec
pop
retf
jmp
mov
rol
dec
dec
mov
je
out
dec
std
dec
je
lahf
ret
(bad)
sbb
cld
inc
gs
dec
shr
(bad)
imul
adc
adc
mov
int3
fcom
pop
xorps
nop
mov
lds
dec
retf
add
pushf
mov
jge
mov
inc
xlat
or
cmp
out
push
popf
jns
xchg
ins
jbe
pop
test
push
cmp
and
rcr
inc
push
test
pop
in
xchg
sub
scas
adc
jle
sub
lods
iret
loopne
adc
add
jecxz
dec
inc
inc
out
cdq
cmp
fs
mov
adc
aaa
shl
leave
mov
cmp
and
sbb
cmp
adc
mov
xor
rcl
adc
jmp
popa
xor
or
ja
daa
outs
sub
repz
rsqrtps
rcr
push
aam
punpckhdq
idiv
push
dec
and
dec
push
jp
popf
xchg
mov
(bad)
jl
fcmovnu
pop
jg
cdq
call
pusha
out
and
popf
int
inc
pop
(bad)
les
push
popa
lahf
jno
jo
inc
mov
or
pop
or
retf
mov
dec
and
jl
jle
ffreep
push
imul
jmp
ds
xor
pop
(bad)
jg
ret
ror
sub
add
outs
rcl
es
test
repz
mov
out
cmps
xchg
(bad)
xor
sbb
fisttp
in
shr
sbb
loopne
leave
and
std
repz
stc
add
jg
adc
mov
xchg
add
dec
enter
idiv
in
mov
adc
pushf
aad
lahf
int
xchg
push
data16
or
lahf
cmp
outs
mov
pop
imul
call
mov
test
and
cmp
xlat
ja
loop
lods
loopne
push
add
clc
xor
xchg
push
inc
lods
loopne
lods
retf
aas
clc
and
movs
daa
fcom
out
outs
repz
aad
push
mov
out
stos
icebp
mov
addr16
pushf
test
icebp
cmps
into
push
pop
sbb
data16
jbe
mov
loopne
clc
adc
dec
psrlq
movs
adc
scas
dec
mov
outs
test
push
enter
inc
and
inc
pop
dec
sub
in
cdq
and
add
xchg
mov
xchg
push
aad
xor
cmps
dec
loope
ss
xor
enter
pop
push
mov
pushf
add
push
mov
adc
sbb
daa
fst
inc
mov
test
pop
mov
dec
and
sbb
adc
adc
(bad)
arpl
jge
retf
jle
call
push
mov
sub
sbb
adc
push
hlt
call
dec
adc
test
inc
push
pusha
inc
sub
xchg
adc
xor
push
arpl
test
pop
mov
xchg
scas
fnstsw
jmp
pop
loopne
ins
sub
and
and
cwde
mov
push
pop
mov
outs
push
adc
mov
adc
cdq
jmp
data16
mov
and
mov
call
inc
xor
jg
movs
fild
aam
lods
xor
std
or
push
cmp
or
jecxz
mov
(bad)
cmp
xchg
add
rcl
fstp
je
cmp
fucomp
int3
sti
(bad)
je
sahf
aad
test
mul
out
addr16
inc
(bad)
in
xor
fcomip
xchg
sub
stc
pop
pop
into
lahf
sbb
jae
aaa
int3
out
in
sbb
jge
add
outs
sub
or
add
sahf
sub
dec
sbb
jg
jno
xlat
pop
test
sbb
in
xchg
push
out
add
in
popa
push
xchg
jecxz
push
(bad)
nop
pop
sbb
fistp
adc
lahf
xchg
adc
jl
retf
sbb
lods
or
ja
call
aaa
(bad)
push
mov
iret
xchg
stc
pop
clc
and
mov
sub
cmps
mov
pushf
movs
cs
adc
adc
mov
xchg
sub
lock
test
in
rcl
pushf
sar
jne
add
sahf
lods
inc
and
dec
mov
fcomp
aaa
shl
cmp
sub
mov
add
mov
mov
arpl
xchg
and
or
push
out
aaa
inc
mov
pop
dec
rcl
js
sub
cld
repnz
mov
jb
out
add
(bad)
or
ror
dec
shl
sbb
pop
fcomp
jnp
(bad)
sbb
ins
lea
retf
jae
cmps
inc
loop
std
(bad)
pop
rcr
sub
jl
dec
ss
xor
das
ret
sbb
inc
and
ja
cld
mov
fcmovu
int
or
jae
xchg
mov
mov
mov
idiv
int
loop
pop
adc
fdivr
and
lahf
pop
push
fcmovu
push
ret
xchg
cmp
ins
rcr
test
mov
push
mov
movs
out
or
mov
inc
jmp
in
sbb
bound
retf
iret
out
jle
into
mov
retf
push
call
je
mul
lods
int
dec
out
and
jbe
cwde
mov
syscall
cmc
imul
dec
sbb
adc
movs
push
dec
push
leave
push
repnz
mov
dec
std
pusha
and
pushf
fisttp
clc
cld
or
adc
faddp
pop
nop
mov
(bad)
lock
cmp
out
retf
or
mov
gs
mov
jle
loop
inc
mov
ret
call
ins
xchg
hlt
dec
and
dec
sub
fisubr
adc
retf
jo
mov
dec
aas
xchg
ret
jns
jne
(bad)
pop
test
iret
cwde
dec
stc
popa
adc
test
push
repz
out
sub
sahf
outs
cs
inc
fisub
pop
pop
inc
iret
or
call
sub
inc
loop
rcr
xor
sbb
adc
inc
jo
or
dec
pop
sar
push
add
call
ins
mov
daa
push
xchg
gs
fidivr
cs
inc
cmp
mov
test
scas
lahf
mov
test
xor
pop
xor
stos
mov
cli
repz
inc
dec
mov
gs
dec
mov
xor
xor
and
cmp
test
stc
mov
mov
xor
or
cmc
pop
sahf
in
jo
xchg
fild
sbb
dec
dec
in
fistp
out
mov
xchg
xor
mov
ins
movs
ja
fcom
jmp
movs
mov
inc
das
fidiv
imul
pusha
shl
mov
leave
aad
ret
cmp
push
push
dec
stos
jge
ret
sbb
std
mov
into
jge
sub
ret
loopne
dec
dec
jge
mov
enter
push
aas
out
data16
mov
pop
jle
mov
scas
add
popa
outs
scas
mov
add
push
mov
pop
movs
sub
cmp
push
push
and
stc
fistp
pusha
mov
adc
jl
pop
push
push
leave
mov
sub
(bad)
mov
(bad)
mov
adc
sub
fcom
xlat
ja
jnp
mov
sysret
jecxz
mov
in
pop
pop
shl
dec
or
pusha
mov
mov
addr16
jmp
shl
pop
jbe
pop
and
stos
mov
mov
lock
mov
jl
mov
push
mov
inc
cmp
sbb
imul
dec
push
std
hlt
das
add
jle
shr
jmp
jbe
push
sub
movs
and
push
push
fld
jo
test
int3
rol
pop
add
xchg
loop
mov
jle
fs
pop
mov
sar
inc
mov
(bad)
jg
mov
cld
mov
and
push
pop
(bad)
stc
sahf
xchg
dec
jae
in
in
mov
data16
dec
cmps
push
mov
out
jb
das
test
mov
out
cmp
fs
adc
sbb
mov
test
push
mov
add
lods
inc
sub
call
rcl
xchg
cli
retf
dec
rol
not
mov
adc
mov
xchg
mov
mov
pop
stc
fdiv
mov
inc
sbb
outs
into
cdq
push
jnp
call
aad
hlt
pop
cmp
daa
loop
mov
(bad)
imul
fstp
add
push
mov
pop
adc
push
fcomi
add
imul
sub
jne
ret
arpl
int3
dec
fbstp
sbb
lods
jg
mov
test
xor
cld
jg
test
inc
fsub
movs
pusha
mov
pop
adc
mov
scas
fisubr
fsub
pop
out
jns
push
imul
(bad)
std
scas
call
dec
(bad)
fnsave
adc
push
ret
jg
add
cdq
xor
mov
call
call
ret
fisttp
sub
jmp
(bad)
hlt
add
sub
cmp
bound
outs
fs
in
sub
es
mov
cmp
out
(bad)
cmp
and
daa
sbb
xchg
mov
cmp
and
retf
inc
pop
pop
shl
mov
or
fisub
popf
cmps
xor
(bad)
xor
dec
mov
mov
aam
sti
fdivr
xor
(bad)
out
sbb
(bad)
pop
out
mov
cmp
mov
outs
inc
out
imul
sar
in
pop
add
adc
mov
int3
and
jno
rol
fcomip
pop
aaa
fwait
xor
mov
sub
and
out
shr
ins
jp
test
test
call
das
dec
jp
fcom
mov
xor
mov
dec
xlat
add
(bad)
jecxz
xor
cmp
test
in
aad
dec
pop
(bad)
mov
cmp
mov
daa
fstp
neg
jmp
mov
push
mov
pop
(bad)
push
push
sub
sub
jmp
gs
mov
xchg
add
mov
xor
dec
loopne
ficomp
mov
dec
arpl
outs
outs
and
aas
jecxz
pop
xchg
(bad)
pop
(bad)
out
imul
dec
mov
outs
adc
jl
push
dec
(bad)
sub
mov
jmp
test
inc
imul
(bad)
fwait
mov
pushf
xor
pop
add
outs
ss
push
ret
in
cmp
hlt
test
out
or
mov
rcl
mul
mov
ret
xchg
in
cmp
mov
add
call
cmp
mov
or
mov
int
popa
bound
xor
mov
sub
sbb
cmc
loopne
imul
and
test
sub
mov
(bad)
retf
xchg
ret
(bad)
fcom
jl
add
iret
lea
xchg
(bad)
movs
adc
jno
sbb
jns
sub
dec
lahf
xchg
push
sahf
or
es
out
cmp
xchg
pop
outs
lock
cdq
retf
dec
jo
pushf
jle
xchg
retf
je
cmps
mov
mov
ins
div
clc
sub
hlt
jbe
loopne
xchg
sahf
bound
outs
cwde
dec
pop
fwait
es
movs
mov
jns
mov
mov
inc
sub
cld
sahf
xchg
adc
push
out
add
mov
sar
in
pop
es
jmp
out
or
rcr
test
adc
sub
dec
movs
test
or
adc
fbstp
xor
int3
mov
test
fwait
(bad)
pop
jmp
inc
add
popf
jp
and
add
ds
pop
pcmpeqw
lahf
cmc
xor
pop
in
adc
data16
sar
add
mov
iret
add
mov
dec
in
or
dec
in
mov
xlat
stos
outs
lock
lea
cs
nop
ds
cmp
inc
inc
cs
add
fwait
adc
or
mov
dec
inc
push
mov
sar
xlat
jnp
or
dec
idiv
sbb
xor
inc
retf
xchg
loop
jle
sti
fld
pop
out
sbb
add
push
dec
(bad)
mov
dec
pop
scas
xchg
call
pop
jp
jle
cdq
or
jmp
sub
hlt
je
popa
xchg
je
pop
test
ltr
int
inc
pop
mov
mov
xchg
lds
sahf
xor
inc
not
and
loope
sbb
addr16
cwde
adc
(bad)
ins
imul
adc
adc
inc
mov
or
popf
push
fnsave
repz
mov
push
(bad)
cs
sub
js
or
sbb
les
pushf
fs
adc
push
das
das
ds
retf
xor
mov
cdq
lahf
jl
out
daa
cmp
mov
imul
jl
mov
adc
inc
xor
add
cmp
fistp
push
jmp
or
fwait
or
ins
and
mov
push
outs
scas
sbb
ds
and
or
sbb
cmps
(bad)
aaa
push
push
hlt
dec
std
sub
pop
fwait
dec
xor
mul
xor
aas
pop
sub
sbb
jle
std
retf
mov
or
retf
(bad)
or
cmp
dec
and
mov
pusha
jbe
hlt
inc
addr16
fwait
test
lea
inc
leave
inc
pop
sub
jnp
stos
out
and
sub
and
repnz
clc
addr16
sahf
loopne
inc
out
cmp
xor
dec
loopne
sar
inc
adc
in
and
int3
js
and
xor
mov
sub
cli
movs
or
mov
loop
pop
ja
xchg
mov
ja
sub
push
mov
mov
xchg
stos
jle
adc
jle
sub
aad
ds
xor
dec
out
jne
pusha
xor
push
adc
sub
mov
pop
jmp
out
inc
mov
ins
sbb
sbb
jb
daa
pop
inc
mov
xchg
xor
addr16
inc
jge
lods
mov
inc
cmp
mov
xchg
or
xor
rcl
sar
scas
sar
jnp
cmps
in
fadd
loopne
xlat
test
mov
adc
or
cmp
sub
aas
in
aad
jmp
lock
mov
xor
xchg
inc
push
or
daa
cmps
sbb
jmp
jb
mov
fdivr
sub
pop
shl
push
inc
push
test
pop
ja
cs
je
sub
add
int3
ins
push
fdiv
retf
(bad)
iret
push
sbb
cmps
inc
xor
gs
pop
adc
and
enter
mov
outs
mov
test
hlt
repnz
repnz
ins
shr
icebp
out
xlat
and
or
xchg
out
rcl
mov
jne
cdq
(bad)
push
inc
pop
in
push
cmps
and
jl
cmp
jno
mov
mov
fs
stos
mov
ins
mov
push
add
adc
or
movs
imul
es
jae
cmp
or
shl
xor
std
push
js
loopne
cdq
inc
pop
cmp
mov
(bad)
sub
push
enter
jbe
sub
jl
xchg
push
and
lahf
xchg
sub
les
push
jp
inc
and
jo
jo
xchg
inc
in
mov
movs
xchg
cmp
outs
xlat
xchg
lock
inc
call
(bad)
xor
cmps
neg
add
dec
xor
xor
dec
mov
cmp
adc
repz
mov
shl
and
add
stos
outs
sbb
push
jp
(bad)
ss
aad
mov
pop
mov
mov
add
pop
dec
jmp
push
or
add
iret
pop
inc
pusha
push
(bad)
in
push
(bad)
into
push
pop
addr16
mov
mov
mov
movs
hlt
cmp
sub
aaa
xchg
jmp
test
and
or
adc
cdq
(bad)
cmp
adc
sub
scas
call
mov
mov
jle
mov
(bad)
gs
int
popa
push
fcomp
push
xchg
je
stos
fs
(bad)
inc
jl
sar
mov
mov
push
and
cmp
dec
sub
imul
ins
cwde
shl
xor
adc
mov
into
leave
or
dec
pop
inc
icebp
pop
popa
idiv
imul
xchg
into
sub
push
int
in
test
ret
adc
or
add
aam
cli
rcr
xor
scas
or
out
mov
mov
jmp
mov
fbstp
pushaw
test
jmp
ja
mov
arpl
cmp
sbb
xor
rol
data16
xor
fnsave
ja
not
dec
pop
and
push
int3
popf
fimul
iret
lock
xchg
cmc
cmp
in
test
mov
(bad)
push
dec
dec
pop
lods
mov
cmp
jmp
fdiv
adc
stc
push
mov
outs
push
cmp
mov
repnz
mov
inc
mov
mov
movs
mov
mov
leave
jp
or
push
(bad)
fwait
enter
xor
xor
aad
daa
and
pop
lds
cmp
int3
xchg
xlat
mov
je
dec
aaa
sahf
mov
nop
loop
mov
dec
mov
out
ja
push
(bad)
add
bound
mov
jmp
cmc
mov
xchg
push
xchg
fadd
daa
ins
inc
pushf
xchg
(bad)
fisubr
mov
shl
adc
outs
pop
mov
fbstp
pop
das
or
fidivr
add
or
mov
imul
pushf
mov
sub
push
loopne
adc
out
jb
jge
iret
adc
add
adc
adc
and
lock
cmps
pop
pop
adc
test
add
jnp
ss
jle
cwde
js
pop
es
pop
out
addr16
int
scas
ss
jmp
xchg
xor
xchg
and
mov
std
push
push
out
cli
into
mov
bound
dec
(bad)
sub
xchg
xchg
(bad)
test
out
repnz
dec
fmul
or
push
hlt
mov
dec
mov
inc
inc
and
mov
inc
add
(bad)
xchg
mov
inc
or
mov
test
or
push
jecxz
fsubrp
call
sub
inc
aas
or
lock
sahf
ret
lock
lahf
movs
sbb
add
jbe
jno
inc
and
dec
stc
hlt
sub
add
cdq
adc
fdiv
push
xchg
pop
sbb
pop
call
mov
pushf
pop
xchg
pop
jecxz
mov
into
mov
data16
cdq
mov
dec
ror
mov
cmp
movs
(bad)
adc
cli
(bad)
sar
xor
loopne
jno
sbb
sahf
aaa
stos
fxch
outs
cmp
jnp
ins
addr16
je
add
push
jecxz
scas
shr
pop
scas
pop
sbb
sbb
dec
cmp
jno
push
shl
enter
jbe
mov
push
test
mov
repnz
and
xlat
jb
das
pop
pop
xchg
aaa
nop
push
xor
jae
les
push
mov
imul
pop
fs
test
xchg
pushf
jb
call
sti
adc
mov
add
adc
mov
nop
push
int3
cmp
es
sahf
xchg
pop
dec
retf
int3
arpl
out
(bad)
in
adc
mov
mov
mov
cmc
xlat
adc
adc
add
pop
inc
cmp
das
xor
sbb
and
mov
ret
lea
adc
je
retf
in
or
loope
es
xchg
call
jecxz
dec
jo
fadd
inc
cmp
push
je
sub
out
or
lea
inc
dec
mov
js
lock
sub
rol
jbe
mov
clts
rcr
test
or
mov
mov
sub
es
mov
leave
jo
sbb
sub
push
aad
jae
lea
push
sbb
arpl
pop
scas
retf
inc
fst
int3
stos
mov
dec
sti
jne
aaa
mov
imul
int
lea
aas
retf
dec
cwde
leave
mov
sbb
scas
lahf
push
stc
daa
cdq
fidivr
pop
mov
push
push
xor
gs
arpl
fisubr
add
dec
ds
loop
xor
push
inc
ins
sbb
add
lock
pusha
test
pop
dec
leave
adc
push
cmc
and
sub
popa
xor
push
cld
mov
(bad)
xor
and
out
std
mov
int
aaa
mov
out
daa
fwait
push
xchg
fld
xchg
add
in
and
outs
push
cmps
inc
retf
ja
sbb
push
mov
add
jmp
ret
fsubrp
aaa
shr
mov
mov
(bad)
pop
add
out
dec
pushf
sahf
shr
push
cwde
popf
fsubr
aas
mov
aad
lahf
xor
mov
shl
push
xor
mov
mov
mov
and
dec
cdq
std
mov
retf
(bad)
push
fidivr
into
mov
cmps
lea
xor
push
xchg
fwait
pop
cdq
loope
imul
add
mov
mov
int
inc
(bad)
div
mov
stos
scas
push
sub
test
xchg
imul
xchg
jge
pop
(bad)
push
les
sub
std
mov
das
push
pop
dec
jl
xchg
xor
and
xor
lods
pop
ds
loop
in
(bad)
pop
aaa
in
adc
xor
out
pop
cwde
xchg
daa
ins
and
pop
xchg
jp
or
mov
and
sub
jl
cmp
movs
jb
jle
ret
xchg
popf
adc
xchg
sub
enter
test
push
xor
(bad)
loop
fucomp
add
jmp
sub
lock
push
sbb
call
or
inc
push
mov
cmp
push
int
jbe
enter
sub
inc
aam
lods
and
or
push
cld
and
pop
xchg
(bad)
mov
mov
inc
mov
jp
xchg
ins
and
push
jge
mov
loop
in
repnz
cs
stos
mov
push
jmp
aad
add
sbb
nop
xor
adc
xor
arpl
add
aam
push
and
gs
adc
add
gs
cli
jo
add
xor
mov
push
and
mov
bound
aam
(bad)
aad
jnp
pop
imul
mov
(bad)
jecxz
popf
sub
dec
xchg
cli
aaa
xchg
cmp
cli
movs
rol
push
pop
test
jle
dec
xchg
sbb
je
mov
sub
push
mov
jg
mov
add
or
int3
call
repnz
dec
in
mov
and
lods
sub
xlat
stos
cmp
lods
mov
mov
and
mov
clc
push
fistp
mov
cs
or
fist
cmp
mov
into
mov
stc
mov
test
iret
xchg
cdq
add
mov
imul
into
js
adc
pop
cmps
shl
mov
lea
inc
loop
jo
mov
sub
xor
jmp
fmul
mov
cmp
ror
sbb
fld
enter
dec
or
add
push
push
aam
mov
scas
jns
retf
mov
bound
fnsetpm(287
or
sbb
daa
add
or
push
retf
cmps
jo
(bad)
mov
mov
fdivr
pop
bound
inc
icebp
inc
mov
cmp
xor
push
cmp
fisub
or
ror
call
mov
sub
loopne
fwait
or
fstp
shl
mov
test
hlt
das
push
hlt
jmp
sbb
adc
dec
push
ret
ins
cwde
mov
and
std
push
ret
cmps
or
hlt
clc
add
jp
adc
data16
movs
ret
daa
xlat
xor
or
jg
mov
inc
out
adc
fist
fs
sahf
cmps
add
mov
cld
jno
xor
mov
push
sbb
ins
pop
mov
cwde
push
or
inc
stos
cld
jge
jno
out
(bad)
xor
test
aam
div
in
fstp
fs
ret
mov
dec
movq
out
mov
das
dec
push
push
(bad)
cmp
dec
mov
push
pop
inc
lea
mov
mov
push
test
je
pop
(bad)
arpl
pop
pop
loope
mov
call
sar
les
jmp
scas
js
sahf
sub
lods
in
fstp
fld
adc
xchg
shr
pushf
fisttp
retf
hlt
jo
sahf
dec
xchg
out
jb
stos
test
xor
shl
push
or
pop
hlt
push
mov
push
mov
aas
lea
test
xor
push
ds
out
and
leave
sub
sub
cmp
sti
mov
mov
mov
enter
lahf
pop
adc
fldcw
loopne
repnz
cld
cwde
mov
(bad)
sub
cld
fidivr
mov
mov
jo
fsubr
les
imul
jno
lods
mov
loope
push
or
mov
test
push
clc
repnz
lods
aas
push
fild
dec
or
stos
dec
dec
and
repz
dec
mov
pushf
int
jae
or
mov
jne
sub
sbb
push
and
xchg
jg
popf
jmp
cmp
or
ret
lea
jno
sbb
xor
(bad)
dec
mov
pop
shl
xchg
(bad)
cmp
scas
lock
sub
repz
cmc
jp
add
adc
push
popa
push
test
test
adc
shl
fisubr
rcl
push
and
arpl
xchg
jp
lahf
fbld
xchg
(bad)
jae
push
mov
icebp
aas
or
loopne
pop
push
pop
jns
mov
cli
rcr
retf
hlt
adc
cs
(bad)
in
lahf
jns
outs
pushf
cwde
lods
addr16
pop
xchg
jnp
and
mov
leave
mov
stos
mov
sbb
(bad)
sbb
sbb
mov
mov
daa
popa
in
lock
hlt
lahf
fdivr
ret
xor
pushf
shl
scas
addr16
test
pop
arpl
pop
xor
sti
pop
mov
mov
push
mov
or
mov
gs
sti
out
xlat
sub
adc
sub
int3
out
loop
xchg
test
retf
setno
cmc
leave
cmp
mov
dec
dec
dec
sub
xor
mov
out
adc
lock
pop
adc
mov
push
pop
(bad)
and
mov
jmp
adc
pop
xchg
pop
sub
mov
push
addr16
es
movs
pop
xchg
pop
inc
ret
retf
pop
and
lods
dec
xchg
jg
fstp
mov
adc
or
xchg
icebp
dec
bound
(bad)
aad
cmc
jl
mov
dec
dec
and
mov
push
and
pop
push
(bad)
pop
jns
push
fidiv
mov
and
sbb
ss
xchg
out
enter
stc
add
(bad)
mov
mov
idiv
adc
jmp
or
les
fstp
cmc
mov
pop
fcom
push
fwait
out
cmp
pop
mov
retf
faddp
shr
loope
add
(bad)
(bad)
fidivr
outs
push
lock
dec
add
test
and
aad
sub
rol
pop
or
hlt
mov
cmc
fld
cwde
cmp
sar
or
pop
or
mov
lock
shl
sbb
fbld
subps
xchg
iret
cli
and
xor
mov
shl
and
inc
rcr
sub
popf
cdq
push
mov
cmps
js
xchg
(bad)
and
or
scas
popa
xor
popa
adc
push
movaps
dec
sbb
cmp
test
mov
cmps
push
ins
je
cs
push
scas
outs
out
jo
and
test
fcomip
adc
lea
sub
cmp
in
(bad)
shr
lahf
push
gs
mov
nop
rol
jno
push
nop
push
sahf
pushf
push
mov
and
enter
push
fdivr
jp
adc
and
(bad)
dec
pop
mov
add
ret
cmp
inc
jb
inc
mov
ret
adc
in
loop
lds
int
pop
adc
imul
addr16
retf
adc
pop
in
inc
push
aas
dec
or
dec
mov
add
iret
or
adc
pop
jl
xor
outs
in
gs
in
cmps
cwde
jno
push
and
and
jbe
xchg
mov
inc
push
push
ins
jb
leave
fucomp
dec
mov
fist
(bad)
xchg
fimul
cs
mov
ds
fmul
and
pop
out
ins
cwde
fst
mov
inc
mov
xor
sbb
xchg
sbb
std
in
mov
add
mov
dec
fstp
pop
movzx
cdq
sub
out
popf
mov
out
or
dec
adc
jne
jp
push
(bad)
jmp
mov
loopne
ins
sbb
jge
xor
pushf
cs
out
test
hlt
test
repnz
pop
jecxz
aas
ficomp
inc
mov
inc
ret
inc
adc
loope
(bad)
cli
imul
into
lods
inc
mov
sub
std
pop
test
adc
scas
cld
inc
sahf
nop
(bad)
in
lea
push
cwde
pop
shr
(bad)
popf
(bad)
outs
jb
scas
or
mov
shl
cmc
in
dec
aad
in
or
xchg
mov
xor
std
iret
cmps
adc
(bad)
pushf
(bad)
mov
jmp
mov
int
ja
sub
cli
or
cmp
mov
js
rol
std
push
or
(bad)
ret
pop
imul
fbld
cmp
cmps
push
in
jge
popf
or
loopne
ds
sub
push
pop
test
push
sbb
or
or
sbb
ds
jno
xor
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
(bad)
es
jne
in
ss
adc
js
pop
mov
push
es
ins
test
je
loope
mov
mov
fist
jno
les
or
jmp
jbe
cld
js
jmp
imul
push
lods
(bad)
mov
dec
or
loopne
aaa
xchg
(bad)
aam
fldenv
out
stos
add
loope
jno
push
(bad)
lods
and
dec
mov
add
xchg
imul
and
cwde
mov
push
bound
stc
sbb
shl
repnz
sbb
push
dec
or
pop
pop
or
add
jmp
int
and
mov
fwait
jp
ficomp
lods
mov
sar
mov
iret
ins
clc
xchg
cmp
scas
xor
mov
cli
sub
add
out
movs
jns
scas
mov
cmp
(bad)
xor
out
mov
mov
xchg
push
(bad)
fisub
cmps
dec
or
sub
stos
xchg
fs
arpl
out
xor
push
icebp
inc
in
mov
add
test
repz
out
mov
lea
mov
in
test
and
adc
lahf
add
sub
call
rcr
cwde
in
aad
(bad)
pop
cmps
pop
mov
push
out
mov
jmp
fldcw
inc
test
lock
jnp
retf
sbb
xor
inc
scas
mov
pop
outs
mov
sahf
loopne
mov
and
push
inc
mov
inc
ins
or
adc
inc
scas
aas
add
xchg
fisub
xchg
mov
sahf
cmp
jnp
cmp
retf
popf
xor
xchg
mov
aaa
jae
jno
sqrtps
jb
outs
mov
movlps
(bad)
test
pop
pusha
jg
dec
call
ins
aas
sbb
fidivr
fdiv
fldpi
jecxz
inc
(bad)
movs
enter
aad
add
je
inc
and
cld
push
push
pop
cwde
jmp
jl
pop
shl
jge
mov
cwde
cwde
xor
ins
aam
(bad)
lods
push
aad
not
aaa
dec
push
or
mov
out
test
xor
push
jp
fidivr
and
mov
inc
rol
out
mov
jle
icebp
push
retf
ret
ret
mov
sbb
int
and
jl
aam
lods
add
sub
cmps
imul
jbe
mov
mov
sbb
jo
ret
pop
lock
mov
add
pop
mov
mov
lahf
cmp
in
cmc
dec
test
mov
jle
jp
sub
push
mov
sub
mov
jne
popa
rol
div
pop
add
inc
sub
xchg
inc
lahf
pop
jp
mov
push
call
cmp
ret
fist
jg
mov
outs
loop
neg
jo
je
ja
cld
mov
mov
enter
sub
xchg
imul
int3
or
test
cmp
xchg
inc
mov
jecxz
icebp
pop
inc
aad
ss
add
sbb
xchg
dec
inc
out
idiv
pop
jge
pop
fcomp
add
xor
fdivr
repnz
pop
fcomip
jg
cmp
and
xlat
ins
lahf
dec
mov
mov
and
mov
(bad)
rol
inc
adc
sub
adc
je
je
int3
cmp
mov
mov
adc
inc
loope
cli
adc
or
sub
cwde
sbb
in
mov
jmp
mov
xor
jmp
cld
fs
lods
int
sub
pusha
out
xlat
mov
adc
xchg
fiadd
lahf
scas
cmps
(bad)
inc
pop
out
scas
and
repz
add
jns
js
or
dec
(bad)
hlt
pop
push
jno
add
scas
adc
xchg
cdq
mov
inc
mov
mov
inc
scas
jne
pop
sub
(bad)
mov
bound
push
sti
icebp
inc
push
dec
dec
jl
mov
mov
inc
loop
out
cmp
dec
rcl
or
pushf
scas
inc
xor
dec
adc
sub
or
mov
lock
fisttp
lds
sar
loop
cmp
(bad)
fcomp
pusha
clc
cmp
loop
cmp
push
call
pop
fdivr
pop
dec
push
das
xchg
ret
fist
test
adc
jbe
addr16
test
jno
pop
pop
jle
out
mov
mov
xlat
stc
push
xor
xor
retf
mov
ins
mov
fadd
add
mov
lods
call
push
sub
addr16
jnp
(bad)
cmp
retf
popf
jbe
jmp
or
mov
jg
fistp
outs
mov
hlt
dec
cmp
push
or
call
int
cs
sbb
mov
mov
xor
enter
movs
xchg
push
push
hlt
fwait
ds
cwde
or
mov
ins
dec
out
scas
or
shr
sbb
jp
jp
test
cwde
mov
sbb
in
push
inc
xchg
stc
inc
push
lock
or
inc
(bad)
(bad)
mov
ret
cmps
xchg
cmp
push
push
pop
lock
test
inc
call
mov
adc
bound
imul
in
gs
mov
mov
fs
or
retf
xor
pop
push
test
cwde
test
jb
mov
cmps
lds
add
dec
int
int
push
lods
cmp
into
test
jecxz
dec
(bad)
test
call
sbb
fnstcw
into
fcomp
mov
sub
add
mov
cmp
int
mov
add
lock
cmp
inc
push
mov
sub
(bad)
arpl
inc
sbb
ret
jo
scas
mov
test
ret
or
push
xchg
fs
sbb
aaa
shl
loopne
call
popa
pushf
inc
fstp
aaa
cld
jle
jo
push
or
int
cld
(bad)
and
mov
std
inc
xchg
jne
jl
fs
or
dec
and
add
mov
pop
push
cmp
movs
(bad)
dec
ds
pop
push
(bad)
fistp
aaa
or
adc
xchg
cmps
ins
adc
push
cmps
in
lods
int
loop
bnd
cwde
gs
mov
scas
scas
ja
jg
pushf
test
and
fdiv
scas
out
sbb
pop
adc
cld
adc
leave
xor
mov
in
shl
pop
pop
retf
fwait
(bad)
cmp
mov
icebp
lock
and
outs
mov
out
xchg
cmp
mov
pop
ret
jne
cmps
sahf
movs
sahf
add
loop
mov
jne
je
dec
or
or
mov
sahf
inc
fist
mov
xchg
test
mov
and
adc
cmp
ret
mov
nop
sbb
mov
test
pop
call
mov
std
and
sbb
sbb
rcr
xor
stos
out
and
ins
pusha
sbb
xchg
lods
pop
sbb
pop
cmp
mov
inc
das
dec
inc
(bad)
jmp
adc
mov
mov
jbe
sti
xchg
xor
push
je
xor
ja
leave
jp
xor
cmp
movs
xor
mov
fucompp
mov
dec
adc
cli
sub
sub
push
xor
lods
nop
test
sub
pushf
cmp
(bad)
js
rol
push
in
retf
push
mov
imul
and
imul
inc
ss
pop
movaps
ds
mov
cmp
shl
mov
sti
mov
add
and
(bad)
notrack
sbb
and
dec
cmc
aam
dec
cmp
adc
sbb
test
dec
das
adc
pop
push
shl
cwde
sar
movs
add
inc
mov
sbb
cmp
imul
dec
es
and
mov
jg
push
repz
ins
pop
out
hlt
sub
mov
loop
loopne
cmp
inc
mov
ins
xor
lahf
dec
cmp
imul
cwde
(bad)
jb
mov
push
int3
cli
sub
shl
adc
and
cld
push
out
aaa
sbb
pop
mov
ret
push
(bad)
fdivrp
into
mov
into
stc
ficom
pop
xlat
call
pop
fwait
sub
ins
clc
push
push
and
mov
lea
fcom
fadd
sub
popf
popa
jg
stos
repz
lods
test
fsub
push
arpl
pop
pop
pop
fnsave
sahf
mov
jp
inc
pusha
mov
lods
arpl
and
pop
cdq
retf
outs
inc
cmp
loop
cmp
xlat
xlat
das
push
pop
rcl
or
mov
xchg
sbb
xchg
cld
fidiv
xor
arpl
jns
jo
push
dec
xchg
ficom
lods
push
stos
mov
pop
nop
aaa
ret
js
sar
inc
test
es
mov
ins
popf
inc
cmp
icebp
stos
ficom
js
xlat
and
sbb
or
dec
pop
and
jno
rcr
dec
mov
add
mov
jne
xchg
mov
shl
mov
inc
stos
shl
jns
pop
repnz
test
cmp
mov
xor
push
adc
div
aam
sar
inc
js
mov
retf
fs
pop
jmp
mov
cmp
out
add
cmp
cmp
shr
pop
and
xchg
pop
pop
popa
mov
push
shl
enter
xor
nop
movs
push
and
sub
fdiv
jmp
cmp
jmp
pusha
push
push
call
add
pop
rcl
jmp
sti
pop
out
rcr
sbb
scas
xchg
fist
or
and
inc
ins
sub
je
inc
fs
mov
cmp
sub
mov
popa
retf
adc
js
inc
adc
cmp
xchg
dec
pop
dec
pop
in
dec
and
pop
mul
in
sbb
lds
jae
pop
dec
fisttp
inc
jp
cld
or
mov
popf
or
mov
or
and
jmp
arpl
jmp
push
fxsave
mov
fcom
loope
(bad)
sub
mov
mov
pop
in
dec
(bad)
jnp
addr16
jge
es
inc
pop
in
fisttp
add
xor
pop
xchg
pop
std
inc
sub
mov
jmp
dec
pop
cmp
jns
in
and
popf
(bad)
lods
jmp
jmp
jl
sub
sbb
xchg
shl
js
add
out
inc
push
pop
or
jge
mov
(bad)
ror
test
out
xchg
dec
sbb
jg
arpl
sbb
fadd
lods
out
fcom
push
ds
stos
fmul
pop
fistp
jae
mov
les
push
jbe
add
arpl
(bad)
stc
mov
pop
pop
sbb
outs
add
fst
mov
pop
loop
xor
and
mov
test
sbb
mov
xor
cmp
loope
push
jns
(bad)
pop
sar
inc
movsx
add
cmps
loope
movs
or
and
mov
(bad)
je
xchg
aas
push
(bad)
mov
xor
in
push
(bad)
sti
iret
xlat
push
add
add
jbe
sbb
sub
or
not
(bad)
jl
push
addr16
adc
ins
adc
nop
addr16
(bad)
and
pop
(bad)
adc
ja
std
pop
(bad)
sub
xchg
jp
test
(bad)
jge
push
sbb
jp
cwde
stos
outs
lods
cmp
fldenv
mov
push
sbb
scas
cmp
shl
sub
retf
mov
sbb
pusha
test
test
outs
push
pop
jge
pop
xor
leave
cmp
inc
or
ds
add
dec
aaa
inc
add
enter
jno
jae
xlat
aaa
shl
jecxz
fistp
shr
mov
sbb
stc
arpl
xor
push
fnstsw
popa
xchg
pop
rol
fimul
mov
stos
mov
or
rcr
inc
sbb
gs
sti
hlt
ficomp
idiv
jae
xlat
addr16
(bad)
(bad)
ins
test
ret
(bad)
leave
xor
jnp
mov
out
outs
push
adc
hlt
iret
sbb
pop
clc
lods
or
inc
push
xor
fldcw
shl
push
sub
jnp
or
mov
fwait
cdq
cmps
aas
adc
cmps
push
mov
mov
imul
ss
sub
cmp
retf
push
shl
pushw
popf
or
repz
test
fcomip
inc
mov
pusha
enter
adc
stos
add
stc
ficomp
js
push
and
xlat
push
mov
cmp
push
push
jecxz
sub
push
ss
jmp
bound
call
iret
pop
cmp
lahf
pop
ror
inc
cmp
pop
xor
stc
pop
pop
mov
es
and
aaa
mov
mov
sub
dec
jae
cmps
push
sub
jp
ror
xlat
inc
aas
out
xor
das
sbb
outs
add
js
and
loopne
sbb
jmp
scas
call
sbb
outs
push
rcr
and
xchg
pop
fcomp
test
inc
pop
shr
ret
and
bound
cmps
out
(bad)
jge
out
test
adc
lods
and
out
mov
mov
ret
and
sbb
(bad)
daa
aaa
ins
mov
add
(bad)
jmp
adc
enter
pop
dec
shl
ret
or
xor
int3
cmps
dec
lahf
outs
push
adc
test
mov
pop
jne
ror
setae
rol
push
push
test
icebp
xchg
in
daa
lods
ret
jae
lds
ret
(bad)
mov
cmp
mov
dec
mov
popa
cmps
xor
fcmovnb
and
and
sbb
pushf
(bad)
mov
cmps
xchg
sbb
cwde
adc
mov
sar
in
lods
dec
mov
xor
dec
jmp
push
pop
js
mov
push
and
ss
inc
cmps
not
rol
jmp
mov
aam
mov
cmp
mov
enter
jle
enter
cmps
test
cld
movs
mov
arpl
xchg
cmps
sub
pushf
mov
(bad)
movs
dec
adc
add
ret
or
add
imul
bnd
daa
inc
cld
mov
stc
mov
test
cld
dec
(bad)
lea
xchg
cmp
sbb
inc
cli
dec
cmp
(bad)
retf
sbb
mov
in
mov
es
es
in
adc
or
nop
mov
call
sbb
movs
xor
imul
ss
cmps
dec
add
shr
pusha
lods
push
or
mov
ror
pop
dec
add
ror
xchg
add
push
adc
or
in
cmp
mov
sbb
test
mov
sahf
ja
push
fadd
bound
xchg
sub
add
push
(bad)
push
mov
pop
push
das
fucomip
ret
sub
push
adc
adc
and
daa
mov
js
pop
and
scas
sbb
push
imul
lds
push
lea
xor
in
pop
ins
sbb
push
and
jo
sub
pop
out
mov
and
test
mov
lea
mov
stos
movs
pop
out
test
or
imul
or
mov
ja
lds
adc
or
or
pop
(bad)
pop
fidivr
mul
adc
xchg
in
js
xlat
sbb
dec
(bad)
test
cmps
daa
or
(bad)
mov
xchg
out
fiadd
xor
popa
fs
popfw
jb
sbb
push
cmp
dec
scas
enter
jmp
outs
scas
ret
push
sbb
xor
cdq
das
adc
stc
and
xchg
movs
ficom
shl
arpl
jb
lods
mov
jge
jns
mov
sbb
xchg
cmps
mov
push
lahf
mov
sahf
push
pop
pop
add
mov
mov
sbb
loopne
and
mov
sub
inc
inc
repnz
mov
dec
pop
and
cli
out
push
inc
js
mov
adc
retf
ds
call
out
xchg
popf
pop
adc
inc
add
add
adc
xchg
call
call
sti
rcl
mov
xchg
and
adc
mov
fwait
mov
mov
dec
icebp
pop
sub
sbb
lock
retf
out
inc
fstp
lock
fcom
push
fsub
icebp
push
hlt
nop
and
push
xchg
scas
jg
ret
test
test
pop
mov
sti
lahf
push
scas
mov
cmp
rol
sbb
out
jg
out
add
test
xor
pop
fistp
ja
push
bound
xchg
push
pop
ss
test
mov
rcl
iret
adc
ss
ins
invd
test
lods
xor
pusha
cmp
jnp
aas
xchg
stc
out
xor
cmp
cmp
lea
call
repz
xchg
xor
ja
mov
dec
bound
ss
data16
fld
icebp
cld
jne
cmps
cmp
mul
mov
hlt
shl
adc
in
dec
and
sbb
push
dec
and
push
mov
inc
or
adc
or
in
adc
ret
fsubr
pop
jns
pushf
mov
es
jg
xchg
nop
(bad)
out
adc
cli
addr16
jo
and
(bad)
mov
xchg
dec
lds
or
int
sbb
mov
scas
loop
fimul
ficomp
inc
mov
add
sbb
arpl
les
jnp
or
call
xor
sub
inc
jmp
sar
dec
imul
cmp
mov
bound
icebp
or
leave
push
jp
in
ror
ss
push
cli
adc
or
lahf
inc
adc
ins
adc
call
(bad)
js
inc
not
adc
fs
mov
inc
push
add
retf
fwait
inc
pop
pushf
inc
retf
popa
dec
push
in
pop
jbe
imul
mov
out
push
rol
ins
mov
inc
sti
jnp
jnp
out
push
mov
dec
iret
shl
int
mov
jmp
cmp
int
shl
xchg
dec
cld
and
(bad)
in
scas
stos
call
icebp
pop
add
xchg
bnd
cli
mov
xor
scas
stos
push
jo
add
in
pop
mov
out
or
popf
push
add
jmp
adc
pop
enter
cli
imul
add
and
jp
inc
dec
nop
mov
xchg
mov
out
clc
or
push
icebp
mov
push
scas
popa
xchg
sub
(bad)
addr16
adc
inc
clc
lods
scas
sti
mov
cmp
movs
in
nop
push
fst
fcom
xchg
icebp
and
lea
ror
inc
xchg
mov
xor
stos
jl
jge
or
xor
xchg
mov
jg
inc
leave
outs
cmc
lea
lahf
dec
leave
push
cwde
xchg
pop
dec
test
sub
into
or
imul
jmp
cld
and
stc
jp
fmul
int3
enter
scas
push
fwait
xchg
icebp
in
xchg
jns
rol
push
mov
push
cmps
cmp
jecxz
dec
inc
jl
adc
sar
xor
cmp
fcomp
pop
cmp
push
push
sar
jb
(bad)
add
pop
int3
rcl
pop
push
jns
pop
push
sbb
fwait
sbb
outs
or
cmp
xchg
xor
mov
bnd
lods
or
cmp
adc
push
in
jnp
mov
(bad)
in
out
and
retf
inc
aad
sar
lds
ss
das
xchg
cmp
adc
sar
imul
lahf
mov
push
or
pop
std
push
dec
add
dec
xor
lock
xchg
retf
les
jmp
(bad)
(bad)
adc
push
aam
cmp
rol
xchg
adc
lahf
ins
xchg
dec
sub
std
dec
pop
dec
in
push
into
(bad)
cs
sbb
out
dec
mov
into
mov
dec
xor
dec
mov
ins
pop
mov
imul
in
cmc
sbb
jmp
adc
adc
and
out
inc
push
xor
stos
pop
arpl
scas
push
stos
cmp
cld
(bad)
call
push
adc
pop
inc
(bad)
adc
sub
xor
ret
jae
das
dec
les
push
scas
ror
ds
lock
mov
vpsubsw
pop
xor
push
xor
hlt
and
stos
push
mov
pop
lock
pop
pop
mov
xor
dec
mov
mov
(bad)
inc
cmp
and
fidiv
bnd
out
outs
shl
shr
dec
scas
push
retf
mov
jb
add
sub
outs
cwde
cmps
pop
int3
sbb
push
mov
fs
fst
pop
and
push
(bad)
xor
in
add
das
aam
sub
jle
into
sub
cmp
push
xor
aam
jmp
ror
dec
mov
sub
sub
loop
aaa
adc
add
lods
sbb
aas
and
sbb
(bad)
vmaxps
aad
mov
push
inc
add
(bad)
daa
add
add
jmp
fstp
or
inc
loope
sub
in
(bad)
and
and
pop
mov
mov
jp
in
jae
out
mov
sbb
ins
cmp
mov
xor
pop
jmp
ret
pop
add
push
xchg
loop
popa
adc
sub
sbb
(bad)
imul
movs
call
xchg
pushf
or
test
xor
add
fxch
not
mov
sbb
loop
mov
out
mov
sbb
jne
lea
psubusb
jl
xchg
stos
jno
pop
inc
lea
sub
add
or
push
hlt
mov
aaa
test
jnp
jge
sub
fnstcw
pop
pop
ret
sub
(bad)
xchg
inc
add
fadd
and
popa
add
push
adc
pop
sub
or
sbb
cli
jle
inc
mov
ja
lds
mov
outs
xor
or
cmp
movs
in
fldcw
push
fidivr
loope
jo
arpl
push
iret
repnz
fisttp
test
jmp
je
push
inc
scas
mov
xchg
sbb
pop
xor
ss
pushf
xchg
stc
icebp
sbb
jnp
(bad)
and
ret
mov
shr
cmc
and
cmc
fldenv
movs
cmc
inc
cmp
mov
and
push
sbb
das
std
leave
loopne
int3
and
sub
and
push
std
push
fldl2e
dec
push
shl
jmp
ret
loop
push
jnp
cmps
xchg
loop
std
lods
enter
pop
push
push
xor
retf
adc
mov
xor
loopne
sbb
push
cdq
pop
or
pop
in
sahf
sbb
(bad)
int3
jg
sti
push
jnp
adc
pop
push
imul
in
jbe
adc
rcr
dec
add
sub
xchg
lahf
loop
xchg
ret
scas
sahf
ja
sahf
lods
sbb
inc
dec
mov
sub
cmps
cmp
aam
sbb
pop
stos
bound
xor
lahf
sti
jmp
cld
inc
jb
jmp
int
push
xchg
iret
xor
mov
xor
bound
iret
xor
rol
popf
(bad)
shr
dec
repz
int3
sub
lahf
and
xchg
sbb
fdivr
jae
pop
and
push
js
(bad)
rol
fidivr
mov
jo
and
add
fisubr
mov
cmp
mov
xor
pop
arpl
out
push
test
ins
outs
and
push
fadd
mov
jmp
test
idiv
sub
rol
(bad)
scas
outs
(bad)
push
fnsave
fidiv
daa
out
sbb
sbb
sbb
xchg
jl
dec
and
jo
xchg
or
dec
cmp
daa
sbb
fs
pop
int3
xchg
fsubr
sahf
cwde
inc
fldcw
hlt
test
inc
into
xor
(bad)
cmp
push
lock
int3
stc
sbb
cld
je
rol
rcl
sub
and
and
inc
loopne
cdq
cmp
sbb
mov
mov
idiv
pop
mov
(bad)
ds
imul
scas
lock
lods
jno
and
push
adc
sub
rcl
lods
cmp
sahf
sar
and
ret
add
in
add
jo
stos
cwde
pusha
popf
imul
repnz
imul
mov
sub
xor
adc
pop
inc
jae
push
fdiv
and
cld
jp
jo
fnsave
js
push
pop
mov
jae
sbb
(bad)
or
adc
sub
mov
mov
cmp
cli
das
(bad)
pop
cdq
push
test
push
cmp
retf
ret
mov
iret
sbb
mov
aas
rol
adc
pop
mul
out
jmp
or
mov
mov
test
sbb
call
jbe
(bad)
dec
sub
xlat
ins
sub
in
call
addr16
push
mov
add
xchg
cdq
out
or
push
cli
ja
daa
lods
aam
add
test
lods
jmp
lods
xchg
popa
das
sti
ins
or
jge
(bad)
loop
pop
test
inc
push
push
pop
pop
cmps
adc
mov
jle
pop
push
clc
and
xlat
mov
out
push
xor
xor
pop
ficomp
push
adc
clc
mov
adc
add
ins
cmp
test
sbb
lods
les
imul
or
jecxz
jmp
ret
xchg
loopne
aam
int3
jo
addr16
add
cmps
push
loope
push
push
pop
cld
hlt
dec
inc
mov
cmc
lea
mov
loop
(bad)
xchg
and
js
imul
imul
pop
lock
mov
pop
fldln2
ret
xchg
jl
icebp
jecxz
movs
xchg
adc
xor
js
ret
jecxz
jne
inc
outs
xor
push
pop
ja
sbb
add
mov
div
loopne
mov
out
jp
adc
imul
mov
sti
sbb
jo
in
push
jns
(bad)
outs
popa
or
push
xor
jbe
div
or
dec
fadd
push
jmp
push
popf
pusha
and
add
(bad)
repz
test
daa
add
xlat
repz
popa
xor
mov
or
mov
out
fwait
mov
cdq
mov
pop
shl
cmp
mov
inc
outs
sub
sbb
add
xor
sbb
sbb
mov
std
retf
dec
pop
inc
adc
add
jge
mov
sub
int3
mov
fist
das
push
pop
aam
ret
outs
mov
hlt
neg
xchg
dec
nop
or
dec
xchg
mov
and
xchg
pushf
or
xchg
add
mov
mov
cli
call
out
jae
adc
lods
inc
popf
lock
jl
and
popa
cld
mov
sub
push
cdq
(bad)
xchg
push
and
pop
mov
sbb
dec
(bad)
data16
(bad)
ss
fiadd
push
sahf
adc
scas
cmp
jl
ret
add
test
pop
xchg
mov
retf
ss
jae
sub
dec
fiadd
call
ret
inc
lldt
imul
(bad)
cld
pop
cmp
push
fdivr
mov
aaa
dec
xor
daa
aas
repz
xor
mov
push
ret
data16
pop
fsub
pushf
sub
pop
add
xor
sahf
int
jns
in
add
ffree
mov
add
aam
xchg
imul
sub
out
retf
dec
cdq
inc
pop
push
mov
mov
(bad)
out
jle
out
outs
arpl
popf
dec
scas
jl
cdq
call
stc
cmp
or
or
push
mov
movs
mov
jne
mov
cli
fldenv
fimul
out
sahf
scas
pop
cmp
inc
mov
jp
ins
jge
outs
bound
xchg
les
lahf
das
cmp
xchg
inc
xchg
aaa
aaa
mov
push
test
into
cmp
jg
shr
mov
xlat
js
ss
ds
das
(bad)
popf
sbb
push
out
mov
ror
sbb
jne
cli
sub
push
sub
aas
sbb
mov
sub
pop
sub
cld
mov
pop
jne
jo
mov
adc
aad
lods
and
ja
add
into
outs
sbb
in
xchg
push
fwait
(bad)
pop
fistp
movsx
sbb
clc
retf
dec
ins
jge
mov
xlat
push
shl
jg
sub
(bad)
loope
and
pavgb
or
add
xchg
sbb
cdq
adc
sub
fwait
ja
ins
mov
pop
mov
pushf
in
pop
aad
jns
push
mov
push
inc
retf
stos
out
dec
cs
and
int3
leave
ror
push
fwait
jnp
sub
dec
mov
ret
das
cld
add
rol
sbb
xor
popa
in
dec
lods
xor
loop
adc
push
mov
mov
inc
cmp
outs
loop
repnz
pop
jg
call
cli
jmp
jecxz
fidivr
pop
adc
push
xchg
mul
push
add
std
mov
cmp
aaa
mov
cmp
xchg
add
sar
xchg
pop
xchg
push
test
fsub
mov
fistp
test
jbe
pushf
dec
mov
mov
fcomp
arpl
test
jno
aam
cmc
mov
dec
and
sbb
test
xchg
loope
cli
gs
fimul
inc
sbb
pusha
adc
xor
dec
(bad)
fisub
xor
jnp
repnz
(bad)
sar
mov
gs
shr
sub
adc
xor
movs
iret
pop
mov
mov
xchg
adc
sub
lds
test
inc
aad
mov
sbb
adc
fdiv
sti
sar
xchg
ja
inc
jb
cmp
mov
in
ss
xor
ret
adc
outs
js
lahf
inc
jae
clc
pop
mov
xchg
mov
xchg
xchg
(bad)
dec
lahf
cmp
mov
into
adc
fnstenv
add
scas
sub
addr16
addr16
cdq
daa
xchg
cmp
pop
ret
retf
int3
add
jae
in
mov
lock
fldcw
std
add
pushf
in
ja
bound
ss
jl
jae
push
loope
fnsave
push
test
jecxz
mov
hlt
push
gs
movs
loopne
movs
mov
xchg
shl
mov
out
jp
out
int3
retf
rol
aas
sbb
xor
xlat
mov
rcl
jge
cwde
jae
adc
jmp
inc
jecxz
sub
xor
sar
jo
sbb
pop
and
mov
(bad)
shl
push
sub
movs
ret
mov
sub
cli
dec
inc
test
dec
add
sub
lods
mov
in
leave
lods
cs
shr
(bad)
jmp
jb
sahf
xchg
dec
mov
push
fistp
xchg
outs
int
cmc
into
jmp
stos
int3
call
or
mov
aad
or
outs
jb
ins
(bad)
pop
leave
inc
scas
mov
(bad)
hlt
enter
das
test
cwde
movs
das
inc
jg
add
pusha
xor
fcmovne
and
rcl
jnp
sti
adc
mov
inc
pop
aas
xor
or
xchg
mov
dec
fs
mov
or
les
mov
ins
push
data16
xor
test
fs
or
add
inc
rcl
fmul
in
mov
mov
cwde
in
fistp
or
out
sbb
jno
sbb
jg
scas
or
fisttp
dec
ret
push
inc
movs
mov
and
call
xchg
icebp
pushf
and
in
js
ins
dec
leave
vandps
cmp
fwait
cmp
mov
int
dec
icebp
xchg
jnp
jle
dec
jmp
mov
add
cli
jle
icebp
pusha
loope
inc
xor
enter
popa
sti
dec
pop
std
adc
rcr
jge
arpl
sub
add
clc
(bad)
push
push
xor
push
and
xchg
sbb
ins
or
inc
(bad)
mov
cld
int3
(bad)
call
loopne
in
ins
add
add
inc
and
mov
addr16
dec
fistp
cld
(bad)
cmc
(bad)
pushf
fcom
rcr
push
mov
mov
add
enter
pop
cdq
sahf
or
jle
mov
test
mov
(bad)
push
fcomp
movs
call
mov
adc
jns
mov
cwde
je
mov
jge
mov
xchg
add
aaa
mov
add
dec
cld
cwde
xchg
cmc
xor
xor
jp
push
xor
or
cmp
jl
mov
jmp
mov
cmps
stos
push
jno
nop
add
sbb
scas
pop
push
lock
jns
cwde
cmps
jmp
dec
sub
lods
int3
das
jge
add
pop
xor
nop
imul
fwait
out
stc
int
or
ins
and
mov
jo
ins
mov
pop
push
aam
loope
sbb
jbe
cli
nop
fsubr
sbb
stos
(bad)
jo
imul
pushf
pop
outs
out
popf
and
bound
lds
in
lods
mov
cli
icebp
test
enter
les
retf
fadd
jl
mov
push
jo
int
and
cdq
jo
out
sub
popf
sbb
sbb
daa
cmp
xchg
out
fst
int3
ffree
xchg
or
out
addr16
push
jl
cmp
aad
pop
cmp
jmp
dec
aas
ins
dec
loope
push
adc
add
(bad)
cmp
fidiv
rol
push
adc
ror
sub
(bad)
(bad)
repnz
repz
test
(bad)
cwde
popa
loop
or
aam
pop
sub
cmp
cld
retf
lods
int
jae
sbb
mov
jo
mov
push
cs
repnz
lods
out
xor
pop
pop
cld
push
out
sub
in
sbb
les
mov
int
fcom
aam
aas
lahf
aam
pop
popf
fiadd
mov
mov
adc
scas
jg
inc
jbe
cs
int
mov
dec
jl
outs
xchg
cmp
adc
movs
es
or
call
dec
mov
mov
adc
retf
pushf
aam
adc
pop
push
js
or
sub
adc
addr16
hlt
fsubr
rol
js
sub
push
push
push
pushf
mov
ds
or
or
pop
out
push
and
pop
dec
mov
cmp
mov
mov
mov
mov
loopne
or
aas
jno
stos
push
push
mov
aam
or
sub
xor
out
jle
cmc
cs
xchg
test
add
les
mov
sub
fimul
xor
adc
iret
xor
ss
mov
popa
repnz
jne
test
int3
mov
jo
dec
dec
ins
ret
ret
pop
jnp
mov
(bad)
xchg
jle
push
mov
cld
test
mov
adc
add
cmps
stos
std
push
cmps
sbb
dec
mov
or
xchg
mov
or
jb
jno
arpl
sbb
inc
xlat
push
call
stos
xchg
arpl
ret
mov
(bad)
mov
fstp
sub
jg
adc
sbb
xchg
in
pusha
call
inc
aaa
pop
lods
xchg
sub
rcl
fild
sahf
add
(bad)
stos
ret
and
jb
je
loopne
(bad)
xacquire
stc
jne
idiv
mov
adc
pop
jno
pop
push
jo
xchg
fwait
sub
dec
push
dec
add
rol
dec
les
mov
es
cmp
pop
lods
repnz
loopne
fidivr
add
popa
jl
push
xchg
(bad)
enter
sub
mov
dec
push
cmp
pop
cmp
pop
ins
shr
lahf
int3
xchg
into
inc
inc
mov
push
enter
nop
pop
cmp
xlat
sbb
rcl
bound
ror
and
dec
movs
adc
sbb
push
nop
mov
pop
ret
(bad)
and
mov
pop
xchg
add
sbb
push
hlt
sbb
push
push
jae
(bad)
lods
inc
sbb
inc
stos
xchg
cdq
dec
pushw
pop
lahf
cmp
add
add
mov
jnp
popf
clc
bound
or
or
test
jmp
popf
pop
jne
test
mov
adc
sar
xrelease
rcl
sbb
xchg
xor
push
pop
push
int
fcom
push
clc
dec
stos
aaa
jbe
jae
or
int3
aaa
imul
ja
out
jge
int
inc
ins
push
clc
movs
sbb
cli
adc
sbb
inc
cld
push
pop
scas
sub
mov
shl
lods
pop
or
add
inc
fistp
and
ds
sub
mov
xchg
push
test
xor
xchg
xchg
in
test
sti
neg
mov
cs
mov
ds
jne
ret
loope
iret
ss
push
or
or
jbe
xacquire
fbld
pop
xlat
sub
call
xchg
mov
mov
shr
scas
mov
pop
cwde
inc
aad
int3
mov
shr
dec
mov
pop
pop
addr16
call
or
mov
xor
mov
add
sti
dec
or
xchg
inc
(bad)
repnz
loop
ds
repnz
fnsave
cdq
sub
(bad)
mov
mov
sub
popf
xor
mov
lods
aam
out
sbb
mov
xchg
fcmovnb
adc
movs
mov
mov
xchg
rol
push
sub
push
sub
mov
and
inc
sbb
dec
pop
int
jno
cwde
pusha
pop
push
jle
(bad)
sbb
push
les
shl
jb
push
pop
push
iret
mov
pop
(bad)
sbb
mov
or
xchg
cli
ins
inc
(bad)
retf
(bad)
in
hlt
mov
imul
imul
push
adc
add
cdq
in
mov
xor
ins
or
jno
xchg
movs
jb
cmp
cdq
inc
adc
push
jbe
out
test
mov
inc
xor
sbb
fdiv
es
vpmaxub
inc
xchg
jo
jmp
nop
inc
aad
mov
mov
fild
or
enter
adc
adc
fdivp
mov
dec
cwde
cmp
inc
lock
or
mov
scas
and
(bad)
inc
sub
jl
mov
push
cmp
test
mov
push
aas
cmp
(bad)
add
(bad)
pop
jnp
jmp
mov
push
inc
jle
pop
jns
mov
cli
push
fbstp
ins
dec
xchg
cwde
pop
and
xchg
jne
cmp
sub
mov
adc
icebp
stos
cmps
in
bound
add
push
or
bound
(bad)
in
jg
test
and
mov
fcmovu
pop
(bad)
(bad)
jae
out
(bad)
pop
add
retf
loopne
lahf
adc
(bad)
call
pop
pop
add
in
fild
inc
adc
xchg
jns
(bad)
xchg
out
(bad)
mov
inc
push
xchg
punpckhbw
inc
shl
mov
mov
ficom
mov
mov
inc
fcomp
or
lock
mov
dec
pusha
xchg
push
xor
sbb
cmc
(bad)
jmp
lea
js
lods
ins
shr
aaa
pop
call
jo
inc
cmp
dec
scas
adc
int3
mov
(bad)
jne
xchg
xor
dec
push
jo
inc
jecxz
rcr
or
addr16
lea
fwait
cmp
jbe
mov
adc
inc
jg
sub
adc
js
jns
sbb
inc
test
rcl
add
fldcw
ja
xchg
fstp
or
mov
xor
ins
jo
pop
fwait
xchg
cmp
cli
sbb
xor
sbb
into
arpl
and
xchg
mov
repnz
mov
pop
(bad)
aam
jne
adc
rol
loopne
shl
scas
mov
xor
in
jmp
mov
cmps
mov
pushf
pop
push
mov
push
sub
jle
add
cmp
jnp
xor
dec
inc
std
pop
mov
push
jge
aas
sahf
je
inc
mov
cmc
jmp
push
pop
ror
bound
fst
lods
mov
outs
fdivr
jbe
outs
not
iret
es
sbb
mov
fidivr
cli
jl
xchg
repnz
nop
and
push
call
sbb
sbb
jo
adc
add
adc
dec
scas
mov
out
jae
bound
mov
fsub
xor
out
cmps
inc
adc
inc
outs
les
aam
dec
cmp
and
mov
xchg
pop
ror
in
pop
mov
push
nop
popf
and
in
push
xchg
push
add
mov
sub
xchg
aaa
push
push
xor
inc
cli
out
lahf
pushf
add
out
inc
push
xor
inc
movs
popf
xor
bound
clc
loop
push
in
adc
scas
out
jecxz
adc
xchg
mov
jg
jg
inc
cmp
stos
or
mov
push
dec
inc
adc
mov
pop
mov
test
mov
cli
dec
pop
ins
mov
out
mov
mov
and
cmp
xor
mov
jmp
push
mov
or
fnstcw
ss
mov
xchg
fcmovb
jp
xchg
(bad)
xor
dec
dec
inc
inc
shr
pusha
mov
bswap
mov
pop
out
inc
repnz
xchg
inc
fcom
xchg
xor
test
and
mov
jbe
push
lea
(bad)
movs
pop
and
pop
fsub
ret
mov
(bad)
push
out
outs
out
fnstcw
mov
popa
mov
cmp
pop
outs
ins
cs
add
inc
xor
pop
mov
push
mov
mov
add
pusha
jmp
ds
in
inc
mov
fstp
xor
cs
add
xor
mov
xor
pop
sub
shl
or
js
add
idiv
mov
push
mov
cli
call
jmp
push
rol
fild
mov
cld
call
jnp
cmc
inc
popa
jle
ja
mov
ins
enter
xor
or
rcl
jmp
cwde
jmp
add
movs
clc
fstp
ficomp
cli
push
mov
aaa
(bad)
(bad)
jne
xchg
(bad)
aad
test
iret
adc
rcl
xchg
pop
or
xor
addr16
xor
das
stos
mov
jns
fsubr
mov
push
mov
push
inc
inc
sti
mov
add
push
mov
mov
dec
xor
add
push
movs
into
ret
mov
dec
loop
es
ins
sbb
jmp
es
cmp
fmul
pmullw
repz
or
inc
fldpi
loop
das
dec
and
popf
and
lds
ins
sti
mov
scas
mov
adc
aas
iret
cli
or
ss
adc
mov
out
cwde
sub
loop
xlat
ret
cmps
jge
movs
mov
int3
leave
sti
push
retf
push
jmp
pop
xchg
mov
fbld
in
push
mov
sbb
out
(bad)
mov
out
jmp
mov
lds
mov
sub
pop
cmp
or
add
pusha
leave
xor
aam
mov
push
jno
rcr
sub
ds
pusha
outs
out
lods
call
out
sbb
sub
sahf
pop
add
punpckhbw
and
ja
sub
je
out
or
stc
gs
neg
fcomip
inc
sbb
bound
inc
mov
xchg
mov
or
popf
imul
ret
cmp
test
adc
xchg
lods
xchg
push
mov
mov
dec
ins
mov
lahf
and
jne
hlt
xchg
test
sbb
push
jbe
dec
loopne
adc
mov
out
inc
add
jg
push
out
lods
adc
adc
lahf
and
dec
mov
xor
mov
sbb
xor
lock
sbb
mov
mov
dec
sub
sar
aaa
int
cmps
xor
icebp
mov
push
cmp
fwait
ret
sbb
dec
adc
pop
pop
sub
outs
xchg
cmp
push
sahf
xor
es
hlt
test
sbb
cs
dec
imul
je
sub
jb
cwde
push
xchg
int3
iret
mov
jne
push
loop
inc
out
ret
adc
or
add
call
jp
sub
icebp
sub
daa
call
ins
adc
pushf
aad
jp
add
push
xchg
mulps
xor
inc
cmp
jmp
js
pop
add
xchg
aam
inc
test
sbb
int
mov
jmp
adc
cmp
in
sub
mov
mov
push
push
cmp
mov
dec
test
mov
sar
loopne
adc
cmp
test
loopne
pop
pop
sahf
rcl
aaa
shr
push
jnp
jecxz
dec
dec
(bad)
dec
inc
dec
xor
cmc
mov
mov
movs
dec
push
mov
loopne
test
es
stos
sahf
fsub
xchg
adc
lahf
push
ins
jl
retf
ret
dec
xor
pop
inc
cmp
jns
sar
mov
and
cmp
into
add
repz
sub
push
and
and
add
jecxz
xchg
je
test
jno
in
push
mov
xor
je
mov
rol
and
test
or
lahf
mov
mov
mov
push
and
and
xor
loopne
ja
arpl
jmp
push
lds
icebp
outs
inc
mov
inc
mov
mov
or
pop
test
mov
sbb
pop
dec
sbb
in
ins
mov
xor
ja
push
pshufw
scas
or
inc
xchg
mov
and
push
cmp
xchg
jo
push
jno
add
aam
adc
out
cli
ret
stos
fld
adc
sahf
mov
cdq
add
dec
cld
push
in
bnd
mov
jle
int
test
mov
shl
cmps
std
rcl
jae
jp
ret
js
sbb
out
jmp
xor
ins
jg
mov
cs
cmp
stos
rol
inc
inc
cmp
(bad)
clc
pop
dec
or
cmc
cwde
test
add
test
jne
repz
push
lds
(bad)
addr16
lods
mul
(bad)
mov
push
in
jo
mov
aas
xchg
mov
or
lds
fiadd
and
push
daa
xor
push
pop
mov
sub
das
test
xchg
mov
xchg
jl
adc
sbb
push
and
cwde
loop
push
jle
mov
sub
cs
pop
xor
pop
add
mov
mov
and
fwait
and
or
pusha
mov
rcl
sbb
dec
inc
mov
clc
shr
lods
mov
retf
test
dec
pop
adc
xchg
adc
lahf
sar
sti
imul
mov
aam
ret
push
xchg
ja
loope
mov
sar
(bad)
add
xchg
int3
or
push
movs
adc
pop
jmp
sbb
inc
xor
arpl
inc
call
or
pop
pop
scas
push
pop
out
aad
sbb
bound
repz
sbb
cmp
movs
movs
in
or
test
es
and
and
shl
sbb
and
(bad)
daa
xor
ret
icebp
inc
repnz
frndint
push
call
cmp
jnp
mov
loope
stos
fstp
sbb
mov
xchg
mov
stc
sbb
inc
call
sub
push
sti
add
mov
test
inc
pop
int
sub
mov
mov
sub
add
scas
mov
mov
cld
mov
test
es
cmp
bound
loopne
or
fs
test
add
aam
lahf
sbb
xor
lea
xchg
push
scas
data16
fstp
jl
bound
out
pop
xchg
ja
xchg
hlt
fmul
lds
(bad)
loopne
jecxz
retf
pushf
loopne
push
dec
aaa
jne
int3
adc
xchg
mov
xor
add
mov
int
shl
inc
iret
lock
mov
adc
cmc
iret
sbb
sub
adc
jb
leave
stc
bound
mov
inc
cs
fs
xchg
mov
xor
xchg
test
dec
mov
push
jns
ror
in
sub
pop
jmp
js
loope
push
jne
push
imul
pop
test
push
sbb
inc
push
lods
and
inc
shr
stc
sub
mov
cmp
outs
mov
push
cmp
dec
sti
(bad)
xchg
jne
das
loop
ret
push
dec
(bad)
or
fstp
adc
lds
push
lock
cmp
test
add
hlt
(bad)
pop
sub
dec
inc
test
mov
aas
xchg
pop
cmc
repnz
mov
xor
jmp
test
retf
jmp
adc
and
and
xor
pop
in
iret
(bad)
fstp
(bad)
push
xchg
sbb
mov
out
sbb
xor
pop
mov
int
aam
fcmove
dec
dec
pop
dec
scas
sub
cmps
rcr
(bad)
pop
inc
dec
pop
and
fcmovu
(bad)
ins
push
xchg
sub
aaa
neg
pusha
xchg
mov
dec
jo
inc
popf
lods
(bad)
out
jp
std
inc
dec
stos
loop
je
dec
(bad)
jb
xlat
or
push
dec
adc
imul
outs
sti
sub
out
cmp
or
movs
call
cmc
cdq
cmp
jecxz
xchg
sar
cmp
and
dec
aas
scas
out
xor
push
in
jae
push
sub
cwde
push
push
or
retf
rcr
es
fst
sbb
or
loopne
stc
imul
mov
and
or
(bad)
push
add
and
imul
and
adc
xchg
jb
psubusw
retf
aas
xor
dec
xlat
jbe
xor
fimul
in
mov
leave
xchg
shr
mov
jo
adc
std
aad
push
jg
push
stos
cmp
(bad)
int
xchg
add
jne
xchg
ss
cmovb
icebp
mov
cwde
int
mov
sub
stos
adc
inc
dec
outs
jno
dec
imul
imul
pop
dec
lock
mov
aas
je
mov
in
retf
add
mov
lods
push
jg
jnp
and
scas
(bad)
push
pop
loope
xor
pop
out
push
gs
stc
or
into
ret
xchg
push
jb
push
loope
les
push
out
popf
add
pop
movs
popa
mov
js
adc
sub
sbb
imul
xlat
cmp
lock
mov
push
ja
mov
fs
js
or
cmps
xor
sbb
lods
cli
retf
push
shr
out
in
add
sub
dec
pop
movs
punpckldq
cmp
mov
jae
adc
sahf
repnz
mov
gs
stc
repnz
inc
gs
iret
fimul
add
xchg
add
mov
jmp
mov
sbb
push
xchg
fadd
push
rcr
aam
mov
outs
fsub
mov
mov
xchg
dec
adc
adc
mov
fcomp
ret
jmp
(bad)
pusha
xchg
mov
fcomp
ret
es
pop
push
lock
in
jb
mov
sti
sbb
shr
pop
outs
call
stc
mov
call
and
mov
sub
dec
inc
mov
aad
push
les
push
stos
dec
add
sub
push
and
test
push
mov
(bad)
mov
in
inc
dec
ins
pop
fimul
aaa
push
add
aad
cmp
xchg
pop
ins
sti
gs
push
loope
mov
pop
out
jp
jge
jl
sahf
jmp
adc
push
add
adc
push
scas
and
xor
shl
sub
retf
xchg
add
xchg
mov
dec
leave
mov
sbb
adc
or
cs
leave
mov
mov
xchg
mov
(bad)
bound
push
jb
cdq
clc
mov
aad
ret
sbb
sub
ins
shl
cli
fcom
das
fisttp
call
sub
pop
inc
or
inc
repz
inc
in
stc
xor
xchg
loopne
(bad)
test
stc
cs
shr
push
push
inc
in
push
aam
aas
sbb
adc
int3
inc
pop
xor
pop
js
out
and
pop
call
adc
jne
repz
or
and
test
jae
mov
cmps
pop
push
or
dec
jecxz
leave
fdivr
or
push
mov
out
(bad)
sbb
jl
xchg
mov
cmp
inc
cmps
dec
in
xchg
mov
sti
(bad)
fdiv
stc
pop
push
popf
shl
cmp
aas
push
aad
int3
mov
(bad)
jge
jo
mov
loope
aad
xor
mov
idiv
jecxz
mov
daa
dec
(bad)
lods
xchg
(bad)
mov
std
jecxz
and
sti
aam
stc
sub
adc
inc
cli
inc
mov
ds
push
push
mov
jns
hlt
scas
call
inc
aas
imul
sbb
fsub
push
lea
sar
ins
add
pop
mov
pop
dec
in
repnz
scas
sbb
dec
xchg
les
mov
aas
pop
dec
fs
fcom
xor
out
imul
psubsw
cdq
adc
call
imul
inc
mov
mov
mov
mov
call
pop
jno
push
or
hlt
out
fcomp
or
lods
fdiv
pop
and
(bad)
ror
icebp
test
cld
xchg
daa
(bad)
out
mov
(bad)
aam
mov
rcr
sbb
jb
sub
push
push
pop
inc
enter
std
ja
mov
sti
xor
pusha
or
jp
push
mov
xchg
daa
cmp
xchg
jle
neg
sbb
out
out
dec
icebp
dec
jb
lds
call
shl
sub
sub
bound
iret
outs
mov
outs
xchg
retf
push
adc
xsavec
mov
or
in
dec
pop
inc
and
lahf
and
test
cwde
mov
sar
out
inc
retf
or
cld
je
movs
stos
dec
sti
pop
jns
and
aaa
sub
test
enter
jg
jbe
fisubr
ins
mov
dec
(bad)
inc
jmp
push
cmps
ja
fnstenv
jnp
out
bnd
cs
push
adc
mov
fst
fisttp
inc
dec
out
pushf
mov
jmp
cwde
(bad)
test
cmc
ret
or
or
pop
jecxz
inc
cmp
push
and
sbb
out
mov
loop
dec
int
mov
inc
xor
xor
cmc
sbb
in
call
mov
test
inc
xchg
jo
jne
scas
mov
test
jae
fs
xor
hlt
cld
loop
mov
xor
mov
add
or
std
dec
sub
test
arpl
pop
outs
loop
test
mov
mov
(bad)
enter
adc
and
in
rcl
sub
or
push
int
cmps
push
jnp
retf
mov
adc
mov
xor
push
mov
jmp
cmp
into
sbb
add
xchg
fucom
and
mov
js
loope
ins
xchg
cmc
xor
call
je
xor
lds
and
add
xor
fst
sub
push
clc
push
sbb
and
cmp
(bad)
xor
fidivr
retf
push
and
xchg
movs
int3
pushf
sub
pop
js
push
repz
jbe
or
inc
pushf
mov
push
(bad)
mov
sti
mov
sti
push
and
mov
push
pop
imul
test
mov
inc
lods
jae
jnp
cmp
mov
stos
dec
ins
add
icebp
mov
(bad)
xor
or
mov
iret
popf
xor
stc
loopne
sbb
jo
push
imul
inc
xor
xlat
call
cli
push
push
stos
mov
in
push
hlt
nop
aad
or
and
mov
and
mov
cmp
leave
imul
cdq
sti
out
pop
test
pushf
and
push
sub
inc
fisttp
mov
into
ret
loop
(bad)
jmp
test
ret
out
in
dec
inc
mov
sub
cmps
mov
xchg
das
pop
shl
mov
ja
ds
push
(bad)
xchg
xchg
inc
pop
mov
pop
mov
ror
pop
xchg
lods
into
and
cmps
xchg
repnz
test
repz
jae
pop
sbb
push
mov
inc
adc
adc
mov
cli
or
or
ds
pop
cmp
xchg
fstp
inc
sbb
xchg
add
push
cmp
jne
stos
in
push
and
test
adc
xchg
sti
mov
clc
fadd
mov
pop
js
test
fs
push
into
jae
sbb
mov
pop
push
mov
mov
aad
or
mov
mov
xor
and
lods
xchg
cdq
or
out
movs
jecxz
or
fst
dec
test
or
mov
cmp
dec
(bad)
sub
push
cmc
fimul
movs
jl
pop
xchg
shl
mov
loopne
mov
or
lock
xchg
push
test
adc
push
(bad)
std
outs
xchg
dec
mov
dec
inc
lock
or
int3
jo
sbb
jge
push
shr
(bad)
fimul
adc
sbb
mov
xchg
and
fild
push
sahf
outs
add
rcl
mov
jbe
mov
inc
xchg
jnp
inc
and
and
test
test
sub
inc
mov
push
mov
shl
mov
cmp
shl
cmp
out
ins
inc
icebp
loopne
(bad)
push
cmp
out
movs
jae
cmp
dec
cli
jnp
push
and
rcr
iret
jecxz
inc
arpl
mov
retf
mov
sti
jns
xchg
and
sbb
cmps
sbb
in
sbb
stos
jge
lds
shr
rol
(bad)
mul
jg
cli
adc
popa
sub
in
lahf
jae
push
pushf
lods
and
mov
pop
arpl
movs
mov
adc
push
out
aad
and
push
(bad)
in
jae
outs
retf
push
push
mov
xchg
push
sbb
test
xor
xchg
gs
jmp
sub
jnp
push
xor
add
sub
xchg
(bad)
mov
sbb
mov
lea
pop
pushf
ins
js
mov
sar
xchg
pop
jne
or
xor
cs
shl
clc
iret
and
aaa
imul
dec
ds
sub
mov
movs
vpcomuw
ins
lds
aad
enter
(bad)
int3
shr
jbe
fst
xchg
cmp
or
movs
mov
rcl
je
xor
cld
loopne
(bad)
cli
sbb
dec
iret
test
test
add
push
inc
rol
std
pop
sbb
add
inc
push
xlat
push
push
out
mov
nop
aad
mov
ds
test
xchg
xor
xor
movhps
add
push
stc
imul
rol
cmps
sub
cmps
in
xor
jo
dec
pusha
or
lods
xchg
cmp
stos
xchg
xor
fstp
push
int
pusha
(bad)
xor
push
dec
aam
mov
stos
push
repz
adc
xchg
fild
nop
fistp
push
push
das
xchg
enter
aad
lods
pusha
and
ficom
xor
cmc
inc
ror
add
aas
retf
dec
mov
xor
dec
(bad)
cmp
lock
sahf
mov
wrmsr
out
out
ja
and
mov
sub
add
mov
sbb
sbb
adc
leave
or
xor
ss
hlt
mov
push
adc
jge
pop
pop
test
inc
xchg
dec
inc
xor
sub
and
das
repz
arpl
or
jmp
bound
lock
mov
xchg
jecxz
imul
pusha
or
or
out
inc
call
(bad)
mov
ins
mov
jmp
inc
pop
pop
test
pop
fcmovne
cdq
loop
sbb
cmp
fcom
push
ret
fisubr
adc
out
retf
jmp
sbb
pop
shr
push
shl
sub
jp
adc
fdivr
sbb
sub
repz
cmp
iret
nop
mov
pop
or
xor
push
mov
xor
mov
jl
pop
add
cmp
pop
ffree
fistp
leave
jns
ja
jmp
sbb
jge
loop
and
daa
cmc
mov
je
leave
dec
jmp
jb
and
js
pop
call
mov
popa
adc
ror
loope
xor
add
and
inc
ins
test
mov
pop
push
daa
and
scas
dec
sbb
and
xor
adc
cmp
sbb
push
into
retf
or
sbb
and
mov
cmp
jl
and
mov
mov
data16
inc
mov
retf
mov
mov
or
sbb
shr
adc
inc
xor
pusha
xchg
add
ds
jb
or
dec
outs
stos
(bad)
dec
mov
(bad)
dec
das
sbb
addr16
jnp
and
mov
mov
lds
lea
into
push
stos
jo
adc
or
pop
mov
jno
ret
popa
loope
cmps
adc
mov
mov
or
fld
imul
daa
or
mov
push
sar
xor
or
or
cs
imul
mov
push
(bad)
cmp
cld
aad
and
lock
into
in
into
mov
mov
pop
push
retf
mov
cmp
ins
div
shl
in
out
movs
iret
add
sub
clc
push
pop
por
sbb
aad
fistp
fcomp
mov
push
ja
and
call
shl
push
sbb
daa
xchg
rcr
out
or
adc
adc
inc
add
jo
into
push
cs
mov
in
(bad)
push
test
inc
xor
hlt
push
xchg
sahf
mov
xor
add
mov
add
gs
add
or
jbe
arpl
jb
aam
mov
add
mov
pop
ret
adc
dec
adc
mul
dec
xor
jns
dec
cmp
or
inc
mov
inc
(bad)
push
jg
mov
div
leave
dec
scas
clc
xor
fwait
out
inc
das
cwde
popa
test
rol
pushf
add
xchg
cmp
movs
pop
leave
mov
inc
push
test
pop
pop
fwait
push
imul
jne
jbe
mov
sbb
mov
pop
iret
sbb
fisttp
fist
dec
sbb
daa
xor
sbb
inc
movs
bnd
mov
mov
sbb
push
pop
adc
js
cmp
inc
xor
enter
pusha
lods
inc
and
and
sahf
jp
movs
xchg
in
je
sub
stos
jle
adc
jnp
in
pusha
cmp
js
xchg
loope
sbb
inc
mov
push
aaa
div
test
jge
and
push
add
dec
mov
pop
add
mov
repnz
cmps
cmp
bnd
ret
push
jmp
and
mov
sar
enter
xchg
xchg
into
dec
xor
mov
enter
adc
sahf
nop
mov
stos
(bad)
add
adc
adc
fs
aas
or
scas
(bad)
adc
sbb
pop
retf
push
mov
dec
nop
cmp
mov
sti
outs
lods
mov
gs
retf
daa
leave
adc
cmc
xor
sub
dec
stos
mul
cmc
cmp
iret
sar
test
dec
fcom
cmp
and
loopne
cmc
shl
in
pushf
in
nop
mov
jb
pop
and
cmc
xchg
into
stos
push
push
inc
xchg
inc
mov
in
cld
repz
cwde
push
(bad)
cdq
mov
jo
mov
jnp
inc
mov
neg
es
cmp
bswap
in
das
int
out
or
and
sahf
mov
fld1
push
or
leave
rcl
cwde
mov
and
or
sub
sar
mov
repnz
cwde
call
aaa
sbb
sub
xchg
jmp
gs
jecxz
push
out
pushf
jge
inc
dec
jmp
pop
jmp
(bad)
mul
jmp
cmp
mov
adc
not
(bad)
jmp
or
pop
into
adc
dec
movq
inc
int
mov
push
dec
or
xchg
sub
and
movs
lods
inc
fist
dec
das
pop
dec
and
xor
jl
push
shl
les
paddw
fwait
pop
or
popa
cmps
mov
scas
aaa
pop
out
dec
outs
out
push
sub
and
mov
cmp
sbb
mul
imul
fist
lea
ja
fnsave
pusha
je
adc
test
mov
sbb
ins
rcr
mov
popf
lods
cwde
push
ret
(bad)
mov
xor
in
jle
cmp
ret
adc
cmp
and
dec
jp
pop
std
pop
mov
xchg
test
fcmovnu
test
test
popa
jle
xor
out
cmp
enter
add
pusha
mov
std
add
jmp
jbe
test
mov
ret
jne
jb
mov
je
clc
cmp
scas
lods
jg
je
retf
fidiv
adc
add
jae
inc
in
popf
outs
xchg
aam
inc
(bad)
jne
inc
test
fcomp
mov
sub
push
sub
bound
out
in
mov
cmp
sbb
not
dec
call
mov
mov
cmp
mov
(bad)
movs
jb
movs
ins
cmp
jp
cmc
xor
test
pop
fwait
or
cmp
cli
lahf
popa
mov
rol
dec
lahf
push
inc
mov
inc
push
clc
(bad)
cmps
add
repnz
jno
push
das
fdivr
arpl
pop
dec
xor
or
ds
or
adc
dec
sbb
pop
mov
jno
push
js
sbb
or
in
cmp
or
pop
pop
outs
dec
or
and
das
add
aam
mov
mov
xchg
or
daa
or
xchg
add
lea
pop
xchg
je
add
and
sbb
push
aad
mov
ins
mov
addr16
out
or
dec
dec
sar
xor
xchg
lock
pop
cmp
pop
xchg
test
ins
scas
sbb
das
retf
sar
dec
scas
push
ja
jmp
add
dec
xchg
js
stos
in
(bad)
or
push
mov
pop
in
mov
rcl
sub
xor
adc
push
inc
lahf
iret
adc
dec
(bad)
cmp
mov
mov
adc
js
(bad)
cmc
pushf
loopne
fwait
or
leave
popa
test
lahf
xchg
enter
pushf
pop
in
mov
cmps
sbb
shl
sbb
test
in
cmp
mov
inc
fwait
mov
and
popf
jmp
mov
sub
out
cdq
jae
sub
adc
pop
jns
pop
xor
and
mov
xchg
ror
cs
cmp
dec
dec
cmp
lahf
test
stc
xor
in
mov
jmp
shl
cdq
sub
out
nop
loopne
out
xchg
or
nop
sbb
dec
or
and
adc
dec
sbb
fcmovbe
in
popa
gs
mov
push
retf
or
inc
mov
xchg
or
and
adc
pop
and
xchg
pop
dec
clc
movs
push
scas
lock
bound
sbb
mov
mov
pop
(bad)
xlat
outs
arpl
pop
popa
push
add
mov
jecxz
mov
sar
xor
mov
fild
loop
mov
js
xchg
sub
adc
pop
loope
dec
lods
and
fild
sbb
adc
adc
out
sbb
mov
ror
mov
sar
retf
cs
adc
lahf
fld
jmp
cmp
jmp
cmps
js
push
repz
xor
sub
shr
mov
mov
dec
mov
in
xor
jle
cmc
add
frstor
lods
cld
add
xchg
lods
mov
cmps
mov
sbb
jbe
push
in
lds
mov
jns
aad
ror
mov
xchg
into
sub
push
fnstcw
pop
fdiv
sti
dec
and
pushf
cmc
retf
sub
sub
test
add
test
jnp
and
lods
jecxz
sub
push
dec
sar
adc
cmc
fs
clc
lahf
inc
add
and
mov
sbb
sbb
jb
or
jge
xor
mov
in
pop
mov
sbb
test
in
cld
call
dec
push
sbb
push
int3
pop
push
adc
pop
sbb
cmps
inc
int3
(bad)
mov
and
push
test
inc
jmp
pop
rol
and
and
out
ins
fs
test
(bad)
inc
div
movs
mov
mov
adc
sahf
(bad)
not
loop
hlt
and
pop
mov
xor
(bad)
or
pushf
imul
jnp
fsubr
push
and
mov
push
bswap
xor
nop
inc
cmp
jno
call
hlt
repz
pop
out
xchg
xchg
div
cmp
inc
cmc
sbb
jg
cmc
ror
(bad)
adc
cdq
add
jmp
test
rcl
ins
mov
fsub
cdq
iret
gs
lock
ds
aad
les
add
in
sbb
sbb
jge
xchg
inc
shr
mov
jp
mov
push
ins
movs
test
(bad)
cld
jmp
call
aam
push
inc
adc
and
fldenv
repnz
test
sbb
lds
icebp
push
jg
adc
or
dec
cmp
or
popa
rcl
ret
dec
fsub
dec
mov
or
push
leave
and
adc
shl
sub
sahf
call
xlat
das
mov
ret
dec
test
rcl
aam
push
test
clc
mov
mov
sbb
aad
xchg
movs
rcr
test
popa
fild
ss
cmps
push
pop
data16
mov
int
jno
xor
jmp
or
push
mov
mov
push
cmps
sub
and
mov
or
jg
pop
inc
mov
sahf
loope
mov
movs
ja
mov
sbb
out
cld
xchg
jecxz
cmp
loopne
std
movs
adc
or
fimul
outs
iret
mov
dec
dec
je
pop
pop
push
outs
xchg
xchg
loop
sbb
out
or
ss
imul
mov
push
call
pop
mov
(bad)
fidivr
lea
push
lods
xor
dec
jp
pop
adc
and
sub
ret
in
cli
iret
mov
dec
xchg
cmp
out
or
fcmovnbe
lock
mov
fsub
jae
test
and
movs
jmp
(bad)
jecxz
sub
ins
scas
enter
push
jno
dec
ror
in
or
add
cmp
fsubr
jmp
mov
cmc
cmp
(bad)
imul
cdq
push
sbb
xchg
rol
leave
aam
hlt
add
or
or
xchg
mov
push
push
leave
call
dec
jne
sub
dec
push
jle
shl
movs
xchg
add
jnp
aaa
dec
in
stc
outs
out
inc
lock
test
add
jg
rcl
add
xor
jbe
adc
mov
add
dec
inc
loop
ret
stc
popf
push
into
add
and
push
out
push
(bad)
ja
ins
movs
mov
and
cmp
xlat
in
test
xor
mov
dec
fs
maxps
fadd
or
jb
stos
jo
mov
enter
cwde
mov
stos
mov
jno
and
cmps
fist
adc
or
cld
pop
adc
aad
ins
or
cmp
cmp
adc
pop
imul
cmp
test
mov
jnp
mov
sbb
xor
mov
(bad)
shl
add
sub
cdq
inc
js
pop
xchg
cs
pop
les
gs
mov
es
sub
and
retf
test
sub
push
inc
std
out
dec
retf
imul
pop
xor
jne
pop
and
or
test
test
movs
or
push
pop
(bad)
cmp
scas
push
clc
pop
sub
mov
cmp
adc
inc
int3
xchg
dec
popf
mov
xchg
hlt
inc
out
cmc
mov
dec
leave
push
mov
xor
pop
or
(bad)
shl
xlat
push
xor
ins
ret
cmp
push
or
sub
fwait
jns
sub
loope
call
fdivr
gs
rcl
mov
sbb
xor
inc
jns
sbb
test
or
sub
dec
scas
cmps
cs
sub
popa
out
cmp
mov
push
xor
sbb
shl
stc
icebp
push
or
popf
enter
lods
(bad)
es
mov
pop
sub
setae
test
sub
test
imul
(bad)
adc
int3
xor
pop
call
ret
pushf
cmc
and
repz
push
fwait
push
out
pop
ins
and
or
or
in
xor
movs
cmp
cmc
cld
mov
cwde
adc
shl
aad
push
xchg
inc
xchg
add
repnz
scas
or
fadd
sub
push
jecxz
lods
ss
(bad)
xchg
les
push
inc
popa
lods
mov
pop
vmread
in
cwde
mov
inc
retf
inc
inc
pop
enter
mov
cli
cmp
xchg
mov
fld
sti
aam
sbb
sbb
or
lea
into
jmp
mov
(bad)
out
jnp
push
push
out
push
push
inc
rcl
and
cs
push
push
sub
cmp
scas
lods
fld
shl
cld
sbb
jns
jecxz
es
pop
xor
sbb
shl
pop
lahf
or
cmp
sbb
xor
cdq
rcr
xor
sbb
xor
dec
push
push
repz
inc
push
dec
cmps
xchg
sbb
sub
sub
mov
test
dec
pop
push
pop
ins
or
repz
pop
mov
pushf
rcr
add
stc
sbb
jmp
pop
rcr
stos
cs
or
inc
inc
push
bound
add
addr16
mov
out
jo
push
in
iret
(bad)
jl
in
push
sbb
aam
inc
and
retf
stc
inc
mov
mov
or
mov
dec
adc
inc
test
add
adc
xor
xchg
push
arpl
nop
xor
mov
xchg
cli
xor
lea
inc
and
pop
mov
int3
aad
and
pop
cmp
sbb
add
pushf
pop
repz
(bad)
inc
fist
mov
jo
dec
aaa
mov
fs
mov
pop
xor
mov
movs
mov
out
sub
(bad)
mov
and
mov
sub
or
dec
lock
repz
(bad)
and
test
(bad)
mov
(bad)
mov
or
xor
movs
xor
xchg
nop
jns
loop
test
mov
add
scas
(bad)
aam
mov
jns
mul
aad
(bad)
ret
mov
mov
popa
test
mov
(bad)
retf
pop
fcomp
movs
xchg
out
push
jp
mov
aaa
and
(bad)
cmps
lods
iret
mov
cmp
jmp
and
xor
push
loop
in
daa
stos
xor
jp
sbb
shl
pop
addr16
xor
add
cmp
ss
aad
pop
jmp
mov
addr16
in
fwait
retf
cmp
jecxz
in
or
xor
mov
hlt
jl
or
lods
sbb
or
inc
cs
int
sar
dec
out
ret
jmp
sbb
xor
push
fcmovnu
mov
sbb
lds
je
das
test
inc
lea
mov
cmp
push
rcr
fadd
ins
push
pop
fwait
out
iret
and
ss
xchg
in
sub
and
inc
cdq
mov
sbb
jle
adc
in
or
(bad)
mov
iret
mov
je
mov
mov
push
cmp
jecxz
rcr
or
pushf
fmul
test
mov
(bad)
jb
push
lds
jl
mov
out
test
lock
xchg
shl
jne
mov
leave
dec
(bad)
ss
scas
mov
ss
pop
dec
sub
cwde
jns
inc
cs
in
out
aaa
xchg
dec
popa
shl
pop
add
cmps
aad
jl
xor
sahf
jbe
std
out
out
jmp
pop
cdq
xchg
push
sbb
ins
xchg
xchg
or
scas
inc
dec
call
cmp
loopne
sub
sub
adc
mov
pop
push
xchg
stc
inc
or
jns
in
or
(bad)
sbb
xor
pusha
dec
pop
mov
cmc
mov
sar
inc
push
or
inc
ret
push
sbb
inc
mov
cli
test
(bad)
xchg
and
push
fwait
test
xor
ds
adc
mov
mov
aam
push
aaa
cwde
jl
test
daa
mov
jno
pop
jne
fnsave
dec
stos
movs
in
push
test
pop
or
jmp
mul
cmps
aaa
aam
sub
push
out
fcomp
bound
test
pop
int
leave
ret
inc
lock
arpl
inc
dec
fiadd
mov
mov
not
ins
fdiv
scas
jb
and
fldenv
outs
add
mov
push
cmc
stc
cmp
push
inc
mov
(bad)
popa
nop
fadd
lahf
mov
adc
shl
jnp
and
fadd
push
lods
popa
push
dec
lea
call
pop
aad
jbe
ins
push
sti
retf
jae
lods
xchg
push
dec
push
pop
in
mov
pop
test
xchg
xor
out
aas
inc
bnd
popf
pop
xor
and
(bad)
mov
cmp
pop
fiadd
sbb
shr
pop
mov
mov
inc
push
lock
addr16
and
(bad)
int
retf
adc
int3
jg
cmp
adc
lds
cli
pop
pop
adc
test
inc
(bad)
inc
jns
aam
push
jno
cmp
scas
das
push
jo
dec
icebp
push
clc
mov
and
leave
aaa
ss
popa
push
loope
(bad)
fdivr
dec
or
shl
push
jecxz
ret
and
inc
jl
or
arpl
ja
jmp
pop
add
(bad)
daa
xor
daa
jo
pop
in
add
ret
push
cmp
mov
dec
and
pusha
cmp
push
stos
jecxz
aam
mov
je
inc
jmp
fs
push
xor
dec
adc
and
call
test
(bad)
sti
movs
dec
xor
mov
inc
push
scas
mov
gs
lods
jae
mov
or
xchg
inc
and
fwait
les
cmp
pop
mov
fstp
and
push
pop
mov
ss
xor
mov
mov
sti
xlat
imul
inc
adc
dec
mov
not
lods
mov
cwde
clc
fisttp
addr16
mov
aaa
mov
out
cmc
jno
add
xchg
add
mov
movs
cwde
cmp
aas
push
pushf
iret
xchg
or
sbb
iret
pop
aaa
pop
outs
jle
or
mov
sub
mov
stos
xchg
or
mov
cmp
nop
jmp
dec
pop
and
jle
sbb
aad
adc
pusha
sub
xor
mov
or
push
jnp
pusha
shl
scas
and
inc
ret
sbb
retf
jmp
adc
inc
xchg
mov
inc
mov
xchg
lea
inc
dec
xchg
stos
cli
outs
push
push
push
stc
loopne
fisttp
and
pop
repnz
sbb
imul
jnp
jl
pop
xor
in
cs
(bad)
fstp
cmps
cmp
fneni(8087
fisttp
pop
xor
push
and
(bad)
mov
cmp
in
mov
shl
pop
mov
and
mov
ret
adc
sbb
push
es
fwait
mov
test
inc
sahf
adc
outs
dec
dec
xchg
dec
push
pop
out
lahf
repnz
sub
mov
mov
cmc
(bad)
xor
in
movs
movs
aaa
push
retf
(bad)
clc
ret
fnstsw
push
fst
test
cld
inc
fisubr
aam
lahf
(bad)
dec
mov
aad
dec
push
sbb
mov
xchg
test
adc
stos
sub
push
fwait
xor
xchg
addr16
idiv
mov
dec
mov
push
ds
or
arpl
dec
fldcw
std
sbb
xchg
xor
xchg
cmps
cmp
and
push
push
push
ret
add
scas
or
or
jnp
dec
cmp
xor
add
add
cmps
push
mov
pop
int
adc
sti
xchg
push
xor
or
add
add
out
or
js
sbb
lahf
adc
test
and
pushf
fwait
jmp
adc
idiv
imul
repz
jecxz
(bad)
idiv
push
int3
fwait
clc
mov
pushf
inc
and
xor
aad
mov
fldcw
push
sbb
enter
mov
cmp
pusha
and
es
rol
pop
(bad)
jnp
ja
pop
imul
js
test
(bad)
test
jp
push
cmp
mov
pop
mov
cs
nop
stos
jecxz
cmp
add
dec
inc
jnp
pop
push
je
ror
mov
arpl
push
outs
mov
ficom
mov
(bad)
and
push
add
test
dec
sar
ja
and
xchg
mov
(bad)
scas
mov
ins
aad
cmp
inc
retf
popf
cdq
pop
mov
cld
cmp
push
sub
pop
bound
and
call
mov
retf
fst
popa
push
outs
and
sub
(bad)
ss
test
mov
adc
fnstenv
clc
mov
inc
adc
mov
(bad)
bound
call
and
into
pushf
mov
nop
out
inc
jns
lods
pop
xor
push
dec
dec
test
aad
dec
xor
and
sbb
xor
inc
xor
hlt
mov
xchg
movs
pop
rcr
bound
aas
sub
pop
mov
call
mov
arpl
add
mov
sub
mov
cmp
lea
out
arpl
cmp
push
push
mov
(bad)
imul
pushf
dec
jo
and
inc
sti
pop
jns
jo
jp
pop
xor
pop
sti
ficomp
add
jmp
shl
fnstcw
xchg
and
push
mov
test
xchg
push
jnp
mov
cmp
xor
test
loop
inc
push
ss
jmp
or
xor
out
mov
movs
aas
cmps
cmp
mov
jecxz
or
movs
sub
xchg
adc
sbb
inc
daa
outs
sub
addr16
aad
fadd
and
hlt
mov
loopne
pop
movs
ja
and
xor
jnp
imul
cmp
xchg
test
stos
push
(bad)
movs
pop
aaa
push
mov
lds
mov
int
daa
add
js
sbb
(bad)
scas
pop
cmp
imul
adc
inc
outs
cmp
sub
or
sbb
es
mov
pusha
pop
jl
push
enter
aam
bswap
imul
add
or
fbld
(bad)
lock
shl
xor
and
not
mov
cmps
mov
dec
stos
mov
int3
in
mov
sbb
dec
popf
or
arpl
test
out
test
push
cmp
push
aad
mov
xchg
ss
cmp
mov
adc
cmc
xchg
mov
int3
adc
xchg
ror
call
jle
js
inc
and
shr
mov
push
(bad)
mov
loope
cmp
movs
xor
aad
call
cmp
adc
push
mov
data16
push
(bad)
jmp
(bad)
int
cwde
push
push
repnz
cwde
stos
push
dec
push
xor
pop
and
aaa
xor
or
bsr
cs
iret
mov
mov
adc
in
pop
sbb
cmp
shl
and
out
stos
push
pusha
push
ss
or
jp
push
stc
jne
fucomp
xchg
push
jecxz
fmul
mov
jle
or
stos
mov
cli
ror
xor
or
sbb
mov
pop
sbb
cli
pop
cli
dec
push
shl
in
pop
sbb
mov
mov
sub
(bad)
adc
sbb
cs
fstp
cmp
mov
jnp
std
retf
(bad)
pop
mov
mov
lea
punpcklwd
bound
xchg
repnz
cmps
inc
lods
clc
cmp
jmp
inc
add
sub
mov
adc
fidiv
pop
dec
shl
ror
xlat
jg
out
push
int
(bad)
outs
push
jmp
pop
xor
sbb
cli
dec
add
lahf
jg
inc
clc
iret
inc
cmc
sub
idiv
sub
push
cmps
dec
mov
fnstenv
ds
xchg
dec
mov
test
icebp
repz
nop
jge
inc
cmps
jle
mov
ja
adc
(bad)
jns
aas
xchg
ret
xacquire
mov
lods
or
dec
arpl
out
pop
mov
dec
test
jns
out
(bad)
cli
cmp
sti
shr
adc
cmp
or
bound
mov
xor
stos
ins
aas
inc
mov
xchg
pop
in
outs
dec
inc
rol
rcl
push
pop
cld
jmp
popa
sbb
dec
loop
dec
neg
fsubr
and
stos
inc
shl
mov
pop
xchg
cmp
xchg
dec
imul
test
inc
popf
aas
nop
cmp
xchg
(bad)
shr
mov
or
add
add
cmp
adc
loop
movs
cmps
and
iret
xchg
(bad)
mov
mov
and
ja
sub
mov
push
add
mov
inc
(bad)
and
or
xchg
dec
adc
(bad)
(bad)
jo
or
lds
jle
add
or
shl
cmp
popf
nop
mov
adc
imul
sub
sbb
inc
fiadd
mov
mov
out
les
cli
pop
icebp
dec
aas
adc
sub
add
test
je
or
cmp
sub
mov
or
sbb
aam
cmp
pop
loopne
and
cmp
sti
pop
inc
pop
loop
xor
jo
into
add
inc
dec
(bad)
inc
cli
cmp
ss
add
adc
imul
dec
push
mov
and
pop
es
popa
push
mov
das
pop
sahf
jp
hlt
imul
pop
xchg
hlt
push
dec
dec
and
jecxz
xor
cmp
xchg
xor
div
inc
test
fild
adc
sub
jg
xchg
mov
xchg
push
test
mov
xor
hlt
mov
mov
xor
es
mov
test
mov
mov
mov
loope
mov
test
dec
mov
mov
std
pop
push
ja
js
pop
dec
ja
outs
dec
ror
(bad)
aas
aaa
pop
adc
xor
popf
(bad)
xchg
mov
retf
retf
cwde
leave
mov
or
jbe
dec
jns
cli
ja
inc
popf
sbb
adc
dec
into
fwait
xor
and
jnp
fwait
cmp
adc
ret
mov
cwde
xor
dec
sub
mov
mov
sub
arpl
push
ins
and
and
pop
or
xor
lea
mov
xor
dec
jne
sbb
adc
outs
stos
hlt
mov
mov
sub
add
push
cmp
or
dec
push
sub
sbb
xchg
es
cmps
jns
test
sti
xchg
dec
push
cmp
(bad)
(bad)
out
lahf
cmp
in
mov
push
imul
push
addr16
mov
(bad)
mov
test
cs
mov
mov
das
(bad)
retf
es
add
sbb
sbb
mov
fs
cli
cmps
mov
fsub
adc
mov
sub
ret
mov
into
push
call
scas
jl
pop
ficom
and
push
or
imul
cld
nop
mov
rcl
inc
ins
es
mov
mov
fnstcw
sbb
cmp
aam
gs
cmps
imul
mov
pop
mov
jle
mov
dec
das
test
mov
loope
push
or
mov
adc
add
repz
jl
mov
stc
sar
mov
movs
pop
int
xchg
cmp
pop
adc
inc
iret
movs
add
(bad)
lock
xor
xor
add
fst
jo
rol
test
xchg
rol
es
imul
ret
dec
and
or
shr
not
sub
shl
xlat
fcmovb
shl
out
clc
ffree
pushf
shr
ins
retf
cmps
jne
nop
adc
mov
fwait
mov
adc
or
mov
es
xor
repnz
fdiv
or
mov
int3
inc
idiv
and
xor
jmp
sub
cld
fidiv
mov
call
mov
imul
mov
adc
push
movs
scas
fbstp
inc
add
mov
and
stos
lods
gs
(bad)
mov
fwait
mov
stos
pop
pop
xchg
mov
ficomp
cmp
pop
cmp
mov
add
clc
xchg
lock
sub
pop
jge
lock
pop
jp
int
mov
cmp
out
nop
sub
psrad
xor
pop
xchg
pop
sahf
xor
repz
ret
xchg
sbb
inc
inc
and
push
mov
(bad)
loopne
(bad)
push
jg
sahf
jae
mov
add
movs
mov
not
adc
mov
dec
arpl
movs
dec
inc
jmp
dec
ins
aas
stos
push
push
mov
dec
mov
and
enter
xchg
mov
jmp
popa
inc
shl
aam
jb
mov
es
div
fimul
mov
sqrtps
cmc
push
sti
or
imul
rcr
test
(bad)
ret
xlat
lahf
cs
out
test
xchg
(bad)
loopne
jne
mov
call
ja
xlat
clc
repnz
push
movs
jnp
cmp
mov
dec
and
adc
mov
scas
mov
loope
sbb
xchg
ret
mov
fstp
es
stos
fdivr
mov
test
jne
fsubr
mov
das
lods
std
fs
mov
lahf
out
sbb
jecxz
test
das
(bad)
inc
mov
pop
and
xor
(bad)
out
jae
sub
retf
cmp
enter
imul
lods
xor
out
mov
xchg
mov
in
icebp
xor
and
(bad)
retf
mov
pop
aaa
mov
aam
push
xchg
or
into
lahf
repz
lds
js
and
shr
clc
aad
adc
pop
lea
enter
adc
cmps
pop
xchg
shl
xor
loope
or
lds
ret
cmp
lock
sub
outs
jae
inc
(bad)
mov
inc
shl
sbb
adc
movs
arpl
adc
jo
xor
stc
out
jge
fldl2e
sbb
pop
xor
fst
add
push
sub
add
sbb
cdq
fucomp
xor
pop
cli
call
jle
arpl
fisttp
jnp
push
leave
mov
icebp
jge
sbb
aaa
and
aad
add
in
enter
cs
retf
sub
aas
stos
shl
cli
mov
out
adc
mov
pop
push
push
xor
dec
arpl
or
gs
jg
and
movs
mov
mov
adc
mov
(bad)
xchg
fstp
idiv
inc
adc
ret
mov
imul
mov
das
sbb
push
mov
ret
jae
mov
xor
stos
cmps
jbe
cmc
or
sbb
jb
xor
cmps
push
xchg
pop
jb
cld
mov
mov
mov
scas
cli
dec
cmp
mov
xor
xchg
movzx
aam
mov
cmp
pop
mov
mov
cld
cmp
dec
jg
mov
daa
rcr
jge
test
pop
shl
mov
arpl
inc
mov
cmp
ror
lea
pusha
pop
jbe
test
inc
cmps
inc
scas
push
and
aaa
ins
repnz
push
sbb
addr16
faddp
adc
adc
sub
pop
xor
daa
add
adc
xchg
jo
add
pop
cmp
pop
mov
inc
adc
mov
cmp
arpl
push
cmp
jmp
sub
cmp
clc
lahf
dec
pop
scas
jl
jbe
xchg
test
mov
and
push
fwait
sbb
int3
lods
sti
jcxz
mov
repz
sahf
test
mov
push
call
loopne
sbb
aam
cmps
cdq
and
les
mov
or
push
shl
push
ficomp
(bad)
cmp
dec
mov
cmp
ja
push
je
lahf
imul
shr
mov
sub
into
test
in
add
fprem
jo
pop
clc
gs
pop
scas
jo
bndstx
fucomp
mov
gs
jp
fs
jecxz
mov
repnz
mov
cmp
cmp
test
pop
int
sub
mov
mov
cwde
clc
call
cmc
out
push
sbb
fbstp
stos
dec
mov
ins
call
or
push
cs
cmp
dec
js
js
inc
arpl
sbb
fcomp
jne
adc
sub
push
(bad)
retf
mov
cmp
dec
loope
jae
push
out
icebp
xchg
retf
push
lea
pop
and
in
pop
ret
int3
loop
xchg
mov
and
cld
mov
in
or
dec
das
xchg
cmps
jo
pop
xchg
add
cmps
(bad)
inc
fnsave
lods
scas
xor
test
adc
xor
lds
sbb
xor
mov
sub
mov
aas
pop
pop
pusha
retf
push
mov
or
repz
mov
adc
mov
mov
sbb
mov
(bad)
mov
add
aad
pop
xchg
xor
stc
push
jmp
hlt
jbe
cmc
or
or
inc
aas
movs
scas
(bad)
aad
xor
adc
sub
xchg
xchg
test
leave
adc
add
ret
icebp
gs
lahf
mov
xor
push
outs
pop
push
in
jp
pop
movs
cmp
push
stos
xor
push
xor
cdq
lahf
lahf
cmp
sub
movs
fstp
cwde
jno
add
outs
rcl
lods
jecxz
or
jmp
out
push
shl
mov
gs
jb
push
int
inc
xor
pop
xor
mov
scas
stos
pop
mov
jecxz
sub
mov
xchg
jg
sub
xor
xor
dec
xchg
push
push
push
jp
cmp
test
(bad)
mov
push
xor
cmp
push
test
inc
mov
cmp
outs
mov
dec
lea
sub
cmp
ret
lods
inc
mov
ret
adc
xor
pusha
cmps
mov
fwait
mov
lods
push
int3
jno
lahf
xor
mov
mov
dec
jmp
mov
xlat
out
dec
iret
daa
(bad)
mov
mov
mov
loope
sub
std
xchg
neg
cmp
xchg
pop
call
je
mov
lds
dec
adc
and
mov
add
or
pop
adc
in
js
mov
push
repnz
gs
mov
fwait
sbb
fstp
jb
jo
inc
push
sub
push
stos
cli
(bad)
out
bound
out
and
cs
shl
fadd
ror
cmps
lds
ret
shl
xor
add
xchg
mov
clc
in
sub
sub
std
mov
inc
js
jo
add
mov
int3
iret
sub
jo
adc
or
mov
xchg
pop
fucomip
aad
cmp
xor
stos
xchg
repz
loop
xor
push
ror
push
movs
(bad)
push
mov
xchg
xchg
data16
ins
or
push
pop
inc
push
mov
cmp
jmp
mov
pop
sbb
cdq
or
retf
sbb
clc
pusha
mov
popf
aam
cmps
aas
retf
test
rcr
or
and
loopne
sbb
out
xlat
jne
movs
mov
mov
fsubr
sbb
mov
les
je
adc
daa
cdq
pop
jbe
cmps
fucomi
call
add
dec
fld
int
cmp
call
mov
lea
cmp
and
xchg
push
xchg
xchg
retf
pop
lea
dec
xlat
push
and
test
es
gs
jl
call
pop
pop
push
push
mov
adc
sbb
pop
adc
sbb
cmp
hlt
jge
(bad)
clc
clc
stos
jg
adc
clc
dec
adc
pop
xor
retf
loope
(bad)
dec
inc
dec
ins
js
push
adc
(bad)
jmp
je
sbb
jb
stos
(bad)
sub
scas
test
lds
fsub
dec
jno
jo
ffree
ja
sar
ds
gs
das
mov
adc
xor
outs
test
aas
jne
push
mov
mov
pop
sub
sub
cdq
sti
inc
jb
in
pop
pop
mov
push
fisubr
pop
add
mov
add
sbb
xor
retf
or
xchg
sub
clc
mov
retf
punpckhwd
or
mov
shl
js
adc
and
push
not
mov
mov
pop
adc
pop
daa
push
push
retf
iret
clc
lods
nop
mov
lock
jno
icebp
nop
mov
and
push
fiadd
pusha
xchg
gs
ins
fistp
cmp
xor
xor
mov
dec
mov
add
fistp
push
or
pop
mov
shr
rcr
add
mov
lahf
ss
jl
xchg
or
xlat
cmp
or
out
mov
mov
add
lahf
pop
sub
push
rcr
inc
push
pop
inc
dec
or
pop
xor
jl
retf
pop
nop
fsub
dec
cmps
mov
lods
jl
pop
mov
jmp
mov
fwait
lods
push
bound
sub
add
(bad)
nop
jo
test
imul
repz
adc
jle
retf
jecxz
retf
and
loop
je
sbb
inc
and
pop
ins
pop
cmc
push
out
and
cdq
rol
inc
dec
sbb
dec
arpl
adc
jle
adc
retf
mov
mov
mov
mov
adc
pop
gs
fadd
stc
pop
cmp
movs
cwde
imul
and
ja
fwait
cwde
jae
popf
xor
dec
inc
gs
(bad)
(bad)
fcom
mov
sti
cmp
bnd
jmp
std
push
in
push
ins
cs
in
xchg
stos
jmp
xchg
mov
inc
cwde
add
(bad)
jge
dec
xor
and
(bad)
mov
mov
lods
adc
cwde
cmp
jns
mov
fs
adc
repz
mov
movs
rol
mov
jnp
jnp
repnz
test
mov
xchg
popf
ins
cmp
fs
mov
fsub
shl
fldz
xchg
ss
mov
ins
inc
pusha
mov
pop
fcom
inc
xchg
cmc
inc
out
mov
movs
dec
inc
adc
movs
fisttp
movs
mov
call
(bad)
sub
mov
outs
enter
xlat
mov
fbstp
movs
stos
(bad)
mov
fiadd
stos
xchg
clc
(bad)
dec
and
fld
mov
clc
sub
fdivr
xchg
mov
stos
mov
int3
hlt
outs
cmp
add
cmps
aas
xchg
mov
in
sub
fst
xor
mov
movs
jo
call
xchg
xchg
add
inc
cli
push
addr16
cdq
inc
ret
or
sbb
stos
xchg
mov
cdq
dec
sub
jmp
cli
daa
test
xchg
xchg
rol
fnop
jae
mov
pop
mov
sub
mov
push
sti
dec
jp
mov
jae
jge
mov
xor
mov
in
or
test
popa
mov
cmp
aad
in
cmps
stos
outs
lds
rol
stos
sbb
pop
rol
scas
adc
push
fxch
jp
mov
in
jb
stc
cld
or
fadd
or
aaa
das
mov
div
out
push
mov
(bad)
fdivr
cwde
xchg
mov
popf
into
xchg
retf
mov
jecxz
dec
ds
pop
fst
inc
and
cmp
and
mov
out
mov
and
add
lods
jnp
clc
retf
cmp
es
xchg
mov
dec
adc
popf
retf
sub
test
dec
and
int
in
and
in
xor
test
daa
loopne
int
adc
in
gs
scas
xchg
xor
inc
sbb
cmps
and
imul
pop
sbb
inc
xchg
and
push
or
add
add
call
adc
push
mov
les
call
lods
pop
mov
retf
ret
inc
popf
and
fucomip
jmp
add
cmps
pop
mov
cmps
in
and
add
out
mov
pusha
daa
mov
jecxz
sbb
push
rcl
nop
loopne
scas
dec
out
sub
sub
popa
sub
ds
sbb
dec
mov
into
push
ficom
retf
jne
ja
sbb
rep
xchg
jmp
cmp
xor
mov
jo
add
leave
cld
test
mov
lahf
ds
(bad)
in
adc
popf
ror
ins
add
push
fdiv
sbb
push
xlat
sbb
pop
push
idiv
stos
jnp
add
sub
jmp
(bad)
(bad)
mov
ror
jmp
add
or
js
test
test
in
sub
xchg
test
sar
inc
jnp
mov
dec
mov
cdq
mov
xchg
push
sbb
or
stc
dec
jge
push
or
push
bound
js
retf
test
in
adc
retf
mov
test
mov
and
xchg
inc
addr16
adc
cld
jns
and
hlt
repnz
or
pop
int
shl
pshufw
jo
aaa
bound
in
add
lahf
cmp
cs
jo
fisub
mov
shl
add
dec
add
jmp
fadd
mul
not
push
mov
mov
gs
pop
adc
xchg
cmc
int3
xor
imul
dec
pop
mov
fs
test
test
(bad)
adc
dec
push
out
call
mov
loop
push
mov
xchg
mov
mulps
mov
fimul
sub
ins
xor
cmp
popf
in
push
pop
mov
imul
out
fcom
fcom
fst
add
sti
loopne
cdq
mov
cli
cmp
cdq
aam
dec
loop
mov
mov
xchg
mov
pop
out
jnp
inc
aad
xchg
sbb
movs
pop
xor
popf
push
sahf
push
movs
push
ds
or
test
jge
fdiv
mov
adc
or
cld
cmp
or
(bad)
xchg
fdivr
(bad)
push
shl
jle
stos
xor
mov
pushf
pop
pushf
jl
xor
push
ja
call
int3
push
cli
jbe
jp
adc
fmul
pop
shl
inc
push
mov
lods
xchg
add
or
sti
xor
adc
mov
jmp
std
pop
nop
xchg
pop
cdq
cdq
outs
cmc
stc
leave
shr
ror
int
data16
jne
push
cmp
pop
(bad)
adc
push
scas
mov
push
inc
jne
fcom
(bad)
sbb
icebp
dec
adc
int3
jno
lea
daa
dec
push
cli
stos
xchg
mov
in
cwde
xor
jne
sbb
rcl
mov
in
mov
loop
adc
shr
mov
add
jb
dec
adc
imul
rcr
or
jge
pop
fbstp
inc
xor
js
mov
xchg
loop
jo
or
mov
jnp
add
leave
jge
out
in
cmp
jne
add
push
jne
cmc
ja
daa
nop
int3
out
mov
or
mov
jmp
inc
adc
out
xchg
jo
cmps
xchg
enter
sub
jae
ins
xor
xchg
popf
pop
(bad)
mov
and
jg
inc
pop
test
pop
inc
push
or
add
ins
jae
sbb
mov
mov
lock
stos
je
mov
(bad)
mov
fwait
movs
int3
sbb
sbb
jmp
adc
or
js
xchg
stos
scas
dec
xchg
adc
xor
push
jge
dec
mov
adc
mov
ds
xor
stc
xchg
sub
inc
icebp
je
lods
mov
ss
push
sub
movs
in
fucomi
jecxz
push
mov
arpl
lea
neg
mov
lds
add
inc
loope
xchg
dec
push
lods
loop
daa
rcr
cmp
cdq
push
fisub
(bad)
pop
fnstsw
mov
pop
sub
sub
div
outs
mov
loopne
jp
pop
in
repz
(bad)
aad
dec
push
or
lds
sub
xor
pop
repnz
jb
ror
(bad)
repnz
stc
cmp
loope
xchg
sbb
jmp
std
cmp
daa
mov
sub
and
xor
ret
push
and
enter
mov
mov
inc
test
sub
mov
xchg
dec
dec
bound
aam
mov
ins
mov
stc
ss
pop
jl
mov
xor
mov
call
outs
sbb
aam
(bad)
sbb
je
cmp
xchg
sti
and
pop
nop
arpl
add
adc
xchg
(bad)
jp
rol
addr16
inc
fdivr
mov
retf
in
mov
xchg
lods
lahf
xchg
jo
das
ja
adc
jo
jge
aam
add
jmp
jge
loop
js
sbb
pop
out
add
sub
fwait
loope
mov
add
(bad)
fmul
jne
push
mov
inc
imul
repz
je
dec
xchg
loopne
adc
xchg
out
push
(bad)
push
and
cs
shl
lods
ja
out
in
push
inc
out
push
dec
cli
ins
jge
jg
pop
jae
cmp
push
(bad)
adc
neg
xchg
push
inc
mov
mov
adc
pop
out
out
out
ins
mov
aam
push
cmp
xor
addr16
mov
push
xchg
inc
sti
xchg
dec
and
outs
into
stos
stos
stos
mov
not
jecxz
xchg
(bad)
jnp
fs
push
loope
xor
lds
ret
or
push
push
rcl
cmp
push
sub
sbb
ss
inc
xchg
cmp
cmp
add
mov
rcl
out
stc
aaa
inc
es
or
bound
jne
std
mov
xor
jbe
mov
nop
(bad)
push
aas
mov
add
push
add
fwait
jp
cmp
stc
int3
mov
es
push
les
lods
push
xor
xchg
jns
mov
(bad)
rcr
mov
mov
enter
jbe
imul
movs
iret
dec
adc
daa
cdq
or
sbb
ret
adc
inc
pop
into
xchg
xor
mov
push
in
cmc
bound
stos
or
aam
and
out
ds
leave
mov
jno
repz
sub
mov
mov
xchg
pop
xchg
jp
in
shl
movs
and
and
loope
in
pop
cmp
fwait
or
ja
push
out
clc
sbb
js
leave
cwde
rol
sub
push
xchg
adc
fist
adc
dec
dec
xchg
mov
loope
vmovlps
pop
fisttp
or
mov
sub
push
jnp
loopne
sti
push
sbb
pop
sti
mov
sub
scas
ja
or
mov
lock
pop
or
mov
(bad)
mov
sbb
imul
xchg
in
cmp
ins
cmps
xor
sti
sbb
cmps
popf
push
sbb
mov
adc
ins
or
daa
rcl
sbb
fidivr
dec
push
xor
ret
or
fsubr
call
adc
clc
fld1
dec
retf
pop
lahf
arpl
outs
mov
jae
pop
jecxz
add
shl
arpl
(bad)
cld
je
adc
stos
in
int
test
jns
loope
icebp
fsub
mov
leave
out
movs
sbb
ret
enter
cmps
daa
(bad)
rol
ret
adc
jns
add
bound
dec
bound
std
mov
adc
cld
mov
int
jle
idiv
dec
jle
pop
push
addr16
push
adc
xchg
ins
mov
or
test
sub
sti
add
ins
(bad)
or
sbb
cmp
mov
(bad)
out
sbb
xchg
ficom
fidivr
jnp
fwait
sub
push
mov
dec
cmps
shr
mov
mov
mov
mov
jo
cmp
lods
mov
gs
mov
push
inc
arpl
pop
fwait
jecxz
test
sub
imul
scas
retf
inc
xchg
mov
inc
bound
das
push
jo
jle
or
push
and
mov
cli
sub
mov
jae
inc
imul
pop
repnz
ucomiss
pop
pop
mov
sar
fcmovb
out
or
inc
pop
outs
rol
inc
sbb
inc
(bad)
in
inc
sub
xor
inc
fidiv
(bad)
loopne
inc
cmc
mov
cld
pop
mov
ins
push
test
lock
jo
loop
jmp
nop
pop
sbb
push
push
adc
cmp
or
ja
mov
std
mov
adc
(bad)
ds
inc
inc
cdq
mov
cmps
data16
pop
sub
xchg
mov
dec
pushf
jg
mov
dec
pop
jl
pmulhuw
mov
mov
popa
frstor
pop
call
imul
push
addr16
jg
call
and
gs
xchg
mov
dec
lahf
es
sti
sahf
mov
scas
loopne
(bad)
rol
in
pop
cmp
add
fldz
or
shl
call
dec
pop
test
dec
jp
inc
adc
aas
pop
or
cli
and
or
and
mov
in
dec
adc
push
add
in
das
adc
call
push
dec
loop
std
dec
push
pop
imul
jnp
sbb
test
pop
sti
push
mov
gs
div
xor
mov
pop
push
or
xchg
or
xchg
sbb
popa
in
in
lods
cmp
inc
mov
cmp
or
retf
cli
icebp
cmp
push
lods
aaa
bswap
lds
sub
ret
cdq
xor
mov
movs
jb
pop
sub
test
adc
dec
mov
mov
mov
push
loopne
sbb
test
enter
fisttp
fwait
pop
dec
add
add
cwde
inc
sbb
out
sahf
(bad)
mov
pop
add
pushf
sahf
pop
stos
mov
addr16
xchg
add
mov
cmp
(bad)
mov
cmp
les
mov
(bad)
mov
add
mov
pop
shl
add
hlt
nop
cmp
inc
loop
xor
outs
mul
dec
push
movs
mov
imul
ret
jb
sti
or
lock
mov
movs
test
test
adc
mov
adc
cmp
jns
jnp
inc
xor
xor
ror
xchg
jmp
ret
into
pop
mov
addr16
daa
fbld
sbb
test
ret
sbb
mov
xor
loope
cmc
dec
div
shr
dec
sbb
mov
dec
adc
push
lods
xchg
adc
sub
pusha
(bad)
(bad)
inc
adc
xor
or
pop
popf
test
stc
lds
xchg
imul
xor
xchg
inc
sti
lods
adc
nop
push
test
packssdw
adc
cmp
push
jmp
iret
cmp
fcom
add
mov
and
enter
das
popa
shr
pop
adc
fwait
test
pop
aas
or
push
cmp
daa
pop
xchg
std
mov
or
pop
dec
sbb
add
jle
push
movs
fcmovnb
xchg
mov
leave
imul
jge
jno
mov
xchg
pusha
jp
es
js
cwde
in
neg
adc
mov
xchg
jmp
shl
out
add
mov
xor
ds
inc
mov
hlt
(bad)
inc
xor
mov
fcomp
pop
inc
in
loop
fild
cwde
imul
popa
fldcw
and
retf
jp
mov
js
stos
loopne
in
addr16
arpl
leave
sbb
cmp
rol
pop
cmp
jo
mov
pusha
and
ds
or
hlt
cs
test
jae
gs
popf
dec
pop
popa
sub
addr16
or
pop
add
xchg
je
(bad)
bound
xor
popa
xor
dec
cmp
mov
call
shl
mov
xlat
scas
loop
nop
pop
out
rol
mov
daa
fnsave
mov
enter
push
pop
imul
xor
mov
xchg
out
int3
(bad)
cmp
stos
rcl
out
ret
rcl
and
push
pop
ja
mov
and
pusha
mov
out
mov
mov
and
or
dec
rcl
aad
addr16
mov
jne
cdq
sbb
scas
push
loop
es
and
add
das
dec
cdq
movs
mov
add
mov
inc
mov
dec
call
jp
xchg
repnz
mov
fucomi
adc
lods
ja
mov
push
cmp
lahf
cmp
jg
push
mov
fld
mov
dec
cmp
ja
pop
add
mov
(bad)
cs
jae
(bad)
cs
mov
pop
xchg
fmulp
push
retf
inc
jb
xchg
cmps
adc
fst
pop
fcmovnb
pop
xchg
pop
mov
out
xchg
shr
mov
sar
ins
pop
movs
cmp
cmps
inc
clc
push
push
movs
inc
aaa
xor
daa
rcr
repnz
cmps
mov
into
ror
sahf
ret
mov
outs
and
arpl
push
adc
pop
jg
(bad)
cld
std
xor
(bad)
repz
pop
jns
add
lahf
psubb
ret
test
mov
aad
lods
(bad)
jle
mov
sub
sbb
jg
mul
stos
test
or
inc
in
(bad)
fistp
repz
lods
lock
(bad)
sbb
scas
(bad)
repnz
in
or
or
cdq
ins
fld
movs
mov
adc
(bad)
mov
jnp
inc
nop
ja
cmp
push
out
xchg
not
mov
jbe
adc
push
pop
and
mov
xchg
ins
fidiv
xor
gs
pop
cli
cmp
mov
int
adc
cmp
or
ins
add
test
sub
cmp
sbb
mov
mov
jmp
fmul
pop
add
xchg
cmps
scas
scas
push
movs
out
movs
aad
adc
mov
sub
(bad)
(bad)
out
popa
shl
out
mov
mov
or
idiv
inc
cmp
xchg
movs
jo
(bad)
int3
mov
and
cmp
mov
jnp
add
inc
sub
jmp
cmp
aad
push
enter
nop
jnp
dec
jo
inc
fldcw
into
in
add
jns
hlt
cmp
(bad)
sub
fstp
dec
pop
cs
add
rcl
mov
pop
mov
cmp
or
xor
sub
sbb
test
rcl
cmc
adc
push
shl
and
ror
aam
hlt
pop
scas
jp
aam
cmps
das
ss
ret
or
sar
outs
mov
or
xchg
push
stos
cli
and
jmp
mov
cwde
ficomp
repz
xchg
xor
aaa
inc
sbb
dec
icebp
xchg
sub
je
add
shr
add
push
xor
loop
cmp
mov
pop
push
ror
dec
and
cmp
(bad)
je
xor
(bad)
js
out
mov
cmp
add
inc
jmp
dec
xor
(bad)
out
cmps
(bad)
daa
(bad)
pop
lahf
fsubr
iret
nop
sub
imul
add
(bad)
xchg
(bad)
or
popf
cmps
daa
add
sbb
jo
in
sbb
jp
mov
inc
mov
ret
xchg
loop
mov
mov
mov
outs
gs
mov
in
in
data16
lods
push
mov
xchg
adc
sub
aad
fild
daa
mov
(bad)
mov
push
(bad)
adc
(bad)
popf
hlt
mov
add
mov
daa
jno
icebp
jne
mov
movs
push
lds
dec
(bad)
popa
add
sub
repnz
jne
jnp
adc
movs
imul
cli
xor
xchg
or
pop
jbe
sbb
cld
nop
ins
adc
cli
js
imul
or
push
test
jne
fcom
push
stos
push
pop
push
inc
or
in
mov
test
inc
test
jmp
imul
test
ins
popa
sub
or
repz
sbb
jbe
cwde
inc
mov
inc
fs
popf
and
jmp
rol
mov
psraw
sub
inc
movs
sbb
rcr
mov
mov
push
mov
jbe
pushf
and
pop
test
sar
movs
cwde
mov
test
mov
je
mov
or
stos
sub
inc
stc
cld
adc
aad
xchg
xchg
push
push
and
or
retf
push
xchg
into
push
neg
cdq
mov
sub
xor
nop
outs
in
cmp
loope
mov
stos
jmp
js
outs
aaa
dec
dec
mov
mov
push
add
enter
das
and
(bad)
fsubr
and
pop
and
rol
popf
xor
es
mov
xlat
test
dec
lock
and
mov
sub
sbb
call
add
pop
repnz
icebp
ds
and
fwait
pop
fsubr
std
and
mov
or
mov
xchg
xor
push
(bad)
rcr
add
stc
pusha
sub
push
lahf
dec
daa
rol
bound
jae
dec
pop
jnp
sub
ins
movs
enter
jb
cmc
xor
pop
cld
jle
sbb
loope
push
push
pop
dec
xor
(bad)
sub
sub
ja
in
xchg
ret
push
adc
jl
or
hlt
lea
push
cmp
xor
adc
add
or
mov
sbb
push
cs
call
or
or
pop
hlt
inc
mov
jmp
xlat
enter
jmp
jg
mov
adc
in
xor
pop
mov
jmp
dec
or
jo
xchg
jle
pop
push
ror
mov
mov
fadd
fimul
hlt
sbb
cmp
pop
jp
(bad)
mov
pop
jl
push
in
cmp
(bad)
mov
outs
adc
clc
jns
add
lods
sub
fwait
rcl
js
nop
shl
dec
ins
fiadd
jnp
int3
mov
sbb
mov
push
push
jbe
mov
aas
xchg
cmps
fdivrp
jnp
bound
sbb
or
pop
xchg
hlt
into
inc
sbb
mov
loop
dec
and
cli
ss
loopne
push
(bad)
dec
add
stos
dec
adc
popa
or
mov
xchg
dec
xchg
mov
pop
add
daa
addr16
stc
xor
mov
lds
ffreep
adc
sbb
pop
pop
test
repz
pop
jo
bnd
into
mov
stos
sbb
outs
test
scas
mov
lock
mov
jb
out
xchg
in
test
push
mov
inc
inc
push
pop
add
add
cmp
jae
jge
push
mov
and
and
and
pop
addr16
cmp
movs
daa
arpl
sub
mov
fisttp
push
out
data16
adc
addr16
cmp
sub
adc
stc
pop
pop
inc
pop
sbb
sub
pusha
das
push
repz
inc
inc
sub
push
call
adc
les
shl
iret
sahf
fsub
adc
jge
xor
pop
scas
pop
repz
shl
mov
xor
mov
add
loop
cmp
(bad)
scas
pusha
out
adc
cmp
jb
and
mov
jmp
loopne
sub
xchg
out
movs
imul
push
xor
es
sub
dec
cmc
pop
cmp
sahf
lsl
push
cmp
jg
jmp
inc
fiadd
pop
mov
retf
sbb
pop
div
xor
jle
add
cmp
dec
jns
mov
mov
cli
jae
cmp
std
pop
sub
mov
push
outs
xor
popf
ins
inc
jmp
xor
sar
dec
mov
ins
inc
div
psraw
xchg
jge
adc
sbb
(bad)
jge
imul
jbe
mov
inc
dec
jecxz
movs
cli
int
push
sbb
push
in
jl
push
iret
leavew
jbe
scas
sub
cmps
cmps
ins
push
push
cmps
popf
or
mov
add
ds
jbe
mov
jno
lahf
in
fwait
loop
add
loop
mov
pop
int
jbe
fstp
push
mov
stos
mov
pop
mov
fiadd
int3
jbe
xchg
sub
pop
add
das
test
aas
stc
sbb
mov
pushf
shl
lahf
jg
pop
scas
sbb
jp
aam
lods
inc
jb
retf
add
adc
addr16
push
sbb
adc
push
push
lods
lahf
mov
inc
or
bnd
(bad)
cwde
and
mov
cld
push
add
xor
cmc
push
mov
loop
or
retf
rol
mov
dec
outs
pop
in
dec
je
in
stc
aad
push
nop
frstor
outs
sbb
clc
shl
inc
mov
imul
xor
mov
push
lahf
mov
push
mov
and
xor
outs
aam
pop
mov
inc
iret
jno
dec
fs
push
ficom
dec
aas
mov
out
and
daa
(bad)
les
ss
push
dec
ins
xor
jmp
data16
jno
test
add
adc
adc
jge
mov
sbb
or
push
push
mov
out
dec
retf
shr
cmp
lods
or
inc
push
jge
test
cmp
inc
inc
push
(bad)
mov
pop
hlt
sub
fidiv
aaa
xor
xlat
sbb
call
(bad)
jmp
aad
jge
adc
fadd
retf
add
(bad)
mov
dec
and
imul
out
stos
push
outs
outs
fmul
loope
pop
sahf
nop
jge
addr16
pop
shr
scas
stc
ja
scas
pop
adc
and
or
pusha
mov
adc
mov
mov
mov
(bad)
xor
mov
outs
sbb
push
dec
loop
mov
rcr
cmps
ins
fisttp
sub
loopne
ja
mov
into
xor
ds
sbb
push
stc
push
and
jp
dec
xor
xchg
mov
dec
xchg
(bad)
out
sub
mov
sbb
pop
(bad)
pushf
int3
push
cmp
retf
mov
jecxz
add
push
(bad)
pop
mov
stos
scas
(bad)
push
lods
cmp
movs
test
and
pop
(bad)
fcom
inc
retf
clc
push
pushf
jg
mov
adc
jns
in
(bad)
cmps
out
int
xor
aad
fstp
mov
jmp
xchg
sbb
test
jnp
(bad)
sbb
mov
dec
mov
mov
mov
dec
jb
jae
xor
ins
cli
inc
and
addr16
cmps
jp
mov
test
ins
stos
call
hlt
(bad)
stc
push
sub
jnp
xchg
jae
cmps
mov
push
add
cmps
dec
dec
mov
sbb
pusha
jmp
pusha
adc
lds
inc
je
stos
cmp
jecxz
jmp
(bad)
push
adc
xor
cld
test
arpl
cmps
cdq
stc
into
pop
or
test
jmp
cdq
add
pusha
push
retf
inc
loop
mov
sub
lahf
inc
iret
sbb
loope
xor
lea
add
stos
pushf
push
(bad)
jmp
data16
aad
out
ins
stos
pop
mov
pusha
jmp
mov
dec
cmc
(bad)
jae
retf
mov
into
bound
sub
sub
(bad)
sub
jge
clc
add
lods
ss
inc
push
inc
push
pusha
sub
or
jne
in
cmp
adc
pop
or
int3
repz
rol
out
(bad)
rep
or
scas
jbe
xchg
jmp
into
xor
cmp
sub
mov
mov
cmp
das
fnsave
mov
lds
cdq
xchg
ror
mov
pop
cmp
loope
pop
js
(bad)
lea
cmps
pushf
shl
mov
sti
int3
xchg
(bad)
pop
add
pushf
push
adc
imul
leave
jo
pop
pop
lahf
xor
jmp
sbb
cmp
add
hlt
xor
movd
xchg
das
mov
shl
inc
adc
push
dec
jle
fcmovnbe
jmp
daa
aaa
sbb
data16
inc
mov
xchg
adc
push
outs
lds
xlat
cdq
rcl
cmp
xchg
sar
mov
cmp
dec
and
and
pushf
arpl
es
mov
in
mov
mov
rcl
adc
(bad)
mov
sub
jle
les
mov
mov
retf
loop
push
mov
mul
sbb
fcomp
adc
inc
je
jg
push
fldenv
mov
pop
jnp
in
in
mov
jno
jns
xchg
and
out
cmps
xchg
in
out
call
ss
fidivr
pop
jno
aad
cli
jnp
(bad)
je
loopne
cld
adc
jo
aaa
fmul
dec
xchg
sub
in
fisubr
call
dec
or
xor
test
rcr
hlt
shl
inc
rol
and
mov
push
(bad)
and
adc
push
inc
shr
data16
out
cmc
mov
into
je
lea
push
out
add
add
out
popf
cmps
cmc
sbb
mov
(bad)
rcl
icebp
js
cli
cmp
and
mov
mov
push
popf
push
add
ins
or
sub
daa
fnstcw
cmc
and
add
xchg
cmp
in
iret
cmps
add
pop
test
inc
inc
mov
sbb
loop
cmp
sahf
sub
jmp
popw
hlt
lods
cs
js
sub
sub
mov
add
lds
push
cmp
inc
es
push
pop
ja
sub
ret
sbb
aas
or
loope
add
sub
je
cmps
sti
mov
pop
xchg
xchg
mov
aam
xor
dec
mov
mov
hlt
fcomp
hlt
popa
dec
hlt
icebp
push
jno
push
jle
xor
cmp
loop
(bad)
bound
xlat
cmps
push
jl
push
das
adc
push
cmp
loop
and
dec
jnp
dec
lods
fwait
mov
jae
xor
pop
or
retf
movs
xor
call
mov
mov
out
es
jnp
nop
mov
stos
jle
movs
call
or
sti
dec
xchg
in
add
pushf
jns
cmps
int3
stc
ins
(bad)
pop
out
neg
std
arpl
mov
xchg
shr
inc
and
test
hlt
out
cmp
or
sbb
lds
sar
mov
aad
pop
fadd
push
outs
mov
pop
push
sub
int
inc
push
scas
inc
cmp
ins
jne
xor
lds
and
lods
ror
(bad)
jmp
rol
in
into
lahf
add
pop
or
lds
adc
es
fsub
repz
rcr
pusha
pop
fcomi
adc
(bad)
dec
test
ror
xchg
dec
cdq
scas
jne
or
pop
jg
retf
pop
fld
push
popa
pop
mov
xor
xchg
and
xor
cwde
fbld
inc
int3
jl
stc
retf
adc
jae
or
outs
or
dec
jecxz
mov
(bad)
mul
das
pop
adc
(bad)
jp
cmps
fcomp
pop
jge
inc
mov
ror
retf
mov
push
xor
jl
dec
mov
mov
adc
repnz
hlt
ds
iret
pop
sub
pusha
leave
push
ror
ds
or
(bad)
fidivr
dec
(bad)
shl
sub
test
cmc
rcl
mov
das
orps
jl
retf
jg
or
cmp
sub
jnp
or
cmp
mov
and
mov
push
pop
ins
repnz
xchg
and
sbb
adc
xchg
popa
ins
sub
cmp
mov
mov
mov
cmp
adc
outs
or
test
cmp
(bad)
int3
hlt
ret
sbb
rcl
cmp
push
fst
fisubr
(bad)
mov
lods
cmp
dec
shr
scas
sbb
dec
add
jae
or
sub
mov
cmp
test
das
sti
in
fimul
in
div
dec
add
(bad)
inc
cld
pop
mov
in
enter
pop
xor
xchg
fcomi
imul
cmp
mov
inc
cld
jle
jae
bndstx
dec
cmps
sbb
pop
push
and
xchg
test
mov
loop
mov
iret
scas
and
ret
push
pop
lds
fst
lahf
xchg
gs
in
hlt
fs
clc
aad
sub
adc
jmp
mov
mov
fadd
push
jae
cwde
mov
mov
outs
scas
push
mov
or
fstp
sub
sub
sbb
imul
sub
scas
(bad)
cdq
push
pop
sbb
ss
lods
aaa
ret
rol
std
cmp
repnz
inc
scas
scas
test
inc
pop
movs
mov
cmp
mov
cmp
sbb
inc
cli
cmp
dec
inc
jp
bound
outs
xchg
adc
pop
scas
dec
inc
movs
mov
dec
sbb
int3
test
sub
mov
mov
xlat
loope
pop
and
push
mov
repnz
into
pop
pop
outs
adc
adc
imul
hlt
dec
popf
sbb
mov
mov
mov
fldcw
inc
add
add
mov
(bad)
rcr
jle
fnstsw
cmp
mov
add
nop
fcomp
pop
xchg
add
(bad)
aad
clc
pop
inc
xchg
dec
jle
daa
in
imul
add
out
js
sahf
int
push
rol
test
nop
dec
pop
enter
or
jb
sbb
mov
add
sub
nop
jno
jmp
dec
adc
xor
mov
fwait
ds
xor
(bad)
cli
sub
xchg
idiv
pop
cwde
gs
nop
inc
dec
iret
outs
cli
inc
push
cmp
jg
jnp
mov
out
(bad)
out
lock
add
jecxz
jno
jl
lods
xor
add
push
sub
scas
call
and
mov
inc
cmp
mov
cdq
push
mov
pop
cld
popf
fiadd
xlat
lock
push
mov
add
cmp
(bad)
test
inc
dec
in
aam
lahf
jmp
add
jo
sbb
mov
(bad)
jl
mov
into
rcl
sbb
mov
pop
(bad)
dec
stc
cmps
int3
add
add
shl
cmps
leave
pop
xchg
int3
mov
xor
push
popf
add
lock
sub
outs
cmovns
mov
ds
icebp
mov
add
jle
(bad)
jns
jmp
pop
inc
pop
(bad)
adc
scas
mov
in
cmp
call
call
imul
sbb
movs
daa
clc
out
hlt
jb
jmp
test
xor
push
xor
scas
jae
aaa
mov
hlt
mov
in
pusha
mov
and
mov
in
loope
dec
xchg
cli
ret
pop
ds
dec
mov
cmp
mov
popa
clc
ss
outs
xchg
cli
icebp
shl
mov
fcomi
mov
jecxz
in
cmps
xor
add
and
pop
faddp
and
stos
dec
xor
pop
sbb
sub
jae
inc
pop
dec
pop
xor
dec
imul
push
jp
or
mov
stos
inc
cld
sbb
dec
test
and
xor
aad
pop
adc
xchg
jmp
xchg
daa
scas
sbb
pop
xor
cld
or
add
pop
lahf
shl
and
and
sbb
fisub
retf
shl
cmp
addr16
and
in
jb
mov
in
mov
inc
jnp
push
add
inc
pop
sub
xlat
cmc
inc
hlt
add
fdivr
or
repz
(bad)
ja
mov
or
out
adc
cmc
adc
jge
(bad)
cmp
jne
lods
pop
fnstcw
xchg
stc
push
jne
(bad)
out
pop
fldcw
out
enter
mov
inc
xchg
push
and
lock
pop
xchg
add
dec
pop
popa
fdivr
or
cmp
fsubr
out
xor
mov
push
or
adc
adc
adc
push
jne
dec
jle
in
adc
stc
cdq
aad
jmp
pop
and
scas
sub
push
fmul
cmp
cs
cmp
and
jae
mov
pusha
jns
je
xchg
scas
mov
and
adc
cmp
lods
mov
xor
sbb
sub
mov
inc
push
mov
adc
cmp
into
mov
inc
popa
shl
jle
loopne
into
mov
or
inc
sub
xor
xchg
or
loope
lods
rcr
jb
xor
div
je
mov
ficomp
cmp
retf
add
inc
icebp
push
cmp
imul
call
inc
sub
pop
xor
pop
sti
xchg
jns
mov
push
adc
xchg
jmp
lods
xor
movs
jl
ins
int3
jo
push
inc
xor
add
into
fcomp
pop
ret
scas
or
adc
jle
or
shl
cmp
in
leave
aad
jae
and
(bad)
or
or
retf
clc
(bad)
out
mov
mov
jmp
inc
jmp
hlt
and
lods
fild
cmps
loop
into
stos
lahf
fiadd
stc
and
push
jbe
shl
sbb
mov
clc
ret
call
or
or
push
nop
in
jmp
mov
and
idiv
mov
jb
inc
lahf
jp
inc
push
shl
xlat
pop
retf
jge
out
lock
jle
scas
jecxz
cli
mov
test
inc
outs
mov
fwait
sub
lods
test
push
rcl
imul
ror
add
cld
ret
mov
in
mov
add
push
or
mov
and
pop
jecxz
call
(bad)
ja
mov
fwait
ja
pop
loop
cmc
(bad)
mov
hlt
(bad)
cmp
lock
xor
jno
ds
push
imul
jmp
ret
push
push
repz
stc
jnp
rcl
cmps
and
retf
jno
les
outs
imul
das
leave
push
adc
mov
sub
jecxz
pop
mov
stos
cmc
aad
sub
xchg
gs
sub
int
jmp
mov
and
out
shr
sbb
push
sti
repz
fsub
cmc
jmp
loope
xchg
pushf
pop
rcl
cld
je
pop
(bad)
adc
iret
xor
call
jmp
sti
xor
in
test
jbe
fstp
loop
pop
in
xor
jmp
jbe
sbb
jb
sub
or
xor
push
bound
push
xor
ja
inc
pop
int
xchg
pop
sub
shl
ror
dec
jecxz
sbb
int3
imul
adc
(bad)
lea
or
pop
cli
mov
mov
jl
fistp
out
iret
addr16
and
rcr
arpl
jb
jle
les
int
inc
adc
rol
fucomi
repz
mov
mov
imul
sahf
add
aad
loopne
ins
push
mov
addr16
adc
outs
and
data16
clc
rol
retf
or
fild
mov
xor
out
ins
ins
mov
in
dec
pop
push
jmp
mov
dec
in
adc
jbe
dec
jp
dec
loop
retf
pusha
xchg
jb
or
mov
add
fistp
jne
in
mov
test
cmp
iret
lds
push
bound
daa
xor
or
pop
inc
test
es
call
hlt
ss
cli
mov
sbb
mov
jp
scas
lods
orps
pushf
jne
cmp
xchg
mov
int3
add
aaa
addr16
pop
out
adc
pop
addr16
popf
repz
imul
jmp
adc
xchg
lock
dec
pop
mov
bound
icebp
cmp
push
mov
call
stc
and
in
(bad)
fucomp
jp
xor
dec
mov
fld
lods
xor
mov
cli
push
clc
rol
sbb
cs
adc
jp
call
sbb
sbb
mov
bound
mov
cmp
adc
add
adc
mov
mov
mov
xchg
ja
sar
xor
rcl
jno
cmc
ret
mov
fs
cdq
inc
xchg
jp
movs
pop
adc
fcmovnu
scas
mov
jae
fidivr
int
add
xchg
aad
or
mov
push
popf
dec
dec
test
loopne
mov
push
lods
icebp
sar
lea
mov
scas
std
hlt
xchg
lds
in
mov
cdq
push
sub
sbb
jbe
shr
scas
sbb
pop
pop
mul
jmp
add
push
xor
pop
lods
xlat
aam
mov
int3
push
xor
mov
iret
sti
inc
jl
inc
ja
xor
cmps
rcl
fdivp
dec
or
pushw
add
push
pop
divps
pop
jge
ins
dec
pop
in
pop
jno
lock
mov
sub
sbb
xor
mov
push
adc
lock
mov
inc
inc
adc
das
cmc
mov
cli
test
mov
pop
not
inc
jmp
sahf
into
jp
fidivr
cmp
dec
inc
jle
jnp
or
pop
jo
inc
or
ins
cmp
(bad)
loope
dec
xlat
into
neg
xchg
push
(bad)
ja
test
jmp
lods
outs
and
call
(bad)
mov
and
adc
sbb
mov
pop
jns
ds
or
pop
stos
lods
rcl
rcr
inc
loope
imul
pop
les
push
mov
lahf
xor
push
out
out
popa
cdq
imul
(bad)
aad
xor
retf
loop
sub
xor
sbb
movs
jmp
and
(bad)
jmp
jmp
push
out
cmovns
mov
xchg
loop
add
sbb
mov
enter
dec
call
inc
test
sbb
enter
jp
shl
xchg
cli
xchg
clc
call
fyl2x
stos
addr16
cwde
and
lahf
and
cs
push
xor
out
mov
pop
sbb
lea
sbb
lods
pop
mov
es
movs
mov
mov
push
jae
mov
imul
xor
(bad)
jg
push
fld
xor
pusha
push
sub
rol
pop
sub
mov
in
sbb
movs
jo
dec
push
xchg
aad
(bad)
jbe
mov
sti
in
cmp
xor
mov
pop
add
sbb
popw
std
mov
xchg
ds
xchg
ss
neg
mov
std
shr
cwde
into
mov
lahf
pop
jo
outs
lds
fst
adc
sbb
mov
test
add
push
and
pop
in
jmp
leave
xor
inc
fnstcw
aas
scas
xchg
jp
jecxz
aam
sub
(bad)
xchg
ja
pop
imul
ss
and
jnp
pop
ja
adc
icebp
or
adc
and
pop
mov
mov
cmp
loope
xchg
cwde
push
enter
xor
cmp
dec
add
xor
add
das
lahf
adc
mov
jmp
jmp
dec
xor
mov
test
xor
push
fs
retf
fld
test
or
mov
shl
fist
jp
addr16
or
and
(bad)
cmp
imul
(bad)
out
jl
icebp
cdq
jne
fimul
fistp
jmp
cli
fld
mov
out
inc
xchg
sub
mov
sti
pop
(bad)
imul
cmc
fstp
sar
lock
pop
test
imul
add
pop
jae
data16
movs
adc
mov
(bad)
out
out
pop
mov
pop
shl
or
imul
icebp
xchg
lods
jnp
inc
test
jo
loope
das
je
inc
les
mov
outs
call
call
adc
imul
std
inc
pop
sub
dec
push
and
jb
mov
aad
push
pop
ret
sub
inc
push
ins
inc
movs
adc
mov
jg
pop
mov
sbb
ss
cmp
add
push
xor
cmp
mov
mov
repz
(bad)
iret
add
jnp
ja
or
push
xchg
jae
mov
jmp
push
inc
cmp
jns
repz
xor
mov
mov
iret
shl
mov
out
sar
call
daa
xchg
inc
pop
test
div
cmp
enter
cli
cmp
fisttp
das
mov
add
jle
movs
ret
pmulhw
sti
in
lods
cmp
das
push
and
and
sub
ficomp
mov
jo
adc
aaa
dec
jge
lea
test
pusha
pop
fldcw
inc
aam
in
or
es
mov
int3
mov
lds
lods
(bad)
or
cmc
nop
test
test
mov
fcom
xor
xor
mov
call
mov
push
cdq
aam
lock
push
xchg
out
mov
cmp
jnp
fwait
mov
jmp
mov
pop
cld
call
or
xchg
inc
daa
repz
sub
inc
into
sub
mov
xor
test
inc
inc
push
cmp
xor
into
les
int3
jg
jp
mov
mov
sub
jo
fs
adc
sub
cdq
sub
repz
leave
iret
mov
shl
add
mov
aas
push
dec
mov
cwde
loopne
out
mov
movs
lods
dec
cmp
adc
dec
xchg
jge
clc
dec
out
jecxz
adc
jmp
fstp
retf
bts
inc
and
dec
sbb
sar
mov
push
daa
retf
call
cli
pop
pop
or
out
sbb
dec
fwait
cli
xchg
aam
out
stos
add
push
mov
popf
add
mov
test
sbb
mov
mov
xor
jl
retf
popf
jae
retf
das
inc
mov
add
and
out
addr16
mov
xchg
mov
or
aaa
jl
lock
arpl
nop
cmp
mov
add
dec
mov
lea
xchg
xchg
int
rol
xchg
dec
dec
stos
mov
jno
ins
fsub
xchg
xor
pushf
addr16
mov
aas
inc
jge
cmps
push
push
sub
mov
xor
fadd
test
pop
fist
mov
xor
out
cmp
retf
out
xchg
push
mov
in
(bad)
out
stc
pop
lahf
shr
pop
fcom
call
jge
(bad)
mov
mov
popf
jbe
pusha
neg
push
sbb
dec
xor
fidivr
scas
add
test
mov
pop
int
sbb
mov
xor
fadd
imul
arpl
int
or
scas
adc
leave
data16
cmc
adc
jp
sar
call
and
push
xchg
les
sbb
fxch
(bad)
mov
loopne
mov
push
fisttp
out
lock
push
fcmovnu
retf
cli
cld
in
jno
test
add
jle
lahf
pushf
adc
push
rcr
dec
xchg
jge
add
or
popf
test
adc
jbe
pop
mov
js
inc
jno
adc
call
and
cmp
test
popf
mov
push
mov
test
or
dec
mov
not
out
mov
mov
out
sub
ficom
sbb
iret
adc
data16
cmp
popa
repz
push
mov
out
aaa
fld
fnstcw
iret
pop
add
sub
cwde
(bad)
and
dec
hlt
adc
pushf
mov
fxch
loopne
mov
add
(bad)
leave
dec
sub
stos
mov
nop
retf
fdivp
fiadd
mov
adc
jns
adc
pop
dec
cmp
dec
cmps
in
inc
ficomp
or
ja
mov
imul
pop
mov
fidivr
jo
or
fwait
add
or
call
rol
lods
scas
jmp
aam
sahf
inc
ret
out
adc
inc
and
pushf
dec
adc
lods
shl
fs
lds
pushf
mov
adc
cmp
movs
test
mov
scas
xchg
and
push
ins
cmc
ins
xchg
cmp
call
and
push
loope
arpl
leave
(bad)
in
or
ret
adc
cmp
push
rol
xor
xchg
ror
sbb
push
sbb
sub
pop
dec
jp
xor
xchg
mov
into
popa
retf
addr16
aad
cmp
aad
mov
out
xor
add
outs
mov
les
lds
sub
not
cli
scas
jns
push
jno
in
and
jns
out
lahf
std
fcmovb
fsub
pop
rol
or
fnstcw
mov
push
xchg
xchg
fbld
mov
xor
xchg
cmp
mov
sub
xor
movs
sbb
mov
fsubr
add
cmp
pop
mov
test
loope
mov
mov
ret
mov
mov
cmps
test
pop
fisub
push
cmc
loope
pop
clc
and
lods
jmp
fidivr
cli
push
in
or
fdiv
xchg
into
xchg
sti
sub
repnz
sub
popf
sbb
aas
dec
inc
loopne
js
mov
and
xlat
movs
lock
out
pop
test
ins
(bad)
stc
add
cvtps2pi
icebp
xor
inc
push
mov
adc
shr
mov
mov
stc
xor
xchg
pop
dec
adc
inc
popf
inc
jo
add
or
fwait
dec
sub
cmp
pop
repnz
repnz
pop
test
xchg
jo
lods
sub
sub
push
adc
mov
stos
leave
sahf
popa
ins
fwait
stos
sbb
inc
cmps
jnp
jl
sbb
out
out
aam
lods
cmp
icebp
sub
xor
sbb
in
nop
sbb
aam
pop
in
jecxz
or
pushf
mov
iret
js
cmp
pop
jb
sbb
loope
add
stos
enter
jle
cmp
rcr
adc
lahf
(bad)
adc
cmp
retf
mov
push
dec
(bad)
xor
jmp
pop
int
movs
std
mov
pop
jmp
fwait
in
mov
push
and
xchg
es
outs
push
call
mov
inc
xor
dec
cmps
loope
test
cmp
(bad)
fidiv
sti
ret
sub
ror
mov
iret
or
jle
push
mov
xor
push
sbb
push
sbb
push
retf
sbb
dec
sbb
sub
daa
dec
sub
scas
jns
pop
push
cmp
cmps
mov
dec
ss
fnstenv
pushf
lds
call
gs
add
mov
and
outs
pop
hlt
cwde
cmp
shl
fwait
jge
xchg
pop
xor
in
push
imul
xor
enter
push
rol
in
lea
int
mov
std
push
fs
retf
and
fwait
jge
test
fldenv
dec
push
pop
mov
out
fstp
retf
(bad)
sub
jl
cwde
lods
xor
mov
xchg
icebp
bound
out
push
bound
es
jne
int3
ret
jmp
cmp
dec
cli
push
cmps
loope
cmps
adc
inc
push
out
xor
dec
and
pop
adc
mov
aas
push
nop
mov
push
dec
fcom
mov
push
xchg
dec
add
cmp
aaa
xor
jnp
add
hlt
hlt
in
cmc
cmp
loop
loope
mov
cmps
icebp
aaa
xchg
jg
lahf
hlt
mov
leave
push
fcom
daa
xchg
push
popf
movs
stos
nop
or
add
pop
mov
daa
sbb
sbb
lods
div
cmps
dec
cs
push
jnp
sti
push
mov
pop
out
jle
test
push
das
loopne
fcmovbe
ror
push
leave
and
es
or
mov
rcl
push
adc
or
addr16
mov
mov
nop
or
push
jo
sti
movs
(bad)
and
sbb
pop
jecxz
push
push
xlat
aad
test
fiadd
pop
cli
mov
(bad)
or
or
pop
sar
mov
sub
push
cdq
fmul
std
adc
mov
push
mov
jecxz
push
hlt
in
fistp
mov
xor
adc
mul
mov
cld
ret
jae
mov
or
mov
out
int
mov
repz
mov
push
(bad)
(bad)
loope
retf
ss
loope
(bad)
clc
inc
jp
fld
adc
adc
test
mov
lea
add
add
add
call
add
pop
xchg
repz
sub
or
cli
call
nop
rol
fsubr
popa
sbb
outs
mov
push
adc
sbb
aam
push
retf
sbb
popa
mov
pop
mov
jnp
nop
xor
add
xor
imul
or
neg
dec
cmp
mov
fmul
cmp
mov
in
xchg
aam
push
iret
loope
call
mov
scas
int3
rcr
iret
and
cmp
(bad)
loop
inc
xchg
inc
pop
jb
out
sub
and
arpl
xor
aas
push
out
imul
or
jnp
or
sub
shl
cdq
pop
pop
add
imul
or
sbb
in
cmp
in
jns
ficomp
mov
ins
mov
mov
xchg
dec
mov
mov
sbb
repz
ror
xchg
dec
and
adc
mov
or
or
or
(bad)
cmc
cmp
sar
mov
jp
xlat
(bad)
mov
cmp
add
mov
ja
pop
movs
sub
jmp
push
mov
fs
mov
call
mov
nop
icebp
push
pushf
out
jmp
call
aaa
movs
push
mov
and
sbb
stos
stos
outs
dec
pop
pop
sti
dec
fnsave
in
mov
outs
fisttp
pop
push
fcmovnbe
adc
cmps
jecxz
sbb
call
cdq
(bad)
xor
ror
sbb
les
jno
stos
pop
dec
ja
push
or
xlat
rol
mov
outs
out
push
repnz
movs
test
push
xchg
adc
in
jmp
pop
mov
xchg
jmp
cwde
and
pop
aas
fimul
add
std
xchg
mov
and
jb
(bad)
out
mov
clc
std
movs
add
jmp
das
jl
jge
adc
int3
jge
jno
jecxz
imul
pop
adc
ss
mov
loopne
mov
retf
xchg
stos
dec
mov
outs
je
(bad)
out
fs
inc
xor
inc
dec
dec
lods
mov
or
jl
push
or
add
adc
dec
jne
cmp
xor
int
fsub
mov
stc
mov
add
movs
movs
mov
xchg
dec
adc
fs
lods
inc
repz
cmc
pop
and
mov
loop
mov
jmp
xor
popf
fsub
pop
sti
mov
jecxz
jne
jmp
lahf
xchg
loop
cmc
inc
sub
sbb
xchg
ss
pop
push
mov
ins
or
push
dec
div
jnp
movs
push
dec
pop
add
cmp
ins
sub
scas
test
or
push
sbb
jno
xlat
xor
inc
lods
and
aad
inc
out
or
cdq
fistp
rcl
fiadd
imul
sti
mov
sub
retf
or
rcr
pop
retf
jl
sub
mov
mov
and
ins
pushf
push
push
arpl
push
ins
pusha
scas
lods
into
in
or
add
and
xor
nop
dec
mov
imul
sbb
adc
(bad)
cmps
xchg
sbb
mov
lds
mov
mov
stos
cs
(bad)
xchg
rep
or
mov
stc
and
xor
hlt
stc
and
add
leave
daa
dec
enter
sbb
cmp
jp
movs
test
push
xlat
and
pop
and
xor
leave
ins
push
sbb
cmp
fcom
adc
out
inc
and
cli
cli
jne
retf
aaa
out
aam
fidivr
pop
sar
jle
js
sbb
and
cli
or
inc
push
xchg
adc
adc
(bad)
push
mov
cmp
ror
push
mov
dec
lahf
test
scas
jno
xor
outs
movs
jl
nop
push
mov
push
into
pop
sbb
test
std
mov
aad
inc
out
inc
sar
and
xor
stc
mov
sbb
pandn
(bad)
dec
(bad)
es
pop
loop
nop
adc
add
sub
dec
jle
cmp
cmp
push
or
in
test
add
mov
and
(bad)
xchg
push
mov
pop
fs
outs
fst
loop
sub
cmp
stc
jns
cmps
inc
les
push
in
pop
adc
dec
neg
adc
ins
xchg
out
dec
xor
cmps
in
xor
dec
pop
pop
add
movs
adc
sub
or
cdq
fxch
pop
dec
jg
cs
ss
cmps
bound
ins
adc
retf
mov
out
fidiv
push
addr16
pusha
ins
jmp
bound
pop
xchg
dec
clc
imul
or
shl
dec
loope
(bad)
sbb
jmp
lahf
sub
shl
fst
imul
aad
ret
jl
cmp
fimul
jo
mov
test
sbb
loopne
in
mov
ficomp
jno
out
xor
cwde
(bad)
cmp
bound
cmp
and
pop
fistp
pop
scas
push
push
and
add
push
mov
adc
sbb
push
jmp
add
dec
fwait
sahf
cmp
int3
dec
popf
inc
adc
or
cmp
or
jecxz
and
dec
rcl
enter
ror
clc
sha256rnds2
push
rcl
xchg
xchg
popf
pop
scas
cdq
mov
popa
call
and
das
stc
mov
das
dec
jl
push
push
repnz
sbb
push
icebp
retf
ds
add
(bad)
adc
mov
or
lods
xchg
test
ins
shl
fiadd
mov
push
retf
in
lock
repz
cwde
mov
sbb
das
test
add
cld
lods
jne
mov
push
add
mov
pop
ror
cwde
mov
outs
imul
mov
xchg
sub
into
xor
push
aas
pop
push
div
in
jno
pushf
jae
jle
data16
xchg
mov
je
int
cdq
ds
ret
gs
dec
xchg
pop
and
dec
pop
or
add
scas
or
loopne
pop
(bad)
outs
outs
pop
dec
es
pop
adc
iret
inc
outs
push
in
test
outs
inc
xchg
ins
call
xchg
aam
ror
fwait
pop
mov
outs
test
adc
cdq
popf
cli
pop
fidiv
mov
add
arpl
jmp
shl
dec
stos
jg
outs
jmp
mov
inc
pop
pop
adc
mov
test
shl
and
fsubr
adc
push
or
adc
lahf
xor
aad
outs
xor
jecxz
xchg
sbb
sbb
push
out
sar
cld
loopne
push
outs
fstp
enter
add
fucom
or
cmp
call
cmp
xchg
in
in
sub
call
inc
cmp
sbb
pushf
int3
inc
and
mov
sti
loop
imul
dec
hlt
out
sbb
push
mov
int3
lods
imul
outs
jb
cmps
cmps
cdq
sub
sub
data16
adc
inc
dec
add
nop
and
daa
push
retf
out
add
retf
mov
popf
mov
xchg
rcl
fwait
pop
movnti
adc
and
out
adc
jnp
scas
aad
mov
mov
fwait
add
lods
call
pop
dec
movs
adc
daa
sbb
jmp
test
or
stos
adc
pop
ficomp
xor
retf
adc
daa
cs
inc
ret
mov
sbb
mov
outs
dec
xchg
fdivr
fprem1
mov
push
fs
cmp
cwde
call
lock
ins
xlat
mov
push
cwde
outs
or
mov
jo
(bad)
sbb
fwait
mov
inc
or
(bad)
or
jae
popf
dec
add
ins
sub
add
not
mov
outs
sti
sub
and
clc
lods
out
pop
sub
in
xor
rcr
sar
shr
mov
aam
or
pop
aas
mov
sub
mov
push
fcmovu
mov
(bad)
mov
mov
and
mov
mov
mov
aam
pop
js
int3
dec
cmc
loop
mov
lods
xor
clc
jnp
scas
push
jnp
add
pop
jno
cdq
xor
sub
jg
lahf
test
xor
or
and
push
pop
out
data16
push
xor
lock
das
stc
sbb
iret
pop
pop
movs
add
call
retf
jb
push
movs
adc
in
ficomp
test
(bad)
rcr
push
movs
jo
push
das
cmp
test
js
lods
repnz
mov
ror
std
jnp
popf
jl
cmp
xchg
pop
mov
adc
ret
or
mov
ror
in
inc
mov
push
push
push
clc
rcl
dec
push
dec
fild
inc
mov
loope
and
or
test
retf
xor
sub
adc
xchg
jl
sar
iret
and
adc
jmp
shl
jmp
in
cli
mov
clc
jp
call
and
(bad)
les
inc
(bad)
lea
jb
iret
or
js
scas
mov
in
mov
mov
js
outs
jmp
pop
fwait
call
cmp
arpl
push
loope
or
icebp
inc
push
jl
jle
lods
xchg
push
dec
cmc
lods
ret
push
lods
mov
and
xchg
repz
fiadd
push
fdivr
dec
sub
and
jge
scas
into
push
(bad)
pop
cs
sub
test
rol
mov
(bad)
dec
movs
sbb
bound
mov
jmp
jmp
shr
(bad)
pop
adc
and
fld
(bad)
imul
xor
xchg
and
leave
in
loopne
add
icebp
inc
mov
js
sub
(bad)
mov
leave
stos
(bad)
and
repnz
or
fcmovbe
aam
jmp
cmp
into
inc
add
pop
mov
jno
fwait
pop
(bad)
shl
test
jg
(bad)
dec
cmp
xor
movs
sub
dec
pop
hlt
pop
enter
push
ins
movs
adc
jns
or
call
dec
sbb
mov
nop
lods
test
xchg
xchg
(bad)
stc
dec
repz
ds
mov
inc
mov
xor
test
pusha
aad
sahf
dec
jo
rep
retf
cli
clc
mov
adc
mov
mov
imul
lock
lods
cdq
in
lock
stc
jno
mov
dec
cld
aas
xor
sahf
imul
mov
fisub
inc
mov
(bad)
scas
sub
xchg
sbb
mov
in
daa
ins
test
push
cmp
cmps
xchg
sbb
mov
sbb
out
cli
cli
xchg
call
(bad)
push
fwait
in
popf
mov
mov
je
(bad)
icebp
addr16
jecxz
or
aad
cmp
icebp
ja
mov
dec
cmp
idiv
repnz
das
lods
push
cmps
repz
loope
fisttp
je
add
xchg
(bad)
shl
bound
movs
inc
add
paddusw
test
mov
leave
enter
dec
mov
xlat
pop
mov
lds
popf
jne
shl
cmp
jns
cmps
pop
jae
pop
dec
add
mov
call
call
mov
rcr
sub
add
clc
and
in
jle
cmp
mov
mov
js
or
jle
mov
and
xchg
and
data16
clc
inc
daa
sar
and
xchg
gs
jbe
jb
ins
sub
push
hlt
das
imul
and
jecxz
xchg
popf
jmp
push
mov
out
mov
fnstenv
cmc
xchg
sub
mov
jmp
in
xchg
scas
sbb
and
pop
daa
mov
outs
cmp
cmp
ins
push
idiv
(bad)
sbb
lds
push
push
out
fiadd
daa
out
loopne
fwait
daa
lea
jbe
cmps
adc
ret
mov
idiv
mov
jbe
inc
loope
mov
lahf
sbb
outs
xchg
call
cwde
mov
mov
jmp
push
cmp
mov
xchg
pop
in
sub
cmp
pop
inc
arpl
dec
add
inc
adc
mov
sbb
cmp
or
cs
jae
xchg
int
or
(bad)
rol
and
shl
shl
icebp
jbe
cli
neg
cwde
aad
xor
les
jmp
cwde
sbb
push
add
outs
cmp
adc
ins
or
test
int
js
pop
sbb
and
mov
sub
shl
fcomp
mov
xchg
gs
xchg
nop
mov
int3
jne
loopne
xchg
sub
shl
dec
sub
mov
sahf
out
addr16
dec
out
std
sbb
fisub
inc
ror
xchg
sbb
add
inc
mov
(bad)
cmp
or
add
popa
mov
dec
sti
cmp
out
inc
mov
aaa
shl
dec
and
out
jg
xchg
adc
jp
in
add
shl
(bad)
pop
adc
imul
imul
(bad)
xor
test
pop
jecxz
add
(bad)
sbb
stc
dec
loop
mov
outs
jmp
aam
(bad)
push
call
addr16
fistp
cmp
popa
in
adc
test
je
jle
add
xor
repz
mov
jns
jmp
jle
test
cld
inc
enter
jmp
retf
pop
jl
shl
fidivr
es
shl
mov
inc
inc
jl
test
cmovg
test
or
mov
popf
out
(bad)
cld
jge
jae
mov
push
leave
push
xor
or
ss
sub
sti
sar
ss
add
sub
xor
inc
add
stos
out
sbb
mov
cli
lods
std
mov
pop
out
jbe
rcl
push
adc
fst
call
loope
xchg
adc
imul
daa
das
adc
imul
lea
and
jecxz
jp
pop
and
enter
pop
hlt
xor
movs
mov
stc
sbb
scas
cmp
imul
clc
mov
jmp
push
ret
pop
xor
sti
push
cmps
imul
fdivr
inc
fisub
mov
mov
pop
and
sbb
(bad)
push
inc
scas
hlt
xor
aaa
in
add
push
cmps
sbb
mov
loopne
out
xchg
enter
enter
test
rcl
loopne
adc
push
fcomp
push
outs
xchg
test
push
push
cmp
jo
fldenv
or
xchg
sbb
std
imul
mov
inc
push
retf
popa
push
(bad)
adc
mov
js
cs
cmps
mov
pop
cdq
mov
ss
push
aaa
jns
fwait
xor
pop
fadd
shr
push
iret
mov
mov
inc
ss
jg
stos
add
and
(bad)
ins
adc
es
pop
xor
aad
fcmovbe
xor
mov
dec
fstp
ins
xor
sbb
mov
call
push
pop
or
movs
mov
mov
daa
pop
out
(bad)
adc
aam
call
mov
pop
jecxz
mov
pop
or
or
jl
inc
and
into
mov
inc
push
(bad)
or
mov
into
add
push
jl
and
out
(bad)
out
rcr
push
adc
adc
cmp
dec
xchg
test
hlt
or
mov
mov
out
or
fs
mov
add
push
outs
fwait
xor
lock
dec
push
loope
pop
cmp
push
xchg
inc
pop
mov
iret
std
sbb
sahf
je
xchg
fucom
stos
cdq
aaa
je
out
mov
sahf
dec
das
mov
pop
xor
jnp
das
inc
dec
push
test
sbb
scas
push
mov
fcmovne
cs
ins
push
js
fsubr
loope
push
inc
cmp
xor
mov
fst
jb
lea
jp
pop
cmp
call
cmc
idiv
push
(bad)
mov
inc
scas
add
add
and
jge
pop
iret
lods
xchg
out
repz
xchg
sub
gs
es
shl
ins
jnp
clc
(bad)
fwait
xor
pushf
sar
jae
push
sbb
fcom
mov
imul
adc
mov
push
neg
std
scas
inc
cdq
shr
inc
adc
inc
ret
sub
fisttp
sub
push
cmp
dec
(bad)
loope
repnz
lods
sbb
pushf
mov
xor
push
pop
outs
or
mov
or
or
or
rcl
outs
icebp
add
pop
je
sub
xchg
or
data16
sahf
xchg
or
inc
in
aad
sub
sbb
ret
test
sbb
pusha
xor
ret
popf
mov
fimul
push
pop
lock
inc
ss
xor
cmp
les
mov
packssdw
std
push
push
jmp
loope
adc
add
xchg
or
mov
push
fs
mov
imul
jbe
jmp
dec
lods
jp
add
movs
stos
jb
fiadd
jno
sbb
std
dec
fs
test
lock
cmps
sahf
mov
inc
js
out
aad
adc
xchg
in
push
jae
pslld
sahf
clc
xor
clc
add
xchg
mov
adc
or
or
xchg
push
jns
push
popf
cwde
rcr
enter
lahf
mov
cmp
ror
sbb
ins
out
imul
and
mov
push
ins
retf
xchg
xchg
pop
jno
xor
outs
into
iret
into
xlat
xchg
repnz
(bad)
idiv
mov
sub
rcl
sub
iret
xor
mov
cld
cmp
movs
fdiv
sub
xor
and
stos
adc
mov
ja
das
out
and
out
test
ins
cs
push
xor
xor
sbb
mov
fld
and
jbe
jb
lods
gs
xlat
xor
xchg
loop
cmps
xchg
(bad)
dec
daa
jge
adc
scas
(bad)
xchg
and
jge
(bad)
mov
scas
jbe
lods
mov
test
jns
inc
sbb
js
ror
fmul
sub
lahf
and
xor
sub
outs
fldcw
or
fisub
xchg
inc
lock
fdivp
xchg
cmp
movs
les
push
in
icebp
clc
lods
mov
dec
scas
sti
add
push
adc
sbb
mov
loopne
out
add
popa
cld
mov
adc
jnp
add
pop
mov
cmp
jg
shr
mov
ja
das
add
imul
aad
sahf
mov
xlat
mov
(bad)
jg
mov
test
push
xchg
push
out
aas
or
repz
fcmovnbe
popf
and
dec
push
mov
cli
dec
and
push
in
push
test
add
pop
sbb
inc
push
adc
xchg
push
cmps
cmps
add
je
pop
cmc
sbb
xchg
adc
adc
loopne
icebp
push
cmp
xor
and
xor
add
(bad)
(bad)
mov
xchg
adc
xchg
(bad)
adc
dec
adc
mov
sbb
xchg
jecxz
dec
lods
jnp
mov
das
aam
push
ds
or
cmp
push
xchg
shl
push
or
das
das
js
fcomp
pop
jge
data16
push
push
fmulp
lods
bound
dec
into
push
or
jmp
call
les
push
push
loop
nop
cmp
or
pop
in
test
fst
xlat
ins
js
popf
pushf
jo
or
in
sbb
cmps
pop
das
fist
hlt
dec
and
stc
jae
sub
jmp
icebp
(bad)
mov
adc
popf
test
aaa
das
xchg
add
in
cli
mov
push
add
adc
jl
cmp
imul
(bad)
or
popf
pop
push
(bad)
mov
je
ja
out
ret
mov
sbb
lahf
mov
sbb
cmp
gs
movs
mov
test
add
mov
ins
xchg
das
adc
sbb
lea
pop
das
mov
imul
test
sahf
call
mov
es
sahf
clc
sub
movs
retf
mov
scas
jbe
movs
add
inc
xlat
mov
mov
repz
and
pop
jb
hlt
clc
fadd
sbb
loopne
loopne
lods
shl
mov
sbb
shl
leave
(bad)
sub
pop
push
adc
js
push
jno
ja
pop
push
enter
dec
adc
push
push
adc
or
xchg
ins
sbb
or
fdivr
bound
inc
ss
bound
fsubr
sbb
ins
mov
xor
pop
enter
stc
mov
jg
xchg
jge
retf
jmp
inc
add
sbb
imul
fwait
jl
loope
ret
cdq
sbb
push
repnz
and
imul
and
jmp
imul
cmps
sub
imul
push
mov
xlat
cmp
mov
jno
hlt
movs
stos
iret
sbb
in
hlt
jmp
or
mov
mov
ret
imul
frstor
std
xchg
aad
retf
xchg
idiv
cmp
mov
or
sahf
inc
mov
push
inc
xchg
repz
cmps
xchg
call
inc
mov
lods
loop
mov
and
lock
or
test
jo
(bad)
adc
xor
pop
or
xor
mov
aaa
rol
dec
or
outs
inc
sub
pusha
mov
out
scas
ja
and
jmp
out
(bad)
mov
sbb
jp
dec
mov
js
hlt
mov
test
fcom
mov
out
out
retf
jl
add
aaa
xor
inc
cmp
pop
mov
pop
push
sbb
leave
hlt
xor
inc
mov
push
jge
add
sbb
rcr
repz
mov
xchg
sti
clc
jle
jb
push
dec
sub
pop
mov
loopne
mov
jmp
push
lea
fld
and
xor
ss
mov
cmp
xchg
ja
xlat
jmp
xchg
hlt
loope
mov
cwde
icebp
sbb
data16
cmps
jle
mov
inc
icebp
add
addr16
fdivr
lahf
aad
dec
fwait
sar
add
mov
inc
and
(bad)
mov
stc
int
mov
cld
retf
aas
sub
xor
dec
mov
push
outs
mov
mov
push
stos
push
and
leave
add
shr
pushf
pop
out
jo
add
out
scas
cmp
ret
sbb
sub
adc
pop
fidivr
sub
clc
pop
xchg
cwde
aas
jae
shl
jmp
adc
pop
into
add
loop
shl
add
jbe
or
cmp
push
push
sub
(bad)
shl
dec
sub
mov
mov
inc
es
popa
cmpxchg8b
inc
sti
inc
pushf
mov
(bad)
pushf
in
xchg
cmc
popa
lea
push
movs
push
sahf
adc
sti
push
call
and
push
leave
addr16
(bad)
fidivr
mov
mov
jecxz
psubsw
mov
sbb
pop
dec
cmc
sbb
scas
push
jmp
push
lahf
jno
jge
add
jne
repnz
ficomp
pop
data16
adc
icebp
es
adc
(bad)
jmp
xor
inc
bound
into
sbb
addr16
mov
lds
and
sbb
pusha
inc
out
nop
fild
or
call
adc
ins
sub
retf
lock
(bad)
fdiv
mov
jns
xchg
cli
stc
call
loopne
fisub
out
and
cmp
mov
add
push
cmps
lea
sub
rcl
add
sub
stos
pop
rcl
loop
mov
rcl
jmp
popa
sub
add
retf
or
add
in
jnp
jge
xchg
and
or
cli
xchg
dec
movs
cmps
push
adc
jnp
movs
push
xchg
sar
sbb
pop
leave
add
repz
xchg
ficom
mov
aas
pop
sub
mov
mov
mov
nop
mov
sbb
add
or
je
in
ins
(bad)
rol
dec
mov
and
loopne
(bad)
dec
ins
jge
sub
cmp
lods
push
dec
cmp
pop
lods
sub
sub
add
cdq
aad
rol
inc
inc
pop
fstp
add
jge
push
clc
pop
les
das
cmc
(bad)
inc
lahf
loope
pop
sti
jns
repz
cmps
movs
pop
iret
mov
loop
shl
inc
pop
jecxz
outs
cmp
fwait
pop
psubb
out
cmp
mov
int3
out
adc
xchg
scas
loopne
addr16
(bad)
ret
call
add
xchg
pop
mov
pop
pop
cwde
add
push
ds
push
jecxz
dec
stos
jb
jle
mov
out
int3
(bad)
inc
dec
jo
jnp
lea
xor
cdq
aad
int
xchg
mov
jbe
scas
sub
ins
(bad)
add
sbb
aas
cmc
pop
push
or
arpl
nop
xor
adc
scas
push
lock
mov
xor
mov
mov
mov
adc
clc
mov
lahf
mov
add
and
inc
pusha
into
mov
jo
ins
retf
jmp
and
mov
sti
test
popa
data16
inc
fldcw
push
dec
or
mov
das
inc
rcl
(bad)
xchg
les
mov
shl
add
adc
xchg
push
pop
jb
dec
xlat
push
mov
mov
retf
(bad)
ins
js
add
cmp
retf
cmp
enter
dec
inc
xchg
in
cmps
aas
jg
sti
test
and
pop
jp
cmp
push
jne
scas
xlat
outs
or
jle
imul
aam
jle
mov
add
pop
retf
fld
nop
or
adc
(bad)
jo
add
retf
dec
jno
mov
comiss
stos
shr
push
pop
imul
lock
es
ficom
enter
mov
adc
xchg
lock
sbb
add
retf
mov
dec
sbb
mov
xchg
outs
jp
pop
outs
out
ja
jp
int3
fsubr
popf
sbb
int
enter
int
je
into
dec
imul
pop
sbb
stos
mov
mov
aaa
jne
pop
mov
in
mov
dec
sub
popf
call
cmp
sbb
std
fdiv
or
mov
and
lods
es
fild
xchg
jo
mov
or
sbb
adc
add
xlat
imul
imul
out
add
(bad)
aad
cmp
ins
add
inc
mov
clc
es
sub
je
shl
sahf
data16
sub
fwait
adc
and
clc
js
dec
mov
cmps
(bad)
xchg
ret
call
jne
js
test
movs
cld
jo
cld
xor
movs
cdq
push
mov
aaa
les
push
pop
jmp
hlt
repnz
les
add
push
out
(bad)
in
int3
bound
adc
mov
cmp
(bad)
cmp
push
mov
add
pop
ror
inc
movs
ss
push
pushf
add
dec
stc
add
test
pusha
out
jl
jno
mov
(bad)
sub
cdq
out
add
stos
or
xor
cmp
mov
bound
daa
adc
push
je
fcom
and
push
pusha
xor
movs
add
int3
test
xadd
and
enter
sub
sub
push
inc
jge
jecxz
shl
push
or
mov
scas
pop
mov
cmp
repnz
cmp
fstp
ss
cmp
(bad)
sbb
repz
stc
(bad)
inc
cmp
xor
and
mov
dec
outs
and
xchg
jnp
enter
jno
lods
and
xchg
xor
daa
je
adc
ror
clc
lods
mov
mov
jle
(bad)
xchg
popf
cmp
push
xlat
sbb
outs
stos
and
sbb
mov
(bad)
cmp
mov
jnp
pop
inc
push
push
dec
les
push
bound
push
ds
jmp
add
add
es
ret
xlat
adc
mov
xchg
in
in
lock
aas
push
push
mov
jle
cld
add
inc
adc
inc
pop
stos
mov
sbb
sub
shr
mov
movs
sub
in
stos
pop
xchg
cmps
mov
mov
daa
rcr
lock
sbb
sbb
adc
cmc
inc
imul
push
in
push
mov
and
push
adc
mov
sub
enter
sbb
es
mov
cmp
loopne
cmps
push
repz
loop
or
scas
xchg
int
stos
lock
lahf
xor
call
or
inc
cmps
retf
cmp
(bad)
cmp
and
sbb
jae
cld
scas
movs
sbb
movsx
lods
adc
loop
jnp
mov
jb
out
mov
loop
inc
pusha
xor
sbb
movs
test
fild
fld
push
ins
jbe
sbb
out
xchg
fstp
out
les
jecxz
adc
out
cmp
popa
push
int
sub
mov
mov
and
mov
cmp
and
lods
ja
inc
aaa
xchg
and
ret
push
jge
jmp
push
retf
mov
cli
xor
xchg
xchg
and
mov
enter
aad
jmp
stc
sub
aaa
sbb
mov
repnz
mov
lods
mov
adc
les
and
mov
sub
push
or
inc
jge
fcomp
fdivr
aad
or
adc
les
ret
dec
clc
outs
rcr
fidivr
xchg
outs
vpaddusw
mov
fmul
xchg
push
les
add
fisub
in
pop
in
add
jecxz
adc
push
add
imul
ret
repnz
sbb
xlat
pop
movs
icebp
ja
jnp
fcomp
xor
xor
jp
outs
adc
add
cdq
aaa
gs
or
jmp
push
inc
adc
std
je
imul
bound
rcl
mov
push
cdq
inc
mov
repnz
jns
outs
rol
mov
xchg
jp
push
xchg
xchg
mov
xor
(bad)
or
inc
xchg
xchg
cmp
dec
(bad)
out
pop
pop
or
sbb
in
and
int
pop
push
outs
cmp
loope
enter
sub
push
lods
aad
cmps
out
cmp
sbb
int
mov
push
and
aas
push
dec
sub
call
je
aam
xchg
push
loope
jg
or
stos
push
in
setg
push
test
adc
pop
push
mov
loop
sbb
repz
cmp
retf
push
pop
movs
inc
pop
cmp
jmp
and
div
xor
adc
daa
fstp
int3
sub
dec
push
cmp
push
sub
inc
add
xor
aam
pop
push
mov
popf
sbb
sahf
push
adc
pop
cmovnp
icebp
dec
push
in
or
mov
add
out
out
mov
sbb
sbb
(bad)
and
inc
and
into
push
xlat
dec
dec
or
retf
gs
dec
bswap
(bad)
arpl
sbb
das
mov
sub
push
jl
xor
aad
repz
cmps
std
sub
dec
mov
xchg
push
push
fcomp
sbb
mov
mov
inc
mov
and
sub
add
mov
ins
into
mov
das
adc
stc
test
lds
mov
test
test
sti
and
jae
lock
mov
xchg
dec
mov
mov
add
push
mov
jp
xchg
adc
inc
sub
mov
pop
jle
mov
push
repz
bound
pusha
xchg
in
mov
jne
repz
add
adc
aas
repnz
mov
cmp
jmp
jno
mov
push
jmp
nop
cmp
pop
test
jb
or
push
or
pop
out
add
xor
sub
ins
pop
sbb
or
jp
xchg
adc
std
jmp
or
push
repnz
sub
in
lock
retf
cmps
sub
sub
jecxz
es
xlat
mov
cmp
ins
scas
sbb
pop
aaa
retf
cmps
ret
repnz
(bad)
fdiv
loope
aaa
jmp
dec
jp
popf
mov
xlat
repz
pop
sti
pop
fisttp
fprem
mov
and
jmp
stc
mov
mov
push
stos
push
loop
add
por
inc
retf
in
iret
or
test
test
dec
or
cmp
das
push
sbb
cli
clc
jno
push
out
mov
xchg
and
add
pop
inc
fcom
aam
stos
cmp
bound
(bad)
shrd
in
and
ja
sbb
movs
sbb
loop
mov
loop
pop
outs
fld
das
jp
mov
push
fist
and
sub
and
push
out
and
sub
test
add
xor
ja
std
sub
push
add
mov
push
dec
pop
and
mov
mov
les
cld
ins
nop
mov
hlt
fstp
dec
inc
mov
arpl
adc
ins
add
push
xor
mov
iret
ret
stc
add
ja
in
or
pop
ret
and
test
mov
jp
jge
mul
jae
fs
sbb
test
add
push
or
mov
adc
push
xor
xor
sub
fdiv
imul
leave
lock
xor
sbb
fist
repnz
jae
xor
hlt
daa
or
jb
dec
movs
add
mov
push
mov
imul
lds
jo
xor
sub
in
xor
jnp
mov
pop
xchg
dec
xchg
fsub
call
in
popa
adc
das
dec
xor
xor
mov
sub
push
repnz
add
xor
xchg
cmps
jl
inc
jno
jecxz
jne
sbb
add
mov
ss
or
mov
bound
jge
lahf
mov
arpl
push
sub
loopne
xchg
xchg
jl
push
add
cli
cmp
call
das
stc
es
mov
add
(bad)
jp
jge
xchg
sbb
jno
sub
push
lods
movs
not
scas
xor
jmp
aad
das
add
and
loopne
loope
mov
popf
dec
lods
or
dec
fisubr
iret
cmp
push
adc
xor
or
mov
sub
push
stos
jbe
pop
push
fnstcw
out
mov
lds
dec
mov
dec
jo
jo
mov
dec
daa
mov
jl
lock
sub
xchg
loopne
call
frstor
cmp
mov
cmp
xchg
pop
out
add
scas
ins
push
xchg
mov
in
iret
mov
and
sub
mov
pop
cs
pop
cld
fdivrp
adc
addr16
inc
add
add
jp
mov
xchg
jmp
aam
add
hlt
add
fcomi
int
mov
imul
aad
dec
dec
in
jno
dec
scas
sbb
dec
outs
or
add
adc
jp
in
and
pop
xor
mov
mov
jl
out
push
in
scas
mov
in
daa
xchg
mov
not
aad
and
imul
jl
jecxz
mov
xchg
mov
push
aaa
add
and
jno
push
aas
sub
and
inc
dec
jnp
test
pop
dec
mov
add
sub
mov
xor
mov
mov
cli
push
and
pop
mov
in
lods
mov
mov
sbb
adc
add
jo
lods
mov
int3
in
xchg
mov
gs
pop
shr
out
inc
in
mov
movs
out
pop
cld
jge
(bad)
(bad)
ds
fcom
jbe
inc
and
shr
xor
pusha
jmp
std
dec
test
aas
loope
leave
cmp
or
mov
call
mov
leavew
es
mov
or
repnz
pop
repnz
or
inc
push
imul
outs
not
mov
jge
cwde
cmp
push
or
in
mov
or
sub
pop
xchg
mov
nop
cmp
jns
outs
xor
add
sub
add
xchg
or
jbe
into
mov
sub
das
aas
arpl
jno
es
retf
sbb
sub
pop
into
fs
dec
iret
scas
(bad)
adc
jecxz
cmps
jne
mov
(bad)
call
jns
sti
js
sbb
sbb
push
adc
js
push
cwde
inc
pop
cmc
mov
xchg
cdq
(bad)
and
scas
je
jmp
jae
jmp
push
push
and
ins
ret
pop
mov
pop
aam
fimul
hlt
in
mov
push
psadbw
sbb
movs
or
add
(bad)
(bad)
or
pop
mov
and
inc
and
in
lahf
and
shr
aam
pop
cli
stc
(bad)
arpl
pop
iret
jmp
jmp
mov
mov
cmp
sub
cmp
pop
mov
mov
retf
nop
xor
fisttp
adc
and
and
cmc
stos
rcr
sub
or
icebp
cmp
aam
dec
cwde
scas
dec
fwait
iret
aam
gs
jo
xor
mov
push
jae
dec
pop
(bad)
mov
xchg
mov
lock
call
jle
aaa
cmc
jno
inc
fdiv
jecxz
popf
jns
stos
inc
int
enter
aaa
aad
out
ins
mov
lds
cld
iret
dec
pand
mov
pusha
lods
addr16
mov
sbb
xor
sbb
cmp
hlt
in
adc
test
mov
add
loop
call
xchg
in
aam
jg
add
push
push
in
fdiv
bound
mov
movs
jbe
sti
mov
cmp
push
xor
add
mov
jo
cmp
in
push
lds
adc
mov
xor
dec
mov
adc
mov
nop
hlt
ret
test
inc
iret
mov
clc
ret
popa
jg
mov
lods
inc
std
scas
push
repz
lea
addr16
call
outs
push
popf
repnz
cmp
call
adc
jno
dec
xchg
pop
test
xchg
fadd
mov
retf
sub
push
jmp
les
pushf
xor
leave
mov
pop
out
scas
pushf
xchg
and
push
mov
or
inc
clc
fisubr
je
dec
inc
pusha
or
(bad)
push
jge
out
or
cmp
and
inc
sbb
or
js
rol
or
sbb
xor
mov
push
jo
pop
mov
push
and
or
clc
pop
mov
stc
jp
retf
movs
push
xchg
pusha
ja
cmp
lods
(bad)
pop
mov
rcr
or
xchg
pop
pop
(bad)
xchg
je
std
aaa
push
aam
adc
aam
mov
mov
xor
mov
ins
jo
push
dec
cli
push
mov
jo
sub
xchg
sbb
mov
out
mov
inc
sbb
mov
aam
cmp
sub
shr
inc
cmp
loop
and
fisttp
push
sub
jmp
int3
retf
jmp
xchg
cs
xchg
xor
and
pop
xchg
sub
inc
or
sbb
lods
movs
rcr
lods
and
pusha
and
dec
(bad)
je
mov
mov
dec
addr16
push
mov
es
les
cmp
mov
and
push
or
or
rep
and
pop
fcomp
mov
cwde
push
sbb
cmp
adc
ret
pop
cs
fcomip
loopne
jg
call
pop
jb
inc
lods
data16
or
jmp
xor
inc
shl
mov
inc
imul
loop
ffree
pop
mov
xor
adc
out
adc
nop
cmp
iret
xchg
popf
out
dec
fwait
aas
add
sbb
cmp
inc
add
ret
mov
sub
enter
mov
mov
(bad)
aas
call
jp
out
adc
fnsave
push
cmc
test
add
loop
imul
pop
mov
out
repz
inc
push
xchg
cmp
fidiv
xchg
sub
add
test
xchg
inc
sub
mov
mov
xor
inc
add
inc
je
add
jle
stos
cmp
xchg
push
sbb
ins
jp
adc
dec
les
movs
movs
cmp
jnp
(bad)
test
loop
jle
mov
mov
stc
cmp
sub
outs
icebp
mov
loop
and
mov
aas
sahf
imul
lock
add
ret
pusha
push
dec
cld
mov
(bad)
shl
mov
(bad)
mov
movs
mov
mov
xchg
jmp
mov
adc
sbb
jg
daa
stos
add
sub
xchg
dec
fmul
push
mov
outs
inc
push
adc
clc
sbb
pop
ins
sahf
and
retf
arpl
xor
repnz
dec
mov
pop
sbb
inc
add
jo
xlat
and
mov
or
sbb
es
(bad)
(bad)
jmp
ficomp
add
cmp
aad
icebp
fadd
push
stc
rcr
movs
push
not
adc
lods
push
fst
aaa
push
stos
cli
add
xor
xchg
stc
cmp
fld
fsubr
arpl
icebp
cmp
in
and
push
dec
add
fwait
dec
pop
jne
int
int3
jb
pop
push
stc
xchg
mov
inc
cwde
cs
stos
test
sbb
jecxz
nop
mov
fisubr
outs
aas
iret
pop
inc
rcl
mov
lahf
fistp
hlt
push
pop
push
arpl
jno
sbb
lock
add
push
daa
in
add
sbb
add
int
xchg
pop
(bad)
and
icebp
pop
mov
je
inc
test
mov
mov
add
xchg
or
stos
adc
push
outs
sbb
je
jecxz
fcmovbe
cmp
pop
inc
cs
adc
dec
mov
mov
mov
jp
imul
cmp
leave
sub
xchg
inc
ins
mov
ds
mov
dec
out
lods
sbb
rol
mov
mov
or
shr
sbb
call
mov
stos
pop
nop
dec
rcr
jl
sbb
aaa
das
xchg
(bad)
std
jp
add
je
and
xor
shr
into
and
outs
xlat
mov
lea
xchg
aas
xor
lods
aaa
cli
les
mov
and
xchg
xchg
ret
and
ins
dec
sbb
add
jp
add
lods
js
mov
jnp
pop
loop
icebp
and
test
ret
sbb
dec
pop
std
or
lahf
or
mov
fmul
(bad)
je
sbb
push
or
or
dec
aas
fisub
and
test
pushf
repz
mov
(bad)
stos
xchg
pop
pop
mov
mov
pop
fidivr
sub
pop
sub
scas
pop
lods
inc
mov
dec
outs
repz
lods
add
das
push
out
or
and
mov
(bad)
inc
pop
push
mov
retf
jno
in
jns
je
jmp
retf
call
jno
sub
(bad)
stc
(bad)
jns
jmp
push
ss
adc
sti
sbb
fwait
es
int3
sub
pop
jg
jmp
shr
aaa
ror
out
push
push
and
leave
push
jnp
leave
call
out
push
and
or
lahf
xchg
mov
and
and
pop
(bad)
dec
cmp
mov
idiv
clc
movs
test
pop
or
rcl
movs
fdiv
mov
sub
pushf
popa
sahf
xchg
in
retf
lods
lods
push
mov
sbb
add
jns
test
sub
(bad)
rcr
je
mul
hlt
fsub
rcl
pushf
dec
push
jg
add
mov
je
sub
mov
cmp
mov
scas
inc
cmp
sub
fwait
cs
(bad)
mov
mov
or
dec
mov
mov
hlt
and
push
jecxz
(bad)
cmp
cmps
into
cmps
stos
cmp
push
(bad)
cli
mov
pop
sub
add
cmp
and
push
call
mov
mov
cmps
std
stc
enter
push
xor
sbb
std
add
test
shl
mov
ret
mov
popf
add
xchg
iret
mov
pop
shr
push
pop
shl
sbb
cmp
jmp
jne
cdq
hlt
mov
dec
jmp
(bad)
sub
mov
pop
pop
fsubr
jecxz
pusha
push
je
jecxz
mov
add
mov
inc
cmp
add
out
call
lea
push
out
ins
push
jno
jge
sbb
cmp
xchg
add
std
pop
mov
dec
lods
mov
fcomp
adc
xor
cli
fsubr
pop
xchg
js
pop
daa
jmp
dec
inc
call
or
pusha
test
sub
and
adc
es
es
adc
jb
daa
bound
pusha
sbb
ret
mov
and
lds
mov
les
jno
rcr
test
adc
pusha
mov
xchg
(bad)
test
fsubr
sub
inc
cld
mov
mov
jp
xchg
inc
aam
fs
pop
dec
sub
ret
movs
mov
and
daa
cmp
fsubr
add
repnz
push
(bad)
lods
(bad)
ret
mov
dec
or
inc
cmp
cli
test
sbb
push
inc
das
mov
inc
int
xchg
movs
xor
mov
sar
daa
cmp
sub
xor
cld
xchg
dec
xchg
add
sub
jnp
adc
neg
pop
ss
push
mov
repz
popa
(bad)
mov
fwait
popa
sbb
icebp
inc
push
lahf
std
sub
test
dec
inc
pop
(bad)
pop
cmp
enter
push
push
push
imul
xlat
fdiv
sbb
cmc
ret
mov
dec
sti
xchg
mov
pop
imul
sbb
add
jno
pop
ret
pop
pop
add
iret
jmp
mov
mov
xchg
sub
xor
dec
in
mov
arpl
loop
sub
ret
jmp
inc
div
mov
cli
adc
mov
dec
je
in
inc
jecxz
adc
or
cdq
repnz
mov
std
movs
add
mov
scas
push
aaa
push
push
pop
cmps
loope
mov
imul
and
pop
sti
addr16
mov
gs
jmp
imul
jns
(bad)
dec
sbb
xlat
xlat
aas
jmp
iret
shl
mov
lods
aad
sub
push
jbe
adc
push
push
mov
and
fadd
adc
hlt
cwde
or
cmps
popa
(bad)
fnstenv
cld
mov
sbb
arpl
cmc
not
dec
jne
adc
imul
aam
xchg
frstor
out
neg
mov
cmp
fsubp
ds
sbb
movs
xchg
out
push
dec
inc
fcom
push
outs
mov
retf
inc
not
nop
leave
push
in
xchg
sar
and
push
push
out
ret
lods
pmaddwd
(bad)
ds
and
repnz
inc
cmp
mov
pop
imul
push
out
cdq
xor
mov
repnz
sub
add
fwait
iret
adc
cmc
daa
xor
in
retf
movs
ja
push
cmp
nop
cmp
pop
mov
out
jmp
push
inc
or
cmp
xor
out
addr16
jmp
aad
gs
sub
rcl
xchg
jno
fild
fwait
das
sub
pop
call
loop
push
int3
dec
test
mov
jnp
and
dec
or
retf
pop
imul
add
cmc
sub
bound
fcomi
cmp
stos
push
pop
pop
sbb
daa
int3
es
(bad)
aad
inc
cmp
add
adc
mov
fwait
mov
jb
jge
inc
sti
push
mov
xlat
cld
sbb
js
gs
stc
jae
call
(bad)
add
mov
jno
cmp
push
cmp
(bad)
xor
add
leave
cmp
jg
ret
mov
pop
push
sub
and
data16
test
lock
cmps
aas
dec
adc
jb
(bad)
in
pop
mov
jo
pop
add
mov
xchg
sbb
mov
jne
imul
mul
outs
xchg
xor
jmp
add
loope
push
push
mov
loopne
and
or
repnz
fcomp
js
std
cmp
xchg
mov
mov
xor
outs
jmp
mov
sbb
fcomp
push
pop
mov
inc
push
and
cmps
cdq
mov
jecxz
and
shl
and
ret
hlt
adc
(bad)
repnz
js
xchg
cwde
out
div
adc
mov
push
pushf
out
imul
jno
adc
or
fadd
and
(bad)
scas
cmps
pop
mov
(bad)
adc
or
repz
je
imul
test
jnp
fbstp
ins
rcl
sti
sti
mov
jns
sbb
xor
stos
pushw
cdq
mov
in
mov
lods
xchg
push
adc
js
mov
xchg
mov
xchg
and
inc
ret
(bad)
xor
stos
jne
outs
cmp
adc
cmp
or
and
xchg
(bad)
mov
test
add
sub
pop
sub
inc
es
arpl
mov
jne
fnstsw
jmp
or
(bad)
outs
jmp
push
add
sbb
pushf
jge
mov
ror
cmc
xchg
add
mov
push
test
xor
mov
test
shl
js
leave
ret
xchg
jae
adc
or
jae
xchg
cmc
push
or
shl
jmp
mov
or
fs
out
cmp
mov
popf
int3
inc
push
mov
push
in
aaa
xor
jno
int3
jmp
addr16
stc
xchg
mov
lea
lahf
bound
js
push
hlt
stc
ficom
sahf
sbb
adc
xor
ins
inc
fidiv
dec
jl
mov
mov
sbb
int3
jmp
push
xchg
test
add
and
pop
repz
pop
mul
mov
add
mov
fstp
aaa
rcr
into
fisttp
adc
pop
bound
mov
jp
hlt
ret
add
xchg
nop
push
pop
test
(bad)
sub
sub
push
and
mov
(bad)
xor
out
push
out
xchg
jmp
or
inc
ins
sub
js
rcr
pop
jno
fdivr
push
push
rol
outs
dec
leave
mov
jb
sub
sub
in
cwde
mov
xchg
xchg
dec
xchg
add
sti
inc
dec
rol
leave
or
sub
aas
sbb
ds
iret
popa
or
jmp
test
pop
arpl
mov
xchg
stc
mov
sub
push
aas
fnstcw
cmp
jne
jp
push
jge
or
mov
lea
add
ins
out
mov
call
jmp
add
iret
repnz
xor
fadd
mov
xor
test
ja
mov
xor
fadd
xchg
mov
xchg
cmc
popf
or
and
mov
mov
pop
xor
push
enter
lea
mov
cmps
sti
add
aad
inc
push
les
clc
jno
adc
sbb
int3
push
movs
fsubr
add
bound
test
(bad)
xor
jmp
cmps
inc
or
sub
call
xor
(bad)
dec
ins
(bad)
push
add
adc
add
imul
adc
adc
adc
mov
mov
inc
stos
push
add
enter
popf
jae
fwait
cmps
loope
jmp
xchg
sar
sbb
xchg
and
imul
pop
outs
in
xor
cmps
pop
shr
(bad)
pop
loop
iret
mov
ss
jmp
(bad)
(bad)
jg
(bad)
mov
pop
sbb
daa
add
xor
sub
jne
aam
pop
inc
idiv
push
retf
aas
adc
pop
add
jmp
sbb
fsub
cmps
mov
int
test
fwait
or
retf
sub
in
add
sahf
in
mov
mov
mov
jmp
xor
push
and
(bad)
jg
push
dec
jge
lea
add
movs
or
mov
imul
das
popa
dec
sbb
xchg
(bad)
nop
(bad)
push
fld
mov
lds
call
push
dec
nop
ficom
xchg
ss
jb
out
inc
pop
jl
dec
out
gs
movs
mov
mov
push
xlat
int3
lods
or
out
jns
mov
jno
mov
das
sti
fist
xor
aad
hlt
xchg
shr
jmp
sahf
je
mov
mov
stc
loope
pop
jmp
icebp
cs
cmp
fcomp
cmp
push
jb
in
test
xchg
pop
push
(bad)
mov
imul
or
sub
mov
mov
lods
pusha
push
cli
enter
in
adc
data16
xlat
fdiv
mov
add
jo
dec
rol
out
rcr
push
pushf
jno
int
ds
inc
ins
push
addr16
dec
je
jp
adc
fidiv
push
dec
jle
cmps
xchg
and
xor
fidiv
aam
sub
cmc
daa
pop
(bad)
into
mov
out
mov
fidiv
dec
jmp
jmp
sbb
cmp
sub
jns
xchg
daa
pop
pusha
sub
add
pop
adc
xor
fchs
retf
mov
jae
cmp
mov
jbe
add
int3
inc
lea
movs
mov
shl
loope
xchg
lods
push
add
ss
test
shr
sub
dec
xor
mov
scas
inc
dec
mov
pop
pop
xchg
enter
xor
sahf
inc
and
and
lods
imul
aam
sub
mov
sbb
push
addr16
rol
mov
ds
or
mov
add
pop
sbb
mov
gs
cwde
das
mov
lahf
addr16
cs
pop
fnsave
xchg
and
mov
scas
pushf
mov
xchg
fs
dec
xor
and
stos
xchg
xchg
push
int
repnz
jp
int
(bad)
aad
ins
sub
ret
rol
mov
mov
and
and
adc
in
enter
in
push
cld
pop
jae
outs
mov
cmps
aad
jb
dec
jmp
mov
in
ror
cmp
out
dec
mov
pop
faddp
arpl
fmul
and
ja
or
cmp
lahf
je
test
xchg
iret
add
pop
out
fnstsw
cmovb
not
das
jecxz
cmp
mov
and
in
xchg
push
inc
jmp
or
enter
mov
mov
sar
pop
sub
ins
inc
lods
lock
push
sbb
ja
mov
and
inc
mov
enter
lahf
test
popf
xchg
(bad)
mov
mov
mov
dec
jae
out
(bad)
mov
test
add
add
das
sub
mov
dec
or
add
jge
call
inc
dec
rcl
mov
out
sub
loop
jbe
out
or
ret
xchg
push
mov
jmp
ret
adc
idiv
shr
cmp
jno
inc
bnd
push
ins
adc
or
inc
mov
mov
ret
cmps
mov
stos
cmps
pop
arpl
cdq
into
test
inc
pop
nop
stos
ret
nop
cmc
push
inc
mov
ss
into
jo
loop
add
push
scas
jbe
mov
pop
mov
add
scas
jno
sbb
sub
xchg
or
dec
fild
cwde
gs
mov
rcr
sbb
mov
fs
inc
popa
(bad)
out
test
(bad)
dec
add
adc
loop
shr
pop
mov
cmps
(bad)
fnstcw
shl
push
shl
outs
cli
lods
or
ins
lods
jge
lock
and
sbb
mov
xchg
add
rol
fidivr
sub
mov
sbb
and
div
mov
or
dec
jmp
cwde
lahf
mov
fldcw
mov
xchg
sbb
sbb
xchg
adc
movs
out
test
cmp
retf
movs
or
push
xor
jno
or
or
dec
(bad)
push
jecxz
mov
push
rcr
mov
inc
inc
adc
outs
mov
cwde
rol
adc
loopne
(bad)
adc
loopne
mov
gs
add
out
xchg
popa
push
jle
cmp
pop
outs
push
mov
es
add
jne
mov
dec
(bad)
xor
push
push
cmps
stc
mov
sbb
sbb
repz
dec
std
js
aaa
aad
int
mov
mov
call
or
test
repz
movs
sti
xchg
pop
pop
dec
ds
dec
mov
inc
(bad)
xor
pop
mov
jmp
mov
lea
addr16
and
sar
mov
jmp
mov
cmps
pop
sub
repnz
jns
mov
mov
sbb
in
enter
(bad)
and
fist
jo
jp
in
push
pusha
pop
call
cli
or
inc
in
push
jmp
fcomp
outs
ds
cld
xchg
out
(bad)
out
ss
arpl
cmc
mov
jmp
add
push
mov
pop
daa
jb
and
test
(bad)
jl
sub
hlt
pop
cmps
std
sbb
fdiv
sub
js
out
ret
inc
adc
or
jb
cmp
mov
adc
mov
scas
(bad)
hlt
stc
aas
or
sbb
pop
imul
iret
rcl
test
sar
movs
clc
pop
sbb
ja
jmp
xor
int3
fcmovbe
dec
and
fs
inc
adc
and
pop
sub
pop
dec
sub
les
jecxz
and
and
fwait
jecxz
(bad)
sbb
adc
xchg
xchg
test
in
daa
and
push
mov
test
pop
rcl
mov
pop
pusha
nop
mov
xor
and
pusha
addr16
data16
jns
jb
(bad)
fyl2xp1
sub
adc
dec
inc
stos
lea
ret
dec
jnp
es
sbb
cdq
adc
add
mov
cs
jle
jae
gs
cmp
add
retf
mov
sti
sub
pushf
sub
sbb
cmps
add
mov
cdq
loop
stos
int3
push
inc
out
hlt
mov
ficom
in
jmp
xchg
xchg
jle
inc
popa
sub
xchg
out
push
pop
(bad)
(bad)
jmp
mov
fcmovnb
pop
in
scas
cli
les
xchg
adc
lock
xor
sbb
repnz
aas
(bad)
xor
aam
adc
sub
ss
pusha
dec
push
(bad)
dec
or
dec
nop
mov
xor
iret
pop
mov
cmp
pop
push
jle
jb
mov
or
inc
rcl
rol
jbe
mov
mov
pop
repz
lea
jo
or
aad
and
or
test
int3
jle
push
xchg
xchg
mov
mov
add
inc
clc
fld
add
(bad)
hlt
or
pop
pop
adc
mov
push
pop
push
aam
xchg
or
pop
mov
test
sbb
movs
or
xor
mov
or
cwde
push
sub
push
xchg
dec
retf
sub
push
out
cld
push
icebp
movs
int3
fild
and
(bad)
aas
enter
out
xchg
cmp
int
pop
push
cmp
cwde
and
je
adc
pop
adc
outs
xchg
mov
mov
and
inc
push
retf
or
add
and
add
adc
jmp
fidiv
into
test
test
sub
in
ins
xchg
mov
ret
jae
stos
add
mov
or
cmp
sbb
test
scas
enter
mov
mov
clc
je
jg
adc
in
(bad)
shr
rcl
xor
or
mov
rcl
mov
sbb
jmp
dec
adc
ret
call
fst
dec
dec
xchg
cwde
mov
(bad)
fcomp
inc
dec
cmp
mov
inc
fwait
enter
idiv
pop
leave
je
lahf
jmp
jnp
aaa
cmp
ds
pusha
sahf
je
pop
lock
add
mov
and
push
stc
cdq
std
push
sbb
test
sar
mov
call
xor
outs
push
popa
mov
and
in
cwde
jmp
pop
mov
pop
ret
nop
xor
std
ins
pop
retf
inc
or
(bad)
adc
loop
pusha
cmp
lds
mov
ja
popa
aaa
cli
popf
push
ds
mov
xchg
inc
inc
lock
jbe
mov
mov
xchg
sub
push
hlt
jne
jnp
pop
aaa
arpl
sub
push
mov
rcl
ret
mov
mov
out
mov
aaa
jno
xor
xchg
ja
cmp
out
lock
mov
mov
and
int
lods
adc
push
repz
out
neg
bound
test
adc
push
arpl
aaa
je
mov
push
repnz
inc
in
xchg
aad
inc
add
jns
and
aaa
or
das
push
cli
or
xchg
stos
fdiv
cmp
mov
or
stos
mov
inc
lds
sub
push
fs
aam
retf
arpl
inc
int
(bad)
test
div
mov
in
mov
ds
dec
in
and
push
mov
lds
mov
jp
test
test
add
nop
cmc
aam
mov
pop
jmp
xlat
neg
jge
daa
int
into
inc
mov
sbb
push
popf
cwde
ret
inc
imul
or
jne
adc
mov
or
lods
call
and
or
mov
shr
mov
cmp
adc
movs
adc
stos
shr
or
in
jns
xchg
cmps
or
out
ror
mov
pop
dec
push
adc
lods
inc
(bad)
out
(bad)
and
mov
sub
jne
pushf
or
lods
(bad)
pop
loopne
fs
aaa
fcomp
pop
rcl
jmp
adc
jne
scas
ja
push
jp
loope
dec
sbb
jp
push
fwait
cmp
push
sti
scas
(bad)
mov
iret
mov
jle
pop
and
pop
pop
or
in
test
mov
cli
call
sbb
dec
enter
hlt
inc
push
push
jbe
ret
(bad)
jmp
jae
js
and
adc
adc
lods
cmps
jecxz
mov
repz
push
jmp
aas
jmp
or
and
dec
xor
fldlg2
push
jge
sbb
push
movs
popa
aas
inc
outs
dec
pop
mov
fiadd
jne
jae
push
fadd
mov
cmps
fisub
jne
mov
push
xor
pusha
or
mov
in
inc
pop
out
adc
xchg
(bad)
adc
push
clc
je
cmps
mov
cmps
mov
cmp
xor
clc
and
sub
pop
data16
mov
or
icebp
imul
ins
push
or
inc
in
adc
idiv
cwde
push
jo
sbb
jo
add
pop
cmp
adc
retf
cmp
in
pop
sbb
stos
clc
scas
stos
jecxz
in
mov
mov
pop
jns
xchg
addr16
pop
xlat
sub
je
push
(bad)
mov
pop
pop
xchg
adc
xchg
ja
xchg
inc
je
jl
clc
sub
jne
xchg
into
jmp
jns
movs
(bad)
push
retf
imul
pop
test
jne
adc
ret
xchg
mov
aam
or
jns
fidiv
jnp
loope
dec
mov
clc
mov
inc
int3
inc
div
and
icebp
mov
mov
cwde
xchg
in
bound
lea
shr
sar
rcr
adc
icebp
lahf
or
iret
pop
and
xchg
int
(bad)
shr
out
test
cmp
push
dec
or
test
jp
adc
xchg
fbstp
cmps
outs
(bad)
cmp
(bad)
in
jp
nop
xlat
pop
nop
sub
adc
mov
mov
jp
in
mov
cmp
push
cmc
pop
push
sti
ret
xchg
mov
scas
ret
ror
add
bound
sahf
adc
jb
ss
out
or
shl
outs
lock
mov
push
in
add
pop
dec
and
push
lods
bound
inc
push
sub
or
sbb
loop
lock
ret
pusha
jg
mov
cmp
jmp
jbe
xchg
ds
pop
mov
popa
jl
in
and
gs
div
mov
mov
je
or
outs
xchg
mov
add
enter
movs
add
cld
out
sbb
xchg
lods
or
dec
or
pop
mov
data16
je
stos
mov
adc
stos
dec
inc
mov
push
inc
call
lahf
popa
aaa
mov
or
mov
cli
cmp
jnp
and
in
icebp
pop
pop
sub
mov
or
mov
pop
inc
popf
pusha
and
ret
je
es
(bad)
test
fwait
adc
adc
popf
out
dec
pop
jno
shl
mov
and
cs
hlt
jge
imul
pop
lea
push
pushf
scas
sbb
scas
dec
int3
movs
data16
sbb
clc
lods
sbb
lahf
add
cmp
dec
mov
inc
clc
mov
pop
sub
dec
sub
rcr
adc
pushf
clc
xchg
ficom
fdivr
daa
adc
jmp
bnd
int
inc
jmp
dec
pop
jmp
test
gs
xchg
imul
pop
cmp
mov
xchg
fist
cmps
xor
std
sbb
imul
mov
popa
out
push
dec
(bad)
xor
mov
in
cmc
ja
jp
mov
pop
test
sub
outs
aad
push
out
scas
cdq
jmp
(bad)
int3
xor
pop
test
dec
pop
fistp
jns
push
sbb
xor
(bad)
cmc
xlat
lock
cli
pop
sub
and
dec
ficomp
sub
add
inc
xor
sar
neg
xchg
cmp
push
push
inc
and
jns
imul
mov
xor
dec
loop
cs
rcl
cmp
mov
sub
and
iret
mov
lsl
jnp
scas
mov
mov
sub
out
xchg
inc
inc
(bad)
sub
mov
into
ret
out
pop
dec
mov
arpl
xchg
mov
ret
add
add
and
ds
mov
fisubr
jno
stc
test
mov
icebp
push
out
int3
cmps
xlat
jge
into
test
movs
cld
daa
lods
cmp
dec
mov
sub
mov
mov
and
jnp
inc
inc
push
push
pushw
lock
movs
lahf
je
fld
movs
xchg
aas
cli
fisub
test
imul
cld
mov
movs
dec
xchg
cmp
scas
jb
mov
mov
popf
push
(bad)
mov
mov
jno
and
jo
scas
ret
mov
jns
mov
jo
jnp
cwde
sbb
mov
arpl
mov
mov
imul
push
in
adc
out
outs
popf
push
aam
pushf
and
mov
pusha
sub
mov
add
stos
jae
jo
in
push
pop
cs
pop
inc
mov
jbe
cmp
inc
lods
cmovbe
fdivr
cld
xor
pop
or
repz
push
and
cmp
je
fmul
outs
arpl
xor
mov
in
mov
or
leave
pop
lods
mov
xchg
or
sub
mov
sahf
push
shl
sbb
dec
push
call
sub
mov
clc
pop
scas
jp
(bad)
ret
std
jecxz
rol
outs
sbb
nop
or
mov
dec
mov
inc
enter
push
sbb
fist
test
add
or
sub
aam
lods
sbb
std
pop
cdq
hlt
mov
aad
test
add
sub
ficomp
sbb
xor
mov
adc
popa
jmp
xor
retf
sahf
add
in
fwait
shl
ins
xchg
test
cmp
push
mov
in
jo
test
mov
test
dec
lea
push
aas
sub
adc
inc
dec
imul
jg
fmulp
sbb
ins
mov
pop
sahf
inc
inc
aam
repz
adc
in
fiadd
xchg
mov
dec
(bad)
aad
sbb
iret
pop
sbb
sti
ins
pop
sub
lahf
push
in
mov
cmps
and
call
call
and
(bad)
or
repnz
add
push
jle
ud1
dec
test
or
in
ret
xchg
mov
adc
xor
(bad)
loope
cmp
imul
aaa
mul
inc
fild
inc
jle
mov
(bad)
cdq
inc
fld
jbe
inc
repnz
(bad)
leave
mov
mov
pop
adc
dec
inc
shr
and
push
xchg
out
movs
(bad)
mov
mov
enter
out
inc
xchg
mov
fsub
add
ds
pop
adc
pop
sub
sub
scas
out
jp
inc
cli
sub
fwait
cli
or
fsub
cld
and
in
xchg
and
fld
or
movs
sahf
lock
dec
xchg
js
jno
pop
hlt
stos
mov
es
dec
inc
mov
out
or
inc
or
xor
ins
push
cmp
dec
test
frstor
lds
lea
inc
mov
ss
xchg
sbb
lods
enter
stos
or
in
mov
push
mov
jmp
inc
ret
and
frstor
or
cmp
aas
popf
mov
and
mov
jmp
dec
mov
mov
in
xor
xchg
fbld
mov
inc
mov
pushf
adc
repnz
out
popa
addr16
adc
clc
icebp
fnstcw
fstp
xchg
xlat
jecxz
test
mov
sub
iret
inc
(bad)
and
add
xchg
xchg
mov
xchg
mov
add
ins
rol
out
add
adc
(bad)
mov
xchg
pop
mov
sti
mov
xor
(bad)
fbld
cmp
mov
dec
cmps
inc
inc
push
xor
loop
test
mov
test
(bad)
das
aad
cmc
cmp
mov
inc
and
(bad)
jns
fistp
outs
stos
pop
inc
div
repz
ret
sbb
mov
loop
jecxz
or
push
xchg
adc
movs
cdq
jge
fucomip
pop
addr16
fistp
xchg
out
push
rcr
cwde
fisubr
imul
pop
in
jo
jae
xchg
or
mov
mov
pop
mov
push
in
mov
ins
loope
dec
in
dec
pop
scas
test
mov
outs
loope
test
mov
xchg
rcl
gs
nop
imul
xchg
jns
pop
pop
paddusb
lds
sbb
adc
movs
fwait
sub
mov
lds
nop
jne
xor
inc
lods
mov
xchg
les
inc
rcr
jo
test
movs
sti
sbb
and
push
in
(bad)
sbb
inc
sbb
jo
pushf
outs
pop
push
or
lock
add
cmp
push
mov
or
(bad)
sbb
mov
scas
fld
or
push
outs
cmp
push
sbb
mov
mov
add
push
ins
shl
push
js
pushf
mov
inc
push
xchg
lds
sbb
rcl
call
sbb
jo
hlt
add
push
sub
dec
cmps
cmp
inc
push
fiadd
add
sub
jmp
xchg
cwd
fdiv
sub
cmp
and
cmp
lea
cs
repz
inc
fsubr
cli
fwait
imul
ret
dec
xchg
dec
inc
jl
into
(bad)
mov
cmp
inc
sti
loop
and
retf
mov
cmp
mov
test
mov
bound
xor
ja
clc
xor
xlat
or
and
outs
mov
mov
push
inc
jge
jns
and
push
sub
icebp
push
add
push
popa
(bad)
mov
push
cmp
(bad)
adc
stc
mov
push
div
test
(bad)
out
and
std
test
or
dec
pop
(bad)
xchg
mov
and
pop
inc
fdivr
pop
mov
repz
mov
fild
xchg
xchg
add
outs
lds
outs
cmps
imul
push
pop
cs
add
jl
xchg
pop
fs
stos
add
shl
and
shl
icebp
jo
(bad)
mov
or
xlat
ret
add
jmp
push
inc
rol
stos
mov
mov
adc
sbb
sbb
fucomip
fld
hlt
test
or
inc
clc
jbe
dec
mov
xchg
pop
daa
cmp
enter
xlat
repz
adc
test
mov
push
out
adc
mov
inc
push
std
sbb
in
cmp
cs
les
cdq
scas
push
out
out
mov
cmps
mov
fsub
dec
inc
mov
xor
sahf
cdq
in
popa
stos
(bad)
outs
adc
mov
fldenv
jnp
jge
sbb
xchg
mov
mov
xchg
rcl
retf
push
sub
mov
test
cmp
sbb
jg
neg
cwde
and
xor
out
sti
xchg
lods
add
adc
xchg
imul
ret
cdq
dec
fimul
lods
lea
out
mov
into
jmp
movs
inc
adc
or
xchg
sbb
ins
mov
push
sub
xlat
mov
pop
jo
sbb
aas
mov
pop
outs
lea
sub
jb
(bad)
js
pop
mov
xor
aaa
out
inc
cmp
inc
lods
mov
cmp
mul
mov
call
in
cmp
xor
out
imul
xchg
cmps
fcmovb
fld
cmp
or
sar
imul
cs
out
fwait
sbb
add
imul
jae
mov
pop
push
jecxz
fist
push
mov
daa
or
mov
cmps
jmp
push
add
push
les
(bad)
sub
jmp
sub
fldenv
sbb
mov
xlat
push
mov
push
xor
shl
pop
(bad)
push
sar
push
es
and
pusha
int3
mov
or
inc
in
and
xor
adc
and
push
in
loopne
(bad)
out
and
mov
out
in
jmp
bnd
push
and
fiadd
ret
add
mov
cmp
dec
addr16
add
shl
mov
mov
push
push
dec
xchg
div
pop
cmps
loop
fdivrp
pop
mov
retf
imul
mov
data16
test
mov
or
aad
fwait
mov
add
fs
cwde
mov
and
call
sub
or
fcmovbe
loope
inc
add
push
icebp
push
stc
jnp
ror
pop
dec
push
std
js
xor
lods
push
cmp
adc
cmp
xor
je
mov
sahf
xchg
arpl
jle
cmp
fbld
imul
push
ficomp
xchg
mov
cdq
retf
xchg
or
sub
inc
dec
(bad)
sub
lahf
adc
loope
jns
lahf
jb
sar
lea
stos
xor
idiv
movs
or
int
outs
in
ds
jge
daa
cmps
das
ja
lds
sub
and
es
sbb
outs
(bad)
aas
imul
jle
cmp
mov
and
(bad)
das
mov
and
mov
addr16
jns
xchg
adc
and
mov
ret
cmp
lahf
int
repnz
shl
sub
scas
push
mov
pop
outs
xchg
in
adc
outs
ins
int3
gs
jne
mov
out
xchg
leave
mov
push
sub
jno
addr16
repz
xor
fimul
jno
jne
je
add
inc
mov
cmp
rcr
out
pop
clc
clc
or
push
outs
xchg
dec
push
ficom
int
jmp
jnp
ins
jg
loop
in
lea
icebp
jmp
mov
out
(bad)
jp
cmp
outs
popf
(bad)
aam
mov
cmp
cmp
pop
clc
pop
iret
ja
loop
or
mov
ja
dec
(bad)
adc
pop
lock
call
adc
in
mov
outs
mov
div
inc
mov
lods
imul
outs
sub
jl
or
inc
mov
adc
jmp
push
cmp
fs
cmp
jb
mov
add
fnstcw
aad
fucomip
cmp
pop
shr
rcl
push
cmp
mov
adc
ja
sub
outs
cmp
sti
cmc
push
jp
repz
push
je
leave
test
ret
and
int3
loope
popa
mov
add
mov
out
mov
cmps
jmp
and
sbb
and
loopne
fwait
jg
(bad)
or
and
xchg
aaa
ds
jnp
jecxz
push
jle
mov
movs
jecxz
clc
inc
ins
inc
cwde
xchg
(bad)
xor
jne
fmul
push
pop
loope
or
out
ret
imul
bound
out
jno
(bad)
jbe
mov
test
ja
sbb
push
sahf
rcl
movs
dec
call
enter
std
sbb
jle
ror
mov
ins
jp
fbld
jnp
xchg
jmp
std
fstp
cmc
add
xchg
mov
scas
or
outs
cmp
scas
shr
and
pop
xor
adc
fimul
xor
mov
push
pop
jmp
div
adc
xchg
les
inc
dec
xor
add
popa
stos
jmp
nop
xchg
pop
loop
pop
rcr
sbb
xor
out
inc
or
jl
pop
call
dec
rcr
stos
cld
cld
ret
pusha
sbb
inc
test
sub
jmp
push
(bad)
ja
and
out
ins
lock
test
sbb
(bad)
jae
cmp
add
adc
not
push
jnp
cwde
or
sub
mov
jecxz
test
mov
ds
push
xchg
jmp
shl
out
push
dec
outs
jb
out
(bad)
xlat
adc
fmul
mov
sahf
push
fdivr
test
jge
(bad)
jo
(bad)
ret
dec
or
lahf
mov
test
adc
scas
pavgw
push
mov
je
or
inc
scas
sbb
sub
cmc
(bad)
pop
dec
mov
adc
popa
leave
fiadd
nop
std
jmp
mov
dec
movs
sti
sub
lods
mov
or
or
cld
sub
rol
cwde
adc
mov
leave
and
or
mov
jns
fbld
mov
rcl
inc
jnp
adc
out
out
pushf
push
add
push
dec
jg
loope
dec
mov
leave
xchg
inc
adc
mov
ret
mov
stc
mov
or
xchg
xchg
bound
(bad)
js
fwait
pushf
test
sub
mov
gs
xor
and
inc
fidiv
fldcw
cmp
aaa
or
mov
push
or
inc
or
mov
push
pop
nop
jle
popa
sahf
push
popf
xchg
and
or
or
and
push
xchg
jnp
or
xor
inc
xor
xchg
add
pop
das
jne
test
loope
mov
sbb
mov
ins
cmp
jne
cmc
cmp
mov
add
inc
es
sub
sbb
sahf
(bad)
sbb
xlat
push
push
es
outs
rol
not
fcmovnbe
dec
inc
ror
icebp
(bad)
jle
jecxz
push
mov
jnp
fwait
rol
test
and
and
cmp
adc
mov
cmp
in
jp
nop
jo
ins
in
pop
jns
push
repnz
adc
mov
shl
push
js
leave
sbb
pop
ret
aam
add
mov
add
outs
xor
mov
sub
xor
js
jne
jmp
in
aam
pop
icebp
xchg
or
cmps
daa
jmp
cmp
out
mov
mov
dec
mov
jnp
add
loope
inc
push
inc
sub
push
cmps
daa
std
das
out
(bad)
or
sbb
fstp
jno
pop
dec
repnz
xor
jmp
rcr
inc
add
in
stos
call
mov
les
cmp
shr
sbb
ror
std
sbb
and
xchg
mov
jg
push
mov
cmc
mov
mov
pavgw
out
cmps
cmp
leave
cmp
fbstp
sahf
jmp
lds
xchg
sbb
inc
mov
lds
iret
xor
cmc
jo
div
mov
cs
sub
arpl
lods
jg
xor
ins
je
xchg
movs
aad
push
xchg
movs
mov
in
adc
xchg
ror
scas
sbb
sub
call
inc
in
push
cmp
mov
in
inc
jnp
fsub
jne
test
jmp
mov
call
adc
add
loop
cwde
push
daa
sbb
sub
cli
sar
test
call
loope
pop
(bad)
mov
cwde
(bad)
jl
movs
shl
mov
mov
and
leave
mov
jle
(bad)
push
stc
call
jl
add
repz
push
imul
scas
test
push
mov
stc
push
and
out
test
mov
sbb
retf
dec
(bad)
sti
inc
daa
xor
mov
mov
dec
or
cmc
mov
ss
mov
jmp
sbb
mov
je
sahf
loop
inc
jmp
jo
gs
mov
mov
jmp
mov
rol
out
fistp
lods
pop
fucom
sti
inc
push
ds
sbb
imul
aaa
in
pop
scas
ret
out
pop
add
mov
gs
scas
and
jg
mov
add
fst
xchg
das
xor
cmps
dec
push
cmc
lahf
ret
inc
cwde
dec
js
xor
push
sbb
and
repnz
or
sub
push
mul
inc
mov
ds
cli
sti
xor
ret
into
imul
sub
jb
in
js
rol
push
sub
or
(bad)
jo
cmp
(bad)
xor
xor
fs
or
in
fild
(bad)
fisttp
push
jo
pop
mov
mov
cdq
test
dec
retf
or
dec
xchg
out
sbb
inc
lahf
xor
shl
(bad)
mov
rcr
daa
jae
in
icebp
lea
mov
add
xchg
call
jl
and
sub
xor
mov
fstp
ja
dec
mov
push
push
pop
fsub
jle
and
cdq
jge
lock
or
sub
pop
dec
into
movs
test
xchg
mov
xor
or
sbb
mov
sub
(bad)
ins
dec
jae
cmp
or
ss
jnp
mov
cmps
mov
jb
stos
cmp
shr
and
pop
xlat
inc
jg
mov
jecxz
fsub
and
rol
ficom
aad
lea
pop
sub
sub
adc
imul
in
mov
xchg
cmc
iret
cdq
add
inc
shl
sar
dec
cmps
xchg
xor
cmps
mov
mov
and
fimul
adc
gs
ret
pop
jo
pop
sbb
jge
(bad)
add
ins
jp
inc
mov
sbb
push
jb
enter
jnp
xor
pop
rcl
in
fcomp
je
xchg
stos
pop
arpl
dec
fdiv
mov
mov
sub
xchg
jbe
add
fwait
pop
scas
dec
sti
lock
enter
inc
pop
jle
pop
aas
sub
mov
(bad)
pop
jae
out
sub
xor
shl
iret
inc
push
fld
push
imul
or
mov
clc
dec
cmps
popa
mov
push
sub
ins
outs
fs
mov
sub
lods
xor
out
mov
cmp
or
cmp
pop
mov
sub
jb
aad
pop
xchg
or
stc
jmp
pop
jecxz
sbb
push
pop
pop
int
call
lds
mov
pop
dec
ins
add
sbb
stos
mov
dec
mov
cmp
mov
xlat
jns
mov
sub
pop
xchg
outs
sub
(bad)
in
cmp
daa
mov
ja
mov
mov
jecxz
push
imul
mov
aam
lods
inc
jo
ret
loop
leave
retf
ror
sbb
test
or
cwde
dec
jo
pop
sahf
push
imul
inc
fiadd
xchg
rcl
aam
xchg
movs
shr
fidivr
fwait
jnp
les
in
sbb
xchg
sahf
rcl
mov
dec
mov
call
ror
pop
movs
adc
(bad)
xchg
sbb
xchg
mov
jmp
cli
or
dec
cmp
inc
lds
into
mov
mov
ror
ins
outs
xchg
mov
cmp
and
fist
push
push
xor
sub
sub
clc
adc
xchg
mov
mov
je
add
je
or
xor
movs
dec
mov
(bad)
cmp
pop
mov
xlat
ins
jae
jle
(bad)
pop
mov
and
stos
sub
pop
addr16
add
loopne
xchg
rcr
mov
dec
in
cmc
imul
cmp
dec
xchg
or
inc
mov
jl
sub
rol
inc
pop
mov
inc
mov
int
aad
pop
and
pop
loop
fld
scas
icebp
fmul
push
cmp
js
outs
inc
lahf
mov
inc
xchg
mov
mov
jmp
xor
cmp
data16
int
sar
mov
fcmove
add
loope
cmp
out
stos
imul
fs
(bad)
xchg
(bad)
dec
aas
int3
out
call
mov
movs
fwait
clc
mov
jmp
jnp
mov
pop
fwait
cmps
pop
daa
mov
cmp
xor
jl
mov
lods
lods
ja
sub
int
iret
mov
xchg
or
outs
xor
push
mov
cli
ja
cmovs
xchg
xchg
push
cdq
jg
sub
mov
xchg
outs
leave
cmp
jge
xor
ja
or
inc
and
add
into
mov
sbb
mov
pushf
jmp
pushf
lea
or
pop
retf
pop
or
adc
adc
mov
adc
leave
sbb
mov
jp
rcr
pop
dec
push
sub
sub
pusha
dec
imul
fs
jae
pop
inc
fisttp
mov
daa
mov
jge
mov
test
add
push
ret
sub
(bad)
mov
xchg
mov
sbb
ret
mov
(bad)
enter
mov
jno
(bad)
paddd
inc
cmps
sub
inc
cmp
repnz
mov
retf
gs
call
pop
(bad)
inc
or
aaa
mov
or
pop
je
jl
jg
and
out
fstp
jnp
shl
fistp
pop
ins
adc
lock
ret
jl
dec
bound
lea
fadd
add
outs
or
test
rol
push
iret
and
mov
icebp
inc
cmps
ret
movs
aam
jne
push
repz
jnp
sar
call
and
add
or
cmp
sub
mov
mov
cli
xor
fsubr
add
call
jo
leave
sub
xor
jns
add
mov
dec
out
hlt
sbb
dec
sti
loop
dec
leave
cwde
xchg
nop
mov
aam
jmp
scas
gs
jmp
cmp
inc
dec
in
js
adc
fbld
scas
or
inc
jmp
cmc
mov
mov
mov
dec
gs
int
pop
fisttp
add
repnz
pop
cld
ja
dec
and
test
out
add
test
out
loopne
xor
(bad)
dec
rcr
pop
pop
jmp
add
pop
pop
fnsetpm(287
inc
cmps
pop
jl
in
std
imul
jge
ins
dec
pop
rcl
shl
adc
es
and
and
inc
cli
dec
dec
and
dec
and
in
mov
dec
fdiv
leave
mul
xchg
cmp
shr
and
ror
hlt
pop
neg
stos
add
and
repz
popf
test
into
mov
or
retf
or
push
cmp
pop
addr16
xor
add
sub
cmp
sar
sbb
push
mov
inc
out
jmp
(bad)
pushf
xchg
jmp
mov
push
sti
inc
(bad)
fsub
stos
and
test
fs
push
cmps
xor
outs
or
cmps
xor
adc
shl
dec
mov
push
sub
les
mov
cmp
sub
pop
push
inc
jns
and
fs
aas
fldcw
adc
xor
sbb
mov
mov
sahf
jmp
and
xor
fdiv
mov
jns
mov
pop
loop
mov
mov
scas
and
aas
ss
add
loop
and
cdq
pop
cmps
jge
mov
and
or
call
call
out
xor
pop
js
push
stos
mov
scas
jg
jmp
arpl
test
lods
push
jmp
lahf
cmps
pop
add
je
dec
scas
ins
and
dec
sub
imul
(bad)
es
je
or
repz
sbb
mov
jle
xchg
rol
rol
ror
imul
gs
cmps
jmp
jns
gs
ja
push
push
rcl
ins
adc
sub
imul
jo
out
ror
sub
pop
push
pop
outs
daa
fiadd
movs
call
xchg
imul
loop
pop
xchg
bswap
adc
clc
adc
and
mov
in
and
sbb
ud0
mov
add
test
jns
jmp
out
mov
dec
fs
fcom
or
pushf
mov
mov
pop
adc
ins
xlat
add
pop
movs
lahf
and
push
test
imul
outs
stos
loope
jb
cmp
xchg
and
jae
fild
in
mov
mov
sbb
(bad)
cdq
popa
ret
jl
or
sub
dec
sub
mov
outs
iret
sti
xchg
punpcklbw
adc
mov
xchg
xor
fs
or
call
xlat
push
shl
pop
adc
scas
push
fadd
stc
sbb
push
(bad)
movs
repz
out
mov
mov
dec
mov
and
xor
cmp
inc
rcl
aam
les
dec
mov
int
push
pop
mov
sbb
in
cld
rol
push
inc
add
xor
cmp
push
or
and
test
jge
xlat
inc
push
cld
mov
pop
lds
push
inc
xchg
sub
adc
sub
std
inc
cs
fwait
sti
cmp
pop
nop
(bad)
sub
dec
movs
lahf
jns
inc
push
jb
lahf
mov
mov
pop
mov
into
fs
jns
shl
mov
sub
pop
mov
out
mov
es
push
dec
adc
out
fisubr
movs
and
mov
mov
xor
imul
(bad)
jns
cs
fs
xor
stc
xchg
push
xor
loope
cld
mov
outs
call
push
xchg
in
sbb
sbb
das
cs
pop
imul
cmp
cmp
inc
iret
jecxz
js
sub
pop
arpl
sti
mov
mov
cmp
xor
mov
xor
(bad)
fistp
stc
ret
in
push
xor
outs
data16
or
inc
shl
or
adc
stc
inc
sahf
xor
jmp
pop
jbe
pop
dec
inc
mov
shl
mov
icebp
mov
out
pusha
inc
mov
pop
push
aad
out
mov
xor
fwait
push
aaa
js
into
xor
jmp
push
fdivr
xor
push
loope
dec
sub
movs
adc
psubw
sub
push
inc
retf
pop
mov
inc
jecxz
and
addr16
pushf
mov
sbb
(bad)
ss
adc
retf
data16
cmps
inc
popf
movs
mov
inc
sub
loopne
les
push
adc
pushf
test
aad
or
adc
sbb
dec
dec
push
fnstcw
jb
fisub
mov
pop
jg
xor
leave
lds
mov
ins
mov
xor
adc
push
sahf
push
mov
or
inc
call
data16
enter
xchg
ins
and
pop
jbe
shl
bound
sbb
pop
out
loopne
push
cmp
cmc
add
mov
and
cmc
dec
xlat
xor
stc
stos
cmp
add
xor
loop
mov
sbb
push
mov
stos
sub
xchg
xchg
(bad)
adc
push
add
fcmovb
add
sub
loope
pushf
fnstsw
fcmovu
into
and
pusha
not
mov
cmc
fbld
mov
xlat
fcom
jle
mov
xchg
pop
or
lods
xor
dec
jns
push
test
das
aam
and
jo
arpl
or
fst
int
(bad)
xor
push
sbb
in
mov
icebp
xor
sbb
mov
mov
jbe
pop
inc
dec
stc
(bad)
scas
sub
scas
dec
aam
data16
les
repz
int3
es
xchg
outs
xor
aam
mov
arpl
outs
popf
ret
out
push
jae
adc
div
push
ret
out
lods
movs
stos
or
aas
cmps
pop
mov
or
(bad)
jl
aam
cmp
dec
stos
pop
adc
nop
sub
mov
xchg
les
sbb
(bad)
out
mov
shr
shl
leave
dec
and
mov
test
jl
xchg
sbb
inc
xchg
pop
push
adc
mov
dec
lds
mov
retf
cli
aaa
outs
std
adc
xor
xor
push
add
pop
add
pop
out
inc
(bad)
in
rcr
or
cwde
add
dec
and
xchg
popa
je
scas
and
xchg
fdiv
ss
gs
jmp
sbb
jl
cmc
mov
dec
pop
lahf
add
int3
xchg
and
lahf
pop
cdq
jae
cmp
into
popa
imul
imul
call
mov
repz
pop
repnz
mov
sbb
and
xor
fnstcw
jne
test
sbb
mov
cmp
test
fistp
popa
jmp
sti
icebp
mov
push
shl
jp
out
sbb
dec
scas
int3
and
xchg
test
and
xchg
pop
ret
jmp
cmp
push
and
ret
fisubr
push
(bad)
xchg
inc
mov
stos
repz
and
sbb
and
scas
adc
mov
sar
pop
ds
cli
icebp
inc
cmp
js
popa
dec
inc
fcomp
cdq
fs
xchg
mov
or
sub
arpl
jecxz
icebp
bound
xchg
call
fcomp
adc
inc
xor
adc
and
push
and
sbb
sbb
in
test
xor
or
and
mov
cmp
or
mov
jg
sbb
shl
out
fld
std
xor
in
ds
cmp
iret
push
scas
shl
adc
mov
pop
pop
dec
cld
shl
ss
retf
mov
addr16
je
xchg
push
int
shr
or
xchg
addr16
retf
xchg
inc
das
jg
fimul
or
enter
pop
xchg
push
daa
push
mov
mov
and
fnsave
inc
jg
mov
sbb
xor
and
ror
or
shl
and
cmp
lds
xchg
idiv
cld
xor
push
or
call
mov
mov
add
pop
push
movs
daa
mov
jne
add
repnz
dec
xchg
cmps
lds
mov
popa
add
fnsave
mov
rol
pusha
sub
leave
(bad)
mov
cmps
mov
movs
inc
lea
dec
cli
jle
sti
mov
mov
xor
sti
retf
jmp
int3
jge
xchg
lods
pop
sbb
mov
fild
push
aas
loope
and
mov
stos
inc
pop
cmp
pop
mov
push
int
out
cmp
xchg
and
dec
xor
jno
repnz
mov
pop
add
fild
in
je
loop
mov
fmul
mov
stos
push
cld
idiv
cdq
test
and
neg
or
sub
inc
xchg
mov
fldcw
int3
ficom
rcl
and
sbb
loope
add
out
frstor
add
js
cli
jg
loop
xchg
ds
or
and
pop
push
test
jo
cmc
aam
and
or
mov
into
mov
cdq
dec
ror
in
in
repz
fldcw
push
xchg
mov
out
and
mov
pop
neg
(bad)
xchg
push
and
mov
xchg
xchg
pop
jno
jle
cmp
push
call
(bad)
aad
test
lods
pop
cld
ins
or
push
cmp
rcr
pop
ss
loope
test
inc
ret
or
shrd
pop
fnstcw
cmp
mov
dec
pop
sub
cli
popa
ds
imul
mov
movs
lock
pop
rcl
sahf
loope
mov
stos
sub
test
retf
lods
push
sub
xchg
sub
sbb
rcl
add
repnz
mov
adc
mov
icebp
and
gs
mov
mov
(bad)
out
add
adc
out
jge
dec
(bad)
cmp
dec
sti
ins
dec
mov
push
stc
push
and
inc
xor
out
fcomip
jo
pusha
lea
in
cmp
xor
scas
adc
and
les
pop
fnstsw
fcom
and
repnz
in
cmp
js
mov
mov
popf
es
mov
sbb
jb
adc
xchg
pop
mov
lock
in
lock
and
sub
sbb
aam
outs
mov
repz
iret
popa
stos
cmps
jmp
and
cmps
adc
mov
outs
jmp
dec
pop
pop
xor
adc
std
inc
ret
pusha
call
pop
jnp
jns
lods
or
jmp
jmp
mov
retf
daa
jbe
sub
arpl
js
jmp
stc
into
rcl
mov
outs
pop
pushf
adc
sar
pop
jmp
mov
add
mov
lods
dec
scas
and
stc
sbb
or
loopne
js
sar
clc
(bad)
fs
mov
(bad)
push
cmp
aas
mov
sbb
push
cli
loop
cmp
pop
inc
jne
test
or
aad
sahf
sub
mov
sti
rol
pop
fprem1
ss
aaa
jno
les
js
inc
icebp
jns
push
mov
push
sub
push
pop
int3
or
idiv
(bad)
jbe
jnp
std
enter
mov
popa
es
dec
ins
cmps
sbb
pop
nop
int3
movs
ror
jle
inc
pop
enter
xchg
out
shl
or
and
jne
je
cmp
call
addr16
xor
popa
pop
imul
adc
pop
and
call
bound
in
sub
xchg
inc
xchg
jbe
cmp
adc
ret
imul
sbb
loopne
stos
call
aad
xchg
std
cwde
mov
fbstp
mov
mov
mov
mov
adc
and
cdq
xor
pop
xlat
ja
and
cmp
ins
jecxz
clc
push
add
not
add
test
sub
mov
push
inc
and
adc
jno
test
leave
bound
ja
jnp
sbb
push
ret
mov
xchg
mov
popa
pop
adc
ret
jae
call
loope
adc
push
add
scas
arpl
cmp
mov
repnz
mov
xchg
mov
cld
mov
sbb
pop
lods
jns
dec
xor
aam
push
shl
xchg
repnz
pusha
(bad)
adc
mov
cmp
lods
push
xlat
leave
arpl
adc
or
xchg
or
sub
(bad)
sub
stc
jmp
mov
jno
cmps
ss
gs
daa
push
fld
mov
xor
push
hlt
mov
xchg
test
push
inc
sbb
loopne
daa
popa
add
fmul
xor
lahf
and
fidiv
ja
xor
arpl
aaa
mov
mov
push
jmp
out
inc
shr
movs
mov
jbe
inc
sbb
in
jecxz
daa
jno
push
ret
xchg
push
fdiv
ja
movs
pop
lds
pop
dec
out
mov
sahf
out
je
ror
or
out
ds
mov
adc
ds
imul
cwde
push
cmc
movs
push
xchg
xchg
std
into
test
push
pop
aam
cwde
cmc
mov
out
or
pop
(bad)
daa
and
jle
lods
push
aaa
pop
(bad)
outs
jg
jno
push
imul
addr16
mov
int3
out
mov
jle
aas
push
outs
mov
scas
dec
dec
ss
pop
repz
jmp
icebp
jg
outs
jmp
push
cmp
jo
pop
inc
lock
enter
imul
cli
dec
fsubr
dec
rcr
pop
pusha
xchg
mov
dec
add
imul
jne
xor
pop
(bad)
fisttp
ins
mov
enter
and
dec
out
xchg
mov
pop
fwait
in
(bad)
ficomp
and
adc
sub
pop
in
jl
mov
call
rcr
fldcw
mov
and
adc
xchg
push
jle
xchg
ret
push
rol
mov
loopne
enter
aas
mov
or
imul
bound
iret
fist
fcomp
ja
shl
cld
scas
mov
xchg
int3
aaa
loopne
icebp
repz
scas
repz
mov
rcr
pop
pop
push
push
repz
leave
or
push
add
jns
sbb
xor
inc
mov
jge
not
jecxz
dec
lds
dec
mov
mov
fistp
jnp
xor
push
rcl
lea
repz
fs
cs
in
clc
iret
sbb
aas
mov
mov
call
loop
mov
push
in
bound
popa
fstp
xchg
or
jle
sbb
std
lock
push
call
and
mov
ja
cdq
inc
dec
mov
sbb
lock
int3
xchg
shr
out
ins
mov
(bad)
or
and
dec
push
pop
test
mov
les
dec
and
sub
stos
mov
femms
rcl
inc
fwait
mov
dec
rcl
imul
into
mov
jmp
out
hlt
xor
sbb
movs
lods
ja
lock
cmc
cmp
cmc
rcr
push
xchg
adc
fcomp
repnz
cmp
xchg
fst
jbe
(bad)
scas
pop
retf
into
icebp
sahf
inc
fisttp
stos
sti
pop
cmps
cmc
out
add
dec
adc
sbb
inc
test
pop
mov
je
xchg
xchg
push
dec
pop
cld
and
jmp
neg
cmps
loopne
cmc
lea
jae
push
xor
fisttp
add
sbb
add
int3
adc
jge
in
stos
sub
retf
(bad)
test
je
push
inc
test
mov
jle
in
mov
jp
or
or
jmp
mov
ror
mov
xlat
test
adc
inc
dec
sub
jbe
or
push
jmp
inc
lods
pop
xchg
jb
xchg
cmps
lods
mov
adc
and
sbb
add
sbb
xchg
lahf
sub
pusha
enter
push
movs
in
mov
cmp
arpl
idiv
pop
test
adc
(bad)
call
div
and
cmps
dec
push
cmp
loope
(bad)
aas
sbb
retf
(bad)
and
jo
popa
mov
imul
pop
pop
push
imul
je
push
xor
pop
or
dec
imul
popf
cmps
(bad)
cli
pop
int
dec
dec
aam
arpl
cs
or
fistp
jp
rcl
xor
xchg
mov
imul
inc
ins
pop
ja
(bad)
mov
pop
mov
dec
sub
cmp
mov
xchg
leave
xchg
sbb
xchg
sub
mov
ds
or
add
lods
sub
xchg
scas
ja
inc
mov
fldenv
add
scas
sub
ja
pop
ror
sti
or
je
cs
repnz
(bad)
or
jae
(bad)
aad
sbb
cmp
test
or
or
fnstcw
push
ins
or
dec
add
dec
push
outs
ret
popf
(bad)
xor
sub
lea
jns
jns
test
cmp
leave
adc
fnstcw
cmp
adc
sbb
loope
jp
clc
lea
xchg
or
sbb
and
sub
cs
leave
dec
(bad)
jbe
fdivr
jnp
stc
inc
scas
add
aad
dec
sub
mov
imul
mov
in
clc
mov
cli
fldenv
cmp
pop
cmp
push
sub
add
wrmsr
cdq
out
mov
xor
lea
ret
out
jns
popa
fadd
jne
mov
pop
pop
inc
mov
dec
retf
int
jo
inc
cmp
loopne
imul
in
mov
cld
mov
shl
dec
cmp
dec
xor
outs
mov
xchg
call
inc
imul
es
cmp
into
leave
sbb
cmp
xchg
mov
push
sub
jno
sbb
and
mov
cmp
outs
call
mov
sub
sbb
stc
pushf
or
dec
jmp
pushf
pop
enter
add
jecxz
add
adc
and
movs
pop
push
add
sti
push
mov
lods
inc
and
test
movs
retf
or
xor
ret
sbb
push
aas
pop
push
shr
push
test
adc
jbe
mov
bound
out
std
push
rcl
push
cmp
xchg
pop
push
pop
dec
je
mov
cli
iret
arpl
gs
jmp
push
scas
pusha
out
outs
js
jl
imul
push
out
sahf
mov
cmp
inc
jmp
cmp
and
sahf
int3
shr
in
sub
ja
xchg
das
add
cmp
push
(bad)
test
retf
cmp
sbb
repnz
jmp
xchg
push
or
dec
adc
pop
leave
stc
out
rcr
out
fisttp
and
fild
clc
pop
pop
jmp
loop
mov
jl
fnstcw
loop
jo
out
sub
sti
stos
scas
cmp
jmp
rcl
adc
clc
xlat
jne
dec
call
lahf
jno
add
dec
repz
jne
call
retf
sar
(bad)
xchg
sub
repz
and
(bad)
repnz
mov
imul
outs
jmp
js
out
dec
mov
sar
out
sub
mov
shr
push
xchg
and
jnp
pop
sbb
dec
jp
retf
dec
imul
push
out
repz
push
lods
jge
(bad)
fidiv
or
ins
sub
ins
loope
and
fistp
not
cmp
jle
pusha
jbe
stos
push
lods
test
push
js
cmp
lods
mov
stos
mov
xchg
push
jae
jno
sbb
mov
jo
scas
sub
loop
enter
fisub
and
fbld
adc
dec
out
cmp
mov
jne
mov
mov
cmp
push
das
add
push
mov
inc
fadd
ror
out
repnz
icebp
(bad)
jne
(bad)
in
inc
inc
mov
lods
sar
push
adc
setge
xor
dec
adc
lods
push
xchg
jl
cmp
hlt
jno
aas
sbb
cwde
fld
cmp
push
jle
sar
cmp
out
fstp
ds
aam
pop
cmp
int
dec
sti
add
or
mov
retf
outs
mov
inc
cmp
test
adc
push
sbb
pop
or
sar
mov
mov
or
fld
inc
lods
or
lea
call
pop
mov
frstor
scas
mov
(bad)
aad
cmps
mov
mov
push
cmp
add
dec
aas
mov
(bad)
cmc
add
outs
xor
jge
mov
or
and
cmp
xchg
icebp
cmp
iret
cmp
inc
mov
or
pop
je
sar
sbb
test
std
mov
stc
cmp
mov
cdq
push
and
jge
aad
movs
(bad)
loope
inc
rcr
mov
jns
fsubr
jmp
je
inc
(bad)
and
enter
imul
sub
scas
fs
jnp
pop
cdq
mov
push
xlat
sahf
sub
ins
jb
mov
les
fisub
push
stos
ins
sub
jns
push
sub
add
cmc
cmp
aaa
cld
xchg
mov
ror
inc
sbb
call
mov
hlt
mov
inc
cmps
cmp
mov
sbb
dec
and
fld
es
js
sub
pop
inc
aad
popf
js
cmp
inc
or
(bad)
adc
sbb
iret
lahf
sbb
pushf
repnz
jb
(bad)
adc
ds
sbb
inc
fwait
sub
fstp
dec
mov
sbb
in
xor
loopne
mov
inc
fs
(bad)
loopne
dec
pop
dec
xchg
dec
dec
cmp
cmp
mov
cmc
jg
fs
(bad)
loopne
dec
cmp
sub
arpl
imul
cld
inc
shl
scas
out
pop
lea
cmp
push
mov
or
mov
dec
jae
stos
cmp
xlat
jg
test
dec
mov
icebp
daa
dec
add
mov
add
xor
push
ds
cmp
dec
pop
xchg
push
pop
ins
cld
lods
das
inc
daa
cmp
scas
sub
xlat
pushf
jmp
fdiv
push
fs
ja
sbb
mov
xlat
sbb
(bad)
mov
adc
stc
sbb
add
mov
stos
rol
mov
mov
pusha
into
in
mov
cdq
push
fdiv
cwde
ret
xlat
pop
xor
ret
xor
dec
dec
mov
mov
inc
xor
xchg
xchg
mov
ja
ds
jmp
shr
push
push
(bad)
cld
xchg
mov
cmp
mov
stc
loopne
dec
xor
push
jmp
int3
sub
ins
jno
sahf
iret
add
mov
sbb
mov
jmp
push
dec
xchg
test
push
push
pop
aam
or
sub
lahf
cld
push
dec
cmp
(bad)
outs
and
xor
(bad)
mov
mov
sub
adc
mov
stos
cs
out
mov
xchg
ret
rol
lahf
jno
lods
fnclex
mov
mov
scas
aas
pop
and
sub
arpl
in
retf
adc
sub
ins
xlat
lods
and
out
test
mov
xor
add
lock
loope
(bad)
push
leave
push
mov
nop
loop
test
and
ds
cmp
push
aad
call
push
mov
sti
add
sub
js
bound
fwait
in
rcr
lods
hlt
test
xor
ss
fild
inc
enter
add
(bad)
in
jl
xchg
shr
jg
mov
dec
mov
jo
fadd
movs
push
mov
and
in
mov
dec
out
lock
aaa
mov
xabort
mov
dec
popf
xlat
cmp
ror
dec
cmc
inc
jle
dec
(bad)
js
adc
test
mov
stos
jmp
mov
test
inc
jecxz
sub
lea
xchg
(bad)
mov
jbe
in
mov
fdiv
iret
iret
jae
cmp
sbb
repz
cmp
stos
mul
sub
(bad)
jl
pop
jbe
loopne
jb
ror
loop
mov
lds
add
and
mov
pop
sbb
pop
loop
sub
and
fcos
cld
lea
int3
adc
test
(bad)
jae
mov
loopne
add
fwait
les
pushf
sub
and
cmps
aaa
and
or
sbb
inc
jecxz
and
dec
rcr
push
fnstsw
cmp
lea
xor
push
leave
jmp
cmps
ret
mov
mov
(bad)
cmp
xchg
cmp
sbb
push
ins
mov
(bad)
popa
mov
xchg
xchg
cwde
dec
mov
xor
or
loop
fsubr
jle
adc
jecxz
ss
(bad)
out
cmps
mov
gs
xlat
add
mov
jecxz
xchg
xor
dec
pop
inc
(bad)
cmp
sub
lahf
push
out
jns
jmp
jae
xchg
xchg
(bad)
dec
jno
jae
dec
js
xor
(bad)
outs
outs
nop
shl
xor
jae
or
adc
pop
imul
fistp
inc
jg
cmp
xor
mov
mov
cmp
jnp
and
das
pushf
popa
adc
inc
fstp
stos
dec
mov
jno
jmp
out
lahf
sub
test
and
fidiv
(bad)
sahf
cmp
or
pushf
mov
or
icebp
pop
in
mov
inc
test
push
mov
push
inc
std
pop
and
sbb
sbb
in
or
sbb
dec
sbb
pop
and
push
addr16
clc
call
pop
mov
daa
dec
sub
in
test
adc
and
cmp
jl
loopne
sub
out
xchg
je
xor
cli
xlat
lahf
mov
adc
add
mov
imul
in
call
xchg
(bad)
clc
leave
daa
push
scas
out
push
add
cs
inc
mov
jnp
call
or
mov
cmp
out
pop
out
mov
lgs
cmp
fsub
sbb
out
jbe
xchg
mov
or
jp
les
retf
push
dec
xchg
in
loopne
mov
xchg
pop
mov
stos
mov
repz
xchg
je
lods
mov
add
jmp
and
push
dec
vmulsd
jne
mov
or
icebp
push
xor
ror
dec
jno
and
inc
inc
adc
imul
ret
neg
(bad)
pop
push
jb
or
clc
dec
xchg
jnp
hlt
cli
stos
add
mov
ja
and
les
push
addr16
neg
shl
in
or
test
jl
mov
pop
push
shrd
xchg
iret
lock
pusha
dec
out
adc
mov
jb
fs
cmp
sub
xchg
mov
clc
ins
popa
out
add
scas
call
imul
test
mov
dec
xchg
xchg
gs
es
cmp
popf
mov
and
adc
fcom
mov
xlat
jp
pop
push
and
adc
aam
push
xchg
jge
or
(bad)
scas
jp
fiadd
xor
inc
pop
jmp
ret
dec
add
inc
mov
push
cmp
je
mov
xchg
test
push
mov
mov
sub
jg
sub
rol
mov
nop
inc
pop
sub
or
mov
inc
push
pop
inc
inc
fimul
push
inc
sahf
and
(bad)
cmp
es
je
push
stos
pop
xchg
push
iret
enter
pop
sub
lods
cmp
or
push
add
mov
pop
xchg
outs
pop
inc
addr16
pushf
dec
add
vshufps
in
inc
out
add
dec
movs
lahf
clc
inc
shr
stos
psrld
sbb
out
adc
and
fnstsw
cmps
mov
inc
mov
scas
daa
dec
jns
loope
into
and
push
stc
(bad)
imul
push
cmp
mov
push
repz
ftst
(bad)
fcmovu
imul
xor
sbb
test
stos
sahf
dec
call
jae
jae
mov
and
inc
pop
cmp
clc
fstp
sub
in
mov
in
(bad)
fistp
cmp
xchg
outs
xor
ret
dec
mov
or
xor
push
loop
ins
sub
dec
sbb
inc
std
nop
fidivr
cdq
xchg
cmc
rol
xchg
aam
imul
mov
adc
test
inc
dec
sub
arpl
cmp
fisubr
jo
inc
add
dec
xchg
ins
lods
repz
inc
cmp
lahf
fs
xchg
sbb
sbb
adc
and
jae
sub
movs
mov
cmp
loop
mov
les
rcr
cmc
mov
movs
arpl
ja
neg
outs
push
jge
enter
fwait
sti
fstp
daa
hlt
push
in
les
lock
pusha
sub
fsub
push
out
jb
mov
mov
repnz
aas
iret
lods
jns
dec
mov
sub
(bad)
xchg
mov
dec
sti
dec
adc
add
mov
ds
xor
pop
aaa
sbb
out
sbb
ins
sbb
iret
scas
ret
bound
addr16
jmp
jp
pop
mov
ja
sub
fwait
mov
lods
cmp
in
mov
or
sub
inc
mov
std
mov
xlat
loop
inc
fbld
in
jecxz
inc
lods
mov
repz
lods
mov
pop
sbb
jmp
rcl
cmps
test
out
push
jle
xchg
(bad)
inc
sub
lock
stos
ds
jle
inc
and
adc
cmp
test
adc
aad
outs
add
push
xor
movs
xchg
ret
daa
sbb
mov
aas
pop
push
lea
xchg
loopne
clc
jecxz
mov
jle
outs
mov
bts
jge
adc
lods
xchg
loop
es
retf
jnp
add
repz
ror
fadd
add
das
call
lock
mov
mov
std
mov
mov
cmps
inc
xchg
mov
movs
es
push
inc
jmp
shl
mov
pusha
xchg
mov
cmp
lock
or
mov
fidiv
mov
or
sub
adc
mov
test
xlat
cmc
out
shr
mov
loop
ret
sub
aam
sub
pop
es
and
pop
or
add
out
ret
(bad)
in
and
or
xor
mov
cmp
rcl
push
mov
(bad)
pop
xor
lods
push
inc
xor
iret
int
into
cmp
sbb
loop
call
inc
pop
out
sbb
mov
pop
lahf
inc
cdq
rcl
add
jmp
test
ins
jmp
sub
fld
mov
(bad)
les
inc
test
(bad)
aas
cdq
call
and
or
gs
pop
loop
jne
sbb
and
jbe
cmp
repnz
lods
rol
jb
cmp
mov
xchg
push
mov
mov
jg
add
(bad)
outs
mov
retf
fisttp
fnstcw
std
ret
fs
jle
es
repz
xor
in
dec
leave
rcr
mov
jle
in
cs
imul
mov
adc
icebp
pop
stc
push
lds
mov
xchg
add
(bad)
xor
out
pop
mov
es
(bad)
cli
ret
imul
addr16
(bad)
sbb
adc
in
mov
mov
retf
add
adc
loop
mov
mov
out
mov
pop
xor
loope
sar
and
mov
out
shl
adc
(bad)
data16
mov
pop
jbe
pop
cli
cmc
hlt
and
(bad)
add
add
lock
jne
pop
push
loopne
jmp
push
scas
cli
je
jns
adc
out
or
mov
dec
test
mov
xchg
dec
cmp
scas
paddsb
ds
dec
retf
mov
dec
adc
sub
mov
mov
in
retf
pop
rol
(bad)
stos
retf
push
xchg
popf
inc
pop
nop
pop
mov
imul
ret
mov
dec
arpl
dec
pop
inc
push
xchg
add
es
stos
dec
sbb
inc
shl
stos
ds
mov
dec
loope
adc
std
ficomp
jmp
fwait
mov
mov
sbb
jne
sub
dec
xor
dec
or
aas
push
and
jo
mov
or
fmul
inc
pop
sub
mov
les
adc
or
addr16
pusha
push
test
push
loope
mov
fstp
mov
cwde
in
add
xchg
sti
push
dec
movs
pop
or
mov
ins
jnp
jl
stc
jns
push
test
js
jg
cmp
scas
mov
out
sbb
leave
test
(bad)
sti
into
loope
mov
jle
xchg
mov
jb
mov
mov
sub
pop
mov
and
add
cmp
push
xchg
mov
add
mov
loop
and
xchg
sub
pop
retf
call
out
ja
test
mov
(bad)
enter
in
adc
cmc
ror
bound
mov
cmp
dec
movs
mov
sub
push
div
icebp
jg
outs
dec
add
push
mov
sbb
sub
loopne
and
adc
xchg
call
mov
icebp
mov
sub
mov
(bad)
out
mov
unpcklps
ror
loope
jbe
pop
lock
xor
mov
jmp
sbb
popa
sub
jmp
push
(bad)
test
stos
sub
push
test
test
adc
fsub
cmp
int3
add
push
jge
push
mov
cs
cmp
lds
outs
mov
out
psubw
push
or
xor
xchg
out
pop
or
adc
inc
mov
fmul
out
rcl
test
nop
test
xor
icebp
jmp
dec
bound
rcr
(bad)
bound
arpl
ror
sbb
cmps
push
jge
pop
and
push
iret
aaa
add
dec
or
push
repz
movs
out
fisub
adc
mov
push
out
jge
inc
inc
out
push
and
lds
mov
pop
push
scas
pop
call
adc
xchg
jo
adc
sbb
lds
mov
(bad)
and
mov
loope
in
(bad)
lods
ins
jb
les
jnp
call
adc
mov
jns
adc
sti
stos
xor
fstp
cs
xchg
mov
loope
add
mov
icebp
and
jp
xor
(bad)
je
scas
add
jle
sub
cmp
js
gs
or
adc
sti
or
test
adc
inc
stos
fchs
xchg
call
lock
jns
jae
dec
femms
pop
fld
dec
pop
ins
xor
gs
pushf
jae
cmp
in
out
dec
out
int
cmp
adc
dec
ficom
cmp
imul
idiv
jbe
add
or
push
or
out
sbb
mov
xchg
popf
add
mov
jae
sbb
dec
cmp
sti
mov
ja
sahf
and
nop
inc
arpl
fist
loopne
loop
add
and
fild
iret
xlat
xchg
sub
rol
lods
push
test
cwde
scas
outs
sub
icebp
retf
call
mov
idiv
enter
sbb
pop
mov
pop
jl
inc
jae
pop
popa
daa
sbb
ins
xchg
or
ror
cmc
push
sbb
test
or
(bad)
sbb
mov
adc
(bad)
and
pop
(bad)
dec
std
inc
(bad)
jge
xchg
xor
repnz
jne
cmp
ja
sub
sub
or
adc
cmp
outs
inc
inc
mov
push
ds
add
loopne
mov
mov
cs
sbb
je
mov
dec
adc
out
sub
leave
inc
cmp
sbb
dec
pop
loop
push
xor
cmc
cmps
ror
or
arpl
outs
call
add
sahf
stc
test
inc
and
mov
stos
cmp
pop
cmp
xchg
idiv
push
xchg
stos
std
mov
jae
pop
or
cmc
inc
neg
pop
pop
sbb
xchg
cmp
aaa
jnp
add
call
fwait
loop
sub
sub
pop
pop
mov
movs
test
jg
mov
and
retf
aaa
not
pop
or
out
into
pusha
push
mov
enter
mov
fst
(bad)
neg
ins
inc
imul
pop
out
arpl
adc
ja
add
inc
enter
mov
call
jns
pop
ins
pop
fsub
sub
inc
sti
std
aaa
xchg
or
sub
ins
cmp
sbb
ret
cld
add
lock
out
ficom
cmp
add
xor
das
out
pusha
mov
les
xchg
popa
add
fs
mov
pop
mov
stos
test
aaa
loopne
adc
ss
dec
pop
fist
jge
or
int3
inc
iret
pop
jg
lea
ds
sub
cmp
scas
out
push
mov
shl
push
adc
or
sbb
add
das
cmp
imul
xchg
ins
add
mov
pop
sahf
pop
out
and
pushf
aaa
clc
les
sbb
mov
mov
fnstcw
ror
into
xchg
mov
adc
sar
dec
inc
xchg
cmps
cmp
mov
hlt
ss
std
xchg
add
pusha
out
push
ja
in
mov
inc
aaa
test
mov
ss
and
stos
mov
push
push
or
(bad)
mov
enter
cwde
call
lds
cld
sub
adc
jae
mov
or
cmp
jmp
sub
stc
sub
xor
jle
mov
sub
ss
call
rol
inc
jge
push
add
push
movs
in
ds
retf
cli
adc
mov
std
cmps
pop
mov
sbb
inc
repz
or
cmp
adc
repz
ja
cmc
sub
test
push
sbb
jmp
sbb
in
xor
lock
mov
mov
das
cld
add
mov
jmp
push
or
mov
fsub
xor
pop
pushf
stos
pop
popf
(bad)
push
sbb
push
movs
enter
scas
retf
into
xchg
add
mov
cmp
das
cli
fadd
xlat
icebp
push
cmp
sbb
push
xor
or
mov
jo
or
nop
adc
aaa
fisttp
or
or
xor
mov
aad
pushf
test
mov
xchg
xchg
jnp
fld
int
bound
pop
mov
enter
pusha
std
cmp
pop
push
xchg
jl
lods
call
inc
fidivr
shr
xor
into
aam
adc
hlt
movs
(bad)
push
pop
lock
pop
push
ins
aas
xlat
xor
mov
jp
adc
or
fimul
pop
push
dec
sbb
push
loope
push
jae
rol
in
push
xchg
pusha
xchg
cmp
cmp
jbe
out
dec
xor
inc
inc
cdq
bound
xor
cs
cmp
outs
out
dec
ror
dec
sub
popa
test
cdq
fisttp
pop
test
(bad)
je
enter
or
ds
push
test
dec
mov
in
jl
lods
test
test
test
lods
push
mov
stos
ja
pop
add
movs
xchg
nop
lahf
pop
popa
pop
aaa
sar
jmp
or
out
cmp
out
push
(bad)
and
inc
dec
in
stos
and
adc
dec
xor
push
xchg
bound
movs
mov
lahf
push
jo
aad
sbb
cmps
pop
add
mov
or
or
jle
std
pop
mov
out
outs
ds
and
adc
rol
cmp
sub
movs
cmp
(bad)
or
and
xchg
lods
(bad)
in
jne
bound
pop
stos
(bad)
jg
loop
mov
jne
mov
or
das
mov
test
jp
fimul
mov
push
ficomp
rcl
test
or
fcom
and
in
stc
test
retf
rol
rcr
pop
or
sub
xchg
push
sbb
sbb
arpl
mov
adc
dec
lods
out
imul
dec
xchg
ret
stc
mul
test
xchg
aam
das
popa
fdivp
xchg
outs
inc
jnp
into
dec
call
push
icebp
cmp
mov
lahf
(bad)
aaa
div
retf
addr16
dec
movs
adc
mov
jae
mov
imul
mov
or
(bad)
rol
bound
mov
iret
loope
test
push
aas
mov
xchg
mov
arpl
and
push
hlt
sbb
jne
pop
in
push
cld
add
outs
ja
inc
out
jmp
cmp
push
and
jo
imul
ins
or
add
(bad)
das
xchg
gs
add
inc
adc
movs
mov
sbb
test
fmul
enter
sub
aam
mov
push
in
cld
push
pop
imul
mov
imul
jp
xor
fst
and
fldenv
sahf
push
inc
and
sbb
imul
mov
mov
push
add
scas
add
mov
xchg
je
aam
lock
mov
sti
push
cmp
test
cmp
sar
pop
test
push
cwde
xchg
(bad)
daa
mov
mov
sbb
gs
jno
stc
ror
clc
lock
jo
out
jle
jp
jne
ret
(bad)
scas
cmp
aam
xor
pop
cli
cmp
fstp
mov
inc
lock
(bad)
mov
popa
iret
mov
call
xor
in
pusha
test
mov
jg
jmp
and
ja
pusha
popa
mov
shufps
dec
or
loop
out
sub
inc
push
dec
push
sbb
push
rcr
mov
ror
xor
dec
hlt
(bad)
mov
mov
or
call
cmp
clc
pop
sbb
cmp
out
mov
je
je
adc
call
and
aad
ret
jmp
movs
hlt
cmp
ret
cmps
stos
test
or
or
sti
ficomp
in
loop
in
dec
inc
pop
fsubr
cdq
add
add
jnp
add
cmp
xchg
xchg
arpl
frstor
stos
pop
xchg
movs
dec
add
mov
jmp
mov
pop
sbb
xor
in
jecxz
shr
div
push
(bad)
and
mov
in
xlat
lock
aad
stos
adc
test
rdpmc
rcl
inc
mov
jle
mov
rol
aas
arpl
adc
es
loop
mov
movs
sbb
cmps
in
add
jp
push
test
push
dec
pusha
stos
lea
jae
ja
daa
cmp
ins
adc
jmp
test
ins
(bad)
bound
pop
out
inc
add
fld
adc
addr16
mov
sti
or
movs
pop
jge
mov
out
push
ss
xor
scas
jmp
adc
jl
add
fiadd
repnz
sub
scas
push
ss
mov
adc
add
sbb
or
push
and
or
movs
dec
inc
das
cmovne
jns
cli
idiv
stos
mov
loopne
jno
inc
lods
mov
cmp
setno
shl
mov
pop
sbb
hlt
push
sbb
mov
fistp
sbb
jae
push
out
stc
in
jbe
js
xchg
repnz
scas
ins
into
or
mov
fnstcw
rcl
mov
iret
data16
add
or
jbe
out
(bad)
cmp
mov
inc
fs
in
sub
mov
xchg
jle
nop
imul
test
jb
imul
fstp
shr
daa
mov
and
xchg
dec
push
rcl
xor
in
xchg
in
push
movs
(bad)
fimul
push
cwde
(bad)
mov
pop
ja
dec
test
imul
xlat
xchg
mov
adc
stc
push
pop
lahf
pushf
jmp
leave
xor
xchg
jnp
xor
dec
dec
adc
xor
mov
mov
hlt
arpl
xchg
cmp
out
xor
push
add
mov
push
loop
cmp
push
(bad)
in
xor
js
jl
ja
cmp
mov
test
test
mov
scas
shl
movs
(bad)
fst
leave
rol
xor
mov
push
stc
in
pop
sbb
test
mov
add
fimul
addr16
aad
adc
cmp
jnp
or
inc
mov
test
push
inc
xchg
loope
sahf
fdivr
dec
sbb
push
push
mov
cmp
stos
imul
add
push
pushf
dec
lea
inc
repz
mov
fsub
je
cmp
xchg
or
push
pop
sbb
pop
imul
sti
imul
mov
aas
call
not
cmp
xchg
rcl
xor
add
fdiv
fld
dec
call
or
pop
lds
fisub
xchg
jb
icebp
aas
inc
popa
outs
add
sbb
add
push
push
xchg
cmc
paddb
sbb
stos
dec
ds
cmp
sub
fs
mov
pop
cmp
fs
loop
popf
out
retf
movs
xor
inc
int
xor
dec
push
cmc
int
mov
fld
add
inc
adc
into
pop
push
sbb
imul
ror
out
fld
ss
mov
mov
clc
cmps
sbb
mov
jl
std
repz
mov
cmc
or
jp
stc
cdq
push
retf
mov
xchg
add
std
sbb
(bad)
jnp
cmps
pusha
icebp
xchg
add
in
fistp
and
outs
(bad)
mov
jno
lds
or
xlat
pop
mov
dec
in
pushf
jnp
ret
jne
push
jne
jp
icebp
or
push
pop
cmps
popa
xchg
gs
mov
repz
xor
dec
jle
cmps
mov
scas
subps
push
add
mov
shr
sti
lock
and
and
pop
pop
popa
stos
lods
xchg
aas
inc
adc
rcl
sub
mov
sti
xlat
adc
mov
and
in
cmp
sahf
sub
mov
cwde
jns
inc
inc
xor
fsub
lods
sub
cmovl
mov
stos
push
mov
adc
fidivr
lds
shl
pop
xor
addr16
ins
sbb
sub
gs
addr16
das
cdq
shl
or
movs
(bad)
(bad)
pop
push
movs
test
jno
clc
adc
dec
mov
jmp
imul
out
push
mov
adc
xor
push
aad
test
pop
ins
push
inc
retf
xchg
imul
xor
(bad)
mov
pavgw
push
sub
(bad)
adc
fnstcw
fnsetpm(287
fsubr
xchg
loop
fimul
jnp
(bad)
comiss
pop
pop
jl
push
(bad)
das
jmp
loopne
mov
repnz
sbb
mov
fbstp
repnz
add
(bad)
push
call
add
in
mov
push
aaa
xor
sar
sbb
in
adc
loop
sub
les
ret
daa
loope
push
xchg
xacquire
fidivr
shr
pop
adc
inc
gs
popf
movs
sbb
mov
pop
adc
ficomp
retf
std
test
aas
pop
dec
pop
ret
call
xchg
adc
add
dec
jl
and
adc
adc
lods
inc
push
sbb
pusha
inc
dec
outs
arpl
dec
leave
push
dec
pop
(bad)
cli
or
mov
cmps
inc
sub
pop
mov
adc
pop
xchg
sbb
xor
rol
and
jb
or
jmp
(bad)
cmc
push
sub
outs
psraw
xchg
ss
lock
call
and
stos
lds
out
add
pop
out
cmp
inc
and
jmp
pushf
sub
sub
ret
fistp
and
inc
gs
addr16
out
fucomp
xor
shl
lea
jg
fist
loop
leave
std
or
cld
mov
pop
test
arpl
pushf
adc
sbb
sub
repz
popa
das
lods
lock
lds
add
and
xchg
int
loope
fidiv
es
pop
out
loopne
mov
inc
cli
outs
jge
pop
cmp
adc
add
jg
inc
inc
xor
repz
xchg
fsub
rcl
les
popa
in
fdivr
inc
sbb
inc
std
xchg
mov
popf
sbb
mov
pop
pop
mov
adc
add
in
push
pop
sti
lds
add
sub
jb
cdq
out
aaa
pop
popf
pop
(bad)
xchg
sbb
or
cmps
mov
push
movs
inc
adc
fcmove
xor
data16
push
mov
maskmovq
not
mov
mov
xor
out
(bad)
cwde
addr16
sbb
push
mov
add
mov
dec
inc
fs
out
scas
and
push
stos
sbb
daa
int
into
cs
mov
mov
and
dec
inc
push
imul
sub
pop
and
in
mov
ror
jns
loopne
cli
xor
and
int
mov
jle
sbb
fstp
jb
in
retf
bound
mov
imul
cmp
ret
or
xchg
add
(bad)
pop
sbb
retf
push
data16
mov
enter
stc
fmul
jb
push
inc
fstp
mov
mov
xchg
mov
xchg
mov
popa
xor
hlt
test
test
sub
js
(bad)
ret
jmp
sub
das
or
js
retf
in
jmp
clc
mov
popf
repnz
push
mov
fisub
jne
adc
popa
xchg
jl
jbe
scas
data16
or
fisubr
push
sub
clc
mov
add
lahf
or
or
into
sbb
je
push
sub
adc
adc
adc
lahf
xor
xor
bnd
inc
in
adc
adc
outs
addr16
or
cmc
dec
push
push
push
inc
or
mov
and
dec
shl
push
inc
mov
cmps
popa
fdivr
gs
add
aad
pop
xor
push
std
xor
fcmove
icebp
dec
int
sub
out
jmp
sti
jle
ror
fdivr
xchg
inc
lgs
loope
stos
test
ret
inc
pop
jb
or
ins
add
retf
mov
sbb
(bad)
fadd
cli
fcom
(bad)
mov
push
ins
adc
sbb
frstor
pop
cmp
stc
lea
clc
aaa
shl
xchg
sub
jmp
lock
mov
add
lods
xchg
cmp
popa
push
mov
mov
push
push
sub
mov
mov
mov
mov
popa
sbb
rcr
stos
add
(bad)
(bad)
test
cmps
adc
inc
or
aaa
pushf
nop
jl
mov
cmp
fsub
cdq
jg
or
sub
imul
(bad)
mov
inc
mov
shr
inc
loope
or
scas
jmp
fadd
nop
jns
mov
add
in
lahf
jae
into
jle
loop
xor
adc
dec
popa
popf
pop
in
(bad)
push
movs
mov
pop
and
(bad)
and
push
mov
pop
xchg
aam
push
ret
mov
dec
mov
les
adc
mov
mov
dec
ins
cmps
mov
or
inc
pop
adc
adc
mov
ror
push
push
pop
lods
push
loope
sbb
mov
aaa
cli
ss
retf
sti
fidivr
call
ins
jmp
mov
cld
std
pop
stos
cwde
fsubr
and
xor
(bad)
js
xchg
push
cmps
ja
ror
mov
jne
mov
(bad)
movs
jmp
adc
fcomp
xchg
jl
enter
push
out
or
dec
jmp
cmp
aad
jbe
out
ror
fisttp
xlat
dec
enter
pop
cli
imul
and
mov
clc
inc
mov
mov
in
fist
fwait
dec
fwait
xlat
aam
mov
push
sub
outs
fstp
jge
mov
aad
clc
std
cmc
jg
inc
xor
push
mov
pop
test
mov
call
push
and
xor
cli
push
mov
dec
dec
mov
aaa
push
sbb
cmp
dec
sub
xchg
pop
data16
daa
inc
or
xchg
cmp
mov
dec
add
std
call
jb
dec
pop
lea
push
mov
in
out
pop
fwait
pop
jmp
jge
lea
(bad)
shr
lea
or
jmp
jle
pusha
add
push
mov
inc
cmp
add
jno
push
aaa
lahf
sbb
xlat
sbb
(bad)
mov
jne
jmp
fsubr
cwde
lea
in
call
pop
dec
sub
mov
xor
aas
(bad)
pop
stc
xchg
rcr
int3
push
lea
mov
sahf
repz
dec
in
in
out
jmp
fwait
aas
cwde
ds
stos
aam
bnd
mov
adc
jnp
jns
test
jbe
jno
fbld
pop
sbb
mov
hlt
ja
test
popf
adc
or
rep
jmp
xor
je
popf
enter
es
sub
inc
cdq
(bad)
shl
cmps
cmp
pop
jl
aad
imul
dec
and
push
outs
fimul
setne
aas
mov
je
stos
push
add
cmps
xchg
cmp
xor
mov
dec
lock
or
sub
pop
jl
out
sub
popa
sbb
dec
xchg
adc
jecxz
mov
jmp
inc
add
xor
or
popa
mov
or
inc
in
and
fcom
push
outs
push
aaa
inc
addr16
retf
scas
iret
daa
ins
push
(bad)
or
fisttp
xor
mov
sub
cmp
jl
dec
pop
dec
ins
cmps
jl
sub
pop
pop
ficomp
dec
rol
cld
jns
fwait
and
push
je
jecxz
fdiv
dec
mov
add
cmp
inc
dec
int
push
xor
ds
pop
clc
sbb
stc
fisttp
inc
xchg
and
call
mov
mov
into
mov
int3
xchg
out
data16
inc
jl
fstp
mov
call
stos
jl
fwait
and
lods
inc
push
test
in
sbb
jns
cli
int3
dec
xchg
stc
ret
out
shr
push
pop
test
adc
popa
clc
gs
or
push
out
dec
pop
cmp
mov
push
mov
and
sub
cmp
mov
or
add
outs
xchg
mov
ds
das
hlt
rcr
jno
(bad)
pop
mul
jnp
shl
add
mov
scas
mov
and
leave
cmc
cwde
and
shr
jp
stc
push
fdivr
adc
and
stc
push
jb
sbb
mov
and
jno
not
fcomp
push
or
movs
cmp
or
test
mov
jae
jl
mov
inc
sbb
pop
ins
pop
imul
inc
ins
adc
push
xlat
mov
pop
popa
(bad)
or
mov
fisubr
sbb
xor
adc
inc
sahf
xchg
jg
cli
mov
inc
ficom
jmp
push
pop
cmp
sti
push
int3
aaa
and
lea
xor
mov
pop
sbb
leave
fidiv
movs
dec
ds
jo
or
mov
cli
mov
lahf
ins
xchg
push
mov
xchg
dec
jo
ja
push
in
mov
pop
dec
and
fld
popa
and
xchg
inc
ins
mov
imul
lods
pop
and
mov
(bad)
inc
inc
(bad)
cmp
leave
(bad)
aad
mov
jl
mov
mov
cld
nop
aas
pop
sbb
popa
pop
pushf
scas
jb
ret
inc
les
(bad)
jge
jmp
or
loop
in
xchg
cmp
rcl
adc
iret
pop
jo
iret
xchg
pushf
loop
cmp
loope
in
inc
sar
xor
mov
mov
mov
into
stc
sub
sbb
jnp
xchg
push
test
mov
cmp
sub
sbb
pop
cwde
cmc
mov
mov
pop
addr16
imul
mov
add
adc
fmul
cmp
sub
mov
jne
mov
mov
(bad)
mov
fsub
add
sbb
jmp
int
cli
scas
rol
and
popa
cdq
cwde
mov
scas
repz
sbb
test
pop
sbb
mov
add
in
sub
jns
ret
jnp
jmp
push
and
mov
test
jb
jle
inc
cdq
ds
sti
inc
mov
mov
adc
push
and
add
jg
pop
repz
sub
pop
fimul
push
add
dec
sbb
nop
push
mov
popa
jb
push
cdq
mov
push
jno
repz
pop
mov
mov
stos
imul
pop
jno
adc
daa
aas
xlat
test
pushf
fild
jl
shl
retf
cmc
scas
js
cmps
sub
(bad)
mov
dec
jns
ja
inc
imul
xor
cld
and
shl
pop
xor
adc
mov
sbb
sub
pop
gs
pop
cmp
inc
pop
xchg
dec
jmp
push
pusha
dec
popf
mov
psubusb
add
call
and
mov
and
movs
cmp
jp
or
push
(bad)
repz
sbb
push
mov
or
jge
icebp
loop
loop
dec
in
add
mov
test
test
pop
ret
mov
adc
sbb
xchg
cwde
fidivr
(bad)
test
adc
aad
fucomp
sub
loop
es
add
pop
adc
cmps
fdiv
sub
call
xor
mov
in
mov
sar
xchg
clc
sbb
fcomp
mov
push
popa
mov
lea
push
push
mov
loop
sub
push
xor
cmp
cmps
pop
(bad)
and
in
sar
enter
mov
lahf
or
push
lahf
int
mov
mov
fldl2e
(bad)
lods
mov
xchg
push
xchg
and
mov
push
icebp
in
mov
pop
sbb
cmps
mov
faddp
setl
mov
mov
pop
dec
mov
ret
movs
jmp
push
pop
adc
out
fs
mov
or
jge
mov
int3
stos
outs
aaa
jecxz
rol
cmp
retf
inc
adc
sub
movs
das
aad
rol
jae
pushf
fbstp
scas
dec
into
js
mov
and
div
mov
aad
int
nop
or
outs
mov
mov
imul
inc
js
nop
xchg
push
fs
scas
pop
fistp
fcom
repz
cmps
sbb
es
mov
jmp
and
ret
and
aaa
leave
sti
mov
sti
xor
out
push
push
jbe
mov
or
jbe
jl
(bad)
retf
or
ins
add
sbb
fild
lds
inc
jmp
fcmovb
es
scas
outs
or
aam
adc
adc
aaa
dec
dec
ret
fisubr
adc
repz
jle
mov
cmc
xor
ins
aaa
(bad)
and
push
je
pop
add
xlat
fs
pop
fwait
movs
sub
(bad)
push
jmp
(bad)
daa
dec
or
xchg
xlat
xor
adc
(bad)
cld
dec
push
jns
lds
mov
nop
test
cmp
add
push
test
ror
jp
pop
cmp
sti
mov
fmulp
sbb
scas
test
and
imul
shr
push
sub
(bad)
aaa
fisttp
or
shr
xchg
stos
inc
xchg
pop
mov
leave
sar
shl
mov
mov
mov
push
out
jno
in
aas
movs
lods
xchg
rcl
pop
hlt
popa
mov
cld
adc
sbb
loope
push
cmc
mov
jno
mov
stos
mov
or
daa
(bad)
inc
sti
mov
retf
inc
loopne
pop
cmp
std
fldcw
jle
ud0
pandn
sbb
or
xor
mov
test
mov
or
test
fadd
mov
out
push
ins
imul
sbb
pop
call
cmp
mov
repnz
inc
push
dec
mov
dec
inc
dec
dec
push
ins
inc
dec
fst
lahf
xchg
pop
and
sbb
and
sub
es
shr
sbb
mov
iret
xor
stos
push
(bad)
jmp
mov
(bad)
xor
test
jo
mov
(bad)
into
cwde
xchg
xlat
lahf
outs
call
lahf
dec
(bad)
cmp
jl
ror
mov
test
xchg
mov
addr16
push
add
xor
sub
adc
xchg
push
and
fcom
push
add
push
ficomp
(bad)
js
and
lahf
inc
xchg
inc
out
cmps
mov
ins
lahf
sbb
pop
loopne
mov
and
xchg
scas
xchg
cmp
pop
into
jae
xchg
adc
cmp
or
mov
xor
aad
dec
fld
sub
add
mov
add
push
movs
(bad)
outs
mov
or
sbb
call
sub
outs
sbb
cmc
in
mov
repnz
call
mov
scas
inc
(bad)
mov
inc
cli
mov
cmp
call
jns
into
mov
push
pop
push
cmp
jge
mov
push
test
stos
cmp
dec
std
pop
xor
xchg
aaa
enter
bound
fisub
fs
popa
out
xchg
stc
or
push
push
or
loop
add
or
dec
and
inc
addr16
mov
add
xchg
push
sbb
fwait
jge
sub
mov
fist
push
ja
xchg
adc
mov
jb
inc
mov
inc
mov
in
test
xchg
fist
ds
aad
hlt
fucom
ss
repz
xchg
mov
repz
popa
jmp
popa
push
pop
adc
pop
or
pop
outs
xchg
add
xchg
lahf
mov
mov
xor
sahf
push
cdq
push
cwd
mul
outs
xor
rcl
pop
out
pop
pop
outs
not
mov
add
mov
xchg
cmp
jae
dec
(bad)
xor
xor
leave
or
cmps
sub
mov
popf
cmps
sar
xchg
outs
mov
xchg
xor
cmp
popa
stos
outs
clc
cmovs
and
xchg
xchg
mov
sbb
in
mov
mov
add
fadd
mov
mov
movs
pop
sub
repz
mov
sbb
jne
and
mov
jp
fwait
(bad)
add
inc
lods
add
push
(bad)
(bad)
jae
add
dec
fiadd
es
sub
mov
out
pop
mov
dec
cwde
pop
dec
xor
adc
out
stos
test
inc
sar
jmp
fwait
stc
jnp
or
dec
push
nop
into
out
mov
cwde
je
mov
add
sar
mov
out
ins
mov
cmp
mov
jp
push
sbb
aaa
hlt
sbb
loop
pop
iret
dec
nop
xor
adc
xor
test
scas
dec
out
xor
and
adc
out
test
inc
rol
jns
fdivr
push
fisub
test
(bad)
stc
ja
jno
sub
inc
arpl
dec
sbb
mov
movs
int
popa
mov
push
adc
lds
xchg
or
int
and
jns
sbb
lds
inc
retf
inc
cmc
xor
out
icebp
call
jg
add
xor
fld
inc
cmp
mov
inc
mov
inc
xor
add
mov
dec
aad
xor
stos
xchg
js
out
outs
call
sbb
popf
repz
mov
imul
fs
add
sbb
pop
inc
jl
and
sti
mov
sbb
fadd
sub
dec
xor
ror
sub
mov
loopne
repnz
faddp
imul
and
lock
jle
cdq
cmps
inc
mov
mov
xor
pop
mov
jg
sub
adc
(bad)
inc
push
cs
push
retf
sbb
call
movmskps
iret
sbb
push
stos
mov
pop
popf
ret
push
in
xor
jge
fistp
popa
xlat
lock
xlat
push
mov
int
adc
icebp
hlt
outs
adc
sub
inc
jns
inc
mov
ss
add
leave
xchg
jbe
into
(bad)
jmp
out
repz
mov
push
(bad)
cdq
dec
fistp
fisttp
add
dec
iret
or
adc
test
fnsave
arpl
add
sbb
fwait
ins
iret
pop
pop
mov
push
jnp
div
(bad)
mov
jecxz
jmp
hlt
in
adc
xchg
pop
xchg
mov
dec
xchg
int3
mov
out
jo
push
loopne
dec
icebp
(bad)
dec
cmp
enter
mov
outs
ja
call
jnp
push
scas
fldcw
and
add
and
dec
clc
mov
pop
add
pusha
pop
add
mov
sub
mov
cmp
dec
scas
sub
les
test
xor
xor
mov
ficom
sub
or
push
ldmxcsr
scas
test
sub
cmp
cwde
cmp
mov
retf
and
in
cmp
stos
mov
div
es
push
xchg
fucomi
hlt
cli
add
pop
push
and
nop
xchg
jae
pop
sub
pop
or
dec
push
xor
icebp
ss
ds
xchg
cmp
(bad)
jmp
cli
scas
add
inc
shl
sbb
add
loop
cmp
cmp
(bad)
or
or
add
ficom
jmp
inc
push
(bad)
imul
sub
dec
xchg
adc
jg
mov
jb
mov
sbb
fistp
mov
pop
sahf
mov
out
jns
pop
mov
cli
mov
inc
iret
sar
sbb
shl
(bad)
scas
repnz
pop
and
jmp
xor
retf
add
aam
lock
movs
ret
retfw
adc
push
inc
adc
sbb
xor
outs
xchg
dec
setbe
xor
lds
and
inc
aaa
and
test
popf
push
push
push
pop
test
(bad)
out
pop
adc
aaa
addr16
mov
mov
outs
lods
(bad)
mov
aas
inc
(bad)
mov
and
addr16
push
inc
test
sbb
mov
ja
xchg
aad
mov
push
ds
mov
adc
setae
xor
loop
cmc
rcr
enter
(bad)
js
es
push
xchg
sbb
cwde
in
fstp
pop
jl
or
mov
jle
push
out
popf
mov
push
xor
inc
in
cmp
dec
iret
in
sub
leave
inc
pop
(bad)
repnz
in
sbb
mov
outs
mov
cdq
or
pop
fs
add
gs
pop
cld
pop
cld
mov
xchg
push
xor
ret
push
cmp
push
loop
mov
dec
scas
popa
ss
lock
ror
dec
jno
push
mov
cmps
scas
xchg
jle
cli
xor
outs
outs
sub
(bad)
mov
in
ds
pop
or
fwait
outs
adc
mov
adc
mov
cli
xchg
mov
dec
dec
push
pop
scas
sbb
push
aas
dec
inc
hlt
jns
jb
pop
pop
dec
or
in
pop
add
sub
ret
pop
(bad)
ficom
mov
add
ins
aam
xchg
mov
(bad)
(bad)
in
jb
cli
stc
into
popa
popf
inc
fmul
icebp
cmp
retf
jbe
test
rcl
xor
nop
fimul
sbb
sub
add
and
jmp
pop
pop
cmp
push
ss
leave
pop
adc
out
inc
test
jmp
mov
inc
jecxz
arpl
add
movs
aas
or
cld
pop
clc
pop
fwait
cmp
dec
jl
popa
test
fcomp
out
into
mov
ins
shl
dec
push
arpl
mov
fadd
jecxz
into
fsub
into
or
mov
jge
int
or
jl
mov
aad
retf
test
mov
xor
cmp
int3
sbb
test
punpcklwd
(bad)
in
xor
lock
(bad)
ds
setg
dec
stos
cmp
jns
nop
adc
nop
mov
(bad)
jns
fidiv
movs
add
dec
pusha
push
call
outs
pusha
xor
push
adc
mov
leave
sbb
divps
cmps
cdq
jle
(bad)
popf
bound
stos
pusha
mov
pushf
call
jo
lahf
jns
call
pop
cmc
cli
adc
sub
in
xchg
sbb
leave
or
pop
pop
xlat
mov
mov
pop
sbb
call
ins
xor
ja
cmp
and
ins
mov
pop
sar
loope
cli
pop
mov
repnz
cmp
cmp
jmp
cwde
or
in
add
jecxz
ss
in
and
aam
inc
jmp
jge
and
mov
repnz
jl
adc
or
mov
enter
push
cld
inc
out
es
or
popf
xor
cmp
mov
es
icebp
loop
lods
stos
stc
pop
jl
or
jmp
cwde
pop
fnsave
outs
scas
(bad)
inc
lds
aam
jge
push
dec
fcmovb
mov
add
(bad)
and
fdiv
mov
cld
and
mov
mov
inc
and
gs
add
xchg
dec
popa
xchg
outs
sub
xchg
sub
inc
adc
icebp
mov
add
adc
sbb
push
jo
adc
push
call
cmp
ror
fcom
retf
mov
mov
enter
mov
mov
fidiv
cld
movs
in
pop
scas
ror
mov
sbb
adc
jmp
push
jbe
shl
gs
inc
mov
add
jae
ror
ret
adc
stc
mov
adc
in
pop
push
sub
fisub
cld
ins
xor
mov
add
mov
sahf
sbb
ficomp
adc
adc
out
nop
push
jl
ror
pop
push
loop
pusha
sub
jp
popa
in
jo
jns
lds
lahf
jmp
lods
sbb
jne
mov
cmps
mov
mov
js
(bad)
clc
mov
imul
cmp
mov
adc
ror
ins
aaa
dec
div
ret
adc
jmp
jg
push
mov
sbb
cs
inc
xor
out
ja
cdq
pop
lock
cmc
mov
jmp
imul
sbb
mov
and
fchs
dec
mov
mov
leave
imul
sub
stos
stc
enter
xchg
mov
mov
and
adc
lds
fucom
pop
mov
push
push
push
dec
lods
popa
xchg
mov
aaa
mov
cdq
test
inc
stos
mov
or
js
loop
sub
sahf
sahf
mov
in
iret
call
adc
outs
pop
mov
int3
fwait
enter
mov
sahf
sub
(bad)
mov
das
and
(bad)
adc
dec
push
fild
jmp
mov
mov
cmp
cmp
sbb
cwde
mov
xchg
mov
jnp
into
mov
(bad)
mov
or
inc
pop
idiv
popa
test
pusha
pop
mov
loop
add
sbb
loope
(bad)
pop
inc
arpl
pop
mov
pop
shr
(bad)
jbe
jp
out
dec
push
inc
sbb
or
mov
xor
mov
dec
or
outs
pusha
ror
xchg
mov
adc
daa
cld
(bad)
outs
(bad)
push
test
mov
mov
stos
lahf
sub
mov
test
dec
int
add
(bad)
outs
nop
cmp
movs
leave
aam
jmp
jg
lock
cmp
arpl
rol
repz
or
cmp
div
sbb
pop
aas
scas
cmp
mov
mov
or
and
lock
mov
and
cmp
sbb
mov
cmp
xor
jb
cmp
test
into
data16
mov
mov
les
(bad)
jl
sbb
inc
pop
retf
iret
movs
js
inc
push
clc
dec
sahf
cmp
fwait
cli
scas
cld
xchg
xchg
ror
rol
ret
aam
sar
fadd
dec
cmps
enter
or
mov
xchg
mov
rcr
ds
pop
into
cmp
and
jns
add
leave
mov
scas
cs
ficomp
xchg
outs
mov
fwait
or
movs
adc
dec
pop
aaa
or
or
ja
or
aaa
sub
into
icebp
clc
xchg
test
and
pop
dec
out
mov
cmc
repz
callw
retf
rsqrtps
in
push
xlat
push
xchg
inc
jo
push
inc
dec
call
mov
xchg
mov
mov
mov
mov
div
xchg
add
adc
mov
sbb
jno
push
repnz
or
jmp
fldenv
jmp
in
aad
push
icebp
in
mov
aam
dec
call
sbb
push
cdq
(bad)
pop
sbb
popf
jae
fistp
fcomp
std
inc
clc
or
mov
or
mov
test
jl
rol
out
xchg
push
popf
imul
add
inc
pop
in
ror
out
aam
cmp
dec
cmps
clc
cmp
jecxz
stc
mov
ds
fs
movs
sbb
pop
bound
and
cmc
adc
shr
movs
aam
xchg
mov
ss
xor
repnz
pusha
repz
in
es
loop
jecxz
jmp
test
and
pop
sub
shl
das
jno
fcom
mov
lea
add
daa
mov
xor
test
int
jbe
cmps
test
imul
scas
xchg
and
push
ja
out
add
push
fdiv
in
xchg
mov
iret
sbb
push
sub
stc
stos
xchg
cld
push
mov
aas
popf
cmp
mov
jg
les
lds
repz
test
and
inc
fidivr
xchg
cmp
xor
addr16
scas
mov
fidivr
jno
jnp
pop
pop
sbb
dec
rol
xchg
cwde
out
imul
fcmove
clc
xchg
into
imul
adc
dec
xor
adc
fyl2xp1
push
jmp
jo
les
or
fldcw
fiadd
in
inc
stos
dec
or
sbb
push
(bad)
in
rol
ja
pop
push
jp
ret
push
das
mov
mov
jno
sub
sub
xor
add
call
sub
adc
iret
rcr
sub
lods
int3
into
mov
and
xchg
fisubr
cld
xchg
in
lahf
inc
mov
es
cwde
repnz
mov
sub
enter
cs
outs
mul
sub
sbb
jno
xchg
cmp
popa
xchg
jmp
out
and
cld
jl
xchg
mov
push
clc
lock
or
or
scas
call
jecxz
mov
adc
lahf
(bad)
lock
sbb
in
xchg
dec
and
mov
cmp
push
fadd
push
dec
cs
aas
gs
aam
or
fldcw
outs
sub
adc
pop
rcl
dec
repz
test
push
jg
loopne
ret
hlt
sub
mov
enter
mov
push
into
into
leave
jne
jmp
scas
dec
out
push
rol
out
fadd
dec
or
ds
imul
loop
dec
mov
push
dec
add
mov
push
jno
push
fdivr
loopne
xchg
jmp
or
add
cmp
dec
inc
jo
mul
out
mov
cmc
ds
aaa
pop
pop
mov
ins
mov
test
mov
cld
dec
and
add
inc
xchg
sub
xor
xchg
arpl
cmps
stos
pop
add
je
push
adc
push
ins
push
call
push
popa
mov
mov
stos
fadd
xchg
cmc
sbb
push
pop
inc
inc
pop
push
std
push
pop
mov
call
mov
in
inc
xchg
stos
shl
retf
out
push
out
jmp
cmp
push
mov
leave
pop
adc
cmp
test
add
pop
or
mov
jbe
clc
mov
pusha
sbb
fst
dec
dec
mov
adc
mov
loop
retf
iret
clc
and
xor
popa
sub
jbe
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
pop
jp
retf
jbe
leave
and
sub
fdiv
xchg
popa
hlt
shl
sbb
lock
and
lods
enter
sub
cmp
push
mov
and
loop
(bad)
in
sbb
dec
mov
retf
adc
add
adc
call
repz
jno
inc
dec
fstp
retf
out
mov
mov
jge
lahf
mov
jae
fiadd
adc
xchg
mov
ds
test
test
push
adc
cmps
mov
test
or
cwde
mov
cmc
fdiv
mov
(bad)
repz
dec
aad
mov
xchg
mov
sub
mov
add
jp
fidivr
fdiv
mov
test
adc
xchg
and
ret
dec
stc
sbb
dec
inc
jns
or
dec
sar
scas
xor
xchg
ficomp
xor
or
jge
sbb
cmp
mov
clc
mov
shl
pop
mov
jp
jle
test
mov
push
aad
adc
hlt
call
lds
jns
and
inc
popf
push
(bad)
cmp
pop
int
(bad)
repnz
repz
or
popa
pop
shr
test
setle
inc
into
test
adc
add
es
push
adc
add
mov
xchg
int
sub
outs
daa
call
ins
fst
push
fdiv
imul
lahf
loope
fucomp
jecxz
cdq
ins
and
jnp
pop
xor
rcr
push
dec
rol
sbb
add
not
cmp
inc
mov
idiv
or
dec
adc
int3
or
cmp
mov
fldenv
push
and
xlat
sbb
(bad)
or
(bad)
rcr
movsx
js
cmp
sub
adc
in
push
out
movlps
mov
(bad)
cmp
test
in
pop
xchg
push
sahf
das
les
outs
jmp
xchg
jp
(bad)
dec
inc
mov
jecxz
or
push
lods
jnp
lds
xor
adc
js
lahf
jne
push
sti
fcmovnb
jb
mov
pop
cmp
daa
inc
mov
(bad)
daa
fbstp
(bad)
mov
arpl
pop
test
dec
adc
push
xchg
gs
scas
inc
pop
ror
out
xor
jmp
add
ins
test
cs
aaa
call
xchg
fwait
push
and
lea
and
or
dec
cmp
inc
cwde
imul
pop
pop
lock
mov
cmp
stos
mov
scas
push
cs
test
jne
test
sub
call
add
cmp
mov
mov
sbb
test
adc
out
(bad)
push
data16
mov
(bad)
sbb
pop
int3
push
imul
push
or
bound
(bad)
in
jmp
clc
push
int
sub
sub
fwait
scas
inc
leave
and
mov
cld
pop
out
stos
clc
xchg
jmp
aad
mov
aas
sbb
push
imul
push
sub
out
mov
js
pop
cmp
shl
adc
mov
jbe
adc
dec
stos
dec
pop
mov
dec
retf
cmp
fldcw
mov
mov
fidivr
js
stos
xchg
clc
fcomi
xchg
push
imul
movs
mov
mov
push
push
js
js
call
xor
cs
lods
jp
bound
inc
fs
mov
inc
jp
cmp
push
ror
xor
das
(bad)
aas
aad
cmc
cmp
je
xchg
stos
(bad)
pop
daa
sub
mov
lock
je
or
xor
sbb
xchg
stc
in
inc
jne
int3
inc
adc
or
cld
outs
xchg
fdivr
scas
ds
cmp
ret
and
xchg
jmp
loop
aam
xchg
pop
inc
and
cli
loopne
xor
and
mov
mov
adc
xchg
fld
push
repnz
mov
in
fcomp
mov
fild
or
nop
jno
mov
cmps
push
popa
stc
jge
mov
mov
icebp
scas
(bad)
sub
mul
push
test
xchg
sbb
inc
or
mov
cmp
push
cmp
inc
pusha
push
out
ja
pop
sub
pusha
mov
pop
pusha
xchg
(bad)
mov
mov
addr16
xchg
add
cmp
dec
rol
pop
imul
jecxz
shl
xchg
fs
aad
scas
scas
xchg
mov
mov
sub
mov
imul
test
xchg
cdq
je
lock
ret
inc
test
fstp
(bad)
mov
(bad)
mov
cmps
aas
pop
add
push
jbe
lock
cli
(bad)
xor
scas
jbe
test
pop
add
and
xchg
fs
daa
dec
dec
popa
sbb
xor
sbb
pop
jae
pop
xchg
and
aas
ror
jns
jp
lock
pushf
lods
rcl
adc
push
jno
mov
pop
data16
inc
nop
jno
jp
sti
rcl
rol
sub
retf
out
repz
xor
mov
and
adc
sub
adc
scas
fsub
fdivr
lods
push
jge
rol
into
pop
daa
rcr
sub
sub
cdq
cwde
imul
out
stc
cmp
neg
cmp
imul
sub
jecxz
push
xor
call
mov
jne
add
jl
ret
cli
in
shr
nop
inc
jge
jno
push
in
and
inc
iret
std
inc
sub
div
mov
js
cmps
(bad)
jge
push
jge
stos
pop
jnp
retf
repz
mov
iret
cmp
in
jmp
nop
repnz
lods
dec
fwait
out
nop
jb
mov
rol
or
xchg
push
inc
js
fbstp
fcmovnbe
pop
out
xchg
shr
xor
inc
fistp
aad
movs
pushf
push
pusha
add
jecxz
seto
dec
jge
mov
int
arpl
pop
mov
int
mov
adc
push
jge
pop
cmps
not
into
mov
jb
cwde
sub
ja
mov
pop
iret
inc
mov
inc
das
push
push
mov
sub
lds
mov
sbb
pop
push
fcom
xlat
sar
test
popa
rcl
pop
ins
(bad)
push
stc
sbb
(bad)
in
add
popf
inc
sbb
cmp
mov
xor
inc
or
dec
mov
pop
daa
nop
outs
xchg
aas
inc
scas
cmp
clc
hlt
inc
cmp
xchg
outs
jecxz
jle
enter
mov
(bad)
mov
test
pushf
push
dec
and
jne
mov
xchg
dec
add
inc
fcmovb
mov
fcom
mov
mov
ins
mov
sub
cmp
lods
xor
test
cmc
push
fwait
adc
add
ins
shl
sub
xchg
inc
sahf
cmps
adc
push
xor
pop
lods
mov
jne
jae
jmp
ja
sub
addr16
shl
mov
xor
xchg
retf
ds
mov
pushf
pop
inc
inc
pop
rcr
fst
mov
in
(bad)
sbb
ret
daa
sbb
or
jecxz
sbb
repnz
or
add
int
mov
add
jl
bound
jecxz
gs
dec
popa
xchg
cs
sub
in
(bad)
shl
sbb
cmp
nop
sub
out
lea
loop
ret
push
sbb
push
fdiv
popa
lds
xchg
shr
out
pop
es
(bad)
in
pushf
sbb
dec
test
jge
stc
(bad)
jne
xor
mov
or
loop
or
les
or
inc
(bad)
push
gs
mov
sbb
(bad)
aas
inc
fimul
inc
std
repnz
cmps
sbb
shr
pop
sti
das
fsub
xchg
lods
adc
fnstenv
(bad)
(bad)
fmul
movs
cmp
aas
xor
jmp
fidiv
ja
inc
cmp
jae
fcomip
std
push
ja
out
sahf
adc
pop
adc
pop
out
pop
cwde
mov
jae
arpl
xchg
out
pop
outs
cmps
out
jp
dec
sub
inc
cmp
pop
mov
or
aaa
inc
rcl
aas
(bad)
adc
sbb
in
nop
sar
cmp
movs
add
mov
adc
add
cmp
or
loope
xchg
jge
mov
cmps
xor
ins
mov
pop
loope
push
fwait
rcl
out
out
xor
outs
lods
inc
fst
popf
dec
in
mov
push
(bad)
imul
cdq
outs
push
pop
stc
pusha
jne
jl
sbb
lods
jo
push
mov
jo
and
lods
(bad)
mov
cs
dec
and
sar
call
pop
sub
into
lea
outs
int
xchg
ins
mov
fidiv
lods
cmp
sub
out
pop
cmp
jno
mov
pop
es
inc
inc
(bad)
push
or
aam
push
jg
fdivr
mov
test
(bad)
pop
adc
cmp
add
push
push
cmp
sahf
fs
xchg
mov
jmp
push
inc
or
cmps
leave
test
mov
add
jp
daa
out
pop
rol
sbb
lods
imul
ror
inc
adc
jmp
and
idiv
mov
cmp
inc
push
jnp
pop
clc
jg
rcr
mov
sbb
leave
fstp
jns
das
push
sub
lds
xchg
imul
mov
mov
jp
xor
mov
mov
add
cld
cs
inc
inc
popa
in
push
mov
xchg
aaa
push
cmp
popf
sbb
imul
in
push
mov
sti
std
add
cmps
fcomp
fadd
ret
inc
xchg
sbb
shr
xor
mov
fwait
scas
push
popa
mov
cmp
mov
arpl
push
popf
cmp
xchg
icebp
inc
or
and
clc
out
cmp
cmps
jno
sbb
sbb
adc
fadd
xchg
das
sahf
test
cs
shld
mov
mov
or
addr16
or
and
mov
push
enter
pop
push
dec
je
loop
adc
fbstp
cmp
retf
fisubr
or
mov
dec
movs
pusha
in
push
hlt
mov
iret
(bad)
adc
sbb
mov
dec
dec
sahf
add
iret
nop
fst
inc
jo
nop
lahf
jecxz
clc
repnz
jmp
mov
loope
pop
sub
pop
push
inc
or
push
int3
add
or
ins
push
fdiv
cmp
std
das
jle
cmp
outs
rcr
mov
mov
jnp
hlt
inc
or
mov
cmp
test
cld
jb
pop
imul
icebp
push
jg
mov
ret
leave
(bad)
mov
pop
imul
mov
movs
and
lds
icebp
add
icebp
add
idiv
lock
lea
mov
pop
in
(bad)
push
ss
xchg
jo
pop
je
loope
xchg
jmp
jae
scas
jmp
sar
ins
clc
inc
sar
pop
pop
stos
arpl
inc
pop
fcom
cmp
mov
sub
inc
js
jl
stos
pop
jg
push
cs
cmps
inc
add
fstp
add
fsub
cs
lahf
jne
add
cmp
neg
movs
mov
int
(bad)
stos
sub
push
jns
add
call
mov
add
addr16
push
inc
fcomp
jae
mov
out
inc
mov
nop
jge
icebp
dec
dec
or
hlt
add
pop
inc
xchg
mov
(bad)
std
dec
xor
mov
mov
test
jmp
loop
mov
jge
mov
add
xchg
hlt
aad
adc
test
cmp
pop
push
ss
in
push
int
add
push
mov
in
(bad)
jmp
or
pop
pusha
movd
in
repnz
pop
daa
push
xchg
(bad)
lahf
or
pop
popf
addr16
mov
adc
iret
push
xchg
xchg
pop
sub
dec
jecxz
jae
in
jge
lds
cmp
cmp
aad
sbb
pushf
int
mov
mov
and
fld
mov
xchg
mov
xchg
jmp
mov
cmp
mov
ret
pop
mov
out
xchg
(bad)
out
xchg
cmps
nop
dec
pop
daa
retf
aas
mov
rcl
push
pop
mov
shl
fiadd
mov
mov
scas
sub
rol
(bad)
loopne
loop
xor
pop
xchg
pop
pop
sub
call
fwait
pop
xchg
inc
dec
cmp
movs
hlt
add
scas
mov
xchg
cld
nop
and
sbb
cli
jns
adc
mov
popa
les
xor
repnz
sar
lods
mov
fbstp
loop
popa
lds
outs
cvtps2pd
cdq
clc
lods
outs
and
in
stos
push
cmps
jmp
dec
add
ret
stos
and
or
pop
and
add
loopne
popaw
das
add
mov
add
stc
mov
les
cmp
add
jmp
mov
leave
pop
call
int
push
mov
dec
xor
cmps
push
fucomi
mov
nop
es
or
lea
popf
std
jo
sub
sub
test
xchg
not
xchg
rcr
jb
iret
shl
mov
int3
arpl
rol
data16
sub
fs
dec
sub
pop
mov
dec
cmps
sub
fdivr
mov
cld
xchg
imul
pop
ja
push
jo
pop
cmps
xor
(bad)
sub
aam
out
inc
xchg
xor
adc
push
in
cmp
clc
ret
sub
imul
mov
add
push
xor
cmp
int3
adc
js
cdq
js
xchg
jmp
xor
mov
loope
in
ret
gs
daa
sti
loop
sbb
test
clc
pop
and
cmp
mov
pop
jno
enter
mov
mov
outs
loopne
sbb
out
clc
inc
lods
outs
rcr
js
lods
mov
dec
push
popa
jl
cmp
nop
fistp
push
(bad)
inc
push
imul
iret
ds
sub
jns
and
shl
sub
in
xchg
pop
adc
inc
pusha
or
mov
jge
sub
push
test
dec
test
sti
sub
into
mov
scas
(bad)
ret
and
sbb
mov
jbe
inc
cmp
inc
stos
mov
pop
fidiv
scas
cmp
adc
fnstcw
repnz
je
fcmovnu
and
stc
mov
cmp
popa
jp
adc
les
cmp
sub
cdq
sti
ror
cmp
sar
int
sub
mov
fist
jecxz
out
jmp
and
movs
jns
aaa
sar
into
push
pop
sub
je
aaa
dec
push
ror
mov
jns
scas
rcr
inc
mov
mov
cwde
xchg
jb
mov
call
pop
push
ret
inc
popa
sbb
xchg
add
or
hlt
daa
hlt
cmp
mov
jge
sbb
mov
jge
xchg
mov
lods
daa
loopne
call
stc
mov
(bad)
ds
fistp
(bad)
fdivr
add
nop
or
out
xchg
sub
ret
int3
or
cmc
sub
mov
(bad)
cmp
cmp
cs
in
loop
pop
test
je
out
inc
xor
pusha
add
push
test
fucomi
jle
jmp
pop
and
dec
call
jp
xor
ds
aam
or
push
daa
addr16
mov
pusha
aaa
out
dec
mov
dec
maxps
test
push
outs
jmp
test
shl
jmp
fwait
js
push
fiadd
mov
and
fsub
addr16
push
or
fwait
dec
inc
call
gs
and
std
test
inc
mov
push
push
pop
sbb
(bad)
(bad)
cmpxchg8b
(bad)
retf
adc
sub
mov
loopne
inc
int
xchg
push
xchg
scas
ret
and
(bad)
dec
mov
cmp
into
fistp
std
inc
ret
mov
add
stos
stos
sti
ins
jns
sti
xlat
fimul
inc
mov
and
ret
jno
sub
cmp
and
aam
xchg
and
iret
clc
mov
repnz
jmp
dec
shr
push
pop
icebp
xchg
ds
mov
je
fwait
retf
sbb
mov
es
or
test
cdq
dec
xlat
(bad)
push
xchg
mov
shr
inc
repz
add
fwait
xor
and
lods
cld
or
xchg
inc
dec
fcos
popf
push
and
sub
test
cmp
cli
inc
sbb
xor
sar
cmp
fs
enter
rcl
or
push
mov
mov
clc
test
sub
pop
mov
gs
hlt
pop
stos
pop
aam
or
mov
or
xor
dec
fisubr
js
lods
(bad)
mov
cmp
ins
pop
mov
or
xchg
les
gs
jl
adc
adc
push
jmp
clc
sahf
cwde
shl
pop
xor
repnz
in
outs
cmc
dec
or
cli
sub
adc
dec
adc
adc
(bad)
adc
fdivr
cmp
xchg
add
loop
ret
add
cwde
xor
pushf
jp
cmp
or
outs
and
sub
jmp
xchg
sub
or
jmp
js
sbb
(bad)
push
fidiv
xor
addr16
icebp
cld
das
cdq
xor
mov
retf
test
xlat
dec
xor
sbb
jl
cmp
mov
sub
sti
push
addr16
(bad)
and
sbb
imul
push
(bad)
sbb
(bad)
sti
or
mov
out
sub
mov
jns
mov
dec
cmps
iret
les
icebp
sbb
imul
adc
sbb
dec
jge
pop
arpl
and
stc
enter
es
jae
cmp
inc
mov
sub
xacquire
stc
dec
jmp
push
fidiv
adc
jbe
aam
push
sbb
fcom
ror
inc
jb
cmp
ins
aas
and
push
jp
jp
ja
cmps
lock
and
(bad)
cmp
ret
mov
xchg
mov
ja
leave
(bad)
add
mov
rol
and
adc
xor
or
mov
sub
mov
enter
inc
sbb
add
mov
repnz
rol
push
push
ins
rol
jl
pop
lods
test
js
dec
es
push
add
rol
mov
fcmovnbe
scas
(bad)
pop
jns
push
repz
add
sar
mov
inc
icebp
test
stos
xchg
fbld
inc
js
shr
add
jp
mov
fldl2t
stc
pusha
jno
pushf
lock
or
pop
dec
xchg
sub
ja
xchg
retf
jge
(bad)
mov
push
imul
sbb
xlat
dec
scas
xlat
xlat
daa
or
xor
lods
pushf
gs
jbe
sbb
mov
ja
mov
mov
sub
test
jne
sbb
jg
retf
out
out
(bad)
aas
repnz
mov
jnp
stos
mov
mov
xchg
movs
sar
enter
mov
(bad)
jo
sbb
xchg
lahf
push
pop
push
vmwrite
pop
cld
mov
adc
and
imul
and
in
test
xchg
cmp
popf
daa
movs
ror
add
in
mov
call
or
sub
cmp
sbb
cli
sbb
sar
(bad)
lods
xchg
dec
cmp
test
(bad)
sub
cmp
or
fisttp
xchg
mov
or
movs
(bad)
mov
pushf
imul
adc
loope
fwait
outs
aaa
retf
outs
sbb
or
loope
sub
out
out
mov
mov
(bad)
fld1
shl
movs
pop
jbe
int3
adc
neg
xor
ins
add
(bad)
rol
push
push
cli
into
retf
leave
sbb
mov
mov
pop
sub
gs
je
aam
stos
popf
movs
pushf
retf
inc
les
adc
cmp
mov
imul
mov
inc
add
mov
inc
das
rcr
mov
pop
stc
std
jno
fnstsw
test
out
push
popa
in
lock
in
pop
int
rep
ret
xlat
jns
cmp
jne
out
fiadd
(bad)
inc
or
push
outs
fsub
sbb
retf
(bad)
sbb
aad
out
mov
add
(bad)
into
test
sub
mov
inc
scas
fild
data16
jo
retf
stos
pop
pop
mov
push
or
jmp
dec
add
(bad)
jmp
lods
jne
daa
popa
rcl
pop
(bad)
jno
je
inc
jp
push
shr
pop
test
enter
bound
jb
call
loope
and
inc
sar
pop
popa
out
and
clc
or
cmp
lock
push
pop
ret
jne
pop
dec
fsub
sub
das
imul
int
hlt
sub
mov
addr16
fsubr
cmc
jo
mul
sbb
inc
mov
out
cdq
jmp
test
inc
and
jno
ucomiss
add
mov
pop
lods
xor
rcl
cdq
lds
stos
repnz
cmp
xlat
les
lahf
mov
das
dec
rol
sbb
cmp
fdivr
jo
add
sub
jp
mov
test
stc
cmp
movs
dec
cdq
jg
or
add
in
stos
sbb
movmskps
leave
jnp
cmp
sbb
adc
and
arpl
gs
mov
inc
mov
pop
jle
mov
shr
push
arpl
stos
adc
stc
sub
mov
fistp
cmp
fstp
mov
push
xchg
sbb
adc
dec
and
in
fist
test
hlt
adc
imul
cld
clc
fcomp
push
fwait
sub
mov
cmp
leave
(bad)
jae
rol
je
xlat
stos
pop
dec
fisttp
add
or
and
cmps
mov
jae
shl
(bad)
daa
imul
pushf
in
pop
js
jne
xor
stos
add
pop
mov
or
scas
fcmovnbe
sub
shl
pop
xlat
lods
cli
int
push
push
call
bound
cmp
mov
sub
dec
pop
jns
sub
out
cwde
push
xchg
test
add
push
xor
jle
fs
call
out
jge
xchg
pop
xlat
out
fdivr
push
push
cmp
pop
jle
pop
sbb
mov
(bad)
sbb
mov
sbb
jle
dec
arpl
test
mov
or
jne
sub
hlt
mov
sbb
retf
out
sbb
sub
xchg
sbb
lds
js
add
mov
sbb
test
add
cwde
(bad)
pop
xor
push
fs
lahf
daa
test
inc
mov
cli
push
aaa
xor
sbb
in
cmp
test
test
mov
mov
(bad)
imul
jge
out
sbb
lods
mov
dec
cdq
sbb
popa
xchg
cld
rol
es
dec
cld
jnp
outs
test
mov
js
in
inc
ds
xor
inc
cwde
mov
mov
arpl
cmp
xor
xor
outs
pop
xchg
and
cmps
es
(bad)
pop
jge
pop
movs
jne
cmp
jns
mov
stc
(bad)
adc
(bad)
pop
dec
and
add
xor
mov
daa
(bad)
daa
(bad)
xchg
xlat
mov
sahf
dec
retf
push
adc
mov
out
(bad)
shl
shl
mov
fcomip
cmp
mov
mov
push
lods
lock
xchg
mov
dec
sbb
inc
test
out
jae
cs
es
xchg
(bad)
xor
push
cmp
xchg
mov
fisttp
or
jb
mov
mov
leave
sub
hlt
data16
mov
mov
outs
mov
fcomi
and
int3
fs
ret
push
idiv
pushf
enter
or
xor
and
adc
ret
pushf
xchg
jnp
add
ins
add
cmp
(bad)
pop
mov
cmps
jp
shr
repz
sub
test
iret
mov
push
inc
mov
call
xchg
xor
inc
pop
and
call
mov
loopne
clc
and
cs
inc
movs
jae
shl
cli
fimul
mov
in
push
scas
cdq
bound
pop
sti
(bad)
pushf
out
call
nop
cmp
adc
fidivr
call
(bad)
pop
mov
hlt
popa
adc
cmps
cli
repnz
jne
out
mov
mov
pop
mov
ds
xor
push
xchg
jecxz
retf
jae
test
(bad)
jno
sbb
pushf
inc
dec
inc
mov
sub
shl
pop
imul
add
ficomp
sahf
dec
ja
(bad)
in
popa
jl
out
out
fist
and
lods
mov
(bad)
sbb
mov
repnz
movs
jmp
cmp
or
fdiv
add
ret
sahf
shl
call
xchg
sbb
sub
sti
call
call
inc
(bad)
in
xor
sahf
outs
inc
fadd
lea
fsubr
loopne
add
jbe
int
mov
(bad)
push
dec
cdq
cmc
inc
sub
push
lea
ret
arpl
leave
mov
lods
jb
xor
fimul
ins
daa
push
clc
aam
jecxz
icebp
ret
cmc
push
mov
cwde
xchg
pop
in
jecxz
add
inc
call
dec
adc
idiv
mov
cld
push
mov
into
add
inc
pop
push
push
data16
int
je
lds
pop
push
in
sbb
cmp
sub
pop
xor
sub
xchg
xchg
dec
push
sbb
jns
xor
(bad)
loop
mov
and
stos
cmp
lods
pusha
push
add
sub
push
inc
lahf
mov
xchg
(bad)
out
(bad)
xor
ret
cli
ins
sub
dec
and
jge
bnd
mov
pop
and
or
or
pushf
lods
pushf
sub
push
push
jnp
push
cdq
push
outs
jle
out
adc
push
cmp
mov
push
stos
shl
inc
add
sbb
dec
int3
adc
push
stos
push
vpcmov
push
in
or
cwde
stc
xor
and
imul
in
neg
les
out
pop
cli
sar
fstp
mov
dec
push
push
lock
aad
xchg
fs
push
cmp
out
shl
loopne
mov
inc
clc
scas
rcr
jmp
adc
or
mov
push
push
or
sub
divps
es
xchg
mov
daa
adc
sar
mov
push
jb
or
sub
ins
out
ret
out
push
cli
pop
mov
sub
aaa
mov
adc
mov
add
dec
dec
mov
js
adc
outs
cld
icebp
jmp
jb
push
mov
popf
dec
int3
es
mov
cmp
outs
in
mov
adc
lods
ss
int3
bound
cmp
hlt
sti
test
sbb
mov
pop
imul
imul
loop
cmps
mov
mov
scas
and
xor
fs
stos
adc
int3
push
(bad)
in
xchg
adc
adc
add
or
lock
ins
test
xor
sar
xor
(bad)
jg
repz
sar
dec
xchg
in
sbb
sbb
call
jp
xor
mov
stos
pusha
dec
mov
sub
into
push
stos
sbb
clc
inc
jns
aaa
aaa
mov
xchg
xchg
add
inc
retf
fild
xrelease
into
imul
ins
pop
rol
mov
pushf
or
or
xchg
movs
popf
mov
enter
mov
jle
adc
mov
std
sbb
sbb
cwde
inc
js
dec
hlt
add
push
mov
cmp
mov
arpl
add
scas
mov
in
push
mov
inc
ja
push
and
cdq
ret
repnz
or
and
xor
sbb
(bad)
frstor
or
or
dec
mov
sbb
or
pop
sub
adc
cmp
mov
adc
mov
fsubr
dec
sbb
(bad)
cmp
push
sub
dec
mov
imul
adc
xor
in
push
or
xchg
sub
adc
cli
lds
sub
inc
jbe
(bad)
dec
shl
pop
dec
xor
int3
in
lods
ds
dec
fstp
jle
jge
repnz
sbb
dec
int3
stos
push
outs
mov
addr16
int3
jo
cmp
xor
xchg
add
out
pop
pop
xlat
sbb
rep
sbb
sub
and
sbb
test
adc
pushf
test
mov
repnz
daa
mov
mov
ins
push
xchg
jmp
xchg
sti
int3
mul
rol
add
cld
ret
out
mov
push
cmps
aad
call
and
int3
out
pop
xor
pop
dec
popa
cld
call
js
test
mov
dec
dec
sbb
loopne
mov
push
cld
mov
and
mov
hlt
jge
daa
mov
mov
(bad)
mov
sahf
ror
inc
fcomp
mov
imul
loopne
jmp
fwait
cs
(bad)
in
inc
in
std
adc
sbb
xlat
sbb
push
adc
sbb
mov
outs
push
xor
cmp
xor
dec
test
inc
in
mov
ins
test
add
in
je
in
in
add
ins
ds
sub
mov
lds
mov
test
lods
dec
popf
test
out
push
loope
test
pop
fsub
dec
xchg
or
repz
cmp
das
pop
sbb
fcomp
add
idiv
pop
hlt
push
dec
cmp
jp
jecxz
das
pop
cmp
popf
jp
xchg
in
jns
cmc
fsubr
mov
stos
jge
into
movs
adc
xor
add
push
icebp
xor
mov
cmp
scas
xchg
int
pop
sti
xor
aam
xor
mov
fdivr
add
ret
std
xchg
add
push
jb
push
fmul
ret
aas
mov
adc
jae
in
add
(bad)
inc
pop
shr
adc
add
sub
xor
inc
loopne
das
mov
or
fidivr
jl
popf
ja
push
call
nop
inc
iret
sub
push
cmp
into
mov
mov
enter
cmp
jo
inc
add
inc
cld
(bad)
xor
inc
pop
icebp
outs
push
icebp
lea
out
and
jb
xor
lods
in
sahf
mov
inc
fs
cld
ds
and
and
jne
pop
(bad)
and
xor
lods
aam
or
pop
pop
or
cmp
mov
hlt
jg
sub
stos
mov
aas
jbe
xchg
cmc
les
jb
sub
dec
ins
xchg
xchg
pop
(bad)
pop
dec
popf
enter
or
jnp
push
or
out
out
jecxz
repnz
jo
mov
fcomp
dec
clc
bound
adc
mov
sahf
sub
cmps
cs
and
fild
outs
mul
outs
push
adc
sub
fwait
sti
js
push
mov
in
addr16
and
xor
arpl
lea
and
xor
imul
sbb
pop
clc
out
jbe
pop
or
cmovge
test
add
nop
dec
adc
fisttp
push
dec
xor
ins
xor
add
jecxz
mul
stc
sbb
push
cmc
push
push
xchg
inc
(bad)
popa
or
inc
or
sub
fstp
pop
dec
xor
(bad)
rcl
outs
out
lds
dec
scas
and
xor
loope
or
rcl
dec
fwait
mov
fstp
mov
xor
je
jl
mov
or
retf
xchg
pop
fadd
xlat
and
outs
sbb
lds
push
inc
call
add
add
sub
xchg
jno
(bad)
sub
and
pop
call
fild
shl
xchg
push
mov
fld
sbb
sub
call
xchg
aas
(bad)
(bad)
js
aas
jno
add
js
mov
inc
inc
in
jmp
xor
stos
xor
cdq
mov
inc
or
inc
cmp
(bad)
and
mov
jnp
mov
or
sbb
or
mov
or
test
or
dec
in
mov
fsub
adc
sbb
sub
sbb
retf
aaa
add
mov
mov
push
xor
bnd
add
xchg
adc
add
push
cmp
ds
jbe
dec
out
hlt
std
add
popf
or
cdq
test
and
fs
lds
mov
jno
lods
sbb
xor
push
mov
mov
add
sbb
out
leave
jl
(bad)
mov
gs
jecxz
sub
in
cdq
ret
stc
xchg
stos
or
loop
add
repnz
xor
loope
addr16
pop
nop
jmp
adc
cld
cmps
data16
ret
xchg
add
jge
add
in
icebp
stc
mov
and
add
add
mov
adc
dec
mov
in
or
sti
cmp
add
nop
mov
sbb
pop
hlt
inc
mov
jb
(bad)
pushf
in
jb
daa
mov
sar
test
cmp
aam
adc
xor
ja
movs
(bad)
add
(bad)
arpl
mov
inc
push
xchg
jge
pop
jb
repnz
(bad)
cmp
and
sub
sub
or
cli
pop
pusha
add
xchg
mov
aaa
js
es
or
pop
mov
stc
pusha
mov
das
xor
lods
mov
outs
stos
push
adc
pop
test
(bad)
push
xchg
mov
cwde
in
shl
inc
pushf
sbb
rcr
dec
imul
inc
enter
retf
dec
hlt
or
pop
adc
ror
fld
out
idiv
sbb
dec
fcom
mov
jge
inc
mov
cmps
jae
pop
inc
call
xor
ins
test
xor
ins
iret
fstp
mov
das
pop
loopne
inc
frstor
inc
mov
mov
cmc
in
or
push
jo
ins
rcr
or
and
sbb
dec
cmp
pop
xchg
adc
bound
push
pusha
sub
and
ret
add
xchg
inc
pop
dec
aaa
bound
sar
lds
cmps
inc
rol
inc
mov
adc
xchg
xchg
aas
push
mov
xchg
xor
sti
int
cmp
test
dec
icebp
or
arpl
cmp
cmp
push
lock
jl
push
cmp
inc
xlat
add
aaa
das
adc
jo
cmp
outs
and
punpckhdq
jmp
jnp
fist
mov
daa
add
stos
jecxz
push
clc
pop
mov
mov
daa
push
mov
out
jne
gs
add
or
adc
mov
pusha
imul
mov
and
jmp
data16
mov
cld
xchg
add
rol
pop
pusha
aaa
gs
mov
xlat
xchg
call
jae
inc
and
cmp
xchg
retf
in
cwde
clc
add
add
xchg
cmp
in
scas
cmps
fwait
cli
mov
fmul
icebp
repnz
(bad)
mov
not
mov
sbb
mov
xor
adc
dec
mov
mov
cmp
test
scas
dec
jnp
and
sbb
jl
lock
out
jbe
clc
add
or
pusha
mov
inc
mov
jne
out
dec
xor
cmp
call
xchg
rol
xor
push
mov
fwait
cmps
call
retfw
movs
daa
cdq
pop
aam
xchg
(bad)
push
cmp
inc
cmp
pop
std
call
mov
loopne
cmps
push
dec
out
and
inc
(bad)
dec
inc
pop
pop
ins
mov
jno
jecxz
fwait
lods
iret
cmps
adc
add
call
sti
fucom
clc
daa
hlt
mov
mov
retf
imul
adc
pop
jl
fldcw
data16
loop
loopne
stos
dec
lods
or
lock
push
push
je
pushf
aam
dec
test
call
mov
pop
cmp
sbb
aas
ret
add
add
sub
and
dec
icebp
add
add
or
inc
xor
add
fisub
and
add
imul
daa
aad
sub
(bad)
cli
or
or
stos
adc
push
shr
mov
js
cmps
sub
adc
sbb
movs
sub
xor
aaa
or
mov
test
jmp
pop
sub
mov
sbb
and
scas
fld
push
mov
std
or
or
xchg
push
pop
adc
daa
jb
sub
scas
aad
mov
fisubr
ficomp
aad
leave
push
rcr
fisttp
xchg
jne
inc
cli
ja
aaa
xor
test
out
test
push
inc
inc
pop
(bad)
gs
retf
jmp
sbb
in
mov
inc
xor
mov
adc
xlat
retf
mov
jl
repz
sub
mov
fistp
cmp
fidiv
pop
inc
int3
mov
jmp
sbb
adc
and
movs
lods
stc
sbb
jl
push
push
nop
push
cmp
add
mov
cmp
loope
retf
cmps
xchg
sub
movs
in
inc
adc
(bad)
or
cmp
fs
add
nop
add
jb
pop
and
call
adc
cs
imul
mov
mov
dec
xchg
and
push
and
mov
jo
push
ss
adc
or
add
mov
inc
arpl
movs
mov
data16
pop
xchg
scas
dec
bound
sub
pop
push
sti
pop
adc
je
aam
push
fst
cdq
xchg
sar
in
sar
jmp
lds
icebp
push
or
je
push
aas
push
sbb
not
inc
xchg
sbb
in
mov
xlat
dec
out
dec
(bad)
in
mov
inc
jae
jnp
dec
syscall
es
sbb
mov
hlt
xor
mov
out
xchg
and
ret
push
jecxz
fsubr
in
das
das
and
loop
fdivr
mov
(bad)
cmp
add
inc
clc
ds
push
imul
mov
mov
jp
and
mov
js
mov
clc
add
xchg
cmp
aam
push
add
gs
sub
or
mov
(bad)
fcomp
add
mov
mov
or
test
adc
mov
(bad)
and
xchg
retf
out
(bad)
sub
pop
test
and
mov
xchg
stos
pop
aam
fdiv
je
sbb
sub
out
out
sahf
cli
repnz
clc
or
sub
rcr
cmp
jmp
dec
jno
sbb
push
sub
add
idiv
cmp
into
or
cs
xlat
xchg
std
mov
mov
push
ds
sti
sbb
in
jge
add
(bad)
(bad)
retf
sahf
xor
sub
push
mov
xchg
sti
dec
jle
fld
test
adc
fbld
xchg
mov
jno
iret
sbb
cmp
popf
ins
mov
add
xchg
dec
mov
cmp
mov
aad
repz
int3
sbb
repnz
and
xor
and
ins
addr16
or
adc
and
mov
jae
or
repnz
loop
punpcklwd
mov
cdq
aam
push
xchg
xlat
push
jmp
cwde
fcom
daa
jo
jno
mov
pop
arpl
dec
movs
rcr
dec
jb
jns
in
jb
dec
jnp
push
pop
jo
retf
mov
dec
push
inc
mov
xor
cli
xor
out
jb
mov
call
cs
or
iret
jb
fadd
aas
dec
xchg
setge
loope
dec
add
mov
mov
je
mov
dec
jbe
jmp
arpl
pop
pop
pop
pop
dec
inc
cmps
lods
mov
mov
arpl
add
sbb
das
xchg
mov
pop
test
retf
ja
mov
xchg
inc
pop
aas
jl
pop
(bad)
dec
test
inc
out
dec
stos
or
fist
into
cmps
push
mov
pop
enter
jl
mov
add
cmp
push
enter
sar
push
sub
inc
mov
icebp
mov
or
inc
cmp
addr16
cmp
js
mov
ror
mov
push
xchg
pop
out
js
mov
(bad)
ret
inc
inc
mov
add
int3
retf
adc
and
dec
cwde
mov
mov
adc
ins
mov
loop
xor
sub
or
sti
push
nop
add
jno
jmp
jl
adc
cdq
mov
fwait
(bad)
cmp
lahf
pop
inc
in
inc
cs
cmp
sbb
lea
imul
sbb
imul
mov
jmp
jb
cmps
push
cmp
popf
mov
push
std
sub
call
popa
xchg
adc
call
lahf
mov
rol
sub
(bad)
shl
retf
dec
call
retf
fdivr
arpl
jns
jp
in
sub
cmp
ret
mov
clc
fs
ret
test
xchg
fldcw
(bad)
push
les
dec
iret
popa
mov
sbb
xchg
jno
and
test
dec
mov
shl
mov
enter
jmp
jae
adc
push
and
shr
or
int3
mov
sbb
sahf
jb
outs
sbb
jg
mov
xor
cmp
cli
cmps
movs
iret
or
inc
retf
sub
mov
mov
cld
jne
aad
mov
mov
inc
mov
cmp
mov
push
sbb
lahf
mov
push
and
cmp
or
sbb
push
scas
push
sub
leave
xchg
into
clc
(bad)
loop
ficomp
outs
add
add
inc
pop
push
jle
mov
mov
inc
cmp
test
mov
adc
pusha
ret
adc
retf
or
fcomi
sti
(bad)
jge
pop
push
add
cmc
adc
je
popf
push
cs
leave
jle
xor
inc
pop
pusha
cmp
xchg
cld
xchg
push
sbb
or
cwde
cli
cmps
pushf
retf
mov
mov
xor
cmp
pushw
shr
push
hlt
jo
push
lea
push
xchg
jg
xor
(bad)
mov
leave
mov
mov
adc
outs
xor
mov
pop
aas
mov
push
jns
popf
inc
mov
adc
loop
ds
lods
and
ficom
adc
mov
dec
push
pop
icebp
js
mov
imul
pusha
cld
(bad)
cmc
out
outs
dec
pop
jg
into
fs
mov
or
in
sub
jnp
adc
movs
xor
in
std
jbe
push
cmp
push
push
jae
and
ret
pop
rol
dec
fist
test
jne
sub
mov
mov
push
pop
xchg
bound
dec
test
fs
(bad)
dec
or
arpl
ins
sub
xchg
loop
or
jg
(bad)
sbb
mov
and
jmp
mov
push
scas
xor
imul
dec
loopne
test
or
(bad)
push
jmp
out
push
test
push
inc
mov
retf
imul
test
pop
dec
pusha
adc
cli
add
cld
sbb
movs
xchg
xchg
sub
cli
mov
push
sbb
hlt
imul
pop
xchg
or
imul
xlat
int3
call
mov
shr
xchg
out
xchg
aad
pop
and
in
inc
sbb
adc
inc
imul
dec
popf
pop
imul
adc
nop
aas
jmp
imul
lds
xchg
in
in
inc
jns
aaa
xor
sbb
sub
push
mov
jns
dec
cmp
jmp
es
add
xor
push
cld
mov
dec
addr16
enter
fnstenv
sti
dec
lea
add
mov
sbb
rcl
movs
sub
pop
je
fild
js
dec
push
mov
and
jnp
push
call
stc
sub
jbe
sub
stos
aas
xchg
aad
in
sbb
fmul
or
icebp
(bad)
adc
sti
leave
adc
inc
cli
dec
loope
push
aam
push
stos
popf
sub
cs
movs
jmp
(bad)
outs
adc
popf
jnp
ja
gs
mov
or
adc
arpl
sar
fadd
xor
mov
add
push
(bad)
pop
mov
push
call
push
ja
dec
int3
sbb
mov
inc
jnp
mov
pop
push
jbe
pop
call
test
mov
test
cs
mov
jmp
mov
stc
push
outs
test
mov
add
out
scas
push
aad
scas
js
push
mov
or
daa
scas
daa
hlt
retf
add
cmp
push
rcr
rcl
adc
cwde
sub
sub
dec
std
sbb
fild
dec
cmps
fld
push
or
addr16
gs
popa
push
call
aas
inc
stos
mov
dec
call
jne
arpl
cli
adc
jmp
cmp
add
cmc
fadd
sub
pop
sub
cmc
sbb
stc
mov
int
mov
pop
and
fisub
xchg
add
xor
sbb
(bad)
mov
adc
ins
fdivr
test
imul
ins
jns
sbb
mov
xchg
jmp
mov
cmp
pop
xchg
popf
add
cmps
iret
xchg
outs
int3
(bad)
or
js
rol
fstp
ret
sub
xchg
xor
movs
push
sub
push
in
ins
out
adc
lahf
mov
(bad)
(bad)
or
fnstenv
pop
mov
and
pop
gs
push
pop
add
enter
push
mov
mov
mov
out
and
sar
mov
or
mov
cld
adc
and
call
xchg
cdq
jo
mov
repnz
adc
dec
adc
cmc
sahf
in
cmps
adc
mov
enter
pop
or
mov
jmp
leave
cli
or
movs
mov
mov
das
repnz
jnp
fld
cmp
inc
in
mov
scas
and
mov
add
fisub
pusha
mov
sub
cmp
inc
mov
adc
fisttp
add
lahf
int
pop
push
inc
cmp
sti
mov
xor
xor
sub
mov
(bad)
cmps
xchg
aaa
jecxz
jp
pop
push
ror
cs
push
cli
aam
(bad)
and
push
in
pushf
jl
scas
jmp
stc
mov
sbb
sbb
jo
pop
and
or
call
imul
cmp
push
sub
out
mov
inc
mov
shr
and
mov
movs
sub
adc
(bad)
dec
sub
cmp
push
test
adc
aas
inc
and
xor
movs
add
daa
and
dec
xchg
not
adc
loopne
ins
mov
je
cld
and
icebp
aam
cmps
(bad)
fcomp
xchg
cdq
mov
in
je
es
stos
xor
aaa
lahf
fiadd
repnz
adc
xchg
xchg
fwait
movs
jb
mov
xchg
dec
mov
pop
ds
int3
out
pusha
jmp
stc
ja
xor
mov
jmp
aad
icebp
dec
add
sbb
jb
xchg
test
mov
sahf
shl
add
dec
into
and
sub
mov
es
popf
lods
retf
cmc
mov
in
push
jg
pop
sar
cmp
lds
repz
inc
jmp
jne
push
sbb
test
scas
jns
and
imul
pop
div
mov
xor
or
xchg
or
nop
cdq
jmp
sub
call
adc
int
jecxz
mov
cwde
jge
test
cli
in
popf
xchg
pop
push
dec
outs
fist
bound
mov
fisubr
lds
cmp
add
mov
ffreep
aas
pop
ret
arpl
push
movs
sub
xchg
xor
test
xchg
add
loopne
ins
test
je
hlt
pop
nop
and
mov
cmp
push
mov
mov
mov
test
mov
push
cmp
jns
cmp
pop
daa
push
sub
popa
mov
xchg
mov
mov
and
div
pop
xlat
sub
jmp
stos
pop
mov
pop
addr16
jp
push
jbe
es
loopne
adc
cs
push
mov
scas
dec
sbb
sub
in
adc
adc
daa
daa
push
lock
fisubr
mov
jmp
sub
test
popa
jno
jb
leave
pop
cmp
dec
ja
mov
or
add
sub
scas
xor
in
cmp
dec
imul
fisttp
repnz
push
mov
pop
cmp
cmp
xchg
sub
cwde
jno
dec
pop
push
jns
retf
sar
add
pop
dec
enter
test
imul
push
stc
mov
and
inc
adc
cmp
lahf
hlt
div
jg
enter
aas
mov
and
inc
mov
sahf
stos
xchg
out
(bad)
sbb
jae
mov
xchg
jp
cmp
in
cmc
jge
push
sar
push
gs
and
retf
xchg
adc
int3
xchg
mov
xchg
pop
sub
ds
mov
ret
fwait
inc
xor
scas
enter
jbe
push
sub
sub
lods
inc
or
xor
inc
es
jg
test
adc
sbb
ret
retf
pop
dec
dec
gs
mov
mov
lods
mov
pop
into
dec
mov
inc
mov
and
mov
fsubr
imul
sahf
(bad)
mov
les
or
push
pop
inc
xor
arpl
mov
mov
sub
cmps
fnstsw
push
cdq
loopne
cmps
iret
push
xchg
xor
adc
cmp
jmp
dec
mov
data16
clc
ret
adc
push
sub
enter
dec
xor
mov
xor
sub
dec
xor
mul
aaa
push
pusha
mov
popa
inc
adc
in
jge
cmp
jbe
in
in
cmp
xchg
push
mov
push
xor
sti
jle
lea
cmps
lods
dec
add
js
or
outs
das
fimul
and
pop
inc
lock
add
psraw
pop
sbb
pop
mov
mov
xchg
pop
(bad)
iret
test
rcl
neg
sbb
mov
jecxz
or
mov
push
cmp
jle
sub
push
jl
cwde
pop
cmps
cmp
mov
enter
push
clc
imul
in
adc
pop
mov
lock
jb
mov
jle
mov
stos
mov
xchg
mov
dec
gs
loop
adc
cmp
out
dec
pop
pop
add
pop
inc
arpl
mov
mov
mov
pop
cli
push
je
lds
clc
repz
lods
push
sbb
popf
pop
dec
add
lods
xchg
dec
jmp
ror
push
fwait
mov
clc
fdivr
xchg
ins
loop
sbb
outs
(bad)
ss
push
or
inc
(bad)
jnp
jnp
push
push
pop
add
jns
adc
cmc
inc
push
push
mov
jl
jb
(bad)
mov
mov
jb
cmp
jp
pop
add
mov
jmp
ja
mov
shl
fld
dec
outs
daa
ins
mov
push
in
add
fimul
and
hlt
mov
adc
out
adc
pop
fisubr
adc
pop
lds
retf
stos
xor
and
dec
mov
adc
fld
xlat
or
dec
les
imul
retf
adc
lea
mov
xchg
dec
mov
xor
mov
fdiv
sbb
pop
bound
arpl
mov
or
cmp
adc
jae
movs
sub
mov
xchg
into
jbe
jo
mov
fsubrp
pushf
pop
jae
pop
xlat
shl
fsubr
icebp
(bad)
retf
scas
pushf
das
or
or
push
fdivr
call
(bad)
call
inc
inc
dec
popf
std
hlt
jl
push
adc
mov
mov
(bad)
dec
call
loope
jmp
adc
inc
adc
iret
mov
fiadd
jb
xchg
retf
pop
test
jg
xrelease
adc
xchg
cmp
call
cmp
mov
fsub
nop
and
pop
xor
mov
cmp
aaa
lds
aad
jae
jp
xor
sbb
dec
jne
push
pxor
sbb
mov
mov
loope
(bad)
jp
dec
jae
movs
lods
mov
dec
pop
test
out
push
(bad)
ret
add
or
jo
xchg
mov
mov
jbe
dec
and
ret
shl
push
push
sub
mov
sbb
sbb
jecxz
pop
popa
add
pop
or
js
test
jbe
push
fwait
popa
mov
lds
mov
and
mov
adc
push
arpl
sub
sub
sbb
and
bound
test
ins
mov
addr16
mov
mov
mov
fldl2e
jge
jb
lods
push
int
aaa
data16
jle
push
jbe
addr16
jb
rcr
xor
jne
add
les
sbb
xchg
loope
fwait
xor
outs
xchg
xchg
add
out
jmp
xor
xchg
shl
pusha
lods
test
mov
scas
mov
sbb
sbb
mov
ss
lods
sti
xor
std
(bad)
jmp
cld
aad
xor
mov
fs
xchg
imul
cdq
lods
dec
or
sti
idiv
(bad)
sbb
movs
fs
mov
aas
daa
stos
add
jmp
xlat
fcomp
and
ret
pop
inc
adc
jg
lods
pop
pop
aaa
aad
or
mov
sub
mov
dec
cmps
push
adc
(bad)
pop
push
inc
mov
inc
imul
imul
bound
(bad)
movs
lods
outs
add
fdivr
pop
jbe
dec
and
scas
clc
xlat
xchg
add
shl
iret
cmp
and
div
pop
mov
push
shr
mov
stos
push
inc
mov
ret
sbb
inc
ret
std
ss
or
sbb
pop
in
inc
int
push
mov
adc
pop
daa
ins
(bad)
(bad)
lock
rol
outs
test
cwde
sub
mov
dec
pusha
pop
xor
jnp
jmp
aam
xchg
xchg
xor
xor
push
pandn
cld
jecxz
sub
cli
das
mov
clc
fmul
pop
mov
jb
or
add
and
aam
test
push
cmp
mov
mov
mov
(bad)
push
cmp
inc
aam
xor
repnz
push
ss
loop
stos
lds
ins
mov
cli
lods
sub
mov
int3
pusha
ret
inc
loopne
lahf
jmp
popf
adc
and
adc
cmp
mov
nop
or
and
add
mov
lods
call
jle
or
in
cmp
mov
repnz
push
cmps
mov
adc
jmp
in
out
es
fs
jecxz
xchg
dec
outs
xchg
jne
outs
jns
pusha
dec
or
pushf
fidiv
jmp
dec
and
pop
and
push
xchg
inc
test
shl
dec
xor
xchg
dec
mov
iret
(bad)
cmp
lahf
clc
aad
cwde
inc
call
add
jns
mov
jb
xor
ds
inc
pop
leave
rcl
sbb
mov
cmp
test
fld
cwde
sti
mov
mov
sub
in
fcomip
leave
push
fwait
dec
enter
pushf
add
scas
in
jns
ds
adc
sti
scas
jmp
into
mov
sub
cmc
mov
push
call
in
xor
mov
cdq
mov
in
dec
add
out
cmp
test
add
(bad)
repz
xchg
adc
push
(bad)
(bad)
icebp
sub
adc
ret
dec
mov
lahf
cmp
mov
movs
push
(bad)
push
push
clc
and
mov
push
adc
pop
pop
(bad)
out
popf
(bad)
adc
xchg
sahf
mov
(bad)
lock
data16
fdivr
jae
jo
or
jge
cmps
fiadd
rcl
add
sub
mov
sbb
add
mov
sar
cmp
lds
int3
jle
fmul
pusha
inc
jge
adc
cmps
ja
xlat
xchg
stc
enter
pop
hlt
cs
pop
xchg
inc
or
pop
jl
mov
jno
loope
shl
pop
inc
lea
jmp
mov
aad
or
shl
fwait
les
push
dec
(bad)
dec
jecxz
dec
jp
clc
adc
aas
adc
mov
popf
adc
in
out
mov
lods
push
cld
sub
jg
pop
mov
pop
pop
xchg
pop
adc
xor
add
std
jb
fld
pop
xlat
jbe
lods
push
cmp
mov
loopne
or
bnd
in
les
jo
sar
vminsd
mov
repz
stos
call
add
push
or
rcr
aas
mov
add
cmp
(bad)
and
mov
push
(bad)
in
fcomp
gs
adc
jo
imul
mov
mov
clc
(bad)
(bad)
cdq
mov
lea
dec
aas
aaa
adc
leave
cmp
int3
test
ins
in
sub
add
dec
(bad)
push
xchg
xchg
jns
inc
mov
xor
jbe
add
inc
pop
or
xor
or
aaa
push
push
test
in
rcl
mov
add
and
xchg
dec
imul
dec
imul
sbb
mov
imul
dec
ret
nop
fscale
xchg
cmp
test
mov
adc
pop
lods
out
add
mov
cmps
jp
dec
fwait
pop
popf
sbb
hlt
pop
and
sub
jne
div
(bad)
xchg
cmps
scas
mov
add
dec
fdivr
dec
cwde
lods
add
ja
jb
inc
into
das
adc
cmc
ret
cmc
retf
and
xor
sbb
sbb
lahf
sub
sbb
pop
movq
xchg
popf
test
mov
pop
xchg
cld
aaa
fldenv
stc
ins
add
adc
(bad)
mov
jg
push
xor
imul
ja
and
ins
ret
cmp
push
je
mov
stc
cmp
gs
les
add
add
shl
add
scas
icebp
xchg
jl
push
cmps
aam
mov
hlt
dec
lods
daa
xor
(bad)
ss
xor
int
rcr
out
js
neg
je
xchg
enter
pop
retf
stos
pusha
ins
xchg
lahf
mov
test
call
call
add
ja
pop
dec
push
sbb
pop
inc
das
dec
lods
out
or
scas
mov
mov
dec
jmp
mov
add
leave
pushw
inc
(bad)
ficom
xchg
bound
pop
dec
xchg
jecxz
fnsave
push
mov
ret
sbb
mov
in
pop
lds
aaa
mov
test
pusha
or
iret
ss
sub
imul
mov
ins
sub
xor
jmp
dec
lods
mov
or
addr16
xchg
adc
sbb
inc
not
xor
aam
cdq
cmp
leave
iret
nop
sbb
pop
ret
int3
(bad)
arpl
(bad)
or
and
mov
in
test
xor
test
cwde
hlt
or
sbb
fdivr
pop
pop
jmp
cmp
(bad)
mov
mov
or
sub
sbb
push
jge
mov
sbb
into
js
and
sub
aam
push
fsub
hlt
aas
mov
cld
shl
fwait
xor
xchg
xrstor
pop
mov
xchg
aas
aam
jmp
jmp
fld
inc
xor
fdiv
cmc
imul
clc
rcr
cmps
loopne
adc
pop
jmp
pop
mov
jo
nop
pop
or
fs
cdq
ret
mov
add
xor
(bad)
jb
jle
sbb
mov
fcomp
jmp
js
out
shr
xchg
(bad)
or
sbb
jp
jecxz
mov
mov
mov
jb
pop
xor
adc
das
test
int
or
(bad)
cmp
jo
cmp
xchg
data16
xchg
test
adc
xchg
call
adc
sbb
pop
xchg
mov
ins
sub
or
sbb
scas
shrd
out
inc
mov
jnp
shl
pop
movs
push
ror
cmp
jnp
mov
repz
push
cmp
add
inc
xchg
xchg
or
mov
shl
neg
mov
push
cmp
push
xchg
into
xor
clc
retf
sub
test
sub
pop
or
cmp
mov
xor
jae
mov
in
sbb
and
inc
imul
sti
ficom
adc
xchg
fbstp
or
pop
in
clc
dec
fs
jecxz
and
jb
fs
hlt
mov
cmps
(bad)
icebp
sub
dec
(bad)
ins
xchg
scas
int
ret
je
dec
mov
imul
xor
sub
xor
ja
arpl
mul
cmps
in
sbb
(bad)
shr
cld
push
jmp
fnstcw
cmp
jne
mov
jg
les
xchg
cmp
stos
pop
push
inc
adc
dec
or
jle
xlat
dec
mov
push
or
inc
cld
jmp
pop
xchg
jle
scas
pop
inc
into
loope
not
fld
or
daa
sbb
test
or
mov
test
inc
sbb
in
and
jne
das
lods
push
jmp
les
add
or
loopne
(bad)
jle
shr
push
shl
pop
cmp
or
stos
xor
js
mov
lock
jge
push
dec
rcr
lods
es
cmp
call
test
jo
cmps
retf
jle
jp
fs
mov
js
pop
adc
in
mov
icebp
fwait
(bad)
mov
rcr
out
dec
xchg
out
push
mov
push
xor
(bad)
das
pusha
aad
data16
add
dec
and
stos
pop
dec
sub
xor
push
adc
mov
inc
cmp
jbe
test
aas
in
push
jnp
mov
hlt
add
(bad)
ins
(bad)
push
test
jmp
inc
mov
push
in
popf
popa
std
add
aas
ds
js
xchg
mov
cwde
xor
outs
and
fmul
mov
scas
mov
push
xchg
xor
cmps
add
int3
mov
push
icebp
int
sbb
outs
dec
push
popa
in
push
mov
sbb
or
add
out
scas
mov
retf
sub
inc
imul
(bad)
fnsave
mov
lock
les
fstp
pop
inc
mov
mov
ins
sbb
std
and
cdq
aam
mov
add
or
push
jnp
in
repnz
or
jne
shl
cmp
stos
inc
add
jge
cdq
out
pop
mov
adc
out
inc
jo
jge
sub
pop
or
(bad)
or
xchg
or
mov
mov
dec
adc
push
outs
stc
push
cmp
mov
jnp
inc
pop
pop
xchg
in
add
push
jle
jae
or
repnz
and
inc
jmp
push
(bad)
icebp
lahf
xor
push
push
ret
inc
rcl
addr16
push
cmp
adc
and
je
retf
and
pop
xchg
push
fidivr
push
out
mov
retf
loop
inc
sar
jno
jp
out
(bad)
shl
mov
les
dec
clc
lock
sub
xor
xchg
add
pxor
inc
cwde
mov
mov
jg
fcom
bound
arpl
cmp
push
xchg
mov
(bad)
jb
mov
into
sahf
out
push
jae
out
xchg
bound
push
(bad)
test
pop
clc
push
stos
or
shr
out
out
ja
pop
ins
sub
sub
ins
push
mov
inc
sub
repnz
mov
mov
mov
inc
hlt
add
and
dec
adc
je
mov
adc
ins
mov
in
in
fist
stos
cmp
xchg
dec
sub
(bad)
movs
aam
enter
(bad)
mov
(bad)
mov
xchg
das
xchg
xchg
mov
outs
jae
fstp
ss
or
dec
cmp
enter
inc
jb
shr
mov
jl
(bad)
mov
loope
sub
mov
xor
cmp
mov
mov
neg
dec
fiadd
popf
ficomp
call
test
mov
arpl
or
(bad)
(bad)
stc
mov
sbb
js
and
jmp
xchg
xor
sbb
loopne
sahf
fcom
jns
sub
jge
cmp
lods
and
push
gs
dec
xor
adc
loop
dec
pop
movs
mov
or
inc
inc
aam
jmp
bound
xchg
jne
adc
push
(bad)
jne
fdivr
test
int
mov
jp
ret
test
push
cmp
push
sahf
add
inc
sti
sbb
inc
xchg
test
aam
add
outs
pop
es
pop
into
lea
imul
jbe
xor
or
scas
stos
cmp
xchg
leave
push
movs
retf
sub
xor
add
movs
adc
xchg
loopne
ja
pop
cmp
mov
shr
mov
ret
leave
(bad)
cmc
mov
data16
add
scas
not
mov
(bad)
sbb
out
shr
add
adc
loopne
mov
arpl
sbb
pop
push
sub
dec
push
dec
arpl
jle
das
int
out
jnp
es
and
movs
lods
aam
sub
adc
xchg
adc
shl
add
adc
imul
call
mov
popf
mov
mov
pop
ds
shr
mov
adc
arpl
and
jae
iret
stc
icebp
jp
add
outs
in
std
jne
bound
pop
das
(bad)
in
les
cwde
repnz
and
popa
fisubr
xlat
dec
fnstsw
mov
ss
pushf
inc
fwait
(bad)
or
daa
movs
adc
popa
push
lgs
fstp
(bad)
cwde
ds
jno
push
mov
sub
sub
sub
inc
pop
test
iret
pop
imul
mov
fwait
pop
(bad)
sbb
clc
in
maxps
stc
outs
imul
cs
jne
sub
outs
and
xor
in
mov
xchg
sbb
(bad)
int3
mov
dec
jmp
pop
inc
push
aaa
aaa
cmp
push
pop
fwait
mov
addr16
sbb
into
xchg
stos
mov
(bad)
push
sub
lods
sbb
add
or
push
int3
pop
call
nop
loop
xchg
mov
es
retf
mov
bound
(bad)
stos
sub
clc
cdq
fistp
inc
mul
push
inc
push
lahf
ins
mov
or
mov
test
adc
jbe
leave
(bad)
popf
int3
mov
loope
dec
jbe
arpl
rcr
dec
mov
nop
cmp
add
ret
fdiv
ins
sar
or
and
sub
outs
jge
dec
enter
call
inc
mov
fsubr
rcl
std
cmps
ds
mov
pop
mov
les
and
add
fnsave
(bad)
addr16
push
pop
pop
je
mov
stc
cmps
outs
mov
cmps
mov
mov
push
xchg
adc
ins
cwde
(bad)
jle
push
inc
ins
pop
pop
sbb
mov
xchg
add
dec
retf
sbb
mov
ja
inc
loopne
or
test
jecxz
or
mov
and
ins
lods
and
jnp
dec
pop
lea
or
out
sbb
stc
push
stos
push
jmp
jmp
aam
popa
ins
inc
(bad)
push
push
inc
mov
jnp
pop
js
sar
push
dec
paddd
stos
dec
jmp
cli
xchg
mov
test
mov
xor
lock
dec
bound
cmp
sub
mov
cmp
mov
into
mov
add
setg
xor
arpl
mov
fmul
xchg
pop
jg
pop
inc
outs
or
repz
(bad)
jne
pop
fwait
sub
xchg
pop
arpl
aas
lea
dec
sub
sbb
inc
jecxz
fbstp
adc
pop
imul
cdq
jb
ja
xor
mov
push
pop
or
in
sbb
call
movs
ret
jns
shl
ffree
inc
inc
gs
test
jns
adc
jne
adc
push
xor
mov
push
mov
push
gs
sbb
mov
je
fs
test
mov
pop
cmps
or
test
inc
inc
sbb
fstp
aaa
lea
mov
aad
or
js
(bad)
popa
(bad)
sub
dec
cmp
cdq
adc
iret
cli
lahf
sbb
jbe
jmp
(bad)
cld
jo
add
sub
sub
es
push
or
or
out
or
repnz
xchg
arpl
xchg
dec
(bad)
mov
pop
cld
retf
dec
pop
gs
add
pop
ret
icebp
outs
aam
iret
ds
dec
inc
stc
add
fs
or
push
repnz
int
or
cmp
mov
and
ja
and
xor
adc
arpl
xchg
inc
push
jecxz
popa
ficom
fs
std
cmp
jl
mov
mov
into
and
push
movs
std
push
sub
inc
add
dec
ins
adc
fwait
sbb
js
inc
xchg
add
movs
cld
sub
cmp
shr
fcomip
repnz
xchg
loopne
jnp
jge
cmc
sbb
cmp
cmc
out
inc
cmps
jmp
xchg
jmp
sbb
push
ss
push
cmc
stos
or
imul
scas
jne
sahf
(bad)
mov
pop
mov
cmc
add
leave
fstp
jmp
cvttps2pi
mov
xchg
in
push
mov
ror
rcl
lahf
retf
push
xor
sbb
adc
cld
push
pop
sahf
lock
aaa
in
add
xlat
icebp
test
inc
inc
dec
xor
jmp
pop
in
les
sti
mov
out
mov
ret
xchg
or
retf
and
pop
gs
jmp
ds
sbb
out
(bad)
mov
rcr
mov
sar
nop
mov
add
arpl
aam
mov
mov
movs
jbe
aas
dec
mov
jmp
dec
gs
xchg
jnp
sbb
icebp
in
nop
push
mov
adc
pop
jae
cdq
or
push
nop
mov
in
xchg
popa
mov
cmc
ret
aam
rcl
sbb
lahf
pop
push
(bad)
pop
dec
stos
rol
aad
aad
or
cld
lahf
mov
test
jge
test
aam
mov
mov
jbe
lods
push
(bad)
out
cdq
je
pop
clc
in
mov
pop
jecxz
lds
cmp
cmp
cmp
pop
aad
vhsubpd
cdq
push
dec
inc
cli
and
stc
mov
loop
sbb
xchg
and
lahf
add
scas
retf
mov
leave
imul
into
pop
and
mov
inc
pop
rol
push
ficomp
aaa
xor
xchg
mov
test
push
pop
cdq
cdq
push
test
int
loop
push
add
aam
xor
add
fiadd
mov
or
add
lea
cmp
out
pop
in
hlt
sub
into
stc
in
push
(bad)
pop
mov
sub
dec
stc
sub
push
and
push
addr16
push
test
sub
cld
adc
or
in
ror
xor
adc
xor
iret
sub
jne
repz
les
wrmsr
repz
and
adc
ror
sahf
jb
aad
lods
sub
or
mov
pop
call
pusha
fisub
add
dec
out
bound
pushf
ror
dec
cmps
ret
loop
into
aaa
push
pop
pop
push
mov
(bad)
xlat
into
shl
lds
mov
and
ret
mov
mov
aas
xor
mov
jbe
inc
mov
lock
js
cmp
not
dec
pop
mov
pop
and
add
add
in
jmp
or
push
fldenv
shl
or
in
retf
aas
jnp
iret
shl
leave
ds
popa
push
data16
aas
into
mov
jo
mov
fcom
test
or
rcr
std
adc
aad
mov
add
aam
sub
mov
and
frstor
pop
xor
lods
test
call
jmp
shr
fsub
out
test
xor
loope
std
jmp
shl
shl
pushf
cld
ret
or
(bad)
retf
xchg
stos
loop
xchg
rol
jo
jns
and
sbb
bound
shl
shl
sbb
pop
cmps
add
inc
xor
sbb
xor
inc
stos
ins
jae
mov
mov
or
dec
jbe
inc
loope
lods
push
test
cmps
adc
xor
xchg
sbb
inc
test
cli
cmp
cmc
aaa
mov
mov
xchg
xchg
movs
out
mov
nop
fwait
out
scas
popf
ins
mov
push
add
xchg
xchg
je
test
mov
fidivr
and
fwait
mov
xchg
(bad)
enter
inc
fcomip
icebp
mov
pop
test
push
es
sub
adc
popa
mov
and
fimul
test
cmp
adc
repnz
out
cmp
or
sub
pop
pusha
jns
jp
imul
jo
adc
ret
daa
lahf
fnsave
dec
bound
lods
xor
jmp
repz
dec
lods
adc
xor
mov
mov
mov
jnp
cld
xchg
jns
pusha
adc
arpl
sub
out
hlt
jg
mov
pusha
das
add
ins
dec
mov
sbb
pop
retf
call
jle
xor
imul
mov
sbb
sahf
loope
in
test
push
aaa
xor
xchg
icebp
adc
clc
cmp
cli
dec
cmp
add
add
push
retf
or
in
movs
xchg
xchg
ss
or
imul
jae
xor
adc
int
inc
ss
mov
inc
jg
jg
out
adc
or
call
test
add
bound
xchg
cmc
push
xor
test
in
push
pop
loope
out
cld
nop
pop
sbb
and
inc
ins
test
push
es
mov
retf
mov
lea
add
cmp
imul
mov
xchg
and
icebp
adc
mov
jno
and
aam
inc
jmp
mov
clc
mov
pushf
jns
call
shr
fs
mov
and
or
push
push
or
ds
dec
popf
idiv
shr
rcl
in
sub
xor
adc
sbb
aad
or
int
lods
movs
ins
cmps
test
adc
xor
mul
aas
add
dec
data16
out
pop
sub
retf
inc
pop
out
mov
push
jecxz
clc
out
aam
mov
cmp
xchg
or
test
(bad)
mov
mov
xlat
je
imul
test
call
push
push
and
mul
xchg
rcl
gs
pop
ds
ja
fwait
xchg
sub
add
imul
pusha
sub
push
bound
mov
loopne
mov
mov
mov
jae
and
push
call
add
jns
mov
das
sbb
push
sub
sbb
mov
movs
lods
mov
test
jl
dec
out
xor
cli
add
lock
jmp
jg
push
mov
add
(bad)
rcr
xor
mov
lahf
and
jg
mov
pop
cmp
jns
pusha
loope
xor
inc
stc
cli
jmp
(bad)
xor
rol
pop
xor
adc
dec
fbstp
out
test
mov
sbb
das
mov
xor
mov
or
jno
xchg
inc
push
int3
mov
jne
loopne
mov
jnp
or
inc
or
js
clc
inc
enter
sbb
cwde
mov
push
stos
movs
call
ret
das
mov
ret
sbb
jecxz
arpl
stc
(bad)
pop
sti
out
fwait
jbe
(bad)
dec
jne
add
retf
sub
lock
adc
or
imul
add
lods
push
dec
mov
or
xchg
mov
fdiv
std
jne
stc
cld
push
out
movs
or
retf
repz
mov
je
shl
xor
cmps
dec
loop
inc
and
cmp
xchg
jg
mov
sbb
mov
mov
inc
jp
repz
dec
pushf
call
adc
cmp
add
in
push
or
sub
ins
inc
sbb
pop
xchg
cmp
cmp
imul
push
adc
into
pop
lods
divps
or
sub
cld
xchg
mov
outs
imul
mov
sahf
dec
add
pushf
mov
jmp
(bad)
fdivp
aam
sub
mov
and
int
jg
js
adc
pop
push
mov
fst
iret
popf
mov
rcr
imul
(bad)
popf
adc
or
out
fcomp
outs
mov
fmul
jl
pusha
pop
or
daa
sbb
mov
aam
dec
outs
rcr
push
nop
sbb
xor
or
cs
pop
daa
sub
imul
into
dec
or
sbb
out
sbb
ss
call
fisttp
and
cmps
lea
clc
add
aaa
addr16
hlt
fwait
pop
mov
push
mov
leave
and
or
mov
sub
popa
ja
mov
pop
addr16
push
xchg
(bad)
pop
je
mov
hlt
lods
xchg
cdq
adc
mov
mov
add
cld
sub
sahf
cmps
inc
jnp
add
pop
daa
int
hlt
aam
ds
xchg
pop
mov
mov
shl
pop
ret
adc
ret
ror
push
jns
jno
mov
mov
sub
or
dec
inc
ficom
dec
cmp
ja
sti
aas
mov
pop
xor
fwait
sbb
ds
sub
imul
test
les
or
push
and
cmp
sbb
stos
push
sbb
jmp
xor
in
jp
inc
inc
arpl
clc
jecxz
repnz
adc
mov
mov
adc
jno
adc
scas
xchg
xchg
pusha
sbb
movs
stos
inc
xchg
sti
adc
xchg
sar
stos
hlt
bound
dec
mov
test
into
stc
rep
inc
mov
pushf
jno
enter
sub
imul
addr16
mov
stc
nop
dec
scas
fucomp
out
mov
cmc
pop
and
fisub
popa
loop
enter
pop
dec
xchg
mov
jmp
clc
outs
stc
jecxz
sub
sbb
and
outs
imul
or
sub
jno
and
popf
stos
push
and
out
lock
cmp
xor
add
mov
inc
mov
aas
add
jle
mov
sbb
cmp
sub
and
xlat
cmp
jmp
dec
mov
sub
jge
pop
fnstenv
dec
mov
mov
jo
lock
arpl
sbb
xor
sbb
icebp
cwde
stc
pop
jle
aaa
push
sub
sub
lods
mov
dec
scas
mov
mov
sbb
push
inc
arpl
(bad)
mov
pop
mov
fiadd
out
(bad)
fsub
dec
xor
pop
sub
push
in
icebp
pop
fldenv
movs
clc
nop
xchg
stos
xchg
dec
and
mov
inc
fisttp
dec
fnclex
xor
xchg
push
les
nop
mov
cmp
adc
lock
adc
cmc
dec
mov
inc
(bad)
sub
ins
mov
mov
push
repz
shl
xchg
(bad)
jmp
cmp
sbb
pop
mov
out
xchg
push
inc
pushf
mov
aam
loop
in
pop
in
mov
fdivr
push
mov
push
adc
aas
imul
ins
cmp
cld
scas
lods
(bad)
and
push
jp
adc
push
adc
mov
sub
sbb
xchg
sub
pop
add
and
lods
into
into
cmps
adc
inc
and
xchg
pop
xor
inc
mov
xor
fmulp
mul
mov
and
arpl
mov
fidiv
mov
cmps
mov
sub
push
in
sbb
mov
ja
xchg
sbb
adc
fbstp
pop
add
(bad)
fisub
add
or
lods
push
enter
gs
pop
jle
jmp
mov
add
dec
pop
retf
jmp
or
cld
imul
sbb
jnp
cmp
mov
loope
jno
and
inc
mov
mov
stos
das
in
(bad)
jmp
add
out
sub
xchg
push
pop
mov
cs
dec
adc
pop
(bad)
leave
fadd
mov
addr16
and
xchg
ret
jmp
xor
lods
idiv
int3
xor
cmp
shl
inc
rol
dec
jg
xor
mov
pop
mov
inc
jnp
mov
bound
xchg
aas
ret
push
xlat
sub
push
add
ins
xchg
dec
lods
inc
test
dec
leave
shr
adc
jge
pop
aas
push
jne
push
cmp
push
xchg
ins
popf
mov
or
cdq
ret
push
inc
retf
inc
or
xchg
enter
clc
in
in
ret
or
test
or
or
mov
mov
test
out
or
test
repz
xor
jae
retf
jns
aad
mov
loop
retf
retf
add
outs
fld
fst
sbb
fwait
cs
mov
mov
out
jmp
data16
xchg
outs
std
xchg
aas
pop
xlat
adc
inc
aas
leave
in
jmp
cmp
aam
sbb
mov
loopne
add
xor
sub
xlat
pop
popf
in
inc
cld
push
ds
xchg
(bad)
fnstenv
mov
mov
cld
sub
xchg
and
dec
pop
xchg
(bad)
jp
lds
not
mov
mov
push
xchg
int
pop
imul
or
int3
dec
lods
test
mov
adc
ret
dec
lea
(bad)
test
dec
xor
enter
fs
(bad)
es
shl
add
mov
ins
or
test
test
mov
shr
imul
imul
ja
mov
fxch
sub
int3
icebp
pop
mov
out
fistp
rol
(bad)
das
es
sar
call
shl
sub
sub
stc
jmp
push
(bad)
mov
repz
and
mov
mov
mov
adc
cmp
jb
mov
arpl
(bad)
std
xchg
dec
movs
rcr
inc
push
cmp
ins
xor
pop
cs
inc
lahf
mov
lds
imul
adc
lea
bnd
ret
xchg
daa
jno
pop
xor
sub
push
mov
push
arpl
ror
mov
jns
fs
repnz
pop
pop
inc
out
int
icebp
std
out
mov
xchg
(bad)
stos
lahf
cli
inc
(bad)
adc
movs
pop
inc
test
inc
out
sub
pop
dec
xchg
sbb
jne
ud0
sbb
(bad)
retf
(bad)
xor
xor
je
test
or
retf
stos
inc
xchg
cmp
cmp
dec
jns
push
sti
pop
inc
call
push
push
xchg
push
or
xor
ror
ja
lgs
out
push
jae
test
gs
xchg
cs
std
fist
pushf
sar
clc
mov
out
arpl
test
mov
(bad)
shl
fwait
or
icebp
in
or
icebp
mov
fsubr
and
test
icebp
sbb
cdq
test
(bad)
aaa
loop
iret
push
xchg
leave
xlat
mov
fmulp
call
movs
cmp
hlt
lds
mov
cmp
push
mov
push
sub
mov
or
rdtsc
jg
adc
inc
mul
add
loopne
xor
inc
iret
out
xor
dec
mov
mov
inc
mov
and
cmp
loopne
jns
fidiv
mov
push
cwde
jmp
cmp
dec
lods
push
xchg
jmp
out
or
pop
xchg
mov
inc
push
pop
push
push
pop
inc
mov
mov
push
xchg
popf
test
pop
xor
xlat
and
retf
mov
in
in
cmp
mov
mov
jle
xchg
loopne
pop
mov
ds
or
pop
in
arpl
sahf
loopne
jno
or
gs
pusha
stc
xlat
loope
aad
jmp
pop
rcl
push
dec
mov
or
popa
ficom
sbb
jecxz
xchg
lahf
jecxz
push
(bad)
adc
inc
mov
out
dec
push
sbb
mov
mov
rcr
sbb
and
enter
outs
adc
inc
xor
mov
pop
aaa
jnp
pop
jnp
jmp
(bad)
push
jne
lds
out
push
out
lahf
sub
inc
sahf
(bad)
pop
inc
dec
jmp
jmp
xchg
push
ss
aad
ficomp
mov
mov
add
das
or
dec
cmp
stc
mov
xor
push
arpl
push
pop
in
rol
xor
cmp
mov
jl
stos
jecxz
faddp
sbb
mov
cs
pop
mov
or
imul
leave
in
aas
mov
cld
es
dec
or
pop
jle
inc
retf
jbe
popa
adc
popa
sub
xor
test
fdiv
stos
icebp
jo
cmps
stos
aad
iret
lock
jmp
(bad)
mov
loope
cmps
mov
(bad)
dec
sbb
xchg
je
rcl
pop
jmp
cwde
ror
push
rol
mov
sub
xor
and
imul
pop
xor
nop
and
sbb
pop
xor
jge
call
cmp
mov
repz
jge
popa
jmp
xchg
pmuludq
and
inc
loope
test
data16
cmp
popa
data16
cdq
jle
out
jno
stos
jno
test
rol
pushf
mov
xor
add
cmp
ja
add
pop
movs
or
lock
xchg
stos
(bad)
pop
or
adc
mov
or
das
call
fisub
ins
sbb
dec
ret
imul
ja
cmp
and
inc
or
inc
or
ss
dec
jmp
sbb
movs
aaa
ds
mov
aam
clc
push
sub
mov
sbb
pop
mov
and
add
sbb
push
loope
xchg
mov
(bad)
cdq
jno
call
aas
dec
shl
pushf
retf
add
push
icebp
loope
stc
push
sub
dec
xchg
stos
adc
hlt
or
xor
jle
push
inc
icebp
std
das
cdq
les
cdq
adc
data16
jo
dec
jg
icebp
xlat
or
mov
push
in
and
pushw
movs
push
inc
lods
sub
mov
add
cmp
inc
adc
dec
aaa
movs
xor
mov
pop
inc
sub
push
ja
or
jle
(bad)
jp
lock
pop
inc
loop
mov
fisttp
(bad)
lock
pop
jle
mov
add
js
and
mov
sub
sub
fsub
stos
mov
xor
pushf
mov
stos
xor
and
(bad)
push
retf
dec
stos
ins
inc
mov
bound
es
push
movs
push
dec
or
cmp
fbld
daa
lock
jbe
inc
xchg
cmp
pop
pop
jg
mov
mov
(bad)
adc
int3
xlat
sub
fnstsw
ss
dec
lds
pop
mov
push
xchg
add
(bad)
loope
jmp
dec
sahf
cmc
addr16
hlt
sahf
repz
pop
dec
mov
jle
cmp
xchg
jae
push
jecxz
pop
push
and
call
(bad)
pusha
aam
das
aas
pop
out
shl
daa
dec
xlat
jne
icebp
dec
outs
push
jle
int3
idiv
loop
jmp
and
sbb
(bad)
js
pop
cld
out
(bad)
test
or
or
pop
inc
imul
cli
add
pop
dec
mov
ins
(bad)
push
lahf
pop
dec
test
es
sub
aaa
ss
addr16
in
rol
dec
lea
fucomip
or
stos
xchg
es
adc
stos
loope
repnz
xor
jp
inc
inc
clc
repz
inc
xchg
loopne
and
push
jecxz
push
xchg
mov
popa
(bad)
push
sti
nop
jp
pop
inc
loope
jb
mov
mov
fistp
gs
aaa
retf
dec
mov
sahf
or
dec
in
ror
imul
retf
push
mov
leave
jl
sub
shl
cmps
lods
mov
int
sub
aas
pop
inc
call
cmps
repnz
ss
mov
lods
pop
sbb
jge
cmp
(bad)
gs
xchg
in
sbb
fild
hlt
add
jnp
movs
jno
shr
jnp
jnp
pop
sbb
(bad)
in
xor
dec
retf
jno
lock
jb
jle
xchg
sahf
(bad)
sbb
(bad)
mov
in
mov
push
adc
(bad)
mov
cmp
stos
fwait
stos
jns
cwde
or
lds
rcr
push
xor
int3
aad
mov
pop
sbb
test
ins
jecxz
cli
mul
mov
push
retf
mov
das
push
xor
addr16
stc
mov
xor
fbld
mov
dec
xchg
out
inc
jmp
dec
inc
pop
jge
ret
ss
lahf
call
inc
hlt
xchg
shl
shl
push
call
ret
adc
mov
mov
daa
in
adc
bound
push
leave
fs
xchg
xor
iret
mov
aad
std
and
hlt
(bad)
sbb
sbb
fst
jmp
push
dec
xchg
cs
ja
inc
(bad)
mov
test
mov
(bad)
dec
add
out
test
je
cmp
fbld
inc
fadd
push
pop
pop
jp
sbb
sbb
pop
jle
outs
fild
mov
mov
retf
aaa
xchg
inc
neg
cmp
add
xchg
enter
sbb
loope
mov
sbb
dec
nop
les
sti
stos
cld
jp
push
mov
imul
mov
push
mov
movs
add
or
add
add
movs
or
cmc
sub
xor
in
sbb
enter
push
ret
or
movs
sub
out
shl
xchg
adc
sbb
add
clc
aam
cmp
xchg
mov
movs
push
jl
xchg
inc
jp
mov
pushf
push
and
adc
sbb
imul
push
mov
push
sub
push
scas
mov
jnp
add
mov
jmp
mov
out
mov
(bad)
add
jb
or
jbe
or
pop
arpl
ja
add
jnp
les
push
mov
dec
sbb
aam
pop
xchg
hlt
ficom
sahf
dec
push
inc
xchg
add
fadd
and
ffree
add
add
pop
sub
test
sbb
cmps
fdiv
cmc
loope
lock
pop
fdiv
cmps
pop
cmps
addr16
xor
pop
das
xchg
dec
or
jmp
pop
jnp
xchg
imul
and
and
out
and
arpl
and
pop
sti
dec
push
outs
or
mov
es
dec
lock
fidiv
fistp
add
jle
jae
add
mov
sub
mov
fmul
jmp
lahf
jge
ror
sahf
inc
xor
push
inc
jle
jbe
pop
movs
jb
data16
push
or
sbb
cmps
les
fwait
sbb
es
stc
mov
xor
xchg
cdq
les
aad
xor
or
adc
mov
jmp
adc
test
mov
ret
ss
int3
mov
out
stos
jmp
sub
out
(bad)
fisub
scas
fcom
aam
icebp
sub
ss
int3
jmp
add
and
nop
ret
popa
sub
sbb
cmps
push
fsub
int3
in
pop
sar
loop
cmp
xor
mov
fdiv
jmp
push
sub
xor
pop
icebp
dec
rcr
xor
push
or
xchg
sub
mov
mov
add
xor
clc
out
retf
fwait
movs
out
outs
pop
sub
jle
rcl
in
out
je
std
imul
fidiv
into
ins
rol
retf
cmp
aaa
fisttp
shrd
(bad)
xchg
mov
scas
cmp
hlt
sub
xor
add
pusha
ss
pop
mov
sub
jb
lock
mov
adc
inc
fcom
call
shl
push
mov
daa
and
test
scas
cli
dec
int3
sub
setnp
addr16
push
xchg
sbb
push
ret
pop
ret
cwde
push
das
lds
loope
add
dec
sbb
movs
adc
or
push
adc
stc
pop
outs
jo
sti
xor
push
mov
mov
cmp
push
ss
sub
ret
sbb
push
push
add
shr
sti
cmp
mov
adc
(bad)
push
inc
sub
push
fidiv
js
jne
push
(bad)
rep
pop
sub
inc
push
aaa
mov
cmc
xor
mov
es
or
mov
push
pop
loop
add
(bad)
xchg
jmp
mov
sub
xchg
std
add
and
jle
jb
xor
popa
xchg
in
sbb
loop
addr16
xchg
add
mov
and
or
mov
cmps
pop
imul
test
xchg
jo
jmp
xchg
cmp
cmp
scas
loop
ins
adc
out
nop
mov
push
das
xchg
xor
into
loopne
pop
pop
lods
es
rcl
enter
add
jns
mov
mov
dec
test
sti
xchg
in
push
mov
in
sbb
sub
test
into
das
add
cmp
push
mov
ja
adc
test
sbb
sar
mov
scas
mov
(bad)
add
dec
fistp
repz
xor
sbb
cwde
das
jecxz
xor
push
hlt
sbb
push
fwait
xchg
aad
movs
jl
dec
mov
retf
ds
push
pop
retf
cmp
punpcklbw
hlt
iret
enter
out
ins
shl
push
mov
inc
int
cmps
xchg
in
xchg
imul
mov
jle
mov
inc
pop
cmp
cs
idiv
mov
lock
je
mov
sar
or
inc
aas
inc
repz
push
aam
clc
fwait
pushf
imul
jne
cld
iret
inc
hlt
outs
dec
outs
idiv
sbb
popa
popf
mov
fistp
aad
lods
ins
add
add
and
shr
dec
int3
cwde
rol
les
scas
cmp
pop
mov
cwde
jbe
stc
mov
icebp
pop
mov
scas
sub
inc
imul
jns
data16
cmp
fdiv
jbe
jecxz
mov
mov
push
call
gs
hlt
jns
test
sbb
outs
push
push
iret
nop
out
out
or
cmp
pop
mov
xchg
adc
adc
xor
loop
cwde
dec
cmp
(bad)
or
in
bnd
cmps
push
sbb
adc
ins
scas
pop
ret
pushf
cmp
dec
push
sbb
xchg
shl
jg
mov
pop
jbe
pop
std
lods
xor
(bad)
hlt
xchg
mov
mov
scas
sbb
out
and
clc
popf
loopne
cmp
fstp
in
pop
repnz
(bad)
in
sub
data16
lds
cli
mov
scas
fcomp
nop
lahf
icebp
pop
xchg
sbb
cld
ror
cmps
clc
jle
mov
mov
adc
inc
jl
push
enter
xchg
cmp
(bad)
xor
fild
and
clc
lds
call
push
in
add
inc
sbb
xor
mov
or
addr16
in
js
arpl
push
push
jecxz
pop
inc
ja
sbb
shl
in
cs
popf
add
test
sti
lahf
outs
(bad)
outs
and
mov
pop
jp
mov
aaa
mov
movs
xchg
xlat
ins
pushf
retf
dec
outs
mov
xchg
cs
xor
(bad)
iret
jge
inc
dec
xchg
jmp
ja
push
shl
pop
mov
fadd
mov
jns
imul
push
je
icebp
sbb
mov
mov
pop
movs
test
xor
lods
mov
retf
shl
fprem
out
gs
mov
jmp
xchg
outs
inc
push
add
mov
cwde
adc
fs
pop
cmc
out
inc
cld
mov
mov
cmc
mov
inc
adc
and
push
mov
sub
ret
mov
hlt
mov
push
movs
imul
test
and
pop
or
mov
mov
xchg
stos
sahf
aam
adc
pshufw
retf
mov
retf
jp
or
push
out
adc
push
mov
fs
addr16
and
test
data16
fwait
xor
fnstcw
out
sub
hlt
dec
jne
pop
dec
imul
fisub
out
push
pop
fisttp
mov
sbb
movs
add
aad
jae
(bad)
sub
mov
sbb
xor
ins
mov
js
dec
pop
in
inc
enter
ss
les
movs
add
sub
mov
ja
cli
xor
neg
(bad)
in
add
shr
stos
mov
fwait
mov
jo
scas
aas
or
jmp
sbb
push
fisub
stc
sub
or
push
rcl
addr16
and
cwde
mov
or
cmps
(bad)
jno
jns
sahf
pop
rcl
cmp
stos
xor
jmp
int3
xor
aas
pushf
xchg
mov
fwait
dec
out
hlt
or
inc
lods
(bad)
push
(bad)
cmp
sub
sub
cwde
xchg
xor
fdivrp
sub
in
jecxz
in
loope
fcomp
dec
add
in
outs
inc
les
mov
pop
jle
jmp
jg
cmp
inc
adc
fmul
xor
retf
add
sbb
das
adc
sar
into
jge
jno
inc
adc
inc
bound
jo
shl
pop
inc
mov
enter
cmp
ins
es
popf
inc
mov
push
movs
outs
adc
cdq
xchg
and
arpl
pusha
jl
xchg
pop
out
lock
mov
xor
dec
jb
in
retf
scas
sub
int
repz
cmps
jns
pusha
ins
pop
ret
enter
xlat
inc
stos
and
int3
mov
cwde
xchg
adc
adc
xchg
or
adc
pop
inc
jmp
je
sti
retf
nop
sub
pop
in
std
outs
scas
nop
(bad)
pop
js
mov
js
cmp
pop
cmp
sub
jge
das
fcmovne
pop
mov
mov
xchg
jg
adc
cld
cmps
mov
(bad)
ins
(bad)
mov
inc
mov
jns
adc
dec
add
scas
out
mov
xlat
js
jge
call
pop
mov
mov
push
scas
mov
ins
imul
lods
xchg
mov
cmp
das
loope
aaa
mov
push
sub
inc
xor
aad
sti
rol
pop
shl
in
inc
mov
xor
shr
inc
mov
push
jne
xlat
and
(bad)
inc
sbb
repz
or
mov
out
pop
push
inc
pop
cmp
and
push
mov
mov
test
jmp
cmp
in
les
xchg
rol
mov
xor
xchg
jb
nop
mov
pop
inc
or
add
mov
cmp
mov
in
jg
or
add
cdq
ret
mov
aad
push
fcomp
cmp
dec
xchg
stos
push
mov
movs
hlt
sub
sub
dec
lds
inc
popa
ja
jl
pop
jae
mov
cld
mov
movs
lock
cld
and
sub
lahf
data16
scas
lods
mov
pop
outs
xchg
sbb
xchg
int3
sub
mov
js
test
jnp
jmp
hlt
adc
stc
cwde
(bad)
hlt
fidivr
clc
mov
mov
test
dec
in
ja
fld
push
mov
(bad)
pop
add
adc
scas
into
cmp
(bad)
in
dec
in
imul
loop
lods
inc
dec
mov
test
jge
and
dec
shl
lds
xchg
mov
or
jnp
call
leave
mov
xchg
das
inc
shl
mov
adc
pushf
mov
nop
or
mov
cmp
jle
bound
xchg
jp
mov
int
mov
push
out
clc
jl
test
dec
cmps
sub
cmps
mov
ja
lods
icebp
stc
sbb
sbb
mov
push
or
add
test
scas
out
push
pop
xor
fstp
fsub
aam
push
retf
and
inc
xchg
pop
inc
popa
mov
push
scas
in
lea
pop
int
jo
(bad)
dec
mov
mov
inc
pop
ret
jmp
shr
imul
push
enter
mov
push
xchg
nop
push
cmp
mov
and
repz
imul
and
in
mov
addr16
cmp
ins
int
cdq
out
cmps
push
setg
xor
jle
inc
aam
cld
push
test
dec
pop
mov
jno
hlt
clc
sahf
js
sbb
or
clc
and
outs
enter
mov
inc
push
mov
pop
(bad)
test
fwait
push
inc
test
xchg
fimul
(bad)
aaa
pushf
mov
and
mov
scas
xchg
or
(bad)
sbb
mul
push
inc
pop
dec
and
sbb
stc
or
or
cld
jnp
mov
sbb
push
jle
ins
mov
movs
fidiv
jg
push
jp
add
xchg
mov
je
push
je
mov
add
adc
ret
call
icebp
in
js
imul
jbe
mov
stc
ins
(bad)
mov
jae
nop
add
push
fs
xchg
daa
ret
cld
out
or
outs
hlt
lock
loop
sub
jo
clc
adc
sbb
in
xor
adc
dec
jbe
dec
add
mov
scas
dec
mov
bound
mov
add
in
aam
push
pop
dec
sbb
jl
popf
outs
mov
aaa
mov
mov
jno
test
inc
dec
jp
and
mov
inc
dec
pop
inc
(bad)
retf
jmp
lods
xor
mov
das
mov
aas
hlt
sub
test
add
xor
jge
dec
out
lods
or
mov
pop
xor
xor
std
jg
(bad)
test
push
sahf
add
ficomp
jp
adc
mov
jp
outs
add
mov
pop
inc
cmp
xchg
sbb
or
or
mov
inc
push
xor
aad
(bad)
xchg
mov
jg
push
rol
adc
xor
mov
pop
or
not
je
les
aas
addr16
xchg
out
test
arpl
cmps
or
jns
mov
dec
retf
shl
call
adc
add
mov
push
cmp
in
dec
in
call
and
cwde
fidivr
mov
mov
movs
mov
dec
ins
aad
xor
ins
jl
dec
xor
cmps
ds
loopne
adc
(bad)
cmp
mov
std
mov
mov
loopne
pop
adc
and
mov
mov
mov
sub
fild
cmps
xchg
inc
xchg
dec
adc
inc
es
mov
test
jbe
rol
jbe
in
xor
add
lods
add
push
cld
mov
aas
pushw
mov
cmp
and
xor
cwde
movs
test
or
jecxz
xor
add
stos
lds
sbb
ret
rcl
and
call
xor
outs
xlat
mul
(bad)
sub
and
xor
push
es
rcr
aaa
cmc
sahf
fsub
and
mov
shl
adc
add
adc
loopne
outs
push
fstp
fldenv
inc
mov
and
jno
or
cmp
(bad)
mov
inc
imul
popf
std
outs
inc
pusha
jb
arpl
fs
iret
fisubr
mov
mov
jg
or
adc
js
pop
dec
icebp
loope
test
ja
jmp
fcmovne
sub
jns
cld
adc
jecxz
ja
jle
pushf
fstp
dec
(bad)
cmp
inc
inc
add
movs
jnp
and
inc
mov
xchg
push
je
in
dec
popa
pop
out
stc
(bad)
lock
fstp
xchg
dec
sub
test
lock
les
xor
and
sbb
xor
sti
rol
pop
jl
sub
jnp
pusha
add
push
imul
push
adc
stc
mov
gs
in
loop
scas
jg
inc
xor
into
daa
mov
push
jne
iret
mov
inc
clc
adc
pushf
add
push
rol
xchg
xor
cmps
sub
iret
sub
mov
cwde
mov
xchg
pop
pop
repz
cmp
(bad)
adc
jp
mov
mov
rcr
xchg
lds
cmp
js
xchg
pop
pop
inc
pop
cmp
push
push
jnp
xor
cmp
push
inc
xchg
call
xor
inc
adc
inc
push
dec
imul
in
xchg
jae
popa
inc
in
test
lahf
adc
ins
js
div
sahf
push
pop
cwde
add
push
fistp
clc
imul
ins
sub
add
sbb
mov
mov
mov
jo
addr16
pop
add
mov
ins
dec
jmp
and
mov
fwait
repz
loope
pop
adc
xchg
mov
inc
test
jns
neg
outs
fs
xchg
dec
mov
fistp
inc
xchg
sar
test
xchg
loopne
out
iret
cld
jl
jmp
fwait
cmp
nop
sub
mov
add
popf
xor
pop
lea
in
test
loope
pop
and
pop
call
inc
jmp
and
frstor
inc
hlt
jp
jmp
adc
mov
(bad)
mov
stc
fwait
or
(bad)
jns
mov
mov
mov
sbb
ins
jle
jl
adc
mov
(bad)
fdiv
ret
test
fsub
test
enter
cmp
pop
dec
add
mov
jno
ficom
repnz
sahf
or
hlt
lahf
movs
xlat
pop
jno
inc
or
in
cmps
ficom
out
dec
pop
push
or
cwde
and
jle
cmp
cmc
push
mov
cmp
or
rcl
and
fst
xlat
imul
cmp
mov
ins
faddp
xor
outs
(bad)
mov
(bad)
sub
push
rol
sbb
pop
add
sahf
cmp
xchg
or
cmp
xchg
std
pop
sbb
inc
nop
adc
inc
(bad)
and
mov
mov
ret
push
outs
inc
(bad)
cmp
add
pop
pop
xchg
sar
mov
in
retf
shl
cmp
pop
mov
inc
lods
inc
adc
lds
fadd
outs
data16
aas
in
xor
in
fisub
fdiv
or
aam
test
sbb
xchg
fistp
inc
fs
push
imul
adc
xchg
sub
mov
adc
das
add
xor
push
js
(bad)
inc
popf
adc
adc
les
mov
fisttp
shl
inc
xor
retf
(bad)
in
pop
dec
pop
mov
xlat
ss
mov
push
fisubr
mov
fstp
test
in
push
or
xchg
mov
pop
shl
or
push
mov
mov
test
mov
mov
mov
test
mov
jmp
dec
int3
jl
or
cdq
dec
and
sahf
loope
pop
cli
jo
add
out
mov
adc
int3
scas
sbb
stos
retf
popf
into
jb
ins
sub
popa
pop
mov
or
inc
jo
mov
add
adc
fwait
pop
aad
cwde
into
mov
mov
aas
pop
out
mov
scas
ds
pop
push
push
scas
sar
out
and
ret
loopne
int3
shl
sti
je
mov
jae
imul
test
mov
es
out
xchg
mov
mov
stos
push
addr16
pop
retf
sbb
cmps
pop
stos
mov
shr
data16
out
clc
(bad)
pusha
retf
sbb
fdivrp
in
or
rcr
and
movs
nop
inc
popa
mov
mov
xchg
imul
push
lods
in
jmp
and
adc
jmp
sbb
shr
push
sub
lods
call
inc
cmp
sbb
in
and
xchg
xchg
jo
cmps
cmp
jmp
jo
cmp
dec
cmc
test
jae
jns
sar
cmc
pop
xor
pop
cmps
push
inc
test
jmp
out
jle
sbb
jmp
sbb
call
xchg
adc
retf
push
or
jns
sahf
ds
mov
fist
rol
popa
cmps
cmps
in
adc
push
jecxz
push
and
mov
aad
jg
loop
add
in
rcr
adc
stos
mov
stos
cmps
into
sbb
(bad)
out
popa
daa
lahf
xor
add
les
sub
in
inc
push
inc
lock
call
cmp
adc
ins
xor
mov
aas
cmp
xor
aam
mov
pop
or
retf
test
cmp
ror
xor
cld
xchg
and
loopne
jns
sbb
std
test
sahf
push
retf
test
rcl
push
xor
div
cli
xchg
daa
push
scas
movs
inc
out
dec
sahf
push
fwait
or
gs
mov
dec
lock
mov
int3
ror
and
pushf
and
push
(bad)
mov
xlat
xor
sar
hlt
out
fwait
sbb
sahf
fisttp
int3
int
aam
inc
les
cmp
sar
test
(bad)
mov
out
rcl
and
inc
pop
pop
pop
in
lea
outs
lahf
les
jp
repz
jb
in
mov
stc
or
or
div
ins
pop
rcl
aad
mov
mov
adc
push
test
jp
pop
mov
mov
mov
int
ja
(bad)
les
test
jne
inc
mov
in
cwde
imul
mov
dec
test
fisubr
nop
xchg
or
dec
movs
xchg
xor
ret
inc
jo
retf
inc
imul
add
add
fcomi
lahf
push
fsubrp
dec
dec
or
mov
in
int3
fidivr
push
dec
mov
adc
in
jbe
lds
mov
aam
and
into
rcl
sub
(bad)
pop
lods
adc
std
aam
hlt
cmps
repnz
or
xchg
jo
test
loop
ret
movs
sar
sub
dec
neg
add
cwde
out
movs
or
xchg
shl
fdivr
sub
sar
mov
push
mov
ret
jmp
loopne
cmp
dec
pop
lock
push
adc
or
pushf
jmp
je
push
rcl
dec
pop
call
bound
into
push
push
fistp
sub
xor
mov
fidiv
push
(bad)
adc
sbb
jp
cmps
xor
sub
mov
outs
mov
inc
pop
jge
popf
inc
mov
inc
xor
arpl
mov
cmps
jecxz
or
sub
inc
mov
or
push
mov
das
push
test
mov
pop
shl
in
inc
fmul
or
jb
jg
leave
fldcw
pop
repz
adc
or
dec
pop
push
movs
mov
es
fld
rcl
out
mov
out
push
jae
in
ror
sbb
cmp
lahf
dec
or
fisttp
xchg
jb
xchg
idiv
rol
push
cs
pop
lods
cld
add
xor
push
ins
outs
xchg
xor
inc
(bad)
sbb
mov
mov
sub
daa
jae
mov
or
scas
inc
push
mov
enter
cmp
inc
xchg
test
jbe
cmp
sub
sbb
clc
xor
cld
stc
inc
mov
ds
jmp
ja
sbb
cld
add
lods
gs
add
inc
pop
(bad)
rcl
fidiv
mov
dec
psrlq
jae
adc
jne
dec
pop
mov
and
out
add
lods
sub
mov
cmc
jo
pop
enter
cmp
imul
pop
push
or
cld
(bad)
jmp
addr16
daa
inc
adc
mov
pop
inc
push
sbb
pop
loop
xchg
(bad)
ret
or
sbb
arpl
scas
pusha
push
dec
mov
push
and
repnz
daa
out
test
sbb
lahf
in
les
push
aaa
push
or
fadd
dec
mov
jge
arpl
fwait
mov
mov
pop
xchg
xchg
fwait
into
inc
jle
imul
inc
cmp
rcl
or
cmps
xchg
sahf
add
add
jl
push
imul
out
add
pop
ja
in
jg
push
and
lock
sbb
inc
cld
cmp
xchg
loope
ret
adc
add
jge
or
cmp
sub
dec
mov
mov
int3
cld
retf
jg
(bad)
call
jae
mov
and
or
arpl
sbb
fisttp
movs
cmp
mov
adc
loopne
adc
push
out
ret
sub
sar
inc
push
cmc
lods
arpl
aas
xor
sbb
inc
ins
xlat
cwde
sahf
sbb
add
cmp
es
sti
inc
mov
add
dec
dec
pusha
imul
std
je
sahf
push
dec
loope
imul
push
or
in
push
les
cmps
ins
xor
pop
xchg
xor
icebp
ret
sub
sbb
sar
sbb
pushf
lds
test
ins
lock
leave
dec
dec
xchg
xor
loopne
push
dec
outs
adc
sub
jle
rol
mov
mov
or
xchg
cs
movs
outs
lds
add
popf
out
sbb
jecxz
inc
and
sahf
dec
aas
mov
ins
push
or
inc
aas
xor
ret
sar
aam
pop
in
stc
out
jle
mov
sahf
mov
popa
mov
xchg
stos
cmc
not
xchg
xor
push
(bad)
or
es
leave
sti
adc
add
or
add
xlat
ds
pushf
and
rcr
pop
in
sbb
mov
fistp
mov
jecxz
cmc
js
dec
push
shr
dec
cwde
and
mov
fst
mov
dec
jg
ret
leave
test
sbb
mov
cmp
sbb
pop
lods
xor
lods
pop
sbb
or
(bad)
xlat
(bad)
push
pop
ror
out
repz
call
dec
jg
push
mov
jne
fld
aas
mov
aad
xor
and
hlt
adc
or
jecxz
sahf
push
sub
(bad)
pop
xlat
cmps
fcmovnbe
sbb
and
daa
pop
mov
pop
dec
loope
xchg
sbb
shl
xor
movsx
cdq
adc
les
lods
inc
xor
cs
cmp
pop
mov
mov
les
xchg
addr16
sbb
js
sbb
popa
push
dec
call
add
mov
mov
inc
jno
sub
jg
mov
int
jns
pushf
sub
xlat
in
push
in
jo
imul
add
cmps
fsub
rcr
adc
es
xlat
lods
fiadd
hlt
mov
rcl
js
movs
pop
xor
(bad)
push
pop
jg
mov
push
cmp
retf
mov
dec
sbb
pusha
daa
ret
imul
push
ret
cmp
push
sahf
or
mov
push
push
sbb
mov
les
mov
lahf
rcr
cmp
repnz
data16
into
add
test
shl
push
xchg
cdq
call
sar
inc
xchg
xchg
xchg
iret
sbb
lods
xchg
lahf
sub
imul
pusha
retfw
mov
dec
cmp
jmp
inc
fldenv
xchg
lods
hlt
mov
add
pop
nop
adc
aas
pop
or
shl
pushf
data16
test
pop
inc
ret
adc
jl
test
mov
mov
and
jge
dec
sub
mov
cli
xlat
pop
jmp
int
div
std
lods
aam
cmps
mov
add
aad
jmp
test
xor
push
int3
dec
loope
call
mov
pop
sub
mov
imul
or
pop
pushf
push
mov
inc
cwde
retf
inc
je
jle
ret
test
push
retf
fsubr
imul
add
push
sub
retf
dec
pusha
mov
sbb
jmp
xchg
push
inc
fdivr
add
mov
jbe
mov
sub
icebp
mov
bound
das
ret
cmps
cmp
lods
xor
leave
jp
xchg
xchg
xor
or
lock
lds
jle
idiv
xchg
cmps
std
out
cmp
push
ficom
jo
clc
mov
sbb
xor
outs
aas
test
retf
lods
add
mov
mov
cmp
cwde
jecxz
push
mov
and
lahf
dec
mov
cmc
mov
rol
push
add
sub
repnz
(bad)
adc
fadd
jbe
lds
mov
fnstsw
jbe
je
movs
sbb
data16
mov
cmps
cmps
ret
test
cmp
dec
push
mov
(bad)
mov
stos
pop
pop
pop
push
ret
xchg
popf
scas
xchg
jae
sub
xchg
cdq
je
inc
mov
add
mov
jne
adc
cmp
imul
inc
out
dec
xchg
xchg
jp
sub
popa
inc
enter
add
or
sti
inc
psllw
sub
pop
mov
aaa
retf
jg
hlt
inc
xchg
ret
mov
pushf
retf
aam
in
xlat
sub
les
sub
and
call
(bad)
xchg
cmp
add
(bad)
cmp
imul
jmp
sub
in
xchg
js
out
mov
rol
add
and
lods
add
cmp
jno
add
add
push
pop
or
adc
inc
popf
inc
fwait
mov
sbb
adc
sub
ret
mov
adc
jo
iret
adc
test
aaa
(bad)
jmp
jmp
mov
fidivr
int3
add
ja
push
outs
mov
adc
inc
cmp
xor
push
outs
aas
xchg
xchg
xor
pop
ret
cmp
test
addr16
dec
push
movs
mov
mov
loope
adc
jmp
pop
js
dec
mov
cld
fadd
fsub
inc
xor
movs
mov
jmp
popa
cmp
mov
pop
mov
sahf
adc
popf
sbb
mov
cmps
mov
movs
cwde
adc
sar
mov
lock
(bad)
stos
push
cmps
les
pop
ss
pop
aaa
or
mov
repz
jl
enter
sbb
cmp
(bad)
pusha
cmc
jae
inc
push
neg
xor
rcl
cmp
(bad)
iret
xchg
push
inc
popf
adc
test
rol
mov
pop
push
add
rcl
mov
add
inc
scas
sub
cdq
enter
push
mov
movs
addr16
(bad)
xchg
pop
adc
adc
jae
nop
repz
mov
popf
mov
popf
mov
std
push
jge
dec
mov
sub
dec
xchg
push
pop
int3
pusha
inc
mov
mov
push
je
push
test
pop
xor
sbb
inc
pop
dec
popa
sub
ret
mov
aad
pushf
jae
es
test
pop
mov
push
jmp
adc
call
ins
in
jle
cmp
ret
sub
out
scas
(bad)
ss
pop
push
xchg
imul
imul
or
cmp
mov
(bad)
sahf
sub
addr16
aad
leave
pop
(bad)
es
mov
mov
and
mov
(bad)
iret
and
and
sub
into
dec
adc
(bad)
push
sub
xor
inc
in
cmp
lods
int3
pop
xchg
je
ret
jnp
call
adc
leave
push
add
pop
call
push
mov
scas
retf
inc
xchg
sbb
repnz
in
dec
cmp
in
clc
into
sahf
cli
inc
or
cli
in
sar
add
outs
stos
inc
fnsave
jns
std
stos
(bad)
mov
cmp
jo
cmp
outs
fidivr
sar
sbb
cmp
xor
es
mov
cmp
aas
scas
jp
lock
or
or
sub
mov
shl
inc
adc
inc
jmp
dec
bound
mov
mov
xchg
cmps
dec
push
push
sub
add
lahf
nop
mov
fcom
xchg
cmp
pop
sahf
les
fsubr
push
sub
mul
idiv
inc
sub
int
in
sub
or
hlt
jecxz
ret
gs
push
ret
pushf
shr
pusha
adc
or
jp
add
xchg
xchg
daa
push
jg
mov
mov
into
jno
repz
stos
pop
ret
or
(bad)
stos
(bad)
mov
inc
out
in
jbe
inc
inc
sbb
mov
in
loop
push
pop
push
jne
xchg
rol
clc
mov
push
dec
xor
out
push
push
loope
pop
std
jp
scas
push
inc
stos
sbb
inc
mov
aam
aad
push
mov
cmps
jp
rcl
aad
mov
add
dec
dec
jne
sbb
mov
pusha
mov
stos
mov
mov
scas
push
fiadd
dec
das
ins
fdivr
xchg
inc
inc
cmp
pop
dec
mov
cmp
cmp
inc
sub
fsub
xor
adc
sub
arpl
mov
or
(bad)
(bad)
push
jns
sbb
cmps
loope
(bad)
rol
test
xchg
ds
out
mov
add
dec
ins
outs
pop
or
rol
mul
out
xor
xor
cs
dec
pop
xchg
sub
inc
clc
je
psrld
ins
retf
push
xchg
jae
out
mov
iret
popf
jecxz
ins
lods
sbb
push
fcmovnbe
dec
push
loope
jmp
ja
inc
icebp
sahf
inc
inc
push
push
mov
adc
pop
mov
shl
push
rcl
jp
mov
rol
ja
xchg
pusha
push
mov
mov
jg
inc
cli
xchg
jns
sub
push
xor
sub
addr16
jnp
push
mov
retf
imul
sub
jne
fistp
imul
or
data16
dec
iret
cmp
mov
icebp
jmp
clc
movs
xchg
pop
sub
shr
sub
loop
cmc
push
xchg
sub
int
aad
mov
pop
jp
rcr
(bad)
stc
aas
xchg
nop
jno
push
hlt
sbb
fwait
jbe
pop
in
or
lahf
pop
rcl
imul
push
push
test
cmp
push
sahf
dec
mov
fistp
or
and
aad
mov
sub
addr16
pop
(bad)
xor
shl
ret
mov
or
je
inc
in
popa
jge
repnz
popf
adc
mov
jmp
ss
push
xchg
shr
cmp
ins
repz
bound
es
xor
das
jo
cmp
pop
mov
jno
pushf
out
fisub
and
mov
outs
dec
int
int3
outs
push
adc
aas
sti
push
cmp
es
or
add
xor
mov
in
movs
pop
lock
mov
xchg
or
xchg
loopne
shr
mov
mov
sub
sub
(bad)
stos
dec
pop
dec
test
add
cld
nop
gs
xchg
outs
test
push
cmp
xchg
div
mov
lods
cld
add
mov
loope
push
mov
enter
imul
add
popa
push
ins
adc
inc
je
popa
(bad)
xchg
jge
out
(bad)
jle
scas
pop
sbb
cld
fisttp
mov
ret
jge
call
retf
adc
mov
jp
sbb
dec
xchg
sbb
mov
jno
sub
(bad)
jno
hlt
repnz
(bad)
xor
ins
jno
addr16
lea
(bad)
adc
cs
inc
cmc
or
sub
inc
pop
out
popa
(bad)
push
dec
gs
fnsave
push
pop
adc
(bad)
aam
sub
es
int3
aaa
fist
cmp
fiadd
pop
xor
adc
mov
xchg
rcr
sbb
imul
fincstp
(bad)
(bad)
arpl
and
clc
sbb
ja
adc
pop
jge
xchg
mov
ins
cmp
xchg
jmp
xchg
and
cs
das
add
jge
call
in
ror
or
mov
int
adc
inc
(bad)
mov
mov
cld
popf
and
push
push
push
jge
loopne
dec
ins
jg
mov
shl
cld
jns
mov
push
shr
xchg
and
call
mov
and
dec
mov
mov
mov
pop
shl
add
in
retf
fstp
inc
fwait
inc
lock
xor
push
xor
pop
mov
fwait
add
jne
cmps
cmps
ins
cs
inc
mov
sbb
jp
mov
js
push
mov
or
and
dec
pop
pusha
sub
sbb
pop
xchg
cdq
out
ja
pusha
mov
stos
shl
mov
imul
or
mov
dec
and
int3
or
xchg
cmp
jae
jo
mov
movs
out
mov
add
lds
fidivr
push
mov
dec
lea
push
add
or
jecxz
lahf
repnz
ror
js
sbb
fld
(bad)
or
gs
or
pop
not
ffree
sbb
add
test
stc
pusha
jns
xchg
add
mov
push
pushf
mov
sbb
fild
cmp
inc
js
dec
xchg
shl
fsub
mov
xchg
jo
movs
dec
mov
enter
jb
sub
adc
aad
imul
cmp
push
inc
mov
mov
stc
rcr
pusha
mov
sub
mov
add
mov
xor
fadd
rcl
aaa
add
adc
ret
jmp
mov
aas
mov
sbb
out
ins
sbb
imul
pop
sbb
repnz
sub
call
adc
dec
outs
test
cs
cmp
inc
and
xor
xor
mov
ds
cmc
xchg
mov
jmp
out
jb
and
and
int3
mov
mov
je
pop
pop
fst
ins
and
xor
std
xlat
mov
inc
int
jge
loop
sbb
mov
out
xor
or
lahf
cmp
fs
aaa
pop
gs
mov
jb
inc
jbe
dec
fwait
pop
mov
add
xchg
in
jmp
mov
add
(bad)
jne
(bad)
dec
xchg
pop
fnstcw
lea
fdivr
lahf
fldenv
push
gs
arpl
dec
out
jge
mov
inc
jmp
fcomp
cmp
cdq
mov
fwait
add
mov
movs
sub
ds
nop
sbb
add
push
int
stc
(bad)
jmp
jo
xchg
xchg
mov
shl
(bad)
jno
repz
ds
push
inc
ds
retf
jl
daa
aam
addr16
push
enter
sbb
leave
rcl
mov
adc
sub
nop
jmp
cs
in
nop
pop
imul
inc
pop
mov
jl
fisubr
lods
or
mov
ss
popf
(bad)
(bad)
fs
in
ja
inc
sbb
pop
xor
xchg
popf
pop
push
ja
lods
stos
mov
je
pop
or
dec
retf
enter
cld
or
mov
pusha
mov
mov
pop
dec
fucomi
sub
ds
or
sbb
xchg
loope
les
fsub
pop
ror
mov
dec
pusha
sub
pop
adc
or
cmps
imul
jle
das
push
out
ins
pop
sbb
mov
lods
inc
push
dec
xlat
mov
pop
nop
adc
mov
push
cmp
cdq
je
dec
xchg
mov
adc
mov
rol
push
pop
pop
popa
out
cmc
inc
bsf
pop
jb
enter
pop
sbb
push
(bad)
add
xor
pop
jns
dec
mov
jg
or
fidivr
ret
bnd
lock
add
jno
xchg
mov
add
cmps
je
push
je
and
jae
out
pop
imul
xor
jno
cli
or
test
cmp
bswap
lods
adc
and
aas
and
fmul
push
hlt
push
mov
jnp
mov
xchg
retf
out
in
push
sahf
jae
mov
jp
out
lock
ja
mov
sbb
jbe
xor
and
(bad)
cmp
push
mov
sub
mov
xchg
xor
mov
fcomp
cmps
ins
imul
xlat
cs
and
test
mov
sbb
push
out
imul
push
xchg
xchg
jnp
xchg
xchg
xchg
sub
mov
into
retf
fisttp
clc
cmps
mov
lea
push
xchg
addr16
std
gs
clc
push
rcl
popa
mov
loopne
sub
dec
(bad)
imul
(bad)
and
and
xchg
test
add
push
cwde
pop
pop
call
jno
fild
scas
jbe
loop
call
retf
mov
pop
cmps
test
test
or
cmovbe
jb
(bad)
cmp
out
pop
test
stc
pop
cmps
inc
xor
dec
enter
xchg
hlt
test
sahf
imul
mov
push
das
xchg
mov
retf
dec
cmp
imul
mov
mov
inc
rol
mov
std
jns
mov
in
push
fld
inc
icebp
pop
sub
leave
sub
cli
mov
dec
mov
xchg
sbb
imul
jge
xchg
pop
mov
xlat
out
add
cmp
mov
movs
pop
adc
sub
sbb
cmp
lea
nop
scas
fild
fwait
shl
clc
ss
dec
xor
ficom
stos
sbb
inc
in
popa
push
dec
xchg
jno
and
cmp
xor
in
ins
aaa
loopne
ss
push
mov
fstp
xchg
pushf
sub
pop
cmc
mov
arpl
add
jl
aas
cmp
sub
push
fiadd
rep
repnz
int3
mov
sub
repz
adc
outs
xor
jno
int3
cli
pop
into
xchg
xlat
mov
jnp
push
das
mov
icebp
sub
pop
or
sbb
pop
sbb
into
dec
outs
mov
loop
mov
dec
mov
ror
fild
jp
xor
push
push
or
push
dec
in
pop
aad
xor
daa
pop
retf
inc
jns
in
pop
mov
ret
punpckhdq
call
pushf
pop
cs
sti
pop
popa
sbb
push
add
cmp
and
loop
cwde
dec
dec
je
gs
ja
and
(bad)
push
mov
fistp
test
push
dec
pop
pop
ficomp
inc
pop
add
dec
dec
push
mov
mov
mov
xchg
jl
stos
mul
mov
addr16
jmp
(bad)
add
mov
sbb
jns
dec
mov
push
push
mov
addr16
add
add
push
dec
cmp
jg
jno
mov
scas
push
out
imul
jecxz
xor
adc
leave
movs
out
push
std
cld
mul
in
cli
jbe
stos
movs
fnsave
or
cli
xor
mov
dec
in
sub
out
sbb
stos
push
in
and
dec
aam
int3
cmp
retf
test
adc
int3
movs
out
scas
push
push
pop
aaa
xchg
adc
shl
and
mov
mov
inc
test
dec
les
sti
adc
shl
pop
jmp
add
jge
mov
popa
mov
enter
mov
inc
ins
pop
out
push
sbb
jno
(bad)
das
or
mov
adc
fisubr
int3
in
js
fst
in
shl
cmc
adc
push
ret
bound
(bad)
hlt
jno
into
mov
sahf
sbb
cs
imul
inc
xor
stc
pop
dec
sahf
fwait
adc
adc
icebp
pushf
outs
jmp
lods
mov
mov
pushf
(bad)
mov
and
movs
(bad)
push
fistp
call
cmp
out
adc
jmp
out
mov
pop
dec
mov
dec
push
push
les
inc
jne
jecxz
sub
mov
mov
dec
sti
xchg
retf
xor
jnp
in
mov
push
or
jnp
inc
sub
or
pop
cmps
jge
rol
jae
jg
leave
push
add
push
dec
sbb
adc
enter
mov
jnp
inc
movs
call
pusha
shl
mov
inc
xchg
sub
fadd
cmps
xchg
movs
push
lahf
mov
jle
scas
(bad)
push
loopne
mov
repnz
outs
add
imul
fsub
mov
fstp
xor
xchg
pop
loopne
ret
outs
loope
mov
rcl
rcl
push
xchg
sbb
pop
daa
ja
adc
hlt
lock
push
pop
xor
push
mov
and
stos
and
push
sbb
mov
add
int3
push
cwde
push
cmp
push
in
popf
push
mov
stc
ret
cs
movs
mov
rcl
xchg
sti
cmp
call
jmp
or
adc
dec
mov
(bad)
sbb
movs
jmp
in
jno
or
or
dec
cmp
jmp
ss
rol
mov
or
inc
xor
ja
out
(bad)
das
not
add
repnz
mul
dec
sbb
(bad)
mov
jge
das
pop
pop
sub
inc
cmp
adc
pop
pop
sub
ins
mov
xchg
movs
test
ss
mov
sbb
jle
lea
dec
sbb
mov
xchg
ds
xchg
mov
mov
xchg
xchg
cmp
sub
pop
in
adc
and
aas
int3
js
sub
mov
int3
jl
sub
cmp
jnp
hlt
popa
mov
ficom
mov
and
pushf
push
inc
es
push
in
or
jecxz
leave
cld
xchg
test
or
inc
sti
adc
(bad)
bound
pop
mov
push
cli
add
xor
leave
sbb
pop
xor
inc
jmp
rcl
pop
addr16
repz
nop
in
stos
push
sub
shr
cmp
rcr
mov
nop
sbb
cmp
cmps
sar
sub
int3
jnp
sti
mov
jge
ja
pop
xchg
gs
xor
sahf
pop
ret
outs
mov
pop
sbb
xlat
sbb
idiv
fst
outs
movs
(bad)
push
add
add
popa
sbb
out
and
push
imul
push
in
inc
mov
mov
xchg
pop
mov
ret
aas
fsubr
sub
imul
xchg
push
jb
or
aad
(bad)
lods
aad
push
lahf
mov
pop
push
sub
adc
out
dec
or
jle
je
sub
(bad)
dec
push
and
jns
mov
xchg
sbb
call
inc
hlt
dec
imul
jg
fnstsw
push
inc
int3
mov
test
pop
pop
pop
pop
(bad)
ret
adc
push
push
imul
shr
inc
xor
xlat
bound
call
pop
out
fwait
push
das
pop
sbb
adc
push
icebp
in
loop
movsx
pop
push
adc
mov
mov
ficom
sar
cmps
add
int
call
lods
jl
pop
es
imul
mov
ss
mov
(bad)
or
js
fist
(bad)
adc
addr16
jns
xor
in
adc
mov
enter
scas
jl
mov
and
pop
fcom
add
push
dec
(bad)
pop
add
inc
jp
rcr
ds
ja
add
gs
cmp
das
gs
push
popf
aam
test
fimul
inc
movs
xchg
cmps
movs
and
into
jae
xchg
mov
repnz
add
add
rcr
repnz
xor
inc
cld
pop
or
pushf
(bad)
adc
mov
mov
xchg
cmp
clc
not
xor
add
fnstsw
cmps
and
leave
enter
out
inc
pop
cmp
add
cmp
mov
mov
push
push
dec
pcmpeqb
pop
mov
xchg
icebp
jno
ins
adc
in
call
push
mov
jmp
outs
inc
inc
sbb
mov
repz
xchg
push
pop
not
push
sbb
dec
or
call
add
(bad)
mov
mov
mov
sti
lods
xchg
icebp
sbb
push
mov
adc
xchg
lea
mov
daa
pop
lods
daa
or
xchg
push
xor
repnz
ror
into
out
add
pop
fild
sti
inc
je
mov
inc
ds
test
clc
sbb
xor
sub
jle
xor
push
scas
mov
repz
sbb
jge
cmp
ins
sub
xor
gs
adc
fcomip
test
push
shl
in
neg
mov
push
jmp
pop
in
jb
pop
outs
hlt
push
lods
jno
mov
mov
cwde
and
mov
mov
mov
jo
mov
dec
rcl
mov
pop
adc
(bad)
repnz
repz
cvtps2pi
loope
das
jge
mov
xor
push
jae
lods
or
sahf
xor
(bad)
enter
sub
jp
arpl
in
ret
sbb
dec
xchg
jecxz
mov
jge
pop
fucomi
fsubr
lahf
adc
(bad)
(bad)
jo
adc
or
mov
hlt
je
mov
(bad)
inc
push
jno
pop
movs
not
aam
fcom
jae
aad
xchg
or
pushf
mov
sbb
cmp
adc
sbb
and
fnstenv
imul
push
shl
pop
cmp
jbe
pusha
push
sub
out
push
lods
bound
cmp
movs
mov
pop
push
(bad)
sub
ror
mov
addr16
shr
xchg
sbb
pusha
es
(bad)
and
xchg
add
pusha
popa
inc
jne
dec
cs
fbstp
mov
jns
stos
xchg
dec
or
adc
int3
jno
push
xchg
call
out
xchg
dec
push
sbb
fcomp
es
leave
mov
xchg
inc
pop
xchg
or
dec
ret
into
std
ins
sub
push
adc
shl
xor
push
and
pop
xor
pop
inc
pushf
inc
nop
into
shr
pop
pop
or
jo
loope
loope
pop
xchg
and
cmps
xor
push
mov
cmp
mov
hlt
jmp
cmp
stos
leave
xchg
dec
jns
ret
rcl
(bad)
inc
(bad)
pusha
fmul
int3
popf
add
test
push
sub
pop
retf
add
sbb
push
push
push
ins
sbb
cmps
dec
imul
imul
xchg
not
mov
hlt
movs
mov
cmp
popf
stc
in
outs
fnstsw
lds
xor
and
dec
sbb
outs
cmc
push
std
jle
mov
addr16
stos
push
test
js
out
pop
mov
imul
(bad)
mov
add
dec
sbb
sub
js
pop
push
hlt
mov
push
push
aas
jmp
lods
push
or
jmp
mov
jp
cmp
pop
jb
repz
mov
push
dec
ss
fstp
push
mov
add
inc
ins
cmp
or
sub
xchg
loop
ja
in
inc
jae
out
dec
push
ja
or
push
mov
xchg
cmp
add
jno
mov
add
xchg
xchg
cdq
das
and
shr
push
pop
les
xchg
sbb
mov
aad
retf
jecxz
xor
jmp
jnp
inc
pusha
sbb
jbe
test
fdiv
mov
jle
out
mov
(bad)
adc
xor
rol
jl
or
push
cmp
inc
test
clc
ins
mov
pop
rol
mov
or
loop
xchg
lds
jbe
scas
push
ret
mov
call
bound
es
mov
or
push
movs
jnp
fsubp
adc
loopne
sahf
loop
pop
into
fs
cmp
xchg
int3
fldenv
out
jmp
jns
dec
pop
push
sbb
popa
iret
pop
call
add
dec
sti
int
add
sti
cmp
sub
mov
fsub
ret
cmps
cmp
outs
xchg
in
mov
stos
and
cmp
out
mov
inc
gs
jmp
mov
loop
test
add
imul
ror
xchg
and
add
cmp
xor
xor
cld
mov
daa
inc
je
dec
sbb
mov
into
les
sub
mov
push
xchg
jbe
push
fistp
lods
aam
jmp
fsub
sahf
sbb
mov
arpl
mov
cmp
aaa
and
sub
sub
xchg
lods
inc
cmps
add
or
stc
or
rcr
xchg
jecxz
jmp
daa
clc
(bad)
dec
sbb
or
pop
je
inc
dec
jnp
dec
lods
into
push
rol
mov
dec
hlt
or
fcom
mov
or
xor
mov
mov
jle
sub
pop
jb
loop
mov
pop
aaa
retf
sbb
inc
cdq
inc
sahf
fcmovnbe
(bad)
sbb
sub
mov
loope
lods
out
xor
fild
pop
ins
sub
push
sbb
mov
xchg
sub
cmp
or
mov
jbe
push
test
fsubr
and
mov
leave
imul
popa
mov
pop
xchg
push
xchg
mov
adc
outs
xchg
stos
cmp
xor
mov
pop
mov
out
scas
je
test
cmc
push
mov
pusha
mov
push
arpl
cmp
fisubr
xchg
fs
scas
adc
sar
repz
popa
jno
adc
pop
xor
cmp
fisub
cmps
fwait
sar
ror
mov
push
(bad)
sti
mov
mov
sbb
ss
into
push
call
mov
inc
cmps
(bad)
pop
mov
dec
adc
push
loopne
shl
add
sub
xor
jle
out
fidivr
or
sbb
adc
pop
shr
cwde
test
(bad)
push
pop
or
cmp
hlt
rcl
lock
cmp
mov
ins
push
sub
loope
pop
pop
xlat
push
cmc
pop
and
je
jmp
je
cmp
and
iret
or
jb
xor
or
dec
mov
fsubr
mov
push
xchg
lods
aaa
mov
jnp
(bad)
aad
in
shl
outs
mov
add
xchg
test
call
pop
nop
add
movs
fistp
cmp
lods
inc
lods
dec
mov
push
idiv
out
in
(bad)
int3
push
in
and
or
inc
pushf
mov
(bad)
jp
mov
xchg
xor
xor
xor
pop
idiv
lahf
mov
pop
call
mov
mov
lods
popa
cmp
pop
sti
lds
inc
dec
es
mov
outs
push
test
es
cmp
xchg
les
mov
clc
sbb
xlat
pop
sub
adc
jmp
xchg
test
inc
xchg
mov
fistp
dec
xchg
ins
push
cmp
jle
jno
mov
loop
iret
cs
fadd
dec
into
sub
xor
jno
push
push
fstp
pop
lods
push
cmp
cmps
mov
dec
clc
and
jp
cmps
mov
and
popa
cmp
xor
pop
(bad)
int
push
jecxz
jmp
out
pusha
push
dec
stos
iret
cmc
cmps
cld
repnz
mov
pushf
push
sti
imul
cwde
add
cmps
in
repnz
lahf
and
add
scas
test
or
dec
jns
out
loop
shl
movs
jge
jnp
int
inc
push
out
or
aas
shl
outs
and
pop
sub
mov
xchg
add
dec
jns
ret
mov
cmp
dec
adc
fisubr
clc
jl
rcr
mov
push
fidivr
shr
outs
sbb
outs
and
lds
fnop
int3
fsub
test
mov
popf
(bad)
rcl
cmp
sbb
inc
sti
popf
mov
sbb
cmc
cmp
jo
adc
and
xchg
ror
or
cmps
sub
out
sbb
jl
into
cmps
pushf
xchg
aad
push
xchg
mov
es
call
ins
(bad)
add
dec
icebp
outs
push
out
add
xor
mov
xchg
fnstenv
fcom
mov
daa
xchg
push
int
cmp
mov
sbb
call
dec
shl
icebp
mov
pop
xor
popa
out
lahf
popa
loop
sub
test
cmp
jne
adc
aam
jecxz
mov
mov
inc
scas
ds
xor
aad
in
xchg
jge
xchg
pop
pop
adc
dec
into
cmp
adc
fwait
rol
pop
jnp
aas
jbe
sub
movs
inc
rcr
test
push
es
xchg
fadd
cmc
jp
dec
sub
sub
add
ja
dec
hlt
adc
jns
scas
sub
xor
mov
mov
popa
push
outs
stos
xchg
push
lods
sbb
jecxz
add
in
mov
inc
ficomp
(bad)
stos
js
(bad)
sbb
sub
test
es
les
adc
push
cmp
div
movs
fadd
call
repnz
retf
repnz
test
xchg
in
loop
pop
inc
sbb
les
push
sub
dec
push
sahf
and
xor
sbb
mov
xor
mov
add
cmp
dec
sbb
jbe
inc
retf
jmp
and
sahf
and
cwde
lds
out
jns
mov
xor
icebp
inc
xor
fcomp
push
dec
pop
movs
cmp
jp
retf
das
or
push
pop
fsubrp
sbb
mov
retf
inc
xchg
jns
xor
test
and
jno
cs
(bad)
lahf
xchg
movs
push
push
in
jnp
adc
cwde
add
jne
adc
aad
xchg
xor
aam
push
mov
xchg
mov
sub
dec
mov
sbb
(bad)
ret
adc
dec
cli
add
sti
inc
enter
cmp
sbb
(bad)
hlt
mov
fsub
ret
daa
sub
pop
pop
xor
and
stc
das
sahf
ret
jns
loope
(bad)
jmp
sbb
loop
iret
in
rcr
sub
les
das
fsub
inc
inc
lods
out
dec
mov
ja
dec
cmp
(bad)
xor
jg
les
and
sub
xor
dec
das
mov
aam
or
sbb
xchg
cmps
pop
pop
mov
lods
xchg
aaa
and
cmp
pop
sbb
pusha
pop
pop
fistp
pop
mov
fsubr
lss
and
(bad)
ret
push
jmp
push
jae
sub
loopne
imul
jp
into
mov
add
hlt
pushf
jecxz
loopne
jmp
sub
lods
jecxz
enter
cli
mov
stc
or
dec
add
cmp
bnd
cmp
sbb
add
inc
les
pop
mov
push
fisubr
outs
push
scas
je
adc
fld
push
lahf
scas
in
and
pop
jmp
xor
sub
(bad)
push
leave
test
fisttp
mov
mov
pop
movs
xchg
and
xor
test
loope
popf
or
inc
push
mov
test
cmp
pop
(bad)
jp
push
xor
rol
pushf
dec
jle
jmp
inc
adc
test
xlat
cmp
lock
sbb
sbb
dec
xlat
sub
es
sub
(bad)
dec
aad
lds
mov
xchg
pushf
xchg
jg
xor
enter
int3
bswap
call
sar
push
add
ins
sub
sbb
mov
push
xchg
jl
std
dec
adc
jbe
pandn
jmp
or
add
loope
add
xor
ins
jp
cmp
sti
cwde
jae
icebp
push
fs
(bad)
je
jno
mov
(bad)
idiv
xchg
pop
mov
pop
jmp
call
sti
cmps
test
pushf
mov
xchg
and
in
xlat
pop
clc
div
dec
jbe
xchg
push
jnp
inc
mov
repz
mov
loopne
xchg
adc
daa
mov
mov
rol
(bad)
adc
mov
jge
test
dec
add
call
and
mov
leave
mov
cli
add
mov
in
les
xchg
ret
(bad)
mov
adc
sub
aas
jmp
fs
sub
pop
push
dec
movs
in
push
bsf
pop
adc
shl
dec
or
and
in
ret
in
cmp
stos
cmp
add
cs
mov
(bad)
cmp
test
or
into
aas
in
xchg
cmps
push
push
pop
fisttp
pop
mov
or
xchg
xchg
js
mov
movs
stos
jb
and
cmp
mov
loope
je
fst
out
(bad)
sub
dec
cli
xor
add
ret
push
pop
jp
jb
pause
pop
idiv
or
(bad)
inc
adc
loop
fcomi
push
ins
jg
xor
in
into
mov
rcl
pop
pop
mov
mov
iret
mov
xlat
sbb
jbe
pop
(bad)
mov
out
add
loope
jmp
add
xchg
retf
jne
mov
cld
mov
xchg
pop
stos
adc
fmul
cmp
add
adc
mov
mov
popa
pop
adc
add
push
fs
sbb
dec
add
mov
int
add
adc
inc
test
jae
mov
cli
sub
xor
sub
stc
mov
add
xchg
pop
imul
add
fcmove
add
mov
pop
jl
jp
push
repz
and
jg
arpl
cmp
in
and
fsubr
jno
push
fwait
mov
scas
leave
call
arpl
mov
push
pushf
jb
fiadd
sub
fnstcw
ds
push
fistp
push
stos
pop
adc
inc
inc
out
lods
jnp
push
lds
stos
loop
sbb
adc
xlat
cld
mov
iret
addr16
mov
sbb
popf
popa
mov
mov
ins
mov
sub
add
jg
adc
cmc
hlt
xchg
sahf
xlat
cmp
cmp
in
mov
or
xchg
mov
sbb
push
inc
inc
mov
jb
mov
cmp
jle
mov
rcl
sbb
sub
repnz
jmp
adc
mov
ret
test
fwait
hlt
into
cmp
mov
cmp
fdivr
or
jno
pop
add
retf
pop
das
(bad)
out
std
mov
xchg
(bad)
or
iret
pop
rol
dec
jecxz
push
xor
jp
pop
repz
or
arpl
xchg
add
pop
inc
or
mov
les
jmp
or
rol
stc
mov
test
mov
cli
mov
movs
daa
je
xor
mov
sbb
pop
int
dec
xchg
outs
xor
dec
scas
shl
dec
mov
in
fcos
cmps
pusha
cmps
out
dec
mov
mov
scas
addr16
xchg
dec
pop
xchg
je
xchg
mov
int
pop
and
std
push
xor
push
shl
or
jbe
scas
push
sub
and
shr
jb
mov
and
inc
xlat
pop
movs
add
and
jl
jne
in
pop
jp
mov
js
bound
fimul
sbb
sti
fld
lea
fisttp
leave
dec
adc
in
adc
fisttp
pop
inc
test
xor
adc
dec
fstp
aad
in
jnp
ret
sbb
mov
jecxz
push
sub
push
push
and
xchg
inc
push
mov
xor
pop
fbld
mov
inc
xchg
retf
repz
push
mov
repz
cli
sub
xchg
into
xor
mov
or
sbb
push
shl
repnz
gs
inc
pop
cmp
sti
pop
adc
ins
push
adc
outs
mov
call
pop
pop
(bad)
pop
mov
pop
mov
push
and
int3
ja
icebp
lock
mov
ret
add
jge
pop
retf
(bad)
xlat
mov
retf
mov
push
fild
inc
mov
jg
nop
jno
mov
clc
lods
mov
fcomp
push
pop
or
and
js
repz
mov
pop
cdq
adc
call
cmp
rcr
shl
pop
dec
adc
data16
dec
into
aaa
adc
xchg
call
push
pop
hlt
inc
ds
dec
cld
in
push
mov
inc
sbb
les
fwait
scas
inc
jne
fcmovnu
mov
in
push
cmp
js
out
inc
ret
retf
neg
loop
adc
js
jg
cmp
mov
data16
pop
dec
adc
fld
pop
mov
pop
inc
lds
xchg
ds
mov
dec
in
dec
ja
cmp
push
mov
fdiv
paddsw
and
xor
mov
jns
cdq
cmp
sahf
stos
mov
nop
mov
aaa
sbb
clc
ret
fwait
xchg
xor
outs
xchg
or
sub
pop
inc
or
in
mov
or
mov
pop
mov
icebp
pop
out
push
sub
retf
dec
jnp
iret
ja
gs
lods
dec
mov
lods
bound
pop
enter
in
jmp
rcr
stc
cmp
lods
ja
jp
adc
and
add
cdq
std
pop
or
and
stos
mov
xor
push
lods
imul
adc
xchg
and
cmp
xchg
push
xor
sahf
nop
imul
pusha
jbe
lods
dec
xchg
aad
std
iret
mov
rcr
add
jbe
aas
mov
mov
xchg
jg
lods
les
add
dec
shl
mov
ror
rcl
cmp
sti
mov
push
imul
(bad)
jno
cmp
jl
inc
adc
int3
cdq
add
mov
sbb
lods
test
adc
dec
(bad)
sbb
cs
cld
sub
aas
int3
mov
xchg
int3
push
into
je
push
xchg
xchg
adc
jmp
(bad)
sbb
or
jo
loop
in
fst
sbb
into
enter
xchg
xlat
add
mov
ss
dec
xor
mov
dec
cmp
mov
dec
or
add
sbb
adc
test
inc
mov
mov
mov
call
xchg
cmp
sub
mov
cmp
sbb
shr
test
call
les
sbb
sti
mov
imul
jnp
cmp
inc
pop
xchg
sub
jns
sbb
cmp
es
push
clc
mov
(bad)
in
push
stos
and
mov
(bad)
nop
gs
out
in
rcr
mov
movs
mov
push
rcr
mov
lahf
cmp
xor
mov
mov
and
mov
(bad)
lds
mov
mov
xchg
push
xchg
xchg
mov
xor
pop
in
sub
xchg
jno
pop
call
in
cwde
xchg
aam
in
out
jp
sub
cmps
scas
inc
jns
add
sar
xchg
(bad)
push
fimul
dec
es
push
cdq
xchg
fwait
pop
(bad)
mov
out
(bad)
sti
imul
bound
sub
sti
sbb
enter
cmp
and
jmp
outs
mov
aaa
cmp
dec
fidivr
call
push
and
bound
sbb
xor
pop
inc
ret
or
pop
inc
mov
push
mov
loopne
fistp
push
mov
xchg
inc
cwde
dec
stc
outs
popf
jb
xchg
and
pop
mov
mov
dec
cld
xor
(bad)
punpcklbw
mov
repz
add
clc
push
sahf
jne
cmp
inc
js
bound
push
or
dec
sub
test
outs
in
xor
mov
outs
aam
pop
movs
shl
cmp
push
sub
push
movs
outs
cmp
nop
dec
rol
xchg
sbb
sbb
push
fs
pop
and
fbld
inc
aas
test
enter
inc
add
test
mov
mov
inc
xchg
sbb
shl
mov
dec
out
fstp
mov
shr
xadd
fwait
mov
pop
mov
dec
jne
test
pushf
ins
sbb
out
psrld
hlt
xchg
sub
in
xor
add
aad
and
sub
push
jne
xor
xlat
outs
(bad)
mov
dec
shr
aaa
icebp
and
mov
mov
sub
dec
jo
jmp
sahf
ins
cmps
push
mov
repnz
push
cmp
push
inc
xchg
in
xchg
lods
scas
(bad)
addr16
push
sub
popf
es
in
xchg
cmp
scas
add
xchg
xchg
ja
adc
cli
imul
xchg
test
cmp
adc
in
inc
adc
outs
loope
shr
popa
xchg
rcr
movs
xlat
jne
pop
test
adc
mov
jp
ins
inc
fmul
add
dec
sbb
mov
(bad)
pop
xchg
sbb
push
or
bound
(bad)
cmp
sub
dec
mov
test
or
sub
jge
cmp
pop
fs
stc
jp
stos
add
jmp
je
jbe
mov
in
jns
adc
jge
dec
iret
stos
shl
imul
xor
pop
add
aad
movs
hlt
sub
call
jbe
jae
bts
fiadd
into
mov
in
gs
sbb
arpl
dec
or
loop
xor
test
push
mov
jmp
shr
inc
push
lahf
test
mov
scas
inc
xchg
popf
push
ffreep
jb
leave
(bad)
push
clts
xlat
movs
mov
iret
sbb
idiv
xor
add
repnz
pop
or
xchg
ret
leave
jg
pushf
sbb
mov
inc
ss
sahf
push
dec
pop
push
mov
add
iret
xor
and
or
and
shl
xchg
jnp
pop
aam
push
daa
jno
ins
retf
pop
sub
sub
jge
inc
adc
fdiv
or
cmc
inc
leave
dec
add
mov
into
add
test
pop
inc
xchg
in
loopne
ja
repz
out
adc
imul
retf
lds
shr
jns
push
jno
adc
push
mov
add
test
and
push
cmps
inc
nop
mov
adc
pop
mov
pop
cmp
ss
sub
jge
mov
in
adc
xor
test
sub
hlt
outs
inc
mov
mov
jae
das
adc
mov
sub
xchg
cmp
dec
ins
add
or
push
fimul
aad
clc
nop
cmp
shl
clc
inc
cmps
sbb
lods
sbb
push
popf
push
(bad)
in
or
rol
fldcw
popf
daa
loopne
jg
pop
mov
xor
popf
dec
je
jmp
test
mov
push
sbb
sbb
mov
inc
rcr
daa
pop
add
(bad)
fidiv
(bad)
lahf
mov
shl
clc
and
imul
pop
mov
gs
cmp
(bad)
stc
pop
out
lea
jno
dec
xchg
add
push
jno
or
mov
sub
xor
and
dec
push
scas
and
sub
or
cmp
(bad)
pop
or
push
(bad)
and
ins
movs
sbb
and
icebp
enter
ds
mov
cmp
pop
sub
sahf
call
add
mov
imul
retf
addr16
push
xchg
sub
mov
(bad)
sbb
dec
jno
shl
xor
fwait
cmp
mov
loope
out
shr
add
bound
pop
shl
or
int
and
jp
clc
mov
lods
pop
xchg
xchg
sbb
das
xchg
mov
lea
cwde
mov
fwait
pop
cs
in
jmp
retf
(bad)
mov
loop
cmp
mov
test
fsubr
xchg
jo
mov
sub
push
adc
mov
jns
mov
add
mov
sub
lods
jmp
call
aaa
scas
push
mov
fdiv
js
mov
mov
aas
fdivr
xchg
cmps
je
inc
jl
mov
outs
xor
outs
and
push
or
cmp
mov
call
das
inc
in
fdivrp
pop
nop
inc
xchg
add
and
adc
rol
movs
test
fist
cmp
ret
(bad)
push
or
out
pop
jnp
subps
pop
jnp
sbb
int3
aas
dec
in
mov
push
xlat
cs
and
pop
pop
add
in
push
add
dec
sbb
test
out
pusha
sahf
push
loopne
inc
push
xor
cdq
jb
sbb
jb
and
clc
shl
imul
push
lahf
dec
xlat
rol
repnz
jo
sub
rcr
mov
test
pop
xor
int3
nop
int
mov
sub
mov
xor
popa
retf
(bad)
push
fistp
push
or
pop
mov
not
add
or
or
sti
jo
push
push
ja
pop
push
cmp
inc
ja
mov
add
adc
enter
nop
icebp
add
imul
test
cld
bt
in
pop
in
inc
mov
xchg
sub
and
xchg
mov
mov
pop
jb
fdivr
fdivr
cmp
mov
dec
iret
pusha
adc
js
stos
pusha
xlat
jge
in
lods
mov
movs
lods
pusha
movs
jae
or
mov
daa
lahf
icebp
pmulhuw
cmps
dec
push
aaa
(bad)
cld
sbb
int3
jne
and
dec
js
sbb
(bad)
sbb
adc
or
out
pop
(bad)
iretw
mov
pop
and
xchg
aaa
push
out
clc
cmp
std
pusha
dec
and
push
ins
out
inc
movs
sub
clc
or
jle
mov
clc
into
retf
push
inc
add
cmps
or
loope
aas
push
mov
push
cmp
loop
nop
imul
add
rcl
mov
jno
retf
movs
aad
fs
pop
inc
mov
cli
dec
inc
push
in
push
push
dec
dec
aad
popf
or
scas
jb
inc
add
dec
dec
lods
addr16
into
sbb
outs
aas
test
sar
nop
sub
mov
push
lock
hlt
dec
mov
dec
xchg
xchg
dec
jge
aas
cmp
xor
mov
sbb
lods
ror
mov
jl
(bad)
sbb
movs
dec
imul
(bad)
sub
aas
(bad)
mov
push
xor
adc
add
aaa
cmps
mov
lea
test
jmp
hlt
adc
ins
jmp
shl
(bad)
retf
ret
mov
mul
cmps
icebp
mov
cwde
ja
or
movs
shr
(bad)
adc
popf
sub
and
into
dec
iret
add
jg
icebp
out
jp
push
and
xchg
push
aaa
pop
pop
in
inc
dec
imul
cmp
mov
add
sbb
pop
dec
mov
out
outs
pop
push
jne
int
jle
mov
pop
in
pop
cld
xchg
test
sub
stos
xchg
daa
xchg
(bad)
or
mov
out
mov
xchg
sbb
rcl
shr
and
les
imul
jle
lds
mov
lock
mov
cmc
xor
popa
dec
mov
and
loopne
jae
cmp
sbb
xlat
lock
jo
(bad)
add
dec
lock
sbb
dec
xor
stos
scas
repnz
push
mov
jmp
push
sub
push
push
fidivr
bswap
jp
sahf
bound
xlat
mov
cmc
sbb
push
dec
jmp
in
xor
sbb
adc
mov
xchg
sub
nop
pop
mov
mov
retf
pop
popf
sti
push
xor
movs
scas
jg
mov
popf
jnp
push
cmp
(bad)
mov
xor
push
clc
push
pop
mov
push
lds
(bad)
sbb
add
inc
and
test
pop
xor
cmp
xor
sub
pop
jecxz
lods
push
xor
fadd
pop
pop
xchg
out
shr
cmps
cmp
add
lods
push
dec
pop
pop
xchg
in
inc
jne
push
call
mov
adc
sub
xchg
ret
add
dec
(bad)
add
cmps
or
daa
jl
sub
pushf
mov
mov
adc
(bad)
fidiv
sbb
mov
test
cmps
retf
sub
pop
fld
cdq
or
cmp
imul
out
call
lock
cdq
hlt
enter
pop
sbb
cmps
fsubr
add
mov
add
(bad)
jnp
int3
ins
mov
sub
test
cld
scas
js
popf
jno
adc
pop
aaa
das
dec
outs
jecxz
fwait
mov
(bad)
mov
mov
add
arpl
stc
fwait
pusha
(bad)
or
stos
adc
pop
pop
xlat
lock
lahf
lods
push
(bad)
mov
jnp
mov
or
cmc
dec
rcr
imul
lahf
pop
popa
and
mov
scas
mov
shr
and
pop
fdiv
sbb
adc
aaa
ss
(bad)
push
pop
inc
sbb
pop
or
xchg
ret
jmp
fwait
ins
aam
repz
push
mov
mov
inc
fiadd
cdq
pop
mov
jae
push
mov
repnz
ficomp
and
leave
in
cmp
inc
(bad)
push
xor
push
jbe
or
fcom
xor
mov
or
leave
push
popf
sbb
xchg
pop
add
mov
or
pop
pop
outs
shr
(bad)
retf
bound
mul
xchg
(bad)
fs
mov
or
inc
mov
repnz
aas
pop
mov
icebp
movs
pop
pop
call
xor
mov
push
lea
aam
xchg
mov
sbb
aaa
and
test
cmp
scas
jno
cmps
add
(bad)
fadd
popa
ret
pusha
in
das
pop
ror
enter
mov
call
push
add
neg
xchg
dec
xlat
dec
mov
loop
or
push
xor
adc
repnz
mov
movs
inc
push
sbb
rcl
mov
inc
push
xchg
imul
and
outs
mov
cmp
sub
xchg
adc
adc
out
xchg
cdq
ss
mov
cmc
idiv
adc
leave
pushf
mov
pushf
mov
stos
jmp
pop
mov
ret
cmp
dec
xlat
jp
adc
pop
and
fld
lods
inc
stos
fimul
rcl
cmp
ror
(bad)
(bad)
cmp
fldcw
dec
(bad)
(bad)
and
jnp
mov
sbb
lods
fadd
dec
and
mov
hlt
jmp
or
mov
neg
pop
in
adc
aam
adc
outs
mov
adc
xor
nop
mov
push
mov
mov
out
xor
iret
imul
xchg
daa
fs
mov
cmp
jecxz
call
xchg
dec
jo
mov
add
cli
xor
mov
xchg
ror
es
shl
lea
ins
sub
inc
mov
retf
push
pop
out
ret
fsubp
cmp
xchg
mov
xor
pop
mov
ins
int
imul
setne
or
jo
sar
std
inc
dec
daa
dec
and
pop
xchg
cmp
std
add
xor
pop
imul
sub
mov
sti
retf
outs
int
or
inc
call
inc
int
inc
(bad)
jno
sub
push
fist
(bad)
rol
and
add
sbb
mov
sti
enter
sub
(bad)
mov
test
jle
out
sbb
jns
sar
xchg
xchg
dec
sbb
frstpm(287
out
sbb
sbb
pop
cmps
outs
sub
pop
in
fisub
dec
pop
xchg
mov
retf
ins
lock
xor
cmp
inc
call
mov
icebp
and
arpl
mov
pop
ja
es
ins
jns
sbb
test
repnz
or
add
xlat
mov
jne
clc
data16
bound
add
retfw
clts
and
test
es
push
jns
jno
sbb
xor
sbb
xor
or
sbb
xor
lea
hlt
sub
movs
iret
shr
repz
pop
ins
clc
mov
jmp
fstp
mov
rcl
xchg
jno
xor
pop
add
xor
nop
xor
xor
movs
or
stos
sbb
dec
mov
pop
rcl
pop
xor
pop
popf
xlat
mov
cmp
xor
mov
int
push
xchg
adc
idiv
out
jno
icebp
(bad)
leave
mov
sar
repz
(bad)
jge
dec
hlt
ffree
in
test
sbb
jle
sub
(bad)
jmp
add
mov
in
cmp
jmp
adc
cmp
or
retf
sbb
out
inc
pushf
scas
xchg
jl
sub
mov
xchg
push
data16
pop
lods
sbb
(bad)
ins
test
push
inc
sub
jp
add
shl
cs
cmps
jo
mov
jnp
cmps
daa
jbe
neg
addr16
dec
outs
pop
call
cmp
add
movs
sbb
jmp
push
push
mov
xchg
(bad)
xor
popf
call
cmc
ss
in
inc
jae
cmp
dec
adc
in
ins
dec
fs
jo
test
mov
mov
and
test
popf
or
and
push
or
xchg
pop
and
sbb
les
and
inc
nop
pusha
add
ficomp
xor
jle
jg
adc
loopne
(bad)
adc
stos
adc
inc
scas
pop
jns
mov
dec
jmp
dec
cmps
push
outs
daa
icebp
ror
and
mov
stc
lods
mov
lock
add
fs
jmp
clc
and
pop
out
std
dec
in
ins
imul
cmc
pop
sti
push
mov
push
daa
enter
and
or
es
call
jmp
cmps
or
jno
jae
out
sub
sub
mov
mov
mov
inc
jp
test
mov
stos
pop
fs
sbb
pushf
test
cmp
jne
xchg
jge
ins
push
fnstsw
mov
das
jp
mov
test
jmp
sub
push
pop
outs
and
mov
test
mov
push
push
daa
ins
pmuludq
jnp
xor
repz
int
sti
mov
rol
test
call
cmc
or
pop
jno
gs
les
es
stos
mov
sub
mov
mov
rcl
sbb
fnsave
fstp
arpl
bound
inc
inc
jg
push
push
inc
or
jecxz
js
sub
arpl
adc
fld
cwde
sbb
ins
fsubr
pop
mov
call
daa
sbb
xchg
pop
xchg
mov
sti
loope
mov
pop
fst
push
ret
add
xchg
jmp
xchg
push
dec
push
mov
pop
dec
scas
imul
jo
outs
out
push
mov
das
rcl
out
cdq
arpl
aas
mov
out
aam
xchg
js
xchg
mov
adc
test
or
mov
stos
dec
scas
fist
mov
retf
(bad)
xchg
jmp
xor
xchg
aam
call
retw
inc
mov
mov
cmp
xchg
nop
mov
into
push
fidivr
outs
cwde
stos
or
and
mov
dec
xchg
ret
pop
pop
add
sbb
(bad)
inc
(bad)
xchg
or
dec
test
retf
dec
mov
or
(bad)
cmp
call
add
daa
and
dec
addr16
rcl
fsub
fdivr
mov
push
test
out
pop
das
xchg
xchg
fs
js
inc
ja
fwait
jmp
mov
test
jns
repnz
xchg
cli
jmp
inc
mov
enter
test
shr
aas
in
push
dec
call
or
hlt
les
mov
push
js
or
in
jmp
pop
mov
(bad)
iret
sti
inc
mov
das
xlat
out
push
push
mov
cmp
mov
push
enter
into
xchg
push
lods
add
add
push
dec
sub
pop
nop
sub
or
sub
jg
cli
cmp
loop
add
ins
and
xchg
pushf
stos
jae
sub
mov
in
aam
jle
call
and
mov
jbe
sbb
add
or
sbb
sbb
and
out
pop
loope
hlt
out
xchg
clc
movs
mov
cmp
daa
sbb
cld
cmps
(bad)
fcomp
movs
sti
add
mov
inc
shr
fs
ja
pop
dec
sahf
sbb
out
cmp
add
nop
fbld
pop
mul
inc
ret
aas
sub
imul
outs
mov
xlat
mov
xchg
les
xchg
jp
aam
into
add
fadd
xchg
movs
daa
pop
or
adc
xor
add
pop
sub
add
xchg
fwait
push
fwait
xor
lods
adc
arpl
test
jl
pop
and
inc
dec
sbb
ins
ja
test
lds
lock
xor
rcl
out
cmps
inc
ror
mov
out
or
dec
scas
cmps
jne
push
loop
lahf
test
mov
rcr
xchg
repz
dec
xchg
sti
scas
jle
cmp
add
inc
stos
jo
cli
cmp
(bad)
xor
stc
sub
(bad)
aad
xor
mov
(bad)
and
pop
mov
pop
cmc
outs
xor
call
fldcw
cld
add
gs
mov
into
mov
(bad)
fsubr
rcr
dec
ret
lea
out
push
mov
dec
push
jae
cmps
add
fs
imul
jle
add
in
push
cli
mov
pusha
inc
xor
cs
mov
int
mov
inc
push
xchg
push
out
mov
pop
push
inc
sub
and
ss
gs
jbe
and
hlt
les
dec
cwde
inc
fimul
pop
stos
inc
cmp
idiv
mov
test
jo
dec
xchg
daa
or
or
mov
(bad)
fcom
fnstcw
xor
dec
or
fidivr
inc
xlat
inc
jne
dec
jae
xchg
lea
shl
cld
push
jb
fs
retf
icebp
xor
inc
jbe
sub
ror
xor
lds
push
mov
xchg
sbb
sub
xchg
xor
outs
dec
ins
push
jl
lock
bswap
add
pop
aad
pop
jmp
mov
xchg
pop
ret
icebp
sub
sub
jl
inc
mov
sub
mov
pop
fidivr
lods
inc
inc
js
jecxz
je
sub
jg
stc
shl
adc
mov
push
xor
cmp
adc
(bad)
pop
(bad)
pusha
(bad)
adc
ror
hlt
sub
inc
jbe
jns
jg
shl
test
push
push
push
mov
daa
test
dec
imul
jno
pop
sar
dec
pop
adc
repnz
jnp
xor
arpl
xchg
pop
dec
xchg
sahf
push
mov
mov
cli
mov
mov
add
daa
jns
les
push
fld
add
push
mov
ds
dec
mov
fisttp
shr
or
sbb
fnstsw
sub
aas
add
into
sahf
inc
sub
dec
push
ss
(bad)
sar
mov
shl
ret
xor
in
fist
leave
push
nop
and
dec
push
add
inc
adc
cmc
rcr
sub
das
jecxz
xor
out
pop
ss
or
ret
cmp
jl
lods
aas
(bad)
pop
pop
pop
faddp
add
pop
int
fwait
imul
mov
mov
adc
test
adc
push
ret
push
xor
repnz
dec
xor
out
sbb
or
inc
jo
cli
and
push
nop
lods
cmp
cmp
(bad)
and
std
call
adc
xchg
jecxz
imul
clc
sbb
std
adc
scas
xlat
xchg
xchg
or
or
push
jae
sbb
loope
pop
cmps
dec
sti
(bad)
adc
push
mov
call
(bad)
jl
xor
mov
mov
dec
retf
pop
nop
fidivr
mov
mov
mov
jae
bnd
xor
jb
xchg
mov
js
das
mov
bound
cli
jne
movs
rol
fwait
pop
hlt
lock
jp
cdq
mov
pop
add
call
pop
ins
lds
fstp
push
enter
pop
fild
push
loop
pop
push
ret
mov
not
xlat
pop
fstp
cmc
in
mov
loop
aad
or
xchg
sub
dec
(bad)
sub
ret
imul
pop
add
lock
cdq
out
loopne
sahf
push
push
test
push
cmc
div
sbb
ret
mov
loope
pushf
jne
xor
(bad)
pop
or
out
lock
arpl
mov
shl
jg
push
push
stc
out
je
cmp
mov
push
pop
mov
call
mov
ds
cmc
aaa
sbb
enter
sbb
je
mov
or
xchg
fadd
or
cmp
mov
inc
dec
or
dec
xor
mov
shl
xor
pop
push
lea
push
pop
adc
sub
jae
jns
sub
or
add
fistp
std
pushf
dec
cmp
pop
out
and
(bad)
mov
adc
jl
sub
shr
into
ins
mov
ds
gs
xchg
adc
mov
ss
add
xchg
psubusw
(bad)
cmc
mov
fwait
mov
arpl
fnsave
in
repnz
add
sub
neg
cld
sbb
pop
mov
push
xchg
das
in
push
mov
mov
push
mov
dec
rcr
add
mov
sbb
cwde
cli
and
sar
bnd
(bad)
ds
xlat
sub
inc
mov
jb
sub
nop
loopne
stos
outs
icebp
je
add
inc
dec
dec
xor
or
xor
sub
imul
add
push
sti
or
lahf
pushf
cmp
mov
cld
mov
test
jbe
pop
stos
xchg
fwait
xor
jg
arpl
xchg
into
fwait
sbb
test
in
sbb
addr16
and
jmp
es
(bad)
pusha
aas
sbb
dec
fild
bound
push
int3
(bad)
mov
adc
inc
mov
adc
pop
(bad)
mov
or
mov
jp
dec
pop
mov
xor
loope
sub
xor
leave
push
(bad)
sbb
out
push
sbb
retf
enter
or
cld
push
jnp
adc
mov
fbstp
retf
jae
call
jg
and
xor
icebp
out
cmp
imul
(bad)
mov
mov
das
lods
jb
cvtpi2ps
in
sub
bound
fimul
gs
outs
shl
xlat
arpl
push
cmp
add
xchg
clc
hlt
cs
or
push
cld
mov
adc
push
jp
sub
mov
push
and
mov
std
not
inc
push
fistp
rcr
adc
out
out
mov
cli
mov
mov
pop
iret
cwde
xchg
push
pop
enter
pop
sbb
dec
imul
inc
nop
xor
les
lea
cmp
out
aad
js
pop
inc
mov
sub
dec
push
es
in
hlt
loop
xor
pop
lea
test
jo
push
jbe
repz
mov
ins
pop
cmps
and
or
fnstsw
mov
int3
jbe
add
int
ins
cmps
das
sub
jp
mov
arpl
mov
adc
sub
jl
adc
dec
or
sub
pop
fidiv
(bad)
xchg
mov
sub
ins
fwait
sahf
and
inc
lods
mov
mov
mov
aaa
hlt
movs
or
jno
mov
into
cs
pop
and
mov
test
inc
arpl
hlt
cdq
push
call
mov
daa
fcomp
rcr
dec
ds
cli
adc
cld
cwde
leave
mov
das
fs
cmc
ins
fdiv
mov
call
sub
ins
dec
pop
cmps
mov
and
mov
mov
test
(bad)
push
call
std
cs
xchg
adc
cmp
les
xor
adc
pop
ficomp
icebp
mov
push
sti
adc
mov
(bad)
mov
add
loope
out
ins
loope
or
leave
ror
mov
sbb
jnp
out
lock
pop
ffree
or
ret
sub
pop
add
dec
retf
mov
mov
pop
cmp
das
add
mov
and
xchg
mov
test
pop
fisub
lods
cmc
icebp
ins
sub
dec
out
jmp
out
inc
pop
outs
cdq
pop
sbb
inc
stos
xchg
repnz
xor
push
adc
jle
in
add
nop
or
out
cmp
enter
cmc
in
loope
pop
mov
mov
fnstsw
stos
test
int3
pop
or
cmp
xor
or
jnp
idiv
clc
pop
inc
or
xor
dec
sbb
test
add
out
out
in
pop
movs
mov
dec
xchg
enter
cmpps
mov
and
lock
(bad)
pop
rol
inc
fsubrp
inc
es
mov
lahf
outs
adc
pop
fnstcw
in
outs
mov
adc
js
call
or
inc
stos
cs
fisubr
mov
or
mov
aas
jmp
jne
jno
dec
mov
adc
repz
fisttp
pop
xchg
sub
pop
scas
into
xchg
in
movs
cdq
cwde
loop
inc
out
addr16
push
jns
dec
push
into
or
sub
(bad)
pusha
jbe
push
lds
mov
dec
out
shr
rcl
pushf
loopne
pop
push
test
cmp
or
dec
inc
or
jns
adc
xchg
pusha
cmps
stos
cmps
push
sbb
dec
cdq
mov
mov
pop
cwde
stc
and
xchg
xchg
ret
push
xchg
bound
jns
sbb
int
stos
xchg
sbb
pushf
push
push
pusha
jl
push
retf
in
adc
and
add
aam
stc
push
mov
cmps
sub
cmp
stos
xchg
lea
and
pop
(bad)
aad
push
dec
add
xchg
inc
or
ins
enter
pop
std
jecxz
outs
test
sub
(bad)
mov
inc
call
cmp
mov
mov
inc
pop
add
mov
movs
stc
xor
push
jmp
pushf
jecxz
in
outs
push
mov
pop
aam
cs
bound
pop
dec
(bad)
mov
mov
inc
fstp
jp
gs
bound
(bad)
sbb
loope
ret
int
int
xchg
xchg
icebp
inc
mov
dec
pop
jne
jg
sbb
ins
or
imul
dec
mov
mov
sub
sub
(bad)
scas
clc
fstp
(bad)
add
out
ins
sbb
sub
out
mov
repz
call
movs
bound
push
push
lea
sub
fnstsw
pop
mov
je
aaa
repz
mov
xor
in
push
push
sbb
mov
push
xor
mov
adc
call
cdq
xchg
(bad)
rcr
add
lea
cmp
stos
sbb
mov
retf
mov
ins
cmp
jns
mov
into
sbb
push
cli
and
jo
sub
je
push
add
addr16
push
lods
leave
out
addr16
push
addr16
ja
(bad)
cwde
jmp
icebp
mov
ror
shl
sub
cmc
and
pop
push
or
cmp
xor
jnp
mov
xor
(bad)
retf
mov
mov
leave
shl
ret
dec
mov
hlt
call
into
in
fmulp
retf
ss
pusha
fsubrp
inc
or
push
and
add
pop
dec
cmp
push
outs
jnp
mov
fild
cmc
inc
lods
mov
cmp
data16
sub
xor
jns
ror
cmp
dec
lods
pop
xor
sti
jg
xchg
or
shr
push
lea
mov
sub
lea
dec
ret
push
jnp
add
int3
adc
push
mov
jo
imul
dec
mov
popf
xchg
push
and
ss
inc
xor
loop
add
cmp
adc
es
sub
adc
add
pop
xchg
xchg
mov
shl
nop
mov
sbb
mov
adc
imul
movs
mov
mov
pop
mov
jecxz
push
sub
xor
sub
push
in
out
cmps
xchg
lds
and
dec
ds
enter
imul
cmp
imul
cmp
fild
mov
mov
fadd
dec
pop
hlt
pop
int
(bad)
loope
or
inc
pop
loope
cli
mov
das
mov
sbb
sub
jno
jmp
mov
cmp
lods
shl
or
call
popf
int
add
mov
add
lea
les
xchg
adc
rcr
je
repz
xchg
iret
call
nop
cmp
rcl
xchg
pop
jno
mov
out
fcmovnb
outs
inc
jbe
or
arpl
in
out
add
dec
adc
repz
fdivp
daa
inc
cmc
pop
mov
and
add
push
aam
inc
sbb
jl
xor
retf
dec
scas
clc
push
xor
cwde
call
(bad)
push
clc
adc
and
jo
xor
cs
ror
das
cs
ins
cwde
push
jmp
sar
inc
cmp
pop
les
jg
fidiv
sar
mov
xor
jmp
ins
jbe
push
fwait
cmps
icebp
call
int
loope
icebp
cmp
ds
aas
repnz
adc
dec
push
add
lods
sub
add
fisub
aam
shl
dec
in
or
cmps
xlat
push
mov
push
nop
or
cmp
jge
sub
pop
mov
jecxz
xor
mov
call
dec
mov
or
into
dec
mov
daa
jl
enter
pop
fsub
loope
jo
ror
stos
mov
pop
mov
fistp
je
das
add
int
adc
pop
fstp
in
aad
imul
push
sub
jbe
add
cmp
sub
in
push
outs
retf
pop
in
movs
jg
shr
adc
int
sahf
(bad)
int3
in
cmp
mov
or
and
rol
xor
(bad)
in
jae
ffree
(bad)
mov
cmp
int3
push
sub
in
xor
jge
imul
mov
mov
xor
mov
fwait
push
mov
sbb
or
stos
js
and
cs
ins
stc
(bad)
pushf
cmp
inc
sbb
mov
jle
xor
add
scas
add
mov
sub
sbb
ds
leave
shr
and
xlat
(bad)
mov
dec
dec
inc
pop
sub
mov
jo
in
mov
les
(bad)
jecxz
pop
les
jae
sub
mov
push
sub
or
bound
xchg
outs
pushf
push
lds
aas
out
sbb
sub
das
nop
sub
test
pusha
adc
mov
pop
pop
lds
adc
sub
(bad)
repz
xchg
fdiv
push
out
and
dec
add
rcr
mov
in
sub
dec
repz
push
xor
jo
mov
leave
js
pop
sbb
jb
pop
ds
nop
call
and
dec
lahf
scas
or
adc
in
out
sbb
inc
add
jae
push
ss
adc
aam
call
ja
fcmove
imul
(bad)
xor
adc
inc
pop
adc
shl
jmp
cli
cmp
or
dec
fucom
sub
in
pop
jo
(bad)
xor
mov
xchg
add
test
icebp
xor
test
fdiv
movs
sub
dec
int
mov
jmp
adc
(bad)
mov
jb
test
imul
inc
cdq
call
jg
jl
mov
xor
or
xlat
sbb
dec
test
mov
ja
sub
mov
les
inc
(bad)
bound
xor
fidivr
xchg
push
dec
mov
outs
xchg
push
into
ret
jae
in
lahf
dec
lds
cmp
adc
test
dec
ret
inc
fucomip
test
mov
ds
pop
sub
shl
icebp
(bad)
lods
mov
sbb
call
test
jnp
cmps
jmp
xlat
cli
ins
mov
into
icebp
fstp
mov
dec
dec
or
(bad)
arpl
add
pslld
sbb
out
xor
push
in
push
test
and
aad
scas
cli
adc
in
test
clc
mov
xlat
cld
xchg
mul
sbb
or
addr16
arpl
daa
pop
pop
pop
(bad)
mov
sub
xchg
sysret
fcomp
stos
xchg
pop
std
or
push
ror
add
out
mov
sbb
jbe
add
std
inc
mov
pop
enter
mul
arpl
dec
push
mov
retf
out
and
xchg
add
pop
outs
mov
adc
mov
sar
hlt
fidivr
arpl
aad
vcomisd
imul
les
leave
(bad)
fucomi
cmp
mov
outs
out
nop
xor
arpl
ds
mov
fnstsw
mov
mov
(bad)
nop
out
push
xor
stos
xchg
mul
imul
jge
add
add
xor
pop
outs
out
dec
inc
xchg
loope
mov
mov
mov
icebp
in
lea
(bad)
dec
mov
ficom
(bad)
and
bnd
add
mov
out
pusha
mov
test
fdiv
ins
cmp
pusha
mov
jg
dec
jge
repnz
dec
imul
out
popa
cmps
popa
fs
jle
push
cmp
scas
pop
pop
into
outs
jbe
pop
mov
out
int3
dec
int
sbb
mov
xor
xchg
stc
xchg
fst
mov
mov
sbb
addr16
xor
stos
out
popf
or
add
sbb
cmps
or
pushf
push
xor
js
(bad)
pop
popa
lods
jg
and
mov
std
ins
or
jae
xchg
call
out
ror
mov
aas
or
add
or
in
dec
dec
mov
popf
xchg
jle
fdiv
test
xchg
or
repnz
dec
cld
test
arpl
pop
jmp
(bad)
iret
mov
aam
fucomi
mov
enter
or
inc
retf
pop
les
or
dec
fdiv
xchg
mov
cmp
dec
mov
jp
push
xchg
imul
fisttp
in
sub
shl
movs
aas
test
sub
cdq
retf
pop
mov
and
(bad)
add
arpl
aaa
push
dec
call
popa
frstor
ficom
inc
(bad)
cmc
dec
cs
ins
adc
jo
(bad)
scas
pop
mov
dec
jns
add
ret
sub
out
pop
sti
les
push
dec
cmc
push
push
add
xor
adc
imul
sahf
pop
out
or
loopne
outs
add
mov
test
sbb
pop
rol
jmp
xor
mov
adc
shr
push
aam
retf
dec
sbb
xor
mov
test
retf
cmp
sub
dec
loop
cs
mov
jbe
in
inc
aaa
cmp
ja
or
cmp
lods
pop
dec
scas
aaa
inc
test
or
mov
les
test
mov
mov
adc
jecxz
xchg
js
push
xchg
imul
(bad)
stos
cmp
pop
cwde
mov
xor
push
xor
bound
iret
jno
cmp
or
mov
jl
dec
test
(bad)
fdivr
stc
std
xor
repz
iret
and
xchg
sbb
pushf
push
pop
ret
mov
scas
es
push
xlat
mov
xchg
daa
imul
and
inc
or
lea
popa
dec
ss
icebp
iret
jae
fstp
or
std
xor
loopne
jle
dec
mov
out
les
js
int3
push
sbb
push
add
mov
mov
retf
mov
or
push
ror
neg
push
pop
cmp
sub
aaa
movs
xchg
push
sub
or
or
or
or
dec
out
scas
test
cmp
jno
sub
and
and
mov
rcr
inc
or
popa
mov
adc
popa
outs
pushf
out
je
mov
add
push
push
dec
sahf
int3
mov
sbb
pop
xchg
out
jns
ja
fistp
fwait
arpl
inc
mov
dec
inc
fdiv
push
xchg
inc
fs
mov
lods
fwait
mov
and
pinsrw
lea
xor
xor
rcr
cmps
jmp
sahf
retf
scas
data16
bnd
fdivr
jge
les
retf
bound
test
push
or
cdq
cmps
les
xchg
int
or
push
mov
dec
xor
push
push
dec
jb
call
pushf
push
xor
sbb
dec
mov
push
jge
(bad)
jp
pop
sub
cli
mov
cmps
call
shl
cli
adc
add
in
fstp
je
mov
neg
pop
stos
popf
iret
ins
aad
or
add
mul
adc
adc
cli
add
clc
retf
mov
out
enter
fnstsw
xor
jmp
loopne
push
or
sbb
push
pop
in
fidiv
ins
and
adc
je
das
jbe
sub
jne
xchg
jp
mov
pop
jne
js
push
jae
les
scas
outs
out
pusha
out
imul
jecxz
add
cmc
lahf
ds
(bad)
pop
scas
push
jnp
in
je
jns
pop
scas
(bad)
push
jmp
fcom
bound
xor
into
cmp
int
mov
mov
rol
xlat
(bad)
outs
rcl
push
rcl
add
mov
push
(bad)
jle
scas
data16
pusha
add
push
xchg
nop
call
mov
out
xchg
and
iret
cld
daa
std
rol
aam
cmp
jbe
xchg
and
mov
cli
movs
mov
inc
pop
sub
and
loopne
push
fs
leave
rcl
sub
jnp
sub
jne
jno
shl
mov
mov
inc
mov
mov
lahf
pop
fwait
add
mov
dec
and
mov
mov
dec
(bad)
push
fs
cmps
nop
test
pop
sub
dec
lea
and
inc
(bad)
inc
push
out
sub
mov
mov
cmp
scas
test
lods
fsub
jnp
retf
or
hlt
in
out
inc
push
lods
mov
push
xchg
enter
mov
jge
xor
add
out
nop
sbb
test
cmc
inc
xchg
pop
inc
sar
pushf
call
rol
stc
adc
jle
call
cmp
mov
leave
dec
add
call
jl
pop
cwde
rcl
(bad)
push
lock
frstor
pop
test
dec
xor
(bad)
jmp
iret
call
mov
ins
xchg
jecxz
test
sbb
lds
in
movs
dec
into
shl
adc
mov
stos
lahf
cdq
jge
sub
xor
cmps
push
adc
push
aas
je
mov
dec
lds
lods
call
enter
ja
xlat
dec
cmp
imul
movs
lds
jmp
stos
cmp
lds
jbe
sbb
inc
lods
loope
mov
jl
push
lea
fistp
and
adc
and
scas
rol
adc
push
sti
test
ror
or
xchg
jb
fiadd
iret
cwde
xchg
push
or
adc
or
xchg
out
jae
jge
aas
or
jmp
fild
adc
loopne
imul
sub
sub
pusha
das
cmp
mov
(bad)
cmp
imul
cs
and
fwait
loopne
out
mov
int
stos
test
loop
call
cli
test
mov
mov
jg
(bad)
push
cmp
xchg
cdq
shl
xchg
add
mov
ret
fnstsw
mov
loop
int3
iret
fcmovne
scas
leave
ins
dec
mov
pop
std
xchg
out
xchg
lods
loope
push
jb
into
and
in
mov
push
bound
add
dec
mov
cmp
dec
mov
pop
aas
stc
push
fs
fdiv
or
add
jmp
fs
jle
jg
leave
sar
int
rcl
jge
xor
xor
mov
cwde
movs
ret
aam
sbb
fwait
leave
and
movs
stos
xchg
push
add
add
fisttp
aas
sub
mov
shr
sub
pop
enter
dec
in
ret
xchg
or
inc
loope
inc
push
das
(bad)
mov
jae
es
ret
push
and
sti
push
xor
loop
add
loopne
sbb
sbb
dec
xor
test
hlt
xor
scas
pop
pop
xchg
(bad)
pop
pop
iret
sub
cmp
inc
nop
or
pop
ret
xchg
jae
sar
aad
jb
cli
pop
pusha
arpl
icebp
push
cmc
inc
fstp
xor
mov
cwde
popa
daa
xlat
aas
push
cmc
sub
inc
sbb
fs
sub
pop
bound
dec
sub
pop
ret
and
leave
sub
and
iret
and
pop
sbb
fbstp
inc
adc
stos
xchg
rcr
jmp
push
pusha
inc
cli
hlt
or
mov
lahf
call
mov
mov
ins
mov
sbb
out
ret
mov
xor
daa
(bad)
push
fwait
dec
jae
inc
jb
into
clc
pop
sub
jno
stos
jmp
cmp
out
xchg
xchg
pop
scas
pop
jmp
(bad)
dec
cmp
aaa
xchg
jmp
mov
imul
imul
xor
retf
test
push
scas
(bad)
aam
xchg
fwait
push
ret
loopne
inc
dec
mov
(bad)
cdq
jns
ret
cmps
cli
dec
(bad)
into
lods
push
jge
rol
call
sbb
ror
or
cmp
add
outs
sub
xchg
cmps
mov
mul
fadd
cmp
adc
mov
lea
jge
nop
sub
test
add
data16
movs
xchg
or
inc
imul
popa
xor
adc
inc
pop
repnz
sar
scas
dec
bndldx
dec
arpl
lea
loope
test
xchg
and
or
push
sub
outs
les
ret
stos
(bad)
jns
xchg
mov
fst
push
sbb
inc
bt
cli
xchg
test
sbb
pop
adc
mov
sbb
mov
cmp
test
scas
ror
or
xchg
cli
pop
inc
mov
mov
cmp
xchg
pushf
or
es
js
push
mov
jmp
mov
das
jecxz
xor
sbb
lods
and
pushf
les
and
pop
cdq
shl
cs
mov
stos
fsubr
mov
cmp
lahf
inc
(bad)
gs
mov
dec
mov
stc
repnz
arpl
pop
pushf
sahf
jno
and
stos
jns
mov
xchg
mov
jbe
jg
inc
out
jmp
outs
push
xor
jns
jns
adc
push
sub
jnp
xor
(bad)
and
imul
mov
pusha
fwait
(bad)
inc
push
ins
add
mov
jmp
imul
sbb
jmp
inc
mov
cwde
mov
and
gs
xchg
loopne
jle
mov
scas
out
mov
popf
push
mov
push
fcom
xlat
rcl
sahf
dec
enter
rcl
or
inc
scas
sbb
and
stos
mov
data16
retf
outs
jecxz
das
pop
cmc
add
inc
push
cmp
adc
jmp
cmc
pop
add
div
jb
jecxz
dec
and
movs
(bad)
addr16
mov
jle
sbb
call
adc
call
cli
mov
xchg
aam
pop
jp
sbb
xchg
mov
sub
cmp
test
in
inc
mov
or
ins
xchg
jno
aad
test
jo
pop
adc
js
sub
and
sahf
pop
jecxz
inc
stos
xor
int
push
dec
test
cmp
or
inc
sub
jecxz
fidivr
push
sub
cmps
mul
cmp
dec
jne
loope
repz
lock
mov
adc
test
or
mov
es
pop
sub
sahf
cld
sub
mov
cmc
dec
pop
mov
gs
mov
shl
adc
shr
xor
enter
int3
mov
cmp
in
and
jecxz
sbb
ret
add
jno
inc
sub
pop
in
push
bound
in
add
or
push
push
jnp
call
cmp
push
inc
out
sub
mov
in
xor
mov
ror
sub
retf
fist
sub
pop
mov
fmul
add
sub
js
in
and
jb
clc
inc
cld
lock
push
mov
and
retf
and
stos
push
pop
mov
xchg
push
sahf
shl
dec
in
mov
pop
sub
jnp
cmp
and
arpl
(bad)
push
or
push
jmp
stc
xor
dec
mov
xchg
mov
retf
xchg
ja
push
pop
mov
cmp
out
mov
or
push
add
aam
push
mov
cld
xchg
cmp
adc
in
mov
jge
jb
aad
ret
sub
jp
scas
mov
pop
adc
(bad)
pusha
pusha
test
pop
stos
lods
xchg
mov
test
out
push
mov
movs
int3
test
mov
cmc
fsub
outs
jo
push
loopne
loop
jl
les
out
and
xchg
test
out
mov
add
mov
push
dec
jle
enter
(bad)
div
loop
ins
adc
xor
lds
cmp
cmp
cwde
sub
lds
mov
sub
xchg
pop
add
xchg
jno
clc
sbb
xor
and
inc
or
mov
sub
mov
(bad)
or
loopne
jmp
jae
(bad)
inc
xor
fisttp
jecxz
adc
cpuid
out
addr16
pop
and
mov
xor
add
sbb
out
add
xchg
sbb
lods
mov
and
sub
mov
fdivrp
ficomp
jecxz
shl
push
sub
aad
ret
or
arpl
cmp
fwait
stc
outs
pop
je
dec
mov
mov
add
sti
adc
mov
or
(bad)
push
mov
mov
int
(bad)
loope
test
ret
cmps
jmp
xchg
cmc
cli
and
jg
aad
mov
sbb
in
js
pop
jmp
adc
sub
mov
cmp
adc
jno
adc
and
sub
icebp
ins
adc
mov
jecxz
xchg
call
and
push
or
into
xor
sub
inc
push
push
es
loope
rcl
cmp
jmp
inc
pxor
sub
jle
les
repz
fwait
xchg
dec
daa
in
jne
mul
jp
dec
push
push
mov
mov
push
jae
aaa
adc
mov
ror
lods
imul
jno
xchg
ins
fsub
test
and
ret
pop
ja
(bad)
pop
sahf
out
jbe
lock
xor
mov
and
sti
or
jnp
arpl
in
and
retf
mov
into
mov
pop
dec
push
and
(bad)
shl
out
test
imul
stc
(bad)
scas
or
mov
jecxz
fwait
xlat
inc
sar
xchg
aad
jnp
arpl
test
pop
sar
xor
sti
maskmovq
mul
xor
int
aam
pop
jns
jmp
in
or
sbb
sbb
les
nop
or
mov
pop
cdq
pop
in
adc
arpl
cdq
sub
jnp
test
jecxz
ror
add
cld
dec
pusha
loope
push
add
xor
rcl
sbb
es
jae
push
fwait
imul
lods
push
mov
lods
push
popa
ds
mov
ret
out
push
fiadd
test
pand
mov
test
mov
xchg
lahf
iret
popf
and
sahf
aas
push
rol
scas
and
cmc
stc
(bad)
hlt
daa
ror
jmp
push
add
mov
imul
push
inc
add
xchg
dec
shld
push
nop
or
sbb
xor
pushf
into
shl
inc
ret
mov
add
push
cdq
push
test
jecxz
inc
inc
into
mov
push
xor
add
mov
or
mov
mov
in
mul
in
and
or
call
jae
mov
rcr
or
push
ins
pop
or
mov
cld
(bad)
rcl
push
inc
dec
fnstenv
pop
mov
pop
push
xchg
jle
fnstcw
dec
test
mov
push
add
aaa
xchg
scas
stos
lea
or
xchg
inc
cmp
dec
push
or
cs
test
sbb
(bad)
and
cmp
jns
pop
mov
mov
ins
ret
test
jg
ret
cmp
ds
repnz
or
mul
fidiv
mov
sbb
xor
test
mov
jns
xchg
xchg
mov
das
mov
jmp
fdiv
mov
repnz
repnz
adc
fwait
test
rol
imul
sahf
jmp
les
jmp
or
cmp
loopne
call
cmp
leave
mov
add
test
loopne
aaa
push
ds
pop
fnstcw
popf
out
xchg
sbb
mov
pop
xor
fwait
jmp
cmp
mov
cmp
fs
inc
mov
or
icebp
or
fistp
das
xlat
dec
pop
ds
mov
cmp
mov
enter
push
std
je
push
xor
cmp
std
push
xchg
sti
jp
cli
fs
and
neg
adc
mov
(bad)
repz
ins
mov
add
test
mov
ret
mov
iret
sub
lds
ret
sbb
xor
dec
inc
mov
sahf
rcl
sbb
dec
(bad)
xor
outs
jle
push
mov
ret
mov
int3
jmp
lea
or
inc
outs
fild
mov
in
sub
xchg
adc
and
mov
mov
xchg
add
shl
shl
inc
shr
mov
push
rcr
or
jmp
loopne
inc
sbb
int3
adc
mov
cmc
adc
and
jae
mov
sahf
hlt
and
pop
sar
ret
movs
push
jle
sti
hlt
(bad)
push
icebp
frndint
sbb
shl
adc
loopne
(bad)
mov
(bad)
sbb
jne
sub
aad
xor
cmps
pushf
popf
fs
and
clc
jecxz
data16
fistp
fs
js
sub
cmps
aad
xchg
scas
std
jo
xchg
mov
(bad)
addr16
mov
and
fld
int3
dec
jecxz
and
into
mov
int
cmp
sub
or
jge
movs
xchg
test
(bad)
sub
fst
push
pusha
jo
mov
and
stos
int3
data16
and
cmp
jno
out
push
enter
cs
and
inc
sbb
out
test
and
inc
dec
xchg
and
int3
mov
loope
sbb
(bad)
cmc
sbb
sti
lods
ins
xlat
outs
dec
inc
or
sub
test
inc
cmp
xor
xchg
push
xchg
rcl
pop
out
pop
xchg
in
pop
sub
sahf
aad
mov
pop
vhsubps
push
mov
outs
dec
aam
popa
retf
or
sub
or
push
jl
in
mov
imul
pusha
mov
cld
mov
lea
mov
mov
fs
mov
loopne
push
jb
xchg
test
in
test
push
cld
aaa
add
arpl
mov
je
jbe
bound
mov
ja
call
call
add
pop
pop
dec
push
push
cmp
push
ret
div
daa
(bad)
arpl
push
int3
loop
call
adc
jmp
icebp
jge
pushf
ss
mov
rol
jo
lea
fmul
popa
sbb
xor
test
nop
push
out
pop
dec
ror
push
pop
(bad)
sbb
push
xor
das
or
dec
hlt
sbb
out
pop
mov
adc
pop
jge
scas
retf
xchg
dec
es
sbb
adc
pop
mov
xchg
dec
xchg
mov
sbb
xchg
pop
push
fist
aam
add
fcomi
or
jmp
mov
xchg
jg
iret
lea
jecxz
sti
jg
out
jbe
jns
test
in
xor
pop
jno
jle
dec
les
mov
xchg
dec
pop
lock
inc
push
sbb
int3
push
cli
mov
pop
je
xchg
int3
mov
popf
pop
ss
mov
xor
jbe
dec
jno
retf
cmp
mov
test
das
(bad)
aad
rcr
inc
shl
fadd
jnp
xor
mov
inc
int
shl
mov
imul
imul
pop
mov
mov
dec
fcmovne
and
inc
bound
sub
inc
repnz
in
mov
inc
cdq
mov
jl
inc
lds
pop
pop
fwait
scas
inc
mov
or
adc
cs
or
adc
mov
inc
imul
adc
mov
mov
mov
(bad)
jne
jo
jb
outs
leave
scas
adc
mov
into
xchg
fild
jmp
aaa
stc
pop
dec
retf
pop
dec
lods
jp
add
bound
sbb
jecxz
jne
ins
(bad)
sbb
int3
fisttp
xchg
imul
fimul
fbld
out
imul
xor
push
lea
sar
adc
jp
ficom
and
aas
mov
jmp
int3
and
jecxz
ficomp
mov
push
inc
mov
adc
inc
push
dec
shr
setbe
push
adc
popf
retf
cmp
cmp
in
mov
push
sub
jmp
jae
rcr
cmc
fld
add
cmps
movs
or
pop
and
dec
idiv
mov
ds
pop
mul
jmp
xchg
sub
ss
mov
scas
les
sbb
test
enter
push
jecxz
adc
movs
add
pop
cmp
jb
cmp
add
and
mov
jns
xor
rcr
inc
cs
lea
clc
xchg
shr
cmp
outs
xor
out
xchg
and
add
inc
call
mov
and
arpl
cmps
retf
jp
test
dec
(bad)
fimul
repnz
pusha
cmp
out
gs
test
dec
pop
loop
ins
cmp
test
push
and
paddw
add
popa
or
cmp
out
xchg
mov
setnp
push
dec
call
sbb
mov
loop
(bad)
add
xor
dec
xchg
into
ret
lea
retf
stos
(bad)
and
xor
pop
loop
push
or
in
and
or
cdq
or
sti
pop
jg
vmovsd
sbb
pop
sbb
rdtsc
in
in
sbb
jl
scas
mov
inc
pop
call
push
addr16
xchg
(bad)
call
pop
dec
adc
lock
fimul
out
cdq
mov
fistp
dec
mul
je
or
mov
lahf
inc
gs
push
xlat
jmp
ja
mov
jne
xor
nop
jae
lods
fsubr
xchg
sub
fadd
push
test
push
(bad)
jmp
xchg
jo
int
jb
xchg
lods
fisttp
ret
iret
mov
mov
mov
pop
push
mov
dec
ret
and
cmc
jg
mov
mov
xchg
jo
or
sbb
gs
loop
cmc
xchg
(bad)
dec
mov
mov
sub
lods
jmp
into
rcr
out
adc
dec
data16
adc
push
add
jo
cmps
hlt
int
fwait
rol
and
add
xchg
add
dec
sahf
push
xor
movups
push
mov
cwde
fidiv
inc
js
std
inc
push
jmp
sbb
fisub
dec
sub
dec
or
int3
sub
lahf
adc
cmp
add
jge
fdiv
test
and
call
sub
test
imul
pop
push
jmp
inc
test
aaa
dec
xchg
sbb
jge
jnp
adc
movs
mov
inc
sahf
cmp
inc
popf
jb
ins
xor
scas
pop
push
lods
in
mov
xor
ins
mov
inc
dec
sub
xor
cmp
mov
cmp
mov
fidivr
cmps
inc
xchg
inc
sbb
clc
mov
mov
lds
rcl
push
int
jp
scas
mov
add
into
sahf
retf
sti
mov
xor
fcomp
jns
jo
scas
aam
ins
jae
push
movs
cmp
add
inc
sub
fbstp
dec
mov
ss
icebp
cmps
pop
add
pusha
mov
push
shr
inc
pop
jb
sbb
inc
sub
pop
xchg
fisub
mov
jbe
jp
push
jg
movs
scas
mov
add
mov
mov
js
and
sahf
fcom
fstp
push
retf
push
(bad)
jb
imul
push
or
fidiv
jo
test
cmp
lea
jbe
mov
jp
adc
cs
movs
shr
adc
das
mov
fild
in
push
repz
pop
mov
mov
mov
xor
add
mov
(bad)
xor
mov
fs
retf
xor
and
nop
and
mov
inc
(bad)
out
shl
jnp
test
mov
mov
jb
std
dec
and
shl
mov
sbb
and
jge
in
cmp
dec
jno
pop
sub
jno
inc
das
push
mov
cmc
mov
dec
xor
into
cmps
push
xor
xor
xor
add
jge
mov
push
aaa
and
fldenv
(bad)
xor
cmc
pop
(bad)
hlt
add
test
rol
mov
movs
ret
inc
test
xchg
mov
or
pop
outs
mov
inc
mov
inc
adc
fdiv
cli
push
adc
mov
adc
(bad)
mov
stos
dec
(bad)
stc
in
std
jno
daa
loop
xchg
xor
out
out
xchg
mov
xchg
sti
in
sub
sub
add
add
cmps
addr16
mov
imul
sub
jg
pop
add
ds
imul
rcr
add
add
mov
cmp
mov
jmp
repz
sub
pop
jo
or
mov
or
icebp
and
ret
sbb
cdq
test
or
xchg
jo
xlat
ror
sub
in
push
sbb
cli
sub
loope
mov
sub
mov
or
jb
cmp
std
jl
lahf
ret
sbb
jbe
cmovns
jge
std
sub
popf
sub
push
std
(bad)
cld
adc
cli
fcomp
add
(bad)
hlt
scas
loop
jo
mov
fs
inc
cmp
outs
sub
imul
inc
cmp
dec
mov
je
add
jmp
jmp
jl
and
repz
xchg
adc
mov
aaa
jge
arpl
cmp
ds
mov
fistp
or
push
inc
pop
adc
xchg
out
xor
fisttp
aaa
or
jp
pop
pop
lahf
cwde
dec
sub
inc
shl
xchg
push
add
mov
xchg
test
test
sbb
btc
imul
test
ret
scas
and
pop
cs
loop
ins
nop
or
cmp
jbe
fistp
jp
outs
sbb
(bad)
std
js
ss
lahf
xor
ror
inc
rol
(bad)
sub
movs
scas
push
mov
cmp
and
scas
fnstcw
push
sub
lods
pop
mov
cdq
cdq
xchg
outs
mov
enter
movs
sbb
rcl
add
inc
pushf
mov
aam
out
mov
add
popa
repnz
out
push
(bad)
dec
loop
(bad)
das
lods
push
sub
call
stos
dec
mov
mov
mov
dec
push
push
sbb
jb
jp
adc
ins
cmp
add
daa
out
pushf
adc
loope
dec
jmp
mov
mov
adc
pop
fld
call
cdq
jge
mov
ja
stc
jo
popa
push
bsr
mov
(bad)
stc
rcr
or
fild
adc
add
adc
icebp
jns
inc
(bad)
sbb
push
inc
push
cld
push
inc
iret
push
pushf
ficomp
test
or
push
je
das
pop
repnz
in
repz
pushf
push
jmp
mov
pcmpeqw
in
mov
cdq
jl
dec
xchg
lock
cwde
hlt
add
test
(bad)
jae
sbb
cld
in
add
push
ins
push
repnz
xor
shr
pop
xchg
xchg
add
push
mov
adc
mov
fist
push
cmp
data16
ret
jbe
scas
sbb
ss
jae
ds
fcom
retf
dec
and
out
jo
sub
pusha
inc
add
and
push
sub
jb
xor
or
rcl
adc
retf
mov
and
retf
cmp
int3
movs
loopne
fimul
mov
sbb
stc
jmp
mov
pop
or
in
cld
xchg
fdivr
hlt
push
mov
inc
mov
jo
icebp
xchg
cmp
dec
xor
inc
push
pop
jge
lahf
xchg
and
dec
cmps
cld
outs
mov
and
sbb
add
test
mov
add
fcom
pop
leave
(bad)
xlat
dec
sub
inc
cbw
loopne
call
mov
sti
push
jg
outs
mov
inc
repnz
call
js
mov
test
int
stos
ins
and
fwait
add
mov
(bad)
pusha
outs
sub
scas
jg
cmp
test
or
inc
outs
lods
xchg
sub
jecxz
push
in
clc
add
jo
in
jmp
dec
inc
es
out
push
std
ins
shr
fst
xchg
jnp
push
ins
add
shl
sub
sub
mov
nop
xor
das
fdivr
xrelease
out
test
test
push
rcl
and
stos
jno
imul
enter
pop
pusha
sbb
push
outs
cmps
shr
and
neg
xchg
inc
jp
jae
rcl
jg
xor
adc
jae
pop
out
ins
push
inc
je
ins
jmp
std
pop
retf
jnp
cmp
jo
inc
mov
arpl
adc
sbb
xchg
push
adc
(bad)
repnz
push
or
pop
aas
and
int3
ret
pop
lea
mov
je
push
test
cmp
int
fild
push
mov
cmps
int3
push
cld
in
jp
cmp
cmps
cmp
xor
jmp
inc
dec
sub
movs
daa
xor
xchg
push
xlat
inc
mov
fwait
ds
jns
aam
movs
pop
nop
mov
pop
add
cmp
rol
sub
dec
inc
inc
jmp
ins
mov
jge
sbb
pop
in
adc
mov
out
ins
cs
mov
push
in
dec
retf
sbb
jmp
es
movs
retf
ret
or
sbb
mov
ja
adc
cli
and
arpl
xchg
stos
add
or
inc
dec
cmp
add
lea
fistp
jl
or
sub
jne
or
adc
mov
inc
mov
push
sbb
div
xor
cmp
dec
and
mov
stos
jp
test
shl
jae
cmc
push
add
inc
inc
loopne
xchg
pop
and
pusha
pop
(bad)
(bad)
adc
inc
bound
movs
push
adc
cmp
mov
jmp
lea
mov
mov
idiv
scas
mov
cmp
adc
mov
(bad)
(bad)
push
dec
shr
fisttp
fs
adc
jmp
jo
or
hlt
mov
(bad)
cmp
mov
lods
loopne
mov
inc
loope
push
rcr
mov
pop
cwde
sub
sahf
pop
inc
add
xor
lods
sub
cmps
add
sub
push
(bad)
lock
scas
(bad)
sub
jecxz
and
adc
and
jmp
(bad)
add
arpl
cdq
sub
test
je
push
(bad)
pushw
jge
xor
les
imul
jmp
cmp
fsubr
pop
sub
mov
cmc
mov
in
les
rcr
jmp
xchg
jne
pop
mov
ret
pop
ret
cmc
adc
adc
jbe
outs
and
in
call
or
loop
cmps
scas
movs
cmp
push
jne
mov
(bad)
loopne
add
xor
jbe
out
in
arpl
loope
ret
jp
das
add
in
mov
idiv
sbb
push
cmps
xor
pusha
push
sahf
movs
jns
scas
mov
mov
add
xor
(bad)
loope
pop
or
stc
xor
sbb
es
(bad)
mov
xor
aam
push
cld
repnz
push
out
test
lock
(bad)
xor
jns
dec
(bad)
jnp
and
cmp
adc
(bad)
rol
jle
call
mov
fld
(bad)
(bad)
in
aad
cmp
out
xchg
xchg
mov
call
enter
jle
in
xor
movs
jg
jp
jae
pop
(bad)
push
mov
sub
xchg
jp
xchg
sub
cmps
mov
fcomp
mov
out
and
test
popf
cli
(bad)
popa
xor
lods
icebp
dec
gs
data16
xchg
cmp
jecxz
into
mov
lock
and
jmp
push
or
mov
mov
fwait
cli
test
and
(bad)
xchg
lods
outs
or
out
cs
cwde
push
aas
cmp
rcl
jmp
jae
add
cmp
xchg
nop
ficom
mov
adc
fdivr
in
mov
lods
sbb
leave
into
ss
pop
or
xor
pop
and
stos
(bad)
add
jl
stos
and
pop
sbb
cmps
jle
xor
add
sbb
mov
sub
loop
cmp
or
shl
sub
cmc
add
in
stos
sahf
aaa
daa
sub
jp
fwait
ja
and
jmp
bound
test
jmp
jecxz
movs
mov
adc
cmp
mov
sub
(bad)
repz
pop
jmp
mov
xchg
push
idiv
mov
and
ficomp
stos
outs
or
aaa
jno
or
jecxz
xor
mov
imul
gs
shl
into
add
loop
mov
mov
pop
pop
mov
fs
pop
mov
repz
(bad)
shl
fisttp
xlat
adc
fcomp
push
xchg
inc
pop
iret
pop
adc
sub
ds
in
test
add
(bad)
data16
pushf
mov
fwait
mov
sub
xchg
(bad)
cmp
sub
aam
xchg
ret
jmp
fcom
or
rcl
repz
and
cdq
cmp
sub
arpl
dec
mov
das
xchg
int
and
mov
sti
clc
xor
not
pop
ins
adc
xchg
ins
fldenv
ret
mov
sub
pop
fnstsw
sar
clc
mov
rcr
xor
cwde
js
fiadd
cmp
je
(bad)
push
mov
clc
mov
jmp
push
inc
je
jmp
xor
mov
lock
pop
sar
mov
push
jmp
pop
in
adc
lock
ror
sbb
dec
xor
movs
lock
lods
push
inc
imul
test
repz
rcl
enter
sti
mov
xor
int
(bad)
and
jl
or
in
xchg
xchg
(bad)
jmp
jp
iret
ins
push
in
repz
adc
jmp
xchg
lods
mov
pop
or
xchg
inc
ror
sbb
mov
inc
pop
pop
les
add
and
pop
hlt
test
sbb
pop
jmp
cmp
fs
and
loop
imul
mov
cli
adc
outs
xchg
rcl
in
pop
cmp
addr16
dec
cmps
dec
or
std
mov
mov
xchg
sahf
mov
push
aas
xchg
xor
std
mov
mov
pop
je
mov
fwait
pop
sbb
lods
xchg
add
mov
sti
adc
je
gs
(bad)
lds
mov
jg
dec
pop
into
mov
in
adc
push
sub
aad
je
int
popf
inc
in
jl
adc
inc
ins
dec
xor
fucomi
mov
or
sbb
lods
push
and
mov
inc
xor
retf
out
mov
cmps
cs
mov
ret
mov
push
dec
mov
dec
xor
aam
out
mov
ins
ins
sub
sahf
or
inc
loopne
dec
lea
sub
ins
mov
test
xchg
cdq
mov
sub
outs
in
jge
rcl
pop
mov
jl
stc
or
(bad)
xchg
aam
lock
outs
push
bound
mov
ret
fucom
push
cmc
cdq
xchg
jmp
mov
sbb
mov
fnstcw
rol
cld
and
or
rcr
sbb
ja
jo
xor
mov
shl
dec
std
add
dec
push
in
ins
inc
rol
mov
xor
cmp
mov
jns
sub
cmp
clc
call
gs
fs
push
xchg
ins
loopne
cmp
(bad)
ret
jmp
pop
call
adc
je
mov
clc
xchg
xchg
jmp
js
loope
jno
inc
scas
pop
sar
inc
adc
cdq
rcl
mov
mov
cli
mov
jb
shl
mov
mov
mov
into
mov
cmp
cmp
push
mov
fmul
cwde
jo
ret
lods
push
imul
stc
mov
mov
inc
jns
lea
or
imul
stc
xor
inc
iret
inc
data16
xchg
shl
mov
cmps
pop
add
jmp
add
mov
cmc
movs
fnstcw
loop
stos
enter
cwde
xchg
fsub
stos
ret
fcom
gs
jno
jg
mov
xchg
xor
stos
outs
xchg
test
jnp
clc
and
jo
cmc
push
jl
popw
dec
or
xor
lds
fbstp
addr16
push
push
lods
lds
cld
aaa
(bad)
cmp
mov
push
dec
push
and
(bad)
add
mov
sbb
jns
add
adc
fisttp
lahf
loop
sbb
jbe
js
rol
movs
rol
fsub
mov
rcl
jp
sbb
cmp
call
(bad)
cli
sub
scas
movs
lea
iret
or
xor
inc
pop
into
jbe
push
jbe
hlt
mov
movs
lods
dec
fdivr
es
sub
js
repz
gs
mov
das
das
sti
mov
push
push
pop
cmp
clc
ins
dec
sbb
jnp
ins
cmp
pop
inc
cmp
adc
popa
jge
xor
mov
aaa
adc
add
outs
sbb
mov
test
jp
lock
aas
in
fisubr
cli
into
sub
add
dec
arpl
shr
jmp
fcomp
inc
add
sbb
jmp
arpl
cmps
daa
adc
jae
aaa
cmps
push
mov
pusha
(bad)
mov
and
dec
mov
loopne
sbb
sti
sub
xchg
inc
and
lods
sub
jo
adc
xor
xor
mov
pop
cmc
aas
inc
movs
pop
mov
and
sti
es
das
mov
mov
push
imul
or
sub
jae
icebp
stos
int3
pop
loopne
xchg
sbb
(bad)
mov
in
cdq
cmp
and
nop
inc
and
jle
mov
dec
add
sete
imul
mov
jge
out
push
mov
inc
fdiv
repz
dec
mov
jmp
loop
xchg
mov
jle
adc
sub
cmps
dec
(bad)
mov
jle
movs
sti
sahf
sub
test
in
not
gs
scas
in
push
call
jne
add
mov
xchg
iret
and
push
inc
(bad)
out
cmp
test
aas
stc
fstp
xchg
test
sbb
ds
mov
cli
lahf
xchg
pushf
cmp
cmp
retf
jmp
and
sbb
hlt
sub
sbb
and
mov
rol
daa
pop
cmp
add
movs
mov
test
inc
arpl
sub
xchg
jne
es
cmps
js
bnd
mov
(bad)
and
push
jbe
cwde
lods
and
mov
into
lods
movs
bound
shl
mov
jb
(bad)
jbe
sub
pop
jne
call
or
dec
pop
jmp
push
hlt
xchg
mov
mov
lods
pop
jne
xlat
stos
arpl
xchg
ins
jg
sbb
push
mov
and
inc
mov
xor
test
sbb
cmp
inc
dec
(bad)
lods
jbe
or
jbe
add
ror
mov
sub
(bad)
jae
and
jecxz
mov
pop
fcomp
inc
xor
xchg
mov
xchg
inc
mov
jno
jmp
cmc
aam
jae
inc
pop
lods
pop
sub
xor
fnstsw
(bad)
push
inc
shl
(bad)
xor
add
dec
sbb
stos
push
add
test
outs
inc
jns
aam
mov
dec
dec
sub
and
int3
adc
and
je
inc
outs
push
adc
ins
xchg
xor
inc
mov
push
mov
not
cmp
pop
sub
xor
jg
inc
or
xlat
clc
jmp
xor
jno
call
mov
and
ret
jae
or
rcr
clc
mov
aad
ins
in
jp
loop
and
inc
add
pop
mov
stos
mov
jle
bt
mov
or
lock
iret
retf
ds
inc
pop
inc
ins
das
les
jp
stos
(bad)
add
mov
addr16
mov
test
add
shl
mov
push
ins
sti
test
popf
shr
aaa
sub
cwde
arpl
mov
and
pop
aad
mov
mov
mov
cmp
or
out
add
aad
cmpxchg
inc
shl
enter
jecxz
xchg
add
shr
xor
popa
out
dec
xor
in
hlt
jp
mov
lods
jnp
sub
cmp
cmp
aas
mov
push
sub
iret
inc
mov
push
mov
sub
aas
aaa
lds
sbb
cmp
test
mov
in
mov
jecxz
mov
ret
xchg
imul
pop
inc
inc
pushf
out
imul
sub
mov
ds
pop
or
aaa
out
sbb
ja
mov
stos
ins
jo
xor
lods
call
div
(bad)
sti
jae
inc
fs
push
mov
cwde
leave
std
xor
pop
xor
gs
mov
mov
(bad)
stos
add
gs
imul
shr
pop
imul
fst
test
or
xchg
add
inc
fxtract
dec
sti
sub
(bad)
stc
cmps
mov
mov
aam
jb
bound
int3
in
jmp
cmp
or
or
repz
movs
test
xchg
mov
pop
(bad)
fadd
repz
jecxz
scas
jns
fs
xor
and
fdiv
bound
cld
out
repz
out
sub
sub
push
push
cmp
and
into
(bad)
jmp
rcl
xchg
push
jecxz
mov
shl
dec
sub
cmp
add
stc
dec
inc
xchg
fwait
push
add
sbb
lea
mov
div
lods
sbb
pop
jno
mov
mov
mov
sbb
bound
or
cmp
or
shl
enter
js
loope
mov
adc
ja
jmp
sbb
in
adc
xor
mov
push
xchg
movs
adc
push
fldlg2
xchg
loop
ret
push
call
fwait
je
ss
outs
(bad)
sub
call
sbb
push
inc
jo
inc
cmps
out
push
push
push
push
push
data16
iret
repnz
shl
mov
test
out
dec
ss
dec
icebp
mov
xchg
sub
xchg
test
add
or
jl
jecxz
(bad)
fimul
aam
dec
outs
jno
(bad)
push
pop
fs
xor
ret
and
(bad)
in
cdq
pop
ficomp
ficom
xchg
mov
or
add
hlt
(bad)
int3
iret
push
imul
stos
pop
lock
or
mov
outs
inc
lahf
test
outs
pop
sbb
mov
adc
sub
nop
xchg
imul
hlt
pop
popf
sbb
out
xchg
mov
push
xor
loop
aad
xchg
dec
cmps
dec
repnz
lahf
fwait
ror
sar
push
popf
cmp
sbb
clc
inc
mov
enter
inc
ins
mov
mov
cs
mov
xchg
push
add
ret
rol
imul
std
mov
icebp
mov
cmp
mov
xchg
add
push
gs
gs
repz
adc
fsub
push
sar
xor
test
mul
pop
ds
xor
push
mov
js
inc
sub
test
cmc
es
sub
mov
push
pop
add
retf
(bad)
adc
dec
sub
mov
js
jmp
arpl
mov
stos
jmp
or
sub
adc
jmp
test
(bad)
mul
jle
cmps
stos
out
stos
xor
lods
aas
popa
pushf
sbb
cwde
js
or
jmp
adc
cs
fstp
mov
pop
or
test
scas
bound
xchg
lock
push
retf
movs
lahf
cmps
shr
(bad)
push
cld
dec
xor
adc
test
(bad)
add
cmp
cmps
ds
daa
pop
jae
ss
aad
inc
ja
mov
mov
repnz
mov
(bad)
imul
dec
pop
mov
cmp
add
pop
pop
adc
out
jecxz
imul
inc
faddp
punpcklwd
or
push
ret
test
jo
sub
pop
jmp
sahf
push
sbb
pop
test
add
aad
cmp
jle
mov
data16
leave
ficomp
mov
out
stos
inc
icebp
scas
add
sar
retf
in
retf
dec
jo
fist
(bad)
in
sbb
outs
xchg
clc
jae
mov
rol
pop
or
scas
fisubr
cmp
mov
fistp
add
adc
fdivr
cdq
push
xchg
xchg
and
xor
pushf
fistp
sub
jmp
jmp
jb
lods
sub
fbstp
outs
dec
loope
das
sub
dec
and
inc
fstp
sub
xchg
sbb
mov
call
mov
fwait
mov
stc
sti
cmp
adc
cmps
retf
dec
cmp
loopne
(bad)
ret
stos
and
pop
push
pop
shl
push
cmp
js
repz
mov
cmp
in
or
push
jmp
xlat
div
xor
add
je
retf
cmps
push
push
je
cmp
adc
ja
jns
into
push
jno
xor
sub
loope
test
clc
out
push
cwde
inc
mov
mov
mov
jne
mov
and
call
shr
inc
mov
jae
stc
repz
xor
lock
aaa
mov
out
jmp
mov
ror
jo
ds
mul
push
jp
jae
or
adc
outs
jns
repz
xchg
inc
or
(bad)
shl
fst
mov
rol
sub
loop
shr
push
adc
dec
je
cmp
pop
xor
xor
jmp
pop
(bad)
dec
dec
int3
rol
retf
cmp
int3
mov
das
push
and
jae
das
mov
mov
add
jmp
pcmpgtd
adc
xchg
call
in
and
(bad)
scas
jge
dec
(bad)
inc
out
shl
sub
mov
call
pop
add
mov
int3
(bad)
pusha
cwde
je
arpl
(bad)
in
inc
xchg
cmps
int3
int
pop
push
imul
ret
pop
inc
frstor
ds
push
sti
mov
cmp
rcl
in
jo
cdq
xchg
push
test
cld
into
cs
imul
mov
(bad)
rcr
ret
aad
ficomp
hlt
jo
push
sub
inc
stos
adc
fnsave
xor
pop
xchg
jl
loop
pop
jp
sbb
and
stos
push
out
push
mov
pop
pop
or
xchg
into
out
rol
int
sahf
sbb
les
mov
out
das
inc
addr16
pushf
jns
sahf
inc
jnp
das
jl
jo
mov
inc
xchg
adc
or
das
jmp
push
cmps
imul
jmp
jb
addr16
mov
test
ds
push
shl
rcl
sahf
shr
pop
out
pop
dec
sub
mov
lods
lods
xchg
retf
es
(bad)
pop
mov
jb
add
xchg
xchg
xor
mov
sti
jl
xchg
jb
test
mov
ss
mov
xchg
and
jg
dec
and
cmp
adc
push
xchg
js
sub
aas
dec
xchg
push
retf
pop
(bad)
shl
cmp
add
dec
lea
xor
add
test
int3
dec
es
sbb
scas
scas
add
call
js
jmp
loope
data16
add
in
or
xor
mov
jecxz
(bad)
ja
out
xor
stos
push
je
push
cmc
xchg
cmp
retf
sub
fisttp
daa
jb
xlat
push
or
adc
sbb
push
xchg
push
(bad)
je
ins
mov
jo
sub
outs
pushf
adc
hlt
test
sub
jo
push
(bad)
and
inc
addr16
sbb
out
sahf
cmp
pop
jnp
rol
pop
stos
call
mov
lahf
imul
cmp
sub
fsub
xchg
inc
add
jnp
in
push
xchg
sub
sbb
xchg
cli
mul
es
stos
push
jbe
adc
dec
push
ss
adc
xor
aaa
movs
inc
and
mov
out
adc
cmp
jo
lea
jno
cmps
ror
repnz
xor
data16
outs
mov
mov
push
sub
or
push
pop
ja
cmps
push
mov
out
inc
cmp
cmp
mov
clc
cmp
mov
stos
cmp
test
out
xchg
ret
mov
mov
mov
push
pop
lods
cmp
js
dec
por
gs
stc
popa
retf
push
arpl
push
pop
and
or
cmps
aas
xor
test
mov
shl
fisttp
add
adc
shl
test
aas
fcom
arpl
mov
xchg
imul
pop
into
out
and
pop
pop
dec
pop
jno
fsub
test
mov
and
jbe
inc
xor
push
movs
je
mov
mov
mov
adc
clc
xchg
ds
jmp
adc
mov
cmp
dec
gs
fxam
adc
sbb
pop
test
loop
scas
scas
lods
mov
push
jg
out
and
stos
mov
(bad)
sub
mov
outs
imul
sbb
ins
out
imul
pusha
js
cmp
retf
lock
daa
xchg
clc
jmp
jno
and
pop
stos
pop
(bad)
pop
je
(bad)
movs
fldcw
and
in
in
not
push
icebp
int3
push
jl
pop
dec
xlat
dec
sbb
shr
and
mov
test
sub
not
imul
jbe
cmp
cmp
aaa
jl
xchg
in
shl
or
sbb
sbb
mov
xor
lods
les
xor
mov
icebp
mov
push
out
and
jl
add
retf
fisubr
cmp
inc
sub
or
gs
fimul
and
das
out
push
fld
loopne
fild
inc
repz
and
imul
xor
or
cwde
dec
addr16
stos
shl
ds
bound
inc
xchg
ror
dec
popw
cmp
dec
enter
adc
sub
or
push
inc
mov
push
je
push
inc
add
daa
test
(bad)
push
fst
je
(bad)
out
(bad)
push
jmp
dec
mov
sbb
and
rcr
adc
jp
(bad)
mov
adc
mov
dec
scas
daa
push
push
in
out
mov
in
or
dec
shr
popf
push
imul
mov
mov
mov
pop
xchg
sbb
imul
mov
pop
fdivr
scas
mov
jne
mov
imul
cmp
xlat
dec
inc
inc
xchg
xchg
cmp
dec
sbb
push
jmp
mov
fild
in
sub
std
xor
iret
dec
mov
in
imul
imul
mov
inc
loope
jo
push
rcl
dec
jp
clc
dec
ins
cmp
inc
cmps
add
iret
mov
ss
pushf
mov
movs
xlat
push
and
out
rcl
add
fild
dec
fstp
ficomp
xchg
adc
cmovae
in
xor
xchg
in
loop
mov
int3
fcomp
ins
movs
ja
fnstsw
cs
sub
ror
data16
add
les
push
mov
xor
cmp
(bad)
pop
sub
add
mov
movs
fild
nop
aad
vandps
push
addr16
lods
jmp
jno
jo
fisttp
mov
xor
es
xchg
rcl
aaa
jb
push
cs
or
repz
mov
fild
sti
ficom
es
repz
(bad)
cmc
add
int
mov
push
xchg
mov
lahf
mov
lock
ret
cmp
push
xlat
test
retw
daa
xchg
stos
dec
outs
and
mov
inc
inc
fs
push
jnp
rcr
or
pop
sub
imul
stos
ret
and
and
fidivr
sbb
cmp
call
inc
add
sub
jne
imul
mov
mov
dec
in
imul
sbb
jge
dec
ins
pop
test
mov
mov
jmp
enter
mov
cmp
dec
outs
repz
lods
rcl
ds
or
icebp
lods
out
sbb
out
lock
mov
push
dec
mov
push
push
adc
sar
adc
cmp
(bad)
enter
cli
jle
adc
test
pop
fild
sbb
push
std
ins
popa
and
sbb
xor
adc
or
inc
inc
sbb
dec
lods
pop
jno
jl
in
jp
cwde
aaa
xor
and
std
or
in
jmp
popf
mov
(bad)
stos
aaa
and
mov
mov
aaa
ds
and
aaa
push
xchg
popa
or
sub
ret
enter
pusha
sbb
mov
xor
retf
movs
ror
pop
ins
retf
push
dec
dec
rcl
mov
mov
out
pop
xchg
cmp
inc
mov
xchg
and
sub
ins
rol
and
hlt
popa
addr16
xrelease
icebp
pop
in
dec
xchg
scas
fchs
mov
popf
mov
pop
xchg
fstp
add
fnstcw
inc
mov
rcr
jle
ja
je
dec
push
dec
xor
xchg
adc
sbb
sbb
pop
mov
jmp
arpl
ins
imul
push
lahf
movs
xor
ret
mov
inc
add
sti
push
mov
sahf
je
test
mov
shr
push
je
cmp
xchg
or
jae
fwait
dec
popf
(bad)
test
stos
es
push
adc
mov
pop
shr
cmps
jl
leave
sub
xor
sbb
mov
mov
bound
(bad)
mov
jmp
dec
es
pop
in
jns
loope
cwde
inc
test
xchg
cmp
in
hlt
mov
cs
add
addr16
stc
inc
xor
jnp
mov
(bad)
rol
(bad)
push
repz
or
dec
imul
mov
jg
inc
(bad)
xor
fstp
daa
jp
clc
(bad)
ds
ret
popa
int3
cld
repnz
sbb
sbb
shl
inc
xchg
ret
push
and
jmp
clc
pop
mov
xor
add
push
repz
repnz
fucomp
mov
mov
jmp
mov
hlt
add
pop
xchg
aad
mov
out
repz
pop
and
inc
adc
add
lock
fild
inc
push
in
gs
ret
add
push
stos
cs
sbb
pop
mov
push
push
fild
xchg
push
sbb
inc
xor
jecxz
xchg
pop
dec
xor
fst
int3
test
bound
inc
lods
dec
int
xchg
popa
cs
shl
cmp
(bad)
ret
(bad)
mov
mov
ja
retf
int3
repz
dec
outs
pop
adc
cdq
inc
fisubr
iret
cmp
es
inc
mov
out
inc
aam
cmp
aad
pop
fnstenv
mov
lods
jbe
movs
xor
rep
jmp
or
call
cmp
sbb
add
test
cs
mov
push
call
inc
fnsave
retf
mov
idiv
lds
and
outs
push
sti
mov
mov
adc
call
retf
mov
dec
adc
jb
gs
mov
outs
inc
xlat
shr
rol
xchg
and
jo
lods
dec
sub
adc
sti
mov
lods
xor
scas
mov
in
fs
dec
das
movs
aaa
push
mov
cmp
adc
and
adc
popa
mov
loope
add
gs
pushf
inc
sbb
mov
scas
and
mov
inc
dec
das
inc
adc
js
push
pop
pushf
scas
and
in
rol
cwde
xchg
loop
retf
push
inc
jmp
scas
outs
pusha
je
dec
push
enter
test
xor
pop
shl
xchg
jne
mov
movs
pushf
lea
fidiv
aas
mov
out
xlat
dec
mov
push
repnz
dec
test
push
das
inc
test
pop
icebp
fxch
xor
jmp
inc
adc
xlat
mov
jne
shl
in
jl
push
sbb
xchg
inc
das
sbb
bound
shl
mov
ins
mov
out
xchg
stos
ins
adc
mov
call
dec
cmp
cmp
inc
xlat
add
call
inc
cmc
mov
arpl
add
and
inc
or
pushf
sbb
jmp
icebp
jo
mov
dec
mov
mov
xor
loopne
mov
sbb
call
push
add
popa
ins
mov
outs
outs
cmp
xchg
jb
xchg
xor
ins
push
pop
aam
mov
test
and
mov
retf
or
call
and
test
sbb
mov
stos
inc
push
cmp
ins
out
ins
jge
aaa
and
loope
(bad)
cmp
jns
retf
arpl
inc
cmp
rcl
push
jns
push
pushf
jl
jle
jne
sub
ret
push
cwde
jnp
push
scas
sub
or
out
div
ins
pop
mov
cmps
inc
pop
fwait
adc
xchg
fwait
and
cmp
js
ds
pop
es
pop
mov
jb
mov
arpl
retf
dec
mov
mov
retf
fcom
xor
mul
mov
cmp
add
mov
(bad)
popa
xlat
(bad)
lds
cli
pop
loop
sbb
ss
pop
mov
jl
loope
xchg
ja
cmp
rcr
jbe
pop
jno
jbe
test
shr
test
or
xlat
cdq
(bad)
mov
fcomp
pop
mov
in
aam
fsub
into
or
dec
idiv
ret
int3
shr
movs
cmp
shr
pop
into
(bad)
loop
(bad)
daa
mul
cmps
dec
mov
sbb
mov
pushf
loopne
fisttp
sar
mov
arpl
xor
fdivr
imul
mov
movs
(bad)
gs
and
mov
or
loop
mov
push
call
push
inc
pushf
jl
sub
xor
xor
or
sbb
mov
mov
cmp
jg
rol
test
and
jae
dec
in
push
ja
ss
jno
xchg
and
es
dec
scas
leave
je
data16
imul
cmp
or
cmp
push
dec
fs
jae
inc
call
addps
movs
xor
inc
cli
mov
pop
jmp
stos
or
sbb
mov
neg
pop
fsub
jmp
pop
cmp
sbb
jo
xor
sahf
dec
icebp
movs
push
out
inc
dec
xchg
movs
sahf
ret
mov
fisubr
sub
test
bound
push
mov
inc
add
clts
inc
mov
fdecstp
sbb
mov
mov
rcl
retf
sar
or
inc
and
imul
mov
mov
jae
inc
mov
sahf
ins
push
(bad)
lods
leave
enter
push
loopne
jl
int
jb
jecxz
(bad)
mov
mul
mov
outs
add
add
fst
data16
jno
jge
jge
xchg
or
pop
test
and
frstor
dec
jp
jbe
pop
shr
je
cmp
fdivr
shl
rol
pop
lds
mov
jle
mov
clc
jle
pop
nop
cmc
test
mov
pop
and
lock
inc
icebp
adc
fmul
inc
xor
and
cmp
xchg
sub
xor
dec
adc
xchg
iret
xchg
or
setge
int
cmp
ja
retf
sbb
jecxz
jnp
rcr
cmp
jg
std
add
mov
aam
xchg
lea
(bad)
(bad)
nop
push
pop
mov
xchg
(bad)
mov
sar
scas
test
cmc
push
fimul
push
js
hlt
xor
jne
cli
and
mov
mov
inc
int
div
outs
sub
push
push
or
push
push
int3
inc
jmp
out
icebp
iret
xor
xchg
in
mov
xchg
adc
stos
outs
ja
cmp
ficom
jne
mov
mov
mov
or
call
scas
in
xchg
xlat
xchg
pop
mov
(bad)
in
inc
jno
adc
call
add
outs
sbb
pop
jp
shl
test
mov
das
inc
loop
int
pop
add
jge
fisttp
fs
pushf
pop
cmp
adc
dec
out
sub
into
sub
stc
sbb
jne
bound
add
pop
or
leave
pusha
xor
loopne
outs
adc
adc
pop
fwait
aaa
adc
and
push
dec
ds
add
push
retf
enter
mov
push
xchg
out
push
inc
aam
popa
stc
rol
push
loop
mov
ror
and
and
cmp
dec
fdivr
xchg
cs
inc
cmps
add
pop
call
pop
adc
mov
pop
or
retf
xor
cmc
and
jno
out
js
dec
sub
inc
bound
fild
push
aas
add
mov
add
pop
aas
clc
in
outs
add
adc
and
shl
dec
stos
(bad)
hlt
jl
aad
cli
hlt
jmp
call
cmp
div
(bad)
inc
fwait
lahf
in
cld
(bad)
cmp
mov
rcl
mov
daa
push
add
pusha
jbe
dec
pop
cmc
add
cmc
js
or
jl
adc
mov
mov
sbb
cmps
cmp
mov
add
sub
cli
loope
push
loopne
stc
sbb
hlt
jnp
adc
inc
push
aas
push
push
and
push
outs
pop
retf
mov
rcl
fst
aad
js
xchg
aaa
retf
adc
cmp
cmp
add
sub
cwde
leave
xchg
and
ins
xor
das
adc
fisttp
shl
or
mov
jecxz
jnp
adc
mov
xchg
pushf
cmp
imul
mov
xbegin
push
into
pushf
xor
cs
cld
cs
xchg
xor
push
sub
fidivr
jg
mov
sub
das
xchg
je
xchg
fcom
leave
out
cmp
dec
std
adc
leave
cmp
mov
lea
jnp
cmp
mov
enter
adc
aam
mov
hlt
int3
lods
mov
fist
sub
stos
and
stc
mov
loop
xchg
int
xchg
cmps
test
pop
xor
fwait
push
push
xchg
pop
(bad)
sbb
or
jge
retf
mov
pusha
fstp
jnp
rcr
sub
cmp
cmps
pop
in
pushf
sbb
ins
mov
sbb
inc
pop
addr16
push
hlt
fmul
sbb
je
or
jb
cmp
xlat
lds
adc
icebp
rcr
and
test
leave
sbb
mov
or
ds
push
fadd
xor
cmps
xchg
mov
pop
or
mov
mov
push
rcr
sub
dec
mov
add
inc
sti
(bad)
fiadd
cmp
mov
pop
cwde
scas
jmp
push
dec
sar
mov
dec
push
shl
sub
retf
lock
inc
add
push
adc
push
jmp
lea
test
mov
test
js
dec
push
fs
push
js
pop
addr16
cmp
cmp
jb
(bad)
xor
cdq
inc
retf
stc
mov
adc
dec
push
sbb
out
inc
fild
lds
imul
dec
imul
and
sbb
jnp
test
fisub
add
xor
cdq
dec
call
mov
cdq
(bad)
pop
push
xchg
or
pop
scas
mov
xor
loop
mov
ret
pop
mov
jl
or
fadd
test
fidiv
mov
call
and
sbb
(bad)
repz
jb
dec
dec
popf
mov
cmps
ins
mov
mov
xchg
cli
cmp
shr
in
shl
mov
cmp
(bad)
into
push
cwde
ins
stos
sub
ds
sub
scas
mov
cs
and
loope
loopne
inc
xor
shr
pop
stc
ret
mov
(bad)
loopne
inc
or
in
pop
loopne
aad
sar
es
sbb
or
sub
loope
cmps
add
push
retf
out
out
ret
and
jle
loope
arpl
fist
mov
int3
aad
jp
(bad)
sub
bound
int
iret
mov
mov
push
cmp
mov
rcr
mov
inc
cld
pop
les
xchg
rol
scas
pop
int
add
push
pop
or
cwde
and
ins
xlat
cmp
lds
retf
and
mov
xchg
daa
sbb
adc
and
cmp
rol
sets
data16
or
xlat
data16
dec
retf
sub
lds
cld
add
dec
jmp
mov
jl
mov
mov
jns
into
stos
dec
mov
leave
mov
pop
cmp
sbb
scas
jmp
clc
neg
cli
test
inc
jmp
mov
retf
pop
movs
push
xor
inc
fwait
push
inc
clc
into
aam
jo
arpl
xchg
mov
repnz
inc
pop
jecxz
lods
jnp
jecxz
inc
int
cld
ss
sub
add
mov
sbb
xor
xor
or
clc
popa
cmp
mov
adc
push
fcomp
jp
not
aaa
mov
push
sti
test
aad
out
out
xchg
ss
mov
adc
std
aaa
cdq
ins
cli
(bad)
xchg
inc
(bad)
(bad)
xor
and
cmp
stos
jo
jmp
jb
bound
mov
xor
jno
shl
dec
xor
jmp
stos
cmp
sub
xchg
jmp
int
jecxz
fisub
cmp
rcr
or
dec
jb
mov
enter
lds
push
xchg
stos
out
xchg
cmp
xchg
idiv
xchg
ret
xchg
xlat
icebp
mov
xor
xchg
shl
int
jecxz
jle
mov
call
loop
adc
lahf
mov
jnp
push
mov
adc
push
add
add
jmp
sub
cmps
adc
aas
adc
and
push
xor
mov
aaa
outs
inc
xchg
pop
xor
loop
shr
jle
cmp
sub
scas
jbe
adc
fsubr
retf
stos
cmp
movs
cmp
sub
nop
adc
inc
push
and
and
jns
dec
or
inc
push
scas
dec
test
pusha
jno
or
jecxz
dec
enter
mov
stos
mov
inc
(bad)
test
mov
sub
mov
lea
xor
add
(bad)
mov
int3
add
and
and
xchg
xchg
mov
lds
movs
mov
inc
scas
add
stc
(bad)
ror
mov
jp
and
cwde
dec
mov
inc
pop
push
xchg
sub
mov
cmps
stos
pop
out
pop
inc
xchg
inc
or
push
add
pop
icebp
out
scas
lods
add
fisttp
ror
sbb
xchg
popa
dec
out
enter
mov
ror
mov
sbb
dec
pop
push
into
inc
iret
xchg
js
push
push
adc
shr
jl
in
enter
xor
mov
out
push
es
xchg
jns
in
(bad)
cmps
jge
pop
or
push
add
xchg
adc
int
out
(bad)
jmp
xchg
retf
jge
mov
aas
pop
jle
mov
mov
xchg
cmp
nop
xor
jl
sbb
cmp
ficom
test
xchg
js
fcomp
sub
enter
imul
mov
jae
xchg
and
mov
xor
xchg
push
and
sub
jge
xlat
xchg
mov
sbb
jne
test
jp
sub
and
movs
test
dec
cmp
sbb
add
in
js
jmp
pop
sbb
push
push
sub
fidivr
movs
dec
je
pop
dec
jle
inc
dec
inc
repnz
aas
jle
fs
add
pop
jae
(bad)
hlt
add
mov
in
add
shl
mov
mov
shl
imul
call
push
in
popa
xor
rcl
dec
mov
push
mov
mov
cli
leave
sbb
mov
jo
test
les
(bad)
lods
push
add
sbb
adc
pop
and
sahf
cmp
cdq
xor
and
inc
in
retf
loope
push
jae
dec
xor
fisttp
push
clc
gs
push
mov
xor
leave
and
into
inc
mov
adc
inc
test
dec
aas
pop
ins
popa
xchg
and
sub
in
jae
in
jb
mov
or
daa
sahf
pop
xor
sub
ret
hlt
mov
jns
clc
push
and
mov
cmc
icebp
inc
(bad)
out
cmp
xchg
es
add
sub
je
xchg
(bad)
dec
imul
js
aas
dec
push
dec
dec
and
add
mov
cs
fnstsw
jecxz
jne
jecxz
add
add
pop
mov
and
enter
xor
cwde
dec
fld
fldl2t
test
mov
ret
pop
push
xchg
fcomp
cmc
fiadd
das
cld
and
inc
scas
xor
pop
scas
out
leave
popf
push
fdiv
test
movs
mov
mov
rcr
cmp
jae
or
push
in
pop
stos
into
push
cmp
xor
mov
jnp
pop
das
aad
jp
xor
enter
pop
in
adc
rcl
popa
cmp
shr
sbb
adc
test
cmp
sbb
dec
xlat
cmp
push
mov
sbb
mov
test
test
ret
push
xlat
sbb
inc
mov
int3
push
stc
arpl
mov
cmp
imul
pusha
(bad)
scas
int3
arpl
jle
retf
or
(bad)
push
cli
(bad)
sub
gs
or
xor
fadd
or
int3
add
mov
retf
sbb
int
cmp
adc
scas
(bad)
(bad)
xor
std
cwde
jbe
xchg
mov
pop
std
repz
pushf
push
sti
xlat
push
mov
dec
pop
loope
(bad)
mov
lea
inc
repz
retf
xchg
pop
xor
xor
xchg
mov
sub
xchg
loope
or
fimul
and
mov
scas
sbb
inc
mov
pop
and
jmp
or
je
ffree
xchg
push
addr16
hlt
jb
dec
es
popf
sar
rcr
cmps
xor
into
sub
mul
xor
inc
adc
jb
out
cmp
xor
(bad)
adc
out
add
dec
rcl
xor
mov
mov
mov
add
sbb
inc
mov
sbb
jl
pop
inc
mov
es
in
gs
iret
and
xchg
neg
adc
cli
aad
xlat
cld
test
(bad)
push
pop
push
les
xchg
stc
sub
adc
dec
cmp
int
and
dec
cmp
dec
and
cdq
rcl
cli
je
push
sbb
rol
add
hlt
push
ret
jmp
push
xor
and
loope
stos
inc
mov
cmp
adc
jp
aad
push
adc
or
out
clc
jbe
outs
mov
fisttp
cmp
mov
cld
test
nop
sub
xor
mov
pop
fs
sub
add
mov
adc
jns
cwde
rcr
mov
ins
call
call
inc
cmps
ins
jg
push
clc
pop
dec
pop
and
repnz
sar
lds
repnz
test
adc
icebp
sub
pushw
call
push
fidivr
outs
push
mov
or
adc
or
jne
add
cmp
sub
popa
inc
lahf
xchg
stc
mov
loope
inc
push
and
sbb
enter
mov
addr16
mov
jmp
sbb
jns
enter
push
mov
sbb
mov
ror
and
sti
sbb
fadd
inc
and
sbb
mov
je
cwde
movs
(bad)
xchg
icebp
loopne
lods
add
cmp
cwde
ins
pusha
es
dec
sub
sar
xchg
xchg
repnz
adc
inc
loopne
hlt
imul
xor
in
push
retf
inc
mov
outs
fs
sub
les
data16
push
shl
pop
hlt
mov
mov
add
in
add
in
scas
test
out
imul
inc
rol
lea
scas
mov
pop
(bad)
lock
je
mov
hlt
imul
fcomp
and
mov
scas
pop
push
lock
shr
xchg
das
and
cmps
sub
mov
sbb
hlt
sub
mov
addr16
cmp
or
or
inc
(bad)
sbb
sub
mov
mov
mov
repnz
dec
mov
ret
ins
pusha
or
mov
imul
jne
mov
and
or
inc
sub
and
inc
xor
in
sbb
cld
stos
fdivp
pop
sbb
jmp
sub
cmp
push
loop
adc
aas
data16
fimul
imul
add
rcr
ret
xchg
jge
jne
xchg
fidivr
loopne
add
(bad)
xor
outs
sub
mov
cs
ret
sti
fsin
xor
push
mov
dec
in
push
ds
mov
add
xchg
sti
or
cmp
mov
aad
ret
das
and
scas
and
mov
ja
dec
out
jo
jg
jecxz
sahf
nop
and
int3
cs
cwde
out
xchg
retf
xchg
jo
movaps
jle
push
mov
push
inc
enter
hlt
data16
mov
div
xchg
and
jecxz
icebp
(bad)
xchg
sbb
hlt
stos
push
pop
jl
xor
jns
adc
out
rcl
sub
loop
adc
or
fst
pop
sub
int
jo
mov
dec
enter
fcom
clc
fstp
or
dec
retf
xlat
stos
xchg
mov
cmps
inc
add
adc
sti
test
daa
adc
xor
(bad)
and
scas
aam
bound
push
xchg
iret
mov
enter
dec
ret
and
xchg
xchg
leave
xchg
pop
inc
cmp
lds
addr16
addr16
jae
mov
adc
push
jne
(bad)
lods
js
mov
arpl
test
ret
ret
sbb
jge
test
stos
movs
push
mov
mov
ds
mov
or
imul
mov
or
popa
scas
or
call
dec
and
lods
pcmpeqw
ret
inc
mov
adc
jmp
mov
or
outs
inc
dec
jp
adc
push
push
mov
shl
mov
adc
push
cmp
cmp
ret
icebp
fwait
mov
retf
mov
fdiv
ror
xor
sar
stc
add
fadd
or
scas
add
add
aam
int3
dec
jo
dec
sub
add
mov
lods
xchg
jo
icebp
icebp
xchg
and
mov
mov
mov
mov
jmp
shl
sbb
call
jnp
fcmovb
clc
and
sbb
fst
lahf
pusha
ss
fidiv
jg
mov
(bad)
aas
cmps
in
loopne
lds
ds
jno
xchg
(bad)
jl
mov
jg
ret
push
adc
pop
out
fsub
pop
outs
pop
shl
rcr
push
add
xor
push
(bad)
mov
aas
fucomip
pop
sub
jne
jge
(bad)
adc
mov
ja
jl
cmp
outs
data16
sub
loop
sbb
ins
inc
mov
inc
jbe
jb
rcl
push
xchg
imul
mov
(bad)
int
stos
or
push
ror
sub
xchg
int3
jns
and
addr16
stos
sub
cld
dec
adc
scas
jge
inc
and
jmp
or
test
add
pop
push
adc
sub
sub
frstor
movs
xor
hlt
sbb
jp
dec
xchg
add
add
retf
pop
pop
pop
ins
mov
jnp
mov
mov
jmp
cwde
sub
adc
xchg
or
jge
stos
cmp
sub
les
ss
aaa
cmp
inc
or
bound
lds
lods
sbb
dec
into
cmps
ja
es
sar
test
and
dec
jnp
inc
adc
and
imul
iret
mov
pop
cs
jmp
xor
and
and
inc
test
test
test
and
dec
leave
mov
jmp
pop
(bad)
sti
pop
cmp
or
retf
mov
jbe
sub
dec
into
(bad)
mov
popa
mov
push
xchg
test
sub
mov
mov
dec
adc
xchg
and
adc
adc
add
loopne
mov
jnp
inc
movs
call
cdq
adc
xchg
mov
mov
sub
push
push
stos
test
mov
xchg
pop
and
cmc
jp
mov
add
jl
call
mov
jmp
inc
and
xchg
adc
into
jmp
sub
lea
mov
mov
pop
fwait
inc
cmps
xor
js
push
nop
cmp
out
repz
jl
out
jbe
emms
jle
pop
and
ja
xor
jmp
mov
into
shl
inc
push
jecxz
pushf
add
jnp
in
out
pop
fsubr
xor
mov
lods
ins
jg
into
gs
xchg
pop
out
(bad)
std
adc
(bad)
cmps
iret
leave
adc
scas
mov
cmp
cmp
out
ins
call
xchg
sub
leave
loope
adc
cs
sbb
push
es
pminub
inc
xchg
aad
movs
shl
call
mov
iret
and
test
cs
inc
xchg
xchg
cmp
call
xor
mov
mov
leave
js
adc
and
mov
push
les
sbb
push
(bad)
cdq
jle
sar
lock
(bad)
movs
sar
jmp
xchg
dec
jl
mov
dec
mov
in
arpl
push
add
cmc
loopne
adc
js
mov
xor
inc
mov
cmps
fistp
out
addr16
pop
mov
xchg
out
push
push
mov
repnz
mov
test
xchg
ret
jno
rcr
push
push
mov
shl
mov
jp
fld
pop
mov
into
push
cmp
test
add
retf
mov
out
pcmpgtw
rcl
or
dec
enter
daa
mov
sub
fcomi
inc
sbb
xchg
sub
pop
cmps
cmp
mov
ret
les
mov
cmps
push
icebp
in
adc
push
fldz
loope
arpl
test
call
or
jecxz
lds
sub
xchg
int3
jbe
pop
push
sbb
mov
out
mov
jmp
cmps
sbb
or
std
mov
les
leave
cmp
jle
aaa
mov
cmp
xor
js
add
mov
cmp
pop
xlat
in
inc
(bad)
xchg
jae
mul
jmp
dec
retf
push
add
jbe
push
mov
push
out
aad
or
xchg
mov
call
jg
xor
adc
push
xchg
jge
popf
adc
inc
add
sahf
adc
sub
or
sub
pop
cmp
and
in
int
sub
fidivr
(bad)
cwde
add
xchg
cmp
std
dec
pop
bound
in
leave
jb
pop
lods
imul
push
push
lea
mov
inc
mov
(bad)
dec
mov
js
sub
sbb
dec
out
xchg
adc
sar
push
cmp
or
jle
sub
or
add
call
out
mov
xchg
mov
push
arpl
sahf
and
and
je
outs
push
in
frstor
cwde
test
push
int
in
rcl
jecxz
(bad)
xor
push
mov
mov
into
cld
and
mov
mov
cmp
ficomp
clc
inc
and
sti
push
jg
test
or
and
les
gs
sbb
pop
cmps
sub
jne
jne
ret
pop
mov
or
popf
scas
jmp
mov
int
and
cmp
push
mov
(bad)
adc
push
xchg
mov
(bad)
xchg
mov
inc
xlat
sbb
fucomi
jbe
dec
lock
aad
pushf
data16
movs
lock
mov
jmp
out
out
mov
test
pop
sti
xchg
or
into
ret
mov
xchg
mov
(bad)
cmc
jle
mov
push
push
jge
xor
cwde
(bad)
pop
dec
or
pop
les
jl
xor
jl
xchg
adc
or
or
sbb
mov
push
(bad)
sub
je
mov
inc
pop
mov
jb
ret
loopne
lock
div
xchg
adc
pop
adc
dec
setbe
mov
ret
pop
out
fidiv
adc
(bad)
push
mov
aam
cmps
mov
cmps
sbb
pop
pop
faddp
jbe
sub
loop
jmp
gs
jg
(bad)
(bad)
loopne
repz
xchg
mov
fsub
push
arpl
outs
inc
ins
mov
in
lea
mov
cmc
push
cmp
xor
jle
cmps
mov
and
xchg
mov
pop
xchg
jmp
adc
cmc
test
jmp
push
mov
clc
popf
retf
es
repz
inc
test
lds
xchg
push
jb
pop
add
adc
jle
adc
out
mov
cmp
icebp
imul
fmul
jne
idiv
inc
es
or
xor
(bad)
imul
lods
jbe
dec
aam
or
and
or
fst
push
icebp
add
add
jecxz
push
je
ds
push
pop
mov
xor
imul
push
add
cmp
xchg
mov
adc
and
shr
shr
push
push
cld
sbb
(bad)
push
fcomip
and
dec
and
into
loopne
test
cmp
or
clc
mov
int3
jnp
aaa
fldcw
add
ss
xchg
sub
fcom
jbe
movs
jp
out
fst
movs
repz
mov
mov
pop
lea
mul
push
push
sbb
xchg
mov
out
in
repnz
jb
pushf
fldenv
add
jge
xchg
mov
xor
jne
xor
bound
pusha
fiadd
fild
pusha
icebp
sbb
push
pop
push
inc
mov
mov
clc
rol
and
into
out
and
adc
jl
xor
mov
push
sub
loopne
adc
mov
jmp
sysenter
jnp
ss
or
cmp
mov
jg
push
retf
loope
rcr
jmp
fcomp
lea
lahf
lods
jg
das
sbb
test
cmp
mov
(bad)
js
dec
jmp
pop
lea
adc
dec
nop
rcl
push
xor
ins
into
cs
enter
ja
or
inc
mov
jae
sbb
je
jbe
jbe
pop
mov
ror
xchg
mov
sahf
arpl
mov
stos
inc
pop
and
psrad
cmp
stos
sub
in
pusha
(bad)
mov
mov
jb
out
push
jnp
(bad)
mov
aaa
sbb
inc
add
xor
cmps
mov
and
lahf
jge
xchg
dec
mov
add
mov
pop
sub
movs
inc
mov
popa
in
and
mov
ins
adc
test
jl
cmps
push
add
push
dec
imul
nop
and
and
push
xlat
jnp
dec
push
fucomip
lods
sbb
js
call
ss
jnp
dec
jno
outs
daa
out
hlt
inc
in
adc
or
pop
cs
mov
push
ins
je
jmp
icebp
ret
adc
or
adc
cmp
jl
inc
neg
rcr
and
out
mov
idiv
push
dec
aaa
scas
mov
inc
test
pop
not
data16
cmp
movs
or
sbb
test
mov
mov
(bad)
out
test
rcl
sbb
jecxz
pop
pop
push
sbb
mov
repz
dec
push
inc
shl
push
xchg
lds
mov
fild
loopne
mov
dec
mov
mov
or
push
or
fs
icebp
mov
mov
mov
or
mov
cmc
pop
rcr
inc
clc
in
inc
rol
adc
pop
jge
cmp
sub
shl
xor
rcl
shr
mov
test
xchg
mov
and
ffree
sbb
je
adc
push
jae
mov
dec
jp
mov
dec
call
and
inc
and
test
xlat
aam
or
xchg
int
push
and
and
push
pop
pushf
arpl
push
inc
push
gs
out
inc
(bad)
jno
push
iret
int3
sbb
adc
sbb
jge
inc
pop
adc
(bad)
rcr
imul
in
jnp
sub
test
xchg
jp
movs
pop
rcl
fidivr
hlt
hlt
movs
and
pop
nop
das
mov
out
les
mov
lods
jecxz
push
mov
adc
cmp
mov
jle
pop
xor
arpl
inc
inc
cmp
and
pop
or
outs
mov
mov
shl
push
xor
mov
pusha
cmp
imul
xchg
in
fisubr
outs
rol
adc
jmp
push
sub
test
add
sub
cmps
jne
stc
xchg
and
fadd
push
xchg
xor
mov
out
pop
fsubp
loopne
out
jle
ja
mov
pop
mov
xor
mov
pop
cld
dec
scas
cmc
lea
push
mov
aaa
enter
in
mov
loop
push
dec
addr16
cmp
enter
jge
add
test
leave
rol
and
add
jmp
mov
mov
cmps
push
mov
out
pop
xchg
stos
xchg
aaa
pushf
sbb
jb
mov
pop
or
int
pop
push
add
loop
and
mov
jbe
xor
jecxz
xor
cmp
es
loopne
out
sub
into
(bad)
sti
jnp
aad
mov
or
push
jns
shl
or
das
int3
xor
inc
inc
dec
cli
sti
adc
pop
int
loope
pushf
mov
pop
and
cmp
clc
and
rol
(bad)
rol
out
std
xor
enter
loopne
in
repz
call
adc
inc
shl
sub
clc
push
clc
imul
shl
cmp
mov
rcl
cmp
push
push
cwde
sub
pop
loop
cli
fdivr
sbb
adc
call
jecxz
xchg
jno
pop
pop
(bad)
nop
xchg
(bad)
sub
jp
stos
xchg
vpavgw
pop
sub
xchg
dec
dec
pop
inc
pop
add
pavgw
push
xor
fdivrp
push
inc
add
sub
dec
ret
hlt
(bad)
adc
in
mov
push
sbb
test
shl
loope
add
daa
call
dec
cdq
bound
inc
mov
outs
mov
cmp
dec
mov
jp
add
in
scas
ret
js
adc
mov
pop
pop
xstore-rng
cmps
les
int3
xchg
jae
adc
test
cmc
pusha
arpl
test
or
mov
lods
sub
cld
push
out
adc
and
jmp
add
xchg
mov
mov
mov
bound
mov
and
adc
and
inc
dec
or
daa
call
addr16
pusha
loop
stos
pop
cmp
mov
lea
pushf
push
sub
adc
arpl
(bad)
xor
pop
pop
daa
push
movs
into
dec
inc
xchg
repnz
xchg
mov
and
mov
mov
sub
call
ja
xchg
das
jae
in
enter
push
pop
jb
lock
and
xor
sub
mov
outs
fadd
xchg
(bad)
cmp
jle
and
xor
jns
inc
xor
in
xchg
sbb
mov
cs
xchg
mov
inc
and
cmp
xchg
dec
jecxz
stos
int
xor
add
sub
push
ja
jg
(bad)
out
fnstsw
jmp
dec
les
pop
push
into
cmp
push
adc
cmp
fmul
aas
mov
add
or
data16
pop
cwde
aam
lea
and
and
movs
test
mov
call
sti
mov
repnz
stos
stos
dec
xchg
xchg
and
mov
movs
inc
push
sahf
cs
adc
jg
test
sub
dec
dec
fwait
adc
gs
pop
rcr
shr
bound
xchg
sub
push
int
outs
pop
xlat
xor
imul
mov
jl
out
mov
dec
ins
(bad)
push
shl
mov
jp
sbb
not
cmp
mov
pop
adc
enter
dec
lods
jmp
pop
stos
ja
clc
ja
jns
adc
push
movs
or
and
loopne
cli
adc
fistp
adc
jbe
sti
pop
mov
ja
repnz
or
or
rcr
and
jmp
mov
shl
jnp
adc
dec
jne
out
pop
pop
loopne
mov
jmp
in
pop
jne
xchg
test
das
dec
inc
adc
pop
jo
push
pop
mov
push
jnp
cs
mov
in
(bad)
xchg
clc
stos
inc
sub
lods
inc
dec
fnstenv
xchg
dec
movs
xchg
mov
sti
cs
jno
sahf
inc
fisub
test
fcmovne
sbb
cs
and
inc
cmp
ret
call
dec
movs
fiadd
mov
popf
and
jne
pop
shr
(bad)
fnstenv
cmp
mov
or
call
fwait
sbb
repnz
in
xor
add
scas
out
adc
ret
int
std
ror
les
sub
sbb
ins
pop
dec
fld
xor
sub
adc
ds
mov
jmp
rcl
in
fmul
ins
add
and
in
(bad)
pop
jmp
dec
xchg
adc
mov
hlt
rol
int3
ja
fistp
sbb
mov
sub
and
cmc
call
mov
aas
jb
or
test
pop
int
hlt
data16
(bad)
data16
shl
popf
mov
fstp
jo
dec
fst
mov
mov
addr16
cmps
ins
add
inc
enter
inc
ret
ss
xor
mov
push
or
pop
ret
jp
pop
adc
pop
add
push
or
jno
popf
stos
loopne
movs
ficom
pushf
push
or
test
hlt
jmp
cmc
cmp
fcomp
and
lea
cmps
jns
dec
and
cmp
push
inc
adc
retf
mov
out
pusha
xchg
lock
jne
sbb
outs
cld
push
loope
icebp
sub
iret
outs
adc
mov
rol
adc
in
push
pop
fisub
or
mov
cld
fbld
scas
push
loope
inc
sub
dec
pop
rcl
imul
sub
add
xor
pop
shl
xchg
scas
and
xchg
xchg
or
iret
mul
lahf
int
mov
mov
jno
add
fs
ja
push
ds
mov
je
cs
sar
mov
cmp
push
jns
pusha
cmp
hlt
call
icebp
out
sbb
shr
retf
sbb
or
jle
adc
into
or
popa
push
pop
sub
lea
xchg
into
xchg
out
int
psubsb
xlat
pop
std
retf
aam
or
stos
push
cmp
inc
imul
lock
lock
push
add
fidiv
sar
ds
outs
std
dec
pop
cmp
addr16
cmp
sbb
push
les
jle
call
stos
bound
or
int
jmp
xchg
imul
cdq
test
je
into
and
xchg
mov
in
jnp
dec
add
out
sub
or
mov
cmc
jmp
xor
pop
jns
ret
nop
imul
or
inc
call
hlt
add
loop
stos
int3
rol
into
jle
cmp
out
jns
pushf
cli
or
push
push
mov
mov
xor
shl
sub
lea
cmp
(bad)
jl
out
movs
rcr
dec
sti
or
mov
in
fadd
sbb
pop
dec
aaa
dec
lea
stc
mov
fucomi
pop
cli
mov
out
cmp
inc
cmp
mov
cmp
out
in
ss
xchg
inc
test
or
push
or
cmp
mov
out
inc
int
add
xchg
mov
and
xchg
cmps
out
fimul
clc
xchg
cmps
mov
cld
mov
lods
lea
mov
cmps
push
push
push
push
cdq
pop
(bad)
cmp
enter
nop
ds
ds
and
fnstsw
or
cwde
cli
ret
mov
lahf
push
mov
aaa
or
cwde
test
mov
jmp
repnz
jmp
ins
(bad)
loop
je
xor
pop
adc
mov
test
hlt
adc
push
mov
fcomp
dec
and
and
mov
in
pop
imul
cmp
cld
sub
arpl
out
xchg
pop
in
pop
loop
inc
mov
arpl
inc
xchg
mov
shr
lods
mov
lods
pop
cwde
adc
movs
inc
mov
pop
push
cmp
cmps
adc
sub
mov
ret
inc
pop
xchg
jae
nop
(bad)
cmp
(bad)
iret
mov
mov
retf
enter
mov
pop
push
div
mov
jle
jns
and
mov
imul
and
mov
inc
cmps
mov
std
pop
sti
dec
in
inc
jns
loopne
out
das
fwait
mov
cmp
add
push
or
pop
ins
push
dec
xor
scas
mov
ins
dec
adc
add
sbb
push
stc
adc
fstp
xor
cmps
ja
adc
adc
cmp
jno
add
mov
not
cdq
push
mov
es
bound
push
cmp
mov
add
sub
jb
xchg
stos
cmps
lods
cmp
aam
cmp
inc
jl
retf
repz
in
test
mov
ins
fstp
or
xchg
outs
mov
lds
jns
test
js
pop
rcr
fbstp
popa
lods
jge
pusha
imul
inc
adc
call
call
mov
inc
mov
loopne
push
xor
xchg
mov
sub
push
cwde
mov
pop
sbb
pop
mov
jg
inc
sub
in
popa
std
jle
jmp
mov
or
mov
fs
scas
imul
ja
push
sbb
loope
xlat
hlt
mov
icebp
or
(bad)
cmp
jp
jnp
lea
pop
and
dec
pop
dec
jns
sbb
retf
sub
imul
int3
xchg
lds
xor
push
ret
vunpcklpd
and
cwde
ins
cmp
xchg
idiv
pop
sub
sub
or
xor
sbb
mov
pop
stos
cmp
leave
clc
fidiv
into
xor
mov
ds
and
loop
cmp
push
cmp
scas
push
xor
loopne
mov
or
lea
xchg
sub
xchg
js
out
pop
mov
cmp
inc
inc
imul
stos
mov
dec
jecxz
adc
pop
(bad)
add
(bad)
mov
(bad)
push
movs
and
scas
xchg
jno
out
xchg
fisttp
bound
test
stos
add
test
xor
add
pop
pop
mov
pop
jbe
aad
shl
jns
sar
jb
nop
cmp
or
or
inc
clc
jo
sub
adc
fimul
js
or
dec
inc
inc
sti
scas
mov
mov
push
in
sub
call
cmp
jg
repnz
int
ins
ja
cmps
ds
icebp
lds
aas
push
sahf
pop
add
clc
mov
dec
xor
pop
adc
stc
jecxz
adc
dec
and
xor
push
sbb
inc
xor
push
fstp
jae
(bad)
leave
push
inc
or
and
and
retf
in
mov
push
jne
cmp
adc
xchg
call
int3
dec
sbb
jnp
sahf
push
daa
test
jb
ss
retf
mov
mov
aaa
sub
repnz
out
cli
or
nop
sbb
sbb
cmp
fs
sbb
cmp
addr16
sbb
mov
cdq
xchg
cmp
mov
xchg
xor
lea
dec
(bad)
leave
pop
sub
ror
scas
adc
fisubr
and
fild
inc
jecxz
imul
xchg
enter
je
adc
jmp
fwait
popa
or
push
dec
pop
jle
(bad)
jno
mov
sti
iret
pop
push
bound
sbb
addr16
jl
test
into
retf
dec
sbb
xchg
das
in
call
xchg
xor
jp
test
mov
cwde
cld
mov
xor
and
add
mov
(bad)
cdq
iret
mov
mov
dec
push
icebp
out
sbb
in
ds
jb
stos
jmp
in
adc
dec
sar
mov
(bad)
dec
pop
adc
sbb
add
jmp
and
cli
in
xor
clc
jmp
mov
ss
mov
fimul
(bad)
jb
jmp
es
add
mov
mov
and
dec
adc
ror
pop
outs
dec
sbb
jnp
ins
push
(bad)
fwait
and
lods
imul
dec
cmp
jle
mov
inc
jo
pop
icebp
xchg
lock
adc
ins
add
stos
in
jle
pop
ja
inc
jno
xchg
mul
repnz
pop
imul
cli
out
and
ins
js
cdq
fucom
mov
cmp
stc
mov
fcomp
inc
push
jae
js
ret
jae
pop
scas
aas
sahf
loope
sar
pop
mov
mov
mov
jns
pop
in
rcl
retf
push
dec
mov
sub
push
rcl
cmps
lods
pop
call
movs
enter
jno
pop
fist
push
jo
inc
dec
jl
(bad)
fwait
jle
(bad)
daa
ins
das
icebp
je
sar
(bad)
sbb
xchg
(bad)
outs
mov
data16
jle
lock
mov
push
test
cmps
out
cs
push
jb
arpl
in
push
mov
mov
pop
xlat
jno
std
rol
mov
inc
mov
pop
cmp
fcomip
pop
pop
sti
(bad)
scas
mov
sub
mov
jae
popf
jge
mov
mov
push
xor
loope
loope
jecxz
mov
leave
iret
adc
out
add
or
in
(bad)
ret
shl
sub
add
das
cmp
sbb
mov
sbb
movs
mov
fs
and
pusha
and
daa
cmp
mov
call
rol
pop
push
in
xchg
xchg
cmp
mov
cmp
cmp
pop
push
adc
adc
xchg
xchg
inc
pop
bound
not
pushf
nop
(bad)
jae
cmp
mov
mov
int3
out
mov
sti
les
arpl
das
mov
dec
cs
pusha
sub
pop
inc
sbb
call
add
popa
jnp
sbb
stos
push
mov
in
ror
sbb
shr
outs
inc
test
in
sbb
add
sbb
(bad)
scas
sub
in
fisttp
stc
in
aas
hlt
add
sub
jnp
ss
push
mov
push
xor
stos
xchg
pop
push
mov
int
rcl
into
pusha
dec
daa
or
arpl
sub
jge
mov
lods
mov
mov
sbb
fsub
jb
pushf
push
xchg
pop
push
fsub
mov
repnz
lds
pusha
aas
fdivr
outs
pop
mov
sbb
adc
out
adc
jp
test
test
mov
cld
push
in
daa
in
sti
aam
fwait
add
scas
inc
imul
pop
or
or
cmp
shl
and
inc
loop
cmp
dec
stos
lods
fidiv
push
pop
xchg
ret
push
sub
(bad)
pushf
xadd
sbb
pcmpeqd
shl
xor
stos
lds
sub
call
(bad)
and
mov
pop
pop
ja
(bad)
lods
hlt
lods
jp
sub
scas
inc
cs
dec
daa
mov
rcl
and
sti
and
or
lock
fst
(bad)
adc
fbstp
mov
pop
lahf
ins
out
dec
(bad)
rep
addr16
mov
jbe
sti
sbb
mov
ror
loop
popf
int3
pop
mov
popa
jne
sbb
addr16
pop
dec
push
js
fistp
pushf
test
cmp
ja
jno
stc
mov
(bad)
pop
(bad)
(bad)
ss
cmp
popa
cmp
sub
ret
lahf
mov
ins
dec
aas
lods
push
add
scas
outs
cwde
cmp
mov
xor
ja
nop
(bad)
mov
test
jne
xchg
jp
jb
jge
test
jmp
aas
xor
jp
or
cmps
pop
add
jbe
xchg
pop
cmps
pop
jns
sub
pusha
mov
pop
dec
popf
aad
sbb
push
pop
jno
in
mov
js
adc
push
sbb
jp
push
ret
and
stc
test
test
mov
or
std
cmp
shr
pop
sbb
sbb
cmps
push
hlt
hlt
push
cld
add
popa
jns
mov
jae
xchg
fwait
mov
adc
fcmovnbe
jo
mov
pop
mov
push
and
sbb
pop
sbb
cmps
dec
es
jg
adc
push
inc
clc
dec
call
aas
mov
or
adc
test
in
std
dec
pop
dec
adc
xor
jb
cmps
int3
shl
shr
jnp
pop
sbb
pop
test
mov
push
cwde
xchg
pop
or
xor
push
pop
repnz
rep
cmp
test
xchg
clc
clc
movs
jmp
adc
sub
mov
icebp
sti
add
movs
js
jecxz
mov
inc
cmp
mov
xor
stos
fcom
jnp
fs
pop
je
dec
sahf
sbb
ins
cwde
xchg
mov
dec
in
sbb
shr
sub
clc
pop
js
xchg
(bad)
ins
pop
jp
int
in
add
pop
xchg
pop
pop
(bad)
push
(bad)
aam
lods
enter
inc
mov
fnclex
mov
cmp
cmp
into
jge
ins
pop
pop
mov
pop
outs
pop
je
sub
movs
imul
ret
xor
jo
pushf
pusha
fisubr
das
xor
mov
in
push
push
fst
push
(bad)
hlt
call
cmp
and
icebp
add
outs
pop
xor
and
mov
add
add
cmp
or
xchg
clc
xor
pushw
add
or
loopne
in
shl
jle
cs
xor
sub
sahf
sbb
sar
inc
arpl
ins
(bad)
sti
aad
mov
cmc
shl
mov
sub
jmp
dec
aas
dec
pop
cld
or
xchg
inc
mov
lock
mov
ins
aam
mov
popf
ds
aaa
movs
lods
(bad)
pop
int3
cmp
mov
sub
jae
fidiv
int
fdivr
les
inc
jecxz
into
pop
loop
pusha
jns
cwde
push
sbb
xor
pop
mov
retf
mov
jbe
cmp
fist
sahf
stos
jle
addr16
jo
jl
mov
adc
test
test
popa
xor
pop
push
xor
dec
adc
add
xchg
dec
test
or
jle
outs
dec
add
sbb
adc
add
and
jle
mov
xchg
daa
mov
retf
shl
in
cmps
aad
sbb
push
xchg
call
jnp
inc
push
movs
pop
(bad)
out
sbb
add
jecxz
xchg
push
xchg
xlat
inc
jg
push
xor
jno
add
pusha
movs
or
into
lock
inc
retf
add
pop
mov
pushw
push
and
(bad)
ins
cwde
js
dec
mov
ret
or
gs
push
or
in
dec
inc
pop
out
sub
pop
pop
push
mov
(bad)
jae
pop
jne
or
sub
sar
and
int
jmp
dec
icebp
and
test
sub
or
lea
mov
dec
sar
jno
(bad)
or
test
push
cli
jp
xchg
retf
pop
xor
inc
mov
daa
adc
(bad)
xlat
adc
sbb
xor
inc
jmp
mov
jae
xchg
lahf
outs
jne
sub
add
lds
cmps
cmp
inc
aas
sbb
lods
cmp
pop
mov
cld
push
movs
cmp
sub
in
sbb
pop
push
xor
sub
dec
and
mov
(bad)
sub
test
iret
xchg
nop
push
and
and
mov
adc
inc
arpl
or
adc
dec
xor
cmp
mov
ins
aam
test
addr16
and
out
hlt
lods
add
push
inc
pop
not
addr16
in
retf
jb
add
nop
sub
test
ror
sub
arpl
(bad)
xchg
lahf
js
(bad)
mov
cmp
in
push
mov
hlt
fs
aas
pusha
inc
cmp
pop
jae
dec
xchg
pushf
xchg
retf
jl
mov
mov
cmp
jmp
into
jne
jo
mov
imul
int
cld
ret
and
push
std
aaa
sbb
or
mov
test
out
and
xchg
mov
fadd
retf
into
lock
cld
clc
popfw
dec
ror
xor
lahf
add
jns
push
js
je
push
int3
(bad)
mov
push
sbb
inc
loopne
cmp
mov
cli
imul
jne
pop
int3
dec
xchg
pop
(bad)
mov
arpl
mov
hlt
out
and
mov
sbb
pop
rcl
push
hlt
fwait
fwait
push
xchg
adc
scas
jo
mov
push
dec
fbstp
sbb
jb
push
push
push
add
push
aaa
fdiv
cmp
daa
out
jno
inc
or
bt
xor
daa
and
test
stos
xchg
or
popa
sub
xor
mov
outs
addr16
or
retf
push
xlat
sub
push
cmp
adc
or
pop
js
into
xor
mov
pop
cmp
push
in
mov
mov
jne
mov
cld
adc
xor
dec
repnz
push
lock
xor
into
shl
xor
inc
jmp
pusha
sbb
mov
inc
out
jae
inc
adc
adc
(bad)
test
or
and
ins
stos
adc
fist
out
rol
jecxz
fnsave
inc
test
ds
popa
jno
cli
mov
aaa
jmp
add
sbb
dec
pop
ja
mov
sub
popa
pop
xchg
mov
dec
xchg
(bad)
or
movs
xchg
(bad)
rol
xor
push
jecxz
cli
push
(bad)
jbe
pop
lds
test
out
js
in
pop
mov
xor
mov
(bad)
jmp
add
mov
pop
mov
mov
sbb
jmp
rcr
add
mov
and
adc
fimul
loope
jle
jmp
sub
mov
mov
push
add
fisttp
call
sbb
cwde
cli
mov
mov
loop
xlat
jmp
sub
std
add
push
in
and
mov
es
jne
cmp
stc
sbb
stos
cmp
inc
cmps
dec
sbb
mov
hlt
scas
addr16
pop
xchg
enter
inc
xchg
repnz
ins
sub
push
int
addr16
das
sbb
call
mov
hlt
mov
out
and
adc
adc
adc
fisubr
ret
adc
arpl
fist
sub
out
inc
pusha
scas
(bad)
sbb
xlat
xchg
in
cmps
and
mov
push
push
xchg
adc
sahf
pop
mov
test
xor
test
or
pop
pop
dec
das
cmp
div
and
adc
mov
sub
fs
fisub
enter
or
rol
jecxz
lods
cld
sbb
push
cmc
pop
adc
sbb
pop
push
(bad)
iret
push
xor
fisub
stc
inc
ins
loop
mov
mov
sahf
aam
lock
mov
fbld
lods
fist
imul
mov
add
mov
push
shl
fdivrp
add
sahf
cmp
fucom
sub
jne
stos
mov
int3
jmp
addr16
ret
sbb
arpl
pop
mov
xor
sahf
adc
or
les
adc
sbb
or
push
mov
and
jae
cwde
out
jbe
je
jle
jp
pop
sub
pushf
cld
jle
lea
data16
inc
addr16
jle
clc
push
xor
cs
(bad)
sub
xor
je
ins
int
stc
inc
adc
push
inc
xor
dec
scas
add
mov
inc
sub
mov
and
daa
dec
rol
jmp
mov
mov
in
mov
xor
not
js
mov
nop
loope
aad
mov
es
dec
(bad)
adc
retf
mov
pop
shr
out
ins
cmp
fidivr
sub
pop
add
jecxz
aaa
mov
adc
pop
jns
add
into
dec
shr
mov
in
jle
icebp
(bad)
aad
mov
js
xchg
test
in
sbb
jmp
cmps
(bad)
out
xchg
(bad)
iret
xor
dec
push
or
fcomp
pushf
inc
mov
mov
mov
or
push
cmp
cmp
xchg
xor
in
jbe
ds
or
pushw
inc
inc
and
retf
aaa
test
and
aam
xchg
push
leave
(bad)
sbb
jno
test
test
lods
push
je
in
or
xor
fdiv
bound
mov
data16
pushf
mov
ins
or
(bad)
push
dec
mov
hlt
mov
mov
pushf
hlt
xor
ffreep
sbb
lds
nop
inc
cwde
cmp
retf
imul
sar
pop
out
cs
mov
ja
out
jne
xchg
xor
movs
ror
std
cmp
movs
aas
jno
pop
cld
mov
fist
leave
xlat
sbb
loop
scas
call
and
add
add
jmp
cmovno
pop
not
rol
sub
jbe
mov
pop
push
inc
or
mov
pop
(bad)
ror
add
int
cmp
mov
xchg
fsubr
dec
loop
ss
xor
inc
pop
pop
and
push
sar
dec
pop
push
mov
adc
sub
pop
popa
mov
inc
movs
stos
(bad)
cmps
or
add
rcr
int3
in
add
jmp
in
lods
fisubr
cmps
dec
sar
mov
sbb
jge
mov
in
or
jbe
arpl
inc
jmp
sbb
pusha
imul
pop
xchg
inc
add
cmp
dec
inc
dec
sub
jno
push
rcl
xchg
inc
and
jmp
movs
shr
cmp
mov
push
and
sahf
mov
(bad)
pop
push
(bad)
icebp
test
cmp
gs
aad
rcl
call
aas
push
push
lds
push
or
inc
data16
enter
mov
push
push
xchg
loope
pop
and
iret
lock
fidiv
push
inc
push
mov
outs
and
mov
jg
daa
lods
mov
test
stos
mov
jmp
mov
icebp
sbb
clc
pop
add
shl
add
cli
sti
xchg
jg
repz
cdq
dec
dec
jle
or
mov
pop
mov
jmp
dec
jbe
jge
mov
xor
in
lods
(bad)
mov
cmps
xor
sahf
jecxz
adc
jne
retf
call
mov
lock
sbb
dec
aad
cdq
cmp
and
sub
dec
mov
mov
or
xchg
pushf
inc
and
adc
dec
xor
add
cmps
movs
popa
cdq
retf
fwait
xor
mov
xchg
(bad)
in
cli
jle
dec
jbe
lods
sub
popf
gs
sti
lahf
inc
sti
jne
jb
mov
push
and
cmp
inc
pop
jmp
cld
push
cwde
jb
add
xor
cdq
outs
jge
fnstenv
out
inc
out
mov
adc
jo
xchg
arpl
mov
push
add
and
scas
in
imul
dec
inc
dec
into
pop
sbb
mov
pop
ins
mov
stos
jno
mov
and
icebp
pop
cwde
jb
leave
loope
dec
lods
jge
adc
sbb
dec
xor
mov
imul
cvttps2pi
ss
push
stos
addr16
inc
out
cmc
mov
das
sub
sub
mov
inc
and
inc
test
call
imul
or
js
mov
and
pop
inc
mov
sub
fs
mov
cmps
push
mov
fdiv
mov
in
pop
add
push
mov
dec
shr
xor
push
int
repz
sub
mov
cmp
outs
sub
adc
push
pop
inc
aas
xchg
ja
retf
je
ds
popa
pushf
inc
mov
sbb
pop
mov
pop
inc
sti
add
dec
out
ret
sbb
dec
add
mov
fist
mov
add
pusha
iret
mov
mov
pop
xchg
jnp
push
and
pop
imul
dec
add
jle
stc
imul
add
push
nop
pop
outs
dec
xor
adc
jmp
ja
cmps
in
mov
repnz
xchg
outs
loop
hlt
enter
cmp
dec
test
xchg
fmul
test
lea
jge
or
push
mov
adc
mov
push
lock
cmp
retf
mov
mov
or
add
push
imul
push
xchg
push
loop
cmp
cmp
loopne
dec
inc
cmp
push
gs
push
mov
jp
pop
add
add
stos
cmp
jbe
adc
or
je
das
fdivr
ret
vorps
test
aam
mov
sub
cmp
xor
call
(bad)
mov
ficomp
fdiv
rol
and
inc
gs
inc
jae
sub
out
add
mov
gs
cs
lock
aam
push
and
dec
test
sahf
xor
jae
arpl
pop
cmc
test
push
mov
(bad)
jb
movs
fwait
xor
pop
pushf
pop
push
inc
mov
dec
loopne
push
jmp
jae
shl
fcomp
pop
dec
pop
shl
loop
jmp
inc
jo
jno
inc
daa
cmp
or
shl
push
sub
dec
jge
std
xor
cmp
std
dec
rcr
ret
cmp
push
jmp
sbb
outs
xor
lock
sbb
dec
icebp
add
push
addr16
ds
clc
(bad)
or
scas
xor
lds
stos
lea
dec
add
test
push
shl
or
ja
push
leave
repz
add
lods
fisttp
push
or
sub
pop
mov
sbb
mov
add
(bad)
or
(bad)
adc
aaa
xor
leave
push
rcr
in
adc
xor
fs
out
cmp
test
add
add
adc
sbb
stos
mov
lea
int
bound
fcom
loope
jbe
mov
jo
mov
xchg
imul
adc
loope
sub
inc
push
push
add
and
xchg
arpl
sahf
mov
test
cmps
sar
sbb
in
out
mov
clc
jge
jae
out
xor
jb
add
(bad)
add
mov
mov
loop
sub
inc
push
ja
aam
call
xchg
sub
loop
sub
lods
adc
retf
push
test
cmps
pop
loop
inc
cmp
test
(bad)
jo
mov
out
shl
jge
add
popa
fcmovb
add
inc
jo
call
mov
pop
inc
fst
cli
cli
or
popa
(bad)
or
(bad)
repz
movs
bound
xchg
mov
adc
pop
repz
cmp
gs
fwait
mov
and
add
jae
fsub
mov
std
ror
inc
xchg
xor
add
imul
lds
in
cmp
test
cmp
(bad)
out
xchg
icebp
sar
xchg
test
lahf
mov
xchg
outs
call
int
add
sub
add
jo
sub
sub
in
lock
es
cdq
jne
mov
(bad)
pushf
outs
inc
jae
mov
out
call
xor
xchg
frstor
frstor
fs
imul
mov
mov
push
push
fst
or
fcom
ja
mov
rcl
mov
jne
dec
mov
add
sbb
sub
(bad)
jno
std
loop
pop
cmp
adc
lods
and
pop
pop
mov
shl
mov
cmp
jecxz
jns
int3
inc
sar
sar
setae
cmp
in
push
pop
jo
or
cdq
pop
pop
cmps
mov
imul
jbe
sbb
daa
pop
cdq
imul
test
xchg
out
mov
jmp
rcl
add
lea
shl
push
cmp
stos
test
mov
hlt
add
sub
dec
mov
inc
adc
adc
test
ja
jecxz
(bad)
repz
mov
sbb
mov
add
xchg
xor
aad
jno
retf
cli
xor
and
push
jo
out
sbb
xchg
and
(bad)
nop
pop
sub
int
and
push
sub
nop
imul
add
pop
push
push
pusha
push
scas
mov
mov
and
cmp
sub
sub
popa
je
cwde
jae
imul
add
dec
mov
jecxz
(bad)
push
cmp
mov
sbb
pop
cmp
jl
jns
ss
add
push
getsec
fisubr
mov
jo
mov
std
fdiv
adc
popa
sti
stc
xchg
lds
inc
pop
movs
hlt
lds
fwait
cli
jmp
mov
mov
jae
sub
jmp
adc
mov
bound
adc
fld
dec
push
mov
test
push
fcmove
test
outs
scas
jle
or
dec
ins
pop
mov
icebp
add
pop
sbb
test
cmp
push
adc
call
js
sahf
pushf
and
int
movs
aad
pusha
pushf
dec
retf
cdq
push
outs
push
arpl
sub
repz
packssdw
movs
test
cmp
cmp
sbb
(bad)
fdivp
fsubr
cld
dec
out
lock
out
adc
imul
repz
jne
mov
sbb
pop
sbb
mov
jg
stos
or
in
jp
daa
push
cmps
pop
jno
xchg
xchg
jmp
test
jecxz
movs
mov
daa
jb
ret
xchg
aas
cwde
cs
pop
mov
dec
ja
int
sti
retf
repz
xor
push
cwde
jp
inc
in
lock
xor
push
test
dec
fwait
mov
cmp
jae
dec
xchg
ror
outs
arpl
cmp
lods
push
sbb
sub
mov
dec
aas
daa
cmp
daa
or
jg
jae
xor
jg
mov
gs
pop
mov
popf
mov
fsub
outs
jns
outs
adc
stc
fild
js
inc
mov
jg
jg
ins
movs
sub
cmps
and
outs
inc
jns
stc
inc
sbb
add
sahf
movs
mov
xor
lea
int3
call
push
rcr
push
cmp
stc
je
and
push
rcl
pop
test
push
cmp
mov
or
dec
scas
jle
mov
pop
xor
push
mov
pop
call
lahf
jne
adc
xlat
cmp
retf
leave
jnp
pop
mov
cmp
fcomp
lock
xchg
das
xchg
mov
dec
lods
or
push
inc
xor
ins
jbe
sub
push
sub
das
loopne
add
(bad)
test
rol
adc
bound
mov
and
mov
jmp
and
je
mov
mov
dec
mov
popf
pop
ds
xor
pop
daa
test
out
jp
cld
mov
fcmovu
mov
fisttp
hlt
pop
clc
stos
pop
mov
popf
dec
stos
adc
(bad)
pop
mov
xchg
sub
neg
xchg
sub
das
ja
rol
cmp
popf
dec
rol
mov
xor
ja
call
repz
sub
loope
ins
sbb
ja
jecxz
sbb
add
dec
lods
mov
push
outs
cmps
or
(bad)
cmc
cmc
fst
or
cmps
xchg
adc
fistp
cwde
mov
jo
imul
jecxz
pusha
mul
dec
daa
xor
aad
fadd
into
push
cs
scas
sub
loope
call
cmp
mov
dec
jge
push
retf
in
or
in
arpl
add
call
imul
jl
push
and
fld
dec
dec
out
sbb
pop
lds
movs
push
mov
mov
lock
repnz
mov
or
ds
dec
jne
std
std
movs
mov
outs
ins
pop
loop
fst
jne
mov
je
xchg
xor
push
pop
xor
push
bound
and
xchg
jo
js
sbb
mov
mov
in
dec
aaa
jmp
gs
scas
inc
sbb
add
or
mov
jecxz
pushf
add
outs
jns
sbb
mov
and
inc
add
mov
gs
sbb
fsubrp
repz
loope
xchg
mov
int3
pop
mov
loop
dec
and
mov
sbb
mov
fisubr
sub
cmp
mov
mov
popf
out
dec
test
rcr
rcr
in
mov
pop
dec
fxch
mov
or
sub
xchg
repnz
xor
pop
jb
in
loop
stos
enter
in
scas
jns
jmp
adc
int3
mov
sbb
or
adc
cmp
outs
jo
(bad)
aam
adc
jmp
sti
(bad)
cmps
mov
fwait
push
arpl
jmp
aas
cdq
arpl
pop
gs
loope
retf
pop
loopne
mov
push
adc
popa
imul
ins
mov
dec
pop
int
xchg
cmp
out
ja
and
or
dec
push
loope
dec
pushf
pop
jecxz
xor
pop
xlat
data16
cli
inc
mov
xchg
cmp
imul
imul
les
mov
cmp
adc
jle
sti
jecxz
mov
aaa
fwait
(bad)
mov
cmp
mov
fnsave
(bad)
fimul
jg
push
add
cdq
into
push
xchg
fisubr
(bad)
ss
mov
or
fdiv
and
or
shr
inc
arpl
ins
loopne
div
sbb
sahf
push
stos
clc
xchg
movs
add
ror
hlt
arpl
out
stos
xchg
(bad)
adc
int3
scas
imul
pop
pop
dec
push
xor
lea
add
sbb
in
(bad)
sbb
scas
test
iret
mov
add
jge
xor
ret
adc
cli
and
add
popf
sub
and
jno
aaa
icebp
ret
mov
hlt
push
out
iret
sub
mov
js
loope
xor
xchg
out
data16
nop
fnsave
add
ss
jae
mov
ins
out
dec
ins
shl
dec
mov
pop
mov
ror
lahf
sbb
push
cli
je
jmp
lea
cs
nop
mov
lea
test
neg
pop
xchg
adc
fisubr
pop
or
fld
inc
xchg
pushf
xor
mov
push
loopne
pop
retf
fidivr
mov
dec
and
sahf
adc
shl
push
cmc
imul
jo
aad
lods
cmp
ja
in
sbb
lods
mov
push
imul
popa
sar
mov
adc
int
xor
in
(bad)
mov
or
cmps
loopne
js
inc
repz
out
mov
jnp
jecxz
pusha
int3
xchg
loop
xor
arpl
mov
jbe
aaa
lds
in
push
xor
push
jp
scas
dec
adc
jne
stos
sub
dec
mov
rcr
outs
mov
test
or
or
and
lds
ret
int
aaa
fs
sbb
cmc
pusha
push
pushf
sbb
mov
mov
aad
jmp
loope
push
ds
ds
sub
and
jno
bound
xchg
fsubp
test
cmp
out
stos
mov
mov
inc
repnz
dec
add
add
sbb
jle
cs
add
add
mov
popa
cmp
pop
movs
push
repnz
push
inc
movs
sbb
adc
movs
fyl2x
repnz
jne
pushf
sbb
pusha
inc
jnp
xor
pop
test
das
dec
outs
xchg
and
jmp
out
and
int
cli
sub
jmp
push
sub
retf
scas
lds
test
push
mov
xor
dec
in
das
xor
lds
pusha
int3
sub
xchg
(bad)
out
movs
mov
in
or
mov
stos
loope
hlt
jg
scas
cmps
inc
cmps
jbe
sahf
jge
mov
lods
mov
lahf
sub
adc
xor
sbb
repnz
retf
mov
adc
jb
sbb
movs
out
sbb
sub
mov
dec
in
popa
jae
retf
xchg
movs
outs
aas
xor
lods
inc
sbb
mov
cmc
sub
jo
stos
push
inc
add
pop
shl
imul
xor
xchg
push
jb
sar
mov
rcr
inc
ins
test
fmul
pop
sbb
out
jecxz
call
mov
mov
out
xchg
popf
mov
jmp
in
loope
sub
idiv
imul
mov
mov
call
pop
test
mov
push
sub
dec
dec
int
call
std
inc
push
test
and
xor
(bad)
mov
loopne
fistp
xchg
add
(bad)
daa
dec
pop
ja
jmp
stos
(bad)
test
stos
pop
std
test
add
mov
inc
test
call
xchg
inc
mov
inc
into
popf
int3
lahf
bound
adc
stc
rcl
cmps
fisubr
popf
lock
fdivp
sub
jg
(bad)
hlt
test
or
loope
cmps
mov
ds
shr
mov
shl
pop
stos
and
mov
jae
xchg
icebp
pusha
pop
xchg
cmp
adc
aaa
sub
dec
sub
sbb
xor
pop
(bad)
in
in
pop
cmp
xor
jo
mov
xchg
loope
in
call
adc
add
cld
stos
out
cmp
lea
add
jg
inc
cs
cmp
push
ins
(bad)
jmp
stc
push
pop
cmp
mov
pusha
mov
test
hlt
jge
fdiv
jae
and
push
mov
lods
mov
ffree
jg
sahf
push
gs
mov
fcomp
add
mov
(bad)
sar
mov
outs
jnp
nop
fsubr
addr16
mov
jnp
imul
jge
in
ror
cmp
xlat
dec
(bad)
shl
mov
mov
lock
stos
sub
xor
inc
shl
sub
addr16
inc
sar
adc
add
pop
mov
and
add
pop
fdivrp
or
or
repnz
xchg
arpl
sub
push
mov
jbe
and
adc
xchg
dec
arpl
add
(bad)
and
dec
dec
sbb
jle
mov
xchg
sub
out
fbstp
dec
jecxz
push
sbb
cli
sbb
pop
fsub
ror
and
pop
into
rcr
ds
ret
push
sub
movs
xchg
fimul
es
or
xchg
cmps
sub
push
das
xchg
gs
xor
add
sar
arpl
imul
leave
sbb
sbb
test
sar
adc
repnz
fisttp
aam
push
or
ja
mov
mov
stos
pop
cld
inc
mov
movs
push
hlt
inc
out
lock
out
sub
add
scas
aad
inc
jecxz
inc
xchg
das
xor
imul
or
add
cmc
cmp
scas
scas
bnd
adc
cmp
out
mov
and
std
jle
je
add
dec
pop
xchg
inc
or
xlat
mov
out
clc
cmps
and
sahf
clc
dec
int
adc
mov
loope
add
or
call
or
add
pop
push
in
sub
jmp
stos
repnz
ret
pop
daa
adc
scas
add
add
add
in
shl
sub
lock
fmul
xchg
add
pop
fs
ror
test
xchg
mov
mov
jmp
mov
js
stc
dec
push
jl
fcomp
les
imul
rcr
adc
ins
pop
ins
push
sbb
push
adc
fldenv
push
cli
add
(bad)
and
jecxz
ret
fcmovne
imul
sbb
jne
xchg
or
pop
jns
mov
into
jg
mov
and
cld
sar
mov
add
(bad)
leave
mov
dec
push
sahf
push
mov
push
aaa
nop
cmps
push
ds
mov
dec
xchg
jmp
dec
xor
sbb
mov
fidivr
mov
fadd
push
cs
shl
mov
test
inc
mov
mov
ficom
pushf
rcl
mov
jmp
xchg
add
loope
cmp
push
pushf
fstp
test
xchg
retf
and
(bad)
popf
dec
repz
aad
add
rol
lahf
jno
je
data16
out
mov
sbb
cmp
inc
loope
jg
cmp
sub
mov
pop
movs
retf
dec
xchg
dec
push
mov
rcl
shr
mov
add
fimul
in
mov
adc
add
dec
cmp
or
pop
inc
cdq
shr
pop
lods
fs
jmp
bound
sub
push
ins
sbb
pushw
cdq
inc
int
dec
and
pop
jecxz
pop
js
mov
sbb
mov
mov
(bad)
clc
ret
sbb
test
inc
jg
and
push
aad
hlt
adc
pop
cmp
pushf
ror
ret
rcr
in
lods
lods
push
mov
iret
push
adc
ret
adc
cmp
pop
pop
ja
xor
mov
es
mov
dec
(bad)
data16
xchg
out
mov
lds
mov
lock
inc
inc
sbb
sahf
inc
aam
and
icebp
les
aaa
or
sub
cmps
(bad)
stos
dec
mov
xchg
fld
add
sub
test
push
ja
mov
or
mov
wrmsr
shl
test
jae
adc
sub
outs
hlt
jbe
jns
jno
adc
jnp
dec
inc
push
sahf
inc
adc
or
call
(bad)
leave
sbb
adc
rcl
fimul
test
test
mov
adc
imul
(bad)
nop
lds
out
sub
outs
mov
in
pinsrw
mov
sbb
cmp
jno
stc
fisubr
sbb
mov
aam
hlt
xchg
rdmsr
lds
(bad)
loopne
dec
out
(bad)
cmp
add
xchg
jns
pop
pop
push
loope
add
xchg
mov
jecxz
push
popf
jmp
cwde
mov
outs
shl
lock
mov
popf
imul
ret
popf
ret
mov
gs
fnstenv
pop
arpl
fistp
lods
sar
(bad)
repz
bound
jmp
bound
idiv
rcr
push
js
(bad)
in
inc
js
test
mulps
test
mov
mov
rcr
xchg
dec
aam
lea
xor
stos
out
adc
mov
in
rol
xor
inc
mov
sbb
push
cmps
jp
(bad)
push
inc
inc
add
cmp
xor
jb
or
add
xor
std
pop
cmp
dec
dec
cmp
xchg
fdiv
(bad)
pusha
pop
push
pop
les
sub
ins
sbb
mov
das
or
jbe
mov
mov
xchg
into
mov
push
sbb
mov
loope
daa
pop
movs
xchg
dec
out
rcl
clc
pop
ficomp
cmc
mov
push
jge
stos
push
xchg
(bad)
lock
add
mov
cwde
mov
xchg
adc
outs
in
add
inc
or
mov
out
push
adc
pusha
jle
inc
add
xchg
mov
xor
and
xor
in
ja
push
rcl
adc
add
enter
jo
aam
or
add
mov
rol
adc
jge
mov
fld
js
jmp
test
pop
pop
mov
(bad)
in
mov
nop
aad
retf
movs
in
fbld
pushf
adc
adc
dec
div
xchg
lea
test
fdivr
call
retf
and
jmp
clc
std
pusha
and
rcr
jp
xchg
inc
aas
xchg
mov
movs
retf
mov
jne
adc
mov
(bad)
xchg
mov
sbb
sub
data16
mov
rcr
push
mov
jno
push
cmp
cli
sti
mov
push
mov
loop
and
xchg
mov
mov
lock
iret
hlt
cmp
cwde
xchg
int
or
test
add
mov
jb
(bad)
sbb
jecxz
fisttp
cmp
es
sbb
mov
push
inc
pop
das
and
call
into
inc
xor
dec
pop
mov
xchg
adc
scas
xchg
xchg
push
and
(bad)
pop
fisub
cmp
add
bound
(bad)
push
cwde
loop
dec
fwait
fs
arpl
xor
fcmovnb
sub
das
inc
mov
pop
dec
xchg
movs
movs
xchg
sbb
mov
add
(bad)
lds
in
icebp
push
sbb
push
add
out
rcl
stc
push
cmp
inc
sar
in
mov
ficomp
or
mov
ss
loope
xchg
enter
sbb
stos
in
cmps
stc
cmps
(bad)
jmp
push
xor
jb
rol
(bad)
xor
or
jge
sahf
mov
xlat
mov
stos
jno
pop
cmps
sub
mov
leave
xchg
rcl
mov
fild
fnstcw
xchg
jnp
sahf
clc
fsub
cmp
mov
sbb
jne
gs
in
arpl
cmp
fsubr
pop
aad
test
mov
mov
jl
sar
(bad)
push
fst
jmp
clc
xchg
add
ret
inc
adc
xchg
mov
push
clc
pushf
nop
jle
shl
rcl
cmp
rcl
xchg
adc
mov
sub
int3
pop
shl
push
in
popa
push
sahf
jp
and
mov
test
cld
xlat
jne
(bad)
pop
mov
lea
repnz
sti
xchg
loope
xchg
mov
dec
sbb
xor
add
cli
clc
stos
outs
call
push
in
loope
loop
inc
test
stos
pop
aad
sbb
or
jecxz
ss
rcr
xor
sbb
in
xor
jns
adc
xor
into
gs
out
cmp
push
shr
cdq
fcmovbe
xor
mov
call
sub
inc
sub
sar
xchg
mov
mov
adc
xchg
loopne
lds
ins
mov
(bad)
repnz
ret
arpl
cmc
repz
in
push
es
icebp
xlat
shr
jmp
pop
cmps
jo
stc
push
dec
and
or
dec
imul
inc
xchg
bound
dec
or
stos
and
fdivr
outs
test
or
mov
retf
sbb
iret
adc
pushf
or
les
and
out
xchg
adc
push
aam
mov
loopne
out
fsubr
pop
call
adc
jmp
into
xor
dec
sub
add
mov
add
inc
popa
cdq
push
lds
mov
fmul
sub
rcr
pop
loope
inc
cmp
inc
nop
stos
fwait
or
aad
out
sbb
mov
call
jmp
jge
mov
in
xchg
mov
cld
mov
les
push
xchg
xor
dec
xor
mov
sub
mov
push
xchg
xchg
mov
push
sbb
adc
jmp
in
outs
retf
jecxz
in
mov
es
stc
out
sar
push
xchg
jmp
dec
mov
jp
pop
jge
int
cs
adc
jbe
(bad)
cli
ret
ja
xchg
das
test
cmp
cmps
nop
cmps
xor
lods
outs
or
in
xchg
cmp
jmp
cmp
lods
mov
xor
ins
mov
clc
call
gs
retf
mov
xchg
std
ss
mov
push
stos
mov
push
push
xor
ret
lahf
daa
mov
push
dec
mov
push
push
repz
ins
cdq
call
push
imul
test
push
jno
call
xor
(bad)
test
xchg
aas
push
inc
push
xchg
push
jp
mov
inc
ins
int
push
fidiv
jg
pop
xor
repnz
imul
push
add
test
pop
inc
inc
dec
xor
push
xchg
mov
movs
sub
dec
inc
icebp
push
lock
inc
mov
stc
and
js
es
or
inc
enter
and
addr16
out
sub
mov
lock
push
mov
jo
xor
retf
push
leave
vpsubb
jae
icebp
mov
adc
push
retf
mov
movs
cmp
call
add
mov
mov
cdq
sahf
fistp
pop
and
mov
mov
jb
dec
add
daa
cmp
ja
call
add
cmc
cs
popf
pop
adc
jmp
dec
xor
popf
sahf
test
shl
pop
jmp
imul
in
fmul
pop
jp
xchg
stos
in
imul
xchg
in
pop
mov
xchg
ret
dec
pop
dec
xchg
inc
ins
sti
mov
repnz
aad
loopne
dec
and
fcmovbe
es
mov
mov
ss
icebp
xchg
mov
addr16
sub
in
test
fmul
in
outs
jmp
sub
dec
and
dec
fs
mov
mov
pop
ss
stc
inc
rcr
jle
cli
retf
mov
fnsave
inc
int
in
shr
int
es
push
lods
or
push
mov
push
mov
add
(bad)
js
jecxz
loope
into
(bad)
(bad)
pop
sbb
or
mov
lock
sbb
cmps
xor
clc
and
xor
leave
lea
add
das
dec
xchg
sbb
jecxz
sbb
int
xor
and
and
mov
shl
cmc
pop
dec
push
jl
stos
mov
rcl
aam
mov
aam
push
enter
xchg
inc
push
dec
scas
fisub
retf
push
div
sar
sbb
mov
or
lds
push
popf
dec
sub
fwait
xor
xor
mov
inc
xchg
gs
or
pop
stos
out
inc
and
mov
or
xchg
rcl
mov
xor
jne
fs
aaa
pop
ins
in
jmp
pop
push
mov
sub
loop
jb
sub
out
jmp
cs
pop
gs
jg
dec
lds
sub
push
sti
ror
xor
sub
call
adc
pusha
or
xlat
or
(bad)
outs
jecxz
cwde
jnp
fisttp
je
int
jb
sbb
repnz
and
(bad)
aas
movs
or
sub
inc
ret
in
xchg
mov
lods
sub
or
or
push
dec
add
xlat
outs
push
out
dec
pop
inc
pop
inc
mov
mov
xor
fisttp
mov
mov
(bad)
push
cmp
rcr
repz
or
loope
aaa
cmp
cwde
xchg
outs
mov
(bad)
jno
add
shr
retf
and
imul
scas
retf
jb
sbb
leave
mov
cmc
outs
mov
movs
xor
jl
sbb
pop
aas
outs
jne
jl
ret
jp
outs
xor
movs
sbb
std
sti
mov
push
mov
cmp
pop
cmp
add
and
add
(bad)
mov
jmp
push
mov
movzx
out
and
and
call
retf
outs
std
add
jp
sbb
mov
and
cld
xor
xor
cmps
jb
or
mov
dec
pop
mov
fwait
pop
fucom
add
aaa
sbb
pop
push
mov
adc
idiv
imul
sbb
xchg
and
out
xchg
adc
xchg
mov
cwde
(bad)
in
dec
mov
jo
inc
rcr
sbb
xor
out
pusha
mov
int3
and
pop
inc
cmp
in
mov
sub
pop
(bad)
push
or
ds
(bad)
and
push
push
jl
jle
xor
adc
sbb
icebp
sub
fwait
jmp
es
inc
and
popa
inc
pop
adc
int
or
inc
retf
sub
outs
data16
mov
inc
sub
mov
pop
loop
add
mov
fcomp
xor
sbb
xchg
mov
cmp
jmp
cmp
jne
sbb
xchg
push
add
and
mov
scas
cmp
and
(bad)
adc
rcl
ja
mov
fldenv
xchg
js
rcr
cmp
sbb
gs
inc
jnp
cwde
int3
push
inc
int3
movs
mov
jl
je
icebp
xchg
ins
retf
sub
jecxz
aad
xchg
jns
sbb
dec
sub
arpl
popf
jle
sbb
xchg
dec
pop
pop
rol
call
pop
ficomp
mov
jae
mov
test
nop
or
pop
and
jnp
or
outs
ins
enter
push
rcr
rcl
inc
mov
dec
mov
add
or
xchg
hlt
xchg
xlat
dec
mov
rcl
push
mov
jmp
fcom
pop
int
and
add
push
mov
fadd
ja
jmp
dec
dec
xor
cdq
push
push
fxch
dec
es
shl
retf
jno
sbb
push
out
adc
fs
sahf
test
xor
sub
sub
mov
sbb
push
adc
jp
movs
idiv
sbb
fld
daa
dec
and
fadd
ds
cdq
pop
and
inc
je
pop
jmp
cmc
add
push
xchg
xor
not
js
mov
mov
jnp
inc
test
jmp
sbb
xor
mov
mov
fist
jp
arpl
movs
xor
call
fnstcw
xor
add
sar
stos
div
mov
ins
(bad)
mov
cmc
push
jne
mov
jbe
inc
mov
mov
les
mov
(bad)
imul
stos
mov
call
pop
pop
ja
mov
jne
sub
idiv
sahf
mov
mov
adc
loop
lods
lock
push
int3
scas
movs
pop
xchg
dec
int3
rcr
lods
cmp
mov
push
adc
test
adc
dec
imul
jns
sbb
and
cmp
mov
sub
and
int
daa
pop
sbb
jbe
dec
out
mov
(bad)
mov
sub
mov
jecxz
jno
int
and
mov
and
cmp
and
sub
push
sbb
in
push
icebp
ins
clc
ret
push
inc
inc
jno
or
test
mov
push
xor
lock
jmp
mov
xchg
mov
pop
push
(bad)
imul
push
adc
push
add
scas
inc
xchg
(bad)
out
cmps
or
sbb
je
pusha
js
mov
sbb
pop
push
push
adc
sbb
ds
aam
hlt
jb
xchg
mov
dec
xor
sahf
adc
sbb
fild
pshufw
(bad)
jl
jo
mov
adc
xor
cmp
je
jmp
sar
retf
jmp
dec
pusha
aad
aaa
cmp
add
adc
adc
pop
xchg
xor
cmp
jmp
daa
and
cmps
in
push
outs
jmp
xchg
mov
loope
push
pop
call
inc
or
aas
cmp
repnz
xor
jl
sbb
sar
cmp
xchg
enter
icebp
pushf
in
add
inc
dec
jno
not
(bad)
das
jmp
sub
sbb
mov
mov
fs
js
xor
sub
aas
pop
and
jecxz
cmp
ror
cs
or
inc
outs
or
cwde
lods
cli
mov
pop
inc
xchg
mov
mov
inc
mov
movs
cwde
sub
dec
lock
push
div
sbb
in
fs
test
(bad)
rcl
mov
add
int
stc
shl
cli
add
mov
xlat
ss
inc
or
stos
pop
cld
adc
dec
inc
cmp
ffreep
inc
jecxz
mov
pop
leave
sbb
call
mov
and
bound
hlt
add
jno
mov
popa
in
ins
mov
push
not
xor
mov
sbb
inc
loopne
cmp
push
inc
xor
xchg
dec
jbe
sub
data16
mov
fild
jno
ins
test
push
jo
js
mov
and
pop
xor
addr16
sub
int3
push
push
stos
into
fidivr
mov
out
and
jns
push
mov
pop
mov
in
out
add
pop
in
int
sbb
mov
pop
sbb
dec
xchg
and
cwde
xchg
outs
add
lds
iret
sti
mov
or
push
scas
mov
enter
les
adc
pop
aas
repz
mov
xor
push
fmulp
pop
jge
mov
repnz
mov
std
cmp
rcl
mov
cs
mov
nop
xchg
push
mov
in
popa
inc
lahf
xor
into
call
pop
mov
sbb
pop
inc
xchg
iret
push
enter
bound
mov
sub
push
int
pop
pop
scas
mov
mov
shl
adc
xchg
sbb
push
outs
iret
jno
in
pop
outs
sahf
push
xlat
and
out
xchg
or
sub
cmp
lea
ins
stos
mov
(bad)
aam
inc
das
nop
or
mov
push
lea
add
sub
jbe
push
mov
ins
sahf
pusha
inc
fwait
cmc
fwait
bound
mov
jle
in
ror
cmp
inc
movs
jmp
inc
xor
in
jmp
lods
sbb
(bad)
pop
push
mov
mov
icebp
xor
or
call
aam
jbe
inc
out
mov
cmp
in
movs
test
pushf
mov
push
cmps
cmps
xor
sahf
scas
push
imul
bound
outs
(bad)
sub
push
(bad)
rcl
not
mov
mov
mov
add
push
cmp
lds
sub
test
imul
shl
and
adc
and
pushf
or
mov
dec
sbb
sahf
pop
push
lock
pop
test
inc
(bad)
mov
and
test
add
aas
hlt
add
dec
call
xchg
inc
lahf
(bad)
xor
jmp
stos
adc
out
test
sbb
pop
fs
mov
sub
pop
xchg
jnp
xchg
jns
add
inc
enter
push
dec
fs
xchg
xor
sar
sub
jmp
pop
sub
sbb
pushf
add
mov
jo
dec
push
mov
cmp
pop
shl
leave
adc
push
adc
into
clc
inc
cmp
sbb
test
push
and
jl
jge
pop
rol
push
sahf
cmp
outs
sub
sbb
(bad)
ret
les
in
mov
add
mov
cmp
iret
lea
cwde
lods
xchg
dec
std
inc
icebp
add
inc
(bad)
xchg
mov
adc
pop
sbb
les
xchg
mov
movs
outs
jmp
dec
or
cmc
dec
mov
mov
sub
mov
enter
xor
ss
mov
data16
in
push
or
or
call
test
ins
xor
cmps
pop
fidiv
xchg
add
gs
call
aad
xchg
scas
shr
aad
and
mov
fmul
mov
inc
jo
outs
mov
test
(bad)
int
stos
(bad)
sbb
fsubr
out
sbb
pop
gs
call
mov
ss
(bad)
jle
outs
cpuid
aaa
fstp
jnp
(bad)
sar
mov
out
cmps
pop
test
pusha
not
or
out
inc
das
or
les
sbb
mov
jns
scas
js
xchg
je
mov
bswap
repz
and
out
mov
sub
mov
add
pop
scas
cmp
cmps
cmp
jno
je
inc
in
psubusb
push
push
mov
js
jl
call
sbb
in
(bad)
sbb
mov
sbb
fild
dec
pushf
ins
out
call
add
cwde
mov
test
fwait
sbb
shl
movs
test
add
les
jbe
mov
(bad)
jae
ja
push
and
add
leave
cdq
cmp
stc
jp
ins
clc
je
xlat
fild
scas
mov
cli
mov
pop
add
pushf
retf
jae
mov
or
jns
sub
dec
mov
mov
dec
mov
(bad)
lahf
(bad)
xor
fadd
inc
inc
sar
adc
mov
mov
lods
loop
retf
lods
xor
xor
push
sbb
lea
fild
test
das
data16
sbb
cs
inc
jnp
rol
jg
pop
adc
cmp
sub
add
lahf
add
xor
mov
jp
xchg
mov
mov
mov
enter
fimul
shr
test
pop
sahf
xor
sub
imul
repz
xchg
mov
xlat
repz
add
xor
and
fstp
fdivr
cli
dec
and
(bad)
loope
es
jnp
sub
jne
ins
push
sub
lea
sub
jmp
leave
jmp
ret
mov
sub
les
cmps
and
xor
sbb
stc
ss
push
xchg
(bad)
mov
mov
xcrypt-ctr
cmps
sbb
xor
jns
adc
jmp
mov
dec
imul
popa
sub
jmp
mov
nop
aad
mov
cmp
stc
sbb
inc
loope
or
loop
cwde
jg
ss
lods
push
in
arpl
inc
xchg
imul
mov
mov
add
push
add
cmc
and
hlt
adc
adc
and
sub
xor
loop
pop
stos
xchg
ins
xchg
cmps
cmps
sbb
or
test
mov
fisub
push
popf
sbb
pop
std
xor
mov
repz
ret
adc
dec
push
inc
or
lahf
mov
gs
sbb
les
aaa
clc
mov
(bad)
loop
lods
call
adc
inc
jo
push
mov
dec
jnp
icebp
or
jo
jg
adc
xlat
push
adc
and
call
dec
popa
sbb
and
inc
mov
add
sbb
and
mov
dec
dec
cmp
repz
mov
mov
mov
leave
jae
sahf
aam
sti
mov
movs
bound
push
in
mov
adc
inc
xchg
adc
push
test
mov
adc
pushf
sub
rcl
movs
mov
lds
fwait
ja
test
data16
xor
outs
fucom
mov
out
arpl
mov
aam
xchg
sub
gs
xchg
push
div
sub
imul
jl
cmp
or
pop
adc
sbb
(bad)
(bad)
out
jbe
or
dec
sbb
cld
mov
push
cmp
push
popf
push
(bad)
movs
imul
pop
aaa
push
(bad)
xchg
fs
push
mov
cmp
or
daa
jge
mov
cmc
jp
lods
cli
cmp
loopne
push
aas
call
pop
loopne
jl
imul
jge
sar
sub
cmp
xchg
and
(bad)
cmp
je
leave
jecxz
mov
out
cmp
iret
jno
popa
ror
adc
addr16
adc
rcr
fild
leave
out
aas
pushf
xchg
mov
mov
loop
cmp
mov
jl
stos
hlt
pop
and
add
aad
dec
pop
sub
pop
mov
fmul
pop
adc
sub
cmps
ret
push
popa
fnstsw
arpl
mov
inc
xchg
dec
dec
leave
mov
pusha
pop
mov
push
test
sbb
fs
sub
mov
or
popa
daa
rcr
inc
add
or
mov
jne
lods
call
fdiv
jns
pusha
add
cld
inc
ja
cmp
ins
cmp
gs
add
aas
in
cmps
scas
movs
mov
dec
ja
xor
dec
stos
ins
pop
xor
je
xchg
sub
sbb
push
stos
ret
aas
pop
es
inc
sbb
xchg
test
scas
out
mov
out
and
data16
pop
cmp
sub
push
jp
cdq
retf
ror
sub
and
repnz
retf
fimul
scas
scas
imul
sub
pop
sbb
mov
rol
cmp
lods
aad
out
jno
arpl
xchg
cld
iret
mov
xchg
sub
sahf
rol
push
mov
gs
sbb
mov
jnp
mov
lea
dec
ss
loopne
repz
mov
adc
cmc
sub
aas
mov
mov
xor
and
stos
dec
fucomi
push
out
fs
je
push
dec
cmps
sbb
mov
xchg
fcmovne
jno
mov
jne
mov
sbb
mov
clc
fldcw
jb
fnstcw
mov
adc
add
pop
push
dec
gs
(bad)
push
cmp
mov
or
mov
in
xchg
das
xor
push
push
je
es
sti
push
and
mov
clc
pop
xor
mov
addps
mov
movs
and
fs
call
mov
fisubr
pop
popf
sbb
push
pop
into
shr
pushf
(bad)
cmps
(bad)
test
pusha
das
retf
cmp
ret
pop
les
into
cmp
popf
push
inc
push
xchg
repz
and
cwde
adc
mov
mov
stos
adc
dec
in
fild
push
jp
add
in
inc
popa
movs
in
pop
pusha
shr
dec
loope
dec
loope
fwait
rcr
mov
mov
mov
shl
sbb
sbb
loop
xchg
mov
cmp
jo
mov
cmp
repnz
xor
push
js
scas
icebp
test
(bad)
push
nop
inc
jmp
arpl
mov
pop
sbb
dec
adc
mov
ins
xor
js
xor
sub
push
dec
lock
inc
in
dec
inc
mov
pusha
inc
pop
xchg
xchg
dec
cmp
in
aam
push
fld
fnstsw
leave
inc
imul
push
push
cmc
and
dec
in
xchg
mov
imul
fstp
jb
jb
test
cmp
adc
mov
dec
outs
in
les
out
mov
push
xchg
aam
sub
cs
jl
pop
jecxz
mov
aas
add
jmp
inc
in
mov
mov
and
cld
popf
movs
imul
sbb
(bad)
or
stos
cmp
pop
cmp
dec
fistp
xchg
xchg
iret
or
js
jle
sbb
mov
sbb
sbb
inc
repz
lods
pop
gs
std
jnp
mov
or
sub
mov
pop
int
or
jne
or
jbe
mov
bound
fldcw
jae
sbb
xor
mov
das
sbb
sahf
push
and
dec
or
and
sub
fstp
repnz
out
cmp
es
jmp
lods
pop
xor
into
scas
xchg
or
(bad)
retf
inc
call
jnp
adc
loopne
pop
cmp
(bad)
dec
loop
and
dec
mov
mov
xlat
out
or
sahf
pop
xor
ror
and
cmps
adc
mov
push
gs
pop
push
das
data16
mov
and
and
cld
pop
fdiv
rcl
stos
pop
mov
jl
adc
xor
mov
add
adc
add
mov
push
sbb
add
jg
pop
out
sbb
push
push
clc
cmps
mov
es
push
js
mov
inc
sahf
sbb
jns
push
es
pop
hlt
lock
inc
inc
dec
jmp
aas
xchg
add
aas
sbb
push
out
and
test
pop
enter
xlat
test
clc
mov
enter
enter
jmp
pop
out
data16
push
lds
ja
pop
int3
int3
test
mov
jo
pop
cmps
mov
(bad)
ins
sub
fild
retf
int3
mov
fistp
clc
clc
cmp
leave
aaa
and
dec
hlt
pop
mov
inc
pushf
outs
xchg
and
pop
pop
dec
iret
push
lods
pusha
dec
dec
pop
mov
aaa
cmp
es
cwde
repz
jo
dec
push
pop
xchg
xchg
jp
adc
das
fwait
mov
rcl
sub
fistp
dec
or
inc
fwait
popf
rol
popf
sbb
pop
and
mov
cwde
mov
pop
sub
fmul
jl
xchg
outs
pop
mov
mov
cmp
cs
xor
adc
inc
fdivp
dec
shl
pop
idiv
pop
jmp
icebp
je
jp
xchg
dec
aas
add
shr
je
adc
fs
adc
and
inc
sbb
xchg
sbb
leave
into
pop
jbe
fs
aad
fistp
out
and
mov
outs
popf
stos
adc
dec
les
xchg
cmc
mov
aad
xor
sbb
and
dec
mov
sti
hlt
jo
int3
mov
jl
mov
cmp
inc
pop
sti
sbb
sub
les
mov
bound
push
aad
dec
int3
push
jbe
leave
inc
or
arpl
jb
add
rcl
sbb
in
cld
(bad)
clc
pop
jl
sub
push
in
pop
rcr
sub
int
jge
movs
mul
sub
or
imul
push
out
call
sub
sti
cmp
not
mov
or
lea
mov
inc
mov
jle
cmp
sub
or
div
jl
or
or
add
xor
push
lods
mov
xor
mov
lods
arpl
fucomp
xor
rcl
dec
jae
dec
and
or
push
out
or
ins
iret
xchg
pop
(bad)
ins
ror
call
or
test
cmp
xchg
inc
fst
push
mov
into
pusha
aaa
push
dec
dec
test
dec
jb
dec
cmp
xor
jecxz
mov
ret
jo
test
shr
jns
ins
ret
push
(bad)
aam
leave
pop
xchg
cs
jbe
lds
sti
shl
into
jp
pop
fiadd
or
out
sar
loope
imul
and
shl
mov
mov
lds
dec
aad
xor
jo
add
test
cmp
sub
sbb
inc
jl
inc
mov
cdq
iret
xchg
ins
(bad)
in
mov
stos
mov
daa
fisttp
test
les
sahf
retf
movs
mov
adc
test
adc
push
xchg
cmc
inc
es
popf
scas
adc
into
xchg
adc
and
mov
push
and
adc
adc
mov
push
rcr
popa
test
mov
nop
int3
sti
jae
movaps
pop
mov
inc
dec
out
in
sbb
popa
ss
cmp
sbb
mov
xor
gs
mov
pop
scas
imul
pusha
dec
aad
test
nop
mov
hlt
adc
xchg
mov
call
inc
inc
xor
and
mov
mov
sbb
data16
fmul
or
push
and
in
rep
jp
inc
or
adc
ins
stos
add
and
cld
daa
jae
aas
xchg
cmps
adc
push
ss
mov
call
retf
dec
aaa
sbb
push
cdq
pop
or
in
out
sub
and
fadd
adc
dec
fisub
sahf
add
sbb
fwait
pushf
lds
jnp
rol
sub
jmp
aaa
adc
xor
xchg
lahf
or
imul
add
and
lods
sahf
scas
pop
mov
retf
or
mov
inc
int
dec
and
je
and
xchg
jbe
ss
aam
int3
xor
test
fcomi
cs
xchg
bound
cmps
inc
movs
push
shl
cmp
adc
adc
outs
retf
test
inc
call
and
adc
jl
sbb
sbb
xchg
fimul
popf
fcmovnbe
out
mov
jmp
in
pop
popf
repz
or
dec
push
or
pushf
push
out
push
mov
xchg
nop
mov
(bad)
lods
pushf
ins
enter
jo
mov
add
fstp
call
and
sti
retf
loopne
cmp
xor
add
repz
xor
jbe
clc
mov
mov
jne
cmp
repz
sbb
pop
xor
and
repnz
adc
daa
cwde
retf
dec
pop
push
adc
mov
xchg
call
jmp
mov
idiv
mov
retf
mov
ss
xchg
xor
mov
gs
dec
data16
inc
pop
add
xor
pop
and
push
cmp
jmp
jmp
and
call
(bad)
stos
add
test
lds
hlt
in
lock
mov
cmp
dec
test
fsubr
aas
call
dec
adc
add
or
or
das
and
ss
cdq
ss
dec
mov
leave
ja
sub
data16
mov
lds
cmp
push
cmp
mov
push
or
add
loopne
mov
xor
mov
mov
hlt
je
xchg
inc
mov
lods
pop
adc
fisub
dec
imul
daa
stos
mov
inc
dec
call
dec
test
outs
repz
sbb
inc
push
movs
push
sbb
enter
int
add
jns
pop
call
into
mov
dec
inc
js
sub
jbe
out
jae
xchg
hlt
push
stos
push
outs
aaa
mov
ja
sahf
lahf
scas
pop
(bad)
jne
xchg
and
dec
loope
inc
fidiv
lds
ret
(bad)
out
inc
aad
in
fsubr
push
inc
sub
add
js
in
cmp
push
add
inc
sub
mov
mov
movs
loopne
dec
popf
retf
jnp
jb
push
fldcw
xor
xlat
in
jne
jo
fstp
aad
cli
xchg
adc
test
sub
into
pop
fsubr
sub
cmp
sbb
fidiv
and
lods
pop
in
jns
adc
mov
jns
iret
push
sbb
xchg
cmps
repnz
data16
or
fs
sbb
std
adc
push
sbb
sub
mov
mov
xchg
test
xor
outs
data16
arpl
sbb
adc
push
stc
lea
add
repz
into
(bad)
mov
(bad)
lods
call
movs
mov
and
call
pop
and
sub
lock
int3
mov
mov
adc
adc
arpl
jb
(bad)
cs
jne
dec
das
aam
je
ss
fist
(bad)
pop
stos
inc
aam
cmp
mov
xchg
or
lds
shl
sbb
aas
add
dec
push
jmp
ror
pop
sub
into
das
les
and
sahf
mov
jb
sti
push
aad
int3
inc
es
retf
add
fcmovbe
mov
inc
outs
int
test
je
mov
loope
push
add
inc
adc
inc
mov
stos
imul
int
pop
dec
idiv
xor
aam
imul
cmp
les
ss
or
xor
sbb
jns
int3
lods
pop
iret
mov
aas
inc
mov
add
or
adc
out
pop
mov
sbb
stos
not
push
mov
mov
sub
xor
dec
(bad)
and
ret
and
fidivr
lahf
cdq
mov
jecxz
or
aam
mov
(bad)
and
aaa
adc
mov
outs
cmp
call
push
jle
mov
call
mov
lods
or
adc
add
mov
cwde
aaa
pusha
push
imul
inc
jae
push
cs
fcom
add
lods
xor
add
dec
scas
push
xor
call
out
iret
push
add
sub
inc
cli
push
sub
sahf
lahf
je
(bad)
aad
pop
fs
arpl
or
ret
jns
pop
mov
fiadd
inc
mov
pop
and
mov
sahf
pop
aas
add
jmp
and
add
fld
jb
leave
lea
adc
cld
lods
stc
sub
xchg
idiv
and
jmp
push
push
push
sbb
pusha
adc
add
adc
pop
test
ins
push
add
dec
ret
mov
xchg
pop
add
sub
cmp
xchg
add
mov
sar
add
mov
fsub
adc
cmps
(bad)
dec
outs
pop
test
ret
mov
add
mov
and
adc
push
loop
pop
mov
imul
repz
in
loop
iret
or
xchg
jne
jno
dec
out
aaa
pop
cmp
(bad)
pop
mov
outs
loopne
xor
pusha
mov
cmp
ret
xchg
push
out
pop
outs
fsub
inc
into
mov
test
test
adc
sti
loope
loop
test
test
addr16
int3
xor
test
mov
inc
stos
inc
aaa
sbb
cmp
pop
push
xchg
xchg
jb
fnstsw
push
das
cli
pop
daa
jecxz
ins
jbe
dec
lods
ficom
mov
add
mov
arpl
xor
cmps
das
xor
mov
push
call
fist
fst
(bad)
gs
jle
inc
jecxz
push
cs
imul
rol
inc
aam
mov
gs
xor
cmc
push
loope
mov
xor
aas
push
sahf
mov
fsub
out
int
data16
sti
jmp
scas
and
movs
push
dec
sbb
sbb
mov
or
bound
cld
add
(bad)
int
pop
xor
lea
jl
xchg
sub
sbb
repz
or
outs
sub
pop
xchg
jo
and
jecxz
push
imul
jns
xchg
dec
inc
(bad)
push
mov
es
inc
in
pop
repnz
xchg
cwde
xor
shr
test
sub
xchg
pop
mov
retf
mov
pop
lods
lea
loopne
pop
lock
fnstenv
mov
shl
lds
or
jg
(bad)
jne
push
into
fild
or
pmovmskb
pop
jae
inc
cs
lods
stos
pop
xor
nop
inc
lahf
dec
clc
aad
xlat
int
int3
jecxz
jp
in
pop
or
sub
fcomp
add
aaa
popf
fsub
sahf
or
shl
lods
mov
sub
or
push
leave
retf
pusha
sbb
or
and
fdivp
ins
imul
or
push
shr
pop
sub
icebp
mov
mov
dec
pop
pop
leave
dec
mov
jno
inc
pop
ins
adc
out
stos
hlt
or
cwde
jmp
fucomi
jae
mov
xchg
dec
and
rcr
xchg
gs
test
mov
je
xor
fnstcw
sbb
jmp
lods
add
mov
mov
repnz
cmp
int3
cmp
test
daa
out
mov
jbe
jmp
xor
daa
pop
outs
and
mov
push
out
pop
or
push
xchg
xchg
sub
(bad)
repnz
nop
outs
or
fwait
sbb
clc
adc
push
pop
mov
or
adc
push
cmp
aam
push
xor
or
stos
or
sub
pop
push
enter
(bad)
(bad)
jmp
js
dec
mov
pusha
movlps
inc
sbb
mov
idiv
sub
cmp
das
stos
mov
out
jne
xor
push
xchg
add
dec
test
mov
sbb
rcr
outs
clc
mov
sub
in
mov
dec
push
test
sbb
shr
lock
dec
test
add
in
(bad)
into
bnd
mov
adc
jg
jnp
cmp
add
hlt
imul
adc
pop
fcom
mov
(bad)
xor
mov
xchg
xor
js
mov
test
add
iret
inc
loop
ret
aaa
push
js
jmp
fstp
jno
in
add
scas
pop
rcr
les
xor
test
cmc
add
stos
loop
or
lods
ret
cmps
xor
push
or
int3
into
fdivr
mov
pop
inc
pop
pop
pop
loopne
repnz
repnz
pop
pusha
dec
inc
movs
mov
mov
pop
aad
movs
sbb
jo
inc
aam
loopne
xor
sti
jle
inc
push
ret
add
jle
dec
cmc
mov
cdq
movs
scas
cmps
loope
iret
mov
jo
mov
adc
or
sbb
int3
push
mov
sub
sbb
xchg
sbb
addr16
into
or
and
pop
mov
fisub
xor
ds
xor
or
sbb
adc
ds
call
or
movs
cmc
fcmovu
xchg
xchg
aas
xchg
js
mov
ja
or
popa
jp
add
mov
scas
inc
and
sub
les
mov
test
add
mov
or
cmp
sub
out
fs
sub
or
pop
jge
and
ret
std
push
pop
rol
xchg
pusha
call
std
cli
das
cmp
push
adc
sahf
sub
cld
xor
xor
fisub
fimul
dec
push
dec
cmc
pushf
jmp
mov
push
stc
call
adc
xchg
sbb
fstp
xlat
ror
xchg
push
(bad)
jecxz
scas
add
push
out
jae
sti
std
mov
popf
push
mov
sbb
dec
add
lock
and
xor
mov
lods
add
bound
sub
pop
dec
inc
lock
mov
cmp
mov
mov
mov
or
repz
mov
dec
mov
scas
push
es
adc
out
sbb
push
sahf
push
(bad)
push
test
repnz
fdiv
add
pop
or
aaa
inc
sahf
push
mov
pop
mov
inc
sar
sub
(bad)
cmc
outs
mov
push
mov
mov
or
test
fwait
cmc
fild
xchg
out
ret
repz
(bad)
push
imul
lods
mov
add
popf
xchg
stos
xchg
pop
sbb
aad
push
mov
mov
cmp
stos
mov
jp
mov
je
mov
imul
cdq
or
mov
loope
loopne
or
sbb
mov
imul
imul
mov
fstp
mov
popa
dec
xchg
fisub
dec
xchg
xchg
dec
xchg
(bad)
xlat
xchg
in
cmp
pop
jb
xchg
fcom
xchg
or
pop
xchg
mov
inc
ja
mov
adc
and
(bad)
(bad)
mov
daa
rcr
scas
mov
dec
iret
ficom
out
push
scas
int3
inc
xchg
imul
push
aam
lea
fsubp
movs
jb
dec
add
movs
inc
cmp
mov
xchg
mov
or
cmp
pop
dec
cmp
out
popa
cs
in
and
out
inc
push
push
movs
cmp
psllw
ins
jb
and
and
nop
mov
lahf
daa
jbe
xor
iret
cmp
and
pop
push
jb
mov
test
push
ret
scas
push
arpl
and
dec
adc
push
leave
inc
dec
or
movs
cmp
add
inc
and
mov
aaa
mov
popf
and
sbb
inc
jecxz
xlat
mov
push
rol
out
aaa
mov
lods
adc
dec
imul
ins
in
repz
push
test
ret
imul
imul
adc
push
call
push
cmp
(bad)
pop
jl
fisttp
xchg
pop
aaa
lock
cmp
lahf
dec
lods
xchg
or
(bad)
adc
add
jle
in
mov
scas
or
mov
cdq
fst
xor
movs
rcr
adc
inc
test
push
loop
mov
sti
dec
(bad)
sub
adc
(bad)
mov
dec
leave
daa
mov
jmp
pushf
clc
mov
or
mov
xor
cmps
ins
(bad)
jmp
dec
or
and
jo
add
or
adc
pop
xchg
inc
movs
mov
sbb
push
adc
dec
pop
imul
jge
push
cmp
rcr
push
push
cmp
and
aas
ds
jmp
and
and
pmulhuw
dec
adc
pop
mov
or
inc
adc
(bad)
xchg
xchg
mov
or
loop
xchg
jmp
add
cmp
pop
and
mov
jmp
mov
mov
daa
mov
(bad)
cwde
mov
cmps
jmp
dec
mov
sbb
in
test
or
and
out
hlt
in
stc
mov
sbb
mov
out
mov
xlat
retf
pop
mov
repnz
adc
not
cmp
jecxz
ret
div
cmc
or
xor
jo
add
bound
add
push
sub
adc
inc
mov
jae
add
sbb
ds
xlat
jo
push
cmp
jg
push
jl
sti
rol
or
or
sub
sbb
mov
xchg
rcl
in
rcr
sub
push
mov
fscale
mov
jmp
outs
cli
cmps
push
push
sub
mov
nop
retf
pop
pop
jp
aam
jno
cdq
push
push
stos
xchg
ins
or
pop
pop
jle
test
mov
outs
gs
lods
sbb
push
jle
les
dec
adc
shl
sbb
jl
xchg
(bad)
out
add
data16
and
test
mov
ret
retf
lea
mov
or
std
mov
mov
and
and
jo
inc
pop
mov
mov
inc
hlt
mov
pop
or
inc
loop
jg
cmp
jnp
mov
jmp
mov
pop
out
pop
push
retf
jge
fst
pop
pushf
scas
push
lds
neg
bound
cwde
nop
mov
sbb
cmps
icebp
scas
push
push
ins
mov
dec
cmc
mov
mov
aam
jae
jo
out
imul
mov
test
mov
mov
mov
and
in
dec
dec
mov
jmp
pop
jno
xchg
daa
rcr
data16
imul
inc
gs
rcl
add
clc
imul
mov
adc
es
sub
xchg
inc
ss
push
sub
test
adc
push
jnp
jmp
gs
pop
inc
fisub
pop
or
cmps
jo
ss
hlt
push
adc
xchg
jmp
jae
movs
cmp
imul
(bad)
jp
sub
fnstsw
cmp
cmp
test
mov
jnp
nop
imul
cmp
cwde
out
jae
ret
inc
dec
jle
mov
and
aas
sub
cmps
mov
es
fs
xor
jo
(bad)
jp
rol
daa
bound
push
push
inc
call
jae
enter
cmp
cmp
(bad)
xor
and
arpl
in
push
das
cs
mov
xchg
nop
sbb
fcom
int3
ud1
test
jge
inc
movs
popa
stos
jo
lea
mov
xor
jnp
minps
(bad)
cmc
sbb
in
das
xchg
jecxz
rol
mov
icebp
lahf
push
mov
add
in
shl
js
push
and
gs
jmp
push
ds
and
shl
or
jmp
mov
push
and
inc
mov
dec
jmp
xchg
fucomip
push
mov
(bad)
sub
out
dec
je
std
jecxz
jb
adc
mov
data16
fdivr
jo
fisttp
jbe
jne
sbb
sbb
rol
pop
imul
inc
jb
fisttp
int
push
jo
cmp
je
or
jne
shr
cmps
ins
ins
ins
fdivr
xlat
mov
mov
mov
push
hlt
add
aam
inc
fidiv
(bad)
cli
adc
scas
adc
daa
rcr
xchg
inc
add
cwde
cwde
jmp
shl
xchg
arpl
test
add
pop
out
sub
(bad)
enter
sub
test
pusha
stc
push
cmp
imul
outs
stos
cs
adc
or
cmps
(bad)
js
pop
mov
fidivr
mov
int
aas
mov
cs
call
adc
fwait
test
(bad)
jle
int3
pushf
sub
clc
(bad)
jle
lea
loope
loopne
das
retf
xor
or
mov
pop
cmp
loope
es
sub
or
cmps
iret
dec
pop
in
inc
add
adc
addr16
test
loop
fisubr
sbb
mov
into
sar
movs
aad
adc
push
adc
daa
fs
pop
cmp
fisub
out
out
psubusw
(bad)
mov
add
mov
push
mov
add
push
sub
xchg
push
cmp
cs
scas
rcl
pop
sbb
(bad)
imul
test
inc
inc
sub
not
arpl
pusha
sub
sbb
jle
retf
scas
lock
imul
adc
bound
inc
sahf
test
call
test
jmp
push
sahf
xor
mov
lea
loope
cmp
(bad)
lds
fs
jmp
lea
cmp
sub
push
adc
adc
(bad)
or
dec
xor
imul
cmps
ret
call
fwait
cld
(bad)
or
adc
pop
aam
pop
and
cs
and
addr16
adc
push
xchg
xchg
sbb
fst
leave
fnsave
fnstsw
cmp
lock
pusha
mov
repz
or
movs
and
xor
stos
scas
pushf
mov
mov
shl
loope
inc
into
in
sub
sbb
push
or
sbb
test
lahf
mov
cmc
hlt
nop
cmp
pop
mov
retf
ins
outs
pop
dec
mov
mov
jge
ins
pop
fcom
cwde
and
inc
stos
ins
shl
dec
dec
add
xchg
test
xor
jmp
mov
pop
loope
loop
mov
adc
in
or
ret
fstp
push
gs
ins
or
fidiv
shr
xchg
std
and
dec
pop
ins
sub
jl
mov
stos
loopne
xor
outs
cmc
mov
push
psraw
jle
shl
test
mov
mov
ins
shl
sahf
test
aad
fs
call
jo
and
sbb
sbb
xchg
fnstsw
int3
cs
pop
lock
sahf
sar
outs
call
mov
cmp
(bad)
push
scas
xor
dec
mov
ds
jecxz
add
sbb
sbb
push
rcl
push
cwde
cs
div
cmp
xor
xchg
popa
test
fs
stos
xchg
adc
inc
fdiv
xor
inc
xchg
mov
dec
test
push
stc
ins
dec
pushf
test
mov
and
pop
adc
mov
mov
test
add
xchg
xchg
jle
jp
xor
rol
call
pusha
daa
sbb
sub
or
(bad)
clc
xchg
pop
pop
jbe
mov
repnz
out
xchg
sub
pop
xchg
popa
ins
mov
push
out
mov
scas
leave
cwde
or
xor
pop
sub
cdq
mov
jmp
push
scas
cmp
(bad)
pop
mov
leave
sub
bound
xchg
bsf
jb
loop
in
pop
test
mov
gs
je
pushf
push
stos
loope
and
dec
xor
mov
dec
(bad)
out
(bad)
xchg
push
jo
(bad)
or
scas
js
pop
pop
mov
mov
out
or
jecxz
push
and
ins
mov
inc
fcom
inc
js
mov
bound
frstor
mov
dec
loop
mov
lods
push
inc
xlat
xchg
xchg
mov
out
xchg
xchg
ins
mov
(bad)
icebp
push
jne
iret
push
call
cdq
data16
(bad)
mov
jo
cld
pop
xchg
sub
push
mov
dec
ins
gs
rol
test
dec
mov
fisttp
gs
pop
into
fiadd
xchg
fadd
lea
aaa
test
ja
add
out
mov
fwait
outs
movs
sbb
pop
sbb
pop
and
mov
lahf
jmp
dec
mov
bswap
test
push
pushf
je
fnsave
cld
xchg
int3
daa
and
cmp
dec
sahf
jp
or
es
ret
out
daa
hlt
ins
xor
js
mov
mov
in
or
pop
call
retf
aaa
add
ret
ret
mov
int3
push
inc
mov
dec
xor
std
js
mov
xor
dec
jmp
in
movs
out
mov
sub
xchg
outs
js
sub
fld1
and
mov
lock
or
arpl
call
out
and
out
aam
mov
mov
mul
out
adc
mov
jne
jae
dec
in
inc
mov
or
mov
or
das
das
aam
pop
call
sub
push
sub
push
jnp
ins
xchg
mov
jo
and
jmp
jmp
push
std
icebp
pushf
sub
in
add
(bad)
in
repz
xchg
mov
pop
cmc
pop
dec
les
(bad)
enter
push
push
cmp
push
retf
(bad)
jmp
ret
cwde
aad
mov
xor
addr16
ds
adc
dec
imul
test
push
or
jmp
dec
xchg
jo
call
push
mov
fucom
jl
js
loopne
scas
pop
cmc
cmp
(bad)
mov
sti
cmp
(bad)
pushf
ja
sub
and
cmp
test
xchg
int
test
lds
shl
ffreep
xchg
xchg
jae
mov
out
outs
dec
ja
cmp
iret
mov
aam
mov
cdq
sub
adc
outs
test
aad
pop
pop
sar
aam
(bad)
push
mov
mov
aam
jns
neg
int3
cs
adc
fsub
jne
pop
mov
out
push
imul
mov
movs
test
movs
or
jge
inc
jne
cdq
jl
leave
out
(bad)
(bad)
aam
mov
test
out
test
cwde
fisubr
dec
clc
lea
add
mov
or
jg
imul
mov
test
movs
cmp
add
cli
push
es
fld
adc
mov
movs
jmp
lods
(bad)
sbb
xor
lods
pusha
jecxz
inc
pop
xlat
dec
jno
icebp
dec
cmp
adc
mov
jg
in
ds
test
lea
out
push
in
pusha
mov
adc
lock
inc
push
jl
inc
enter
sub
mov
mov
stos
add
adc
ja
push
xchg
fs
in
ret
jb
pusha
or
outs
in
aas
mov
aaa
or
sub
push
dec
xor
cmp
test
imul
outs
xchg
mov
pop
enter
(bad)
call
mov
(bad)
adc
push
add
arpl
loop
xor
and
xor
clc
test
lods
(bad)
dec
retf
mov
pop
jmp
mov
fldcw
sub
(bad)
mov
sub
pop
inc
scas
cmc
test
in
aad
(bad)
mov
int3
mov
pusha
ss
mov
cmp
retf
daa
adc
div
jmp
movs
xor
outs
pop
ret
push
adc
movs
cwde
(bad)
sbb
adc
fisttp
ds
ret
pop
dec
xchg
ds
pop
add
aas
mov
stc
ins
fnstenv
jmp
mov
mov
popa
sbb
lods
ja
push
pop
inc
cmp
xor
les
loopne
rcr
stos
fidivr
jne
popf
dec
clc
(bad)
shl
jp
jecxz
(bad)
popa
in
mov
stos
mov
or
pop
add
in
cmp
shr
ja
rcr
cmp
unpckhps
das
mov
adc
push
dec
add
adc
int
dec
adc
out
(bad)
btc
test
test
dec
mov
ds
xadd
pop
xchg
imul
bound
in
ins
push
in
dec
stos
jmp
adc
mov
dec
(bad)
jmp
shl
mov
ins
ins
addr16
nop
mov
or
xor
xlat
iret
mov
nop
or
popa
lea
mov
outs
pop
repz
out
sti
mov
(bad)
push
mov
retf
loop
fnstsw
push
jmp
fsubr
popf
adc
add
sub
js
out
and
(bad)
outs
cld
pop
xor
sub
fdivr
xchg
jae
cmp
xchg
daa
cmp
fidiv
aaa
cmp
and
outs
mov
jge
mov
rol
jp
dec
add
pop
cs
jmp
lahf
adc
aaa
inc
or
popf
mov
xlat
test
add
pop
pushf
mov
jecxz
in
fild
adc
outs
sahf
jmp
cmp
mov
jle
js
mov
inc
adc
cmps
push
sahf
adc
xchg
mov
arpl
fimul
pop
cdq
mov
movs
or
aam
popa
lea
cld
mov
xor
int3
push
xor
cli
(bad)
int
pop
fiadd
fnsave
sbb
int
add
stc
cdq
sti
ins
sub
sbb
mov
shl
in
jl
cli
into
cmps
das
enter
sbb
adc
div
aam
in
push
mov
fisttp
repnz
dec
fild
mov
ins
ror
ins
sbb
daa
sub
pop
pop
(bad)
mov
in
sbb
cdq
in
mov
mov
push
fptan
(bad)
pop
mov
iret
and
pop
loopne
jmp
dec
sbb
xchg
test
mov
jne
jmp
mov
std
pop
fwait
and
into
and
addr16
rol
out
sahf
test
dec
mov
pop
fsubr
pop
vminss
out
cmp
jecxz
sub
dec
add
pop
mov
lods
retf
mov
adc
pushf
stos
mov
sahf
jae
push
push
(bad)
test
pop
jnp
stc
pop
pop
sti
adc
iret
fwait
retf
cmps
mov
xchg
(bad)
mov
popa
push
mov
mov
je
jecxz
mov
fsubr
lock
ret
rol
call
arpl
std
outs
push
sub
dec
adc
test
scas
sub
xlat
sar
push
xchg
pop
outs
test
dec
sub
in
mov
shl
xchg
into
addr16
ss
add
loop
dec
mov
repz
addr16
imul
jo
aaa
adc
jnp
in
pushf
fdiv
mov
pop
(bad)
in
mov
(bad)
outs
and
pop
retf
add
stos
leave
lods
pop
add
das
inc
aam
pop
or
jmp
jmp
stos
jne
sbb
(bad)
cdq
in
les
pop
xchg
jno
add
cmp
call
ins
mov
push
pop
push
test
dec
out
add
cld
push
jle
aad
dec
ins
mov
jno
out
sbb
xor
es
scas
jb
add
div
test
mov
popf
mov
dec
fsub
xchg
dec
ja
jo
call
add
jl
xchg
mov
cmps
dec
mov
adc
dec
iret
fwait
out
pop
ss
(bad)
cmp
(bad)
xchg
mov
push
xchg
mov
retf
stos
jo
clc
out
pop
pop
pop
xchg
jae
dec
sahf
repnz
dec
xchg
mov
ror
inc
loope
or
addr16
xor
cmc
fistp
lahf
cdq
pop
add
aad
mov
or
inc
or
fstp
xchg
or
(bad)
std
fmul
in
js
xchg
icebp
nop
push
test
adc
das
or
ret
rcr
enter
pop
stos
or
bnd
out
bound
xchg
ins
dec
add
aaa
into
jmp
daa
mov
mov
mov
(bad)
fwait
out
int
mov
cmc
mov
rol
retf
cwde
pop
xor
icebp
hlt
sbb
xor
jle
ret
dec
in
neg
sub
push
and
add
adc
adc
dec
mov
cmc
pop
jl
inc
sub
pop
or
out
xor
in
icebp
aas
xlat
mov
sub
pop
dec
pop
out
stc
clc
adc
fist
repz
inc
inc
dec
xchg
cwde
mov
dec
test
mov
(bad)
mov
aad
or
jns
stos
and
push
out
adc
or
xchg
mov
imul
xchg
add
push
std
std
aad
cmc
idiv
push
ret
push
aad
jmp
mov
add
clc
pop
inc
cdq
jae
dec
ja
int3
loop
cmp
mov
loop
adc
nop
dec
test
mov
(bad)
jle
jmp
mov
dec
fwait
adc
in
cwde
push
and
popa
idiv
mov
dec
inc
adc
rcl
(bad)
and
je
(bad)
pop
push
lds
mov
(bad)
call
enter
or
cmc
adc
popa
cdq
out
cmp
inc
arpl
inc
mul
fwait
or
jns
sub
call
push
stc
fstp
stc
cmp
imul
retf
mov
add
es
or
outs
push
xor
mov
jb
push
sub
ror
xor
mov
or
repnz
das
cwde
jle
cs
add
sbb
fstp
in
and
xor
fs
mov
ficomp
movs
push
jg
pop
ins
xor
jmp
cld
xor
pop
mov
dec
test
xlat
ins
sub
stc
add
pop
jge
adc
or
ins
dec
mov
pop
sub
rep
retf
inc
cli
lods
fs
push
or
push
(bad)
fs
int3
mov
mov
loopne
aas
hlt
dec
jge
ret
and
cdq
stc
jo
(bad)
pop
(bad)
scas
jl
pop
sub
mov
pop
aad
in
mov
inc
fsub
ins
mov
addr16
push
sbb
jno
movs
pop
(bad)
fldcw
repz
jmp
shl
cmp
dec
gs
stc
sub
test
push
repz
xlat
loope
or
cmp
jl
xchg
cwde
popf
enter
int
and
pop
xchg
mov
shl
fcomip
mov
scas
inc
icebp
jb
(bad)
xor
jl
xchg
test
sub
arpl
and
xchg
inc
xor
cmp
fld
repz
sbb
sbb
movs
shl
dec
ins
jmp
mov
out
int
inc
fs
lods
or
in
addr16
lds
push
mov
mov
push
loope
data16
jo
fld
and
xor
(bad)
push
jmp
daa
mov
jmp
adc
mov
fld
in
out
push
js
push
dec
call
fimul
jmp
adc
push
sub
add
out
or
inc
add
and
js
push
popa
or
mov
sub
stc
fdiv
das
and
xor
dec
and
es
push
inc
push
dec
pusha
cdq
ret
retf
aaa
in
jbe
jns
retf
clc
test
lock
fsubr
mov
sti
fstp
daa
lods
dec
pusha
cmp
pop
add
push
das
sbb
jne
sahf
int
mov
xlat
cli
add
test
jo
mov
sbb
sbb
xchg
xor
cli
xchg
into
(bad)
jge
ror
dec
pusha
push
xchg
iret
int
sbb
cwde
xor
repnz
stos
sbb
retf
push
cwde
mov
cmp
in
xchg
jl
push
into
push
mov
fistp
popa
(bad)
cmp
ss
repz
pop
and
sub
in
and
mov
mov
nop
xor
test
mov
xchg
push
push
mov
call
push
sbb
jns
mov
clc
icebp
aaa
push
ja
mov
shl
popa
xor
inc
(bad)
ins
mov
and
jge
jl
inc
outs
shr
movs
ror
and
jb
inc
pop
mov
inc
ins
outs
ins
mov
es
loop
sub
add
sub
xchg
inc
stos
xchg
dec
jnp
sbb
xchg
enter
xor
and
xchg
lock
sbb
mov
lods
js
aaa
rcl
pop
fnstcw
push
shl
sub
or
adc
jl
jmp
mov
inc
dec
dec
std
rcl
hlt
or
icebp
dec
in
push
adc
jo
in
mov
leave
cdq
jg
push
(bad)
lock
call
dec
movs
out
dec
jle
popf
jmp
outs
fistp
iret
mov
mov
jbe
test
cmp
jo
xchg
nop
xor
pusha
and
icebp
data16
scas
and
add
xchg
push
mov
pop
cmps
pop
sbb
ins
push
sbb
(bad)
call
scas
and
daa
icebp
or
in
pushf
xor
rol
push
xor
dec
mov
jae
add
sahf
mov
fisttp
(bad)
retf
fisttp
push
sbb
push
inc
mov
daa
aaa
lods
jmp
pop
pop
clc
sub
int3
loopne
gs
in
adc
pop
dec
repz
cdq
mov
inc
in
inc
es
and
test
add
in
mov
dec
dec
push
inc
push
sahf
mov
aas
jnp
stos
scas
test
mov
inc
sub
shl
xchg
push
fcos
data16
cmps
mov
bound
mov
popf
test
xchg
push
int3
jmp
jmp
or
xor
jbe
xor
fidivr
jb
mov
ins
(bad)
rcr
(bad)
jp
jns
push
jl
and
fisubr
cmps
fwait
dec
push
(bad)
call
aas
xlat
mov
addr16
jns
and
push
nop
xor
enter
jo
(bad)
cld
and
dec
sub
ins
mov
add
jo
(bad)
bnd
xlat
jmp
add
in
out
lods
jb
fsub
shr
clc
nop
mov
sub
xor
xchg
sahf
aam
loop
aas
out
cmp
or
aas
adc
out
(bad)
imul
push
jbe
cdq
rol
dec
or
(bad)
mov
mov
fisub
jns
arpl
jp
sbb
adc
js
jne
ins
cli
push
int
pop
test
inc
repz
push
or
repz
imul
mov
jns
mov
mov
mov
jg
sbb
fwait
shl
dec
xor
jg
dec
sub
stos
sub
or
mov
fidivr
inc
ja
adc
fdivr
jmp
cmp
bound
sti
fistp
dec
sti
lds
jno
fistp
sub
sub
mov
out
xor
shr
add
retf
cmp
imul
xor
je
repnz
repz
or
xchg
dec
ss
ja
jg
ret
test
pop
inc
jno
shr
(bad)
add
adc
data16
mov
pusha
mov
push
retf
add
adc
fldl2e
adc
dec
xor
(bad)
sbb
ja
cs
aas
add
leave
fs
test
sbb
sbb
xchg
shl
inc
imul
adc
mov
jmp
pop
in
inc
mov
sub
and
mov
sbb
std
xor
mov
je
ds
mov
xor
cli
pop
push
mov
sbb
xor
and
cmp
cmps
mov
loope
in
dec
xchg
inc
xchg
sti
rep
jbe
ins
jmp
sub
mov
cmc
cs
ret
push
ret
not
xchg
cmp
aaa
scas
retf
adc
outs
mov
pop
hlt
xchg
(bad)
fstp
push
inc
xchg
and
or
ret
mov
sub
add
fiadd
outs
in
enter
fnstenv
iret
mov
push
mov
xlat
or
cmp
icebp
mov
mov
push
adc
sbb
xor
mov
icebp
xor
cwde
push
test
shr
xchg
(bad)
mov
cmp
ret
int
mov
inc
shr
lods
je
mov
in
jne
ins
pop
adc
pop
jno
jns
(bad)
and
ret
sub
cmp
stos
push
mov
add
and
ret
sub
cld
ret
sub
cmc
cld
lods
inc
pop
inc
mov
sbb
aas
dec
jmp
into
jg
mov
loope
jge
mov
call
dec
(bad)
out
jo
or
adc
push
mov
mov
mov
pop
mov
dec
or
mov
lds
clc
ret
pop
mov
inc
inc
add
outs
dec
sub
jge
lea
in
push
add
xchg
aaa
cs
test
jmp
and
jo
inc
and
fnstcw
loopne
ss
(bad)
in
test
mov
int3
mov
add
and
dec
jp
jecxz
lock
add
gs
jle
hlt
sub
or
aam
test
dec
movs
or
mov
mov
cld
adc
jne
fnstenv
inc
mov
jb
cmps
inc
rcl
xchg
adc
sbb
lods
sti
je
cmp
xor
add
cmp
dec
push
cmp
xchg
mov
pushf
cs
xor
adc
test
es
fstp
sbb
add
mov
sbb
jo
push
xchg
push
dec
lods
das
fmul
jns
add
out
dec
retf
cmp
cmc
push
enter
push
repz
out
pop
loope
pop
push
cmps
out
and
cmpps
arpl
push
mov
cdq
adc
imul
dec
jne
hlt
adc
or
nop
imul
das
dec
mov
rcr
pop
jmp
jl
cli
aam
inc
sub
mov
jae
lahf
gs
xchg
(bad)
inc
arpl
inc
ins
pusha
and
shr
jl
bnd
inc
or
mov
jl
jbe
and
xchg
xchg
xlat
sbb
sub
mov
lods
enter
or
mov
or
xor
aam
ja
(bad)
dec
inc
add
mov
pusha
je
ret
stc
clc
in
ds
mov
pushf
dec
xchg
xlat
loope
jmp
popf
movs
inc
mov
mov
pop
add
xchg
or
hlt
clc
push
pop
jp
jecxz
xor
push
mov
cli
sbb
aad
pushf
out
push
lahf
or
sub
test
fmul
jae
adc
or
sbb
in
inc
xchg
movs
test
test
dec
pop
push
in
shl
push
out
outs
xchg
mov
je
sbb
in
push
es
mov
adc
push
arpl
xor
leave
enter
cmc
in
jge
inc
jbe
pop
hlt
mov
(bad)
mov
pusha
int3
les
mov
xor
push
hlt
stos
push
pop
sub
xor
push
push
icebp
fnstenv
in
in
push
aaa
dec
mov
mov
cmp
adc
outs
lahf
lea
push
pusha
push
push
std
popa
mov
stc
aam
mov
lds
jns
fstp
mov
mov
nop
mov
leave
xor
mov
jmp
mov
aam
jae
fcomp
push
into
add
sbb
xchg
retf
or
fcomi
mov
dec
scas
popf
retf
idiv
sbb
adc
lahf
xchg
sub
push
push
jno
aam
xchg
div
sub
cmp
adc
ret
xor
cli
movs
xlat
mov
mov
push
out
cdq
call
les
and
test
call
bndldx
jae
xor
jge
adc
bound
lds
and
in
mov
xor
daa
repz
or
pusha
jmp
aad
push
ret
dec
sub
adc
dec
enter
xor
fst
sub
push
int
div
iret
inc
fadd
push
and
fisttp
sub
push
in
jne
jno
sub
leave
(bad)
mov
fcmovbe
cmp
dec
in
int3
push
pop
mov
mov
cmps
(bad)
push
sbb
fld
pop
gs
nop
xchg
cmp
les
mov
sub
pop
out
adc
and
arpl
jmp
mov
mov
outs
sub
test
cmp
out
adc
retf
cmp
inc
clc
mov
retf
mov
jg
mov
sbb
call
and
push
fisttp
loope
lods
stos
test
int
mov
mov
imul
dec
mov
in
ret
ja
mov
dec
(bad)
fbld
(bad)
push
mov
addr16
pop
mov
dec
cmps
sbb
mov
push
xchg
sub
add
clc
and
xchg
sub
retf
(bad)
and
xor
pusha
test
(bad)
push
adc
retf
xor
ret
sub
lods
pop
test
mov
sbb
test
gs
clc
and
dec
mov
scas
leave
dec
retf
and
int
aaa
mov
movs
xchg
in
xchg
xor
jmp
(bad)
mov
test
push
ret
stc
sbb
jne
jns
movs
lea
xchg
scas
and
inc
xchg
jne
adc
lods
leave
in
scas
stos
rcl
mov
sbb
jl
fwait
mov
xchg
adc
jle
and
sar
jno
pusha
fsubp
mov
mov
and
adc
cmp
mov
or
test
retf
jnp
lea
(bad)
adc
adc
int3
cli
adc
mov
push
and
inc
or
popf
ja
inc
call
pop
mov
int3
cs
push
cmp
fcomp
(bad)
enter
jecxz
lea
xchg
dec
test
sbb
es
lahf
data16
jo
add
xor
rcr
das
das
cmp
dec
movs
jle
enter
popa
shl
loopne
push
dec
pop
mov
fwait
sbb
fdivr
cld
jae
xchg
jae
sar
nop
inc
add
out
sbb
pushf
add
xchg
pop
jecxz
cld
push
or
int
mov
sbb
or
cmps
xlat
out
pop
adc
push
add
sub
popf
xchg
push
push
ins
or
lods
sub
adc
mov
jbe
out
add
xor
cli
adc
(bad)
jge
test
push
dec
pusha
lods
xor
movs
(bad)
or
xchg
inc
mov
sub
xchg
inc
inc
mov
call
push
scas
mov
pop
leave
adc
in
mov
push
stc
mov
popf
aaa
inc
sub
xchg
and
ret
dec
mov
dec
jg
jb
stos
aad
(bad)
lea
stos
xchg
jns
xor
jbe
sub
add
xchg
cmp
mov
das
enter
scas
cmp
shl
push
test
push
sbb
cmps
mov
fdiv
sahf
lods
int3
pop
movs
push
(bad)
adc
jg
push
cmc
stos
pop
sbb
arpl
movs
mov
adc
sub
repnz
adc
pusha
test
add
xor
rcr
ret
xor
xor
cmp
xor
add
gs
pop
ficomp
(bad)
lahf
in
cmp
sbb
push
mov
dec
ds
in
mov
test
movs
mov
dec
pop
daa
or
xor
jmp
add
inc
bound
or
pop
stos
mov
arpl
mov
lea
shl
cld
jnp
jne
inc
jno
cdq
cmp
push
ret
into
mov
lods
and
dec
pop
push
add
pop
shl
jecxz
stc
xlat
fisub
mov
inc
or
mov
push
dec
leave
jno
fdivrp
adc
and
dec
loope
out
outs
and
gs
cmps
jmp
(bad)
movs
(bad)
jl
(bad)
xor
mov
(bad)
push
mov
dec
in
loop
mov
dec
jmp
jne
xchg
pop
add
aad
hlt
jb
xor
xchg
pop
iret
fst
out
call
shl
int3
idiv
mov
mov
in
(bad)
rcr
mov
push
mov
sbb
xor
sub
mov
adc
shl
repnz
cmp
retf
xchg
adc
jbe
mov
scas
pop
adc
jle
jne
scas
cs
push
cmp
mov
data16
mov
lock
ja
aam
mov
test
mov
and
(bad)
loope
sub
fild
pop
sub
nop
adc
sti
or
push
add
pop
mov
jne
shl
dec
(bad)
mov
ins
pushf
mov
mov
and
fwait
(bad)
mov
add
mov
sbb
daa
and
(bad)
rcr
push
pop
movs
jbe
mov
outs
mov
jmp
add
mov
xor
outs
xchg
push
inc
jo
popa
fwait
xor
jns
inc
mov
xlat
(bad)
jmp
mov
(bad)
(bad)
enter
test
push
ss
jmp
pop
jne
mov
call
(bad)
rcr
ror
sar
int3
(bad)
in
lods
test
cmp
(bad)
adc
jns
sbb
push
jmp
enter
mov
das
lock
and
jg
push
pusha
cmp
(bad)
cmp
adc
pop
dec
in
sub
jno
jmp
in
lahf
jg
popf
pop
cmc
call
sub
or
stos
mov
fisub
enter
inc
retf
mov
sbb
std
adc
cmp
scas
dec
and
shl
jns
mov
icebp
xchg
inc
iret
mov
push
jbe
fild
pop
sti
outs
sub
dec
jno
cli
push
popf
jecxz
xor
retf
cs
xchg
rcl
fsubr
cdq
je
push
scas
sub
push
gs
push
push
out
fnstenv
sar
(bad)
nop
imul
or
fs
std
sahf
mov
repz
push
stos
aaa
push
int
jbe
dec
xor
in
imul
add
leave
aam
fcomp
icebp
push
lods
cwde
ret
sar
ror
test
icebp
mov
push
inc
pop
outs
sub
xchg
ret
test
cwde
(bad)
push
inc
jbe
add
xor
in
fsubr
lock
div
clc
fdivr
xchg
lods
sahf
and
enter
push
outs
scas
mov
loopne
or
xchg
mov
cmp
mov
pop
outs
pop
and
xor
pop
mov
rol
cld
pop
lods
mov
mov
pop
inc
hlt
repz
inc
push
sbb
pop
adc
or
jns
jo
pop
inc
paddd
mov
ds
aaa
adc
iret
push
mov
dec
lahf
(bad)
retf
push
sti
cmp
mov
sbb
in
fiadd
leave
loope
jmp
lock
in
adc
lods
cdq
pop
add
test
mov
sti
fwait
mov
movs
inc
jp
pop
rol
or
sub
add
lds
movs
xchg
mov
ds
inc
repz
test
cmp
pop
mov
test
(bad)
gs
clc
push
(bad)
xor
jae
test
push
add
or
inc
xchg
add
inc
dec
rcr
ret
call
test
lahf
rol
inc
call
dec
test
or
out
jmp
not
popf
add
sub
cmps
xchg
sub
sbb
les
test
xchg
cmp
fdivr
inc
mov
pusha
cwde
cmp
out
fbstp
xchg
loopne
fsub
mov
or
inc
pop
int
add
(bad)
mov
mov
or
js
rol
mov
imul
push
adc
adc
sbb
dec
cmp
pop
int
xor
out
xchg
imul
push
retf
(bad)
and
lea
inc
xchg
test
aad
repz
sub
retf
add
pop
pushf
lds
call
sbb
mov
arpl
into
push
inc
fsubp
mov
mov
dec
(bad)
push
or
loopne
sub
sbb
add
xor
(bad)
and
data16
daa
or
fild
jb
movs
inc
dec
ror
pop
dec
mov
adc
sbb
movs
or
sub
cmps
movs
inc
add
fsubr
pop
add
leave
jl
mov
jmp
mov
jne
push
es
nop
sbb
jo
nop
pop
es
cmp
push
xlat
add
fs
adc
ss
repnz
nop
cmps
cmp
jo
movs
stos
sti
fs
in
je
push
sub
retf
dec
adc
lock
pop
jnp
mov
dec
int
sub
push
fidivr
pop
sbb
cmps
jp
(bad)
out
add
aaa
add
push
jno
ins
mov
jmp
jnp
xchg
repnz
dec
push
sbb
cmps
mov
iret
mov
pop
ror
inc
addr16
gs
jmp
sub
jl
hlt
out
imul
push
jb
mov
pop
imul
push
jg
push
or
ins
jg
dec
add
cmp
movs
dec
push
jecxz
aas
push
pop
and
fild
mov
jle
jno
xchg
(bad)
popa
aas
mov
xlat
pop
mov
jbe
sub
jo
mov
iret
dec
sahf
and
aas
or
push
inc
xor
lods
repz
imul
push
push
jmp
jbe
fxch
adc
loop
movs
and
neg
lea
inc
int3
xchg
retf
neg
xchg
ds
stc
pop
inc
pop
(bad)
and
in
inc
ficom
sti
retf
xchg
xchg
aam
mov
push
sub
mov
(bad)
xor
dec
dec
test
repnz
push
repnz
xor
xchg
pushf
loope
adc
pop
stos
jb
sub
or
data16
xchg
ret
jns
popfw
mov
or
in
add
mov
out
inc
cmp
imul
sbb
xchg
mov
ins
xchg
adc
ins
call
push
push
lods
icebp
dec
into
mov
js
enter
jge
xor
sub
in
push
ret
test
inc
lods
jmp
cld
imul
hlt
mov
in
adc
scas
mov
aad
add
xchg
aas
push
and
sub
inc
daa
ja
mov
test
jp
out
xor
xor
sbb
hlt
adc
pop
pop
test
sub
sbb
mov
and
out
test
sbb
loop
cmp
fst
int
xor
cmp
xor
enter
int3
and
mov
mov
mov
mov
ss
sub
je
mov
or
xor
call
mov
ins
xor
inc
or
(bad)
lods
mov
xor
dec
retf
shl
xchg
inc
push
inc
fst
inc
dec
aaa
lock
fmul
adc
repnz
cmp
xchg
jb
sub
hlt
clc
mov
ss
cdq
push
cvtdq2ps
mov
lds
xchg
adc
mov
popf
aam
sub
dec
push
aaa
pop
cs
pop
cmp
in
retf
push
std
rcl
cli
aas
dec
icebp
sub
mov
adc
xor
out
jno
jns
sbb
(bad)
pop
push
jge
push
sbb
test
or
push
test
cli
sbb
test
add
mov
test
scas
rcl
mov
(bad)
mov
movs
scas
push
out
push
test
xor
shr
jnp
imul
arpl
adc
xor
jle
imul
sbb
cmp
(bad)
arpl
sahf
push
call
jbe
jge
mov
cmc
xor
lds
out
nop
push
cmp
sbb
inc
arpl
icebp
test
outs
add
jno
adc
xchg
or
iret
fwait
mov
mov
loopne
dec
and
clc
mov
clc
push
dec
test
pop
push
repz
ret
cdq
fnstsw
loope
jg
loope
scas
jmp
adc
add
jno
inc
xor
pop
xchg
inc
(bad)
(bad)
and
push
mov
fnstsw
dec
adc
aad
cmp
outs
add
iret
ror
test
sahf
xor
mov
ss
scas
and
call
sbb
out
fs
pusha
imul
dec
ret
imul
mov
jo
frstor
aad
test
hlt
addr16
out
(bad)
and
xor
scas
mov
nop
sub
xchg
es
movs
retf
out
push
inc
fbld
aaa
stos
xor
sub
loopne
jg
xor
arpl
cmp
fcomp
repnz
sti
std
xor
push
add
(bad)
push
stos
and
loop
mov
cmp
clc
in
lods
(bad)
out
repz
mov
mov
stos
cmc
mov
fild
mov
add
xchg
movs
dec
inc
out
pop
cmp
dec
jg
(bad)
pop
adc
mov
into
fist
aad
inc
cs
and
inc
lods
in
out
fild
loop
inc
(bad)
inc
push
xchg
cwde
xlat
nop
mov
add
fld
jo
jne
fisubr
mov
adc
or
xchg
ds
jg
inc
jno
sub
lahf
ror
cmc
repnz
push
mov
loop
aam
inc
add
aas
sbb
inc
or
mov
bound
jle
lahf
jl
movs
popa
test
idiv
sbb
call
add
in
data16
cwde
add
adc
test
xchg
outs
cld
out
(bad)
out
paddusb
das
ins
adc
push
mov
xor
je
ficomp
sbb
inc
call
xchg
dec
dec
or
scas
push
mov
xor
xor
pop
mov
sub
sub
ss
into
inc
xchg
and
loope
mov
imul
rol
push
leave
in
dec
mov
call
stos
(bad)
movs
retf
and
sbb
fnstcw
cmps
leave
imul
push
fld
shl
sub
hlt
xlat
ror
mov
jae
shl
fimul
dec
mov
(bad)
jmp
repz
adc
in
cmc
adc
dec
cmp
movs
fs
scas
fiadd
or
mov
ror
outs
loop
cmps
sub
cdq
xchg
and
mov
jae
dec
cmps
call
out
mov
xchg
and
iret
push
fist
ins
push
or
sub
dec
pop
xchg
repz
mov
pop
enter
neg
cmp
jb
shr
jae
test
das
sbb
inc
(bad)
xchg
dec
xchg
sub
rcl
inc
aam
add
xor
pop
test
sub
mov
mov
and
sar
pop
lods
rep
scas
imul
add
and
or
test
inc
push
retf
xchg
lods
lsl
mov
xchg
add
add
in
aam
jne
cmps
mov
shl
mov
lea
mov
sbb
gs
fadd
fmul
pop
jns
retf
push
sub
mov
call
sub
sbb
pop
es
jo
cmp
push
or
pop
out
mov
or
imul
mov
or
adc
jne
mov
sbb
cmp
data16
rol
les
xor
out
cwde
fdiv
dec
test
stos
add
ret
je
adc
cmp
xchg
int
aas
xlat
dec
or
or
rol
sub
jbe
jnp
and
retf
pop
xchg
nop
lea
adc
or
pusha
test
(bad)
int
dec
not
das
mov
out
int3
inc
xchg
jno
add
imul
dec
ror
sbb
std
xchg
cmp
xchg
cmc
fwait
imul
inc
dec
push
and
test
xchg
shl
dec
retf
imul
sub
xor
fnstsw
sbb
mov
mov
mov
jb
mov
loope
stc
mov
icebp
rcl
mov
aad
fcomi
stos
dec
mov
(bad)
fadd
retf
cmps
vpslld
idiv
cmps
or
mov
add
mov
sbb
push
outs
pop
xor
inc
fisubr
test
mov
xchg
movs
popa
sti
mov
inc
sub
(bad)
popf
test
loopne
(bad)
jmp
pop
push
cs
js
sub
jge
fwait
ins
pop
int3
std
push
ror
mov
cmp
les
or
and
pop
fistp
add
inc
pop
cmp
stos
pop
mov
jle
lea
sbb
(bad)
push
bound
mov
into
pop
pop
sub
add
bound
or
(bad)
call
push
cdq
gs
pushf
inc
sub
push
(bad)
cmp
les
scas
ins
popa
pop
push
neg
shrd
jecxz
aad
loop
(bad)
icebp
sbb
push
jnp
stos
jle
les
mov
mov
ret
push
pop
test
jno
mov
cli
repz
add
xlat
push
dec
mov
sbb
inc
fwait
shr
sub
xchg
retf
mov
cs
into
mov
adc
jle
xor
pusha
jmp
dec
js
xchg
cwde
shl
pop
sbb
and
and
movs
jmp
jae
repz
call
shl
xchg
mov
mov
fsub
out
inc
mov
int3
inc
addr16
dec
jo
pop
ror
mov
fiadd
jle
loopne
das
push
test
test
xchg
das
pop
add
mov
jae
sahf
or
loop
jle
(bad)
cmp
or
movs
std
(bad)
ffree
pop
push
mov
xor
ss
mov
fist
xor
out
sbb
pop
sub
in
mov
jmp
or
mov
loop
shr
fist
push
and
not
mov
or
rol
movs
pop
movs
imul
cmp
jl
mov
mov
cmp
push
movs
mov
inc
add
cmps
ret
or
sbb
lods
pushfw
enter
and
mov
and
mul
mov
(bad)
enter
loopne
fsubrp
aas
in
xor
push
in
cli
or
cmp
mov
test
movs
bound
in
pop
sub
scas
push
dec
(bad)
out
mov
inc
in
push
mov
mov
inc
xchg
inc
xor
cmp
dec
add
mov
sub
mov
xchg
push
lea
mov
xchg
imul
add
push
mov
lods
xor
pusha
or
data16
xchg
movs
out
inc
inc
mov
or
dec
add
into
out
js
xchg
rol
pop
clc
aam
jbe
test
fsub
icebp
add
mov
(bad)
in
movs
std
popf
push
push
inc
clc
cmps
or
and
loope
enter
or
stos
pop
or
pop
outs
xchg
mov
add
mov
iret
xor
pusha
mov
cmps
aam
mov
sub
sub
scas
ror
aad
and
push
push
(bad)
ds
dec
(bad)
sub
sbb
pusha
push
cwde
ds
fiadd
repz
scas
inc
mov
jp
xchg
aas
cmp
ja
cmp
popa
add
jno
repz
sub
and
dec
inc
cmp
or
mov
inc
clc
hlt
sbb
imul
push
jnp
scas
inc
and
addr16
lea
std
cmp
xor
fdecstp
int
(bad)
push
not
(bad)
xor
in
lahf
xchg
xor
ins
mov
sahf
add
push
iret
retf
push
mov
add
inc
and
adc
mov
es
mov
pop
jg
push
sbb
mov
inc
xchg
lods
mov
sahf
sub
jg
dec
or
imul
iret
mov
cmp
ja
xor
jb
push
push
mov
mov
push
mov
pop
xchg
adc
sub
in
(bad)
xchg
mov
cmp
lock
sbb
mov
into
pop
or
and
jmp
gs
xlat
jno
enter
jbe
adc
dec
jae
fimul
fs
mov
jp
xor
and
mov
imul
or
int
pop
add
fmul
les
jo
pop
mov
pop
inc
test
(bad)
fs
mov
cmc
xor
mov
das
lods
cs
xor
(bad)
js
std
push
jb
out
jno
push
addr16
arpl
xor
push
xchg
ja
and
fxch
mov
push
mov
loop
and
out
xor
pop
dec
jl
and
sub
and
mov
aam
aad
ja
imul
popf
push
dec
pop
mov
and
in
ss
cmp
jl
inc
lods
les
push
xor
js
adc
mov
std
mov
cmp
in
ret
mov
sbb
push
enter
jae
(bad)
sbb
jmp
mov
xchg
fs
pop
clc
pusha
and
dec
and
sar
and
and
adc
mov
retf
jne
cs
sar
or
rcl
test
or
mov
repz
out
push
lds
js
add
push
or
xor
dec
and
stos
out
cmp
dec
les
ret
cs
shr
add
sub
jb
js
xchg
dec
or
mov
pop
xchg
aam
(bad)
and
sbb
(bad)
jl
or
adc
(bad)
adc
std
test
sahf
mov
je
jg
mov
cs
xor
aad
idiv
clc
ins
sbb
lods
jne
(bad)
rol
add
imul
rol
jae
frstor
or
mov
pusha
xor
dec
dec
out
mov
(bad)
push
repz
mov
sub
mov
sub
hlt
xchg
pop
int
pop
sbb
and
add
ds
cmp
fnstenv
mov
push
mov
and
leave
cmp
or
ret
mov
cdq
or
sahf
jg
mov
cwde
fsubr
(bad)
pop
mov
hlt
pop
jmp
pop
shl
mov
es
inc
nop
xchg
mov
lock
mov
aam
repz
test
retf
pop
in
ds
cli
xor
inc
mov
pop
je
shl
dec
inc
xchg
or
xor
and
inc
aad
and
jne
sbb
addr16
in
mov
sbb
rcr
shr
div
jne
mov
mov
mov
iret
inc
mov
cmp
dec
enter
fs
lds
out
test
cmovl
jmp
loope
stc
cmp
in
out
cmp
and
test
(bad)
imul
sub
or
jmp
sar
mov
add
les
(bad)
cmps
pop
adc
mov
loope
fadd
xchg
aam
out
fwait
shr
cdq
imul
ins
ror
xchg
xor
mul
pusha
in
in
js
xchg
(bad)
pop
out
stos
mov
fwait
xor
enter
jl
ins
push
and
cwde
adc
sub
mov
icebp
psubd
shl
cmp
sti
dec
fnstsw
jmp
gs
iret
(bad)
idiv
test
stos
in
sbb
pop
mov
inc
call
and
sub
test
push
cld
out
imul
fnstcw
mov
sbb
shr
ret
pop
inc
rcr
pop
push
xor
je
test
int
ins
mov
and
daa
mov
mov
sbb
jo
pop
mov
mov
dec
or
mov
xor
jl
push
mov
or
sub
repz
bound
hlt
dec
jne
iret
adc
outs
pop
dec
repnz
les
leave
push
add
ficomp
idiv
or
xchg
lock
dec
inc
nop
mov
aaa
repz
div
push
(bad)
inc
jb
mov
mov
ffreep
addr16
cmp
mov
pop
outs
mov
dec
push
pop
mov
shr
shl
sbb
mov
add
rcl
mov
mov
fstp
jmp
inc
fs
ret
cmps
(bad)
(bad)
mov
pop
and
xor
stos
mov
outs
call
js
arpl
and
add
test
mov
push
xor
js
add
xor
ja
leave
fs
xchg
dec
shr
inc
mov
jge
cmc
xchg
out
adc
ret
(bad)
xchg
out
icebp
jns
call
ss
repz
das
mov
fild
pop
fs
pop
cmp
div
and
ins
rol
rol
pop
enter
std
sub
mov
mov
sbb
mov
sub
rol
xchg
mov
je
ret
test
out
adc
push
mul
cdq
add
shr
std
jnp
pop
les
lock
scas
jae
cmps
and
xchg
mov
dec
das
jbe
mov
cld
dec
rol
test
or
(bad)
shl
or
inc
or
leave
loopne
xchg
lahf
mov
mov
or
fmulp
outs
gs
call
push
fidivr
mov
bound
or
call
outs
pop
test
and
imul
xor
push
pop
jbe
stos
(bad)
push
shl
dec
pop
test
jge
xchg
or
jmp
sbb
sub
(bad)
outs
adc
test
push
test
inc
or
sbb
test
jmp
in
stos
mov
add
cmp
imul
fmul
dec
sbb
and
int
stos
lock
arpl
mov
fucomp
jge
mov
and
dec
and
add
push
add
and
(bad)
pop
jecxz
mov
sbb
out
mov
push
leave
jae
push
push
mov
loopne
arpl
add
xor
stos
into
pop
pop
stos
pop
mov
pop
jp
hlt
jnp
int3
lds
fsubr
xor
pop
fcom
pushf
icebp
xor
lds
fwait
lods
call
in
and
jmp
iret
mov
aaa
call
adc
and
(bad)
mov
dec
inc
jmp
xor
mov
fsub
dec
lds
and
cmc
xor
adc
mov
push
enter
loope
mov
jp
push
add
xchg
pop
sbb
adc
add
jmp
das
fmul
or
adc
sbb
ror
jmp
mov
std
(bad)
fneni(8087
push
dec
pusha
fwait
xchg
fidivr
stc
cmp
pop
jo
mov
lods
test
jmp
add
je
pop
pop
cmps
and
ret
leave
xor
adc
test
push
cdq
or
les
and
jne
lahf
int3
jl
lahf
ds
in
pop
dec
ins
scas
sub
jmp
adc
(bad)
pop
cwde
fwait
jmp
and
xchg
mov
cdq
inc
loop
ds
xor
fstp
and
bound
jge
js
shl
inc
cmp
pusha
dec
ss
imul
push
rcl
adc
jo
lods
mov
out
cmovno
sub
cmp
(bad)
cmps
les
jnp
mov
fldenv
and
push
rol
pop
mov
or
inc
add
cmp
jle
imul
push
lahf
mov
test
jp
push
dec
mov
sbb
cld
leave
mov
push
pop
sub
or
js
xor
cwde
add
sti
das
cmc
or
or
xor
in
bound
int3
or
(bad)
cld
pop
cmc
div
imul
(bad)
repnz
sbb
mov
add
push
sub
fcomp
dec
mov
or
mov
cmps
fisttp
loope
iret
adc
stos
cmps
cmp
inc
xor
int
jmp
jmp
cmp
xor
and
retf
jnp
adc
xlat
jecxz
les
mov
rcr
or
xchg
sub
ret
fwait
sbb
jg
(bad)
rcr
jge
or
fnstcw
mov
imul
xor
push
cmp
or
addr16
adc
imul
mov
into
inc
and
clc
popa
daa
mov
xchg
stos
adc
aad
test
dec
scas
inc
(bad)
pop
imul
movs
adc
jb
dec
add
(bad)
or
out
jmp
sti
cmp
fild
test
xor
sbb
pop
pop
xor
add
jle
inc
mov
sub
sub
sub
push
inc
xchg
es
xchg
scas
(bad)
dec
push
fprem1
mov
lahf
cmp
push
push
ins
cmp
test
mov
push
ret
pop
movs
lods
(bad)
out
int3
(bad)
xchg
iret
inc
in
loopne
push
add
mov
int
xchg
in
jecxz
mov
or
xor
sub
and
mov
stos
mov
jg
inc
aas
dec
imul
test
sar
gs
int3
push
xlat
lahf
adc
adc
inc
aam
jo
xchg
mov
xchg
sbb
sbb
jb
(bad)
int3
daa
aad
retf
pop
in
push
mov
outs
jmp
xchg
mov
adc
mov
fstp
xlat
mov
enter
jp
pop
packuswb
pop
pop
xor
or
mov
push
mov
jg
inc
add
push
sub
xchg
sub
scas
test
push
jge
lds
adc
cwde
mov
mov
inc
xor
jae
sub
push
(bad)
jbe
adc
daa
mov
stc
jp
data16
in
clc
int3
jb
mov
fadd
cmp
loopne
xor
inc
fs
stc
and
cmp
mov
pop
rcr
(bad)
mov
mov
lea
sub
aam
int3
dec
cmp
shl
out
and
mov
push
cmp
mov
and
fdiv
xor
adc
push
cmp
hlt
cmp
std
mov
or
sbb
jle
add
das
mov
idiv
ds
cmps
(bad)
out
movs
fdiv
cmc
sbb
or
into
mov
ins
movs
dec
arpl
(bad)
push
adc
pop
sti
jae
cmp
addr16
std
jle
pushf
(bad)
jns
jmp
and
movs
pop
fsubr
sub
mov
mov
bound
repz
div
js
add
cld
push
fnsave
inc
(bad)
mov
ret
loopne
mov
fstp
ficom
mov
cmps
jbe
das
fmul
lahf
mov
mov
ds
push
mov
sbb
pushf
dec
je
pop
dec
sbb
aad
fld
das
gs
push
mov
outs
dec
mov
jle
fisub
sti
retf
mov
les
lods
les
and
retf
push
ins
mov
cmp
sub
rcl
dec
sub
add
push
sti
jno
pop
lods
out
mov
jne
jbe
ficomp
xchg
fucomp
repnz
mov
(bad)
call
inc
push
in
js
adc
fnstsw
mov
cwde
sbb
mov
sub
xor
dec
sub
pop
mov
aam
xlat
mov
arpl
and
pusha
push
fist
into
in
mov
xor
mov
sub
push
adc
(bad)
jae
mov
pusha
fadd
(bad)
pushf
fdivr
lods
jne
pop
jne
(bad)
mov
std
xchg
dec
xor
lock
push
out
sub
or
imul
mov
pop
cmp
(bad)
je
rcl
into
aam
mov
inc
retf
inc
mov
cmp
push
jno
es
dec
adc
popa
mov
int3
div
outs
sahf
fiadd
mov
sub
jo
cmp
adc
add
outs
dec
cwde
loope
inc
pushf
ds
pop
loopne
add
sbb
add
call
clc
pop
mov
repz
loope
jne
test
and
arpl
das
add
xchg
lods
adc
mov
mov
and
xlat
jae
cwde
(bad)
mov
test
repnz
movs
sti
ror
pop
cmp
mov
push
cmp
xchg
jbe
pushf
pop
aas
pop
jge
or
inc
pop
inc
cld
mov
push
aas
in
ins
push
inc
push
mov
mov
pop
cmc
fdivr
out
cmc
jno
nop
(bad)
aas
out
cmp
add
cmc
mov
push
dec
push
rcr
dec
repz
fucomip
add
jne
add
fld
cmps
xor
jbe
fs
push
pop
out
cmp
jne
jo
add
(bad)
push
(bad)
mov
out
cmc
adc
or
mov
sbb
into
aad
or
mul
ins
push
sti
repz
lea
icebp
popf
js
mov
jb
pusha
and
inc
adc
mov
mov
cmp
adc
jno
xchg
cmps
leave
cmp
ins
and
cmp
loopne
sbb
inc
(bad)
ret
aad
xor
inc
jbe
adc
mul
shl
sbb
es
mov
into
xchg
jle
mov
(bad)
fsub
mov
xchg
rol
pop
push
jmp
pop
pop
popa
fistp
int3
test
mov
fst
ins
and
push
push
or
add
popa
rol
inc
nop
xchg
data16
inc
les
pop
movs
movs
jg
das
out
(bad)
arpl
pop
jo
inc
or
(bad)
das
call
cmp
std
mov
(bad)
mov
shr
js
sub
ins
mov
retf
adc
cmp
je
adc
mov
xor
ss
lds
shr
push
dec
xchg
mov
sub
popf
outs
mov
sbb
fmul
test
jno
add
mov
sub
jecxz
mov
jns
jns
test
arpl
test
out
je
adc
aam
cwde
js
movs
jne
inc
jnp
mov
mov
pop
cmps
es
push
out
jp
mov
in
sar
add
xchg
mov
sub
sub
xchg
or
mov
xor
clc
gs
add
mov
adc
mov
mov
je
ja
(bad)
bound
sub
adc
mov
daa
jne
aaa
push
xchg
push
in
sbb
enter
shr
(bad)
jno
jmp
jae
push
cmp
rcl
mov
out
loop
repnz
and
dec
pop
cmc
adc
sub
push
aad
and
aaa
fist
sub
mov
fcmovb
(bad)
inc
or
and
xor
mov
mov
jnp
data16
dec
aas
leave
ds
std
imul
adc
mov
inc
xchg
add
or
pusha
mov
adc
bound
jmp
call
xor
aad
or
mov
int
mov
iret
ins
lock
es
rcl
pop
xlat
(bad)
sahf
xchg
xchg
pusha
sbb
shl
rcr
aaa
mov
mov
pop
inc
int3
ret
sbb
cwde
and
push
add
sbb
mov
pushf
inc
in
enter
das
cmp
repnz
lods
jge
add
stc
and
cmp
add
add
cmp
jmp
aaa
jns
and
mov
jecxz
movs
adc
jo
lock
sbb
stc
sbb
push
sbb
sub
ret
mov
jnp
nop
repnz
inc
mov
aas
test
inc
in
test
out
loopne
sub
in
xchg
add
jae
xchg
add
adc
stos
in
outs
adc
xor
mov
gs
mov
xor
out
push
jnp
cdq
addr16
dec
sbb
sub
xor
xchg
push
push
out
mov
dec
xchg
(bad)
imul
push
adc
shl
test
jo
out
and
loopne
or
aas
in
test
dec
adc
xor
and
fsub
in
not
fstp
int3
adc
jno
xor
stos
jno
mov
mov
mov
retf
add
out
pop
loope
or
mov
sbb
sbb
cmps
pusha
cwde
out
add
dec
cmp
jbe
jmp
ds
jl
pusha
cld
(bad)
push
(bad)
pop
push
repnz
mov
fcomp
xchg
jge
xor
fstp
inc
push
mov
xchg
mov
xchg
call
adc
addr16
dec
ds
rol
pop
xchg
jne
pushf
sbb
mov
push
xor
mov
push
(bad)
test
pop
add
cmp
loop
mov
es
jg
out
pop
mov
aaa
or
popa
add
mov
dec
lds
sahf
xchg
mov
mov
inc
jb
inc
mov
aad
rcl
(bad)
out
fstp
iret
hlt
aaa
mov
sub
movs
cmp
jmp
jns
hlt
add
hlt
inc
outs
pop
pop
xchg
test
sub
scas
cmps
iret
test
push
mov
fsubr
pop
outs
retf
ror
jb
ret
int
mov
sub
daa
xor
cmp
aas
xor
shl
sbb
loope
in
(bad)
mov
cld
mov
xchg
mov
cdq
test
movs
jbe
inc
mov
xchg
jmp
icebp
jo
ficomp
pop
dec
dec
int3
loop
imul
loope
xchg
nop
cmp
xchg
pop
hlt
das
inc
fwait
jecxz
retf
hlt
stc
inc
cdq
sar
aad
mov
cmp
or
test
in
psubsw
inc
pop
mov
add
adc
push
cmp
test
aaa
pop
jl
cmp
inc
inc
pop
cwde
loop
es
nop
push
loopne
mov
cwde
shld
call
(bad)
retf
jo
pop
push
inc
test
fimul
jns
jmp
pop
push
ror
or
sub
ss
xchg
inc
push
dec
pop
out
cmp
inc
out
mov
fidiv
cmp
stos
adc
test
mov
jp
fstp
xor
mov
in
in
sub
lea
lods
retf
add
jmp
jnp
ja
out
rcl
sbb
pop
bound
scas
dec
mov
pop
pop
fadd
cmp
imul
inc
mov
icebp
popf
leave
pop
pusha
neg
xor
(bad)
cmps
mov
lods
jo
inc
xchg
mov
inc
repnz
and
push
cmp
rcr
enter
cmp
test
(bad)
loopne
cmp
ss
test
xchg
dec
xor
and
movs
jbe
jno
mov
inc
pop
fdivr
movs
rol
repz
mov
out
mov
sub
icebp
mov
iret
ins
mov
out
mov
push
sub
cwde
cmp
dec
push
or
mov
xchg
popf
cmps
dec
adc
je
xchg
cld
or
loope
adc
sbb
and
cmp
adc
jg
leave
mov
cmps
jle
(bad)
lds
into
inc
mov
mov
std
or
jbe
mov
sbb
lahf
mov
pusha
sbb
pop
in
int3
stos
ror
cmp
aad
call
iret
cmp
shl
clc
inc
dec
lods
sbb
int
outs
popa
jnp
or
adc
dec
outs
stos
cmc
sahf
lea
out
das
mov
shr
ja
(bad)
outs
ja
fsub
fs
xor
es
in
in
jbe
repz
or
scas
pop
sbb
es
sub
or
into
mov
mov
jl
dec
or
repz
xchg
inc
pop
cmp
and
or
mov
dec
dec
enter
xor
xchg
cld
loop
and
sub
push
ins
jbe
adc
pop
stos
bound
shr
scas
ins
mov
inc
icebp
and
stos
shl
(bad)
(bad)
adc
cli
mov
mov
scas
fdivr
pop
pop
pop
sub
into
pop
iret
imul
jnp
mov
inc
jl
mov
into
add
mov
addr16
pop
or
(bad)
pop
adc
sub
adc
sub
push
int
and
std
add
mov
je
and
jne
xchg
test
jae
fs
adc
add
arpl
adc
xchg
mov
inc
arpl
sti
cmps
push
enter
loop
xor
and
push
out
mov
in
xor
aas
stos
addr16
inc
jnp
lods
imul
outs
mov
aaa
lods
sbb
and
dec
sahf
adc
je
push
or
mov
aam
add
(bad)
cli
jp
enter
out
add
aaa
jmp
aam
lods
sbb
mov
jle
retf
xor
ins
test
pop
js
pop
jns
rol
repnz
adc
(bad)
push
add
movs
mov
pop
dec
icebp
mov
aam
adc
cmp
aad
ja
adc
sti
repz
xchg
xchg
adc
jmp
jp
mov
imul
mov
or
aaa
jo
pop
xor
mov
dec
pushf
ret
inc
sbb
dec
jae
mov
lock
pusha
popf
sti
mov
push
out
push
repnz
data16
lods
inc
cdq
mov
dec
push
loopne
lods
jae
xor
sbb
xchg
cmps
in
mov
mov
jnp
popf
imul
mov
dec
jg
retf
retf
test
jg
xor
xchg
add
push
rol
sar
ins
jb
es
dec
rcr
movs
je
sbb
xchg
es
jge
aam
icebp
mov
hlt
test
js
(bad)
or
mov
pop
dec
and
loopne
xchg
repnz
mov
cmps
repnz
les
lods
inc
sub
dec
es
xchg
cmp
push
cmp
dec
sub
in
inc
add
mov
xchg
lock
push
imul
pushf
mov
jg
fild
(bad)
call
in
push
jne
push
enter
pop
mov
mov
sbb
add
cdq
jne
dec
inc
hlt
mov
loop
and
mov
pop
pusha
in
push
lods
inc
lods
lea
pop
out
dec
retf
inc
lds
fisub
mov
mov
dec
inc
cmps
mov
pop
jmp
and
xchg
pop
dec
lds
test
xlat
rol
cdq
and
test
jp
scas
push
mov
jno
das
sbb
mov
mov
jp
mov
jbe
inc
sar
mov
loope
repnz
shr
test
cs
cmps
jmp
sahf
ror
cmp
inc
mov
jmp
cdq
dec
mov
add
cmp
pop
test
fld
cmp
outs
cmp
lock
push
outs
mov
xor
(bad)
rol
in
cmp
fwait
test
pop
call
lods
sbb
stc
jbe
adc
xchg
sub
out
xchg
loopne
js
ins
out
xor
lods
fucomp
call
mov
sub
fist
cs
dec
add
mov
in
cld
das
out
push
mov
and
and
inc
cs
ins
(bad)
jle
jl
jge
push
shl
sub
jns
cld
xor
mov
or
jns
and
in
pop
iret
mov
(bad)
mov
inc
hlt
dec
lahf
jne
shl
imul
lods
sbb
loopne
and
(bad)
mov
jno
mov
fsub
jns
loop
xchg
sbb
xchg
leave
ss
xor
inc
or
jp
lods
mov
addr16
mov
xchg
inc
aas
xor
in
add
ins
stos
dec
sub
mov
imul
cld
repz
mov
loop
ds
fisttp
dec
inc
out
repz
fcom
lods
data16
fwait
sahf
mov
sbb
push
and
das
je
dec
push
lds
fst
cli
neg
mov
movs
movs
sub
fmul
xchg
loopne
xchg
add
sub
jg
pop
int3
call
movs
cld
xor
pushf
dec
jo
mov
mov
mov
dec
or
xchg
cs
cld
add
add
cmp
loop
fbstp
cdq
das
ficomp
sub
int
sar
and
ins
or
cmps
inc
adc
xor
loop
jge
rcr
dec
lods
mov
loopne
pop
xchg
std
sub
and
jl
dec
xlat
fwait
sbb
jge
push
std
push
lds
push
jo
rcl
mul
out
xor
mov
mov
pop
ror
and
(bad)
mov
jns
ins
test
into
jnp
pop
sub
jecxz
hlt
jae
cmp
cmc
arpl
data16
mov
movs
fs
jl
fisub
js
mov
cmc
jmp
bound
mov
mov
xor
adc
jne
call
and
push
mov
les
push
gs
inc
mov
push
or
ja
dec
xor
imul
sub
iret
xor
jl
add
push
cmps
add
ret
pop
in
js
sbb
mov
scas
jo
jbe
jmp
into
ja
inc
jmp
jne
lea
jmp
pop
test
int3
jno
mul
les
or
mov
test
and
sub
jns
rcr
xor
stos
shr
ja
mov
sbb
xchg
cmc
cli
sbb
jle
out
lods
loopne
test
lods
in
cmp
pushf
adc
inc
das
or
mov
mov
lds
push
xor
sysret
mov
movs
gs
cmp
or
jg
push
test
sbb
scas
ret
fldcw
lods
cmc
fbld
push
xchg
loope
adc
fs
sbb
or
and
ret
cmps
xor
test
push
jmp
femms
pop
popf
nop
mov
pusha
ins
add
or
cmp
(bad)
fst
out
aas
jb
ins
jno
jg
fldcw
aam
(bad)
sub
dec
cld
cmps
or
pop
mov
lods
mov
mov
xor
xchg
xchg
mov
pop
popa
sbb
les
pop
mov
cmps
jmp
loopne
arpl
scas
dec
inc
adc
daa
xor
out
sbb
aas
popf
ret
push
scas
mov
add
inc
(bad)
mov
out
mov
xor
movs
xor
cmp
mov
push
fs
jns
bound
adc
clc
pop
icebp
jl
push
and
fbstp
js
inc
or
xchg
in
ds
and
in
mov
jbe
push
frstor
sbb
and
(bad)
sahf
mov
xlat
test
jnp
mov
std
scas
das
(bad)
fcmovnu
dec
aaa
mov
xlat
jge
iret
and
mov
mov
lock
xchg
out
push
and
idiv
jb
out
das
push
push
pop
or
(bad)
leave
mov
mov
mov
sbb
xchg
jns
lahf
hlt
pop
xlat
loopne
mov
jo
and
bnd
xlat
loop
add
xchg
jbe
sbb
push
std
mov
scas
dec
push
mov
mov
leave
push
call
sub
imul
sbb
ret
xor
cmp
(bad)
adc
mov
not
sbb
or
iret
xchg
inc
fst
and
and
push
xchg
sub
pop
jns
jp
xor
mov
loope
jnp
inc
dec
add
aad
paddusb
mov
ss
imul
sti
out
(bad)
lock
mov
aaa
lock
mov
out
and
dec
icebp
call
cmps
scas
mov
dec
cmps
mov
sub
ins
xor
mov
not
mov
repnz
fs
sar
cmp
enter
push
test
xchg
xor
je
dec
cs
dec
inc
in
xor
xchg
loope
ret
scas
ins
lods
les
xchg
mov
test
add
xor
aas
sub
jl
clc
xor
sub
jmp
sub
cmp
mov
and
xchg
test
les
daa
inc
mov
inc
cmp
mov
or
xchg
mov
pop
jmp
cmps
mov
fld
adc
fs
jb
daa
jp
push
lods
gs
sub
mov
shl
arpl
mov
add
mov
xchg
push
xchg
stos
jmp
mov
xchg
add
dec
or
push
mov
iret
mov
sti
test
pop
es
rcr
cld
xchg
aas
iret
mov
dec
pmuludq
dec
shr
retf
or
aam
mov
lahf
ins
jae
cmp
repz
mov
mov
jns
cmp
adc
popf
pop
jp
int
ins
jb
out
(bad)
adc
test
xchg
fstp
add
(bad)
and
stos
jg
movs
xor
in
or
clc
mov
jmp
fisttp
mov
daa
loopne
jnp
repz
jns
xor
js
ficomp
test
js
loope
dec
int3
adc
fisubr
mov
rol
ins
jne
test
imul
cmps
popa
fsubr
cmp
out
add
xor
dec
out
xchg
jl
mov
push
icebp
and
popa
push
mov
or
cdq
push
out
outs
xchg
inc
test
repnz
ja
aaa
push
sub
ins
add
xor
jmp
lods
push
sar
pop
dec
fmul
pop
fisub
xchg
aad
and
(bad)
gs
into
ja
cwde
xor
leave
sbb
adc
xchg
lods
lds
mov
loop
push
mov
sbb
mov
sbb
inc
in
and
imul
es
xor
xor
sbb
jl
add
add
cmp
rcl
retf
cs
int3
jmp
jmp
loopne
cmc
(bad)
jge
pop
scas
adc
rcr
aad
dec
(bad)
fisttp
jae
push
in
lods
mov
dec
jmp
loope
push
aad
imul
or
mov
cmp
into
cld
sbb
xor
ss
(bad)
adc
icebp
mov
in
loop
stos
mov
push
xor
lods
mov
fwait
rol
add
fld
sahf
mov
nop
out
ret
mov
pop
jne
retf
xchg
jae
sbb
or
adc
das
push
or
(bad)
int
cmp
inc
dec
sub
xchg
dec
jg
xor
jle
nop
and
pop
cmp
pop
mov
fwait
mov
lock
pop
cmc
and
pop
cs
movs
and
or
adc
(bad)
cmp
and
rcl
push
adc
mov
and
push
sub
ja
out
aam
mov
test
cli
add
shl
std
movs
test
loop
lea
sbb
das
xchg
(bad)
repnz
je
fild
arpl
cmp
mov
enter
sub
xchg
icebp
sbb
xor
sub
cmp
jmp
adc
push
mov
mov
into
cmp
imul
inc
mov
aas
shl
cli
ret
inc
xchg
hlt
jge
gs
push
fsubr
retf
call
jbe
sub
push
sub
sub
icebp
iret
sbb
mov
adc
clc
repnz
push
out
outs
xor
xor
xor
xor
lahf
cld
xchg
lock
lds
sbb
and
mov
rcr
dec
stc
in
loope
mov
ins
adc
cmps
data16
push
retf
in
push
adc
xchg
cmp
lods
jb
add
adc
aad
mov
xor
sbb
and
ins
sub
xor
xchg
or
cmp
lahf
ins
pop
push
lods
das
cli
in
imul
cli
les
mov
lock
(bad)
stc
sbb
aam
mov
or
xchg
jbe
xchg
pusha
int
mov
push
sub
mov
loop
out
sbb
fld
ss
cwde
jge
rol
mov
mov
es
repz
and
shl
cmps
and
cmps
mov
push
sti
ficomp
inc
xor
or
xor
mov
sbb
jle
ins
dec
xchg
sub
(bad)
xchg
in
xlat
adc
in
push
xor
lods
xchg
adc
and
push
add
or
outs
nop
clc
jmp
xor
cmps
pop
and
mov
or
jno
shr
push
and
fwait
sahf
loopne
inc
push
adc
sar
sbb
test
(bad)
nop
xchg
shr
push
mov
sbb
jmp
pop
lods
adc
pop
xchg
push
add
in
mov
jmp
div
push
adc
(bad)
call
data16
push
or
test
mov
int3
xchg
call
test
stc
jmp
adc
fldcw
pop
push
fisub
xor
mov
push
jecxz
jg
int3
inc
lahf
push
dec
push
mov
outs
test
mov
ins
fistp
shr
movs
mov
(bad)
shl
stos
jecxz
add
push
loope
(bad)
jp
lahf
inc
pop
repz
sbb
add
dec
adc
stos
(bad)
lods
jmp
cmps
pop
ret
sbb
jmp
mul
test
mov
push
aad
mov
dec
jg
sbb
ja
mov
inc
pop
popa
(bad)
mov
xor
popa
jecxz
es
push
push
pop
or
bound
adc
call
or
sub
push
daa
int3
ret
pop
cmp
retf
mov
shr
sbb
mov
and
dec
std
mov
push
mov
shl
std
retf
movs
xchg
leave
jge
clc
push
inc
mov
stc
fist
fwait
dec
xchg
jmp
push
xor
in
jp
inc
sbb
jb
add
das
cmp
fidiv
push
or
and
push
cmp
push
(bad)
loopne
mov
jmp
shl
mov
pop
ins
dec
lea
mov
jb
pop
inc
out
(bad)
js
aas
imul
out
or
cmps
hlt
cdq
cld
sub
mov
adc
fs
xor
mov
push
cmp
shl
pop
arpl
les
mov
(bad)
adc
cmc
ret
cli
jg
mov
movs
in
bound
outs
pop
out
push
pop
jne
jmp
imul
xor
fidiv
int
inc
pushf
cld
sub
mov
mov
dec
add
xor
jle
div
ins
sub
jb
(bad)
push
mov
shl
retf
lock
call
xor
or
jo
mov
ins
jbe
xor
xchg
cmp
fisttp
add
mov
retf
test
popf
fwait
xor
dec
mov
das
jno
mov
jmp
popa
mov
push
adc
ficomp
cmp
pop
faddp
sub
adc
call
pushf
ss
mov
scas
cmp
loope
xor
ins
imul
add
dec
adc
push
loopne
idiv
shr
dec
fimul
ror
mov
bound
xchg
aas
stos
gs
cmp
test
cmc
mov
cli
push
imul
jg
data16
push
inc
out
imul
outs
dec
imul
ret
push
dec
pop
fwait
xor
aaa
mov
mov
(bad)
fbld
pop
inc
pop
cmp
inc
les
mov
shl
jl
retf
add
sub
cmp
mov
cmp
mov
cmp
push
fadd
adc
jns
and
stos
adc
xchg
(bad)
mov
and
call
xchg
add
dec
call
(bad)
dec
xlat
adc
les
sbb
pop
dec
inc
xor
imul
fwait
idiv
fdiv
ins
or
xor
mov
idiv
xchg
ins
cld
pop
or
cmp
and
mov
out
pop
scas
dec
movs
leave
mov
stc
jo
add
sub
or
into
and
xchg
gs
inc
mov
dec
cs
repnz
ds
add
push
sbb
push
mov
pop
sbb
pop
xchg
jmp
mov
lods
and
mov
pop
sahf
repz
jge
push
cmp
push
or
inc
addr16
dec
int
add
or
mov
es
leave
sub
ret
push
leave
sti
mov
stos
(bad)
das
dec
inc
popa
mov
jae
in
and
and
mov
mov
jne
mov
out
pop
je
scas
xchg
inc
dec
outs
test
lds
push
sbb
xor
loopne
pop
mov
into
popf
jecxz
in
sbb
aam
fimul
jmp
rcr
aaa
in
xchg
aaa
mov
adc
pop
mul
jg
idiv
ds
int3
(bad)
in
adc
ds
mov
sub
mov
dec
pushf
rcl
and
out
cmp
push
lods
xor
add
addr16
or
dec
stos
into
pusha
js
int
inc
iret
jmp
sbb
pop
add
push
js
fbstp
aaa
ret
mov
xor
ins
add
out
cmp
enter
pop
mov
pop
cmps
jmp
cmps
pop
xchg
ret
loopne
lods
xlat
int3
mov
dec
aad
and
adc
add
pop
(bad)
xchg
sbb
sbb
pop
mov
pushf
lods
outs
jp
ror
xchg
retf
shl
jg
retf
aas
mov
movs
sbb
shl
(bad)
pop
push
aaa
add
lds
daa
fiadd
jg
in
and
cmc
sbb
call
js
mov
and
je
and
jp
test
mov
dec
cmc
cmp
inc
mov
xor
hlt
inc
pop
nop
fldcw
inc
adc
jae
jo
fdiv
xchg
ficomp
or
loope
dec
iret
jns
test
cmp
mov
xor
sbb
push
mov
cmp
jbe
push
cmps
mov
je
pop
mov
sub
int3
imul
out
add
leave
data16
jb
mov
fchs
dec
jno
adc
nop
adc
pop
jg
imul
fs
add
mov
adc
out
test
inc
add
pushf
sbb
or
and
and
rcl
jecxz
push
enter
sub
dec
mov
mov
ret
pop
xor
aas
jae
cld
retf
mov
inc
aam
pop
push
adc
dec
aas
pop
ret
cmps
dec
adc
test
rol
sbb
cdq
cmc
add
shl
push
adc
inc
adc
push
mov
or
dec
and
in
out
inc
jg
fidivr
jo
cmp
sub
fisttp
sbb
dec
push
call
scas
in
leave
sub
ins
mov
dec
inc
imul
push
xchg
sbb
pop
jecxz
dec
ss
push
fidivr
jnp
enter
loop
retf
loopne
(bad)
push
in
sbb
mov
add
xchg
push
ret
dec
xchg
out
in
(bad)
retf
test
aaa
lods
clc
dec
sub
mov
or
sub
call
cmps
ins
gs
mov
popf
lods
or
inc
(bad)
out
movs
adc
push
stos
test
jo
dec
loope
or
sahf
call
neg
lock
std
inc
pop
popf
jp
lods
mov
lods
xchg
or
xor
rol
xchg
pop
aam
mov
out
jb
cmp
bound
sub
jle
adc
inc
rcl
jne
mov
ins
and
jno
mov
adc
fsub
leave
push
(bad)
outs
lock
pusha
jo
add
xor
cdq
pop
xor
adc
dec
test
sub
lds
enter
xlat
movs
rol
fld
sub
aad
xor
ror
and
xchg
fnstsw
test
in
or
jl
lock
out
stos
jp
stos
(bad)
retf
or
push
in
aad
cwde
jg
cmp
out
inc
dec
pop
mov
dec
mov
dec
jb
out
in
sar
test
outs
push
push
xlat
daa
sbb
xchg
sub
push
mov
and
fild
test
ds
addr16
lods
sbb
sub
xor
dec
mov
fmul
stos
dec
sbb
std
sbb
rcr
or
ror
leave
sbb
pop
cmp
pushf
mov
add
add
lahf
jge
je
mov
retf
or
outs
(bad)
sub
push
sub
fist
xchg
shl
push
mov
mov
push
jle
pop
push
mov
and
add
mov
add
clc
xchg
movs
cmp
mov
jns
cdq
xchg
xor
mov
clc
mov
cmp
xchg
xchg
adc
call
xchg
pop
fwait
ds
sub
xlat
mov
jbe
mov
mov
div
test
movs
lea
xchg
repnz
jbe
adc
push
and
(bad)
loope
test
sub
mov
sub
push
xor
outs
and
push
mov
data16
test
test
mov
aam
push
or
into
aaa
call
mov
xor
push
push
pop
inc
jo
mov
pop
inc
jb
outs
mov
out
jle
mov
lahf
test
xlat
dec
add
(bad)
outs
jne
jnp
cmp
sahf
adc
dec
mov
mov
mov
pop
hlt
arpl
mov
(bad)
fisubr
xor
cmp
push
hlt
icebp
xchg
popa
cmp
retf
inc
out
jg
adc
ficom
and
and
dec
cli
(bad)
cmp
mov
pushf
ja
jge
mov
in
and
mov
sbb
pop
aas
cld
int
pop
fsubr
ins
mov
movs
test
fsubr
sbb
shl
das
xchg
test
and
adc
out
(bad)
fs
jp
aaa
inc
mov
jnp
push
repz
xor
jne
sbb
sbb
add
je
inc
outs
cmp
add
test
inc
sbb
jmp
jle
xchg
in
icebp
push
pop
test
out
sbb
push
jmp
add
aam
int
ins
stos
scas
aaa
and
in
xchg
rol
in
mov
sbb
out
ffreep
(bad)
in
jl
push
hlt
lock
movs
lahf
xchg
mov
es
jg
fidivr
int
mov
call
lods
pop
xchg
and
mov
cld
mov
pushf
mov
fsubr
mov
xor
ss
cmp
xor
and
pop
ret
dec
and
inc
das
cmc
inc
sbb
sub
push
adc
call
fwait
int3
daa
push
rcr
xchg
mov
inc
movs
fs
sahf
jno
or
cwde
mov
jo
add
movs
in
inc
jno
iret
jmp
add
xor
jmp
mov
cs
pop
test
mov
loop
enter
jnp
jo
jno
pop
gs
push
rcl
cmp
dec
push
aas
xor
adc
arpl
ret
clc
xchg
jae
cmp
sbb
lds
das
stos
and
xchg
inc
ds
mov
add
add
loope
sbb
push
push
fs
popf
cmp
dec
push
pop
fadd
lods
adc
in
ss
(bad)
xchg
xor
xchg
jge
mov
bnd
loop
imul
sti
(bad)
push
sbb
xor
jecxz
rcr
push
ficom
push
lds
and
xchg
push
and
fsubr
mov
pop
inc
shr
mov
rcr
addr16
je
mov
bound
and
(bad)
and
(bad)
dec
pop
adc
aas
pop
add
outs
ret
out
jg
sub
xchg
test
enter
icebp
cmp
jge
repnz
dec
jmp
enter
retf
add
xor
in
sbb
shl
jecxz
in
dec
pop
test
or
imul
jle
fwait
jge
hlt
mov
dec
lahf
sub
addr16
xchg
and
enter
push
dec
test
retf
popf
jg
cmp
test
cmp
sti
(bad)
clc
fwait
inc
jmp
call
inc
jle
ds
int3
(bad)
neg
aaa
(bad)
(bad)
call
pop
mul
adc
adc
stos
lods
xchg
inc
inc
pop
push
popa
cmps
add
adc
test
daa
inc
pushf
push
(bad)
test
aaa
mov
inc
out
xor
cmp
into
pop
adc
bound
xor
sub
xchg
xchg
mov
dec
fwait
and
je
and
dec
mov
mov
es
and
push
popa
(bad)
inc
cli
arpl
nop
lds
jg
push
pop
cli
xchg
fst
push
int
mov
mov
push
xchg
push
sahf
push
fs
icebp
(bad)
mov
and
daa
jl
pop
imul
imul
mov
pop
adc
push
test
mov
inc
or
xor
mov
push
test
jmp
cld
sub
test
loope
nop
inc
out
push
(bad)
sahf
inc
retf
dec
bound
in
jbe
stos
aas
enter
mov
inc
pop
push
out
aam
ss
std
out
cmp
push
int
ins
sbb
adc
sub
test
cmps
sbb
imul
xchg
and
cmp
mov
repz
inc
mov
cdq
xor
scas
cmp
mov
mov
jl
xchg
repnz
xchg
sbb
push
or
stos
mov
sbb
rcl
sar
movs
nop
es
mov
ror
js
inc
push
cmps
mov
inc
pop
dec
je
fidiv
popa
outs
dec
sbb
sti
add
rep
mov
xchg
loope
sub
(bad)
jge
ds
pop
mov
(bad)
pusha
fwait
jge
or
sub
lods
pop
mov
sbb
and
xchg
pop
fisttp
cmc
jne
pop
mov
bound
jae
data16
int3
inc
mov
aas
jns
into
mov
mov
mov
dec
xchg
lahf
sbb
or
addr16
fisub
stc
mov
or
pop
test
ins
outs
pop
adc
mov
mov
xlat
mov
mov
cs
inc
adc
stc
or
shl
push
inc
xchg
cmps
call
push
dec
jmp
dec
stos
dec
and
push
std
inc
pusha
fdiv
adc
or
mov
test
mov
sbb
mov
push
adc
mov
mov
hlt
sbb
mov
xchg
mov
dec
sbb
fdivrp
inc
ja
add
neg
push
push
ja
jge
sbb
add
mov
jne
mov
mov
jmp
outs
xchg
fld
push
movs
mov
cli
xchg
xor
xchg
int3
cld
cmps
neg
xchg
ret
fcomp
(bad)
in
stos
scas
lods
movs
sbb
xchg
jne
das
fistp
or
push
adc
loopne
xchg
fucomi
popf
inc
daa
pusha
cmp
adc
mov
test
add
arpl
stos
mov
add
fsubr
and
mov
inc
mov
outs
dec
jle
adc
xlat
adc
out
push
jle
cmp
push
dec
mov
push
daa
lods
jle
arpl
ins
mov
dec
pop
pop
xchg
iret
cdq
fidiv
sub
sbb
mov
mov
pop
(bad)
xchg
retf
stos
jmp
imul
fld
xchg
adc
xor
aad
xchg
mov
push
stc
ret
int
out
mov
xor
imul
loopne
repz
jecxz
cmp
dec
rol
add
jmp
in
dec
add
das
push
sbb
or
adc
ja
or
jmp
repnz
mov
mov
(bad)
mov
xchg
cmp
inc
fdiv
adc
test
push
push
adc
ret
mov
sbb
inc
into
(bad)
push
mov
adc
mov
lods
push
rcl
sub
mov
shr
push
inc
call
cmp
push
inc
adc
clc
ja
mov
lahf
cmc
mov
mov
loopne
xchg
call
jo
mov
rcr
cmc
gs
sub
or
xor
stos
adc
mov
inc
ins
ret
stos
mov
mov
pop
shl
xor
ficomp
mov
push
mov
jbe
out
fdivp
xchg
dec
cmp
(bad)
in
scas
jns
ja
pop
fst
lahf
retf
adc
jne
xchg
mov
movs
push
ja
and
mov
inc
sub
mov
iret
jne
push
sbb
out
das
dec
push
sbb
gs
jne
scas
rcl
(bad)
adc
pop
call
stos
cmp
and
push
fsubr
mov
adc
pop
addr16
sub
xchg
jp
dec
sbb
(bad)
and
dec
or
repnz
inc
mov
out
shr
aad
loopne
dec
mov
(bad)
or
cmps
mov
add
mov
mov
jbe
add
sbb
dec
mov
adc
rcl
outs
jge
nop
or
mov
pop
inc
adc
xchg
pop
int
jg
push
aas
lahf
mov
sbb
aaa
jns
sub
inc
das
test
mov
stos
es
(bad)
scas
inc
rcr
push
adc
mov
sbb
enter
out
lds
or
and
cld
call
sti
push
and
(bad)
sbb
loope
pop
mov
pop
nop
je
daa
xchg
mov
or
push
mov
clc
or
loopne
mov
pop
shr
pop
out
pushf
les
(bad)
data16
mov
jmp
cmp
fisubr
cwde
xor
and
cdq
ficomp
xchg
inc
retf
mov
out
bnd
push
int3
(bad)
xchg
hlt
mov
shl
into
lea
ja
shl
pop
pop
xor
daa
cmp
pop
imul
dec
fs
out
imul
pop
icebp
add
loope
sahf
scas
mov
and
sub
lea
push
dec
pusha
rdpmc
ss
cmps
jne
jbe
push
call
movs
pushf
and
jmp
fcomp
(bad)
(bad)
cmc
push
fwait
or
adc
push
sub
push
inc
pop
push
mov
xchg
movs
das
and
adc
out
sub
xlat
push
mov
mov
sti
fcomi
cmc
aaa
cmp
das
inc
dec
sub
ficomp
jmp
sub
dec
xor
xor
inc
into
inc
aam
hlt
lds
mov
nop
test
pop
arpl
sbb
(bad)
call
retf
ins
fcom
fmul
int
out
ins
ret
mov
inc
push
or
add
jns
(bad)
dec
pop
cmps
dec
shl
push
push
pop
fild
gs
test
cmp
sar
js
outs
sub
mov
popf
das
lods
push
xchg
(bad)
dec
add
rcl
outs
sbb
xor
sti
pop
cmc
scas
xor
ror
or
inc
call
pop
lock
imul
add
popa
inc
xor
mov
inc
cmp
dec
bound
aas
retf
jo
outs
jmp
jg
adc
or
in
pop
push
xor
aam
ror
aad
mov
lea
cmp
imul
mov
push
getsec
jo
sbb
hlt
sub
pop
push
xchg
cdq
iret
outs
inc
jg
lea
test
in
push
pop
aad
aaa
mov
arpl
in
(bad)
out
sub
sbb
adc
sub
xchg
jne
loope
cmps
xchg
inc
pop
popf
cmp
sbb
test
mov
stc
sub
les
add
sahf
mov
adc
xor
mov
xor
push
call
sub
ds
push
out
adc
xchg
mov
sbb
aad
xchg
call
push
jb
in
push
ficomp
sub
and
cmps
push
data16
adc
push
and
gs
aas
xchg
scas
inc
or
mov
sbb
pop
sub
jnp
lea
shl
dec
jo
cwde
sub
das
ins
jne
data16
add
mov
push
fwait
mov
enter
jle
and
jno
lea
sar
xor
fdiv
mov
sbb
(bad)
jmp
fild
int3
jle
and
movs
push
jb
cld
xlat
cli
jge
aaa
std
aad
mov
out
(bad)
or
lods
ds
pop
fs
sti
sbb
mov
xor
lods
pop
loopne
enter
sahf
cdq
mul
xchg
pop
fwait
popa
repnz
and
mov
jbe
cmp
jb
or
dec
(bad)
clc
jb
in
or
xchg
imul
dec
jno
and
pusha
cmc
sbb
mov
xor
jge
(bad)
clc
dec
push
test
fld
je
sub
sbb
aam
not
div
scas
ins
retf
dec
fimul
dec
push
iret
inc
call
shl
mov
idiv
xchg
push
std
out
in
cmc
sub
jb
cmp
iret
mov
and
and
push
add
pop
shl
das
mul
pop
in
scas
call
dec
jo
jmp
rcr
mov
movs
and
inc
jo
xor
jmp
push
ror
ins
jmp
fidiv
in
xor
dec
cli
and
mov
jp
pextrw
and
jle
mov
or
cmp
das
xchg
aas
jl
add
inc
mov
stos
cmc
jbe
out
inc
xchg
inc
sbb
test
cmp
retf
sbb
mov
add
jle
sub
mov
dec
enter
in
cmp
call
gs
out
push
pop
int3
mov
not
inc
stos
inc
jecxz
jmp
ret
fwait
inc
test
sbb
movs
mov
lds
ja
pop
(bad)
pop
cmp
push
push
fdiv
test
pop
jg
jae
inc
std
idiv
mov
stos
mov
mov
mov
jbe
lds
in
push
cld
mov
clc
(bad)
push
mov
(bad)
jnp
rcr
add
jg
jbe
scas
loopne
ror
push
repnz
cmp
imul
test
daa
lds
imul
outs
sub
and
fistp
xor
shl
movs
or
jle
and
stos
sbb
sahf
xlat
idiv
rol
pop
jb
movs
xchg
adc
push
std
pop
mov
and
or
mov
mov
das
xchg
inc
mov
mov
cdq
(bad)
xchg
rol
ds
int3
rcr
inc
idiv
or
int
jbe
pop
xor
aas
outs
jg
and
sbb
pop
(bad)
mov
jne
adc
add
call
mov
jo
movs
cs
std
test
es
jp
push
repnz
stos
mov
xor
mov
fist
mov
fimul
inc
add
or
sbb
ins
ror
pop
in
jno
cmp
mov
pop
or
in
adc
cmp
test
mov
idiv
stc
adc
jl
retf
push
lea
out
mov
mov
mov
pushf
mov
jns
xor
mov
mov
das
lods
mov
or
cs
xor
jecxz
jbe
cmps
jbe
mov
adc
adc
in
pop
ret
lods
jmp
inc
popf
(bad)
mov
pusha
popa
sar
test
add
adc
jno
cmp
fild
int
pop
fisttp
or
pop
sub
js
ss
and
call
arpl
fisub
xor
pop
in
fisttp
enter
ja
dec
out
sub
pop
das
sbb
adc
mov
shl
rcl
lds
fs
push
ss
loopne
or
pop
inc
inc
aad
jne
outs
iret
jne
clc
jns
cli
mov
pushf
(bad)
hlt
retf
pop
dec
retf
add
xchg
inc
dec
or
pop
lods
aas
lea
add
pop
mov
ins
and
add
lods
mov
test
and
pop
in
sub
jae
pop
es
xchg
(bad)
sub
mov
loope
adc
ret
inc
ds
fs
call
jg
jo
loopne
outs
xchg
sar
fstp
popf
mov
loope
(bad)
lds
data16
sbb
mov
shl
cmp
daa
dec
push
ds
(bad)
jg
(bad)
mov
xchg
stos
leave
dec
test
loop
dec
mov
mov
pop
dec
aas
inc
retf
out
jbe
xchg
or
pop
adc
and
(bad)
push
les
fisttp
sub
cld
xchg
sbb
and
icebp
in
bound
push
jg
out
xchg
popf
fcom
rol
inc
push
nop
ins
retf
pop
lods
sbb
xor
pop
out
cmp
ins
add
call
jmp
mov
xor
mov
push
pop
fimul
fidivr
dec
and
mov
lahf
(bad)
in
lea
repnz
sti
gs
fistp
xchg
mov
push
and
dec
out
loop
or
xchg
cmps
je
pop
or
cs
inc
rcr
cmp
int
mov
xlat
icebp
jo
jle
xor
dec
retf
in
leave
push
sub
test
rcr
int3
sbb
call
xor
push
xor
out
popa
dec
ss
fcmovb
push
mov
movs
sub
adc
loope
add
mov
pop
lock
mov
mov
push
(bad)
stc
jg
add
(bad)
(bad)
ja
inc
add
jge
mov
sub
jnp
mov
fidivr
pop
or
cld
xor
pop
ret
in
dec
cs
aas
ins
push
cmp
fstp
jmp
pushf
les
les
stos
adc
repz
ret
mov
(bad)
(bad)
out
jle
jae
stos
stos
scas
pop
pop
mov
or
sbb
rcr
cld
mov
lods
rcr
xchg
sub
mov
inc
mov
push
rcr
outs
sbb
div
ins
arpl
repz
xchg
sbb
xor
jmp
xchg
cmps
cli
push
(bad)
cdq
dec
push
rcr
xchg
enter
adc
inc
xchg
xchg
jg
and
in
inc
add
adc
sbb
add
out
in
mov
aas
sub
test
js
jo
pop
rcr
sub
call
sbb
push
xor
gs
mov
cmovbe
je
push
push
fld
mov
cmc
and
fild
and
jecxz
xor
fsub
mov
iret
sbb
enter
ins
outs
lods
in
push
int3
cdq
std
jo
mov
gs
adc
and
mov
dec
mov
cmp
or
pop
into
add
dec
movs
or
inc
lahf
jge
mov
rcl
lods
push
retf
sub
outs
xor
pusha
add
pushf
(bad)
(bad)
(bad)
xchg
stc
cmp
xchg
add
ret
and
push
leave
xor
pop
jg
dec
adc
or
ja
push
xchg
mov
inc
pop
ret
sti
rol
mov
retf
and
dec
(bad)
mov
bnd
cmc
test
in
mov
mov
stc
ret
aam
xchg
ds
or
sub
mov
test
cmp
cs
jno
sbb
ja
mov
dec
test
push
retf
push
cmp
test
movs
mov
push
bound
or
test
pusha
and
outs
outs
or
push
cmp
clc
adc
xor
(bad)
loope
mov
or
and
mov
ja
jmp
cdq
aam
xchg
xor
popa
loopne
dec
aas
test
retf
pusha
push
inc
mov
mov
jo
inc
jecxz
pop
jecxz
push
mov
outs
hlt
and
mov
cmp
sbb
stc
sub
inc
sti
mov
or
rcr
bound
rol
ja
(bad)
loopne
rcr
cmc
stc
xlat
fdivr
push
inc
mov
gs
(bad)
popf
mov
cmp
mov
dec
aaa
rol
xchg
pop
jmp
jle
loop
jp
jmp
cmps
fsubr
xchg
pop
jge
mov
pusha
mov
scas
pop
jmp
add
push
cmp
daa
xchg
jae
or
xchg
jno
iret
fwait
mov
inc
pop
repnz
and
mov
hlt
test
popf
cmp
xlat
dec
icebp
dec
outs
call
xor
jne
cdq
push
or
out
clc
lds
dec
sub
xor
mov
mov
push
or
xlat
int
int3
cdq
add
cli
pop
lock
daa
gs
xchg
sbb
lea
inc
dec
xchg
ja
mov
enter
das
dec
call
xchg
call
mov
ins
xlat
retf
test
cmps
mov
cmp
cmp
mov
mov
sbb
mov
lods
xor
arpl
inc
ins
pop
cs
sti
ss
xchg
cmps
jnp
cwde
hlt
mov
cmp
mov
or
fwait
pop
test
scas
jmp
dec
xor
mov
xor
in
pop
hlt
or
stos
push
les
mov
in
xor
mov
jp
and
xor
xchg
push
ret
jo
mov
mov
push
xor
(bad)
mov
std
lahf
aas
sbb
sub
repnz
cwde
dec
dec
mov
push
repnz
pop
setnp
pop
daa
cmc
adc
popf
lods
cwde
(bad)
or
mov
mov
mov
je
xchg
les
and
jge
cmps
add
ds
dec
pop
mov
ret
dec
sbb
xor
push
arpl
sar
push
mov
je
sar
not
dec
sub
(bad)
icebp
outs
scas
lds
mov
into
popa
jb
jle
int3
int3
bound
mov
repz
fdivp
cmc
retf
movs
sub
xchg
inc
mov
and
push
dec
jge
rol
mov
push
sub
cmc
retf
je
and
fiadd
mov
not
jb
xchg
std
mov
xor
jbe
scas
sbb
ficom
or
pop
je
ja
pop
pop
or
dec
inc
inc
ds
push
xor
jl
(bad)
mov
outs
mov
xchg
sub
lods
mov
mov
gs
ja
push
cld
mov
fdivr
ret
add
popf
pop
retf
adc
(bad)
aas
loope
xlat
xor
stc
enter
xchg
sub
retf
(bad)
shl
sub
lds
sahf
outs
imul
lock
in
iret
add
lods
push
cmp
pop
fincstp
push
in
aas
not
gs
mov
jb
push
dec
nop
xlat
and
pop
cmp
and
js
jno
out
leave
outs
or
popa
cmps
fisttp
mov
sub
call
xor
add
shl
mov
mov
imul
push
mov
or
lds
in
sub
dec
outs
dec
retf
xlat
mov
mov
mov
adc
cmp
push
jne
mov
pop
(bad)
mov
mov
cdq
fsub
sub
push
sbb
icebp
ret
loopne
imul
cmps
fdiv
inc
push
outs
lock
dec
and
sbb
pop
add
(bad)
jmp
pusha
adc
loop
std
cmc
push
jb
inc
jl
int3
aam
es
imul
cmps
ror
add
test
shl
sar
jecxz
inc
sbb
pop
mov
cwde
les
shl
test
popf
mov
jle
scas
xchg
js
push
ret
ja
inc
pop
outs
cmc
fimul
addr16
jmp
(bad)
fdiv
mov
js
rol
jle
pop
mov
hlt
adc
xchg
(bad)
out
ins
jne
(bad)
sub
stc
scas
inc
cmps
mov
mov
cmps
jae
xchg
xchg
pop
les
jne
shl
sub
add
pop
rol
retf
push
outs
test
push
iret
into
imul
inc
popf
cmp
add
pop
cdq
push
call
mov
lahf
stos
shl
inc
icebp
mov
fbstp
fmul
rcl
int
pop
sbb
cmp
mov
ins
xchg
and
ret
mov
and
rol
daa
leave
(bad)
or
shl
retf
cmp
or
movs
test
sub
pop
fdiv
pop
gs
dec
ins
mov
and
icebp
test
inc
loop
out
pop
int
sbb
scas
(bad)
scas
ds
inc
sbb
push
stos
sub
or
icebp
pop
jbe
repz
icebp
push
sar
jecxz
jno
pop
adc
xor
pop
inc
adc
mov
cdq
dec
hlt
pop
and
loop
rcl
pop
jae
jb
dec
dec
sbb
retf
inc
inc
test
imul
out
cmp
fsubr
mov
das
jle
scas
xchg
sub
xor
aas
pop
or
and
and
push
push
hlt
dec
mov
mov
cmp
xor
shl
daa
cmp
pop
push
jmp
or
and
adc
push
jno
fnsave
test
in
mov
std
xor
jno
out
scas
jmp
jg
mov
pmulhw
lahf
aad
stc
enter
jmp
jnp
jbe
cmps
sahf
ds
cli
sbb
shr
mov
ins
jecxz
mov
add
pop
mov
retf
cmps
xchg
aad
mov
sub
mov
outs
in
fs
out
mov
popf
sub
jp
mov
fild
mov
jbe
std
lods
ja
aad
pop
mov
xchg
add
and
mov
inc
scas
pop
(bad)
jnp
xchg
mov
aaa
in
xchg
imul
aam
and
(bad)
fldenv
or
ret
(bad)
in
pusha
popf
xchg
push
sbb
stos
mov
pop
jbe
push
jns
mov
loopne
dec
pop
add
sub
and
stc
scas
mov
mov
add
xchg
std
cmps
inc
fisub
jo
(bad)
mov
rol
ret
add
addr16
jb
adc
mov
pusha
outs
pop
daa
push
sbb
dec
addr16
mov
pop
repz
ja
push
ret
imul
mov
adc
dec
out
(bad)
jmp
imul
jge
add
mov
ror
ins
adc
xor
out
lds
out
cmp
ss
fsub
iret
xchg
jmp
sar
add
aam
into
or
das
jb
div
fisttp
retf
loop
(bad)
fsubr
fdiv
or
mov
nop
je
inc
sbb
jnp
ins
mov
push
xor
inc
sbb
loopne
inc
retf
inc
repz
adc
pop
sbb
mov
icebp
cmp
inc
fsubrp
adc
xor
inc
mov
call
xchg
rcl
push
jle
ja
cmp
idiv
xchg
xchg
pushf
push
mov
div
and
arpl
mov
mov
and
xchg
push
mov
lea
dec
jle
pusha
shr
outs
push
or
cli
mov
cmp
adc
jl
jle
cmp
or
addr16
hlt
scas
dec
ret
nop
sub
bsr
or
jge
sub
mov
cmc
(bad)
mov
cmp
mov
and
sahf
jg
jecxz
pop
call
xchg
mov
mov
mov
ins
mov
adc
dec
test
sub
jno
lods
pop
mov
push
push
sbb
ja
xchg
int
in
aaa
or
mov
dec
cmp
and
bound
and
and
mov
idiv
movs
(bad)
cmps
aad
sub
or
cmc
cmp
jb
int
fdiv
ds
or
movs
xchg
cmp
lods
fcomp
cmc
fst
pop
call
out
xchg
xor
inc
xchg
push
sbb
pop
xlat
and
rol
adc
and
mov
jmp
xor
sbb
jnp
sar
xchg
mov
inc
mov
es
push
les
scas
ret
fld
fadd
sti
push
jo
or
out
fiadd
mov
test
sbb
dec
jns
dec
data16
aas
(bad)
jb
rcl
ins
pop
cmp
(bad)
mov
outs
sbb
pmaxsw
mov
js
lods
pop
dec
add
aas
mov
or
(bad)
test
pop
(bad)
stos
mov
movs
sub
rcl
lds
call
pop
and
jl
pop
je
popa
icebp
fnstsw
imul
adc
mov
imul
mov
test
(bad)
cmp
aaa
test
in
ficomp
jnp
inc
and
add
(bad)
xchg
sub
or
test
cmp
xchg
in
add
and
xor
or
pop
dec
call
jg
lahf
cmp
xchg
dec
xchg
push
or
mov
xor
and
mov
lea
jg
lock
out
ins
outs
dec
sahf
dec
or
aam
push
stc
leave
nop
fwait
xchg
call
xchg
sbb
xchg
(bad)
mov
test
add
cmp
push
inc
jmp
pop
mov
add
jle
in
imul
mov
xchg
pushf
ret
iret
std
add
xchg
gs
push
loop
xchg
xchg
aaa
pop
call
adc
and
and
pop
idiv
mov
mov
sbb
and
test
dec
cdq
sub
xchg
or
lods
pop
(bad)
mov
shr
aas
cdq
jge
scas
adc
push
ficom
in
nop
(bad)
push
test
mov
inc
scas
jb
inc
add
dec
pusha
cdq
inc
mov
mov
retf
push
lds
cmps
out
js
not
stc
retf
push
fidiv
mov
jne
pop
ins
adc
lock
(bad)
mov
test
idiv
sbb
pop
(bad)
movs
retf
inc
loopne
push
xor
fidiv
hlt
sbb
cmp
mov
outs
jp
cwde
stos
leave
or
psllw
and
movs
adc
cmp
push
cmp
cmp
mov
psllq
in
push
mov
pop
in
in
in
ins
and
test
jecxz
test
inc
sahf
loopne
(bad)
mov
xchg
mov
mov
pop
mov
in
out
mul
jbe
or
jne
add
jp
fwait
mov
loop
(bad)
je
and
mov
dec
int3
dec
ret
sbb
cmps
push
pop
mov
(bad)
push
xchg
sub
aaa
push
clc
out
push
mov
cs
push
mov
stc
xor
cmp
dec
sbb
pop
push
adc
jl
cmp
icebp
stos
mov
mov
mov
xchg
add
mov
ins
jl
loope
or
mov
data16
xchg
mov
idiv
and
jae
sbb
aam
adc
xor
cmp
adc
nop
inc
int
pushf
jnp
push
mov
xchg
pop
ins
pop
xchg
pop
loop
imul
xchg
and
push
out
call
xchg
lea
movs
mov
ret
cdq
push
inc
(bad)
xor
and
cmp
ins
inc
(bad)
(bad)
int
xor
adc
test
fcmove
cwde
popa
xor
iret
(bad)
lock
mov
cmp
jnp
imul
xchg
lods
loop
rcr
sub
movs
and
push
cmp
dec
and
sbb
pop
lock
pop
mov
jge
stos
inc
pusha
gs
aam
imul
mov
mov
mov
loope
pop
mov
xchg
jbe
push
jg
push
fmul
popf
push
mov
(bad)
xor
pop
sub
rol
outs
add
jo
(bad)
fist
ds
imul
dec
xchg
ror
test
and
test
and
cli
pop
ja
rol
xchg
ss
das
xor
sub
xlat
not
inc
mov
inc
arpl
and
out
fstp
outs
jne
enter
aaa
fimul
outs
ret
clc
sub
lods
mov
and
xchg
ret
add
dec
(bad)
fbld
mov
sub
mov
int3
cmps
(bad)
mov
cs
jp
leave
aad
push
jmp
jle
jbe
add
movs
mov
std
(bad)
fwait
add
sbb
pusha
cli
adc
xchg
repz
xchg
inc
inc
hlt
in
inc
les
mov
mov
jge
push
adc
xchg
or
iret
aaa
cmps
shl
or
add
(bad)
outs
shl
mov
sbb
mov
(bad)
adc
and
xor
popa
dec
jae
cmp
and
mov
(bad)
push
(bad)
jbe
lods
xchg
sti
pop
dec
shr
clc
loop
cdq
cli
in
cwde
bound
out
sar
jg
stos
ret
jp
dec
rol
sar
push
not
shl
addr16
xor
cld
ds
fadd
cmp
into
jne
out
push
aaa
sub
js
lods
retf
ins
jns
jge
push
rol
bound
jmp
jno
xchg
sub
sti
aaa
inc
clc
icebp
aad
mov
cld
loopne
xor
sbb
jbe
push
lea
jns
ds
jns
and
mov
mov
xor
xchg
lods
pop
sbb
adc
jge
mov
in
in
sbb
in
add
mov
sub
ret
movntq
push
xor
xchg
xchg
daa
mov
add
pop
push
adc
mov
adc
pusha
mov
out
stos
(bad)
cmps
xor
retf
mov
mov
out
and
out
es
test
lahf
jne
cdq
test
pop
test
push
loope
lods
es
(bad)
stc
in
lahf
mov
push
jge
popa
ret
xchg
xchg
cmc
fstp
ins
idiv
ret
pop
imul
sbb
das
mov
(bad)
das
sbb
adc
and
outs
je
(bad)
scas
(bad)
pop
inc
mov
push
dec
dec
xchg
fs
fcomp
pop
sub
aas
jbe
xchg
jae
in
cmp
cli
ror
add
stos
xchg
sahf
sbb
retf
or
mov
int3
int
xor
fwait
dec
push
fisubr
inc
mov
fcomp
shr
push
jae
lock
movs
es
xor
fmul
scas
nop
jo
and
shl
mov
test
fwait
test
sub
dec
sbb
sbb
adc
jle
mov
mov
iret
je
adc
ret
jl
out
pop
or
movs
jae
dec
sub
ficom
add
inc
push
push
xchg
jmp
adc
mov
sbb
inc
dec
adc
mov
mov
inc
sbb
pop
dec
mov
mov
jnp
stc
mov
adc
jle
mov
es
div
push
sbb
ds
ret
adc
pop
jne
in
fimul
push
ja
fbstp
in
ret
int3
dec
fstp
xor
and
jbe
fidiv
imul
push
or
sbb
int3
jp
xchg
(bad)
mov
dec
dec
pop
pop
push
hlt
rcl
or
and
pop
or
add
pop
and
adc
pop
dec
adc
cmc
and
cmp
and
in
mov
scas
(bad)
cs
ret
and
xchg
inc
stos
push
jmp
dec
or
dec
and
sti
inc
jecxz
cld
cmc
shr
add
push
sbb
dec
xchg
adc
lahf
xor
ret
sbb
cmp
mov
aaa
add
js
in
mov
mov
shr
sbb
adc
mov
out
lahf
push
sub
aas
shr
adc
(bad)
push
jg
in
(bad)
xchg
inc
push
je
adc
in
jb
dec
pop
retf
popa
fst
out
call
xchg
ret
adc
outs
dec
dec
pop
loope
je
addr16
mov
shl
jne
ins
sub
mov
ins
xor
and
test
sub
mov
jbe
and
cli
jecxz
nop
outs
in
jmp
inc
sub
lods
push
jnp
les
enter
cwde
ffree
or
fsub
add
rol
hlt
jmp
sbb
cmp
es
push
stos
and
fild
cmps
or
outs
imul
or
cdq
pop
xchg
out
stos
lea
pusha
div
inc
or
and
inc
sub
xchg
aas
loop
ja
xlat
mov
pop
scas
dec
mov
xchg
jbe
fist
data16
lock
and
sbb
push
inc
dec
ret
test
mov
xor
push
add
inc
cmc
jae
xlat
cmps
movs
and
or
or
gs
cmps
dec
pop
jne
inc
out
ds
mov
iret
rcr
mov
inc
cmc
ds
pop
jnp
and
pop
out
mov
mov
(bad)
shl
std
or
mov
push
pop
stos
and
or
push
push
in
iret
inc
out
xor
adc
shl
lea
adc
jne
call
stc
xor
stos
fcomp
imul
push
out
sub
notrack
inc
push
cmp
fisttp
(bad)
and
push
je
ins
jmp
loope
xor
and
arpl
inc
sbb
cmp
mov
inc
lods
mov
movs
inc
push
(bad)
pop
jo
sahf
push
inc
xor
aas
push
sub
aad
fnsave
mov
add
test
add
out
rol
std
xchg
imul
popa
outs
in
les
fst
mov
fwait
ja
call
jo
nop
fmul
mov
movs
sbb
adc
fcomp
test
pop
psadbw
or
inc
xchg
in
xchg
add
inc
je
mov
loope
addr16
or
jg
and
mov
pop
jp
mov
and
adc
inc
bound
inc
hlt
sub
lahf
xchg
rol
cmp
into
xor
adc
xchg
and
add
pop
mov
and
(bad)
pop
push
inc
mov
dec
test
push
or
xchg
dec
xchg
mov
or
movs
cmp
cmp
pop
iret
mov
cmc
jg
and
lds
das
int3
mov
mov
aam
push
ins
popf
loope
repz
hlt
cmps
clc
cld
std
lahf
nop
mov
(bad)
mov
ds
pop
push
mov
xor
sbb
xor
mov
xlat
xor
les
or
out
pop
test
jb
dec
out
das
mov
pop
cmc
cmc
cmp
adc
mov
inc
jnp
out
repnz
gs
test
ins
test
loope
jle
std
call
sar
jl
lock
jl
nop
rcr
xchg
stc
xchg
mov
fld
add
inc
test
sbb
adc
(bad)
shl
sar
adc
push
sbb
dec
mov
xor
lds
jle
jb
cmps
loopne
jne
xor
movs
push
ins
imul
gs
lea
xchg
fdivr
cmp
pop
cli
mov
pop
je
test
lods
leave
pop
add
cld
lahf
sbb
dec
jle
and
cmc
sbb
cli
xor
xchg
mov
aaa
push
rcr
leave
leave
pop
jbe
mov
(bad)
cmps
call
cmp
movs
dec
sub
imul
cdq
test
ins
inc
or
test
arpl
xchg
enter
mov
cmp
xchg
lods
cmc
jae
pop
add
cmp
jae
cmp
and
push
cmp
adc
aam
sti
xchg
mov
adc
fcom
mov
sahf
sbb
(bad)
fsubr
arpl
es
jecxz
mov
inc
pop
jbe
popf
movs
ins
xchg
lahf
gs
sbb
dec
nop
sbb
add
cli
push
push
sbb
or
aam
inc
sbb
lds
and
pusha
ins
lods
mov
xchg
mov
dec
inc
gs
xchg
in
jbe
lea
bound
rcl
leave
fcomp
pop
pop
and
bnd
mov
pusha
jl
sub
loope
fnsave
out
dec
stc
addr16
mov
xor
popa
shl
out
(bad)
js
movs
iret
inc
fsubr
pop
rol
mov
xchg
sbb
xchg
or
or
(bad)
cmc
rol
dec
xchg
jg
or
jns
mov
clc
(bad)
sbb
iret
inc
aas
sbb
push
mov
mov
xor
into
les
push
adc
cli
push
jmp
jge
mov
out
stos
fst
dec
xor
pop
push
xlat
(bad)
xchg
and
cmps
jo
xchg
pushf
xchg
mov
les
mov
in
push
imul
mov
mov
scas
push
retf
push
lahf
jmp
loop
dec
dec
aam
(bad)
ja
int3
fwait
aas
jns
nop
sub
std
shl
scas
dec
inc
fld
mov
dec
mov
xchg
stos
push
dec
rcl
sbb
lods
mov
cmp
fbld
aad
inc
hlt
rep
(bad)
sbb
cmps
sbb
pushf
adc
cmp
andnps
push
into
ret
adc
xor
jno
jns
ja
dec
pushf
xor
xchg
loope
movs
jbe
int
mov
test
fild
inc
xchg
outs
or
out
jbe
fwait
iret
(bad)
ds
sbb
test
mov
jns
mov
(bad)
lock
mov
movs
xchg
adc
cmp
jo
popf
cs
ins
and
div
stos
mov
xlat
push
(bad)
and
pop
in
add
dec
stc
retf
sti
test
mov
jae
mov
mov
fistp
fist
inc
push
inc
add
movs
add
or
jg
lods
outs
and
dec
mov
std
repz
in
js
or
xchg
scas
sub
dec
jmp
gs
pop
pop
sub
ss
aad
lods
fs
pop
xchg
mov
ja
dec
ror
popf
ins
push
(bad)
add
or
(bad)
(bad)
(bad)
mov
mov
lods
retf
call
repz
mov
mov
pop
inc
push
pusha
adc
fistp
in
xor
add
or
jmp
push
loopne
inc
cmp
xor
jmp
lahf
sbb
sbb
sub
xor
(bad)
push
ins
cmc
popf
pop
pop
repnz
stos
inc
fsubr
out
sbb
repz
add
mov
mov
bound
pop
cmp
lods
pop
mov
adc
hlt
in
arpl
jmp
xchg
in
add
sub
cmp
or
out
and
cmp
in
cmc
lods
mov
fsubrp
enter
adc
mov
mov
sbb
imul
stos
scas
fsubr
push
cmp
test
mov
inc
mov
ficom
adc
inc
in
mov
es
pop
cmp
mov
scas
and
mov
retf
push
fimul
inc
add
fwait
jmp
or
add
xor
push
cmc
dec
adc
das
jp
jg
xor
xor
call
push
cdq
mov
xor
push
(bad)
mov
je
dec
sbb
inc
mov
lods
dec
neg
or
das
xchg
pop
adc
mov
rcr
punpckldq
mov
xchg
mov
cdq
mov
cmp
fucom
std
inc
shr
push
dec
ins
lods
pushw
loopne
add
adc
sub
mov
sub
std
mov
and
jecxz
call
scas
dec
pop
push
popa
xor
add
sahf
outs
cmps
mov
mov
sti
pop
lock
cmp
addr16
shr
mov
add
movs
dec
aaa
jmp
xchg
jns
std
dec
push
jg
data16
mov
ror
mov
xchg
jae
pop
loope
push
fdivr
mov
add
fst
loope
jp
cmps
sti
dec
(bad)
mov
arpl
in
sti
cmps
rcl
mov
(bad)
daa
repz
std
ins
dec
mov
add
jbe
mov
imul
pop
xlat
in
jmp
(bad)
out
dec
gs
into
mov
xchg
inc
iret
add
jnp
into
int3
push
xchg
cld
dec
into
mov
(bad)
xor
fwait
cmp
adc
dec
inc
xchg
or
aas
xor
mov
stos
sub
out
lods
add
add
loopne
sti
loopne
jne
dec
icebp
push
leave
clc
not
pusha
xchg
dec
cmp
adc
stos
sub
data16
xchg
imul
push
ins
add
aaa
xchg
int3
icebp
dec
shr
ret
and
mov
gs
aaa
pop
out
mov
clc
div
jl
or
mov
sbb
pop
xor
mov
mov
xchg
std
cmc
pusha
out
cmp
das
pop
ret
and
fcmovu
xlat
push
or
adc
test
lods
or
gs
push
es
mov
or
push
cmp
jmp
js
jp
push
sahf
out
pop
add
mov
clc
div
fiadd
cmp
xchg
std
sub
ss
sub
in
dec
sub
mov
shl
xor
pop
cmp
pop
ret
nop
enter
dec
jmp
cdq
pop
cmp
add
pop
xor
aaa
repnz
xchg
popa
sub
adc
xor
sub
mov
clc
mov
and
jmp
fdiv
mov
ins
jbe
fwait
xchg
repnz
jmp
push
pop
jmp
dec
push
ins
ret
jne
mov
push
mov
and
or
cmps
dec
add
lds
jmp
adc
mov
std
jge
push
sahf
push
nop
ror
int
imul
imul
push
out
pushf
imul
mov
dec
pop
push
movs
xor
mov
iret
mov
jns
pop
sub
sbb
pop
xlat
xor
sub
push
inc
pop
hlt
mov
(bad)
js
in
inc
xchg
fld
fidivr
mov
sub
rcl
mov
mov
cld
neg
pop
mov
jno
cmps
imul
xor
repnz
fimul
cmps
pop
xchg
add
push
xchg
mov
rcl
jns
jnp
out
xchg
jno
sbb
movs
gs
rol
loop
std
retf
jbe
inc
call
aad
sbb
test
pop
(bad)
fiadd
or
pop
inc
jmp
sbb
ins
aam
adc
dec
or
xchg
shr
inc
inc
mov
jp
loope
pop
xchg
popa
(bad)
test
or
xchg
jne
jo
movs
or
leave
cmp
mov
shr
xor
xchg
in
xlat
inc
cwde
lea
dec
and
daa
imul
out
push
jecxz
jmp
leave
pop
xor
or
mov
or
sahf
sub
cwde
push
repz
popa
xchg
adc
push
or
icebp
jge
stc
add
pop
mov
ret
xchg
cs
pop
imul
push
mov
or
jne
ret
in
add
lds
inc
rep
nop
pop
or
dec
imul
repz
mov
sub
and
cli
(bad)
push
ret
inc
sbb
mov
xchg
mov
cmps
or
fsub
push
test
sti
inc
loope
push
pop
mov
mov
push
sub
jge
pop
push
imul
add
mov
aad
push
mov
loope
fwait
aad
and
loopne
ret
sbb
and
cwde
(bad)
dec
(bad)
out
fbstp
rcl
mov
in
jno
mov
adc
push
out
jmp
and
xor
inc
inc
push
lods
ror
in
xchg
dec
mov
xchg
or
retf
sub
addr16
sbb
ins
push
leave
mov
int3
xor
sahf
sbb
stc
test
scas
daa
sar
out
xchg
jae
or
mov
push
std
jge
je
push
lods
mov
fcomp
cld
and
jo
test
sbb
cmp
call
sar
aam
lods
pop
xor
pop
arpl
cwde
(bad)
fnsave
fcom
pop
(bad)
es
mov
inc
and
out
ret
scas
push
aam
jmp
scas
dec
lock
xchg
(bad)
mov
call
cld
jno
dec
push
fcmovb
mov
call
pop
mov
sbb
pop
dec
mov
imul
pop
out
adc
ret
cmp
xchg
jbe
das
cdq
push
stos
xor
dec
rcl
xor
sbb
and
out
pop
sbb
and
jmp
sbb
inc
(bad)
ss
out
cli
jns
mov
pop
push
cmovns
(bad)
test
mov
xor
adc
outs
jl
adc
fcmovne
clc
adc
mov
hlt
mov
sub
xor
cmp
adc
scas
cld
mov
enter
adc
sbb
cdq
cwde
inc
bound
sub
repnz
adc
jo
or
sub
push
mov
inc
lahf
je
xlat
movs
out
ins
and
jecxz
ds
mov
mov
fcomp
aam
pusha
enter
ror
imul
mov
jnp
stc
pop
pusha
mov
iret
repz
aam
and
or
mov
(bad)
and
lahf
(bad)
xlat
fiadd
shl
dec
and
dec
std
dec
out
mov
mov
mov
xchg
das
jge
mov
pop
jmp
mov
arpl
shl
push
aas
xchg
test
xlat
dec
mov
pop
jno
adc
imul
ret
sti
mov
aad
adc
push
sbb
stos
xchg
aam
pop
xchg
cmp
sahf
lods
into
mov
mov
xchg
outs
jbe
jmp
lods
and
adc
sahf
outs
call
ds
dec
sbb
loopne
es
push
ror
and
daa
or
dec
add
inc
dec
int
jge
adc
cwde
ds
int3
jp
dec
inc
xor
loopne
in
or
or
and
popa
outs
fidivr
mov
cdq
test
clc
out
retf
jmp
pop
(bad)
cmp
pop
push
movs
or
lods
je
ins
bound
push
mov
or
and
stos
sbb
add
mov
(bad)
outs
mov
xchg
cmp
call
jae
shl
outs
repnz
out
(bad)
pop
push
inc
sti
xchg
(bad)
sar
jl
sbb
ins
mov
push
dec
dec
(bad)
retf
outs
lods
adc
mov
in
cmp
pop
std
add
pop
(bad)
icebp
fs
push
sbb
out
int3
jo
movs
test
out
pop
jae
fwait
js
cs
jne
mov
jl
sub
repnz
cli
into
clc
test
jge
call
pop
jecxz
pop
(bad)
ins
adc
leave
adc
cmp
mov
jno
xchg
stos
(bad)
call
push
dec
repz
and
jl
adc
or
iret
push
push
mov
loopne
pop
pop
xchg
gs
blcfill
mov
jb
adc
les
fmul
inc
mov
loop
mov
ret
lea
movs
cld
push
and
lahf
rcr
test
imul
sub
ffree
shl
or
sti
outs
sti
dec
jmp
push
fisub
xchg
push
lock
cld
and
rcr
fmul
pop
cmps
add
jmp
addr16
cli
cmp
dec
jp
lahf
iret
dec
daa
lea
in
loope
push
out
sahf
or
push
xor
sub
push
leave
cmp
sbb
loope
imul
jle
test
cdq
mov
loopne
dec
leave
jg
dec
pusha
mov
test
and
mov
ret
shl
sub
leave
xor
stos
and
retf
adc
xchg
pop
mov
jnp
cmc
dec
mov
in
and
xchg
(bad)
xor
call
movs
mov
push
imul
shl
pop
fwait
stos
das
sub
jbe
push
sbb
xor
xchg
cmp
dec
dec
(bad)
and
cmps
(bad)
jae
push
or
mov
bound
dec
outs
lahf
imul
sbb
ins
icebp
sbb
sbb
(bad)
jle
inc
cld
mov
movs
lds
cmps
and
test
int3
mov
dec
icebp
mov
stos
inc
fs
lock
out
aaa
sbb
jae
pop
fwait
or
push
dec
adc
std
sbb
mov
pop
mov
idiv
test
pop
rcl
inc
shl
(bad)
push
jg
adc
ds
in
lea
jnp
call
inc
adc
aad
jne
and
adc
retf
sbb
cdq
and
ror
jle
mov
aam
ficom
rcl
xchg
repz
outs
movs
mov
sub
fst
movs
sar
mov
xchg
push
ja
push
jl
jns
test
xchg
(bad)
cld
mov
jmp
popa
adc
jg
shr
sar
popa
inc
(bad)
leave
and
inc
nop
shl
dec
sub
xchg
and
jmp
sub
movs
aaa
movs
fidivr
sub
mov
dec
enter
sti
(bad)
push
lea
push
pop
js
add
ds
jge
and
xchg
pop
jae
test
and
dec
aaa
dec
cli
movs
in
jp
das
leave
fist
add
and
xor
push
out
pop
sub
inc
mov
test
fstp
ins
imul
adc
scas
push
pop
arpl
jne
shl
mov
lahf
xor
push
push
scas
sbb
hlt
sbb
xor
test
call
mov
jns
sub
call
and
add
and
das
cmp
jne
inc
and
leave
jecxz
mov
xor
loop
pop
or
fcomp
mov
mov
fs
scas
fs
xor
shl
cmp
or
mov
and
stos
cmps
inc
arpl
jno
cmp
paddw
dec
hlt
addr16
loop
mov
jno
jmp
test
out
adc
sahf
xchg
mov
das
outs
(bad)
cli
pop
push
mov
sahf
in
ror
retf
ss
outs
mov
mov
and
and
es
mov
outs
pop
ins
push
mov
int3
push
(bad)
push
adc
call
clc
dec
xor
popf
sbb
clc
mov
fwait
bound
xchg
jmp
mov
pop
in
rcr
rol
push
rep
test
mov
out
jl
mov
jecxz
loopne
adc
enter
mov
mov
add
mov
js
icebp
xor
xchg
arpl
fisub
fcom
aaa
or
sbb
xor
stos
ja
cld
jns
jb
fs
pop
(bad)
leave
add
aas
test
mov
iret
addr16
mov
pop
imul
adc
loop
cs
push
push
jmp
int
cmp
jb
add
gs
loope
push
sub
gs
push
xchg
ja
js
jle
mov
mov
cmp
sub
int3
xor
stc
pusha
(bad)
cmp
stos
mov
iret
pop
bound
fist
xchg
xor
ja
and
icebp
imul
fnstcw
dec
mov
jnp
shr
imul
push
xor
jb
imul
pop
mov
cs
(bad)
xchg
rcr
lahf
inc
sub
add
dec
into
pop
xor
jmp
imul
ins
mov
jl
mov
cmc
xor
bnd
adc
xlat
mov
loop
mov
js
dec
into
in
mov
fimul
xlat
pushf
or
sahf
push
loopne
xor
xor
and
push
aad
push
js
loop
(bad)
sbb
push
and
jecxz
jl
adc
jp
mov
icebp
or
pop
add
sbb
ret
and
cmps
clc
pop
test
das
outs
pop
pop
mov
jbe
out
les
mov
ror
push
iret
inc
fsubr
pop
push
cmp
(bad)
fld
adc
cmp
fimul
call
dec
out
cmps
xor
xchg
loope
rcl
call
add
push
sbb
test
faddp
or
xchg
stos
mov
pop
pop
icebp
retf
pop
jnp
cld
fild
test
dec
mov
mov
xchg
iret
adc
inc
jecxz
movs
addr16
fsubr
sar
outs
ret
fist
cmps
retf
ficomp
mov
add
dec
enter
inc
sub
mov
mov
cmps
cmp
xor
arpl
test
ss
movs
js
div
aam
jl
mov
pop
scas
imul
mov
cmc
cmp
(bad)
repnz
mov
mov
pop
iret
push
or
ss
mov
jle
jbe
mov
fisub
xor
cmps
sub
pop
imul
lahf
jle
jmp
dec
push
int
inc
dec
add
leave
cmp
xor
not
jecxz
or
std
inc
adc
adc
mov
test
jbe
loop
jmp
lock
sub
and
jp
neg
mov
movs
sub
xchg
cs
cdq
ss
xchg
ret
mov
xor
add
cmp
sbb
cmc
(bad)
shr
xchg
pop
aam
jae
push
and
ror
pop
and
inc
push
rcl
sub
lea
notrack
imul
add
sbb
(bad)
dec
call
xchg
cs
shr
repz
mov
sub
cmp
repnz
adc
icebp
retf
mov
add
fdivr
push
sub
cmp
les
cmp
retf
push
lds
cmp
(bad)
cdq
sbb
or
mov
inc
pop
pushf
mov
adc
or
jl
stos
ss
xor
xchg
je
retf
xchg
add
enter
sbb
imul
int
mov
cli
mov
push
lods
adc
sti
cmp
xor
or
jnp
in
cld
and
(bad)
mov
je
in
outs
jmp
push
inc
(bad)
pushf
sub
nop
movs
and
mov
or
mov
mov
xor
out
icebp
dec
or
clc
(bad)
sahf
push
and
cmp
and
add
push
xor
xchg
or
mov
les
out
or
in
data16
jp
cmc
bound
mov
fisubr
fist
and
(bad)
out
xchg
out
bound
or
xchg
cld
scas
adc
pxor
fdivr
inc
push
mov
fdivr
loopne
mov
xchg
rcl
mov
xchg
daa
cmp
cli
scas
mov
dec
xchg
mov
jmp
ins
jns
jns
imul
dec
sbb
sbb
std
fdivr
jo
add
clc
push
sub
frstor
aaa
bound
or
scas
popa
mov
push
mov
shr
or
aaa
shr
scas
outs
gs
addr16
inc
ret
nop
ficomp
shl
ins
ins
mov
cmp
fcom
jbe
push
mov
les
add
cmovae
out
mov
mov
mov
jbe
rol
aad
cmp
push
(bad)
sbb
stos
cld
sbb
scas
and
(bad)
xchg
pusha
cdq
imul
ja
add
daa
(bad)
rol
push
sub
stos
inc
push
inc
add
outs
stos
sbb
lods
sbb
add
les
mov
aad
add
pop
out
das
inc
jae
bound
xchg
daa
repz
xchg
push
in
rol
data16
inc
sahf
sbb
inc
xchg
mov
cmp
xchg
sbb
rol
add
sti
add
mov
addr16
mov
stos
dec
and
out
push
add
adc
mov
aam
and
or
lahf
dec
cmp
sbb
sar
adc
enter
stos
lock
dec
add
adc
bound
scas
test
mov
sbb
popf
mov
mov
ins
repz
(bad)
out
mov
cmp
sub
xchg
pop
add
and
adc
enter
pop
mov
or
(bad)
jge
dec
scas
ja
in
mov
call
jmp
pop
(bad)
aas
inc
and
dec
shl
sub
xchg
xor
jbe
mov
pusha
or
mov
jl
lods
repnz
(bad)
xchg
mov
pop
fs
xchg
mov
or
mov
sar
jne
sbb
stos
inc
or
pop
xchg
scas
cwde
cdq
xchg
dec
outs
pop
cli
ins
in
shr
sub
ss
pusha
pop
nop
loopne
mov
jecxz
mov
or
and
inc
fisttp
pop
push
jns
(bad)
lods
inc
scas
dec
rcr
xchg
adc
xor
sar
cs
jmp
movs
adc
or
mov
mov
ins
or
icebp
sbb
rol
lahf
nop
das
ss
mov
sbb
leave
and
inc
aad
test
std
in
mov
out
fstp
nop
push
cmc
neg
push
mov
ss
mov
outs
in
data16
cld
mov
dec
jnp
jns
ret
mov
mov
push
cmps
mov
or
loop
mov
add
jbe
call
retf
add
ret
xor
inc
(bad)
sbb
mul
or
sub
std
repnz
fdiv
fst
into
mov
mov
nop
test
xchg
push
or
mov
shl
js
mov
ret
jns
adc
retf
push
fcmovnb
jge
stc
pop
retf
lea
inc
test
aam
mov
test
push
mov
pop
enter
sbb
xchg
cmp
inc
ret
hlt
lods
or
popa
cmp
sub
(bad)
bnd
into
dec
rep
sub
popa
and
stc
pextrw
xchg
xchg
or
pop
and
jle
or
xor
adc
out
mov
lahf
adc
jmp
nop
daa
cli
retf
test
rol
rcl
ret
add
jns
fs
xchg
adc
sbb
shl
lock
cld
sub
(bad)
jno
push
xchg
push
mov
and
sub
repnz
fiadd
dec
jns
frstor
sub
scas
cmp
xchg
push
enter
cmc
retf
dec
dec
and
repnz
fsubr
jmp
nop
xchg
jmp
pop
repnz
pop
int
inc
movs
xchg
sub
and
mov
xor
add
mov
(bad)
lods
mov
cmc
mov
pop
and
pop
aaa
lds
pop
repnz
push
or
adc
cmp
clc
jg
in
rcl
jne
add
adc
mov
sbb
and
push
mov
mov
sub
add
or
std
loope
inc
iret
es
xchg
in
xchg
and
adc
mov
mov
ins
sbb
push
call
outs
ins
idiv
bound
loope
xchg
xchg
jmp
cmp
jb
cdq
les
add
daa
and
daa
jle
jbe
sbb
fsub
pusha
push
mov
out
ret
ret
retf
es
scas
or
xchg
loopne
test
adc
fdiv
sub
mov
addr16
dec
mov
daa
dec
les
clc
lock
or
int3
stc
lea
add
pop
ret
cld
pop
cmc
daa
mov
push
pop
add
out
mov
cmp
inc
xchg
adc
imul
sub
data16
pop
outs
xlat
iret
cmps
stos
ret
dec
jmp
jle
popa
out
push
push
jno
ss
sub
inc
pop
sbb
add
fwait
sub
call
and
push
adc
inc
dec
clc
and
outs
clc
inc
repnz
dec
mov
es
nop
jmp
sub
repnz
adc
xchg
mov
adc
inc
or
push
jb
sbb
repz
and
mov
lahf
fsub
xor
mov
movs
adc
mul
or
push
pop
xchg
xor
xchg
idiv
repnz
mov
cmps
addr16
sti
add
fs
pop
mov
jae
lahf
lfs
outs
(bad)
jne
xchg
pushf
cmp
enter
aaa
jnp
mov
mov
sti
mov
sbb
xor
xchg
scas
cwde
mov
and
rol
ins
call
shl
inc
aad
sub
aas
cld
dec
add
add
mov
pop
ins
xor
leave
test
mov
and
and
in
add
popa
fcomip
xchg
movs
dec
cmps
loopne
ret
lahf
lea
rol
jo
mov
icebp
mov
aas
or
mov
aaa
in
jge
into
xor
and
sub
in
push
push
sbb
pop
cmps
hlt
xor
sub
push
(bad)
adc
push
aas
mov
fld
arpl
icebp
mov
call
call
adc
js
dec
lds
jnp
or
into
add
lahf
xchg
cld
push
stos
popa
dec
mov
sbb
addr16
jmp
out
mov
jae
mov
sub
int3
push
pop
stos
jge
mov
(bad)
sahf
adc
xchg
mov
aad
push
popf
ror
std
mov
mov
sti
jecxz
mov
add
jmp
popf
shl
jnp
jmp
mov
add
inc
cmp
jl
out
xchg
pop
(bad)
pop
les
cmp
adc
push
cmps
shl
or
ret
push
xor
dec
ficomp
or
jns
push
mov
ds
loop
adc
leave
in
jmp
test
cmp
sbb
loope
iret
rcr
cmp
fst
mov
add
fnstcw
dec
xlat
repz
call
jmp
stos
rol
sub
push
jg
mov
enter
repz
add
stc
retf
jg
jecxz
sub
movs
mov
add
lods
jb
cmps
movs
pop
out
movs
dec
(bad)
inc
mov
jae
call
dec
xchg
enter
sub
es
mov
sbb
imul
jecxz
mov
sar
in
les
push
cmp
cmp
or
pop
js
adc
das
out
xor
jo
push
(bad)
mov
je
scas
xchg
in
push
push
shl
inc
ins
seta
and
inc
icebp
push
enter
dec
sub
pop
call
and
push
add
hlt
movs
cmp
push
and
inc
xchg
retf
scas
sub
inc
leave
data16
fbld
sub
imul
in
push
lods
add
add
imul
aas
cmp
and
cmp
sub
and
scas
in
cmp
jns
and
(bad)
js
test
rcl
stc
sub
test
or
inc
(bad)
pop
lods
add
call
cli
(bad)
xchg
add
in
xchg
pop
pop
cs
aaa
sti
(bad)
jmp
int
scas
mul
adc
jg
data16
mov
aad
cmps
lahf
lods
xchg
js
jno
jmp
and
mov
fs
out
jne
sahf
imul
pushf
ss
int3
xchg
sti
(bad)
(bad)
fdivr
aaa
lock
sahf
or
fdivr
lahf
or
movs
or
push
lock
inc
cdq
dec
test
pop
and
nop
jl
fsub
cmp
cdq
xor
lea
in
call
test
sbb
loop
xor
sbb
movs
arpl
out
add
ret
pop
ins
xchg
xchg
lock
add
cmp
in
add
jp
sub
fwait
test
out
mov
push
inc
pop
popf
sub
cmp
out
lods
mov
and
sub
cmp
xor
mov
adc
dec
push
and
popa
cs
dec
jae
xchg
add
pop
ret
imul
fs
pop
sbb
jns
cmp
(bad)
xchg
and
jae
mov
mov
aad
lods
mov
jl
cmp
sbb
jecxz
daa
pop
add
pop
scas
mov
repz
inc
loope
cli
and
jmp
xchg
shl
and
sub
call
dec
fidiv
test
jle
es
shl
sahf
ins
jo
ret
mov
enter
cmp
push
pop
jae
gs
cmps
adc
or
jg
test
add
cmp
cmp
add
add
push
jae
mov
jmp
xor
sar
sub
jo
sbb
mov
mov
inc
jb
pop
push
push
xchg
add
(bad)
test
cmps
dec
test
inc
call
dec
lods
xchg
aaa
pop
js
out
jb
inc
rcl
mov
mov
shl
mov
in
aam
fcomp
pop
dec
(bad)
fidiv
add
push
add
popf
sub
pop
fcomip
addr16
retf
fndisi(8087
daa
jle
hlt
fistp
xor
cld
and
push
inc
pop
fdiv
popa
dec
xchg
sub
rol
(bad)
or
add
push
and
call
das
adc
push
mov
fist
pop
ret
sbb
loope
leave
cmp
xchg
add
and
std
xor
ins
test
pop
ret
clc
xchg
adc
push
es
push
popa
mov
rol
getsec
push
jne
sahf
(bad)
sub
sbb
and
fwait
rcr
fwait
xchg
lock
sahf
dec
push
jbe
lods
push
mov
imul
das
leave
or
adc
dec
rcl
push
cmp
dec
out
out
mov
lock
popf
cmp
std
and
pop
sub
test
inc
add
xor
in
cwde
fcmovb
push
daa
cwde
pop
es
das
push
mov
pop
add
shl
stc
hlt
test
je
push
lds
add
push
call
mov
add
ret
mov
sub
(bad)
jne
pop
std
es
scas
fbstp
aaa
in
popf
es
inc
mov
or
cmp
rcl
mov
lock
clc
fldenv
jge
mov
out
vmovaps
push
fcom
js
cmp
pop
and
out
ds
pop
jl
std
fisubr
xchg
test
enter
mov
and
xchg
cmp
pop
push
mov
pop
cs
(bad)
in
data16
push
sbb
and
loope
jp
mov
and
out
pop
das
mov
call
ror
add
ja
call
add
(bad)
pusha
outs
scas
ds
sbb
ds
jl
pop
adc
lea
sbb
add
add
push
(bad)
lahf
pop
in
jmp
jecxz
pushf
shl
or
ja
ret
mov
imul
scas
add
sub
or
pop
aaa
pop
das
sub
movs
dec
sub
jmp
pop
fisub
movs
xchg
add
sub
push
or
mov
push
push
add
sub
ror
adc
and
shl
inc
mov
xchg
pushf
fstp
fidiv
dec
xchg
add
shl
ins
shr
in
jae
cmps
into
mov
neg
mov
inc
adc
mov
add
(bad)
popf
retf
retf
int
popa
xlat
std
pop
test
stos
icebp
adc
test
add
mov
int
adc
aam
(bad)
mov
inc
xor
shl
ror
or
xor
cmp
xchg
call
out
test
or
push
lods
push
clc
stos
cmps
and
cli
es
test
shl
std
dec
enter
fsubr
and
in
pop
popa
jge
mov
xchg
mov
push
add
outs
push
js
out
cmps
stc
cmp
or
pop
or
or
pop
push
(bad)
pop
jl
add
sub
and
fwait
inc
xchg
sbb
bnd
push
cld
(bad)
ss
mov
loop
cmp
scas
sub
jns
data16
or
xor
clc
mov
add
mov
pushf
add
dec
aad
stos
inc
stc
mov
shr
inc
repz
inc
push
push
mov
imul
or
inc
add
imul
pop
inc
xor
icebp
fwait
in
les
ret
nop
or
stos
mov
push
les
repz
and
pop
stos
dec
adc
out
or
mov
cmc
sbb
je
push
lds
cvtps2pd
in
jg
ds
(bad)
jmp
sbb
push
out
fwait
mov
mov
into
dec
data16
mov
in
(bad)
cli
fadd
dec
stc
pop
cmp
cmp
gs
enter
jmp
mov
adc
sub
hlt
out
es
or
and
in
outs
jge
push
cmp
addr16
mov
jle
clc
dec
push
xor
mov
into
push
std
mov
call
cwde
mov
push
push
jo
cmp
mov
mov
loope
inc
adc
mov
mov
dec
jg
inc
das
cmp
mov
sahf
stc
or
in
out
mov
cmp
cmp
fidivr
jb
test
fisubr
xor
cmps
not
retf
xchg
mov
pop
cmovg
cs
adc
into
or
pop
test
jp
cwde
dec
dec
dec
mov
add
xor
sbb
lods
imul
es
dec
jmp
nop
cld
jb
dec
imul
aaa
push
stos
push
mov
xchg
pop
aaa
pop
sahf
xchg
add
or
jbe
xor
pushf
jmp
cmp
hlt
mov
dec
fidiv
ja
xor
push
xchg
add
sbb
call
mov
cmp
mov
mov
fcomp
pop
por
add
mov
idiv
push
movs
sahf
adc
and
(bad)
ss
iret
arpl
dec
mov
jecxz
aaa
push
mov
mov
sbb
(bad)
mov
les
mov
cmps
cs
mov
les
xlat
movs
xchg
arpl
pop
mov
cmps
dec
adc
add
ret
retf
push
mov
jge
add
stos
mov
add
or
cld
rcl
cmp
mov
jmp
leave
or
les
cmp
fcom
xchg
mov
push
push
inc
es
inc
fwait
xchg
inc
xor
pop
and
loope
popf
sahf
mov
mov
ja
mov
in
and
out
and
loopne
test
mov
out
repz
hlt
fisub
mov
xchg
cmps
mov
dec
imul
or
jbe
sbb
inc
xchg
xchg
mov
sub
test
ret
mov
out
and
jbe
mov
add
add
je
push
test
pop
sbb
push
xor
mov
int3
adc
sub
dec
cmps
xor
inc
jne
and
cli
sub
loopne
add
and
paddsw
jecxz
out
mov
pusha
push
push
stos
mov
lahf
or
jle
and
leave
sbb
cmp
clc
jge
(bad)
and
(bad)
int3
retf
mov
loopne
xchg
jmp
vorps
jno
jmp
sbb
adc
fisub
imul
fisubr
cmp
push
test
sub
xchg
push
in
ss
xchg
mov
lods
mov
stc
and
stos
cmp
sbb
or
je
pop
idiv
mov
sbb
push
movs
and
test
lea
add
in
clc
daa
test
add
cmps
mov
aaa
push
pop
and
xchg
repnz
xor
jb
cmp
sub
test
inc
and
xchg
or
sub
xchg
ret
pop
retf
into
sbb
mov
mov
popf
jno
mov
cmps
imul
scas
inc
fwait
jle
mov
out
mov
mov
loope
dec
jno
cs
stos
cmp
and
call
add
test
stos
out
fiadd
ja
push
jne
movs
leave
mov
sbb
retf
xchg
push
cdq
xchg
movs
xchg
cmp
xchg
inc
jae
inc
mov
sub
and
xchg
sub
push
sbb
jnp
adc
ret
test
gs
retf
xor
lahf
inc
sbb
pop
cmps
or
cdq
adc
daa
inc
mov
cmp
hlt
inc
gs
add
cmp
ret
clc
xchg
and
sbb
xchg
and
sub
cmp
nop
cs
dec
cmc
iret
repz
and
mov
retf
xchg
jg
and
clc
adc
mov
pop
xor
sub
shl
xchg
xor
movs
mov
xchg
xor
dec
call
test
int3
movs
mov
mov
add
pop
popf
fs
pop
mov
in
fsubr
mov
inc
rol
or
ret
fucomi
jno
jmp
ds
das
js
xor
or
add
add
and
add
mov
in
fs
cli
xchg
cmp
xor
sbb
mov
mov
stc
inc
push
sbb
mov
data16
adc
jmp
rol
cmps
mov
fs
and
and
mov
push
cli
pop
repz
imul
lock
jl
mov
ins
test
test
call
imul
clc
jmp
icebp
jnp
es
cmp
add
mov
push
and
(bad)
adc
iret
das
ror
push
retf
clc
scas
mov
mov
pop
(bad)
out
or
sbb
shr
ret
sub
sbb
out
aad
mov
ret
pop
xchg
ins
cld
inc
stc
sbb
pop
and
add
repz
mov
add
inc
pop
pop
adc
mov
repnz
and
push
aas
and
push
jne
jl
adc
dec
call
add
cmp
mov
push
sub
sub
mov
in
iret
jnp
rcr
ins
mov
sbb
push
nop
dec
(bad)
jp
cmc
mov
repnz
sti
popf
ins
sbb
pop
(bad)
in
add
inc
cli
mov
scas
adc
xor
out
xchg
mov
fistp
fwait
add
sar
mov
hlt
cs
and
aam
(bad)
jb
jb
lock
sub
rol
push
push
repnz
mov
fdivr
cmp
packsswb
pop
das
xor
dec
aad
repnz
xchg
(bad)
les
es
pmulhuw
sub
and
mov
sub
out
dec
push
jne
dec
aam
mov
xchg
and
jl
dec
div
int3
push
cmps
loope
arpl
lds
cdq
pop
push
retf
mov
cmp
(bad)
or
add
popf
sbb
or
or
mov
(bad)
popa
arpl
pop
lods
loope
or
push
push
stc
push
sub
fcomp
add
add
shr
(bad)
mov
stc
movs
dec
ret
ret
push
int
push
in
xor
scas
xor
jae
jo
mov
sahf
enter
jmp
outs
push
xchg
mov
scas
inc
aas
dec
and
inc
js
push
mov
add
inc
jmp
sbb
repnz
dec
(bad)
add
lock
push
xchg
lahf
lods
mov
sbb
mov
loopne
push
test
mov
cmp
sub
mov
in
sti
sti
xchg
mov
dec
cld
sub
std
mov
pop
neg
lods
clc
repz
popa
test
push
icebp
mov
pushf
movs
es
xor
pop
call
stos
fdivr
adc
retf
sbb
cmps
mov
mov
das
call
adc
xchg
pop
push
popa
idiv
pop
inc
and
or
push
jg
pop
nop
(bad)
mov
out
jg
push
stos
ss
jo
xchg
push
lea
adc
mov
push
ret
loope
push
aas
repz
fs
mov
cli
pushf
(bad)
mov
adc
(bad)
fidiv
xchg
fidiv
data16
mov
cmp
jmp
in
not
(bad)
adc
mov
add
jecxz
mov
rol
lock
retf
cmps
fwait
and
sbb
sub
cmps
daa
sub
repnz
inc
aam
lods
rcr
jge
sbb
arpl
std
push
hlt
jo
cmp
sub
dec
xchg
in
xor
enter
call
scas
sbb
adc
inc
mov
add
sbb
jb
inc
sub
hlt
and
js
or
popa
fiadd
(bad)
fist
push
and
nop
adc
push
lods
sub
jge
nop
jg
mov
mov
jne
repz
mov
xor
cmp
cmps
mov
mov
scas
push
fiadd
fstp
inc
lods
cli
or
add
jp
cdq
push
int
inc
es
int3
inc
pop
(bad)
imul
popf
push
ror
fwait
in
call
add
adc
xchg
scas
out
fadd
mov
cmp
xchg
stc
cmp
movs
add
dec
push
add
inc
mov
push
mov
fcom
inc
dec
push
dec
out
cmp
lds
lods
out
ret
adc
add
push
daa
xchg
mov
(bad)
lods
in
cmp
mov
fmul
aad
inc
and
enter
xor
jno
sbb
cmp
push
mov
addr16
mov
pop
(bad)
sahf
adc
fnstsw
shl
dec
in
or
icebp
pop
jne
pop
outs
rep
jmp
cs
push
inc
adc
pusha
dec
ins
inc
push
fisttp
dec
int3
push
out
outs
mov
pop
(bad)
lock
push
jecxz
pop
neg
mov
outs
and
ins
(bad)
mov
stos
lods
scas
icebp
pop
ds
or
jmp
add
adc
stc
mov
inc
mov
ficom
ins
daa
(bad)
call
dec
out
inc
cmp
ror
pop
lods
loop
fnsave
push
sub
mov
jne
or
mov
or
mov
fcmove
test
gs
sub
mov
into
inc
ret
push
(bad)
and
int
mov
cmp
scas
inc
push
push
pop
inc
add
retf
pop
or
daa
pop
xchg
ds
jge
xchg
(bad)
xchg
or
mov
mov
je
dec
and
mov
push
js
imul
lahf
cmps
sti
scas
mov
stc
xor
and
std
xchg
push
dec
cmp
and
mov
sub
sub
push
lock
inc
dec
test
test
jbe
and
outs
movs
mov
ins
mov
push
in
(bad)
arpl
pusha
or
inc
clc
into
popa
xor
or
push
jmp
adc
push
jno
sbb
lods
inc
in
mov
add
xchg
stc
adc
cmp
push
leave
xor
out
sti
mov
lods
fistp
adc
rcr
mov
out
frstor
sbb
mov
mov
unpcklps
in
aad
or
add
fwait
xchg
stos
pop
adc
(bad)
(bad)
cmp
fisttp
aad
add
mov
mov
xor
mov
(bad)
mov
mov
jecxz
sub
push
scas
xor
push
mov
mov
mov
out
dec
sbb
sbb
sbb
(bad)
xchg
pop
push
mov
jmp
lods
jo
in
push
cmp
and
call
push
add
and
adc
rol
aad
or
dec
jecxz
ret
xchg
stos
push
mov
cwd
add
sub
lock
and
mov
adc
test
adc
xor
lea
sbb
mov
jo
push
pop
out
or
cs
cdq
mov
jmp
adc
retf
and
out
or
push
in
inc
loope
fcmovb
xchg
cmps
dec
lods
and
cmps
mov
and
ja
mov
inc
movs
ins
xchg
push
ret
add
add
add
aam
pop
lods
or
dec
mov
sbb
push
sub
push
(bad)
and
ret
lea
inc
dec
pop
(bad)
ds
and
cmp
out
movs
dec
mov
mov
xchg
adc
into
add
out
enter
xchg
leave
out
out
xchg
adc
xchg
inc
cmp
cli
scas
sub
xor
adc
pop
stos
mov
ja
(bad)
jp
enter
jmp
mov
in
jno
cs
ds
add
pusha
xchg
cmps
in
dec
sbb
adc
push
pusha
idiv
fcomip
or
xchg
push
shl
add
add
xor
cmp
inc
pusha
push
mov
jnp
retf
in
mov
add
mov
adc
dec
jnp
pop
pusha
sub
mov
jae
int
in
call
sub
fidiv
test
mov
fmul
push
icebp
(bad)
call
xchg
aas
adc
cld
or
xor
ficom
push
fdivr
retf
push
push
jnp
mov
repz
adc
push
mov
sub
pop
add
pushf
das
jmp
test
pop
pop
push
cmp
test
xor
pop
xor
cld
push
(bad)
mov
(bad)
cmp
pushf
test
pop
dec
ja
inc
imul
pop
int
pusha
push
repnz
stos
inc
stos
and
aaa
mov
sub
movs
(bad)
out
sub
xor
out
ret
out
out
add
neg
jl
pusha
and
mov
neg
js
into
call
rol
lea
in
iret
push
stos
loope
xchg
add
mov
adc
push
lahf
jmp
jmp
daa
fcmovnb
test
aad
mov
ins
jl
sbb
loop
jb
(bad)
mov
push
push
and
and
in
jg
mov
and
jmp
adc
cmps
cwde
das
fucom
lds
pushf
mov
cmps
sub
cmp
dec
jmp
rcr
mov
sub
cmp
movs
sbb
pop
mov
repnz
lahf
sbb
and
xor
in
int3
xchg
jne
retf
mov
sub
xchg
stos
pop
(bad)
mov
mov
or
cmp
inc
push
int
aas
fwait
mov
iret
std
pop
xchg
outs
xor
sbb
icebp
test
es
xor
shl
cmp
imul
mov
xchg
fcomp
aam
pop
pop
repz
xchg
dec
imul
cdq
aas
push
inc
aas
add
cmp
and
cmps
xchg
je
cmp
je
jnp
push
lock
popf
mov
repnz
retf
cmps
mov
dec
mov
inc
mov
jmp
pop
pop
test
shl
daa
call
mov
cwde
cdq
or
test
icebp
and
mov
xor
imul
xchg
aad
sbb
jle
shl
ins
stos
sbb
mov
pop
lea
mov
stos
jae
arpl
mov
out
(bad)
cld
jl
cwde
push
add
sahf
mov
das
aad
shl
movs
sti
mov
add
xchg
and
not
shr
jp
xchg
enter
clc
pop
jmp
sbb
rol
jo
pop
sar
mov
dec
push
idiv
lock
mov
adc
pushf
test
add
sub
movs
dec
lods
mov
cld
and
xchg
dec
loop
sbb
jo
jbe
outs
xor
mov
(bad)
icebp
jg
mov
sbb
movs
push
and
jl
mov
retf
push
nop
inc
and
push
test
(bad)
rcr
sbb
imul
and
sahf
sbb
pop
fs
mov
out
xchg
outs
or
out
xchg
xlat
push
adc
int
pop
sbb
rcr
cmc
mov
xor
mov
sar
adc
inc
jb
cmp
sbb
sub
int
cmp
mov
lock
jmp
jecxz
xor
int
iret
and
dec
bound
xor
popa
jg
cmp
adc
mov
jae
(bad)
ins
popf
fld
leave
sbb
std
arpl
js
js
cmp
sub
dec
and
xchg
mov
jecxz
test
mov
xchg
cld
jnp
out
jl
cmp
add
ss
push
nop
pop
fs
call
and
xchg
outs
push
xchg
cs
add
pop
call
les
push
adc
push
rcr
icebp
adc
pop
fnsave
scas
sbb
xchg
and
inc
les
xor
mov
or
jno
in
jns
shl
jmp
dec
add
mov
aad
push
out
movs
xchg
sti
jg
jmp
mov
mov
imul
pop
fs
or
pop
jbe
loope
inc
pop
cmp
add
mov
rcr
jl
not
js
jae
jno
add
dec
xchg
push
test
xchg
inc
jb
mov
xchg
mov
out
pop
mov
xor
mov
pop
sub
jo
packsswb
push
lea
fidiv
sub
add
jmp
mov
sub
ins
dec
push
cwde
dec
in
gs
es
out
outs
adc
push
sar
jne
sub
pop
popa
adc
or
jle
jo
adc
dec
add
enter
movs
pusha
ins
es
int3
(bad)
mov
test
cmp
inc
ds
jnp
div
les
xlat
and
repnz
loope
adc
aaa
sub
push
imul
xor
mov
inc
sbb
hlt
jae
adc
jb
lock
pop
into
lea
mov
enter
jo
jge
out
mov
push
pushf
arpl
cmp
dec
mov
iret
sbb
pop
cli
fdivr
ret
(bad)
mov
push
test
inc
jns
out
xchg
fld
pop
sbb
sub
sbb
mov
in
and
mov
in
aaa
aad
div
mov
call
sub
push
scas
or
mov
push
jg
or
sbb
sbb
clc
push
jp
xor
push
fbld
arpl
cmp
dec
(bad)
pop
imul
sbb
test
in
scas
sub
push
mov
imul
and
pop
push
out
sub
aas
popf
inc
adc
(bad)
ja
sub
push
(bad)
cmps
dec
outs
fs
mov
mov
std
arpl
in
mov
bound
adc
pop
mov
push
aas
add
outs
push
sar
mov
jae
xchg
sbb
mov
adc
add
inc
je
ja
int
dec
sub
jne
jmp
(bad)
push
je
or
dec
push
and
mov
adc
mov
dec
nop
ins
inc
cmp
adc
scas
test
adc
mov
in
and
pop
push
cmc
clc
xor
xchg
xor
mov
enter
and
daa
cmp
or
fnstenv
and
sub
enter
xchg
cld
lock
jl
sbb
jp
imul
mov
mov
enter
nop
and
mov
leave
cld
je
js
adc
cmp
in
fs
stos
stc
mov
xchg
mov
xchg
mov
leave
stc
and
cmp
lods
cmc
dec
aaa
push
cmp
movaps
inc
cmp
sbb
push
push
popa
push
pop
outs
gs
(bad)
mov
(bad)
icebp
dec
mov
aaa
pop
test
clc
inc
push
cli
xor
es
sub
or
jmp
ss
mov
fbstp
rcr
jecxz
xlat
ror
icebp
mov
js
out
or
ret
and
aaa
mov
cmp
gs
xchg
imul
add
mov
ins
pop
pop
shr
xchg
aas
jae
jl
ret
sub
sub
shl
jo
into
je
fadd
lds
add
sub
sahf
sub
test
dec
add
in
out
dec
push
ja
mov
xchg
popf
sub
cmp
out
inc
cmp
(bad)
and
xchg
lea
sub
test
push
pop
or
push
fldenv
mov
xchg
call
jo
mov
cld
ret
xchg
test
mov
jecxz
cmc
xor
aaa
xor
mov
sub
ds
xchg
dec
mov
xchg
jl
sbb
out
cmps
out
mov
fiadd
or
or
mov
fdivr
pop
sahf
and
mov
hlt
fnsave
add
push
cld
inc
inc
inc
push
adc
sbb
arpl
int
icebp
add
mov
pop
hlt
xor
lock
shl
inc
mov
ret
sbb
in
cmp
mov
add
(bad)
mov
mov
daa
cli
sbb
add
popa
dec
jmp
add
ja
xor
jo
mov
sbb
mov
sbb
(bad)
in
fld
rol
outs
jns
xor
cli
popf
(bad)
ds
(bad)
jae
jnp
lods
mov
xchg
jecxz
stos
xlat
sub
bound
cmp
push
add
idiv
test
adc
scas
lea
bound
push
jae
rcr
mov
and
sahf
adc
mov
dec
arpl
jmp
mov
cmp
out
cld
mov
dec
icebp
nop
enter
xor
pop
push
shl
or
shl
mov
stos
xor
push
enter
push
sub
dec
fcom
mov
and
gs
movs
jne
and
fcomp
sbb
inc
adc
pop
shr
mov
pop
loope
ins
or
loop
enter
(bad)
jb
pop
popa
pusha
loop
mov
xor
mov
xlat
sub
in
adc
mov
adc
adc
loopne
mov
and
aam
cwde
int
xchg
jg
mov
data16
sbb
in
pushf
enter
or
inc
jb
rcl
call
stos
outs
jge
ds
jns
cmp
xchg
xor
int3
and
and
(bad)
enter
sub
xor
sbb
fst
fcmovbe
addr16
call
lods
pushf
jg
mov
cs
jecxz
inc
arpl
lods
(bad)
scas
ds
aad
inc
ret
sbb
fistp
or
(bad)
sbb
mov
pop
out
mov
lock
sub
gs
aaa
jo
sbb
push
cmp
cmps
(bad)
pop
jmp
iret
clc
cmp
pop
movs
push
fisubr
in
dec
ins
ror
sbb
js
shl
in
lock
dec
in
push
fwait
push
ds
mov
xchg
add
dec
es
xchg
bound
mov
pushf
jo
mov
int
ret
(bad)
lods
dec
and
push
pop
inc
ret
pop
imul
in
fisubr
mov
(bad)
fucomp
push
shl
sbb
mov
fld
pop
call
cmps
test
shr
rol
dec
popf
adc
mov
cmps
in
scas
popf
jge
and
(bad)
mov
sub
stos
sub
sub
lods
mov
ds
movs
cmp
cld
int
xchg
inc
fadd
fbstp
push
push
jo
cdq
sub
inc
fiadd
push
inc
(bad)
icebp
aam
dec
scas
mov
arpl
push
cmp
arpl
sub
into
dec
pop
lock
mov
cs
fadd
mov
imul
sub
(bad)
xlat
add
mov
dec
sbb
stos
out
(bad)
mul
or
retf
and
popf
jg
cmp
push
in
mov
xor
call
(bad)
push
or
aaa
ss
fsubr
pop
cmp
adc
dec
xor
je
call
out
adc
inc
icebp
mov
arpl
mov
stos
cmps
jbe
jnp
and
test
pop
sahf
retf
jnp
inc
inc
into
push
leave
push
sti
add
dec
push
adc
inc
sub
mov
enter
call
or
inc
int3
mov
sub
scas
push
xchg
idiv
das
ins
mov
sbb
push
add
adc
popa
mov
adc
xchg
sbb
loopne
mov
and
dec
fmul
jo
add
into
imul
sub
retf
mov
xchg
in
(bad)
dec
out
pop
push
cwde
pop
ret
add
sahf
pop
or
rol
cmps
gs
mov
call
cmp
add
cwde
cmps
popf
in
aas
sbb
cmp
jae
xor
popf
pop
movs
sti
mov
lds
je
jecxz
cmp
pop
shl
cmp
mov
mov
shl
gs
xchg
mov
sbb
hlt
mov
fst
sub
stc
fwait
jmp
aam
lahf
add
cmp
sub
out
int3
jns
loop
pop
xchg
adc
fwait
sar
pop
outs
jo
fidiv
xchg
(bad)
cdq
cld
mov
cdq
cmc
mov
adc
fdivr
mov
sub
sub
dec
scas
imul
xor
retf
cs
and
sub
test
jns
mov
pop
ficom
mov
add
cwde
cmps
adc
jbe
cmp
pop
cmps
or
jg
sub
pop
add
fst
scas
jae
repz
aaa
hlt
sbb
push
xchg
es
mov
aaa
pop
jno
retf
les
lds
arpl
frstor
mov
fist
sti
sub
(bad)
jmp
and
or
jp
dec
push
hlt
sbb
add
hlt
sub
sub
movs
sbb
lahf
call
aaa
pop
cmp
xchg
pushf
sbb
cmc
jmp
enter
hlt
jno
shl
stos
jmp
adc
gs
lods
or
gs
ins
mov
int3
xchg
sbb
mov
sub
data16
xor
(bad)
sbb
dec
das
js
inc
std
test
(bad)
fdivp
push
or
aam
push
faddp
jg
or
pop
mov
retf
xchg
jo
cli
mov
dec
sbb
mov
into
addr16
jge
sbb
cs
xchg
ja
in
inc
sar
xor
sbb
mov
xor
stc
sbb
push
clc
in
inc
sbb
mov
and
repz
(bad)
xor
jnp
test
imul
and
mov
fwait
test
in
mov
push
dec
rol
pop
mov
jecxz
test
add
pop
mov
popf
pushf
jle
pop
in
inc
sti
push
lds
stos
repz
cld
mov
leave
arpl
in
int3
pop
mov
dec
pop
mov
outs
imul
inc
xlat
nop
popa
dec
iret
ret
xchg
pop
jbe
pop
in
xor
popa
cmp
lea
mov
cwde
jge
sub
ror
lods
jecxz
push
int
aas
push
jns
ret
inc
dec
retf
out
bound
sub
adc
cdq
add
jmp
ror
dec
int3
(bad)
loop
ror
cs
rcr
jmp
popa
ret
xchg
cmp
loopne
ret
adc
pop
in
nop
jno
test
ins
(bad)
test
fmul
sbb
loop
bound
sbb
and
xchg
inc
dec
pop
shl
aad
pop
jecxz
and
sbb
add
xor
cwde
lods
cld
aam
mov
leave
and
dec
retf
sub
dec
in
dec
mov
add
mov
sbb
aam
fldl2e
into
mov
sub
sub
enter
dec
mov
lea
stos
adc
mov
not
cwde
cmps
into
test
dec
pushf
in
sub
popa
pusha
dec
sti
pop
pop
lods
std
xlat
lds
mov
pop
ret
pop
ret
inc
push
push
cmp
repnz
shr
jl
addr16
push
xor
sbb
out
xchg
(bad)
push
cdq
fistp
jp
push
cmp
popf
jbe
movs
and
sub
ja
mov
ins
dec
mov
scas
mov
aaa
je
call
mov
mov
or
xchg
xor
jbe
adc
retf
les
jmp
jns
repz
into
add
dec
mov
mov
loope
cmps
nop
xor
ja
popa
shl
xchg
aaa
xor
jp
cmp
cmp
push
call
mov
add
mov
and
ret
fdivr
shl
add
jl
xor
pop
shl
dec
sbb
dec
cmp
adc
test
xchg
mov
jl
shr
and
dec
inc
push
pop
test
inc
fs
pop
pop
jecxz
pusha
call
push
mov
sbb
(bad)
mov
aas
shl
rcr
mov
aad
(bad)
mov
push
movs
loopne
push
(bad)
mov
test
test
xor
stc
ds
jnp
adc
xor
and
into
lea
xor
push
test
or
and
call
fisubr
adc
out
jl
push
fwait
mov
xchg
fiadd
push
daa
cmp
xchg
stos
push
push
pop
pop
ja
dec
adc
xor
cmp
leave
xchg
pop
mov
fwait
sub
mov
loopne
es
(bad)
sub
pop
cmc
sub
fst
pusha
inc
js
push
outs
scas
jecxz
jg
mov
rcr
je
retf
sub
inc
inc
add
cli
jl
fnstcw
jae
shl
addr16
je
jmp
pop
test
xchg
inc
sbb
mov
jns
pop
push
mov
mov
aaa
sbb
or
(bad)
xor
jge
jo
enter
push
movs
or
pop
sub
movs
mov
(bad)
jo
push
xchg
inc
cld
pop
dec
in
add
(bad)
(bad)
push
les
dec
ss
(bad)
fscale
or
dec
in
mov
push
xchg
push
ins
or
dec
rcr
xchg
jmp
mov
jge
test
fdivr
test
imul
jl
(bad)
adc
jle
fdiv
xchg
fmulp
pop
fbld
je
pop
stos
lods
cdq
inc
clc
xchg
inc
mov
jge
jno
ss
lock
mov
jmp
xchg
fwait
pop
cwde
fcmovnbe
xchg
jbe
stos
mov
(bad)
idiv
mov
enter
sub
push
fisubr
inc
sub
jecxz
cmp
popf
cmps
les
mov
sub
inc
cs
out
mov
sub
adc
jp
test
into
pop
scas
in
jns
jnp
call
sbb
push
iret
sbb
xchg
sub
add
push
mov
sbb
jmp
xor
adc
adc
jl
add
push
sahf
or
mov
popf
mov
xchg
inc
das
in
rcr
push
pop
iret
out
and
leave
dec
in
cmp
lods
pop
cmps
jno
stos
movntq
or
xchg
sub
add
jg
mov
mov
test
adc
dec
dec
inc
fsub
xor
(bad)
xchg
cmp
outs
cmp
outs
mov
popa
test
jne
sbb
not
into
inc
mov
(bad)
cmp
stos
push
mov
mov
sbb
mov
ins
js
popa
adc
scas
ja
pushf
inc
cmps
psraw
loopne
and
arpl
shr
add
cmp
sub
pop
cmp
test
inc
out
xor
mov
ficom
add
inc
dec
sahf
sub
aaa
idiv
jg
add
add
(bad)
aad
sbb
out
es
cmps
fld
push
mov
push
test
sbb
ds
or
daa
fwait
push
(bad)
jl
dec
jne
cmp
cmps
xor
pushf
inc
push
push
sub
cld
scas
xor
mov
movs
dec
shl
or
cwde
stc
adc
cmp
sti
xchg
inc
add
aam
sub
pop
cmp
(bad)
enter
(bad)
cmps
inc
xchg
scas
xor
dec
ret
adc
test
adc
cmp
loopne
int3
cli
ror
xchg
xor
mov
leave
stos
mov
out
dec
dec
add
shl
sar
xor
or
xchg
ret
outs
movs
inc
mov
rcr
jns
repz
jno
ret
jo
push
cld
dec
lahf
fadd
addr16
ret
pop
pop
inc
je
popf
xor
cmps
hlt
adc
scas
xor
push
jae
test
cmp
inc
sub
cmp
xlat
fstp
mov
daa
sbb
scas
ins
push
jl
mov
pop
ins
loopne
lahf
in
xor
cli
arpl
leave
jg
arpl
retf
mov
sbb
push
cld
imul
mov
fstp
mov
and
pop
aaa
ins
sub
xchg
loop
inc
jp
mov
int3
(bad)
in
dec
or
das
dec
pop
inc
sahf
(bad)
movs
(bad)
aam
mov
out
cmp
pop
mov
xor
in
nop
js
pop
mov
sub
ret
out
out
mov
pop
jmp
mov
not
test
ret
dec
test
jae
outs
mov
add
fsub
das
loope
fild
xchg
fnsave
sar
push
push
jle
add
dec
inc
sbb
add
jb
push
cs
pop
sub
cwde
aas
je
xchg
or
adc
mov
rol
int
movs
fist
mov
or
retf
mov
(bad)
fcomp
aad
fsub
xor
enter
dec
leave
ss
fiadd
cld
sbb
sub
fistp
leave
jae
retf
jle
push
adc
cmps
pop
jnp
cmc
jmp
stos
jg
push
out
leave
xor
inc
outs
cmc
call
jb
cmps
aad
pop
push
mov
xor
in
fstp
mov
push
rcr
and
push
mov
xor
cmp
push
out
cmp
xchg
adc
mov
xor
sub
and
imul
addr16
or
jge
add
out
cli
fld
xor
inc
ret
ins
mov
push
dec
or
mov
inc
ja
dec
aas
out
je
les
jge
sub
aaa
out
imul
inc
stos
xchg
imul
xchg
pop
xchg
push
add
in
popa
pop
sbb
iret
hlt
ja
jno
sbb
in
sbb
imul
jmp
imul
mov
or
lock
out
call
(bad)
fmul
sub
inc
(bad)
mov
movs
cwde
dec
test
mov
and
fs
dec
pop
mov
test
or
pslld
out
jnp
ds
adc
pop
(bad)
pop
test
dec
sub
sbb
adc
out
push
fwait
into
dec
jg
imul
in
mov
mov
mov
stc
sbb
mov
loope
jo
shr
sar
stos
out
or
mov
jge
mov
add
mov
out
loope
(bad)
outs
stc
fdivr
pop
iret
pop
cdq
xor
aad
ds
pop
or
call
(bad)
xchg
daa
das
xchg
adc
jae
call
les
mov
pop
add
adc
mov
pop
or
and
div
cmp
mov
xchg
xor
fsub
(bad)
out
das
jo
inc
push
out
rol
sub
xor
sub
jmp
cmovge
lea
cmp
nop
or
or
call
out
out
push
mov
and
push
mov
jp
in
and
sbb
(bad)
js
or
push
movs
pop
std
int3
imul
daa
xor
pop
mov
je
out
ja
(bad)
in
or
push
mov
ins
into
xor
mov
mov
je
inc
int3
and
lods
movs
cmp
movs
xchg
test
les
mov
push
sbb
ss
jae
inc
das
xor
jle
rcl
mov
pop
push
fcomp
sub
and
rcl
sub
lahf
or
xor
fisubr
or
stos
or
mov
les
pop
mov
adc
cmp
or
cmp
mov
xor
mov
cmps
adc
dec
mov
mov
or
ins
mov
(bad)
retf
in
pop
cmp
addr16
mov
sub
push
inc
push
dec
cmps
pusha
loope
sti
mov
stc
sub
imul
mov
xor
outs
(bad)
in
das
inc
xor
test
or
jmp
mov
mov
mov
aad
pop
inc
lds
rcl
mov
repnz
add
out
ins
shr
ret
cmp
and
shl
ror
fdivr
pop
mov
adc
cmp
lods
imul
fnstsw
cmp
ret
jecxz
jp
sti
ds
dec
mov
test
dec
arpl
push
mov
mov
ret
je
retf
mov
popf
cmp
pop
mov
shl
jb
ja
or
repnz
adc
dec
inc
pop
xlat
jne
or
inc
test
in
pop
scas
jnp
outs
mov
in
xor
sar
add
mov
lea
jmp
sub
or
pop
mov
scas
fiadd
daa
stos
loop
rol
lods
icebp
pop
jno
fadd
cs
popa
push
adc
jns
sub
add
test
sub
addr16
push
fisttp
inc
and
call
add
rcl
sbb
iret
shr
or
in
ss
lahf
test
pop
xchg
in
bswap
jb
add
xor
xchg
js
ret
out
loopne
pop
cmp
cmp
idiv
add
call
ret
pop
pop
cmp
pop
xchg
gs
ins
div
xchg
pop
mov
stc
pop
dec
in
mov
call
mov
hlt
loope
pop
push
int
sub
call
push
pop
xor
xor
jg
sbb
test
cmp
fdivr
xchg
pop
ret
in
iret
hlt
sahf
daa
lahf
test
lods
xor
dec
adc
pushf
pop
jb
and
nop
mov
hlt
xchg
push
sbb
xchg
icebp
idiv
push
and
pop
and
ss
aas
repnz
aad
loopne
stc
jmp
xchg
ja
int3
mov
addr16
scas
sar
(bad)
(bad)
jle
jecxz
inc
push
dec
fbld
and
sub
sar
sub
aam
and
rcl
aad
mov
push
cmc
mov
push
ror
ret
cli
fstp
arpl
(bad)
sub
jmp
jle
xchg
lea
and
cmps
cmps
jo
clc
jb
(bad)
or
mov
pop
sbb
mov
sub
lock
scas
loope
pop
xor
rcl
push
inc
retf
sub
btr
xchg
lock
or
movs
(bad)
fcmovu
lods
out
les
iret
cmp
push
push
and
stc
cmp
mov
lods
mov
pusha
sbb
xchg
cdq
pop
dec
(bad)
dec
mov
lea
adc
inc
je
pusha
mov
xlat
xor
xor
pop
xchg
inc
lods
pop
gs
push
mov
dec
cmp
fisttp
rol
js
(bad)
das
iret
ret
push
push
xchg
or
cmc
outs
or
adc
push
push
sahf
and
inc
enter
(bad)
fld
(bad)
jg
cmp
inc
ja
sbb
pop
add
loopne
mov
jge
adc
test
pop
mov
sbb
xchg
and
sbb
jns
jno
adc
ret
in
sub
xor
rcl
mov
jle
ret
xchg
call
outs
adc
adc
not
retf
in
jmp
ja
pop
mov
pop
pop
sub
popf
jl
popf
fadd
data16
pop
or
popf
cmc
jne
fld
lods
sub
popa
mov
out
outs
pop
pop
lods
xchg
cmps
adc
retf
mov
daa
out
mov
or
xchg
adc
xor
mov
daa
shl
push
cmps
in
je
push
jne
outs
ja
sbb
mov
es
clc
sub
es
jmp
mov
xchg
icebp
and
int
mov
int
push
push
dec
stos
and
pop
push
and
or
mov
push
shl
fsubp
sbb
ss
xor
cdq
(bad)
mov
adc
xchg
jnp
and
xor
mov
jl
scas
icebp
cmp
adc
xchg
pop
js
pop
sbb
stos
imul
nop
or
pop
movs
mov
inc
dec
cmp
push
rcr
aas
mov
ror
shr
and
xlat
jp
jbe
and
add
(bad)
iret
in
push
sub
test
mov
sbb
push
out
stc
sahf
fldenv
ret
repnz
mov
jp
cmp
dec
(bad)
scas
pop
test
fnstsw
mov
mov
in
pop
or
nop
inc
iret
mov
mov
fstp
ins
jo
mov
mov
ss
test
sar
aam
mov
leave
dec
popa
dec
jecxz
(bad)
jae
jmp
scas
ins
cdq
pusha
out
div
cmps
xchg
sbb
mov
ss
pop
mov
arpl
aaa
xor
mov
mov
out
or
fcmovnu
jbe
push
stc
out
test
pop
cdq
jns
or
fnstsw
cmp
fisub
jmp
ins
mov
pop
pop
inc
pop
stc
sar
xchg
dec
lea
and
adc
mov
jg
add
je
jns
xchg
je
sub
ffreep
jg
sbb
push
mov
jp
movs
call
cmp
jg
fld
xchg
mov
mov
neg
in
loop
hlt
nop
les
cdq
add
data16
sub
pop
stc
and
popa
fidivr
sbb
(bad)
or
std
mov
add
pop
xchg
inc
fstp
out
fs
jno
aam
ins
call
cmp
dec
jno
test
fcmovu
jae
fsub
xchg
jge
inc
push
jno
pop
out
inc
mov
adc
daa
mov
mov
sbb
shl
xchg
movs
mov
cmps
ins
jae
loope
les
aaa
imul
movs
sub
cmc
mov
call
jnp
sub
cmp
adc
mov
out
and
icebp
fstp
pop
push
mov
outs
lahf
jg
es
jae
fimul
(bad)
stc
cmp
mov
ins
dec
jle
mov
fucomip
cmp
add
int3
out
sbb
rcr
in
push
gs
inc
sbb
sub
xchg
push
inc
inc
(bad)
push
(bad)
cdq
adc
cvtdq2ps
sbb
(bad)
std
outs
xchg
(bad)
sbb
into
stos
in
mov
inc
out
sub
adc
dec
cmp
call
sar
mov
test
shl
ror
mov
ins
mov
ins
bound
xor
loope
or
push
sbb
outs
add
cmp
adc
or
les
mov
dec
inc
(bad)
and
or
pop
outs
pusha
into
mov
popa
and
mov
and
scas
test
(bad)
pushw
(bad)
mov
adc
loope
out
mov
inc
jo
add
ret
fld
shl
sahf
vmovups
sub
fstp
stos
mov
in
pop
scas
inc
enter
mov
or
jl
cmps
push
push
push
xchg
mov
add
repnz
clc
jge
or
xchg
lds
imul
sub
xchg
or
pop
xchg
push
mov
push
jmp
test
mov
cs
xor
aam
pop
(bad)
pusha
xchg
test
dec
les
lods
dec
xchg
outs
push
mov
push
cmc
push
sbb
xchg
jbe
push
push
mov
jge
adc
ret
sbb
pop
xchg
iret
inc
fwait
retf
mov
jl
lds
stos
sub
nop
sub
repz
mov
mov
jmp
mov
jl
out
leave
pop
cmp
(bad)
mov
(bad)
xchg
adc
retf
pop
cdq
fild
inc
jmp
mov
stos
jge
into
stos
pop
mov
pop
xor
and
mov
std
adc
shl
push
jmp
fwait
es
mov
mov
test
js
jbe
scas
xor
sbb
leave
add
stc
ret
out
call
fsub
mov
rol
fcom
(bad)
aaa
loope
mov
in
sahf
cmp
clc
test
popa
ror
adc
sub
inc
mov
ja
movs
pop
jecxz
or
mov
sar
adc
test
add
test
hlt
in
cmps
fisubr
adc
xlat
gs
sub
mov
jge
sbb
inc
loope
fs
into
mov
std
xor
cmp
adc
mov
mov
xchg
jmp
xchg
iret
and
dec
movs
jp
or
repz
jae
inc
mov
(bad)
jmp
and
cmps
or
xchg
(bad)
xchg
dec
cwde
add
(bad)
dec
cmc
(bad)
dec
pop
fsub
cmp
push
jg
dec
and
addr16
and
imul
mov
imul
add
adc
push
or
in
or
(bad)
xchg
mov
and
fisubr
stos
cmp
mov
and
fs
xlat
mov
enter
stc
in
inc
cwde
scas
out
mov
data16
inc
mov
xchg
inc
mov
bound
cmp
cmp
xor
out
loop
mov
in
xchg
xor
les
js
pop
push
sbb
mov
mov
call
test
xor
fwait
jle
jbe
push
push
(bad)
in
movlps
and
cmp
ds
ja
pop
pop
popf
adc
pop
neg
inc
pusha
pop
addr16
sbb
lods
jo
into
jo
xchg
add
sub
dec
fstp
or
pop
es
jecxz
jbe
movs
cdq
cdq
imul
cmp
div
ficomp
jmp
fwait
add
mov
xor
dec
mov
data16
retf
sub
xchg
icebp
fldcw
mov
sbb
mov
jmp
bound
cmp
ins
popf
addr16
(bad)
fadd
js
and
xor
push
jae
push
pop
mov
cmp
push
jmp
stos
dec
bound
nop
ss
xlat
cmps
jmp
popf
fisttp
sub
repnz
jo
mov
lds
test
dec
repz
sar
test
pusha
and
sti
scas
inc
mov
cmp
push
mov
scas
mov
adc
cmp
xchg
or
push
pop
sub
push
push
push
test
add
mov
cwde
icebp
mov
xor
add
and
pop
adc
pop
dec
int3
add
ret
pop
xor
and
and
add
loopne
mov
mov
jbe
or
or
xor
inc
sub
loop
adc
and
sbb
ins
pop
pop
outs
jae
lock
imul
pop
daa
and
pop
shl
cld
fs
fsub
mov
jbe
fadd
movs
push
out
jb
imul
cmp
lahf
push
(bad)
or
mov
push
xchg
jle
ret
push
pop
cmp
dec
sub
test
out
push
out
xchg
and
jmp
jne
mov
jnp
call
iret
pusha
arpl
lock
sub
scas
repz
mov
fiadd
jae
mov
xor
pop
jp
inc
loopne
cwde
in
mov
retf
xchg
xchg
out
cmc
pop
and
xchg
enter
je
and
add
sub
add
adc
ins
retf
cwde
xchg
jbe
or
inc
xlat
cmps
sbb
dec
xlat
movs
inc
push
xchg
xchg
sahf
and
and
sbb
in
icebp
jg
or
rol
in
fs
mov
pavgw
loop
add
loope
loop
mov
inc
popf
or
arpl
fs
pop
and
xor
cmp
int3
jle
cmp
inc
jge
cmps
mov
movs
push
or
retf
cwde
rcl
rol
push
xchg
xor
jl
push
in
mov
dec
pushf
repnz
stc
mov
addr16
add
popa
xor
push
inc
enter
enter
out
or
or
jecxz
jnp
mov
sbb
imul
sbb
xchg
mov
cmps
loop
mov
pop
lods
stos
xchg
add
push
ins
hlt
add
add
out
outs
and
call
adc
and
int
aad
mov
dec
icebp
out
mov
and
out
aaa
movs
xor
sub
cld
test
repz
xchg
sbb
sub
fs
not
sbb
add
adc
aam
ds
sub
jnp
call
and
cmp
push
aas
add
jnp
iret
push
das
sti
aad
pop
ficom
sbb
sbb
cmps
enter
or
mov
adc
dec
lahf
int
and
or
dec
shr
mov
test
or
retf
push
dec
js
pop
arpl
(bad)
out
retf
fadd
(bad)
pop
rol
jmp
add
out
pop
mov
mov
sbb
adc
loope
xchg
and
lock
popa
adc
sbb
push
sti
pusha
mov
xchg
sub
sub
daa
sbb
sub
ficomp
ds
adc
int3
movs
mov
mov
pop
mov
shl
xor
loope
mov
stos
out
in
mov
jmp
dec
call
stos
jno
in
ret
mov
lds
adc
pop
adc
jns
iret
mul
scas
xchg
scas
stos
mov
(bad)
popf
xor
mov
dec
in
std
or
add
popf
sub
sbb
mov
jecxz
add
sbb
sti
(bad)
inc
pop
fwait
inc
mov
in
sub
out
shr
push
cmc
fsubr
jb
fidiv
loope
add
mov
sbb
dec
fist
cmp
jnp
cmps
push
or
dec
push
sahf
les
dec
ds
dec
jmp
cmp
pop
cmp
ror
mov
xchg
mov
inc
mov
mov
(bad)
and
xor
jmp
fsub
sbb
fld
js
mov
lahf
dec
lods
adc
int
sbb
shr
lock
or
scas
jp
(bad)
retf
imul
dec
xor
xor
scas
inc
sub
xchg
sub
stc
xchg
fimul
adc
or
mov
mov
xchg
shr
iret
push
xchg
sub
ins
xchg
mov
pop
sbb
push
sub
fcom
in
mov
jge
inc
scas
and
jo
xor
les
mov
out
out
jle
xor
test
lods
push
jns
in
and
and
push
repnz
push
aas
adc
es
jle
add
outs
mov
data16
inc
data16
xchg
sbb
(bad)
mov
stc
dec
movs
xor
adc
ins
push
adc
xor
out
and
mov
pop
push
es
sub
aad
and
jo
loopne
aam
push
in
test
pop
xchg
call
xor
jle
jne
add
mul
jb
adc
test
into
sbb
faddp
dec
sti
jmp
lock
idiv
pop
jg
xor
fisubr
mov
ins
je
sbb
out
test
xor
fistp
cmp
test
xchg
jb
xchg
sbb
loopne
lods
test
jge
cmp
xor
inc
mov
mov
rcr
(bad)
dec
js
test
inc
fnsave
popa
sbb
das
adc
imul
xrelease
add
xchg
xchg
fist
mov
mov
add
sbb
sub
dec
mul
adc
ds
mov
jnp
cmp
and
inc
leave
sbb
(bad)
cmps
lock
fimul
(bad)
jbe
test
(bad)
dec
fs
sbb
push
mov
pop
xchg
rcl
adc
jecxz
sbb
pop
mov
arpl
jle
push
shl
je
mov
jl
pop
sahf
sub
mov
and
jmp
inc
pop
add
call
jae
mov
xchg
hlt
sbb
int
or
jmp
imul
repz
pop
(bad)
xchg
push
fimul
lods
jle
mov
shr
xchg
inc
mov
push
(bad)
sub
leave
stc
cli
or
loop
inc
call
pop
adc
xor
xchg
fs
icebp
dec
test
pop
inc
scas
mov
int3
ins
or
fisubr
mov
retf
jo
pop
mov
lds
sub
fld
cli
cwde
icebp
out
std
sub
or
sub
jl
xor
lods
cdq
mov
leave
cmp
fs
and
mov
stos
jmp
xlat
jg
out
fnsave
push
je
enter
sub
add
sbb
mov
fucom
pop
lods
sbb
lock
fbld
out
push
cs
clc
and
mul
xchg
inc
fld
jg
jle
lea
xchg
push
(bad)
mov
jecxz
adc
xor
nop
pop
call
sahf
mov
dec
pop
sub
pop
shl
push
outs
jg
call
sub
jne
ss
iret
inc
inc
ret
stc
(bad)
out
sbb
movs
or
push
dec
adc
call
inc
out
jp
es
xchg
pop
ds
jo
and
push
xor
retw
in
mov
xor
pop
dec
push
jmp
movs
sbb
inc
leave
rcr
loop
xchg
sub
lods
fstp
inc
rcr
xchg
pop
hlt
inc
int3
push
lea
pop
pop
sbb
xchg
(bad)
xor
add
inc
sbb
gs
xchg
stos
or
mov
lods
pop
pop
dec
(bad)
(bad)
sar
jnp
pop
adc
scas
sbb
cli
pop
mov
mov
imul
or
fcmove
mov
ficomp
sub
mov
(bad)
cmp
mov
xlat
cmp
ss
leave
loop
arpl
fdiv
stos
sub
mov
xchg
push
test
mov
jle
push
push
mov
cmp
cmp
fs
mul
jle
fcom
lock
xor
push
mov
xchg
iret
sub
sub
jb
mov
mov
mov
cs
xor
dec
or
mov
rcr
ror
add
dec
sti
push
pop
jns
out
dec
mov
clc
call
jne
pop
mov
call
es
mov
sbb
imul
and
movs
stos
popf
bnd
sub
lea
pop
push
stos
push
stos
ret
lea
in
pop
xor
pop
cmc
ret
aaa
nop
sub
mov
pop
jne
cmp
mov
lods
ds
dec
dec
dec
ds
mov
cmp
mov
dec
dec
mov
ins
push
jl
dec
or
add
test
cdq
sar
xchg
dec
push
jl
int
jl
(bad)
in
xchg
push
mov
retf
aad
nop
dec
mov
add
cld
inc
sbb
(bad)
idiv
dec
fistp
xchg
stos
inc
mul
test
lock
jae
inc
xor
push
push
loope
cmp
movs
cmp
mov
and
mov
cld
cmp
or
or
mov
int3
lea
jns
xchg
xchg
and
lahf
xor
mov
dec
int3
stc
mov
fisub
adc
test
in
sti
lahf
mov
test
shr
jecxz
lds
and
jbe
dec
mov
(bad)
js
pop
int
fld
sub
adc
sbb
retf
mov
sbb
or
jp
xor
inc
or
mov
mov
adc
mov
jb
popa
ins
int
mov
jbe
outs
push
shl
lods
xchg
adc
shl
xchg
xlat
dec
pinsrw
out
or
and
jp
std
iret
xchg
stc
sahf
dec
sahf
mov
test
fistp
cmc
inc
jl
jae
and
nop
dec
mov
(bad)
sub
dec
retf
adc
and
iret
cmc
add
dec
or
popa
pop
mov
fsubr
pop
sbb
cdq
out
mov
xor
mov
adc
mov
loopne
in
out
push
lea
js
ror
lods
mov
loop
hlt
cld
pop
ja
and
push
mov
outs
fwait
inc
and
cvtps2pi
mov
leave
lds
add
js
dec
rcr
ins
add
scas
popa
aad
cmps
fstp
dec
arpl
and
mov
pop
in
and
lods
in
cdq
cmp
addr16
aas
fadd
sbb
adc
jbe
fiadd
sbb
add
inc
iret
mov
add
xor
or
or
clc
add
repz
inc
mov
rcl
mov
ds
(bad)
out
ret
sbb
cmp
push
scas
dec
xchg
pop
dec
into
mov
sbb
push
xor
cmp
cmps
lds
dec
hlt
cs
neg
xchg
dec
out
mov
cli
jmp
sbb
test
sbb
mov
ss
jne
pop
fdivr
imul
add
shr
sbb
xchg
push
mov
xchg
into
inc
mov
cmps
lods
outs
lahf
xchg
xor
movs
dec
dec
iret
retf
adc
pop
and
lea
cmps
(bad)
std
mov
xor
or
aad
ss
mov
inc
add
icebp
xchg
scas
je
nop
mov
pop
rol
sub
push
in
xor
lock
dec
stos
cli
and
lods
dec
adc
jg
cmp
retf
pmulhw
xlat
loop
out
push
dec
ret
dec
outs
(bad)
or
lds
push
fs
adc
ret
rcl
sbb
es
ret
ss
out
in
enter
mov
inc
adc
xchg
mov
or
xlat
xor
rcr
adc
clc
jle
retf
inc
xchg
or
fdiv
sti
lahf
mov
jecxz
xchg
sub
adc
inc
pop
add
mov
(bad)
outs
mov
stc
sub
imul
cli
dec
pop
sub
in
mov
shl
cmp
cmps
inc
pop
push
in
(bad)
push
jp
(bad)
xchg
jno
int
inc
adc
pop
dec
mov
push
jle
das
pop
add
jne
inc
lahf
out
enter
retf
inc
and
sbb
fild
xor
push
inc
xlat
pop
xchg
mov
mov
test
adc
ror
out
pop
xchg
push
ret
and
fwait
add
call
lds
or
push
lods
fnstenv
add
imul
pop
adc
retf
stc
inc
call
and
(bad)
push
add
cmp
addr16
cmps
inc
test
neg
mov
add
es
fldcw
cmp
push
clc
push
mov
shl
jle
dec
mov
fbstp
dec
cmps
mov
repnz
lods
push
xor
and
jns
jnp
mov
fnstcw
or
outs
add
mov
jnp
fst
ja
jp
call
test
fsub
push
mov
pop
cld
dec
pop
jno
sbb
adc
scas
jmp
pop
loopne
add
jge
dec
leave
mov
inc
std
jl
btc
icebp
call
cmc
pusha
int3
popf
cwde
dec
or
jmp
scas
fst
call
imul
jae
jno
mov
push
inc
in
xchg
or
push
repnz
mov
adc
cmp
inc
xlat
push
add
mov
and
or
jmp
or
fdiv
xor
and
test
inc
add
pop
cmp
outs
mov
(bad)
cmp
pop
pop
push
repnz
icebp
lahf
cmps
sbb
lods
leave
js
cmps
sub
mov
iret
sbb
jmp
retf
jmp
xchg
(bad)
and
xor
fs
mov
iret
sbb
cmp
adc
test
ins
xor
push
aad
rol
or
mov
pop
pusha
sbb
or
aaa
pop
jo
mov
shr
jg
xor
sbb
shr
sub
xchg
or
push
ret
push
and
sub
(bad)
push
mov
jno
(bad)
fiadd
mov
or
or
fist
push
cmps
repnz
repnz
and
cmps
push
daa
mov
inc
pop
adc
cld
call
xchg
je
sbb
xor
(bad)
imul
addr16
shr
clc
pop
fcomp
mov
cdq
aaa
xor
add
ror
xchg
add
mov
es
ss
into
scas
mov
(bad)
push
int3
jno
cli
out
inc
jmp
jns
repz
dec
pop
in
stos
add
sub
sub
sbb
cmp
call
add
call
jno
pop
cdq
rol
ss
cmp
push
mov
cmp
movs
loope
repnz
pop
xor
out
xor
loop
es
cdq
inc
pop
inc
ds
and
cmp
jl
int
or
xchg
mov
test
push
sub
int
out
fwait
rcl
dec
aaa
xor
sub
jmp
in
adc
xchg
lds
sbb
fiadd
std
ret
stos
ret
lods
add
hlt
cmp
lahf
(bad)
fdivr
and
popf
add
test
adc
pop
jbe
bnd
gs
xor
fmul
loopne
jg
out
cmp
cwde
xchg
lds
nop
jb
lods
adc
adc
movs
fsub
icebp
fstp
(bad)
rcl
push
jle
mov
sbb
lea
mov
mov
fcmovnb
(bad)
cld
jne
jno
std
or
std
ret
lds
sbb
mov
loope
mul
stos
jecxz
into
mov
jbe
into
push
cmps
hlt
je
loopne
add
shr
es
and
out
jge
loope
inc
pop
leave
cmc
test
cwde
push
fwait
mov
stos
and
mov
mov
inc
cmp
test
dec
pop
xor
js
pop
idiv
pop
mov
sar
jmp
stos
int
int
in
xor
mov
stos
icebp
or
or
pop
xchg
cs
test
outs
and
and
mov
test
jle
mov
mov
cwde
(bad)
mov
and
loopne
daa
rcr
loopne
sbb
scas
pusha
movs
jle
dec
pop
xor
je
nop
lods
fld
pop
cmp
daa
push
mov
mov
cmp
int
mov
jnp
cld
movs
jo
dec
mov
outs
mov
mov
pop
push
lds
int
aas
mov
cmp
call
(bad)
fwait
pop
pop
or
in
jle
pusha
cmp
aaa
cmp
dec
hlt
pusha
leave
jb
mov
cmc
cmps
inc
inc
sbb
lods
sahf
das
xor
jmp
jae
icebp
mov
mov
neg
js
cmp
xor
out
sti
jp
fld
sbb
or
jp
dec
cmp
xchg
mov
retf
cmp
or
dec
mov
cmps
xlat
sub
(bad)
gs
add
push
xchg
push
aad
fwait
sub
out
sbb
jmp
arpl
and
add
jl
mov
pusha
cdq
nop
movs
fdivr
xchg
pop
leave
dec
dec
inc
sbb
xor
fld
jns
pop
pop
lahf
mov
xor
push
stc
imul
and
in
mov
imul
sub
push
hlt
fcmovnb
or
pop
dec
sub
mov
or
repnz
xor
fyl2xp1
popf
nop
mov
test
xchg
std
xchg
dec
xchg
fcomp
jl
pop
jge
jbe
xchg
jecxz
pop
ins
stc
sub
lds
loop
sub
rcr
scas
mov
or
push
lods
cmp
mov
ffreep
sbb
pop
pop
jp
mov
push
es
push
test
leave
lea
mov
ja
dec
sbb
cs
js
mov
out
addr16
mov
or
fild
dec
out
fs
add
add
mov
ret
mov
sbb
add
aaa
pop
add
pop
mov
xor
cli
mov
xor
cli
(bad)
or
pop
pushf
cdq
ret
pop
cwde
imul
cld
fwait
jb
mov
lahf
daa
icebp
xchg
push
push
call
(bad)
ror
mov
test
jmp
mov
out
clc
std
out
aad
xor
mov
sbb
das
ins
inc
xor
adc
out
pusha
icebp
mov
mov
sbb
inc
xchg
and
cmp
jl
and
popa
aad
mov
mov
fiadd
arpl
pop
mov
fmul
push
shl
push
test
icebp
(bad)
sub
test
adc
jno
fisubr
in
ds
pop
mul
and
or
pop
int3
mov
pop
mov
xchg
mov
and
xor
jle
jno
mov
and
clc
xchg
jo
out
mov
inc
push
lahf
retf
fs
and
and
jecxz
retf
push
fldcw
pop
push
sub
xor
jne
cmp
imul
dec
loopne
cmp
retf
push
jo
push
mov
dec
neg
jge
(bad)
push
mov
hlt
cwde
(bad)
mov
inc
rol
cmp
imul
inc
in
test
test
jecxz
scas
mov
je
jnp
pop
ins
(bad)
dec
mov
sub
loopne
push
iret
cwde
xor
or
adc
test
or
dec
idiv
nop
out
outs
cld
jecxz
cs
stos
imul
fdivp
cmp
pop
retf
lods
ffreep
jp
jp
dec
xchg
aam
scas
mov
jb
ret
cmp
or
imul
and
popf
adc
sbb
movs
rcl
cmp
xor
adc
cmps
sbb
push
mov
mov
add
lock
enter
push
std
daa
retf
cmp
inc
add
loopne
mov
loopne
fdivr
sub
sbb
repz
pop
jo
movs
mov
addr16
test
call
lea
pop
mov
cmp
push
bound
push
out
cmp
cmp
mov
icebp
push
call
iret
pusha
ficomp
jge
cmp
and
xor
daa
cld
retf
pop
cmps
dec
nop
loopne
shl
popa
cwde
adc
mov
imul
repnz
fs
adc
sub
arpl
or
or
xchg
rol
inc
pop
mov
push
imul
outs
movs
out
xchg
ss
aam
imul
call
test
pop
shr
pop
sub
add
xchg
mov
inc
or
sub
pop
jne
pop
clc
inc
jl
inc
sbb
jo
jge
dec
fld
mov
lock
dec
pop
mov
ss
push
(bad)
adc
add
add
neg
int
pop
or
or
adc
push
pop
mov
jmp
loopne
add
inc
push
push
push
xor
mov
or
mov
cmp
sbb
les
cmp
(bad)
and
clc
dec
push
sbb
xchg
sub
arpl
js
xchg
lds
mov
pusha
call
mov
and
adc
outs
dec
jg
xor
xchg
and
out
inc
ja
cmc
push
ss
xchg
mul
pusha
or
sub
sbb
mov
add
mov
fst
lock
push
sti
sbb
mov
mov
adc
jbe
int3
fld
pusha
ins
mov
xlat
test
push
cli
jmp
fdivr
ins
or
(bad)
mov
jnp
cli
movs
or
sti
sbb
dec
inc
add
pushf
sub
lods
xor
lea
mov
into
stos
push
rol
shl
inc
and
inc
mov
xor
mov
(bad)
sub
lds
dec
push
iret
or
call
js
lds
jne
mov
pop
add
gs
ins
mov
push
mov
mov
xchg
sub
pop
dec
sub
sub
leave
fsub
push
jmp
pop
xchg
enter
xor
cmp
inc
cwde
cdq
pop
add
pusha
jp
icebp
adc
lods
mov
jbe
sbb
int3
and
fdivr
sub
lea
mov
mov
pop
pushw
mov
push
push
or
loope
mov
push
js
cmc
cld
mov
mov
adc
fucomip
pop
dec
aaa
ret
leave
dec
xchg
xor
fisubr
clc
test
mov
stos
ss
aaa
mov
and
ins
adc
cmps
or
sub
fcom
inc
mov
in
rcl
and
inc
jno
adc
dec
lock
sar
mov
sar
xchg
cld
hlt
and
jmp
pop
jecxz
sub
mov
or
scas
add
jb
jle
lea
les
cmps
fisub
mov
inc
or
xor
mov
(bad)
ds
xchg
mov
loop
ins
push
push
dec
xchg
mov
cmps
pop
inc
jmp
call
mov
mov
inc
repnz
into
in
mov
xor
movs
xchg
cli
sub
and
arpl
jnp
iret
mov
and
pop
(bad)
scas
inc
mov
mov
mov
ret
scas
cmp
xchg
inc
inc
stos
fwait
mov
pop
pop
mov
sub
inc
push
jbe
sar
popa
ret
stos
push
mov
cmp
xor
in
mov
je
sbb
into
add
daa
into
loop
pop
out
ror
in
mov
cmovo
in
push
fcomp
(bad)
xchg
inc
dec
nop
mov
sbb
and
inc
stos
outs
or
pushf
jmp
cmp
imul
mov
or
loop
(bad)
or
out
hlt
jge
stc
mov
jo
inc
push
mov
pop
fld
lods
mov
(bad)
ret
js
dec
hlt
in
pop
sub
sti
lods
xchg
xchg
inc
imul
add
es
or
out
pop
fistp
mov
aas
out
xchg
add
push
sbb
(bad)
int3
call
mov
jne
loop
push
push
movs
out
pop
cmps
std
lods
fld
or
outs
sub
call
test
or
sub
xor
jmp
cmp
int3
cld
xor
mov
stos
in
cli
daa
fwait
xlat
inc
sar
fwait
mov
or
lea
jae
mov
jno
test
mov
adc
mov
mov
inc
or
shl
(bad)
fisubr
cld
mov
adc
lods
mov
mov
pop
out
fucom
mov
mov
pop
movs
jmp
inc
or
add
fisubr
iret
in
jae
fmul
daa
mov
pop
loopne
mov
inc
jbe
sbb
fdivr
inc
xchg
(bad)
fisttp
(bad)
fs
jns
push
dec
fst
stos
dec
jmp
aam
aaa
xchg
sbb
enter
cmc
mov
jnp
icebp
stos
jge
stos
std
popa
out
pop
imul
and
adc
hlt
retf
dec
push
popa
ror
popa
les
outs
push
push
mov
shl
push
in
cli
pop
fadd
(bad)
popa
out
ret
push
mov
or
movs
into
les
add
pop
sub
lahf
mov
add
sub
push
add
lds
pop
add
(bad)
and
mov
jns
and
pop
sti
pop
jb
pop
outs
movs
mov
sar
push
sar
test
fstp
and
in
test
xor
imul
add
mov
jmp
cwde
aam
mov
std
addr16
lods
cmps
mov
push
fs
sbb
enter
add
movs
out
jns
sbb
sti
aam
ja
and
jo
popw
cmp
shl
ja
inc
xor
sbb
push
inc
xchg
mov
ret
adc
call
bound
or
fcmovnu
or
nop
retf
mov
mov
sbb
mov
ficomp
or
push
shr
mov
popa
idiv
out
sub
mov
scas
rcr
addr16
dec
xchg
jo
fcomp
inc
jle
xor
jmp
xchg
shl
in
jmp
scas
mov
mov
int3
cmp
jnp
outs
mov
add
(bad)
xor
push
pop
pop
push
dec
rcl
ret
enter
test
aas
js
fmul
inc
jno
mov
in
mov
dec
jae
jl
xchg
movs
cs
and
popf
cmp
mov
fisttp
in
int3
pushf
jg
imul
(bad)
sub
sahf
mov
call
dec
mul
add
cld
das
mov
and
shl
test
add
psubw
(bad)
push
sbb
dec
aam
adc
dec
or
sbb
sbb
add
add
push
loope
xlat
or
ror
loopne
sub
cwde
(bad)
ds
mov
fcom
push
or
gs
adc
mov
mov
loopne
sbb
outs
in
mov
mov
push
dec
xor
add
cli
mov
mov
jb
repz
xchg
add
push
inc
(bad)
jecxz
sbb
iret
xor
adc
into
sbb
push
(bad)
mov
shl
test
(bad)
mov
ja
adc
in
mov
xchg
or
popa
dec
sbb
or
test
movs
dec
retf
ds
mov
dec
aas
cdq
xor
jmp
mov
or
int
repz
push
mov
push
leave
aaa
cmp
mov
sub
push
mov
mov
call
repnz
pushf
sbb
in
mov
loop
pop
popa
pop
sub
mov
xchg
arpl
fist
mov
pushf
fdivr
sbb
mov
das
sbb
(bad)
mov
and
mov
es
jbe
jmp
adc
and
es
cdq
sbb
pop
adc
jae
pop
movs
cmp
xchg
or
sbb
jno
div
push
ss
cmp
cmp
sbb
adc
mov
jnp
push
outs
add
adc
inc
pop
cmps
movs
sbb
xor
and
repnz
and
add
mov
mov
aad
fisub
cli
test
xchg
rol
sub
ja
push
adc
in
retf
imul
sahf
add
jg
cld
rcl
inc
dec
xor
out
shl
movs
test
add
pop
ss
xor
jle
sbb
jl
push
pushf
(bad)
mov
mov
sub
cmp
xadd
jmp
add
in
and
add
aaa
shr
sub
lea
dec
ins
cmc
and
int
lods
push
pop
or
mov
or
out
add
sub
dec
mov
addr16
push
mov
sti
jbe
lods
add
ins
xor
in
add
mov
sbb
lahf
or
push
lea
xchg
cmp
adc
dec
xor
mov
dec
in
retf
rcr
add
inc
mov
(bad)
aad
movs
xchg
in
push
dec
sub
mov
push
test
inc
sbb
or
dec
jge
lahf
data16
mov
fidivr
adc
sbb
(bad)
push
xor
xchg
fyl2xp1
add
adc
mov
pop
(bad)
loope
dec
in
xor
movs
cmp
push
xchg
(bad)
(bad)
ins
fdivr
push
lahf
out
sub
or
adc
imul
adc
sub
clc
icebp
sbb
sbb
push
sbb
jne
fnstsw
and
sub
in
lds
add
push
mov
xchg
xor
add
nop
lods
mov
adc
popf
scas
jle
pushf
ret
hlt
and
add
push
mov
dec
cmp
stos
aas
cmps
mov
(bad)
loop
mov
jle
push
clc
cli
sub
mov
call
xchg
loope
or
fnstcw
sub
movs
cmp
jo
ins
popa
test
stos
fcom
and
and
ficom
add
ins
add
add
push
iret
in
iret
ret
dec
mov
retf
ds
xor
mov
xchg
jne
push
adc
ins
dec
mov
ret
or
sub
and
xchg
mov
jns
push
sbb
or
int3
sub
test
or
xchg
(bad)
dec
push
xor
sub
mov
cwde
aad
lods
int3
xchg
lods
cmc
push
cli
mov
mov
or
add
sub
mov
xchg
xchg
mov
add
sti
(bad)
push
out
add
daa
into
cmp
mov
arpl
pop
pop
inc
jmp
int
mov
in
jl
loop
and
dec
pushf
add
dec
fs
fdivr
inc
(bad)
jne
xchg
cs
es
sbb
push
adc
fsubr
cmp
idiv
neg
cs
pop
inc
lahf
adc
cmp
ficomp
jo
ror
sub
add
adc
adc
test
imul
mov
std
push
mov
xor
stc
(bad)
out
pop
xor
lock
pushf
loopne
cmp
nop
push
cmps
sbb
add
mov
mov
outs
fs
jbe
stc
fwait
cmc
loop
ss
cmp
inc
(bad)
dec
sub
fistp
mov
icebp
mov
xchg
aas
repnz
xor
cmps
xor
jno
dec
leave
cmp
mov
xor
dec
fwait
push
dec
(bad)
sbb
jp
imul
fistp
ffree
ins
push
(bad)
loop
in
cmps
les
dec
and
ja
jae
sub
cmp
ret
cs
inc
cmp
imul
adc
push
mov
sahf
cs
mov
int
push
cmp
jmp
xchg
push
dec
enter
call
lods
xor
cwde
adc
loop
mov
lods
dec
icebp
sub
ror
xor
adc
call
pop
pop
retf
sub
lea
scas
adc
imul
cdq
fwait
icebp
mov
stc
cmps
jmp
(bad)
cmp
jnp
fcom
push
fcomp
mov
mov
test
enter
jb
sub
repnz
data16
scas
call
lahf
sbb
sbb
sbb
dec
sbb
push
mov
sbb
cs
or
push
mov
clc
pop
xchg
mov
pop
fsubr
xor
enter
inc
xor
ds
jg
push
mov
mov
pusha
shl
gs
push
icebp
sar
dec
xor
jbe
sub
sub
add
mov
dec
push
outs
neg
ins
inc
and
mov
je
push
sub
mov
jno
cld
mov
addr16
dec
mov
inc
pop
push
retf
or
jle
pop
sub
xchg
adc
(bad)
shr
pop
mov
mov
push
lock
mov
int
and
sbb
xchg
inc
popa
adc
mul
lahf
cmp
icebp
stos
jnp
arpl
xchg
test
enter
ror
repnz
jp
int
loopne
sub
js
cmp
jg
mov
cdq
push
fistp
inc
cmc
dec
add
fimul
leave
dec
ins
test
adc
add
call
stos
inc
lods
and
retf
imul
and
jecxz
push
xchg
sub
ins
inc
xchg
loope
movs
xchg
std
stos
sub
or
mov
mov
adc
mov
scas
mov
ss
mov
jge
cdq
in
push
outs
pop
push
cmp
std
dec
sbb
mov
xchg
setbe
jb
push
(bad)
adc
push
cmp
fs
stos
cmp
xor
outs
ret
(bad)
mov
or
jns
fs
jle
and
cli
cmp
mov
or
or
(bad)
cwde
mov
jmp
cdq
xor
push
mov
cmp
jge
sbb
adc
xchg
outs
fcmove
or
cwde
pinsrw
or
push
jecxz
inc
cwde
cmc
test
aas
ret
jae
jno
into
xlat
or
push
mov
ror
or
in
pop
je
and
push
ret
jge
test
pop
and
int3
jp
cmps
bound
mov
je
mov
or
dec
les
das
sbb
out
mov
inc
arpl
cmp
ret
test
and
fwait
adc
outs
lds
add
pop
fidivr
adc
dec
lahf
mov
call
ja
out
xchg
xlat
and
lea
sbb
push
jecxz
(bad)
push
aaa
dec
mov
xchg
adc
mov
jmp
sahf
mov
fsubr
fnstcw
shl
jg
mov
push
push
mov
pop
dec
mov
adc
repz
push
scas
retf
dec
jmp
into
sub
ss
cli
lods
jecxz
xor
sub
add
aad
jp
pop
repz
add
mov
dec
movs
push
aam
dec
push
sbb
fs
xchg
mov
push
xlat
jbe
in
push
(bad)
aad
mov
sbb
sub
jge
mov
jno
mov
mov
xor
xchg
and
add
je
inc
stos
std
push
mov
mov
rcl
cmps
bound
imul
addr16
mov
fst
xor
shr
adc
popa
xlat
sbb
mov
std
sub
add
js
jnp
jle
dec
movs
jno
xor
mov
popf
adc
inc
mov
aam
aaa
push
dec
fcom
(bad)
sub
mov
sti
add
xchg
movs
cmp
xchg
pop
mov
loopne
inc
jns
adc
pusha
(bad)
je
mov
sub
idiv
sub
add
scas
int3
xor
mov
dec
(bad)
cmps
or
bound
and
or
int3
dec
xchg
out
cmp
(bad)
popa
inc
lds
sbb
xlat
xacquire
sti
sub
es
fidivr
int
pop
xchg
fadd
scas
and
sub
mov
shr
jmp
dec
pop
cwde
scas
xchg
movs
test
scas
rol
or
stos
popa
jne
call
or
or
and
mov
in
out
movs
cmp
rcr
stos
xor
fist
in
ss
out
fst
sbb
xchg
push
sbb
movs
aam
or
jp
push
iret
xor
outs
pusha
inc
sub
sti
xchg
mov
frstor
inc
mov
pop
adc
cdq
adc
jae
add
test
sti
xor
ror
and
outs
dec
call
mov
inc
mov
(bad)
jne
push
mov
pop
pop
outs
inc
aad
pusha
dec
xchg
cmp
imul
sbb
add
sub
popa
fist
jns
jo
icebp
jno
mov
lahf
call
pop
clc
xchg
jns
cmp
daa
or
xchg
jge
ficomp
ins
int
mov
pop
outs
push
jmp
cmp
sub
retf
les
icebp
jne
xchg
(bad)
iret
les
and
add
xchg
cmps
mov
xchg
movs
and
ins
daa
or
sar
sbb
jp
add
ins
mov
rol
pop
sbb
movs
aaa
loopne
push
shl
xlat
test
lea
mov
rol
sub
setns
inc
in
es
jp
fisttp
dec
pop
cmp
jl
fstp
inc
sub
sbb
pop
cmp
push
xor
xor
and
adc
orps
xchg
add
inc
mov
aad
icebp
adc
out
xor
pushf
pop
shl
or
(bad)
lahf
push
xchg
fldcw
jmp
jo
inc
xor
xchg
cwde
xor
lock
xor
fdiv
cmps
int
mov
xchg
sub
and
outs
pop
jg
push
jmp
push
xlat
retf
mov
mov
scas
inc
dec
inc
sbb
or
jno
jno
loop
add
push
mov
movs
movs
movs
dec
ins
inc
mov
push
stos
cmp
outs
jb
mov
sub
mov
enter
dec
jne
fcomp
hlt
jnp
dec
pop
ds
out
push
fcom
outs
repnz
xor
ja
pop
int3
push
jge
ins
or
loopne
int3
sbb
(bad)
repnz
cdq
cdq
test
sbb
std
iret
push
(bad)
or
cdq
imul
xchg
pop
popa
(bad)
(bad)
jno
ret
push
push
std
pop
xchg
cdq
mov
and
fnstenv
ds
or
test
in
mov
scas
pop
push
xchg
adc
pusha
pop
pusha
rcr
imul
int3
loop
or
out
push
cmp
test
mov
cmps
test
es
das
cmp
mov
pop
jns
jmp
add
mov
sbb
push
xchg
pop
test
call
or
fdivr
imul
xor
arpl
out
pop
cmps
jmp
in
inc
add
pcmpeqb
test
scas
arpl
xchg
push
or
movs
cmp
addr16
pop
and
imul
pop
and
loope
cs
loop
shl
pushf
sub
cli
retf
dec
out
fnstsw
adc
push
mov
sahf
mov
popf
pop
repz
jnp
stc
(bad)
mov
adc
mov
xchg
fidivr
ins
pop
in
dec
adc
fistp
mov
dec
scas
xchg
mov
imul
rcl
ja
jae
into
pushf
jmp
jae
ret
popf
xchg
and
xor
inc
dec
xor
(bad)
adc
sub
dec
push
xor
jg
fdivr
push
mov
retf
repz
push
or
adc
push
cmp
mov
aad
nop
les
or
aam
cld
stos
retf
xor
sbb
xor
push
leave
dec
or
das
sbb
xor
ja
mov
aam
loope
jns
loope
ret
jnp
or
loope
sbb
icebp
outs
jb
jle
and
sub
rcl
sbb
lea
shr
arpl
icebp
push
jns
push
mov
push
into
jb
sahf
jb
mov
mov
pop
mov
push
xor
rcr
packuswb
icebp
stos
loope
enter
daa
push
dec
adc
pop
push
adc
lods
add
pop
add
das
cdq
sahf
sbb
ret
stc
xchg
outs
mov
jp
and
bound
fcomi
pusha
gs
cmp
mov
and
push
mov
ins
les
ss
out
test
jmp
bound
jno
inc
scas
test
mov
aas
ins
(bad)
fidiv
sub
or
adc
data16
add
pop
sar
mov
jle
shl
jecxz
cmp
leave
sub
cs
xlat
mov
sub
cmp
gs
push
ds
cmp
pusha
call
call
mov
add
inc
scas
test
xor
enter
inc
in
mov
mov
pop
push
ud0
mov
test
cmp
add
xchg
cmp
in
(bad)
fiadd
sbb
out
cmp
scas
pop
jne
(bad)
imul
pop
xor
mov
mov
xchg
pop
add
imul
scas
push
stos
and
push
xor
and
inc
adc
and
add
nop
and
(bad)
push
movs
loopne
mov
xor
mov
fadd
js
xchg
out
xor
or
clc
mov
mov
xchg
hlt
cmc
sbb
adc
out
xlat
adc
push
push
fstp
(bad)
fwait
mov
test
xor
push
jmp
or
xor
xchg
mov
cmps
jo
outs
into
idiv
jnp
adc
scas
test
nop
gs
fldcw
enter
pop
pop
xlat
pop
data16
mov
pop
enter
push
outs
retf
or
clc
jne
dec
clc
shl
cdq
in
xchg
cmps
sahf
dec
push
xor
lods
lea
ret
cdq
xor
aam
scas
push
call
pusha
inc
and
xor
mov
mov
(bad)
sbb
call
adc
dec
fwait
outs
dec
push
movs
leave
cmps
js
xchg
jmp
sbb
jmp
sbb
loopne
cwde
lock
fnstsw
in
and
stos
sub
cmps
enter
out
add
cmp
std
lahf
dec
inc
loope
repz
sbb
push
ja
retf
jb
imul
xor
adc
outs
jbe
pop
stos
fidivr
stc
(bad)
lods
outs
sub
cld
dec
jmp
jno
mov
movs
aas
xchg
fistp
pop
xchg
mov
icebp
jecxz
mov
push
outs
lock
dec
pop
std
in
mov
sbb
test
test
dec
xchg
xor
xor
jecxz
cld
ss
std
xchg
mov
push
mov
pop
jl
int3
ins
dec
je
push
loope
or
mov
out
movs
or
mov
dec
lods
scas
dec
pop
fcomp
xor
jb
pop
fstp
jmp
popa
mov
xchg
jle
add
pusha
sub
call
pop
inc
jnp
mov
add
scas
aas
(bad)
or
cs
xchg
stc
pop
xchg
ret
lds
push
data16
pop
fild
xor
inc
fadd
xchg
mov
dec
push
stos
(bad)
in
lods
add
repz
push
jecxz
xchg
or
into
mov
jp
repz
fs
xchg
outs
shl
popa
scas
imul
mov
ror
outs
xor
ror
out
jg
mov
fadd
sbb
cmp
xor
shl
sub
inc
(bad)
push
mov
cmp
(bad)
ja
and
arpl
int3
lea
and
nop
push
push
sbb
sbb
mov
mov
cmp
xor
inc
push
mov
pop
pop
sbb
cmp
mov
cdq
jmp
call
inc
pop
push
push
int
mov
xbegin
jo
repnz
call
and
inc
ins
ss
pop
adc
int3
mov
fist
jo
push
inc
std
mov
not
inc
pop
inc
ja
mov
and
lock
add
pop
out
fist
inc
fmul
inc
and
mov
icebp
lock
mov
adc
inc
or
mov
mov
aam
sub
(bad)
cmp
push
add
scas
inc
adc
ficom
cmp
jg
jge
pop
mov
leave
pop
or
pushf
cmps
test
les
mov
fst
loopne
test
or
xchg
je
mov
gs
icebp
es
(bad)
jmp
stos
dec
popa
fld1
inc
nop
mov
movs
scas
sbb
cdq
(bad)
aad
sub
sub
ss
jne
ror
add
jmp
xor
mov
fnstcw
call
cmp
push
ins
push
sbb
add
adc
mov
test
sub
jnp
scas
lods
call
test
jecxz
fldcw
les
les
cmc
jge
test
sahf
repz
rcr
(bad)
sbb
sbb
iret
sti
jmp
int3
fisub
int3
popa
inc
dec
push
jmp
push
mov
stc
push
mov
mov
cmps
mov
das
stos
adc
neg
xchg
(bad)
stc
hlt
lods
cmc
add
loop
cwde
scas
jno
push
pop
jo
xchg
cwde
sub
sti
xchg
fstp
data16
and
jne
mov
jmp
lods
xor
push
daa
xor
arpl
ficomp
mov
adc
sbb
inc
fdivr
and
lds
mov
mov
xchg
cmps
hlt
adc
push
xlat
mov
adc
(bad)
jnp
mov
ret
cmp
stos
xchg
mov
xor
sbb
daa
lahf
sub
sbb
cld
push
daa
inc
fcmovb
(bad)
sub
push
into
retf
xor
inc
in
dec
sub
push
or
mov
outs
cs
(bad)
imul
leave
mov
inc
sbb
sbb
mov
ins
ja
scas
and
xlat
xor
pop
xchg
push
rol
rcr
jle
cmp
fisttp
mov
jne
test
dec
pusha
pop
(bad)
ja
movs
fsub
arpl
sti
lahf
push
and
xchg
es
dec
rcr
loopne
ja
retf
mov
retf
in
cld
or
mov
clc
in
sbb
mov
mov
jl
mov
addr16
ja
push
lock
or
mov
stos
das
cmp
jmp
xchg
push
data16
inc
inc
aad
movs
push
sahf
movs
cmp
fld
imul
cmc
xchg
xlat
out
retf
in
sbb
xlat
and
mov
mov
mov
mov
sar
loope
xor
inc
dec
push
popa
and
mov
pop
fwait
jle
clc
mov
sub
dec
mov
int
das
fimul
mov
jmp
xchg
int3
add
in
cmp
fucomip
jb
jg
push
out
je
stos
push
push
mov
push
lods
hlt
daa
xor
or
lods
outs
nop
arpl
xor
gs
add
dec
dec
shr
scas
mov
adc
push
repz
adc
mov
push
pop
cmps
(bad)
cmp
hlt
mov
int
ins
aaa
dec
xchg
into
mov
cmps
(bad)
jae
and
test
arpl
in
adc
stc
dec
mov
push
push
push
gs
loop
xchg
mov
repnz
pop
mov
mov
fsub
mov
and
or
add
leave
inc
adc
test
cmp
lock
xor
aad
(bad)
cdq
test
sbb
ins
pop
sbb
repnz
xchg
sub
loop
std
aad
loopne
xchg
nop
leave
std
mov
xchg
retf
aad
addr16
mov
mov
bound
cs
jmp
(bad)
sub
mov
dec
stos
movs
cwde
les
push
sub
les
bound
gs
ror
pop
mov
adc
xor
jae
pop
jge
mov
cmp
sbb
mov
mov
xor
cs
adc
xor
sub
or
(bad)
in
scas
(bad)
in
out
cmp
inc
retf
jns
repnz
call
in
mov
cmp
mov
inc
sub
in
push
in
xor
shr
dec
mov
(bad)
xchg
mov
mov
push
aam
pop
jb
push
or
ret
jae
cmps
into
push
pop
pop
mov
int
cli
(bad)
dec
inc
push
jp
jp
(bad)
mov
ins
(bad)
sti
or
and
mov
mov
push
mov
ja
mov
mov
enter
lods
xchg
xchg
or
in
sub
mov
ficom
sub
push
xchg
mov
(bad)
popf
and
pop
sahf
cmp
cmp
daa
stos
push
int
(bad)
pop
pop
xchg
stos
xor
nop
retf
pop
mov
and
arpl
push
hlt
fsubr
inc
rcr
div
lods
fidiv
push
jno
push
fwait
inc
sti
jmp
fcom
fbld
(bad)
addr16
xlat
mov
lahf
loop
dec
add
clc
aad
ffree
sub
mov
shl
or
stos
(bad)
jno
sub
inc
cmps
dec
push
or
jbe
lods
and
cmp
cmp
test
and
rep
out
push
ss
test
test
es
int3
sti
push
adc
adc
scas
pop
add
and
cmp
add
xchg
daa
es
and
push
adc
jg
lahf
dec
mov
adc
test
and
out
jns
adc
pop
imul
inc
jb
push
xor
mov
xor
dec
mov
pop
cmps
or
pop
into
ja
dec
imul
or
xchg
retf
mov
(bad)
jp
arpl
sub
pushf
mov
sub
jp
int
stos
inc
call
in
xor
mov
cli
(bad)
aam
out
adc
ficom
mov
ja
push
xor
mov
aam
pop
fistp
sar
add
inc
cs
jo
jno
cmp
mov
jae
mov
mov
push
sub
sbb
mov
inc
sub
push
inc
sti
repz
(bad)
mov
scas
ret
mov
lahf
mov
mov
movs
inc
loopne
jg
add
dec
jg
pop
xchg
dec
repnz
push
leave
xchg
outs
out
frstorw
fistp
push
test
scas
xchg
fidivr
shr
adc
ret
mov
or
and
and
lods
(bad)
xchg
je
retf
outs
outs
(bad)
cs
fdivr
fldcw
shl
cli
inc
enter
stc
popf
int
loop
sbb
and
mov
shr
adc
sub
rcr
ss
ror
dec
mov
pop
add
and
cs
mov
mov
rcl
int3
push
ret
and
mov
std
daa
stos
arpl
mov
push
fs
inc
gs
test
movs
repnz
xor
add
mov
movs
adc
cli
mov
sbb
push
xchg
dec
inc
cmps
retf
out
loope
or
inc
enter
out
sbb
clc
jb
repz
pop
mov
xlat
add
push
mov
lea
mov
cli
mov
jae
add
push
push
call
push
pop
(bad)
cmc
sbb
ret
fidiv
imul
out
inc
rcr
and
cmp
je
cmp
xchg
shl
mov
add
jbe
lods
xchg
sub
movs
sbb
or
cs
mov
imul
push
loope
dec
rol
mov
adc
loopne
xchg
test
adc
cmp
sbb
cmp
push
or
mov
in
pop
stos
cmps
inc
outs
xlat
les
je
out
addr16
pop
mov
rol
das
inc
enter
mov
jo
ins
inc
cmp
test
push
ffree
push
scas
(bad)
cli
cmp
vcvtsi2ss
or
dec
cmp
rcr
mov
cvttps2pi
stos
repnz
cdq
xor
(bad)
imul
mov
mov
mov
mov
aad
cmp
mov
mov
aad
dec
(bad)
out
or
push
inc
es
cmp
push
xor
add
data16
pop
std
cwde
dec
mov
push
hlt
es
sti
lods
(bad)
jmp
lods
inc
test
ins
jb
movs
inc
push
fsubr
imul
xor
cli
leave
sbb
or
and
and
into
dec
jae
das
add
cli
push
fidiv
dec
int3
or
xchg
and
dec
add
adc
xor
xchg
ins
adc
jb
jg
shl
xor
cmovp
test
cmp
or
ror
repz
adc
sub
xchg
jno
sub
add
scas
and
xor
jns
mov
push
xchg
adc
inc
rcl
adc
or
std
pop
or
sti
jnp
inc
test
ins
rcr
aaa
sbb
push
push
push
xor
cmp
and
cdq
es
leave
mov
sahf
fisttp
mov
retf
mov
cmps
jl
pop
sub
dec
dec
(bad)
retf
retf
mov
rcl
push
clc
cmp
icebp
shl
and
mov
gs
jle
fstp
std
jmp
add
cld
adc
sti
jp
dec
xchg
in
lods
scas
pop
ror
mov
pop
movs
inc
push
sar
xchg
loope
cmp
iret
cli
shr
ja
cwde
ja
push
ret
jmp
sahf
inc
mov
outs
mov
push
sti
xchg
mov
cmp
mov
mov
jnp
cmp
add
and
xor
mov
push
call
adc
pusha
cmp
test
jbe
ror
inc
xchg
pop
mov
adc
and
lock
(bad)
cs
lahf
aam
mov
xor
test
repz
sbb
cmp
in
sub
pop
pop
outs
mov
call
xor
popf
mov
sbb
out
jmp
(bad)
push
mov
lahf
and
add
jmp
inc
addr16
jl
pop
sbb
scas
xor
cmp
adc
sub
rcl
out
ins
push
(bad)
cdq
xchg
mov
add
sbb
sbb
cmps
sar
test
cmc
in
push
inc
aad
int3
xchg
cmps
aam
outs
push
repz
ins
bnd
in
pop
movs
sar
xchg
jne
xor
or
push
sbb
and
cmp
push
cmc
mov
ss
xchg
ja
jmp
fdiv
cmps
mov
shr
cmc
out
daa
cmp
sbb
inc
xor
dec
mov
in
xchg
test
jo
mov
mov
pop
cmp
(bad)
fwait
mov
sbb
(bad)
xchg
inc
mov
adc
xor
ja
lods
and
or
in
in
dec
dec
mov
fcom
movs
and
dec
mov
std
or
loopne
shl
lahf
cli
pusha
outs
xchg
sub
pop
xor
lahf
mov
dec
dec
test
cmp
popa
mov
in
test
or
jns
or
push
leave
pop
in
pop
lea
mov
xor
cmc
ins
mov
mov
pop
adc
aam
je
jb
pop
pop
inc
jb
mov
aad
das
mov
push
push
(bad)
(bad)
push
enter
movs
movs
repz
sbb
mov
xchg
pop
pop
cmp
in
mov
std
pop
or
mov
pop
mov
mov
ss
and
in
clc
ror
shl
les
ret
mov
aas
fdivr
shl
push
repz
retf
outs
cmps
lods
xor
or
xchg
fucomp
dec
cmp
out
sti
imul
mov
fidivr
in
cmps
push
and
mov
mov
push
jecxz
cmp
inc
jmp
jno
inc
fcom
imul
lock
into
inc
or
xchg
(bad)
xchg
dec
pusha
mov
xchg
fsubr
or
pop
mov
jns
pop
xchg
sub
xchg
mov
dec
in
sub
pop
add
ds
mov
(bad)
sti
or
adc
test
cmp
fwait
or
cmp
jmp
cmp
pushf
push
mov
(bad)
xor
fisub
out
shl
loopne
nop
jns
or
retf
iret
fmul
jle
sahf
push
das
loopne
or
aad
mov
xor
cld
call
sub
mov
pop
mov
sahf
fld
dec
adc
movs
xor
stc
jg
leave
jne
sub
or
sub
(bad)
cdq
dec
hlt
dec
mov
adc
loopne
pop
sub
xchg
ins
pop
rol
je
jmp
and
cmp
mov
mov
or
jl
adc
ss
sub
push
inc
gs
in
cli
inc
inc
je
jo
mov
ficom
xor
sar
retf
loop
push
sbb
sub
xchg
adc
call
je
sub
rcl
repz
pop
and
push
sub
ror
adc
cmp
pushf
push
cwde
mov
aaa
pop
rcr
push
ja
xor
cmps
sbb
mov
xchg
fsubr
mov
mov
clc
xor
das
add
cmp
cld
adc
iret
fwait
or
pop
add
jp
mov
or
sbb
enter
ss
ja
movs
jge
or
sbb
pop
and
push
push
inc
jecxz
mov
jge
and
xchg
test
enter
ins
cmp
pop
retf
ja
cmp
inc
or
je
xchg
mov
xchg
leave
push
mov
and
or
or
pop
test
stos
mov
scas
lahf
test
sub
ret
xchg
(bad)
xchg
sub
sbb
mov
pop
mov
out
nop
imul
aam
xor
mul
in
adc
mov
mov
(bad)
jns
pop
or
adc
jmp
test
in
and
call
aam
cmps
int
cwde
push
push
mov
pop
xchg
push
lods
adc
outs
push
scas
add
xor
cli
and
add
cmps
movs
pop
mov
ins
mov
mov
mov
add
dec
ss
hlt
pop
jbe
push
mov
push
mov
xchg
add
aaa
jb
push
jecxz
test
push
xchg
inc
fild
sub
aas
jbe
imul
sbb
cwde
add
jo
dec
sub
cmps
sub
scas
jmp
call
jae
(bad)
inc
and
sub
imul
dec
adc
or
xor
arpl
sbb
sbb
inc
push
jmp
xchg
xchg
add
xor
xchg
mov
cli
push
ss
cmp
mov
dec
sti
cs
arpl
dec
mov
xor
cs
and
jp
movs
in
mov
icebp
sbb
stc
pop
mov
mov
daa
das
call
clc
jb
(bad)
xchg
mov
stos
mov
cli
das
shr
in
or
mov
dec
jp
lahf
pusha
ins
sbb
loope
ret
les
jae
jmp
and
mov
aas
jo
push
adc
or
adc
inc
loop
dec
iret
or
push
and
xlat
add
aaa
cmp
retf
cli
sbb
cmp
(bad)
mov
cmp
and
push
dec
fistp
mov
push
sbb
and
in
dec
leave
inc
popa
(bad)
and
jmp
icebp
imul
dec
and
fcmovb
add
xchg
lods
popa
xor
(bad)
pop
jmp
(bad)
push
pop
push
outs
(bad)
jecxz
scas
or
push
mov
int
adc
int3
popa
out
into
dec
rol
push
das
mov
mov
fistp
rol
mov
mov
ret
iret
push
push
iret
scas
adc
xchg
adc
sub
mov
sub
pusha
dec
cmp
jmp
push
stos
inc
shl
imul
inc
pop
xchg
ds
xor
cld
ficomp
xchg
mov
xchg
inc
and
stos
mov
inc
xor
xlat
arpl
sbb
retf
loope
stos
xor
pop
cmc
xor
dec
pop
out
adc
adc
les
mov
cwde
sub
xchg
and
call
fwait
(bad)
fcomp
sti
imul
xor
adc
xchg
mov
jo
sub
js
sub
ja
mov
sub
jo
test
neg
xchg
test
out
cdq
cmp
sbb
(bad)
fld
cmc
jge
pop
jbe
xchg
jne
sbb
clc
daa
sar
xchg
jmp
in
es
inc
lahf
stos
mov
inc
adc
pop
adc
jg
icebp
and
mov
(bad)
js
adc
or
clc
xlat
mov
aaa
lea
cmp
add
xchg
out
cmp
std
mov
fisttp
daa
push
xchg
neg
push
shr
push
mov
adc
and
mov
xor
pop
rol
sbb
jmp
fprem
mov
dec
add
retf
push
scas
cmp
lahf
xor
cmp
xchg
data16
sbb
fld
into
shl
fld
cmp
in
cs
jge
js
out
neg
inc
scas
jp
fstp
mov
enter
hlt
ds
stos
pop
inc
out
mov
mov
and
cmp
lea
jge
xor
pop
je
loop
mov
fnstsw
(bad)
adc
sub
cs
adc
sahf
fnstsw
or
(bad)
mov
rcl
adc
push
or
or
out
push
inc
mov
inc
cmp
jle
pop
mov
mov
das
sbb
xor
hlt
in
ds
xor
jmp
sbb
xor
out
ror
jo
push
sar
popf
test
push
adc
ss
fs
jo
enter
mov
or
mov
dec
inc
push
mov
pushf
inc
cs
popf
adc
sub
and
sbb
push
mov
mov
je
dec
stos
or
int3
xchg
nop
(bad)
sbb
push
(bad)
or
mov
dec
sub
inc
clc
pop
das
xor
lahf
mov
dec
ds
retf
mov
sub
sbb
pop
repz
lahf
xor
ret
out
popa
mov
daa
stc
ins
cmp
in
call
mov
xlat
mov
addr16
enter
adc
mov
and
and
scas
sbb
and
and
sub
adc
out
mov
jb
pop
test
xor
inc
add
adc
mov
adc
xchg
xlat
pop
or
mov
shr
lds
xor
push
dec
fnsave
add
pop
cwde
jecxz
jl
fs
dec
push
mov
inc
dec
repnz
push
popf
xor
test
sub
or
lea
into
cmp
sbb
lock
push
fst
sbb
jmp
icebp
push
mov
or
(bad)
(bad)
or
hlt
mov
movs
cmp
push
test
cmp
(bad)
std
leave
js
mov
push
pop
shl
inc
pop
loope
pop
add
cs
cmps
imul
je
xor
ror
ror
hlt
cmp
lock
dec
fcom
pop
dec
mov
pop
in
mov
cwde
mov
or
leave
clc
sub
jnp
lods
add
inc
cmps
hlt
adc
pushf
push
outs
xchg
mov
and
push
add
sbb
les
leave
outs
jnp
xchg
add
pop
add
jb
or
movs
push
inc
xchg
or
pop
inc
int3
push
fisttp
pushf
rol
out
mov
(bad)
and
adc
lock
in
mov
repz
fwait
inc
mov
(bad)
pop
shl
push
cmp
loop
fsubr
lds
push
rol
xchg
loope
imul
inc
ror
pop
mov
shl
xchg
mov
add
retf
ds
hlt
ins
enter
mov
movs
fs
adc
jmp
mov
retf
lock
imul
(bad)
push
in
xchg
mov
lea
lock
fcomp
test
into
daa
mov
inc
js
xor
xchg
imul
mov
xor
inc
inc
mov
and
popf
mov
jnp
loop
jo
jle
fcomp
test
inc
jae
out
sub
outs
punpckhwd
inc
adc
adc
xchg
loope
mov
icebp
xchg
adc
enter
push
inc
jo
pop
jecxz
xchg
inc
fsub
in
cmc
add
pushf
mov
test
imul
adc
inc
dec
xlat
fst
(bad)
shl
lea
in
mov
mov
dec
mov
jnp
pop
add
retf
mov
push
shr
fsubr
hlt
int
(bad)
in
mov
sub
pop
or
call
loopne
inc
fwait
std
pop
stos
sbb
jg
add
(bad)
mov
sahf
jns
dec
jnp
into
push
xor
cwde
xlat
jp
pop
lock
xor
push
neg
cmp
inc
mov
std
pop
and
sbb
xchg
fndisi(8087
push
mov
fadd
push
outs
sub
sub
mov
inc
out
test
ret
fst
cmp
(bad)
and
and
pop
mov
push
push
push
sbb
int
out
dec
mov
sub
mov
push
xadd
hlt
lock
clc
(bad)
iret
mov
mov
popw
mov
add
dec
cs
call
pop
push
bound
pusha
cmp
mov
push
sub
xchg
(bad)
dec
push
mov
dec
das
xor
xchg
test
hlt
out
mov
movs
add
mov
sub
cmp
xor
(bad)
popf
retfw
cmp
or
in
lahf
dec
call
jo
lds
mov
or
in
stc
cli
bound
add
(bad)
pusha
stos
test
iret
xor
inc
les
and
sub
jecxz
bound
test
pop
scas
xchg
nop
and
mov
ins
mov
xchg
fwait
push
dec
mov
icebp
fld
sub
jmp
addr16
xchg
mov
in
sbb
inc
(bad)
repnz
or
cli
das
mov
jl
mov
inc
mov
xor
cmc
mov
scas
jne
jecxz
xchg
and
in
in
(bad)
jae
dec
lock
cmc
mov
(bad)
jmp
fstp
aad
mov
mov
mov
xchg
stc
stos
(bad)
fistp
std
inc
fisubr
add
fsubr
lahf
pop
inc
popf
test
je
mov
fld
or
fwait
push
call
cmp
pop
call
add
inc
push
js
mov
xor
lea
stos
jecxz
push
jae
jnp
mov
jb
jecxz
out
or
sbb
fisubr
inc
(bad)
jecxz
mov
dec
cdq
jge
fld
retf
xor
pusha
ja
cmp
and
mov
xchg
fiadd
mov
mov
out
cmp
cmp
mov
xor
adc
out
pusha
add
jmp
sbb
ins
out
push
cli
pop
jle
xor
push
mov
(bad)
mov
jecxz
mov
push
xlat
inc
lea
jnp
test
add
inc
or
leave
sbb
aam
popf
aam
cld
and
fiadd
cwde
jmp
and
adc
movs
mov
es
(bad)
(bad)
mov
sahf
outs
xor
int
ins
sub
out
(bad)
sti
xor
or
mov
pop
retf
pop
xor
mov
(bad)
and
popf
daa
xlat
icebp
jo
xchg
xor
xor
and
fsincos
sbb
hlt
ja
push
rcl
mov
pusha
push
mov
xchg
xor
das
inc
push
fmul
pushf
repz
mov
shr
or
or
sub
sahf
out
rcl
retf
aam
and
jo
(bad)
pop
stos
adc
and
or
rcl
inc
(bad)
pusha
clc
rcl
clc
cmp
xchg
cdq
test
repz
lock
setp
cmc
push
movs
sbb
jge
push
mov
and
sbb
cmp
cmp
sbb
mov
add
aam
dec
mov
mov
adc
iret
xor
sahf
fwait
test
sub
popf
fyl2x
cmp
addr16
hlt
stos
pop
sub
inc
pop
xor
mov
push
xchg
sub
jecxz
push
loop
sbb
call
repnz
jne
nop
into
push
in
xchg
cld
(bad)
jg
retf
movs
sub
mov
aas
(bad)
mov
xchg
pop
push
aas
jecxz
fisub
loopne
retf
sub
ret
xchg
add
adc
int
sbb
jns
add
jecxz
push
jnp
lea
sub
cmc
outs
es
or
aaa
lock
test
push
(bad)
fimul
adc
mov
add
daa
push
loope
nop
fstp
daa
and
fs
int
and
aas
(bad)
frstor
enter
push
cmps
cld
xor
pop
ficomp
mov
es
out
test
mov
dec
iret
push
loop
xchg
cmp
add
ins
push
fwait
retf
repz
mov
push
addr16
pop
arpl
outs
retf
jecxz
(bad)
mov
inc
aaa
add
sub
cwde
fdivr
dec
sahf
mov
int3
sbb
dec
ret
or
sbb
dec
fisub
cwde
mov
adc
push
or
jecxz
pop
dec
push
ja
adc
ret
jne
fidiv
push
hlt
inc
(bad)
clc
fimul
push
mov
dec
les
sar
xchg
loopne
arpl
xchg
xor
or
push
in
and
sub
jmp
jge
inc
loopne
movs
inc
out
cdq
add
std
scas
loop
push
imul
pop
xchg
add
push
aas
mov
fild
jmp
scas
fisubr
arpl
jmp
lea
adc
gs
sbb
popf
xor
jmp
push
das
jl
sahf
xchg
daa
cmp
dec
inc
mov
mov
cwde
jge
pop
mov
hlt
jmp
push
ret
adc
add
mov
pop
or
std
jg
mov
ret
add
stos
movs
xor
xor
inc
xchg
jp
lods
push
push
adc
enter
mov
adc
inc
imul
inc
test
scas
js
xor
jmp
add
loop
dec
in
mov
shr
add
xchg
adc
sbb
dec
inc
mov
push
lods
dec
cmp
sub
fcomp
xor
mov
sbb
dec
fldcw
dec
jb
jmp
mov
jp
jecxz
cs
por
cmps
or
dec
adc
or
mov
dec
xchg
sbb
fild
loop
add
push
in
call
pop
test
outs
sbb
mov
enter
push
cmp
sub
jge
pop
cmp
cmps
mov
test
lds
call
std
out
adc
push
adc
push
or
std
sbb
cli
or
test
aam
shr
jns
mov
stos
or
push
outs
lds
fldcw
jecxz
imul
dec
mov
hlt
mov
mov
push
inc
add
cmc
push
fistp
clc
jno
aas
ret
push
xchg
push
arpl
adc
mov
cmp
mov
stos
xchg
or
jbe
sar
sbb
es
das
fadd
cmp
push
es
je
loop
xor
leave
imul
jecxz
rcr
xchg
adc
mov
outs
repz
xchg
test
test
push
ins
mov
jo
and
sbb
sub
inc
rol
jle
data16
mov
mov
pop
jg
mov
cmp
jno
nop
pushf
push
xchg
fistp
movs
adc
jo
sub
adc
stos
mov
lea
adc
call
ja
push
lea
ror
inc
push
push
call
xchg
in
std
adc
into
sub
jmp
add
mov
add
cdq
test
sub
outs
imul
scas
sahf
pop
lods
movs
fistp
pop
in
jns
sbb
sti
mov
out
inc
add
add
mov
mov
pop
retf
aad
jmp
aad
sub
test
int
jbe
or
xchg
lahf
pop
popf
sbb
adc
xchg
int3
lods
sub
idiv
push
cmp
pop
jbe
xchg
sub
cmp
push
loop
dec
sub
pop
cmp
mov
add
pop
div
scas
scas
rol
pop
mov
sbb
ss
xor
bound
jmp
xor
addps
sub
mov
or
jnp
mov
jmp
or
fcom
dec
imul
stc
inc
xor
push
stos
add
pop
out
aam
lods
ss
inc
scas
adc
push
mov
(bad)
in
in
(bad)
in
iret
outs
pop
adc
gs
sahf
mov
inc
bound
add
xor
aam
stc
cmp
scas
outs
movs
cli
cwde
sub
js
jae
add
or
icebp
nop
and
dec
hlt
dec
pop
xchg
cmp
addr16
into
push
push
test
mov
addr16
ss
push
dec
clc
mov
fucompp
outs
xchg
ins
movs
call
les
rcl
test
push
stc
and
xor
push
in
out
xchg
jp
cmp
repz
xor
rol
adc
outs
and
fidiv
push
add
lods
xchg
cs
inc
cdq
jne
xor
pop
retf
pop
cs
ja
sbb
mov
cmp
(bad)
xor
xchg
dec
fcomp
das
sbb
rol
leave
mov
fistp
(bad)
mov
sbb
clc
xor
ror
int3
dec
pop
ficomp
(bad)
jg
inc
popa
inc
and
loope
das
mov
xchg
inc
dec
sub
outs
cld
pop
sub
pop
out
jg
sub
jno
mov
sub
in
pop
into
inc
inc
pop
xchg
and
mov
icebp
mov
xor
mov
cdq
daa
jno
out
mov
add
dec
cs
popa
jecxz
jecxz
sub
out
push
xchg
xchg
imul
test
pop
jle
icebp
cdq
mov
push
(bad)
and
les
pop
cmp
mul
jle
rol
ds
movs
fild
ins
sahf
push
cmp
jns
(bad)
pop
mov
push
daa
shl
adc
xchg
xor
movs
clc
inc
xchg
add
movs
imul
jg
xlat
adc
leave
mov
jo
loop
xchg
mov
stos
inc
jmp
imul
sbb
mov
int
add
pop
lea
(bad)
gs
pop
dec
iret
lea
inc
mov
xchg
mov
ret
popf
in
enter
inc
(bad)
and
xlat
pop
loop
mov
mov
add
clc
dec
imul
mov
aas
mov
or
mov
sub
sbb
aas
jo
pop
aaa
mov
lds
xor
rcl
xor
push
jns
pop
jbe
xchg
lea
pop
mov
(bad)
mov
ins
inc
daa
loopne
xor
mov
ds
mov
in
xchg
push
jnp
push
xchg
(bad)
(bad)
xor
rcr
push
mov
dec
push
jne
stos
mov
in
adc
aam
xor
jne
call
rcr
cmp
imul
ss
(bad)
jmp
fnstenv
imul
rcr
cmp
sbb
rol
jmp
and
xor
jns
pop
xor
movs
(bad)
(bad)
mov
cmp
mov
xor
fiadd
pushf
sbb
mov
mov
push
ret
pop
jo
adc
dec
retf
cmc
cmp
sub
movs
jno
mov
je
jg
jmp
enter
std
mov
ins
sub
push
cli
inc
inc
sub
push
loop
adc
xor
mov
jl
out
aas
adc
mov
jae
cmps
fld
lds
push
mov
fld
sbb
(bad)
cld
not
dec
mov
cmp
fdivr
pusha
imul
sahf
in
in
ret
push
or
push
ret
adc
xchg
les
outs
push
jno
xchg
cwde
push
jne
push
push
push
push
jp
addr16
or
add
cwde
dec
and
(bad)
mov
ror
pushf
mov
cmps
cs
(bad)
pop
mov
das
xor
push
mov
jne
pop
call
loop
fwait
loope
fldcw
stos
ficomp
sbb
xchg
movs
icebp
sub
cmp
jecxz
cld
ficomp
xchg
mov
sbb
add
dec
dec
pop
and
cwde
cmp
retf
pusha
and
inc
xchg
ss
and
sbb
or
jecxz
inc
jg
icebp
int
enter
ds
sbb
pop
sbb
loopne
repz
inc
out
and
jmp
mov
fs
mov
hlt
xchg
add
cmp
adc
fstp
sbb
pop
sbb
bound
popf
mov
outs
push
nop
or
jno
xlat
out
call
dec
inc
push
mov
daa
adc
dec
sar
(bad)
lock
adc
lods
aaa
mov
dec
pop
into
scas
dec
in
lods
int3
test
hlt
adc
xchg
push
jne
or
mov
cmp
cs
xchg
cmps
psubsb
mov
cmp
mov
jns
stos
ror
or
fcmovbe
mov
lds
scas
xlat
and
pop
or
(bad)
dec
in
loope
pop
pop
xchg
out
xchg
or
xchg
mov
xlat
sbb
mov
cmp
fcom
jl
test
mov
mov
retf
mov
fisttp
clc
mov
test
(bad)
mov
pop
(bad)
imul
mov
mov
call
sub
fwait
or
xlat
stos
adc
shl
mov
jns
les
xor
idiv
ftst
sub
cmp
fistp
cmp
stos
mov
les
add
xchg
mov
fisubr
xor
jle
call
add
dec
dec
mul
jl
dec
mov
mov
mov
lods
in
retf
(bad)
or
data16
jne
dec
in
sbb
ja
inc
xor
ret
mov
inc
pusha
dec
push
test
(bad)
bound
icebp
cdq
mov
fs
xor
xor
fistp
outs
mov
aas
mov
out
add
leave
jns
pop
xor
sub
mov
push
push
and
adc
pop
jo
cmp
lock
les
dec
mov
and
jmp
(bad)
mov
sub
push
jl
call
cmp
fdiv
mov
push
push
jnp
mov
shr
(bad)
xchg
mov
xor
sti
xchg
xor
push
cmps
xor
mov
mov
mov
sbb
push
xchg
mov
cmp
cmc
call
jnp
xchg
inc
jo
sahf
jmp
call
push
mov
adc
and
xor
cmp
adc
jo
ins
into
inc
mov
ja
xor
inc
push
pop
jle
bound
pop
gs
lahf
cmp
mov
ret
retf
and
jb
mov
test
in
repz
out
adc
push
in
rcl
and
and
cmp
sub
jmp
lock
inc
push
and
mov
xor
push
dec
je
cmp
lea
sub
sbb
nop
cmp
scas
xor
mov
pop
ja
sbb
sbb
inc
add
iret
or
clc
loopne
push
fs
jmp
xchg
retf
and
call
fistp
adc
cdq
jns
gs
xor
aam
mov
leave
mov
jne
push
dec
loopne
cmc
jge
jnp
push
retf
lds
aad
sbb
dec
mov
movs
sbb
jmp
or
sub
cmp
xchg
(bad)
xlat
inc
push
add
cmp
movs
cmp
ja
and
mov
mov
mov
cmp
mov
rcr
lods
imul
ror
cs
dec
hlt
push
jge
mov
pushf
sub
cmp
mov
xor
pop
jge
stc
fild
sbb
mov
push
or
idiv
pop
aas
or
add
adc
lods
call
cld
test
jle
or
or
xchg
mov
jo
es
cwde
stos
push
dec
(bad)
jno
or
pushf
les
jo
scas
cdq
(bad)
imul
inc
pop
adc
dec
mov
pop
push
mov
icebp
mov
rol
mov
xchg
and
jmp
cmp
mov
mov
xor
sub
push
inc
ins
shl
inc
(bad)
(bad)
xor
pop
pushf
mov
pmullw
push
mov
or
jns
inc
adc
sar
mov
pop
xchg
or
enter
nop
mov
xchg
mov
movs
mov
mov
das
push
mov
sub
adc
xchg
and
or
push
ins
sub
xor
xlat
add
fild
icebp
aad
in
shl
add
pop
out
push
mov
add
es
or
and
adc
inc
dec
aad
inc
sub
bound
inc
sub
rol
jp
loopne
push
cbw
jp
repz
pop
test
and
imul
repnz
(bad)
div
jecxz
fsub
outs
es
mov
nop
sti
lods
and
mov
push
mov
fisubr
mov
add
shl
jl
mov
test
or
shl
ficom
cmc
jg
cmp
inc
ror
xchg
mov
add
inc
popf
add
js
jl
xor
mov
cmp
mov
int3
and
mov
aam
jle
jmp
icebp
mov
pop
mov
dec
sub
jl
xchg
fld
stos
push
pop
inc
in
mov
mov
shl
retf
xor
js
ret
addr16
stos
sti
(bad)
push
and
inc
aam
test
mov
(bad)
mov
popf
rcl
mov
push
loopne
pop
aas
and
xchg
repnz
pop
movs
mov
add
pop
pop
inc
fsubr
mov
loope
cmp
xor
mov
mov
xchg
add
pop
rol
in
jp
ds
jmp
pop
mov
ds
dec
shl
adc
cmp
inc
jecxz
or
cmp
push
xchg
repz
xlat
xchg
xchg
mov
sbb
hlt
dec
cmp
dec
xchg
pop
scas
jmp
imul
or
in
sbb
inc
xor
adc
retf
inc
mov
movs
test
cmp
mov
ficomp
cmp
lds
int3
scas
pop
rcl
clc
cdq
dec
add
mov
xor
sbb
mov
jae
pop
push
mov
add
cli
mov
adc
into
retf
adc
adc
and
test
test
pop
les
int3
scas
push
retf
mov
sahf
lods
arpl
call
repnz
mov
movs
call
imul
pop
ja
push
mov
lock
scas
(bad)
and
es
in
xchg
test
xor
fcmovnu
sar
and
mov
ret
mov
mov
and
out
popa
and
test
pop
xor
pop
fwait
lods
pop
or
scas
in
mov
je
cmps
mov
in
into
aas
div
push
inc
pop
sbb
jg
pusha
mov
outs
hlt
lds
mov
fldenv
sbb
sahf
in
push
and
xlat
movs
jle
dec
pop
(bad)
retf
mov
popa
xlat
mov
xchg
dec
adc
push
jmp
mov
jecxz
sbb
in
fsubr
aam
ins
loopne
aaa
mov
xchg
(bad)
jge
sti
fstp
xlat
mov
jl
out
mov
push
sub
and
das
mov
pop
js
int3
xor
add
mov
add
cmovs
sub
add
adc
sahf
lahf
sahf
xchg
gs
mov
mov
aas
sub
add
call
inc
icebp
int
inc
pop
mov
in
fstp
pop
mov
push
mov
cmps
fidivr
xor
sti
xor
inc
jb
sbb
in
mov
dec
pop
push
sbb
xor
cmp
mov
in
mov
dec
pushf
adc
push
ror
(bad)
sub
dec
mov
sti
pop
pop
and
stos
les
inc
fwait
nop
rcl
xor
adc
popa
sbb
ret
mov
mov
or
cmp
or
test
and
jae
out
in
mov
push
push
ins
mov
mov
or
push
xchg
adc
inc
pop
bound
pop
adc
mov
cmp
icebp
push
inc
outs
push
xor
aad
mov
adc
and
add
stos
pop
pop
test
inc
xchg
scas
je
cmps
sub
jmp
adc
xor
jmp
sbb
adc
adc
adc
adc
push
icebp
loop
and
sti
cwde
ins
fcomi
into
jecxz
push
mov
not
jl
push
mov
or
jp
pop
in
out
jl
lock
pop
imul
or
das
add
iret
sbb
adc
xchg
adc
ins
imul
aas
in
js
xor
and
fs
push
xchg
or
(bad)
out
jl
jb
pushf
mov
test
push
loop
repz
or
and
inc
sbb
jl
pop
pop
lds
icebp
daa
pop
or
popf
out
sbb
out
pop
cwde
mov
(bad)
push
xor
ja
shl
cmp
dec
(bad)
xchg
(bad)
sbb
sbb
cmp
das
adc
push
stc
repz
xchg
or
js
cmp
repz
xchg
mov
dec
fadd
jecxz
jmp
sub
pop
cs
loop
mov
xor
(bad)
out
xor
xchg
xchg
mov
shl
sub
adc
add
div
mov
and
push
lds
test
(bad)
jle
imul
adc
jno
(bad)
call
inc
(bad)
xchg
sbb
push
stc
enter
push
push
jbe
sti
mov
add
movs
repnz
jp
jns
xchg
bound
popf
into
and
or
xchg
jns
fs
jnp
in
xchg
icebp
(bad)
and
outs
pop
fimul
ss
js
hlt
and
and
mov
dec
arpl
in
je
xor
and
inc
or
ins
addr16
push
cmp
add
or
add
dec
inc
mov
dec
pop
or
jo
jmp
sub
bound
or
add
mov
hlt
and
xor
sbb
or
dec
fcomip
xchg
scas
xchg
(bad)
bound
xor
pop
cli
mov
out
jno
aas
scas
ror
mov
inc
adc
jge
inc
jecxz
test
pop
pop
dec
and
cmp
and
aad
cmp
arpl
mov
pop
in
cmp
cmp
std
inc
pusha
popf
test
sbb
dec
in
and
dec
xchg
data16
mov
jg
mov
and
lea
mov
(bad)
adc
dec
push
xor
in
sar
cmc
cmp
int3
jmp
add
sbb
or
sub
outs
dec
adc
loop
sbb
mov
dec
mov
scas
cdq
pop
lea
mov
cmp
sub
loopne
test
jb
dec
scas
js
mov
push
out
mov
sbb
outs
mov
test
xor
sub
sbb
outs
pop
push
pop
ss
adc
jecxz
inc
adc
mov
(bad)
ret
test
test
sub
adc
popa
lods
mov
xor
xor
or
ret
mov
es
cld
jnp
lahf
cmp
in
adc
xchg
aam
lods
imul
and
mov
inc
repnz
pop
mov
inc
imul
cmp
mov
aam
mov
or
inc
in
adc
outs
or
jecxz
sub
cld
sub
jl
fwait
in
lods
adc
xor
cld
aad
shl
mov
push
fwait
mov
cmp
loop
mov
ds
fidivr
cmp
(bad)
mov
(bad)
bound
pop
repz
scas
jmp
into
jmp
dec
shl
jae
cmp
lods
add
mov
xchg
xlat
jb
das
jmp
pop
sti
mul
xchg
aad
cmp
add
adc
adc
mov
ret
mov
sub
add
jmp
mov
xor
adc
dec
adc
dec
js
mov
repz
repz
idiv
or
push
mov
or
jmp
shl
arpl
push
mov
mov
xchg
ins
loopne
mov
mov
lods
jge
or
adc
push
push
mov
enter
sbb
pop
jl
loope
mov
sar
xor
jns
jl
jle
pop
popf
xchg
dec
xor
pop
repnz
mov
pop
cwde
in
dec
jbe
cli
pop
push
into
div
jg
stos
(bad)
imul
ficomp
mov
out
nop
cdq
mov
dec
inc
adc
(bad)
out
xlat
pop
mov
xchg
mov
pusha
pop
xchg
(bad)
dec
mov
xor
fiadd
fnstenv
add
dec
pop
fidiv
mov
mov
jp
jmp
pop
fadd
add
ins
imul
je
push
out
mov
jle
lds
sbb
into
pop
sti
fucomp
mov
or
(bad)
addr16
jmp
sub
arpl
pop
add
mov
pop
xchg
outs
or
or
addr16
sbb
not
js
popf
dec
imul
xor
pop
jbe
mul
sahf
jbe
cs
aad
jno
cld
test
cmp
and
call
dec
mov
in
retf
jle
sub
lods
outs
in
pop
and
push
das
xor
xor
cmc
movs
jge
popa
cmps
push
pop
inc
loopne
retf
add
nop
scas
iret
xor
or
xchg
jecxz
call
lds
(bad)
add
adc
sbb
and
pop
jle
cmp
scas
mov
push
and
push
sub
cmps
leave
pushf
cmc
add
sbb
sub
pusha
ja
adc
test
stos
(bad)
jno
add
(bad)
cmp
add
cwde
mov
xchg
(bad)
sub
(bad)
shl
gs
pop
adc
lock
mov
sahf
adc
or
mov
ficom
add
loop
lahf
jb
imul
xor
mov
(bad)
popf
retf
push
inc
push
arpl
push
or
inc
sub
adc
mov
cs
in
pop
cdq
outs
(bad)
mov
or
(bad)
hlt
and
mov
push
daa
scas
inc
sub
cmp
sbb
push
sub
jg
push
sbb
push
lahf
xor
mov
fld
xchg
pop
ds
sbb
shl
xor
in
icebp
data16
jb
stos
mov
inc
sub
pop
jecxz
ins
fwait
je
sar
or
clc
loope
inc
xor
movs
mov
das
add
shl
mov
aam
or
sub
and
xor
xlat
mov
adc
neg
aas
adc
mov
jns
ror
icebp
int3
xor
inc
cld
aaa
repz
jmp
retf
scas
fwait
test
cld
xor
adc
push
shr
scas
push
clc
push
inc
mov
fstp
aaa
inc
lods
rcl
sub
rcr
stos
push
pop
dec
aad
or
leave
les
xor
xchg
mov
push
mov
sbb
in
rcl
dec
cwde
scas
loopne
int3
jp
mov
lods
push
iret
and
out
test
push
push
pop
lahf
jnp
jbe
and
(bad)
in
mov
add
(bad)
jns
or
mov
and
in
pop
inc
push
pop
jnp
inc
cmp
rcl
stos
jmp
cmp
cld
push
fisubr
stc
lahf
push
pop
loop
sub
jle
xchg
xchg
mov
fnsave
popf
aas
jbe
loop
in
jbe
jbe
sub
mov
adc
mov
cmps
ins
mov
icebp
inc
push
adc
ror
push
es
bound
jecxz
cwde
push
xlat
mov
loope
movs
loopne
dec
cmps
imul
in
sbb
cli
mov
shl
fisttp
retf
js
sub
ja
or
inc
mov
cld
stc
outs
mov
popf
pop
push
jle
cmp
jo
(bad)
jmp
mov
jmp
mov
dec
test
fidivr
and
mov
dec
sub
mov
and
xor
xchg
in
cmp
ins
cmp
mov
cmp
xor
sub
mov
xchg
lds
nop
mov
cmp
dec
retf
mov
pop
lds
pop
jae
sbb
popf
mov
cld
dec
xor
ins
or
sbb
xor
add
push
adc
pop
xchg
mov
pop
jge
aad
pop
xchg
jno
fisub
inc
mov
cmp
stos
scas
stos
pop
cdq
adc
xchg
jmp
dec
loopne
mov
cwde
push
push
dec
add
xchg
outs
sahf
and
data16
lods
in
xor
test
push
lods
cmp
sbb
push
jg
push
out
int3
loopne
pushf
mov
push
xor
enter
dec
dec
jl
mov
push
mov
std
sub
fadd
bt
rcl
movs
cmps
pop
inc
xlat
or
fistp
sti
repz
sbb
mov
sub
fwait
inc
test
cli
sti
imul
in
adc
mov
das
xor
inc
jge
jb
sbb
adc
inc
jae
adc
mov
cs
and
adc
xor
lock
pop
cmps
sub
pop
(bad)
dec
xchg
fnstcw
or
out
fidiv
mov
mov
icebp
pop
cmp
rcl
inc
(bad)
les
fs
mov
call
add
comiss
add
jbe
add
cli
xchg
sbb
cld
call
outs
jmp
jmp
in
(bad)
sub
aad
mov
sub
std
push
mov
out
lods
test
ss
retf
or
shl
dec
xor
out
out
mov
sbb
ss
ins
mov
mov
mov
and
adc
jo
and
shr
dec
ins
sbb
jecxz
xchg
jne
daa
cmp
cli
adc
sub
and
push
or
mov
mov
push
nop
cld
dec
add
pop
test
sbb
fst
in
xor
jnp
mov
jle
rol
stos
ins
push
jae
aas
xor
push
daa
and
push
js
pop
repz
ret
popf
in
stos
aaa
outs
dec
adc
ja
ins
mov
mov
or
adc
sbb
xor
mov
das
dec
mov
sub
nop
sbb
pop
mov
(bad)
cli
push
jae
test
test
data16
or
mov
movs
pop
es
adc
cs
outs
add
sub
xor
pop
adc
xchg
xor
idiv
xchg
xchg
add
and
dec
xor
mov
daa
mov
adc
fdivr
mov
or
out
dec
push
mov
int3
test
daa
movs
outs
xchg
or
cli
fwait
fs
call
outs
(bad)
ret
mov
xor
mov
fmul
xchg
mov
jns
imul
jl
inc
in
mov
retf
and
ret
mov
push
lds
std
fisttp
cmp
pop
div
push
cli
cmp
popf
pop
cmp
sbb
add
scas
xchg
in
fs
mov
in
cmp
push
sbb
jb
push
jp
bound
xor
rcl
sub
mov
push
arpl
(bad)
xlat
loopne
arpl
sub
sahf
sbb
pop
lock
and
dec
mov
mov
adc
je
js
mov
imul
jmp
sub
sbb
es
mov
pop
test
psrad
dec
mov
xor
test
cmp
enter
ja
out
cmp
xchg
clc
data16
jmp
leave
ds
xchg
pushf
xor
test
hlt
push
cmp
or
push
fiadd
push
rcl
xlat
arpl
jne
adc
jp
add
adc
dec
xor
mov
jo
pop
or
cmp
arpl
sbb
inc
stos
jl
fisttp
sub
ins
movs
jmp
mov
in
mov
clc
jp
cmp
lods
jge
in
int
sbb
ffreep
push
add
cmp
pop
bound
imul
aaa
mov
sbb
xlat
jmp
popf
sti
or
jbe
pop
mov
inc
(bad)
adc
in
mov
adc
dec
addr16
mov
std
xor
fwait
mov
mov
outs
jne
inc
dec
add
xchg
mov
push
outs
fild
add
jge
ins
cmps
lods
shr
ja
xchg
xor
mov
xor
sar
ds
imul
repz
mov
cwde
mov
xchg
pop
pop
xchg
int3
retf
lahf
push
fldenv
adc
add
dec
xchg
clc
jns
les
imul
shr
das
das
imul
stos
inc
shr
dec
adc
dec
not
out
jecxz
mov
cmp
aam
push
pusha
(bad)
lock
iret
adc
xor
pop
test
les
push
ins
and
sbb
popf
lock
pop
xchg
pop
xchg
and
div
xlat
mov
rep
and
fwait
cmps
out
imul
mov
lds
pop
pop
or
loope
test
mov
jle
pop
push
mov
xor
loope
mov
fwait
mov
iret
mov
cmps
push
or
or
add
nop
(bad)
loopne
mov
cmp
addr16
sub
mov
sbb
ds
cmps
inc
sub
sahf
inc
inc
jmp
jmp
jecxz
aad
dec
fcomp
or
jp
shl
adc
xchg
out
mov
pop
(bad)
outs
and
das
add
(bad)
mov
dec
data16
xor
mov
jmp
lds
test
adc
sub
pop
shr
push
jne
pop
mov
dec
(bad)
xchg
movs
sub
fdiv
cld
jge
fistp
stos
sbb
or
xchg
jg
out
idiv
fxtract
jns
pushf
mov
in
int
js
and
push
xchg
lods
pop
mov
or
movs
mov
inc
or
imul
mov
add
jle
pop
sbb
push
xchg
dec
jmp
sbb
movs
cmp
dec
dec
loop
out
into
loop
xchg
mov
sub
iret
mov
imul
push
adc
xchg
jns
inc
sub
xor
jge
enter
mov
add
mov
sahf
and
adc
jp
adc
aas
sbb
pushf
fidiv
xlat
add
add
int
cmp
mov
push
pop
inc
adc
jl
cmp
rcl
int
xchg
xchg
sahf
(bad)
xlat
pop
pop
push
xor
stos
or
ins
xchg
sub
or
ins
or
adc
movs
movs
cmp
es
loop
add
bound
movs
cmp
ror
popf
xchg
stos
add
jb
cmps
and
movs
out
push
cmps
lock
cmp
out
inc
mov
mov
stos
dec
lods
xchg
nop
test
cmp
test
jnp
mov
clc
imul
mov
sbb
shl
jl
jp
jg
xchg
cs
push
mov
cli
clc
add
dec
cmp
jb
aas
outs
sub
jo
dec
cld
popa
pop
pop
cmp
cmp
xor
movs
jg
cwde
imul
jle
push
retf
fcom
xor
icebp
outs
xchg
or
jae
shr
and
jmp
retf
sub
retf
fwait
pop
xchg
push
mov
popa
pop
imul
or
inc
and
cmp
in
sub
sbb
and
ins
or
adc
pop
dec
repz
xor
pushf
xor
cmps
and
aad
push
sub
out
lock
mov
std
xchg
sahf
cmp
jecxz
ror
das
mov
mov
mov
xchg
and
push
lahf
push
scas
jl
lods
pusha
push
stos
jae
ss
and
cld
or
sub
and
mov
inc
and
addr16
push
mov
dec
test
fild
mov
(bad)
loop
mov
aas
inc
mov
dec
adc
push
sahf
inc
mov
mov
mov
inc
add
arpl
ins
xchg
dec
jmp
ficom
mov
sbb
dec
push
jp
je
adc
shl
push
mov
jle
jno
cmp
sahf
push
ins
test
cmp
jmp
cmp
mov
leave
jb
shl
inc
inc
sub
cmps
jp
ror
mov
inc
mov
push
pop
sbb
mov
cmp
xlat
aaa
mov
lock
dec
jbe
loop
mov
and
movs
fdiv
call
adc
add
adc
cmp
inc
test
push
dec
shl
dec
and
fistp
pop
(bad)
sbb
pop
test
jo
pushf
test
pushf
gs
jns
mov
add
pop
sbb
shl
pop
add
out
lds
gs
add
lods
ret
cmp
test
in
xchg
push
xchg
xchg
outs
sbb
js
add
aas
cmps
cmps
imul
cmps
lahf
(bad)
aaa
out
je
push
adc
movs
out
add
inc
cmp
movs
adc
cmp
rol
sbb
dec
jl
sbb
sahf
xchg
push
scas
das
pop
push
lea
mov
loope
or
push
mov
mov
pop
xor
call
adc
scas
fdivr
push
lock
dec
pushf
add
cmp
mov
shr
cdq
push
mov
sti
cld
fild
mov
test
cmp
leave
push
add
aaa
jmp
cmp
std
loope
ins
scas
scas
or
or
test
hlt
das
retf
jmp
lahf
adc
fcmovnbe
pusha
idiv
and
mov
cmp
mov
push
lahf
push
cmp
mov
les
shr
and
or
dec
mov
rcr
inc
cmp
hlt
or
inc
push
fst
cs
call
in
nop
loopne
repnz
pop
test
aad
adc
add
mov
push
jp
sub
push
xor
ja
cmp
and
push
adc
push
fisub
dec
and
ins
pop
(bad)
in
jbe
loopne
ret
out
xchg
(bad)
xor
inc
outs
aam
hlt
dec
mov
adc
icebp
sahf
dec
and
bound
pushf
adc
cmps
jb
dec
enter
arpl
cmps
jecxz
mul
mov
xchg
ret
neg
neg
mov
test
mov
dec
bound
jge
movs
jmp
daa
aad
aam
aaa
repnz
cs
sub
dec
bound
outs
pop
call
adc
pop
add
push
push
dec
pop
enter
jecxz
sbb
dec
xor
inc
pushf
or
add
pop
out
jne
or
cmp
es
mov
out
imul
iret
push
mov
jno
push
das
xor
scas
or
push
mov
imul
movs
cld
mov
push
sbb
mov
cdq
mov
jnp
les
and
push
and
xchg
push
mov
inc
fwait
cmp
outs
in
outs
push
add
push
xlat
adc
push
stos
cld
out
aad
mov
pop
inc
push
pop
sub
push
fmul
push
jmp
xor
fild
enter
inc
outs
pop
pop
jmp
and
icebp
mov
push
or
pop
loope
sub
or
fdivr
and
and
(bad)
inc
mov
lds
add
jp
and
sbb
in
ja
cmp
ins
push
mov
rcl
sbb
(bad)
call
sbb
xchg
sbb
retf
cld
mov
mov
mov
loop
ror
adc
jge
sahf
jle
sub
int
ja
mov
dec
sbb
dec
and
cmp
add
loope
xor
xor
les
add
enter
sets
sbb
in
mwait
xor
out
push
and
sub
inc
sub
imul
clc
cmps
mov
and
mov
aam
shl
mov
mov
into
pop
sub
or
scas
int3
inc
jecxz
mov
movs
cmp
retf
dec
imul
jg
jns
adc
or
mov
sbb
dec
(bad)
(bad)
mov
cmp
inc
sbb
xor
stos
adc
xchg
cdq
stos
dec
jmp
lea
daa
push
scas
fcom
fs
test
inc
int
inc
dec
adc
enter
and
nop
(bad)
lock
sti
and
push
sbb
out
leave
movs
pop
mov
ss
add
adc
cmp
nop
sbb
sub
lock
mov
and
xchg
or
inc
dec
icebp
retf
das
push
out
xacquire
pop
mov
add
das
push
add
xor
adc
loop
inc
mov
jmp
dec
sbb
outs
sub
dec
xor
sbb
imul
in
int3
jecxz
mov
fst
inc
daa
psrad
jnp
push
add
push
pop
rcl
jae
sbb
ret
fs
pushf
mul
bound
pop
clc
dec
push
mov
mov
pop
jb
sbb
inc
xchg
pop
push
push
pop
sub
xchg
or
jmp
(bad)
das
adc
inc
bound
icebp
cmp
jg
or
cs
out
into
lea
mov
lds
sbb
cmp
xor
stc
cmp
and
push
in
jno
adc
add
(bad)
je
sbb
mov
ror
rcr
or
push
aaa
int3
push
mov
inc
retf
ficom
sbb
jecxz
cs
xchg
push
rol
fisttp
dec
add
add
test
mov
mov
mov
in
or
int
jo
mov
psllq
test
xchg
daa
pushf
imul
retf
addr16
out
xor
scas
mov
sub
push
adc
aad
jnp
push
xchg
outs
popf
inc
jl
sub
sub
ins
push
daa
add
and
stc
fstp
cmp
xchg
sbb
pop
pop
cdq
ret
sub
lahf
push
lds
push
fidivr
cmc
mov
fwait
mov
dec
pop
mov
in
fiadd
adc
repz
scas
mov
aaa
or
mov
mov
ret
sub
sbb
sub
lods
jl
xlat
sbb
movs
stc
mov
push
sub
jecxz
adc
adc
stos
shr
shr
aaa
nop
(bad)
xor
popf
sub
jmp
call
jns
fcom
sbb
in
xchg
add
mov
inc
cmp
es
mov
cmp
js
mov
cmp
mov
mov
mov
stc
push
fs
popf
inc
jmp
xchg
xchg
(bad)
push
aad
mov
or
push
aas
(bad)
in
pushf
fisttp
cmc
je
sub
push
mov
push
dec
ficom
int3
push
les
(bad)
jl
rcl
(bad)
(bad)
and
in
sti
xchg
xlat
retf
sar
push
out
int
sub
adc
pop
ret
repnz
mov
call
mov
xchg
or
fild
xchg
mov
push
push
pop
push
mov
jne
lods
cmc
mov
out
(bad)
dec
xchg
inc
mov
push
dec
leave
inc
mov
clc
mov
add
test
rol
test
mov
ficomp
mov
pop
mov
fld
lahf
enter
ds
pop
stos
xchg
fidiv
add
nop
push
jae
mov
sub
imul
inc
ret
xlat
inc
lods
mov
dec
in
push
pop
out
ret
lock
jge
shl
(bad)
adc
adc
and
push
stos
pushf
jae
sub
mov
or
fs
in
test
in
ins
rol
add
mov
(bad)
dec
movs
xchg
fwait
in
movs
cld
rcl
retf
nop
and
mov
out
fld
clc
push
cmp
loope
sbb
cmp
pop
mov
and
sbb
lahf
aas
xchg
mov
out
add
mov
sbb
jmp
arpl
lock
or
mov
(bad)
ins
out
push
call
xor
xor
jg
ins
jmp
cmp
sub
cmp
stc
mov
inc
ja
das
sti
repz
inc
icebp
shr
inc
data16
xor
stc
dec
mov
or
movs
movs
add
fisubr
xor
sbb
repnz
ret
add
and
and
jae
xor
fsubr
lea
imul
and
sbb
jp
sbb
pop
shl
jecxz
xchg
psubusb
add
sar
inc
fcom
into
xchg
ficom
add
jmp
sub
sti
je
ins
shr
rcr
mov
test
mov
xchg
xchg
pcmpgtb
and
sbb
mov
sbb
aad
enter
or
sar
sub
and
or
loopne
in
out
inc
imul
push
movs
ret
imul
mov
enter
mov
and
inc
and
pop
cmovl
int
mov
mov
adc
mov
push
call
or
and
adc
je
xor
ss
popa
dec
and
mov
fsubr
xor
hlt
lods
in
ret
push
rcr
cmp
or
jge
and
ret
cmp
jns
fcmovnbe
ror
mov
jle
aaa
ficomp
mov
xchg
mov
cmps
icebp
outs
or
cmp
popf
and
je
iret
lock
je
pop
es
jbe
arpl
int
adc
test
mov
pop
mov
or
inc
add
out
pop
mov
add
bound
scas
jl
scas
push
pop
out
push
mov
xchg
push
ror
cld
lods
adc
scas
cmp
lods
sbb
and
pop
push
ja
add
mov
(bad)
xchg
xor
xchg
mov
mov
nop
mov
fld
xchg
ret
loope
aad
int3
ret
mul
inc
loop
xchg
jns
pusha
lahf
mov
fistp
cld
inc
jg
dec
push
cmp
adc
mov
out
idiv
sub
inc
sub
mov
fidivr
sub
sbb
mov
push
mov
add
sub
popf
cmp
sbb
and
push
test
call
push
in
inc
or
sbb
out
sub
sbb
inc
in
jmp
or
adc
xor
xlat
mov
adc
lock
jecxz
not
push
push
jb
cwde
jg
call
pop
dec
adc
add
into
mov
jmp
clc
jbe
ret
cmp
push
nop
test
clc
jle
test
lods
in
shr
fs
or
pop
cmovno
and
jmp
inc
xchg
mov
adc
stos
inc
pop
mov
push
dec
and
call
dec
ret
or
jns
pop
cmp
or
add
dec
jmp
in
mov
mov
pop
shr
or
aad
retf
mov
(bad)
mov
in
loop
loope
sbb
jg
cmp
das
mov
dec
sub
and
xchg
push
not
les
inc
mov
repnz
mov
dec
sub
sbb
out
and
in
push
iret
dec
pop
adc
fiadd
imul
shr
sub
xor
mov
mov
push
inc
icebp
xchg
sub
retf
data16
inc
test
sbb
sub
popf
and
cmovge
sahf
push
fwait
cmps
xchg
mov
and
rcr
stos
jnp
in
inc
sbb
inc
loope
popa
sbb
(bad)
xor
test
mov
sub
inc
mov
mov
stos
sbb
fldenv
ss
test
dec
pop
jp
loope
add
je
and
push
loope
fwait
(bad)
call
inc
mov
pusha
sub
cld
(bad)
cs
jecxz
inc
lds
sub
pop
dec
mov
push
pop
ror
retf
fmul
arpl
push
fmul
gs
xor
test
fs
xchg
out
jg
fwait
cmp
aam
jo
loope
daa
test
add
add
call
ds
scas
or
hlt
popa
cmc
fwait
push
and
out
xor
nop
mov
ret
lahf
clc
rcl
add
in
dec
sub
sub
je
(bad)
xchg
inc
arpl
sar
cli
and
xchg
mov
jo
adc
aad
xor
lods
rcl
push
retf
push
std
shr
add
add
imul
mov
xchg
lods
loopne
push
xchg
sahf
pusha
mov
xor
mov
pop
mov
xchg
pop
mov
adc
mov
fiadd
hlt
ss
and
sbb
jmp
xchg
inc
jge
loop
dec
dec
sbb
fadd
push
xor
call
pop
mov
ss
push
push
sahf
pop
xor
mov
xchg
dec
pop
dec
sub
and
xor
jb
pop
popa
(bad)
loopne
dec
mov
arpl
jp
stos
cli
inc
lea
fucomp
and
add
ja
cmps
mov
sub
je
xor
sti
fisttp
in
and
pop
mov
loop
and
sub
sub
(bad)
imul
mov
retf
in
sub
pusha
push
sbb
pop
les
pop
in
xor
addr16
aad
inc
jbe
jae
jmp
or
mov
(bad)
ror
(bad)
mov
dec
push
sbb
out
pop
add
lahf
and
out
xchg
ins
push
xchg
inc
xchg
arpl
and
aas
stc
and
mov
inc
fwait
popf
push
inc
mov
push
sbb
iret
fimul
std
mov
mov
push
pop
test
inc
mov
mov
push
sub
add
fs
push
cli
int
out
call
jg
rcl
and
sbb
ds
sub
sbb
test
movs
ficom
adc
or
(bad)
pop
jb
iret
les
xchg
xchg
mov
and
mov
test
sbb
jp
pop
rcl
or
push
push
iret
xor
cmp
pop
cdq
es
fwait
mov
mov
ret
xchg
fimul
sbb
push
pop
jnp
test
movs
mov
(bad)
test
sub
xchg
or
jae
stc
dec
aad
ja
inc
sub
mov
iret
fadd
adc
pop
aad
ins
and
loop
hlt
sahf
inc
xor
add
imul
loope
out
lahf
sub
jg
shl
mov
or
add
or
and
jne
sub
int3
push
nop
pop
fcmovbe
or
shl
pop
inc
jg
test
jmp
cmp
sub
cli
xchg
enter
dec
pop
enter
stos
iret
popf
loope
xor
nop
outs
dec
mov
cs
call
ror
push
popa
jnp
fst
or
push
pop
in
mov
hlt
add
xor
imul
sub
pop
sub
jnp
lods
cmps
dec
lods
xlat
mov
xchg
xchg
adc
(bad)
fdivr
mov
mov
in
xor
dec
add
push
leave
push
retf
jg
sbb
push
lahf
xchg
and
push
(bad)
addr16
and
pop
ins
cli
mov
addr16
xchg
adc
(bad)
dec
out
cli
popa
xchg
mov
(bad)
stc
gs
(bad)
push
cwde
je
mov
mov
loopne
imul
jmp
mov
jno
sti
xor
sbb
in
sahf
dec
test
xchg
aam
pop
loop
cmp
out
xchg
mov
pop
cmc
rcr
pop
retf
jg
in
push
clc
out
retf
out
ret
clc
int3
aas
xchg
lock
inc
mov
mov
je
jb
test
pop
mov
ins
xor
adc
daa
inc
aad
in
xor
cmp
jne
arpl
xchg
mov
into
xchg
fcomp
(bad)
cmp
push
cmp
arpl
push
mov
xlat
cmp
mov
dec
cmc
inc
pushf
cmp
mov
jae
stos
sar
push
cdq
icebp
mov
sub
ins
in
cwde
push
jle
(bad)
iret
call
cmp
xor
sbb
or
dec
sbb
and
pop
add
(bad)
out
or
pushf
mov
jno
je
leave
adc
sub
aad
icebp
data16
(bad)
adc
pop
mov
cld
mov
and
shl
addr16
or
jge
sub
xchg
(bad)
mov
jae
ins
mov
(bad)
push
mov
enter
ss
movs
cmp
call
mov
mov
inc
fmul
sub
test
pop
and
xchg
call
push
cmp
lods
ins
mov
aam
test
lds
cmp
and
mov
pop
mov
dec
cli
mov
or
xchg
js
int
add
rol
xchg
push
cmps
pop
hlt
push
ins
lods
cli
cli
jmp
and
mov
fdivr
jle
xchg
cmps
in
push
jg
sub
jp
call
and
loopne
das
xlat
or
int3
cld
mov
dec
push
pushf
repz
dec
fstp
jmp
popf
dec
jle
push
cmp
inc
es
and
cld
data16
sub
inc
movs
outs
int
dec
mov
ftst
and
adc
push
xor
xor
popa
dec
sub
in
je
sbb
hlt
gs
sti
cmp
sar
(bad)
xlat
add
jb
(bad)
mov
scas
rcl
es
push
addr16
iret
aad
into
cmp
add
int
jl
daa
les
dec
shl
stos
jmp
add
mov
out
les
add
xor
inc
clc
call
hlt
data16
mov
xlat
xor
cwde
nop
lock
and
fisubr
and
xor
(bad)
popa
sbb
mov
mov
pop
inc
inc
add
xchg
popa
adc
push
push
and
add
xchg
jnp
dec
and
sub
stc
shl
aad
ja
pop
xchg
stos
pop
pushf
jl
add
and
jp
xchg
repz
lock
movs
cmp
movs
sbb
lds
mov
loop
rcr
jnp
imul
xor
and
repz
mov
adc
xchg
addr16
leave
sub
pushf
jae
xchg
std
ficom
retf
fwait
cmp
pop
mov
add
add
shl
xor
mov
pop
das
sti
cmps
mov
and
lods
push
loop
xchg
(bad)
stos
and
and
jo
cmp
into
ret
jl
sti
xchg
popa
xchg
fwait
loope
and
jg
push
xchg
or
jb
das
add
push
jecxz
xchg
pop
and
mov
mov
adc
mov
loopne
stc
pop
and
loope
int
xchg
jnp
(bad)
cmp
loope
sti
retf
fldenv
cmp
ss
dec
aaa
push
adc
push
stos
mov
mov
cmp
or
fild
sub
mov
ins
mov
cmp
daa
addr16
and
xor
cmps
sub
jl
jnp
or
mov
fisub
fwait
sub
jmp
dec
cmp
cmp
sub
push
les
stos
mov
fcmovnb
outs
push
rol
sub
les
xor
pop
imul
lock
xchg
ins
call
add
loope
fidivr
mov
mov
pop
adc
(bad)
jmp
cmp
sti
fwait
jge
inc
shl
xor
sub
add
retf
pop
int
fdiv
push
and
popa
jle
arpl
dec
lahf
outs
pop
rcl
hlt
push
or
jmp
jle
shl
mov
retf
inc
cmp
cmps
shl
mov
mov
cwde
dec
in
(bad)
cmp
js
shl
ins
inc
mov
fldcw
and
loope
xlat
mov
mov
mov
pop
xchg
mov
xchg
mov
mov
mov
and
jb
and
lock
add
push
pop
fcomp
lahf
dec
arpl
or
inc
mov
test
fist
mov
push
ret
pop
sub
retf
(bad)
pop
jne
mov
sub
cmc
pop
ret
dec
xor
cld
add
std
fist
rcl
sbb
or
mov
inc
cli
cmp
push
and
sub
fisubr
cmp
shr
aad
js
pop
push
xor
cmc
fmul
push
or
xchg
pop
and
dec
jmp
sbb
mov
movs
retf
mov
test
int3
pop
adc
or
fld
xchg
xlat
xor
jecxz
fxch
mov
or
call
rol
pop
or
jge
xchg
sbb
mov
cmp
(bad)
loop
popf
add
test
fidiv
(bad)
femms
and
pop
xor
jmp
cdq
pop
stos
cld
mov
and
sbb
(bad)
cmc
mov
pushf
loopne
in
in
das
or
cdq
leave
cld
or
xor
push
lods
jmp
shr
cmp
cs
mov
mov
int
repnz
sahf
xchg
inc
xchg
ss
mov
dec
mov
jmp
dec
add
dec
mov
frstor
out
add
mov
pop
scas
jbe
fstp
sub
xchg
mov
inc
fs
(bad)
jmp
movs
mov
das
xchg
push
outs
jecxz
popf
(bad)
pop
pop
movs
rol
stos
dec
repnz
pop
ror
mov
into
mov
pop
adc
dec
mov
cmp
fnstcw
mov
mov
sbb
jg
dec
cwde
mov
enter
pop
mov
xchg
add
jne
pop
cs
test
sbb
or
idiv
dec
dec
(bad)
(bad)
sbb
xchg
jle
mov
sahf
mov
enter
cmp
cmp
and
mov
cmps
je
dec
int3
add
sub
test
xor
sub
outs
(bad)
cld
inc
pusha
pusha
jae
rol
test
mov
push
test
add
mov
fcmovnu
inc
jmp
hlt
push
sub
jg
mov
fisttp
outs
in
mov
(bad)
enter
xor
mov
mov
or
pop
(bad)
jg
repz
sub
adc
pop
xchg
sbb
not
sbb
bound
pushf
ja
in
pop
mov
enter
or
jmp
xor
into
fdivr
lds
enter
jno
scas
or
mov
pop
sub
mov
mov
(bad)
fisubr
in
sti
mov
cld
fs
xchg
in
shl
and
fadd
mov
sub
gs
push
lea
dec
pop
clc
fwait
retf
dec
jno
pop
lea
js
neg
fnstcw
es
fs
or
test
pop
mov
xor
xor
jge
xchg
(bad)
stos
push
cmc
lods
imul
out
gs
xor
popa
sbb
pop
lea
test
loopne
jmp
mov
enter
pop
lea
or
ins
outs
sub
mov
arpl
add
shr
daa
ss
sbb
addr16
cmp
rcl
push
repz
cmp
test
pop
fimul
lods
add
dec
or
or
ret
cmc
ror
es
and
mov
test
adc
push
adc
loope
test
ret
pop
mov
aad
and
sbb
sbb
cmps
ins
and
push
dec
and
inc
jns
stos
pop
rcl
cmp
jns
gs
inc
and
fucom
mov
cmp
lock
imul
xchg
gs
or
mov
fnsetpm(287
cmp
or
je
enter
dec
xchg
call
cwde
sub
xchg
inc
call
and
test
fldenv
bound
cmc
add
xchg
mov
into
mov
jnp
les
popa
test
movs
adc
adc
ins
in
jb
xor
aas
pop
jl
outs
cs
(bad)
je
cmp
xchg
mov
jle
mov
ins
inc
ins
mov
xchg
mov
pop
mov
nop
ficom
test
enter
adc
sub
out
or
mov
pop
lods
fadd
stos
icebp
mov
mov
xor
sub
xchg
push
sub
push
arpl
pop
sti
jbe
inc
pop
mov
sbb
fdivr
or
xchg
enter
pop
jl
sbb
and
leave
lock
push
out
inc
push
cmp
int3
jmp
fs
cmp
or
adc
add
xor
jg
pop
adc
jl
scas
call
push
ret
mov
jb
push
in
inc
xchg
mov
fisttp
adc
sbb
les
mov
sub
out
call
scas
push
add
xor
mov
sahf
mov
xchg
mov
jo
lock
mov
mov
loop
add
repnz
pop
pop
push
cmp
inc
jnp
jo
loopne
xor
pop
cmp
pop
mov
mov
push
jmp
add
cmp
xor
add
add
pop
inc
mov
xchg
pop
push
jns
mov
mov
adc
mov
or
rcl
push
inc
xchg
test
(bad)
and
icebp
pop
sbb
cmps
sbb
adc
cmp
movs
pop
daa
mov
mov
push
imul
rol
movs
push
lock
sbb
or
mov
push
cmps
in
rol
fchs
test
inc
enter
div
mov
push
push
pop
inc
sbb
jge
test
jmp
adc
loop
mov
nop
jecxz
xlat
cwde
push
imul
mov
repnz
loopne
mov
jl
mov
dec
jne
popa
dec
push
jns
gs
mov
clc
rol
adc
in
jmp
pop
popa
cmps
ror
dec
pop
test
shr
iret
push
dec
xor
sub
pop
div
fiadd
inc
sub
and
xchg
mov
pop
jge
xor
ins
popf
fnsave
jnp
cmp
sbb
aaa
daa
jae
xchg
sbb
xchg
mov
jmp
movs
mov
rcl
je
dec
pop
lock
mov
data16
movs
arpl
ret
push
adc
mov
pop
loop
fistp
stc
fsubr
lea
mov
leave
fild
scas
sbb
or
fldlg2
inc
test
xchg
jnp
xchg
xchg
mov
pop
out
mov
jb
add
popa
addr16
inc
mov
pop
aas
adc
pop
or
addr16
cmp
xor
jns
ret
movs
or
jb
xlat
stos
and
jge
jge
data16
pop
mov
repnz
push
xchg
cmp
les
inc
or
and
cmp
lods
inc
lock
mov
ficom
inc
mov
adc
sbb
mov
push
lods
nop
aad
or
pushf
add
(bad)
retf
lds
into
adc
and
sbb
aam
pop
jg
aaa
mov
adc
pop
mul
xchg
test
in
push
rcl
daa
push
mov
fwait
xchg
mov
dec
lahf
cmp
pop
mov
xor
das
icebp
fistp
aas
std
es
imul
add
push
mov
nop
pop
xor
retf
movs
inc
mov
cmp
mov
pop
sub
jg
adc
mov
adc
jmp
mov
xor
jns
adc
add
mul
lahf
add
fstp
in
pop
loop
add
xlat
sahf
jo
cmp
ror
(bad)
and
xchg
adc
dec
lods
adc
dec
in
fst
cmps
add
fwait
popf
adc
push
mov
sar
dec
xchg
inc
faddp
mov
lods
xor
jmp
cmp
(bad)
fdiv
push
add
pop
ja
in
call
inc
sar
test
dec
jo
xor
mov
test
push
xor
hlt
inc
mov
jb
arpl
popa
add
std
call
jmp
jp
ins
xlat
push
or
mov
out
test
mov
cmovp
mov
sbb
rcl
test
cmps
pop
jbe
dec
xor
popa
mov
shl
repnz
xor
or
dec
mov
xchg
adc
loope
imul
jge
call
xchg
loope
mov
sar
inc
push
ds
loop
lahf
and
cmp
adc
mov
loop
mov
sub
push
push
pop
pop
cmp
ins
rcl
add
cmp
(bad)
call
call
loopne
pop
jg
ret
sbb
cli
push
lock
dec
pop
shl
push
js
xchg
inc
pop
aam
fst
retf
call
icebp
sub
pop
ds
out
pop
(bad)
aam
out
and
inc
cli
loopne
pop
leave
mov
mov
xor
jo
shl
ret
les
lahf
in
mov
in
jmp
scas
xchg
cdq
es
xchg
test
and
xchg
sbb
(bad)
int3
add
call
std
cmp
inc
pop
fistp
fadd
xchg
mov
jmp
jnp
mov
push
ins
xchg
mov
jbe
or
mov
cmps
ins
jl
cmps
pop
fstp
neg
xor
mov
fs
pop
mov
shr
push
mov
ds
jne
(bad)
mov
add
call
mov
mov
call
stos
adc
les
and
rol
or
movs
(bad)
fimul
iret
fadd
ror
jp
ret
ret
xchg
push
shl
or
sub
xlat
adc
inc
mov
sbb
cs
sahf
add
iret
jne
popf
jmp
or
fisubr
ret
nop
jne
rol
xor
and
aaa
loop
mov
out
xchg
mov
lods
fsub
clc
mov
(bad)
pop
imul
dec
sbb
cs
inc
push
in
and
pushf
push
movs
call
or
(bad)
retf
mov
outs
in
(bad)
jns
pop
cli
jecxz
mov
scas
enter
je
or
push
cmp
sub
xor
sbb
vmovq
and
loope
push
mov
rol
adc
add
ret
mov
aam
lahf
dec
shl
(bad)
hlt
test
dec
mov
leave
adc
sahf
rcr
lods
cwde
inc
inc
arpl
pop
(bad)
jg
xchg
or
sti
lods
ret
pusha
outs
jp
mov
jmp
sbb
inc
fimul
lock
pusha
sbb
cmp
int
cmc
retf
aad
fcomp
sti
ror
test
push
loope
inc
(bad)
add
mov
adc
mov
pop
cli
sbb
aam
pop
jns
int3
mov
out
inc
or
(bad)
leave
mov
lds
scas
mov
jns
xor
leave
jmp
mov
fldpi
dec
xchg
jb
and
hlt
scas
or
push
inc
fs
dec
mov
xchg
dec
fisub
push
ja
pop
push
mov
ds
pop
add
cs
cmp
push
xor
rol
mov
inc
sbb
sub
adc
lock
adc
jno
cmc
loope
fldcw
or
pop
ss
cmp
push
pop
inc
sbb
adc
popf
hlt
sahf
mov
shr
hlt
push
xlat
xor
enter
pop
pop
and
jl
adc
inc
movs
pop
inc
push
add
jae
sar
test
das
jmp
lea
rol
pop
call
jge
dec
imul
lds
mov
fs
or
mov
(bad)
mov
popf
mov
and
fs
add
mov
pop
sbb
(bad)
sbb
push
(bad)
and
stc
les
mov
pop
add
retf
jb
mov
jae
cli
pusha
sbb
fsubr
push
dec
je
push
mov
into
xlat
mov
in
lock
pop
aad
adc
clc
xchg
outs
ficomp
aas
cmp
stos
sub
fstp
out
inc
pop
and
sub
call
xchg
lds
add
cmp
mov
pop
je
stos
aas
test
ja
fs
cmps
mov
mov
jle
(bad)
retf
pop
out
sub
adc
dec
sbb
popa
stos
pusha
jle
jo
div
loopne
inc
sub
mov
jnp
jl
pop
jnp
int
lahf
cmp
retf
adc
pop
push
jnp
and
jb
(bad)
(bad)
mov
loopne
add
pop
jl
add
adc
cwde
xchg
sti
mov
(bad)
call
and
stos
xor
outs
mov
mov
cmp
and
xchg
dec
add
or
rcr
push
mov
arpl
push
adc
loop
add
mov
xor
add
add
xchg
pop
imul
mov
fstp
cmp
clc
mov
push
push
or
inc
push
(bad)
movs
movs
and
in
mov
lods
mov
mov
jae
adc
mov
mov
mov
nop
or
aaa
adc
mov
cld
pusha
mov
repz
ins
push
cmp
lods
fidiv
push
push
mov
push
mov
dec
and
addr16
fidivr
js
and
call
or
retf
gs
repz
es
fild
xchg
jl
scas
fdiv
cmps
idiv
adc
std
adc
cmp
in
sbb
and
ja
loopne
(bad)
cmp
and
ss
mov
mov
jno
xchg
jmp
fidivr
test
xchg
push
outs
es
lahf
and
clc
cdq
sti
mov
ror
push
xchg
das
pop
sar
xchg
push
shr
lock
adc
sbb
repnz
mov
jbe
adc
addr16
out
loope
mov
xor
ja
and
loopne
and
sbb
push
int3
mov
pop
cmp
cwde
inc
mov
jo
cld
cs
call
jg
pop
pop
retf
inc
sub
fadd
push
inc
in
jl
(bad)
xchg
(bad)
outs
lahf
(bad)
aas
cs
jge
or
or
loop
int3
outs
mov
and
mov
in
mov
adc
test
rcl
mov
add
dec
mov
mov
ret
icebp
add
cmps
and
js
in
cmp
or
xchg
xchg
push
call
aaa
and
pushf
shl
pop
shr
mov
adc
ss
jle
pop
int
fs
int3
dec
pop
cmp
mov
aam
inc
inc
mov
add
push
lods
stos
sub
pusha
dec
js
push
adc
loopne
adc
js
in
lods
cmp
xor
or
pop
arpl
xchg
in
xor
sbb
sub
sbb
ror
fs
ss
inc
sbb
shr
test
aad
arpl
and
mov
(bad)
sahf
movs
mov
lds
or
in
sub
ja
int
jmp
jl
popf
cwde
xor
loope
pop
outs
ins
mov
sbb
sbb
push
dec
fs
(bad)
sub
out
cmp
pop
mov
cwde
mov
add
into
or
or
dec
scas
mov
add
pop
popa
enter
pop
xchg
clc
aam
push
retf
push
dec
sub
in
retf
ja
sar
ds
outs
lods
or
xor
mov
das
inc
cmp
xor
retf
div
cli
mov
cdq
(bad)
stos
cld
xor
mov
aad
sub
and
inc
cmp
stos
in
sub
pop
add
pop
fwait
jo
add
sub
mov
xchg
(bad)
jno
lods
cli
jne
jno
repnz
push
sub
jecxz
xor
imul
fisubr
or
aam
je
mov
ret
in
pop
add
or
dec
mov
mov
outs
cmp
jmp
push
jnp
arpl
pop
(bad)
scas
xor
mov
mov
or
cmp
movs
repnz
nop
stos
pop
enter
mov
jno
in
cmp
sbb
in
sahf
mov
fcom
and
pop
test
xor
shl
and
push
int3
pop
cdq
int
ja
mov
xchg
push
out
outs
mov
stc
test
mov
mov
mov
shr
adc
mov
mov
xor
iret
push
pop
push
jmp
xchg
in
dec
push
cs
inc
aam
ds
test
cmp
ja
push
mov
fidivr
ins
mov
stc
(bad)
adc
inc
inc
jle
cmp
imul
loop
xor
mov
cmp
inc
adc
xchg
shl
adc
pop
inc
(bad)
scas
inc
mov
jecxz
push
push
sub
mov
pushf
ds
fcmovbe
repz
mov
int
inc
xchg
(bad)
xor
lock
popa
cli
xor
mov
inc
or
adc
popf
dec
lods
sbb
es
cld
(bad)
inc
sbb
dec
inc
dec
data16
aas
mov
sub
out
xor
fld
xchg
dec
pop
jns
mov
iret
push
enter
repz
push
mul
mov
adc
stos
fs
pop
out
inc
dec
jmp
rol
sti
xchg
pop
xchg
test
and
push
sub
add
mov
lea
cmp
push
sub
std
movs
daa
lahf
cmp
loop
in
inc
rol
mov
imul
dec
lahf
xor
icebp
xchg
jmp
mov
(bad)
fisttp
sbb
nop
repnz
fst
(bad)
mov
adc
sar
dec
movs
into
mov
js
mov
(bad)
cmp
mov
sbb
cmp
sbb
adc
jmp
fs
and
cmp
outs
int
mov
add
test
in
lock
js
and
in
inc
lods
fimul
gs
push
les
dec
cmps
les
add
addr16
stc
xor
aaa
ja
sub
ins
sbb
call
ins
int3
ror
out
(bad)
cmp
adc
jnp
and
test
aad
loope
jnp
ins
mov
test
xchg
popa
sub
xchg
sub
cli
daa
or
movs
xchg
cdq
push
add
shl
jbe
adc
mov
or
cs
inc
mov
fadd
in
inc
fxtract
xchg
fsub
push
xadd
sub
mov
pop
lahf
pop
lea
jno
adc
leave
cwde
in
mov
pop
pop
enter
sbb
add
mov
jno
lds
mov
cmps
shr
test
xor
test
retf
loop
sub
lods
int
add
sbb
mov
xor
clc
mul
mov
dec
or
popa
mov
and
jge
or
mov
aas
xchg
pop
cli
stos
test
mov
sbb
fwait
enter
call
inc
imul
(bad)
mov
in
jno
out
packssdw
sub
cli
or
ss
sub
dec
loope
hlt
and
push
and
dec
paddd
loope
xchg
cmp
mov
pop
js
(bad)
(bad)
mov
fdivr
mov
loopne
(bad)
fdiv
cwde
jmp
cmp
jns
(bad)
or
out
pop
jmp
cmp
cmps
jae
cmc
push
fisttp
cmc
inc
outs
leave
dec
je
jns
pop
(bad)
addr16
inc
xchg
ror
loope
jmp
loopne
cmp
nop
cwde
stos
repz
jns
xchg
mov
sub
sbb
jp
mov
lods
xchg
(bad)
cmp
push
adc
lock
ret
dec
cld
xor
xchg
sbb
dec
mov
and
pop
out
(bad)
mov
popf
push
cmps
mov
loope
xchg
leave
lds
sbb
mov
push
retf
sub
loop
ror
mov
mov
adc
ret
ficomp
imul
pop
xchg
in
outs
lods
or
movs
jmp
mov
mov
das
mov
cli
hlt
scas
xor
fadd
xchg
xchg
push
int3
fidiv
sub
stc
mov
movs
sti
push
jecxz
xor
test
push
test
mov
clc
icebp
rcl
outs
jl
repz
aam
leave
aam
mov
jo
jecxz
jno
call
mov
cmp
test
ror
ret
movs
test
pop
test
daa
pusha
pop
test
cmps
aaa
and
sbb
mov
mov
mov
std
fmul
scas
inc
or
jge
add
inc
fwait
stc
sbb
js
and
sub
enter
out
imul
pop
cmp
outs
push
mov
push
mov
xchg
and
xchg
jno
inc
cmp
mov
mov
jmp
int
dec
fs
inc
cmps
mov
inc
inc
retf
gs
addr16
xor
loop
shl
push
data16
jne
imul
test
data16
pusha
and
call
cmp
outs
mov
retf
jno
icebp
div
mov
call
cdq
push
addr16
sbb
adc
repnz
xchg
cmp
ss
inc
cli
sbb
mov
lock
or
clc
or
push
lods
and
adc
js
mov
push
jmp
sub
mov
jp
mov
es
ins
and
les
repnz
xlat
out
ret
sti
scas
cmp
stc
push
imul
or
ss
fwait
dec
xchg
sahf
xor
or
push
cmp
add
mov
(bad)
fstp
nop
out
in
mov
cdq
movs
dec
cmps
or
push
sub
arpl
or
iret
nop
push
jmp
inc
or
outs
iret
repnz
jmp
pop
inc
cmp
dec
into
sbb
push
push
imul
inc
adc
(bad)
jns
mov
jne
arpl
xlat
xor
pop
mov
adc
mov
sub
(bad)
pushf
add
shl
sub
cwde
retf
leave
(bad)
jno
mov
dec
mov
call
pop
cdq
mov
jmp
retf
add
ja
cli
push
mov
adc
popf
sbb
test
adc
inc
std
pop
icebp
jge
cmp
aad
jno
pop
sahf
fs
stc
gs
cmc
setbe
ins
(bad)
dec
cmp
pop
stos
dec
xor
xor
pop
(bad)
js
xlat
in
je
stos
mov
dec
or
clc
push
nop
je
adc
and
xchg
xchg
xor
mov
and
jbe
loopne
inc
cmp
inc
push
outs
mov
dec
je
in
add
imul
sbb
push
mov
jmp
or
aas
xchg
jle
es
cmps
push
inc
push
loopne
das
fwait
add
jb
ret
mov
ins
stc
or
or
sub
push
or
sbb
push
(bad)
mov
int
in
mov
enter
inc
iret
fstp
jp
lock
paddb
iret
not
retf
js
jns
add
mov
cmc
xor
or
jno
xor
push
add
push
xor
push
add
in
icebp
aam
retf
mov
adc
jp
(bad)
imul
xor
or
out
pop
or
jl
xchg
div
mov
sbb
inc
sbb
and
inc
loop
sbb
inc
mov
idiv
sub
ret
lods
sbb
pop
adc
mov
xlat
repz
xchg
sar
scas
movs
scas
jae
aas
add
aaa
cli
and
mov
dec
repz
and
add
ds
mov
lods
jl
or
das
in
mov
je
jle
mov
push
dec
adc
push
or
jmp
jno
add
push
adc
cmp
rcl
mov
adc
in
imul
inc
adc
(bad)
sub
and
mov
int
cmps
popa
in
cmp
inc
cmps
add
push
jp
imul
sahf
fimul
sub
push
and
sub
mov
or
into
mov
mov
mov
mov
sub
add
(bad)
xchg
stc
pop
lods
inc
mov
aad
retf
jne
sub
icebp
add
dec
sub
sahf
(bad)
and
cvtdq2ps
lods
iret
retf
mov
push
cli
cli
adc
ror
call
mov
loope
dec
leave
popa
xchg
mov
or
(bad)
cmp
fist
push
lea
mov
leave
les
imul
push
adc
add
movs
out
pop
push
mov
(bad)
movs
push
mov
fst
pop
or
ss
add
not
cmps
test
fldenv
pop
sub
or
int
repnz
and
repz
dec
je
inc
aas
pop
pop
fdiv
enter
ins
add
cmp
or
outs
xor
lock
mov
jecxz
aaa
push
mov
idiv
sub
adc
ja
push
inc
jb
or
call
sar
loop
push
mov
fcomi
xchg
fist
popa
rcr
push
xor
stos
ret
cmp
cmps
stos
sbb
cmp
mov
and
hlt
mov
xor
mov
aaa
mov
call
inc
sub
into
repnz
movs
(bad)
pmulhuw
inc
popf
aad
jnp
push
lea
test
push
adc
call
mov
les
cmp
add
in
add
sub
pop
lock
outs
aam
dec
ins
ja
ins
xchg
adc
bound
dec
sbb
fwait
mov
scas
mov
mov
cmp
push
mov
(bad)
movs
out
pop
pop
push
and
push
inc
mov
xor
dec
or
xchg
fwait
cmc
dec
imul
aam
sti
push
jb
in
lock
std
mov
div
jmp
jnp
je
popa
sub
pop
aad
mov
xchg
cmp
add
out
xchg
adc
sbb
pushf
push
arpl
jae
mov
aas
push
jnp
cmp
cmp
fadd
add
mov
outs
adc
push
pop
repz
in
int
mov
stos
dec
add
sub
fnsave
repz
movs
call
pop
jmp
arpl
ins
push
or
int
test
push
out
and
sub
mov
jns
(bad)
push
adc
mov
cmps
mov
pop
pop
and
sbb
shl
adc
xor
(bad)
cmp
fiadd
arpl
cmp
mov
stc
cli
mov
push
sti
iret
aas
test
ins
in
sub
push
sub
call
mov
mov
mov
imul
stos
mov
inc
ja
xchg
das
adc
ins
rcl
sbb
aaa
nop
mov
jmp
xchg
push
ins
fstp
push
andnps
and
daa
sbb
jmp
dec
adc
fsub
jb
cmp
imul
dec
fistp
out
inc
mov
pop
imul
mov
test
pusha
jmp
shr
sub
or
lss
lahf
in
jp
cmps
mov
inc
stos
cli
pusha
cmp
cmp
sbb
sbb
dec
in
push
shl
ja
leave
dec
push
(bad)
push
xchg
or
xor
pop
dec
into
xchg
xchg
sub
stc
mov
pop
mov
adc
pop
and
xor
outs
and
cmp
xor
adc
inc
xchg
or
jg
dec
js
push
in
add
rol
jb
inc
and
sbb
inc
mov
push
push
cmp
jl
aam
cmp
jnp
test
out
call
xchg
sbb
pop
sub
mov
push
xor
push
push
bound
ret
cmp
push
push
mov
inc
push
imul
sbb
xchg
es
lock
das
test
jns
sar
data16
loop
push
movs
jmp
stos
aas
push
in
repnz
xor
pop
pop
mov
gs
out
add
jns
imul
jns
cmp
and
fdiv
mov
cmps
ficom
shr
xor
mov
sub
hlt
sbb
ror
aam
push
imul
aaa
or
mov
and
sbb
add
cs
jb
push
sbb
push
mov
lods
sbb
pop
enter
and
cmp
add
imul
jecxz
scas
mov
xchg
push
xchg
or
jmp
or
cmp
inc
push
mov
sub
jno
pusha
addr16
add
cwde
out
cmc
and
ss
jle
push
mov
mov
xor
stos
xor
ficomp
inc
bound
retf
ss
hlt
adc
mov
cmp
xor
mov
push
sub
pop
sbb
sti
cmp
loopne
inc
jge
call
pushf
mov
mov
xchg
or
jle
pop
xor
mov
xchg
pop
movs
popf
add
push
mov
push
stos
mov
xor
sbb
adc
pop
ret
push
repz
(bad)
retf
sti
shl
in
fnsave
xchg
imul
pushf
cmp
sbb
mov
jmp
pop
test
adc
dec
jle
nop
jnp
sahf
jb
test
test
imul
push
pusha
(bad)
call
fnstcw
movs
call
inc
rcr
pop
xor
or
dec
jmp
xor
stc
loop
add
pop
cwde
and
jmp
inc
imul
pusha
pop
retf
xchg
stc
cli
and
or
sbb
shl
xchg
mov
inc
mov
jno
call
lods
and
aas
pusha
out
or
das
cmps
cmp
push
push
adc
into
mov
test
cmp
sahf
push
jle
and
ror
ins
mov
ds
adc
daa
pop
fwait
pop
sbb
mov
mov
push
addr16
adc
inc
add
rcl
mov
stc
pushf
xor
dec
dec
add
add
in
push
shl
ins
dec
sti
push
inc
and
mov
fwait
or
inc
(bad)
ja
or
push
sbb
rcr
ins
mov
mov
outs
xor
sbb
fwait
cmp
ds
and
adc
test
fs
cmp
loop
cmp
dec
jle
int
js
jp
das
fwait
xchg
add
cmp
icebp
xchg
ret
repnz
popf
inc
push
into
retf
inc
mov
aaa
mov
jmp
add
lock
or
mov
mov
pop
mov
jmp
push
ret
sbb
jmp
xor
mov
xor
cmps
(bad)
cmp
or
push
sub
(bad)
sub
int
xlat
movs
mov
adc
or
and
lock
push
mov
ss
mov
xchg
xchg
push
push
leave
and
js
dec
bound
out
jnp
fdiv
dec
mov
mov
jae
daa
inc
xabort
sbb
jp
xchg
lods
call
aad
pop
xchg
test
cmp
fisubr
cmps
es
pop
repz
push
jb
mov
and
jae
adc
cmp
mov
xor
movs
(bad)
cmp
mov
cmp
jecxz
test
adc
mov
retf
add
adc
ins
mov
movs
pusha
inc
or
scas
popa
ja
ins
xchg
dec
jne
jge
pop
mov
fld
push
dec
dec
pop
adc
jmp
mov
fs
repz
ret
add
or
adc
jo
scas
test
mov
lods
mov
add
dec
inc
inc
mov
inc
push
das
popa
cli
ret
bound
lahf
cs
dec
nop
push
mov
mov
ds
xchg
jg
imul
out
add
ja
push
jns
not
(bad)
adc
add
fdivp
imul
push
mov
fs
or
out
jge
mov
cmp
jg
gs
fistp
jmp
and
sti
pop
in
lds
and
xchg
in
cmp
jno
push
mov
pushf
icebp
sub
cmp
xchg
push
dec
fnsave
dec
sbb
cs
pop
jns
and
mov
add
rcl
or
xchg
sub
clc
repnz
and
push
and
mov
int3
pop
es
cmc
loop
mov
cmp
push
pop
cmp
pop
push
and
mov
sbb
dec
repnz
or
out
int3
fwait
lods
mov
movs
adc
cmp
js
or
arpl
clc
(bad)
mov
mov
and
mov
popa
jae
or
mov
ror
fst
mov
sub
mov
mov
cli
cmps
or
data16
(bad)
cmp
scas
inc
js
adc
loop
fld
stos
loop
mov
jns
push
xor
cmp
mov
bound
stos
pop
call
jb
repz
dec
aam
inc
xor
jb
sbb
mov
stc
push
(bad)
xor
sub
ret
xchg
mov
fdiv
les
mov
jb
gs
inc
xor
shl
outs
xchg
cmp
aad
test
lea
cmp
xor
outs
and
push
xchg
sbb
adc
pop
mov
xchg
pop
push
(bad)
jl
es
pop
cmc
cli
(bad)
push
pop
inc
in
push
sbb
cwde
jl
and
ins
out
sahf
jle
jbe
xchg
or
sbb
outs
outs
stos
sbb
aam
nop
loopne
rcr
nop
aam
adc
shr
fst
inc
je
mov
fsub
out
stos
jnp
jge
mov
psllq
mov
fucom
mov
mov
fbstp
les
mov
test
and
shr
mov
pushf
hlt
ins
out
out
test
mov
and
out
repz
and
sahf
xor
jecxz
mov
sub
xchg
mov
mov
icebp
and
jmp
jae
inc
clc
retf
push
xchg
push
mov
imul
shl
out
outs
mov
mov
and
sub
cmp
fisubr
(bad)
push
(bad)
mov
push
adc
xchg
cdq
jmp
xlat
pop
and
add
xchg
stos
push
push
push
sub
dec
inc
or
dec
inc
push
mov
add
test
popf
out
xor
enter
addr16
sub
repz
push
adc
adc
mov
add
cmp
mov
xchg
jo
dec
pop
or
xor
es
iret
cld
push
mov
retf
cwde
or
or
mov
adc
pop
push
sahf
mov
xchg
fwait
addr16
sbb
jmp
push
pop
mov
push
mov
mov
inc
xor
imul
xchg
iret
pop
dec
and
out
test
inc
pop
jmp
(bad)
cwde
jle
jae
retf
jge
ret
pop
pop
cmc
xchg
cld
test
scas
jp
call
inc
adc
pop
push
shr
xchg
sub
mov
fstp
dec
enter
xor
push
mov
pop
in
mov
ret
jp
jp
and
int
adc
cwde
pop
fsubr
push
imul
push
sbb
lea
imul
jbe
and
(bad)
mov
(bad)
stos
inc
fs
dec
and
ins
(bad)
adc
and
xor
fcomp
scas
push
inc
xlat
or
jg
sbb
pop
cmp
sbb
adc
push
inc
pop
cmc
fwait
loope
pusha
xlat
fisub
or
mov
imul
ret
fisub
pop
retf
mov
jecxz
mov
cmp
xchg
inc
inc
mov
mov
retf
lods
mov
sbb
or
mov
fsub
or
or
mov
mov
sbb
hlt
and
fwait
push
fs
div
cld
loope
or
test
cwde
sbb
dec
add
cmp
cmp
jnp
movs
loop
sbb
mov
xchg
mov
das
mov
out
shl
loop
ds
fimul
xchg
std
imul
jb
hlt
dec
outs
mov
add
into
es
sar
popa
adc
ins
sub
jae
sub
push
pop
adc
jo
xor
jmp
lock
out
push
add
(bad)
(bad)
xlat
xor
lods
daa
les
jmp
adc
lahf
xor
add
sbb
mov
mov
aas
cmp
push
ja
pop
adc
dec
popa
stos
outs
push
movs
cmp
movs
out
out
sbb
cmps
mov
stc
and
test
retf
xor
pop
adc
xchg
and
in
jnp
add
add
mov
data16
add
push
loopne
leave
jmp
and
xchg
and
mov
adc
add
aad
or
loopne
sbb
clc
mov
mov
pop
call
sbb
gs
in
lahf
lods
outs
cmps
xchg
push
es
daa
mov
jae
ins
adc
ins
pop
mov
inc
jns
jl
add
jbe
(bad)
out
addr16
cmps
mov
outs
jle
pop
in
push
and
enter
add
ret
mov
call
dec
jae
xchg
ror
mov
jnp
test
add
xchg
shl
push
cmp
les
jne
mov
aas
push
call
ins
retfw
inc
(bad)
retf
mov
out
outs
or
test
pop
jl
inc
neg
xchg
inc
and
je
imul
ficomp
pop
push
xchg
aam
jns
daa
mov
outs
icebp
add
cwde
mov
cmps
sbb
push
jmp
jmp
dec
arpl
cdq
clc
(bad)
sahf
dec
sbb
inc
rol
repz
sbb
mov
push
out
add
stc
into
mov
rcl
sub
sar
iret
push
shl
or
inc
pop
imul
pop
imul
pop
and
pop
xchg
repnz
rcl
jmp
xchg
sbb
cdq
stos
in
fldl2t
scas
push
movs
std
mov
iret
pop
ret
jno
out
das
in
adc
loope
shl
cwde
jmp
fbld
push
leave
clc
xchg
pop
imul
imul
xchg
imul
rcl
fiadd
fst
movq
xchg
mov
mov
cmc
inc
xor
mov
inc
mov
retf
sbb
call
test
pop
or
sbb
ret
sub
out
sub
lods
jp
jmp
xchg
mov
mov
inc
pop
mov
in
mov
fstp
outs
xor
dec
push
lock
xor
repnz
xor
sbb
xchg
shl
jnp
mov
(bad)
std
aas
add
mov
fld
mov
jb
out
push
xor
mov
popa
fwait
jle
ret
and
das
add
jns
aam
cmc
test
jns
arpl
cmp
pushf
inc
int
inc
add
(bad)
out
es
mov
and
pop
js
lock
and
pop
or
lods
xor
push
les
mov
or
ds
js
cmp
cmps
push
retw
xor
repz
shl
sbb
push
or
loop
mov
mov
sub
adc
mov
pop
jbe
lea
retf
xchg
lods
pop
rol
mov
cs
shl
add
cld
add
adc
mov
push
lock
dec
data16
lds
std
popf
cmc
out
repnz
inc
clc
sub
repnz
lock
in
into
add
out
fwait
call
ror
mov
bound
cmps
fstp
adc
adc
dec
test
xchg
loopne
popf
xchg
pop
out
inc
pop
mov
sbb
jp
sub
test
xchg
dec
inc
in
cmps
adc
mov
fmul
push
sub
sbb
mov
mov
jle
mov
scas
enter
or
outs
cwde
sti
fs
fild
clc
dec
out
arpl
pop
adc
xchg
pcmpgtw
sub
movs
inc
mov
push
jns
test
cwde
jl
inc
adc
test
adc
lods
out
pop
mov
popf
daa
cwde
shr
out
mov
out
or
push
ss
and
add
jmp
je
add
outs
xchg
dec
dec
into
in
or
stc
jo
test
sbb
sub
push
(bad)
and
xchg
mov
fldcw
mov
stc
inc
jb
scas
adc
test
fdivr
sub
and
jecxz
inc
adc
adc
xchg
add
xor
cli
ss
push
mov
add
shl
adc
in
dec
cwde
mov
sub
retf
pop
push
retf
push
jl
ret
sub
add
call
push
inc
hlt
push
imul
out
mov
mov
push
add
xchg
adc
push
cmp
adc
cmp
lods
scas
fcomp
sti
xchg
and
std
into
sbb
or
push
xchg
shr
cld
and
and
adc
push
aas
gs
test
es
add
in
mov
mov
xchg
jle
fdiv
mov
jbe
(bad)
(bad)
lahf
xchg
pop
add
add
rol
(bad)
bound
pop
pop
mov
xchg
dec
inc
sub
sub
shl
xchg
xchg
clc
mov
pop
jmp
out
lock
inc
xor
dec
mov
push
sub
jg
shr
fld
aaa
mov
and
std
mov
pop
lods
cld
push
xchg
cmps
cdq
outs
jmp
dec
(bad)
into
mov
push
shl
mov
xlat
loopne
shl
and
sub
addr16
jmp
pop
push
daa
iret
popf
pandn
inc
sbb
jge
xor
add
mov
lea
es
jmp
and
inc
pop
inc
ins
in
fnstsw
das
stc
sub
into
inc
test
mov
retf
call
sahf
sub
imul
pop
mov
mov
imul
lock
bound
adc
test
and
retf
in
sub
aam
sub
shr
add
lea
xchg
hlt
iret
fcmovnb
in
leave
int
mov
out
into
mov
lds
xchg
pop
or
rol
mov
fidiv
inc
mov
adc
pop
test
lods
mov
dec
repz
dec
call
cwde
aad
cmp
gs
ret
cmp
sub
xor
sbb
mov
xchg
cs
lea
mov
jp
xchg
or
cli
or
stos
fisubr
lods
fstp
xchg
xor
add
sbb
inc
in
jb
dec
retf
sbb
mov
inc
enter
sbb
add
mov
aam
mov
outs
stos
xor
jle
adc
and
popf
les
loop
cmps
mov
pop
(bad)
cmp
cmp
mov
imul
les
sbb
dec
loopne
inc
scas
dec
mov
pop
fadd
jg
dec
loope
sub
push
shr
pop
pop
sbb
scas
aaa
cmp
popa
iret
fisubr
cmp
int
dec
add
bound
dec
(bad)
mov
repz
cmps
imul
xchg
loope
mov
xchg
dec
and
test
xchg
(bad)
test
mov
jge
(bad)
mov
int
cmp
ss
push
test
adc
loop
jno
mov
rol
mov
mov
xchg
sbb
test
test
loope
push
into
jmp
inc
cmp
xchg
push
cli
cmps
in
test
jne
mov
or
std
mov
push
jmp
repz
mov
dec
fsub
jmp
les
enter
out
loope
mov
out
sar
mov
xchg
dec
cs
iret
adc
shr
jae
jae
scas
(bad)
es
xchg
jmp
icebp
icebp
hlt
iret
sbb
push
push
mov
inc
and
retf
xchg
push
and
xchg
arpl
cmp
ror
lahf
push
push
adc
pop
aam
mov
sbb
push
sub
mov
or
add
xchg
sub
jp
xlat
cmp
sub
arpl
xchg
test
add
sub
cdq
daa
lock
js
mov
call
push
mov
dec
and
mov
into
mov
cld
xchg
nop
es
mov
xor
ins
push
cld
or
push
out
cmp
jne
sub
push
imul
aad
add
xchg
or
or
jmp
inc
fsqrt
data16
or
sub
cmc
pop
jns
(bad)
retf
cli
adc
or
pop
push
pop
dec
test
cmps
pop
cmp
imul
xchg
stos
mov
mov
je
sub
and
(bad)
jmp
add
rcr
dec
mov
leave
sbb
inc
cli
cmp
stos
in
push
test
adc
cwde
fimul
movs
fwait
icebp
fist
dec
cdq
je
mov
pop
inc
loopne
shl
xchg
jno
lahf
leave
add
pop
es
mov
rcl
or
fnstsw
pop
dec
nop
and
dec
call
sbb
inc
movs
mov
sub
mov
sbb
adc
pop
push
xchg
es
test
sub
adc
outs
(bad)
sub
inc
aas
addr16
add
and
movs
mov
mov
call
sub
add
mov
mov
in
pop
mov
sar
and
fs
and
ja
jbe
jmp
jo
cdq
outs
aaa
repz
aam
cmp
test
cwde
in
lock
ja
lds
and
pop
push
jl
sub
cmps
jle
push
push
pushf
hlt
xchg
xchg
fsubr
push
mov
inc
icebp
cmps
dec
mov
inc
sbb
or
je
fiadd
cmp
dec
aaa
in
xor
pop
or
jl
xchg
pop
iret
xchg
shl
int
push
enter
jae
lds
push
jo
mov
push
sub
sbb
sar
aaa
les
inc
pusha
jno
inc
dec
(bad)
(bad)
mov
pop
pop
inc
(bad)
neg
(bad)
dec
mov
mov
mov
push
out
in
xchg
inc
fld
lods
adc
inc
stos
xor
mov
dec
push
adc
movs
ds
fisub
scas
(bad)
repnz
ret
dec
lock
mov
add
mov
mov
imul
jb
xchg
sbb
lods
sub
cmc
and
xor
inc
cmp
(bad)
sar
outs
outs
adc
mov
dec
or
push
add
mov
and
fwait
mov
aad
div
xor
or
jl
and
and
push
jae
xchg
(bad)
push
sub
xchg
nop
mov
mov
sbb
mov
push
xchg
repnz
pop
mul
push
iret
xchg
dec
xor
and
repz
mov
jle
aad
stos
sub
cmc
cld
add
call
loopne
jno
cwde
es
mov
aad
cmp
inc
push
pop
mov
sbb
lea
pusha
mov
dec
call
pop
stos
adc
dec
mov
mov
xor
cmc
ins
pop
fdiv
xchg
mov
and
fisub
xchg
jno
test
ror
mov
dec
aas
mov
inc
shl
xchg
sub
push
je
mov
nop
arpl
jns
mov
or
call
jmp
test
xor
mov
or
pop
mov
and
xchg
and
mov
pop
and
int
mov
pop
out
pop
lods
imul
into
mov
loope
pop
(bad)
mov
lahf
add
pop
shr
jecxz
ss
ficom
add
in
repnz
cmp
fld
inc
sub
iret
add
adc
fnsave
rcl
sub
call
pop
dec
pop
jecxz
dec
leave
pop
in
jb
iret
icebp
jmp
push
lds
push
mov
ds
ret
movs
push
hlt
cmc
scas
retf
sbb
cwde
jg
repnz
call
mov
dec
test
stos
dec
push
mov
dec
out
test
fucomp
jge
mov
sub
popf
in
fcmovnu
retf
push
xor
inc
xor
popa
test
inc
(bad)
inc
jns
popf
in
xchg
sub
aaa
cwde
pop
adc
imul
inc
jnp
ror
xlat
aam
sub
pop
jns
sbb
cmp
scas
and
jge
mov
es
mov
xor
cli
data16
inc
jecxz
mov
mov
jmp
ds
loopne
push
cmps
fdivr
pop
mov
test
loop
in
pop
jbe
cmp
leave
fsub
fs
dec
xchg
cmp
or
sbb
pop
sbb
dec
add
pop
push
and
in
push
(bad)
repnz
pop
adc
in
jl
out
jge
adc
ins
mov
mov
cmc
xchg
imul
inc
cmps
rcl
ret
ret
ret
je
movs
mov
cld
hlt
in
and
dec
pop
retf
(bad)
nop
cmc
addr16
das
fcmovu
loope
mov
dec
hlt
loope
fisubr
retf
(bad)
cld
fadd
or
pop
inc
jb
lea
sbb
cs
push
jecxz
mov
and
sub
mov
mov
jns
stos
(bad)
adc
loop
jg
mov
or
fs
(bad)
loop
leave
aaa
rcr
inc
inc
(bad)
mov
jo
cmps
add
sbb
aas
mov
push
fnstsw
add
or
mov
cmc
xor
push
mov
test
add
xchg
mul
les
mov
cmp
aaa
mov
in
jne
jle
mov
out
in
loop
fwait
cmp
add
inc
jo
xchg
sti
dec
fstp
mov
retf
fdiv
out
mov
mov
pop
shl
pop
fistp
movs
popa
and
push
dec
sbb
cmp
or
cmp
xor
fisub
es
jno
loop
bound
lea
mov
xchg
jle
aaa
test
gs
sbb
clc
and
cli
pop
jbe
adc
sbb
xchg
call
imul
pop
clc
jae
mov
mov
push
adc
sbb
pop
sar
or
mov
inc
test
pushf
xor
xchg
mov
gs
adc
stos
inc
retf
mov
xchg
addr16
xor
mov
dec
data16
inc
jmp
xor
repnz
int
jne
push
jnp
(bad)
xor
aam
repnz
mov
test
in
or
les
pop
jns
sti
scas
and
push
xor
mov
lahf
sbb
hlt
jbe
or
mov
cmp
rol
jg
imul
sub
pop
push
dec
shr
cmps
aad
inc
mov
mov
mov
and
and
push
(bad)
ss
shl
push
lock
mov
iret
cmps
punpcklwd
push
in
add
adc
hlt
mov
add
jl
pop
lods
std
std
out
xchg
pop
cmc
shl
lock
jne
loopne
out
xor
push
or
push
adc
dec
aad
test
or
jb
lods
mov
jp
sub
xchg
ror
jp
adc
mov
or
fldenv
movs
fmul
push
frstor
cmp
xchg
mov
pop
retf
and
cmp
dec
inc
adc
stos
sub
(bad)
xchg
jnp
aaa
xchg
mov
push
push
inc
fstp
mov
in
js
pop
mov
in
mov
retf
rcr
inc
inc
sahf
lds
int
push
pop
inc
movs
and
bound
sub
mov
sbb
push
movs
pop
fwait
mov
push
shl
repz
out
cmps
xchg
xchg
aas
xor
mov
push
jecxz
mov
imul
mov
shl
inc
popa
cmps
fwait
push
(bad)
pop
jne
inc
or
cmp
je
es
(bad)
or
push
mov
jns
jl
aad
das
pop
push
sbb
cli
mov
mov
ins
jle
hlt
outs
shr
inc
mov
push
das
cdq
dec
xchg
iret
jmp
sbb
inc
jno
out
cmps
and
sahf
fistp
and
add
jecxz
mov
xor
repz
xchg
stos
in
pop
jae
push
add
fsubp
adc
sti
(bad)
das
xlat
xchg
outs
jnp
and
xor
leave
cmp
mov
test
jp
add
lahf
inc
pop
push
fcmovnu
aas
mov
punpcklwd
and
stos
dec
cmp
mov
mul
je
and
adc
sbb
pushf
fcom
bnd
in
jl
jns
inc
sahf
ins
mov
jecxz
add
pop
nop
push
and
imul
mov
lea
xchg
jle
cli
and
rcr
ins
cmp
shr
xchg
dec
cmp
dec
inc
sbb
xchg
out
mov
or
in
or
loopne
jg
sbb
bound
rol
lahf
mov
push
cwde
adc
pop
pop
repz
push
pop
inc
pop
sbb
test
sahf
mov
fcom
add
sbb
xor
cmp
inc
inc
inc
sbb
dec
leave
mov
xchg
int3
adc
call
mov
(bad)
fidivr
inc
pop
aam
les
repnz
dec
test
ret
fsub
je
mov
adc
test
in
ja
sbb
clc
mov
pop
xlat
gs
mov
cdq
outs
pop
push
mov
pop
sub
rol
(bad)
add
adc
mov
cmp
int3
retf
mov
mov
inc
mov
aas
add
mov
mov
ret
in
pop
out
push
(bad)
sbb
call
mov
iret
push
outs
call
and
movs
fiadd
(bad)
ffreep
shl
adc
(bad)
dec
mov
aaa
push
mov
push
adc
out
xor
mov
or
das
jp
test
dec
and
in
pop
rol
sub
sar
dec
inc
imul
mov
fwait
movs
jmp
fs
cld
jno
dec
push
movups
mov
mov
cwde
and
xchg
cmps
inc
push
icebp
loopne
cwde
push
arpl
aad
cs
fsub
add
sar
sub
mov
mov
adc
and
and
rcl
add
popf
(bad)
xlat
push
cmps
(bad)
leave
mov
hlt
gs
mov
cmp
cmp
pop
push
jns
or
fsubr
(bad)
jmp
inc
or
push
jb
add
shr
jg
pop
call
add
mov
fwait
pop
aas
xor
adc
stos
idiv
mov
xchg
inc
leave
sahf
lods
jl
push
test
xor
mov
adc
in
test
mov
push
int
mov
xchg
inc
jns
sbb
mov
cmp
adc
sub
xchg
cmp
inc
test
ss
mov
lock
mov
cmp
dec
dec
leave
xor
test
jg
pop
xchg
repnz
sbb
fsubrp
add
lock
add
stos
call
jle
retf
sbb
ss
fisttp
stos
dec
mov
xor
outs
ins
xchg
sbb
daa
mov
jne
jp
or
pushf
mov
fwait
es
and
add
enter
out
imul
push
pop
mov
xchg
push
sbb
jp
and
ja
and
xor
shl
xchg
push
(bad)
mov
xor
fisub
in
(bad)
stc
xchg
in
xor
cmp
xor
shr
or
push
loopne
lock
fwait
mov
ja
popa
adc
xor
lds
das
call
mov
dec
dec
sbb
retf
xor
int
lods
imul
cmp
sbb
cmp
add
jbe
in
imul
std
xchg
sbb
rcl
rol
in
pop
mov
ins
jp
fwait
xor
out
sub
mov
lea
stc
es
into
adc
push
mov
mov
fdivr
pusha
sub
jo
paddsw
lods
push
mov
xor
ret
sbb
push
ds
ds
push
lock
stc
jg
xchg
sahf
and
fsubr
or
jge
clc
movs
mov
adc
xchg
jns
aas
arpl
(bad)
iret
ret
(bad)
adc
(bad)
es
mov
mov
dec
push
and
leave
add
cld
inc
ss
add
xchg
jns
or
push
xor
adc
inc
icebp
pop
gs
loop
aam
ja
aad
stos
fs
mov
xor
and
fldlg2
jmp
std
push
stos
cmp
jae
lahf
loop
(bad)
imul
sbb
sahf
adc
stos
in
ret
push
dec
hlt
push
out
add
inc
(bad)
cwde
rol
shl
addr16
stc
bound
pusha
leave
imul
mov
(bad)
addr16
fnstcw
pop
jns
pop
lahf
sub
stos
ins
cmps
mov
mov
sub
inc
or
dec
rcr
dec
push
(bad)
nop
xchg
pop
and
add
shl
cs
jnp
sub
cmp
je
push
ins
ror
xor
shr
sbb
sbb
cld
fwait
out
mov
and
shl
popa
fnsave
jecxz
or
mov
nop
xor
out
mov
inc
xchg
ins
push
sbb
lock
pop
xchg
movs
movs
mov
in
repz
sbb
ret
sub
adc
or
xor
data16
push
push
fwait
sti
adc
retf
outs
jns
arpl
fstp
sub
in
(bad)
adc
or
mov
fmul
aam
jbe
jp
outs
sbb
jnp
sub
sub
iret
mov
scas
xor
dec
ficom
pextrw
jp
pusha
mov
mov
mov
pop
adc
lea
clc
dec
xchg
ins
cmp
neg
jns
pushf
sbb
xchg
push
mov
dec
sbb
mov
call
cmp
call
retf
sbb
cmp
inc
call
test
and
fidivr
fild
ins
push
xchg
outs
sub
stos
jnp
ds
popa
dec
sub
mov
jne
xchg
ret
rcr
jecxz
imul
xor
add
ds
sbb
add
mov
sbb
addr16
mov
jg
pusha
sub
adc
mov
add
sub
jbe
sbb
push
sub
or
stos
sbb
cmp
and
push
call
in
(bad)
mov
test
cmp
js
add
mov
mov
jo
adc
scas
xor
jle
dec
leave
inc
mov
movs
push
scas
mov
ret
les
stos
jbe
mov
pop
ja
mov
xchg
adc
mov
iret
jne
daa
sbb
mov
(bad)
inc
mov
gs
mov
cmc
lods
cmp
jae
out
ret
out
dec
call
push
fneni(8087
or
iret
inc
xchg
faddp
shr
in
inc
std
mov
xor
adc
mov
mov
stos
es
xchg
cmp
or
fiadd
sub
xlat
add
push
dec
iret
xchg
fs
daa
shl
ret
mov
iret
fbstp
push
inc
inc
xchg
jno
gs
inc
test
or
push
pop
or
cmp
or
and
mov
jmp
pop
clc
and
xor
lahf
jb
pushf
mov
mov
adc
out
les
jmp
xchg
lds
loope
sbb
ror
sbb
icebp
scas
mov
nop
xchg
mov
mov
lahf
sbb
enter
xchg
mov
clc
or
and
cmp
inc
dec
sub
and
inc
pop
rcl
retf
idiv
fsub
mov
ror
shr
mov
fsub
mov
test
and
xor
mov
out
cld
cs
call
mov
cld
push
ror
lds
xor
loop
dec
scas
and
fmul
es
retf
jo
es
push
pop
xchg
div
stc
adc
sub
jmp
mov
popa
jg
dec
int
cdq
fwait
and
shl
dec
inc
cwde
scas
retf
sub
xor
xor
scas
lds
sbb
adc
xchg
mov
sub
cdq
dec
inc
push
pop
dec
sahf
inc
push
retf
popa
mov
mov
sahf
and
shr
out
push
mov
cmps
loopne
adc
and
jp
jp
fs
xor
mov
stos
jb
xchg
jbe
(bad)
out
ja
cmp
test
call
xchg
mov
push
arpl
sub
leave
push
pop
or
mov
rol
mov
ror
push
jo
fs
int
cdq
mov
xchg
pop
or
lods
dec
mov
mov
movs
jg
inc
xor
add
mov
loopne
and
out
sub
dec
sub
ds
ins
loopne
mov
adc
inc
push
fcomip
and
hlt
mov
das
push
lds
pop
(bad)
clc
imul
call
imul
daa
mov
adc
sbb
in
popw
and
lods
mov
aad
or
sub
sub
inc
(bad)
cli
sub
(bad)
pusha
hlt
mul
push
test
pop
mov
jae
mov
in
iret
pushf
lea
sbb
jae
les
jecxz
xchg
aas
pop
movs
pusha
test
cmps
leave
sbb
pop
mov
push
xchg
cwde
and
jo
and
stc
leave
test
xor
cmp
fcom
es
and
xor
or
mov
jae
ret
nop
outs
retf
shl
mov
test
or
or
sbb
inc
int3
xchg
adc
test
and
mov
mov
mov
adc
jg
jg
daa
test
fisttp
sahf
sbb
mov
push
sbb
mov
jne
bound
test
mov
repnz
les
push
out
and
mov
stos
push
pop
mov
push
daa
imul
popf
cmps
js
push
xor
mov
mov
mov
aaa
or
xchg
fs
bound
outs
xchg
mov
sub
ret
mov
sti
ins
jbe
dec
lods
jge
js
rcl
rcl
inc
not
sti
jne
xchg
xchg
and
inc
fnstcw
ins
push
popa
mov
imul
ret
les
fadd
in
imul
pop
ror
mov
add
loope
cmp
lock
and
in
(bad)
mov
cmp
lahf
daa
aaa
inc
(bad)
adc
mov
(bad)
push
popa
cmp
aad
sbb
pusha
sbb
sub
fucom
jne
outs
and
jmp
leave
mov
fcom
ins
mov
loope
rcr
enter
adc
inc
jo
popa
icebp
mov
ficomp
sti
arpl
(bad)
daa
ror
in
push
mov
cmp
mov
adc
mov
bound
push
fidivr
in
mov
fadd
aas
add
addr16
ins
cmp
mov
push
cmp
jp
out
out
icebp
mov
lods
mov
sub
scas
call
or
je
je
push
in
ret
aaa
pop
pop
mul
jb
sbb
ror
mov
or
xor
bound
daa
enter
icebp
sub
es
xchg
push
outs
inc
adc
jmp
nop
fiadd
fcom
or
pop
pop
mov
or
xor
xor
cmp
lods
popa
jmp
jecxz
fst
inc
lock
dec
pop
das
aas
jmp
ror
push
xor
jne
mov
push
adc
(bad)
into
add
dec
fmul
and
dec
(bad)
ins
rcl
pop
dec
adc
xor
cmp
sub
mov
hlt
or
mov
and
lea
call
leave
pop
dec
aam
xor
ins
pop
add
inc
xchg
adc
sar
dec
or
sar
repnz
or
(bad)
movs
jl
(bad)
stos
xchg
add
xor
shr
jle
(bad)
(bad)
xor
ret
mov
aam
add
mov
sub
adc
sub
cmps
loopne
xor
std
sbb
push
cwde
xchg
fs
jne
sub
inc
aaa
(bad)
sbb
sbb
xchg
sahf
push
push
lea
cmp
aas
fsub
leave
arpl
adc
push
loop
hlt
pushf
retf
inc
mov
loop
enter
call
movs
shl
out
out
nop
mov
jecxz
out
fisttp
mov
loopne
jmp
xchg
add
aad
int
leave
pop
out
sbb
mov
sub
ja
int
out
cmp
jnp
sub
cld
jecxz
and
mov
dec
mov
sbb
mov
xchg
push
arpl
push
call
mov
out
clc
add
adc
and
sbb
std
loop
mov
push
icebp
repz
mov
mov
in
pusha
pop
(bad)
stc
jbe
jecxz
pushf
dec
mov
cmp
mov
call
push
add
arpl
xor
push
cmp
sti
dec
dec
push
retf
fwait
and
dec
cwde
fimul
addr16
xor
push
es
scas
sub
jmp
in
pop
retf
xchg
leave
xlat
(bad)
sbb
mov
cmps
int3
dec
and
fwait
add
and
mov
setl
jnp
shl
pop
cwde
ret
and
cdq
add
add
retf
scas
pop
xor
idiv
mov
pushf
icebp
dec
xor
in
jl
test
dec
jb
sbb
pop
loopne
or
sti
test
push
out
test
add
mov
mov
push
movs
hlt
xchg
cmps
shr
inc
inc
adc
stos
mov
mov
adc
pop
mov
lea
sub
xchg
dec
adc
jecxz
aaa
out
fisubr
cmp
or
mov
punpckhbw
or
xor
mov
loope
or
fnsave
jmp
outs
loop
cdq
push
cmp
icebp
cmp
mov
push
xor
push
enter
in
bound
mov
aam
repnz
mov
shr
xor
mov
out
lea
xor
pusha
xor
rol
(bad)
or
nop
adc
xor
inc
push
es
xor
in
inc
mov
add
xor
push
xchg
push
jmp
pusha
xchg
int3
outs
lods
(bad)
(bad)
cmp
fstp
and
xor
int3
lds
dec
adc
mov
sub
cmp
jb
adc
loope
sbb
(bad)
in
cmp
jge
mov
mov
inc
pop
mov
retf
adc
inc
rol
inc
int3
jl
mov
sbb
pop
lea
stos
dec
call
mov
push
mov
cvtps2pd
(bad)
aad
leave
push
dec
hlt
cmps
dec
mov
je
and
enter
div
int
mov
xor
xchg
adc
pop
lds
data16
or
push
cmp
cmp
ds
cdq
ja
hlt
imul
push
and
test
push
mov
(bad)
adc
cmp
xor
(bad)
rcl
push
es
sub
and
subps
es
ss
dec
cmps
(bad)
loopne
sub
pop
dec
add
mov
jo
xor
fldenv
out
shl
fwait
arpl
cmp
cmc
fist
dec
fstp
and
jle
sar
push
sbb
gs
xchg
add
pshufw
mov
cmp
int3
aaa
mov
jmp
mov
iret
lock
es
inc
int3
mov
push
scas
out
push
pop
and
nop
icebp
cmps
mov
into
dec
fwait
adc
jecxz
imul
mov
pop
pop
xlat
or
push
or
movs
movs
mov
or
sbb
shr
xchg
inc
jge
push
lods
arpl
cmp
mov
or
test
jge
sti
enter
cdq
cmp
sbb
pop
cmp
nop
sub
mov
hlt
bswap
xchg
gs
mov
stc
mov
inc
sub
fcomp
shr
test
xchg
fdiv
outs
out
sbb
inc
ror
pop
sub
and
cdq
ret
cmp
add
xchg
fnstsw
icebp
jns
xchg
push
or
loope
mov
xchg
inc
or
mul
mov
adc
(bad)
call
loopne
out
or
cmps
popf
test
push
and
jg
sbb
adc
sub
std
cwde
std
es
jne
jmp
push
mov
or
sub
mov
push
mov
dec
retf
sbb
fwait
add
scas
dec
sub
mov
mov
dec
popa
cmc
mov
push
mov
pop
ins
xor
xchg
mov
mov
mov
loop
xor
jmp
xchg
enter
test
mov
mov
stos
mov
repz
fucomp
sub
xchg
sahf
cmp
std
daa
adc
push
lea
pushf
push
mov
int
arpl
jg
dec
dec
fimul
std
jl
clc
jmp
jno
jne
lds
pop
mov
mov
and
pop
mov
int3
inc
arpl
xlat
adc
adc
rcr
mov
mov
xchg
sub
sub
loop
sub
les
mov
mov
push
rcr
inc
or
shl
inc
mov
pop
push
pop
or
in
add
cmc
and
out
push
sbb
int
cmp
gs
and
ds
nop
mov
in
pop
xor
xor
mov
xchg
mov
sub
mov
sub
loop
lock
cld
pop
jecxz
cmc
dec
fsub
in
jmp
call
sbb
out
xchg
sbb
aad
dec
jg
out
js
xor
push
loop
xor
add
dec
mov
sub
mov
mov
mov
jmp
xor
lea
jo
stc
(bad)
mov
out
cdq
mov
cmp
pop
inc
cmps
mov
cmp
or
push
das
xchg
fsubrp
in
sbb
xor
mov
popa
mov
mov
xchg
push
test
out
push
cmp
xchg
mov
sub
dec
jge
in
mov
pushf
push
mov
mov
iret
in
inc
pop
int3
sbb
and
jg
adc
and
in
push
rcr
ins
xchg
jmp
test
jno
int3
int3
popf
sbb
popa
xor
push
in
cmp
jp
sbb
repz
mov
lea
jecxz
or
dec
movs
xchg
push
push
mov
lock
mov
in
xor
bound
sub
lahf
push
sbb
fwait
adc
gs
xor
push
pop
pop
call
imul
pop
push
syscall
mov
mov
mov
test
(bad)
pshufw
xchg
stc
mov
jmp
or
mov
and
rol
es
stos
cmp
rol
mov
dec
aad
dec
cmp
pop
stos
sub
xor
and
es
xchg
mov
cld
retf
sbb
into
cmp
test
jl
mov
adc
mov
sbb
mov
jge
call
shl
dec
inc
dec
jg
jge
push
(bad)
xchg
pushf
jbe
repz
scas
fsubr
mov
dec
mov
je
mov
cmp
das
fidivr
mov
aaa
test
(bad)
adc
movs
sub
jae
out
add
aas
call
pop
add
test
and
into
cmp
js
int3
mov
das
inc
(bad)
xchg
cdq
adc
mov
and
(bad)
cmp
sti
dec
mul
mov
cmps
je
xor
fisttp
and
jne
lods
mov
xchg
sub
xor
scas
es
inc
clc
enter
or
movs
sub
(bad)
xchg
stos
fstp
dec
and
sbb
inc
jmp
sbb
test
push
pop
stc
fidiv
inc
jmp
das
push
cmc
into
sbb
pop
enter
pop
mov
or
sbb
(bad)
loop
leave
arpl
fs
xchg
push
mov
cmp
sar
jecxz
cmp
loope
std
sub
pusha
(bad)
or
mov
mov
push
adc
mov
fisub
stos
aas
kmovd
cmp
push
xchg
scas
lock
in
cmps
rcr
inc
shr
and
adc
jne
dec
cmps
nop
pop
in
icebp
in
xchg
(bad)
cli
imul
add
lods
bound
int3
and
cmp
out
ret
mov
sub
xor
jmp
mov
addr16
enter
and
inc
stc
xlat
imul
cld
and
mov
mov
es
arpl
inc
xchg
cs
fild
lock
test
popf
push
fmul
jnp
pushfw
jno
add
test
inc
dec
mov
(bad)
jb
nop
jmp
arpl
leave
test
mov
bound
shl
out
rol
gs
cs
jmp
aad
aad
and
cmps
mov
push
stc
and
mov
scas
push
cld
frstor
sbb
mov
test
mov
push
push
mov
je
lods
and
pop
out
push
fcom
cmp
sub
fdivr
into
pop
adc
pop
nop
ss
fmul
xchg
ror
and
scas
(bad)
lock
jnp
sbb
add
arpl
pop
jmp
inc
movs
int3
std
aad
mov
sbb
or
(bad)
movs
xchg
mov
mov
out
test
sahf
mov
jl
sub
xor
jl
xor
mov
(bad)
test
dec
cld
inc
js
in
xchg
scas
shr
inc
loope
ins
shl
mov
jge
xor
xor
mov
test
push
dec
(bad)
out
movs
movs
inc
js
sti
sub
mov
mov
and
cld
lahf
dec
xor
sbb
xor
lahf
pop
push
mov
ins
fwait
ja
imul
int
xchg
je
(bad)
in
jne
mov
ja
test
sub
das
dec
add
add
fsub
lahf
xor
cs
or
fisttp
push
mov
push
push
add
push
inc
or
add
bound
movs
sub
mov
stos
loop
jecxz
or
inc
dec
fwait
push
cmp
pop
leave
mov
or
shl
pop
adc
dec
xchg
scas
xchg
cmp
adc
fld
push
push
push
pop
mov
bound
lea
aaa
mov
fs
xor
jns
push
popf
(bad)
pop
hlt
not
popf
xor
push
fwait
int3
jbe
cmp
sbb
test
xchg
push
xor
cmc
sub
xchg
popa
or
pop
pop
movs
fstp
or
cmp
movups
xchg
mov
adc
cld
xor
mov
jae
cdq
pop
lahf
nop
push
pop
lahf
push
mov
jne
jmp
cli
mov
mov
jp
push
rol
jmp
fisttp
push
and
sub
jmp
sub
sbb
fcmovnb
dec
nop
mov
enter
mov
adc
xor
pop
xchg
pop
(bad)
jmp
and
movs
or
adc
jnp
popa
mov
pop
adc
cs
pop
ficom
cmc
push
jbe
mov
addr16
cmp
push
shr
cld
mov
adc
leave
js
xor
fidiv
out
jne
fmul
test
les
mov
shr
mov
and
adc
push
mov
not
sahf
fidiv
xchg
imul
sbb
and
cld
repnz
mov
cli
loopne
pop
mov
ficomp
mov
dec
loope
lds
fidiv
jecxz
pop
push
inc
push
mov
dec
ret
hlt
cmp
mov
enter
or
add
mov
sbb
nop
jg
scas
add
or
setae
scas
in
mov
dec
mov
mov
enter
cld
add
cmps
add
(bad)
jmp
test
test
xchg
(bad)
push
int3
pop
addr16
retf
or
and
mov
rcl
inc
popa
push
xor
popf
dec
pushf
sbb
(bad)
rcr
or
pop
or
ret
mov
adc
xchg
xchg
sbb
bound
lahf
sahf
push
mov
sub
repnz
aam
call
jg
xor
jae
imul
popf
xchg
fcom
clc
sti
iret
inc
add
sub
call
in
aad
stc
mov
aas
add
into
fmul
cmc
pop
xchg
sub
cli
sub
repz
repz
outs
gs
cld
jno
mov
push
mov
jle
sub
dec
add
jp
adc
mov
cmp
jne
mov
xchg
fcom
add
xor
out
ja
add
call
and
dec
loop
and
int
pop
cmps
iret
lahf
(bad)
int3
aaa
or
scas
push
loope
sar
cmp
sub
loop
imul
dec
fdivr
add
loop
sbb
adc
mov
pop
jmp
rcr
xor
push
push
sub
add
push
mov
retf
xchg
mov
ret
xchg
lahf
(bad)
cwde
cli
push
outs
sbb
iret
mov
test
push
pop
int3
pop
fsubr
into
xchg
ins
test
(bad)
mov
inc
out
add
ret
xor
cmp
adc
adc
push
mov
out
mov
jmp
(bad)
xchg
iret
out
add
int3
jns
jecxz
mov
(bad)
mov
dec
inc
pop
test
jmp
ja
in
in
dec
out
shl
inc
jl
adc
or
cmp
mov
jmp
and
fstp
imul
xchg
pop
sbb
cmc
and
xadd
into
leave
dec
or
repnz
outs
mov
push
call
push
test
cld
pop
rcr
lds
aam
fld
push
inc
jnp
dec
jbe
sub
jge
sub
jl
idiv
inc
ret
pop
daa
or
adc
dec
inc
jl
cmp
std
sub
iret
pop
pop
xchg
xlat
sbb
movs
ja
cmp
pop
jl
mov
inc
xchg
lods
sub
(bad)
adc
sbb
into
movs
cmovnp
add
icebp
les
mov
das
and
fild
out
rol
(bad)
or
sub
sar
mov
cmp
push
mov
sub
fsub
mov
mov
cli
ja
mov
popf
(bad)
pusha
or
cli
cmp
add
test
je
cmp
and
and
sete
ror
cmp
sub
xlat
cwde
sbb
lods
popa
add
mov
add
into
bound
xlat
sub
sbb
cli
fsubr
movs
test
int
aaa
imul
cld
rcl
mov
ins
pop
sbb
ror
popf
aam
loop
jmp
add
adc
aam
add
or
daa
dec
xor
sub
(bad)
popa
mov
push
adc
xlat
pop
std
scas
and
sub
(bad)
lahf
cld
mov
std
cmp
rcl
xor
vfrczpd
push
push
dec
ss
js
xchg
mov
imul
jp
hlt
sbb
adc
cs
sti
add
push
cld
push
sahf
in
dec
xchg
(bad)
sub
xchg
loope
and
repz
out
enter
mov
mov
sbb
sub
inc
(bad)
ja
push
mov
xchg
jmp
movs
add
out
and
shl
jmp
ja
dec
xchg
enter
or
out
inc
adc
mov
push
mov
scas
fistp
xchg
jnp
mov
repnz
xor
retf
xchg
sbb
mov
add
scas
mov
sub
push
push
or
aas
mov
out
std
inc
mov
cmp
mov
jl
lods
(bad)
into
push
fidivr
push
mov
loopne
stc
stc
stos
jecxz
data16
mov
enter
dec
(bad)
retf
xor
cmp
ror
loop
daa
outs
pop
inc
pop
inc
arpl
mov
gs
mov
add
mov
in
das
inc
pop
ficom
aad
iret
mulps
mov
or
jbe
loopne
(bad)
loop
cmp
jl
mov
push
aam
sbb
ret
shl
mov
retf
xor
push
cmp
pusha
cmps
arpl
(bad)
mov
aad
sub
mov
out
push
leave
lahf
sub
xchg
inc
cli
(bad)
mov
inc
xchg
xchg
repz
stos
dec
lods
xchg
inc
mov
and
jnp
scas
or
ffreep
jle
sub
pop
stos
xor
mov
or
push
mov
inc
xchg
and
push
xor
aaa
or
dec
jbe
addr16
jge
sub
lock
push
iret
mov
(bad)
pop
into
test
cmp
jo
lds
movs
fwait
rol
stos
pop
(bad)
icebp
add
mov
repz
jge
lods
mov
mov
mov
rol
ins
mul
pop
fnsave
jmp
lock
mov
dec
fst
add
add
lds
jmp
cmp
mov
idiv
push
push
jnp
outs
or
imul
lahf
outs
pop
adc
test
(bad)
out
push
dec
aas
sbb
int3
cdq
push
push
sbb
mov
sbb
dec
sbb
mov
fild
cmc
pushf
fsub
xchg
mov
gs
jne
fwait
cmps
arpl
ret
je
outs
les
pop
movaps
and
jo
dec
mov
mov
outs
cli
cdq
je
mov
fwait
pusha
mov
paddsb
mov
push
addr16
jb
push
add
sbb
jecxz
push
jbe
in
sti
sub
inc
call
adc
popf
adc
inc
mov
inc
inc
cmp
aaa
push
push
in
int
adc
repnz
lods
inc
cdq
imul
jecxz
fsub
mov
and
push
scas
push
jae
sub
data16
sub
add
shl
lea
outs
aam
(bad)
(bad)
push
xor
and
and
adc
and
add
cs
xor
cmc
push
push
(bad)
xlat
sar
jns
jl
(bad)
clc
mov
xchg
pop
iret
clc
outs
fnstsw
int3
mov
movs
push
mov
xor
mov
call
dec
xchg
push
jo
pop
adc
add
add
dec
push
dec
or
xor
sbb
in
or
jp
xor
sbb
stc
popf
push
ror
test
add
in
dec
inc
xchg
cwde
cmp
test
jae
cmp
mov
leave
arpl
in
repz
and
mov
sbb
(bad)
mov
jmp
std
out
pop
jo
aas
mov
push
mov
xor
inc
mov
jge
sbb
loopne
mov
pop
mov
retf
popf
into
rcr
jg
ja
inc
xchg
mov
mov
and
sub
xor
call
and
icebp
outs
sub
stos
xor
jno
jmp
scas
fdiv
test
hlt
inc
outs
pop
rcr
call
retf
popa
es
adc
(bad)
arpl
mov
and
popf
mov
sbb
mov
cmp
outs
movs
push
mov
cmp
jns
and
addr16
sbb
lea
mov
add
mov
jb
mov
jnp
xchg
aaa
inc
cmp
(bad)
ficom
or
sar
jno
xchg
retf
dec
cmp
sbb
enter
or
pop
(bad)
in
aam
jo
loope
xchg
push
test
pusha
sahf
adc
mov
push
(bad)
adc
lods
xlat
cdq
dec
inc
dec
jb
inc
add
aaa
fbld
iret
add
lods
movs
les
inc
bound
pop
(bad)
rcr
lds
retf
popf
mov
jp
sbb
sbb
imul
mov
mov
dec
jne
xor
mov
in
in
mov
ror
fsub
adc
or
fs
pushf
sub
loopne
clc
movs
imul
mov
int3
in
movs
pusha
jae
movs
xchg
or
imul
pop
iret
lahf
or
test
cli
cmp
test
arpl
push
lock
int
div
mov
repnz
test
out
and
mov
jle
push
in
dec
add
les
repnz
loop
fsubrp
idiv
sbb
xor
jb
jno
fisttp
(bad)
jecxz
int3
pushf
mov
je
inc
fisubr
jb
cli
mov
aaa
popa
mov
xchg
or
(bad)
sti
jne
aas
sub
js
retf
daa
sbb
jge
fs
fisubr
call
data16
push
mov
lea
jmp
outs
aad
sbb
xchg
add
(bad)
inc
lds
aam
xchg
xchg
sub
sub
mov
mov
pop
lea
mov
jns
jp
call
out
jno
retf
enter
sahf
dec
jp
dec
xor
fidiv
not
lods
ss
xor
add
and
popf
in
dec
loopne
push
inc
mov
and
ja
cmp
pop
inc
sahf
mov
push
xchg
and
inc
scas
sbb
movs
cmp
cmps
jb
push
dec
push
retf
mov
icebp
pop
adc
popa
inc
sti
jbe
jl
jbe
(bad)
mov
in
pop
inc
xor
jo
enter
jno
xchg
cmp
sub
shr
push
add
xchg
in
fs
(bad)
fstp
scas
mov
mov
dec
mov
call
popa
shl
or
and
pop
cdq
cmp
rcr
test
into
out
inc
shr
add
sub
cdq
pushf
ds
jle
dec
dec
mov
ficom
mov
outs
lea
add
add
popa
loope
jge
pop
imul
inc
ror
ins
jecxz
test
xor
inc
mov
mov
xchg
dec
xchg
sahf
das
retf
cld
lahf
dec
mov
adc
loop
jns
mov
fbld
jmp
jmp
data16
add
es
dec
cmps
int
mov
sbb
addr16
sbb
out
mov
jmp
js
sbb
cli
push
mov
and
mov
es
sbb
in
mov
xchg
fwait
push
stos
lods
add
mov
cmp
xchg
sbb
adc
xchg
test
(bad)
jmp
jne
xchg
lahf
aaa
dec
shr
xchg
int
cmp
daa
mov
aas
mov
std
popa
pop
mov
push
push
dec
and
add
idiv
sbb
mul
mov
sbb
mov
in
es
pop
aas
xchg
pop
push
xor
push
add
inc
jle
ja
inc
ret
and
out
xor
push
fisubr
and
scas
popa
dec
fs
xchg
out
in
out
ror
or
test
sbb
xor
sbb
std
add
push
les
sub
call
ror
int3
mov
(bad)
inc
cmp
adc
mov
aad
jo
ins
jmp
fld1
mov
(bad)
in
out
sbb
sub
push
mov
mov
inc
ja
mov
rcr
popf
fisttp
stc
adc
fbld
lods
hlt
rcr
pop
loopne
jno
repnz
jb
popa
mov
adc
push
push
push
mov
pop
xor
adc
mov
mov
xchg
call
test
jnp
clc
adc
pop
std
(bad)
pop
(bad)
mov
shr
xor
inc
inc
data16
xchg
aad
dec
push
xchg
fstp
mov
bound
push
push
nop
inc
xchg
movs
push
and
loope
dec
movs
ss
(bad)
cmp
add
sub
(bad)
xor
sub
cmp
jmp
xchg
hlt
scas
ja
push
add
sahf
leave
pushf
mov
fcomi
xchg
cmp
ja
js
bound
mov
cmp
repnz
nop
movs
sti
(bad)
jns
mov
fstp
test
add
jae
push
mov
out
cs
xor
mov
iret
dec
aaa
pop
fnsave
enter
cmp
pop
sbb
mov
(bad)
or
mov
mov
loop
sbb
fidivr
or
loope
jbe
adc
push
push
cmp
cmps
or
push
iret
push
and
bound
cmp
and
push
push
push
test
or
in
inc
lods
cmp
pop
add
add
push
jecxz
add
and
frstor
out
mov
or
repz
ja
loope
xchg
adc
dec
sbb
sahf
rcl
mov
int
movs
push
xor
scas
stc
pusha
mov
sub
ret
ret
outs
push
mov
les
out
add
cmp
int
pushf
xchg
ins
pop
cmc
call
gs
push
(bad)
push
mov
shr
jbe
xchg
(bad)
push
mov
adc
inc
xor
hlt
aaa
mov
imul
and
nop
jmp
in
or
mov
mov
jmp
dec
mov
gs
mov
or
or
mov
(bad)
or
xchg
rol
in
inc
mov
xlat
scas
mov
lahf
jnp
loope
sar
mov
add
mov
ucomiss
sub
mov
ror
and
scas
push
push
pop
aas
dec
pusha
jmp
mov
out
movs
sbb
imul
icebp
and
ja
pushf
dec
add
daa
sbb
scas
std
sbb
jmp
lods
test
loope
test
es
xor
rcl
pushf
in
js
out
out
pop
(bad)
mov
shr
pop
hlt
xchg
mov
cmp
pop
sbb
dec
dec
jae
in
jmp
not
mov
mov
adc
inc
inc
cmp
xchg
xchg
rcl
mov
or
cmc
adc
daa
or
or
lea
aam
xor
mov
iret
mov
xchg
jnp
addr16
imul
dec
in
aam
dec
mov
xchg
imul
cmps
into
push
xor
into
and
push
push
cwde
pop
xchg
sub
fwait
(bad)
sub
ret
and
pop
loop
stos
dec
add
jnp
xor
push
mov
(bad)
popa
sbb
xchg
(bad)
jmp
fs
popf
push
cdq
mov
ret
xlat
retf
xor
xchg
jge
pop
(bad)
cli
scas
imul
mov
imul
mov
fnstsw
lods
cwde
loopne
xor
jle
xchg
dec
pop
leave
sahf
pop
sub
mov
adc
pop
imul
outs
mov
(bad)
popa
leave
ins
repnz
push
xchg
pop
mov
popf
nop
jmp
test
push
jbe
imul
pop
clc
pop
inc
pop
dec
mov
ds
dec
mov
mov
jmp
fcomi
adc
push
jbe
mov
add
push
cmp
dec
lods
jl
inc
scas
mov
mov
gs
loope
cli
cmp
cmp
cli
int3
movs
jle
add
xchg
cmp
sub
loop
jmp
icebp
or
enter
add
cmps
retf
jne
xchg
or
mov
aas
ins
imul
shl
clc
fadd
pshufw
leave
inc
mov
fdiv
dec
push
ja
imul
cmc
jns
xchg
imul
sahf
cli
adc
outs
jmp
cmp
sar
repnz
lahf
push
cli
mov
pop
dec
aaa
cmc
add
sbb
rcl
btc
sub
mov
sub
mov
jecxz
ss
sti
dec
mov
int
sub
xchg
cmp
jecxz
inc
push
sub
add
add
popa
sub
lock
mov
outs
adc
inc
imul
repnz
mov
fwait
adc
or
mov
test
cdq
repz
xchg
and
jb
sbb
jbe
ret
(bad)
push
imul
adc
and
mov
test
(bad)
xchg
arpl
icebp
movs
adc
hlt
dec
push
sbb
and
lods
fcom
sbb
inc
add
jecxz
fwait
retf
not
mov
mov
je
pop
dec
cs
pop
test
push
jl
or
outs
gs
add
inc
(bad)
sub
bnd
push
dec
mov
repz
enter
inc
xchg
and
pop
push
adc
mov
pop
mov
rol
test
lods
cmp
out
dec
inc
ja
retf
fs
and
mov
xchg
scas
fstp
retf
mov
jp
test
jae
cmp
repnz
jns
cmp
and
jecxz
cmps
dec
call
(bad)
stos
imul
mov
xor
inc
sub
adc
ret
jae
mov
sub
pop
jle
daa
daa
sbb
mov
sub
jmp
pop
inc
dec
cwde
mov
rcr
cmp
fcom
cmp
gs
in
stos
dec
stc
mov
ret
mov
ja
mov
les
or
sub
push
mov
cmc
push
out
or
mov
fcom
adc
push
xchg
add
mov
hlt
dec
outs
in
mov
push
jnp
pop
pop
mov
ds
call
xchg
fidiv
cmp
call
push
or
aaa
fiadd
sub
mov
cmp
fist
fstp
dec
adc
popa
lods
jns
sbb
shl
push
fimul
adc
test
sti
lods
and
popa
mov
loope
stos
popa
dec
hlt
test
(bad)
je
imul
xchg
push
mov
repz
mov
out
pop
icebp
mov
jbe
test
jmp
or
(bad)
out
stos
mov
dec
adc
pop
mov
jmp
lahf
sti
dec
dec
sub
mov
add
fild
(bad)
xor
cmp
scas
ret
mov
add
shl
shrd
popf
mul
fsub
retf
mov
mov
rol
out
sub
xor
inc
out
cmp
mov
lahf
retf
es
in
mov
cmp
aad
xchg
pop
pop
ss
mov
(bad)
pop
pop
sar
or
mov
and
mov
dec
push
and
out
dec
int
push
jo
jo
dec
repnz
mov
call
jmp
outs
mov
inc
inc
repz
push
clc
push
inc
lds
inc
xchg
cmc
pusha
adc
xchg
mov
mov
bound
jle
test
pop
repnz
push
cmp
inc
(bad)
loopne
dec
pop
imul
mov
inc
arpl
sbb
int3
enter
xor
push
stos
inc
jno
cmp
sub
add
out
test
(bad)
add
in
fimul
inc
add
inc
cwde
test
jecxz
pop
add
pop
xor
pop
lea
aad
dec
(bad)
jb
repnz
xchg
inc
inc
mov
jmp
push
ret
xchg
jmp
adc
xchg
lock
xchg
push
mov
fcom
shl
nop
inc
lods
aas
lods
mov
dec
mov
sbb
ss
inc
mov
push
dec
ja
xor
lods
xchg
retf
in
mov
mov
or
(bad)
data16
xor
sbb
mov
pop
mov
jmp
mov
(bad)
sub
sti
out
ss
adc
inc
xchg
xor
imul
pop
int3
push
add
scas
iret
jbe
cmovo
sbb
dec
xor
add
mov
push
mov
mov
sub
sub
dec
enter
mov
add
xchg
aas
cmp
in
xchg
shl
mov
or
xchg
inc
pop
jle
mov
and
or
mov
push
ja
loope
enter
test
fdiv
or
pop
mov
and
adc
jbe
cmp
and
sub
fadd
test
sbb
(bad)
out
xchg
shl
cs
shr
fidiv
jmp
fidivr
sub
inc
test
test
movs
cmp
jnp
leave
icebp
idiv
mov
sbb
cmp
shl
and
fld
pop
push
sar
sbb
fisubr
xchg
mov
arpl
adc
retf
push
add
jae
cmp
and
push
inc
cmc
ror
cmc
add
sti
sbb
nop
dec
jecxz
inc
sbb
(bad)
sbb
mov
fild
or
in
mov
call
and
mov
or
cmp
jl
cs
cld
fcomp
adc
push
fisubr
rcl
cmps
cmps
cdq
aam
push
pop
jmp
xchg
(bad)
cmp
daa
dec
ins
mov
sub
ret
mov
sub
xchg
xchg
xlat
push
jns
adc
leave
xchg
(bad)
pop
ins
sbb
sub
cli
push
idiv
repnz
adc
gs
jnp
inc
lods
test
(bad)
jp
loopne
push
test
sti
inc
jg
cli
adc
mov
icebp
push
xor
lods
jo
or
pop
out
sahf
pop
lock
int
popf
mov
sbb
test
rcl
dec
pop
cmp
cmps
ins
ins
and
adc
cmp
add
jge
jbe
add
adc
or
jne
mov
outs
jmp
clc
dec
out
nop
mov
movs
mov
mov
retf
ret
shr
push
fs
arpl
cmp
iret
pop
mov
dec
jp
inc
je
xor
fnstenv
sti
fsubr
xor
push
pop
call
push
loopne
icebp
jno
push
fsubr
lods
repz
sahf
ret
push
cmp
or
pop
div
pop
mov
stc
xor
out
ret
add
mov
jns
aad
mov
adc
inc
movs
nop
and
inc
mov
dec
xor
add
xor
sbb
stos
or
fdivr
sub
mov
jbe
mov
loope
(bad)
xor
inc
jnp
repz
movs
es
xchg
cmp
push
jecxz
add
mov
sub
mov
pushf
push
mov
cmp
xor
or
fimul
ins
jge
inc
xor
into
mov
mov
out
add
add
xor
and
dec
movs
hlt
shl
pop
je
xor
adc
xlat
lahf
daa
and
dec
arpl
aas
push
mov
push
add
adc
mov
or
pop
retf
int3
fwait
push
push
mov
push
mov
cmps
xchg
(bad)
nop
icebp
add
or
sbb
cmps
pop
ds
fwait
xor
or
mov
test
call
mov
adc
mov
sahf
int
test
bound
inc
stos
ins
leave
xor
stos
daa
in
sub
mov
pusha
sbb
mov
addr16
cmp
pop
idiv
(bad)
mov
scas
xor
sar
pop
push
pop
outs
gs
xor
aam
cmp
push
in
aad
pop
inc
adc
mov
movs
push
xchg
aaa
inc
aad
cmp
jle
and
ins
pop
push
mov
push
scas
icebp
adc
cmp
add
and
sub
inc
out
or
or
add
(bad)
cld
mov
adc
nop
jp
test
lahf
scas
xchg
retf
test
mov
jno
jp
xor
adc
add
std
mov
xchg
xchg
xchg
test
adc
ins
jp
cmp
or
and
in
cmp
push
aaa
jb
inc
dec
lds
arpl
mov
xor
gs
jmp
cmps
inc
jge
cli
in
leave
push
(bad)
push
gs
pop
xlat
and
movs
mov
dec
imul
fdivr
cmp
xor
dec
push
inc
sbb
(bad)
pop
inc
out
shl
add
imul
push
mov
lods
sub
sbb
or
scas
mov
sub
retf
int3
pushf
pop
lods
out
(bad)
out
loop
jae
mov
out
inc
stos
adc
add
aam
mov
and
in
stos
cld
cmp
ret
add
pop
pop
cmps
xor
jb
lds
pop
or
call
sbb
jnp
ins
pop
nop
ret
cld
adc
mov
or
pop
pop
movs
jbe
push
mov
xchg
jmp
not
gs
imul
cmp
add
pop
retf
test
call
push
fdivp
fidiv
popa
adc
add
stos
fdiv
imul
lahf
mov
mov
push
and
sub
push
xor
test
mov
mov
iret
jno
scas
enter
cld
push
aas
ret
daa
sti
and
ins
or
jp
clc
mov
mov
jge
pop
hlt
in
das
sbb
in
cs
pushw
out
inc
loop
aas
mov
outs
outs
call
jns
pushf
add
dec
(bad)
sub
out
cmp
inc
ss
pop
scas
jge
jno
out
out
and
stos
jne
jns
mov
sbb
lock
(bad)
cmp
pop
data16
or
int3
imul
and
xor
call
inc
pop
sub
sbb
lahf
imul
mov
fild
dec
pop
sbb
jo
(bad)
xchg
fs
pop
dec
int
repnz
rep
and
dec
in
adc
das
cs
stos
call
adc
push
(bad)
pop
frstor
ins
xchg
dec
in
sahf
sub
jne
fcom
test
out
pop
sub
icebp
ret
dec
xchg
in
sub
sub
or
dec
cmp
daa
mov
lds
push
sub
lods
cli
bnd
pop
sub
out
int3
push
and
inc
inc
sbb
jo
lahf
es
jne
(bad)
stos
xchg
sbb
or
pushf
sar
movs
sub
or
inc
imul
jo
retf
scas
push
mov
rcl
test
xor
popf
dec
sar
add
push
scas
xchg
loopne
dec
sbb
cld
pop
mov
(bad)
sub
adc
je
and
test
pop
mov
movs
call
mov
shr
pop
xor
test
loopne
and
sub
xchg
push
out
lea
mov
leave
stos
inc
sahf
fnstenv
comiss
cld
cs
mov
mov
call
clc
aaa
addr16
aas
aas
mov
jp
jb
push
mov
mov
aad
mov
cmp
outs
shl
mov
adc
les
aam
cli
or
push
imul
pusha
xchg
stos
movs
in
xor
push
(bad)
sub
xor
and
loope
lds
nop
mov
in
popf
jns
shl
mov
jg
sbb
in
push
dec
or
sub
cmp
nop
xor
mov
and
in
and
xchg
mov
fwait
push
imul
jnp
adc
out
inc
(bad)
in
shr
xor
gs
sbb
shl
inc
add
mov
sbb
sub
nop
cwde
cdq
js
xchg
push
cld
push
inc
les
mov
cmp
movs
push
jmp
mov
jl
cli
xor
ror
push
nop
mov
jle
push
popf
jnp
div
add
imul
fld
movs
push
mov
repnz
daa
inc
fcmovnbe
mov
neg
xor
xchg
icebp
cwde
es
sub
lds
rol
or
cmps
xor
sbb
imul
adc
(bad)
punpckldq
mov
inc
dec
push
(bad)
lock
int
sbb
arpl
sahf
add
loope
mov
and
(bad)
pop
push
ins
adc
pushf
dec
mov
mov
ins
(bad)
fisubr
inc
xor
test
push
sti
push
mov
inc
shl
jb
mov
mov
inc
push
add
aas
sahf
test
bnd
inc
aad
loop
ja
push
ror
(bad)
nop
pop
lods
cmc
shl
sub
mov
mov
dec
out
xor
pop
scas
cmp
jge
ret
cmc
and
xor
in
ins
mov
mov
xchg
jno
(bad)
push
lods
and
clc
test
rcr
cmp
sbb
xor
adc
xchg
push
clc
xchg
sbb
jnp
sbb
mov
push
call
fwait
not
enter
in
out
xchg
imul
xlat
xchg
mov
jns
jmp
out
ret
mov
fadd
dec
dec
pop
inc
lahf
je
cmp
mov
pop
adc
pop
pop
aaa
xor
dec
pop
jb
movs
cmp
jmp
test
addr16
and
add
pop
dec
jo
sar
push
shl
mov
cld
inc
aam
push
sbb
push
sbb
add
adc
movs
icebp
stos
fcom
fld
xchg
scas
adc
xchg
jg
aas
les
stos
inc
push
dec
cmps
pop
xor
pop
dec
pop
add
lods
pushf
adc
and
popa
rcr
retf
inc
(bad)
es
sbb
movs
xchg
es
sar
(bad)
icebp
movs
sbb
push
enter
dec
xor
in
mov
jne
in
std
inc
jno
jbe
ror
jae
lea
add
icebp
fisttp
mov
imul
test
adc
test
(bad)
cld
mov
out
or
ds
cmp
or
pop
adc
lock
add
adc
and
cwde
inc
push
cld
out
inc
stos
pop
nop
mov
inc
arpl
pavgb
add
sub
dec
dec
cs
inc
and
ja
stc
sub
pop
ret
mov
mov
pop
in
stos
imul
inc
(bad)
push
(bad)
cmp
mov
imul
mov
repnz
cld
popa
sar
cs
rcl
pop
xchg
ja
push
into
pop
sub
inc
pop
pop
pusha
cmp
in
sbb
push
ja
jbe
cmp
cwde
jp
lahf
xchg
adc
jae
fcmovu
jmp
mov
sub
adc
cmps
aam
idiv
ror
inc
mov
or
fild
mov
aaa
xchg
int3
(bad)
mov
sub
cmp
add
dec
in
ds
or
imul
retf
dec
add
shl
jae
xor
cmp
dec
push
lea
loop
push
fsubr
arpl
xor
sbb
movs
or
push
sub
fwait
cmp
cmc
sub
mov
push
test
in
push
inc
push
push
ja
cwde
sbb
call
lods
imul
dec
jge
cs
dec
loop
and
movs
stos
pop
cld
cmp
mov
jmp
sahf
iret
es
out
or
sbb
adc
add
push
mov
sbb
adc
js
pushf
(bad)
test
fisttp
cs
sub
out
arpl
ret
xor
xor
add
jg
add
pop
cmp
add
xor
and
inc
xchg
(bad)
cdq
mov
push
push
imul
inc
(bad)
sub
std
dec
inc
mov
cdq
pop
jno
ins
mov
test
dec
cli
pop
add
adc
push
push
jl
jmp
or
popf
pushf
adc
ja
icebp
lock
ja
sub
xchg
ret
dec
or
mov
and
sti
in
or
push
sub
js
mov
cmps
test
inc
sub
xchg
xchg
pushf
test
stos
icebp
psllq
mov
jle
jl
cmps
loopne
jns
(bad)
sub
call
pop
popf
adc
jecxz
jp
shr
stos
push
mov
sub
cli
test
mov
ds
test
fiadd
push
stc
dec
and
cwde
jns
inc
dec
(bad)
call
push
xor
xor
dec
mov
arpl
jge
jecxz
or
retf
pop
add
fwait
pop
in
sbb
mov
neg
pop
cmp
(bad)
aam
sbb
sub
mov
dec
scas
nop
adc
loope
fwait
xchg
pop
xchg
jbe
or
mov
aad
pushf
cmps
pop
push
sbb
jmp
inc
adc
imul
and
aam
cld
es
or
sbb
push
mov
inc
mov
mov
hlt
sub
cmp
sub
loop
call
push
sub
enter
fistp
pop
(bad)
ror
call
push
stos
hlt
add
push
ret
(bad)
fcom
aas
je
aaa
sbb
pushf
ret
data16
lahf
stc
jle
outs
inc
xor
sbb
adc
in
push
push
mov
mov
sub
aad
shl
lock
adc
mov
sub
xor
mov
mov
out
jge
mov
lods
push
adc
mov
cld
jg
fstp
inc
loope
and
xor
xchg
push
(bad)
cmp
mov
stc
dec
dec
jnp
mov
dec
xor
xor
mov
pop
ss
and
stos
lods
adc
cld
sbb
cwde
scas
shl
adc
mov
aam
ja
xlat
cld
jmp
ds
call
sub
int
and
adc
mov
jae
cmp
lods
test
(bad)
cmp
adc
jle
cmp
push
cli
mov
int3
retf
leave
(bad)
jecxz
mov
fsub
mov
mov
out
mov
add
sbb
ss
push
xchg
dec
or
add
sub
mov
clc
movs
cli
int3
adc
xor
jge
ret
sbb
cmp
cmp
or
jae
stos
lahf
sub
(bad)
int3
out
add
ins
jbe
test
pop
out
test
in
aam
inc
and
aam
and
push
sbb
xlat
push
shl
addr16
icebp
mov
out
ins
je
mov
jge
add
pop
imul
cmps
dec
shl
into
call
lahf
inc
mov
mov
jbe
add
sbb
in
adc
jl
int
dec
dec
and
sbb
outs
in
or
cmp
lods
daa
pop
adc
add
dec
or
jge
xor
aad
loopne
xchg
jb
push
push
icebp
rcl
lods
lahf
inc
fcmovbe
jmp
in
in
xor
push
cwde
and
jp
push
dec
or
call
push
xchg
jmp
fisub
mov
imul
fldcw
fldenvw
fisub
(bad)
sbb
and
or
mov
and
ja
jp
sti
sbb
xchg
inc
pop
pop
pop
cli
adc
inc
test
mov
cmps
mov
sub
test
sahf
test
mov
xor
push
(bad)
dec
in
ss
mov
pushf
and
pop
fiadd
dec
and
stc
not
js
inc
inc
mov
xor
int
packuswb
sub
jns
mov
adc
imul
mov
(bad)
push
dec
int3
retf
push
je
sub
int3
sbb
stos
sub
mul
fdivr
cmp
out
push
jb
shl
ret
mov
xchg
cmp
pop
jne
or
in
pop
mov
adc
cmp
out
adc
adc
(bad)
fadd
cmp
data16
aad
push
mov
int
cwde
cmp
out
ins
aaa
test
and
adc
jmp
sub
bound
cmp
pop
jne
inc
in
and
cmc
pop
sti
jae
sbb
push
jns
mov
and
scas
into
inc
mov
pusha
add
inc
cwde
jg
rcr
repz
pop
mov
or
repnz
adc
or
mov
(bad)
ffree
movs
outs
sub
fdivr
dec
aam
out
inc
sbb
jmp
xchg
(bad)
pop
fistp
pop
add
add
jb
stc
outs
cld
mov
loopne
(bad)
mov
cmc
(bad)
xor
cdq
pop
into
and
push
xor
add
xchg
jbe
cld
ins
xchg
sahf
jge
jecxz
cmp
push
sar
xor
movs
je
push
add
lods
retf
fmul
push
fwait
jns
(bad)
and
xor
xor
jns
push
ret
aas
mov
ins
out
out
iret
pop
popf
ret
loope
mul
xor
out
pusha
cwde
pop
repnz
inc
out
ja
hlt
or
test
xchg
js
mov
or
cli
or
mov
rcr
jo
sub
cmp
scas
pop
cmp
ror
cmc
push
dec
call
and
jge
mov
mov
(bad)
mov
ss
retf
fild
cwde
rol
xchg
mov
ins
xchg
pop
dec
adc
inc
mov
aad
cmp
jbe
daa
push
es
mov
out
arpl
dec
mov
mov
cmps
(bad)
sbb
fwait
ins
pop
ins
ins
icebp
cdq
push
lods
or
rcl
add
xor
shr
arpl
stos
faddp
retf
push
push
pop
mov
int3
dec
mov
push
shr
rcr
and
pop
pop
inc
test
inc
rcl
cmps
dec
jmp
cwde
das
xor
cmp
retf
sbb
(bad)
nop
call
sbb
sbb
jg
xchg
push
sbb
mov
out
or
and
jecxz
dec
push
xchg
test
bound
dec
sub
(bad)
enter
loop
push
dec
cld
fimul
std
sahf
inc
and
add
pop
fwait
jp
pop
and
cld
scas
or
leave
aam
jo
xor
cli
cs
xor
inc
outs
add
sbb
jmp
(bad)
mov
mov
ja
shl
add
mov
mov
pop
sub
retf
into
lea
test
stc
daa
add
pop
test
js
fwait
cmp
push
pop
rol
and
xor
mov
int
mov
xchg
movs
(bad)
dec
nop
jbe
mov
movs
adc
pop
aam
aaa
ds
push
cmp
arpl
dec
sti
mov
out
(bad)
fdivr
sub
push
inc
cmc
cmp
jge
inc
xor
sub
inc
out
xor
dec
cmp
sahf
ret
push
lahf
jle
popf
push
ret
mov
mov
(bad)
fcmovu
push
xchg
cli
aam
rcl
movs
nop
out
cwde
xlat
popf
push
scas
xor
sbb
scas
or
cld
pop
pop
nop
push
dec
adc
mov
jmp
movs
mov
fistp
adc
rcr
add
fistp
pop
imul
pusha
xor
or
cmp
outs
in
pop
stc
je
into
stos
jne
inc
lock
push
icebp
pop
mov
movs
jecxz
pop
dec
enter
in
and
scas
imul
inc
call
fs
outs
mov
or
mov
dec
fwait
sbb
(bad)
int
clc
cmp
cmp
xor
xchg
push
mov
movs
pusha
(bad)
xchg
or
ficomp
int
dec
retf
inc
into
add
fdivr
fld
xchg
div
aad
cmps
test
mov
jno
adc
dec
mov
xchg
daa
scas
dec
data16
xchg
jecxz
pop
push
push
mov
int3
push
mov
mov
pop
inc
and
jg
mov
xchg
mov
cdq
addr16
mov
ret
into
jbe
lods
jp
sbb
mov
pusha
mov
sbb
fsubr
xor
inc
in
loop
cwde
mov
pop
cdq
add
mov
(bad)
dec
idiv
and
mov
cdq
xor
loop
and
mov
popf
pop
xor
mov
and
jnp
mov
adc
fild
mov
cli
mov
arpl
xor
push
add
mov
aas
std
mov
pop
and
push
mov
dec
mov
test
xchg
mov
mov
inc
push
aas
ins
gs
inc
jmp
neg
mov
and
sbb
mov
push
mov
sti
dec
jmp
test
mov
cdq
adc
jmp
or
not
or
xlat
inc
in
mov
(bad)
mov
jns
jbe
inc
seta
mov
xchg
je
cmovle
por
out
or
imul
mov
icebp
cs
adc
rol
mov
xor
sbb
adc
repnz
or
aad
out
jmp
jno
aam
mov
cld
repz
xlat
lods
push
das
addr16
sbb
dec
pop
stc
out
jae
dec
repz
and
adc
xchg
mov
push
pop
xorps
jp
or
jno
nop
loopne
jb
sbb
push
pop
and
inc
inc
mov
jno
jle
clc
js
mov
sub
cwde
jmp
outs
test
icebp
mov
inc
pop
shl
sahf
gs
jo
xchg
dec
fwait
push
retf
and
sub
and
push
mov
leave
fdivr
dec
and
add
sbb
jmp
hlt
xor
mov
push
dec
lods
push
mov
rol
push
int3
icebp
xchg
xchg
sbb
ins
xchg
pop
dec
jge
xor
push
mov
(bad)
mov
xchg
ins
loopne
dec
js
fwait
int
aaa
push
(bad)
cli
jnp
test
ins
(bad)
pop
xchg
xchg
mov
push
fisttp
xor
jmp
adc
clc
cmps
movs
hlt
jge
arpl
jno
push
imul
pop
addr16
bswap
and
lds
sub
jmp
inc
jmp
cs
mov
in
push
add
jo
adc
(bad)
push
xchg
in
mov
dec
adc
xchg
and
pop
or
sbb
mov
sbb
sbb
push
pushf
inc
xchg
jns
and
cmp
inc
fisub
lods
pop
out
ret
loopne
retf
hlt
and
(bad)
mov
jno
cmp
ret
push
and
cmp
mov
xor
aas
nop
dec
stc
mov
jae
sub
add
ret
test
inc
std
adc
cmp
jle
fdiv
jo
sbb
sbb
rol
rol
and
pop
xchg
(bad)
pop
jp
pop
sbb
shl
stos
imul
sub
into
or
sahf
pusha
(bad)
fcomip
mov
push
add
fdivr
clc
cld
jge
push
xchg
sti
outs
addr16
sti
movs
fnstenv
add
xchg
xlat
cmp
add
sub
adc
jns
cdq
std
xchg
(bad)
shl
shl
push
inc
jne
shl
fisttp
in
mov
loop
sbb
jecxz
in
cdq
movs
sub
daa
mov
sbb
add
out
loopne
push
xlat
lods
arpl
in
add
mov
ret
outs
jno
xchg
jnp
outs
ret
jne
or
pushf
jbe
jae
ds
lods
inc
dec
mov
jbe
sub
fimul
add
aaa
js
push
xor
movs
push
sbb
call
mov
or
adc
fdivr
xor
adc
shl
loop
mov
lea
mov
fistp
int
add
mov
call
xchg
add
outs
mov
nop
cli
or
jne
sub
fnstcw
movs
inc
cmp
sbb
loop
scas
pop
xchg
inc
dec
aaa
scas
stos
(bad)
aas
ins
ds
inc
mov
push
mov
mov
sbb
sub
out
or
retf
pop
popf
xchg
shl
cmp
adc
jmp
jle
aad
sar
aaa
adc
out
jmp
fcom
or
leave
pushf
pop
loope
movs
in
mov
pop
call
(bad)
and
add
push
in
mov
ret
push
in
sub
call
or
sbb
stos
test
jo
xor
imul
nop
out
xchg
leave
ds
call
sar
mul
dec
pop
imul
test
sbb
adc
inc
movs
and
popa
sbb
rol
sub
push
in
pop
addr16
jo
inc
pushf
pop
cli
mov
lock
xchg
das
push
mov
fsub
outs
leave
out
popf
movs
lahf
mov
inc
mov
cld
cmc
xlat
test
cld
mov
shl
sti
loop
std
dec
sbb
dec
jo
jne
mov
sti
ror
sbb
mov
jecxz
jae
(bad)
xchg
jns
ficom
push
jp
adc
mov
jne
dec
stos
push
push
push
popf
fwait
adc
movs
cmp
cmp
push
stc
sbb
fwait
sbb
(bad)
mov
ret
std
jecxz
dec
adc
mov
mov
enter
shl
cdq
xor
aas
int3
add
dec
add
inc
adc
loop
sbb
and
dec
mov
sbb
(bad)
lahf
xchg
sub
mov
inc
mov
mov
xchg
inc
xor
inc
clc
xor
xchg
adc
ror
(bad)
bndldx
mov
jmp
stos
jmp
aad
xchg
stc
bound
lea
jno
test
sub
retf
cmp
jns
call
mov
scas
pop
cli
pop
or
sbb
cld
hlt
imul
sbb
pop
xlat
lock
test
mov
(bad)
mov
push
ds
scas
rcl
sub
pop
xor
inc
sbb
sub
(bad)
push
outs
pop
adc
sti
push
(bad)
xor
jl
or
inc
add
imul
sub
gs
add
aad
(bad)
push
cmp
fmul
out
sbb
imul
add
dec
xchg
arpl
inc
add
sub
(bad)
cmp
stc
mov
dec
cmps
std
in
sbb
das
cmp
push
movs
jp
jge
stos
sti
ja
dec
retf
daa
ret
sbb
pop
ror
call
adc
aaa
mov
xchg
cli
je
es
retf
data16
cmp
fsin
sahf
push
std
push
inc
sbb
out
out
xchg
inc
push
mov
popf
sub
push
out
enter
or
sti
shl
sub
jl
and
call
xchg
xchg
adc
xchg
inc
mov
pop
xstore-rng
cmps
les
loope
pop
jae
test
sub
das
jb
popf
cs
xchg
pop
dec
mov
lock
push
repnz
test
sbb
cmp
push
add
xor
scas
jnp
aaa
fist
sub
add
cmp
addr16
mov
pop
xor
data16
jno
cdq
sub
call
mov
push
and
adc
xchg
mov
ja
(bad)
in
bound
jb
imul
xor
pop
pusha
lds
cmp
mov
dec
cmp
inc
call
sbb
in
and
lods
push
cmp
cmps
or
xor
mov
dec
dec
pop
push
pop
ins
push
pop
xor
jo
pusha
push
push
or
jbe
or
fnstenv
fnstsw
sbb
dec
inc
mov
jb
aad
mov
jae
rcl
inc
add
rcl
sbb
and
outs
pop
inc
dec
in
mov
jmp
push
sahf
xchg
adc
mov
sti
cmp
aaa
add
cmp
add
or
jecxz
(bad)
enter
std
mov
inc
inc
or
pop
jge
int
movs
imul
outs
mov
pop
inc
xchg
inc
xor
xchg
or
(bad)
sub
es
sub
dec
sub
push
add
inc
add
push
enter
add
mov
mov
jnp
pop
jg
fcmovu
hlt
adc
or
ds
js
enter
sbb
cli
neg
scas
mov
daa
cmps
cld
cmp
pop
sub
or
pop
pop
mov
and
scas
mov
shr
mov
aaa
jge
rcl
ret
push
out
adc
jae
xchg
sub
das
jmp
sbb
mov
pop
stos
mov
mov
and
xchg
imul
lods
cmps
sub
test
cmps
rol
xlat
lds
icebp
inc
fidiv
out
mov
repz
sub
add
fidiv
(bad)
adc
fwait
push
(bad)
out
cmp
sbb
(bad)
push
sti
xchg
push
sti
mov
pop
xor
div
fsubr
rol
cmp
sub
popf
sar
aas
inc
loop
jmp
jp
mov
mov
mov
mov
fisub
or
cs
popa
jno
sbb
test
jecxz
pop
sub
clc
pop
xor
jns
loop
mov
sub
hlt
push
sti
xchg
enter
sbb
pop
sahf
add
pop
icebp
(bad)
or
clc
cmp
stos
sub
hlt
nop
jb
mov
pop
push
sub
pop
mov
push
xor
jp
pop
pop
sbb
sub
(bad)
jbe
xor
mov
push
push
fnstcw
test
aad
push
mov
dec
scas
cli
mov
mov
(bad)
in
out
mov
sar
fmul
stos
retf
rcl
jmp
out
adc
(bad)
enter
sbb
sbb
xchg
jge
popa
ror
fucomip
mov
jno
cmp
sbb
mov
fucom
pop
fnsetpm(287
fimul
(bad)
daa
sahf
mov
test
lock
in
xor
aam
pop
fscale
adc
stos
fcomp
xor
scas
inc
push
add
out
xor
(bad)
xchg
jl
xchg
or
je
sbb
adc
xlat
movs
mov
dec
lock
inc
and
fdivr
push
ret
mov
std
fimul
sar
pop
push
call
pop
and
retf
add
cld
push
mov
xor
cmp
pop
out
int
lahf
in
adc
(bad)
loop
mov
cmps
sub
xchg
and
sub
nop
sbb
stos
sbb
lahf
mov
inc
ins
add
fwait
icebp
(bad)
pop
ds
xor
in
mov
in
mov
hlt
fwait
ds
pop
loopne
cmc
inc
mov
ds
aam
scas
mov
mov
(bad)
mov
cmp
lock
add
or
mov
inc
fdiv
push
push
lods
inc
mov
pop
int
jecxz
push
mov
pop
inc
and
adc
shl
(bad)
lods
xchg
xchg
xor
mov
scas
add
inc
mov
adc
mov
or
jg
not
rcr
(bad)
sar
in
push
adc
stos
sub
jbe
ins
(bad)
(bad)
and
icebp
push
into
fcmovu
pushf
push
push
dec
pop
push
add
sbb
data16
les
test
add
aaa
imul
in
fadd
sub
js
and
imul
or
pop
call
imul
or
stc
int3
shr
add
cmc
mov
std
cli
pop
mov
sbb
out
pushf
addr16
ret
pushf
outs
aaa
call
mov
rol
dec
repz
outs
enter
mov
mov
rcl
push
pop
out
and
mov
icebp
dec
cmp
scas
into
in
aam
jbe
cwde
mov
mov
mov
lods
pop
mov
sbb
jge
mov
add
(bad)
cli
lea
out
cdq
pop
mov
ds
sahf
daa
aas
mov
cmps
es
dec
sub
pop
xlat
fidiv
ds
fincstp
dec
jle
and
mov
adc
sbb
leave
sub
cdq
ja
jo
out
or
fs
mov
jns
sar
pushf
xchg
pop
mov
jge
mov
popf
rcr
(bad)
push
xchg
rol
mov
aaa
dec
dec
sub
mov
mov
int
cmp
inc
fs
jmp
imul
pop
pop
(bad)
push
enter
scas
jmp
xchg
sbb
push
jb
adc
dec
cmp
cmp
pop
std
mov
cs
pop
dec
cmc
xor
mov
rol
test
dec
pop
mov
jns
icebp
push
or
fiadd
jg
addr16
clc
inc
pop
in
add
dec
in
or
push
and
retf
inc
jle
push
into
aaa
daa
xchg
add
sbb
cmp
dec
retf
fisub
fcomp
mov
cwde
movs
mov
pop
retf
xchg
sub
popa
sahf
test
mov
inc
popa
cmp
(bad)
and
mov
sbb
or
inc
cmp
icebp
mov
jnp
inc
shr
mov
sbb
sub
jbe
xor
pop
add
lock
jge
adc
sahf
ret
lock
shl
sar
lods
jae
int3
leave
jae
push
cmp
pop
aaa
loopne
jnp
xchg
movs
push
xchg
adc
cdq
inc
jecxz
mov
fisubr
dec
sub
mov
jnp
stc
out
or
mov
addr16
mov
or
mov
dec
adc
push
dec
loop
jmp
sub
fcomp
fisub
pushf
(bad)
cmp
shl
loope
pop
mov
pop
ret
cmc
das
cmp
stc
pop
and
sbb
sub
mov
cmps
imul
push
ja
ins
jle
dec
fadd
(bad)
jno
inc
xchg
stos
mov
js
adc
or
(bad)
xor
add
mov
test
add
mov
cld
ins
xor
mov
mov
jae
cmps
in
ffree
arpl
sbb
addr16
add
sbb
iret
sahf
imul
out
(bad)
push
mov
pop
aam
jnp
push
cs
lods
cwde
scas
in
fstp
(bad)
loopne
movs
es
sbb
in
daa
clc
into
xor
outs
fistp
pop
jno
lods
and
xchg
or
add
xchg
mov
add
push
in
push
mov
loope
pop
dec
scas
inc
mov
pop
das
cli
out
pop
daa
inc
adc
jb
icebp
ja
pop
mov
lahf
outs
or
inc
idiv
inc
pushf
dec
daa
cmp
push
inc
push
inc
dec
pop
movs
xchg
gs
jmp
imul
pusha
xchg
xchg
sub
mov
ins
pop
fild
mov
pop
ss
push
fisubr
pop
stos
movs
sti
adc
int
jmp
inc
enter
xor
push
fisubr
push
xor
jno
jo
ins
popf
in
scas
sub
in
sub
dec
push
pushf
repz
scas
xchg
inc
xor
mov
icebp
xchg
cmps
test
cmp
mov
iret
pop
add
sbb
fucomi
call
and
add
pop
sbb
in
(bad)
in
inc
std
cmps
dec
dec
lds
lock
in
adc
clc
push
xor
add
pop
imul
xor
or
pushf
mov
pop
out
imul
rcr
push
ins
shr
in
shl
push
fadd
push
mov
mov
xlat
mov
fcmovne
sahf
mov
clc
jnp
push
mov
inc
cs
mov
mov
add
xor
mov
push
push
jmp
test
or
in
mov
arpl
sbb
fwait
enter
add
mov
mov
icebp
add
psrlw
push
pop
dec
(bad)
add
pop
lds
ja
adc
cmp
xor
mov
data16
lods
movs
icebp
mov
push
scas
dec
dec
(bad)
jns
rol
(bad)
int
lahf
mov
scas
xchg
scas
xor
pop
sub
lds
add
sub
xor
push
fs
inc
mov
add
push
adc
lock
popa
in
sub
movs
push
push
or
xchg
pop
jmp
mov
jb
dec
or
int3
sar
sub
cmp
div
out
or
ret
stos
(bad)
push
push
leave
push
xchg
cmp
mov
mov
test
ins
stos
(bad)
iret
ja
xchg
(bad)
inc
add
dec
add
clc
adc
stos
add
jg
mov
pop
ds
hlt
pop
xchg
sti
pop
rcr
into
pop
out
and
bound
sahf
lods
sbb
xlat
dec
push
inc
add
jmp
dec
repnz
pop
mov
sahf
aad
data16
pop
push
mov
in
or
pop
sub
test
sub
cmp
adc
mov
mov
pop
cli
test
mov
mov
pusha
cdq
dec
inc
mov
fcmovu
(bad)
sub
xchg
test
jle
lahf
xchg
addr16
or
das
lahf
or
fnstsw
out
xchg
adc
ret
mov
shr
ins
mov
mov
push
arpl
stc
sbb
test
and
and
or
jmp
ja
je
outs
in
jae
stos
xlat
or
je
mov
stos
cmp
push
xchg
jbe
stos
xor
jb
xor
mov
pop
sbb
pop
cmps
pop
jne
xor
and
xchg
push
pop
sbb
jae
inc
inc
cmp
clc
mov
std
fldenv
and
mov
gs
inc
dec
(bad)
push
mov
retf
xchg
push
cmps
popa
ins
mov
sti
pushf
adc
and
jne
dec
mov
xchg
cmp
push
fldcw
mov
out
ret
lahf
iret
xchg
cmp
add
sbb
movs
cli
sti
fnstcw
daa
retf
pop
sub
pop
outs
in
push
je
call
mov
add
xchg
rcl
fwait
mov
popf
fs
xor
daa
js
(bad)
pushf
out
mov
(bad)
mov
pop
jns
(bad)
nop
jl
jbe
outs
inc
adc
stos
repnz
cmp
add
std
(bad)
mov
jmp
iret
fadd
jmp
or
mov
xchg
sahf
mov
xchg
jmp
add
sub
out
jl
jmp
cmp
sti
addr16
rol
fidivr
cmp
sbb
ins
or
push
add
mov
push
sub
mov
mov
out
lahf
popf
sub
sbb
cmp
fbld
(bad)
into
loopne
push
mov
jl
mov
mov
jmp
nop
fld
movs
mov
leave
test
push
(bad)
mov
sbb
inc
jge
mov
ret
test
cmp
jne
(bad)
pushf
push
or
and
ficomp
mov
jmp
lea
jg
(bad)
mov
lea
adc
adc
sbb
inc
sub
or
jmp
mov
fidivr
movs
adc
ret
(bad)
cwde
cmc
push
jo
add
jmp
add
shl
and
lahf
(bad)
fs
sub
mov
jmp
mov
xchg
sub
test
jbe
cmp
std
sub
jle
mov
ins
adc
mov
mov
test
imul
aaa
test
sub
push
ja
out
gs
test
or
ins
cmp
adc
ficomp
xor
das
mov
test
movs
adc
iret
xlat
mov
pop
test
repnz
fmul
les
inc
or
test
push
test
jnp
retf
(bad)
imul
xor
xchg
daa
int
pop
xor
jns
or
inc
aam
push
sbb
xchg
inc
out
out
lea
(bad)
fsubr
cmp
je
lock
scas
or
cs
cs
das
fbld
and
sub
lods
or
and
adc
pop
loopne
(bad)
movs
mov
gs
(bad)
(bad)
retf
in
dec
ss
and
sub
fs
pop
loop
pop
aam
push
push
in
mov
stos
popa
xchg
(bad)
das
lock
test
adc
pop
adc
cmp
sub
cmps
ss
cmp
lea
inc
out
(bad)
test
jnp
adc
xlat
add
in
inc
or
enter
nop
mov
push
das
jle
and
sbb
cs
cmc
imul
or
mov
fadd
dec
xor
push
or
sub
cs
mov
nop
outs
enter
sti
fwait
xor
cmp
cmp
cld
pop
lods
mov
or
pop
jno
enter
sub
daa
jno
gs
out
loop
out
inc
push
rol
xor
out
mov
jge
jb
(bad)
test
sub
jae
pop
int3
test
js
cs
mov
(bad)
xchg
popf
push
pop
sub
shr
add
sti
sbb
push
pop
jb
or
retf
jmp
mov
inc
test
mov
adc
pop
lods
cwde
aad
inc
adc
xchg
outs
jo
aam
cmp
mov
push
out
mov
mov
add
sbb
and
in
adc
pop
adc
or
push
xor
or
test
pushf
dec
xchg
clc
je
ficomp
dec
xor
inc
mov
(bad)
pop
fsub
xor
cmp
(bad)
fiadd
iret
iret
mov
test
inc
jmp
ss
mov
scas
add
in
call
mov
add
mov
push
and
and
out
add
xchg
adc
int3
xchg
jnp
push
xchg
mov
clc
fdivr
mov
pop
inc
ret
(bad)
jo
sub
(bad)
jbe
out
mov
test
stc
jno
push
in
lds
js
sar
jb
add
icebp
xor
retf
int3
lds
mov
movs
pop
push
fstp
jo
fmul
(bad)
ret
cmp
mov
mov
je
mov
jecxz
mov
dec
(bad)
pop
cmp
xchg
fmul
frstor
lds
and
aam
popa
ret
pop
xor
xchg
dec
mov
push
pop
fcom
inc
adc
nop
(bad)
js
cmp
cmp
pop
mov
xchg
addr16
push
jmp
push
addr16
lahf
cmp
fwait
ins
or
icebp
push
sbb
xchg
mov
inc
xchg
pop
sub
add
iret
ret
shl
stos
or
mov
cmp
add
jno
sahf
cmp
out
jnp
(bad)
outs
xchg
xlat
inc
ins
clc
das
int
xchg
jno
daa
cld
js
xor
pop
pop
loope
in
outs
inc
in
pop
dec
jb
jecxz
fild
mov
jge
mov
xchg
pop
push
mov
mov
leave
imul
lods
stos
push
cld
call
mov
cmps
inc
sti
add
out
icebp
lock
popa
and
mov
dec
lea
mov
in
push
sub
pop
addr16
aam
(bad)
imul
inc
push
ins
aad
(bad)
jmp
sbb
imul
ret
sbb
pop
ficom
add
fld
pop
in
outs
into
lds
jl
enter
push
neg
cmps
rcl
xchg
arpl
retf
clc
mov
pop
push
dec
mov
mov
fmul
inc
push
adc
cmp
dec
pop
inc
and
jbe
jmp
ret
and
loope
add
clc
xor
(bad)
xchg
jecxz
daa
sahf
clc
ins
push
jnp
jbe
cmps
int
mov
ins
push
push
aas
dec
in
stc
add
dec
mov
outs
adc
test
mov
clc
and
cwde
cmpps
(bad)
sbb
mov
inc
test
aam
loope
loop
shl
call
sbb
mov
adc
enter
gs
cmp
daa
fwait
inc
push
test
shl
push
pop
push
mov
(bad)
ret
jne
jmp
sub
pushf
dec
lods
in
es
lock
fwait
(bad)
in
clc
jne
clc
cwde
mov
out
and
inc
(bad)
xlat
out
or
and
push
inc
add
pusha
out
xor
or
pusha
pop
scas
fcomp
add
cmp
fcom
mov
lds
fnstcw
xor
pop
sub
mov
ret
hlt
jns
adc
add
into
test
push
jg
xchg
sub
xor
not
xchg
sbb
inc
jne
mov
lods
into
test
mov
cs
out
xor
clc
rol
scas
lods
mov
jl
mov
(bad)
fldenv
cdq
in
xchg
adc
cmps
(bad)
mov
jmp
sub
popf
les
jl
jbe
not
jge
xor
loop
leave
imul
push
in
in
add
and
or
movs
in
mov
call
(bad)
int
jge
jmp
ja
movs
xor
cdq
dec
pusha
jle
xchg
jmp
pop
sbb
or
jmp
in
ret
sbb
fwait
push
fisttp
add
out
aaa
mov
inc
in
mov
push
jns
push
mul
add
inc
cmp
aam
leave
xchg
jp
jecxz
loop
test
call
mov
ja
sbb
aad
and
jne
push
sub
mov
dec
scas
(bad)
adc
cs
and
hlt
test
sub
add
jmp
push
xchg
into
fiadd
clc
call
aaa
(bad)
das
adc
lds
ins
and
jl
addr16
jb
(bad)
push
push
repz
add
xor
stos
fstp
sub
cld
arpl
or
xchg
fistp
inc
push
fdivr
rcr
data16
add
xor
imul
jge
or
imul
ins
stc
jp
cmps
xor
test
out
mov
sbb
int
cmp
lods
and
dec
out
cmp
mov
dec
xchg
popa
ss
int
std
inc
and
cdq
cld
cmc
mov
sub
lds
jb
iret
scas
sbb
shl
pop
pop
out
or
jmp
fwait
ja
push
sbb
in
je
xchg
adc
xchg
xchg
mov
dec
popa
pop
stos
aam
jmp
enter
cmp
lods
fcom
push
(bad)
jmp
int
jnp
div
xlat
rcl
xlat
push
adc
sbb
push
push
test
stc
enter
stos
iret
adc
cmp
sub
repz
(bad)
inc
stos
xor
aam
test
add
cdq
inc
out
add
(bad)
mov
push
imul
daa
cmp
stc
or
daa
jo
loop
push
mov
jp
xchg
cmp
mov
jle
ins
ins
jne
dec
fsubr
pop
sub
ins
push
inc
jmp
bound
sub
pop
jb
pop
inc
dec
jg
push
cmp
fsub
cmps
or
cs
xchg
inc
loop
add
push
hlt
pusha
mov
(bad)
out
movs
or
sbb
ror
pop
xor
mov
iret
xchg
loop
neg
repz
aaa
daa
or
icebp
lods
sar
mov
(bad)
jle
add
push
mov
rol
icebp
mov
aaa
mov
outs
mov
lods
retf
aad
adc
out
fmul
add
clc
pop
jmp
dec
addr16
mov
jns
out
inc
cs
ins
sbb
jl
or
sbb
add
pop
(bad)
shl
mov
loop
jmp
pop
cmps
and
lods
fmul
iret
pop
pop
pop
xchg
jp
not
call
pop
dec
mov
and
jne
icebp
mov
mov
mov
pop
inc
push
add
mov
jl
aad
outs
sbb
mov
into
dec
jne
jecxz
stos
xor
sbb
in
xlat
movs
push
cmp
shr
jo
pop
sub
inc
and
mov
mov
push
gs
aaa
nop
int3
in
sub
cmp
mov
gs
lock
xchg
js
jge
ss
add
inc
inc
mov
into
pop
adc
iret
inc
lahf
add
fdivrp
inc
sbb
test
jle
sub
and
fsub
std
jae
jnp
push
not
xchg
jmp
dec
leave
mov
addr16
sub
scas
pop
dec
loopne
sbb
repz
cmps
test
mov
jnp
pop
dec
cs
xor
into
or
imul
cdq
push
imul
iret
mov
jns
in
push
dec
or
adc
cmp
mov
addr16
mov
mov
jno
cld
arpl
hlt
xchg
cmc
mov
push
(bad)
(bad)
pushf
gs
fistp
cmps
mov
inc
int3
ror
jmp
enter
outs
(bad)
or
pop
(bad)
ror
sub
or
(bad)
scas
js
inc
mov
aam
fwait
daa
add
into
sub
xchg
or
jbe
test
push
xchg
lds
xor
test
jge
xlat
mov
jbe
cmp
aad
or
jns
mov
xlat
stos
xchg
mov
mov
loopne
and
test
outs
dec
push
lahf
xor
jmp
cmps
daa
ret
sub
dec
pop
ret
(bad)
sbb
data16
mov
and
aam
int
movs
xor
nop
inc
and
xor
push
mov
addr16
fdivr
jecxz
loop
push
sub
pop
std
inc
in
and
inc
jo
(bad)
xor
inc
mov
and
iret
mov
fwait
mov
lock
pop
mov
fisub
aam
or
sbb
xchg
aas
pushf
jmp
test
es
cmp
test
mov
cmc
popa
call
std
(bad)
(bad)
movs
and
je
mov
inc
jae
add
aaa
in
pop
fcom
jmp
call
xchg
inc
xchg
fadd
stc
std
(bad)
xor
mov
out
mov
sahf
fld
sub
shr
int
and
push
push
cdq
cmp
nop
xchg
xor
and
mov
add
xor
fadd
xor
pop
mov
ror
pop
out
cmps
add
xchg
loopne
lea
inc
jmp
sbb
add
mov
push
mov
ds
dec
shr
(bad)
push
dec
xor
outs
pop
fcomp
dec
pop
loopne
or
and
inc
jmp
xor
mov
sub
div
inc
cmps
mov
inc
ss
fidiv
out
xchg
test
fcmovne
cli
push
fs
rol
pop
cld
out
or
fisub
cmc
aas
pop
dec
push
mov
iret
lahf
sub
sub
sti
jns
call
rol
cmc
xor
jnp
push
push
fldenv
movs
shr
rol
and
dec
repnz
or
or
hlt
and
ja
out
mov
mov
push
gs
dec
sub
leave
cmp
mov
outs
scas
mov
pop
ret
pushf
sbb
bound
icebp
repnz
jo
xchg
cmp
das
jle
pop
jb
or
push
ja
(bad)
dec
jmp
mov
sub
dec
(bad)
loop
xchg
mov
sub
cmps
mov
dec
cmps
push
jnp
shl
not
repz
repz
or
pop
out
xor
leave
ret
and
scas
jb
out
mov
mov
stc
pop
movs
test
jne
retf
cmps
mov
jo
jp
mov
repz
push
imul
psubb
cdq
xchg
xchg
dec
dec
mov
mov
imul
dec
lahf
in
test
sub
shl
and
movs
jae
or
cli
xor
jl
ftst
clc
mov
xchg
push
adc
outs
cmp
sahf
fmul
or
retf
and
push
fmulp
mov
mov
dec
add
ins
and
lds
add
aam
test
pop
movs
aam
cmp
arpl
ss
cmp
cmp
fidiv
call
mov
bound
into
ror
fstp
push
iret
mov
mov
mov
jmp
or
cmp
(bad)
cmp
jmp
dec
mov
push
test
into
jo
enter
xor
mov
out
mov
cmp
xor
loop
push
push
xor
cmps
std
dec
ret
adc
out
jno
movs
and
sub
xor
add
sub
icebp
int
cs
cmc
push
push
scas
jb
jno
xor
out
cmp
bound
cmp
mov
shl
stos
mov
push
sahf
dec
in
lds
jae
mov
dec
add
mov
sbb
cmp
repnz
mov
xor
sar
ret
inc
xchg
popf
aad
cmc
test
addr16
int
iret
arpl
(bad)
sar
xchg
ins
mov
je
test
dec
push
dec
out
ror
in
test
mov
xchg
mov
jecxz
shr
cli
fdivr
and
ficomp
adc
bound
arpl
adc
sti
pop
sub
pop
aaa
movs
clc
sub
rol
gs
dec
lods
rcr
out
xor
and
leave
pop
outs
add
or
pop
xor
dec
jmp
cli
jns
test
sbb
and
stc
cmps
sar
ret
cld
cli
adc
imul
pusha
test
retf
push
data16
jo
cli
jns
jb
add
pop
mov
jg
inc
dec
hlt
pop
cmp
dec
(bad)
cwde
sub
pop
adc
retf
loopne
ret
lods
xor
shl
jecxz
sub
icebp
cmp
jb
js
mov
daa
fmul
xor
jmp
ficomp
adc
mov
int3
outs
(bad)
cld
arpl
fcomi
scas
ret
pop
jbe
push
call
ds
rol
loope
mov
xchg
push
aas
xchg
(bad)
add
scas
jl
pop
push
imul
inc
sub
mov
mov
pop
sub
mov
fsub
and
hlt
cmc
es
les
in
pushf
jge
hlt
jge
(bad)
mov
mov
jle
call
jae
loopne
push
mov
jp
xor
mov
add
cmp
adc
jle
sbb
push
push
test
sbb
cld
dec
in
inc
ins
aam
loope
push
xor
icebp
mov
iret
push
dec
(bad)
call
mov
and
inc
aas
lock
or
aad
mov
sar
sbb
pop
inc
fist
jmp
rcr
ret
sbb
das
mov
jo
mov
push
xchg
or
dec
iret
mov
xor
test
test
fld
inc
sbb
jg
dec
mov
cs
inc
aam
and
and
inc
jo
xchg
mov
scas
inc
push
mov
jnp
inc
outs
mov
bound
sahf
xchg
js
and
lds
xchg
out
sub
mov
sbb
mov
and
fucomip
push
aam
jb
jmp
lds
push
mov
xor
(bad)
call
addr16
xchg
cli
pop
aaa
pusha
in
dec
cmp
popa
inc
mov
mov
xlat
xor
jecxz
sbb
pop
ss
sub
jmp
sub
ds
popf
mov
pop
arpl
mov
sub
repnz
fnsave
test
and
jl
sub
xor
adc
add
jno
pop
cli
data16
push
mov
or
pop
clc
pop
shr
mov
loop
data16
nop
test
xchg
adc
hlt
dec
ror
ins
xor
push
dec
dec
cdq
rol
rol
cdq
jns
dec
dec
push
daa
cmp
pop
mov
mov
fadd
adc
dec
jne
mov
mov
or
fnstenv
rol
cmp
xchg
mov
sbb
push
inc
clc
imul
add
mov
add
imul
shl
cmp
jo
dec
jnp
ret
jecxz
mov
cld
push
dec
push
daa
addr16
cli
add
adc
cmp
and
fdiv
and
call
les
sti
cmc
adc
pand
mov
mov
cmp
jle
adc
mov
mov
dec
cli
or
cwde
mov
lods
mov
sahf
sub
test
sub
xchg
lock
(bad)
jns
sbb
movs
pushf
sub
add
int
inc
dec
push
cmc
push
out
outs
xchg
arpl
jge
sub
inc
shl
jmp
add
(bad)
ds
jae
jge
pop
xor
loopne
stos
push
hlt
jbe
push
mov
rcl
and
mov
push
mov
jns
cmp
ins
jno
xchg
call
sbb
pop
sahf
sahf
std
ins
cmps
cmp
aad
movs
movs
arpl
rol
test
fldcw
aas
mov
cmp
mov
ret
sub
adc
cmp
sub
mov
xor
jmp
into
add
jp
out
sbb
cdq
fwait
sub
xchg
ja
aas
xchg
lock
repz
stc
mov
mov
cmp
(bad)
sti
es
mov
(bad)
jp
mov
mov
or
jmp
xor
pushf
aam
xchg
repnz
mov
xchg
sub
ja
nop
add
rol
and
mov
scas
mov
xor
or
(bad)
lock
stc
sbb
or
(bad)
mov
addr16
loop
adc
outs
sub
xor
ret
fwait
and
shl
mov
sub
inc
(bad)
stos
and
and
pusha
sub
mov
add
and
add
inc
cmc
pop
jno
fild
das
pushf
repz
loope
(bad)
adc
jns
cwde
xor
jmp
and
test
aam
fdivr
repnz
sar
pop
inc
(bad)
jmp
mov
lahf
daa
call
or
xchg
add
mov
push
sub
adc
jle
push
adc
ins
pop
sub
fsubr
jl
test
push
pop
inc
mov
inc
inc
mov
ins
ja
adc
xchg
fistp
imul
js
cs
mov
into
rcl
and
jl
sbb
movaps
dec
add
and
xchg
sub
call
test
jle
or
enter
mov
cdq
test
shl
into
fistp
shl
cmc
cld
stc
pop
mov
jmp
ret
mov
scas
jbe
test
sbb
lahf
mov
mov
mov
call
xlat
fmul
or
mov
mov
sbb
dec
in
rcr
daa
loope
in
ror
dec
jnp
mov
std
nop
stc
jecxz
push
sbb
repz
mov
add
mov
pop
cmp
adc
loopne
test
pop
popa
mov
cmp
stc
cli
add
dec
xor
pop
mov
mov
jbe
repz
(bad)
jp
cld
xchg
sbb
xor
fsubr
mov
dec
repnz
std
sti
jnp
and
xor
mov
fisubr
jge
rcl
into
sbb
xchg
push
retf
leave
aad
mov
out
cmps
in
loop
xchg
xchg
dec
out
jmp
hlt
mov
sub
pushf
jb
or
xchg
daa
popa
pop
std
mov
add
mov
arpl
leave
mov
or
sbb
or
int
sub
add
push
sub
(bad)
mov
jmp
pop
or
xor
xor
shl
(bad)
outs
cmc
rcl
cmps
(bad)
mov
out
xchg
adc
mov
pop
addr16
mov
push
stc
jae
addr16
mov
leave
lahf
sub
jnp
ja
test
retf
adc
mov
loop
push
imul
call
(bad)
rcl
mov
add
scas
dec
pop
popa
jnp
stos
mov
retf
jg
mov
lock
sbb
adc
int
shr
loope
cmp
mov
inc
call
mov
loop
lea
pop
gs
stos
shl
dec
add
pop
mov
sub
fwait
mov
sbb
scas
stc
arpl
inc
fidiv
jle
jl
pop
fstp
test
call
or
or
lock
xchg
aas
popa
add
cli
xchg
icebp
iret
hlt
les
test
in
cmp
push
repnz
jae
cli
sub
push
fld
inc
into
inc
and
jecxz
add
cmp
xor
clc
xchg
pop
fsub
or
shl
mov
mov
cmp
(bad)
push
jle
enter
repz
ins
dec
jmp
addr16
gs
lahf
jle
xchg
imul
cmp
(bad)
test
jecxz
xor
pop
push
mov
sub
xchg
xchg
icebp
dec
mov
xor
xchg
loope
mov
outs
cli
loop
clc
ss
movs
les
ror
sbb
xchg
push
int
bound
clc
dec
xchg
dec
xchg
in
mov
push
das
or
jmp
fiadd
adc
jne
out
and
ja
out
jo
xor
fwait
das
retf
ret
xchg
sar
push
rcl
inc
ja
inc
push
call
jmp
mov
retf
jbe
int3
xchg
dec
push
or
add
inc
lds
cdq
mov
test
pop
cmps
dec
xchg
jns
iret
retf
push
ret
jnp
(bad)
aaa
mov
inc
iret
das
aaa
in
aaa
cmc
sar
jno
pop
sub
retf
or
adc
xchg
jecxz
jmp
ss
jno
add
inc
icebp
ret
push
or
jnp
and
jl
add
stc
add
jmp
fsubrp
sahf
jnp
test
mov
stos
mov
add
arpl
push
mov
dec
int
or
inc
into
and
push
test
inc
repz
adc
pop
rol
push
jl
retf
sar
push
fdiv
shl
mov
pop
xor
enter
sub
mov
or
popa
dec
and
mov
loop
movs
dec
addr16
daa
xor
mov
xor
pop
fdiv
and
xor
add
cwde
daa
mov
retf
retf
jp
loop
inc
jno
jo
pop
mov
retf
mov
dec
add
push
bound
inc
inc
mov
push
or
mov
mov
repnz
mov
inc
or
icebp
sub
and
fcomp
adc
(bad)
mov
pop
fld
jge
push
(bad)
lods
out
mov
lods
ret
adc
mov
aam
inc
(bad)
sar
sub
sub
ds
adc
in
pop
xorps
and
test
movs
xchg
push
adc
cmps
and
loopne
jecxz
cdq
add
cmp
xchg
jp
hlt
lods
cmc
mov
ret
cld
jmp
into
sbb
dec
popf
adc
arpl
aas
or
inc
pusha
pop
movs
xor
cmp
test
mov
pop
dec
mov
lea
push
out
ret
popf
imul
xchg
push
dec
xchg
icebp
into
or
in
rcr
mov
fs
sub
test
adc
sahf
sbb
fs
rol
sbb
(bad)
retf
test
cs
mov
pop
mov
sub
sbb
push
cmc
inc
subps
retf
popf
shl
shl
dec
pminsw
inc
push
pushf
fmul
pop
xchg
lds
cli
(bad)
cmp
inc
clc
mov
xchg
outs
adc
mov
mov
retf
dec
mov
stc
bound
jno
push
xchg
stos
pop
movs
pushf
inc
pop
and
inc
out
int3
out
inc
lahf
adc
or
xchg
xchg
push
sbb
mov
sbb
aaa
adc
(bad)
ins
cmp
retf
jmp
cmps
sbb
clc
idiv
sbb
and
mov
jb
(bad)
(bad)
nop
aam
mov
outs
not
scas
(bad)
scas
shl
aaa
jb
sub
retf
push
idiv
sub
leave
lock
mov
arpl
sbb
retf
sub
lock
or
mov
and
fwait
pop
mov
dec
mov
sbb
lock
and
xchg
out
cmp
aam
fwait
xchg
or
xchg
cs
pop
test
push
cld
inc
loop
adc
lock
ror
cli
mov
neg
pop
int
mov
adc
sbb
xchg
inc
mov
inc
mov
cdq
xor
mov
loopne
jmp
adc
mov
shl
xor
fs
ins
xlat
xor
cdq
pmuludq
pop
ret
push
inc
add
call
pop
sub
jmp
push
mov
ins
mov
mov
inc
enter
sbb
movs
dec
aad
xor
dec
cmps
fimul
cmp
sub
sar
(bad)
mov
out
shr
cmp
adc
adc
pop
in
xchg
sub
mov
mov
arpl
mov
ds
ss
std
mov
push
out
shr
rcr
and
(bad)
repnz
addr16
mov
scas
dec
stos
sbb
ins
mov
push
in
enter
sbb
sub
movs
adc
cld
adc
(bad)
call
std
(bad)
nop
(bad)
stc
dec
loope
mov
shr
mov
sub
js
jmp
das
cmp
xchg
gs
(bad)
lods
loope
push
add
and
jecxz
push
ss
xor
sub
jge
sbb
mov
test
js
(bad)
int
movs
pushf
inc
test
cwde
push
in
mov
jp
test
xor
and
xchg
push
ret
mov
pop
inc
movs
out
test
(bad)
icebp
jbe
jmp
sbb
fistp
fidiv
push
mov
mov
(bad)
psrld
ficomp
dec
add
cmp
shr
stc
movlps
dec
ins
or
mov
aas
adc
ja
dec
repnz
pushf
lahf
cmp
pop
push
ds
gs
or
jno
mov
leave
(bad)
mov
mov
jne
out
out
icebp
popa
(bad)
mov
push
sbb
sbb
xor
(bad)
pop
xor
jae
ret
movs
adc
pop
(bad)
and
fincstp
retf
sahf
arpl
(bad)
push
bound
shl
mov
mov
lods
iret
ret
lahf
pop
test
jg
pop
cld
cmp
lds
popa
sub
das
mov
ins
pop
xchg
and
xchg
pop
jge
sbb
mov
jge
ficom
call
mov
sub
jnp
adc
inc
mov
jmp
fild
outs
xlat
jnp
neg
fimul
dec
icebp
sahf
dec
test
imul
adc
test
sahf
pcmpeqb
or
mov
mov
dec
cld
pusha
push
jmp
mov
mov
ins
fld
push
dec
or
add
clc
xchg
add
icebp
loop
sub
bnd
mov
jns
(bad)
lahf
push
mov
ss
xor
and
outs
popa
enter
inc
lea
mov
push
xchg
jnp
push
pushf
dec
mov
lods
nop
and
push
bound
push
add
pop
jb
mov
arpl
jae
pop
and
inc
push
fcmovnb
fwait
mov
sub
(bad)
sar
xor
or
and
(bad)
push
ins
ret
les
jge
in
or
(bad)
lock
stos
mov
or
dec
xchg
nop
and
pop
mov
add
jecxz
xrelease
in
push
push
cmp
(bad)
adc
sbb
xchg
scas
cmp
aas
imul
outs
(bad)
stos
mov
leave
xor
mov
or
lock
mov
jno
mov
mov
inc
and
cmp
hlt
or
sub
iret
test
jns
imul
jns
inc
mov
add
pop
je
cmps
cmp
jle
in
jge
push
sub
push
(bad)
aas
shl
in
push
sbb
pop
xchg
add
and
inc
xor
in
or
cmps
mov
push
sub
pop
mov
icebp
push
shr
call
fdivr
in
dec
(bad)
mov
fist
pop
cmp
mov
jle
add
xchg
push
sbb
cmps
sbb
repz
inc
scas
nop
push
push
mov
sbb
pop
loopne
cli
sbb
loopne
lods
stos
out
pop
ret
shr
pop
or
(bad)
das
xor
pushf
(bad)
jecxz
xor
vmulpd
fnsave
pop
fbld
pop
cmp
xor
inc
jle
cmp
xor
bound
sub
lds
pop
xor
jp
(bad)
dec
popf
sbb
arpl
xor
mov
sub
mov
sub
repnz
mov
in
inc
mov
xor
retf
ja
out
mov
or
cmc
adc
repnz
les
mov
aad
call
mov
fiadd
xchg
nop
cmps
push
inc
pusha
pop
out
pop
fbld
daa
add
push
xor
and
sbb
push
movlps
and
jl
in
repz
xor
mov
mov
(bad)
sub
xor
jno
mov
and
scas
inc
outs
mov
call
or
int
mov
xchg
mov
into
jnp
mov
jge
test
push
mov
fidivr
or
fimul
fisubr
imul
xchg
pop
test
(bad)
hlt
call
and
popf
std
sub
in
scas
fistp
pusha
in
cmp
lds
pop
jle
hlt
mov
loopne
outs
leave
ret
adc
mov
add
lea
cwde
push
data16
adc
cmp
out
test
or
out
cmp
mov
rcl
adc
jle
test
enter
fsubr
pop
xchg
popf
or
aad
enter
cmps
push
or
xchg
fild
mov
call
add
pop
push
add
or
add
sub
iret
aaa
retf
adc
push
inc
adc
jbe
sbb
dec
pop
or
push
cli
in
cmp
lds
daa
add
cmp
adc
aam
push
cmp
dec
adc
push
push
movs
test
cmp
out
cli
sbb
inc
xlat
sub
mov
aam
pop
in
jg
cmp
ins
and
push
mov
mov
movs
aam
mov
cmp
sub
sbb
inc
(bad)
xlat
push
xchg
sbb
pop
mov
dec
leave
call
adc
inc
ins
loope
pop
xchg
add
fcomp
jg
ror
mov
or
mov
and
sub
dec
sbb
add
retf
push
in
fidivr
(bad)
cmp
out
lock
push
stos
inc
jg
pop
rcl
xchg
rcl
cli
push
call
outs
adc
mov
inc
pusha
mov
fwait
or
mov
rcr
cmp
std
ins
dec
mov
dec
scas
mov
icebp
sub
test
cmp
xor
ins
sbb
cmps
push
hlt
call
mov
and
or
mov
push
ret
outs
fstp
adc
jne
dec
arpl
fldl2e
fcomp
or
xchg
dec
rcr
mov
cmps
dec
and
xchg
movs
inc
xor
xor
mov
imul
fsub
data16
jp
retf
push
xor
ss
fbstp
fdivr
pop
jge
arpl
xchg
adc
shr
ins
ficomp
int3
add
dec
adc
sub
mov
sub
add
mov
push
or
mov
push
sub
pop
push
dec
hlt
push
pop
into
shl
scas
js
add
xor
popf
mov
rol
or
or
rcr
mov
and
cmp
pop
inc
adc
fs
les
push
scas
pop
jnp
xor
jns
inc
sub
dec
mov
cmp
sbb
and
(bad)
imul
mov
ja
mov
call
push
pop
cmp
cmp
xor
adc
mov
les
sub
sub
ins
pop
cmp
jp
mov
jle
sub
gs
and
iret
pusha
adc
arpl
mov
shl
addr16
xor
mov
sbb
xor
pop
ret
test
sbb
or
fadd
vshufps
ror
xor
push
xchg
lds
ds
jnp
push
scas
adc
sbb
in
(bad)
jb
mov
sbb
and
cmp
push
ins
(bad)
mov
or
out
pushf
inc
or
retf
jg
lds
stc
stos
aas
jb
fsubr
div
sbb
xchg
add
hlt
or
lahf
push
lock
repz
or
push
in
movs
sar
adc
sbb
and
aas
sbb
cs
pop
test
xchg
ss
xlat
push
cli
imul
pop
mov
cld
adc
out
add
out
out
js
xor
sbb
adc
aaa
push
in
stc
je
xor
pop
out
push
cmp
cdq
scas
in
add
imul
mov
imul
imul
shr
xor
icebp
inc
clc
add
pop
mov
or
fcomp
fldcw
push
(bad)
cwde
xor
sub
aaa
test
fwait
mov
pop
and
loop
sbb
mov
xor
dec
cmps
mov
ror
les
mov
mov
(bad)
into
sbb
into
(bad)
in
das
push
jp
mov
pop
pop
pop
xchg
pushf
sub
mov
adc
out
scas
sar
xchg
aas
or
push
inc
aaa
repnz
add
lods
mul
xchg
clc
repnz
stc
enter
std
or
aaa
into
(bad)
cli
popa
jle
nop
push
fs
push
ret
mov
cs
inc
push
mov
cmp
cwde
xchg
xor
jmp
retf
arpl
ror
jb
mov
fldenv
into
pop
popa
mov
fsubr
aaa
daa
fst
sub
sub
test
clc
in
outs
xchg
pop
arpl
ror
mov
push
pop
jecxz
(bad)
pusha
outs
jge
not
test
xchg
in
nop
push
push
jmp
cli
push
mov
xchg
and
lock
xlat
call
inc
push
retf
mov
dec
sbb
cmps
lea
cmp
pop
push
inc
mul
dec
jb
xlat
icebp
sbb
out
jmp
mov
out
or
push
clc
mov
fdivrp
out
ret
cmc
xor
dec
xor
pop
test
mov
or
out
xchg
clc
and
lods
push
dec
sbb
jmp
jmp
test
cmp
cmps
mov
adc
inc
fucomp
xchg
imul
aad
jle
xor
sub
fcomp
imul
mov
sbb
jo
sbb
into
ret
pop
rep
imul
xchg
mov
add
arpl
enter
mov
pop
sub
or
mov
popa
test
ins
in
xlat
loop
outs
not
xchg
repz
gs
push
ja
(bad)
sub
imul
xor
add
mov
sar
mov
sub
sbb
mov
pop
inc
or
in
mov
inc
nop
adc
adc
rcl
addr16
inc
ja
fdivp
test
xchg
mov
ret
loope
ret
adc
movs
add
dec
cld
ss
in
cld
xor
push
jl
fisttp
sbb
cmp
daa
and
inc
or
jle
in
sbb
ret
scas
sbb
fnstsw
cmc
sbb
pop
addr16
jle
test
pop
push
xchg
cmp
cwde
shl
loope
test
cld
dec
push
xchg
sbb
mov
loopne
mov
fwait
mov
mov
push
and
daa
cmp
pop
xchg
fld
inc
pop
cmp
ret
sub
push
into
xor
or
push
(bad)
jmp
jns
mov
fcmove
ins
push
or
add
jp
fbstp
sub
loopne
arpl
sub
pop
bound
xor
mov
(bad)
sbb
jg
loopne
cwde
xchg
and
push
push
out
fisub
jnp
or
xchg
jecxz
adc
sub
test
xchg
mov
(bad)
push
push
adc
pop
rcr
push
lods
pop
movs
pop
pusha
(bad)
adc
jmp
inc
inc
loop
pop
jl
(bad)
push
pop
push
dec
jne
mov
xchg
rcl
adc
pop
or
fs
jne
jo
adc
fs
out
pop
hlt
(bad)
jl
loopne
push
cmp
std
xor
mov
jno
fnsave
cmps
and
cvtpi2ps
and
cmc
mov
pop
repnz
scas
sbb
push
jl
fsub
jl
(bad)
jne
push
jge
add
inc
pop
mov
inc
imul
xchg
adc
sbb
pop
test
icebp
stc
out
cmp
out
fisub
inc
or
and
sub
(bad)
pop
add
sti
aad
iret
jns
pop
and
bound
movs
pop
jo
and
arpl
sub
add
mov
loop
sbb
shl
mul
repz
and
in
pop
mov
add
push
inc
adc
xchg
xchg
cmps
jb
(bad)
iret
out
push
mov
enter
inc
jmp
nop
pop
mov
(bad)
fwait
xor
loope
cmps
mov
(bad)
jle
sub
gs
or
mov
mov
jno
mov
sbb
add
jnp
mov
sbb
shl
jle
push
jns
dec
pop
push
das
loopne
inc
daa
cs
mov
mov
adc
xchg
dec
lea
mov
pop
retf
push
pop
jns
fmul
push
pop
in
je
xor
ja
sbb
dec
mov
xor
nop
iret
cdq
xlat
pop
sbb
dec
shr
loop
push
lea
mov
sub
mov
jo
fwait
pop
sbb
(bad)
popf
popa
sbb
adc
in
add
fcomi
and
cmp
sub
cli
pop
ret
pusha
hlt
movs
(bad)
push
test
mov
mov
test
pop
xlat
cld
dec
mov
xchg
inc
imul
cmp
add
mov
fdivr
sub
xor
dec
pop
cmp
jl
dec
(bad)
xor
add
fistp
leave
push
int3
nop
cmp
mov
jle
xor
movs
in
or
sub
mov
jbe
pop
fadd
inc
xor
push
lods
lods
retf
xor
and
mov
test
xchg
push
int3
stos
xchg
ss
sbb
push
pop
add
xchg
ficom
pop
fcmove
fcom
pusha
sbb
js
jns
(bad)
data16
das
inc
mov
in
or
jge
scas
ss
fcomi
dec
jae
mov
mov
add
pop
xchg
shr
ds
fcom
cwde
ficomp
xchg
pushf
dec
js
push
sbb
xchg
fisttp
scas
stc
add
ret
gs
jl
rcl
lds
adc
pop
(bad)
(bad)
ins
jo
sub
jbe
push
push
add
icebp
out
lock
or
cmp
pushf
cwde
add
dec
jae
sbb
jp
rcl
(bad)
xor
loope
mov
cmps
ror
cmp
adc
ret
pop
cmp
push
xchg
add
mov
mov
aad
(bad)
dec
lds
out
push
shl
mov
mov
mov
std
mov
movs
(bad)
cmp
clc
imul
cdq
rcr
test
push
or
jmp
mov
dec
scas
cmp
or
push
push
add
ret
jb
cdq
int3
nop
sub
int3
mov
jp
outs
mov
inc
push
std
repnz
pop
cmps
ds
fcomp
inc
loop
or
mov
xchg
popa
mov
int3
jne
jae
inc
je
(bad)
mov
and
aam
pop
pop
xor
movsx
pop
jp
mov
scas
sub
push
bound
push
mov
xor
xchg
push
lods
mov
hlt
sbb
test
test
mov
(bad)
add
cmp
jge
clc
outs
add
sar
out
mov
push
inc
iret
ret
or
and
cmps
cs
movs
fistp
cmp
and
test
stos
out
mov
ror
adc
(bad)
mov
lods
mov
cmps
sar
aas
add
int
call
xor
or
cld
adc
iret
jns
add
adc
sub
xlat
movs
jbe
add
mov
scas
inc
mov
je
inc
mov
xor
mov
sbb
dec
sbb
jecxz
jge
or
scas
pop
xor
cmp
jnp
int
cmp
call
aad
mov
cmps
test
jno
lea
or
sbb
cmp
adc
mov
icebp
retf
je
push
xor
jge
mov
mov
jo
loop
sbb
pop
xchg
mov
shr
stc
push
aam
leave
es
out
push
xlat
movs
push
sub
mov
inc
jno
(bad)
fiadd
rol
aas
in
je
(bad)
rol
(bad)
adc
sub
mov
dec
sub
mov
push
or
(bad)
sub
mov
loope
call
mov
aas
sbb
cld
aas
mov
mov
push
mov
sub
mov
mov
dec
xchg
mov
sub
cs
daa
pcmpeqw
dec
cwde
in
pop
inc
aad
repnz
scas
int3
sti
hlt
lahf
mov
push
sbb
in
stos
daa
mov
mov
adc
inc
rol
stos
hlt
cld
mov
jno
(bad)
cmp
jmp
arpl
inc
in
dec
test
or
popa
mov
loope
cmc
sub
push
(bad)
sub
repz
add
fstp
inc
add
(bad)
dec
mov
cwde
mov
cmps
mov
jno
ret
xchg
popf
aad
cmp
jno
mov
je
inc
arpl
es
pop
sub
xchg
stos
or
aas
ss
inc
jne
jno
cmps
fnstsw
cmp
lahf
sbb
xchg
loope
imul
outs
jmp
jg
inc
mov
int3
fisttp
jge
je
dec
cmc
inc
push
fild
push
inc
mov
mov
jo
mov
adc
lock
stos
jae
xchg
jnp
ds
xlat
push
(bad)
stos
loopne
dec
adc
push
nop
xchg
int3
movs
div
cmp
repnz
psrad
xchg
adc
bound
sbb
dec
sub
shl
and
rcl
shl
(bad)
mov
outs
jae
addr16
loop
out
pop
out
push
stc
mov
adc
and
mov
jnp
push
lahf
adc
test
adc
and
bound
dec
daa
cmps
inc
or
into
repnz
mov
pusha
xchg
jle
jno
inc
das
sub
jmp
and
lock
sbb
push
fisttp
inc
dec
ja
sub
dec
inc
inc
mov
or
std
sub
xor
rcl
inc
fucomp
or
mov
xchg
es
jbe
or
inc
dec
nop
add
inc
xchg
retf
inc
pmulhw
gs
mov
jnp
mov
adc
(bad)
(bad)
cmc
bound
xchg
cs
cli
xor
jns
or
cmp
pop
outs
mov
inc
mov
or
outs
lods
inc
mov
sub
adc
mov
push
pop
add
add
adc
cmps
(bad)
loope
fsub
sbb
pop
into
dec
test
sbb
arpl
push
aam
sti
pop
repz
push
lea
ja
mov
xchg
(bad)
jae
cwde
mov
sbb
aam
outs
arpl
inc
in
pop
ds
ret
mov
scas
in
ss
adc
sbb
cmp
les
mov
pop
test
pop
ror
cwde
xor
in
sub
mov
dec
sbb
(bad)
ins
adc
sub
ds
fdivr
repz
aaa
or
push
push
std
cld
dec
xchg
sub
sbb
mov
out
mov
cwde
test
sbb
iret
ror
sahf
js
xor
inc
adc
sbb
xchg
mov
add
inc
dec
pop
cmp
stc
scas
xlat
or
mov
rol
push
test
mov
push
sub
xor
pop
fadd
je
js
(bad)
int3
sub
push
jge
push
addr16
lea
push
cmc
xor
sub
mov
js
push
repz
in
jl
aaa
jecxz
jne
retf
lods
push
test
and
add
sbb
retf
loop
(bad)
cmp
rcr
in
nop
pop
lahf
mov
cmp
ins
xor
clc
or
inc
dec
mov
inc
mov
out
pop
ds
pop
ss
mov
jns
packsswb
add
add
repz
shl
outs
cmp
imul
sbb
daa
std
test
test
out
pushf
mov
mov
fbstp
fwait
and
pop
movs
xchg
sbb
ja
inc
sub
jb
fsubp
enter
ds
(bad)
jg
iret
fadd
aam
add
addr16
jno
add
mov
loop
out
lds
inc
jp
lahf
sub
xchg
test
mov
add
test
mov
cs
adc
shr
loope
inc
enter
shl
imul
mov
sti
add
rol
mov
repnz
mov
pusha
adc
jbe
sti
push
hlt
mov
xchg
jne
mov
inc
(bad)
push
(bad)
adc
mov
xor
call
dec
push
rol
mov
hlt
mov
xor
cwde
scas
dec
pop
lods
stos
inc
sub
sahf
mov
call
mov
inc
mov
(bad)
xor
aaa
popf
icebp
pop
sbb
sbb
add
mov
or
sbb
ins
add
pusha
pushf
cwde
pop
add
test
sar
outs
sbb
inc
pop
test
or
or
rcl
out
sahf
aam
sub
mov
mov
jmp
rol
sub
add
push
ins
(bad)
push
je
fld
loopne
and
leave
sub
sub
dec
out
or
xor
rcr
cmp
in
pop
cdq
icebp
mov
inc
jmp
test
pop
clc
dec
cmp
arpl
lods
ret
cmp
jge
dec
push
cmp
add
dec
lahf
addr16
shl
inc
out
add
mov
cmps
lea
sti
inc
dec
das
in
pop
and
sub
mov
sub
mov
repz
adc
mov
in
jnp
dec
js
(bad)
fdiv
retf
mov
mov
cmp
repz
pop
out
mov
test
popa
push
mov
movs
mov
(bad)
cmp
mov
adc
add
inc
gs
push
mov
or
sbb
in
repz
adc
cs
lahf
xor
and
cmp
adc
popa
out
ja
push
lods
dec
add
fiadd
mov
inc
rcr
mov
stos
cmp
ins
xlat
arpl
div
(bad)
(bad)
or
mov
jmp
mov
rol
jbe
test
scas
movs
out
int3
pop
pop
rol
sub
icebp
jecxz
cdq
add
xor
test
pop
pop
adc
cmp
xor
inc
enter
(bad)
stc
add
stc
(bad)
xchg
dec
test
pop
sub
in
jo
inc
sub
nop
in
nop
cmps
jns
push
fisttp
mov
inc
nop
jmp
in
or
hlt
cmps
or
adc
mov
ss
sbb
jns
adc
in
jecxz
adc
jmp
push
es
fdiv
xor
into
push
push
pop
mov
xchg
(bad)
aad
clc
mov
mov
jmp
stos
mov
dec
xchg
xlat
test
dec
mov
mov
ins
fist
cmp
into
mov
call
clc
(bad)
clc
pop
cmp
jae
or
int
and
loop
ffreep
das
jmp
jge
pop
loope
jo
(bad)
arpl
mov
push
nop
adc
sti
inc
dec
push
push
push
jge
inc
push
int
or
inc
or
jg
xchg
cmp
test
push
call
cmp
out
xor
sub
xor
and
xchg
mov
push
sti
cmp
call
push
fisttp
jmp
adc
inc
in
xor
dec
ins
ins
test
fcomp
cmps
sar
enter
das
movd
test
inc
sub
mov
xchg
add
gs
int
pusha
ror
popf
mov
or
mov
mov
mov
push
bound
(bad)
mov
pop
shl
aam
shufps
sub
sar
push
retf
inc
sub
imul
adc
push
(bad)
cld
cmp
mov
dec
jns
ja
daa
gs
pop
pop
push
or
adc
movs
add
mov
pop
loope
inc
call
ror
add
sub
and
imul
int3
sar
and
imul
mov
loope
lds
ins
inc
das
mov
cld
sar
pop
cmc
jae
dec
cld
xor
neg
outs
pusha
or
sub
dec
mov
xchg
mov
xor
outs
xor
lds
and
mov
and
xchg
xchg
jmp
aas
sbb
jg
das
rcl
lods
adc
cwde
xor
add
jle
stc
(bad)
aas
fwait
adc
gs
jge
popa
sub
js
xchg
mov
sbb
retf
sbb
inc
lods
mov
jmp
push
(bad)
mov
cmp
pop
pop
xchg
push
mov
(bad)
out
cs
out
mov
scas
sbb
push
stos
push
mov
inc
xchg
or
mov
sbb
arpl
cmp
out
imul
pop
jecxz
jno
jmp
fist
and
mov
inc
fs
sub
push
or
xchg
add
xchg
push
lahf
call
push
shr
in
mov
dec
xchg
mov
push
sub
add
and
test
test
sbb
add
popf
ss
adc
(bad)
retf
push
dec
mov
int3
jnp
(bad)
xchg
add
dec
sar
dec
pop
cmc
cld
push
xchg
mov
jae
mov
pop
ror
aad
call
xchg
test
aad
clc
test
push
mov
push
ror
repnz
stos
rol
int3
dec
sbb
mov
into
into
dec
add
cmp
lds
in
mov
mov
lea
arpl
(bad)
ins
jns
and
push
cmp
mov
scas
int
ja
inc
loop
popa
bnd
scas
sbb
(bad)
aad
fsubr
shr
inc
in
shl
push
add
xchg
icebp
ror
push
cdq
cdq
pusha
mov
inc
je
outs
push
xlat
xchg
(bad)
bound
sub
ss
mov
pop
xor
xchg
mov
sub
inc
rol
jge
sub
lahf
in
(bad)
push
imul
xor
adc
cmp
cmps
ds
les
fs
int3
in
movs
fwait
rcr
dec
jno
mov
xchg
ret
mov
shl
jne
movs
stc
(bad)
pop
add
cmps
push
xchg
adc
sub
out
movs
xor
outs
push
ins
jl
mov
mov
jecxz
ror
leave
cld
movs
sbb
popf
mov
pop
mov
cld
ds
fld
jge
inc
and
loope
shl
je
and
mov
ret
and
shr
das
pop
(bad)
adc
mov
inc
jbe
test
enter
push
adc
mov
into
cld
adc
jmp
sub
cmp
or
xacquire
mov
inc
and
sbb
lods
pop
inc
imul
sbb
test
lea
mov
mov
adc
stos
fwait
icebp
pop
and
sbb
or
dec
or
pusha
cmps
aad
xchg
sbb
cmp
enter
sub
and
or
and
call
scas
or
loope
movs
jnp
les
cmp
daa
add
addr16
and
lods
inc
add
in
cmps
or
stos
in
mov
dec
das
and
js
mov
push
or
xor
sbb
bound
sbb
jecxz
data16
sub
inc
and
push
sbb
cmp
pop
fdiv
xchg
leave
jb
xor
and
cdq
mov
sahf
ficom
xchg
add
push
call
int
push
sub
jmp
(bad)
stc
aaa
xchg
cmps
(bad)
sbb
arpl
inc
dec
push
jmp
cs
xchg
imul
xchg
or
(bad)
mov
shr
and
xor
or
push
pop
inc
loope
hlt
int3
pusha
xchg
add
pop
not
sbb
test
loop
in
sbb
les
fwait
cli
(bad)
cmp
leave
lahf
sbb
popf
mov
mov
icebp
inc
sbb
pushf
lahf
ret
dec
outs
xor
fstp
fdivr
mov
jle
cwde
icebp
mov
adc
adc
mov
neg
bound
adc
cmp
imul
cld
sbb
arpl
push
aaa
dec
loope
cmps
pusha
icebp
xor
and
adc
iret
sbb
adc
mov
lods
neg
ins
cld
imul
(bad)
mov
mov
mov
dec
and
popa
(bad)
repnz
clc
xlat
push
bnd
iret
add
stos
fiadd
mov
mov
jno
mov
loop
(bad)
clc
dec
inc
fwait
ja
imul
repnz
mov
jmp
xchg
and
cmp
out
gs
aaa
xlat
lock
lods
add
and
xchg
add
sti
jb
shl
mov
mov
push
stos
sbb
dec
cmp
fcmovnb
aam
aad
bound
inc
movs
jecxz
push
cmp
js
jp
cdq
aam
fsubr
rcr
frstor
jb
(bad)
shr
push
xor
pop
sub
jbe
dec
movs
repz
xor
repnz
fucomip
(bad)
aaa
call
jb
int
inc
mov
cmp
scas
mov
arpl
enter
cmovnp
std
jmp
les
pop
out
aaa
rol
inc
out
mov
mov
push
stos
mov
in
outs
(bad)
loopne
mov
test
sbb
push
pop
into
jl
movs
(bad)
bound
(bad)
addr16
(bad)
jne
lods
fnstcw
xchg
fwait
stos
imul
push
pop
das
stos
(bad)
mov
rcl
add
jbe
cmovne
adc
scas
add
jne
cmps
call
mov
retf
mov
adc
icebp
adc
ret
or
ror
ret
xor
jnp
in
add
cmp
pop
out
jecxz
pop
es
pop
cmp
outs
and
retf
add
fwait
sub
movs
xor
and
xor
push
das
add
pop
pop
sub
fcomip
dec
ins
fnsave
push
pop
xor
test
dec
arpl
dec
mov
pop
sbb
sar
jno
jb
inc
loope
(bad)
push
sbb
jg
outs
mov
inc
dec
pop
cli
daa
aas
cdq
or
fs
push
in
int
aaa
sub
or
inc
mov
push
mov
frstor
cmps
jo
push
jno
push
out
enter
neg
add
(bad)
fs
xor
call
(bad)
or
mov
(bad)
mov
mov
pop
dec
jp
jmp
movs
imul
mov
daa
pop
arpl
or
inc
xor
push
mov
xor
dec
xor
mov
mov
out
mov
dec
pop
xor
mov
ss
mov
xor
jl
sub
pop
jnp
int3
cmp
xor
fistp
inc
stc
aas
push
add
dec
ror
xchg
mov
jo
xchg
jno
int3
dec
xchg
inc
dec
dec
fnstsw
imul
lods
jmp
ja
sbb
sbb
add
sbb
xor
push
or
loopne
das
push
ja
xchg
arpl
mov
repnz
test
mov
push
aaa
les
xchg
aas
sbb
cmp
jle
retf
and
xchg
hlt
jae
xchg
xchg
pop
rcr
hlt
cmp
scas
push
bswap
sbb
stos
mov
dec
fcmovu
mov
mov
loop
or
enter
mov
xchg
lods
xchg
mov
or
sub
popf
je
fdivr
mul
xchg
pop
push
push
mov
jb
mov
inc
jg
inc
add
call
test
stc
not
push
hlt
popa
test
add
inc
arpl
bound
push
rol
jg
(bad)
movs
and
jo
xchg
add
test
movs
loop
ss
int3
pusha
cwde
mov
cmps
fiadd
and
leave
ret
fwait
shl
xchg
and
sub
not
data16
and
xor
jmp
dec
adc
sub
push
cmp
iret
adc
movs
scas
das
lahf
add
sbb
sbb
sub
shl
mov
sub
add
cmp
cmc
in
and
in
cmp
xchg
test
inc
loope
call
ja
cmp
mov
sar
xchg
repnz
fiadd
push
jmp
push
sbb
fpatan
mov
inc
(bad)
dec
outs
mov
adc
dec
retf
mov
mul
inc
ss
fistp
lea
into
lods
jne
arpl
in
cmp
mov
icebp
mov
inc
test
mov
out
ds
sub
(bad)
sub
pop
aas
mov
cld
inc
add
add
adc
sbb
xchg
test
cmp
retf
repnz
xor
push
and
popf
lds
pop
mov
and
hlt
xchg
add
push
jge
xchg
sbb
pop
pop
push
mov
mov
outs
or
call
mov
add
sub
outs
sub
arpl
dec
adc
stc
mov
hlt
or
mov
mov
loope
and
in
inc
jle
repz
repz
sub
xor
pop
cmp
fcomp
gs
das
repz
cmp
pop
dec
add
mov
mov
popf
adc
(bad)
in
call
in
les
ja
push
jmp
and
pop
popf
push
adc
(bad)
cmp
ret
popf
lahf
lahf
push
dec
cdq
gs
sub
out
sub
imul
push
dec
sbb
push
add
repz
sub
mov
fwait
cmp
adc
(bad)
mov
xor
movs
pop
xchg
ins
adc
sar
loop
mov
mov
in
fcomp
mov
fistp
add
mov
lock
jecxz
jg
xlat
mov
mov
mov
mov
test
push
pusha
lahf
loop
popf
lahf
(bad)
cli
(bad)
mov
xchg
inc
mov
sub
sbb
jecxz
ror
pop
in
pop
shl
pop
popa
adc
or
mov
fsubr
(bad)
jbe
adc
pop
xor
sub
sub
xchg
int
jne
std
mov
aas
arpl
in
std
jmp
jns
push
lea
(bad)
arpl
out
out
arpl
sbb
lahf
mov
jne
retf
xchg
nop
cmp
rcl
or
add
gs
inc
stos
bound
rcl
adc
(bad)
or
test
rcr
inc
and
mov
sbb
outs
adc
(bad)
cmp
jne
mov
cmp
mov
and
sar
dec
scas
cmp
clc
inc
daa
dec
mov
ret
jno
xchg
icebp
fprem1
xor
repnz
ja
mov
dec
loopne
and
mov
popf
mov
mov
sahf
(bad)
mov
(bad)
mov
jae
xchg
test
mov
out
sbb
inc
cs
sub
outs
test
pushf
adc
inc
mov
jnp
loope
icebp
nop
rcr
xchg
inc
sbb
mov
daa
cs
stos
jge
cmp
cmp
mov
adc
mov
dec
inc
movs
add
xchg
enter
arpl
mov
mov
sar
xchg
dec
pop
daa
popa
and
pop
cwde
adc
pop
pusha
fs
fadd
dec
sub
ret
push
data16
(bad)
mov
pop
jl
and
loope
hlt
jle
push
mov
xchg
mov
xchg
ret
addr16
jl
(bad)
jb
mov
ret
ret
shr
shl
xchg
fs
stos
ja
jnp
xor
hlt
test
xor
xlat
scas
retf
sub
add
push
cmp
movs
sbb
(bad)
aam
xor
inc
lahf
shl
adc
mov
pop
lea
dec
in
aad
and
push
inc
outs
or
repz
mov
cmc
nop
inc
mov
ins
clc
repnz
aam
xchg
adc
xor
(bad)
nop
mov
cmc
pop
mov
out
movs
xor
jmp
xor
lods
das
jns
into
mov
push
cli
leave
std
mov
gs
les
fisub
dec
or
out
shl
xchg
loopne
aaa
adc
arpl
xor
xchg
les
xor
push
movs
sbb
addr16
adc
xchg
(bad)
mov
stos
nop
fcomp
push
arpl
loop
out
ins
je
(bad)
adc
or
xor
jmp
jmp
iret
inc
pop
sub
out
stos
sbb
xlat
pop
(bad)
push
repnz
or
or
shl
int3
ror
aam
cmps
sub
pop
jmp
cdq
push
xlat
pop
mov
or
xchg
jp
bound
ins
add
xor
or
nop
lods
add
popa
dec
mov
rol
(bad)
outs
int
mov
mov
mov
cwde
in
pop
loope
sbb
test
mov
in
mov
dec
in
xor
ds
into
push
enter
push
cli
xchg
stos
cmp
movs
or
test
xchg
stos
xor
mov
int3
div
push
jmp
adc
(bad)
aad
cmp
pop
push
gs
dec
adc
mov
or
pop
pop
sahf
inc
stos
sub
inc
jbe
mov
aas
aam
cs
adc
hlt
ret
dec
stos
repnz
bswap
stos
mov
pop
(bad)
push
std
(bad)
iret
mov
call
stos
cmp
movs
mov
cli
das
iret
cmc
sti
sbb
cmp
shr
ja
fwait
sub
ret
pop
int3
jg
scas
sahf
lea
adc
bound
push
fistp
pop
shl
or
fnsave
sub
sbb
lea
std
push
out
das
retf
aaa
outs
int3
sub
je
xor
imul
cmp
sbb
lods
pop
jno
inc
outs
push
add
(bad)
out
lock
jg
xor
jle
ja
xchg
or
xchg
int3
mov
xor
js
dec
dec
push
mov
and
cli
adc
arpl
(bad)
dec
out
es
xor
push
mov
div
mov
dec
lods
mul
ret
jl
ret
out
inc
jl
ins
arpl
aam
pop
jle
cli
into
pop
iret
inc
ret
add
fnstsw
fisttp
ss
cli
jbe
repz
test
pop
mov
mov
fiadd
sub
pop
add
push
mov
add
adc
aad
mov
addr16
stc
call
lods
repz
aaa
nop
jns
enter
xor
push
sub
mov
dec
sbb
aas
je
jns
ret
retf
push
loope
mov
xlat
lock
sbb
(bad)
sbb
and
pop
sub
call
and
mov
movs
xchg
push
test
adc
mov
inc
in
adc
pop
or
sbb
lds
mov
pop
fst
arpl
(bad)
stc
fs
push
(bad)
or
loope
dec
sub
push
out
xchg
pop
cmp
jp
ss
mov
or
xor
and
arpl
and
sub
xchg
adc
iret
das
sahf
or
stc
mov
sbb
mov
dec
cmp
xor
cmp
scas
repz
call
movs
call
push
xor
inc
xchg
xchg
pop
push
xor
or
test
(bad)
in
(bad)
jg
push
scas
leave
pusha
pop
pop
jno
cmps
mov
or
mov
push
mov
nop
retf
in
hlt
lock
fidiv
push
push
fild
shr
adc
pop
mov
shr
xchg
out
sar
mov
imul
lahf
push
mov
pop
push
stos
sub
push
xchg
pushf
aad
shl
lock
xchg
push
psrlw
or
jno
inc
shl
int3
cmp
fld
pop
test
xchg
lods
xor
in
jle
aad
in
adc
push
add
jo
mov
gs
mov
cmps
adc
push
adc
mov
pop
xor
inc
sbb
fdivr
loopne
xor
adc
inc
add
cmc
movs
or
push
stos
cmps
mov
pop
fcmovnu
xchg
cdq
sub
fstp
add
jp
jbe
cld
mov
addr16
sti
push
jnp
fwait
mov
xor
call
popa
cmps
scas
mov
jecxz
sub
pop
jo
xchg
push
xchg
rol
xchg
xchg
sub
outs
ret
pop
mov
cmp
clc
mov
(bad)
outs
pop
push
aad
retf
cmp
mov
test
mov
int3
sbb
push
sub
in
mov
jnp
jae
(bad)
push
adc
fstp
lea
aam
xor
neg
adc
xchg
out
ror
test
je
jge
enter
call
xchg
sahf
xor
les
mov
cmp
out
sbb
sub
mov
das
inc
in
mov
mov
jp
xchg
(bad)
cld
cdq
jnp
stc
test
xor
lods
mov
rcl
cmp
pop
div
add
xchg
adc
mov
pushf
or
xchg
cmps
leave
arpl
and
popa
or
fsubr
dec
out
movs
mov
sub
adc
adc
cmp
mov
lsl
add
inc
jg
dec
imul
call
punpckhwd
push
pop
dec
and
(bad)
js
(bad)
and
test
sti
jnp
movs
fbstp
out
jg
inc
jno
sub
dec
cmovbe
mov
pop
sbb
pop
push
jmp
push
movs
dec
push
cmp
or
jecxz
jo
mov
push
movs
sub
pop
mov
xchg
and
les
outs
aas
fld
mov
mov
out
sbb
cmc
pop
ret
pushf
sub
push
addr16
dec
xchg
add
push
inc
sub
mov
popa
mov
popf
(bad)
sub
outs
fldcw
dec
inc
and
test
jmp
pushf
mov
adc
jns
sbb
add
and
cmp
add
cmp
xlat
iret
dec
das
pop
das
mov
jge
pop
data16
push
je
jo
sbb
add
mov
ret
mov
adc
(bad)
sub
pushf
mov
pop
xchg
scas
jno
jb
inc
ret
inc
loop
and
ja
xor
pusha
push
xchg
fld
ret
or
xchg
and
shl
xchg
test
push
and
fld
fwait
hlt
push
dec
loope
or
call
sub
jbe
adc
sbb
sub
mov
js
loope
and
dec
cld
cs
xlat
ja
cmp
ret
inc
(bad)
jmp
leave
lods
enter
mov
and
jns
icebp
jge
sub
jmp
test
std
xchg
les
mov
mov
inc
adc
lea
lods
add
push
push
mov
enter
lods
dec
in
cmp
pop
nop
adc
retf
aas
jno
cmp
neg
or
add
stos
adc
arpl
iret
rcl
pushfw
jae
mov
jmp
sub
or
(bad)
xor
or
add
cmc
and
sub
test
cmps
xor
ins
sbb
adc
dec
mov
stos
push
cld
out
mov
mov
stos
fs
sub
mov
imul
and
cmps
jecxz
or
fs
fld
sub
mov
or
cmp
add
jo
outs
mov
push
stc
call
push
push
cmps
sar
cld
fucom
dec
xor
sub
mov
mov
pushf
cld
mov
lds
and
test
arpl
ret
repnz
and
fs
mov
mov
ins
jae
ret
and
leave
movs
shl
sahf
dec
jecxz
addr16
ins
and
push
fbstp
pusha
mov
int3
es
mov
jns
in
xchg
inc
adc
sbb
add
mov
lods
(bad)
and
rol
sub
movs
pop
mov
ror
cmps
push
inc
pop
loopne
frstor
sub
ins
cdq
mov
dec
mov
and
add
(bad)
pop
push
jno
mov
in
add
shl
aaa
jl
xchg
dec
test
sub
mov
add
sbb
dec
and
lock
int
jmp
mov
call
(bad)
dec
xchg
int3
imul
or
fnsave
out
in
cld
iret
adc
or
sub
mov
imul
pop
add
xor
sar
adc
adc
inc
pop
cmc
or
repz
mov
push
pop
scas
pushf
out
or
loopne
loop
pusha
and
icebp
jae
mov
out
add
frstor
ins
cmps
xor
stc
and
mov
inc
mov
dec
and
retf
gs
push
hlt
dec
(bad)
push
rcl
sub
pushf
mov
ds
out
call
aas
div
cmps
dec
stos
lods
sbb
(bad)
jge
test
xor
xchg
sub
or
mov
not
jbe
aaa
iret
mov
mov
fisubr
xchg
add
sbb
fs
clc
fcom
dec
daa
mov
test
out
mov
sbb
nop
jle
rcl
jo
(bad)
jle
stos
xchg
fsub
je
loop
mov
data16
jecxz
inc
xor
jle
and
xchg
mov
xor
ja
stos
mov
daa
popf
sahf
jo
cmp
xchg
mov
sbb
jo
cmp
pop
shl
xor
xchg
aad
inc
dec
xchg
ret
inc
adc
jmp
inc
(bad)
ret
push
lods
sub
stos
dec
std
pusha
adc
stos
dec
ss
push
sbb
push
mov
pop
add
mov
dec
xchg
imul
repz
jg
pop
pop
cmc
repz
inc
cli
scas
push
push
icebp
bound
packuswb
adc
sub
std
call
jl
sub
add
fcomi
xor
(bad)
das
xchg
bnd
pop
cmps
ror
mov
fsubr
das
jle
pop
inc
adc
push
test
iret
ds
xor
retf
icebp
cmps
lea
rcr
pop
rcr
jbe
inc
adc
and
cdq
arpl
add
pop
mov
cmps
push
retf
xor
dec
outs
lock
add
cmp
cmc
xchg
mov
bts
rcl
sbb
imul
out
or
sub
mul
cmp
aad
lahf
jle
pop
push
iret
cwde
jns
pop
adc
inc
in
lock
retf
push
std
arpl
pop
push
jle
adc
cdq
or
call
cdq
sbb
(bad)
push
add
and
mov
ret
pop
out
fld
push
call
mov
push
movs
popa
aas
mov
cmp
adc
dec
xor
test
xchg
pop
mov
inc
out
cmp
mov
out
mov
xor
mov
cmp
xor
and
mov
dec
out
and
(bad)
repz
xor
adc
mov
mov
jnp
call
inc
mov
loope
(bad)
jbe
inc
xchg
mov
xor
sbb
mov
mov
dec
cmp
mov
mul
and
arpl
gs
vcvtsd2ss
jne
pop
mov
into
cmp
scas
in
xlat
sar
pop
jge
fcom
imul
ret
mov
adc
sbb
jge
aam
mov
in
mov
imul
ja
xchg
in
xchg
sar
or
fwait
or
stos
icebp
repz
test
inc
arpl
pop
mov
nop
int
inc
push
cmp
adc
jmp
or
and
in
dec
pop
adc
popa
inc
out
xor
hlt
daa
rcl
and
and
pop
enter
sbb
ret
and
adc
movs
or
xchg
and
sahf
and
arpl
(bad)
push
mov
jo
(bad)
retf
push
out
mov
bound
jns
sub
(bad)
mov
rol
fdiv
clc
icebp
loopne
sub
add
(bad)
jge
or
sbb
jmp
lods
inc
cmps
cs
ud0
cmps
out
jl
loopne
xor
xor
push
pushf
sete
pop
sub
imul
cmp
jmp
lds
aad
or
sub
push
push
xchg
jecxz
arpl
aaa
mov
mov
aaa
sub
retf
or
push
imul
and
jg
jne
popaw
out
pop
dec
gs
fcom
push
inc
jp
fimul
call
aaa
stos
mov
mov
inc
lahf
xor
arpl
jecxz
arpl
add
(bad)
sbb
xchg
push
lods
push
ficom
int
iret
and
sub
lods
imul
or
enter
mov
lds
clc
call
xor
xchg
lods
lds
call
xlat
mov
cmps
push
pop
sub
lea
sahf
cwde
mov
icebp
xchg
into
sar
or
mov
and
and
js
mov
pop
cmp
cdq
cmp
cmp
mov
jns
outs
jb
or
stc
test
jns
dec
mov
pop
sbb
pop
(bad)
xchg
cmp
scas
and
sbb
mov
stos
imul
mov
sbb
adc
pop
mov
mov
pop
push
enter
int3
sub
mov
in
lahf
std
jbe
fadd
dec
and
test
outs
jmp
cmp
jle
fs
(bad)
cdq
jg
push
ja
rol
xchg
adc
arpl
xchg
hlt
rol
std
xchg
or
arpl
or
jns
sub
xchg
enter
rol
mov
ror
ret
adc
mov
push
sub
inc
mov
and
dec
sub
scas
adc
mov
lds
mov
xor
sub
(bad)
ins
(bad)
xlat
add
xor
dec
push
arpl
ret
push
mov
mov
adc
retf
and
sbb
dec
dec
fsubr
xchg
xchg
lods
out
ins
outs
inc
test
add
test
int
adc
pop
cmp
das
or
cld
mov
ret
xchg
ja
data16
xor
scas
lods
xchg
je
nop
cmp
push
mov
inc
les
fst
in
mov
jmp
cwde
dec
int3
add
sub
mov
stos
cs
out
push
out
xchg
fdiv
scas
mov
mov
push
sub
jb
xor
xchg
xor
lods
sbb
cmp
mov
dec
stc
pop
jb
daa
daa
jb
pop
mov
jle
or
js
int
mov
lock
and
repz
jmp
into
popa
sub
mov
adc
arpl
test
jmp
std
ret
call
sub
in
jl
jb
fnstsw
daa
xor
push
retf
jmp
in
adc
callw
ins
cmp
mov
sub
push
fidiv
aam
pop
cmp
cs
jo
ret
sbb
dec
fst
adc
shl
mov
add
cmp
mov
out
push
adc
sub
je
adc
pop
pop
repz
dec
mov
in
pop
pop
xor
xor
(bad)
jecxz
retf
add
mov
mov
mov
test
jns
xchg
lods
push
pop
jne
sbb
fmulp
mov
xlat
lds
(bad)
fmul
jl
sbb
arpl
ficomp
test
loopne
mov
mov
or
jnp
mov
and
jp
mov
push
fld
sub
cmp
cmp
mov
lock
repnz
in
(bad)
sahf
xchg
add
pop
das
in
mov
xchg
aam
ins
icebp
adc
mov
cmc
add
int
fwait
shr
and
arpl
out
jb
mov
(bad)
jae
inc
xchg
cmp
int
rcl
mov
cmp
test
mov
xchg
mov
add
mov
aaa
push
das
jne
into
fisub
mov
pop
push
push
xor
fild
hlt
pop
shr
sub
ds
mov
adc
mov
ins
inc
mov
push
add
jp
or
int3
inc
popf
stos
dec
dec
dec
(bad)
pop
fld
cmp
jecxz
fadd
div
jl
mov
jl
psubsb
fdivr
clc
sub
ret
fisttp
shl
mov
add
xor
or
sbb
in
xor
inc
xchg
stc
mov
dec
aad
fs
xchg
and
es
(bad)
jno
xor
push
jecxz
mov
push
mov
into
repz
jmp
dec
mov
test
push
mov
fcom
retf
xchg
pop
add
or
mov
add
jp
and
mov
sbb
pop
gs
stos
adc
and
leave
int3
jb
sub
xor
fstenv
jnp
mov
rep
(bad)
jmp
icebp
ret
int
xor
dec
xchg
xchg
and
or
xchg
mov
cmps
int3
inc
aas
or
cmps
push
jmp
in
add
in
push
and
ss
cmps
std
out
pop
test
pushf
lock
data16
repnz
pop
pop
xchg
stos
xchg
ret
or
adc
dec
in
std
adc
stos
pusha
aad
jmp
adc
pusha
lahf
mov
xor
push
(bad)
retf
cmps
sub
dec
cmps
xchg
loop
movs
jmp
in
ja
call
ins
dec
in
mov
test
jno
retf
arpl
fstp
mov
mov
jmp
cmp
std
add
out
out
fidivr
xor
scas
es
mov
sub
js
ins
adc
cmp
int3
test
shl
push
popf
inc
push
cmp
into
fs
jne
out
stos
pop
dec
jmp
das
dec
dec
xor
cmp
shr
jmp
(bad)
sbb
je
cdq
fwait
or
enter
stos
cmp
xor
mov
js
shl
(bad)
xor
outs
xchg
shr
arpl
xchg
or
or
xchg
pop
inc
jb
and
xchg
cmp
jecxz
push
call
out
pop
cs
add
pop
sti
out
loope
inc
cmps
mov
cwde
std
nop
aad
mov
pop
mov
and
cmc
data16
jge
cmps
xor
lahf
and
push
in
pop
ret
leave
pop
ins
icebp
shr
dec
jbe
std
xchg
sbb
imul
in
test
pushf
inc
xchg
sbb
inc
out
xchg
retf
adc
pop
fstp
nop
mov
and
sub
mov
and
test
dec
outs
imul
ret
in
aam
call
cmc
push
xor
dec
pop
enter
inc
loop
out
je
lods
push
jne
mov
or
xchg
test
jecxz
mov
sti
pop
jae
add
add
xor
frstor
xchg
cmp
loopne
xchg
into
dec
jae
and
adc
push
stos
aaa
ins
mov
push
popa
fst
sbb
jae
sahf
jo
rol
adc
mov
mov
cmp
inc
and
into
xor
lahf
dec
loop
cs
dec
wbinvd
cmc
dec
xchg
jecxz
imul
cmp
lods
in
dec
cmps
test
push
cmp
(bad)
rol
sbb
daa
gs
das
out
adc
retfw
xchg
cmp
leave
imul
push
push
jne
int3
push
mov
cmp
sbb
movs
aad
add
and
mov
add
jns
jg
jbe
adc
mov
mov
mov
shl
cmp
sub
xor
lods
test
add
(bad)
(bad)
cmc
jmp
lods
ds
scas
int3
mov
inc
outs
jge
and
mov
sbb
mov
das
push
inc
mov
cmps
jg
sub
lock
pop
inc
in
adc
mov
sub
xchg
int
xor
push
dec
jae
pop
in
mov
push
sbb
ja
jle
xchg
rcr
test
mov
sti
mov
popf
push
stos
mov
jne
inc
dec
mov
and
sub
mov
mov
dec
mov
out
pop
cmp
cld
leave
push
icebp
cmc
cs
jl
idiv
shl
dec
fisub
sub
adc
mov
rcl
das
inc
out
push
in
pusha
jno
dec
scas
rcl
mov
sub
vmovq
lds
xor
pop
lods
movs
xchg
dec
repz
test
retf
neg
fstp
leave
mov
jb
seta
jp
pop
cmp
cmp
mov
mov
or
outs
mov
xor
data16
and
clc
pop
retf
sbb
adc
cwde
das
int
cmp
in
fwait
lds
and
aas
mov
daa
ss
xor
fdiv
iret
ds
std
cmc
lea
ins
jns
and
lock
jae
cmc
sub
jno
out
xchg
jmp
mov
js
les
sbb
pop
add
jne
movs
cmps
cmp
sahf
aad
outs
mov
lods
jecxz
fistp
inc
and
dec
out
mov
sbb
in
pushf
pop
leave
and
inc
ds
push
push
mov
(bad)
shr
cmp
in
addr16
push
repnz
inc
lock
pop
adc
lods
leave
neg
mov
ror
cmps
jnp
cmc
in
inc
dec
dec
cld
jno
cdq
jo
fisub
dec
(bad)
dec
(bad)
cmc
data16
jmp
adc
loope
mov
xchg
(bad)
inc
cmc
push
fadd
stos
mov
jo
jnp
sti
fidiv
fdivr
and
inc
jl
and
lods
and
ja
cmps
xchg
mov
mov
xor
sbb
test
aam
push
mov
frstor
rol
loopne
shr
lahf
ds
sbb
fdiv
(bad)
push
adc
mov
add
pop
(bad)
push
sub
(bad)
repnz
lock
arpl
mov
data16
fs
icebp
dec
add
adc
outs
xor
inc
int
or
xchg
inc
fcomp
(bad)
fwait
jg
mov
push
jmp
and
cmp
je
and
clc
std
xor
(bad)
mov
ret
inc
pop
or
leave
lahf
dec
push
jae
mov
adc
xchg
xor
ja
pushf
or
inc
ret
adc
iret
mov
dec
or
sub
fild
mov
call
mov
xor
pop
cdq
sbb
js
call
dec
xchg
jmp
add
xlat
dec
mov
jb
arpl
and
push
popf
sbb
nop
fadd
int3
xlat
add
jecxz
adc
push
and
xchg
bound
fld
inc
lock
push
cmp
(bad)
sub
adc
dec
mov
and
mov
jmp
outs
or
adc
cmps
scas
add
sahf
push
or
ds
or
std
mov
loopne
or
cmovs
or
xchg
and
xor
sbb
push
dec
adc
cmp
pop
jo
out
jno
sbb
fucomip
jns
mov
jecxz
or
loopne
sub
and
mov
push
fild
sti
jns
(bad)
(bad)
sub
lea
and
sbb
aam
push
(bad)
popa
hlt
cdq
or
xchg
add
call
rcl
shr
mov
and
and
pop
int
adc
out
jbe
and
mov
mov
jl
loopne
xor
dec
int
cmc
lahf
stos
xchg
es
inc
sub
mov
sbb
cmp
jo
lea
and
mov
mov
push
shl
repnz
iret
push
mov
rol
bswap
and
add
call
outs
adc
call
xchg
ss
xchg
clc
scas
shl
cmp
pop
or
je
and
into
das
mov
or
pop
(bad)
xchg
lods
je
xchg
pop
and
test
adc
out
cld
add
fs
lods
test
daa
mov
sub
iret
fimul
movs
les
cmp
mov
xor
push
imul
xor
inc
adc
mov
pop
or
into
jmp
xor
rcr
lahf
or
imul
pop
jge
or
push
leave
sbb
adc
shl
lods
out
jl
in
mov
jle
adc
cld
lahf
mov
sbb
cwde
and
push
bound
popa
push
mov
mov
xchg
js
adc
sub
mov
lahf
mov
jmp
mov
test
(bad)
les
adc
or
jnp
mov
cmp
pop
cmp
div
push
adc
mov
and
mov
out
dec
das
aam
bound
inc
xor
(bad)
(bad)
jge
push
daa
ret
clc
loop
mov
loop
xor
inc
inc
cmp
mov
or
(bad)
loope
pop
xchg
and
jo
jmp
add
fwait
stc
xchg
addr16
test
(bad)
stc
jae
jmp
sub
sub
jb
(bad)
stos
fdiv
frstor
sbb
outs
pop
outs
gs
imul
push
repz
test
outs
adc
sbb
sbb
adc
adc
retf
mov
mov
ret
or
adc
adc
sub
stc
ins
mov
jge
adc
mov
jecxz
cmp
or
outs
loope
sbb
stc
in
sub
pusha
pop
dec
adc
sbb
js
mov
mov
shl
(bad)
hlt
call
mov
(bad)
les
xor
inc
fs
cwde
add
push
(bad)
pushf
add
hlt
out
or
push
and
ss
addr16
stc
cdq
js
push
cdq
add
pop
les
(bad)
test
push
push
sbb
push
mov
mov
sub
ja
mov
push
jmp
mov
mov
mov
xchg
mov
sbb
mov
arpl
and
add
push
and
inc
dec
xor
xor
into
xor
or
loop
push
add
je
xor
ins
out
cmp
ins
lods
loopne
mov
ret
repz
xchg
pop
pop
mov
pop
es
jae
push
bound
rcr
scas
aas
jne
xlat
or
ins
dec
push
mov
loopne
(bad)
mov
(bad)
(bad)
idiv
sub
jns
inc
je
mov
cmp
inc
fisubr
inc
xchg
movs
sbb
dec
std
in
test
mov
stos
cmp
cs
les
icebp
xor
dec
hlt
out
(bad)
inc
xor
jae
push
test
mov
popa
dec
dec
pop
loop
mov
dec
call
jl
cmps
jns
mov
push
cwde
xor
push
adc
adc
jae
mov
xchg
cmps
fnstsw
cmp
shl
test
fsin
pop
add
pop
sbb
lods
mov
mov
sahf
lods
or
xchg
(bad)
fmul
shl
cmp
rcl
fucom
mov
adc
sub
in
dec
mov
cs
cmp
mov
mul
bound
push
fsubr
fiadd
pop
or
adc
fist
and
test
int
dec
sahf
fldcw
push
dec
jecxz
mov
cmp
push
mov
push
outs
mov
mov
jb
fstp
mov
(bad)
cld
icebp
add
adc
mov
inc
cmp
push
jno
ins
fnstsw
jb
out
mov
mov
xchg
inc
aaa
sbb
int3
jecxz
shl
call
xor
(bad)
mov
and
cmp
mov
push
mov
pop
es
gs
loop
mov
xlat
not
jecxz
mov
xor
aas
sbb
mov
cs
repz
pop
sub
jecxz
dec
and
jl
mov
xchg
adc
loopne
js
cmp
jle
ins
mov
cmp
pop
add
(bad)
xor
cli
mov
jno
push
adc
fidivr
scas
sub
cmc
nop
js
dec
mov
(bad)
popa
in
mov
mov
mov
xchg
adc
jmp
je
(bad)
fist
je
push
loope
mov
inc
arpl
push
mov
movs
aas
cld
addr16
jnp
stc
and
(bad)
cmp
jb
adc
sbb
cmp
loop
movs
cs
rcr
ins
cwde
xor
mov
dec
mov
inc
cmp
or
sbb
push
pushf
fmul
fcom
loopne
mov
(bad)
xchg
cs
aas
je
push
adc
movs
inc
sub
outs
xchg
pop
cmp
es
mov
aad
pop
fadd
xchg
movs
mov
aad
dec
stc
(bad)
ja
jne
jmp
jb
sub
test
adc
cs
outs
xlat
cmc
bound
xor
mov
ss
cmc
pop
stc
ffreep
(bad)
enter
push
pop
cdq
fsubr
aas
loope
inc
xchg
ror
out
lahf
(bad)
push
add
test
ds
mov
mov
call
xor
xor
mov
(bad)
adc
dec
inc
ds
(bad)
pop
(bad)
jmp
xor
and
ror
imul
dec
sub
test
pop
pop
iret
xor
imul
inc
movs
mov
(bad)
es
idiv
cmp
scas
outs
movs
(bad)
bnd
or
sub
jnp
or
inc
add
addr16
pusha
jmp
fs
stc
sbb
ss
lahf
mov
out
les
sbb
retf
out
push
jle
mov
inc
xor
mov
(bad)
imul
xchg
fbld
push
fwait
loope
rol
dec
neg
es
mov
push
inc
mov
stc
popf
in
mov
js
dec
aas
sub
mov
loopne
sbb
scas
dec
adc
sbb
jmp
(bad)
push
jg
nop
xor
mov
ins
imul
jge
sahf
lock
outs
call
das
(bad)
adc
not
and
sub
sahf
jmp
scas
push
pop
dec
not
push
daa
test
inc
arpl
sbb
mov
dec
sbb
ins
out
in
loope
add
(bad)
pop
fistp
and
test
jp
rcl
lahf
add
xor
retf
mov
shl
and
shl
test
inc
push
jne
sbb
aas
sbb
push
imul
cmp
popf
fld
mov
(bad)
pop
cli
lds
pop
or
movs
dec
push
loop
mov
test
dec
jnp
add
(bad)
cmp
mov
and
xlat
mov
mov
pop
inc
sti
and
adc
lods
cmp
enter
in
jmp
test
mov
mov
inc
in
push
cmp
or
mul
jmp
xchg
cs
xchg
mov
jb
not
xor
(bad)
stc
xor
jnp
mov
sti
test
sub
dec
dec
rcr
lods
(bad)
mov
mov
jne
xchg
jns
out
inc
clc
mov
mov
ss
inc
mov
sub
sahf
inc
xchg
push
test
push
fchs
sbb
(bad)
loope
add
cld
std
sub
adc
ret
enter
fs
push
loop
retf
cmp
lock
jne
mov
mov
add
aam
cs
pop
sahf
out
icebp
dec
sahf
xor
xchg
add
pop
call
dec
mov
repz
clc
cld
add
mov
ret
sub
xor
or
add
call
jbe
das
mov
jno
mov
pop
pushf
xchg
(bad)
jmp
gs
xor
icebp
sbb
aam
and
jl
add
fwait
cmp
fld
xor
mov
outs
jns
pop
xchg
jo
cs
pushf
adc
add
push
adc
xchg
(bad)
les
add
dec
add
out
mov
cmp
xor
inc
adc
mov
jns
cld
pop
adc
add
ins
sub
sbb
jno
loope
int
(bad)
ret
or
movs
shr
sub
sbb
xor
out
xchg
push
dec
stc
mov
test
cmp
mov
cmp
shl
dec
mov
data16
mov
sbb
push
pop
(bad)
clc
adc
push
push
ss
call
xor
xchg
div
in
(bad)
sub
mov
scas
jmp
dec
pop
addr16
xchg
sbb
in
jae
movs
shr
xchg
(bad)
(bad)
int3
or
fs
stc
xor
jg
into
(bad)
cs
cmp
sub
and
scas
ja
enter
shl
inc
jns
adc
inc
fisub
inc
(bad)
shl
sub
push
add
dec
imul
retf
ror
aaa
imul
call
dec
imul
aam
xor
sbb
cmp
jmp
iret
mov
mov
xchg
mov
clc
gs
imul
cmp
and
pop
mov
add
lea
jne
and
push
clc
mov
mov
dec
movs
push
and
jbe
lock
into
xchg
mov
icebp
test
xchg
inc
popa
jne
dec
pop
rcr
and
mov
lds
jo
or
std
pop
sub
pop
call
or
inc
sbb
push
sub
scas
inc
jle
inc
movs
int
or
(bad)
push
jl
loop
je
punpckldq
pop
in
imul
stc
icebp
jle
bnd
sbb
(bad)
lea
push
call
push
mov
cmp
dec
arpl
mov
arpl
push
cs
cmc
adc
mov
(bad)
loope
je
mov
xor
adc
fadd
inc
movs
into
mov
add
push
xor
xor
lea
jecxz
in
sbb
cwde
and
adc
cdq
xor
adc
push
mov
add
push
and
bnd
movs
in
and
aaa
xchg
mov
retf
arpl
xchg
ret
aad
push
xchg
jle
push
mov
mov
pushf
sbb
(bad)
in
aad
iret
mov
aam
not
movs
sbb
ins
add
adc
jne
pushf
add
(bad)
mov
adc
cmp
mov
daa
lock
lds
push
push
xlat
imul
mov
hlt
and
out
pop
daa
jns
mov
out
sbb
test
or
sub
dec
cmp
jmp
dec
mov
inc
cmps
aas
ds
mov
pop
cli
cld
push
push
pop
lock
sbb
cmc
cmp
and
mov
adc
add
inc
jl
push
push
xor
xchg
int3
in
mov
xchg
in
mov
enter
pop
adc
add
aad
push
and
sti
push
sbb
sbb
dec
mov
stos
mov
cmc
push
pop
out
pushf
popf
cmps
push
mov
dec
lods
loope
add
jle
mov
fsub
inc
pop
into
jne
(bad)
retf
push
and
jne
and
mov
shr
fnstcw
mov
cwde
sbb
push
aam
shl
jp
popf
jle
je
inc
aam
pop
jle
push
push
test
or
cmp
call
ja
mov
mov
mov
int
into
push
mov
div
xchg
pop
and
sbb
fwait
jb
cmp
pop
lock
leave
or
lods
mov
mov
js
push
jp
cmp
add
xlat
cmp
imul
mov
sub
sbb
push
or
(bad)
lods
mov
cli
retf
sbb
cmp
add
in
mov
lahf
adc
pop
in
movs
out
pusha
mov
adc
push
adc
inc
xchg
mov
(bad)
sti
sub
les
bound
ja
aam
enter
cmp
retf
mov
scas
jbe
in
mov
dec
mov
dec
and
sbb
or
cmp
xchg
dec
adc
clc
jbe
add
cmp
hlt
fild
jne
je
push
ins
sub
ror
sbb
adc
retf
add
cs
dec
stos
in
jb
jmp
push
mov
js
pushf
mov
push
cmp
movs
cwde
xchg
push
mov
popf
push
mov
sbb
inc
adc
sbb
mul
xor
add
iret
hlt
fnstsw
je
loopne
pushf
dec
push
dec
push
dec
dec
or
lods
sahf
mov
add
in
pop
loopne
mov
xor
mov
movs
stos
loopne
mov
jns
inc
in
sbb
inc
sub
mov
jbe
cmp
fwait
pop
push
jge
fwait
xor
mov
fsubr
cmp
push
lods
test
add
call
add
sbb
in
sahf
shl
mov
pop
mov
or
icebp
inc
inc
add
ins
and
pop
dec
out
lods
xchg
and
fs
jo
inc
and
mov
das
in
jb
jg
or
add
pop
aas
imul
sbb
jns
fisttp
test
jns
adc
loopne
pushf
call
inc
mov
das
xchg
std
lock
sbb
push
jo
add
in
adc
sbb
out
scas
push
mov
gs
fdecstp
outs
fist
add
lahf
pop
ja
dec
out
jl
sub
xor
jl
out
cwde
xor
mul
enter
sub
mov
js
pop
dec
cmp
dec
lock
out
ds
xchg
int
sbb
(bad)
pop
sub
aam
pop
icebp
clc
sub
rol
push
fwait
cmps
xor
outs
ins
jns
repz
push
sub
xor
mov
lea
push
ja
pop
popa
pop
push
sbb
arpl
cmc
in
inc
out
push
cwde
mov
push
rcl
xchg
mov
test
sub
shl
cmps
ins
ffree
jge
mov
push
sbb
cmps
sub
dec
test
dec
add
and
mov
jg
bound
mov
sub
push
mul
in
fdiv
pop
push
push
cmp
pop
repz
or
pop
add
dec
ror
mul
scas
cdq
inc
inc
aam
iret
xchg
mov
pop
mov
mov
scas
jge
add
inc
(bad)
inc
inc
pop
(bad)
icebp
imul
jb
fcmovnu
mov
es
cwde
jb
lods
adc
ja
and
or
push
outs
inc
mov
push
adc
ret
cmps
lea
lods
mov
and
inc
inc
mov
mov
imul
or
pop
loop
jne
xchg
pop
pop
xchg
(bad)
adc
loopne
push
inc
and
cmp
ss
pop
test
je
callw
inc
cmc
jne
shr
mov
(bad)
jae
outs
jnp
pop
xchg
jnp
mov
pop
retf
add
ins
jo
movs
ja
inc
cmp
push
xchg
aas
loop
fdivr
jbe
cmp
call
xor
and
shl
pop
into
inc
sub
mov
arpl
ja
jns
xor
jbe
call
daa
sbb
cmps
movs
stc
or
sbb
inc
sbb
mov
sahf
inc
mov
(bad)
out
rcr
mov
int
mov
xchg
add
add
scas
mov
imul
pop
lods
imul
loopne
sub
out
mov
push
push
or
xor
mov
rcl
retf
cmp
cdq
dec
cwde
xor
pop
or
popa
imul
sbb
out
push
shl
dec
in
imul
loop
xlat
ror
cmps
pop
and
test
sub
loopne
and
mov
add
mov
sbb
push
mov
mov
gs
fcmovu
mov
mov
mov
(bad)
sub
xor
out
shl
pop
mov
das
cmp
inc
mov
jmp
nop
in
jb
imul
mov
or
sub
jnp
adc
sahf
les
popa
outs
xchg
mov
icebp
mov
sub
adc
(bad)
int
test
xchg
jge
mov
jno
pop
add
test
mov
cli
inc
scas
fsub
mov
cmp
mov
xchg
xchg
test
sbb
push
nop
hlt
arpl
lods
scas
add
mov
stc
test
xrelease
dec
mov
daa
inc
les
pusha
cmp
xchg
fsub
and
xchg
jmp
enter
lock
push
repnz
pop
pusha
nop
cmp
(bad)
loope
cmp
jl
out
inc
shl
xchg
aas
retf
mov
jl
mov
stc
jnp
push
in
rol
jne
push
mov
repnz
jg
add
movs
sbb
mov
in
ss
add
ins
pop
push
mov
adc
fwait
cwde
(bad)
lock
mov
out
out
loope
pop
cmp
cmps
test
arpl
jge
test
push
fild
ret
xchg
add
cld
push
xchg
sbb
stos
inc
or
dec
add
add
lods
mov
inc
sbb
lahf
xor
dec
inc
push
(bad)
fild
adc
out
out
dec
sbb
push
das
mov
cli
xchg
inc
adc
in
outs
adc
pop
sti
popa
jmp
scas
scas
aam
cmp
in
into
add
icebp
gs
loopne
fadd
idiv
scas
sub
xchg
and
adc
xor
rcr
daa
idiv
xchg
fdivp
mov
cs
sbb
aam
in
es
add
add
mov
and
pop
rol
sbb
rol
inc
mov
cmp
adc
mov
leave
int3
(bad)
pop
dec
pop
fwait
dec
and
out
jp
nop
xchg
jmp
push
inc
in
jne
mov
jnp
fcmovbe
cs
jge
int3
xor
leave
pop
xchg
je
inc
mov
sbb
sbb
outs
je
clc
outs
leave
push
jne
fcomp
dec
inc
pusha
sbb
mov
push
mov
adc
cmp
mov
in
inc
inc
call
out
enter
aas
int3
rol
out
cmp
mov
inc
adc
jae
lahf
and
scas
push
(bad)
sub
sub
movs
pop
adc
push
gs
mov
jg
leave
xchg
pop
(bad)
hlt
aaa
dec
pop
sub
test
dec
mov
(bad)
mov
mov
mov
and
stc
add
cwde
cld
sbb
mov
mov
bound
jbe
or
push
and
lods
dec
pop
scas
sti
jne
pop
add
fimul
push
pushf
div
push
mov
push
adc
sub
idiv
cmp
xor
xchg
lods
pop
mov
mov
push
ret
(bad)
xchg
jl
push
cwde
(bad)
iret
and
push
or
mov
mov
mov
inc
out
push
leave
enter
call
mov
sbb
mov
cdq
bound
int3
cmp
pop
sub
dec
jnp
bsr
sub
add
jns
call
and
(bad)
pop
mov
push
mov
dec
xchg
lds
pop
pop
or
sbb
data16
outs
mov
dec
cli
mov
push
test
or
pop
js
mov
cdq
jecxz
stos
js
aam
cwde
movs
jp
iret
les
rcr
inc
inc
int3
ds
pop
arpl
gs
ins
int3
mov
sar
stc
bound
mov
jne
enter
sub
sbb
sub
int
or
ret
mov
fisttp
sub
jmp
jp
mov
sub
add
jb
in
or
xchg
pop
xor
push
and
cs
test
mov
push
std
inc
inc
icebp
push
push
ret
push
xchg
mov
loop
jle
imul
and
outs
mov
enter
pushf
add
aas
jecxz
cld
pop
(bad)
int
call
aam
jle
call
test
neg
mov
sti
imul
(bad)
jmp
jns
xor
sub
pop
(bad)
mov
sbb
xor
cmps
and
push
fbld
push
mov
xlat
add
inc
pop
leave
inc
(bad)
adc
mov
push
pop
dec
mov
in
pop
mov
jnp
or
and
xor
loopne
cld
cwde
aaa
sbb
fs
out
shr
add
push
mov
xchg
mov
sub
cmps
xor
fisubr
push
push
mov
mov
push
cmp
lds
enter
cmp
or
in
dec
fmul
jb
outs
lea
jbe
jb
inc
das
mov
es
aad
push
in
pop
dec
inc
xor
jmp
daa
push
jne
into
push
push
or
adc
sub
or
inc
jnp
push
scas
call
inc
jo
dec
cdq
sar
test
sbb
xor
and
pop
bound
cmp
movaps
fild
jg
and
cmps
nop
clc
add
and
fcom
and
sub
sahf
sbb
mov
retf
iret
pop
idiv
lock
out
cmc
scas
inc
mov
jge
repnz
adc
repz
ins
out
add
push
push
pop
fwait
sbb
mov
pop
and
fiadd
sbb
adc
sbb
gs
shufps
jl
jo
cmp
jbe
cli
mov
mov
shl
jb
hlt
loope
xchg
test
xchg
jecxz
xor
std
cmp
add
mov
ret
jecxz
ror
sar
jae
pop
mov
ret
dec
jne
cmp
inc
ror
mov
jne
mov
rcr
retf
push
cmp
jle
jb
test
sub
xor
nop
out
xor
sbb
mov
shl
and
movs
fsub
xor
scas
aaa
jo
xchg
pop
test
test
and
sbb
call
jmp
xchg
sbb
nop
fimul
daa
mov
jnp
lds
aam
fwait
stos
jle
das
shl
mov
jbe
inc
cdq
fmul
xchg
movs
mov
mov
jecxz
mov
daa
sub
xor
xchg
add
movs
xor
icebp
sar
fidivr
loop
popf
mov
scas
push
cmps
and
push
icebp
call
xor
repz
cdq
push
nop
popa
add
movs
cdq
sub
enter
xchg
sbb
pop
fimul
pop
retf
mov
call
push
loop
shl
mov
sbb
pop
pop
add
pop
arpl
push
test
and
mov
sub
fs
mov
jbe
nop
(bad)
inc
add
ja
sbb
jno
scas
cmp
loopne
jbe
xchg
das
xor
ss
or
adc
mov
scas
push
pop
jmp
xor
std
mov
xor
stos
pop
in
pop
and
xchg
mov
dec
shr
lahf
jbe
add
mov
or
add
push
cmp
push
repnz
sub
call
aam
repz
sub
fsubr
cld
inc
mov
aas
sbb
mov
rcr
dec
sahf
ins
xor
mov
adc
aaa
sub
or
retf
jp
vhsubpd
lock
adc
ins
sbb
and
mov
sbb
(bad)
adc
fldcw
jne
inc
pop
add
jae
mov
cmp
dec
sti
jl
(bad)
ins
pop
cmp
scas
loopne
xor
jno
rol
outs
add
in
xor
pop
push
in
inc
fdivr
ja
popf
cmp
ret
mov
int3
ins
loopne
xor
mov
or
outs
jg
sbb
into
mov
xor
adc
and
cmc
jo
and
and
sub
stc
loop
mov
retf
cmps
cmp
xchg
clc
mov
addr16
call
shr
ins
in
mov
int3
sbb
inc
push
test
xchg
test
ficomp
gs
call
mov
bound
or
lock
outs
mov
mov
ins
outs
push
mov
lock
push
in
jne
mov
pop
xor
xchg
dec
xor
mov
outs
mov
add
xchg
inc
push
lods
xchg
out
fisub
mov
fiadd
loop
fistp
icebp
mov
ja
pop
jle
movs
out
(bad)
mov
jle
retf
adc
cmp
mov
push
cwde
cmc
sbb
sbb
leave
mov
pushf
jge
mov
je
stos
pop
stos
mov
and
nop
mov
xchg
call
inc
frstor
scas
(bad)
in
xor
xor
pop
mov
sbb
lods
mov
pop
cmps
pushf
mov
scas
iret
jge
arpl
jo
xchg
fwait
not
out
push
and
cmp
xor
xchg
repz
mov
push
cmps
(bad)
ins
cmc
ins
sub
xchg
int3
fwait
test
cs
ja
jle
call
in
test
jb
(bad)
sti
out
sbb
jno
mov
dec
adc
mul
pop
je
pusha
retf
lahf
cmp
test
inc
cdq
in
mov
inc
ds
pop
push
mov
mov
adc
lods
xlat
add
push
icebp
mov
repnz
mov
mov
jmp
add
in
shl
or
outs
shr
sbb
cwde
mov
sbb
dec
in
std
fwait
push
das
xor
xor
inc
add
ds
je
jbe
scas
dec
int3
cmps
cmp
mov
dec
retf
sub
enter
jns
movs
fwait
sbb
xchg
scas
fwait
movs
push
out
pop
cmp
cmps
repz
and
push
or
sub
push
inc
mov
dec
push
lahf
dec
xchg
shl
into
clc
cdq
adc
shl
ja
mov
pop
add
hlt
or
sbb
adc
xchg
pop
and
xchg
sub
or
test
cwde
pusha
mov
fisub
mov
cmp
aad
mov
icebp
shl
push
mov
stc
outs
leave
cwde
in
ret
mov
ret
cmp
push
xchg
and
out
iret
and
inc
daa
cmp
arpl
imul
xchg
mov
cld
push
jp
es
outs
inc
add
jp
ss
movs
jmp
cli
xor
jle
outs
loope
scas
in
in
push
cmps
push
xchg
pop
sbb
icebp
jne
sub
cmp
pop
(bad)
pop
shr
fiadd
ror
jbe
xor
mov
fwait
lock
arpl
mov
sbb
sahf
or
outs
or
sar
neg
shl
and
push
fs
pop
inc
cwde
mov
test
ins
call
ja
push
in
pop
push
mov
add
ins
or
movs
adc
test
xor
jmp
mov
in
dec
xor
inc
xchg
pusha
jle
sbb
mov
retf
mov
in
xchg
les
ror
sbb
dec
test
(bad)
pop
pop
jg
cmp
(bad)
fnstsw
add
fisub
pop
jp
iret
pop
js
sub
dec
inc
inc
out
jecxz
or
mov
imul
cmps
push
aam
das
xlat
and
retf
in
std
lods
add
jns
lds
xor
repnz
mov
adc
inc
stos
push
in
movs
and
sub
push
jge
cli
ror
fidiv
sbb
dec
adc
(bad)
pushf
jmp
loope
push
ret
fbld
inc
or
loope
or
xchg
mov
add
xlat
ror
mov
xchg
dec
mov
jecxz
xchg
mov
or
out
and
iret
add
dec
and
sar
pop
packsswb
jl
std
and
push
cmp
out
sbb
jb
imul
in
test
inc
sbb
in
mov
and
(bad)
mov
ret
mov
(bad)
push
ins
cmp
adc
mov
mov
sti
stos
mov
rcl
jae
mov
adc
inc
jecxz
xor
cmp
aad
aaa
mov
test
pop
std
popa
sub
fld
add
pop
arpl
jae
mov
jmp
cmp
xor
shl
test
or
test
mov
sbb
dec
and
xor
xchg
cmp
lds
outs
add
xor
inc
inc
cmp
outs
add
in
popa
ret
adc
ficomp
pop
or
pop
xchg
sbb
int3
sbb
cmp
enter
mov
xchg
rcl
loope
je
xor
(bad)
ins
imul
fild
fidivr
mov
add
(bad)
adc
xchg
jl
push
js
push
jmp
stc
xchg
hlt
jmp
mov
fwait
jae
xor
int
leave
sub
int3
xor
lock
cs
pop
xchg
cmps
sbb
jge
push
add
pusha
jae
xchg
lods
or
push
fucomip
jg
and
inc
scas
inc
pusha
retf
mov
xchg
xor
lea
imul
xchg
jg
push
push
aam
mov
adc
mov
inc
test
data16
cmps
push
push
inc
push
push
xchg
push
pop
adc
ja
scas
push
sbb
cmp
mov
mov
mov
adc
push
mov
add
mov
push
stos
and
repz
ja
sbb
pop
cmp
lahf
js
dec
jbe
dec
(bad)
add
ss
mov
rol
out
xor
xchg
scas
hlt
aad
inc
retf
movhps
add
mov
sub
push
mov
cdq
lods
push
mov
and
mov
shl
test
mov
push
inc
imul
xchg
sti
sub
mov
push
adc
xor
repz
jl
xor
jns
mov
push
mov
out
loope
jle
pop
scas
int3
outs
loop
lods
mov
lea
inc
or
(bad)
jbe
(bad)
sub
xchg
sbb
movs
adc
dec
jl
mov
jecxz
into
mov
(bad)
mov
add
xor
or
jl
cmp
mov
out
jno
fdiv
inc
xchg
push
mov
test
aad
cld
pop
int
dec
arpl
loop
mov
jmp
pop
sbb
(bad)
int
xor
sbb
sub
repz
cmp
xchg
icebp
inc
mov
loope
xchg
mov
inc
pop
sub
xchg
loop
mov
inc
out
fwait
dec
pop
push
stos
sub
popf
mov
cmc
mov
mov
in
xor
xchg
pminsw
adc
push
xchg
mov
popa
mov
ins
loop
(bad)
aam
and
inc
and
add
repnz
pop
out
jg
imul
inc
(bad)
mov
cmps
sub
shr
sub
push
repnz
xor
inc
cdq
pop
jae
ds
inc
jnp
aaa
mov
xchg
jmp
fidiv
push
loope
sahf
(bad)
jb
jns
pop
outs
or
loopne
add
hlt
shl
retf
mov
ss
or
xchg
xor
mov
ds
mov
cdq
mov
adc
movs
and
ret
in
imul
cmp
xor
push
loop
mov
jmp
cli
adc
stos
jmp
dec
into
outs
mov
rol
test
mov
sbb
cmp
jecxz
push
sti
les
imul
outs
jmp
xchg
or
fisub
push
mov
xchg
shl
jnp
jbe
jge
dec
xchg
popf
mov
dec
mov
and
mov
sub
data16
shr
push
sub
ja
jecxz
leave
out
push
adc
in
adc
aaa
not
sub
and
cmp
xchg
test
adc
aam
in
and
in
(bad)
add
jle
add
add
cmp
cmp
adc
int3
(bad)
std
or
mov
loop
arpl
jb
fs
mov
jge
dec
adc
adc
mov
mov
jg
or
jbe
cdq
les
(bad)
sbb
mov
movs
xchg
inc
retf
mov
test
jge
pop
jns
pop
and
imul
push
popa
pop
sbb
adc
mov
pop
sbb
cmp
lock
sub
arpl
adc
in
sbb
daa
je
cmp
retf
movs
mov
push
popf
pop
mov
fcomp
enter
cmp
add
cmp
xor
(bad)
mov
arpl
std
cmp
push
gs
xchg
xor
xchg
into
inc
inc
pop
inc
pop
mov
sbb
enter
mov
push
mov
pop
push
add
mov
mov
imul
inc
inc
mov
or
push
xchg
retf
add
rol
pusha
mov
in
cmc
cld
cld
in
(bad)
fsub
mov
dec
loop
cmp
mov
sbb
fstp
enter
jl
out
popf
out
pop
mov
xor
pop
jno
jg
add
push
xchg
xchg
add
pop
mov
push
xlat
test
in
into
jl
adc
out
movs
mov
js
mov
in
out
lds
pop
pop
test
sbb
inc
sbb
out
cli
call
inc
outs
xchg
xor
bound
retf
popa
cmp
scas
sbb
mov
cmp
pop
xor
in
or
jmp
retf
or
out
dec
adc
(bad)
xchg
mov
pop
pop
addr16
pop
in
shl
js
(bad)
fisubr
(bad)
cmp
xchg
rcr
sub
mov
or
cli
enter
adc
test
pop
(bad)
mov
xchg
adc
mov
xor
retf
(bad)
psubd
aas
repz
stos
(bad)
jp
ins
mov
pop
mov
xchg
lods
sbb
cmps
les
mov
fld
repz
or
data16
pop
sub
add
ret
bound
sbb
inc
pop
fnstenv
test
xchg
pop
push
xchg
adc
ins
pminsw
mov
xchg
mov
or
ss
int3
mov
xor
fdivr
or
xor
mov
aad
cmc
ja
xlat
mov
test
in
jne
mov
mov
inc
fidivr
and
and
cmp
push
jne
lods
test
jle
aaa
adc
rcr
ds
fwait
add
lock
and
jnp
aaa
retf
aad
jb
mov
test
lds
pop
mov
popa
adc
pop
push
rcr
sub
mov
adc
inc
fs
mov
imul
int
mov
sub
jl
retf
fucomp
mov
adc
mov
test
xor
cld
cmp
stos
push
retf
lea
jns
cmp
pop
cmp
xor
mov
sub
xchg
and
lock
sub
mov
arpl
xor
jmp
add
jne
loop
mov
loopne
pop
mov
mov
outs
cmps
pop
mov
cmp
out
outs
sub
into
or
push
idiv
iret
inc
mov
mov
push
or
jmp
fild
fstp
xchg
mov
xor
sub
fs
pop
daa
sub
lahf
ins
pusha
imul
cmp
push
dec
cmp
xchg
sub
sub
jge
mov
das
test
out
je
jmp
sbb
jle
cmp
into
int
mov
or
jmp
(bad)
out
sti
fist
test
loop
adc
xchg
or
jb
icebp
pop
mov
dec
pop
ret
inc
rol
daa
pop
or
js
mov
lods
inc
mov
lea
movs
push
fcomp
shr
neg
jle
test
xchg
push
cmp
sub
mov
scas
scas
mov
int
mov
xchg
movs
jb
icebp
jp
pop
adc
cmc
je
nop
xchg
repz
rcr
hlt
fcomp
dec
mov
inc
inc
xchg
ret
(bad)
and
mov
ja
xor
out
xchg
mov
dec
ja
sbb
mov
ins
jno
or
add
rcl
dec
sub
and
das
popa
dec
jns
iret
mov
mov
jl
pusha
call
mov
adc
aaa
xchg
mov
inc
int
or
call
add
sbb
push
inc
fistp
mov
gs
das
div
test
jmp
pop
pushf
pop
retf
es
dec
sbb
shr
aaa
sbb
in
mov
jne
cmps
shl
dec
ror
sub
cdq
jp
nop
jecxz
pop
ss
cmp
adc
popf
mov
ror
mov
fmul
mov
mov
mov
xchg
movs
jns
in
pop
jp
lods
pop
(bad)
push
cmp
cli
sub
aaa
and
cdq
jno
nop
icebp
out
cmc
jge
jnp
pop
jp
fwait
ss
sbb
pop
jae
cmp
inc
mov
call
and
or
push
ret
mov
push
enter
cmps
cmps
es
push
cmp
shl
jnp
clc
xchg
mov
cmp
and
hlt
pop
aaa
callw
jmp
push
xchg
pushf
(bad)
(bad)
shr
dec
xor
bound
shr
sahf
jo
dec
push
or
shl
inc
dec
out
cdq
retf
call
retf
lods
adc
out
into
out
or
pop
add
ja
das
test
mov
pop
adc
stos
imul
and
bound
jbe
jo
movs
push
gs
call
xchg
arpl
add
lds
gs
cs
pop
leave
rcl
and
cmc
xchg
mov
pop
mov
xchg
dec
leave
retf
pop
ins
shl
je
test
cmp
push
pop
or
adc
mov
pop
push
repz
stc
push
inc
push
mov
pop
push
js
adc
call
and
dec
mov
loopne
push
test
adc
loope
stos
or
pop
inc
or
or
adc
mov
jnp
add
gs
cwde
sub
movs
add
ret
(bad)
push
jmp
sub
dec
outs
out
setnp
jecxz
sub
out
jge
lea
(bad)
stos
cmp
scas
ins
cmp
push
jecxz
push
inc
pop
xor
sub
cwde
push
shr
bound
xchg
adc
je
enter
cmps
cli
shl
mov
imul
fdivr
add
frstor
mov
cli
adc
ds
dec
hlt
adc
std
cmp
fcomp
cmc
sub
push
call
ret
shl
sar
fstp
call
fstp
adc
mov
adc
cmp
xchg
call
jnp
mov
jb
push
inc
ins
inc
pop
sbb
add
fisubr
dec
xchg
fld
push
jns
iret
jb
ja
stos
inc
gs
test
inc
mov
loop
xlat
out
inc
mov
mov
scas
and
mov
test
sub
inc
pop
jno
fsubr
dec
call
in
sbb
aad
adc
ss
sub
cmc
popa
inc
mov
fsub
xchg
mov
int
xchg
or
test
aam
jp
int3
test
ret
je
retf
mov
mov
xchg
or
dec
adc
cmp
pop
pop
or
xchg
int3
push
xor
test
push
lock
ins
sub
sbb
adc
test
pop
jns
lahf
inc
adc
cli
xor
data16
fistp
stc
es
push
sub
jmp
arpl
ds
mov
sub
jne
test
out
(bad)
pusha
jb
aaa
dec
cli
jbe
mov
xor
jmp
add
je
aad
fsubr
cmp
fs
or
fld
in
rcl
je
inc
add
push
xchg
sbb
xor
jae
mov
cmc
push
call
cmp
sbb
and
mov
mov
ret
call
pop
pop
sti
xor
dec
and
push
dec
retf
inc
cwde
add
push
stos
cli
into
cmp
adc
pop
in
jge
push
mov
mov
not
lods
xor
mov
(bad)
cmps
dec
pushf
mov
test
mov
adc
cld
cmp
push
imul
das
jmp
imul
pop
lds
ret
sub
cmps
and
fldenv
mov
stc
mov
pop
cmps
xor
sar
dec
aaa
sbb
mov
clc
pushf
(bad)
clc
inc
xchg
inc
dec
aad
xchg
pop
inc
les
imul
push
fnstsw
mov
aam
mov
cmp
outs
add
fld
push
js
sbb
mov
xor
or
adc
jge
ficom
mov
mov
es
cmp
lds
jae
dec
mov
cdq
pop
out
cmp
scas
(bad)
outs
gs
fst
fsubr
mov
sti
in
mov
retf
xchg
mov
out
mov
lods
inc
test
push
and
test
jl
jmp
and
xchg
pop
frstor
push
sbb
cmp
ss
retf
cmp
fs
repnz
cmp
scas
scas
mov
mov
mov
push
xor
inc
adc
clc
mov
es
push
xchg
inc
push
sub
fld
test
das
sahf
or
test
jbe
dec
push
les
pusha
sub
pop
mov
jne
push
iret
push
add
mov
test
inc
xor
das
mov
jmp
push
cmp
fldcw
idiv
mov
outs
dec
fwait
test
cwde
les
mov
mov
push
cmp
je
lahf
in
(bad)
fstp
cmp
jle
mov
xor
mov
cmc
xor
xchg
cmc
icebp
rcr
and
lods
inc
jmp
mov
sub
jo
icebp
sahf
and
sub
sub
aad
push
cmps
xchg
sbb
mov
stos
jne
cmps
push
cmp
xchg
adc
jmp
pushf
mov
mov
jne
jo
mov
les
in
and
cld
mov
ret
jg
mov
jb
lods
sub
jl
test
dec
(bad)
ds
mov
repz
push
push
repz
xchg
xor
ror
movs
(bad)
or
mov
into
enter
cmp
sub
jge
fs
js
out
pop
adc
xchg
mov
xchg
jmp
cld
lock
pop
dec
test
mov
mul
lock
jp
xor
(bad)
inc
sub
fwait
cmp
or
fadd
and
fnsave
sar
pop
push
mov
loopne
or
sub
sub
pop
shl
pop
(bad)
adc
ror
adc
sbb
dec
mov
or
adc
mov
fistp
and
xchg
in
xor
xchg
repz
sbb
cmc
rol
adc
retf
inc
push
scas
sbb
adc
lea
adc
sbb
adc
xlat
cmp
jl
stos
addr16
adc
call
ss
sub
dec
addr16
jmp
mov
jle
cli
cmp
adc
jecxz
xor
mov
das
or
jmp
and
int
xor
loope
mov
jmp
shl
int3
test
jmp
pop
cmps
mov
sbb
cmps
xchg
cwde
cmp
retf
cmp
das
lods
push
cs
jnp
push
repnz
test
add
adc
lds
cmp
hlt
adc
outs
cmp
pop
mov
and
xor
lock
xchg
jne
jb
sub
movs
sbb
push
loop
gs
push
aas
test
or
or
call
fs
mov
stos
ficomp
sbb
pop
cmp
pop
jp
or
imul
(bad)
adc
jbe
mov
cmps
push
inc
cs
xor
in
xchg
pop
xor
push
add
dec
sbb
add
jbe
add
xor
mov
cmps
inc
jge
ins
pop
(bad)
aas
cmp
inc
hlt
push
(bad)
jg
rol
movs
es
in
lock
add
xlat
jge
sahf
inc
clc
call
push
movs
popa
out
lds
rcl
cmc
lods
inc
xchg
cli
xor
lea
pop
inc
sub
cli
mov
or
jmp
mov
into
arpl
in
sbb
add
stos
adc
inc
cmp
adc
es
mov
push
mov
sbb
mov
out
cmc
aad
mov
adc
bsr
rcl
and
fistp
sbb
arpl
mov
sti
mov
mov
mov
jmp
pop
mov
or
(bad)
test
cmp
xor
sbb
lock
ret
cli
and
dec
mov
jbe
dec
mov
ss
cmc
scas
mov
aas
inc
pop
sub
sub
fwait
fwait
aas
std
test
mov
jle
and
add
scas
xlat
cmove
mov
enter
cld
sub
mov
mov
call
cmp
cmps
outs
push
fwait
pop
dec
pop
jg
and
int
repnz
mov
shr
mov
icebp
ja
lods
and
out
outs
jo
mov
mov
jl
xchg
out
and
cmps
das
repz
xchg
sar
addr16
jns
push
cmp
shl
push
inc
mov
cli
repz
aas
mov
ss
and
cmps
cmp
sbb
xlat
mov
retf
sbb
add
clc
adc
push
gs
or
jp
sub
popf
push
imul
cli
jae
jg
adc
mov
dec
pop
daa
arpl
bnd
retf
pop
mov
retf
clc
jp
ins
out
xchg
icebp
fcom
pushf
fild
cmp
rol
outs
add
int
les
xlat
stos
jb
sbb
jmp
ds
push
dec
cmps
mov
pop
xor
seto
inc
sbb
les
jne
xchg
fadd
icebp
xor
dec
xchg
outs
xchg
lea
xchg
mov
call
lods
dec
sti
push
mov
jl
mov
xchg
and
fild
dec
out
call
add
or
out
jl
push
inc
pushf
cmps
mov
jbe
mov
jg
mov
punpckhdq
scas
dec
add
int3
adc
in
fimul
popa
retf
mov
dec
mov
xlat
dec
mov
jle
cmp
int3
mov
sub
cmp
les
mov
adc
imul
hlt
in
jb
fwait
xchg
pop
push
out
adc
scas
ficom
ret
lods
xchg
pop
movs
adc
cmp
test
mov
test
or
mov
inc
and
ds
les
mov
cld
jns
loope
mov
cmc
jne
pop
test
xor
inc
sub
cmp
popa
jo
mov
cmp
cmps
jae
mov
popa
jb
jne
add
xchg
ins
sbb
add
dec
out
and
push
mov
pop
inc
scas
fist
xchg
fbld
lods
mov
int3
ja
cmps
(bad)
rcr
fcom
cmp
loopne
das
or
add
mov
aaa
dec
repnz
call
sub
clc
(bad)
fcmovnbe
jne
mov
les
dec
imul
fwait
out
popa
test
xchg
and
mov
push
push
mov
mov
cmp
leave
inc
retf
sbb
xadd
cmp
push
setno
out
jl
sar
fdivp
sub
sub
jns
hlt
mov
lods
xchg
inc
cld
xlat
dec
xlat
int
xor
aas
push
pop
into
clc
fld
loopne
pop
les
adc
stos
jle
enter
sbb
xchg
lods
cmp
popf
mov
retf
addr16
lods
in
cmp
aas
fcom
retf
mov
(bad)
sbb
jae
add
sbb
dec
xchg
test
xor
inc
pop
xor
ss
aaa
xor
xlat
leave
push
inc
(bad)
and
lods
test
mov
jle
xchg
adc
cmps
sbb
fsub
(bad)
xchg
call
das
ds
or
xchg
in
cmp
mov
jmp
mov
out
loop
ss
sahf
xchg
jno
test
xlat
inc
ins
jne
mov
repnz
lods
popa
or
into
adc
dec
xchg
mov
pop
mov
inc
out
push
sbb
outs
out
out
scas
mov
mov
out
popf
shl
loopne
sbb
lods
mov
stos
inc
mov
repnz
fwait
stc
mov
xchg
adc
pop
jnp
imul
mov
and
inc
dec
cld
add
das
ds
xchg
and
pushf
jbe
xchg
sub
mov
sar
(bad)
push
mov
fstp
lods
sbb
push
es
jmp
jl
and
out
jo
in
jle
inc
aas
xor
call
mov
add
cmp
cdq
xchg
xchg
and
xchg
pop
movs
sub
scas
inc
jns
arpl
in
xchg
cmp
test
retf
add
cmp
inc
aam
mov
pusha
push
ins
pop
xchg
add
fld
inc
jb
jns
pop
dec
mov
push
shl
push
jmp
aad
fadd
data16
xor
jg
push
push
mov
cmp
and
ret
test
jo
cmps
lods
int3
out
stos
rcr
add
nop
sahf
dec
adc
or
cli
xor
sub
adc
fsubr
jmp
scas
push
fcmovne
jnp
jg
xchg
movs
dec
shl
in
or
repz
jg
or
jbe
lahf
mov
ret
jns
movs
mov
and
push
inc
mov
fdivr
enter
sbb
addr16
inc
loop
int3
call
mov
and
popa
xchg
stos
cld
sub
push
mov
cdq
call
mov
int3
fldenv
sub
loop
(bad)
sbb
cwde
and
ror
pop
xchg
test
out
jb
sbb
cmp
(bad)
mov
repnz
mov
pop
push
add
or
or
sub
jp
jmp
xor
lods
inc
sbb
call
sbb
mov
jg
into
lahf
retf
jbe
or
push
sahf
xor
jge
(bad)
push
lea
cmp
sahf
pop
adc
mov
fcmovb
or
repz
cwde
outs
lock
test
pop
repz
fisub
(bad)
fldlg2
push
mov
push
arpl
stos
push
inc
pop
ins
sbb
or
xor
jno
in
sbb
test
movs
xor
int
cmp
(bad)
pop
movs
dec
jmp
cli
jno
fld
xchg
int3
jns
xor
sbb
inc
inc
inc
sbb
or
inc
add
lahf
cmp
jg
sar
xor
xor
jo
retf
and
mov
xchg
cli
bnd
stos
rol
jb
sub
imul
cli
in
test
movs
xchg
jecxz
jns
or
popf
stos
sub
fisubr
lods
mov
cmps
nop
pop
fwait
lahf
mov
xchg
or
jmp
xor
inc
or
and
inc
jge
into
or
sub
jns
or
stc
or
inc
arpl
jne
jae
jle
lods
pop
icebp
jb
push
pop
adc
frstor
and
and
or
fucompp
sbb
call
mov
push
pop
and
add
pop
inc
mov
mov
and
test
lods
jns
ins
out
xor
cmp
xlat
iret
mov
or
push
sub
outs
sbb
or
loop
les
lock
repz
scas
xor
mov
jae
mov
or
lods
dec
adc
ja
add
gs
pop
cmp
dec
mov
push
push
cwde
scas
icebp
jle
in
cmc
imul
out
inc
ins
or
pmulhuw
sbb
cmp
(bad)
into
test
mov
pop
adc
imul
test
mov
pop
pop
mov
or
dec
sbb
pushf
cmp
aam
xor
push
popf
adc
in
mov
jmp
sbb
inc
cwde
jbe
fild
hlt
cmp
sbb
ja
adc
mov
test
ins
pop
push
mov
retf
sub
aam
jecxz
daa
inc
cwde
(bad)
adc
test
fs
cli
(bad)
push
mov
adc
ins
jmp
mov
mov
xchg
addr16
mov
(bad)
mov
or
inc
push
mov
mov
jle
mov
push
jmp
test
or
jle
mov
sti
addr16
dec
pop
js
(bad)
retf
xchg
mov
jecxz
sub
mov
call
mov
retf
dec
test
ss
mov
jp
retf
test
push
inc
or
dec
outs
dec
cli
mov
xchg
sahf
sbb
xchg
adc
inc
push
pop
xchg
adc
dec
jmp
mov
sahf
imul
sahf
and
jnp
mov
outs
sub
add
je
retf
mov
push
push
hlt
(bad)
stos
jle
nop
repnz
enter
or
in
(bad)
mov
mov
cwde
mov
movaps
scas
xchg
aam
dec
sbb
lock
lods
mov
mov
mov
mov
out
stos
jne
retf
add
or
ss
in
mov
pop
fnsave
xchg
push
call
mov
fwait
test
and
jnp
push
inc
and
test
xchg
xchg
in
fistp
jp
mov
ds
fwait
mov
jmp
jle
add
fwait
pop
and
adc
iret
mov
adc
cmp
mov
clc
push
ds
sub
pushf
xchg
jle
enter
sub
xchg
inc
je
cmps
mov
xchg
inc
jmp
cmps
inc
push
movs
and
loope
fld
test
cmp
aaa
cwde
mov
fcomi
aam
retf
push
dec
sub
and
pop
ret
bound
or
jp
sbb
mov
mov
mov
daa
and
xlat
in
and
pop
cld
pushf
mov
xchg
push
(bad)
cmps
mov
adc
aaa
bound
jae
pop
bound
sbb
xor
push
mov
int3
xor
cmp
push
popa
les
mov
mul
cs
shl
lea
jnp
out
cmps
(bad)
push
in
dec
mov
arpl
xchg
mov
aas
mov
ins
dec
call
xchg
xchg
add
stos
push
(bad)
in
ret
jle
fwait
push
cmp
(bad)
in
sub
jl
push
jl
push
repnz
data16
ins
sub
xchg
mov
mov
bswap
fs
jnp
push
ficomp
repnz
dec
adc
inc
loope
push
shr
jg
repz
mov
ret
xchg
(bad)
sbb
jecxz
dec
mov
pop
sub
clc
cmp
mov
xor
fnstsw
cdq
cmps
loope
mov
aam
fst
push
sub
popf
push
(bad)
(bad)
retf
ja
sub
leave
cmp
xlat
inc
add
into
xor
jnp
jo
(bad)
test
mov
sbb
fwait
aam
and
jbe
xchg
adc
mov
inc
push
jb
jbe
shl
dec
jge
mov
imul
psrld
sahf
dec
mov
jp
cld
jno
mov
xor
out
or
lods
jne
and
in
data16
push
inc
cmp
shl
aad
sub
cs
mov
mov
enter
mov
dec
jb
xchg
(bad)
or
push
lock
shr
popf
lahf
xor
and
nop
sbb
mov
aaa
and
in
xor
(bad)
cmp
mov
mov
adc
jg
in
fidivr
inc
sbb
test
fs
inc
mov
xchg
js
in
mov
pusha
fistp
pop
inc
sti
fild
pop
nop
popa
test
std
pop
ret
sahf
outs
lods
inc
scas
(bad)
stc
or
popf
jge
push
push
int3
mov
pop
(bad)
lock
call
dec
mov
and
jmp
cmp
dec
loopne
leave
add
cmp
adc
ret
mov
fistp
pop
js
cmps
or
(bad)
lea
inc
dec
stc
aaa
cmp
pushf
loope
lea
add
pushf
stos
(bad)
test
or
fld
mov
xchg
rol
aad
jge
xchg
mov
(bad)
xchg
add
sub
or
push
fnstsw
sub
jle
dec
xchg
cmp
leave
mov
pop
fwait
loop
cs
jns
push
nop
mov
mov
cmp
dec
addr16
xchg
mov
fsubr
xchg
jnp
mov
ficom
movs
add
add
sub
loope
or
repz
xchg
mov
(bad)
repz
sbb
aad
out
ins
repz
cmp
adc
xchg
movs
push
sbb
or
ret
sbb
pop
aad
out
(bad)
add
jns
ins
lods
sub
dec
jne
ret
ret
outs
rcl
jg
cmps
popf
stc
add
scas
or
or
mov
bound
in
fisubr
sub
jnp
sbb
lock
add
mov
jge
imul
cmp
sub
addps
lods
or
test
fidiv
cmps
call
xor
bound
jne
adc
sub
jns
les
adc
lds
cmps
je
mov
xchg
push
hlt
cmps
xchg
shl
or
inc
sbb
fcomi
and
stc
and
imul
(bad)
ret
jg
xchg
jg
aas
ins
outs
lods
xorps
in
add
mov
lock
push
dec
dec
sahf
adc
xchg
push
push
xchg
leave
cwde
out
lods
retf
das
adc
or
push
sahf
dec
jecxz
cmp
push
mov
(bad)
cmp
mov
xchg
rol
loope
mov
add
aam
je
push
and
sahf
xor
sbb
(bad)
std
ret
loopne
mov
xor
sbb
pop
sbb
cli
or
in
add
inc
shl
fldpi
pop
daa
xchg
mov
outs
sub
sub
add
adc
ror
in
dec
xor
add
dec
ror
lods
push
(bad)
add
mov
mov
xchg
pop
xchg
jbe
add
scas
pop
or
in
xor
fs
cmc
xor
push
sbb
adc
or
inc
mov
mov
push
popa
push
test
jb
fiadd
inc
in
sti
stc
mov
pusha
mov
cmp
and
outs
lea
xor
push
and
les
and
call
in
adc
movs
imul
les
pop
sbb
mov
stos
fidiv
imul
je
pop
cmp
dec
sti
test
lds
shr
inc
stos
mov
push
ss
jmp
mov
add
mov
xchg
outs
call
retf
dec
push
ins
mov
add
ret
movs
call
mov
add
push
test
mov
test
lds
inc
imul
cmps
into
cwde
cmp
pop
xchg
inc
lods
mov
retf
jnp
stos
sbb
sar
jns
and
lock
jmp
mov
push
lds
dec
jns
int
fs
or
jbe
sbb
cwde
sub
out
lea
data16
shr
arpl
dec
ret
pop
addr16
xchg
jg
idiv
xor
and
test
jmp
je
pop
je
jl
femms
leave
aam
adc
jecxz
nop
add
xchg
in
adc
out
imul
hlt
nop
mov
sub
xchg
push
dec
pop
sbb
ds
jb
push
jns
out
push
pop
lds
mov
cmp
sbb
jno
adc
hlt
pop
rol
dec
or
pusha
xor
or
aaa
int3
or
pusha
jle
xchg
(bad)
jle
xchg
pushf
jmp
xchg
int
and
(bad)
xor
pop
jno
inc
or
cwde
(bad)
aaa
sub
test
iret
cli
mov
push
loopne
outs
or
or
inc
div
sbb
sbb
sub
(bad)
aad
imul
jmp
psrlq
out
dec
dec
jb
mov
xchg
fild
mov
cmp
es
jge
cmp
push
xor
cmp
cmp
add
iret
retf
fbstp
or
adc
sti
xor
pop
retf
cwde
in
sti
or
inc
or
and
dec
dec
in
retf
out
out
data16
leave
mov
or
mov
or
int3
dec
mov
arpl
inc
icebp
lahf
loope
pop
sbb
je
cs
ficom
fmulp
mov
or
ins
xchg
(bad)
mov
mov
rcr
fbstp
outs
xor
mov
scas
or
cdq
or
jne
(bad)
xor
sub
rcl
cmp
or
jns
in
cwde
mov
dec
retf
popf
dec
es
add
sar
cwde
scas
cmps
adc
push
mov
dec
mov
test
ins
sar
push
outs
test
xchg
call
jb
adc
pop
cdq
test
sub
and
(bad)
cmp
jmp
repnz
mov
lods
mov
mov
jno
gs
test
not
shl
jl
add
scas
out
out
idiv
jmp
xlat
dec
sbb
aad
xchg
pop
arpl
sbb
xchg
shl
cmc
enter
cmp
sbb
sbb
lds
inc
outs
dec
xor
pop
sbb
imul
ret
lock
retf
push
addr16
outs
cmps
icebp
pop
mov
stos
push
lods
test
adc
push
mov
xchg
(bad)
(bad)
inc
rcr
and
lahf
mov
push
cmp
push
adc
sub
and
lahf
lods
frstor
mov
inc
lea
(bad)
mov
mov
xchg
push
nop
nop
push
pop
stos
les
xchg
inc
dec
ja
inc
cmc
lahf
push
adc
(bad)
retf
and
dec
cmc
or
adc
icebp
cld
sub
rcr
into
sub
jmp
mov
xchg
inc
sbb
pop
int
mov
aad
push
xchg
adc
cmp
mov
mov
or
shr
pop
mov
xchg
and
mov
or
inc
in
xchg
push
je
scas
and
adc
ror
lahf
retf
repnz
imul
mov
push
or
jns
pop
loop
dec
or
push
addr16
push
or
add
cwde
xor
cld
sbb
xor
cmp
pop
or
and
stos
cmp
out
es
inc
xor
enter
or
mov
dec
in
fiadd
mov
out
(bad)
sub
or
add
jnp
test
adc
mov
call
mov
mov
movs
bound
outs
mov
pop
mov
jnp
(bad)
stos
(bad)
out
adc
rol
pop
and
adc
adc
jmp
(bad)
jmp
pop
retf
iret
or
add
mov
xchg
out
add
inc
int3
cmp
fmul
fnsave
jmp
jo
push
sbb
int
loopne
pop
xor
cld
fst
push
ror
cmp
mov
mov
and
xchg
sbb
popa
ret
jp
(bad)
push
ret
pusha
shl
jp
cmps
pop
pop
lods
xchg
aad
repz
jne
push
add
cmp
lock
vmwrite
xchg
int
fcmovne
(bad)
and
pop
scas
and
add
xchg
popa
aaa
unpckhps
jae
adc
pushf
mov
cdq
out
lods
dec
test
data16
mov
cmp
adc
xchg
(bad)
in
loope
mov
jge
arpl
ds
adc
dec
jns
repnz
inc
fiadd
pop
sbb
push
xor
sbb
mov
scas
dec
xchg
into
xor
jns
cmps
int3
lea
ss
test
sbb
call
rcl
mov
jge
and
pop
leave
jno
cs
or
pop
sub
sub
pop
retf
mov
das
add
imul
mov
xlat
and
ds
div
mov
outs
fdivr
ret
out
mov
fdivp
lahf
pop
push
addr16
or
sub
jno
sub
in
push
or
xchg
mov
sub
sbb
lea
add
fbld
cld
xchg
or
cld
push
test
push
jbe
push
pop
or
sti
mov
push
xor
adc
ror
(bad)
outs
ss
les
xchg
test
xchg
jno
push
push
retf
jnp
cmp
sbb
out
fidiv
imul
aad
mul
out
jmp
jno
push
aas
mov
dec
(bad)
jbe
std
inc
test
lahf
push
stc
repnz
adc
gs
pop
ds
jmp
xor
dec
gs
cwde
outs
xchg
sbb
push
cmps
adc
fwait
adc
inc
mov
add
adc
push
push
mov
jns
lods
retfw
lods
xchg
and
xor
in
jns
outs
stos
cwde
sub
or
xchg
gs
push
(bad)
xchg
dec
pop
gs
xor
std
or
fld
mov
sub
pop
outs
rcl
mov
xor
adc
pop
nop
leave
test
adc
(bad)
movs
or
div
popf
cmp
aam
mov
mov
push
push
mov
sbb
movs
cs
std
and
mov
pop
jne
daa
repz
xlat
out
(bad)
inc
add
or
ss
or
ret
sub
comiss
cmp
or
or
sub
adc
mov
jmp
sbb
ins
sar
stos
sbb
dec
xchg
inc
mov
jle
mov
jmp
and
push
out
jnp
inc
xor
sub
icebp
sbb
lock
jecxz
add
jecxz
pop
mov
xchg
stos
mov
cli
or
sbb
adc
fbld
mov
sbb
inc
lds
js
add
add
mov
dec
shl
aad
bound
mov
sub
jmp
xor
scas
ja
ja
mov
inc
adc
int
dec
(bad)
sti
aam
call
pop
mov
mov
(bad)
jne
and
push
and
adc
inc
fs
nop
ja
cwde
xor
stos
inc
mov
call
ret
mov
xor
loop
and
(bad)
sub
mov
adc
adc
mov
mov
xchg
icebp
dec
sbb
sbb
retf
sub
test
rcr
xor
ror
shl
das
mov
iret
(bad)
pop
pop
cmp
icebp
mov
pop
or
cmp
xadd
add
ds
out
push
adc
sub
push
jae
inc
(bad)
lods
xchg
pop
cmp
aaa
in
test
gs
mov
lods
in
ins
cmc
pop
ins
or
ret
pop
add
jmp
cwde
das
mov
and
dec
pop
imul
out
dec
in
pop
jnp
das
mov
lahf
sbb
xor
xchg
retf
xor
jns
movs
pop
push
gs
dec
add
in
rol
test
cdq
sar
and
loopne
imul
ins
push
cmp
add
jno
test
(bad)
xchg
es
(bad)
mov
(bad)
pop
das
push
jg
sti
jne
add
cmp
test
sub
out
mov
hlt
aaa
cmp
pushf
jp
dec
dec
sbb
and
cmc
mov
stos
adc
nop
sub
push
and
pop
jl
outs
and
adc
xchg
shr
xchg
shl
cwde
pop
in
sahf
movs
inc
adc
jle
cmps
pop
cld
cmps
cmp
ins
jg
pusha
or
adc
fisubr
fdivrp
shl
mov
bsf
jmp
cdq
(bad)
push
mov
jo
daa
add
aad
and
(bad)
and
popa
mov
sbb
cmp
pop
cmp
fs
add
mov
sti
pop
jl
shl
hlt
push
out
push
sbb
mov
mov
add
pop
sbb
inc
push
push
out
pusha
cmp
mov
aaa
mov
xchg
shr
(bad)
xlat
adc
out
inc
and
adc
mov
mov
test
push
mov
in
dec
cdq
ja
retf
adc
sub
sub
into
jnp
mov
mov
test
sub
test
pop
xor
data16
xchg
add
or
jmp
mov
dec
icebp
leave
sbb
rcl
xchg
ins
sbb
out
rol
sbb
std
fs
pop
out
(bad)
leave
cmp
clc
das
leave
cmp
out
les
xchg
xchg
retf
imul
push
cli
dec
pop
fucomp
mov
push
jg
cmps
cdq
lahf
sbb
loop
pop
cld
pop
xchg
mov
push
loope
out
or
ss
sub
out
aam
lock
cmp
aad
test
repnz
(bad)
mov
fmul
xlat
retf
loop
pop
lods
mov
sbb
scas
xchg
fisub
in
or
jmp
daa
scas
xor
test
sbb
pop
xor
js
pop
jge
sbb
inc
int3
push
call
ss
shl
sbb
scas
cmp
in
iret
push
or
stc
ret
sub
test
in
ficomp
inc
stos
shr
pop
pusha
lock
in
and
mov
mov
xchg
idiv
stos
mov
je
ret
cmps
sbb
mov
inc
jb
mov
out
pop
das
sub
fsubr
shl
pop
test
sub
jbe
adc
lds
mov
paddb
out
push
jecxz
mov
call
js
and
inc
xlat
daa
cmp
test
rcr
pusha
sub
xchg
pop
loopne
fwait
cwde
adc
push
ret
jae
xor
and
cli
(bad)
push
aaa
add
xchg
jnp
mov
jge
xchg
test
std
loop
push
pop
xor
push
adc
scas
cld
sbb
cwde
pop
and
inc
xor
(bad)
jae
push
in
sub
jae
std
sub
data16
xchg
ins
xor
sub
ins
xchg
pop
jmp
in
push
fidivr
in
je
add
rol
dec
ret
and
mov
or
adc
mov
sbb
fild
sub
mov
lds
sub
test
sbb
add
int
fsub
fidivr
push
aam
out
dec
fs
add
jp
fs
jo
add
jg
push
mov
arpl
js
xchg
push
cwde
or
jnp
sub
mov
neg
xchg
js
aad
jg
stos
icebp
into
je
push
adc
inc
gs
sbb
call
rcl
icebp
cld
push
sbb
push
icebp
mov
or
fst
xchg
and
inc
test
pop
pop
sbb
jne
or
mov
and
push
mov
ss
dec
jecxz
lods
add
mov
add
push
lds
xchg
push
je
mov
and
cmp
test
movd
sbb
pop
scas
gs
jae
sbb
pop
xchg
jmp
add
push
fldenv
dec
jg
sbb
mov
repnz
push
leave
push
xlat
push
adc
and
aam
pop
loope
dec
(bad)
fild
or
std
js
or
xchg
fisubr
shl
jg
(bad)
mov
mov
jl
popa
mov
xchg
out
loope
out
(bad)
imul
mov
rcl
push
ins
lods
xor
js
test
pop
mov
std
stos
xlat
adc
add
inc
dec
in
push
inc
je
arpl
fmul
adc
jns
xor
jae
sbb
mov
push
mov
int
jecxz
adc
adc
mov
push
out
ret
push
adc
add
jmp
mov
push
sbb
xchg
push
test
push
pop
dec
cmp
inc
pop
outs
inc
xor
std
(bad)
js
(bad)
movs
mov
movs
pop
mov
xor
mul
jo
loope
jg
fbstp
sub
mov
add
cmp
jmp
or
(bad)
out
retf
shr
add
and
or
mov
cli
gs
lahf
inc
cwde
lds
push
push
ins
rcl
mov
or
das
and
lea
pushf
adc
loopne
xchg
(bad)
aaa
call
pusha
je
in
popf
sbb
retf
pop
loope
or
out
sbb
jns
adc
adc
mov
test
pop
in
push
nop
pop
pop
scas
lock
adc
mov
mov
pushf
sti
mov
or
in
xchg
bound
or
xchg
add
mov
pusha
pop
xor
sahf
loopne
pop
jno
test
std
lods
pop
lea
js
fcom
cmp
mov
sar
mov
imul
fld
(bad)
adc
jle
lahf
mov
fisttp
jle
retf
xchg
or
push
mov
xlat
cmp
dec
jg
or
retf
fmul
and
dec
ret
sbb
mov
pop
mul
cld
imul
pop
cmp
test
outs
add
jbe
jns
retf
sub
jb
js
inc
out
mov
das
rol
ds
jne
xor
push
enter
inc
xchg
jno
or
clc
dec
inc
push
xor
std
push
in
adc
mov
jle
outs
bound
stos
sub
pop
mov
(bad)
push
jmp
adc
adc
scas
lahf
inc
pop
icebp
mov
jb
loope
into
xor
out
sub
rcr
xchg
test
mov
fcomip
rcl
test
cmp
adc
dec
inc
in
mov
jg
cwde
push
int3
dec
cmp
inc
imul
jns
jmp
out
push
sar
jecxz
outs
into
clc
neg
lds
xor
mov
cmps
ror
rol
(bad)
pop
dec
arpl
loopne
adc
out
xchg
xlat
mov
jle
xor
shl
or
adc
(bad)
cld
addr16
cdq
adc
cmp
addr16
mov
inc
mov
dec
cmp
int3
mov
mov
jmp
pop
outs
aaa
xor
jecxz
cmp
inc
xchg
aad
enter
retf
sub
push
aas
nop
gs
fs
mov
stc
and
sub
aaa
adc
mov
shl
int3
xchg
mov
or
icebp
js
dec
push
push
jge
adc
push
outs
push
inc
les
adc
out
out
and
sti
sbb
outs
stos
popa
mov
rol
arpl
dec
outs
inc
dec
dec
data16
mov
adc
into
jmp
aam
sub
outs
xchg
jge
pop
loop
inc
lods
dec
out
mov
sub
cwde
xor
xchg
fmul
mov
lahf
push
jge
cmp
ins
clc
inc
push
and
ret
retf
cmp
pop
fiadd
test
scas
stos
xor
pop
adc
jp
pop
ret
sahf
xchg
test
push
shl
xlat
mov
pop
pop
push
in
push
xchg
jbe
xor
pushf
xchg
add
test
push
addr16
fs
ror
sub
idiv
jns
push
xor
mov
or
retf
je
test
and
sub
es
shl
outs
cmp
call
push
lds
mov
int3
jmp
sub
daa
jbe
mov
ror
and
and
mov
ins
jbe
cmp
jp
jne
test
xor
inc
lea
and
cmps
dec
ret
scas
pop
or
es
push
jbe
sbb
dec
in
test
or
mov
out
cmp
shl
aad
sub
cmp
cmp
dec
dec
into
mov
jne
das
xor
ficom
test
cvttps2pi
lods
nop
out
loop
ss
push
cmps
rcr
pop
out
dec
adc
jmp
test
sti
out
push
cwde
xlat
xchg
in
fwait
mov
cmp
pop
xor
dec
icebp
sbb
mov
mov
mov
sbb
jno
test
or
and
std
jge
xlat
inc
addr16
div
push
pmullw
xor
movs
addr16
(bad)
lods
mov
out
int
or
push
lods
adc
xor
cmc
out
outs
pop
scas
dec
es
test
sbb
aam
mov
loope
scas
pop
les
loop
sbb
cli
ucomiss
sbb
jg
dec
jmp
sub
or
enter
jnp
dec
adc
repz
in
jno
int3
mov
popf
jmp
push
jle
lds
ds
cmps
inc
jbe
cmp
jle
test
or
aam
lods
icebp
push
adc
cmp
mov
cmp
inc
gs
inc
cdq
and
repz
xchg
sbb
je
or
cmps
(bad)
adc
jb
jmp
shl
pop
inc
in
push
jo
rcr
or
xor
repz
dec
call
jbe
sbb
call
cmp
adc
jmp
iret
gs
dec
mov
xchg
mov
push
aad
ret
mov
push
clc
mov
lods
out
fwait
call
dec
inc
fcom
ret
shr
fadd
rcl
mov
nop
push
dec
ret
pop
ss
inc
(bad)
sub
dec
cmp
cmp
xlat
out
pusha
xchg
clc
xor
ror
jecxz
add
pop
xchg
icebp
loop
mov
inc
mov
mov
ror
pop
adc
sbb
mov
sub
mov
pushf
push
pusha
cdq
imul
je
aaa
je
retf
jb
ret
fwait
cld
mov
outs
sar
xchg
xor
test
add
mov
or
sub
ficom
push
sub
fst
arpl
loop
stos
ins
mov
mov
mov
mul
or
pop
int
or
or
jge
add
inc
sbb
pop
loopne
icebp
mov
mov
inc
add
inc
and
jge
push
inc
bound
mov
xchg
adc
jl
cmp
dec
scas
pushf
add
sub
sub
pcmpgtb
jmp
push
test
add
ins
(bad)
movs
cdq
add
sub
mov
retf
iret
sahf
xchg
(bad)
dec
push
test
xor
inc
test
and
mov
ss
pavgb
pop
cmps
cdq
les
sub
loope
jge
push
push
pop
arpl
xor
adc
ins
mov
and
xchg
jae
cmc
fsubr
outs
xor
xchg
mov
out
and
mov
push
inc
xor
mov
aad
in
aad
icebp
mov
std
cmp
and
mov
sub
and
inc
cdq
clc
repnz
dec
sbb
mov
add
(bad)
pop
adc
push
call
dec
push
aad
and
xor
aam
xor
jnp
out
bnd
jne
cmc
push
xor
mov
aas
sahf
in
mov
iret
sbb
cdq
push
xchg
into
dec
jmp
jl
pusha
jle
xor
and
dec
js
repnz
xchg
and
inc
ss
dec
mov
jb
xor
add
push
icebp
xchg
sbb
push
int3
dec
pop
fld
and
xchg
mov
dec
push
jp
dec
xchg
fiadd
in
std
sbb
mov
push
mov
mov
jp
mov
aaa
add
icebp
je
mov
loop
add
dec
add
sbb
push
cmps
mov
mov
push
mov
lea
mov
and
jmp
fistp
mov
sbb
and
push
jmp
xor
mov
aaa
imul
(bad)
call
bound
test
xchg
mov
adc
outs
xor
loope
mov
or
adc
lods
push
or
xor
mov
cmp
scas
ja
add
ror
rol
add
pop
xchg
call
pop
jae
lds
ret
or
daa
xor
ja
and
mov
sub
test
inc
data16
or
scas
push
imul
and
ja
in
mov
xchg
daa
ins
xor
push
xchg
(bad)
sbb
inc
push
ds
sbb
nop
push
adc
pop
xor
add
(bad)
ins
pop
mov
dec
and
arpl
cmp
nop
stos
xchg
jle
jno
mov
cmps
and
jge
push
scas
aaa
xchg
sbb
rcl
pop
xchg
dec
cmp
rol
fistp
inc
adc
adc
push
syscall
jae
lock
pop
mov
(bad)
cld
sub
mov
shl
sub
jmp
sub
jmp
cmp
fisub
dec
pop
or
push
out
pop
sbb
xlat
mov
dec
lock
fisub
jg
cmp
leave
sub
fucomp
loope
js
pop
pop
(bad)
shr
into
pop
mov
outs
ret
inc
pop
jo
jno
xor
ja
sbb
sub
and
and
out
pop
leave
dec
aad
test
push
(bad)
cmp
aaa
jo
in
popa
xchg
movs
scas
dec
mov
ret
jmp
(bad)
daa
push
repnz
(bad)
jb
mov
aas
and
add
jnp
ror
pusha
cmp
pop
mov
cmp
outs
xchg
lea
das
pushf
ret
pushf
and
not
shl
lods
cmp
cmp
or
jns
mov
outs
jbe
xlat
pop
sub
push
dec
imul
cmp
xchg
sbb
test
or
(bad)
int3
mov
dec
xchg
cdq
mov
fadd
ins
push
pmulhw
inc
xchg
sbb
add
mov
push
and
adc
call
ja
outs
ds
dec
mov
adc
repnz
sbb
mov
stc
sbb
lods
pop
add
fwait
in
mov
movs
fs
cmp
jnp
das
lods
pop
pusha
mov
jo
arpl
(bad)
cld
xchg
gs
sar
adc
xchg
es
mov
in
js
add
jge
icebp
iret
push
jne
daa
imul
or
sub
inc
xor
in
mov
cmp
push
xor
xchg
das
cli
jns
cvtdq2ps
push
aas
imul
sbb
jo
xor
test
call
mov
fcmovu
movs
mov
test
fs
stos
leave
or
jo
push
sbb
inc
push
lds
fisubr
mov
cdq
add
stos
(bad)
xchg
sbb
xchg
mov
in
xlat
adc
ret
in
arpl
dec
pushf
sahf
popf
(bad)
iret
mov
or
push
mov
sbb
cdq
lock
add
ds
mov
mov
push
sbb
jmp
jmp
pop
or
pusha
dec
lds
inc
les
add
test
call
cli
inc
add
dec
sub
jp
add
mov
xchg
fcmovnb
or
mov
into
(bad)
xchg
add
cmp
(bad)
je
xchg
test
int3
xor
sub
aam
add
cmp
push
push
jb
or
js
jnp
sbb
stos
bound
rep
cmc
or
add
mov
mov
add
lods
push
jle
rcr
retf
xor
push
or
xchg
out
inc
xchg
jp
pop
jns
mov
(bad)
dec
in
inc
jge
test
mov
inc
pop
ss
sahf
es
xchg
sbb
or
sbb
sbb
ficomp
(bad)
ins
into
and
mov
mov
jecxz
pop
inc
sbb
add
jmp
xor
(bad)
cmc
add
sbb
jb
int
cmp
call
mov
out
gs
inc
(bad)
ins
out
sti
mov
arpl
movs
cmp
xchg
mov
sbb
xor
sub
jge
mov
xchg
mov
and
xchg
(bad)
sbb
dec
jmp
addr16
add
mov
ds
inc
ds
push
shr
idiv
movs
jmp
dec
mov
iret
loopne
ins
jmp
push
and
nop
add
outs
dec
push
push
(bad)
fisubr
cmp
cmp
fcomip
jnp
pop
rcr
push
xchg
mov
ret
test
lds
cs
adc
sub
mov
ds
aaa
ret
or
outs
or
dec
ins
or
inc
add
aad
outs
ret
xor
sbb
mov
scas
push
js
popa
rol
cdq
(bad)
sub
in
enter
push
loope
les
cmps
pusha
adc
jbe
adc
in
test
and
fwait
rol
aad
arpl
jae
pop
push
into
addr16
add
fdivr
jmp
sbb
stos
pop
cmp
dec
add
push
ror
in
fdivr
and
ret
retf
push
xor
mov
das
adc
call
out
ds
ficom
(bad)
in
push
xchg
mov
add
add
rol
mov
mov
movs
test
retf
mov
stos
retf
mov
pop
int
xor
mov
dec
sbb
out
(bad)
outs
xchg
or
fiadd
lods
jle
lock
(bad)
push
add
xor
in
push
cmc
cmp
xor
or
aad
ret
int3
dec
add
jg
retf
aaa
les
icebp
fmul
icebp
fwait
push
pop
xor
fsubr
cmps
sbb
sub
push
xor
in
xchg
cmp
jne
inc
aas
inc
jns
je
sbb
inc
dec
mov
enter
mov
jl
or
mov
adc
add
ret
add
ret
xchg
imul
(bad)
push
das
cmp
xor
xlat
mov
retf
fmulp
push
or
xchg
jne
sbb
clc
jle
loop
or
sti
inc
dec
leave
in
dec
push
push
lods
sub
jg
jmp
int3
xchg
shl
ret
xor
mov
aaa
mov
lahf
inc
int
hlt
sub
mov
jbe
std
inc
jge
sbb
mov
ins
xor
ret
sahf
add
les
cli
int3
loope
fisubr
std
mov
jne
mov
and
pop
cld
fwait
mov
(bad)
jmp
std
and
cmp
fdivr
sub
mov
pop
pop
lock
sub
out
push
push
mov
scas
(bad)
int3
pop
dec
outs
add
jl
in
xor
and
mov
movs
and
fldl2e
inc
jmp
test
jbe
and
jbe
xchg
and
mov
lods
cmp
inc
mov
push
mov
dec
enter
in
shl
mov
jp
jmp
add
(bad)
psubusb
xor
int3
cmc
mov
sbb
jle
and
and
mov
mul
or
xchg
aaa
cmps
jo
push
call
lea
add
int3
xlat
pop
add
les
lea
dec
imul
hlt
loop
or
(bad)
mov
in
mov
xchg
fwait
push
lock
jno
pop
jge
jno
(bad)
js
dec
in
arpl
outs
in
test
and
xor
mov
mov
adc
mul
mov
dec
jne
mov
bound
xlat
xor
pop
sti
dec
cli
and
clc
neg
mov
mov
arpl
out
rcr
in
pop
inc
jmp
ret
jmp
xor
loop
jb
mov
push
js
mov
fnstsw
add
sub
retf
jo
sbb
or
cmp
mov
cmps
movs
dec
popa
lods
sub
mov
sbb
and
and
mov
inc
(bad)
mov
or
sbb
pop
out
inc
pop
add
push
push
mov
push
popf
rol
pop
jns
push
xor
test
scas
push
mov
popa
xchg
mov
xor
dec
add
aad
inc
push
push
cld
dec
mov
call
lods
popf
adc
push
cld
mov
add
int
fcmovne
cmp
stc
push
(bad)
cmp
jle
loopne
ja
mov
add
pusha
sub
(bad)
sbb
sbb
ss
jle
and
adc
stc
jb
cli
or
aas
inc
mov
iret
add
sub
dec
outs
lods
push
cmp
push
push
mov
mov
dec
push
cmp
and
test
fld
(bad)
cmps
add
push
sbb
adc
xchg
adc
inc
in
cmps
aas
push
mov
retf
aaa
or
adc
(bad)
fstp
xchg
sbb
gs
or
(bad)
mov
push
js
or
mov
lods
mov
or
mov
clc
sahf
xchg
push
or
cld
xchg
aas
dec
into
lea
mov
xor
xor
and
inc
push
xlat
das
pop
cmp
mov
pop
and
sbb
push
leave
cmp
dec
or
cdq
mov
jmp
lea
(bad)
les
ficomp
cld
arpl
imul
lahf
mov
push
sbb
outs
dec
sub
scas
stc
xchg
fucomi
xchg
rcr
ret
sti
psllq
(bad)
std
cmps
inc
clc
dec
ja
inc
jmp
test
push
fs
out
imul
leave
sub
popa
in
out
rcr
xchg
pop
dec
inc
retf
out
shr
fwait
std
test
cmps
imul
jns
movs
jmp
hlt
ret
dec
pop
loop
fsubr
jbe
jg
xor
and
push
pop
cld
popa
sub
repz
mov
jl
dec
fcom
xchg
pop
data16
push
xchg
mov
cmp
loope
xchg
push
add
or
(bad)
imul
mov
mov
mov
sbb
retf
push
cmp
inc
mov
test
pop
xchg
mov
xchg
aam
outs
sbb
cmps
loop
jo
loopne
jecxz
div
clc
test
daa
cmps
pop
shl
mov
mov
mov
test
cmp
lahf
jne
jle
mov
icebp
jecxz
gs
mov
scas
jno
xor
(bad)
test
or
mov
scas
not
push
push
sub
add
push
out
scas
call
popf
mov
xchg
mov
inc
fmul
clc
push
je
cs
add
mov
cmp
movs
dec
xchg
fsubr
dec
and
(bad)
adc
xor
and
push
adc
xchg
mov
jne
popa
mov
imul
sbb
fwait
int
xor
pop
push
mov
out
mov
push
xchg
es
or
and
dec
lock
mov
xchg
sbb
and
lea
sti
xchg
out
cmp
push
jg
mov
mov
sub
pop
ja
call
add
and
jae
mov
(bad)
ds
call
imul
inc
add
mov
xchg
sbb
mov
add
dec
lock
ret
les
sub
imul
movs
ins
pop
data16
jmp
(bad)
jmp
cmc
mov
sub
mov
js
scas
add
(bad)
call
mov
mov
add
mov
jl
xchg
movs
test
lea
gs
popa
mov
imul
ja
xor
sub
jnp
sbb
jnp
rcr
mov
std
pop
aaa
mov
push
pop
pop
mov
sbb
mov
cmp
pop
pop
jg
jmp
test
mov
and
fcomp
aaa
out
nop
pop
or
lahf
or
cwde
in
mov
push
retf
xchg
(bad)
fisttp
fabs
bnd
mov
sub
into
sbb
pop
inc
into
dec
ret
repz
pop
mov
hlt
mov
pushf
mov
push
add
les
mov
in
and
(bad)
cmps
shl
mov
mov
fs
jb
lock
jg
call
repnz
mov
arpl
cmp
mov
or
push
cmp
inc
xchg
std
cmps
cmp
icebp
xchg
stos
punpckhbw
sahf
out
and
pop
lds
cmc
popf
out
ret
dec
inc
int3
dec
xor
mov
jg
xchg
jmp
jno
cmp
jnp
cdq
mov
lds
cmps
rol
imul
push
sbb
pop
enter
pop
retf
xchg
(bad)
jae
lods
popf
nop
stc
mov
push
dec
mov
cld
xchg
add
call
popa
cmps
dec
pop
in
cmp
stc
lock
inc
inc
(bad)
xchg
stc
sbb
cmc
sub
mov
movs
(bad)
mov
rcr
es
pop
pop
add
dec
scas
xor
aad
or
jp
mov
sub
xchg
sbb
js
and
ror
mov
mov
fcomp
jae
stos
push
cmc
xlat
pop
bound
cmp
adc
dec
aad
push
add
mov
xor
adc
add
not
or
sbb
repz
cmp
repz
adc
scas
sbb
nop
xchg
xchg
jecxz
loopne
xor
cmp
dec
ffree
(bad)
repz
and
aaa
dec
push
xchg
(bad)
jmp
in
xchg
hlt
adc
sbb
lea
mov
jbe
push
shl
pop
arpl
add
xor
jg
repz
push
fs
aam
daa
es
imul
outs
nop
and
xor
jmp
jb
and
push
cwde
int
add
sbb
pop
xchg
or
or
sub
fimul
mov
mov
sub
popa
mov
pop
out
inc
mov
test
mov
add
imul
ret
enter
das
and
or
xchg
add
xchg
outs
out
mov
xor
push
xor
jb
inc
dec
out
cmps
inc
inc
pop
hlt
sar
stos
leave
loop
xor
test
inc
sahf
retf
cmps
arpl
fs
and
inc
(bad)
arpl
dec
pop
shl
lds
lds
jae
push
sbb
lea
dec
mov
pop
add
scas
aam
add
gs
lock
mov
pop
aam
shl
inc
pop
mov
aas
xor
mov
xchg
stos
lock
xchg
mov
dec
push
scas
sub
jb
ror
push
in
sub
mov
push
in
mov
mov
xlat
sbb
dec
mov
jb
popf
mov
push
cmps
xchg
scas
push
push
adc
sub
inc
push
lds
sub
ret
mov
mov
xchg
test
sbb
iret
retf
movs
(bad)
cmp
mov
fs
push
xor
mov
loope
cdq
ja
mov
int
xchg
outs
popa
es
xor
and
add
nop
rol
dec
fisub
sbb
sub
mov
push
pop
dec
inc
int3
cmp
sbb
xor
into
mov
popa
out
lods
jle
int
jae
push
jle
das
repnz
sub
pop
test
mov
stos
xor
call
cmp
cmc
sub
(bad)
out
aaa
add
or
inc
jne
cdq
xchg
call
xchg
mov
rcr
sbb
add
lahf
lock
clc
pop
xor
mov
(bad)
and
out
ins
repz
push
sub
add
sub
cmp
and
aas
arpl
pop
jmp
je
cmps
scas
in
push
jae
push
das
push
aas
jle
cmp
mov
adc
in
or
fisub
outs
lods
jne
jp
iret
stos
mov
out
fcom
test
cmp
out
dec
in
aaa
(bad)
pop
call
popf
in
jno
jae
movs
pop
mov
and
push
push
test
sub
push
cli
jae
popa
fs
fbld
mov
int
or
popa
(bad)
pop
lds
add
pop
in
inc
dec
ret
sub
pop
xchg
sub
(bad)
jb
and
mov
adc
out
pusha
test
pop
pop
xchg
mov
fucomi
dec
imul
popf
data16
cmp
jne
mov
xchg
or
and
fdiv
cld
add
sub
arpl
sbb
mov
sbb
push
push
cs
inc
add
jns
sti
lea
lods
push
or
pop
ins
stos
or
nop
mov
bound
(bad)
jmp
in
mov
mov
repz
add
mov
pop
fadd
add
xchg
leave
js
push
add
jmp
leave
add
sub
push
lods
ret
cmp
inc
pop
in
and
sub
xchg
push
jmp
aad
jg
frstor
sahf
outs
js
mov
(bad)
xor
mov
xchg
or
call
lock
pop
repnz
add
cmp
jmp
xchg
sbb
stc
and
js
dec
int
int3
pop
fild
push
xor
loopne
jnp
mov
or
mov
mov
ins
aaa
loop
and
xchg
add
ja
pop
mov
das
pop
xor
cli
add
jmp
inc
fld
das
inc
out
out
push
cmp
dec
movs
push
add
xor
xchg
sub
pop
mov
mov
or
mov
int
not
popf
add
fnstenv
fcom
in
out
lea
push
push
xchg
xor
fsubr
adc
es
mov
shl
out
aad
mov
shr
shl
xchg
mov
and
int3
dec
xor
arpl
aaa
(bad)
adc
jb
and
adc
xchg
dec
ja
aam
jge
cld
dec
sbb
adc
xchg
mov
cmp
jecxz
lea
popf
xor
adc
dec
add
dec
in
sbb
rcr
inc
sub
xor
jp
jno
outs
sub
xchg
add
pop
out
fdivr
xchg
data16
(bad)
(bad)
gs
add
lea
mov
ss
(bad)
aad
xchg
push
in
pop
repz
adc
and
icebp
xchg
ins
adc
stc
ds
rcr
or
fadd
ins
and
mov
icebp
ror
mov
sub
xchg
inc
xchg
xchg
ds
add
adc
xchg
or
(bad)
jns
dec
ror
sub
dec
fstp
add
push
or
mov
adc
in
in
sub
in
pushf
mul
sbb
out
mov
dec
data16
xchg
cmp
adc
mov
imul
pushf
mov
fs
fcmovnb
lods
sub
fild
fwait
jg
fwait
arpl
gs
and
mov
cmp
movs
aas
and
mov
aaa
xchg
repz
shl
pusha
inc
adc
cmp
mov
pusha
jle
jg
jmp
repz
lods
js
(bad)
push
cdq
outs
mov
ss
adc
mov
test
popa
cwde
lea
lea
or
dec
and
adc
dec
ins
and
mov
test
je
mov
mov
lahf
add
mov
pushw
xor
mov
ret
cs
adc
cmp
pop
in
pushf
jnp
test
rcl
jmp
(bad)
sub
cmp
outs
test
sbb
in
push
pop
retf
add
jg
das
sub
cmc
mov
pushf
jge
bound
xor
cmc
jne
lea
or
retf
jbe
xor
pop
mov
movs
mov
and
ror
lea
mov
sbb
stc
xor
jmp
fs
mov
pop
adc
fldln2
cdq
inc
icebp
or
int3
movs
jmp
pop
test
xchg
adc
mov
frstor
retf
xor
call
rcl
xor
and
repz
mov
cmps
fldenv
add
inc
fsub
je
test
shl
dec
imul
enter
fnstenv
ds
je
pop
das
push
push
pop
iret
mov
hlt
rcr
add
loopne
or
inc
dec
or
shld
psrld
icebp
ins
jae
xchg
ficom
lods
dec
icebp
fwait
imul
inc
push
outs
mov
or
cmp
pop
jmp
mov
jmp
xor
cdq
in
mov
mov
mov
inc
adc
mov
mov
jmp
shl
mov
xor
sub
mov
or
dec
inc
pop
out
stos
push
jbe
cmp
retf
cmp
jne
out
into
scas
mov
xor
xor
call
xchg
dec
xor
fld
pop
push
mov
xchg
jmp
mov
cmp
pop
sub
adc
int3
cmp
fist
stos
(bad)
adc
adc
cmps
mov
cmp
pop
jl
adc
pop
jg
jb
cmp
fdiv
ret
mov
js
jae
or
mov
xor
popa
test
gs
js
or
dec
push
jo
(bad)
sub
push
xchg
ret
mov
mov
rol
das
loopne
int
mov
movs
in
or
dec
aaa
aam
dec
xchg
push
mov
pushw
movs
sti
cmps
aad
(bad)
int
or
mov
imul
icebp
mov
(bad)
hlt
cmps
mov
test
test
arpl
fnsave
cmp
not
int
gs
cmps
xlat
xchg
loopne
cmp
mov
les
lods
jge
lods
mov
test
xor
adc
mul
sub
mov
add
nop
sub
mov
test
sub
mov
cmp
jae
dec
int
mov
test
mov
out
or
inc
jle
dec
std
into
(bad)
xchg
jmp
int
out
loop
dec
sbb
mov
dec
test
fs
test
jmp
cs
dec
cmps
mov
mov
inc
loope
xchg
shl
call
leave
pop
sar
int3
pop
icebp
pop
jbe
cs
jecxz
cmp
mov
push
push
push
aaa
xlat
jbe
mov
dec
rcl
add
nop
les
in
pop
jnp
mov
cwde
xchg
out
adc
mov
cmps
in
ror
or
test
jns
fmul
or
aad
mov
ins
pop
mov
mov
mov
ds
pshufw
jnp
mov
sub
add
sbb
mov
push
das
iret
adc
out
mov
test
dec
mov
data16
lods
pop
hlt
mov
in
sti
js
sbb
push
hlt
sub
and
ins
xor
xor
repz
push
jne
nop
or
cmp
xchg
push
adc
adc
aad
xor
mov
js
or
xchg
mov
cmp
lods
jb
out
mov
lods
fwait
jae
out
dec
pop
mov
mov
push
push
inc
aam
mov
mov
mov
fisub
clc
into
out
adc
xor
sar
pop
cmp
sub
in
mov
add
adc
lea
sbb
enter
ja
popf
ja
fild
mov
hlt
sub
sub
mov
mov
fldenv
rcl
in
jmp
fadd
stos
push
sbb
jmp
scas
nop
fiadd
cmp
clc
xchg
lds
dec
call
push
or
aaa
xchg
fstp
enter
or
push
inc
push
movs
fbld
pop
adc
push
adc
jne
cs
movs
out
cmp
jns
lock
mov
icebp
inc
pusha
mov
pusha
sbb
icebp
int3
(bad)
mov
mov
pop
jno
push
xor
loopne
xlat
jmp
pop
enter
xchg
lahf
pop
(bad)
in
mov
pop
pop
mov
cmp
mov
clc
jmp
pop
cmp
shr
adc
push
push
in
fwait
mul
arpl
dec
mov
(bad)
sub
inc
mov
movs
xor
mov
and
sub
jns
inc
in
dec
xchg
mov
cdq
push
mov
cmps
lea
sbb
clc
mov
push
cmp
es
aad
loop
jbe
aaa
push
add
fidivr
cmps
int
popf
dec
mov
xor
data16
jne
xchg
shr
(bad)
leave
push
out
neg
jns
mov
cmp
pushf
push
stc
fist
lods
push
outs
pushf
xor
outs
test
fisubr
jl
or
in
sbb
fdivr
sub
push
inc
fst
dec
push
jmp
retf
sbb
pop
mov
add
inc
jle
(bad)
jl
pop
jg
xchg
dec
or
shr
ja
iret
dec
jb
pushf
fld
push
xchg
cmps
mov
adc
inc
cli
(bad)
sub
lock
test
add
iret
xchg
ret
dec
pop
sbb
push
shl
xor
gs
call
jl
jne
dec
mov
adc
and
fsub
push
xchg
push
jbe
fiadd
mov
in
inc
push
frstor
cmc
ja
cld
test
cld
xor
and
adc
adc
sub
sbb
retf
fcom
scas
xor
mov
push
out
cdq
push
sub
mov
jns
inc
(bad)
push
shl
jle
fcom
popf
add
(bad)
retf
xchg
pushf
mov
icebp
sbb
mov
rol
and
add
test
fs
sbb
cmp
dec
retf
scas
outs
xchg
dec
push
ins
add
jl
jno
sbb
and
pop
dec
mov
mov
cs
daa
xchg
ret
push
sbb
push
push
adc
in
mov
icebp
adc
and
mov
sar
pushf
fwait
or
push
enter
adc
idiv
push
lahf
ja
pop
enter
stos
sbb
aas
xor
sub
or
jbe
mov
xor
inc
xor
push
(bad)
pop
jle
xchg
sbb
ja
fdivr
repz
xor
retf
mov
gs
out
pop
test
mov
in
mov
arpl
scas
jg
xchg
clc
sbb
jae
nop
mov
addr16
mov
les
cs
lods
test
rol
mov
call
popa
rol
jecxz
jae
xchg
std
push
or
loope
xor
mov
in
jmp
fwait
push
das
xor
loopne
not
in
das
inc
js
aad
repz
jns
pop
inc
adc
dec
jnp
pop
adc
bound
(bad)
inc
mov
mov
jnp
inc
and
mov
(bad)
fnsave
cmc
jg
test
stc
cdq
iret
aad
call
dec
jge
dec
out
loopne
jns
inc
cmp
jge
out
(bad)
cmp
sub
aaa
xor
mov
mov
mov
outs
lds
mov
nop
and
jge
push
daa
aam
lods
mov
loopne
mov
loopne
cwde
addr16
inc
adc
test
xchg
and
inc
and
and
push
in
int
mov
add
and
mov
adc
out
les
push
pop
xchg
adc
push
in
mov
in
pop
mov
jne
xor
push
adc
mov
pop
lds
cmps
outs
cwde
xchg
cwde
and
rol
les
adc
les
push
sahf
mov
call
mov
popa
test
and
add
cmp
or
dec
adc
xchg
mov
loope
sub
and
sbb
sub
push
repnz
or
movs
scas
adc
test
out
ret
push
pop
and
and
outs
xor
sbb
adc
add
int3
xchg
leave
and
mov
mov
cs
pop
cmp
pushf
fsubp
call
add
adc
sbb
jp
sbb
aad
adc
popa
arpl
in
aas
jp
add
pop
jmp
or
cs
out
mov
cmp
xor
mov
push
icebp
adc
cmps
mov
push
outs
scas
sbb
cwde
cmp
and
sti
in
outs
imul
and
add
xor
inc
dec
xchg
xchg
xchg
aas
cdq
jno
push
pop
inc
xchg
push
xchg
mov
pop
jp
(bad)
pusha
rcl
inc
add
push
scas
fs
stos
jae
pop
and
and
inc
es
les
mov
pop
pop
pop
push
std
sub
inc
ja
fnstenv
sub
sub
jne
add
mov
js
dec
jmp
test
repnz
out
ja
(bad)
fcomp
icebp
mov
push
jns
jno
fcomp
rcr
xor
xor
pop
fimul
sub
add
les
loope
xor
sbb
jmp
sti
pop
dec
dec
popf
lock
cmp
add
dec
mov
rol
sub
and
sbb
cmp
clc
sbb
pop
hlt
pop
cmps
aaa
sar
dec
in
add
(bad)
test
out
or
sti
xor
mov
data16
aas
jbe
adc
in
xor
sbb
fbstp
pop
mov
xlat
dec
ficom
lahf
shr
imul
add
xor
shl
lea
imul
jne
sub
jo
cs
icebp
or
js
in
mov
jmp
into
sub
sbb
or
hlt
das
aaa
in
stos
xchg
inc
mov
sbb
outs
pop
cmp
and
movs
ret
rcl
cmp
ds
mov
push
or
push
or
test
test
xchg
cdq
imul
mov
nop
int3
mov
jp
ins
clc
mov
lea
sub
xor
loop
jle
shl
fnstcw
push
push
in
and
call
add
outs
push
ror
push
imul
or
cmp
mov
inc
mov
call
cmp
imul
sar
test
(bad)
ins
mov
(bad)
mov
das
iret
and
dec
jno
movs
inc
(bad)
or
mov
(bad)
in
cmps
fs
dec
and
ja
in
stos
cmp
xchg
push
jge
repz
arpl
mov
int
mov
push
iret
mov
movs
mov
pushf
test
push
mov
mov
test
jmp
inc
pop
mov
cmps
cmp
or
push
lock
dec
inc
sbb
pop
repnz
retf
and
pop
cli
mov
(bad)
xchg
stc
das
fidivr
ror
inc
xchg
xor
lahf
je
or
sbb
mov
push
jnp
jo
iret
xchg
daa
dec
aad
jne
gs
cmp
in
bound
call
pop
cli
mov
dec
mov
push
int3
movs
mov
sub
lods
(bad)
cmp
push
xor
add
out
lahf
or
fisttp
(bad)
jo
or
(bad)
xlat
out
xchg
fadd
(bad)
shl
mov
jo
ret
and
lods
inc
ins
(bad)
outs
shr
ins
outs
mov
mov
sbb
pop
ffreep
out
std
mov
jge
push
fisub
lock
mov
retf
iret
pusha
push
(bad)
cmps
xor
xchg
mov
sar
cmps
(bad)
out
or
jge
ins
mov
mov
mov
mov
in
jns
lods
inc
jae
stc
call
mov
neg
lods
or
or
aaa
push
loope
ficom
repz
mov
mov
add
in
jle
or
mov
fsub
lods
ja
add
ins
or
bound
adc
xchg
jne
outs
ins
ficom
inc
clc
adc
pop
dec
scas
mov
mov
fdiv
sbb
sbb
mov
add
(bad)
sub
adc
dec
jl
mov
frstor
or
dec
test
pusha
int
jo
mov
in
add
mov
and
data16
cmp
mov
aam
jge
pusha
pop
mov
mov
imul
mov
dec
hlt
mov
xor
add
outs
icebp
in
xchg
jecxz
loopne
(bad)
enter
cli
enter
les
xchg
sbb
inc
or
test
mov
sbb
mov
jl
in
push
(bad)
xlat
mov
xor
sub
sub
call
call
test
popf
add
push
lahf
push
jle
inc
aad
lods
rcl
addr16
ins
cmp
neg
cdq
cmp
mov
fist
mov
pop
sbb
xor
clc
pop
adc
mov
jns
out
xchg
mov
clc
cmps
mov
mov
call
inc
repnz
mov
push
jb
fs
std
push
sbb
xor
or
js
dec
fs
jnp
sbb
out
adc
sub
call
(bad)
fidiv
pop
add
fwait
push
rol
pop
xchg
inc
ins
add
retf
pop
pop
js
stc
xchg
fstp
jmp
push
aas
add
scas
pop
fdiv
mov
inc
xchg
icebp
add
add
sahf
mov
dec
cmp
ficomp
mov
mov
test
mov
(bad)
mov
mov
(bad)
jbe
ja
and
dec
adc
lods
in
adc
mov
stos
mov
add
sub
push
lods
(bad)
outs
shl
retf
fs
addr16
jmp
xor
(bad)
sub
mov
and
sub
inc
mov
pop
add
pop
adc
push
retf
(bad)
and
enter
out
dec
ror
aaa
and
push
out
xchg
jecxz
cmp
push
inc
(bad)
mov
push
fist
shl
xchg
or
outs
mov
icebp
xlat
dec
hlt
arpl
adc
popa
sbb
cmp
enter
adc
add
inc
dec
sbb
mov
sbb
gs
stos
bound
mov
or
aas
popa
in
mov
jmp
fdiv
inc
jne
out
out
(bad)
loop
xchg
mov
and
call
mov
adc
call
adc
test
fst
les
sub
mov
aam
mov
lahf
push
in
push
push
into
and
loope
push
sub
xor
cmps
fld
push
and
and
lods
jecxz
aam
call
lock
aad
and
mov
dec
cmp
mov
iret
loop
(bad)
pop
adc
cmp
jae
cmp
jge
retf
or
test
adc
loope
cli
mov
dec
cmc
cmp
mov
mov
popf
scas
popf
call
movs
jmp
add
shl
add
imul
shl
cmp
pop
mov
retf
fistp
push
test
push
(bad)
jmp
mov
in
mov
aaa
sub
lock
gs
xchg
mov
xchg
or
lods
jb
xchg
pop
push
jmp
cmp
jmp
lods
pop
in
pop
cmp
cmp
sbb
or
push
retf
data16
push
les
sub
call
aas
fdivr
xchg
mov
stos
adc
clc
and
xor
xor
mov
sbb
je
retf
mov
call
jo
inc
lods
sbb
xchg
arpl
jns
rcl
dec
adc
imul
fisub
cmp
mov
scas
add
push
popf
sar
ins
enter
mov
sbb
out
sbb
jecxz
mov
clc
arpl
inc
push
ja
lock
popf
sub
stc
jo
dec
sbb
ficomp
mov
mov
sub
push
loop
sbb
repnz
test
cmp
sub
jl
add
inc
icebp
jecxz
adc
push
and
aam
test
jo
popf
and
xchg
sub
jg
xor
and
(bad)
jnp
ret
inc
scas
adc
mov
mov
and
add
sbb
pop
add
adc
jle
lods
add
push
jnp
lock
jmp
mov
cmp
mov
jmp
cmp
push
mov
sahf
loope
or
cmps
sahf
push
out
mov
test
xchg
fst
test
xchg
aam
dec
xor
xchg
adc
and
pop
shr
jb
rol
push
daa
xor
imul
shl
adc
fisttp
mov
das
ret
xchg
repnz
outs
mov
out
hlt
jle
mov
jmp
lds
mov
sbb
cmps
sbb
push
fisubr
lods
add
dec
lods
bound
mov
xor
xor
les
es
fwait
das
mov
mov
jae
sub
push
jno
pop
or
push
or
or
jo
mov
outs
data16
nop
cmc
arpl
and
or
lods
mov
adc
and
mov
pop
iret
out
fs
sbb
loopne
fstp
cs
loope
fisub
xor
jge
rcl
jno
mov
add
aam
out
scas
mov
jmp
sub
call
adc
inc
cs
adc
xor
pop
popa
mov
add
mov
adc
cmp
jmp
sub
dec
mov
add
arpl
xchg
(bad)
cld
or
xor
cmps
xor
(bad)
jnp
sbb
in
xor
sbb
imul
xor
xlat
setl
cmp
test
fadd
retf
inc
popf
cmp
mov
sub
mov
adc
int3
inc
enter
aad
pop
test
je
mov
sub
dec
mov
dec
dec
sbb
int3
(bad)
push
shr
push
adc
pop
dec
lahf
iret
movs
push
mov
je
ja
fiadd
into
pushf
xchg
xor
popf
lods
pusha
add
out
cs
pop
call
and
mov
sub
jbe
sub
and
into
mov
jnp
sbb
xor
inc
fbld
push
adc
dec
inc
loope
push
jbe
sbb
mov
js
mov
xor
mov
push
sbb
adc
aaa
add
jmp
inc
add
cmp
pop
ret
xor
jmp
add
dec
sti
pop
sub
out
xchg
jne
jae
pop
mov
jp
dec
jmp
lods
sbb
mov
(bad)
out
xchg
out
mov
cmc
leave
or
lods
cmp
sbb
ins
les
xor
add
rcr
ja
pop
xor
stos
xor
mov
loop
fcompp
jecxz
push
sub
add
inc
in
ins
(bad)
sbb
pop
aaa
js
mov
jle
imul
adc
or
test
pop
int
mov
add
jmp
mov
aad
fnsave
jmp
out
jo
xor
les
mov
div
inc
mov
push
sahf
or
xor
add
add
xchg
sbb
out
sbb
hlt
mov
pop
or
movs
iret
xchg
cs
jp
mov
cmps
ja
ror
retf
mov
mov
add
sub
mov
cmp
cld
xor
or
idiv
push
cmp
rcr
jno
dec
cmp
or
leave
mov
std
cmc
aas
ins
leave
or
les
hlt
test
ja
jb
mov
rol
inc
cmp
pop
dec
mov
dec
scas
dec
clc
sbb
cmp
dec
setle
out
iret
cdq
inc
push
push
mov
inc
push
cmp
add
or
jno
xor
daa
shl
push
mov
dec
mov
jl
idiv
ret
cmps
fs
out
or
icebp
cmps
sbb
push
out
loope
jmp
lahf
repz
xor
shr
adc
cmps
push
pop
call
pushaw
in
imul
lods
outs
add
jl
gs
(bad)
lods
and
out
adc
jbe
ss
dec
adc
cwde
cmp
mov
shr
frstor
js
mov
out
data16
int
fchs
or
sub
add
jno
mul
cdq
pop
mov
dec
push
add
or
adc
shr
inc
mov
mov
mov
jbe
push
and
pusha
cmp
xchg
mov
test
sub
add
jmp
jp
mov
adc
pop
push
sub
push
inc
(bad)
xlat
push
dec
mov
ja
mov
adc
aaa
into
mov
push
shr
mov
pusha
xor
xchg
mov
add
pop
xor
popa
test
ja
jbe
jle
dec
jl
pop
sbb
xor
loop
push
outs
xor
mov
sub
cmp
push
addr16
fidiv
pop
movs
sbb
(bad)
cmps
fcomp
int
hlt
push
mov
cmp
add
scas
jae
movs
mov
fdiv
cmp
aad
sub
jge
aam
push
call
cdq
xchg
ss
call
jge
cmp
mov
sbb
in
(bad)
(bad)
mov
pop
rcl
call
popa
repz
mov
sbb
dec
pop
stos
jo
push
movs
sbb
cmc
repnz
imul
test
out
mov
and
in
xor
rol
addr16
sub
mov
popa
add
or
aaa
push
ins
add
repnz
pop
inc
jge
dec
int
shr
xlat
xchg
rcl
stos
fist
push
cld
pop
pop
push
loope
xor
test
div
adc
icebp
mov
jno
xor
jbe
scas
pop
test
aam
jno
(bad)
int3
int3
sti
out
addr16
enter
inc
int
mov
mov
test
adc
ins
cmp
lods
(bad)
arpl
jecxz
push
or
loop
xor
push
mov
rol
scas
add
outs
xlat
xor
and
repnz
push
add
cmp
and
test
mov
and
adc
mov
nop
push
pop
pop
out
adc
aas
mov
add
pop
leave
adc
jo
sub
mov
rol
int
sbb
jb
xchg
loop
shl
sub
xor
pop
out
xchg
fld
dec
inc
xchg
mov
test
les
leave
cmps
cwde
hlt
in
mov
cs
cmps
pop
xchg
jmp
clc
call
adc
push
mov
fistp
vmovupd
add
fild
(bad)
mov
cmp
in
push
outs
or
cmc
cs
mov
dec
test
adc
lock
enter
cs
into
(bad)
mov
or
rol
das
add
add
cmp
push
out
xor
pusha
mov
aam
fist
ins
pop
xchg
test
xchg
mov
inc
dec
jno
jnp
imul
pop
xor
in
popa
sbb
inc
retf
mov
sub
mov
add
mov
xor
sub
pop
aas
in
cli
and
push
aaa
cmp
mov
icebp
icebp
lods
ret
int
mov
mov
and
dec
repz
pop
dec
sub
std
or
push
mov
outs
cdq
jle
or
fidivr
mov
outs
jae
imul
sahf
inc
test
cmp
adc
(bad)
pop
clc
dec
test
pop
pop
jno
xor
jae
push
jns
test
mov
scas
stos
pop
mov
sbb
aaa
xor
(bad)
shr
enter
fsub
stc
mov
xchg
dec
cli
jp
cld
sbb
ins
jmp
arpl
xchg
fucomip
jecxz
aad
jno
fcomp
ret
push
pop
int3
mov
(bad)
jl
cmp
or
aam
inc
pop
hlt
pusha
mov
mov
stc
adc
outs
enter
sub
sub
retf
xor
outs
jae
and
mov
jbe
dec
inc
xor
and
jle
rcr
push
pop
ficomp
inc
push
push
or
pop
sbb
add
popa
ret
xchg
mov
test
sbb
mov
scas
shl
inc
inc
push
pop
vmwrite
push
xor
push
inc
in
and
into
xchg
push
lea
cmp
daa
lods
and
icebp
or
inc
outs
dec
jnp
cmc
bound
popa
test
loop
jmp
movs
(bad)
xchg
pop
popf
jmp
add
jnp
(bad)
in
add
pop
xchg
mov
pushf
adc
sbb
mov
je
retf
xchg
and
repnz
ret
add
or
xchg
in
fiadd
jmp
shr
add
shr
inc
mov
mov
and
mov
cmp
iret
mov
sbb
cli
dec
dec
mov
int
(bad)
and
loop
jae
lods
clc
adc
and
les
push
xchg
and
jmp
sbb
loop
cmp
inc
mov
push
mov
dec
sbb
jecxz
repnz
aam
fbld
and
jg
xchg
push
les
sbb
cdq
not
lea
push
popa
dec
pop
popa
or
sub
clc
cmp
dec
mov
add
mul
test
(bad)
cmp
cli
mov
out
jge
mov
push
xor
loope
mov
jno
mov
fld
jo
out
int3
xlat
pop
popf
fmul
inc
mov
jns
loop
sbb
movs
ins
jno
sti
fucompp
hlt
cwde
push
(bad)
dec
adc
bound
xchg
lea
cmp
adc
mov
in
jle
inc
fdiv
xchg
aas
ja
into
fadd
push
inc
pop
scas
loop
scas
jae
imul
mov
mov
std
inc
mul
bnd
and
jmp
fdivr
xchg
dec
daa
int
mov
imul
(bad)
pop
adc
mov
add
std
or
add
(bad)
mov
ss
cwde
outs
fist
add
cmc
icebp
les
inc
xor
mov
data16
dec
lods
jne
push
movs
cs
xchg
setno
jg
push
sbb
(bad)
fcomp
mov
xchg
popa
dec
mov
pop
adc
retf
pop
fcmovnu
in
jge
ror
mov
(bad)
lea
in
mov
push
mov
jl
and
sub
ja
(bad)
test
add
idiv
ins
mov
shl
inc
adc
ins
lock
or
dec
ret
movlps
or
int3
retf
inc
inc
cmp
je
dec
rol
stos
pop
push
xchg
or
or
imul
jg
in
ja
adc
xchg
cmp
or
jl
cmps
jb
sbb
sub
jne
jp
sbb
dec
std
cmc
jnp
add
xchg
xchg
psubusw
lahf
aad
sub
repz
sbb
dec
ret
(bad)
(bad)
out
jnp
push
add
scas
xor
or
loope
push
mov
repz
movs
mov
out
mov
mov
sbb
sbb
sbb
sub
sbb
icebp
pop
jne
xlat
push
xchg
xor
push
add
lds
push
loope
(bad)
repnz
in
out
ficomp
daa
fld
addr16
jge
out
cdq
dec
lods
mov
sbb
adc
inc
mov
and
add
sbb
into
xchg
add
int3
into
cs
mov
leave
mov
arpl
stos
fnstsw
fdivr
xor
pop
out
and
xchg
mov
push
or
dec
mov
out
sub
les
xor
jle
inc
psubw
ins
loopne
mov
push
add
lea
jb
stos
dec
out
add
repz
sub
lds
jbe
pop
xchg
mov
inc
pop
imul
fsubr
es
sub
mov
cmp
cli
out
push
mov
icebp
mov
or
fsubr
push
sbb
movs
mov
or
sti
cmp
mov
test
call
ss
fwait
add
das
clc
sbb
inc
jge
adc
mov
shl
jge
in
in
call
cld
(bad)
shl
cmp
push
int
mov
loopne
dec
(bad)
test
shr
mov
pop
pushf
imul
jl
or
add
mov
aaa
and
jo
je
outs
pusha
stc
fcomp
adc
mov
mov
jb
(bad)
fsubr
sub
jns
sub
lods
es
cwde
mov
retf
or
add
cli
fisubr
jmp
lea
ins
push
aad
adc
stos
mov
div
std
out
das
stc
xchg
mov
sbb
fiadd
jae
cmps
mov
push
mov
add
fld
inc
jns
(bad)
sbb
xchg
mov
cmp
test
loop
je
adc
in
sar
push
and
std
adc
mov
xor
jb
inc
xor
(bad)
mov
sub
dec
es
addr16
call
jle
and
popa
push
dec
jge
pop
pushf
pop
push
test
das
fisubr
pusha
nop
ja
cmp
cmp
and
cmps
cmp
push
lea
xchg
sub
pop
jp
jmp
mov
mov
stc
sbb
enter
xlat
or
mov
out
push
and
sub
fcomp
test
cmp
das
or
outs
neg
xlat
cdq
jmp
jno
push
je
xchg
shl
push
repz
fxch
imul
pop
jno
inc
outs
dec
pop
js
jmp
dec
jl
out
loopne
fs
cmps
shl
push
jne
lea
test
(bad)
out
lock
sbb
cmp
aaa
setge
inc
mov
int
push
icebp
xchg
mov
pop
scas
xchg
ins
cmp
aas
jl
hlt
xchg
fadd
int
cdq
(bad)
mov
lods
in
and
das
adc
lods
leave
or
mov
mov
cld
ror
pop
dec
adc
ror
inc
daa
lds
rol
mov
out
ret
or
inc
mov
int3
sbb
mov
fisttp
push
or
jmp
sub
jb
sub
fwait
dec
fadd
dec
loope
mov
jmp
jmp
stos
inc
je
(bad)
push
jmp
xchg
mov
mov
push
imul
xor
retf
and
sbb
mov
clc
aam
loope
pop
aaa
fistp
or
data16
pop
fist
dec
sub
adc
or
jmp
fs
push
xor
jecxz
outs
jno
mov
jg
sub
arpl
xchg
jge
jnp
push
jmp
das
int
or
xchg
fstp
ins
es
pop
inc
xchg
scas
xor
jl
jg
ins
(bad)
call
test
ror
std
jmp
movs
pop
inc
pop
push
jb
shl
fsubr
dec
or
popf
cs
xor
and
arpl
clc
adc
repnz
leave
sub
push
dec
dec
jo
pop
idiv
mov
aaa
sbb
jne
jmp
xchg
pshufw
mov
test
dec
mov
mov
mov
adc
xchg
aam
icebp
cld
jg
jb
add
xchg
mov
push
rcl
jb
xlat
dec
xchg
mov
in
xchg
bound
call
add
(bad)
sub
int3
fidiv
popf
cmp
dec
shr
sbb
dec
mov
sbb
outs
jmp
push
inc
lea
adc
jp
jo
pushf
xor
ret
sbb
(bad)
stos
mov
std
mov
lahf
jg
cmp
xor
into
ja
push
mov
jne
fidiv
mov
mov
dec
push
inc
sbb
inc
addr16
rol
xchg
bound
movs
xchg
mov
popa
std
in
xor
movs
adc
gs
or
hlt
ins
xor
shl
outs
add
aas
lea
push
rol
xchg
mov
or
inc
push
mov
ret
jmp
fimul
(bad)
pop
xor
cmp
sub
add
cmp
rol
push
mov
lds
ss
std
js
test
sahf
xchg
sub
cmp
stos
xor
div
mov
jno
(bad)
cwde
jmp
cmp
push
push
xor
add
clts
jne
pusha
pop
adc
out
into
add
ret
and
idiv
clc
ror
mov
inc
dec
push
push
add
cs
loop
cwde
xchg
fsub
push
or
scas
dec
jl
stc
fld
sbb
push
retf
cmp
sahf
push
out
dec
jne
data16
mov
fwait
cmp
xchg
mov
aas
jo
repz
int
pop
imul
sub
cmp
adc
pop
push
scas
xor
icebp
retf
sub
or
and
sbb
xchg
movs
mov
mov
mov
int
jge
retf
pop
bound
hlt
inc
jle
jns
xchg
js
dec
lahf
dec
mov
das
adc
push
cwde
(bad)
bound
fsub
xor
push
je
dec
jae
cmps
inc
lock
sub
adc
std
out
sbb
push
jae
loope
mov
xchg
enter
mov
fild
hlt
call
adc
mov
inc
sub
or
push
data16
inc
inc
mov
out
pop
shl
cmps
jg
movs
inc
pop
dec
sbb
cmps
(bad)
nop
pop
fst
retf
jae
(bad)
rcl
inc
mov
aaa
sub
adc
in
inc
test
js
aaa
add
adc
in
pop
adc
sbb
test
dec
mov
jo
les
mov
cmp
xor
jo
in
enter
pop
out
in
jmp
push
dec
pop
sbb
shr
imul
jnp
cli
out
stos
repnz
sub
mov
push
imul
stc
dec
aam
pop
mov
sub
shl
fucomip
fstp
dec
nop
clc
aas
push
jnp
in
mov
mov
push
or
inc
hlt
push
pop
stc
mov
or
mov
stc
or
bsf
das
adc
fbstp
sar
sub
cmps
and
jo
or
xchg
js
mov
hlt
enter
mov
mov
dec
and
shr
pop
add
jnp
fisttp
aas
cmovb
out
sbb
dec
jmp
inc
dec
jp
dec
aad
call
adc
sbb
jne
push
lods
dec
sub
add
arpl
ja
cmp
shl
(bad)
mov
jp
push
daa
mov
nop
push
push
sbb
pop
ror
in
jne
jmp
loop
jno
adc
add
loop
cdq
std
ror
cmp
add
xchg
pop
xchg
jb
and
fadd
add
js
pop
pop
das
in
in
pop
jb
jmp
push
rol
clc
js
sbb
xchg
or
jmp
popf
xchg
in
xor
or
or
loop
mov
(bad)
mov
fcmove
out
cmp
add
mov
push
das
das
mov
jge
xor
popf
cmps
jno
in
dec
lock
push
dec
push
push
inc
mov
loope
xchg
pusha
lock
mov
mov
add
stos
push
js
dec
push
dec
ss
sahf
lea
push
leave
dec
or
xchg
xor
push
dec
test
cmps
das
ror
outs
sbb
pop
(bad)
mov
je
xor
outs
jge
dec
out
pop
shl
clc
mov
ins
or
cmp
in
jne
mov
add
scas
lods
sub
enter
ins
fmul
cmp
mov
test
push
sub
stos
and
sub
call
test
pushf
sti
sub
loopne
test
lods
mov
cmp
loop
add
jge
add
test
dec
int3
leave
fs
nop
adc
retf
xchg
and
mov
pop
repz
cmp
retf
mov
jae
push
lods
push
int3
outs
aaa
sbb
and
sub
test
and
in
dec
mov
ffree
cs
sbb
and
inc
fild
mov
cmp
test
imul
add
jnp
jae
retf
fisttp
add
mov
icebp
sub
and
and
shr
xchg
loope
add
mov
outs
jno
xchg
mov
in
mov
fdiv
or
sub
mov
in
loope
add
out
dec
inc
sub
push
pop
(bad)
pop
push
shr
inc
loopne
jecxz
ja
push
test
pop
mov
mov
aad
(bad)
(bad)
lock
mov
xchg
rdmsr
or
jp
pop
add
jl
pop
or
adc
push
xchg
sub
ss
dec
xchg
sub
leave
jp
sbb
sbb
sub
inc
xor
daa
add
aaa
and
mov
add
sbb
outs
lock
icebp
pop
push
outs
out
popf
fcom
ror
es
or
dec
hlt
jae
popf
dec
lock
in
scas
pop
cmp
mov
dec
sbb
clc
test
jne
enter
mov
daa
push
sub
lock
shl
add
mov
in
fld
push
(bad)
mov
sub
pop
sahf
and
fisub
cwde
jae
jg
adc
ror
dec
pop
mov
dec
or
out
cmps
(bad)
in
or
mov
sub
add
scas
es
xor
not
pushf
xchg
dec
call
addr16
xchg
(bad)
lea
mov
mov
outs
mov
sbb
loop
into
jg
jb
mul
mov
aaa
jo
aad
pop
xchg
inc
sbb
fld
mov
mov
es
ds
mov
arpl
sar
mov
xor
fsub
repnz
push
adc
sbb
(bad)
iret
jae
mov
sbb
jae
retf
(bad)
fstp
push
mov
rcr
cs
push
push
pop
jmp
retf
enter
rcr
xchg
jge
repnz
cmps
test
imul
pop
mov
retf
mov
(bad)
sub
movs
ret
retf
fisttp
lahf
mov
sahf
scas
jae
xchg
and
stos
adc
data16
pop
sbb
cld
cmc
sti
popa
xor
jp
add
ds
fs
in
pop
sbb
(bad)
(bad)
or
lods
cmp
hlt
push
retf
xchg
and
pop
loopne
lds
push
mov
rcr
push
(bad)
mov
xchg
dec
in
movs
mov
repz
mov
idiv
jno
out
scas
mov
inc
pop
call
add
out
jns
mov
push
cs
pop
aaa
sub
inc
mov
cmp
stos
cmp
dec
adc
dec
inc
sub
mov
pop
popa
mov
out
out
sbb
sbb
addr16
mov
mov
add
outs
dec
pop
lds
mov
jle
xchg
imul
dec
in
mov
cmp
inc
jg
push
fidivr
call
sbb
jns
dec
cwde
inc
ret
sub
movs
enter
or
fdiv
in
sbb
adc
bound
daa
xor
jl
add
push
test
leave
pusha
xor
adc
adc
mov
xchg
ins
and
popa
fadd
push
mov
dec
outs
push
or
jbe
dec
or
lds
les
inc
stos
mov
mov
mov
mov
loopne
ret
mov
jb
das
jle
mov
xor
fcom
loope
in
dec
jne
jle
sti
ja
imul
add
cwde
adc
sbb
dec
out
dec
mov
sbb
adc
(bad)
push
(bad)
mov
rol
aam
ss
mov
and
add
and
bound
test
jmp
out
xchg
lods
(bad)
adc
add
adc
push
nop
jmp
fcomp
mov
vmovss
outs
(bad)
mov
inc
add
xor
mov
loop
scas
scas
dec
jnp
push
stos
push
dec
fcmovb
scas
jns
mov
(bad)
jb
call
mov
shr
scas
jl
dec
mov
sbb
mov
gs
fcmove
leave
xchg
dec
add
repnz
sbb
jne
cmp
jae
dec
adc
dec
loop
add
jmp
das
lds
out
sbb
mov
jp
in
das
sub
or
lahf
mov
dec
cs
cmp
bound
xchg
nop
push
fldenv
addr16
(bad)
mov
inc
nop
out
int3
out
test
pop
sbb
push
xor
mov
movs
pop
jp
inc
push
mov
push
pop
imul
pusha
mov
pop
xchg
add
mov
cmp
lahf
xchg
mov
push
xor
jae
push
stos
cmp
xchg
pop
call
dec
and
aas
repz
sbb
mov
inc
in
mov
sar
arpl
or
jne
jle
dec
adc
test
dec
retf
and
adc
fnsave
jae
dec
ret
retf
sahf
pop
ficom
xor
adc
int
jge
push
or
mov
mov
inc
ud0
adc
xor
xor
xchg
dec
sub
stos
mov
inc
jle
fbld
es
inc
ss
pop
aam
jno
ins
cmps
jg
retf
stos
scas
push
fcomi
enter
cmp
int3
sar
into
int
xchg
push
cdq
repz
sub
aad
stc
inc
out
inc
pop
lea
call
sbb
lahf
xor
sbb
sar
adc
das
mov
adc
int
ret
clc
pop
mov
repz
xchg
cmps
adc
or
push
inc
fdiv
adc
adc
ret
nop
not
movs
cmp
and
sbb
sbb
and
xor
popf
cmp
mov
mov
icebp
jge
pusha
popf
imul
leave
push
sub
and
or
or
push
cmp
push
js
sub
ret
out
inc
pop
xor
fcomp
cmp
push
push
and
mov
push
sbb
ja
fistp
or
clc
or
jge
int3
jg
mov
dec
mov
pop
adc
(bad)
aas
pop
adc
popa
push
push
iret
popa
mov
xchg
cmp
shl
inc
aad
xchg
lods
retf
stc
cvtps2pd
movs
adc
mov
ins
xor
sub
mov
pop
rcr
mov
xlat
xor
push
pop
je
or
lods
mov
inc
and
add
retf
pop
inc
xchg
fld
mov
jle
xchg
xchg
movs
aad
sar
(bad)
push
pop
xchg
mov
hlt
ret
push
lea
jp
ds
fbld
je
push
add
mov
lds
lods
shl
inc
pop
ret
sbb
add
clc
dec
sub
arpl
cwde
jmp
ins
mov
pop
or
popa
pop
push
cmps
cwde
inc
xchg
mov
sti
test
outs
pop
shr
imul
push
int3
pushf
pushf
sahf
inc
gs
sub
outs
push
js
xor
sub
ins
or
in
cmps
fld
pop
aam
rcl
adc
dec
xchg
cmp
jno
jl
cmps
call
icebp
std
scas
aas
add
mov
mov
sahf
stc
rcr
imul
xor
sbb
sub
mov
arpl
mov
sub
pop
push
xchg
cmp
rol
fistp
add
mov
mov
inc
scas
or
jns
dec
push
dec
inc
daa
shl
push
shl
cmp
push
xlat
pushf
xchg
mov
fdiv
ficom
arpl
sub
retf
push
pushf
cmp
lods
stos
cdq
push
and
(bad)
add
mov
imul
inc
and
inc
ins
add
add
mov
in
outs
mov
adc
push
and
mov
fcom
ds
mov
and
mov
lahf
loopne
mov
mov
inc
bound
loopne
movs
and
dec
out
mov
nop
jb
push
cmp
dec
xor
scas
lds
mov
adc
jecxz
inc
add
fwait
push
pop
loope
mul
fist
xchg
je
mov
mov
dec
lea
(bad)
in
sub
sbb
sub
mov
std
pop
and
dec
fnstenv
push
push
pop
movs
outs
lods
mov
fisttp
shr
xlat
mov
mov
div
jns
test
cmps
out
adc
stos
test
mov
cmp
int3
in
mov
ins
or
scas
mov
ja
ds
or
mov
test
inc
cwde
and
lea
xor
mov
mov
mov
cmps
aad
dec
mov
ret
mov
xchg
push
add
cmp
add
call
clc
cmp
call
js
mov
mov
xchg
xchg
fldcw
jb
dec
repnz
mov
fcomp
(bad)
push
dec
or
mov
stos
xor
ss
cld
jne
sub
push
call
cmc
fdivr
xchg
movs
mov
jl
gs
pop
stos
cld
xor
push
mov
les
push
adc
fcomp
xor
mov
lods
out
sub
ins
mov
jg
int3
movs
sbb
mov
mov
jno
lahf
sbb
jecxz
fidivr
addr16
sbb
ficom
clc
pop
pop
push
push
mov
daa
mov
pop
adc
jl
js
lods
jbe
push
into
rol
es
daa
(bad)
jne
mov
lahf
fs
int3
jnp
std
scas
cmp
int3
xchg
inc
xor
dec
dec
popf
fs
adc
leave
scas
xor
xchg
stos
cmp
jmp
outs
(bad)
pop
push
retf
shr
out
outs
scas
push
add
repz
leave
dec
retf
movs
mov
mov
loope
cmp
stos
dec
les
ret
out
xchg
data16
stos
push
push
and
fild
jmp
movs
loope
(bad)
repnz
push
sti
out
cwde
fidivr
jle
mov
clc
fsub
fdiv
out
lea
or
in
imul
xlat
sbb
fwait
(bad)
push
mov
aas
int3
jo
dec
xor
aaa
test
sub
das
xchg
xchg
fsub
enter
adc
mov
cmp
sbb
cli
clc
mov
stos
pop
lock
out
push
xchg
add
push
xchg
scas
fadd
cdq
inc
jmp
adc
mov
mov
imul
xchg
fimul
cmp
fiadd
data16
fadd
push
sub
xor
fsub
mov
out
das
adc
inc
pop
mov
pushf
cwde
dec
daa
popa
out
out
cs
retf
aas
adc
loopne
add
inc
mov
sbb
or
pop
sti
cs
adc
das
mov
inc
push
jae
dec
ja
sbb
popa
rcl
aaa
mov
inc
push
push
mov
sar
or
pushf
add
xor
mov
fnstcw
call
call
xchg
(bad)
in
jge
jle
adc
mov
mov
xor
loopne
and
and
mov
aam
inc
add
jo
rcr
sub
dec
rcl
rcr
mov
mov
imul
jecxz
push
loop
xor
dec
push
fdiv
aaa
div
test
jle
xchg
jecxz
push
push
popf
mov
sahf
sbb
cmp
cmc
mov
aad
imul
hlt
js
ins
dec
shl
dec
popf
int
outs
pop
int
dec
mov
int3
mov
xchg
or
das
xor
mov
xchg
imul
fcom
cmp
pusha
inc
(bad)
push
cmps
outs
mov
clc
fld
fst
or
push
cmp
jmp
je
sar
push
fsub
or
mov
icebp
xchg
retf
dec
jbe
jle
imul
cmc
repnz
sub
jbe
mov
add
neg
fst
repz
push
scas
add
aas
movs
cmps
rcr
call
add
pop
sub
(bad)
sbb
pop
ret
inc
sbb
(bad)
out
popa
pop
fsub
sbb
idiv
add
mov
outs
ss
lods
sub
imul
push
retf
add
fsub
xchg
xchg
test
rol
adc
sub
prefetcht0
cs
popf
idiv
mul
fistp
out
inc
fsub
and
mov
sub
jl
(bad)
fbld
fiadd
icebp
movs
sbb
push
addr16
hlt
sub
push
data16
push
mov
xor
retf
enter
sub
mov
mov
shl
cmps
ret
das
dec
out
jae
cmps
loope
iret
jns
ficom
mov
bound
ss
(bad)
lahf
test
xchg
call
(bad)
mov
fwait
sbb
mov
out
pusha
mov
cmps
aaa
or
rcl
(bad)
ins
pop
mov
mov
cs
aas
adc
dec
dec
ds
xchg
push
inc
outs
xor
cli
cmps
inc
and
push
adc
pop
jmp
or
cwde
sub
or
mov
dec
dec
mov
push
fwait
push
mov
outs
out
lahf
cmp
in
cmp
in
mov
sbb
mov
out
pop
mov
scas
or
mov
and
cmp
rol
sub
adc
inc
jmp
mov
dec
pop
push
xchg
xor
icebp
adc
or
jne
mov
pop
dec
sbb
fisubr
popf
cmovo
js
adc
lea
push
jbe
inc
push
pop
in
and
loop
adc
sub
adc
mov
inc
dec
test
and
add
repz
push
mov
jne
mov
pop
mov
int
adc
inc
sub
enter
jnp
pop
enter
dec
add
pop
mov
or
call
or
push
push
jmp
and
xchg
cmp
iret
dec
enter
mov
loop
xlat
jecxz
inc
stos
(bad)
retf
pop
sub
sbb
popa
adc
cld
mov
std
scas
(bad)
adc
leave
or
dec
sbb
lods
call
rol
adc
test
cmps
inc
xor
in
adc
mov
mov
xlat
sub
lods
ins
ficom
imul
adc
rol
and
(bad)
fist
jbe
lods
xor
jmp
sub
push
ret
stos
jecxz
retf
cdq
fisttp
retf
nop
aaa
or
mov
bound
int3
retf
loope
push
call
ror
pop
mov
xlat
or
fs
outs
sub
lds
lock
fs
cmps
xchg
ret
cmpps
pop
in
repnz
adc
sub
lods
outs
push
popa
xor
xchg
inc
lods
cmp
addr16
mov
inc
xchg
mov
mov
jb
(bad)
cmp
push
pop
sbb
fcomp
mov
xor
dec
or
cmp
pop
pop
xchg
mov
or
shl
movs
dec
mov
cs
clc
fisttp
pop
mov
or
cmp
rcl
(bad)
enter
popa
adc
nop
inc
inc
loop
das
stos
mov
and
inc
cmps
scas
into
mov
jp
adc
and
sti
cli
arpl
or
fld
mov
js
jle
bound
fimul
loop
jecxz
xchg
jb
inc
adc
cmps
or
out
or
xor
push
das
push
mov
and
xchg
repz
push
mov
push
cmp
mov
fdiv
pushf
pop
inc
sahf
inc
jb
jmp
or
mov
dec
icebp
sbb
xor
clc
mov
arpl
push
in
jnp
pop
in
aam
pop
adc
jbe
dec
arpl
dec
pop
popa
dec
pop
mov
or
jmp
addr16
les
push
popa
nop
pusha
jne
jmp
push
(bad)
rcr
or
ret
pop
ret
dec
inc
xchg
mov
(bad)
fsubrp
fbld
mov
in
xchg
pop
ins
inc
lea
push
pop
pop
mov
(bad)
pop
push
mov
and
iret
push
cmps
jl
sysret
enter
pushf
loop
push
mov
pop
pop
jmp
adc
xlat
mov
mov
(bad)
std
cwde
pop
sbb
and
fnstsw
cmp
outs
inc
stc
ds
test
and
cmp
add
xchg
outs
rcr
(bad)
mov
mov
(bad)
outs
je
int
xchg
xchg
sub
adc
fst
push
xchg
xor
div
sub
adc
nop
sbb
cmp
push
cmc
mov
sbb
fnstsw
xlat
jns
js
mov
(bad)
add
ret
(bad)
aas
ja
and
cmp
add
icebp
es
mov
dec
adc
sub
cld
pop
pop
push
push
add
jle
jmp
lahf
scas
aam
mov
icebp
xor
pop
fs
and
sbb
cmp
xchg
stos
dec
dec
or
daa
scas
cli
test
sahf
shl
cmc
leave
mov
push
ss
pop
ins
popw
adc
jmp
(bad)
jne
and
fwait
mov
stc
dec
stos
mov
or
mov
xor
push
ja
je
pop
inc
cmp
cmp
and
adc
xchg
out
sbb
xchg
jns
sbb
sbb
xchg
xchg
ja
lods
loopne
data16
cmps
xor
sete
pop
sub
(bad)
daa
(bad)
jmp
jl
sbb
icebp
shl
push
sub
pop
dec
call
mov
or
repz
sti
mov
dec
das
aad
push
sbb
push
aas
mov
std
xchg
inc
dec
popa
cmp
jmp
leave
lea
mov
mov
xlat
(bad)
fisubr
dec
stos
retf
fidiv
push
out
mov
cmp
add
push
mov
sub
mov
in
mov
add
dec
jp
jmp
xchg
cmp
xchg
dec
dec
mov
mov
jo
(bad)
jmp
jno
xchg
inc
mov
push
pushf
pop
je
push
sbb
ficom
sbb
call
sar
and
mov
shl
cs
nop
inc
fnsave
fmul
lods
sbb
retf
int
sub
adc
mov
cmps
jnp
cmovb
aaa
pushw
and
push
cwde
dec
jecxz
push
or
sub
ficomp
jnp
xor
lea
lahf
inc
cmps
jns
cmp
enter
loope
sub
and
add
popa
add
sbb
jns
sar
jae
pop
xchg
addr16
mov
jp
pop
push
iret
loop
in
cs
mov
(bad)
and
mov
add
inc
jnp
ja
dec
cli
cmp
loop
push
test
sub
xchg
sar
movs
or
jg
mov
xor
add
dec
inc
cwde
fstp
mov
inc
sub
and
and
shl
scas
fst
sub
mov
fs
xchg
outs
scas
cli
dec
pmaxub
and
loop
ins
test
sbb
aam
ds
pop
fnstsw
fmulp
leave
iret
xchg
jmp
sbb
dec
cmps
mov
in
test
inc
ins
inc
iret
icebp
mov
mov
adc
cmp
sub
jns
cmp
leave
xchg
es
enter
aad
xor
rcl
adc
sub
push
mov
aam
sub
or
addr16
lods
inc
frstor
push
mov
out
ins
adc
aaa
js
retf
ret
cmp
jo
push
gs
imul
mov
adc
push
or
aaa
cmp
pop
mov
xchg
(bad)
repnz
push
lock
sub
mov
sbb
sbb
jmp
jns
pop
popf
cmp
cmps
sub
fild
lods
call
and
aam
jmp
mov
inc
xchg
test
dec
test
cmp
mov
cld
push
ins
ins
jb
adc
mov
mov
xor
shr
sbb
repz
mov
mov
sar
dec
or
mov
push
jle
xor
enter
jle
xor
movs
data16
pop
test
inc
push
mov
inc
iret
in
mov
rol
pop
sbb
test
xchg
adc
js
sbb
lods
lahf
cmp
call
inc
inc
and
in
inc
jp
mov
mov
jb
push
fimul
pop
pop
cmp
out
clc
xchg
push
cwde
in
stos
cmp
loop
inc
mov
jae
xchg
ja
call
lods
inc
out
das
mov
jle
mov
dec
xchg
mov
push
xchg
jne
int3
add
ja
in
push
loop
add
mov
ficomp
pushf
jno
push
repz
add
call
iret
and
lods
dec
xor
cmps
je
data16
or
popa
(bad)
fisub
pop
push
and
lahf
jge
push
div
sbb
lahf
lahf
aaa
push
nop
ins
dec
retf
add
in
es
jmp
jge
adc
shl
inc
stc
lds
jns
cmps
ins
dec
pop
cmp
rcl
jns
xor
xor
xchg
pop
imul
std
push
shr
loopne
mov
xchg
pop
sbb
out
ret
add
lahf
pop
jo
js
add
jp
call
movs
adc
repnz
ds
and
cs
call
movs
nop
add
jns
call
cmp
scas
stc
inc
popf
xchg
or
icebp
or
test
or
sahf
int3
dec
jle
or
mov
mov
push
sar
ficomp
leave
ja
sbb
dec
pop
js
outs
stos
push
out
int
xchg
jp
dec
cmp
dec
mov
cmps
ret
pop
aam
in
mov
fisub
and
hlt
mov
sti
inc
dec
jb
fcmovbe
call
xchg
sbb
out
xor
pop
fdivr
retf
xlat
and
retf
sub
sti
and
jmp
xchg
mov
int3
add
pop
xor
xor
push
push
popf
and
xchg
xlat
mov
push
push
ja
jo
aad
push
les
aam
and
aas
and
ror
dec
clc
lods
ret
add
rcl
stc
or
mov
movs
xor
outs
fsub
mov
fimul
loop
in
xor
pop
cdq
inc
xor
cmps
mov
data16
mov
jp
jbe
les
add
xor
xlat
push
pop
mov
into
mov
mov
push
cmc
cmp
xchg
out
pop
rcr
pop
and
mov
push
repnz
cmp
into
out
loope
cmp
push
popf
mov
mov
mov
int3
inc
daa
outs
arpl
mov
sbb
mov
and
xchg
mov
fbld
pop
dec
in
xchg
mov
in
(bad)
add
(bad)
das
push
cmp
sub
imul
sub
xchg
pushf
add
mov
cmc
(bad)
out
xor
nop
int
imul
jno
repnz
scas
sbb
cmps
test
arpl
hlt
jne
jge
mov
mov
xor
dec
inc
call
mov
inc
(bad)
in
or
push
sbb
std
jmp
mov
loopne
xor
fs
sbb
sub
adc
icebp
mov
jle
sub
fisub
adc
fwait
rol
mov
mov
es
fld
add
or
xchg
xor
pop
stos
jbe
in
inc
jae
addr16
scas
jmp
mov
stos
aas
pop
adc
call
mov
xor
mov
in
or
bnd
into
push
cmp
iret
rol
lea
dec
lea
mov
shl
in
sbb
and
xor
sbb
and
popf
loope
mov
xchg
cmps
or
mov
stos
in
jo
xor
mov
xchg
out
loopne
xlat
cs
add
pop
sub
fsub
and
ss
mov
xchg
test
aaa
int
je
js
dec
push
mov
int3
cs
dec
mov
std
add
je
xchg
mov
iret
shl
into
push
push
lea
fcmovnu
js
cmps
push
jmp
ja
jns
outs
js
inc
es
loope
ficomp
sub
jae
cmp
pop
iret
stos
xchg
xchg
sub
cmc
push
out
ins
xchg
ss
push
pop
fimul
sti
add
or
into
mov
sbb
add
mov
aam
and
cmc
add
dec
push
pop
push
xchg
jp
std
xchg
mov
mov
pop
pop
shl
ds
inc
in
or
or
js
cmp
adc
xchg
out
push
popf
fmul
into
adc
cmp
and
dec
xchg
outs
pop
dec
mov
pop
fwait
cwde
aam
mov
mov
cmp
fld
iret
arpl
outs
sub
jns
outs
mov
ja
int3
out
add
inc
mov
test
cdq
sbb
call
ja
cmp
mov
aad
fisttp
js
pop
daa
(bad)
sbb
repz
and
sbb
sbb
lock
and
or
stc
les
fdivr
je
cwde
stos
sub
out
test
sbb
mov
mov
repz
loopne
adc
xchg
and
sar
sub
jns
iret
fcmovu
int3
add
and
or
es
sub
js
mov
sti
dec
retf
push
out
push
int3
fnsave
xor
push
sub
shr
retf
dec
cmc
xlat
aas
add
sub
mov
lea
out
in
out
in
leave
mov
mov
fsubr
lods
out
outs
fcom
sbb
push
lods
mov
jp
aam
stos
loop
or
or
shl
xor
(bad)
aad
int
bound
imul
adc
fcmovne
and
mov
cwde
daa
inc
and
or
aaa
(bad)
sbb
(bad)
sbb
cmp
outs
adc
popf
int
lock
jmp
xchg
jge
(bad)
scas
jecxz
cli
mov
dec
fst
ret
pop
push
jmp
sub
les
add
das
add
ret
sbb
push
jmp
shl
inc
inc
ins
push
jecxz
sub
scas
mov
push
mov
gs
jae
addr16
inc
mov
mov
sbb
push
xchg
ret
mov
mov
(bad)
fcom
pusha
and
popa
jle
pop
les
push
add
or
xchg
sar
mov
pop
jmp
sbb
jg
das
mov
scas
outs
cwde
int
inc
in
movs
lahf
xor
mov
dec
push
cdq
mov
mov
jmp
pop
ds
jg
rol
cmp
ins
bnd
loopne
pop
dec
shr
dec
pushf
add
outs
fnstcw
lods
sub
mov
mov
mov
or
push
jle
add
or
mov
ss
mov
xchg
aas
mov
inc
je
fld
push
fldenv
shl
pop
xor
nop
retf
pop
lock
jmp
movs
aam
add
lds
xchg
dec
ret
inc
pop
sub
outs
fwait
enter
pop
sbb
push
aaa
imul
push
hlt
(bad)
dec
sahf
inc
mov
adc
(bad)
mov
int
mov
fwait
push
setle
mov
and
mov
mov
push
mov
dec
dec
inc
mov
sub
pop
sub
xchg
pop
mov
mov
call
les
mov
scas
xchg
cld
enter
hlt
and
das
xchg
aad
bound
out
or
fnstenv
js
stos
xor
dec
fld
dec
test
pop
jbe
ret
jle
leave
cdq
iret
jns
fimul
out
std
loop
mov
movs
js
add
lds
xchg
push
xor
ds
cmps
xchg
cmp
addr16
hlt
sbb
cmp
pop
lods
dec
xor
mov
push
or
xor
push
cld
out
add
sbb
lods
mov
into
inc
mov
loop
mov
push
mov
add
xchg
mov
ss
sub
or
cmps
out
add
and
xchg
shr
push
jge
sar
neg
mov
mov
(bad)
jne
loopne
xor
add
pop
jns
add
(bad)
in
popf
aas
xor
push
sbb
lods
cmp
in
mov
aad
cmp
xchg
cwde
sbb
jge
pop
fwait
loopne
add
sti
dec
dec
sahf
scas
loope
movs
sahf
(bad)
bound
test
push
leave
jno
xchg
mov
test
push
(bad)
mov
rcl
inc
mov
and
(bad)
sahf
out
inc
(bad)
xor
adc
cmps
ret
mov
cmp
aam
rcl
mov
aas
leave
(bad)
inc
das
mov
imul
mul
retf
push
ror
mov
jle
jle
push
xor
(bad)
int
enter
inc
movs
pop
jo
push
addr16
mov
lods
adc
stc
hlt
cld
jne
lock
and
sbb
repnz
inc
das
dec
(bad)
push
mov
(bad)
sbb
pop
pop
push
jmp
sbb
xchg
scas
jbe
add
cs
add
inc
jmp
pop
loopne
rcl
cmc
mov
mov
lea
and
stc
mov
not
(bad)
pop
mov
adc
out
(bad)
cld
inc
inc
cmp
push
mov
cmp
sbb
mov
or
jb
js
aaa
pop
popaw
shl
cmp
jnp
mov
xor
mov
test
lods
pop
pushf
sub
adc
cmp
sbb
push
jl
cmp
shl
lahf
push
cmps
inc
sub
xlat
and
mul
and
sbb
xchg
(bad)
sbb
bound
sub
sbb
sbb
dec
lea
shr
sar
imul
mov
add
test
and
sbb
cmp
addr16
adc
push
mov
ret
pop
(bad)
mov
call
xor
push
xchg
fwait
fwait
sti
push
add
sti
mov
sti
mov
cs
mov
outs
adc
pop
in
cmp
retf
inc
cwde
mov
clc
sbb
je
retf
pop
loope
mov
fmul
sbb
mov
push
jbe
and
nop
xchg
jge
pop
test
or
ret
xchg
lahf
pop
in
or
xor
(bad)
sbb
mov
out
inc
push
(bad)
pop
mov
and
push
xchg
jno
loopne
mov
and
push
cdq
cld
xchg
or
sub
sub
pop
mov
push
add
dec
sub
cmp
imul
cmp
cmp
arpl
scas
int3
fwait
cmp
in
jno
retf
cld
mov
movs
dec
pop
loop
mov
push
movs
imul
repnz
ret
push
outs
dec
jg
test
je
fsubr
out
push
mov
pop
cwde
(bad)
push
stos
call
add
dec
jmp
mov
adc
xchg
into
scas
or
jp
je
push
bound
or
mov
sar
aam
jnp
push
mov
cwde
xchg
dec
mov
ss
mov
add
pop
inc
add
in
lea
idiv
lods
jmp
movs
inc
arpl
xor
dec
push
movs
arpl
xor
sar
pop
test
push
xor
int
or
bnd
repz
pop
xchg
and
leave
dec
jne
push
out
xor
cmc
inc
push
push
and
loopne
add
gs
xor
dec
shl
lea
cmp
push
popa
dec
inc
xor
pop
imul
sbb
sbb
and
imul
jns
sub
mov
xchg
fist
movs
mul
imul
jne
ret
sbb
(bad)
sar
and
pop
test
fdiv
arpl
call
scas
ret
int3
xchg
test
imul
push
or
lods
jmp
dec
aam
xchg
and
(bad)
call
test
sbb
mov
adc
fild
stos
cdq
loopne
xchg
or
stos
out
jno
add
movs
clc
push
cmps
xor
lock
(bad)
(bad)
xor
std
mov
dec
push
cdq
or
cmc
ret
imul
jg
lods
inc
push
sar
test
push
fwait
fs
in
div
inc
lock
mov
in
jne
ds
call
xchg
gs
out
xchg
fadd
cmp
arpl
adc
mov
call
or
ins
pop
sbb
scas
add
sub
pop
cmp
mov
inc
stos
adc
pop
sub
ins
ss
adc
fild
adc
pop
jb
jle
mov
and
add
sub
mov
sub
jae
fist
pop
push
neg
cmps
jecxz
jp
fwait
pop
call
mov
adc
movs
int3
xchg
cwde
mov
jge
mov
(bad)
mov
loop
sub
adc
data16
scas
scas
call
lds
cmps
fisub
xchg
cli
enter
ror
test
xchg
xchg
push
cwde
aas
and
mov
ret
movs
add
and
fidiv
adc
xchg
movs
js
sbb
out
inc
sbb
xor
loopne
fidiv
ret
pop
test
dec
pop
cmps
push
mov
(bad)
das
outs
cmp
sahf
loopne
jmp
xor
sar
call
imul
pop
jbe
vmovss
jge
or
push
mov
bswap
(bad)
xor
sub
inc
sbb
sub
pop
popa
(bad)
clc
ret
stos
sbb
xchg
mov
adc
push
adc
jg
ss
sub
aaa
and
jl
push
pop
push
mov
scas
lds
or
mov
mov
sbb
popf
retf
pusha
cmp
test
jp
(bad)
nop
mov
je
sub
scas
(bad)
mov
das
or
std
mov
add
stos
daa
dec
cmp
stos
cmp
dec
outs
(bad)
add
pop
nop
or
sbb
repz
push
retf
cdq
ret
dec
stos
movs
pop
sbb
fcomp
pop
stos
mul
and
daa
fdiv
jl
or
adc
ins
or
and
inc
in
jge
sbb
xor
ins
shl
not
add
sti
sbb
mov
xchg
scas
div
push
scas
jo
and
pop
and
call
or
movs
sahf
pop
call
mov
cmp
sbb
mov
test
sbb
ja
pop
hlt
adc
or
neg
jp
ds
sub
xchg
retf
pop
push
fucomi
repnz
sub
jno
(bad)
push
fild
in
mov
inc
mov
sub
jle
push
sub
lods
sbb
lods
cmp
xchg
push
pushf
(bad)
in
test
mov
stc
int
outs
mov
xchg
mov
push
mov
arpl
fidivr
push
and
mov
ds
dec
mov
lods
loopne
retf
(bad)
jmp
pop
out
in
out
xchg
mov
xchg
sub
push
addr16
outs
mov
and
add
pop
imul
jge
aam
sub
popa
jmp
pop
adc
mov
fwait
pop
or
sbb
in
pop
mov
lahf
(bad)
je
add
add
cmc
mov
mov
xchg
push
mov
je
mov
sbb
dec
xor
(bad)
dec
test
xlat
mov
in
add
xor
dec
jnp
and
stc
mov
imul
ror
hlt
ret
std
lods
mov
addr16
popa
push
test
mov
inc
test
dec
loopne
cmp
js
dec
(bad)
mov
pop
addr16
or
(bad)
cmps
pushf
and
(bad)
cmp
loope
aad
inc
and
imul
push
loope
xchg
pop
sub
leave
push
cmp
aam
test
push
pushf
pushf
imul
cld
mov
jp
call
sbb
call
out
rcl
in
out
adc
lods
pusha
(bad)
loop
or
xor
inc
out
adc
jo
fs
bound
test
xchg
push
cmps
mov
jo
popa
mov
or
mov
inc
jg
dec
mov
fucomi
daa
adc
movs
xor
out
jecxz
adc
std
(bad)
adc
pop
test
jae
mov
je
inc
push
mul
cwde
sbb
iret
push
push
jno
xor
(bad)
mov
sbb
adc
(bad)
mov
mov
add
mov
clc
mov
push
pop
inc
ds
dec
mov
xor
in
push
cmp
push
mov
mov
push
or
dec
pusha
pop
out
inc
jge
(bad)
aad
in
(bad)
pop
dec
aad
sub
inc
sbb
or
mov
jg
scas
stos
add
and
push
ins
ds
jnp
inc
stos
jmp
jge
mov
mov
stc
fdivr
sbb
add
call
mov
leave
daa
bound
fsub
push
fwait
jl
or
xor
add
push
sub
jg
ins
mov
cmp
fs
sti
ins
push
dec
and
cmps
xchg
jae
fcom
sbb
dec
popf
jl
pushf
aad
out
cld
sbb
retf
jo
je
sbb
mov
push
mov
iret
fst
dec
jle
and
sub
cld
and
outs
and
mov
xchg
in
xchg
mov
aas
adc
sti
in
mov
test
inc
data16
and
push
inc
stc
jmp
icebp
fcmovnb
mov
dec
inc
hlt
or
jne
jge
pop
or
inc
cmp
add
adc
inc
and
adc
fs
bound
cdq
ja
ins
mov
mov
sbb
xchg
add
cmps
gs
cwde
jo
jge
push
dec
mov
xchg
inc
cwde
cmp
(bad)
mov
popf
mov
cs
jnp
mov
pop
cmp
stos
push
js
rcr
repz
pop
out
int3
sub
inc
aam
frstor
cld
mov
fisubr
adc
inc
inc
icebp
or
push
xor
std
sub
jo
scas
mov
add
hlt
lods
sbb
pop
cs
shl
jae
(bad)
data16
out
scas
call
and
test
dec
inc
xor
or
bound
jp
gs
test
ret
fldcw
loope
pop
fcomp
adc
rdtsc
aaa
fwait
mov
mov
or
lods
mov
sbb
xchg
mov
adc
add
call
cmp
fstp
fstp
int
sbb
outs
sbb
push
cmps
mov
push
lea
jnp
mov
in
loopne
ins
loopne
push
pusha
sub
retf
cmp
mov
test
scas
pop
cmp
dec
jae
int3
dec
in
cmps
pop
pushf
test
push
dec
inc
icebp
loop
xchg
cmp
xchg
loopne
xchg
aaa
jo
(bad)
mov
sub
mov
jmp
(bad)
jmp
fild
inc
or
mov
je
arpl
jae
and
stos
fyl2x
pushf
scas
pop
addr16
dec
jae
rcr
xor
push
in
fidiv
jl
pop
inc
adc
dec
dec
ret
sub
scas
dec
add
test
ret
mul
aam
or
xchg
mov
(bad)
std
push
cmp
push
mov
mov
push
dec
sahf
xchg
xor
mov
retf
xchg
cwde
xchg
adc
pop
mov
mov
scas
pop
cld
xor
rol
in
pop
jb
mov
lea
jl
jns
cmp
xor
call
call
jmp
dec
inc
jmp
aad
(bad)
xor
out
test
imul
loope
in
and
mov
inc
mov
fsub
jmp
mov
test
cmp
(bad)
loope
std
stc
out
xchg
clc
jo
add
and
enter
test
enter
push
ficomp
gs
mov
cli
das
or
pop
or
mov
sar
popw
retf
imul
sub
xchg
xchg
push
inc
lds
jb
fld
pushf
add
sar
adc
xor
jecxz
mov
je
push
aas
(bad)
fwait
aaa
mov
push
mov
and
sbb
retf
xchg
mov
retf
daa
icebp
lods
jle
std
out
inc
stos
or
adc
fwait
dec
(bad)
ds
jne
out
sbb
push
cmps
fsubr
int
scas
fs
inc
jo
pusha
cmps
cmp
push
cmp
inc
jg
cmp
jle
lods
and
ror
mov
out
hlt
sub
xchg
jmp
push
retf
xchg
jmp
popa
add
out
sub
dec
not
inc
dec
xor
loope
dec
sbb
push
(bad)
xor
jnp
mov
inc
adc
pop
add
jae
mov
mov
jg
mov
inc
add
addr16
mov
call
fucomip
fdiv
mov
lods
lahf
inc
test
cmp
loope
sbb
shl
sub
(bad)
cmps
xchg
or
cmp
xchg
jne
mov
out
lods
dec
dec
jp
xchg
shl
retf
mov
das
mov
popa
sub
fdiv
add
sbb
int3
mov
adc
jge
mov
sbb
mov
mov
cmc
not
mov
fld
sahf
or
aad
mov
cmps
cmp
push
jno
dec
xchg
in
adc
out
xchg
jl
pop
adc
call
addr16
jge
pop
fwait
ins
dec
in
pop
test
(bad)
and
sti
xor
xchg
adc
outs
fwait
mov
pop
xor
mov
inc
inc
lahf
push
clc
xchg
cmp
bound
jge
add
mov
pop
clc
retf
iret
sbb
xor
push
xor
mov
cmc
repz
aam
dec
aaa
or
mov
and
push
fsubr
pop
mov
daa
(bad)
je
addr16
or
pop
in
mov
aad
sub
rol
outs
dec
fcom
add
mov
and
imul
push
xchg
mov
dec
int3
mov
fld
add
dec
ss
inc
cmc
inc
dec
ret
and
ds
lods
adc
jb
and
sub
cmc
out
movs
in
daa
retf
jbe
aaa
adc
or
or
movs
add
inc
int3
and
xchg
pop
and
rcr
sub
lds
stos
sub
idiv
sbb
(bad)
or
and
aas
sub
xchg
cmp
repnz
pop
jns
jbe
inc
cmp
sub
test
test
fisub
pop
(bad)
sbb
mul
ror
cmp
xor
mov
loope
lock
jecxz
mov
sti
loope
push
ret
jl
inc
or
sub
mov
pop
and
(bad)
adc
add
aas
cmps
sti
xor
cwde
fstp
in
xchg
mov
push
mov
dec
pop
aad
loope
push
outs
sub
scas
test
loope
inc
pusha
and
adc
mov
and
add
mov
bound
xchg
mov
les
and
or
sbb
xchg
mov
jecxz
lods
pop
or
ds
test
ret
pop
or
or
sub
aam
test
inc
imul
fiadd
cmps
jecxz
ret
out
mov
cmp
out
mov
scas
ror
cmp
mov
dec
xor
dec
lods
movs
out
shr
retf
imul
test
inc
shr
mov
jle
cmp
cmp
and
mov
jb
in
or
xor
mov
jle
fsubp
or
sbb
hlt
shl
dec
cs
dec
mov
daa
ficomp
in
xchg
out
mov
adc
sbb
out
ror
enter
mov
clc
enter
xor
repnz
dec
call
cmp
out
loopne
jge
pop
inc
xor
sbb
pop
xor
dec
push
ds
out
mov
sahf
jl
daa
sbb
(bad)
fcom
sbb
mov
add
repnz
(bad)
mov
dec
les
add
mov
(bad)
jae
pop
push
adc
push
mov
pop
and
test
stc
repz
pop
fidiv
push
sbb
btr
jo
imul
dec
jp
(bad)
adc
std
xchg
daa
dec
mov
jmp
test
jbe
jnp
(bad)
(bad)
pop
jmp
cmp
adc
popf
jle
fisttp
lea
add
sbb
jns
jmp
jmp
add
inc
sub
retw
int3
mov
and
mov
pusha
mov
and
xchg
call
(bad)
xchg
sub
pushf
jnp
movs
test
ss
pop
out
add
mov
push
cmc
imul
dec
mov
out
push
jmp
js
es
pop
es
push
dec
jp
cwde
sar
push
clc
gs
les
inc
shl
repz
(bad)
jl
fwait
mov
mov
shr
lods
cs
retf
xchg
ins
xor
pusha
pop
sub
jl
ds
scas
or
stos
lahf
adc
mov
scas
jle
into
add
jbe
lds
mov
dec
ds
gs
mov
xchg
imul
shl
inc
nop
inc
in
out
cli
ins
je
adc
adc
jp
pop
add
add
cmc
xchg
adc
out
pop
mov
cmp
ret
inc
xchg
(bad)
jmp
aaa
packsswb
and
movs
shl
add
cmp
and
movs
fdiv
sub
cmc
push
loop
xor
jne
nop
sub
push
mov
xchg
xchg
jb
(bad)
mov
pusha
sub
pop
xor
xchg
jg
fmul
js
jne
retf
jmp
inc
sub
fsubr
cmp
fs
cmovg
pop
dec
pop
ror
js
ss
and
dec
or
xor
cmp
jge
adc
outs
or
lds
pop
lods
fcmovnbe
sub
pop
in
jecxz
fistp
in
test
jae
call
inc
pop
in
out
das
loop
outs
mov
jmp
cmp
and
loopne
mov
jg
mov
jge
std
cwde
sub
(bad)
(bad)
mov
jmp
retf
and
cmp
adc
mov
scas
popf
xor
inc
mov
and
add
jno
rcr
mov
ret
sbb
(bad)
aad
fistp
fmul
aad
mov
xor
fwait
pop
sahf
jnp
jg
sbb
dec
jle
ins
cmp
sbb
add
or
xor
jl
lahf
fcmovu
cmp
and
(bad)
stos
cdq
in
jae
dec
push
out
lds
test
mov
xchg
shl
push
xchg
das
jno
in
mov
loope
push
lahf
cmp
retf
mov
aas
sbb
and
inc
push
enter
out
mov
mov
(bad)
sti
mov
xchg
or
push
mov
into
aam
jno
mov
mov
or
mov
das
jl
imul
adc
pop
xor
das
shr
pusha
push
sub
cld
or
sbb
out
rcl
mov
or
arpl
mov
bound
addr16
jae
in
paddd
xchg
retf
jp
iret
in
clc
add
xor
pop
jbe
(bad)
out
gs
add
dec
push
retf
push
fcom
add
xchg
mov
in
jge
je
pop
popf
adc
mov
xor
ins
adc
mov
popf
xor
sub
xor
jg
jae
add
cmp
mov
jmp
ds
push
inc
lahf
push
mov
das
movs
mov
ret
sbb
push
pop
mov
or
mov
pushf
mov
in
push
add
adc
jo
cmp
call
outs
mov
cmps
pop
mov
shr
(bad)
mov
jmp
stc
sahf
sahf
jmp
and
aas
test
les
in
pop
(bad)
push
sahf
cli
mov
push
xchg
sub
xor
fcmove
mov
xchg
mov
push
pop
add
jo
dec
push
adc
mov
mov
imul
aad
enter
mov
mov
call
je
pop
cs
adc
scas
mov
lds
inc
fcom
sti
or
and
div
mov
xchg
mov
cli
mov
aad
es
sar
mov
mov
mov
and
pop
mov
xchg
lahf
push
jmp
call
xchg
test
mov
push
sub
cmp
repnz
mov
dec
mov
ins
mov
cmp
xchg
mov
rcr
imul
add
jno
and
sar
jae
lock
fnstsw
fs
stc
sub
mov
and
repnz
jae
pushf
add
push
ds
in
test
xchg
xchg
jmp
(bad)
pushf
dec
cmp
idiv
push
out
dec
dec
xchg
sbb
fcmovnbe
push
shl
jge
fsub
push
or
pushf
jl
sbb
test
jnp
jo
sub
test
sub
mov
ss
add
repnz
shr
inc
xor
xor
adc
dec
cdq
pop
xor
and
add
std
into
stc
pop
shr
loope
mov
call
xor
add
mov
adc
cwde
hlt
test
aaa
cdq
inc
mov
gs
inc
lahf
push
int3
sbb
clc
and
scas
rcl
mov
mov
ret
movs
xor
sbb
jns
ficomp
add
(bad)
test
fnstenv
xchg
in
add
(bad)
pop
sbb
add
push
xchg
jbe
div
xchg
push
aam
iret
lods
inc
ins
aam
test
enter
das
jo
lock
in
aad
daa
movs
pop
push
mov
in
fwait
adc
jg
pop
mov
cmp
sbb
push
cmps
hlt
xor
mov
xor
and
sub
sub
push
jmp
loop
(bad)
pop
test
mov
sbb
loope
in
cdq
test
int
mov
mov
clc
add
inc
jns
mov
fnstsw
xchg
dec
(bad)
fistp
jge
xchg
cli
dec
adc
dec
int
loopne
mov
jae
mov
add
cmp
mov
jo
out
mov
add
pusha
outs
loop
sti
sbb
mov
fdiv
push
fmul
sbb
pop
cmp
inc
js
test
mov
xchg
cmp
cmp
jb
xchg
xchg
fwait
clc
fisttp
dec
pusha
mov
dec
mov
ficomp
stc
pop
sub
jg
retf
xor
and
push
outs
bound
xor
sbb
jmp
add
aad
enter
add
push
dec
je
scas
and
cmc
pusha
adc
sub
mov
and
mov
repnz
(bad)
cmp
scas
loop
push
mov
call
mov
xor
cld
jg
or
int
imul
jmp
lea
jl
movs
call
(bad)
mov
or
repnz
aad
inc
aas
sbb
imul
cmc
push
aaa
mov
inc
dec
rcl
stos
out
mov
pop
jbe
push
pop
cli
jb
movs
call
add
arpl
mov
js
mov
(bad)
outs
xchg
cli
pop
jl
mov
jmp
mov
dec
sub
inc
es
xchg
dec
and
mov
pop
sub
or
pop
xor
pop
pop
sbb
retf
pushf
cwde
xor
mov
ret
xchg
add
pop
push
sbb
or
mov
not
ins
das
add
int3
adc
retf
popf
ins
mov
pushf
int
clc
xor
int
test
or
pop
sub
out
fidiv
xchg
scas
js
fs
fbstp
adc
mov
pop
mov
sbb
stc
push
mov
lahf
shr
(bad)
in
scas
inc
xchg
add
mov
(bad)
jle
sub
pop
cmps
das
mov
aam
jnp
call
cmp
mov
mov
(bad)
int
mov
arpl
loopne
inc
(bad)
stc
and
rol
(bad)
fsubr
dec
sbb
test
das
xchg
movs
or
inc
pop
sub
lahf
out
popf
xchg
sub
clc
jp
mov
or
iret
enter
in
ret
and
adc
lods
pop
mov
sbb
pop
bound
sub
cmp
out
mov
lahf
push
ins
fnstcw
sub
push
in
sbb
movs
dec
adc
mov
div
or
fistp
aaa
sti
dec
sbb
shr
dec
stc
sbb
in
sahf
push
sar
(bad)
out
mov
sbb
add
dec
cdq
jmp
cdq
jae
js
idiv
and
(bad)
sti
mov
push
in
prefetch
test
mov
xor
ret
int
xchg
mov
lds
test
(bad)
out
sbb
(bad)
test
mov
push
int
outs
fsub
cwde
adc
ins
test
loopne
dec
xor
sbb
cs
loope
adc
daa
jae
lods
repnz
dec
mov
mov
addr16
xchg
xor
sbb
ins
test
outs
mov
fisttp
sbb
xchg
sbb
pop
dec
lahf
sub
je
int3
ja
(bad)
mov
ins
cmps
jmp
(bad)
not
mov
xchg
in
mov
cld
cld
aas
out
mov
dec
cmp
dec
aas
or
rol
jae
clc
(bad)
clc
fsubp
dec
scas
xlat
fxch
mov
pushf
add
pop
dec
popa
adc
jp
mov
and
aaa
popf
imul
mov
ret
mov
and
cmps
shr
pop
xchg
popa
pop
(bad)
dec
push
adc
fwait
push
mov
movs
loop
scas
mov
lock
push
out
mov
mov
daa
stc
xchg
fmul
mov
xor
push
mov
das
pop
push
dec
fwait
fs
sar
lods
and
mov
bound
and
jge
imul
lds
retf
cmp
daa
dec
test
xchg
out
adc
jmp
out
in
xchg
push
mov
dec
fcmovne
inc
sbb
call
cld
xchg
enter
mov
xor
fcmovbe
adc
les
out
inc
(bad)
popa
sti
ins
sub
shl
fld
and
jge
or
mov
mov
push
or
jnp
jae
sub
aam
dec
rol
retf
daa
xchg
aaa
stos
add
dec
push
icebp
xchg
xor
pop
jp
mov
sub
push
aam
pop
ins
mov
rol
jne
lea
test
inc
xchg
in
mov
and
ins
rol
int3
cld
repnz
and
mov
adc
mov
mov
inc
popa
fmul
out
ss
jmp
pop
pop
sti
add
cli
fs
mov
test
dec
xchg
fs
sbb
cwde
fild
add
and
cli
xor
cmovs
mov
cmp
scas
sbb
mov
mov
inc
ret
mov
out
hlt
outs
jp
data16
stos
out
inc
xchg
rcr
popf
mov
lock
je
mov
popa
pop
jl
sbb
nop
push
inc
scas
cli
mul
push
ins
popa
jmp
dec
rcr
xchg
inc
in
jge
cmps
scas
cld
or
cmp
and
out
repz
cdq
adc
test
or
mov
jo
mov
outs
fs
mov
dec
pop
test
and
or
cmp
mov
test
daa
sub
push
aas
jbe
stos
pop
mov
xlat
xlat
imul
out
adc
jl
jmp
test
sar
not
ror
das
cmps
pop
jns
inc
(bad)
ds
cmp
push
test
daa
lock
int3
add
and
mov
fild
inc
pop
repz
aad
mov
gs
jmp
lock
stos
sti
and
push
sbb
sub
enter
jo
lahf
movs
and
test
call
xchg
jg
rcl
inc
jle
and
mov
jp
(bad)
(bad)
inc
cmps
je
out
mov
add
sub
lock
pop
into
iret
xor
and
sbb
ins
xor
int3
jl
push
in
jmp
push
test
dec
test
retf
dec
addr16
in
ret
sbb
fisttp
test
out
jle
in
imul
and
bound
ret
or
mov
inc
mov
aad
add
sbb
jge
push
test
sbb
inc
iret
sub
jmp
xchg
arpl
popf
dec
fmul
push
gs
pop
and
pop
mov
pop
xor
pusha
mov
mov
mov
fidiv
fnop
ret
test
mov
and
mov
push
xor
(bad)
sbb
mov
(bad)
jbe
jae
fisubr
fld
push
test
jl
cli
das
icebp
fild
ins
test
mov
loope
stos
fistp
ret
jmp
cmp
nop
and
add
aaa
rol
adc
loopne
in
in
push
xor
repnz
and
clc
aad
test
sub
dec
or
xor
sbb
mov
repnz
pop
sti
repnz
mov
fisubr
push
cmp
mov
xchg
int
cdq
jl
in
lds
repnz
(bad)
cdq
ds
adc
xor
dec
sbb
ja
inc
jbe
xchg
pop
mov
adc
xlat
test
xor
mov
xlat
cmps
test
push
add
mov
test
xor
mov
pop
shl
xchg
cmp
pop
pop
and
pop
loope
stc
adc
and
pop
mov
jge
repz
fistp
add
pusha
les
sub
add
mov
xchg
mov
hlt
fidiv
adc
add
jmp
sub
pusha
leave
add
shr
adc
frstor
fdivp
add
call
xchg
adc
xor
sub
mov
ins
mov
(bad)
out
cs
inc
jge
inc
mov
mov
mov
or
jp
ret
ret
outs
neg
retf
mov
sbb
icebp
aad
rcr
add
enter
add
mov
xchg
(bad)
and
mov
mov
sbb
adc
push
fs
jo
mov
add
pop
mov
test
xchg
sbb
jl
adc
mov
stc
cmp
lahf
sbb
in
pop
aas
cmps
add
rol
or
outs
push
dec
push
push
and
sti
pop
inc
sbb
mov
(bad)
shr
jle
mov
sbb
in
xor
aad
dec
dec
xchg
scas
pop
inc
cmp
int3
push
jnp
jno
inc
(bad)
jp
pop
mov
movs
or
(bad)
daa
popa
rcr
add
test
pop
hlt
adc
loopne
adc
xor
cli
ret
mov
loop
pop
call
into
or
mov
xchg
push
push
mov
imul
aas
jb
(bad)
mov
mov
add
mov
xor
adc
sub
and
mov
lods
out
mov
pop
mov
rol
xor
sbb
xchg
js
push
in
adc
add
mov
popf
pop
inc
pop
std
xchg
or
jns
xor
jge
or
xchg
sbb
jmp
mov
lock
mov
mov
out
pusha
neg
loopne
test
std
repz
sbb
lods
mov
or
test
fprem
(bad)
add
std
or
mov
inc
lods
xor
sub
mov
ret
ins
and
ins
stc
stos
pushf
cmps
popf
sbb
inc
mov
push
pop
and
(bad)
das
jmp
pop
push
fsub
into
push
std
jbe
push
sbb
lea
aas
out
leave
dec
push
or
and
and
jecxz
mov
(bad)
xchg
aad
mov
push
dec
fwait
or
or
lea
fisubr
push
out
mov
fcom
pop
test
scas
ja
out
and
stos
(bad)
sbb
stos
cli
jg
or
sar
ret
scas
imul
movs
jnp
inc
or
jecxz
xchg
or
xor
out
arpl
in
push
xchg
mov
and
hlt
push
adc
(bad)
sbb
inc
sbb
stos
(bad)
out
ja
movs
mov
ja
test
icebp
mov
sysret
cmps
inc
pop
mov
sub
les
ja
sub
mov
popa
add
inc
cmp
push
lds
rcl
inc
add
xchg
addr16
cmc
loope
jp
loop
fisttp
jo
jbe
jnp
adc
stos
push
mov
cmp
dec
aad
nop
cmc
or
mov
div
mov
push
mov
jbe
jb
sbb
push
jno
dec
pop
movs
inc
xchg
int
or
inc
xor
fucom
mov
fsubr
sub
sar
push
xor
rcr
xchg
or
movs
jb
ds
push
int3
xchg
sbb
inc
stos
push
jae
and
stos
ror
inc
add
sbb
adc
rcl
xchg
or
dec
aaa
ret
pop
dec
jl
test
aaa
pop
arpl
ds
xor
sub
aaa
fcomp
lds
imul
dec
mov
mov
aad
enter
test
mov
mov
loope
fimul
push
push
mov
(bad)
je
jno
cwde
test
clc
aad
hlt
test
push
jmp
stc
push
test
imul
(bad)
fwait
icebp
add
inc
or
jge
xchg
dec
xchg
or
jp
xchg
mov
cmp
push
shl
mov
lds
loope
(bad)
addr16
mov
pop
movs
fcomp
clc
cli
jecxz
aad
daa
cmp
xor
and
xor
pop
mul
enter
in
xlat
add
mov
jae
sub
(bad)
ss
rcl
fisttp
popa
nop
cmp
and
sbb
add
jle
fs
fprem
lods
cmp
ins
push
fdiv
pop
cwde
cmp
or
out
sub
out
cmp
in
cmp
jmp
xor
xchg
out
mov
call
aam
(bad)
jl
rcl
sub
xchg
push
sbb
imul
stos
and
add
and
test
mov
jl
xchg
adc
xchg
adc
shl
or
jl
(bad)
xchg
mov
xchg
xor
xchg
mov
mov
sbb
inc
in
outs
and
cmp
or
add
pop
inc
dec
jmp
std
dec
push
mov
ds
pop
je
mov
jl
ins
ds
jae
push
cmp
pop
or
popf
pop
pop
jne
sub
shl
xchg
sbb
lds
mov
ret
or
pop
lods
mov
and
mov
mov
inc
in
mov
push
int
fwait
xchg
nop
fidiv
xor
scas
xchg
test
mov
pop
je
rcl
adc
test
lea
mov
cdq
es
sub
dec
mov
xor
ret
inc
adc
sub
xchg
cmp
out
mov
or
jmp
mov
(bad)
in
push
int3
test
push
pop
sahf
jbe
adc
adc
popa
lea
jg
lahf
popf
dec
shr
dec
mov
or
stos
fnstenv
mov
dec
data16
xchg
sti
ja
jo
xchg
mov
(bad)
fdiv
pop
ror
mov
pop
dec
cmp
mov
lock
std
call
imul
outs
enter
aad
jmp
(bad)
sti
mov
push
pop
ret
dec
popa
jo
cwde
sahf
dec
es
mov
pop
xchg
imul
es
xchg
inc
jmp
xchg
xlat
ins
arpl
dec
cwde
jmp
ins
xchg
push
jb
int3
mov
or
cwde
sahf
jecxz
aaa
jg
scas
xchg
xchg
jns
sbb
inc
(bad)
fwait
in
movs
mov
xchg
cmp
mov
and
jmp
fcmovnbe
hlt
out
mov
jmp
and
and
rol
jb
dec
pop
mov
pop
dec
out
or
ins
or
sub
push
sbb
dec
aaa
mov
adc
nop
add
in
or
fst
mov
dec
pop
and
test
rcr
push
ins
jmp
and
sub
loopne
enter
cmp
dec
xchg
push
nop
sub
mov
(bad)
jmp
call
call
or
inc
out
sub
lods
jge
mov
in
in
call
push
out
ficomp
mov
dec
xor
adc
int3
mov
cmps
xchg
fstp
mov
fist
aas
and
xor
or
jnp
xchg
push
sahf
fdivr
addr16
jns
sbb
cmc
in
adc
ret
movs
dec
sub
mov
add
and
(bad)
cmc
aaa
pop
ret
test
jne
shl
test
mov
jne
mov
(bad)
les
push
mov
add
stos
arpl
sbb
xor
jecxz
pop
jmp
xchg
aas
pop
pop
test
xchg
mov
(bad)
pusha
mov
call
(bad)
dec
lods
(bad)
js
cli
dec
add
pusha
adc
inc
ret
ret
int
arpl
(bad)
cdq
in
cmp
imul
adc
fs
and
and
pop
ja
mov
lds
in
daa
adc
into
xchg
inc
dec
cmp
lea
es
pop
ja
fisubr
rol
dec
out
out
mov
ja
jae
and
jmp
loop
and
outs
pop
mov
lea
mov
and
xchg
out
mov
int
mov
enter
test
push
add
loop
retf
sti
mov
pop
in
test
jmp
call
or
push
call
push
ret
lock
hlt
inc
(bad)
cmp
xor
cmc
sahf
cld
mov
mov
idiv
lods
scas
call
push
jg
push
mov
cmc
xchg
pop
cmp
xor
cdq
mov
mov
xchg
adc
retf
add
sbb
in
sbb
aaa
enter
int
std
shl
sub
out
sub
data16
pop
(bad)
xchg
test
outs
jg
bound
xchg
lods
test
xlat
inc
xor
pusha
xor
and
clc
mov
cmp
jecxz
xor
or
pop
xchg
cwde
pop
inc
retf
pop
arpl
or
mov
sbb
imul
in
je
retf
pop
rol
and
arpl
and
popa
sbb
mov
jmp
lea
adc
mov
test
inc
mov
popa
xchg
push
jo
aaa
imul
aam
pop
push
jge
jne
push
pop
fxsave
cmp
cmc
mov
fbstp
mov
sti
(bad)
js
dec
fmul
inc
mov
dec
shl
pop
ret
repz
mov
lahf
and
mov
jb
dec
mov
mov
jne
or
mov
cmp
dec
clc
cli
sahf
lods
mov
mov
mov
sbb
mov
bswap
cwde
out
sbb
(bad)
psrlw
stos
push
xchg
scas
ins
jl
lock
cmp
mov
out
iret
cld
xchg
loopne
lods
not
push
nop
sbb
mov
cmc
jl
sbb
push
ret
movs
out
jle
aaa
adc
in
aad
or
fwait
push
in
add
ins
test
xchg
sti
and
test
pop
(bad)
jne
inc
out
(bad)
mov
int3
aam
xchg
hlt
and
cmp
fild
xor
xor
push
into
stos
mov
xor
adc
test
dec
cmps
js
xchg
mov
inc
shl
movs
aad
daa
jl
scas
inc
out
(bad)
jns
sub
shl
test
pop
push
in
cmps
jne
imul
(bad)
je
sti
popa
cdq
inc
adc
(bad)
call
fucompp
dec
call
inc
jns
lock
mov
out
retf
mov
(bad)
shl
cdq
arpl
xor
ss
aam
push
dec
adc
sbb
daa
retf
mov
mov
sar
test
dec
stos
(bad)
sbb
fnstsw
rcr
mov
call
mov
ds
cmps
xchg
inc
aad
mov
inc
aad
xor
push
lds
mov
in
ret
(bad)
movs
and
mov
ja
(bad)
jg
cdq
mov
adc
pop
add
mov
(bad)
pop
jle
hlt
test
lahf
sbb
pop
in
call
int
je
sub
jge
sub
aaa
inc
ret
adc
sbb
lods
es
sbb
cmps
test
dec
mov
ss
xchg
test
dec
mov
push
sub
out
data16
mov
jp
cmp
jmp
cmp
imul
movs
jp
pusha
xchg
popa
out
jg
test
(bad)
sbb
call
inc
test
inc
daa
nop
movq
or
(bad)
std
jne
cmp
mov
cmp
mov
fwait
jno
test
pusha
xor
dec
mov
mov
dec
adc
or
lock
mov
add
(bad)
sti
mov
(bad)
or
push
cmp
push
js
inc
fstp
arpl
stos
mov
lea
push
xchg
test
mov
pop
je
ins
cs
retf
std
sbb
adc
cdq
das
test
sti
lea
pop
aas
adc
adc
adc
mov
xor
add
aas
mov
sbb
pop
cli
enter
xchg
mov
xchg
cld
jp
mov
int
jae
inc
or
aaa
jle
dec
ret
xchg
jne
mov
dec
xor
pop
jne
(bad)
aam
(bad)
fimul
shr
sahf
jae
hlt
movs
nop
push
mov
lds
int3
xor
sbb
das
jb
retf
mov
std
add
fs
iret
jle
ins
jecxz
pop
and
or
test
sti
add
push
xchg
push
sahf
fist
gs
xchg
stc
in
dec
lods
dec
outs
pop
mov
pop
scas
push
inc
les
xchg
push
fldenv
iret
rcl
pusha
pop
pop
out
(bad)
mov
stos
rcl
mov
lds
adc
ins
xchg
daa
cmps
or
fdiv
dec
xor
leave
mov
xlat
or
(bad)
cmc
imul
xchg
mov
stos
push
rcr
push
dec
aam
in
xchg
(bad)
adc
dec
std
stc
movs
mov
pop
xor
or
and
pusha
scas
push
jno
and
adc
test
sub
call
inc
push
mov
push
(bad)
ins
xor
inc
outs
nop
ficomp
popa
(bad)
cwde
push
retf
(bad)
fistp
cs
ss
test
sub
inc
cwde
(bad)
lock
mov
add
inc
xchg
xor
cmc
dec
mov
push
rcr
std
jmp
rcl
gs
pop
(bad)
arpl
mov
fsub
jp
ins
and
sub
xor
add
in
push
scas
call
(bad)
in
nop
jo
loope
sub
not
jbe
adc
outs
inc
push
movq
outs
pop
add
int3
mov
dec
ret
mov
arpl
or
and
daa
mov
mov
sar
in
jb
iret
inc
sub
aad
add
out
mov
adc
mov
int3
adc
pusha
and
mov
adc
cli
push
cmps
or
idiv
or
jmp
jmp
pop
mov
(bad)
shl
mov
mov
gs
dec
in
pop
push
test
ds
pop
dec
and
shl
cmc
cmps
imul
and
scas
adc
jle
call
mov
mov
cdq
pusha
das
pop
or
iret
cmp
pop
(bad)
push
popf
(bad)
shl
scas
sbb
fimul
pop
adc
cmp
push
mov
adc
(bad)
pop
mov
cmp
pop
mov
add
and
push
(bad)
and
f2xm1
pop
mov
jne
push
pop
rcr
push
xor
aad
pop
out
cdq
movs
pop
cdq
ja
fwait
in
sub
cli
jbe
fiadd
ror
jnp
pop
(bad)
addr16
sub
sbb
lods
push
scas
fcomip
dec
(bad)
dec
hlt
loopne
adc
and
pop
aam
fild
imul
retf
mov
fbstp
imul
add
xchg
xchg
or
add
sbb
jae
add
pop
(bad)
cmps
outs
mov
xchg
xchg
in
div
sbb
mov
xchg
movzx
loopne
inc
scas
fdiv
xor
mov
pop
xchg
into
mov
out
out
loope
addr16
js
ss
les
and
loopne
dec
mov
xchg
sub
(bad)
cwde
xchg
inc
mov
sbb
xor
or
or
ds
ficom
and
pop
pop
aam
dec
cmp
and
pop
sbb
inc
pop
sar
cld
mov
inc
push
mov
fcomp
popa
sar
test
fwait
lods
adc
daa
fstp
into
cs
or
cmc
dec
adc
push
inc
data16
mov
push
icebp
xor
popa
mov
(bad)
stos
les
sub
retf
fs
push
stos
test
rcr
jl
and
sbb
push
movs
add
push
fld
push
push
inc
call
fcom
mov
ss
loope
mov
push
jo
dec
leave
push
les
mov
into
mov
sub
cmp
clc
sbb
mov
sbb
pop
jmp
sub
or
aas
jmp
or
out
mov
push
mov
les
in
or
ins
inc
dec
adc
mov
in
xchg
jb
xchg
ss
ss
sbb
xor
push
pop
lods
push
jmp
int
dec
ret
mov
rcr
jno
repz
dec
daa
cmps
jae
sub
mov
loop
sti
adc
push
dec
ins
xchg
sub
jecxz
sub
lahf
push
lods
out
ret
pushf
xchg
pusha
sahf
dec
dec
push
adc
outs
mov
cmp
fcom
shr
jmp
and
add
(bad)
xchg
in
test
pop
pop
in
and
mov
test
mov
iret
gs
nop
xchg
adc
nop
lods
mov
stos
cld
inc
movs
mov
cmp
lds
outs
dec
dec
mov
adc
out
xchg
and
sbb
adc
and
push
fidiv
int
xchg
out
xor
ror
add
fnstcw
call
rcr
cmp
pop
scas
bound
pop
clc
xchg
aam
mov
pop
sub
dec
daa
aas
rcr
sbb
mov
push
scas
inc
cmp
adc
xchg
rcl
mov
inc
and
addr16
stc
jne
in
mov
inc
adc
pushf
aad
sbb
aas
push
mov
adc
add
mov
imul
lods
pop
(bad)
pop
sub
adc
jg
gs
jne
loope
jae
scas
dec
xchg
add
fwait
loopne
aad
add
out
(bad)
clc
mov
lds
popf
xor
or
jbe
pop
aas
imul
xor
jmp
mov
loope
int
scas
shr
mov
dec
pop
aaa
enter
add
test
sub
cmp
mov
in
rcl
cdq
lahf
add
push
cmc
sar
mov
test
out
dec
dec
sbb
mov
loopne
mov
pop
mov
out
and
cs
shl
xchg
ret
std
dec
fdivr
mov
loope
mov
(bad)
rcr
and
(bad)
clc
call
pop
and
icebp
sbb
pop
sub
xor
adc
aaa
cmp
mov
aaa
movs
sbb
dec
out
xor
dec
mov
fcmovne
push
adc
mov
in
push
add
ins
sti
mov
clc
jle
jnp
cmp
and
jmp
pushf
jno
stos
not
(bad)
dec
xchg
cmc
dec
iret
call
test
int3
pop
dec
push
pop
dec
inc
aaa
imul
aad
xchg
in
fld
std
cld
aaa
fidiv
xchg
inc
ss
(bad)
aam
add
fist
jecxz
lds
inc
shr
and
nop
loope
mov
cmp
inc
stc
and
dec
into
inc
dec
and
imul
add
ret
adc
sub
and
mov
push
cmp
sbb
test
add
ror
mov
mov
hlt
adc
adc
in
jp
sbb
and
sbb
jne
(bad)
imul
pop
loope
aad
adc
lods
and
sub
in
mov
cmp
fwait
mov
popf
sub
not
pop
mov
dec
inc
gs
cmp
jg
sbb
xchg
cld
stc
xchg
in
or
push
sub
mov
cld
push
sar
mov
inc
pusha
pusha
mov
(bad)
leave
repnz
sbb
or
loop
mov
cmp
in
and
cmp
popf
out
mov
inc
inc
xor
aam
dec
inc
leave
ret
xchg
xchg
les
popa
mov
and
mov
hlt
daa
je
pop
out
jmp
leave
test
cs
cmps
sub
popa
and
inc
xchg
pop
pop
addr16
cmps
pop
lds
stc
std
sub
pop
call
mov
dec
sub
mov
(bad)
(bad)
iret
arpl
in
cmp
adc
(bad)
(bad)
mov
bound
aaa
xchg
clc
cdq
call
xchg
sub
enter
clc
lods
mov
or
mov
mov
push
sbb
in
xchg
iret
push
pop
test
loopne
fs
ins
add
mov
sub
and
call
imul
(bad)
push
mov
sbb
xor
ret
test
pop
pop
(bad)
jmp
jge
inc
ret
xchg
pusha
mov
in
ja
push
jnp
shl
mov
lahf
shl
jg
mov
cmps
mov
push
out
cwde
pop
or
std
mov
aaa
iret
fild
enter
mov
push
rcl
call
pop
or
inc
jmp
push
loopne
lock
push
lock
popa
movs
mov
ret
xor
scas
sub
xchg
mov
or
stos
cld
ficom
int3
cli
xor
pop
push
sbb
sbb
jne
stos
inc
pop
cmp
and
push
mov
cmp
call
lods
(bad)
cwde
inc
bnd
mov
add
inc
mov
adc
aaa
paddb
push
add
nop
add
jle
xor
sub
ror
pop
mov
pop
sbb
movs
add
popf
jno
ja
clc
into
shl
retf
add
or
xlat
(bad)
cmp
stos
pop
mov
enter
jmp
es
test
aaa
jb
jae
sbb
ins
mov
cmp
pop
into
xor
sbb
lods
pop
inc
jp
dec
jecxz
fimul
rol
mov
sbb
jae
loope
pop
inc
and
test
xchg
push
sbb
sbb
aam
dec
pop
shl
popa
dec
xor
out
in
sub
imul
cs
pusha
outs
pop
push
xchg
jb
sbb
daa
cmp
in
push
inc
or
add
push
fst
into
fisttp
stos
test
or
aas
sti
push
cld
xchg
or
icebp
data16
popf
mov
inc
jb
call
in
aaa
sub
les
repz
aas
add
cwde
test
lock
ret
in
repz
into
jb
out
inc
push
into
cld
add
bound
sbb
and
mov
gs
sub
push
pushf
jns
push
xchg
nop
sub
sub
(bad)
fs
fisttp
outs
imul
fs
push
retf
push
lods
loop
out
stc
push
outs
mov
jge
cwde
mov
fld
mov
or
sbb
or
scas
aam
pop
dec
retf
bound
push
ja
mov
mov
inc
mov
push
test
test
icebp
sub
mov
dec
xchg
sub
mov
clc
in
inc
jbe
out
(bad)
shl
ret
pop
dec
std
inc
out
and
cwde
shl
(bad)
scas
out
adc
push
cmps
in
dec
fmul
lods
jne
jo
adc
and
mov
push
push
out
(bad)
cmp
lds
jns
mov
lds
retf
dec
push
and
mov
cmp
or
out
fld
jmp
mov
cmc
pop
cmp
pop
mov
inc
repnz
dec
in
enter
loope
out
ret
mov
mov
outs
nop
loope
cdq
aaa
jmp
call
ja
pop
xor
test
call
sahf
mov
and
inc
mov
leave
jo
push
fadd
mov
test
xchg
sbb
sahf
shl
rcl
loopne
pop
and
dec
lahf
nop
shl
push
xor
out
dec
mov
dec
jmp
bound
adc
mov
push
adc
rcr
ins
pusha
jl
(bad)
(bad)
jmp
jne
mov
inc
pop
push
mov
dec
and
pop
push
mov
push
xchg
xor
jb
mul
dec
push
inc
jge
xchg
mov
loopne
stos
in
test
add
adc
retf
jmp
jmp
cmp
fsubr
jmp
into
add
cmp
pusha
clc
push
xchg
inc
xchg
mov
or
dec
pop
dec
jle
lock
mov
jmp
jne
sbb
clc
lock
je
or
xor
mov
mov
das
enter
adc
sti
leave
push
inc
dec
mov
or
lea
mov
int
ins
aaa
out
aad
lods
push
mov
test
xchg
push
pop
outs
mov
and
das
imul
(bad)
movsx
pop
out
and
stos
aas
mov
enter
in
push
je
call
jge
xchg
test
jp
xchg
jbe
imul
add
inc
cmp
sub
sub
dec
rcl
jge
(bad)
and
cmp
fwait
jmp
mov
dec
shr
ja
lds
cmps
ret
fs
xchg
cmp
stos
outs
js
sbb
xchg
minps
gs
nop
inc
mov
bound
or
into
or
xor
xlat
clc
lea
mov
dec
cmp
test
lock
stos
fcmovnb
jecxz
mov
mov
mov
mov
adc
idiv
dec
scas
into
bound
cwde
enter
and
cli
cs
jns
mov
and
mov
mov
imul
xchg
pop
ja
std
std
pop
xchg
mov
repz
push
pop
fbstp
jns
(bad)
xchg
mov
mov
cmp
push
inc
sub
jg
enter
scas
pop
jge
sub
adc
loopne
cwde
add
scas
cmp
daa
cmps
popf
ins
or
ss
test
out
ror
pop
and
jle
xchg
inc
mov
jns
sti
(bad)
lea
outs
pop
sub
call
cmp
jp
pop
and
rcr
imul
xor
sub
push
inc
push
jne
fstp
xchg
ror
jns
push
and
xchg
(bad)
push
mov
dec
or
mov
aaa
out
jmp
mov
adc
jmp
push
repz
out
xor
sub
call
xchg
adc
addr16
out
push
outs
std
mov
xor
frstor
mov
jbe
jecxz
icebp
mov
arpl
(bad)
ficom
pop
dec
sub
jle
mov
scas
mov
iret
repz
mov
aaa
stos
repz
out
or
jo
inc
fsub
mov
inc
or
or
jnp
cwde
cmps
not
sbb
mov
dec
in
and
fs
aaa
scas
in
repz
xchg
(bad)
mov
adc
pop
jne
popf
sub
xlat
(bad)
pusha
sub
mov
mov
or
outs
cmp
out
sub
jecxz
(bad)
sbb
ds
push
mov
and
jae
add
or
dec
shl
push
das
pop
pop
xor
shl
mov
sub
scas
dec
push
sub
add
xchg
mov
outs
and
xor
and
stos
(bad)
call
xchg
nop
mov
jb
in
inc
nop
sar
shl
dec
dec
mov
fnsave
adc
outs
inc
pop
aas
leave
call
dec
imul
and
xchg
repz
jmp
pop
icebp
(bad)
adc
inc
ins
add
daa
hlt
cmp
cmc
push
sub
inc
push
rcl
dec
fcmovnbe
leave
mov
mov
std
dec
pop
sahf
jmp
pop
jmp
xor
push
ror
mov
sub
add
push
sar
sbb
xchg
clc
js
mov
mov
mov
call
mov
leave
or
clc
out
lds
pop
ret
sub
mov
pop
adc
or
fwait
push
ja
fidivr
fadd
sbb
push
fisub
mov
lods
mov
clc
rcl
out
jae
push
in
das
aas
ret
ins
push
mov
out
xchg
mov
and
dec
sbb
mov
(bad)
popa
mov
mov
jne
cmp
arpl
ja
rol
dec
imul
inc
pop
xor
inc
or
dec
sub
enter
inc
and
mov
sbb
(bad)
xor
push
cs
call
adc
sbb
push
popf
mov
cmps
push
push
test
loop
mov
or
or
sti
xor
xchg
movs
mov
inc
ds
idiv
pop
gs
daa
mov
cmp
mov
call
adc
fcom
fdivr
cmp
mov
xlat
rol
jne
inc
popf
and
sahf
fsubp
pusha
dec
in
daa
or
dec
add
call
adc
xsha256
cmps
aad
mov
sbb
out
dec
retf
push
imul
int
mov
dec
rcr
(bad)
sub
ror
je
jmp
pop
xchg
adc
int
inc
add
sub
jmp
cwde
test
(bad)
xchg
xchg
inc
cwde
(bad)
sahf
fidivr
inc
push
xor
pop
outs
scas
dec
pusha
dec
pop
(bad)
je
mov
cdq
in
pop
pop
pop
jnp
pop
mov
push
gs
fprem
push
or
lahf
mov
jnp
and
aam
dec
das
mov
or
pop
ss
dec
in
scas
stos
scas
xchg
imul
or
cli
(bad)
out
adc
ja
sub
int
(bad)
imul
sub
fdiv
repz
jg
sbb
mov
pop
jl
out
scas
mov
and
ins
lods
aaa
or
mov
sub
icebp
in
fwait
sbb
jb
and
popa
or
add
inc
loope
jbe
xchg
loop
pop
std
xor
sub
xchg
shl
in
in
scas
push
(bad)
xchg
jae
sub
push
jnp
loop
mov
jnp
cli
jmp
mov
sub
gs
loopne
inc
sbb
ins
jecxz
mov
xchg
out
and
rcl
adc
jno
xor
inc
sub
xchg
dec
sbb
mov
ret
lods
cmc
add
ficom
idiv
ja
repz
jecxz
call
rcl
out
test
fsub
ja
retf
(bad)
sahf
clc
mov
pop
into
sub
push
outs
movs
push
sbb
(bad)
mov
imul
pop
into
jnp
push
nop
xor
cmps
mov
scas
add
ins
jnp
sub
icebp
pop
pop
pop
(bad)
sahf
fistp
or
clc
push
pop
sub
lods
xchg
and
retf
push
jne
movs
inc
lods
xchg
cdq
pop
inc
mov
cld
push
ficomp
call
adc
sbb
jb
push
cmp
pop
xor
and
scas
pop
mov
xor
shl
ins
movs
iret
sub
pop
or
jbe
mov
inc
(bad)
dec
inc
int3
push
and
jmp
jl
pop
add
es
sbb
test
mov
out
and
nop
sub
xor
jo
packsswb
fcomp
sti
in
ret
cmp
hlt
cmps
(bad)
jl
pcmpgtb
mov
add
idiv
and
push
or
arpl
les
cld
sub
jmp
add
pop
popf
popf
jo
mov
push
div
movs
jp
or
enter
pop
xor
mov
lds
mov
add
dec
fadd
ss
mov
mov
in
push
jns
arpl
and
jmp
sub
fwait
imul
pop
leave
jmp
sti
pop
sub
add
mov
mov
into
fisub
out
sub
xchg
xor
push
les
stos
enter
xor
call
lds
push
(bad)
and
add
cmc
sbb
or
mov
xor
arpl
lock
sub
add
shl
xchg
das
data16
adc
mov
push
test
pop
or
push
ret
push
outs
pop
jmp
arpl
pop
mov
push
add
jp
adc
(bad)
add
in
mov
(bad)
mov
fstp
xchg
std
popf
lock
push
mov
pop
stos
ret
mov
xchg
inc
in
fld
sub
js
ds
dec
in
test
mov
mov
inc
add
(bad)
jge
mov
xchg
cmps
fidiv
imul
sbb
(bad)
aad
xor
dec
test
imul
rcl
sub
test
data16
ins
pop
mov
test
jle
stc
inc
out
aam
pop
arpl
das
jecxz
mov
ja
bound
sbb
cmp
sub
add
add
retf
test
or
jge
xchg
inc
out
or
cdq
imul
fwait
add
lock
iret
jge
xchg
sahf
in
(bad)
mov
scas
stos
dec
inc
add
sub
out
add
pusha
inc
shr
rcr
push
in
or
adc
retf
gs
sub
jmp
pop
out
and
ret
cmps
rol
popa
stc
test
arpl
mov
jno
(bad)
hlt
sbb
mov
fwait
jo
sar
inc
adc
mov
sub
inc
bsr
or
or
test
mov
lods
jne
xor
pop
cmp
mov
mov
and
jge
mov
(bad)
in
pop
and
dec
mov
fs
pop
lock
scas
lea
xchg
les
push
adc
(bad)
popa
and
xor
fisubr
sub
addr16
mov
out
shl
sbb
push
enter
inc
jle
mov
dec
(bad)
lods
mov
test
out
sub
adc
gs
(bad)
call
inc
(bad)
fisttp
loopne
es
int3
jle
stos
dec
loop
adc
retf
imul
test
push
out
pop
jbe
int3
cmps
test
add
sub
xchg
jle
and
pop
mov
stos
ret
cmp
mov
or
call
mov
jne
rol
test
(bad)
push
jo
retf
jae
lds
or
push
inc
mov
or
sub
cmp
(bad)
daa
mov
dec
inc
cli
rol
ds
or
ret
daa
jl
jmp
mov
pop
daa
out
clc
mov
test
fadd
fnstsw
(bad)
xor
lahf
push
lods
jp
aad
lock
scas
mov
ror
arpl
iret
xchg
mov
std
xor
loop
int
lock
cmp
pop
cdq
push
retf
pop
(bad)
(bad)
jae
stos
jns
or
test
mov
loopne
pop
mov
cmp
dec
push
call
in
aaa
mov
adc
ret
cmp
adc
mov
test
xchg
movs
and
in
retf
aad
mov
mov
push
mov
shl
and
pusha
out
jae
mov
fs
out
or
imul
push
or
hlt
sbb
out
scas
xchg
xor
add
xor
call
nop
mov
mov
adc
push
or
xchg
xchg
fdivr
out
xchg
dec
fstp
rcl
mov
inc
jmp
fwait
jle
cmp
je
inc
sahf
aaa
mov
addr16
cld
sahf
push
pop
(bad)
push
dec
adc
ret
retf
and
fisttp
fnstsw
stos
ret
or
mov
dec
call
sbb
inc
pop
jne
dec
out
popf
or
dec
adc
sub
mov
pop
mov
sub
sbb
ror
mov
in
sti
sbb
push
push
loop
lods
push
xchg
sbb
repz
mov
pmulhw
sbb
push
fimul
add
push
stos
pop
stc
mov
pop
dec
inc
mov
mov
adc
dec
and
cmp
mov
(bad)
add
lds
call
inc
mov
je
dec
dec
call
call
pop
cmp
sahf
outs
stc
and
mov
fsub
in
jle
sbb
xor
mov
sahf
bound
or
xchg
mov
pop
lods
mov
lock
xor
xor
xor
xchg
ret
(bad)
lods
push
outs
jne
in
or
sbb
push
fcomp
dec
stos
sbb
sbb
imul
nop
dec
fbld
popf
sbb
jns
inc
call
xor
adc
das
mov
fucomp
cmps
ja
fstp
xchg
(bad)
mov
adc
arpl
gs
jo
out
push
into
jo
outs
sub
in
ret
cwde
sti
push
pop
rol
and
mov
in
popa
clc
pop
dec
dec
and
loopne
stc
inc
test
ret
sar
mov
jge
adc
or
fsubr
fsub
sbb
lahf
out
and
jmp
cmps
jmp
xchg
xlat
stos
adc
in
fldenv
xchg
icebp
sbb
out
fnstcw
in
jnp
lds
pop
mov
movs
mov
lea
movs
mov
sub
jmp
mov
mov
ret
addr16
cmp
or
rcl
fwait
imul
adc
test
pop
dec
mov
ins
add
(bad)
jmp
aad
(bad)
das
cmp
daa
cdq
fmul
lahf
mov
mov
mov
sub
mov
out
fimul
lds
xchg
push
ror
or
retf
jo
retf
mov
imul
sbb
popf
aaa
out
xor
mov
mov
push
leave
push
jg
(bad)
(bad)
in
cs
sub
cmp
mov
mov
mov
jae
xchg
sub
fcmovu
adc
sbb
int
inc
push
mov
fldenv
push
mov
lods
into
(bad)
es
cwde
mov
call
sub
aam
ret
sar
popf
inc
or
cs
add
mov
lock
mov
push
cmc
sub
mov
loop
sar
mov
das
mov
or
dec
inc
pop
xchg
cmp
sub
inc
leave
ja
pop
mov
sub
inc
sbb
jl
test
(bad)
mov
cmp
out
sbb
xchg
add
in
dec
mov
push
adc
push
stos
or
(bad)
ins
mov
mov
jae
jl
dec
sub
fadd
aaa
gs
out
sub
aaa
movs
repnz
lods
addr16
enter
sahf
sahf
ds
mov
test
mov
sahf
pop
mov
xchg
and
icebp
fild
push
jnp
aad
data16
and
xchg
mov
add
xor
out
xchg
jno
push
fstp
data16
cwde
(bad)
add
rol
popf
push
bound
movs
and
inc
(bad)
jae
enter
push
mov
movs
repz
adc
adc
ficom
sub
adc
xor
or
test
mov
mov
adc
jecxz
push
lods
es
out
xor
test
jmp
lahf
popf
cmc
icebp
mov
int
or
jns
arpl
mov
or
pop
or
push
pop
call
xor
cdq
sbb
pop
shl
pop
push
pop
jle
mov
cmc
test
xchg
push
xor
outs
inc
dec
xor
sub
jmp
sbb
cmp
and
xor
(bad)
xor
test
repnz
jnp
mov
and
adc
retf
and
call
xchg
mov
sbb
lahf
call
jbe
ss
jmp
clc
enter
(bad)
push
push
mov
push
mov
mov
cwde
call
push
xor
xor
and
adc
mov
bound
xchg
inc
sahf
mov
jmp
int3
cdq
sbb
ror
mov
xor
aad
xchg
test
mov
mov
stos
mov
cld
sub
jo
aad
sub
mov
jge
jmp
mov
dec
xor
popf
repz
sub
xchg
int
pop
inc
mov
xor
xchg
es
ins
mov
jmp
mov
push
imul
jno
(bad)
mov
dec
sub
das
inc
outs
or
or
dec
test
pop
jae
adc
scas
shl
inc
fnsave
jge
stos
jge
out
push
mov
inc
test
cdq
sub
into
fmul
mov
dec
xor
add
cmp
out
setle
add
mov
xchg
bound
jl
jge
xor
xchg
mov
inc
inc
popf
cmp
jo
ret
aad
cmp
inc
or
jns
adc
mov
mov
and
sbb
mov
mov
or
mov
test
rcr
jae
test
ins
movs
sub
adc
mov
in
call
in
retf
or
dec
jae
sub
iret
(bad)
sub
inc
mov
push
cmp
das
jno
sti
jg
adc
out
push
mov
jl
pop
mov
jle
repnz
repnz
and
mov
dec
adc
mov
in
rcl
btc
(bad)
dec
mov
xor
rol
das
stos
enter
sub
pop
out
or
inc
pop
lahf
cmp
es
nop
xchg
inc
or
ins
add
movs
leave
bnd
jbe
jns
mov
and
in
cmp
ins
rol
cmp
stos
cmp
mov
in
repnz
mov
push
ins
xor
add
mov
mov
ret
add
inc
in
dec
mov
jge
stc
mov
ret
fild
mov
jmp
adc
jno
scas
jmp
dec
mov
fwait
mov
loopne
hlt
retf
jp
cli
ror
dec
shl
cld
jmp
mov
pop
popa
out
jno
les
add
sub
mov
aaa
adc
mov
adc
out
bound
cdq
push
mov
sahf
ja
add
mov
add
inc
add
popa
(bad)
lock
mov
bound
addr16
sti
xlat
inc
sub
je
cs
jbe
push
sbb
mov
icebp
cwde
xor
jae
(bad)
int
and
cwde
mov
sbb
xor
bound
retf
push
enter
or
pop
pusha
iret
pop
add
dec
ret
sbb
cmps
mov
sti
popa
cld
repnz
add
in
push
sbb
pop
add
xor
cmps
call
cmps
jno
aam
push
dec
xchg
jo
add
cli
inc
xchg
(bad)
es
dec
and
lea
push
add
xchg
nop
mov
aam
inc
rol
sbb
and
ds
lds
mov
jg
mov
lods
outs
(bad)
lock
cs
imul
cmp
repnz
cmp
push
adc
jnp
and
mov
(bad)
imul
rcl
push
xchg
xchg
xchg
push
xor
test
stos
mov
pop
cmp
xlat
jb
loopne
or
push
daa
jl
stc
jne
add
inc
mov
jecxz
in
and
ins
pop
xor
mov
dec
stos
nop
shr
fwait
sahf
xor
adc
aad
shr
mov
cmc
sub
shl
jb
fiadd
jnp
fs
fcmovb
push
push
and
rol
sbb
pop
inc
sar
stc
adc
mov
jg
(bad)
inc
inc
adc
daa
call
cld
and
ins
cmps
loope
lahf
add
(bad)
dec
sti
or
push
jmp
jmp
jge
inc
cdq
fnstcw
cmps
call
cs
data16
and
cmp
add
fisub
aaa
shl
movs
rcl
pop
sbb
pop
xchg
lods
inc
loopne
xor
out
hlt
pusha
sub
sbb
ds
cmc
or
sub
rol
repnz
movs
mov
xchg
sub
jle
shr
call
sar
aaa
xor
mov
cmp
(bad)
repnz
xchg
test
outs
(bad)
icebp
adc
jns
push
outs
dec
shl
pop
inc
int3
dec
aad
je
dec
adc
(bad)
xchg
push
add
add
xor
es
jecxz
pop
add
adc
imul
fmul
xor
or
jge
iret
lock
sub
loope
dec
not
xor
cmp
call
mov
push
sub
pop
into
cwde
sahf
xor
retf
mov
cmp
stos
adc
dec
jmp
mov
xchg
stos
inc
lods
int
dec
repz
adc
and
outs
inc
mov
mov
xor
shr
mov
pop
pop
jnp
frstor
(bad)
dec
lock
mov
and
outs
lea
bound
jb
cmp
xchg
repz
pop
retf
xor
pusha
pop
inc
test
dec
ds
mov
aaa
lea
xchg
inc
in
stos
je
adc
pushf
jb
rcl
out
xchg
cld
lds
fs
fidiv
mov
cmp
add
mov
repz
imul
mov
fwait
mov
cmc
pop
add
in
push
sub
xor
add
and
fwait
jge
push
rcl
push
or
mov
idiv
pop
mov
outs
ret
stos
jle
sahf
ds
pop
int3
mov
mov
movs
and
shr
jg
call
jg
xchg
int
ja
nop
mul
jnp
cmp
cmc
icebp
sub
adc
shr
imul
mov
adc
sbb
mov
and
mov
mov
popf
aad
cmc
out
pop
and
push
adc
xchg
out
cmp
adc
push
xor
scas
jae
push
jns
nop
mov
test
sti
retf
xchg
mov
adc
xchg
ror
rol
out
xor
push
cmp
je
jl
add
or
mov
xchg
jns
stos
in
mov
scas
cmps
clc
push
iret
invd
cwde
jl
aad
and
or
cmp
sbb
int3
dec
adc
and
jae
inc
and
mov
mov
pop
xchg
mov
iret
pop
scas
or
pop
dec
push
cli
pop
cld
fiadd
inc
ja
mov
ret
bound
adc
or
mov
jb
sar
mov
cwde
and
je
loopne
push
xor
cmp
ja
fst
mov
dec
pusha
fwait
dec
fadd
sti
adc
push
sub
imul
adc
dec
out
repz
sub
mov
adc
outs
dec
(bad)
mov
add
imul
shl
popa
repz
jno
imul
pusha
(bad)
jmp
imul
mov
in
and
cdq
repnz
and
aas
mov
mov
mov
and
or
add
or
out
sti
arpl
push
ins
not
xor
arpl
popf
xor
jb
mov
ja
lea
pop
xchg
in
lds
(bad)
jle
mov
sub
xchg
out
inc
jp
dec
scas
mov
pop
push
inc
nop
jge
call
cmp
sbb
test
push
fist
xor
pusha
push
enter
and
jp
daa
test
mov
mov
cwde
xchg
dec
popf
jae
ja
sbb
cmp
mov
retf
cmp
mov
mov
push
mov
dec
mov
and
xor
push
bound
rcr
or
popa
add
(bad)
fisub
popa
cmp
nop
xchg
fsub
in
call
and
test
ss
mov
mov
inc
sbb
mov
cmp
mov
not
push
xor
gs
inc
dec
jae
mov
inc
dec
movs
dec
sub
dec
jecxz
(bad)
test
ret
sbb
pop
add
sbb
data16
rol
pop
in
iret
mov
aad
mov
xchg
jecxz
scas
enter
test
cdq
inc
pusha
arpl
imul
adc
push
fist
cmp
push
or
fisttp
ror
mov
(bad)
movs
mov
and
and
mov
adc
shr
es
xlat
jmp
xor
data16
loopne
jno
cmp
jmp
loopne
aas
add
fisttp
push
mov
aad
fadd
stc
jmp
(bad)
mov
inc
cmc
gs
xchg
movs
pop
add
out
nop
dec
out
sbb
or
(bad)
adc
mov
fs
nop
nop
pop
sbb
push
cmp
jp
test
sub
aad
jnp
bound
xor
(bad)
dec
popa
mov
jecxz
jae
inc
cmps
mov
xor
sub
mov
lods
cld
mov
dec
adc
imul
mov
cmp
sbb
and
inc
adc
repz
inc
jb
lods
push
call
push
call
sbb
rcl
mov
imul
test
mov
and
jno
pusha
dec
pushf
gs
jp
(bad)
sbb
xor
sub
sub
jle
inc
inc
ins
je
scas
(bad)
loop
cmp
addr16
out
jge
lods
or
xchg
sub
cmp
jmp
dec
inc
fst
add
jl
mov
mov
inc
adc
in
test
out
push
xchg
jle
cmp
mov
sbb
push
push
or
in
sbb
adc
dec
dec
mov
and
adc
add
push
pusha
addr16
mov
ins
scas
fidiv
dec
xchg
mov
cld
xchg
push
aad
xor
jo
sub
fdiv
dec
sbb
adc
or
call
xor
mov
ret
inc
into
pop
sbb
(bad)
clc
or
jae
scas
dec
jmp
and
sub
cmp
cmc
fdivr
jl
adc
cmps
mov
pop
loope
sbb
sahf
ss
mov
jle
adc
stc
hlt
jg
pop
pop
inc
sbb
loope
sub
mov
fdecstp
repnz
loope
ins
cmp
mov
test
shr
dec
cmp
mov
ret
jge
add
xor
and
pop
cdq
mov
xlat
mov
cmp
scas
push
into
(bad)
mov
mov
sub
cmp
xchg
dec
ds
lock
div
ds
pop
retf
in
sbb
std
or
add
jge
xchg
jl
pop
sub
stc
add
outs
jmp
xchg
es
popf
aam
pushf
aad
aad
sti
imul
fistp
sti
repnz
push
std
stos
inc
hlt
jbe
inc
jmp
jp
mov
adc
out
lea
sbb
dec
mov
mov
cmp
icebp
test
in
mov
cld
mov
sbb
and
sbb
in
mov
mov
fld
and
pop
and
adc
inc
shl
int3
mov
sub
cmc
lock
push
hlt
jg
push
mov
ins
sbb
lea
cmp
js
repz
adc
pop
out
and
shl
jno
ins
lods
pop
and
sub
shrd
xor
push
nop
and
mov
cmps
pop
mov
int
cmps
sbb
std
fdivr
jne
je
loope
xor
hlt
push
pop
pop
(bad)
js
push
mov
fstp
push
inc
xor
jns
ss
retf
imul
inc
pusha
mov
out
in
pop
sbb
add
int
(bad)
repz
outs
test
gs
pop
mov
scas
int3
sub
adc
aad
jecxz
test
jbe
mov
xor
mov
popa
jp
xchg
jb
aas
mov
push
mov
cmps
stc
jle
xchg
and
push
mov
rcl
xchg
not
in
retf
sbb
call
fwait
add
fdiv
push
out
stos
pushf
lods
scas
retf
pop
jae
imul
ds
add
inc
push
(bad)
retf
imul
(bad)
test
pop
cs
scas
pop
mov
add
enter
cwde
dec
ss
sub
mov
sub
lods
mov
mov
test
jae
or
cld
popf
out
aas
add
jne
or
mov
retf
stos
push
jb
inc
push
push
mov
or
xor
jno
les
in
mov
push
fs
sbb
shl
cmovle
xor
or
mov
xchg
out
loop
je
cmp
leave
test
fcomp
aaa
lock
(bad)
mov
fwait
sti
sub
adc
retf
pop
mov
jl
jae
xor
xor
pop
cmp
and
xchg
add
pusha
jo
add
and
lods
xor
push
call
sbb
int3
sub
pop
cmp
popa
inc
les
sub
mov
inc
fnstsw
push
scas
hlt
(bad)
push
scas
mov
aaa
int3
cld
sbb
das
dec
inc
(bad)
fsub
outs
mov
sbb
jae
ja
ss
js
push
sub
stc
popa
jno
cmp
inc
fild
movs
fs
inc
sbb
push
mov
js
imul
push
add
mov
xchg
ret
mov
repnz
push
and
(bad)
(bad)
je
push
xchg
into
dec
popa
outs
cmp
ja
lods
scas
outs
ins
jmp
enter
dec
inc
push
xchg
popf
mov
xchg
add
inc
test
adc
jo
adc
ja
stos
pop
sahf
outs
jbe
ror
inc
mov
movs
ds
mov
mov
inc
movs
movs
test
mov
pop
imul
sbb
sub
jmp
mov
jo
add
repz
jge
not
inc
dec
jns
mov
xchg
xchg
(bad)
test
stos
inc
pop
mov
dec
mov
dec
enter
push
push
retf
gs
mov
sbb
dec
jecxz
loopne
sbb
cmp
out
pop
push
mov
ret
mov
movs
jne
mov
mov
bound
cmovo
out
jmp
out
mov
mov
pop
sub
(bad)
mov
mul
pop
mov
sbb
sbb
or
mov
jne
addr16
stc
arpl
cwde
mov
int3
xor
push
int
dec
xor
movs
sub
jg
cs
test
dec
lock
sbb
aad
std
hlt
sbb
jae
pop
ret
call
cmp
or
shl
fcom
sbb
inc
push
gs
(bad)
sbb
cmp
js
in
sbb
imul
mov
(bad)
inc
lea
jle
lods
ret
mov
add
iret
mov
enter
in
jecxz
cmps
fidiv
loope
cli
add
test
aaa
mov
cmps
scas
mov
pop
int3
and
jp
iret
cdq
pop
lods
cmp
dec
hlt
push
out
icebp
and
ja
fistp
mov
aam
shl
mov
mov
aad
xchg
cli
mov
xor
fbld
and
cli
(bad)
cmc
ret
jae
retf
test
pop
mov
mov
mov
call
dec
fcom
mov
ss
xor
in
push
pop
push
xor
cmp
inc
dec
ss
jge
sbb
dec
sbb
bound
sub
or
cmps
mov
lahf
je
in
movups
mov
xchg
pop
test
add
or
mov
dec
or
add
or
and
stc
pusha
rol
jnp
out
pop
mov
cmp
push
pop
xor
fstp
sbb
inc
ss
xor
ret
add
cmp
in
push
jno
clc
push
mov
sbb
mov
push
imul
push
push
inc
ds
push
call
arpl
or
mov
retf
adc
xor
dec
jno
cmp
ss
in
xchg
jle
push
sbb
jnp
ficom
cld
dec
dec
or
and
mov
pushf
xchg
add
jns
jle
lods
ins
lods
adc
(bad)
inc
aad
bound
cld
mov
jmp
das
and
mov
sub
jp
(bad)
mov
enter
popa
mov
cmp
mov
cmc
shl
neg
dec
(bad)
sub
jne
jecxz
push
call
cmp
leave
push
and
pop
in
int
mov
in
test
(bad)
cdq
scas
xchg
es
xchg
lock
dec
mov
out
lods
clc
mov
into
push
adc
xchg
xor
jnp
mov
test
frstor
push
cmp
jp
mov
pop
jnp
sbb
lea
test
cwde
cdq
rcr
iret
mov
inc
fdivr
push
(bad)
and
sbb
cmps
pop
(bad)
out
(bad)
loop
mov
xor
jb
mov
pop
inc
paddq
or
in
in
fs
dec
mov
sbb
lahf
pop
mov
sub
push
aam
popa
mov
inc
jne
cmc
loope
fdivr
cmc
sub
cmp
ins
xchg
add
add
movs
test
cmp
xchg
cwde
cwde
inc
and
dec
and
push
mov
nop
out
cmp
add
call
or
(bad)
(bad)
lock
jmp
jecxz
ret
mov
ret
dec
enter
mov
arpl
push
adc
loopne
push
push
jb
outs
in
sbb
movs
scas
cmp
(bad)
std
mov
pop
dec
mov
mov
es
pop
add
pop
inc
inc
adc
aaa
pop
adc
pusha
or
shl
ins
sbb
scas
cmps
es
xor
arpl
push
imul
inc
or
push
ror
fwait
enter
jne
mov
dec
cmps
sbb
inc
mov
jb
mov
sahf
mov
adc
and
push
test
retf
ja
mov
sti
xor
jnp
popf
adc
dec
cli
push
rcl
xlat
repnz
jecxz
cs
sar
jbe
add
or
adc
pop
xor
add
test
mov
and
pusha
arpl
(bad)
nop
add
mov
leave
adc
ss
out
add
mov
(bad)
xchg
adc
xchg
scas
mov
mov
mov
call
(bad)
leave
dec
gs
inc
xchg
mov
and
fist
sub
or
(bad)
repnz
into
(bad)
lds
push
jmp
dec
jge
stc
dec
pop
test
mov
cmp
in
jle
push
mov
cmp
fnstsw
fs
mov
add
sbb
stos
call
adc
imul
bound
out
pop
(bad)
jl
jb
xor
sahf
fnstenv
movs
and
mov
xchg
gs
and
sbb
jmp
push
inc
ret
inc
pop
cmp
ss
mov
jmp
(bad)
push
cld
aam
fs
sbb
or
mov
paddd
dec
push
mov
fdivr
pop
push
aaa
cli
add
pushf
cld
dec
jne
xor
sub
mov
and
lods
jo
iret
cmps
add
push
jecxz
(bad)
cld
pop
mov
pop
mov
cmps
inc
pop
cmps
bound
fld
lds
shr
sbb
jns
pop
shl
jae
scas
fs
xor
loop
sub
sbb
jmp
mov
mov
push
fstp
sahf
call
mov
dec
dec
fmul
int3
adc
das
rep
adc
imul
and
stos
push
retf
stos
adc
jnp
scas
sbb
cmp
sbb
cmp
inc
and
ret
aaa
xor
xlat
jo
outs
sub
add
pop
and
stc
mov
test
jle
cld
push
je
fisub
and
pop
in
inc
cmps
mov
sbb
push
cwde
lock
mov
push
ret
fidivr
push
xchg
sti
dec
mov
mov
and
mov
inc
jge
xchg
pop
or
mov
sbb
arpl
or
or
mov
pushf
in
mov
fsub
xchg
sbb
leave
or
mov
lock
jns
test
jae
and
daa
dec
cmp
add
cvtpi2ps
push
dec
xchg
fist
adc
aad
adc
repz
jnp
xchg
in
sbb
mov
fst
inc
sub
(bad)
out
in
sbb
clc
or
sti
jecxz
fsub
retf
cli
add
fadd
imul
pop
dec
bound
xchg
int3
ror
retf
cmp
adc
push
xor
icebp
stc
(bad)
xchg
icebp
ret
sbb
cmp
ret
jb
shl
or
enter
clc
xor
mov
mov
xchg
and
lods
retf
sbb
xchg
xchg
pop
and
popa
push
or
push
(bad)
mov
int
aam
and
addr16
in
in
lods
pop
movs
or
int
in
enter
repnz
call
es
repnz
repnz
cmp
fld
cmp
ficom
sbb
jne
sub
retf
(bad)
fwait
(bad)
aad
sub
outs
and
adc
mov
pop
xchg
push
xor
sbb
add
popa
and
mov
jo
test
aad
clc
(bad)
push
lods
jbe
push
cmc
sbb
sub
jle
repz
adc
(bad)
rcl
add
xchg
adc
dec
ss
(bad)
mov
pop
inc
test
pop
xor
movs
adc
mov
sti
push
loope
inc
jno
push
retf
nop
loope
push
adc
loope
mov
xchg
push
ret
mov
call
sbb
jle
dec
mov
mov
jns
push
into
clc
inc
in
pushf
mov
xor
retf
fstp
daa
shl
movs
test
pop
fs
ret
cli
pop
jbe
movs
stos
(bad)
and
(bad)
stc
fs
xor
jg
or
cmp
js
push
data16
pop
mov
xchg
sar
shr
cmp
mov
stc
pop
push
repz
(bad)
fcmovnu
sahf
(bad)
dec
jecxz
shl
imul
jns
mov
out
jecxz
test
dec
jg
mov
jecxz
pop
jge
sar
aaa
(bad)
out
push
scas
movs
adc
cmp
mov
cmp
dec
sub
xchg
test
out
pop
mov
repz
int
ja
ja
sahf
pop
push
iret
jg
addr16
and
jae
sub
pop
mov
cmp
arpl
dec
inc
cmp
ins
stc
mov
enter
mov
rol
mov
dec
mov
stos
nop
(bad)
(bad)
xchg
adc
(bad)
xor
dec
pop
loope
mov
or
xchg
mov
push
inc
into
jne
xchg
pop
add
mov
iret
add
pop
ret
or
inc
mov
or
xchg
repz
xor
inc
inc
push
mov
pop
out
mov
cmp
jge
xchg
repz
adc
mov
lds
call
aas
fimul
outs
dec
sar
movs
hlt
sbb
adc
dec
in
(bad)
cwde
or
and
jecxz
imul
iret
in
iret
ret
inc
mov
fld
jo
mov
xchg
xchg
sub
adc
je
xor
rcl
cmp
popfw
out
mov
inc
pop
in
or
dec
or
icebp
rol
add
mov
and
inc
mov
sub
mov
push
mov
mov
je
push
push
movs
cmp
mov
push
popa
pusha
scas
icebp
pushf
jbe
mov
lahf
shl
std
mov
clc
mov
jo
xor
lock
lods
pop
jmp
sub
int
fisttp
test
cli
sti
mov
mov
cmps
outs
push
jo
pop
or
jmp
xchg
gs
push
xchg
ss
bound
push
retf
push
add
pop
mov
call
std
cwde
jno
adc
shl
ja
push
stos
cli
jmp
pop
dec
repz
out
rol
add
xor
sub
in
sub
cmc
lea
and
xor
lahf
sub
pop
test
cwde
std
and
cmps
popa
jp
mov
cs
lahf
adc
lea
dec
shl
fs
retf
jge
cwde
mov
mov
mov
xchg
sub
(bad)
cdq
or
cwde
ficomp
adc
daa
mov
call
dec
jg
xchg
cmp
push
inc
test
mov
js
ss
iret
cwde
mov
or
inc
push
add
div
mov
int3
sub
push
rcl
push
test
cwde
dec
jne
je
(bad)
call
inc
shr
mov
adc
jne
sub
(bad)
movs
into
ret
pop
adc
pop
in
inc
movs
scas
pop
pop
repnz
clc
inc
sbb
call
mov
or
cld
pusha
aad
jp
and
and
or
mov
xor
push
adc
es
or
mov
aad
hlt
sub
cmp
pusha
adc
jno
ins
mov
stos
mov
(bad)
in
cmp
pop
sbb
inc
loopne
test
outs
mov
dec
xchg
dec
jns
das
cmp
fidivr
addr16
ins
jge
inc
arpl
and
push
mov
pop
loopne
in
ds
std
jp
fsub
or
fwait
out
cs
xchg
fidivr
mov
cmp
shr
sbb
inc
jle
in
or
cli
mov
mov
cmc
lock
add
xchg
push
pop
pusha
icebp
mov
push
adc
mov
xchg
ret
repnz
jb
pop
xor
out
retf
jge
add
gs
stos
inc
add
loopne
dec
mov
xor
popf
jno
jl
and
cmc
stos
sti
inc
xchg
push
push
stc
or
pop
aad
push
ds
jg
fdivr
sbb
fidivr
aaa
aaa
pop
dec
add
add
cdq
fwait
jp
xor
lea
adc
mov
adc
call
outs
add
xchg
add
stos
xor
pop
mov
push
cli
scas
lea
mov
repnz
and
xor
into
nop
sahf
ss
jmp
adc
xor
fnstsw
and
cld
xchg
jmp
or
loop
arpl
sbb
stc
cmp
push
inc
std
in
shr
pop
ror
sub
ja
(bad)
mov
loopne
fsubp
pop
inc
scas
fwait
mov
or
xor
cmp
shl
(bad)
and
jb
xor
call
dec
leave
xchg
sub
pop
test
add
mov
sti
hlt
cmp
movs
stos
cmp
xchg
adc
sbb
add
sub
into
stc
pop
(bad)
or
jecxz
push
cmp
lods
outs
sbb
pop
ds
test
popa
in
fucom
aaa
(bad)
icebp
mov
adc
pop
stos
and
imul
push
mov
and
mov
in
out
lods
rcl
lods
pusha
xor
or
arpl
dec
(bad)
hlt
repz
call
rcl
test
adc
sbb
mov
lods
mov
pop
mov
int
mov
into
repz
mov
fldcw
mov
jo
sbb
jo
jmp
ss
mov
xchg
mov
stc
ja
test
dec
or
xor
jp
xchg
mov
mov
cmc
bound
mov
or
dec
cmc
xchg
jle
fimul
cs
mov
add
fld
arpl
push
jmp
out
push
in
push
cmp
and
add
adc
repnz
add
inc
enter
jmp
pop
je
jae
hlt
jge
mov
sbb
xchg
pop
sbb
add
xor
inc
(bad)
mov
shl
shl
mov
nop
jecxz
repnz
cwde
adc
add
sub
push
cmp
fimul
jecxz
scas
sub
add
xchg
xlat
daa
stos
popa
sbb
pushf
data16
cmp
sub
jno
jle
outs
mov
stos
cmp
jg
dec
dec
pop
test
pop
int
aam
loop
mov
sub
cld
test
dec
nop
mov
pop
sbb
dec
stc
sbb
adc
out
pop
in
ins
push
movs
pop
xor
test
sbb
inc
and
shr
mov
push
mov
xchg
push
lock
xlat
cdq
adc
fcom
ficom
cdq
lea
xor
mov
jno
rcl
icebp
inc
rcl
loopne
mov
xchg
inc
or
and
jg
cs
out
(bad)
mov
(bad)
mov
xor
xor
mov
jns
lds
(bad)
mov
ja
(bad)
xchg
push
mov
int
int3
jmp
rcr
mul
push
jo
cmp
sar
inc
mov
fstp
sbb
imul
sub
mov
cmp
icebp
push
aam
sbb
or
outs
mov
push
(bad)
mov
imul
pop
loop
je
and
jo
jb
scas
xchg
ret
pop
cdq
jle
mov
jp
inc
jecxz
shr
mov
push
mov
leave
xlat
cmps
movs
jbe
mov
ins
aas
mov
xor
ja
mov
add
pop
jbe
shr
pop
mov
mov
jge
das
push
ins
push
mov
push
sub
ror
push
ss
pop
jo
retf
add
add
mov
ret
jne
cdq
js
mov
xlat
xor
(bad)
dec
ror
mov
jbe
push
pop
test
ret
inc
ja
pop
jp
sahf
xor
dec
js
adc
jmp
cmp
fisub
adc
or
mov
pushf
(bad)
cmp
pop
mov
cmp
adc
nop
sahf
xor
or
call
test
lds
pusha
pop
add
cli
pop
hlt
push
lods
xor
push
ins
dec
stos
loopne
lods
push
xchg
rcl
dec
push
xor
mov
ror
enter
mov
call
jge
icebp
pop
push
icebp
fsubr
mov
sub
shl
xchg
sub
mov
sub
shl
test
dec
sub
inc
add
mov
(bad)
ds
cmp
lock
rcr
jbe
(bad)
sar
data16
outs
inc
out
sub
xor
push
pop
push
cld
fisubr
mov
mov
sbb
ds
jmp
outs
scas
mov
icebp
int3
cli
jnp
mov
(bad)
mov
fbld
repnz
hlt
sub
mov
shl
outs
gs
test
fnstcw
fistp
inc
cs
xor
sub
(bad)
jmp
jns
cs
xor
push
mov
pop
sub
out
leave
test
out
(bad)
inc
lock
pop
mov
mov
repz
call
sub
test
dec
in
adc
push
lods
test
mov
mov
inc
pop
xchg
inc
adc
jmp
cmps
retf
pop
xchg
bound
sbb
mov
idiv
or
mov
adc
lods
and
inc
inc
out
pop
pusha
mov
into
sbb
xor
mov
stos
pop
xlat
inc
in
adc
(bad)
or
mov
adc
pop
adc
dec
cmp
retf
ins
or
cmp
adc
data16
outs
call
pusha
das
adc
pop
fdivr
cld
or
inc
mov
sub
pop
add
dec
lahf
cs
ret
test
movs
into
push
inc
sub
in
push
mov
fs
xchg
scas
inc
inc
xchg
dec
pusha
xor
arpl
dec
xchg
adc
arpl
stos
and
xchg
adc
pop
jo
sbb
je
pop
xchg
push
data16
scas
pop
bnd
pushf
lea
cmovno
stos
jno
enter
mov
and
pusha
add
fidiv
out
call
(bad)
and
in
ja
movs
xchg
fcmovbe
xor
leave
call
popa
fstp
or
sbb
jns
aad
sub
outs
add
call
nop
cmp
retf
test
(bad)
mov
mov
xchg
int3
or
sub
add
in
dec
pop
adc
and
stc
aam
dec
bound
pop
mov
neg
and
add
(bad)
fisubr
loopne
push
cwde
push
xchg
fldenv
mov
in
push
into
adc
jns
fldl2t
mov
inc
mov
mov
inc
or
loopne
in
and
xchg
ret
push
push
shl
into
pop
(bad)
sti
inc
inc
arpl
movs
ds
and
mov
daa
imul
mov
popa
push
ss
xchg
dec
call
not
or
xor
jbe
add
mov
mov
add
test
or
in
jecxz
mov
cmp
sti
stos
ins
js
push
int
imul
(bad)
jmp
adc
jg
inc
and
and
ins
repnz
in
mov
rcl
sub
repz
mov
sar
jns
fistp
push
pop
test
mov
fcmovne
add
ficomp
inc
movs
movs
cmp
dec
mov
mov
xlat
cld
pop
xchg
mov
jne
mov
cli
fcom
sub
or
mov
ds
sbb
xchg
xchg
inc
outs
jg
jo
pusha
daa
jbe
mov
pop
test
mov
out
xlat
push
inc
push
inc
mov
imul
and
or
jo
test
out
cli
ins
xor
fild
push
sar
ins
mov
popf
sbb
mov
pop
ror
xor
cmps
sub
adc
sbb
jae
sahf
jp
xchg
mov
or
into
and
outs
push
xchg
pop
nop
pusha
mov
(bad)
xor
call
push
test
addr16
mov
push
inc
(bad)
ins
ret
sbb
push
sub
pusha
shl
xchg
sahf
ins
xchg
xor
lahf
adc
and
push
jle
int3
jns
int
sbb
sbb
out
sbb
cmp
cmp
mov
mov
cmp
int
mov
add
fbstp
mov
fstp
mov
xlat
xor
sbb
test
imul
neg
sbb
scas
mov
(bad)
bound
mov
jl
lock
push
mov
xchg
daa
out
movs
in
and
(bad)
xor
daa
ss
add
enter
add
push
das
sbb
mov
inc
pop
outs
lods
into
xor
call
xlat
push
popa
push
mov
add
cmp
add
xor
lods
fld
pop
ja
les
outs
cs
adc
dec
fdivr
xor
push
lods
(bad)
(bad)
out
(bad)
mov
xor
pushf
mov
(bad)
(bad)
lds
cld
pop
sub
dec
xchg
jae
icebp
test
jae
sub
xor
call
sbb
sbb
push
xor
adc
popa
cmc
jnp
pop
add
sub
repnz
lea
sbb
aam
mov
add
mov
ret
xor
lock
mov
fisttp
inc
adc
and
dec
shr
fsub
sub
mov
rcl
inc
push
pop
dec
jns
mov
add
loop
dec
mov
(bad)
xor
and
(bad)
adc
inc
and
imul
rcl
jge
sbb
mov
jmp
call
pop
into
(bad)
out
pop
shr
pop
fcomi
or
popa
or
adc
(bad)
xor
sti
pop
xchg
adc
out
out
out
cwde
cmp
test
scas
scas
fldcw
add
add
es
jne
pop
sbb
mov
fs
pop
cmp
addr16
sti
(bad)
ret
mov
mov
sbb
dec
mov
push
and
gs
fnsave
mov
push
jmp
dec
dec
and
jmp
aaa
xchg
push
not
cli
mov
push
ror
push
mov
fidivr
enter
pop
movs
and
je
mov
clc
or
js
adc
adc
fmul
lods
cmp
pop
pop
or
in
or
add
cmps
out
push
xor
repz
mov
in
add
rol
mov
arpl
xchg
loop
ret
imul
popa
test
loop
icebp
cmp
bound
sbb
inc
call
lock
sub
imul
nop
fmul
sub
es
sar
fisub
xlat
aam
retf
popf
scas
ins
cmp
xor
mov
pusha
add
fnstenv
stos
mov
sbb
cmp
nop
test
cld
aam
shr
mov
out
leave
jp
cmp
retf
iret
paddsw
popa
bound
movs
xchg
retf
(bad)
in
push
addr16
into
jb
or
push
jmp
aas
ret
push
jbe
push
aam
ja
sub
repz
out
shl
aad
daa
xor
mov
jo
dec
lods
mov
push
or
adc
ds
xchg
ror
shl
jne
rcl
je
clc
sahf
imul
rcr
in
sbb
cmp
out
nop
push
jle
in
or
cs
dec
fild
in
mov
fldcw
out
mov
dec
dec
or
xor
mov
pop
rcr
out
test
or
imul
push
addr16
int
adc
pop
cwde
jle
push
fsubrp
popf
mov
xor
mov
mov
xchg
push
sub
pushf
xchg
leave
and
and
push
int3
cld
xor
out
mov
rol
xor
jns
fidiv
push
(bad)
jbe
inc
rol
pop
enter
jb
and
fidiv
mov
xor
jmp
hlt
fild
and
hlt
(bad)
in
sahf
xchg
cmp
add
(bad)
mov
fld
mov
cmp
cwde
cmps
dec
push
call
xchg
stc
mov
rol
popa
adc
xor
mov
mov
push
jle
dec
pop
xor
nop
sti
jl
and
(bad)
pop
rcr
cmp
add
ret
retf
cmp
xchg
stos
iret
pop
movs
xlat
sbb
xor
mov
mov
popa
or
call
push
fimul
lea
aad
out
push
inc
loope
call
push
push
xchg
int3
int
mov
sbb
mov
inc
repz
inc
pusha
call
cli
add
xchg
in
jle
or
call
inc
ret
mov
jecxz
clc
stos
jae
xor
xor
inc
adc
loopne
or
or
add
scas
push
push
push
push
mov
(bad)
(bad)
jno
pop
pop
or
sub
sti
popf
pop
inc
mov
jmp
jmp
call
jb
ins
das
lods
bound
jae
jns
mov
out
jmp
jge
adc
sahf
add
pop
sub
jg
xchg
sbb
sbb
inc
(bad)
mov
add
fcom
jge
dec
push
mov
mov
push
inc
call
sti
xor
xchg
movs
fsub
push
(bad)
jns
dec
jns
pop
jecxz
push
or
sbb
push
loope
push
add
push
jo
sub
push
xor
lods
sub
sbb
push
adc
cmps
(bad)
jg
or
cmp
jecxz
jge
mov
cli
cmp
paddq
out
enter
pop
jp
punpckhbw
or
push
xchg
ja
xor
mov
cmp
retf
adc
je
jb
cmp
out
sbb
jnp
and
ins
int3
cld
std
clc
pusha
(bad)
cdq
iret
mov
sub
imul
jmp
or
(bad)
ins
not
sbb
pop
mov
outs
std
jae
and
and
mov
ret
mov
mov
xor
movs
in
data16
cmp
add
inc
test
js
enter
nop
aad
lahf
or
mov
pop
mov
pop
inc
fimul
leave
push
push
xchg
adc
sub
cs
mov
xor
icebp
cdq
dec
bound
in
or
(bad)
loop
push
and
pop
hlt
js
ins
retf
cmp
jmp
adc
dec
dec
stc
into
fwait
sub
or
clc
fild
push
inc
pop
ins
shl
fsubr
mov
push
cmp
jl
xor
push
test
ds
lahf
push
and
and
aad
mov
xor
add
loopne
cld
pop
jne
(bad)
cmp
adc
inc
lea
sub
shl
mov
aad
shl
punpckhwd
push
or
retf
lahf
or
ret
ds
popa
push
inc
test
mov
cmps
das
xchg
push
push
(bad)
ins
sti
or
push
stc
push
adc
cmp
sbb
jns
mov
jmp
sar
xchg
jl
rcl
push
gs
mov
mov
dec
jne
cwde
mov
mov
sub
fld
pop
enter
xor
sbb
call
(bad)
shl
mov
push
xchg
push
sti
ror
jg
sbb
call
fwait
push
sbb
mov
inc
sti
jmp
add
push
jae
push
sub
jbe
mov
les
inc
leave
mov
adc
adc
xchg
push
add
add
fwait
ja
cmp
jp
mov
add
push
leave
popa
aad
adc
mov
and
add
mov
inc
push
sbb
xor
cdq
fstp
mov
jge
(bad)
jns
mov
ud2
xchg
pop
or
aad
lods
stc
mov
sti
pushf
sub
xchg
shl
les
call
jmp
xor
adc
pop
jl
jbe
pop
pop
jb
pop
push
fisub
dec
sar
push
lds
inc
call
(bad)
dec
ror
and
mov
adc
pop
test
mov
and
or
inc
test
fs
and
dec
mov
in
cmps
sbb
sbb
jge
mov
aas
jp
mov
aas
stos
sbb
sub
retf
stc
mov
or
adc
ret
in
sub
or
in
mov
aaa
mov
cmp
xchg
pop
cmps
lock
dec
stc
jns
xor
pop
mov
mov
retf
mov
stos
int
outs
adc
dec
mov
lods
sti
aaa
pop
mov
jg
mov
jo
adc
repz
dec
pop
inc
mov
adc
inc
dec
dec
jb
(bad)
sub
das
xor
lahf
adc
outs
mov
icebp
mov
pop
cdq
stos
fidiv
adc
push
adc
xor
push
jmp
xor
xor
cmps
add
iret
fwait
adc
lock
xadd
pop
dec
push
pop
cmc
push
xchg
sub
mov
lods
xchg
scas
test
lds
dec
gs
out
addr16
xor
in
pusha
(bad)
push
mov
inc
adc
pop
movs
dec
imul
lds
shl
movs
cmps
add
movs
mov
mov
adc
sbb
cmps
ror
pop
push
test
test
pushf
mov
adc
imul
mov
add
push
jp
cld
sbb
cmc
inc
lods
cmps
xchg
mov
xchg
in
aas
xchg
(bad)
shl
imul
jecxz
jle
jo
dec
mov
push
cmp
and
xor
sahf
imul
lock
lock
add
test
cld
mov
mov
jmp
dec
mov
int
dec
jo
or
(bad)
mov
(bad)
ror
jo
push
ss
aaa
pop
hlt
adc
jmp
aad
inc
adc
and
mov
int
fs
sub
test
scas
pop
sub
loope
int3
xlat
addr16
or
into
(bad)
fisttp
mov
inc
lds
adc
jmp
pop
jne
mov
cld
and
push
push
mov
(bad)
push
rcr
and
fdiv
jp
mov
mov
mov
push
xor
cs
push
sub
ins
loopne
xchg
lahf
mov
add
sets
nop
neg
ss
lock
inc
js
xor
icebp
fwait
popa
add
outs
xchg
cld
(bad)
jb
xchg
mov
pop
sub
inc
dec
scas
inc
fldcw
dec
adc
call
out
ret
lods
cmps
mov
dec
sbb
xor
repz
cmps
aas
movs
adc
cwde
cld
adc
pop
call
loope
jnp
and
mov
imul
lds
lods
mov
push
or
jo
jne
retf
sbb
push
jmp
lahf
test
adc
xor
test
cmp
mov
or
cmc
push
out
rcr
(bad)
stc
test
sbb
add
and
aas
aas
and
call
cmps
mov
jle
add
pop
adc
repnz
ins
and
mov
ret
pop
pop
mov
cs
and
mov
test
call
(bad)
fwait
scas
into
outs
fcmovb
not
sar
xchg
cmps
push
inc
xchg
adc
cli
shl
push
jbe
xchg
xchg
mov
jmp
ins
mov
nop
pusha
jne
mov
nop
ror
mul
jb
les
stos
sar
inc
scas
xchg
out
push
pop
inc
jp
push
test
ficom
dec
leave
and
xchg
addr16
lahf
push
lahf
xchg
jg
cmp
iret
mov
hlt
or
lahf
jae
imul
movs
dec
fiadd
xchg
(bad)
jmp
mov
push
and
ins
into
push
or
inc
popf
pop
xchg
fiadd
aas
int
xor
pushf
int
(bad)
cli
pop
mov
xor
sub
or
pop
pop
add
imul
fild
mov
mov
jg
cmp
adc
or
(bad)
cmc
sbb
movs
popa
nop
nop
dec
inc
push
sub
repnz
and
ret
retf
add
add
push
inc
add
sub
jno
stos
cmp
xchg
jecxz
ret
mov
push
xchg
sbb
pusha
mov
mov
xchg
ret
arpl
enter
sub
lahf
inc
pop
cli
inc
xchg
inc
mov
stos
mov
jge
hlt
test
sbb
(bad)
call
jbe
out
popf
scas
aam
repz
push
div
imul
push
lea
mov
(bad)
cdq
movs
jmp
adc
gs
xchg
stos
cdq
or
lock
adc
and
ja
shl
fnstcw
cmp
mov
test
push
sahf
pop
scas
jns
arpl
jg
arpl
lods
mov
mov
mov
das
sbb
jg
push
and
stos
bound
add
mov
imul
adc
jnp
sbb
mov
jle
jne
test
fld
add
out
mov
test
call
es
popa
or
es
sbb
mov
aas
stos
fisubr
dec
cmps
push
(bad)
aad
add
pop
add
nop
adc
(bad)
(bad)
sub
inc
inc
clc
adc
pusha
js
push
adc
cmp
test
mov
imul
dec
jge
jmp
(bad)
mov
mov
ret
dec
or
mov
inc
inc
aaa
xor
mov
xor
arpl
sbb
ror
xchg
lea
push
fisubr
push
and
xchg
pop
cmp
xchg
fidivr
cwde
dec
xor
neg
lea
pand
pop
mov
shr
cmp
lahf
das
out
and
mov
mov
rcr
test
out
lods
xor
sti
and
jae
mov
xchg
outs
lods
mov
jle
outs
mov
push
jmp
arpl
cmp
sbb
dec
cvtps2pd
pop
mov
ret
xchg
mov
ss
dec
mov
retf
pop
sahf
aam
call
rcr
fnstcw
dec
mov
jnp
stos
mov
inc
push
adc
jge
repz
adc
mov
dec
std
jmp
jg
retf
imul
jmp
or
in
pop
push
pop
in
pop
ss
xchg
(bad)
and
out
mov
xlat
push
inc
(bad)
xchg
sub
lea
enter
pop
mov
jp
inc
data16
out
sub
xor
adc
cmp
xor
mov
lds
cmp
add
jne
hlt
and
push
push
(bad)
ins
pop
pop
xor
icebp
es
push
test
fld
cli
in
pop
mov
dec
je
jg
add
stos
mov
jl
adc
pushf
sar
std
jle
xor
fistp
add
shl
icebp
in
aaa
jnp
jmp
retf
stos
iret
ret
and
fdecstp
xchg
out
sub
or
dec
cmp
xchg
test
lods
stc
or
enter
in
add
inc
rcr
push
inc
inc
scas
jb
adc
popa
pop
fisub
dec
dec
test
movs
ficom
inc
mov
(bad)
or
mov
mov
xor
clc
inc
cmp
jae
inc
xchg
adc
clc
jns
pop
sahf
stos
or
ret
pop
mov
lods
jmp
enter
jle
dec
inc
push
xor
push
fstp
adc
push
daa
mov
mul
or
das
mov
loop
lock
jle
sub
and
mov
imul
into
jp
popf
aaa
out
or
add
in
aad
sub
or
dec
popf
dec
or
pop
adc
xchg
and
pop
cli
fwait
out
fiadd
dec
fnstenv
cmp
or
aaa
mov
xor
and
popa
movs
push
fsubr
dec
mov
push
or
scas
cmps
or
jp
fistp
mov
imul
ret
sar
add
and
test
pop
sub
inc
setns
mov
jl
enter
cmps
jnp
sub
inc
cmps
mov
lods
dec
fdivr
out
add
je
cwde
xchg
cmps
sbb
lods
js
scas
aas
or
ret
jno
js
mov
adc
push
push
and
sub
xor
ins
repnz
cmp
loope
js
outs
push
in
add
push
nop
and
inc
(bad)
in
in
jl
stos
ror
pop
scas
lds
cs
pop
aad
std
popf
iret
jbe
jno
imul
mov
cmp
retf
enterw
shl
imul
or
sbb
aas
cmp
shr
jne
lds
lock
sahf
test
leave
aad
bnd
jne
fwait
dec
xor
cmps
test
jmp
mov
int
push
jnp
ror
cmp
sub
repz
fwait
popf
xchg
lea
ins
mov
inc
iret
call
mov
add
inc
inc
mov
nop
adc
mov
je
sub
(bad)
aas
inc
xor
inc
and
jl
ret
mov
add
dec
and
xor
in
in
inc
pop
jl
(bad)
fstp
mov
add
add
sahf
lock
or
cmp
inc
cmps
inc
jecxz
pop
mov
xchg
mov
pop
cmp
push
test
or
mov
test
cwde
shl
cwde
(bad)
add
nop
leave
test
daa
(bad)
in
enter
stc
mov
pop
cdq
mov
dec
xor
outs
dec
mov
dec
stos
imul
call
es
(bad)
hlt
mov
fidivr
mov
leave
retf
es
fs
mov
shr
or
inc
ficomp
test
push
jg
jmp
mov
or
push
mov
stc
push
int
push
dec
mov
pop
pop
push
mov
pop
cmps
sar
sbb
adc
sub
or
not
push
xchg
mov
les
jmp
out
or
adc
cmp
cdq
jbe
(bad)
xchg
fs
dec
adc
pop
fstp
fldenv
in
jg
add
sub
push
pop
and
icebp
xchg
sbb
scas
cs
fisubr
sti
push
or
test
mov
jg
xor
jne
push
sbb
jne
cmp
or
mov
int3
push
or
push
cmps
daa
mov
and
mov
sub
mov
call
and
jbe
jno
retf
out
lods
ret
test
push
push
jo
add
test
fisttp
and
in
pop
pop
icebp
jp
out
fs
sar
mov
(bad)
nop
fimul
push
fwait
pop
dec
and
out
xchg
dec
and
mov
sub
mov
out
jnp
ret
shl
adc
jmp
mov
jle
push
fdiv
cmps
sub
mov
in
jns
ja
cmp
test
aam
daa
mov
ins
pop
xor
ins
inc
fnstsw
sub
fist
jmp
adc
dec
sbb
push
sub
int
sub
repnz
(bad)
mov
dec
(bad)
jmp
jne
mov
jo
xchg
fidiv
push
jge
fcom
push
gs
mov
in
mov
cs
je
aaa
outs
daa
mov
shl
shl
shl
ja
ficom
dec
icebp
cli
pop
xchg
mov
imul
loop
stc
inc
cdq
ds
ror
pop
call
sbb
add
das
jno
cmp
jns
sub
pop
fmul
pop
aad
mov
outs
adc
neg
fstp
sti
mov
xor
aaa
xchg
push
pop
rcl
push
ss
xor
adc
mov
out
jo
and
push
adc
push
jmp
adc
pop
or
adc
mov
mov
data16
xchg
cmp
jo
in
jnp
js
lds
adc
fwait
das
shl
xchg
pop
clc
xor
stos
ret
ret
jmp
ffree
mov
imul
add
jbe
arpl
mov
xchg
xor
adc
imul
inc
test
jg
dec
cmp
outs
mov
or
and
shl
pop
test
mov
test
sbb
xor
and
cli
adc
jecxz
add
shl
gs
test
ret
pop
push
iret
mov
std
push
inc
xor
loopne
mov
out
pop
mov
imul
(bad)
sti
std
xor
jmp
mov
imul
sti
xor
push
mov
xor
(bad)
and
arpl
mov
jg
xor
sahf
or
cmc
cmp
hlt
jbe
repnz
dec
pop
sub
jecxz
call
shl
sti
jmp
push
inc
ja
cmps
or
mov
or
cdq
cli
xlat
leave
jae
adc
xlat
int3
das
dec
imul
jbe
movs
repnz
sub
(bad)
and
sub
aas
pop
(bad)
pop
in
sbb
xchg
retf
mov
ror
fisttp
pop
xor
repnz
mov
test
sub
rcr
push
imul
push
pushf
sub
packssdw
aaa
jl
xchg
ins
loop
cmps
enter
fnstenv
pop
pop
mov
mov
jmp
stos
jb
dec
and
adc
xlat
inc
xor
cmps
sub
hlt
js
sahf
movs
sbb
inc
push
dec
repz
sbb
ret
stc
dec
les
sub
xchg
push
xor
add
ja
jb
bound
fcom
and
or
cwde
pop
sar
fadd
dec
pop
mov
movs
jno
mov
mov
jmp
cld
fild
sub
dec
into
arpl
popa
mov
ins
ins
mov
lods
fnsave
(bad)
hlt
pop
ja
stos
arpl
loopne
daa
mov
sub
imul
(bad)
mov
or
stos
pop
jmp
js
jecxz
das
out
jno
mov
jns
mov
arpl
fisttp
mov
out
test
movs
and
js
and
neg
les
cli
stos
push
cwde
cs
mov
xchg
repnz
adc
mov
mov
cmc
out
cmp
adc
mov
inc
add
std
xchg
nop
or
add
xor
fidivr
xchg
and
sub
cmp
add
adc
mov
dec
jge
jns
std
scas
outs
bound
out
mov
push
cwde
ins
call
ret
add
out
inc
hlt
int
sub
pop
das
scas
inc
inc
movs
mov
out
pop
mov
adc
mov
fidiv
js
cmp
stc
cmp
and
jae
mov
jmp
shl
jne
mov
aad
xchg
dec
inc
stos
loope
addr16
xor
shr
fisubr
mov
mov
mov
fsub
xlat
dec
mov
xor
sub
mov
mov
cli
loop
outs
jb
jmp
clc
sti
adc
pop
mov
push
ret
popf
sub
mov
shl
rol
or
(bad)
aas
call
mov
inc
pop
(bad)
xchg
inc
xor
cmps
ret
xchg
sbb
je
push
in
and
out
aas
out
or
daa
sbb
inc
movs
jno
mov
mov
jp
jmp
pop
(bad)
xchg
movs
arpl
out
jg
out
mov
out
jns
out
scas
pop
jle
cdq
shr
sub
pop
sub
sub
lods
jns
neg
mov
rcr
xor
pop
mov
fidiv
in
push
inc
inc
xor
dec
(bad)
(bad)
sbb
pop
gs
dec
mov
rcr
rcr
arpl
push
adc
test
out
inc
aam
jbe
jo
iret
nop
rcl
adc
int
scas
and
lock
loope
push
pop
rcl
jno
sbb
dec
loopne
(bad)
clc
or
aas
repz
sub
sbb
and
cmps
or
adc
ret
dec
out
sbb
out
jecxz
outs
ins
mov
jo
or
push
int
test
mov
lahf
fild
into
mov
movs
push
or
add
cli
add
or
test
dec
pop
xor
into
xchg
adc
aad
das
fild
mov
mov
pop
or
pusha
adc
push
(bad)
push
dec
fs
and
sub
mov
mov
xchg
mov
cmp
aam
push
fwait
sbb
(bad)
lock
inc
push
jo
adc
pop
jmp
popa
shr
jnp
shl
imul
ror
mov
sti
add
pop
sbb
jle
sub
jge
add
xchg
sbb
idiv
lods
mov
inc
inc
gs
aaa
xchg
jnp
mov
add
cmps
movs
pop
cmp
sbb
(bad)
sar
icebp
jbe
(bad)
enter
sub
push
sub
cli
(bad)
cmps
rcl
sub
dec
stos
pop
xlat
dec
pop
cmp
adc
or
mov
jg
mov
mov
outs
aas
sbb
call
sbb
jecxz
lods
ret
(bad)
pmuludq
iret
ja
test
pop
ja
scas
or
mov
jno
mov
dec
sbb
jg
call
iret
outs
into
div
(bad)
jmp
call
dec
cmp
cmp
aad
cld
cmp
jmp
dec
ja
bnd
imul
jl
sub
pop
into
js
ficom
(bad)
add
call
(bad)
pop
push
outs
js
cwde
pop
adc
jg
adc
fld
push
mov
out
adc
outs
sub
movs
sbb
data16
adc
xchg
adc
jecxz
jnp
adc
(bad)
cmps
xor
es
mov
pop
mov
mov
mov
test
outs
cmp
inc
outs
adc
fsubr
in
inc
jp
jle
adc
retf
or
call
adc
cmps
xor
and
mov
icebp
rcl
pusha
shl
inc
push
sbb
pop
xor
add
or
hlt
dec
call
mov
mov
mov
sub
jbe
out
lahf
nop
mov
push
lahf
jmp
jp
mov
pop
aam
push
sar
mov
repnz
repnz
scas
mov
pop
call
cli
hlt
and
daa
in
mov
jecxz
jnp
gs
jg
out
pop
and
stc
push
pop
iret
sbb
xor
xor
cmp
jbe
or
es
inc
rcl
int
xchg
pop
or
xlat
cs
sub
inc
add
sar
test
fistp
dec
imul
adc
and
imul
std
sbb
ds
in
outs
add
pop
jae
mov
cld
push
fs
mov
mov
stos
mov
lods
nop
xor
rcl
stos
adc
(bad)
ss
not
pop
mov
inc
je
sbb
add
fwait
sub
add
dec
test
imul
stc
aam
mov
jae
and
jne
dec
iret
and
and
outs
mul
retf
push
pop
sbb
cli
and
icebp
mov
pushf
pop
in
push
pop
push
les
je
mov
add
scas
dec
lds
rcr
xor
paddusw
ins
xor
jg
fnstenv
pop
test
adc
add
add
adc
dec
mov
xchg
and
xchg
popf
dec
int3
cmp
push
movs
sbb
out
ins
and
retf
sbb
adc
mov
(bad)
fnstcw
(bad)
sub
sbb
cmp
mov
test
pushf
aaa
ss
and
std
rcl
les
sbb
mov
pop
(bad)
pop
jecxz
mov
dec
xchg
and
mov
xchg
xchg
out
repz
pop
jo
fsubr
(bad)
mov
inc
jb
repz
push
sbb
out
leave
fsubrp
sub
jmp
iret
outs
inc
stc
stc
gs
jne
pop
adc
push
sbb
xchg
adc
fld
dec
mov
mov
sti
fs
repz
push
mov
popf
hlt
mov
test
int3
fimul
in
sbb
ror
clc
enter
mov
fs
arpl
pop
dec
fucom
pop
mov
add
test
or
pusha
or
shl
xchg
hlt
mov
push
es
cmc
rcl
pop
dec
clc
movs
test
cmc
pop
test
and
lds
xor
inc
xor
xchg
popa
iret
pop
jle
cmp
push
mov
dec
imul
and
jmp
push
call
pusha
add
xchg
sahf
sbb
push
mov
jmp
aaa
popa
fs
push
aam
pushf
mov
xor
add
aad
inc
aad
pop
jne
sub
push
stos
repnz
lods
add
sahf
or
cwde
repz
sahf
cmp
rep
or
mov
dec
popa
pop
jl
xor
lods
lock
or
or
jecxz
sub
mov
sbb
cmp
push
mov
repnz
fwait
aad
outs
mov
pop
pop
jae
mov
neg
push
cdq
cmps
mov
inc
test
pop
fnstsw
inc
push
ret
js
pop
xor
xchg
pop
scas
pop
popf
xlat
xor
jo
inc
pop
push
add
or
jg
jo
ja
adc
jmp
mov
test
sub
push
push
mov
add
jmp
inc
cs
dec
lock
mov
pop
xchg
jb
out
jae
inc
xchg
repnz
clc
mov
in
sti
mov
addr16
into
fwait
jb
aam
cld
out
sub
fs
cmp
dec
and
lds
fmul
pop
dec
rol
addr16
mov
xchg
dec
js
or
sub
js
in
ins
(bad)
gs
in
mov
push
sub
and
inc
int
sub
int3
jnp
add
inc
js
mov
out
movs
add
jecxz
inc
dec
jno
mov
jmp
in
and
jmp
push
(bad)
mov
and
std
dec
dec
sahf
in
push
mov
add
fisttp
jbe
xchg
mov
(bad)
leave
mov
das
xchg
sub
add
addr16
retf
pop
dec
ret
and
dec
rcl
aaa
inc
xlat
fisttp
aad
and
ror
mov
jbe
mov
out
cmc
fadd
in
rcl
and
lahf
imul
(bad)
xlat
mov
sub
push
scas
push
test
jl
test
or
fwait
lea
inc
cmp
leave
push
loop
and
enter
cdq
repnz
push
imul
adc
xchg
push
pop
cmp
and
lods
out
jl
jmp
xchg
xor
test
leave
inc
cwde
in
cmp
or
lods
dec
inc
xchg
scas
and
imul
call
xor
call
stc
dec
jecxz
fcom
sbb
sub
mov
jg
add
shl
add
lea
sbb
cmp
test
out
and
mov
imul
inc
or
sub
pop
sub
or
mov
and
scas
add
add
mov
push
mov
sbb
sbb
xchg
aam
or
lea
jb
pop
and
ret
or
icebp
aam
ret
or
lods
sahf
stos
jbe
cmc
cmp
out
dec
sub
inc
xchg
cld
pop
cli
js
xchg
cmp
stos
xchg
adc
cmp
add
or
inc
cwde
cmp
je
xchg
nop
push
jb
pop
out
and
test
or
les
loop
adc
imul
mov
outs
add
fwait
shl
mov
jl
ror
jns
mov
pop
mov
or
and
jbe
xchg
lea
and
ds
xor
aad
hlt
hlt
imul
dec
xor
dec
repz
add
push
test
stc
fs
aam
or
sbb
test
outs
sub
push
dec
sar
push
jns
dec
gs
pusha
mov
jo
adc
repnz
pop
xlat
scas
mov
adc
dec
sar
std
and
add
pop
arpl
aad
or
xchg
outs
(bad)
outs
add
xor
shr
in
jp
fidiv
popf
sbb
ins
test
push
sub
mov
mov
gs
and
add
test
mov
loopne
jae
dec
std
dec
and
shr
xchg
loopne
adc
dec
loop
xor
push
or
add
mov
cmp
inc
ins
repnz
xchg
mov
(bad)
cdq
(bad)
xchg
gs
int
add
in
and
shl
mov
mov
mov
pop
imul
pusha
xor
jecxz
jne
and
add
pop
and
lahf
not
les
mov
adc
push
dec
mov
aad
or
adc
mov
dec
iret
aad
dec
addr16
mov
mov
sub
out
outs
dec
mov
in
loop
cmp
add
push
push
and
push
mov
sti
cld
gs
push
mov
pop
cmp
xchg
mov
adc
jbe
out
ja
pop
lock
shl
inc
cmp
dec
cmp
lea
cli
mov
hlt
ja
cld
shr
movs
mov
stos
xchg
sar
nop
sbb
nop
iret
jnp
je
or
xchg
push
lods
fidivr
mov
dec
push
div
mov
jnp
cdq
ret
call
hlt
inc
inc
push
fild
inc
lea
mov
fstsw
xor
lahf
mov
cwde
sahf
xchg
xchg
fimul
mov
jmp
in
fwait
cmc
(bad)
cmp
lea
lea
jns
fst
cmps
add
push
movs
repnz
addr16
mov
mov
cmc
jae
sub
(bad)
xor
outs
jne
add
pop
mov
cmps
std
push
cli
dec
push
pop
fnstsw
mov
sbb
aad
sub
rcl
call
cmp
lea
add
pop
sub
mov
bound
js
outs
cmp
int3
push
ins
rcr
lea
inc
sbb
in
icebp
stos
shl
mov
dec
jmp
mov
call
adc
imul
loopne
xor
stos
and
lock
out
add
adc
xor
sbb
test
popf
adc
jbe
add
sub
popa
call
pop
cmps
lock
loop
call
mov
retf
in
hlt
and
cld
lock
stc
dec
xchg
xchg
lock
pushf
inc
pop
mov
outs
sub
push
js
and
jae
cwde
and
movs
or
(bad)
fimul
out
mov
out
les
aam
pop
fiadd
stos
mov
sub
xchg
inc
ror
loope
test
cmp
pop
mov
mov
mov
call
xor
test
mul
nop
xlat
test
pushf
fmul
xchg
add
loopne
dec
inc
and
jle
adc
add
stc
outs
or
cld
sti
es
cmp
pop
cmp
sbb
loop
push
movs
retf
test
jecxz
xor
mov
(bad)
or
fcomp
mov
xchg
push
dec
sub
int
jnp
push
xor
retf
pop
xor
pop
adc
jl
mov
lea
push
out
adc
ins
push
mov
ds
and
fistp
or
call
dec
(bad)
mov
adc
lods
movs
pop
loopne
sar
or
jb
push
jno
icebp
out
fld
outs
pop
cmps
jmp
jecxz
mov
std
arpl
sbb
js
lods
retf
std
ds
push
sub
out
mul
leave
adc
outs
dec
mov
dec
call
inc
mov
pop
(bad)
or
nop
movs
loope
mov
mov
outs
mov
inc
pop
shl
in
mov
ror
pop
dec
push
cli
sub
adc
pop
xor
xor
jmp
adc
retf
or
mov
cmp
out
jl
or
inc
push
iret
add
stc
in
inc
or
xchg
cdq
addr16
adc
sub
cmp
scas
sub
fisttp
xor
cmp
lock
dec
mov
fnstenv
pop
mov
xchg
pop
dec
test
aam
xor
mov
out
mov
sbb
out
ret
lods
mov
outs
fwait
add
xchg
outs
jl
daa
movs
add
mov
imul
jp
loopne
jmp
xchg
fldenv
les
bound
pop
and
mov
fadd
fwait
pop
lods
xchg
stos
push
inc
cmp
pop
out
push
bound
push
movs
ret
pop
xchg
test
xchg
mov
mov
arpl
repz
cmp
dec
into
hlt
xchg
jmp
push
xchg
inc
or
mov
cmp
xchg
das
pop
(bad)
(bad)
fadd
push
mov
xor
out
inc
icebp
je
inc
cmp
jp
adc
ins
jl
cwde
or
retf
mov
int
or
dec
cmp
cmp
es
test
xor
in
and
call
adc
gs
lock
push
mov
into
shl
in
in
stc
retf
fnstcw
fldcw
mov
dec
pop
(bad)
shl
sub
loop
ret
lahf
arpl
mov
mov
sub
lods
sub
in
adc
xchg
repz
fist
cmps
push
mov
mov
inc
push
cmp
inc
mov
jae
mov
xchg
arpl
mov
cs
push
xor
cli
add
fdiv
or
(bad)
or
mov
jnp
jne
sbb
push
and
add
mov
push
jo
ja
jbe
ret
aad
fistp
push
movs
call
ret
fwait
cmp
xchg
push
mov
int3
lds
adc
mov
lods
(bad)
lods
add
shl
js
pusha
fwait
push
mov
sbb
adc
pop
xchg
add
jnp
xchg
lds
in
ss
movs
call
jno
pop
adc
es
mov
cmps
xor
and
test
jno
lahf
add
jmp
xchg
push
ins
jge
cld
scas
(bad)
xor
rol
cmps
xchg
mov
xchg
lock
out
into
sbb
add
push
or
clc
dec
mul
scas
cld
jb
(bad)
call
clc
ss
mov
push
sub
(bad)
fadd
cmps
jb
push
mov
inc
iret
aam
loop
mov
out
mov
cmp
sar
lods
mov
imul
movs
outs
mov
fdiv
sub
xor
ret
jno
pop
add
mov
push
cli
shr
push
int
xchg
inc
add
push
into
pusha
scas
jp
jp
lea
stos
int
xchg
pop
add
sub
adc
enter
adc
ins
pmaxub
(bad)
(bad)
or
pop
mov
repz
pop
aam
fcomp
sahf
sbb
pop
cmp
inc
stos
aam
cmp
pop
and
mov
dec
idiv
lea
xchg
imul
push
(bad)
mov
or
mov
mov
sbb
in
push
dec
or
mov
nop
cmc
pusha
imul
test
lock
push
in
or
sahf
or
test
(bad)
inc
pushf
in
mov
lea
scas
sti
mov
iretw
jae
add
xchg
sub
inc
(bad)
push
(bad)
mov
fs
int3
add
outs
mov
jae
ret
ja
imul
jl
or
lods
out
scas
mov
mov
mov
(bad)
in
gs
adc
pushf
mov
add
mov
cmc
or
dec
scas
dec
dec
hlt
jae
mov
das
ficom
mov
loope
inc
int3
cmp
inc
inc
cmp
xor
shr
lods
movs
push
inc
rol
add
lods
jmp
gs
and
inc
mov
adc
imul
jg
inc
xchg
add
mov
fs
mov
ds
aas
popf
push
and
and
lock
aaa
add
fnstcw
inc
and
cmp
pushf
clc
inc
mov
push
cwde
add
adc
div
mov
push
inc
fld
jg
mov
or
sbb
mov
in
xchg
mov
xchg
and
fucomip
cmp
mov
add
fadd
dec
lahf
and
pop
(bad)
dec
adc
out
repnz
sub
nop
and
imul
xchg
xlat
mov
data16
in
fdiv
jge
sbb
ja
inc
pop
xchg
daa
lds
(bad)
push
fld
mov
cdq
or
sbb
call
retf
stc
push
add
mov
retf
sub
out
cmp
push
(bad)
dec
repz
ror
fistp
or
mov
ficom
inc
in
inc
test
push
ds
shl
inc
ins
and
dec
aas
pop
jg
test
push
xchg
js
ds
mov
outs
fs
aaa
and
xor
and
pusha
dec
pop
bound
mov
inc
mov
fs
xchg
cmp
mov
and
xlat
jmp
shl
xchg
shl
stos
jno
stos
movs
das
stc
outs
or
xchg
je
xchg
lds
xor
dec
jge
mov
repnz
movs
ror
and
jmp
mov
ret
and
sbb
jge
in
sbb
inc
lahf
in
or
loopne
jns
jo
cli
mov
std
ins
add
pop
push
or
vxorpd
cmps
shl
in
popf
or
mov
push
dec
mov
sub
mov
lahf
jae
xchg
pop
inc
in
repnz
fistp
sbb
xor
push
lds
xlat
mov
or
scas
bound
test
lods
jecxz
jne
rcl
cld
int3
pusha
cmp
jb
cmp
frstor
or
dec
or
(bad)
sbb
add
sahf
sub
in
cmp
adc
pop
cmps
movs
fisub
push
(bad)
in
jo
call
dec
adc
jge
lods
call
xor
test
jmp
sti
mov
outs
addr16
fcomp
nop
push
out
sub
pop
mov
arpl
sub
sbb
adc
jo
adc
dec
jmp
mov
xor
icebp
xor
jbe
test
shl
xor
cmp
into
(bad)
jmp
arpl
rcr
xchg
mov
loope
inc
add
leave
ficomp
mov
xchg
jp
mov
cmp
fs
mov
xchg
into
test
(bad)
cmc
xchg
sub
fwait
out
mov
cmp
dec
jbe
repnz
enter
(bad)
in
ja
xor
ror
mov
stos
and
mov
sub
push
and
xchg
scas
cld
das
stos
sti
(bad)
mov
cwde
sub
bound
xlat
paddsb
in
adc
mov
inc
cmps
icebp
xor
pusha
nop
pop
cmp
fsubr
push
nop
push
in
mov
sub
sub
mov
aaa
dec
div
(bad)
jmp
notrack
pop
inc
lea
or
or
push
push
jo
test
(bad)
imul
xchg
aam
mov
inc
into
popa
inc
outs
ret
adc
call
mov
push
and
or
test
mov
mov
jp
pusha
inc
push
nop
out
inc
loope
xchg
clc
pop
xchg
pop
mov
pop
inc
outs
pop
aad
loop
call
pop
inc
xor
jle
xchg
mov
loopne
adc
icebp
mov
mov
push
cld
sbb
jbe
loope
cmp
test
cs
and
push
fiadd
ds
clc
push
cmc
inc
sbb
mov
cmp
jo
ss
cli
(bad)
lods
mov
ret
mov
mov
push
mov
ja
jmp
ret
or
cwde
and
jbe
hlt
outs
pop
mov
cmp
fsub
shl
sbb
in
sub
shl
push
das
scas
mov
adc
xchg
mov
mov
mov
inc
into
in
jno
pop
inc
in
mov
repnz
cs
jno
mov
arpl
mov
push
mov
mov
rcl
pop
push
xor
call
dec
mov
std
dec
mov
fcomp
fsubp
outs
aas
dec
fdivr
daa
lds
dec
(bad)
out
and
(bad)
aas
popf
jnp
test
jnp
inc
popa
rcl
jo
cmp
sbb
push
mov
push
and
jo
out
sbb
xor
and
inc
xor
int3
dec
mov
cpuid
mov
add
pop
cmp
lods
push
jle
inc
add
jnp
(bad)
cld
imul
inc
sub
xor
call
mov
dec
push
repnz
(bad)
iret
hlt
stc
add
pop
cs
xchg
dec
mov
or
cld
icebp
and
les
lea
mov
xchg
lahf
xlat
icebp
add
dec
int3
mov
in
je
jmp
inc
mov
movs
(bad)
call
retf
sbb
sub
cmp
push
aad
jle
cld
and
push
dec
xchg
mov
pushf
ficomp
push
xchg
mov
xor
int
(bad)
scas
(bad)
push
cmp
test
xchg
ss
ss
gs
nop
imul
repnz
enter
or
or
dec
sub
cdq
mov
sbb
mov
and
xchg
clc
add
pop
hlt
jbe
adc
mov
pop
xlat
jg
leave
add
pop
test
test
fmul
and
inc
and
mov
adc
loope
mov
ret
xor
lock
adc
ret
push
add
mov
add
pop
fwait
enter
mov
jmp
jb
bound
ja
sub
and
add
jo
jmp
sbb
jg
xor
clc
jl
fisttp
(bad)
loopne
adc
jl
call
jno
jbe
(bad)
ja
sbb
add
pop
pusha
(bad)
gs
mov
loop
mov
(bad)
xchg
jb
scas
out
xor
inc
mov
inc
xchg
fdivr
xchg
mov
clc
mov
shl
shr
dec
mov
pop
inc
loop
das
or
rcr
mov
dec
cmp
add
out
jp
add
adc
xchg
leave
call
jbe
mov
dec
lods
xor
jns
(bad)
cmp
cmp
cli
gs
push
sti
mov
add
inc
sbb
sub
repnz
fwait
lock
enter
xchg
ret
cmp
sar
outs
dec
pop
push
xchg
or
jmp
ins
cmp
add
inc
push
jmp
jle
lods
int
or
dec
cdq
(bad)
ror
mov
jle
(bad)
inc
cmc
cmp
not
pop
into
(bad)
mov
cwde
bound
xchg
mov
aam
mov
out
xchg
xchg
mul
xor
aam
push
adc
jge
mov
ret
imul
aaa
mov
fwait
mov
adc
sbb
mov
popa
dec
mov
dec
and
(bad)
and
and
pop
call
hlt
das
mov
outs
adc
jb
sub
mov
xchg
mov
cmps
out
inc
imul
enter
addr16
adc
mov
cmp
inc
jbe
inc
dec
fld
into
xchg
pop
adc
jnp
mov
out
aaa
stos
cmp
cmp
in
mov
inc
iret
outs
in
sar
out
aad
call
xor
jb
jmp
xchg
sub
cdq
add
ins
inc
xchg
sub
cmp
cs
call
cld
pop
test
into
mov
loopne
int3
push
pop
test
aas
es
sub
ds
push
outs
shl
sahf
jmp
test
std
adc
call
cmp
addr16
mov
push
inc
or
jp
and
sub
lods
fs
fst
xor
cli
ins
jo
jo
jnp
jmp
clc
mov
cwde
cmps
stos
xchg
fdivr
je
mov
sbb
and
inc
or
or
outs
outs
fidivr
ficomp
push
pop
cmp
fdivr
shl
and
arpl
in
dec
int
ins
xchg
out
stos
inc
lock
call
jmp
dec
pop
xor
jg
cmps
inc
rol
pushf
mov
xchg
mov
cli
sar
sbb
mov
mov
inc
out
stos
sbb
lods
dec
push
sub
cwde
pop
mov
jmp
mov
mov
cli
inc
mov
fistp
test
iret
adc
inc
aam
jno
lock
sahf
or
stos
push
in
adc
xor
out
jnp
cmp
jmp
icebp
out
out
cmps
mov
and
push
xlat
jmp
or
fst
inc
fnstenv
dec
xor
mov
adc
arpl
pop
jb
adc
mov
mov
cmp
adc
dec
fcmovne
jge
int
and
pop
or
lea
push
sar
adc
inc
inc
and
inc
adc
sub
xchg
sbb
das
mov
imul
push
pushf
fnstenv
jp
inc
cmps
test
mov
cmp
mov
mov
xchg
imul
ret
push
sub
ins
into
test
sub
test
pop
stc
(bad)
test
in
add
dec
jp
mov
(bad)
inc
jne
call
fidiv
fsub
repz
inc
sbb
loop
jae
jge
pop
xchg
(bad)
cld
std
bound
xor
mov
jl
jo
dec
test
jnp
stc
popa
sub
push
outs
inc
jmp
sbb
sub
inc
ror
inc
push
inc
das
(bad)
dec
js
xlat
pusha
cmp
jbe
mov
test
or
add
lods
sub
inc
lods
nop
add
lods
das
and
fwait
xor
cld
sub
cmp
and
cli
pop
xchg
pusha
scas
out
sbb
cwde
fisub
out
scas
mov
rcr
cmp
clc
ja
add
jmp
aad
push
repnz
popa
push
dec
jle
fcmovne
loop
and
jp
and
pop
movs
dec
xor
mov
or
mov
(bad)
lea
cmp
mov
gs
iret
mov
xchg
xchg
add
ret
popa
mov
jg
mov
xchg
jne
inc
movs
inc
and
xchg
push
mov
aaa
jg
imul
sub
xor
daa
sbb
jmp
sbb
out
and
inc
or
mov
test
inc
loope
or
imul
arpl
dec
xchg
sbb
scas
xor
leave
ror
add
and
jne
ins
ret
ja
sub
popf
cmp
lds
and
(bad)
cld
cmp
xor
xchg
and
dec
adc
sub
in
push
xor
mov
popa
stos
dec
test
in
test
cld
pop
or
cmp
mov
pushf
lahf
in
pop
leave
jecxz
and
dec
dec
sbb
dec
jmp
(bad)
cdq
inc
cmp
retf
sti
adc
push
xchg
idiv
pop
rol
mov
popa
ss
scas
and
jae
adc
jp
mul
jne
daa
add
and
retf
ds
in
xor
pop
imul
sub
movs
push
in
jbe
daa
scas
inc
mov
mov
pushf
(bad)
xchg
retf
into
mov
lds
les
std
cmc
xor
mov
nop
retf
xor
inc
fwait
adc
repz
xchg
mov
arpl
push
jp
int
cmp
out
pop
std
mov
push
xchg
fisttp
call
mov
das
test
cli
or
movs
les
loopne
cmp
dec
mov
xor
leave
repnz
jb
fild
mov
jbe
mov
aas
inc
ffreep
inc
ret
aaa
leave
jne
cs
jmp
mov
jne
dec
mov
push
stos
shr
xor
add
loope
repnz
popa
push
push
ins
scas
std
mov
pop
in
std
enter
and
loopne
or
test
pusha
pop
cmc
sar
div
ret
push
test
mov
mov
test
adc
cmc
fdivr
fdiv
pushf
es
pop
cmp
pop
xlat
mov
imul
and
cmp
ficomp
pop
pop
shl
xchg
xchg
sub
loope
in
mov
int3
mov
jge
mov
and
shr
in
fstp
and
movs
mov
cld
fxch
(bad)
in
sbb
popa
cli
jge
sub
mov
test
and
fwait
mov
mov
push
cmp
(bad)
call
jne
jbe
pop
test
mov
aam
pop
push
cdq
push
call
dec
fst
inc
fwait
or
add
shr
mov
mov
stc
xchg
loop
xor
push
push
lods
jne
fimul
inc
add
repnz
sub
inc
dec
in
xor
xlat
inc
dec
sbb
not
jg
repz
int3
outs
retf
cmp
call
ins
add
or
pop
out
and
shl
sbb
inc
bound
xchg
out
push
sar
(bad)
in
add
jmp
stos
loop
shl
gs
push
loop
shr
jbe
push
imul
sub
scas
test
push
test
jae
or
add
add
sub
sbb
push
imul
inc
add
add
cs
addr16
jl
mov
movs
and
pushf
mov
pop
or
xchg
push
cmp
xor
lea
and
add
stc
add
dec
xchg
pop
jmp
into
mov
int3
out
add
pop
dec
int
or
jnp
ret
cmp
xchg
mov
pop
sti
mov
imul
sub
sub
movs
cwde
int3
inc
push
imul
xchg
in
add
pusha
inc
pop
and
mov
jle
addr16
sub
and
jmp
mov
popa
and
add
sti
iret
push
cli
xchg
jmp
repnz
(bad)
push
cmp
int
pop
jg
mov
or
fld
push
xchg
outs
add
cwde
and
mov
std
xor
aaa
loope
mov
jle
or
inc
cwde
and
out
sbb
push
sbb
retf
push
jl
pmullw
mov
xchg
in
jbe
jns
mov
outs
cli
dec
aaa
test
es
adc
icebp
sub
stos
add
mov
xor
and
je
adc
stos
push
mov
pop
ret
push
add
scas
repnz
ret
cs
add
ss
pop
fistp
shr
fs
or
cli
leave
fsubr
ins
in
fwait
test
icebp
xor
push
mov
out
sub
cmps
rol
mov
lahf
ins
clc
(bad)
inc
ret
and
add
mov
push
in
rcr
mov
fdiv
out
sub
rcl
aad
mov
lds
aad
es
jecxz
iret
hlt
arpl
cli
popa
sahf
jp
hlt
das
stc
fcomp
rol
jp
xchg
sub
scas
mov
adc
add
aad
fdivr
int3
cmp
movs
xlat
lods
lahf
cmps
retf
stc
shl
aam
test
repz
aas
setge
call
pop
out
movs
or
retf
ror
sbb
sbb
fnstcw
mov
xor
sub
push
repnz
shl
push
adc
dec
call
cld
xor
outs
sbb
xor
pop
xor
inc
mov
stos
ins
(bad)
cld
add
ins
dec
cmp
fsub
sub
xchg
inc
retf
pop
cmp
aaa
mov
push
fistp
cmp
(bad)
sbb
add
pop
sbb
and
pop
popa
call
dec
imul
leave
xchg
aaa
sub
or
jmp
and
jmp
outs
ins
imul
js
leave
jnp
xlat
les
sub
ret
adc
popf
lea
inc
inc
mov
xor
cmp
call
fs
ret
sbb
xor
mov
rol
fmul
stos
jge
jmp
push
dec
ret
jbe
cmp
pop
scas
test
inc
pop
sar
xchg
mov
call
dec
dec
scas
(bad)
stos
lods
movs
xor
push
in
dec
js
xchg
and
lds
test
cdq
imul
xchg
test
lods
das
push
and
xor
inc
bnd
iret
mov
pop
inc
mov
stos
mov
arpl
sbb
sbb
lahf
(bad)
and
mov
push
dec
retf
xchg
and
jno
pop
mov
cmp
cmp
pop
inc
es
xchg
call
int3
inc
cmc
cmp
xchg
or
sbb
jecxz
sbb
cmp
sub
fbld
js
fdivr
jp
dec
mov
ret
lds
mov
lahf
mov
(bad)
arpl
fwait
push
jmp
mov
fild
pop
ins
and
adc
push
or
jnp
jmp
pushf
jns
cwde
dec
inc
sahf
scas
sub
adc
ins
mov
cmc
lds
mov
mov
arpl
mov
jo
or
jmp
movs
push
inc
outs
mov
cmp
push
jnp
pop
and
outs
out
movs
nop
jne
xchg
je
js
lahf
push
or
pop
fimul
sub
(bad)
cmp
(bad)
ds
inc
dec
stos
add
js
xchg
add
pop
(bad)
into
adc
(bad)
cmc
daa
or
mul
or
loopne
jo
mov
retf
movs
fstp
add
fdivr
sub
int3
iret
test
out
ret
mov
dec
out
dec
outs
mov
mov
cmp
cs
leave
xchg
push
and
rep
pop
ret
call
sbb
mov
xchg
push
xchg
pop
leave
xchg
xor
adc
test
(bad)
lahf
mov
or
ret
xor
and
inc
push
mov
les
(bad)
pop
sti
cmp
test
push
in
or
push
lods
lods
das
sub
add
(bad)
les
add
mov
pushf
(bad)
out
lods
(bad)
ds
mov
test
sbb
sbb
imul
cli
adc
dec
bound
jo
std
pop
inc
jmp
jecxz
js
addr16
push
or
cmp
mov
push
dec
sub
loopne
xor
mov
jno
(bad)
push
int3
repnz
mov
push
je
cmp
aaa
push
ret
mov
push
ret
cwde
movs
nop
sub
inc
jne
test
in
pop
inc
cli
stc
test
xchg
jg
mov
imul
mov
aam
mov
push
mul
jo
push
sbb
retf
loop
mov
sar
mov
pop
push
fsubr
(bad)
jne
(bad)
and
adc
dec
es
dec
adc
xor
push
imul
and
xchg
or
lods
call
fmul
xor
call
or
stos
dec
adc
test
bound
aad
sbb
adc
jns
or
retf
adc
es
adc
add
or
icebp
sub
popa
stc
addr16
pop
out
stos
ret
push
test
mov
repz
adc
sub
push
add
push
and
int
pop
test
(bad)
call
inc
jmp
lock
icebp
es
arpl
sbb
push
retf
xor
xchg
call
dec
push
dec
loope
in
jmp
mov
ss
push
mov
out
add
sbb
scas
jnp
leave
mov
pop
aam
add
test
pop
xor
aam
xchg
sahf
push
mov
push
scas
cmp
xchg
into
out
(bad)
and
imul
mov
sub
stos
and
push
popf
dec
mov
fcmovbe
xor
(bad)
fsubp
mov
mov
cmp
jecxz
and
push
inc
scas
pop
jecxz
jnp
pop
loope
(bad)
jnp
out
ja
sbb
sbb
lods
sub
fisttp
push
repz
outs
inc
adc
mov
std
scas
push
xchg
adc
push
retf
cdq
cmc
push
out
call
sbb
out
hlt
push
xchg
jge
push
mov
jecxz
into
jmp
pop
loopne
jge
cmp
push
inc
out
mov
outs
inc
fcom
dec
cld
js
xchg
loopne
les
lahf
pushf
ja
sbb
inc
cmp
sahf
adc
dec
sbb
loopne
add
ins
xor
ins
mov
bound
stos
aaa
bound
sbb
aas
add
push
push
stos
rcr
jmp
inc
fmul
add
bound
cmc
dec
les
sbb
mov
mov
daa
sbb
or
cmps
xor
sub
(bad)
dec
leave
add
xor
pop
mov
push
sar
test
je
lods
or
push
mov
int
dec
and
dec
(bad)
dec
sub
inc
or
dec
ins
mov
das
mov
in
inc
cs
push
sahf
fistp
xor
repnz
les
ins
pop
inc
cmps
scas
rcl
mov
(bad)
jp
mov
fsubr
or
(bad)
xor
pop
adc
cli
in
mov
and
jmp
mov
and
lods
jecxz
int3
ret
sub
mov
loopne
je
jmp
retf
outs
jno
cli
ret
fdivr
dec
int
jmp
xchg
dec
sub
mov
fld
dec
inc
or
in
test
cmp
test
rcr
mov
jb
mov
sbb
(bad)
pop
ja
jecxz
repnz
sbb
push
lds
out
retf
sbb
into
mov
sti
enter
sub
push
adc
stos
and
and
out
pop
test
std
enter
adc
jge
adc
sahf
mov
xchg
sbb
inc
dec
repz
lods
add
push
inc
sub
int
adc
movs
cmp
lds
push
scas
fld
fild
(bad)
loope
sti
out
jns
or
in
inc
xor
popa
mov
dec
pop
jne
fsubr
jne
dec
mov
push
xor
hlt
sbb
ss
fnstenv
in
(bad)
cmc
mov
mov
inc
and
xchg
or
xor
mov
fwait
out
dec
icebp
or
add
pop
sbb
mov
(bad)
add
(bad)
je
mov
in
mov
aad
mov
fs
mov
mov
hlt
pop
cmp
cs
hlt
jae
movs
sbb
fdivr
lds
dec
popf
sub
(bad)
mov
jns
push
adc
lahf
xor
fistp
pop
(bad)
mov
jbe
int
cmps
retf
mov
daa
jbe
push
push
add
loopne
mov
xor
mov
sar
js
xchg
cs
sbb
pop
push
add
pop
xchg
dec
mov
or
mov
cmp
and
and
retf
xor
enter
cs
in
aam
int3
ins
pop
mov
push
enter
mov
xchg
fisub
fld
outs
cld
push
lahf
xlat
push
mov
or
mov
test
or
and
gs
jb
mov
add
adc
cmps
jnp
mov
sbb
lods
les
inc
les
das
add
rol
add
xchg
dec
shl
sbb
in
inc
add
dec
mov
je
push
xor
addr16
mov
imul
sub
and
popa
sahf
leave
stc
fwait
popf
sar
lods
pushf
aad
adc
xchg
cwde
rol
sbb
adc
xchg
mov
jne
iret
mov
call
repnz
add
adc
stos
inc
(bad)
mov
les
and
sub
mov
cmp
xlat
ret
(bad)
or
retf
or
cmp
pop
jne
adc
cmp
cmps
sbb
or
mov
jo
jbe
dec
fs
sbb
in
xchg
rcr
and
ins
pop
or
test
add
mov
(bad)
outs
ret
dec
(bad)
in
push
ss
sub
jno
push
scas
sub
lods
(bad)
rcr
mov
popf
shr
xchg
adc
fst
push
sub
jmp
pop
(bad)
pop
repz
repnz
xchg
sub
aam
ret
xor
push
mov
cmp
es
xchg
leave
push
mov
stos
mov
in
popa
adc
pop
cdq
and
cmps
pusha
and
mov
mov
sbb
daa
dec
xor
sub
adc
or
xchg
ja
imul
jecxz
push
push
xor
call
pop
out
ins
jp
in
adc
ins
mov
sbb
fadd
jno
adc
sti
or
imul
sbb
cmp
push
xlat
loop
adc
(bad)
xchg
mov
or
stos
cmp
pop
jmp
call
mov
mov
arpl
popa
mov
add
push
rol
imul
xchg
movs
mov
mov
lods
sbb
nop
aaa
and
gs
repz
das
sub
or
icebp
cmp
jmp
lock
es
je
popa
jne
cmp
cwde
xchg
frstor
enter
add
dec
inc
or
mov
movs
push
mov
div
xor
inc
and
test
daa
in
icebp
pop
mov
cmp
adc
retf
mov
dec
or
mov
(bad)
loopne
repnz
xchg
add
dec
shl
jecxz
les
(bad)
and
jo
cs
cmp
hlt
pop
mov
jmp
pop
stos
add
dec
mov
repz
dec
inc
sar
inc
stos
imul
lahf
cli
inc
nop
dec
mov
test
lock
or
push
push
dec
add
faddp
stos
mov
rcr
pop
test
scas
or
rcl
stos
cli
inc
inc
push
xor
mov
retf
cmps
push
push
pop
pop
pop
or
retf
xor
inc
adc
xchg
into
ss
cdq
ins
xor
data16
das
mov
sub
mov
inc
arpl
addr16
aas
push
and
lods
test
xchg
fcmovu
add
int
jo
pop
call
mov
sti
jb
mov
fild
cmp
pusha
call
sub
mov
adc
pop
pop
sbb
shl
out
je
(bad)
call
mov
mov
cld
push
fld
popa
adc
fs
(bad)
mul
movs
fist
jbe
push
xchg
inc
shr
(bad)
mov
pop
retf
inc
lods
fimul
leave
lods
fnstcw
imul
push
xchg
adc
jecxz
test
mov
movs
inc
sbb
aam
test
das
add
jp
jmp
pushw
jmp
clc
bound
iret
lods
mov
out
jne
es
loop
jb
cld
dec
js
das
mul
out
jmp
call
pop
cmp
inc
cmp
jp
(bad)
lods
push
pop
dec
imul
cmp
mov
mov
dec
add
adc
push
or
jl
popf
cwde
mov
shr
les
out
fs
add
cs
stos
mov
mov
dec
push
and
lock
in
xchg
xor
clc
bound
hlt
mov
xor
adc
push
lods
xchg
jns
or
mov
aam
fnstsw
loop
js
push
mov
sub
(bad)
pop
mov
inc
hlt
ror
enter
mov
repz
or
ins
xor
adc
int3
push
sbb
in
lods
inc
lods
or
jle
mov
int3
(bad)
test
push
add
xlat
shl
and
(bad)
lea
in
or
and
les
xchg
test
and
mov
xchg
div
mov
shl
out
repz
test
ss
lds
jmp
sub
cmps
mov
ds
xchg
lds
repnz
xchg
test
idiv
repz
jl
hlt
jmp
fsubp
jge
and
xor
inc
sbb
cmp
adc
adc
iret
jle
jp
xor
out
sbb
cmps
ja
aad
mov
mov
shl
(bad)
mov
jb
xchg
inc
nop
cmp
(bad)
in
clc
or
pop
retf
retf
mov
rcr
jg
pop
mov
movs
add
xor
dec
and
or
add
xor
dec
push
or
call
imul
hlt
(bad)
lea
test
fisttp
(bad)
repz
rcr
cmp
xchg
fwait
or
int
ins
pop
pop
add
inc
in
mov
mov
cli
lahf
mov
pop
add
add
int
int3
outs
push
fisttp
mov
push
in
in
scas
sub
in
rcr
cmp
test
cmps
ss
xor
in
xchg
std
aas
repz
pop
mov
lods
or
push
mov
xchg
call
nop
retf
aam
xchg
sub
ret
xchg
jo
imul
mov
jecxz
xchg
jb
adc
sub
mov
fs
and
hlt
outs
dec
adc
inc
sbb
outs
xor
and
push
fcomp
pop
xchg
lahf
js
dec
pop
xchg
push
(bad)
mov
add
cdq
add
test
push
sar
xchg
out
pusha
add
pusha
mov
inc
push
xor
ja
out
(bad)
lea
dec
pop
ins
and
in
rsqrtps
es
aam
lock
add
retf
retf
xchg
cmc
ror
gs
aas
out
or
imul
or
pop
xchg
mov
stc
retf
jp
pop
fimul
loop
aas
sub
jae
sub
jp
popa
leave
inc
or
push
addr16
imul
shr
rol
mov
xchg
addr16
fwait
add
push
mov
arpl
(bad)
popf
push
ins
jno
fistp
jg
dec
cs
test
inc
inc
push
pop
(bad)
pop
push
cs
retf
dec
js
jne
jae
pusha
sbb
pop
popf
gs
dec
add
out
sti
in
mov
rcr
pop
or
mov
jne
ficomp
shl
dec
in
cmp
loop
mov
xchg
fs
fcomp
scas
push
adc
(bad)
scas
pusha
out
mov
call
dec
shl
and
ror
sti
inc
loopne
les
pop
and
stos
fld
fiadd
mov
adc
mov
add
sub
test
or
xor
add
jle
xor
mov
sbb
bound
mov
sbb
outs
push
into
addr16
xor
jmp
int
mov
les
pop
enter
push
cmp
sahf
leave
dec
std
(bad)
cdq
lods
mov
pop
movs
lahf
or
xchg
add
and
xchg
or
ins
push
mov
out
test
adc
dec
jns
sub
addr16
push
mov
sti
stos
cmp
cmp
mov
js
outs
push
mov
mov
or
adc
cmc
mov
mov
addr16
adc
in
arpl
push
inc
mov
ret
mov
inc
sub
add
cmp
int3
pop
test
pushw
ins
into
lods
fst
les
in
arpl
or
ficomp
test
cdq
out
iret
fimul
cmp
gs
std
jle
sbb
sub
into
xchg
pop
sar
mov
and
mov
push
clc
push
retf
jg
bound
mov
dec
int3
mov
jg
ret
push
pop
repnz
xor
lahf
pop
or
xchg
aas
lds
sbb
mov
gs
lods
fstp
arpl
dec
xchg
sub
mov
dec
xchg
ds
mov
mov
jle
push
popa
sbb
jae
punpcklbw
or
push
jp
enter
nop
sbb
lods
push
cmp
and
dec
cmps
pop
lock
cld
enter
jno
push
xchg
in
movzx
adc
push
aad
jno
fadd
ret
push
jbe
fidiv
inc
fwait
mov
jnp
dec
imul
push
jge
xor
xchg
adc
arpl
pushf
or
xchg
les
iret
nop
dec
xchg
add
outs
push
cmp
and
mov
push
pop
cmp
fcom
shr
fnstsw
fild
cs
or
pop
mov
cdq
xchg
sbb
pop
dec
cmp
mov
add
mov
cmps
jno
mov
mov
cmp
jb
pop
not
sub
adc
and
push
push
pushf
call
rcl
leave
push
jmp
push
dec
jge
jne
js
imul
test
sub
shl
out
popa
das
cmps
ins
(bad)
or
out
rsqrtps
mov
jbe
jne
daa
(bad)
(bad)
or
inc
mov
popa
adc
sahf
sub
xor
adc
mov
int3
xchg
cmps
std
daa
mov
mov
in
mov
or
jmp
or
rcr
out
jae
out
ret
pmulhw
push
sbb
mov
popaw
scas
cmps
out
in
(bad)
ror
mov
retf
sub
push
movs
std
cld
mov
stos
fld
idiv
(bad)
addr16
mov
sbb
aad
adc
cld
push
je
dec
fisubr
fild
push
mov
mov
pop
int3
sub
add
inc
cmps
add
push
sqrtps
and
or
add
loopne
lods
inc
or
jmp
mov
pushf
add
mov
retf
mul
aad
hlt
push
cmp
adc
mov
lahf
outs
mov
(bad)
and
dec
jp
(bad)
dec
sbb
inc
mov
mov
sub
popa
add
call
loop
push
ins
enter
imul
adc
xchg
and
mov
pop
stc
outs
sbb
mov
nop
mov
and
or
push
mov
jno
scas
repz
retf
in
xchg
adc
xchg
add
sub
out
push
call
cmp
std
dec
cwde
cld
mov
pop
icebp
push
popf
xchg
mov
add
inc
repnz
sbb
sub
xor
sub
mov
not
(bad)
mov
sub
pop
push
(bad)
rcr
pop
xchg
icebp
sub
sub
xor
pop
xchg
aad
(bad)
je
movs
(bad)
aas
stc
adc
add
dec
(bad)
dec
cmovnp
loop
mov
scas
cld
bound
sbb
test
fiadd
sub
in
cs
mov
sub
jmp
test
je
(bad)
retf
out
push
xchg
fidivr
cli
cmp
int3
jge
std
mov
stc
mov
aam
jae
retf
inc
pop
rcl
mov
in
std
aaa
ret
cmp
xor
aaa
add
add
jg
icebp
dec
data16
fadd
adc
out
in
jl
mov
stos
aam
and
ins
cmps
loop
sbb
jl
sbb
gs
xor
mov
cmp
adc
jecxz
dec
cld
and
xchg
inc
adc
jle
call
mov
mov
outs
retfw
pop
lahf
(bad)
stos
push
(bad)
xlat
dec
mov
inc
ret
push
push
mov
ins
data16
inc
xor
lea
call
inc
out
cmp
shl
lea
inc
mov
mov
adc
rol
faddp
mov
sahf
neg
push
lods
rcl
pop
or
fcomip
fmul
cmp
mov
sbb
call
loopne
jbe
dec
std
mov
mov
(bad)
jno
retf
or
xchg
xchg
sub
pop
push
fnsave
or
sbb
cmp
fstp
inc
cli
mov
jne
cmp
or
mov
push
mov
rcl
into
jl
fwait
in
stos
jmp
push
mov
jnp
outs
sub
ret
dec
xor
push
daa
bound
inc
mov
adc
add
jno
out
mov
jl
xor
aas
jl
sar
fcom
in
push
les
inc
fld
hlt
(bad)
fldcw
mov
push
sbb
cmp
ror
imul
(bad)
push
cli
xchg
sub
push
xor
cs
fs
pop
(bad)
jmp
mov
sub
mov
popf
aas
arpl
mov
clc
jno
push
cdq
stos
jnp
(bad)
lods
ret
cmp
dec
dec
cdq
jae
adc
mov
fadd
mov
jb
or
shr
pushf
outs
sahf
or
(bad)
jmp
jle
movs
das
lds
inc
jne
loop
das
imul
sbb
xchg
and
pop
pop
mov
jg
adc
pop
fdiv
clc
fidivr
xchg
pop
xor
dec
sub
mov
repz
test
stos
xor
enter
stc
loope
iret
xchg
dec
cwde
cmc
fidivr
je
fwait
das
add
cmc
and
repz
xchg
lods
cmc
aad
xchg
clc
nop
not
and
pop
and
pop
popf
enter
xlat
pushf
lock
or
mov
pop
sbb
rol
adc
or
stc
pop
enter
cmps
push
test
mov
cmps
pop
dec
(bad)
sti
mov
fiadd
adc
shl
and
jmp
aaa
cmp
sub
mov
push
add
inc
lods
jmp
pop
push
ret
cmp
mov
enter
pop
add
int
mov
dec
stos
js
push
dec
cmp
push
inc
loop
cli
or
(bad)
lock
test
and
mov
out
lods
retf
(bad)
sbb
in
(bad)
sub
inc
data16
mov
inc
out
inc
hlt
push
mov
ins
add
cld
vmovaps
or
sbb
and
xchg
fwait
cli
jno
xchg
push
cmp
add
js
and
imul
fcomp
xor
(bad)
in
jb
leave
push
daa
fdivp
scas
test
cmc
or
jns
jg
(bad)
sbb
xlat
inc
sbb
sti
fcmovnb
addr16
mov
movs
jbe
inc
mov
fwait
push
retf
xchg
les
fstp
pusha
ret
push
dec
repnz
pop
sub
xor
or
stos
xchg
sbb
inc
push
pushf
mov
inc
adc
mov
test
mov
into
inc
pop
adc
pop
inc
outs
dec
movs
and
out
jp
repz
xor
test
stos
(bad)
pop
mov
(bad)
push
jno
hlt
push
inc
adc
shl
dec
jmp
pop
dec
stos
and
push
pop
test
rcr
and
mov
(bad)
clc
pop
(bad)
hlt
push
(bad)
ror
out
int
in
fbld
call
dec
ror
inc
test
jl
in
xchg
loope
and
call
les
sub
jge
sub
cmp
push
mov
add
or
or
adc
cli
mov
xor
cmps
sbb
scas
push
mov
pop
push
or
call
addr16
xor
mov
mov
and
fld
adc
cmp
cld
js
add
mov
ficom
std
or
pusha
fisubr
lds
push
jbe
adc
fidivr
shl
sub
arpl
adc
les
jg
hlt
mov
jmp
scas
pop
test
in
not
je
jo
adc
pop
fcomp
and
in
fucomp
call
clc
sub
stos
jle
jnp
sti
js
push
repnz
call
rcl
pushw
inc
ret
or
inc
pop
test
inc
pusha
stos
movs
jge
data16
aam
inc
es
pop
movs
xchg
shl
push
jns
inc
dec
jbe
rcr
push
xor
in
mov
sti
mov
std
mov
xchg
pop
test
repnz
gs
jb
rol
stos
mov
ficomp
loope
fdiv
shl
xor
jle
and
aaa
pushf
cmps
mov
rcr
mov
adc
cld
fldcw
outs
mov
shr
xor
lods
jmp
ror
mov
push
inc
not
(bad)
push
sub
test
les
in
sbb
add
fisub
mov
or
loop
popa
in
pop
inc
add
fld
call
je
sbb
cmp
test
in
mov
pop
icebp
mov
inc
lds
int3
mov
stos
test
pushf
xchg
pop
sub
xor
pop
sahf
test
and
loop
imul
pop
retf
xchg
inc
ds
sub
(bad)
aaa
mov
addr16
adc
jo
iret
mov
cmp
ret
jmp
aaa
mov
imul
mov
inc
fmul
mov
(bad)
pop
movd
cld
and
cld
push
out
dec
aas
nop
mov
add
jo
mov
pop
dec
arpl
and
sub
mov
popa
mov
movs
push
hlt
pop
sbb
jl
mov
mov
je
mov
sbb
xlat
jp
or
mov
push
repz
jb
inc
mov
add
test
cmp
inc
(bad)
add
fst
mov
shl
(bad)
push
add
pusha
mov
mov
add
jbe
je
ss
fcomp
sahf
sbb
jbe
ret
jmp
mov
sbb
inc
xlat
mov
sub
and
mov
fild
mov
movs
dec
xchg
call
out
inc
loopne
retf
inc
mov
pop
(bad)
inc
pusha
mov
dec
pushf
retf
popa
push
mov
jp
scas
add
cs
mov
(bad)
mov
jp
aaa
call
jbe
mov
push
leave
sti
add
popa
mov
xchg
movs
ins
repnz
ds
pop
sub
shr
xchg
je
(bad)
mov
sbb
arpl
and
pop
xchg
xor
sbb
mov
scas
xchg
push
jp
xchg
hlt
adc
je
push
or
mov
cwde
popf
xor
pop
mov
add
lea
aad
js
jb
sub
xlat
rcl
cdq
mov
pop
movs
test
jmp
dec
push
jmp
add
retf
out
into
out
inc
xor
in
sub
lods
push
loopne
add
aas
mov
mov
sbb
cmp
aaa
pop
daa
jmp
xor
ror
mov
push
aad
(bad)
test
test
loope
pop
popa
jecxz
pop
ds
dec
cmp
js
cmc
inc
bound
movs
nop
addr16
test
mov
sub
call
test
dec
jl
mov
jecxz
mov
fadd
sub
add
ja
jo
ret
cmp
es
cmp
xchg
ss
or
fnsave
mov
mov
xor
jnp
add
cmps
jmp
(bad)
rcr
pop
pop
test
jmp
mov
mov
and
fist
and
xchg
xchg
mov
inc
sbb
mov
sbb
gs
(bad)
pop
ja
push
test
mov
imul
stos
loopne
inc
bound
scas
cdq
dec
(bad)
xlat
sbb
inc
push
stc
in
cdq
cli
mov
nop
movs
pop
(bad)
aam
imul
bound
(bad)
mov
fcom
ret
mov
xchg
ins
cwde
popf
add
mov
or
movs
dec
cmps
xchg
pusha
dec
int3
pushf
test
and
out
mov
test
stos
mov
je
rol
test
test
aaa
push
clc
leave
js
aas
shr
mov
xor
shl
push
adc
and
out
arpl
inc
jg
imul
enter
jns
cwde
int3
lods
adc
add
je
jmp
pusha
shl
xchg
sub
or
ds
ficom
mov
sbb
mov
bound
test
(bad)
ins
mov
ja
add
dec
adc
imul
mov
lods
movs
fnsave
call
aad
pop
mov
mov
adc
retf
inc
inc
iret
lods
xchg
jae
jo
sbb
add
jecxz
loop
pop
xchg
nop
popa
lods
mov
xor
mov
lds
aam
push
sub
std
aam
sub
leave
xor
outs
pop
mov
scas
xor
add
mov
enter
ins
cmp
mov
outs
cdq
retf
stos
pop
xchg
rcr
lods
fcmovbe
sub
or
jbe
leave
cld
jge
inc
push
and
je
call
jmp
std
cmp
or
jmp
shr
xchg
test
test
and
pop
out
enter
fsubrp
test
stos
xlat
out
sbb
movs
or
and
sbb
psubw
cdq
jns
sar
and
je
iret
mov
push
outs
jno
push
call
not
add
inc
into
adc
xor
pop
cmp
jmp
add
sahf
mov
es
inc
xchg
mov
enter
icebp
push
fwait
sub
je
cmc
lock
out
or
stos
mov
loop
pop
or
inc
pop
cmp
ins
jne
jmp
cdq
out
mov
mov
cmp
scas
add
in
icebp
cli
adc
loopne
push
cmp
adc
jmp
outs
hlt
mov
or
std
xlat
mov
lock
push
(bad)
(bad)
call
fwait
xchg
(bad)
adc
iret
cli
jmp
adc
fsub
stos
test
mov
pushf
inc
push
mov
jbe
adc
sti
jae
push
xor
sti
adc
mov
dec
scas
imul
out
or
mov
pop
inc
pushf
ret
outs
mov
add
fwait
add
js
pop
fs
adc
mov
fnstcw
and
es
mov
pop
loop
arpl
cdq
mov
cmps
cmp
ja
xchg
sub
mov
xchg
int
les
sbb
dec
push
xchg
inc
sub
cdq
sub
aam
or
lods
cwde
xor
scas
retf
adc
pusha
imul
inc
mov
or
push
and
and
jg
fld
pushf
loopne
xchg
xor
out
fdiv
xchg
push
dec
mov
loop
mov
(bad)
jno
scas
daa
xor
rcl
ja
xchg
movs
mov
fidivr
inc
xchg
data16
xor
jmp
movs
xor
xchg
bound
mov
in
mov
or
push
mov
leave
icebp
arpl
not
mov
jmp
(bad)
stos
adc
jns
xchg
jecxz
cli
loopne
dec
dec
sbb
dec
aaa
cmp
shr
mov
fwait
adc
out
xchg
cmp
hlt
imul
dec
dec
mov
nop
pushf
sub
outs
aaa
stos
mov
xchg
out
dec
cli
and
rcr
and
xchg
sub
jl
mov
test
pop
pop
pop
ins
inc
jns
mov
jnp
outs
mov
rol
ds
mov
inc
inc
dec
stc
sbb
movs
dec
pop
retf
outs
hlt
sbb
jle
add
jae
dec
dec
pop
mov
mov
jmp
add
fistp
sbb
and
pop
push
ja
jns
fidivr
push
(bad)
adc
mov
inc
inc
xchg
push
mov
aad
stc
add
inc
mov
cmp
mov
mov
mov
mov
call
aaa
enter
xor
out
outs
xor
data16
outs
lock
dec
imul
or
dec
sbb
stos
inc
stos
pop
rcr
ja
ds
movs
sub
xchg
adc
mov
and
popa
mov
add
scas
int3
in
adc
test
mov
mov
ins
or
dec
pusha
cmp
cmps
and
movs
ja
stc
stos
je
aad
(bad)
jo
in
xcrypt-ctr
cmps
pop
jbe
bound
adc
in
repz
adc
add
sahf
jl
xrelease
(bad)
sar
mov
adc
outs
cmovo
mov
lods
pop
stc
cwde
shl
xchg
sub
repnz
cmp
cmp
std
cmp
enter
push
movs
popf
stc
mov
ror
inc
in
mov
lds
xor
fldenv
cmp
xor
lock
rcr
pop
(bad)
sub
xchg
test
outs
jl
dec
sub
mov
in
xor
sbb
(bad)
leave
add
cld
adc
push
stc
icebp
jp
test
cld
or
xlat
dec
and
clc
rsqrtps
mov
and
out
test
mov
jbe
retf
jmp
fsub
out
bound
scas
or
and
ins
je
fisubr
add
mov
jge
test
(bad)
mov
xchg
test
lds
adc
cmp
outs
and
cmps
pop
pop
pop
cmp
xor
push
pop
in
icebp
pop
stc
lds
ins
jmp
pop
xchg
push
and
mov
sub
stc
into
adc
jo
mov
adc
jg
mov
ja
push
(bad)
jg
xchg
xlat
ret
popf
movs
cvtdq2ps
es
jns
pop
lds
clc
loop
dec
lds
inc
pusha
jge
pushw
cmp
scas
(bad)
sub
xor
test
xchg
ret
mov
adc
or
dec
fisub
cmp
jle
sbb
mov
lods
cmc
shl
or
and
call
aas
inc
cmps
lea
adc
mov
movs
sub
push
mov
iret
scas
nop
push
push
sti
call
enter
stos
adc
push
ss
sub
popa
iret
push
mov
pushf
aas
jp
mov
cdq
mov
jb
mov
(bad)
out
int
sbb
sbb
add
out
cmp
aad
inc
out
or
out
test
(bad)
rcl
cmp
(bad)
xlat
dec
cmp
inc
xor
int3
cmp
ror
retf
in
sahf
sbb
loopne
arpl
out
test
jecxz
cld
jge
push
mov
loopne
push
out
mov
jbe
ins
cmp
lock
cmps
and
inc
dec
cld
xchg
adc
xor
hlt
(bad)
cmp
mov
push
push
xchg
inc
ficom
xchg
jno
mov
adc
mov
dec
fist
mov
jns
sub
mov
mov
xor
in
mov
or
mov
fisttp
loopne
adc
jp
and
pop
jno
sub
pop
gs
mov
and
cs
jmp
cmps
pop
hlt
fadd
jmp
lock
pop
and
jg
mov
add
xchg
sub
int3
test
sub
js
repz
les
push
inc
jb
adc
adc
inc
les
aam
shl
aas
sbb
xchg
jecxz
or
push
and
aas
pushf
mov
cmp
mov
adc
mov
or
jnp
push
fisub
movs
sbb
call
cmp
pop
dec
or
cmp
loopne
std
xchg
pop
cmp
sbb
cmp
jmp
aaa
or
lods
xchg
fwait
dec
inc
add
add
inc
add
in
dec
dec
jl
jne
es
mov
fidiv
lds
aas
xchg
into
jne
or
mov
fsub
movs
push
jmp
ret
mov
cmp
inc
sbb
dec
push
sbb
(bad)
outs
fdiv
test
fwait
das
lock
mov
xchg
mov
(bad)
(bad)
and
dec
or
adc
and
xchg
scas
fwait
inc
in
mov
popf
and
mov
shl
lea
iret
xchg
fldl2t
jge
idiv
stc
cmp
popa
xchg
stos
movs
loop
dec
mov
or
ins
fcom
inc
adc
cmp
daa
mov
(bad)
inc
arpl
lds
pop
nop
add
mov
cmps
fisttp
and
lods
(bad)
push
adc
xor
retf
mov
add
push
call
push
cmps
jg
and
iret
pop
cld
add
mov
jge
jae
jmp
jne
in
push
sbb
pop
lea
dec
lahf
cwde
mov
rcr
outs
push
js
(bad)
dec
or
int3
push
cwde
pop
jae
enter
mov
fbstp
not
ja
push
imul
(bad)
cmps
leave
adc
adc
adc
std
(bad)
cmp
mov
(bad)
stc
xor
jno
stc
mov
rcl
jle
xchg
movs
push
fisttp
or
loop
push
sub
push
cmp
mov
cmps
or
sub
mov
popa
fcmovbe
ins
push
or
and
rcr
sbb
adc
out
in
jl
test
mov
cmp
dec
sti
push
loopne
jmp
pop
mov
popf
add
jecxz
das
sub
mov
dec
jbe
shl
ret
xor
jmp
dec
es
aaa
sahf
in
sub
xor
jg
int3
cs
enter
iret
cmps
mov
push
lods
pop
push
cmp
popf
mov
lods
dec
dec
int
pop
xlat
push
push
fidivr
mov
push
cli
cmp
aaa
in
push
pop
push
adc
adc
mov
push
pop
mov
pop
aam
jnp
and
je
es
loop
rol
repz
or
mov
repz
inc
out
pop
xor
sar
mov
mov
mov
push
(bad)
cs
mov
(bad)
inc
ficomp
fwait
pusha
xchg
pop
add
jl
jbe
jns
ret
adc
pop
es
pop
mov
jbe
out
sub
cmp
sub
dec
icebp
push
rcr
sti
cdq
push
popf
data16
push
in
retf
mov
and
jmp
inc
cmp
outs
icebp
push
aaa
(bad)
xchg
fsubrp
jp
addr16
loopne
loope
dec
out
add
mov
mov
test
imul
outs
test
and
xchg
mov
int
bound
or
test
sbb
mov
and
ins
hlt
adc
jmp
and
mov
test
adc
repnz
hlt
imul
jnp
mov
in
gs
and
inc
dec
mov
inc
lea
sbb
xor
jg
mov
mov
and
adc
cmp
addr16
ds
int
std
inc
jnp
or
ss
adc
or
pop
and
rcl
cmp
dec
ret
iret
sar
repnz
sti
(bad)
fld
mov
xchg
sub
mov
cs
mov
push
retf
das
pop
(bad)
sahf
dec
inc
out
dec
pop
ret
mov
repnz
jp
bound
jmp
in
fdivr
xor
fidiv
shr
dec
mov
imul
dec
sub
inc
sub
sar
popf
and
movs
mov
mov
push
pop
push
ins
push
jl
cdq
icebp
push
and
retf
imul
xchg
loope
sbb
sbb
rcr
movs
fsubr
rol
ins
retf
mov
add
push
mov
dec
xor
popf
dec
pop
mov
test
int3
mov
mov
lea
mov
or
ss
cmp
fmul
ins
call
ja
and
cmp
int
sbb
scas
pop
add
xchg
push
call
(bad)
in
add
dec
clc
popf
sbb
xor
xor
test
xor
push
in
cmc
pushf
ret
inc
pop
adc
jae
(bad)
in
jge
outs
sub
ins
dec
pushf
adc
pop
jl
jg
mov
push
cmp
pusha
int
data16
aam
mov
in
xchg
bound
inc
data16
or
mov
sbb
push
push
int3
rol
call
sub
jle
gs
pop
mul
dec
cmps
ins
mov
cmp
mov
scas
movaps
and
mov
stos
cld
icebp
mov
jl
fidivr
pushf
push
iret
push
adc
(bad)
or
loopne
aaa
nop
jbe
xor
xlat
xchg
dec
int3
or
sub
push
sbb
lods
push
xor
inc
mov
arpl
arpl
mov
or
(bad)
int3
mov
pop
test
dec
mov
imul
retf
pushf
sbb
xchg
retf
mov
cmc
fs
xchg
rcr
outs
sbb
sar
xlat
pop
gs
out
xor
xchg
pop
outs
in
mov
int3
push
or
jecxz
adc
data16
push
fadd
sub
(bad)
test
mov
xchg
add
cmp
fstp
pop
std
xor
lahf
adc
inc
cmp
dec
add
mov
push
cwde
pop
xchg
aaa
(bad)
addr16
push
push
cmp
mov
fcmovb
xor
addr16
out
out
jb
xchg
jecxz
mov
movs
inc
sub
jnp
rcr
mov
aas
mov
jl
(bad)
jg
je
jecxz
or
imul
and
pop
push
adc
int
mov
mov
push
and
mov
dec
out
ds
xchg
popa
mov
cmp
clc
aas
test
pusha
mov
outs
push
pop
xor
or
inc
aad
or
pop
mov
dec
dec
and
mov
mov
shr
cwde
cmp
sub
mov
lds
add
jne
or
bound
add
iret
dec
add
mov
stos
imul
dec
ja
pusha
pop
sysret
mov
aas
je
push
(bad)
test
(bad)
into
(bad)
stc
mov
or
dec
retf
pop
and
aaa
loop
sbb
xchg
out
mov
xchg
pop
scas
test
jecxz
add
jecxz
mov
jnp
jb
pushf
loopne
dec
in
retf
imul
cwde
jmp
pop
mov
je
or
pop
fldenv
pop
(bad)
into
push
rcl
stos
mov
loopne
jmp
rcr
pushf
add
test
aad
enter
cdq
les
dec
push
repz
cmc
test
push
xor
aaa
push
enter
mov
jne
aaa
sub
ins
xchg
pop
(bad)
in
jmp
pop
cmps
cmp
jae
jecxz
loopne
adc
cld
arpl
mov
cmp
inc
jmp
push
imul
mov
stos
pop
jl
pop
jnp
push
lahf
retf
shl
and
add
or
fisttp
adc
sbb
outs
pop
fwait
loop
pop
or
sub
rcr
inc
add
pop
sub
iret
repz
push
iret
outs
in
ret
pop
dec
test
imul
(bad)
iret
push
sbb
jecxz
cmovb
jp
sti
sub
jo
sub
cdq
(bad)
cli
lds
pop
cwde
mov
cli
out
cmc
ret
or
xchg
xchg
adc
jmp
and
(bad)
push
push
jmp
ret
icebp
dec
mov
stos
jne
pop
cmp
movs
xchg
pusha
add
bnd
shl
xchg
jne
scas
xchg
mov
sbb
xchg
xor
stc
stos
pusha
xchg
sbb
(bad)
xor
sub
sub
dec
std
push
popa
out
dec
sysexit
mov
mov
aaa
vmulps
cld
mov
test
(bad)
repnz
ins
jmp
fadd
pop
push
lea
pop
pop
sub
push
ds
sub
mul
dec
icebp
int3
inc
sub
jl
mov
mov
ficom
cmps
inc
sub
sbb
inc
aam
or
(bad)
mov
scas
mov
shr
(bad)
lock
fmul
sub
cmps
inc
dec
dec
and
lods
or
push
out
cmp
pop
gs
rcl
push
mov
mov
add
out
pusha
adc
sub
xchg
test
fucomi
(bad)
sbb
sub
test
dec
addr16
stos
daa
fnstsw
call
rcl
lds
push
pop
inc
inc
and
fst
daa
or
test
popf
sar
jmp
and
jp
xor
xor
mov
mov
icebp
push
pop
fdivr
lds
aam
(bad)
cmp
retf
sbb
sbb
xor
sahf
pop
dec
push
popf
enter
xchg
lahf
in
cmps
xor
stos
fsubr
test
lods
push
pop
inc
jb
loop
jae
je
adc
ret
sub
test
popa
stc
jge
lock
addr16
clc
in
scas
adc
jg
and
ds
je
xor
fmul
outs
and
dec
inc
xor
or
(bad)
push
dec
stc
rcr
test
outs
(bad)
mov
sbb
push
(bad)
dec
or
ja
cmp
mov
xor
mov
adc
sar
imul
in
not
(bad)
rcl
imul
loope
xchg
leave
push
int
push
out
into
iret
dec
popf
and
mov
push
call
push
lods
aam
fwait
int3
jo
sub
mov
leave
aas
pop
push
xchg
mov
leave
pop
out
inc
cwde
fisubr
in
(bad)
fdivr
lock
in
and
cli
adc
fdivr
out
push
fwait
pop
movs
mov
xchg
out
cmp
lods
div
inc
dec
das
add
mov
fwait
mov
inc
inc
inc
dec
bound
ins
jl
jb
sahf
sub
push
jnp
(bad)
mov
fmul
jae
sub
jl
data16
test
mov
ja
push
xor
add
arpl
xor
mov
pop
or
sbb
jns
push
(bad)
in
adc
jecxz
and
or
dec
add
hlt
fbstp
mov
ret
cmp
mov
pusha
xchg
cli
fsubr
push
jge
mov
mov
xor
and
jnp
leave
add
imul
test
mov
aas
cld
lea
call
neg
loop
mov
fidivr
dec
scas
mov
xor
imul
or
or
stc
jo
ja
mov
inc
cld
push
sub
cmp
nop
xchg
push
stc
cmps
pop
add
fsubr
dec
and
sbb
sub
mov
out
dec
out
and
push
or
cmps
jbe
cs
out
in
push
stc
inc
ins
push
test
pop
je
dec
scas
add
mov
test
test
fdivr
imul
fadd
(bad)
ffreep
js
test
jecxz
jl
sub
or
test
bound
cmps
cmp
movs
jo
pop
mov
or
jl
clc
jb
cmp
xchg
xchg
inc
lods
iret
dec
movs
ins
rcl
das
out
inc
fisttp
push
std
int3
jge
sbb
lods
inc
add
and
mov
ins
mov
sbb
jecxz
mov
dec
test
push
(bad)
cld
pop
out
aas
arpl
fisttp
mov
xor
dec
rdmsr
or
mov
jge
nop
aas
scas
jle
xchg
mov
dec
jge
test
jmp
adc
push
arpl
dec
add
or
repz
lods
cmp
cmp
jnp
ins
xor
lea
mov
jmp
out
cdq
int
jg
pop
push
pusha
movs
cmp
movs
push
in
fidiv
(bad)
mov
in
xchg
jp
mov
xchg
(bad)
rol
retf
pop
pop
shr
jg
lea
and
and
ss
dec
push
lods
cmc
loop
lea
mov
pusha
fdivr
sbb
add
push
mov
enter
and
arpl
add
lods
ret
push
mov
ror
cmp
test
dec
dec
ja
ror
xor
stos
bnd
pop
loop
xor
(bad)
(bad)
push
jl
int3
mov
push
sbb
cmp
mov
mov
push
dec
icebp
sahf
push
(bad)
les
repz
dec
cmp
jns
movs
push
je
lahf
cdq
mov
xor
inc
mov
mov
xor
mov
sub
int
push
jmp
js
pop
mov
jle
dec
sub
sub
(bad)
retf
sub
jle
(bad)
cli
mov
pop
sub
inc
and
mov
sahf
add
mov
jb
inc
and
out
dec
cmc
daa
lock
sub
jg
scas
stos
ror
or
or
imul
jp
mov
mov
xchg
push
jmp
dec
in
fsubr
dec
cli
test
call
inc
xchg
cmp
pushf
pop
dec
in
sub
call
pusha
cmps
cmp
mov
mov
mov
retf
mov
nop
jno
ins
cmp
sar
push
cwde
xchg
(bad)
dec
and
cmp
fldenv
cmps
jg
gs
cdq
bound
retf
imul
adc
dec
inc
lods
out
mov
cmp
movs
mov
shl
push
call
dec
daa
mov
cmc
retf
jmp
jl
push
or
inc
mov
xchg
clc
xor
xor
ds
lock
dec
outs
out
in
imul
add
les
cld
or
cmp
jbe
inc
inc
cli
inc
dec
adc
pop
cmc
mov
pop
jb
pmaxsw
pop
dec
sbb
scas
xor
int
sbb
jl
clc
cs
jg
sahf
arpl
dec
pushf
imul
xchg
sbb
enter
mov
or
out
or
mov
fwait
test
push
cs
jae
fdiv
fnstenv
pop
xchg
scas
add
outs
popf
jne
dec
xor
scas
ins
ror
dec
in
xor
aas
jmp
rcl
popa
call
cs
dec
cmp
shl
and
loopne
fiadd
pop
push
push
inc
cdq
mov
cli
and
sub
aas
lds
(bad)
inc
mov
adc
cmps
ja
push
cmp
pop
loopne
retf
ja
gs
mov
lds
scas
fs
(bad)
out
std
idiv
call
call
mov
fimul
popa
or
pop
popa
fwait
mov
fs
xor
xchg
sub
icebp
in
loopne
cdq
xchg
loope
mov
jecxz
cmp
inc
push
cmp
xchg
fstp
jle
(bad)
out
xor
or
ins
ins
jmp
out
inc
out
inc
or
mov
xor
adc
xor
(bad)
ret
lahf
data16
add
and
sbb
jno
popa
daa
adc
jp
pop
lahf
jo
cs
sti
jne
test
xchg
into
dec
or
xchg
icebp
out
in
mov
cdq
dec
ja
pop
enter
cmps
(bad)
sub
fidivr
and
es
jmp
out
inc
iret
rcl
sbb
mov
cmp
bound
int3
adc
jg
in
mov
add
inc
pop
lea
inc
das
clc
aad
add
ss
arpl
arpl
jecxz
retf
adc
adc
mov
dec
inc
mov
psrad
xor
and
es
les
cs
and
mov
cmp
addr16
fisttp
(bad)
sbb
mov
call
push
and
scas
hlt
vmovapd
test
sbb
push
ins
dec
not
inc
mov
sbb
clc
and
jnp
(bad)
pop
or
xor
cmps
dec
aad
inc
iret
daa
jne
sub
mov
sbb
cdq
jbe
cs
mov
dec
inc
enter
inc
pop
mov
rcr
adc
int
xor
sbb
jmp
jnp
mov
ror
dec
sahf
aaa
xor
add
push
out
mov
sub
leave
sub
and
pusha
ror
stos
jmp
sbb
lock
dec
ret
iret
push
mov
jo
mov
fwait
jecxz
push
sub
jg
inc
shl
mov
push
iret
shl
test
xchg
ds
(bad)
clc
mov
(bad)
inc
adc
shr
popa
mov
cmp
test
les
(bad)
stc
rcl
into
mov
push
xor
ds
cmc
inc
scas
mov
mov
adc
js
push
sub
inc
movs
mov
adc
inc
scas
inc
pop
adc
imul
inc
imul
dec
mov
mov
adc
sub
data16
repnz
je
loope
xchg
gs
sbb
retf
rcr
sbb
loope
fidivr
xchg
loop
loope
outs
data16
pop
cmps
imul
sbb
imul
dec
adc
movs
mov
in
lea
dec
stc
lods
xlat
scas
xchg
sbb
(bad)
pop
pop
cmp
sbb
(bad)
push
dec
push
int3
cs
je
nop
jnp
push
in
add
sub
mov
mov
sub
cmps
and
mov
adc
cmp
rcr
pushf
xchg
push
xchg
leave
adc
push
test
add
ja
push
fnsave
pushf
cld
push
(bad)
je
dec
out
add
and
dec
add
mov
(bad)
in
hlt
push
aaa
sub
xchg
ffreep
dec
or
lahf
push
dec
push
push
out
fimul
adc
and
add
popf
mov
mov
leave
jle
retf
mov
ja
cmp
das
cmp
ins
lods
imul
and
mov
out
shl
or
(bad)
gs
add
(bad)
nop
stos
xor
rol
bound
repz
push
mov
fdivr
cmp
mov
rcl
jmp
cmp
stos
sbb
mov
(bad)
int
add
inc
inc
add
xor
sahf
in
adc
fs
adc
popf
push
mov
mov
xor
push
sbb
ja
sub
xchg
std
or
sub
xchg
push
repnz
pop
sbb
mov
inc
cdq
aam
inc
sti
js
add
retf
ds
sub
sahf
push
daa
xor
inc
jmp
xor
std
clc
mov
adc
jg
jne
mov
pop
sbb
push
mov
inc
xchg
dec
dec
jbe
les
mov
ret
xchg
xor
cli
or
xor
cmp
push
je
mov
inc
or
bound
(bad)
sti
packuswb
repz
cmps
popf
rcr
mov
pushf
cmp
push
and
aas
mov
xor
dec
xor
imul
mov
mov
adc
xchg
outs
mov
or
dec
and
lea
and
pop
mov
push
and
add
inc
mov
cmc
jmp
outs
and
nop
jbe
and
cld
stos
jmp
scas
sbb
dec
pop
xor
test
mov
xchg
inc
pop
or
(bad)
dec
ja
add
test
mov
add
imul
inc
mov
in
inc
add
pop
es
imul
ror
fidivr
add
push
xchg
sbb
mov
popa
sbb
jns
(bad)
pop
mov
aaa
int3
fisttp
or
pop
sub
pop
test
xchg
jmp
fmul
cli
and
mov
out
inc
or
dec
scas
push
ret
in
in
xor
and
stos
ret
sub
aaa
mov
outs
ins
std
inc
movs
pop
pop
xor
pop
daa
movs
fistp
mov
ins
xor
sahf
and
ficomp
cmp
pop
xchg
int
cmps
(bad)
pop
fsub
pop
stos
mov
jmp
bound
mov
xchg
fcmovu
sbb
test
dec
loopne
repz
shl
imul
adc
inc
sbb
enter
xchg
int3
ja
sub
add
jle
or
jo
inc
fld
mov
not
jbe
cmc
hlt
ja
dec
push
inc
or
lods
loop
mov
jmp
fs
xchg
add
popa
(bad)
push
push
in
dec
(bad)
jmp
loop
fist
out
push
or
push
inc
int3
inc
test
ret
(bad)
cmps
jmp
and
sbb
(bad)
les
ds
dec
sar
cmc
cwde
push
lea
xor
or
xchg
or
xor
iret
sbb
jecxz
or
test
jbe
or
mov
xor
sub
lahf
lahf
out
in
int
dec
sbb
sbb
(bad)
adc
mov
inc
add
mov
xor
ss
sub
push
shl
cmp
inc
jnp
dec
cmc
pop
pop
cmps
xchg
pop
cmps
sub
cmp
aas
sbb
pop
mov
jnp
cmc
daa
jecxz
cs
jg
add
sbb
jbe
(bad)
and
movs
fucomi
icebp
jecxz
xor
(bad)
inc
int3
pusha
aad
cmp
jmp
add
adc
mov
sbb
push
add
int3
clc
adc
test
mov
dec
call
dec
call
in
xor
test
ins
fistp
repz
mov
cmp
add
jl
cmps
mov
sahf
jge
out
mov
nop
xor
mul
cmp
dec
js
enter
mov
sub
and
xchg
popa
fstp
out
out
cmps
mov
and
push
lahf
shl
test
ror
jge
sbb
in
(bad)
stos
dec
fild
popf
adc
xchg
scas
jo
imul
pop
dec
adc
gs
inc
stos
add
cs
mov
or
mov
jb
in
mov
scas
rol
sbb
add
xor
inc
pop
rcl
sti
aaa
in
jp
push
retf
jge
jmp
mov
cmc
in
or
or
push
fldcw
add
fdivr
push
push
stos
push
mov
inc
cwde
cs
push
(bad)
xor
cwde
call
or
cmc
ins
movs
cli
scas
pop
mov
push
push
cli
push
push
xchg
adc
nop
outs
or
les
cmp
mov
out
xchg
pop
int3
mov
fwait
hlt
movs
add
push
xchg
or
xchg
out
sahf
mov
clc
into
sbb
push
loope
mov
xchg
xchg
or
jbe
add
sbb
in
jge
xchg
nop
icebp
hlt
jle
dec
ss
adc
aaa
rcl
mov
sub
js
dec
mov
dec
stos
adc
cli
cmc
adc
or
mov
out
add
inc
and
and
int3
test
or
jmp
xor
push
retf
out
inc
aas
sub
cmps
test
outs
mov
mov
retf
xchg
adc
sub
int
shl
dec
lea
int3
imul
out
xchg
add
jmp
mov
cwde
sti
cmp
xor
jo
cmp
fwait
and
test
adc
mov
mov
add
fs
lahf
arpl
sahf
and
pushf
jg
mov
mov
popa
fistp
inc
outs
lock
adc
repnz
jno
jecxz
cmps
fwait
bound
push
mov
inc
jns
xchg
mov
push
dec
add
lock
jbe
(bad)
mov
out
jmp
fild
xor
xchg
jns
inc
mov
ins
cmps
xchg
iret
xor
(bad)
fnstsw
scas
pusha
out
repz
pop
or
adc
pop
scas
retf
mov
dec
lahf
jmp
ficomp
xor
xor
xor
ftst
sub
jecxz
sbb
cs
fistp
imul
sbb
cmps
cmp
push
das
mov
fisub
cld
sub
dec
xor
hlt
icebp
push
push
(bad)
cdq
test
int
(bad)
mov
xchg
adc
aas
xor
add
jg
dec
sbb
mov
icebp
dec
pop
inc
movs
push
clc
xchg
shl
gs
push
jns
ss
or
inc
or
adc
pop
jno
jmp
xchg
mov
retf
jge
cmc
xlat
ja
dec
addr16
rcl
adc
push
(bad)
jg
ret
add
data16
or
popa
mov
in
add
sub
pop
icebp
xor
lahf
ret
pop
test
shr
or
mov
std
icebp
inc
clc
(bad)
fwait
and
xor
shl
je
lods
and
sub
loopne
aad
xchg
clc
adc
int
xchg
mov
jp
push
call
sbb
push
sub
scas
jge
lahf
sub
imul
or
out
mov
mov
faddp
dec
push
ret
int3
sbb
ins
inc
sbb
xlat
mov
sbb
pop
es
inc
mov
xlat
retf
jns
lahf
mov
fwait
pop
je
out
leave
mov
mov
cmp
sbb
or
push
jno
into
call
out
push
retf
dec
fsubr
fidivr
sbb
xor
or
xor
sub
inc
jg
mov
cs
mov
shl
and
mov
movs
retf
adc
repnz
mov
imul
inc
outs
push
into
pop
xor
mov
cdq
or
jae
or
repz
push
inc
jo
xchg
mov
cmc
call
inc
xor
clc
xchg
je
cmp
add
jle
adc
or
out
loope
repnz
imul
cmps
sahf
mov
mov
outs
test
xlat
or
sub
popa
and
lock
sbb
lea
dec
(bad)
and
pusha
jp
and
out
repnz
add
gs
lea
clc
pop
or
es
(bad)
xchg
pop
shl
inc
mov
xchg
push
sub
hlt
push
pop
stos
enter
jae
push
test
jp
xchg
adc
jmp
mov
fidiv
sub
or
cwde
stos
and
adc
sahf
xchg
and
sub
mov
adc
or
mov
xchg
jb
aaa
jecxz
xor
mov
xchg
int
aad
int3
or
dec
sahf
fld
cmc
xor
add
mov
inc
ficomp
mov
sub
inc
mov
push
cmc
mov
or
ja
and
sub
cmp
pop
xchg
xor
pop
mov
jne
mov
mov
arpl
(bad)
inc
mov
aas
xlat
cld
adc
test
mov
pop
movs
mov
jg
popa
jo
mov
repnz
(bad)
int
mov
inc
in
mov
es
loop
jp
dec
mov
dec
cmp
xor
test
xchg
add
jne
jae
adc
or
nop
dec
xchg
mov
pop
add
pop
aam
xor
sar
ror
jne
push
mov
push
inc
xor
std
int3
imul
outs
push
loop
or
add
out
je
outs
mov
test
jno
movs
xchg
fucomip
cmp
push
xchg
pop
cmps
loope
cmc
mov
sbb
mov
mov
retf
cmp
inc
mov
loopne
push
daa
xchg
(bad)
xor
fs
cmp
or
pop
scas
push
or
aas
add
inc
stos
(bad)
mov
inc
(bad)
push
in
mov
adc
shr
mov
outs
adc
xlat
rcl
out
dec
and
xor
int3
addr16
iret
add
sahf
sub
rcl
dec
or
into
lods
xchg
repz
loopne
dec
mov
retf
sub
push
xor
fwait
push
and
jae
popa
cmps
iret
inc
add
leave
lock
int3
jg
outs
in
int3
psubsb
ins
xor
ss
lds
pop
stos
(bad)
push
xor
(bad)
push
test
ja
push
sub
sar
mov
mov
xor
sub
sbb
popa
in
or
pop
shl
clc
sbb
loope
jo
pop
xchg
popa
push
add
xlat
inc
shr
fistp
inc
mov
fbld
div
fwait
add
xchg
add
les
fwait
or
mov
jg
das
inc
(bad)
jb
retf
js
inc
dec
xchg
popa
jge
(bad)
xchg
or
xor
jbe
or
xchg
dec
lds
and
ret
mov
loope
shl
fdivr
std
inc
sub
mov
mov
fimul
nop
mov
mov
pop
imul
pop
fwait
scas
jle
fsub
jge
pop
scas
js
cmp
gs
cmp
retf
fisub
dec
jnp
cmp
or
je
push
jmp
fsub
pop
shl
dec
xor
in
and
in
sub
dec
stc
sub
xor
das
or
outs
in
in
mov
add
arpl
mov
das
add
xchg
jmp
sub
sbb
push
jbe
mov
mov
jl
adc
jmp
mov
xchg
pop
dec
push
mov
inc
idiv
pop
in
jg
or
retf
xchg
cs
cli
out
push
cli
dec
add
xchg
fcmovne
mov
inc
loopne
sub
add
cmp
shl
ja
mov
cmp
mov
xor
sahf
push
ja
loop
adc
cmp
mov
clc
movs
push
jo
std
call
xchg
or
shr
mov
cmp
dec
mov
sbb
and
shr
dec
inc
fdivr
mov
stos
cmp
popa
mov
in
mov
mov
ss
pop
pop
push
push
adc
fwait
dec
retf
in
push
xor
xchg
jp
or
and
fstp
clc
fwait
xchg
repz
add
jmp
es
xor
stc
test
xlat
cmps
retf
mov
mov
dec
mov
out
jno
pushf
shl
mov
mov
popa
jge
ss
sub
mov
ins
push
or
push
and
and
sahf
or
pop
mov
push
mov
push
jne
jne
mov
scas
out
cdq
pop
(bad)
adc
inc
mov
lods
(bad)
repz
or
lahf
xchg
or
mov
sti
cwde
mov
test
stos
scas
jbe
bound
sbb
pop
or
sub
in
test
inc
cwde
fstp
mov
fdivr
add
js
mov
cmp
and
call
mov
inc
push
pop
xchg
add
data16
rcl
jo
sbb
and
int
(bad)
je
div
aam
jg
cmp
in
jp
gs
fcomp
and
(bad)
shr
jp
push
movs
movs
push
xor
repz
inc
push
test
jmp
sar
adc
cmp
xchg
push
dec
or
jo
and
inc
inc
sbb
xchg
outs
jg
rcr
xchg
movs
mov
push
nop
aam
and
mov
stc
cmps
xor
jbe
or
cs
(bad)
jl
loopne
push
inc
sbb
(bad)
(bad)
ficom
jp
inc
es
ja
push
pop
xchg
mov
jb
scas
in
jge
enter
mov
sbb
mov
loopne
adc
ins
retf
sub
mov
jb
sbb
or
movs
pop
sub
cdq
lahf
data16
or
ja
shl
(bad)
dec
sub
cmp
das
mul
sbb
dec
pop
fsubr
pushf
enter
fdivr
adc
ret
mov
ss
sar
pop
add
push
push
dec
inc
dec
and
repz
mov
sahf
cmp
jae
push
push
xor
cld
ja
fcmovbe
cmp
cld
push
icebp
lea
das
dec
ja
cmc
push
sbb
ret
sub
cmc
ss
jl
(bad)
sti
jg
gs
ret
push
add
fisttp
int3
sub
movzx
adc
pop
sub
sahf
mov
pop
adc
retf
sbb
pop
dec
les
inc
lock
fdivr
pop
pop
repnz
mov
or
pop
scas
call
sub
mov
mov
add
lods
outs
mov
mov
(bad)
addr16
push
jg
add
cld
jp
es
sub
test
jl
loope
add
ret
push
cdq
xchg
push
cmp
sbb
or
mov
inc
mov
or
int3
lods
ficomp
mov
or
loop
pop
ficom
cwde
jbe
icebp
mov
(bad)
(bad)
mov
and
je
push
or
add
dec
xchg
lea
aad
mov
sub
hlt
and
loopne
js
bound
repnz
int
das
(bad)
out
add
ins
push
xor
into
mov
pop
cmp
icebp
adc
jbe
and
icebp
mov
shl
add
(bad)
cs
cmp
add
and
ret
movs
jmp
jo
xchg
ror
sbb
adc
or
imul
call
xor
and
xor
jae
sub
jmp
cmp
sub
mov
out
scas
icebp
in
inc
dec
xchg
xor
mul
in
adc
adc
or
test
rcr
cmp
xchg
in
adc
or
cmc
mov
ret
or
test
retf
sub
sbb
test
shr
cld
loopne
adc
jo
jle
pop
outs
jb
aad
fistp
rol
xor
mov
pop
pop
(bad)
pushf
iret
cmp
cmps
mov
mov
dec
aaa
enter
push
sbb
fisub
shl
in
daa
aaa
push
stos
leave
jns
inc
push
inc
push
leave
add
and
test
ficom
sbb
jae
mov
stc
test
inc
xchg
or
adc
sahf
pusha
clc
jl
cmp
mov
test
pop
jne
stc
sub
(bad)
int3
out
fistp
or
in
jno
dec
ins
inc
or
aam
(bad)
aad
jp
ret
add
je
xor
xchg
xchg
or
jmp
je
xchg
and
rol
outs
cmp
ret
cli
cmp
jae
push
sub
inc
jbe
jge
pop
jnp
lahf
pop
lahf
ins
out
imul
cmp
push
out
jl
jo
or
mov
and
mov
cmps
fwait
xlat
out
xor
bound
mov
and
movs
repz
in
jno
pop
jl
out
in
push
mov
imul
in
and
and
outs
bound
push
sti
mov
cmp
lea
cmovno
cmps
cmps
(bad)
fcmovbe
neg
push
in
cmp
push
div
sbb
mov
sahf
push
jae
mov
sub
add
pushf
mov
out
not
arpl
js
mov
dec
cmp
repz
add
mov
pop
sbb
pop
add
push
cmp
movs
push
xlat
jg
out
rcr
pop
or
out
ss
ins
outs
dec
out
jae
frstor
pop
imul
repz
dec
mov
dec
xchg
adc
loope
add
lds
cs
jp
(bad)
not
in
and
sbb
dec
(bad)
out
jl
xor
mov
mov
jecxz
inc
or
imul
push
sub
mov
mov
js
sahf
mov
pushf
aaa
sub
int
test
dec
nop
movs
fdivr
cdq
inc
and
or
ins
sub
cmp
rol
mov
hlt
adc
cdq
xor
loope
test
imul
hlt
and
xor
push
xchg
sub
cmp
pop
xor
mov
xor
push
dec
(bad)
addr16
leave
scas
pop
mov
dec
pop
mov
xchg
adc
pop
fsub
ins
in
and
jb
scas
fstp
int3
mov
pop
call
push
mov
(bad)
and
mov
enter
lods
adc
or
jno
test
addr16
lock
and
add
cmps
pop
pop
cmp
lods
(bad)
(bad)
add
stos
(bad)
sahf
mov
mov
int3
std
in
scas
frstor
add
xchg
imul
cwde
in
xchg
in
jge
cmp
mov
test
popf
xor
cmc
(bad)
in
xor
out
sbb
dec
out
push
(bad)
in
push
mov
push
mov
mov
ds
in
xor
inc
fnstenv
mov
in
ds
lock
xor
inc
cmp
mov
xor
(bad)
xor
fmul
xchg
fcomp
into
jle
sar
xor
sub
fistp
push
xchg
pop
pop
pop
cmp
lock
sbb
jae
outs
pop
daa
jecxz
push
jns
pushf
sbb
or
mov
cmc
out
push
push
mov
(bad)
leave
xchg
sbb
and
mov
push
cdq
test
push
mov
inc
(bad)
or
repnz
cmp
daa
sbb
std
and
movd
shr
jmp
cs
pop
shl
add
clc
jae
xchg
shl
mov
or
out
sbb
inc
ds
mov
call
adc
jmp
push
xor
cmp
mov
sub
test
mov
xlat
sub
neg
pop
inc
lock
std
pop
lods
retf
std
inc
mov
push
xor
mov
jmp
pop
retf
mov
les
or
mov
and
loope
fs
jae
ret
inc
fs
retf
leave
sbb
int3
adc
lods
int
jg
pop
aad
not
movs
sbb
xor
gs
or
jmp
sbb
xlat
(bad)
aas
push
jo
xor
or
scas
pop
les
daa
push
movs
stos
sub
xor
outs
fisttp
pop
out
push
jae
adc
mov
repz
lods
addr16
ds
adc
adc
lock
icebp
or
aaa
mov
int
movq
pop
dec
mov
test
icebp
out
popa
xlat
mov
mov
mov
sahf
and
rcr
imul
cmc
pminsw
das
aaa
jp
push
js
ret
add
movs
xor
jmp
(bad)
div
call
(bad)
mov
scas
pop
mov
popf
cmc
xchg
adc
mov
add
dec
mov
leave
mov
jnp
xor
aas
mov
in
pop
jno
mov
sbb
mov
mov
cmc
jae
hlt
lds
test
push
lods
nop
loopne
xlat
stos
fldcw
test
cmp
mov
pop
adc
xchg
push
lods
or
fs
add
out
jns
xor
js
cmp
dec
mov
mov
(bad)
pop
aad
jle
dec
or
cmps
mov
add
retf
cmc
mov
ja
(bad)
push
mov
mov
sbb
loop
inc
pop
cli
dec
cld
bound
out
mov
out
pop
popa
mov
mov
push
and
addr16
call
sub
out
adc
xchg
cwde
mov
retf
aaa
add
retf
add
adc
pop
test
push
stos
lahf
inc
(bad)
out
test
add
and
rol
adc
or
mov
mov
push
sub
cwde
cdq
imul
fwait
ins
nop
mul
loope
jae
or
ficom
sahf
sar
movs
inc
pop
jg
hlt
push
sti
scas
in
test
dec
pop
cmp
mov
sub
or
nop
or
gs
outs
or
jge
mov
shl
jne
pop
(bad)
cmc
and
mov
aam
ds
test
movs
clc
cwde
(bad)
sub
sub
cli
mov
sbb
mov
int3
jmp
retf
xchg
stos
xor
cmp
ja
data16
lds
inc
inc
inc
or
repnz
cld
push
jbe
cmps
inc
lods
lahf
loope
int
mov
cmp
cmps
mov
push
pop
xchg
std
loope
std
sbb
sbb
fwait
ins
movs
fcmovnb
or
mov
dec
cmp
pop
or
aas
jg
sub
push
add
mov
fistp
dec
jge
fs
bound
jmp
in
mov
push
bnd
sbb
mov
stos
test
add
push
pop
inc
add
ss
or
popa
xchg
mov
enter
ins
sbb
pop
xlat
cld
out
push
cmps
xlat
inc
(bad)
pop
inc
inc
mov
mov
sub
out
aas
out
cmp
inc
push
xor
or
sahf
cld
ss
mov
arpl
inc
pop
mov
adc
ret
test
mov
and
les
inc
cmp
xor
sub
jnp
sbb
ins
les
pop
mov
repz
retf
mov
mov
leave
outs
sbb
fscale
cmp
out
push
out
jmp
and
mov
loop
sub
xchg
cmp
ins
test
std
or
inc
inc
popf
and
and
ror
in
test
scas
sbb
out
popa
jo
movs
in
dec
daa
mov
xchg
jp
push
sbb
or
cmp
adc
add
mov
movs
retf
jecxz
pop
jp
lods
ss
repz
xor
cmp
cdq
mov
mov
inc
cwde
push
mov
lea
cmp
pushf
cmc
retf
mov
adc
or
push
cld
dec
inc
sbb
and
jle
add
into
ds
sar
xchg
cdq
sbb
cdq
fs
mov
lods
fadd
xchg
nop
push
pop
inc
aas
sbb
je
mov
sub
jae
add
mov
mov
push
mov
xchg
sbb
sub
out
mov
xchg
pusha
into
leave
cs
popa
iret
dec
adc
daa
sbb
das
sub
test
out
or
dec
fwait
aas
xor
loopne
je
js
fld
push
scas
outs
adc
add
lods
mov
xor
pop
pop
add
shl
mov
call
sbb
sub
jo
add
ins
pop
xchg
pop
imul
into
mov
dec
je
stos
inc
dec
pushf
pop
loope
sbb
pop
inc
jno
test
xchg
sub
or
sbb
sti
push
mov
ss
lahf
mov
xor
outs
pop
sub
(bad)
ror
add
jmp
pop
fidivr
push
jp
out
int
(bad)
aas
repnz
push
in
es
push
or
jge
mov
fisttp
fild
or
or
xor
and
icebp
les
mov
inc
mov
xlat
(bad)
int3
or
in
xchg
lods
xor
lods
pusha
lods
bound
stos
xor
push
jno
bound
jno
(bad)
cmp
mov
sbb
leave
or
lds
(bad)
jns
add
inc
fwait
add
in
inc
mov
aas
mov
mov
nop
push
adc
cmp
or
arpl
cmc
add
pop
sub
test
mov
data16
nop
test
lock
push
add
popf
test
mov
sti
stos
pop
loopne
das
add
mov
dec
mov
dec
jne
push
ds
xchg
mov
test
mov
stc
mov
jg
inc
loope
dec
mov
inc
popf
icebp
out
lods
mov
lds
add
cmp
cmc
or
ja
loope
push
or
mov
jg
sub
adc
cwde
in
xchg
aas
out
fist
fucomi
imul
mov
outs
jbe
lea
xor
data16
jp
mov
push
mov
movs
sub
int3
movs
pop
loop
stos
sub
and
hlt
mov
loopne
mov
adc
(bad)
add
dec
pop
les
sub
cwde
mov
push
add
xor
mov
inc
pop
arpl
dec
xchg
retf
cmp
sub
mov
mov
pushf
and
jbe
mov
fcomp
ins
jno
push
mov
es
push
dec
lods
push
xchg
(bad)
nop
icebp
enter
mov
js
not
popa
cmp
icebp
pop
jge
add
aas
mov
bound
fmulp
add
or
pop
mov
test
or
mov
and
movs
pop
fidiv
mov
jbe
popa
jnp
mov
or
mov
jmp
sub
fst
jno
mov
fcomp
inc
sub
push
stc
scas
jl
imul
lea
xchg
xchg
shr
and
inc
jmp
xor
outs
cli
or
add
dec
mov
repnz
ror
in
(bad)
xchg
test
and
repnz
retf
mov
bound
jmp
arpl
pop
jp
xchg
adc
dec
std
adc
mov
cmp
outs
jmp
adc
test
push
lods
inc
or
cmp
jae
mov
fsubrp
and
dec
data16
and
xchg
mov
pop
jmp
inc
neg
cdq
movs
xor
or
mov
(bad)
pop
dec
movs
ret
mov
mov
imul
popf
icebp
inc
mov
cwde
fldpi
xchg
in
(bad)
jmp
pop
mov
(bad)
push
mov
test
sub
mov
xchg
xlat
ss
pop
add
rcl
aad
adc
xor
test
shl
mov
add
inc
inc
rcr
pop
mov
fwait
xchg
jnp
test
mov
lods
ror
(bad)
sbb
fist
jbe
sub
sub
lahf
jmp
cmc
(bad)
jmp
and
enter
mov
ins
dec
adc
scas
out
lods
(bad)
dec
outs
outs
faddp
xor
lock
add
push
scas
fs
movs
add
aam
enter
(bad)
scas
mov
rcr
add
push
xor
and
movs
sbb
jbe
push
or
jbe
inc
jmp
mov
fcomp
jns
js
fdivr
repz
mov
mov
mov
jns
dec
imul
mov
or
ds
mov
push
dec
shl
cmp
stos
sub
pop
xchg
pop
aad
mov
mov
mov
mov
adc
pusha
sub
adc
pop
pop
sti
movs
push
sbb
push
lods
sahf
test
and
cmps
(bad)
mov
xor
push
cmc
aas
inc
mov
xchg
movs
xchg
mov
loope
cdq
test
dec
mov
mov
rol
dec
cld
hlt
xor
or
ror
jns
pop
jecxz
xchg
outs
icebp
inc
push
movs
pop
mov
mov
shr
and
sub
fbld
xchg
scas
push
in
xchg
test
sub
icebp
xor
sbb
or
inc
setp
test
jecxz
nop
ja
and
inc
rol
jge
imul
mov
or
dec
fld
pop
gs
pop
cmp
neg
jmp
enter
sub
jmp
xchg
sbb
push
inc
les
outs
cmp
pop
call
(bad)
xchg
mov
stos
pop
push
int3
xor
push
aaa
adc
mov
daa
test
imul
dec
xchg
mov
dec
iret
push
jp
pop
ror
mov
push
(bad)
inc
into
movs
mov
aas
fnsave
dec
clc
imul
fnstcw
mov
in
fbld
stos
(bad)
adc
scas
sub
pop
inc
pop
nop
push
stos
add
cdq
enter
call
add
xor
dec
mov
add
(bad)
xor
xchg
push
fcom
retf
xchg
sub
adc
les
cdq
and
cdq
dec
inc
je
stos
jecxz
mov
jmp
mov
in
pop
mov
int
or
mov
(bad)
enter
xchg
jb
sbb
pusha
inc
sbb
add
add
imul
and
std
lods
or
pop
mov
imul
adc
sbb
mov
pop
rcl
movs
mov
sub
in
ror
adc
inc
scas
lea
jno
add
xchg
imul
pop
(bad)
mov
retf
fidiv
add
dec
push
std
mov
dec
push
repz
stos
push
push
inc
push
inc
lock
pop
pop
cli
mov
inc
std
inc
aad
sub
pop
retf
shl
ret
mov
int3
je
sbb
mov
retf
imul
add
push
rol
rep
and
jp
cwde
sti
std
cmp
imul
adc
fld
cmp
xor
retf
xchg
sub
jmp
cmp
addr16
and
sar
shr
call
shl
mov
xchg
xor
loopne
popa
das
repnz
ins
push
adc
shl
sub
clc
dec
inc
dec
cmp
mov
jmp
add
inc
pop
xor
outs
and
inc
sub
xchg
imul
adc
cs
ja
aad
sbb
movs
mov
inc
jge
rol
add
fidivr
(bad)
or
mov
stos
js
cmc
mov
and
jge
mov
jg
stos
push
rcl
xor
and
mov
jo
mov
fimul
scas
mov
and
(bad)
ja
dec
cmp
inc
jmp
into
fwait
add
and
cmps
mov
mov
sbb
jae
lods
inc
lods
cli
in
xchg
jecxz
aas
repnz
pop
shl
in
push
jmp
js
rcl
mov
sbb
sbb
pop
pop
xrelease
dec
inc
push
push
and
cld
cs
sti
xor
cli
leave
div
jne
mov
or
out
test
jmp
mov
std
xchg
inc
and
and
movs
pushf
imul
adc
xchg
or
jmp
sub
cmp
sar
mov
jno
in
jge
test
and
dec
mov
scas
xchg
jbe
repz
sbb
outs
shl
iret
push
mov
ficomp
pop
(bad)
xor
adc
add
arpl
test
xchg
sub
dec
sbb
mov
rcl
dec
lods
inc
add
imul
dec
sub
xchg
pop
xchg
inc
ror
adc
jecxz
daa
add
inc
mov
imul
mov
fsub
in
sub
xchg
stc
mov
cmp
cmp
mov
and
sahf
xchg
jecxz
std
sub
inc
fs
lods
mov
mov
xchg
mov
xlat
push
adc
int
fs
leave
lds
lock
inc
cmc
inc
adc
lods
test
pop
mov
dec
add
hlt
pusha
(bad)
mov
inc
push
das
jecxz
cwde
aad
add
push
cmps
pop
sbb
scas
mov
jo
cwde
dec
lea
mov
jmp
push
jg
mov
mov
addr16
sbb
xchg
pop
aam
sar
in
adc
sti
pop
mov
dec
sbb
arpl
sbb
sub
addr16
inc
sbb
ins
add
frstor
pop
(bad)
ja
inc
movs
std
in
add
pop
mov
scas
sbb
cmp
adc
adc
fidivr
adc
mov
jno
cmp
inc
pop
es
ret
cmps
dec
sub
fs
test
adc
stos
out
sbb
mov
repz
mov
rcl
dec
dec
push
and
pop
movs
sbb
ss
icebp
add
lea
adc
in
adc
stos
mov
out
sahf
pusha
cli
aam
jl
mov
pop
mov
pop
into
jmp
arpl
js
push
out
daa
jge
mov
push
shl
jge
adc
retf
popf
mov
jnp
adc
movs
in
rcr
mov
pop
cli
sub
cmp
call
enter
xor
add
ret
push
ret
fisttp
push
dec
cmc
popf
dec
outs
or
test
mov
push
push
sub
mov
in
jnp
outs
sub
pop
icebp
or
cmp
dec
sub
aaa
aam
ins
inc
sahf
jbe
popf
jae
rol
sbb
rcr
inc
retf
pop
jmp
rcl
cmp
adc
adc
xchg
gs
sar
in
rcr
mov
dec
nop
or
(bad)
push
stos
push
push
add
add
bnd
ret
test
inc
je
fcmove
jbe
push
outs
sub
mov
ins
mov
rcr
js
mov
in
pop
jmp
mov
test
repz
test
psubd
jb
(bad)
clc
and
push
fstp
push
in
jbe
and
cwde
(bad)
fist
pop
test
jne
inc
sar
mov
jmp
dec
leave
mov
loope
je
and
bound
xor
imul
push
int
push
xlat
shr
add
out
cdq
xchg
inc
out
(bad)
in
sub
inc
jl
les
lahf
and
pusha
movs
stos
mov
mov
mov
push
rol
inc
xor
call
or
test
ja
push
and
dec
inc
iret
cmp
and
sub
ror
mov
scas
add
ja
int
scas
cmp
cmps
std
les
push
ret
sub
je
add
or
popa
sub
fmul
shl
scas
mov
cdq
imul
push
(bad)
mov
imul
xor
mov
push
dec
pushf
loop
mov
dec
cli
sbb
jne
inc
mov
out
nop
stos
bound
movs
into
out
js
scas
inc
fs
lahf
jp
out
pop
(bad)
out
sub
xchg
jp
(bad)
cmps
(bad)
dec
lods
xchg
sbb
pop
cmp
pop
xor
xchg
daa
dec
pushf
dec
lock
and
or
cmps
daa
int3
mov
xchg
pop
nop
dec
add
stc
mov
nop
pop
dec
(bad)
gs
(bad)
jmp
call
loope
loop
shr
jecxz
mov
stos
xor
repz
jns
retf
cli
cmc
aam
mov
xor
cwde
fst
shl
cmc
test
sbb
(bad)
jg
jge
(bad)
pusha
fwait
les
cli
movs
xor
or
push
sub
or
mov
mov
mov
pop
stos
in
in
(bad)
adc
mov
sub
inc
in
ja
mov
ret
push
aam
outs
retf
fldz
add
xchg
aad
push
in
cmp
fmul
mov
and
xchg
push
sub
jl
addr16
pop
inc
fst
xchg
fdivr
je
(bad)
cmp
popf
cmp
pop
inc
adc
pop
jne
pop
sbb
push
shl
xchg
mov
adc
ret
lock
imul
je
inc
sub
xchg
xor
std
ret
ret
enter
fisubr
jp
adc
adc
xchg
mov
sbb
sbb
push
cld
movs
packsswb
xor
jbe
dec
test
sbb
pop
stos
cli
and
xlat
jmp
and
ss
and
shl
fisub
loopne
mov
loop
scas
push
or
push
push
mov
pop
es
in
adc
call
mov
inc
out
and
cmc
cdq
mov
shl
jns
xor
retf
xchg
mov
adc
mov
hlt
ins
cmp
icebp
mov
xchg
jnp
sahf
sbb
push
daa
xchg
jp
jp
jno
clc
inc
mov
enter
dec
div
dec
jno
adc
push
push
xchg
push
stc
test
cld
inc
ror
dec
data16
push
mov
mov
test
mov
daa
repz
adc
stos
add
test
retf
jns
adc
call
mov
jno
daa
mov
adc
jno
push
daa
loopne
mov
xchg
out
and
jno
dec
out
ror
or
sahf
cwde
js
fwait
push
ret
lds
xchg
jbe
jge
jmp
add
push
bound
outs
xor
cli
xchg
mov
scas
movs
(bad)
and
pop
retf
out
adc
popf
pop
sub
ret
addr16
sub
and
movs
test
fstp
xchg
iret
clc
add
pop
or
jo
sub
xor
sub
or
inc
sub
fmulp
dec
out
cs
adc
jl
mov
mov
hlt
xor
or
icebp
push
jnp
cld
cwde
adc
xlat
dec
xchg
shr
push
(bad)
les
jg
inc
mov
jno
pop
sbb
xchg
scas
mov
test
retf
mov
adc
fisub
aad
mov
test
xchg
inc
jno
mov
cmc
jbe
ja
sub
add
fsubr
out
sbb
test
fisttp
ds
dec
mov
jb
xor
push
ret
js
out
xlat
jo
adc
not
xchg
push
(bad)
pusha
scas
mov
jmp
jns
popa
imul
pop
sub
adc
and
mov
adc
jl
lock
xchg
or
cmps
push
cmp
out
jecxz
xchg
dec
inc
cmp
and
push
daa
dec
stc
out
xchg
aaa
or
jo
push
arpl
cld
mov
adc
mov
jbe
ins
aad
pop
out
fsubr
test
stos
xchg
sbb
sahf
jns
add
jp
push
mov
and
std
dec
cwde
imul
lea
mov
push
(bad)
ss
aas
out
jle
jmp
stos
lods
cmc
sbb
and
loope
loop
aaa
aad
mov
into
push
mov
iret
jge
adc
cs
mov
outs
cmp
and
cmps
mov
adc
test
jnp
ins
add
fsubr
clc
enter
lahf
jmp
rol
psubsw
jge
add
leave
cmp
mov
int3
xlat
cmc
ret
mov
pusha
iret
jle
jmp
add
test
ja
test
or
mov
xchg
and
cdq
pop
mov
or
movs
and
std
jg
in
xchg
sbb
mov
sahf
fild
mov
dec
inc
pop
es
jge
or
and
xor
and
adc
test
xchg
mov
mov
mov
loop
xchg
in
fadd
push
cmps
scas
inc
test
sub
add
jno
mov
cmp
imul
xlat
mov
add
xchg
adc
rcl
movs
cmp
ret
mov
sub
out
xchg
cmp
(bad)
fldcw
jl
pop
sbb
dec
xchg
stc
cmp
lods
push
add
push
sbb
fbstp
fcom
test
jl
es
sbb
jns
and
jle
adc
rcl
cs
pop
and
cmp
mov
mov
fwait
sbb
leave
into
sbb
cmp
jnp
mov
dec
pop
jbe
mov
or
push
mov
in
cli
fnstenv
jp
cld
jmp
mov
and
cmps
mov
sub
int
div
jb
xlat
test
sub
ror
mov
jns
push
mov
push
(bad)
cmc
and
mov
aas
(bad)
xlat
repnz
sbb
mov
mov
ja
xchg
xor
dec
loope
ficom
rcl
retf
push
lea
inc
dec
mov
sbb
push
or
out
(bad)
test
dec
test
shl
mov
fwait
test
push
aam
cmp
cmp
and
jae
(bad)
cmp
sbb
jmp
mov
pop
dec
sti
retf
push
push
cld
cs
aam
movs
xchg
cmp
fimul
push
in
stos
call
lock
mov
ins
jns
aaa
(bad)
jecxz
pusha
pop
cli
cmp
(bad)
loop
push
bound
js
adc
mov
and
pop
push
fisttp
pop
sub
shr
jmp
fs
mov
and
and
inc
arpl
sbb
rol
fdivr
sbb
bound
test
sbb
sahf
cmps
mov
jmp
pop
shr
jo
int3
and
les
(bad)
or
jbe
jecxz
fs
cmp
outs
sbb
mov
das
sub
call
jmp
xchg
add
sub
mov
in
jge
sqrtps
lods
pop
shl
sub
jbe
icebp
lods
retf
pop
or
sbb
cmc
pushf
idiv
(bad)
pop
xchg
xchg
jne
sub
inc
out
out
mov
pop
mov
jle
call
jb
jae
xor
pop
imul
push
jno
(bad)
ret
nop
cmp
and
cwde
push
call
ja
sub
cwde
jns
or
outs
inc
cmp
repnz
mov
sub
aaa
fldl2t
pop
dec
push
pop
pop
push
add
inc
push
test
jo
cs
lods
cmps
(bad)
(bad)
pop
inc
ds
pop
fcmovbe
mov
lods
jns
sub
hlt
lahf
mov
pop
rcr
mov
push
cmps
cmp
sub
into
sbb
ficomp
rcr
sub
pop
je
inc
jg
adc
xchg
jp
inc
jnp
shl
jo
xor
jne
aaa
ins
not
or
mov
ins
lds
jo
pop
inc
mov
cdq
mov
stc
pop
sub
mov
mov
add
push
jb
inc
ds
mov
add
sub
stos
repz
xchg
push
jle
ins
retf
fbstp
jmp
xchg
sbb
push
ins
lods
mov
pop
add
out
xor
popa
cmc
ins
and
add
js
call
cmp
daa
mov
mov
iret
mov
popa
pop
sbb
mov
call
dec
idiv
adc
gs
addr16
jge
jb
nop
gs
ret
inc
in
mov
rcl
pop
cmps
bound
push
inc
push
test
outs
cmp
mov
push
inc
pop
in
inc
xchg
fs
adc
jl
int
xor
scas
jecxz
fsubp
retf
xchg
mul
imul
sub
sahf
cld
(bad)
xchg
(bad)
pop
(bad)
int
popa
imul
movs
jne
cmc
mov
or
xchg
push
cli
scas
jge
pop
jb
leave
pop
imul
mov
pop
iret
clc
mov
xchg
and
arpl
jmp
jo
pop
movs
cmp
sbb
jge
mov
jl
cmp
and
out
sti
es
jo
cmp
dec
(bad)
cdq
cwde
aas
sbb
ins
lock
aam
jmp
loopne
scas
clc
jmp
(bad)
bsf
imul
in
and
ins
xchg
dec
cmp
pop
cmps
push
bound
mov
test
xor
(bad)
imul
stos
fadd
xlat
dec
jecxz
push
mov
pop
pop
push
(bad)
(bad)
aam
add
clc
and
pop
out
lods
cmp
cmp
lods
dec
pop
cs
in
xor
aas
repz
cmp
repz
shl
dec
cmp
mov
sbb
dec
xchg
sbb
cmp
mov
jo
ja
sub
mov
fiadd
das
psubd
mov
bound
and
popf
aaa
shl
push
(bad)
aad
mov
and
push
loop
fwait
leave
cmps
and
adc
mov
jge
push
(bad)
rol
jecxz
retf
jo
mov
and
push
and
popf
leave
lea
sbb
or
test
lods
fst
mov
stc
adc
js
add
cmp
push
pop
sbb
rol
or
ja
pop
ss
mov
mov
mov
pushf
bound
fsubr
gs
mov
(bad)
pop
(bad)
mov
popa
jp
mov
mov
sbb
add
or
cmp
xchg
(bad)
push
(bad)
sub
jnp
sbb
hlt
push
mov
(bad)
jnp
addr16
mov
lods
sbb
enter
test
mov
nop
xor
pusha
cmp
adc
lds
nop
clc
dec
xlat
fisttp
sub
rcr
shl
push
push
in
(bad)
arpl
xchg
out
cdq
adc
sub
sahf
nop
sbb
fiadd
movs
stc
sbb
mov
add
ror
das
je
das
retf
mov
loop
in
test
and
dec
movs
or
movs
pop
push
add
xor
(bad)
push
cli
outs
in
movzx
or
ja
cmc
mov
out
jle
push
mov
aas
xchg
inc
scas
mov
mov
jnp
cmc
addr16
in
ins
sti
and
adc
fst
ret
mov
addr16
adc
xor
lods
rcl
xchg
inc
push
xchg
test
sub
in
push
lahf
pop
shr
jno
sbb
mov
out
xchg
jmp
mov
sub
adc
in
nop
mov
pop
lfs
mov
das
shl
das
sar
aam
fist
mov
add
aad
movs
adc
jo
push
inc
or
mov
or
xor
test
mov
icebp
mov
xchg
dec
data16
lods
fyl2x
dec
test
enter
ror
test
test
fsubp
cs
cmp
ins
setno
bound
lds
popf
mov
aam
sub
cmp
adc
jno
and
sub
fs
outs
or
xor
or
dec
or
daa
sahf
mov
mov
jne
sahf
adc
push
jg
dec
push
std
cs
ss
adc
cmp
test
sbb
int3
push
in
xchg
fwait
inc
add
mov
shl
push
jp
adc
push
in
dec
lahf
shr
xchg
jne
push
xor
loope
inc
adc
retf
das
xchg
add
scas
data16
dec
mov
movs
stos
pop
repz
cli
or
test
push
in
ds
jb
aad
std
ret
or
or
movs
in
arpl
cmp
adc
addr16
fild
cmp
call
stc
mov
dec
xlat
(bad)
cli
mov
mov
(bad)
cmps
dec
es
jp
cmp
out
ret
inc
(bad)
jmp
fld
sbb
(bad)
mov
jb
jmp
lods
cs
mov
cmps
or
fld
and
mov
rol
ja
leave
pop
push
call
push
(bad)
ror
rcl
shl
stos
jmp
pushf
dec
xchg
je
ja
mov
rcr
inc
lods
inc
aad
mov
ja
out
jl
shl
sub
imul
imul
jecxz
add
push
jne
movs
sbb
mov
in
mov
jmp
and
cs
jle
daa
xlat
lods
pushf
or
xchg
ins
(bad)
mov
stos
sbb
pop
push
jge
xor
cmc
mov
push
mov
or
mov
xchg
popf
ret
(bad)
fisubr
mov
sbb
fst
dec
inc
jb
test
mov
(bad)
jecxz
jecxz
cdq
inc
cmps
mov
nop
add
adc
pop
stc
mov
sbb
(bad)
or
and
add
ja
jnp
mov
lock
ss
xor
jbe
xchg
outs
sahf
dec
scas
adc
enter
pop
xchg
or
ror
mov
adc
sub
out
retf
push
(bad)
xor
ja
jmp
lds
cmp
push
fidiv
add
scas
loop
dec
fisttp
cs
pop
cwde
data16
sbb
jno
push
sub
mov
(bad)
(bad)
in
in
or
imul
imul
add
popa
mov
jg
retf
mov
and
inc
loopne
xchg
mov
bound
(bad)
jge
stos
loop
loopne
mov
loopne
add
add
push
push
mov
xchg
outs
ret
fadd
sub
mov
repz
sbb
sbb
ret
inc
or
dec
pop
sbb
mov
push
push
lea
ret
adc
xlat
push
jne
aad
cdq
cmp
cmp
imul
into
jae
fcmovne
push
test
stos
jg
in
xor
mov
adc
pop
jp
xchg
(bad)
pushf
dec
add
inc
out
stc
in
jne
mov
out
int
jnp
mov
cmp
stc
cmp
xor
mov
jmp
pop
sbb
or
add
mov
and
or
nop
adc
sub
pop
jae
sub
adc
pop
daa
fisttp
adc
mov
jp
pop
pop
jo
mov
jo
xchg
lods
dec
and
cmp
xor
stc
ins
call
push
jle
sbb
nop
dec
mov
movs
stos
jns
out
fnstcw
xor
pop
mov
sub
mov
cmp
fdivr
sbb
cmps
jge
sub
gs
stos
cld
aaa
jp
addr16
pop
jo
xor
les
into
jl
push
lods
aaa
and
arpl
dec
test
scas
imul
dec
xor
lea
lea
fcmovnu
sub
cwde
mov
mov
repnz
ins
pmulhw
pop
xor
sub
(bad)
loop
pushf
cmp
inc
inc
push
jmp
nop
mov
xor
and
inc
or
inc
pushf
dec
add
movs
jle
out
jo
adc
push
pop
xor
nop
xchg
stos
rcr
lods
jmp
jge
mov
retf
and
sub
test
mov
int
jge
push
pop
xchg
jl
shl
loop
xor
mov
sub
push
scas
hlt
mov
inc
dec
(bad)
out
and
aam
jbe
xchg
hlt
dec
pop
mov
or
xchg
mov
cmp
sbb
jae
pushf
jae
mov
ins
push
rol
jae
mov
push
mov
rcl
sub
and
adc
inc
mov
ins
pop
adc
cmp
aam
xchg
sbb
dec
dec
stos
inc
mov
scas
call
mov
mov
jge
mov
test
xor
mov
pop
mov
pop
pop
in
jb
jne
out
std
aad
inc
pop
mov
loope
push
xor
in
push
sbb
mov
cmc
ds
pop
in
inc
sub
ds
jb
add
nop
test
mov
add
mov
cmp
arpl
adc
cmps
pop
sbb
xor
mov
and
xor
xor
cmp
idiv
scas
scas
pop
mov
je
push
sti
mov
rcl
mov
push
push
pushf
push
cmp
push
das
jmp
sub
icebp
sub
and
outs
mov
clc
dec
sub
mov
fist
sbb
xlat
dec
mov
mul
sub
popa
mov
sub
dec
in
push
xchg
push
ror
test
and
xchg
out
div
xor
push
xor
sub
jo
aad
data16
mov
fwait
(bad)
cmp
jp
enter
shr
mov
push
arpl
test
(bad)
lock
daa
or
mov
and
rol
jae
or
push
sub
fdivp
xlat
and
(bad)
in
data16
es
mov
or
clc
fcomp
(bad)
or
xor
out
mov
push
bound
jo
cmps
ret
sbb
pop
sub
lods
pop
fdiv
imul
idiv
dec
sbb
sbb
stos
push
stc
mov
jmp
jb
out
ficom
or
loop
mov
xor
jmp
vshufps
je
dec
outs
les
fdiv
fimul
stos
aaa
adc
(bad)
jns
pop
push
mov
or
lea
lahf
inc
xor
in
add
in
in
push
mov
pop
mov
xchg
fst
jmp
dec
push
mov
and
bound
xchg
pop
mov
mov
push
xor
pop
(bad)
fdiv
sbb
cmps
imul
cdq
daa
or
lea
jmp
mov
in
fidivr
hlt
adc
outs
push
jb
add
std
mov
xor
or
aas
in
mov
mov
xor
scas
movs
int3
and
pusha
arpl
pushf
stc
jg
call
aad
mov
mov
mov
test
lahf
adc
mov
mov
mov
arpl
pop
data16
stos
xchg
movs
call
ins
fucomi
sub
ror
and
adc
ja
add
and
push
and
dec
or
clc
pop
loope
or
imul
cmp
outs
add
rol
mov
or
shl
xchg
and
sbb
xor
adc
jl
cmp
and
jno
fwait
and
push
add
adc
cmp
or
push
dec
es
cmp
and
movs
jns
lea
dec
mov
jne
inc
cmp
xchg
aaa
jl
pop
inc
or
je
add
add
mov
mov
leave
sub
sbb
add
jns
jnp
cmc
mov
aam
pop
(bad)
loope
ret
out
xchg
jg
test
cmp
ja
jmp
xlat
(bad)
xlat
xchg
xchg
loopne
pop
mov
lods
dec
mov
daa
lock
jnp
out
retf
jecxz
fwait
jns
es
sub
and
mov
lods
mov
fcmove
les
mov
fwait
sbb
jno
and
cmp
ret
adc
imul
js
out
mov
mov
into
jb
call
popf
(bad)
dec
add
data16
stos
jnp
retf
loopne
pop
shl
out
cmps
addr16
dec
mov
aam
bound
cmc
mov
jno
hlt
sti
mov
adc
xchg
call
sub
adc
jge
cli
aaa
ret
xchg
sbb
mov
sbb
imul
jno
pop
xchg
mov
or
repz
and
call
gs
and
(bad)
ss
mov
ins
cmps
push
ins
inc
push
stos
mov
mov
jmp
mov
cmp
in
pop
mov
xor
mov
sub
call
rol
xor
ins
pop
xchg
bound
fisub
in
sbb
sub
retf
pop
mov
jo
or
adc
repnz
cmps
nop
push
inc
jg
dec
cmp
pop
mov
xor
out
in
iret
dec
xchg
jne
mov
iret
(bad)
adc
xchg
scas
call
xchg
mov
inc
aad
outs
sbb
fstp
js
jbe
lods
and
add
pop
fwait
outs
outs
cs
stos
pop
xchg
add
adc
push
sub
sub
icebp
sub
cmps
rcl
jno
push
add
xor
push
push
dec
lods
pop
jg
xlat
cmp
inc
push
lahf
ja
clc
jmp
inc
ins
xchg
in
sar
(bad)
push
(bad)
xor
loop
add
lds
ficom
or
and
mov
xchg
pusha
inc
and
cwde
ds
mov
lods
loop
cmps
aas
daa
inc
cmp
push
mov
and
(bad)
xchg
jb
rcl
cmps
push
sub
ficomp
js
icebp
xchg
dec
stos
xchg
mov
ds
aam
jae
pop
xchg
(bad)
mov
arpl
ins
outs
arpl
dec
test
mov
ss
sahf
jns
and
sbb
mov
aad
sbb
aam
sub
mov
lods
inc
ja
fimul
scas
movs
fldcw
add
sub
fmul
sub
jmp
je
inc
leave
fild
ret
jbe
into
xor
mov
and
aam
jl
adc
pushf
inc
xor
jge
jo
pop
and
adc
rol
fisubr
mov
mov
or
jnp
ror
in
add
pop
inc
push
sbb
idiv
fnstenv
jns
lods
adc
cmp
jae
in
popf
fs
pop
push
push
pusha
iret
xchg
or
jae
nop
inc
push
rcl
sbb
xchg
stc
movs
or
mov
addr16
pop
xlat
adc
pop
adc
ja
daa
pop
cs
gs
pushf
inc
add
and
sub
inc
inc
pop
outs
mov
mov
xchg
popf
test
mov
adc
loop
push
cmp
pushf
fdivr
imul
into
(bad)
sbb
loop
jmp
xor
(bad)
rol
imul
fs
popa
mov
pop
pop
sar
gs
adc
jbe
push
int3
test
test
or
imul
stc
push
xor
mov
out
push
scas
(bad)
retf
cs
jp
pop
push
cmp
cmp
not
iret
mov
jns
mov
mov
daa
sbb
jnp
retf
sti
adc
xchg
xor
sbb
pop
push
test
add
repz
sbb
add
pop
mov
imul
dec
and
mov
jp
(bad)
aad
pop
dec
pop
and
out
cmp
cmp
into
mov
aaa
outs
sbb
mov
fbstp
dec
inc
imul
fisttp
mov
adc
push
jmp
cmp
or
out
jp
or
shr
mov
xchg
cmp
push
dec
mov
lods
(bad)
sbb
pop
call
les
sbb
inc
inc
ss
es
(bad)
rcr
out
iret
pop
sub
stc
jmp
jecxz
adc
jp
push
ret
outs
push
out
xchg
ins
and
dec
inc
and
mov
outs
nop
jo
(bad)
js
sub
jbe
icebp
leave
daa
scas
cmp
xor
xchg
cwde
ret
mov
mov
std
shl
sahf
fsub
rcl
mov
sbb
pop
cdq
push
push
inc
ror
pop
stos
mov
aaa
and
scas
outs
(bad)
out
jg
mov
sbb
popf
jg
adc
retf
jne
out
shr
bound
lahf
int3
cld
out
adc
push
sub
ror
pop
cmp
(bad)
loope
(bad)
inc
adc
outs
outs
ret
mov
dec
scas
sub
(bad)
mov
mov
jo
and
mov
fidivr
xchg
lock
out
cli
ins
enter
ins
rol
mov
addr16
jne
push
xor
shl
xchg
push
cmp
xchg
inc
mov
xor
lods
daa
or
inc
mov
(bad)
mov
test
adc
jne
les
dec
mov
inc
inc
mov
data16
push
sbb
es
ds
mov
ret
push
jo
dec
es
ja
movs
out
xlat
mov
leave
add
ins
and
div
cmps
sub
xchg
fbstp
sbb
and
mov
adc
jle
cdq
arpl
inc
aaa
pop
pop
xlat
jae
je
gs
dec
sbb
sub
(bad)
ficom
mov
dec
int
sahf
les
repz
sbb
pop
(bad)
sti
mov
jo
pextrw
movs
mov
test
xor
test
xchg
imul
dec
sub
mov
add
retf
sbb
pusha
dec
fst
mov
jge
xchg
(bad)
fisttp
inc
js
push
or
movs
and
std
and
pop
jbe
mov
out
inc
fldcw
fsub
jbe
ss
jl
in
pop
in
sti
js
xor
cwde
cmp
cmp
mov
je
aas
pop
pop
jg
retf
mov
dec
ds
adc
out
adc
not
mov
ins
inc
cmps
jo
fdiv
sbb
pop
into
das
repz
ja
pop
imul
mov
adc
dec
into
wbinvd
loopne
and
mov
gs
add
pop
(bad)
sbb
xchg
aad
cli
and
jecxz
call
mov
loopne
push
out
or
shl
xchg
sbb
(bad)
fcomp
jg
jge
iret
shr
arpl
mov
or
imul
jecxz
imul
out
scas
xchg
inc
sub
push
jnp
jecxz
call
cmp
in
inc
jae
xchg
call
cmp
or
(bad)
xchg
mov
fldcw
ins
cld
sub
aad
js
(bad)
in
sti
push
mov
iret
pop
test
inc
das
jg
movs
push
fwait
xlat
test
test
pop
sbb
outs
fwait
pushf
sbb
xor
loopne
aaa
cmp
jl
mov
cmps
dec
inc
jecxz
mov
fnsave
xchg
jl
cld
fxch
dec
pop
ins
xchg
or
daa
int
(bad)
retf
cwde
scas
xchg
adc
or
mov
xchg
inc
xchg
movs
push
add
inc
push
push
mov
(bad)
nop
adc
dec
mov
sti
loop
pop
test
in
jle
jmp
inc
or
(bad)
movs
call
push
jp
lea
jp
jne
das
fisttp
daa
push
xchg
xor
push
and
dec
or
dec
bound
shl
adc
movs
rol
and
call
inc
and
mov
sahf
scas
test
xor
and
add
clc
mov
push
cmc
mov
rcr
sub
fdivp
jae
mov
adc
sub
outs
out
xchg
dec
inc
inc
lods
imul
or
gs
fmulp
(bad)
cli
jbe
ds
or
dec
pop
xchg
push
add
pop
cmp
lea
xchg
inc
xchg
enter
mov
(bad)
pop
lods
and
scas
retf
pop
fincstp
sbb
ficomp
js
dec
and
mov
add
sbb
and
hlt
push
pop
mov
dec
in
cmp
jae
cmp
push
or
cwde
ret
mov
enter
cmp
sar
inc
mov
mov
out
xchg
and
and
cli
retf
ins
out
ds
and
adc
sub
pop
push
call
push
pop
sbb
add
mov
scas
ins
mov
inc
mov
cmp
movs
jle
ror
sub
scas
xchg
out
pop
outs
loop
test
in
mov
push
sub
int3
les
add
sbb
adc
test
xor
nop
sbb
pop
xor
ins
cmc
popa
aas
mov
imul
retf
out
xor
fxch
adc
pop
xlat
mov
aad
jg
push
jns
(bad)
jnp
pop
outs
jge
xchg
xchg
aam
(bad)
scas
mov
jp
inc
mov
test
loope
loop
push
and
rcr
cmp
in
jmp
rol
sub
retf
lea
cmp
add
rol
aad
js
(bad)
ret
push
addr16
xor
int3
std
push
retf
enter
repz
js
jle
dec
out
stos
sbb
pop
sbb
sbb
cmps
jno
or
(bad)
into
jp
and
mov
addr16
jle
movs
and
sbb
les
push
or
gs
lock
(bad)
retf
shl
pop
xor
dec
(bad)
mov
cmp
xchg
inc
aam
scas
jno
popa
mov
sub
out
sbb
(bad)
out
sti
nop
ja
sub
shl
or
cwde
sbb
ret
les
in
loop
mov
cmp
fsubp
ds
jae
mov
mov
ret
jmp
sub
jno
dec
bound
xor
sahf
pop
mov
cmp
in
ins
jmp
inc
ins
ds
dec
(bad)
fucomip
push
inc
lods
xlat
mov
xchg
repnz
int
push
jo
mov
push
fsub
fcmovnbe
enter
cmp
adc
(bad)
cdq
sbb
adc
mov
dec
cli
inc
xor
fadd
add
dec
cmps
aas
(bad)
mov
xchg
out
sub
jne
cdq
test
pop
and
add
outs
scas
jl
out
test
push
add
leave
jp
and
bound
(bad)
xor
cmp
push
xchg
jl
xlat
mov
in
ja
push
adc
sub
out
int
std
(bad)
repnz
movsx
jmp
(bad)
push
rcpps
sub
dec
js
push
jg
lock
xchg
pushf
adc
sar
(bad)
enter
or
xchg
xor
(bad)
out
fstp
inc
int3
jb
mov
mov
fwait
dec
fcmove
loope
mov
lock
(bad)
or
rol
inc
mov
fmul
pusha
imul
push
adc
and
inc
loope
add
inc
fadd
ret
lods
aad
sbb
ret
js
pop
mov
mov
stos
pop
retf
idiv
icebp
push
popf
add
imul
add
fsub
cmp
jecxz
ret
fisubr
ds
dec
(bad)
fs
push
jns
pop
mov
xchg
add
mov
sub
push
add
jb
push
push
and
dec
fsub
sbb
mov
repnz
in
mov
sub
jmp
stos
pop
push
pushf
movs
xchg
call
xchg
fs
xchg
fidivr
inc
xchg
mov
mov
xchg
les
jb
sub
(bad)
sbb
in
dec
mov
mov
cmp
dec
mov
retf
ins
sti
mov
xor
outs
push
cwde
aaa
xor
test
inc
cmp
fwait
arpl
dec
ins
xchg
push
movs
bound
jge
jmp
je
imul
ins
inc
xchg
das
sbb
sub
mov
cs
lods
mov
pop
in
sbb
mov
jnp
data16
pusha
inc
pop
mov
xor
std
mov
das
retf
jne
cmp
cmp
(bad)
fldcw
into
mov
xchg
adc
xor
daa
rcr
pop
jb
and
or
(bad)
sar
sub
int
test
cli
jp
mov
cld
inc
nop
mov
xchg
(bad)
aam
mov
sar
lock
mov
pop
in
popa
mov
xchg
mov
out
sti
add
sbb
repnz
in
mov
push
add
inc
xchg
cmp
test
fistp
mov
jne
outs
mov
cmps
add
pop
xchg
in
mov
xchg
pop
test
outs
sbb
xor
cmp
mov
fdiv
sbb
dec
inc
sub
or
sub
sti
frstor
xor
sub
cmp
mov
mov
inc
xor
ss
retf
adc
and
bound
sub
(bad)
pop
add
bound
mov
mov
imul
cdq
cmp
xor
mov
jge
and
sbb
or
add
shl
dec
jge
mov
and
fstp
jmp
fsubr
pop
adc
mov
xchg
adc
push
cli
loop
sub
xchg
stos
sbb
call
ret
fs
xor
pop
dec
test
xlat
xor
or
std
pop
cmc
inc
add
push
and
jle
call
jbe
jb
mov
imul
and
popa
mov
stos
jbe
in
into
push
jo
test
add
loope
pop
icebp
mov
fist
cs
in
dec
jns
fwait
idiv
push
pop
push
paddsb
js
cmp
mov
mov
cwde
cmp
cdq
sbb
in
inc
add
lock
add
out
aam
lds
cmp
mov
(bad)
adc
test
ins
icebp
or
push
ror
dec
outs
sti
sub
pusha
jmp
pop
loopne
ret
dec
xchg
test
pusha
hlt
sbb
sub
ja
pop
cmp
ins
and
stos
(bad)
aam
rcr
outs
adc
pusha
push
and
fidivr
add
add
mov
test
dec
fwait
xchg
gs
out
sub
ss
cmps
xchg
lahf
jo
jmp
sub
sti
dec
(bad)
ret
xchg
sub
mov
mov
call
ds
in
and
and
pop
add
je
jmp
sbb
mov
push
test
dec
adc
test
jl
mov
mov
out
xor
cmc
inc
inc
xor
or
add
loopne
fistp
sbb
mov
and
out
fldz
dec
add
and
pop
(bad)
fcompp
push
fst
fild
adc
xchg
scas
aad
pop
test
mul
cld
mov
fldz
data16
xchg
xchg
sub
shl
mov
xchg
xor
(bad)
cld
jne
xchg
fbld
push
fnstcw
adc
xor
mov
xor
dec
xor
test
pusha
ins
sbb
fimul
cld
push
and
add
(bad)
dec
jmp
jns
inc
push
fwait
sub
stos
mov
inc
jp
enter
and
and
fwait
sub
pop
sahf
fmul
sub
aad
mov
jmp
js
xrelease
mov
mov
push
and
aam
jb
jne
jle
xor
imul
adc
in
cmps
loop
jg
cmc
jo
int3
test
enter
mov
lds
inc
js
pop
enter
cli
pushf
push
cli
add
mov
adc
sub
je
and
pop
(bad)
es
add
adc
pop
push
pop
arpl
and
ja
rep
fisttp
lahf
cmp
mov
adc
and
daa
jo
sub
mov
pushf
mov
stc
jbe
pop
ret
add
mov
aas
gs
fsub
cmc
dec
fwait
pusha
xlat
jno
mov
xor
pop
dec
pop
imul
or
test
popf
jae
hlt
call
cmp
sti
cdq
push
fsubr
scas
(bad)
(bad)
dec
in
mov
or
push
xchg
mov
xor
movs
inc
(bad)
fwait
xlat
push
xchg
push
and
cmps
fwait
mov
bound
fbstp
(bad)
mov
adc
adc
mov
jmp
clc
jns
ins
sbb
cmc
ss
jge
shl
aad
(bad)
retf
mov
mov
dec
add
cmp
mov
aas
mov
add
repnz
out
not
call
(bad)
cwde
pop
xchg
jl
adc
ja
sti
imul
cmp
in
inc
gs
mov
xor
adc
add
xchg
out
xchg
inc
lds
ss
ret
fwait
xor
test
and
add
xchg
mov
xchg
popa
mov
sub
jp
cmp
and
push
popa
popf
test
scas
add
push
and
xchg
mov
arpl
and
aam
xor
lahf
sahf
sub
hlt
jge
and
pop
lea
add
mov
xchg
and
pop
test
lahf
cdq
scas
or
add
mov
inc
ds
in
push
mov
aam
sub
aas
lods
jb
sbb
fst
adc
adc
outs
jle
in
push
repz
pop
xchg
cwde
lahf
inc
sub
mov
mov
mov
jae
or
jo
pop
(bad)
cmp
fstp
add
sar
dec
sbb
repnz
popf
rcr
cmp
ds
inc
sar
mov
xchg
mov
jnp
pusha
or
retf
mov
rcl
test
and
sub
call
adc
popf
xor
lds
(bad)
sbb
mov
add
ins
jns
jnp
test
idiv
cmovnp
sub
sbb
xlat
xor
loopne
mov
ret
fldenv
push
cmp
xor
push
(bad)
dec
out
push
cdq
jmp
sbb
shl
lock
mov
jns
pop
cmps
cld
fstp
jp
push
cs
jl
js
jb
in
dec
cmp
mov
mov
mov
sbb
push
fidiv
lods
inc
cld
push
aad
push
mov
aad
sti
xchg
push
retf
xor
repz
jbe
jg
in
mov
mov
cmp
ret
cs
and
xchg
mov
in
push
jnp
lods
or
xchg
mov
loope
mov
xor
outs
sub
jno
cmp
stos
lods
cdq
int3
stc
loop
stos
outs
mov
in
loope
push
mov
aaa
mul
mov
jle
and
pop
cmps
enter
mov
mov
mov
dec
push
mov
xchg
push
pop
(bad)
fidiv
pop
mov
and
(bad)
pop
pop
cs
dec
or
add
or
(bad)
in
out
push
sahf
pop
and
lea
pushw
mov
xchg
std
loop
shl
mov
(bad)
push
sub
or
clc
xchg
dec
pop
push
aaa
test
movs
xchg
sbb
sub
rcr
in
cld
popa
movs
or
cmp
cwde
and
fs
mov
out
add
pop
pop
test
cmp
mov
pop
xchg
ds
imul
add
mov
mov
jmp
dec
lods
cwde
test
mov
test
loop
jns
sti
(bad)
jge
fcomip
shr
mov
js
ins
push
jl
fmul
lods
inc
adc
ret
(bad)
sub
shl
xchg
arpl
xchg
sbb
jno
popa
jo
(bad)
adc
sub
maskmovq
test
sub
popf
movs
jl
sub
push
mov
not
lods
jmp
and
call
in
(bad)
xchg
scas
cmp
pusha
push
lods
(bad)
jl
mov
std
stos
cmc
push
outs
mov
mov
dec
add
jmp
add
loop
pop
xchg
test
data16
out
mov
into
gs
xchg
test
ret
fisubr
xchg
in
sub
cld
sbb
jb
and
cmp
call
xchg
sbb
out
jp
ret
lods
push
or
aaa
add
mov
mov
popf
(bad)
fldenv
shl
sub
xchg
popf
sub
daa
popf
lea
jbe
cmp
or
movs
mov
inc
sbb
retf
xor
and
loopne
mov
jg
sar
pushf
jmp
(bad)
stos
inc
es
pop
aad
movs
(bad)
push
mov
out
cmp
shr
push
jg
mov
or
push
daa
or
xor
ret
xchg
test
xchg
push
test
add
loop
inc
inc
sbb
popa
rol
add
in
sahf
(bad)
sahf
(bad)
aad
das
mov
and
neg
adc
(bad)
mov
movs
push
add
sti
int3
fdiv
jg
fild
jae
xchg
lahf
lea
fild
arpl
(bad)
mov
jge
repz
cmc
bound
xchg
add
xchg
sub
sbb
pushf
fisubr
stos
mov
ret
test
pop
mov
aas
sub
push
push
ins
sub
xor
loopne
push
pop
sbb
sbb
mov
sub
fcmovnu
sar
or
jl
out
mov
loopne
stc
adc
cwde
mov
pop
lock
jns
sbb
mov
ja
mov
stc
movs
inc
ror
scas
sub
shl
int
shl
cmp
hlt
pop
int
jnp
push
xchg
arpl
jl
dec
xchg
xchg
jb
adc
inc
mov
xchg
xchg
mov
jae
outs
jle
xor
loopne
add
(bad)
push
je
push
pop
jg
add
mov
movs
dec
imul
sub
cmps
mov
mov
in
add
inc
xchg
cmp
push
sar
loop
js
les
addr16
pop
push
xchg
aas
pop
or
mov
ret
add
sub
stc
jno
lds
ds
pop
jbe
and
or
aaa
adc
mov
adc
push
lods
scas
stc
or
test
outs
add
xchg
shl
movs
loope
and
add
sbb
xor
std
bound
shr
cmp
sub
rcr
es
jb
jnp
push
add
add
(bad)
out
in
(bad)
(bad)
leave
imul
adc
in
scas
push
neg
fistp
push
xchg
inc
mov
ins
fsub
test
cmp
test
xor
div
in
popa
adc
test
dec
jno
pop
dec
mov
jnp
out
cmp
mov
dec
aam
push
aam
cwde
mov
fstp
jg
cmp
push
loop
ins
into
jns
loope
cmps
cmc
nop
ins
icebp
cmc
add
addr16
adc
cmp
stos
icebp
outs
inc
(bad)
pop
or
xor
pop
mov
les
pop
ss
dec
push
cmp
cmp
mov
aas
mov
inc
or
pop
cld
call
and
clc
push
hlt
push
or
les
arpl
movs
adc
adc
ins
test
xor
jmp
out
xchg
add
ror
inc
inc
lds
mov
mov
movs
out
in
and
fbld
cmp
push
out
cmp
jp
adc
test
sbb
xor
ds
xchg
cmps
cmp
mul
fisub
xor
sub
cli
ins
mul
dec
mov
(bad)
and
std
nop
pusha
xchg
in
jb
inc
sbb
push
cs
push
and
mov
inc
mov
mov
icebp
rol
sub
aaa
jne
or
push
push
sti
std
push
and
loop
ss
inc
inc
(bad)
mov
jp
ins
loopne
jne
xchg
rol
inc
not
sbb
stc
fistp
mov
mov
scas
sbb
loopne
and
adc
mov
jbe
iret
hlt
call
jne
xchg
adc
mov
push
call
shl
push
loopne
mov
push
fsubr
lock
in
test
mov
ret
push
push
mov
mov
sbb
cmps
pop
inc
aas
mov
jae
popa
call
(bad)
out
pop
mov
lods
imul
ja
and
ins
inc
mov
mov
loope
nop
jo
and
and
mov
dec
adc
out
bound
jp
inc
cmps
jg
push
outs
es
add
int
pusha
jecxz
cmps
aas
(bad)
cmps
cmp
shl
push
jb
adc
sar
jmp
mov
inc
sbb
fadd
mov
ss
das
jmp
out
into
push
inc
mov
lods
movs
fnsave
mov
cs
xchg
mov
es
in
in
push
not
sub
in
dec
neg
inc
jnp
cmc
jb
cwde
pop
es
cmp
sub
in
pop
cmc
in
fdiv
jle
pop
add
xor
xchg
mov
cmp
or
lods
jl
push
retf
cmp
std
outs
xlat
clc
and
xor
cld
mov
xor
stos
jge
xchg
xor
add
pop
xor
stos
adc
cld
call
imul
adc
jbe
outs
xchg
js
pop
push
je
out
les
jg
mov
xchg
aad
sar
adc
or
std
aaa
jl
mov
cmp
cmc
push
jae
aam
call
pop
outs
fidivr
cmp
(bad)
or
xor
jmp
and
daa
(bad)
adc
inc
push
test
mov
(bad)
cmp
ss
jne
mov
je
js
fs
xor
stos
xor
xor
pop
pop
daa
jb
sub
and
pop
push
xchg
inc
fadd
inc
fld
mov
ins
js
add
add
pop
out
cmp
pop
out
fistp
lds
mov
add
jne
loopne
adc
repnz
and
jecxz
out
mov
dec
aam
fs
add
mov
xor
pushf
adc
in
arpl
add
pop
loope
ror
mov
aad
jo
push
std
popf
test
ss
sub
loopne
sbb
push
mov
pop
or
jl
ret
scas
xor
jmp
xchg
sub
dec
cdq
into
dec
pop
sub
mov
cmp
imul
out
add
test
xchg
data16
and
dec
imul
sbb
adc
dec
push
dec
jns
adc
push
pushf
jmp
or
cwde
mov
aad
fdivr
repz
mov
shl
xor
lahf
cmps
or
push
loopne
loopne
xchg
mov
xlat
inc
std
daa
and
jno
push
out
add
mov
rcl
and
jg
sub
mov
or
mov
jnp
push
nop
sub
push
push
jmp
popf
sbb
inc
retf
scas
xchg
mov
cld
movs
or
ffreep
mov
int3
pop
xor
daa
aad
and
mov
dec
mov
mov
pop
ret
ror
mov
js
or
add
test
push
inc
fsubr
js
addr16
imul
sub
mov
pop
add
test
mov
and
clc
xchg
xchg
les
scas
pop
or
or
xchg
mov
push
xchg
leave
(bad)
leave
dec
imul
fnsetpm(287
xchg
push
pop
push
mov
repnz
outs
mov
outs
cmp
and
jecxz
lds
jecxz
add
scas
xlat
outs
jo
in
jle
jmp
mov
push
mov
(bad)
(bad)
scas
adc
mov
pop
xchg
push
pop
jg
sub
xor
cs
and
and
push
mov
pop
test
add
xor
cmp
dec
js
xor
add
std
xchg
enter
xor
adc
sbb
adc
daa
jno
dec
jae
fisttp
ficomp
mov
dec
aaa
jnp
into
in
das
cld
outs
pusha
retf
ficom
movs
sbb
push
outs
mov
retf
in
push
xchg
sbb
sub
jle
or
pop
inc
push
xor
add
loope
int3
fldenv
xor
data16
das
retf
jb
cwde
retf
xor
sbb
js
add
in
jne
mov
dec
jnp
sbb
fwait
cld
fst
or
loop
ja
aad
fistp
fwait
lahf
add
or
and
ja
test
popa
dec
push
fisttp
(bad)
fs
mov
mov
xchg
jecxz
jo
aas
std
mov
xchg
int
loope
rol
js
cmp
test
popf
add
(bad)
lsl
pop
xor
dec
add
movq
daa
jae
push
xchg
in
xchg
ins
sbb
push
cld
and
jne
not
fnstsw
mov
jl
(bad)
scas
inc
repnz
sbb
fldcw
pop
fadd
mov
add
xchg
imul
xchg
mov
stos
rcl
and
loope
push
push
jmp
shl
sub
xlat
stc
mov
mov
dec
movs
xor
cmovno
xchg
les
mov
jae
cmp
cs
lods
jo
scas
data16
jnp
dec
test
add
aam
stos
pop
mov
data16
sbb
and
es
pusha
fadd
jb
pop
jg
or
and
push
shl
inc
outs
sbb
and
sub
cmp
fiadd
jnp
bts
rcl
dec
mov
lock
pop
xlat
hlt
inc
movs
addr16
repnz
fldcw
aam
test
mov
fdivr
jb
mov
xor
add
fwait
xchg
add
and
adc
cmp
(bad)
mov
and
test
sub
movs
mov
into
popa
sbb
test
xchg
popa
aam
mov
ffreep
mov
dec
pusha
xchg
xchg
cmp
retf
mov
rcl
and
or
lods
add
mov
out
pop
xor
sub
(bad)
fsub
scas
dec
sbb
and
mov
sahf
and
push
(bad)
(bad)
add
mov
xchg
xor
call
sbb
pop
rcr
add
arpl
lds
mov
lock
mov
das
mov
mov
sbb
cdq
add
imul
nop
fwait
imul
and
test
jl
and
inc
fldenv
pop
add
add
mov
xor
scas
jmp
mov
call
jg
sub
ds
in
push
(bad)
pop
mov
push
je
ror
aas
push
lods
jmp
mov
loope
pop
jo
push
movs
cs
pusha
repnz
in
ins
stc
loope
test
xlat
jns
mov
cmp
es
dec
jp
push
popa
sub
dec
jns
adc
les
sbb
mov
sbb
xor
or
iret
pop
jno
dec
sub
dec
xchg
(bad)
adc
cmps
push
mov
js
jmp
pmulhw
cmp
sbb
pop
or
jne
test
adc
adc
jp
dec
or
outs
mov
test
hlt
cwde
sar
out
lods
and
and
or
xchg
add
fs
dec
jmp
pop
jne
fisttp
sbb
pop
arpl
xchg
adc
in
mov
test
std
fdivr
aad
fbld
(bad)
sbb
(bad)
mov
mov
xchg
pop
call
dec
(bad)
(bad)
es
es
loopne
xchg
fmul
dec
sub
lahf
add
mov
retf
xlat
mov
(bad)
es
shr
adc
int3
leave
mov
xchg
lods
imul
daa
add
daa
(bad)
ficom
push
and
fsubr
addr16
jmp
scas
push
daa
ror
jmp
sub
stos
push
push
dec
or
scas
push
sub
out
inc
test
push
std
mov
and
xchg
jae
or
and
ds
and
dec
les
ret
dec
pop
cmp
fcmovnb
xor
ja
mov
lods
shl
add
pushf
jge
push
pop
ja
sti
in
mov
jmp
(bad)
xor
not
sbb
dec
dec
jle
imul
xchg
(bad)
stos
jge
sub
cld
ins
into
into
pop
jmp
sub
xchg
mov
retf
(bad)
(bad)
xchg
dec
ret
cwde
in
retf
in
xchg
mov
jmp
js
addr16
jle
(bad)
cli
into
push
loop
mov
sbb
sbb
push
xchg
lods
mov
(bad)
jnp
mov
or
das
popa
mov
in
and
fs
int
rcr
inc
add
int3
mov
mov
inc
jns
dec
jge
jae
aaa
pop
xlat
fwait
int3
xchg
cs
cmp
inc
leave
mov
icebp
mov
mov
stos
adc
inc
cmc
mov
mov
(bad)
test
xchg
nop
sbb
das
push
ins
inc
(bad)
cmp
mov
inc
mov
clc
dec
add
xor
mov
in
dec
xchg
scas
jg
cmp
cmp
shr
in
jl
adc
fst
in
or
adc
leave
fidivr
loop
into
dec
mov
mov
xor
aas
cdq
sub
lds
cld
ins
int3
in
sbb
xor
pop
adc
mov
and
sbb
fwait
or
dec
add
inc
dec
inc
(bad)
(bad)
fsubr
cld
call
sbb
popaw
(bad)
adc
and
and
mov
cmp
mov
cs
inc
sbb
cli
pop
xor
out
sub
(bad)
xchg
jmp
test
xchg
jnp
ds
lahf
stc
mov
imul
mov
in
hlt
loope
pop
xchg
push
mov
and
movs
je
sti
jo
ja
out
push
lahf
daa
inc
xchg
je
push
iret
ret
fwait
std
popf
ror
out
pop
mov
shl
mov
inc
aaa
retf
xor
jb
das
push
int
push
inc
adc
ins
sub
cmps
mov
(bad)
mov
fnstenv
lods
pop
ror
test
inc
clc
add
xchg
mov
inc
mov
daa
xchg
xor
pop
mov
fsubr
inc
mov
mov
ror
aam
jl
dec
sti
mov
(bad)
mov
hlt
inc
mov
jecxz
cmp
adc
pop
stc
fxch
lods
pop
(bad)
cld
jnp
xor
jae
shl
xchg
jae
inc
xlat
sub
inc
pop
add
push
and
loop
cwde
test
dec
adc
jb
popa
jb
fwait
adc
mov
loop
(bad)
imul
adc
jmp
jae
jg
psrld
mov
dec
push
rcr
test
mov
adc
shr
ins
mov
in
loopne
loope
mov
pop
xchg
not
push
or
fisttp
cmps
ds
mov
mov
jnp
test
xchg
or
push
prefetcht0
and
loope
mov
xor
push
out
push
out
sub
pop
shl
and
push
mov
jge
dec
and
ds
add
sbb
movs
mov
cdq
aad
mov
add
pop
inc
inc
pop
xor
mov
lea
add
stos
push
not
mov
xchg
and
in
popf
or
add
gs
js
pop
xchg
bound
xor
in
shl
jnp
dec
or
jge
iret
mov
loop
push
lock
aas
imul
adc
xchg
adc
repnz
and
fcom
jo
mov
jb
hlt
cli
and
nop
fidivr
dec
enter
jno
mov
adc
dec
push
sbb
fcomp
aaa
bnd
xlat
mov
xor
push
in
push
repnz
jg
das
mov
sbb
popf
mov
fdivp
test
(bad)
adc
mov
cld
cmp
enter
mov
(bad)
or
add
jmp
push
movs
in
movups
xor
xchg
pop
rcl
in
imul
mov
mov
shr
test
ss
sbb
out
push
out
xor
mov
sahf
dec
dec
push
lahf
(bad)
icebp
add
call
fldenv
cmp
jb
popa
push
mov
sub
or
and
jbe
add
or
pop
test
repnz
sbb
push
jne
xor
jo
arpl
mov
ret
xlat
sbb
loope
xlat
ja
daa
lea
push
into
or
add
inc
xchg
sahf
dec
popa
and
push
mov
gs
xor
idiv
or
stos
(bad)
jecxz
popa
xchg
in
pusha
pop
scas
hlt
int
call
stc
mov
push
inc
lock
jbe
pop
retf
ds
push
add
cmc
mov
add
adc
hlt
loopne
jae
ins
pop
sub
int3
pop
nop
dec
retf
or
fmul
shl
out
fs
mov
cmp
inc
sbb
jl
cmp
jo
jmp
into
mov
push
mov
sar
sbb
mov
vminps
cmp
cmps
mov
(bad)
mov
lods
and
in
fs
(bad)
call
lock
jns
and
mov
and
sbb
scas
repz
cli
cmp
sti
out
add
mov
icebp
scas
pop
pop
out
lahf
xchg
add
sar
aam
dec
cmps
cmps
sbb
(bad)
pop
jno
(bad)
mov
dec
es
ss
or
push
jmp
xchg
jge
dec
popf
mov
call
mov
cld
fprem
shl
jmp
rcr
inc
lods
arpl
inc
jmp
retf
xchg
fldenv
adc
scas
push
add
pop
pop
cmp
push
into
(bad)
inc
xlat
dec
(bad)
xchg
fdiv
xchg
pop
xor
add
clc
inc
xlat
adc
push
or
xor
repz
in
and
in
daa
xor
mov
inc
sub
mov
arpl
arpl
jecxz
cmc
dec
loopne
call
pop
dec
push
fnstenv
mov
les
fwait
(bad)
loopne
cmp
call
data16
push
in
pop
sub
sbb
fisubr
lds
sti
aad
dec
rcl
icebp
pop
adc
or
nop
mov
pop
xchg
xchg
sub
mov
pop
call
mov
inc
mov
sbb
jmp
out
jae
fldcw
mov
mov
push
pop
cli
jne
retf
sbb
fsub
jno
mov
xchg
out
cli
ins
imul
xor
mov
dec
push
(bad)
fisttp
dec
jmp
add
jecxz
push
cwde
icebp
rcl
pop
inc
rcr
adc
add
pop
out
lods
cmp
fnstenv
outs
push
sahf
or
mov
lock
ins
xchg
fdivp
cmps
push
mov
xchg
repz
adc
dec
cmp
jbe
xor
shr
aam
jb
cli
jae
push
cmc
sub
or
inc
xchg
inc
xor
retw
addr16
ds
mov
idiv
enter
mov
xor
test
stc
or
fidivr
(bad)
mov
mov
mov
push
cli
cmc
jmp
dec
jae
sbb
aaa
ins
mov
icebp
pop
in
lock
mov
movs
dec
imul
xor
das
dec
dec
aad
pop
mov
rcr
or
jnp
xchg
loop
xor
push
out
push
push
sbb
jl
mov
or
loope
cmp
jns
dec
in
pop
add
clc
clc
(bad)
shr
movs
xchg
adc
cmp
push
jmp
jnp
mov
xchg
in
pusha
pusha
adc
pop
bound
jmp
out
add
es
les
addr16
jle
jge
cld
add
dec
lahf
mov
xchg
ds
jmp
cdq
mov
xor
add
jecxz
les
loop
mov
clc
leave
adc
pushw
mov
rcl
push
out
outs
pushf
jns
int
pushf
xchg
xor
dec
jns
xchg
dec
ss
or
ret
xchg
icebp
pop
jmp
push
or
sub
shl
xor
imul
mov
adc
je
mov
scas
mov
test
pop
mov
or
js
sbb
pop
dec
cdq
add
out
cmps
out
(bad)
jae
pop
cmp
mov
mov
mov
enter
in
shr
or
push
xchg
nop
mov
xor
cmps
loope
xchg
fild
push
es
dec
mov
push
push
int
int3
push
nop
(bad)
adc
loope
and
jae
sub
push
push
or
shl
mov
sbb
pop
scas
(bad)
xor
push
push
jmp
(bad)
(bad)
cdq
rcl
es
pop
dec
sbb
mov
ins
add
inc
inc
popa
mov
add
sbb
test
mov
xchg
or
test
rcr
ins
jns
push
mov
cs
adc
data16
ins
pop
std
cmp
aaa
das
fs
ins
retf
outs
(bad)
dec
aaa
dec
fmul
pop
sub
inc
jl
xchg
sar
test
cld
mov
pop
push
pop
sbb
sub
stos
aam
mov
xchg
jne
fisub
leave
mov
cmp
mov
xchg
fwait
inc
in
adc
retf
loope
push
int
sbb
fst
test
xchg
jmp
sbb
cmp
stos
mov
pop
or
into
inc
and
repnz
push
scas
mov
mov
cld
and
jecxz
in
pop
pop
jne
mov
fsubr
std
cmp
sbb
mov
mov
add
scas
out
out
test
sbb
push
dec
sar
fbld
sub
loopne
in
mov
pushf
in
cdq
jg
push
dec
pop
mov
mov
and
ss
cld
int
cli
pop
adc
mov
mov
mov
cmp
or
jle
xchg
add
jno
sar
mov
rcl
sub
inc
scas
jle
repnz
jp
cmp
adc
in
jg
daa
cmc
push
mov
or
pusha
push
ins
push
inc
outs
cmc
(bad)
mov
scas
push
xlat
gs
(bad)
ret
sub
jns
dec
imul
(bad)
xor
jns
rcr
mov
shl
sub
push
test
xchg
fstp
retf
xchg
(bad)
repz
dec
fsubp
clc
pop
or
fs
inc
pop
stos
pop
or
mov
add
rcr
mov
bound
or
outs
xchg
out
cmp
mov
mov
adc
xor
and
lahf
movs
pushf
add
mov
xchg
xor
jo
repz
addr16
pushf
jmp
pop
xchg
stgi
mov
xor
jmp
jno
xor
lods
xchg
dec
fstp
inc
fcom
pusha
leave
idiv
sahf
dec
test
pop
dec
inc
jmp
jmp
aaa
enter
inc
cmc
ret
jecxz
shl
xlat
cmp
rol
mov
lods
cdq
add
dec
ins
jmp
xchg
stc
inc
aas
mov
neg
xchg
bound
jbe
jbe
mov
loope
mov
inc
int3
mov
cmp
xor
inc
arpl
call
add
push
jno
and
cmp
dec
in
cmp
fcom
dec
ins
or
push
inc
fadd
push
adc
(bad)
es
not
push
shr
mov
loopne
or
mov
in
inc
push
mov
jnp
dec
sti
sub
dec
jl
lahf
in
or
ds
xor
aam
lock
movs
fist
jb
mov
mov
lea
xchg
fld
popa
dec
pop
or
or
addr16
push
mov
push
push
mov
pop
in
hlt
icebp
mov
cmp
call
xchg
iret
sahf
test
fsubr
jl
inc
lods
das
mov
int3
add
mov
mov
call
int
(bad)
mov
retf
cmp
cmp
mov
xor
dec
or
dec
aad
jl
lods
hlt
cmp
inc
rcl
and
pop
sub
dec
dec
inc
aaa
sbb
out
pop
gs
mov
push
aam
fdivr
and
fidivr
jae
into
dec
sub
pop
jmp
imul
push
add
jbe
fnsave
xchg
mov
psrlw
xor
pop
xor
enter
pop
fmul
pop
dec
mov
jmp
mov
dec
sub
lds
and
dec
jmp
mov
repnz
cwde
call
adc
cmp
ds
push
std
jl
lds
scas
adc
xchg
bnd
stos
dec
add
stos
dec
xor
aas
movs
add
xchg
into
xor
push
push
dec
xchg
ret
fldcw
sbb
repnz
fidivr
mov
addr16
cmp
mov
inc
js
push
fcos
rol
xor
and
mov
enter
inc
call
xchg
sbb
icebp
jne
inc
nop
ret
jb
sub
lahf
aad
xor
sbb
cmp
cli
jne
ins
sub
lea
xor
fs
mov
mov
pop
inc
fisub
xchg
das
leave
mov
dec
cmps
cld
rcr
sub
imul
imul
out
sbb
sbb
(bad)
pop
out
dec
nop
movs
movs
sahf
(bad)
adc
scas
stc
aaa
mov
das
int
mov
mov
or
daa
sbb
push
outs
cmp
sbb
sub
inc
xor
mov
or
mov
fmul
lods
or
aad
sbb
cmc
fstp
xchg
adc
fcom
nop
pop
mov
mov
movs
mov
push
mov
adc
les
or
bound
das
xor
mov
repz
cld
sbb
pop
test
inc
call
loopne
lea
mov
jmp
push
xchg
mov
loop
and
adc
cmc
pop
mov
mov
xor
push
out
sbb
pop
cdq
les
jno
stos
div
call
rol
(bad)
jb
xor
sub
adc
in
dec
int3
jne
popf
dec
out
das
es
or
aam
mov
cld
retf
outs
js
dec
nop
in
loopne
outs
call
daa
and
mov
and
stos
pop
cmovb
pop
ret
and
stos
(bad)
add
pop
mov
inc
jp
pop
push
loop
loope
push
into
push
(bad)
idiv
gs
mov
mov
aas
push
cmps
pop
mov
adc
push
mov
xor
ficom
enter
fnsave
sbb
mov
pop
xor
rol
mov
loope
mov
jp
mov
adc
in
xchg
in
jne
fdiv
or
mov
inc
pop
or
push
mov
cmc
mov
jae
xchg
test
inc
addr16
leave
inc
or
jns
lahf
lahf
cmp
mov
setnp
dec
xchg
popf
jmp
lock
mov
sub
jnp
sti
cmp
dec
add
jge
popf
pop
mov
jle
push
inc
mov
xor
in
ss
in
cld
fdiv
jmp
push
xchg
test
sub
inc
and
cmp
adc
ret
sub
int
mov
or
test
mov
loope
push
aaa
and
mov
mov
cmps
loopne
(bad)
je
dec
pop
jle
test
(bad)
aaa
(bad)
(bad)
xchg
retf
jge
jp
sub
mov
pop
div
cmps
inc
jg
nop
add
fistp
mov
sbb
jne
fwait
bound
(bad)
mov
lea
pop
imul
push
in
jb
stos
sub
sub
mov
aam
retf
call
adc
cs
arpl
or
jp
imul
loope
je
and
xchg
pop
xchg
test
call
movs
push
movs
ret
mov
add
inc
push
shl
jae
mov
jmp
and
dec
jne
pushf
sbb
mov
add
cli
imul
fidivr
leave
cs
movs
imul
or
out
inc
sbb
mov
xor
fidivr
sub
lods
sub
ret
dec
pop
sbb
push
push
popf
stc
xor
fisttp
jle
icebp
add
(bad)
mov
or
jo
ins
loopne
and
pop
jl
mov
mov
loope
mov
test
imul
sahf
adc
and
dec
neg
mov
js
or
dec
inc
adc
mov
jmp
mov
mov
pop
leave
sub
dec
test
imul
or
inc
fucomi
add
sub
xor
rcl
jecxz
pop
sub
xor
(bad)
mov
jle
gs
or
jbe
or
cmps
cmp
bound
or
and
test
or
add
adc
dec
inc
xchg
mov
es
ja
ins
mov
dec
cmp
mov
cdq
inc
mov
aam
mov
in
popa
xchg
add
ret
adc
in
fwait
jno
fs
int3
push
xchg
jl
push
cmps
xor
dec
sub
outs
dec
cmps
dec
xor
mov
stos
dec
or
daa
or
sbb
stos
pusha
pop
mov
fwait
inc
xor
mov
mov
dec
mov
xor
sub
push
inc
ins
pop
aas
sti
push
or
jno
inc
fs
int3
fs
xor
jg
fmul
jne
aam
out
loop
mov
push
ss
jno
xchg
stos
lods
pop
xor
(bad)
setb
dec
jae
repnz
out
ins
mov
cmp
cdq
inc
sub
add
cmps
movs
mov
aad
fs
xchg
mov
and
je
imul
and
mov
push
aad
pusha
movs
xchg
jp
push
out
inc
xor
(bad)
pop
push
in
adc
jmp
pop
add
cmp
stos
cmp
pop
xchg
(bad)
lock
fadd
div
and
sub
inc
pop
mov
enter
dec
dec
ins
mov
jo
in
adc
mov
sti
into
inc
and
outs
jge
push
les
(bad)
sahf
mov
neg
adc
cmp
xor
call
dec
mov
loopne
jle
stos
movs
cwde
bnd
cmc
sbb
scas
mov
or
scas
int3
lods
xchg
mov
xor
cmp
xor
or
daa
sbb
pusha
loopne
mov
cmp
lock
xchg
sbb
out
mov
int
shl
scas
int
rol
jecxz
xchg
sub
pop
fwait
iret
stc
into
in
(bad)
neg
bound
leave
and
jnp
or
leave
enter
arpl
test
ja
shr
out
ret
lea
in
inc
add
push
mov
inc
sti
repz
out
sbb
cs
push
shl
mov
cwde
iret
leave
dec
cs
cmps
loop
cmp
pop
in
cmp
inc
cmps
mov
mov
fs
sub
pop
fcom
mov
adc
push
jno
in
cmp
push
inc
jge
shr
fist
sbb
gs
fwait
push
inc
ds
sub
cli
cmp
xor
sahf
push
cmp
and
in
gs
out
out
mov
fcomp
and
les
lods
fs
imul
fwait
ret
sbb
pop
jno
inc
ins
sub
mov
movs
sahf
mov
sbb
xchg
stos
or
movs
adc
(bad)
(bad)
cmc
(bad)
cmp
je
and
retf
mov
pop
loope
scas
xor
mov
sub
cmp
ret
xlat
les
adc
push
xchg
jbe
ins
jmp
das
add
sti
imul
mov
mov
repz
mov
cli
push
mov
js
into
jno
loope
xchg
ins
inc
or
jmp
mov
adc
xor
scas
(bad)
into
pop
aaa
inc
call
mov
sbb
imul
and
adc
add
adc
dec
mul
push
mov
cmp
xor
pop
(bad)
neg
test
xchg
mov
xor
jbe
jne
lods
mov
enter
mov
sbb
lahf
cmp
dec
ins
mov
jae
in
xchg
jecxz
mov
push
jo
not
(bad)
pop
ins
mov
leave
(bad)
adc
or
movs
enter
push
sbb
test
fld
retf
mov
push
int3
mov
jge
dec
shl
test
aad
imul
mov
push
cmp
sbb
inc
cmp
mov
cmp
inc
adc
jp
adc
retf
das
mov
loopne
sbb
fs
cs
mov
aad
cmp
js
scas
mov
(bad)
sbb
call
outs
mov
jp
std
mov
mov
pop
ds
(bad)
cmp
jle
and
rcl
jecxz
mov
xchg
retf
push
mov
es
inc
inc
xchg
imul
(bad)
jge
push
xor
jmp
push
(bad)
jp
mov
icebp
adc
mov
das
(bad)
mov
push
fmul
or
or
fbstp
push
and
test
or
pop
stos
lods
icebp
xchg
fmul
aas
pusha
loopne
test
std
xor
xor
fisubr
push
mov
sub
lock
pop
inc
mov
std
sub
xchg
ret
jecxz
shl
inc
xchg
mov
cmp
cmps
fidivr
push
cmp
xchg
test
fld
dec
xor
cwde
aam
stos
test
dec
cmps
rcl
add
aaa
loope
cdq
cdq
loope
daa
add
jl
mov
in
fwait
xor
cmc
xor
adc
inc
inc
sub
adc
pop
ins
enter
sbb
fwait
push
gs
push
lods
popf
ret
add
push
cs
shr
and
mov
fcom
rcl
aad
sbb
mov
pop
xor
adc
push
rcl
out
push
cli
xchg
jns
sbb
fidivr
out
mov
jmp
ds
out
fdiv
mov
out
test
dec
push
out
push
cmp
test
ss
jge
lock
or
jg
and
xchg
shr
pop
add
es
(bad)
inc
sub
mov
scas
std
mov
adc
xor
fsubr
ss
dec
lock
and
ins
cmp
push
dec
dec
cmp
cmp
adc
sar
dec
inc
(bad)
push
pop
jmp
cwde
sbb
cld
(bad)
stos
xchg
(bad)
pop
dec
aam
popf
das
and
jge
jno
addr16
jecxz
ds
or
pop
xchg
ret
out
dec
fisttp
push
hlt
dec
mov
xor
sar
cmp
mov
(bad)
adc
repz
adc
push
mov
push
mov
hlt
push
inc
ins
add
cmp
aad
add
dec
ja
retf
inc
xchg
stos
jmp
or
push
and
mov
jnp
rol
int3
pop
inc
sbb
adc
dec
sbb
sbb
mov
adc
inc
inc
clc
ret
ror
or
in
and
xor
xor
jb
outs
sub
addr16
cdq
(bad)
clc
popa
xchg
fadd
jne
and
and
mov
mov
repnz
fist
stos
(bad)
(bad)
and
std
in
mov
sahf
mov
adc
sbb
pop
xchg
add
jl
shl
fld
ret
repnz
cmps
inc
ins
jp
ja
sbb
jp
jmp
in
push
jne
push
xchg
xchg
inc
jg
mov
imul
mov
hlt
mov
mov
adc
lods
xor
sahf
icebp
sahf
pop
push
sahf
xchg
mov
dec
sbb
rcr
and
test
mov
mov
xchg
ret
leave
inc
inc
or
movs
std
xor
pop
mov
lea
inc
xor
and
pop
int3
push
or
shr
adc
(bad)
js
cs
mov
xchg
dec
(bad)
sahf
jb
push
ja
ss
aaa
les
push
dec
ffreep
pushf
lods
lea
std
outs
inc
cdq
inc
jmp
mov
sti
daa
mov
sahf
hlt
icebp
add
loopne
stc
add
sub
(bad)
mov
push
mov
push
mov
jle
mov
and
scas
dec
pop
bound
dec
xchg
jae
inc
rol
dec
cmp
shl
mov
loopne
pop
data16
lods
rol
push
pop
scas
and
jnp
adc
daa
push
sbb
xchg
dec
xor
hlt
or
cmp
(bad)
jl
dec
ror
inc
fadd
mov
(bad)
mov
sub
adc
lods
in
push
push
xchg
push
ins
ror
fwait
int
jns
out
inc
cmp
movntps
xchg
cmp
sub
sub
enter
adc
xchg
lahf
aad
xor
cmps
into
std
mov
test
in
dec
out
xchg
xchg
nop
cwde
lock
test
mov
push
popf
mov
pop
inc
popa
mov
loop
xchg
ins
mov
clc
jbe
dec
sub
jl
inc
adc
fisttp
mov
retf
popf
xchg
pop
sti
addr16
stos
and
sub
pop
xchg
cmp
outs
out
jne
xor
sub
mov
scas
mov
fisub
mov
ins
in
mov
and
push
stos
(bad)
cmc
shl
scas
xor
scas
xchg
mov
call
push
pop
out
xchg
xor
dec
jmp
cmp
call
jle
push
js
adc
sub
push
scas
pop
adc
adc
add
or
push
in
xchg
push
int
sar
add
int3
mov
repz
rol
out
dec
pop
popf
dec
xlat
movs
jl
aas
shr
pop
sahf
cmp
bound
pop
sbb
push
jnp
jae
jp
mov
(bad)
imul
mov
dec
daa
jmp
cmp
dec
xchg
jbe
aaa
jne
mov
sbb
xlat
jmp
jne
shr
fimul
add
dec
add
or
(bad)
push
xchg
scas
jae
adc
lahf
adc
iret
test
cmp
jo
sbb
daa
push
shr
test
nop
shl
adc
in
mov
mov
test
sbb
add
xchg
xchg
or
and
inc
shr
dec
(bad)
sar
das
sbb
mov
cmp
mov
stc
inc
es
cmp
pop
lahf
push
jg
add
push
push
sbb
inc
inc
xor
push
mov
fidiv
sub
dec
adc
cmps
mov
cmc
mov
pop
iret
clc
mov
mov
dec
xchg
push
cmp
adc
jno
and
test
xchg
add
push
jne
dec
cld
mov
mov
cwde
cmp
aam
sbb
std
stc
dec
and
fmul
icebp
fs
dec
xchg
clc
dec
or
fist
cmp
cmps
sbb
in
repnz
xor
sbb
lods
and
cli
fadd
mov
arpl
xchg
mov
mov
xchg
xor
bound
xchg
xchg
push
in
push
sbb
outs
and
xchg
inc
popa
loopne
shr
cmp
les
mov
jns
mov
pop
jmp
sbb
adc
and
shl
jle
iret
in
out
mov
dec
jl
arpl
into
and
mov
inc
fild
xchg
stos
xlat
lock
(bad)
dec
jbe
xchg
fwait
and
rcl
bound
jmp
cmps
pop
outs
cmp
cmp
push
sbb
mov
push
pop
pop
mov
pushf
jo
xchg
std
or
clc
xchg
add
dec
ficom
push
jecxz
and
in
icebp
cli
retf
mov
je
inc
or
dec
jne
xor
jecxz
cmp
push
rol
aas
aas
enter
jp
inc
mov
daa
cmp
mov
mov
(bad)
or
cmp
jno
inc
not
cwde
xchg
stos
mov
fistp
or
xor
cmps
mov
push
xchg
data16
mov
pop
out
inc
mov
shr
sub
ins
in
adc
std
mov
ins
xchg
popa
jno
mov
loope
cmp
mov
dec
mov
icebp
or
mov
jb
dec
pop
lahf
aad
mov
pop
cdq
sub
push
mov
dec
cmps
pushf
sub
(bad)
push
ins
call
jecxz
xor
test
jl
icebp
arpl
jl
jbe
cmp
ss
(bad)
inc
lods
mov
addr16
shl
push
xor
jo
in
(bad)
jle
push
sub
inc
shl
xor
inc
out
mov
shr
inc
mov
jmp
push
and
mov
adc
mov
push
jne
(bad)
xchg
sbb
jmp
ins
cmp
(bad)
out
fcomp
inc
mov
mov
mov
inc
icebp
sbb
lea
jge
(bad)
push
cmps
mov
cmp
(bad)
ror
pop
dec
and
ds
outs
cmp
pop
fisttp
bt
lds
push
pop
test
cmp
movs
imul
push
stos
cwde
jmp
ret
push
arpl
xchg
scas
call
adc
jb
push
pop
push
dec
popa
jbe
xchg
js
fisubr
push
ds
jb
daa
(bad)
mov
retf
loope
loope
mov
or
cmp
inc
ss
adc
out
retf
adc
call
mov
rcr
mov
pop
inc
lea
in
inc
xchg
not
inc
int3
pop
cli
aas
inc
mov
xchg
je
(bad)
repz
fnstcw
inc
ds
jno
push
jne
cmp
or
in
fnstsw
adc
sub
push
in
dec
cmc
enter
jmp
cdq
push
mov
inc
cwde
sub
ds
jecxz
fild
dec
jmp
sub
cld
ja
loop
jnp
int3
fdecstp
xor
sub
jno
push
outs
cmp
jo
hlt
cdq
dec
out
ds
outs
lds
pop
inc
ror
dec
inc
mov
inc
ret
aaa
xor
mov
cmp
adc
pop
aaa
cmps
les
jmp
aaa
rol
xor
cld
popf
cmp
push
adc
mov
psubsb
jnp
leave
movs
mov
pusha
cdq
nop
(bad)
addr16
popf
or
add
add
dec
popa
inc
retf
mov
dec
push
lock
cli
push
lods
jbe
test
mov
outs
scas
popf
lahf
xor
shr
mov
retf
mov
gs
ror
jle
dec
xchg
adc
push
lods
loop
inc
enter
push
jecxz
fxam
xchg
push
frstor
jmp
fcomp
push
xor
sahf
or
jge
jp
mov
push
es
lea
add
lods
jns
ss
and
enter
icebp
(bad)
les
mov
scas
psadbw
jl
(bad)
js
inc
(bad)
rol
aas
rcr
data16
int3
or
xchg
ss
mov
xchg
idiv
fdivr
inc
mov
xchg
in
push
push
ds
mov
mov
imul
sub
push
inc
jp
xchg
in
loop
sbb
mov
aas
in
(bad)
dec
adc
mov
imul
out
mul
inc
mov
stos
jl
es
pop
inc
sbb
cwde
retf
mov
mov
mov
lock
jp
inc
xor
jmp
dec
mov
xor
sub
ins
dec
test
push
inc
icebp
fild
pop
sbb
mov
das
xor
sbb
std
dec
ret
mov
mov
or
ficomp
ins
inc
ret
mov
movs
(bad)
jp
out
jb
out
cmp
cmp
jnp
test
cmps
leave
outs
push
push
mov
pop
xor
retf
leave
loope
out
and
retf
pop
mov
rol
out
iret
les
dec
xor
inc
cdq
je
(bad)
repz
xchg
pop
pop
shl
push
enter
mov
jnp
sbb
jbe
pop
(bad)
dec
adc
xor
out
mov
out
mov
bts
inc
dec
adc
sub
repnz
(bad)
loope
add
mov
sub
xchg
or
xlat
das
and
in
jo
stc
sbb
mov
pushf
not
jmp
mov
sbb
ins
dec
inc
loop
push
cmp
shl
(bad)
jo
ret
pushf
jl
cmps
jae
adc
mov
aad
fwait
mov
add
scas
outs
or
out
cdq
jb
mov
loopne
or
test
(bad)
adc
mov
cld
xor
sub
pop
add
jg
inc
je
lods
in
jl
jle
jno
sub
shl
jmp
ss
fs
int3
jno
cmc
mov
(bad)
movs
data16
jae
xchg
lods
rcl
xchg
pop
pop
test
icebp
dec
cmp
pop
aad
cs
xchg
mov
inc
out
out
hlt
push
call
(bad)
mov
es
iret
dec
call
cmp
xor
fisubr
dec
pop
push
cmp
dec
add
outs
mov
es
and
and
sar
mov
push
retf
jecxz
cmp
push
test
repnz
daa
outs
push
cmp
inc
aam
xor
jle
and
rol
sbb
daa
xchg
mov
xchg
int
pop
outs
cwde
inc
mov
cmp
(bad)
enter
clc
lea
aam
and
imul
mov
push
ret
in
push
mov
xchg
dec
pop
mov
and
cli
fist
repnz
xchg
inc
inc
bound
mov
out
xor
mov
popf
adc
jecxz
(bad)
shr
mov
cs
scas
arpl
ficom
les
jnp
jle
gs
iret
mov
push
scas
repz
inc
cmps
out
fiadd
je
not
cmp
rcl
jmp
xchg
retf
jecxz
inc
mov
fcomip
mov
jae
addr16
fs
(bad)
loopne
and
fisttp
enter
fwait
popa
mov
push
inc
test
iret
in
clc
test
xchg
pop
mov
cli
js
daa
jmp
add
inc
or
mov
inc
das
inc
lods
jp
nop
idiv
stc
cmp
out
leave
iret
sbb
in
lahf
iret
loop
xor
aaa
cmp
push
push
outs
aam
retf
jnp
jg
push
stos
inc
sbb
mov
outs
jmp
repnz
je
pop
adc
mov
sar
push
inc
pop
push
pop
gs
jae
mov
lds
leave
pop
icebp
pop
mov
arpl
mov
mov
loopne
ror
pop
mov
fisubr
ret
popa
arpl
cmp
rcr
dec
and
mov
in
lods
ds
mov
inc
mov
pop
js
in
aad
mul
adc
adc
movs
dec
ficom
pop
sbb
mov
bound
or
call
mov
scas
push
push
push
sub
es
popf
in
pavgw
mov
dec
pop
cmp
mov
in
lods
or
in
push
outs
aaa
or
cmc
xchg
sbb
imul
pushf
sahf
pusha
popf
(bad)
shl
push
push
push
test
ret
cs
jae
fsub
xor
cld
imul
pop
inc
sar
ret
fild
cwde
or
jecxz
imul
movs
mov
xor
xchg
clc
pusha
pop
mov
aad
ror
retf
mov
shl
cmp
cwde
or
inc
sbb
aad
xchg
sbb
jle
cmp
pushf
pop
in
(bad)
dec
adc
pop
cdq
xchg
retf
ins
xchg
std
add
cmp
xchg
xchg
cmp
xor
add
leave
out
adc
mov
les
stos
call
rcr
or
jl
cdq
jle
scas
cli
outs
stos
out
fs
arpl
pop
aam
pop
jnp
xchg
xor
sub
pop
sbb
iret
xor
fs
loope
in
retf
lahf
xchg
xor
inc
loopne
jl
pop
js
cmp
add
retf
(bad)
sbb
jne
in
inc
dec
int3
test
fsub
out
(bad)
mov
mov
or
ins
mov
sbb
cmp
pop
or
icebp
xor
out
(bad)
mov
lock
push
sbb
retf
xor
xchg
and
push
xchg
push
daa
cld
fist
movs
sub
cmps
pop
jle
stos
sahf
sub
pop
adc
cmp
mov
popf
and
test
jle
pusha
ds
bound
cs
fidiv
or
call
xchg
rcl
mov
imul
lods
adc
enter
je
sbb
push
cmp
push
jg
ja
movs
mov
push
adc
shl
mov
aam
(bad)
out
sar
mov
stos
int3
ins
in
scas
sbb
arpl
or
(bad)
adc
sbb
and
sbb
lods
push
jnp
or
add
xchg
cmc
add
lods
push
push
pusha
cmp
add
and
jae
pop
lea
in
lock
rcr
sbb
mov
xchg
movs
call
or
cmp
imul
inc
lods
enter
jmp
xor
cmp
test
lods
les
mov
scas
pop
xchg
add
inc
cmp
xchg
stos
jle
stos
and
jle
push
and
jle
mov
mov
add
inc
mov
ja
jae
jo
adc
or
shl
stos
mov
push
inc
nop
retf
pop
in
out
scas
hlt
jmp
cs
scas
pop
push
dec
xchg
fadd
fsubr
call
adc
adc
mov
enter
outs
fisubr
dec
inc
xchg
jae
lahf
fistp
popa
sar
jg
out
aas
inc
sub
pop
adc
mov
out
mov
jge
or
jge
sbb
imul
je
sub
sti
inc
ror
jmp
in
mov
movs
mov
jnp
xor
inc
lods
push
(bad)
dec
sub
cmps
in
mov
fs
cmp
mov
dec
stos
lock
push
inc
push
xchg
xchg
sbb
push
fsubr
lds
mov
rcl
stos
test
mov
shl
sub
cmp
dec
pushf
lds
mov
sub
dec
(bad)
btr
pop
fistp
imul
cs
sub
xor
cmps
push
cld
mov
mov
dec
mov
and
repnz
cmp
jg
or
jns
dec
mov
es
cli
jl
pop
je
mul
leave
scas
or
sub
pushf
dec
dec
add
es
aaa
out
xor
int3
inc
test
(bad)
sub
dec
push
aad
fcompp
xchg
pop
enter
pop
fst
div
addr16
fstp
and
sub
fsub
enter
mov
mov
adc
adc
sub
ret
mov
jae
test
call
in
cmp
lock
cmp
cmp
jne
xchg
jno
fdiv
hlt
scas
(bad)
(bad)
test
pop
mov
iret
sahf
push
and
in
sub
sub
shl
mov
mov
(bad)
fld
pushf
lock
stos
pushf
je
push
mov
leave
(bad)
imul
test
adc
push
ins
and
out
push
dec
je
sbb
dec
ret
fs
lods
xchg
adc
test
and
fdivr
cmc
movs
nop
aas
push
pop
jbe
ret
and
jae
stos
or
sar
out
in
fs
inc
add
add
xor
out
push
popf
pop
xchg
push
pusha
sub
aam
hlt
in
and
xchg
xchg
jecxz
call
fstp
mov
ret
mov
mov
pop
punpckldq
das
aam
loop
jne
sub
imul
(bad)
sbb
add
cld
test
xchg
pop
imul
sub
nop
shl
outs
sbb
jnp
mov
xlat
mov
sub
mov
sub
sbb
adc
xchg
scas
dec
and
sti
lods
outs
not
mov
nop
test
retf
(bad)
fadd
mov
or
push
ds
outs
jae
adc
and
icebp
ds
or
ret
ret
out
xchg
and
test
test
in
mov
mov
loope
shl
pop
mov
int
out
add
pop
loope
iret
xor
loope
sub
mov
push
mov
stc
es
jnp
xlat
cmp
mov
inc
xchg
sbb
(bad)
cmp
stos
fbld
sahf
(bad)
xor
jge
or
dec
dec
and
sti
cmp
repz
pop
adc
xor
arpl
fcomi
xchg
pop
in
ins
out
xor
mov
mov
loop
mov
std
(bad)
mov
sub
mov
mov
add
movs
dec
mov
pop
fs
mov
int3
xchg
fs
push
pop
mov
fisttp
or
cwde
outs
repz
dec
gs
ins
(bad)
sahf
adc
or
cmp
call
movs
mov
out
sub
add
test
fidiv
xchg
es
inc
jne
das
mov
dec
cdq
loopne
push
pushf
lock
cmp
push
xor
inc
shl
mov
sub
sti
mov
fisttp
pop
or
es
stos
rcl
or
je
push
out
and
jp
or
test
aaa
pop
inc
push
mov
sbb
sahf
push
xchg
ret
push
into
lea
(bad)
fdiv
test
addr16
scas
push
movs
adc
xchg
mov
cmp
pop
(bad)
push
mov
retf
inc
adc
push
enter
sbb
ret
jle
sbb
jp
add
test
jnp
fmul
pushf
leave
(bad)
add
cmp
or
movs
test
dec
pushf
aas
addr16
adc
xor
pusha
rcr
cwde
outs
shr
pop
jp
sti
jno
shl
fld
int
dec
mov
cwde
shr
es
sub
cmovl
or
bound
or
xor
push
scas
inc
lds
cmps
aad
jg
int3
ret
arpl
dec
test
push
lods
mov
xor
jns
dec
jp
popf
xchg
(bad)
in
mov
scas
ds
and
inc
call
ret
pop
enter
jno
scas
mov
sub
cld
(bad)
fiadd
xor
dec
in
jge
out
cmps
cs
cmps
test
mov
ret
ins
sbb
cld
sbb
sub
jbe
movs
cli
mov
push
das
scas
xchg
popa
xchg
nop
pop
xchg
ins
dec
call
out
jo
xchg
data16
out
jo
das
or
int
sti
pop
push
push
ds
in
int3
inc
cdq
mov
mov
jl
enter
and
les
cdq
inc
cmp
dec
sbb
movs
mov
sub
jns
mov
and
mov
pop
mov
fadd
sub
icebp
sbb
pop
ins
mov
daa
mov
retf
pop
pushf
pop
xchg
fdiv
inc
and
ret
mov
out
or
aad
out
mov
mov
push
jmp
in
or
jmp
add
push
retf
mov
inc
adc
mov
movs
pusha
pushf
jmp
mov
xor
xchg
mov
xor
sbb
pop
xchg
jno
fild
stc
aaa
test
push
out
pusha
adc
pop
or
iret
test
arpl
cmp
jno
xchg
pop
xchg
retf
sub
fxch
retf
inc
dec
mov
jne
inc
pop
jns
ficomp
call
mov
sbb
not
test
mov
test
xor
mov
cmp
xchg
add
xchg
mov
jns
mov
and
fadd
add
mov
das
icebp
dec
call
popf
fneni(8087
out
mov
arpl
jb
xor
shl
or
pop
pop
addr16
sbb
mov
mov
push
jl
ss
adc
cdq
call
xor
cwde
in
push
jg
mov
xchg
and
fisttp
xchg
cdq
loop
cmps
push
adc
rol
ins
jo
or
imul
test
mov
and
or
outs
jnp
call
sbb
cmp
xor
movs
movhlps
loope
mov
push
push
dec
das
pop
push
sub
cld
push
sbb
sbb
xchg
cli
aaa
cmp
bsf
jge
dec
clc
inc
out
rol
aad
movs
pop
push
sub
jecxz
dec
sbb
sub
inc
mov
mov
push
pop
mov
mov
out
inc
xor
repnz
cli
lods
xchg
pop
mov
es
sub
ins
add
mov
mov
mov
cs
clc
mov
ret
cmp
sbb
cdq
sub
jns
rcr
adc
inc
int
dec
mov
jne
test
outs
test
gs
dec
xchg
clc
(bad)
scas
ret
adc
mov
sar
or
add
data16
inc
in
test
jecxz
xchg
(bad)
faddp
dec
outs
in
mov
lock
sbb
push
in
jmp
pop
sti
fimul
call
fisttp
adc
and
nop
enter
jg
or
xchg
pop
sbb
add
dec
or
jb
sub
dec
or
ss
or
pop
pop
ds
test
shr
repz
xchg
movs
ins
cmc
in
mov
dec
cld
setns
push
push
leave
out
fst
fs
xchg
mov
and
ret
mov
jbe
(bad)
imul
leave
test
rcr
or
add
push
ds
rcl
ins
test
mov
pop
cs
jl
es
out
mov
shl
cmp
popa
dec
sbb
adc
outs
push
enter
pop
dec
adc
sub
jae
or
pop
fsub
rol
pop
fsubrp
dec
mov
mov
sub
adc
push
mov
add
sub
loope
mov
mov
pop
jecxz
loop
cli
dec
scas
cmp
jnp
daa
cli
(bad)
push
add
sbb
enter
jns
jns
cs
pop
jno
dec
aaa
mov
dec
mov
stos
fwait
in
sub
xchg
aas
push
pop
in
pop
shr
shl
gs
int3
imul
and
sar
mov
sub
stos
sbb
sbb
cld
mov
je
mov
sub
push
mov
xchg
fiadd
pop
int3
and
aad
xchg
mov
jbe
(bad)
lock
push
loope
xchg
and
mov
stos
sbb
sub
fdiv
or
push
adc
mov
jmp
ud1
and
call
push
mov
mov
mov
mov
stos
mov
pop
sub
pop
xchg
add
dec
jmp
loope
sub
lahf
clc
mov
xchg
mov
dec
mov
(bad)
outs
pop
push
pop
jmp
inc
popa
mov
das
inc
vaddps
sbb
pop
jmp
ss
(bad)
mov
mov
ret
inc
enter
movs
lea
cmp
stos
sbb
sahf
test
(bad)
pop
popf
aas
jo
sar
push
lds
push
jne
xor
popa
jno
sbb
daa
nop
dec
hlt
leave
push
nop
out
in
jmp
sub
movs
jnp
cs
out
adc
jno
clc
push
sar
das
and
lock
sub
jns
adc
adc
in
dec
das
lods
leave
inc
lods
jno
not
sbb
and
out
adc
movs
movs
jl
lock
cmc
pop
mov
cmp
pop
or
xor
sub
push
out
jge
dec
mov
xchg
out
pop
ins
fs
pop
fiadd
fnstsw
push
mov
test
and
cmps
repnz
mov
or
or
or
pop
test
dec
outs
inc
jecxz
bound
ss
in
sbb
pop
dec
pop
dec
mov
xor
or
cli
int
out
jbe
sub
inc
ror
cwde
xor
pushf
sbb
fist
pop
scas
idiv
cmp
xchg
inc
ret
push
call
push
or
pop
mov
in
jnp
sbb
outs
bound
ja
(bad)
sbb
in
sbb
push
pop
inc
xchg
mov
movs
mov
or
cwde
sar
cmps
push
arpl
cmp
adc
into
add
dec
push
inc
mov
cs
shl
cmp
mov
aas
pop
mov
adc
pop
mov
push
ret
cmp
arpl
dec
rcr
rol
adc
inc
popf
cli
xlat
out
mov
(bad)
idiv
mov
xchg
push
out
das
popa
(bad)
pop
inc
mov
push
pop
ret
push
jmp
es
inc
test
fcmovnu
push
adc
pop
xor
sub
mov
or
jle
es
sar
call
inc
gs
fistp
popa
xor
pusha
icebp
or
mov
test
fld
sbb
(bad)
not
xlat
add
pop
xchg
sub
in
cmc
idiv
pusha
enter
pop
(bad)
cmc
mov
cmp
or
bound
add
jb
inc
push
mov
jmp
or
sub
cmp
jne
lock
adc
(bad)
push
mov
push
cdq
repnz
xor
xchg
ror
adc
sub
cmp
sbb
scas
cmp
inc
arpl
icebp
jo
mov
cmp
adc
jg
lock
sub
popf
dec
test
xchg
std
inc
mov
aam
jbe
and
xchg
or
pop
(bad)
call
inc
outs
test
inc
add
add
push
ficomp
nop
adc
out
fsub
or
lahf
je
mov
cmp
fiadd
rol
push
add
pop
and
jmp
inc
imul
sbb
mov
sub
fisttp
cs
mov
call
pop
and
and
push
inc
jp
pop
sbb
push
cmp
sahf
fwait
dec
out
jecxz
es
push
inc
mov
pop
enter
pop
mov
mov
test
enter
push
pop
sahf
sar
mov
cwde
ins
repz
adc
jle
out
call
dec
jge
mov
pop
shr
cs
lahf
push
dec
sahf
mov
cmps
xor
mov
out
cmp
cmps
mov
xchg
rol
int3
sub
out
je
je
pop
jnp
(bad)
pop
rcr
jecxz
out
lahf
add
div
pusha
sbb
jl
xchg
add
cdq
cli
mov
mov
test
inc
data16
push
xchg
mov
retf
dec
xor
adc
nop
adc
ss
pop
inc
dec
and
dec
sub
retf
xchg
dec
pop
inc
and
call
mov
loopne
mov
add
pop
mov
push
inc
ds
test
test
push
and
outs
cli
mov
retf
sar
call
adc
lds
push
and
xchg
jno
iret
test
pop
cmps
in
or
or
mov
outs
dec
mov
aam
ret
out
neg
mov
in
xchg
(bad)
mov
fdiv
out
add
aam
sub
repnz
mov
xor
popa
pop
inc
scas
and
xor
mov
jmp
cwde
mov
arpl
addr16
ins
mov
adc
mov
xor
inc
js
jle
lds
hlt
pop
sbb
je
fist
inc
scas
loopne
mov
stos
or
cmp
fwait
mov
mov
bound
xchg
adc
jecxz
mov
pop
mov
not
jge
or
in
push
js
(bad)
stc
dec
cmp
ja
(bad)
mov
sbb
adc
sbb
lods
xor
dec
pop
mov
and
scas
adc
mov
xchg
mov
inc
xlat
mul
ret
gs
outs
nop
push
aad
out
lea
clc
and
test
fld
mov
enter
inc
mov
inc
sub
mov
ss
push
cmp
int
lock
imul
mov
mov
push
or
mov
jne
pop
sbb
mov
mov
sub
mov
adc
mov
out
push
push
mov
ffree
retf
mov
xchg
add
clc
rol
fldcw
xchg
outs
shl
mov
mov
ss
imul
sbb
xchg
inc
outs
mov
xor
in
adc
add
popa
dec
xchg
mov
ror
pop
sub
cs
add
add
dec
pusha
mov
jae
cmp
xchg
dec
test
popa
jmp
out
(bad)
shl
cmp
add
cmp
adc
mov
sbb
les
aaa
ins
jbe
push
and
cmps
inc
test
repz
jo
mov
adc
inc
into
xchg
sub
mov
stos
pop
jo
inc
loop
dec
mov
mov
xor
xor
pop
rcl
pop
pop
(bad)
cld
add
es
or
imul
call
pop
loop
in
mov
retf
into
xchg
jno
(bad)
jmp
lock
jmp
xchg
mov
lock
and
lahf
sub
push
and
rol
stos
rcl
rcl
stos
inc
pushf
or
mov
aad
repnz
add
ret
(bad)
fld
or
bnd
pop
push
push
adc
sub
mov
or
sbb
xchg
sub
ja
movs
cmp
cmp
movs
xchg
sub
mov
inc
in
das
adc
mov
jnp
test
or
adc
mov
fs
add
adc
das
jbe
pop
repnz
ss
(bad)
fst
retf
popf
mov
xchg
mov
daa
inc
xor
out
fcomp
and
adc
sub
mov
add
adc
pushf
push
push
movs
ror
inc
xor
sub
push
pop
cmp
dec
sbb
xor
dec
(bad)
mov
or
cmps
inc
imul
retf
mov
sbb
jbe
mov
aad
xor
movs
fs
out
(bad)
nop
push
rol
fsubr
sbb
enter
add
jnp
push
mul
dec
xor
dec
and
jecxz
sbb
pusha
in
lods
(bad)
dec
arpl
add
inc
fstp
sti
jge
gs
xor
xor
or
and
ins
fdiv
dec
out
jne
mov
in
or
adc
jecxz
fild
stc
add
mov
jnp
jns
pushf
dec
xor
inc
cmps
mov
(bad)
dec
jle
cld
pop
xor
rcl
lods
xor
mov
iret
and
adc
adc
jmp
xor
dec
sub
repnz
mov
xlat
inc
pop
push
stos
pop
jmp
add
mov
data16
xchg
pop
shl
outs
mov
sbb
mov
fucom
scas
xor
xlat
push
in
je
mov
mov
cmps
popa
js
(bad)
dec
fiadd
dec
(bad)
add
pushf
outs
inc
mov
push
and
test
add
dec
jno
movs
rcr
push
mov
(bad)
and
pop
cmps
leave
dec
call
pop
neg
call
pushf
js
lock
in
adc
call
sub
xchg
jnp
xchg
test
jge
mov
adc
add
xor
inc
xor
mov
sahf
loop
iret
inc
cmp
add
and
jp
mov
dec
dec
icebp
and
xlat
arpl
push
ret
arpl
in
int3
std
dec
imul
fcom
sbb
xchg
pop
sahf
neg
clc
cmps
dec
bound
push
cwde
inc
ficomp
sbb
cmp
add
cwde
hlt
push
adc
and
push
dec
fwait
xor
(bad)
fiadd
xchg
pop
jle
(bad)
cdq
dec
xor
jg
mov
fld
add
aas
sub
sub
int
cdq
sub
jmp
inc
mov
out
shr
pop
lods
pop
add
ss
cmps
test
mov
mov
cld
mov
mov
(bad)
iret
inc
nop
dec
mov
(bad)
pusha
sub
sbb
and
loope
data16
sbb
(bad)
pop
add
cwde
sub
test
addr16
push
dec
stos
jae
arpl
mov
mov
mov
xor
dec
add
ss
ins
jle
and
bound
leave
int
jnp
out
jecxz
dec
fsubr
pop
aam
mov
jmp
sahf
xor
xor
push
(bad)
(bad)
dec
lea
stos
xor
sbb
test
int3
push
imul
out
pop
cmps
popf
inc
dec
dec
shr
sub
out
es
add
aam
add
call
cmps
xor
cmovl
hlt
mov
sbb
xchg
jl
adc
sub
and
ja
aad
icebp
push
test
(bad)
push
dec
scas
xchg
cli
mov
or
xchg
adc
bound
popf
pop
sbb
or
out
sub
cmps
popf
xor
jae
sbb
inc
sar
adc
sub
test
movs
rcr
mov
jno
sub
ficom
(bad)
cmp
sti
jne
xor
add
ja
mov
lahf
add
cmp
cmp
aas
sar
sti
das
in
and
enter
call
mov
stos
and
outs
push
cli
enter
xchg
inc
pop
inc
imul
and
jp
outs
imul
jp
sbb
jnp
rcr
out
and
sub
inc
mov
adc
mov
pop
frstor
pop
pop
imul
fdiv
push
push
or
popa
iret
dec
hlt
mov
leave
pop
arpl
stos
push
or
test
jbe
add
ret
cmp
push
(bad)
stc
retf
push
lahf
pop
sahf
enter
das
(bad)
mov
ins
mov
pop
mov
ja
xchg
cmps
outs
inc
dec
das
pop
aas
fdiv
mov
fisub
into
and
cmc
adc
push
and
dec
cmp
fst
inc
push
pop
pop
pushf
(bad)
cmp
mov
mov
sbb
cmp
add
dec
or
out
sbb
and
outs
jge
fadd
cdq
arpl
sahf
inc
sub
adc
repz
lea
xchg
inc
cld
(bad)
rcr
fmul
sar
jmp
jge
cmp
out
inc
cs
rcr
jle
ret
in
inc
(bad)
xor
mov
ud0
mov
cmp
jmp
cwde
aaa
mov
movs
xchg
pop
in
mov
pop
jge
jmp
jecxz
pusha
mov
(bad)
je
mov
mov
stc
lods
sbb
int
cmc
or
pushf
mov
ror
mov
mov
pop
dec
js
rcl
popf
rol
stc
inc
push
cmp
jge
mov
lahf
nop
push
out
mov
pop
ret
pop
cli
pushf
dec
(bad)
cmp
sub
mov
cmc
scas
push
ja
xor
pop
int3
stos
retf
push
sbb
mov
add
and
lods
loope
and
fucomp
pusha
xor
xchg
addr16
sub
shl
adc
(bad)
bound
adc
rol
mov
ins
sub
dec
aam
mov
in
jmp
push
adc
xor
inc
repz
mov
xor
pop
cmp
call
xor
bound
or
mov
mov
push
loopne
movs
xchg
test
rol
dec
out
add
or
jae
and
cmp
jo
cmp
push
sti
movs
fwait
imul
inc
ins
xor
dec
das
mov
scas
jg
dec
repnz
jle
fsubr
test
jecxz
inc
cmp
imul
clc
popa
push
xor
ins
fidivr
push
dec
and
call
ins
pop
lods
push
adc
loope
(bad)
retf
jmp
push
cmovp
push
fdivr
pop
dec
stc
addr16
hlt
repnz
iret
jmp
int3
push
adc
scas
push
dec
outs
or
int3
or
leave
shl
dec
dec
dec
mov
arpl
push
mov
jmp
xor
cmc
push
loope
hlt
jb
js
jmp
inc
pop
ss
ds
push
out
fnstcw
fmul
aad
jecxz
add
clc
daa
ss
and
mov
adc
dec
mov
xor
je
dec
inc
jge
sub
scas
xor
sub
int3
stc
pop
fidivr
and
sbb
retf
pop
iret
cmp
aad
mov
movs
iret
sub
push
out
push
test
outs
loop
(bad)
sub
xlat
inc
or
std
dec
xor
cs
int3
sahf
loope
xchg
imul
sbb
jno
push
not
ss
js
fcmovbe
out
shl
xor
scas
xchg
mov
ja
and
jge
loopne
ret
call
and
dec
repnz
fimul
jecxz
inc
arpl
fld
pusha
add
jle
mov
adc
dec
pop
push
fstp
or
jb
in
jle
ret
mov
jmp
and
jle
inc
xchg
in
fwait
push
and
cwde
or
lods
leave
mov
mov
ja
gs
dec
rol
inc
(bad)
mov
jp
shl
cmp
ret
push
push
xchg
xchg
xor
jge
and
xchg
or
dec
test
mov
in
cmps
sub
inc
xchg
mov
push
adc
fs
(bad)
(bad)
add
push
push
xchg
out
dec
jno
mov
pop
push
pop
xor
sbb
ja
call
je
mov
ret
mov
mov
cvtps2pi
outs
das
push
push
jmp
jmp
test
daa
mov
stos
ja
sub
jmp
loop
loope
jecxz
sub
gs
add
es
cmp
add
rcl
adc
out
push
mov
jbe
push
(bad)
mov
(bad)
jmp
dec
jbe
cmp
add
pop
int3
adc
test
dec
dec
dec
pushf
pop
pushf
adc
mov
ins
lds
push
int3
mov
mov
adc
push
aaa
cli
push
push
arpl
sbb
jmp
leave
fld
jnp
sub
xchg
in
fcmovnbe
rcl
jle
retf
test
or
imul
jle
add
fs
mov
cmps
adc
jp
mov
pop
repz
jne
call
and
pop
push
(bad)
sub
inc
mov
sub
cdq
xchg
mov
ret
fdivr
jmp
mov
in
cmps
push
mov
mov
out
pop
fwait
aad
mov
mov
jno
call
or
or
test
lods
retf
push
add
mov
test
xchg
clc
shr
or
cmc
enter
adc
xchg
imul
into
cmp
xor
sbb
test
push
pop
mov
scas
xchg
rol
(bad)
push
mov
xchg
fst
jo
loop
test
mov
or
mov
cmps
test
xor
mov
mov
scas
hlt
outs
inc
mov
pop
ins
jns
jl
aad
out
inc
cmp
cmp
div
icebp
pop
and
and
push
push
(bad)
imul
(bad)
lahf
jnp
jecxz
and
mov
adc
sub
cld
jmp
inc
popf
rcl
pop
js
in
adc
mov
inc
mov
sbb
cmp
mov
stos
dec
sbb
cmp
pop
test
jo
cld
stos
mov
(bad)
sub
leave
sub
pusha
int
fimul
mov
mov
call
adc
xor
(bad)
vpsrad
pop
pop
mov
add
jns
cmp
jl
xchg
bndstx
sahf
jg
sbb
movs
in
repnz
popa
xchg
(bad)
adc
adc
jmp
add
xchg
aad
cmp
ficom
sub
ror
daa
mov
fninit
jo
ja
jns
(bad)
push
sub
adc
push
pop
dec
stos
adc
mov
fstp
inc
ror
test
in
or
or
(bad)
outs
inc
xchg
shl
mov
dec
loop
out
dec
popa
jo
xchg
sub
sub
sbb
pop
mov
imul
and
jbe
cli
call
in
test
jb
xor
rcr
pop
push
add
jne
ds
xchg
enter
xchg
add
and
addr16
int
(bad)
mov
out
sahf
xchg
aas
call
push
push
daa
pop
imul
sbb
jne
jno
sbb
and
jle
lds
ror
xor
sub
or
inc
inc
addr16
test
mov
std
pushf
mov
ss
jmp
xlat
push
loopne
mov
mov
jae
lock
std
mov
mov
xchg
pop
xchg
fisttp
test
dec
loope
fs
int
dec
xchg
add
fdiv
(bad)
pop
int
push
test
jecxz
sub
fld
lock
xor
gs
sbb
jnp
(bad)
leave
mov
adc
fadd
fst
dec
cmp
sbb
mov
(bad)
fnstcw
je
outs
sbb
rcl
or
std
fwait
addr16
sbb
sub
fmul
imul
mov
cmps
lods
dec
jge
loope
pop
mov
add
fwait
add
inc
mov
js
push
lds
xor
clc
jo
jmp
xchg
mov
int
bound
pop
mov
pop
add
cmp
or
ret
push
in
ret
add
jp
mov
pusha
dec
sub
enterw
pop
or
mov
jbe
mov
ja
repz
sbb
out
(bad)
out
fmul
push
or
and
out
sbb
arpl
sbb
les
mov
pop
rcl
mov
and
sar
iret
mov
mov
frstor
xlat
xor
dec
or
fs
dec
movs
(bad)
push
pop
rcl
cmp
add
mov
stos
fs
fiadd
leave
mov
out
(bad)
pop
(bad)
jl
imul
cli
mov
loop
cs
push
stos
and
dec
lods
jmp
movs
mov
scas
(bad)
shl
jae
jg
aas
fdiv
dec
addr16
out
jle
sti
push
lds
mov
dec
lods
inc
cdq
rcr
data16
jg
mov
xchg
xchg
add
dec
xchg
xchg
ret
mov
scas
stos
xchg
fs
shl
or
clc
loopne
mov
jg
enter
loope
ins
add
dec
push
jp
push
sub
cmps
or
(bad)
xchg
leave
sub
dec
mov
mov
pop
lock
ret
stos
jp
push
and
push
icebp
ja
call
retf
and
(bad)
aas
dec
xlat
jge
iret
enter
jle
fimul
or
push
das
xchg
out
push
clc
test
das
imul
fxtract
xor
movs
adc
mov
push
lds
mov
dec
or
enter
cmp
push
bound
les
and
popa
mov
fdiv
mov
inc
outs
dec
or
adc
and
jl
push
in
push
pop
pop
sbb
sbb
jg
(bad)
dec
add
xor
and
sar
jg
or
sub
js
leave
push
dec
outs
mov
xor
and
repnz
mov
push
xchg
cmp
mov
and
inc
movs
mov
jns
into
jl
and
mov
and
dec
or
inc
test
adc
push
jae
enter
out
mov
iret
arpl
ds
out
sub
icebp
cmc
mov
ret
and
push
jo
loop
in
repnz
jecxz
push
(bad)
pop
fbstp
add
xor
adc
pushf
call
and
loop
or
or
daa
add
inc
and
dec
(bad)
xor
or
jo
or
or
in
cli
sub
mov
xlat
lock
push
ds
inc
in
cmps
inc
push
lahf
imul
pop
pop
in
adc
push
sbb
stos
int3
push
std
(bad)
inc
popa
jg
sbb
mul
mov
sub
jae
lods
xchg
cmp
jmp
xchg
call
mov
sub
scas
cmp
jecxz
stos
sub
mov
mov
lock
and
into
jnp
cmp
cmps
inc
adc
xchg
loope
push
hlt
cmp
sub
mov
data16
aam
sbb
cdq
les
or
mov
sub
aam
cmps
xor
mov
call
and
shr
cmc
pop
daa
mov
add
enter
enter
cdq
repz
mov
add
xlat
pushw
es
mov
repz
add
push
not
sbb
cld
mul
into
cmp
add
xlat
push
mov
mov
div
test
out
add
mov
fld1
inc
mov
xchg
cdq
push
retf
cmps
or
div
call
push
sub
jmp
bswap
xlat
jnp
dec
in
das
jo
daa
sar
xor
xchg
mov
sub
add
mov
lds
jae
cbw
(bad)
and
dec
gs
xchg
dec
pusha
outs
push
inc
mov
mov
mov
lea
and
rcl
mov
test
(bad)
cmp
out
jp
push
jmp
popa
jmp
bound
imul
fs
loope
xchg
mov
pop
dec
push
mov
shr
add
mov
(bad)
fidivr
fs
imul
test
xor
sbb
not
mov
shr
mov
xchg
sbb
mov
inc
fs
shr
lea
xor
sbb
js
cli
leave
push
mov
xor
dec
out
inc
test
pop
xor
dec
jl
jg
bound
shr
add
movs
mov
fcomp
fadd
ds
xor
or
or
fsubp
cmp
or
into
es
das
je
call
inc
in
jl
ret
cmc
repnz
cli
in
sbb
imul
pop
or
es
dec
loopne
inc
add
outs
lods
pop
imul
xchg
push
xchg
je
xor
aad
mov
cmps
cmps
icebp
dec
popf
xchg
jmp
fsubr
sbb
shl
clc
pop
inc
xchg
cmp
xor
leave
dec
movs
hlt
inc
xor
push
cmovo
mov
out
and
push
jge
and
xchg
pushf
dec
mov
les
pop
mov
sub
aad
pop
std
add
cmc
dec
sbb
in
and
sar
ror
ror
retf
pushf
mov
mov
inc
sbb
stc
retf
sbb
test
dec
cmp
std
push
xchg
jmp
ins
jns
or
fdivr
mov
push
fcom
xchg
pop
mov
dec
pop
cmps
add
syscall
mov
adc
or
ins
js
lea
push
inc
pop
mov
mov
and
outs
cmp
fcomp
fst
movs
dec
ficom
sahf
call
pusha
adc
inc
sbb
sub
sub
aas
cmp
jge
(bad)
xchg
jl
out
pop
push
data16
mov
add
mov
jg
pop
ja
jge
enter
out
and
sbb
out
fst
and
(bad)
xchg
or
call
add
sbb
aaa
aaa
pop
call
jmp
out
sbb
out
jmp
jno
xor
xchg
not
nop
movs
pop
mov
push
dec
sbb
jmp
xlat
retf
cmps
cs
xchg
f2xm1
les
cmc
push
dec
(bad)
adc
jmp
pushf
sahf
sub
and
clc
test
scas
lds
adc
and
push
sbb
jne
jnp
add
shl
sbb
jne
and
lock
jo
cmps
ins
push
xchg
nop
add
adc
push
loopne
popf
repnz
sbb
das
xchg
push
jbe
sti
xor
not
push
xor
or
aaa
dec
div
push
mov
cdq
and
mov
pusha
jnp
mov
sbb
cmps
jne
jecxz
int3
dec
inc
pop
in
mov
mov
push
nop
push
and
xor
and
dec
jmp
xchg
gs
jbe
and
jl
adc
jmp
xor
mov
cmp
lahf
scas
push
mov
test
push
cmc
and
ins
sbb
lds
mov
arpl
aas
jg
xor
scas
test
fdiv
xor
push
sahf
fidiv
sub
xor
pusha
fwait
lahf
fidiv
iret
loop
and
aas
inc
ja
ret
or
aam
dec
repnz
ds
pop
jns
pop
mov
adc
mov
adc
mov
and
sti
ds
jmp
cdq
push
ret
adc
jno
or
bound
leave
icebp
mov
fwait
add
in
fcomp
xor
shl
sti
scas
jmp
push
adc
(bad)
xor
fiadd
daa
shr
mov
je
ror
jno
push
into
push
sub
jp
sub
push
sbb
add
dec
push
mov
sbb
xchg
mov
jle
cli
fcmove
jg
push
pop
xchg
shl
sahf
or
popa
shl
sub
retf
adc
movs
dec
int3
ins
pop
xor
loop
fild
shl
lock
and
or
push
je
xchg
inc
xor
loope
mov
push
in
sub
dec
cmp
jecxz
loop
mov
div
test
xor
adc
int
and
dec
ss
sahf
sbb
out
xchg
cwde
pop
cmp
(bad)
call
adc
jle
ins
scas
xchg
jb
mov
addr16
or
sub
xchg
pop
lods
xchg
push
test
rcr
rcl
pop
loop
dec
daa
inc
lods
mov
outs
mov
sahf
cmp
inc
in
or
adc
test
xlat
push
sub
pusha
dec
or
into
jns
(bad)
xchg
inc
cmp
(bad)
pop
icebp
mov
adc
and
jns
aas
add
outs
loopne
out
add
push
jl
jmp
push
test
mov
jle
push
cwde
jecxz
lea
mov
xchg
lods
sbb
gs
mov
enter
int
and
cmp
fadd
add
fwait
xchg
mov
test
jae
inc
push
xor
daa
adc
mov
sub
retf
xchg
ret
sub
pop
(bad)
iret
add
inc
jmp
xchg
retf
es
das
sub
mov
or
pushf
inc
jno
inc
movs
mov
adc
cli
pop
jle
sbb
mov
mov
test
stos
push
sub
movs
or
fimul
int
pop
in
inc
xchg
movs
push
in
fdiv
and
dec
call
call
ja
mov
or
xchg
lahf
das
inc
lock
jg
stc
pop
jo
pushf
loop
popa
movs
mov
sbb
ror
cdq
test
test
sahf
and
xchg
adc
sti
inc
adc
fsub
lea
iret
cli
popf
sub
and
lahf
xchg
rol
mov
loope
mov
or
jae
lock
mov
call
xchg
jle
in
or
push
outs
inc
sar
xor
hlt
shr
inc
mov
mov
iret
mov
mov
fisubr
lea
(bad)
mov
inc
push
adc
mov
ss
dec
shl
mov
inc
clc
cmc
cld
adc
fsubr
arpl
or
rcl
bound
icebp
scas
ins
sub
std
fdivr
add
(bad)
shl
loopne
out
rcr
push
or
add
js
jns
popf
jne
dec
mov
or
cmp
mov
add
fwait
mov
inc
inc
jp
dec
dec
mov
pop
sbb
in
xchg
push
xchg
sub
scas
push
jmp
retf
or
sbb
mov
xchg
cmp
stc
xchg
adc
cmp
fwait
ins
movs
jmp
add
dec
adc
xor
aas
in
fsubr
jmp
pop
adc
loop
or
rcr
add
fdivr
adc
mov
pop
(bad)
jmp
pop
cmp
sub
aam
pop
aam
retf
neg
loope
icebp
movs
mov
mov
fbld
sbb
jmp
adc
ins
sbb
pop
outs
popa
push
and
sbb
mov
out
mov
stos
retf
or
(bad)
cmps
jno
out
sub
in
mul
test
mov
mov
sahf
pop
out
pop
pop
rol
shl
mov
out
push
int
fldcw
ja
imul
sub
jmp
ja
and
and
outs
sub
ficom
dec
stc
pop
ja
fidiv
out
into
les
cs
dec
sar
popa
cmps
not
lea
sub
hlt
push
jbe
rcl
hlt
into
sub
xchg
mov
jmp
aaa
xor
ins
inc
mov
cmp
mov
fistp
enter
sub
pop
stos
sahf
daa
out
sbb
test
mov
inc
mov
xchg
xlat
(bad)
lds
push
lds
pop
ins
fs
jne
inc
cwde
mov
pop
mov
jne
nop
sub
fcomi
cmp
push
xchg
fbstp
pop
test
add
dec
daa
clc
clc
xor
xchg
adc
push
xchg
mov
dec
jge
popw
retf
retf
pop
pop
jmp
mov
enter
test
sbb
in
leave
(bad)
mov
fsub
dec
les
loope
inc
cmp
cs
aas
mov
aam
jo
(bad)
mov
pop
adc
cmps
push
mov
dec
push
add
shl
rcr
sub
lock
out
cmps
ret
inc
xor
adc
mov
and
mov
jl
repnz
dec
push
sbb
hlt
xor
fs
scas
(bad)
jmp
jb
loop
push
jb
xor
cmp
in
jno
cmp
pop
pop
int
sub
jmp
xchg
jnp
xor
or
dec
sub
fmul
jo
(bad)
xor
push
xchg
jmp
into
and
jae
out
scas
pushf
or
cmps
into
cmps
icebp
out
jp
test
sub
repnz
mov
les
jb
or
push
(bad)
lahf
fist
lahf
adc
inc
push
push
loope
ja
adc
mov
mov
aam
in
push
jge
mov
inc
pop
sub
dec
ins
aaa
mov
jle
mov
add
mov
pop
cmc
mov
mulps
ror
in
push
cwde
xchg
ins
lods
movs
rol
daa
pop
std
(bad)
jmp
and
imul
test
out
rcr
inc
ins
xchg
jno
daa
(bad)
popf
add
xchg
dec
jns
lods
cmp
xchg
jne
clc
cmp
or
jg
lahf
outs
out
dec
adc
lods
or
adc
jns
dec
inc
mov
adc
mov
cmp
test
push
xor
pop
into
xchg
loope
nop
es
ins
enter
jnp
rcl
and
mov
adc
mov
addr16
or
sar
cdq
loope
xchg
mov
push
jmp
ror
jge
dec
add
xchg
dec
fimul
fs
lahf
leave
and
movs
retf
push
inc
push
not
cdq
in
mov
mov
cmp
(bad)
sub
and
adc
outs
xor
and
mov
retf
jo
nop
and
ss
dec
inc
lahf
push
xchg
add
sub
pusha
xor
fcmovne
aaa
sub
shl
into
mov
stc
test
mov
xor
rol
push
push
pop
imul
or
mov
jp
in
(bad)
inc
sub
push
cmp
add
lea
cwde
pushf
and
jmp
cdq
xchg
mov
inc
popa
jae
lahf
fcom
ja
sub
mov
xchg
mov
loope
mov
or
shr
btc
cli
cmp
pop
xlat
or
cmp
push
jg
dec
mov
mov
sub
mov
and
test
xor
adc
out
sbb
push
dec
push
xlat
jo
ds
arpl
ds
pushf
test
mov
mov
cwde
cs
lock
inc
je
xchg
mov
or
ss
sti
sub
fsub
or
(bad)
mov
cs
mov
and
jb
shl
jp
xchg
js
test
adc
mov
outs
shr
inc
div
out
fst
lea
jge
sbb
mov
add
jno
ss
or
in
xor
xor
add
nop
(bad)
jbe
mov
add
push
div
ja
imul
push
cbw
xchg
gs
inc
mov
mov
push
mov
cmps
int
cmp
xor
hlt
lea
imul
outs
ret
add
push
scas
lods
shl
aaa
mov
inc
pop
jne
dec
mov
sar
scas
adc
pop
retf
pushf
sub
lods
mov
adc
shl
popa
add
jl
dec
mov
icebp
mov
scas
and
sahf
loopne
or
cmc
ror
aam
push
mov
ins
int
fmul
adc
cmp
xchg
std
out
lea
int3
xlat
loop
les
jae
xchg
and
enter
retf
sbb
push
xor
aad
mov
addr16
xchg
mov
or
sub
fisubr
mov
test
dec
pusha
or
mov
sub
jmp
xchg
(bad)
jle
jno
call
add
add
les
pop
xchg
jnp
sub
lods
repz
pop
test
push
lods
das
jbe
jg
jmp
pop
cmp
push
into
iret
xchg
jp
inc
push
(bad)
cmp
cs
int3
mov
and
scas
adc
and
xchg
aaa
pop
ds
jg
mov
pop
jbe
pop
mov
loopne
sub
cwde
push
cld
or
adc
in
cmp
dec
cmp
cmovne
jecxz
dec
jl
sub
imul
out
(bad)
cmp
push
jbe
(bad)
in
xor
and
(bad)
sahf
pop
in
pop
inc
inc
fucomi
popa
xor
repz
addr16
aas
out
mov
add
sti
(bad)
call
cmp
cmp
inc
mov
xchg
movs
scas
push
cmp
add
out
mov
pop
retf
xchg
stos
cmc
test
cmp
push
pop
add
sub
cmp
in
push
jnp
(bad)
int
loop
imul
dec
stos
jp
lds
arpl
maskmovq
neg
dec
jno
aam
xor
das
test
lock
(bad)
cli
jbe
rcr
outs
rcr
or
and
mov
in
sar
inc
dec
ja
mov
popa
mov
shr
xor
cld
das
xor
sbb
add
sub
push
jle
push
ins
fs
jno
pop
add
mov
sahf
in
sbb
int3
imul
mov
lds
aad
ins
xchg
jge
bound
js
test
fdiv
inc
pop
sbb
xor
mov
sub
and
shr
popa
retf
ss
mov
fldcw
push
(bad)
push
lahf
sbb
add
test
stc
xchg
sbb
xor
lds
imul
jmp
jp
inc
sti
sbb
lahf
mov
loopne
enter
sbb
xor
repz
mov
inc
lods
or
adc
arpl
loop
and
stos
pop
cmp
xchg
hlt
int
adc
jns
dec
add
jno
jno
lea
popf
mov
xchg
mov
xchg
enter
(bad)
jo
leave
shl
cwde
jecxz
clc
mov
sbb
out
mov
mov
mov
or
sahf
xchg
cwde
test
std
mov
xchg
and
push
jmp
into
pop
ret
les
nop
mov
in
pop
mov
int3
xlat
dec
push
retf
sbb
mov
sti
push
push
shr
jno
push
mov
stc
sar
mov
jecxz
mov
mov
dec
scas
jmp
mov
push
add
test
pop
dec
movs
inc
and
mov
jmp
adc
xchg
mov
test
scas
jnp
adc
fiadd
out
(bad)
push
js
adc
sahf
mov
add
add
mov
sbb
lock
dec
ins
fninit
out
imul
clc
cmp
dec
push
sbb
inc
adc
sbb
jns
sbb
sbb
call
or
add
push
(bad)
rdtsc
into
ins
adc
jnp
add
add
jno
ficomp
in
test
mov
mov
hlt
adc
dec
imul
int
or
fs
fwait
push
jne
hlt
and
jmp
mov
repz
or
dec
ja
xor
sub
add
mov
aas
jns
cmc
call
mov
dec
pop
push
sbb
cmp
hlt
xor
inc
shl
nop
push
shl
inc
jno
push
jp
jle
pop
mov
in
push
cmp
jp
inc
in
and
out
and
sbb
inc
mov
lods
out
jbe
xor
dec
sub
gs
push
(bad)
out
xchg
scas
cld
or
or
add
adc
mov
jns
cli
mov
mov
cmovg
or
into
lahf
imul
mov
(bad)
fimul
pop
mul
or
xor
inc
or
cmc
nop
ds
sahf
loope
or
(bad)
lock
les
mov
(bad)
sbb
adc
sub
xlat
out
inc
cld
(bad)
adc
pushf
cdq
and
xchg
pop
and
aam
sti
imul
sar
(bad)
cli
cli
pop
xchg
push
sub
xchg
sbb
jl
sar
or
aaa
adc
fimul
dec
push
cmp
sub
fs
in
cmp
xlat
in
xchg
rcl
je
sub
add
inc
cmp
sub
mov
ret
rcl
jns
pop
sbb
ret
push
jno
ret
addr16
cmp
mov
mov
and
aad
dec
add
loope
loope
sub
dec
test
cmp
stc
or
or
mov
jg
xchg
push
mov
test
out
leave
add
and
mov
test
sbb
xor
jl
movsx
jge
mov
sub
mov
mov
mov
add
sbb
(bad)
sub
mov
ret
push
fbstp
pop
(bad)
jne
push
popf
fwait
jg
lahf
ja
fdiv
cdq
jmp
mov
xor
js
mov
pop
push
jmp
xlat
adc
(bad)
aam
loope
jne
add
mov
add
jmp
fstp
xor
ins
mov
neg
cld
jne
mov
lock
jno
or
fst
sbb
inc
fistp
lock
mov
stos
scas
cdq
mov
pop
aaa
ror
enter
mov
out
ss
add
sub
rol
gs
jnp
xor
sbb
dec
mov
cmp
aam
mov
xchg
sbb
push
jg
int
jle
xchg
leave
das
hlt
cmp
stos
dec
pop
daa
inc
push
xor
xchg
cmp
or
mov
sbb
leave
jno
loopne
retf
stos
loopne
jno
clc
xchg
add
out
test
mov
push
mov
and
xchg
fisubr
jge
ins
xchg
mov
(bad)
mov
lock
sub
sub
or
add
mov
xchg
push
xor
(bad)
hlt
mov
mov
dec
ret
in
mov
es
test
js
or
les
cli
xchg
pop
rcr
ds
pop
repnz
and
das
clc
call
stos
push
fldenv
bswap
pop
test
xchg
fiadd
mov
sub
jmp
push
stc
xor
jecxz
inc
jnp
fdivr
(bad)
push
jbe
push
pop
dec
adc
jge
fbld
in
and
dec
fiadd
hlt
adc
mov
and
inc
cdq
mov
sbb
ins
dec
lods
retf
ins
cmp
inc
cmc
sbb
popa
pop
test
adc
in
sbb
test
cdq
push
fmulp
jg
cmps
mov
call
sub
neg
jnp
mov
cwde
dec
xchg
pop
arpl
mov
icebp
inc
test
or
add
pop
and
call
cmps
into
nop
dec
jo
xlat
fcomp
popa
adc
(bad)
and
fs
xlat
imul
sbb
jmp
fisttp
and
imul
hlt
aaa
in
out
jne
mov
call
mov
mov
(bad)
(bad)
mov
aad
loope
pop
push
retf
fwait
(bad)
xor
pop
int
mov
enter
jmp
out
fmul
stos
cmp
jae
push
jns
ret
or
(bad)
xchg
pop
lock
jo
jecxz
xor
ret
add
push
mov
es
xor
sbb
leave
into
ss
xchg
ins
arpl
xchg
cmc
repz
cmp
jnp
mov
pusha
lea
and
push
push
test
sbb
add
push
(bad)
and
inc
jo
sub
sbb
cmp
xchg
popa
aaa
mov
xchg
xchg
dec
loop
xor
cmc
xor
outs
and
cmp
test
push
retf
adc
ffree
scas
xchg
xor
mov
push
movs
xchg
rol
es
add
xor
pop
shr
data16
sub
or
out
dec
fistp
retf
jecxz
imul
sub
ins
push
add
push
(bad)
mov
fucomi
test
hlt
xor
std
dec
pop
xchg
sub
loop
inc
xchg
leave
lea
add
jne
mov
xchg
test
loop
lahf
jbe
into
push
sbb
adc
mov
add
shl
push
retf
cld
sub
adc
es
and
mov
mov
push
enter
fscale
fcom
dec
push
mov
in
push
js
data16
dec
cmp
xor
int
pop
sub
(bad)
or
fmul
pop
sahf
repz
pop
lods
ds
loop
out
inc
rcl
add
cmps
cmp
jae
pop
retf
adc
sbb
and
and
popa
adc
xchg
mov
mov
(bad)
xor
or
sar
out
xor
push
ins
in
mov
add
and
mov
aam
cdq
push
arpl
(bad)
lock
sub
mov
mov
popf
daa
or
cmp
outs
push
addr16
mov
test
inc
pop
fs
bound
xchg
imul
cmps
test
sub
or
sbb
fs
lock
cmp
xchg
fwait
retf
push
sbb
std
cmps
jb
repnz
mov
mov
out
sub
sub
lods
mov
mov
mov
popf
mov
aaa
int3
(bad)
shr
int
lahf
jne
lock
mov
xchg
aad
adc
std
push
sub
jecxz
jl
dec
iret
mov
xor
(bad)
repz
js
inc
into
adc
ins
inc
xchg
std
xrelease
mov
pusha
or
pop
pushaw
cmc
sar
push
std
dec
adc
jne
mov
scas
int3
popf
and
sub
push
ins
(bad)
imul
cmp
cmp
gs
cmp
js
or
cmp
sbb
lock
inc
rcr
ja
or
loop
inc
push
not
push
rol
xor
retf
mov
push
cmps
ja
dec
cmp
cli
dec
pop
enter
fimul
jne
iret
test
pop
cmovb
shl
jge
aad
shl
jae
cmp
es
cmp
test
mov
xchg
push
(bad)
in
js
jp
mov
push
mov
out
add
and
sar
mov
inc
rcr
add
xor
sbb
push
jl
in
or
les
mov
xlat
inc
out
sub
mov
mov
inc
adc
or
rcr
imul
and
pop
popf
pop
sbb
add
and
fs
std
in
cmp
pushf
sbb
in
sti
or
sahf
sub
retf
mov
(bad)
xor
out
mov
sbb
mov
adc
cmp
cmp
adc
(bad)
mov
xor
sub
add
pop
mov
fs
mov
sub
or
sbb
int
mov
xchg
adc
in
lahf
imul
loope
inc
bound
dec
shr
jecxz
cld
mov
sub
xor
or
in
test
adc
daa
popa
xchg
add
jp
xchg
dec
lods
test
mov
jno
mov
scas
push
xchg
push
sbb
cs
sbb
cmp
test
push
loope
pop
into
add
push
fstp
mov
sbb
pop
jl
gs
lock
or
cmp
or
jnp
adc
call
sub
xlat
sub
mov
sub
mov
push
jns
jns
push
popf
(bad)
cmp
fcomp
mov
loop
xchg
std
mov
or
fwait
mov
dec
mov
fxch
ret
sbb
sbb
in
sub
xor
stos
pop
and
dec
int3
sub
cs
push
dec
xchg
push
lahf
mov
mov
push
cmp
imul
push
pusha
iret
and
imul
inc
push
mov
aas
cdq
cmp
cmp
mov
test
push
pop
cmp
jecxz
mov
lods
sub
loope
int3
xchg
fdivr
push
popa
(bad)
push
outs
mov
stc
cmp
sub
test
sbb
out
dec
inc
xchg
jp
jmp
fisubr
aaa
jle
pop
jmp
aaa
pop
jne
lods
retf
and
retf
dec
and
(bad)
push
sub
mov
adc
data16
push
stos
xor
scas
push
retf
inc
mov
stos
(bad)
clc
rcr
cs
sub
arpl
mov
repnz
xor
ret
or
mov
xchg
pop
jecxz
jno
outs
push
jmp
das
cmp
jne
loope
mov
pop
fs
jae
push
mov
xor
push
iret
pusha
not
sahf
inc
stos
clc
sbb
aam
(bad)
aam
dec
jne
and
jmp
out
sub
test
es
leave
jb
sub
test
xor
adc
stos
mov
(bad)
jne
jmp
dec
das
mov
and
pop
inc
arpl
pop
test
cld
mov
div
cli
jns
cmp
xlat
mov
and
ret
cmps
pop
and
aad
xor
pop
mov
cmps
cli
adc
jmp
fnstsw
mov
mov
fisubr
pop
scas
and
cmp
ins
push
shr
jae
cdq
mov
pop
test
retf
push
mov
imul
add
xor
sub
push
aad
pusha
push
or
sbb
leave
mov
mov
sub
xlat
sbb
pop
mov
setns
cmp
imul
(bad)
jbe
xor
repnz
inc
mov
gs
cwde
dec
pushf
xchg
mov
out
nop
or
in
cmp
and
pop
jp
push
jbe
sbb
fs
std
jns
add
jo
and
into
push
jecxz
jnp
ds
or
imul
jecxz
repnz
loope
xchg
jmp
pop
add
cmp
cwde
icebp
std
das
xor
adc
out
std
(bad)
fisub
inc
dec
lea
mov
les
nop
lahf
clc
jne
call
mov
mov
xchg
shl
and
pop
cli
xor
inc
inc
rol
jge
lea
fwait
js
xor
adc
scas
push
mov
test
add
push
popa
in
pop
gs
add
inc
xor
je
mov
mov
push
dec
fs
inc
push
dec
push
ins
adc
jns
xor
pop
(bad)
cmp
mov
add
xchg
mov
add
push
je
lock
pushf
out
cmp
xchg
push
add
add
jl
retf
loopne
lds
jbe
fninit
rcl
arpl
retf
mov
loop
and
mov
bound
push
add
das
ins
sub
xchg
mov
jp
fistp
mov
ja
or
test
add
fld
mov
shl
nop
sbb
mov
xor
mov
cmp
ficomp
ja
data16
dec
jb
adc
movs
pushf
push
sbb
push
cmp
push
int3
icebp
mov
push
inc
adc
ins
pop
fsubr
sub
aad
jmp
add
out
mov
sbb
mov
jecxz
jb
call
mov
inc
add
xchg
add
adc
sbb
inc
pop
inc
aaa
jnp
lahf
scas
aad
test
daa
adc
xchg
add
fcom
rcr
je
rcl
dec
xchg
les
xchg
test
mov
sub
jecxz
push
sbb
pop
ror
and
fidivr
xchg
jb
jmp
neg
outs
lods
push
dec
pop
adc
adc
mov
(bad)
mov
push
sbb
mov
inc
sahf
stos
mov
xor
inc
out
and
cwde
sahf
test
adc
sbb
jecxz
lods
retf
pop
inc
fs
in
xchg
stos
cld
sub
cwde
hlt
cwde
pushf
mov
ss
or
push
add
cmp
outs
cmp
adc
test
bnd
add
pop
cli
repz
(bad)
mov
xchg
mov
adc
xchg
imul
mov
fisubr
xor
test
mov
aad
jge
repz
sbb
jmp
mov
inc
ds
xchg
jno
mov
adc
es
adc
mov
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
lock
add
sldt
and
jb
outs
addr16
add
add
sub
add
add
add
inc
push
dec
inc
add
add
sub
add
or
add
inc
ins
outs
bound
add
pushf
xor
add
and
add
add
add
add
add
mov
add
cli
add
add
add
add
add
jb
add
xor
add
add
add
rol
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
jl
or
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
call
add
push
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
push
add
add
push
add
push
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
push
add
sub
push
add
sub
xchg
add
add
push
add
sub
push
add
add
mov
sub
push
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
jmp
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
pusha
add
ja
mov
add
add
add
add
add
sbb
clc
add
clc
add
clc
add
clc
add
mov
push
add
add
add
push
sub
push
add
push
fiadd
push
add
push
fiadd
push
add
pop
fiadd
push
add
pop
fiadd
push
add
pop
fiadd
push
add
fiadd
push
add
fiadd
push
add
fiadd
push
add
fiadd
push
add
fiadd
push
add
fiadd
push
add
add
add
pop
sub
push
add
pop
sub
push
add
pop
in
push
add
pop
in
push
add
pop
push
or
add
or
or
add
add
or
or
add
add
sub
push
add
sub
push
add
sub
push
add
sub
push
add
sub
push
add
sub
adc
jle
xor
add
add
mov
add
add
add
add
add
add
xchg
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
scas
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
ror
xchg
or
add
add
add
or
add
add
add
or
add
add
add
xlat
or
add
add
adc
(bad)
xchg
or
add
add
or
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
jmp
xchg
or
add
add
add
or
add
add
or
add
add
or
add
repz
add
cmc
or
add
test
sub
test
add
add
stc
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
add
add
or
add
adc
xchg
or
add
add
add
xchg
or
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
xchg
or
add
add
or
add
xor
xchg
or
add
add
xor
xchg
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
sbb
add
add
add
sbb
pop
add
add
add
add
add
add
add
sbb
pop
add
add
add
sbb
add
and
add
add
or
inc
add
add
and
add
add
or
inc
add
add
and
add
add
or
dec
add
add
and
add
add
or
dec
add
add
add
add
xchg
sbb
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
mov
add
add
xchg
add
add
and
add
add
sbb
pop
add
add
and
add
add
dec
or
pop
add
add
add
push
or
or
pusha
and
add
add
add
add
add
popa
or
or
mov
add
add
add
and
add
add
add
add
and
add
add
sbb
pop
add
add
add
add
add
inc
or
and
add
add
sbb
add
and
adc
xchg
or
add
add
add
add
adc
lods
or
add
add
add
add
add
add
dec
add
add
add
add
add
add
adc
xchg
or
sub
add
add
add
add
add
add
adc
push
mov
sub
add
adc
mov
adc
or
je
add
add
adc
xchg
or
sub
add
add
add
add
add
add
add
add
adc
xchg
or
sub
adc
xchg
or
add
push
add
add
adc
or
fsubr
add
add
adc
scas
or
das
add
add
push
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
adc
xchg
or
add
add
adc
xchg
or
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
cmp
add
adc
push
jmp
add
add
or
add
adc
lods
or
add
add
add
or
add
add
add
adc
ins
or
add
add
add
add
adc
or
add
add
adc
mov
push
add
add
adc
sahf
or
cmp
add
add
or
and
add
add
adc
stos
or
add
add
adc
xor
add
push
sbb
pop
add
add
push
or
or
add
add
cmp
adc
int3
or
add
add
cmp
xchg
cmp
pop
add
add
cmp
push
add
add
add
add
add
add
add
xchg
cmp
pop
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
je
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
inc
add
add
xchg
cmp
pop
add
add
add
add
xchg
add
add
add
add
xchg
add
add
inc
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
or
daa
add
add
add
or
sub
add
add
add
and
add
add
add
or
sub
add
add
add
and
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
inc
add
add
xchg
add
add
add
add
or
inc
add
add
xchg
add
add
inc
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
mov
or
add
add
add
add
mov
or
add
add
add
add
xchg
cmp
ret
add
add
add
add
mov
or
add
add
add
add
mov
or
add
add
add
add
mov
or
add
add
add
add
xchg
cmp
ret
add
add
add
add
mov
or
bound
add
add
add
mov
or
add
add
add
add
mov
or
add
add
add
add
add
add
add
add
mov
or
add
add
add
add
mov
or
add
add
add
add
das
add
add
add
add
xchg
cmp
ret
add
add
add
add
add
or
add
add
add
add
mov
or
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
or
js
add
add
add
mov
or
jp
add
add
add
mov
or
jle
add
add
add
xchg
cmp
ret
add
add
add
add
mov
or
add
add
mov
or
add
add
add
add
add
sbb
xchg
les
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
daa
or
add
add
add
or
add
add
or
add
add
add
add
daa
or
add
add
add
add
pop
add
or
add
add
add
add
ins
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
daa
or
add
add
add
or
add
add
or
add
add
add
add
daa
or
add
add
add
add
pop
add
or
add
add
add
add
inc
or
add
add
add
add
or
add
add
or
add
add
add
add
(bad)
add
add
ins
or
add
add
or
add
add
or
and
add
add
add
jge
add
add
pop
or
add
add
or
add
add
add
add
or
add
add
or
add
add
xchg
or
add
add
xchg
or
add
add
add
add
(bad)
add
add
xchg
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
(bad)
add
add
ins
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
(bad)
add
add
ins
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
pop
add
cmp
pop
add
add
pop
add
add
pop
add
add
adc
sbb
cmp
pop
add
add
pop
add
add
add
cmp
pop
add
add
pop
add
cmp
repz
add
add
sbb
sbb
cmp
sbb
jns
cmp
pop
add
add
sbb
cmp
cmp
sbb
jmp
add
xor
inc
add
sbb
cdq
add
sbb
dec
add
sbb
and
cmp
sbb
mov
cmp
pop
add
add
pop
add
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
inc
or
or
or
or
or
or
add
dec
or
or
or
or
add
pop
add
xchg
or
and
call
or
add
jecxz
adc
mov
add
or
add
cmc
add
add
or
push
add
dec
or
add
push
or
imul
add
popa
or
popa
add
or
push
xor
xchg
or
or
push
and
cmp
add
add
add
xlat
add
pop
push
sub
pop
or
push
xchg
add
ja
or
cmp
pop
add
add
push
xor
or
or
add
popa
or
and
mov
add
add
jns
sbb
mov
mov
or
or
push
sbb
(bad)
or
push
xor
into
or
add
add
or
push
sub
fisttp
add
add
jns
sbb
popa
or
add
add
or
add
add
or
add
add
sbb
and
fadd
sub
sub
add
or
cmp
out
push
pop
add
hlt
push
pop
add
pop
add
add
push
pop
and
pop
or
fs
pop
or
add
add
add
push
pop
jns
cmp
pop
pop
or
jl
fs
inc
add
cmp
cdq
add
push
rol
or
lea
xchg
or
pushf
or
dec
or
cmp
ret
add
cmp
xchg
push
add
add
sbb
cdq
add
add
add
add
add
cmp
pop
add
pop
xor
enter
xor
popa
or
pop
add
or
xlat
or
fmul
cmp
icebp
pop
sbb
out
or
add
jns
sub
adc
push
or
add
add
pop
add
add
pop
add
add
push
xor
add
sub
xor
jmp
or
add
push
outs
add
add
add
push
or
add
outs
add
add
push
or
add
push
or
add
pop
or
or
pop
rol
jnp
jo
sbb
popa
or
add
or
or
xchg
push
mov
popa
add
nop
or
mov
add
add
cmp
pop
add
add
push
into
add
add
retf
add
add
push
loope
mov
ror
call
push
out
or
or
or
add
push
fadd
rol
cmp
xor
and
int3
or
or
test
sub
add
push
sub
cmp
add
add
repz
add
movq
leave
add
pop
add
add
arpl
jmp
or
add
sysenter
add
outs
or
add
movq
fld
inc
movq
jmp
or
add
je
jmp
pop
fld
jbe
jg
mov
cmp
mov
and
mov
push
or
add
xor
xor
xchg
movq
and
lahf
shld
cmp
cmp
sbb
stc
add
add
add
xor
and
mov
add
montmul
cmps
add
add
movsx
and
mov
add
add
cmp
add
add
add
add
add
sti
add
add
aad
add
add
add
cs
add
add
add
add
add
add
add
sti
add
sbb
add
add
add
inc
add
add
dec
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
and
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
arpl
sub
or
imul
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
or
adc
pop
push
es
sub
ds
inc
push
arpl
mov
mov
mov
push
cli
push
add
or
push
pop
xor
cdq
pop
ret
pop
call
or
or
cwde
or
or
or
or
or
or
add
add
or
add
xchg
or
add
add
add
add
add
add
or
or
add
add
or
add
add
or
add
add
gs
add
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
cmp
add
adc
add
add
push
add
add
dec
push
push
push
mov
add
add
add
add
add
add
add
mov
test
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
pusha
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jae
push
push
add
add
cs
add
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
push
jns
je
ins
add
jae
gs
cs
imul
inc
outs
jb
jae
imul
gs
xor
cs
ins
add
gs
xor
fs
ins
add
add
outs
jae
ins
gs
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
gs
inc
outs
outs
jbe
jb
imul
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
ja
popa
je
inc
imul
dec
jo
jb
je
jb
add
outs
push
arpl
je
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
outs
jbe
jb
imul
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
je
jbe
je
jb
inc
jo
inc
outs
ins
popa
imul
jns
inc
jae
outs
arpl
ins
ins
bound
imul
je
jb
bound
add
je
outs
outs
jbe
jb
gs
inc
outs
outs
ins
gs
outs
add
data16
inc
jns
add
popa
jb
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
gs
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
imul
jae
bound
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
je
add
jo
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
je
imul
add
outs
jbe
jb
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
bound
addr16
inc
bound
addr16
imul
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
jb
arpl
jae
inc
outs
jne
ins
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
js
gs
imul
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
bound
push
je
ins
gs
dec
inc
jae
outs
arpl
jae
ins
je
dec
inc
imul
ins
add
je
xor
dec
outs
je
xor
dec
outs
je
je
add
outs
popa
jb
push
jb
je
jb
push
jns
je
ins
cs
dec
add
ins
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
arpl
jns
inc
imul
inc
arpl
jae
add
ins
gs
outs
outs
add
ins
gs
outs
fs
ins
gs
push
inc
imul
ins
add
inc
js
gs
imul
outs
jb
push
je
gs
ins
add
je
add
imul
imul
popa
ins
add
je
add
ins
je
arpl
je
gs
gs
je
add
push
arpl
popa
outs
outs
ins
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
outs
je
ins
gs
gs
jo
jb
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jb
push
jne
je
ins
gs
jns
gs
popa
outs
fs
add
jo
gs
outs
fs
jae
gs
cs
arpl
imul
je
addr16
jo
jns
inc
jb
jo
outs
push
je
gs
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
inc
jb
jo
outs
push
gs
imul
imul
push
jb
je
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
xor
xor
cmp
inc
gs
jbe
inc
jns
gs
push
imul
dec
popa
outs
popa
gs
inc
xor
ins
ins
gs
imul
imul
je
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
ins
add
inc
push
push
inc
je
jb
bound
add
jb
outs
add
arpl
imul
je
ins
cs
gs
add
jb
outs
addr16
jne
ins
fs
dec
outs
outs
imul
je
ins
cs
push
imul
gs
push
popa
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
gs
add
imul
add
gs
fs
je
je
arpl
je
imul
jns
add
outs
je
add
outs
je
xor
push
dec
outs
je
je
add
imul
arpl
imul
fs
gs
add
inc
jae
gs
bound
outs
outs
inc
je
jb
bound
add
add
add
add
add
add
add
push
gs
imul
bound
dec
jns
adc
sbb
or
add
push
add
add
add
add
add
add
add
add
sbb
sbb
push
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
sbb
add
add
sbb
add
add
add
add
add
or
je
jb
arpl
add
jb
addr16
push
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
je
imul
gs
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
je
data16
je
push
pop
jae
fs
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
addr16
push
gs
imul
push
arpl
gs
outs
add
jbe
imul
jb
arpl
jae
popa
outs
fs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
inc
ins
popa
jae
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
dec
outs
addr16
add
je
jb
dec
outs
addr16
add
imul
add
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
fs
push
outs
jb
add
jne
jo
je
je
imul
outs
arpl
jae
jo
inc
bound
addr16
jb
jae
outs
je
ja
add
jb
ins
add
outs
jne
inc
jne
arpl
push
gs
popa
jae
inc
jb
outs
jb
inc
ins
outs
jae
dec
popa
outs
fs
add
outs
push
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
fs
imul
inc
gs
jb
arpl
fs
jae
add
je
ins
popa
jae
dec
popa
ins
add
ins
je
jb
add
push
gs
jne
je
push
gs
imul
je
inc
jne
jb
outs
je
outs
ins
popa
imul
push
gs
jne
arpl
gs
ins
jbe
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
js
arpl
imul
ins
bound
dec
outs
popa
add
je
dec
popa
ins
add
popa
jb
jae
imul
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
jne
ins
dec
popa
ins
add
fs
data16
bound
jb
outs
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
bound
arpl
ins
jne
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
gs
je
dec
outs
jae
popa
outs
arpl
inc
jb
ins
inc
popa
jae
ss
je
imul
je
add
je
inc
js
arpl
popa
bound
popa
je
add
outs
je
imul
je
inc
gs
outs
ins
fs
popa
je
add
je
imul
imul
je
push
gs
jb
push
arpl
jb
jb
inc
ins
gs
jb
jb
push
arpl
jb
jb
addr16
dec
outs
addr16
add
outs
jne
ins
add
outs
je
addr16
push
outs
jne
add
outs
outs
add
fs
jo
add
je
inc
push
addr16
dec
popa
arpl
outs
gs
popa
ins
add
je
push
jae
jb
popa
ins
add
jo
gs
addr16
push
jns
je
ins
inc
imul
jns
inc
gs
popa
je
push
outs
outs
je
addr16
push
push
inc
cmp
inc
gs
jns
gs
push
outs
inc
popa
jae
ss
je
imul
je
outs
add
outs
jae
add
je
jns
add
gs
popa
ins
ins
add
outs
outs
ins
gs
outs
add
imul
js
push
jb
je
inc
ins
ins
inc
jns
gs
push
jb
je
add
imul
jb
je
inc
jns
add
jne
push
jb
add
gs
add
gs
inc
jb
popa
je
add
ins
jo
je
dec
popa
jae
add
jo
outs
add
jo
jae
add
outs
add
je
push
inc
outs
jb
js
gs
imul
push
jb
arpl
jae
jae
jns
popa
ins
add
je
push
jb
arpl
jae
popa
ins
add
ins
jo
jb
push
je
imul
pop
dec
gs
imul
pop
inc
ins
outs
arpl
imul
pop
dec
gs
imul
pop
dec
gs
addr16
inc
ins
outs
arpl
imul
pop
dec
push
add
je
dec
outs
fs
gs
je
inc
arpl
jo
outs
jb
push
outs
inc
jb
popa
jns
push
gs
outs
arpl
jno
popa
ins
jae
addr16
inc
jae
gs
bound
inc
gs
je
imul
dec
bound
arpl
jns
arpl
outs
outs
imul
je
jb
add
outs
je
xor
push
outs
dec
outs
je
xor
push
outs
push
imul
ins
outs
arpl
outs
jo
add
je
push
outs
imul
popa
jb
add
jbe
jb
add
je
jb
push
gs
fs
jns
add
popa
add
je
inc
popa
jo
arpl
jns
jae
je
push
outs
jae
je
outs
outs
add
je
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
pop
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
outs
jae
outs
jb
inc
imul
arpl
inc
outs
ins
jo
jb
add
je
inc
popa
jo
arpl
jns
inc
outs
jb
popa
je
addr16
dec
jae
je
popa
arpl
add
jb
add
outs
arpl
add
pop
dec
outs
gs
popa
ins
imul
jno
popa
ins
imul
stos
mov
or
dec
repnz
das
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
add
add
and
add
add
push
pop
push
adc
adc
push
adc
or
push
adc
or
push
adc
sbb
add
adc
add
add
or
add
or
add
sbb
push
adc
adc
sub
add
push
adc
add
and
or
mov
and
push
pop
adc
add
add
add
xor
add
adc
add
push
adc
add
add
add
push
sbb
add
or
add
push
add
add
or
add
add
sbb
adc
adc
sbb
add
add
add
add
push
push
add
add
adc
add
add
sbb
add
add
or
add
add
sbb
push
adc
and
xor
mov
adc
sub
add
adc
add
or
add
add
or
add
add
add
add
cmp
add
add
or
push
sbb
push
adc
pop
add
sbb
pop
add
sbb
or
add
cmc
add
or
push
add
add
or
add
sbb
add
sbb
or
add
add
add
add
push
push
add
adc
push
add
adc
push
push
add
adc
push
add
adc
push
add
adc
push
push
add
adc
add
sbb
add
or
adc
add
sbb
push
sbb
sbb
and
dec
or
or
and
adc
dec
or
or
cmp
or
or
sub
or
or
adc
mov
adc
or
adc
adc
or
or
or
sub
test
and
or
sub
adc
sbb
and
add
sub
adc
or
add
sub
sbb
and
or
or
sub
sbb
and
sub
push
and
or
pusha
sbb
and
sub
sbb
push
sbb
add
sbb
cmp
pop
add
sbb
add
sbb
add
push
push
push
add
adc
add
sbb
or
or
push
add
push
add
sbb
add
sbb
push
sbb
push
add
adc
add
push
push
add
sbb
add
sbb
add
sbb
sbb
or
adc
add
or
add
add
add
add
gs
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
push
add
add
adc
add
or
cs
outs
ins
jo
je
jb
add
add
or
add
push
dec
jns
inc
jo
ins
imul
add
add
add
or
add
dec
jns
push
jae
jb
add
add
sbb
add
push
dec
jns
push
bound
jb
imul
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
and
push
push
push
push
add
add
add
add
xor
add
add
add
add
add
mov
add
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
sub
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
or
cs
gs
imul
add
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
xor
xor
xor
xor
add
add
or
imul
add
or
add
add
add
add
jns
add
or
add
add
add
add
or
add
and
fs
fs
arpl
xor
xor
sub
xor
xor
add
sbb
outs
jo
jb
addr16
and
imul
xor
add
push
adc
adc
adc
or
adc
or
adc
sbb
pop
add
adc
add
or
add
or
add
sbb
pop
add
or
adc
adc
adc
add
or
sbb
add
push
and
adc
add
or
add
or
add
add
or
pop
add
adc
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
adc
add
add
add
push
add
add
or
add
adc
push
add
push
adc
sbb
add
or
add
add
sbb
sbb
push
push
adc
add
add
or
add
add
or
add
or
add
add
or
add
push
or
add
add
or
pop
or
push
push
push
push
push
or
adc
add
adc
add
sbb
add
push
add
add
pop
add
pop
add
pop
add
or
xor
or
adc
sbb
mov
add
add
add
sbb
pop
adc
push
or
adc
push
adc
adc
or
sub
push
adc
add
xor
and
or
or
add
add
sbb
add
and
or
adc
add
adc
add
add
adc
or
adc
sbb
xor
sbb
push
push
push
and
adc
add
adc
add
and
adc
adc
add
add
add
add
or
sbb
mov
and
add
push
adc
adc
or
sbb
or
adc
add
sbb
push
add
or
push
add
add
jge
pop
or
add
cmp
pop
sbb
add
sbb
add
or
add
adc
adc
add
xor
sub
add
push
sbb
pop
add
xor
add
sbb
and
adc
add
adc
adc
push
push
adc
sbb
add
push
adc
adc
ins
add
add
sub
pop
push
or
add
sbb
push
sbb
pop
and
push
sbb
add
or
add
sbb
add
add
add
adc
or
add
add
push
or
push
push
or
or
and
or
pop
add
or
adc
sbb
add
adc
add
sbb
pop
pop
adc
or
adc
add
ins
or
or
or
sbb
add
or
and
or
add
or
and
or
add
or
and
add
xor
add
pop
pop
sbb
sbb
add
cdq
add
sbb
pop
or
adc
adc
sbb
add
sbb
pop
adc
and
xor
inc
add
add
cmp
xor
inc
add
add
add
sub
add
cmp
sub
add
add
add
add
xor
sub
add
aaa
add
xor
inc
add
add
cmp
cmp
inc
add
xor
and
adc
add
add
dec
add
dec
add
cmp
adc
add
imul
cmp
pop
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
jae
add
je
add
and
add
je
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
