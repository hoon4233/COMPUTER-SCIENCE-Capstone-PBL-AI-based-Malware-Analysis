xor
xchg
mov
xchg
jle
jbe
jno
xor
outs
mov
add
mov
inc
push
test
push
ss
sbb
inc
xchg
jle
jbe
mul
jbe
jle
std
rcr
std
int
mov
cdq
std
cld
mov
pop
cmp
mov
jbe
sbb
std
cdq
int
cmp
std
jle
xchg
jle
mov
jle
data16
nop
jle
jbe
std
(bad)
jp
and
shl
and
xchg
adc
push
pop
outs
inc
jbe
or
sahf
ret
add
pop
sub
imul
or
enter
popf
fisttp
imul
push
jo
jle
jns
ret
xchg
test
rol
add
rol
jno
push
add
or
jbe
jb
cmc
jmp
add
adc
mov
jle
inc
and
xchg
mov
mov
xchg
cmc
inc
jb
inc
mov
xchg
sub
sub
add
repz
dec
and
dec
mov
xchg
lea
xor
idiv
inc
and
and
and
jp
sub
and
jg
or
push
mov
xchg
sub
xchg
repz
cmp
jp
cmc
push
stc
push
cmp
or
out
jbe
jp
cmc
ss
jl
std
mov
ret
sub
and
push
(bad)
jp
jle
jae
into
inc
jbe
jle
jbe
jne
sbb
push
jbe
mov
pop
push
(bad)
xlat
jle
jbe
jle
jle
das
jg
xchg
std
(bad)
jle
mov
add
xchg
and
pop
lds
add
push
mov
mov
xchg
xchg
push
or
mov
xchg
jle
sub
and
or
or
jbe
xchg
mov
sbb
and
jbe
xchg
aad
xor
add
sub
push
cmp
push
movd
lds
mov
jle
jbe
xchg
adc
jge
fisttp
sbb
scas
mov
adc
sbb
push
sub
xlat
jle
push
and
into
inc
jbe
push
jle
xchg
xor
mov
xor
push
xchg
pop
add
dec
retf
(bad)
fadd
add
mov
add
jle
push
adc
xchg
jle
loope
jle
and
jecxz
pop
jmp
in
adc
lds
adc
sbb
push
add
(bad)
push
add
push
add
mov
add
test
add
adc
sti
adc
push
fnstcw
sti
adc
push
sahf
dec
push
add
xchg
inc
xchg
jle
cmp
push
aaa
cmp
sti
adc
lds
push
sahf
cmp
push
mov
add
jnp
mov
xchg
adc
bound
jbe
std
les
retf
test
xor
into
mov
and
sbb
sbb
add
ins
cs
xor
push
jns
adc
sbb
adc
mov
jb
add
jle
mov
mov
or
jle
std
add
or
sbb
xor
push
add
jbe
mov
call
jp
mov
or
sub
xchg
push
jmp
in
ror
inc
sub
mov
and
push
and
ror
dec
push
mov
sbb
(bad)
es
add
adc
mov
jb
add
jle
mov
mov
movs
mov
sbb
mov
mov
outs
std
add
inc
or
jle
mov
or
sahf
mov
add
mov
movs
mov
inc
popf
xchg
inc
leave
sar
sub
mov
and
sbb
rol
mov
ins
test
lock
mov
jbe
xlat
jle
adc
adc
movs
movs
mov
ins
test
lock
push
jbe
xlat
jle
mov
mov
imul
enter
enter
cmps
loopne
inc
jmp
mov
(bad)
ds
or
dec
push
or
mov
mov
and
mov
imul
inc
jmp
mov
(bad)
ds
or
dec
push
or
mov
or
pop
add
ins
inc
inc
mov
cmp
mov
mul
into
xchg
jle
jbe
inc
ja
xchg
sub
push
std
enter
imul
dec
xchg
jle
jae
retf
push
cmp
call
mov
(bad)
ds
or
dec
push
or
mov
jg
mov
jmp
fs
sub
add
push
cmp
imul
dec
mov
jg
mov
(bad)
repz
jle
mov
and
push
sub
and
cdq
mov
dec
daa
push
cmp
call
xchg
mov
bnd
xor
jle
jmp
jbe
movs
fcomp
daa
sbb
cmc
pushf
push
test
mov
push
std
rcl
push
xor
or
rol
inc
sahf
bound
out
call
call
pop
mov
out
data16
sub
enter
imul
mov
sub
xchg
and
ja
add
add
int3
inc
xor
(bad)
test
jno
xchg
das
sbb
xor
add
std
shl
jb
jle
xor
inc
mov
test
test
push
sub
and
test
pop
bound
(bad)
xor
imul
xchg
mov
pop
add
cmp
jmp
push
std
shl
enter
mov
mov
add
addr16
dec
dec
add
std
rol
inc
and
call
mov
sub
and
out
ret
sub
or
sbb
jbe
jnp
ret
std
add
jle
sahf
(bad)
cmp
sbb
(bad)
std
call
and
xor
sub
inc
push
add
xor
sub
lahf
push
pop
pop
sub
push
push
and
cmc
pop
jp
cmp
idiv
ja
test
xor
push
adc
sbb
push
std
imul
adc
sahf
outs
or
jbe
jp
jbe
mov
jp
or
jbe
mov
call
or
push
sub
and
or
leave
out
bound
mov
or
or
xlat
or
inc
jbe
cmc
sbb
xchg
xor
cmc
add
mov
jbe
mov
mov
imul
add
and
push
sub
and
popf
rol
xchg
xchg
cmc
repz
sbb
xchg
mov
xor
push
jbe
add
sbb
sbb
mov
ret
xchg
or
and
jp
jbe
cmp
es
jae
xchg
test
jns
mov
ret
div
cmc
push
jp
push
xor
js
inc
push
outs
std
bound
test
call
call
call
mov
jnp
mov
xchg
or
mov
sbb
mov
shl
fwait
mov
sahf
push
lar
sub
aaa
xor
adc
nop
or
retf
push
add
jns
push
in
retf
xchg
fistp
xlat
jle
xor
jle
std
shl
push
and
into
fsub
jbe
popf
mov
dec
cmp
dec
or
inc
jbe
or
xlat
or
inc
jbe
cmc
xor
jecxz
add
pop
sahf
aad
jle
idiv
dec
jbe
push
std
mov
cmp
jp
fbstp
xchg
adc
push
pushfw
inc
jbe
sti
jecxz
imul
mov
mov
add
jb
push
or
inc
jbe
xchg
dec
ja
jle
repz
test
add
inc
jle
ds
es
inc
std
and
add
jbe
cli
and
jle
or
or
jbe
sbb
jbe
inc
jle
xlat
jle
mov
cmps
add
jmp
cmp
dec
nop
add
cmc
mov
mov
xchg
jle
or
cmp
call
xchg
jbe
jle
jne
jle
das
sbb
sub
rcr
cli
call
xchg
mov
sti
ror
sbb
data16
jb
cmc
cmp
xor
icebp
mov
push
or
or
inc
jbe
mov
inc
xchg
cmc
cmp
xchg
jle
xor
ret
neg
xor
std
call
xchg
xor
mov
dec
push
xchg
jbe
jle
xor
ret
mov
add
shl
repz
cmp
scas
mov
inc
sahf
aad
jle
add
jle
std
movs
adc
mov
xor
sbb
std
cmc
mov
mov
scas
movs
cmps
mov
push
sub
and
movs
ins
sub
call
hlt
jmp
cli
pop
ins
test
std
shl
dec
movs
jp
repz
jbe
movs
ja
push
cmp
ja
jle
jmp
cmc
in
mov
add
dec
or
xchg
jg
inc
loope
ds
loope
adc
popf
repz
jne
cs
aaa
cmp
sahf
mov
mov
jnp
xchg
mov
add
jecxz
mov
ret
std
mov
pop
ins
test
add
fist
xlat
jle
adc
cmp
popf
(bad)
cmc
xchg
mov
add
dec
xchg
and
ins
dec
cli
call
fld
xchg
inc
icebp
add
jbe
jb
inc
cmp
xchg
inc
xor
xchg
std
mov
add
jle
xor
cmp
imul
dec
std
mov
mov
mov
jbe
inc
or
add
jle
mov
(bad)
jle
jbe
jp
jbe
jle
jbe
jle
push
xchg
loopne
jbe
dec
jb
xchg
test
(bad)
jle
sahf
fisttp
add
cmp
call
mov
(bad)
ds
or
call
add
fmul
or
in
add
adc
push
gs
inc
jbe
or
sahf
jmp
add
xchg
pop
dec
xchg
jle
add
push
sbb
mov
and
mov
sahf
stos
adc
jbe
sub
inc
push
inc
push
sbb
xor
push
push
out
xlat
jle
std
clc
jle
call
mov
mov
xchg
jge
stc
mov
or
xchg
jle
scas
mov
jle
and
jle
sahf
add
add
sti
into
mov
sbb
xrelease
jge
dec
push
inc
sahf
aad
jle
add
icebp
adc
sahf
std
mov
mov
es
inc
std
and
test
sbb
fimul
cmc
popf
inc
jbe
sti
loop
imul
dec
xchg
jle
jbe
cmp
not
inc
jbe
ja
jns
and
jbe
xrelease
xor
mov
dec
push
jp
rol
mov
call
es
mov
mov
xor
imul
mov
sub
cmp
std
mov
mov
es
inc
std
and
test
inc
jns
jbe
std
mov
jbe
cli
call
cmp
ret
xchg
jle
sbb
push
pop
xchg
xlat
jle
repz
xchg
fild
cdq
test
mov
mov
cmp
or
mov
std
mov
jl
jbe
leave
xchg
push
std
ss
mov
std
es
mov
pop
xchg
jle
mov
jno
repz
cmp
es
(bad)
cmc
test
mov
xchg
jle
repz
jg
jbe
fstp
xchg
mov
call
(bad)
std
mov
rcr
xlat
xchg
xlat
jle
es
mov
mov
mov
add
pop
push
xor
repz
and
hlt
mov
(bad)
jp
cmp
mov
retf
push
add
adc
push
push
pushf
inc
jbe
mov
sub
mov
inc
std
mov
jg
iret
ja
add
sub
jmp
jb
mov
add
lahf
mov
std
ja
jle
sbb
push
scas
xchg
xlat
jle
es
mov
mov
mov
add
pop
push
xor
repz
and
test
xchg
or
mov
retf
push
add
push
test
jle
sbb
push
mov
es
mov
mov
mov
add
pop
push
xor
repz
and
test
xchg
or
mov
retf
push
add
adc
push
add
aaa
xchg
xchg
inc
sub
mov
inc
std
mov
sti
mov
imul
ja
std
loopne
xchg
push
push
(bad)
aam
jmp
jb
mov
add
lahf
mov
std
ja
jle
sbb
push
jp
xlat
jle
es
mov
mov
mov
add
cmp
std
(bad)
loopne
xchg
repz
and
test
cmp
sbb
push
jb
xlat
jle
retf
push
xchg
mov
mov
inc
std
mov
sti
mov
imul
popf
call
ret
mov
imul
push
and
jbe
sti
dec
pop
test
mov
xchg
adc
xchg
jg
and
retf
sbb
add
push
xchg
sub
jle
scas
movs
cmps
mov
imul
mov
mov
sub
rol
add
xchg
jle
repz
cmc
xchg
push
inc
std
and
cmps
sub
imul
jbe
fcmovnbe
mov
add
dec
dec
(bad)
push
std
cmps
cmps
push
std
jbe
ret
mov
jns
(bad)
add
push
std
les
adc
stos
mov
adc
mov
add
jle
repz
repz
push
std
es
sti
fimul
movs
adc
jle
repz
cmp
xchg
xlat
jle
repz
cmc
cmp
xchg
jle
xor
ret
sub
xchg
push
sti
(bad)
mov
push
std
lods
adc
scas
movs
cmps
mov
call
repz
cld
mov
cmc
xchg
push
inc
std
and
mov
add
xrelease
push
sti
fimul
lods
adc
dec
push
(bad)
push
std
jg
xchg
jno
xchg
xchg
jle
dec
loope
adc
std
mov
sar
call
jge
cld
mov
cmc
cmp
imul
jbe
(bad)
pop
pop
xchg
jle
xchg
sbb
mov
imul
mov
add
push
push
(bad)
aam
(bad)
repz
xchg
outs
sbb
std
cmps
call
add
adc
sahf
mov
add
cmps
xor
jns
cld
mov
sti
dec
lock
inc
jbe
sti
dec
out
adc
jbe
mov
xchg
mov
add
sti
out
mov
mov
or
sti
mov
sti
and
std
mov
out
data16
mov
test
repz
push
std
cmc
jns
mov
xchg
lea
mov
mov
sub
call
add
pushf
mov
add
fld
sti
adc
std
mov
push
jbe
add
adc
std
mov
mov
push
jbe
jle
call
add
pushf
mov
add
sti
cmps
mov
push
std
adc
std
mov
mov
sub
rol
add
push
std
call
jg
xchg
jno
jo
jle
cmc
xor
std
mov
jmp
xchg
jle
sbb
xchg
sbb
mov
call
and
mov
rcl
sti
jb
imul
mov
mov
in
cmp
mov
push
sti
and
std
mov
out
data16
mov
test
repz
push
std
cmc
jns
mov
xchg
lea
mov
mov
sub
rol
add
mov
add
fisttp
sti
adc
std
mov
push
jbe
add
adc
std
mov
mov
push
jbe
jle
call
or
call
retf
sbb
jno
fs
jle
sti
adc
std
mov
push
mov
mov
sbb
cmc
cmp
imul
cmc
xchg
sbb
pop
mov
mov
call
cmc
sub
std
mov
or
jbe
ret
push
imul
jbe
xrelease
push
std
es
push
imul
cmc
push
jbe
mov
idiv
mul
es
(bad)
mov
jbe
cli
lea
jle
repz
jbe
jp
ret
cmp
dec
enter
sbb
dec
(bad)
adc
push
dec
(bad)
push
repz
mov
std
cmc
pop
add
ins
test
mov
xchg
push
std
es
sti
cli
mov
(bad)
repnz
cmp
push
jmp
jb
jb
sti
dec
int
inc
jbe
sti
dec
arpl
jbe
mov
(bad)
push
std
mov
jbe
jle
repz
xor
cmc
jle
xor
std
call
xchg
push
std
std
adc
std
mov
xchg
push
std
jns
js
mov
xchg
push
std
es
dec
std
and
cmp
push
dec
std
and
cmp
adc
xchg
pop
mov
mov
jbe
jns
repz
neg
ja
test
mov
mov
sub
cmc
sub
jbe
push
sti
ror
movs
adc
mov
call
sar
mov
shl
stos
std
mov
jbe
push
sti
(bad)
mov
push
std
movs
adc
adc
push
sti
fimul
movs
adc
mov
call
(bad)
std
mov
sar
sahf
std
mov
mov
sub
lahf
lea
pop
mov
inc
add
movd
icebp
fild
jbe
jle
adc
add
jle
call
jmp
daa
mov
jno
cli
xor
loop
call
jle
jbe
inc
ror
jbe
add
xchg
push
pop
xchg
jle
mov
xchg
imul
retf
xchg
or
popf
stos
(bad)
cli
inc
xchg
jle
adc
inc
stos
push
add
(bad)
call
cmp
mov
mov
mov
dec
mov
inc
scas
stos
push
lods
push
adc
fucompp
enter
xor
std
mov
and
push
cmp
adc
jle
jbe
out
retf
mov
jle
push
push
and
push
cli
inc
ins
test
jbe
jle
jbe
push
daa
ss
adc
sbb
xchg
jbe
xchg
jle
mov
xchg
out
adc
jle
xor
pop
sub
push
out
push
sub
or
mov
mov
jnp
ret
mov
aad
add
sbb
add
lahf
mov
imul
popf
aaa
xchg
jle
push
lods
loope
jbe
std
daa
jle
add
jnp
jmp
jle
jbe
jle
mov
jb
jbe
jnp
out
aam
push
jbe
jle
xchg
hlt
add
aad
inc
jbe
enter
aas
add
jno
icebp
xchg
jle
dec
push
add
icebp
jle
xchg
jle
push
adc
mov
xchg
dec
outs
or
add
jl
add
add
inc
push
(bad)
cmp
call
ss
div
inc
popf
aaa
xchg
xchg
dec
je
jle
jnp
loope
jbe
mov
call
jae
out
jbe
or
xlat
jns
inc
jbe
jnp
jmp
push
cmp
aam
sbb
outs
add
add
lahf
xchg
jl
jbe
jnp
ret
hlt
jae
loope
jbe
or
jne
jle
inc
lahf
jle
xor
jnp
loope
jbe
fiadd
aam
mov
lahf
mov
jnp
jmp
xchg
dec
ret
jge
jbe
mov
cmp
inc
jbe
xchg
push
mov
hlt
jae
loope
jbe
or
je
jle
jnp
loope
jbe
test
(bad)
aad
inc
jbe
mov
mov
hlt
jae
loope
jbe
or
je
jle
jnp
loope
jbe
inc
push
(bad)
jle
mov
xchg
lahf
aaa
xchg
jl
jbe
xchg
mov
push
hlt
jae
loope
jbe
or
je
jle
mov
adc
jle
mov
cmp
jbe
xchg
mov
loope
inc
jbe
jnp
jmp
movs
mov
mov
jae
jmp
lahf
jg
jbe
xchg
lahf
aaa
xchg
jg
dec
or
add
pop
jg
call
outs
or
add
jl
add
fucomip
jmp
jle
mov
jg
dec
or
add
xor
fwait
aaa
xchg
jg
jle
add
xor
lahf
aaa
xchg
jg
dec
or
add
push
jbe
xlat
jle
jae
loope
jbe
xchg
stos
jbe
jle
mov
je
inc
call
inc
jbe
xchg
xchg
jbe
jle
mov
mov
movd
aas
add
push
add
mov
call
xchg
mov
xchg
fcom
xlat
jle
rcl
ret
std
cli
jge
jns
push
adc
mov
jbe
jle
aaa
test
add
add
mov
jle
jnp
loope
jbe
xchg
xor
xor
xchg
sub
jbe
jnp
jmp
push
cmp
aam
xor
jae
jmp
cwde
dec
ret
jg
jbe
mov
mov
loope
inc
jbe
jnp
jmp
adc
repnz
jle
push
xor
add
pop
mov
call
mov
push
xor
add
jle
jbe
cmp
jns
jnp
xlat
xlat
jle
xchg
xchg
test
enter
mov
xchg
xchg
jle
imul
mov
xchg
add
into
fwait
add
jbe
lahf
mov
jns
ret
jns
cmp
dec
adc
jne
xor
add
jbe
ss
std
aas
xor
add
or
jle
cmp
cmp
jbe
xchg
aas
imul
mov
add
aas
add
sbb
add
shl
add
jno
inc
jbe
enter
aas
add
jne
mov
arpl
jg
nop
or
imul
mov
add
add
pop
push
out
jle
popf
(bad)
div
xor
imul
aad
mov
jp
dec
or
add
xchg
fisttp
out
jle
jae
out
inc
jbe
movs
add
pop
push
out
jle
popf
(bad)
div
xor
imul
aad
mov
jp
fidiv
cmp
mov
fistp
jmp
cdq
out
inc
jbe
movs
std
jae
retf
sbb
sub
xchg
dec
ret
js
mov
pop
add
and
out
lds
push
enter
xor
jecxz
jbe
mov
call
or
xlat
jle
jg
cmp
sahf
fistp
add
mov
add
jge
bound
fstp
xlat
jle
pop
das
cmp
and
bound
fst
jmp
(bad)
jle
xor
push
das
cmp
and
bound
(bad)
jmp
jle
cmp
jge
bound
fnsave
jmp
das
cmp
and
bound
fstp
xlat
jle
sub
push
out
push
(bad)
sub
fldcw
arpl
cmps
add
loope
inc
jbe
cli
mov
faddp
adc
mov
xchg
sbb
jle
scas
xchg
cmps
mov
sbb
stos
call
mov
xor
add
std
mov
adc
add
nop
or
cmps
xchg
(bad)
fdiv
xchg
jle
xchg
sbb
call
mov
add
cmp
ja
jle
sti
nop
or
xchg
push
jbe
xlat
jle
xor
inc
test
add
jle
adc
repz
sub
add
lea
push
xchg
jle
jbe
cmp
es
imul
aam
xor
cmp
xor
cs
jb
js
add
adc
std
add
repz
mov
add
push
jbe
xlat
jle
jbe
or
sbb
adc
mov
call
jle
pop
jbe
xor
xchg
add
sti
rcl
(bad)
xor
std
arpl
inc
jbe
cmp
popf
xchg
push
mov
retf
and
out
jns
lds
imul
sub
jb
xor
dec
data16
cli
cmc
lock
inc
inc
not
sbb
jmp
repz
mov
repz
sahf
lds
(bad)
xor
push
mov
cmc
inc
cmp
loop
jle
xor
test
jo
mov
mul
imul
pop
add
cmp
mov
jbe
mov
adc
aam
pop
sub
mov
ret
sub
jp
jnp
ret
xor
test
add
or
jns
cmp
jbe
or
jns
cmp
jbe
or
jns
cmp
jbe
or
jns
cmp
jbe
jno
jl
jle
std
shr
xor
not
dec
push
cmp
jbe
enter
enter
ret
call
repz
jbe
test
and
dec
push
jno
(bad)
xchg
jle
jmp
call
pusha
lods
mov
sbb
idiv
cmc
jge
or
sahf
xchg
jle
add
jno
xor
ret
jp
pop
sub
es
pop
jbe
jno
and
shl
push
movs
sub
and
xchg
push
sub
std
retf
sub
sti
shr
outs
std
call
xor
jmp
outs
(bad)
xor
xchg
push
std
ror
jbe
xchg
and
cmp
sbb
nop
lods
mov
jns
cmp
ja
dec
std
mov
pop
add
cmp
imul
idiv
ds
xor
add
test
idiv
cmc
jge
or
ja
sbb
sbb
xchg
jbe
jle
jge
xchg
jo
or
dec
jge
data16
cmp
xchg
push
cmc
push
jns
jb
jg
jbe
(bad)
ds
xchg
or
ins
or
ja
sbb
sbb
ins
std
jmp
cmp
jns
jp
dec
jge
add
jns
lahf
xchg
jle
add
sub
sti
shr
outs
std
call
scas
push
xchg
push
call
xchg
jne
jg
cmc
jge
mov
ins
not
jae
jle
jbe
inc
cmp
loopne
mov
xchg
or
ins
std
jmp
inc
mov
test
idiv
cmc
jge
or
dec
loope
aas
mov
inc
std
jbe
jle
outs
jge
pop
jbe
cmc
push
data16
adc
test
arpl
std
jbe
jle
jns
leave
dec
pop
mov
out
jp
sub
nop
or
jle
bound
mov
or
ja
sar
std
sahf
xchg
jle
add
sahf
xchg
jle
add
cdq
push
jmp
cmps
jmp
xchg
jle
cmc
push
je
jae
retf
call
std
test
jle
lods
sbb
add
push
pop
mov
jno
jb
inc
jmp
xchg
add
or
cmc
lock
fwait
neg
jne
or
push
(bad)
xlat
xchg
out
inc
jbe
cmp
add
xchg
and
jb
repz
imul
sub
xchg
scas
mov
popa
repz
push
sbb
add
out
inc
jbe
test
add
std
retf
mov
lods
mov
movs
add
rol
(bad)
xor
not
mov
std
retf
xchg
cmps
push
xchg
push
call
xchg
jno
test
jbe
sub
xchg
xchg
xor
jbe
or
mov
(bad)
jp
and
push
sub
jbe
xchg
(bad)
das
xchg
jle
and
xchg
cld
(bad)
repz
std
mov
jle
jbe
jle
add
dec
cmp
cdq
push
add
nop
or
retf
jbe
std
mov
sti
icebp
cdq
push
or
mov
ins
adc
add
repz
std
mov
cmp
je
jl
sub
cmp
mov
enter
cmovle
cmp
daa
jge
pop
jbe
cmc
xchg
fimul
std
call
jle
rol
in
mov
enter
push
cs
daa
push
pushf
add
add
fmul
(bad)
jbe
mov
xchg
ror
std
call
jle
repz
std
mov
std
mov
mov
fmul
xlat
jle
jns
xor
mov
xchg
call
mov
jl
dec
sbb
xchg
jle
repnz
add
enter
cmp
bound
not
mov
(bad)
mov
jbe
cli
xchg
ja
jle
sub
call
cmps
fisttp
and
std
add
shl
xor
jae
jle
jbe
sti
neg
jle
push
test
and
xchg
test
nop
xchg
div
mov
inc
jbe
jle
dec
or
aad
adc
fmul
int3
jle
mov
std
cmps
call
add
push
std
mov
xchg
std
mov
fisubr
outs
cmp
xor
ret
std
cmps
test
jbe
jecxz
test
sub
lods
push
xchg
add
imul
push
dec
and
cli
cdq
push
ja
sar
std
jbe
jle
add
(bad)
std
mov
neg
jae
outs
add
sti
sub
mov
or
enter
xchg
sbb
xchg
in
mov
add
cmc
xchg
dec
cmp
jbe
sti
out
cdq
push
or
mov
jbe
xlat
jle
ret
dec
mov
pop
jbe
xchg
inc
jne
jle
rol
in
mov
loopne
push
push
push
add
add
add
cmps
cmp
jbe
jmp
cdq
push
ret
xchg
xchg
neg
mov
jl
xchg
xchg
jge
mov
jb
call
imul
push
mov
popa
xchg
std
mov
dec
je
lahf
add
add
adc
mov
mov
mov
jbe
jle
add
add
imul
popf
fisttp
std
and
and
mov
add
inc
add
not
cmc
push
push
add
call
mov
call
jge
call
jmp
dec
cmp
mov
add
adc
fmul
dec
cmp
mov
xchg
mov
xchg
dec
cmp
test
int
add
adc
xchg
dec
cmp
mov
cmp
mov
xchg
sub
ja
std
jle
jo
adc
std
add
fisttp
(bad)
cmc
xchg
into
dec
cmp
push
cwde
jle
jbe
jmp
test
push
jbe
xlat
jle
rol
in
mov
loopne
push
repz
inc
mov
pop
inc
add
add
jmp
cdq
push
ret
xchg
xchg
cmc
push
arpl
jmp
cdq
push
push
test
and
dec
push
jbe
test
push
xchg
jle
imul
jbe
jns
inc
add
cmc
xchg
and
lahf
xchg
jle
add
jno
dec
xchg
jle
lahf
mov
jbe
sti
neg
nop
jg
jbe
std
call
jb
sti
out
push
(bad)
repz
scas
xchg
dec
cmp
test
(bad)
cmp
push
mov
lods
jle
push
xchg
(bad)
cmp
push
xchg
xchg
push
imul
mov
jbe
ja
popf
pop
add
jns
jmp
test
add
arpl
movs
std
mov
add
lahf
xchg
jle
add
jle
jbe
xchg
std
sti
ror
call
call
bound
in
mov
cli
pop
gs
adc
retf
jno
std
mov
xchg
sbb
mov
mov
mov
add
sub
lods
push
les
(bad)
ds
xchg
jle
jbe
or
imul
jle
add
jle
jbe
or
imul
jle
add
jle
jbe
or
xor
or
mov
ret
(bad)
jg
xchg
or
jns
sti
icebp
cdq
push
push
mov
mov
mov
dec
cmp
mov
mov
fisttp
push
fcomi
cdq
push
add
add
loopne
sbb
ret
lahf
xchg
mov
(bad)
std
adc
test
test
std
imul
mov
mov
push
jbe
or
mov
xchg
sub
push
xor
xchg
std
mov
std
mov
mov
fmul
xlat
jle
jns
push
stc
mov
pop
sub
jo
out
ss
sub
enter
ins
out
dec
cmp
jle
adc
inc
mov
rol
pop
ret
inc
jbe
outs
add
lea
mov
mov
jg
sbb
retf
xlat
jle
jns
jle
test
repz
sbb
retf
xlat
jle
jno
jle
test
(bad)
cmp
loopne
inc
std
rol
mov
ins
inc
xchg
mov
adc
xchg
jno
and
inc
arpl
add
rol
inc
mov
out
clc
xchg
or
jle
rcl
jno
and
inc
arpl
xchg
xchg
jle
not
add
dec
push
jle
jbe
adc
xor
test
mov
add
std
cli
ss
xor
jg
rcl
mov
jp
jl
test
add
xor
jg
rcl
hlt
xor
push
sahf
add
jb
cmp
jne
enter
mov
xor
ja
adc
cmp
pop
test
jge
adc
or
not
add
imul
or
push
inc
mov
jno
and
inc
arpl
not
add
mov
out
rol
inc
mov
sbb
call
mov
mov
test
add
or
not
add
sub
and
out
(bad)
sub
loopne
mov
into
into
and
jbe
cdq
mov
imul
add
adc
sahf
jg
add
pop
dec
xchg
jle
(bad)
sbb
jmp
sub
jns
xor
xor
sub
and
out
popf
pop
add
ja
jbe
sub
cmp
adc
xchg
mov
call
sbb
push
(bad)
jb
mov
jbe
repz
sahf
std
mov
xchg
add
xchg
jle
xlat
xchg
jle
xor
std
call
xchg
cmp
jbe
std
(bad)
data16
mov
mov
and
mov
mul
daa
ret
pop
sar
push
xlat
jle
xor
push
add
sub
jbe
mov
and
sbb
mov
in
jb
jle
sbb
push
xor
push
jne
jle
jbe
xor
xchg
test
pusha
push
add
jbe
js
xor
mov
xchg
jle
mov
sub
ret
xchg
fisub
xchg
jle
mov
mov
jmp
cmp
jb
inc
sbb
jbe
add
jbe
jbe
xor
js
xor
inc
xchg
repnz
jge
push
jbe
sub
int
jle
jmp
cli
call
inc
mov
and
push
sub
and
shl
sub
jbe
jle
not
adc
sbb
push
add
mov
dec
and
jle
mov
cmp
xchg
dec
ret
push
clc
sar
sbb
adc
sbb
sub
and
shl
mov
mov
ss
xchg
and
push
mov
jb
sahf
or
jbe
jle
xor
push
xor
sub
std
(bad)
jle
and
push
jbe
(bad)
ror
jle
xchg
sbb
cli
std
rol
add
and
mov
push
and
ror
inc
jbe
jle
not
adc
sbb
push
add
mov
mov
xchg
jle
mov
xchg
mov
or
xchg
adc
sbb
sub
rol
add
xor
jge
push
jbe
sub
fld
jle
into
stos
or
jbe
cdq
mov
ins
test
sub
push
out
data16
sub
loopne
lds
imul
add
movs
mov
xchg
inc
add
jmp
jb
aaa
ja
add
push
cmp
call
sar
sub
cmp
sahf
cmps
sub
jbe
mov
adc
jp
es
dec
loopne
xchg
xchg
push
and
cmp
jmp
inc
add
xchg
mov
cmp
cdq
add
and
push
loopne
xchg
xchg
mul
popf
cmc
inc
mov
cli
call
mov
adc
inc
xchg
(bad)
sub
and
out
jns
push
and
cmc
pop
jle
or
mov
sbb
mov
test
lock
mov
inc
loopne
xchg
xchg
stos
and
push
adc
jp
es
dec
loopne
xchg
xchg
xchg
and
popf
cmp
and
cmp
sahf
pop
sub
outs
mov
and
push
sub
and
call
jbe
popf
mov
dec
test
ja
std
addr16
addr16
xchg
repz
sbb
retf
xlat
jle
jne
jle
test
push
mov
call
sbb
xor
add
shl
rcl
mov
push
and
dec
mov
call
cmps
mov
call
push
call
std
outs
call
jg
xchg
or
into
mov
popf
mov
dec
test
rcl
mov
imul
jns
cmp
xchg
mov
or
jl
jb
adc
je
cmps
xor
imul
imul
sub
mov
call
stos
mov
and
and
scas
imul
leave
push
xchg
call
cmp
retf
xchg
or
xchg
sbb
shl
call
push
cmp
jns
ds
shl
(bad)
js
cmps
call
ja
call
popf
cmc
push
jle
leave
push
jle
scas
add
jno
inc
xchg
retf
mov
add
outs
inc
jbe
lds
aad
xchg
iret
fdiv
pop
add
out
xchg
add
dec
or
add
out
xchg
out
ds
out
out
xchg
ss
ds
out
out
xchg
dec
dec
out
xchg
out
or
out
out
xchg
into
xchg
into
inc
jbe
(bad)
xlat
jle
iret
mov
sti
ret
out
xchg
add
dec
or
add
jp
out
inc
(bad)
add
out
xchg
out
pop
xchg
out
out
xchg
adc
mov
(bad)
out
out
xchg
out
xchg
add
jle
out
out
xchg
out
aam
ss
out
das
es
add
push
xchg
out
out
mov
xchg
out
xchg
out
cs
add
out
xchg
out
mov
cmp
jmp
out
xor
add
out
xchg
out
out
xchg
out
out
gs
outs
dec
stc
icebp
inc
jbe
jb
pop
xchg
into
inc
jbe
popf
inc
jbe
cmp
inc
push
push
xchg
out
out
xchg
into
xchg
outs
inc
jbe
adc
out
out
xchg
sub
std
cli
jbe
out
xchg
add
out
xchg
out
lds
aad
xchg
dec
out
push
ret
out
out
xchg
inc
inc
out
xchg
out
cs
out
out
xchg
call
xchg
out
mov
out
out
xchg
out
out
xchg
out
es
out
out
xchg
enter
pop
add
out
xchg
ja
out
xchg
out
pushf
lock
out
xchg
into
xchg
into
inc
jbe
std
cli
jbe
out
xchg
add
out
xchg
out
(bad)
xlat
jle
dec
out
push
ret
out
out
xchg
inc
inc
out
xchg
out
cs
out
out
xchg
call
xchg
out
mov
out
out
xchg
out
out
xchg
out
es
out
out
xchg
enter
inc
add
out
xchg
ja
out
xchg
out
pushf
lock
out
xchg
pop
add
sbb
dec
test
mov
ret
sub
jp
test
repnz
jge
clc
adc
xchg
jle
sbb
(bad)
call
xchg
mov
jge
addr16
fs
mov
jbe
lahf
add
neg
ja
cs
mov
inc
mov
add
test
add
xchg
sub
sbb
loop
push
add
jns
jbe
jno
and
sti
pop
inc
out
(bad)
sbb
mov
jne
cmc
(bad)
sbb
mov
outs
hlt
push
push
test
cmps
add
call
call
pushf
add
or
dec
repnz
pop
pop
not
into
add
jbe
sbb
call
mov
or
add
cmp
es
dec
jbe
jno
xor
mov
ror
cmps
lds
push
es
add
xchg
jle
mov
cmc
inc
mov
xor
js
mov
mov
dec
push
jno
fs
std
sub
and
out
jns
push
and
shl
(bad)
mov
dec
test
jbe
jae
jne
das
mov
push
test
mov
popa
sub
not
sbb
cmc
nop
sbb
(bad)
push
std
aas
mov
cmp
jbe
jns
mov
add
repz
xchg
lds
cli
mov
(bad)
jle
mov
sub
shr
ret
xchg
xchg
cmc
push
dec
cmp
inc
jbe
push
fisubr
cmp
inc
mov
jge
or
xchg
xchg
xor
jbe
mov
inc
jbe
xchg
pop
cmp
jle
xor
push
scas
xchg
jnp
retf
xlat
jle
xor
jmp
mov
call
sub
sbb
add
imul
add
div
ja
test
xlat
pop
ret
inc
jbe
jnp
retf
xlat
jle
xor
fcmovnbe
inc
ret
inc
jbe
cmp
popf
xor
ja
test
mov
imul
xlat
jle
pushw
cmp
jb
stos
mov
scas
sub
dec
rol
dec
jbe
test
xchg
cmc
jg
call
movs
push
pushf
adc
idiv
cmps
sub
sahf
dec
xor
jbe
cmp
sahf
inc
xor
jbe
add
jns
or
mov
xlat
jle
cwde
mov
add
ds
sub
dec
pop
mov
cmp
es
dec
jbe
std
(bad)
jp
mov
xor
test
bound
(bad)
dec
inc
sbb
ror
xlat
jle
pushw
cmp
jb
mov
xor
jge
mov
ror
mov
xchg
mov
sbb
add
gs
pop
stos
sub
inc
test
inc
xchg
jle
jae
ret
inc
jbe
cmp
add
neg
jne
mov
mov
jp
loopne
sub
mov
ret
inc
jbe
jb
dec
aas
mov
cmp
jns
sub
cmps
ja
push
jecxz
ret
inc
jbe
jae
retf
xlat
jle
jp
div
xor
or
jg
jb
adc
outs
call
jne
mov
jmp
jbe
jbe
jle
je
jle
jbe
jle
jbe
xor
xchg
test
jge
std
add
std
add
or
sbb
jbe
or
sahf
or
add
xchg
dec
aas
xchg
jle
mov
and
mov
out
bound
sub
jnp
xor
inc
add
cmp
fcom
and
inc
gs
jbe
lods
dec
adc
das
mov
xchg
mov
mov
push
aas
mov
add
pop
jge
dec
jbe
jno
or
sar
imul
call
mov
jns
(bad)
inc
mov
inc
std
mov
xor
jg
xor
or
pop
mov
std
jbe
vpshlw
rol
sti
pop
mov
xor
push
mov
jns
std
mov
(bad)
repz
std
mov
push
xchg
xlat
xlat
jle
xor
adc
jmp
adc
sbb
adc
sbb
push
add
ds
rep
cmp
lds
mov
popa
cmp
sbb
sub
popf
(bad)
mov
add
(bad)
repz
lds
add
push
sub
mov
mov
mov
ret
jle
ret
popa
cmp
jge
inc
jbe
add
and
xchg
xrelease
jge
dec
jbe
div
pop
gs
mov
push
je
add
adc
push
xchg
jle
sahf
sar
jbe
jnp
ret
push
je
add
pop
lahf
inc
jbe
sti
std
mov
push
push
xchg
jle
idiv
add
sub
add
call
jl
jbe
xchg
or
xchg
jle
mov
push
sub
jle
sub
and
out
lds
push
std
loopne
mov
idiv
dec
jbe
add
not
inc
jbe
std
mov
mov
repz
mov
adc
push
stos
jle
jbe
jle
jbe
jle
add
mov
cli
inc
ins
test
mov
(bad)
ds
or
call
xchg
add
push
add
mov
jbe
xor
xchg
and
sub
mov
ins
mov
call
or
cmp
add
jg
mov
push
add
or
sahf
movs
jle
jbe
mov
push
push
mov
idiv
sub
adc
sbb
repz
(bad)
lds
push
mov
jbe
jo
jle
cmc
push
pop
sub
mov
jbe
cmp
adc
mov
xchg
jle
xor
(bad)
xor
push
je
adc
sbb
adc
mov
jb
add
jle
mov
jp
mov
dec
std
add
or
sbb
xor
xchg
add
mov
(bad)
sahf
ja
add
mov
add
imul
retf
mov
mul
cmc
jns
push
and
or
std
shl
call
mov
push
pop
jmp
cli
call
add
sbb
xor
imul
add
or
sahf
(bad)
add
mov
jmp
es
adc
sbb
xor
pop
add
mov
(bad)
sahf
repz
mov
(bad)
sahf
iret
add
leave
inc
outs
jle
mov
gs
and
push
es
sub
jmp
cli
call
aas
mov
add
pop
jmp
aaa
inc
jbe
test
xchg
jle
mov
add
xchg
movs
mov
add
push
jle
jbe
jle
jbe
jle
pop
je
add
ss
xchg
inc
outs
out
jle
jg
or
inc
push
xchg
adc
mov
xchg
repnz
xchg
add
push
lea
xchg
and
(bad)
sbb
xchg
jl
jbe
cmp
jb
imul
jle
es
mov
push
and
cmc
ja
cs
fs
pusha
into
jle
std
call
inc
cmp
loopne
mov
cdq
idiv
pop
push
sub
test
jmp
jb
mov
outs
les
jle
mov
mov
ficomp
test
jbe
mov
jbe
adc
pusha
mov
lahf
or
std
shr
jbe
neg
xor
mov
cdq
ds
xor
jle
call
fidiv
test
jmp
inc
jp
xor
xchg
neg
xor
mov
cdq
jg
popf
cwde
dec
ret
neg
xor
pop
sub
mov
and
sbb
ror
xor
push
jbe
sub
add
rol
xor
xchg
test
push
push
sar
mov
cmp
rcl
ret
jno
jb
std
repnz
sbb
or
add
sbb
xor
add
imul
scas
idiv
iret
(bad)
jle
jbe
mov
inc
les
ret
idiv
iret
(bad)
jle
jbe
xor
mov
mov
mov
jge
and
aad
push
pop
push
std
call
lahf
inc
jbe
xchg
push
xor
sbb
xor
mov
imul
out
mov
popa
xchg
or
ror
mov
and
mov
dec
jbe
jle
jge
jle
and
enter
dec
jg
call
cmps
sub
jbe
fucomi
mov
add
adc
std
add
add
jbe
ja
add
jne
jbe
ret
cli
mov
add
cwde
sub
inc
(bad)
jle
inc
push
xchg
and
jle
add
jle
repz
cmp
jbe
mov
call
stos
std
mov
mov
sbb
push
mov
inc
cmp
jbe
jle
and
ds
cmp
push
fbld
sti
ror
push
or
xchg
jg
jbe
inc
inc
jbe
(bad)
jne
xchg
jle
xchg
sbb
into
mov
mov
adc
ret
cmc
pop
add
ins
test
mov
outs
sub
movs
pop
cmp
and
mov
jbe
jno
jle
cmc
push
jbe
cmp
mov
cmp
push
shl
xchg
jle
mov
xchg
mov
xchg
jle
jl
jle
out
bound
adc
gs
inc
jbe
retf
dec
sar
cmc
push
jbe
std
sar
iret
lahf
jle
jbe
mov
cmc
outs
jnp
push
jge
inc
jbe
(bad)
popa
jbe
jle
sub
mov
push
cmp
xlat
jle
sahf
jecxz
add
mov
(bad)
push
xchg
push
xor
jle
out
bound
adc
gs
inc
jbe
retf
dec
sar
cmc
push
jbe
inc
je
add
push
pop
xor
xchg
sbb
xchg
jle
jl
jle
out
bound
adc
gs
inc
jbe
retf
dec
sar
cmc
push
jbe
test
jle
iret
lahf
jle
jbe
mov
cmc
outs
jnp
push
jge
inc
jbe
(bad)
popa
jbe
jle
sub
mov
push
cmp
xlat
jle
sahf
dec
cmp
jbe
mov
push
je
add
adc
push
je
add
jge
inc
jbe
std
(bad)
bound
xor
sar
iret
lahf
jle
jbe
mov
cmc
outs
jnp
gs
mov
xor
xor
jbe
mov
inc
jbe
retf
dec
sar
cmc
push
jbe
adc
lahf
jle
jbe
mov
cmc
outs
jnp
gs
mov
xor
xor
jbe
mov
inc
jbe
retf
dec
sar
cmc
push
jbe
mov
dec
add
pop
inc
jbe
(bad)
or
jle
sub
sar
iret
idiv
jbe
mov
and
ret
dec
stos
lahf
inc
jbe
xchg
adc
xchg
jle
mov
xchg
repnz
xchg
jle
out
bound
inc
jbe
ret
fmul
jnp
add
sti
fmul
loopne
mov
imul
push
sahf
inc
cmp
and
sub
add
out
(bad)
push
test
or
jle
adc
bound
std
mov
push
je
add
jge
inc
jbe
std
(bad)
sub
jbe
mov
call
mov
rcr
je
jbe
out
(bad)
push
test
or
jle
ret
imul
(bad)
jle
aaa
inc
jbe
(bad)
or
jle
sub
mov
and
push
xchg
jle
mov
xchg
es
xchg
jle
out
bound
adc
gs
inc
jbe
retf
dec
(bad)
jle
cmc
push
jbe
popf
jmp
add
jmp
ja
push
sti
dec
setle
lds
xor
xchg
jle
out
bound
adc
pop
sahf
inc
jbe
retf
dec
xlat
jle
cmc
push
jbe
rcl
add
lahf
jle
jbe
mov
cmc
outs
jnp
gs
mov
xor
xor
jbe
mov
add
je
jbe
out
(bad)
push
test
or
jle
adc
bound
std
mov
push
je
add
jge
inc
jbe
std
(bad)
pushw
add
jbe
cli
jbe
xchg
jle
rcl
dec
xchg
jle
repz
jle
mov
jle
xchg
sbb
mov
mov
fstp
popf
in
xchg
adc
std
mov
xchg
std
cmc
mov
jne
ret
push
mov
stos
idiv
iret
(bad)
jle
jbe
mov
cmc
push
pop
push
jmp
sbb
jle
cmp
dec
xor
mov
push
mov
add
adc
sbb
add
adc
push
mov
std
mov
mov
not
xor
repz
jle
mov
cmc
xchg
std
sbb
xor
cs
add
inc
xchg
(bad)
or
jle
sub
sub
add
push
mov
mov
xchg
pop
aaa
xchg
jle
jl
jle
out
bound
adc
pop
sahf
inc
jbe
retf
dec
aam
add
push
jbe
inc
aam
add
lahf
jle
jbe
mov
cmc
outs
jnp
gs
mov
xor
xor
jbe
mov
std
mov
add
add
mov
xchg
pop
xlat
cld
mov
xchg
data16
xchg
xchg
xor
mov
mov
xchg
fidivr
jbe
ret
add
add
jbe
push
dec
int3
jle
std
shl
jbe
jle
dec
adc
cmp
adc
xchg
loopne
push
jne
add
adc
jmp
jb
sti
popa
cmp
ss
xchg
mov
cmp
dec
jg
call
xchg
cmp
mov
cmp
adc
mov
push
sahf
daa
inc
add
sti
test
xchg
mov
mov
std
mov
mov
push
std
mov
data16
ret
gs
mov
push
push
icebp
sahf
inc
jbe
xchg
ss
jle
mov
xchg
push
ss
jle
jl
jle
out
bound
adc
enter
push
dec
aad
add
push
jbe
mov
push
add
xchg
cmp
jbe
jle
sub
mov
and
or
xchg
jle
mov
xchg
(bad)
dec
xchg
jle
jl
jle
out
bound
adc
gs
inc
jbe
retf
dec
stos
jle
cmc
push
jbe
ret
gs
jbe
add
call
ret
push
sar
jle
mov
std
ret
ins
cmp
sub
xchg
push
jno
sti
imul
jbe
retf
dec
stos
jle
cmc
push
jbe
popf
icebp
inc
add
cmp
jbe
jle
sub
sub
add
push
dec
xchg
jle
mov
xchg
and
jle
jl
jle
out
bound
adc
pop
sahf
inc
jbe
retf
dec
stos
jle
cmc
push
jbe
lea
jle
jbe
mov
cmc
outs
jnp
gs
mov
xor
xor
jbe
mov
inc
jbe
retf
dec
stos
jle
cmc
push
jbe
scas
mov
ret
cmp
xchg
(bad)
or
jle
sub
(bad)
jle
jbe
mov
and
ret
dec
stos
lahf
inc
jbe
xchg
stos
dec
xchg
jle
mov
xchg
mov
jle
jl
jle
out
bound
adc
enter
push
dec
stos
jle
cmc
push
jbe
adc
lahf
jle
jbe
mov
cmc
outs
jnp
gs
mov
xor
xor
jbe
mov
add
je
jbe
out
(bad)
push
test
or
jle
ret
imul
(bad)
jle
xchg
sbb
xchg
jle
gs
jle
iret
lahf
jle
jbe
mov
cmc
outs
jnp
push
jge
cmp
xchg
(bad)
popa
jbe
jle
sub
mov
push
cmp
xlat
jle
sahf
imul
push
mov
inc
jbe
retf
dec
stos
jle
cmc
push
jbe
mov
lahf
jle
jbe
mov
cmc
outs
jnp
gs
mov
xor
xor
jbe
mov
add
popf
mov
push
cmp
push
cmp
mov
cmp
push
retf
jle
mov
xchg
xchg
jle
jl
jle
out
bound
adc
gs
inc
jbe
retf
dec
test
add
push
jbe
ins
jne
add
push
xchg
dec
xchg
jle
mov
(bad)
stos
pop
xchg
jle
xchg
sbb
mov
mov
inc
aas
jbe
(bad)
or
jle
sub
xchg
add
push
pop
dec
xchg
jle
mov
xrelease
push
sti
dec
xchg
sahf
inc
jbe
xchg
push
dec
xchg
jle
mov
xchg
dec
jle
jl
jle
out
bound
adc
gs
inc
jbe
retf
dec
test
add
push
jbe
jbe
cmp
mov
cmp
push
or
jle
mov
inc
in
xchg
jle
sahf
sub
jbe
je
jbe
out
(bad)
push
test
or
jle
ret
imul
(bad)
jle
out
jbe
(bad)
jmp
not
not
and
retf
imul
push
sahf
sbb
jbe
mov
add
je
jbe
out
(bad)
push
test
or
jle
ret
imul
(bad)
jle
je
jbe
mov
call
(bad)
std
mov
rcr
mov
dec
test
jbe
push
test
jle
jbe
mov
cmc
outs
jnp
gs
mov
xor
xor
jbe
mov
add
je
jbe
out
(bad)
push
test
or
jle
adc
bound
std
mov
push
je
add
jge
cmp
std
(bad)
data16
scas
fnsave
cmp
imul
push
mov
add
adc
sbb
push
add
ds
add
jle
repz
dec
sbb
std
ret
imul
add
sub
push
mov
cmp
push
mov
push
std
sahf
inc
inc
add
retf
jmp
jle
mov
cmp
push
sbb
jle
test
jle
std
adc
pop
sub
jo
out
jb
jle
and
push
jl
aam
cli
inc
ins
test
popf
scas
idiv
inc
ins
test
es
cmc
fnsave
cmp
jbe
adc
push
adc
std
mov
push
push
xchg
jle
idiv
repnz
(bad)
push
cmp
ja
cmp
dec
nop
or
sbb
push
cmp
dec
cmp
push
xchg
jle
idiv
repnz
aam
xlat
jle
lods
dec
cmp
push
jle
inc
jbe
jge
jbe
xchg
popa
xchg
xor
pop
mov
out
jmp
mov
jmp
in
adc
dec
xor
dec
popf
(bad)
cmp
jmp
add
cmp
std
xchg
jnp
jbe
jle
repz
cmc
xchg
sbb
jp
push
mov
popf
test
sahf
sub
jbe
sub
sti
sar
jmp
mov
push
sahf
aas
dec
add
sti
jbe
push
std
ret
xor
out
jbe
cmc
push
jle
repz
push
(bad)
and
jg
inc
out
mov
cli
inc
ins
test
jbe
test
mov
inc
xchg
jle
repz
cmp
push
call
jle
std
shl
in
std
mov
sub
jae
rep
mov
(bad)
and
jg
inc
idiv
mov
(bad)
jle
push
xchg
cmps
inc
jbe
dec
xor
xchg
test
jbe
adc
sbb
repz
push
or
jbe
xchg
retf
jle
sahf
daa
inc
add
jp
jbe
repz
push
rcr
xor
push
mov
xlat
jle
je
jle
sahf
jno
std
mov
mov
adc
jge
xor
xchg
dec
ret
jl
jbe
xchg
iret
adc
jle
jne
cmp
call
push
ja
jle
repz
std
es
ss
xor
mov
mov
push
idiv
mov
mov
push
fdivrp
mov
(bad)
repz
sub
test
and
aaa
jbe
dec
ret
jg
jbe
(bad)
xor
xrelease
jge
cmp
(bad)
in
arpl
retf
push
(bad)
repz
jmp
cli
dec
fidivr
sbb
adc
sti
adc
cld
mov
jmp
bound
jbe
sti
mov
jbe
jle
repz
std
mov
xchg
xchg
std
mov
jbe
bound
xchg
cld
mov
add
ins
push
cli
call
xchg
imul
mov
(bad)
repz
xchg
imul
jbe
pop
push
jbe
sti
dec
xchg
xchg
pop
inc
xchg
jle
mov
cli
loopne
xchg
jle
ret
cmp
addr16
(bad)
out
dec
xchg
jle
xchg
sbb
mov
mov
push
push
je
add
call
sti
dec
xchg
inc
add
mov
dec
sbb
sub
imul
jmp
ja
add
jle
mov
jle
not
adc
mov
inc
jo
pushf
movs
jbe
std
jle
jbe
xchg
cmps
inc
xchg
jle
retf
add
or
push
xchg
mov
jbe
out
ss
push
push
ja
jle
repz
add
push
push
repz
xor
push
fistp
popf
cmp
jmp
test
xchg
jle
jno
fistp
sti
adc
dec
mov
adc
jmp
xor
jbe
retf
cmps
mov
jmp
loop
mov
push
jmp
in
adc
dec
retf
and
push
push
out
push
sub
enter
fisubr
ins
jg
call
ja
jge
ss
test
not
dec
jbe
xor
xchg
test
mov
outs
jmp
sbb
jge
jle
call
mov
popa
jno
xor
mov
imul
ja
jno
and
inc
mov
jbe
pop
xor
test
jbe
cdq
mov
gs
push
jno
mov
cmp
(bad)
xchg
adc
sti
shl
jmp
push
sahf
mov
jbe
mov
mov
jge
xor
(bad)
in
push
test
mov
jb
rcl
(bad)
xor
sti
xor
xor
sbb
add
call
je
xchg
outs
inc
xchg
jle
jns
cmp
sti
sar
jns
sub
ja
jno
and
inc
xchg
cs
or
jbe
cdq
mov
jge
vaddsubps
push
sar
sbb
adc
sahf
(bad)
dec
add
mov
add
jle
xor
push
sahf
sbb
jbe
xchg
xchg
sbb
out
push
sub
fldenv
pop
sub
mov
and
mov
sahf
inc
dec
add
sub
enter
mov
jg
call
in
adc
loop
push
lds
push
sbb
retf
std
es
ret
adc
jge
xor
test
in
jle
mul
push
jbe
sub
std
mov
ss
std
(bad)
jle
mov
retf
cmp
inc
xchg
jle
mov
inc
popf
cmc
mov
std
mov
sti
adc
loop
push
(bad)
repz
sahf
std
mov
sub
mov
push
or
jmp
cli
call
std
ret
push
sahf
std
mov
ss
std
(bad)
jle
mov
retf
cmp
inc
xchg
jle
cdq
xor
jbe
mov
test
push
xchg
add
ins
jg
call
pop
sub
jo
sbb
jle
popf
mov
sub
add
sbb
mov
xchg
push
push
xchg
jg
jbe
iret
xor
neg
cmc
pop
add
ins
test
ja
sub
adc
cmp
xchg
jecxz
xchg
sub
add
push
jbe
xchg
mov
popa
mov
imul
std
xor
xor
xrelease
cmp
jbe
std
(bad)
jle
push
ss
(bad)
or
jle
sub
xchg
add
adc
mov
jmp
jbe
jno
jle
iret
lahf
jle
jbe
mov
cmc
outs
jnp
pop
jge
xor
(bad)
popa
jbe
jle
sub
mov
push
pop
test
jle
retf
xchg
sahf
std
mov
xchg
out
inc
xchg
jle
mov
xchg
into
inc
xchg
jle
jl
jle
out
bound
push
push
gs
inc
jbe
sti
add
jg
add
mov
cmp
push
xor
repz
sahf
std
mov
xchg
rol
jle
mov
xchg
mov
jle
jl
jle
out
bound
push
push
gs
inc
jbe
sti
add
aas
dec
add
mov
add
je
jbe
out
(bad)
push
test
or
mov
out
bound
loop
push
push
dec
cmp
sti
sub
mov
jmp
outs
std
add
jle
repz
sahf
std
mov
push
and
xchg
sahf
std
mov
xchg
sub
jle
mov
div
pop
gs
jbe
je
jbe
out
(bad)
push
test
or
jle
repz
sahf
std
mov
xchg
and
jle
mov
push
or
xchg
sahf
std
mov
xchg
push
inc
xchg
jle
mov
xchg
retf
jle
jl
jle
out
bound
push
push
gs
inc
jbe
sti
add
jae
add
mov
inc
jbe
sti
add
inc
dec
add
mov
bnd
mov
mov
out
bound
sub
sub
add
out
pop
repz
and
fdiv
cmp
jbe
std
(bad)
data16
push
loop
xchg
xrelease
cmp
jbe
std
(bad)
jle
inc
xor
(bad)
or
jle
sub
xchg
add
adc
mov
jmp
jbe
data16
jle
xor
std
call
dec
test
jle
repz
sahf
std
mov
xchg
ss
xchg
jle
mov
xchg
repnz
xchg
jle
jl
jle
out
bound
push
push
gs
inc
jbe
sti
add
fwait
dec
add
mov
inc
jbe
sti
add
outs
dec
add
mov
bound
xchg
mov
xchg
jle
jl
jle
out
bound
push
push
gs
inc
jbe
sti
add
pop
dec
add
mov
(bad)
repz
sahf
std
mov
push
sub
xlat
jle
repz
sahf
std
mov
xchg
mov
jle
mov
xchg
outs
inc
xchg
jle
jl
jle
out
bound
push
push
gs
inc
jbe
sti
add
pop
dec
add
mov
inc
jbe
sti
add
jecxz
add
mov
add
je
jbe
out
(bad)
push
test
or
jle
repz
sahf
std
mov
xchg
push
inc
xchg
jle
mov
(bad)
int3
ja
jle
nop
sbb
out
test
jge
xor
(bad)
jmp
not
not
and
retf
xchg
sahf
std
mov
push
adc
xlat
jle
retf
xchg
sahf
std
mov
xchg
out
inc
xchg
jle
mov
xchg
into
inc
xchg
jle
jl
jle
out
bound
push
push
gs
inc
jbe
sti
add
jg
add
mov
inc
jbe
sti
add
inc
dec
add
mov
in
adc
les
sub
add
out
(bad)
push
test
or
jle
repz
sahf
std
mov
xchg
cmps
inc
xchg
jle
mov
xchg
bound
jle
jl
jle
out
bound
sub
sub
add
out
pop
repz
and
fdiv
cmp
jbe
std
(bad)
data16
scas
fnsave
cmp
jbe
std
(bad)
jle
jle
jbe
jl
jbe
jle
jbe
jle
and
xchg
test
jbe
xrelease
cmp
jbe
adc
sti
sub
push
sti
sub
mov
std
ret
imul
mov
dec
cmp
jbe
mov
hlt
pop
cmp
mov
mul
idiv
push
jbe
sub
pop
adc
(bad)
jle
cmc
xor
dec
adc
lods
jae
jle
sub
jle
std
shl
xchg
jg
jecxz
cmp
sbb
cmc
xchg
sbb
xchg
jge
sub
cs
mov
mov
mov
call
(bad)
stc
mov
lds
xchg
cmps
inc
jbe
ret
sub
test
call
add
mov
lds
(bad)
mov
jmp
jg
jbe
sti
mov
push
push
push
cmp
fdiv
(bad)
jmp
pop
or
xchg
jle
jb
jle
sti
adc
(bad)
repz
jbe
xchg
jle
mov
mov
sti
adc
dec
outs
cmp
mov
cli
xchg
je
jle
(bad)
dec
cmp
sti
adc
jmp
retf
push
(bad)
repz
jmp
out
mov
cmc
push
cmps
jle
sbb
adc
sti
adc
cld
mov
jmp
bound
xor
std
call
xchg
imul
mov
call
xchg
std
mov
jbe
pop
fs
xchg
cld
mov
add
lock
jbe
cdq
mov
loope
std
mov
(bad)
repz
xchg
cdq
xchg
push
pop
sti
adc
dec
sub
adc
sbb
adc
sbb
adc
sbb
xrelease
(bad)
jle
push
mov
jno
loope
jle
mov
(bad)
dec
xchg
jle
mov
mov
fs
add
call
sti
dec
dec
push
add
mov
stc
mov
jmp
xchg
sbb
jb
push
mov
push
push
push
loopne
inc
jbe
xor
jbe
test
push
jge
add
jmp
jbe
inc
ja
sti
jne
push
ds
mov
sbb
jle
jbe
jle
sahf
out
add
jp
jbe
repz
imul
sbb
jg
sbb
cmp
sti
adc
dec
daa
cmp
mov
add
stos
add
repz
outs
cmp
sub
ret
ret
add
adc
mov
jmp
outs
cmp
jbe
repz
push
retf
xchg
mov
jmp
(bad)
jnp
xchg
jle
xchg
sbb
jb
push
mov
push
jmp
mov
sub
cs
dec
cmp
and
das
jbe
std
(bad)
bound
fdiv
jle
jmp
cmp
push
xchg
cmp
mov
sahf
adc
push
popf
mov
xchg
push
dec
push
and
xchg
mov
jmp
jb
xor
xchg
and
jle
repz
add
xchg
mov
(bad)
repz
ficomp
jle
jbe
retf
cmps
mov
jmp
mov
call
or
mov
lds
push
cs
xchg
jle
repz
pop
mov
sbb
sbb
jmp
mov
push
sahf
call
jbe
cmp
mov
jb
sub
(bad)
and
xchg
xchg
pop
xchg
jle
mov
xchg
mov
push
and
and
dec
mov
jb
and
pop
add
xchg
jbe
xchg
jle
mov
(bad)
es
jle
push
(bad)
inc
jbe
jle
jbe
pop
sub
test
movs
mov
inc
add
cdq
mov
popa
test
and
and
or
sub
sbb
cmc
xchg
sbb
bnd
pop
sub
jo
add
jle
in
mov
add
ret
addr16
pop
mov
(bad)
jnp
add
jle
mov
mov
movs
mov
xor
call
mov
push
sahf
jnp
add
jg
add
cmp
mov
(bad)
jp
cmp
jmp
push
sbb
sub
int
jle
call
mov
retf
mov
and
sbb
ins
mov
call
xchg
mov
xor
rol
inc
jbe
cmp
es
sub
repz
cwde
lds
push
(bad)
jg
jbe
dec
adc
jle
inc
mov
cmp
cmc
push
jge
push
push
inc
jbe
cmp
es
sub
std
(bad)
outs
sbb
in
es
jle
xor
mov
xchg
push
pop
xchg
jle
adc
leave
inc
mov
xchg
or
and
mov
mul
daa
lds
push
enter
es
cmc
nop
sbb
(bad)
call
add
adc
sbb
adc
sbb
adc
sbb
adc
push
add
jle
jbe
js
data16
sub
test
inc
push
xchg
xlat
jle
aad
jle
sbb
sub
push
jmp
jle
jmp
in
rol
push
sbb
xor
sahf
out
push
add
jg
sbb
xor
sahf
call
jbe
jg
sbb
xor
sahf
iret
push
add
jg
sbb
xor
sahf
fist
jbe
nop
jbe
xchg
jle
ja
adc
mov
xchg
ss
xchg
jle
ja
adc
mov
xchg
es
xchg
jle
ja
adc
mov
xchg
push
pop
xchg
jle
cwde
add
jg
sbb
xor
sahf
imul
(bad)
jg
sbb
xor
sahf
jnp
add
jg
sbb
xor
sahf
dec
pop
add
jg
sbb
xor
sahf
pop
pop
add
and
mov
shl
xchg
inc
jge
inc
jbe
and
jecxz
jle
lahf
adc
add
xor
sahf
(bad)
pop
add
cmp
adc
inc
and
jmp
adc
add
xor
sahf
mov
cmp
mov
imul
aam
push
adc
add
xor
sahf
lahf
pop
add
xchg
mov
push
jecxz
jle
popf
mov
add
xchg
out
inc
jbe
xchg
test
xchg
adc
mov
xchg
loop
xchg
jle
mov
sub
aam
jmp
fild
std
xchg
test
xchg
adc
mov
xchg
mov
mov
and
aam
jmp
out
jbe
xchg
test
xchg
adc
mov
xchg
call
dec
xchg
xlat
jle
or
loope
jbe
xchg
test
xchg
adc
mov
xchg
jbe
xchg
jle
mov
mul
cmc
jns
push
and
lds
idiv
inc
ins
test
jbe
or
sahf
xor
push
dec
cmp
and
dec
ss
aaa
xchg
adc
es
and
xchg
push
in
mov
sti
ror
daa
jbe
adc
mov
adc
and
cmp
pop
ror
sub
gs
jbe
(bad)
push
push
dec
lahf
inc
jbe
lahf
fbstp
jle
sub
rcr
inc
jbe
jle
inc
mov
jle
sbb
cmc
inc
mov
sbb
adc
es
mov
fsubr
jge
and
xchg
fld
jmp
sahf
or
jbe
jle
inc
mov
jle
inc
rcr
inc
jbe
out
add
cmc
inc
mov
sbb
les
push
pushf
jle
es
mov
fsubr
jge
daa
jbe
frstor
xlat
jle
jbe
jl
jbe
jle
jae
jg
jbe
jle
jbe
ret
xchg
adc
sbb
adc
sbb
xchg
es
xchg
jle
mov
jg
sbb
xor
sahf
pop
pop
add
jle
inc
mov
jle
inc
rcr
inc
jbe
outs
push
xchg
jle
sbb
adc
push
xchg
jle
es
adc
xor
push
fsubr
jge
daa
jbe
fnstsw
xlat
jle
jbe
dec
ss
push
inc
(bad)
aam
push
jbe
adc
sbb
push
add
cs
dec
cmp
push
dec
mov
jmp
fld
sbb
cmc
xchg
sbb
out
call
add
xchg
adc
mov
adc
push
inc
jg
jbe
fiadd
jbe
adc
push
xchg
jle
es
mov
xor
push
fsubr
jge
es
fisttp
jmp
push
ss
push
inc
(bad)
aam
push
jbe
push
mov
pop
std
jle
jbe
push
mov
dec
cmp
sbb
xchg
(bad)
push
xchg
jle
bound
aas
add
aas
add
cmp
sbb
adc
push
aas
jle
jbe
push
jne
(bad)
push
push
dec
lahf
inc
jbe
sti
fidiv
pop
add
xchg
lahf
aaa
xchg
inc
or
out
mov
push
xchg
jle
es
es
push
ja
xlat
jle
jbe
cmp
aaa
sahf
or
add
(bad)
jle
inc
mov
jle
inc
cmc
fiadd
std
push
add
adc
push
aas
jle
jbe
add
jne
(bad)
push
push
dec
lahf
inc
jbe
sti
fidiv
pop
add
(bad)
mov
mov
adc
mov
push
cs
jle
dec
std
aam
jbe
push
lods
jbe
jle
jne
(bad)
push
push
dec
lahf
inc
jbe
sti
fidiv
pop
add
push
popf
aaa
xchg
xchg
aas
mov
push
jmp
push
inc
(bad)
aam
push
nop
xchg
jle
push
std
jg
jbe
jle
jbe
push
imul
xchg
xchg
scas
push
xchg
jle
out
cmp
jmp
in
rcl
std
inc
mov
jle
inc
rcr
inc
jbe
outs
push
xchg
jle
push
push
add
push
jbe
push
add
cs
dec
cmp
push
dec
mov
jmp
fild
(bad)
jle
inc
mov
jle
inc
rcr
inc
jbe
outs
push
jbe
push
shl
push
xchg
jle
push
xlat
mov
fbstp
pop
add
dec
fwait
aaa
xchg
adc
mov
adc
mov
adc
push
push
dec
add
adc
push
xchg
jle
es
ins
fidiv
jle
jbe
mov
jbe
(bad)
jmp
jle
jbe
dec
ss
push
inc
(bad)
aam
push
cmp
jle
push
xor
jle
jbe
push
add
xlat
jle
lods
dec
cmp
sbb
xchg
mov
loop
cmp
sbb
xor
sbb
xor
sbb
push
cs
jle
out
jle
sbb
push
add
cs
je
add
xchg
mov
add
xchg
adc
repnz
add
aas
add
cmp
sbb
push
xor
push
xchg
jle
sbb
push
add
cs
aaa
cmp
push
xchg
mov
add
xchg
inc
push
xchg
jle
push
ds
bound
push
jbe
adc
mov
adc
mov
adc
sbb
push
fidiv
jle
(bad)
std
jle
test
ficom
dec
cmp
push
xchg
jl
jbe
jnp
jbe
(bad)
jmp
push
ss
push
(bad)
(bad)
xlat
jle
outs
call
push
xchg
jle
sbb
push
add
cs
je
add
xchg
mov
add
xchg
into
push
xchg
jle
push
or
add
aas
add
aas
add
push
cdq
jbe
jle
fist
add
cs
dec
cmp
push
outs
movs
inc
jbe
jle
in
jle
aad
fld
jge
cli
mov
cli
ja
test
mov
and
mov
mul
cmc
jns
push
and
push
dec
loope
inc
pusha
jecxz
add
pusha
mov
or
sbb
push
dec
cmp
and
cmc
mov
(bad)
data16
aaa
xchg
(bad)
and
cmp
call
add
xchg
xchg
and
jle
xor
push
sahf
(bad)
pop
add
mov
jbe
dec
ss
ret
cmc
inc
mov
cmp
pop
ror
add
xchg
jle
es
mov
jecxz
xlat
jle
jbe
jle
sahf
jae
add
cmp
mov
adc
inc
xor
inc
xchg
xchg
jmp
(bad)
std
jle
test
retf
lods
xlat
jle
lods
dec
cmp
sbb
xchg
mov
xchg
jle
jb
aas
add
aas
add
aas
add
mov
cmp
pop
ror
push
jg
(bad)
push
push
dec
lahf
inc
jbe
movs
fbstp
pop
add
push
mov
sbb
adc
sbb
adc
sbb
adc
sbb
adc
push
sub
(bad)
jle
jbe
jbe
bound
and
test
jbe
adc
and
dec
std
inc
xchg
loope
jbe
jae
jbe
adc
mov
adc
mov
adc
sbb
adc
sbb
push
add
cs
je
add
adc
jmp
jecxz
jbe
xchg
mov
push
dec
cmp
sbb
push
inc
ja
jle
inc
jge
inc
jbe
ret
sbb
stos
xlat
jle
jbe
cmp
aaa
sahf
or
add
adc
jle
add
push
dec
ja
jle
inc
jge
inc
jbe
neg
sbb
adc
push
fstp
jbe
dec
jmp
jle
sbb
xor
sbb
xor
push
mov
dec
push
jne
(bad)
push
push
dec
lahf
inc
jbe
sti
fidiv
popa
add
(bad)
mov
inc
ins
test
inc
or
add
cmp
push
mov
inc
push
jbe
push
add
cs
je
add
adc
jmp
loope
jbe
add
mov
add
xchg
adc
mov
adc
push
adc
add
adc
xchg
jle
push
xchg
jle
es
sub
fsubr
jge
sbb
xchg
fnsave
xlat
jle
add
jle
inc
mov
jle
inc
rcr
inc
jbe
outs
push
jbe
push
shl
push
xchg
jle
push
xlat
mov
fbstp
pusha
add
dec
fwait
aaa
xchg
adc
mov
adc
mov
adc
push
push
fiadd
jbe
adc
push
xchg
jle
es
ins
fidiv
jle
jbe
nop
(bad)
jmp
jle
jbe
dec
ss
push
inc
(bad)
aam
push
iret
xchg
jle
push
xor
jle
jbe
push
add
xlat
jle
lods
dec
cmp
sbb
xchg
cmp
jle
loop
cmp
sbb
xor
sbb
xor
sbb
push
out
xchg
jle
nop
xchg
jle
sbb
push
add
cs
dec
cmp
push
dec
mov
jmp
fild
sbb
xor
push
ss
push
inc
(bad)
aam
push
jbe
push
std
jbe
jle
push
lds
push
lods
xlat
jle
lods
dec
cmp
sbb
xchg
ret
jle
(bad)
ss
sbb
xor
sbb
xor
sbb
push
xor
push
jbe
(bad)
push
push
add
jg
xor
push
add
jmp
jmp
jbe
jle
inc
mov
jle
inc
cmc
fiadd
jmp
pop
(bad)
cmp
std
jle
test
ficom
dec
cmp
push
xchg
jl
jbe
das
pop
jbe
(bad)
jmp
popf
das
add
jle
inc
mov
jle
inc
cmc
fiadd
jmp
adc
and
std
jle
test
ficom
dec
cmp
push
xchg
jl
jbe
imul
xchg
frstor
jmp
push
ss
push
inc
(bad)
aam
push
jbe
push
inc
ja
jle
push
lds
loope
xlat
jle
mov
add
jle
out
ss
sahf
push
(bad)
std
mov
test
jle
sub
mov
and
sbb
repnz
push
jb
jle
xchg
sbb
out
call
add
adc
jge
jbe
jge
jbe
jle
mov
jbe
(bad)
std
cld
mov
jle
jbe
xchg
scas
outs
xchg
jle
mov
xchg
mov
xchg
jle
sahf
push
add
sbb
jbe
cmp
jb
jle
sti
ror
push
sti
rol
push
and
push
xchg
jle
idiv
mov
outs
sbb
cmc
xchg
sbb
jmp
aaa
push
push
(bad)
movs
inc
jbe
sub
xor
xor
jmp
std
mov
mov
mov
push
add
jbe
arpl
(bad)
jp
xor
std
add
jle
ja
jle
sahf
push
(bad)
mov
mov
retf
mov
mul
idiv
add
sub
aam
sbb
xor
mov
fdiv
jbe
cmp
jbe
xchg
push
imul
add
bound
std
imul
add
(bad)
xlat
jle
repz
cmp
outs
xchg
jle
or
ja
std
cmps
mov
xchg
xrelease
cmp
jbe
(bad)
in
sbb
call
push
test
xchg
cmp
outs
xchg
jle
or
ja
std
push
xor
xrelease
cmp
jbe
(bad)
jg
nop
or
push
movs
iret
inc
jbe
sti
add
dec
imul
jo
outs
push
and
add
adc
mov
jmp
addr16
jbe
(bad)
jg
xchg
or
push
icebp
iret
inc
jbe
sti
add
aas
imul
jle
outs
push
and
add
adc
mov
jmp
or
(bad)
xlat
jle
repz
cmp
popa
xchg
jle
or
ja
std
mov
xchg
cmp
jbe
div
xor
std
call
jg
sahf
or
push
xchg
int3
inc
jbe
sti
add
xlat
imul
jp
outs
push
daa
cmp
sti
adc
mov
jmp
or
(bad)
xlat
jle
repz
cmp
popa
xchg
jle
or
ja
std
sub
jbe
cmp
jbe
adc
sbb
push
inc
lods
xlat
jle
cmp
adc
mov
push
or
add
std
inc
fnstenv
jle
or
add
std
mov
add
jle
mov
div
ja
test
mov
and
push
push
push
and
cmc
ja
sub
inc
sti
out
sub
xchg
jle
xchg
sbb
(bad)
call
cmc
and
sbb
repz
jo
sub
xchg
xchg
std
mov
mov
or
jle
sub
and
push
push
out
pop
popf
jle
and
mov
ins
jmp
bnd
bnd
test
jbe
sti
out
sub
add
stos
sbb
(bad)
or
sub
imul
(bad)
cli
mov
ja
std
shl
fwait
bound
adc
xchg
(bad)
pop
jbe
jle
nop
sbb
out
push
mov
push
add
test
(bad)
(bad)
xlat
jle
repz
std
mov
xchg
out
xchg
jle
retf
data16
mov
int3
inc
jbe
sti
out
sub
add
ret
icebp
mov
push
add
(bad)
repz
std
mov
xchg
mov
xchg
jle
retf
data16
mov
int
jbe
sti
out
sub
add
mov
nop
sbb
loop
push
mov
push
add
test
ss
(bad)
repz
std
mov
xchg
jb
xchg
jle
retf
data16
mov
int
jbe
sti
out
sub
add
ret
icebp
mov
or
test
outs
(bad)
(bad)
repz
std
mov
xchg
arpl
cwde
mov
dec
mov
mov
or
xchg
mov
inc
jbe
sti
out
sub
add
ret
icebp
mov
or
test
test
xlat
jle
repz
std
mov
xchg
(bad)
bound
xchg
mov
int
jbe
sti
out
sub
add
ret
icebp
mov
push
add
(bad)
repz
std
mov
xchg
retf
jle
mov
add
icebp
mov
lsl
(bad)
repz
std
mov
xchg
stos
bound
xchg
mov
retf
sbb
out
sub
add
push
mov
fwait
bound
out
mov
hlt
daa
mov
fiadd
std
icebp
mov
xchg
xchg
out
call
xchg
sub
jbe
push
ret
jmp
ins
add
div
inc
gs
jbe
dec
fstp
jle
not
std
cmc
push
jbe
repz
std
mov
add
popf
add
(bad)
mov
jbe
cli
test
retf
imul
add
sub
or
jbe
sti
std
mov
add
gs
call
xchg
std
dec
fnstenv
cmp
jbe
std
(bad)
jp
ret
cli
mov
add
mov
jle
mov
gs
daa
sbb
cmc
pushf
push
test
mov
push
cmp
retf
ins
xchg
mov
jle
dec
cmc
jecxz
jbe
or
jbe
push
fnstenv
cmp
jbe
push
sub
jle
push
add
popa
fnstenv
cmp
jbe
std
(bad)
outs
jle
push
xchg
jle
sti
adc
jmp
idiv
jbe
xrelease
std
outs
fnstenv
cmp
jbe
push
add
imul
xor
jge
pop
jbe
xrelease
push
jp
sti
adc
push
dec
cmp
sti
adc
jmp
outs
push
mov
push
sahf
pop
push
jbe
jg
or
sti
adc
jmp
jb
mov
sti
push
ja
jle
repz
adc
rep
xchg
mov
add
ins
xchg
mov
jle
mov
xchg
mov
xchg
xlat
xlat
jle
xchg
dec
cmp
sti
adc
jmp
outs
push
daa
cmp
sti
adc
jmp
cmp
push
jmp
cmps
cmc
mov
and
adc
mov
mov
cmps
cmc
mov
xchg
cmp
xchg
xchg
or
mov
mov
jne
scas
add
retf
cli
mov
(bad)
repz
(bad)
repz
xor
jge
adc
test
mov
jmp
stos
cmc
mov
jle
test
push
jbe
test
mov
std
ret
popa
xchg
mov
adc
xrelease
jge
adc
repz
and
ret
test
jg
sahf
pop
outs
add
mov
dec
xchg
jle
rep
xchg
mov
adc
mov
mov
mov
mov
aad
push
std
xchg
es
adc
xrelease
mov
sahf
pop
mov
mov
mov
ret
push
dec
ins
cmp
jbe
nop
jae
xchg
jle
ss
add
int3
xchg
int
push
pop
sub
mov
jb
sub
jbe
xchg
out
xchg
jle
and
lds
lea
xor
cmps
sub
and
push
add
jle
cmp
adc
in
mov
ret
cs
xchg
arpl
jbe
inc
or
add
(bad)
add
popf
mov
and
lds
jecxz
jbe
jle
jbe
cs
aaa
xchg
xchg
xchg
addr16
jle
mov
fild
jge
adc
xchg
addr16
jle
sahf
fld
jbe
xchg
pop
inc
xchg
jle
jb
jle
sti
adc
in
mov
std
add
jle
ja
out
mov
(bad)
jnp
std
es
cwde
mov
(bad)
data16
std
jbe
jno
inc
xchg
jle
cmc
nop
or
push
loope
inc
jbe
jnp
ret
mov
xor
std
call
retf
jle
movs
fcomp
daa
sbb
cmc
pushf
push
test
mov
push
std
lds
sbb
mov
ss
std
mov
mov
push
add
xchg
jle
shr
out
mov
sar
imul
call
mov
jns
(bad)
inc
mov
not
xchg
std
mov
add
mov
or
push
mov
std
jbe
das
push
jbe
test
js
sti
stos
fwait
push
xor
push
mov
sbb
mov
push
add
mov
xor
repz
jns
std
es
push
jbe
adc
sti
adc
out
mov
(bad)
repz
std
mov
xchg
jbe
xchg
jle
repz
int3
mov
or
mov
add
sbb
repz
jns
std
es
adc
(bad)
sbb
jle
xchg
sbb
xchg
call
jmp
movs
inc
jbe
out
mov
lods
xlat
jle
or
add
adc
jns
xchg
jle
retf
not
push
scas
xlat
jle
push
xchg
jle
test
fld
dec
cmp
push
add
mov
jb
xlat
jle
std
xchg
sti
sub
mov
aaa
xor
add
mov
jbe
sbb
call
test
out
cmp
push
push
movs
inc
jbe
pop
xchg
ss
xchg
pop
gs
jle
retf
ja
std
mov
dec
sub
jle
test
fld
dec
cmp
push
add
mov
add
aam
jmp
ds
retf
sub
les
xchg
jle
test
inc
mov
jle
sbb
adc
sbb
adc
sbb
push
add
ds
or
add
sbb
mov
xchg
adc
sbb
cs
sbb
xchg
mov
add
cmp
cdq
push
push
sahf
div
jbe
repz
push
cmp
(bad)
jle
add
retf
in
mov
std
add
xchg
out
jns
jle
jbe
cmp
xchg
add
call
jns
jle
xor
xchg
std
mov
xchg
mov
jle
sti
and
std
ss
xchg
sbb
mov
ret
jp
std
and
mov
(bad)
add
jle
xor
mov
xor
xor
xchg
xor
xchg
neg
inc
dec
test
xor
test
xchg
test
aad
mov
push
push
add
xchg
jle
jbe
lahf
or
mov
xchg
mov
call
into
out
mov
xchg
js
std
call
add
xchg
jle
jbe
mov
jbe
test
xchg
jle
sbb
xchg
stos
xchg
jle
xor
inc
retf
add
xchg
popf
jg
jle
xor
add
mov
add
cmp
jbe
adc
mov
adc
sbb
adc
sbb
adc
sbb
push
add
jle
xchg
dec
cmp
push
je
inc
jbe
jle
ins
test
aad
loope
jbe
jmp
xchg
xchg
pop
js
jle
jbe
mov
(bad)
jb
test
jbe
(bad)
jo
std
jmp
xor
xchg
xor
jle
or
add
jge
pcmpeqd
cmp
jbe
popf
mov
cmp
sti
stos
fwait
push
mov
xchg
adc
es
scas
fwait
push
(bad)
nop
std
mov
xchg
loop
xchg
jle
repz
repz
jnp
std
es
adc
lods
xlat
jle
and
push
xchg
jle
idiv
xchg
mov
(bad)
outs
pushf
mov
outs
ret
add
xchg
jg
jbe
xchg
call
cmps
mov
push
push
sbb
adc
push
pop
cmovb
jle
jbe
imul
cs
(bad)
in
mov
push
mov
add
jae
jbe
xchg
jb
xchg
jle
jbe
mov
jbe
adc
mov
xchg
bound
jle
outs
sbb
out
jge
or
xchg
neg
pop
dec
test
sahf
sub
jbe
jle
jbe
jle
xor
jmp
or
sub
and
push
push
out
dec
xchg
jle
and
out
xor
jp
jns
xchg
cmc
inc
jp
xchg
jns
in
jbe
add
in
add
mov
adc
jle
repnz
add
ins
add
or
dec
test
jbe
repnz
jle
jle
dec
xchg
jle
jns
inc
jbe
xchg
xchg
jle
jle
dec
std
retf
xchg
jno
lods
xchg
jle
push
pusha
mov
push
xlat
jle
dec
jno
std
call
xchg
dec
jb
xchg
push
push
out
stos
xlat
jle
ret
jns
std
mov
out
push
(bad)
data16
jmp
cmp
lds
std
sahf
xchg
jbe
mov
add
sti
retf
adc
xchg
xchg
cli
jp
jle
mov
adc
mov
add
pop
add
rol
mov
xchg
adc
jmp
sub
mov
mov
jno
std
mov
adc
push
xchg
(bad)
jle
jbe
dec
inc
(bad)
aam
jmp
push
cli
call
aas
adc
cmp
jbe
cli
mov
xchg
jle
adc
cmp
aad
retf
sbb
add
icebp
retf
xchg
(bad)
aas
push
and
jbe
jb
inc
std
retf
jge
jmp
dec
in
inc
jbe
jno
setb
mov
xchg
pop
nop
push
pop
lahf
std
jns
jbe
xchg
mov
mov
dec
shl
repz
(bad)
jle
jne
jle
lahf
fnstsw
jbe
jle
aaa
xchg
inc
inc
jle
jbe
add
jle
mov
add
bound
cli
mov
add
jnp
aad
jle
xor
jle
dec
scas
jnp
out
aam
jbe
scas
jnp
jmp
jle
pop
scas
jnp
aad
jle
push
scas
jnp
xlat
xlat
jle
push
jnp
aad
jle
bound
jle
jp
jnp
jmp
inc
js
jbe
jle
add
jle
rep
cmp
scas
jnp
xlat
xlat
jle
data16
jnp
aad
jle
jle
jnp
out
aam
ja
std
into
adc
xor
xchg
push
std
mov
std
add
jle
cdq
sar
jbe
fnclex
mov
add
xor
(bad)
repz
std
mov
xchg
sahf
jp
jle
repz
std
mov
jbe
idiv
ja
test
jbe
mov
push
xchg
jle
sti
adc
mov
std
inc
jge
inc
jbe
mov
jbe
(bad)
mov
jbe
pop
push
and
xchg
xchg
bound
jle
inc
jge
inc
jbe
jae
jbe
xchg
icebp
jae
jle
or
add
pusha
cmp
push
sti
hlt
mov
add
test
mov
xchg
jg
repz
add
add
ja
cmp
xlat
xlat
jle
stc
lahf
jle
sti
sbb
mov
retf
(bad)
ds
or
cmc
ins
jnp
imul
push
jbe
add
or
mov
jmp
jb
mov
add
mov
add
jle
jbe
scas
or
xor
sahf
jmp
add
sbb
jbe
idiv
inc
ins
test
mov
(bad)
repz
cmp
lds
das
lods
xlat
jle
repz
cmp
lds
xor
xchg
cmp
push
add
adc
add
sbb
push
or
xlat
jle
jbe
pop
or
xor
sahf
xor
add
xchg
repz
ja
cmp
imul
std
cli
data16
push
xchg
dec
cmp
sbb
xchg
ss
jle
inc
mov
inc
jbe
lahf
or
xchg
lds
jle
repz
cmp
jns
sti
add
nop
jg
mov
xor
xchg
inc
cmp
mov
add
jle
jbe
mov
jbe
xor
sahf
aaa
ja
jbe
test
xchg
inc
ja
sti
add
out
mov
sbb
add
adc
push
dec
cmp
sti
adc
jmp
outs
push
xchg
jle
sti
adc
mov
std
inc
adc
outs
or
(bad)
mov
jbe
pop
push
mov
cmp
sbb
xchg
jle
xchg
jle
inc
adc
push
or
xchg
or
aas
xchg
jle
xor
std
call
xchg
cmp
mov
push
push
mov
sti
test
push
mov
add
sti
add
mov
xchg
mov
retf
xchg
cmp
sbb
adc
push
cmp
jle
jge
jle
mov
xchg
mov
call
adc
mov
(bad)
repz
cmp
lds
mov
repz
cmp
lds
xor
xchg
cmp
pop
or
add
adc
add
sbb
push
imul
xchg
xor
sahf
ret
jbe
jbe
inc
add
repz
ja
cmp
imul
std
cli
jne
pop
push
pop
dec
cmp
sbb
xchg
jbe
xchg
jle
inc
mov
pop
or
xchg
add
repz
std
mov
sti
std
mov
mov
nop
jg
mov
xor
xchg
inc
cmp
mov
add
jle
jbe
dec
or
xor
sahf
ja
add
mov
jbe
inc
ja
sti
std
mov
ds
(bad)
mov
sbb
add
adc
push
dec
cmp
sti
adc
jmp
outs
push
xchg
jle
sti
adc
mov
std
inc
mov
inc
jbe
das
add
ja
cmp
jbe
jle
addr16
cmp
sbb
xchg
mov
inc
mov
inc
jbe
pop
add
je
jle
repz
jns
sti
cld
mov
mov
nop
jg
mov
xor
xchg
inc
cmp
mov
add
jle
jbe
add
push
or
add
jl
add
inc
ja
repz
push
or
ja
call
dec
push
or
jmp
in
adc
xchg
push
xrelease
cmp
mov
push
push
mov
sti
test
push
mov
in
adc
xchg
push
adc
sbb
adc
sbb
adc
push
xchg
jle
ss
ds
aaa
xchg
xchg
sahf
jae
jle
repz
cmp
(bad)
jl
jbe
jle
ret
popa
cmp
jge
pop
jbe
(bad)
aas
push
and
jbe
cmp
jbe
mov
ss
xchg
jecxz
cmp
(bad)
sub
add
push
loop
xchg
jle
jbe
sti
repnz
push
sbb
push
repnz
xlat
jle
ret
popa
cmp
jge
pop
jbe
repz
pop
add
ins
adc
sti
add
push
sti
or
std
ret
popa
cmp
jge
pop
jbe
adc
sti
adc
push
xor
xor
jbe
xchg
mov
std
ret
popa
cmp
jge
push
jbe
xor
sahf
sub
jbe
jle
jbe
jp
jbe
jle
jbe
jle
push
mov
inc
jbe
mov
sub
idiv
dec
jbe
adc
sbb
adc
mov
mov
mov
ret
jle
jnp
fadd
push
mov
ss
xchg
jecxz
cmp
(bad)
sub
add
push
add
jle
jbe
sti
repnz
push
sbb
push
out
scas
xlat
jle
ret
popa
cmp
jge
push
jbe
xor
jbe
jnp
ret
add
jle
mov
push
xor
push
jnp
xlat
jle
and
push
xchg
jle
idiv
mov
(bad)
jnp
inc
popf
loope
jbe
lahf
pop
jbe
idiv
xor
std
call
adc
test
or
retf
mov
sbb
sbb
jecxz
mov
sub
mov
call
or
xchg
jg
jbe
sti
into
jbe
jle
or
jle
jbe
dec
xchg
xlat
jle
jge
dec
jmp
jle
into
xor
add
cdq
mov
popa
test
aaa
xchg
or
mov
xchg
mov
jle
inc
adc
jne
inc
mov
or
jbe
inc
aaa
pop
or
add
sahf
xor
sahf
idiv
jbe
xchg
mov
cmp
jmp
jbe
jne
inc
mov
aaa
push
jbe
inc
aaa
pop
or
add
sahf
xor
sahf
mov
dec
and
aam
ja
adc
jle
add
aas
add
sbb
sub
mov
inc
jbe
push
dec
in
inc
jbe
or
mov
xchg
cli
jne
jle
lods
scas
dec
jmp
arpl
jecxz
jle
mov
adc
jle
jo
arpl
jmp
mov
js
imul
push
jecxz
jle
jo
arpl
out
jle
inc
mov
js
imul
inc
jbe
mov
xchg
jle
inc
mov
inc
jbe
js
imul
xchg
xlat
jle
jo
arpl
jmp
loope
std
add
or
and
xchg
jle
xchg
jle
jp
fnsave
jbe
mov
call
mov
mov
xchg
jle
push
popf
lea
add
jle
push
cdq
lea
add
jle
push
test
add
jle
push
or
std
push
mov
inc
jbe
out
add
jle
push
mov
out
add
jle
push
movs
lea
add
jle
push
mov
out
add
jle
push
push
sahf
sub
jbe
mov
and
idiv
lds
xor
sbb
inc
popf
xchg
cmp
popf
mov
or
add
(bad)
jmp
jno
mov
and
data16
sahf
push
jle
jbe
jg
sbb
cs
mov
adc
push
add
jle
jb
inc
add
jle
popf
mov
and
and
cmp
test
mov
sti
fadd
xchg
std
jmp
call
es
jbe
jbe
jle
push
aad
inc
jbe
out
add
jle
push
ror
add
jle
push
fisttp
add
jle
push
(bad)
add
jle
push
lds
add
jle
push
ror
jbe
jle
push
int
inc
jbe
out
add
jle
push
leave
lea
add
jle
push
cmc
lea
add
jle
push
icebp
lea
add
jle
push
std
lea
add
jle
push
stc
lea
add
jle
push
in
inc
jbe
out
add
jle
push
loope
inc
jbe
out
add
jle
push
in
lea
add
jle
push
jmp
out
add
jle
push
adc
out
add
jle
push
adc
add
jle
push
sbb
out
add
jle
push
sbb
add
jle
push
add
out
add
jle
push
add
add
jle
push
or
out
add
jle
push
or
add
jle
push
xor
out
add
jle
push
xor
add
jle
push
cmp
out
add
jle
push
cmp
add
jle
push
and
out
add
jle
push
and
add
jle
push
sub
out
add
jle
push
sub
add
jle
push
push
lea
add
jle
push
push
lea
add
jle
push
pop
lea
add
jle
push
pop
lea
add
jle
push
inc
lea
add
jle
push
inc
lea
add
jle
push
dec
lea
add
jle
push
dec
lea
add
jle
push
jne
inc
jbe
out
add
jle
push
jno
inc
jbe
out
add
jle
push
jge
inc
jbe
out
add
jle
push
jns
inc
jbe
out
add
jle
push
ins
lea
add
jle
push
imul
std
push
xchg
mov
add
jle
push
xchg
mov
add
jle
push
popf
mov
add
jle
push
cdq
mov
add
jle
push
test
add
jle
push
or
std
push
lea
add
jle
push
mov
add
jle
push
mov
inc
jbe
out
add
jle
push
mov
inc
jbe
out
add
jle
push
mov
out
add
jle
push
mov
out
add
jle
push
movs
mov
add
jle
push
mov
out
add
jle
push
lods
mov
add
jle
push
test
out
add
jle
push
aad
inc
jbe
out
add
jle
push
ror
add
jle
push
fisttp
add
jle
push
(bad)
add
jle
push
lds
add
jle
push
ror
jbe
jle
push
int
inc
jbe
out
add
jle
push
leave
mov
add
jle
push
cmc
mov
add
jle
push
icebp
mov
add
jle
push
in
inc
jbe
out
add
jle
push
loope
inc
jbe
out
add
jle
push
in
mov
add
jle
push
jmp
out
add
jle
push
adc
out
add
jle
push
sbb
add
jle
push
add
out
add
jle
push
add
add
jle
push
or
out
add
jle
push
or
add
jle
push
xor
out
add
jle
push
xor
add
jle
push
cmp
out
add
jle
push
cmp
add
jle
push
sub
out
add
jle
push
sub
add
jle
push
push
mov
add
jle
push
push
mov
add
jle
push
pop
mov
add
jle
push
pop
mov
add
jle
push
inc
mov
add
jle
push
inc
mov
add
jle
push
dec
mov
add
jle
push
dec
mov
add
jle
push
jne
inc
jbe
out
add
jle
push
jno
inc
jbe
out
add
jle
push
jge
inc
jbe
out
add
jle
push
jns
inc
jbe
out
add
jle
push
mov
add
jle
push
popa
mov
add
jle
push
ins
mov
add
jle
push
imul
