mov
hlt
test
sub
aam
or
and
dec
nop
sub
pop
nop
xor
or
or
jecxz
lds
jae
neg
and
cmp
shr
add
mov
add
adc
pop
test
mov
and
fisttp
xor
pop
repnz
mov
or
jmp
fcmove
loope
fs
loop
aam
mov
and
push
mov
ficomp
or
jl
push
cmp
jbe
in
aaa
iret
mov
je
sub
or
or
and
ret
or
test
mov
add
mov
(bad)
lock
xchg
xor
popa
add
aas
pop
mov
sbb
or
enter
rcr
cmp
xor
or
aas
and
cmp
add
mov
ret
or
sbb
dec
mov
(bad)
pop
or
scas
mov
add
and
mov
xor
stos
mov
push
jmp
jle
cmp
fcom
jle
add
jo
test
add
retf
stos
test
jmp
fdivr
jo
or
ret
xchg
pusha
(bad)
mul
lods
mov
ret
xchg
jle
dec
adc
lds
arpl
jg
dec
mov
inc
or
mov
sub
enter
jo
mov
rol
or
xchg
mov
mov
jmp
pop
dec
std
or
hlt
(bad)
and
mov
and
fdiv
(bad)
pop
or
xor
movs
je
and
int3
mov
or
and
push
jmp
xor
mov
xchg
pop
retf
and
popa
and
and
ins
adc
jbe
in
(bad)
jmp
pusha
cs
or
inc
or
aaa
iret
xchg
pop
loop
or
jae
xor
inc
add
and
int3
mov
and
and
sub
popa
and
data16
or
xor
mov
mov
add
add
mov
add
lods
adc
stc
(bad)
loopne
pop
or
mov
or
push
fwait
cdq
inc
mov
imul
xlat
jo
or
test
bound
and
mov
and
cmp
and
in
fnstsw
jae
jp
shl
enter
or
cmps
jne
dec
(bad)
pusha
mov
cmps
jns
dec
(bad)
pop
pop
retf
mov
outs
aad
and
or
adc
sbb
imul
jo
mov
jl
adc
pop
aas
add
movs
fwait
outs
push
mov
jbe
cmp
fmul
iret
(bad)
xchg
jne
dec
fdiv
retf
test
ficom
jmp
loop
ds
sub
or
(bad)
hlt
in
and
and
or
and
mov
sahf
clc
or
cmps
or
inc
jecxz
fdiv
adc
xchg
test
push
xchg
test
and
hlt
pop
mov
ja
mov
inc
jecxz
mov
xchg
pop
sub
iret
(bad)
jnp
or
jmp
mov
add
or
or
cmp
pop
fdivr
or
shr
jge
retf
aad
mov
or
mov
jecxz
ds
push
cdq
test
dec
xor
dec
retf
shl
or
dec
push
jge
stos
pop
or
test
push
test
shl
stos
jns
push
stos
(bad)
cld
cmp
loopne
adc
(bad)
add
inc
dec
dec
aad
xchg
mov
loope
retf
jns
mov
xor
cld
mov
in
mov
in
cmp
(bad)
lock
jbe
div
adc
lock
hlt
mov
or
sub
or
sub
sbb
sbb
mov
or
aaa
jmp
dec
xor
or
fidivr
dec
inc
test
sbb
test
hlt
pop
sbb
xor
and
dec
inc
stos
(bad)
lock
jo
jl
ror
sbb
sbb
(bad)
hlt
aas
mov
hlt
mov
js
icebp
fisttp
test
fist
loopne
adc
imul
loop
or
test
sbb
jge
dec
fdiv
dec
fdivr
cmp
mov
test
ret
or
mov
hlt
mov
js
jb
mov
xor
xor
cmp
fld
and
xor
enter
dec
fdivr
cmp
fmul
lea
jg
inc
xchg
dec
fmul
lea
idiv
fmul
rcr
and
lea
jge
shl
in
aaa
iret
xchg
pop
loop
or
in
hlt
adc
std
pop
or
movs
or
jns
icebp
fbstp
aas
int3
and
(bad)
inc
xchg
pop
cmp
fld
ret
fadd
cmp
mov
(bad)
std
std
fidivr
mov
mov
add
inc
inc
jne
icebp
iret
or
jl
push
jge
aam
push
jb
pop
loop
or
in
hlt
xchg
jge
aas
data16
jbe
inc
and
add
add
cmp
fld
ret
fadd
cmp
mov
(bad)
std
std
fimul
mov
mov
in
cmp
fistp
rcl
into
mov
adc
stos
fs
out
(bad)
add
or
in
hlt
xor
dec
aas
data16
jbe
inc
and
xchg
ret
or
mov
or
mov
cmp
mov
shl
enter
dec
(bad)
cld
std
call
repz
push
jge
aam
push
jb
pop
loop
or
pushf
push
ds
fisttp
iret
dec
es
mov
mov
and
loopne
fidivr
cmp
das
ret
jge
dec
mov
imul
aas
jle
dec
out
imul
jo
push
cmp
data16
jae
fist
loopne
adc
or
pushf
or
loopne
cmp
push
stos
(bad)
hlt
cmp
retf
lods
jl
and
into
fisub
jmp
(bad)
sahf
or
jmp
fisub
imul
icebp
sub
dec
dec
stos
inc
into
mov
add
push
jb
pop
jecxz
hlt
add
push
mov
in
mov
or
adc
jae
adc
mov
mov
cdq
mul
sub
push
dec
adc
mov
icebp
fisttp
iret
pop
cli
icebp
or
aam
push
mov
(bad)
add
ds
mov
jns
jae
cmps
or
inc
test
fisub
imul
movs
ret
pop
stos
icebp
or
jns
jae
inc
add
sbb
add
pop
fcom
test
scas
(bad)
clc
in
aad
mov
or
test
mov
mov
retf
mov
rcl
clc
aaa
jecxz
pop
fadd
xchg
sub
or
leave
inc
mov
mov
mov
stos
(bad)
in
mov
jecxz
jecxz
stos
jns
dec
stos
inc
pop
pop
es
dec
jp
enter
shl
in
or
or
mov
rcr
cwde
or
pop
or
or
xor
and
mov
cmc
getsec
push
stc
mov
int3
xchg
ret
or
jmp
or
xor
mov
mov
cmc
adc
jae
cmp
mov
mov
movs
xchg
pop
popa
or
mov
add
dec
fnstsw
dec
push
(bad)
loopne
push
or
push
popa
add
dec
fdivr
jo
mov
jge
mov
or
mov
jb
mov
aaa
ror
mov
(bad)
cld
in
les
aas
arpl
pop
test
(bad)
hlt
aaa
pop
jne
mov
and
jne
and
or
inc
jns
xor
and
mov
cmc
and
sti
jbe
cmp
fmul
retf
dec
es
mov
inc
sbb
mov
movs
je
popa
or
mov
(bad)
lock
and
or
or
or
shl
(bad)
call
dec
stos
(bad)
loopne
pop
xor
clc
in
hlt
call
push
call
aas
pop
mov
mov
(bad)
sub
aam
xor
stos
inc
mov
fild
stos
mul
jmp
xor
rol
mov
or
je
mov
ins
or
ja
add
dec
fnstsw
adc
jae
xor
adc
dec
dec
sub
mov
popa
xor
icebp
das
mov
test
or
or
push
sbb
jl
sbb
test
xlat
add
jns
icebp
xlat
mov
and
jle
xchg
mov
cmp
and
fmul
jle
ja
fist
loopne
adc
(bad)
mov
push
cmp
and
call
inc
jge
aas
mov
xor
pop
jge
in
hlt
mov
or
inc
les
dec
dec
stos
inc
jecxz
stos
jno
ins
imul
movs
push
fadd
mov
mov
cmp
dec
and
dec
mov
jae
cwde
push
popa
and
aaa
out
or
iret
jb
and
fcmovbe
jle
mov
inc
jge
aaa
pop
jge
shl
popa
sub
mov
or
aaa
inc
jge
test
or
inc
les
dec
dec
stos
inc
jecxz
sub
mov
jb
mov
xchg
xor
or
pop
mov
jne
mov
jns
dec
stos
inc
dec
aas
mov
xor
jle
dec
mov
cld
hlt
mov
mov
shr
cmp
dec
or
es
jmp
fisub
jmp
fisub
jmp
pusha
mov
ror
add
or
jmp
fisub
shl
or
mov
hlt
mov
js
jbe
add
rcr
ja
and
cld
in
and
ret
or
jns
fimul
cmp
data16
icebp
ror
iret
dec
push
jns
dec
dec
or
ja
or
or
or
mov
rcr
cwde
out
stos
cmp
mov
push
stos
add
dec
fnstsw
ja
inc
movsx
or
dec
and
in
push
popa
and
cmp
fmul
in
icebp
repz
(bad)
add
xlat
mov
adc
ja
and
pop
dec
out
or
jle
ins
and
ja
xor
dec
fnstsw
xor
jle
dec
jae
loop
fdivr
jo
add
mov
dec
mov
daa
or
add
jg
cmp
fdivr
in
sbb
or
add
sub
test
test
(bad)
jle
dec
jae
push
xor
jle
dec
jae
xor
mov
xor
cmps
mov
mov
add
sbb
or
dec
(bad)
test
in
mov
dec
dec
sub
xor
mov
mov
shr
je
jg
pop
fidivr
dec
mov
mov
test
les
jle
loopne
ret
or
loopne
lea
fdivr
in
sbb
or
add
mov
and
test
or
mov
jle
mov
and
or
jge
dec
mov
add
dec
fnstsw
pop
xchg
dec
mov
out
or
inc
lea
cmps
daa
test
add
mov
lea
fdivr
hlt
jae
lea
jg
in
shr
(bad)
or
dec
in
or
mov
and
dec
fnstsw
aaa
push
in
mov
xor
or
mov
and
and
pop
adc
and
aaa
out
xor
rol
fsubr
popa
dec
mov
cmp
dec
fnstsw
pop
cs
dec
mov
jle
mov
mov
xor
or
jne
ret
or
jae
dec
mov
imul
mov
and
das
fisub
jmp
test
fidivr
dec
je
ret
inc
fdivr
jo
mov
jl
in
mov
mov
and
and
pop
adc
and
aaa
out
xor
rol
fcomp
cmp
dec
fnstsw
pop
stos
je
dec
mov
jle
mov
mov
xor
or
pop
ret
ret
or
jae
dec
mov
in
dec
fadd
int3
mov
and
das
fisub
jmp
test
fidivr
dec
je
dec
inc
fdivr
jo
mov
jl
in
mov
mov
add
dec
stos
inc
bound
and
pop
adc
and
aaa
out
xor
shr
lea
jg
mov
or
push
popa
and
shl
dec
mov
jle
mov
mov
xor
or
int3
ret
ret
or
jae
dec
mov
dec
cld
dec
fadd
int3
mov
and
dec
fisub
jmp
test
fidivr
dec
je
cmps
inc
fdivr
jo
mov
jge
dec
and
ret
or
sahf
jl
dec
(bad)
loopne
xlat
jle
aaa
out
xor
shr
lea
jg
mov
or
mov
add
mov
xchg
into
mov
xor
lea
jg
in
sub
dec
(bad)
jecxz
in
js
popa
or
mov
in
mul
or
test
or
jb
jl
dec
fadd
or
and
in
add
dec
fnstsw
aas
sbb
call
jecxz
lea
or
dec
(bad)
xor
jle
dec
jae
xor
mov
shl
pop
jge
mov
and
lods
pusha
fdivr
mov
jb
cld
and
test
mov
fdivr
mov
bsr
dec
mov
inc
lea
jg
mov
fdivr
mov
or
dec
(bad)
test
mov
or
in
mov
loop
or
inc
ror
xor
jg
cmp
fdivr
in
adc
mul
or
in
mov
or
inc
pop
xor
add
dec
fnstsw
aas
cmps
push
test
push
fdiv
or
mov
or
aaa
pop
jge
mov
and
in
add
dec
fnstsw
aas
sbb
mov
mov
xor
and
cmp
rol
dec
jae
xor
mov
sub
and
mov
ja
cld
hlt
mov
add
mov
add
pop
fdivr
in
mov
dec
dec
stos
pop
cmp
mov
fild
or
or
dec
fdivr
fdiv
dec
mov
add
dec
fnstsw
pop
adc
or
ins
test
or
fbld
or
dec
fnstsw
xor
jle
dec
jae
ins
push
popa
add
fsub
or
shl
add
dec
fnstsw
mov
add
dec
fnstsw
xor
add
dec
fnstsw
cmp
add
movs
stos
data16
and
mov
aaa
iret
xchg
adc
jb
aas
sahf
imul
mov
(bad)
and
data16
je
add
mov
or
dec
ins
or
dec
(bad)
pusha
xor
ret
or
cmps
sbb
or
or
sub
daa
mov
or
dec
fnstsw
aas
cmps
and
or
add
div
mov
dec
and
mov
and
and
sub
(bad)
(bad)
fdivr
mov
or
cmp
fmul
in
xor
dec
fnstsw
pop
xor
out
or
shl
dec
mov
cmp
and
lods
dec
fnstsw
aas
sbb
pop
shr
or
jle
dec
stos
inc
mov
fild
or
jle
cmp
shl
ret
aas
cmps
add
dec
(bad)
or
or
sub
push
mov
or
mov
cmps
loope
dec
(bad)
bound
jle
xor
or
dec
je
xor
sti
or
aaa
pop
jge
mov
and
mov
inc
jle
dec
sub
or
sahf
jmp
pop
xor
or
dec
fidivr
dec
xchg
jmp
ja
fdivr
jo
or
rep
cmp
dec
fidivr
ja
mov
mov
cmp
dec
fidivr
mov
and
inc
fdivr
mov
or
sbb
jg
cmp
shl
ret
ret
or
cmps
jl
dec
(bad)
loopne
dec
or
cmp
jle
dec
mov
mov
xor
mov
xor
dec
scas
add
dec
fidivr
aas
cmps
jns
dec
fmul
mov
jle
dec
jae
xchg
frstor
or
dec
(bad)
pusha
in
ret
ret
or
cmps
jl
dec
(bad)
loopne
dec
or
inc
pop
les
mov
cmp
dec
fnstsw
shl
lea
jg
in
mov
loop
or
inc
ror
in
fdivr
cmp
fdivr
aas
cmps
and
dec
fdivr
idiv
fmul
lea
fdivr
in
mov
loop
or
in
mov
loop
jle
pop
fdivr
aas
cmps
test
jg
mov
fadd
mov
fdivr
mov
xchg
xor
jle
dec
and
sub
push
stos
add
dec
fnstsw
ja
add
dec
fnstsw
aas
adc
mov
fnstsw
shr
lea
mul
test
mul
sub
mov
fdivr
mov
lea
dec
jae
cmp
mov
dec
jae
cmp
mov
dec
jae
cmp
mov
ja
add
dec
fnstsw
aas
adc
mov
(bad)
push
out
jmp
fsub
sbb
hlt
and
test
in
or
aaa
iret
xchg
pop
loop
or
in
in
(bad)
adc
and
and
or
movs
or
imul
jo
imul
mov
hlt
(bad)
pop
adc
dec
fdivr
dec
enter
ret
or
and
dec
push
loopne
ins
pop
in
aam
inc
jns
aas
pop
pop
or
push
jae
jge
dec
fdivr
jmp
stos
mov
or
mov
or
in
ds
rol
aam
dec
aam
xor
mov
and
and
or
and
shl
add
jge
aam
push
mov
or
popf
std
xor
mov
or
dec
es
mov
aaa
push
test
inc
and
jb
movs
adc
bound
xchg
cmc
and
dec
mov
inc
or
mov
or
cmc
and
shl
sub
sub
sub
jbe
and
or
and
xor
mov
sub
dec
pop
inc
or
fadd
je
mov
inc
aaa
ret
test
data16
mov
push
dec
mov
mov
add
hlt
aad
xor
and
hlt
mov
mov
mov
mov
push
dec
es
clc
inc
lds
dec
inc
stos
inc
loope
and
xchg
cmc
and
mov
xor
mov
test
sub
sbb
and
enter
or
or
sub
mov
or
jle
dec
aad
adc
bound
enter
or
or
dec
fdivr
mov
push
dec
mov
cmc
jne
and
or
add
mov
shr
fdivr
mov
push
dec
mov
cmc
jne
and
xor
or
cmc
and
mov
mov
push
dec
mov
cmc
jne
and
or
or
cmc
and
or
div
fadd
inc
and
jb
mov
sub
dec
pop
daa
or
sub
and
or
addr16
cs
xchg
cmc
and
loope
and
dec
mov
inc
or
and
mov
sub
hlt
and
mov
sub
cmc
and
mov
xor
mov
test
sub
or
or
inc
stos
inc
mov
and
mov
cmp
mov
add
xchg
mov
add
mov
aaa
or
mov
fisttp
lea
ret
or
pop
shl
sbb
xor
aaa
dec
mov
mov
sub
dec
pop
adc
or
pop
or
in
bound
dec
mov
mov
dec
mov
jno
inc
stos
inc
mov
arpl
test
push
mov
leave
or
cmp
mov
mov
jmp
xor
clc
popf
ror
into
mov
popa
sub
add
icebp
test
mov
(bad)
repnz
jecxz
or
or
and
or
dec
push
add
mov
hlt
add
and
mov
dec
mov
hlt
sbb
shl
dec
and
mov
mul
movs
mov
mov
or
cmp
and
mov
sbb
mov
popa
(bad)
data16
leave
fld
mov
xchg
mov
or
popf
ror
into
aaa
push
lea
lods
stos
dec
dec
aas
lea
cmp
xchg
xor
das
adc
or
mov
clc
add
out
add
lea
lods
stos
dec
dec
aas
lea
cmp
xchg
mov
mov
adc
cmp
mov
clc
jle
rcl
rcl
daa
adc
adc
jmp
pop
in
(bad)
mov
push
jle
or
lds
mov
addr16
es
mov
push
popa
and
cmp
popa
sbb
sbb
mul
jmp
pop
pop
push
fimul
mov
xchg
xchg
cmc
and
dec
mov
stos
(bad)
lock
popa
sbb
xor
and
inc
push
popa
sbb
xor
push
popa
sbb
sbb
mul
ficom
loopne
adc
(bad)
mov
adc
adc
loopne
or
fsub
les
adc
or
mov
or
mov
or
aaa
inc
ins
or
sub
inc
arpl
(bad)
mov
fild
div
mov
pop
cmp
mov
test
dec
push
fwait
out
mov
jbe
cmp
scas
test
add
jae
xor
mov
xor
and
or
and
ins
or
or
or
or
icebp
retf
shl
and
pop
dec
ss
cmc
and
rol
sbb
and
fisub
jmp
fisub
sbb
dec
adc
jle
adc
and
inc
or
mul
jmp
dec
push
and
dec
and
(bad)
imul
arpl
dec
and
inc
test
and
dec
mov
(bad)
loopne
fdiv
mov
dec
ss
cmc
and
dec
push
enter
xchg
push
jge
aam
push
mov
jge
mov
into
xor
or
stos
(bad)
call
icebp
dec
dec
dec
test
add
data16
stc
xor
inc
dec
mov
push
and
dec
test
dec
add
retf
shl
rcr
or
data16
(bad)
jle
mov
bound
sysexit
dec
jge
hlt
and
in
in
pmullw
sahf
or
jl
popa
xor
dec
ss
xchg
cmc
and
out
into
and
hlt
cmp
jbe
in
aaa
iret
lea
je
jge
test
add
es
mov
mov
fadd
pop
add
or
push
test
or
push
popf
pop
add
or
push
xchg
pop
add
or
fadd
add
xor
mov
or
stos
xchg
xor
jle
mov
xchg
test
mov
loope
lea
and
pop
add
xchg
xor
add
mov
add
(bad)
loope
jae
fld
loop
sub
sbb
sbb
fisubr
mov
mov
cmp
dec
inc
pop
cmp
test
popa
sbb
sub
pop
dec
dec
push
sbb
aaa
xchg
fimul
popa
sbb
and
dec
dec
mov
xchg
test
xor
popf
repz
imul
es
retf
test
mov
or
add
arpl
xor
icebp
cmp
pop
xor
jle
pop
adc
test
or
xor
xchg
push
or
stos
jns
pop
and
xor
daa
hlt
cmp
mov
aaa
or
pop
jmp
or
add
mov
mov
sub
or
je
or
and
ss
in
dec
imul
mov
hlt
push
cmp
mov
rol
xor
xchg
shl
aaa
retf
test
add
xchg
shl
mov
cmp
jbe
test
xor
popf
repz
retf
test
movs
scas
lds
mov
jns
pop
daa
or
stos
xchg
or
xor
mov
lock
mov
enter
imul
rcr
mov
stos
jns
pop
daa
mov
shr
jl
push
jle
mov
hlt
adc
or
xchg
or
mov
test
repz
add
dec
jl
push
jge
aam
push
mov
(bad)
div
test
add
mov
pop
and
xor
and
add
mov
cmp
and
dec
mov
and
loope
and
or
mov
rol
hlt
and
shl
retf
add
div
sub
or
push
imul
mov
or
rcr
and
icebp
fisttp
sbb
stos
xchg
push
dec
data16
mov
ror
data16
pop
enter
cmp
or
scas
lds
mov
add
cmp
repz
scas
lds
mov
aam
cmp
mov
or
fadd
cmp
repz
mov
sbb
retf
test
xchg
or
stos
and
pop
dec
stos
xchg
div
mov
or
stos
es
retf
test
pop
stos
test
out
mov
mov
mov
in
lahf
ret
or
test
fcmovb
ja
or
or
movs
or
rcr
retf
pop
icebp
dec
fadd
push
cld
jle
mov
cmp
and
mov
add
imul
or
jb
dec
fadd
dec
mov
add
mov
nop
pop
add
add
inc
cmp
adc
(bad)
xlat
dec
fadd
lea
jle
xor
test
popa
or
mov
fdivr
and
dec
pop
cmp
mov
or
pop
pop
mov
or
jle
mov
rcl
and
outs
test
mov
punpcklwd
and
fdiv
or
or
jle
mov
mov
lea
jle
mov
aaa
lea
jle
(bad)
lahf
mov
and
test
jle
mov
fdivr
push
and
xor
add
dec
mov
mov
xchg
adc
pop
fdivr
push
and
sbb
jae
dec
mov
adc
imul
div
mov
jle
mov
and
dec
fdivr
xor
pop
test
add
pop
xor
pop
or
cmp
fdiv
or
(bad)
mov
inc
mov
inc
out
mov
xor
div
mov
xor
dec
push
push
test
cmps
pop
test
xor
mov
and
pop
fdivr
pop
scas
or
mov
jle
pop
int3
jle
dec
xchg
pop
xlat
dec
fsubr
dec
fdivr
jo
or
sub
(bad)
mov
jle
aas
mov
push
test
or
jne
or
and
mov
lds
out
fdiv
add
mov
cmp
and
or
cmp
fsubr
xor
and
repz
or
dec
retf
mov
dec
(bad)
mov
iret
outs
test
add
push
jle
dec
fadd
out
fmul
test
jle
ins
cld
jle
pop
sbb
or
mov
dec
loop
or
aaa
xchg
sub
xlat
outs
test
jle
aas
mov
out
fadd
mov
pop
leave
pop
and
mov
int3
hlt
aas
das
nop
cmp
fmul
popf
inc
int3
jle
jne
add
ret
stc
fild
div
xlat
outs
test
jle
mov
cmp
popa
or
fdivr
dec
mov
sub
and
lea
sbb
or
push
jle
jbe
or
cmps
sbb
dec
fmul
lea
sbb
dec
fadd
retf
add
test
test
fdivr
and
add
stos
add
imul
xor
pop
test
jle
test
add
imul
pop
dec
xchg
pop
xlat
dec
fsubr
jecxz
add
imul
jge
test
int3
imul
xor
and
imul
mov
rcr
and
retf
fsub
or
and
imul
adc
imul
leave
pop
das
shl
and
xlat
dec
fsubr
dec
es
mov
and
outs
test
pop
xlat
dec
fsubr
idiv
arpl
out
fadd
mov
xchg
sbb
cmp
fsubr
or
xlat
or
jle
je
add
mov
or
mov
add
pop
fdivr
add
mov
jl
mov
add
loope
and
out
fmul
sbb
and
idiv
or
cmps
xlat
dec
fadd
pop
std
jle
mov
sub
imul
or
dec
fmul
clc
cld
mov
or
aaa
retf
or
rol
loopne
mov
or
aaa
retf
test
cmp
mov
iret
jecxz
fadd
add
inc
jmp
jle
xor
and
dec
fadd
loope
and
cmp
aaa
retf
jle
lock
test
mov
dec
and
inc
test
mov
test
std
jle
mov
aaa
popf
pop
std
jle
jne
add
fadd
mov
mov
or
or
and
xor
mov
xchg
mov
and
xor
mov
or
mov
dec
sub
adc
popf
pop
add
shl
add
pop
test
jle
ret
div
out
mov
rcr
and
dec
aaa
xchg
dec
fadd
test
inc
loope
loop
or
ss
movs
fadd
pop
fdivr
or
outs
test
push
div
retf
dec
fadd
lea
jle
mov
aaa
lea
jle
(bad)
lahf
mov
and
test
aam
push
mov
(bad)
sub
inc
dec
dec
fnsave
lock
inc
or
cmp
test
call
aas
data16
icebp
out
or
aam
les
fisttp
or
mov
and
jne
scas
mov
or
mov
and
gs
ds
outs
shr
icebp
fadd
retf
or
in
div
aaa
pop
dec
sbb
sbb
icebp
fadd
div
push
gs
icebp
fiadd
or
and
dec
mov
and
mov
and
pop
add
xor
leave
inc
mov
mov
or
mov
loope
jmp
add
mov
mov
xor
jle
mov
pusha
or
das
add
mov
jns
shl
dec
dec
and
dec
dec
stos
inc
and
aam
mov
jecxz
or
hlt
or
data16
mov
and
dec
mov
hlt
or
data16
xor
jl
xor
jl
mov
fadd
dec
and
and
dec
mov
data16
pop
sub
dec
dec
and
jne
and
in
xor
and
mov
(bad)
div
jl
push
jge
aam
push
jo
pop
aas
push
mov
xor
and
div
imul
inc
mov
mov
xor
fnstsw
in
aas
mov
push
sti
mov
or
test
or
jmp
ficom
jbe
in
or
mov
pop
mov
xlat
pop
or
jns
push
stos
add
imul
xor
hlt
add
fdiv
add
cmps
sub
mov
cmps
sub
mov
out
or
push
jmp
mov
cmp
es
and
or
and
mov
jo
or
jle
pop
cmp
jo
pop
or
jbe
mov
and
and
or
and
or
and
add
or
hlt
adc
pop
lea
shl
or
data16
jae
inc
jecxz
dec
sbb
stos
inc
mov
(bad)
hlt
retf
inc
pop
mov
or
mov
and
push
mov
inc
enter
fisttp
dec
inc
fdiv
cld
out
hlt
hlt
loop
dec
pop
mov
xlat
loopne
jae
or
data16
mov
jns
dec
stos
inc
push
jmp
pop
out
(bad)
mov
or
xor
in
or
mov
test
dec
and
push
mov
into
jb
or
sub
jle
mov
inc
jecxz
dec
and
sbb
test
add
loop
ror
xor
and
icebp
cmp
jbe
pop
out
hlt
add
retf
dec
pop
mov
jmp
cmp
pop
fisub
jmp
pop
pop
call
pushf
and
or
ficom
jmp
mov
cs
or
or
fisub
jmp
bound
dec
or
mov
and
into
cmp
data16
jae
jg
shl
enter
or
and
or
retf
gs
mov
jmp
cmp
pop
dec
push
xchg
test
jb
or
in
loopne
ins
or
jmp
pop
loop
or
in
hlt
pop
inc
or
dec
jge
xchg
and
jecxz
sub
or
and
(bad)
pop
lea
jle
mov
and
out
or
push
popa
and
aaa
out
cmp
xchg
pop
add
lahf
pop
fcom
popa
dec
mov
aad
mov
add
mov
pop
imul
mov
test
call
pop
fmul
popa
dec
mov
lods
pop
mov
add
mov
loope
retf
jge
jmp
pop
out
(bad)
sub
or
in
hlt
data16
ja
data16
xchg
and
or
or
mov
add
ror
mov
inc
add
sbb
pop
dec
cmps
call
out
adc
and
loope
ficom
jmp
cwde
jo
pop
bt
xor
stos
inc
outs
jae
arpl
mov
in
mov
in
mov
in
mov
cld
cli
cmp
sbb
mov
cmp
mov
jbe
cmp
mov
xchg
data16
mov
les
mov
data16
fwait
fwait
outs
push
and
cmp
sub
dec
dec
sub
dec
mov
add
stos
and
in
pop
jle
shl
gs
and
jecxz
pop
or
xor
jle
shr
dec
mov
stos
(bad)
neg
add
push
sub
(bad)
idiv
mov
imul
mov
in
div
push
push
sub
retf
aas
lea
add
or
sub
sbb
and
jmp
or
mov
or
aas
outs
imul
inc
ret
pusha
and
in
aas
lea
add
and
mov
mov
mov
icebp
(bad)
or
sub
dec
mov
xchg
rol
popf
repz
(bad)
in
pop
and
or
jmp
fcmovb
ja
adc
mov
ror
cwde
add
mov
cmp
push
and
inc
cwde
and
adc
adc
and
adc
mov
cwde
and
adc
and
adc
and
adc
ins
mov
cwde
and
pop
cwde
and
adc
and
push
jmp
repz
inc
cwde
and
adc
adc
and
adc
and
pop
cwde
and
adc
mov
cwde
and
adc
pop
stos
nop
cmc
dec
loopne
cwde
and
adc
mov
fstp
mov
mov
sub
cmp
cwde
and
or
mov
cwde
aas
jae
cwde
and
mov
and
adc
and
mov
cwde
enter
and
add
mov
sbb
shl
cwde
aad
adc
pop
xor
xor
or
lods
ror
cmp
push
mov
ret
or
or
sub
adc
mov
ror
dec
test
and
adc
and
adc
adc
hlt
and
sub
inc
cwde
and
adc
data16
cwde
and
adc
jl
adc
and
adc
and
adc
int3
cmp
push
and
mov
and
adc
dec
mov
cwde
and
jae
and
adc
and
jns
and
adc
adc
mul
adc
and
inc
cwde
and
adc
data16
cwde
and
adc
jl
adc
and
adc
and
adc
repz
mov
and
adc
dec
mov
cwde
and
jae
and
adc
mov
cwde
and
push
retf
ja
or
aaa
iret
cdq
pop
loop
or
test
add
stos
les
data16
repnz
or
mov
or
adc
jae
jno
mov
pop
or
shl
sub
jle
in
stos
inc
and
add
and
push
jb
jnp
pop
or
sti
and
test
and
repz
aam
xor
js
jbe
aam
or
(bad)
or
imul
mov
stos
pop
or
mov
dec
or
movs
sub
or
push
arpl
mov
hlt
sbb
sub
sbb
jmp
jge
into
and
or
imul
cmp
scas
(bad)
cli
mov
repz
ds
or
inc
jae
shl
ins
or
jb
add
adc
jle
inc
sub
dec
mov
mov
ficom
jmp
cwde
jo
pop
psrad
mov
fisubr
or
or
inc
leave
add
(bad)
cmp
stos
aam
aaa
push
inc
mov
and
loope
and
pop
dec
push
mov
pand
aaa
out
xor
or
sub
jne
loop
or
aaa
mov
and
and
(bad)
stos
cld
loopne
sub
jne
loop
or
mov
add
sbb
dec
lea
stos
jno
mov
cmp
mov
(bad)
loopne
retf
cmp
and
int3
lods
or
and
dec
dec
enter
dec
repnz
or
test
add
daa
and
or
or
sbb
hlt
(bad)
cli
and
or
xor
(bad)
or
or
cmp
test
aam
popa
cmp
mov
push
mov
and
or
retf
in
inc
mov
or
retf
in
mov
or
sub
idiv
loop
sbb
sahf
ret
or
and
stc
and
xor
and
mov
add
inc
jmp
cmp
mov
shl
ret
or
sahf
ret
or
retf
popa
inc
mov
add
mov
and
dec
inc
enter
(bad)
mov
mov
jno
icebp
xlat
or
test
add
daa
and
or
or
sbb
cld
(bad)
cli
and
or
xor
rol
aam
popa
cmp
mov
push
mov
and
or
stos
jbe
mov
cmp
mov
aaa
pop
pop
repnz
mul
or
cmp
and
add
fst
xchg
popf
push
sahf
ret
or
cs
mov
and
add
mov
or
lods
sub
dec
pop
jae
clc
mov
inc
mov
and
loopne
fistp
aaa
out
bound
and
arpl
mov
and
dec
push
mov
and
fdiv
call
pop
pop
enter
hlt
in
pop
cmp
or
cmp
or
mov
xor
jge
shl
in
xor
and
pop
jecxz
pop
cmp
int
cmp
dec
fdivr
jb
test
and
mov
jno
inc
stos
inc
loopne
push
int3
push
jb
leave
inc
leave
inc
repnz
js
popf
jmp
inc
mov
or
cmp
jle
dec
fadd
dec
and
pop
mov
or
push
inc
(bad)
xor
xor
inc
icebp
stos
or
fs
retf
loopne
and
jle
dec
fadd
dec
dec
and
dec
dec
pop
mov
in
cmovnp
jle
pop
jbe
or
hlt
push
jb
test
dec
fdiv
test
or
dec
(bad)
pusha
and
ret
or
(bad)
pop
dec
mov
add
dec
fdivr
pop
push
retf
dec
and
dec
and
cmps
jp
dec
(bad)
loopne
or
dec
fdivr
mov
and
loopne
push
or
inc
fidivr
in
adc
and
lock
test
retf
mov
mov
or
mov
or
dec
xchg
jne
dec
fsubr
repnz
dec
mov
jmp
test
fdivr
dec
jae
mov
and
test
add
mov
add
out
or
mov
xor
stos
inc
div
dec
inc
xlat
mul
jmp
test
fdivr
dec
jae
or
or
mul
jmp
pusha
mov
or
xor
and
push
out
jmp
mov
push
xchg
mov
pop
sbb
in
or
cmp
data16
jae
in
mov
(bad)
lock
(bad)
hlt
in
and
and
or
and
mov
add
or
ror
stos
(bad)
lock
push
jns
fisub
jmp
dec
push
xchg
test
and
or
leave
or
aam
push
je
xchg
lahf
inc
ror
mov
hlt
sbb
cs
or
xchg
test
fdiv
add
or
inc
pop
cmp
les
call
(bad)
hlt
cmp
daa
or
mov
fdiv
add
push
mov
mov
or
jge
aam
push
jb
pop
or
jns
dec
stos
inc
test
fcmovnbe
test
(bad)
bound
jmp
fisub
jmp
dec
push
(bad)
test
and
cmp
test
fdiv
adc
and
movs
fdiv
hlt
pop
dec
leave
or
hlt
hlt
pop
push
leave
or
jns
dec
stos
inc
test
and
shl
in
aaa
iret
xchg
pop
jecxz
hlt
sbb
cwd
outs
cmp
push
fimul
and
mov
jns
dec
stos
inc
test
(bad)
pusha
lods
and
jge
fdiv
add
or
inc
jecxz
scas
les
in
jmp
fisub
jle
movs
fdiv
hlt
pop
mov
mov
inc
jl
fdiv
hlt
pop
loop
or
hlt
hlt
pop
xchg
(bad)
or
lea
inc
les
dec
inc
stos
inc
push
jmp
pop
loop
ds
rol
mov
loop
mov
mov
or
add
lock
or
mov
cmp
popa
xor
test
shl
dec
and
and
or
and
imul
or
mov
jbe
shl
add
cmp
test
and
dec
dec
enter
les
shl
jg
xor
rcr
movs
or
ss
mul
or
loopne
adc
hlt
add
jle
iret
icebp
(bad)
dec
cmp
or
stos
inc
and
aam
cmp
pop
mov
lock
sti
rol
dec
push
xchg
loopne
or
dec
or
loope
inc
or
and
lock
jecxz
jecxz
mov
or
mov
inc
add
mov
jge
stos
jns
xor
xchg
shl
dec
movs
in
or
and
ds
retf
and
iret
xor
and
add
loopne
popa
or
jbe
inc
and
fld
test
ficom
jmp
mov
jle
iret
icebp
shl
aas
and
mov
mov
imul
fisttp
iret
les
iret
mov
mov
(bad)
cld
test
push
mov
shl
add
pop
add
mov
inc
push
or
gs
mov
shl
iret
icebp
fld
mov
mov
or
or
mov
add
aad
or
or
cdq
into
in
ins
jbe
jne
add
in
pop
aas
pop
jne
fdivr
dec
mov
imul
aaa
out
icebp
fisttp
dec
dec
push
cs
ficom
jmp
mov
and
out
(bad)
mov
pusha
jge
jne
test
dec
and
lods
pop
fdivr
scas
add
dec
fnstsw
dec
push
(bad)
loopne
sar
aaa
out
xor
inc
add
xchg
je
test
mov
fdivr
mov
mov
mov
or
or
cli
pusha
or
dec
fdivr
adc
jle
dec
stos
add
dec
fidivr
or
jle
dec
dec
cmp
dec
fidivr
aas
mov
test
test
mov
jmp
pop
jbe
or
jle
jb
hlt
or
or
retf
cmp
and
clc
popf
ror
into
aas
mov
dec
stos
inc
mov
mov
stos
inc
bound
jle
dec
jno
addr16
jle
jo
jmp
test
and
inc
imul
add
jle
dec
retf
(bad)
and
int3
mov
and
add
add
mov
xchg
pusha
inc
ret
ret
or
jge
dec
fsubr
icebp
and
clc
test
or
pop
les
mov
mov
mov
sbb
dec
mov
imul
xlat
and
pop
aas
sahf
jge
dec
(bad)
pusha
mov
ret
or
retf
jns
mov
add
movs
retf
pop
dec
mov
cmp
mov
adc
inc
ret
ret
or
jge
dec
fsubr
lock
aas
imul
add
jle
dec
retf
gs
mov
add
mov
and
add
add
mov
xchg
pusha
inc
ret
ret
or
jge
dec
fsubr
lock
jae
and
or
es
sub
or
sbb
dec
jno
mov
fdivr
jecxz
mov
loopne
or
rol
sbb
add
imul
pop
push
or
inc
push
mov
imul
mov
aam
mov
cld
sbb
shl
mov
xor
dec
fnstsw
mul
or
out
pusha
mov
xchg
jge
dec
fsubr
lock
jecxz
and
or
es
sbb
shl
mov
xor
dec
fnstsw
mov
out
pusha
mov
ret
or
jge
dec
fsubr
mul
or
mov
aam
mov
cld
sub
or
sbb
dec
jno
mov
fdivr
jecxz
mov
loopne
pusha
or
ror
inc
lds
lea
jl
cmp
and
or
ficomp
mov
cmp
dec
fidivr
pop
dec
ret
scas
add
dec
fidivr
dec
push
xchg
xor
jle
dec
jae
fsubr
sbb
mov
ret
call
dec
mov
imul
xlat
and
pop
aas
sahf
jge
dec
(bad)
pusha
mov
ret
or
retf
popf
dec
mov
add
movs
stos
jno
push
stos
add
dec
fidivr
jb
jno
mov
cmp
mov
adc
inc
ret
ret
or
jge
dec
fsubr
mul
or
mov
aam
mov
cld
sbb
call
xor
dec
fnstsw
pop
popa
or
adc
or
mov
test
dec
jno
mul
jle
dec
fdivr
pop
out
or
mov
cmp
popa
xor
dec
fdivr
in
sbb
mul
shl
retf
or
out
loopne
popa
or
mov
jbe
aaa
fld
mul
jle
dec
fdivr
pop
pop
ret
or
ret
or
sbb
dec
mov
jmp
test
retf
(bad)
and
int3
mov
and
add
add
mov
mov
or
mov
cmp
dec
fnstsw
fcomp
imul
jo
add
and
or
xchg
dec
fadd
or
or
pop
je
or
jle
pop
pop
or
mov
inc
test
jg
(bad)
pop
or
mov
inc
test
or
or
mov
loopne
cmp
and
inc
inc
rol
stos
adc
dec
fidivr
arpl
cmp
mov
jle
fdivr
dec
mov
cmp
mov
jle
pop
dec
ror
mov
aam
mov
xor
stos
inc
div
jecxz
cmc
dec
mov
jle
mov
add
dec
fdiv
dec
fnstsw
sar
lea
add
dec
fnstsw
fadd
dec
mov
imul
jo
imul
mov
aam
mov
cld
sbb
jle
dec
mov
xor
dec
fnstsw
stos
bound
loopne
arpl
or
test
dec
dec
(bad)
mul
jle
dec
fdivr
pop
fcmovb
or
mov
cmp
and
or
es
sbb
shl
mov
xor
dec
fnstsw
jp
or
xor
jle
dec
mov
add
dec
fnstsw
xor
jle
dec
sbb
dec
fidivr
ss
add
dec
fidivr
inc
aam
xor
stos
inc
loope
and
xor
retf
mov
add
mov
add
add
adc
and
mov
add
dec
fnstsw
aaa
or
test
lock
fnstsw
xor
jle
dec
fdiv
sbb
jp
dec
mov
add
dec
fidivr
pop
cmp
or
jne
dec
fadd
ror
xor
and
icebp
cmp
in
cmc
dec
stos
jno
inc
stos
inc
test
and
mov
dec
scas
add
mul
retf
movs
xor
jl
in
xor
dec
fadd
int3
mov
add
dec
fidivr
add
jle
dec
fdiv
adc
jno
dec
fmul
lea
jg
in
in
mul
shl
adc
or
out
loopne
sbb
or
mov
test
dec
(bad)
mul
jle
dec
fdivr
pop
xchg
add
in
push
mov
xor
dec
es
sbb
call
xor
dec
fnstsw
into
sbb
or
out
loopne
sbb
or
mov
test
dec
jno
mul
jle
dec
fdivr
pop
jbe
or
jno
dec
fsubr
(bad)
and
or
jle
xor
xor
dec
fdivr
out
test
int3
mov
fnstsw
je
add
dec
fdivr
mov
ret
or
jge
dec
fsubr
mov
or
mov
aam
mov
cld
sbb
jle
dec
mov
xor
dec
fnstsw
push
sbb
mov
sub
or
aaa
fld
mul
jle
dec
fdivr
pop
sahf
mov
add
cmps
inc
test
mov
or
jnp
leave
xor
clc
push
popa
xor
dec
retf
or
int3
mov
and
dec
fdivr
pop
pop
mov
add
or
sbb
dec
mov
imul
xlat
and
pop
aas
sahf
jge
dec
(bad)
pusha
mov
ret
or
retf
mov
int3
movs
retf
xor
mov
adc
jmp
xchg
jge
dec
fsubr
mov
or
pop
idiv
mov
sbb
dec
mov
jmp
test
retf
jne
mov
add
mov
and
add
add
mov
xchg
pusha
inc
ret
ret
or
jge
dec
fsubr
mov
or
mov
aam
mov
cld
sub
or
sbb
dec
jno
mov
fdivr
jecxz
mov
loopne
push
or
popf
std
ret
or
jge
dec
fsubr
mov
or
pop
push
mov
or
jnp
leave
xor
clc
push
popa
xor
dec
retf
fnsave
mov
and
dec
fdivr
pop
push
or
mov
or
jnp
leave
xor
clc
push
popa
xor
dec
retf
movs
xor
mov
and
dec
fdivr
pop
xor
xor
and
mov
xor
dec
es
sbb
shl
mov
xor
dec
fnstsw
push
pop
or
xor
jle
dec
jae
lea
jg
in
adc
and
loopne
pop
or
xor
or
mov
jbe
aaa
fld
mul
jle
dec
fdivr
pop
xchg
add
and
mov
xor
dec
fnstsw
es
or
cli
pop
or
mov
jbe
aaa
fld
mul
jle
dec
fdivr
pop
dec
mov
add
cli
or
jle
dec
stos
inc
loopne
pop
or
mov
jbe
cmp
add
or
test
hlt
dec
fnstsw
fmul
pop
dec
mov
imul
jo
imul
mov
aam
mov
cld
sbb
shl
mov
xor
dec
fnstsw
mov
out
pusha
push
ret
or
jge
dec
fsubr
(bad)
and
mov
mov
aam
mov
cld
sbb
shl
mov
xor
dec
fnstsw
bound
or
inc
push
les
mov
or
add
add
mov
mov
or
mov
cmp
dec
fnstsw
fcomp
imul
xor
fsubr
xor
dec
retf
or
mov
add
mov
dec
and
and
push
mov
mov
or
dec
fadd
into
sub
xchg
jge
dec
fsubr
mov
and
fnstsw
in
xor
dec
fnstsw
add
jle
dec
retf
loope
mov
jle
pop
fdivr
fidiv
hlt
dec
fnstsw
push
adc
or
in
loopne
adc
or
cmps
ins
test
inc
pop
cmp
and
or
les
lea
idiv
and
mov
dec
or
mul
or
dec
fnstsw
in
xor
lock
or
fisub
jmp
test
fdivr
dec
jae
or
jle
aaa
out
mov
fadd
or
fcomp
pop
dec
mov
retf
aad
and
or
jle
fdiv
pop
dec
mov
pop
aam
and
jecxz
popa
and
stos
jno
dec
mov
fld
and
shl
in
xor
and
pop
jecxz
sub
push
or
test
or
aaa
xchg
xor
add
mov
adc
xor
test
add
daa
test
mov
add
dec
stos
inc
cmp
les
cmp
jne
inc
and
and
or
mov
ret
and
jne
aas
and
xor
fdiv
dec
fdivr
xchg
adc
or
jbe
cmp
jl
dec
scas
aad
mov
aad
mov
or
cmp
in
loopne
adc
or
fdivr
adc
jle
pop
shl
jl
fdivr
add
popa
ds
or
test
jo
fdivr
loopne
test
dec
scas
aad
mov
aad
mov
or
xor
and
or
and
cmp
fadd
call
or
cmp
shl
mov
or
mov
imul
mov
or
dec
(bad)
pusha
sbb
ret
or
xchg
pop
dec
mov
or
mov
jle
jo
mov
shr
loopne
push
or
mov
and
fsub
or
scas
add
dec
fdivr
cmp
shl
(bad)
pop
or
dec
fdivr
and
jle
dec
xchg
or
mov
dec
xchg
sbb
dec
fdivr
adc
jle
loop
add
dec
fdivr
pop
ins
jae
dec
mov
sbb
enter
loopne
push
or
mov
and
cmps
jge
dec
(bad)
loopne
sbb
lock
fidivr
in
add
dec
fdivr
pop
mov
or
or
fisub
or
cmps
cmp
dec
(bad)
loopne
sbb
or
mov
fdivr
mov
or
dec
and
lea
div
jle
mov
popf
outs
jae
imul
xor
and
in
xchg
clc
dec
(bad)
test
xchg
jae
lea
and
dec
and
fdivr
fisub
imul
je
add
test
retf
cmp
mov
or
popf
fisttp
iret
dec
xchg
adc
sbb
and
cmps
jge
dec
(bad)
loopne
adc
or
out
into
xor
test
mov
and
in
hlt
aam
and
and
inc
jge
dec
imul
and
mov
push
jl
dec
and
(bad)
(bad)
fidivr
mov
repz
stc
or
add
mov
mov
rol
or
or
dec
fnstsw
in
imul
mul
or
dec
fnstsw
in
lds
mov
and
sub
dec
fadd
xchg
dec
fdivr
xor
and
aaa
xchg
mov
mov
mov
add
dec
fdivr
pop
jle
or
jbe
cmp
fmul
iret
loop
icebp
cmp
and
retf
xchg
xor
dec
retf
and
lea
fidivr
pop
sub
push
mov
stos
add
dec
fdivr
jae
fist
loope
or
stos
mov
rcr
test
sbb
movs
(bad)
jns
dec
stos
inc
test
and
pop
dec
stos
jns
dec
stos
inc
test
and
pop
dec
fdiv
sbb
or
ja
pop
xor
cmp
data16
add
or
pop
inc
and
add
test
xor
mov
and
pop
cli
and
adc
sub
enter
xor
rol
push
push
or
shr
clc
aaa
jecxz
pop
pop
sbb
add
xchg
(bad)
idiv
xchg
hlt
jae
das
test
add
mov
xchg
mov
addr16
or
retf
mov
mov
rol
add
test
and
jge
fs
pop
inc
scas
lds
mov
imul
icebp
fcmovnbe
bound
and
adc
out
pop
or
push
adc
pop
loop
mov
mov
xlat
loopne
adc
push
jmp
mov
cmp
or
or
mov
cmp
in
cmp
mov
fdivr
jae
add
push
fdivr
stos
and
test
jle
in
out
mul
imul
jb
inc
pop
xor
jbe
mov
xchg
inc
call
and
mov
mov
sar
jl
jle
dec
push
(bad)
loopne
adc
out
cmp
fmul
iret
test
shl
in
mov
fdivr
stos
and
test
jle
in
imul
push
mov
dec
or
jae
jle
jo
jle
pop
push
mov
mov
inc
add
xchg
dec
call
mov
and
mov
enter
sub
je
fist
loopne
adc
imul
mov
jp
into
xchg
adc
cmp
in
pusha
mov
or
mov
pop
mov
mov
stos
inc
bound
imul
jo
jmp
pop
pop
data16
mov
inc
add
and
clc
popf
ror
into
fsubr
dec
mov
add
push
fdivr
pop
and
add
or
sbb
dec
mov
jmp
test
and
dec
jae
test
and
or
es
and
or
sbb
dec
jno
mov
ret
jle
jecxz
(bad)
mul
or
mov
jle
jecxz
and
mov
add
movs
retf
add
mov
cmp
mov
adc
inc
ret
ret
or
cmps
sub
sub
or
inc
or
jb
mov
mul
or
mov
jle
in
add
int3
mov
and
add
add
mov
xchg
pusha
inc
ret
ret
or
cmps
sub
jmp
loopne
adc
or
test
retf
mov
mov
cmp
and
test
and
dec
je
push
push
and
dec
je
test
dec
xchg
xlat
mul
or
mov
jle
in
mov
lea
pop
cmp
jno
push
stos
add
imul
xor
cmp
mov
adc
inc
ret
ret
or
cmps
sub
jp
or
mov
cmps
sub
push
adc
loopne
adc
or
test
dec
jno
mul
or
mov
jle
in
adc
int3
mov
and
in
add
mov
add
mov
stos
add
imul
xor
cmp
mov
adc
stos
adc
or
cmp
push
fdivr
fdivr
dec
mov
cmp
push
fdivr
pop
ss
mov
inc
sbb
or
mov
add
push
fdivr
pop
push
mov
mov
inc
add
or
sbb
dec
mov
jmp
test
and
dec
jae
test
popa
add
test
or
pop
xor
mov
sbb
dec
mov
jmp
test
and
dec
jae
mov
and
adc
add
test
or
mov
aam
mov
cld
sbb
shl
mov
add
push
fdivr
pop
cmps
mov
mov
inc
add
and
mov
fdivr
fmul
add
push
fdivr
pop
push
mov
mov
inc
sbb
or
sbb
dec
mov
jmp
test
and
dec
jae
xor
sub
or
add
test
or
mov
aam
mov
cld
sbb
shl
mov
add
push
fdivr
pop
and
add
out
or
pop
test
or
mov
jbe
cmp
add
or
scas
cmp
push
fdivr
fdiv
cmp
push
fdivr
pop
mov
inc
sbb
or
sbb
dec
mov
jmp
test
and
dec
jae
xchg
test
or
xor
popa
test
or
pop
push
mov
mov
mov
mov
sbb
dec
mov
jmp
test
and
dec
jae
push
test
or
mov
aam
mov
cld
and
or
sbb
dec
jno
mov
ret
jle
jecxz
(bad)
mul
or
mov
jle
jecxz
jge
mov
add
movs
dec
push
aad
and
in
lea
mov
add
mov
dec
and
and
retf
or
and
lea
jle
xor
and
in
lea
cmp
(bad)
pop
cmp
(bad)
test
retf
gs
and
dec
cld
jle
pop
pop
stos
or
or
popf
ror
into
jmp
fcmovb
ja
or
xor
and
pop
jecxz
outs
ins
dec
dec
or
inc
les
lea
fdivr
cmp
fidivr
mov
ja
jae
cmc
or
and
and
pop
mov
stos
adc
dec
fdivr
dec
aam
xor
stos
inc
loopne
or
daa
mov
imul
jae
mov
mov
sbb
lahf
and
test
add
dec
fdivr
pop
loop
or
or
add
jle
in
cs
and
mov
mov
or
mov
and
or
jle
cmp
shl
mov
or
cmp
fidivr
out
add
dec
fdivr
pop
or
dec
mov
mov
sbb
scas
add
dec
fdivr
pop
mov
mov
cmp
shl
and
test
jle
dec
and
jae
lds
scas
add
dec
fdivr
pop
ss
or
xchg
or
jle
lock
test
or
jle
mov
popf
outs
jae
imul
xor
and
in
call
xchg
jae
lea
and
dec
and
fdivr
fisub
imul
je
add
test
retf
inc
and
or
dec
xchg
and
dec
fsubr
sbb
and
cmps
jge
dec
(bad)
loopne
push
or
xor
dec
and
xor
and
in
hlt
aam
and
lahf
and
jge
dec
imul
sahf
and
test
jle
mov
repz
or
mov
shl
mov
or
popf
fisttp
iret
fsub
or
scas
add
dec
fdivr
loop
dec
and
pop
dec
mov
add
dec
fdivr
pop
jbe
test
jle
mov
add
test
scas
jp
dec
jae
loopne
aam
div
out
add
cmps
mov
and
fdivr
xor
imul
pop
jmp
fdivr
dec
xchg
adc
inc
arpl
jle
jb
xor
dec
fdivr
dec
or
mov
popf
and
ret
or
retf
jns
mov
add
mov
dec
mov
mul
imul
sub
push
out
inc
or
jle
and
jle
pop
adc
inc
add
cmp
lea
fidivr
aaa
retf
mov
loop
xor
dec
fdivr
scas
sti
jle
aaa
out
mov
jmp
and
test
add
dec
fdivr
pop
jmp
dec
stos
inc
bound
jle
mov
or
dec
fsubr
pushf
and
test
jecxz
mov
fist
loope
or
stos
mov
rcr
test
add
aam
sub
mov
sbb
stos
(bad)
lock
push
(bad)
loopne
or
test
and
jae
and
loopne
add
or
iret
or
or
out
mov
jge
scas
aad
mov
imul
pop
jp
or
sbb
dec
and
and
into
(bad)
xlat
loopne
or
out
cmp
scas
(bad)
hlt
in
imul
dec
cmps
or
fcmovb
ja
or
or
xchg
or
xlat
pop
or
jle
mov
and
fisubr
or
jge
adc
test
lea
jne
out
pushf
and
add
cmps
cmp
(bad)
loopne
xchg
jle
aaa
out
xor
shl
clc
pop
xor
jmp
and
loopne
or
cmps
jmp
dec
retf
loope
mov
(bad)
mov
fs
push
xor
and
iret
icebp
fld
mov
mov
ret
or
data16
pop
repnz
or
add
mov
jle
xor
ret
or
or
inc
or
dec
jle
mul
or
inc
jae
xchg
sahf
and
dec
inc
jae
or
pusha
or
fdiv
dec
or
idiv
fisttp
loope
mov
xlat
pop
or
adc
fwait
push
out
cmp
dec
and
dec
test
dec
and
and
or
and
test
mov
inc
mov
sub
dec
dec
stos
inc
bound
push
add
xchg
jmp
dec
push
imul
mov
jmp
dec
push
add
pushf
and
cmp
lods
xchg
cmc
and
pushf
and
cmp
popf
popf
hlt
and
pushf
and
or
jle
pushf
mov
test
pop
ficom
jle
xchg
mov
test
pop
ficom
jle
and
ret
or
or
jle
rol
or
inc
bound
push
mov
cmc
and
xchg
and
cmp
jno
cmc
and
xchg
and
cmp
adc
fist
je
cmp
sbb
xchg
and
or
or
stos
inc
push
jmp
xchg
retf
pop
mov
fdiv
repnz
or
add
mov
xchg
(bad)
hlt
and
hlt
dec
push
imul
dec
fdiv
xchg
add
or
pop
push
dec
mov
xchg
(bad)
hlt
and
hlt
dec
push
add
xchg
and
or
push
dec
mov
jns
mov
and
bound
or
fistp
cwde
mov
cmps
or
adc
mov
push
cs
and
and
and
fistp
test
ror
jmp
or
xor
mov
and
popa
and
fistp
pushf
mov
cmps
or
push
dec
mov
or
and
arpl
or
fistp
xchg
mov
cmps
or
inc
bound
mov
adc
add
push
dec
mov
xchg
(bad)
hlt
and
hlt
dec
push
add
pop
xchg
and
in
aaa
iret
xchg
pop
jecxz
jne
and
add
imul
pop
dec
mov
hlt
add
test
ret
or
retf
add
dec
fadd
int3
movs
or
in
stc
cs
add
lock
or
loop
in
sub
dec
push
mov
cmc
and
or
test
hlt
lahf
data16
aas
data16
icebp
rcl
bound
add
call
mov
pusha
shl
and
or
add
and
dec
xor
mov
sbb
or
clc
aaa
retf
in
fidiv
jmp
fsub
or
outs
popa
and
and
or
bound
xor
push
dec
mov
xor
mov
adc
mov
or
or
clc
aaa
retf
in
fidiv
sbb
sub
xlat
mul
jmp
bound
and
popa
and
dec
and
dec
and
and
or
and
add
aaa
imul
jb
sbb
jle
mov
ror
inc
movs
or
push
dec
mov
xor
mov
xchg
pusha
and
or
inc
jmp
fsub
or
mul
jmp
bound
and
or
adc
xor
mov
xchg
pusha
xchg
and
and
and
shl
and
shr
and
and
test
popa
and
bound
dec
adc
and
and
test
and
or
and
and
nop
and
or
and
cmp
lock
fidiv
jmp
pusha
or
or
mov
shl
stc
ret
or
stc
pop
dec
mov
and
pop
aaa
push
dec
mov
xor
mov
xor
mov
in
ror
or
or
outs
popa
and
and
loopne
bound
or
jmp
fsub
or
and
and
dec
mov
xor
mov
popf
sub
and
or
mov
cmc
and
or
loope
mul
jmp
bound
and
jb
and
xlat
mul
jmp
bound
and
jae
(bad)
or
push
dec
mov
xor
mov
lods
or
or
mov
jmp
pusha
push
cmps
pop
dec
mov
and
pop
nop
retf
stos
repnz
fsubr
or
mov
cmc
and
or
lds
ficomp
jmp
pusha
fsub
or
in
jmp
popa
and
and
cwde
pop
popa
add
fisub
jle
cmp
lock
fidiv
jmp
pusha
dec
and
or
jmp
pusha
outs
clc
ret
or
and
xchg
and
or
and
cmp
lock
fidiv
jmp
fdivr
or
dec
inc
or
shl
stc
ret
or
stc
pop
dec
mov
and
pop
adc
dec
mov
xor
mov
xor
mov
xchg
pusha
dec
and
or
sbb
dec
pop
shl
and
or
or
jmp
dec
push
mov
cmc
and
or
lds
fidiv
inc
mov
and
and
shl
and
shr
and
and
pushf
pop
popa
and
bound
push
lods
dec
lods
or
and
jae
aam
popa
and
and
sub
and
bound
push
lods
dec
add
mov
jmp
bound
jae
cwde
push
popa
and
and
sub
add
adc
xor
mov
cdq
bound
jmp
fsub
or
outs
popa
and
(bad)
mov
xchg
cmc
and
or
mov
cmc
and
or
loope
mul
jmp
fiadd
std
mov
and
jae
aam
popa
and
and
sub
and
bound
dec
adc
and
and
mov
stos
dec
or
ins
popa
and
and
xchg
and
or
test
inc
loopne
fidivr
jmp
dec
retf
loope
mov
xlat
pop
or
out
test
jns
dec
stos
inc
pusha
inc
clc
ret
or
mov
popf
aam
idiv
popa
sbb
mov
push
dec
mov
jns
dec
stos
inc
bound
and
cmp
pop
loop
sub
dec
push
mov
cmc
and
or
test
hlt
lahf
data16
aas
data16
icebp
rcl
bound
add
call
mov
pusha
shl
and
or
add
dec
mov
xor
mov
sbb
or
clc
aaa
retf
in
fidiv
jmp
fsub
or
outs
popa
and
and
or
bound
or
push
dec
mov
xor
mov
lods
or
(bad)
clc
aaa
retf
in
fidiv
sbb
sub
xlat
mul
jmp
bound
and
popa
and
dec
and
dec
and
and
or
and
add
aaa
imul
ficom
jle
mov
ror
ficomp
test
inc
and
dec
in
ror
bound
jae
aam
popa
and
and
stos
and
or
and
jb
popa
and
and
loopne
cmp
or
push
pop
dec
mov
and
push
imul
mov
hlt
push
fisub
jmp
fsubr
or
and
pop
aaa
jmp
fisub
jmp
test
and
or
mov
cmc
and
or
loope
mul
jmp
bound
dec
or
jae
aam
popa
and
and
stos
and
or
in
or
mov
cmc
and
or
loope
mul
jmp
bound
and
mov
dec
pop
xlat
mul
jmp
bound
and
bound
neg
and
cmp
lock
fidiv
jmp
(bad)
fimul
or
shl
stc
ret
or
stc
pop
dec
mov
and
pop
push
and
dec
xor
mov
xor
mov
xchg
(bad)
dec
push
or
and
popa
pop
dec
mov
pop
shl
and
or
or
cmp
xchg
cmp
cmp
push
mov
cmc
and
or
lds
(bad)
or
mov
jmp
fsub
or
mul
jmp
bound
and
sub
bound
and
bound
pusha
or
add
mov
jmp
pusha
outs
clc
ret
or
and
stos
and
or
and
cmp
lock
fidiv
jmp
pusha
push
and
or
ret
or
stc
pop
dec
mov
and
pop
pop
and
dec
xor
mov
xor
mov
xchg
pusha
dec
and
or
sbb
dec
pop
shl
and
or
or
jmp
dec
push
mov
cmc
and
or
loope
mul
jmp
fsub
lods
bound
jae
cwde
push
popa
and
and
adc
and
mov
clc
or
push
dec
mov
xor
mov
cdq
bound
or
imul
mov
ret
or
and
adc
sub
bound
and
popa
and
dec
xchg
pusha
mov
add
call
mov
adc
and
or
or
mov
xor
mov
xor
mov
xchg
pusha
das
and
or
add
rcr
dec
jnp
mul
jmp
pop
out
popf
or
imul
inc
les
dec
pop
stos
inc
loopne
xlat
jle
jmp
dec
retf
loope
mov
rcr
pushf
mov
lock
les
dec
pop
stos
inc
bound
jmp
fisub
jmp
fsub
or
pop
mov
inc
mov
mov
and
loopne
cmp
loopne
cmp
or
jne
mov
add
cmp
pop
cmp
pop
cmp
pop
dec
push
xchg
pusha
mov
or
dec
fadd
int3
lods
sbb
hlt
(bad)
fs
dec
push
jge
out
ret
or
ja
dec
mov
hlt
add
push
mov
push
out
xor
add
or
daa
or
dec
jae
jge
dec
mov
or
jle
aaa
out
or
push
jge
aam
push
mov
sbb
inc
or
mov
or
xor
and
stos
add
add
lods
and
or
mov
or
mov
nop
pusha
or
xor
cmp
or
in
jne
and
sbb
sti
xor
scas
add
dec
fdivr
pop
cmp
div
xchg
ret
or
cmps
xor
mov
or
shl
sbb
popa
add
mov
and
jb
cld
div
xchg
ret
or
cmps
xor
jp
or
shl
inc
add
and
dec
jae
mov
leave
fadd
mov
mov
jle
in
and
mov
add
sub
sbb
mov
add
dec
fdivr
pop
stos
xchg
or
inc
mov
fmul
mov
mov
jle
in
in
pop
mov
add
sub
sbb
cld
xor
scas
add
dec
fdivr
pop
jbe
or
nop
pusha
mov
ret
or
cmps
xor
mov
or
jle
shl
sub
popa
add
mov
fmul
mul
or
mov
jle
in
xchg
pop
mov
or
inc
lds
lea
jle
cmp
sub
xor
scas
add
dec
fdivr
pop
into
xchg
or
ret
shl
and
inc
ins
popa
add
sub
loopne
(bad)
jle
fcomp
pop
dec
mov
aas
mov
sub
loopne
fidivr
fsub
cmps
add
add
pushf
stos
jno
push
stos
add
dec
fdivr
jb
cmps
test
push
jge
test
loope
fs
loop
or
pushf
data16
jno
lock
fisttp
iret
cmp
cmp
or
jo
add
jle
jo
mov
shr
or
retf
aad
mov
ficom
jle
or
jbe
in
xor
and
pop
jecxz
xchg
cmc
sbb
or
mov
jmp
test
into
jbe
dec
jae
and
cmp
or
jb
dec
fadd
mov
fstp
mov
nop
pusha
sbb
ins
dec
shl
dec
or
dec
fadd
mov
pop
aam
mul
retf
gs
inc
fstp
mov
nop
pusha
push
xchg
ret
or
cmps
ins
dec
shl
jle
or
mov
xor
stos
inc
mov
sar
dec
daa
hlt
sbb
and
dec
mov
add
inc
fdivr
pop
adc
fdivr
shl
adc
popa
add
mov
sar
dec
and
xor
scas
add
inc
fdivr
pop
dec
xchg
or
jle
shl
inc
pop
popa
add
mov
and
jb
cmp
dec
fdivr
shl
fs
popa
add
mov
sar
dec
sub
sbb
test
dec
mov
add
inc
fdivr
pop
cmp
dec
fdivr
shl
mov
xor
jbe
dec
jae
mul
sar
dec
sub
sbb
jmp
inc
fdivr
pop
(bad)
xchg
or
add
inc
fdivr
jb
cmp
dec
fdivr
shl
loopne
popa
add
mov
sar
dec
cs
sbb
and
in
fdivr
pop
xchg
sti
dec
fdivr
shl
sub
popa
add
mov
add
cmp
shl
mov
shl
cmp
fmul
into
fcom
dec
mov
push
mov
pop
fdivr
jo
or
xor
jb
dec
fdiv
loopne
fdivr
mov
and
out
sub
out
cmp
fmul
into
popf
ror
into
test
jmp
fcom
dec
mov
ror
fadd
int3
mov
fdivr
je
add
mov
and
xor
jge
dec
fadd
or
jle
mov
and
mov
fistp
mov
es
or
dec
and
inc
and
call
add
inc
fdivr
jb
add
dec
fdivr
fcom
pop
dec
mov
add
dec
fdivr
pop
mov
inc
add
sahf
jns
dec
fadd
adc
jecxz
cmp
fld
ret
fadd
dec
fstp
mov
and
xor
mov
mov
and
ret
or
or
mov
add
dec
fdivr
pop
ss
or
inc
pusha
and
ret
or
cmp
dec
mov
add
dec
fdivr
pop
ficom
adc
jmp
test
fistp
dec
jae
sub
jg
or
or
cmp
fstp
in
xchg
shl
and
in
cmp
or
add
mov
aaa
or
dec
fnstsw
in
xchg
sbb
dec
fistp
aaa
jecxz
pop
cmp
shl
sti
ret
or
cmps
jge
dec
(bad)
loopne
xor
or
out
bound
jle
pop
xchg
pusha
inc
sti
ret
or
cmps
jge
dec
(bad)
loopne
mov
lea
je
add
mov
add
in
pop
push
mov
fadd
dec
stos
jno
push
stos
add
inc
fdivr
jb
cmp
dec
fdivr
mov
and
dec
fstp
fdiv
fs
and
in
sbb
movs
dec
push
mov
dec
fnstsw
in
mov
mov
or
dec
fnstsw
in
mov
mov
or
pop
add
jle
xor
test
dec
fdivr
shl
lea
jle
jb
test
dec
fdivr
pop
sub
test
jle
aaa
sahf
push
dec
cmp
jno
push
stos
add
inc
fdivr
jb
xor
dec
fdivr
xor
jg
dec
jae
fisubr
test
fistp
dec
jae
ja
and
lea
jle
in
inc
sbb
jle
cmp
(bad)
loopne
xor
dec
or
mov
(bad)
(bad)
hlt
retf
popa
sbb
jle
xor
and
in
xor
dec
fdivr
ret
or
cmps
jge
dec
(bad)
loopne
xor
test
or
jns
dec
scas
std
lgs
movs
and
test
jne
dec
fsubr
jmp
and
in
push
sbb
jle
in
jle
pop
fstp
pop
fimul
mov
mov
mov
fdivr
pop
fstp
pop
jle
or
and
push
xchg
or
jle
jmp
adc
imul
test
cmps
sub
mov
fsub
adc
mov
or
mov
retf
rcr
mov
jmp
pop
sub
sub
or
cmp
cmc
and
rol
or
cmp
bound
or
fadd
test
movs
and
or
retf
mov
jecxz
add
or
daa
or
scas
add
pop
fdivr
dec
push
mov
jp
or
adc
xchg
outs
test
jle
jo
mov
pop
xor
test
add
mul
jle
rcl
adc
xor
pop
loop
pcmpeqw
sahf
and
push
push
cmp
stos
jnp
and
add
pop
fdivr
pop
adc
add
dec
fdivr
(bad)
inc
xchg
pop
cmp
fld
ret
fadd
cmp
sub
add
pop
fdivr
cmps
xor
dec
fdivr
retf
leave
push
or
dec
fadd
or
push
(bad)
into
xor
inc
lea
into
jle
xchg
jle
fdiv
dec
shl
and
in
lea
and
sti
repnz
lea
iret
jle
in
add
pop
fdivr
pop
push
or
jle
pop
gs
test
jle
pop
jmp
test
or
sub
jle
in
test
mov
jmp
pop
push
mov
mov
jb
xchg
and
or
mov
dec
mov
inc
shl
and
dec
sub
loopne
xor
out
fmul
or
shl
lods
fcom
adc
ins
popa
and
push
xchg
or
inc
test
or
dec
scas
mov
bound
mov
and
pusha
pop
sti
ret
or
mov
dec
mov
inc
shl
and
sub
and
cmp
or
xor
ret
or
shl
lods
fadd
adc
ins
popa
and
ss
or
aas
in
fmul
or
shl
ins
or
ja
and
dec
and
and
dec
mov
sbb
mov
or
dec
and
sbb
in
mov
sub
or
cmp
cmps
xor
dec
(bad)
loopne
sub
xor
dec
fadd
ror
xor
and
icebp
fisub
or
or
rol
dec
je
jge
retf
pop
pop
mov
jmp
cmp
pop
fisub
jmp
test
and
or
or
cmp
shl
(bad)
xor
out
fadd
ror
xor
and
icebp
fisub
or
or
rol
dec
je
jge
retf
add
or
cmp
and
clc
push
popa
xor
mov
xchg
imul
pusha
push
or
add
jle
aas
cmps
xor
dec
fmul
retf
cmp
pusha
shl
and
dec
push
xor
js
test
leave
arpl
or
and
pop
mov
or
dec
xor
jmp
pop
call
xor
and
push
dec
and
cmp
lahf
or
and
rcr
inc
or
or
or
fwait
mov
fdiv
mov
and
dec
and
ret
mov
pusha
shl
and
or
or
jmp
bound
or
pop
fdivr
jo
imul
and
popf
ins
popa
and
fcomp
dec
mov
imul
xor
push
mov
das
or
and
add
pop
fdivr
mov
add
pop
fdivr
cmp
shl
xchg
ret
or
pop
pop
dec
mov
sar
and
loopne
mov
div
out
add
mov
and
fcom
or
dec
stos
pop
and
test
mov
dec
jae
or
and
in
arpl
loopne
sub
or
and
in
and
and
or
and
mov
dec
lea
mov
and
and
mov
ror
jp
or
shl
push
sub
mov
dec
push
jae
mov
mov
and
retf
aad
mov
mov
shl
push
out
jmp
xor
and
pop
jecxz
cdq
xor
inc
add
shl
or
dec
xor
or
sub
add
loope
sub
or
xor
mov
add
mov
mov
mov
and
or
or
mov
jmp
test
fmul
lea
jle
cmp
in
in
popa
xor
dec
retf
mov
int3
movs
stos
add
dec
fdivr
xor
jl
dec
jae
mov
pop
xor
xor
add
dec
fdivr
dec
push
lds
mov
push
out
xor
jl
dec
or
dec
fdivr
pop
daa
or
lahf
mov
cmc
dec
fdivr
lea
jle
lahf
cmps
pop
cmc
dec
fadd
loopne
test
fmul
jle
and
jl
dec
sbb
test
xor
jl
dec
or
dec
fdivr
aas
cmps
popa
cmc
dec
fsubr
mul
dec
and
bound
or
and
xor
mov
add
test
pop
dec
xor
cmp
inc
xor
xor
mov
xchg
fsubr
dec
jp
xor
mov
add
mov
xor
mov
(bad)
out
dec
(bad)
loope
and
or
in
or
bound
(bad)
shl
or
and
mov
and
or
sbb
add
sub
mov
and
adc
stos
add
dec
fdivr
jae
mov
mov
or
stos
add
dec
fdivr
inc
dec
stos
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
xor
mov
fstp
dec
sbb
movs
sbb
mov
bound
sbb
cmp
and
test
imul
inc
les
lea
idiv
fidivr
mov
and
dec
fdivr
cmp
shl
cmp
or
dec
fadd
iret
xor
or
mov
jns
dec
stos
inc
pusha
dec
and
test
sbb
mov
ins
add
jle
mov
mov
pusha
out
ret
or
and
mov
retf
sbb
mov
test
mov
push
or
or
jle
xor
jl
dec
in
dec
jle
xor
icebp
mov
xor
jle
mov
or
mov
jle
in
mov
adc
sub
test
add
fild
jmp
test
jle
aaa
out
xor
rol
or
and
cmp
bound
jle
xor
mov
mov
out
mov
cmp
push
stos
add
dec
fdivr
jae
add
dec
fdivr
cmp
shl
sti
ret
or
cmps
je
dec
(bad)
loopne
das
or
dec
and
test
adc
mov
ins
add
jle
mov
mov
pusha
mov
and
mov
aas
adc
mov
test
mov
push
test
and
dec
mov
mov
mov
sub
and
or
les
mov
and
dec
push
popf
popf
hlt
and
mov
daa
or
dec
fadd
lea
test
dec
fdivr
test
xor
pop
mov
pusha
push
hlt
ret
or
and
mov
aas
adc
mov
adc
mov
push
mov
and
dec
and
lea
repz
fld
lea
scas
add
dec
fdivr
fmul
pop
dec
mov
add
dec
fdivr
pop
mov
or
or
dec
fdivr
dec
push
add
mov
and
dec
and
sub
and
or
in
dec
mov
and
dec
push
add
mov
daa
or
mov
or
mov
jle
in
add
dec
fdivr
fmul
pop
dec
mov
add
dec
fdivr
pop
push
mov
mov
inc
sbb
fadd
or
jle
dec
push
lods
xchg
cmc
and
mov
and
dec
and
sub
and
or
mov
mov
and
dec
push
lods
xchg
cmc
and
mov
and
lock
fdivr
in
add
dec
fdivr
fadd
add
dec
fdivr
pop
out
or
or
dec
fdivr
dec
push
test
daa
mov
and
dec
and
sub
and
or
dec
push
dec
mov
and
dec
push
test
dec
mov
and
test
add
fild
bound
jmp
pop
inc
mov
mov
mov
sub
loopne
sub
or
jle
pop
push
mov
dec
test
jle
mov
std
or
sbb
sub
and
or
orps
dec
and
dec
push
test
(bad)
and
test
xor
jg
dec
pop
cmp
jns
dec
stos
inc
test
and
dec
jae
lea
jle
in
lods
shl
and
in
pop
add
jle
mov
or
mov
jle
in
mov
sub
loopne
and
or
xor
fadd
bound
jmp
pop
mov
sub
bound
or
or
in
test
or
mov
dec
test
jle
mov
std
or
sbb
sub
and
or
int
dec
mov
and
dec
push
mov
adc
and
test
test
and
dec
mov
mov
pop
add
mov
lock
or
cmp
rol
dec
jae
and
xor
jl
dec
jae
pop
mov
xor
mov
and
loopne
fdivr
xor
jl
dec
stos
inc
bound
and
arpl
dec
sub
loopne
or
dec
fsubr
or
and
or
jne
dec
fsubr
mov
or
cmp
mov
hlt
and
ror
xor
and
icebp
cmp
mov
cmc
dec
(bad)
pop
fcom
sbb
fdiv
dec
fdivr
outs
or
inc
fidivr
in
and
ret
or
jne
dec
fsubr
mov
add
hlt
mov
js
mov
adc
dec
fdivr
in
sbb
dec
fdivr
dec
xchg
jne
dec
fsubr
mov
and
fdivr
fisub
jmp
test
retf
stc
or
inc
fnstsw
pop
xor
dec
adc
and
fisub
jmp
fisub
jmp
fisub
jmp
pusha
xchg
mov
or
or
jle
dec
aam
xor
test
in
dec
fdivr
jae
and
xor
dec
retf
xor
add
aaa
jmp
dec
xor
or
fimul
retf
fisub
or
inc
fidivr
out
jmp
test
retf
jne
mov
jmp
cmp
shl
dec
ins
fdivp
and
inc
fnstsw
pop
cli
test
mov
xor
dec
fdivr
(bad)
and
mov
mov
or
popf
fisttp
iret
fisub
jmp
fmul
dec
mov
clc
shl
and
pop
add
pusha
mov
or
fisub
jle
mov
test
and
cmp
fmul
iret
pop
xor
mov
push
(bad)
test
and
retf
aam
push
mov
(bad)
add
imul
test
add
and
fnstenv
mov
xor
or
adc
fdiv
sub
or
cmp
sbb
mov
popa
and
(bad)
push
add
dec
push
lods
xchg
cmc
and
mov
xor
mov
mov
cmp
fisttp
and
lock
les
dec
inc
stos
inc
xor
push
mov
or
ror
mov
or
sub
xchg
mov
test
mov
mov
sub
jge
mov
or
pop
mov
test
mov
mov
sub
jge
mov
or
xor
or
enter
aam
xor
clc
mov
or
and
ror
push
add
aas
ds
cmp
shl
or
and
or
and
ror
push
test
push
aas
ds
test
xchg
mov
or
(bad)
push
add
push
aas
ds
xchg
cmc
and
jge
fdiv
sbb
lea
retf
cmc
or
and
xor
and
push
out
jmp
mov
mov
or
ret
or
or
movs
rol
or
or
mov
mov
or
ret
or
or
cwde
rol
or
or
test
ret
or
or
adc
or
or
push
jb
loopne
and
aaa
xchg
push
mov
dec
in
ror
mov
jecxz
and
add
xchg
push
jnp
test
mov
mov
jns
rcl
or
sub
bsr
cmc
or
inc
dec
and
fisub
(bad)
bound
jle
jge
fmul
mov
sbb
nop
push
sbb
popf
out
or
fsub
mov
or
mov
or
movs
jnp
sbb
pop
test
fmul
dec
nop
sub
or
test
adc
movs
or
sub
sub
and
or
lock
or
or
cld
rol
or
or
clc
rol
or
or
in
ret
or
or
loopne
ret
or
or
in
rol
or
or
call
mov
or
ret
or
or
rcl
ret
or
or
(bad)
ret
or
or
fcom
ret
or
or
(bad)
rol
or
or
rcl
or
or
int3
rol
or
or
enter
and
or
xor
ret
or
or
xor
ret
or
or
cmp
ret
or
or
cmp
ret
or
or
and
ret
or
or
and
ret
or
or
sub
ret
or
or
sub
ret
or
or
adc
ret
or
or
adc
ret
or
or
sbb
ret
or
or
sbb
ret
or
or
add
ret
or
or
add
ret
or
or
or
ret
or
or
or
ret
or
or
je
ret
or
or
jo
ret
or
or
jl
ret
or
or
js
ret
or
or
fs
or
or
pusha
rol
or
or
ins
rol
or
or
push
mov
or
ret
or
or
push
rol
or
or
pop
rol
or
or
pop
rol
or
or
dec
rol
or
or
dec
rol
or
or
mov
ret
or
or
mov
ret
or
or
mov
mov
or
ret
or
or
movs
xlat
ret
or
or
mov
mov
or
ret
or
or
test
ret
or
or
xchg
xlat
ret
or
or
nop
xlat
ret
or
or
pushf
xlat
ret
or
or
cwde
xlat
ret
or
or
test
ret
or
or
adc
or
or
mov
ret
or
or
mov
ret
or
or
hlt
xlat
ret
or
or
lock
ret
or
or
cld
xlat
ret
or
or
clc
xlat
ret
or
or
in
ret
or
or
loopne
ret
or
or
in
xlat
ret
or
or
call
mov
or
ret
or
or
rcl
ret
or
or
(bad)
xlat
ret
or
or
rcl
or
or
int3
xlat
ret
or
or
enter
and
or
xor
ret
or
or
cmp
ret
or
or
and
ret
or
or
and
ret
or
or
sub
ret
or
or
sub
ret
or
or
adc
ret
or
or
adc
ret
or
or
sbb
ret
or
or
sbb
ret
or
or
or
ret
or
or
or
ret
or
or
je
ret
or
or
jo
ret
or
or
jl
ret
or
or
js
ret
or
or
xlat
ret
or
or
pusha
xlat
ret
or
or
ins
xlat
ret
or
or
push
mov
or
ret
or
or
push
xlat
ret
or
or
pop
xlat
ret
or
or
pop
xlat
ret
or
or
inc
xlat
ret
or
or
inc
xlat
ret
or
or
dec
xlat
ret
or
or
dec
xlat
ret
or
.byte
.byte
mov
