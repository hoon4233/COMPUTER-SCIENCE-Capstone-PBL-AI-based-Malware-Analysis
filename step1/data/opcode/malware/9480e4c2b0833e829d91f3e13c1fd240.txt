mov
add
add
add
add
add
add
sbb
add
add
add
add
push
push
and
add
add
add
push
pop
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
adc
or
add
add
add
add
inc
add
imul
add
add
and
pop
add
push
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
add
add
mov
mov
int
mov
nop
nop
push
push
jb
addr16
ins
and
jae
and
and
outs
and
fs
push
imul
aaa
push
inc
add
dec
add
add
pop
inc
sub
add
add
add
add
add
sbb
inc
add
add
add
push
adc
add
pusha
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
inc
add
add
adc
add
add
add
add
adc
add
add
add
add
add
xor
add
add
add
test
add
add
add
sbb
add
inc
dec
inc
inc
add
add
int3
inc
add
add
add
add
add
add
add
add
pusha
inc
inc
push
inc
add
add
xchg
sub
add
pusha
add
add
add
add
add
add
inc
push
push
add
add
add
adc
add
nop
add
add
add
add
add
add
imul
pop
add
add
add
add
inc
add
shr
ins
jae
add
add
add
add
rol
add
add
add
mov
shr
fs
je
add
sbb
add
add
add
add
add
add
add
add
jb
ins
outs
arpl
add
add
add
add
add
add
inc
add
push
cs
jb
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
add
add
add
add
inc
add
push
add
inc
add
add
jns
add
add
add
add
add
or
push
je
imul
ins
adc
add
add
add
add
cmp
inc
add
add
inc
add
add
inc
add
inc
add
add
push
dec
bound
arpl
and
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
test
je
movzx
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmp
jne
push
push
call
mov
cmp
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmp
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmp
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmp
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
mov
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
mov
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmp
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmp
je
mov
mov
add
mov
mov
sub
mov
cmp
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmp
je
lea
mov
mov
call
cmp
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmp
je
lea
lea
mov
call
cmp
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmp
je
lea
lea
mov
call
cmp
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmp
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmp
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
push
mov
push
call
cmp
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmp
je
mov
mov
xor
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
mov
push
cmp
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmp
je
xor
push
push
push
mov
cmp
je
push
call
mov
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmp
je
mov
mov
mov
mov
push
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
push
cmp
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
mov
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
mov
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
inc
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
and
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
mov
mov
and
sub
mov
xor
test
je
mov
test
je
mov
sub
mov
sub
mov
mov
cmp
je
mov
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
and
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmp
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmp
jle
cmp
jge
mov
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movs
movs
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
sub
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmp
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmp
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmp
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmp
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmp
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
inc
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
and
mov
mov
mov
or
mov
mov
mov
add
mov
inc
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmp
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
push
mov
cmp
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmp
je
mov
add
mov
mov
and
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
inc
sub
add
call
jmp
cmp
jg
sub
cmp
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
inc
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmp
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmp
jne
call
test
jne
mov
mov
jmp
xor
push
push
push
mov
cmp
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
mov
jmp
dec
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
mov
jmp
mov
sub
mov
mov
cmp
je
mov
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmp
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
mov
jmp
mov
or
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
jge
mov
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmp
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmp
jge
add
sub
mov
jmp
mov
mov
test
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmp
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
test
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
and
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmp
jne
call
test
jne
xor
mov
jmp
xor
push
push
push
mov
cmp
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmp
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmp
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmp
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmp
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
fldl2e
fmulp
fld
frndint
fsubr
fxch
f2xm1
fld1
faddp
fscale
fstp
ret
nop
sub
fistp
fwait
pop
pop
ret
mov
sub
fnstcw
fnstcw
fwait
or
fldcw
fistp
fldcw
pop
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
push
mov
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
dec
je
mov
cmp
jne
xor
pop
pop
ret
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
ret
nop
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
push
push
mov
xor
mov
mov
xor
rep
sub
inc
mov
rol
shr
cmp
jae
or
pop
pop
ret
mov
cmp
jae
ret
push
test
jne
mov
test
je
push
call
pop
test
je
push
mov
mov
push
xor
shr
rep
mov
and
rep
pop
pop
mov
test
jl
mov
test
pop
ret
xor
pop
ret
xor
cmp
pop
ret
mov
test
jl
mov
xor
test
pop
ret
mov
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzx
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
push
mov
mov
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
ins
jne
add
add
fninit
fldcw
ret
mov
mov
jmp
ret
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
test
je
add
call
test
je
call
pop
add
ret
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
xchg
jmp
mov
mov
test
je
movzx
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmp
jbe
push
push
push
push
call
ret
nop
cmp
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmp
jbe
push
push
jmp
ret
lea
test
je
mov
cmp
je
cmp
jne
movsx
inc
inc
jmp
add
add
ret
mov
cmp
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmp
jbe
push
push
push
push
push
call
pop
ret
push
push
cmp
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
test
jne
cmp
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmp
je
call
cmp
jbe
cmp
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmp
jbe
cmp
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
or
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
push
mov
mov
mov
mov
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
test
je
mov
mov
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
mov
call
mov
mov
mov
mov
and
cmp
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
test
jne
cmp
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmp
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
mov
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
push
mov
test
jle
dec
mov
mov
mov
mov
cmp
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
push
mov
cmp
jle
mov
mov
mov
inc
mov
cmp
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
call
ret
push
push
push
mov
mov
mov
mov
mov
cdq
idiv
add
xor
mov
mov
mov
mov
cdq
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
push
push
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmp
je
cmp
jne
cmp
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmp
jne
push
push
push
push
call
pop
ret
add
(bad)
(bad)
inc
add
add
push
push
push
push
mov
mov
cmp
jne
cmp
je
mov
mov
xor
mov
call
cmp
jne
cmp
je
call
call
xor
mov
cmp
jne
cmp
jne
xor
mov
call
cmp
jbe
cmp
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmp
jne
call
cmp
je
call
cmp
jne
cmp
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
pop
jmp
ret
mov
test
je
mov
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
mov
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
mov
add
pop
mov
mov
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
dec
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
push
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
dec
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
mov
call
mov
test
je
mov
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
sub
add
lea
call
mov
mov
mov
sub
call
pop
pop
pop
ret
test
je
push
push
push
push
mov
mov
mov
mov
push
test
je
mov
dec
jge
xor
cmp
jle
mov
mov
mov
add
call
pop
cmp
jne
mov
mov
lea
mov
sub
add
add
call
mov
mov
mov
add
call
pop
pop
pop
pop
ret
nop
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmp
jne
sub
add
push
mov
call
pop
add
mov
mov
mov
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
mov
test
je
mov
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
mov
push
call
add
dec
jne
pop
pop
ret
lea
test
je
mov
shr
je
push
push
push
call
test
je
ret
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmp
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
cmp
je
call
ret
mov
call
ret
push
push
push
push
mov
mov
xor
mov
lea
mov
xor
mov
push
mov
sub
jle
mov
add
add
call
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
add
call
mov
jmp
mov
add
call
mov
jmp
lea
add
call
mov
jmp
xor
mov
push
push
mov
mov
lea
add
call
pop
jmp
xor
mov
mov
push
mov
lea
add
call
pop
jmp
mov
add
call
mov
jmp
mov
mov
add
call
mov
add
add
dec
jne
pop
sub
jle
lea
add
call
pop
pop
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
xor
mov
lea
mov
mov
mov
push
call
add
add
dec
jne
jmp
mov
mov
mov
call
xor
mov
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
mov
call
add
add
dec
jne
pop
pop
pop
pop
ret
ret
nop
call
ret
mov
xchg
call
ret
nop
mov
jmp
ret
test
je
mov
ret
push
mov
push
call
pop
ret
nop
jmp
ret
mov
call
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
jg
test
jge
mov
call
mov
mov
call
jmp
xor
cmp
je
sub
mov
mov
sub
mov
movzx
add
mov
mov
mov
test
je
mov
mov
jmp
xor
mov
mov
imul
mov
mov
cdq
idiv
cmp
je
mov
call
add
cmp
je
mov
cmp
jne
mov
mov
cmp
jle
cmp
je
mov
add
mov
imul
add
mov
sub
mov
call
lea
mov
call
mov
mov
jmp
mov
dec
mov
call
mov
mov
cmp
jge
mov
cmp
je
mov
imul
mov
add
xor
call
mov
push
mov
mov
mov
add
mov
call
jmp
mov
imul
mov
add
mov
mov
call
mov
mov
add
mov
mov
add
mov
sub
imul
mov
imul
add
xor
call
cmp
jle
add
dec
dec
test
jl
inc
xor
mov
push
mov
lea
mov
mov
call
inc
dec
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
add
call
ret
nop
mov
test
je
mov
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
test
je
lock
test
je
lock
jne
push
push
mov
inc
call
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
cmp
je
xor
push
push
push
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmp
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
push
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
mov
push
push
mov
call
pop
ret
lea
test
je
push
push
mov
push
call
pop
mov
pop
test
jne
ret
mov
push
call
ret
mov
test
mov
je
mov
push
call
ret
push
mov
add
push
xor
mov
xor
push
push
push
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmp
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
push
mov
inc
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
sub
jae
mov
mov
mov
mov
mov
call
test
je
call
call
mov
mov
mov
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
mov
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
shr
ret
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
sub
sub
add
add
add
fs
inc
add
mov
inc
add
add
add
add
fs
inc
add
stos
inc
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
fs
inc
add
inc
add
add
add
add
fs
inc
add
inc
add
add
add
add
fs
inc
add
inc
add
add
add
add
fs
inc
add
loopne
add
add
add
add
je
inc
add
inc
add
inc
add
jnp
add
add
mov
add
data16
imul
arpl
xor
add
add
jb
arpl
xor
add
add
jb
arpl
add
push
imul
xor
imul
xor
inc
add
arpl
imul
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
inc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
in
add
add
add
int
add
add
add
add
leave
mov
les
ret
mov
mov
mov
retf
leave
add
add
retf
lds
retf
add
add
add
add
add
dec
add
leave
push
add
inc
add
add
dec
add
inc
add
inc
add
dec
add
inc
add
add
push
retf
fwait
dec
add
das
adc
or
int3
xor
sub
leave
or
aad
adc
adc
adc
or
add
add
add
add
mov
les
ret
mov
mov
mov
ds
add
add
add
retf
xor
enter
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
test
jne
mov
ret
mov
test
jne
mov
ret
mov
pop
xchg
push
mov
call
pop
ret
mov
push
push
push
push
push
xor
mov
mov
mov
mov
mov
xor
mov
push
call
movsx
test
je
xor
mov
or
mov
dec
dec
inc
jne
mov
pop
pop
pop
pop
pop
ret
lea
mov
mov
ret
mov
cmp
jle
mov
ret
nop
cmp
jge
mov
ret
nop
push
call
pop
push
push
mov
call
mov
call
push
push
call
pop
push
push
mov
ret
pop
pop
pop
push
push
push
push
call
call
ret
mov
ret
lea
mov
ret
nop
xor
ret
nop
push
mov
mov
pop
ret
lea
push
mov
mov
pop
ret
lea
push
mov
pop
ret
nop
push
mov
xor
pop
ret
lea
push
mov
xor
pop
ret
lea
push
mov
xor
pop
ret
lea
push
mov
xor
pop
ret
lea
push
mov
mov
xor
mov
mov
call
pop
ret
ret
lea
add
ret
lea
push
xchg
xor
xchg
jecxz
mov
mov
call
mov
jecxz
mov
mov
jecxz
mov
mov
push
push
mov
lea
xor
mov
call
pop
pop
call
jmp
xor
xchg
call
pop
ret
mov
xor
call
mov
ret
lea
push
push
push
mov
mov
mov
cmp
jl
mov
test
jg
mov
test
jns
add
sar
inc
mov
call
mov
add
mov
call
jmp
mov
add
mov
call
mov
mov
mov
inc
pop
pop
pop
ret
mov
mov
call
ret
nop
test
jle
cmp
jge
push
xchg
lea
cmp
jbe
mov
sub
mov
push
sub
mov
lea
lea
add
pop
sub
shl
call
pop
ret
push
mov
mov
call
test
jl
mov
xchg
call
pop
ret
push
mov
mov
push
dec
mov
repnz
pop
je
mov
mov
stc
sbb
sar
pop
ret
push
push
push
push
call
pop
pop
sub
shl
mov
pop
mov
lea
jl
push
lea
call
pop
pop
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
test
je
cmp
je
mov
mov
mov
mov
mov
push
push
push
call
xor
mov
jmp
push
push
call
mov
cmp
je
lea
mov
mov
call
jmp
cmp
je
lea
mov
mov
call
jmp
mov
push
push
push
push
call
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
push
push
mov
xor
push
push
push
mov
test
jne
pop
add
jmp
mov
call
mov
xor
pop
pop
pop
mov
jmp
jmp
call
mov
pop
pop
pop
pop
pop
ret
mov
mov
xor
call
ret
mov
call
mov
shr
and
mov
shr
and
or
shl
and
or
mov
ret
push
push
mov
mov
mov
mov
xor
call
mov
call
mov
pop
pop
ret
mov
push
push
mov
mov
mov
cmp
je
test
je
mov
call
mov
push
call
mov
mov
call
pop
pop
ret
mov
cmp
je
mov
call
ret
mov
cmp
je
mov
call
ret
mov
xchg
mov
test
jne
push
lea
push
call
pop
mov
ret
nop
push
mov
mov
xor
call
mov
call
mov
call
mov
call
mov
call
mov
pop
ret
nop
call
ret
mov
mov
mov
ret
mov
add
adc
ret
nop
push
xchg
lods
sub
mov
lods
sbb
mov
pop
ret
mov
neg
mov
mov
sbb
mov
ret
mov
push
push
xchg
mov
mov
lods
mul
stos
xchg
lods
mul
add
stos
pop
pop
ret
mov
xor
cmp
xchg
jg
jl
cmp
je
inc
ret
dec
ret
mov
push
push
add
mov
mov
mov
mov
mov
call
mov
call
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
xor
mov
xor
mov
mov
test
je
mov
mov
cmp
jne
mov
inc
jmp
cmp
jne
inc
jmp
mov
cmp
jb
cmp
ja
lea
mov
mov
call
mov
mov
mov
mov
xor
mov
sub
mov
call
inc
mov
call
cmp
jle
cmp
je
lea
mov
call
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
mov
push
mov
fld1
test
je
fld
jg
fdivr
neg
jmp
fmul
shr
jae
fmul
jne
fstp
fwait
pop
ret
lea
push
mov
add
push
push
push
xor
mov
mov
xor
push
push
push
mov
xor
mov
mov
test
je
mov
mov
cmp
jne
mov
inc
xor
xor
mov
mov
jmp
xor
mov
cmp
jge
sub
je
sub
je
jmp
add
sub
jb
sub
je
sub
je
jmp
test
jne
mov
jmp
test
jne
fld
fmul
xor
mov
mov
fild
faddp
fsub
fstp
fwait
jmp
fld
fmul
fstp
fwait
xor
mov
sub
mov
fild
fmul
fadd
fstp
fwait
jmp
lea
lea
mov
call
mov
call
mov
push
push
push
mov
call
fmul
fstp
fwait
jmp
inc
mov
call
cmp
jle
cmp
je
fld
fchs
fstp
fwait
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
fld
pop
pop
pop
mov
pop
ret
add
add
and
add
int
int3
int3
int3
int3
int3
int3
sti
aas
add
imul
idiv
ret
lea
push
push
mov
mov
or
xor
repnz
not
mov
mov
mov
mov
shr
rep
mov
and
rep
pop
pop
ret
mov
push
mov
mov
xor
repnz
not
std
dec
mov
repnz
mov
jne
mov
inc
cld
pop
ret
lea
push
xchg
xchg
repnz
xchg
pop
ret
push
push
mov
mov
mov
xor
and
shr
shr
repz
jne
mov
repz
jne
inc
pop
pop
ret
nop
push
push
push
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
test
jle
push
mov
push
call
pop
pop
pop
ret
nop
push
push
mov
mov
push
mov
call
push
push
mov
call
push
push
push
call
sub
pop
pop
ret
call
ret
mov
push
push
push
mov
mov
mov
xor
test
je
repnz
jne
inc
sub
mov
mov
mov
mov
shr
rep
mov
and
rep
stos
mov
pop
pop
pop
ret
lea
push
mov
push
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
mov
mov
call
mov
test
jle
lea
push
mov
dec
mov
mov
call
push
push
mov
call
mov
add
lea
mov
call
push
mov
mov
call
mov
jmp
xor
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
push
mov
xchg
or
xor
repnz
not
mov
xor
repz
mov
mov
sub
pop
pop
ret
nop
push
push
push
mov
mov
mov
xor
or
je
repnz
sub
mov
mov
xor
repz
mov
mov
sub
pop
pop
pop
ret
nop
xchg
xchg
or
xor
cmp
je
repnz
dec
dec
sub
mov
ret
push
mov
test
jne
sub
mov
push
push
push
call
xchg
mov
mov
call
add
pop
ret
push
call
pop
inc
call
mov
call
loop
mov
sub
cmp
jl
cmp
jne
cmp
jne
inc
dec
sub
xchg
xchg
call
pop
ret
lea
movzx
push
push
push
push
call
ret
mov
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
call
lea
mov
call
jmp
lea
lea
mov
call
cmp
je
mov
mov
call
cmp
jne
mov
call
cmp
jne
mov
cmp
jne
mov
mov
call
jmp
push
push
lea
push
push
mov
lea
mov
call
mov
call
push
call
cmp
je
lea
lea
mov
call
mov
mov
call
cmp
jne
lea
mov
call
cmp
jne
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
inc
add
add
add
push
mov
mov
push
mov
call
push
call
mov
mov
cmp
setne
pop
pop
pop
ret
nop
push
mov
push
mov
push
call
cmp
sbb
inc
pop
ret
mov
push
call
ret
lea
push
mov
add
push
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
lea
call
mov
mov
pop
mov
pop
ret
nop
push
push
call
ret
push
push
push
mov
mov
mov
mov
mov
call
cmp
je
mov
call
mov
cmp
jne
mov
call
mov
mov
mov
call
pop
pop
pop
ret
nop
push
push
mov
mov
mov
mov
mov
call
pop
pop
ret
push
push
mov
mov
mov
mov
mov
call
pop
pop
ret
push
push
add
mov
mov
mov
call
mov
mov
mov
call
mov
mov
cmp
jne
mov
call
jmp
push
mov
sub
inc
mov
mov
call
pop
pop
pop
pop
ret
add
add
pop
das
add
in
xor
push
push
push
push
push
mov
mov
call
xor
push
push
push
mov
mov
call
test
setg
test
je
lea
mov
call
mov
lea
call
mov
call
cmp
jl
mov
call
test
jne
lea
mov
call
mov
mov
call
je
lea
mov
call
mov
call
test
je
mov
call
test
jne
xor
jmp
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
push
mov
push
mov
call
push
call
cmp
sbb
inc
pop
ret
mov
push
push
add
mov
mov
push
lea
push
mov
call
push
call
mov
mov
mov
call
add
pop
pop
ret
nop
push
push
push
add
mov
mov
xor
mov
lea
push
call
xor
mov
cmp
jne
cmp
setae
jmp
cmp
jne
mov
cmp
seta
test
jne
cmp
jne
cmp
seta
test
jne
cmp
setae
test
je
push
call
mov
push
push
call
mov
test
je
push
lea
push
lea
push
mov
call
push
call
jmp
lea
push
lea
push
lea
push
lea
push
mov
call
push
call
lea
mov
imul
xor
call
lea
mov
mov
call
add
pop
pop
pop
ret
add
imul
gs
xor
add
add
inc
gs
imul
push
jo
arpl
js
add
push
push
mov
mov
mov
mov
xor
call
mov
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
and
cmp
je
mov
and
test
jne
xor
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
cmp
je
test
je
xor
jmp
mov
mov
cmp
jne
mov
and
test
je
cmp
je
and
test
je
and
test
jne
mov
mov
mov
mov
dec
test
jl
inc
xor
mov
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
lea
mov
inc
call
mov
push
lea
mov
call
mov
pop
call
test
je
mov
jmp
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
test
jne
inc
dec
jne
cmp
je
cmp
je
xor
jmp
mov
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
call
lea
mov
call
cmp
je
lea
mov
call
mov
lea
call
cmp
jne
call
mov
mov
mov
call
jne
mov
mov
call
jmp
mov
mov
call
lea
mov
call
mov
mov
lea
call
mov
call
mov
lea
call
mov
lea
call
test
je
call
mov
push
lea
mov
mov
call
test
je
mov
cmp
je
lea
push
lea
mov
mov
call
mov
dec
je
dec
je
jmp
cmp
jne
mov
call
mov
lea
mov
mov
call
mov
mov
mov
call
lea
call
test
jne
lea
call
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
sub
(bad)
(bad)
(bad)
inc
add
add
add
add
push
mov
mov
push
push
push
mov
call
push
push
call
test
je
xor
mov
mov
pop
pop
pop
ret
lea
push
push
add
mov
mov
lea
push
lea
push
push
push
push
push
push
mov
call
push
push
call
test
je
xor
mov
mov
pop
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
xor
mov
test
je
lea
push
lea
push
lea
push
push
mov
call
push
push
call
test
jne
cmp
je
xor
mov
mov
add
pop
pop
ret
mov
push
mov
mov
add
push
mov
mov
push
mov
add
push
push
mov
mov
call
push
mov
mov
push
call
test
sete
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
call
cmp
je
xor
mov
xor
mov
push
call
pop
test
je
cmp
je
cmp
jne
mov
call
mov
push
call
pop
test
je
cmp
jne
push
push
mov
push
call
mov
mov
call
mov
push
push
mov
push
call
mov
mov
call
mov
call
jmp
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
lea
push
push
push
mov
mov
mov
test
je
push
lea
push
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
test
je
mov
call
inc
push
mov
call
push
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
mov
test
je
mov
call
inc
push
mov
call
push
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
pop
pop
ret
nop
test
je
push
call
ret
nop
push
push
add
mov
mov
test
je
lea
push
push
lea
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
test
je
mov
push
push
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
xor
mov
call
push
push
push
push
push
push
lea
push
push
push
push
push
push
call
test
jne
cmp
jbe
mov
inc
mov
mov
call
mov
xor
jmp
lea
mov
call
mov
mov
call
mov
inc
mov
inc
push
push
push
push
lea
push
push
push
push
call
cmp
jne
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
mov
mov
test
je
push
push
lea
push
push
mov
call
push
push
call
mov
pop
pop
pop
ret
mov
add
lea
push
call
mov
lea
call
fld
add
ret
nop
push
push
add
mov
mov
push
push
call
cmp
sbb
inc
test
je
fild
fld
fdivrp
fadd
fstp
fwait
mov
pop
pop
pop
pop
ret
add
add
add
add
imul
add
push
dec
push
mov
push
xchg
fld
fsub
fld
fmulp
jmp
push
lods
push
dec
add
add
shr
es
call
push
push
mov
push
push
call
pop
pop
cmp
sbb
inc
pop
pop
ret
nop
push
push
add
mov
mov
push
push
call
test
je
lea
push
lea
push
call
test
je
mov
lea
call
test
jne
xor
jmp
mov
add
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
xor
mov
mov
call
xor
test
jne
cmp
jne
mov
jmp
mov
cmp
je
mov
call
mov
call
mov
cmp
je
push
mov
push
push
mov
push
push
mov
push
call
test
jne
call
cmp
jne
mov
add
mov
jmp
mov
mov
call
cmp
je
mov
call
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
call
xor
test
je
mov
jmp
test
je
mov
test
je
or
test
je
or
cmp
je
mov
call
mov
call
mov
cmp
je
push
mov
push
mov
push
push
push
mov
push
call
test
jne
call
cmp
jne
mov
add
mov
jmp
mov
mov
call
cmp
je
mov
call
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
mov
mov
push
push
lea
call
xor
mov
test
je
mov
call
mov
mov
push
push
lea
xor
mov
call
pop
pop
mov
pop
ret
lea
push
mov
add
push
xor
mov
mov
mov
xor
push
push
push
mov
fld
fcomp
fnstsw
sahf
jae
fld
fadd
fstp
fwait
push
push
lea
call
push
lea
push
lea
xor
mov
call
push
push
push
lea
push
lea
mov
mov
call
push
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
add
pop
add
add
mov
xor
call
ret
call
ret
call
ret
mov
ret
call
ret
call
ret
push
mov
push
push
mov
mov
mov
call
xor
push
push
push
mov
cmp
je
mov
call
push
lea
call
mov
mov
pop
call
mov
jmp
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
lea
xor
push
push
push
mov
mov
call
mov
mov
mov
mov
call
cmp
je
lea
mov
call
mov
mov
call
cmp
jne
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
lea
call
ret
push
push
mov
mov
xor
call
mov
lea
mov
mov
call
lea
mov
mov
mov
pop
pop
ret
mov
call
ret
lea
push
mov
push
call
cmp
jne
xor
ret
nop
ret
lea
xor
ret
nop
xor
ret
nop
mov
call
ret
lea
mov
call
ret
lea
push
push
call
xchg
call
xchg
pop
ret
mov
push
mov
mov
cmp
je
call
mov
pop
ret
lea
push
mov
and
loop
add
loop
add
cmp
jle
push
mov
call
pop
xchg
mov
pop
ret
nop
mov
ret
push
push
xchg
cmp
jae
mov
mov
jecxz
lea
call
jmp
or
je
xchg
call
mov
pop
inc
loop
cmp
je
mov
xchg
jecxz
xchg
call
xor
mov
cmp
jb
mov
pop
ret
lea
push
xchg
mov
add
cmp
jle
mov
sub
push
mov
add
call
pop
add
pop
ret
push
xchg
mov
add
cmp
push
push
jle
xchg
mov
call
pop
pop
mov
add
push
call
pop
add
pop
ret
mov
push
push
push
mov
mov
mov
call
mov
mov
mov
call
mov
call
push
call
cmp
jbe
mov
mov
call
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jle
mov
sub
mov
call
mov
mov
dec
mov
call
mov
mov
mov
sub
mov
cmp
jge
mov
cmp
jle
mov
mov
call
mov
xor
mov
mov
call
mov
xor
call
add
add
mov
mov
mov
mov
mov
call
add
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jg
mov
call
mov
mov
mov
call
sub
jmp
sub
mov
mov
mov
sub
mov
cmp
ja
mov
cmp
jbe
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
mov
xor
jmp
mov
mov
call
add
mov
cmp
jl
lea
call
xor
mov
xor
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
je
mov
mov
or
or
mov
call
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
call
mov
mov
pop
ret
nop
ret
lea
push
push
add
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
push
push
mov
call
mov
add
pop
pop
ret
push
mov
add
push
add
push
push
push
mov
mov
mov
mov
cmp
jne
mov
mov
call
push
push
lea
push
mov
call
push
mov
call
push
mov
call
push
call
test
je
mov
lea
mov
call
jmp
mov
call
jmp
mov
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
call
pop
pop
pop
mov
pop
ret
mov
push
push
mov
mov
xor
call
mov
lea
mov
call
mov
pop
pop
ret
mov
xor
call
ret
push
push
push
push
call
ret
push
push
push
push
call
ret
push
push
mov
mov
xor
call
mov
mov
test
je
mov
mov
call
mov
mov
pop
pop
ret
mov
xor
call
ret
mov
xor
inc
mov
push
mov
xor
push
call
or
mov
mov
call
push
push
push
call
mov
xchg
mov
cdq
push
push
push
push
sub
push
push
push
sub
push
push
push
mov
push
push
call
call
call
call
pop
xor
ret
cmp
jne
mov
and
cmp
jne
push
mov
jecxz
xchg
mov
jecxz
mov
mov
jecxz
xchg
push
call
test
pop
je
call
pop
xor
mov
inc
ret
pop
jmp
pop
push
call
cmp
jne
mov
jecxz
xchg
push
call
pop
push
call
mov
ret
pop
call
pop
pop
push
call
pop
ret
lea
xor
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
ret
mov
xor
cmp
jne
mov
ret
nop
push
push
push
add
mov
mov
mov
xor
mov
cmp
je
cmp
jne
mov
mov
mov
mov
test
jne
lea
push
mov
push
call
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
movsx
push
movsx
push
mov
mov
mov
call
mov
cmp
jne
lea
push
mov
push
call
mov
mov
mov
xor
mov
mov
add
pop
pop
pop
ret
add
or
add
push
push
push
push
mov
mov
mov
xor
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
test
je
mov
mov
mov
add
add
mov
add
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
xor
mov
push
call
mov
test
je
push
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
call
test
jne
mov
cmp
je
cmp
je
mov
mov
lea
lea
mov
call
test
jne
mov
cmp
je
cmp
je
mov
mov
lea
lea
mov
call
test
jne
mov
call
test
je
cmp
je
cmp
je
cmp
jne
xor
mov
cmp
jne
sub
jne
mov
xor
mov
mov
call
test
jne
jmp
cmp
jne
cmp
je
cmp
jne
push
push
push
mov
push
call
test
je
push
push
push
mov
push
call
cmp
jne
push
mov
mov
push
push
mov
push
call
lea
lea
mov
mov
call
jmp
lea
lea
mov
mov
call
jmp
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
call
mov
cmp
je
mov
push
mov
push
mov
push
push
mov
push
call
mov
jmp
xor
mov
jmp
mov
push
mov
push
push
push
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
push
mov
push
push
call
mov
test
je
push
push
call
test
je
push
push
call
push
push
call
mov
test
jne
pop
pop
ret
push
push
push
push
push
mov
mov
mov
xor
mov
cmp
jb
cmp
ja
mov
push
mov
push
add
push
push
call
mov
mov
mov
jmp
mov
cmp
jb
cmp
ja
test
je
sub
jne
push
mov
push
call
mov
call
push
mov
push
call
mov
call
mov
mov
mov
jmp
cmp
jne
mov
call
test
je
mov
call
dec
je
sub
je
dec
je
jmp
mov
call
mov
mov
call
jmp
mov
mov
mov
call
jmp
push
push
push
mov
push
call
jmp
cmp
jne
mov
call
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
mov
mov
mov
call
mov
push
mov
push
mov
mov
mov
call
mov
mov
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
xor
cmp
jne
push
mov
push
call
test
je
lea
push
mov
push
call
mov
neg
push
mov
neg
push
lea
push
call
mov
push
call
mov
push
push
lea
lea
movs
movs
movs
movs
pop
pop
mov
sub
push
mov
sub
push
mov
add
push
mov
add
push
push
call
mov
mov
mov
mov
cmp
jne
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
mov
mov
call
mov
mov
push
lea
push
mov
push
mov
push
push
push
push
call
push
call
push
mov
push
call
mov
add
pop
pop
pop
pop
ret
add
je
gs
gs
ins
add
ja
push
popa
arpl
jb
jne
add
outs
push
push
popa
je
add
add
add
je
add
add
push
mov
test
je
or
pop
ret
and
pop
ret
nop
test
setne
ret
push
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
sub
jne
mov
call
test
je
mov
call
jmp
cmp
jne
mov
test
je
call
xor
mov
mov
pop
pop
pop
ret
push
push
push
push
add
mov
mov
lea
cmp
jne
xor
mov
mov
mov
cmp
jbe
mov
xor
or
push
call
mov
jmp
mov
push
call
mov
mov
mov
cmp
jg
add
lea
cmp
jne
cmp
jg
xor
mov
mov
push
call
mov
lea
mov
call
mov
push
mov
push
mov
or
mov
mov
call
mov
mov
call
mov
mov
mov
add
add
mov
mov
mov
push
push
mov
call
mov
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
or
mov
and
mov
or
mov
add
add
mov
add
mov
push
push
push
mov
push
call
mov
mov
mov
mov
call
push
push
push
mov
push
call
mov
mov
call
mov
add
pop
pop
pop
pop
ret
add
add
add
add
add
add
and
mov
jmp
mov
push
push
push
push
add
mov
mov
call
mov
mov
call
cmp
jge
push
lea
push
push
mov
call
push
push
push
call
push
lea
push
call
mov
jmp
push
push
push
mov
push
push
push
call
mov
push
push
call
mov
push
mov
push
push
push
push
push
call
mov
add
pop
pop
pop
pop
ret
push
push
mov
mov
mov
mov
call
mov
pop
pop
ret
lea
mov
call
ret
xor
ret
nop
push
push
push
add
mov
mov
xor
cmp
jne
mov
lea
mov
mov
mov
call
cmp
jne
cmp
je
mov
xor
mov
mov
jmp
mov
xor
mov
mov
cmp
je
mov
call
test
jne
cmp
jne
push
call
mov
mov
xor
mov
mov
pop
pop
pop
pop
pop
ret
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
call
pop
pop
ret
push
mov
push
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
xor
cmp
jne
call
test
jne
cmp
jne
cmp
je
mov
jmp
mov
test
je
push
call
mov
mov
mov
pop
pop
pop
pop
ret
mov
xor
call
ret
push
push
push
mov
mov
mov
push
push
call
mov
mov
call
or
pop
pop
pop
ret
lea
push
push
xor
cmp
jne
mov
and
sub
je
sub
je
sub
je
jmp
mov
mov
mov
call
jmp
mov
mov
mov
call
jmp
mov
mov
mov
call
mov
pop
pop
ret
mov
push
mov
push
push
push
mov
mov
mov
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
nop
push
mov
mov
mov
jecxz
push
lods
call
pop
loop
pop
ret
push
push
push
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
jle
mov
call
test
jle
mov
mov
call
mov
mov
pop
pop
pop
ret
lea
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
push
push
push
push
add
mov
mov
mov
mov
test
je
mov
test
jne
and
mov
and
mov
cmp
je
mov
cmp
jg
je
sub
je
sub
je
jmp
sub
je
add
sub
jae
mov
call
jmp
test
je
mov
call
mov
push
mov
push
push
mov
push
call
mov
mov
jmp
test
je
test
jne
mov
mov
test
je
test
jne
test
je
test
jne
lea
mov
call
push
lea
push
mov
mov
push
call
push
mov
push
call
jmp
cmp
jne
xor
mov
test
jne
push
push
push
push
call
mov
mov
push
push
mov
push
call
dec
jg
mov
push
call
jmp
lea
push
mov
push
call
mov
push
call
mov
lea
push
mov
push
call
mov
push
mov
push
push
call
push
push
call
mov
mov
mov
jmp
mov
mov
mov
mov
or
mov
test
je
test
je
push
push
push
push
call
push
push
push
push
call
push
mov
push
call
mov
push
push
call
mov
test
je
push
call
test
je
push
push
push
push
call
mov
push
push
call
dec
jg
lea
push
push
call
xor
mov
xor
mov
lea
push
mov
push
call
mov
neg
push
mov
neg
push
lea
push
call
lea
mov
call
movsx
push
movsx
push
push
call
push
push
call
mov
push
mov
push
push
push
call
cmp
jl
mov
mov
cmp
je
mov
mov
and
mov
cmp
je
push
call
mov
mov
or
mov
call
add
mov
mov
call
add
mov
push
movsx
neg
push
movsx
neg
push
push
call
push
push
push
push
call
xor
mov
xor
mov
lea
push
mov
mov
push
call
lea
push
mov
mov
push
call
mov
add
sub
mov
mov
mov
add
sub
mov
mov
push
mov
movsx
neg
push
mov
movsx
neg
push
push
call
lea
push
push
call
mov
push
mov
push
push
push
push
call
push
push
push
push
call
mov
and
mov
push
push
call
jmp
push
push
mov
push
mov
push
call
push
call
push
push
call
mov
test
jne
xor
mov
and
test
jne
push
push
mov
push
call
mov
push
mov
push
push
call
push
push
push
push
mov
push
mov
push
push
push
push
call
push
mov
push
call
mov
push
push
call
push
call
mov
push
call
push
call
lea
push
mov
push
call
mov
add
pop
pop
pop
pop
ret
add
add
add
add
push
push
push
push
add
mov
mov
mov
mov
mov
sub
jne
mov
cmp
je
push
push
push
push
call
mov
mov
test
setne
neg
sbb
push
push
mov
push
call
cmp
je
test
jne
mov
push
call
xor
mov
mov
mov
mov
mov
test
jne
lea
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
test
je
xor
call
cmp
jne
lea
push
mov
push
call
mov
mov
mov
xor
mov
mov
mov
test
je
push
call
xor
mov
jmp
mov
mov
add
pop
pop
pop
pop
ret
lea
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
call
pop
pop
ret
push
push
mov
mov
mov
call
cmp
je
test
je
test
jne
mov
or
or
or
or
or
or
or
mov
call
jmp
test
je
mov
or
mov
call
jmp
mov
or
mov
call
jmp
mov
and
test
jne
or
mov
xchg
call
mov
and
mov
call
pop
pop
ret
push
push
push
push
mov
mov
mov
mov
call
test
jne
mov
cmp
jne
mov
mov
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
call
mov
cmp
jl
cmp
jg
xor
mov
mov
jmp
cmp
jne
mov
call
test
jne
push
push
push
mov
push
call
push
call
xor
pop
pop
pop
pop
ret
lea
push
push
mov
push
xor
mov
push
push
push
call
mov
mov
pop
pop
ret
nop
mov
ret
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
call
pop
pop
ret
nop
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
call
pop
pop
ret
nop
push
push
call
xchg
pop
call
xchg
pop
ret
push
xor
push
push
mov
mov
mov
jecxz
push
lods
push
test
je
mov
or
and
cmp
jne
call
test
pop
je
push
xchg
push
mov
mov
xor
jecxz
lods
mov
cmp
jle
pop
mov
mov
mov
call
jmp
inc
loop
pop
mov
call
inc
pop
test
jne
push
call
pop
je
mov
call
pop
loop
pop
pop
test
pop
ret
nop
pusha
push
mov
mov
call
xchg
mov
xor
jecxz
mov
mov
mov
xor
push
push
test
je
push
lods
cmp
je
mov
jecxz
mov
test
jge
cmp
jge
cmp
jle
mov
jmp
cmp
jle
cmp
jl
jmp
test
jl
cmp
jg
jmp
cmp
jl
mov
jecxz
mov
test
jl
cmp
jge
jmp
cmp
jle
mov
pop
dec
jne
pop
pop
inc
loop
mov
pop
jecxz
xchg
mov
jecxz
inc
push
mov
call
pop
dec
mov
xchg
call
popa
ret
nop
push
mov
mov
mov
pop
ret
nop
mov
xor
call
ret
mov
push
mov
mov
call
mov
mov
pop
ret
mov
mov
mov
ret
mov
push
push
mov
mov
push
jecxz
mov
push
xchg
xor
jecxz
push
push
push
lods
call
pop
lea
pop
loop
pop
pop
xchg
push
call
pop
pop
jecxz
mov
push
lods
push
call
xchg
pop
xchg
rep
xchg
mov
stos
pop
loop
xchg
stos
pop
pop
ret
lea
push
push
push
or
mov
jecxz
mov
mov
call
movzx
lods
inc
cmp
jne
push
push
call
pop
pop
je
loop
or
xchg
pop
pop
pop
ret
jmp
mov
jmp
mov
jmp
mov
push
mov
push
push
push
push
mov
mov
mov
mov
test
je
mov
call
push
mov
push
mov
push
mov
push
push
push
call
pop
pop
pop
pop
pop
ret
xor
test
je
or
test
je
or
test
je
or
jmp
test
je
or
mov
shl
movzx
or
mov
ret
nop
push
push
push
push
mov
mov
cmp
jne
xor
mov
test
je
mov
test
je
xor
mov
movzx
cmp
je
or
mov
push
push
push
push
push
call
mov
mov
cmp
je
mov
mov
call
cmp
setne
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
test
je
mov
call
push
push
call
pop
pop
pop
ret
nop
cmp
jne
mov
ret
mov
cmp
jne
mov
ret
mov
push
push
push
push
mov
mov
mov
cmp
jle
mov
mov
jmp
mov
mov
cmp
je
mov
cmp
jne
mov
mov
call
mov
cmp
jne
mov
mov
call
cmp
jne
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
je
mov
mov
call
mov
jmp
mov
mov
cmp
jne
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
call
cmp
jne
mov
mov
mov
cmp
jne
mov
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
test
je
test
je
cmp
je
cmp
jne
mov
mov
call
mov
mov
call
sub
je
sub
jne
mov
jmp
mov
jmp
mov
mov
call
pop
pop
pop
ret
mov
push
mov
push
mov
push
mov
xchg
call
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
test
je
mov
mov
mov
xor
mov
mov
test
jge
neg
or
mov
test
jle
or
mov
call
mov
lea
push
push
push
push
call
test
jl
inc
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
push
mov
mov
mov
mov
test
jle
test
jne
mov
mov
mov
mov
mov
mov
mov
test
je
or
push
push
push
push
call
pop
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
xor
xor
mov
cmp
je
mov
call
mov
add
add
mov
mov
call
mov
mov
mov
lea
push
mov
push
push
mov
mov
mov
call
mov
call
mov
dec
cmp
jge
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
mov
push
push
mov
lea
mov
sub
je
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
mov
call
push
push
push
push
call
pop
pop
ret
mov
mov
xor
call
ret
mov
push
xchg
call
ret
mov
push
push
movzx
push
push
call
ret
mov
push
xor
cmp
jne
cmp
jne
mov
xor
mov
mov
mov
pop
ret
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
jne
mov
call
cmp
jb
mov
call
cmp
ja
mov
mov
test
je
mov
push
call
mov
mov
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
test
jne
cmp
jne
mov
call
jmp
mov
mov
call
mov
mov
mov
call
mov
xor
mov
mov
call
test
je
mov
call
mov
dec
test
jl
inc
xor
mov
mov
mov
call
mov
cmp
je
mov
call
test
je
mov
mov
call
mov
xor
call
mov
inc
mov
mov
call
inc
dec
jne
jmp
mov
mov
mov
call
test
je
mov
mov
call
mov
mov
mov
mov
xor
call
mov
inc
mov
mov
call
inc
mov
mov
mov
mov
call
xor
mov
mov
call
jmp
call
mov
call
cmp
jne
cmp
je
dec
mov
xor
mov
mov
mov
call
mov
mov
dec
test
jl
inc
xor
mov
mov
call
mov
mov
dec
mov
cmp
jg
mov
mov
call
mov
mov
call
inc
dec
jne
mov
call
cmp
je
push
push
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
mov
push
mov
push
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
mov
push
mov
push
push
mov
mov
mov
cmp
je
mov
mov
mov
call
pop
pop
pop
ret
nop
push
mov
mov
xor
call
mov
mov
pop
ret
lea
push
mov
mov
xor
mov
call
inc
mov
call
mov
pop
ret
lea
push
push
mov
mov
mov
test
setne
xor
je
test
jne
xor
mov
or
push
push
push
mov
push
mov
push
call
mov
jmp
push
call
xor
mov
mov
pop
pop
ret
ret
lea
push
push
mov
mov
test
je
mov
call
mov
call
pop
pop
ret
lea
push
push
push
mov
xor
mov
call
test
jne
mov
call
cmp
jne
mov
test
je
mov
push
call
mov
xor
mov
push
push
lea
push
push
mov
push
push
call
mov
push
push
call
cmp
je
mov
mov
mov
call
cmp
jne
mov
push
call
mov
xor
mov
xor
mov
jmp
mov
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
cmp
jne
xor
xor
mov
mov
cmp
je
mov
mov
mov
mov
xor
call
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
add
call
mov
mov
mov
mov
mov
mov
call
cmp
jne
mov
mov
cmp
jne
mov
sub
lea
mov
mov
call
mov
sub
cmp
jne
jmp
cmp
jne
mov
mov
mov
sub
mov
lea
mov
mov
call
cmp
jne
mov
mov
movzx
mov
movzx
mov
mov
mov
mov
mov
mov
movzx
movzx
imul
call
mov
mov
mov
mov
mov
mov
cdq
xor
sub
mov
mov
call
mov
imul
mov
push
push
call
mov
xor
mov
mov
cmp
ja
mov
test
jbe
mov
shl
jmp
mov
mov
shl
mov
shl
jmp
mov
sub
je
mov
cmp
jne
mov
test
jbe
sub
cmp
je
mov
add
sub
jae
test
jne
mov
mov
call
mov
test
je
cmp
ja
sub
cmp
jne
mov
lea
mov
mov
mov
call
cmp
jne
jmp
mov
add
mov
test
jbe
mov
mov
mov
mov
call
cmp
jne
sub
add
test
ja
test
jbe
mov
mov
mov
mov
call
cmp
je
mov
mov
call
test
ja
mov
mov
jmp
mov
mov
call
push
mov
mov
call
pop
sub
mov
call
mov
mov
mov
call
mov
mov
cmp
jge
mov
mov
call
sub
cmp
jb
mov
sub
mov
mov
mov
call
mov
mov
cmp
jle
mov
mov
mov
mov
mov
call
cmp
jne
cmp
jge
mov
sub
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
mov
call
mov
push
call
pop
test
jne
mov
xor
mov
call
mov
call
mov
pop
ret
nop
push
push
mov
mov
call
je
mov
call
push
mov
xor
call
xor
mov
movzx
cmp
jg
mov
shl
push
lea
cmp
je
add
push
push
add
push
mov
push
xor
mov
mov
push
mov
call
pop
add
xor
pop
jne
mov
cmp
je
add
add
push
mov
call
pop
xor
jne
mov
mov
mov
push
call
pop
xor
pop
je
xchg
xor
call
pop
pop
ret
push
push
push
mov
mov
mov
cmp
je
mov
call
mov
call
mov
add
mov
shl
add
mov
pop
pop
pop
ret
cmp
je
mov
call
ret
mov
push
mov
cmp
je
cmp
jne
xor
pop
ret
mov
movzx
call
mov
cmp
je
mov
cmp
jne
lea
add
cmp
jne
add
add
cmp
jne
mov
jmp
mov
cmp
jne
lea
add
cmp
jne
add
add
cmp
jne
mov
jmp
mov
pop
ret
mov
test
je
cmp
sete
test
setne
or
btr
ja
or
mov
test
je
call
jne
ret
test
setne
test
setne
or
test
setne
or
je
test
setne
and
jne
cmp
je
push
mov
call
pop
xor
or
xor
ret
push
push
push
push
push
sub
mov
and
or
lea
call
mov
mov
mov
jmp
mov
mov
shr
or
and
je
movzx
bt
jae
test
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
movsx
movzx
loop
mov
sub
add
mov
add
add
jmp
loop
mov
sub
add
mov
add
add
jmp
loop
mov
sub
sub
mov
add
sub
add
add
mov
sub
mov
add
mov
jmp
loop
mov
sub
sub
mov
add
sub
add
add
mov
sub
mov
add
mov
jmp
loop
mov
sub
mov
mov
sub
mov
mov
add
mov
add
mov
mov
cmp
jle
mov
mov
cmp
jle
mov
mov
sub
mov
sub
or
mov
sub
sub
mov
sub
sub
or
je
and
or
or
je
mov
mov
call
test
je
mov
call
test
je
add
dec
jge
shr
jne
and
add
pop
pop
pop
pop
ret
nop
mov
test
jne
cmp
je
mov
call
ret
push
push
mov
mov
call
mov
mov
pop
pop
ret
push
mov
push
push
push
mov
mov
xor
push
push
push
mov
mov
cmp
je
mov
call
lea
mov
xor
call
mov
call
push
push
mov
movzx
push
push
call
jmp
push
lea
mov
call
mov
push
mov
call
push
mov
call
mov
inc
pop
pop
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
call
xor
pop
pop
pop
pop
ret
nop
push
mov
add
push
mov
mov
mov
mov
xor
mov
mov
mov
xor
cmp
je
mov
lea
push
xor
mov
movzx
or
push
push
push
call
xor
mov
mov
mov
test
sete
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
mov
call
mov
push
mov
push
mov
or
mov
call
mov
mov
call
mov
pop
pop
pop
pop
pop
ret
lea
cmp
jl
pusha
mov
mov
mov
jecxz
mov
mov
jecxz
mov
shr
call
dec
js
push
push
xor
cmp
je
mov
mov
jecxz
mov
mov
xchg
mov
call
pop
pop
test
je
mov
call
popa
mov
ret
xor
inc
cmp
je
mov
call
popa
xor
ret
nop
push
push
mov
mov
mov
call
mov
test
jl
mov
mov
call
mov
mov
call
mov
mov
call
xor
mov
call
pop
pop
ret
ret
lea
xor
call
ret
push
push
mov
mov
test
je
call
mov
test
jl
mov
mov
call
mov
mov
call
pop
pop
ret
lea
push
mov
mov
cmp
je
mov
mov
mov
call
pop
ret
mov
mov
mov
call
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
xor
push
push
push
mov
lea
mov
mov
call
xor
mov
xor
mov
cmp
je
mov
test
je
cmp
je
lea
mov
call
mov
call
lea
push
mov
call
lea
mov
call
mov
test
je
cmp
je
lea
mov
call
mov
mov
dec
je
dec
jne
or
jmp
or
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
xor
cmp
je
mov
call
call
push
mov
call
call
push
call
mov
push
lea
push
mov
call
push
mov
call
push
mov
call
push
call
mov
cmp
je
push
mov
call
mov
push
call
mov
sub
mov
xor
mov
mov
sub
jb
sub
jne
xor
mov
mov
mov
call
mov
add
cmp
je
mov
add
mov
call
mov
mov
call
movsx
cmp
jge
movsx
mov
call
mov
mov
test
je
sub
je
sub
jne
xor
mov
mov
mov
call
mov
add
cmp
je
mov
add
mov
call
mov
mov
call
movsx
cmp
jge
movsx
mov
call
mov
test
je
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
test
je
mov
mov
call
jmp
mov
mov
mov
pop
pop
ret
push
mov
call
cmp
ja
and
bt
setb
pop
ret
mov
push
push
push
mov
mov
mov
call
mov
mov
call
mov
mov
pop
pop
pop
ret
lea
push
push
push
push
call
ret
nop
push
push
add
mov
mov
mov
mov
xor
mov
mov
call
mov
mov
push
push
push
push
call
add
pop
pop
ret
nop
push
push
mov
mov
mov
call
mov
mov
mov
call
pop
pop
ret
nop
push
push
push
push
push
mov
xchg
mov
mov
mov
call
test
jne
cmp
jne
mov
dec
cmp
ja
xchg
mov
shl
mov
cmp
je
cmp
jne
mov
test
jne
mov
test
je
push
xor
mov
mov
mov
call
test
je
cmp
jne
mov
call
test
je
mov
call
test
je
cmp
jne
mov
jecxz
test
je
cmp
je
xor
cmp
jne
mov
or
je
mov
jecxz
mov
and
cmp
jne
mov
call
test
jne
xor
cmp
mov
mov
jne
test
je
mov
pop
jecxz
mov
xchg
shr
cmp
jne
mov
call
pop
pop
push
push
push
push
call
xor
and
and
inc
push
push
jmp
xor
pop
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
add
cmp
je
cmp
jne
add
cmp
jne
not
and
mov
or
cmp
je
call
test
je
xchg
mov
shr
sbb
and
mov
cmp
je
mov
xchg
call
xchg
mov
and
or
call
test
mov
mov
je
mov
cmp
je
mov
mov
mov
mov
mov
jmp
lea
lea
movs
movs
mov
pop
pop
pop
ret
lea
push
push
push
push
call
ret
push
push
push
mov
push
call
ret
push
push
xor
cmp
jne
mov
and
cmp
jne
cmp
je
mov
mov
call
mov
cmp
je
push
push
mov
call
push
mov
call
push
mov
call
push
push
mov
mov
push
call
mov
pop
pop
ret
push
push
push
mov
mov
xor
mov
sub
jne
mov
dec
je
sub
je
jmp
mov
push
call
test
je
mov
jmp
mov
push
call
test
je
mov
jmp
mov
jmp
mov
test
je
and
push
mov
push
call
mov
xor
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
pop
pop
ret
push
push
push
mov
mov
cmp
jne
mov
mov
cmp
jne
push
call
cmp
sbb
inc
mov
cmp
je
or
test
jne
mov
mov
mov
call
jmp
and
test
je
mov
mov
mov
call
mov
call
xor
pop
pop
pop
ret
nop
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
call
pop
pop
ret
push
mov
push
push
mov
lea
movs
movs
movs
movs
pop
pop
pop
ret
lea
mov
call
ret
nop
push
mov
mov
lods
cmp
jg
lods
cmp
jg
lods
cmp
jg
lods
cmp
setle
pop
ret
mov
push
mov
push
push
mov
mov
xor
inc
je
lods
test
jge
not
test
je
dec
test
je
or
shr
loop
xchg
pop
pop
mov
pop
ret
lea
call
je
push
mov
call
pop
ret
mov
test
je
sub
jge
mov
push
ret
push
call
pop
xor
call
ret
nop
push
push
xchg
mov
test
jne
call
mov
mov
xor
pop
call
xchg
xor
mov
call
pop
ret
nop
push
mov
push
xchg
mov
test
jne
call
mov
xor
mov
mov
call
xchg
xor
mov
call
pop
pop
ret
push
xchg
mov
jecxz
xchg
push
call
test
pop
xchg
jl
push
and
xor
mov
call
pop
mov
inc
loop
lea
call
pop
ret
mov
push
call
pop
call
ret
lea
cmp
jge
mov
cmp
je
mov
shl
lea
call
ret
push
xor
mov
mov
mov
pop
call
ret
lea
test
jl
cmp
jge
mov
mov
ret
xor
ret
nop
push
push
mov
xchg
xor
xchg
jecxz
push
xchg
mov
call
test
jne
mov
call
push
push
push
push
call
pop
xor
mov
mov
call
xchg
call
pop
pop
ret
cmp
je
push
xchg
inc
mov
mov
call
jmp
call
mov
call
movzx
jecxz
mov
xchg
pop
jecxz
call
ret
lea
mov
jecxz
mov
cmp
xchg
je
xchg
xchg
mov
test
jne
push
mov
call
push
call
pop
mov
ret
push
push
call
xchg
pop
jecxz
xchg
call
mov
xchg
call
pop
ret
mov
mov
call
mov
mov
mov
mov
ret
lea
mov
mov
call
mov
mov
mov
mov
mov
push
lea
mov
xor
mov
call
pop
ret
nop
btr
jae
and
push
call
ret
call
xchg
ror
xchg
shr
ret
mov
shr
and
mov
shr
and
mov
and
or
or
ret
nop
test
jne
call
xor
ret
push
mov
test
jne
xchg
call
cmp
je
push
xchg
mov
jecxz
cmp
je
mov
call
lea
lea
mov
call
mov
call
xchg
pop
pop
ret
lea
xor
xchg
jecxz
push
push
call
call
pop
mov
jecxz
push
xchg
mov
call
pop
ret
mov
push
cmp
je
mov
jecxz
push
call
pop
push
mov
jecxz
push
call
pop
call
ret
mov
push
call
pop
xor
xchg
ret
lea
lea
cmp
je
mov
call
ret
mov
and
mov
cmp
setge
add
or
shr
or
shr
or
ret
nop
push
mov
push
call
pop
cmp
je
push
lea
mov
shr
jae
cmp
jge
mov
jmp
cmp
jl
xor
xchg
stos
shr
setb
stos
shr
setb
stos
shr
setb
stos
pop
call
pop
ret
lea
push
xchg
mov
jecxz
mov
call
cmp
je
mov
call
push
call
mov
inc
loop
mov
jecxz
lea
lea
mov
call
test
mov
jne
mov
call
mov
xchg
call
xchg
xchg
pop
ret
mov
push
xchg
mov
test
jne
mov
call
xor
mov
push
jecxz
mov
jmp
mov
mov
sub
jl
xchg
mov
call
xor
mov
push
push
push
call
mov
add
pop
ret
mov
push
mov
mov
jecxz
mov
call
push
mov
call
mov
call
push
call
mov
cmp
mov
mov
mov
jne
push
push
call
push
push
jmp
push
push
call
not
push
push
call
call
pop
ret
mov
jecxz
mov
xor
jmp
ret
mov
push
mov
mov
jecxz
mov
push
call
xchg
call
push
mov
call
mov
call
push
mov
call
push
call
pop
ret
mov
jecxz
mov
mov
call
push
jmp
ret
nop
mov
jecxz
push
mov
mov
movzx
inc
push
mov
call
push
mov
call
mov
call
push
mov
call
push
call
pop
ret
mov
push
push
push
lea
mov
test
je
movzx
and
je
push
lea
mov
inc
loop
mov
push
call
stos
push
call
stos
push
call
stos
lea
pop
lods
push
push
lods
push
push
lods
push
push
mov
call
call
call
and
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
mov
test
je
call
and
test
je
call
test
je
mov
not
and
je
test
je
mov
call
test
je
mov
call
mov
jcxz
mov
dec
sub
jb
test
je
mov
call
or
mov
pop
pop
pop
ret
push
push
mov
mov
mov
cmp
je
jecxz
push
call
pop
mov
jecxz
cmp
je
cmp
jne
push
push
call
jmp
cmp
jne
push
call
xor
mov
mov
and
test
je
or
mov
lea
mov
call
pop
pop
ret
mov
mov
mov
mov
call
ret
lea
pusha
mov
jecxz
xchg
mov
call
popa
ret
mov
push
push
push
push
push
call
push
call
ret
nop
push
mov
push
mov
push
call
pop
mov
xor
mov
mov
cmp
je
mov
call
pop
pop
ret
mov
inc
loop
push
call
pop
push
mov
mov
mov
mov
jecxz
push
mov
mov
pop
test
je
call
pop
xchg
ret
cmp
mov
mov
je
mov
push
call
xchg
pop
push
call
pop
ret
nop
push
lea
mov
mov
lods
test
je
mov
mov
dec
jne
pop
ret
lea
test
pushf
jge
neg
push
call
pop
popf
jge
mov
call
ret
lea
push
xchg
push
call
pop
call
push
call
pop
xchg
jecxz
lods
sub
cmp
jae
add
loop
pop
ret
nop
push
xchg
push
call
pop
call
push
call
pop
xchg
jecxz
lods
sub
cmp
jae
sub
loop
pop
ret
nop
test
je
push
call
pop
push
call
pop
ret
nop
push
mov
call
mov
pop
call
call
ret
mov
xor
push
mov
shr
and
jne
mov
push
mov
push
push
mov
push
mov
push
push
call
ret
mov
push
call
test
setne
ret
push
push
mov
push
push
push
push
push
call
test
pop
jne
xor
pop
ret
lea
push
push
mov
push
push
push
push
push
call
test
pop
jne
xor
pop
ret
push
push
push
call
xchg
call
inc
je
dec
and
setne
xchg
push
call
xchg
pop
ret
lea
lea
call
add
pusha
xor
xchg
call
popa
ret
nop
push
mov
call
lea
call
xchg
call
pop
ret
mov
jecxz
mov
xchg
ret
mov
push
push
call
pop
call
pop
call
ret
xor
xchg
jecxz
xchg
call
ret
mov
push
xchg
mov
call
mov
mov
xchg
mov
call
mov
xchg
pop
ret
mov
push
xchg
mov
call
mov
mov
xchg
mov
call
mov
xchg
pop
ret
nop
push
lea
push
lea
call
pop
call
pop
call
ret
mov
push
push
push
call
pop
cmp
mov
jb
push
lea
xor
lods
mov
xor
mov
cmp
jb
ja
inc
movs
loop
jmp
lods
sub
sub
push
movzx
xor
rep
pop
inc
loop
pop
pop
pop
ret
nop
mov
mov
xor
call
ret
push
mov
push
push
push
mov
mov
push
mov
call
xchg
pop
mov
cmp
jb
movzx
push
mov
jecxz
xchg
push
call
pop
jmp
mov
call
mov
pop
mov
mov
xchg
mov
call
test
je
mov
mov
lea
lea
movs
movs
lods
xchg
xor
push
call
stos
pop
xchg
jecxz
mov
mov
mov
mov
mov
call
mov
mov
call
lods
xchg
xor
push
call
stos
pop
xchg
jecxz
mov
mov
mov
mov
mov
call
mov
mov
call
movs
lods
add
lods
test
je
mov
and
and
or
stos
xchg
pop
pop
pop
pop
ret
nop
push
push
mov
mov
push
call
mov
or
mov
call
mov
mov
call
pop
mov
call
or
xchg
pop
ret
nop
push
push
push
push
mov
mov
call
xchg
mov
mov
add
mov
mov
or
pop
mov
call
mov
mov
call
mov
mov
call
xchg
pop
ret
lea
call
mov
add
mov
mov
mov
ret
nop
push
mov
test
je
push
push
xchg
or
inc
mov
cmp
jge
mov
call
test
je
test
je
cmp
push
sete
push
call
pop
cmp
pop
je
call
jmp
pop
pop
pop
ret
nop
push
push
mov
call
xchg
mov
mov
test
je
bts
jne
mov
call
xchg
pop
pop
ret
mov
cmp
jne
mov
push
push
mov
mov
call
test
jne
push
push
call
mov
call
push
push
call
xor
push
push
push
push
call
sub
push
push
call
mov
call
mov
push
push
push
call
add
pop
pop
xor
ret
nop
push
xchg
push
mov
xor
mov
mov
call
xchg
pop
push
test
jne
and
or
push
push
mov
xchg
call
xchg
mov
lea
mov
add
mov
mov
add
mov
pop
test
mov
je
add
add
mov
or
test
je
and
mov
xchg
pop
ret
mov
push
push
mov
call
cmp
jge
mov
cmp
jle
xor
mov
xor
push
push
push
push
push
mov
call
pop
inc
imul
inc
inc
push
mov
call
push
inc
xor
push
push
push
push
call
dec
je
mov
mov
mov
mov
call
pop
pop
ret
mov
push
push
push
mov
mov
xor
mov
call
pop
xchg
pop
push
push
mov
or
test
jne
or
call
mov
mov
mov
mov
or
add
add
mov
pop
test
je
mov
mov
push
mov
call
pop
ret
lea
or
mov
jecxz
push
mov
call
pop
mov
call
ret
push
push
mov
mov
call
lea
mov
add
mov
mov
add
mov
xor
mov
mov
mov
mov
ret
lea
push
call
pop
xor
shr
jae
mov
shr
jae
inc
or
ret
cmp
jne
push
push
push
mov
push
push
call
pop
pop
test
je
cmp
je
mov
mov
pop
jmp
pop
xor
ret
nop
cmp
jne
push
mov
mov
xor
cmp
je
cmp
jne
mov
and
or
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
xchg
call
pop
xor
ret
nop
pusha
xchg
mov
movzx
jecxz
mov
xor
mov
xor
mov
mov
call
test
je
call
push
push
push
push
call
inc
shr
je
cmp
jge
xor
jmp
popa
ret
mov
pusha
xchg
push
mov
mov
xor
mov
call
pop
push
mov
and
or
movzx
or
mov
call
mov
mov
xor
mov
call
pop
push
push
push
push
call
popa
call
ret
mov
push
mov
push
push
movzx
mov
or
mov
push
push
call
mov
mov
mov
push
xchg
mov
xor
mov
call
xchg
pop
mov
and
or
mov
pop
pop
mov
mov
add
add
mov
xor
pusha
call
popa
mov
mov
pusha
call
popa
mov
add
push
call
pop
mov
xor
inc
mov
pop
ret
pusha
call
test
popa
je
mov
call
mov
mov
ret
call
ret
mov
inc
loop
push
call
test
mov
jne
inc
mov
ret
mov
push
push
mov
call
xor
cmp
jne
mov
movzx
and
mov
mov
loop
mov
mov
mov
movzx
shr
mov
mov
loop
mov
mov
mov
or
dec
mov
mov
inc
or
lea
mov
call
stos
call
stos
pop
pop
ret
push
push
mov
call
pop
pop
test
je
mov
mov
call
ret
mov
push
push
mov
call
xchg
jecxz
mov
xor
jne
mov
mov
jecxz
push
push
call
mov
call
bts
jb
xor
xchg
call
mov
call
mov
test
je
mov
jecxz
inc
je
test
jne
dec
push
call
push
call
test
je
push
push
push
call
push
call
xor
mov
push
test
je
push
mov
jecxz
push
pop
jecxz
xchg
call
jmp
xor
xchg
jecxz
push
call
mov
jecxz
cmp
jne
xor
mov
push
mov
mov
call
pop
mov
call
lea
lods
call
lods
call
lea
call
xchg
call
pop
pop
ret
lea
push
mov
movzx
push
call
pop
cmp
je
test
jne
or
jmp
and
mov
jecxz
push
push
call
xchg
call
pop
ret
nop
push
push
xchg
xor
mov
sub
cmp
ja
push
pusha
push
call
add
popa
xchg
mov
jae
or
push
mov
lea
call
push
mov
mov
mov
call
pop
pop
pop
mov
xchg
pop
pop
ret
icebp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
ret
inc
inc
inc
lods
lods
ret
add
ret
inc
inc
inc
add
ret
add
ret
push
push
push
push
xchg
mov
mov
xor
cmp
je
cmp
jne
mov
mov
xor
cmp
je
mov
jecxz
cmp
je
call
mov
call
mov
mov
call
movzx
cmp
jne
cmp
je
mov
call
test
je
push
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
push
push
push
call
xor
jmp
mov
mov
mov
push
mov
mov
call
test
pop
je
pop
jmp
cmp
jne
mov
mov
call
push
mov
call
jmp
cmp
jne
mov
and
cmp
jne
mov
call
test
je
cmp
je
push
push
push
mov
push
call
jmp
cmp
jne
mov
call
test
je
inc
mov
mov
call
dec
jmp
mov
sub
cmp
ja
push
push
add
push
push
call
jmp
cmp
jne
push
push
call
test
je
push
push
push
push
call
jmp
mov
sub
cmp
ja
call
cmp
jne
push
mov
mov
mov
call
test
jne
mov
mov
mov
call
test
pop
jne
push
call
xchg
push
call
or
js
cmp
jne
cmp
je
jmp
mov
call
test
je
mov
mov
cmp
setne
cmp
setne
and
mov
mov
call
test
je
xor
mov
jmp
mov
mov
call
jmp
xor
push
cmp
jne
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
cmp
je
mov
mov
jecxz
push
push
xor
push
push
push
push
push
push
push
push
push
call
call
pop
call
ret
lea
cmp
je
mov
mov
jecxz
push
push
xor
push
push
push
push
push
push
push
push
push
call
call
pop
call
ret
lea
push
mov
push
lea
call
pop
cmp
je
mov
mov
jecxz
test
je
mov
inc
loop
push
push
push
push
call
mov
mov
mov
call
add
mov
mov
call
mov
lea
call
add
test
je
call
push
pop
pop
ret
nop
cmp
je
mov
inc
je
dec
push
push
push
push
call
test
je
push
call
ret
nop
push
ret
push
xchg
lea
call
mov
jecxz
push
push
push
push
call
test
jne
mov
call
xchg
pop
push
ret
lea
test
setne
ret
call
ret
mov
and
test
je
or
mov
jecxz
push
je
call
pop
push
push
call
ret
and
push
push
call
pop
call
ret
mov
or
call
ret
mov
push
push
lea
mov
push
movs
movs
movs
movs
pop
xchg
mov
jecxz
push
push
call
test
je
mov
call
test
je
xor
push
push
push
push
call
pop
neg
pop
neg
push
push
push
call
xchg
lea
movs
movs
movs
movs
pop
pop
ret
mov
pop
add
mov
push
push
call
pop
ret
nop
push
mov
push
mov
call
mov
mov
call
test
jne
pop
pop
pop
push
push
push
sub
cmp
jne
cmp
je
or
push
mov
sub
push
push
lea
movs
movs
movs
movs
mov
pop
mov
jecxz
std
push
lods
lods
xchg
lods
xchg
lods
sub
push
xchg
lods
cld
sub
push
push
push
push
push
call
pop
pop
test
je
xchg
call
add
pop
pop
ret
push
mov
call
mov
mov
call
push
call
xchg
call
pop
ret
lea
push
push
mov
mov
movs
movs
push
mov
jecxz
push
call
push
pop
pop
pop
ret
lea
push
xchg
push
push
lea
xor
mov
call
mov
call
xchg
jecxz
push
call
push
pop
pop
lea
lods
movsx
add
lods
movsx
sub
lods
movsx
add
lods
movsx
sub
pop
ret
lea
mov
jecxz
push
push
push
call
ret
nop
push
xchg
mov
inc
je
dec
jne
mov
jecxz
cmp
je
xchg
call
test
je
xor
push
push
push
inc
push
push
call
jmp
dec
inc
dec
dec
dec
inc
dec
dec
add
mov
push
xchg
inc
add
add
inc
add
pop
ret
push
push
push
mov
jecxz
push
push
call
ret
push
call
ret
push
mov
call
test
je
inc
push
call
dec
mov
pop
ret
mov
jecxz
push
call
ret
test
sete
ret
xchg
xor
mov
test
jne
test
jmp
cmp
je
push
call
pop
cmp
sete
ret
push
push
xchg
mov
mov
cmp
je
jecxz
push
mov
mov
call
pop
push
mov
call
pop
mov
xor
call
mov
test
je
mov
mov
call
mov
mov
call
mov
jecxz
mov
call
push
push
call
mov
mov
mov
call
mov
mov
mov
call
xchg
call
pop
pop
ret
call
je
push
mov
mov
call
pop
ret
lea
call
pop
pop
pop
pop
ret
mov
push
push
call
pop
pop
pop
sub
mov
add
push
push
push
mov
call
add
pop
ret
lea
call
pop
pop
pop
pop
ret
mov
push
push
push
call
pop
pop
pop
pop
sub
pop
add
push
push
push
push
mov
call
add
pop
pop
ret
mov
call
pop
pop
pop
sub
pop
ret
push
call
pop
push
add
mov
mov
call
add
ret
nop
call
pop
pop
pop
pop
sub
ret
push
call
mov
add
mov
mov
call
add
ret
lea
push
mov
push
call
xchg
pop
jecxz
mov
movzx
jecxz
push
xchg
push
call
pop
push
push
push
push
call
pop
cmp
je
mov
xor
xchg
jecxz
push
push
call
pop
mov
jecxz
xchg
mov
xor
call
xchg
call
pop
ret
lea
xchg
test
mov
mov
jecxz
push
je
xchg
call
pop
mov
ret
push
xchg
add
mov
push
xor
push
push
push
push
call
test
je
cmp
jne
or
jmp
mov
xchg
mov
call
test
jne
mov
push
push
call
call
cmp
setne
add
pop
ret
nop
push
call
dec
pop
je
ret
cmp
jne
push
push
xor
inc
xchg
mov
jecxz
jecxz
xchg
push
call
test
pop
je
push
call
inc
dec
mov
jecxz
cmp
je
mov
xchg
pop
pop
ret
xor
ret
mov
push
xchg
sub
xchg
mov
push
push
mov
call
pop
jecxz
add
mov
pop
jecxz
add
mov
mov
mov
call
add
xchg
pop
ret
mov
push
xchg
push
push
mov
mov
sub
cmp
ja
push
mov
call
xchg
push
push
call
test
je
push
push
call
push
call
jmp
mov
call
xchg
push
push
call
push
push
call
mov
call
xchg
pop
mov
mov
jmp
cmp
jne
push
movzx
mov
cmp
jne
cmp
jg
mov
mov
call
mov
call
jmp
mov
cmp
mov
lea
je
add
cmp
je
sub
cmp
jne
mov
mov
mov
call
jmp
cmp
jne
mov
call
xchg
mov
call
jmp
pop
xor
cmp
jne
mov
mov
call
test
je
push
mov
jecxz
cmp
je
xchg
mov
mov
xchg
mov
call
pop
mov
xor
push
pop
pop
pop
pop
ret
lea
push
call
pop
mov
mov
mov
call
ret
lea
test
je
mov
test
jne
ret
mov
mov
inc
loop
push
call
pop
push
push
xchg
call
pop
pop
mov
mov
mov
mov
mov
ret
xchg
ret
mov
mov
inc
loop
push
call
pop
mov
mov
mov
mov
mov
push
xchg
call
pop
xchg
ret
nop
mov
mov
push
call
pop
call
ret
nop
mov
mov
xor
xchg
jecxz
push
push
call
pop
call
ret
mov
push
xchg
mov
jecxz
xchg
mov
jecxz
mov
mov
push
call
push
push
push
call
xor
xchg
jecxz
xchg
call
xchg
call
pop
ret
add
mov
call
pop
pop
pop
pop
sub
ret
lea
add
mov
call
pop
pop
pop
sub
pop
ret
lea
push
push
mov
call
push
mov
call
pop
sub
pop
add
xchg
call
pop
ret
nop
push
push
mov
call
push
mov
call
pop
sub
pop
add
xchg
call
pop
ret
nop
pusha
xchg
mov
jecxz
test
jne
push
call
push
push
call
push
push
push
jmp
add
mov
xchg
call
mov
call
mov
call
pop
add
pop
pop
sub
sar
mov
call
mov
call
add
pop
sub
sar
xchg
call
popa
ret
mov
call
mov
and
setne
mov
and
setne
or
ret
nop
test
sete
ret
push
mov
call
cmp
je
shl
and
or
xchg
mov
call
pop
ret
mov
mov
jecxz
push
xchg
push
push
push
push
push
push
call
mov
call
mov
call
mov
xchg
pop
ret
nop
test
je
test
setne
ret
push
push
push
push
call
ret
lea
test
je
shl
and
or
jmp
push
movzx
push
push
push
call
ret
mov
push
push
and
call
pop
pop
ret
mov
mov
movzx
jecxz
xor
push
push
lea
push
push
push
call
pop
xchg
ret
xor
mov
movzx
jecxz
cmp
jne
push
push
mov
push
add
push
push
push
call
pop
pop
sub
xchg
ret
push
push
push
push
call
ret
mov
push
mov
movzx
jecxz
push
push
push
call
push
pop
ret
nop
push
push
mov
movzx
jecxz
push
push
call
ret
pop
mov
movzx
jecxz
pop
push
jmp
mov
movzx
jecxz
push
jmp
mov
call
pop
ret
mov
movzx
jecxz
push
push
push
push
push
call
pop
pop
ret
mov
push
xchg
push
mov
xor
lods
test
je
cmp
jne
test
je
test
jne
mov
push
xchg
call
xchg
pop
cmp
jne
push
push
call
pop
and
or
add
sbb
add
inc
xchg
call
mov
pop
pop
ret
or
and
test
add
mov
or
add
rcr
ret
mov
push
call
test
je
mov
pop
ret
nop
push
xchg
mov
mov
movzx
jecxz
xor
cdq
cmp
jne
inc
inc
jmp
cmp
jne
dec
push
push
push
push
call
pop
ret
mov
movzx
jecxz
push
push
push
push
push
push
call
pop
pop
cmp
jne
mov
push
push
push
push
push
push
push
call
add
ret
inc
call
ret
nop
mov
jecxz
push
xchg
mov
push
call
pop
mov
pop
xchg
ret
mov
inc
loop
call
push
call
ret
push
push
mov
call
mov
test
jne
xor
call
mov
mov
mov
mov
xchg
mov
jecxz
mov
mov
call
mov
mov
jecxz
mov
mov
call
mov
xchg
pop
pop
ret
test
jne
shl
and
or
mov
call
lea
mov
ret
mov
mov
jecxz
and
test
je
or
push
xchg
call
pop
mov
call
ret
push
call
pop
call
ret
lea
mov
mov
push
call
pop
ret
lea
push
xchg
mov
dec
jl
push
mov
call
pop
jmp
xor
mov
xchg
test
je
call
xor
xchg
call
pop
ret
dec
push
mov
mov
push
call
pop
pop
mov
jecxz
cmp
jb
add
cmp
jb
call
ret
nop
push
mov
test
je
call
xchg
pop
jmp
ret
lea
push
push
push
xchg
mov
test
jne
call
mov
pop
push
call
inc
push
call
mov
xchg
pop
pop
push
test
je
call
pop
pop
mov
call
inc
pop
ret
push
call
pop
mov
ret
nop
push
mov
push
push
push
mov
call
push
call
pop
ret
mov
mov
mov
ret
nop
push
mov
push
push
push
mov
shr
jne
mov
inc
mov
and
push
push
call
mov
add
pop
jae
call
pop
ret
mov
push
mov
mov
mov
jecxz
mov
call
xor
pop
ret
mov
push
xor
call
pop
call
dec
jne
xor
xchg
call
ret
push
xchg
cmp
je
mov
test
je
mov
inc
loop
inc
mov
xor
push
call
mov
mov
or
xchg
push
push
push
xchg
call
push
call
mov
pop
ret
xor
xchg
jecxz
push
mov
push
call
pop
ret
lea
push
push
push
push
mov
call
mov
xchg
xor
mov
stos
pop
stos
pop
stos
xor
inc
stos
pop
stos
xchg
pop
ret
lea
push
mov
xor
xchg
inc
lods
cmp
je
test
jne
xchg
pop
ret
mov
push
push
mov
mov
mov
xor
call
mov
mov
mov
pop
pop
ret
nop
push
push
call
pop
pop
push
inc
jecxz
test
je
push
push
push
push
push
call
push
xchg
call
pop
mov
push
push
call
pop
pop
ret
mov
add
xchg
mov
xor
mov
call
ret
nop
push
push
push
push
call
xchg
pop
pop
pop
test
je
test
je
push
movzx
jmp
movzx
movzx
jecxz
mov
cmp
pop
pushf
call
mov
popf
jne
call
mov
call
mov
mul
mov
add
push
push
call
mov
xchg
pop
ret
mov
push
mov
call
xor
xchg
jecxz
push
call
xor
mov
xchg
jecxz
cmp
jne
push
call
xor
xchg
jecxz
xchg
call
xor
mov
mov
mov
xchg
pop
call
ret
lea
push
call
pop
push
call
pop
xor
mov
mov
mov
ret
mov
push
call
pop
call
ret
lea
push
mov
push
push
push
push
mov
call
je
mov
jecxz
add
push
push
push
call
test
mov
jne
mov
add
call
push
push
push
push
call
call
call
jmp
xchg
push
push
push
push
jmp
mov
jecxz
mov
test
jge
neg
push
push
push
push
push
push
push
push
call
call
test
jne
mov
call
test
xchg
jne
pop
pop
mov
pop
ret
lea
push
push
push
mov
push
push
mov
call
je
mov
jecxz
call
push
push
push
push
push
push
call
call
call
jmp
pop
mov
mov
mov
sub
push
mov
mov
sub
push
push
push
push
jmp
mov
jecxz
push
push
push
push
push
push
push
push
call
call
test
jg
mov
call
mov
jecxz
jmp
mov
pop
pop
pop
ret
nop
push
mov
push
mov
inc
mov
jne
xchg
call
jmp
add
push
mov
add
push
push
push
mov
push
call
mov
pop
ret
push
mov
push
xchg
mov
inc
mov
jne
call
jmp
push
push
call
test
je
mov
call
mov
jecxz
cmp
je
mov
inc
loop
xor
call
mov
mov
push
mov
call
pop
mov
call
mov
call
pop
pop
push
xchg
call
jmp
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
push
call
test
je
push
call
push
push
push
call
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
mov
call
push
mov
call
push
push
call
push
push
push
call
push
push
mov
call
push
mov
call
push
call
push
call
mov
call
call
call
call
stc
jb
pop
push
push
xor
push
push
push
push
push
push
push
push
jmp
pop
push
push
push
push
push
mov
mov
mov
sub
push
mov
mov
sub
push
push
push
push
call
jmp
pop
pop
mov
pop
ret
lea
xor
xchg
jecxz
push
mov
push
call
ret
push
mov
call
je
mov
call
test
je
mov
inc
loop
mov
xor
call
mov
mov
mov
call
xor
mov
jecxz
call
mov
mov
inc
loop
push
mov
push
call
xchg
pop
call
mov
inc
loop
push
mov
call
push
call
mov
mov
mov
pop
ret
nop
push
mov
jecxz
mov
test
pop
sete
ret
push
xchg
call
xchg
pop
push
call
pop
call
ret
mov
push
mov
xor
call
mov
call
test
je
cmp
je
mov
push
push
push
call
mov
xchg
pop
call
xor
mov
xchg
pop
ret
push
mov
call
je
mov
push
call
pop
cmp
je
test
mov
jne
pop
inc
jmp
mov
xor
call
xchg
cmp
pop
jne
ret
mov
movzx
mov
mul
add
shr
and
ret
nop
push
call
pop
je
pusha
mov
call
xor
mov
mov
mov
mov
mov
mov
jecxz
mov
mov
mov
test
jge
neg
jmp
mov
jecxz
add
push
push
push
call
xchg
jecxz
mov
mov
add
push
call
push
cmp
jne
push
call
push
push
push
push
call
xchg
push
call
pop
push
push
push
call
push
push
push
push
push
mov
call
push
call
mov
push
push
push
push
call
call
add
mov
jecxz
push
call
push
push
push
push
push
push
push
call
jmp
mov
push
mov
xor
push
call
call
mov
call
mov
jmp
movzx
xchg
mov
movzx
jecxz
xor
mov
mov
call
push
cmp
jne
call
pop
push
call
mov
mul
push
push
push
call
push
push
push
push
mov
cmp
jle
mov
push
push
mov
call
push
push
call
mov
cmp
jle
mov
cmp
je
call
xor
push
mov
mov
push
push
push
push
push
push
call
xor
xchg
push
push
call
push
mov
xor
push
mov
call
push
call
mov
call
pop
pop
pop
mov
test
mov
jge
inc
mov
jecxz
pop
push
push
xchg
xchg
call
call
popa
ret
mov
mov
jecxz
mov
test
jl
sub
dec
mov
mov
inc
push
loop
push
call
pop
xchg
xchg
mul
pop
add
xchg
ret
mov
mov
jecxz
push
xchg
call
xchg
pop
mov
xchg
ret
nop
push
xchg
call
mov
pop
mov
call
ret
push
call
pop
mov
jecxz
call
push
call
ret
pusha
xchg
mov
mov
call
mov
or
je
call
je
mov
mov
mov
mov
movzx
mov
jecxz
dec
push
push
push
push
push
call
mov
test
xchg
je
jmp
xchg
mov
push
call
mov
xchg
pop
mov
call
mov
mov
push
push
push
call
mov
xchg
pop
mov
call
inc
popa
setne
ret
mov
push
call
pop
xor
xchg
call
ret
push
push
push
xchg
xchg
call
xchg
mov
call
xchg
xor
jecxz
mov
add
xor
push
dec
lods
xor
mov
shr
mov
add
mov
adc
cmp
jae
mov
pop
push
add
loop
xchg
pop
pop
pop
pop
pop
ret
mov
mov
jecxz
mov
inc
dec
xchg
ret
lea
push
call
pop
je
call
movzx
mov
loop
inc
ret
loop
mov
ret
loop
xor
inc
ret
xor
ret
mov
or
xor
xchg
xchg
call
ret
push
push
push
push
xchg
xchg
call
xchg
mov
call
cmp
jb
cmp
jb
bswap
shr
mov
cmp
jb
mov
cmp
jbe
mov
call
mov
mov
mov
call
push
xor
inc
mov
call
xor
cmp
jge
push
mov
call
xchg
mov
pop
push
call
xchg
mov
call
movzx
sub
mov
jne
cmp
jne
xor
push
mov
call
cmp
pop
je
inc
cmp
jb
xchg
mov
mov
inc
shr
mov
shr
cmp
sete
shl
or
mov
and
cmp
sete
shl
or
dec
dec
jne
stos
mov
inc
loop
jmp
loop
cmp
jne
xor
push
mov
call
cmp
pop
je
inc
jne
xchg
mov
mov
inc
cmp
sete
shl
or
dec
jne
stos
mov
inc
loop
jmp
loop
cmp
jne
xchg
push
call
pop
xchg
mov
cmp
sete
shl
or
dec
jne
stos
mov
add
loop
jmp
loop
cmp
jne
xchg
push
call
pop
xchg
mov
cmp
sete
shl
or
dec
jne
stos
mov
add
loop
jmp
loop
mov
push
mov
and
cmp
sete
shl
or
dec
jne
stos
mov
add
loop
pop
jmp
mov
and
cmp
sete
shl
or
dec
jne
stos
mov
add
loop
test
je
cmp
je
shl
dec
jne
stos
pop
inc
jmp
pop
push
xchg
call
pop
call
pop
pop
pop
pop
ret
mov
push
mov
push
push
call
pushf
or
popf
je
call
push
push
push
call
xchg
call
xchg
pop
pop
pop
ret
nop
push
mov
push
mov
push
push
call
je
call
mov
call
push
push
push
push
call
call
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
call
mov
shr
add
adc
cmp
setge
and
shl
pop
pop
imul
pop
add
pop
push
mov
shr
add
and
mov
shr
and
pop
shr
or
pop
ret
mov
push
mov
xchg
push
push
mov
inc
xchg
cdq
div
xchg
pop
mov
imul
add
add
push
mov
mov
call
pop
pop
push
mov
and
sub
mov
movzx
mul
xchg
mov
shl
not
and
pop
shl
or
pop
ret
push
mov
add
add
push
push
mov
imul
push
mov
call
pop
pop
xor
sub
je
mov
shr
shr
mov
and
shr
jmp
and
mov
shr
mov
and
shr
mov
and
or
pop
mov
pop
ret
lea
push
mov
push
push
mov
mul
pop
add
pop
push
imul
pop
add
push
mov
call
pop
and
or
pop
ret
mov
push
mov
cmp
jne
pusha
mov
xor
cmp
jne
call
mov
xor
inc
mov
call
sub
mov
mov
call
movzx
mov
mov
mov
loop
mov
loop
loop
dec
mov
loop
dec
inc
loop
inc
mov
loop
dec
dec
inc
loop
inc
mov
mov
mov
mov
test
popa
jne
push
call
jmp
push
call
pop
ret
lea
push
mov
test
je
test
je
test
je
call
push
mov
jecxz
cmp
je
mov
mov
mov
mov
jecxz
xchg
call
jmp
push
call
pop
mov
xchg
call
push
call
pop
ret
xchg
call
push
call
pop
ret
nop
push
push
push
xchg
mov
mov
mov
mov
call
test
jge
mov
push
mov
call
pop
pop
push
call
mov
call
pop
pop
pop
ret
nop
test
setne
test
setne
or
test
je
mov
jecxz
test
je
xchg
push
call
pop
call
xchg
xchg
ret
nop
movsx
inc
jne
call
xchg
xor
test
xchg
jl
mov
cmp
je
inc
sub
je
inc
dec
je
inc
dec
je
inc
cmp
je
inc
jmp
cmp
jb
inc
cmp
jb
inc
cmp
jb
inc
mov
ret
or
mov
test
jne
and
or
push
call
pop
ret
nop
arpl
arpl
xor
add
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
add
or
dec
add
xor
call
mov
push
push
call
xchg
pop
jecxz
push
push
push
call
pop
pop
ret
mov
push
lea
xor
mov
push
push
push
call
pop
pop
pop
je
call
pop
push
call
pop
ret
nop
push
xchg
call
push
push
xchg
call
xchg
push
push
push
call
push
call
pop
ret
lea
call
push
xchg
xor
test
je
lods
cmp
jne
lods
test
je
sub
cmp
jbe
sub
cmp
jbe
sub
cmp
ja
add
shl
add
jmp
xchg
pop
ret
lea
xor
push
add
push
lea
push
cmp
pushf
jge
neg
mov
dec
xor
div
add
mov
test
jne
popf
jge
dec
mov
pop
mov
call
pop
add
ret
nop
push
mov
push
push
push
mov
mov
mov
mov
fld
ficom
fstsw
sahf
jb
fidiv
fst
fwait
test
je
and
jmp
add
add
add
retf
shl
ret
add
push
mov
fld
call
push
push
fild
pop
pop
mov
call
fsubrp
fimul
call
test
je
xor
mov
cdq
idiv
test
je
mov
shl
add
push
mov
inc
jmp
shl
add
push
mov
mov
call
add
sub
push
push
mov
mov
rep
pop
pop
call
mov
pop
pop
pop
pop
ret
lea
xchg
xor
test
je
xor
mov
inc
cmp
pushf
je
cmp
jne
mov
inc
sub
cmp
ja
lea
lea
jmp
popf
jne
neg
ret
call
call
ret
nop
push
push
push
call
pop
test
jg
xor
inc
sub
mov
pop
jge
pop
jl
inc
call
ret
lea
call
push
mov
call
pop
je
lea
sub
ret
nop
push
push
push
call
mov
or
mov
jecxz
lods
xchg
pop
push
push
call
pop
test
jle
test
jle
cmp
jge
xchg
loop
xchg
pop
pop
pop
ret
lea
push
push
push
mov
xchg
mov
call
xchg
test
jg
mov
call
xchg
inc
xor
inc
push
push
mov
dec
mov
call
xchg
mov
pop
call
pop
pop
pop
ret
nop
test
je
xchg
xor
mov
push
push
mov
or
je
mov
cmp
je
cmp
jne
dec
inc
cmp
je
cmp
sete
jmp
cmp
je
cmp
jne
inc
inc
jmp
cmp
jne
inc
cmp
je
call
test
jne
mov
inc
jmp
mov
xor
je
xor
pop
pop
ret
push
test
je
xchg
xchg
test
je
call
push
mov
call
xchg
call
push
mov
call
pop
pop
push
push
call
xchg
call
call
xchg
pop
ret
nop
dec
inc
cmp
je
cmp
jbe
ret
lea
call
cmp
jbe
cmp
jne
inc
cmp
je
cmp
jne
inc
jmp
ret
mov
call
or
inc
call
call
cmp
jne
xchg
ret
mov
push
call
mov
mov
cmp
je
inc
jmp
push
lods
test
je
push
xchg
call
pop
test
je
pop
cmp
je
cmp
jg
push
jle
pop
pop
ret
push
mov
push
push
push
mov
add
mov
inc
je
mov
push
loop
push
push
push
call
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
call
push
call
inc
je
dec
and
sete
ret
lea
push
push
xchg
xchg
call
pop
pop
mov
jecxz
add
dec
cmp
je
push
push
mov
call
mov
mov
call
call
pop
ret
lea
cmp
push
push
mov
call
pop
cmp
je
xchg
inc
pop
call
ret
add
add
adc
call
call
xchg
pop
call
ret
lea
push
xchg
sub
mov
push
push
call
mov
mov
call
mov
mov
call
add
pop
ret
nop
push
xchg
sub
mov
push
push
call
mov
mov
call
mov
mov
call
add
pop
ret
nop
push
sub
push
push
call
mov
mov
call
add
pop
mov
call
ret
nop
xchg
push
call
pop
cmp
jne
lea
je
sub
sub
ret
mov
push
mov
push
push
push
movzx
push
call
xchg
or
pop
or
mov
test
je
and
or
mov
pop
jecxz
push
push
push
lea
lea
lods
movsx
push
movsx
add
stos
pop
push
movsx
add
stos
xchg
pop
add
stos
xchg
add
stos
pop
mov
stos
pop
pop
xchg
call
xchg
jecxz
inc
mov
mov
test
je
cmp
jne
mov
movzx
inc
mov
mov
mov
call
xchg
pop
pop
ret
mov
push
push
push
mov
mov
call
mov
or
mov
add
mov
pop
push
call
pop
ret
lea
push
push
push
mov
mov
call
or
mov
add
mov
mov
add
mov
mov
xor
and
mov
add
add
add
pop
push
call
pop
push
or
mov
call
pop
ret
nop
push
mov
mov
push
push
call
mov
add
add
or
pop
cmp
jg
je
or
ret
or
ret
lea
push
push
xchg
push
push
call
test
je
push
push
push
xchg
call
push
push
push
call
push
push
jmp
pop
pop
ret
nop
mov
jecxz
xchg
ret
push
mov
test
jne
xor
call
mov
call
or
jmp
call
mov
pop
ret
mov
push
xchg
mov
jecxz
xchg
call
test
je
mov
jecxz
mov
test
je
call
mov
mov
call
and
jmp
call
mov
pop
ret
push
mov
push
push
push
push
push
call
push
xor
push
push
push
push
push
push
add
push
mov
mov
call
pop
mov
push
call
call
push
push
push
mov
mov
call
push
mov
mov
mov
sub
jne
mov
push
mov
sub
jne
mov
push
mov
test
jne
test
jne
mov
xchg
push
push
push
push
lea
push
push
mov
jecxz
lea
push
push
push
call
mov
mov
and
cmp
jne
mov
mov
mov
test
jne
test
xchg
jne
mov
mov
add
push
push
push
call
add
test
jne
mov
mov
mov
lea
push
call
test
je
mov
call
mov
test
je
push
push
push
push
push
push
push
call
call
xchg
pop
inc
loop
mov
push
push
push
call
test
jne
mov
call
push
push
push
push
call
mov
mov
call
mov
call
mov
call
xchg
call
mov
mov
pop
pop
ret
lea
push
mov
sub
cmp
ja
xchg
xchg
mov
lea
je
xor
je
add
xor
je
xor
je
sub
xor
je
xor
jne
push
push
lea
push
call
pop
xchg
mov
mov
mov
call
pop
mov
jecxz
xor
pop
ret
mov
pop
ret
nop
push
push
xchg
mov
test
jne
mov
jecxz
push
call
push
xchg
lea
call
pop
jecxz
inc
push
push
push
call
mov
xchg
call
pop
pop
ret
lea
push
xchg
xchg
mov
push
call
pop
test
jne
mov
mov
call
jmp
(bad)
(bad)
(bad)
inc
add
outs
bound
add
nop
push
mov
mov
movzx
jecxz
call
push
push
push
push
call
push
mov
call
xchg
loop
xchg
inc
xor
call
pop
pop
ret
mov
mov
jecxz
call
jmp
lea
call
mov
mov
call
xor
pop
ret
mov
push
push
xchg
mov
call
inc
je
dec
xchg
pop
push
mov
call
pop
push
call
xchg
pop
push
mov
call
push
call
xchg
call
call
push
inc
pop
pop
ret
nop
push
xchg
mov
cmp
jne
mov
call
mov
push
xchg
mov
mov
call
push
push
xchg
call
pop
pop
ret
lea
push
mov
mov
call
mov
pop
ret
push
mov
push
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
pop
ret
nop
mov
call
ret
push
push
mov
mov
push
mov
call
push
call
pop
pop
ret
nop
push
push
push
mov
mov
mov
push
push
mov
call
push
call
pop
pop
pop
ret
mov
mov
call
ret
push
mov
xor
push
push
push
mov
inc
jne
cmp
je
mov
push
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
push
mov
xor
push
push
push
mov
sub
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
jmp
mov
jmp
mov
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
sub
inc
add
inc
add
inc
add
add
and
inc
add
cs
add
add
inc
add
add
inc
add
inc
add
in
add
add
add
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
add
inc
add
add
adc
inc
add
add
add
inc
add
add
add
inc
popa
bound
inc
add
mov
add
mov
add
mov
mov
mov
mov
call
test
jl
inc
cmp
je
mov
call
test
jne
mov
mov
call
jmp
mov
cmp
jne
mov
cmp
jne
mov
dec
mov
call
mov
mov
call
jmp
mov
cmp
je
mov
mov
call
mov
mov
call
add
dec
jne
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
je
jmp
mov
ret
mov
ret
mov
ret
mov
test
je
test
je
mov
ret
test
je
test
je
mov
jmp
mov
jmp
test
je
mov
jmp
mov
ret
mov
test
je
test
je
mov
jmp
mov
test
je
or
test
je
or
test
je
test
je
or
mov
ret
push
push
mov
mov
push
mov
call
push
mov
call
push
push
push
mov
call
push
push
call
mov
cmp
jne
or
jmp
test
je
push
push
push
push
call
cmp
jne
or
push
call
jmp
mov
mov
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
push
push
call
test
jne
mov
mov
pop
pop
pop
pop
ret
push
push
push
push
mov
mov
mov
push
lea
push
push
push
push
call
test
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
call
test
je
xor
pop
ret
or
pop
ret
mov
push
push
push
push
call
cmp
jne
or
ret
nop
push
mov
add
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
lea
push
mov
push
push
call
test
je
lea
push
lea
push
call
test
je
lea
push
push
lea
push
push
call
push
call
mov
and
movzx
push
push
call
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
call
pop
ret
lea
push
mov
mov
call
pop
ret
lea
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
call
pop
ret
lea
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
mov
mov
mov
call
pop
ret
lea
push
push
test
je
add
call
mov
mov
xor
mov
call
call
mov
call
mov
mov
test
je
call
pop
add
mov
pop
pop
ret
lea
push
push
call
mov
mov
mov
call
mov
call
mov
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
push
push
mov
mov
call
mov
mov
mov
pop
pop
ret
nop
push
mov
cmp
jne
lea
xor
mov
call
lea
push
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
pop
ret
lea
push
mov
push
mov
mov
mov
test
je
xor
push
push
push
mov
push
call
pop
xor
pop
pop
pop
mov
push
mov
xor
mov
ret
jmp
jmp
pop
pop
ret
mov
push
mov
push
mov
push
push
dec
jne
push
xchg
push
push
push
mov
mov
mov
xor
push
push
push
mov
mov
xor
mov
cmp
ja
jmp
dec
out
add
out
add
jmp
inc
add
or
xor
mov
dec
add
or
inc
xor
or
cli
push
(bad)
dec
in
inc
sub
in
dec
in
mov
call
mov
lea
call
lea
mov
call
xor
jmp
xor
jmp
mov
mov
lea
mov
call
mov
mov
lea
lea
mov
call
cmp
je
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
call
cmp
je
or
jmp
cmp
jne
xor
jmp
mov
mov
call
mov
mov
call
mov
cmp
jne
cmp
je
lea
push
lea
push
mov
mov
mov
call
cmp
je
or
jmp
xor
jmp
lea
mov
call
mov
mov
call
mov
mov
call
cmp
jne
jmp
mov
call
lea
mov
call
mov
mov
call
mov
test
jl
lea
mov
mov
call
mov
mov
call
mov
mov
call
mov
push
mov
call
mov
mov
call
mov
jmp
cmp
je
lea
mov
call
lea
mov
call
mov
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
call
cmp
je
or
jmp
lea
mov
call
mov
mov
call
xor
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
lea
mov
call
mov
lea
call
mov
jmp
xor
jmp
xor
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
push
add
mov
mov
push
lea
push
push
mov
call
push
call
mov
lea
mov
call
add
pop
pop
ret
mov
push
mov
push
push
push
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
lea
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
mov
call
mov
call
lea
mov
call
jmp
lea
call
lea
call
lea
mov
call
lea
call
mov
push
push
mov
push
push
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
mov
call
push
call
add
cmp
je
lea
mov
call
jmp
mov
mov
call
test
jne
lea
call
jmp
lea
mov
call
cmp
je
mov
call
test
jne
lea
call
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
cmp
jne
push
call
mov
cmp
jae
xor
mov
xor
pop
ret
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
mov
pop
ret
add
push
push
inc
push
dec
cs
ins
add
add
jne
push
jb
arpl
jae
jae
add
inc
outs
jne
push
jb
arpl
jae
outs
fs
gs
add
je
outs
fs
gs
popa
jae
dec
popa
ins
gs
add
inc
gs
outs
fs
gs
imul
js
add
add
inc
gs
outs
fs
gs
popa
jae
dec
popa
ins
gs
add
inc
gs
outs
fs
gs
imul
js
add
add
inc
gs
outs
fs
gs
outs
outs
jb
popa
je
outs
outs
add
add
inc
ins
jo
jns
outs
jb
imul
push
jne
jb
push
outs
jb
imul
dec
outs
imul
push
jb
arpl
jae
outs
jb
jae
popa
je
push
dec
popa
jo
gs
imul
add
inc
gs
gs
arpl
jb
jbe
jb
popa
jae
dec
popa
ins
gs
add
add
inc
gs
gs
arpl
jb
jbe
jb
imul
add
add
inc
gs
popa
jo
gs
imul
add
inc
gs
gs
arpl
jb
jbe
jb
popa
jae
dec
popa
ins
gs
add
add
inc
gs
gs
arpl
jb
jbe
jb
imul
add
add
inc
outs
jne
inc
gs
arpl
jb
jbe
jb
add
add
je
jb
arpl
jae
gs
outs
jb
dec
outs
outs
add
add
push
push
push
mov
mov
mov
call
test
je
push
push
push
call
jmp
xor
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
call
test
je
mov
push
push
push
push
call
jmp
xor
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
mov
mov
mov
call
test
je
mov
push
push
push
push
call
jmp
xor
pop
pop
pop
pop
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
cmp
jne
push
call
mov
cmp
je
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
cmp
je
cmp
jne
xor
pop
ret
mov
pop
ret
add
imul
gs
xor
cs
ins
add
add
inc
jb
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
add
dec
gs
jo
xor
je
imul
popa
jo
xor
je
gs
add
dec
gs
jo
xor
jb
je
dec
gs
jo
xor
js
add
push
outs
outs
ins
push
xor
popa
fs
jb
arpl
jae
gs
outs
jb
add
outs
arpl
jae
xor
jb
je
add
outs
arpl
jae
xor
js
add
add
outs
arpl
jae
xor
jb
je
add
outs
arpl
jae
xor
js
push
add
push
push
xor
inc
imul
push
push
xor
dec
gs
add
add
dec
outs
fs
xor
inc
imul
dec
outs
fs
xor
dec
gs
add
add
dec
outs
fs
xor
inc
imul
dec
outs
fs
xor
dec
gs
push
add
add
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
push
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
push
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
outs
gs
je
outs
outs
popa
jb
add
jb
popa
ins
and
add
add
add
imul
jb
jb
add
jb
popa
ins
and
jb
jb
add
add
popa
and
jb
jb
add
jae
data16
je
ins
gs
outs
jb
add
data16
gs
outs
jb
add
add
arpl
jo
je
bound
jbe
jb
imul
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
mov
mov
call
pop
ret
nop
mov
imul
call
ret
mov
mov
call
ret
push
mov
push
push
push
push
mov
push
mov
call
pop
ret
push
mov
add
push
push
mov
mov
mov
mov
xor
test
mov
je
mov
mov
cmp
jne
cmp
je
mov
jmp
test
jne
mov
jmp
xor
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
cmp
jge
mov
neg
cmp
jl
cmp
jg
cmp
jne
cmp
jl
cmp
jg
cmp
jl
cmp
jg
cmp
jl
cmp
jle
mov
jmp
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
dec
mov
mov
mov
add
mov
mov
shl
mov
dec
mov
xor
mov
mov
add
dec
div
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
add
mov
shl
mov
mov
mov
mov
call
mov
mov
shl
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
mov
call
mov
jmp
mov
shr
add
add
mov
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
push
push
push
add
mov
xor
test
mov
mov
mov
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
mov
mov
mov
mov
call
mov
cmp
jae
xor
jmp
mov
sub
cmp
jbe
mov
mov
sub
add
push
mov
push
mov
push
call
mov
mov
mov
add
movzx
mov
mov
mov
shl
movzx
xor
and
mov
xor
jmp
mov
mov
shl
mov
movzx
xor
and
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
inc
mov
sub
cmp
jbe
test
xor
pop
pop
pop
pop
pop
pop
ret
push
test
je
cmp
je
cmp
je
cmp
jne
mov
pop
ret
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
cmp
jge
xor
mov
cmp
je
mov
jmp
mov
mov
mov
xor
mov
mov
call
mov
call
xor
pop
ret
nop
nop
push
push
push
push
push
mov
mov
xor
test
je
cmp
jne
mov
jmp
mov
cmp
jne
mov
test
jl
cmp
jg
test
jl
cmp
jle
mov
jmp
mov
lea
lea
mov
mov
mov
cmp
je
cmp
je
mov
call
mov
cmp
je
mov
movzx
mov
movzx
mov
movzx
mov
movzx
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
inc
mov
lea
push
mov
shr
pop
mov
mov
inc
mov
and
mov
pop
ret
nop
push
mov
push
mov
mov
mov
cmp
jbe
mov
test
je
push
mov
push
mov
push
call
add
mov
add
mov
add
add
sub
mov
mov
sub
mov
test
jne
mov
mov
pop
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
test
je
cmp
je
cmp
jg
test
jge
mov
jmp
cmp
mov
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
sub
dec
shl
add
shl
sar
cmp
jbe
mov
shl
or
cmp
je
or
mov
push
xor
mov
div
mov
pop
sub
add
mov
mov
mov
call
cmp
je
mov
mov
shr
call
mov
mov
and
call
mov
cmp
je
mov
call
cmp
jne
mov
xor
jmp
cmp
jne
cmp
jl
cmp
je
mov
mov
mov
jmp
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
cmp
jne
test
je
cmp
je
mov
mov
lea
mov
mov
call
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
cmp
jne
mov
xor
jmp
cmp
jne
cmp
jne
mov
call
jmp
push
xor
xor
mov
call
cmp
jne
mov
mov
mov
mov
dec
add
push
push
mov
push
call
add
mov
call
cmp
jne
mov
xor
jmp
cmp
je
xor
jmp
cmp
je
mov
jmp
mov
mov
shr
call
mov
mov
and
call
mov
call
mov
cmp
je
xor
jmp
mov
pop
pop
pop
pop
pop
ret
nop
push
push
mov
test
je
cmp
jne
mov
pop
pop
ret
mov
mov
cmp
je
cmp
je
cmp
je
mov
pop
pop
ret
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
call
xor
cmp
mov
jne
mov
jmp
xor
pop
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
cmp
je
test
je
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
push
push
mov
mov
rep
pop
pop
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
push
push
mov
mov
mov
rep
pop
pop
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
call
mov
jmp
mov
add
push
mov
push
mov
push
call
add
mov
add
push
mov
push
mov
push
call
add
mov
add
push
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
mov
add
sub
add
mov
lea
mov
shr
add
add
lea
mov
mov
lea
add
mov
mov
lea
mov
mov
xor
pop
pop
pop
pop
pop
ret
nop
push
push
mov
push
mov
mov
cmp
jae
mov
test
jne
xor
jmp
sub
mov
cmp
jne
mov
mov
mov
call
mov
push
mov
push
push
call
add
mov
add
add
pop
pop
pop
ret
nop
push
mov
mov
add
mov
mov
mov
mov
mov
dec
add
push
push
mov
push
call
mov
add
lea
movzx
mov
mov
lea
movzx
mov
mov
lea
movzx
mov
xor
mov
lea
movzx
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
pop
ret
nop
nop
nop
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
cmp
jbe
mov
sub
mov
sub
jmp
xor
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
cmp
jb
shr
mov
cmp
jae
mov
mov
add
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
inc
mov
cmp
jne
add
inc
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
cmp
ja
mov
sub
push
mov
pop
sub
lea
cmp
jge
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
and
mov
movzx
mov
cmp
jbe
dec
jne
mov
mov
cmp
jb
mov
jmp
mov
add
pop
pop
pop
ret
nop
nop
nop
push
push
push
mov
push
push
mov
mov
sub
sub
test
jne
cmp
jne
cmp
jne
mov
jmp
cmp
jne
dec
jmp
mov
sub
add
cmp
ja
push
mov
mov
mov
add
push
push
call
add
sub
sub
sub
mov
mov
add
add
sub
movzx
mov
cmp
ja
mov
sub
jmp
xor
mov
dec
jne
mov
mov
add
add
sub
movzx
mov
cmp
ja
mov
sub
jmp
xor
mov
dec
jne
add
mov
cmp
je
mov
mov
add
mov
add
call
add
cmp
jb
mov
mov
movzx
mov
mov
shl
mov
mov
movzx
xor
and
mov
cmp
jae
mov
cmp
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
sub
cmp
jbe
mov
cmp
ja
mov
call
mov
test
jne
cmp
jne
xor
jmp
test
je
mov
xor
add
mov
mov
mov
add
test
je
cmp
ja
sub
mov
mov
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
xor
jmp
mov
mov
sub
mov
sub
cmp
jb
push
mov
sub
test
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
xor
jmp
cmp
sete
and
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
cmp
jne
mov
jmp
xor
jmp
cmp
jne
mov
jmp
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
xor
cmp
jae
mov
call
mov
cmp
jae
cmp
jne
xor
jmp
test
je
cmp
jb
mov
mov
shl
mov
mov
movzx
xor
and
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
mov
test
je
mov
mov
sub
sub
cmp
ja
cmp
je
mov
mov
call
mov
cmp
jb
mov
mov
sub
mov
mov
mov
sub
mov
dec
inc
mov
mov
and
xor
mov
inc
cmp
jae
movzx
mov
jmp
movzx
sar
mov
xor
mov
inc
mov
dec
cmp
sete
and
mov
sub
mov
cmp
ja
cmp
jb
dec
inc
mov
mov
shl
mov
mov
movzx
xor
and
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
mov
dec
jne
inc
jmp
mov
xor
add
mov
mov
mov
movzx
mov
mov
mov
shl
mov
movzx
xor
and
mov
jmp
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
and
inc
mov
dec
cmp
sete
and
dec
inc
test
je
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
xor
jmp
cmp
sete
and
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
cmp
jne
mov
jmp
xor
jmp
cmp
jne
mov
jmp
mov
pop
pop
pop
pop
ret
push
push
push
add
xor
mov
mov
cmp
jae
mov
call
mov
cmp
jae
cmp
jne
xor
jmp
test
je
cmp
jb
mov
mov
shl
mov
mov
movzx
xor
and
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jae
mov
mov
sub
sub
cmp
ja
cmp
je
mov
mov
call
mov
cmp
ja
cmp
je
cmp
jne
mov
sub
cmp
jbe
mov
mov
cmp
jb
cmp
jb
mov
add
sub
mov
mov
mov
dec
mov
sub
mov
mov
sub
mov
dec
inc
mov
mov
and
xor
mov
inc
cmp
jae
movzx
mov
jmp
movzx
sar
mov
xor
mov
inc
mov
dec
cmp
sete
and
mov
dec
sub
sub
inc
mov
cmp
ja
mov
mov
shl
mov
mov
movzx
xor
and
mov
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
mov
dec
jne
xor
mov
mov
inc
test
je
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
xor
jmp
jmp
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
and
inc
mov
dec
cmp
sete
and
test
je
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
inc
dec
mov
cmp
jne
xor
jmp
mov
inc
dec
jmp
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
and
inc
mov
dec
cmp
sete
and
xor
mov
cmp
sete
and
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
cmp
jne
mov
jmp
xor
jmp
cmp
jne
mov
jmp
mov
pop
pop
pop
pop
pop
ret
mov
ret
nop
nop
nop
push
mov
call
lea
lea
mov
lea
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
pop
ret
nop
nop
xor
lea
mov
inc
add
cmp
jl
xor
lea
mov
inc
add
cmp
jl
xor
lea
mov
inc
add
cmp
jl
mov
xor
xor
mov
mov
mov
mov
ret
nop
push
push
push
add
mov
mov
mov
mov
mov
mov
add
lea
mov
mov
lea
jmp
cmp
jge
mov
mov
mov
cmp
jb
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
ja
inc
mov
mov
cmp
ja
mov
mov
cmp
jne
mov
mov
cmp
jbe
mov
mov
mov
mov
add
cmp
jle
mov
mov
mov
add
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
inc
add
cmp
jle
mov
mov
mov
mov
mov
mov
mov
inc
mov
cmp
mov
mov
lea
jge
mov
movzx
movzx
inc
cmp
jge
mov
inc
mov
cmp
jg
mov
inc
xor
mov
cmp
jl
mov
sub
mov
mov
mov
mov
mov
movzx
add
imul
mov
add
cmp
je
mov
movzx
add
movzx
imul
mov
add
inc
add
cmp
jl
cmp
je
lea
mov
lea
jmp
dec
add
cmp
je
mov
dec
mov
add
mov
dec
sub
cmp
jg
mov
mov
test
lea
mov
je
mov
movzx
mov
mov
lea
test
je
dec
add
mov
cmp
jg
movzx
cmp
je
movzx
mov
sub
movzx
imul
mov
add
mov
dec
test
jne
dec
add
test
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
xor
mov
lea
mov
mov
add
add
inc
add
mov
add
cmp
mov
jle
xor
lea
cmp
jg
movzx
test
je
mov
inc
movzx
mov
call
mov
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
nop
push
push
push
push
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
mov
mov
mov
mov
cmp
jge
cmp
je
mov
inc
mov
mov
mov
jmp
mov
inc
inc
add
cmp
jl
jmp
cmp
jge
inc
mov
jmp
xor
inc
mov
mov
mov
mov
mov
dec
cmp
je
mov
movzx
sub
cmp
jl
mov
mov
mov
mov
sar
jns
adc
cmp
jl
mov
mov
mov
call
dec
cmp
jge
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
dec
mov
mov
dec
mov
mov
mov
add
push
pop
mov
mov
cmp
ja
mov
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
call
cmp
jge
dec
mov
mov
mov
mov
mov
call
lea
mov
mov
call
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
mov
movzx
xor
mov
mov
test
jne
mov
mov
mov
mov
xor
add
mov
mov
mov
cmp
jg
mov
mov
inc
movzx
cmp
jle
cmp
je
cmp
jle
mov
add
jmp
test
je
cmp
je
mov
inc
mov
inc
jmp
cmp
jg
mov
inc
jmp
mov
inc
xor
mov
test
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
inc
add
mov
cmp
jle
add
pop
pop
pop
ret
nop
nop
push
push
push
push
add
xor
mov
mov
mov
mov
mov
mov
movzx
test
jne
mov
mov
xor
mov
mov
add
mov
mov
cmp
jg
mov
mov
inc
movzx
cmp
jle
cmp
je
cmp
jle
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
dec
jne
jmp
test
je
cmp
je
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
dec
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
add
mov
shl
or
add
jmp
cmp
jg
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
add
mov
shl
or
add
jmp
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
add
mov
shl
or
add
xor
mov
test
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
inc
add
mov
cmp
jle
add
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
lea
mov
mov
call
lea
mov
mov
call
lea
mov
call
mov
mov
xor
mov
cmp
jne
dec
dec
cmp
jge
lea
add
add
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
sub
mov
cmp
jge
mov
mov
add
sub
mov
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
sub
mov
cmp
jge
mov
mov
dec
sub
mov
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
sub
mov
cmp
jge
mov
mov
add
sub
mov
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
xor
mov
cmp
jge
mov
mov
sub
cmp
jge
xor
sub
mov
movzx
mov
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
movzx
mov
mov
shl
or
add
inc
inc
cmp
jl
mov
dec
lea
mov
call
mov
dec
lea
mov
call
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
mov
mov
mov
sub
mov
cmp
jge
mov
mov
shl
or
sub
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
shl
or
add
push
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
sub
mov
cmp
jge
mov
mov
mov
sub
mov
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
mov
movzx
sub
cmp
jge
mov
mov
sub
movzx
mov
movzx
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
mov
shl
or
add
mov
call
mov
add
mov
sub
cmp
jge
mov
mov
sub
cmp
jle
mov
mov
mov
sub
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
mov
movzx
sub
cmp
jge
mov
mov
sub
movzx
mov
movzx
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
mov
shl
or
add
mov
call
mov
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
xor
mov
mov
cmp
mov
jle
cmp
jne
mov
call
lea
mov
call
lea
mov
call
mov
call
mov
mov
mov
add
add
shr
shr
cmp
jb
mov
jmp
lea
mov
lea
cmp
jb
cmp
je
push
mov
mov
mov
call
jmp
cmp
jne
mov
mov
sub
cmp
jge
lea
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
mov
call
jmp
mov
mov
sub
cmp
jge
lea
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
mov
inc
push
mov
mov
mov
inc
inc
call
lea
lea
mov
call
mov
call
test
je
mov
call
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
mov
mov
mov
inc
mov
test
lea
push
pop
mov
jne
inc
jmp
inc
dec
movzx
inc
cmp
jae
mov
jmp
shr
mov
xor
mov
inc
mov
dec
cmp
sete
and
pop
pop
ret
nop
nop
push
push
push
push
add
mov
xor
mov
cmp
je
mov
mov
movzx
mov
mov
movzx
inc
test
jne
movzx
mov
sub
cmp
jge
movzx
mov
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
jmp
xor
mov
movzx
mov
mov
sub
cmp
jge
movzx
mov
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
mov
sub
add
mov
jmp
mov
mov
shl
or
mov
add
mov
test
je
sub
mov
mov
sub
cmp
jge
mov
mov
shl
or
mov
inc
mov
lea
push
mov
and
pop
mov
mov
inc
mov
lea
push
movzx
sar
pop
mov
mov
sub
movzx
sar
mov
sub
add
mov
jmp
mov
shl
or
add
dec
cmp
jae
mov
jmp
mov
shr
mov
and
mov
movzx
mov
sub
cmp
jge
mov
sub
movzx
mov
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
mov
shl
or
add
mov
test
je
sub
mov
mov
sub
mov
cmp
jge
mov
mov
shl
or
mov
inc
mov
lea
push
mov
and
pop
mov
mov
inc
mov
lea
push
movzx
sar
pop
mov
mov
sub
movzx
sar
mov
sub
add
mov
jmp
mov
shl
or
add
mov
cmp
jb
movzx
mov
sub
mov
cmp
jge
movzx
mov
mov
shl
or
mov
inc
mov
lea
push
mov
and
pop
mov
mov
inc
mov
lea
push
movzx
sar
pop
mov
mov
sub
movzx
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
movzx
mov
add
pop
pop
pop
pop
ret
nop
push
push
push
xor
xor
xor
lea
movzx
add
inc
add
cmp
jl
lea
cmp
jge
movzx
add
inc
add
cmp
jl
lea
cmp
jge
movzx
add
inc
add
cmp
jl
shr
cmp
jbe
xor
jmp
mov
mov
pop
pop
pop
ret
nop
nop
nop
push
xor
mov
dec
and
or
shr
add
test
jg
mov
shr
pop
ret
nop
nop
nop
push
cmp
jne
mov
inc
mov
mov
and
mov
mov
inc
movzx
mov
sar
mov
xor
mov
mov
pop
ret
cmp
jl
mov
inc
mov
mov
mov
shr
sub
pop
ret
push
cmp
jle
mov
inc
mov
mov
and
mov
mov
inc
mov
movzx
sar
mov
jmp
cmp
jle
mov
inc
mov
mov
mov
mov
xor
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
inc
mov
lea
mov
push
and
pop
not
mov
and
mov
inc
mov
lea
movzx
push
pop
sar
mov
mov
inc
mov
lea
push
pop
mov
mov
not
movzx
mov
inc
mov
sar
mov
jmp
mov
inc
mov
mov
mov
inc
mov
add
test
jne
pop
pop
pop
pop
ret
test
je
cmp
jne
mov
ret
xor
xor
mov
mov
mov
mov
cmp
je
mov
jmp
xor
mov
mov
mov
xor
xchg
call
xor
ret
nop
nop
push
mov
test
je
cmp
je
cmp
jne
mov
pop
ret
mov
mov
test
je
mov
call
mov
mov
call
xor
xor
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
cmp
mov
je
mov
mov
cmp
jne
cmp
je
mov
jmp
test
jne
mov
jmp
xor
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
xor
mov
xor
mov
test
mov
jge
mov
neg
mov
cmp
jl
cmp
jle
mov
call
mov
jmp
mov
mov
shl
mov
mov
mov
cmp
je
xor
jmp
mov
mov
call
mov
test
mov
jne
mov
call
mov
jmp
mov
call
xor
pop
pop
pop
pop
pop
ret
push
mov
xchg
call
ret
nop
nop
push
push
push
push
mov
mov
test
je
cmp
je
cmp
jne
mov
jmp
cmp
jne
mov
jmp
xor
mov
mov
mov
mov
cmp
ja
jmp
cmp
inc
add
sub
pop
sub
lea
inc
add
sub
pop
sub
mov
inc
add
sub
sbb
add
inc
add
add
pop
mov
jmp
mov
dec
inc
mov
inc
mov
xor
mov
mov
mov
and
cmp
je
mov
mov
mov
mov
jmp
mov
mov
shr
add
cmp
jbe
mov
mov
mov
mov
jmp
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
and
mov
shl
push
add
mov
div
pop
test
je
mov
mov
mov
mov
jmp
test
jne
mov
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
dec
inc
mov
inc
mov
xor
mov
shl
mov
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
shl
add
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
shl
add
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
inc
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
call
mov
cmp
jne
mov
mov
xor
mov
jmp
test
jne
mov
cmp
je
mov
jmp
mov
mov
mov
add
mov
mov
call
mov
cmp
je
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
dec
inc
mov
inc
mov
xor
mov
shl
mov
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
shl
add
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
shl
add
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
push
mov
mov
mov
mov
test
je
cmp
je
mov
cmp
je
mov
jmp
mov
mov
mov
call
cmp
je
mov
jmp
mov
mov
mov
mov
shl
cmp
jb
mov
mov
mov
shl
dec
sub
add
mov
mov
mov
call
mov
mov
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
mov
test
je
cmp
jne
mov
jmp
mov
cmp
je
mov
xor
mov
mov
test
jne
mov
jmp
mov
mov
mov
jmp
mov
cmp
jne
inc
jmp
test
je
xor
jmp
mov
sub
mov
inc
dec
test
je
cmp
jb
mov
sub
add
mov
mov
cmp
mov
mov
je
mov
jmp
mov
mov
mov
call
mov
mov
mov
xor
mov
pop
pop
pop
ret
nop
nop
nop
test
je
cmp
je
mov
cmp
jne
mov
ret
mov
mov
call
ret
lea
push
mov
add
push
push
mov
mov
mov
lea
mov
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
inc
add
dec
jne
mov
cmp
jne
mov
xor
mov
xor
mov
xor
mov
jmp
mov
mov
mov
lea
mov
mov
mov
cmp
jne
inc
add
cmp
jbe
mov
cmp
jbe
mov
mov
lea
mov
mov
cmp
jne
dec
add
cmp
jne
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
shl
mov
lea
mov
cmp
jae
mov
mov
sub
mov
test
jge
mov
jmp
add
shl
inc
cmp
jb
mov
mov
sub
mov
test
jge
mov
jmp
mov
mov
add
xor
mov
lea
mov
lea
mov
jmp
mov
add
add
mov
add
dec
jne
mov
mov
xor
mov
mov
add
mov
test
je
mov
inc
mov
mov
mov
inc
mov
cmp
jb
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
neg
mov
xor
mov
xor
mov
xor
mov
lea
mov
mov
cmp
jg
mov
mov
mov
jmp
mov
lea
mov
mov
lea
mov
jmp
inc
add
add
mov
add
mov
sub
cmp
jbe
mov
jmp
mov
mov
mov
sub
mov
mov
mov
shl
inc
cmp
jbe
sub
mov
shl
lea
add
cmp
jbe
jmp
add
add
cmp
jbe
sub
inc
cmp
ja
mov
mov
shl
mov
mov
mov
add
cmp
jbe
mov
jmp
shl
add
mov
mov
mov
mov
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
sub
mov
shr
mov
mov
mov
sub
test
jns
add
sar
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
cmp
jl
mov
sub
mov
mov
shl
add
cmp
ja
mov
jmp
mov
mov
cmp
jae
cmp
jae
xor
jmp
mov
mov
mov
mov
mov
add
jmp
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
add
mov
sub
mov
shl
mov
mov
shr
cmp
jbe
mov
mov
mov
mov
mov
add
cmp
ja
mov
dec
mov
shl
jmp
xor
shr
test
jne
xor
mov
mov
mov
shl
lea
dec
mov
jmp
dec
add
mov
sub
mov
mov
shl
dec
and
mov
cmp
jne
mov
add
test
jne
inc
add
mov
cmp
jle
cmp
je
cmp
je
mov
jmp
xor
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
test
jne
mov
jmp
push
push
mov
push
lea
mov
push
mov
push
push
mov
mov
push
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
je
mov
cmp
jne
mov
mov
mov
mov
call
mov
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
test
jne
mov
jmp
push
push
mov
push
lea
mov
push
mov
push
push
mov
push
mov
mov
mov
call
mov
test
jne
mov
cmp
jne
cmp
jne
mov
jmp
cmp
je
mov
mov
mov
mov
call
mov
jmp
push
push
mov
push
lea
mov
push
mov
push
push
mov
push
mov
mov
shl
add
xor
call
mov
test
jne
mov
cmp
jne
cmp
jbe
cmp
jne
mov
jmp
cmp
jne
mov
mov
jmp
cmp
je
mov
mov
mov
mov
call
mov
jmp
mov
mov
call
xor
pop
pop
mov
pop
ret
nop
push
mov
push
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
ret
lea
push
push
push
mov
shr
mov
and
and
push
mov
test
mov
jne
mov
jmp
test
jbe
cmp
jae
mov
jmp
mov
sub
cmp
jl
xor
xor
mov
mov
add
xor
add
add
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
add
add
sub
cmp
jge
test
je
xor
mov
add
inc
add
dec
jne
mov
mov
xor
div
mov
mov
mov
xor
div
mov
test
ja
mov
shl
or
pop
pop
pop
pop
ret
lea
push
push
mov
mov
test
je
mov
mov
mov
cmp
je
cmp
jne
mov
mov
call
cmp
jne
mov
mov
call
xor
xor
mov
xor
mov
mov
mov
mov
mov
cmp
je
xor
xor
xor
call
mov
mov
pop
pop
ret
nop
nop
push
push
push
mov
push
mov
mov
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
mov
mov
call
mov
test
jne
mov
mov
call
xor
jmp
mov
mov
mov
call
mov
test
jne
mov
mov
call
mov
mov
call
xor
jmp
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
call
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
ja
jmp
nop
aaa
inc
add
inc
add
inc
add
cmp
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
add
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
and
mov
mov
and
mov
mov
shr
sub
jb
je
dec
je
dec
je
jmp
shr
sub
mov
and
mov
mov
shr
sub
mov
jmp
lea
push
push
lea
lea
lea
call
mov
push
push
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
shr
sub
mov
jmp
shr
sub
mov
jmp
shr
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
mov
not
shr
and
and
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
xor
mov
mov
test
je
mov
jmp
cmp
je
mov
jmp
xor
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
test
jne
mov
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
test
jne
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
test
jne
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
xor
mov
mov
mov
mov
cmp
jbe
mov
mov
cmp
jae
mov
mov
push
mov
push
mov
push
call
add
mov
add
mov
sub
add
sub
mov
sub
jne
cmp
je
mov
jmp
xor
mov
jmp
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
and
mov
mov
mov
and
cmp
ja
mov
shr
and
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
shr
and
add
add
mov
mov
mov
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
shr
sub
xor
mov
mov
jmp
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
inc
mov
mov
mov
and
mov
shr
sub
mov
shr
add
cmp
ja
jmp
mov
inc
mov
mov
xor
mov
cmp
jb
mov
mov
push
push
lea
lea
mov
call
mov
cmp
je
mov
mov
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
xor
mov
mov
jmp
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
mov
and
shl
add
xor
mov
mov
mov
cmp
jae
mov
shr
sub
mov
inc
mov
mov
jmp
cmp
jne
mov
jmp
mov
sub
cmp
jne
mov
jmp
mov
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
dec
mov
mov
mov
and
mov
shl
or
inc
add
mov
add
cmp
jb
mov
shr
mov
sub
and
sub
add
mov
shr
mov
mov
mov
mov
mov
shr
and
and
add
mov
add
add
cmp
jb
cmp
jne
cmp
jae
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
jmp
xor
mov
mov
mov
inc
dec
jne
mov
mov
mov
mov
mov
shr
and
and
add
add
cmp
ja
xor
mov
mov
mov
mov
lea
mov
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
shr
and
and
mov
inc
add
call
mov
cmp
je
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
push
push
mov
mov
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
mov
dec
je
mov
mov
mov
call
jmp
xor
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
xor
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
je
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
nop
nop
push
push
mov
mov
xor
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
xor
pop
pop
ret
push
push
mov
mov
push
push
mov
push
call
add
mov
add
mov
mov
pop
pop
ret
nop
nop
cmp
sete
and
ret
mov
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
mov
mov
cmp
ja
jmp
pop
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
add
add
and
and
or
adc
and
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
push
push
push
mov
mov
mov
xor
mov
mov
movzx
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
je
cmp
jne
mov
jmp
mov
mov
mov
jmp
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
mov
mov
mov
and
shl
add
mov
mov
mov
mov
and
shr
mov
sub
xor
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
test
je
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
test
jne
mov
mov
mov
mov
mov
mov
shl
add
mov
jmp
test
je
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
mov
mov
and
add
mov
shr
mov
mov
sub
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
mov
mov
mov
and
shl
add
mov
mov
mov
mov
and
shr
mov
sub
xor
mov
mov
test
je
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
test
jne
mov
mov
mov
mov
mov
mov
shl
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
mov
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
mov
mov
and
add
mov
shr
mov
sub
mov
mov
mov
sub
mov
jmp
mov
sub
add
mov
cmp
ja
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
cmp
je
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
xor
mov
mov
mov
mov
inc
inc
dec
mov
cmp
jne
mov
mov
mov
dec
mov
cmp
jne
mov
xor
mov
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
cmp
je
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
xor
mov
mov
mov
mov
inc
dec
mov
xor
mov
jmp
cmp
jbe
sub
inc
dec
mov
mov
mov
mov
call
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
je
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
nop
push
mov
mov
xchg
call
pop
ret
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
test
je
cmp
jne
xor
mov
mov
sub
mov
add
cmp
je
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
call
add
mov
add
add
mov
cmp
jne
mov
cmp
mov
jne
mov
mov
mov
sub
mov
cmp
jbe
mov
test
je
cmp
jne
xor
mov
mov
sub
mov
add
cmp
je
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
call
add
mov
add
add
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
sub
dec
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
cmp
jae
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
and
shl
add
mov
xor
mov
mov
test
jne
mov
mov
mov
and
shr
mov
sub
mov
mov
mov
inc
dec
jmp
mov
mov
mov
and
shr
sub
test
je
and
mov
sub
mov
mov
mov
and
add
mov
shr
cmp
jae
dec
mov
inc
mov
mov
and
add
shl
or
cmp
jb
mov
and
shl
add
mov
movzx
mov
mov
mov
shr
mov
movzx
sub
test
je
and
cmp
jae
dec
mov
inc
mov
mov
and
add
shl
or
cmp
jb
mov
mov
mov
mov
and
add
mov
shr
sub
sub
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
sub
add
mov
mov
cmp
ja
mov
mov
sub
mov
cmp
jbe
sub
mov
mov
mov
mov
inc
inc
dec
jne
mov
mov
mov
mov
mov
mov
mov
inc
inc
dec
jne
jmp
mov
mov
dec
mov
mov
inc
inc
mov
mov
mov
mov
inc
inc
dec
mov
mov
mov
mov
inc
inc
dec
jne
jmp
mov
mov
dec
mov
mov
inc
inc
mov
mov
mov
mov
inc
inc
dec
mov
mov
mov
mov
inc
inc
dec
jne
jmp
test
jne
mov
mov
shl
add
mov
mov
and
shl
add
mov
movzx
mov
jmp
mov
mov
shr
mov
mov
mov
sub
cmp
jbe
mov
shr
jmp
mov
mov
add
sub
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
test
jne
mov
mov
shl
add
mov
mov
and
shl
add
mov
xor
mov
mov
test
jne
mov
mov
mov
and
shr
mov
sub
mov
mov
mov
inc
dec
jmp
test
je
mov
mov
shr
mov
sub
cmp
jbe
mov
shr
jmp
mov
mov
add
sub
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shr
mov
sub
cmp
jbe
mov
shr
jmp
mov
mov
add
sub
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
cmp
jb
cmp
jae
mov
mov
mov
shr
sub
cmp
jbe
mov
shr
jmp
mov
mov
add
sub
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
add
push
xor
mov
xor
push
push
push
mov
mov
mov
cmp
jne
xor
mov
pushf
pop
or
push
popf
pushf
pop
test
je
and
push
popf
pushf
pop
test
jne
inc
cmp
je
or
push
mov
cpuid
mov
mov
cpuid
mov
pop
test
je
or
lea
lea
mov
call
mov
mov
call
jne
push
mov
cpuid
mov
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
add
add
add
(bad)
(bad)
inc
add
inc
jne
push
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
mov
inc
add
add
add
add
add
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
add
add
add
fs
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
add
add
add
fs
inc
add
add
add
add
add
fs
inc
add
add
push
inc
add
add
add
add
add
add
add
add
add
fs
inc
add
add
inc
add
add
add
add
add
add
movs
inc
add
(bad)
(bad)
inc
add
dec
dec
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
dec
inc
dec
inc
add
add
(bad)
(bad)
(bad)
inc
add
dec
inc
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
push
dec
push
inc
add
add
(bad)
(bad)
(bad)
inc
add
addr16
dec
inc
add
add
(bad)
(bad)
(bad)
inc
add
push
push
dec
push
add
add
(bad)
(bad)
(bad)
inc
add
je
pop
je
add
add
(bad)
(bad)
inc
add
je
dec
inc
add
add
push
push
push
mov
mov
mov
mov
mov
call
jne
mov
jmp
dec
sub
test
jne
xor
pop
pop
pop
ret
lea
push
mov
add
push
push
push
mov
lea
movs
movs
movs
movs
mov
mov
mov
mov
push
call
mov
push
mov
push
push
push
push
mov
push
call
push
push
call
mov
mov
cdq
xor
sub
mov
mov
cdq
xor
sub
mov
mov
sub
mov
mov
sub
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
push
mov
push
call
mov
push
push
push
push
push
call
mov
push
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
push
call
mov
push
mov
push
mov
push
push
push
push
push
push
push
push
mov
push
call
mov
push
push
call
push
push
push
mov
push
push
push
push
push
mov
push
call
push
mov
push
mov
push
mov
push
push
push
push
push
mov
push
call
push
push
push
mov
push
push
push
push
push
mov
push
call
push
push
push
push
push
mov
push
mov
push
mov
push
push
push
push
call
push
mov
push
mov
push
push
push
push
push
push
push
push
mov
push
call
push
push
push
mov
push
push
push
mov
push
mov
push
mov
push
call
mov
push
mov
push
call
push
call
mov
push
mov
push
call
push
call
mov
push
mov
push
call
push
call
mov
push
push
call
push
call
mov
push
call
mov
push
call
mov
push
call
push
call
pop
pop
pop
mov
pop
ret
push
push
xor
mov
mov
mov
mov
and
test
je
shr
xor
jmp
shr
dec
jne
mov
inc
add
cmp
jne
mov
pop
pop
ret
nop
push
push
push
mov
mov
mov
cmp
jne
call
mov
dec
test
jl
inc
xor
xor
mov
xor
and
mov
shr
xor
mov
inc
dec
jne
mov
pop
pop
pop
ret
mov
push
push
push
push
push
mov
mov
xor
mov
mov
and
sub
cdq
xor
sub
mov
xor
mov
sub
cdq
xor
sub
mov
xor
mov
xor
mov
add
mov
add
sub
cdq
xor
sub
cmp
jl
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
pop
pop
pop
pop
pop
ret
bswap
ret
nop
and
cmp
ja
jmp
jb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
mov
imul
add
test
jns
add
sar
mov
ret
xor
mov
imul
lea
test
jns
add
sar
ret
xor
mov
imul
mov
add
test
jns
add
sar
ret
xor
mov
imul
mov
shl
test
jns
add
sar
ret
xor
ret
mov
mov
add
inc
call
ret
lea
mov
mov
mov
call
ret
lea
push
push
mov
mov
mov
xor
call
mov
mov
pop
pop
ret
lea
push
push
call
je
mov
mov
mov
xor
call
mov
call
mov
xor
mov
mov
mov
pop
pop
ret
push
mov
lea
call
mov
call
mov
call
mov
pop
ret
mov
push
push
add
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
lea
mov
call
lea
mov
mov
call
mov
test
jbe
mov
mov
mov
call
lea
mov
or
call
mov
mov
mov
mov
call
xor
call
mov
lea
mov
mov
call
mov
add
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
call
test
jle
mov
mov
mov
call
lea
mov
mov
call
mov
call
mov
lea
mov
or
call
mov
mov
mov
mov
call
xor
mov
cmp
sete
test
jne
mov
cmp
je
mov
mov
jmp
mov
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
push
mov
mov
call
mov
test
je
cmp
jne
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
call
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
push
mov
mov
call
mov
cmp
je
cmp
jl
mov
mov
lea
mov
call
mov
call
mov
sub
dec
lea
call
mov
call
push
mov
call
add
inc
push
lea
call
pop
pop
call
mov
pop
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
call
mov
inc
mov
call
add
mov
mov
call
mov
xor
mov
call
cmp
je
mov
call
push
lea
call
mov
mov
pop
call
cmp
je
mov
call
push
lea
call
push
mov
call
add
inc
pop
pop
call
mov
mov
call
pop
pop
pop
ret
push
call
je
mov
mov
xor
call
xor
mov
xor
mov
mov
pop
ret
lea
push
mov
mov
call
mov
call
mov
pop
ret
lea
push
mov
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
call
xor
mov
xor
mov
xor
mov
xor
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
cmp
jae
xor
mov
mov
jmp
mov
push
lea
mov
movs
movs
movs
movs
pop
mov
call
mov
mov
call
mov
cmp
jg
cmp
jle
xor
mov
mov
jmp
cmp
je
xor
mov
mov
jmp
mov
test
je
cmp
je
xor
mov
mov
jmp
mov
mov
mov
mov
call
mov
pop
pop
pop
pop
pop
pop
ret
push
push
push
push
mov
mov
cmp
jne
mov
mov
mov
call
mov
push
mov
lea
movs
movs
movs
movs
pop
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
mov
mov
mov
lea
xor
mov
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
call
mov
mov
call
mov
mov
mov
xor
mov
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
lea
xor
mov
call
mov
call
mov
sub
jb
dec
je
dec
sub
jb
dec
je
jmp
mov
xor
mov
cmp
ja
mov
jmp
add
add
add
add
add
add
add
add
add
inc
add
pusha
inc
add
inc
add
inc
add
inc
add
mov
call
pop
jmp
push
mov
mov
call
pop
jmp
push
mov
mov
call
pop
jmp
push
xor
mov
call
pop
mov
call
movzx
imul
add
and
test
jns
add
sar
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
mov
call
mov
mov
call
imul
mov
call
mov
push
call
mov
mov
push
push
lea
push
push
lea
push
push
call
mov
mov
call
mov
imul
mov
call
pop
pop
pop
pop
ret
nop
push
push
mov
mov
mov
cmp
ja
lea
mov
mov
call
mov
mov
call
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
push
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
jle
mov
mov
mov
jmp
lea
mov
mov
call
lea
mov
mov
call
mov
call
mov
sub
jb
dec
je
dec
je
jmp
mov
jmp
xor
mov
dec
test
jl
inc
xor
cmp
je
inc
inc
dec
jne
dec
sete
mov
mov
pop
pop
pop
mov
pop
ret
push
push
mov
mov
mov
xor
mov
call
mov
call
mov
mov
mov
mov
mov
call
pop
pop
ret
xor
xor
xor
add
push
mov
push
push
push
push
mov
mov
mov
mov
mov
xor
mov
call
mov
call
mov
mov
mov
mov
mov
push
mov
xor
mov
mov
call
pop
pop
pop
pop
pop
ret
xor
xor
xor
add
push
mov
mov
call
mov
call
pop
ret
push
mov
mov
call
mov
call
pop
ret
push
push
push
push
push
mov
mov
call
mov
mov
test
je
cmp
jne
mov
mov
shl
mov
movzx
dec
test
jl
inc
xor
lea
movzx
dec
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
mov
mov
jmp
mov
call
cmp
jne
cmp
jle
cmp
jne
lea
mov
mov
call
mov
cmp
je
mov
call
mov
mov
xor
cmp
je
mov
mov
mov
jmp
mov
mov
mov
call
lea
mov
mov
call
lea
lea
mov
call
mov
mov
call
je
mov
mov
mov
jmp
lea
mov
or
call
mov
mov
mov
call
push
mov
call
pop
add
mov
cmp
jne
mov
call
add
cmp
jbe
mov
call
mov
sub
mov
mov
call
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
mov
sub
mov
jmp
mov
mov
mov
xor
call
mov
cmp
jge
mov
mov
mov
jmp
cmp
jg
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
dec
inc
inc
push
add
add
push
mov
add
push
push
mov
mov
mov
and
mov
shr
lea
add
mov
mov
mov
shr
lea
sub
mov
mov
and
mov
shr
mov
mov
sub
mov
mov
add
mov
push
push
push
mov
mov
mov
mov
xor
lods
mov
bswap
lods
mov
lods
mov
xchg
stos
shr
stos
add
sub
jg
pop
pop
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
mov
and
mov
shr
lea
add
mov
mov
mov
shr
lea
sub
mov
mov
and
mov
shr
mov
mov
sub
mov
mov
add
mov
push
push
push
mov
mov
mov
mov
xor
lods
mov
inc
bswap
lods
mov
inc
lods
mov
inc
xchg
stos
shr
stos
add
sub
jg
pop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
xor
mov
mov
shr
mov
mov
mov
shr
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
shr
add
mov
mov
mov
movzx
shr
and
mov
mov
shl
and
mov
sub
shl
mov
or
add
sub
test
jge
inc
mov
cmp
jl
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
shr
mov
mov
mov
shr
mov
mov
mov
shr
add
mov
mov
xor
mov
shr
and
mov
shl
and
jns
dec
or
inc
push
mov
pop
sub
shl
mov
or
add
sub
test
jge
inc
mov
cmp
jl
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
shr
mov
mov
mov
shr
mov
mov
mov
sar
jns
adc
add
mov
mov
xor
mov
shr
shl
and
mov
shl
and
jns
dec
or
inc
push
mov
pop
sub
shl
mov
or
add
sub
test
jge
inc
mov
cmp
jl
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
mov
xor
mov
mov
shr
mov
add
mov
mov
and
mov
shr
mov
mov
mov
add
add
add
cmp
jl
pop
pop
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
and
mov
shr
lea
add
mov
mov
add
mov
mov
mov
and
mov
shr
lea
sub
mov
mov
mov
and
mov
shr
mov
mov
and
mov
shr
mov
mov
mov
add
mov
mov
mov
mov
add
movzx
mov
mov
mov
mov
inc
inc
movzx
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
mov
add
mov
add
mov
add
add
cmp
jl
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
and
mov
shr
lea
add
mov
mov
add
mov
mov
mov
and
mov
shr
lea
sub
mov
mov
mov
and
mov
shr
mov
mov
and
mov
shr
mov
mov
mov
add
mov
mov
mov
mov
add
movzx
mov
mov
mov
mov
inc
add
movzx
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
mov
add
mov
add
mov
add
add
cmp
jl
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
xor
mov
mov
shr
mov
add
mov
mov
add
mov
mov
mov
shr
mov
movzx
mov
shr
mov
mov
movzx
mov
shr
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
add
mov
add
add
cmp
jl
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
xor
mov
mov
shr
mov
add
mov
mov
add
mov
mov
mov
shr
mov
movzx
mov
shr
mov
mov
movzx
mov
shr
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
add
add
mov
add
add
cmp
jl
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
xor
mov
mov
mov
call
movzx
cmp
ja
jmp
hlt
imul
ins
inc
add
inc
add
ins
inc
add
add
(bad)
dec
add
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
movzx
cmp
ja
mov
jmp
add
add
add
add
add
add
add
add
add
ins
inc
add
ins
inc
add
inc
add
inc
add
loopne
inc
add
nop
add
add
(bad)
inc
add
jne
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
mov
mov
dec
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
mov
movzx
mov
test
jb
inc
mov
mov
mov
mov
mov
mov
mov
cmp
je
xor
mov
imul
mov
movzx
mov
inc
mov
cdq
idiv
mov
mov
movzx
mov
push
mov
push
mov
xor
mov
mov
mov
call
test
je
mov
call
mov
sub
mov
add
dec
mov
mov
cdq
idiv
mov
mov
call
mov
push
mov
call
mov
mov
pop
call
mov
mov
xor
and
mov
mov
call
mov
mov
mov
mov
mov
shr
mov
mov
cmp
jne
mov
call
mov
mov
dec
sub
imul
mov
call
add
mov
mov
call
mov
mov
imul
add
mov
cmp
jbe
jmp
mov
cmp
je
mov
movzx
cmp
jle
xor
mov
imul
mov
fild
mov
movzx
mov
inc
mov
fild
fdivrp
imul
mov
fild
fild
fdivrp
mov
movzx
mov
inc
mov
fild
fdivrp
faddp
call
mov
jmp
imul
mov
dec
mov
cdq
idiv
mov
mov
movzx
mov
push
mov
push
mov
xor
mov
mov
mov
call
test
je
mov
inc
push
lea
push
mov
push
xor
mov
mov
mov
mov
call
test
je
mov
call
mov
cmp
jle
mov
cmp
je
mov
call
mov
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
call
cmp
jne
mov
push
mov
push
xor
mov
mov
lea
mov
mov
call
mov
cmp
je
mov
call
neg
mov
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
call
cmp
jne
mov
xor
mov
mov
add
mov
mov
shr
add
mov
call
mov
mov
mov
shr
imul
sub
mov
mov
shr
imul
add
mov
call
cmp
jg
inc
add
add
add
add
dec
jne
pop
pop
pop
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
mov
shl
sub
mov
push
push
push
mov
mov
mov
mov
lods
bswap
add
shr
stos
shr
stos
loop
pop
pop
pop
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
shl
sub
mov
push
push
push
push
mov
mov
mov
mov
mov
xor
lods
mov
inc
bswap
lods
mov
inc
lods
mov
add
xchg
stos
shr
stos
xchg
loop
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
mov
mov
mov
cmp
jne
mov
mov
mov
call
jmp
mov
call
movzx
shr
imul
mov
mov
mov
shl
dec
mov
push
push
push
mov
mov
mov
mov
movs
add
loop
pop
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
test
jle
mov
xor
mov
shr
and
and
or
mov
inc
mov
mov
shl
and
shl
and
or
mov
inc
mov
mov
mov
shl
add
dec
jne
pop
pop
pop
pop
ret
lea
push
push
mov
xor
mov
mov
shr
and
mov
shr
and
or
mov
mov
and
shl
and
or
shl
or
mov
inc
add
cmp
jne
pop
pop
ret
mov
push
mov
add
push
mov
mov
mov
cmp
jne
call
mov
mov
mov
mov
shl
dec
mov
push
push
push
push
mov
mov
mov
lea
mov
xor
lods
mov
stos
add
loop
pop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
mov
shl
dec
mov
push
push
push
mov
mov
mov
mov
movs
add
loop
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
mov
mov
mov
cmp
jne
call
mov
mov
mov
add
mov
mov
mov
shl
sub
mov
push
push
push
push
mov
mov
mov
shl
mov
mov
mov
xor
lods
mov
bswap
lods
mov
lods
mov
mov
stos
shr
stos
lods
mov
inc
movzx
add
sub
mov
shr
jne
pop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
mov
mov
mov
cmp
jne
call
mov
mov
mov
add
mov
mov
mov
shl
inc
mov
push
push
push
push
mov
mov
mov
shl
lea
mov
mov
xor
lods
mov
inc
bswap
lods
mov
inc
lods
mov
inc
mov
stos
shr
stos
lods
mov
inc
movzx
add
sub
mov
shr
jne
pop
pop
pop
pop
pop
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
mov
shl
dec
mov
push
push
push
push
mov
mov
mov
mov
mov
lods
stos
mov
add
inc
loop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
mov
shl
sub
mov
push
push
push
push
mov
mov
mov
mov
mov
lods
stos
shr
mov
add
inc
loop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
xor
mov
mov
mov
call
movzx
cmp
ja
jmp
sbb
add
jne
add
je
add
jne
add
jne
add
jne
add
ret
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
movzx
cmp
ja
mov
jmp
add
add
add
add
add
add
add
add
add
jne
add
inc
add
add
in
inc
loopne
jno
add
nop
add
add
(bad)
inc
add
jne
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
mov
mov
dec
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
mov
cmp
jne
mov
call
mov
mov
dec
imul
mov
call
add
mov
mov
call
mov
mov
xor
mov
mov
call
mov
dec
test
jl
inc
mov
mov
cmp
je
push
mov
call
mov
dec
mov
call
push
imul
pop
mov
cdq
idiv
push
mov
mov
xor
mov
call
test
je
mov
inc
push
lea
push
mov
push
xor
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
shl
dec
and
jne
mov
cmp
jle
mov
cmp
je
mov
call
mov
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
mov
call
cmp
jne
mov
push
xor
mov
mov
lea
mov
mov
call
mov
cmp
je
mov
call
neg
mov
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
mov
call
cmp
jne
inc
mov
call
mov
sub
mov
add
mov
xor
mov
inc
dec
jne
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
mov
xor
mov
mov
mov
dec
je
dec
je
dec
je
dec
je
jmp
mov
lea
mov
mov
neg
mov
mov
inc
mov
sub
jb
inc
xchg
mov
mov
mov
mov
mov
add
inc
inc
dec
jne
jmp
cmp
je
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
add
shr
mov
mov
mov
sub
mov
movq
psrlq
psllq
jmp
movq
movq
paddb
movq
add
loop
emms
jmp
xor
mov
mov
inc
mov
mov
xor
and
mov
inc
mov
mov
test
jbe
mov
mov
mov
mov
add
and
mov
mov
inc
inc
inc
dec
jne
jmp
xor
mov
mov
inc
mov
mov
xor
and
mov
inc
mov
mov
dec
test
jb
inc
mov
mov
movzx
shr
mov
add
inc
inc
inc
dec
jne
mov
neg
mov
mov
mov
dec
sub
jb
inc
xchg
mov
mov
mov
movzx
mov
movzx
add
shr
mov
add
inc
inc
inc
dec
jne
jmp
mov
mov
mov
mov
xor
mov
mov
inc
mov
mov
xor
and
mov
inc
mov
mov
sub
mov
push
push
push
mov
mov
mov
jecxz
lods
add
stos
loop
push
mov
neg
mov
nop
nop
nop
mov
xor
mov
lods
push
push
mov
shl
mov
mov
movzx
neg
movzx
add
lea
add
cdq
xor
sub
xchg
cdq
xor
sub
xchg
movzx
add
cdq
xor
sub
cmp
ja
cmp
mov
jbe
mov
cmp
jbe
mov
shr
pop
pop
add
inc
dec
jne
pop
pop
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
je
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
call
mov
mov
call
mov
lea
mov
or
call
mov
lea
lea
mov
call
lea
mov
call
mov
call
add
mov
mov
add
call
mov
mov
add
call
mov
mov
inc
mov
call
mov
mov
mov
sub
jb
je
jmp
push
lea
push
lea
mov
mov
call
jmp
push
lea
push
lea
mov
mov
call
lea
call
mov
call
mov
call
lea
mov
mov
call
mov
cmp
je
xor
mov
call
mov
mov
cmp
sete
test
jne
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
lea
push
push
push
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
test
je
mov
call
mov
mov
test
je
mov
call
mov
mov
test
je
mov
call
mov
mov
test
je
mov
call
mov
lea
push
mov
mov
mov
mov
call
mov
mov
sub
jb
je
jmp
lea
mov
mov
call
jmp
lea
mov
mov
call
lea
call
mov
call
mov
call
mov
test
je
mov
call
mov
test
je
mov
call
mov
test
je
mov
call
mov
test
je
mov
call
mov
add
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
or
call
mov
mov
mov
mov
call
mov
mov
mov
call
xor
call
mov
lea
mov
mov
call
pop
pop
pop
pop
pop
ret
lea
push
mov
push
mov
mov
mov
mov
jmp
mov
xor
call
cmp
jne
mov
mov
mov
call
mov
mov
mov
cmp
jg
pop
pop
ret
nop
push
mov
xor
mov
xor
mov
jmp
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
call
dec
jne
mov
cmp
jge
mov
sub
mov
mov
call
pop
ret
nop
push
mov
push
push
push
mov
test
jle
mov
add
movzx
mov
mov
mov
inc
mov
inc
movzx
mov
mov
mov
inc
xor
mov
mov
mov
mov
inc
add
dec
jne
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
test
jle
mov
add
movzx
mov
movzx
mov
add
mov
inc
movzx
mov
movzx
mov
add
movzx
mov
movzx
mov
add
add
dec
jne
pop
pop
pop
pop
ret
mov
push
mov
mov
xchg
call
pop
ret
push
mov
push
mov
test
jle
xor
mov
mov
add
inc
dec
jne
pop
pop
ret
mov
push
mov
push
push
push
mov
test
jle
mov
add
movzx
mov
mov
mov
inc
mov
inc
movzx
mov
mov
mov
inc
xor
mov
mov
mov
mov
inc
mov
mov
mov
inc
add
inc
dec
jne
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
mov
test
jle
mov
add
movzx
mov
movzx
mov
add
mov
inc
movzx
mov
movzx
mov
add
movzx
mov
movzx
mov
add
mov
movzx
mov
add
add
inc
dec
jne
pop
pop
pop
pop
ret
lea
push
mov
push
push
mov
mov
test
jle
mov
mov
inc
mov
mov
inc
inc
inc
dec
jne
pop
pop
pop
ret
push
mov
push
push
mov
mov
test
jle
movzx
mov
add
movzx
mov
add
inc
inc
dec
jne
pop
pop
pop
ret
push
push
push
push
add
mov
mov
xor
mov
mov
mov
call
movzx
cmp
ja
jmp
adc
inc
add
add
add
mov
inc
add
inc
add
(bad)
dec
add
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
dec
je
sub
je
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
xor
mov
call
jmp
mov
mov
mov
mov
mov
call
mov
mov
dec
imul
mov
call
add
mov
mov
call
mov
mov
cmp
jne
mov
dec
test
jl
inc
mov
mov
push
mov
mov
mov
call
mov
call
mov
push
lea
mov
mov
call
mov
push
xor
mov
mov
mov
mov
call
mov
dec
cmp
jle
mov
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
inc
mov
mov
call
cmp
jne
jmp
mov
call
mov
sub
mov
add
inc
dec
jne
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
add
mov
mov
add
movzx
mov
mov
mov
inc
mov
inc
movzx
mov
mov
mov
inc
mov
movzx
mov
mov
mov
inc
xor
mov
mov
lea
add
add
cmp
jl
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
add
mov
mov
add
movzx
mov
movzx
mov
add
mov
inc
movzx
mov
movzx
mov
add
mov
movzx
mov
movzx
mov
add
xor
mov
mov
lea
add
add
cmp
jl
pop
pop
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
xor
call
xor
mov
mov
mov
call
lea
movzx
mov
movzx
imul
test
jns
add
sar
add
mov
mov
call
movzx
mov
movzx
imul
and
jns
dec
or
inc
sub
mov
movzx
shr
movzx
and
mov
shl
mov
or
xor
mov
add
movzx
sub
test
jge
inc
mov
cmp
jl
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
mov
xor
mov
mov
mov
add
mov
mov
movzx
mov
add
mov
and
mov
add
add
cmp
jl
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
add
mov
mov
add
mov
mov
add
movzx
mov
mov
mov
inc
mov
inc
movzx
mov
mov
mov
inc
mov
movzx
mov
mov
mov
inc
mov
mov
mov
inc
xor
mov
mov
lea
add
add
add
cmp
jl
pop
pop
pop
pop
pop
ret
lea
push
mov
add
push
push
mov
mov
mov
xor
mov
mov
lea
add
mov
mov
add
mov
mov
add
movzx
mov
add
mov
inc
movzx
mov
add
mov
movzx
mov
add
mov
movzx
mov
add
xor
mov
mov
lea
add
add
add
mov
cmp
jl
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
xor
mov
mov
mov
add
mov
mov
add
mov
mov
mov
mov
inc
mov
mov
mov
inc
xor
mov
mov
add
add
add
cmp
jl
pop
pop
pop
pop
ret
mov
push
mov
add
push
push
mov
mov
mov
xor
mov
mov
mov
add
mov
mov
add
mov
mov
movzx
mov
add
mov
movzx
mov
add
xor
mov
mov
add
add
add
mov
cmp
jl
pop
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
xor
mov
mov
mov
call
movzx
cmp
ja
jmp
pushf
xchg
mov
pusha
xchg
pushf
xchg
or
mov
fiadd
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
dec
je
sub
je
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
dec
cdq
idiv
mov
mov
call
mov
push
mov
call
mov
mov
pop
call
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
call
mov
mov
dec
sub
imul
mov
call
add
mov
mov
call
mov
mov
imul
add
mov
cmp
jbe
cmp
jne
jmp
mov
push
mov
push
mov
mov
mov
call
mov
call
mov
push
lea
mov
mov
call
mov
push
xor
mov
mov
mov
mov
call
add
cmp
jge
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
call
cmp
jne
jmp
mov
call
mov
imul
sub
mov
imul
add
cmp
jl
inc
add
add
add
add
cmp
jne
mov
mov
call
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
test
je
mov
dec
test
jb
inc
xor
mov
cmp
jb
mov
sub
mov
mov
jmp
xor
mov
mov
sub
mov
mov
inc
dec
jne
mov
test
je
mov
dec
test
jb
inc
xor
mov
mov
mov
sub
mov
mov
inc
dec
jne
mov
test
je
mov
dec
test
jb
inc
xor
mov
cmp
jb
mov
sub
mov
mov
jmp
xor
mov
mov
mov
xor
mov
xor
mov
add
shr
mov
mov
sub
mov
mov
inc
dec
jne
mov
test
je
xor
mov
mov
dec
test
jb
inc
xor
mov
cmp
jb
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
inc
dec
jne
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
mov
jmp
xor
mov
mov
xor
lea
mov
mov
cmp
ja
and
bt
jae
xor
mov
mov
lea
mov
call
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
sub
jb
inc
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jne
inc
inc
dec
jne
mov
cmp
jbe
mov
mov
mov
mov
inc
add
cmp
jne
mov
add
pop
pop
pop
pop
ret
add
add
add
add
add
push
mov
mov
xor
mov
cmp
jl
mov
mov
mov
mov
jmp
mov
call
xor
mov
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
push
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
cdq
idiv
test
jne
mov
mov
cdq
idiv
cmp
jle
mov
mov
mov
jmp
mov
mov
cdq
idiv
mov
mov
mov
mov
dec
test
jl
inc
xor
mov
call
lea
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
add
inc
dec
jne
mov
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
add
mov
mov
mov
lea
mov
call
mov
mov
mov
call
mov
dec
test
jl
inc
xor
lea
xor
mov
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
mov
inc
movzx
mov
mov
mov
mov
inc
inc
dec
jne
mov
mov
call
pop
pop
pop
pop
pop
pop
ret
mov
push
call
je
mov
mov
xor
call
mov
mov
call
mov
pop
ret
nop
push
mov
cmp
je
mov
mov
call
mov
pop
ret
mov
mov
call
pop
ret
push
mov
add
fld
fcomp
fnstsw
sahf
jne
xor
mov
mov
mov
jmp
fld
fcomp
fnstsw
sahf
je
fld
fcomp
fnstsw
sahf
jne
xor
mov
mov
mov
jmp
fld
fldln2
fxch
fyl2x
fld
fmulp
call
fstp
fld
mov
pop
ret
add
add
add
push
mov
add
push
push
push
mov
mov
mov
push
mov
mov
mov
call
mov
cmp
je
mov
mov
call
mov
test
je
mov
xor
mov
fild
fdiv
add
fstp
fwait
mov
xor
mov
fild
fdiv
fld
fmulp
fdivr
add
fstp
fwait
call
fmul
call
mov
mov
fild
fdiv
add
fstp
fwait
mov
xor
mov
fild
fdiv
fld
fmulp
fdivr
add
fstp
fwait
call
fmul
call
mov
inc
cmp
jne
mov
pop
pop
pop
mov
pop
ret
add
add
add
add
inc
int
int3
int3
int3
int3
int3
mov
inc
add
add
cmp
mov
mov
call
mov
mov
dec
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
mov
cdq
idiv
mov
mov
pop
ret
nop
push
mov
mov
call
mov
mov
dec
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
mov
cdq
idiv
mov
mov
pop
ret
nop
push
push
mov
mov
cmp
je
mov
mov
call
mov
call
mov
mov
pop
pop
ret
nop
push
push
push
mov
lea
call
mov
call
mov
mov
dec
test
jl
inc
xor
mov
mov
call
call
inc
dec
jne
mov
call
pop
pop
pop
ret
lea
push
push
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
ret
add
add
add
push
mov
mov
call
mov
call
mov
call
mov
pop
ret
push
push
push
mov
mov
mov
mov
call
test
je
mov
call
mov
push
mov
call
mov
push
mov
call
mov
pop
pop
call
mov
mov
call
movzx
cmp
ja
jmp
rcl
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
call
movzx
lea
shr
mov
jmp
mov
call
movzx
add
shr
mov
jmp
mov
call
movzx
shl
shr
mov
jmp
xor
mov
jmp
xor
mov
xor
mov
pop
pop
pop
ret
lea
push
mov
mov
call
test
je
mov
call
mov
pop
ret
xor
pop
ret
lea
push
mov
mov
call
test
je
mov
call
mov
pop
ret
xor
pop
ret
lea
push
push
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jle
mov
xor
call
mov
jmp
xor
mov
mov
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
movs
movs
movs
movs
mov
mov
lea
xor
mov
call
mov
call
mov
mov
mov
call
mov
mov
neg
mov
mov
lea
mov
rep
push
call
mov
cmp
je
push
push
lea
push
push
lea
push
mov
push
call
mov
cmp
je
cmp
jne
cmp
je
mov
push
call
mov
push
call
jmp
mov
push
mov
push
call
mov
push
mov
call
mov
push
mov
call
mov
push
mov
push
mov
push
mov
push
mov
call
mov
push
mov
call
mov
push
push
push
mov
push
call
mov
call
mov
mov
mov
call
movzx
imul
add
and
test
jns
add
sar
mov
mov
call
movzx
mov
call
imul
add
and
test
jns
add
sar
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
dec
imul
mov
call
add
mov
mov
call
mov
dec
je
sub
je
sub
je
sub
jne
mov
call
mov
test
jle
mov
mov
call
mov
dec
test
jl
inc
xor
mov
lea
lea
add
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
lea
inc
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
lea
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
inc
dec
jne
mov
add
mov
sub
mov
add
dec
jne
jmp
mov
call
cmp
jne
mov
call
mov
test
jle
mov
mov
call
mov
dec
test
jl
inc
xor
mov
lea
mov
call
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
inc
dec
jne
mov
add
mov
sub
mov
add
dec
jne
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
test
jle
mov
xor
mov
mov
xor
mov
mov
call
mov
dec
je
dec
je
sub
je
jmp
mov
and
jns
dec
or
inc
mov
sub
mov
movzx
shr
and
mov
jmp
mov
and
jns
dec
or
inc
mov
sub
mov
shl
mov
movzx
shr
and
mov
jmp
mov
mov
mov
mov
lea
xor
mov
mov
mov
mov
mov
call
shr
and
xor
mov
imul
add
xor
mov
mov
sub
xor
mov
imul
add
shr
mov
mov
mov
call
shr
and
xor
mov
imul
add
xor
mov
mov
sub
xor
mov
imul
add
shr
mov
mov
mov
call
and
xor
mov
imul
add
xor
mov
mov
sub
xor
mov
imul
add
shr
mov
inc
mov
call
movzx
add
cmp
jl
inc
mov
call
cmp
jl
mov
add
mov
sub
dec
jne
push
mov
call
mov
push
mov
call
mov
push
push
push
mov
push
mov
call
mov
push
mov
call
mov
push
mov
push
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
pop
pop
ret
add
push
push
dec
push
inc
push
mov
add
push
push
push
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
call
sub
jne
mov
call
add
mov
call
push
mov
call
add
mov
call
push
push
push
lea
push
call
lea
mov
mov
call
jmp
mov
call
add
push
mov
call
add
mov
call
push
mov
call
add
mov
call
push
push
push
lea
push
call
lea
push
mov
call
push
mov
lea
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
je
mov
jmp
mov
cmp
je
push
mov
call
sub
imul
push
mov
call
sub
pop
xchg
mov
xor
div
push
mov
xor
mov
call
test
je
lea
mov
mov
call
cmp
jae
mov
mov
call
test
je
mov
mov
call
test
jne
xor
jmp
mov
mov
jmp
mov
call
mov
lea
mov
mov
call
mov
cmp
jne
lea
lea
mov
call
mov
mov
call
je
mov
jmp
cmp
je
lea
lea
mov
call
mov
mov
call
je
lea
lea
mov
call
mov
mov
call
jne
mov
call
mov
add
add
mov
call
jmp
lea
lea
mov
call
mov
mov
call
jne
mov
mov
mov
call
mov
cmp
jne
mov
jmp
lea
lea
mov
call
mov
call
mov
xor
mov
cmp
je
mov
push
xor
mov
mov
mov
mov
mov
call
test
je
cmp
je
cmp
jne
jmp
mov
push
mov
mov
mov
call
test
je
lea
lea
mov
call
mov
mov
call
jne
cmp
jne
mov
jmp
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
dec
inc
inc
push
(bad)
(bad)
(bad)
inc
add
dec
dec
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
dec
inc
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
arpl
dec
add
add
(bad)
(bad)
(bad)
inc
add
dec
inc
dec
inc
add
add
push
push
push
push
add
mov
mov
mov
mov
mov
call
mov
mov
dec
test
jl
inc
mov
xor
mov
mov
call
mov
call
mov
mov
and
cmp
je
mov
mov
call
mov
mov
call
jmp
mov
mov
call
mov
call
inc
dec
jne
pop
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
lea
mov
mov
mov
inc
inc
cmp
jne
pop
ret
mov
push
push
push
push
mov
mov
call
mov
xor
mov
mov
call
mov
xor
mov
cmp
ja
jmp
ins
sahf
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
add
adc
je
mov
cmp
je
mov
jmp
mov
mov
pop
pop
pop
pop
ret
add
push
push
push
mov
mov
cmp
jle
mov
xor
call
mov
mov
call
je
xor
pop
pop
ret
mov
pop
pop
ret
add
(bad)
(bad)
(bad)
inc
add
dec
dec
inc
push
add
add
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
mov
mov
dec
test
jl
inc
xor
mov
mov
call
mov
lea
lea
mov
call
mov
mov
mov
call
jne
mov
mov
jmp
inc
dec
jne
xor
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
xor
mov
lea
lea
mov
call
mov
call
and
cmp
ja
jmp
sub
add
mov
inc
add
inc
add
mov
inc
add
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
xor
call
mov
mov
jmp
mov
mov
test
jle
mov
dec
mov
call
mov
mov
call
je
mov
mov
xor
call
mov
mov
mov
call
mov
mov
jmp
mov
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
mov
mov
call
jmp
mov
mov
xor
call
mov
mov
jmp
mov
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
mov
mov
call
jmp
cmp
je
mov
mov
mov
call
jmp
mov
mov
xor
call
mov
mov
jmp
mov
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
mov
mov
call
jmp
mov
mov
xor
call
mov
mov
jmp
mov
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
mov
mov
call
jmp
mov
mov
xor
call
mov
mov
jmp
mov
mov
xor
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
mov
mov
call
jmp
mov
mov
call
mov
jmp
mov
mov
xor
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
mov
mov
call
jmp
mov
mov
call
mov
jmp
mov
mov
xor
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
mov
mov
call
jmp
mov
mov
call
mov
mov
add
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
dec
inc
dec
inc
add
add
dec
inc
inc
push
dec
dec
inc
push
push
dec
push
inc
addr16
dec
inc
push
push
dec
push
dec
inc
dec
inc
push
mov
lea
call
lea
call
mov
call
mov
pop
ret
mov
push
mov
xor
push
push
push
mov
inc
jne
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
sub
jae
call
not
and
sete
ret
add
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
test
sete
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
and
add
add
add
fs
inc
add
mov
push
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
or
or
call
mov
mov
xor
call
mov
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
call
xor
call
push
push
push
mov
mov
push
call
mov
mov
call
mov
mov
or
call
pop
pop
pop
ret
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
outs
ins
popa
add
(bad)
(bad)
(bad)
call
add
add
gs
jae
and
ins
arpl
and
addr16
gs
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
arpl
add
mov
call
ret
lea
push
push
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
call
mov
dec
test
jl
inc
xor
mov
shl
mov
mov
mov
mov
mov
call
mov
mov
mov
call
push
call
movzx
pop
cmp
jne
mov
inc
dec
jne
cmp
jne
mov
call
mov
dec
test
jl
inc
xor
mov
shl
mov
mov
mov
mov
call
jne
mov
jmp
inc
dec
jne
cmp
jne
xor
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
ins
imul
push
push
mov
xor
push
push
push
mov
mov
call
mov
mov
lea
mov
call
mov
mov
call
mov
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
cmp
jne
xor
call
pop
ret
nop
push
mov
mov
mov
call
push
push
push
mov
call
call
push
call
pop
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
adc
inc
add
add
add
add
add
mov
push
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
xor
call
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
call
xor
call
push
push
push
mov
mov
push
call
mov
mov
call
pop
pop
pop
ret
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
outs
ins
popa
add
mov
mov
mov
call
ret
lea
mov
mov
mov
call
ret
lea
mov
mov
mov
call
ret
lea
mov
mov
mov
call
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
lea
mov
call
mov
mov
call
mov
test
jne
mov
mov
call
jmp
call
mov
test
jle
lea
push
mov
dec
mov
mov
call
mov
mov
call
lea
push
mov
call
mov
lea
mov
call
mov
mov
call
mov
test
jg
cmp
je
mov
mov
call
lea
mov
mov
dec
mov
call
mov
mov
dec
mov
call
mov
call
jmp
push
lea
mov
xor
call
push
push
mov
mov
call
mov
xor
call
mov
lea
mov
call
mov
lea
mov
call
cmp
jle
mov
cmp
jg
mov
cmp
jne
mov
mov
call
jmp
push
push
push
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
cs
add
in
push
push
push
push
push
mov
mov
xor
push
push
push
mov
mov
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
call
lea
push
mov
call
mov
mov
call
add
sub
push
mov
call
mov
mov
mov
pop
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
push
mov
call
pop
call
mov
add
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
dec
mov
add
add
add
add
add
add
mov
push
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
or
or
call
mov
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
xor
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
call
xor
call
push
push
push
mov
mov
push
call
mov
mov
call
mov
mov
or
call
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
outs
ins
popa
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
arpl
add
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
ja
add
push
mov
xor
push
push
push
push
push
push
push
mov
xor
push
push
push
mov
mov
mov
mov
mov
call
lea
push
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
lea
mov
mov
mov
xor
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
add
add
call
inc
add
in
add
push
xor
mov
mov
mov
mov
mov
xor
push
push
push
mov
lea
mov
call
lea
mov
mov
call
lea
mov
call
mov
mov
mov
call
mov
mov
call
test
jne
push
mov
mov
mov
call
push
lea
push
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
mov
call
push
mov
mov
mov
push
call
jmp
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
push
mov
push
push
push
mov
xor
push
push
push
mov
lea
mov
call
lea
mov
mov
mov
call
mov
lea
call
test
je
cmp
je
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
add
add
add
add
fs
inc
add
mov
inc
add
add
xor
add
add
add
add
add
add
adc
push
push
imul
push
push
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
push
push
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
xor
call
mov
push
push
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
xor
xor
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
xor
call
xor
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
xor
call
xor
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
xor
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
or
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
or
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
xor
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
xor
mov
call
mov
call
mov
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
push
mov
mov
xor
xor
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
or
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
or
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
or
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
or
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
push
push
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
call
xor
call
push
push
push
mov
mov
push
call
mov
mov
call
mov
mov
call
pop
pop
pop
ret
add
add
(bad)
(bad)
inc
add
add
add
add
dec
dec
dec
inc
dec
dec
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
ins
popa
add
add
add
(bad)
(bad)
(bad)
inc
add
add
jb
popa
outs
popa
add
add
add
add
add
in
push
push
push
push
push
push
mov
xor
push
push
push
mov
add
call
mov
cmp
jne
mov
mov
call
test
je
mov
call
jmp
mov
sub
jb
je
dec
je
dec
je
jmp
mov
mov
mov
call
jmp
mov
call
mov
sar
jns
adc
lea
mov
call
mov
test
jle
mov
lea
push
mov
add
dec
mov
mov
call
mov
call
push
lea
call
pop
mov
inc
dec
jne
mov
call
push
lea
call
mov
mov
mov
call
jmp
mov
call
mov
mov
mov
call
jmp
push
mov
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
add
mov
mov
test
je
push
lea
push
call
jmp
push
lea
push
call
mov
lea
mov
call
add
pop
ret
push
add
mov
push
push
push
call
lea
push
mov
push
call
mov
push
call
mov
lea
mov
call
add
pop
ret
mov
push
mov
xor
push
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
push
mov
mov
call
xor
mov
cmp
ja
mov
jmp
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
add
add
sbb
sbb
sbb
push
pop
and
and
and
and
and
and
and
and
and
and
and
push
rol
push
rol
data16
jb
inc
add
inc
add
rol
stos
rol
sti
rol
or
inc
add
rol
aas
rol
push
rol
popa
rol
jb
inc
add
rol
fcmovnbe
inc
add
rol
hlt
rol
add
inc
add
rol
and
inc
add
rol
push
rol
push
rol
mov
inc
add
rol
mov
inc
add
rol
add
inc
add
add
call
cmp
jne
push
mov
mov
mov
call
cmp
jne
lea
call
mov
mov
lea
call
mov
mov
mov
call
jmp
mov
call
jmp
mov
call
jmp
mov
mov
call
jmp
mov
call
jmp
mov
xor
call
jmp
push
mov
mov
mov
call
cmp
jne
lea
mov
call
mov
mov
mov
call
mov
call
test
jne
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
call
cmp
jbe
mov
mov
call
jmp
lea
mov
call
mov
mov
mov
call
jmp
push
lea
call
mov
mov
mov
call
jmp
lea
xor
call
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
mov
call
jmp
mov
xor
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
push
mov
mov
mov
call
cmp
jne
push
mov
mov
mov
call
cmp
jne
mov
mov
call
jmp
mov
xor
mov
mov
mov
mov
call
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
dec
add
add
outs
addr16
ins
inc
imul
(bad)
(bad)
(bad)
jmp
add
add
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
(bad)
(bad)
dec
add
add
pop
push
jb
addr16
ins
and
ins
gs
(bad)
(bad)
(bad)
dec
add
push
jne
arpl
dec
popa
jne
arpl
add
add
(bad)
(bad)
(bad)
cmp
add
push
outs
data16
popa
jb
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
inc
outs
outs
jbe
dec
popa
jo
jb
jne
jae
(bad)
(bad)
(bad)
jmp
add
add
arpl
jae
data16
dec
outs
je
jb
gs
inc
js
ins
outs
jb
jb
push
jne
arpl
dec
popa
jne
arpl
add
(bad)
(bad)
(bad)
dec
inc
outs
ins
ins
outs
outs
and
ins
gs
add
(bad)
(bad)
(bad)
dec
add
add
outs
addr16
ins
push
ss
xor
add
in
push
push
push
push
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
mov
mov
call
mov
mov
call
mov
test
je
lea
push
lea
mov
mov
call
mov
call
mov
mov
cmp
jbe
cmp
jae
sub
mov
lea
mov
call
mov
or
je
lea
mov
call
mov
lea
call
lea
mov
mov
call
mov
mov
mov
call
test
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
inc
and
and
push
mov
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
call
mov
cmp
jl
mov
cmp
jne
lea
lea
mov
call
dec
test
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
fdivr
call
mov
mov
mov
call
mov
mov
pop
ret
lea
push
mov
push
mov
mov
cmp
jne
mov
mov
add
adc
fild
fdiv
call
mov
mov
mov
call
mov
mov
call
pop
pop
ret
add
add
add
mov
mov
mov
call
xor
mov
push
push
mov
call
mov
mov
call
test
je
cmp
je
test
jne
mov
mov
call
mov
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
push
push
push
push
mov
mov
mov
mov
xor
push
push
push
mov
lea
call
push
mov
push
push
push
mov
push
call
lea
call
mov
call
push
mov
push
mov
call
mov
call
push
mov
push
mov
call
cmp
jne
lea
mov
call
jmp
lea
mov
call
mov
call
push
mov
push
mov
call
cmp
je
mov
push
mov
call
push
mov
push
mov
call
test
je
mov
call
push
mov
push
mov
call
lea
call
push
push
mov
push
mov
call
mov
call
mov
push
mov
push
mov
push
mov
call
mov
mov
call
cmp
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
xor
push
push
push
push
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
call
mov
cmp
jle
lea
push
mov
mov
mov
call
mov
mov
call
jne
lea
push
mov
mov
mov
call
mov
mov
call
jne
push
push
push
lea
mov
call
lea
mov
call
push
push
push
lea
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
mov
mov
push
push
dec
jne
push
push
push
mov
xor
push
push
push
mov
lea
mov
mov
mov
xor
call
lea
mov
mov
mov
xor
call
lea
mov
call
mov
call
lea
mov
call
mov
call
mov
call
test
je
mov
call
mov
mov
mov
xor
call
mov
call
test
je
call
mov
mov
call
test
je
mov
mov
call
jmp
mov
mov
call
mov
call
mov
mov
xor
xor
call
mov
xor
push
push
mov
mov
call
lea
mov
mov
call
mov
call
mov
call
mov
lea
call
mov
movzx
mov
call
lea
mov
mov
call
mov
call
call
mov
mov
mov
call
mov
mov
mov
mov
dec
test
jl
inc
xor
lea
lea
call
push
push
lea
mov
mov
call
push
lea
mov
call
mov
mov
call
inc
dec
jne
mov
call
xor
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
call
dec
jne
inc
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
mov
call
mov
dec
test
jl
inc
xor
push
lea
lea
call
push
push
lea
mov
call
mov
mov
call
push
mov
add
mov
mov
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
xor
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
call
dec
jne
inc
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
xor
mov
mov
call
mov
dec
test
jl
inc
xor
mov
add
lea
mov
mov
mov
call
dec
jne
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
push
mov
mov
mov
lea
xor
call
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
xor
mov
mov
call
mov
dec
test
jl
inc
xor
mov
shl
sub
mov
mov
mov
call
dec
jne
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
push
mov
mov
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
mov
call
mov
dec
test
jl
inc
xor
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
push
lea
mov
mov
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
xor
mov
xor
mov
mov
call
mov
mov
call
mov
mov
call
add
dec
sub
jl
inc
mov
add
lea
mov
mov
mov
call
test
jne
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
jmp
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
push
mov
mov
mov
lea
xor
call
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
mov
call
mov
dec
test
jl
inc
xor
push
lea
lea
call
push
push
lea
mov
call
mov
mov
call
push
mov
add
mov
mov
mov
lea
xor
call
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
mov
mov
call
xor
mov
cmp
ja
jmp
(bad)
loope
add
loop
add
inc
add
inc
add
inc
add
loop
add
loop
add
loop
add
inc
add
jecxz
add
inc
add
inc
add
inc
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
inc
add
inc
add
in
add
in
add
in
add
in
add
in
add
in
add
inc
add
inc
add
inc
add
out
add
inc
add
in
add
in
add
in
add
out
add
out
add
out
add
inc
add
inc
add
inc
add
out
add
out
add
out
add
clc
xchg
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
xor
call
jmp
lea
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
call
jmp
lea
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
jmp
mov
call
mov
mov
add
add
mov
call
add
mov
call
add
mov
add
add
add
add
add
lea
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
push
mov
mov
call
pop
inc
cmp
jne
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
inc
add
add
pop
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
pop
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
add
in
add
push
push
push
xor
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
lea
mov
mov
mov
call
xor
mov
cmp
jne
mov
mov
mov
lea
xor
call
mov
mov
mov
lea
xor
call
lea
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
dec
jne
lea
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
lea
push
call
test
je
jmp
mov
mov
call
push
mov
push
call
cmp
je
mov
push
call
jmp
mov
push
mov
call
push
mov
call
push
mov
call
push
push
mov
mov
mov
push
call
push
push
mov
call
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
outs
add
add
push
mov
mov
push
push
dec
jne
push
push
push
mov
xor
push
push
push
mov
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
lea
xor
call
lea
mov
call
mov
mov
mov
mov
lea
call
mov
mov
call
mov
mov
call
mov
call
test
je
mov
add
mov
mov
mov
lea
xor
call
lea
mov
call
mov
push
lea
mov
call
mov
lea
call
mov
pop
call
test
jne
lea
mov
call
jmp
lea
mov
call
call
cmp
jbe
lea
mov
call
jmp
lea
call
mov
push
push
push
push
push
push
lea
mov
call
mov
mov
mov
call
mov
call
push
call
push
push
push
push
call
push
push
mov
call
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
dec
push
add
(bad)
(bad)
call
add
add
data16
popa
jb
pop
dec
imul
je
push
imul
add
(bad)
(bad)
call
inc
jne
jb
outs
je
gs
imul
je
add
add
in
push
push
mov
mov
call
xor
push
push
push
mov
mov
call
push
call
mov
push
push
call
test
je
call
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
inc
ins
ins
push
imul
jb
gs
add
push
mov
mov
mov
call
push
mov
mov
mov
call
push
mov
mov
mov
push
call
mov
call
call
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
cmp
jne
mov
call
push
mov
call
pop
xchg
sub
sub
xor
mov
mov
mov
mov
cmp
jne
cmp
jbe
jmp
jle
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
jmp
push
push
mov
mov
call
mov
mov
jmp
inc
mov
call
cmp
jne
lea
xor
call
mov
mov
call
lea
mov
call
mov
mov
mov
mov
mov
call
lea
mov
call
mov
mov
mov
call
jmp
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
test
jne
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
sub
sbb
push
push
mov
mov
call
add
adc
mov
mov
mov
mov
cmp
jne
cmp
ja
jmp
jg
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
es
push
add
mov
cmp
jle
mov
call
push
call
mov
call
mov
mov
mov
call
mov
call
cmp
jne
mov
call
cdq
mov
mov
jmp
mov
call
cdq
mov
mov
cmp
jne
mov
call
mov
imul
mov
add
mov
xor
call
push
push
mov
call
mov
call
mov
mov
call
add
pop
ret
add
add
(bad)
(bad)
inc
add
dec
push
inc
inc
add
add
push
mov
push
push
mov
xor
push
push
push
mov
cmp
jle
mov
mov
lea
mov
call
mov
call
inc
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
xor
push
push
push
mov
mov
sub
je
sub
je
sub
jne
mov
mov
mov
mov
call
mov
lea
mov
add
call
mov
push
push
lea
call
push
push
mov
mov
mov
call
mov
mov
fild
add
fstp
fwait
lea
call
push
push
mov
mov
call
mov
lea
mov
add
call
mov
push
push
lea
call
push
push
mov
fild
add
fstp
fwait
lea
call
push
push
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
sub
je
sub
je
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
jmp
mov
mov
jmp
mov
mov
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
(bad)
(bad)
inc
add
and
and
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
mov
add
push
push
push
xor
mov
mov
mov
lea
movs
movs
mov
mov
xor
push
push
push
mov
mov
lea
mov
mov
mov
lea
xor
call
mov
mov
call
mov
mov
call
push
call
mov
cmp
je
test
jne
push
push
push
push
push
push
mov
mov
call
push
call
mov
lea
push
push
push
push
call
push
call
lea
mov
mov
mov
call
cmp
ja
jmp
jmp
add
repz
add
repz
add
repz
add
sbb
(bad)
call
cmp
in
push
imul
push
call
pop
jmp
mov
jmp
mov
jmp
lea
lea
call
dec
sete
jmp
mov
cmp
je
test
je
and
push
mov
mov
call
push
call
mov
mov
call
push
call
jmp
lea
mov
mov
call
mov
call
cmp
jne
mov
call
jmp
lea
mov
mov
mov
call
dec
jne
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
push
push
mov
call
lea
push
mov
push
mov
push
call
lea
push
lea
push
call
mov
cdq
push
push
mov
call
mov
lea
call
test
je
lea
mov
call
mov
mov
mov
mov
lea
call
mov
mov
call
mov
cdq
mov
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
push
mov
mov
mov
call
push
mov
mov
push
push
push
mov
mov
push
lea
mov
call
mov
call
push
mov
mov
push
call
sub
je
dec
je
jmp
mov
jmp
mov
mov
cmp
je
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
add
add
(bad)
(bad)
inc
add
add
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
lea
xor
call
mov
call
mov
mov
cmp
je
xor
mov
mov
mov
lea
mov
xor
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
call
mov
mov
mov
call
mov
call
push
push
mov
call
jmp
mov
mov
mov
mov
xor
call
mov
call
mov
dec
test
jl
inc
call
mov
push
push
mov
call
mov
xor
xor
call
lea
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
mov
call
push
push
lea
lea
mov
call
test
je
lea
mov
call
mov
mov
mov
mov
lea
call
mov
mov
call
mov
mov
call
lea
mov
call
mov
call
mov
mov
call
mov
mov
call
test
je
push
push
mov
call
mov
call
push
push
push
push
push
push
mov
call
push
call
mov
lea
push
lea
push
lea
push
push
call
push
call
mov
push
mov
call
push
call
jmp
lea
push
lea
push
mov
mov
xor
call
cmp
jne
jmp
mov
mov
mov
call
push
push
mov
call
dec
jne
mov
call
mov
call
push
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
xor
push
push
push
mov
mov
call
mov
lea
lea
mov
call
mov
mov
mov
add
call
mov
shl
sub
push
mov
mov
mov
call
add
lea
mov
call
mov
mov
shl
sub
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
lea
mov
call
mov
mov
lea
call
cmp
je
lea
mov
call
jmp
lea
mov
call
mov
lea
mov
call
cmp
je
lea
mov
call
jmp
lea
mov
call
mov
lea
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
in
mov
push
push
dec
jne
push
push
push
mov
xor
push
push
push
mov
mov
mov
call
xor
call
call
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
lea
xor
call
mov
call
push
push
mov
call
inc
dec
jne
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
push
push
push
push
mov
mov
mov
call
lea
mov
call
mov
lea
call
mov
push
push
push
push
mov
mov
mov
call
call
add
fstp
fwait
lea
mov
call
mov
push
push
push
push
mov
mov
mov
call
mov
movzx
shl
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
call
mov
fild
fdiv
call
lea
call
mov
push
push
push
push
mov
mov
mov
call
push
push
push
push
mov
mov
mov
call
push
push
push
push
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
shl
sub
mov
mov
mov
lea
xor
call
mov
push
mov
shl
sub
mov
mov
mov
call
push
mov
shl
sub
mov
mov
mov
call
dec
sete
push
mov
shl
sub
mov
mov
mov
lea
xor
call
mov
push
mov
shl
sub
mov
mov
mov
lea
xor
call
mov
push
mov
shl
sub
mov
mov
mov
call
pop
pop
call
push
push
mov
call
inc
dec
jne
mov
call
mov
mov
mov
mov
call
push
call
mov
call
mov
dec
test
jl
inc
xor
lea
call
mov
shl
mov
mov
mov
call
mov
mov
cmp
ja
jmp
cmp
inc
add
inc
pop
add
xor
inc
add
add
cmp
(bad)
inc
add
mov
call
test
je
mov
jmp
mov
lea
mov
call
mov
push
mov
lea
call
mov
lea
call
mov
lea
pop
call
jmp
mov
call
test
je
mov
call
test
je
mov
jmp
mov
mov
lea
call
jmp
mov
call
test
je
mov
call
test
je
mov
jmp
mov
mov
lea
call
jmp
mov
call
test
je
lea
mov
call
jmp
mov
shl
mov
mov
mov
lea
xor
call
cmp
je
cmp
jge
mov
shl
mov
mov
mov
lea
xor
call
mov
push
lea
mov
call
mov
lea
pop
call
lea
mov
call
mov
call
mov
shl
mov
mov
mov
lea
xor
call
mov
push
mov
shl
mov
mov
mov
lea
xor
call
mov
push
mov
shl
mov
mov
mov
lea
xor
call
mov
push
mov
shl
mov
mov
mov
call
push
lea
push
mov
shl
mov
mov
mov
lea
xor
call
mov
push
mov
shl
mov
mov
mov
lea
xor
call
mov
mov
pop
call
mov
mov
call
push
push
mov
call
inc
dec
jne
call
mov
call
test
je
mov
mov
mov
mov
call
call
push
push
mov
call
mov
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
lea
mov
mov
mov
lea
xor
call
mov
lea
call
mov
call
mov
add
lea
mov
mov
mov
lea
xor
call
mov
call
mov
mov
add
lea
mov
mov
mov
lea
xor
call
mov
mov
add
call
mov
add
lea
mov
mov
mov
lea
xor
call
mov
add
lea
mov
mov
mov
call
test
jne
lea
push
mov
xor
mov
call
cmp
jne
mov
mov
lea
push
mov
add
lea
mov
mov
mov
lea
xor
call
mov
mov
mov
call
mov
call
push
push
mov
call
inc
dec
jne
mov
call
test
je
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
lea
xor
call
lea
mov
call
mov
mov
mov
mov
lea
call
mov
mov
call
mov
mov
call
mov
call
push
push
mov
call
inc
dec
jne
mov
call
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
call
push
call
mov
call
push
push
push
push
call
mov
cmp
je
call
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
call
push
call
inc
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
push
add
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
outs
jae
popa
ins
ins
pop
add
add
(bad)
(bad)
(bad)
dec
add
add
jo
popa
jns
popa
ins
gs
(bad)
(bad)
dec
add
add
jo
popa
jns
gs
imul
(bad)
dec
add
push
gs
imul
jb
add
add
(bad)
(bad)
dec
add
push
gs
imul
jb
add
add
(bad)
(bad)
dec
add
add
bound
push
add
(bad)
(bad)
dec
add
add
jo
popa
jns
arpl
add
(bad)
(bad)
dec
add
add
imul
push
je
imul
dec
add
push
push
dec
dec
outs
outs
inc
bound
je
add
add
(bad)
(bad)
dec
add
add
ins
jo
imul
(bad)
(bad)
(bad)
dec
add
add
jae
popa
ins
ins
dec
outs
arpl
imul
dec
outs
jae
popa
ins
ins
push
outs
jne
arpl
add
(bad)
(bad)
(bad)
dec
add
add
jns
dec
dec
fs
add
(bad)
(bad)
(bad)
dec
add
add
jae
popa
ins
ins
inc
popa
je
add
(bad)
(bad)
dec
add
add
addr16
add
add
add
add
dec
jae
imul
imul
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
dec
add
add
dec
outs
imul
(bad)
(bad)
(bad)
dec
add
add
push
gs
imul
inc
sbb
dec
cdq
(bad)
inc
lea
push
cmp
ja
jmp
mov
push
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
xor
mov
mov
mov
cmp
sete
mov
mov
call
test
jbe
cmp
jb
xor
jmp
mov
mov
mov
mov
call
mov
mov
call
cmp
seta
mov
call
mov
mov
call
mov
mov
call
cmp
je
mov
call
mov
mov
call
sub
mov
call
mov
sub
sub
mov
call
mov
call
mov
mov
call
add
mov
mov
call
cmp
jae
xor
xor
mov
cmp
je
mov
mov
call
call
inc
cmp
jne
xor
mov
mov
call
call
xor
mov
cmp
ja
jmp
jg
inc
add
or
aaa
or
js
inc
add
or
or
inc
add
inc
add
or
add
push
inc
add
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
call
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
lea
mov
mov
call
lea
xor
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
push
push
lea
mov
call
push
lea
mov
call
mov
call
test
je
mov
call
test
jne
push
push
mov
mov
push
lea
mov
call
push
push
lea
mov
call
push
lea
mov
call
lea
call
mov
call
test
je
mov
call
test
je
mov
call
test
je
push
mov
mov
push
push
lea
mov
call
mov
call
test
je
mov
call
test
je
push
push
mov
mov
push
push
lea
mov
call
mov
call
test
je
mov
call
test
je
push
push
mov
mov
push
lea
mov
call
cmp
je
push
push
mov
mov
push
push
lea
mov
call
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
xor
call
mov
xor
call
mov
call
mov
mov
call
jmp
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
test
jne
mov
mov
call
mov
call
test
jne
mov
mov
call
mov
call
test
jne
mov
call
test
jne
mov
mov
call
mov
call
test
jne
mov
call
test
je
mov
mov
call
mov
mov
call
mov
mov
call
mov
xor
call
mov
call
jmp
mov
mov
mov
call
mov
call
push
mov
mov
mov
push
call
mov
call
test
je
mov
call
test
je
lea
mov
mov
mov
xor
call
lea
mov
call
mov
call
push
call
push
mov
call
mov
push
call
cmp
jae
push
push
push
push
push
push
call
mov
call
test
je
mov
call
test
je
lea
mov
mov
mov
xor
call
lea
mov
call
mov
call
push
call
push
push
push
mov
call
push
push
push
call
mov
call
test
je
mov
call
test
je
push
push
push
lea
mov
mov
mov
xor
call
mov
call
push
push
push
call
mov
call
test
je
mov
call
test
je
call
cmp
jbe
lea
push
push
call
push
call
test
je
lea
push
push
push
call
test
je
mov
mov
mov
xor
mov
lea
push
lea
push
push
lea
push
push
mov
push
call
push
push
call
call
xor
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
and
and
add
add
(bad)
(bad)
(bad)
inc
add
or
add
add
(bad)
(bad)
inc
add
add
gs
push
ja
push
jb
jbe
ins
gs
in
mov
push
push
dec
jne
push
push
push
push
mov
xor
push
push
push
mov
xor
mov
mov
cmp
jne
mov
call
test
je
xor
mov
mov
cmp
jne
lea
mov
call
cmp
je
inc
lea
mov
call
mov
lea
call
mov
mov
push
call
mov
lea
mov
mov
mov
call
lea
push
lea
mov
call
lea
mov
call
mov
lea
call
lea
pop
call
inc
jne
push
mov
mov
mov
call
push
lea
push
mov
mov
lea
mov
mov
mov
xor
call
mov
call
push
mov
mov
mov
push
call
dec
push
call
jmp
inc
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
pop
add
push
mov
mov
call
test
je
dec
xor
mov
mov
cmp
jne
mov
mov
mov
mov
call
xor
mov
mov
mov
cmp
je
cmp
jne
mov
mov
call
mov
call
pop
ret
nop
push
mov
cmp
jne
mov
push
push
push
mov
push
call
xor
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
xor
lea
xor
mov
call
lea
push
call
test
jne
cmp
je
push
mov
push
mov
call
mov
xor
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
lea
push
call
mov
cmp
setne
test
je
mov
push
mov
push
call
mov
push
mov
push
mov
call
mov
mov
call
mov
push
mov
push
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
mov
push
push
dec
jne
push
push
mov
xor
push
push
push
mov
lea
mov
call
lea
mov
mov
mov
call
mov
lea
call
test
je
cmp
je
lea
mov
mov
mov
xor
call
mov
mov
cmp
je
lea
mov
call
mov
push
lea
push
mov
call
mov
mov
mov
call
mov
lea
call
mov
pop
call
jne
lea
mov
call
mov
lea
call
jmp
lea
mov
mov
mov
xor
call
mov
push
lea
mov
call
mov
lea
pop
call
mov
call
cmp
jne
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
add
(bad)
lock
mov
call
test
je
push
mov
call
push
mov
call
push
mov
call
call
mov
mov
call
mov
call
test
je
mov
call
test
je
mov
call
test
je
mov
call
push
mov
call
push
mov
call
push
push
mov
call
push
mov
call
call
mov
mov
pop
call
jmp
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
call
jmp
mov
call
test
je
mov
call
push
mov
xor
xor
call
push
mov
call
push
mov
call
call
mov
mov
pop
call
jmp
mov
call
push
mov
call
push
mov
call
call
mov
mov
pop
call
add
pop
ret
nop
push
add
mov
mov
call
test
je
mov
mov
call
mov
call
test
je
mov
call
test
je
mov
call
push
mov
call
push
mov
call
push
push
mov
call
push
mov
call
call
mov
mov
pop
call
jmp
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
call
jmp
mov
call
test
je
mov
call
push
mov
xor
xor
call
push
mov
call
push
mov
call
call
mov
mov
pop
call
jmp
mov
call
push
mov
call
push
mov
call
call
mov
mov
pop
call
add
pop
ret
push
push
mov
mov
call
test
jne
mov
call
test
je
xor
jmp
mov
mov
mov
call
mov
mov
call
mov
mov
call
test
je
mov
mov
call
mov
xor
mov
call
pop
pop
ret
mov
mov
call
mov
mov
mov
call
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
mov
xor
push
push
push
mov
xor
mov
mov
cmp
jne
push
call
mov
lea
mov
call
mov
call
cmp
jge
mov
xor
call
jmp
lea
mov
call
mov
mov
lea
call
lea
mov
call
mov
call
mov
mov
call
push
call
lea
mov
call
mov
lea
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
(bad)
(bad)
(bad)
inc
add
add
pop
add
push
mov
push
push
mov
xor
push
push
push
mov
xor
mov
mov
cmp
jne
lea
mov
call
cmp
setne
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
mov
mov
mov
call
ret
mov
call
test
je
mov
mov
mov
call
call
ret
nop
push
push
push
mov
mov
xor
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
mov
xor
call
mov
pop
pop
pop
ret
nop
push
push
mov
mov
call
mov
lea
push
mov
mov
mov
call
add
mov
mov
pop
pop
ret
nop
push
mov
mov
push
push
dec
jne
push
push
push
mov
mov
xor
push
push
push
mov
mov
mov
mov
call
mov
call
test
je
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
call
push
lea
xor
mov
xor
call
mov
mov
xor
call
mov
mov
cmp
je
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
call
push
lea
xor
mov
xor
call
mov
mov
xor
call
mov
call
test
je
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
test
je
mov
call
test
je
mov
call
lea
mov
mov
call
mov
mov
call
mov
mov
mov
call
lea
mov
call
mov
mov
mov
call
mov
mov
call
mov
dec
test
jl
inc
mov
mov
mov
call
lea
lea
mov
call
mov
mov
call
inc
dec
jne
mov
call
mov
mov
mov
mov
call
mov
call
test
je
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
test
je
lea
mov
call
cmp
jne
xor
jmp
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
test
jne
mov
call
mov
mov
call
mov
call
test
jne
mov
call
mov
mov
call
mov
call
test
jne
mov
call
test
je
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
call
mov
call
mov
call
test
je
mov
call
mov
call
lea
mov
mov
mov
xor
call
mov
mov
call
lea
mov
call
mov
lea
call
mov
mov
call
mov
call
test
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
cmp
je
mov
call
mov
mov
push
call
mov
mov
call
mov
call
test
je
mov
xor
call
mov
xor
call
mov
call
test
je
mov
xor
call
mov
xor
call
mov
xor
call
mov
xor
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
test
je
mov
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
lea
mov
mov
mov
xor
call
mov
mov
call
mov
call
mov
mov
call
sub
mov
call
mov
sub
sub
mov
call
mov
call
mov
mov
call
add
mov
mov
call
mov
cmp
je
mov
call
mov
call
mov
mov
call
mov
mov
xor
mov
call
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
sub
push
push
add
mov
mov
test
je
mov
mov
call
push
mov
call
call
mov
mov
pop
call
add
pop
pop
ret
nop
mov
mov
call
ret
lea
mov
mov
call
ret
lea
mov
mov
call
ret
lea
push
mov
push
push
push
mov
xor
push
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
call
sete
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
xor
push
push
push
mov
lea
push
mov
call
mov
mov
xor
call
cmp
je
lea
mov
call
lea
mov
mov
mov
xor
call
mov
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
(bad)
(bad)
inc
mov
push
mov
call
pop
ret
push
mov
push
push
push
mov
mov
xor
push
push
push
mov
mov
cmp
je
mov
jmp
mov
cmp
je
mov
call
call
lea
mov
call
mov
mov
mov
mov
call
jne
call
jmp
push
mov
mov
call
push
mov
mov
mov
call
push
mov
mov
mov
push
call
cmp
jne
mov
call
call
jmp
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
mov
mov
xor
mov
call
push
mov
mov
call
push
mov
mov
mov
call
push
mov
mov
mov
push
call
ret
lea
push
mov
xor
push
push
push
mov
inc
jne
mov
call
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
sub
ret
cwde
es
add
add
add
add
add
add
mov
inc
add
add
xor
add
adc
inc
add
add
adc
inc
add
inc
add
es
add
add
xor
add
adc
inc
add
add
adc
inc
add
inc
add
es
add
add
xor
add
add
inc
add
add
adc
inc
add
inc
add
inc
add
add
xor
adc
inc
add
add
adc
inc
add
inc
add
inc
add
add
ss
add
adc
inc
add
add
adc
inc
add
inc
add
add
add
aaa
add
add
adc
inc
add
add
adc
inc
add
inc
add
add
add
cmp
add
adc
inc
add
add
adc
inc
add
inc
add
cmp
add
adc
inc
add
add
adc
inc
add
inc
add
xor
add
add
adc
inc
add
add
adc
inc
add
rol
inc
add
add
xor
add
add
adc
inc
add
add
adc
inc
add
shl
inc
add
add
xor
add
add
adc
inc
add
add
adc
inc
add
rol
add
add
xor
add
add
adc
inc
add
add
adc
inc
add
shl
add
add
xor
add
add
adc
inc
add
add
adc
inc
add
rol
adc
cs
add
inc
add
add
adc
inc
add
shl
adc
cs
add
adc
inc
add
add
adc
inc
add
rcl
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
xor
call
mov
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
push
push
push
mov
call
push
call
push
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
push
push
push
mov
mov
push
call
mov
mov
call
pop
pop
pop
ret
add
(bad)
(bad)
(bad)
call
add
add
popa
jb
and
jae
popa
ins
ins
and
imul
dec
inc
dec
dec
dec
inc
dec
dec
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
ins
popa
add
(bad)
(bad)
(bad)
inc
add
add
outs
ins
popa
add
push
mov
mov
mov
mov
call
sete
xor
pop
ret
(bad)
(bad)
(bad)
inc
add
add
add
add
add
stos
(bad)
inc
nop
push
mov
push
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
lea
call
test
je
lea
mov
call
lea
call
push
push
push
lea
mov
call
push
push
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
gs
jo
add
add
(bad)
(bad)
inc
add
add
outs
jae
pop
add
(bad)
(bad)
(bad)
inc
add
cs
jo
add
add
in
xor
push
push
push
push
push
push
push
push
mov
xor
push
push
push
mov
xor
lea
xor
mov
call
mov
call
push
call
inc
cmp
jne
test
je
mov
call
mov
add
sub
jl
inc
mov
lea
xor
mov
call
mov
call
push
call
lea
lea
xor
call
mov
call
push
call
inc
dec
jne
lea
xor
mov
call
mov
lea
call
mov
call
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
push
push
push
add
mov
mov
mov
call
mov
mov
mov
call
xor
mov
test
jbe
mov
mov
movzx
mov
mov
sub
imul
add
add
mov
imul
add
mov
mov
xor
div
imul
sub
cmp
jae
add
cmp
jbe
cmp
jae
mov
call
mov
inc
dec
jne
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
cmp
jne
cmp
jbe
jmp
jle
mov
jmp
mov
mov
call
mov
mov
xor
cmp
jne
cmp
jae
jmp
jge
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
xor
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
sub
sbb
mov
mov
add
adc
mov
mov
call
cmp
jne
cmp
je
cmp
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
cmp
je
mov
mov
mov
mov
push
call
ret
mov
push
mov
push
push
push
mov
mov
add
mov
call
mov
mov
mov
call
dec
sub
jb
dec
sub
jb
dec
jne
mov
mov
mov
call
jmp
mov
mov
call
mov
call
mov
call
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
xor
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
dec
test
jl
inc
xor
lea
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
jne
mov
mov
call
test
jle
lea
mov
mov
call
mov
call
fstp
fld
fcomp
fnstsw
sahf
jbe
mov
mov
mov
mov
inc
dec
jne
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
fld
pop
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
jmp
add
add
inc
push
push
inc
push
inc
pop
dec
imul
je
cs
inc
push
inc
jb
ins
gs
jb
pop
jo
ins
imul
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
push
add
mov
lea
push
push
push
call
push
call
mov
test
jne
call
cmp
jne
lea
push
push
call
push
call
mov
test
je
mov
call
mov
lea
push
push
push
push
mov
push
call
mov
mov
push
call
test
je
lea
push
push
push
push
push
push
push
push
push
push
push
call
mov
dec
test
jl
inc
xor
mov
push
mov
push
call
test
je
mov
jmp
inc
dec
jne
mov
push
call
mov
call
mov
add
pop
pop
pop
ret
lea
push
mov
add
push
push
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
shr
mov
mov
shr
and
mov
and
mov
mov
call
mov
shr
mov
mov
shr
and
mov
and
mov
mov
dec
test
jl
inc
xor
mov
sub
imul
cdq
idiv
mov
add
shl
mov
sub
imul
cdq
idiv
add
shl
or
mov
sub
imul
cdq
idiv
add
or
mov
cmp
je
push
mov
mov
xor
call
jmp
push
mov
xor
mov
call
inc
dec
jne
cmp
je
mov
mov
call
mov
jmp
mov
mov
call
mov
mov
call
call
mov
push
push
call
push
push
push
push
call
push
mov
push
mov
push
push
push
mov
call
call
push
mov
mov
push
mov
mov
push
push
push
push
call
cmp
je
mov
test
jns
add
sar
test
jl
inc
xor
push
mov
shl
mov
mov
call
inc
dec
jne
jmp
mov
test
jns
add
sar
test
jl
inc
xor
mov
shl
push
mov
xor
mov
call
inc
dec
jne
mov
call
mov
call
pop
pop
mov
pop
ret
mov
push
mov
add
push
xor
mov
mov
mov
xor
push
push
push
mov
lea
xor
mov
call
push
lea
push
push
call
lea
lea
mov
call
mov
lea
call
cmp
je
mov
mov
call
test
jle
mov
mov
call
test
jne
mov
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
(bad)
(bad)
call
add
add
inc
push
push
and
push
push
inc
dec
dec
and
dec
inc
push
add
in
add
push
xor
mov
mov
mov
call
xor
push
push
push
mov
lea
mov
call
mov
mov
call
xor
mov
push
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
test
jns
call
push
push
push
call
mov
test
jns
call
push
mov
test
jns
call
push
call
test
je
mov
push
test
jns
call
push
call
cmp
sbb
inc
test
jns
call
push
call
mov
pop
pop
pop
pop
ret
mov
push
mov
add
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
xor
mov
call
mov
cmp
je
mov
lea
mov
call
test
je
lea
lea
mov
call
mov
lea
call
mov
lea
call
mov
mov
call
jne
mov
test
jns
call
call
lea
mov
call
test
jne
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
mov
pop
ret
mov
push
mov
add
push
add
push
push
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
lea
lea
mov
call
mov
shr
test
jns
call
mov
dec
test
jl
inc
xor
cmp
jbe
call
mov
push
push
push
call
mov
test
je
lea
push
lea
mov
mov
call
push
lea
mov
mov
call
push
call
lea
lea
mov
call
mov
lea
call
mov
lea
call
mov
mov
call
jne
cmp
jbe
call
mov
test
jns
call
call
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
mov
call
mov
test
jle
push
mov
dec
mov
mov
call
jmp
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
sub
add
in
mov
push
push
dec
jne
push
push
push
push
mov
xor
push
push
push
mov
lea
mov
call
mov
mov
call
jne
push
push
call
call
lea
xor
xor
call
mov
lea
call
mov
call
lea
xor
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
cmp
je
mov
call
xor
call
push
push
push
mov
mov
mov
push
call
call
mov
mov
push
sar
cmp
pop
je
call
mov
mov
xor
call
xor
mov
inc
push
mov
mov
mov
call
add
xor
mov
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
mov
shl
push
mov
mov
mov
call
add
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
dec
test
jl
inc
xor
lea
push
mov
shl
mov
test
je
cmp
jb
call
mov
call
test
jns
call
mov
shl
add
mov
test
je
cmp
jb
call
mov
push
mov
shl
inc
mov
test
je
cmp
jb
call
mov
pop
call
mov
mov
test
je
cmp
jb
call
lea
call
mov
test
je
cmp
jb
call
cmp
jne
mov
test
je
cmp
jb
call
lea
mov
shl
add
mov
test
je
cmp
jb
call
mov
call
inc
dec
jne
push
mov
mov
mov
call
add
mov
call
mov
call
mov
test
jle
mov
lea
mov
call
lea
mov
call
mov
mov
call
jne
mov
mov
mov
call
jne
mov
mov
mov
call
jne
mov
mov
test
je
cmp
jb
call
lea
mov
call
mov
mov
call
jne
mov
mov
test
je
cmp
jb
call
lea
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
jne
lea
push
mov
call
mov
mov
mov
call
mov
lea
call
mov
mov
mov
test
je
cmp
jb
call
lea
call
lea
push
mov
mov
mov
call
mov
mov
call
jne
mov
mov
test
je
cmp
jb
call
lea
push
mov
call
mov
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
jne
push
mov
call
mov
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
jne
lea
push
mov
call
mov
mov
mov
call
mov
lea
call
mov
mov
mov
test
je
cmp
jb
call
mov
call
jne
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
cmp
je
mov
mov
test
je
cmp
jb
call
cmp
je
mov
call
call
mov
mov
test
je
cmp
jb
call
mov
lea
xor
call
mov
mov
call
mov
mov
mov
call
cmp
jne
push
mov
mov
mov
push
call
jmp
mov
mov
xor
call
mov
call
mov
shl
sub
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
lea
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
shl
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
lea
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
mov
call
add
mov
add
lea
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
lea
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
shl
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
mov
call
imul
lea
push
mov
mov
mov
call
add
mov
test
jle
mov
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
mov
push
sar
cmp
pop
je
call
mov
mov
xor
call
cmp
je
lea
xor
mov
call
mov
call
mov
mov
mov
call
push
push
mov
mov
call
mov
call
mov
mov
call
mov
lea
call
mov
mov
mov
call
mov
call
jmp
xor
mov
test
jle
lea
mov
call
mov
push
lea
call
mov
lea
pop
call
mov
call
mov
lea
mov
call
mov
call
mov
mov
cdq
push
push
mov
mov
call
mov
call
dec
jne
mov
call
cmp
je
mov
mov
call
mov
dec
test
jl
inc
xor
mov
shl
mov
test
je
cmp
jb
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
test
jle
mov
cmp
jbe
call
mov
jmp
inc
dec
jne
cmp
jne
mov
call
mov
call
dec
jle
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
cmp
jne
mov
call
call
mov
call
dec
jle
cmp
jbe
mov
xor
mov
shl
mov
test
je
cmp
jb
call
mov
call
mov
call
mov
test
jle
mov
mov
call
xor
mov
imul
add
mov
test
je
cmp
jb
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
jmp
mov
xor
mov
test
je
cmp
jb
call
mov
call
lea
mov
call
mov
mov
call
lea
xor
mov
shl
add
mov
test
je
cmp
jb
call
mov
call
cmp
je
mov
call
cmp
jbe
call
mov
mov
jmp
mov
mov
lea
xor
mov
shl
add
mov
test
je
cmp
jb
call
mov
call
cmp
je
mov
call
cmp
jbe
call
mov
mov
jmp
mov
mov
mov
call
call
test
je
cmp
jne
push
mov
mov
test
je
cmp
jb
call
mov
call
push
mov
mov
test
je
cmp
jb
call
mov
mov
mov
test
je
cmp
jb
call
mov
lea
call
mov
call
push
mov
mov
mov
push
call
mov
call
call
mov
call
test
je
call
test
jne
push
mov
call
push
mov
mov
test
je
cmp
jb
call
mov
call
push
mov
mov
mov
push
call
mov
call
call
mov
call
test
je
mov
mov
test
je
cmp
jb
call
mov
call
fstp
fwait
call
fstp
fwait
mov
call
test
je
fld
fcomp
fnstsw
sahf
jb
mov
call
test
jne
fld
fcomp
fnstsw
sahf
je
lea
mov
mov
test
je
cmp
jb
call
mov
call
mov
call
test
je
mov
push
push
mov
mov
test
je
cmp
jb
call
push
lea
mov
call
jmp
xor
or
test
jns
call
push
mov
call
push
mov
call
push
mov
mov
mov
push
call
cmp
jne
push
push
push
mov
mov
test
je
cmp
jb
call
mov
call
push
push
push
call
mov
call
call
mov
call
test
je
lea
mov
mov
test
je
cmp
jb
call
mov
call
mov
call
cmp
jge
mov
xor
jmp
mov
mov
call
sub
jb
je
jmp
mov
call
push
push
call
mov
jmp
mov
call
mov
test
je
mov
mov
cmp
je
mov
mov
cmp
je
push
push
push
push
call
test
je
cmp
jne
jmp
lea
mov
call
call
cmp
jbe
mov
call
jmp
mov
call
mov
call
test
je
cmp
jne
mov
mov
call
xor
call
mov
mov
xor
xor
call
push
push
call
push
push
call
mov
pop
pop
call
call
mov
mov
call
push
mov
mov
call
pop
call
mov
mov
mov
call
test
je
mov
call
xor
push
mov
call
push
mov
call
push
mov
mov
call
push
mov
mov
call
push
mov
mov
call
call
pop
pop
call
mov
mov
call
push
mov
mov
call
pop
call
jmp
xor
xor
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
sub
jb
je
dec
je
jmp
mov
mov
call
push
mov
mov
call
pop
call
jmp
lea
mov
mov
call
lea
push
mov
mov
call
call
mov
mov
mov
pop
call
mov
mov
call
push
mov
mov
call
pop
call
jmp
mov
mov
call
mov
mov
sub
mov
fild
fdiv
call
push
sar
cmp
pop
je
call
push
mov
mov
call
mov
mov
sub
mov
fild
fdiv
call
push
sar
cmp
pop
je
call
push
mov
mov
call
call
mov
mov
mov
pop
call
mov
mov
call
push
mov
mov
call
pop
call
mov
mov
test
je
cmp
jb
call
mov
lea
xor
call
mov
mov
mov
call
mov
mov
test
je
cmp
jb
call
mov
lea
xor
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
test
je
cmp
jb
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
cmp
jbe
call
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
cmp
jbe
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
test
je
cmp
jb
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
sub
push
mov
mov
call
push
mov
mov
call
pop
sub
sub
mov
mov
pop
call
jmp
mov
mov
call
mov
call
test
je
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
jmp
xor
xor
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
test
je
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
jmp
xor
xor
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
test
jne
mov
call
test
jne
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
inc
add
je
jae
add
add
cs
jae
ins
cs
add
inc
jb
outs
jb
add
push
push
je
jo
imul
jb
and
jb
jne
je
fs
gs
jae
and
je
imul
ja
arpl
jns
outs
data16
and
outs
addr16
ins
cs
(bad)
(bad)
inc
add
add
push
add
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
(bad)
(bad)
inc
add
add
push
push
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
dec
push
add
(bad)
(bad)
inc
add
add
push
cmp
inc
add
add
inc
cmp
inc
add
add
dec
cmp
inc
add
das
push
push
cmp
(bad)
(bad)
(bad)
inc
add
dec
push
inc
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
inc
call
ret
mov
call
ret
mov
call
ret
mov
push
mov
xor
push
push
push
mov
inc
jne
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
sub
ret
push
mov
xor
push
push
push
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
sbb
add
nop
push
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
loope
add
loopne
add
inc
add
inc
add
push
inc
add
add
movs
inc
add
inc
add
repnz
add
out
inc
add
out
inc
add
loope
add
jmp
add
loope
add
movs
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
movs
inc
add
inc
add
cmps
inc
add
inc
add
inc
add
mov
inc
add
inc
add
lods
inc
add
stos
inc
add
inc
add
inc
add
add
add
inc
add
in
add
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
call
add
add
(bad)
(bad)
inc
add
add
add
add
lea
xor
mov
add
inc
add
lea
fsub
inc
add
daa
inc
add
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
lea
inc
jb
outs
jb
mov
push
jne
je
ins
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
xor
inc
inc
inc
inc
inc
inc
(bad)
(bad)
(bad)
inc
add
add
arpl
pop
jo
outs
addr16
jae
xor
add
dec
imul
xor
add
add
add
add
add
add
jae
gs
add
or
add
pop
lea
push
push
inc
push
pop
push
push
dec
inc
add
pop
push
dec
inc
add
push
pop
inc
push
add
inc
dec
pop
inc
push
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
lea
pop
dec
inc
add
inc
add
add
inc
add
dec
inc
add
imul
imul
imul
imul
imul
add
add
add
add
imul
ins
inc
add
ins
inc
add
inc
add
inc
add
push
push
dec
dec
add
adc
adc
add
nop
add
and
add
inc
nop
hlt
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
add
push
inc
add
push
inc
add
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
push
add
add
add
push
lea
and
add
push
inc
add
jo
add
out
(bad)
mov
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
and
add
add
add
or
add
inc
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
and
add
add
idiv
(bad)
(bad)
sti
(bad)
(bad)
call
add
add
adc
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
add
add
add
or
add
and
add
out
(bad)
mov
add
add
or
add
add
add
adc
add
add
add
and
add
add
adc
and
add
add
add
add
adc
sbb
add
add
loopne
add
pop
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
add
adc
sbb
add
add
add
add
inc
add
adc
adc
dec
jb
add
dec
push
add
dec
inc
dec
inc
dec
pop
add
inc
add
aam
add
inc
add
inc
add
inc
push
dec
inc
add
sbb
inc
add
repz
add
inc
add
repz
add
inc
add
add
inc
add
inc
add
repz
add
fs
popa
je
and
xor
xor
inc
outs
jo
jb
addr16
cmp
xor
dec
gs
outs
sub
and
imul
add
add
add
add
or
add
xor
inc
add
add
add
add
add
push
add
add
add
add
add
add
adc
adc
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fld
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
test
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outs
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
inc
or
inc
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
(bad)
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
gs
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
xor
xor
jne
imul
outs
and
ins
jo
gs
imul
push
outs
jbe
ins
imul
ja
jae
jp
add
arpl
jb
arpl
gs
fs
arpl
arpl
outs
gs
je
outs
outs
popa
jb
add
arpl
jb
arpl
popa
je
and
arpl
add
add
imul
and
xor
xor
inc
outs
jo
jb
addr16
cmp
xor
dec
popa
jb
and
ins
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
pop
add
add
add
add
add
push
add
add
or
add
add
add
add
add
push
pop
add
pop
add
add
or
add
add
add
add
xor
add
add
add
rol
add
add
or
add
add
add
pusha
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
loopne
add
push
pop
add
push
add
add
or
add
add
add
add
sbb
add
add
add
nop
add
add
add
cmp
add
add
add
js
add
add
add
cmp
add
add
add
rol
add
push
pop
add
adc
add
add
add
push
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
lock
add
add
add
add
add
add
push
add
add
or
add
add
push
or
add
add
add
add
sub
add
add
add
je
add
add
add
xor
add
add
add
enter
push
pop
add
or
or
add
add
or
add
add
add
add
test
add
add
add
add
add
add
add
test
add
add
add
inc
add
add
or
add
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
add
cwde
add
add
add
add
add
add
jl
add
add
add
cmp
add
add
add
fadd
add
push
pop
add
pop
add
add
or
add
add
or
add
add
add
add
mov
or
add
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
mov
pop
add
and
add
add
add
jb
add
add
add
xor
add
add
add
les
add
push
pop
add
or
add
add
add
bound
add
add
add
and
add
add
add
movs
add
add
or
add
add
add
or
add
or
add
add
add
add
in
add
push
pop
add
pop
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
add
add
add
jp
add
add
add
cmp
add
add
add
aam
add
push
pop
add
adc
add
add
add
push
add
add
add
sub
add
add
add
mov
add
add
add
or
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
or
add
add
add
add
push
add
add
or
add
add
add
add
xor
add
add
add
jbe
add
add
add
add
add
or
add
add
add
add
sldt
add
or
add
add
add
add
add
add
or
add
add
push
add
add
or
add
or
add
add
add
add
in
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
or
add
add
arpl
add
add
add
jle
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
outs
add
add
or
add
add
add
or
add
add
push
add
add
or
add
or
add
add
add
add
cld
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
add
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
ret
add
add
or
add
add
add
popa
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
loop
add
push
pop
add
push
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
cmp
add
add
add
jns
add
add
add
cmp
add
add
add
rol
add
push
pop
add
adc
add
add
add
imul
add
sub
add
add
add
mov
add
add
add
or
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
or
add
add
add
add
sub
add
add
add
jne
add
add
add
xor
or
add
add
add
add
or
or
add
add
add
add
and
or
add
or
add
or
add
or
add
add
add
add
jmp
add
add
add
or
add
add
add
add
sbb
or
add
pop
add
push
add
add
or
add
add
add
add
cmp
or
add
add
add
add
pop
add
add
or
add
add
add
add
sub
or
add
or
add
or
add
or
add
add
add
add
cli
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
ret
add
add
add
and
add
add
add
jae
add
add
add
xor
add
add
add
mov
add
add
or
add
add
add
arpl
add
add
add
and
add
add
add
cmps
add
add
or
add
add
add
or
add
or
add
add
add
add
out
add
push
pop
add
pop
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
add
add
add
jnp
add
add
add
cmp
add
add
add
(bad)
add
add
add
adc
add
add
add
imul
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
test
add
add
add
or
add
add
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
ja
add
add
add
aaa
add
add
or
add
add
add
add
sldt
add
or
add
add
add
add
daa
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
out
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
or
add
pop
add
arpl
add
add
add
jg
add
add
add
aas
add
add
or
add
add
add
add
sbb
add
add
add
outs
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
inc
add
pusha
pop
add
add
add
add
add
push
add
add
or
add
add
add
add
add
push
pop
add
pop
add
add
or
add
add
add
add
xor
add
add
add
rol
add
add
or
add
add
add
pusha
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
loope
add
push
pop
add
push
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
cmp
add
add
add
js
add
add
add
cmp
add
add
add
rol
add
push
pop
add
adc
add
add
add
push
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
icebp
add
add
add
add
add
add
add
push
add
add
or
add
add
push
or
add
add
add
add
sub
add
add
add
je
add
add
add
xor
add
add
add
leave
add
add
add
or
or
add
add
or
add
add
add
add
test
or
add
add
add
add
test
add
add
add
inc
add
add
or
add
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
add
cdq
add
add
add
add
add
add
jl
add
add
add
cmp
add
add
add
fld
add
push
pop
add
pop
add
add
or
add
add
or
add
add
add
add
mov
or
add
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
mov
pop
add
and
add
add
add
jb
add
add
add
xor
add
add
add
lds
add
push
pop
add
or
add
add
add
bound
add
add
add
and
add
add
add
movs
add
add
or
add
add
add
or
add
or
add
add
add
add
in
add
push
pop
add
pop
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
add
add
add
jp
add
add
add
cmp
add
add
add
aad
add
push
pop
add
adc
add
add
add
push
add
add
add
sub
add
add
add
mov
add
add
add
or
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
or
add
add
add
add
push
add
add
or
add
add
add
add
xor
add
add
add
jbe
add
add
add
add
add
or
add
add
add
add
sldt
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
in
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
or
add
pop
add
arpl
add
add
add
jle
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
outs
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
std
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
add
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
ret
add
add
add
or
add
add
add
popa
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
jecxz
add
push
pop
add
push
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
cmp
add
add
add
jns
add
add
add
cmp
add
add
add
rol
add
push
pop
add
adc
add
add
add
imul
add
sub
add
add
add
mov
add
add
add
or
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
or
add
add
add
add
sub
add
add
add
jne
add
add
add
xor
or
add
add
add
add
or
or
add
add
add
add
and
or
add
or
add
or
add
or
add
add
add
add
jmp
add
push
pop
add
or
add
add
add
pop
add
add
or
add
or
add
pop
add
push
add
add
or
add
add
add
add
cmp
or
add
add
add
add
pop
add
add
or
add
add
add
add
sub
or
add
or
add
or
add
or
add
add
add
add
sti
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
ret
add
add
add
and
add
add
add
jae
add
add
add
xor
add
add
add
mov
add
or
add
add
add
arpl
add
add
add
and
add
add
add
cmps
add
add
or
add
add
add
or
add
or
add
add
add
add
out
add
push
pop
add
pop
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
add
add
add
jnp
add
add
add
cmp
add
add
add
xlat
add
add
add
adc
add
add
add
imul
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
test
add
add
or
add
add
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
ja
add
add
add
aaa
add
add
or
add
add
add
add
sldt
add
or
add
add
add
add
daa
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
out
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
or
add
pop
add
arpl
add
add
add
jg
add
add
add
aas
add
add
or
add
add
add
add
sbb
add
add
add
outs
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
inc
add
push
add
add
push
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
rol
add
add
add
add
push
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
rol
add
gs
jne
jae
jb
bound
and
popa
ins
imul
ins
outs
addr16
jae
je
gs
arpl
jo
gs
and
popa
ins
imul
ins
outs
addr16
jae
je
gs
gs
jne
jae
jb
bound
and
gs
ins
das
ins
outs
addr16
and
add
arpl
jo
gs
and
gs
ins
das
ins
outs
addr16
and
add
gs
jne
jae
jb
bound
and
je
outs
arpl
je
gs
arpl
jo
gs
and
je
outs
arpl
je
gs
jo
jns
imul
and
and
je
and
addr16
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
jbe
ins
imul
and
add
jbe
ins
imul
and
outs
arpl
ins
outs
addr16
jae
je
outs
and
outs
jns
ins
outs
addr16
and
and
je
outs
arpl
jae
ins
bound
jae
imul
and
je
ins
outs
addr16
and
jo
popa
je
add
imul
and
gs
ins
das
ins
outs
addr16
and
fs
jbe
ins
imul
outs
arpl
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
dec
add
call
add
(bad)
aas
add
(bad)
jg
add
inc
add
jbe
ins
imul
outs
arpl
arpl
add
jbe
ins
imul
popa
ins
das
ins
outs
addr16
and
fs
add
lea
add
add
pusha
push
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
inc
inc
push
add
add
add
add
add
add
sldt
add
add
add
add
add
add
sub
add
add
add
add
add
add
or
or
add
add
pop
inc
add
add
add
add
inc
add
inc
add
inc
add
add
add
pop
inc
add
add
add
jnp
add
add
add
inc
add
pop
inc
add
pop
inc
add
adc
add
add
add
add
add
add
inc
out
adc
add
add
add
add
add
add
inc
add
add
add
add
rol
add
add
inc
add
inc
add
lea
add
add
add
inc
add
inc
add
inc
add
lahf
inc
add
lahf
inc
add
inc
add
inc
add
xchg
pop
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
xchg
or
inc
add
mov
inc
add
inc
add
lahf
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
mov
inc
add
add
or
add
cmps
mov
add
mov
add
mov
add
add
adc
add
inc
mov
add
xchg
mov
add
xor
add
mov
add
mov
mov
add
mov
add
(bad)
rol
jl
add
js
add
mov
add
add
mov
add
les
add
add
jl
add
test
add
call
add
lds
add
add
add
mov
test
add
cmp
add
mov
add
(bad)
mov
mov
add
add
mov
add
mov
fdiv
add
and
add
lock
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
movs
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
pop
mov
add
add
test
add
add
add
mov
add
les
add
loopne
add
hlt
mov
add
add
add
add
and
add
add
add
push
mov
add
jo
add
jle
add
add
add
mov
mov
add
aam
add
jmp
add
mov
add
add
add
inc
mov
add
pop
mov
add
cmp
add
mov
add
sar
add
out
mov
add
adc
add
cmp
add
dec
mov
add
mov
jle
add
nop
mov
add
mov
add
les
add
loopne
add
idiv
add
push
mov
add
cmp
add
push
add
cmp
add
add
add
add
retf
add
mov
add
add
add
mov
add
xor
add
add
add
push
add
je
add
cmp
cwde
mov
add
mov
mov
add
jmp
add
add
sub
add
cmp
add
dec
mov
add
js
add
xchg
mov
add
mov
mov
add
fdivr
add
cli
mov
add
sbb
add
sub
add
cmp
add
pop
mov
add
jb
add
cmp
add
mov
add
int3
mov
add
jmp
add
mov
add
es
add
inc
mov
add
fs
add
mov
add
mov
mov
add
enter
sar
add
jmp
add
rol
adc
add
and
add
xor
add
rol
dec
rol
pusha
rol
ins
rol
jl
add
mov
add
cwde
rol
movs
rol
mov
add
(bad)
rol
add
add
in
add
test
add
rol
push
rol
rol
rol
push
rol
push
add
add
rol
mov
rol
out
add
test
add
ret
push
ret
xor
add
inc
ret
push
ret
push
add
xchg
add
call
add
ret
fcmovb
add
out
ret
add
add
adc
add
es
add
ss
add
dec
ret
add
fs
add
jb
add
add
add
add
mov
add
enter
(bad)
ret
add
in
ret
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
les
add
add
push
les
add
les
add
les
add
les
add
les
add
les
add
les
add
lds
add
lds
add
lds
add
lds
add
add
pop
lds
add
add
add
add
mov
add
add
add
test
add
mov
lds
add
lds
add
add
add
mov
add
add
and
add
add
add
inc
mov
push
mov
add
add
outs
mov
add
add
add
add
add
mov
add
add
add
retf
add
mov
jmp
add
mov
add
add
dec
mov
add
add
add
add
add
add
jb
gs
xor
cs
ins
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outs
add
add
jbe
inc
jb
je
arpl
push
arpl
outs
add
add
inc
outs
je
jb
jb
je
arpl
push
arpl
outs
add
add
dec
outs
imul
inc
jb
je
arpl
push
arpl
outs
add
add
jb
jne
ins
inc
jb
add
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
add
popa
ins
inc
jb
add
add
popa
ins
inc
ins
ins
outs
arpl
add
add
je
gs
imul
inc
gs
jne
jb
outs
je
push
dec
add
add
push
imul
outs
dec
jne
je
inc
jns
add
add
je
push
dec
outs
arpl
add
add
je
je
jb
jne
dec
outs
outs
inc
add
add
je
outs
arpl
gs
outs
outs
inc
add
add
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
jb
gs
imul
add
inc
js
je
jb
arpl
jae
add
push
jb
je
inc
imul
push
gs
js
gs
imul
gs
add
add
ins
push
outs
ja
outs
add
add
imul
jo
imul
inc
gs
je
dec
popa
outs
fs
add
jne
gs
xor
fs
ins
add
add
inc
gs
gs
outs
popa
jb
push
jns
add
add
jae
popa
addr16
outs
js
add
jbe
jo
xor
cs
ins
add
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
add
push
gs
jo
outs
dec
gs
js
add
add
addr16
ins
outs
jae
dec
gs
outs
ins
gs
jne
xor
cs
ins
add
add
push
jns
inc
jb
gs
je
imul
jns
push
gs
ins
ins
outs
arpl
jb
outs
addr16
outs
add
jb
gs
xor
cs
ins
add
add
push
ins
jae
gs
popa
ins
jne
add
add
inc
gs
popa
ins
jne
add
add
popa
ins
inc
ins
ins
outs
arpl
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
popa
fs
jo
xor
cs
ins
add
add
push
gs
ins
outs
jae
dec
gs
add
dec
jo
outs
push
push
push
outs
imul
add
dec
jo
outs
push
jb
arpl
jae
outs
imul
add
add
je
outs
imul
outs
outs
jb
popa
je
outs
outs
add
add
gs
imul
popa
ins
push
imul
ins
outs
arpl
gs
outs
fs
outs
imul
push
imul
push
jae
push
outs
imul
jb
jbe
ins
gs
imul
gs
xor
cs
ins
add
add
push
jb
je
inc
imul
outs
inc
js
arpl
add
push
popa
imul
ins
gs
bound
arpl
add
ins
imul
outs
arpl
jae
add
add
jae
gs
push
imul
ins
gs
imul
push
ins
gs
add
push
gs
imul
add
push
gs
imul
gs
add
add
je
jb
outs
jb
outs
fs
add
push
gs
outs
fs
inc
imul
gs
fs
imul
jo
outs
push
jb
arpl
jae
add
dec
jne
je
inc
jns
gs
outs
push
imul
add
dec
outs
arpl
inc
imul
outs
inc
imul
add
dec
outs
popa
fs
imul
add
add
inc
ins
outs
bound
inc
jb
add
add
inc
ins
outs
bound
inc
ins
ins
outs
arpl
add
inc
gs
gs
imul
inc
gs
jae
jb
gs
jne
je
popa
outs
addr16
inc
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
arpl
push
imul
inc
gs
popa
jae
inc
jb
outs
jb
add
add
je
imul
add
inc
gs
imul
add
inc
gs
js
je
outs
fs
jb
arpl
jae
add
add
je
jne
jb
outs
je
push
add
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
inc
jb
gs
imul
add
inc
imul
add
add
ins
gs
imul
jae
gs
push
imul
inc
imul
outs
dec
outs
arpl
inc
imul
add
inc
outs
jae
popa
je
push
imul
ins
gs
imul
outs
ins
jo
jb
inc
imul
add
inc
ins
outs
jae
dec
popa
outs
fs
add
imul
ins
add
add
jb
je
push
je
add
add
jb
je
push
add
add
je
imul
addr16
js
add
add
je
gs
inc
outs
ins
outs
jb
add
add
je
je
gs
push
outs
fs
add
je
arpl
outs
add
add
push
gs
dec
push
xor
add
push
gs
imul
add
je
dec
inc
imul
je
jb
jae
dec
jb
inc
js
add
push
gs
imul
add
add
je
imul
outs
jb
add
add
ins
arpl
push
arpl
add
push
popa
jbe
inc
inc
add
add
push
gs
outs
jb
inc
inc
add
add
data16
je
outs
add
add
jbe
push
outs
inc
js
add
add
je
jb
arpl
imul
add
inc
gs
je
arpl
bound
arpl
add
inc
gs
imul
add
je
dec
inc
imul
je
gs
arpl
imul
add
inc
js
ins
jne
gs
ins
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
inc
inc
add
add
inc
jb
popa
je
push
outs
ins
imul
add
add
gs
je
push
arpl
outs
add
add
gs
je
inc
dec
inc
imul
add
gs
je
inc
dec
inc
push
arpl
outs
add
add
inc
jb
popa
je
inc
outs
ins
jo
je
bound
inc
add
add
inc
jb
popa
je
inc
outs
ins
jo
je
bound
imul
add
gs
je
inc
jb
jae
dec
outs
imul
add
gs
je
inc
imul
add
ins
bound
gs
outs
add
add
inc
imul
jae
jb
xor
fs
ins
add
add
push
popa
imul
add
add
ins
imul
je
add
add
outs
jae
popa
je
dec
gs
popa
add
add
push
push
outs
outs
ja
add
add
je
imul
jae
add
add
je
imul
add
je
popa
jb
outs
je
add
push
gs
outs
jb
addr16
jne
fs
imul
add
je
outs
arpl
add
add
push
gs
jne
jae
jb
add
push
outs
fs
gs
popa
addr16
add
add
push
arpl
outs
push
outs
inc
ins
imul
add
ins
gs
jae
inc
inc
add
add
jae
push
jne
je
gs
popa
add
add
data16
je
arpl
add
dec
imul
add
add
pop
outs
outs
ins
gs
add
dec
jae
imul
jae
bound
add
dec
jae
imul
popa
bound
add
add
push
imul
add
dec
jae
arpl
imul
outs
jbe
ins
imul
je
add
add
je
imul
outs
add
add
inc
gs
imul
arpl
add
je
imul
add
add
je
jo
popa
je
push
outs
add
add
inc
gs
jns
je
ins
dec
gs
imul
inc
gs
jns
je
ins
dec
outs
jne
add
inc
gs
jns
inc
outs
ins
outs
jb
add
inc
gs
popa
jb
outs
je
add
inc
gs
imul
add
je
gs
je
je
add
add
je
outs
arpl
add
add
inc
gs
inc
inc
js
add
inc
gs
inc
add
add
je
jne
jae
jb
outs
jae
add
add
je
ins
imul
je
add
inc
gs
popa
jo
jne
add
add
inc
imul
add
add
imul
jae
js
add
inc
outs
jne
push
imul
add
inc
outs
fs
popa
imul
inc
outs
popa
bound
imul
add
inc
outs
popa
bound
outs
jne
je
ins
add
add
inc
jb
ja
arpl
add
add
inc
gs
jb
jns
imul
add
je
outs
jns
arpl
add
add
gs
dec
outs
jne
add
add
jo
dec
ins
popa
add
add
imul
arpl
outs
add
add
inc
imul
add
add
inc
push
ja
jb
jne
inc
add
popa
fs
jo
xor
cs
ins
add
add
push
gs
gs
popa
ins
jne
inc
js
add
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
add
push
gs
jne
jb
dec
outs
outs
dec
gs
add
add
push
gs
jo
outs
dec
gs
js
add
add
addr16
outs
jne
dec
gs
js
add
add
addr16
jb
popa
je
dec
gs
js
add
add
imul
jb
jbe
ins
gs
popa
ins
jne
inc
add
add
je
jae
jb
popa
ins
gs
add
imul
gs
xor
cs
ins
add
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
je
imul
bound
gs
add
add
push
gs
jne
jb
outs
je
imul
jns
add
add
push
gs
outs
jbe
inc
imul
jns
add
add
dec
outs
popa
fs
imul
add
add
inc
gs
imul
imul
jns
add
add
inc
gs
gs
imul
add
inc
gs
imul
popa
je
add
add
inc
gs
gs
jo
popa
je
inc
add
add
inc
gs
jns
je
ins
inc
imul
jns
add
add
je
push
popa
je
dec
popa
ins
gs
add
add
je
jb
jbe
je
push
jb
imul
imul
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
fs
gs
imul
add
add
inc
gs
jne
ins
push
popa
je
dec
popa
ins
gs
add
add
inc
gs
imul
bound
gs
add
add
inc
gs
imul
push
jo
arpl
add
add
je
popa
je
inc
outs
jb
popa
je
add
add
inc
gs
outs
ins
jo
je
jb
popa
ins
gs
add
add
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
imul
inc
imul
imul
je
imul
inc
js
popa
outs
fs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
gs
inc
imul
jb
popa
je
inc
imul
jb
popa
je
inc
imul
jns
add
add
inc
outs
ins
jo
jb
push
je
imul
imul
ins
add
add
je
gs
inc
js
outs
je
outs
imul
add
inc
gs
bound
arpl
add
add
gs
je
inc
outs
outs
je
outs
imul
add
inc
fs
outs
outs
je
gs
jne
arpl
add
jne
gs
xor
fs
ins
add
add
ja
jae
jb
outs
je
inc
add
add
push
gs
imul
outs
addr16
add
add
push
gs
jb
jo
add
add
push
outs
fs
gs
popa
addr16
add
add
push
gs
outs
jbe
push
jb
jo
add
add
imul
popa
jae
inc
add
add
push
outs
jae
dec
gs
popa
addr16
add
add
push
gs
jae
addr16
add
add
dec
gs
popa
addr16
outs
js
add
add
fs
arpl
inc
add
add
fs
jne
jae
jb
add
add
je
imul
js
dec
outs
addr16
inc
add
add
inc
gs
imul
js
inc
add
add
inc
gs
imul
outs
addr16
add
add
inc
gs
jb
jo
add
add
inc
gs
ins
popa
jae
dec
outs
outs
addr16
add
add
je
ins
popa
jae
dec
outs
outs
inc
add
add
outs
fs
imul
add
inc
jb
ja
gs
inc
add
add
jo
je
push
popa
addr16
add
add
inc
gs
imul
outs
arpl
add
add
gs
je
push
imul
inc
add
add
ins
ins
push
imul
outs
arpl
jae
gs
ins
xor
cs
ins
add
add
inc
gs
imul
add
arpl
arpl
xor
fs
ins
add
add
dec
ins
popa
addr16
imul
ja
add
add
popa
addr16
imul
inc
imul
outs
jb
add
add
popa
addr16
imul
popa
je
add
add
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
add
xor
cs
ins
add
add
gs
outs
imul
add
gs
jne
xor
cs
ins
add
add
push
jns
inc
ins
ins
outs
arpl
jb
outs
addr16
outs
add
outs
ins
ins
cs
ins
add
add
gs
imul
add
add
gs
gs
jbe
outs
je
add
gs
ins
xor
cs
ins
add
add
gs
ins
inc
js
arpl
gs
js
add
add
gs
ins
inc
js
arpl
gs
add
bound
gs
fs
ins
add
add
dec
inc
gs
jb
jns
add
add
dec
inc
outs
jo
add
add
dec
inc
jb
popa
je
add
xor
cs
ins
add
add
gs
outs
imul
add
add
push
popa
jae
dec
gs
inc
jb
add
add
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
add
add
push
outs
imul
imul
inc
outs
dec
outs
imul
add
jae
gs
ins
xor
cs
ins
add
add
inc
gs
jo
arpl
ins
inc
outs
ins
fs
outs
arpl
imul
push
dec
inc
gs
popa
je
inc
jb
ins
dec
inc
dec
imul
add
inc
gs
popa
ins
ins
outs
arpl
add
push
dec
inc
push
dec
outs
je
data16
add
add
inc
jb
ja
gs
outs
jb
outs
ins
fs
add
add
inc
add
rol
mov
add
loopne
add
adc
add
add
add
xor
and
inc
xor
xor
xor
xor
xor
jle
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
jb
jge
stos
xor
xor
xor
xor
xor
xor
xor
lea
fbstp
out
ss
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
xor
cmp
cmp
pusha
cmp
jnp
cmp
cmp
retf
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
cmp
inc
cmp
imul
repnz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fnstsw
jmp
aas
cmp
inc
aas
dec
aas
push
aas
bound
imul
in
aas
add
add
loopne
add
jbe
mov
xor
xor
bound
les
int
out
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
outs
xor
les
shl
fdiv
stc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
les
inc
ss
ss
ss
ss
ss
jo
ja
xor
nop
aaa
pushf
aaa
movs
aaa
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
or
and
cmp
inc
aas
jp
xchg
aas
mov
aas
sar
add
add
mov
add
add
xor
cmp
imul
xor
xor
xor
(bad)
xor
xor
xor
xor
aas
xor
xchg
fidiv
div
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
pop
xor
xor
xor
add
dec
ss
ss
ss
mov
lds
sti
cmp
ds
add
add
add
adc
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
cs
push
xor
jno
jnp
mov
xor
loop
jmp
ss
ss
ss
xor
mov
ss
shl
out
repz
adc
pop
aaa
sub
cmp
dec
aaa
push
aaa
pop
aaa
bound
push
jb
jp
xor
aaa
xchg
aaa
call
aaa
mov
aaa
shl
fidiv
loop
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
pop
cmp
ds
ds
ds
ds
ds
ds
jle
xchg
mov
xchg
ds
cmps
ds
ds
mov
ds
fidivr
out
out
idiv
(bad)
ds
aas
push
aas
push
aas
push
aas
es
cs
ss
ds
inc
aas
dec
aas
push
aas
pop
aas
data16
outs
aas
jbe
jle
xchg
mov
xchg
aas
sahf
aas
cmps
aas
scas
aas
mov
mov
aas
(bad)
aas
fidivr
out
out
aas
idiv
(bad)
aas
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
movs
ss
aaa
stos
cmp
cmp
cmp
cmp
cmp
and
test
add
add
add
add
les
and
jae
xor
xor
xor
pop
aaa
inc
aaa
dec
aaa
mov
cwde
cmp
cmp
cmp
mov
jmp
cmp
jb
cmp
ds
aas
and
sub
xor
cmp
add
jo
add
xor
sahf
xor
xor
xor
xor
xor
xchg
xor
xor
xor
je
jle
xor
aaa
xchg
aaa
cwde
aaa
popf
aaa
test
scas
aaa
fdiv
loopne
out
int
fdivr
call
cmp
cmp
cmp
cmp
cmp
push
cmp
ja
scas
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
mov
xchg
xor
xor
aaa
or
adc
sbb
mov
sar
adc
xor
sbb
and
push
aas
jp
lods
aas
add
add
add
mov
aaa
jno
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
ds
and
cmp
inc
aas
pusha
aas
ins
aas
jle
xchg
aas
fidivr
loop
out
add
add
push
xor
xor
xor
xor
xor
xor
jne
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
xor
aaa
cmps
aaa
dec
cmp
cmp
cmp
cmp
sti
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
push
aas
push
aas
ja
test
stos
aas
ret
aas
into
aas
fnstsw
add
add
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
aad
add
sbb
fnstenv
pop
aaa
(bad)
aaa
stc
aaa
retf
cmp
cmp
cmp
xor
jl
stos
aas
enter
add
inc
add
add
mov
xor
xor
xor
xor
xor
xor
in
xor
das
ss
mov
xchg
ss
push
aaa
adc
cmp
cmp
and
sub
add
pop
add
add
xor
pusha
xor
or
xor
xor
xor
aaa
xor
jbe
pusha
cmp
aaa
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
loop
clc
aas
add
add
add
add
add
or
es
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
push
ja
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
adc
sbb
sbb
and
and
sub
xor
xor
dec
xor
pop
xor
jbe
jle
jecxz
imul
ss
jge
xor
ss
ss
aaa
sub
aaa
cmp
cmp
aaa
enter
aad
js
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
cmp
outs
cmp
test
jle
scas
aas
(bad)
aas
sar
loopne
repnz
cli
aas
add
add
add
add
xor
xor
inc
xor
push
xor
xor
ja
test
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
xor
xor
xchg
cmps
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
add
add
sbb
add
pop
xor
xor
bound
jo
out
cmp
cmp
cmp
add
adc
add
add
loopne
or
bound
jnp
hlt
cmp
cmp
cmp
cmp
add
add
push
add
add
xor
xor
xor
xor
aaa
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sahf
cmp
cmp
cmp
pop
cmp
add
dec
add
add
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
push
aaa
je
js
jl
xor
aaa
mov
mov
pop
cmp
cmp
sbb
clc
aas
add
add
add
add
pop
xor
xor
xor
xor
xor
xor
xor
xor
sysexit
adc
jmp
cmp
cmp
aas
(bad)
aas
add
add
add
xor
xor
xor
xor
xor
pusha
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
sub
xor
inc
xor
loopne
pop
cmp
cmp
push
cmp
pop
cmp
cmp
outs
cmp
pusha
add
test
add
or
adc
sub
sub
xor
xor
sbb
ins
xor
out
xor
xor
xor
leave
xor
outs
ss
popf
ss
ss
sub
cmp
mov
(bad)
aaa
inc
cmp
cmp
cmp
mov
cmp
jge
lea
mov
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
je
xchg
ds
add
jo
add
add
xor
xor
jl
in
xor
shl
enter
shl
xor
xor
xor
xor
cmp
push
xor
xor
xor
clc
xor
mov
add
xchg
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
loopne
xor
arpl
mov
shl
ss
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
xor
aaa
(bad)
aaa
aam
stc
aaa
pop
cmp
cmp
dec
cmp
cmp
jbe
xchg
outs
ds
ds
ds
aas
aas
aas
inc
aas
dec
aas
pop
aas
je
mov
xchg
aas
call
add
add
in
hlt
xor
xor
enter
sub
xor
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ds
ds
ds
ds
ds
ds
repz
aas
(bad)
aas
lds
leave
aas
int
sar
aad
fnstcw
fnstsw
loope
in
jmp
add
add
add
xor
xor
xor
xor
push
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
and
push
xor
jb
jp
xor
xor
(bad)
push
adc
pop
ss
ds
ss
ss
xor
ss
ss
ss
mov
ss
ss
out
ss
ss
aaa
adc
and
and
xor
aas
aaa
(bad)
repz
sub
jae
scas
cmp
cmp
jl
inc
cmp
xchg
int
xlat
cmp
cmp
dec
cmp
ja
test
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
loope
add
bound
jp
xchg
aas
stos
aas
icebp
aas
add
add
add
or
jo
int
sub
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
div
sysenter
inc
xor
xor
xor
xor
xor
mov
pop
outs
xchg
movs
ss
add
pop
aaa
je
mov
fwait
aaa
lods
aaa
(bad)
sti
aaa
push
cmp
arpl
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
sbb
xor
inc
cmp
cmp
cmp
cmp
cmp
data16
ds
add
add
jl
add
movs
xor
xor
pop
cmp
cmp
cmp
cmp
push
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
cmp
aas
mov
mov
xchg
aas
xchg
aas
call
aas
stos
aas
scas
aas
mov
mov
mov
aas
(bad)
aas
retf
aas
sar
(bad)
aas
fidivr
fidivr
loop
out
jmp
aas
cli
aas
(bad)
aas
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
popf
xor
xor
xor
leave
xor
cmp
dec
ss
ss
ss
mov
or
push
aaa
sub
leave
aaa
(bad)
cmp
ret
cmp
push
cmp
ins
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
xor
dec
ds
cmp
ds
aas
jne
mov
mov
fnstcw
add
add
add
push
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pop
xor
xor
outs
xor
jbe
jp
jle
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jge
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
shl
ss
ss
(bad)
ss
aaa
daa
cmp
cmp
cmp
cmp
fdivr
or
push
cmp
mov
cmp
cmp
inc
cmp
xchg
test
adc
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
mov
sar
dec
ds
ds
ds
fdivr
stc
ds
aas
ds
push
aas
pop
aas
pusha
aas
test
mov
sar
aas
in
aas
add
add
add
sbb
add
pop
xor
xor
jg
lods
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
or
adc
and
daa
xor
dec
ss
imul
ss
xchg
ss
scas
les
retf
ss
lahf
aaa
pop
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
jl
cwde
cmp
adc
cmp
push
cmp
jnp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
mov
cmp
sub
dec
ds
mov
mov
aas
and
sub
sub
xor
xor
add
add
in
add
cmp
xor
xor
xor
xor
xor
xor
jns
xchg
xor
xor
push
xor
xor
xor
aaa
xor
xor
xor
ss
jge
xor
lea
xchg
ss
ss
ss
sub
aaa
aaa
cmp
cmp
push
cmp
pop
cmp
cmp
outs
cmp
ja
jnp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
jns
mov
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jge
mov
retf
cmp
cmp
cmp
xchg
mov
cwde
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
ds
aas
xchg
aas
std
aas
add
add
add
mov
xor
xor
xor
xor
jle
test
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
aaa
inc
aaa
je
(bad)
cmp
stos
cmp
cmp
pop
cmp
aam
in
cmp
cmp
cmp
ins
cmp
test
cmps
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
cld
add
add
xor
mov
inc
xor
adc
jnp
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
test
xor
sbb
and
sub
xor
cmp
inc
ss
ss
ss
xchg
mov
cwde
ss
mov
shl
ss
loopne
in
ss
add
or
adc
and
sub
xor
inc
aaa
dec
aaa
push
aaa
pusha
aaa
ins
aaa
je
xor
aaa
xchg
aaa
mov
aaa
shl
aaa
aad
loopne
in
aaa
cmc
aaa
add
or
cmp
cmp
push
cmp
ins
cmp
mov
xchg
cmp
cmp
cmp
cmp
jb
mov
fwait
cmp
cmp
dec
cmp
cmp
cmp
cmp
js
lea
mov
cmp
cmp
test
(bad)
ds
aaa
aas
xchg
aas
movs
aas
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
aaa
xlat
aaa
in
sbb
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
cmp
add
cs
ds
arpl
outs
ds
mov
stos
ds
fidivr
pop
aas
adc
aaa
aas
gs
jo
xchg
aas
les
iret
aas
hlt
aas
add
add
add
add
add
xor
push
xor
mov
mov
hlt
xor
xor
xor
xor
xor
xor
xor
xor
mov
xchg
xor
xor
xor
push
xor
pushf
xor
xor
xchg
xor
xor
xor
xor
xor
pop
xor
xchg
xor
out
std
xor
inc
ss
ss
test
ss
add
or
sub
aas
aaa
popa
aaa
jge
stos
aaa
fbstp
lock
or
inc
cmp
cmp
cmp
cmp
pushf
cmp
cmp
cmp
xlat
cmp
cmp
cmp
cmp
(bad)
ds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
ds
aas
jb
xchg
aas
test
aas
add
add
add
add
xor
bound
xor
xor
xor
xor
xor
xor
xor
bound
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jp
mov
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
add
movs
add
add
xor
xor
int3
xor
inc
xor
xor
xor
xor
xor
xor
je
js
jl
xor
xor
xor
test
lods
xor
xor
in
xor
xor
xor
xor
xor
xor
or
or
adc
pop
xor
js
jl
xor
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
dec
xor
push
aas
mov
aas
add
add
shl
fdiv
call
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
ins
aaa
je
js
xor
aaa
mov
fdiv
fdiv
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
loopne
add
add
add
add
or
or
pusha
adc
add
add
add
add
add
add
or
add
fadd
add
dec
add
adc
add
mov
add
enter
add
add
xor
add
pusha
add
xor
add
mov
add
mov
add
add
add
add
add
js
add
inc
adc
add
add
add
add
add
add
test
add
add
add
enter
nop
cmp
add
add
pusha
adc
add
add
add
add
or
add
push
add
and
add
pusha
adc
add
add
add
add
add
add
adc
add
clc
add
adc
add
pusha
adc
add
add
add
add
add
add
cmp
add
or
add
adc
add
add
add
add
and
add
add
add
add
js
add
sbb
add
add
add
jge
add
add
add
add
add
add
mov
add
add
jge
add
add
add
add
sbb
add
inc
add
je
add
pusha
adc
add
add
add
add
add
add
loopne
add
pusha
adc
add
add
add
add
sbb
add
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
sub
add
xor
add
pusha
add
add
add
add
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
pop
add
cmps
xchg
(bad)
rol
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
xchg
pop
add
add
mov
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
sti
cld
cld
cli
sti
sti
clc
stc
stc
div
div
div
hlt
hlt
hlt
repz
repnz
icebp
icebp
lock
lock
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
std
(bad)
(bad)
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
call
out
out
out
out
out
hlt
hlt
hlt
repnz
repnz
icebp
lock
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
mov
cmps
sar
sar
sar
sar
sar
sar
sar
sar
sar
out
out
hlt
hlt
repz
icebp
icebp
lock
icebp
lock
out
out
out
out
out
out
out
out
in
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
test
and
test
jl
pop
jp
pop
jns
pusha
js
popa
jbe
bound
arpl
jae
gs
data16
sar
out
cmc
cmc
cmc
hlt
cmc
cmc
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
test
and
movs
pop
jg
pop
jge
pop
jl
pop
jnp
pop
jns
pusha
js
popa
ja
bound
arpl
jae
gs
sar
div
div
div
cmc
cmc
cmc
hlt
cmc
cmc
hlt
hlt
hlt
repz
repnz
icebp
icebp
lock
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
lahf
push
and
movs
pop
jg
pop
jle
pop
jl
pop
jnp
pop
jp
pusha
js
popa
ja
bound
arpl
fs
sar
idiv
clc
div
neg
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
(bad)
icebp
icebp
lock
out
out
out
out
out
out
out
out
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
xchg
test
and
test
jl
pop
jp
pop
jns
pusha
js
popa
jbe
bound
arpl
mov
clc
stc
stc
clc
clc
clc
idiv
clc
div
div
div
cmc
div
cmc
cmc
cmc
hlt
cmc
cmc
repz
hlt
repz
icebp
icebp
lock
lock
out
out
out
out
out
in
out
out
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
mov
test
and
movs
pop
jg
pop
jge
pop
jl
pop
jnp
pop
jns
pusha
js
popa
ja
vcvttpd2dq
out
cli
cli
stc
cli
cli
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
repz
hlt
repnz
repnz
icebp
lock
out
out
out
out
out
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
mov
xchg
lahf
push
and
movs
pop
jg
pop
jle
pop
jl
pop
jnp
pop
jp
pusha
js
popa
sar
cli
sti
sti
cli
sti
sti
stc
cli
cli
stc
cli
cli
clc
stc
stc
clc
clc
clc
idiv
clc
div
div
div
cmc
div
hlt
cmc
cmc
hlt
hlt
hlt
repz
icebp
icebp
lock
lock
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
lea
xchg
push
mov
xchg
lahf
push
test
and
test
jl
pop
jp
pop
sar
sti
cld
cld
sti
cld
cld
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
div
div
cmc
cmc
hlt
cmc
cmc
repz
hlt
repnz
repnz
icebp
icebp
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
mov
mov
mov
test
and
movs
pop
jg
pop
jge
pop
jl
pop
sar
cld
std
std
cld
std
std
sti
cld
cld
sti
cld
cld
cli
sti
sti
cli
sti
sti
stc
cli
cli
stc
cli
cli
clc
stc
stc
clc
clc
clc
idiv
clc
div
div
div
cmc
cmc
cmc
hlt
hlt
hlt
repz
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
(bad)
(bad)
dec
mov
mov
mov
mov
xchg
and
movs
pop
jg
pop
jle
pop
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
nop
rol
mov
xchg
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
lea
dec
(bad)
xchg
dec
mov
mov
mov
xchg
lahf
push
test
and
out
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
xchg
mov
mov
xchg
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
mov
mov
mov
dec
mov
mov
mov
mov
test
and
mov
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
cdq
mov
xchg
mov
mov
xchg
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
xchg
mov
mov
lea
dec
mov
mov
mov
mov
xchg
and
out
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
popf
mov
cdq
mov
xchg
mov
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
test
xchg
mov
mov
lea
dec
(bad)
xchg
dec
mov
mov
mov
xchg
lahf
push
sar
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
jns
mov
xchg
mov
rol
mov
add
add
mov
(bad)
(bad)
sar
stos
call
dec
xchg
mov
mov
mov
mov
dec
mov
mov
mov
mov
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
jbe
mov
cdq
mov
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
jae
popf
outs
sahf
mov
test
xchg
mov
mov
lea
dec
mov
mov
mov
mov
out
out
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
movs
cmps
jno
lods
je
mov
popf
mov
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
scas
cwde
ins
scas
call
push
nop
pop
xchg
mov
dec
xchg
mov
lea
dec
(bad)
xchg
dec
mov
mov
mov
out
out
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
test
outs
movs
cmps
jno
lods
je
mov
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
lods
xchg
data16
xchg
stos
xchg
data16
xchg
addr16
push
xchg
pop
xchg
(bad)
push
xchg
lea
dec
(bad)
nop
dec
mov
mov
sar
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
stos
pushf
ins
test
outs
movs
cmps
jno
lods
je
(bad)
(bad)
rol
mov
add
add
sar
(bad)
(bad)
std
(bad)
(bad)
sar
stos
mov
lea
(bad)
pusha
test
popa
cmps
xchg
popa
cmps
xchg
bound
movs
cdq
mov
addr16
fwait
bound
fs
mov
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
lods
xchg
imul
std
(bad)
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
sar
test
pop
cmps
xchg
mov
mov
mov
mov
pop
mov
pop
mov
pusha
lahf
cdq
popa
sahf
fwait
bound
arpl
out
out
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
lods
xchg
imul
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
sar
cmps
jg
movs
adc
push
mov
push
mov
push
lahf
lea
(bad)
pop
sahf
xchg
pop
popf
xchg
pop
pushf
xchg
pop
fwait
xchg
pop
call
mov
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
arpl
imul
cmps
xchg
pop
add
add
sar
(bad)
(bad)
std
(bad)
(bad)
sar
movs
js
mov
dec
mov
dec
mov
dec
sahf
test
xchg
mov
mov
mov
mov
push
xchg
xchg
push
xchg
xchg
push
sar
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
arpl
lods
xchg
imul
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
sar
mov
inc
mov
inc
lahf
jns
lahf
jnp
sahf
jge
popf
jg
pushf
or
dec
call
mov
lea
(bad)
push
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
arpl
arpl
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
inc
mov
sar
sar
sar
sar
sar
sar
sar
sar
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
arpl
arpl
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
loopne
shl
add
cmps
xchg
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
cmps
xchg
pop
add
add
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
rcl
push
(bad)
xchg
jns
xchg
jns
loopne
shl
(bad)
xchg
jns
xchg
jns
loopne
shl
add
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
pop
test
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
test
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
sbb
add
add
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
jns
jae
add
add
add
out
sti
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
mul
add
add
cmps
xchg
(bad)
div
out
cld
cld
cld
stc
std
push
clc
cli
cli
(bad)
push
cld
push
stc
cld
cmc
stc
sti
clc
std
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
cld
(bad)
(bad)
cli
(bad)
(bad)
stc
(bad)
push
sti
(bad)
cmc
div
div
clc
div
clc
div
div
cmc
hlt
repnz
repnz
lock
icebp
lock
icebp
lock
icebp
icebp
repnz
stc
mul
add
add
cmps
xchg
(bad)
div
icebp
sti
stc
idiv
sti
cld
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
repnz
div
clc
idiv
stc
div
clc
cmc
div
repz
hlt
repnz
out
out
in
in
in
in
in
in
in
in
out
sti
stc
mul
add
add
cmps
xchg
(bad)
clc
div
sti
stc
imul
mov
mov
sar
sar
sar
lods
mov
hlt
cmc
test
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
hlt
hlt
cmc
icebp
repnz
out
out
in
in
in
in
in
out
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
and
cmps
pop
jnp
pop
jns
pusha
ja
bound
arpl
gs
sar
repnz
div
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
div
clc
hlt
cmc
cmc
out
lock
in
in
in
in
out
out
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
test
and
pop
js
popa
jbe
arpl
sar
repz
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
div
clc
hlt
div
lock
icebp
out
out
out
out
out
lock
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
mov
test
jg
pop
jge
pop
jnp
pop
jns
pusha
jbe
vcvttpd2dq
out
div
cmc
div
div
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
div
clc
cmc
div
repnz
lock
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
mov
xchg
mov
jle
pop
jl
pop
jns
pusha
sar
hlt
idiv
div
stc
idiv
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
lea
mov
xchg
and
mov
hlt
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
nop
(bad)
dec
mov
mov
xchg
and
mov
hlt
cmc
stc
clc
stc
cli
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
xchg
mov
mov
dec
lea
cdq
push
xchg
mov
out
out
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
outs
mov
outs
mov
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
xchg
xchg
mov
lea
nop
dec
mov
mov
xchg
out
out
idiv
clc
clc
clc
cmc
div
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
outs
mov
outs
mov
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repnz
stc
not
mov
cdq
test
inc
xchg
mov
mov
mov
dec
mov
mov
out
out
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
and
clc
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repnz
stc
not
mov
mov
fs
mov
xchg
mov
lea
dec
lea
sar
hlt
idiv
idiv
stc
div
clc
idiv
clc
div
clc
div
clc
idiv
stc
idiv
stc
idiv
stc
mov
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
hlt
sti
stc
not
mov
mov
jp
movs
jl
lahf
jb
lahf
outs
cmps
popf
imul
sar
cmc
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
xchg
add
push
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
cld
cld
std
sti
stc
not
mov
mov
outs
mov
outs
mov
jno
pushf
jno
lahf
jae
mov
lods
cmps
jbe
test
out
out
idiv
idiv
stc
idiv
clc
idiv
stc
div
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
mov
inc
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
cld
cld
cld
sti
stc
not
mov
mov
bound
lods
xchg
lods
xchg
data16
xchg
addr16
push
lahf
imul
mov
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
mov
cmp
clc
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
cld
cld
cld
sti
stc
not
mov
stos
jle
stos
adc
push
test
pop
test
pop
cmps
mov
lea
xchg
pop
mov
mov
idiv
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
mov
cmp
clc
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
cld
cld
sti
sti
stc
test
mov
mov
sar
sar
sar
sar
cli
sti
cld
cli
sti
cld
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
mov
cmp
clc
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
sti
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
cli
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
clc
clc
stc
idiv
stc
idiv
clc
idiv
clc
idiv
clc
idiv
clc
idiv
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
clc
stc
cli
sti
stc
mul
add
add
cmps
xchg
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
int3
retf
retf
retf
retf
retf
leave
int3
retf
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
cmps
xchg
pop
add
add
add
fcomp
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcl
rcl
rcl
shl
add
add
add
add
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
cli
cli
cli
clc
clc
clc
cmc
cmc
cmc
repz
icebp
icebp
out
out
out
in
in
in
jmp
call
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
cli
cli
cli
clc
clc
clc
cmc
cmc
cmc
cmc
cmc
cmc
repz
out
out
jmp
jmp
jmp
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
inc
pop
jge
pop
ja
popa
jae
gs
test
retf
retf
retf
in
jmp
jmp
call
cmps
xchg
(bad)
(bad)
(bad)
dec
push
test
jp
pop
stc
stc
stc
div
div
hlt
hlt
hlt
hlt
hlt
icebp
icebp
icebp
out
out
out
in
in
in
jmp
xchg
(bad)
(bad)
(bad)
call
dec
mov
and
int3
retf
retf
retf
retf
icebp
jnp
pop
in
in
in
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
call
dec
xchg
mov
xchg
dec
mov
cli
cli
cli
clc
clc
clc
clc
clc
clc
cmc
cmc
cmc
repz
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
call
inc
xchg
add
dec
(bad)
nop
dec
std
std
std
int
retf
retf
retf
retf
cmc
xchg
jle
out
out
out
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
jmp
ds
jne
cwde
jl
xchg
test
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
sti
sti
sti
stc
stc
stc
div
mul
icebp
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
sti
sti
sti
stc
stc
stc
div
div
hlt
hlt
icebp
icebp
icebp
cmps
xchg
(bad)
cmps
xchg
(bad)
int
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
(bad)
cmps
xchg
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
rcl
rcl
rcl
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
pop
add
add
jmp
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
(bad)
jmp
ret
mov
pop
fwait
cmp
add
add
sbb
add
add
popa
ins
ins
add
push
push
add
(bad)
push
jns
je
ins
add
adc
je
or
push
imul
adc
jns
gs
adc
arpl
gs
add
dec
gs
popa
addr16
sbb
inc
outs
ins
ins
inc
je
ins
add
push
push
push
dec
add
push
gs
je
add
push
imul
sbb
push
jb
dec
outs
outs
add
dec
dec
push
jns
je
ins
add
mov
add
dec
dec
add
push
imul
add
push
jae
push
dec
add
push
ins
dec
gs
jo
xor
adc
dec
dec
push
outs
add
inc
dec
outs
ins
pop
dec
imul
js
add
dec
gs
imul
imul
cmp
popa
arpl
imul
imul
ins
arpl
outs
add
add
add
add
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
xor
je
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
scas
add
add
add
add
xor
cmp
xor
xor
add
add
sbb
add
add
inc
add
ins
add
add
je
jae
add
add
add
call
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
mov
add
add
add
outs
add
jo
outs
add
popa
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
mov
add
add
add
outs
add
jo
outs
add
popa
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
aas
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
and
popa
jae
gs
bound
fs
je
je
or
and
jb
imul
xor
xor
xor
or
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
ins
gs
jb
jae
data16
push
imul
push
dec
dec
and
and
gs
xor
and
ds
fs
jb
jo
imul
jb
and
jae
popa
ins
ins
and
imul
sub
popa
je
and
je
jo
jae
data16
popa
jb
cmp
fs
jb
jo
imul
and
jb
jae
dec
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
fs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
gs
xor
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
addr16
addr16
or
and
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
or
jae
gs
bound
add
push
ins
popa
jb
and
jae
popa
ins
ins
and
imul
jbe
and
xor
xor
xor
xor
aaa
xor
xor
add
add
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
outs
jo
jb
addr16
xor
xor
sub
mov
ins
and
jb
outs
jb
je
outs
outs
add
popa
push
xor
aaa
aaa
aaa
xor
xor
add
add
ss
aaa
aaa
xor
xor
xor
add
outs
ins
popa
add
add
imul
and
popa
imul
add
xor
xor
xor
xor
inc
outs
jo
jb
addr16
xor
xor
sub
mov
ins
and
jb
outs
jb
je
outs
outs
and
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
add
add
je
cmp
das
add
add
add
add
add
ins
and
jb
outs
jb
je
outs
outs
add
xor
xor
xor
add
add
add
add
add
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
cmp
add
es
add
xor
xor
imul
cmp
dec
inc
das
dec
push
das
xor
xor
das
pop
push
das
xor
xor
and
jb
gs
push
imul
xor
and
jb
gs
aaa
add
add
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
aaa
xor
xor
add
aaa
cmp
push
das
das
add
in
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
and
and
outs
imul
cs
add
es
outs
imul
imul
add
xor
cmp
xor
add
add
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
add
add
add
add
add
add
add
add
ss
add
add
add
pop
push
jb
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
jb
outs
cs
add
add
add
pop
push
jb
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
imul
jb
imul
add
add
add
pop
push
jb
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
imul
imul
xor
xor
xor
inc
cmp
outs
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
jb
outs
cs
add
xor
xor
xor
xor
inc
cmp
outs
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
imul
imul
add
add
add
add
jae
imul
icebp
icebp
jmp
xor
add
add
loopne
and
lock
repnz
in
and
loopne
repnz
and
icebp
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
lock
jecxz
loopne
in
loopne
repz
repnz
out
loop
repnz
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
clc
and
out
in
out
cld
(bad)
repnz
cs
in
in
and
loopne
loopne
out
in
and
icebp
repnz
out
loop
call
out
in
in
in
in
icebp
jmp
out
jmp
icebp
in
out
out
repz
in
in
sti
in
out
lock
in
call
repnz
and
out
out
out
jmp
repnz
lock
jecxz
loopne
in
in
repz
repnz
out
loop
call
out
loop
repnz
and
call
in
sti
in
hlt
loopne
jmp
and
in
and
in
in
loopne
lock
call
or
loopne
in
call
loopne
in
and
repnz
loope
and
lock
in
jmp
call
int
out
call
loopne
in
sub
in
jmp
out
lock
in
jmp
in
call
repnz
out
loop
call
jmp
and
sti
and
out
bnd
sti
loope
loopne
cld
and
lock
(bad)
and
loopne
jmp
repz
repnz
out
loop
call
out
call
loope
out
lock
jmp
and
icebp
repnz
out
loop
call
jmp
jecxz
loopne
in
sti
and
lock
repz
icebp
jmp
jmp
call
xor
xor
dec
bound
icebp
loop
loope
in
out
jecxz
and
call
out
jecxz
and
lock
icebp
repnz
icebp
repnz
cs
loopne
in
call
icebp
repnz
out
loop
repnz
and
jmp
and
loopne
loopne
loopne
repz
repnz
out
loop
call
and
loopne
loopne
sub
div
out
loope
and
lock
loop
lock
jmp
and
loopne
out
loop
and
loop
icebp
bnd
out
lock
loopne
call
jmp
repz
repnz
out
loop
call
in
out
call
out
out
jmp
lock
in
loopne
icebp
jmp
repnz
icebp
in
in
in
loope
out
in
in
sti
in
hlt
loopne
jmp
and
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
out
and
loopne
in
clc
in
loopne
shl
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
jmp
in
loopne
or
out
call
out
repnz
loop
and
jmp
and
sti
cmc
out
in
and
out
out
lock
jecxz
loopne
in
sti
and
icebp
repnz
out
loop
call
jmp
repz
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
icebp
jmp
in
out
icebp
repnz
out
imul
out
and
loop
loope
in
out
jecxz
and
in
repnz
and
icebp
loop
loope
in
repnz
in
in
repnz
and
loopne
std
repnz
in
and
call
call
sti
loope
lock
lock
jmp
jmp
in
out
out
in
in
out
in
icebp
out
jecxz
loopne
in
call
out
div
call
icebp
jmp
loop
jmp
jmp
mul
in
out
out
in
in
out
jecxz
and
out
jecxz
loopne
in
call
lock
and
icebp
repnz
out
loop
out
jmp
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
lock
loopne
jmp
in
out
loop
call
in
call
loopne
jmp
repz
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
lock
lock
jecxz
loopne
in
in
repz
and
lock
out
repz
repz
and
icebp
repnz
out
loop
repnz
and
lock
jmp
lock
in
sti
aas
add
sti
loope
lock
out
out
out
jmp
call
in
sti
in
push
jmp
jmp
and
out
repnz
loop
and
jmp
and
loopne
loopne
loopne
repz
repnz
out
loop
call
repnz
lock
mul
icebp
icebp
and
icebp
repnz
out
loop
call
out
jmp
jmp
out
call
cs
icebp
jmp
and
sti
and
lock
in
in
repz
jmp
loop
jmp
icebp
out
jecxz
loopne
in
call
loopne
in
call
in
out
out
jmp
loopne
in
cs
repnz
loope
and
icebp
repnz
out
loop
repnz
and
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
out
jmp
in
sti
and
lock
and
icebp
jmp
loop
jmp
icebp
out
jecxz
loopne
in
call
sti
loope
lock
loopne
jmp
in
(bad)
and
iret
repz
jmp
out
repnz
lock
and
repz
repnz
out
in
in
in
sti
and
lock
jmp
in
loopne
jmp
loop
in
out
jmp
jecxz
loopne
in
sti
cs
sti
and
loopne
out
and
out
out
repnz
loop
in
bnd
jecxz
in
call
loopne
jmp
repz
bnd
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
out
repnz
cld
and
popa
fs
gs
out
jecxz
loopne
in
add
loopne
in
and
add
int
out
in
into
repnz
in
loopne
shl
repnz
out
loop
repnz
add
loope
out
lock
in
icebp
out
out
loopne
loopne
cld
and
lock
jmp
jmp
jecxz
repz
repnz
out
loop
call
jecxz
loopne
in
in
loopne
and
lock
out
loopne
shr
out
loopne
cld
and
lock
jmp
loope
mul
in
and
repnz
jmp
add
out
out
loopne
cld
and
lock
jmp
lock
loop
in
and
in
inc
shr
out
loopne
cld
and
lock
jmp
in
in
call
repnz
jecxz
and
loopne
repz
jmp
lock
loopne
call
out
call
in
call
int
loop
out
out
out
out
and
out
out
loopne
cld
and
loopne
jmp
and
shr
out
loopne
call
out
call
lock
icebp
repnz
cs
out
out
loopne
call
jmp
jmp
shr
cmc
lock
in
call
hlt
out
lock
loopne
call
jmp
in
call
jmp
push
call
add
loopne
in
clc
in
call
repnz
out
loop
call
ret
out
repnz
loop
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loopne
out
jecxz
repz
repnz
out
loop
call
iret
lock
jecxz
loopne
in
in
loopne
and
lock
out
loopne
or
jmp
jmp
lock
in
sti
cmp
and
in
icebp
repnz
repnz
cld
in
out
and
out
bnd
repnz
in
call
icebp
repnz
out
loop
repz
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
loope
out
in
in
out
and
icebp
repnz
call
jmp
in
(bad)
stc
call
icebp
jmp
repz
and
icebp
repnz
cld
repnz
in
icebp
jmp
in
loopne
in
call
dec
or
jmp
and
loopne
jmp
and
repnz
jecxz
and
call
in
out
jecxz
repnz
sti
repnz
and
loopne
in
in
sti
and
and
loopne
jmp
call
in
icebp
jmp
out
repnz
out
jmp
jmp
in
and
loop
in
repnz
out
lock
call
jmp
cld
and
jmp
and
loopne
in
call
loope
out
lock
sti
loope
lock
loopne
loopne
out
jecxz
in
jmp
repz
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
lock
out
out
out
jmp
call
in
sti
in
push
jmp
jmp
outs
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
lock
in
loope
in
repnz
out
out
loopne
sti
and
lock
loopne
out
loop
in
add
out
jmp
mul
in
call
jmp
cs
repnz
out
lock
jecxz
loopne
in
loopne
lock
out
repnz
repnz
out
jmp
jmp
add
loop
in
repnz
out
loopne
out
jmp
and
icebp
repnz
out
loop
call
jecxz
loopne
in
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
and
loopne
out
jmp
in
add
sti
and
out
jmp
in
sti
and
loop
icebp
bnd
out
jmp
and
jmp
and
lock
in
jmp
in
call
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
call
loopne
out
jmp
and
and
loopne
in
call
loopne
in
cs
icebp
jmp
and
sti
and
in
out
loopne
repnz
out
loopne
out
jmp
sub
repnz
and
loopne
in
call
repnz
in
loopne
in
jmp
out
lock
lock
in
call
icebp
repnz
jmp
imul
call
lock
jmp
and
icebp
repnz
out
loop
call
out
jmp
in
call
in
loopne
in
cs
in
call
imul
(bad)
cmp
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
in
loopne
add
out
out
loopne
call
dec
sub
out
loop
cs
in
icebp
repnz
jmp
imul
inc
iret
lock
jecxz
loopne
in
loopne
repz
repnz
out
loop
call
out
loop
and
loopne
loopne
cld
and
icebp
repnz
out
loop
repz
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
and
out
in
out
cld
(bad)
repnz
cs
loopne
repnz
and
icebp
repnz
out
loop
call
out
out
repnz
loopne
and
in
jmp
repnz
and
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
clc
in
out
and
out
in
out
cld
(bad)
repnz
loopne
and
loopne
in
call
in
jmp
repnz
and
jmp
and
loopne
loopne
loopne
out
lock
mul
icebp
icebp
loopne
repz
jmp
in
call
in
jmp
repnz
add
in
jmp
in
call
cmp
(bad)
loopne
and
in
in
loopne
lock
repnz
and
out
in
out
cld
(bad)
repnz
and
in
mul
icebp
add
in
sub
jmp
out
lock
call
repz
in
in
loopne
lock
repz
out
out
in
shl
loopne
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
clc
in
out
and
out
in
out
cld
(bad)
repnz
loopne
add
loopne
in
clc
in
out
add
in
jmp
in
call
loop
lock
in
out
add
in
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
out
and
loopne
in
clc
in
out
cs
in
jmp
in
call
jmp
add
out
in
out
call
out
out
jmp
jmp
repnz
jmp
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
in
call
out
jmp
loopne
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
out
and
loopne
in
clc
in
out
cs
loopne
in
call
out
repnz
loop
and
jmp
and
sti
cmc
out
in
and
out
out
lock
jecxz
loopne
in
sti
and
in
jmp
in
call
sti
and
in
icebp
repnz
repnz
cld
in
out
and
out
bnd
lock
loop
repnz
and
in
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
in
call
imul
(bad)
cmp
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
jmp
in
loopne
or
jmp
out
loop
lock
in
call
repnz
out
loop
call
loope
in
icebp
jmp
out
in
in
loopne
lock
repnz
and
out
in
out
cld
(bad)
repnz
cs
lock
call
bnd
in
loopne
lock
repz
in
mul
icebp
aas
add
out
out
loopne
call
out
out
jmp
jmp
loopne
ja
bound
in
call
in
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
repnz
repnz
and
out
out
jmp
jmp
and
jmp
in
(bad)
stc
repz
and
in
hlt
out
lock
loopne
call
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
out
and
loopne
in
clc
in
loopne
add
out
icebp
in
call
bound
and
lock
jecxz
loopne
in
sti
add
repnz
loope
and
icebp
repnz
out
loop
repnz
and
loopne
in
repz
and
lock
jecxz
loopne
in
repz
ret
in
jmp
in
sti
and
sti
out
out
jmp
call
cmc
out
in
loop
icebp
call
repz
loopne
and
in
call
lock
out
lock
jmp
and
icebp
repnz
out
loop
call
jmp
jecxz
loopne
in
sti
and
in
loope
out
in
in
loopne
loope
loope
call
loopne
cs
inc
push
and
popa
ins
gs
jb
and
in
icebp
call
iret
out
out
jmp
jmp
repz
repnz
out
loop
repnz
cs
inc
push
and
popa
ins
gs
jb
and
and
out
loop
out
lock
out
out
sti
repnz
loopne
add
dec
inc
push
and
popa
ins
gs
jb
and
out
out
out
and
jmp
call
repnz
in
in
loopne
and
out
bnd
loopne
loopne
cld
and
lock
in
out
and
in
mul
icebp
aas
add
loopne
jmp
repz
and
repz
in
repnz
in
cmp
shl
stc
in
repnz
(bad)
stc
call
jmp
icebp
repnz
loopne
jmp
loop
in
sti
jmp
jmp
add
loopne
in
call
loopne
in
call
icebp
in
iret
lock
out
repz
bnd
lock
out
repz
bnd
icebp
in
iret
lock
call
loopne
out
clc
call
out
lock
sti
repnz
lock
loop
in
call
jmp
add
loopne
in
call
out
loop
out
lock
div
out
loope
and
out
loop
out
lock
out
out
sti
repnz
out
repz
bnd
div
out
loope
and
lock
out
repz
bnd
loopne
jmp
and
jmp
and
lock
loop
repnz
and
jmp
and
repnz
in
sti
and
icebp
repnz
out
loop
call
out
jmp
jmp
and
jmp
out
repz
and
and
jmp
in
(bad)
stc
in
repz
call
add
repz
cmp
aam
jmp
jae
and
in
in
loopne
in
in
and
and
and
iret
out
out
jmp
jmp
and
icebp
repnz
cld
repnz
out
lock
call
jmp
jmp
sti
loope
lock
lock
(bad)
and
loopne
jmp
add
add
add
add
and
add
add
add
add
add
js
add
add
add
sub
add
add
add
add
add
add
add
add
add
bound
add
adc
add
add
add
add
push
dec
mov
add
fiadd
add
mov
add
add
imul
add
add
add
aad
and
xor
bound
add
pop
adc
jb
add
add
adc
add
add
out
out
out
mov
ja
ja
ja
ja
ja
ja
jb
out
loopne
xchg
pop
rcr
adc
jno
lods
sub
xchg
adc
dec
mul
cmps
mov
retf
das
dec
mov
outs
pop
call
add
add
add
or
das
loopne
mov
imul
pop
inc
sar
cld
mov
inc
lock
psubq
mov
and
mov
pusha
sbb
dec
and
into
or
fs
sub
inc
fs
push
test
or
in
test
xor
xor
jg
xor
pop
adc
inc
iret
push
push
lahf
cli
mov
sub
or
enter
pop
mov
in
add
(bad)
push
inc
cld
scas
lahf
inc
mov
test
inc
(bad)
aas
jg
jg
cwde
icebp
jg
daa
test
clc
xchg
aas
cmps
outs
lods
pushf
jmp
faddp
(bad)
pop
pusha
fdivr
mov
(bad)
cli
sti
(bad)
cmp
sar
ud0
or
sbb
sbb
(bad)
aas
xor
std
inc
pop
push
aaa
mul
pop
(bad)
pop
loop
cld
sbb
adc
adc
mov
pop
dec
push
push
mov
and
inc
add
aad
repz
push
mov
je
cs
loope
jnp
in
ror
movs
cmp
or
xor
mov
js
xchg
lods
sbb
mov
call
xor
ds
psubusw
mov
sbb
fwait
test
inc
add
mov
jae
aam
in
inc
mov
sbb
aam
adc
out
stc
ret
jns
mov
lods
push
sbb
mov
jle
or
clc
addr16
(bad)
rcl
xchg
mov
inc
fidiv
aas
or
mov
inc
(bad)
ds
inc
cmp
cld
push
enter
shl
aas
xchg
mov
add
mov
(bad)
jp
inc
or
movs
xchg
sar
(bad)
push
or
data16
pusha
pop
in
ins
test
cmp
jne
push
sub
sbb
mov
mov
(bad)
in
cmp
mov
push
add
push
sub
imul
sbb
(bad)
jmp
pop
cli
(bad)
pop
fxtract
ret
out
sub
jg
test
int3
sti
sbb
xchg
jo
jmp
cld
sbb
std
push
call
call
es
pop
pop
cs
call
dec
push
sbb
repz
mov
jno
ins
test
push
test
(bad)
mov
cmp
(bad)
pusha
mov
and
mov
push
mov
gs
test
ror
popf
dec
scas
imul
pop
rol
pop
adc
clc
out
push
pop
or
(bad)
push
cmp
mov
(bad)
(bad)
mov
nop
mov
pop
in
xchg
inc
or
pop
xor
jge
xchg
xchg
xor
cmc
leave
push
add
xchg
xor
in
fsubr
inc
call
dec
sbb
imul
das
xor
adc
addr16
ss
ficom
pusha
mov
push
fsubrp
outs
lock
test
in
sbb
rol
xchg
jp
push
outs
xor
jns
shl
add
(bad)
out
mov
adc
not
mov
mov
and
inc
mov
daa
push
imul
sub
xchg
into
jbe
ficomp
lea
test
sbb
mov
push
hlt
and
leave
leave
ins
sti
xchg
mov
(bad)
pop
mov
repnz
mov
addr16
popf
cdq
pop
clc
mov
pop
inc
test
repz
lods
sub
xor
les
or
loop
sbb
inc
sub
inc
repz
mov
ja
cmc
pusha
xor
into
xchg
mov
sbb
inc
stos
cmp
retf
fidiv
lock
ret
nop
movs
and
ins
mov
jg
or
(bad)
(bad)
sbb
stos
mov
jbe
ins
jnp
icebp
les
fnsave
call
lock
gs
loopne
cmc
bound
mov
sub
loop
mov
test
mov
sar
add
adc
sbb
mov
push
aaa
ins
or
push
stos
pop
loop
adc
popa
mov
jbe
mov
mov
scas
mov
pop
dec
scas
int3
mov
loope
test
gs
outs
xchg
or
xchg
mov
adc
test
ins
sub
add
inc
mov
push
iret
pop
(bad)
in
ror
je
arpl
pop
clc
and
or
xor
cmps
jbe
cdq
cmps
jo
rcr
mov
dec
fmul
push
nop
xchg
ins
sti
out
mov
jns
dec
mov
loop
mov
(bad)
add
sbb
mov
lahf
sub
test
add
pop
aam
mov
push
es
cmps
pop
out
sbb
or
adc
scas
clc
cwde
mov
sub
outs
data16
mov
pop
push
jbe
mov
dec
add
adc
pop
nop
inc
mov
mov
out
cmp
cmps
mov
ret
pop
test
shl
mov
or
adc
lods
jl
lds
dec
adc
pop
shr
das
inc
out
inc
int
mov
sub
xor
and
jbe
mov
ja
ins
imul
jmp
mov
test
push
(bad)
pop
stos
les
daa
mov
ins
pop
loope
(bad)
hlt
push
mov
cli
add
and
sbb
push
mov
dec
std
pop
sub
scas
cmp
out
pop
cmp
push
ficomp
dec
aad
xor
or
sahf
xchg
or
mov
jle
outs
push
xadd
rcr
pop
call
mov
pop
(bad)
jle
aam
xchg
bound
pop
test
test
mov
inc
dec
fbstp
add
lds
(bad)
pop
mov
cmp
push
push
mov
fsubr
fisub
ds
push
mov
test
fwait
in
and
in
xor
push
sbb
xchg
sub
inc
add
cmc
ret
pop
fcmovbe
xor
pop
pop
sub
cdq
repnz
mov
pusha
and
adc
push
mov
jns
mov
ss
in
clc
sub
fs
mov
(bad)
(bad)
jl
cld
outs
or
sub
das
jbe
add
push
stos
xchg
outs
xor
cmps
cmc
ret
(bad)
pop
fiadd
jle
js
rol
adc
adc
inc
addr16
fisttp
jnp
jnp
mov
pop
jbe
fdiv
mov
stos
sub
les
cld
ds
jge
repz
(bad)
dec
fwait
call
xor
cs
mov
out
xchg
popf
popf
xchg
fdiv
jecxz
cmp
in
inc
into
pusha
pop
das
pushf
movs
mov
nop
or
ins
xor
mov
sti
mov
sti
mov
xchg
int3
int3
pop
dec
sar
mov
call
add
icebp
mov
(bad)
jae
cmp
xchg
mov
dec
in
pushf
ins
pop
dec
jmp
lahf
ss
(bad)
xchg
or
cmps
inc
cld
sahf
out
adc
pop
fld
dec
(bad)
sahf
jmp
cmp
out
sub
repnz
push
inc
mov
dec
pop
ds
dec
mov
jae
call
(bad)
ss
sub
xchg
fdivrp
(bad)
or
movs
loope
push
adc
je
and
outs
je
into
cmps
mov
fcmovb
rcl
pusha
outs
sub
fdivr
mov
mov
sbb
adc
dec
pop
rol
imul
clc
pop
test
nop
enter
adc
daa
imul
inc
and
mov
jnp
xchg
add
(bad)
aam
adc
lock
sbb
dec
push
mov
sahf
inc
js
xor
xor
std
dec
arpl
and
and
inc
mov
(bad)
sbb
rcl
clc
pop
or
sbb
out
pop
(bad)
jb
dec
cmc
mov
nop
retf
add
sbb
out
dec
das
mov
cwde
jmp
jb
xchg
xchg
shl
(bad)
cwde
push
js
sbb
xlat
jmp
fisubr
mov
mov
and
inc
push
test
dec
xchg
push
pusha
jmp
movs
cld
xchg
fwait
jnp
addr16
(bad)
lds
stos
cmp
cmp
je
or
xchg
ret
arpl
ins
movs
mov
mov
jl
aas
mov
lods
in
sub
mov
sub
pushf
pop
pusha
add
scas
fld
push
sub
(bad)
data16
inc
mov
call
movs
rol
sub
or
mov
das
mov
adc
mov
js
lahf
sub
jl
adc
out
sti
lahf
ins
pop
loope
mov
rol
test
cmp
xor
pop
call
pop
jge
jle
fmul
mov
int3
push
and
sbb
adc
sbb
popa
add
mov
inc
data16
mov
cmp
mov
inc
iret
push
dec
int3
das
aaa
retf
push
mov
test
or
jle
shl
imul
stc
outs
int3
and
int3
outs
sub
mov
fsubp
lods
xor
scas
pop
fwait
dec
adc
(bad)
cmp
out
mov
loopne
mov
ss
push
daa
test
add
push
mov
cmp
jns
dec
cmc
scas
imul
sbb
add
cmp
or
out
pop
daa
xchg
mov
or
push
jb
push
xchg
out
dec
push
sbb
add
sbb
(bad)
xchg
xlat
scas
mov
push
cdq
pushf
sbb
mov
push
(bad)
stc
in
cmp
das
jmp
popf
and
retf
mov
mov
nop
jae
mov
sub
lea
mov
(bad)
cld
cld
fwait
js
int3
adc
adc
mov
push
gs
cmp
(bad)
cli
adc
lods
mov
inc
mov
jnp
xchg
stos
jae
arpl
test
cmp
fist
mov
lock
movd
and
repnz
cmp
inc
add
sub
aas
cwde
mov
pop
in
pop
sub
in
popa
pop
cmp
cmp
inc
pop
mov
cdq
or
and
push
fimul
sub
mov
cmp
cdq
xchg
sbb
cmp
test
fcmovne
lahf
retf
jle
lock
jbe
sbb
xchg
cmp
jne
int3
inc
ret
mov
pop
cwde
cmp
enter
mov
popa
fcom
sar
jns
or
bnd
dec
cs
xchg
adc
adc
test
bound
movs
rcl
mov
leave
addr16
imul
add
in
jne
mov
out
mov
pop
loopne
es
sbb
adc
pop
std
fs
inc
retf
call
xor
stos
add
jmp
cmp
rol
cmp
and
je
mov
icebp
ja
psubb
cmp
idiv
test
fsubr
into
sub
and
outs
jmp
popa
adc
mov
sbb
jbe
test
fst
xor
bswap
call
mov
mov
das
pop
xor
imul
push
push
int
add
cmp
cld
outs
dec
jbe
mov
ds
std
jp
jecxz
retf
push
stos
xor
and
adc
iret
jnp
jg
inc
mov
jmp
retf
and
push
test
dec
(bad)
popf
pushf
(bad)
icebp
xchg
or
in
sbb
(bad)
cmp
xchg
pop
fbld
test
sbb
idiv
pop
jno
bound
jae
lock
cmps
cld
pop
imul
test
sub
jmp
ds
sbb
xchg
data16
mov
pusha
test
push
(bad)
adc
call
sti
imul
pushf
arpl
arpl
retf
jb
add
or
mov
ins
push
aam
imul
pusha
cmp
shl
repnz
jecxz
fwait
pop
xchg
icebp
add
test
fnstsw
and
mov
std
lock
or
cdq
fwait
mov
mov
push
aam
jle
or
imul
or
add
inc
mov
ins
push
(bad)
jp
mov
jno
cs
mov
push
(bad)
mov
xor
cmp
inc
jno
pop
mov
pop
lea
in
jns
aam
sbb
mov
push
(bad)
outs
ret
mov
ss
outs
mov
pop
pop
ins
xor
nop
push
mov
ret
add
outs
push
cli
in
push
pushf
(bad)
lock
xor
mov
fsubr
inc
inc
mov
jg
mov
adc
jl
cmp
add
call
(bad)
lock
adc
call
addr16
repnz
out
jnp
icebp
jl
neg
popf
mov
in
jmp
jecxz
mov
ret
mov
jnp
mov
cwde
sbb
out
test
sbb
and
mov
sub
mov
aaa
jb
adc
xchg
repz
jnp
mov
enter
push
xlat
adc
imul
(bad)
std
mov
(bad)
loop
fstp
popf
stos
sbb
dec
push
sbb
cmp
inc
cmps
dec
fisubr
addr16
into
jmp
mov
movs
cmps
idiv
inc
fimul
pusha
xlat
sbb
test
jbe
pop
cmp
mov
jp
push
push
pop
shr
xlat
call
add
sbb
mov
xchg
push
imul
scas
inc
fs
imul
and
cmp
nop
ins
test
sub
int3
add
dec
cdq
add
into
stc
cwde
(bad)
rol
add
cdq
and
inc
or
imul
sub
mov
pop
inc
test
scas
in
mov
cmp
in
jl
mov
stos
push
std
sub
add
cmp
or
fcom
ficom
mov
pop
aaa
out
fisub
mov
std
dec
dec
movs
mov
sub
cdq
pusha
cld
repz
aam
pop
dec
out
outs
jae
pushf
cmps
ins
pop
pop
aaa
(bad)
ffree
cs
lea
inc
xchg
imul
xchg
and
xchg
repnz
inc
dec
mov
jb
in
movs
out
cwde
inc
cdq
cli
inc
mov
and
cdq
pop
xor
push
dec
popf
sub
popf
lds
aas
int
movs
mov
and
int
dec
sahf
imul
movs
push
sbb
mov
je
cmp
fs
retf
cs
mov
jmp
push
sti
cmc
out
pop
inc
jg
aaa
dec
xlat
xchg
adc
jns
retf
fxam
and
jmp
mov
mov
pop
cmc
xor
nop
inc
call
push
add
pusha
add
add
int
inc
push
fst
addr16
mov
ds
dec
mov
int
test
movs
xlat
cli
lds
dec
jo
adc
je
outs
and
jmp
or
popa
fstp
call
add
xchg
pushf
and
test
sub
lods
xchg
cld
repz
(bad)
jle
jecxz
push
ja
fadd
outs
xor
mov
sub
lock
dec
mov
nop
mov
ss
ret
ret
repz
sbb
pop
scas
das
fwait
neg
aam
pushf
int
shl
pop
lds
aad
nop
mov
(bad)
xchg
xchg
sbb
and
lods
inc
les
mov
(bad)
mov
mov
xor
and
aaa
mov
iret
or
out
add
icebp
mov
xchg
retf
mov
mov
in
push
push
mov
imul
ret
iret
jo
lods
adc
loop
lods
cmps
jb
jmp
jne
daa
push
jle
mov
test
jle
out
std
scas
jae
inc
std
jle
xchg
push
mov
fstp
iret
in
and
(bad)
clc
mov
push
fidivr
xchg
daa
hlt
iret
cmp
retf
add
arpl
ret
xchg
fwait
xchg
sub
ins
pop
push
stc
pop
test
cld
stos
sbb
(bad)
sbb
sar
bt
jmp
jbe
push
adc
mov
sub
xor
mov
sbb
xor
and
cmps
lahf
xor
jp
jge
add
fiadd
jmp
aas
lock
ss
std
es
out
in
out
fidivr
pushf
dec
xchg
fisub
loopne
or
les
mov
cs
push
jl
test
cmp
pop
test
push
scas
push
outs
in
mov
sbb
pop
pop
mov
pop
clc
or
iret
bound
add
aas
inc
mov
mov
(bad)
popa
lock
scas
mov
cmps
inc
(bad)
adc
and
fsubr
loop
cmp
inc
mov
fmul
outs
fsubr
jge
movs
nop
bound
mov
dec
sbb
xchg
inc
imul
call
loop
das
jne
repnz
cmps
cmp
and
push
pop
mov
sbb
test
ret
loop
dec
dec
pop
dec
add
xor
rcl
pop
dec
jnp
xchg
mov
dec
push
ins
test
jnp
gs
test
push
mov
mov
push
dec
mov
push
mov
int3
je
xor
fld
push
cmp
lahf
pop
aad
xor
fsub
mov
mov
mov
lock
addr16
xor
sub
cld
mov
push
dec
ret
jb
cmps
cmps
shr
sar
dec
xor
xchg
frstor
pop
bound
jmp
mov
mov
inc
xor
bound
(bad)
adc
or
in
mov
xchg
in
sbb
and
sbb
in
call
out
call
movs
(bad)
in
adc
jo
fimul
push
sbb
inc
cs
dec
neg
loope
retf
(bad)
and
pop
mov
push
jge
jge
pop
mov
xchg
scas
mov
enter
lds
clc
(bad)
rcl
pop
ds
fnstenvw
cmp
ins
dec
or
sub
mov
mov
mov
push
jge
cmp
adc
rol
ficom
adc
pop
das
mov
in
in
leave
call
aam
ror
cmp
mov
jle
and
in
cmp
jmp
mov
jge
fld
sahf
imul
popa
fnclex
std
push
test
jl
out
ret
xor
mov
jmp
jecxz
or
pop
mov
pop
idiv
movs
test
bound
int
sub
mov
sub
fadd
push
cs
daa
ror
or
movs
mov
ret
push
xor
fimul
js
adc
daa
dec
sub
add
pushf
fdivr
mov
jmp
imul
pop
call
jmp
or
or
pop
cmp
mov
jne
jne
inc
cmp
mov
popf
xchg
(bad)
jl
mov
mov
jmp
pop
lds
jl
in
or
dec
or
fsub
cli
sub
xchg
mov
sub
aas
or
stc
dec
xor
imul
xchg
(bad)
je
stc
das
mov
ret
xor
in
xchg
clc
int
xor
and
mov
cdq
test
cmc
mov
or
or
add
dec
in
pushf
cli
pop
fwait
js
push
adc
mov
fnstsw
mov
lea
neg
scas
or
enter
or
sar
or
adc
sbb
and
fld
mov
(bad)
out
cs
mov
test
cmp
fimul
test
dec
aaa
or
dec
mov
outs
mov
pop
std
daa
std
xor
scas
push
xchg
mov
daa
xlat
add
popa
call
aas
cwde
imul
mov
aaa
pop
xchg
enter
aas
push
(bad)
jmp
xchg
loopne
sub
add
movs
xor
push
inc
dec
imul
xor
(bad)
push
loope
pop
mov
or
push
cmps
fidivr
adc
cdq
shl
pcmpgtw
sub
loope
loop
mov
nop
xchg
imul
pop
in
jmp
push
mov
shl
gs
dec
lock
push
sbb
(bad)
sub
out
retf
jns
enter
jg
pop
inc
mov
cdq
in
mov
fist
xor
mov
pop
dec
mov
mov
sbb
mov
das
rcl
pop
mov
sub
adc
push
add
sahf
out
pop
test
dec
pop
inc
call
cwde
sahf
fprem
push
hlt
int3
imul
push
push
repz
fnsave
aas
jnp
sub
arpl
sti
xchg
icebp
push
sub
push
cmp
test
jbe
rol
adc
fs
xor
pop
xor
adc
mov
jmp
mov
dec
mov
(bad)
mov
sahf
inc
push
jg
push
pop
sub
ret
and
push
rcl
mov
imul
imul
or
jmp
mov
mov
cwde
sub
scas
inc
cmps
dec
mov
pop
sbb
std
xchg
ret
ss
je
inc
push
jbe
push
jmp
out
lea
rcr
jbe
into
inc
sub
sbb
sbb
or
sar
leave
xor
shl
inc
pushf
adc
and
dec
mov
add
mov
cmp
call
stc
add
int
add
and
sahf
push
call
or
fild
stc
fs
mov
fsubr
inc
js
lea
or
movs
iret
imul
mov
js
outs
inc
push
lods
adc
ins
and
clc
test
adc
scas
push
pusha
cmps
cmp
push
sub
push
mov
inc
cdq
scas
sub
mov
das
add
cmp
fidivr
or
jmp
mov
or
jbe
lds
aam
iret
cmps
mov
dec
mov
mov
mov
xchg
(bad)
scas
pop
retf
jp
and
loop
fimul
lahf
push
mov
jecxz
stos
mov
int3
add
inc
imul
outs
daa
adc
adc
cmp
retf
ret
sahf
sti
aas
out
inc
sub
stc
jmp
cmp
test
out
cmp
pusha
adc
inc
int
rcl
inc
xor
add
xor
dec
cmp
inc
in
sub
(bad)
mov
xchg
mov
sbb
repnz
cmp
push
hlt
push
jmp
lods
lds
sub
movs
je
jg
jecxz
imul
pusha
xor
xor
movs
mov
cmc
add
adc
push
fs
xor
mov
(bad)
je
jns
sahf
aam
dec
ret
in
jmp
xlat
jecxz
push
xor
call
adc
dec
dec
xchg
shl
sbb
inc
stos
ficomp
mov
jmp
jnp
loope
mov
mov
xor
mov
test
fistp
dec
sub
outs
dec
ja
out
mov
and
push
fcom
scas
ss
dec
xchg
outs
mov
loope
loope
cmp
add
push
adc
xchg
movs
jne
or
xor
pop
push
aas
fstp
cmp
cmp
or
jp
je
mov
add
pop
ror
fisub
outs
(bad)
(bad)
test
(bad)
je
pusha
xor
aaa
arpl
or
lahf
bound
mov
sub
xor
pop
outs
inc
mov
cli
push
fsub
mov
test
sahf
sub
mov
inc
loope
(bad)
add
ds
call
stc
inc
xchg
push
mov
aaa
sbb
sbb
rol
fwait
popf
into
and
sub
imul
stc
in
inc
dec
lods
mov
push
mov
loop
je
(bad)
pop
sbb
fimul
mov
int3
push
mov
dec
dec
loop
xchg
dec
jnp
cld
sbb
sar
clc
pop
pusha
xchg
sbb
mov
loopne
sub
es
sub
mov
icebp
dec
xchg
sti
out
mov
cmps
xchg
movs
hlt
div
push
xor
arpl
sub
add
mov
pushf
pop
test
dec
mov
js
ret
mul
mov
jnp
(bad)
mov
ret
cmp
pop
mov
or
cdq
ror
scas
stos
mov
or
mov
(bad)
shl
jecxz
mov
push
sbb
in
cs
jmp
ja
mov
sahf
shl
inc
cld
sub
mov
push
mov
popf
pop
xchg
dec
mov
out
imul
(bad)
cmps
cld
pop
sbb
in
mov
outs
js
int
add
jecxz
cmp
push
sbb
adc
jae
mov
pusha
les
xchg
push
movs
mov
mov
cmps
mov
mov
aad
adc
push
fsubrp
(bad)
mov
cmp
push
mov
add
shl
xchg
inc
or
xchg
or
rol
fwait
in
enter
addr16
in
aam
jo
sub
push
lahf
outs
ss
cmp
mov
iret
shl
dec
sbb
adc
xor
xchg
sbb
xlat
sbb
pop
push
xor
xchg
jo
pop
sbb
fs
les
push
rcr
setne
in
sar
cmp
(bad)
call
jge
or
xchg
xor
jmp
arpl
(bad)
xchg
icebp
and
aaa
dec
shl
(bad)
loop
repz
stc
mov
iret
dec
sbb
mov
aas
push
cs
push
sbb
cmp
adc
inc
arpl
(bad)
outs
and
jmp
mov
and
and
dec
imul
and
inc
jmp
and
ds
mov
in
fwait
mov
mov
mov
jecxz
sbb
pop
dec
pop
sbb
ins
push
adc
aas
out
push
stos
lea
dec
or
jl
mov
mov
xchg
fist
lahf
inc
das
cmp
loop
in
sar
(bad)
aam
out
in
fisttp
jne
pop
xchg
cmp
jb
bound
int3
loope
push
inc
lods
push
test
jnp
and
adc
fld
test
sub
dec
shl
imul
mov
cli
pusha
cmps
sub
push
pop
mov
ja
ror
push
or
cmp
outs
repz
and
ins
fadd
pop
mov
and
inc
addr16
mov
retf
mov
pop
neg
jmp
pushf
cmp
test
call
jge
cmp
jb
aad
sbb
cmp
add
movs
jno
mov
inc
adc
cwde
xchg
ds
cmp
push
inc
and
mov
mov
adc
enter
cld
inc
(bad)
mov
inc
dec
dec
xlat
push
call
add
sbb
or
cmp
ficom
fcom
std
push
cmp
add
push
pop
cli
fnsave
mov
(bad)
mov
xchg
ins
pusha
shl
xor
push
jecxz
clc
js
sub
xlat
xor
xchg
mov
push
or
pop
and
jg
and
mov
and
cdq
or
mov
outs
fld
xchg
cmp
sahf
xor
(bad)
imul
out
push
dec
xor
or
bound
adc
in
push
sbb
adc
lea
add
and
mov
cwde
inc
and
inc
sub
mov
mov
jg
js
cld
or
mov
pop
popa
aas
or
sbb
dec
imul
div
ds
push
ins
in
fbstp
sti
xchg
(bad)
in
gs
pop
aas
shr
ror
in
xlat
mov
out
popa
xchg
add
pop
pushf
or
imul
aaa
(bad)
cmp
in
jl
cmp
shl
outs
inc
test
fcmovne
mov
push
ins
repnz
sbb
cdq
push
mul
mov
inc
les
or
cli
retf
adc
jb
mov
xchg
outs
ins
pop
fs
push
sti
ret
mov
mov
ja
inc
aaa
mov
aas
fild
inc
(bad)
data16
jg
ret
mov
mov
pop
inc
inc
sbb
jecxz
mov
loopne
pop
ret
(bad)
mov
jle
in
sahf
cli
jo
dec
daa
aam
jns
ja
repnz
sub
mov
push
sbb
sbb
sbb
movs
and
jge
mov
imul
mov
fmul
jle
mov
popf
xchg
xor
mov
idiv
(bad)
jmp
dec
dec
(bad)
ins
dec
sbb
add
sub
in
js
jb
add
cmc
cmp
call
aad
cld
xchg
aam
in
fisubr
sbb
pusha
and
push
repz
aas
repz
enter
dec
jg
dec
mov
or
pushf
mov
ret
rol
enter
sahf
inc
inc
(bad)
mov
mul
call
pop
int
jnp
fimul
xchg
jns
push
mov
xchg
inc
xor
push
std
in
push
test
test
pop
and
xor
mov
and
mov
xchg
xor
stc
adc
into
xchg
js
ficomp
jmp
cmp
xor
mov
mov
xchg
(bad)
enter
or
xchg
out
aas
lds
std
les
pop
push
pop
adc
and
xlat
pop
jae
xchg
es
xor
mov
xor
(bad)
dec
lock
loop
pop
loop
mov
pop
inc
xchg
outs
sbb
jbe
push
sti
out
push
ds
clc
push
xchg
cmc
or
repz
add
cmp
test
push
(bad)
push
push
xor
adc
and
or
mov
aaa
mov
push
repz
add
mov
inc
cmp
and
push
sub
push
or
sar
jne
xor
and
js
xor
adc
or
inc
mov
push
adc
shl
inc
popf
xor
not
ins
xchg
fild
pop
cmc
dec
dec
adc
xor
movs
sbb
adc
cwd
fisub
mov
xor
add
push
and
add
mov
ins
inc
and
fldcw
xchg
inc
add
nop
mov
add
ret
jmp
xchg
mov
xchg
add
cli
sbb
sub
pop
ss
retf
push
mov
bswap
xchg
std
push
aam
adc
jae
pushf
cmc
fnstenv
cli
inc
sbb
nop
mov
mov
jp
and
xchg
les
jbe
aaa
adc
mov
cmps
iret
std
sub
xchg
clc
pusha
lea
stos
pop
jmp
jae
repnz
les
scas
pop
mov
fisubr
cmp
sbb
or
sbb
or
mov
and
mov
sub
gs
jge
cld
stos
cmp
test
test
xchg
into
pop
push
aam
ins
jbe
aad
(bad)
loope
loope
push
fst
cld
das
in
repz
or
xor
lahf
fdivr
cmp
sbb
aas
aas
xor
ja
adc
sbb
cdq
mov
mov
popf
movs
sub
aad
jg
sbb
sub
imul
(bad)
sahf
push
shr
ss
daa
xchg
xor
jmp
aam
leave
mov
mov
fs
jno
clc
mov
sahf
clc
xchg
and
sbb
pushf
popa
aad
retf
pop
inc
push
je
xor
push
repz
rol
push
rcr
xchg
enter
daa
and
pusha
popf
adc
jns
sub
imul
out
jge
mov
push
je
mov
jno
xor
je
jo
in
cmp
rol
mov
rcl
cli
sub
inc
xchg
enter
sbb
dec
dec
std
jae
rcl
lods
cs
sub
hlt
aam
jecxz
out
mov
arpl
repz
and
daa
cs
idiv
push
or
xlat
fcomip
mov
(bad)
cld
inc
cmp
jecxz
loop
push
lods
out
xor
inc
scas
call
leave
cmps
push
es
jb
mov
pusha
loopne
ret
xor
outs
cmp
bound
inc
fwait
(bad)
imul
xor
out
ins
cld
xchg
mov
arpl
push
fisubr
lods
dec
cmp
xchg
or
int3
jecxz
xchg
out
and
fsub
push
inc
cmps
pusha
and
add
cwde
adc
jbe
in
mov
pop
jne
pop
test
or
jnp
xchg
cdq
dec
dec
pop
push
(bad)
and
xor
aaa
adc
push
jmp
jae
paddq
aas
fcom
mov
ins
dec
pop
mov
xchg
(bad)
imul
aad
dec
and
sbb
cmc
push
bound
lods
adc
sahf
adc
data16
pop
or
fimul
pop
add
lds
xchg
push
out
test
jle
mov
dec
out
mov
test
push
fs
xchg
adc
sahf
mov
push
sbb
adc
xchg
xor
push
push
mov
inc
sub
ins
and
iret
xchg
shl
mov
sbb
xlat
stos
jle
xor
cld
loopne
cmp
gs
pusha
ret
call
cmps
pushf
pop
lea
inc
sti
dec
jmp
retf
ins
mov
jge
jge
stos
sbb
inc
mov
inc
int3
dec
aaa
inc
mov
dec
and
jmp
sub
adc
adc
out
cmp
and
movlps
push
(bad)
fdivr
in
xor
or
xchg
dec
out
add
xchg
pop
push
mov
out
xlat
mov
sub
mov
cmp
fidiv
mov
int
cmc
jb
xchg
inc
lea
ja
mov
push
out
loope
nop
ds
xlat
fwait
jno
xchg
es
push
mov
ds
jae
or
jecxz
out
or
imul
popa
mov
aas
les
fcom
movs
add
or
rcl
dec
xor
and
dec
mov
push
mov
rcl
and
sahf
iret
movs
movs
jmp
add
int
push
je
dec
push
in
xchg
jno
jmp
mov
pop
sbb
sbb
dec
sub
out
stc
rcl
xor
jecxz
jge
and
test
mov
gs
js
add
push
add
repnz
hlt
repz
ret
loop
xor
push
mov
jmp
jge
cmps
add
sub
in
cmc
or
jo
cmps
sbb
xor
dec
mov
adc
scas
jns
fs
js
jns
and
adc
movs
js
out
lahf
arpl
movs
int
push
mov
mov
outs
cmp
fwait
mov
jb
xchg
mov
xchg
add
jb
mov
imul
dec
inc
cmp
sar
jmp
jb
out
in
sti
lock
loopne
push
mov
mov
test
(bad)
loopne
lock
jmp
into
mov
pop
mov
jnp
(bad)
icebp
xchg
pop
bnd
jae
mov
fwait
xchg
pushf
ins
jb
lods
sbb
jecxz
retf
call
adc
je
iret
jp
dec
sub
fistp
xor
jmp
cmc
add
into
stos
pop
sar
ins
xchg
push
jp
popf
loopne
(bad)
jecxz
cmp
add
jl
lods
jmp
popfw
fdiv
fdiv
loope
mov
shl
mov
test
lea
(bad)
cld
fwait
je
mov
test
movs
and
pop
dec
fwait
cmp
push
neg
popf
repnz
inc
pop
loop
xchg
mov
pop
push
sbb
outs
sahf
jne
pop
ror
dec
xor
in
test
adc
cmp
fcomp
call
ror
fistp
xlat
xchg
jno
push
ds
xor
pop
add
pop
pop
sahf
int3
push
stos
push
rcl
adc
pop
lock
sbb
fcom
inc
or
xchg
mov
xor
leave
xrstor
repnz
jl
and
jne
gs
xor
(bad)
movs
cs
stos
ja
jmp
adc
cmps
clc
clc
icebp
(bad)
dec
add
mov
pop
leave
lods
jg
into
popa
cmp
cwde
cld
arpl
inc
mov
iret
ja
push
sar
gs
jno
jb
inc
into
aam
dec
mov
loopne
ds
cmp
test
jp
iret
in
or
into
(bad)
fcom
and
fcmove
push
outs
das
call
inc
fsub
jae
mov
sub
jg
leave
int3
lods
jne
dec
in
pop
cs
or
(bad)
xor
push
pop
ja
mov
ror
loopne
push
mov
pop
sbb
mov
lahf
inc
mov
(bad)
lahf
mov
sbb
in
ins
mov
movs
aas
fwait
shl
lds
bswap
in
adc
dec
jmp
pop
ins
inc
dec
xchg
adc
(bad)
cli
fdivr
add
retf
(bad)
call
stos
pop
jbe
mov
in
ds
ss
sbb
sbb
pop
cmps
cld
js
and
jnp
loop
jecxz
shl
cwde
out
jmp
mov
sub
jnp
cmc
fucomip
add
es
in
cmp
xor
pushf
retf
out
xor
(bad)
hlt
fnstcw
push
fwait
mov
gs
dec
scas
outs
dec
xchg
jmp
mov
jmp
xor
xor
xor
or
cmc
or
xor
mov
lods
add
rcr
ret
sbb
aam
sub
xlat
loopne
xor
sbb
dec
add
mov
fucomip
lahf
mov
mov
sub
loopne
daa
aam
jl
sub
inc
mov
pop
dec
pop
or
in
and
test
push
iret
or
mov
push
sbb
add
imul
pop
jns
std
movs
push
mov
lods
xchg
sbb
mov
adc
sbb
xlat
ret
cmp
pop
xchg
test
jbe
jae
add
push
or
test
pusha
ins
test
xor
dec
(bad)
outs
mov
(bad)
ds
out
pushf
fs
sbb
mov
jnp
sub
or
or
out
aam
and
xor
std
xor
into
stc
sahf
ret
cdq
arpl
aam
(bad)
(bad)
mov
push
jne
(bad)
enter
jbe
cmps
jmp
(bad)
mov
sti
jge
mov
push
shl
fst
ret
xor
inc
js
out
dec
fnstsw
jno
xor
xor
popa
out
fwait
ret
push
cwde
mov
ins
outs
push
xchg
stos
ds
popf
jecxz
in
xchg
mov
es
(bad)
or
inc
rcl
imul
mov
inc
loop
test
leave
xchg
fild
(bad)
mov
aad
mov
or
inc
inc
dec
sbb
sbb
sub
pop
pop
and
inc
mov
pop
aas
in
sub
add
or
push
ins
(bad)
in
imul
adc
xchg
adc
movs
mov
adc
xchg
call
mov
mov
inc
call
test
das
mov
mov
out
mov
stos
xor
aas
and
xchg
add
dec
push
fadd
je
xchg
or
adc
sub
ret
and
ja
xchg
icebp
xor
mov
cwde
scas
jp
(bad)
in
push
into
jo
jb
sub
int
jp
jp
cdq
shl
and
rol
pop
out
mov
(bad)
adc
push
stc
pop
adc
cs
adc
adc
int
shl
adc
jns
add
jmp
and
and
jbe
xor
mov
add
mov
rol
stos
rcl
mov
jl
pop
xchg
test
bound
movs
mov
out
mov
push
(bad)
or
pop
pop
sbb
xlat
xchg
hlt
(bad)
shl
fild
repz
mov
cmp
jecxz
push
sti
jns
in
cmp
xchg
popa
push
and
test
jmp
sub
test
sub
push
test
sub
sbb
pusha
jg
repz
call
mov
fiadd
cmp
mov
xchg
ret
into
xor
add
fild
repz
pop
jb
cmp
mov
mov
pop
mov
in
aad
xchg
sub
ret
push
jle
stc
pop
jg
lahf
sub
mov
mov
cdq
sbb
stc
add
(bad)
(bad)
pusha
repz
adc
sti
gs
imul
adc
mov
ins
mov
jle
mov
pop
mov
xor
int3
das
fwait
sbb
ficom
or
je
sub
mov
sbb
test
sub
div
and
or
inc
into
push
and
dec
mov
xor
mov
jge
scas
inc
dec
loope
mov
xchg
mov
sbb
jmp
(bad)
push
rcr
ins
push
pop
test
enter
dec
mov
mov
pop
xlat
jp
sbb
push
sub
in
jo
pop
and
push
mov
rol
xchg
mov
gs
push
fs
fnstenv
in
aam
adc
push
ror
dec
add
push
(bad)
pop
mov
in
call
cli
sub
gs
push
add
fidivr
mov
sbb
retf
xor
in
es
sbb
std
sar
cmc
mov
cmp
mov
pop
fsub
pop
adc
fistp
dec
jp
cmps
cs
sti
pop
sbb
imul
leave
je
repz
or
mov
daa
stos
mov
cs
(bad)
xchg
push
sub
fld
mov
fucomi
ret
sub
test
add
jo
pop
dec
sub
jmp
and
ret
and
xor
jb
nop
or
add
fiadd
xor
xlat
and
lock
imul
mov
jl
sti
pop
push
or
cld
pusha
int3
inc
stc
in
dec
out
hlt
nop
xchg
lods
outs
mov
push
ret
movs
movs
lods
leave
push
stc
aaa
icebp
dec
mov
jb
clc
cld
sub
add
fild
pop
sub
out
push
adc
adc
sbb
cmp
fld
(bad)
cs
jmp
jl
out
cmc
dec
xchg
or
arpl
xor
leave
ja
mov
push
les
jo
jg
test
daa
mov
or
push
or
cld
fiadd
inc
mov
inc
dec
fstp
xlat
mov
les
jmp
and
leave
jae
mov
pop
xlat
xchg
sub
inc
imul
repnz
or
dec
cdq
add
push
mov
inc
je
dec
mov
lods
push
and
or
push
arpl
cmp
in
xchg
mov
dec
leave
xlat
les
mov
ja
cdq
cmp
push
add
push
lea
lds
int3
(bad)
imul
clc
movs
and
adc
cdq
mov
adc
cmp
div
call
push
jg
jne
and
sbb
jmp
mov
jmp
(bad)
pusha
imul
setnp
or
ja
push
(bad)
(bad)
cmp
hlt
test
mov
(bad)
push
adc
mov
cmp
daa
aaa
ds
pop
es
ret
and
add
aad
imul
call
xor
je
pop
and
push
inc
inc
rcr
pop
hlt
fsub
bsf
shl
in
arpl
pop
imul
fs
push
xchg
call
mov
fucompp
cmp
xchg
push
test
cli
dec
cli
pop
imul
aam
mov
ins
xchg
iret
lock
inc
mov
out
or
stos
inc
sti
sbb
rcr
cmc
in
out
out
call
fistp
mov
inc
mov
jmp
ins
stos
xchg
push
cmp
adc
and
adc
out
stos
(bad)
outs
add
call
adc
stc
jne
push
sti
sbb
call
call
mov
and
jge
rcl
or
inc
dec
add
jmp
or
test
push
pop
ds
dec
inc
pop
xcrypt-ctr
cmps
lahf
sbb
jl
popa
inc
sbb
dec
or
adc
pop
std
mov
hlt
adc
push
add
sahf
imul
aam
retf
idiv
add
jns
repnz
push
xor
cmp
mov
scas
mov
nop
and
fst
xchg
repnz
push
stos
sub
jnp
ret
cmps
sti
je
or
loop
add
mov
push
sub
enter
jle
pop
jo
ficom
mov
and
or
push
pop
adc
ja
stc
aas
arpl
mov
je
pop
add
push
lock
cmp
sub
test
imul
std
mov
sub
jne
xor
xchg
xor
sub
xchg
out
ja
aam
imul
int
or
push
push
cs
push
dec
icebp
rol
fisttp
mov
repz
or
fcmove
push
out
mov
inc
sbb
ja
fwait
add
xchg
inc
mov
jmp
js
inc
shl
sti
xor
test
mov
aaa
jmp
gs
int3
add
and
lds
jno
pop
sbb
outs
icebp
jbe
mov
mov
push
dec
test
fwait
jmp
icebp
loop
mov
(bad)
retf
pop
js
jne
fdivr
imul
mov
mov
sub
leave
mov
mov
and
fadd
and
lods
jmp
and
test
stc
bound
pop
xchg
clc
retf
add
xchg
xchg
push
lock
xor
std
sbb
stos
loope
stos
mov
pop
dec
cli
adc
mov
arpl
mov
enter
dec
je
lods
mov
movs
loopne
dec
scas
xchg
dec
pop
test
pop
lods
lods
jle
mov
ins
mov
aad
adc
mov
dec
stc
xchg
sti
je
and
shl
adc
ins
fbld
cli
test
xchg
xchg
xchg
shr
add
or
xchg
mov
ret
repz
mov
pop
xor
ja
call
push
mov
adc
lahf
mov
cmp
lahf
jp
aas
clc
lds
or
inc
cmp
pop
sbb
or
push
into
dec
or
jne
scas
xor
or
mul
outs
test
pop
push
adc
mov
fcmovne
sbb
out
cmp
xchg
mov
push
cli
retf
mov
or
adc
mov
iret
jle
or
test
mov
pop
push
lahf
out
pop
aaa
cmp
cmc
pop
cdq
jnp
xor
outs
add
mov
xor
or
sbb
sbb
add
scas
push
nop
sahf
stc
xchg
sti
mov
js
dec
sbb
lods
push
sahf
jge
jns
test
cli
cmp
cmp
in
icebp
out
jmp
in
cmp
call
mov
retf
mov
cmps
pause
jg
inc
(bad)
fcmovbe
inc
out
neg
out
fwait
sbb
push
pop
ins
add
fisub
lahf
jae
or
loop
sub
ror
adc
jmp
add
sbb
jnp
mov
cmps
fist
mov
xchg
aad
aad
sbb
outs
add
push
add
es
repnz
pop
cmp
cmp
xchg
mov
fld
push
and
cld
pop
std
sbb
dec
sub
sbb
sub
xor
cmp
mov
and
cmc
pop
mov
xchg
xchg
sbb
cs
inc
loop
jnp
retf
mov
adc
movs
push
pop
mov
test
xchg
rol
mov
test
fisub
imul
jne
mov
repz
call
shl
mov
add
les
sbb
fwait
cmps
int
add
movs
add
les
call
out
or
and
push
cmp
outs
sub
fcmovnbe
clc
xor
icebp
daa
cwde
(bad)
mov
sub
gs
jl
int
mov
xchg
outs
sub
add
bound
inc
ret
add
add
jno
shl
sbb
daa
retf
mov
adc
add
shr
out
push
in
jge
mov
(bad)
frstor
aas
ret
xor
mov
add
stos
adc
je
in
dec
lahf
out
fwait
outs
stos
cmps
pusha
movs
cli
popf
lea
jp
mov
shr
push
addr16
pop
dec
sub
das
pop
pop
sahf
or
std
out
inc
test
dec
dec
jo
in
inc
fistp
jb
inc
mov
xor
mov
or
push
jp
add
cdq
dec
lds
(bad)
outs
loop
fxtract
clc
push
pop
adc
movs
jo
out
xchg
cmp
ins
scas
std
(bad)
(bad)
adc
mov
mov
(bad)
hlt
int
pop
es
test
pop
inc
sub
xchg
pop
xchg
retf
movs
icebp
mov
xrelease
mov
fst
inc
jb
pop
call
lds
adc
dec
xor
add
call
out
rol
dec
dec
je
or
(bad)
std
jmp
xchg
das
or
das
jno
pop
shr
push
cli
fsub
ja
xchg
sbb
mov
pop
adc
repnz
cmps
mov
xchg
cmp
adc
inc
aas
ror
aad
mov
dec
jo
pop
mov
shl
out
add
sub
lea
mov
or
mov
pop
inc
leave
lods
shl
imul
test
or
mov
jmp
mov
stos
xchg
in
push
xchg
mov
mov
adc
les
mov
out
out
fbstp
cmovbe
es
push
fmul
adc
fld
sub
ret
jae
sbb
scas
fcom
jo
xchg
imul
add
push
adc
xchg
imul
sti
fstp
clc
in
mov
add
xchg
test
enter
inc
sub
mov
sub
ds
dec
pusha
inc
int
iret
mov
jge
add
int3
(bad)
outs
repnz
mov
mov
(bad)
dec
jmp
call
retf
(bad)
leave
mov
inc
mov
inc
jl
(bad)
aam
std
cs
inc
adc
je
int3
(bad)
dec
data16
nop
adc
xchg
fisubr
dec
std
(bad)
xchg
xlat
mul
push
int3
nop
sbb
push
inc
pop
jae
and
cwde
xor
aaa
(bad)
movs
int
imul
nop
push
ja
test
dec
int3
dec
in
add
add
pop
sub
lock
jmp
mov
xor
in
mov
ror
or
add
idiv
inc
sub
sub
test
sub
inc
xchg
push
inc
dec
dec
(bad)
sbb
mov
jg
mov
jmp
mov
cs
sbb
arpl
mov
xchg
cmp
cld
retf
stc
mov
pop
shl
stos
mov
aaa
dec
nop
dec
sbb
add
pop
lahf
imul
retf
xchg
movs
xchg
inc
bnd
inc
popa
add
js
and
xchg
pop
jnp
jns
imul
push
sub
and
adc
rcl
and
lods
or
jbe
imul
inc
inc
pop
add
add
scas
xchg
xor
push
outs
push
gs
xchg
inc
jns
test
mov
mov
nop
jg
mov
sub
mov
xor
sbb
outs
mov
cmc
movs
jl
pop
mov
or
gs
test
retf
ins
addr16
pop
je
mov
pushf
mov
cmp
fs
les
popa
fnstcw
xchg
fisubr
adc
in
neg
jle
(bad)
push
mov
out
push
int3
push
mov
inc
sub
sub
aas
cli
mov
cs
push
mov
xchg
dec
aam
jp
stc
dec
lods
pop
cmp
mov
lds
loop
cmp
dec
mov
rol
and
adc
in
xchg
xchg
scas
aad
jb
or
imul
and
push
stos
mov
call
xchg
xor
adc
aad
clc
pop
psubd
jmp
dec
add
stos
push
out
or
(bad)
repz
dec
xchg
lahf
add
mov
ret
push
in
xchg
lods
mov
xchg
xor
iret
ja
nop
mov
data16
add
mov
inc
sbb
or
pop
jae
push
cld
out
(bad)
das
aaa
inc
adc
jge
fwait
or
pop
sub
mov
push
jecxz
mov
in
mov
scas
imul
fwait
aad
pop
in
adc
lods
dec
cmp
out
push
pop
jo
mov
sbb
or
lahf
fldcw
(bad)
add
mov
push
aaa
sub
in
push
in
icebp
cmp
imul
sub
pushf
dec
je
xor
repnz
pusha
push
cmps
ds
int3
sbb
pop
fisttp
pusha
int
pop
jmp
or
jo
std
inc
add
or
les
mov
and
xlat
lahf
lock
cmp
cmp
add
add
iret
adc
fmul
retf
xor
ror
jle
sbb
in
test
jno
pop
sbb
mov
cmps
cmp
xor
mov
jp
fist
aas
out
mov
push
or
cmp
(bad)
frstor
outs
mov
push
sbb
bound
in
cmp
sbb
test
xor
ja
adc
js
data16
ins
(bad)
div
lods
mov
sbb
js
jbe
sbb
inc
test
cmps
fimul
daa
imul
mov
dec
sbb
lock
js
movs
test
cld
pop
fidiv
icebp
jl
or
pop
cs
(bad)
xchg
sbb
mov
sbb
movs
dec
pop
lods
sti
cmp
mov
cdq
add
iret
mov
inc
rcl
fldenv
sbb
rol
pop
inc
popf
add
loopne
mov
mov
and
and
inc
pop
fst
and
push
mov
add
cs
retf
(bad)
loope
int
jno
sub
dec
xchg
out
pop
add
push
scas
mov
cmp
jno
ret
ds
adc
cmp
daa
push
es
sub
fdivrp
inc
xor
fcmovnb
xchg
push
(bad)
mov
shl
fmul
mov
or
movs
xor
jl
xchg
xchg
adc
cdq
retf
(bad)
outs
repnz
dec
clc
popf
adc
mov
out
cmp
push
hlt
pop
mov
aad
adc
rcl
fs
and
icebp
pushf
(bad)
jecxz
bound
xor
out
jmp
mov
fwait
xchg
out
push
jne
bsf
les
aad
mov
stos
pop
scas
ins
fs
frstor
loope
xchg
loopne
jo
aaa
or
jmp
sbb
sbb
push
xchg
pop
dec
sub
mov
imul
into
fmul
stos
mov
dec
lods
lods
stc
push
adc
mov
add
xlat
ds
test
push
mov
push
jne
dec
outs
fcomip
and
mov
das
fisub
cmp
cmp
inc
mov
cmp
(bad)
pop
inc
jno
xchg
xchg
ins
lahf
lock
lds
cs
adc
mov
jle
call
ins
cld
pushf
or
or
xchg
cmps
loope
popa
mov
scas
mov
imul
dec
push
es
xchg
cmp
push
xchg
cwde
mov
lock
icebp
jl
pop
add
dec
das
movs
in
cwde
mov
ins
add
das
sub
inc
pop
test
std
(bad)
in
cmp
and
int
call
sub
arpl
loop
cli
cmp
arpl
inc
inc
cmp
jae
pop
inc
loope
loopne
out
cmp
movs
cmp
dec
mov
mov
repnz
push
xor
fs
add
out
push
sbb
mov
mov
pop
loop
push
movs
out
out
add
js
mov
mov
jne
rcl
add
push
jge
pop
xchg
cmp
jmp
cdq
adc
mov
movs
daa
jo
stos
fiadd
dec
movs
or
sbb
pop
call
or
lds
call
jp
out
cmp
(bad)
or
cmp
shr
dec
enter
jae
div
mov
pop
and
popf
retf
mov
dec
in
in
and
out
push
xchg
inc
jp
fbstp
pop
sbb
loope
outs
inc
pop
pop
xor
jmp
sbb
int
push
sub
mov
fiadd
sub
fistp
mov
stos
fidivr
jb
and
repnz
pop
out
inc
not
cs
dec
test
stos
cwde
adc
jae
or
test
pop
sahf
fldenv
icebp
sti
push
mov
pop
mov
and
dec
call
out
(bad)
pop
cmps
inc
xor
push
push
or
movs
pop
retf
clc
mov
into
repnz
loope
aad
js
inc
shr
adc
movs
popf
std
out
int
outs
mov
lds
push
scas
adc
inc
mov
mov
sbb
mov
dec
adc
(bad)
dec
dec
rol
or
pop
sti
push
mov
jmp
xchg
(bad)
test
xor
cli
mov
test
dec
jne
adc
sbb
sbb
cld
les
aad
inc
jmp
ja
mov
cs
pushf
lods
inc
push
pop
cmp
mov
dec
retf
cdq
stc
fld
adc
and
movntq
stc
or
or
mov
jle
fmul
xor
int
push
aam
out
mov
imul
movs
sahf
leave
xchg
mov
jnp
(bad)
cmp
adc
mov
sbb
sub
clc
ret
pop
ds
out
ret
scas
jo
repnz
xchg
and
outs
iret
bnd
mov
shl
push
sbb
loop
rol
arpl
test
lods
jb
xor
push
jne
ds
mov
mov
leave
addr16
stos
loope
ins
mov
pusha
std
js
dec
ja
add
push
gs
push
ret
rcl
sbb
in
sti
std
test
xlat
mov
idiv
sub
fild
or
lock
loope
sbb
pop
mov
lock
xchg
rol
out
mov
cmc
pop
push
fiadd
add
aam
pop
push
lock
(bad)
sbb
pop
add
and
ins
xchg
scas
(bad)
cmc
mov
ret
std
mov
test
xchg
gs
repz
dec
mov
sbb
iret
adc
cmp
cmp
shl
mov
jo
pop
push
adc
jmp
fwait
es
sbb
jl
sbb
daa
mov
pop
fs
in
dec
mov
dec
jle
jno
je
movs
push
test
fdivr
ffree
(bad)
pop
push
mov
sti
dec
adc
fs
mov
daa
and
sbb
add
jo
push
dec
les
sub
fs
pop
fistp
and
inc
les
inc
in
sbb
aad
aam
es
ror
mov
xchg
sbb
sbb
pop
or
enter
sbb
xchg
dec
lods
sbb
cmp
inc
inc
sti
(bad)
pop
push
inc
pop
mov
add
or
cmp
push
pop
ficom
pop
in
rol
je
rep
pop
and
repz
mov
pusha
das
adc
mov
aaa
test
xchg
ins
lods
mov
das
jb
xor
sbb
sbb
push
inc
fdivrp
imul
int
movs
pop
sub
and
shl
cmc
bound
jmp
jnp
and
mov
jne
scas
jmp
iret
out
ror
out
mov
cmps
in
xchg
push
fidivr
mov
mov
repnz
retf
and
in
imul
dec
fldcw
xchg
js
jo
mov
sub
not
jmp
int
or
sbb
jl
nop
sbb
and
pop
aam
xchg
pop
or
xchg
ins
pop
shl
xchg
cmp
lahf
js
ss
inc
add
stc
icebp
test
cs
dec
clc
inc
push
add
jb
mov
push
xlat
jmp
mov
mov
push
popf
in
mov
xchg
enter
push
into
mov
mov
cmp
adc
cmp
jns
loopne
das
adc
push
dec
shr
shl
xor
mov
js
push
inc
das
adc
hlt
cs
add
dec
mov
pop
icebp
sbb
mov
mov
loope
inc
hlt
ins
add
push
aaa
call
ins
(bad)
outs
mov
lahf
add
jb
push
inc
xlat
fisttp
mov
jg
adc
lahf
push
fsubr
adc
xchg
sub
mov
jecxz
xor
or
and
cmp
push
pop
xchg
(bad)
mov
pusha
and
fdivr
push
dec
mov
jno
loopne
push
aam
not
popf
dec
es
pop
fwait
mov
in
add
in
(bad)
jnp
push
jbe
or
jns
dec
jl
sbb
or
cld
lds
adc
aam
inc
data16
dec
call
mov
mov
inc
mov
push
les
addr16
clc
rcl
sbb
das
xchg
out
pop
scas
jae
mov
pop
movs
mov
fs
mov
push
mov
fmul
stos
xor
mov
test
inc
aas
dec
push
inc
fidivr
pop
popf
adc
inc
(bad)
lds
jns
and
dec
cld
scas
cmp
xchg
cwde
mov
mov
les
sbb
pop
mov
stos
xchg
and
push
movs
popf
mov
out
in
push
into
dec
aam
loopne
ret
fiadd
iret
and
add
inc
stos
retf
in
adc
pop
pop
xor
push
je
dec
movs
retf
cwde
call
mov
test
xchg
inc
movs
adc
push
add
push
add
dec
inc
adc
data16
mov
fiadd
scas
je
lock
cli
test
mov
pop
mov
sar
idiv
cli
jle
jp
imul
fdiv
aam
out
inc
push
inc
out
aam
in
inc
sbb
xor
lods
imul
jmp
inc
and
popa
dec
jmp
movs
(bad)
stos
lea
es
dec
loopne
clc
sbb
stc
ins
push
xchg
xor
bound
je
pushw
mov
jecxz
retf
add
jg
shl
movs
cmc
or
les
imul
sub
pop
pop
add
xlat
push
and
adc
xor
fidiv
or
jle
mov
fcomp
mov
inc
scas
or
pusha
push
scas
push
push
mov
enter
(bad)
imul
or
push
push
ins
jecxz
and
loope
jecxz
pop
je
push
inc
jmp
js
and
and
sar
popa
inc
ds
mov
ds
sub
xor
std
enter
(bad)
fwait
pop
inc
cmp
je
fild
ins
in
xor
xchg
or
jmp
pop
jne
pop
xchg
xchg
and
dec
outs
sbb
mov
nop
push
jmp
adc
into
dec
push
stos
jae
shl
ins
pop
cs
mov
adc
jne
sbb
fldenv
fwait
mov
add
sub
imul
jle
lods
adc
mov
clc
xor
push
dec
mov
std
add
sub
loop
retf
or
xchg
add
mov
adc
stc
xor
pop
adc
call
add
icebp
je
adc
scas
imul
push
addr16
jno
out
and
pop
inc
arpl
cmp
jp
adc
xchg
jge
cmp
or
adc
or
stos
pop
xor
pop
pop
pop
in
imul
mov
test
movs
sub
imul
add
nop
adc
mov
repz
(bad)
jg
arpl
sahf
adc
fdiv
shl
arpl
mov
lods
lahf
(bad)
jmp
enter
mov
add
mov
pop
pop
loope
lock
mov
sbb
jmp
dec
leave
cmp
fisubr
ja
fisubr
in
fwait
and
retf
movs
xchg
jmp
xchg
lahf
mov
jmp
or
(bad)
daa
in
push
je
dec
popf
std
pusha
sbb
fucomp
jp
xchg
mov
scas
cmp
push
push
add
push
(bad)
movs
mov
sbb
sbb
inc
adc
dec
stos
pop
adc
push
inc
add
xchg
pop
dec
mov
enter
call
pop
push
jae
mov
sbb
loope
push
sub
jecxz
pop
pop
add
sbb
ja
jmp
adc
mov
ret
xchg
dec
mov
mov
jbe
loop
dec
scas
xchg
ins
int
sar
dec
leave
jne
fadd
enter
inc
(bad)
jle
ret
cmps
push
or
cwde
adc
gs
mov
add
inc
sub
push
push
dec
jnp
push
int3
xor
inc
test
jbe
sbb
in
and
or
jmp
pop
cmp
outs
rcl
rol
pop
sbb
rcl
lock
cli
je
and
sbb
test
sar
cmp
imul
sbb
mov
lods
call
xor
push
mov
call
add
fidivr
sbb
sbb
pop
cld
push
fisttp
lock
jne
xlat
ds
call
dec
(bad)
arpl
sahf
xor
mov
addr16
(bad)
jae
lahf
xchg
sbb
xor
sti
test
add
xor
pushf
xchg
int3
sbb
cmp
out
inc
cmps
mov
sub
retf
push
in
daa
stos
jno
sub
xchg
pop
or
dec
mov
stc
pop
nop
test
bound
pop
add
cli
mov
addr16
scas
dec
popa
fs
(bad)
in
fwait
sub
fimul
imul
mov
(bad)
test
push
jae
cwde
movnti
add
mov
loopne
inc
repnz
jae
push
in
xchg
imul
fsubr
lahf
rol
fst
dec
xor
loopne
outs
push
pop
iret
push
xchg
fst
retf
bnd
push
mov
(bad)
shl
xor
std
inc
in
dec
addr16
push
out
popa
popf
pusha
push
lods
(bad)
dec
neg
sbb
test
or
rcr
push
fs
fidivr
push
fist
fcom
push
or
cld
addr16
add
and
stos
dec
retf
inc
das
int3
sub
pop
pop
imul
mov
mov
and
clc
push
pop
mov
fcmovnu
sti
out
adc
jnp
and
gs
cli
mov
mov
pop
cmps
xor
xchg
in
hlt
stc
cmp
inc
sbb
mov
lods
cmps
push
sub
cmp
(bad)
stos
push
or
inc
std
shr
push
int3
data16
lock
nop
loope
js
inc
push
adc
jl
xor
movs
jmp
mov
rcl
aad
mov
xchg
xlat
and
fwait
(bad)
or
dec
pop
mov
outs
stos
(bad)
push
push
ins
and
mov
loope
and
mov
xchg
push
imul
push
add
rcl
sbb
call
mov
mov
mov
mov
pop
popa
cmp
fstp
pop
cs
adc
and
ja
xor
sub
lods
inc
mov
cmp
stc
cmp
in
jbe
sbb
hlt
mov
adc
sub
ss
or
(bad)
pop
mov
shl
mov
aad
scas
in
outs
mov
fisub
inc
fst
cmp
test
retf
or
bound
dec
sbb
mov
adc
inc
xor
jne
and
mov
or
mov
cmps
push
lock
push
fiadd
mov
and
(bad)
out
inc
mov
cmp
pop
pushf
out
add
mov
pop
inc
or
cli
test
inc
jmp
mov
pop
loop
mov
jb
imul
pop
gs
jecxz
imul
or
ins
cwde
sub
iret
clc
retf
inc
std
inc
lahf
lods
repnz
push
inc
and
inc
retf
or
mov
(bad)
(bad)
fistp
lods
loop
push
mov
hlt
rcr
and
stos
int3
loop
and
not
rcl
loop
sbb
mov
pop
retf
and
fwait
test
loop
stc
out
sub
ins
imul
or
movs
push
xor
push
lahf
aam
jmp
inc
mov
aaa
scas
sti
cmc
dec
fdivr
int3
fs
jno
outs
dec
or
fisubr
xchg
xor
out
outs
aam
dec
fs
cmpps
popa
sbb
enter
mov
adc
jnp
adc
adc
cmp
sbb
lods
out
popf
or
or
jmp
adc
cmp
lods
push
push
mov
scas
out
ins
dec
mov
(bad)
xlat
rol
mov
retf
jbe
sub
and
pop
in
mov
pop
add
retf
(bad)
loope
jle
add
(bad)
sti
std
gs
xchg
cmp
rcr
lock
sbb
ja
mov
adc
jb
test
add
into
out
mov
xchg
pusha
out
or
push
jae
sbb
xor
mov
adc
push
and
scas
push
push
sub
ins
mov
test
leave
out
pop
push
jno
cmp
pusha
test
sbb
and
pop
ins
sar
dec
push
mov
pop
in
int3
adc
push
pop
rol
xor
jl
mov
cmp
lea
lock
cmp
inc
adc
mov
jg
movs
mov
push
pshufw
inc
ins
lds
ds
leave
repz
push
cmp
shr
dec
inc
movs
mov
and
mov
fsubr
mov
aad
pop
div
test
lahf
loop
and
inc
jbe
(bad)
pop
sub
scas
inc
mov
push
jl
or
add
pop
fidivr
inc
push
(bad)
ds
inc
repz
test
mul
push
pushf
fild
(bad)
cmp
dec
inc
mov
adc
rcl
mov
xor
cdq
imul
int
xchg
or
mov
lods
scas
inc
jecxz
daa
jno
dec
xor
pop
mov
push
scas
xlat
jbe
dec
push
test
inc
xchg
mov
lods
dec
outs
pop
mov
pop
fidiv
jb
fisubr
mov
adc
mov
mov
add
fmulp
add
cmps
dec
pop
sub
mov
adc
aad
jg
or
or
scas
pop
cdq
imul
xchg
inc
pusha
and
pop
xchg
inc
lahf
sbb
call
xchg
cmp
fsub
xchg
mov
repnz
mov
(bad)
out
push
xor
loopne
mov
cwde
dec
loopne
push
call
cld
push
cmp
loope
popf
push
push
sbb
cmp
daa
(bad)
repnz
out
lock
mov
mov
xchg
(bad)
stos
add
jmp
jecxz
jmp
add
push
imul
push
mov
rcl
cmp
adc
cmp
dec
movs
push
push
dec
div
inc
mov
in
sub
repnz
cs
mov
leave
mov
popa
jge
fiadd
dec
sbb
sub
aas
(bad)
xchg
popf
leave
jmp
pop
aam
mov
jne
pop
cmps
ds
xchg
stc
add
adc
cs
push
fucomi
inc
mov
aas
sub
rcr
jle
sub
in
(bad)
in
mov
pop
sti
push
aam
push
ror
add
shl
mov
(bad)
mov
mov
sbb
shr
push
push
ja
xor
jbe
pop
cmp
push
test
dec
in
call
push
(bad)
data16
mov
or
pop
or
nop
push
jmp
imul
cwde
aas
stos
adc
aaa
ret
repnz
popw
les
mov
in
outs
stos
jle
mov
sub
and
in
sti
mov
ret
xor
mov
and
push
iret
jmp
(bad)
xlat
xchg
jecxz
shl
shl
or
mov
int3
xor
mov
shl
xchg
or
adc
cmps
inc
in
push
lock
daa
mov
cmp
iret
in
xor
jl
inc
sub
xor
iret
xchg
fucomi
retf
push
cli
xchg
dec
sub
call
mov
xor
stos
and
cmps
xchg
les
push
mov
call
lods
pushf
lock
adc
push
stos
shl
retf
sbb
out
loope
dec
sbb
push
push
push
add
adc
cmp
outs
add
int
mov
sbb
(bad)
out
or
movs
fsub
dec
pop
movs
in
push
aaa
pop
mov
jp
jbe
test
and
dec
stc
out
and
mov
and
mov
scas
xchg
ja
sub
mov
cwde
js
or
sub
test
leave
cmp
ds
lock
cmp
pop
ins
fdivp
(bad)
enter
lods
cmp
mov
fsub
cmc
sar
pop
loopne
mov
mov
bound
dec
mov
(bad)
or
add
push
fld
push
mov
ins
sbb
pusha
add
and
out
add
clc
push
repnz
push
sub
xchg
pop
(bad)
icebp
scas
jo
xor
test
mov
sbb
inc
sub
les
(bad)
mov
les
jle
push
push
pop
pop
and
jno
mov
mov
sub
sub
xchg
sub
jo
or
bound
rcr
sbb
sti
out
aam
fs
xlat
lock
arpl
xor
movs
sub
pop
or
push
je
xor
mov
mov
daa
imul
adc
cmp
arpl
retf
movs
jp
js
adc
cmp
cmp
push
adc
dec
cmp
jmp
mov
or
mov
popa
and
(bad)
loop
(bad)
dec
xchg
xchg
jns
add
sub
jb
sbb
popa
ins
neg
ss
mov
shl
mov
test
mov
cmp
push
daa
jl
popa
rol
add
push
inc
movs
cmps
sbb
cmp
repz
movs
popa
stos
jmp
adc
scas
fdivp
scas
pop
jp
loope
jbe
cmps
mov
adc
ja
mov
cmp
and
mov
fld
outs
cmc
iret
cdq
or
dec
fcmovne
cwde
cdq
in
mov
adc
and
fmul
icebp
xchg
mov
mov
xor
(bad)
and
add
mov
lahf
or
cmc
dec
out
inc
pop
test
dec
xchg
rcl
idiv
pop
dec
loope
pushf
lea
in
adc
sub
push
sub
lahf
das
pushf
push
mov
das
repz
or
imul
jne
push
mov
mov
xchg
push
xchg
inc
and
sub
movs
mov
mov
call
jg
popa
(bad)
jmp
scas
or
and
adc
popf
add
mov
mov
ss
xchg
mov
hlt
retf
leave
inc
aaa
bnd
(bad)
jg
fcomp
in
clc
jl
cmps
jnp
jne
imul
out
xchg
cmps
xchg
daa
inc
dec
out
cmp
lds
dec
mov
(bad)
sti
stos
sub
mov
pusha
sub
(bad)
and
shr
iret
dec
fimul
pop
cmps
adc
push
xchg
mov
pop
mov
dec
mov
lds
imul
out
out
iret
mov
sbb
adc
inc
fcom
jne
jmp
fs
in
sub
test
cli
mov
lahf
fisub
push
gs
pushf
mov
ret
or
rcr
sbb
pop
retf
push
adc
or
cmc
ret
fsubrp
pop
mov
xor
jo
mov
jne
(bad)
jae
mov
dec
or
popf
sahf
jp
or
jnp
or
js
leave
and
call
popa
fwait
mov
jp
pushf
xchg
imul
loope
inc
bound
xchg
sbb
es
mov
repnz
js
dec
das
dec
test
into
mov
jle
xchg
in
add
mov
mov
cmp
jbe
inc
fpatan
adc
mov
pop
dec
jecxz
enter
(bad)
xchg
popf
xchg
fadd
dec
cdq
dec
adc
add
gs
add
enter
clc
mov
or
mov
xlat
cmp
call
shl
adc
cwde
inc
scas
cdq
add
adc
data16
aam
mov
push
in
cmps
mov
push
mov
loopne
iret
lods
jle
(bad)
mov
jns
cwde
and
test
sbb
dec
push
mov
sbb
in
fisttp
cld
xchg
pop
mov
repnz
ret
fild
fucom
sahf
add
push
hlt
add
mov
cmp
and
movaps
aad
fcmovbe
dec
jl
and
adc
push
lahf
add
movs
fs
mov
ror
jg
addr16
xchg
and
lahf
mov
and
rol
data16
mov
add
clc
rcr
pop
push
aad
ret
iret
dec
mov
loopne
sbb
pushf
xchg
leave
rcr
adc
sti
into
dec
loopne
dec
mov
les
xor
mov
lods
jmp
(bad)
mov
mov
jle
in
push
pop
inc
jmp
and
jge
rcr
push
(bad)
jmp
loope
xchg
and
push
popf
mov
pop
movs
sbb
xchg
mov
xchg
dec
int
pop
xchg
ss
es
in
cmp
int3
sti
fwait
sub
(bad)
in
add
es
push
ins
jmp
pop
int3
enter
jno
scas
pop
jg
movs
int3
arpl
xlat
in
aas
pop
sub
enter
push
mov
xchg
sbb
sub
in
mov
int3
mov
xchg
cmp
jb
lods
iret
fidiv
pxor
inc
repz
inc
xchg
ret
lods
in
jmp
arpl
xchg
std
mov
in
stos
mov
cld
sub
jb
pop
pop
jne
(bad)
mov
or
xlat
cmp
jne
push
xchg
and
sub
imul
add
aam
hlt
data16
pop
jp
inc
test
and
pop
hlt
push
add
sti
pop
mov
mul
ret
sub
or
xchg
mov
add
fimul
out
pop
lahf
cmp
repnz
fsubr
dec
sub
test
push
or
sbb
dec
(bad)
mov
push
jae
imul
in
sbb
std
dec
dec
repz
sub
jns
xchg
(bad)
cmp
push
lods
retf
out
daa
jae
retf
scas
push
xor
push
lods
mov
imul
cmps
push
pop
xor
cdq
jb
ror
cmp
fiadd
xchg
sbb
dec
int
jg
adc
cmps
cmp
push
jle
ret
mov
add
(bad)
mov
jmp
push
adc
add
and
jbe
cmps
pop
arpl
fmulp
cmps
movs
dec
add
sahf
jmp
(bad)
and
inc
jp
loopne
mov
inc
ja
pop
mov
or
push
jge
add
cwde
repz
(bad)
mov
ret
and
mov
cs
jmp
sbb
adc
and
and
pop
cmc
sbb
movs
pop
pop
cmps
mov
xor
std
test
out
mov
mov
(bad)
push
mov
sub
inc
mov
xor
xchg
addr16
jl
mov
ret
jg
lahf
push
dec
push
into
ret
dec
mov
test
not
cmp
or
data16
retf
movs
repnz
gs
inc
xlat
xchg
ror
mov
ja
mov
mov
push
into
sbb
xor
shl
test
cmp
stos
pop
test
add
daa
cli
xchg
cmc
test
js
mov
xor
ins
inc
or
call
cmp
and
sub
jmp
jbe
sbb
and
or
pop
sbb
push
pusha
jecxz
jecxz
(bad)
sub
ss
add
or
(bad)
stc
js
xchg
add
int
cwde
xor
push
je
sahf
fst
cdq
rcr
sbb
nop
sub
mov
xchg
fs
retf
pop
sbb
scas
and
bound
inc
xlat
outs
daa
or
jle
imul
sbb
pop
jne
jbe
jl
add
dec
cmp
iret
sbb
ds
fdiv
sub
jbe
pop
addr16
mov
jb
push
inc
inc
ss
lock
lods
aaa
cmps
xchg
mov
inc
push
jb
in
xchg
cmp
mov
adc
je
mov
(bad)
jmp
inc
in
nop
in
mov
pop
add
out
jne
movs
cmps
in
test
push
or
pop
inc
arpl
pusha
inc
mov
add
pop
mov
pushf
in
or
sbb
push
pop
fisubr
int
cdq
mov
add
in
jl
jp
mov
retf
mov
mov
clc
mov
sbb
cmc
mov
or
pop
mov
push
inc
in
arpl
out
mov
imul
fist
mov
fisubr
cmp
(bad)
(bad)
jae
sar
stc
or
fistp
or
(bad)
addr16
jne
out
imul
push
daa
or
cmp
and
push
cs
and
pushf
loope
out
sahf
cmp
push
xchg
aad
movs
clc
loop
loop
xchg
jmp
sti
mov
cmp
lock
mov
push
jl
or
adc
add
loope
gs
popa
xor
adc
test
inc
out
rcr
mov
data16
rcr
mov
pop
jno
pop
sahf
mov
ret
push
pop
fisubr
fdiv
xchg
repz
xchg
je
add
aaa
(bad)
imul
pop
or
div
mov
scas
mov
mov
loopne
or
imul
push
into
(bad)
outs
add
arpl
mov
sbb
mov
mov
jo
rcr
dec
push
and
cmps
je
sbb
xchg
test
jns
push
test
ja
sub
mov
push
test
cs
iret
mov
inc
adc
mov
and
jae
pusha
pushf
daa
lock
(bad)
lods
cmps
add
jns
jb
sbb
sub
stos
jle
je
add
aas
shl
xor
aas
xor
(bad)
pop
xlat
fidiv
xchg
push
mov
jecxz
loope
or
retf
jecxz
or
sar
adc
mov
sbb
or
pop
dec
dec
retf
push
mov
mov
sbb
lahf
subps
ror
xchg
ins
dec
das
jns
mov
dec
icebp
xor
push
jne
or
mov
(bad)
int3
adc
mov
xchg
jb
and
dec
cld
fstp
dec
pushf
dec
sti
lds
mov
popa
mov
dec
xor
and
dec
mov
cmps
xchg
sbb
inc
xor
mov
mov
das
ficomp
push
call
sbb
sub
jmp
xor
in
popa
repz
and
stos
ss
dec
add
(bad)
cmps
loope
loope
sbb
daa
push
pop
jmp
xchg
xchg
aad
adc
(bad)
jno
mov
nop
push
dec
test
sub
and
fs
nop
adc
pop
mov
jne
pop
xchg
xchg
in
dec
arpl
jmp
mov
(bad)
sbb
test
push
sub
xchg
sbb
movs
and
xor
sbb
ins
rcr
call
daa
outs
push
test
and
dec
jnp
push
and
data16
cmp
jae
std
popf
ds
xor
mov
lods
sub
inc
ret
add
inc
mov
test
push
mov
push
enter
fimul
jns
or
test
sub
cwde
adc
mov
jb
jnp
push
int
push
adc
pop
jo
mov
pushf
in
push
and
mov
mov
and
jg
xor
inc
gs
or
ins
aas
mov
jb
fdiv
or
sti
add
(bad)
xchg
sbb
std
fwait
jae
imul
or
retf
pop
push
loope
ins
scas
dec
xchg
rcr
mov
in
sub
fisttp
pusha
or
pop
inc
retf
adc
adc
outs
pop
cmp
(bad)
inc
cmp
in
push
or
jp
xor
stos
mov
inc
gs
fidivr
xor
mov
mov
(bad)
jb
fmul
lods
mov
pop
xchg
mov
or
(bad)
inc
loop
shl
addr16
xchg
push
jo
push
test
mov
imul
mov
das
(bad)
mov
fidivr
test
push
ja
adc
cli
es
mov
push
sub
push
ins
mov
test
or
fs
pop
jno
and
and
(bad)
(bad)
jmp
neg
xor
js
inc
cmc
out
stos
outs
add
pop
cmps
idiv
xor
mov
jle
jg
push
test
and
xor
inc
ins
jno
aam
sub
cmps
(bad)
push
jns
mov
jp
aad
ds
cli
push
xchg
mov
push
mov
fild
sub
push
cmp
outs
add
and
enter
push
clc
push
cld
cmp
xchg
inc
pushf
inc
cmc
fiadd
mov
inc
mov
or
adc
gs
aaa
(bad)
xlat
add
cwde
int3
push
and
rol
cli
inc
inc
movs
jb
ins
xchg
cmp
or
fiadd
pusha
hlt
pop
fucomip
pop
mov
mov
retf
inc
jae
xor
xor
sub
inc
cli
arpl
jae
push
fcmovnbe
pop
xor
ret
ret
ja
push
out
pop
in
xor
add
jmp
cmps
push
xchg
adc
imul
xchg
out
sar
push
int3
cmp
aam
mov
add
loopne
fnsave
push
and
popf
push
jmp
xchg
ror
jle
fidivr
xchg
aas
cli
(bad)
das
sahf
jbe
xor
mov
push
call
rol
in
cli
cmp
inc
mov
hlt
int3
stos
in
fcomip
jne
ss
and
leave
inc
mov
retf
jo
loop
jl
cmps
add
xor
or
setl
sbb
ds
fisub
and
pop
ins
aaa
and
xchg
mul
xchg
inc
dec
dec
add
push
xlat
and
mov
dec
in
pop
push
ins
in
inc
or
fld
cmp
leave
inc
push
movs
xor
lahf
sub
or
mov
sbb
jmp
retf
sub
loopne
mov
mov
imul
jp
(bad)
mov
push
and
mov
imul
xchg
jnp
cmp
push
mov
jmp
adc
cli
shr
add
add
jle
mov
ret
outs
ret
xchg
iret
(bad)
stos
jmp
les
sti
fst
into
mov
mov
imul
outs
cmp
or
sbb
leave
ins
mov
ss
dec
add
adc
mov
sub
bt
mov
rcr
xchg
sar
imul
jp
test
and
mov
pop
scas
add
add
cmp
jmp
and
pop
aaa
rcl
call
cwde
mov
jge
sub
data16
int3
pop
xor
mov
call
inc
xchg
mov
xor
xor
jmp
jnp
or
jbe
std
mov
add
fiadd
aad
mov
mov
not
mov
pop
mov
call
pop
fsub
je
adc
pop
scas
mov
(bad)
xlat
fisubr
adc
mov
cmp
daa
rcr
test
lods
add
add
push
lahf
ds
dec
xchg
push
lahf
add
adc
ds
cli
lock
pop
ror
popf
sub
loop
iret
sbb
pop
inc
pop
vmovddup
dec
arpl
and
ret
ror
aad
sbb
sub
dec
cs
xor
or
cmp
mov
jp
outs
mov
(bad)
mov
inc
out
sbb
sub
cdq
(bad)
push
sbb
sahf
inc
paddusb
into
(bad)
(bad)
out
mov
nop
and
enter
scas
jmp
shl
inc
scas
jge
std
mov
adc
pop
dec
mov
ss
faddp
sahf
sub
xor
dec
push
in
aas
sahf
pop
into
aam
mov
add
sub
aaa
fisubr
test
mov
xchg
or
mov
call
movs
(bad)
cld
push
dec
mov
xchg
(bad)
sub
mov
std
mov
pusha
lock
fld
jge
add
push
jmp
mov
in
aas
pop
pusha
sti
dec
push
lods
mov
or
mov
es
mul
stc
mov
gs
push
xor
dec
inc
adc
sub
lds
aas
mov
jmp
out
sbb
lock
cdq
bound
add
and
stos
jmp
aaa
inc
(bad)
int3
shr
sbb
sti
aam
in
shl
fcmove
icebp
pop
inc
jp
mov
pop
pop
add
bound
pop
push
adc
clc
and
mov
loopne
jmp
mov
pop
push
vhaddpd
pop
test
and
test
fdiv
aaa
pop
push
icebp
int3
test
xor
or
and
xchg
adc
inc
push
jmp
pop
retf
inc
shl
int
mov
push
(bad)
lahf
daa
ins
pop
sahf
mov
mov
sub
popf
cmp
or
add
nop
inc
xor
pusha
fld
cmp
add
repz
mov
mov
dec
xchg
cmove
xchg
adc
cmp
inc
in
(bad)
cmc
jae
add
movs
out
movzx
(bad)
cld
mov
sbb
cmp
sbb
les
fistp
inc
movs
mov
inc
push
mov
ficomp
dec
mov
push
enter
jmp
aas
pop
(bad)
push
ss
adc
repz
mov
pop
push
adc
mov
adc
fsubr
bound
retf
mov
hlt
dec
in
xor
mov
adc
retf
jno
mov
pop
dec
push
mov
mov
inc
cld
cmc
sub
push
fcomp
adc
mov
sub
dec
xchg
sbb
in
imul
xchg
push
jbe
sub
push
fst
push
pop
ret
loopne
scas
into
mov
aas
pop
mov
pop
mov
jecxz
jp
push
ret
jg
mov
cmp
adc
cmp
xchg
mov
mov
sbb
pop
jle
test
shl
nop
xchg
and
into
in
cmp
leave
adc
retf
shl
jno
inc
popa
cmp
rcl
lahf
dec
aad
mov
xor
dec
inc
xor
sub
icebp
lea
in
mov
push
pop
inc
ds
or
or
es
pop
xor
(bad)
mov
xor
outs
inc
and
sar
jmp
mov
js
xchg
call
and
dec
and
and
je
mov
jle
pusha
pop
jb
mov
into
aad
cdq
lahf
push
cmps
imul
repz
pop
add
xor
les
mov
bound
cmp
sbb
sub
cli
(bad)
and
adc
mov
sahf
xchg
les
pusha
sub
pop
ucomiss
(bad)
dec
or
sbb
or
std
in
stos
imul
xchg
pop
jno
jmp
xor
dec
ins
inc
jno
push
out
lea
xchg
pop
cmp
fidiv
stc
(bad)
mov
stos
push
cmps
push
mov
push
(bad)
sub
jnp
hlt
pop
or
(bad)
sbb
xchg
sub
int
es
lds
jae
pop
cmp
push
loop
imul
xor
cdq
xchg
or
mov
fisub
jno
or
retf
rol
and
addr16
and
test
add
mov
(bad)
cmp
mov
and
add
cs
int3
in
cmp
push
dec
jbe
ins
lock
imul
pop
mov
out
dec
or
ret
mov
and
cli
movs
iret
in
jmp
dec
dec
mov
inc
jae
dec
mov
fcom
repz
cdq
test
imul
pop
and
ror
adc
jg
mov
icebp
aam
dec
xor
fnsave
fdivrp
sar
or
sub
ins
std
adc
aad
loop
out
in
out
arpl
icebp
int3
fs
jmp
xchg
in
js
xor
mov
lods
hlt
xchg
add
xchg
lahf
fucomp
ja
jge
mov
xor
lock
sbb
and
jp
push
ja
push
loopne
mov
ret
(bad)
mov
aam
xor
es
dec
add
repz
into
push
loop
xchg
adc
cli
mov
xor
bound
adc
sbb
pop
push
ins
ror
pop
mov
ins
out
cdq
hlt
and
pop
test
xchg
jbe
test
inc
nop
int
adc
sahf
pop
fdiv
cmp
sbb
scas
les
mov
xchg
out
cwde
jns
stc
push
pop
int3
dec
or
jo
cld
push
dec
lods
(bad)
call
adc
jle
inc
pop
dec
js
cs
or
ins
(bad)
or
sub
pop
out
dec
mov
and
or
cmp
inc
icebp
adc
or
lea
sub
adc
xor
pop
fist
std
(bad)
nop
jmp
out
xor
test
lods
test
repz
retf
sub
push
data16
repz
sbb
and
mov
pop
jecxz
jecxz
mov
jle
call
add
cs
fistp
push
xchg
and
xchg
inc
jg
mov
mov
cli
aad
fnstsw
out
sbb
sub
hlt
pop
neg
adc
jns
push
jl
stos
sub
in
or
cmp
mov
pop
pop
lahf
sub
sub
rol
ins
mov
pop
add
sub
push
popf
dec
jg
ret
js
or
enter
(bad)
xor
mov
movs
pushf
sub
int3
dec
shl
pop
(bad)
stc
or
shr
dec
jne
inc
xor
dec
push
out
dec
or
inc
into
pop
mov
test
xchg
cmps
aaa
retf
pop
mov
int
imul
cli
push
pop
setg
(bad)
fsubr
mov
nop
xrelease
ds
pop
ret
stos
mov
or
add
jo
outs
or
add
and
loopne
push
rol
cmc
mov
xor
not
sub
pop
shl
call
and
jmp
loopne
mov
adc
scas
mov
(bad)
xor
jge
scas
mov
xor
push
repz
xchg
mov
push
xchg
into
sti
adc
popf
mov
pop
push
lock
push
shl
mov
xor
xchg
sub
cmps
and
ins
pop
je
rcr
mov
cmp
push
mov
mov
dec
xor
adc
xchg
pusha
inc
fldcw
adc
out
dec
nop
js
jmp
and
push
mov
adc
jae
les
cdq
retf
int
and
sub
mov
nop
mov
pop
movs
pushf
in
jg
scas
pop
ins
adc
xor
les
adc
ja
loop
xchg
rcl
xchg
in
test
push
bound
cmp
(bad)
or
jne
mov
pop
call
mov
(bad)
fisttp
rol
sti
mov
bswap
sbb
or
add
jp
jmp
add
gs
mov
(bad)
les
fisttp
movs
(bad)
pop
pusha
(bad)
call
bound
mov
sbb
jecxz
sbb
xchg
sahf
mov
jecxz
mov
outs
test
pop
inc
adc
jge
dec
lods
sbb
sub
jmp
sahf
xchg
dec
sti
xchg
in
out
xor
retf
or
std
cmc
pop
mov
mov
stos
mov
pop
push
ret
(bad)
test
lods
mov
cmp
fistp
pop
ja
jnp
test
nop
stos
push
imul
xor
outs
(bad)
loopne
ret
test
retf
into
xchg
or
xor
sub
pop
fcmovnbe
push
cmp
xchg
mov
lods
pop
fwait
or
fiadd
aad
scas
test
add
sti
daa
jge
(bad)
or
arpl
mov
loop
(bad)
adc
icebp
mul
es
call
das
jns
cdq
test
arpl
aaa
push
mov
sar
or
imul
xor
leave
ja
sbb
in
scas
fcomp
scas
mov
mov
ins
adc
mov
enter
pop
inc
pop
fmul
cdq
aad
lea
test
pop
dec
and
push
sub
ret
push
push
inc
ins
retf
cwde
dec
ret
lahf
aas
fcom
cs
pop
cmp
movs
push
movs
pushf
jmp
outs
and
sbb
dec
push
pop
jno
in
push
mov
cmp
mov
dec
ret
aaa
add
add
jle
add
enter
xchg
ror
addr16
push
jb
dec
pop
jmp
addr16
add
aaa
retf
cmc
popf
mov
dec
clc
mov
push
adc
cmps
cmps
ins
dec
inc
mov
out
into
int
mov
stos
pushf
bound
leave
pop
mov
sbb
add
pop
sar
pop
xchg
cwde
pop
adc
jg
loope
xchg
inc
cmps
in
or
fld
shr
pop
int
in
retf
pop
pop
hlt
nop
and
shr
dec
dec
cmp
in
ins
stos
dec
call
xor
(bad)
or
adc
pop
stc
add
ret
adc
xor
lock
shl
retf
std
out
out
xlat
mov
scas
or
mov
jo
in
das
lea
dec
inc
xchg
cld
sbb
cdq
(bad)
jp
(bad)
sub
xor
out
xor
jle
sub
adc
fwait
into
inc
sub
ret
xchg
push
mov
daa
stc
stos
(bad)
imul
sbb
arpl
das
call
cmps
inc
pop
(bad)
rcr
push
dec
scas
shl
out
push
xchg
movs
pop
aad
jmp
mov
pop
test
dec
xor
inc
test
hlt
daa
adc
sbb
dec
push
icebp
out
enter
mov
jno
retf
push
rep
push
adc
retf
mov
cdq
(bad)
pop
mov
jo
rcr
mov
retf
xchg
jb
dec
adc
(bad)
sub
ret
jge
sub
adc
std
pop
push
sub
dec
xor
pop
sahf
into
jg
int
jp
cmp
mov
mov
inc
stos
or
mov
push
data16
xor
sub
dec
ret
xchg
lds
sahf
jecxz
add
(bad)
repz
faddp
popa
js
mov
sub
mov
lea
enter
aaa
lahf
pop
in
daa
and
ins
imul
mov
(bad)
aaa
jno
push
cmp
fs
leave
push
popa
sub
jno
stos
jge
lock
dec
cli
mov
(bad)
xor
scas
xchg
pop
call
mov
jmp
out
(bad)
pop
adc
pop
and
or
rcr
sbb
dec
push
sub
jecxz
aas
mov
cli
mov
dec
jge
jmp
push
rcr
shl
popa
sbb
jg
pop
pop
repz
ds
out
sar
out
sub
test
movs
cwde
ss
mov
fcmovbe
(bad)
xor
push
adc
dec
add
gs
or
jg
pop
pop
pop
shr
ss
sub
ja
mov
ja
sbb
pop
sub
sahf
add
movs
test
add
xor
dec
jmp
fmul
scas
xchg
xor
xchg
add
push
push
xchg
mov
xor
arpl
out
cwde
ret
fiadd
inc
inc
pushfw
cli
adc
push
xchg
dec
aaa
cmp
cmp
push
div
ret
xchg
(bad)
call
inc
rcl
dec
arpl
fdivr
xchg
dec
xchg
into
xchg
mov
gs
mov
mov
rsqrtps
ins
test
mov
sti
fcmove
and
cdq
xlat
arpl
retf
popa
or
frstor
and
(bad)
jae
adc
mov
mov
xor
jb
es
pop
ins
push
in
mov
stc
inc
mov
jb
sub
sbb
push
loopne
xchg
imul
out
neg
out
sbb
xor
aas
fnstcw
cs
mov
xchg
and
mov
xor
sub
jmp
hlt
jmp
fsubr
jg
lea
add
les
outs
jbe
adc
test
iret
sbb
mov
xlat
sub
repz
es
in
mov
(bad)
fsubr
add
pop
xchg
jl
push
les
stc
pop
and
neg
rol
mov
adc
push
jns
cmp
mov
inc
std
inc
pop
clc
or
or
adc
inc
push
cmp
cdq
jmp
int3
icebp
sar
ret
cs
fstp
enter
out
pop
es
mov
mov
pop
in
adc
mov
sbb
lds
aaa
jg
dec
jg
mov
sub
paddusb
mov
jg
cmp
push
shl
lahf
ds
xchg
call
test
cdq
jl
or
cs
cs
mov
scas
fcomi
mov
push
ins
sbb
sbb
imul
push
inc
fsub
or
xchg
pop
sub
arpl
retf
adc
jb
in
jecxz
ret
lahf
pop
xor
pop
retf
cwde
fbstp
js
cmps
adc
dec
bnd
cmps
dec
mov
imul
loop
pop
inc
jnp
out
call
pop
repnz
das
ins
scas
sub
dec
jle
outs
jne
jo
dec
retf
inc
mov
push
jbe
cmp
sub
mov
not
fisubr
xchg
cwde
(bad)
jp
pusha
into
lock
scas
outs
jno
jmp
cmp
leave
cs
fist
cmps
jae
icebp
inc
jae
xor
mov
push
call
adc
xor
jo
inc
xchg
pop
repnz
idiv
ins
jl
icebp
repz
xor
jle
loope
icebp
inc
hlt
lods
jo
gs
lock
test
sub
push
mov
and
inc
int3
fdivr
sbb
and
jo
add
push
lock
mov
add
icebp
mov
push
dec
mov
and
aaa
mov
call
inc
loope
push
push
push
addr16
data16
lods
add
add
and
fild
jnp
outs
fld
shr
retf
dec
ficomp
jnp
rcr
adc
cmp
jnp
jo
jnp
fisubr
out
jle
jecxz
mov
push
sbb
push
stos
lods
push
add
pop
and
lods
push
mov
mov
sbb
mov
out
dec
movsx
in
ja
out
into
idiv
jae
jnp
cmp
mov
jno
mov
add
sub
dec
aad
xchg
mov
sub
xchg
xchg
cmp
xor
inc
nop
sub
retf
sahf
and
test
add
xor
dec
xchg
xchg
(bad)
out
adc
shl
and
fwait
data16
jl
xchg
outs
out
out
mov
adc
push
adc
adc
fidiv
std
mov
out
bnd
adc
push
mov
shr
xor
and
and
mov
inc
je
js
pop
inc
cmp
mov
pop
pushf
push
and
loopne
lds
push
pop
mov
pop
je
jno
(bad)
in
lea
sub
ss
js
test
or
in
addr16
mov
call
add
sub
push
sub
mov
push
pop
inc
bound
stos
push
xchg
icebp
jp
xor
test
cmp
enter
call
aam
rol
ins
cmp
xchg
pushf
aaa
rol
push
adc
outs
retf
cmps
fst
jb
cld
loop
js
mov
aam
and
cmps
gs
sbb
pushf
mov
xchg
dec
push
test
dec
fwait
adc
cmp
ins
in
xchg
xor
mov
pop
in
mov
or
test
lea
xchg
mov
scas
outs
lock
lods
mov
jbe
lea
jge
fld
xor
mov
sbb
into
retf
leave
cdq
sub
cdq
inc
jbe
(bad)
ret
jnp
in
shl
fsubp
mov
sbb
push
push
push
dec
lods
mov
sub
mov
outs
or
ror
sub
push
adc
xor
mov
imul
mov
cmps
xlat
jno
out
jge
scas
mov
ins
dec
inc
imul
xchg
in
call
mov
mov
xchg
add
xlat
sbb
inc
rol
jecxz
ret
ret
fcom
pop
and
adc
dec
retf
pushf
xor
add
add
stos
aam
cmp
cmp
shr
dec
pop
sbb
daa
mov
xchg
cmp
xchg
imul
sub
(bad)
cmp
jmp
xchg
sti
int3
push
mov
out
hlt
loope
dec
loop
frstor
movs
dec
movs
mov
sar
adc
test
test
or
rol
mov
(bad)
sbb
inc
mov
sbb
int3
clc
loopne
mov
inc
add
ja
xchg
pushf
jo
idiv
jp
jecxz
xor
in
mov
jmp
push
sbb
into
mov
dec
sub
sub
mov
stos
sub
sub
cmps
jle
out
in
cmp
test
push
mov
mul
inc
dec
sub
xor
sub
xor
(bad)
dec
mov
shr
inc
push
pop
mov
mov
dec
sub
retf
mov
int3
cmp
xchg
push
or
pop
sbb
inc
mov
or
pushf
ficomp
dec
sub
dec
rcl
ss
cmp
mov
repz
cmc
push
mov
push
out
fidivr
jno
sbb
shl
pop
mov
fsub
cld
adc
cmps
in
(bad)
push
mov
mov
pushf
loopne
sar
cs
popf
xor
into
scas
jmp
and
pushf
pop
mov
imul
dec
push
jle
js
mov
mov
pop
clc
jle
mov
mov
data16
(bad)
push
mov
arpl
ss
scas
aam
rcr
push
push
lock
ins
stos
sbb
out
loope
xor
in
cmps
pop
lahf
cmp
inc
mov
pop
push
mov
push
and
cdq
out
mov
loop
cli
shl
xchg
xchg
mov
sub
jo
inc
test
stos
xchg
jnp
mov
jno
retf
(bad)
out
inc
mov
in
cmp
and
add
fldenv
pop
and
push
int3
ffree
mov
fwait
adc
pop
inc
and
loopne
ret
int
mov
cmc
jno
stos
mov
shl
das
mov
jmp
jbe
loop
push
jg
mov
out
imul
ins
fistp
jmp
adc
adc
dec
repz
mov
inc
mov
daa
and
idiv
dec
arpl
mov
and
fdiv
lock
fwait
rol
mov
mov
and
retf
(bad)
pop
push
xchg
adc
lahf
mov
push
in
mov
int
popa
mov
pop
xchg
popa
stos
mov
sbb
jmp
daa
dec
in
xchg
mov
adc
mov
fadd
shl
lods
jl
stc
inc
xchg
add
sbb
xor
xchg
cmp
cmp
xchg
js
and
sahf
jb
out
mov
lahf
cmp
movs
cmp
div
cmp
sub
sub
jae
nop
in
sub
out
ficomp
loopne
movs
imul
mov
sub
and
xchg
dec
enter
mov
mov
add
out
jae
mov
xchg
and
xor
pop
inc
pop
mov
sbb
je
inc
loope
adc
pop
push
push
inc
retf
jo
fs
scas
xchg
shl
out
and
mov
stc
fwait
in
fsubp
test
hlt
jno
lea
dec
mov
dec
cmps
xor
sbb
sti
push
out
loop
push
inc
mov
ins
or
lea
lahf
sub
mov
sbb
push
push
push
ss
dec
mov
and
mov
outs
inc
jmp
jbe
xor
mov
push
pushf
inc
enter
test
lods
rcr
mov
out
cli
(bad)
ins
fs
push
push
dec
rcl
and
mov
adc
mov
rcr
or
iret
test
test
retf
and
ret
add
mov
test
mov
mov
neg
repnz
leave
mov
push
je
pop
in
sub
xchg
lahf
call
lods
xchg
cdq
sar
imul
scas
jmp
bound
adc
out
mov
test
adc
mov
ret
ret
cmps
ins
test
inc
enter
dec
je
add
jg
xor
out
adc
int3
or
fist
push
mov
push
mov
mov
fist
dec
xor
test
or
ret
retf
arpl
mov
mov
pop
inc
pushf
or
inc
in
xchg
icebp
adc
sbb
and
cmp
clc
sbb
imul
and
or
mov
std
dec
sbb
fwait
push
scas
inc
sub
and
cmp
dec
mov
clc
mov
out
adc
sbb
xchg
lods
push
mov
mov
xchg
jle
and
dec
imul
xchg
shr
or
push
and
pop
outs
daa
jae
pop
not
xchg
pop
push
not
cmps
(bad)
fldenv
div
mov
push
in
cmc
xchg
fsubr
hlt
push
jbe
mov
xlat
jnp
fstp
retf
mov
hlt
into
sub
cmps
popf
fstp
jne
xchg
ins
inc
int
mov
cmp
jns
cs
jp
retf
push
leave
mov
imul
in
xor
lds
mov
fldcw
sbb
popa
inc
sbb
mov
xor
data16
mov
fwait
mov
and
call
in
sti
cli
in
push
inc
sti
mov
mov
xchg
fldcw
mov
test
cmp
xor
es
retf
sbb
cmp
cmps
es
into
mov
fisubr
in
mov
cmp
ror
dec
hlt
jp
addr16
fs
inc
and
lods
loope
sub
jle
push
cwde
cmp
jnp
enter
std
xchg
retf
ja
(bad)
out
fsubp
fwait
sar
ins
cmc
mov
sbb
std
pop
dec
mov
fisub
push
ficomp
data16
and
mov
mov
fnstcw
cli
mov
icebp
call
daa
dec
and
int
in
mov
out
inc
pushf
rol
mov
iret
add
fistp
push
push
inc
test
dec
clc
dec
(bad)
mov
adc
cmp
sbb
or
loope
add
push
adc
jne
or
adc
out
sub
or
std
hlt
inc
std
push
jge
jg
pop
push
xchg
xlat
inc
idiv
std
push
das
and
push
sub
inc
out
dec
fcomp
mov
jnp
fyl2x
xor
jmp
aas
push
loop
stos
pop
dec
or
xchg
dec
jecxz
es
adc
push
dec
jle
scas
iret
ret
imul
mov
jecxz
mov
or
out
jne
jnp
ja
aaa
aaa
ret
push
adc
fnstenv
jge
aas
mov
xlat
lods
in
dec
dec
imul
ffreep
mov
int
xchg
ins
in
push
xchg
pushf
mov
xchg
mov
pop
push
sahf
popa
arpl
ins
repz
inc
pop
dec
test
cmc
jbe
adc
jae
xor
push
fwait
shr
mov
cmp
jnp
mov
mul
xlat
dec
(bad)
mul
scas
xlat
dec
mov
in
pop
push
pusha
sub
jmp
dec
and
add
sub
outs
mov
push
push
cli
lods
cmp
out
xchg
add
out
jnp
push
pop
es
xlat
(bad)
mov
out
(bad)
cld
jge
in
xor
pusha
mov
mov
cmp
sti
fcom
pop
in
(bad)
pushf
dec
and
mov
cmp
sti
ds
sbb
jns
xchg
add
push
mov
fcomp
adc
push
fisubr
sbb
or
dec
jmp
sub
push
mov
mov
pop
shl
popa
xchg
mov
jne
int
cdq
sbb
retf
mov
add
(bad)
nop
dec
lods
cmps
mov
out
scas
in
and
sub
add
or
xchg
sbb
push
leave
mov
sbb
sahf
test
mov
xlat
inc
xchg
mov
cmp
xchg
std
stos
adc
es
push
scas
(bad)
jae
xchg
rcr
inc
(bad)
push
mov
out
pop
mov
sbb
cwde
in
shl
jg
jno
jecxz
rcr
aaa
sbb
int
call
test
shr
imul
cmp
cmp
mov
(bad)
inc
jp
shl
mov
push
push
lock
jmp
hlt
xor
xchg
call
clc
push
inc
sub
mov
xor
ja
fdiv
lds
inc
mov
mov
movs
out
dec
or
in
dec
test
and
pop
xor
test
jle
xor
fimul
adc
push
and
and
(bad)
jmp
or
or
xchg
imul
push
pushf
ret
bound
mov
pop
cmp
loopne
adc
mov
fbld
push
pop
loopne
mov
cmp
or
cmc
mov
push
push
sub
lock
mov
sti
sub
jmp
shl
xor
ja
xchg
or
(bad)
push
addr16
mov
into
loope
ss
repz
sub
in
fnsave
ss
jne
dec
les
(bad)
sbb
cmps
dec
imul
stos
pusha
mov
jecxz
xchg
or
repz
mov
pop
mov
aad
add
arpl
push
pushf
data16
leave
pop
enter
lock
xchg
je
ret
jmp
rol
xchg
rol
dec
stos
cmps
push
pop
jl
sbb
fisubr
push
inc
pop
icebp
cli
outs
inc
jl
xchg
sahf
push
lahf
sbb
es
iret
push
add
scas
rcr
mov
std
sub
push
mov
test
xchg
jl
sbb
pop
int3
or
mov
jb
cmp
dec
fnstenv
rcr
push
mov
xor
retf
pop
mov
test
das
mov
jne
inc
push
js
in
xchg
cmp
ror
mov
pop
int3
inc
call
xor
lahf
pop
cmp
gs
je
stc
mov
pop
dec
nop
adc
sub
cwde
in
jae
and
adc
rep
pop
(bad)
mov
scas
dec
cmps
mov
mov
stc
pop
sbb
pusha
push
mov
push
xor
test
aad
lods
or
(bad)
shl
in
out
pop
mov
push
and
stos
adc
inc
mov
dec
shl
adc
outs
and
test
sbb
push
adc
adc
and
dec
add
mov
outs
fs
sbb
in
jno
rol
mov
loope
cmp
push
aam
jecxz
clc
push
add
(bad)
ss
mov
mov
and
lea
and
push
mov
pop
add
ds
inc
pop
out
iret
mov
fisubr
pop
dec
scas
loope
aad
mov
xchg
movs
inc
mov
sub
ins
out
test
pop
das
or
mov
add
sar
or
jg
lods
into
dec
movs
mov
psubsw
cmp
retf
sub
cmps
or
inc
mov
out
js
inc
inc
int3
fst
mov
cld
mov
and
movs
std
std
add
ret
sub
sahf
nop
jbe
inc
aam
jae
ins
fild
and
and
cmp
sbb
mov
fldcw
outs
adc
call
sub
stc
fs
rcr
into
mov
out
pop
cmc
or
mov
add
dec
sub
retf
addr16
cmps
ja
outs
into
mov
lods
test
and
fcomp
jnp
sar
aam
push
leave
loope
call
mov
sub
sub
rol
test
sub
pop
jnp
mov
cmp
pop
jbe
aad
inc
mov
(bad)
out
pop
mov
jae
outs
dec
mov
mov
fisubr
cmp
xchg
mov
stos
(bad)
call
aaa
xchg
pop
outs
add
push
(bad)
mov
inc
mov
in
imul
fld
aam
xchg
xlat
sbb
cmps
adc
sub
loope
or
ins
xchg
cmp
ins
mov
adc
(bad)
pop
mov
xchg
xor
pop
adc
fimul
cmp
inc
lock
jge
xor
fmul
push
push
inc
cmp
in
xor
adc
push
ins
cwde
inc
retf
xlat
mov
mov
or
daa
outs
call
sub
xor
dec
into
cmp
jne
repz
mov
jbe
test
pop
cmp
scas
fs
pop
add
fmul
pushf
push
pop
repnz
(bad)
sub
arpl
adc
sbb
xchg
adc
ds
cmps
add
cmc
ins
adc
sti
sbb
adc
fild
inc
mov
aas
jnp
out
pop
jp
gs
mov
in
mov
xor
inc
cwde
pop
jbe
nop
out
cmp
jbe
pop
sub
js
mov
clc
stos
cmps
(bad)
imul
mov
xchg
fdiv
pop
shr
inc
stos
cld
iret
dec
in
lock
ja
push
pop
dec
mov
aaa
inc
movs
cmps
push
clc
lahf
out
outs
ss
bound
pop
in
xor
ror
nop
push
adc
(bad)
xchg
push
xchg
movs
mov
fstp
imul
cmps
pop
cmp
or
dec
cmps
dec
aam
or
pushf
lock
jge
mov
nop
sbb
mov
fcom
loop
sbb
xor
pushf
xor
mov
inc
bound
int
cmps
xor
cld
sub
xor
jp
fsubr
test
cmp
sub
adc
jg
mov
cld
mov
test
jae
daa
jbe
or
jle
sbb
rol
xlat
adc
scas
or
mov
pop
dec
push
das
nop
jbe
es
in
add
lods
out
cdq
shr
movs
push
and
xor
or
cmp
and
cs
push
push
sbb
imul
cmp
retf
das
jmp
leave
mov
adc
and
int3
xor
fucomp
jge
jmp
sbb
xor
push
add
push
(bad)
out
and
sub
addr16
mov
xchg
jle
adc
outs
adc
push
fs
ins
mov
xor
dec
aaa
push
adc
jb
cld
ja
mov
sbb
pushf
mov
push
mov
test
or
call
jp
jne
xor
ficom
inc
push
(bad)
sahf
stc
sub
push
push
loop
dec
clc
cdq
xor
dec
xor
jns
repnz
ins
call
inc
in
push
ret
ins
pop
push
data16
sbb
lock
mov
lods
push
add
sbb
inc
pop
or
push
or
jns
retf
sbb
aad
in
push
push
into
xor
imul
mov
inc
mov
in
inc
js
cmp
add
or
jmp
push
sub
mov
push
sub
cli
clc
sub
sbb
add
jle
dec
sbb
mul
and
hlt
mov
jnp
pop
push
add
outs
and
mov
fimul
fidivr
ins
call
mov
cmp
aam
lock
push
mov
cmp
cwde
mov
jp
jp
lds
sbb
xchg
cli
push
pop
push
sar
or
aam
inc
mov
pushw
mov
ja
add
int3
icebp
cmps
mov
push
retf
xchg
mov
shl
mov
mov
xchg
jg
(bad)
int3
movs
stos
cmps
test
in
push
mov
mov
dec
imul
sbb
ret
push
call
mov
mov
clc
add
pop
clc
xor
sbb
loope
fimul
mov
mov
pop
dec
in
inc
sub
in
pop
xchg
mov
jmp
cli
adc
xchg
jnp
cmp
out
mov
hlt
push
mov
test
jle
dec
jno
ret
push
sub
sbb
stos
jl
jae
aas
pop
add
mov
inc
jnp
xor
rcl
and
pop
fisub
jmp
mov
ja
mov
out
cmc
leave
inc
push
cmc
xchg
fadd
lds
addr16
repnz
adc
add
pop
jae
pop
mov
aas
neg
pop
cmp
mov
jg
in
pop
jb
or
scas
push
inc
and
jmp
inc
cld
ret
adc
adc
push
push
cwde
add
or
jmp
dec
jp
sbb
arpl
lea
xor
mov
push
out
inc
jb
fistp
out
data16
pop
mov
sbb
cmc
ficomp
shr
in
sbb
ret
xchg
xor
std
pop
mov
mov
hlt
aam
xchg
pop
arpl
cmp
ret
mul
fistp
dec
add
fld
fsubr
and
and
push
shr
xchg
adc
jbe
retf
push
xchg
mov
lock
jo
xchg
ds
push
cmps
pop
mov
sub
sub
cmps
or
cmp
bnd
cdq
add
mov
ins
scas
and
je
cld
jbe
in
xor
cmps
adc
adc
xor
repz
xor
pushf
fisttp
and
cmp
mov
xchg
xchg
mov
xchg
push
xor
push
push
mov
cld
mov
mov
xchg
adc
cmc
lahf
inc
dec
arpl
fcom
ret
(bad)
push
mov
lds
mov
into
pop
call
in
pop
test
nop
(bad)
push
jnp
jbe
fidivr
lods
sub
in
(bad)
mov
dec
cmp
ret
or
adc
mov
mov
js
xchg
jno
(bad)
mov
add
pusha
repz
sahf
mov
mov
sbb
adc
mov
or
pop
dec
and
pop
outs
retf
xor
and
stos
nop
aam
mov
sbb
jecxz
scas
cmp
lods
jle
inc
mov
mov
jge
das
cmp
mov
mov
stos
inc
jnp
mov
sti
movs
jnp
mov
xchg
stos
or
and
push
adc
mov
push
pop
dec
xchg
aaa
jg
adc
outs
jmp
cmps
jecxz
push
mov
movs
loope
loope
daa
mov
outs
aam
imul
js
mov
aam
sti
cdq
out
xor
outs
shl
dec
mov
in
push
cmps
mov
push
mov
pop
xor
adc
mov
sbb
xor
in
inc
loop
sub
xchg
or
outs
xchg
adc
and
or
jnp
pop
lods
mov
xchg
sub
scas
inc
movs
push
push
lds
(bad)
xchg
push
adc
neg
fdiv
mov
push
pop
sbb
outs
adc
outs
mov
sub
push
push
cmp
mov
rol
outs
lahf
pop
mov
jmp
pop
jmp
out
movs
jg
lods
mov
adc
cmp
jbe
cmp
fs
push
push
push
(bad)
xor
(bad)
or
in
mov
ret
and
(bad)
fidivr
mov
sbb
neg
sahf
fimul
cld
mov
movs
jnp
push
adc
xchg
or
sub
pop
scas
movs
cmp
cld
lea
xor
and
xor
cmp
lahf
test
or
ss
mov
ins
xchg
xchg
xchg
xchg
das
jae
mov
cmp
xor
dec
popa
mov
ds
in
(bad)
ins
sbb
adc
mov
sub
in
inc
stc
call
into
mov
push
xchg
cmp
(bad)
sahf
sbb
outs
inc
test
fisubr
loope
push
loopne
xchg
mov
je
int3
aad
sti
mov
xchg
sub
cmps
jmp
loope
inc
cwde
mov
jb
push
xor
mov
add
movs
xchg
cwde
std
pushf
rcl
jp
sar
fnsave
cmp
ja
mov
adc
addr16
push
loopne
test
mov
ins
pop
adc
imul
xchg
shl
jg
mov
mov
cmp
push
add
(bad)
xor
inc
or
sub
icebp
add
iret
or
jmp
out
xchg
mov
jb
sub
mov
pop
sti
out
lea
movs
mov
repz
jnp
out
xor
test
imul
push
adc
pop
jecxz
mov
mov
test
pop
fild
xchg
loopne
cwde
adc
scas
loopne
call
push
test
ffree
mov
mov
lds
and
push
mov
xor
dec
nop
movs
or
movs
xor
lods
xchg
pusha
gs
or
mov
test
pop
stc
xchg
add
inc
jg
ins
mov
dec
clc
rcl
ret
ret
cdq
ret
in
adc
mov
pop
repnz
sti
xchg
xchg
popa
push
rol
xor
popa
xor
jle
adc
pop
dec
retf
cwde
dec
or
dec
dec
idiv
jp
jmp
addr16
retf
and
pop
add
add
dec
(bad)
mov
pop
push
jnp
mov
or
add
inc
out
push
mov
movs
push
adc
cmp
and
cmp
stos
adc
adc
stos
stos
int3
in
sbb
and
jl
jno
lahf
sbb
ficomp
outs
imul
mov
dec
in
cmp
jns
jl
int3
int
iret
or
or
or
and
addr16
inc
and
push
mov
sbb
xlat
mov
out
arpl
punpcklwd
mov
stc
and
or
fs
cmp
push
call
mov
xchg
les
xor
das
or
adc
ret
movs
jg
sub
clc
adc
into
stc
movs
lods
jp
mov
xchg
icebp
es
dec
inc
out
dec
fisttp
aam
xor
sub
inc
outs
and
sti
ins
sub
sub
jmp
cwde
fisubr
mov
mov
pop
pop
test
rcr
dec
jmp
sub
ret
push
jl
and
mov
mov
mov
sar
pop
sti
mov
rcl
test
ins
les
xchg
pop
jb
xchg
es
mov
stc
sub
pop
mov
xor
arpl
add
jmp
adc
add
js
in
pop
jo
sbb
popf
test
retf
test
data16
sbb
out
mov
adc
cmp
jne
out
addr16
shl
xchg
iret
push
lods
test
cmp
sbb
xlat
dec
pop
aam
xor
ins
jb
mov
mov
fidiv
cwde
dec
addr16
pop
pop
iret
dec
push
repnz
add
xor
mov
repz
cwde
jle
sbb
xor
mov
icebp
adc
jne
out
out
dec
mov
fwait
pop
ds
leave
shl
push
rol
das
(bad)
fnstenv
xchg
test
loopne
leave
or
dec
mul
inc
outs
ror
jae
dec
xlat
sub
xchg
outs
add
mov
aad
jne
cmp
ds
push
mov
pushf
xor
cwde
mov
repnz
xchg
mov
int
mov
test
rcr
cdq
dec
and
mov
ins
repz
xor
pop
mov
je
fiadd
mov
clc
call
in
jg
int
inc
mov
xchg
outs
mov
jns
in
lods
push
out
aaa
fistp
xor
lods
mov
rcl
movs
adc
sub
dec
push
sub
jb
pop
mov
cmp
or
sbb
int
cwde
ins
jnp
cmp
xor
stos
mov
(bad)
movs
imul
loop
out
in
iret
aam
xchg
xchg
sahf
inc
inc
jl
xchg
aad
mov
sub
or
cs
emms
lods
pop
lahf
push
xchg
add
ret
cmc
aam
jge
std
mov
out
into
or
or
retf
sub
sbb
adc
xor
idiv
pushf
test
sub
mov
inc
sbb
xor
loopne
jnp
int3
cmc
mov
mov
jno
or
cld
cwde
adc
dec
push
push
fnstsw
push
arpl
push
add
lahf
inc
and
add
adc
xor
ss
test
es
in
sub
pop
test
add
xor
or
dec
and
or
or
push
cli
mov
not
mov
sahf
push
add
enter
rcr
xlat
stos
cs
sub
js
cmp
cwde
xchg
pushf
ds
push
cs
adc
push
mov
and
mov
inc
inc
outs
xor
jg
aam
and
jle
pushf
mov
adc
sbb
xchg
adc
inc
xor
daa
lds
and
stos
fwait
test
in
adc
daa
out
sub
and
push
leave
lea
pop
ret
cli
movs
aaa
lahf
popa
pop
cmp
das
fnstsw
push
pop
sbb
imul
in
mov
shr
inc
adc
scas
push
movs
ss
pusha
std
popf
push
out
vmwrite
mov
pop
mov
adc
cld
das
mov
mov
pop
jecxz
dec
jb
inc
enter
mov
dec
sub
lods
mov
cmp
push
and
fwait
push
fmulp
jle
pop
pusha
lock
call
inc
mov
lds
ins
jne
cmp
cmp
leave
fnstsw
mov
sar
int
dec
icebp
addr16
jnp
lods
not
icebp
inc
enter
gs
je
imul
and
jbe
jo
(bad)
loope
int
iret
mov
mov
inc
adc
xchg
outs
cmp
adc
shl
retf
pop
mov
mov
mov
cmps
mov
push
test
pop
aaa
dec
inc
push
fcomp
cdq
in
cmp
cmps
push
sub
jne
jno
push
out
loopne
dec
dec
shl
out
sub
daa
xchg
adc
leave
out
jne
or
hlt
dec
mov
jmp
addr16
and
stos
xor
jno
outs
popf
or
stos
xor
fistp
(bad)
push
and
mov
lds
cmp
mov
les
les
iret
xor
cmp
dec
rcl
popf
mov
iret
and
cmps
fsub
add
hlt
stc
(bad)
int
mov
cld
jge
inc
mov
(bad)
pop
cmps
push
repnz
les
daa
stos
out
scas
in
cmps
pop
add
lods
repnz
cs
mov
jmp
mov
movs
adc
lahf
stos
pop
adc
repz
(bad)
jg
sahf
push
mov
mov
cmc
ror
sub
fwait
lods
out
loope
out
push
test
gs
pop
sub
jmp
and
mov
test
sbb
mov
ins
scas
jecxz
bound
pop
push
xor
jle
mov
fist
movs
xor
sbb
mov
jo
fs
outs
fldenv
jne
and
xor
and
or
arpl
push
cmp
mov
mov
aas
das
adc
inc
mov
mov
stos
push
int
ins
outs
mov
(bad)
inc
adc
iret
add
adc
out
mov
shr
cmp
jecxz
dec
bnd
jns
xchg
mov
jns
ror
sbb
(bad)
dec
xor
mov
pop
sbb
xchg
(bad)
imul
pop
sub
xor
jmp
push
jo
in
mov
and
mov
mov
ror
cmp
pop
(bad)
adc
in
call
cmps
lahf
call
cwde
push
push
nop
dec
iret
in
(bad)
fidiv
in
in
sbb
dec
jno
call
aad
mov
jg
retf
vcvtpd2dq
js
adc
ss
jp
xchg
fnstcw
shr
jl
std
mov
push
pusha
jnp
sub
jecxz
mov
jmp
jo
push
inc
push
mov
inc
jnp
pop
mov
dec
inc
mov
aaa
xchg
sbb
das
leave
nop
push
jns
adc
mov
repz
adc
ret
xor
jge
cli
movs
and
or
addr16
mov
and
dec
sub
pushf
lods
jb
dec
aam
add
(bad)
sub
jbe
cdq
loope
mov
popa
icebp
idiv
jecxz
pop
fisubr
repz
call
arpl
pop
stos
data16
jb
out
dec
mov
ja
nop
inc
ins
sbb
mov
int
push
or
fucomp
adc
aad
ja
movs
stos
jne
inc
and
xor
int3
and
sbb
iret
not
cmp
jp
xchg
push
jmp
(bad)
mov
push
inc
arpl
popa
adc
adc
into
test
xor
add
jg
outs
cld
dec
mov
lock
dec
sahf
fiadd
aad
pop
icebp
pop
pop
shl
pop
mov
sar
jne
cli
inc
aam
mov
cli
xor
sar
cmc
sbb
mov
inc
(bad)
inc
pop
dec
or
xor
retf
mov
adc
xchg
jo
in
fstp
loope
lahf
or
xor
je
mov
mov
fcomp
mov
jle
mov
or
ror
(bad)
xchg
inc
(bad)
pop
test
pop
pop
jecxz
inc
cmp
sub
xchg
lds
stc
sbb
in
jnp
inc
arpl
out
sar
jp
nop
aam
ins
lods
iret
push
fisttp
neg
and
mov
push
mov
loopne
inc
lahf
cmp
jmp
inc
adc
(bad)
pop
stc
imul
jmp
popa
dec
mov
lahf
jmp
arpl
pop
jp
push
test
aad
push
sbb
xchg
movs
outs
out
int
hlt
mov
hlt
and
int
mov
loop
push
push
or
pop
sbb
lds
sti
loop
inc
adc
enter
dec
jmp
fsubp
jne
in
cld
dec
mov
adc
xor
pop
gs
shl
xchg
or
or
shl
adc
push
adc
push
inc
jp
hlt
push
inc
jmp
dec
pop
adc
push
sahf
cmp
arpl
sahf
add
push
push
lods
pop
arpl
cmp
(bad)
stc
clc
xchg
mov
or
mov
(bad)
xor
ror
jecxz
mov
stos
push
(bad)
jo
das
cwde
mov
fbstp
mov
ja
repnz
pop
sub
arpl
lods
into
jg
dec
inc
add
stos
jno
sahf
jl
loopne
and
push
dec
xchg
sbb
ss
and
aam
cdq
shl
sahf
(bad)
sbb
cwde
lods
sbb
retf
sbb
loope
xchg
xor
loop
out
fstp
xlat
dec
ret
jae
(bad)
cwde
pop
xchg
repnz
aas
retf
pusha
nop
mov
adc
fsub
adc
mov
js
xchg
sbb
mov
out
cmps
hlt
addr16
das
mov
das
sbb
mov
je
test
sub
or
dec
cmp
xchg
ror
push
rcl
cwde
fisubr
xchg
xchg
pop
mov
in
fstp
mov
pop
dec
sub
mov
xor
or
dec
test
sub
jmp
ins
into
ja
test
mov
jno
cmps
add
push
sub
imul
push
sbb
jb
push
into
and
push
jo
outs
jmp
dec
das
lea
push
shl
adc
jg
push
cld
test
addr16
mov
stc
xchg
(bad)
mov
adc
pop
lea
es
and
mov
(bad)
fcom
mov
test
fdivr
mov
sbb
sbb
fidivr
jnp
test
xchg
jnp
jmp
ret
push
push
push
outs
icebp
retf
mov
fcmovu
dec
push
rcl
stos
xchg
stos
imul
lods
call
sbb
lock
jb
push
fs
dec
jo
test
cmps
xor
cmp
test
sub
dec
adc
je
nop
jns
push
and
pop
movs
jmp
sbb
and
xor
mov
pop
outs
in
cli
pop
pop
mov
push
pop
cdq
hlt
leave
push
sub
inc
neg
inc
push
(bad)
mov
je
sbb
les
jmp
out
or
cmps
es
add
out
push
mov
call
sbb
pop
pusha
call
dec
dec
push
leave
aaa
icebp
daa
dec
jl
mov
shl
bound
push
add
cmps
movs
in
imul
dec
mov
ror
mov
addr16
mov
jo
shr
sbb
and
adc
enter
mov
or
test
loopne
shr
jmp
dec
cld
mov
icebp
sub
cmp
repz
retf
or
xchg
cmp
std
mov
shl
xchg
cmp
daa
mov
mov
push
ins
daa
clc
and
pop
mov
cs
pop
sub
jmp
adc
out
imul
add
retf
leave
mov
movs
xor
dec
repnz
push
shl
ins
jmp
cmp
repz
jg
cmc
mov
hlt
sbb
retf
mov
addr16
push
push
stos
sbb
sub
cli
jnp
xor
or
fadd
fmul
mov
mov
pop
repz
push
pop
sar
pop
cwde
push
movs
sbb
xchg
test
jnp
cdq
add
(bad)
jge
xchg
mov
fdivp
and
cmps
push
jae
pop
hlt
shr
add
jbe
mov
mov
std
ja
jns
adc
xchg
fsubr
cmc
cmp
ror
outs
in
ins
test
xor
adc
mov
psrlw
aam
fld
xchg
adc
and
add
ret
call
fs
push
and
aad
jle
cmp
and
mov
aam
je
rol
movs
sti
or
add
lock
adc
dec
adc
iret
adc
repnz
mov
xchg
xchg
inc
xor
rcl
jb
jns
pop
mov
(bad)
xchg
loop
pop
ss
mov
aaa
(bad)
sub
into
pusha
jne
mov
sub
idiv
inc
jmp
xchg
xor
ficomp
sub
dec
jg
(bad)
pop
xchg
addr16
lock
arpl
mov
call
or
fstp
and
movs
aad
aas
mov
push
jle
push
repnz
shl
or
mov
push
les
xchg
(bad)
cli
dec
outs
sahf
scas
fadd
dec
inc
icebp
jmp
jl
inc
mov
push
retf
mov
mov
pop
scas
mov
push
pushf
xchg
xchg
cmp
dec
mov
sub
test
inc
aam
mov
sti
leave
rcl
add
popf
hlt
jnp
test
fcom
(bad)
sub
aam
jecxz
out
icebp
jbe
in
cmc
pop
jecxz
out
pop
ret
sbb
xor
cwde
pop
fadd
pop
or
sti
sbb
scas
shr
mov
mov
jne
or
add
cmp
je
cmp
sbb
push
sbb
push
or
ret
add
push
repz
faddp
stc
out
adc
mov
jns
xchg
push
and
jecxz
xchg
icebp
push
mov
jmp
sahf
data16
ja
xor
fimul
xchg
or
ins
scas
mov
sub
fisttp
call
inc
cmp
(bad)
push
jl
fwait
loope
cmps
movs
adc
cmp
jl
xor
mov
test
adc
adc
sbb
adc
(bad)
div
aas
fcomp
bound
ficom
sahf
(bad)
rcl
fcomip
mov
pop
lea
xchg
adc
jge
(bad)
cli
ins
enter
cdq
js
add
aas
sbb
xchg
or
retf
inc
test
outs
mov
nop
dec
xchg
cmp
clc
fwait
cmp
sub
xchg
mov
stos
hlt
retf
inc
in
nop
mov
and
mov
mov
mov
jno
sbb
cs
fidivr
scas
mov
fld
inc
add
sar
shl
adc
mov
in
idiv
loop
test
aad
cmp
cmp
adc
outs
push
push
jns
xchg
inc
jbe
ja
mov
iret
in
push
(bad)
sahf
pop
sub
or
les
add
aas
pop
mul
xchg
stos
hlt
in
cmp
sar
dec
xlat
or
jge
dec
div
test
popf
jb
jns
and
in
push
or
retf
xor
jmp
das
push
mov
(bad)
rcl
and
outs
rol
in
loop
pushf
test
dec
fisttp
imul
jns
inc
loopne
pop
pop
jl
dec
mov
jge
(bad)
adc
jns
ret
mov
in
ja
mov
xchg
les
pop
cli
dec
cmp
add
cmps
loope
cld
ins
and
pop
xchg
mov
ins
or
sub
outs
fwait
add
int3
and
cmp
mov
sub
xlat
rcr
xchg
gs
sub
(bad)
cmc
loop
dec
js
adc
iret
adc
sub
movs
(bad)
rcr
adc
sbb
adc
xchg
dec
shl
clc
loopne
cmc
sub
dec
jecxz
ss
repnz
push
add
dec
or
adc
fimul
inc
stc
outs
inc
xchg
imul
and
inc
aad
jno
mov
sub
scas
sub
push
sti
push
sbb
jp
pusha
jno
push
dec
cmp
popa
ror
mov
lea
int
jmp
fwait
call
ss
mov
cli
(bad)
xor
jmp
popa
jecxz
pop
push
les
push
xchg
mov
xlat
pop
cmp
test
(bad)
test
shr
jecxz
mov
xor
mov
in
inc
(bad)
mov
cmp
sub
cmp
adc
pop
rcl
cmp
jp
rcr
icebp
sahf
pop
xor
mov
sbb
in
dec
popa
aad
aam
sub
retf
retf
mov
popa
es
jl
or
mov
arpl
es
ins
lods
ror
push
and
jmp
hlt
add
psrlw
into
nop
aaa
xor
pop
out
dec
sub
push
ss
adc
pop
adc
lea
scas
push
fist
bound
jo
mov
cwde
push
push
push
loopne
sahf
sbb
mov
sub
fnstsw
movs
(bad)
lods
enter
enter
adc
pop
and
popf
or
popf
mov
dec
cmp
mov
dec
and
cmp
repz
xor
push
stos
cmp
or
mov
outs
mov
mov
call
inc
cmps
xor
jp
sub
sub
inc
outs
and
cmp
adc
sub
or
jge
jle
sti
sar
jbe
add
jg
aas
add
repz
jmp
adc
jae
inc
dec
fsubr
mov
pushf
mov
mov
jp
cld
shl
xchg
add
int3
pop
outs
int
scas
or
xor
lods
in
xchg
xor
stc
push
iret
das
push
add
mov
clc
es
adc
outs
dec
ins
jp
scas
sbb
test
dec
mov
outs
mov
enter
mov
test
inc
repz
sub
(bad)
cmps
push
and
add
push
inc
(bad)
xor
lea
repz
ja
sbb
stos
and
add
mov
movs
inc
mov
dec
ret
mov
push
stos
sbb
pushf
xor
ret
je
jmp
and
outs
fnsave
shl
jb
jno
sub
pushf
fmul
inc
pop
aaa
or
imul
sub
ins
jnp
mov
jl
paddd
sub
mov
mov
dec
mov
sub
jmp
cmp
add
ja
add
loop
scas
mov
and
jne
push
out
mov
jmp
imul
cmp
stos
push
pop
popf
xchg
retf
adc
adc
aad
aam
cs
aas
lods
mov
icebp
cli
and
cdq
outs
xchg
cmp
jmp
mov
dec
adc
iret
sub
movs
iret
jp
bound
push
(bad)
fcom
inc
scas
add
mov
dec
fisttp
push
jns
cdq
or
test
loop
push
aam
out
xchg
mov
xchg
pop
aam
jne
mov
push
add
repz
adc
enter
mov
mov
(bad)
popa
xchg
and
add
pop
and
arpl
jne
inc
mov
cmp
call
or
sar
adc
adc
sbb
nop
(bad)
cmps
sbb
clc
(bad)
out
fisub
xchg
add
out
adc
sbb
lea
inc
pop
dec
in
out
push
test
clc
adc
repnz
xor
ret
not
test
mov
pushf
loope
imul
idiv
jle
cmp
mov
cmp
sbb
adc
std
pop
pop
pop
aam
movs
cld
aas
inc
scas
call
sbb
enter
mov
add
cmps
jmp
cmps
xchg
dec
jnp
je
dec
mov
daa
push
push
mov
out
clc
cmps
loopne
cmp
stc
scas
inc
dec
dec
mov
cmps
(bad)
mov
je
mov
mov
sub
mov
std
mov
mov
clc
fisttp
in
outs
cmps
jbe
test
sub
(bad)
sub
retf
xor
je
adc
jae
jns
cli
dec
push
(bad)
retf
push
je
pop
shl
jne
adc
xchg
adc
fisttp
daa
push
xor
sbb
xchg
div
stos
ror
cmp
and
bound
js
mov
jmp
add
add
ret
stos
loopne
sub
lock
cmc
inc
cmp
dec
sbb
xchg
cmp
xor
call
and
rol
(bad)
mov
jle
aas
adc
je
pop
jns
into
xchg
popa
jbe
loopne
out
xor
pop
push
mov
mov
mov
mov
jo
ror
pop
sub
fist
movs
ja
mov
dec
outs
lods
lods
mov
pop
xchg
(bad)
ins
fnstcw
bnd
adc
push
dec
loope
data16
shl
fldenv
cdq
sub
shl
mov
or
mov
aam
or
jae
xlat
push
adc
aad
imul
in
dec
lds
and
(bad)
fsub
stc
(bad)
div
xchg
sti
xlat
jg
pushfw
test
jle
je
and
and
sub
std
mov
test
(bad)
cwde
fwait
je
loop
adc
adc
sbb
(bad)
xor
cmp
cmp
fidiv
jl
pop
(bad)
dec
aad
stos
xchg
repnz
jmp
pop
jnp
imul
daa
and
xor
imul
inc
out
sub
dec
mov
and
dec
xor
adc
xchg
dec
sbb
(bad)
push
lock
lods
lds
sbb
test
loopne
dec
ret
aaa
je
call
pusha
in
dec
push
iret
repz
fs
das
fld
out
jmp
cmps
jno
test
cli
and
sbb
ret
xchg
push
pusha
ins
ins
or
stos
jbe
dec
ins
inc
jle
arpl
popa
push
inc
pusha
pushf
icebp
sub
into
stos
lods
outs
inc
rcl
jne
adc
add
jl
mov
sbb
enter
dec
jne
mov
adc
scas
adc
sbb
jmp
stc
mov
sub
add
lods
test
dec
adc
push
pop
sbb
and
loope
push
ret
push
aaa
pop
pop
or
daa
dec
pop
mov
mov
mov
jae
push
sahf
rcr
jle
dec
xchg
ret
(bad)
retf
pop
adc
div
xchg
scas
ja
ror
dec
ja
mov
jmp
adc
in
loope
dec
stos
xchg
xchg
in
std
push
and
rol
cmp
cwde
not
jnp
mov
les
sub
int
or
aam
adc
xchg
ret
jmp
sbb
or
fdivr
dec
dec
jae
fucomip
fst
iret
imul
daa
or
out
add
adc
mov
fdiv
loop
in
fcmovnb
fisttp
mov
mov
arpl
jnp
lock
jge
pop
push
in
sbb
(bad)
jmp
sbb
arpl
add
and
sub
jo
xlat
inc
and
pushf
xchg
les
mov
ss
adc
pop
les
out
ins
jecxz
popa
retf
fidiv
sbb
xchg
das
or
and
mov
pusha
test
jle
xor
ret
inc
cmps
sub
fiadd
test
add
mov
xor
fwait
jnp
out
xchg
mov
ja
ror
leave
jbe
dec
add
xor
cmps
jnp
xrelease
dec
bound
jecxz
jle
xlat
xchg
sub
ret
repnz
xor
xchg
sar
jno
test
out
loope
pop
and
mov
mov
or
nop
lahf
dec
push
into
adc
add
ss
xchg
add
pop
mov
mov
loope
mov
mov
std
xor
mov
push
xchg
sahf
daa
or
and
(bad)
adc
out
push
cmps
fisttp
sahf
cwde
xchg
mov
and
sti
(bad)
xchg
imul
and
push
scas
push
call
mov
push
push
inc
scas
dec
xchg
das
test
out
clc
cld
mov
popf
mov
mov
pop
fdivr
loope
iret
add
in
dec
jl
push
xchg
pusha
add
into
dec
test
xlat
imul
dec
sub
mov
xchg
mov
daa
mov
loop
fadd
and
inc
cli
mov
data16
mov
push
stos
shr
sahf
nop
push
add
jnp
imul
adc
out
outs
mov
cmps
pop
cdq
and
jmp
jmp
pop
movs
mov
xor
xchg
adc
shl
jp
xlat
add
push
xchg
mov
and
push
or
mov
movs
repz
in
(bad)
and
inc
adc
movs
add
xor
into
dec
xor
cmp
(bad)
scas
xor
out
xadd
ins
imul
lahf
jnp
ds
pop
int
dec
ins
popa
loop
dec
std
pop
lea
out
cli
neg
or
addr16
cld
jl
mov
pop
jecxz
lods
push
add
pop
ret
test
stos
jmp
cdq
je
lock
xchg
(bad)
pop
sbb
lahf
(bad)
in
movs
sub
adc
outs
cmps
rep
push
sbb
adc
mov
jae
loope
popf
cmp
pop
fldenv
xlat
nop
add
push
push
not
xor
jnp
in
jmp
jae
fild
jecxz
mov
into
ret
add
shl
into
lock
jns
shr
push
repnz
xor
popf
fcmovnb
fs
cwde
mov
jns
mov
enter
(bad)
cdq
xor
push
movs
push
stc
add
cmps
pop
sub
out
std
mov
mov
adc
outs
mov
mov
out
sbb
mov
fwait
xor
fcom
mov
mov
cmp
mov
push
cdq
inc
dec
pusha
enter
xor
cmp
xor
gs
or
in
dec
pop
sub
pushf
push
arpl
dec
xor
jns
sub
iret
ds
aam
test
add
xor
push
mov
cdq
mov
int
loop
cdq
ficomp
cmp
cmps
sub
and
dec
in
rcr
adc
mov
out
scas
sub
jb
cmp
out
mov
sbb
dec
jg
(bad)
fcom
les
and
push
and
xchg
push
test
pop
in
outs
cwde
(bad)
mov
inc
sub
ret
jp
aaa
loop
mov
loopne
out
pop
pop
es
into
sub
popa
pop
mov
xchg
les
and
pop
xor
push
fld
push
mov
fidiv
xchg
imul
repnz
xor
and
movs
mov
sub
ret
jmp
call
stos
xchg
xchg
sub
sub
jne
or
cwde
push
xchg
movs
xchg
shl
inc
adc
push
push
data16
push
xchg
mov
mov
fcom
mov
pop
daa
enter
and
out
mov
mov
or
dec
gs
mov
test
adc
es
jb
push
aam
shl
sbb
loopne
mov
lock
ins
rol
dec
out
push
fld
scas
jb
call
xchg
push
nop
test
cmp
sbb
es
push
test
movs
xchg
out
dec
call
outs
test
xchg
or
sub
inc
js
mov
adc
hlt
jo
popf
outs
dec
ins
mov
inc
jle
fstp
jecxz
sti
arpl
ror
adc
cmp
call
adc
or
dec
or
ins
out
into
retf
mov
mov
repz
push
adc
pop
aam
or
inc
push
adc
add
xlat
hlt
push
leave
or
loop
cmp
adc
push
jmp
shl
fmul
leave
and
test
iret
repz
add
imul
pop
cli
push
and
push
lock
mov
out
pop
inc
shl
mov
pop
nop
xchg
shl
rcr
push
sbb
pop
jp
or
mov
mov
inc
and
or
into
cmp
loopne
cmp
ret
pop
retf
dec
sti
lods
adc
and
fcom
sub
sti
mov
sbb
xchg
mov
(bad)
mov
mov
cmp
mov
mov
or
mov
neg
les
and
jl
rcr
cmp
ret
das
pop
sbb
inc
(bad)
sbb
out
xchg
daa
dec
cmps
retf
daa
(bad)
loope
push
int3
scas
jp
jo
xchg
or
std
aad
movs
cmp
out
mov
mov
jb
into
outs
lahf
xchg
mov
or
and
mov
je
sbb
cmps
sub
mov
mov
fisub
and
sub
cmp
mov
shl
sub
rcr
jo
test
mov
xchg
inc
pop
fs
cmp
imul
fsubrp
cmp
sahf
xchg
bound
add
mov
in
fld
or
mov
sbb
push
cmc
ds
pop
stos
loop
inc
aaa
mov
mov
cmp
mov
(bad)
sti
aas
pop
dec
mov
retf
call
stos
xlat
xchg
dec
sub
and
mul
add
jmp
lods
xor
arpl
call
js
sbb
xor
repz
inc
clc
fdiv
cwde
lods
aas
cmp
cmp
in
cs
outs
inc
dec
xchg
mov
dec
cs
mov
push
push
mov
enter
cld
es
add
jp
jp
xchg
js
xchg
pop
ds
dec
aad
jmp
or
and
lods
icebp
jne
xchg
mov
int
out
xchg
(bad)
pop
add
sar
adc
pop
sub
lea
in
cs
movs
clc
(bad)
jmp
cwde
int3
and
sysenter
xchg
cmp
inc
outs
mov
jmp
scas
mov
gs
fcom
pusha
inc
test
cdq
rcl
pop
inc
jecxz
cmps
push
xchg
sbb
inc
pushf
lahf
(bad)
jmp
inc
xor
inc
xor
arpl
stos
cdq
stc
inc
es
dec
es
mov
loope
jp
ins
and
xchg
xchg
mov
sub
cmc
aam
retf
mov
mov
xor
adc
adc
xor
ds
pop
sub
inc
dec
(bad)
repz
mov
bound
adc
mov
push
pop
mov
push
lea
ror
inc
dec
cmp
or
push
sub
(bad)
ret
xor
fidivr
dec
sbb
std
out
shr
clc
jl
fwait
and
(bad)
repnz
mov
div
rcl
or
and
adc
and
sbb
dec
pop
mov
xchg
mov
dec
aad
mov
in
and
mov
loop
test
aas
leave
pop
psubq
sub
mov
jno
inc
dec
pop
pop
fisubr
cmps
xchg
pop
aad
test
dec
test
das
icebp
add
cmps
sub
mov
(bad)
test
inc
mov
sbb
push
and
push
fstp
mov
jl
mov
or
inc
xchg
jb
xor
es
or
pushf
xchg
pop
(bad)
or
xor
pop
ja
cmp
xchg
pop
scas
xchg
pop
jb
pop
or
sbb
(bad)
cmp
jne
sub
mov
mov
data16
mov
inc
hlt
sub
xchg
cmps
stc
popa
push
dec
sub
jle
xchg
jmp
into
ficomp
stc
pop
xchg
jl
dec
push
sbb
xor
push
mov
ret
dec
leave
mov
into
dec
sbb
mov
push
and
jge
cmp
retf
pop
jo
add
dec
jle
jae
(bad)
xor
sub
cmc
add
cld
neg
div
jmp
fwait
rol
or
outs
pop
jnp
or
or
pop
jae
cmp
mov
ja
bts
mov
sub
in
shr
pop
dec
jnp
dec
or
or
dec
mov
stos
call
sub
xchg
and
in
mov
add
sbb
ds
jl
adc
pop
mov
pop
les
mov
pop
dec
movs
adc
call
or
repz
mov
dec
dec
adc
push
stc
xor
loopne
pusha
aam
mov
cmp
pushw
or
push
inc
fwait
xor
dec
sbb
xchg
adc
pop
imul
mov
dec
push
push
retf
push
sbb
xor
sub
stos
(bad)
int
mul
mov
daa
push
inc
adc
ret
xchg
les
fild
sbb
sbb
test
jno
lds
pop
lahf
lods
je
dec
push
out
sub
cdq
je
jne
lahf
dec
cdq
xchg
in
jae
arpl
xchg
pcmpeqb
aas
(bad)
ins
call
pushf
mov
push
test
mov
adc
and
dec
push
adc
popa
dec
std
(bad)
dec
loope
call
or
sub
sbb
aam
push
lods
sbb
cmps
adc
ins
dec
and
data16
inc
xchg
push
retf
xlat
int
lods
lods
pop
iret
mov
mov
push
inc
cmp
hlt
mov
mov
js
(bad)
push
cs
lea
mov
xchg
or
dec
inc
scas
fldenv
outs
(bad)
push
mov
dec
dec
aam
xchg
sub
jl
and
push
into
mov
and
jne
xchg
xchg
dec
dec
call
movs
(bad)
adc
mov
shr
(bad)
fstp
xchg
or
push
fiadd
push
lods
aam
aad
(bad)
mov
mov
test
shr
and
das
add
mov
jmp
jmp
jge
and
data16
and
push
push
retf
push
dec
rol
push
out
jmp
scas
mov
pushf
dec
xchg
mov
cs
xor
cmp
pop
in
ret
add
jle
sub
fnstcw
pusha
mov
jns
dec
jge
pop
dec
inc
dec
dec
sbb
xor
inc
xchg
sub
mov
adc
nop
test
push
add
dec
inc
daa
sub
add
scas
mov
push
test
hlt
ins
mov
jne
(bad)
pop
cld
jmp
test
mov
movs
cmp
push
vshufps
mov
fwait
adc
lods
sbb
mov
daa
(bad)
(bad)
rcl
shr
cmps
xor
or
push
ds
ror
popa
es
xor
sub
pop
popf
inc
call
enter
pop
dec
push
hlt
mov
adc
movs
cmps
pop
movs
xchg
add
jne
sub
ret
enter
xor
mov
arpl
lods
push
mov
dec
adc
test
cmp
xchg
jno
outs
xchg
add
xor
cmps
jmp
push
and
xor
arpl
js
lea
gs
inc
fwait
test
pop
mov
pushf
and
xor
push
or
call
cli
push
add
mov
xchg
test
ins
cmp
ja
cmp
dec
and
push
rcl
out
rcl
mov
push
jmp
cmp
js
cmp
mov
jp
sbb
xchg
pop
into
push
(bad)
inc
cmps
imul
les
fwait
(bad)
cs
add
movs
shr
fwait
cmp
cmp
jge
sub
sti
in
inc
xchg
outs
jmp
mov
push
or
shl
cmp
xlat
push
mov
xchg
clc
mov
mov
pop
sub
ds
out
sbb
dec
ds
sub
push
enter
mov
adc
adc
loopne
aam
cdq
into
das
out
pop
jno
push
mov
ja
sti
add
push
pop
jnp
or
push
xor
rcr
out
fld
xor
sub
in
sti
add
lea
sbb
in
jge
aad
inc
mov
mov
fsub
je
out
lds
je
in
dec
and
push
cmp
pop
and
jae
out
ror
mov
mov
inc
cdq
sbb
or
fidivr
xlat
sub
jge
scas
in
sub
aaa
pop
(bad)
dec
sahf
stos
pop
dec
jge
mov
jg
mov
xor
out
(bad)
push
mov
or
ds
dec
retf
and
xchg
mov
or
(bad)
addr16
cli
and
jcxz
push
data16
or
add
mov
loopne
mov
hlt
in
mov
inc
shl
sub
sar
rcl
leave
lds
dec
(bad)
in
mov
jmp
(bad)
addr16
jmp
outs
sbb
push
fsubr
jno
out
(bad)
shl
inc
mov
daa
hlt
adc
sbb
pop
jp
jecxz
cmp
sar
sbb
fadd
not
jp
jmp
call
popf
loop
aaa
push
pusha
and
(bad)
jo
fimul
ja
outs
cmp
ja
out
push
jnp
mov
pop
ins
inc
sub
in
mov
and
ror
daa
dec
imul
jle
loop
dec
jecxz
push
call
push
or
call
push
scas
inc
int
pop
stos
mov
xor
dec
ror
mov
pop
daa
pusha
repz
jb
lds
dec
jg
xrelease
(bad)
fnsave
adc
das
cmc
test
jle
sbb
xor
xchg
shl
(bad)
mov
call
push
rcr
pop
cmp
ror
cmovs
fidivr
pusha
arpl
pop
je
ja
std
cmc
lods
in
les
xor
push
inc
mov
iret
in
fxch
psllq
mov
into
mov
data16
or
dec
jbe
cli
test
nop
repnz
mov
cs
push
cmps
out
in
sahf
pop
(bad)
stc
cmp
test
xchg
xchg
mov
mov
lods
or
inc
aam
xchg
mov
sti
outs
ja
(bad)
iret
or
stc
push
fisubr
outs
(bad)
xor
mov
mov
mov
mov
(bad)
in
push
or
cld
push
shl
jb
sub
call
in
sbb
test
(bad)
jl
iret
sti
mov
xchg
in
outs
inc
jmp
inc
inc
pop
inc
call
rcr
(bad)
icebp
aas
cld
iret
push
shl
sbb
in
cmp
mov
stos
arpl
loope
fldcw
idiv
mov
inc
in
mov
neg
test
jo
xchg
movs
mov
and
xchg
cmc
adc
fs
dec
or
imul
cmp
test
inc
cld
sub
cli
aad
call
call
pusha
in
nop
mov
lahf
sbb
out
mov
sbb
sar
gs
test
cmc
std
rol
scas
jp
fdiv
shl
sub
xchg
mov
xchg
loopne
sahf
xchg
aad
enter
out
xchg
cmp
les
movs
adc
mov
inc
mov
popa
mov
ret
movs
sbb
lock
enter
dec
js
jmp
push
push
xchg
daa
dec
jnp
movs
arpl
sub
xchg
and
or
mov
addr16
ds
scas
sbb
test
push
out
dec
pushf
xchg
xchg
jo
xor
xchg
aad
inc
cli
and
aam
sub
loop
dec
test
jp
and
sub
cmp
in
jb
mov
push
enter
xchg
test
xor
cmp
push
mov
sahf
xchg
into
(bad)
mov
enter
mov
and
mov
loop
aaa
push
je
inc
jns
mov
nop
mov
clc
repz
pop
sbb
test
in
push
and
pushf
cmp
stos
scas
dec
xor
jae
fidivr
or
sbb
mov
sub
test
xor
fnstenv
popa
lods
sbb
aam
xchg
icebp
mov
inc
js
xchg
dec
into
add
test
xor
xor
outs
hlt
in
jo
push
into
or
aam
out
aas
push
test
mov
mov
scas
push
ins
retf
xchg
or
cld
mov
lods
mov
jecxz
xor
jmp
cmp
add
rcl
call
mov
dec
call
out
pop
pop
mov
bnd
fadd
inc
sbb
(bad)
stc
loopne
(bad)
push
pop
fisub
(bad)
mov
aaa
mov
sbb
addr16
fldcw
jmp
int
pop
xchg
nop
dec
test
xor
loop
out
addr16
cmp
push
xchg
retf
test
pop
xlat
sbb
adc
jae
sti
outs
(bad)
push
pushf
int
lds
std
mul
dec
xor
lock
adc
shl
ins
inc
daa
out
jno
icebp
addr16
test
mul
push
pop
outs
test
mov
push
arpl
ret
(bad)
(bad)
adc
and
data16
call
add
sub
and
pop
(bad)
cld
(bad)
fst
sub
sbb
daa
push
fist
xor
jl
popf
or
and
sub
jnp
xchg
push
es
mov
leave
xor
clc
(bad)
jno
sar
fld
mov
xor
fistp
rcl
daa
xor
js
lahf
pop
xchg
rcr
cmps
fst
xchg
cli
in
cld
clc
ins
ficom
jb
sbb
pop
sub
xchg
jb
(bad)
jb
dec
pop
fs
xchg
sbb
imul
xchg
je
inc
and
jne
fmulp
ins
sub
movs
cdq
and
or
cmps
mov
test
mov
add
stos
mov
or
popf
iret
sub
daa
into
add
cs
cdq
retf
mov
lahf
xlat
adc
mov
push
push
jb
stc
push
dec
jl
ret
mov
cmps
aad
bound
xchg
dec
dec
xor
loope
addr16
outs
test
fild
mov
jb
add
mov
sar
outs
inc
xchg
fcmovnb
retf
lods
ret
push
imul
stc
mov
scas
xchg
sbb
movs
jmp
or
(bad)
idiv
pop
(bad)
rcl
imul
sub
mov
cmp
ror
lea
div
inc
pop
jns
and
adc
jae
mov
std
test
xor
mov
aad
and
cmp
fstp
push
inc
adc
push
out
add
xor
push
iret
sbb
sub
pop
pop
int3
push
clc
inc
inc
arpl
jecxz
sbb
or
mov
sub
lods
mov
mov
sbb
pop
out
xor
pusha
ftst
mov
push
lds
mov
add
cmp
retf
mov
sbb
mov
mov
out
pop
or
and
sbb
mov
jmp
in
imul
and
arpl
mov
popf
cmp
in
out
shl
sbb
sub
and
add
fsub
xchg
das
dec
aaa
not
shl
dec
sub
mov
sbb
arpl
lds
in
scas
punpckhbw
push
test
(bad)
loope
ins
dec
sub
clc
lods
cli
loope
bound
out
sbb
sbb
sti
imul
in
pop
push
xchg
imul
test
das
cmps
push
inc
dec
into
ret
xchg
test
sar
or
push
xor
or
and
adc
add
and
cmp
inc
js
call
fimul
push
lods
stos
jo
loopne
test
rcl
inc
mov
lods
(bad)
in
or
mov
ds
push
jae
adc
mov
imul
movs
push
push
pop
inc
jnp
dec
rol
ds
push
sbb
sahf
cmp
inc
sub
mov
pop
pop
aas
push
add
aam
call
mov
xor
fnstcw
jp
adc
ret
int
cdq
dec
sub
push
cmp
js
xchg
push
xchg
add
jne
mov
jo
enter
loop
call
(bad)
sbb
push
lods
xchg
adc
movs
into
adc
js
xchg
stos
xchg
imul
push
mov
jmp
mov
and
aad
push
mov
test
aaa
and
leave
dec
mov
pop
popf
cmps
pop
inc
out
arpl
dec
gs
out
mov
push
test
pop
aas
add
aas
xchg
push
cmps
test
leave
cmp
push
xchg
lds
popa
inc
ficom
lock
xchg
jmp
mov
sub
(bad)
int
test
sbb
test
out
adc
mov
cmp
in
xor
dec
mov
lea
addr16
loop
clc
and
rol
xchg
ja
mov
pushf
les
scas
into
dec
and
xchg
movs
ret
sub
leave
rcl
mov
jle
mov
movs
test
and
cmc
fcom
popf
pop
push
fs
jecxz
push
mov
lds
dec
inc
adc
inc
push
xchg
mov
test
movs
retf
aad
mov
xor
xor
mov
add
fsub
push
cmp
cmps
movs
enter
enter
xor
pop
add
push
fnstsw
sbb
lea
sbb
dec
dec
sbb
call
mov
ins
test
je
xor
retf
sub
pop
in
pushf
pop
movs
neg
call
push
sub
mov
mov
scas
leave
xor
or
cmp
lea
bound
outs
shl
es
or
xchg
jle
cmps
push
sub
xchg
push
gs
in
add
or
leave
aad
dec
add
inc
or
add
xor
sub
mov
inc
movs
inc
aad
(bad)
in
or
mov
push
mov
jo
ret
xchg
mov
push
ret
mov
adc
aad
push
aad
jne
test
add
add
xor
push
xor
popa
bound
inc
push
inc
bound
shr
push
mov
push
or
adc
sbb
adc
sbb
mov
sbb
retf
xor
pop
jne
dec
dec
sub
and
aaa
mov
inc
aam
dec
call
movs
loopne
jb
(bad)
int
adc
inc
push
loopne
in
sub
cli
jno
in
dec
dec
mov
data16
loop
xor
hlt
add
xchg
sbb
mov
in
outs
mov
cs
add
jo
xor
xchg
out
or
pop
idiv
int3
out
ins
sar
pusha
sar
dec
clc
not
sbb
mov
pop
push
pop
cmp
cli
jle
dec
lds
lods
test
adc
mov
das
jne
clc
or
adc
loopne
add
shl
jle
xor
out
outs
aaa
lock
retf
xchg
es
loopne
and
in
bound
mov
call
sbb
dec
movs
dec
pop
jne
xchg
xor
jecxz
adc
xchg
retf
pop
sub
dec
cdq
xchg
xor
(bad)
(bad)
cmp
jno
sub
jns
jns
jns
je
mov
repz
call
scas
or
pop
cwde
mov
xor
movs
mov
xor
jo
xchg
lods
cmp
xor
sub
sub
movs
push
push
in
adc
(bad)
mov
or
popa
popf
dec
push
les
xchg
xor
jo
lea
nop
adc
mov
adc
jb
inc
iret
and
and
ja
leave
movs
addr16
mov
jno
cmp
mov
xor
in
mov
sti
dec
mov
push
cli
add
fs
pop
sub
sti
cwde
cmc
fistp
cmps
mov
fs
stos
mov
stos
(bad)
loop
arpl
std
jo
lds
inc
test
mov
xchg
cli
cmc
cli
(bad)
xchg
jmp
stc
leave
mov
cmps
pop
jecxz
in
aaa
push
addps
shr
fwait
(bad)
stc
mov
push
pop
jg
call
cdq
in
test
inc
xchg
dec
push
ret
xchg
out
or
mov
mov
fbstp
ins
leave
aas
adc
stos
popa
sbb
mov
sub
mov
mov
mov
es
ret
call
sub
and
jp
fdiv
repz
push
sar
mul
fdivr
push
gs
movs
adc
push
clc
xor
fistp
xlat
test
xchg
xor
in
ins
xchg
jae
pop
sub
jl
cdq
scas
in
pop
pop
cmps
pushf
pop
popa
sahf
sbb
cmps
mov
test
mov
(bad)
(bad)
jb
aad
jbe
dec
mov
mov
dec
cmp
inc
push
jmp
or
and
sbb
pop
(bad)
fdivrp
outs
and
popf
pop
sub
xchg
jo
cmp
(bad)
cmps
jmp
sub
cmovns
shr
into
dec
inc
cwde
mov
fist
xchg
jmp
fcomip
xchg
ins
into
rcl
cwde
pusha
repz
aam
out
mov
lods
cmp
hlt
aam
and
pop
aad
je
nop
dec
push
movs
or
cmc
cmp
mov
sub
fsub
stos
leave
jae
lahf
cmps
sti
pushf
mov
jmp
popa
int
jg
lds
call
mov
and
neg
mov
fcom
fstp
lods
adc
or
inc
dec
mov
arpl
push
push
rcl
ret
ret
push
and
fs
adc
inc
nop
sbb
lds
lock
test
sub
in
out
push
fadd
arpl
sub
fldenv
cld
fs
xor
pop
es
imul
add
pop
cmps
cmps
adc
popa
push
into
loop
xchg
pop
pop
cmc
fcom
xor
cli
lahf
in
mov
scas
sti
dec
loopne
mov
into
bound
inc
test
jo
fs
xchg
xor
scas
and
jne
int
or
mov
or
cmps
fcomp
retf
cwde
sub
(bad)
or
jne
inc
cmp
ins
pushf
mov
mov
ja
push
clc
inc
dec
(bad)
lahf
movs
mov
repz
pop
test
lds
test
cmp
push
ret
mov
ss
out
not
add
mov
adc
add
or
loop
movs
add
dec
add
add
es
add
arpl
push
hlt
jnp
imul
dec
out
sahf
cdq
addr16
and
call
fbstp
(bad)
shl
mov
lea
jae
aas
xchg
retf
push
push
je
sub
pop
aad
mov
mov
mov
adc
xchg
xchg
push
adc
pop
push
mov
and
(bad)
(bad)
aas
aad
repz
cmps
cmp
call
std
pop
cld
rcl
lods
dec
xor
or
aad
xor
xor
xor
cdq
imul
movs
jne
retf
scas
(bad)
repnz
retf
jge
mov
mov
cmp
pop
ret
xchg
sub
inc
scas
sub
aas
xor
retf
push
cdq
sbb
retf
pop
push
lea
popf
sub
scas
sub
and
sub
out
fldenv
sub
pop
pop
adc
jecxz
inc
cmp
jo
mov
dec
mov
dec
int3
daa
in
push
cmp
in
inc
lea
xchg
push
sti
adc
mov
call
jnp
push
mov
fisttp
sub
cmp
(bad)
cmp
mov
jo
popa
mov
je
imul
dec
fidivr
mov
(bad)
int
mov
mov
aad
push
outs
data16
(bad)
popfw
gs
dec
sub
sbb
add
leave
cmp
pop
test
fs
jnp
dec
cmp
outs
xor
pusha
cmp
cs
int3
jge
jmp
pop
imul
jns
and
pop
hlt
sti
push
cmp
adc
cmp
xchg
stos
mov
push
stc
lods
or
push
call
pop
sub
mov
cmp
jmp
je
rcr
cwde
sub
rol
sub
(bad)
je
stos
sbb
xchg
inc
inc
mov
nop
cdq
out
cmps
test
les
jns
mov
icebp
xor
popf
jns
jp
mov
xor
and
mov
xor
fmul
cmp
inc
push
xor
cdq
out
mov
cmp
clc
sub
mov
xchg
scas
iret
inc
retf
or
out
rcr
push
pop
aas
xor
cmp
push
pop
aaa
cdq
xchg
push
jecxz
not
sar
iret
xor
jno
pop
push
adc
fs
cmp
int
icebp
stos
adc
push
aam
retf
(bad)
add
arpl
add
push
fdiv
in
add
mov
or
adc
jne
cld
lds
and
sbb
dec
call
inc
test
mov
xchg
gs
fmul
cli
xor
scas
pop
sub
fdivr
xor
push
xchg
push
inc
or
or
push
int3
add
add
jmp
xchg
push
push
dec
fisubr
adc
rol
inc
pop
inc
mov
cmp
xor
repnz
movs
adc
aam
stos
leave
dec
mov
push
add
leave
test
mov
inc
mov
mov
mov
mov
push
jo
mul
call
aaa
pop
dec
test
int3
(bad)
adc
mov
push
movs
into
aam
mov
jecxz
cs
ret
mov
or
sahf
or
inc
pop
mov
stos
lods
mov
and
xor
mov
imul
cwde
xchg
(bad)
gs
pop
scas
push
sub
adc
leave
retf
xchg
xchg
lock
dec
mov
in
add
and
inc
shr
and
dec
adc
fild
shl
jmp
pop
and
(bad)
rol
sahf
fwait
jno
mov
or
ja
into
push
mov
out
out
add
in
or
sbb
add
push
jnp
lock
xchg
mov
or
add
pop
imul
inc
and
dec
adc
lds
mov
fld
or
jne
imul
sbb
xchg
jle
add
scas
or
mov
xchg
movs
in
mov
xor
push
push
ret
mov
sub
ins
mov
pusha
inc
add
push
push
or
and
mov
mov
shr
sbb
out
xchg
mov
mov
sbb
add
or
mov
add
sbb
or
jae
xchg
jge
xlat
into
jbe
jl
push
ffree
mov
call
cmps
pop
js
or
mov
sub
and
sub
popa
sub
popa
js
adc
adc
and
pop
test
out
xchg
xchg
mov
scas
loop
rcr
fisubr
cld
mov
or
and
movs
mov
mov
fstp
pop
inc
imul
lods
mov
test
mov
cmp
test
mov
xlat
xchg
mov
sub
fist
xchg
or
(bad)
les
pop
std
test
repz
ret
adc
test
inc
lods
and
movntps
fbstp
pop
or
jo
pop
pop
mov
stc
(bad)
fwait
into
inc
outs
xchg
xlat
or
mov
mov
test
adc
jns
(bad)
push
jecxz
xchg
push
push
add
mov
nop
or
inc
mov
ins
and
call
mov
jmp
push
aad
movs
push
inc
fwait
imul
xchg
pusha
lahf
jbe
pop
int
jo
mov
fcom
cmps
shr
lea
in
pop
mul
add
push
adc
xor
or
(bad)
fwait
sub
loop
shr
and
add
jns
mov
mov
sbb
lods
mov
lods
pop
fmul
or
push
lahf
sbb
shl
mov
out
ret
jnp
xor
adc
sahf
sub
es
sbb
add
pop
push
fs
shl
lea
mov
gs
aaa
or
add
(bad)
adc
fisttp
adc
adc
call
mov
xor
cs
xlat
repz
sahf
inc
xor
iret
jnp
movs
xchg
add
cmps
xchg
mov
or
js
or
sbb
out
mov
mov
push
pusha
push
xor
xor
fistp
hlt
adc
lds
lea
fwait
pop
movs
xor
(bad)
sbb
int3
jb
pop
adc
dec
addr16
mov
in
mov
push
jle
cmc
mov
aaa
jmp
mov
in
inc
fcomp
jmp
loope
mov
mov
jmp
ss
pop
es
(bad)
mov
jae
cmp
jge
les
dec
mov
add
pop
mov
popa
push
push
mov
mov
leave
cmp
xor
sbb
cmp
mov
daa
sbb
fdiv
jno
sub
adc
push
and
loope
stc
dec
mov
push
enter
xor
and
lea
jae
ins
jnp
xchg
int
jo
pop
fs
ss
push
pop
add
push
dec
jp
shr
and
jae
push
inc
pop
add
xor
sar
jp
dec
(bad)
or
push
sbb
adc
jecxz
cmc
cmps
dec
cmp
les
pop
je
push
fld
jno
sub
xchg
stos
push
pop
mov
xchg
loop
xor
dec
push
jo
inc
sub
pop
(bad)
or
dec
or
push
les
add
dec
fxch
cmp
out
xor
cmps
cmp
aas
pop
jmp
std
hlt
cmp
push
sbb
retf
idiv
push
xor
ja
daa
pushf
xchg
cmc
cmp
add
fadd
shr
jb
push
jae
push
cmp
jmp
xchg
stos
test
call
sbb
leave
into
xchg
dec
push
fbld
xor
pop
mov
sbb
mov
jnp
cmp
cmp
jp
ja
(bad)
push
lods
xor
sbb
push
inc
mov
xor
inc
je
fild
lods
mov
sahf
fisubr
cmp
jge
bswap
push
(bad)
xchg
or
movs
mov
fwait
sti
retf
test
into
or
lock
sub
loopne
mov
jns
dec
xor
push
adc
cmps
in
pop
add
cmp
cmp
or
mov
test
adc
bound
jge
mov
jne
mov
inc
jle
mov
inc
int3
jmp
add
mov
pusha
ja
mov
xchg
xor
test
jl
sbb
adc
rcl
mov
or
popa
sub
fisttp
std
inc
xor
je
loope
pop
mov
cmp
push
or
inc
mov
call
xchg
enter
aam
xchg
(bad)
nop
out
jmp
dec
rcl
jnp
shl
outs
movs
pop
mov
dec
inc
xchg
or
mov
xchg
cmp
mov
dec
js
test
pop
mov
fcom
mov
dec
imul
pop
sti
mov
inc
pop
mov
jne
fbstp
jno
or
ins
test
js
cmps
imul
mov
nop
(bad)
xchg
sbb
xor
aas
stos
sbb
lds
jo
xchg
mov
cmp
stos
div
call
fbld
mov
adc
jmp
xor
ds
fwait
loope
pop
xchg
rcr
adc
movs
mov
jl
jecxz
aaa
stos
aaa
pusha
mov
loope
pop
sbb
jl
out
sub
sub
mov
ror
popa
adc
dec
call
cs
shr
ja
jo
inc
neg
imul
pop
addr16
xchg
mov
loop
mov
fs
retf
arpl
push
sbb
lods
lahf
(bad)
sub
lock
iret
add
push
test
sub
or
mov
movs
pop
loop
not
pop
jl
shl
sti
aas
sub
sti
push
fs
(bad)
pushf
imul
jno
inc
loopne
test
xchg
sub
retf
into
js
jl
mov
out
xchg
xchg
xor
inc
movs
imul
inc
arpl
push
sahf
je
aas
adc
sub
fsubp
outs
(bad)
jmp
xchg
mov
inc
mov
mov
fiadd
aad
rcr
mov
ret
sahf
cli
push
sub
mov
jge
aaa
pushf
cs
in
loop
push
call
popf
fst
inc
mov
fs
scas
shl
push
push
fstp
fistp
popf
sub
pop
(bad)
push
mov
sub
push
call
fwait
mov
pop
add
out
dec
xchg
shr
imul
cs
cli
or
dec
jge
aas
out
addr16
test
les
add
add
outs
jbe
push
pop
popf
pop
stc
mov
in
jle
jo
xchg
cmps
push
lods
cmp
cwde
mov
repz
or
cmp
cmp
mov
ds
popa
icebp
xchg
sub
adc
cs
fwait
out
fwait
cmp
pop
fbld
stos
mov
rcr
cmps
mov
xchg
jp
mov
outs
add
ror
xor
mov
mov
jg
shr
dec
les
dec
cli
(bad)
sub
adc
(bad)
(bad)
daa
jno
aam
mov
inc
cld
ss
(bad)
stc
bound
lods
out
fs
js
inc
rcr
pop
rcr
adc
sub
loopne
(bad)
jb
or
pop
pop
call
icebp
push
add
xchg
fstp
ins
pop
push
loop
repz
popf
sbb
icebp
mov
(bad)
in
cmc
push
cmp
gs
xchg
out
aaa
out
adc
fcmovnbe
jecxz
mov
leave
int3
fiadd
icebp
loop
out
mov
xchg
push
pop
mov
pop
pop
jb
push
popa
stc
pop
cmp
lods
push
cs
sub
sub
jno
test
(bad)
jno
mov
call
pop
rol
push
cs
mov
dec
shr
inc
je
cmps
xchg
ja
sbb
inc
ins
outs
imul
sub
test
shl
jo
(bad)
xor
or
cmp
inc
push
leave
cmps
bound
pop
in
mov
cmp
leave
dec
movs
xchg
jnp
sbb
hlt
movs
adc
stos
xor
test
dec
push
stc
adc
(bad)
jmp
xchg
(bad)
and
cmp
hlt
push
pop
sub
or
pop
adc
imul
int
loopne
xlat
test
pop
repz
mov
test
and
inc
(bad)
dec
xchg
jg
jle
ins
push
fldcw
push
pushf
xchg
mov
in
les
loop
inc
jbe
jbe
pop
adc
mov
pop
mov
push
inc
and
xchg
push
jno
les
ret
or
inc
xchg
cmps
fidivr
mov
ins
jp
call
js
sub
movs
jge
not
stc
ss
mov
push
sahf
fmul
jl
fcom
lods
mov
test
(bad)
daa
cwde
pop
adc
adc
cmp
stc
and
aad
xor
fdivr
push
or
pop
cmp
xchg
hlt
mov
ja
and
(bad)
jae
sub
ja
ins
xchg
dec
jnp
ins
mov
pop
xchg
cmp
mov
jg
data16
inc
jge
sub
test
cmp
int3
sub
leave
jmp
(bad)
xor
shl
mov
push
jge
retf
or
add
add
cmp
pop
sar
inc
mov
dec
lea
repz
fstp
loopne
add
imul
push
pop
jmp
jmp
mov
into
jae
jecxz
add
cmp
repz
ret
rcr
data16
push
sbb
cmp
dec
push
sub
movs
or
mov
jo
sub
sub
cmp
test
addr16
aas
ror
dec
int3
adc
out
sbb
mov
test
int
cmp
movs
xor
pop
into
fcom
stos
sub
cld
adc
push
push
frstor
out
es
jbe
adc
stos
lds
aaa
jp
retf
aad
retf
xor
scas
push
sar
adc
push
out
xor
push
movs
add
push
mov
cmps
add
cs
push
in
cli
ret
or
pop
ss
mov
xchg
outs
adc
aas
mov
sbb
jecxz
xchg
dec
ud1
out
out
jge
aaa
jb
cmp
movs
inc
icebp
pop
pop
cmp
outs
xchg
(bad)
call
dec
xchg
jae
and
xchg
js
xor
pop
je
fistp
pop
cmp
lock
pop
cmc
(bad)
xor
call
push
xor
jae
mov
ds
stc
and
jo
or
into
xchg
aaa
test
jmp
(bad)
pop
in
sbb
popf
(bad)
mov
lds
out
dec
ss
dec
cmp
imul
or
hlt
jae
jnp
leave
dec
mov
daa
mov
fwait
arpl
dec
std
mov
add
push
pushf
xor
sub
xchg
xchg
and
aam
lods
jl
push
popa
mov
mov
mov
xchg
add
mov
es
inc
clc
xlat
ss
lea
mov
adc
aad
mov
mov
les
or
dec
mov
shr
mov
or
xchg
dec
xchg
and
xor
mov
rcpps
push
dec
sbb
jmp
(bad)
xchg
pop
repz
sbb
adc
ins
push
scas
cmp
jb
daa
jle
js
mov
call
cmps
sbb
lock
jge
fidivr
xor
sub
add
mov
or
add
in
or
popf
push
add
dec
mov
scas
pop
push
and
rol
and
test
and
addr16
mov
nop
adc
mov
aaa
sbb
mov
cli
push
xchg
iret
jle
sbb
call
jns
cli
push
cmps
cs
jb
js
mov
xchg
mov
jb
xchg
cmp
dec
pop
(bad)
out
push
call
pop
popf
js
test
repnz
jb
mov
fwait
imul
data16
ss
mov
xchg
aaa
or
mov
mov
repz
push
jae
mov
mov
cmp
mov
cmc
fwait
shl
push
movs
out
sbb
es
cwde
out
mov
bound
mov
and
xchg
cmp
xor
mov
add
mov
into
lods
xor
out
jmp
mov
ret
cmp
mov
and
jb
in
out
mov
out
sar
jns
mov
cmp
mov
sbb
int3
mov
imul
dec
jecxz
call
out
popf
aad
push
mov
aaa
push
jge
cmp
call
mov
xlat
clc
mov
dec
jns
dec
pop
js
xchg
cmp
push
test
pop
pop
aaa
pop
arpl
adc
pop
mov
dec
dec
adc
in
cmp
outs
inc
ret
repz
jecxz
cs
xchg
cmps
sub
dec
mov
in
inc
pop
or
je
mov
jl
retf
mov
mov
cmc
mov
jbe
ss
mov
or
in
stos
mov
sub
mov
test
pop
jle
rcl
out
fidivr
cdq
repz
loop
repz
scas
not
mov
jno
and
xchg
std
xor
xchg
sbb
inc
jns
cmps
jg
retf
ins
fstp
pushf
je
pop
adc
adc
push
jecxz
jmp
popf
jno
(bad)
jmp
mov
xchg
(bad)
dec
out
dec
xor
xor
mov
mov
sub
pop
dec
scas
adc
or
fcom
xor
jle
std
ins
cmc
and
cmps
sbb
ja
inc
push
push
leave
shr
ds
xchg
(bad)
mov
or
inc
push
fistp
adc
retf
dec
loope
(bad)
arpl
scas
xor
lock
mov
push
rol
pop
and
pop
dec
pop
mov
in
shl
add
out
cmp
out
push
(bad)
sbb
dec
sbb
pusha
jl
(bad)
rol
ss
inc
sub
inc
hlt
push
movs
push
into
mov
pop
out
sti
cmp
add
loope
cmps
dec
mov
add
jg
sbb
jbe
and
fucomi
sti
(bad)
cmc
aad
scas
test
loop
dec
xchg
push
in
sbb
push
jl
lods
jmp
shl
test
mov
mov
pusha
ins
retf
xor
push
push
and
xor
jmp
sbb
imul
adc
cs
cmc
pop
shl
scas
inc
xchg
fucom
mov
xor
push
mov
movs
das
and
mov
sbb
mov
ds
sbb
pop
outs
mov
inc
jb
cdq
sbb
mov
mov
std
push
ja
pop
scas
loop
cmp
and
cwde
test
and
xor
fadd
out
shl
fidiv
sbb
pusha
js
dec
lock
stos
jmp
fmul
inc
fstp
sbb
aad
cmp
faddp
push
fwait
pop
sbb
inc
(bad)
sbb
(bad)
out
(bad)
int
ins
cwde
scas
out
mov
xchg
hlt
xor
ins
out
aas
fisubr
fisub
pop
and
mov
fldenv
pop
aas
dec
scas
outs
fisub
mov
push
iret
mov
bound
call
pushf
fidivr
retf
cmp
outs
pop
mov
add
out
add
ins
push
jns
push
jl
lods
mov
int
push
(bad)
(bad)
sub
mov
cld
xlat
add
mov
mov
sbb
cli
jbe
popf
inc
or
xchg
std
call
ss
aad
mov
push
push
jg
inc
std
or
mov
jmp
lods
add
jns
paddw
sbb
ffree
xchg
sbb
cmc
enter
mov
jb
cmp
cmp
outs
sub
push
push
add
mov
gs
and
inc
ds
push
push
xchg
and
int3
dec
nop
das
xchg
sub
add
mov
xor
je
sahf
and
ja
(bad)
hlt
inc
xchg
fs
imul
retf
mul
ins
fnsave
enter
dec
xchg
mov
sub
popa
popa
adc
xchg
xchg
cmp
loopne
mov
nop
and
cmp
out
adc
je
jmp
ret
mov
pop
adc
dec
jne
scas
jmp
adc
push
dec
rcl
xchg
fisubr
pop
fdivr
add
loop
sbb
adc
push
sti
inc
mov
adc
add
movs
sbb
xor
mov
inc
test
mov
ficom
sbb
jbe
cmp
add
xor
sbb
dec
adc
mov
int
in
pop
dec
gs
xchg
sub
xchg
bound
mov
inc
xor
out
cwde
xchg
cmp
cmp
xchg
or
mov
dec
(bad)
out
imul
mov
xlat
xchg
test
xlat
in
scas
loop
scas
ss
popf
xchg
je
ret
xor
addr16
jmp
mov
daa
popa
xchg
fsub
or
inc
or
pop
pop
iret
mov
xor
pop
(bad)
inc
jno
rcl
xor
sahf
movs
(bad)
and
mov
call
in
xchg
scas
dec
mov
mov
pop
xor
mov
xor
std
xchg
sbb
ins
xchg
dec
fnstsw
pusha
(bad)
add
scas
inc
movs
mov
loop
mov
inc
aad
fld
mov
jne
xchg
(bad)
mov
arpl
jne
cmp
cmps
inc
push
sub
in
cmp
dec
sbb
ret
adc
js
pop
je
out
aad
add
mov
xchg
push
add
add
bound
push
and
loop
daa
fisub
inc
test
nop
movs
(bad)
bound
and
fiadd
outs
aas
xchg
lock
pusha
imul
(bad)
pop
cmp
jb
addr16
cdq
jmp
ja
cmc
gs
cli
xchg
xchg
jmp
xor
xchg
ins
adc
cli
iret
clc
mov
mov
sub
xchg
mov
cli
imul
jbe
hlt
and
cmp
cli
retf
jge
int3
adc
into
adc
cwde
mov
and
push
gs
aas
cdq
sbb
jnp
pop
lods
xor
sub
mov
sbb
(bad)
mov
inc
pop
outs
or
inc
xchg
test
xor
fwait
xchg
inc
rcr
in
mov
call
cs
xor
pop
ret
out
retf
sbb
cmp
outs
daa
adc
loopne
cmc
jp
repz
inc
jl
fbld
jae
iret
repz
clc
fistp
inc
repz
mov
cli
pop
aam
xchg
dec
mov
aaa
xlat
inc
into
mov
retf
fidivr
mov
xor
dec
cdq
sbb
test
aam
cld
js
pop
lods
(bad)
nop
xchg
mov
sub
not
and
in
ror
rcr
mov
in
popa
out
push
push
cmps
or
sbb
mov
popa
iret
inc
call
xchg
jmp
jb
shr
mov
add
jo
push
mov
jmp
xor
imul
repnz
mov
jmp
scas
push
mov
jge
call
push
into
inc
dec
mov
out
and
jb
ja
(bad)
out
add
push
(bad)
jne
pop
ins
xlat
ret
pcmpeqw
mov
cmp
jle
add
or
xchg
lds
xchg
cmp
inc
(bad)
cmp
not
push
xor
sbb
jmp
jne
sbb
in
out
adc
cs
(bad)
(bad)
nop
je
fcomip
add
fidiv
fist
jbe
rcr
inc
das
das
xlat
fld
fisttp
push
call
das
xchg
fidiv
lock
fistp
call
pop
sub
pop
jle
hlt
mov
out
push
movs
cld
jno
movs
or
leave
inc
imul
xor
mul
shl
cmp
push
or
ficomp
mov
inc
fld
jp
aad
mov
xchg
inc
sti
jp
retf
aaa
mov
cs
push
and
cmp
add
retf
cmc
rcr
mov
dec
jmp
outs
ret
(bad)
fidivr
imul
add
cdq
es
xchg
ret
(bad)
and
aas
pop
cmp
(bad)
popf
push
cmp
push
push
iret
out
loopne
loope
and
mov
movs
pop
lds
cli
aad
fstp
adc
jl
cli
pop
jge
push
pop
rcl
loopne
mov
fs
mov
enter
xor
mov
add
cmp
mov
rol
jmp
inc
aas
lods
ror
xor
out
sub
jg
dec
mov
mov
add
fadd
sbb
aas
jb
fstp
in
je
push
arpl
bound
cmp
ret
hlt
pop
or
out
lods
inc
pop
lods
cmps
inc
movs
outs
push
jmp
pop
mov
or
leave
push
dec
mov
mov
sub
lods
xchg
ins
mov
int
push
cmp
jno
cmp
xor
movs
lds
gs
stos
pop
fstp
pop
pop
mov
aam
inc
cmp
enter
push
(bad)
pop
sbb
dec
sub
es
inc
dec
mov
scas
xchg
push
ror
stc
mov
mov
nop
xor
add
pop
clc
jb
enter
adc
clc
in
into
jp
xor
call
add
out
xchg
movs
mov
mov
pop
xor
mov
(bad)
pop
mov
dec
mov
(bad)
sub
lods
lods
movs
cmp
pop
push
mov
imul
add
nop
and
adc
inc
and
xchg
or
sbb
jo
inc
jo
add
sub
push
sub
sub
icebp
and
lds
pusha
mov
mov
(bad)
sub
and
das
pop
das
pusha
(bad)
jne
daa
dec
pop
mov
shl
arpl
mov
cmps
fnsave
shl
(bad)
mov
xchg
cdq
ret
cld
xchg
xchg
pop
and
cmps
scas
les
test
test
inc
daa
lahf
outs
addr16
nop
inc
sahf
mov
sub
mov
mov
mov
mov
sub
pop
xlat
pop
aas
cmp
test
daa
or
sub
inc
mov
rcl
xchg
mov
or
shl
es
mov
stc
jmp
fcomp
jmp
out
push
xchg
fnsave
and
loopne
cmp
ds
sub
pop
jl
mov
inc
iret
adc
cmp
push
cs
pop
sbb
pop
jmp
out
imul
movs
movs
xchg
call
mov
in
into
or
mov
in
mov
cmp
or
cmps
imul
xor
dec
cmps
pop
scas
or
and
scas
mov
int
mov
test
mov
fmul
ret
imul
iret
and
sub
loopne
cmc
pop
int3
mov
add
aaa
int
inc
mov
add
add
and
lea
pop
pop
add
addr16
int
adc
leave
push
fdivr
xor
out
dec
inc
jno
cmp
ins
test
neg
mov
pop
push
and
mov
sbb
add
adc
xor
add
rcl
js
ss
mov
nop
(bad)
std
into
xchg
pop
in
sbb
sub
aam
out
iret
jg
sahf
shl
call
dec
stos
movs
jp
jae
add
fldenv
(bad)
mov
popf
rol
push
or
pop
pushw
xchg
jmp
mov
pop
mov
repnz
jle
call
pop
pop
adc
je
dec
cmp
fcom
ret
rol
xor
pop
and
test
aad
fild
jg
sbb
cmp
xchg
xor
into
jmp
pop
ret
imul
cwde
pop
xchg
in
fsub
das
jno
sbb
fcmovnb
out
(bad)
daa
and
call
fisubr
xchg
jle
imul
adc
sub
and
mov
xchg
rcr
adc
and
cmps
test
stos
cmps
loopne
and
adc
and
and
xchg
lock
inc
fild
push
sub
dec
aad
adc
into
leave
or
inc
xchg
xchg
mov
xor
outs
xor
pop
inc
push
pushf
inc
es
ret
jno
jbe
es
mov
cmp
in
mov
out
ds
cmp
lds
cmps
repz
shl
dec
mov
(bad)
dec
cmp
mov
rcr
inc
mov
dec
mov
dec
inc
mov
mov
xor
jns
dec
mov
and
outs
jae
mov
jbe
sbb
dec
jl
out
mov
push
mov
nop
mov
push
mov
xchg
loopne
mov
jge
retf
fisub
or
aaa
ficomp
aam
cmp
mov
jge
loopne
jae
and
daa
les
into
pop
pushf
dec
push
add
aam
dec
mov
or
xor
xchg
or
inc
mov
adc
adc
cmps
lea
sbb
clc
xchg
cs
mov
leave
xchg
sbb
jecxz
popf
pop
cmps
bound
pop
test
retf
adc
push
pop
mov
dec
add
leave
(bad)
jge
shr
jne
inc
rol
cli
sub
sub
(bad)
mov
dec
sub
jbe
or
in
mov
pop
adc
mov
retf
add
test
sbb
leave
stos
ret
jno
pop
and
pop
add
sbb
xchg
bound
inc
sub
(bad)
adc
ret
push
add
adc
xchg
and
mov
and
xchg
test
adc
adc
mov
push
or
dec
fsub
xchg
or
cmp
adc
or
leave
push
ror
mov
mov
mov
adc
adc
inc
dec
ret
pop
adc
xor
adc
sbb
adc
loopne
int3
nop
inc
leave
xor
int3
adc
movs
xor
mov
test
fs
arpl
scas
pushf
xchg
jge
or
cmp
outs
mov
into
in
out
(bad)
scas
dec
out
jle
sti
jg
movs
jns
push
mov
or
mov
std
pop
(bad)
jg
mov
sti
fstp
cmc
scas
iret
gs
(bad)
pop
out
sbb
push
imul
push
xchg
inc
iret
jns
and
mov
push
cmp
(bad)
test
stos
cmp
cmp
pop
call
or
push
sbb
cs
addr16
and
arpl
lahf
test
dec
call
inc
sub
ds
xchg
xor
jno
mov
inc
xchg
cmp
add
jle
cmp
bound
aad
adc
cmps
test
mov
cwde
cmp
pop
rol
pop
test
(bad)
cmp
xor
movs
sub
mov
rcr
ret
nop
ins
and
or
and
xchg
cmp
dec
cmps
cmp
scas
jge
outs
mov
add
xchg
imul
cmp
adc
inc
adc
mov
lods
int
or
xchg
fdivr
xchg
cmp
sub
dec
cmps
je
jno
xchg
or
cmp
mov
es
es
cmp
or
imul
cs
mov
mov
sub
xchg
mov
push
xlat
fsub
sbb
pop
sti
mov
sub
sbb
push
inc
adc
cmp
mov
shl
cdq
add
dec
xor
xchg
enter
mov
lods
js
mov
dec
aam
pmaxsw
pushf
dec
and
push
pushf
pop
outs
loopne
or
push
leave
xchg
enter
call
jecxz
gs
push
lahf
stos
aas
ret
xchg
mov
sbb
cli
mov
cmp
push
push
scas
xchg
lods
por
test
not
sbb
pusha
xor
enter
mov
xor
or
aas
mov
and
(bad)
ds
pusha
fwait
(bad)
mov
sbb
jmp
mov
sahf
add
push
pop
mov
push
fs
adc
cmps
xlat
aas
daa
das
sbb
or
mov
and
mov
xchg
leave
push
adc
push
ret
bound
mov
push
jne
pop
mov
jge
fisttp
nop
jle
aaa
pop
and
mov
pop
sbb
and
in
(bad)
mov
movs
movs
ins
dec
xchg
jl
shl
mov
int3
cmps
sub
es
outs
mov
out
gs
or
push
sbb
push
pushf
mov
push
in
lds
test
lods
call
add
mov
add
dec
add
adc
retf
loop
xor
push
ins
sbb
sahf
inc
mov
or
test
aam
and
xor
dec
call
loopne
sub
adc
mov
jno
cmp
enter
and
shl
add
sub
dec
xor
fmul
mov
xchg
add
xor
jg
dec
jle
test
xchg
cwde
sub
je
cwde
out
fisub
cmps
push
mov
arpl
rol
jo
xor
lea
xor
aam
ins
dec
js
jo
push
shl
mov
push
(bad)
jns
adc
adc
ins
dec
push
stos
add
ins
fwait
and
pop
mov
in
mov
stos
mov
into
and
call
pop
(bad)
leave
(bad)
iret
mov
adc
mov
shl
(bad)
mov
or
mov
ja
and
ss
sbb
bound
call
scas
lods
mov
dec
jne
mov
sub
jmp
sbb
and
inc
and
dec
setl
and
and
mov
adc
push
sti
pop
sbb
pop
fild
xchg
jo
pop
mov
xchg
or
inc
inc
adc
call
push
bound
repnz
outs
xor
stos
retf
add
leave
mov
and
test
repnz
lods
mov
or
fwait
and
loop
aas
sbb
push
mov
sar
add
je
mov
add
and
mov
adc
retf
jmp
pusha
rcr
imul
ins
retf
pop
cdq
ss
aaa
jl
iret
sbb
mov
psrlw
(bad)
cs
or
pop
call
pop
push
dec
mov
mov
mov
mov
movs
mov
add
xchg
cs
or
(bad)
fsub
int
in
mov
fisub
gs
loopne
ror
idiv
cdq
daa
sbb
lds
lods
popf
add
sbb
lahf
adc
cmp
mov
hlt
jo
es
inc
in
fs
adc
nop
nop
jbe
xlat
adc
add
inc
push
js
mov
test
fiadd
mov
dec
out
test
add
inc
mov
and
inc
dec
cmp
dec
push
test
dec
test
into
nop
aad
xchg
shr
cmp
push
leave
jb
scas
leave
add
cs
cli
mov
pop
mov
imul
loope
jbe
fwait
ret
ds
sub
fcom
in
mov
and
cli
jle
push
repnz
mov
and
adc
popa
pop
jne
jns
sbb
jle
clc
jns
xor
ss
jae
sahf
jns
adc
ins
mov
mov
push
xchg
inc
inc
jle
xchg
push
vunpcklps
adc
fcom
adc
sub
cmp
sti
and
push
imul
sub
inc
data16
sub
fst
or
test
ret
pop
bound
test
(bad)
dec
dec
xor
adc
mov
mov
aas
sahf
loop
xchg
and
jmp
ss
push
(bad)
mov
sbb
mov
mov
loope
push
mov
mov
enter
lea
nop
mov
pop
pop
xlat
mov
outs
xor
mov
or
stos
mov
jp
mov
mov
sub
call
sti
pop
bound
mov
xor
push
push
mov
mov
push
repz
sub
pop
mov
mov
and
pop
pop
pop
or
sbb
push
test
(bad)
lea
mov
push
arpl
or
sbb
popf
imul
mov
ja
ss
in
pop
sbb
or
sbb
mov
lahf
mov
add
cmp
mov
mov
add
pop
stos
inc
test
dec
sbb
inc
inc
loop
xchg
push
adc
mov
sub
or
aad
movs
add
lea
movs
stos
aaa
les
js
(bad)
int
out
pushf
repnz
xorps
dec
add
lea
aam
pusha
mov
and
fldcw
js
and
pop
mov
mov
sub
cmp
push
mov
call
movs
pop
das
xchg
push
push
mov
lds
pusha
sub
js
sub
pop
lock
fdiv
mov
int3
jecxz
loop
sti
loopne
in
call
popa
mov
pop
jnp
mov
xchg
adc
clc
cmps
outs
pop
cmp
sub
ret
or
sti
movs
rol
aas
push
or
jp
sbb
es
mov
mov
pop
push
xchg
add
adc
xor
shr
pushf
or
outs
push
jp
inc
inc
push
cmp
sub
inc
mov
adc
retf
xchg
push
fisub
fbld
(bad)
nop
into
aad
aaa
test
xchg
rcl
imul
fistp
sub
xor
lods
mov
dec
inc
loopne
lahf
dec
cmp
outs
mov
mov
aad
aas
inc
cdq
fwait
inc
(bad)
movs
xlat
movaps
xor
mov
or
call
sahf
adc
mov
ret
mov
mov
movs
(bad)
lods
in
fnstcw
jmp
(bad)
pop
in
mov
xchg
or
sub
push
rcl
mov
adc
outs
pop
jne
(bad)
mov
clc
push
and
push
push
popf
outs
jg
jbe
mov
dec
and
fmul
mov
into
adc
popa
mov
imul
mov
fmul
xchg
mov
mov
add
pop
add
sbb
sub
stc
dec
mov
dec
sub
jmp
xchg
xor
lds
clc
data16
pop
adc
je
and
aam
xchg
and
call
call
adc
(bad)
sbb
outs
ret
aam
pop
leave
cmp
and
push
jno
dec
add
or
push
ja
dec
xchg
sub
les
mov
cmc
stos
adc
or
lahf
jne
shr
dec
or
sbb
and
iret
dec
inc
mov
add
or
test
mov
mov
loop
gs
not
inc
repz
int3
add
sub
bound
mov
test
adc
ds
in
lds
adc
fucomip
sub
cmc
out
idiv
xchg
test
sbb
int3
aaa
sti
mov
fild
xchg
and
xchg
cdq
mov
and
cwde
xor
int3
mov
pop
pop
stos
cmp
inc
ins
sub
imul
xor
nop
sub
mov
sbb
lahf
ret
jo
mov
jo
and
push
jecxz
ja
and
pop
sbb
dec
dec
cmp
scas
nop
(bad)
sub
in
mov
movs
loope
(bad)
dec
push
mov
in
test
jg
add
std
lds
loop
mov
inc
imul
jne
mov
jne
mov
sbb
pop
mov
xchg
adc
add
sub
xchg
imul
dec
fdiv
outs
test
fidiv
sbb
jle
in
mov
div
xchg
ss
sti
adc
retf
push
push
cmp
push
dec
cmp
inc
int3
arpl
push
in
sub
add
mov
cmps
(bad)
push
pop
cwde
xchg
mov
xchg
in
xchg
repnz
pop
sbb
cdq
mov
ficom
cdq
sub
or
xchg
jle
out
mov
mov
int3
ret
and
mov
push
movs
add
mov
jns
jl
mov
push
fist
dec
cli
aas
cmp
mov
leave
and
jl
movs
jns
push
(bad)
xchg
add
cmp
(bad)
mov
outs
lods
packsswb
pop
cld
sahf
inc
mul
push
adc
imul
cmp
repz
in
fs
pop
mov
pop
add
mov
inc
int3
ror
clc
jnp
int
outs
cmp
jb
outs
lds
xor
pop
gs
dec
jns
adc
mov
cld
jns
push
test
xor
xchg
sub
retf
imul
sbb
xor
lods
and
cmp
inc
adc
out
mov
and
jno
push
rol
push
aam
sub
loop
mov
loope
jg
mov
iret
repz
sbb
int3
adc
push
cmp
pushf
jns
cwde
out
mov
sbb
cld
sti
push
jne
sahf
test
jno
cmp
pop
mov
fisub
mov
shl
pop
outs
retf
test
imul
out
sbb
xchg
cs
xor
mov
cmp
popf
into
sar
jl
jmp
call
out
jns
scas
cmp
sbb
popa
push
aas
shl
loop
cmp
dec
push
cmp
rol
movs
mov
lock
xchg
test
pop
test
cmp
shr
inc
sar
mov
js
repnz
mov
retf
push
cli
clc
cmps
fwait
repnz
mov
fdiv
ret
inc
add
hlt
ss
cs
pop
cld
fisubr
push
bound
js
mov
aad
imul
clc
pop
dec
call
sub
fs
bound
push
popa
inc
les
adc
push
jns
mov
push
call
outs
jns
fisub
aam
cld
test
jo
xchg
inc
(bad)
(bad)
cmp
lods
out
lock
test
call
(bad)
data16
mov
fucomip
test
sub
stos
lock
icebp
xchg
push
push
ja
je
stos
fld
movs
aad
shl
(bad)
cmp
mov
outs
dec
mov
pop
out
daa
(bad)
dec
sbb
xor
jmp
cmp
mov
mov
add
sahf
dec
push
and
jne
ror
xchg
xor
dec
xchg
mov
xlat
mov
fcom
mov
icebp
push
jnp
inc
cmps
inc
std
push
hlt
push
gs
add
mov
or
adc
jmp
retf
jae
mov
test
call
mov
icebp
xchg
and
jp
xlat
rcl
divps
inc
imul
inc
xchg
inc
pop
fs
pop
js
bound
dec
sbb
pop
push
scas
aam
cmps
hlt
xchg
and
add
cwde
jl
arpl
add
fisubr
add
push
mov
stc
or
or
xchg
pop
movs
cmp
pop
mov
jb
test
mov
add
pop
stos
fld
aam
in
lods
test
shr
movs
sub
push
xchg
scas
das
sub
test
loope
sbb
dec
sub
adc
dec
add
ret
push
sub
or
lds
mov
stos
daa
cmp
pop
and
fs
in
aad
xor
or
mov
sbb
mov
jne
loope
sbb
jp
xchg
bound
xchg
rcl
mov
add
dec
shl
not
jge
rcl
imul
mov
shr
jg
push
mov
or
cmps
pop
xlat
lea
bound
cmp
and
sbb
je
pop
mov
push
push
mov
ret
(bad)
cld
jge
aad
in
inc
lods
mul
cli
push
cld
in
int3
stos
je
fwait
sbb
mov
pop
jbe
inc
(bad)
and
add
push
iret
aaa
and
xchg
and
xchg
rol
xchg
dec
arpl
jae
pop
xor
jo
push
push
ret
xchg
std
sbb
adc
cmp
cli
pop
cmp
sahf
inc
cmps
dec
sbb
fld
mov
sub
xchg
pop
dec
push
iret
mov
aaa
outs
and
dec
bound
cmps
cmps
add
cmp
movs
pop
repz
imul
mul
sub
repz
(bad)
cmp
dec
hlt
(bad)
js
xchg
mov
and
sahf
xchg
das
hlt
test
lea
lock
int3
push
shl
inc
push
lods
scas
and
cwde
sub
aaa
sbb
mov
les
(bad)
xchg
pop
popf
lahf
mov
call
lods
dec
push
jle
dec
fistp
adc
repz
lods
lds
adc
and
cmc
pop
sbb
hlt
push
or
sbb
xor
shl
dec
je
iret
daa
(bad)
in
pop
repz
fcom
es
ja
inc
pavgw
jg
(bad)
fistp
scas
fdiv
cmp
sbb
jg
or
(bad)
dec
inc
bound
not
xchg
call
or
dec
call
pop
ja
adc
cmc
jl
xor
dec
hlt
inc
jb
cmovnp
adc
in
loopne
add
push
add
mov
iret
jno
jl
clc
pop
aam
nop
xor
pop
or
mov
in
call
xor
je
cmp
and
or
push
sbb
test
jmp
sub
xchg
sbb
cli
push
fild
movs
push
sub
mov
xchg
out
outs
stos
jbe
inc
clc
pop
pusha
jnp
jne
xchg
mov
fwait
and
mov
lods
cmp
enter
cmp
fild
push
push
or
and
mul
mov
dec
jp
mov
scas
add
xchg
cmp
lods
push
pushf
xchg
aad
push
and
pop
and
out
pop
shr
dec
and
jnp
(bad)
dec
pusha
push
in
fldenv
hlt
adc
or
jb
bound
shr
call
xchg
mov
in
repz
and
or
inc
push
into
sub
jmp
and
or
mov
and
inc
add
push
dec
jmp
cmps
push
(bad)
ins
and
pop
mov
mov
mov
movs
fstp
cli
test
xor
mov
jmp
jmp
aam
sbb
lds
aas
mov
iret
pop
pop
movs
push
adc
mov
inc
dec
ret
mov
cmps
cmp
or
loop
add
loope
arpl
sbb
jbe
(bad)
mov
test
adc
cmp
and
ins
idiv
adc
inc
outs
data16
es
call
xor
leave
cmp
dec
fcom
retf
push
sub
test
icebp
popa
mov
iret
inc
push
popa
hlt
cld
adc
push
loopne
mov
stos
jecxz
pop
fs
pusha
jg
mov
push
mov
arpl
inc
xchg
and
push
int
xchg
adc
ss
(bad)
iret
or
pop
sbb
sbb
xor
mov
cld
mov
pop
xchg
lds
test
xchg
sub
dec
test
xor
test
inc
aad
jmp
add
cdq
jb
jmp
sbb
cmc
fwait
je
daa
mov
cmps
mov
xchg
sub
add
push
xchg
je
shl
cmp
out
push
(bad)
adc
mov
stc
imul
fdivr
push
or
jae
dec
xchg
sub
movntq
ins
fadd
and
ficom
dec
test
ins
ret
add
inc
loopne
mov
pop
push
mov
xchg
inc
and
(bad)
mov
outs
ret
std
add
mov
loope
hlt
sbb
pushf
and
loopne
xchg
pop
mov
jnp
lds
iret
sub
inc
fistp
(bad)
push
fsubr
sar
sbb
inc
div
call
xor
mov
pushf
dec
out
das
aas
and
shr
push
test
aaa
push
dec
mov
push
mov
push
or
and
lods
sub
(bad)
(bad)
pop
adc
jb
fldl2t
retf
pushf
cmp
mov
mov
xor
pusha
jnp
adc
xchg
sub
add
sbb
xchg
jne
loop
sbb
jg
ins
test
mov
xchg
or
mov
adc
(bad)
rol
mov
ret
xor
icebp
xor
or
and
icebp
popa
outs
in
push
mov
mov
and
jmp
jmp
add
xor
int3
(bad)
mov
push
inc
into
jmp
mov
xlat
cmp
les
sub
bound
pop
dec
fs
ja
mov
pop
sub
xor
dec
outs
or
test
sti
and
in
addr16
dec
jmp
cld
je
dec
cmps
in
imul
int
movs
mov
and
loopne
std
lea
fistp
mov
jle
add
or
adc
adc
adc
fdivr
movs
retf
iret
test
dec
dec
sub
cdq
dec
pushf
push
and
pushf
iret
jae
inc
cmp
(bad)
fistp
push
adc
pop
cmp
xor
scas
xor
movs
int
jae
xor
test
sbb
into
test
add
cmc
sbb
loopne
into
add
push
jmp
sub
call
fisub
mov
add
sbb
js
xchg
push
imul
fst
sub
pop
sub
or
xchg
fmulp
sti
push
add
enter
mov
push
shr
xor
xchg
es
or
and
fmul
adc
mov
jbe
and
or
dec
jmp
pop
or
cmp
sub
sub
and
or
lods
jne
pop
cmp
or
ror
rcl
inc
in
sahf
dec
lods
fdivr
dec
shl
nop
add
enter
(bad)
cmc
jge
gs
retf
xlat
inc
mov
sahf
and
xor
mov
pop
hlt
sub
loop
xor
in
cdq
popa
mov
retf
cmp
push
push
mov
lods
cmp
pop
sbb
sbb
sbb
lods
or
scas
gs
repz
adc
movs
imul
sbb
xor
les
ins
(bad)
push
pop
in
mov
retf
mov
inc
adc
adc
xchg
sub
cmps
enter
xchg
cli
xor
js
sub
mov
not
mov
fstp
jae
xor
sbb
sbb
pop
cmp
shl
mov
add
xor
xchg
ss
fidiv
call
aam
pop
mov
out
xchg
popa
retf
or
and
jbe
xor
call
sbb
cmps
adc
(bad)
pop
in
sbb
mov
retf
lods
cs
inc
bnd
pop
mov
mov
dec
xchg
cmp
mov
push
call
in
(bad)
or
mov
xchg
dec
sub
add
sub
ins
or
and
iret
out
xor
jecxz
push
loop
xchg
or
ja
mov
fidivr
inc
ja
pop
test
sub
push
sete
sub
jno
scas
clc
pushf
lods
loopne
stos
call
jno
scas
mov
jg
pop
xchg
pop
or
add
push
jns
movs
jp
fisub
outs
mov
bound
lods
dec
mov
and
int
xor
pop
xchg
js
es
cmp
jno
nop
test
jb
xchg
jns
push
ins
outs
add
cmps
jbe
test
or
mov
sub
xchg
aas
xor
mov
sbb
sub
jbe
imul
xchg
add
pop
or
mov
je
dec
sbb
jmp
fbstp
mov
mov
and
scas
outs
jmp
popf
or
cmps
cmp
dec
sbb
je
icebp
push
jns
pop
cmp
bound
fist
jle
pusha
inc
inc
dec
sbb
sbb
dec
mov
sub
repnz
sub
movs
(bad)
pop
add
clc
jns
adc
popa
ffree
bound
retf
or
push
adc
jle
sbb
std
jbe
push
pop
and
ret
enter
in
out
jns
xor
jmp
fadd
sub
mov
inc
jmp
jno
popa
and
or
cmp
inc
mov
fbstp
push
mov
sub
sbb
mov
in
sub
push
add
ins
fs
push
mov
inc
mov
mov
xor
cmp
sahf
outs
xor
adc
cmp
iret
enter
stos
jb
cwde
into
sar
jne
pop
out
adc
push
pop
pusha
ss
mov
test
test
dec
xchg
pop
sub
stc
movs
mov
lds
jmp
or
mov
pop
adc
xchg
mov
and
or
fcmovb
movs
call
xchg
sub
scas
add
shl
test
je
test
fisttp
pushf
add
cmp
push
mov
test
jmp
test
dec
jmp
repnz
je
fs
pushf
dec
fst
(bad)
xor
fsubp
and
add
mov
les
mov
xchg
(bad)
nop
pop
loop
popf
xchg
lahf
xor
fidiv
int
shl
iret
mov
adc
sub
xchg
mov
sbb
ss
imul
sub
xlat
lea
adc
popa
clc
loope
mov
aaa
retf
addr16
jbe
jo
mov
mov
cdq
pop
mov
or
inc
lock
xchg
cmp
inc
ror
sub
mov
(bad)
mov
div
imul
out
adc
sbb
jnp
mov
mov
push
jbe
mov
leave
rcl
sub
cmp
je
push
adc
mov
mov
adc
lock
mov
or
(bad)
ror
and
cmp
retf
dec
cmp
add
sub
or
sub
push
jbe
mov
lock
adc
rcr
ins
mov
daa
add
mov
inc
xor
and
pop
fiadd
shl
sub
or
sub
(bad)
jl
mov
xor
shl
out
enter
jno
xor
xor
std
xlat
xor
inc
push
jmp
(bad)
std
cmps
dec
outs
sbb
mov
dec
mov
sbb
xlat
lds
pop
pushf
out
add
mov
out
je
mov
sbb
stc
dec
into
retf
xchg
popf
inc
das
xchg
fdecstp
and
cli
stc
bound
stos
lea
into
mov
sahf
imul
pop
neg
in
cmp
cdq
push
lock
cmp
aam
test
push
ds
clc
xor
jnp
mov
dec
je
cmp
mov
rcl
and
mov
sub
xchg
dec
adc
push
loopne
cmp
pop
cmps
adc
fldcw
inc
and
in
xor
push
shl
fild
ins
mov
enter
xor
lods
inc
xor
sbb
(bad)
push
mov
pop
and
jmp
gs
bnd
sar
push
jbe
add
or
jae
add
jae
das
sub
xor
icebp
popa
pop
push
inc
mov
sub
xor
mov
jmp
adc
clc
pop
xor
popa
fwait
hlt
loopne
stos
or
imul
pcmpeqd
mov
cmc
push
sbb
in
fsub
pushf
xchg
lods
sbb
adc
push
mov
jnp
sub
ins
shl
addr16
dec
inc
mov
push
pop
mov
int
adc
adc
and
xchg
out
mov
xchg
add
out
bound
je
int
arpl
adc
mov
mov
jp
or
dec
pop
retf
or
lahf
fwait
jb
mov
retf
jge
dec
mov
dec
enter
scas
pop
std
mov
fild
pop
ss
cmp
mov
mov
daa
aam
mov
mov
stos
inc
pop
xchg
mov
mov
and
or
fisub
cmp
jmp
in
imul
mov
dec
jne
in
pushf
xor
mov
jle
sub
xchg
add
xor
fdiv
cwde
cmc
aaa
call
xchg
mov
vpsubusw
in
(bad)
fstp
mov
push
mov
ins
out
aam
dec
dec
and
inc
mov
sub
and
sub
xor
adc
fsub
jne
push
ins
mov
cmps
mov
addr16
es
jmp
shl
sub
xor
das
inc
test
iret
add
push
mov
cmps
jns
mov
mov
sub
adc
push
fcom
push
inc
stc
outs
mov
retf
push
ret
push
rol
sub
fnstenv
fnstcw
out
dec
pop
jnp
or
outs
xlat
clc
les
mov
jl
das
add
sbb
retf
pushf
cmp
jo
outs
jbe
mov
sub
dec
movs
inc
mov
add
ds
adc
sub
add
fwait
jmp
mov
or
inc
and
xor
xor
or
push
sub
xchg
and
sub
push
fwait
ins
pushf
sbb
pusha
ins
push
push
bound
xchg
or
xchg
inc
lods
xchg
(bad)
out
test
ret
mov
mov
in
(bad)
push
adc
sub
jp
cmp
mov
sbb
lea
(bad)
sub
xor
push
out
mov
jbe
out
leave
pop
popa
movs
dec
xchg
xchg
and
data16
push
call
or
imul
cmp
js
dec
mov
add
xchg
rol
movs
push
mov
push
and
or
dec
dec
sbb
or
fisttp
dec
int
fldenv
mov
ss
sub
inc
ds
sub
fs
clc
cmp
mov
and
fild
imul
movs
arpl
mov
push
xor
clc
xor
adc
sbb
sub
xchg
call
in
scas
fmul
cmp
inc
test
jecxz
xchg
addr16
add
adc
mov
daa
mul
loop
sbb
scas
cmp
(bad)
xchg
lods
jbe
rol
adc
mov
dec
cmp
or
and
and
dec
and
pop
stc
pop
pop
ins
shr
(bad)
rcr
dec
cdq
cmp
loope
mov
mov
inc
or
in
jmp
in
xchg
(bad)
mov
push
in
push
and
sti
in
jmp
call
adc
pop
push
push
arpl
lahf
mov
lea
nop
fld
jne
inc
icebp
fcom
pop
push
sbb
cdq
clc
mov
jle
mov
cmp
movs
mov
xchg
sti
dec
or
cdq
xchg
pushf
inc
clc
add
test
data16
xor
fwait
jge
or
cmc
(bad)
std
lar
jp
scas
repz
(bad)
clc
cmp
cmp
shl
xchg
mov
es
lods
das
inc
leave
adc
bound
xchg
xor
push
or
jge
pop
dec
aam
xchg
adc
retf
sti
inc
cld
mov
pop
or
lea
test
adc
mov
pushf
jge
push
xchg
add
push
add
fiadd
xchg
fwait
outs
fucomi
ror
mov
cmp
and
je
popa
jnp
bound
stos
jb
inc
inc
sbb
lods
xchg
adc
or
or
adc
ror
dec
mov
call
cwde
fwait
loope
stc
cmp
das
les
stos
(bad)
in
push
sub
mov
push
cdq
cmc
(bad)
int3
cmp
cld
lods
aad
std
push
xchg
lea
mov
pop
sbb
sbb
sub
sahf
push
xchg
out
push
das
icebp
ss
mov
xor
(bad)
jnp
mov
jb
mov
fimul
movs
sbb
pop
add
test
inc
(bad)
jbe
xchg
jns
mov
jns
mov
push
mov
daa
rcl
not
pop
sub
mov
imul
xor
(bad)
gs
addr16
sbb
(bad)
lahf
stc
test
pop
(bad)
ds
(bad)
xor
jecxz
sub
loope
mov
xor
sbb
clc
test
sub
stos
cmp
test
(bad)
fdivr
leave
adc
and
(bad)
sbb
mov
dec
leave
es
mov
fs
xchg
add
les
ficomp
mov
out
sti
int
fimul
es
pop
jl
push
(bad)
mov
outs
jecxz
xlat
lock
test
and
mov
in
sahf
or
into
xchg
mov
sbb
or
scas
retf
xor
sbb
mov
ds
push
pushf
cmp
push
cmp
cmp
pop
rcr
xor
sets
jo
or
cmp
jno
push
out
int
out
addr16
lea
jle
fistp
mov
sub
retf
loope
fld
icebp
push
mov
pop
cld
adc
ret
sbb
jb
ja
jo
stc
fadd
in
mov
and
shr
call
inc
jle
scas
push
push
retf
mov
(bad)
idiv
(bad)
pop
pusha
and
inc
xor
jno
lea
dec
ret
rcl
int3
test
inc
mov
je
daa
imul
xchg
mov
ret
sub
shl
xor
dec
js
cmp
push
(bad)
movs
or
stos
adc
leave
in
dec
push
jg
popf
scas
lds
(bad)
adc
(bad)
int3
iret
mov
cmp
push
adc
push
lock
aaa
ss
rcl
mov
fdivr
inc
icebp
mov
sub
xor
jb
mov
int
mul
mov
or
imul
or
stos
sbb
test
and
mov
mov
adc
xor
lods
pop
xchg
rol
sbb
into
div
add
and
addr16
mov
call
sub
ret
xlat
lds
add
es
sub
enter
xor
in
xor
sbb
rol
dec
loopne
pop
jge
aas
leave
sbb
popf
sbb
imul
xor
mov
adc
les
pop
nop
jecxz
and
sub
loop
xchg
fcomp
pop
sub
ret
inc
ja
cmc
add
mov
jecxz
sub
div
popa
mov
jl
xchg
jle
nop
xchg
into
sub
sub
inc
jno
xchg
pop
inc
imul
ffree
fnstcw
or
hlt
push
pushf
jp
ja
ja
cmp
sbb
or
arpl
push
imul
bnd
sbb
jno
inc
mov
dec
sbb
das
mov
add
ds
jno
ss
stc
lea
dec
pop
paddsw
(bad)
push
addr16
add
stos
mov
mov
adc
and
add
pop
jecxz
and
ins
xchg
ss
pcmpgtw
loopne
cmps
push
cmps
dec
xchg
movs
mov
sub
mov
dec
mov
mov
into
inc
mov
fwait
sar
pop
pop
and
fld
jnp
mov
test
xor
and
mov
pop
dec
jmp
std
mov
popa
(bad)
popa
ins
push
aad
(bad)
mov
mov
pop
test
xchg
mov
mov
push
cld
ins
loop
push
nop
sub
xchg
retf
mov
stc
shr
cld
mov
cmp
or
or
shl
in
sub
not
clc
popf
int
lahf
(bad)
push
mov
adc
fst
jle
pop
add
cmps
inc
mov
xor
push
xor
inc
and
mov
add
mov
(bad)
test
mov
les
cmp
test
mov
fsub
(bad)
in
mov
pop
xchg
scas
mov
mov
sti
xor
xchg
pop
push
xchg
cs
cdq
shr
and
ret
jmp
jne
xor
out
sbb
je
add
aaa
(bad)
xor
jb
xchg
inc
add
addr16
xchg
pop
out
xor
mov
ret
pop
mov
push
cmp
repnz
dec
push
call
add
test
movs
leave
ror
mov
inc
out
sub
pop
call
jp
add
aam
test
lea
mov
mov
rcr
outs
push
cwde
cwde
je
gs
lock
pop
ret
loop
pop
mov
mov
fwait
add
jno
sub
mov
adc
pop
jbe
loopne
and
xor
arpl
in
dec
sbb
lock
(bad)
sub
sub
jbe
sub
aam
dec
mov
inc
and
and
pop
adc
cwde
iret
add
lahf
pop
mov
int
inc
and
ret
xchg
dec
push
pop
jl
aaa
in
and
xchg
out
pop
cmp
cs
xchg
in
or
mov
sub
sbb
enter
nop
icebp
xchg
bound
hlt
jmp
(bad)
loope
mov
test
sbb
sbb
sti
pop
pop
fdivr
adc
pop
cli
jae
cmp
(bad)
push
ror
cmc
addr16
xlat
arpl
(bad)
movs
mov
mov
leave
retf
(bad)
pop
clc
cmp
mov
sbb
xlat
movs
inc
mov
and
jne
jo
rol
mov
xchg
in
(bad)
aam
cwde
jecxz
popf
xchg
pop
out
and
clc
in
shr
bound
in
push
adc
mov
push
and
cwde
in
(bad)
pop
imul
pop
enter
mov
sbb
adc
mov
rcl
xchg
pop
enter
das
pop
dec
shl
test
push
mov
iret
sahf
mov
cmps
enter
and
jns
mov
cmp
sub
cmps
jno
mov
and
call
lods
mov
and
mov
xor
cmp
movs
adc
adc
pop
adc
ret
mov
cmp
pop
mov
fidiv
loop
cs
pop
fs
(bad)
dec
xchg
pop
aas
bsr
mov
pop
(bad)
dec
fdivrp
test
dec
movs
addr16
jbe
adc
xchg
xor
lods
(bad)
shl
mov
push
dec
(bad)
loop
std
mov
inc
aam
add
ss
int3
sub
mov
xchg
in
pushf
ins
jo
out
test
out
mov
xor
stc
mul
lds
fdivr
pop
sub
int3
test
daa
jp
cmp
adc
fisub
enter
clc
in
push
mov
rcl
(bad)
aas
sti
cmp
movs
inc
dec
rcl
in
or
sbb
mov
call
shl
outs
lahf
mov
pop
pop
movs
sbb
mov
push
loopne
pop
pop
cmps
sbb
adc
pop
jno
adc
call
xchg
retf
sahf
sbb
mov
fdiv
sbb
je
cmp
out
stc
and
and
mov
mov
sbb
xor
jecxz
retf
xchg
cmc
std
or
and
mov
clc
sbb
scas
in
pop
cld
or
add
sbb
pop
mov
add
stos
cmc
jo
sahf
or
call
es
xchg
fwait
popf
mov
xor
sub
rcl
pop
and
fcomp
pushf
sbb
fist
mov
pop
and
push
rol
pop
sub
repz
dec
mov
xchg
sub
daa
jmp
mov
ins
mov
sub
dec
aas
add
mov
in
inc
idiv
pop
lods
outs
sbb
and
shl
shl
mov
or
sti
repz
aad
popf
std
and
pop
pop
or
xor
mov
cdq
pop
xor
cmc
fsub
inc
stc
sbb
xor
cmp
pop
mov
(bad)
into
pop
xor
sub
(bad)
cmps
pop
fwait
push
ret
sbb
mov
pop
xchg
pop
sub
cmps
sbb
mov
xor
imul
fisttp
cs
dec
pop
add
xor
add
and
pop
or
add
sub
cmp
mov
adc
mov
mov
sbb
xchg
inc
in
xor
lea
sub
or
ins
test
rcl
(bad)
je
lods
out
mov
cmp
rol
out
jmp
add
add
pop
stos
aas
mov
call
fiadd
or
jp
push
xchg
xor
inc
cwde
xor
mov
pop
rcl
or
ins
sub
pop
and
aad
test
jle
test
nop
inc
adc
fmul
xchg
jae
mov
outs
xchg
fnstcw
lea
pop
mov
scas
add
mov
imul
adc
xchg
fcom
cmps
sahf
mov
mov
pop
push
ret
mov
and
cmps
mov
cmp
pop
and
cmp
mov
mov
movs
stc
icebp
and
or
push
retf
add
mov
inc
std
sub
pop
cmp
jne
loope
and
out
cdq
or
loope
mov
mov
pop
xor
sar
cld
sar
jge
loope
mov
inc
mov
rcl
out
addr16
xchg
and
lods
(bad)
inc
outs
sub
sbb
inc
fimul
xlat
mov
in
es
in
stc
xchg
mov
dec
les
xor
adc
pop
push
ja
std
mov
imul
or
into
mov
shr
push
pusha
mov
mov
fnstsw
mov
fnstenv
xor
sbb
jmp
pop
jmp
pop
mov
dec
(bad)
inc
lods
push
pshufw
and
fs
and
nop
movs
aas
mov
and
mov
sub
inc
int
aad
xor
cmp
test
ret
pop
(bad)
jo
cld
jb
lahf
xchg
cld
and
mov
outs
mov
xchg
jl
pop
hlt
add
pop
shr
ret
bound
nop
pop
ror
cmps
ins
sub
or
pop
cmp
pop
fdivp
add
mov
push
es
mov
dec
push
lods
idiv
repnz
outs
sbb
lock
int3
mov
xchg
push
inc
sbb
arpl
cwde
jle
jl
push
repz
and
xchg
xchg
jb
into
push
shr
pushf
jl
or
or
imul
and
inc
jo
cwde
adc
loop
adc
or
pand
test
xchg
leave
jp
iret
arpl
add
dec
aaa
sbb
popf
push
jmp
push
or
sbb
dec
mov
xor
xor
fbld
sbb
cmp
jbe
fcom
bound
addr16
jns
xor
sbb
push
gs
data16
mov
shl
js
aas
iret
shl
loope
dec
dec
xor
int3
aas
popa
xchg
mov
loope
(bad)
jp
mov
out
adc
pop
jno
add
jecxz
add
rol
cmps
xchg
push
xchg
stos
cmp
push
fdiv
ret
xchg
xchg
push
adc
(bad)
(bad)
dec
mov
mov
test
ins
adc
xor
mov
pop
not
fist
loope
mov
cdq
out
sub
jl
in
xchg
push
ins
push
movs
or
lock
mov
das
xchg
and
xor
aas
pop
clc
adc
scas
add
jo
dec
push
adc
shr
call
pop
inc
in
adc
mov
mov
dec
jo
push
fcmovu
xor
adc
sbb
sti
retf
popf
(bad)
repnz
addr16
xchg
imul
jmp
jp
push
cmp
fisttp
inc
rcl
adc
dec
xchg
jl
and
(bad)
lods
sti
js
(bad)
and
xchg
out
sub
call
push
(bad)
out
pop
and
cmc
jmp
ss
push
sub
add
int3
add
push
jno
adc
(bad)
jnp
sar
cmps
int3
jb
neg
and
sub
xchg
cmp
jne
test
adc
push
and
add
add
out
xor
xchg
fcomp
inc
mov
call
and
and
fstp
fiadd
adc
scas
call
inc
dec
mov
inc
loope
xchg
jno
xchg
aad
call
pop
and
outs
mov
in
mov
outs
mov
mov
leave
and
jp
mov
sbb
adc
loopne
add
test
mov
in
popa
jle
stc
shl
inc
les
mov
cmps
ret
rcl
mov
mov
push
push
lock
mov
repnz
fwait
iret
jle
sbb
bound
rcl
mov
shr
lahf
xor
call
aam
lods
cli
rol
pop
movs
xchg
mov
shl
movs
adc
pop
int3
mov
mov
arpl
mov
mov
or
retf
out
sub
lods
or
pop
cli
leave
xchg
xchg
jns
mov
sahf
jge
sub
int3
xchg
add
jl
pop
add
add
stc
ret
cmp
cli
mov
out
stc
mov
xchg
dec
mov
imul
or
repz
jmp
push
pop
pusha
mov
imul
jle
pusha
push
inc
dec
loop
push
mov
fiadd
inc
jo
dec
mov
into
aaa
inc
jb
push
scas
jl
hlt
sbb
pop
cmc
or
and
sub
int
clc
push
jl
(bad)
mov
popa
hlt
clc
aad
div
movs
xor
and
xchg
pop
sar
shl
push
pop
ror
mov
push
aas
pop
ds
or
gs
xchg
js
mov
mov
out
push
push
mov
arpl
test
inc
out
cld
clc
xchg
mov
inc
jo
stos
xor
xchg
dec
test
das
xor
in
cmp
loopne
hlt
pusha
jne
fild
pop
or
dec
and
and
sti
push
fisub
xor
dec
dec
repnz
xor
(bad)
push
or
mov
mov
xor
ret
mov
in
jns
nop
cmc
imul
add
sub
pusha
or
je
add
adc
dec
test
xchg
scas
cmc
or
fs
(bad)
sub
jbe
mov
jg
hlt
adc
fcmovu
ss
leave
adc
addr16
add
fs
sar
mov
xchg
mov
mov
mov
adc
hlt
jo
fild
imul
inc
jae
and
pop
jecxz
lods
icebp
lds
jle
scas
jp
push
pop
dec
cmps
ror
mov
dec
cmp
call
or
ds
adc
in
in
sub
jge
mov
inc
stos
mov
jns
cli
stos
test
mov
dec
int3
adc
add
mov
pop
mov
xor
ror
mov
pop
xor
cmp
in
mov
and
inc
fcom
popf
sbb
es
lahf
popa
and
sar
and
add
out
xchg
jecxz
in
push
jmp
sbb
adc
rcr
in
retf
fist
(bad)
test
(bad)
jmp
js
imul
dec
push
xchg
lods
cmc
fsubrp
jno
push
or
(bad)
rcr
xor
xor
mov
lock
jae
cmps
lahf
adc
js
mov
xor
push
mov
retf
mov
dec
fisub
pop
es
cs
mov
retf
xor
mov
shr
xor
cmp
fwait
mov
cmps
jbe
mov
out
dec
pop
das
jns
adc
mov
aam
lea
fmul
xor
(bad)
cmp
aaa
xor
mov
outs
cmp
pop
rcl
lods
sbb
add
and
cmp
or
fs
mul
int
movs
sbb
pop
(bad)
push
mov
cli
stos
or
dec
(bad)
aam
xor
inc
loopne
cmp
(bad)
clc
pop
leave
mov
ds
(bad)
pop
push
scas
retf
jo
scas
test
mov
scas
cld
addr16
cmp
rol
retf
loopne
and
adc
mov
pop
inc
jl
ret
cmps
cld
cmp
mov
cdq
out
das
mov
lods
mov
inc
add
add
into
adc
(bad)
dec
outs
pop
imul
stc
(bad)
lock
(bad)
sti
fisttp
imul
cli
addr16
or
xchg
dec
call
mov
adc
jle
int
int3
dec
in
dec
push
xchg
inc
in
cdq
push
outs
dec
sbb
add
ret
addr16
push
mov
pop
fs
test
lea
pop
inc
and
cli
jb
push
lods
imul
fnstsw
mov
ret
or
test
push
nop
lock
inc
xchg
fldcw
add
stos
out
pop
mov
ret
adc
jnp
call
xchg
mov
sub
adc
pushf
mov
cmp
fucom
mov
push
retf
jbe
pop
dec
data16
adc
sbb
sub
push
mov
ror
or
mov
adc
and
loope
add
movs
fdivrp
sub
and
push
xchg
xchg
gs
mul
jno
sub
jl
loop
int3
xor
cmc
mov
pop
mov
imul
fdiv
push
xor
shl
cmp
cmp
mov
into
xlat
(bad)
pop
push
sbb
pusha
xchg
lahf
cs
push
imul
push
mov
clc
xchg
rcl
pop
and
inc
inc
push
xchg
push
out
pop
mov
ret
mov
adc
in
icebp
fcom
xchg
out
adc
xor
test
or
imul
idiv
sub
dec
inc
into
outs
and
jl
mov
ss
dec
mov
addr16
adc
sub
mov
add
and
enter
pushf
pop
adc
jo
adc
test
dec
xchg
dec
push
out
xchg
xor
jmp
inc
jnp
dec
mov
push
pop
xor
mov
nop
lds
pop
lea
fdivrp
add
daa
fwait
in
fistp
pusha
idiv
inc
jo
out
popf
lods
xor
sbb
sbb
sbb
jmp
nop
aas
fnstsw
sbb
hlt
bound
mov
mov
sub
into
test
xchg
aas
add
adc
clc
sbb
sbb
xor
inc
ret
adc
and
cmp
pushf
mov
pop
dec
rcl
(bad)
test
jmp
js
xor
scas
loopne
ret
(bad)
pop
adc
jmp
jecxz
sub
push
mov
dec
sub
shr
ret
test
jp
cmp
in
mov
sub
ins
jmp
jo
cld
loop
lds
mov
bound
and
dec
jecxz
andps
cwde
int
push
sub
test
in
adc
pop
cmps
xor
bound
adc
mov
ficom
cld
(bad)
repnz
shl
xor
xchg
sahf
push
pop
pop
data16
popf
daa
das
fcom
or
and
dec
out
fdiv
lods
dec
add
lds
jl
retf
loop
mov
pop
(bad)
and
lods
cmp
sbb
sub
aas
(bad)
sbb
lahf
pushf
(bad)
arpl
adc
add
aad
inc
cmp
in
jl
adc
mov
jp
adc
sbb
sub
mov
ret
dec
lahf
mov
xchg
cmp
fwait
cdq
inc
xlat
push
xor
mov
push
xchg
mov
cmps
mov
sti
hlt
in
xchg
push
inc
jmp
sub
jmp
dec
jecxz
stos
inc
add
mov
loop
add
lds
leave
xchg
xchg
movs
pusha
xchg
lds
pop
cdq
lahf
jns
inc
mov
or
stos
dec
sub
push
and
mov
mov
in
into
push
stos
std
inc
dec
out
addr16
repnz
outs
mov
sbb
jb
mov
enter
and
sbb
ror
xor
jo
test
mov
add
mov
mov
and
pop
or
mov
in
jbe
xchg
and
inc
(bad)
mov
xchg
scas
or
or
ins
inc
cmps
aam
inc
pop
in
ins
arpl
nop
enter
jbe
es
pusha
dec
inc
bound
or
sub
sbb
call
and
nop
dec
in
rcl
sbb
ds
jne
add
shl
leave
cli
push
jbe
scas
cld
pop
cdq
and
jg
xchg
fsubr
fpatan
xlat
mov
mov
dec
out
out
mov
rcl
cmps
fwait
sbb
in
inc
adc
pop
fiadd
dec
xor
cli
inc
and
in
pop
push
popa
lods
push
or
mov
rol
lds
test
arpl
mov
push
or
aam
scas
fstp
xchg
sbb
js
in
push
dec
cmp
sub
cmp
sub
test
xchg
dec
inc
push
clc
adc
arpl
jmp
mov
pop
pop
or
movs
mov
inc
cwde
push
mov
pop
mov
sub
dec
(bad)
or
xor
jne
arpl
in
xchg
aam
shl
mov
cs
popf
dec
xor
call
(bad)
std
fmul
shr
into
and
rcl
(bad)
adc
mov
fcomp
jmp
jmp
add
sbb
xchg
sub
dec
push
stos
pusha
adc
jnp
xchg
scas
in
pop
cmp
push
cdq
ins
shr
(bad)
fmul
int3
inc
nop
push
jmp
xor
pushf
lds
addr16
mov
stos
int3
cdq
fadd
pusha
aam
sub
mov
inc
fdivr
xor
xor
push
(bad)
fidiv
lods
fcmovb
mov
stc
jg
arpl
and
jl
adc
cmp
add
iret
inc
xchg
mov
fldpi
mov
jne
adc
out
mov
xor
inc
mov
in
push
mov
mov
scas
lss
jb
cs
jmp
int
push
xor
mov
and
in
popa
push
(bad)
adc
cmc
xor
mov
cmc
(bad)
stc
xor
es
xor
repz
sbb
sub
aam
dec
inc
jno
in
xor
bound
pop
ss
addr16
pop
lea
mov
mov
stos
imul
mov
adc
inc
imul
jmp
das
adc
push
or
cmp
sbb
inc
pusha
mov
stos
cmp
ja
mov
int
mov
dec
jg
jge
push
outs
or
jl
loopne
mov
imul
dec
mov
or
mov
and
in
pop
mov
push
adc
ds
dec
in
daa
mov
movs
inc
mov
inc
leave
scas
dec
push
pop
ins
les
int
stos
jb
shl
or
and
(bad)
mov
aad
adc
mov
test
movs
or
fnstsw
add
jo
pop
(bad)
dec
jmp
test
das
cmps
add
mov
xor
add
adc
popf
pop
fcomp
pop
enter
cmp
sbb
in
pop
pop
adc
cs
ret
lahf
stos
sar
jne
(bad)
jns
pop
and
sbb
xchg
shl
cmp
push
mov
mov
cmps
out
inc
pop
movs
imul
popa
jmp
mov
ja
mov
push
pushf
mov
mov
div
cmp
iret
mov
inc
cmp
(bad)
loop
repz
idiv
push
push
dec
ins
stc
outs
test
das
(bad)
fdivr
sub
hlt
or
jmp
nop
ja
jle
xchg
jp
and
jo
or
and
sti
dec
mov
sti
push
push
sub
sbb
movs
fs
test
retf
jl
fldcw
popf
in
mov
jne
out
aad
cmp
xor
jmp
fcomp
and
jg
dec
nop
fsubr
push
mov
leave
loopne
rcl
ja
mov
ja
cdq
xlat
mov
imul
cli
xor
aam
(bad)
mov
call
sub
cmp
sbb
(bad)
mov
jb
pop
xchg
dec
iret
adc
test
mov
xor
and
sub
es
popa
pushf
mov
das
or
push
mov
into
cmp
push
jmp
mov
sahf
cdq
sub
pop
int
mov
dec
jns
or
mov
ds
(bad)
lock
dec
and
repnz
fbstp
and
cmp
xchg
or
bswap
xchg
jmp
mov
jne
dec
dec
sbb
ins
int
icebp
mov
dec
in
mov
das
add
mov
inc
shl
sbb
hlt
call
push
ficomp
shr
nop
scas
sub
add
clc
or
mov
push
adc
and
mov
mov
adc
int
mov
mov
imul
mul
mov
iret
pop
xchg
adc
(bad)
inc
push
push
clc
pop
jbe
int3
adc
xor
sbb
imul
xlat
xorps
push
adc
jge
das
and
jnp
push
loopne
pop
or
adc
pop
add
adc
sbb
xchg
lahf
pop
test
add
je
outs
jecxz
loopne
pusha
fisttp
cs
pop
jle
push
or
repz
nop
adc
adc
sbb
xor
mov
mov
aaa
or
inc
sub
out
addr16
in
scas
aad
es
fwait
sub
pop
ins
mov
cmp
in
jl
(bad)
loope
stos
loope
fidiv
jmp
leave
mov
movs
lods
sbb
pop
les
sub
ins
nop
mov
mov
inc
xchg
dec
push
pop
out
push
test
and
push
popf
test
bound
pop
imul
push
hlt
(bad)
jmp
ss
fs
cmp
jge
aas
jo
popa
jecxz
out
sub
jbe
lods
stos
push
adc
xchg
or
sbb
popa
sbb
pop
cmp
dec
xor
sub
cmc
mov
push
sub
mov
rcl
popa
mov
test
scas
std
inc
dec
pop
add
nop
jl
and
or
mov
inc
rol
add
xchg
and
fisttp
mov
push
frstor
pop
shr
push
(bad)
test
out
test
dec
jl
mov
shl
xor
add
or
pop
jno
mov
cmps
aas
mov
cmps
shl
mov
sbb
mov
push
jo
addr16
cmp
sub
xchg
dec
lock
(bad)
hlt
fmulp
jmp
ja
and
scas
jmp
cs
(bad)
mov
jae
xchg
pop
cs
cmps
jmp
jb
inc
cmp
jae
or
retf
dec
inc
leave
cmps
mov
and
enter
test
xchg
cld
jbe
adc
inc
pop
mov
jmp
gs
sahf
mov
adc
ret
xchg
addr16
shr
jge
mov
inc
std
pusha
xor
sbb
or
aad
add
mov
cmps
movs
fs
int
fwait
push
(bad)
popa
add
inc
test
or
sub
mov
cli
(bad)
cmp
mov
xchg
adc
xchg
xchg
xor
sbb
jge
int3
mov
pop
test
pop
ss
adc
movs
add
sbb
nop
cmp
test
jmp
or
sub
add
sub
dec
add
inc
jmp
xchg
mov
dec
out
mov
out
xor
call
sbb
mov
sub
lds
adc
add
jle
ja
dec
xchg
jmp
repz
xor
or
xchg
push
jmp
adc
sub
std
mov
xor
jnp
rol
cli
into
xor
push
out
pop
fwait
cmps
cmp
imul
pop
and
pop
jnp
and
mov
adc
push
imul
imul
das
(bad)
call
int
mov
push
xor
push
xor
cli
pop
js
shl
(bad)
fisttp
in
inc
jge
mov
jp
jmp
aad
cdq
je
call
fsubr
movs
dec
pop
dec
jno
gs
pop
and
jl
(bad)
pop
add
or
fdivr
sbb
leave
or
movs
fsub
idiv
xor
fcomi
repnz
inc
or
push
rcr
mov
ret
stos
enter
mov
(bad)
push
fistp
or
into
idiv
loope
push
dec
push
mov
cli
aad
shl
bswap
xchg
ficom
sbb
pop
data16
push
or
sub
xor
out
cmp
dec
(bad)
jge
daa
arpl
out
shr
lods
stos
int
je
jbe
popa
ins
popf
pushf
jne
stc
aaa
jmp
test
repnz
in
dec
out
cmps
dec
push
adc
stos
stos
mov
(bad)
shl
cdq
sbb
fld
out
cs
sbb
pop
sub
jl
xchg
mov
jmp
pop
push
add
pop
sub
ret
push
sub
imul
mov
test
push
xor
out
add
inc
int3
add
out
or
mov
int
outs
xor
jp
pusha
sbb
enter
sbb
fstp
in
stos
shl
mov
sahf
xor
imul
push
lds
and
and
cmp
mov
outs
test
jecxz
ds
xchg
(bad)
enter
mov
adc
or
pop
mov
and
daa
lock
or
or
and
mov
sbb
inc
cmc
call
jg
stos
mov
fstp
jecxz
pop
cmp
mov
pusha
mov
nop
daa
lods
and
repnz
pop
inc
outs
cld
mov
and
or
mov
and
and
ret
mov
sub
dec
mov
je
stc
inc
ret
(bad)
dec
hlt
das
mov
add
out
stc
push
fdivr
loop
cs
lea
push
xor
scas
lock
ds
cmp
mov
popa
cld
dec
mov
idiv
cmps
or
inc
cmp
std
mov
mov
or
rol
movs
push
iret
fwait
mov
fisttp
scas
push
fld
push
pop
mov
or
cmc
push
mov
mov
pop
pop
add
pop
and
cmp
pop
mov
mov
into
dec
rol
movs
jbe
mov
mov
push
mov
pop
cmps
(bad)
data16
mov
jmp
mov
aaa
fwait
xchg
rcl
aad
sbb
dec
and
shl
(bad)
fiadd
int3
into
mov
sbb
cld
push
bound
imul
adc
add
loopne
rcl
or
cdq
add
gs
mov
std
cdq
mov
push
or
cdq
dec
cmp
sbb
cmp
adc
mov
jno
push
sbb
xor
loope
pushw
imul
xchg
adc
aad
sub
xchg
outs
test
pop
and
or
mov
or
gs
dec
adc
mov
popf
adc
mov
cwde
sbb
movs
or
inc
icebp
sti
and
in
jmp
and
sbb
pushfw
cwde
lock
mov
inc
pop
jge
push
hlt
aam
cmps
clc
fcom
lods
xchg
int
lods
mov
sub
cli
push
mov
sbb
loop
in
fmul
mov
mov
into
xchg
lahf
push
push
arpl
pop
pop
sbb
call
outs
leave
(bad)
xlat
rcl
and
pop
mov
push
xchg
mov
xor
jo
or
mov
fisttp
aad
cmps
shl
mov
pop
repnz
mov
sbb
dec
mov
cdq
or
jo
or
cmp
push
dec
stc
cld
mov
jecxz
or
sub
push
icebp
fistp
inc
leave
and
push
or
jno
(bad)
mov
fadd
fldenv
(bad)
mov
lds
and
sysret
mov
mov
sub
sar
stos
inc
out
movs
(bad)
pop
or
in
xchg
ficom
fistp
popf
loope
xor
ja
(bad)
aad
int3
popa
int
jmp
int3
push
pop
dec
mov
and
mov
popa
mov
jne
jns
jo
nop
dec
push
lds
jmp
addr16
add
int3
sub
inc
xchg
cmp
add
fs
mov
cmc
rcr
mov
sbb
jae
mov
and
fcom
mov
inc
adc
aad
xchg
push
leave
lods
mov
sahf
stos
ret
and
pop
cmp
and
(bad)
jae
add
xchg
rcl
sbb
loope
dec
cmp
cdq
pop
idiv
rol
push
jae
xchg
or
dec
xor
mov
sub
shl
out
les
cmp
jl
in
gs
cmp
enter
mul
xor
pusha
(bad)
cs
push
hlt
call
test
mov
out
bound
sahf
dec
test
test
lods
addr16
adc
dec
mov
mov
fwait
or
sahf
add
adc
or
mov
push
push
ss
xor
lock
or
aaa
repnz
cmp
call
fs
adc
daa
fsub
mov
dec
dec
sahf
into
or
adc
mov
xor
jb
and
xchg
pop
jmp
or
fiadd
ins
xor
fstp
or
ins
lock
daa
mov
pop
cmps
ret
and
les
mov
pushf
(bad)
fmul
arpl
test
mov
out
jo
add
js
adc
mov
out
test
pop
sub
jmp
and
out
fnstenvw
mov
std
lds
std
(bad)
sbb
or
lock
xor
nop
adc
jle
and
inc
cmp
mov
out
call
and
jl
test
inc
stc
jl
cs
in
jb
retf
adc
hlt
retf
mov
jmp
test
push
imul
mov
es
call
jp
pop
inc
dec
mov
pop
sbb
pop
jne
jle
imul
push
push
push
fmul
cdq
jmp
and
cmp
and
dec
jp
repz
inc
inc
pop
or
jne
xor
jecxz
xlat
leave
out
neg
cmp
dec
xor
je
ss
lds
and
jmp
(bad)
in
dec
inc
sub
icebp
ret
cmps
and
jmp
fnstcw
mov
fidiv
xchg
rol
dec
(bad)
daa
cs
xor
push
mov
or
jp
add
xchg
xor
out
push
dec
les
dec
cmp
pop
xor
sahf
and
mov
fild
int3
cmp
nop
lds
out
not
and
sub
dec
dec
mov
in
shr
test
mov
xchg
popa
lods
push
div
or
mov
sub
cmps
fs
mov
cld
add
retf
jo
xchg
cmc
outs
dec
leave
mov
scas
in
mov
(bad)
ret
test
popa
test
inc
loopne
fimul
ficom
and
aam
xchg
mov
hlt
jp
shl
xchg
pop
sti
rcl
push
sbb
push
sub
cs
jg
jo
adc
jl
or
mov
mov
push
dec
pop
mov
ja
(bad)
jb
das
call
cmps
sub
xchg
xor
bound
lods
fyl2xp1
adc
(bad)
test
mov
iret
scas
pop
mov
aad
cmp
sbb
pop
push
imul
jp
repnz
xlat
push
test
lods
xor
dec
daa
dec
popa
inc
cmp
ja
test
in
cld
mov
fsub
sub
ret
lods
jnp
add
ins
(bad)
fld
sub
jg
dec
call
out
hlt
sub
push
lock
mov
mov
inc
cwde
xchg
xchg
push
int3
jnp
jp
inc
jmp
sar
sub
jg
cmps
xchg
repnz
icebp
jge
icebp
and
sbb
mov
or
paddsb
(bad)
xchg
repz
movs
es
jnp
(bad)
sbb
fs
dec
mov
das
push
adc
pop
jbe
sahf
jl
fstp
push
add
test
daa
out
sub
sub
in
or
xchg
retf
cmp
test
pop
icebp
push
dec
jne
push
shl
fisubr
lds
hlt
or
scas
dec
mov
stc
fsub
ret
jle
xchg
stos
push
scas
out
inc
jl
imul
js
fnstcw
lods
adc
dec
add
or
ret
sub
mov
mov
pushf
inc
jbe
push
dec
retf
jmp
cmp
sub
and
pop
aas
mul
mov
inc
mov
xchg
rcl
int
push
pop
ror
pusha
jg
movs
sub
cmp
xchg
pop
rol
or
lods
push
mov
xchg
inc
idiv
test
push
mov
mov
xor
retf
mov
not
ret
mov
sbb
imul
push
mov
rcl
pop
call
enter
jb
mov
out
push
push
inc
test
mov
fdivrp
loope
mov
rol
ins
in
jmp
repnz
sub
int
js
je
fwait
icebp
rcr
loop
mov
mov
jmp
repz
das
dec
movs
nop
sub
test
dec
and
adc
add
pop
and
and
jno
mov
adc
inc
ret
sub
sub
mov
orps
popf
inc
add
hlt
leave
hlt
mov
repnz
sub
xlat
icebp
cli
pushf
cs
and
xchg
je
jno
push
jne
xor
or
pop
mov
cli
mov
cli
fwait
pop
sub
inc
jnp
sub
ficom
pop
imul
adc
sbb
rcr
imul
loop
je
mov
in
retf
enter
pop
sub
or
adc
jb
mov
jns
es
fwait
repnz
stos
iret
je
outs
dec
xlat
pop
mov
repz
out
in
jge
lock
jmp
leave
sar
es
inc
out
sub
push
aas
sbb
loopne
xor
scas
pushf
inc
ret
mov
add
cmp
in
jno
and
pop
mov
push
pop
or
and
jb
xor
sub
add
adc
sub
es
bndstx
cmp
dec
xor
cs
std
mov
outs
mov
and
or
icebp
fistp
push
ds
inc
dec
dec
stos
add
sbb
shr
hlt
mov
add
mov
sub
push
imul
rep
mov
stos
cmp
lock
aas
outs
sti
cmp
mov
push
(bad)
cmc
cmc
hlt
repnz
stos
fwait
pop
movs
mov
cmp
xchg
iret
(bad)
and
les
and
adc
stc
pop
cs
push
push
inc
int3
in
js
mov
mov
out
cmpxchg
repz
pusha
pop
adc
xor
sub
sub
enter
dec
add
movs
push
cmp
mov
fisubr
neg
mov
popfw
loop
sbb
mov
jp
dec
test
ins
xchg
aas
call
xlat
dec
aas
bound
inc
pop
in
mov
fistp
xchg
xchg
stos
inc
arpl
mov
(bad)
inc
sbb
jge
sbb
(bad)
out
cmp
lock
bound
out
out
add
(bad)
inc
mov
out
jp
sub
jnp
mov
xor
mov
ds
cmp
sahf
scas
mov
dec
mov
pushf
push
lds
icebp
or
xchg
pop
std
hlt
(bad)
cmp
fbld
cmp
xlat
cmps
push
add
or
mov
dec
int
clc
aaa
add
mov
test
lock
sub
and
(bad)
mov
call
leave
or
cdq
mov
push
(bad)
aaa
push
bound
std
xchg
aam
add
std
inc
push
cmc
std
xor
pop
mov
(bad)
mov
sbb
rol
in
out
add
outs
icebp
jnp
mov
cli
mov
inc
jp
mov
jae
dec
daa
lahf
pop
jmp
xchg
cli
pop
ins
and
fild
lods
rcr
fadd
dec
pop
(bad)
inc
add
fmul
cmp
es
mov
test
daa
loope
rcl
jecxz
and
jmp
pop
(bad)
sbb
cli
mov
inc
test
adc
cmps
pop
mov
out
push
sbb
and
ret
ret
loope
arpl
mov
inc
push
mov
push
mov
push
push
xor
stc
fsub
dec
or
push
inc
and
repz
ins
repnz
or
pop
push
push
pushf
jo
pop
mov
sub
enter
mov
pop
mov
fld
gs
(bad)
mov
loopne
pushf
sbb
lea
inc
mov
pop
rcl
out
outs
lea
ud2
ins
inc
gs
int
xlat
add
retf
out
mov
pushf
scas
xchg
sbb
pop
ins
ins
test
enter
jmp
bound
fs
cmp
in
js
sahf
sub
aaa
adc
jnp
inc
jp
(bad)
xchg
mov
cmp
sub
fadd
retf
(bad)
xor
or
and
leave
push
std
in
cmps
mov
inc
je
jnp
mov
mov
cmp
sub
mov
xchg
jg
inc
dec
fsub
push
outs
fisub
xchg
inc
retf
clc
test
mov
and
std
cwde
push
mov
sub
lods
push
sub
gs
sub
or
lahf
xchg
ret
pop
sahf
retf
xor
stos
xchg
daa
dec
and
jecxz
adc
mov
inc
mov
jb
les
outs
jbe
lock
loopne
ss
mov
bnd
pop
cvttps2pi
rol
popf
ins
leave
mov
and
mov
mov
cmp
dec
sahf
sbb
aaa
mov
or
xchg
pop
mov
adc
mov
mov
xchg
xchg
xor
push
pop
(bad)
(bad)
scas
inc
es
push
mov
shl
mov
out
dec
addr16
iret
int
cmps
push
data16
not
fst
lds
rol
mov
cmp
enter
sub
xchg
jmp
sbb
sahf
repnz
movs
imul
call
dec
(bad)
sti
fiadd
into
icebp
mov
ja
or
imul
and
les
push
dec
pop
rcr
sbb
test
jge
pop
cmp
ret
adc
loop
lahf
or
test
das
lods
cmc
icebp
(bad)
xor
xchg
call
stos
and
retf
sub
cmp
imul
cli
imul
sbb
mov
xchg
shr
or
shl
or
fwait
(bad)
(bad)
xchg
push
(bad)
outs
pop
ror
or
out
pusha
pop
mov
repnz
xor
retf
push
jmp
in
out
hlt
aas
mov
je
arpl
xor
push
repz
stc
jne
in
push
and
les
pop
mov
hlt
or
and
mov
inc
outs
iret
popa
outs
daa
sbb
push
sub
stc
inc
push
push
push
mov
xchg
dec
cmp
mov
in
in
or
mov
xchg
sbb
inc
stc
outs
adc
mov
mov
inc
pop
ja
rol
mov
(bad)
adc
in
push
xchg
test
mov
cmp
sahf
cmps
daa
push
jg
inc
ss
clc
cld
iret
add
push
iret
pusha
inc
sbb
mov
shl
jae
push
pop
dec
out
xor
mov
push
mov
imul
inc
pop
cld
xor
pushf
push
scas
icebp
xchg
xchg
push
nop
fmulp
push
sbb
lods
sbb
sar
cdq
mov
out
add
pop
push
rcr
test
rcl
pop
(bad)
xchg
sti
cmp
pop
scas
test
pop
jne
out
xor
aam
repnz
lods
clc
cmp
retf
les
mov
psubd
loop
mov
xchg
cld
mov
shr
icebp
jno
out
ss
jne
and
mov
cmp
push
loop
push
push
mov
xchg
push
xor
movs
inc
scas
dec
pop
out
clc
sbb
out
xchg
cmp
in
push
cmp
ds
jge
(bad)
leave
push
adc
mov
cmc
popa
add
outs
or
add
out
sub
mov
retf
dec
popf
jp
inc
pop
or
inc
add
pop
cmp
fwait
call
mov
sub
sub
jle
ret
push
call
stos
dec
ss
xchg
cli
gs
adc
cmp
mov
stos
enter
ja
repz
adc
(bad)
push
cmps
in
scas
mov
mov
mov
test
dec
lods
pop
cmp
cmp
add
cmp
pop
sub
mov
outs
push
xor
cmps
out
mov
mov
test
xchg
cmp
pop
and
lea
imul
les
enter
pop
xchg
rcr
xor
xor
bound
push
call
jle
mov
cli
dec
sub
loop
sub
cld
dec
in
jb
into
inc
std
dec
imul
repnz
mov
dec
fs
arpl
out
sub
sahf
out
sti
mov
imul
cmp
loope
into
pop
bound
out
pushf
sbb
inc
fbstp
xor
xor
in
(bad)
dec
pop
mov
in
push
mov
or
je
(bad)
(bad)
fild
dec
shl
adc
das
fwait
xchg
xchg
jno
scas
add
sub
pop
ds
outs
mov
push
dec
fst
xchg
(bad)
(bad)
fisubr
sbb
add
inc
dec
stos
mov
loop
push
add
inc
xchg
cdq
out
mov
outs
or
jecxz
mov
(bad)
mov
cmp
mov
imul
in
dec
xchg
movs
jno
dec
stos
inc
shl
push
hlt
bound
scas
pop
pop
cli
dec
and
(bad)
push
or
push
jns
sbb
stos
pop
or
pop
pop
movs
xchg
les
cmps
cmps
push
mov
fdivr
inc
popa
pop
mov
and
pop
dec
fistp
pop
test
mov
mov
dec
dec
fwait
gs
sbb
add
mov
pop
je
pop
pushf
cmp
cli
inc
ret
xchg
mov
jge
sub
mov
jmp
das
lods
pop
mov
stc
pop
push
or
repz
addr16
sbb
stc
int3
shr
fwait
cmp
dec
leave
sbb
sub
hlt
jge
dec
das
aaa
(bad)
jmp
lock
pop
sub
push
xchg
loope
int3
push
retf
jmp
push
cmp
int3
sub
push
dec
in
clc
jnp
dec
adc
into
cmps
cli
mov
inc
jnp
outs
rol
sbb
mov
mov
xacquire
test
lods
in
mov
jmp
ja
std
dec
dec
call
mov
loop
mov
cld
pop
mov
into
les
fs
adc
adc
icebp
fdivrp
adc
arpl
cs
call
clc
xchg
jnp
ret
scas
or
test
ret
mov
xchg
ins
test
jecxz
or
cs
test
aam
sti
pop
dec
cmp
icebp
sub
arpl
jo
cmp
out
mov
aam
push
neg
sub
dec
cdq
cmp
push
mov
mov
jmp
mov
fldcw
mov
test
cs
enter
adc
push
cmps
xor
into
pop
mov
ins
jmp
(bad)
mov
mov
imul
and
mov
sbb
ins
add
push
push
xor
push
addr16
repnz
sub
adc
xchg
xor
xor
jle
add
pushf
ret
mov
shr
mov
push
mov
pop
xor
(bad)
mov
xor
iret
adc
or
lods
sbb
jb
fidiv
add
stc
bound
xchg
xor
xchg
bound
setge
cmps
mov
xchg
jne
mov
or
mov
jge
or
jo
jecxz
xchg
js
jg
jmp
repnz
mov
add
sahf
sub
push
cmp
pop
loope
adc
adc
mov
fdiv
outs
test
nop
pop
add
retf
lea
sub
and
(bad)
stos
mov
pop
sbb
(bad)
iret
add
ds
ds
mov
movs
sub
ror
(bad)
mov
jnp
cmps
mov
add
cmp
jg
push
test
pop
mov
test
sub
mov
push
inc
and
stc
imul
(bad)
div
mov
cmps
stc
sbb
jle
inc
mov
ror
push
aad
ss
retf
dec
fst
dec
xchg
sar
ds
mov
sahf
retf
sub
(bad)
mov
in
ins
jne
jne
mov
xor
push
or
jp
add
iret
xlat
lds
imul
sbb
nop
push
mov
scas
sahf
daa
jp
xor
movs
cs
lea
or
das
arpl
mov
mov
sub
mov
loopne
aas
ror
mov
mov
add
jno
adc
sub
inc
dec
push
test
mov
les
xor
shl
mov
rcr
mov
inc
inc
pop
cmp
mov
sub
jle
sar
mov
cmp
cmps
mov
test
retf
dec
and
lds
add
mov
sub
rol
pop
(bad)
pop
jmp
std
mov
xchg
jns
dec
cmps
push
cmps
fmul
add
ss
retf
out
imul
jl
das
iret
aad
add
retf
leave
xor
mov
(bad)
leave
cwde
out
xor
repz
js
and
mov
mov
in
test
fdivr
jne
dec
nop
rol
not
call
xor
mov
in
arpl
mov
iret
or
jp
in
jno
shl
(bad)
ss
push
jb
ret
(bad)
cmp
pushf
mov
sub
pop
pop
in
js
dec
imul
sti
hlt
(bad)
mov
mov
mov
xchg
push
mov
push
xchg
fiadd
sti
repz
in
pusha
mov
xchg
dec
mov
mov
sub
dec
push
outs
loopne
push
out
push
js
(bad)
ds
dec
or
(bad)
bnd
in
std
mov
cmps
jo
jl
retf
iret
out
jle
dec
ret
add
fld
lock
sahf
(bad)
xchg
mov
cmp
or
lea
rcl
mov
xchg
push
(bad)
out
cmps
add
sub
add
mov
lods
imul
fwait
xchg
sbb
lock
cs
adc
js
cmc
jecxz
(bad)
xchg
std
loop
or
push
cwde
test
rcr
sahf
xchg
mov
xchg
push
or
mov
xchg
xchg
loop
mov
mov
adc
aad
mov
into
imul
dec
mov
add
adc
or
and
mov
out
and
push
mov
push
fbld
jge
std
inc
adc
cmp
mov
ret
pop
test
movs
mov
mov
dec
ffreep
loop
xchg
or
shl
inc
(bad)
mov
xchg
movs
push
sub
push
shl
sub
pop
fisub
imul
jg
loopne
jl
mov
sbb
test
cld
in
lods
mov
sahf
push
fsubr
xchg
push
pushf
movs
std
outs
pop
ins
fnstsw
(bad)
(bad)
aam
pop
ja
or
or
aas
fidiv
movs
bnd
retf
or
xchg
inc
inc
ins
mov
rcr
lahf
aad
sub
aam
shl
cmp
test
mov
test
xchg
cmp
or
cmc
imul
pop
pop
fcomp
ror
and
push
and
aad
cdq
sbb
lock
sbb
fcom
cmp
xor
dec
dec
fnsave
mov
arpl
or
pop
out
cmp
pop
mov
mov
and
sub
adc
sahf
adc
xlat
push
mov
loop
popf
sub
cmc
jg
fdivp
push
sti
inc
adc
jl
dec
lds
adc
popf
cli
loope
mov
pop
out
push
dec
scas
test
sbb
xchg
int3
daa
dec
ds
(bad)
push
das
push
cmp
lock
in
call
mov
mov
icebp
cmps
lahf
and
push
in
and
inc
outs
xchg
ficom
cmp
bound
pop
xchg
out
sahf
jae
rcr
aad
mov
xor
xor
cmp
dec
or
std
fwait
dec
int
fmul
mov
rol
dec
cmps
and
inc
(bad)
jne
fadd
lock
sub
cmp
std
pcmpgtd
cmps
pop
pop
sub
lock
fsubrp
inc
lds
fbstp
jb
and
clc
lea
jl
rol
scas
cmp
dec
mov
mov
xor
test
xor
int
scas
mov
stc
imul
xor
jmp
fmul
std
cli
dec
mov
stc
push
adc
push
movs
(bad)
dec
rcr
loope
mov
jo
js
sbb
cmps
ins
push
or
adc
rcr
pop
int3
xor
mov
mov
ds
or
idiv
push
inc
push
fwait
ret
push
leave
inc
inc
cld
adc
inc
ror
loopne
movs
imul
xchg
(bad)
cmps
jne
sbb
retf
outs
movs
mov
jecxz
pusha
(bad)
jp
pushaw
or
ja
or
cli
xor
xchg
dec
xchg
ret
sub
mov
jmp
popa
cmp
mov
ja
push
fwait
clc
cmp
arpl
cmc
lock
mov
cmps
lods
lea
fsubr
jmp
(bad)
sbb
mov
ror
push
(bad)
out
fnstcw
cld
daa
sbb
push
and
cmp
addr16
(bad)
jmp
adc
jbe
pop
loope
xchg
push
add
pop
xor
mul
out
adc
cmc
outs
loopne
xchg
or
repnz
dec
lods
and
xor
lds
xor
sbb
pop
dec
daa
sbb
int3
ss
unpckhps
popa
in
ds
pop
add
cmc
inc
jecxz
inc
addr16
mov
or
mov
add
inc
pop
mov
lods
mov
bound
call
sti
(bad)
ss
mov
mov
add
and
cmc
dec
xchg
scas
cmp
scas
cmp
rcr
out
push
push
and
xchg
outs
xor
ret
mov
imul
and
pop
xchg
dec
fdivr
fnstsw
sbb
ss
mov
mov
cdq
jmp
aam
or
retf
aad
xor
sub
rcl
aaa
(bad)
push
jnp
ins
sahf
fild
retf
call
movs
lock
ds
stos
movs
scas
js
mov
arpl
cli
ffreep
lahf
int
and
ja
(bad)
jle
cmp
and
ret
arpl
mov
push
cmp
repz
mov
cld
xor
mov
retf
(bad)
fcomi
js
add
xor
sbb
dec
out
push
arpl
ds
jmp
sbb
pusha
nop
mov
add
js
add
lea
xchg
xchg
jnp
gs
or
sti
push
inc
call
or
cmp
outs
xor
pop
(bad)
push
mov
jl
repz
xchg
fwait
jmp
mov
pop
bound
adc
mov
js
rcl
lods
dec
pop
lahf
retf
je
std
retf
into
sbb
xor
and
aad
xchg
lea
and
sbb
nop
adc
jns
mov
push
pop
lea
jbe
xor
xor
movs
popf
adc
sub
and
mov
push
dec
mov
div
mov
jbe
sub
dec
lods
and
sub
mov
cmps
repz
and
arpl
rcl
fsubr
sbb
aam
mov
xor
jp
jmp
mov
sbb
aaa
and
and
push
mov
pop
xchg
test
clc
ficomp
clc
mov
xor
test
ret
cmp
inc
jl
xchg
adc
dec
pop
or
inc
dec
cmp
adc
imul
and
aad
push
pusha
scas
dec
jno
cmp
loop
stc
ins
mov
sub
les
jecxz
cmp
and
stos
dec
mov
inc
xchg
out
bound
aam
gs
or
or
cmc
sbb
and
jbe
push
imul
inc
bound
cmp
jg
arpl
jns
(bad)
out
dec
cmp
outs
in
mov
and
inc
jb
iret
jge
xchg
fcomp
sub
mov
int
xchg
mov
pop
pushf
pop
mov
(bad)
aas
adc
and
adc
aaa
mov
mov
sub
pop
mov
push
ds
fs
jecxz
adc
jno
lock
rep
push
lahf
fsubr
jbe
les
and
movs
call
lahf
sub
and
(bad)
div
bswap
bound
pushf
add
jmp
rcl
outs
adc
cmp
push
gs
ret
loope
adc
cs
(bad)
in
(bad)
cld
mov
jae
clc
aam
fisttp
cs
xchg
jno
popf
dec
aas
mov
mov
push
mov
out
mov
and
aad
jmp
sbb
inc
cmps
imul
dec
clc
cmp
call
jns
js
test
(bad)
rcl
fbld
xor
xor
xor
xor
xor
aam
xchg
mov
test
fisttp
test
inc
xor
cmp
jae
imul
cwde
loop
retf
xchg
iret
sub
mov
add
jmp
fs
fsubr
adc
xor
mov
push
push
jmp
mov
je
xchg
sub
mov
lea
xor
xchg
test
pop
push
xchg
test
push
cmp
ds
out
xchg
jnp
fsub
push
push
pop
push
not
xor
loope
xlat
out
push
(bad)
adc
stc
mov
std
dec
ret
rcr
or
mov
inc
cld
pop
dec
push
inc
push
jae
call
enter
les
test
leave
pop
jge
test
in
pop
sub
test
jle
mov
rol
lea
scas
mov
sub
adc
les
mul
adc
ret
inc
test
mov
retf
dec
(bad)
mov
(bad)
cmp
fistp
dec
inc
cmps
pop
xchg
dec
jge
xchg
addr16
dec
retf
sbb
mov
mov
leave
pop
cli
push
popa
push
xor
loop
lea
jns
xchg
sbb
adc
sbb
or
push
aaa
and
stc
push
ret
jl
push
call
ss
and
fst
stos
clc
and
jmp
into
gs
sub
je
dec
mov
enter
cmp
aas
cwde
shr
mov
sbb
xchg
sbb
nop
int3
jbe
movs
mov
push
bsr
iret
mov
mov
inc
pop
mov
rcl
lods
inc
out
sar
mov
jg
push
je
imul
dec
mov
movs
cmp
sahf
pop
push
dec
inc
aaa
call
mov
sub
lds
retf
loope
jns
paddusb
pushf
fwait
mov
ror
imul
imul
push
xchg
movs
int3
shl
inc
xchg
leave
shl
stos
xor
inc
mov
xchg
add
int3
xchg
loop
test
xor
cmp
adc
test
mov
adc
mov
pusha
push
int
xor
call
xchg
push
imul
dec
inc
or
sbb
ss
add
bound
dec
loope
jp
and
into
xor
push
sub
pop
adc
adc
mov
dec
fisub
aaa
arpl
pavgb
lahf
sbb
test
jns
aam
push
mov
call
xlat
sar
jle
mov
and
mov
adc
iret
cmp
pop
sub
aas
pop
bound
lock
mov
fs
test
(bad)
mov
das
inc
inc
mov
test
jne
sbb
push
ja
xchg
ror
mov
jecxz
sbb
mov
cs
popa
pop
mov
mov
cmps
stos
movs
inc
cmp
xchg
inc
es
arpl
add
xchg
and
pushf
fsub
mov
adc
(bad)
fwait
sbb
in
scas
rcr
push
fwait
stc
pop
or
(bad)
retf
mov
xchg
sbb
ja
pusha
add
fisub
mov
and
call
sub
hlt
lahf
fsubr
cs
push
adc
mov
std
dec
fcom
fbstp
pop
lods
fimul
sub
ins
lods
in
add
jmp
cmp
cmp
sub
jbe
mov
test
aad
jg
xor
xor
sub
jmp
inc
xor
(bad)
pop
leave
jno
pop
and
into
mov
and
push
jge
aas
out
arpl
(bad)
jp
jge
sub
fnop
les
call
xchg
ins
cmps
in
xchg
and
ins
shl
cdq
adc
jle
aaa
adc
retf
imul
and
arpl
(bad)
fucomip
(bad)
iret
in
hlt
out
retf
nop
and
mov
fnstenv
(bad)
scas
gs
fwait
push
xlat
into
ss
lea
mov
mov
cdq
and
(bad)
cmp
shl
pop
xor
mov
jge
add
jmp
mov
xor
stc
test
sbb
ja
arpl
mov
cs
mov
faddp
pop
xchg
lods
fnstenv
sar
mov
sbb
xor
mov
es
leave
jnp
push
mov
cmp
sbb
sar
sub
add
test
repnz
bound
adc
cs
dec
cmp
cmp
cmps
loope
jne
retf
mov
xchg
jo
cmp
test
sahf
inc
mov
in
or
and
imul
or
aad
(bad)
shl
data16
or
aas
inc
popa
test
and
outs
adc
mov
mov
jecxz
adc
int3
jmp
mov
jmp
dec
sbb
and
sub
sar
out
ds
mov
in
repnz
xlat
cmps
lock
jmp
ror
inc
in
sub
push
popa
add
(bad)
and
test
or
pop
icebp
scas
jae
sbb
xchg
jle
nop
and
nop
icebp
ror
lds
ds
dec
add
lea
ins
push
fistp
movs
sub
mov
or
ret
jl
out
xchg
ret
or
test
push
dec
dec
jmp
xor
add
les
mov
movs
call
popf
jbe
dec
test
retf
or
mov
imul
lahf
clc
pop
dec
or
loop
sub
jl
push
loop
jnp
dec
or
push
push
jecxz
or
xchg
and
imul
and
inc
rcl
dec
pop
imul
loope
test
xchg
test
out
pushf
inc
inc
jmp
mov
dec
mov
cmp
push
cli
or
outs
iret
xor
std
and
xor
inc
clc
push
pop
es
mov
cmp
or
js
das
lock
jg
dec
rcr
lods
push
in
cwde
jnp
push
jmp
pop
sbb
xchg
inc
gs
dec
xchg
dec
cmc
push
and
repz
mov
loop
inc
xchg
inc
popf
scas
mov
push
xchg
add
shl
xor
push
ret
fwait
(bad)
push
inc
add
mov
xchg
sub
add
xchg
lea
mov
dec
mov
dec
inc
cmp
call
(bad)
mov
not
fimul
cmp
jne
ins
fst
ret
call
(bad)
outs
jle
ja
add
xchg
jecxz
call
ins
das
cmp
ins
imul
in
mov
mov
mov
ins
adc
jb
cmp
icebp
sub
inc
dec
stos
mov
out
aaa
mov
enter
push
popf
jne
xchg
in
xor
dec
in
ret
adc
(bad)
fisub
push
clc
pop
fcomp
xchg
sub
ret
jns
dec
inc
pushf
mov
stos
dec
adc
jns
push
shr
xchg
mov
jmp
inc
sbb
jnp
bound
dec
mov
jmp
and
and
lods
je
outs
pop
adc
inc
jb
jbe
inc
mov
push
adc
stc
cmp
add
adc
push
or
fcomp
seta
jno
dec
mov
out
dec
adc
iret
pop
jmp
dec
and
hlt
fild
and
sub
ffree
dec
sbb
push
sbb
leave
pop
push
pop
jecxz
push
push
sbb
xchg
popf
jne
jg
mov
sub
bound
inc
fwait
or
xor
and
outs
sub
mov
jo
in
lahf
(bad)
(bad)
fmul
adc
push
dec
sti
dec
jg
dec
sbb
sbb
jns
pop
cld
ret
push
mov
in
pop
sahf
fcom
mov
xchg
pusha
jno
or
pop
or
jno
push
and
shr
xchg
pop
jnp
cld
es
mov
xor
ror
inc
out
imul
(bad)
call
das
rcl
fs
retf
mov
mov
adc
or
or
adc
jno
or
inc
sar
js
(bad)
int3
dec
xchg
xchg
test
cmps
mov
xchg
mov
test
mov
pop
adc
xor
pop
test
outs
cmp
or
push
fcom
jmp
cmps
mov
(bad)
cmp
cli
mov
jg
pop
sti
adc
lahf
cmps
movs
pusha
adc
fistp
inc
mov
mov
sbb
rcl
(bad)
loop
mov
push
in
and
and
or
scas
out
mov
into
sbb
cmp
movs
pop
jb
(bad)
jnp
and
ds
add
sub
jg
ja
inc
sbb
fstp
repnz
out
dec
mov
and
mov
sbb
mov
and
nop
mov
pop
push
arpl
call
inc
mov
add
cld
jno
or
mov
xchg
ins
scas
in
ja
cmc
xor
dec
sbb
pop
sbb
add
vcvttsd2si
push
cdq
sahf
inc
pop
mov
jecxz
mov
cmps
adc
jle
(bad)
and
(bad)
(bad)
retf
pop
pop
push
and
fdiv
es
xor
push
ret
push
pop
fsubr
add
clc
inc
pop
popa
cdq
test
jo
std
and
scas
push
dec
fnsave
cmp
sbb
rep
pop
test
loopne
pop
sbb
bound
adc
push
out
mov
(bad)
ffreep
rol
aad
rol
add
mov
jg
test
xor
bound
push
movs
stos
retf
dec
mov
mov
add
mov
add
and
mov
cs
sti
sub
es
pop
adc
inc
push
push
cdq
push
sbb
aas
cld
icebp
fnsave
stos
or
outs
inc
mov
add
xor
test
or
mov
icebp
sbb
pop
jbe
xlat
stos
bnd
push
jp
jbe
cmp
cmp
fld
dec
pop
call
ss
test
enter
test
cmp
fs
or
int3
jge
in
pop
cmps
mov
(bad)
mov
cld
jae
outs
pop
jno
fidivr
iret
ds
and
shl
movs
pop
add
int3
pop
mov
jg
cpuid
xor
dec
cmps
unpcklps
mov
ds
or
push
or
push
dec
mov
xor
mov
cmps
xchg
test
int
push
mov
pop
xchg
nop
and
mov
fisttp
sahf
jl
mov
jle
je
mov
inc
pop
test
mov
jecxz
mov
mov
loop
cli
lock
jo
loopne
std
sub
mov
ins
addr16
imul
push
inc
xor
neg
fbstp
mov
mov
mov
cld
sub
add
mov
jg
jmp
popf
mov
dec
js
push
call
aam
dec
wrmsr
or
es
es
mov
ss
mov
push
add
cmps
in
xor
or
jg
shl
fmul
mov
or
sbb
mov
sahf
cmp
mov
cwde
push
ins
inc
dec
loope
sbb
sbb
xchg
adc
sub
mov
jo
pop
adc
or
mov
xor
fwait
das
or
shr
repz
xchg
inc
or
sbb
outs
loopne
jp
imul
inc
popf
ret
push
or
dec
or
leave
sbb
jge
dec
test
and
popa
pop
or
cmps
popaw
scas
(bad)
adc
pop
jp
and
stos
hlt
dec
push
popa
sbb
sti
mov
push
(bad)
(bad)
in
clc
mov
mov
arpl
adc
jb
ja
std
sti
(bad)
inc
jle
cld
shl
jb
jecxz
out
mov
jle
aas
mov
add
jno
test
mov
jne
fsubr
and
push
xchg
ja
ror
sub
vcmpeqss
fiadd
sbb
cld
pop
pusha
pop
lds
sub
jl
dec
push
cdq
cli
in
adc
sbb
xchg
xchg
push
jns
movs
xor
and
inc
adc
leave
sub
in
test
ins
popa
sahf
pop
fucomip
mov
cmp
adc
loope
xchg
call
lahf
pop
mov
call
inc
sbb
mov
pop
out
(bad)
fist
out
push
rcr
mov
jl
test
push
dec
jb
in
jp
mov
sti
add
or
lods
mov
and
enter
sbb
push
mov
fld
fmul
xor
or
dec
xchg
loope
div
sub
xor
lock
shl
pop
xchg
cmp
fiadd
inc
or
jl
(bad)
out
frstor
xchg
push
dec
sbb
pop
les
je
mov
rcl
sahf
xor
out
push
mov
cmp
icebp
(bad)
push
aaa
xor
cmps
hlt
mov
imul
cli
cld
adc
repz
pop
mov
push
dec
xchg
mov
in
mov
ss
cld
mov
cmp
or
mov
xchg
mov
fmul
pusha
cwde
imul
cmps
or
sbb
jmp
fmul
add
xchg
inc
pushf
cmp
sahf
jns
inc
xor
popa
add
scas
mov
sar
cmp
les
add
loope
icebp
stos
push
sub
xlat
mov
cmps
addr16
jae
dec
sbb
dec
sahf
loop
std
mov
xchg
adc
lock
jno
sub
(bad)
arpl
ss
shl
push
adc
or
je
mov
and
test
adc
xchg
fimul
push
or
mov
out
mov
stos
sahf
sbb
fcom
mov
movs
jb
xor
sub
cmp
add
stc
mov
cmp
imul
loop
movs
dec
stos
push
pop
jb
sub
jo
jecxz
repnz
or
cmp
mov
jmp
mov
inc
shl
retf
lods
int3
cmp
shr
jge
cmp
pushf
sub
mov
movs
lea
cwde
dec
adc
inc
cmp
(bad)
cmps
add
inc
lods
sub
out
stc
adc
sub
cmp
gs
pop
adc
sub
inc
retf
push
(bad)
cmp
int
aas
aad
adc
sub
call
xchg
sub
pop
dec
imul
cmp
adc
pop
or
mov
rol
cmps
clc
pop
push
inc
dec
adc
push
xchg
data16
(bad)
dec
xchg
loopne
sbb
pop
retf
or
pop
into
in
retf
add
and
nop
or
xchg
xor
repnz
cmps
push
sub
data16
cmp
stc
ja
daa
mov
add
imul
dec
cld
mov
pusha
cmp
sub
mov
ja
test
les
jo
das
gs
inc
gs
(bad)
jo
push
test
jb
rol
xchg
stos
in
fild
(bad)
(bad)
xchg
mov
mov
mov
jnp
mov
lods
jmp
imul
xchg
mov
lods
test
stc
jb
fst
out
xor
jp
clc
xlat
jg
test
xor
cmps
nop
push
not
mov
cmp
test
sub
fistp
nop
sub
cmp
xor
mov
mov
jmp
pop
mov
push
(bad)
scas
push
cmps
pop
mov
cmp
ror
cmp
inc
cmps
cmps
adc
jnp
dec
out
into
mov
cmp
(bad)
sti
shl
les
lahf
mov
jp
pop
push
call
rol
aad
and
loopne
iret
(bad)
addr16
(bad)
push
and
out
(bad)
fisttp
or
sub
adc
in
sub
fs
out
dec
test
nop
xchg
lahf
adc
inc
push
mov
fcomp
adc
push
popa
fimul
repnz
dec
mov
xchg
addr16
cmp
inc
push
fsub
std
xlat
xchg
test
neg
addr16
cmp
sub
xchg
sub
sub
pop
inc
xchg
addr16
fbld
leave
scas
or
xchg
sub
test
and
mov
addr16
xlat
sbb
mov
(bad)
and
fcomp
(bad)
adc
push
and
pop
in
cmp
pop
mov
add
jg
cmc
fcmovne
xor
icebp
sbb
leave
repnz
adc
and
outs
xchg
ret
or
ins
(bad)
mov
mov
push
lds
jmp
adc
into
pop
int3
leave
sub
ret
and
pop
cli
iret
cmp
mov
and
sbb
mov
or
cmp
pusha
cwde
stos
mov
and
cmp
mov
out
jg
or
jnp
sub
jnp
push
add
xchg
scas
test
sub
add
push
leave
mov
add
pop
int
and
push
(bad)
xchg
stc
or
dec
pushf
(bad)
call
cmp
into
jne
add
(bad)
ficom
sub
jne
xor
pop
outs
jge
aas
lods
xchg
les
inc
sub
rol
push
inc
sbb
mov
inc
aam
std
outs
outs
scas
cs
mov
pusha
or
dec
pop
and
sbb
(bad)
xchg
or
dec
jns
or
out
lds
lea
pop
dec
sub
loop
mov
mov
or
mov
xor
sbb
outs
mov
xor
cmp
mov
fnstcw
push
jae
xchg
cmp
outs
or
or
xor
int
iret
(bad)
dec
pusha
push
in
cmp
in
add
or
jmp
outs
sbb
fmul
ins
xor
repz
in
xchg
sub
adc
and
sbb
cmp
and
cmp
(bad)
mov
mov
js
jne
lahf
cld
dec
sub
mov
jl
(bad)
fisttp
out
jp
call
neg
xchg
aaa
(bad)
adc
loopne
jno
repnz
sahf
clc
(bad)
(bad)
gs
retf
ins
lahf
int
xor
cmps
inc
js
cmc
in
test
xchg
and
ret
xchg
mov
nop
loope
in
and
retf
cmp
stos
sub
dec
mov
mov
out
jne
adc
fs
xchg
add
inc
xchg
pop
icebp
js
xchg
mov
mov
push
lods
add
dec
and
stos
ins
loopne
int3
xor
mul
and
jb
push
test
test
fldenv
mov
push
scas
and
sub
dec
add
sub
(bad)
push
in
shr
and
shr
iret
dec
mov
inc
sbb
and
inc
gs
lods
mov
mov
cmp
div
(bad)
lea
retf
xchg
loop
(bad)
xlat
add
pop
or
pop
call
jl
mov
push
and
repnz
sbb
repz
jbe
(bad)
sbb
les
in
dec
sub
adc
cmp
adc
fs
inc
lods
or
cmp
cmp
or
mov
cdq
ret
scas
lea
push
pop
cs
ret
ror
and
mov
jg
rcr
pop
mov
aaa
stos
fdivr
movs
aas
and
cs
outs
mov
pop
jnp
ins
xchg
cdq
add
imul
or
icebp
mov
pop
dec
pop
and
or
xchg
push
(bad)
sahf
in
cmp
jae
mov
add
sahf
rcr
arpl
or
popf
inc
add
sar
cwde
jmp
xor
syscall
stos
ss
(bad)
clc
mov
movaps
xor
pusha
cmp
or
fstp
dec
xchg
ret
pop
and
clc
pop
push
lds
mov
retf
div
lods
push
retf
nop
test
lds
add
inc
aaa
bswap
push
mov
cmp
xor
mov
loope
sub
add
mov
mov
inc
in
shl
sbb
jbe
lods
cmp
repnz
jnp
jmp
sbb
jne
imul
add
mov
lock
jbe
jne
leave
aaa
fimul
xchg
cmp
xchg
dec
dec
jbe
imul
lock
inc
(bad)
lods
cmp
neg
jne
in
dec
and
fldenv
mov
or
add
inc
sbb
mov
retf
dec
addr16
test
mov
xchg
and
data16
mov
arpl
es
(bad)
and
dec
adc
xchg
cmps
nop
fwait
mov
xor
dec
(bad)
adc
(bad)
nop
mov
imul
cwde
sbb
mov
pop
ins
popa
(bad)
ficom
push
cmp
and
pop
jp
cs
dec
push
pop
xor
sbb
add
loope
call
jae
cwde
call
(bad)
pop
mov
les
out
adc
sbb
pop
adc
sub
xchg
mov
mov
in
xchg
add
movs
mov
dec
cmp
sbb
sti
outs
dec
rcr
popf
mov
scas
bswap
ss
inc
xchg
xor
fnsave
mov
adc
ss
nop
cmp
cmp
dec
push
data16
xor
mov
nop
sbb
idiv
inc
push
or
daa
dec
ss
cmp
lods
pop
mov
es
push
adc
pop
jnp
cmp
mov
retf
test
mov
adc
push
loope
cmp
call
jle
mov
in
(bad)
test
sbb
or
inc
imul
fld
adc
mov
xor
jo
push
(bad)
fstp
dec
dec
es
ret
or
sbb
mov
push
push
or
sub
push
adc
mov
sbb
(bad)
stos
scas
frstor
idiv
xor
jecxz
mov
arpl
psubsw
adc
xor
mov
xor
test
jp
push
hlt
jmp
sub
dec
xchg
cmps
scas
push
sub
push
sbb
or
int
dec
ins
jg
(bad)
cli
push
adc
das
test
iret
cmp
(bad)
bound
dec
mov
jns
sbb
sbb
push
pop
imul
jno
jp
out
xchg
icebp
test
xchg
and
inc
push
xor
xor
jmp
mov
ret
push
ret
and
sub
xchg
in
test
stos
xor
sub
mov
fs
mov
std
jg
xchg
or
mov
test
clc
out
cmp
(bad)
aas
popa
push
es
mov
and
cli
xor
and
mov
(bad)
pop
and
inc
mov
inc
sub
push
or
cmp
jg
inc
sbb
cmps
xor
cmp
daa
xor
mov
aad
push
movs
lock
sub
mov
out
pop
xor
movs
push
mov
sti
ins
inc
mov
or
aad
cmp
push
mov
dec
inc
test
pop
jle
popa
pop
sar
mov
and
add
push
jp
and
adc
mov
push
outs
adc
xchg
xchg
cld
push
dec
test
adc
fstp
adc
sbb
adc
and
sti
std
idiv
in
cmp
add
xor
mov
(bad)
ficomp
repnz
scas
cmps
repnz
mov
je
mov
les
xchg
mov
imul
mov
test
push
fmulp
ret
add
sub
sar
jo
sub
shl
inc
xor
hlt
pop
cmc
mov
fwait
out
ror
test
cmp
ret
and
push
ss
ficom
and
mov
fs
pop
or
sub
lods
shl
(bad)
in
dec
mov
mov
shl
xchg
cs
mov
and
mov
ret
pop
pop
or
mov
and
jae
and
sbb
outs
sub
aas
(bad)
xchg
ins
aas
int
pushf
xor
push
fs
in
pop
outs
out
push
cmc
jnp
in
icebp
das
mov
and
jle
das
sbb
mov
xchg
cld
hlt
or
mov
mov
mov
inc
inc
mov
call
in
lods
cmp
or
(bad)
mov
xchg
imul
mov
ror
fcomp
jb
shl
imul
(bad)
maskmovq
mov
sbb
mov
push
adc
mov
cmp
rcl
or
lock
pop
adc
enter
cmp
add
or
arpl
ins
ror
mov
ins
repz
outs
jmp
(bad)
sub
ret
mov
shl
and
sub
dec
jnp
mov
fsub
imul
mov
iret
mov
cmps
js
adc
and
adc
sbb
xor
arpl
in
and
mov
xchg
ins
pushf
mov
mov
int
es
jo
sub
sub
popf
into
sbb
mov
scas
pushf
xchg
sbb
out
pop
push
stos
mov
outs
lds
sbb
repz
xor
pop
xor
and
cmp
loop
popf
xchg
inc
xchg
mov
mov
dec
je
pop
outs
popa
aas
cmc
xchg
int3
ins
and
sbb
mov
scas
inc
frstor
inc
add
sti
cmps
lock
mov
shl
test
xchg
lahf
add
pop
(bad)
fld
push
(bad)
loope
push
shl
pop
pop
fnstsw
loop
stos
jl
imul
or
push
jp
outs
jecxz
push
cmp
xchg
cmp
mov
jno
enter
and
inc
sbb
xchg
and
dec
das
xchg
add
mov
loop
sub
imul
mov
pop
mov
push
jl
jnp
ins
push
pop
fmul
bound
(bad)
lds
add
clc
push
cmp
adc
pop
add
pop
mov
mov
idiv
adc
and
jmp
cmp
jl
pushf
imul
dec
les
push
fmul
push
pop
xchg
inc
dec
push
shl
or
or
rcr
mov
adc
push
fdiv
pop
gs
mov
push
imul
(bad)
out
fwait
das
adc
dec
ds
int
xchg
sub
and
add
mov
aam
cmps
sub
push
inc
out
ret
push
dec
inc
mov
or
jnp
mov
fistp
adc
jl
dec
pop
push
cmp
mov
stos
adc
div
out
ret
pop
imul
retf
ins
bound
nop
push
imul
imul
(bad)
lahf
sbb
add
push
xchg
and
push
mov
adc
and
cmc
push
xor
jge
cmp
pop
movs
dec
data16
(bad)
in
mov
imul
and
pop
sbb
(bad)
or
inc
mov
(bad)
push
retf
std
loopne
gs
xor
loopne
sub
or
sahf
shl
dec
fist
pop
dec
popa
test
xor
xor
sub
pusha
ins
bound
mov
or
jnp
jg
mov
adc
ins
into
cs
out
adc
push
push
and
dec
or
push
mov
pop
nop
add
push
ins
push
jae
mov
xor
mov
movs
mov
cs
ins
shr
movs
cmp
adc
mov
loopne
xor
and
adc
(bad)
mov
inc
fucomip
or
lods
fild
push
adc
shl
imul
push
pop
std
cmp
cmp
int3
out
loop
aaa
out
sbb
sahf
sub
sbb
lea
shl
int
imul
jae
inc
cdq
push
push
addr16
das
dec
jne
cwde
push
cmp
scas
fist
in
out
xor
pop
push
cwde
test
test
idiv
push
mov
sub
jmp
dec
ret
dec
ins
adc
ffree
cmps
dec
fcompp
pop
idiv
call
fistp
in
(bad)
or
call
pushf
jle
sub
cdq
mov
push
sahf
and
inc
mov
je
cmp
sbb
aam
imul
dec
cld
pop
push
cmps
jns
mov
inc
cmps
dec
movs
push
movs
ror
mov
cmp
lds
les
dec
das
test
outs
dec
popa
scas
push
push
and
mov
daa
into
cdq
pusha
cmp
out
or
mov
mov
test
pmullw
pop
inc
mov
push
leave
sub
dec
adc
inc
xchg
and
mov
and
xchg
test
adc
adc
scas
inc
daa
cmp
add
cmp
cmp
fldenv
out
jae
mov
movs
jge
jg
mov
xchg
imul
xlat
cmp
xchg
icebp
sahf
xor
call
mov
jne
imul
fmul
mov
xchg
rol
pushf
ret
jno
rcr
pop
pop
jo
xor
sbb
mov
ret
add
sub
ins
push
mov
or
js
popa
movs
fst
iret
imul
data16
inc
mov
dec
inc
repz
into
mov
add
xlat
sbb
out
cmp
loop
pop
mov
mov
add
int3
jbe
push
or
pop
retf
into
mov
cmc
cli
stc
hlt
mov
fld
xchg
mov
cmp
jle
in
cmc
imul
in
shl
sub
push
sbb
and
mov
jp
dec
mov
in
sub
repz
rcr
jecxz
dec
iret
test
dec
cmc
inc
dec
lods
fcmovu
pop
test
push
je
mov
fldln2
(bad)
imul
xchg
jo
jno
popa
mov
pop
xor
or
nop
mov
mov
push
jg
dec
addr16
lds
xor
xor
ss
rol
rcl
ret
test
pop
mov
pop
test
adc
jecxz
outs
fadd
xchg
lds
jmp
xor
jg
or
adc
psrlw
loopne
and
mov
mov
imul
icebp
(bad)
jae
xchg
pop
cld
pop
dec
xor
lahf
mov
jmp
inc
mov
cmps
daa
aas
(bad)
out
(bad)
in
cld
repz
(bad)
xchg
pop
dec
rcr
cli
aas
int
push
outs
sahf
cmp
inc
cdq
jecxz
and
daa
lods
jb
sbb
sbb
or
daa
lahf
mov
dec
scas
in
adc
pop
hlt
inc
out
lea
shr
adc
int
clc
shl
nop
hlt
test
mov
sbb
lods
sahf
aad
les
fadd
call
dec
ret
daa
add
pop
inc
xchg
push
or
movs
aas
pop
and
push
xor
ins
test
icebp
sar
fs
cmp
cs
dec
mov
pop
dec
in
mov
fistp
jmp
adc
dec
in
mov
test
and
ins
stc
mov
and
retf
retf
cmps
gs
cmp
pushf
jmp
cmp
call
mov
out
jns
jb
clc
icebp
movs
cwde
push
test
pop
imul
mov
fisub
(bad)
xor
mov
test
sub
sub
inc
and
nop
xor
or
inc
xchg
or
sbb
nop
sbb
loopne
adc
dec
or
jmp
adc
dec
pop
xor
mov
retf
mov
int3
jb
inc
cmp
retf
mov
mov
add
call
lea
sahf
and
pop
push
sub
mov
pop
dec
dec
sti
movs
jmp
adc
gs
sbb
sbb
xchg
adc
sub
cmp
jp
and
test
push
jmp
cmp
retf
(bad)
adc
je
jle
repnz
(bad)
xor
(bad)
test
jne
dec
jb
xchg
mov
sub
lods
cmps
jno
das
movs
lods
xchg
xchg
test
mov
add
pop
and
(bad)
imul
xchg
sti
jns
xchg
or
retf
arpl
lahf
mov
daa
mov
adc
call
(bad)
jnp
adc
pop
in
push
daa
inc
test
je
pop
push
mov
xchg
sub
test
loopne
outs
xchg
mov
ffree
mov
cwde
ret
call
push
dec
lods
vpsubd
and
cwde
xor
pusha
sub
imul
test
movs
pop
(bad)
ins
adc
pop
mov
jns
cmp
outs
sbb
iret
inc
mov
pop
dec
mov
call
aad
pop
xor
push
push
sahf
inc
push
es
stc
sbb
push
xchg
xor
and
test
xor
add
jae
push
aad
xchg
xor
fstp
push
fldl2t
sub
push
mov
dec
dec
dec
and
and
xor
cmp
and
enter
mov
mov
lods
jl
sbb
sar
xchg
(bad)
icebp
ja
imul
(bad)
loopne
adc
mov
stos
(bad)
leave
jno
pop
xchg
push
ss
dec
jecxz
xchg
mov
cmp
mov
xor
fldcw
ret
leave
lods
dec
and
jo
push
dec
loopne
adc
inc
add
add
pop
push
movs
sub
push
and
adc
and
mov
push
mov
ret
sub
jo
sub
nop
mov
jnp
mov
(bad)
icebp
fnstcw
mov
push
pop
pop
jo
ins
idiv
push
or
jnp
ror
ret
loope
add
mov
jl
and
xor
mov
adc
xor
jno
sbb
jo
inc
imul
mov
(bad)
(bad)
xchg
sbb
and
movs
pop
in
sub
push
or
cdq
push
outs
cmp
jl
gs
js
cmp
cmp
pop
add
pop
loop
fs
(bad)
test
sbb
jae
aas
sahf
add
jmp
mov
int3
push
add
fcomp
movs
or
ror
jp
mov
jmp
push
push
leave
jne
xor
adc
stc
ds
popa
pop
(bad)
(bad)
arpl
push
push
adc
inc
lds
rcr
sahf
jmp
mov
dec
lea
imul
push
scas
push
jno
push
dec
rcl
(bad)
inc
fucomp
mov
mov
inc
addr16
push
pop
jo
xor
int
stos
xor
pop
scas
mov
repnz
cdq
mov
dec
pop
rol
pop
ins
push
cmp
repz
fs
call
mov
cmp
push
call
aad
popf
inc
cmp
cmp
ret
(bad)
push
lods
mov
stos
push
pop
out
inc
mov
jne
jmp
sbb
and
xchg
add
mov
scas
jb
sbb
dec
mov
mov
aad
dec
jl
out
in
popa
pop
jmp
jbe
push
mov
xchg
fsubr
lods
inc
pop
push
bound
add
cmps
test
cdq
hlt
std
cmc
or
mov
mov
popa
sti
add
retf
ins
sub
loope
stos
push
cmp
sub
cmp
sub
test
xchg
(bad)
call
aad
mov
pop
or
mov
push
data16
pop
xor
fimul
push
xor
jno
mov
add
cmps
pop
add
push
mov
loope
retf
pop
adc
mov
xchg
mov
push
mov
lds
fs
test
xor
xor
sub
mov
cmp
cwde
adc
adc
outs
les
push
sbb
adc
nop
jge
adc
xor
fsub
lds
xchg
jno
and
push
jmp
call
dec
shl
mov
mov
sub
jecxz
test
add
mov
dec
jl
add
xchg
sbb
aaa
dec
or
mov
jecxz
xchg
pop
ins
data16
jns
add
mov
sbb
pop
(bad)
loop
jmp
sbb
sbb
cmp
mov
(bad)
loopne
loop
mov
pop
test
(bad)
push
(bad)
mov
dec
mov
adc
xor
push
inc
fidiv
xor
mov
retf
cmp
lea
mov
test
jno
or
lds
mov
dec
rcr
and
adc
dec
inc
mov
shl
pusha
dec
je
add
mov
push
pop
adc
shl
pop
adc
ret
cld
cwde
stos
jae
out
dec
cmp
mov
mov
push
adc
pop
(bad)
loope
and
je
js
call
bound
mov
test
xchg
dec
sub
mov
mov
mov
(bad)
jmp
cld
pop
push
scas
pop
bound
(bad)
(bad)
hlt
or
jne
xchg
mov
or
push
es
fld
pop
inc
inc
mov
mov
inc
mov
movs
and
xor
cmp
scas
sbb
mov
pusha
xchg
inc
or
or
stos
or
cmp
data16
pop
xor
xor
or
lahf
(bad)
push
mov
xor
loopne
sahf
in
dec
jns
add
or
mov
(bad)
xor
jns
add
sub
jne
sbb
cmp
mov
push
aad
push
xor
xor
inc
out
repz
mov
fadd
fsub
lahf
xor
sub
xor
sub
mov
lea
das
jnp
jge
sub
adc
mov
mov
sti
das
inc
out
mov
into
repz
cmp
inc
xchg
mov
mov
int3
bound
or
or
mov
xor
sub
iret
cld
push
mov
sbb
inc
sar
test
lds
mov
(bad)
sbb
test
inc
lds
js
mov
daa
in
pop
arpl
mov
into
test
jmp
or
clc
(bad)
push
dec
cmp
je
xor
outs
adc
repz
sbb
and
shr
jg
pop
je
mov
outs
xor
xchg
push
and
jg
dec
loop
pop
test
inc
rcr
xor
mov
dec
mov
pop
mov
dec
je
or
fisub
fwait
mov
jg
mov
xchg
lahf
dec
dec
push
arpl
int3
cmps
in
jecxz
mov
movs
xor
dec
loope
jne
add
fwait
pop
mov
pusha
adc
or
pop
aas
sbb
sbb
cdq
retf
(bad)
inc
in
dec
mov
sbb
movs
xchg
repnz
popa
das
scas
aad
jbe
mov
popf
add
into
(bad)
jnp
data16
fcomp
call
cli
xchg
lds
jae
movs
sub
inc
icebp
iret
or
inc
iret
out
imul
cs
adc
jo
sti
cld
div
pop
pop
daa
aad
ss
es
in
cmp
(bad)
dec
mov
sub
mov
and
fisubr
leave
cmp
mov
jl
adc
xchg
xchg
lods
inc
test
cmp
mov
ret
shl
call
cmp
sbb
cld
sahf
sti
cmp
mov
jo
sti
dec
push
cdq
push
icebp
test
test
loope
xchg
fld
add
gs
daa
mov
retf
push
jno
cli
and
push
mov
jne
ins
mov
test
out
dec
xchg
mov
mov
and
and
fild
cmp
or
(bad)
cmp
in
xchg
inc
push
mov
mov
rcl
jmp
shr
pop
je
jl
xchg
imul
popf
je
popf
jnp
jmp
sbb
xchg
sti
lock
adc
rcr
stos
inc
cmp
sub
in
jmp
xor
lahf
xchg
jge
sbb
or
dec
imul
cmc
adc
(bad)
rol
idiv
outs
xchg
retf
and
popa
push
scas
fwait
push
cmp
dec
mov
xchg
ins
lods
nop
inc
dec
or
dec
cmp
imul
dec
and
push
ret
shr
ret
int3
or
push
or
mov
xor
in
call
aaa
fist
cld
(bad)
and
stos
cdq
xchg
idiv
mov
inc
(bad)
cmc
jns
(bad)
hlt
vmulss
aam
imul
enter
adc
je
lahf
icebp
inc
call
mov
inc
call
sbb
cmp
rsqrtps
cmp
push
mov
mov
lahf
es
xor
ds
add
pusha
shr
adc
iret
push
dec
push
dec
fistp
call
mov
in
push
xor
outs
iret
cmp
outs
call
sub
and
push
jge
cmps
cmp
repnz
ja
mov
neg
mov
movs
mov
(bad)
pop
dec
sbb
ins
mov
(bad)
push
adc
dec
mov
je
xlat
or
xchg
pop
mov
adc
jmp
scas
add
cli
mov
and
pop
out
adc
push
jecxz
push
(bad)
fwait
imul
add
adc
leave
movs
push
scas
mov
add
mov
leave
and
loopne
dec
fild
shl
ss
sti
fwait
gs
push
inc
pushf
inc
inc
xchg
mov
mov
leave
movs
ss
mov
dec
push
arpl
daa
pop
adc
xor
mov
repnz
retf
xchg
daa
jmp
inc
xchg
or
js
aad
sbb
data16
ficomp
mov
pop
or
xor
jo
fiadd
scas
mov
out
mov
dec
imul
retf
ret
and
dec
inc
jmp
or
adc
push
mov
(bad)
dec
or
cs
mov
cli
cmp
rcl
sbb
mov
ins
les
push
add
inc
movs
daa
mov
sar
push
mov
call
push
add
xchg
mov
sbb
call
push
(bad)
in
cmps
not
fwait
push
stc
xor
(bad)
ds
mov
sbb
ins
push
mov
jno
xchg
icebp
push
fnstsw
shl
pop
xchg
movs
and
xlat
cwde
iret
cmps
adc
xchg
jmp
push
adc
adc
sbb
imul
cmp
sub
leave
adc
sub
cwde
jb
and
leave
cdq
loop
pop
push
lock
popf
and
dec
hlt
mov
movs
cmp
dec
bound
mov
push
push
mov
lods
sub
fwait
cmc
dec
lds
push
add
dec
cmp
es
into
jge
pop
push
dec
rcl
leave
jmp
sbb
aam
pushf
pop
iret
cmp
(bad)
lods
sub
fwait
adc
mov
and
and
mov
in
mov
cmp
outs
jno
cli
add
push
xchg
retf
xor
test
push
mov
shl
stos
leave
sti
outs
or
movs
daa
retf
push
dec
and
mov
shr
jg
sbb
push
shr
adc
add
dec
aaa
das
jne
pop
inc
pop
jl
jae
(bad)
fist
cmp
movs
push
daa
push
es
pop
aam
mov
mov
add
inc
jb
cld
fild
stos
or
daa
xor
or
aam
push
cli
pushf
hlt
mov
xor
jnp
push
in
or
test
mov
sub
retf
xchg
clc
jb
loopne
pop
adc
mov
ror
sbb
int3
sti
clc
call
in
mov
jb
inc
ins
or
sahf
mov
(bad)
push
pushf
(bad)
arpl
test
adc
arpl
inc
in
stc
(bad)
test
mov
cmp
adc
jmp
mov
lds
cli
mov
out
adc
ins
cmc
push
push
into
cmps
mov
add
leave
push
dec
cmp
mov
xchg
aad
and
inc
pop
push
pushf
xor
dec
out
dec
stos
mov
inc
xchg
sbb
push
imul
pop
and
retf
mov
cmp
inc
jp
adc
jle
ins
jge
in
fbstp
mov
sub
retf
dec
pop
cli
test
hlt
fidiv
mov
lahf
stos
mov
sbb
mov
imul
dec
ins
mov
ins
jl
jl
jmp
int3
xor
sbb
arpl
jb
sub
adc
in
mov
dec
retf
mov
pop
ins
aas
rcl
cs
add
jge
cmp
inc
in
pop
test
xlat
jns
fisttp
pop
push
fwait
xchg
leave
out
xor
popa
pusha
xchg
ret
bound
inc
outs
(bad)
push
in
sahf
in
xchg
(bad)
loope
scas
mov
push
xchg
das
outs
sub
cwde
popa
or
jns
test
mov
mov
inc
scas
cmp
test
lods
sub
push
data16
stc
fiadd
push
loope
daa
mov
cmp
inc
mov
sbb
pop
js
xor
and
vmptrst
pop
daa
add
ret
mov
jne
xor
movs
dec
js
adc
bound
jle
dec
and
test
inc
add
aad
in
inc
(bad)
or
mov
add
out
loope
sub
dec
test
or
popa
mov
jmp
xor
psrad
(bad)
jg
mov
fdiv
pusha
mov
and
xchg
(bad)
(bad)
xchg
push
popa
outs
ds
ret
frstor
or
out
sbb
stos
(bad)
(bad)
mov
cdq
sub
(bad)
sti
or
adc
add
inc
xor
movs
jecxz
in
mov
jns
xor
movs
sub
retf
sar
sub
cmp
dec
div
addr16
cmp
cmps
pop
jp
or
pop
jecxz
ins
push
sub
or
push
loope
shr
adc
mov
arpl
pop
imul
ds
adc
pop
pushf
push
mov
sar
ins
sbb
gs
mov
push
dec
lds
xchg
push
imul
out
adc
and
push
stos
add
jg
pop
pop
cmc
out
sbb
adc
outs
or
in
push
adc
jns
fucomp
xor
jecxz
syscall
sar
adc
and
pop
xlat
add
mov
movs
inc
icebp
in
ja
loope
sub
pop
mov
adc
adc
bound
out
sub
add
xchg
mov
ins
xor
cld
retf
lods
pop
bound
sub
jecxz
loop
sbb
add
mov
dec
call
int
pushf
adc
outs
cmp
(bad)
repnz
arpl
(bad)
(bad)
retf
lea
stc
loop
mul
lds
retf
mov
sub
inc
sub
xchg
rol
xchg
jp
sbb
out
push
fs
adc
and
fdiv
xchg
push
jb
xchg
jne
daa
ins
pop
loopne
jo
popa
xchg
mul
dec
pusha
lods
outs
sar
add
rcr
jbe
add
mov
dec
out
dec
mov
cdq
loop
div
cmps
cli
lds
std
repnz
xchg
push
(bad)
arpl
add
sub
push
jg
mov
cli
jmp
jb
push
aas
cwde
or
mov
repnz
clc
test
sar
fwait
sub
or
add
retf
out
mov
nop
jmp
jmp
dec
sub
inc
push
stos
mov
xchg
in
xor
and
mov
xor
dec
or
cmp
js
adc
push
pop
sbb
ror
add
pop
div
add
add
aas
xchg
js
lea
jnp
xor
inc
aas
and
xor
and
xor
inc
push
js
mov
cli
hlt
push
pop
sub
cs
or
add
xor
pop
into
imul
mov
rcr
fistp
jno
das
jge
out
cmp
rep
daa
ins
sub
pushf
fmulp
call
or
in
sub
xchg
adc
test
fmul
sbb
inc
std
fcomp
repz
fs
mov
fs
xchg
cli
xor
pop
mov
add
lea
push
test
mov
push
test
pop
(bad)
fcmovu
adc
(bad)
mov
arpl
adc
mov
add
and
test
fsubr
stc
scas
stos
jmp
enter
ins
pop
mov
jg
lds
ss
xchg
(bad)
mov
pop
pop
mov
and
jg
hlt
mov
cmp
jo
dec
div
loopne
or
ds
inc
and
jecxz
xor
fiadd
nop
adc
sub
xor
fistp
mov
xlat
xchg
mov
mov
adc
neg
je
neg
adc
dec
jbe
mov
scas
xchg
aad
outs
cmp
and
cmp
dec
icebp
inc
ins
aad
out
sbb
mov
jnp
jle
and
jecxz
sbb
fld
lock
test
mov
fidiv
sub
add
mov
pop
das
inc
jbe
jne
xchg
mov
xchg
cmp
xor
cs
adc
pop
or
sub
sysexit
adc
sbb
pop
into
mul
addr16
ret
bound
mov
xchg
mov
pop
mov
sbb
jl
dec
nop
push
hlt
out
jo
xchg
mov
pop
sub
push
push
adc
xchg
push
fidivr
push
arpl
and
test
inc
les
mov
shl
xchg
in
shl
cmp
stos
aad
pop
loopne
mov
ficom
jp
cli
add
push
lea
sub
mov
jns
xor
cmp
sbb
std
mov
icebp
and
inc
adc
or
mov
mov
jecxz
sub
add
gs
and
push
hlt
fcmovnbe
inc
dec
cdq
rcl
mov
outs
push
and
fisubr
jno
jge
lock
out
mov
inc
or
imul
sbb
jmp
test
jecxz
adc
mov
rcr
and
mov
dec
inc
movs
or
test
mov
idiv
rol
shl
add
jno
push
dec
push
jp
and
adc
stc
aaa
adc
hlt
and
or
add
and
andps
scas
and
or
dec
inc
xor
sti
jne
rcl
(bad)
add
fdivr
xor
inc
mov
gs
mov
fcomp
sub
cmp
(bad)
js
inc
sbb
jmp
jg
outs
add
call
push
outs
in
in
dec
pop
sbb
ins
cmp
(bad)
mov
scas
loope
test
out
pop
ins
loope
pop
in
or
and
arpl
rcl
sahf
mov
bound
push
inc
retf
fmul
dec
push
pop
fistp
and
xor
jbe
in
movs
icebp
shr
pop
je
jo
pop
inc
arpl
xchg
je
jl
mov
mov
movs
sbb
outs
or
lock
cwde
pop
jns
popf
add
cmp
fbld
test
sar
and
enter
loope
icebp
dec
movs
loope
outs
add
popa
sub
push
or
test
pop
jecxz
sbb
aam
test
fnsave
and
(bad)
stos
inc
dec
leave
cmp
psubq
and
les
pop
add
stos
dec
cld
xor
int3
and
sbb
jmp
pop
push
(bad)
fdiv
inc
add
adc
dec
pslld
mov
scas
xor
push
pusha
leave
scas
ja
imul
fcomp
sub
fmul
xor
cwde
test
add
cli
ret
fsubr
mov
ins
gs
inc
xchg
xor
cmc
lea
je
loop
out
daa
dec
pop
sub
scas
retf
inc
xor
and
add
and
sbb
test
adc
add
or
or
ins
cmp
pop
fist
fstp
out
lea
in
ins
sbb
push
nop
int
jmp
inc
mov
in
std
add
inc
outs
mov
mov
sar
je
movs
fs
jg
cmps
stos
lods
cmp
rcl
inc
hlt
sbb
mov
mov
push
test
sti
rcl
mov
outs
test
sub
mov
jbe
test
fs
in
(bad)
pop
ins
mov
push
sbb
mov
push
in
mov
mov
mov
ret
cmps
leave
neg
pop
cmps
mov
sti
and
add
push
push
or
imul
lods
(bad)
lahf
sub
leave
pop
(bad)
loop
push
mov
cdq
test
sub
out
stos
out
ret
std
iret
loopne
fidivr
fcom
gs
cmp
cld
repz
jg
push
cmps
push
mov
and
dec
cld
mov
jno
fisub
mov
mov
xor
xchg
fst
test
xchg
pop
ror
sbb
pop
cmps
cmp
lds
(bad)
add
hlt
sub
or
mov
popf
fbstp
push
xchg
sub
inc
and
xlat
outs
loope
pop
arpl
push
push
inc
lods
gs
dec
pushf
xor
fiadd
aad
fs
repnz
out
mov
cmps
fwait
mov
or
inc
xor
cs
retf
mov
ja
rcl
cmc
and
dec
push
popa
loope
jbe
sti
retf
dec
aaa
popa
inc
cmps
repz
and
inc
pop
mov
loope
jmp
retf
mov
pop
test
xor
mov
ret
adc
inc
xchg
lahf
in
push
xor
es
push
push
and
mov
scas
cmp
dec
add
dec
pusha
fild
(bad)
fnstcw
inc
pop
mov
(bad)
jge
icebp
mov
gs
arpl
jnp
jmp
sbb
scas
fld
movs
jnp
and
mov
and
sbb
xchg
xchg
pop
loop
(bad)
outs
aad
mov
outs
imul
adc
and
push
gs
in
leave
xchg
das
into
sub
push
(bad)
mov
bound
and
add
xchg
lock
jb
leave
sub
xor
add
push
add
(bad)
int
xor
mov
js
das
ds
cli
inc
addr16
test
in
dec
xlat
adc
imul
pop
jno
ret
outs
jno
ss
inc
and
outs
fimul
and
call
aas
dec
cdq
pushw
sub
cmp
and
add
xchg
fadd
aad
or
arpl
aas
(bad)
pop
repnz
sbb
inc
fdivr
dec
push
inc
clc
(bad)
retf
mov
(bad)
jnp
or
sbb
jno
fidivr
test
xchg
imul
lock
ret
sbb
bound
outs
inc
cld
je
call
mul
je
pop
pop
imul
out
movs
ins
add
pop
fs
or
and
arpl
ss
stos
fstp
jnp
les
cmp
adc
push
xor
aam
sub
fstp
dec
call
cmp
lahf
sub
xor
cmp
cmp
in
fiadd
outs
and
pop
push
pop
pop
pop
scas
call
out
loop
push
fs
push
mov
mov
pop
jnp
mov
mov
sub
adc
and
data16
dec
(bad)
mov
jnp
hlt
iret
jg
rcl
mov
rcpps
dec
push
stos
stos
rol
jbe
movs
mov
pop
xchg
fcmovnu
loop
mov
out
out
mov
ins
push
jl
add
jne
push
(bad)
jmp
add
add
mov
daa
inc
sbb
jnp
xor
cwde
mov
clc
int
xor
mov
sbb
mov
mov
sub
fidivr
fwait
arpl
fidivr
xor
jbe
bnd
inc
xchg
mov
imul
or
mov
jp
push
and
dec
push
sbb
in
push
jo
and
mov
xchg
inc
xchg
jmp
call
sbb
sti
sbb
mov
jmp
fld
lock
in
inc
push
push
and
xchg
xor
fs
jns
jbe
mov
iretw
cmp
xor
ds
mov
(bad)
nop
sub
push
push
adc
inc
or
push
inc
in
cmp
js
fiadd
scas
xlat
inc
jl
xor
jle
push
cmp
lock
gs
dec
int
mov
sbb
dec
xchg
mov
push
sub
jb
push
aam
inc
out
add
cs
inc
fbstp
jne
iret
cmps
repz
cmps
inc
push
rcl
in
clc
ja
xchg
loopne
xor
int
mov
cmp
pop
inc
scas
and
test
jle
and
retf
pop
jle
in
sar
sbb
cli
pop
and
fnstsw
or
jp
mov
mov
mov
(bad)
xchg
inc
test
jp
push
inc
and
xchg
div
inc
xor
test
and
xchg
jge
pop
dec
(bad)
call
cdq
and
clc
repz
add
jmp
inc
in
dec
dec
inc
cs
sub
add
dec
mov
aas
fucomi
out
cmovo
in
test
ret
ins
fsubr
xchg
cmp
lock
in
and
push
dec
mov
inc
lock
cld
arpl
pop
mov
popa
xor
jns
push
sbb
std
test
ds
std
test
clc
mov
xchg
xor
xchg
sub
fst
push
pop
(bad)
lods
out
dec
xor
adc
ins
adc
mov
scas
sbb
stc
icebp
out
mov
addr16
or
adc
sub
xor
pop
cmp
xchg
jo
sub
jb
xor
or
movs
inc
and
rol
lds
lods
jle
aaa
int3
xchg
xlat
enter
retf
adc
int3
cmps
sub
and
xlat
mov
adc
scas
cmp
iret
outs
mov
pop
outs
mov
into
loop
ja
mov
jae
sbb
inc
mov
ficom
es
dec
out
repnz
rcr
fs
cli
cmps
(bad)
shl
sub
dec
and
(bad)
dec
sub
dec
test
loope
fs
push
or
mov
das
and
retf
outs
sub
nop
ins
mov
jne
repnz
call
or
adc
pop
inc
jb
popa
fnstcw
enter
xchg
mov
mov
js
icebp
and
xchg
(bad)
fisttp
adc
and
mov
mov
adc
popa
clc
xor
pop
sub
jns
xchg
push
mov
mov
adc
add
fidivr
rcr
sahf
ja
and
pop
ins
xchg
fs
sub
sub
ds
sub
pop
outs
enter
sbb
push
cmp
cmp
mov
pop
lea
into
inc
push
add
leave
(bad)
movs
(bad)
call
inc
pop
mov
in
mov
mov
xchg
fild
shl
xlat
ror
clc
daa
fwait
loopne
into
jge
stc
and
pop
sbb
mov
xor
cli
shl
jp
dec
cmp
fldcw
cmc
lods
movs
dec
fisub
adc
es
push
movs
bound
and
in
sub
dec
movs
lods
fdiv
popf
leave
clc
in
or
in
mov
xor
imul
adc
push
repz
or
or
and
lods
ins
or
(bad)
outs
fdiv
cmp
lock
inc
pop
or
mov
inc
mul
cld
repz
mov
and
sbb
std
xchg
xor
enter
push
push
cdq
dec
adc
jno
cdq
xchg
ins
xor
cmp
daa
sub
dec
inc
loope
out
xchg
or
pop
stc
cli
pop
pop
div
cmps
movs
adc
xchg
shl
enter
and
mov
xlat
pop
sub
sub
mov
enter
push
or
xchg
je
add
movs
pop
dec
movs
and
mov
add
push
jne
ja
jns
inc
xchg
jmp
mov
gs
jge
ss
and
jmp
mov
cmp
inc
ss
add
fnsave
mov
outs
int3
jb
mov
in
mov
mov
sar
adc
jmp
inc
call
add
in
push
gs
in
jnp
lods
add
sbb
fwait
pop
push
sbb
inc
push
pusha
pop
test
mov
jp
dec
or
jle
lock
or
in
aam
test
xor
add
or
mov
clc
in
test
dec
rcr
(bad)
cmp
jno
fbstp
das
sub
mov
lods
loopne
jo
cmps
cmps
lea
cli
es
(bad)
fiadd
push
inc
push
jo
cdq
sub
xchg
mov
xor
xchg
movs
retf
punpckhbw
and
mov
in
fisttp
or
(bad)
dec
or
mov
stc
dec
aaa
mov
cwde
sbb
push
repnz
cmp
in
mov
and
imul
sbb
scas
sub
sub
iret
inc
sub
mov
push
and
sbb
in
shl
jecxz
arpl
lods
and
sbb
ror
add
mov
imul
sbb
jae
mov
mov
arpl
out
(bad)
push
out
jle
scas
dec
cmp
rcl
add
into
into
or
inc
leave
pop
cmp
cmp
sub
ror
mov
lahf
pop
sbb
ins
pop
cmps
and
pop
out
dec
mov
in
clc
cmp
call
cmp
test
es
push
data16
xchg
test
(bad)
pop
call
repnz
shl
and
mov
push
aaa
rcl
xor
aam
ins
push
xor
xor
adc
add
push
dec
arpl
pop
xchg
inc
pop
ds
add
push
mov
sub
mov
(bad)
xor
adc
fld
gs
mov
dec
xor
pop
and
adc
jne
retf
push
xor
(bad)
(bad)
jmp
mov
cli
mov
into
mov
push
mov
xchg
in
sbb
repz
outs
fs
call
pop
sti
mov
ins
jnp
add
shl
adc
xchg
popa
mov
test
xchg
sub
mov
(bad)
mov
and
out
test
movs
jmp
test
mov
mov
in
cld
inc
sub
dec
sub
arpl
push
inc
outs
inc
stc
mov
fstp
pop
xchg
sub
test
out
mov
stc
cmp
dec
ins
(bad)
jb
lock
popa
rcl
je
add
push
mov
(bad)
jb
arpl
call
ficom
in
pop
xor
inc
call
cld
jmp
addr16
mov
mov
movs
(bad)
ret
sar
(bad)
sub
in
daa
xchg
sub
mov
xor
cmp
sub
loope
outs
int3
call
dec
nop
dec
adc
ror
add
mov
jb
ins
cdq
popf
shr
or
dec
add
icebp
ins
and
ins
clc
aas
mov
cs
dec
push
sbb
shr
int
mov
sbb
cwde
mov
mov
cs
je
fptan
fxch
sbb
push
sbb
pop
dec
add
stos
cmp
inc
cmp
inc
cli
int
fisubr
inc
aad
inc
inc
fbstp
mov
pop
into
sbb
pop
movs
xchg
push
ss
addr16
mov
aam
jle
dec
fdiv
and
sbb
cmps
dec
bound
xchg
add
sbb
mov
adc
dec
out
fsubp
adc
adc
mov
dec
mov
sar
pop
out
add
addr16
fcom
ror
loope
dec
or
mov
ins
into
xor
retf
dec
cs
xor
fisubr
leave
inc
shr
inc
js
mov
cli
pop
fwait
(bad)
push
(bad)
jmp
(bad)
js
push
cmp
ins
or
out
in
sahf
les
jg
popa
add
push
mov
outs
out
imul
fild
and
mov
addr16
mov
adc
dec
mov
dec
cmp
mov
test
sbb
xor
adc
xchg
mov
movs
fistp
hlt
aas
push
cmp
lock
cs
cld
cdq
xchg
sbb
test
sahf
inc
xchg
sub
rcl
das
pop
push
xchg
fidivr
lods
inc
jp
sub
cmp
sub
mov
jmp
ss
adc
mov
jg
adc
aad
jmp
enter
jbe
pop
mov
mov
sahf
mov
push
push
adc
pop
mov
icebp
cmc
cld
inc
nop
adc
sbb
mov
pop
repnz
cdq
out
pop
pop
sub
add
scas
mov
das
arpl
lahf
call
cmp
xor
out
sbb
pop
mov
movs
ins
sbb
test
jns
out
retf
loop
jns
leave
ins
add
das
in
js
test
push
push
inc
mov
mov
icebp
daa
mov
push
pop
sahf
mov
out
nop
aas
lea
fsubp
xchg
xor
mov
sub
inc
out
loopne
mov
loopne
in
aas
scas
cdq
dec
mov
call
mov
sti
cmp
pop
mov
into
xor
mov
or
(bad)
fdivr
ficomp
cmp
out
mov
(bad)
sub
mov
push
xor
jnp
xor
int3
pop
xchg
lods
mov
cmc
pop
lds
xor
ror
clc
cmp
mov
mov
test
and
and
fsub
mov
mov
cmps
xchg
xor
push
mov
jg
and
pop
in
out
sahf
cmps
imul
cmc
les
dec
sbb
lods
sbb
mov
mov
sbb
cs
jae
mov
bound
ss
cmp
add
inc
jbe
push
mov
fisttp
pop
mov
pop
dec
ins
cwde
adc
cmp
outs
rcl
out
adc
call
js
aaa
xchg
push
rol
fsubp
sub
add
jmp
mov
push
push
leave
jne
cld
mov
add
jns
push
pop
dec
sub
jne
cli
xchg
fwait
sbb
adc
fiadd
scas
call
mov
(bad)
scas
mov
(bad)
dec
repnz
sub
and
dec
rol
mov
mov
jle
mov
mov
je
pop
cdq
call
sar
pop
fist
mov
out
sbb
(bad)
test
gs
mov
xor
mov
scas
mov
jns
xor
push
jo
dec
rcr
sub
sar
or
scas
ins
lds
jecxz
inc
mov
retf
(bad)
movs
jmp
fsubr
push
inc
pop
and
cmps
imul
jns
and
pop
push
mov
push
xchg
adc
pop
stos
sbb
dec
inc
push
imul
or
dec
out
push
enter
in
mov
cwde
mov
mov
xor
int
lahf
and
sub
adc
pop
mov
pop
rol
(bad)
out
(bad)
push
js
into
sbb
lds
ret
push
sub
outs
outs
fiadd
ins
jnp
mov
cmp
into
dec
cmc
mov
in
cdq
dec
push
les
mov
test
repz
shl
pop
mov
sbb
rcl
out
xchg
xor
jp
shl
and
inc
(bad)
jge
les
add
push
cmp
(bad)
mov
dec
xchg
in
stc
loopne
mov
mov
push
jne
mov
add
(bad)
popf
sub
daa
pop
leave
jl
mov
gs
xor
ss
or
sub
sar
mov
cs
mov
inc
push
je
in
xchg
jne
or
out
stos
pop
outs
iret
f2xm1
rcl
lds
(bad)
bound
sub
mov
adc
jge
(bad)
fisttp
xor
push
xor
mov
imul
and
dec
mov
sub
push
mov
adc
ja
imul
mov
aas
data16
sub
cdq
adc
aaa
(bad)
dec
(bad)
jne
popa
mov
enter
jg
cmp
xchg
fiadd
enter
jmp
in
add
xchg
mov
inc
rcl
add
push
out
inc
dec
iret
(bad)
ds
mov
loopne
dec
dec
pop
cld
icebp
ret
xor
pop
and
pop
sbb
dec
jb
hlt
scas
ret
movs
pop
sub
repz
sbb
out
sub
sub
(bad)
in
sahf
or
pushf
cmps
shl
in
push
clc
(bad)
loope
(bad)
jecxz
mov
loope
pop
daa
repnz
imul
jmp
fwait
dec
dec
rcl
je
popf
push
(bad)
jp
sahf
push
or
fs
and
mov
adc
sub
int
outs
cld
scas
cmc
lea
and
(bad)
ss
sub
add
add
aas
sbb
sbb
rol
mov
jecxz
aaa
cmps
dec
das
jl
xchg
movs
cmove
aas
xchg
movs
xchg
push
adc
je
ror
fidiv
xchg
inc
sub
jl
push
shr
sbb
jl
dec
mov
mov
push
lds
out
scas
sar
fmul
push
add
jb
fdiv
sbb
pop
cmp
mov
pop
mov
in
call
nop
cvtps2pi
fisub
shl
icebp
inc
mov
rol
xchg
(bad)
das
inc
shr
movs
dec
cli
rcr
div
push
cmps
imul
mov
push
outs
scas
dec
adc
(bad)
std
imul
adc
retf
adc
mov
push
fdivr
add
inc
mov
frstor
pusha
sbb
mov
xchg
dec
mov
mov
push
jno
(bad)
fdivp
jl
in
xor
hlt
mov
test
(bad)
and
inc
ror
sbb
add
jbe
xor
pop
jae
xchg
xchg
pop
inc
(bad)
sub
mov
dec
int3
mov
(bad)
cli
mov
xchg
sub
retf
sbb
scas
stos
lods
dec
cld
sub
jns
mov
adc
fs
std
sahf
jecxz
push
jp
pusha
fcom
mov
(bad)
fwait
mov
jp
rol
dec
cmp
dec
mov
mov
loope
orps
cmp
test
fistp
cmps
cli
mov
xchg
pop
fidiv
rol
cdq
adc
jp
in
mov
sbb
cmp
(bad)
rol
daa
test
add
mov
or
repnz
ret
popa
mov
hlt
mov
and
rcl
push
fnstcw
inc
cmps
movs
das
fdivr
adc
ja
ins
push
dec
or
mov
cmp
fdivp
fidiv
sub
(bad)
mov
push
pop
int
ss
pop
pop
cmps
inc
push
sbb
adc
fs
inc
and
(bad)
push
push
cld
loopne
jp
gs
cwde
add
call
fsubrp
dec
repz
or
pop
mov
enter
inc
out
inc
or
or
leave
fsub
sbb
(bad)
cmp
xor
out
jnp
data16
in
xlat
mov
ins
jp
inc
jae
and
mov
adc
xchg
repnz
(bad)
hlt
scas
xchg
inc
push
jge
fmul
inc
outs
xor
pop
dec
xchg
jo
pop
add
push
dec
shl
sub
mov
rol
sub
add
push
fnstsw
mov
jp
imul
sar
out
pop
jne
mov
gs
cmp
jg
in
sub
je
fsubr
inc
test
and
les
stos
sub
fidiv
mov
add
xlat
mov
(bad)
pop
daa
in
inc
repz
sub
mov
arpl
repz
and
xchg
test
(bad)
fistp
add
pusha
add
mov
fwait
test
mov
popf
test
pop
push
sub
mov
jle
cmp
retf
jno
dec
cmp
cmp
push
push
add
sub
(bad)
cmc
pop
inc
sbb
pop
jnp
mov
outs
neg
adc
mov
and
retf
fwait
cld
sar
jge
scas
xchg
push
scas
xchg
aam
xchg
fst
add
dec
add
sti
inc
mov
cmp
adc
and
adc
xor
pushf
push
or
pop
sbb
fcomp
neg
outs
(bad)
sub
jne
je
in
daa
mov
out
pop
fcomp
push
fwait
or
aas
fiadd
and
pop
xchg
or
call
daa
sub
loope
inc
jge
xor
jae
or
or
dec
sub
icebp
mov
rcr
pop
les
xchg
mov
out
xor
shl
push
(bad)
lds
inc
sar
pop
fimul
push
xor
xchg
and
pop
adc
mul
inc
lahf
jnp
cld
sub
mov
outs
adc
pop
js
in
loopne
xor
movs
imul
loope
pusha
mov
call
cdq
push
imul
clc
mov
pop
mov
ret
test
xor
xor
mov
pop
and
sahf
(bad)
adc
cli
or
rol
std
lea
pop
and
call
imul
lods
fdivr
fs
mov
mov
sbb
push
jno
dec
cmp
mov
arpl
sbb
sbb
mov
mov
mov
ss
pop
sar
clc
pusha
rol
push
(bad)
mov
mov
add
mov
jae
or
aaa
imul
adc
push
loop
fstp
dec
xchg
sbb
add
mov
aas
hlt
movs
mov
sti
cmp
push
sbb
xor
cmp
out
jnp
push
xor
movs
jns
lds
in
mov
xor
push
add
pushf
es
bound
jg
das
jecxz
sahf
push
in
pop
inc
jnp
adc
push
les
push
add
stos
add
sti
icebp
stos
xchg
and
xor
je
jecxz
mov
stos
repnz
sti
mov
mov
js
add
int
jl
(bad)
sub
adc
jmp
xor
stos
bound
sti
ja
jns
cmp
add
or
lock
pop
pop
fcomi
adc
fs
in
rcl
daa
pop
mov
jb
nop
jl
mov
fwait
in
push
jmp
push
adc
lods
cdq
xchg
arpl
mov
dec
mov
js
and
add
popa
in
scas
jecxz
or
outs
retf
adc
jg
sti
push
lock
nop
mov
inc
loope
gs
or
inc
retf
stos
repz
xchg
sbb
(bad)
or
ret
lods
movs
int
cli
daa
test
or
popf
fwait
icebp
data16
inc
popf
jo
sub
sbb
hlt
xchg
lods
jmp
or
mov
mov
pop
jns
(bad)
adc
loopne
inc
call
add
cld
shr
push
inc
fidivr
adc
pusha
lock
pop
jl
and
stc
xor
arpl
mov
or
adc
add
push
jo
fs
mov
idiv
outs
sbb
mov
push
dec
push
push
in
int3
mov
xor
jno
jmp
fnstsw
in
mov
xchg
cdq
int3
test
aam
fs
and
cmp
repz
ins
shl
xor
test
mov
je
jg
lea
mov
popf
shl
cmp
xchg
mov
mov
mov
lock
in
jb
cwde
mov
add
dec
fst
enter
adc
sahf
inc
xchg
pop
dec
shr
dec
mov
mov
jecxz
dec
and
push
push
mov
movs
jecxz
pop
dec
in
cmps
dec
pcmpeqd
push
add
sar
nop
xor
mov
pop
pop
pop
jge
mov
lods
cmps
or
xchg
ins
add
frstor
ret
fsub
mov
xor
addr16
jg
inc
add
and
jns
inc
repz
pop
inc
push
and
jno
rcl
das
das
dec
stc
out
or
out
dec
sub
jmp
popf
addr16
es
ret
sbb
enter
retf
inc
cwde
push
out
(bad)
xor
xchg
xor
scas
fdivr
loop
mov
movs
popa
push
sbb
sbb
sar
and
sbb
(bad)
cdq
movs
adc
(bad)
jae
ss
dec
pop
xchg
mov
add
sbb
jo
xchg
in
mov
sbb
stos
(bad)
aaa
pop
push
daa
pop
rcl
xor
pop
cld
jecxz
fisubr
mov
push
inc
inc
fcom
gs
arpl
les
movs
sahf
pop
lods
stos
jge
xchg
sbb
loope
es
push
xchg
jbe
mov
nop
push
mov
shl
adc
nop
cmps
outs
sub
xchg
xchg
mov
dec
repnz
push
ja
mov
mov
lahf
mov
jb
addr16
push
inc
outs
jecxz
retf
sar
iret
mov
jbe
cmc
(bad)
aad
xor
dec
movs
aam
mov
xor
stos
dec
jp
mov
push
fwait
(bad)
xchg
retf
(bad)
and
jle
adc
xchg
and
mov
ror
or
or
ins
and
jle
or
cmp
mov
dec
mov
mov
sbb
sar
pop
add
cmps
cmc
mov
inc
add
add
jo
adc
call
ss
lods
sub
dec
repz
retf
mov
stos
js
leave
mov
push
in
arpl
xchg
push
jne
fisttp
pmulhw
xor
push
mov
ja
mov
mov
out
mov
retf
add
je
add
leave
cmp
fist
jle
daa
push
idiv
int
lock
inc
jecxz
jmp
jnp
or
movs
(bad)
pop
(bad)
stos
lods
jmp
aas
in
cwde
pop
xor
test
mov
(bad)
js
test
repz
lahf
cmp
clc
jmp
mov
enter
pop
cmp
jle
push
retf
ss
mov
pause
hlt
into
out
jo
sar
jns
stos
mov
rcr
xlat
or
ins
inc
es
pop
dec
and
sbb
add
lahf
retf
int
(bad)
ins
loop
sub
add
jmp
xchg
pop
das
mov
push
pusha
jnp
jo
mov
cs
adc
xchg
nop
mov
xchg
sub
cmps
out
dec
and
dec
xchg
call
mov
xchg
(bad)
push
xlat
mov
fwait
scas
or
mov
or
je
mov
sub
retf
add
ret
(bad)
fdivr
call
adc
inc
mov
mov
popf
rcl
pop
icebp
dec
test
or
pop
inc
or
adc
cmp
adc
push
pop
movs
arpl
pop
jg
in
adc
jecxz
add
int
push
mov
push
xlat
fs
mov
leave
inc
mov
(bad)
sub
bound
jnp
xchg
xchg
xchg
jl
lods
gs
cmps
mov
nop
push
stos
ficom
mov
mul
nop
and
iret
imul
ds
lahf
outs
cmp
sbb
call
sbb
pop
xor
stc
mov
pop
xor
ins
jmp
xchg
ret
cmp
clc
fist
dec
sbb
jecxz
rcl
xchg
shufps
icebp
ror
jle
xor
sub
fisttp
mov
(bad)
or
xor
inc
mov
jo
daa
pop
or
mov
in
mov
sub
nop
cmp
shr
add
enter
lods
push
or
xor
rcr
add
movs
mov
jns
cmp
jb
mov
rcr
ficom
xor
retf
ja
out
aad
and
add
repz
cmps
mov
cmp
(bad)
fidiv
test
pop
popa
div
aad
mov
pop
jle
lock
into
imul
mov
jp
sbb
sub
bound
mov
dec
std
push
xchg
mov
pop
popf
enter
rcl
xchg
sar
inc
pusha
jecxz
push
pop
ret
dec
loope
pushf
ins
adc
call
and
mov
and
std
test
push
mov
leave
jp
ret
test
retf
hlt
aas
inc
sbb
mov
sbb
xchg
in
push
push
mov
inc
mov
daa
adc
sbb
xchg
sub
or
mov
mov
stos
mov
int
mov
pop
jno
xchg
pop
fsubrp
push
adc
sti
push
push
xchg
pop
adc
inc
hlt
cmp
mov
pop
mov
stos
xor
inc
daa
mov
ins
(bad)
(bad)
push
adc
jo
push
movs
fnstsw
gs
icebp
shl
dec
dec
mov
inc
mov
iret
(bad)
jo
cmp
sbb
xor
inc
leave
jmp
jge
sub
mov
jmp
cmp
lahf
mov
lods
into
scas
fcom
sar
jl
jae
cld
add
ror
xchg
push
out
add
dec
xor
mov
(bad)
mov
mov
cwde
rcr
and
cmps
repz
dec
mov
call
push
clc
hlt
aaa
push
pop
loop
fisub
jmp
shl
mov
js
rol
xchg
mov
pusha
stos
clc
add
adc
or
dec
(bad)
icebp
dec
clc
push
cmc
lahf
cmp
sbb
lahf
mov
jg
dec
out
cwde
fld
lods
out
push
pop
adc
xchg
frstor
aaa
jbe
push
pop
shr
mov
mov
jmp
lds
lahf
or
sahf
retf
daa
scas
sbb
retf
cdq
push
dec
stc
cmp
adc
out
cdq
aas
dec
les
jnp
mul
mov
cli
add
xchg
add
add
test
xor
pusha
xchg
pmaxub
das
jmp
stos
cmp
dec
cmp
(bad)
adc
mov
push
mov
icebp
int
mov
or
sbb
stc
int
dec
cmp
pop
mov
sbb
retf
lods
lds
inc
cmp
lds
adc
add
(bad)
mov
sub
inc
mov
dec
or
xchg
mulps
sub
inc
ror
jbe
test
outs
addr16
sbb
sbb
jle
leave
sbb
adc
fwait
mov
xchg
mov
imul
(bad)
adc
push
fnstcw
mov
sbb
and
sbb
mov
jb
ins
sub
jg
or
scas
mov
movs
cmp
(bad)
out
adc
jl
ins
inc
out
into
xor
inc
push
dec
and
pop
push
adc
mov
inc
xchg
popf
pop
cli
mov
or
mov
into
lock
inc
clc
mov
and
push
and
test
cmp
or
lock
adc
inc
adc
xor
retf
push
inc
dec
ins
mov
in
out
mov
mov
jle
rcl
out
mov
mov
jg
mov
in
add
(bad)
mov
dec
push
(bad)
push
out
add
test
sbb
test
push
es
add
nop
out
cmp
mov
lds
(bad)
hlt
jne
sub
rol
push
clc
mov
data16
nop
xor
and
dec
mov
ss
stc
push
push
mov
sbb
les
add
icebp
adc
xchg
push
in
add
(bad)
cmps
test
sub
dec
popa
pop
adc
test
lock
std
mov
or
out
mov
gs
jge
stc
xchg
inc
sub
ffree
scas
xor
ret
aaa
imul
sub
jg
mov
ins
sub
and
ret
add
sub
push
fsubr
cmp
stos
mov
mov
imul
stos
or
mov
pop
test
dec
jnp
(bad)
das
xor
xor
fistp
sbb
inc
ret
mov
xor
(bad)
pushf
sahf
sahf
pop
and
jns
cmp
sti
xchg
mov
in
(bad)
js
pop
imul
aas
jle
loopne
jle
(bad)
repnz
mov
mov
jge
inc
sub
or
aas
sbb
fist
loope
mov
jmp
adc
cmp
daa
mov
shl
(bad)
pop
dec
mov
fstp
pusha
mov
xor
ins
jmp
inc
mov
xchg
arpl
push
stos
mov
lea
mov
fiadd
pop
rol
retf
pop
test
retf
jp
cli
cmp
cmps
cwde
test
in
cdq
(bad)
punpcklwd
ret
out
pop
cli
or
mov
nop
sub
(bad)
cmp
jg
inc
pop
cmp
pop
xchg
jns
pop
cmp
jg
inc
push
pop
call
les
into
mov
shl
dec
mov
mov
fnstenv
in
enter
stc
and
mov
cwde
mov
mov
sar
jmp
ret
jae
adc
lock
dec
(bad)
std
cmp
iret
dec
sub
dec
scas
ss
inc
inc
fmul
leave
push
sbb
xor
and
in
in
fdivr
stos
or
call
jb
lahf
push
out
adc
jle
pop
cmps
idiv
ret
sahf
pop
out
aam
or
xlat
stos
dec
fsub
in
aaa
jno
inc
fwait
retf
sub
pusha
mov
push
cmc
sar
jp
pop
xchg
ffreep
imul
leave
jmp
mov
call
pop
xor
pop
or
xchg
pop
std
or
mov
jns
push
xor
jge
shr
and
adc
xchg
ja
mov
mov
call
cli
in
push
push
adc
xor
mov
pop
dec
xlat
mov
cli
mov
repz
fst
push
inc
inc
mov
jb
inc
mov
repnz
mov
cmps
push
pushf
pop
loope
lock
rcl
mov
mov
jge
inc
out
dec
adc
jno
jno
out
xchg
push
or
les
mov
xchg
and
xchg
sbb
sahf
sbb
movs
cmp
ja
jmp
mov
jnp
fcmovu
ret
and
loopne
xchg
in
addr16
repz
mov
push
mov
push
aad
test
mov
fcmove
ins
sti
(bad)
idiv
ds
mov
xor
add
jp
dec
inc
scas
push
jae
fsub
pop
sti
xor
test
addr16
repz
jg
xchg
mov
int
add
and
pop
iret
dec
sbb
aad
or
adc
mov
add
add
icebp
fisubr
sar
fcomp
or
out
sub
add
and
call
pop
dec
outs
jp
sub
jbe
shr
sub
jo
cld
xchg
cmps
dec
mov
xor
or
xchg
in
pop
mov
adc
xchg
dec
xor
icebp
mov
jns
outs
mov
cmp
jl
sub
and
ror
pop
out
push
mov
push
lea
adc
lock
mov
es
ret
mov
sbb
stos
das
data16
cli
jo
fldenv
sub
xor
lea
jb
clc
(bad)
scas
pop
cmp
mov
test
call
fs
stos
rcr
jp
data16
push
mov
fist
stc
or
xchg
mov
mov
out
xchg
aas
mov
sub
mov
sbb
in
mov
pusha
repnz
daa
jle
cld
vphadduwq
jl
shl
ror
and
jmp
cmp
out
retf
pop
dec
daa
shl
sti
sbb
adc
push
mov
clc
or
push
jmp
pop
pop
xchg
stos
jle
add
sub
cmps
retf
xor
mov
dec
pusha
mov
sub
rcl
mov
lock
(bad)
leave
and
test
stc
dec
in
or
mov
cli
jo
xchg
test
nop
dec
retf
pop
push
or
aaa
in
jl
leave
and
xchg
pop
cmp
add
outs
xchg
fdivrp
sbb
fcomp
dec
je
lock
cmp
xor
std
and
fcom
xor
dec
retf
out
push
not
mov
scas
dec
fisttp
(bad)
call
or
fistp
les
call
bswap
aaa
fisttp
aas
das
mov
adc
xchg
pop
out
imul
lods
mov
aad
jo
test
loopne
mov
int3
sbb
std
cmp
xchg
jecxz
retf
mov
fnstenv
fisubr
or
xchg
mov
adc
out
adc
hlt
xchg
jne
imul
call
sahf
movs
popw
ja
cmp
cli
addr16
mov
adc
and
or
aaa
test
enter
xchg
jl
(bad)
jmp
inc
lods
(bad)
dec
test
xor
stc
push
jo
out
out
xchg
ins
cdq
mov
retf
sbb
xor
jge
(bad)
in
jbe
(bad)
bound
nop
push
cmp
xchg
hlt
aad
xchg
movs
in
add
mov
sub
(bad)
loope
(bad)
jp
mov
or
xor
lods
mov
movs
rcr
inc
mov
inc
into
movs
loop
xchg
xchg
jecxz
stos
mov
out
shr
addr16
cs
lods
or
xchg
(bad)
(bad)
call
mov
sbb
fiadd
cmp
push
mov
minps
(bad)
push
in
adc
stos
fst
jb
xchg
xlat
add
out
(bad)
push
out
int3
mov
loop
repnz
fild
sahf
mov
(bad)
shr
jge
ins
stos
in
das
cdq
cmps
push
jmp
out
cmp
test
lock
push
lods
push
mov
in
sbb
shr
pop
mov
repz
(bad)
jne
inc
sbb
icebp
cmp
in
xchg
test
or
stc
jecxz
retf
inc
js
mov
jae
(bad)
aam
push
add
leave
(bad)
js
or
sahf
pop
dec
push
mov
pop
add
dec
add
mov
mov
mov
lds
adc
or
shl
inc
sub
sbb
cdq
cmps
add
pop
cmc
je
sbb
retf
or
xchg
mov
push
into
or
rcr
jae
pop
mov
es
repnz
and
push
sbb
mov
jo
inc
jg
push
rcr
shr
fldenv
call
lahf
adc
push
mov
test
sbb
lds
nop
ret
mov
cmp
sub
jecxz
fimul
push
aas
push
or
and
arpl
jecxz
in
ss
retf
inc
xchg
xor
outs
mul
mov
cmp
dec
jbe
cmp
aam
fild
hlt
push
xchg
jle
mov
pop
ja
pop
xor
cmp
mov
inc
pop
(bad)
jecxz
jbe
adc
cmp
sub
ds
pop
pushf
retf
and
inc
into
(bad)
push
sti
dec
jns
gs
jmp
xchg
xchg
jb
dec
shr
mov
scas
inc
add
out
pop
cli
sbb
and
shl
arpl
popa
sbb
mov
jp
cmp
dec
pop
outs
sub
mov
mov
jg
loope
rcl
movs
aas
dec
fst
add
jg
fidivr
loopne
shl
inc
dec
adc
lock
addr16
jo
and
xchg
jae
xchg
sar
xchg
push
mov
test
xchg
xchg
aam
sbb
es
fcomp
les
gs
call
xor
aad
std
and
pop
stc
fiadd
(bad)
repz
aas
inc
(bad)
and
nop
lods
clc
test
xchg
mov
push
cmc
loope
xor
jae
lahf
fldcw
fwait
jbe
add
pusha
jb
jl
push
xchg
pop
inc
mov
rcl
adc
mov
hlt
xor
aad
adc
mov
and
cli
test
mov
lahf
or
scas
fld
fiadd
in
jns
push
xchg
idiv
mov
jmp
sbb
icebp
repnz
xor
and
aam
(bad)
and
ja
lods
pop
mov
nop
pop
pushf
push
in
lds
xchg
adc
ss
mov
adc
push
mov
nop/reserved
aaa
and
retf
cmp
jl
mov
in
adc
mov
xor
test
push
repnz
xor
ret
shr
outs
cmps
add
mov
xor
mov
test
mov
jne
retf
dec
div
(bad)
xchg
xor
cmc
inc
push
movs
aad
cmp
jb
adc
mov
je
(bad)
pop
sti
sti
je
inc
cdq
sahf
js
dec
icebp
sbb
jg
lahf
and
dec
aas
jne
mul
les
cmp
jns
sub
mov
push
xchg
jns
das
and
adc
retf
cld
icebp
rcl
(bad)
push
push
in
mov
sahf
dec
test
add
es
aad
adc
cmp
jnp
mov
mov
test
call
mov
jnp
into
pop
lods
inc
fidiv
clc
shl
xor
pop
pop
into
jae
dec
fwait
xor
test
ret
sti
sub
mov
aas
cmc
dec
cmp
clc
repz
ins
idiv
pop
mov
xchg
in
icebp
(bad)
daa
or
lea
mov
or
addr16
scas
mov
inc
pop
mov
in
imul
ficom
ins
xor
lods
adc
pop
fcmove
mov
mov
jge
cmp
mov
ror
daa
pop
ds
dec
adc
daa
jecxz
adc
pop
test
int
pop
pop
out
mov
loop
ror
ins
into
push
scas
das
pop
push
jmp
push
sub
and
sub
ds
rcl
dec
scas
pop
call
and
cs
daa
cmc
jne
cmp
rol
nop
repnz
in
test
or
mov
mov
inc
or
xchg
loopne
imul
xchg
movs
sbb
sar
stc
out
std
sub
cmp
or
std
test
sub
hlt
push
int3
lds
out
or
into
loopne
sub
add
jmp
pop
fwait
pand
inc
adc
lea
push
mov
mov
mov
mov
jns
jb
(bad)
xor
ss
movs
ficomp
mov
inc
rol
sub
or
push
repnz
jle
or
and
ins
sbb
sub
out
sub
inc
sar
lea
ins
loopne
test
push
push
iret
and
mov
std
adc
sub
jmp
(bad)
ss
push
loope
loopne
test
xchg
sbb
(bad)
std
xor
outs
int3
in
call
mov
je
fs
(bad)
icebp
inc
fs
fsub
sub
pop
jno
movs
xor
repz
jmp
and
lock
mov
loope
leave
es
push
xor
push
add
fadd
cmp
popa
inc
mov
loopne
mov
hlt
xor
lock
dec
cs
sub
scas
push
mov
add
fs
xchg
jnp
mov
inc
dec
mov
in
push
call
cmps
mov
add
xor
movs
inc
push
fwait
cmp
cld
in
pop
enter
cmp
sub
jnp
mov
cmc
bound
test
xor
push
push
or
sub
inc
(bad)
xchg
es
push
setle
cwde
xor
jb
(bad)
data16
cmp
arpl
push
test
into
cmp
xchg
adc
mov
mov
in
or
sub
mov
mov
fadd
sub
out
mov
int
mov
sub
stc
pop
je
mov
shl
jnp
int3
pop
test
arpl
jae
pop
push
dec
pushf
aaa
cs
sbb
call
cmp
ret
imul
and
test
aad
(bad)
cmps
mov
mov
leave
ds
dec
fist
in
fiadd
sub
pop
(bad)
xchg
sbb
or
sub
add
aaa
sbb
jmp
cli
mov
and
cmp
repz
xor
(bad)
mov
scas
loopne
retf
pushf
sub
imul
xchg
js
push
pop
cmp
jnp
cmps
mov
mov
and
lods
xor
pop
mov
lea
out
test
adc
push
fs
fsub
inc
sbb
fcomp
sahf
lods
sub
stc
fs
test
xchg
adc
cwde
iret
je
bound
test
(bad)
push
popa
inc
cmps
call
fisub
adc
sub
and
mov
adc
add
imul
and
imul
bound
stc
dec
or
call
or
adc
fucomp
fldenv
test
dec
(bad)
xor
add
adc
xchg
or
inc
mov
loope
adc
arpl
in
inc
mov
pop
cmp
mov
es
push
hlt
js
xchg
loope
pop
add
jg
jecxz
xchg
push
mov
pop
imul
dec
ins
or
ss
push
shr
icebp
pop
push
cs
pop
add
ficom
ins
mov
mov
popf
xor
in
cs
cmp
fs
pop
cmp
mov
fisttp
in
push
fptan
xor
pop
stc
push
cmps
icebp
sub
in
sbb
mov
clc
fsubr
cmp
dec
sub
xchg
mov
dec
daa
(bad)
jbe
mov
out
shl
cmp
sbb
loopne
adc
add
adc
call
stos
ins
mov
call
shl
push
cmp
inc
test
scas
in
dec
sub
mov
sub
jp
fdiv
sbb
pop
call
stos
ins
inc
out
dec
iret
ret
imul
lock
cwde
cmp
or
retf
es
pop
retf
pop
into
sbb
cmc
in
dec
pop
fisub
retf
and
cli
xchg
lds
test
and
xor
stos
inc
jle
or
ja
fdiv
pop
jbe
and
stos
push
leave
lds
pop
adc
fstp
cmc
outs
hlt
(bad)
loop
mov
aad
add
push
shl
arpl
into
mov
nop
loope
jno
bound
in
enter
sub
popa
stos
dec
nop
hlt
pop
sbb
popf
repz
or
clc
jb
cdq
push
mov
jbe
fcom
inc
ja
loopne
add
addr16
in
and
mov
movs
pop
mov
push
cdq
fisub
and
jns
push
(bad)
sbb
ins
inc
dec
sbb
mov
and
(bad)
mov
jae
mov
jg
dec
cmp
aas
loope
dec
xchg
mov
push
ja
ror
cmp
push
add
inc
js
shr
pop
jl
add
dec
cmp
addr16
repz
call
sub
scas
mov
jge
push
div
cmp
xchg
cmp
call
repz
and
mov
test
dec
div
inc
std
inc
mov
repnz
pushf
shl
push
and
movs
jecxz
push
fwait
in
fidivr
test
mov
lods
not
ins
mov
dec
fsub
pop
jns
and
es
xor
cmp
mov
xchg
pop
lods
ret
add
jno
out
addr16
retf
or
sub
xor
and
push
mov
daa
cmc
stos
sbb
jnp
scas
pop
mov
add
loop
xchg
or
mov
pop
pop
xor
cmc
inc
(bad)
dec
out
fucomi
xchg
mov
fadd
jecxz
mov
neg
or
jecxz
call
push
jae
mov
retf
ret
push
xlat
and
jno
push
in
mov
std
outs
aam
mov
outs
clc
jecxz
les
push
dec
test
jb
retf
xchg
popf
cmps
sub
sbb
aam
push
inc
ret
xchg
push
in
and
sub
mov
adc
(bad)
cmp
sub
daa
shl
loop
xchg
push
fidivr
sub
js
mov
ret
inc
popa
or
sbb
cmps
test
ss
cmps
in
mov
ins
in
lds
or
pop
inc
xor
fidivr
jnp
pushf
into
sub
jmp
call
push
daa
stos
div
outs
cmps
mov
cs
idiv
rcr
jmp
shl
aas
jne
and
xchg
lods
mov
xchg
cmp
pop
push
shl
sbb
in
mov
dec
inc
arpl
sbb
and
push
mov
inc
xchg
fwait
mov
ins
(bad)
pop
ror
mov
xchg
dec
cmps
or
das
ror
hlt
int3
mov
cmps
jnp
mov
dec
(bad)
inc
xchg
cmps
pop
pop
(bad)
and
int
test
neg
imul
jmp
sub
jmp
dec
fild
mov
xchg
stos
xchg
inc
pushf
scas
mov
inc
repz
movs
frstor
or
inc
mov
jae
daa
adc
xor
out
(bad)
mov
push
or
add
xchg
imul
or
icebp
jecxz
in
repz
xlat
pop
imul
icebp
xchg
cmp
movs
shr
sub
shl
fnsave
xchg
and
(bad)
aas
imul
add
out
xchg
mov
dec
push
test
cmp
jnp
arpl
icebp
push
pop
pop
int3
addr16
sub
xchg
jp
and
ficomp
aad
mov
push
mov
fild
dec
sbb
mov
out
xor
sbb
cmp
data16
mov
sbb
pop
int3
inc
les
aaa
mov
popf
jnp
outs
cmp
inc
(bad)
and
or
inc
outs
(bad)
(bad)
out
push
pop
cmp
mov
xchg
xchg
mov
fsub
sub
(bad)
jp
sub
scas
iret
fmul
lds
push
mov
sbb
push
ficom
into
jg
rcl
ret
retf
fincstp
or
pop
scas
pop
push
xor
jmp
jg
add
fs
push
pop
sahf
cmp
out
cmc
in
inc
xor
mov
xchg
cld
xor
xchg
test
mov
mov
sub
in
loopne
mov
les
inc
pop
test
scas
mov
fstp
fs
and
adc
inc
xor
or
int3
retf
mov
fwait
xor
mov
int3
inc
sbb
ins
call
mov
or
aaa
adc
mov
lahf
lea
mov
fs
mov
push
inc
(bad)
fcmovnu
ins
pop
mov
push
inc
and
fsubr
dec
and
mov
daa
outs
and
cld
ret
mov
pop
loop
call
(bad)
bnd
jmp
rol
or
sbb
xchg
mov
xchg
adc
sub
pop
xor
mov
xchg
lds
xchg
xchg
fidivr
or
mov
cs
outs
jno
mov
popa
push
sbb
or
out
xor
repz
inc
jle
iret
jns
test
(bad)
cwde
int3
test
inc
jo
mov
mov
mov
test
xor
clc
mov
daa
pop
xor
cld
gs
fidivr
dec
push
jmp
jmp
retf
iret
out
mov
add
mov
aad
mov
out
enter
movs
cmps
nop
ins
arpl
jnp
adc
out
inc
(bad)
xchg
mov
fcom
xor
jecxz
cmp
aad
xor
inc
movs
in
jo
mov
sbb
call
dec
(bad)
adc
and
jns
add
jmp
sub
test
jbe
adc
outs
test
ss
xor
mov
shl
clc
ins
int
sbb
xchg
inc
dec
dec
push
inc
dec
add
std
sbb
xor
fst
xor
stc
cs
inc
fisttp
scas
add
imul
mov
xlat
aas
jae
enter
push
cwde
mov
dec
jle
mov
sti
inc
(bad)
cli
xchg
out
add
sbb
jmp
loope
(bad)
sbb
xchg
dec
call
sbb
and
and
add
fld
fwait
std
sbb
mov
loopne
loop
mov
mov
ins
shl
stc
cdq
sbb
scas
sub
mov
cld
test
lahf
xchg
dec
je
in
ret
sbb
hlt
xor
test
or
sbb
les
xor
ins
sub
xlat
imul
inc
push
and
hlt
dec
fwait
jae
mov
fidivr
jl
ins
jl
loopne
push
rol
ja
(bad)
xchg
cwde
xchg
adc
ret
cmc
pop
add
icebp
push
movs
inc
jnp
jmp
pushf
mov
xor
fild
cdq
stos
push
test
(bad)
js
fwait
xchg
pop
dec
nop
pop
fistp
jecxz
and
dec
je
jge
int
push
in
retf
jmp
stc
jl
jmp
pop
pop
cmp
jns
scas
cmp
(bad)
fwait
sub
call
xor
adc
xor
rcr
adc
inc
push
and
std
or
cmp
and
leave
sub
lock
cmps
inc
cs
scas
nop
dec
retf
and
jge
clc
pop
fcomp
lock
test
shl
int3
in
mov
js
arpl
test
ja
lods
jle
sahf
cwde
push
(bad)
repz
cmp
mov
mov
aaa
adc
not
lds
jmp
in
movs
mov
mov
pop
push
test
sbb
adc
fs
inc
mov
in
mov
jl
mov
xchg
cmp
shl
jb
sbb
(bad)
pop
pop
sub
lods
and
(bad)
and
adc
and
add
mov
mov
xor
mov
fbstp
adc
call
xor
mov
mul
dec
mov
clc
rcl
xchg
xchg
pop
xchg
jbe
push
fwait
push
sbb
push
jae
mov
add
jns
dec
retf
inc
loopne
(bad)
shl
fwait
xor
inc
sbb
loope
ret
dec
push
loop
test
cmps
or
mov
mov
sti
shl
mov
popf
cld
add
ret
sar
ins
cli
sti
retf
mov
dec
cmc
call
xchg
(bad)
mov
pop
xchg
fcomp
mov
sub
xchg
test
cmp
xchg
mov
push
(bad)
(bad)
adc
mov
(bad)
xor
mov
xchg
mov
mov
pop
pop
push
cmps
test
mov
loopne
mov
ins
scas
dec
mov
pop
push
cmps
bnd
out
dec
xchg
ficomp
je
cmp
pushf
int
iret
or
and
(bad)
or
rcl
lock
pop
sub
jl
adc
push
fwait
jno
sti
(bad)
out
mov
jbe
fidiv
call
jnp
pushf
mov
repnz
and
sar
and
cmp
jmp
mov
stc
xor
add
call
mov
ds
lods
jns
dec
ins
(bad)
dec
sub
leave
mov
jmp
retf
xchg
sbb
push
call
mov
imul
or
sti
dec
out
adc
jp
fsub
cld
or
mov
and
test
dec
adc
adc
pushf
test
pop
push
pushf
es
call
fsub
fs
test
test
dec
and
sub
mov
fwait
xchg
jne
or
add
mov
inc
jl
jo
ret
std
cmp
fdivr
rcl
mov
mov
rcr
push
jle
sub
daa
sti
add
xchg
dec
cwde
gs
ret
rcl
aaa
rcr
rol
sti
retf
adc
dec
std
sub
inc
iret
push
test
jo
fadd
mov
lea
xor
jbe
jp
push
je
das
sub
test
enter
xchg
mov
xchg
xor
loope
arpl
jmp
sbb
jecxz
(bad)
cmps
in
jmp
or
ret
sub
inc
movs
or
mov
in
loop
mov
leave
add
cmp
aam
push
xor
(bad)
pop
int3
ret
jl
rcl
nop
cmps
scas
out
mov
int3
cmc
mov
mov
leave
jmp
(bad)
xchg
stos
popf
xor
lods
stc
cld
jle
aad
cs
xor
mov
sub
mov
jl
xor
or
out
pop
fdivr
sub
sbb
xchg
pop
iret
inc
xchg
aaa
dec
cwde
dec
or
sbb
xchg
and
jo
jno
mov
test
imul
push
cmp
lahf
outs
dec
jmp
xor
adc
pop
mov
pop
pop
leave
or
xchg
xchg
jb
xor
leave
mov
jo
imul
sbb
dec
pusha
rcr
sub
lahf
call
stos
pop
cmp
aad
and
loop
dec
jbe
mov
js
repz
(bad)
sbb
push
in
push
and
inc
mov
ret
addr16
push
and
imul
jmp
aaa
cmp
mov
jo
cmp
and
cmp
int3
cdq
sar
dec
(bad)
pop
xor
dec
jnp
xchg
daa
ret
mov
cmp
movs
int3
xor
ss
dec
test
and
sahf
jae
sbb
dec
add
daa
jno
std
mov
test
xchg
pop
repnz
sbb
mov
movs
retf
outs
mov
dec
inc
sub
mov
cmc
xor
cmp
in
push
cmps
push
mov
push
das
push
ror
les
sbb
mov
cmp
adc
dec
(bad)
xor
pop
pop
push
mov
retf
int3
clc
mov
sti
add
mov
pop
(bad)
fnstcw
inc
inc
imul
cmc
mov
test
addr16
and
fidiv
in
add
adc
pop
sbb
push
pop
out
pop
mov
test
sub
xor
cmp
(bad)
bnd
pusha
in
cld
add
xor
cmp
cs
outs
xchg
les
int
aam
xchg
int
lea
sbb
inc
mov
clc
div
cmp
mov
sub
adc
push
add
sub
jecxz
xor
jmp
add
ret
aas
fist
cli
inc
sar
xchg
adc
fsub
lock
adc
xchg
out
sub
push
fdivr
mov
pop
lds
adc
mov
sub
fcom
sub
xchg
iret
add
cld
inc
xor
push
ja
pop
nop
jnp
mov
popa
mov
sub
add
cs
jbe
pop
xchg
xor
mov
cli
dec
push
cmp
mov
sub
sub
popa
stos
in
cmp
or
sahf
clc
jl
test
(bad)
stc
nop
jge
xchg
pop
out
cli
loope
inc
cmc
or
test
xor
pop
imul
mov
dec
scas
arpl
scas
jno
mov
rcr
mov
pop
mov
sbb
test
xchg
cmpxchg
js
fcmovne
dec
lds
push
inc
daa
cmp
ret
jbe
das
loopne
je
mov
psubsb
cmp
jns
aaa
out
pop
adc
xchg
leave
adc
ja
add
aas
mov
and
test
sbb
std
mov
xchg
movs
ret
movs
add
cmp
jmp
sbb
lods
pop
enter
ds
enter
daa
cmc
fisubr
push
mov
pop
sbb
mov
ins
imul
test
adc
(bad)
lods
pop
into
out
loope
in
mov
es
call
popa
cwde
je
(bad)
xchg
xor
xchg
test
mov
xchg
cmc
xchg
and
call
jne
mov
fistp
lds
pusha
fldenv
daa
call
fiadd
retf
push
aam
inc
jmp
popf
xchg
xchg
in
bound
js
ror
aas
cmps
mov
pop
dec
sub
xor
les
jae
repz
in
add
mov
int
sbb
inc
mov
fs
sbb
dec
ficom
push
add
xchg
shl
retf
jmp
jp
test
out
movs
movs
(bad)
or
and
xor
ins
fdivr
shl
mov
pop
test
ja
(bad)
call
inc
or
and
(bad)
push
das
jl
jge
adc
cmp
pop
(bad)
or
call
scas
in
scas
mov
jbe
addr16
xchg
dec
cmp
imul
or
pop
mov
pop
repnz
pop
mov
call
push
ds
jb
mov
int
gs
fcmovnu
sbb
jno
in
sub
mov
pop
mov
push
pop
mov
sub
(bad)
sub
mov
mov
mov
jbe
dec
cs
in
popa
hlt
jmp
mov
imul
xor
in
push
pushf
(bad)
mov
jl
mov
idiv
inc
jbe
mov
mov
(bad)
xor
lock
pmuludq
inc
int
pop
clc
sub
pop
mov
or
loopne
sbb
mov
(bad)
ins
sbb
inc
rol
test
or
mov
prefetch
hlt
dec
in
jg
xchg
arpl
push
adc
call
sub
idiv
test
loope
call
aam
imul
lock
push
sbb
sti
in
xchg
or
(bad)
(bad)
addr16
loopne
mov
hlt
add
stos
jnp
movs
inc
pop
xor
daa
lock
(bad)
mov
clc
inc
inc
push
in
sub
inc
movs
sbb
pop
add
ret
mov
inc
and
loop
mov
pop
adc
add
push
xor
push
cmp
cdq
stc
jnp
or
stc
adc
iret
mov
fs
and
sub
div
and
xor
pop
rcl
add
int3
cmp
(bad)
jnp
and
add
into
in
add
mov
cmp
xchg
leave
push
mov
push
ret
inc
push
sbb
in
test
xchg
je
loope
dec
jmp
inc
test
cmp
inc
loop
std
mov
sub
fxch
fisub
jmp
jo
pop
xchg
pop
loopne
mov
cmp
xchg
fst
xchg
inc
cld
aaa
icebp
in
out
push
sbb
enter
in
fisubr
cmp
sbb
sub
dec
mov
stos
xor
push
or
xor
jns
dec
aas
add
jne
push
xchg
data16
jle
jl
push
aam
or
mov
dec
test
lds
xlat
xchg
ror
les
mov
cmp
mov
aas
or
jnp
cwde
dec
push
push
jbe
jae
inc
stos
cmp
retf
sbb
outs
jge
adc
mov
mov
movs
es
daa
push
iret
cmp
push
adc
or
xor
mov
sub
mov
sbb
pop
clc
sub
adc
adc
cwde
xor
jle
adc
js
(bad)
jae
xchg
loopne
add
(bad)
jmp
push
pop
and
mov
cmp
add
icebp
gs
sahf
sar
repnz
(bad)
and
sbb
xchg
call
pop
inc
and
dec
jnp
inc
jecxz
push
mov
xlat
sti
or
neg
push
mov
(bad)
repnz
ins
or
in
and
mov
data16
jbe
out
mov
das
(bad)
out
lods
sub
movs
sub
cmp
dec
das
pop
pop
xor
bnd
cmc
sbb
mov
dec
popa
mov
lds
loope
test
inc
aaa
xor
cmc
pop
fild
leave
mov
pop
pop
mov
sar
add
mov
mov
inc
or
or
ret
in
out
cld
xlat
xchg
mov
dec
test
inc
sahf
je
(bad)
ss
jo
gs
jmp
lea
xor
mov
daa
movs
xchg
xlat
lods
in
call
xchg
jno
aaa
clc
sbb
mov
js
mov
loope
leave
push
xor
cmp
cli
dec
dec
mov
mov
xchg
aad
add
shl
mov
imul
stos
sar
movs
cmps
fnstsw
or
pusha
or
enter
rcr
sub
mov
(bad)
neg
mov
imul
adc
jl
fsubr
scas
(bad)
stc
rcl
cmp
(bad)
sub
jge
int3
fbstp
pushf
movs
add
ficom
mov
or
sbb
imul
cdq
mov
jle
jne
sub
fdiv
push
shl
mov
cmp
jecxz
ror
mov
mov
xlat
repnz
das
cmp
jns
mov
or
mov
mov
xchg
xchg
lahf
cs
push
add
jge
cmp
dec
div
add
call
adc
inc
mov
sbb
aam
das
jl
test
xchg
lahf
enter
nop
xchg
fs
mov
or
(bad)
enter
cmc
movs
int3
jecxz
(bad)
call
mov
xchg
dec
or
retf
jns
xor
(bad)
add
pop
mov
add
mov
sbb
push
xor
pop
cwde
or
jbe
(bad)
fld
inc
or
movs
jae
rol
xchg
xchg
fidiv
jg
add
test
or
add
dec
test
inc
mov
cmp
adc
sbb
mov
jae
and
cli
retf
pop
sahf
sar
add
mov
das
lock
in
fsubr
adc
xchg
mov
mov
ror
dec
cmc
adc
mov
loopne
arpl
jns
dec
sahf
push
daa
pop
mov
shl
push
push
or
pop
lock
sahf
mov
and
xor
push
pop
bound
fistp
mov
and
imul
cmp
pop
icebp
shr
clc
mov
daa
dec
mov
add
je
inc
dec
mov
xchg
mov
sbb
outs
gs
sub
out
cld
in
sar
clc
fdivr
xor
call
rcr
cld
or
frstor
or
mov
adc
mov
stos
cmp
aaa
repnz
xor
fs
add
(bad)
jb
(bad)
out
mov
in
pop
mov
out
adc
pop
xor
adc
add
xor
xchg
ins
add
repz
adc
push
pushf
ds
sbb
in
fbld
and
(bad)
in
or
jnp
push
push
scas
pop
cmp
mov
popf
retf
mov
into
or
add
pop
mov
add
mov
and
mov
(bad)
movs
and
and
pop
lock
stos
daa
add
cmp
lea
pusha
ds
ret
mov
daa
dec
int3
pop
or
mov
pop
mov
push
lock
mov
je
cmc
pop
ins
fwait
pop
fnstcw
stc
inc
imul
xchg
adc
in
xor
bound
dec
mov
nop
push
aam
xchg
loop
mov
sbb
shl
mov
jl
jl
push
into
xchg
loopne
cld
scas
dec
jno
mov
adc
sub
dec
test
imul
dec
xor
repnz
dec
inc
xor
(bad)
and
pop
jmp
or
adc
add
add
ins
pop
and
jno
sub
pop
jns
out
sub
icebp
mov
jle
gs
imul
dec
or
loop
mov
(bad)
arpl
pop
cld
sub
push
inc
ja
test
pusha
jns
in
xchg
push
inc
and
adc
push
das
bound
jmp
sbb
outs
mov
inc
cmp
sub
jp
es
pusha
adc
xchg
dec
xchg
sbb
fcomp
add
stos
outs
test
sub
mov
loope
dec
add
out
repnz
jle
push
push
daa
dec
mov
xor
add
js
or
and
std
sub
mov
adc
pop
pop
and
push
pop
jecxz
or
js
mov
mov
stc
pop
dec
and
sbb
add
mov
adc
or
xor
or
pop
out
dec
xor
fs
xlat
jl
jge
fadd
inc
sub
cld
ror
or
inc
sub
sub
pop
shl
popf
dec
sbb
xor
aad
imul
mov
mov
repnz
mov
mov
pusha
sar
xor
mul
add
xchg
mov
mov
pop
mov
sar
jmp
mov
cmp
pop
pop
and
inc
xchg
daa
test
std
xor
int
call
add
mov
test
add
xchg
push
dec
mov
xchg
in
xchg
js
mov
dec
(bad)
leave
pop
ins
loopne
mov
outs
nop
or
into
dec
push
cmp
mov
lock
aas
add
sub
out
mov
mov
add
or
sbb
jmp
adc
push
mov
push
inc
adc
lea
or
jbe
jnp
push
inc
lahf
test
loopne
retf
pop
mov
fdivr
pop
test
data16
neg
popa
xlat
idiv
jge
iret
push
in
jmp
rol
xchg
fdivr
mov
lods
mov
sbb
dec
mov
cli
lock
push
push
std
dec
inc
loope
adc
xchg
fdivr
cmp
dec
mov
cwde
test
in
test
xor
dec
and
aaa
inc
mov
popa
adc
ret
(bad)
daa
daa
cld
mov
push
imul
push
mov
shl
mov
mov
xor
bound
mov
pop
and
dec
or
jge
clc
out
xchg
adc
cmp
into
stc
pushf
push
inc
push
ins
popa
or
fs
inc
push
ja
lds
ins
ja
push
es
imul
ret
jmp
jmp
add
fst
push
stos
xor
test
add
movs
test
fsub
std
stos
mov
out
stos
sub
xchg
or
popa
or
fs
shl
or
fisubr
xchg
test
ret
je
stos
pop
mov
cmp
and
aad
fyl2xp1
ror
leave
cmp
rcl
sbb
ins
add
cmps
inc
adc
stos
xor
enter
or
icebp
mov
mov
retf
fdiv
add
mov
popa
push
mov
arpl
fcomp
sbb
push
mov
out
stc
(bad)
aam
sub
dec
idiv
ficomp
cli
dec
xchg
out
fbld
push
xchg
jle
scas
xor
push
push
push
mov
sbb
in
cld
push
add
xchg
push
push
ret
mov
cs
je
or
add
jl
and
bound
repnz
enter
xchg
cmp
leave
push
sub
pop
cld
in
sbb
sub
retf
mov
fimul
or
inc
dec
push
dec
xchg
xchg
inc
add
push
loopne
cdq
xor
mov
adc
cdq
dec
stos
(bad)
dec
mov
cmp
stc
pushf
pop
cmp
ss
cli
pop
mov
mov
jmp
dec
mov
mov
retf
ds
lahf
sbb
in
add
clc
out
mov
xchg
scas
mov
into
mov
push
lods
test
(bad)
cli
adc
fwait
(bad)
ja
and
add
loop
jl
push
jl
es
pop
addr16
xor
loop
cmp
inc
pushf
xchg
or
pop
fprem1
lea
mov
fistp
pop
xchg
adc
ins
pop
ror
cmps
popf
push
in
cld
mov
mov
call
pop
into
or
in
sub
jbe
inc
mov
adc
dec
cmp
sbb
mov
aad
aam
dec
xor
adc
cmp
push
or
pop
scas
test
mov
leave
ret
push
sbb
fdivr
test
repz
movs
loop
jg
test
cvtdq2ps
imul
fwait
mov
pop
gs
sub
dec
mov
ret
pop
jo
aam
mov
nop
cmp
pop
pop
pop
ds
call
xchg
in
xchg
sub
in
sahf
mov
cld
neg
cmc
mov
xchg
jnp
cmp
jae
scas
arpl
xor
shl
add
addr16
nop
inc
repz
(bad)
xor
xor
pop
jmp
call
clc
mov
aad
dec
cld
stos
cmp
scas
cmp
dec
push
dec
and
jbe
(bad)
jmp
int
retf
(bad)
or
xchg
pop
jmp
mov
arpl
dec
test
dec
mov
(bad)
pop
mov
mov
cld
mov
pop
stc
and
pop
push
jge
push
jecxz
push
sti
cmp
inc
dec
xchg
pop
mov
xor
in
test
add
sub
xor
inc
sbb
jae
mov
mov
dec
or
(bad)
bound
(bad)
jle
fucomip
(bad)
mov
add
add
mov
in
and
mov
add
pop
mov
imul
and
leave
out
fsubr
jne
inc
cmc
retf
inc
and
in
retf
cmp
adc
je
or
sub
repz
outs
and
inc
pop
inc
push
and
add
fcmove
outs
scas
leave
cmp
pop
nop
imul
mov
(bad)
in
push
cmp
ins
repz
pop
dec
ret
out
ror
jne
rol
out
fs
push
xchg
fld
cmp
or
adc
fnsave
dec
sbb
nop
jae
lock
lods
(bad)
sbb
jne
ror
icebp
imul
lods
addr16
shl
push
mov
movs
dec
and
dec
adc
pop
mov
xchg
cli
pop
xor
ror
(bad)
cmps
dec
out
(bad)
sbb
repz
xlat
ror
xor
add
cmps
shl
stos
nop
es
jb
mov
fisttp
gs
cld
adc
repnz
out
xchg
sbb
lock
adc
pusha
pop
out
sbb
mov
ins
enter
and
xchg
xlat
sbb
adc
mov
and
jle
jp
inc
fist
or
lods
and
adc
mov
mov
cmps
in
aas
sar
in
fs
repz
fisubr
ins
sub
aad
jp
push
rdtsc
sub
cld
(bad)
cmp
jg
sub
cmpxchg
enter
xor
mov
cwde
add
add
dec
sub
leave
jb
fild
rcr
cmp
sahf
pop
pop
test
mov
in
pop
pop
pusha
inc
aam
rol
test
retf
stc
xor
out
mov
fcom
stos
mov
lds
xchg
sub
add
call
add
pop
sbb
xchg
mov
call
pop
push
push
jg
pop
out
lods
sub
bnd
jmp
and
inc
cmc
jae
sti
mov
push
outs
add
sar
push
mov
cmp
push
mov
sub
mov
xor
add
(bad)
in
pop
cmp
xchg
ins
js
(bad)
cmp
ins
loope
fadd
xlat
mov
cmp
or
pop
jmp
test
xor
(bad)
pop
mov
adc
sub
call
jmp
ss
add
cmps
sahf
mov
inc
mov
(bad)
popf
mov
cmp
repnz
push
scas
pop
sub
mov
icebp
popf
jno
or
sub
jno
mov
and
mov
mov
fidivr
cmp
outs
jne
pop
mov
mov
lock
cmp
sub
es
xor
lock
leave
in
test
and
cmps
out
mov
sub
and
std
inc
retf
sbb
jns
mov
test
in
mov
mov
push
xor
inc
xor
jne
std
push
lds
mov
outs
xchg
call
lahf
test
fisubr
mov
push
or
imul
pop
shl
retf
sar
sbb
jmp
inc
cs
mov
shl
(bad)
pop
(bad)
and
and
(bad)
repnz
push
cmp
imul
mov
cmps
je
ja
sahf
sub
nop
mov
inc
daa
mov
imul
stos
dec
retf
xlat
sbb
out
fmul
out
fwait
cmps
in
pop
test
in
mov
int
mov
and
ss
inc
inc
push
inc
jnp
sar
jmp
adc
jmp
jg
or
test
das
adc
fild
add
pusha
shl
or
clc
out
iret
add
outs
push
sub
cmc
int3
jp
dec
hlt
ja
vpsubw
nop
mov
iret
repnz
xor
xchg
loop
pop
icebp
mov
mov
lahf
jle
loope
mov
mov
pop
mov
hlt
adc
lds
jb
cmps
adc
mov
bound
mov
sbb
lods
aas
imul
cmps
and
push
pop
aam
(bad)
mov
aam
mov
retw
mov
inc
dec
sbb
cdq
add
inc
inc
std
cwde
fst
inc
outs
cmp
xchg
push
bound
xor
(bad)
push
loop
sub
and
mov
xor
sub
les
mov
in
aam
mov
adc
aam
jge
ss
fdiv
mov
sar
mov
(bad)
ins
cld
mov
dec
xor
dec
ret
ret
pusha
std
jmp
outs
push
sub
cmp
xchg
aaa
adc
leave
dec
(bad)
pop
or
sbb
neg
xor
xor
xor
aad
test
mov
loope
les
div
pop
adc
retf
inc
icebp
mov
stos
xchg
sub
jae
push
inc
div
mov
jg
sbb
loopne
cld
ret
xchg
add
and
sbb
ss
test
cld
dec
xor
shr
dec
call
std
daa
test
inc
imul
sub
mov
sahf
cmp
xchg
je
mov
pop
or
data16
sub
sub
lods
cmc
ror
sbb
push
loop
icebp
mov
mov
mov
jno
xchg
sbb
cmp
int3
dec
or
mov
xchg
daa
(bad)
fs
add
adc
inc
or
scas
repnz
pop
and
jge
push
ds
mov
xor
or
(bad)
cmp
xor
push
cmp
push
imul
pop
(bad)
cs
dec
mov
adc
cld
xchg
mov
les
addr16
mov
xchg
cmp
clc
cs
dec
cld
scas
cmp
jnp
fsubr
pop
cmp
mov
or
std
sbb
(bad)
fnsave
retf
popa
cmp
jmp
push
or
int
jmp
aaa
sahf
push
or
pushw
stc
add
sbb
xlat
call
jnp
mov
add
lods
mov
push
jns
add
inc
ret
aas
push
jecxz
(bad)
inc
mov
lds
or
xchg
mov
push
push
std
xchg
(bad)
cmc
in
jae
rcr
dec
sub
mov
out
arpl
mov
xor
push
sbb
or
sub
mov
data16
mov
ins
int
call
mov
retf
ror
dec
xor
bound
jae
push
aas
test
addr16
cmc
lods
lods
cmc
shr
mov
add
and
push
cmps
mov
inc
addr16
stos
mov
dec
push
adc
xor
push
pop
pop
fadd
mov
xor
jle
adc
xor
sbb
mov
push
and
sar
jl
mov
inc
outs
scas
cmp
xor
fdiv
cmc
es
xchg
push
pop
cmps
xor
and
adc
repnz
inc
mul
out
sub
mov
std
xchg
ss
pop
pop
jmp
adc
inc
nop
aas
rcr
mov
aad
aas
stc
sar
lds
mov
push
mov
out
mov
dec
xchg
mov
sub
inc
pop
mov
nop
cmp
dec
jnp
mov
xchg
das
dec
inc
and
pop
daa
mov
arpl
ins
js
cwde
neg
mov
cmps
inc
mov
(bad)
repz
xchg
loopne
stc
sbb
sub
adc
pop
ins
mov
sub
sbb
outs
sbb
test
cmp
sbb
adc
xchg
sub
retf
dec
mov
out
imul
add
mov
(bad)
lods
in
xchg
test
xchg
pop
jle
ret
test
gs
and
adc
std
mov
mov
pop
in
pop
xchg
test
xchg
sub
xor
jg
pop
and
push
in
leave
mov
ret
adc
leave
xor
(bad)
cdq
rcl
push
dec
push
pop
stos
sbb
std
sti
popa
xchg
dec
inc
sub
aas
test
adc
fistp
test
lods
mov
enter
inc
and
fmul
icebp
outs
shl
adc
lahf
icebp
dec
(bad)
fldenv
push
outs
in
fild
cmp
jne
lods
nop
jmp
fwait
mov
lods
push
xchg
jg
and
inc
cmp
aas
jae
mov
push
loop
dec
adc
cli
clc
ret
cmc
dec
xchg
dec
jo
repz
dec
pop
adc
hlt
cld
aam
or
std
inc
cs
xor
daa
xchg
stos
(bad)
jg
or
mov
jmp
pop
inc
mov
loope
jb
pop
scas
cmp
call
mov
aaa
xchg
ja
push
dec
out
mov
mov
pop
mov
hlt
loopne
aas
movs
mov
mov
fmul
in
test
loopne
cmps
call
sar
imul
test
test
cli
aad
lods
shr
gs
imul
or
pcmpeqd
adc
mov
and
mov
lahf
arpl
sub
js
xor
fist
daa
jge
arpl
fsubr
rcr
mov
je
xor
push
inc
in
jbe
jb
adc
shr
push
aad
pop
ja
add
dec
add
icebp
int3
out
jl
sub
rol
add
or
add
mov
push
push
or
push
inc
pop
or
inc
int3
cwde
dec
sub
es
pop
adc
and
adc
and
dec
xor
js
add
inc
jmp
inc
mov
in
movs
mov
mov
rcr
shl
mov
mov
scas
pushf
mov
shl
dec
push
or
mov
xor
(bad)
daa
cmp
out
mov
addr16
pop
int3
cmp
fst
out
mov
out
std
sti
scas
fucomip
mov
dec
fcom
pop
adc
xor
push
popa
(bad)
sbb
jle
addr16
mov
sub
xchg
push
enter
push
fcomp
scas
mov
(bad)
ins
jge
sub
inc
lahf
xor
into
mov
in
out
cs
or
inc
stc
ss
cli
dec
jl
mov
hlt
out
adc
pusha
ss
aaa
dec
out
adc
gs
jmp
pop
sbb
xchg
add
addr16
sahf
push
ds
dec
cld
out
retf
(bad)
jbe
xchg
dec
jae
sbb
mov
into
jg
cwde
stos
rol
adc
(bad)
cmc
stos
imul
mov
sub
or
xor
in
movs
add
pop
outs
idiv
mov
mov
retf
cwde
xor
dec
mov
xor
sar
sub
mov
sbb
mov
std
faddp
outs
fild
in
fdiv
call
sub
and
or
mov
in
and
push
enter
popa
pusha
stc
loop
inc
frstor
daa
push
or
pop
les
ret
push
pop
cld
repnz
adc
mov
sbb
cmp
inc
xchg
mov
into
or
dec
jle
addr16
outs
and
gs
jnp
xor
test
fs
xchg
dec
add
add
fdiv
enter
shr
fsub
push
xchg
sti
test
(bad)
mov
ds
pop
adc
out
(bad)
cmp
movs
mov
push
mov
push
jb
repz
cmps
lock
(bad)
hlt
sub
mov
test
sub
mov
dec
or
mov
aam
shl
shr
xchg
ret
stc
sbb
sbb
outs
fdiv
xchg
(bad)
(bad)
sub
jnp
icebp
cmc
cmp
xor
sbb
js
nop
mov
fist
push
sbb
mov
cmp
mov
inc
in
fstp
adc
mov
jg
mov
retf
xchg
cli
in
in
repz
jmp
add
cmp
cmp
aad
repnz
push
cmp
inc
(bad)
ds
push
loop
loope
sbb
shl
cmovnp
ret
push
xchg
lods
mov
or
dec
cmp
les
mov
(bad)
cmp
(bad)
fild
cmp
mov
add
push
dec
int3
(bad)
cmc
fisttp
inc
fistp
call
cmp
dec
sahf
pop
out
mov
ret
push
fwait
hlt
adc
add
fwait
retf
adc
push
cmp
mov
std
ret
mov
push
cmp
fild
out
mov
enter
cmp
push
ret
imul
daa
not
mov
scas
fwait
ins
inc
imul
fcmovb
xlat
inc
jo
out
sahf
dec
mov
sub
enter
mov
fmul
pop
dec
mov
mov
stc
cmp
pop
xor
xchg
fistp
lock
add
sub
adc
cdq
xchg
mov
jecxz
dec
mov
mov
dec
push
or
dec
loopne
es
int
fild
in
or
xlat
and
mov
and
fdiv
sbb
inc
jle
adc
and
xor
(bad)
stc
fidivr
(bad)
jl
fcomp
xor
mov
cmps
test
out
jg
in
int
imul
cmps
mov
bswap
and
imul
dec
pop
jmp
xor
dec
int3
mov
push
fucomi
xchg
imul
inc
xchg
sub
mov
movs
retf
pop
test
scas
and
loope
inc
arpl
test
lds
lods
aad
push
jnp
stc
mov
inc
test
loope
add
or
stos
or
sub
movs
mov
mov
lahf
das
scas
je
pop
mov
movs
jge
pop
retf
repz
mov
das
dec
mov
mov
jbe
lea
std
dec
fild
rcl
inc
out
iret
inc
leave
dec
xchg
out
dec
xchg
sbb
mov
add
test
dec
movs
xchg
add
and
mov
adc
push
lock
out
jne
fiadd
cdq
sbb
and
adc
popf
sub
pop
shl
xchg
iret
cmp
push
push
test
movs
jae
inc
jecxz
jns
fidivr
ret
and
aad
mov
loop
adc
xchg
and
cdq
mov
add
jecxz
xchg
adc
and
out
mov
jl
nop
mov
icebp
lods
lods
aaa
jne
fiadd
loope
sub
fcomi
xchg
sbb
aaa
mov
jl
inc
iret
dec
dec
ret
push
inc
aaa
movs
aad
mov
into
mov
sub
cmps
aaa
inc
sahf
icebp
not
sub
sub
push
enter
add
pop
addr16
push
or
jl
and
xor
sub
mov
ret
adc
xchg
xor
inc
(bad)
stc
fbld
enter
jl
sbb
mov
mov
and
int
fwait
movs
xor
mov
fadd
mov
mov
mov
pop
dec
dec
loopne
or
add
pusha
stos
cdq
and
mov
or
pop
(bad)
in
inc
jecxz
mov
std
leave
jp
pop
pop
fs
xchg
(bad)
fld
cmp
popa
or
iret
push
xor
sbb
fucomi
test
jnp
cdq
fadd
cmp
sub
sbb
dec
push
or
in
pusha
inc
lods
mov
sbb
aas
add
xor
int
lods
xor
movs
sbb
push
pop
out
mov
sbb
sbb
sahf
iret
pop
push
mov
xchg
mov
jne
loop
stos
ror
in
test
add
xchg
int3
test
jle
xchg
and
jo
ins
pop
cmp
inc
adc
adc
xor
push
fdivrp
sbb
xor
aam
ret
test
jl
xor
hlt
jp
imul
and
shl
push
test
in
push
dec
rol
pop
sbb
xchg
cli
sub
push
xchg
ud1
sahf
jae
xlat
adc
test
xchg
es
mov
out
adc
dec
push
test
ret
mov
pop
push
inc
test
add
push
rol
lods
push
js
adc
fbld
xchg
pop
pushf
popa
pop
retf
push
dec
push
or
and
adc
mov
mov
sti
bound
fcomp
mov
into
lds
cmp
sub
pop
inc
out
(bad)
and
int
call
imul
sti
xchg
test
leave
xor
xor
push
dec
mov
or
or
sti
dec
dec
dec
push
repnz
sbb
push
xlat
movs
mov
shl
jp
jns
jno
push
jecxz
in
xchg
fwait
sub
jmp
adc
jg
pop
mov
pop
pop
movs
lds
test
imul
sbb
xor
sti
adc
je
fild
scas
mov
xor
gs
push
and
mov
sbb
ins
sbb
ja
jle
pop
outs
sar
adc
frstor
loop
leave
lods
int
out
inc
sbb
mov
in
lock
(bad)
mov
fisub
xchg
shl
popf
in
xor
clc
repnz
call
arpl
in
ja
repz
adc
jecxz
fs
vmaxss
sub
dec
es
dec
lock
jmp
mov
xchg
mov
stc
fs
mov
mov
pop
mov
jmp
les
sbb
retf
sub
iret
adc
mov
cli
popa
push
pop
jno
and
mov
push
ret
enter
inc
dec
cmp
leave
pop
and
jmp
sub
(bad)
adc
sub
mov
push
call
mov
jg
xchg
(bad)
test
(bad)
lods
sbb
inc
(bad)
or
pop
sbb
icebp
mov
repnz
outs
cdq
mov
stos
int
push
jl
cld
shr
stc
jge
push
dec
daa
inc
mov
int3
stos
dec
add
jle
mov
rcl
mov
xchg
xor
imul
int
xchg
mov
aaa
fwait
push
xor
arpl
jae
adc
fwait
in
fst
mov
je
into
or
jle
inc
(bad)
push
xor
retf
adc
xchg
out
(bad)
shl
cmps
mov
daa
pop
xor
push
in
mov
aas
ret
and
gs
jb
mov
iret
or
fisubr
(bad)
jmp
xor
cmps
jmp
lea
adc
out
pop
push
out
pop
test
cbw
fstp
pop
sbb
(bad)
pushf
or
inc
push
(bad)
aam
pop
push
mov
push
lds
push
sub
xchg
inc
stos
call
push
push
sub
mov
sub
lock
cmp
out
pop
mov
icebp
test
fisub
push
cs
jmp
test
push
pop
or
in
movs
in
stos
xor
in
ret
rcl
ss
cmp
std
sub
sar
in
shr
call
lods
mov
cmps
push
xchg
and
adc
sbb
sub
sub
sub
ja
and
mov
xchg
shl
(bad)
xor
sti
add
mov
mov
or
jl
cmp
jo
sbb
out
xchg
push
mov
lock
jle
jmp
push
outs
clc
or
rcl
sbb
test
sub
out
cld
pop
mov
lods
into
mov
adc
or
adc
and
jl
in
data16
push
push
je
clc
dec
test
xchg
dec
sub
and
mov
mov
mov
inc
jecxz
inc
fmul
pop
call
xchg
leave
push
or
or
es
fwait
cmp
cld
xchg
cwde
mov
dec
gs
xchg
in
sbb
mov
pusha
stos
sub
xchg
push
xor
jp
pop
ds
xor
or
stc
mov
hlt
popf
add
ss
pause
mov
sbb
cmp
hlt
or
xchg
bsr
mov
pop
jmp
dec
stos
int
out
inc
repnz
dec
ss
xchg
les
jmp
cwde
dec
jecxz
int
arpl
jle
(bad)
call
nop
iret
das
jbe
std
das
out
data16
adc
adc
stos
in
add
ja
mov
xor
mov
(bad)
jl
mov
adc
inc
js
pop
inc
dec
imul
arpl
movs
scas
xlat
jae
mov
aad
sbb
or
add
out
repnz
pop
mov
cmp
dec
test
push
fs
fstp
mov
xlat
adc
mov
shr
mov
mov
sub
push
jle
mov
mov
inc
sahf
repnz
hlt
mov
retf
push
push
lahf
inc
xor
test
cmp
jg
fwait
lahf
xchg
ins
adc
xor
ins
xchg
stc
jo
pop
dec
mov
dec
mov
xchg
inc
mov
lea
sbb
or
movs
jmp
sbb
call
adc
cmp
sub
push
test
test
repnz
retf
test
mov
mov
and
aad
mov
push
or
fldcw
lods
dec
sub
xchg
dec
inc
call
ins
add
loopne
sub
add
cmp
pushw
test
iret
cld
adc
pop
ins
adc
ret
mov
(bad)
sub
xchg
pop
pop
movs
adc
dec
inc
sti
mov
std
or
ret
jbe
repnz
movs
imul
add
ins
fucom
push
inc
pop
and
push
aad
push
pop
cmc
push
stc
push
sbb
pop
int
cmps
cli
mov
dec
in
add
(bad)
mov
mov
mov
adc
jbe
sub
mov
cmps
dec
and
or
xchg
or
shl
sbb
sub
cmps
js
repnz
xor
sub
jb
or
mov
adc
imul
retf
movs
arpl
sub
jmp
(bad)
xor
lods
mov
add
stc
shl
jbe
sbb
bnd
das
or
xor
data16
test
xchg
jno
mov
fwait
aam
sbb
lods
cs
adc
outs
ja
or
sahf
sbb
loop
sti
push
push
mov
mov
mov
rol
das
pop
hlt
push
adc
cld
cmp
mov
pop
mov
jb
les
lea
aaa
pop
mov
and
test
fild
xor
push
mov
jle
jno
mov
out
sti
movs
cmps
push
outs
xchg
ins
xchg
push
sbb
adc
jge
and
shl
dec
stos
and
cmp
(bad)
push
imul
jl
pop
inc
ins
imul
sub
pop
sbb
(bad)
jg
(bad)
fdivp
test
div
cli
xor
inc
and
adc
(bad)
mov
clc
jne
xor
js
xor
mov
mov
stos
xchg
ss
pop
jae
retf
retf
xchg
lea
inc
cmp
ret
popf
movs
inc
sub
(bad)
adc
das
in
es
adc
adc
xor
jmp
xchg
push
or
adc
sub
jbe
mov
stc
addr16
retf
xchg
jmp
push
test
lahf
retf
cs
and
or
dec
push
cmp
mov
or
out
jnp
pop
shr
or
pop
out
fcom
imul
cmc
lock
lods
bound
fwait
xor
or
sbb
div
dec
dec
push
es
adc
mov
int
pop
mov
test
xlat
ret
call
push
iret
xchg
ss
(bad)
es
mov
idiv
popa
inc
lods
xchg
arpl
xchg
xchg
mov
pop
and
pop
mov
jno
cmp
mov
test
add
call
out
test
retf
cmp
call
or
xlat
jmp
dec
dec
icebp
and
cwde
pop
pop
repnz
ret
cmp
inc
or
push
stos
call
inc
xchg
retf
adc
and
mov
into
push
mov
dec
fidivr
push
sbb
push
outs
es
out
and
mov
add
xchg
mov
mov
sub
movs
inc
or
imul
sbb
retf
test
or
cmp
es
out
sub
cmp
iret
in
pop
cwde
sub
mov
sbb
inc
ret
dec
pop
sbb
movs
mov
pop
mov
cli
aaa
jle
pop
cmp
in
(bad)
and
loopne
pop
mov
push
and
xchg
test
jno
cmp
bound
ficom
xor
pop
inc
add
jmp
shr
jne
inc
xchg
mov
popa
jge
inc
imul
sbb
das
xlat
inc
jmp
xchg
cwde
xor
mov
popa
cmp
int
dec
and
out
sbb
inc
lea
(bad)
ss
mov
ja
(bad)
cmps
cmc
adc
dec
push
pusha
xchg
pop
push
and
or
int3
mov
aas
imul
fstp
and
dec
movs
mov
inc
jb
jmp
int3
pushf
movs
sub
popf
scas
(bad)
pop
retf
cld
dec
daa
jg
add
lock
and
std
jno
pop
(bad)
out
es
sbb
push
cmps
mov
mov
mov
shl
lods
in
jne
jmp
scas
xlat
mov
adc
nop
push
sub
cwde
jbe
cmp
or
jg
ret
push
add
test
dec
push
sbb
and
and
sub
pop
xchg
ret
popf
ficomp
inc
jmp
adc
scas
mov
fisub
in
fucomp
adc
mov
or
xchg
ins
std
push
jnp
add
(bad)
xor
loop
call
daa
ins
xor
and
je
mov
jns
test
dec
(bad)
mov
dec
xchg
scas
fidiv
ror
ret
ret
mov
call
cmps
outs
or
inc
xchg
call
icebp
loope
or
lods
sub
addr16
int
jae
mov
int3
cmps
sub
jb
xchg
inc
inc
xchg
outs
lods
imul
rcr
sub
retf
jl
xor
mov
fdivr
xchg
mov
and
imul
sub
loop
or
loope
dec
mov
imul
outs
in
mov
repz
loopne
inc
outs
add
xor
mov
sub
sub
mov
into
lods
xor
dec
mov
mov
jp
adc
or
xor
sti
sbb
push
aaa
test
mul
mov
adc
retf
pop
sub
xlat
dec
enter
cmp
push
div
add
mov
jns
lds
addr16
ss
in
dec
dec
cli
mov
mov
jo
or
mov
xchg
jecxz
jne
cli
pushf
push
stos
iret
mov
outs
dec
and
repnz
xchg
ret
or
fcomp
stos
cs
jmp
in
loopne
ficomp
add
pop
mov
mov
pop
pop
outs
imul
cmc
sbb
add
jb
mov
dec
dec
cmp
push
frstor
(bad)
enter
pusha
push
xor
mov
push
arpl
add
xchg
inc
jg
push
sub
lods
mov
push
movs
xor
retf
xchg
add
popf
jo
push
mov
cmps
xchg
pop
in
inc
sar
(bad)
popa
ss
mov
and
or
dec
int
cmc
mov
inc
mov
and
jg
sbb
push
test
pop
ins
inc
loopne
mov
das
inc
xchg
test
cdq
sub
mov
test
lods
xor
ror
sbb
adc
pusha
sub
repz
sub
mov
je
mov
mov
jmp
jbe
icebp
sbb
cdq
je
sar
jbe
inc
aas
push
and
ror
aaa
aas
or
ds
push
in
xor
aaa
or
ret
iret
pop
std
jmp
js
and
jmp
int3
mov
inc
xchg
imul
pop
mov
or
and
jmp
in
adc
push
jl
mov
mov
push
inc
jmp
cmc
(bad)
fimul
or
loopne
loop
sti
fisubr
popf
rol
add
or
div
mov
inc
pop
sub
and
movs
inc
loop
gs
dec
cmc
cmps
xchg
test
mov
fbstp
icebp
pusha
jl
retf
ins
and
inc
icebp
std
out
sti
rcl
gs
cmc
jl
jmp
jne
pop
rol
sbb
repz
mov
scas
xchg
rol
popf
mov
(bad)
mov
or
stos
stc
push
pushf
in
loop
xchg
popa
test
push
sbb
sub
cmp
mov
test
pushf
sbb
mov
cld
test
cli
push
cli
pusha
jp
sbb
mul
bound
stc
cmp
push
pop
iret
xor
into
jbe
dec
cli
test
cmp
shr
add
iret
fld
inc
cld
jp
loope
sub
ror
inc
or
fdiv
leave
adc
dec
dec
mov
mov
dec
inc
ficomp
xchg
adc
jge
pop
sub
mov
jge
sub
jb
stos
cmc
pusha
mov
fwait
inc
outs
test
push
repz
jno
cld
es
sub
and
sub
bound
jecxz
stc
aaa
push
out
ins
mov
movd
jae
push
xchg
jbe
je
adc
sub
shl
dec
mov
jnp
mov
cwde
aaa
je
sbb
mov
cmps
sub
fidiv
cmp
lods
js
push
jne
movs
cmp
(bad)
cmc
mov
int3
(bad)
mov
(bad)
cdq
mov
(bad)
aas
mov
xchg
daa
ja
popf
je
sub
(bad)
xchg
enter
test
and
outs
stos
loope
(bad)
fild
xchg
(bad)
or
mov
xor
mov
scas
sub
cmp
(bad)
loop
je
outs
icebp
ror
outs
ja
xor
sbb
jg
cmp
sti
movs
xchg
mov
rcl
mov
aas
jbe
xor
push
ficom
dec
nop
dec
xchg
hlt
dec
sti
push
sbb
in
daa
fst
cdq
arpl
adc
enter
out
fdivr
repnz
push
pop
jp
ds
mov
repnz
imul
jne
xchg
or
xchg
push
rol
adc
push
mov
cmp
xor
mov
push
and
pop
cmps
retf
in
dec
xchg
adc
stc
loop
sbb
mov
add
mov
enter
pop
adc
out
lds
retf
cmc
adc
enter
hlt
daa
jbe
mov
inc
sahf
or
pusha
dec
xor
jae
cmps
das
or
sub
adc
nop
aas
cdq
jle
out
repnz
sbb
xor
inc
jmp
jg
test
xor
jecxz
push
hlt
imul
retf
loop
pop
cwde
daa
push
adc
setl
and
pop
adc
mov
mov
dec
bound
mov
test
push
sbb
sbb
lar
arpl
cmc
xchg
xchg
fild
add
retf
jae
mov
xor
fidivr
xchg
loopne
xchg
sbb
cwde
sub
nop
cwde
test
mov
mov
xor
cmp
clc
cmp
mov
sub
pop
add
ds
sbb
iret
jo
sub
adc
jne
xor
jl
arpl
scas
cmp
fisub
mov
mov
cmp
jnp
aam
outs
sub
loope
pushf
iret
pop
pop
sub
adc
mov
or
push
jmp
jp
mov
aaa
mov
mov
out
cs
imul
lahf
jbe
adc
movs
dec
cdq
leave
daa
xor
ds
(bad)
pop
aad
add
dec
sbb
mov
xchg
mov
pop
push
pusha
lods
inc
mov
and
dec
xchg
lea
mov
dec
std
add
ins
push
xor
xchg
neg
test
inc
icebp
mov
and
sbb
jmp
jb
adc
jne
pop
lds
sbb
xor
int3
cli
test
pop
aaa
xchg
ins
cs
sbb
jb
idiv
shr
fstp
inc
aaa
fmulp
fild
lods
mov
das
cmps
jg
push
nop
push
push
mov
stos
push
jg
push
jle
sti
or
mov
dec
(bad)
push
and
adc
push
test
jecxz
fld
mov
adc
imul
or
lods
inc
inc
clc
add
mov
test
dec
test
sbb
nop
loope
pusha
add
jne
pop
cmps
sti
movs
out
mov
fcomp
ret
inc
cli
mov
pop
xor
jbe
mov
mov
push
int3
ja
and
dec
je
sbb
fnstenv
xor
addr16
jb
in
push
test
ss
mov
xor
leave
cmp
adc
dec
xchg
mov
dec
cmp
sub
mov
mov
inc
jns
popa
data16
jbe
ficom
ret
out
std
sbb
jne
stos
cmp
or
test
push
pop
out
pop
adc
ins
out
dec
outs
leave
ds
xchg
dec
sub
mov
out
mov
repz
xor
mov
jmp
outs
lahf
out
(bad)
dec
leave
or
sbb
lea
test
stc
dec
cmp
jmp
add
mov
dec
and
mov
push
out
mov
cdq
inc
test
pop
adc
jecxz
cwde
push
cmp
lds
sub
jnp
fst
mov
adc
push
aas
out
adc
pushf
mov
arpl
and
jmp
mov
add
(bad)
inc
sub
leave
cmp
inc
inc
mov
fmul
adc
push
retf
pop
pop
dec
stc
push
push
jmp
push
fcmovne
adc
sub
nop
test
imul
call
push
cmp
push
bound
in
pop
adc
pop
es
cwde
sti
and
pop
lods
in
mov
sti
stos
aad
shl
pop
rol
pop
pop
jg
xchg
in
xlat
and
popa
in
jno
cmp
outs
outs
inc
mov
es
out
lods
or
test
mov
push
enter
nop
cmp
mov
pop
push
les
ficomp
std
out
push
pop
xchg
test
add
movs
sub
dec
test
fstp
lea
and
push
adc
lods
push
int3
and
mov
fild
sub
sbb
sub
pusha
jae
popa
xor
loopne
test
jns
movs
aad
cmps
push
xor
pop
jp
jmp
pop
dec
fwait
mov
adc
movs
jecxz
shl
fst
pop
push
and
mov
popa
js
sti
and
(bad)
lods
pop
in
xchg
dec
push
sub
fldenv
xlat
pop
aam
popa
sub
push
adc
sahf
cmp
add
cmp
inc
aas
pushf
and
xchg
or
into
or
or
xor
in
or
dec
sub
enter
jae
mov
in
adc
adc
loope
and
xor
push
push
adc
inc
adc
xor
and
and
clc
push
jl
adc
test
cmps
or
adc
cdq
test
jg
jg
fcmovb
clc
adc
aaa
hlt
icebp
loop
jl
lods
mov
outs
ret
loope
adc
les
loopne
jle
shl
add
xor
and
jg
lds
lds
push
mov
div
xor
xor
scas
jbe
(bad)
fistp
fcomi
es
ret
xchg
fisub
push
add
shl
push
sti
cmp
rcr
adc
stos
or
mov
or
test
xchg
call
shl
mov
imul
jne
movs
fsubr
pop
ins
pusha
ror
cmp
js
jmp
leave
sbb
loopne
cmc
in
mov
cmp
addr16
fisub
pop
call
jae
xchg
mov
clc
out
int
cmp
jae
adc
cmc
jmp
mov
pop
nop
pop
sti
sub
std
pop
mov
and
scas
sub
add
test
into
popa
(bad)
jmp
clc
sub
inc
push
sar
cmp
shr
and
rol
mov
dec
orps
(bad)
ins
test
jno
popf
pop
(bad)
mov
fbstp
mov
xchg
test
jns
cld
rcl
cmp
push
pop
in
(bad)
out
pusha
mov
out
shr
pushf
nop
rcr
dec
dec
adc
repnz
mov
dec
xchg
into
sbb
scas
idiv
or
hlt
xchg
je
inc
jge
loope
pop
mov
out
lock
rol
ret
sar
jns
std
test
repnz
lods
shr
retf
or
xchg
outs
test
scas
mov
in
jno
(bad)
repnz
xchg
lahf
mov
cmp
aad
sbb
adc
ret
mov
sbb
(bad)
adc
pop
jge
pop
pop
or
mov
loop
sub
rcr
mov
ins
jae
shl
addr16
pop
push
mov
fidivr
ins
push
ins
repz
xchg
ret
pop
mov
sbb
dec
mov
es
jmp
pop
fwait
je
ins
int
rol
call
out
xor
bnd
sahf
repnz
push
sbb
ret
jle
int
dec
pushf
jge
mov
data16
ret
jle
mov
daa
(bad)
stc
test
mov
inc
leave
pop
cmp
jle
ss
(bad)
pop
push
inc
adc
retf
push
dec
mov
cwde
popf
fmul
les
sbb
arpl
add
inc
xor
ja
loop
jle
retf
pop
loop
into
push
and
xor
pop
mov
fwait
push
fiadd
sub
cmp
out
scas
pushf
out
pop
test
repnz
xor
mov
setbe
or
fcomp
mov
push
lea
mov
cmp
mov
inc
mov
mov
mov
inc
movs
movs
mov
icebp
add
and
add
cmps
ror
cmp
sub
adc
in
scas
movs
pop
cs
js
jmp
or
sub
std
loop
stos
sahf
adc
pop
and
iret
jns
imul
pop
popa
cmp
and
dec
in
ds
adc
push
pusha
push
and
dec
mov
add
scas
sub
dec
(bad)
in
shl
jge
jmp
and
cmp
in
dec
pop
scas
test
jbe
repz
je
adc
mov
rcr
aas
jnp
mov
loop
and
xor
sbb
jmp
xor
xor
push
js
icebp
out
hlt
ficom
sbb
sub
jbe
cld
movs
(bad)
daa
mov
fs
retf
aaa
inc
outs
loop
sbb
enter
jp
in
jg
mov
pavgb
jmp
das
cdq
ja
loopne
shl
xor
dec
aaa
lock
(bad)
xor
mov
int
sbb
sub
inc
mov
sub
jae
add
mov
imul
fstp
xchg
add
in
mov
ins
test
(bad)
add
sub
lods
jge
and
mov
ror
enter
cmps
retf
sub
xor
test
sub
fild
movs
push
imul
push
jle
jp
inc
push
(bad)
into
jge
xor
sub
daa
jb
mov
fisttp
mov
mov
out
repz
add
dec
cmc
push
fwait
dec
ins
mov
mov
fimul
scas
adc
scas
mov
leave
ins
adc
arpl
or
imul
ss
inc
add
xchg
mov
mov
xchg
pop
jle
arpl
mov
xchg
into
jbe
loope
dec
mov
cmp
mov
mov
sub
pop
ret
mov
out
pop
test
clc
aad
mov
push
cs
sub
pop
mov
pop
add
sbb
fst
push
xchg
jp
test
leave
shl
test
sar
pop
or
call
aas
stos
out
xchg
pop
add
dec
cmps
mov
test
xor
push
or
jnp
mov
ret
xchg
sbb
xchg
jns
add
int3
stc
sahf
scas
iret
lock
cld
psrlq
loopne
cli
enter
mov
js
sub
rcl
call
retf
mov
mov
jae
lock
push
cmp
lods
fisttp
mov
pop
scas
mov
mov
pusha
mov
xchg
pop
cwde
sub
rcr
push
rcr
rol
test
jno
adc
jne
push
sub
mov
iret
add
pop
jno
dec
daa
popf
mov
add
xchg
add
mov
xchg
inc
push
jge
mov
icebp
push
outs
cmp
jge
mov
push
sti
xchg
std
sbb
push
push
scas
mov
shl
xchg
pusha
cmps
jae
jg
dec
jns
mov
sbb
call
lods
xlat
xchg
fidivr
push
arpl
in
cmp
mov
rcl
cmps
mov
nop
scas
push
shr
shl
sub
mov
lock
outs
call
inc
inc
(bad)
xor
pop
jecxz
retf
jmp
push
sub
outs
xor
fist
push
stc
push
dec
ins
ret
push
call
imul
(bad)
cwde
(bad)
push
loope
inc
pop
stos
adc
dec
sbb
mov
jnp
cdq
jae
ret
cmp
xor
pop
leave
cmps
pop
jno
rcr
mov
and
jno
sub
(bad)
stos
add
scas
adc
pop
shr
call
push
pop
les
mov
mov
(bad)
jge
push
or
adc
or
in
ret
and
ror
push
add
jbe
dec
data16
mul
pop
sahf
jbe
ss
jmp
xor
adc
iret
icebp
dec
outs
scas
lods
jl
retf
pop
cld
mov
call
pop
pop
stc
push
xor
nop
mov
pop
mov
stos
or
ins
jle
sub
int3
xor
xchg
dec
div
xchg
inc
mov
mov
adc
push
movaps
cmp
mov
sbb
jo
es
fucom
daa
cmc
xchg
aas
jb
mov
out
xchg
push
sub
xchg
sbb
std
daa
das
(bad)
in
aad
loopne
cmp
push
rol
xor
aas
stos
cmc
retf
push
fwait
inc
fwait
mov
aad
daa
fild
push
nop
xor
xchg
fcmovb
cmp
arpl
outs
dec
or
xchg
pop
xor
push
inc
pop
ins
push
aaa
mov
push
mov
jecxz
mov
jmp
push
cmps
pop
and
lahf
or
sbb
rol
and
jle
push
fadd
into
in
xchg
test
jl
movs
rol
push
push
sti
pushf
(bad)
es
xchg
xor
add
mov
sbb
push
aaa
add
dec
mov
xchg
dec
in
std
push
int
and
or
jmp
inc
push
sar
pushf
jne
xor
inc
test
fwait
add
pop
add
jb
push
add
adc
and
sub
iret
das
xchg
jg
xchg
mov
or
fs
loope
and
pop
xchg
stos
fidivr
int3
inc
stos
inc
sahf
int
add
or
cdq
outs
and
ror
mov
sbb
and
sub
cmps
ret
rol
mov
pop
outs
scas
mov
mov
dec
add
enter
sbb
dec
pop
ror
xchg
cmova
or
xor
and
movs
mov
imul
jne
mov
fadd
loop
push
push
stc
leave
addr16
and
retf
in
sbb
in
fbld
(bad)
std
xchg
ret
or
and
push
cmp
push
and
cwde
scas
add
dec
clc
idiv
dec
mov
pop
jnp
imul
add
mov
dec
imul
mov
mov
jmp
pusha
ffreep
lds
out
mov
(bad)
push
xor
push
push
sbb
test
ins
icebp
jo
inc
or
adc
mov
adc
add
mov
pop
pop
and
mov
call
add
mov
or
jl
mov
push
cmp
cli
push
dec
push
push
lahf
aas
aaa
adc
mov
ret
pop
push
ret
adc
arpl
clc
push
cdq
stos
(bad)
and
xor
clc
jmp
ror
imul
push
lock
popf
xor
dec
inc
lahf
mov
push
jns
cli
adc
rol
aas
mov
mov
jp
jge
mov
repnz
xchg
cmc
or
push
jb
push
mov
clc
mov
adc
pop
std
sbb
cmp
dec
ror
mov
mov
hlt
jecxz
(bad)
sbb
add
mov
out
addr16
lahf
leave
mov
adc
jb
mov
outs
cmp
lods
or
aaa
(bad)
pop
ror
call
push
cmp
in
pop
xor
data16
cmp
lea
shl
xlat
hlt
std
adc
retf
inc
out
sbb
mov
(bad)
xchg
out
jge
xor
in
icebp
push
mov
or
dec
xor
jb
cmps
lds
clc
stc
jo
pop
inc
cli
sar
inc
loopne
pop
inc
xlat
mov
fst
dec
shr
mov
leave
in
push
imul
mov
movs
es
in
lods
mov
cmp
jne
aaa
sbb
ja
dec
lods
pop
xchg
xor
and
fbstp
mov
ret
leave
add
dec
fmul
cmc
(bad)
popf
xor
sbb
mov
xlat
jns
sub
sbb
sbb
adc
fist
mov
pop
ins
test
add
out
cmp
adc
push
out
mov
adc
xchg
dec
mov
inc
aas
test
mov
add
pop
daa
sbb
dec
mov
test
xchg
pop
pop
dec
push
ret
sbb
dec
aas
adc
dec
lea
fcom
adc
push
xchg
cs
mov
mov
inc
pop
out
sbb
inc
hlt
mov
and
sbb
mov
cld
cld
jo
aad
cmps
(bad)
mov
dec
in
or
push
mov
xchg
shr
push
push
test
add
(bad)
loop
mov
popf
fwait
loop
mov
mov
sub
loop
jbe
lea
les
inc
das
sbb
push
pop
jo
test
xlat
dec
loop
vpermi2q
imul
mov
punpcklwd
adc
ret
addr16
pop
sub
stc
xor
rcr
ret
sub
jmp
icebp
mov
push
sbb
or
mov
icebp
cmp
retf
sbb
xchg
call
cld
in
or
loop
daa
xchg
hlt
repz
and
lods
int3
punpckhbw
xor
sub
in
adc
movs
add
sub
mov
retf
clc
dec
(bad)
pop
adc
jnp
add
mov
fwait
rcl
adc
test
ret
or
xchg
or
fsub
fcom
jmp
mov
aad
mov
sbb
clc
aas
rcr
pushf
jl
sub
aas
in
mov
stc
add
mov
xor
jo
fstp
test
div
sub
icebp
jmp
dec
mov
xlat
xor
and
push
(bad)
cmps
jmp
das
push
pop
xchg
dec
mov
adc
jg
loop
bound
pushf
push
clc
mov
call
pop
and
xchg
cwd
cdq
shl
arpl
xor
cmp
into
js
rcr
out
push
daa
jo
dec
cdq
xor
xchg
and
ins
loopne
int
inc
jp
js
xor
sub
mov
fist
or
(bad)
cmp
dec
dec
jmp
sub
sub
ins
inc
ret
xchg
and
push
loopne
fisttp
sub
in
and
lods
pop
lods
lods
mov
popf
push
repz
push
out
ins
add
mov
retfw
movs
dec
pop
jp
mov
in
ss
jle
pop
sbb
dec
imul
sbb
mov
int3
nop
xor
jecxz
fabs
xchg
and
arpl
mov
pushf
sbb
jae
and
stos
hlt
xchg
pop
mov
imul
shr
pop
cmps
retf
dec
mov
inc
inc
daa
icebp
mov
cmp
inc
adc
or
pop
bound
mov
or
rol
xor
mov
jp
nop
push
inc
(bad)
cmp
out
adc
sar
mov
test
dec
sbb
jge
jp
sbb
mov
pop
in
pop
je
out
dec
mov
mov
dec
out
popa
gs
and
cmp
push
(bad)
stos
ja
mov
into
retf
call
xchg
ret
or
int
push
lock
(bad)
add
xor
and
in
mov
lahf
rcl
lock
push
iret
xchg
or
dec
mov
mov
adc
jae
push
shl
push
loopne
dec
cmp
or
add
fpatan
into
mov
xchg
aas
ror
movs
jb
xchg
sub
jle
popf
adc
xchg
push
add
lods
repz
sar
(bad)
mov
adc
sub
inc
mov
lods
lods
mov
clc
dec
mul
sbb
cmp
jb
mov
hlt
mov
jne
lea
popa
iret
add
ret
ds
jle
xor
popf
mov
mov
call
push
add
xor
test
add
dec
xchg
movs
sub
sbb
sbb
test
call
je
mov
mov
test
iret
mov
into
fmul
fldenv
or
adc
dec
push
jg
aam
cmp
dec
outs
jae
adc
add
adc
test
fidiv
fadd
pushw
xor
pop
sub
xchg
or
out
pop
and
inc
shr
je
in
mov
sbb
mov
loopne
jno
push
inc
ins
dec
ficomp
jmp
std
in
sub
retf
iret
dec
in
lea
and
movs
and
daa
hlt
jnp
imul
pop
xchg
std
in
popa
cdq
es
int
iret
mov
es
test
sub
cs
mov
imul
pop
cli
js
push
(bad)
pop
push
repnz
add
add
addr16
push
add
test
jl
(bad)
sub
and
mov
adc
std
cli
prefetcht2
gs
mov
outs
test
cld
pop
movs
sar
xchg
jns
push
call
push
imul
or
popf
ficomp
pop
cmp
cmps
dec
cmp
pop
sub
mov
iret
call
(bad)
je
push
dec
mov
popa
jns
lahf
cmp
jmp
iret
push
sbb
js
iret
push
in
(bad)
xchg
fstp
add
add
dec
xchg
sub
mov
loop
stc
add
xchg
addr16
aaa
bound
jmp
arpl
lods
lods
popf
inc
push
fcom
mov
aam
mov
sub
xor
dec
int
dec
jp
movs
outs
in
out
xchg
inc
xor
add
mov
popf
dec
xchg
rol
jmp
imul
inc
dec
fwait
je
sahf
and
popf
mov
or
movs
inc
out
test
mov
jmp
ja
outs
fnstenv
mov
sbb
sbb
adc
iret
mov
hlt
mov
push
cmp
push
push
repz
sbb
push
ds
scas
in
aad
ja
and
arpl
add
outs
outs
adc
int3
and
sub
lock
adc
jo
cmp
cmp
jmp
pop
xchg
into
pop
xchg
out
xchg
xor
out
mov
std
ficomp
and
movs
add
and
xchg
outs
or
xchg
lds
push
xor
mov
imul
inc
imul
adc
jmp
lock
stc
xchg
cmp
mov
cwde
(bad)
mov
mov
mov
mov
retf
jecxz
and
repz
lea
das
mov
adc
scas
stos
stos
push
xor
out
mov
add
dec
add
pop
xchg
test
pop
or
inc
das
adc
and
fdiv
dec
hlt
sub
mov
daa
loope
stos
add
mov
dec
push
test
mov
test
push
pushf
imul
test
jne
jl
add
lods
inc
sbb
inc
jmp
mov
out
fs
aad
repnz
in
enter
aaa
mov
jae
fild
es
addr16
btc
pop
xchg
(bad)
xor
icebp
shl
aaa
push
inc
(bad)
push
cmp
add
sbb
and
jge
cmps
(bad)
retf
fiadd
rcl
fnstsw
pop
out
sar
mov
imul
fxch
mov
fsubr
xchg
dec
lods
inc
or
adc
test
push
push
sbb
xchg
adc
jmp
addr16
inc
xlat
jb
push
or
je
repz
mov
mov
icebp
dec
dec
jp
hlt
je
push
lahf
sub
sbb
fsubr
push
adc
pop
ins
xor
fnstcw
xchg
je
addr16
dec
imul
aam
int3
sbb
daa
lahf
add
pop
and
repnz
cmp
not
cwde
clc
imul
leave
inc
rcr
cmps
jne
lahf
adc
imul
jge
ret
push
fs
cmps
xchg
fnstenv
jne
sbb
pop
mov
div
push
mov
lds
gs
and
mov
push
jle
adc
into
nop
daa
push
jp
(bad)
test
push
pop
xlat
mov
sbb
and
adc
inc
das
mov
fs
and
xchg
int
inc
shl
hlt
mov
or
cmp
ds
pop
adc
sbb
aam
cmp
loope
add
nop
sub
pop
int3
cdq
in
es
imul
mov
xor
jmp
inc
mov
shl
and
mov
cs
dec
cwde
push
push
and
mov
nop
sbb
(bad)
mov
cmp
jp
or
in
mov
inc
add
jmp
or
push
or
mov
aas
fsubr
dec
push
inc
repnz
xchg
xchg
dec
outs
loop
mov
(bad)
dec
cmp
cmps
mov
pusha
repnz
shl
add
push
mov
(bad)
pop
cmp
pop
cmp
dec
push
push
inc
jbe
pop
dec
ret
lahf
mov
inc
aam
mov
hlt
sub
out
fldcw
call
int3
std
mov
repz
xchg
fistp
and
and
aas
xlat
les
(bad)
dec
adc
jb
mov
cmps
sub
mov
mul
fimul
iret
scas
aas
push
enter
in
clc
push
add
xor
mov
cs
sbb
out
dec
add
call
call
push
mov
dec
movs
into
jle
jg
out
fldcw
push
aam
daa
lahf
jb
ror
cs
sbb
cmp
mov
mov
cmp
push
cdq
xor
pop
add
(bad)
arpl
mov
scas
pop
lahf
jns
jge
retf
xor
add
and
pop
sub
dec
ret
sti
shl
dec
lds
sub
push
and
dec
jb
int
aaa
repnz
mov
sbb
cmp
fisttp
mov
xor
loopne
imul
adc
sahf
pushf
aas
retf
outs
xchg
es
arpl
ffreep
and
jecxz
jg
popf
stos
or
pop
and
ret
mov
push
in
xchg
iret
pusha
adc
outs
cmp
stos
inc
push
pushf
dec
mov
xchg
mov
mov
les
or
push
loop
stc
push
xchg
lock
inc
out
hlt
repnz
xchg
mov
cmp
out
fisttp
lea
pop
cwde
lds
pop
seta
ins
loop
mov
xor
adc
jl
lock
in
cld
leave
jecxz
dec
aaa
jns
xchg
mov
in
aad
cmc
psubb
jb
retf
mov
jnp
push
inc
and
scas
pop
or
mov
pop
mov
and
mov
jmp
repnz
jmp
movs
dec
adc
add
mul
push
xchg
push
ss
fist
xchg
jb
jo
test
aas
int
sub
xor
pushf
ins
adc
add
cmps
jnp
iret
lock
mov
je
ret
mov
jnp
popf
jae
fst
sub
mov
loopne
fsub
xor
sbb
mov
std
ret
test
mov
xor
popf
xor
fs
ret
and
dec
fucomp
ja
and
xchg
xor
out
mov
rol
pop
gs
outs
cs
in
fs
pop
sar
add
pop
mov
aas
bound
paddsw
stos
mov
dec
sbb
dec
dec
add
ret
pop
push
and
std
mov
arpl
ficomp
cdq
inc
test
rcl
push
xchg
or
fimul
(bad)
xor
add
lds
(bad)
or
popa
push
les
sar
mov
push
mov
movs
xchg
cmp
(bad)
xor
mov
loope
mov
rcl
repz
cmp
pop
sub
int3
ds
pop
mov
out
cmp
pop
jae
xlat
pop
scas
shr
fyl2xp1
aaa
push
sbb
sbb
not
pop
in
and
push
jae
mov
mov
xchg
stos
into
loope
bound
in
fsub
in
or
mov
mov
das
dec
pop
pusha
cmc
sahf
enter
jae
mov
sbb
sbb
das
popa
test
das
mov
inc
sub
push
mov
push
outs
mov
dec
inc
xor
jle
jg
aaa
(bad)
jle
cmc
adc
jno
sahf
addr16
rcl
out
xchg
push
data16
mov
or
fsubr
mov
jb
xrelease
add
xor
sti
mov
fs
aaa
and
xlat
mov
shl
pushf
cdq
dec
push
cmp
mov
jg
mov
dec
addr16
cmp
ins
scas
fstp
sbb
pop
clc
mov
cmps
pop
std
pop
js
stos
call
stc
adc
popf
ins
cwde
gs
cmps
scas
fcmovb
add
xor
jg
das
loop
jb
sub
dec
xor
dec
stos
add
xchg
xor
test
mov
imul
dec
push
cmps
clc
push
std
jp
imul
ins
fisub
scas
cld
out
or
fmul
dec
sbb
test
xchg
data16
enter
pop
sub
arpl
lea
gs
add
lds
mov
cmps
or
sbb
xchg
inc
imul
jo
sub
pop
(bad)
xchg
adc
mov
loop
xor
cmp
je
test
xchg
jle
jl
and
mov
or
and
aaa
xchg
pop
cli
push
inc
mov
popf
jns
fmul
push
aam
lds
fsub
push
mov
pop
xchg
xchg
test
imul
jns
lahf
xor
aas
mov
pusha
mov
lock
push
je
xchg
inc
les
dec
sub
jb
aas
imul
push
pushf
test
and
or
nop
fild
js
mov
repnz
push
ins
inc
xchg
xchg
push
inc
push
mov
pusha
push
scas
xor
int
gs
or
xchg
push
pop
xchg
stos
not
(bad)
xchg
mov
mov
das
pop
xchg
gs
sqrtps
retf
sbb
push
cmp
sub
sub
dec
jns
pop
xchg
jno
pop
cmp
cmp
test
or
retf
sbb
pop
inc
lds
and
jo
pop
ret
inc
arpl
dec
jge
jmp
jmp
add
sub
add
mov
mov
xchg
leave
mov
mov
call
mov
push
ror
sub
(bad)
pop
jbe
int
fstp
sub
sub
shr
add
scas
or
xchg
add
push
lods
retf
mov
loop
sbb
add
mov
inc
mov
xor
dec
dec
retf
jl
sbb
push
and
pop
loopne
(bad)
imul
xchg
push
je
xchg
push
pop
aad
les
js
addr16
and
je
lods
sub
inc
pop
mov
stos
das
in
cwde
pop
and
call
add
sar
jno
mov
scas
gs
inc
sti
movs
push
aad
fs
add
iret
push
mov
pop
sbb
lods
enter
retf
fwait
adc
lods
mov
(bad)
jnp
mov
adc
adc
or
mov
xor
xchg
sub
jle
cmp
xor
mov
test
cwde
js
in
enter
pop
inc
xor
cdq
cmp
pushf
push
sbb
cmc
pop
and
xchg
pop
(bad)
dec
sub
pop
xchg
pop
sahf
push
jnp
lds
arpl
jbe
and
and
cmps
inc
ins
pop
ret
ret
inc
movs
add
ficomp
jp
ds
stos
jnp
pop
cwde
and
sub
add
clc
out
aaa
sub
cmp
push
sub
(bad)
mov
pop
ret
cwde
std
(bad)
mov
not
sub
or
and
pop
add
gs
lods
(bad)
push
or
fsubr
adc
inc
fldcw
mov
add
fisttp
and
mov
push
daa
(bad)
int3
xchg
push
mov
mov
or
(bad)
jns
mov
and
pop
and
push
inc
push
or
mov
adc
mov
test
jmp
xor
mov
dec
test
add
push
inc
mov
push
mov
dec
add
(bad)
mov
outs
daa
(bad)
adc
mov
push
ficom
xchg
adc
lea
pop
sub
mov
enter
sahf
mov
inc
sti
xchg
xchg
cmp
out
add
mov
xor
std
loopne
call
sar
pop
pop
fmul
pop
ret
lea
movs
xchg
pop
jmp
(bad)
sub
int3
sub
and
xor
sub
xchg
and
inc
mov
inc
cmp
pop
ds
or
retf
xor
out
gs
ins
inc
int
pop
ja
pusha
mov
pop
adc
mov
or
pop
in
dec
aaa
push
add
gs
pop
mov
vmovss
cmps
jb
into
push
je
adc
jnp
js
lock
inc
sub
stos
sbb
pushf
jl
call
repz
scas
sub
dec
scas
xchg
sub
xchg
and
ins
enter
fcomp
cwde
inc
xchg
ror
mov
cmp
call
lods
xchg
xor
daa
xchg
adc
arpl
mov
and
or
mov
or
xchg
sbb
adc
daa
iret
out
fadd
es
adc
aas
fcomip
xchg
mov
mov
cmp
rcl
fld
fwait
in
pop
fmul
jp
fsub
and
dec
push
sub
(bad)
mul
jmp
mov
push
int
(bad)
pop
clc
pop
lods
iret
scas
sub
jnp
jno
lods
lds
cmps
or
push
jl
dec
push
shl
pop
xchg
mov
ins
inc
ret
mov
icebp
push
add
xchg
loopne
jmp
inc
mov
inc
xchg
pushf
fisub
mov
sbb
pop
or
sbb
pop
jmp
add
scas
ds
pushf
push
enter
mov
repnz
sub
fistp
loop
cmc
aas
pop
xor
adc
ds
push
shl
aaa
cli
adc
es
pop
icebp
sbb
in
(bad)
outs
cmp
push
or
shl
imul
outs
(bad)
in
call
clc
inc
mov
sub
movs
inc
mov
sbb
cmps
jmp
stos
push
jns
(bad)
sti
lea
mov
pushf
add
push
cmp
js
sub
or
inc
mov
pusha
inc
stos
retf
add
xor
stos
pop
and
lods
dec
cmp
mov
mov
xlat
pop
jmp
mov
retf
and
popa
lods
xchg
loopne
adc
arpl
fistp
mov
call
and
sbb
mov
leave
ins
add
cmp
cmp
push
inc
mov
adc
push
inc
cmc
call
fs
fstp
jb
inc
fnsave
fistp
dec
and
inc
xchg
add
sti
dec
mov
arpl
xlat
dec
cld
mov
icebp
push
test
les
jmp
mov
daa
xlat
pushf
call
sub
dec
mov
push
lea
rol
(bad)
out
hlt
in
or
in
push
gs
cmp
xchg
xchg
leave
in
sahf
inc
push
xchg
fstp
sub
mov
mov
cmc
mov
int
repz
push
fild
xchg
addr16
test
lods
inc
sbb
ret
dec
adc
cmp
xchg
psubq
or
test
dec
out
or
pop
sbb
mov
lods
(bad)
push
out
or
dec
fbstp
dec
iret
out
jg
call
dec
dec
clc
rcr
stos
fimul
arpl
stos
jg
mov
inc
add
out
lahf
out
lods
(bad)
xchg
mov
aam
inc
cli
lahf
and
sub
pop
(bad)
cwde
dec
les
jmp
xchg
movs
pop
std
fild
sbb
fidiv
mov
push
loope
push
popa
pop
retf
mov
mov
adc
or
add
cld
jb
fwait
loope
dec
dec
adc
adc
sub
push
xor
les
ja
pop
and
and
pop
jp
inc
add
clc
aad
lods
pop
(bad)
data16
mov
mov
xor
mov
xor
adc
js
ss
jge
dec
xor
popf
xchg
adc
mov
test
adc
mov
(bad)
cmp
cmp
mov
sbb
fistp
dec
repnz
mov
push
lahf
cmp
xchg
aas
rcr
into
loop
pop
rcl
rol
push
pop
xchg
pop
mov
adc
fcom
daa
adc
lods
pop
hlt
icebp
movs
fsub
push
jecxz
and
sbb
mov
ret
div
ja
ins
xlat
test
mov
mov
stc
jmp
fsubrp
ja
outs
jo
jno
das
pushf
mov
adc
adc
push
mov
cmp
mov
js
retf
sbb
jecxz
aam
icebp
out
movs
push
popf
(bad)
shl
mov
sub
popf
out
test
jge
pop
or
mov
ins
add
adc
adc
mov
push
(bad)
or
xchg
jb
enter
xor
retf
sub
or
dec
xchg
mov
add
popa
push
and
add
out
les
inc
dec
xlat
out
das
fucomi
jno
retf
xor
cmps
cmp
mov
xor
into
mov
adc
mov
add
rcr
pmulhuw
dec
adc
mov
aas
inc
xchg
arpl
push
stos
aam
pop
xchg
xor
pushf
lods
xchg
out
fwait
retf
shl
jo
jae
xor
(bad)
xor
test
leave
and
in
push
pop
test
mov
mov
or
dec
movs
jns
cmp
jno
push
cmp
mov
fmul
movs
test
push
pusha
jmp
xor
push
lock
daa
mov
pop
cmp
lds
inc
ret
dec
sub
cmp
or
xor
xor
js
aam
xchg
iret
leave
sub
and
repz
xor
aam
and
es
xor
fild
ja
cld
fidivr
mov
das
fmul
sub
mov
call
in
div
imul
sahf
sub
xchg
add
mov
loop
sbb
inc
(bad)
iret
aas
inc
add
xchg
pushf
sbb
ret
jns
jge
xor
ror
and
push
jg
jns
loopne
scas
inc
enter
cmp
loop
push
or
je
push
(bad)
movs
test
jo
add
mov
sbb
retf
xlat
and
pop
pop
push
ins
or
cmc
inc
sub
mov
dec
int3
adc
ds
rcr
xor
adc
xchg
cld
jmp
or
sbb
inc
stos
ror
inc
inc
push
inc
mov
stos
imul
mov
shr
ffreep
add
lods
mov
sti
mov
adc
scas
mov
mov
mov
sub
dec
push
int
lods
repnz
push
xchg
mov
loope
pushf
cmp
sbb
scas
sub
push
pushf
and
xor
dec
inc
add
and
inc
adc
xchg
pop
mov
jmp
jo
xchg
popf
icebp
test
jo
jns
or
cmp
jecxz
add
xor
test
call
fdiv
and
lock
mov
es
hlt
mov
adc
inc
bound
sbb
cli
in
fld1
imul
push
jl
xor
jno
cmp
add
inc
shl
jmp
mov
inc
mov
aad
add
dec
or
fcmovu
data16
(bad)
pop
and
add
xor
loop
mov
(bad)
and
fs
mov
cmp
outs
sbb
adc
xor
sbb
in
cwde
sub
lods
shr
sub
sbb
and
inc
push
jne
jb
adc
cmp
lods
dec
push
xchg
push
fcom
inc
pop
and
in
mov
mov
jbe
push
push
pop
ins
call
jbe
and
popa
loope
mov
popa
push
pop
pop
mov
sar
mov
xchg
cmp
bound
in
jmp
jne
sbb
fidiv
sub
mov
push
cmp
(bad)
call
add
sub
ffree
adc
fsub
lock
push
int3
data16
jecxz
repz
clc
scas
out
out
(bad)
lea
in
push
sbb
xor
jmp
shl
adc
clc
mov
mov
pop
pop
cmp
icebp
imul
mov
jo
lea
dec
scas
movs
lods
ficom
and
push
sub
hlt
fld
push
inc
arpl
in
lock
aas
mov
cmp
scas
push
div
jns
ret
out
pop
fsubr
ret
cmps
es
pop
fcmove
mov
pop
xchg
and
out
data16
mov
push
aad
jbe
push
out
push
iret
push
cdq
xor
std
outs
jecxz
jbe
push
cmp
cmps
cs
shl
add
ret
in
sar
mov
inc
push
cmp
push
adc
stc
cmp
mov
aas
xor
(bad)
aas
in
icebp
mov
mov
xchg
add
daa
fcomp
ds
adc
pop
dec
and
sbb
push
jge
sbb
dec
in
jmp
mov
pop
cdq
sub
xchg
dec
xchg
cmc
add
and
xchg
jno
(bad)
sbb
xchg
call
out
mov
and
ret
xor
in
rol
mov
ins
or
jecxz
movs
add
shl
push
fucomi
sub
retf
es
and
and
retf
idiv
fdivrp
mov
movs
or
add
xchg
(bad)
sub
cmp
push
or
loop
lods
lods
retf
(bad)
or
push
dec
call
xchg
push
pop
int
rcl
loopne
hlt
xlat
pop
xor
fcom
out
aas
fs
mov
add
add
std
imul
das
je
mov
pusha
dec
sub
xchg
add
cmp
cmp
aas
imul
bsf
mov
sbb
(bad)
sbb
pusha
ja
call
pop
and
xchg
movs
sub
movhlps
dec
call
sub
sbb
mov
push
in
aam
dec
pop
(bad)
pop
ins
inc
cmp
sub
xchg
scas
sbb
push
cmps
rcl
pop
jmp
sbb
and
mov
jns
sub
outs
dec
sbb
pop
retf
ret
cmc
xchg
pop
fnstenv
bound
add
inc
aaa
and
stos
push
ja
in
push
jbe
mov
loope
jae
cmps
outs
xor
fild
push
jl
out
std
aad
cmp
xlat
and
mov
imul
cmp
mov
ja
dec
or
pop
ins
idiv
lock
cmp
cmp
mov
jecxz
(bad)
and
mov
xchg
rcr
lahf
adc
xlat
sbb
mov
pop
cmp
or
arpl
gs
aad
add
imul
push
cmps
dec
jmp
mov
mov
call
xchg
out
js
and
test
sub
dec
lods
out
inc
out
push
jae
jecxz
sub
fwait
(bad)
btc
leave
cs
mov
cmp
sbb
mov
retf
cmps
dec
(bad)
mov
xchg
or
add
shr
fsub
sub
and
push
mov
pop
fild
fisttp
lock
and
sub
or
popa
daa
xor
clc
je
jae
jle
inc
xchg
mov
pop
jmp
ja
lahf
sbb
dec
cmovbe
out
or
loope
iret
push
or
retf
push
jl
or
outs
cmps
xchg
stc
adc
out
pop
xor
sub
cld
jg
add
in
loopne
and
scas
(bad)
cmp
scas
or
stc
and
iret
push
ror
cmc
arpl
pop
inc
xlat
sub
call
pop
mov
xchg
test
loope
xor
inc
and
add
xor
xchg
mov
hlt
sbb
cmp
mov
cmps
into
xor
bound
add
cmc
repz
xchg
loop
ds
cmc
movs
pop
ret
out
gs
push
jb
fs
xlat
xor
jmp
inc
cmp
fs
les
clc
and
and
mov
adc
sbb
or
das
xor
push
les
inc
sub
adc
lods
into
add
dec
inc
loopne
popf
popf
mov
mov
in
repz
jl
movs
sbb
lods
adc
sti
bound
and
push
xchg
arpl
fidivr
aad
outs
mov
cmps
fstp
mov
rcr
inc
add
jno
and
jne
cmp
xchg
cmp
add
lock
leave
sbb
xor
inc
jbe
jbe
icebp
push
push
jl
std
popf
adc
fst
mov
xchg
cmps
jg
mov
xor
pop
pushf
xor
(bad)
mov
mov
mov
ror
xor
test
sub
fdivr
dec
lods
idiv
sbb
jle
rcr
addr16
int
jno
jmp
(bad)
cmp
repz
das
sub
movs
(bad)
ds
xlat
out
mov
xlat
pop
dec
pop
push
xor
repnz
outs
inc
cs
sub
popa
jecxz
pop
sub
mov
std
jb
pusha
mul
jle
inc
pop
mov
xchg
pop
and
jmp
inc
mov
cmps
jle
add
icebp
mov
mov
push
repz
jle
xchg
clc
repnz
in
xchg
dec
inc
or
das
les
dec
jmp
jecxz
rcr
dec
ins
pusha
fld
out
fimul
ret
sbb
xor
inc
adc
xchg
scas
and
add
cmp
lds
movs
push
push
stos
or
add
fidivr
mov
ret
mov
xlat
cmps
mov
mov
xchg
adc
jno
adc
push
push
(bad)
and
pop
in
and
test
lock
jge
js
jge
js
jge
js
xchg
pop
dec
pop
sbb
dec
stc
repz
and
push
or
jnp
mov
imul
push
mov
sbb
hlt
jecxz
sub
rcl
dec
sti
ret
push
test
sub
pop
stos
xchg
lock
pusha
xchg
or
and
icebp
sbb
dec
sbb
xchg
mov
cmp
mov
sbb
jp
xor
pop
int3
cmp
lods
pop
sub
lahf
inc
pop
std
mov
inc
cmp
fwait
movs
cdq
dec
cdq
dec
popf
aas
pop
adc
push
or
push
inc
add
xchg
mov
sub
je
cmp
sbb
jbe
movs
mov
out
sbb
ss
and
inc
fistp
scas
dec
inc
jnp
pop
int3
lds
cmp
jne
jmp
lea
loopne
pop
sti
sbb
mov
or
jb
sbb
and
and
es
aas
ins
sti
movs
addr16
mov
je
push
dec
aam
into
or
sub
nop
frstor
cdq
pop
outs
cmc
fisttp
add
jg
(bad)
or
add
and
outs
push
ins
icebp
jl
stc
(bad)
hlt
retf
push
xor
jg
in
hlt
cli
adc
cs
fwait
lods
adc
xchg
mov
fsubp
sub
and
(bad)
imul
xchg
add
and
or
xor
sub
pop
hlt
mov
or
mov
jmp
sub
dec
dec
stc
sbb
mov
stc
or
loopne
sbb
ret
inc
test
scas
aaa
fnstsw
leave
lock
leave
fidiv
gs
out
bound
adc
jne
cld
sub
mov
faddp
xchg
aad
les
mov
jb
lods
mov
enter
ins
xchg
xor
sub
xchg
dec
in
ins
add
add
mov
add
(bad)
xor
ret
pop
loopne
sbb
rcl
jg
lock
sti
cmp
push
pop
xchg
pop
in
xchg
fistp
test
pop
mov
dec
leave
inc
and
fsub
imul
xchg
fcom
dec
jo
inc
je
in
jns
mov
rcl
fwait
popf
jno
icebp
(bad)
imul
jge
jnp
fbstp
mov
lods
push
jo
mov
mov
adc
test
push
mov
add
cmp
sub
std
xchg
mov
dec
lahf
mov
test
js
sub
shl
ins
imul
arpl
xchg
jmp
cmps
and
mov
stos
mov
xchg
mov
call
cmps
aas
into
mov
mov
pop
sbb
and
lock
lods
mov
add
cmp
ret
stc
test
es
push
popf
add
or
aaa
jl
into
nop
div
xor
dec
cmp
aam
paddb
cmp
popf
pop
fucomip
cmp
cmp
pop
rcl
retf
push
(bad)
or
jne
pushf
jnp
movs
dec
add
fstp
sbb
and
aas
(bad)
aad
aad
das
adc
lods
xlat
pop
jmp
jae
jmp
ja
sahf
pop
cmps
pop
push
jo
icebp
pop
out
xrelease
sbb
das
dec
hlt
cmps
sbb
sbb
jnp
loopne
or
sbb
cwde
mov
inc
or
inc
pop
in
sub
ficom
sbb
push
cwde
add
ins
scas
mov
cwde
fnstenv
mov
sbb
cmp
stos
or
(bad)
jle
in
test
xchg
aas
pop
jno
sbb
fld
pushf
and
sub
push
sub
jle
fdivr
add
push
retf
pushf
mov
adc
mov
mov
ror
lds
(bad)
arpl
rcr
xchg
lods
inc
pop
adc
mov
addr16
mov
add
hlt
adc
or
inc
ins
lea
inc
push
jle
mov
sbb
sub
icebp
pop
jo
cmps
jno
adc
sbb
fistp
fadd
je
pop
(bad)
enter
scas
inc
popa
add
add
in
mul
mov
outs
aaa
movs
push
in
out
test
shr
fist
std
push
xchg
add
not
xor
cmc
jl
jb
dec
mov
dec
push
cmp
adc
cmp
pop
imul
fadd
add
mov
pop
dec
jg
lea
xchg
adc
mov
inc
outs
xchg
test
in
stos
pop
sbb
xchg
ss
sub
cli
adc
fadd
sbb
xchg
call
lods
push
inc
cld
repz
sbb
pop
scas
sbb
mov
and
sub
shl
movs
fcomp
push
aaa
daa
push
inc
xchg
pop
hlt
mov
pop
lods
ss
inc
sbb
call
adc
pop
or
(bad)
xchg
out
mov
leave
into
cmp
inc
mov
dec
mov
sub
cwde
dec
retf
mov
in
pop
popa
mov
in
jns
mov
aam
xchg
xor
nop
(bad)
test
jae
stos
jne
mov
xor
scas
call
out
mov
mov
or
inc
sbb
mov
retf
jae
fld
ret
lea
pop
ins
push
jbe
ss
xchg
fistp
add
and
lods
in
pop
mov
mov
sub
fcom
movs
clc
pop
or
xor
dec
cmps
imul
daa
cmp
stc
mov
scas
cmps
mov
scas
lock
pop
mov
xor
mov
les
movs
sbb
ins
inc
fs
mov
or
mov
mov
je
lock
push
lods
inc
arpl
out
mov
adc
xchg
not
outs
and
adc
imul
and
pop
enter
ss
jnp
pushf
popa
in
pop
mov
add
inc
mov
fsubr
inc
ss
xchg
pop
int
mov
mov
mov
and
in
adc
mov
sub
xchg
pop
stc
mov
dec
sub
test
cmp
and
dec
pop
mov
inc
out
push
mov
loop
or
test
in
inc
aaa
inc
jg
icebp
pop
ins
dec
pop
scas
mov
inc
jl
mov
mov
fisubr
je
push
add
and
and
jcxz
xor
scas
push
nop
push
into
sub
pop
or
inc
not
inc
mov
mov
sbb
sahf
retf
mov
mov
retf
rol
cmp
dec
or
data16
sbb
out
fsub
jmp
mov
mov
pusha
jmp
test
jmp
test
push
enterw
cmp
cmps
and
into
jmp
and
leave
push
mov
mov
stos
mov
or
and
cli
sbb
or
pushf
mov
or
add
cdq
add
in
retf
repz
test
or
or
ret
mov
xchg
jne
arpl
pop
inc
push
repnz
cwde
repz
iret
pop
xor
cmc
cli
inc
clc
(bad)
scas
mov
int3
mov
cmps
jp
or
ret
cmp
mov
hlt
stos
repz
pop
sub
and
add
sub
xchg
mov
int
pop
lock
sbb
inc
jmp
jae
(bad)
jge
xchg
push
push
int3
data16
ja
stc
into
scas
mov
or
fwait
sub
mov
add
pop
fild
mov
sbb
mov
pop
retfw
mov
mov
push
adc
dec
shl
mov
rcl
mov
jp
leave
fwait
rcr
jns
xchg
arpl
sbb
daa
or
or
rcl
clc
lods
sub
cmp
pushf
ror
dec
ja
xchg
jecxz
mov
add
std
loope
leave
scas
out
jns
adc
rcl
adc
icebp
xor
mov
dec
pop
les
push
bound
push
push
xchg
ins
lock
sub
and
int
aas
xchg
jecxz
mov
mov
ins
dec
fs
xor
cmps
jmp
mov
imul
pop
mov
aam
mov
add
and
mov
mov
outs
inc
xchg
scas
fmulp
pop
(bad)
or
pusha
(bad)
loop
xor
shl
jnp
sbb
movs
jne
sub
pop
out
xor
std
lods
es
fs
inc
stc
sub
stos
xlat
add
mov
shl
ins
ret
dec
shr
dec
xor
add
test
push
fwait
cmps
xor
mov
imul
int
daa
inc
mov
inc
fwait
outs
adc
mov
and
sti
push
and
cmp
mov
stc
outs
(bad)
mov
or
call
push
cmp
js
inc
sbb
jns
fwait
shr
jmp
xchg
gs
jbe
daa
mov
jb
cmp
fcom
xchg
and
dec
mov
mov
stos
and
mov
mov
sar
adc
add
push
fwait
push
or
mov
cmps
dec
pop
mov
loope
(bad)
movs
xchg
cmp
dec
clc
sub
sbb
push
push
dec
shr
pushf
jb
cmp
cmps
mov
pushf
push
mov
gs
push
xchg
dec
data16
nop
add
in
jno
jbe
cmp
dec
lods
add
cmp
sbb
pop
mov
div
repnz
lock
ins
xor
test
xor
in
loop
inc
sbb
lea
add
movq
daa
jae
shl
(bad)
jmp
xor
fs
push
into
rcl
rcr
and
inc
add
pop
stos
push
jbe
inc
inc
inc
pop
loope
cmp
in
cs
jae
popf
cmp
add
pop
sbb
retf
jl
aaa
jge
sub
dec
stc
retf
movs
or
cmps
cmps
pop
adc
and
pop
sbb
sbb
or
lock
loop
mov
cdq
ror
stos
mov
ins
jo
sub
mov
retf
inc
mov
push
xor
push
mov
repnz
sbb
xor
dec
push
out
stos
pop
dec
stc
xchg
xchg
mov
inc
mov
or
outs
lock
push
sub
retf
dec
jecxz
mov
je
aas
(bad)
mov
cmps
dec
xchg
adc
mov
cmp
call
or
jns
adc
in
cmp
in
iretw
dec
in
jmp
(bad)
leave
sub
daa
mov
xor
mov
push
mov
sbb
das
mov
popf
add
(bad)
dec
or
jmp
jmp
gs
retf
into
push
push
stc
retf
jecxz
sbb
es
and
add
and
xor
jbe
addr16
inc
or
sahf
push
inc
jno
call
and
call
rol
xchg
pop
xor
jmp
mov
test
or
retf
mov
push
add
cld
out
push
jae
sub
pop
loope
and
add
rcl
inc
sub
test
xor
clc
popf
loop
(bad)
jle
repnz
out
les
out
cli
dec
fsub
call
dec
cli
dec
push
inc
mov
int
ja
mov
cmp
cmp
ret
out
dec
cmps
and
xor
sub
and
pop
les
push
lods
sub
lods
stos
loop
jnp
jnp
out
and
scas
retf
nop
lahf
mov
or
aad
icebp
mov
test
xchg
cld
(bad)
ins
inc
adc
push
into
pop
sub
cmp
jno
vpsubq
outs
icebp
xor
mov
xchg
outs
mov
xor
add
popa
mov
xchg
scas
pop
sbb
inc
repz
mov
pop
jnp
mov
lods
aad
(bad)
rol
or
data16
mov
adc
mov
pop
sbb
ret
in
stos
pop
sti
dec
push
outs
push
xchg
pop
ins
popf
das
nop
mov
icebp
xchg
call
mov
aaa
xor
cmp
mov
(bad)
jnp
and
stos
pop
push
or
aam
(bad)
mov
and
bound
inc
cmps
fcom
xchg
xchg
arpl
adc
mov
mov
fcom
inc
add
daa
push
ret
sub
cs
cmps
daa
nop
inc
fisub
cli
outs
dec
test
fsub
sbb
int
retf
mov
ins
ret
retf
mov
pop
mov
jge
sbb
mov
inc
retf
fwait
or
shr
push
mov
aaa
mov
pusha
mov
ins
push
shl
(bad)
fnop
(bad)
inc
data16
push
jle
pop
(bad)
stc
mov
mov
xor
sbb
xchg
retf
sbb
arpl
push
pop
cmp
rcl
cmp
push
iret
sub
into
sub
adc
inc
(bad)
mov
fstp
mov
and
jge
lds
sub
push
adc
xchg
or
push
ret
out
push
push
add
pop
retf
sbb
add
imul
loope
dec
push
xchg
and
in
cmp
jbe
dec
mov
inc
pop
shl
das
push
or
xor
pop
xchg
xchg
pop
jmp
out
fcom
movs
inc
lods
jb
or
push
fidivr
js
cmp
dec
scas
retf
pop
test
cmc
dec
bound
push
call
(bad)
sahf
(bad)
fdivr
inc
shr
iret
ins
jae
fdivr
xchg
push
mov
cwde
sbb
mov
(bad)
ret
ja
mov
movs
pop
push
mov
add
or
out
jmp
(bad)
lods
imul
or
(bad)
std
or
push
fsub
mov
adc
loope
out
dec
sub
cli
aaa
xlat
arpl
(bad)
mov
lea
nop
gs
shl
sar
xor
imul
cld
retf
dec
adc
packuswb
pop
mov
ret
stos
aaa
rcl
xchg
adc
into
push
sbb
cmp
xchg
jle
jmp
adc
shl
mov
xchg
lock
es
mov
daa
jp
push
mov
pop
sub
adc
mov
nop
aam
inc
xchg
sbb
fistp
daa
(bad)
repz
jns
inc
(bad)
cs
sbb
cmp
(bad)
lahf
add
fcomp
retf
call
mov
enter
mov
pop
pop
or
retf
mov
test
cmp
(bad)
movs
popf
pop
retf
jmp
cwde
xor
cmp
cwde
stos
sbb
jnp
mov
ss
and
fs
push
lea
jnp
pop
(bad)
jge
push
retf
jg
ins
xor
adc
sub
jo
psllw
(bad)
mov
fidivr
ret
and
jmp
stc
repnz
mov
cld
dec
add
cmp
pop
cmps
shl
dec
pop
inc
add
and
popa
lods
xor
jbe
pop
mov
pop
ret
pop
xchg
mov
pop
stos
jmp
mov
ss
mov
xchg
sbb
mov
and
es
jne
popf
pusha
mov
cld
je
sub
inc
xchg
inc
pop
mov
call
in
mov
and
sub
xor
jmp
js
leave
sub
or
cmp
xor
or
jb
test
pop
pop
xor
fimul
xor
jns
test
(bad)
or
push
sbb
sbb
sbb
and
push
sbb
jmp
pop
cli
sub
gs
(bad)
stc
xchg
aam
cld
daa
cld
mov
addr16
inc
fnstenv
adc
jo
ja
test
add
sar
dec
lods
fmul
jae
sub
jae
dec
popf
sti
mov
mov
sub
xchg
or
xchg
mov
push
cmps
scas
inc
cli
movs
shl
leave
jbe
push
hlt
nop
jne
or
dec
xor
xor
mov
lock
ja
leave
xchg
push
push
mov
and
sti
fsubr
add
push
xchg
and
das
xchg
xor
sub
fsubr
shr
stos
inc
rcr
(bad)
mov
jno
xchg
jmp
mov
in
imul
adc
retf
neg
int
sar
sub
mov
add
into
or
nop
push
fidivr
pushf
ret
xor
inc
pop
sbb
ror
(bad)
(bad)
dec
bound
push
retf
out
ins
and
mov
xchg
xchg
jle
add
push
lock
mov
pop
aad
mov
in
movs
in
adc
cmps
mov
mov
jg
adc
sub
stc
xchg
pop
stc
jnp
pop
xor
inc
jmp
cmp
jmp
push
or
mov
mov
das
shr
jmp
imul
jno
cwde
mov
sbb
mov
pop
xchg
test
adc
mov
pop
xchg
pop
mov
jle
test
stos
and
pop
mov
rol
in
ret
sti
lea
xchg
imul
hlt
jbe
pop
(bad)
or
mov
mov
(bad)
dec
adc
std
mov
lock
sahf
mov
adc
push
sahf
jecxz
fcom
pop
out
sbb
adc
mov
mov
stc
xor
cwde
or
add
add
retf
movs
and
and
imul
sbb
inc
stc
xor
sbb
retf
sub
loope
or
jae
xlat
dec
cmp
mov
test
adc
icebp
fiadd
mov
lock
dec
ret
int3
pop
xor
jmp
stos
das
stos
add
inc
loopne
bnd
dec
add
dec
or
pop
test
xchg
sub
(bad)
movs
out
dec
sbb
retf
stos
mov
mov
inc
jle
adc
loop
ins
cli
and
lods
aaa
and
das
xchg
pop
dec
mov
je
pop
mov
or
mov
rcl
jae
xor
ror
dec
push
fadd
xor
and
mov
sub
and
mov
inc
fimul
inc
mov
jb
pop
mov
pop
ins
mov
popa
aad
xchg
push
repz
mov
xor
les
mov
add
mov
sbb
or
js
adc
sub
xor
fs
add
data16
jp
ror
ret
mov
cmp
mov
add
inc
int3
fnstenv
lds
xchg
jns
test
sbb
lahf
pop
das
mov
cmp
jg
test
push
dec
cmp
or
call
cmps
push
arpl
cmp
adc
mov
mov
pop
xor
sahf
aad
mov
inc
cmp
pop
jecxz
js
push
(bad)
pop
outs
xlat
push
sbb
and
pop
add
test
sub
sub
adc
inc
arpl
xor
mov
mov
jle
mov
retf
add
mov
out
std
or
jmp
pop
enter
(bad)
dec
fistp
sti
inc
cdq
mov
inc
jnp
pop
xchg
pop
ins
or
enter
or
inc
sbb
rcl
out
imul
and
or
jle
adc
xchg
jp
push
adc
je
and
stos
fsubr
sar
cdq
xor
dec
and
test
jmp
inc
test
sbb
sub
aad
jl
in
leave
es
fisubr
or
add
and
enter
fst
xchg
add
mov
(bad)
loop
out
aam
pop
cmp
call
clc
dec
movs
sub
sub
xchg
sbb
mov
xchg
sbb
sbb
sbb
mov
stos
(bad)
jg
sub
xchg
stos
pop
xchg
mov
fs
push
call
ja
push
stos
ret
fimul
loope
retf
add
sti
mov
cld
sbb
dec
xchg
movs
pushf
in
outs
sbb
cmps
pushf
mov
jno
xchg
outs
add
adc
aad
ins
mov
mov
dec
mov
jg
xor
rcr
stc
test
mov
xor
push
sbb
push
mov
arpl
dec
pop
(bad)
pushf
pop
push
sub
popa
bound
mov
push
stos
jmpw
add
icebp
imul
retf
iret
or
push
nop
lods
xchg
sahf
cmp
(bad)
mov
push
test
add
pop
mov
push
pop
movs
lea
dec
imul
push
mov
add
(bad)
dec
cmp
and
imul
dec
jl
je
or
sub
ss
lsl
repnz
lea
aad
xchg
shl
lds
add
add
mov
add
test
or
mov
shl
out
jo
mov
rcl
hlt
xchg
add
dec
cmp
xchg
jg
sahf
jmp
fwait
pop
adc
xor
fstp
xor
add
pop
mov
fdivp
loop
test
push
sub
loop
inc
push
and
cs
sbb
fidivr
xchg
cli
es
aas
sbb
daa
fld
inc
int3
adc
int
(bad)
adc
std
push
jl
ror
inc
punpcklbw
mov
test
xor
mov
jno
mov
loop
mov
sub
push
(bad)
mov
and
push
push
cs
rcl
xchg
or
xlat
loop
cmp
xchg
(bad)
xchg
(bad)
push
out
shl
(bad)
mov
fcomp
scas
jp
dec
dec
mov
cmp
leave
pop
push
in
and
int
mov
inc
push
fnstcw
sub
mov
pop
sbb
repnz
stc
ja
and
cmc
adc
in
je
sbb
and
add
rol
out
add
mov
std
mov
mov
cdq
push
mov
mov
sbb
(bad)
clc
ret
or
js
and
aad
dec
gs
dec
mov
xchg
push
fisttp
sar
mov
cmc
pusha
fwait
jo
out
or
jnp
stc
cli
inc
bound
es
bound
adc
movs
stos
jno
adc
in
mov
sub
xor
and
dec
dec
dec
sbb
ja
add
push
(bad)
iret
popf
lods
add
push
jo
mov
mov
movs
fs
mov
mov
aaa
pushf
pop
cdq
mov
sbb
outs
outs
dec
in
(bad)
es
ds
mov
inc
mov
xchg
or
test
ss
mov
inc
mov
xchg
test
fmul
and
stc
cmp
scas
xchg
or
dec
fdivr
push
movs
adc
fist
pop
(bad)
xor
push
jb
mov
int3
and
or
bound
loope
out
sbb
in
sub
fmul
mov
jno
ficom
jl
test
mov
sub
in
nop
inc
outs
pop
and
out
push
(bad)
mov
movs
mov
mov
into
movs
fdivr
mov
fadd
test
aam
cli
(bad)
sub
xchg
sub
mov
pop
xor
stc
out
sbb
ror
mov
pop
jnp
test
imul
mov
mov
xor
mov
push
popf
and
mov
stos
xchg
adc
adc
jae
fdiv
xor
aad
dec
outs
(bad)
(bad)
or
mov
stos
movs
and
mov
je
pop
out
xchg
mov
inc
jecxz
je
mov
jmp
xchg
push
scas
add
sub
or
dec
add
js
mov
and
lahf
out
lds
test
aaa
cmovns
cmp
addr16
cmp
es
or
jle
ja
(bad)
push
pop
pop
dec
arpl
ror
pusha
cmp
repz
pop
or
adc
fcom
cdq
fsub
sub
pop
cwde
mov
pop
daa
fcomi
or
mov
mov
mov
pop
cmp
inc
add
fmul
cdq
in
xchg
fisubr
sbb
fild
int3
pop
push
fwait
jne
jp
fmul
je
mov
leave
and
mov
mul
ret
test
jmp
mov
das
xchg
fsubp
cmps
cmp
xor
sti
lds
jle
or
adc
mov
xchg
cwde
pop
int3
and
xor
gs
jl
cwde
mov
dec
jp
nop
or
xchg
ror
adc
cmp
pop
xchg
stos
sahf
xor
lahf
pop
xor
cli
movs
scas
aas
inc
popf
nop
push
push
shl
test
cdq
sub
dec
xor
mov
adc
cmps
cmp
xchg
dec
jmp
and
sbb
fisubr
popf
and
cmp
in
and
lock
sub
xchg
mov
or
sub
adc
sub
rol
scas
les
leave
(bad)
jmp
pushf
or
jns
sub
sbb
ret
mov
add
add
aas
jmp
adc
cwde
xor
jb
pop
inc
xchg
imul
int3
mov
sbb
inc
les
test
les
xchg
pop
jmp
push
hlt
or
enter
cmp
xor
fisub
and
xor
retf
icebp
xor
call
das
jecxz
test
push
in
sbb
or
and
adc
in
bound
ror
pop
das
add
xchg
mov
out
jns
push
mov
mov
xor
push
mov
sbb
enter
inc
js
das
scas
add
fcmovne
mov
mov
jo
xchg
jo
std
scas
cmp
sbb
sub
dec
stc
jae
mov
pop
pop
ds
scas
test
mov
out
cmp
loope
icebp
sub
lods
mov
pop
xor
scas
enter
stc
and
jo
pushf
out
and
mov
aad
mov
cmp
sbb
inc
aam
movs
pop
jecxz
iret
mov
adc
retf
mov
fldenv
sbb
mov
mov
mov
data16
mov
sbb
(bad)
mov
mov
adc
call
outs
std
clc
lds
retf
xchg
out
mov
mov
dec
outs
fdiv
pushf
in
add
(bad)
xor
push
in
mov
sub
(bad)
(bad)
sbb
hlt
and
mov
xchg
xor
pop
xchg
dec
test
xor
sahf
mov
mov
fild
outs
pop
mov
test
add
sub
add
pop
stos
iret
jle
iret
mov
addr16
enter
add
or
dec
push
add
lahf
enter
int3
add
sbb
test
cmc
pop
sub
push
repnz
icebp
(bad)
sub
sbb
pusha
pop
jmp
push
call
jbe
fidiv
and
add
les
lock
(bad)
lahf
dec
mov
repz
test
ds
inc
jmp
ret
or
adc
pop
and
sti
add
inc
test
gs
push
cmps
lock
mov
jmp
xchg
loopne
xor
jl
fmul
pop
push
lds
leave
sub
scas
in
inc
jg
push
cdq
jl
ret
pop
jno
xor
and
push
popf
inc
add
pop
gs
aam
js
popf
dec
fisubr
dec
xlat
mov
in
or
sar
push
inc
mov
dec
push
xlat
mov
push
cmp
mov
pop
xchg
ds
add
fmul
lods
adc
pop
push
push
jmp
add
ss
fistp
sub
mov
arpl
out
ins
pop
or
cmp
and
inc
mov
dec
dec
ins
out
inc
or
add
out
or
daa
(bad)
dec
xchg
leave
adc
sub
and
jmp
pop
mov
cmp
or
sbb
adc
inc
xor
dec
xchg
adc
clc
cmps
cmp
dec
lock
leave
pop
xor
mov
mov
mov
imul
pop
retf
in
shl
adc
cmp
xchg
jae
adc
pop
gs
inc
ret
mov
xchg
leave
es
jmp
pop
push
push
add
arpl
push
mov
push
adc
imul
test
fwait
data16
shl
lods
xor
xchg
jmp
loop
out
pop
pmulhuw
cdq
pop
stc
mov
jmp
iret
cs
cld
push
and
sub
mov
stos
(bad)
loope
sub
mul
xchg
pop
pop
jae
aam
and
ds
push
pop
xor
ret
mov
xor
out
int
sbb
sub
sub
stc
das
ja
fsub
mov
retf
adc
mov
xchg
add
cwde
jmp
loopne
jmp
fcom
lods
xor
fmul
cmp
inc
add
push
add
aam
ins
xor
sbb
add
ret
imul
jp
mov
xor
pop
cld
add
ret
xchg
xor
xor
xchg
arpl
mov
mov
inc
lock
xor
mov
mov
ins
cmp
pop
inc
cmp
ffreep
std
test
xchg
mov
cmp
jnp
and
dec
daa
or
pop
dec
shl
mov
(bad)
cmps
test
(bad)
lods
lods
jl
rcl
dec
loopne
inc
adc
icebp
lahf
inc
loopne
call
hlt
dec
adc
dec
fwait
or
dec
adc
repz
fcom
mov
mov
xor
mov
mov
popf
lods
(bad)
sbb
es
daa
push
push
mov
push
adc
inc
ja
add
mov
popf
jge
mov
cwde
pop
mov
cmc
(bad)
push
mov
add
bound
call
cld
xchg
jmp
test
pop
mov
fdivp
mov
inc
or
fild
inc
cmp
pop
movs
push
dec
xlat
popf
in
in
(bad)
jecxz
(bad)
mov
imul
mov
mov
inc
ret
dec
jnp
xor
add
dec
cmp
int
inc
outs
movs
inc
jmp
mov
das
adc
data16
push
ins
inc
leave
mov
inc
cmp
inc
fiadd
sbb
(bad)
arpl
sbb
cli
jb
mov
pop
test
pop
pop
jge
add
push
inc
popa
int
mov
jle
xor
fsubr
push
les
(bad)
int
call
mov
(bad)
hlt
add
cmp
(bad)
xchg
psllq
in
push
dec
movs
pop
push
mov
add
imul
dec
cmp
mov
and
ins
jmp
mov
add
ret
dec
cmp
out
in
mov
in
xchg
pop
mov
lea
aaa
in
cmp
aaa
cs
jp
adc
icebp
rol
(bad)
pop
push
dec
retf
sbb
pop
cmp
cwde
sub
add
imul
inc
aad
hlt
jl
lods
js
mov
pusha
dec
pop
retf
adc
push
ss
push
in
adc
dec
push
arpl
mov
sbb
lea
sahf
xchg
mov
leave
and
adc
aad
fstp
and
mov
jno
push
cwde
(bad)
xchg
dec
scas
test
adc
pop
bound
clc
dec
inc
daa
mov
aas
mov
pop
(bad)
cmp
arpl
ror
pusha
(bad)
ss
test
add
xchg
arpl
cmp
ret
call
repnz
pop
xchg
add
loope
pop
ret
inc
cmp
sbb
push
xchg
push
movs
(bad)
cdq
add
adc
pushf
loope
les
adc
push
dec
into
retf
and
cmp
push
inc
mov
xor
push
addr16
test
sub
push
ficom
mov
loopne
fidivr
sub
stos
int3
jno
mov
xlat
pop
xchg
stos
in
or
push
xchg
lds
in
jbe
sbb
add
vpmovsxdq
pop
pop
cmps
mov
add
sub
dec
mov
je
cs
inc
loope
inc
aam
sub
in
mov
xchg
jmp
(bad)
mov
es
fmul
test
neg
sbb
adc
adc
mov
mov
arpl
jp
mov
mov
push
pusha
fdiv
ins
aaa
xor
or
push
and
mov
mov
test
sbb
mov
adc
mov
and
shl
push
inc
nop
dec
in
ret
call
mov
enter
inc
dec
lods
sub
lods
adc
out
push
dec
mov
and
xchg
and
std
xchg
loope
or
in
mov
pusha
jnp
sub
loope
jle
pop
mov
dec
fadd
shl
(bad)
fnclex
(bad)
repz
ins
inc
outs
es
add
adc
jmp
scas
mov
ficomp
gs
js
ins
cmps
sub
(bad)
mov
ret
pop
pushf
out
loop
out
inc
imul
sahf
test
jns
xchg
test
rol
dec
push
pusha
or
jl
mov
jmp
sbb
jne
movs
rcr
sub
fadd
leave
sbb
sub
xor
sbb
mov
add
std
xchg
adc
iret
dec
mov
or
enter
add
js
outs
dec
mov
xor
inc
pop
xchg
cld
pop
sbb
js
jnp
xor
out
mov
in
pop
lahf
or
std
(bad)
sub
clc
jae
adc
popa
pop
stc
aas
fs
jb
(bad)
xor
loopne
lock
retf
in
pop
cmps
pop
cmpxchg
push
mov
or
sub
out
sbb
sub
push
sub
jns
mov
addr16
cmp
js
dec
mov
mov
fistp
or
push
adc
push
retf
xchg
lds
(bad)
ret
mov
adc
adc
inc
xor
pop
sub
add
mov
in
or
mov
call
dec
mov
loopne
or
stc
xchg
iret
(bad)
mov
inc
mov
out
xchg
ins
aaa
pop
dec
mov
mov
in
out
pushw
mov
sub
in
imul
addr16
cmp
out
push
cmp
or
or
cmp
adc
icebp
ins
test
cmp
push
jno
mov
xchg
fcom
ret
retf
adc
sub
cmps
bound
lods
sbb
jl
and
mov
sub
push
mov
or
pop
ror
xor
or
xchg
sub
stc
jmp
stos
or
ror
xlat
or
test
dec
jno
push
cmp
scas
popa
jnp
out
ds
fwait
das
aam
ficom
mov
pop
loop
pop
aam
cld
add
push
psadbw
jbe
retf
dec
pop
xor
jo
xor
in
fldenv
and
xor
dec
push
pop
xor
cmp
repnz
fs
ins
pop
jg
loopne
sub
push
inc
xchg
into
fmul
gs
fsubr
jae
sub
retf
es
bound
in
inc
dec
jge
int3
into
out
in
in
inc
dec
add
leave
js
mov
pop
mov
inc
xor
push
and
push
mov
jecxz
call
inc
outs
xchg
sub
sbb
dec
fcomp
hlt
aam
jnp
cmp
cmps
jb
push
ins
int3
rcl
neg
xchg
sbb
mov
shl
jb
inc
pushf
icebp
pop
out
mov
in
mov
adc
sub
xchg
jo
je
mov
mov
dec
repnz
loope
imul
neg
aaa
in
cmps
mov
loopne
aad
push
push
xchg
xchg
sahf
jno
in
wrmsr
mov
pop
push
loop
xor
outs
inc
inc
mov
xor
xchg
xchg
leave
test
mov
fwait
dec
adc
sub
sub
test
xchg
pop
add
adc
mov
pslld
and
popf
aad
inc
fmul
push
daa
mov
in
repnz
call
jmp
xchg
pop
retf
inc
adc
push
js
ins
inc
imul
in
and
fisubr
int3
push
aam
adc
xor
movs
mov
stos
or
enter
ror
stos
cmp
sub
mov
call
in
cmps
les
sub
in
push
cmps
dec
adc
movs
add
imul
xor
dec
pop
pusha
xchg
pop
out
out
push
lock
mov
mov
lods
mov
(bad)
popa
aaa
hlt
and
(bad)
out
test
pop
mov
imul
sbb
push
xlat
inc
mov
out
(bad)
jp
arpl
pop
cmp
loope
jecxz
out
(bad)
and
movs
sar
lods
movs
xor
pop
push
adc
jle
sub
inc
in
pop
jo
sub
je
imul
sub
adc
mov
imul
mov
and
test
xchg
bound
neg
(bad)
adc
jae
jmp
add
pop
es
test
addr16
push
test
nop
ror
or
inc
and
int3
outs
rol
jge
adc
loope
dec
es
(bad)
fdiv
xor
mov
int3
(bad)
xlat
xchg
xchg
test
fisub
dec
sahf
sub
imul
outs
jns
xor
das
jne
pushf
xlat
sub
cmp
mov
loopne
sbb
and
daa
mov
popf
fldcw
out
outs
scas
imul
sub
cmp
and
das
cmp
fdivr
xor
push
push
clc
in
mul
mov
or
and
mov
mov
not
sahf
cmp
dec
and
pop
loopne
inc
(bad)
xor
push
inc
and
(bad)
dec
inc
push
xchg
out
int
dec
int3
pushf
js
in
or
mov
adc
pop
push
pop
(bad)
retfw
out
jns
mov
popf
into
imul
ss
push
aas
rcr
xor
cdq
pop
es
retf
jb
jecxz
ret
stos
ins
data16
(bad)
ja
aad
and
or
push
fld
test
and
push
test
inc
pop
pop
js
cmc
repz
test
pusha
arpl
pop
or
pop
mov
xlat
dec
push
xchg
mov
imul
shl
data16
inc
xor
jp
neg
in
cmp
and
ins
pop
xchg
das
inc
cmp
int
aas
ret
ins
aad
gs
add
in
in
rcl
jp
jne
sbb
out
cld
pop
mov
je
div
popa
ja
jns
jae
adc
ss
data16
and
iret
ret
idiv
aad
pop
pop
xchg
ret
xchg
test
inc
and
outs
fsub
mov
in
push
jecxz
data16
dec
xchg
sub
dec
mov
inc
inc
cmp
mov
mov
cmp
xor
rol
xlat
popaw
xchg
retf
cmp
je
mov
cmp
pop
sub
js
push
les
jo
pop
ss
test
into
fcom
cmps
stos
loopne
and
data16
enter
sub
add
mov
mov
or
aaa
shl
add
in
push
xor
ret
add
pop
sub
(bad)
arpl
outs
add
clc
push
or
shl
mov
shl
call
loop
inc
loopne
std
sbb
into
movs
mov
stos
xchg
jno
lds
das
jb
mov
jb
cmc
mov
and
push
mov
gs
daa
arpl
mov
fcomp
add
xor
popa
pop
nop
out
stos
jns
push
fldenv
jnp
mov
fdiv
movs
std
fwait
mov
iret
mov
gs
pushf
add
cmps
jmp
ins
cmc
sbb
jbe
pop
mov
fcomp
or
jno
loope
inc
inc
and
push
and
jnp
and
ret
cs
xchg
in
iret
cmps
int3
iret
retf
jo
fs
sbb
sub
sbb
mov
push
es
inc
sbb
outs
sbb
or
(bad)
loope
push
ret
inc
lods
pushf
inc
add
or
mov
mov
mov
xchg
rcr
dec
or
lods
pop
jne
dec
cs
push
mov
xchg
xchg
pop
ins
nop
pusha
dec
arpl
pusha
leave
dec
mov
hlt
daa
mov
or
inc
dec
shl
dec
int3
sub
dec
add
or
jmp
xlat
(bad)
xchg
bound
sub
loop
dec
mov
adc
call
iret
nop
pop
push
mov
push
imul
mov
mov
dec
xor
pop
gs
js
add
push
push
fstp
inc
aaa
(bad)
push
adc
cmps
loop
dec
adc
mov
cs
out
inc
and
push
sbb
aaa
fimul
in
rcr
inc
hlt
sbb
add
ret
js
adc
aam
(bad)
cmp
mov
rcr
dec
sbb
dec
pop
movs
(bad)
mov
push
arpl
and
mov
call
add
push
or
repz
mov
sub
xchg
sbb
sbb
ret
mov
out
js
inc
push
arpl
add
(bad)
into
lds
adc
ret
shr
mov
xchg
push
lds
mov
push
pop
popf
lods
adc
pop
loopne
aaa
(bad)
in
std
and
pop
movs
ret
push
sbb
add
xchg
mov
dec
mov
or
in
loope
sub
fisub
inc
or
stos
jg
pop
mov
(bad)
mov
test
pop
pushf
pushf
adc
sbb
pop
cli
mov
lds
into
mov
mov
fwait
aaa
test
jae
cdq
jbe
ja
dec
add
or
cmc
shl
cmp
das
jbe
jbe
hlt
mov
rol
sub
adc
imul
(bad)
idiv
mul
(bad)
sub
pop
inc
out
scas
ins
ins
ret
test
add
cmc
stc
ja
inc
xchg
fcom
xor
nop
aas
sti
or
push
inc
popf
add
test
sbb
imul
dec
push
les
jle
loopne
test
push
mov
les
iret
jb
pop
mov
mov
outs
sbb
rcl
dec
out
xor
adc
and
mov
cmp
and
pop
inc
inc
cdq
mov
cmp
jmp
xor
cmp
loop
cdq
push
sbb
adc
bound
out
cmp
aas
inc
push
push
fs
rcl
aas
jnp
in
xchg
sub
pop
cmp
fs
or
jle
jne
rcr
dec
mov
js
pop
retf
pop
sub
mov
inc
leave
repnz
clc
stos
adc
xor
rcr
mov
adc
scas
xchg
jge
outs
mov
outs
fisttp
and
ds
sub
pop
data16
add
mov
sar
jns
and
adc
mov
sub
pop
mul
lods
pop
mov
(bad)
out
pop
inc
jp
pop
lock
dec
jl
rol
inc
xor
xchg
push
stos
int
test
xchg
movs
pop
jno
ror
fsubr
jnp
dec
mov
fmul
xchg
fst
mov
mov
mov
adc
xchg
or
push
xor
adc
jg
aad
in
sbb
mov
push
or
jb
in
adc
push
mov
fdivr
mov
adc
int
jo
mov
outs
repz
inc
add
push
fild
repnz
ret
dec
mov
dec
dec
mov
pop
leave
mov
push
inc
call
mov
mov
and
in
cmc
sbb
dec
jg
bound
xchg
mov
ja
rol
aad
xlat
aad
xchg
xchg
in
enter
mov
call
les
or
daa
(bad)
xor
mov
ret
test
std
fcomp
sub
dec
or
data16
shl
aam
aad
xlat
xchg
xor
js
and
jne
test
stc
arpl
mov
jle
rcr
add
mov
xor
xor
add
push
sbb
push
adc
push
cld
jge
mov
push
je
dec
lods
pushf
push
out
xchg
mov
scas
xchg
dec
sub
and
cs
push
repnz
push
cmp
mov
addr16
std
jne
std
addr16
jmp
in
popf
jmp
or
mov
retf
sub
add
jo
push
mov
lods
fdiv
loopne
mov
loope
xchg
mov
dec
outs
iret
leave
add
inc
jno
ror
xor
sub
movs
or
xor
hlt
std
dec
movs
cmp
cmp
sbb
fcomp
fcom
dec
cmp
adc
pop
sti
adc
push
dec
jns
add
mov
sti
mov
addr16
pop
inc
fs
or
pop
hlt
pushf
mov
cmps
les
and
int3
inc
lea
aas
jp
xchg
leave
inc
adc
sar
mov
jo
ret
sbb
test
mov
and
stos
sahf
mov
jo
aas
les
rcl
mov
aas
in
and
fcomp
mov
jl
add
fwait
mov
mov
cmc
xor
test
icebp
pop
jle
into
cli
push
push
es
xchg
sbb
test
cmps
out
xor
cmps
ficomp
icebp
xlat
add
pop
jo
lods
inc
mov
fisttp
push
call
test
(bad)
push
cld
std
ja
xchg
push
add
xchg
mov
mov
mov
stos
fcom
xchg
ficom
push
scas
sar
xor
stos
mov
inc
ins
mov
push
icebp
movs
xor
retf
jmp
add
mov
pop
mov
aas
mov
rcr
daa
fistp
dec
repnz
cmp
nop
xor
jb
push
(bad)
fidiv
mov
movlps
pushf
xchg
and
rcr
aas
push
or
inc
xchg
lods
mov
cdq
outs
cdq
les
(bad)
dec
lods
test
repnz
xchg
sti
adc
imul
xor
jns
loope
sub
mov
mov
fsubrp
fs
dec
loope
sbb
xchg
dec
cmps
sub
pop
jb
jmp
retf
out
outs
dec
cmp
inc
and
into
mov
or
shl
or
ds
or
mul
sbb
push
inc
inc
sub
mov
fdiv
pop
xchg
adc
mov
sub
pusha
lds
and
adc
xor
mov
jecxz
add
cld
dec
pop
sub
rcl
psubsw
cmp
mov
push
outs
loopne
not
(bad)
cld
(bad)
xor
out
out
fisttp
ror
xchg
enter
mov
xor
xchg
xor
cmp
push
push
daa
pop
cmp
in
fst
adc
mov
rcl
jb
repz
add
icebp
test
or
sbb
push
push
arpl
cs
dec
imul
xchg
mov
scas
push
mov
dec
sub
clc
dec
mov
pop
mov
xchg
out
jecxz
adc
repz
imul
jge
movs
gs
add
imul
sbb
scas
cdq
fmul
xchg
out
mov
popf
aad
in
ficom
add
cmp
fistp
repnz
es
lea
mov
pop
int3
in
xchg
mov
sub
gs
cmp
daa
mul
in
retf
fsub
mov
jns
sbb
rol
inc
dec
xlat
rcr
dec
adc
and
fwait
and
in
fwait
and
mov
outs
add
xchg
sbb
pop
jp
mov
mov
inc
add
pop
(bad)
test
dec
pushf
scas
out
mov
pop
fs
daa
mov
xchg
ins
xchg
mov
sbb
sti
dec
mov
pusha
inc
int3
mov
cld
scas
pop
dec
pop
shl
mov
sar
nop
movs
cdq
or
and
dec
aas
sar
inc
lahf
stc
push
(bad)
pop
out
mov
xlat
adc
cmp
jg
in
int3
js
mov
pop
cmp
pop
mov
rcl
pop
cmps
gs
inc
stc
lods
cmp
lods
push
fwait
or
(bad)
inc
sbb
and
adc
mov
or
pop
push
lock
sbb
xchg
inc
adc
fbld
ins
mov
pop
xchg
inc
sub
mov
gs
pop
and
jno
jecxz
mov
or
repz
adc
jmp
add
or
mov
xchg
adc
add
out
sub
inc
cmp
jp
xor
loop
iret
pop
int3
ins
out
add
cli
pop
mulps
mov
mov
add
jnp
retf
inc
cmp
into
(bad)
mov
xor
dec
ja
lahf
movs
or
adc
and
test
loop
or
int3
jecxz
xor
sbb
add
sub
cli
and
adc
mov
fldcw
xchg
dec
daa
mov
ss
clc
(bad)
rcr
dec
test
cmp
push
mov
mov
xchg
jns
movs
sbb
mov
and
push
loope
cwde
cmps
mov
out
jl
pop
sub
loop
ins
add
cmp
int3
xor
repz
mov
push
fmul
xchg
mov
cmp
xor
mov
or
shr
dec
mov
and
fld
xor
popa
xor
stos
push
xor
jae
movs
js
xor
sti
(bad)
pminsw
adc
fcomp
mov
ja
jmp
cmp
and
popa
jmp
loopne
push
inc
hlt
adc
cmp
scas
mov
sub
outs
push
jge
sub
fcom
jg
jb
jno
sbb
test
mov
and
mov
dec
cmp
fsubr
xor
or
sar
push
cwde
mov
sbb
cmp
sub
enter
aaa
push
xor
or
add
loopne
xlat
pushf
mov
or
(bad)
mov
adc
mov
test
pop
bound
or
or
xor
(bad)
sar
sub
out
xchg
mov
or
cmp
mov
mov
push
sbb
cmp
push
mov
sbb
pop
(bad)
les
idiv
xchg
fstp
movs
sub
scas
pop
and
xchg
xor
test
enter
jp
movs
sbb
mov
xchg
cmp
(bad)
sbb
jle
push
mov
dec
pop
inc
adc
fdiv
iret
sub
xor
scas
cmps
jmp
movs
lock
mov
nop
jo
call
fmul
xchg
or
fistp
push
jecxz
and
imul
sub
jecxz
pop
jbe
push
add
leave
lock
clc
pop
sti
mov
xchg
mov
pusha
dec
mov
clc
cmc
stc
mov
in
pop
and
and
xlat
pop
sub
sar
iret
cmp
jnp
cwde
aas
and
call
ja
dec
(bad)
push
sub
xor
popa
lods
loope
jb
jns
mov
call
adc
push
cmps
(bad)
ja
cwde
inc
add
out
jecxz
add
mov
jmp
sbb
arpl
inc
push
sti
jp
scas
jmp
lock
jp
mov
inc
(bad)
ret
dec
and
fsub
scas
inc
out
pop
bound
test
dec
pop
mov
stos
sbb
xlat
test
les
ds
adc
mov
and
mov
lods
mov
fstp
pusha
xor
sub
xchg
iret
and
and
in
pop
jmp
inc
dec
pop
push
or
je
int3
out
(bad)
mov
sub
push
jp
and
jmp
loope
jmp
imul
shl
cmp
ds
ss
inc
push
cmp
add
test
mov
fld
pop
jae
mov
mov
out
movs
or
aad
sbb
and
and
add
sbb
mov
mov
ja
repnz
cmp
push
movs
sub
sahf
xor
jge
mov
lods
cmc
aad
sub
xor
xchg
ins
fst
xor
scas
pop
jmp
adc
mov
sub
pop
imul
and
les
jns
sbb
pop
adc
(bad)
sub
ins
jle
sub
adc
lahf
jno
xor
sbb
or
test
cwde
mov
cmps
popa
sub
out
jns
or
lock
shl
mov
and
fsubr
rcr
jmp
mov
sub
push
inc
mov
lock
pushf
and
add
pop
cmp
mov
es
(bad)
imul
mov
outs
inc
test
es
popf
mov
gs
mov
pop
mov
push
lock
nop
push
popf
jg
xchg
ss
in
aad
mov
aaa
sahf
test
jno
cli
xchg
xchg
sub
push
cmc
xor
mov
std
ss
mov
sub
push
jp
xchg
lods
xor
pop
jecxz
jg
dec
dec
cmp
pop
test
and
cmp
cmp
jnp
push
fs
xchg
jnp
and
mov
xchg
or
jl
movs
in
nop
add
inc
cmp
int
cmp
(bad)
mov
mov
shl
js
mov
loopne
(bad)
out
push
je
and
in
and
outs
cwde
jecxz
test
mov
or
data16
cmp
ret
xor
loope
adc
or
aad
push
jae
sub
inc
sahf
leave
dec
add
mov
leave
mov
dec
out
push
add
mov
out
mov
xlat
pop
rol
dec
sbb
xchg
lods
lock
lock
mov
nop
aas
cmc
fistp
div
call
aad
jo
pop
lea
out
push
int3
jg
or
add
repnz
fdiv
das
(bad)
aas
lock
jmp
lods
xor
pop
xchg
ss
(bad)
cmc
mov
add
enter
mov
inc
mov
in
xchg
push
pop
fdiv
aaa
push
mov
cmp
repnz
dec
mov
add
push
jle
rol
adc
and
cmp
adc
push
fdivr
int3
cld
adc
lods
dec
add
ja
cld
call
mov
test
rcl
mov
mov
out
(bad)
in
or
add
mov
xor
ror
outs
inc
stos
inc
xchg
movs
adc
(bad)
jns
aam
mov
sub
cs
mov
adc
add
and
movs
or
aaa
lea
dec
xchg
or
mov
and
mov
inc
jg
xchg
test
dec
popa
in
xchg
adc
sti
stos
ins
movs
xor
and
and
sbb
xor
in
rcl
pop
mov
mov
test
push
sbb
xchg
add
dec
imul
jmp
mov
test
jno
ret
xor
dec
lea
inc
inc
pushf
idiv
outs
dec
movs
add
dec
mov
(bad)
jns
int
cmp
adc
lods
mov
hlt
mov
call
fstp
call
cmc
adc
repnz
or
inc
lods
fild
push
nop
or
outs
xor
xchg
scas
das
inc
and
fild
bound
push
es
sub
stos
xchg
sub
xchg
fdivr
(bad)
fstp
jbe
xchg
inc
pop
loop
add
icebp
ret
loop
mov
adc
add
hlt
cwde
not
jbe
adc
movs
(bad)
pushf
lea
add
xor
iret
or
cmp
pop
dec
pop
push
mov
pop
lods
movs
arpl
(bad)
(bad)
pop
(bad)
cmp
int3
mov
sub
push
sub
pusha
adc
stos
mov
mov
mov
cmp
cmp
retf
push
xchg
cmp
in
out
test
outs
mov
or
or
push
push
inc
pop
stos
push
add
pop
bound
xor
repnz
stos
jns
xchg
pop
adc
ss
lods
out
shl
movs
cmc
adc
(bad)
cmp
loopne
sbb
mov
cli
mov
xor
rcr
shr
in
movzx
push
xchg
push
and
loope
mov
inc
imul
xor
imul
stos
xor
movs
or
fwait
push
lods
pop
mov
mov
jl
push
aaa
mov
fisub
ret
out
xchg
mul
(bad)
loop
xchg
daa
xchg
scas
mov
push
push
in
test
dec
in
out
(bad)
jno
xchg
call
sub
push
loope
std
loope
jo
in
sbb
jl
ins
je
fistp
aad
pop
es
xchg
mov
movs
sub
push
ds
call
adc
mov
cmps
xlat
cmps
leave
test
daa
and
cmps
add
lea
mov
inc
inc
mov
and
out
in
repnz
stc
popf
sub
popf
mov
dec
outs
pop
mov
xor
in
out
test
jmp
push
enter
or
outs
adc
cmp
xlat
repz
cmp
pop
enter
(bad)
xchg
jmp
push
jmp
jne
jg
xchg
imul
push
add
xchg
imul
scas
out
(bad)
gs
mov
or
or
dec
jg
div
ins
mov
adc
push
sahf
je
sub
add
cmps
jl
bound
popa
retf
xchg
out
lods
dec
jmp
and
outs
push
fst
mov
cwde
mov
mov
mov
mov
ss
mov
xor
es
and
mov
imul
jecxz
into
imul
sbb
call
sar
push
add
push
ficomp
push
inc
sahf
or
adc
sub
cmp
sbb
or
mov
dec
inc
cmp
inc
or
shl
fcom
sbb
jo
adc
push
add
sub
pop
dec
cmps
jecxz
loopne
fs
mov
mov
adc
mov
leave
ss
mov
push
adc
jne
pop
outs
xor
shr
int3
retf
adc
dec
(bad)
mov
xchg
lahf
inc
retf
sbb
and
scas
dec
mov
add
shl
inc
movs
out
pop
mov
adc
jns
inc
inc
xchg
call
mov
sub
sbb
int
sahf
mov
lahf
or
les
jl
add
pop
je
cmps
sub
les
sti
xor
ss
mov
adc
enterw
ds
pushf
push
mov
mov
inc
mov
xchg
jo
dec
cli
int
or
push
or
pop
mov
adc
out
out
cmp
test
adc
jmp
push
ret
rcl
cmp
sub
sub
mov
pmaxub
movs
push
mov
mov
mov
test
sti
in
sar
push
and
test
jecxz
cld
dec
xor
stc
lock
cmp
pop
lock
and
pop
les
cmp
dec
xor
fdivr
jbe
out
paddd
or
mov
or
hlt
mov
(bad)
int
jmp
jmp
mov
aaa
dec
ja
cmp
sbb
add
jb
test
jns
add
jl
icebp
stc
std
lock
jle
mov
clc
cmp
sub
mov
add
inc
out
add
and
sti
fsub
je
xchg
enter
pusha
sbb
das
lock
push
aad
dec
mov
iret
add
imul
jmp
scas
imul
gs
add
popa
lods
push
sub
mov
mov
pusha
nop
dec
dec
or
jmp
mov
jge
mov
lods
ins
fwait
lea
scas
and
call
cmps
lods
imul
pushf
mov
fcmovu
cmp
lds
ins
cwde
imul
and
out
repz
jo
and
cmc
retf
xor
in
sub
cmc
push
xchg
sub
out
scas
mov
mov
dec
mov
retf
cld
or
jno
jmp
lods
icebp
jne
std
aad
ds
xor
xchg
mov
loop
sub
inc
fs
push
(bad)
jbe
hlt
mov
(bad)
dec
cmp
add
loope
add
sub
sbb
ss
dec
xor
push
push
dec
jmp
push
inc
hlt
repnz
and
adc
push
and
mov
retf
dec
push
xchg
push
xor
fsubr
cmps
sub
cmp
inc
mov
jp
addr16
aas
and
int
add
fstp
add
loop
inc
sub
push
xor
cmp
ds
es
test
sub
mov
adc
pusha
stc
aaa
js
scas
jge
push
dec
imul
aad
xchg
pmulhuw
jae
inc
or
jo
cdq
push
push
cmp
mov
loope
push
jnp
out
call
cmp
loop
sar
mov
jge
popa
xchg
inc
les
dec
fwait
push
jmp
push
call
adc
popf
push
ins
mov
jp
jp
sbb
movs
inc
shl
dec
ds
stos
push
xor
push
jno
add
je
arpl
cmp
in
jecxz
loope
adc
xor
sub
push
es
adc
out
je
hlt
pushf
jg
sbb
push
ins
cmp
(bad)
cli
dec
retf
inc
dec
retf
and
xchg
jge
cmp
stc
sub
xchg
fisub
pusha
or
mov
ret
and
test
cmc
icebp
clts
retf
pop
jmp
(bad)
mov
cmp
mul
loopne
pop
xor
mov
pusha
mov
dec
fst
xchg
mov
shr
xchg
repz
(bad)
mov
mov
sbb
aam
and
cmp
sbb
cs
xchg
jge
(bad)
out
popf
sub
sub
fstp
ror
loop
and
jbe
jb
mov
cli
imul
push
xor
ss
or
stos
dec
and
enter
inc
ds
aaa
aas
out
cs
inc
mov
int
sbb
scas
jo
dec
pop
test
jl
out
mov
cmp
gs
das
mov
push
jmp
jne
dec
or
pop
cmp
add
jmp
cmc
sub
lahf
xchg
or
xor
test
int3
test
push
jp
push
sbb
or
pop
dec
jle
cmp
sub
ins
mov
movs
mov
dec
call
sbb
cdq
cmp
jae
leave
outs
push
call
rcl
or
cld
push
dec
cmp
jmp
not
aas
popf
pop
sar
xchg
add
fidivr
aad
clc
jg
dec
fwait
and
ret
and
pop
sub
enter
or
mov
xchg
cld
pop
jmp
push
pusha
adc
sar
loope
or
loopne
shr
nop
adc
or
xchg
pop
repz
retf
retf
ror
loop
cs
ins
es
jnp
int
lods
mov
sub
jae
test
jne
sbb
or
cmp
mov
rol
pop
(bad)
xchg
rol
inc
popf
iret
jae
jg
add
unpckhps
sti
sbb
lea
mov
mov
cmp
push
jmp
mov
inc
mov
inc
(bad)
mov
fiadd
mov
gs
push
ins
mov
mov
sbb
pushf
xchg
mov
push
ja
daa
in
call
jb
cs
into
mov
std
inc
pop
cmp
xchg
clc
hlt
inc
dec
ss
or
in
adc
add
mov
add
(bad)
(bad)
sub
pop
test
push
xor
xchg
mov
pop
jo
xor
sub
movs
adc
gs
and
xor
xchg
lea
and
mov
das
ja
cmp
imul
push
call
stos
movs
aam
out
dec
mov
movs
fs
data16
(bad)
pushf
jg
nop
test
mov
push
adc
inc
ret
adc
push
inc
dec
rcr
or
xchg
pushf
jge
jmp
scas
xchg
and
loope
cwde
aam
push
or
cmps
push
gs
push
jge
inc
stos
or
in
jo
in
outs
and
or
mov
out
jmp
out
sub
shr
cmp
fs
sub
or
push
xor
jmp
shl
stc
rcl
xor
bound
add
jmp
mov
cdq
or
push
retf
pushf
(bad)
ret
fwait
nop
push
adc
stos
ds
leave
xor
dec
std
cld
or
test
stos
(bad)
xor
div
aam
dec
(bad)
sahf
(bad)
jb
daa
nop
xchg
int3
stos
out
loope
pop
aad
(bad)
stos
cmp
cmps
sub
aas
dec
ret
sbb
test
shr
xor
xchg
hlt
mov
popa
out
sub
stos
xchg
nop
push
sbb
xchg
loop
xchg
xor
sbb
mov
mov
or
xor
es
xchg
mov
dec
xchg
int
ja
mov
into
js
mov
mov
(bad)
pop
movs
fwait
sub
xchg
dec
mov
push
mov
and
mov
out
mov
int3
add
(bad)
dec
ins
push
mov
xor
mov
enter
inc
pushf
dec
sub
adc
add
pop
pop
ins
jmp
shl
into
jne
inc
ret
aam
stos
ins
ins
pop
pushf
fmul
cmps
cmps
not
sbb
fdecstp
outs
loopne
pushf
mov
js
jl
ins
test
mov
inc
dec
jmp
sbb
mov
lds
sub
(bad)
ja
push
mov
loope
xchg
mov
jmp
push
sar
pop
je
xlat
sbb
push
imul
xchg
jbe
jo
jbe
ds
adc
imul
dec
push
(bad)
push
fmul
cs
and
fisubr
inc
xor
inc
cmp
js
pop
jle
add
mov
mov
or
pop
and
jae
jg
stos
aam
push
repnz
pop
rcr
enter
add
and
ret
mov
and
or
add
pop
xchg
adc
sub
adc
xor
dec
push
inc
mov
popf
xchg
xor
popf
sar
sub
xor
ss
out
lea
scas
jecxz
or
out
mov
(bad)
jae
popa
ret
mov
arpl
(bad)
fcmovu
sbb
lods
shl
xchg
addr16
mov
xlat
xor
mov
push
bnd
nop
push
inc
and
stos
or
ss
sub
daa
sbb
rol
push
inc
ror
adc
xchg
jo
inc
ret
loop
mov
dec
xchg
pop
test
int
cs
and
retf
cld
and
pop
iret
xchg
mov
(bad)
les
in
icebp
cmp
das
imul
test
frstor
push
sti
push
mov
adc
sub
jne
sub
shl
(bad)
sar
imul
std
lds
and
mov
jle
jl
xchg
lds
mov
xchg
lock
test
das
lahf
jge
mov
scas
add
dec
jg
dec
inc
sbb
es
jmp
cmp
push
sbb
mov
ret
cs
fmul
pop
pop
or
stos
jl
sbb
push
mov
and
out
add
into
mov
pop
ins
ins
cmp
fistp
adc
sub
nop
(bad)
cmp
jno
inc
sub
pop
out
imul
mov
adc
or
gs
xor
push
cmps
movs
or
push
and
xchg
jnp
into
xor
comiss
mov
inc
mov
sar
jecxz
and
ja
push
out
and
add
mov
cmps
jnp
push
dec
lods
pop
xor
ror
shr
mov
into
mov
pop
enter
sahf
dec
cs
mov
lds
cmp
test
test
pop
add
xor
jle
fldenv
es
jp
movs
mov
idiv
out
aad
mov
jmp
in
fbld
push
xchg
out
and
into
mov
jge
imul
repz
leave
sahf
shl
jae
mov
jecxz
(bad)
ret
cs
push
mov
pop
add
mov
dec
ja
push
fisub
jnp
xchg
inc
dec
cld
mov
lock
test
sub
test
dec
adc
scas
jecxz
push
mov
or
sub
pop
adc
bound
adc
data16
mov
or
pop
repnz
cmp
movq
and
xchg
jb
in
cmp
pushf
add
jmp
jmp
fsub
test
cld
pop
scas
push
xchg
hlt
in
xchg
(bad)
shr
add
imul
or
jmp
dec
inc
inc
dec
loope
cmp
fincstp
pop
sub
push
and
and
mov
cmps
lea
xor
cmps
add
mov
sub
retf
adc
jnp
retf
adc
or
(bad)
pop
sahf
push
rol
dec
xchg
cli
mov
das
jb
repz
push
inc
ror
pop
xlat
xchg
xor
and
and
loopne
cmc
ror
les
ss
sub
jge
fisub
cmp
int
xor
stc
cmp
add
shl
les
div
out
xlat
or
ins
pop
dec
in
lods
aam
mov
pop
jp
dec
in
out
repnz
(bad)
into
inc
pop
mov
aas
mov
jmp
sar
fcmovne
shl
mov
imul
ins
pop
mov
push
inc
das
les
loop
sahf
push
in
inc
inc
xchg
ret
mov
add
adc
cwde
cmp
clc
xor
ja
pop
sbb
test
adc
inc
cmps
sub
push
rol
fadd
xor
inc
popa
and
jmp
lods
ret
fdivr
test
mov
ss
push
mov
mov
fbld
int3
pop
les
push
scas
movs
dec
lods
adc
xor
jno
popf
cwde
mov
in
ret
cmp
div
imul
sbb
jecxz
popa
int3
aam
push
fsubr
dec
stc
iret
sub
pop
in
inc
sbb
adc
out
call
test
sbb
stos
pop
cmp
adc
rol
(bad)
dec
retf
popa
adc
or
jg
nop
retf
in
shr
rcl
push
or
(bad)
rcl
push
neg
sbb
dec
and
push
sbb
les
dec
push
ins
inc
jnp
pop
inc
xchg
mov
lods
push
mov
popf
and
xchg
pop
scas
mov
push
sub
rcl
and
jno
fsub
pushf
inc
movs
(bad)
xor
fcomp
int3
and
mov
sub
inc
int
popa
fsubr
test
data16
clc
fs
sbb
iret
xor
(bad)
cmp
xchg
add
and
xchg
cmp
cmc
cli
adc
push
neg
ins
cwde
in
std
xchg
add
sbb
cmps
pop
call
or
push
jmp
clc
or
jb
cmp
ins
lahf
jmp
mov
aam
mov
js
mov
iret
jle
pop
xchg
sbb
add
pop
loope
dec
push
test
sub
add
ret
pop
inc
fisttp
adc
jns
pop
inc
cld
repz
out
test
dec
or
fistp
ins
repz
pop
xor
or
sahf
mov
lds
and
mov
aad
cld
test
jmp
test
(bad)
inc
mov
adc
in
call
fdivr
rol
sbb
neg
xchg
fstp
add
wbinvd
or
setns
and
dec
ror
rcr
xchg
mov
sbb
(bad)
test
push
sbb
shl
movs
out
lods
mov
sahf
arpl
mov
or
pop
aam
pop
je
loope
(bad)
fild
jge
sub
dec
aam
cmp
lahf
in
jle
dec
push
pop
rcr
(bad)
mov
sub
inc
jle
pusha
mov
push
(bad)
adc
add
add
mov
cmp
or
cli
dec
data16
adc
ins
sbb
and
scas
(bad)
rol
hlt
xchg
in
inc
push
(bad)
lods
jge
inc
retf
ficomp
sbb
sete
imul
call
xchg
outs
aas
pop
popf
mov
inc
test
repz
mov
inc
push
mov
pop
shl
cmp
fadd
sbb
push
sbb
and
out
cmp
mov
cmove
adc
mov
mov
icebp
sahf
xchg
gs
push
jnp
scas
pop
xchg
mov
xor
mov
ds
shl
lds
movs
sahf
cmps
push
andnps
repnz
std
add
inc
xchg
and
aas
jge
push
sbb
pusha
cmps
das
test
data16
push
push
outs
test
xor
stc
jg
fistp
scas
pusha
push
inc
pop
mov
mov
lock
mov
mov
loopne
cs
push
mov
ror
lods
ror
das
sub
jbe
xchg
mov
push
fwait
push
sub
(bad)
leave
(bad)
xor
sbb
adc
rcr
cs
add
adc
sub
je
push
rcl
add
outs
sub
cli
add
or
test
push
inc
or
(bad)
xchg
mov
xor
jne
ror
dec
cmps
jl
rcr
mov
jne
scas
sbb
dec
lahf
mov
add
mov
inc
cmp
in
in
cmp
fstp
cdq
cli
jbe
cmp
aas
pop
bound
xchg
sbb
cmc
sbb
arpl
pop
cmp
mov
and
jae
pop
dec
cmps
movs
arpl
jns
in
jg
push
scas
in
push
cmp
lods
out
fdivr
inc
xlat
push
je
frstor
push
adc
push
test
lahf
lods
mov
or
xor
mov
test
lods
or
fisub
movs
fisttp
loopne
adc
stos
loopne
lods
xor
sahf
adc
fmul
movs
loop
mov
add
ja
cmp
imul
xchg
mov
pushf
dec
mov
test
cmps
lods
sbb
mov
pop
pop
dec
xchg
dec
in
and
aas
mov
sub
mov
addr16
sar
das
mov
inc
stos
xchg
adc
cs
shr
repz
stos
inc
test
mov
(bad)
out
push
es
dec
mov
push
jns
je
in
inc
(bad)
int3
cld
or
fcomip
mov
jns
loop
fsub
imul
pop
mov
rol
push
in
dec
pusha
push
call
pop
push
nop
das
addr16
cmp
jb
std
adc
cwde
push
ret
pop
cmp
add
add
shl
adc
add
loop
aam
pop
add
dec
pop
gs
pop
pop
cmp
call
xor
or
push
xchg
or
mov
outs
test
out
inc
mov
mov
and
sub
inc
sub
pop
xchg
out
sbb
ret
retf
and
dec
cwde
dec
and
popa
dec
movs
imul
leave
(bad)
hlt
push
jecxz
sub
pushf
pop
popa
mov
or
pop
mov
mov
cmps
inc
pop
jbe
aad
xor
xor
stos
pop
stc
pop
call
push
fwait
add
cmp
mov
or
and
bound
jg
xchg
hlt
jmp
stos
movs
or
mov
call
loope
es
fld
xchg
inc
enter
mov
pop
cld
mov
movs
jmp
outs
movs
dec
sub
mov
cmps
add
and
pop
or
div
sbb
jmp
inc
jo
xchg
xor
(bad)
dec
sub
js
sub
mov
pop
int
jge
cli
jne
pop
or
(bad)
sbb
fld
push
adc
sbb
ret
fnstsw
dec
jmp
ret
aad
and
push
mov
sub
jae
xor
sub
inc
or
cmp
shl
mov
or
(bad)
adc
xchg
int
dec
mov
rcr
addr16
(bad)
mov
sti
jnp
lds
dec
cmps
inc
inc
cmp
dec
sbb
inc
or
repnz
mov
movs
cmps
adc
pop
out
and
or
sbb
sub
sti
mov
dec
mov
daa
xchg
dec
jle
fldcw
or
xor
push
enter
loopne
fs
pop
inc
fisub
loop
push
std
aas
sub
sub
cmp
cmc
jae
stc
out
sbb
out
add
push
fs
das
mov
scas
or
aas
and
mov
stos
cmp
sti
jmp
pushf
cld
adc
xchg
in
sbb
int
sbb
xchg
push
push
popa
mov
movs
push
and
and
sub
cmp
shl
cmc
push
ins
and
xchg
fisub
cwde
mov
ret
(bad)
aas
das
jmp
retf
push
xor
jmp
or
addr16
std
sbb
sub
jge
cmp
fistp
idiv
pop
jmp
sbb
test
mov
lea
jmp
(bad)
fstp
movs
das
clc
call
xor
test
shl
mov
push
and
xor
popa
mov
mov
xchg
ret
sub
add
rcr
and
popa
call
add
js
xor
add
dec
aam
ret
loopne
mov
gs
xchg
cmp
clc
sub
add
adc
add
jle
push
jne
jl
adc
adc
dec
mov
cld
jmp
sbb
sub
add
aaa
sahf
mov
jle
shl
cmp
lods
(bad)
movs
jl
in
mov
loope
and
jg
xor
cmps
push
retf
outs
(bad)
xlat
pop
push
iret
sub
and
sub
mov
out
clc
retf
inc
shr
push
cmp
(bad)
jmp
push
outs
mov
in
stos
xchg
icebp
cs
jnp
cmc
sub
cmp
mov
xor
je
mov
pop
fst
jns
pop
lahf
aam
(bad)
retf
xchg
xchg
xchg
into
fidiv
retf
rcr
adc
loop
push
pop
mov
adc
adc
retf
inc
imul
sbb
fsub
loope
das
out
lock
bound
in
fcmovb
mov
and
xor
pop
mov
movs
xor
jmp
inc
pop
test
mov
xchg
xor
or
int
gs
aaa
push
sar
fwait
ror
fstp
mov
cs
pop
xchg
outs
or
jl
add
shl
jl
mov
jle
scas
in
mov
sbb
mov
push
out
cmp
inc
lahf
push
ins
out
repz
movs
dec
retf
push
das
mov
out
pop
inc
jns
lea
in
repz
xor
mov
cld
dec
loopne
xchg
jae
loop
shr
retf
add
xchg
xchg
inc
push
ds
ret
popa
in
stos
mov
shl
dec
push
(bad)
dec
pusha
xor
(bad)
or
push
cmp
(bad)
les
call
jbe
and
retf
push
add
cmps
add
fsub
inc
jb
mov
sbb
popa
ffreep
pop
test
mov
int3
push
pop
sub
cs
xlat
fs
(bad)
pop
xchg
push
push
push
xchg
fst
and
in
dec
mov
jo
es
test
ds
cmp
cmp
ret
loopne
fld
fwait
cmp
push
mov
jb
cmps
aas
jbe
mov
nop
loop
sbb
popf
or
and
mov
ret
jae
xchg
cmps
jbe
mov
fst
xchg
dec
idiv
xor
adc
mov
add
sahf
cmp
xor
sub
retf
sbb
add
xchg
loop
aas
fnsave
cmp
cmp
jmp
mov
popf
mov
dec
mov
je
sbb
xor
ret
js
push
aas
clc
mov
cwde
cmp
and
pop
jmp
in
lea
or
test
push
call
loope
test
jnp
sbb
push
clc
jo
jo
mov
mov
movs
mov
mov
xor
ret
sahf
push
cmps
fist
pop
adc
pop
mov
les
dec
stos
jbe
jg
gs
pop
test
sahf
mov
enter
sbb
sahf
push
fidivr
outs
(bad)
add
fs
jp
or
dec
or
push
mov
nop
mov
iret
sahf
stos
out
(bad)
and
aam
add
add
gs
inc
xor
scas
lods
shl
push
add
and
or
cs
fnstenv
add
or
inc
pop
mov
sub
add
sbb
xchg
xor
mov
pusha
popa
and
or
test
aam
pusha
and
aam
add
and
or
sbb
mov
clc
sub
and
mov
cmp
fdiv
lock
mov
and
mov
cmp
or
jmp
jmp
popf
adc
fcomp
adc
lock
mov
and
or
inc
sub
xor
sar
aas
and
loope
cmps
mov
push
repz
sahf
and
into
cmp
iret
add
cli
add
bound
mov
sbb
(bad)
pop
xlat
jmp
mov
test
mov
into
jp
push
pop
inc
mov
jp
add
add
or
mov
leave
cmp
sub
sar
push
lods
sbb
mov
inc
test
cdq
push
leave
or
inc
xchg
jp
test
movs
adc
adc
xchg
pusha
xor
mov
mov
sbb
push
xor
add
adc
push
adc
push
les
inc
loopne
jb
and
add
adc
rcl
mov
mov
add
push
addr16
mov
fld
fdivp
cmp
jecxz
jmp
test
sub
mov
adc
test
js
add
jmp
inc
enter
ins
mov
les
fdiv
adc
xor
mov
dec
and
loop
cld
and
cmps
enter
aad
dec
imul
(bad)
cdq
mov
pop
mov
or
mov
scas
aam
mov
(bad)
cmps
shr
mov
mov
scas
cwde
test
jmp
push
daa
and
retf
iret
mov
inc
pusha
mov
lahf
xchg
movs
mov
(bad)
movs
int3
add
shr
sahf
and
ret
clc
repz
pusha
call
mov
int3
add
cdq
inc
adc
(bad)
je
outs
mov
data16
xchg
repz
adc
(bad)
sbb
loopne
mov
(bad)
push
clc
mov
or
test
inc
jne
out
ror
mov
mov
inc
test
inc
add
jg
jmp
sub
stc
(bad)
test
lods
in
scas
fstp
cmp
ss
adc
cmps
jmp
jnp
push
out
out
mov
das
jbe
sti
vaddsubps
sub
das
dec
mov
not
add
mov
in
sahf
repz
test
jg
shl
inc
lods
sbb
shl
enter
lods
mov
ror
inc
and
sub
test
mov
out
add
test
(bad)
out
adc
shr
fs
leave
sahf
mov
and
ss
ror
movs
add
test
dec
cmp
pushf
ja
data16
inc
mov
cmps
sbb
xor
sti
cmp
mov
dec
adc
mov
leave
and
xor
shl
cdq
mov
mov
adc
jmp
jo
ins
pop
(bad)
push
xor
call
mov
es
dec
int3
rcl
pop
cmp
vshufps
xchg
mov
dec
arpl
push
rol
rep
lahf
mov
shl
and
push
shl
sbb
cmp
cs
das
popf
push
jg
ds
call
xchg
popf
push
xchg
aad
rcr
loopne
pop
imul
adc
adc
loop
(bad)
imul
pushf
addr16
mov
int
push
push
call
sbb
mov
(bad)
xor
adc
inc
frndint
imul
mov
sbb
rcl
and
movs
lds
scas
sub
pushf
test
xchg
or
lahf
imul
retf
outs
jae
jo
xchg
daa
in
cmps
gs
lods
adc
leave
ja
cmc
je
or
in
pop
adc
and
add
mov
add
mov
daa
mov
lods
or
xlat
sbb
adc
mov
sti
and
int3
jg
and
sbb
mov
sbb
sub
xor
sbb
sub
mov
sbb
inc
popf
fucom
pushf
nop
ret
out
and
test
stc
loope
movs
inc
loope
mov
scas
add
fisubr
adc
mov
mov
das
fldcw
cs
mov
cmp
sbb
sahf
push
xor
test
add
add
imul
jg
mov
in
xchg
lods
cmp
sub
jle
jle
dec
das
mov
mov
imul
jmp
add
add
mov
jle
sub
ds
imul
lock
mov
ins
rcr
mov
inc
adc
jnp
stos
jno
adc
stos
lahf
es
call
mov
pop
(bad)
push
mov
cwde
mov
clc
mov
(bad)
cld
sub
jmp
adc
daa
push
imul
or
mov
loop
or
and
stos
adc
cwde
add
vsqrtsd
test
xchg
cmc
pop
retf
addr16
xor
push
inc
cld
jge
cdq
push
cmps
pushf
push
shl
jnp
fwait
adc
jle
dec
sub
enter
sti
sbb
jmp
lods
add
adc
in
cmps
movs
and
adc
loop
iret
inc
xchg
mov
fbld
sub
pop
shl
cmp
daa
lahf
sbb
pop
or
ja
in
(bad)
out
xor
push
daa
out
cmp
adc
sub
mov
sub
pusha
cmp
scas
mov
pop
push
mov
xlat
jmp
fmulp
cmp
add
into
push
clc
and
cmps
(bad)
(bad)
sub
std
push
xchg
jmp
mov
xor
in
out
ret
in
pop
sbb
test
clc
and
ror
lock
cmps
leave
je
mov
(bad)
xor
inc
inc
dec
mov
xor
sti
push
scas
push
xor
push
movs
xchg
leave
loope
jb
icebp
sub
mov
scas
push
popw
std
cmp
jge
cmp
jb
ja
repz
sub
and
ds
mov
jl
test
add
jg
mov
xor
xor
adc
pop
or
mov
pop
cs
lods
(bad)
sahf
mov
sti
stc
dec
mov
jmp
pop
or
mov
mov
jle
inc
pop
cli
mov
xor
push
push
stc
or
fistp
adc
cmp
pop
adc
or
out
add
(bad)
rcl
jnp
mov
jmp
(bad)
cmp
test
xor
jbe
add
sub
pop
and
push
das
mul
fs
inc
nop
fs
scas
stos
jno
mov
scas
cmc
push
jns
cmp
outs
jg
mul
pop
or
das
mov
inc
xchg
mov
dec
icebp
sbb
vcvtsd2si
lock
cwde
push
mov
fisubr
sub
test
inc
xchg
cdq
dec
repz
ss
push
test
sbb
push
sbb
repz
xchg
mov
cmps
je
mov
inc
inc
sub
cmps
push
adc
ds
xchg
cmovb
mov
cdq
fidivr
cdq
nop
popa
adc
test
(bad)
cmp
pop
dec
xor
dec
aad
sub
sub
fwait
pop
or
fstp
dec
dec
xchg
aad
shl
push
repnz
arpl
mov
jmp
xchg
cmp
push
popf
add
rol
xlat
fwait
cmp
sbb
adc
cmp
sahf
inc
push
icebp
mov
stos
xor
mov
mov
mov
cmp
and
pop
repz
sub
jns
(bad)
add
mov
jg
popa
cmp
push
jmp
sub
aam
and
shl
inc
xchg
cmp
or
fnstsw
sar
push
movs
push
sbb
cmps
adc
mov
jl
es
nop
int
mov
pop
or
mov
jnp
mov
or
sbb
clc
out
icebp
pop
and
shl
std
adc
jo
lock
(bad)
or
iret
sub
in
int3
nop
dec
push
add
cmp
push
jmp
mov
sbb
xor
outs
jl
mov
shl
xor
test
fs
pusha
adc
xchg
fsubr
pushf
cmp
out
and
jmp
popa
jmp
movs
pop
pop
(bad)
les
pop
adc
call
cmp
jbe
dec
es
fisubr
cmp
jmp
test
push
mov
cwde
xchg
mov
add
test
inc
adc
ret
inc
push
loopne
cmps
xor
inc
mov
dec
idiv
jmp
sbb
sub
mov
popf
push
fs
in
sahf
je
addr16
ins
xor
imul
xor
arpl
mov
jbe
mov
jecxz
sahf
sub
(bad)
dec
ds
clc
or
loopne
add
and
mov
jmp
test
or
fild
sysenter
out
adc
bound
out
call
sub
imul
mov
popf
ins
lds
xchg
lods
sti
test
shl
or
jae
or
jne
(bad)
push
outs
popa
jb
int3
or
or
clc
cmp
pop
inc
sub
fistp
mov
lea
(bad)
mov
pop
xor
and
dec
in
aam
fwait
aam
stos
jae
jno
loop
popf
mov
mov
data16
gs
mov
xchg
movs
fwait
inc
xchg
lods
mov
int3
std
popa
jbe
dec
frstor
sbb
and
dec
push
int
std
jecxz
sbb
pop
std
mov
mov
cmps
(bad)
movs
and
adc
xchg
add
jno
add
imul
fwait
add
adc
cwde
arpl
aam
add
sti
xor
fiadd
and
xchg
xor
inc
inc
mov
and
jecxz
ss
push
adc
cmp
ror
ficom
cmp
jb
cmp
or
mov
pop
or
jmp
ret
ins
mov
sub
cwde
js
ins
xchg
ds
cmp
dec
jge
jge
push
int
out
adc
js
cmp
fmul
push
cmp
pop
cmc
mov
mov
rol
rcr
call
xchg
push
repz
gs
adc
aad
sahf
push
lods
(bad)
dec
mov
enter
and
(bad)
cld
sbb
push
mov
pop
inc
cli
lods
mov
nop
adc
cli
and
test
sbb
sub
shl
lods
aam
sub
xor
dec
jb
repz
or
dec
jp
inc
sti
xor
cmp
cdq
cdq
jnp
sbb
cmps
dec
dec
pusha
nop
imul
ss
addr16
loope
mov
inc
loopne
xchg
mov
pusha
dec
fisub
xor
and
xor
jl
jne
add
sbb
bound
inc
and
(bad)
and
cmp
rcl
sub
mov
push
pop
outs
xchg
adc
lods
jmp
add
add
jp
nop
retf
mov
push
sbb
and
loope
ret
cmp
das
and
into
je
retf
popa
adc
inc
xchg
or
push
leave
dec
(bad)
cwde
adc
pop
mov
pop
movs
inc
cmc
push
pop
mov
pop
mov
add
cwde
inc
sbb
loopne
mov
lods
sbb
out
mov
sti
push
(bad)
mov
cmp
pop
clc
mov
shl
cmp
jbe
jmp
(bad)
push
adc
jb
jnp
arpl
mov
cmp
(bad)
mul
das
imul
out
mov
adc
dec
dec
lahf
sahf
add
cmc
jb
dec
shl
pop
cmp
in
aaa
das
bound
adc
rol
fcomp
ds
fstp
sub
test
es
cwde
clc
sub
pop
ins
jp
loop
fsub
inc
mov
retf
jb
fcom
xchg
jl
xcrypt-ecb
cmps
leave
test
jns
sub
xchg
rcl
xor
mov
addr16
inc
cmps
ret
pusha
loopne
mov
mov
mov
hlt
sbb
mov
mov
push
data16
dec
mov
push
int
mov
mov
push
cwde
xchg
xchg
jp
xor
popa
ins
ja
inc
(bad)
inc
dec
sar
and
jg
add
dec
push
fcmovnu
xchg
add
ficomp
sub
aam
aam
mov
es
loop
mov
fs
cwde
sub
xor
or
stos
add
sbb
add
mov
mov
sub
adc
imul
push
iret
and
pop
jl
adc
loop
cs
into
xchg
add
push
aas
push
jae
loope
ret
clc
test
cmp
push
push
aaa
mov
loop
sar
xor
push
inc
cmp
mov
mov
mov
repnz
in
mov
cmp
xchg
push
or
es
std
push
inc
xchg
test
jg
and
mov
inc
and
in
int
lea
xor
mov
js
pushf
adc
adc
pop
imul
sbb
stos
adc
stos
mov
bound
(bad)
bound
lahf
rcr
xor
pop
mov
nop
mov
sahf
cmps
jmp
cli
stc
stos
imul
gs
scas
gs
push
leave
sar
test
rol
mov
xchg
leave
xchg
xchg
jl
je
fsub
daa
js
fisttp
aad
sub
cwde
push
pusha
mov
mov
sahf
outs
loopne
in
add
and
je
je
loopne
mov
mov
(bad)
add
es
clc
cmps
iret
mov
scas
jle
sbb
xlat
pop
sbb
pushf
mov
nop
test
inc
jecxz
cwde
(bad)
jle
or
xor
sbb
jp
cmps
idiv
xchg
dec
gs
jae
test
cmc
xlat
adc
xor
scas
daa
and
mov
into
(bad)
xlat
lds
arpl
and
xchg
mov
sub
iret
pusha
fcomp
xchg
mov
repz
xchg
sub
(bad)
lock
pusha
sbb
ds
mov
sbb
mov
mov
xchg
je
ror
in
dec
loopne
enter
mov
lock
add
(bad)
rcr
xor
sub
pop
jecxz
xchg
mov
mov
and
inc
(bad)
retf
ficom
sbb
out
push
sbb
out
jmp
jns
out
and
pop
cmp
pusha
mov
push
scas
xor
popf
rcl
push
push
mov
clc
sahf
cs
ins
jmp
inc
push
inc
add
jnp
mov
ret
aad
(bad)
cld
dec
add
sti
or
rol
add
lds
lods
retf
mov
sbb
gs
cdq
add
inc
push
sbb
iret
push
rcr
inc
jge
fsubr
movs
fldpi
es
je
jecxz
jmp
dec
cmp
jo
stos
pushf
arpl
daa
scas
inc
arpl
mov
out
cmps
mov
xchg
or
adc
loopne
sbb
movs
popa
mov
inc
(bad)
lods
xor
ins
push
in
ret
repnz
push
icebp
push
lods
shl
sbb
scas
jl
xchg
mov
ins
out
jo
sahf
add
ins
cwde
xor
cdq
aas
adc
adc
inc
push
jg
jne
out
mov
fs
ret
fcmovnb
out
(bad)
and
xchg
(bad)
jp
adc
and
xor
mov
lock
cli
sbb
popw
jle
ret
pop
fwait
repnz
xor
lods
out
inc
and
call
pushf
std
dec
and
sub
jmp
push
jae
add
sbb
cs
fldenv
xor
mov
iret
fdiv
and
cli
cwde
pop
cmp
dec
shr
xchg
mov
repz
xchg
ins
cmps
bound
jbe
inc
adc
inc
or
cmp
inc
sub
push
mov
outs
jle
fadd
ror
fadd
and
cs
push
jg
sar
mov
ins
xor
push
dec
xchg
rol
sub
popa
in
adc
in
inc
jmp
and
mov
push
adc
push
in
popa
sbb
(bad)
jbe
lods
push
cmc
outs
cmovno
xchg
jmp
stc
sbb
out
test
sbb
mov
mov
dec
push
imul
fld
mov
out
mov
(bad)
int
xchg
sub
jno
add
adc
cmps
int3
jp
ins
(bad)
repz
pop
sbb
and
jge
nop
xchg
fadd
add
inc
iret
shl
mov
pop
iret
iret
mov
sub
lahf
xor
xchg
or
pop
aam
out
adc
xlat
pop
cmp
dec
mov
inc
sub
push
xchg
retf
ret
xchg
xchg
fcom
rol
pop
stos
push
mov
stos
iret
xor
or
xor
xor
push
adc
loop
add
ret
out
and
sbb
pusha
(bad)
xor
add
or
and
or
sbb
sbb
xor
inc
push
mov
sbb
pop
ss
or
push
xor
dec
jb
loope
jo
inc
dec
pop
mov
cmps
inc
add
in
aad
les
add
inc
add
into
loopne
add
mov
and
mov
inc
push
adc
or
popf
mov
popf
retf
sbb
popa
popf
adc
push
gs
sbb
xor
mov
outs
add
sbb
adc
lods
in
pop
std
add
out
xor
repz
stos
cmp
mov
movs
xchg
sti
fidiv
xor
dec
or
jmp
js
std
imul
add
pop
mov
aad
or
inc
and
push
dec
sbb
xchg
pushf
and
wrmsr
cli
pop
rcl
mov
retf
gs
jb
stos
mov
push
lock
sub
mov
dec
aad
int
pop
ins
adc
vpmuludq
movs
jns
cmp
jle
pop
xchg
ja
dec
in
pop
loopne
retf
sbb
pop
push
mov
xchg
and
adc
js
inc
test
shl
push
fst
aam
push
leave
dec
xor
or
arpl
mov
jo
mov
in
sbb
je
cmp
push
and
or
adc
push
mov
je
into
cmp
in
or
mov
cmp
les
cmp
hlt
nop
sub
movs
call
lods
mov
add
jno
push
pop
add
mov
ja
mov
in
mov
sbb
fwait
fs
iret
cmp
je
in
pop
retf
inc
das
shl
pop
push
lock
cs
popa
lods
or
mov
add
jns
hlt
aad
loop
mov
mov
adc
js
xchg
imul
and
mov
mov
hlt
mov
icebp
cwde
out
add
cmps
aam
or
mov
mov
lahf
pop
mov
add
loopne
mov
stc
xchg
lds
pop
(bad)
pop
in
sbb
jne
in
mov
cwde
test
les
jbe
push
cmp
sbb
and
sbb
dec
scas
setbe
jmp
loope
dec
sahf
pop
mov
mov
jg
and
(bad)
ret
cmp
or
sar
(bad)
jecxz
getsec
aaa
xchg
bnd
into
inc
cli
sti
sub
retf
sub
sbb
in
pusha
mov
jl
stos
push
shr
sub
(bad)
frstor
loope
pop
or
rcr
std
mov
push
fstp
mov
movs
into
and
ror
add
inc
(bad)
pop
cli
adc
outs
xchg
cmc
fs
hlt
in
outs
sub
stc
or
sub
fnstsw
fsub
mov
pop
pusha
mov
lea
xor
ins
push
mov
push
jmp
add
dec
sub
ins
push
dec
mov
mov
mov
add
and
add
sbb
scas
dec
stos
add
test
mov
cdq
in
xor
inc
test
mov
and
adc
es
cmp
adc
add
inc
ret
push
(bad)
nop
mov
add
loope
mov
adc
inc
add
add
xchg
and
in
xchg
inc
enter
icebp
mov
and
adc
cwde
imul
fcom
call
pusha
or
sbb
sub
ds
sub
xchg
inc
repnz
sub
add
pop
pop
mov
sar
iret
adc
fnsave
xchg
movsx
lahf
sar
adc
mov
sahf
pop
pop
scas
out
jecxz
jmp
pop
scas
rol
mov
fwait
aaa
ret
out
or
test
stos
mov
add
lods
xchg
xchg
and
jle
xor
call
packuswb
(bad)
in
cdq
pop
retf
js
mov
test
push
xor
xor
mov
cmps
stos
retf
inc
jnp
sub
and
je
xchg
add
jbe
mov
xchg
call
mov
rol
or
pusha
test
or
data16
mov
int
and
cmp
xchg
daa
je
outs
xchg
mov
out
loopne
xor
mov
xchg
cmp
xor
call
mov
lds
test
pop
or
inc
or
ds
mov
pop
sub
rol
dec
addr16
xchg
xor
fisubr
cmp
cmp
dec
icebp
xchg
mov
mov
inc
inc
sahf
sbb
jecxz
mov
in
push
sbb
dec
push
pushf
rol
mov
aad
loope
xchg
jno
push
or
scas
movs
dec
mov
or
sub
mov
je
(bad)
jl
inc
nop
xchg
xor
push
in
xchg
push
or
pop
or
in
adc
adc
add
arpl
add
or
or
inc
shl
and
mov
push
test
clc
inc
fsub
push
xor
fiadd
adc
inc
pusha
cmp
shl
mov
and
dec
jo
les
add
jno
mov
stc
nop
aad
adc
or
dec
or
and
js
adc
rol
or
rcr
(bad)
adc
or
and
cmp
and
cmp
or
lock
push
gs
xchg
or
mul
fwait
rcl
adc
je
push
mov
push
imul
cli
xchg
sbb
aam
jg
push
cdq
movs
and
jmp
inc
(bad)
dec
gs
mov
mov
repnz
dec
cmc
popa
mov
pop
jns
cmps
lods
jle
mov
jmp
mov
and
mov
sar
aam
mov
cmc
dec
push
mov
rcl
cld
call
jg
cmc
cmp
sbb
jne
jp
(bad)
jge
lea
cmc
mov
std
lea
mov
(bad)
cmp
mov
inc
cli
cli
sbb
sbb
ins
hlt
scas
add
jmp
hlt
fnsave
and
sbb
xlat
adc
call
or
mov
add
cld
nop
call
sbb
fistp
inc
sub
mov
rcl
ins
loope
(bad)
outs
xchg
push
stos
add
xlat
fdivrp
jbe
out
outs
mov
es
pop
pop
and
in
inc
enter
int3
out
stc
xchg
inc
aad
adc
aas
daa
mov
pop
push
add
scas
outs
call
or
out
adc
stc
jae
add
xor
push
inc
sub
adc
or
push
pop
push
inc
and
add
mov
scas
mov
or
or
sub
push
xor
test
or
mov
mov
rol
adc
dec
scas
push
xchg
or
xor
sub
or
movs
lea
ret
jle
mul
sub
sbb
jo
clc
adc
inc
or
mov
cmp
in
nop
pop
loope
and
xchg
push
adc
jne
add
adc
movs
mov
and
xor
push
ins
push
xchg
or
sbb
cmp
ss
jnp
push
jo
lods
(bad)
cmc
push
fwait
push
addr16
sar
(bad)
ins
iret
lock
jne
loop
jb
xor
push
ss
pusha
sub
dec
cdq
mov
clc
outs
sub
inc
push
mov
repnz
ret
aam
add
je
pop
cmp
cs
test
scas
movs
inc
mov
(bad)
mov
xchg
fs
ficomp
jae
adc
mov
test
mov
aas
push
pop
and
out
jmp
sar
das
imul
jae
aad
mov
inc
std
call
push
sub
mov
mov
dec
pop
mov
dec
mov
cmp
sar
push
and
mov
or
aas
popa
inc
mov
hlt
or
lds
test
sbb
dec
xchg
pusha
lods
inc
inc
loope
cmp
ror
popf
xchg
dec
outs
cwde
std
test
rol
popf
imul
mov
mov
push
popf
mov
jns
(bad)
sbb
jl
dec
jg
popf
sbb
xchg
jmp
push
(bad)
hlt
or
push
jmp
mov
mov
mov
sar
jb
repnz
mov
in
lahf
scas
dec
pop
into
push
and
je
cmp
cmp
dec
nop
jmp
cli
xor
popa
sbb
or
sbb
add
int
xor
icebp
pop
inc
mov
ins
shl
outs
loopne
adc
mov
enter
cmp
(bad)
popf
shl
(bad)
or
or
mov
out
lods
mov
stc
and
dec
cs
jp
inc
out
test
stos
xor
scas
xchg
mov
arpl
sbb
outs
rol
cmp
lock
ins
scas
(bad)
cld
push
pop
outs
sub
xor
or
sub
or
movs
adc
push
mov
sub
push
push
ja
shr
lahf
adc
cmp
and
into
inc
imul
dec
mov
sar
xor
add
bound
dec
rcr
iret
outs
jmp
ret
dec
push
out
repnz
seta
add
jbe
push
imul
loopne
inc
pop
mov
pop
pcmpeqb
int3
jle
mov
in
xor
mov
dec
jge
push
cmp
sub
xchg
call
je
dec
jmp
lahf
cmp
retf
ins
cwde
or
cwde
lods
jge
(bad)
aas
mov
inc
neg
mov
test
and
xor
inc
in
popa
jmp
movaps
rcr
sbb
shl
loop
(bad)
cmovne
mov
mov
xchg
add
(bad)
push
adc
pop
lods
in
cmp
jbe
adc
jbe
std
and
out
sbb
pop
rol
retf
shr
bound
cmp
clc
repnz
test
pop
retf
(bad)
or
(bad)
push
xor
jg
jnp
xor
imul
in
xor
jne
cmps
adc
aam
stos
inc
pop
retf
in
pop
mov
xchg
mov
jae
addr16
cmc
sbb
jmp
jp
movs
stos
push
into
dec
dec
call
mov
sbb
int
mov
cmc
xchg
in
sbb
add
leave
jb
iret
pop
pusha
push
ret
jmp
adc
imul
cmp
das
(bad)
es
and
nop
mov
xchg
adc
retf
push
rol
jbe
bound
ret
imul
sbb
repnz
sbb
jne
pop
jno
mov
(bad)
je
rcl
xor
mov
cmp
pop
add
add
into
cs
fst
xchg
cmp
mov
mov
mov
sbb
or
pop
sub
and
inc
pop
test
sbb
xchg
ins
inc
outs
in
xor
sub
sub
mov
or
rcl
or
mov
mov
cli
lods
jb
test
push
mov
inc
sbb
inc
inc
loopne
or
add
not
inc
gs
ror
test
adc
and
aad
test
pop
loope
push
sub
(bad)
lods
les
inc
loopne
sbb
xchg
inc
clc
adc
je
sbb
jne
test
dec
rcl
ret
sub
xchg
rsm
outs
adc
(bad)
adc
sbb
(bad)
(bad)
xor
xor
inc
cwde
xchg
xchg
outs
push
lods
and
fiadd
test
dec
loope
ficom
mul
repnz
push
cld
or
lods
inc
das
movs
shr
jl
adc
sbb
imul
pop
xor
mov
(bad)
jmp
push
fidivr
pop
iret
pop
jno
mov
daa
dec
mov
cmp
xchg
pop
out
adc
sub
cli
pusha
push
(bad)
(bad)
mov
fdiv
int3
test
inc
sldt
dec
dec
in
push
loope
ds
fistp
(bad)
add
test
sub
test
pop
jns
cmp
(bad)
pusha
rol
addr16
mov
add
mov
cmp
sub
cwde
sub
sbb
mov
ficomp
pop
xchg
repz
loope
fwait
stos
mov
inc
jo
inc
leave
sub
and
sar
jo
mov
adc
mov
mov
pusha
and
inc
(bad)
or
nop
sbb
aaa
xor
outs
cmp
sbb
jp
pop
push
jbe
sar
call
dec
pusha
cdq
add
and
loopne
mov
or
sysexit
add
aas
xor
test
rol
xchg
and
pop
movs
push
shl
mov
sbb
adc
sbb
popa
inc
jmp
pop
sbb
call
cmc
cmp
adc
cmp
sbb
and
sti
add
dec
movs
clc
jns
sub
xchg
dec
dec
ds
push
cmps
int
jo
dec
add
es
cmc
cmps
inc
test
and
stos
mov
(bad)
sbb
fs
sbb
dec
scas
das
cmp
arpl
iret
inc
xlat
std
mov
mov
and
push
jecxz
cmp
gs
aam
mov
xchg
shl
mov
push
mov
stos
fcos
jl
mov
pop
cdq
inc
les
mov
push
dec
push
in
jle
jp
push
stc
lock
test
push
pop
loopne
leave
push
imul
pop
in
imul
push
sahf
outs
pop
adc
cmps
ins
popf
scas
or
push
dec
cdq
icebp
fisubr
pop
and
dec
inc
rcr
xor
dec
or
aas
xchg
xchg
xchg
cmps
jae
inc
ret
ret
shl
das
js
pusha
pop
xor
jns
xchg
xchg
add
xchg
inc
mov
outs
cwde
dec
xchg
pop
inc
addr16
jbe
(bad)
xchg
push
test
repnz
popf
jmp
fnstenv
adc
jle
daa
aaa
fidivr
jbe
scas
mov
add
stos
bsr
and
cmps
repnz
adc
daa
adc
cmp
dec
rol
and
ss
pop
adc
retf
xchg
inc
jno
cmp
int
test
int
push
fsub
pop
adc
jmp
cmps
stos
push
xlat
pop
ds
cmps
movs
je
jecxz
test
lods
or
inc
lds
fld
dec
ror
inc
and
mov
inc
imul
mov
xchg
iret
xchg
mov
jne
clc
aas
inc
out
xor
inc
jae
shl
add
out
cmp
and
shr
imul
retf
xor
adc
daa
out
cs
add
adc
inc
pop
sub
sub
sub
leave
jno
lock
inc
cmp
xchg
cmp
popa
cmc
(bad)
fdiv
cmc
cmp
jmp
and
dec
cmp
jnp
lods
test
rol
add
ds
sbb
push
les
sub
scas
sti
ret
(bad)
cld
xchg
mov
iret
or
test
and
mov
fcomp
or
xchg
fidiv
(bad)
jae
fistp
adc
pop
ins
and
pop
nop
xchg
push
xchg
mov
lock
push
jbe
stos
push
aaa
push
pop
lock
ds
adc
dec
gs
jae
das
xor
hlt
pop
push
inc
sar
pop
mov
push
sbb
mov
ins
je
jnp
pushf
cs
nop
adc
cdq
jb
ror
aad
cmp
sbb
xor
and
inc
pop
test
or
pop
mov
mov
jge
shr
sbb
mov
cmp
loope
std
ja
rcl
mov
mov
pusha
adc
fnsave
addr16
push
retf
sbb
loope
sbb
ds
xor
lahf
sahf
or
cmp
fwait
push
sbb
pusha
outs
retf
inc
loopne
mov
enter
in
xor
adc
xchg
ret
add
das
daa
pusha
into
jns
outs
fs
xor
xchg
in
cmp
outs
shr
pop
pop
inc
jbe
retf
fsubr
sti
push
sar
arpl
sub
cmp
cwde
movs
hlt
add
lods
cld
cwde
ficomp
retf
inc
ficomp
fst
cmp
mov
sub
in
push
fisttp
mov
pop
pop
xor
fdivr
(bad)
jno
fidivr
xchg
pop
(bad)
sti
sahf
push
inc
test
dec
lock
ins
aaa
popa
jle
push
das
scas
adc
and
xor
dec
pop
leave
sub
call
lods
mov
lods
imul
or
repz
push
std
ret
in
scas
rcl
xchg
xchg
cwde
pop
add
leave
sub
shr
sub
and
and
jge
movs
or
adc
lahf
aad
sub
popa
dec
jne
mov
(bad)
popf
pop
dec
xchg
mov
jge
cdq
std
(bad)
shr
les
inc
cmps
pop
jmp
mov
dec
test
push
inc
int
mul
out
inc
mov
div
lahf
mov
(bad)
repz
push
jnp
cmp
xchg
push
adc
adc
je
cmps
sub
xchg
xor
(bad)
and
mov
aaa
popf
inc
hlt
pop
fadd
push
daa
scas
mov
xor
mov
add
stc
and
test
ret
ds
mov
mov
cmps
push
cdq
fsubp
test
xor
jge
mov
icebp
test
(bad)
push
push
pop
sbb
pop
lock
fld
or
xchg
out
mov
cmp
sbb
push
fcmovbe
aad
leave
cmp
adc
sub
in
xor
cmp
xor
cmp
loopne
cmp
in
adc
mov
aaa
cmp
inc
leave
ucomiss
push
dec
dec
ins
(bad)
aas
or
out
mov
test
cs
shl
or
mov
mov
add
test
jne
mov
pop
aas
icebp
jp
dec
data16
xchg
mov
iret
outs
sahf
int3
lods
stos
test
xchg
int
addr16
bound
mov
std
inc
pop
and
xchg
xor
(bad)
jl
push
(bad)
clc
pop
mov
sub
pop
repz
pop
dec
adc
mov
or
popa
push
aaa
fidiv
or
push
lock
cdq
and
(bad)
leave
ror
jns
lss
in
shr
inc
mov
mov
xchg
test
leave
daa
inc
sbb
lds
sti
jo
hlt
pop
aad
jge
loop
inc
xchg
pop
pop
ret
in
scas
ins
mov
mov
cli
(bad)
sbb
xchg
pusha
aam
xor
sbb
jb
scas
fwait
mov
shl
stos
out
inc
cmp
push
repz
xchg
data16
repz
add
fistp
pop
sti
aad
mov
in
cmp
fldenv
stos
movs
cmc
popf
xchg
mov
xor
shl
icebp
jnp
lea
repnz
push
sti
stos
test
(bad)
dec
cmps
inc
xchg
jle
sub
sbb
and
int3
ins
int3
jmp
add
gs
mov
jno
inc
cmc
or
adc
mov
xchg
aaa
jns
sbb
retf
div
lods
push
xchg
in
mov
sub
inc
cmp
popa
aas
(bad)
cmp
mov
aaa
sub
mov
aas
js
fbstp
sbb
vpcmpgtw
jge
add
and
sbb
test
out
cmp
data16
retf
cdq
mov
lock
and
popf
mov
rol
std
cmps
xchg
and
hlt
mov
mov
cmp
popa
mov
retf
pop
cmp
(bad)
repnz
jmp
jle
and
jl
adc
mov
add
and
push
mov
retf
push
aam
add
jne
mov
mov
mov
push
jb
scas
in
dec
call
xchg
ror
cs
add
mov
div
and
xor
movs
mov
ficom
push
or
xchg
inc
dec
sub
dec
pop
(bad)
rcr
shr
jmp
pop
mov
repnz
dec
gs
push
dec
popa
jge
or
add
dec
sub
xor
pusha
jp
idiv
cmp
dec
in
data16
pop
or
sbb
outs
push
adc
pop
ins
stos
xlat
dec
ins
mov
aas
mov
xchg
daa
jg
jae
mov
xchg
mov
pop
mov
(bad)
lods
fsubr
jo
add
xor
mov
jg
sub
loop
or
push
fwait
xor
dec
stos
into
or
mov
pop
mov
ficom
xchg
jmp
fst
sub
adc
push
popa
pushf
int
iret
jae
les
and
retf
xchg
jmp
rcr
push
test
push
xor
aas
out
in
rol
mov
push
sbb
rcr
lds
adc
xchg
dec
lahf
cwde
in
cmps
cmp
cmc
pop
or
sub
push
mov
shl
sbb
out
dec
mov
je
loop
and
sub
mov
mov
mov
or
fistp
shl
cli
dec
cmp
xor
(bad)
sub
sbb
gs
out
cmp
aaa
aas
cmc
dec
retf
sbb
iret
(bad)
fs
push
jp
aas
lods
push
aaa
pop
fwait
psubusw
gs
pop
popa
mov
test
or
push
xor
dec
jmp
adc
in
shr
push
shl
push
mov
xchg
neg
repz
add
pushf
popf
add
jo
int3
(bad)
adc
stc
(bad)
inc
repz
inc
out
(bad)
jnp
xchg
push
arpl
cmp
retf
mov
scas
sub
daa
push
mov
xor
lods
sar
mov
arpl
(bad)
sbb
inc
sar
js
xchg
dec
adc
adc
mov
push
sub
add
cmc
xor
xor
dec
mov
hlt
mov
inc
ja
adc
test
cmps
ins
pop
lea
push
in
dec
xchg
mov
outs
sub
jns
clc
sbb
jns
shr
fwait
push
test
sub
push
scas
sub
mov
jne
mov
dec
out
pusha
lock
cdq
cmp
lods
es
cmp
das
stos
lods
jmp
push
data16
xchg
cmp
cld
mov
mov
add
fistp
add
shl
add
push
or
dec
sbb
xchg
ret
scas
mov
push
dec
jmp
(bad)
ins
mov
xchg
cmp
sbb
lahf
jle
in
pop
xchg
xchg
loope
dec
scas
les
jnp
or
push
mov
loopne
add
ror
test
adc
clc
cmc
push
push
and
xor
out
inc
shl
add
jmp
out
enter
push
nop
push
adc
dec
cld
mov
cmps
scas
clc
fstcw
retf
in
add
(bad)
(bad)
shl
push
adc
int
cmp
dec
adc
sbb
js
jg
rcl
cmp
bound
rcr
nop
loop
dec
pop
push
xor
dec
mov
or
lds
dec
and
jae
mov
dec
cwde
daa
imul
aad
sbb
pop
sub
popf
adc
and
out
xchg
cwde
in
ja
cs
pusha
mov
test
je
mov
daa
dec
inc
add
test
cs
dec
adc
jae
mov
scas
mov
xor
es
pop
and
inc
mov
add
mov
in
and
xchg
mov
mov
(bad)
xor
xchg
fld
js
xchg
xchg
scas
push
gs
push
or
dec
test
mov
lock
jb
stos
shl
mov
mov
and
adc
jecxz
xor
(bad)
leave
add
add
stc
aaa
push
add
movs
add
add
push
je
pop
sbb
xchg
and
ret
mov
jnp
xchg
pslld
xchg
jmp
push
fst
xchg
sub
(bad)
inc
push
popf
lahf
(bad)
imul
jo
std
add
dec
fs
add
or
icebp
into
mov
push
xchg
mov
popa
dec
add
xor
mov
dec
xor
jmp
pusha
test
ror
push
xor
push
push
repnz
movs
test
ins
mov
mov
push
mov
mov
push
mov
sub
sbb
cmp
xorps
inc
jae
movs
imul
ins
ficom
xor
not
inc
cli
ins
push
pop
inc
fnstsw
test
stc
nop
test
ret
sub
dec
fsubr
repnz
mov
cmp
or
fidiv
repz
fimul
jb
je
movs
or
and
mov
enter
retf
sub
and
lea
and
or
push
lods
mov
ret
cmp
sbb
sar
aad
cmp
fisub
adc
pop
mov
leave
mov
jle
retf
addr16
addr16
push
daa
arpl
add
inc
mov
test
xlat
cli
sub
sbb
pop
adc
xor
hlt
or
and
sahf
dec
imul
add
fwait
mov
and
sbb
push
mov
sahf
fild
icebp
pop
(bad)
pop
shr
mov
pop
adc
pop
int3
arpl
sub
push
aas
fild
pop
inc
mov
aas
stos
(bad)
pop
das
shr
lahf
mov
pusha
cwde
int
popa
or
imul
leave
fldenv
xchg
stos
xchg
mov
mov
fidivr
cld
push
in
inc
and
in
jp
fwait
xchg
mov
cmp
lea
stc
es
mov
pop
retf
inc
jl
ins
enter
inc
jo
xchg
xchg
popf
(bad)
cmp
or
inc
test
fsub
cmp
jmp
arpl
sub
(bad)
and
sbb
push
enter
das
out
movs
push
add
shl
xchg
mov
movs
jg
adc
mov
ja
(bad)
cmc
sub
add
inc
movs
pop
jl
push
xor
mov
xchg
aaa
mov
cmp
mov
enter
out
aas
or
inc
cmp
outs
call
dec
pop
mov
cmp
push
or
and
inc
fadd
mov
pop
adc
out
ret
xchg
dec
dec
and
adc
loope
stos
test
sbb
iret
enter
jae
mov
gs
or
sbb
test
scas
add
repnz
pop
jecxz
xlat
mov
out
pop
aad
(bad)
retf
sahf
loopne
and
leave
inc
dec
fisttp
mov
imul
adc
xchg
leave
mov
mov
daa
mov
cmp
dec
cld
dec
cmp
push
pop
lods
jecxz
pop
inc
push
sbb
sar
push
les
dec
sbb
cld
pop
jns
out
cmp
aam
mov
and
xchg
movs
lods
add
xchg
lea
inc
inc
and
cmps
xchg
dec
add
mov
mov
pusha
mov
jg
sbb
sbb
mov
out
push
repz
cmps
mov
arpl
push
bound
sub
ins
sub
mov
cs
scas
sub
xor
jge
push
ins
ret
jo
sub
mov
ins
in
add
fistp
sub
add
mov
cs
(bad)
in
cmp
iret
mov
scas
div
scas
cmp
test
mov
fstp
pop
out
pop
or
sti
pushf
and
xchg
imul
jle
loope
repz
dec
fsub
jmp
mov
stos
les
pop
ret
cmp
adc
push
or
cwde
jne
cmp
ret
cmp
xor
and
scas
push
xchg
lods
fisub
sbb
(bad)
jg
cmp
cs
and
jb
out
dec
push
repz
sti
test
jo
mov
xor
pop
pop
ret
das
sti
ret
daa
xchg
test
mov
nop
pop
pop
push
jmp
scas
sub
mov
out
jp
sbb
out
lahf
popf
xchg
mov
fisubr
in
adc
lahf
sbb
mov
mov
cmc
push
jb
loop
pop
cmps
popf
sbb
push
xchg
or
mov
adc
adc
ins
sti
and
inc
push
mov
fidivr
in
push
sub
inc
data16
or
call
test
lods
pop
xlat
jmp
push
idiv
int
test
fwait
sub
(bad)
pop
(bad)
mov
cmc
test
rol
sbb
and
cmp
int3
into
mov
dec
sahf
dec
jmp
pop
mov
adc
mov
pop
or
cdq
(bad)
sbb
add
inc
outs
frstor
out
xor
pop
adc
loope
call
mov
sbb
jecxz
(bad)
mov
pop
mov
sub
cmp
call
mov
(bad)
call
jae
out
pop
mov
ja
sahf
or
gs
mov
sub
and
jbe
daa
push
adc
loop
repz
jae
mov
mov
mov
test
mov
lds
mov
dec
repnz
mov
adc
jge
mov
adc
xor
frstpm(287
cli
sar
lahf
into
lods
loope
sub
fimul
mov
gs
and
outs
shr
fwait
sbb
int3
dec
inc
out
dec
shr
sbb
in
mov
or
mov
(bad)
jmp
retf
adc
mov
je
fild
mov
repnz
jmp
mov
mov
loope
add
and
inc
xor
add
pushf
mov
ins
call
ins
adc
cmp
jmp
cmps
adc
or
push
inc
sahf
push
push
out
imul
stos
add
sbb
je
pop
pop
call
aam
or
out
sub
jns
pop
imul
mov
pop
iret
je
adc
das
mov
dec
mov
adc
xchg
cs
xor
jge
shl
jg
jno
aam
xchg
adc
pop
call
cmp
stc
jg
mov
jne
ins
xor
loopne
mov
xchg
mov
push
push
push
mov
jnp
ficomp
test
jge
in
in
pop
stos
jb
outs
pop
arpl
hlt
dec
inc
out
mov
popa
out
push
push
cs
jb
ror
xchg
ds
and
out
or
shr
scas
movs
push
jmp
pop
imul
mov
sbb
enter
inc
sub
lahf
lahf
in
popa
(bad)
sti
fcom
lock
dec
and
mov
pop
or
xchg
in
and
(bad)
in
call
dec
add
xor
ficomp
mov
dec
dec
mov
add
ret
mov
(bad)
aam
scas
or
ds
(bad)
mov
and
pop
fwait
cwde
add
test
popa
cmp
push
sbb
inc
jecxz
out
ror
arpl
sti
nop
jno
cmp
pop
push
push
xor
test
arpl
ss
jp
cli
mov
test
mov
sbb
std
dec
xchg
mov
add
pop
push
and
and
es
test
ret
pushf
das
rol
pop
call
in
aas
(bad)
mov
pushf
and
retf
fidiv
fdivr
loop
ins
inc
in
xor
jae
test
or
frstor
int3
not
adc
push
push
stos
inc
sbb
jp
mov
fnstsw
lock
pop
outs
sbb
jp
mov
out
imul
xchg
stc
push
test
adc
dec
ins
call
sub
out
pop
(bad)
movs
add
rcl
mov
add
jle
cmp
cwde
jmp
cmp
xchg
jg
repnz
retf
daa
xchg
xchg
in
mov
lock
lds
push
cmp
and
je
inc
test
sub
lea
adc
mov
mov
bound
call
add
clc
mov
mov
test
jge
fsub
call
(bad)
cmps
and
sub
and
inc
jmp
jle
mov
retf
push
test
aas
movs
mov
test
out
rol
push
and
and
add
push
lods
fst
fsubr
mov
xchg
cmp
outs
push
or
push
xchg
xchg
xor
(bad)
and
push
xlat
sbb
fcom
repz
cli
ins
mov
movs
nop
pusha
sbb
jb
pop
dec
les
ds
test
(bad)
jne
icebp
rol
push
aas
push
jne
ss
movs
or
cmps
add
aas
pop
jp
ja
mov
lahf
(bad)
jge
cwde
out
pop
(bad)
add
repnz
call
std
or
ds
sub
cwde
sub
mov
scas
or
jnp
pop
mov
icebp
mov
push
ins
icebp
icebp
push
jnp
pop
lahf
inc
pop
fcomp
dec
push
retf
cmp
retf
gs
mov
out
mov
popf
(bad)
mov
adc
pop
ja
push
cmp
sub
sub
fcom
lods
js
and
in
call
addr16
shl
int
shr
jle
sbb
pop
sub
ins
imul
adc
aaa
jmp
ret
cmc
sub
mov
cmp
ins
repz
jmp
cmc
out
mov
fcmove
ins
loope
jne
(bad)
popa
scas
into
adc
cmc
shl
pop
jp
addr16
push
cmc
les
xchg
cld
jmp
daa
aad
dec
seto
lea
js
jl
shl
cmps
ficomp
pop
cmps
(bad)
je
add
rcr
aad
push
push
fldenv
out
int
fnsave
mov
push
imul
(bad)
add
stc
retf
xor
and
jno
cmove
std
(bad)
sbb
sbb
lods
ror
jmp
push
add
lock
push
or
adc
rcr
nop
mov
test
xor
jns
fsub
das
fdivr
fiadd
mov
aam
in
(bad)
sysenter
outs
call
jg
(bad)
scas
xchg
pop
loope
cmp
dec
xlat
xor
dec
xchg
sub
sahf
add
std
jae
jnp
pop
dec
or
test
loope
repnz
or
jge
pusha
xor
icebp
jp
cmp
push
ret
aad
jge
and
ins
fisttp
aas
pop
rcl
mov
sahf
sub
xor
in
mov
in
sbb
leave
cwde
into
jbe
cmp
push
mov
lods
pop
adc
ret
mov
es
cmp
jmp
pop
pop
js
and
or
mov
repz
jge
inc
inc
ds
out
sub
sub
mov
inc
dec
mov
sbb
outs
(bad)
scas
inc
imul
idiv
fisttp
xchg
std
loop
sbb
sub
js
loop
jne
mov
xchg
jne
(bad)
pop
jae
dec
arpl
xor
rcr
frstor
mul
dec
mov
int
call
pop
pop
adc
mov
and
and
jnp
outs
mov
adc
lds
jmp
fstp
sbb
inc
ja
mov
icebp
cs
mov
shr
push
(bad)
pop
test
jns
out
retf
sbb
shl
and
cs
cli
in
sub
icebp
adc
add
mov
push
cmp
loope
loope
or
pusha
jmp
cmp
mov
mov
cwde
retf
nop
(bad)
popa
outs
(bad)
(bad)
push
sbb
fstp
push
test
dec
outs
push
mov
jmp
rcl
push
mov
cmp
dec
jp
inc
cmp
out
mov
mov
sub
mov
fldcw
loop
sub
(bad)
int3
ins
cwde
sub
jmp
push
(bad)
imul
xchg
in
out
jbe
iret
jo
aaa
inc
sub
hlt
out
inc
xchg
imul
movs
inc
lock
jnp
xchg
ja
cdq
mov
int
mov
in
test
mov
pop
mov
push
push
push
cmp
push
movs
out
loope
pop
in
and
aas
sub
sbb
add
dec
xchg
cmps
js
ins
add
jp
stos
xchg
mov
adc
add
into
test
sub
repnz
test
aam
dec
js
rcr
ret
push
retf
and
push
mov
xchg
mov
mov
imul
xchg
mov
cs
add
ret
or
dec
repz
(bad)
jmp
arpl
ja
popf
lods
in
cmp
dec
(bad)
dec
mov
ins
das
add
push
stos
xchg
test
mov
and
ret
sar
inc
cmc
or
scas
div
or
mov
sub
xchg
gs
pushf
pusha
ds
pop
inc
mov
ja
out
push
dec
aad
xchg
or
bound
out
mov
adc
mov
push
inc
inc
call
jl
aam
ret
push
ins
test
push
dec
out
movs
js
dec
mov
repnz
mov
cmps
mov
ss
and
(bad)
and
pop
mov
pop
mov
in
dec
mov
ins
aaa
lahf
les
pop
and
jno
push
push
dec
mov
xor
ja
sub
int
sbb
push
pop
and
lock
adc
mov
popa
sub
mov
hlt
mov
std
or
mov
cmp
xor
leave
lahf
mov
sbb
push
fadd
movs
mov
fisttp
xlat
and
mov
das
mov
push
jp
xor
shr
movs
retf
vmovq
js
add
sti
shl
mov
xchg
aad
inc
sar
inc
push
gs
xchg
jo
jbe
lea
dec
mov
cld
stos
std
(bad)
cmp
popf
add
pop
scas
jne
fwait
dec
lds
push
lea
cvtps2pi
fld
pop
pushf
inc
adc
cmp
push
adc
imul
fisubr
sbb
repnz
test
and
pop
sti
mov
mov
neg
dec
sar
push
adc
loopne
push
cmp
mov
xchg
mov
clc
mov
mov
inc
sub
fild
dec
add
add
cmps
add
lock
and
es
js
add
add
int
xor
or
(bad)
fs
nop
xor
or
or
mov
push
stos
push
outs
scas
es
add
call
ja
xchg
std
bound
out
out
(bad)
out
sbb
add
cmp
les
ror
pop
push
jo
or
and
sbb
push
push
jns
into
inc
sbb
or
repz
sti
mov
loopne
push
add
mov
add
add
mov
jne
inc
imul
or
nop
aas
lds
and
xchg
jmp
cmp
js
push
xchg
jp
fisub
test
icebp
pop
and
mov
mov
pop
ins
jbe
(bad)
call
repz
(bad)
cld
mov
sub
push
sub
in
xchg
mov
add
jge
sub
xchg
jecxz
popf
mov
jno
xor
test
pop
xchg
inc
imul
jno
adc
pop
ffree
jmp
daa
sub
cmp
enter
jb
cmp
xor
xor
xchg
sbb
mov
(bad)
scas
arpl
push
sub
scas
sti
icebp
sub
add
(bad)
aas
cmp
stc
fnstenv
adc
add
add
push
out
mov
nop
mov
mov
or
xor
lock
ror
iret
inc
imul
es
add
dec
aad
sti
xlat
fisub
repnz
push
sub
repz
arpl
or
(bad)
mov
sbb
mov
je
cmp
and
inc
push
inc
fstp
push
fs
cwde
and
cmc
and
xchg
dec
push
mov
add
mov
sbb
fisub
push
mov
cmp
pop
push
and
cmp
mov
mov
cmp
jg
icebp
push
cmps
dec
imul
enter
xlat
cli
imul
xor
push
mov
adc
outs
int3
int
cmp
(bad)
fmul
mov
cmp
xchg
xchg
push
shl
adc
cld
fstp
int
inc
ror
(bad)
jl
mov
scas
sbb
push
(bad)
push
inc
pop
pop
das
mov
test
cmps
icebp
push
cmp
adc
aaa
cwde
enter
cmp
fadd
pop
pusha
jno
iret
or
mov
call
ins
stc
or
les
enter
imul
sti
sbb
inc
sub
std
jg
jge
loopne
mov
push
adc
pop
rcr
arpl
ret
and
mov
cmc
test
fcomi
fmul
rcl
std
cld
ins
push
pop
push
icebp
mov
jnp
fucom
lods
lahf
xor
jo
xchg
pop
sbb
push
aad
jae
jl
ds
sbb
or
push
arpl
imul
pop
retf
shl
inc
aam
cmps
movs
lds
cmp
add
int
pop
cli
push
mov
mov
cwde
jb
arpl
repnz
je
lahf
pop
out
xor
outs
in
sub
push
repnz
cmps
stc
dec
test
mov
jp
pop
inc
or
dec
mov
inc
dec
imul
and
cli
inc
test
xor
jl
shr
in
adc
sub
sub
cmp
adc
(bad)
fadd
push
push
ds
fsub
push
ror
idiv
out
push
xor
test
cmps
sbb
jae
pavgw
xchg
leave
mov
(bad)
push
push
push
jmp
xchg
scas
popa
loop
fist
daa
outs
pop
mov
ret
xor
retf
out
inc
add
mov
fstp
pushf
sub
sub
xor
pushf
adc
pop
test
pop
pop
xchg
in
xchg
rol
lods
add
addr16
rcr
bound
sbb
es
xor
(bad)
rcl
into
sub
jns
xor
add
fld
mov
ss
push
mov
jge
sahf
retf
xor
dec
dec
(bad)
cmps
jbe
push
(bad)
xor
inc
sbb
(bad)
push
pop
stos
aam
test
push
cmp
aad
dec
aam
or
sbb
in
mov
adc
push
push
dec
popa
jle
mov
(bad)
dec
xchg
cdq
mov
aas
push
and
or
jae
mov
inc
stos
movs
jae
test
push
addr16
inc
xchg
xor
ins
adc
out
je
daa
and
outs
jle
jle
rol
push
aaa
pusha
cmp
jecxz
cmp
inc
fdiv
xor
jae
xor
jecxz
push
cld
(bad)
in
mov
out
out
(bad)
jg
pop
test
fbld
fsubr
jle
imul
adc
outs
xchg
jl
popa
mov
iret
icebp
add
xor
xor
das
std
sbb
(bad)
push
sub
(bad)
sbb
jbe
mov
mov
pop
sti
add
sbb
and
movs
mov
adc
call
les
clc
xchg
lods
inc
out
iret
pop
xchg
add
and
pop
cli
mov
cmp
dec
lods
adc
jmp
stos
xchg
iret
sub
jne
xlat
pop
lea
jg
cmps
out
mov
jo
popa
push
out
sub
fidiv
cmp
push
aas
xor
dec
add
cs
jb
adc
xor
adc
xchg
js
push
jmp
ds
mov
mov
or
xor
push
mov
scas
push
mov
inc
shr
gs
xchg
imul
lds
sahf
stos
or
dec
cmps
jle
jg
sub
dec
enter
push
inc
jmp
jmp
cli
jne
rcr
jno
mov
(bad)
(bad)
jp
ror
js
and
(bad)
cmp
retf
jbe
mov
or
nop
(bad)
out
xor
scas
xor
aas
xchg
jne
ud2
push
ins
shl
mov
dec
into
(bad)
mov
stos
sub
adc
push
stos
jo
inc
dec
and
mov
add
jns
adc
mov
mov
mov
test
(bad)
icebp
cmps
mov
ret
push
push
sub
repz
sbb
jl
xchg
addr16
ss
retf
sbb
scas
mov
dec
push
ret
pop
scas
cmps
das
into
sbb
les
(bad)
adc
jo
pop
mov
lds
xchg
xchg
mov
xlat
mov
add
(bad)
mov
movs
sbb
loopne
mov
sbb
out
ss
sub
jecxz
test
jmp
fdiv
cmps
mov
(bad)
(bad)
sahf
sub
(bad)
xchg
sub
(bad)
xchg
lea
ror
xor
in
test
out
add
(bad)
je
sub
add
xchg
mov
(bad)
mov
and
inc
push
add
pop
xor
cli
sbb
movs
pop
jns
test
xchg
outs
mov
push
cmc
fist
and
loop
movs
jo
dec
and
xor
xor
jne
loop
popa
dec
in
test
jmp
pop
add
mov
popa
pop
je
push
xor
ror
in
cmp
imul
sbb
sbb
xchg
call
or
xchg
add
dec
and
imul
push
fidiv
dec
lahf
adc
xor
ret
jo
in
neg
pop
imul
pop
retf
cmc
pop
dec
sbb
movs
push
ds
push
dec
fisub
(bad)
sbb
in
das
sub
sub
add
int3
cmps
arpl
jmp
call
mov
ret
ss
sub
fisub
or
mov
add
lea
(bad)
cmps
repnz
jle
mov
ins
(bad)
jno
jmp
pop
retf
imul
sub
lods
cmp
push
jae
gs
mov
and
pop
sub
inc
and
loop
jbe
mov
fxch
shl
jmp
sbb
or
xchg
pop
frstor
xchg
jle
in
sub
cmps
lds
jecxz
mov
imul
retf
jge
(bad)
push
sti
mov
xchg
cmp
dec
cmp
pop
pop
into
int3
hlt
adc
arpl
lods
jle
push
jbe
pop
fnstcw
mov
xchg
jmp
mov
(bad)
icebp
adc
adc
dec
inc
outs
pusha
cmp
fdivr
xchg
lods
sub
(bad)
fistp
out
fmul
mov
jnp
adc
xchg
jmp
ret
xlat
mov
ret
repnz
xchg
adc
fucomp
iret
fnstcw
daa
cmp
pushf
push
test
and
(bad)
aad
loope
outs
aaa
sar
test
dec
fwait
xchg
mov
and
cmp
popf
mov
xchg
sar
psubsw
cmps
aad
push
xor
xor
dec
call
das
stos
push
pop
test
repz
ins
push
sub
add
mov
xor
stc
dec
xor
mov
cmp
imul
scas
add
add
ret
(bad)
mov
pop
movs
jmp
fcom
dec
retf
lea
jg
rcr
mov
mov
adc
mov
mov
out
mov
pop
movs
fisubr
jp
test
pop
fist
mov
sbb
data16
(bad)
sahf
das
out
repz
inc
in
push
pop
push
movs
inc
push
lea
rcr
shr
dec
in
pop
dec
leave
adc
mov
push
popa
pop
mov
dec
inc
add
shl
mov
es
inc
mov
mov
push
les
pop
jmp
cmp
fidivr
je
adc
sbb
or
test
sub
cs
aaa
test
adc
add
and
jbe
sbb
push
mov
mov
jmp
cmp
jmp
add
setle
cmc
cmc
xor
dec
jno
out
cmc
les
ror
xchg
popf
shr
hlt
aad
test
mov
(bad)
mov
mov
mov
mov
xchg
(bad)
stc
xchg
cld
mov
mov
mov
enter
mov
aam
and
lods
int3
imul
push
xor
cmp
mov
mov
in
adc
push
cmp
fild
xchg
mov
cmc
dec
sbb
ja
cmp
mov
xor
cmp
data16
xchg
xor
lock
lods
movs
sbb
sbb
daa
sahf
mov
push
mov
rep
cdq
inc
xchg
pop
arpl
mov
sbb
mov
sub
pop
fld
pop
or
(bad)
sub
sti
sbb
and
sbb
shl
es
adc
ins
cmp
fisub
(bad)
sub
xchg
jne
je
lods
pop
jmp
loop
das
or
add
mov
imul
dec
fsub
repnz
pop
and
sahf
lods
shl
arpl
and
pop
(bad)
in
mov
and
mov
scas
loop
and
mov
mov
jp
rcl
inc
xchg
pop
test
mov
lock
jne
xor
xchg
inc
xchg
fwait
or
sbb
ret
dec
sahf
mov
jmp
in
mov
fild
sahf
push
or
pop
and
mov
(bad)
(bad)
fsubp
mov
cdq
ins
jp
mov
fs
repnz
adc
mov
retf
je
sub
xor
out
mov
xchg
and
add
ja
out
jp
aas
int3
inc
mov
and
inc
mov
loopne
lods
into
pushf
push
cmp
jae
hlt
xor
ret
leave
stos
stos
rol
ret
stos
sub
std
xchg
sbb
clc
pop
xchg
jns
xor
outs
xor
imul
jle
inc
mov
loopne
mov
jb
enter
lods
mov
xor
loopne
test
mov
test
xchg
or
push
jns
lahf
sub
pmulhw
cmp
iret
and
dec
fwait
retf
gs
cwde
or
mov
cmp
int3
add
inc
push
push
fnstenv
call
fldcw
xchg
in
sbb
scas
jns
mov
mov
js
fwait
jnp
or
and
mov
cli
xchg
gs
mov
inc
ret
xor
div
clc
cmp
sub
aas
mov
(bad)
pop
(bad)
jp
in
mov
in
push
mov
mov
jns
pushf
mov
es
stos
cmps
xor
cmp
or
sbb
pop
pop
mov
mov
fisubr
int
in
pop
jp
xor
ret
push
mov
cwde
pop
fs
repnz
test
in
add
aam
mov
pop
xor
xlat
jle
ja
pop
(bad)
adc
ror
lds
jae
fiadd
fist
jmp
call
sub
sbb
jge
neg
xchg
scas
jae
jae
movs
pop
pop
das
dec
call
bound
mov
dec
stos
dec
cdq
push
rol
addr16
daa
je
scas
or
imul
xor
in
movs
je
out
adc
xchg
sub
dec
sbb
inc
mov
out
(bad)
jmp
pop
add
in
mov
mov
dec
push
fidivr
push
mov
mov
mov
xor
push
dec
pop
pop
(bad)
jl
test
sti
aaa
scas
repnz
popf
enter
sbb
dec
shl
adc
out
jbe
ror
int
out
imul
arpl
push
add
adc
jbe
mov
stc
push
sbb
je
dec
outs
or
jo
icebp
pop
lea
xchg
fidiv
fbld
nop
int
stos
pop
repnz
jl
jecxz
fistp
scas
fst
enter
dec
enter
push
nop
or
stos
pop
sub
pop
retf
adc
jp
fistp
movs
leave
cmps
xchg
pop
idiv
mov
rcr
movs
in
mov
les
loopne
fist
mov
inc
jecxz
adc
sub
in
push
cld
adc
inc
xchg
aaa
rol
mov
imul
outs
mov
dec
xchg
push
into
lahf
test
fwait
ins
jo
js
dec
shl
mov
mov
push
neg
pop
ins
scas
pop
ja
into
cdq
cmp
pop
aaa
lds
jns
cmp
ficom
and
cmps
pop
out
pop
cmp
mov
inc
int3
xor
mov
cs
pop
(bad)
ds
ror
aam
or
sbb
repz
icebp
aas
lea
mov
fimul
fisttp
or
loopne
sub
rcr
shl
gs
or
ins
jle
adc
adc
fdivr
movs
fistp
scas
inc
int
bound
jbe
xchg
xor
(bad)
mov
test
xor
pop
pop
or
xor
lods
(bad)
mov
push
lahf
xor
jmp
dec
mov
movs
pusha
ret
addr16
xchg
fiadd
outs
cs
sbb
fwait
jl
rol
cmp
inc
fisttp
sbb
inc
mov
(bad)
mov
rcl
jmp
pop
mul
mov
idiv
mov
rcl
and
std
in
mov
cmps
popa
in
cli
push
xor
inc
mov
xchg
sbb
out
test
jg
pcmpgtw
jno
ins
push
stos
sub
cld
in
lea
xor
dec
jne
outs
js
jmp
call
adc
mov
(bad)
cmps
jmp
lock
fwait
out
test
data16
sub
je
mov
and
sbb
mov
pushf
mul
stos
outs
pop
or
leave
dec
repz
addr16
mov
ror
pop
or
ins
xchg
jno
and
xchg
and
push
push
jnp
ror
push
adc
in
lock
xchg
jnp
cmps
popf
xchg
pop
push
mov
cmps
mov
pop
mov
(bad)
pop
mov
jo
enter
push
out
mov
sbb
(bad)
jae
push
popa
cmp
out
mov
sbb
pop
dec
rcl
popa
jmp
xor
cmp
cmp
inc
inc
cmc
repnz
loope
icebp
push
and
mov
xor
outs
clc
xor
pop
out
nop
dec
mov
pop
mov
mov
je
jno
fsub
sbb
iret
(bad)
out
call
repnz
add
push
ror
fs
lods
sub
jg
das
ins
mov
jnp
pop
shl
lods
sbb
mov
or
dec
jmp
dec
sub
iret
aam
call
sub
out
dec
(bad)
cmp
sub
test
push
push
push
lahf
mov
mov
loop
adc
pop
xor
fisttp
sub
pop
adc
call
movs
test
imul
les
inc
cmp
jecxz
or
inc
xor
int
adc
daa
mov
mov
adc
ins
mov
mov
aam
cmp
out
repnz
loopne
jecxz
add
outs
push
shr
test
(bad)
cmp
xchg
cdq
or
outs
push
pop
clc
sub
push
mov
enter
pop
and
mov
cmp
fnstsw
mov
aam
push
out
loop
lods
in
sub
aas
ret
inc
jp
adc
(bad)
loope
cmp
out
repnz
jp
jo
mov
movs
dec
fst
data16
(bad)
in
pop
mov
pop
retf
inc
xchg
test
mov
dec
xor
and
(bad)
stos
pop
pop
sub
jb
ror
and
add
in
cdq
xor
sbb
imul
lea
or
adc
mov
sub
ins
add
or
aam
loop
pop
cli
xchg
enter
fdiv
push
xor
mov
mov
inc
push
mov
dec
and
cmc
fisttp
sar
mov
cmps
test
stos
je
(bad)
jmp
adc
push
mov
inc
call
out
xor
inc
scas
sbb
xor
mov
aad
mov
out
or
sub
mov
clc
mov
add
mov
fs
stc
movs
adc
and
push
cli
shr
mov
in
jl
hlt
inc
fst
mov
mov
push
neg
scas
mov
cmp
icebp
pop
iret
push
nop
jle
cmp
cwde
inc
cld
add
jle
aad
bound
ret
or
mov
addr16
pop
mov
sub
sar
sub
jl
into
pop
shl
int3
iret
mov
push
sbb
and
jl
loop
int3
hlt
mov
push
mov
inc
or
and
pop
shl
xlat
mov
xchg
jo
mul
lea
xchg
xchg
mov
cli
push
enter
or
scas
rol
push
mov
out
stos
cmps
(bad)
adc
sahf
cld
adc
pop
mov
inc
outs
iret
hlt
mov
xchg
xor
lahf
jge
popa
ss
ss
test
das
inc
das
call
or
les
inc
ins
sub
cmc
gs
(bad)
mov
xchg
xchg
sbb
push
(bad)
repz
(bad)
aad
add
jmp
lahf
cmp
xchg
adc
call
inc
sub
cmp
movs
cmp
shl
cs
cmp
loop
in
mov
cmp
lahf
sbb
xchg
out
int3
les
pop
cmp
or
mov
pop
ins
jg
in
dec
aam
sbb
aad
xchg
mov
lock
fwait
pop
jl
mov
push
in
loop
and
cmp
aas
aas
(bad)
adc
mov
jmp
mov
ss
shl
and
push
jecxz
sti
jge
int
jbe
adc
je
fsub
test
push
loop
mov
mov
movs
fs
jbe
fwait
mov
ins
xor
sahf
or
adc
aas
fld
push
repz
outs
dec
sbb
loope
or
cmps
push
mov
jns
jbe
neg
(bad)
ins
push
aaa
fwait
add
mov
mov
sbb
popaw
pop
push
std
iret
jp
imul
push
(bad)
ss
aaa
pextrw
lahf
inc
push
lods
(bad)
out
ins
dec
imul
cmp
call
pop
mov
cmps
rcl
jecxz
sub
jmp
xchg
ins
(bad)
inc
nop
pop
ror
addr16
fldcw
or
clc
daa
add
pop
movs
pop
sub
inc
mov
xchg
je
push
bnd
xchg
mov
add
movs
xchg
xor
or
pushf
mov
test
popf
loop
cmp
add
fcom
int
and
lds
jmp
sub
xor
jmp
lods
jle
adc
mov
jno
shr
sub
cmc
gs
and
stos
pop
out
adc
fs
pop
mov
movs
jns
leave
aaa
mov
add
jecxz
and
jmp
xlat
adc
scas
outs
pushf
add
mov
add
ja
mov
mov
(bad)
div
or
ror
pop
(bad)
sbb
fisttp
stos
jno
(bad)
je
mov
sub
fnstenv
test
or
xchg
(bad)
sub
jecxz
lock
push
jne
jge
jb
addr16
clc
cmc
mov
or
das
pop
mov
ficomp
xor
push
mov
into
test
adc
aad
jo
xchg
(bad)
cdq
(bad)
data16
or
dec
das
jno
or
jge
in
push
jecxz
mov
dec
(bad)
xchg
jle
test
jb
enter
(bad)
scas
inc
sub
scas
xchg
scas
test
loopne
loope
jbe
sub
xchg
pop
fcomp
js
neg
jmp
fiadd
cs
sub
mov
daa
aam
xchg
jb
(bad)
sti
push
fld
ds
mov
(bad)
jmp
lods
sahf
jle
jle
pop
gs
pop
xchg
add
clc
cmp
fwait
mov
sbb
sub
outs
mov
adc
mov
fcom
mov
adc
ss
xor
inc
and
xor
pop
popf
push
mov
adc
nop
and
arpl
sub
inc
pop
pusha
(bad)
in
aaa
std
loopne
cmp
mov
add
push
inc
mov
push
push
lds
cmp
adc
adc
dec
scas
fsub
sub
ficom
jp
sbb
fbstp
sbb
jecxz
xor
in
mov
cmc
cmp
fistp
(bad)
into
sub
repnz
mov
cmc
jmp
aad
fs
xchg
adc
sbb
sahf
int
sahf
sub
ds
dec
push
out
jno
jne
cmp
mov
out
mov
fs
out
movs
ins
add
in
jae
out
cli
arpl
fld
(bad)
out
fld
push
(bad)
ss
mov
out
mov
les
dec
outs
adc
or
cli
inc
sbb
adc
push
lahf
scas
mov
xchg
dec
movs
cmp
push
mov
xor
or
loopne
pop
mov
test
jo
pop
xlat
pop
pop
fistp
popf
jp
push
sub
rcl
mov
out
popa
adc
ja
stc
imul
jmp
sub
pop
cmp
sti
sbb
push
test
mov
push
repz
dec
cld
leave
in
mov
mov
xchg
or
cwde
and
jecxz
scas
dec
ja
pop
jmp
lods
mov
cmp
mov
jae
or
cwde
hlt
lds
add
push
adc
repz
cmps
imul
mov
or
ss
das
les
sbb
cmp
mov
iret
xlat
and
repz
shl
and
nop
sub
push
ds
(bad)
in
pop
cmps
int
sahf
cmp
cmp
fstp
add
sbb
pop
mov
cmp
sti
push
sahf
add
jns
jle
mov
mov
mov
iret
int
inc
adc
fwait
pop
jle
jp
and
or
xchg
jl
mov
fstp
inc
inc
sbb
xchg
dec
mov
mov
mov
adc
sub
mov
jmp
test
repz
stos
aas
adc
aaa
jnp
mov
inc
lods
mov
inc
mov
(bad)
xchg
lods
fld
call
adc
fiadd
mov
fnsave
push
rol
fistp
jg
or
dec
and
mov
test
sub
rol
cmp
in
(bad)
inc
leave
std
mov
icebp
inc
dec
sbb
fcmovnbe
int
test
jl
iret
scas
jbe
clc
scas
pop
rol
stos
sbb
repz
cmp
icebp
test
arpl
jmp
jmp
pop
jne
das
jae
fdivr
inc
push
ds
jbe
mov
cwde
inc
mov
inc
rcr
stc
sub
xor
out
pop
pop
inc
jmp
stos
sbb
shr
in
mov
popf
jl
pop
adc
inc
add
fdivr
sbb
adc
mov
mov
dec
or
in
sbb
in
(bad)
pusha
aas
xchg
stos
and
cmp
inc
popa
out
sub
inc
ret
ins
fdiv
retf
adc
fisub
aam
pop
pop
inc
push
jnp
sub
pop
pop
jle
jle
int
mov
jne
(bad)
mov
push
cdq
pop
js
movs
scas
push
aam
lock
jmp
jns
mov
ret
(bad)
mov
push
rcr
mov
scas
mov
cli
cmp
stos
adc
jecxz
repz
stos
fmul
push
sar
loopne
xor
dec
lock
(bad)
jmp
ds
enter
xchg
shl
mov
pop
outs
shl
cmp
mov
call
fist
fstp
jmp
xor
shl
mov
adc
outs
and
shl
add
mov
into
movs
fmul
out
pusha
push
fwait
shl
pushf
mov
aas
push
retf
fwait
jmp
movs
inc
lock
test
fdivr
fld
mov
xor
cmps
or
(bad)
call
dec
das
push
in
or
sbb
pop
xor
fistp
mov
mov
jle
scas
mov
inc
dec
lahf
pop
jg
mov
jle
and
and
mov
jno
cmp
int
mov
std
cli
cmps
add
in
shl
dec
fstp
add
jae
push
mov
mov
imul
lock
ds
cld
adc
inc
movs
xchg
mov
push
dec
jno
pop
fisubr
mov
iret
sti
cmps
les
repnz
dec
sahf
div
cs
lock
stos
jp
ja
les
mov
cdq
inc
sbb
aam
ret
jbe
fld
imul
fsubrp
cmp
mov
mov
mov
push
js
xchg
scas
int
in
mov
lahf
adc
mov
or
test
rol
inc
jmp
adc
das
aam
aam
fmulp
sti
(bad)
pop
sub
loop
out
mov
bound
pop
icebp
pop
dec
jmp
xchg
or
lods
gs
adc
inc
sbb
nop
fdivr
add
leave
mov
fstp
or
xchg
and
outs
scas
adc
pop
mov
test
or
test
push
mov
call
jmp
mov
shl
enter
inc
adc
pop
shr
cmps
aas
repnz
sar
hlt
cmp
aas
jl
retf
push
loop
dec
or
sub
retf
or
das
cmc
mov
mov
das
mov
dec
sub
jns
in
jns
frstor
stos
fstp
dec
subps
por
xchg
fstp
mov
arpl
pop
jne
mov
ficom
xchg
add
fdiv
jnp
fnsave
(bad)
das
popf
add
ja
mov
and
std
in
and
xor
jb
pop
cld
push
ins
jb
fistp
ds
xchg
add
mov
imul
or
aas
cwde
xor
jg
outs
push
addr16
mov
loope
jne
push
cmp
popf
test
add
(bad)
cli
jo
xor
pop
cmp
mov
push
retf
cmps
mov
test
in
leave
(bad)
or
mov
loop
jbe
mov
adc
aaa
push
adc
jg
ret
aad
xchg
test
inc
fucomi
pop
jnp
out
jge
add
hlt
mov
dec
xchg
mov
test
shr
rcl
(bad)
std
aas
xchg
xchg
cmp
fcmovnbe
xor
scas
add
int3
or
mov
adc
jno
aam
mov
add
repz
mov
mul
cmps
jbe
mov
jmp
in
jle
jo
test
fbld
mov
mov
scas
test
fucomip
pxor
mov
out
inc
leave
inc
daa
xlat
imul
push
cmc
xchg
aad
cmp
pop
ja
xor
sbb
ror
loope
lds
clc
and
push
(bad)
pop
sbb
or
jb
jmp
hlt
mov
xor
cmp
scas
and
je
aas
inc
jge
neg
cli
fcom
inc
movs
(bad)
std
push
mov
cmp
jmp
mov
nop
add
imul
imul
mov
add
add
mov
push
cmps
inc
push
clc
xor
std
rol
lea
cmc
pop
pushf
neg
jne
out
mov
int3
out
push
push
or
scas
jg
dec
mov
retf
inc
imul
(bad)
xchg
xchg
cdq
sbb
das
adc
xchg
ss
mov
dec
push
shl
je
clc
mov
ss
mov
adc
push
adc
cmp
daa
test
inc
scas
add
push
mov
sub
mov
out
jecxz
dec
arpl
sbb
xor
mov
lock
js
loopne
cmp
leave
std
ins
ins
scas
jecxz
jg
add
pop
lods
repz
dec
mov
jg
push
gs
movs
pop
mov
dec
(bad)
pop
mov
mov
jno
or
xchg
cmp
pop
jo
and
test
jmp
mov
sti
pop
fstp
loop
fistp
mov
nop
push
ret
inc
inc
mov
stos
pop
jmp
mov
scas
test
sar
shl
mov
mov
cmp
add
add
shr
mov
sbb
outs
nop
or
sub
fadd
enter
out
bound
xchg
pop
stos
push
mov
add
and
cmp
xor
shr
and
ret
ret
pop
jmp
jge
popf
popf
lock
push
xor
inc
and
(bad)
iret
inc
jnp
(bad)
adc
aam
xchg
test
adc
int
jmp
mov
dec
inc
scas
and
adc
mov
cmps
mov
add
mov
xor
add
dec
jp
std
sub
mov
stos
pop
xchg
fisub
hlt
push
int3
dec
(bad)
push
push
dec
jne
lea
fidiv
pop
push
inc
jnp
(bad)
je
fsubr
cld
jg
sub
jae
loope
cmp
or
test
ficomp
inc
js
out
dec
xor
inc
ins
and
pop
div
cli
imul
arpl
stos
movs
adc
lods
pop
repz
loopne
push
dec
lock
retf
cmp
lods
fistp
pop
sub
xor
xor
mov
add
icebp
fadd
mov
js
xlat
popf
xchg
xor
leave
dec
cmp
ficom
mov
mov
sbb
jnp
sub
(bad)
dec
ficom
pop
(bad)
xor
mov
loope
out
es
lods
in
lds
inc
cmc
(bad)
movs
xchg
and
in
sbb
mov
mov
loopne
stos
adc
fnstcw
jo
push
fnstenv
push
pop
mov
inc
push
std
inc
push
and
pusha
fistp
lods
in
and
push
in
jp
mov
scas
in
loop
add
int3
push
xor
push
jecxz
lds
sbb
repz
dec
push
hlt
jle
retf
sbb
fist
loop
aad
daa
aad
mov
xor
pop
pop
cli
stc
cwde
xchg
icebp
cdq
sub
outs
jo
dec
xor
(bad)
jmp
cmps
inc
and
mov
jb
scas
mov
mov
xor
or
dec
jb
jmp
mov
mov
pop
add
lock
lock
xor
cdq
call
mov
add
cmc
(bad)
jmp
(bad)
sar
adc
mov
aas
sbb
fldpi
mov
inc
pop
int
in
jo
xor
inc
mov
xor
sti
sbb
cmps
mov
mov
cli
lock
push
or
add
cld
push
xchg
push
dec
mov
pop
xchg
and
xor
adc
push
mov
cmc
loope
repz
out
pop
add
fwait
jnp
adc
daa
cwde
mov
fs
test
leave
pop
ficomp
mov
shr
jne
mov
lea
cli
hlt
push
out
lods
jecxz
iret
inc
std
lds
mov
stos
cwde
fs
lock
inc
shl
xchg
mov
dec
cmp
mov
jo
repnz
adc
mov
rcr
mov
(bad)
jbe
or
dec
or
ins
push
(bad)
xchg
ins
inc
adc
cs
cmp
mov
out
nop
mov
push
scas
mov
fs
jnp
push
xor
dec
jbe
xchg
add
dec
fadd
xchg
add
inc
clc
(bad)
sub
dec
mov
jp
jae
lahf
sbb
scas
stos
fnstenv
push
nop
daa
xor
daa
leave
pop
jmp
movq
push
mov
cmp
jno
cmp
das
fisub
out
je
repz
test
or
mov
adc
pop
aad
sub
sub
daa
retf
adc
jle
pop
jne
pop
dec
data16
sub
jg
and
dec
rol
add
and
lock
pop
jl
push
lock
and
ret
repz
fld
aaa
addr16
loope
sti
mul
rol
sub
cmp
outs
adc
adc
push
imul
in
leave
ret
popa
je
into
popa
pop
jp
cs
add
inc
test
sbb
pusha
xor
mov
das
push
movs
push
xchg
lods
xlat
shl
int3
sub
jl
retf
cdq
in
or
jb
and
js
icebp
mov
lock
mov
jns
sub
adc
std
shl
imul
xlat
outs
test
(bad)
retf
sub
inc
jnp
adc
out
mov
psrad
sahf
ret
leave
pop
cwde
mov
mov
jecxz
ficom
jle
(bad)
pop
push
test
pop
xlat
out
pop
adc
push
sbb
adc
cmp
pop
mov
lea
(bad)
cdq
aad
jle
pop
cmp
cwde
sbb
add
call
es
out
inc
scas
retf
add
out
(bad)
mov
ins
jno
leave
aaa
ror
jne
pop
jb
mov
cmp
pusha
and
ret
(bad)
sti
jbe
dec
xchg
mov
in
or
sub
sar
cs
in
scas
lods
cmp
(bad)
xor
aam
std
sbb
outs
pop
adc
ds
push
mov
popa
lahf
inc
dec
push
mov
imul
in
push
dec
loop
imul
sar
popf
and
and
mov
cmp
adc
and
lea
call
retf
div
cwde
sub
jle
repz
ins
cmp
lods
fld
cmp
xchg
pushf
jg
mov
fld
mov
add
ja
and
xlat
jge
jbe
in
scas
xlat
fwait
movs
(bad)
loopne
jmp
and
rcl
ret
das
push
jge
and
and
imul
pop
xchg
das
xchg
sbb
add
mov
shl
cmps
add
jmp
out
cmps
jle
dec
adc
int3
dec
sbb
pop
ret
adc
outs
jp
xor
jae
adc
rcl
rcl
and
sahf
fidivr
push
loop
fcmovbe
loop
stos
lock
push
mov
sub
out
mov
push
xor
jmp
push
(bad)
push
pop
stc
or
movs
movs
test
cmp
and
push
push
pop
int3
nop
inc
inc
sub
imul
sbb
aas
outs
cmp
(bad)
scas
repz
push
cmps
dec
test
xchg
push
(bad)
xchg
mov
dec
inc
mov
xchg
fsubr
into
(bad)
mov
xchg
test
cmps
test
jno
in
popf
sbb
cli
das
cwde
and
test
add
inc
push
cmp
jno
or
xchg
stos
mov
jns
bound
inc
pop
jo
lods
jo
(bad)
fsubr
inc
dec
xor
mov
(bad)
xor
mov
loope
mov
and
out
aad
cld
retf
rcl
out
cli
ins
pop
shr
(bad)
jg
(bad)
xchg
and
daa
inc
mov
sub
pop
lods
add
cmp
or
cmp
pop
jo
jne
loop
pop
mov
inc
fidivr
mov
xchg
shl
mov
in
jmp
and
add
inc
mov
test
call
scas
jp
retf
inc
push
xchg
or
xchg
adc
inc
loope
out
mov
adc
jecxz
cmp
out
cmp
adc
retf
cmps
sti
dec
(bad)
neg
adc
sub
xchg
fadd
ror
test
sub
push
loop
mov
and
xchg
loope
adc
adc
ror
jg
arpl
inc
mov
aas
test
xchg
dec
xchg
sbb
push
(bad)
or
daa
mov
xor
jecxz
out
jmp
inc
xlat
xor
lock
pop
xchg
cmp
mov
(bad)
fwait
adc
in
cmp
hlt
sbb
scas
ins
jbe
sbb
fbstp
or
mov
mov
xor
sbb
idiv
lahf
inc
call
and
fdivrp
stos
adc
dec
icebp
jp
enter
add
stos
das
mov
loopne
popa
mov
leave
mov
mov
lds
mov
or
add
mov
cmps
or
fiadd
push
add
inc
shl
(bad)
data16
or
ror
push
xor
adc
push
mov
(bad)
cmp
test
mov
xchg
scas
inc
push
mov
jl
mov
xchg
(bad)
pop
cld
mov
ja
lods
retf
mov
inc
lods
inc
push
inc
push
fistp
(bad)
shr
loop
es
ret
dec
retf
ja
push
sahf
mov
cld
push
lods
sub
xchg
repz
repz
fidivr
lods
push
iret
nop
scas
icebp
mov
jge
cmc
(bad)
jge
jae
lods
ja
pusha
std
test
lea
fdivr
mov
shl
ja
xchg
mov
leave
xor
mov
jle
xor
(bad)
div
mov
adc
xor
xchg
lds
sbb
push
adc
jg
sub
jg
out
add
push
mov
stos
adc
in
mov
adc
cmps
inc
dec
adc
and
imul
mov
and
pop
loopne
mov
cmp
push
jmp
cmp
or
enter
cmp
mov
test
cli
xor
jae
loopne
popf
in
movs
into
call
(bad)
cmp
mov
inc
sbb
sub
lods
pop
outs
in
dec
jp
mov
btr
dec
retf
repz
and
adc
ds
es
inc
js
inc
mov
outs
jge
imul
sub
push
out
jmp
push
push
mov
push
fcomp
dec
(bad)
adc
cmps
pop
fisttp
leave
xlat
and
stc
jns
dec
and
imul
xor
data16
push
pop
pop
inc
out
xor
and
nop
or
cmps
ret
cli
adc
cmp
(bad)
(bad)
in
(bad)
into
cwde
xor
sub
push
into
fcomp
push
cld
fnsave
or
std
cmp
jecxz
or
add
mov
xchg
mov
add
xor
test
rol
or
push
inc
call
aas
stc
sub
sbb
adc
add
call
imul
jecxz
cmp
mov
fimul
and
in
(bad)
sbb
movs
xchg
inc
add
das
(bad)
aad
outs
pop
jl
and
jo
mov
pop
xchg
inc
lock
add
shr
adc
push
sahf
sub
test
rcl
(bad)
lfs
loopne
out
mov
inc
inc
push
hlt
test
mov
dec
or
out
int3
push
lar
pushf
jmp
rcr
jmp
jmp
push
mov
sbb
fbld
popf
test
mov
dec
or
or
xchg
mov
jecxz
in
sar
je
loop
pop
shl
mov
jae
push
arpl
rcl
xor
fstp
(bad)
sbb
mov
rcl
(bad)
and
daa
add
(bad)
cmp
xchg
lea
mov
icebp
sub
cmp
mov
daa
sbb
rol
push
inc
lock
into
retf
sub
xchg
jecxz
xchg
pop
in
dec
cs
mov
adc
pop
fstp
retf
popf
inc
sub
lock
lods
jg
push
xchg
sub
sbb
nop
cmp
loopne
push
mov
jne
(bad)
fsub
movs
sbb
cs
ss
or
cmp
loope
inc
xor
mov
test
mov
jmp
mov
dec
and
rcr
sub
sbb
xchg
jne
pop
push
dec
sbb
scas
cmp
out
add
and
clc
shl
cs
lods
dec
adc
mov
sub
iret
neg
jmp
sbb
clc
jmp
addr16
sub
xor
cli
push
inc
test
rcl
pop
push
fsubrp
mov
bt
test
repnz
std
sub
inc
pop
js
cmps
xchg
cmp
push
inc
pop
rcr
jo
(bad)
icebp
sub
jp
fmul
cmp
push
mov
(bad)
mov
cmps
sbb
and
adc
imul
or
sub
dec
and
sar
mov
inc
jb
je
xor
aad
xchg
ror
xchg
fwait
inc
mov
mov
inc
icebp
lods
or
push
pushf
and
jl
into
jo
je
jle
addr16
cmp
popa
loop
sbb
call
mov
(bad)
sub
frstor
pop
fisttp
inc
icebp
scas
aaa
test
sub
and
pop
pop
ja
dec
int
xor
mov
loopne
(bad)
int3
int3
xor
aad
pop
sbb
test
aas
jbe
stos
movs
fldcw
mov
sar
adc
pop
inc
clc
jge
pop
push
ja
inc
cmp
sahf
aaa
aad
lock
and
repz
pusha
std
jl
ja
push
dec
in
fsub
es
push
add
sub
xchg
arpl
js
sub
les
add
add
xchg
push
ja
(bad)
call
xchg
jno
data16
xor
mov
push
mov
outs
loopne
mov
adc
jno
fadd
jo
test
xor
mov
cmp
dec
adc
std
out
icebp
push
mov
xchg
arpl
inc
jle
pop
pop
(bad)
and
jo
int
mov
stc
xchg
scas
mov
adc
sbb
mov
mov
sub
fs
loop
push
jmp
js
mov
inc
fwait
jp
mov
popa
outs
aam
loop
repz
cmps
mov
mov
sub
sub
ror
push
mov
inc
cmp
cwde
cmp
lahf
cmp
ror
push
or
pop
xor
fs
inc
xchg
dec
std
jnp
pop
cmc
fsubr
mov
mov
mov
(bad)
test
call
mov
fs
mov
out
das
cmp
fsubr
xchg
rcr
push
sub
jmp
cmps
(bad)
aad
setns
push
xchg
add
mov
or
mov
sub
push
aam
jb
push
mov
cmp
sub
lods
pop
push
mov
int3
rcr
inc
xor
cs
sar
mov
imul
cmp
div
pop
and
push
jl
cwde
mov
adc
pop
cmp
xor
xchg
xor
cmc
push
out
mov
xor
mov
shl
jl
xchg
jns
rcr
scas
(bad)
aas
pop
fst
and
inc
and
addr16
cmps
pop
jae
jmp
or
repz
push
stc
cmp
cmp
adc
or
push
ins
out
fst
cmp
add
or
iret
push
jnp
outs
mov
cmps
shr
test
in
push
add
mov
adc
jmp
jmp
xor
fadd
inc
cwde
jnp
sahf
push
dec
pop
mov
dec
stos
xchg
or
inc
mov
cmp
das
mov
out
gs
sbb
je
push
mov
xchg
sbb
outs
ss
adc
dec
js
test
loope
ret
rcl
mov
xor
xchg
xor
in
in
xor
xchg
in
push
sbb
out
sub
clc
jns
sti
sbb
aam
and
push
(bad)
adc
mov
int3
imul
push
pop
jmp
leave
fld
into
outs
xchg
and
inc
jnp
ds
xor
cmp
push
sbb
mov
cld
and
mov
mov
mov
mov
xchg
jb
xor
aad
(bad)
daa
fs
mov
sub
loop
add
inc
test
lahf
ffreep
fcomi
in
(bad)
mov
push
enter
jbe
imul
push
xor
jge
ss
mov
shr
or
dec
mov
xor
mov
inc
sub
push
cwde
movs
test
arpl
pop
push
add
mov
(bad)
cld
mov
xchg
xchg
aas
or
push
call
jne
lods
mov
sub
xchg
mov
pop
ror
dec
ds
push
aam
jp
test
add
(bad)
mov
pop
xchg
stc
cmp
adc
and
jle
pop
or
int
neg
movs
jp
sar
sbb
mov
sti
les
cmp
lds
bnd
imul
jle
cld
dec
add
mov
pop
sub
mov
jae
loop
mov
push
in
shr
mov
scas
pop
in
mov
jmp
push
aas
data16
sub
rcr
xchg
aaa
add
cli
jne
pop
out
gs
loop
and
jg
push
cmp
fbld
dec
mov
inc
jmp
jp
dec
mov
ss
out
bound
fnstcw
je
out
dec
adc
xchg
scas
adc
jne
outs
inc
fild
push
dec
push
pop
int3
ret
add
(bad)
cmps
pushf
add
pop
lods
retf
pop
(bad)
mov
xor
sahf
xor
mov
int3
jmp
scas
in
cs
xlat
fist
sbb
cmp
mov
jns
push
add
pop
or
xor
jne
push
dec
test
ret
pop
test
or
mov
call
ret
jp
mov
jl
inc
retf
pop
xchg
hlt
mov
stos
pop
push
or
loope
jg
and
popa
pop
imul
inc
or
(bad)
sti
mov
iret
rcl
mov
hlt
pop
mov
inc
fcomp
(bad)
lock
fdivr
adc
mov
in
xchg
cmp
into
xchg
add
std
mov
xor
loope
dec
jecxz
add
inc
pop
inc
or
popa
mov
retf
fcomp
ss
mov
scas
fsub
cld
xor
xlat
xor
add
push
xchg
jb
in
enter
idiv
fldenv
loop
sbb
pushf
hlt
mov
into
int
push
cmp
sahf
daa
es
das
mov
mov
fcmove
sub
popf
ds
out
sbb
cmc
lods
jmp
sti
adc
dec
out
jo
push
lds
cmp
outs
or
add
mov
test
xor
push
lods
enter
test
mov
sbb
jge
sub
mov
out
sub
pop
mov
pop
or
or
cs
shl
pop
test
jp
push
adc
into
clc
cmps
out
stc
xchg
movs
xor
inc
pop
sbb
xchg
mov
je
mov
lahf
das
and
add
mov
mov
(bad)
push
movs
movs
loopne
adc
sbb
xchg
and
cld
int3
(bad)
std
xlat
std
jmp
(bad)
call
mov
sbb
dec
outs
std
fs
popf
sub
push
in
fbstp
idiv
mov
call
add
pop
js
mov
jns
lods
ds
out
shl
repz
aaa
sbb
and
fs
mov
add
pop
push
fbld
jge
mov
and
or
and
fs
cmp
sub
fimul
xchg
inc
mov
inc
cmp
in
imul
or
pop
mov
je
test
add
scas
xchg
repnz
jae
pop
pop
mov
sub
js
(bad)
loopne
inc
ja
popf
sub
jle
mov
ins
cmps
test
sbb
cmp
call
push
jg
jp
sub
or
mov
aas
sub
loopne
int3
jns
jns
sbb
cmp
dec
mov
add
xor
and
and
mov
xor
les
xchg
and
xchg
fdiv
rcr
mov
xchg
xor
icebp
and
adc
and
pop
(bad)
call
dec
xor
mov
scas
jmp
pop
out
dec
pop
jl
loop
sub
xor
clc
xor
bnd
popa
ror
push
push
data16
mov
xchg
fnstenv
cmp
push
orps
ret
ret
icebp
hlt
xor
push
addr16
push
fwait
cmp
mov
xor
push
mov
das
mov
cmps
cmps
push
xchg
repz
push
icebp
dec
adc
cmp
pop
pop
inc
jmp
jmp
in
jp
jecxz
pop
je
mov
bswap
out
pop
test
aas
aam
addr16
push
jnp
hlt
lods
shl
cdq
fild
and
out
xor
scas
jmp
in
add
cs
push
pop
in
daa
test
imul
jne
out
mov
add
mov
pop
outs
imul
jle
(bad)
pop
xor
stc
popf
jle
enter
push
xor
jp
xchg
add
ror
cmp
cdq
xor
das
cmc
mov
jmp
imul
xchg
pop
sbb
repnz
inc
mov
add
fmul
div
out
stos
inc
or
mov
or
in
rol
into
or
rcl
adc
hlt
lods
jae
repnz
addr16
dec
xor
jne
div
xor
sti
imul
or
cmps
push
sbb
xchg
dec
(bad)
js
loop
sbb
mov
jl
jp
adc
movs
sbb
xchg
fdivr
xor
inc
or
cmp
imul
cld
fsubrp
add
adc
pop
loopne
push
loopne
push
inc
fisttp
xor
rcl
leave
jp
mov
adc
xchg
out
gs
popa
call
xor
mov
movs
push
push
out
push
xor
and
jmp
xor
bound
xchg
cwde
cmps
or
fs
std
sbb
xor
data16
(bad)
sar
test
das
in
dec
push
xchg
loop
xlat
cmp
outs
sub
or
into
dec
fcom
inc
xor
scas
daa
push
cmp
call
push
pushf
arpl
mov
jne
cwde
cmc
in
mov
(bad)
ja
call
leave
cmc
sahf
mov
pop
mov
loopne
icebp
call
repz
fwait
mov
jnp
cwde
add
and
add
iret
(bad)
inc
push
pop
or
retf
push
xchg
call
sub
pop
not
ins
jae
sub
leave
inc
adc
repz
and
mov
push
pop
and
in
sbb
cwde
das
loop
xor
(bad)
das
out
mov
inc
pop
hlt
xor
into
jo
adc
ds
cwde
pushf
push
in
(bad)
cli
into
pop
fld
aam
jl
in
retf
xchg
push
fmul
out
and
lods
cmps
push
jg
jae
sti
mov
cli
cmc
mov
sbb
or
movs
scas
sbb
(bad)
cs
mov
pop
dec
int3
les
jg
sbb
stos
push
retf
cmp
scas
scas
lods
bound
cmp
cwde
out
neg
sbb
jnp
xchg
jmp
arpl
fstp
adc
mov
sbb
mov
inc
call
(bad)
shr
cmp
pop
cmp
adc
out
and
aaa
loope
push
or
cmp
jg
sar
aaa
rcl
mov
adc
aas
imul
adc
movs
popa
inc
jns
mov
sbb
and
(bad)
push
push
sti
int
sbb
test
add
pushf
push
(bad)
cli
mov
mov
cmp
lock
(bad)
mov
adc
lock
add
mov
gs
inc
xor
or
push
mov
push
call
and
mov
rol
icebp
sub
inc
stos
cmc
add
cmp
cmps
pop
adc
sbb
xor
sbb
mov
(bad)
push
(bad)
inc
ins
xor
dec
sub
into
push
pop
sbb
clc
or
ds
xchg
das
xchg
repnz
push
and
sub
(bad)
shl
mov
xor
adc
cs
or
out
dec
mov
cmc
(bad)
pusha
mov
xchg
ret
(bad)
sub
outs
inc
repz
ins
pop
jae
sub
jle
hlt
sahf
jns
stc
xchg
mov
xchg
cmp
adc
jg
outs
xor
cmp
sti
pop
sti
push
idiv
xchg
(bad)
repz
or
fbstp
push
pop
pop
mov
repnz
adc
scas
push
push
mov
jne
fstp
neg
lock
sti
dec
pop
and
jae
add
add
(bad)
in
dec
call
jbe
add
in
sti
jns
jmp
pop
repz
mov
sub
inc
in
shl
sahf
ror
jp
and
fdivr
and
retf
les
mov
push
mov
outs
(bad)
sbb
sbb
add
mov
arpl
xchg
fldcw
add
push
jmp
dec
lock
push
popf
xchg
(bad)
int3
push
jmp
and
fwait
daa
mov
int3
addr16
add
into
xor
stos
jbe
out
int
jl
pop
jbe
sbb
cdq
jg
dec
jp
xchg
div
je
loop
mov
mov
xor
push
in
mov
dec
lods
shr
mov
inc
jo
or
movs
inc
lods
fistp
or
push
call
dec
add
stc
fs
jecxz
pop
and
sbb
push
in
cmp
xchg
fcomp
pop
in
jne
and
mov
jns
pop
pop
cmp
xchg
fldcw
rol
dec
stos
xlat
pop
inc
fdivp
sysenter
pop
(bad)
push
sub
aam
ja
jg
cmps
test
mov
pop
inc
nop
cld
and
inc
pop
add
inc
(bad)
dec
rcr
pop
mov
std
inc
xchg
dec
bound
jb
cmp
sbb
pop
mov
lods
in
mov
stc
xchg
push
jns
ins
fwait
loop
aas
call
in
pop
scas
imul
fstp
mov
push
out
adc
add
call
mov
jge
dec
add
dec
mov
(bad)
test
loop
cmps
call
std
mov
add
(bad)
test
mov
jne
imul
adc
cdq
mov
lahf
adc
jl
cmp
repnz
ret
ret
imul
test
jb
and
cmp
setae
(bad)
in
xor
js
xor
popa
movs
out
xchg
sub
scas
mov
add
sbb
mov
into
mov
cdq
dec
inc
cmc
push
dec
adc
xchg
sub
cld
aad
cmps
leave
fld
or
stc
pop
sbb
or
out
jns
mul
in
mov
xchg
mov
mov
(bad)
into
out
in
addr16
mov
add
add
sub
sbb
dec
xor
fsubrp
push
enter
cmp
mov
in
stos
dec
dec
repz
cmp
out
hlt
aam
jo
stos
push
mov
aas
add
das
adc
loop
out
inc
cmp
mov
cmp
jmp
push
xchg
sub
adc
mul
int3
add
xor
xchg
jecxz
mov
mov
les
push
(bad)
call
push
cmp
sti
cmp
ins
aad
jg
mov
iret
add
(bad)
je
hlt
fisttp
dec
dec
retf
jl
test
sub
xor
dec
(bad)
xor
jo
in
je
pushf
dec
push
out
test
in
lock
popa
inc
add
dec
into
and
call
mov
aas
xchg
cmc
jle
add
loope
lahf
fldcw
adc
ret
mov
sar
xchg
mov
mov
(bad)
out
pop
rcr
push
jmp
fnstsw
lods
inc
jge
jle
dec
jle
push
imul
lea
dec
sub
sbb
add
adc
mul
in
push
add
call
mov
adc
mov
push
repz
fnstcw
mov
inc
push
not
cli
not
mov
mov
out
pop
in
out
adc
add
inc
mov
xchg
xchg
fnsave
sub
mov
jmp
xor
ja
jne
xchg
js
sbb
push
je
and
inc
js
mov
je
fcmovu
ins
mov
mov
adc
mov
mov
cwde
mov
enter
mov
sbb
popa
call
and
sub
push
fucomi
in
out
iret
or
fisub
js
bound
jnp
xchg
dec
ret
mov
pop
mov
and
das
and
jno
lea
pop
lds
test
mov
mov
dec
movs
sti
js
mov
mov
mov
int3
or
outs
pop
shl
fwait
jg
mov
stos
aad
scas
adc
dec
inc
jns
push
aas
mov
pop
xor
mov
adc
aam
or
adc
jg
cld
inc
mov
xchg
loopne
in
inc
(bad)
ins
cwde
lock
or
les
rol
(bad)
push
push
addr16
or
and
or
clc
mov
lahf
jge
out
mov
loopne
sbb
fdivr
scas
sbb
mov
or
mov
retf
xchg
dec
cmp
lea
in
in
(bad)
jge
xchg
cwde
add
sbb
div
fnstcw
out
push
sti
fs
(bad)
mov
repnz
clc
adc
adc
(bad)
in
(bad)
std
mov
stc
fsubr
(bad)
mov
pushf
mov
fs
clc
outs
rcr
fdivp
inc
jle
jo
clc
test
(bad)
pushf
mov
int
inc
jb
xchg
cmp
fwait
inc
into
jp
movs
pop
lock
jbe
mov
sbb
sub
mov
sbb
cmp
sbb
inc
sbb
aad
pop
adc
jo
inc
int3
addr16
out
add
mov
cmps
and
imul
(bad)
jbe
ja
xchg
sbb
retf
add
sti
fisub
pop
js
jg
jne
(bad)
and
sbb
fsubrp
pop
repz
ficom
in
loopne
ins
rol
xchg
int
adc
mov
arpl
sub
scas
das
sbb
add
sbb
xor
(bad)
sbb
ss
inc
clc
test
int
mov
imul
fcom
mov
xchg
int3
jno
and
or
adc
div
fxch
mov
fild
jo
arpl
lods
xor
aas
adc
inc
in
inc
dec
xor
(bad)
je
inc
jns
ret
and
sbb
je
and
mov
sbb
retf
dec
mov
call
stos
jge
pop
ret
push
stos
sub
adc
sub
rcr
fst
jbe
dec
inc
jne
dec
sti
mov
pop
push
ins
dec
clc
or
add
adc
in
fucomp
and
movs
jno
push
xchg
dec
xor
adc
enter
mov
jnp
push
sub
pop
lock
es
mov
and
xor
jp
xor
les
(bad)
mov
(bad)
or
daa
out
pop
adc
adc
mov
inc
mov
sub
aaa
adc
rcl
jmp
cmp
retf
cmp
push
test
mov
div
rcl
retf
inc
pop
sti
push
xchg
push
pop
xor
clc
push
pop
and
cs
pop
or
sub
ins
pop
mov
inc
les
mov
or
push
scas
or
xor
and
cmps
inc
mov
cmps
push
xor
jo
imul
mov
hlt
pop
arpl
(bad)
mov
or
into
dec
daa
adc
into
repnz
ja
cmps
aas
dec
adc
scas
sbb
add
(bad)
push
aaa
imul
add
push
js
nop
lahf
xor
fnstsw
mov
xchg
inc
popf
pop
mul
lods
fsubp
mov
sbb
mov
ja
xchg
cmp
jb
iret
xchg
fimul
mov
js
test
xor
cmp
xor
adc
and
idiv
fucom
imul
cdq
sub
xor
cmps
hlt
lds
sbb
(bad)
dec
sub
mov
lea
mov
scas
shr
xchg
lods
adc
shl
addr16
loop
iret
mov
jb
mov
pop
shr
ficom
mov
int
jge
fild
fild
xor
mov
cmp
clc
pop
in
daa
xchg
retf
cdq
movs
jnp
mov
retf
nop
xchg
enter
sub
adc
fcmovu
outs
and
pop
sbb
imul
xlat
adc
je
dec
push
xlat
dec
int3
and
cmp
mov
mov
mov
sar
test
inc
arpl
lock
clc
mov
push
pop
pop
inc
mov
cwde
cmp
cmp
out
jmp
lods
jns
xor
iret
jo
mov
sbb
push
je
dec
pop
xchg
add
fwait
cmps
sbb
mov
push
ins
dec
ret
(bad)
fsubr
cmps
push
mov
int
sub
or
dec
ror
and
call
add
sub
iret
push
pop
shl
pop
push
sub
aam
pop
scas
cmc
into
jnp
push
cmp
sbb
mov
mov
jmp
adc
mov
jno
cmp
ins
pop
add
arpl
cmps
(bad)
cmc
sbb
sub
inc
jle
in
inc
fldenv
sub
jg
sbb
xor
inc
and
add
fiadd
das
jmp
frstpm(287
fsub
dec
int3
inc
out
in
push
sub
lahf
jle
shl
sbb
dec
and
ss
repnz
out
jnp
lds
push
push
cvtdq2ps
stc
jmp
mov
mov
add
push
fstp
and
test
xchg
push
(bad)
xchg
lds
mov
lahf
ja
(bad)
mov
loop
movs
(bad)
faddp
add
ja
jnp
stos
sub
test
xor
out
and
sti
fwait
or
pushf
lahf
cs
xchg
dec
dec
imul
mov
shl
cmp
jp
cs
jp
out
or
jl
pop
dec
out
hlt
gs
add
xor
call
cld
stos
and
retf
add
add
push
inc
sbb
clc
mov
mov
push
add
(bad)
jo
or
mov
ja
stc
in
dec
sahf
mov
sub
mov
repnz
jp
add
jo
cmp
adc
arpl
jl
cld
push
gs
mul
jmp
jp
cli
jmp
xchg
push
sti
cmp
jo
add
fcos
sar
ror
cli
lock
sti
cmps
xchg
retf
fimul
inc
inc
push
sub
ret
int
mov
pusha
lds
clc
ja
mov
out
mov
sub
pop
pop
jo
xchg
jb
inc
lock
sub
in
scas
xor
mov
jns
rol
adc
push
loope
imul
scas
(bad)
shl
pop
(bad)
xlat
inc
or
enter
iret
xchg
push
adc
adc
push
sti
cwde
sbb
dec
inc
mov
inc
mov
or
dec
clc
stos
ret
xor
pop
pop
xchg
mov
cdq
inc
and
test
sbb
fnsave
jns
xchg
fdivr
push
jns
sub
push
pop
push
or
neg
xchg
pop
and
pop
pop
scas
mov
xchg
shl
jmp
push
mov
pop
rcl
sbb
test
mov
mov
std
pop
aad
out
retf
in
mov
mov
push
sti
mov
sbb
sub
ins
aam
iret
sti
add
pop
cmp
rcr
fmul
shr
rcl
dec
sbb
push
pop
push
outs
sub
jns
daa
clc
or
(bad)
xor
cmp
add
mov
retf
lds
push
lds
push
sbb
xor
mov
jmp
ficomp
push
xchg
retf
cmc
fisubr
sub
mov
jmp
mov
rcl
jp
cmp
imul
fstp
ret
stos
mov
dec
or
cmp
jge
(bad)
push
fstp
fmul
jg
rcl
shl
aaa
mov
aaa
sahf
stos
mov
mov
imul
and
push
repz
jle
inc
adc
pop
test
pop
jo
pop
test
jecxz
xor
mov
fstp
repnz
outs
aad
inc
(bad)
addr16
vpaddb
out
mov
jle
jno
xchg
and
add
jl
(bad)
fisub
dec
push
jmp
sub
jmp
xlat
mov
jb
pop
loopne
bound
sub
mov
dec
push
adc
sub
jb
cmp
jns
and
(bad)
(bad)
sbb
xor
nop
or
stc
aas
in
mov
dec
outs
xchg
fs
outs
sub
mov
js
test
adc
fsubr
popa
jg
jbe
push
adc
mov
add
call
dec
xchg
jns
cld
inc
pusha
pusha
cmp
sbb
dec
jl
mov
dec
mov
neg
push
in
pop
dec
dec
push
out
lods
add
jg
std
lock
std
ret
cmp
stos
mov
xor
call
nop
jmp
mov
mov
fstp
push
mov
adc
xchg
inc
jnp
int3
push
push
inc
rep
cld
jmp
and
and
add
add
jecxz
(bad)
jae
ins
pop
pop
mov
addr16
or
jmp
inc
and
loope
and
aaa
dec
pop
es
lock
fxch
push
daa
xlat
and
pusha
es
dec
and
add
and
jl
imul
fstp
in
sub
inc
gs
pop
cmps
mov
jns
add
aad
je
push
pusha
push
shr
jno
out
sub
mov
clc
dec
jp
push
test
out
or
int3
sub
push
fstp
adc
enter
and
sub
aaa
movs
jbe
mov
mov
mov
push
cli
sbb
pop
mov
pop
rcr
les
ins
inc
inc
pop
pop
or
jge
inc
push
retf
jmp
jmp
ret
aaa
fcom
sub
and
pop
aad
and
or
movs
jg
fistp
pop
pop
mov
cmp
xchg
add
daa
jmp
and
hlt
adc
sbb
movs
sub
xor
(bad)
mov
mov
fucomip
pushf
mov
cwde
lock
std
add
int
gs
int
sbb
dec
inc
mov
cwde
cmp
mov
and
xor
mov
cmp
add
or
mov
std
cwde
fmul
lods
mov
xor
mov
sahf
adc
jae
push
clc
dec
pusha
cmps
call
fs
in
jno
repnz
xlat
and
stc
in
dec
fsubr
ret
(bad)
fidiv
sar
inc
fdivr
xchg
pop
mov
and
das
pop
leave
in
sbb
das
call
fsubr
and
mov
(bad)
cs
push
pusha
pop
mov
dec
mov
ret
inc
mov
ds
inc
sbb
int3
pushf
gs
aaa
shl
(bad)
sub
cmps
aam
sahf
adc
xor
outs
rcl
jae
les
mov
inc
mov
jns
mov
pushf
mov
push
pop
or
push
push
adc
xchg
adc
sti
push
in
sar
pop
fidivr
pop
xchg
xchg
cmp
mov
leave
sub
loopne
shl
sahf
push
dec
dec
jb
sub
pop
xchg
mov
dec
repz
outs
loopne
xchg
xor
sub
in
imul
add
shl
das
sub
sub
ds
xor
inc
ficomp
or
pop
jecxz
cmp
cmp
inc
and
inc
fisttp
test
(bad)
mov
add
sub
in
retf
dec
fidiv
(bad)
pop
mov
test
xchg
das
out
cwde
stc
pop
nop
bound
jp
or
inc
mov
and
dec
jp
call
push
cmp
pop
stos
xor
add
cmp
test
lsl
(bad)
(bad)
jo
cs
and
adc
gs
stos
sbb
inc
aam
cdq
push
and
pop
imul
aaa
mov
fcmovnb
outs
or
cmc
into
xor
mov
sub
cmc
(bad)
int
je
and
mov
mov
bound
sub
push
push
fidivr
pop
cdq
popa
mov
or
shl
inc
sahf
inc
fsubr
and
push
or
call
and
outs
psubw
jnp
fs
movs
adc
sbb
or
adc
sub
or
in
jae
rcr
dec
push
mov
push
xchg
imul
sahf
in
in
cmc
test
xchg
adc
(bad)
das
adc
pop
xchg
in
rol
push
inc
lods
dec
(bad)
xor
add
mov
div
add
lods
and
mov
pop
or
nop
inc
mov
dec
mov
add
retf
or
sbb
sub
adc
aaa
dec
pop
dec
sub
les
xchg
push
stos
test
push
ins
pop
and
lock
ret
mov
lods
sub
test
push
adc
add
std
sbb
xor
lods
pop
(bad)
adc
ds
imul
mov
sub
xor
xchg
pop
xchg
and
std
fs
fdiv
xchg
xchg
sub
or
sahf
repz
push
imul
cwde
pusha
cmp
(bad)
enter
push
retf
xchg
cmp
inc
inc
ss
popf
adc
push
fwait
adc
dec
or
inc
loop
popf
xchg
push
ss
or
xor
inc
retf
jns
xor
mov
add
mov
inc
dec
sub
sbb
mov
xchg
sub
add
sub
fld
cld
enter
je
jno
pop
xchg
in
cmc
cmp
cmps
and
fisubr
stos
pop
jmp
dec
xchg
lods
cmp
xchg
das
push
aas
leave
shl
dec
push
sahf
and
mov
xchg
js
sbb
jmp
movs
cmp
enter
pop
xchg
popa
jle
in
stos
and
les
in
into
mov
cs
fidivr
popf
mov
sahf
xor
in
pop
inc
in
inc
pop
call
pop
adc
popa
pop
dec
cmp
xor
dec
push
lock
out
xor
sbb
rcl
aaa
sbb
adc
out
pop
popa
aaa
(bad)
aas
jb
push
mov
not
mov
fstp
rol
cmp
cld
mov
gs
icebp
mov
test
ret
push
fidiv
xchg
mov
or
mov
sbb
mov
imul
jns
repz
sbb
sbb
push
mov
inc
jb
cmp
aas
add
dec
comiss
inc
mov
fisub
ss
(bad)
(bad)
sub
jno
mov
cmps
les
lea
ins
stos
xor
push
or
inc
imul
shl
xchg
sub
sub
mov
pop
test
push
cmps
push
cmp
sub
test
pop
lods
inc
cmp
scas
aam
es
imul
xchg
cwde
in
sbb
xor
mov
cmps
add
in
sbb
xabort
inc
cmc
push
lahf
xor
jecxz
iret
jbe
mov
jmp
neg
in
jb
aas
packssdw
xchg
pop
rcr
jno
test
jecxz
jno
or
ss
jle
inc
push
out
pop
gs
into
inc
sbb
or
daa
js
cmp
sub
mov
jp
leave
lea
pusha
mov
iret
push
fdiv
xchg
jnp
pop
out
jb
mov
outs
inc
xchg
ret
push
stos
xor
test
jno
fdivr
jb
retf
in
data16
adc
jmp
mov
or
enter
std
mov
mov
sbb
mov
mov
mov
and
mov
fimul
ret
mov
lods
push
pusha
add
cmp
lock
fs
dec
fxam
cwde
in
inc
mov
data16
shl
or
mov
xchg
or
(bad)
push
sub
adc
mov
jecxz
adc
loope
cmp
into
aaa
cmp
aaa
push
stos
jp
lea
cmps
outs
repnz
dec
mov
dec
sbb
in
clc
adc
aas
fcmovne
das
adc
pop
jge
cmc
sub
(bad)
clc
add
pusha
add
fs
dec
test
outs
aaa
loop
push
sar
mov
call
int3
in
and
sub
sub
push
push
shr
lods
out
xor
mov
sub
or
jb
push
in
adc
sbb
or
(bad)
icebp
std
call
fucomp
lahf
mov
mov
int
xchg
dec
(bad)
cmc
mov
out
test
mov
(bad)
(bad)
ffree
push
mov
pop
adc
add
jnp
jmp
pop
mov
js
sub
dec
mov
loopne
daa
aad
ds
jae
loop
push
xor
mov
inc
jmp
imul
gs
(bad)
sub
xchg
cmp
inc
dec
adc
lahf
and
dec
xchg
xchg
mov
xor
or
aaa
nop
inc
je
(bad)
adc
xrelease
adc
cmp
jle
out
std
mov
xlat
test
inc
push
mov
push
pop
fnsave
ins
or
scas
stos
inc
clc
je
pusha
push
(bad)
out
sub
cli
fdivrp
lock
daa
push
xor
and
pop
sbb
cld
movs
aam
jle
enter
cli
jp
repz
mov
out
dec
push
daa
mov
aam
sbb
out
clc
imul
sbb
jp
sar
clc
not
xor
mov
sub
push
sbb
push
fwait
rol
inc
xor
adc
push
push
aam
out
inc
xchg
cld
jb
icebp
sar
mov
or
addr16
add
ror
jp
loop
sbb
xchg
scas
out
push
mov
and
div
jno
adc
in
sub
push
shr
mov
or
pcmpgtd
jns
mov
cmp
(bad)
jns
xlat
pop
mov
jl
iret
jns
rcr
jb
dec
or
mov
dec
or
iret
lock
push
aam
lds
(bad)
cdq
jnp
mov
or
call
leave
cs
ins
add
cmp
adc
mov
sti
jl
outs
cmp
sub
iret
push
je
int
mov
pop
cmp
inc
dec
cwde
mov
or
pop
push
leave
sbb
inc
pop
sub
adc
jns
adc
test
dec
jmp
push
imul
pop
mov
mov
les
jmp
movs
(bad)
int3
mov
cmp
jns
call
fisub
jbe
xchg
pop
jge
scas
xchg
imul
push
cmps
xchg
adc
mov
out
sub
in
add
jbe
out
xchg
mov
mov
mov
sbb
mov
sub
add
mov
in
addr16
mov
pop
push
es
cld
repnz
jae
mov
xor
imul
xor
pop
adc
pusha
movs
sbb
pop
or
fsubr
ins
cmps
inc
retf
dec
inc
xchg
jnp
mov
inc
aaa
sar
movs
dec
mov
jnp
in
ss
push
(bad)
mov
jle
add
inc
mov
xchg
dec
test
cmc
inc
sbb
outs
jge
and
shl
jnp
out
pop
fs
sti
push
mov
jl
shr
dec
sti
push
dec
sbb
xor
rcl
lahf
into
aad
(bad)
mov
or
xchg
cmc
hlt
imul
(bad)
(bad)
es
mov
lds
mov
add
aad
lea
push
pop
out
sbb
(bad)
jle
sub
xchg
mov
add
inc
dec
mov
mov
cs
push
add
outs
ja
dec
jle
add
call
loope
pop
shl
cmps
mul
or
mov
js
add
dec
jne
addr16
jmp
mov
daa
sahf
sub
mov
add
in
stos
add
mov
sbb
xor
jno
xor
pop
xlat
mov
inc
add
outs
add
addr16
xor
dec
pop
mov
js
xchg
retf
xchg
push
sub
push
ja
ret
push
outs
adc
enter
push
aas
sbb
ins
adc
sahf
inc
dec
jae
sbb
cld
stos
lods
pop
les
xor
xor
push
js
and
jbe
pop
cmp
mov
sub
rcl
lods
cmp
dec
dec
retf
and
push
pop
mov
jne
pop
adc
cmp
push
cdq
sub
add
cld
xor
aas
cmp
add
sub
into
cmp
(bad)
adc
loopne
repz
aad
pop
inc
sbb
fs
mov
and
jb
jmp
out
sub
cs
cmp
popf
xor
repnz
mov
les
and
in
fs
idiv
jecxz
mov
xchg
iret
inc
call
sub
call
fisttp
pop
ins
and
mov
adc
inc
gs
mov
mov
(bad)
jbe
shr
sub
bnd
adc
or
pusha
push
retf
rcr
cmp
xchg
imul
sbb
mov
dec
lods
push
ja
sbb
movs
sub
(bad)
mov
(bad)
or
push
adc
cmp
mov
int3
fild
mov
sbb
xchg
jmp
jb
mov
push
es
shl
popf
add
sbb
and
mov
push
cli
inc
movs
push
aas
sbb
dec
arpl
js
mov
cs
adc
je
leave
iret
inc
icebp
jl
or
adc
xor
fwait
out
lods
cmp
and
fcmovne
stos
push
(bad)
cmps
test
push
outs
pop
mov
cmc
sbb
jns
enter
cmc
les
and
ret
loope
push
jnp
pop
xlat
rcl
ret
pop
stc
and
ss
cwde
xchg
loope
inc
into
ror
pop
pop
pop
ds
or
movs
out
inc
cmp
mov
mov
aam
sbb
mov
xchg
xor
and
sbb
adc
and
push
pop
mov
ret
mov
pop
fadd
loope
adc
outs
push
jp
jo
jae
rcl
push
mov
or
es
into
mov
mov
in
data16
rcr
ja
xor
hlt
cld
hlt
pop
not
push
jns
jb
call
(bad)
xchg
scas
fidiv
push
das
push
cmp
(bad)
fiadd
cmp
or
and
mov
and
sbb
sbb
fild
cmp
sub
in
out
sbb
movs
pop
jmp
cmp
fst
gs
dec
and
inc
stos
adc
imul
and
cmovne
repz
xchg
lds
mov
ins
pop
scas
and
fnstenv
stc
xor
mov
out
mov
push
mov
movs
into
mov
pop
inc
call
mov
and
sub
pop
sub
out
fs
sbb
mov
(bad)
push
xor
sub
inc
ins
push
mov
jne
push
ret
dec
call
retf
test
fnstenv
fiadd
jno
lods
cmp
inc
aas
mov
ror
cmp
(bad)
adc
sti
into
mov
call
mov
in
(bad)
mov
or
cli
into
int
into
xor
inc
sbb
sbb
jmp
out
shl
out
outs
aaa
inc
mov
pop
pop
xchg
stc
mov
mov
aam
mov
div
push
mov
jbe
aad
call
idiv
test
popa
outs
mov
popf
jns
adc
mov
stc
movsx
test
inc
outs
xor
leave
int
jae
ret
(bad)
test
jl
pop
aas
test
aas
jge
retf
mov
pop
jg
sahf
xchg
mov
call
cmps
push
scas
push
sub
cmp
pop
sbb
sbb
push
out
out
cmp
in
imul
(bad)
fcomp
outs
adc
xchg
sbb
xchg
pop
cmp
ja
jae
push
in
sbb
pusha
shl
push
push
lea
sahf
dec
lods
aam
fld
daa
mov
(bad)
mov
and
in
xor
cmc
or
jnp
fdiv
jns
iret
mov
sbb
inc
adc
mov
lods
lods
(bad)
jae
pop
stc
push
test
imul
push
jmp
in
rcr
adc
xchg
sbb
mov
ds
dec
jmp
or
sbb
arpl
dec
inc
xchg
not
stc
adc
jecxz
sub
jl
call
jns
jl
add
xchg
mul
pop
repnz
jnp
mov
push
cmp
loopne
hlt
loopne
push
jnp
das
sbb
xor
cli
imul
and
mov
fcom
cld
jae
pop
popa
es
mov
sbb
in
lds
pop
lds
enter
jl
or
xchg
mov
loopne
imul
pushf
and
hlt
fwait
cmp
pop
es
rcr
xchg
adc
stos
and
cmc
lods
mov
dec
dec
mov
in
xlat
add
out
mov
mov
and
mov
ds
cmp
add
pop
or
sub
fnstcw
mov
pop
mov
xchg
cmp
popf
jg
test
fidivr
(bad)
(bad)
pop
sbb
push
mov
dec
push
movs
or
cwde
adc
or
retf
(bad)
les
dec
cld
enter
inc
loop
test
stos
push
pop
dec
dec
cmp
popf
nop
stos
jmp
adc
pop
test
or
inc
test
loopne
mov
jmp
je
jp
ror
xchg
pop
xor
out
leave
lahf
test
jmp
xchg
add
and
repz
cs
mov
or
sti
fnsave
adc
jp
sar
ins
jecxz
out
mov
cld
or
cmp
pusha
push
iret
xchg
inc
popa
xor
jg
xchg
sub
adc
mov
out
push
add
ds
fild
lods
mov
in
frstor
pop
sahf
out
in
sti
sbb
dec
bound
add
jle
push
jg
popa
pop
sub
fcomp
xor
or
cmp
jg
xchg
cmp
(bad)
iret
xchg
stos
aas
xchg
retf
sar
ss
jge
add
mov
xchg
adc
leave
out
popf
inc
ins
clc
dec
cwde
movs
sar
adc
jb
pop
shl
push
mov
daa
jbe
xchg
sub
das
sub
icebp
fsubr
dec
cwde
mov
xchg
dec
fiadd
repnz
mov
mov
inc
pop
daa
mov
xchg
jle
jb
dec
das
pop
and
cmp
or
rcl
(bad)
(bad)
xchg
rcr
adc
and
jmp
scas
add
push
xchg
int3
jbe
add
add
jecxz
cmps
xchg
das
push
mov
nop
and
cld
jb
cs
pop
sbb
cmp
sub
into
cld
inc
lds
(bad)
fdiv
cmp
ss
push
int
and
adc
xchg
or
sub
xor
sar
inc
mov
xor
(bad)
add
cwde
sub
fld
ret
xchg
rol
jne
(bad)
push
jl
stos
(bad)
jbe
sub
push
mov
mov
test
jecxz
jmp
mov
xor
int
cs
(bad)
fcom
cmp
sub
mov
dec
loopne
fisubr
add
cmp
mov
mov
cs
and
adc
jno
mov
push
inc
sbb
(bad)
or
sub
jl
push
popa
push
out
call
in
inc
sbb
test
aad
jo
push
outs
scas
icebp
ror
sbb
call
add
and
call
dec
xor
test
add
xchg
fadd
dec
push
xchg
sbb
xor
dec
fisttp
mov
lds
out
outs
shr
push
mov
mov
jnp
gs
and
and
js
aam
dec
retf
xchg
push
sbb
retf
sar
bound
imul
shl
lods
xlat
outs
cmc
hlt
dec
cmp
adc
pop
loopne
jle
shl
mov
sub
mov
jmp
fsubr
sub
aam
cmps
repnz
push
mov
fsubr
dec
outs
sub
jle
jmp
inc
push
push
xchg
add
mov
add
cmp
jge
in
das
cdq
jb
push
mov
jge
mov
gs
fwait
inc
(bad)
imul
imul
pusha
and
test
xchg
mov
mov
cmp
dec
xor
and
pop
sub
sti
cmps
dec
mov
int3
lahf
push
sbb
dec
jne
movs
je
pusha
cli
cmp
int3
lds
mov
imul
ds
cli
ins
push
dec
sub
sub
and
sub
mov
pusha
xchg
fstp
(bad)
loopne
hlt
dec
sahf
and
data16
cld
loope
jo
aas
inc
loopne
stos
cmp
out
mov
clc
push
and
pushf
fldenv
pusha
jnp
test
or
pop
inc
inc
pop
adc
cmc
inc
stos
js
mov
inc
mov
fist
mov
into
pop
cmp
mov
inc
xchg
or
mov
fsubr
xchg
sbb
or
adc
pop
fbstp
mov
mov
sbb
sub
xchg
mov
iret
xor
fnsave
mov
test
mov
iret
shr
stc
xchg
inc
daa
lahf
retf
ret
jb
jge
xchg
sub
adc
push
cld
shr
aam
mov
mul
out
push
shl
ret
test
test
push
hlt
cdq
test
jl
xlat
jo
lods
adc
add
ins
ins
shl
ja
jo
scas
nop
imul
popa
mov
in
xor
xor
push
sub
pop
add
push
cmp
cmc
test
sub
(bad)
cmp
jle
xlat
out
push
push
push
inc
adc
ds
test
push
ss
ds
pop
imul
pop
test
push
xchg
jecxz
imul
xor
adc
popa
mov
jl
(bad)
fsub
loope
push
sub
mov
xor
add
int
mov
mov
add
mul
sub
ret
inc
je
lock
clc
rcl
xor
ficomp
mov
push
repnz
ins
xchg
ret
cwde
les
cmp
enter
xor
or
js
inc
daa
and
xchg
(bad)
jmp
sahf
lods
mov
push
mov
xchg
mov
pop
xchg
xor
loop
shl
pop
sub
js
mov
test
shl
push
mov
sbb
jge
in
sti
cli
add
inc
int3
fcomp
scas
cmps
xchg
mov
in
mov
loope
test
inc
jl
fdivrp
idiv
xor
push
mov
or
jg
xor
and
cmp
mov
cmp
xor
xor
jge
mov
fwait
enter
dec
mov
and
pushf
enter
pop
inc
sti
pop
bound
call
mov
iret
xor
jg
adc
rcr
cmp
out
cmp
das
ret
mov
dec
push
(bad)
pop
cdq
es
icebp
and
(bad)
addr16
pop
inc
sahf
mov
dec
inc
dec
cwde
jnp
dec
sbb
(bad)
shl
cli
sub
push
sbb
mov
jecxz
paddw
inc
sti
adc
lods
loopne
lods
or
xor
hlt
in
retf
mov
xor
pop
mov
pop
movs
mul
bound
mov
add
push
pop
mov
xlat
mov
gs
or
or
add
test
lods
cdq
cmp
clc
pop
xor
add
mov
xchg
(bad)
cmp
dec
int
xchg
cdq
movs
cmp
repz
popf
arpl
lahf
push
or
scas
mov
inc
pop
(bad)
mov
dec
retf
add
sbb
addr16
or
pinsrw
and
call
sbb
hlt
add
cmp
sbb
loopne
and
xchg
and
jge
ds
sbb
xor
inc
test
cmps
mov
data16
int
movs
jle
shr
int
add
mov
add
fadd
and
push
mov
aad
cmp
aad
movs
outs
paddsw
or
xor
in
enter
retf
in
xor
(bad)
xchg
(bad)
(bad)
fwait
vunpckhps
push
xchg
dec
jmp
loop
rol
test
xor
aad
or
imul
push
inc
std
jae
int
mov
add
pushf
add
popf
aam
cmp
pop
cmps
sbb
ins
sbb
into
out
mul
adc
xor
push
(bad)
in
stos
(bad)
cmc
clc
scas
call
sti
adc
lahf
fist
std
out
mov
sbb
loop
sti
adc
add
xchg
push
in
push
sub
push
add
add
add
add
(bad)
jb
jo
add
jo
and
dec
push
nop
popf
sub
stos
add
pop
movs
push
cmp
lods
pop
jp
push
loopne
ss
in
sub
mov
jne
movs
bound
lods
aas
xor
leave
xchg
xchg
xchg
(bad)
out
push
ins
mov
sub
ret
rol
push
(bad)
sub
jg
or
aas
adc
jg
pop
inc
jo
(bad)
psadbw
or
and
add
add
add
xlat
add
retf
xchg
cdq
push
pop
sub
fidiv
in
in
call
lock
xlat
push
lock
ja
xlat
jne
jae
int
aam
mov
or
adc
shl
sub
icebp
adc
cmp
cmp
mov
mov
les
scas
add
xor
fwait
adc
mov
scas
and
arpl
jp
gs
stos
out
clc
bound
data16
movs
mov
sub
cmps
lea
xor
fs
xor
in
addr16
jo
into
xchg
popf
enter
(bad)
(bad)
fstp
pop
out
cmps
add
jnp
std
aas
imul
std
fild
shl
add
jnp
call
xor
adc
int3
div
lock
cwde
cmp
xlat
aas
pop
adc
fdivr
ins
add
mov
lods
std
imul
and
call
mov
sbb
gs
jmp
aaa
add
cmc
(bad)
jmp
mov
or
or
clc
enter
mov
cwde
pop
call
addr16
fidiv
xlat
pop
xor
mov
cmc
push
fs
cmc
aad
adc
aam
xlat
xchg
push
(bad)
mov
pop
in
mov
movs
ror
imul
adc
inc
pop
pushf
push
aas
pop
std
lds
push
cmps
ds
std
pushf
fs
mov
fsubr
addr16
mov
out
aas
mov
xchg
mov
std
adc
adc
push
xchg
push
mov
sub
stos
(bad)
cli
outs
int
stos
pop
call
or
xchg
hlt
imul
or
pop
dec
adc
ret
clc
pop
jnp
ret
in
jecxz
dec
cli
das
outs
sub
retf
mov
imul
pop
push
out
retf
push
or
sbb
adc
test
call
aas
sbb
push
scas
xchg
mov
or
adc
adc
pop
addr16
and
adc
mov
xchg
mov
sbb
mov
(bad)
aas
add
xchg
ds
mov
pop
add
ficom
mov
jmp
and
sar
xbegin
fiadd
fsub
(bad)
into
ins
xchg
popf
es
je
repnz
loope
lahf
in
push
imul
xchg
xchg
arpl
sar
xor
xchg
aas
imul
imul
fidivr
inc
cli
(bad)
sbb
nop
jl
lahf
jmp
mov
cmp
ds
imul
xchg
cdq
(bad)
(bad)
add
jle
je
ret
leave
aad
retf
xchg
jge
mov
ret
fucomip
mov
mov
xor
mov
jp
push
retf
jle
sub
cmp
dec
mov
pop
push
mov
jae
dec
push
out
iret
mov
push
or
pop
movs
jge
data16
pop
mov
dec
daa
aas
sahf
fidiv
mov
xchg
int3
sub
les
jp
push
clc
movs
dec
pop
aas
sub
sti
sar
mov
pop
(bad)
cld
scas
mov
jle
jg
xchg
std
stos
retf
popf
jg
iret
movs
pop
in
in
fst
adc
iret
jecxz
jge
lahf
stos
xor
inc
lea
rcr
adc
jp
jecxz
dec
sub
cs
fdivr
mov
jno
ret
adc
idiv
mov
sar
cs
sub
(bad)
(bad)
ins
in
dec
ret
xchg
sub
in
push
mov
out
pop
clc
imul
sar
pop
fld
jle
std
iret
repz
jno
xor
dec
fild
sub
cmc
and
(bad)
jne
cli
push
xchg
outs
mov
std
aas
cmp
xchg
cld
in
(bad)
fsub
repnz
fistp
xchg
mov
xchg
sar
test
sahf
mov
pop
and
rcr
jg
outs
fdecstp
arpl
arpl
test
sar
out
inc
loope
call
mov
dec
and
pop
cmc
mov
pop
fstp
push
pop
xchg
std
xchg
inc
leave
arpl
dec
ins
push
push
jmp
jl
or
jnp
xchg
fnstsw
aaa
out
cmp
cmp
out
cmc
cmp
sahf
push
repz
jno
cdq
cmp
adc
jne
sub
out
cmp
int3
push
mov
shl
repnz
cmp
sar
idiv
jnp
and
and
xchg
in
mov
cli
call
sbb
in
out
cmps
icebp
sub
lods
xor
outs
sbb
pop
push
(bad)
fcomp
in
jge
(bad)
aas
jmp
mov
aas
test
sub
out
call
out
and
pop
jae
in
mov
mov
add
xlat
int
into
pop
ds
xlat
mov
xchg
push
cwde
out
adc
mov
pushf
shr
adc
out
jge
bnd
hlt
mov
mov
ja
sbb
loop
sti
arpl
clc
mov
push
push
jno
cmc
dec
mov
adc
clc
into
mov
out
leave
sti
sbb
div
scas
mov
cmp
and
push
push
call
mov
add
sub
inc
or
xor
(bad)
mov
jno
repz
arpl
hlt
dec
bound
iret
or
pop
mov
add
in
ja
pop
jne
cli
jl
sub
jne
aad
scas
rcl
fs
call
mov
sti
jbe
mov
cld
mov
retf
cmp
retf
mov
(bad)
(bad)
xlat
aas
inc
iret
jmp
cld
xlat
fdivr
mov
in
pop
mov
push
int
pop
popa
sti
add
xor
test
xor
popf
aas
jg
aas
cmc
repz
add
cld
in
mov
sbb
dec
mov
pop
sub
cli
aaa
xchg
pop
es
jg
sub
mov
sti
jle
jle
push
jae
add
dec
stc
adc
mov
ret
inc
out
sbb
cwde
cmp
cli
mov
or
test
stos
mov
ret
repnz
xchg
jae
aad
jne
cmp
cmp
scas
fimul
repz
xlat
push
jl
jg
popa
in
cdq
mov
jle
aad
out
rcr
clc
(bad)
cmp
jmp
add
xor
sahf
(bad)
(bad)
mul
push
addr16
mov
sbb
out
aas
stos
xchg
test
ds
push
adc
das
pop
jnp
pop
outs
mov
mov
addr16
outs
push
and
push
push
push
retf
std
jg
jmp
ins
dec
(bad)
or
mov
outs
mov
or
push
push
sbb
xchg
aaa
xchg
setno
(bad)
sbb
mov
mov
gs
movs
pop
inc
mov
das
cld
cmp
daa
stos
aam
call
pop
dec
cmp
stc
jbe
fldenv
jb
sub
std
in
popa
(bad)
jg
or
jmp
inc
pop
scas
repnz
das
ret
dec
clc
cli
jmp
cld
mov
jp
jle
jl
inc
cmp
das
add
lahf
mov
mov
mov
xor
js
ins
js
int
ds
mov
call
call
ss
xor
pop
lahf
cmp
neg
iret
fmul
ja
sub
or
fidivr
dec
lds
iret
sub
fstp
lock
cmp
jb
in
mov
mov
jnp
xchg
xlat
mov
cs
out
shl
pop
mov
mov
or
clc
mov
jl
outs
jne
jg
into
jecxz
lods
int
fisub
call
loop
ins
lahf
adc
out
dec
inc
push
cmp
adc
pop
hlt
adc
pop
aaa
test
call
and
sub
jmp
inc
ds
out
mov
sti
cmps
mov
in
sti
cld
(bad)
cld
cmp
je
nop
jmp
std
push
inc
pop
push
mov
pop
and
xchg
cmp
xchg
sti
fs
xchg
(bad)
dec
out
mov
ja
jmp
mov
dec
jns
cwde
in
pushf
mov
dec
mov
mov
std
jb
imul
outs
and
ret
cmp
cmc
xchg
jnp
mov
es
dec
cmps
pop
cs
cli
push
and
cwde
clc
adc
jge
lahf
xor
cmp
in
iret
fmul
les
lods
lahf
mov
dec
div
jmp
jae
cmp
adc
cld
ins
mov
hlt
fstp
mov
das
lahf
shr
fdiv
mov
mov
scas
arpl
mov
inc
loop
xchg
push
movs
(bad)
mov
pop
lds
cmc
(bad)
jp
jg
add
ret
retf
movs
daa
test
jle
loop
arpl
iret
pop
jge
clc
imul
(bad)
loope
out
mov
movsx
cmp
jb
neg
idiv
jecxz
push
fnstsw
jb
dec
adc
mov
or
inc
sbb
stos
loopne
(bad)
aas
push
rol
mov
adc
aaa
(bad)
xor
imul
bound
(bad)
fsubr
aas
mov
xchg
movd
mov
(bad)
cmp
pop
xchg
(bad)
fild
in
cmc
jo
cmp
rsm
pop
mov
mov
fisttp
jecxz
fnstsw
mov
popf
hlt
mov
jg
ins
aas
shl
jo
shl
outs
ds
jns
outs
(bad)
push
retf
cmp
cld
sti
mov
mov
(bad)
aad
mov
(bad)
add
(bad)
stc
xchg
dec
dec
mov
sbb
repnz
cli
inc
mov
mov
(bad)
xchg
loopne
lods
(bad)
mov
and
test
leave
retf
xchg
(bad)
push
pop
and
ds
jnp
jle
cld
inc
iret
dec
adc
jnp
call
aam
call
jecxz
popf
mov
ret
ins
push
mov
call
ficom
sar
push
push
mul
fstp
and
into
jae
inc
jmp
xor
pop
mov
or
nop
pop
std
ficomp
mov
pop
test
dec
out
cmps
aad
(bad)
cld
jmp
jle
cmp
aaa
popa
popa
ja
jmp
scas
xchg
cwde
sub
inc
icebp
lock
vxorps
das
(bad)
call
sbb
cmp
jo
imul
icebp
xchg
pop
mov
jg
punpcklbw
nop
(bad)
cmp
inc
xor
call
xor
(bad)
js
jnp
mov
(bad)
neg
add
imul
lods
cmp
and
hlt
xchg
(bad)
mov
pop
push
leave
xchg
add
dec
jmp
or
pop
(bad)
add
test
dec
test
push
leave
out
pop
outs
dec
in
jb
test
rol
sbb
cmp
inc
pop
xchg
cdq
es
and
stc
iret
jp
js
out
adc
cmp
stos
jmp
or
lock
test
pop
jmp
and
jg
pop
jmp
inc
movs
out
fadd
and
(bad)
ret
mov
jmp
pusha
mov
rol
add
movs
fimul
test
add
lds
iret
dec
repnz
test
hlt
icebp
lahf
dec
out
jnp
aas
lock
or
sbb
in
cmp
cmp
out
jmp
push
mov
jmp
sar
lahf
ins
(bad)
push
pushf
pop
fist
pop
fs
or
dec
mov
ficomp
sbb
cmp
shr
inc
das
jmp
mov
lods
(bad)
sub
outs
xor
rcr
pop
mov
pop
pop
mov
mov
inc
push
fdiv
push
mov
fwait
push
jns
xor
jle
mov
add
les
adc
cmp
push
dec
and
fdiv
ins
call
out
gs
fwait
xchg
push
sub
fs
sub
mov
mov
jmp
jne
test
dec
and
mov
jp
pushw
mov
(bad)
sbb
outs
mov
pop
xchg
mov
in
out
adc
(bad)
mov
popa
ja
mov
das
pop
cwde
pop
cmp
jo
rcr
cli
out
ss
call
icebp
movs
pop
cmps
nop
ret
not
int3
dec
imul
xchg
mov
movs
rcr
mov
push
pop
clc
stc
pop
xchg
pop
cmps
xchg
ror
scas
(bad)
mov
mov
inc
lods
mov
stos
inc
call
sub
in
jno
mov
outs
fidiv
idiv
inc
shr
(bad)
jae
test
xchg
cmp
jg
xchg
xchg
push
in
gs
xchg
xlat
mov
cwde
lds
popf
pop
pop
push
sub
test
inc
stos
(bad)
mov
(bad)
xor
aaa
jp
dec
cmps
mov
scas
sub
fs
sbb
xchg
adc
cld
xchg
sbb
clc
xchg
lea
loope
inc
pop
imul
pop
jb
cmp
imul
mov
dec
mov
shl
fs
pop
in
jl
adc
jo
cmp
inc
cmp
inc
cmp
pop
js
call
xlat
iret
jmp
and
mov
cs
ds
fstp
pop
sub
ss
dec
and
stc
xchg
mov
mov
adc
or
xchg
sub
fmul
or
aaa
pop
inc
sbb
xchg
pusha
mov
xor
les
inc
jecxz
into
jge
fild
push
mov
jne
inc
jns
fwait
scas
dec
scas
jmp
push
inc
gs
mov
adc
mov
sub
(bad)
jmp
push
jmp
pop
xorps
push
adc
xor
xor
sbb
push
rcr
in
or
and
in
icebp
rcl
test
jge
stos
lods
repz
cdq
xor
xchg
bound
mov
arpl
cwde
jno
fimul
inc
out
and
je
scas
mov
mov
cmp
scas
mov
jg
scas
fmul
mov
mov
jg
sub
(bad)
repz
jecxz
(bad)
push
jb
jno
int
ins
adc
sahf
aad
mov
jnp
lahf
cmps
ret
in
shr
pop
jbe
popf
inc
out
pop
idiv
cmp
popf
aam
cmp
in
hlt
(bad)
xlat
fs
sbb
add
jae
mov
jo
call
pop
mov
sbb
test
cmps
enter
pushf
xchg
jb
jge
sbb
or
rcl
fcom
xor
and
out
das
sahf
movs
imul
add
retf
cld
add
sbb
mov
xchg
inc
xchg
iret
dec
pop
jmp
(bad)
mov
push
stos
lods
retf
clc
sbb
sbb
in
and
scas
push
test
cmp
aaa
or
in
xor
sar
mov
int3
adc
jbe
jae
retf
xor
mov
ficomp
add
mov
push
fstp
adc
inc
push
imul
ror
mov
cmp
mov
shr
add
mov
fwait
mov
sbb
or
in
mov
push
cli
mov
jnp
cmp
sbb
xchg
dec
xchg
dec
cdq
fwait
jp
cmp
je
popf
dec
mov
fidiv
adc
(bad)
into
addr16
pop
add
movs
rol
fwait
int3
(bad)
call
xor
sbb
fnstcw
pop
fs
cmp
jns
sbb
pop
scas
int3
inc
mov
mov
je
mov
mov
cmps
ret
add
xchg
sub
into
lods
and
push
sar
sub
test
es
(bad)
int3
mul
imul
leave
gs
fimul
xor
push
push
pop
(bad)
ficom
test
arpl
sub
retf
and
push
jb
cdq
and
push
mov
jae
jb
mov
mov
inc
dec
xor
movs
xor
fadd
pushf
cmp
mov
lds
(bad)
fmul
inc
and
(bad)
cmp
lds
mov
ret
dec
es
call
lods
sub
jle
loop
jle
mov
lods
loope
arpl
enter
push
xor
sub
(bad)
jo
pop
jge
arpl
pop
aam
sbb
pop
xor
pushf
dec
inc
push
jb
pop
jns
sub
push
(bad)
pushf
xor
pop
push
push
mov
cmps
xor
retf
add
jns
push
ret
lds
retf
(bad)
push
mov
mov
or
cmps
dec
xchg
push
cld
fdivp
xchg
push
int
rol
add
ror
dec
jbe
mov
mov
iret
cmp
jae
repnz
and
mov
mov
fdivp
icebp
or
out
faddp
xor
mov
or
cwde
push
adc
and
jecxz
cmp
repz
iret
int3
cmp
into
into
jmp
in
xchg
mov
dec
out
push
arpl
aad
loop
out
jecxz
mov
mov
push
sub
fwait
sub
lds
out
retf
cdq
hlt
pop
mov
jl
fsubr
push
dec
mov
ins
sar
xor
push
xor
daa
out
adc
mov
loop
ins
mov
jl
cmp
push
ds
push
push
pop
popa
inc
aad
push
nop
mov
hlt
mov
xchg
jns
jp
loope
xchg
outs
retf
mov
jns
mov
mov
sbb
jl
push
lock
push
sub
push
(bad)
or
movs
fldenv
push
in
mov
dec
cli
enter
popf
mov
fisub
xchg
ds
push
shr
daa
fxch
pop
scas
cs
lahf
inc
mov
xor
aas
test
aam
ins
sub
dec
jmp
mov
dec
and
xchg
pop
adc
cli
je
jmp
mov
jne
loopne
push
or
in
fwait
jbe
cs
movs
retf
sbb
int
pop
std
push
sub
inc
jne
ja
jbe
outs
imul
mov
call
pop
lea
inc
ja
bound
int
mov
inc
fsubr
mov
stos
cmps
cmps
push
cwde
aad
push
push
addr16
xor
dec
jl
mov
cmps
ret
push
repnz
repnz
ins
dec
push
(bad)
and
cmp
pop
push
dec
jl
jl
dec
inc
into
pop
jmp
jmp
scas
shl
sub
sub
bound
lods
and
inc
std
push
retf
jle
pop
mov
(bad)
pusha
loopne
mov
pop
pop
mov
ja
popf
lds
call
and
jmp
push
pusha
(bad)
xor
cwde
icebp
xchg
idiv
(bad)
(bad)
jmp
repz
icebp
aaa
les
sti
add
jge
aas
cmps
movs
hlt
into
clc
mov
pop
out
rcl
cli
mov
adc
cwde
xchg
cmp
push
(bad)
ss
ret
ins
xchg
add
sub
fisub
pushf
adc
jno
jnp
xchg
and
add
inc
and
and
sbb
push
push
inc
repz
jmp
push
sbb
out
or
call
xchg
mov
clc
jp
sub
xlat
popa
mov
sub
(bad)
rol
mov
pop
jbe
mov
push
cs
cmp
xor
std
mov
retf
push
sbb
sbb
and
mov
xor
iret
pop
aaa
add
jne
push
hlt
ret
mov
ret
pop
sbb
jl
scas
sahf
(bad)
mov
in
mov
das
mov
ror
xor
dec
cmc
dec
inc
mov
enter
pop
(bad)
fdivr
jge
add
sbb
sub
ja
push
pop
sahf
xchg
les
out
xchg
repnz
sub
mov
aaa
ja
inc
push
inc
push
xor
sub
cmp
mov
inc
fld
ret
sub
ret
sti
add
daa
test
push
mov
mov
and
inc
call
ds
jmp
mov
clc
mov
inc
cmps
iretw
mov
pop
or
fsub
and
ds
lea
sbb
mov
jae
test
imul
ins
mov
push
ds
(bad)
les
aaa
xor
or
sub
cld
add
call
adc
push
sbb
gs
cli
xchg
sbb
push
into
iret
shl
jecxz
movs
outs
and
xor
pop
push
inc
xchg
adc
scas
cmp
mov
sbb
inc
cmps
cmp
xor
and
jne
adc
iret
pop
and
sbb
xor
movs
inc
rcl
dec
fs
(bad)
gs
cdq
sbb
les
rcr
dec
pop
inc
(bad)
popa
mov
and
jecxz
cli
inc
hlt
cmp
ret
fcmovu
fadd
dec
ffree
dec
pushf
popf
adc
adc
pop
(bad)
xchg
mov
add
mov
xor
retf
sub
jp
pop
sbb
push
xchg
xor
inc
pop
pop
add
mov
mov
test
test
stos
sbb
repz
or
pop
rcr
lods
shl
cmp
or
jmp
lods
or
in
sbb
enter
sbb
mov
push
pop
pop
cmps
pushf
movs
ja
sbb
dec
cmp
movs
and
imul
or
add
repnz
jb
arpl
aaa
cmp
push
test
test
js
mov
lds
sub
sbb
gs
xchg
and
dec
aad
cli
cmps
mov
scas
and
pop
mov
lahf
loope
out
(bad)
push
lods
out
sub
add
push
shr
outs
shr
popf
call
dec
retf
mov
movs
test
cwde
arpl
mov
fld
(bad)
cmps
jmp
jae
pop
xchg
push
sub
sbb
push
ret
push
add
mov
dec
(bad)
fidivr
jmp
pop
dec
mov
mov
hlt
arpl
icebp
mov
jno
mov
or
sub
push
pop
es
movs
mov
cdq
int3
gs
rol
pushf
das
stos
out
cmp
sbb
movs
mov
test
stos
mov
cli
js
jbe
cmp
or
jb
jl
inc
ret
sub
je
div
pushf
cld
push
cmp
cld
xchg
loope
sbb
mov
or
aad
adc
addr16
pushf
(bad)
pop
xchg
gs
sub
dec
cld
mov
in
fwait
imul
sti
leave
aam
(bad)
pop
out
(bad)
cmps
ja
push
loop
out
gs
fsub
jp
pop
adc
sub
push
je
dec
xchg
mov
push
(bad)
dec
push
sbb
addr16
jecxz
test
inc
mov
add
fadd
repnz
xlat
and
pop
mov
daa
gs
jecxz
loop
imul
add
xchg
sahf
dec
sub
sahf
xchg
inc
mov
out
test
nop
sub
cmp
adc
pop
mov
and
(bad)
jmp
cmp
inc
xchg
shr
sar
out
add
mov
lock
ss
xchg
add
xchg
sbb
inc
movs
scas
js
mov
cs
and
push
ret
and
push
and
pop
add
ja
sub
pop
popa
pop
cmps
cwde
fdiv
(bad)
push
mov
sbb
adc
sbb
lock
imul
out
stos
jo
int
push
xor
and
dec
call
push
xlat
(bad)
cdq
push
push
or
mov
clc
adc
jnp
js
and
movs
xchg
inc
fwait
call
gs
push
es
pop
mov
adc
enter
jnp
call
fwait
dec
in
dec
sahf
jge
jl
cdq
jnp
mov
call
jp
js
and
int3
dec
sbb
jbe
mov
mov
pop
test
ds
mov
test
pop
mov
cwde
jno
or
jl
(bad)
mov
xchg
mov
mov
pop
xchg
(bad)
pop
mov
in
clc
mov
lods
popf
sub
push
leave
jecxz
jno
retf
adc
mov
or
adc
and
int3
clc
add
mov
into
arpl
stos
push
mov
sbb
xchg
mov
sub
inc
mov
mov
add
(bad)
(bad)
sahf
cmp
push
int3
dec
and
inc
jo
into
retf
cs
rcl
out
ins
out
mov
jmp
jecxz
(bad)
pop
mov
lds
stos
pop
mov
pop
dec
push
pop
ror
cmps
js
iret
adc
push
and
push
hlt
jmp
retf
push
jg
call
test
movs
pop
push
(bad)
repnz
sub
mov
jns
pop
rol
(bad)
cmps
rcr
xchg
test
adc
or
push
xchg
inc
sbb
movs
or
and
pop
adc
mov
ds
mov
addr16
mov
mov
(bad)
rcl
xor
ja
cdq
ret
sti
popf
out
pop
arpl
das
stos
popf
xchg
mov
inc
outs
mov
xchg
mov
inc
push
adc
ins
fnstcw
gs
and
sub
push
push
cmc
pop
adc
out
movs
fdiv
retf
pop
(bad)
mov
imul
ss
aam
in
mov
(bad)
movs
cs
cwde
mov
dec
mov
stc
mov
fwait
lods
xlat
aas
cmps
aaa
cdq
cwde
gs
dec
pusha
xchg
sub
jb
call
mov
add
test
call
lods
xchg
mov
int3
ror
fdiv
imul
mov
mov
test
cmp
mov
cmp
and
call
test
xchg
retf
sub
mov
(bad)
call
cli
mov
mov
ss
in
stos
cmp
sbb
mov
dec
jp
pop
xchg
cmp
or
clc
popa
jmp
xchg
ins
and
xor
addr16
(bad)
sahf
outs
out
cs
mov
je
adc
leave
mov
pop
inc
in
sti
stos
cmp
loope
sahf
or
xchg
ja
(bad)
cmps
dec
xor
popf
xor
adc
call
popa
jnp
leave
cwde
push
xchg
and
pop
lods
dec
adc
ds
jo
cmp
cmc
sbb
js
mov
xchg
jl
xor
pop
out
imul
push
adc
push
inc
mov
popa
pop
and
xchg
sub
cmp
xor
sbb
cmps
mov
sbb
and
aas
mov
pop
cmp
repz
arpl
mov
das
in
sub
pop
jg
sahf
pop
inc
sbb
adc
addr16
in
jbe
ror
bnd
int
fsub
jmp
lds
xchg
add
cmp
xchg
dec
fnstsw
sbb
dec
sub
sub
push
xchg
aas
dec
inc
cmp
sub
test
pop
mov
mov
mov
repz
std
dec
cmp
adc
push
stc
pop
push
and
sbb
mov
push
fs
mov
jecxz
jns
mov
or
lock
xchg
inc
outs
xor
enter
xchg
or
cmp
rol
xor
addr16
and
in
mov
xor
inc
mov
arpl
nop
push
push
pushf
cs
das
mov
ds
dec
jmp
ret
sbb
push
(bad)
(bad)
xlat
das
fisubr
fild
push
cmp
fstp
push
cwde
jmp
jb
jg
movs
mov
mov
je
call
adc
add
mov
nop
movs
xor
outs
dec
mov
pop
ret
jl
ficom
fwait
aam
jp
call
dec
mov
loope
and
loop
imul
das
lock
pop
aaa
add
sub
jl
stos
aam
dec
xor
in
and
nop
jl
sub
gs
sar
mov
bound
ficomp
and
repnz
(bad)
mov
jge
popf
aas
lahf
mov
test
mov
lods
nop
(bad)
test
arpl
fdiv
or
dec
inc
nop
popa
lahf
sub
xor
xor
ins
cmp
fidivr
jg
mov
dec
add
pusha
test
std
lea
lahf
gs
xchg
hlt
mov
push
std
jns
or
fadd
sti
movs
test
mov
ror
cwde
test
out
rol
mov
call
repz
mov
dec
inc
test
stos
ret
loope
jl
sub
bound
ins
imul
cwde
and
and
shr
test
xlat
add
xor
mov
xor
je
jae
jne
or
pop
jmp
pop
adc
jb
lods
aaa
jb
call
sbb
mul
lea
pop
cmp
mov
mov
xlat
aaa
in
add
sar
loop
out
lods
bound
sbb
sbb
mov
add
xor
inc
js
ss
mov
pop
mov
xor
mov
jmp
jecxz
scas
jns
dec
fisttp
mov
stos
push
ins
imul
mov
out
jae
pop
aaa
aaa
bound
push
pop
imul
cmps
cmp
test
pop
xchg
ins
lods
fidiv
push
fld
fidivr
dec
mov
fwait
jno
mov
shl
mov
push
lods
ins
dec
dec
ret
repz
pop
cmp
cmps
lods
daa
pop
and
ret
push
movs
xchg
ins
shl
outs
fcom
push
mov
jmp
add
cmps
clc
mov
test
(bad)
lds
inc
jmp
outs
loope
test
out
cmps
aad
shl
sub
aaa
jne
push
sbb
pop
mov
xor
or
icebp
sbb
cmp
pop
shr
mov
dec
mov
xor
xchg
xchg
fsub
jmp
xchg
adc
cmp
jg
(bad)
repnz
push
(bad)
idiv
fadd
xchg
mov
jne
mov
sbb
les
jae
add
dec
dec
retf
mov
xor
aad
ins
xchg
xchg
jns
pop
pop
push
test
fiadd
mov
(bad)
xlat
scas
mov
cmp
sbb
leave
mov
xor
jge
pop
mov
les
or
pop
das
fld
sbb
jmp
loope
lahf
sbb
rcl
sar
or
jno
mov
ds
mov
gs
jae
fdiv
cli
aam
jge
imul
sbb
je
shl
dec
dec
ret
je
and
add
nop
inc
inc
je
or
add
push
xchg
out
retf
dec
rcl
jbe
cli
scas
or
int3
and
adc
sahf
sahf
mov
add
jbe
jle
lea
sbb
lea
inc
aaa
and
dec
push
jl
jns
femms
add
fild
and
mov
fcmovnu
ret
ret
(bad)
lds
mov
in
mov
mov
pop
pop
gs
div
add
or
xor
int
mov
mov
sub
dec
mov
or
or
push
cli
adc
enter
and
mov
jns
das
sub
test
jmp
out
sbb
cmp
dec
cmp
in
push
sub
cmp
daa
(bad)
dec
jmp
js
in
and
sar
call
sub
fnsetpm(287
xchg
stos
push
pushf
data16
push
outs
sbb
mov
lock
mov
aad
mov
aaa
imul
xchg
outs
outs
push
fdiv
icebp
sbb
pop
imul
push
xchg
mov
outs
dec
popf
outs
sub
cmps
xor
sti
fcom
sti
std
cmp
repz
call
push
sar
push
cmp
cmp
lds
out
jnp
jb
gs
shl
scas
mov
xchg
mov
jbe
mov
not
cmp
xor
jno
repz
in
fld
and
adc
xchg
xchg
xor
hlt
cs
ror
call
mov
and
retf
push
es
mov
call
rcl
pop
ins
dec
cmp
sbb
and
ret
xchg
ficomp
retf
or
inc
ret
retf
les
jmp
xor
mov
outs
dec
adc
ja
dec
dec
fwait
popf
pop
pop
int3
jmp
(bad)
stc
jg
mov
imul
cmp
iret
pop
out
jo
rcl
jmp
xchg
adc
mov
xor
mov
and
ds
das
fisubr
push
pop
repnz
arpl
repz
bswap
out
pusha
inc
prefetch
mov
imul
xor
or
movs
add
push
dec
push
lods
ret
xor
sub
pusha
or
jl
rcl
in
rol
dec
add
add
or
inc
inc
enter
xor
mov
add
adc
test
push
ror
rol
add
rol
add
loope
add
jo
add
daa
sbb
add
sbb
push
lock
test
je
and
inc
shl
sub
ror
test
and
inc
or
mov
scas
(bad)
loopne
add
clc
add
test
add
sbb
jl
add
sbb
add
enter
add
sub
mov
lldt
pop
add
in
rol
pusha
sbb
stos
fs
jo
xchg
push
sub
inc
inc
aaa
push
xchg
shl
pusha
add
push
aam
ret
inc
adc
lock
add
mov
popa
inc
add
sbb
inc
and
or
test
and
xor
or
push
ret
sbb
xchg
mov
pop
fdivr
add
ds
pusha
sbb
add
or
aam
rol
nop
or
mov
fmul
fsub
push
fadd
jl
nop
push
inc
cmp
stos
shl
test
xchg
ss
add
sbb
add
xchg
ret
inc
pop
push
xchg
sbb
sub
add
xchg
add
and
add
jb
fadd
or
pop
cmp
sub
push
and
add
lods
sbb
add
rol
sbb
cmp
ror
fcomp
shl
add
in
add
or
mov
add
jle
inc
add
test
add
sub
inc
mov
add
push
push
or
ret
lock
loopne
clc
nop
rol
and
jo
loopne
or
int3
push
loopne
push
adc
cmps
add
push
(bad)
and
and
int
lock
pusha
and
mov
(bad)
add
mov
mov
aaa
sub
or
js
mov
xor
push
add
sub
mov
lock
retf
adc
mov
pop
test
sbb
and
popa
ror
push
dec
pusha
and
ret
xor
loopne
sbb
test
sub
rol
mov
lock
add
sbb
inc
shl
and
add
ins
rcr
mov
mov
or
add
xor
xor
and
fstp
dec
add
and
inc
adc
fmul
mov
sbb
adc
clc
cmp
add
imul
adc
push
mov
sub
add
ror
das
sbb
sbb
add
sbb
adc
pop
add
loope
push
xchg
cmp
push
sahf
pusha
mov
pop
in
and
adc
or
out
dec
add
ret
push
sbb
add
sub
rol
fadd
xchg
and
add
push
cwde
lock
add
inc
adc
or
lock
inc
and
push
pop
add
or
movs
loop
call
sub
rol
pop
sub
xor
add
and
push
push
add
push
lahf
loopne
add
shl
or
into
cmp
sub
push
nop
pop
mov
inc
sbb
add
outs
cmp
inc
mov
inc
mov
add
cmp
hlt
pop
add
pop
mov
and
sbb
add
add
or
jo
add
xchg
jo
xchg
xor
inc
and
lock
and
xchg
call
push
loope
out
rcl
in
mov
pop
xchg
mov
ja
jno
mov
xchg
push
add
xor
(bad)
mov
jns
inc
push
push
(bad)
pop
cmp
popf
pop
xlat
int
aad
out
fnsave
sbb
push
mov
imul
mov
arpl
xchg
pop
mov
push
xor
xchg
call
push
mov
xor
cli
call
mov
sbb
inc
aaa
lea
div
jnp
cs
dec
xchg
cmp
jns
mov
push
cld
ds
sbb
push
fwait
pusha
jb
push
fbld
into
xchg
push
jmp
mov
adc
pop
cmp
fnstcw
mov
es
xchg
adc
dec
pop
pop
retf
jle
mov
lock
int
and
sbb
dec
dec
out
add
out
(bad)
lods
movs
out
dec
fldcw
movs
mov
imul
mov
std
xchg
inc
pop
push
sbb
(bad)
sub
jo
int
sbb
shl
dec
inc
rcl
jnp
mov
aaa
xor
mov
sbb
in
hlt
jns
in
mov
test
cli
sub
ds
dec
inc
jmp
ret
inc
mov
adc
imul
push
stos
sub
sbb
(bad)
shl
(bad)
push
dec
xchg
sub
cmp
cs
jne
pop
pop
inc
push
outs
arpl
pop
pop
inc
push
sbb
cwde
sub
push
jne
rcr
leave
sbb
sahf
sti
ret
aad
leavew
arpl
bound
fild
clc
shr
dec
cmp
cdq
(bad)
mov
(bad)
mov
int3
scas
outs
mov
dec
call
call
inc
adc
sbb
pop
cwde
cs
test
jle
imul
or
cmp
mov
(bad)
fwait
repnz
leave
enter
cmp
xor
gs
jne
rcl
inc
inc
in
ret
ja
ss
mov
jns
je
jbe
inc
es
sub
fucomip
dec
push
cs
ins
pop
int
ret
inc
cmps
imul
mov
retf
ret
mov
xchg
inc
mov
pop
lods
jb
js
sbb
mov
pushf
xor
shr
es
sub
arpl
movs
cld
mov
pop
stos
push
inc
fcmovnb
out
outs
cld
stc
pop
fimul
lea
sub
and
jno
jns
dec
dec
pop
pusha
sbb
xor
mov
pop
pop
pop
pop
sub
out
dec
sti
push
dec
jae
push
dec
int3
ret
push
call
inc
mov
adc
push
(bad)
repnz
jno
mov
sbb
adc
push
js
call
into
or
sahf
xchg
mov
clc
ss
sbb
mov
popa
cmps
test
sub
push
(bad)
mov
push
stos
pop
pop
cli
into
jp
sub
repz
sub
push
jb
dec
movs
mov
jns
mov
aam
out
call
xor
nop
sub
dec
sub
arpl
and
pop
jge
dec
mov
mov
stc
jle
push
pop
jne
pop
inc
sub
stos
pop
in
mov
out
adc
mov
jmp
xor
dec
jae
iret
sub
(bad)
in
mov
pop
cmps
outs
xor
dec
retf
fldenv
js
sbb
(bad)
(bad)
jno
(bad)
sub
push
in
iret
cmps
xor
mov
scas
je
adc
xor
leave
adc
push
xor
(bad)
fiadd
ret
shl
fdivr
jb
movs
add
js
pop
(bad)
es
inc
xor
inc
mov
jno
xchg
shl
push
int3
das
push
xor
repz
arpl
cs
xor
pop
cdq
fistp
pop
pushf
ficomp
lahf
push
add
mov
adc
test
and
fisubr
fnstsw
mov
out
hlt
mov
mov
jns
push
adc
xchg
cdq
jns
mov
cmp
mov
into
mov
mov
shl
int3
sub
or
add
pop
nop
movs
mov
out
cmp
push
jnp
cmps
sub
xchg
daa
imul
clc
ja
cmp
out
in
scas
cmp
in
ins
ja
lods
mov
ins
(bad)
push
push
pop
pop
loop
jmp
xchg
xchg
fcom
(bad)
push
push
adc
aam
xchg
adc
lock
mov
mov
cmp
mov
mov
addr16
addr16
or
pop
or
ret
jo
add
xor
fmul
stc
and
dec
adc
mov
sub
mov
jb
pushw
out
addr16
cmps
xchg
call
test
dec
or
mov
mov
cmps
xchg
(bad)
daa
pop
xor
iret
mov
clc
xlat
sub
jb
aas
adc
adc
xchg
xchg
aam
dec
dec
imul
xor
sahf
sbb
outs
(bad)
adc
ret
sbb
xchg
pop
out
fidivr
ja
mov
sub
mov
xor
xchg
dec
dec
idiv
xor
add
lea
fldpi
adc
push
mov
mov
fisub
(bad)
mov
cmp
jnp
fdivrp
sub
push
sahf
inc
call
cwde
push
fsub
mov
ins
pop
mov
cdq
cmps
pop
pop
call
js
fwait
xor
mov
(bad)
cmp
sti
cmp
stos
mov
int
pop
retf
and
cmps
jns
cmp
clc
jae
cmp
outs
rep
scas
adc
jno
mov
lods
pushf
inc
ins
retf
push
mov
in
xchg
ins
dec
dec
xlat
arpl
cs
mov
cmps
stos
out
dec
out
out
mov
push
dec
aad
mov
test
jae
push
or
outs
sub
loope
test
xor
fdiv
push
jb
aad
sahf
mov
push
mov
and
ins
ret
xchg
mov
imul
cld
hlt
fsubrp
movs
arpl
push
jne
scas
xchg
pop
and
(bad)
out
js
or
inc
iret
jb
out
mov
pusha
xor
mov
and
and
fwait
mov
repz
sbb
test
into
dec
test
pop
push
jbe
and
dec
jns
cmps
add
das
mov
adc
or
push
cdq
arpl
cmp
jecxz
or
push
sti
push
fcmovnbe
mov
in
push
aam
jmp
mov
xchg
popf
xor
shr
mov
loop
cmc
and
xchg
jne
loope
adc
push
fdiv
inc
ins
es
fsubr
pop
cdq
cmp
xor
xchg
pop
inc
push
xlat
lods
pop
sbb
aam
pop
mov
or
fisubr
aam
aaa
pop
pop
cmc
sbb
adc
repnz
mov
cmp
jmp
mov
jge
jg
jl
dec
push
out
dec
xchg
xchg
mov
je
and
mov
fst
mov
daa
cmp
jl
jne
push
xchg
ins
sahf
pop
mov
bound
aad
xor
push
sub
sbb
mov
cmp
mov
nop
fsubp
mov
xchg
stos
cmp
xor
data16
scas
sbb
int
push
ficomp
cli
push
jmp
sbb
adc
mov
and
or
ss
add
add
and
pop
in
in
push
loop
dec
mov
dec
ror
pop
out
sti
nop
mov
xchg
daa
repz
fbstp
dec
cli
aaa
and
dec
fwait
sub
ins
pop
or
in
fst
or
(bad)
and
jmp
mov
adc
xlat
loope
xchg
lds
mov
int
xchg
sbb
xor
mov
in
cmps
pop
jle
icebp
int3
outs
es
test
mov
mov
xchg
pop
cmp
cwde
jl
arpl
imul
sbb
sahf
jb
push
inc
enter
and
stos
rol
dec
push
lods
sbb
mov
dec
(bad)
out
push
mov
mov
into
leave
into
cmps
ja
fisttp
sub
push
push
push
mov
das
cli
retf
aam
pmulhuw
out
adc
add
add
test
fwait
fwait
popa
mov
cli
test
movs
jns
jno
stos
rol
or
and
adc
mov
neg
loope
adc
fs
or
add
push
mov
jmp
test
inc
and
(bad)
sub
sub
shr
xor
das
pop
jae
pop
imul
mov
jno
push
rcr
xchg
add
enter
add
ret
dec
pushf
call
(bad)
adc
jmp
aas
out
psllw
stc
sar
ds
and
mov
pop
mov
cmps
pushf
fimul
push
outs
sbb
ins
jp
add
adc
int
inc
call
sub
pusha
popa
or
cmpps
dec
sub
lods
sbb
repz
cmps
std
(bad)
cmc
push
hlt
xchg
jmp
femms
call
out
aas
inc
adc
mov
push
pop
mov
inc
aas
mov
popa
xor
aaa
daa
sbb
call
pushf
repz
or
shl
das
inc
jg
cld
dec
js
xchg
pushw
lods
in
mov
pop
ds
cli
popa
adc
xor
mov
outs
imul
(bad)
dec
mov
jle
retf
shl
jle
cmps
xchg
shl
das
pop
call
push
int3
cmp
bswap
adc
iret
and
scas
dec
pop
(bad)
and
pop
pop
inc
pop
mov
and
(bad)
push
retf
sub
fld
pop
xchg
push
pop
aam
jo
sub
in
pop
stos
(bad)
xchg
nop
dec
out
sub
mov
shl
jge
add
js
mov
adc
jno
adc
inc
sbb
fiadd
jo
push
jno
adc
data16
call
fs
sub
pop
xchg
retf
xchg
repz
inc
inc
adc
cmp
pop
xchg
mov
or
and
sub
sar
inc
push
jno
dec
xchg
xor
or
cmp
push
test
mov
sbb
jbe
dec
mov
jo
xor
inc
test
scas
mov
pop
jne
add
adc
push
sar
push
das
es
fdiv
xor
lea
js
xor
inc
xchg
stc
dec
jp
test
sub
cdq
push
xchg
iret
scas
cmp
xor
lds
lods
mov
and
mov
jl
scas
mov
add
daa
in
and
mov
pop
jp
out
mov
sti
rcr
fwait
stos
jl
dec
(bad)
jbe
daa
push
jmp
mov
sub
aam
and
or
sbb
push
mov
mov
cdq
jno
mov
or
sub
inc
out
repnz
mov
cmp
ds
dec
xor
jmp
stos
mov
mov
push
test
mov
xchg
push
icebp
push
add
movs
cmp
jne
movs
cli
pop
int
xchg
sub
les
xor
inc
or
and
mov
push
pop
mov
clc
xor
xor
dec
cmp
jne
cmps
dec
mov
pop
xchg
out
mov
test
xchg
pushf
(bad)
mov
pop
icebp
push
dec
cmp
push
lock
in
jno
popa
xor
call
push
cmp
xchg
outs
ss
or
or
lods
adc
enter
jae
cmp
icebp
std
dec
push
cwde
test
adc
ja
popa
fld
push
call
out
sub
jbe
out
pop
push
das
pop
jae
idiv
mov
arpl
sub
rcl
or
pop
imul
sub
xor
test
sub
mov
int
cmp
sub
fisttp
add
cs
(bad)
push
stos
and
iret
pop
dec
sahf
xchg
or
dec
inc
cs
outs
cmp
movs
jmp
mov
cdq
sbb
stc
mov
add
inc
cmp
mov
push
xchg
in
leave
cmp
sub
inc
jo
adc
jg
pop
out
dec
dec
call
ret
stc
pop
sbb
test
sbb
ss
mov
fucomi
mov
aas
mov
or
out
pop
and
mov
ret
(bad)
jne
jno
jbe
pop
add
out
cmps
dec
inc
cmp
daa
jl
pop
clc
pusha
or
popa
adc
fisttp
ror
and
jo
push
sbb
cli
push
dec
jge
out
mov
in
mov
push
aaa
jecxz
dec
pop
sbb
mov
in
sub
xchg
sahf
fcom
mov
push
iret
adc
aam
inc
retf
fsub
shl
cs
cmp
xchg
in
pop
mov
loop
fcom
jecxz
inc
cmp
sbb
sub
mov
dec
jo
aam
mov
mov
push
mov
xlat
lds
lds
add
ret
add
pop
xchg
in
das
aam
adc
pop
sbb
sbb
jmp
mov
jnp
inc
pop
sbb
(bad)
leave
or
lock
dec
mov
sbb
pop
push
cmps
out
sub
fcom
outs
sub
inc
sbb
jae
imul
push
shl
fs
jb
call
xchg
inc
pop
push
mov
sbb
or
add
jnp
addr16
out
jnp
push
retf
bound
call
rcl
movs
cwde
mov
add
adc
inc
pop
cs
cs
sbb
in
mov
fnsave
out
cmp
dec
jns
add
bound
mov
out
sbb
or
fst
add
xchg
fimul
xchg
dec
inc
jbe
add
cmc
add
enter
mov
mov
sbb
cmp
mov
out
cmps
mov
popa
shl
sub
add
gs
jecxz
in
mov
jbe
iret
dec
das
ret
retf
push
inc
jmp
ds
cld
adc
popa
jbe
popa
dec
pop
retf
(bad)
les
out
add
ja
in
pop
jl
aaa
cmp
sbb
pusha
data16
sbb
pop
sbb
and
cs
addr16
xchg
lahf
cmp
int
aaa
mov
add
push
sbb
sbb
jb
mov
sub
mov
shr
push
mov
dec
cmps
ret
sbb
cld
push
xchg
nop
inc
outs
cld
rcr
xchg
call
adc
adc
std
mov
jo
and
mov
scas
cli
cld
push
call
xchg
pusha
xchg
retf
or
xor
in
xlat
inc
push
mov
ret
aaa
push
js
jg
js
fimul
pop
pop
loope
inc
push
mov
(bad)
fld
mov
add
add
shl
jp
daa
mov
shl
xchg
call
and
(bad)
dec
mov
jns
icebp
lahf
mov
mov
les
add
stos
add
jmp
cwde
std
inc
mov
xlat
out
pop
pop
shr
sub
lock
out
jbe
pop
outs
pop
pusha
pop
fdivr
loopne
ret
rcl
mov
call
inc
sbb
pop
nop
pop
inc
loope
jno
in
aad
addr16
out
dec
movs
enter
mov
mov
add
push
adc
test
xchg
add
adc
sbb
dec
push
push
icebp
dec
ror
sbb
adc
xchg
sub
dec
xchg
sbb
mov
or
sbb
push
cmc
jp
jecxz
test
daa
lahf
test
mov
mov
mov
fstp
push
mov
sbb
(bad)
aaa
(bad)
jg
loop
inc
loopne
jp
and
mov
cmp
jae
dec
in
add
sbb
mov
fnsave
cmc
push
and
cwde
inc
int3
mov
push
(bad)
arpl
xor
mov
add
push
xor
outs
pusha
push
test
dec
out
imul
sbb
xchg
aam
cmc
push
add
data16
pop
mov
in
ja
call
xor
cmp
mov
jp
jge
cmc
iret
in
(bad)
mov
and
pop
push
and
push
std
ins
lahf
aam
hlt
lahf
jge
outs
dec
pop
jle
pshufw
or
mov
add
movs
(bad)
push
and
pop
mov
sahf
adc
and
jmp
sub
mov
pop
push
cmc
out
test
and
bound
fcom
cmp
xchg
pop
in
movs
inc
movs
inc
sub
cli
cmp
js
enter
jle
out
rcl
jl
sbb
xchg
mov
and
mov
or
adc
scas
push
cmps
push
jne
xor
mov
add
mov
lahf
xchg
adc
stos
test
stos
adc
dec
inc
jecxz
inc
xchg
cmp
pop
arpl
sbb
pop
imul
xor
xlat
loope
call
icebp
sub
popa
pop
movs
ficom
sub
mov
pushf
sub
and
daa
int
setge
xor
mov
adc
xchg
xor
leave
mov
out
cli
movs
enter
fsub
xor
mov
fcmovne
inc
jmp
pop
jecxz
cmp
int
sbb
je
mov
int
adc
pop
xor
pop
jbe
adc
and
jmp
sahf
jecxz
jne
test
aaa
jge
push
mov
push
inc
out
push
mov
out
in
enter
push
retf
mov
cdq
sub
cmp
fs
sbb
push
pop
stos
in
(bad)
fcom
mov
inc
cmc
sbb
(bad)
xchg
inc
not
pop
sub
das
retf
cmps
mov
pop
es
stc
ud2
shr
sbb
xor
push
push
ret
popa
int3
add
cdq
fimul
fwait
or
add
dec
xor
xor
dec
data16
sbb
cmps
xchg
je
sub
or
xlat
cli
inc
fld
push
scas
mov
xor
loope
(bad)
fist
mov
scas
mov
enter
pop
cmps
mov
xchg
loope
push
pop
mov
sub
cmp
or
pop
out
pcmpeqw
pusha
jmp
cmp
pop
inc
ret
ins
gs
movs
jne
cs
lock
dec
push
inc
or
xchg
aad
scas
das
(bad)
cmp
out
sbb
mov
jmp
cmps
stc
cmp
mov
inc
cmp
or
imul
ret
xor
jg
mov
repnz
sbb
scas
rcr
push
fbld
jmp
mov
call
retf
push
in
push
inc
pusha
cdq
jmp
lock
(bad)
cmp
rol
leave
jl
and
sbb
xor
int3
cmp
push
push
cmp
int3
js
outs
xchg
push
mov
mov
ins
inc
jl
mov
inc
sti
sub
ins
out
fsub
out
inc
jecxz
pop
cs
out
jle
sub
push
fwait
mov
dec
sti
jns
leave
shl
add
cs
ror
stos
frstor
iret
xchg
dec
pop
cmc
add
sub
nop
xor
ret
xchg
adc
stos
cwde
pop
test
fistp
ret
lock
add
popa
inc
ja
jno
cdq
and
aaa
push
xor
in
push
pop
add
dec
call
scas
div
jb
adc
sti
and
in
sub
data16
rcr
sbb
fstp
and
test
das
xchg
out
cmc
mov
cmp
(bad)
bound
bound
sub
cmp
add
push
inc
retf
xor
inc
sub
mov
mov
fisub
daa
ja
jo
into
fwait
add
push
inc
mov
icebp
sbb
icebp
loop
rol
test
push
cmc
test
mov
sbb
popf
in
and
inc
inc
mov
sub
aam
mov
mov
sbb
cmc
aam
xor
sbb
retf
ins
dec
cmps
xchg
ret
push
cmp
fs
sti
test
dec
cmc
lods
daa
rol
mov
xchg
idiv
fisub
out
push
xchg
sbb
sub
or
push
xor
add
add
add
jmp
enter
cmp
shl
add
test
add
add
xchg
push
adc
dec
sbb
cmp
jno
and
(bad)
cmp
inc
xchg
jge
nop
mov
outs
repnz
repnz
bnd
and
sub
js
add
sbb
adc
mov
loop
ret
rol
push
js
add
sbb
adc
loop
jmp
out
ror
jmp
mov
sbb
sub
ds
call
mov
dec
mov
dec
call
cmp
sbb
ret
adc
dec
add
jg
jbe
mov
sbb
inc
mov
shl
xchg
xchg
aas
mov
idiv
loope
mov
cmp
xor
cmp
mov
xchg
cld
lods
daa
retf
dec
mov
push
fcomp
or
push
jo
jmp
mov
repnz
cmps
retf
clc
pusha
bsf
dec
gs
jmp
rcr
jmp
cmp
fdiv
out
jp
movs
inc
in
mov
xchg
and
xlat
jecxz
mov
adc
sub
mov
push
xchg
push
es
pop
movs
cdq
movs
and
call
(bad)
jmp
sub
mov
pusha
jb
add
jno
push
xor
sbb
adc
push
sub
ror
mov
fmul
mov
(bad)
xor
pop
cdq
cli
sti
pop
das
fidivr
daa
mov
cwde
fsub
push
cmps
mov
dec
mov
xor
ins
jae
inc
imul
lahf
pop
or
ret
retf
fbstp
push
jb
loop
lock
inc
jmp
push
aas
retfw
(bad)
xor
add
rcl
mov
icebp
iret
cwde
push
ss
cmp
sub
push
inc
cs
sahf
push
ficom
dec
pop
int3
shr
sbb
fs
cmp
inc
add
jb
xor
mov
xchg
inc
xchg
adc
mov
jmp
movs
shr
xor
imul
in
test
mov
pop
or
cmp
mov
in
div
int3
pop
jmp
sbb
or
add
mov
xor
and
cmp
(bad)
xchg
arpl
loopne
fdiv
arpl
(bad)
jg
xor
mov
cmp
(bad)
sbb
push
out
das
into
add
jnp
(bad)
je
mov
lods
scas
add
aas
jae
cs
lock
shl
mov
inc
push
mov
fwait
lods
test
adc
and
fidiv
outs
ins
mov
mov
xor
push
mov
les
out
cmps
push
mov
mov
mov
out
inc
loop
ss
xchg
jle
(bad)
mov
arpl
int
jge
stos
mov
jae
hlt
xchg
jmp
dec
jecxz
mov
pop
and
sub
cmc
retf
fsubp
cmps
mov
in
daa
jg
lds
data16
js
dec
adc
push
dec
popf
call
clc
inc
out
ds
jl
movs
push
cdq
push
or
lods
rcl
call
pop
int
lods
push
push
push
in
xor
inc
dec
mov
(bad)
xor
mov
inc
es
cdq
push
adc
in
sub
inc
inc
cmp
mov
dec
scas
imul
nop
xchg
imul
jmp
(bad)
mov
or
movs
enter
shl
cmp
ja
xlat
fwait
test
pop
mov
hlt
fwait
jae
mov
push
xor
or
and
push
jo
jle
fwait
pop
or
mov
jns
pop
sbb
or
mov
lods
sbb
mov
nop
fcomp
(bad)
and
mov
mov
in
cmp
add
pushf
call
push
std
jg
and
pushf
xchg
shl
xor
xchg
addr16
aad
add
inc
add
add
call
cmc
xor
mov
das
mov
pop
ror
pop
push
mov
mov
cmp
push
xchg
push
push
loop
dec
push
add
jb
cmps
shr
(bad)
out
pop
pop
xchg
dec
pop
sub
push
outs
xor
fdivr
in
ins
leave
sar
pop
mov
int
sbb
imul
aam
inc
call
xchg
fbld
movs
rcr
xor
jne
(bad)
xlat
and
mov
icebp
scas
push
int
mov
dec
and
jne
sbb
sub
fs
push
jno
dec
sti
bswap
ret
mov
sbb
mov
sub
mov
fcmovbe
mov
pop
mov
scas
xchg
addr16
out
dec
push
out
sbb
ins
inc
repz
fist
jo
in
mov
cs
jns
jbe
inc
ret
mov
outs
popf
retf
pop
push
mov
outs
(bad)
sub
and
jnp
ret
adc
les
enter
ret
sub
mov
or
cwde
dec
and
push
fld
and
inc
fs
sbb
add
(bad)
int
js
daa
clc
ja
xchg
mov
lea
cld
or
push
xchg
call
or
stc
xor
rol
les
adc
je
nop
rol
cmp
sbb
popf
movs
test
les
(bad)
push
push
push
stc
or
mov
daa
adc
sub
movs
(bad)
les
push
inc
jmp
xchg
(bad)
and
scas
(bad)
aaa
xchg
ds
mov
xchg
test
push
sbb
jno
and
pop
xchg
jns
setae
aas
mov
imul
adc
sahf
inc
iret
retf
sub
loop
pop
lahf
inc
add
in
cmp
xchg
lahf
jl
sbb
das
jne
pop
push
mul
add
mov
call
(bad)
ins
int
jg
les
stos
cdq
push
sbb
adc
fldcw
rol
jmp
adc
jne
pop
and
add
cmp
push
push
jb
popa
test
int3
inc
icebp
das
mov
and
aas
jb
in
test
push
xchg
adc
push
sbb
rcr
(bad)
lea
mov
mov
sbb
cmps
mov
dec
jmp
std
dec
popf
pop
arpl
pop
dec
and
jp
and
loop
out
push
xchg
mov
or
jbe
aad
or
sub
jne
mov
cdq
mov
sbb
sbb
repz
push
daa
dec
movs
pop
aas
scas
mov
mov
rol
es
mov
inc
pop
mov
adc
(bad)
mov
or
push
xchg
adc
adc
push
ficom
cmp
int3
stos
adc
enter
xchg
xor
in
gs
je
or
fwait
jmp
push
dec
bound
pop
je
xchg
cld
dec
cmps
rol
and
(bad)
mov
xchg
mov
mov
dec
mov
sbb
fldenv
retf
sbb
shl
loope
inc
dec
stos
icebp
mov
adc
pop
mov
xchg
inc
scas
call
push
or
xor
xchg
cmp
data16
dec
imul
and
or
loopne
repz
or
out
add
sub
sahf
jle
xor
popf
(bad)
jecxz
pop
dec
minps
and
movs
pop
jno
iret
mov
getsec
mul
mov
or
addr16
mov
add
push
xor
and
sub
and
cld
add
inc
rcl
cmp
cli
sbb
(bad)
jbe
push
lea
and
jns
sub
or
into
inc
inc
aaa
pop
out
adc
mov
lods
push
fs
mov
div
shr
rcr
movs
sbb
outs
mov
repz
scas
push
push
dec
arpl
mov
ja
shl
and
pusha
mov
push
mov
cmp
sub
loope
pop
or
cmp
cmp
nop
xor
outs
or
or
lds
shr
xchg
cmp
dec
out
mov
cmp
retf
std
rcl
add
sbb
xchg
and
inc
pop
pop
cli
add
add
in
in
fs
outs
(bad)
push
int3
daa
or
mov
adc
aaa
(bad)
out
mov
neg
push
xchg
dec
inc
and
outs
mov
mov
sub
adc
and
push
mov
mov
cmp
arpl
push
sbb
and
shl
repnz
mov
dec
icebp
sub
(bad)
repz
cmc
pop
xor
jb
stc
xor
xor
adc
shl
jbe
adc
test
or
mov
and
in
push
into
xchg
mov
sbb
call
mov
and
pop
(bad)
fldenv
push
dec
mov
sub
inc
int
es
das
ja
cmps
inc
adc
int3
daa
fs
ins
movs
mov
mov
fisttp
scas
std
mov
mov
fs
adc
mov
out
lock
cmp
outs
xor
sub
hlt
push
and
lahf
jp
inc
push
shl
sbb
mov
push
push
mov
push
mov
cmp
ret
pop
outs
cmp
rcl
icebp
test
push
sbb
js
cdq
sbb
mov
aaa
lea
pusha
mov
jmp
hlt
or
dec
repz
bound
aad
into
sub
aam
dec
xor
stos
pushf
dec
xchg
sahf
aam
jmp
mov
dec
(bad)
mov
lea
adc
jp
fisttp
ins
sbb
inc
sub
nop
hlt
jbe
cwde
push
fstp
sub
mov
jp
jns
rol
movs
sub
pop
jp
es
mov
mov
in
(bad)
adc
and
cmp
dec
jmp
mov
xor
mov
mul
or
fnstcw
aam
ror
cs
and
lea
xor
jno
push
inc
hlt
mov
bound
adc
cmc
fwait
sahf
jb
pop
sbb
or
pop
inc
int3
pop
push
nop
inc
add
sbb
sbb
fistp
aaa
xchg
xchg
xchg
mov
dec
aas
in
popa
or
out
scas
(bad)
jg
cmp
jp
pop
push
gs
sbb
imul
push
js
jno
leave
xchg
(bad)
xchg
mov
das
test
es
sahf
push
add
nop
pusha
adc
and
pop
and
mov
imul
pop
mov
pop
fnstsw
cmps
mov
std
pop
pop
scas
sbb
call
movs
mov
dec
jno
xor
shr
jge
sahf
cmp
dec
jae
sub
and
(bad)
mov
int
fst
add
mov
mov
int
data16
out
jecxz
cwde
das
(bad)
xor
and
clc
cs
push
inc
ins
pop
mov
jle
push
gs
push
inc
outs
or
sar
lods
xor
xor
ss
sahf
cs
xlat
push
push
neg
sbb
xchg
call
mov
cdq
xor
or
loope
dec
jbe
int3
cmp
ss
out
adc
mov
pop
jl
fwait
bnd
adc
cli
not
and
push
xor
movs
mov
mov
push
push
mov
adc
and
(bad)
or
sub
mov
adc
jae
dec
adc
jns
push
cmp
or
dec
std
je
add
fmul
xor
jb
sub
fcmovb
add
in
push
pop
inc
adc
sub
jb
call
adc
or
icebp
mov
sbb
daa
jb
jge
ficomp
sbb
pop
enter
xor
add
dec
cs
jmp
mov
cli
in
ret
std
stos
in
xor
jnp
mov
ret
repz
addr16
pop
mov
inc
mov
out
cmp
pop
pop
inc
popf
mov
or
xchg
repz
outs
mov
push
jns
cbw
mov
repz
xchg
sub
push
fwait
inc
aad
das
(bad)
xchg
sbb
in
jns
outs
loope
data16
push
les
in
scas
pop
sub
nop
push
lock
inc
sti
fs
lock
pop
call
add
add
sbb
xchg
jbe
in
js
aam
pop
jbe
test
cdq
fist
sub
das
pop
arpl
lock
das
inc
dec
mov
mov
fidivr
mov
cmp
xchg
mov
or
inc
jno
fild
sbb
inc
scas
or
xor
inc
fsub
push
inc
out
mov
jo
test
add
repnz
ins
(bad)
add
inc
test
pop
into
aas
iret
cmp
(bad)
add
imul
int3
mov
jge
xchg
jbe
mov
scas
aaa
inc
mov
test
cwde
data16
mov
in
(bad)
fimul
fild
clc
pusha
add
jge
out
movs
sahf
in
pop
push
outs
imul
aam
lods
or
push
mov
fsub
es
jo
xchg
loopne
inc
inc
addr16
inc
mov
push
outs
mov
inc
and
pop
iret
out
popf
out
call
(bad)
fild
in
in
std
retf
sbb
sub
pop
add
jbe
(bad)
nop
xchg
aad
rcr
inc
xchg
mov
dec
test
dec
or
out
and
add
adc
sbb
fld
mov
imul
emms
xchg
pop
ret
inc
jecxz
repnz
icebp
push
stc
and
inc
aas
mov
pop
inc
movs
xlat
fsub
ret
clc
inc
les
xchg
or
(bad)
cwde
xchg
mov
or
out
mov
xor
leave
sbb
mov
les
cmps
inc
jge
ins
inc
in
aam
loop
pusha
adc
repz
lahf
dec
cld
sbb
mov
popa
fcomp
xor
push
push
dec
mov
inc
pop
mov
ds
mov
bswap
(bad)
out
cmp
inc
ins
xor
cmp
cld
jbe
or
xor
repnz
or
mov
out
into
dec
in
sub
dec
jge
in
jne
inc
ss
and
mov
cmps
das
sub
pop
shl
push
add
cs
jge
mov
test
cmp
dec
cmp
cmp
(bad)
jp
lods
popf
jo
daa
retf
fdivr
popf
push
mov
dec
in
out
xchg
or
xchg
arpl
xchg
lahf
retf
push
mov
inc
js
popa
stc
adc
xor
xor
(bad)
je
call
mov
xor
stos
scas
mov
dec
ja
push
add
adc
fstp
popa
shr
fidiv
addr16
mov
xor
fsub
xor
mov
mov
retf
nop
sbb
push
ss
pop
scas
mov
std
(bad)
mov
inc
jns
test
inc
push
jmp
enter
mov
out
(bad)
lea
enter
pop
les
cdq
inc
mov
jo
add
adc
push
icebp
mov
call
adc
or
ror
hlt
cmp
js
sub
hlt
stc
pop
push
add
and
pop
inc
ret
mov
enter
hlt
(bad)
lods
(bad)
mov
mov
xor
pop
add
push
out
xchg
cmp
(bad)
cmp
out
mov
cmps
inc
push
lds
arpl
jge
and
es
cmp
bound
jae
das
jge
or
sub
ret
xchg
mov
adc
xchg
mov
fwait
sub
stc
cmp
inc
push
inc
push
xchg
cmp
das
fnstsw
or
xchg
sub
jb
or
(bad)
jmp
dec
fimul
fs
rcr
jl
sbb
mov
loope
data16
mov
or
aam
ds
icebp
mov
mov
clc
stc
push
xor
push
out
lahf
aam
fs
int
jbe
pop
push
inc
xchg
dec
mov
dec
dec
cmc
pop
pop
push
(bad)
mov
das
lea
movs
(bad)
sub
leave
xchg
fwait
push
fdiv
mov
pop
cmp
jbe
cmp
push
enter
cmp
mov
js
push
mov
out
dec
movs
test
out
push
lock
dec
xchg
jno
lahf
add
jp
dec
lods
mov
pop
or
mov
pop
jne
inc
rcl
imul
gs
add
int
out
sbb
std
repz
icebp
mov
adc
dec
shl
js
push
imul
xchg
ret
cmp
pop
movs
push
je
mov
ins
retf
in
aam
adc
sbb
pop
jae
stos
mov
sbb
gs
inc
outs
dec
adc
lock
ss
cmp
aas
adc
loopne
ret
das
sub
sbb
mov
push
scas
lock
pop
pop
push
out
xchg
push
hlt
fadd
mov
sub
sub
mov
and
xchg
jl
cmps
ror
xchg
ins
rcl
mov
rcl
or
push
xchg
(bad)
push
test
adc
outs
pusha
xlat
(bad)
hlt
hlt
nop
xor
pop
or
pop
cmps
mov
pop
cmps
ins
xor
xchg
sbb
inc
in
dec
sbb
xchg
cdq
sbb
xor
aam
jg
popa
icebp
jmp
cli
jno
sub
sub
inc
adc
cmp
cmps
(bad)
cmc
sbb
pop
test
mov
jmp
pusha
fnstsw
inc
inc
mov
out
dec
out
sbb
mov
repz
dec
xchg
cdq
xchg
xchg
and
fisub
xor
adc
movs
mov
cmc
inc
adc
shl
sub
(bad)
lods
aaa
mov
ss
aam
mov
ja
mov
xor
dec
popa
adc
imul
ret
pushf
out
sbb
aas
fcomp
sub
or
es
ss
or
inc
jecxz
aam
fsubrp
shl
cs
inc
push
push
pop
mov
jb
add
mov
cmp
push
dec
cmps
js
xchg
inc
adc
iret
dec
dec
mul
neg
lock
jmp
pop
xchg
add
sbb
xchg
mov
(bad)
scas
sub
push
je
or
xchg
popf
push
mov
adc
push
fwait
mov
push
test
dec
int3
push
enter
mov
or
imul
lds
pop
outs
jecxz
xor
out
adc
int3
fld
repnz
pop
dec
stos
(bad)
enter
mov
scas
leave
dec
xchg
cmp
inc
adc
mov
out
pop
sbb
xchg
mov
cmp
pop
cld
outs
movs
rcr
xchg
mov
out
imul
and
mov
das
cli
inc
sub
les
call
repnz
jge
cmp
jg
fld
sbb
pusha
popa
dec
mov
mov
push
ds
neg
mov
push
jl
jmp
(bad)
cmp
mov
inc
pop
inc
add
fcmovbe
push
push
sbb
imul
sbb
ins
jle
pop
out
sti
fs
ins
je
and
or
push
retf
stos
hlt
lock
imul
mov
loopne
loopne
(bad)
jmp
mov
xor
in
inc
mov
stos
sti
movs
or
test
es
shl
and
int
pop
mov
and
mov
push
imul
and
jns
in
jno
popf
sbb
shl
lea
test
and
loope
fistp
fsubr
(bad)
scas
or
movs
xor
inc
fadd
lahf
cli
imul
or
std
mov
cdq
mov
mov
xchg
inc
data16
enter
xchg
adc
arpl
jno
ret
sbb
(bad)
test
and
adc
jo
(bad)
push
mov
(bad)
mov
hlt
bnd
sub
push
mov
aad
cmps
nop
daa
xchg
lds
inc
fsub
or
cmp
or
fwait
pusha
xchg
or
add
dec
adc
pop
int
xor
cs
xchg
cld
aam
xor
out
in
mov
rcr
stos
xor
into
or
loopne
push
cmp
cs
mov
in
lock
or
xchg
ja
es
add
(bad)
jmp
cmps
mov
mov
ret
or
push
jg
xor
mov
jp
cmc
loopne
dec
sahf
xchg
xchg
mov
neg
pop
xchg
ds
lds
inc
xor
add
lods
cmps
es
imul
mov
mov
sub
imul
mov
fnstsw
ins
sub
test
call
mov
xchg
fist
cmp
adc
cld
mov
pop
cmps
mov
sahf
sub
inc
or
outs
inc
pop
movs
mov
out
out
jo
in
inc
mov
ret
imul
mov
mov
dec
aas
jp
cmp
cs
pop
cmp
in
adc
xchg
push
leave
mov
mov
jle
jo
retf
popf
sub
cmp
add
pop
ficom
ins
repnz
sub
adc
pusha
test
pop
daa
adc
nop
mov
push
ins
jmp
scas
push
outs
fimul
ds
nop
cwde
loop
push
call
xchg
mov
test
xlat
mov
fwait
xor
jl
es
icebp
ficom
fucomip
(bad)
retf
add
rcr
inc
sbb
push
addr16
sbb
adc
std
loopne
xchg
lea
xchg
test
mov
iret
mov
test
imul
xchg
(bad)
(bad)
lahf
push
shr
push
xchg
iret
js
loop
cli
xchg
popf
out
outs
dec
xor
dec
outs
adc
ror
mov
add
push
das
adc
mov
and
inc
push
mov
cmp
jb
in
enter
cs
inc
sbb
mov
in
ja
(bad)
(bad)
mov
mov
mov
loopne
ds
(bad)
xchg
bswap
imul
movs
scas
jbe
ret
inc
mov
jne
out
scas
push
retf
adc
ret
xchg
pop
xor
loope
dec
xor
outs
pop
jecxz
inc
xchg
ret
mov
and
ja
inc
vminsd
inc
inc
push
mov
cmp
not
lea
enter
mov
xchg
jmp
fimul
lds
xchg
mov
mov
mov
pop
push
retf
bound
sub
ret
mov
mul
lock
push
cmp
mov
mov
mov
jg
push
pop
inc
dec
mov
cmp
mov
and
dec
xchg
lods
repnz
loop
fisub
(bad)
pop
(bad)
fwait
ja
mov
dec
lods
push
int3
mov
les
push
sub
je
movs
gs
adc
xlat
pop
imul
add
pop
lds
inc
push
popf
xchg
xor
(bad)
cdq
aad
mov
dec
fidivr
leave
out
adc
adc
push
cld
xchg
jecxz
inc
push
xchg
arpl
inc
and
mov
xchg
cmps
pop
fistp
in
adc
or
cmp
sub
pop
aam
call
call
mov
mov
add
jmp
hlt
pop
add
add
xchg
call
sub
inc
fst
pop
sbb
xor
mov
and
into
ret
fnsave
jbe
inc
fimul
mov
daa
xlat
aad
sbb
dec
shl
int3
mov
out
es
dec
lds
push
cmp
aam
cmp
out
es
aas
mov
ss
retf
scas
call
sti
icebp
fdiv
pop
push
pop
sbb
pop
dec
adc
jnp
fbld
fst
dec
lea
addr16
fmul
sbb
sbb
movs
jp
dec
es
inc
scas
nop
mov
ret
push
rcr
mov
das
popf
push
push
je
sbb
push
sbb
add
dec
xor
pop
cwde
dec
and
cmps
xchg
call
adc
mov
outs
scas
cwde
or
mov
or
inc
ja
xor
push
push
stc
push
les
ins
mov
nop
mov
inc
push
mov
xchg
leave
ret
jns
and
jne
pop
dec
cmp
into
mov
and
xchg
and
(bad)
jle
dec
push
dec
imul
sub
(bad)
rol
jle
or
fdiv
aad
stos
inc
lahf
ins
inc
and
mov
fs
in
fsubr
dec
inc
adc
sahf
(bad)
xlat
pop
inc
inc
fs
aad
jae
data16
aaa
call
mov
pop
cmovl
xchg
popf
sub
or
js
loopne
adc
js
pop
adc
mov
lods
xchg
enter
push
mov
inc
les
xchg
push
xor
sub
push
lock
dec
test
cmp
jle
cmp
aas
mov
pop
xchg
shr
ja
stos
mov
sbb
xchg
push
das
ret
xor
loop
add
xor
ja
mov
movs
xor
shl
or
push
popf
sahf
and
mov
retf
dec
mov
sbb
jae
sahf
push
(bad)
jmp
cmp
jae
call
xchg
inc
push
or
ret
jle
add
das
ins
or
call
jo
test
pop
rcl
add
jl
in
fldenv
jg
icebp
je
jb
inc
sub
jnp
ret
add
push
pop
add
push
outs
cmps
arpl
sahf
adc
js
cmp
stos
data16
jg
dec
popa
fld
std
aaa
xchg
clc
cmps
cmp
inc
dec
xor
popa
mov
in
das
je
mov
popf
hlt
daa
popa
mov
lea
in
pop
fnstcw
outs
dec
outs
(bad)
mov
xchg
jo
mov
lds
(bad)
cli
push
push
xchg
cmp
push
icebp
xchg
pop
push
clc
ret
pop
lahf
rcr
(bad)
adc
and
imul
cmp
mov
jbe
xchg
dec
cmps
bound
es
bound
std
adc
mov
jb
stos
retf
dec
mov
out
js
pop
sub
sbb
mov
push
cmp
xchg
mov
push
mov
push
test
push
imul
mov
pop
aas
pop
cmps
ds
pop
adc
fisub
cmps
mov
ins
arpl
and
xchg
jmp
fidiv
mov
icebp
pushf
mov
aam
pop
test
inc
je
push
rol
xchg
adc
(bad)
push
cmp
push
hlt
(bad)
adc
dec
push
push
mov
push
sbb
push
neg
push
xor
mov
adc
push
xchg
jge
jns
jnp
mov
xlat
aas
jb
retf
pop
inc
mov
ja
ret
cs
push
iret
pop
jno
jo
stos
add
mov
inc
and
fcmovbe
bound
enter
adc
cmp
sbb
push
shr
mov
les
cli
out
cmp
push
sbb
(bad)
mov
dec
shr
repz
jae
(bad)
mov
add
add
pop
stc
ins
adc
and
leave
inc
jp
cmp
sub
fld
out
pop
sbb
ins
add
adc
add
les
mov
retf
(bad)
lea
test
and
xor
sbb
leave
pop
std
cmp
push
pop
aam
jl
xchg
sbb
aad
cwde
pop
sub
xchg
stos
sbb
mov
(bad)
das
cmp
cmp
in
ret
and
or
out
(bad)
jns
sahf
sub
(bad)
shl
mov
adc
(bad)
xchg
test
outs
ins
fisttp
xchg
int3
dec
push
inc
out
sti
and
jo
bound
jle
aas
sbb
int
mov
ds
adc
call
mov
and
scas
jmp
jmp
pop
dec
mov
int
arpl
jecxz
xor
popa
mov
push
xchg
cmp
mov
add
mov
pop
add
jbe
leave
add
add
pusha
lds
dec
pusha
push
lods
adc
inc
(bad)
cmp
mov
and
addr16
imul
jmp
fwait
jns
xor
xchg
lea
pop
outs
test
pop
fldpi
aaa
jl
pop
fidivr
xor
dec
or
aad
(bad)
movs
std
pop
cld
push
cli
shl
hlt
in
stos
aaa
call
cld
pop
add
shl
cli
fmul
(bad)
stc
xchg
add
mov
cdq
push
push
dec
mov
movs
stc
mov
xor
gs
pop
mov
cmp
add
push
xor
xchg
push
out
leave
ins
retf
cdq
out
ins
jo
lods
ins
pop
xor
cli
pop
es
mov
mov
sbb
or
and
mov
xlat
push
cmps
nop
pop
in
mov
xor
jo
test
add
sbb
imul
jbe
clc
mov
movs
sbb
imul
popf
stos
cmp
jg
in
cmp
dec
xor
jmp
mov
push
das
popa
pop
hlt
sar
in
(bad)
outs
xchg
(bad)
lahf
mov
bound
adc
fcomp
pop
mov
sbb
add
sub
call
mov
cs
(bad)
clc
das
out
mov
pop
push
jge
sub
cli
mov
sub
sahf
adc
ins
mov
or
xor
jbe
int3
cli
mov
cs
test
rcr
daa
adc
add
aam
pop
pop
and
inc
inc
dec
lods
out
adc
jl
int
pop
cli
mov
fadd
sti
mov
test
add
mov
scas
sbb
xchg
repz
jo
mov
pop
sbb
sar
sub
(bad)
mov
cmps
inc
cwde
imul
aas
xor
js
das
jmp
fwait
gs
retf
mov
gs
sub
xor
ret
cmps
shl
and
cmps
sub
cli
icebp
lods
shl
jl
sbb
jmp
mov
and
(bad)
rol
pop
pop
adc
fs
test
cwde
jmp
ja
imul
adc
jge
add
test
pop
mov
dec
ins
sbb
aaa
pusha
(bad)
mov
sbb
pop
ror
popa
or
jo
mov
das
leave
pop
loope
movzx
inc
faddp
cmp
add
mov
mov
lea
loop
push
aaa
cmp
jne
jno
jmp
sbb
imul
pusha
mov
daa
push
sub
cli
inc
(bad)
loop
aad
repz
aas
loop
not
frstor
movs
rcl
mov
movs
in
test
cmp
shr
dec
repnz
sub
rcl
mov
or
jge
(bad)
jo
push
jnp
sub
xchg
sub
inc
inc
cmps
dec
call
pop
js
sahf
mov
cs
outs
inc
cld
ss
vmwrite
stc
(bad)
fwait
jnp
adc
(bad)
push
or
xlat
outs
dec
jp
cdq
pop
dec
leave
or
test
(bad)
out
mov
inc
xchg
or
adc
push
adc
call
adc
outs
pop
sbb
cwde
popa
scas
mov
repz
push
xor
outs
(bad)
adc
jge
into
call
lods
add
repz
fldcw
jns
dec
repz
mov
int3
ins
mov
cs
inc
jo
in
rcr
add
loope
jmp
inc
inc
mov
sub
jmp
fld
pop
(bad)
adc
pop
inc
or
pop
inc
repz
mov
sbb
(bad)
mov
push
dec
lahf
dec
jmp
push
std
sub
movups
dec
sar
lahf
(bad)
cwde
adc
scas
ret
loopne
adc
mov
scas
xchg
xlat
or
gs
cmp
push
out
mov
stc
(bad)
dec
repnz
dec
js
jo
out
and
pusha
movs
push
scas
stc
mov
xor
xchg
pop
mov
setns
movs
dec
lods
xchg
fisub
or
and
pop
adc
inc
xchg
inc
ret
adc
mov
pop
daa
xchg
dec
nop
hlt
add
or
push
mov
bound
push
jmp
push
sahf
push
bound
or
dec
xor
lock
in
mov
xchg
hlt
pop
fild
lock
sti
inc
push
icebp
jbe
mov
(bad)
jo
enter
rol
mov
jmp
push
xchg
call
movs
in
dec
mov
push
stos
fldcw
sbb
popf
call
mov
in
xchg
fcomi
inc
sahf
into
xchg
test
jge
fcomp
sub
and
test
cdq
sub
inc
xchg
out
sti
pop
clc
scas
and
outs
push
mov
jmp
(bad)
aas
fisubr
mov
mov
sub
pusha
cmp
enter
add
cmp
(bad)
xchg
imul
push
xchg
imul
lods
add
push
inc
mov
add
dec
mov
mov
pop
jne
add
add
add
add
cwde
and
mov
std
cli
std
in
adc
xor
(bad)
xchg
mov
xchg
xchg
je
mov
cmp
ins
pop
out
cwde
(bad)
push
scas
sti
(bad)
jg
out
jle
rcr
bound
scas
pop
out
ds
movs
jg
xchg
(bad)
mov
aas
mov
repz
hlt
out
push
pop
fcomip
clc
lock
jb
and
repnz
int3
dec
int3
mov
bound
jae
or
jns
push
mul
jno
and
daa
sbb
mov
(bad)
repz
mov
add
add
mov
jmp
mov
push
sti
mov
mov
jg
xchg
inc
add
test
mov
sahf
scas
and
mov
pop
mov
ss
mov
or
int3
repz
std
push
mov
sbb
push
xor
lock
das
inc
mov
and
jg
movs
leave
mov
rol
inc
push
push
sbb
cmp
or
inc
adc
adc
push
sbb
fild
and
ror
xor
or
pop
out
or
or
push
hlt
das
je
add
cmp
lods
pop
mov
mov
iret
or
jno
lock
add
add
add
add
sub
shl
add
add
and
pop
ror
add
add
sbb
inc
add
adc
and
sbb
push
add
adc
and
push
add
sub
jmp
inc
or
sbb
lods
in
add
sub
jg
sar
add
add
fld
cmp
mov
fisttp
add
sub
inc
pusha
add
or
rcr
xor
pop
cld
cmp
jno
repnz
add
sbb
add
sti
xchg
add
add
pop
add
push
cmp
inc
pop
mov
repnz
pop
pop
shl
adc
mov
push
shr
in
mul
frstor
add
dec
(bad)
cmp
jge
xchg
aas
add
das
loopne
jle
and
and
and
pop
mul
sub
add
mov
xor
dec
pop
mov
add
push
loope
imul
inc
or
or
xor
test
outs
inc
ds
and
mov
not
push
nop
imul
sub
aaa
xchg
pop
ror
imul
push
add
int3
xor
icebp
and
adc
push
dec
adc
push
and
repnz
test
movs
sub
add
in
inc
push
fs
mov
jns
test
cli
aas
mov
imul
or
enter
or
adc
adc
pop
adc
xchg
inc
xchg
push
add
xchg
pop
pop
fdiv
loope
mov
add
ins
lahf
popf
shr
in
in
dec
pop
fs
push
mov
ror
pop
push
add
add
jns
fisubr
ds
je
jp
xlat
into
adc
(bad)
in
xor
ret
or
xchg
imul
(bad)
fcom
mov
mov
push
jle
leave
out
dec
imul
jae
and
(bad)
jmp
pop
into
es
outs
jmp
sub
or
cmps
and
nop
sub
in
retf
outs
hlt
jno
pop
jb
xchg
fidivr
je
test
add
cwde
push
fmul
in
push
in
nop
icebp
stos
sub
loop
sti
stc
jmp
dec
pop
dec
pop
aas
imul
ret
das
xchg
icebp
cwde
shl
or
clc
xchg
cmc
push
inc
nop
sti
sub
xchg
clc
and
sub
dec
cmp
pop
in
shl
sub
adc
mov
scas
and
xor
fwait
ror
sbb
mov
cmp
jmp
(bad)
sub
cmp
mov
pop
pop
fsubr
cmps
or
clc
xor
inc
(bad)
xlat
inc
gs
gs
pop
add
ret
out
popa
scas
pop
std
sub
push
or
jmp
popa
cmp
daa
(bad)
(bad)
arpl
jle
pop
jge
xor
jo
xor
cli
pop
ret
push
outs
icebp
xchg
xor
cmc
out
js
push
into
push
loope
xchg
push
add
sub
or
xchg
pusha
addr16
jl
jne
adc
leave
in
push
jl
or
imul
jo
push
jae
mov
jmp
push
test
sub
push
push
movs
push
mov
mov
mov
or
jecxz
inc
xchg
leave
xor
sub
div
(bad)
fstp
cld
mov
jl
in
jmp
adc
cmc
dec
addr16
bound
add
mov
or
ja
cmp
loopne
inc
addr16
jg
xor
pop
js
scas
retf
(bad)
addr16
shl
lods
mov
aaa
cmps
nop
shr
popf
add
mov
aam
retf
(bad)
aad
and
mov
mov
test
inc
pop
(bad)
sub
cli
cmps
xchg
sub
hlt
add
(bad)
arpl
jno
pop
mov
out
(bad)
cmp
or
cmps
jecxz
out
jne
add
pop
adc
fwait
movs
pop
adc
repnz
in
or
cmc
in
les
into
adc
and
mov
cdq
cmp
sbb
push
inc
loop
(bad)
dec
stc
mov
movs
sub
xchg
bound
or
or
loope
in
push
or
mov
push
imul
or
stc
push
sahf
ins
mov
dec
das
sbb
or
mov
xchg
or
test
nop
jne
stos
mov
add
mov
cli
sbb
or
int3
enter
pop
jmp
loope
mov
sbb
imul
and
pop
sbb
call
mov
xlat
mov
mov
sbb
ins
xchg
add
sub
stos
fwait
jns
adc
push
sbb
and
lods
cmc
mov
jp
movs
push
shr
and
push
retf
pop
sbb
lea
dec
inc
jo
scas
stos
ins
pop
and
jb
lock
into
aad
dec
dec
jp
mov
fst
rcr
test
push
pop
or
ret
lods
je
add
neg
mov
mov
arpl
loopne
call
sub
adc
out
and
xor
jbe
sub
sbb
add
sbb
popf
clc
fsubrp
inc
arpl
add
or
and
push
popf
sbb
sub
sbb
mov
jne
sahf
push
in
pop
lea
movs
movs
cmp
sub
std
sbb
lods
imul
mov
sbb
(bad)
mov
movs
ja
mov
adc
xor
lods
scas
mov
jae
jns
movs
out
addr16
ds
and
add
in
gs
scas
xchg
scas
or
cmps
mov
dec
out
sub
pop
imul
pop
mov
pop
and
sbb
retf
fiadd
(bad)
mov
xchg
dec
into
push
jle
jnp
pop
mov
rcr
out
mov
aam
adc
mov
xor
rcl
stos
pop
pop
mov
sub
jge
ins
jp
(bad)
pop
test
adc
retf
pop
jo
xlat
push
pop
jbe
fwait
add
rcl
jae
stos
jb
rol
dec
mov
loop
push
mov
fisttp
out
fnsave
jle
sbb
mov
xchg
cdq
mov
add
pop
add
test
xlat
inc
mov
in
push
mov
cmps
and
popf
inc
sbb
imul
mov
mov
or
daa
mov
lock
xor
mov
into
sub
(bad)
and
lods
mul
dec
adc
hlt
(bad)
mov
xchg
ffreep
(bad)
lock
imul
out
add
sub
fisttp
faddp
cmps
pop
ret
xchg
cmp
(bad)
int
mov
or
push
adc
pop
sbb
(bad)
cmp
jo
test
jg
mov
inc
iret
lahf
leave
xchg
pop
daa
add
ret
sbb
push
sar
adc
xor
les
or
lock
out
mov
out
sub
inc
hlt
inc
lea
into
or
jp
mov
cwde
inc
cmp
retf
and
pop
adc
ficomp
daa
outs
ins
xchg
mov
leave
fstp
inc
sar
and
fbld
push
mov
jae
lds
fbld
or
jmp
and
pop
xor
test
fsub
js
(bad)
and
std
neg
jne
jbe
dec
mov
sbb
pop
jmp
call
sbb
adc
push
lock
push
adc
test
addr16
sub
adc
in
sub
mov
add
gs
ja
cmc
mov
mov
cli
aaa
mov
(bad)
loope
dec
cdq
adc
(bad)
data16
jno
sub
aad
push
fiadd
dec
push
pop
loop
sub
movs
pop
pop
cmp
loop
pushf
fsubr
mov
ret
scas
shr
loope
mov
add
call
cmps
jl
inc
out
mov
out
in
push
or
mov
mov
mov
stos
jecxz
js
ja
dec
and
mov
push
fprem
(bad)
mov
xchg
push
or
jns
nop
ins
xor
and
nop
sbb
aad
jae
mov
ds
sub
sar
or
mov
jge
(bad)
push
das
aad
jle
fild
hlt
xlat
stos
and
xor
cmp
mov
push
cli
sub
sbb
loope
jmp
ret
mov
pop
jp
aad
sub
cmp
retf
fimul
(bad)
push
dec
enter
leave
loope
pop
leave
aad
xor
mov
mov
pop
pusha
scas
xor
das
ror
pop
(bad)
mov
lods
sub
inc
sub
cdq
pop
push
sub
jns
inc
mov
cmp
sahf
xor
dec
mov
arpl
lea
lods
ds
outs
or
sub
sbb
jle
stos
add
mov
stc
jnp
mov
(bad)
dec
inc
ss
pop
mov
stos
stc
adc
test
in
dec
mov
cmps
scas
dec
leave
sbb
xor
mov
xchg
enter
sub
in
adc
cwde
mov
xor
xor
jle
mov
ja
lds
mov
push
or
xchg
sbb
push
lds
mov
push
fmul
jp
hlt
inc
push
mov
adc
inc
sahf
fwait
in
pop
popf
ja
scas
aad
xor
fucomip
xor
push
xchg
mov
fsubr
aaa
jl
popf
pop
fsub
xchg
into
mov
outs
dec
mov
push
jnp
push
mov
std
iret
jnp
jge
int
aas
out
cli
je
add
inc
add
mov
outs
out
xchg
cmp
jne
fdivr
mov
push
xor
pop
or
mov
lea
mov
or
push
add
idiv
adc
mov
mov
ds
(bad)
sti
mov
fidivr
fistp
mov
and
mov
hlt
stos
ret
cmp
popf
out
fdivr
sub
cwde
sbb
scas
cmp
ficomp
scas
ins
xlat
mov
mov
shl
out
xor
je
sbb
jb
push
stos
pop
inc
and
test
xchg
jne
int
jp
int3
fcmovu
stc
addr16
lahf
or
mov
inc
sbb
fidiv
cmc
hlt
and
ds
iret
ftst
xlat
mov
cmps
xchg
pushf
test
out
fprem
cmp
div
cmps
aaa
dec
inc
push
jo
xchg
repnz
clc
dec
pop
fbstp
ins
mov
sbb
mov
xchg
adc
mov
imul
mov
or
mul
and
xchg
aas
neg
aaa
nop
cmps
sub
je
push
sbb
sub
(bad)
dec
sub
sbb
cmp
sbb
dec
and
hlt
pop
fxch
pop
mov
and
mov
bound
add
out
stos
repz
enter
xchg
and
mov
es
mov
retf
push
jae
repnz
in
jmp
in
mov
inc
cwde
cmp
in
stos
repnz
setb
mov
into
ja
jns
push
je
mov
jmp
push
mov
aad
and
int3
or
test
(bad)
out
loopne
or
adc
mov
cdq
sub
sbb
mov
xchg
(bad)
cmp
mov
mov
push
pop
ins
jno
rol
mov
xor
push
mov
mov
adc
or
push
mov
cdq
jmp
sub
jcxz
idiv
dec
inc
xor
cmps
mov
out
out
call
retf
lock
inc
sti
(bad)
mov
test
ja
sub
mov
stos
sub
mov
inc
fs
sub
push
jmp
xor
pop
mov
fcomp
out
stos
and
jmp
push
mov
in
dec
push
adc
sar
popf
pop
xchg
xor
mov
lods
cmp
inc
jge
pop
ja
cmp
pop
inc
push
dec
icebp
mov
loopne
sub
sub
pusha
mov
jl
into
imul
(bad)
(bad)
push
movs
mov
fucomip
lahf
in
mov
in
push
hlt
mov
mov
arpl
adc
test
push
jns
sub
inc
jns
jnp
jns
scas
xchg
out
retf
push
push
mov
xchg
rcl
repnz
stos
sub
hlt
cmc
into
xchg
retf
pop
call
movs
adc
into
xchg
and
inc
jmp
cmp
jp
mov
lds
jp
movs
ss
retf
sub
jmp
ja
loope
or
dec
out
clc
mov
fstp
cmps
int3
xor
cmp
inc
inc
pop
cmp
or
fisub
xor
xor
push
ja
adc
das
sbb
jle
sar
in
jo
jle
mov
jae
push
cmp
pop
inc
in
mov
jb
fisttp
ins
aas
fs
jb
push
in
test
pop
aaa
fs
ret
mov
xchg
out
popf
pop
aad
inc
in
xchg
sub
setge
in
inc
inc
jno
leave
out
ds
mov
nop
jbe
xchg
sar
shl
mov
xor
dec
imul
xchg
call
ds
in
ja
jg
adc
retf
pop
vsqrtps
shl
push
push
inc
out
pop
(bad)
jae
test
pop
in
mov
xor
shl
loop
jle
jno
aam
ret
cmps
(bad)
rcl
mov
popa
push
nop
pop
mov
popa
sbb
jbe
lds
lods
ss
aas
sbb
bnd
loope
(bad)
or
pop
retf
cmc
dec
enter
int3
sub
sbb
fnstsw
scas
jle
jl
(bad)
sub
inc
mov
dec
cli
xchg
dec
and
iret
fldcw
mov
cmps
fnstcw
aas
cwde
dec
(bad)
int3
fnstcw
jge
mov
dec
mov
and
call
sub
std
pop
inc
call
andps
jno
retf
pop
jmp
or
mov
pusha
push
mov
das
and
pushf
enter
test
cld
loop
jp
test
cwde
shl
xchg
cs
test
mov
add
mov
mov
cli
cmp
(bad)
repz
fdivr
out
push
inc
cmp
inc
dec
lahf
jl
sbb
mov
push
cmp
dec
push
mov
pop
std
inc
out
mov
sbb
(bad)
mov
int
icebp
jne
mov
push
or
jae
repnz
dec
imul
dec
inc
cmp
(bad)
mov
cmp
jb
int
jb
or
lds
xchg
out
jnp
stos
or
sbb
and
loope
xor
dec
es
(bad)
mov
outs
aam
in
mov
and
mov
iret
mov
call
adc
cmps
(bad)
stos
test
lods
or
fsub
xchg
mov
ror
jl
lds
dec
xor
xor
loope
test
inc
mov
or
add
outs
loopne
sub
cmp
push
fnstenv
mov
pop
outs
jl
iret
xchg
xchg
sbb
stos
push
das
and
jmp
rol
retf
cdq
sbb
imul
out
jmp
push
ds
neg
loopne
push
dec
xor
add
imul
(bad)
fxch
movs
je
jmp
mov
adc
ins
add
pop
(bad)
lds
push
cmp
cs
in
sub
idiv
mov
int3
inc
cwde
dec
fdivr
jl
jecxz
push
arpl
dec
or
add
adc
leave
sbb
pop
lock
(bad)
mov
inc
and
or
aam
arpl
pop
push
mov
lea
popa
mov
pop
das
jno
jle
dec
pop
or
mov
jle
test
scas
push
dec
ds
inc
movs
mov
cmp
lods
push
pop
outs
xor
mov
mov
jge
rol
sbb
inc
sbb
mov
fdivr
ins
fsubr
mov
lock
pop
repnz
sub
jp
icebp
in
add
nop
and
and
or
daa
jne
int3
loop
xchg
mov
sbb
mov
inc
or
loop
pop
call
cmps
mov
xchg
in
rol
dec
or
sub
or
(bad)
inc
shr
mov
inc
aaa
imul
xchg
xchg
sub
rcr
xchg
ss
dec
sbb
jmp
pop
aaa
jl
stos
add
push
in
mov
jo
xor
sub
pop
mov
mov
retf
pop
jae
adc
movs
mov
push
pop
pusha
popa
cmp
bound
jp
pushf
dec
jno
aam
xor
jmp
test
sahf
push
sub
mov
jmp
jmp
xchg
adc
popa
pusha
pop
je
jge
enter
jl
adc
pop
push
xchg
test
loope
and
loop
out
sqrtps
push
sub
sbb
(bad)
sub
fcom
movs
xchg
and
sub
aam
retf
push
xor
hlt
or
scas
inc
es
rcl
(bad)
das
mov
add
mov
sti
push
cmp
ds
sbb
adc
jo
int
mov
or
push
jmp
or
(bad)
out
ins
addr16
xchg
and
cmp
dec
cwde
xchg
out
sbb
in
dec
cmp
outs
arpl
or
cli
bnd
sbb
cwde
sub
clc
xchg
in
cmc
mov
mov
cdq
add
xchg
add
cmps
aam
hlt
push
mov
mov
mov
xchg
push
dec
cmp
(bad)
fisubr
jb
rcr
in
stos
pop
fnstcw
inc
ja
cmp
jno
out
jge
sub
fnsetpm(287
rol
repnz
aad
fs
or
jne
inc
test
sti
jle
inc
xor
out
outs
stc
xchg
and
dec
ret
jmp
dec
cmps
sbb
inc
test
adc
adc
daa
rol
inc
dec
pop
mov
inc
(bad)
xor
push
jg
inc
(bad)
out
cld
mov
jl
pop
xchg
push
(bad)
xchg
ret
rol
out
gs
popf
loope
loope
int
lahf
cs
lds
adc
icebp
cli
sub
sbb
out
add
mov
xor
mov
mov
ins
cmp
xor
pop
or
pushw
push
sub
test
mov
movs
test
mov
arpl
pop
jb
fmul
mov
jne
lds
mov
mov
mov
test
dec
movs
ret
gs
mov
sbb
push
ret
xchg
es
add
popa
dec
call
adc
adc
bound
and
ret
aaa
scas
lods
cmp
pop
sar
and
je
dec
mov
ds
xchg
adc
xchg
fcomp
arpl
mov
sbb
push
sbb
sub
je
mov
fild
pushf
pusha
icebp
pop
call
pop
mov
sbb
cmp
ss
cmovs
sbb
in
rcl
shl
mov
mov
mov
cli
pop
fiadd
cmp
or
xchg
test
call
xor
in
push
test
stos
fstp
scas
hlt
out
xchg
std
outs
movs
mov
jl
sbb
jl
mov
push
pop
push
in
jno
pusha
dec
repnz
out
jne
sbb
push
mov
ins
cmp
jmp
jns
lds
inc
(bad)
leave
sbb
data16
inc
rep
mov
xor
iret
xchg
jmp
sub
mov
retf
(bad)
cli
les
test
scas
lds
or
push
popa
(bad)
adc
mov
jecxz
in
pop
adc
enter
ficom
pop
call
pop
or
pop
sbb
xor
jbe
xor
cmps
jp
sub
test
outs
out
int3
sub
mov
mov
jge
mov
pop
adc
call
das
cmp
inc
(bad)
jns
push
loop
fild
jne
sbb
fsub
mov
xchg
ss
imul
scas
jge
xchg
call
xor
clc
push
adc
je
cmc
inc
push
outs
into
in
test
hlt
std
inc
dec
lods
pop
push
cmp
jne
es
cwde
je
inc
push
jne
arpl
mov
(bad)
imul
mov
mov
fisttp
xchg
arpl
test
movs
and
jle
mov
or
xchg
cmp
push
ret
popf
cmp
jae
xchg
and
daa
add
mov
cmp
adc
inc
in
ins
inc
sbb
cmp
fdiv
mov
inc
sbb
mov
pop
xchg
ja
pop
xchg
mov
outs
retf
cmp
xchg
fcomp
ret
jle
and
je
subps
push
dec
mov
dec
stos
call
(bad)
jle
mov
sahf
iret
retf
jmp
pop
shl
jb
ins
sub
jmp
lahf
mov
xchg
sti
jmp
mov
lds
cmp
dec
mov
xlat
ror
lds
sar
mov
int
push
add
shl
stc
jne
push
dec
stc
push
xchg
inc
mov
out
mov
fild
mov
aam
mov
das
sar
fadd
xrelease
(bad)
adc
fdivp
push
and
push
or
mov
mov
stos
or
mov
jae
pop
loopne
test
pop
ins
mov
push
ret
inc
icebp
(bad)
inc
xor
push
cmps
cld
mov
and
lods
mov
xor
cwde
mov
lea
xlat
jp
mov
repnz
lock
jecxz
dec
jecxz
stc
cmp
mov
fsubr
xchg
mov
xor
xchg
frstor
pop
pop
adc
adc
mov
test
jl
movs
jmp
or
cmp
stc
clc
pop
retf
mov
add
mov
outs
mov
adc
imul
fdiv
cli
stc
jmp
stc
mov
pop
ins
shl
xchg
mov
push
sub
push
stos
inc
es
mov
faddp
mov
mov
sub
xchg
inc
jbe
loop
pop
dec
push
add
pop
rol
mov
(bad)
pop
xor
adc
mov
dec
gs
test
mov
in
in
ds
in
jp
(bad)
jp
js
je
push
imul
(bad)
fstp
les
mov
inc
push
test
push
or
xlat
jns
out
pushf
xchg
aad
psrld
out
stc
jmp
stc
stos
fstp
scas
add
push
adc
push
push
mov
jmp
cmps
mov
dec
cmp
(bad)
cwde
ficom
pop
cmp
sub
xlat
bound
out
out
call
push
lock
and
scas
cmc
add
mul
fs
jae
push
push
mov
and
pop
repz
out
call
dec
jmp
jns
push
sub
gs
in
jge
dec
sti
lods
addr16
iret
ds
cmp
jecxz
repnz
(bad)
fidiv
pusha
pop
xor
fst
loopne
addr16
ds
repz
dec
outs
call
xchg
adc
dec
lods
add
adc
lahf
fistp
mov
out
call
(bad)
jmp
repz
shl
stos
jns
sbb
hlt
(bad)
lods
fwait
scas
mov
mov
jmp
and
or
xchg
fdivr
imul
ficomp
inc
je
push
mov
test
scas
mov
dec
or
sub
xchg
sub
mov
jp
(bad)
test
push
movs
shr
ss
mov
mov
pushf
add
mov
popf
jmp
xor
mov
imul
xor
fs
ins
mov
mov
(bad)
mov
pop
cmc
push
popf
repz
test
clc
jnp
push
stos
das
jns
out
pop
movs
in
jecxz
xchg
jns
(bad)
dec
and
push
popa
scas
inc
mov
daa
dec
aas
das
dec
jecxz
dec
out
lea
outs
push
pusha
lock
dec
loope
sub
mov
iret
mov
std
fmul
mov
sub
and
push
sbb
cmp
aaa
mov
fwait
out
inc
pusha
pop
(bad)
xlat
mov
out
jge
ret
xor
xlat
jae
icebp
stos
(bad)
cmp
sub
shl
(bad)
sub
lds
jo
xchg
cmps
sub
ss
fld
jmp
cmps
adc
fiadd
mov
mov
xchg
sub
jge
sbb
push
push
dec
sbb
pop
das
mov
jmp
jno
push
js
or
call
sub
shl
into
sti
rcr
mov
cs
les
push
lods
loope
loopne
sub
outs
out
data16
xchg
cmp
push
into
mov
and
ret
lahf
cmp
mov
pop
pop
mov
int3
hlt
out
loopne
or
mov
out
sub
jle
inc
aam
pop
sub
ret
call
push
xor
fimul
pushf
jns
(bad)
cmp
fadd
dec
push
ins
cld
jne
fld
int
out
cmp
mov
xor
jns
mov
sbb
sbb
dec
mov
repnz
fidiv
add
jg
in
xchg
mov
mov
cmp
(bad)
fnop
ret
sti
jge
add
cmc
or
fcomp
sbb
lods
cwde
jmp
jle
adc
aad
sbb
pop
arpl
push
in
push
mov
cmp
sub
and
xlat
sbb
pop
lahf
push
outs
pop
enter
pop
mov
outs
int3
cli
sbb
dec
dec
lods
ins
mov
mov
cmps
lods
push
sbb
hlt
sbb
lods
or
dec
mov
mov
jmp
in
jp
retf
push
test
dec
sub
dec
jae
adc
push
fucomip
push
lods
cld
lds
iret
inc
sti
enter
cmps
iret
ds
dec
pop
test
and
pop
pop
movs
xor
push
jmp
fbld
inc
jb
mov
mov
scas
xor
lahf
jns
imul
xor
jmp
mov
cmp
push
ins
retf
sub
dec
lahf
xor
movs
dec
out
mov
inc
jge
jbe
fs
aas
icebp
ja
mov
dec
lods
xchg
cmp
push
hlt
cmp
or
je
pop
or
xchg
rol
and
scas
sub
pop
sub
xor
stc
repnz
shl
adc
jmp
rol
aaa
cmp
lods
scas
mov
pusha
out
or
(bad)
out
out
mov
pop
dec
retf
cmp
push
sub
sub
sahf
out
ins
jo
mov
lock
mov
xor
cmp
cmp
mov
mov
les
xchg
in
mov
inc
xchg
push
xchg
and
test
lods
push
(bad)
(bad)
mov
sub
jbe
mov
ret
cli
mov
push
mov
nop
cld
dec
fidiv
outs
inc
adc
movs
inc
hlt
ss
jge
outs
jae
push
sbb
xlat
test
(bad)
sar
jne
inc
(bad)
push
das
test
dec
(bad)
push
sbb
call
call
mov
int3
cwde
dec
dec
rcl
jmp
data16
imul
and
inc
pushf
cmp
fsub
icebp
std
loopne
pop
jnp
test
das
test
packuswb
mov
jmp
jle
xchg
pop
fs
inc
push
jno
sbb
push
and
jae
mov
inc
fldenv
xor
dec
and
dec
lahf
cmp
fdivr
mov
out
pusha
ficom
xchg
fidivr
push
pop
mov
dec
nop
jnp
xor
inc
div
loopne
jne
push
add
mov
dec
shl
jb
push
cli
jg
add
inc
push
pop
push
fs
adc
push
mov
shl
daa
ins
mov
or
and
mov
in
sbb
inc
rcr
pushf
daa
stos
cwde
iret
shl
pop
arpl
fistp
mov
mov
repz
push
mov
lea
inc
pop
stos
vpsllw
ja
push
sbb
fstp
adc
and
out
cdq
test
mov
push
imul
pushf
out
pop
jmp
xor
ret
pop
cmps
mov
les
test
add
mov
out
in
dec
jmp
shl
cmp
inc
push
cwde
xlat
push
xchg
mov
or
in
jl
xor
or
mov
mov
pop
cmc
(bad)
aam
push
jecxz
test
pop
stc
pop
push
pusha
out
test
mov
cmp
call
lods
cmp
arpl
int3
(bad)
inc
xchg
(bad)
hlt
adc
iret
jmp
add
aaa
mov
or
adc
pop
hlt
mov
push
ins
cs
aam
js
inc
out
das
stc
mov
sub
rcl
xchg
pop
stos
stos
mov
test
iret
cdq
fisttp
jmp
jno
mov
das
dec
fcomp
sub
cmp
mov
pop
repnz
mov
inc
add
or
aas
cdq
pop
cmp
test
xor
xor
jns
and
(bad)
cmp
cmp
mov
stc
fld
popa
mov
test
imul
dec
mov
xchg
and
cdq
test
mov
jns
into
retf
adc
lahf
(bad)
cmp
popf
and
ins
inc
push
add
fsub
mov
push
fwait
aam
in
inc
ja
cmp
adc
ins
lods
xchg
mov
fistp
mov
fistp
rcl
cwde
push
es
fisub
retf
xchg
sahf
cmp
sbb
or
clc
cmp
call
xchg
xchg
push
sbb
test
popa
xchg
push
hlt
add
cmp
inc
mov
inc
adc
add
add
frstor
xor
in
add
adc
or
mov
je
std
cmp
sub
outs
popf
xor
push
std
jnp
cld
fstp
cmp
or
popa
call
jle
push
inc
popa
or
cvtps2pi
cmovl
jo
movs
sbb
pushf
int
int3
outs
jae
xor
xchg
sbb
fisubr
dec
(bad)
adc
test
adc
push
or
fwait
add
(bad)
clc
ja
enter
mov
mov
aas
sub
in
add
leave
int
retf
adc
or
retf
icebp
aaa
inc
cmp
cdq
(bad)
and
sahf
out
mov
cmc
mov
repnz
hlt
outs
ret
movs
repz
push
or
aad
pop
xor
push
(bad)
repz
jg
outs
popa
jge
iret
xlat
dec
call
mov
pop
inc
mov
nop
sbb
xor
jg
add
xchg
out
fild
cmp
jle
in
cmp
fsub
ins
jmp
in
sub
ins
div
retf
pop
scas
lods
lock
int3
mov
popf
jle
mov
js
rol
jbe
out
out
mov
mov
fnsave
sbb
xchg
cmp
retf
mov
aad
cmp
mov
push
popf
pop
hlt
aaa
sub
icebp
(bad)
ffreep
std
retf
fnstsw
cmc
jle
sti
jnp
loopne
in
pop
cmp
mov
xlat
inc
hlt
aas
jle
xchg
aam
ret
fs
stos
shr
int3
cli
push
mov
push
repz
fimul
or
fbld
movs
in
jnp
jbe
cdq
lock
(bad)
iret
push
pop
cmp
ror
std
mov
std
ficomp
fild
retf
gs
mov
pop
out
mov
cld
imul
mov
cmp
out
push
jnp
ja
push
in
mov
or
push
fadd
in
(bad)
cmp
xor
cmp
scas
out
out
pop
push
stc
cmps
scas
mov
out
inc
outs
loopne
xlat
inc
std
jbe
xchg
sti
xor
idiv
dec
inc
cli
in
mov
jnp
scas
daa
fild
mov
sbb
pop
mov
dec
push
aas
mov
cmp
add
sti
out
test
adc
push
ja
mov
jmp
jmp
lahf
jns
ja
dec
xor
or
in
int3
lea
cs
mov
sub
xor
ja
stos
pop
sub
fld
stos
adc
hlt
es
cli
(bad)
dec
fdivr
jbe
sub
mov
pop
cmp
xchg
sbb
aas
out
dec
lock
fidivr
mov
idiv
orps
retf
iret
jne
gs
mov
jecxz
sbb
add
jnp
jge
mov
sti
imul
call
mov
imul
fld
(bad)
shl
bound
imul
sbb
xchg
jge
neg
in
pop
xchg
inc
mov
mov
(bad)
out
sbb
sbb
sub
push
icebp
and
out
sbb
sub
outs
lock
adc
int3
pushf
std
iret
jle
(bad)
push
movs
dec
sbb
scas
(bad)
cli
push
inc
test
cmp
mov
push
cs
xchg
fbld
push
cmp
cli
sbb
sbb
pop
fwait
(bad)
fnstcw
int3
mov
sti
(bad)
pop
into
repz
stos
cmp
inc
pop
xchg
pop
push
pop
out
(bad)
ins
push
call
sti
aam
jg
and
jmp
xchg
cmp
cmps
std
ins
in
mov
bswap
mov
sbb
cmp
mov
push
jmp
mov
aad
sbb
repnz
lods
sbb
ins
fidivr
dec
fwait
test
or
dec
jl
repz
sti
in
mov
cmp
jmp
daa
cmp
imul
jle
out
sahf
fild
ss
ret
pop
cld
gs
out
pop
fs
call
loope
push
(bad)
repnz
arpl
cmc
xchg
test
int
hlt
clc
pop
dec
jmp
mov
int
stos
push
push
cli
jnp
mov
mov
hlt
xor
ins
test
cmps
jle
iret
mov
loopne
pop
pop
aam
jnp
cli
cmp
call
sub
in
cmps
(bad)
jle
cmc
retf
jnp
sti
imul
idiv
shr
fwait
std
mov
ds
cdq
add
(bad)
nop
pop
cmp
mov
mov
(bad)
sub
out
jae
pop
pushf
dec
sbb
movs
ror
mov
push
iret
pushf
ins
ins
daa
retf
sub
dec
(bad)
repnz
aad
xchg
or
sbb
pop
stc
in
repnz
push
cs
or
pop
sahf
cmps
mov
test
push
mov
dec
leave
sub
gs
xchg
push
pusha
or
cs
cdq
fstp
jne
sub
cld
fisubr
jl
adc
test
cmc
sbb
sti
loop
addr16
mov
popa
cmps
add
cmp
ds
pop
pop
xor
cwde
mov
cmp
jbe
mov
jp
jg
pop
cmc
(bad)
in
jecxz
je
cmp
(bad)
jl
das
ret
push
add
cdq
dec
and
or
or
inc
or
popa
sub
dec
cli
xchg
(bad)
lods
leave
mov
mov
repnz
mov
lock
cmp
xchg
jecxz
outs
sbb
lds
out
push
xor
stc
pop
adc
mov
inc
loop
inc
imul
lods
arpl
jl
add
xor
or
push
repz
popf
fdivr
outs
jmp
mov
sar
rol
push
stc
mov
mov
jp
adc
dec
leave
fwait
mov
jl
and
sbb
out
lods
lock
mov
mov
lds
in
cmp
std
sbb
push
call
gs
mov
add
mov
ja
jb
fdivr
loop
sti
aad
cmp
outs
out
pop
cmp
outs
(bad)
imul
in
sahf
push
xchg
mov
outs
mov
pop
imul
std
scas
cmps
push
push
push
push
jbe
push
data16
es
shr
out
outs
jbe
loopne
and
mov
cld
pop
out
popa
iret
xlat
je
sar
iret
sub
imul
xrelease
sar
sahf
rcr
sahf
pop
cwde
outs
(bad)
iret
fbstp
jge
mov
outs
pop
test
js
in
retf
arpl
push
jbe
call
jl
mov
int
cs
xor
mov
add
(bad)
push
and
(bad)
in
jb
mov
int
repz
or
jbe
(bad)
int3
mov
cmp
sbb
addr16
cmp
loopne
daa
mov
sub
dec
mov
pop
lods
fs
inc
enter
popa
push
out
mov
or
mul
fmul
cmp
xor
xor
retf
mov
adc
sub
mov
(bad)
pop
jb
adc
dec
fs
cmp
mov
jns
pop
and
mov
aaa
lods
call
sti
inc
aas
retf
stos
mov
pop
pop
std
call
ror
pop
std
aas
jmp
std
jmp
inc
cs
cmc
sub
sbb
xor
dec
outs
cmp
jge
call
jbe
push
sti
int
lock
xor
loope
lock
xlat
pop
push
jb
pop
std
shl
inc
or
xor
rol
retf
fwait
cmp
mov
ins
call
mov
addr16
adc
cmp
or
cwde
jmp
gs
sbb
jecxz
push
push
scas
fwait
aam
adc
scas
adc
push
sbb
or
pop
pop
fs
(bad)
pop
daa
xlat
test
jbe
int3
and
cmp
pop
xchg
push
xchg
js
cmp
sub
push
pop
jne
or
mov
mov
dec
add
pop
xchg
mov
add
outs
(bad)
stc
and
dec
ja
mov
adc
pusha
popa
int
pop
xor
aaa
js
leave
or
and
inc
dec
xor
int3
pusha
inc
xor
rol
ss
fadd
cdq
mov
mov
jb
arpl
inc
call
mov
jo
adc
sbb
push
retf
pop
jnp
dec
pop
cmp
ror
cmp
dec
adc
pop
ds
and
movs
pop
test
cwde
cmp
ret
inc
sub
add
adc
js
loopne
cmp
and
sub
sbb
mov
inc
inc
mov
inc
jge
or
loope
aaa
stc
daa
cld
test
aam
mov
xor
mov
enter
mov
outs
or
add
add
movs
add
lds
cmp
mov
sub
ins
or
sub
push
jno
clc
push
es
pop
mov
fmul
in
ret
xor
xor
fnsave
inc
pusha
cmp
inc
pop
or
dec
xor
cmp
mov
in
ins
jns
std
retf
dec
mov
and
xchg
repnz
xchg
fnstsw
mov
pop
jmp
leave
jle
stc
ja
and
push
dec
rcr
movs
xchg
jb
arpl
xchg
sub
lahf
pop
mov
bound
enter
ret
shr
push
outs
mov
adc
sbb
dec
cmp
push
add
cmp
sbb
stos
jge
repz
and
shl
push
inc
xor
dec
add
in
sub
inc
or
or
mov
add
cmp
mov
mov
mov
inc
sub
jmp
mov
xchg
sub
fbstp
inc
bound
fsub
movs
push
mov
or
adc
adc
(bad)
dec
or
(bad)
jmp
jb
xlat
push
jl
push
cmps
inc
jae
int
xchg
xor
sub
xor
dec
or
sahf
nop
call
inc
nop
add
mov
inc
ss
or
mov
sbb
inc
or
arpl
cld
or
cdq
cmc
or
stos
rol
push
pop
mov
jmp
in
scas
xor
push
test
sbb
add
movs
jo
ins
xchg
inc
mov
xchg
push
call
or
sub
add
sub
mov
add
xor
add
lods
or
sbb
stos
jne
mov
je
pop
arpl
(bad)
enter
repz
imul
je
push
loope
push
adc
enter
loop
mov
popa
(bad)
je
(bad)
movs
mov
cli
cld
mov
xchg
int3
mov
pop
popa
push
adc
mov
cmc
mov
inc
mov
inc
mov
sub
cs
ins
pushf
scas
(bad)
arpl
sub
xchg
and
xchg
out
pop
arpl
les
lea
mov
xchg
inc
je
js
inc
repz
xor
sub
enter
cli
adc
dec
sub
cs
push
addr16
lds
ja
repz
ds
das
test
cmp
or
jnp
mov
inc
push
add
push
test
aaa
inc
pusha
jmp
shl
pop
scas
shl
rcl
and
daa
daa
cmp
into
ja
ficom
cmp
test
mov
inc
fisubr
iret
mov
push
dec
out
cmps
loop
leave
mov
int3
inc
mov
outs
fdiv
stc
mov
push
inc
push
and
lock
sub
pusha
loope
push
inc
xor
call
xchg
jo
lea
pop
and
cmp
(bad)
cmp
add
push
add
outs
lock
adc
and
xor
cmp
ret
inc
icebp
add
mov
mov
jb
push
jle
sbb
into
push
nop
xchg
and
mov
ror
push
sbb
sub
or
mov
add
(bad)
aas
sbb
xchg
add
sub
mov
fcom
sub
jg
cwde
dec
or
fwait
jne
fiadd
cmps
sub
push
cdq
adc
xchg
inc
jmp
sbb
push
jne
ret
sbb
rol
jg
enter
jns
jp
inc
jbe
dec
cmp
(bad)
repnz
cmp
lock
fst
pop
clc
xchg
lods
jb
pcmpeqw
mov
aas
mov
mov
xchg
cld
xchg
adc
xchg
sub
add
ror
or
adc
lock
xor
adc
or
or
sub
fist
push
sbb
pop
inc
adc
jmp
add
fsub
call
clc
push
les
shr
fadd
add
jge
lock
(bad)
mov
pop
adc
rcl
inc
inc
das
mov
xlat
loope
hlt
mov
dec
test
xchg
ds
or
dec
pop
imul
mov
lock
adc
push
test
jmp
and
and
xor
ret
add
imul
dec
adc
mov
addr16
rol
mov
cld
jmp
jae
es
add
pop
inc
int3
push
push
mov
in
pusha
movs
or
push
push
loopne
pop
cmp
and
and
push
mov
scas
adc
dec
test
sbb
rcl
xchg
adc
mov
call
js
adc
(bad)
(bad)
mov
int3
sub
popf
sbb
ret
and
push
test
lds
xor
xor
movs
outs
mov
pop
sar
shr
mov
or
fidivr
push
pusha
adc
mov
or
and
mov
and
pushf
arpl
push
(bad)
popf
jmp
dec
jnp
into
push
mov
ret
aad
rol
xor
ins
ins
push
arpl
sbb
sbb
cmp
adc
mov
sbb
push
daa
cs
or
ins
cmp
jno
or
pop
in
leave
sbb
aam
movs
sbb
dec
or
repnz
mov
push
lahf
xchg
sub
adc
les
mov
aaa
pop
dec
or
ja
lods
mov
cli
fcmovb
inc
mov
mov
push
inc
xchg
add
mov
mov
jae
mov
sbb
adc
pop
(bad)
sub
pop
adc
xchg
adc
test
retf
mov
mov
test
inc
mov
cwde
and
in
mov
cmps
test
cmp
sar
mov
and
push
push
fs
xchg
rcl
test
push
lods
dec
xchg
leave
pop
push
sub
push
jg
gs
adc
push
outs
adc
test
mov
mov
movs
cmp
mov
jno
cmps
call
or
lods
adc
push
rcr
cs
and
cwde
mov
das
cmp
xchg
mov
jmp
ins
mov
push
inc
push
(bad)
cmp
dec
in
add
or
sbb
adc
shl
out
add
rcl
rcl
jns
sbb
mov
pavgw
cdq
xchg
dec
xchg
inc
push
pop
outs
fxch
pusha
mov
push
pop
gs
and
or
scas
xlat
lds
(bad)
fisubr
dec
cmps
jnp
inc
lock
stos
loop
loop
or
or
jg
cmp
stos
lock
pop
jp
push
cwde
fadd
js
pop
add
jns
jp
xor
mov
or
push
push
adc
test
jo
push
sub
inc
je
mov
jge
jg
les
out
adc
outs
leave
inc
mov
xchg
and
mov
es
lds
jb
icebp
out
inc
test
out
hlt
test
adc
sbb
cmps
vcmppd
fst
cli
xlat
inc
xchg
ror
test
clc
lds
or
add
inc
or
push
mov
sbb
add
push
je
pop
std
push
mov
push
xchg
mov
shl
jo
loopne
add
push
adc
aad
shl
sbb
ror
or
xor
adc
jp
pop
mov
mov
inc
jg
dec
movs
fisubr
stos
icebp
imul
push
cwde
scas
push
or
jmp
mov
mov
xchg
adc
inc
xchg
add
ja
retf
sbb
fsubr
test
ds
and
and
ss
bound
popa
aas
push
and
lock
popf
push
dec
sbb
loope
or
xchg
dec
mov
jmp
xchg
test
xor
loope
test
or
fs
ret
lods
nop
cmp
aaa
out
inc
inc
dec
jne
shr
popf
fstp
push
(bad)
stc
rol
mov
mov
mov
fnsave
aad
and
dec
pushf
adc
mov
ja
jp
bound
rcl
or
pop
push
stc
sbb
loopne
mov
mov
inc
push
sub
popa
push
xchg
div
jp
rcl
into
or
and
push
les
pop
dec
push
cli
or
jmp
sbb
dec
push
adc
mov
jmp
sti
ds
or
xor
sbb
frstor
sub
sub
cmp
mov
push
loope
in
mov
dec
pusha
rcr
and
in
scas
adc
adc
sar
repnz
push
lock
loop
retf
mov
mov
pusha
cmp
mov
lds
mov
or
pusha
inc
ret
mov
out
js
push
push
int3
movs
mov
push
cmp
xor
add
sub
sbb
popf
xchg
ss
lahf
add
popf
(bad)
sti
fdiv
and
mov
test
push
jno
mov
and
add
add
mov
call
cmp
aad
sub
dec
les
mov
pop
cmp
sub
fstp
cmp
call
jo
daa
pop
mov
and
sub
ret
inc
nop
ja
xchg
pop
inc
mov
ret
or
mov
mov
pop
adc
xor
fs
fcomi
sub
fnsave
pop
fcmovb
lods
rcr
shr
push
adc
or
pusha
cmp
bound
sbb
xchg
adc
vpaddw
loope
rol
push
pop
pop
lds
xor
cmp
jbe
cmp
pop
and
pusha
sub
or
inc
or
xchg
retf
or
push
xchg
push
data16
aaa
pop
ins
sub
mov
sub
xor
mov
mov
xor
and
sub
dec
loop
mov
fadd
jmp
int3
sub
adc
add
pop
xor
xor
pop
inc
stos
dec
mov
mov
push
rcl
lahf
cmp
mov
sub
bound
mov
inc
xchg
mov
cli
pushf
mov
dec
xchg
dec
int
test
rol
sub
fcomp
(bad)
ja
cmp
data16
inc
sbb
cli
out
jbe
jae
call
mov
call
scas
fadd
mov
sbb
sub
ret
shl
addps
inc
xor
add
fwait
xchg
setne
shl
out
sub
es
pop
ror
sub
popa
mov
adc
mov
sbb
inc
movs
(bad)
xor
push
pusha
mov
or
(bad)
push
push
bound
mov
dec
(bad)
imul
stos
pop
pop
dec
addr16
ss
pop
fs
pop
jno
test
jnp
mov
adc
mov
ret
xor
int3
rcl
add
lahf
push
into
out
call
and
xchg
inc
call
xor
xor
pop
clc
inc
pop
sbb
inc
test
sbb
jae
nop
mov
sub
sub
es
xor
jns
popa
cmp
mov
push
icebp
jo
add
mov
mov
mov
iret
gs
addr16
dec
daa
daa
ja
dec
xlat
add
lods
jecxz
call
arpl
mov
dec
pop
push
add
inc
or
popf
fcomp
adc
sbb
or
jmp
sbb
out
outs
fnstcw
loope
mov
pushf
xchg
cmp
xchg
and
(bad)
popf
add
dec
ret
sub
outs
pop
dec
dec
or
push
fdiv
add
mov
fidiv
ins
les
call
stos
int3
inc
mov
add
or
(bad)
jmp
mov
sub
out
or
repnz
fisubr
imul
cli
test
xor
test
add
mov
mov
das
cmp
mov
loopne
sbb
add
mov
int3
and
not
rol
int3
adc
or
sbb
dec
addr16
adc
cmp
loope
adc
add
sar
loope
inc
add
pusha
pop
xor
inc
xor
rcr
and
and
jp
mov
hlt
or
xchg
sbb
call
pop
rcr
fs
dec
mov
sbb
jo
push
inc
sub
sbb
adc
aam
into
mov
sbb
lock
jp
or
jl
and
and
ins
cmp
mov
into
and
sar
jg
imul
mov
and
popa
enter
out
mov
scas
adc
adc
inc
movs
imul
or
test
fld
stos
or
xchg
repz
xchg
in
test
test
fstp
in
cmp
lahf
adc
add
xor
dec
mov
xor
loope
mov
cmc
in
(bad)
mov
nop
dec
add
add
shl
xchg
lock
pop
cli
inc
add
pop
xor
out
adc
in
xlat
cmp
push
and
rol
shl
test
jns
(bad)
fidiv
push
sub
jae
mov
cmp
mov
jge
test
lds
nop
dec
mov
loop
add
adc
jp
dec
retf
xchg
out
and
jp
or
cs
and
add
jo
add
or
lds
pop
(bad)
and
pop
(bad)
movs
mov
cmp
adc
adc
push
aaa
rol
dec
imul
lea
lahf
rol
outs
loope
js
daa
shl
sub
daa
push
sub
cmp
mov
shl
idiv
repnz
sbb
pop
jp
mov
sub
xchg
add
adc
mov
cmp
sar
adc
aaa
(bad)
sbb
mov
mov
cmp
jo
addr16
mov
and
or
stos
dec
pop
pop
mov
jo
add
jns
pop
cs
mov
xor
or
shr
rcr
or
add
iret
push
sbb
inc
sub
add
mov
sti
sub
ins
(bad)
dec
lods
js
pop
and
fsub
inc
test
mov
push
inc
push
pop
movs
repnz
add
aaa
pusha
cs
retf
ficomp
ins
arpl
faddp
inc
mov
lds
mov
xor
push
or
mov
sub
and
and
mov
inc
call
sub
dec
mov
xor
adc
push
pop
push
pushf
adc
jno
jbe
cmp
daa
dec
(bad)
mov
adc
push
xchg
sbb
add
pop
and
icebp
jno
mov
sbb
sub
or
in
sahf
rcr
and
xor
mov
xchg
rcl
or
sub
mov
sbb
push
ins
into
mov
daa
(bad)
adc
scas
or
mov
mov
jno
or
sbb
fstenv
push
jge
adc
and
inc
sbb
add
sbb
or
fstp
pop
jl
mov
scas
pop
les
cli
cdq
xor
loopne
sub
push
ins
test
jbe
push
fxch
and
ss
xor
sahf
sbb
cli
sbb
dec
mov
test
dec
push
sub
mov
or
sub
pusha
retf
push
sbb
(bad)
adc
fisubr
sbb
inc
dec
push
cdq
test
sbb
xchg
mov
lea
mov
xchg
mov
dec
mov
(bad)
int3
lds
enter
out
push
xor
xchg
mov
icebp
sahf
pop
jecxz
inc
mov
sbb
test
test
enter
push
inc
jge
inc
or
xor
fnstsw
dec
mov
std
mov
add
adc
adc
popf
push
push
call
sbb
sbb
xor
cwde
or
cli
and
es
hlt
inc
mov
or
mov
ss
xchg
adc
pop
cmp
sbb
push
(bad)
hlt
mov
push
mov
xchg
xchg
fs
inc
in
mov
enter
sbb
add
aam
xlat
and
movs
pop
aaa
mov
or
lahf
cmp
loop
dec
iret
in
movs
or
jmp
xchg
push
es
jnp
mov
fst
scas
xchg
inc
addr16
xchg
test
mov
call
sbb
fbld
jbe
jno
inc
repnz
or
inc
hlt
adc
dec
xchg
iret
adc
sub
hlt
and
movs
rcl
ja
adc
push
sub
rcr
data16
movs
push
cli
lods
and
xchg
mov
push
bound
out
scas
out
(bad)
mov
or
inc
jnp
cmp
xchg
sub
or
push
mov
pop
dec
or
cmp
repz
add
sub
add
inc
push
mov
retf
es
fadd
mov
inc
inc
add
nop
dec
xor
cmp
lahf
xor
jmp
xchg
inc
sbb
sub
mov
lock
add
or
in
mov
mov
pop
adc
sbb
add
popf
push
xor
fnsave
inc
psubusb
pop
push
and
mov
xor
add
or
or
cmp
jge
push
inc
cmps
ja
dec
or
sub
scas
out
scas
mov
sub
cdq
aam
cld
daa
(bad)
pop
or
ret
xchg
pop
dec
jecxz
inc
sbb
sbb
je
test
mov
loop
adc
rol
adc
sub
data16
js
pop
hlt
jns
jno
mov
xchg
stos
xchg
or
push
mov
fistp
sbb
xlat
pop
push
scas
das
mov
jo
jne
mov
push
cmp
fwait
test
(bad)
(bad)
ror
(bad)
movs
aaa
mov
adc
add
jne
add
arpl
add
jmp
pop
cwde
xlat
adc
pop
and
mov
jns
pop
adc
aam
dec
data16
mov
pop
ja
sub
add
jecxz
jo
mov
test
mov
jmp
pusha
pop
les
mov
dec
aaa
mov
popf
ret
(bad)
ds
pop
lods
adc
sahf
sbb
jmp
dec
xchg
xchg
sub
mov
call
jl
scas
ss
jecxz
sbb
in
out
sahf
enter
ja
sbb
and
push
sub
cmp
push
lock
sahf
add
imul
aad
or
pop
sti
ror
(bad)
in
add
xchg
stos
push
jne
inc
into
jnp
hlt
xor
fs
jl
test
jae
inc
shl
xor
data16
aas
sbb
scas
int
and
mov
cdq
outs
or
push
cdq
push
sahf
das
cmp
push
in
shl
cmp
xchg
adc
xchg
pop
xor
pop
dec
jnp
movs
movs
icebp
add
or
test
xor
mov
sbb
xchg
dec
xchg
int
dec
pop
cmp
xor
pop
ficom
push
pop
out
movs
xchg
push
adc
cdq
cdq
cmp
sbb
pop
xor
ret
pusha
cmps
in
jge
mov
pop
imul
inc
cmp
mov
in
fisttp
or
mul
out
xor
stos
xchg
pop
xor
stos
dec
jmp
fild
cwde
sbb
dec
aad
fisubr
fnsave
mov
mov
dec
outs
mov
xor
arpl
sub
pushf
dec
jmp
jl
dec
fs
inc
in
(bad)
cmc
mov
(bad)
mov
mov
mov
in
loope
bound
fisttp
mov
hlt
leave
dec
ret
ss
push
mov
ror
ja
lods
ror
(bad)
sti
std
dec
fstp
call
pop
hlt
push
stos
test
push
iret
iret
retf
and
xchg
dec
test
jp
ja
imul
data16
repz
fidivr
jmp
out
lea
daa
mov
xchg
cmp
in
xchg
cmp
xor
daa
retf
push
int
(bad)
stc
lahf
rcr
pop
cmc
icebp
jno
rcr
repz
aam
sub
test
ss
adc
ss
xchg
jb
push
push
fldz
sbb
adc
cmps
dec
bound
cmc
enter
jne
lds
dec
jne
jno
pop
loope
mov
sahf
xchg
out
inc
mov
push
pop
inc
call
cld
sti
leave
sub
mov
std
fld
icebp
mov
std
push
ja
iret
xor
xor
mov
pop
sbb
pop
repnz
mov
repz
fwait
jle
xor
std
lock
dec
sti
and
cmps
aaa
pop
dec
jle
popf
cs
out
es
lahf
mov
lahf
jge
or
sub
add
push
push
jge
clc
loop
js
xchg
xchg
add
sub
movs
and
out
movs
fst
orps
aas
movs
rcr
imul
jbe
inc
fstp
fwait
sub
js
push
nop
pop
nop
rcl
repz
xchg
add
or
and
int
mov
jl
(bad)
mov
sbb
jle
inc
pop
pop
fdivr
fwait
dec
sub
arpl
adc
jae
dec
cmp
lock
mov
aas
xchg
out
inc
xor
or
inc
jbe
or
lods
pop
cdq
pop
add
sbb
jae
fcom
jnp
inc
or
or
in
bound
pop
clc
sahf
mov
in
xchg
push
ror
xor
loopne
dec
dec
jmp
jmp
push
cmp
jle
leave
cs
adc
cmps
fs
pop
loopne
and
xor
aam
sub
xchg
call
push
add
pop
xchg
jne
lea
or
int3
addr16
ja
movs
push
push
sub
movs
jb
es
push
out
into
and
lods
es
out
lods
(bad)
cli
jmp
push
ror
daa
clc
clc
inc
enter
dec
and
mov
jge
imul
sub
sub
aam
pop
cdq
cmp
or
fst
xchg
fsubr
push
lock
ret
std
lock
call
jg
mov
call
add
movs
pop
dec
mov
sbb
repnz
dec
jno
bound
icebp
xchg
sub
and
scas
xchg
mov
dec
or
pop
fisub
sub
in
push
dec
(bad)
push
cdq
outs
xchg
sbb
loop
mov
xchg
js
nop
and
movs
mov
push
and
dec
loop
aam
mov
fist
(bad)
fimul
xor
aam
jno
mov
outs
xchg
mov
das
and
add
leave
lahf
cmp
aad
fiadd
ja
movs
leave
xchg
lahf
jne
out
mov
and
and
jl
xchg
add
out
and
cmp
pop
pop
enter
cmps
fisub
mov
stos
clc
dec
into
cs
dec
adc
ror
or
sahf
test
mov
xor
and
dec
mov
fild
sbb
jl
gs
nop
mov
xchg
cld
lods
icebp
xchg
and
es
sbb
jno
pop
cwde
inc
sahf
scas
and
retf
stos
repnz
cli
mul
shl
addr16
dec
cmp
jp
push
jmp
pop
and
nop
xchg
je
movs
mov
dec
dec
mov
xchg
jno
push
jmp
push
sub
cmps
jge
pop
push
dec
das
icebp
push
push
sub
jbe
xchg
(bad)
sub
gs
inc
dec
stos
sbb
retf
das
inc
(bad)
ins
xchg
icebp
dec
push
sbb
ror
jecxz
fs
dec
adc
mov
ins
in
or
cmp
dec
test
jae
push
sar
cmps
mov
dec
ss
sub
arpl
push
repz
mov
imul
sub
out
cs
neg
scas
sub
aas
stc
lods
lods
iret
repnz
arpl
jle
out
fs
stos
movs
inc
sbb
mov
xor
pop
(bad)
in
bound
out
or
push
add
lahf
ins
dec
xor
cmp
or
dec
(bad)
aas
arpl
out
cmc
idiv
dec
lods
add
test
sub
add
mov
push
mov
xor
call
std
dec
ja
jg
and
xchg
mov
xchg
(bad)
cmp
mov
out
retf
xchg
cmps
mov
xlat
cmp
lock
pop
mov
sub
out
rcr
dec
and
retf
mov
pop
mov
icebp
sbb
push
xchg
cli
mov
mov
cdq
aad
pushf
fyl2x
ret
(bad)
stc
ficomp
mov
jo
inc
add
movs
ret
into
retf
pop
or
pushf
sbb
ficom
adc
call
stc
xchg
mov
mov
mov
dec
jmp
mov
sbb
dec
jno
test
cmp
popf
(bad)
xchg
sbb
adc
mov
or
sbb
and
pop
test
movs
nop
or
jnp
mov
pop
mov
add
mov
dec
push
mov
sbb
int
call
mov
imul
cmps
inc
cmp
mov
rcr
xor
cwde
mov
ss
mov
pop
cli
sbb
xchg
lods
imul
inc
icebp
or
push
repnz
out
pop
jmp
shr
pop
scas
gs
cmp
jmp
mov
fdivr
push
std
push
cld
scas
dec
(bad)
jbe
fstp
pusha
ja
inc
sti
js
mov
les
xchg
push
cmps
movd
pop
xor
jo
or
ror
xor
adc
fst
cmp
pop
popf
enter
nop
sbb
xchg
dec
xor
or
das
nop
dec
dec
(bad)
fwait
aas
dec
out
jg
(bad)
fmulp
retf
push
mov
sub
pusha
lods
rcr
mov
jmp
lods
or
call
mov
mov
ss
jnp
aam
mov
xor
mov
and
in
adc
ins
cmp
out
test
push
je
(bad)
and
xchg
cmp
je
data16
aad
cwde
mov
out
call
popa
sbb
(bad)
mov
stos
repz
pop
mov
outs
popf
loop
fdiv
jmp
faddp
out
mov
jne
sbb
inc
cmps
add
pushf
jne
in
or
shr
mov
out
daa
je
popa
pushf
lds
mov
xor
arpl
dec
in
add
sbb
push
add
cmp
cmp
sar
lock
jne
out
pusha
sbb
int
sbb
cmp
pushf
aas
in
mov
outs
outs
pop
pop
(bad)
mov
sbb
xchg
push
pop
into
out
out
ror
popf
ret
cmp
mov
cmp
aam
lahf
push
fcomp
mov
push
lods
rcr
mov
addr16
jne
jmp
fadd
push
popa
into
jmp
dec
out
push
mov
jmp
sbb
aam
lock
inc
scas
arpl
push
ds
jbe
out
shr
in
outs
iret
xchg
ror
stos
cmp
cmp
stos
adc
pop
fisttp
push
jp
scas
shl
jbe
out
pop
sbb
dec
retf
jle
mov
mov
fistp
mov
nop
ja
ja
jbe
out
jle
push
xor
cmps
test
je
rcl
pop
xchg
into
mov
outs
popf
push
ss
dec
cli
rol
std
call
iret
dec
mov
fimul
mov
cmp
add
add
cdq
fnstsw
sahf
sti
dec
in
dec
adc
or
add
data16
and
sbb
xchg
pushf
jb
mov
test
stos
cmp
popa
leave
cdq
adc
jno
mov
or
les
lods
pusha
mov
push
push
adc
stos
cdq
sub
stos
add
mov
out
cs
pop
mov
loope
sub
mov
mov
sub
les
les
push
ins
xor
mov
sbb
xchg
jecxz
imul
jb
arpl
jo
xor
(bad)
data16
mov
add
jmp
xchg
scas
mov
mov
mov
push
lock
or
add
push
jmp
mov
jnp
cmps
out
xchg
sbb
in
sbb
arpl
pusha
and
or
nop
jno
xor
jbe
xchg
ret
sub
int
aad
jg
dec
adc
into
dec
es
lock
outs
add
(bad)
and
cmp
mov
retf
rcr
sub
mov
mov
pusha
aam
ins
push
aam
sub
mov
loop
ret
es
(bad)
xor
lds
push
adc
mov
mov
pop
fnstenv
test
sbb
cmp
jmp
sub
or
jo
jae
popa
adc
and
movs
inc
pushf
and
inc
into
loop
daa
pusha
outs
call
mov
pusha
sbb
and
aad
addr16
jge
adc
fs
aad
retf
add
ret
xor
and
lea
in
stos
not
lods
adc
arpl
dec
jno
mov
aas
shr
adc
stos
movs
dec
cmps
or
sbb
cwde
sub
push
jle
inc
cmp
sub
ret
pop
push
mov
idiv
sbb
(bad)
mov
shr
out
repz
add
mov
sub
shr
sahf
xchg
xchg
or
sbb
mov
inc
stos
ret
push
and
popa
adc
sub
fs
nop
das
fstp
inc
push
or
mov
mov
sbb
data16
mov
pushf
sar
pop
nop
fild
sbb
pop
cmp
fdivr
repz
jbe
cwde
pop
push
aam
cli
and
adc
movs
dec
retf
add
ror
bnd
or
sub
ret
adc
xchg
jno
xor
xor
pop
in
jo
fpatan
test
std
push
hlt
mov
and
rol
dec
icebp
mov
out
pop
test
test
movs
(bad)
gs
and
mov
and
icebp
lods
cmp
call
addr16
fsub
lahf
mov
out
mov
test
add
and
out
jae
and
aas
push
pop
ds
cmp
jno
loop
xor
jmp
xor
adc
jae
sbb
push
stos
imul
gs
adc
xor
xor
imul
retf
xchg
fsubr
mov
ret
and
push
mov
adc
inc
mov
(bad)
ins
scas
adc
or
rcl
cmp
call
xchg
xor
xchg
test
fsubr
sbb
stos
inc
xchg
mov
mov
repz
mov
inc
stos
inc
and
(bad)
jno
repz
push
inc
retf
jne
in
pop
pop
retf
jl
(bad)
mov
sub
or
or
pop
mov
ja
fldcw
gs
dec
inc
adc
mov
jecxz
jno
shl
xchg
fnsave
add
out
jecxz
mov
int
out
push
leave
add
pop
sub
and
xor
mov
inc
push
clc
cmp
sbb
xor
clc
lds
cmp
or
fstp
mov
push
xchg
or
aam
sub
adc
mov
ret
call
lds
cwde
mov
sbb
je
xor
data16
test
fndisi(8087
jge
pop
fwait
xor
(bad)
das
test
cmp
imul
mov
in
pop
pop
cmp
and
iret
jns
push
jmp
adc
and
push
dec
fadd
push
(bad)
mov
inc
fstp
mov
adc
pop
leave
xchg
cmp
and
inc
push
mov
xchg
aad
sub
dec
xchg
and
outs
aam
jl
ins
xchg
jmp
movs
inc
rcl
lods
cmp
rcr
movs
and
out
mov
in
addr16
in
cmps
dec
lock
ret
adc
mov
cmc
cmp
repz
jnp
mov
xor
dec
je
xor
js
inc
push
imul
(bad)
fldlg2
adc
mov
fstp
aam
aam
inc
jmp
fs
sahf
ror
push
addr16
mov
xchg
(bad)
loope
pop
add
xor
fst
dec
xor
adc
push
in
or
retf
stos
mov
aad
in
dec
mov
cli
mov
jns
loopne
mov
repnz
cmp
pushf
test
data16
xor
mov
mov
xchg
sbb
add
adc
push
adc
add
sub
cmps
mov
xchg
hlt
lahf
xchg
jnp
mov
xchg
push
push
sub
adc
xchg
pop
mov
jae
fcomp
call
jmp
push
(bad)
aad
je
pop
in
outs
cmp
ror
mov
ret
and
out
mov
jns
jmp
sbb
sbb
xor
pop
sub
xor
call
or
jo
popa
inc
loopne
rol
cmp
sub
cs
adc
cmps
cmp
sub
and
arpl
cmps
out
clc
imul
xor
fcomp
repnz
or
inc
fcomp
in
jl
mov
arpl
add
pop
aas
pop
mov
inc
test
mov
push
(bad)
sub
or
outs
push
out
in
jns
mov
imul
test
and
dec
dec
nop
(bad)
retf
arpl
imul
pop
xchg
repz
push
cmp
jne
jp
repz
mov
sahf
ret
mov
pop
ja
xor
add
(bad)
sar
jecxz
(bad)
ins
mov
push
jbe
ds
test
das
mov
push
jmp
ins
mov
dec
cmc
(bad)
and
out
imul
pop
in
cmp
jne
mov
adc
shr
mov
inc
xchg
add
stos
cmp
push
fistp
addr16
jl
cmp
mov
(bad)
push
dec
jo
fild
aas
in
add
mov
or
movs
fbstp
add
xchg
je
jle
mov
dec
sbb
gs
fsubp
adc
xchg
iret
xchg
jecxz
xlat
jecxz
mov
pop
pop
inc
call
loopne
mov
or
cmp
fdivr
cs
test
pop
sbb
mov
inc
popf
jbe
push
test
sub
and
mov
inc
ins
adc
jae
rcr
adc
xor
rcl
(bad)
push
dec
pop
imul
ins
dec
mov
jne
mov
adc
mov
xor
jecxz
sbb
mov
aaa
inc
pop
inc
sti
dec
add
sbb
add
or
mov
loopne
shr
inc
mov
shl
(bad)
test
mov
loope
out
das
int3
aas
inc
jmp
sub
mov
bound
pusha
cmp
add
shl
push
dec
sbb
push
fucom
popa
inc
mov
imul
mov
or
into
pop
jnp
jl
and
fdivr
and
xchg
std
repz
mov
outs
cmp
mov
test
push
(bad)
jge
pushf
inc
sahf
xchg
cmp
add
stos
ret
std
xor
and
inc
dec
push
add
or
mov
push
add
xchg
push
js
je
and
xchg
dec
mov
adc
xchg
sbb
cmp
inc
and
js
mov
pop
in
rcl
xchg
xor
and
lahf
xor
in
repnz
cmp
sbb
add
sub
push
pop
inc
scas
xor
mov
jecxz
xchg
and
adc
adc
push
inc
and
mov
je
jle
mov
or
cs
cmp
xchg
pop
push
mov
clc
mov
push
into
xor
xchg
out
ficom
es
lahf
pop
xchg
sub
sbb
and
pop
inc
xchg
and
inc
mov
mul
clc
add
adc
or
sub
fsubrp
push
gs
inc
mov
icebp
cmp
jp
out
mov
mov
sub
fadd
and
(bad)
push
out
mov
add
mov
popf
in
mov
call
sar
mov
rol
(bad)
cmc
mov
loop
jecxz
jle
jb
stos
cmps
sub
jmp
out
mov
(bad)
fwait
ds
fcomp
mov
mov
(bad)
xor
fwait
or
xchg
jl
xchg
dec
dec
(bad)
inc
icebp
add
jp
push
retf
mov
xlat
(bad)
pop
repnz
jmp
lods
sub
cmps
mov
pop
and
or
push
in
test
mov
push
mov
stos
stos
popa
call
mov
das
psubsb
mov
push
xchg
or
test
fadd
setnp
(bad)
sar
mov
push
xor
inc
scas
or
mov
xchg
inc
sbb
stos
lds
cmc
push
mov
or
arpl
push
loop
loopne
mov
or
ror
out
bound
mov
push
lods
jne
jno
and
mov
les
mov
pop
add
fadd
push
icebp
nop
loopne
add
jo
aam
xchg
cld
scas
fwait
mov
push
sbb
das
add
test
cld
(bad)
sbb
cdq
jno
jl
inc
xor
jp
add
daa
push
jne
movs
mov
or
adc
ins
inc
retf
hlt
imul
rcr
push
sub
imul
cwde
cmp
loopne
bound
add
fdiv
xor
mov
jbe
xchg
retf
stos
xor
or
aad
pushf
mov
daa
inc
and
xchg
sub
pop
cmp
femms
adc
sbb
adc
mov
or
imul
xchg
inc
movs
xchg
pop
adc
ins
aam
add
dec
ret
push
add
pusha
inc
and
xchg
inc
mov
mov
out
in
sbb
retf
cli
and
adc
cmc
mov
fsqrt
int3
and
cmp
mov
sahf
mov
(bad)
cmps
and
ja
lea
lods
cmp
(bad)
adc
fild
sub
mov
cmp
xlat
cmp
shr
mov
pop
lods
mov
rcr
cmp
pop
retf
repnz
es
mov
(bad)
outs
mov
xchg
movs
push
mov
cld
adc
xor
add
(bad)
aaa
inc
jbe
xlat
cmp
movs
pop
dec
mov
push
add
fidiv
pop
inc
ficomp
icebp
xor
inc
ins
popa
outs
xchg
mov
jo
push
int3
sbb
mov
mov
pop
mov
vshufpd
push
xor
sub
and
sub
dec
out
das
fwait
cmps
aaa
bound
push
repz
inc
pop
jno
(bad)
js
push
div
popa
ins
pop
jmp
or
not
add
jle
std
xchg
cmp
es
or
dec
ds
adc
enter
add
es
adc
test
dec
pop
jbe
loopne
adc
in
or
cmp
xchg
lods
daa
movs
add
jbe
(bad)
out
test
add
dec
jno
in
cmp
push
mul
jp
mov
scas
sub
and
std
and
mov
pop
enter
push
daa
arpl
out
xor
aas
mov
(bad)
or
mov
push
push
daa
or
dec
gs
mov
or
jmp
in
mov
ins
add
push
daa
or
stc
retf
sar
mov
jns
lods
(bad)
fst
pop
adc
add
pop
je
jg
add
pusha
lahf
adc
adc
jmp
(bad)
or
(bad)
and
fwait
mov
add
add
lods
mov
rcpps
mov
arpl
or
ss
pop
add
mov
adc
(bad)
aam
pop
mov
jl
pop
adc
push
fimul
ficom
jp
scas
stos
xchg
fld
jg
mov
mov
mov
xor
cmp
in
sub
outs
pop
and
mov
and
out
mov
pop
in
xchg
dec
pop
jae
inc
sbb
bound
scas
fst
and
adc
ins
(bad)
push
outs
jbe
pusha
jae
push
lds
xchg
ins
ins
push
pop
pop
in
lods
mov
fwait
arpl
data16
retf
mov
or
outs
test
adc
adc
cmp
fsub
js
or
shr
scas
repnz
outs
test
loope
mov
jo
(bad)
fld
bound
pop
and
and
adc
push
scas
sub
and
les
jns
mov
lock
xchg
sub
sbb
add
pusha
test
js
jmp
cmp
push
inc
sub
xchg
mov
in
mov
cld
and
inc
add
cs
jmp
mov
cmp
mov
mov
or
push
xor
push
mov
das
pop
retf
xor
icebp
xchg
and
dec
sub
xchg
fisub
nop
out
push
push
sub
push
add
xchg
div
cmps
(bad)
frstpm(287
mov
pushf
mov
gs
(bad)
cmps
lock
push
stc
imul
mov
inc
fnstsw
scas
jl
popf
sbb
retf
and
push
inc
int3
sti
stos
and
xchg
dec
retf
out
movs
dec
sub
or
xor
in
ins
mov
pop
loopne
mov
mov
mov
xor
arpl
data16
mov
jae
ret
mov
or
mov
addr16
adc
jmp
in
or
xor
mov
inc
cmp
push
pop
jmp
push
inc
and
outs
and
mov
stc
inc
and
cwde
scas
inc
mov
and
cdq
push
pop
fldcw
jno
adc
mov
inc
out
out
shr
nop
push
jb
or
outs
imul
inc
xchg
mul
xlat
retf
jl
frstor
sub
aas
cmps
div
push
shr
cwde
dec
lea
stos
retf
adc
mov
sub
pop
mov
mov
xor
ss
mov
lods
inc
and
xor
or
and
das
ret
jp
jne
pop
and
xchg
sbb
lods
ret
daa
inc
repnz
arpl
push
jo
sub
pop
out
out
xchg
in
retf
dec
(bad)
pushf
and
mov
cmc
fisttp
out
mov
dec
mov
lock
icebp
inc
add
lahf
push
clc
adc
sbb
enter
mov
in
fdivr
xchg
fistp
retf
cmp
adc
sub
popa
cmp
cmp
push
jnp
outs
dec
ins
ins
mov
jle
stc
inc
jecxz
pop
jle
ins
pop
xchg
shr
push
fs
dec
mov
ret
and
movs
stos
pop
pop
in
fst
push
retf
scas
call
rcr
pop
ret
mov
pop
inc
hlt
ja
ins
arpl
xor
inc
push
mov
xchg
xor
ret
or
arpl
xchg
mov
inc
cmc
mov
sub
lea
retf
mov
test
dec
(bad)
mov
push
retf
push
mov
adc
mov
add
sbb
les
scas
ss
and
(bad)
and
pmaxub
fcomp
stos
adc
std
stos
cli
dec
lods
push
xor
mov
icebp
cmp
and
mov
sbb
or
xchg
mov
mov
imul
jmp
mov
lock
(bad)
jne
jle
jno
retf
pop
inc
in
loop
outs
popf
cmp
inc
inc
adc
mov
cmp
pop
call
retf
push
es
and
xchg
nop
fimul
out
mov
call
and
(bad)
aaa
(bad)
aad
jmp
pop
cmp
xor
out
adc
inc
dec
xchg
arpl
popf
arpl
lods
nop
mov
fwait
push
into
xchg
push
fmul
cmp
hlt
push
sub
jecxz
les
xchg
and
outs
jmp
ins
enter
pop
cmp
imul
jmp
lds
mov
adc
pop
inc
outs
daa
out
pusha
aas
inc
sti
or
imul
dec
in
and
inc
and
cmp
and
and
test
cmp
pop
rol
ins
loop
mov
jo
or
add
int
jmp
pop
dec
inc
scas
jno
add
push
jg
push
movs
mov
(bad)
sbb
cmp
xor
loop
sub
mov
shl
mov
dec
dec
pusha
sub
pop
(bad)
enter
push
out
bound
loope
enter
or
mov
sbb
mov
ins
test
mov
mov
fisttp
std
neg
mov
cmp
xlat
ins
dec
out
pop
(bad)
mov
imul
adc
jae
xor
adc
shl
xchg
test
call
mov
cdq
movs
nop
daa
xor
ret
and
mov
inc
push
mov
sbb
sub
mul
hlt
repnz
and
ret
xchg
jmp
std
mov
adc
and
scas
inc
xchg
xchg
lahf
loop
loopne
lahf
sub
pop
push
mov
gs
xchg
push
bound
arpl
nop
dec
and
iret
rol
push
jle
and
cmp
ror
sub
cmc
inc
or
aaa
dec
ss
mov
xor
push
mov
xor
cmp
push
adc
pop
push
popa
psrld
jle
dec
(bad)
movs
enter
daa
stos
cs
push
add
or
add
icebp
das
xor
lahf
shr
pop
push
cdq
lds
push
sub
test
movs
(bad)
or
xlat
cs
mul
stc
movs
jg
fisub
data16
cmc
sub
ret
add
push
add
inc
cmps
enter
ds
inc
(bad)
jbe
aad
jg
dec
bswap
shr
mov
cli
pop
lock
or
and
inc
rcr
cmp
data16
mov
mov
pop
jmp
into
and
out
es
shl
xchg
int3
aad
enter
pop
jmp
xor
call
xlat
mov
(bad)
push
jmp
mov
test
outs
(bad)
push
push
popf
pop
(bad)
clc
xchg
mov
mov
and
push
cld
sbb
adc
or
lods
jp
sub
sub
mov
mov
mov
xchg
sbb
dec
in
fidiv
adc
push
out
ret
xlat
mov
push
cmp
or
scas
int3
in
lods
and
loop
adc
xchg
imul
sub
aam
ss
inc
cdq
cmps
pop
ficom
call
in
cmp
jns
test
jns
lods
xor
inc
pop
adc
cdq
hlt
jp
mov
out
es
push
mov
aam
sbb
stc
xlat
sub
out
xchg
(bad)
lods
xchg
fisub
mul
mov
fimul
jnp
cld
cli
cld
push
jne
sub
sub
fcmovb
call
fdivp
push
mov
lock
ss
pushf
push
ror
dec
mov
xor
push
repnz
mov
leave
pop
fistp
add
ds
repnz
mov
ins
pop
sar
into
mov
mov
inc
push
lods
lds
mov
int3
aam
dec
or
cmc
vmread
call
add
pop
cs
mov
jg
adc
xchg
out
and
mov
(bad)
mov
fstp
dec
pop
iret
xor
xor
fwait
xor
jae
pop
sbb
iret
js
adc
std
js
push
ins
gs
jp
call
and
repnz
imul
adc
adc
cmps
adc
(bad)
sti
inc
pop
sahf
(bad)
pushf
mov
push
in
inc
jno
inc
cmp
mov
add
mov
adc
sbb
dec
dec
push
cmp
cmps
ds
imul
mov
inc
inc
xchg
sub
retf
or
push
add
add
push
mov
sbb
es
add
cmp
popa
aam
push
cmp
add
imul
xor
and
xor
out
gs
gs
in
loope
mov
pop
aaa
mov
fild
imul
adc
pop
push
xchg
or
daa
mov
push
iret
and
jne
push
leave
scas
out
and
pop
pusha
fstp
int3
dec
pop
cmp
push
icebp
sbb
push
and
bound
or
inc
xor
adc
mov
lahf
cmp
fmul
movs
out
ror
mov
push
fstp
cmps
loop
fdivr
cpuid
lock
movs
or
jmp
jnp
or
out
pop
daa
outs
jnp
or
mov
cmps
outs
stos
rcr
sbb
fnsave
adc
sub
call
jno
sbb
or
push
cmp
shr
pop
sbb
repz
out
inc
push
cmps
or
not
add
gs
fld
repz
pop
mov
lods
jnp
sub
outs
mov
jmp
xchg
test
push
ja
inc
mov
cmp
push
pop
jno
or
cmp
dec
stos
mov
jo
xchg
pop
repnz
and
enter
cwde
ss
jp
xchg
ret
jmp
jnp
or
sahf
push
adc
add
adc
push
pushf
push
mov
popf
or
repz
out
cmc
int
stos
adc
mov
jge
add
shl
mov
dec
pushf
lea
mov
je
jae
scas
(bad)
mov
pop
or
cmp
add
add
add
add
add
and
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
sub
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
xor
add
add
add
add
adc
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
xor
add
add
add
add
jle
add
add
push
add
or
add
xor
add
add
add
add
sldt
or
add
xor
loop
add
push
add
adc
mov
add
sbb
(bad)
(bad)
push
add
add
outs
adc
add
cmp
add
add
add
add
sub
push
add
add
add
add
sub
add
outs
adc
and
add
jo
lea
push
add
or
add
or
sbb
add
add
add
push
add
add
add
add
sub
add
adc
sbb
add
sub
add
sub
fisubr
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
or
or
add
or
add
or
add
or
or
add
or
add
or
push
add
add
add
add
sub
add
outs
and
add
fsubr
add
sub
sub
add
sbb
add
add
cwde
add
je
add
add
ins
add
add
adc
add
sbb
add
pop
add
adc
(bad)
push
add
add
outs
and
add
add
add
adc
push
add
push
add
and
add
sub
xor
add
add
adc
add
and
add
sub
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
xor
add
add
add
add
adc
add
adc
add
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
adc
add
and
add
sub
add
sub
add
adc
add
pop
add
add
sub
add
xor
add
add
add
add
adc
push
add
add
adc
add
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
add
and
add
sub
xor
add
add
adc
add
jle
add
or
or
add
add
sub
add
jle
add
or
push
add
and
add
sub
xor
fadd
add
adc
add
jb
add
jo
push
sub
add
adc
adc
sub
or
push
sub
call
jns
add
pop
sub
add
adc
adc
sub
add
add
mov
xor
add
push
call
xchg
add
jo
or
sub
add
adc
adc
sub
add
push
xor
add
push
call
movs
add
jo
das
add
or
sub
add
outs
xor
add
jb
add
jo
sbb
outs
xor
add
sub
add
outs
xor
add
jb
add
jo
fadd
add
jmp
add
xor
add
jb
add
jo
xor
add
fimul
sbb
add
sub
add
or
add
add
add
add
add
iret
iret
add
add
add
xor
add
add
add
add
jle
add
add
sub
add
or
jb
add
jo
or
add
sub
add
outs
aaa
add
or
add
or
pop
or
add
or
add
add
xor
add
add
add
or
add
add
push
add
sub
xor
add
add
add
add
adc
sbb
add
jb
add
jo
or
add
cmp
add
sub
add
or
pop
je
add
sbb
add
add
pop
add
push
sub
add
or
add
or
add
add
push
add
cmp
add
sub
xor
add
add
add
add
adc
add
add
add
adc
add
push
add
add
add
adc
and
add
sub
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
or
add
jle
add
or
add
add
and
jb
outs
addr16
add
add
add
add
and
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
inc
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
cmp
pusha
add
jp
inc
add
add
add
add
enter
push
add
add
inc
pop
push
lds
add
push
inc
add
add
daa
add
add
add
push
adc
push
add
push
inc
add
add
add
pop
xchg
adc
inc
pop
call
pop
push
add
add
add
add
pop
mov
add
mov
add
or
push
add
dec
add
call
add
add
or
or
add
add
or
or
or
or
push
add
add
add
add
or
push
add
or
push
add
or
push
add
or
add
add
add
add
add
add
add
add
add
sub
aaa
add
add
add
add
aaa
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
mov
sub
add
add
add
add
xor
test
movs
add
add
add
add
add
add
pop
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
pop
add
add
adc
pop
add
add
add
ss
add
add
or
sub
add
in
ss
add
add
or
add
pop
add
add
or
add
add
sbb
pop
add
add
or
add
add
xor
pop
add
add
add
add
add
inc
cmp
add
add
add
add
add
pop
add
add
sbb
add
add
add
pop
add
add
mov
add
inc
add
add
cmp
add
add
add
mov
add
fiadd
call
add
add
mov
add
cmp
add
add
rol
add
add
add
add
add
add
fiadd
call
add
add
add
add
add
add
add
add
add
add
pop
add
add
sbb
add
add
add
pop
add
add
or
add
cmp
add
add
sbb
add
add
add
add
add
add
add
add
add
or
mov
pop
add
cmp
add
add
or
add
cmp
add
add
or
add
cmp
add
add
or
add
pop
add
add
sbb
pop
add
add
pop
add
add
sbb
add
add
add
pop
add
add
or
add
add
add
pop
add
add
or
add
add
add
add
add
add
add
jg
add
add
mov
add
add
add
add
jg
add
add
mov
add
add
push
add
add
push
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
jecxz
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
xor
push
add
add
add
add
or
leave
add
add
add
add
call
add
add
add
add
out
fld
jg
adc
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
hlt
add
add
add
add
pop
add
xor
push
or
add
add
or
add
add
or
add
add
or
add
push
add
add
add
cmp
cmp
push
inc
add
push
add
inc
add
pop
add
push
add
add
stos
or
adc
popa
add
add
add
jns
push
add
add
add
add
add
add
add
add
add
add
add
add
sub
xchg
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
sub
rol
add
add
add
add
jmp
add
add
add
add
add
out
add
sub
pop
add
adc
out
add
sbb
inc
dec
add
add
add
add
sbb
inc
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
ret
add
add
add
add
add
add
add
pop
add
add
pop
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
and
mov
pop
add
add
add
add
sub
pop
add
sbb
ret
add
add
add
add
adc
out
add
sub
pop
add
mov
pop
add
rol
pop
add
add
add
pop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
pop
add
adc
out
add
sub
pop
add
adc
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
inc
add
pop
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
adc
add
sbb
add
add
add
add
jne
jne
jne
sahf
add
and
sub
xor
cmp
rol
popa
add
add
add
nop
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
add
pop
add
add
adc
push
add
add
adc
adc
pusha
add
add
add
add
add
add
add
add
sub
pusha
add
add
add
add
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
outs
addr16
ins
cs
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
dec
outs
fs
xor
push
jb
addr16
ins
add
jae
jne
arpl
add
outs
addr16
ins
cs
jns
push
gs
jne
arpl
add
push
gs
imul
push
gs
imul
jo
jb
jns
dec
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
jae
ins
gs
jo
ins
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
dec
popa
imul
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
je
inc
jne
ins
add
ins
je
jb
add
imul
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
addr16
push
gs
imul
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
imul
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
inc
imul
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
arpl
jae
push
jns
je
ins
cs
dec
add
je
add
je
imul
imul
je
outs
jae
outs
outs
add
je
jb
arpl
jae
jae
jns
popa
ins
add
ins
ins
add
arpl
jns
inc
imul
jns
outs
outs
add
gs
je
inc
imul
jns
push
gs
gs
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
dec
jns
gs
imul
ins
gs
jns
je
ins
push
jb
js
add
je
inc
imul
ins
add
imul
je
jae
push
imul
outs
js
add
je
push
imul
gs
popa
ins
jne
add
popa
jb
add
inc
push
push
inc
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
gs
bound
arpl
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
je
imul
add
outs
arpl
outs
outs
imul
outs
addr16
ins
cs
gs
jne
arpl
cs
jae
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jb
addr16
ins
cs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
jb
jne
outs
add
pop
imul
add
add
jbe
imul
add
imul
add
add
imul
inc
add
add
add
outs
add
jb
popa
add
inc
add
je
popa
add
add
je
add
add
sub
and
dec
add
outs
add
add
ins
add
outs
add
addr16
add
add
add
outs
add
jb
popa
add
inc
add
je
popa
add
add
je
add
add
sub
and
dec
add
outs
add
add
ins
add
outs
add
add
outs
add
add
add
arpl
imul
add
add
add
js
add
add
add
pop
add
add
inc
add
add
inc
add
dec
add
dec
add
pop
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
aaa
dec
add
je
add
add
sub
and
dec
add
outs
add
add
ins
add
outs
add
add
add
jbe
imul
add
push
add
outs
add
jb
popa
add
add
add
outs
add
jb
arpl
add
add
inc
add
imul
add
mov
das
inc
mov
jl
mov
or
xor
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
adc
add
adc
or
adc
add
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
sbb
add
add
add
add
push
adc
add
add
add
push
adc
add
adc
and
add
and
adc
add
and
add
and
add
add
add
sub
add
sub
xor
add
add
add
add
add
push
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
add
adc
or
adc
or
adc
adc
adc
adc
adc
sbb
add
or
pop
add
or
add
adc
add
adc
pop
add
sbb
add
push
adc
add
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
jns
inc
outs
jb
jae
add
add
push
dec
jns
push
bound
jb
imul
add
or
cs
outs
ins
jo
je
jb
add
and
add
add
adc
add
push
sbb
add
add
add
add
add
imul
and
add
adc
and
add
pop
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
sbb
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
add
add
add
push
pop
add
sbb
push
add
adc
add
sbb
sbb
add
sbb
push
sbb
add
adc
or
push
push
sbb
adc
test
push
push
add
sbb
and
adc
add
adc
adc
adc
add
add
and
push
adc
pop
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
or
add
sub
add
sub
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
or
cs
gs
imul
and
add
xor
or
add
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
pop
xor
xor
xor
xor
add
add
and
xor
sub
sub
sub
sub
arpl
gs
data16
add
add
sbb
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
or
add
push
jb
addr16
ins
add
push
add
or
arpl
jae
data16
add
add
add
add
scas
push
pop
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
