push
call
mov
push
push
push
push
push
call
push
call
push
mov
cmp
jne
push
push
push
call
push
call
jmp
cmp
jne
jmp
cmp
jne
push
push
push
call
push
push
call
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
push
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
push
push
call
test
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jne
mov
mov
mov
push
mov
push
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
push
push
call
test
jne
mov
jmp
mov
mov
sub
mov
mov
test
je
mov
cmp
jb
jmp
cmp
jne
push
push
call
test
je
xor
jmp
mov
add
mov
add
mov
add
mov
mov
mov
mov
lea
push
mov
add
push
call
add
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
je
xor
jmp
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
je
xor
jmp
lea
push
push
push
push
push
call
test
je
int
push
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
call
mov
mov
sub
mov
mov
mov
mov
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
mov
mov
ret
mov
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
pop
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
push
mov
sub
cmp
jne
mov
mov
mov
jmp
mov
add
mov
mov
shr
cmp
jae
mov
mov
movzx
mov
mov
shr
cmp
jne
mov
and
add
mov
mov
sub
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jne
call
jmp
call
mov
mov
pop
ret
int3
mov
push
inc
add
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
add
inc
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
push
inc
add
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
push
inc
add
push
inc
add
add
add
add
inc
add
inc
add
inc
add
add
add
inc
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
shl
jle
mov
mov
movs
inc
popf
jno
xchg
data16
jp
addr16
movs
jno
addr16
add
jl
jno
addr16
add
mov
pop
jno
outs
pop
pop
cmps
ins
and
adc
mov
push
jae
add
ja
inc
rcl
push
add
add
ja
ins
mul
repz
ja
arpl
add
jae
dec
(bad)
jno
outs
movs
pop
cmps
ins
popf
jns
push
rcl
add
adc
add
xchg
xchg
adc
add
xchg
jle
mov
push
js
inc
pop
jno
push
mov
js
addr16
fs
sub
add
jae
ins
and
cmc
xor
jno
outs
rcl
pusha
repz
call
add
jb
jo
popa
mov
fs
shl
fnstsw
add
jb
pusha
mov
mov
jle
ja
jbe
inc
xchg
jns
pusha
rcl
bound
pop
mov
add
jbe
push
add
add
mov
bound
add
jns
ins
bound
mov
sbb
cmc
xor
jno
outs
rcl
push
adc
data16
data16
add
adc
lahf
xchg
sar
add
clc
lds
shl
add
and
add
cld
lds
sar
sar
add
cld
lds
sar
add
cld
lds
add
add
cld
lds
sar
add
cld
lds
sar
add
pushf
ret
out
fdivr
hlt
fnstsw
lea
mov
push
jmp
and
scas
ins
es
in
and
mov
pop
sbb
mov
shr
mov
adc
dec
call
or
stc
add
add
je
stc
mov
je
clc
loopne
loop
cmp
loopne
aam
push
je
clc
loopne
int
loope
jecxz
loopne
repnz
psubw
je
stc
mov
je
stc
mov
jge
stc
mov
adc
jg
rcl
mov
inc
das
add
adc
add
adc
(bad)
icebp
lds
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
ret
jmp
(bad)
jmp
(bad)
fiadd
add
ret
jmp
(bad)
inc
adc
mov
enter
ffree
add
sbb
add
mov
sbb
add
ret
add
mov
sbb
add
mov
sbb
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
call
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
mov
add
ds
add
in
aad
shr
add
in
cmp
mov
lds
shr
add
in
lds
ror
add
fidiv
add
call
shr
add
in
movs
add
in
lds
add
add
in
lds
shr
add
sub
add
dec
ret
in
in
pop
shr
add
in
jne
shr
add
in
lds
shr
add
in
lds
shr
add
mov
push
cmpps
adc
das
rol
adc
das
cmp
adc
das
add
adc
outs
add
push
adc
jno
popa
add
add
adc
das
mov
rcl
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
add
out
lds
shr
add
out
lds
shr
add
out
lds
shr
add
in
lds
shr
add
in
lds
shr
add
in
lds
shr
add
in
lds
shr
add
in
lds
shr
add
mov
rcl
(bad)
int
add
add
mov
scas
addr16
inc
lods
push
cs
addr16
cld
push
inc
rcl
push
cmp
ror
je
xchg
xor
push
cmp
das
pop
imul
pop
rcl
add
xchg
mov
test
es
mov
dec
rcr
add
add
push
das
mov
or
add
push
arpl
fistp
sub
push
das
jge
sub
pop
ror
in
fidivr
add
push
cmp
fbstp
adc
bnd
inc
(bad)
repnz
(bad)
stos
jns
dec
daa
jmp
fs
inc
push
and
rol
mov
jge
lods
jmp
and
add
add
retf
popf
jno
jmp
fwait
sub
retf
dec
retf
inc
retf
(bad)
jmp
dec
fcomip
data16
add
xchg
sub
ret
scas
jbe
(bad)
jmp
xchg
or
jmp
(bad)
jmp
adc
jo
mov
mov
add
mov
xchg
jno
sub
cwde
into
xor
sbb
add
push
xor
sbb
(bad)
in
jmp
cmp
xor
push
cmp
popf
inc
mov
test
dec
out
ror
iret
aam
or
pop
pop
sub
sbb
mov
pop
sub
leave
retf
addr16
cmc
rcr
sbb
push
aad
loop
mov
xchg
and
add
add
adc
rol
in
mov
jmp
dec
and
add
ins
sbb
movs
mov
lods
daa
or
ret
inc
mov
mov
lods
and
into
mov
clc
ret
sti
repnz
int
stos
sub
js
or
mov
mov
pop
dec
dec
mov
leave
in
jns
jge
jns
add
add
jns
lea
cmp
mov
jne
test
adc
adc
dec
(bad)
or
jmp
lds
mov
movs
daa
xchg
jmp
rcl
(bad)
scas
push
lods
in
mov
mov
fsubr
fadd
add
les
fsubr
ret
cmc
cmp
sbb
int
jns
xchg
leave
add
and
or
out
loopne
or
xor
cmp
std
fcmovne
cmp
mov
dec
push
ror
arpl
ror
adc
mov
adc
daa
in
(bad)
(bad)
sti
cmps
ret
dec
sub
inc
xor
pop
cmp
xchg
add
add
cmp
test
adc
or
lea
xor
jmp
pop
push
ret
mov
cmp
push
or
jle
data16
jmp
mov
ja
jae
adc
sub
es
and
cdq
mov
push
sbb
in
lds
jae
jb
pop
xor
out
cmc
add
out
pop
jmp
add
add
pop
add
pop
or
repz
gs
ror
sbb
in
mov
push
sbb
in
les
in
jle
cmp
mov
inc
xchg
add
pop
mov
adc
pop
in
stos
pop
adc
or
stc
inc
sbb
(bad)
cs
ret
lods
rcl
je
lds
dec
jp
hlt
test
jne
sldt
add
mov
xchg
sub
iret
std
stc
add
iret
or
sbb
mov
mov
mov
inc
in
fwait
add
popf
pop
dec
cs
out
lds
sub
test
bnd
inc
int
lds
rol
(bad)
gs
inc
ret
add
add
into
inc
retf
mov
add
icebp
(bad)
call
fldenv
cs
shr
adc
repnz
adc
add
push
das
push
push
push
clts
rcl
jecxz
(bad)
cmp
outs
push
das
jge
xor
sbb
cmps
loope
out
pop
add
add
mov
inc
ror
add
cmps
inc
popf
mov
popf
add
mov
cdq
mov
sub
push
(bad)
jmp
retf
out
push
(bad)
jae
fimul
push
inc
adc
loop
ret
popa
in
or
and
push
mov
xchg
inc
cmp
lods
stos
xchg
call
(bad)
scas
fcmovnbe
lods
jmp
lods
jmp
test
cmp
push
inc
xchg
das
mov
dec
(bad)
mov
cs
add
nop
add
es
jae
sbb
inc
pop
push
mov
jnp
jbe
push
icebp
fcom
pop
sbb
adc
mov
iret
in
or
dec
push
sub
add
add
mov
js
mov
mov
or
sahf
mov
pushf
mov
pop
mov
cmp
push
pushf
stos
cld
aaa
mov
xchg
xor
ss
aaa
xlat
inc
arpl
mov
(bad)
mov
imul
cmp
les
call
dec
xchg
cmp
mov
xor
xor
mov
cmp
mov
jmp
cld
cmp
ins
test
adc
mov
aaa
xchg
pop
call
push
mov
adc
sub
xlat
adc
push
lds
cmp
cld
cmps
inc
push
xchg
add
xchg
push
mov
rcr
jg
cmp
mov
cmp
cmp
jns
pushf
jo
cmp
out
and
jmp
hlt
cmp
ss
push
fld
out
cmp
jns
ss
(bad)
sahf
mov
scas
test
popa
cmp
dec
(bad)
sbb
pushf
and
add
jbe
movs
cmp
jmp
adc
dec
pop
aaa
jg
and
addr16
sar
gs
cwde
mov
(bad)
std
adc
cmp
mov
xor
push
nop
out
mov
sbb
inc
lahf
and
imul
std
std
push
jae
sbb
push
jp
sar
cmp
adc
add
add
icebp
xchg
int
xchg
mov
mov
sar
icebp
add
inc
pinsrw
bound
xor
mov
aas
mov
push
ja
mov
push
or
lds
cwde
gs
inc
enter
in
cmp
scas
sti
add
aam
mov
dec
into
mov
push
dec
xchg
xor
add
dec
inc
sub
push
imul
cmp
in
jo
sub
(bad)
mov
sbb
add
mov
cmp
das
xchg
add
dec
mov
add
cmp
add
mov
and
shl
mov
mov
push
dec
jge
std
jno
mov
mov
xor
add
add
mov
xchg
adc
adc
inc
mov
cld
push
inc
cmp
and
add
push
and
cs
cmp
rcl
cld
repz
mov
mov
jno
imul
and
sub
xchg
xor
cld
icebp
xor
out
aam
or
sbb
cs
adc
pop
jnp
add
inc
ds
jnp
sbb
stos
ins
mov
cwde
jnp
call
cmp
and
fwait
aaa
jnp
push
pop
out
fwait
mov
jnp
call
inc
inc
enter
aaa
jnp
sbb
sbb
das
jnp
rol
out
or
das
add
jmp
loope
rol
add
cmc
loope
pop
dec
ret
and
sbb
mov
into
xchg
xor
aad
ja
sar
jge
(bad)
inc
push
mov
adc
mov
addr16
cwde
inc
inc
(bad)
into
fidiv
adc
cmp
(bad)
into
jg
jne
hlt
popa
retf
call
cmp
dec
xchg
mov
add
dec
addr16
stc
push
jae
sbb
les
into
rcr
push
mov
sbb
sbb
add
sbb
push
push
imul
xchg
shl
(bad)
pop
mov
dec
mov
adc
jg
adc
nop
pop
rcl
in
shl
pop
dec
push
add
add
or
push
retf
sti
push
mov
dec
push
adc
inc
cmps
lds
push
pop
mov
imul
in
cld
out
cmp
sar
inc
shl
cmps
in
shl
mov
and
inc
push
sbb
into
inc
mov
les
sbb
mov
adc
jp
sbb
push
into
mov
mov
jae
aas
adc
add
cmp
dec
sbb
xchg
mov
mov
jae
aas
adc
cli
dec
sbb
xchg
mov
mov
jae
aas
adc
cli
dec
sbb
xchg
mov
cld
ss
in
push
cmp
cld
repz
cmps
adc
mov
retf
xchg
cmp
dec
cmp
movs
or
(bad)
retf
std
ins
add
add
gs
in
jg
cmp
dec
jecxz
lahf
aaa
(bad)
adc
(bad)
jae
stos
test
retf
test
mov
retf
cwde
adc
movs
test
and
push
mov
stc
aas
xor
movs
test
loopne
cmp
mov
leave
shl
cs
mov
xor
xchg
fstp
retf
(bad)
cwde
rcr
inc
addr16
dec
add
add
cmp
push
mov
add
or
addr16
outs
sub
(bad)
jmp
(bad)
jmp
xchg
popa
add
cmp
jle
dec
loop
fs
sbb
dec
outs
or
mov
addr16
enter
pushf
xchg
dec
mov
ja
enter
mov
leave
aas
lahf
shl
add
adc
sub
in
add
cdq
xchg
pop
xchg
push
into
mov
sbb
ret
dec
inc
adc
data16
jmp
or
jmp
(bad)
xchg
mov
jmp
pop
pushf
into
mov
sbb
jg
call
xchg
repz
mov
dec
or
std
cmp
add
add
popf
push
(bad)
jmp
dec
or
add
push
pop
cmp
rcr
add
cs
dec
inc
rol
sbb
sbb
push
push
adc
loopne
dec
add
add
pop
cmp
leave
mov
out
ret
dec
inc
mov
cmp
mov
dec
cmps
(bad)
scas
xchg
hlt
mov
add
dec
jb
cld
sahf
sub
mov
aas
jb
inc
pop
sbb
xchg
mov
(bad)
cmc
cld
xchg
xor
ins
push
sbb
inc
ss
pop
pop
cmc
les
sbb
dec
mov
loopne
cmp
dec
xchg
push
(bad)
enter
arpl
dec
mov
pop
fcomip
fwait
mov
mov
call
movs
enter
jge
fild
add
ficomp
jb
into
(bad)
fisttp
dec
xchg
xchg
fnsave
mov
fnsave
dec
push
jecxz
jno
stos
mov
mov
xor
adc
mov
pop
(bad)
mov
dec
gs
loop
(bad)
adc
aas
mov
and
pop
(bad)
cmp
add
call
add
add
(bad)
cmp
ss
jmp
in
pusha
ret
sti
push
arpl
pushf
xchg
out
dec
push
into
jno
sbb
stos
sahf
in
and
dec
nop
dec
lahf
call
(bad)
ja
mov
jge
arpl
popa
inc
popf
cmp
call
aaa
call
rcr
dec
push
les
idiv
add
add
xchg
cld
stos
xchg
inc
xchg
in
cmp
inc
mov
cmp
xchg
xchg
push
(bad)
pop
jmp
or
add
adc
xchg
mov
sbb
add
cmp
mov
jle
cld
pop
jmp
and
xor
cld
push
mov
push
loopne
push
sbb
fisttp
(bad)
fidivr
cld
add
add
push
mov
cmp
pop
xchg
mov
shl
fwait
fs
sbb
les
and
iret
cmp
dec
sahf
fyl2x
sbb
dec
(bad)
cmp
cs
or
sahf
ror
xor
adc
sti
dec
xor
or
jb
inc
test
cmp
sub
out
test
dec
out
int
inc
cmps
adc
into
sbb
rcl
add
xchg
xchg
cmps
mov
cld
cmps
aaa
fimul
xchg
inc
dec
jae
dec
pop
mov
adc
jle
jle
inc
sub
xor
fldenv
mov
or
sub
push
and
mov
mov
inc
and
dec
sbb
push
(bad)
sub
sub
(bad)
sub
add
add
sub
out
pop
cwde
test
mov
(bad)
mov
movs
inc
leave
ret
cmp
pop
fld
push
(bad)
fidiv
mov
xchg
ret
mov
outs
inc
push
(bad)
jmp
dec
addr16
sar
xor
ret
dec
outs
inc
sar
xchg
xchg
sub
xor
mov
call
add
nop
jae
movnti
and
stc
adc
xlat
arpl
dec
aaa
xchg
sar
lods
mov
sub
inc
push
ret
std
dec
into
jno
push
dec
sub
mov
into
jno
or
shl
push
mov
sbb
sti
dec
int
(bad)
popa
push
(bad)
mov
inc
mov
add
add
mov
das
or
into
pop
(bad)
popf
jmp
adc
add
mov
rcr
or
in
int
iret
fmul
or
gs
push
ret
jns
mov
mov
push
les
call
jmp
push
data16
jb
lods
add
lods
add
adc
cmp
push
rcl
add
add
xor
adc
outs
lock
dec
aam
imul
es
or
mov
outs
lds
rol
dec
or
push
shr
push
cs
sub
dec
repz
sbb
push
xchg
cmps
adc
fstp
add
out
ror
add
(bad)
inc
shl
loopne
or
ins
mov
push
jge
pop
sbb
inc
ror
(bad)
mov
mov
lods
(bad)
leave
mov
xchg
les
scas
push
xadd
repz
jge
jmp
jne
pop
mov
adc
outs
add
fisub
das
inc
mov
add
rcl
pop
shl
sbb
cs
mov
mov
shr
push
sub
push
sub
mov
sub
out
call
(bad)
jmp
(bad)
ja
mov
inc
stos
push
pop
leave
xor
scas
adc
push
in
pop
hlt
call
or
dec
xor
add
in
push
mov
dec
adc
push
das
xchg
cmp
cs
xchg
sub
vcmpss
mov
leave
xor
add
cwde
maxps
mov
or
mov
mov
xchg
cmp
fsub
mov
ror
ds
inc
loop
cld
cs
(bad)
imul
add
push
adc
inc
nop
and
pop
jecxz
mov
xchg
cmp
ins
stc
dec
push
call
pusha
(bad)
push
idiv
pop
add
mov
or
cs
add
cld
pop
pusha
(bad)
mov
cmp
push
scas
loop
lahf
mov
push
shl
xchg
push
in
ror
sbb
and
add
xor
sar
out
inc
rcr
jbe
xchg
clc
not
inc
xchg
shr
dec
(bad)
scas
lds
shl
pop
inc
mov
fadd
jmp
cld
adc
inc
repz
sbb
jmp
stos
lds
cmp
test
jp
out
inc
mov
bound
popa
outs
lds
add
mov
xchg
mov
add
adc
(bad)
int3
fidivr
mov
xchg
pushf
add
adc
mov
rcl
cs
push
rcl
pop
inc
or
mov
inc
sar
daa
xchg
ror
inc
cmps
imul
push
xor
adc
lods
leave
ret
jg
jge
adc
das
pop
pop
mov
jge
add
pop
icebp
cs
adc
sub
leave
ret
nop
imul
aam
jg
pop
adc
imul
call
sub
push
repnz
xchg
xor
vcmpnlt_uqss
dec
cmp
leave
jne
pop
les
sbb
sub
or
mov
bound
add
cmp
push
rol
add
add
push
(bad)
popa
jb
cmp
xchg
add
ret
outs
or
inc
xor
mov
nop
sbb
ret
neg
cmp
xchg
adc
push
add
push
add
xchg
xchg
and
cmp
xchg
add
stos
mov
mov
iret
cmp
sbb
retf
adc
and
add
retf
adc
mov
aad
cld
out
cmp
repz
sbb
rol
repz
pop
push
(bad)
cld
gs
mov
sub
dec
adc
push
cmp
or
add
and
push
push
rcl
sub
cld
out
ss
push
ret
dec
xchg
(bad)
or
pop
mov
int
pop
jmp
test
test
mov
mov
adc
and
out
rcr
adc
jmp
test
test
sbb
add
scas
bound
and
xor
push
xor
lods
push
xchg
inc
ror
push
int
test
bound
mov
mov
ror
jno
xor
add
xchg
push
das
jns
pop
cmp
test
mov
addr16
ror
iret
mov
lahf
inc
shl
push
js
add
pop
sbb
mov
pop
push
das
mov
adc
pmaxub
movs
in
mov
xchg
or
pop
mov
das
pop
popa
mov
fst
das
inc
mov
(bad)
xor
xor
xchg
lahf
mov
xor
lods
jmp
add
mov
(bad)
jmp
cmp
xchg
mov
(bad)
dec
inc
stc
cmc
stos
(bad)
adc
sub
or
inc
loop
inc
xor
cmp
jmp
adc
add
or
inc
popa
add
jl
ret
adc
jno
les
mov
add
ds
gs
jnp
in
sub
add
cmp
cld
or
pop
mov
adc
imul
add
ror
mov
cmp
cwde
pop
mov
cmp
inc
test
les
test
cmp
add
add
adc
add
add
ror
cld
leave
fld
push
retf
fcmovnbe
retf
xor
cld
out
dec
xchg
cmp
sar
lods
popf
mov
lds
xor
add
lods
or
shr
rcr
inc
popa
call
xor
or
inc
xchg
or
add
add
aas
lock
cmps
mov
add
or
dec
mov
dec
xchg
enter
pop
nop
push
inc
cmps
jne
push
std
mov
push
fld
mov
sub
in
ret
mov
sti
(bad)
out
push
shl
enter
aam
cmp
or
sub
dec
cmp
leave
cs
lock
pop
and
add
shr
adc
das
jnp
rcr
sar
pop
pop
cmps
inc
shl
fcmovnbe
mov
aas
cmp
jne
test
add
pop
sub
in
inc
shr
add
sub
mov
(bad)
jmp
mov
jg
jo
sub
stc
cs
adc
enter
xlat
imul
add
adc
cmp
call
mov
mov
js
cmps
push
(bad)
jo
adc
sub
mov
sbb
imul
call
pop
sbb
sub
in
cs
adc
sbb
push
(bad)
in
mov
les
dec
sti
cmp
add
push
cmp
stos
test
adc
(bad)
xlat
jmp
int3
cmp
scas
push
dec
inc
push
pop
in
repz
add
(bad)
or
jmp
add
xor
retf
cmc
retf
into
mov
jg
mov
retf
arpl
cmp
add
popf
sub
out
mov
mov
inc
fcomp
rcl
add
push
mov
cmp
cwde
push
inc
(bad)
mov
into
mov
ret
mov
cmp
rcl
inc
rcr
add
mov
sub
adc
add
(bad)
and
mov
aad
pop
nop
ret
add
aaa
daa
pop
add
ss
mov
xor
xchg
mov
add
std
(bad)
jge
cmc
jo
out
add
add
or
and
std
xor
daa
mov
xchg
outs
daa
xchg
or
xor
push
stc
mov
repnz
retf
add
icebp
daa
or
sbb
cdq
push
cs
pushf
dec
sub
cmp
aad
cmpxchg
and
push
das
adc
pop
fdivr
rcr
add
add
push
das
jnp
stc
xor
push
das
jnp
stc
ss
ja
xor
nop
push
das
adc
push
movs
xor
pop
jl
fldenv
cs
pushf
retf
push
das
jns
xchg
push
lock
add
pushf
repnz
inc
fild
repnz
(bad)
or
(bad)
xor
adc
add
ret
lods
add
add
push
xchg
xlat
sub
lods
ret
div
mov
nop
pop
push
dec
mov
ret
lods
mov
loope
mov
push
add
ret
cli
adc
cmp
int3
mov
or
ret
fist
pushf
mov
(bad)
in
sar
(bad)
jmp
add
add
add
adc
scas
jecxz
pop
(bad)
push
add
cld
(bad)
push
daa
movs
div
iret
fwait
shr
push
pop
adc
mov
addr16
xor
or
xchg
data16
xchg
data16
jge
sub
sbb
(bad)
ja
icebp
mov
mov
fcmovb
ja
push
inc
sti
sbb
xor
sub
push
push
dec
fcmovbe
inc
add
add
(bad)
mov
test
(bad)
add
cld
shl
add
sar
mov
xor
cld
out
and
add
or
and
sub
inc
adc
iret
mov
ja
mov
sbb
cmp
add
push
in
sbb
icebp
pop
add
add
mov
ret
ret
xchg
dec
shl
mov
cmp
push
mov
cmp
sub
js
add
test
push
das
add
adc
add
lods
das
add
mov
(bad)
pop
hlt
fadd
inc
sar
dec
pop
inc
dec
sbb
out
pop
mov
push
sti
pop
aad
pop
int3
and
pop
add
add
push
jns
lods
rcr
inc
shr
rcl
inc
shl
(bad)
xchg
mov
cli
popa
jmp
rcl
test
and
rcl
inc
shl
push
aas
outs
mov
adc
and
sbb
stos
cmp
rol
or
jmp
sbb
add
push
fwait
xlat
jmp
(bad)
add
cmp
ret
call
mov
inc
sub
mov
cmp
xchg
and
add
ret
push
pushf
push
(bad)
adc
(bad)
jmp
cs
adc
mov
ret
push
and
fmul
add
add
nop
fwait
les
test
std
lds
mov
jns
or
sbb
retf
push
adc
rcl
inc
pop
jg
in
aad
inc
dec
mov
out
sbb
mov
inc
ret
jp
mov
dec
or
inc
xchg
jmp
sbb
add
push
add
inc
mov
add
sar
out
or
add
add
add
mov
jns
(bad)
daa
(bad)
jecxz
and
add
jg
cmp
mov
jns
dec
imul
ret
mov
dec
mov
dec
push
mov
lea
cmp
dec
ss
jns
test
mov
test
push
add
add
and
and
lds
mov
jecxz
fcom
inc
mov
cwde
or
imul
push
das
popa
xchg
jns
add
push
and
jns
pop
dec
push
aaa
popa
add
xchg
bsf
jge
pop
rcl
inc
shl
push
pusha
or
adc
rol
add
jnp
add
adc
das
(bad)
cmp
mov
pusha
adc
jecxz
adc
cs
test
cmp
sbb
xchg
call
push
xchg
push
(bad)
imul
adc
cs
rcl
ret
test
mov
add
add
cmp
adc
xchg
popa
push
pushf
xor
adc
stos
mov
adc
into
dec
push
sar
xchg
add
retf
mov
jmp
das
test
jae
and
add
aad
sub
(bad)
imul
stc
add
adc
ret
fwait
sahf
cmp
gs
jecxz
push
(bad)
cld
add
add
outs
mov
fmul
adc
cld
lods
jae
inc
cwde
nop
push
ja
push
or
push
mov
cmp
daa
dec
cmp
push
jmp
push
(bad)
iret
ret
(bad)
jl
(bad)
pop
sub
int
jae
lds
mov
dec
cld
jle
xor
sub
dec
repz
leave
mov
rol
sar
add
add
mov
add
ins
dec
mov
(bad)
add
cmp
sbb
dec
cld
ins
and
cmp
int
add
xchg
xor
ja
mov
cmp
jmp
hlt
xor
les
sar
rcl
sub
xchg
add
add
xchg
daa
sbb
adc
outs
add
mov
pop
cmp
jb
ja
pop
imul
das
test
or
add
sbb
adc
and
icebp
xchg
loopne
cli
mov
adc
add
sub
xchg
fucomp
pop
test
ds
ror
add
pop
aad
jbe
push
rol
vcvtpd2dq
mov
shr
add
adc
(bad)
sbb
jae
jmp
gs
pop
(bad)
pusha
add
(bad)
in
inc
jbe
jmp
(bad)
jno
mov
stos
ret
popa
jmp
push
add
add
and
xor
dec
dec
jno
fwait
cmps
dec
and
imul
cmp
or
pop
lock
in
mov
xchg
scas
jecxz
aad
retf
dec
add
jno
or
dec
add
retf
inc
(bad)
add
(bad)
dec
fisttp
sbb
aad
dec
sbb
lahf
sbb
push
dec
pop
lods
nop
fwait
shl
sbb
xlat
add
add
push
call
je
test
imul
(bad)
jo
nop
and
sbb
adc
cmp
sbb
and
xor
mov
mov
test
mov
add
push
dec
inc
mov
ret
cld
sub
push
xchg
jge
push
pushf
jle
mov
stos
aad
mov
push
push
cmp
lods
lds
add
add
lods
lds
(bad)
int
dec
loop
cld
inc
push
add
jmp
jmp
aad
jmp
mov
jle
dec
or
add
jle
mov
mov
mov
jmp
out
add
fidiv
inc
js
pop
adc
rcl
dec
adc
arpl
sub
sub
add
shr
test
mov
sub
cmp
inc
push
rcl
pop
rcl
add
jb
mov
shl
mov
mov
push
das
sub
push
lods
mov
push
inc
in
mov
fdivr
ror
mov
adc
out
pop
rcr
cmps
inc
add
add
push
ror
pop
(bad)
mov
mov
lahf
jae
sbb
popf
das
fnstsw
ret
xchg
sbb
(bad)
jmp
shr
adc
(bad)
ret
sub
adc
mov
adc
ret
imul
jmp
(bad)
xchg
push
sbb
jmp
dec
push
add
add
add
jmp
inc
mov
rcl
jmp
xchg
add
ss
fcomp
cmp
sbb
test
repz
les
pop
pop
push
jbe
in
inc
js
sbb
add
add
fstp
mov
jnp
xchg
push
fmul
jmp
add
adc
sub
pop
stos
popa
cli
jne
dec
cs
add
add
adc
mov
fiadd
retf
adc
lods
add
push
(bad)
sub
sti
lds
pop
aad
xchg
out
jp
sub
test
pextrw
add
fcmovnu
add
sub
inc
ins
call
(bad)
jle
mov
fild
shr
(bad)
ins
call
add
adc
jns
lods
mov
add
add
inc
jno
call
xchg
pop
ins
jp
inc
jb
adc
ins
lds
jg
jae
jne
ss
cmp
(bad)
fidivr
mov
shr
shr
mov
cmp
std
scas
adc
and
jg
das
add
inc
call
inc
js
pop
and
add
imul
jno
pop
rcl
int3
ins
sbb
rcl
sbb
adc
sbb
inc
loopne
pusha
adc
xchg
jmp
das
add
stc
call
lds
sahf
jb
in
inc
(bad)
mov
adc
cmp
cmp
nop
(bad)
movs
push
xchg
xchg
loop
add
das
xlat
xchg
and
and
imul
aam
aad
xlat
push
jmp
(bad)
fidiv
(bad)
mov
fild
outs
ins
and
fld
adc
retf
or
das
dec
ret
imul
jmp
cmps
jae
xor
aas
loop
xchg
jo
add
add
adc
mov
loop
cwde
pop
add
xchg
aas
xchg
test
(bad)
jg
sbb
mov
cmc
cli
lea
int
sub
mov
out
xchg
cwde
sbb
jbe
int
addr16
idiv
xchg
pop
sbb
jbe
int
addr16
mov
inc
sti
nop
pop
sbb
jbe
int
movs
adc
add
sti
mov
sbb
jbe
add
adc
and
mov
cmps
cli
mov
sbb
jbe
int3
and
mov
mov
xchg
fcom
push
jbe
int3
and
ret
pop
aam
or
(bad)
cmps
push
inc
sbb
pop
les
ins
scas
vunpcklps
add
retf
jmp
movs
jbe
sbb
mul
lods
inc
arpl
push
mov
retf
add
add
xchg
pop
or
std
lods
xor
inc
ins
lock
jns
mov
or
and
retf
inc
rcl
pop
cmp
or
adc
in
ret
push
dec
xchg
cmc
dec
inc
sub
test
and
(bad)
dec
call
rol
cmp
call
adc
add
xchg
pop
repnz
es
cmp
cmp
sbb
jne
xor
sbb
jmp
add
mov
retf
adc
lods
mov
aam
push
dec
shr
add
xor
shl
or
pop
xchg
inc
xor
(bad)
cmp
jmp
je
xchg
add
add
or
(bad)
ror
addr16
slwpcb
mov
das
inc
and
and
fstp
lods
mov
ret
punpckhwd
ret
jmp
(bad)
jmp
cdq
xor
cdq
repz
in
(bad)
xchg
sbb
repz
imul
xchg
mov
aad
(bad)
jmp
add
sub
movs
pop
push
arpl
leave
mov
sbb
(bad)
out
adc
add
test
dec
dec
loopne
or
sbb
sub
mov
rcl
xchg
push
add
lds
xchg
(bad)
gs
mov
add
adc
xchg
loopne
fld
cs
cli
add
add
fistp
scas
fnstsw
dec
cmps
xchg
mov
rol
add
lahf
mov
inc
push
and
sub
ins
mov
ret
ret
add
jmp
(bad)
cmp
aad
or
sub
std
(bad)
sti
push
rcr
pop
inc
ins
mov
push
jecxz
mov
add
ja
les
sub
inc
clc
lds
cmc
ret
and
test
cmp
or
test
cmp
adc
stos
mov
or
dec
push
shr
xor
fs
out
popf
fcom
push
or
enter
cmp
push
cld
inc
lahf
mov
add
add
sub
xor
loop
and
pop
lods
rol
sub
cld
or
div
js
add
xor
in
adc
dec
mov
mov
hlt
mov
lock
icebp
push
test
push
push
adc
cmc
xchg
jbe
mov
mov
mov
ret
and
stos
addr16
shl
repz
add
and
jno
mov
mov
loop
popa
cmp
push
dec
lahf
out
sahf
imul
in
stos
or
pop
xchg
cmp
push
dec
out
sbb
jmp
jno
sub
popa
adc
inc
pushf
cmps
cmp
daa
sbb
dec
out
in
dec
das
ins
mov
cmp
scas
adc
pop
ficom
add
add
sbb
ret
sbb
retf
(bad)
fist
cld
push
rcl
sub
lds
mov
fiadd
sub
adc
mov
cmp
mov
sbb
push
jo
rol
cwde
adc
pop
in
mov
(bad)
mov
lds
sub
(bad)
push
xor
add
add
pop
cdq
add
rcl
out
inc
stos
(bad)
push
cmp
mov
es
jae
jle
inc
stos
push
mov
mov
add
lds
leave
(bad)
jns
fadd
push
add
jle
mov
cmp
lds
sub
xor
ret
mov
fwait
push
inc
cmps
jge
mov
and
add
or
add
cmp
mov
add
test
shl
adc
out
and
and
add
sahf
jmp
adc
add
lods
sar
pop
add
(bad)
aam
jne
mov
test
rol
jge
jb
push
jp
cmp
jmp
mov
adc
add
push
inc
sbb
ret
pcmpeqw
adc
and
add
lods
aas
mov
scas
daa
(bad)
xchg
lods
daa
mov
cmp
sbb
lods
add
xchg
push
sub
arpl
push
pop
clc
adc
adc
sbb
icebp
pop
sub
xchg
inc
xor
add
sub
mov
inc
lea
mov
pop
sbb
sub
or
loope
xchg
shl
in
aad
outs
test
sti
jno
xchg
and
sbb
repnz
ret
dec
inc
retf
lds
mov
cmc
pop
dec
add
push
ret
mov
cld
cmc
push
retf
es
jb
sbb
daa
adc
sub
add
xchg
cmp
push
cmp
jnp
jg
sbb
pop
and
sub
dec
add
repz
ds
sub
mov
jb
push
ret
pop
mov
xor
sahf
call
iret
pop
ffree
sbb
push
cmps
and
jae
adc
sti
sub
cmp
loop
push
rol
ja
and
add
add
jle
cmp
mov
movs
cmp
pop
inc
cmp
or
or
setno
leave
add
mov
std
xchg
cmp
and
fiadd
mov
arpl
ficom
bound
int
test
xchg
sbb
pop
or
mov
add
add
mov
sti
retf
xor
or
cld
stos
(bad)
std
mov
lock
mov
dec
(bad)
cs
fwait
out
pop
out
call
mov
mov
(bad)
sbb
xchg
test
inc
add
cmps
mov
push
inc
rcl
rol
add
sbb
jnp
out
in
xchg
mov
add
sub
xor
add
adc
out
outs
add
add
pop
cmps
in
jmp
(bad)
(bad)
add
jmp
gs
xchg
ds
daa
xchg
int
push
jo
mov
aad
mov
xchg
retf
sbb
aad
movs
fsubr
gs
xchg
ds
fstp
xchg
lea
into
mov
mov
aad
jne
aad
jmp
add
sti
int
and
jmp
cmp
push
add
into
sub
adc
sbb
inc
or
and
pop
mov
sbb
add
sub
cwde
cmp
jmp
sbb
add
mov
jge
test
add
mov
cld
pop
sar
add
add
lods
(bad)
and
add
dec
dec
jle
pushf
or
fisubr
mov
mov
cmp
xchg
neg
(bad)
pop
cmps
fnstsw
std
jg
cmp
add
push
lds
call
pushf
mov
xor
repz
sbb
pop
sar
setns
iret
add
mov
mov
dec
aad
sar
popa
ds
add
jns
push
std
jbe
sar
outs
inc
cmc
in
inc
jmp
push
adc
jle
repz
js
cld
in
dec
mov
shr
cld
mov
rol
add
add
ins
sti
(bad)
jmp
jno
lds
(bad)
out
push
jmp
movs
adc
outs
adc
outs
push
lahf
jmp
cmp
lahf
aas
test
jge
fwait
xchg
imul
std
xchg
ret
adc
mov
add
adc
outs
adc
in
aad
adc
jp
add
sub
sub
sbb
dec
aad
outs
adc
in
stc
rcl
rol
add
add
and
fstp
sbb
dec
adc
(bad)
jmp
mov
bnd
sti
ret
jno
fiadd
scas
adc
jmp
mov
cmp
in
stos
imul
scas
shr
in
inc
dec
and
cmp
cmp
cmp
cmps
add
mov
add
add
adc
gs
adc
cmp
mov
mov
adc
cmps
in
adc
cmp
call
cmp
or
nop
jmp
cmp
sub
lods
xchg
cmp
movs
xchg
stc
add
cmp
add
call
mov
cld
pop
inc
cs
add
add
(bad)
pop
jo
les
pop
push
ret
sub
test
mov
mov
lahf
rcl
xchg
xchg
lea
sti
pop
cmps
mov
rcl
jmp
xlat
adc
(bad)
inc
rcl
cmp
jg
jg
mov
cmps
inc
in
scas
sbb
add
bound
xchg
inc
sar
pop
cli
test
push
pushf
push
mov
jle
aad
and
mov
or
inc
jns
mov
jle
ja
sti
sbb
ja
ret
jb
ret
xchg
pop
movs
pop
nop
ds
dec
mov
pusha
mov
call
add
inc
jecxz
test
cs
add
add
push
pusha
add
lods
lahf
mov
mov
lahf
in
push
xchg
dec
shl
mov
push
sub
inc
aas
lahf
jle
fisub
shr
mov
jno
xchg
push
mov
push
add
inc
arpl
adc
cs
pop
xchg
enter
arpl
pusha
mov
push
rol
jmp
add
vcmpss
dec
rcl
(bad)
dec
xchg
cmp
adc
gs
mov
jmp
add
and
lahf
mov
aam
repz
jo
mov
nop
push
pop
data16
lds
in
sahf
mov
mov
add
pop
pushf
rcr
aad
in
pop
cmp
sub
push
lods
add
cmp
adc
adc
test
cmc
retf
leave
xchg
cdq
out
or
stos
pop
or
mov
iret
pushf
pop
or
add
cli
inc
test
cmp
test
mov
(bad)
loope
and
loop
std
sub
xchg
push
aaa
cli
shl
ins
add
add
icebp
xor
dec
inc
mov
dec
aad
mov
sbb
add
mov
les
(bad)
pop
ror
jp
gs
jo
add
std
mov
iret
cmc
neg
dec
add
fnstcw
dec
jo
pop
pop
add
scas
lds
pop
inc
into
outs
add
int
lds
shl
adc
pop
ja
add
mov
cmp
or
push
xor
xchg
sbb
mov
cmp
or
jnp
inc
mov
jnp
sbb
outs
lds
pop
add
into
mov
lods
sahf
das
or
test
mov
sub
adc
adc
nop
clc
scas
xor
add
(bad)
(bad)
inc
push
fdiv
xchg
cmp
add
pop
sub
jle
adc
sbb
fldcw
lods
mov
pop
or
push
jl
mov
xor
jns
(bad)
jle
jp
rcl
daa
int
dec
lock
mov
add
add
xor
lds
cmp
or
popa
cmps
or
sar
add
lds
push
dec
lahf
mov
jmp
fwait
jmp
add
xchg
jno
mov
add
and
jmp
dec
mov
mov
imul
shr
inc
retf
jg
aad
mov
dec
jmp
add
cmc
cmpps
inc
js
mov
mov
cs
ss
cmp
icebp
inc
retf
fidivr
cld
xchg
ret
sbb
sbb
xchg
dec
out
imul
add
add
aaa
cmp
pop
xor
mov
adc
mov
sbb
add
pop
gs
fld
call
jo
cmp
movs
sub
xor
loope
cld
lods
rol
jnp
cld
lods
cmp
inc
sar
int3
push
aad
rcr
jl
cmc
cld
mov
aam
shl
not
xor
adc
(bad)
dec
and
inc
ins
adc
(bad)
into
adc
jle
repz
add
or
pop
or
sbb
jnp
shr
leave
xchg
mov
add
popa
test
jmp
test
dec
scas
fld
inc
cli
sbb
pop
gs
xchg
push
out
ret
push
mov
add
aad
das
test
and
in
sub
ficom
out
pop
bound
inc
rcl
add
xchg
call
icebp
inc
rcl
ror
test
adc
sub
sar
jle
call
add
push
add
xchg
shl
sbb
rol
pusha
ret
inc
cmp
and
(bad)
vcmpltss
push
mov
cmp
and
pop
add
mov
jmp
aad
aam
(bad)
add
add
ins
std
test
inc
(bad)
lods
retf
push
aad
push
dec
shl
hlt
cdq
push
idiv
or
mov
retf
push
aad
(bad)
and
pushf
sub
mov
popa
out
or
gs
ret
bound
jmp
add
loop
inc
push
mov
add
mov
push
sub
add
push
call
sub
(bad)
jmp
sahf
cmp
xor
repnz
test
icebp
xor
shl
fsubp
adc
pop
arpl
cs
adc
(bad)
call
data16
sub
int3
jmp
sbb
add
call
add
push
stc
enter
cmp
shr
shl
jbe
fwait
pop
imul
lds
loop
add
xor
xadd
mov
push
pop
or
pop
add
push
xchg
shr
test
pop
or
outs
lds
sbb
sub
mov
or
mov
aaa
add
mov
cld
add
add
cmc
jmp
jecxz
cld
push
push
push
cld
sbb
aam
aam
rcl
cmp
movs
dec
mov
adc
cs
imul
inc
test
mov
dec
shl
jg
xchg
mov
jecxz
aaa
lds
sub
lock
ret
xchg
or
xchg
imul
lds
loop
ins
inc
outs
push
mov
pop
jl
xchg
pop
mov
sahf
mov
xchg
pop
adc
xchg
retf
(bad)
mov
stc
lds
sub
int
xor
mov
sub
add
rol
lahf
rol
cmp
in
dec
addr16
cwde
push
aad
add
sub
(bad)
jmp
adc
shl
mov
movs
cs
xor
inc
xchg
add
xchg
popa
std
xchg
cs
(bad)
inc
inc
xchg
enter
leave
daa
adc
(bad)
jmp
sub
add
xor
(bad)
in
mov
and
kmovw
icebp
mov
add
add
rol
les
push
xchg
cld
lea
and
push
inc
jle
adc
xchg
adc
add
sbb
jmp
sahf
cmp
xor
and
inc
mov
cmp
push
dec
inc
xor
cmp
clc
repz
add
sbb
cmps
mov
mov
cmp
dec
ror
icebp
xor
dec
outs
lds
inc
aam
ja
repz
jnp
scas
lds
adc
jno
jg
outs
or
xchg
sub
mov
mov
add
sub
je
pop
test
push
std
ds
dec
jmp
outs
lds
inc
les
addr16
(bad)
jecxz
mov
mov
out
jp
push
add
shl
rcl
lods
mov
add
or
and
ror
sub
repnz
test
push
movs
(bad)
in
mov
jp
push
mov
shr
xor
imul
cmp
jp
mov
jmp
inc
dec
rcr
jp
add
cs
mov
rcl
rol
mov
call
adc
lahf
sbb
xor
inc
inc
and
jmp
outs
inc
jno
push
xor
lds
ret
dec
push
ja
arpl
pop
cmp
inc
ja
imul
cmp
inc
ja
outs
xor
cmc
add
add
mov
dec
xchg
jns
(bad)
rcl
xor
jns
(bad)
push
ret
cmp
sub
cmps
dec
cmp
(bad)
js
lea
cmp
(bad)
xchg
imul
(bad)
ss
pop
mov
in
mov
popa
div
dec
mov
xchg
adc
add
nop
inc
add
out
mov
fdivr
dec
out
mov
mov
dec
mov
xchg
cld
repz
(bad)
mov
scas
cmp
outs
cld
inc
out
ins
mov
cld
push
scas
mov
pop
sbb
mov
rcr
cwde
rol
mov
inc
cmp
inc
and
adc
xchg
ja
addr16
mov
(bad)
dec
mov
cld
fidiv
(bad)
mov
add
jg
cld
push
mov
add
add
movhps
int3
xor
jno
add
sar
test
int3
or
inc
sar
ja
mov
jmp
mov
(bad)
cmovbe
cmp
outs
fs
cld
add
push
repnz
sbb
dec
cld
push
add
add
mov
add
add
jge
sbb
sub
mov
mov
pop
fimul
mov
rcl
adc
push
adc
repnz
outs
sub
mov
movs
inc
leave
sub
int
bound
cmc
add
mov
pop
cwde
(bad)
imul
and
not
jmp
mov
push
cli
mov
add
sbb
cli
pop
and
loop
lods
(bad)
mov
dec
xor
pop
ret
lods
cs
jge
add
popa
dec
retf
mov
(bad)
jno
jg
sub
int3
cmp
cmp
pop
and
cmp
jae
jno
das
xor
jmp
sub
mov
sub
jo
cmp
mov
push
jns
lods
(bad)
loop
adc
dec
test
lods
and
repz
ret
in
addr16
inc
clc
popa
add
es
cmp
pop
add
pop
lahf
pop
ins
push
mov
sub
jno
or
stc
sub
jbe
icebp
cli
psubsw
(bad)
out
mov
fidiv
cld
iret
stc
and
pop
push
dec
inc
mov
cmp
dec
cld
dec
adc
imul
xchg
inc
push
push
gs
aad
xchg
ret
imul
call
cld
repz
(bad)
dec
cmp
jmp
stos
inc
cld
sbb
data16
push
jmp
inc
mov
or
lahf
inc
cld
add
add
xor
inc
fnstsw
inc
cld
jmp
out
out
test
cld
mov
loopne
sar
test
lock
cld
xchg
sub
adc
add
jle
call
repz
rol
cmc
mov
add
popf
popf
sahf
iret
imul
jae
add
add
popa
imul
jnp
jl
cmps
cmp
das
push
mov
push
jmp
xchg
pop
xor
pop
dec
mov
cs
iret
mov
jns
shr
mov
popa
repz
popa
jmp
lea
test
pushf
sti
jns
push
mov
lds
cmc
aaa
(bad)
cmp
mov
pop
(bad)
and
sub
add
add
(bad)
jle
fwait
mov
and
jecxz
jno
sbb
mov
adc
lock
cdq
adc
rol
dec
popa
or
cmp
popa
cmp
dec
jle
outs
scas
fisubr
lds
adc
mov
jmp
xchg
mov
mov
mov
adc
add
and
(bad)
jmp
add
pushf
mov
jmp
xchg
pop
cmp
or
push
lock
or
mov
scas
add
(bad)
cwde
cmp
stos
scas
into
xchg
cld
mov
jne
jmp
mov
add
cdq
cmp
pop
out
mov
(bad)
jmp
lahf
aaa
popf
mov
lea
sbb
add
adc
ret
iret
inc
mov
push
dec
data16
cmp
stos
push
dec
dec
fmul
dec
push
test
mov
cmp
shr
daa
lds
add
sar
loop
add
dec
ret
lds
mov
iret
add
jl
mov
ret
jl
cmps
in
lds
shl
mov
add
add
lods
inc
repz
add
push
sar
(bad)
add
inc
mov
and
jl
cld
rcl
sar
sub
mov
into
sub
clc
adc
shl
or
add
push
in
xchg
add
shl
mov
lods
jae
mov
mov
add
add
sbb
test
retf
mov
jno
es
jo
movs
jns
test
fldenv
retf
fsubp
shr
mov
out
pop
out
scas
lock
adc
and
sub
sub
cs
inc
mov
add
adc
lds
call
scas
add
add
rol
adc
pop
sbb
call
cmp
je
sub
enter
rol
aad
lds
mov
leave
jge
lds
adc
lods
push
int
es
imul
repz
aad
mov
loope
mov
leave
jge
mov
inc
cmp
mov
add
cmp
dec
inc
add
outs
in
xchg
ins
loope
scas
xchg
push
ja
pushf
mov
cmp
mov
inc
cmp
fst
mov
pop
push
xor
int
inc
dec
push
cli
hlt
mov
jecxz
and
inc
cmp
popf
(bad)
mov
pop
(bad)
dec
inc
add
push
ja
mov
mov
push
arpl
push
push
int
ret
int3
sbb
jbe
add
fs
push
mov
test
inc
ret
int3
push
cmp
xchg
mov
pop
fs
ror
xchg
xlat
ret
out
clc
test
fld
xor
mov
dec
jbe
stos
inc
cmc
in
jae
jle
stc
inc
jbe
add
clc
dec
arpl
push
out
hlt
jmp
jbe
cld
dec
mov
pop
mov
mov
add
(bad)
outs
test
jb
fidivr
mov
or
mov
dec
cld
jne
in
shl
js
add
and
dec
jmp
xor
add
cmps
cld
int3
fimul
mov
stos
mov
or
add
cmp
inc
pop
adc
and
fadd
add
hlt
int3
pop
inc
inc
inc
mov
mov
jecxz
push
fwait
push
mov
jge
jp
imul
lahf
sahf
sub
pop
cmp
rol
push
leave
mov
jl
mov
xchg
inc
jge
or
(bad)
in
pop
mov
sub
out
inc
sub
jge
popa
adc
sbb
les
add
cmp
out
inc
and
mov
cmp
mov
mov
cmc
dec
out
cmp
int3
and
imul
fcmove
push
or
imul
ror
imul
sbb
lahf
arpl
cmp
jno
and
call
fdiv
rol
add
push
pop
call
inc
dec
jbe
inc
inc
cmc
test
dec
jle
nop
cmp
sti
add
iret
call
imul
js
cmp
repz
cwde
pop
sub
nop
push
jbe
jno
add
jae
enter
dec
cvtpi2ps
emms
sbb
in
retf
rol
jne
lahf
mov
sti
inc
cli
dec
jmp
add
add
(bad)
jns
pop
inc
dec
out
jae
rol
xchg
jge
sti
mov
sub
cmp
pop
sbb
test
jl
push
fld
lods
dec
cwde
xlat
mov
add
les
xchg
inc
retf
jle
xchg
inc
mov
add
push
mov
cld
mov
jae
shl
sar
push
add
add
imul
cmp
sub
(bad)
sbb
pop
cmp
pop
add
mov
push
mov
pop
js
sbb
das
(bad)
fxch
mov
add
jecxz
dec
push
fnstcw
and
test
cmp
sahf
jmp
test
pop
clc
bnd
call
mov
mov
add
add
int
jb
adc
push
or
push
add
nop
mov
popf
jmp
mov
icebp
js
and
mov
cmp
push
jmp
jmp
jb
movs
icebp
push
dec
movs
or
call
retf
nop
mov
dec
jmp
inc
pop
lahf
ret
inc
fs
add
add
fcmove
fsubp
push
ret
retf
lds
in
jmp
std
out
bound
and
nop
ss
pop
cdq
pushf
imul
xchg
inc
jmp
mov
pop
popa
jb
add
fwait
jmp
add
loope
cmp
loopne
add
pop
mov
pop
sub
lds
add
inc
xchg
cmp
inc
in
and
pop
cmps
je
jmp
les
cwde
pop
mov
fldz
ret
or
inc
cli
mov
fucom
xchg
sbb
add
aam
add
mov
stc
les
mov
pop
stc
add
xor
cmp
push
cmp
pop
stc
add
inc
add
add
ror
mov
in
mov
dec
inc
shl
add
push
ret
mov
out
test
inc
xchg
jno
sbb
rol
inc
dec
ror
mov
outs
test
ret
in
add
ret
cmp
cli
mov
and
xchg
inc
mov
xchg
mov
in
cmp
jmp
int
add
add
pop
pop
cld
popf
leave
inc
dec
sub
rcl
vunpckhps
vunpckhps
vunpckhps
vunpckhps
(bad)
mov
adc
mov
aaa
jns
ret
dec
ins
cmps
ret
inc
ins
movs
ret
cmp
mov
aaa
jno
ret
dec
data16
ret
inc
data16
ret
cmp
mov
aaa
push
ret
dec
pop
cmps
ret
inc
pop
movs
ret
cmp
mov
add
add
bound
add
adc
add
or
dec
popa
mov
lds
adc
(bad)
popa
add
cwde
lea
push
jo
cdq
shl
cwde
xor
or
shl
dec
and
or
push
test
in
shl
dec
sub
cmp
ret
jno
sbb
or
push
cmps
and
cmp
adc
jmp
inc
dec
ret
xchg
aas
repnz
adc
cmp
popa
cmp
push
add
sbb
push
rol
popa
(bad)
fwait
lds
pop
adc
add
mov
stos
hlt
les
loopne
loope
mov
xor
pop
fcomp
mov
pop
stc
add
add
les
dec
xchg
add
xor
inc
in
jmp
mov
cmp
adc
cwde
pop
and
add
add
inc
call
add
mov
lods
in
call
push
cmp
sbb
ja
cmp
test
ret
hlt
jp
add
add
mov
outs
inc
push
push
dec
mov
adc
rcl
ins
inc
dec
sar
test
cmp
mov
cmp
test
cmp
jl
cmp
test
cmp
ins
adc
cmp
repz
int
js
(bad)
mov
repz
mov
js
lods
jecxz
mov
in
(bad)
shl
js
mov
add
mov
mov
dec
or
movs
mov
aaa
sbb
add
adc
cld
ss
add
dec
pop
retf
xlat
(bad)
adc
jecxz
(bad)
adc
mov
mov
test
add
fdiv
shl
ins
cmp
leave
ret
(bad)
call
js
pop
movs
retf
(bad)
add
ret
lea
dec
aam
js
sbb
pop
dec
shl
rcl
dec
(bad)
sub
pop
xchg
popa
loope
(bad)
jno
cdq
mov
ret
xchg
dec
les
xor
xchg
jbe
ret
sub
sbb
xor
loope
cmp
push
(bad)
jmp
adc
push
(bad)
jmp
cmp
add
or
inc
adc
gs
loope
jno
xchg
push
inc
lds
xchg
aas
loopne
jmp
push
faddp
lds
xor
pop
(bad)
add
push
shl
inc
xlat
pop
sbb
push
in
sbb
add
out
pop
push
dec
call
ds
jle
lea
or
xchg
mov
inc
xchg
mov
mov
sub
jbe
add
add
sbb
ins
adc
mov
sbb
push
pop
mov
mov
shl
mov
lds
test
push
ja
inc
cmp
and
pop
ret
add
xor
shr
jo
ret
cmc
outs
adc
clc
rcr
ret
aad
adc
adc
cmp
outs
clc
dec
xlat
shr
ins
lds
xchg
arpl
pop
jl
mov
push
ja
das
add
repz
fmul
popa
pop
test
dec
jmp
add
ins
jmp
es
add
scas
xor
adc
mov
add
ins
ja
rcl
dec
xchg
mov
inc
cmc
add
or
push
pop
pop
pop
pop
loopne
push
mov
mov
pop
stc
mov
adc
xor
jmp
rcl
into
imul
jmp
push
das
add
sub
rcl
ins
cmp
mov
add
add
push
stos
test
(bad)
jne
nop
push
jmp
push
arpl
pop
cmp
mov
inc
out
add
jmp
adc
ret
add
(bad)
lds
lds
sub
add
ret
repz
pop
lahf
xchg
inc
fcom
jmp
gs
loope
jno
sbb
add
add
sbb
sub
inc
movs
mov
sub
in
std
mov
cmps
inc
and
out
pop
sbb
aad
mov
mov
sahf
pop
dec
dec
call
inc
dec
jle
lea
ja
fild
aaa
push
fcomi
cmp
sub
imul
loop
sbb
daa
inc
add
das
jmp
test
adc
std
pminsw
add
rcr
imul
test
xor
das
cld
das
mov
stos
mov
ins
inc
inc
xor
and
ret
xchg
fsub
xchg
lock
jbe
push
in
and
jmp
(bad)
stos
cld
adc
add
add
sbb
clc
shl
imul
in
bts
mov
add
pop
push
lds
rol
mov
jg
inc
mov
cs
or
lds
rol
mov
push
ins
test
adc
add
adc
das
add
add
rcl
jnp
in
sub
outs
inc
iret
and
(bad)
ins
(bad)
clc
push
cmp
into
sahf
out
or
(bad)
or
popa
ror
out
jge
add
mov
inc
int
popa
or
inc
pusha
push
rcl
pop
add
and
rcl
jmp
xchg
add
add
xchg
test
sbb
(bad)
dec
shl
out
pop
dec
das
sub
nop
pop
inc
ds
sbb
cmp
xchg
jb
(bad)
lea
push
leave
data16
dec
data16
fcmovbe
cld
and
fwait
dec
cmp
call
addr16
inc
cmp
stos
and
mov
mov
and
add
(bad)
add
cmp
push
sar
mov
sbb
sbb
add
aad
sbb
jne
int
inc
cmp
scas
push
mov
cmp
daa
rcl
jbe
mov
in
cld
mov
add
cmp
dec
push
aaa
cld
cmps
push
xchg
jmp
sub
add
add
stos
adc
push
mov
cld
daa
mov
cmp
daa
mov
mov
inc
int
rcl
sar
(bad)
movs
dec
test
ret
fisttp
sub
inc
or
push
mov
mov
cld
stos
dec
mov
ret
push
enter
shl
mov
scas
mov
cmp
add
leave
ret
push
add
add
cmp
inc
stos
add
mov
mov
mov
dec
cld
inc
xor
retf
movs
stc
ss
xchg
and
mov
lds
icebp
icebp
pop
sbb
push
and
mov
scas
mov
xor
jne
cmc
add
inc
push
es
cmc
mov
pop
ret
add
sahf
loop
push
pop
pop
iret
add
add
pop
ins
fmulp
mov
inc
xchg
cmps
push
mov
imul
fs
cs
(bad)
jp
inc
ror
add
sub
(bad)
mov
fsubr
sahf
jmp
imul
xor
aas
cmp
(bad)
(bad)
sahf
adc
mov
fimul
pop
xchg
add
dec
mov
cld
push
rcl
add
add
adc
addr16
enter
bound
(bad)
cmp
lea
popf
es
data16
(bad)
lds
mov
xchg
sbb
sub
adc
push
push
cmp
cmp
sub
shr
inc
push
out
lahf
sub
push
xchg
popa
jmp
pushf
aaa
and
sbb
movs
add
sar
add
add
int3
lea
xchg
mov
cld
retf
push
cmp
retf
retf
push
cmp
lock
cmp
psrld
push
inc
mov
add
pop
dec
inc
mov
push
cmp
xor
jg
and
(bad)
jbe
xchg
mov
adc
mov
(bad)
mov
push
dec
inc
add
add
pop
cmp
mov
mov
xchg
sub
ror
in
sbb
int
pop
add
cmovo
push
inc
mov
les
sar
push
jne
add
scas
stc
lods
ja
ret
jo
inc
fnsave
(bad)
fiadd
std
les
aam
les
push
sar
jnp
std
shr
mov
mov
xchg
mov
add
sbb
cmp
(bad)
test
ret
js
inc
pop
xor
retf
xor
sub
(bad)
xor
(bad)
hlt
je
mov
outs
cmp
movs
outs
rol
in
or
in
les
or
push
push
mov
dec
cmp
mov
add
adc
dec
add
das
repnz
xchg
mov
test
mov
test
push
aas
adc
lock
aad
jge
push
(bad)
outs
jl
(bad)
jmp
rcr
sbb
aad
adc
(bad)
jmp
jg
ret
mov
add
add
xchg
add
inc
retf
push
sbb
aaa
push
push
inc
mov
(bad)
push
aas
(bad)
in
(bad)
(bad)
jmp
inc
mov
xchg
add
ret
push
jnp
leave
cmp
aas
outs
jmp
(bad)
pop
jle
nop
mov
ret
dec
inc
push
retf
add
dec
mov
jp
add
outs
and
add
add
scas
clc
or
shr
mov
xchg
outs
inc
sub
cmp
daa
jo
sbb
sti
sahf
mov
add
pop
test
sub
sbb
inc
jle
adc
jbe
bound
mov
mov
add
jmp
movs
movs
test
and
adc
fcom
sar
mov
je
push
or
xor
mov
aaa
xor
mov
inc
movs
movs
add
adc
mov
cmps
add
ds
or
mov
jmp
mov
or
bswap
call
xchg
jle
mov
mov
ret
retf
clc
xor
call
add
std
cmp
xchg
xchg
cmps
cld
inc
test
pop
shr
icebp
bound
in
in
sar
xchg
bound
xchg
clc
outs
mov
lock
dec
cmps
fcomp
ds
ss
mov
cmps
sahf
pop
or
vpunpckldq
popf
push
fcmovbe
and
inc
jecxz
add
mov
pop
ja
dec
sbb
mov
loope
add
add
adc
das
(bad)
push
mov
lods
daa
shl
aad
cmp
idiv
sbb
das
(bad)
adc
(bad)
jne
mov
xlat
lds
sti
cmp
jno
jmp
cmp
or
or
and
les
inc
add
adc
ins
stos
add
add
adc
addr16
adc
cmp
cmp
mov
jmp
sub
(bad)
int
cmc
add
jmp
ds
sbb
add
sbb
add
mov
and
adc
add
retf
dec
fisttp
push
aad
inc
add
add
lds
pop
adc
ficomp
sub
ins
inc
sbb
in
cs
stos
push
popa
stc
add
leave
outs
inc
call
adc
repnz
sahf
mov
int3
outs
inc
fadd
cmp
jmp
adc
add
lods
push
rcl
shr
in
add
add
inc
rcl
xchg
cld
outs
push
lods
dec
pop
fist
add
jecxz
and
les
and
xchg
rol
les
xchg
cmps
jmp
sbb
out
push
jb
add
lds
add
mov
add
jns
iret
cmc
or
dec
add
adc
in
pop
cmp
in
sbb
push
add
add
aad
pop
add
das
in
add
add
adc
adc
jmp
mov
adc
add
dec
out
ss
icebp
retf
call
fwait
call
int
xor
mov
cdq
sbb
call
ret
dec
test
call
ror
add
add
adc
ret
or
gs
and
rcl
mov
mov
shl
adc
(bad)
push
mov
add
call
icebp
inc
cmp
dec
mov
cmp
jb
mov
fiadd
cmp
xchg
add
pop
fwait
or
call
rcl
mov
add
out
dec
rol
sbb
rol
mov
add
ret
xchg
xor
sbb
sbb
pop
xor
call
sub
or
test
test
cmc
ret
mov
cld
aaa
mov
xchg
push
mov
xchg
imul
dec
or
cmp
add
add
sub
cmp
inc
and
pushf
or
fidivr
xchg
shr
sbb
mov
sahf
cmc
sbb
sbb
push
call
mov
in
fild
xor
jmp
in
cld
(bad)
mov
mov
ret
xor
lods
(bad)
mov
lds
(bad)
test
scas
stos
pushf
pop
hlt
outs
or
jne
or
lds
bnd
pop
or
imul
add
or
cld
test
sbb
into
add
mov
inc
sub
jb
sub
and
or
ficomp
rol
adc
sub
dec
dec
outs
add
add
xchg
or
int3
les
jl
retf
(bad)
xchg
push
int
(bad)
jmp
leave
loop
mov
inc
ror
ror
push
jle
xor
rcl
xchg
bound
leave
ss
ds
cmp
cs
aam
pop
shl
jmp
shr
inc
add
add
inc
pop
(bad)
adc
xchg
(bad)
icebp
(bad)
retf
xor
(bad)
sub
ja
inc
cmp
cmp
call
mov
push
cmp
jbe
dec
test
adc
jmp
cmp
cmp
inc
ins
jg
stos
imul
std
ret
fld
fidivr
inc
cmp
add
add
push
mov
lods
sbb
mul
sub
dec
fimul
cdq
mov
sub
add
fnstsw
(bad)
call
sub
pop
jge
dec
cld
xchg
mov
mov
ds
jecxz
add
psubq
cs
xchg
cmp
cwde
sbb
add
sbb
ins
jae
repnz
add
cmps
and
sub
mov
(bad)
sub
cld
vmovdqa
call
cmp
mov
adc
xchg
in
call
pop
mov
inc
ret
shl
add
jnp
call
cmp
adc
add
cs
add
(bad)
push
dec
pop
inc
jle
cs
or
add
jmp
adc
add
add
sub
xchg
inc
lods
aaa
movs
cmps
nop
pop
shr
dec
out
mov
ret
enter
cs
ss
jns
pop
dec
and
sti
inc
iret
adc
mov
(bad)
(bad)
mul
cs
jns
add
iret
into
or
mov
enter
enter
das
add
adc
add
loopne
mov
fidivr
mov
(bad)
sub
mov
add
lea
imul
movs
push
cmps
sub
outs
cmp
call
sub
dec
pop
lods
addr16
cwde
outs
push
inc
push
das
add
mov
and
imul
adc
and
(bad)
scas
lds
add
push
pop
mov
test
mov
mov
jge
out
lahf
in
mov
cmps
cmp
pop
push
fnstsw
lahf
fucomp
mov
dec
les
mov
sub
inc
adc
inc
jmp
paddd
sbb
jle
dec
push
ret
jmp
add
in
ud1
inc
(bad)
aad
ins
push
mov
jge
inc
loop
dec
in
(bad)
add
adc
sbb
mov
mov
xchg
daa
add
add
and
pop
mov
cld
call
mov
add
stos
gs
mov
jp
hlt
pop
fcmovb
ja
mov
add
imul
jmp
cmp
aam
stc
add
stc
inc
and
rcl
xchg
mov
sar
int3
ss
cmc
into
stos
and
shr
jne
(bad)
inc
call
leave
es
push
sbb
jne
push
adc
push
or
jne
es
idiv
xchg
jne
push
and
out
xchg
jne
pushw
(bad)
pop
xchg
xor
add
add
add
sbb
or
and
imul
test
fwait
pop
sub
mov
sub
push
push
xor
cwde
cld
stos
push
sbb
lds
cwde
ficom
cmp
(bad)
sub
lods
inc
cmp
push
push
cmp
les
inc
aad
push
cmp
mov
add
add
sub
push
(bad)
cmp
push
out
cmp
push
fidivr
cdq
mov
into
cmp
push
mov
push
adc
out
jnp
push
sahf
cmp
jmp
adc
cmp
fistp
cmp
fcomp
push
push
outs
cmp
cld
xchg
xor
lock
fsubr
push
push
lock
fdivr
dec
inc
add
add
xor
nop
cmp
std
cmp
lds
cmp
ret
jl
cmp
add
ret
add
push
(bad)
jmp
jo
ret
ret
cmp
adc
sub
cmp
lods
cmp
icebp
nop
icebp
cmp
pop
push
push
(bad)
jmp
add
in
mov
push
mov
imul
cld
out
in
cmps
push
fdivr
cld
out
pushf
outs
add
push
or
mov
add
faddp
jmp
call
jecxz
cld
scas
in
(bad)
call
fistp
cld
out
pushf
push
add
adc
cmp
ss
add
fst
jmp
outs
shr
add
data16
cld
outs
mov
cs
imul
lds
shr
mov
mov
add
cmps
outs
jmp
lds
imul
(bad)
(bad)
mov
ss
popf
xchg
add
add
es
push
sbb
add
mov
push
repz
jmp
add
bound
sahf
add
cs
pop
fcom
cld
packuswb
add
push
push
jmp
dec
mov
cdq
in
call
adc
push
dec
xchg
cdq
add
adc
inc
dec
outs
jg
pop
rcl
cmp
das
add
xchg
cmp
rcl
dec
es
pop
add
add
adc
loopne
push
sbb
fstp
aaa
enter
das
add
das
xlat
dec
out
stc
and
adc
and
jle
add
adc
or
out
sub
pop
cmps
aaa
(bad)
mov
jmp
cld
cmp
(bad)
jmp
jo
ret
adc
cmp
cmp
add
add
adc
cmp
cli
(bad)
jmp
cmp
(bad)
jmp
jo
ret
adc
cmp
ret
jl
cmp
aad
xor
push
(bad)
jmp
jo
ret
ror
das
cmp
or
adc
cmp
addr16
test
cs
leave
cmp
add
add
data16
(bad)
jmp
leave
cmp
push
sbb
cld
out
add
mov
add
out
dec
out
push
mov
mov
mov
pushf
xchg
ins
adc
cld
xor
push
pop
adc
in
leave
sahf
mov
cmp
push
test
xchg
ins
adc
cld
xor
push
test
add
add
out
cdq
rcr
cmc
aad
in
xchg
pop
inc
shl
push
test
(bad)
imul
mov
fwait
je
in
ss
cmc
mov
ds
mov
inc
ja
outs
popf
fwait
pop
aam
pop
dec
test
inc
shl
sbb
mov
mov
mov
add
out
lea
jge
cmp
(bad)
push
inc
shr
cld
(bad)
test
add
jg
pop
xor
cmp
jmp
sahf
add
sti
add
cmp
xchg
and
lea
pop
in
sbb
pop
popf
cmp
dec
or
dec
sahf
add
xor
icebp
cmp
push
jge
icebp
rol
add
add
sbb
pop
mov
mov
xchg
jno
shl
xor
jg
adc
fnstsw
add
pop
pop
in
(bad)
cmc
mov
dec
movs
or
ret
aad
push
rol
mov
sub
mov
mov
ins
sub
test
and
cld
sahf
cmp
cld
inc
inc
xchg
ret
add
test
hlt
scas
jmp
mov
xchg
mov
jno
pop
dec
xor
fstp
cmp
cld
and
sub
js
add
sbb
sub
adc
dec
(bad)
jp
call
lahf
(bad)
popa
add
adc
xor
stc
add
xlat
(bad)
pop
add
cld
gs
enter
mov
sbb
push
(bad)
push
add
add
in
ss
mov
leave
cld
clc
aad
cmc
ret
xor
add
test
or
push
lds
dec
lock
cmp
push
sub
neg
(bad)
mov
and
iret
int3
push
(bad)
call
xlat
fnstsw
pop
adc
mov
out
sbb
sbb
inc
ret
lock
xor
pop
ret
or
pop
in
scas
push
push
add
add
test
cld
dec
inc
mov
xchg
(bad)
cld
dec
and
and
bound
aas
je
imul
lock
repnz
adc
adc
add
ret
lds
cmp
xor
mov
xor
mov
ret
outs
xor
xor
push
or
push
std
add
add
aad
add
ds
dec
jg
push
pusha
mov
ja
not
ret
lahf
sbb
(bad)
or
adc
and
es
and
sbb
gs
sahf
xor
or
push
dec
add
xchg
outs
clc
dec
sub
adc
cmc
lock
shr
aas
shr
xor
push
inc
add
add
and
and
stos
sub
lods
cmc
jg
mov
(bad)
lds
jmp
mov
je
adc
jbe
pop
inc
dec
(bad)
outs
rcl
sbb
cmp
pop
sub
xchg
popa
or
int
dec
aas
cs
cmp
add
add
dec
das
adc
test
xchg
jle
cmp
push
xor
jge
sbb
ins
inc
pop
loop
push
sub
(bad)
xor
mov
dec
jmp
out
cmp
cmp
xor
stos
cmp
push
sbb
sti
adc
jbe
lods
or
sbb
fsubr
xchg
jae
adc
ret
add
add
jbe
push
sti
fdiv
cld
or
adc
add
(bad)
mov
cmp
call
push
ret
mov
cmc
mov
cmp
dec
and
(bad)
mov
sbb
(bad)
clc
les
sbb
cmp
mov
cmp
add
mov
cmp
or
pop
cmp
in
xor
push
jb
or
(bad)
test
push
xor
mov
dec
ret
xor
out
adc
adc
test
pop
out
add
cmp
stc
push
cdq
jmp
sbb
sbb
imul
dec
out
inc
stos
sar
mov
aaa
xchg
test
add
sub
cdq
retf
jp
push
mov
lock
xchg
cmp
lods
dec
int
push
cmp
mov
lods
cmps
data16
inc
std
pop
pop
(bad)
aad
push
fst
mov
test
adc
jecxz
rcl
sub
pop
movs
int3
loop
jo
ret
add
ins
cs
adc
add
rol
adc
fld
jle
jmp
dec
sub
pop
ss
xchg
jno
clc
xchg
push
(bad)
adc
into
scas
dec
shl
repnz
shl
cmp
adc
nop
jno
not
mov
mov
test
es
jmp
xchg
iret
push
xchg
pop
xchg
ror
(bad)
jmp
sahf
loop
add
dec
cmps
leave
imul
stos
loope
add
jmp
adc
sbb
xchg
test
add
scas
add
(bad)
mov
mov
mov
pop
je
xor
sub
jo
dec
xor
addr16
sbb
add
pop
inc
(bad)
adc
fwait
pop
stos
and
jae
mov
push
inc
jp
cmps
lods
inc
add
add
arpl
mov
sbb
fsubr
xchg
or
push
mov
inc
jl
inc
push
cmp
mov
mov
in
and
mov
inc
xchg
push
add
pop
shl
pop
rcr
iret
jge
mov
jne
dec
dec
in
sub
inc
fst
add
pop
lea
add
fld
cmp
push
inc
pusha
and
add
(bad)
inc
loop
aas
test
or
test
test
in
add
mov
mov
outs
jge
inc
inc
std
in
add
pusha
dec
cmps
fnstsw
lds
rcl
jl
fmul
jl
das
arpl
mov
xor
add
enter
jmp
fcomp
rol
out
call
aad
mov
int
mov
mov
cmp
xchg
js
add
into
fst
ss
xor
mov
pushf
in
lock
test
jne
cmps
push
inc
fild
retf
lods
daa
ret
mov
int3
inc
cmp
pop
inc
push
pop
jmp
dec
inc
lods
and
mov
in
cwde
push
add
or
fisub
leave
or
add
lods
ret
mov
or
neg
cmp
fabs
out
push
(bad)
cmp
jmp
retf
jno
into
push
jno
sahf
ret
cli
vcmpngtss
cmp
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
mov
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
fcom
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sar
sar
sar
sar
sar
rol
add
mov
rol
add
lds
rcl
nop
rcl
nop
rcl
xchg
rcl
xchg
rcl
xchg
add
add
adc
lahf
xchg
rcl
xchg
rcl
xchg
rcl
xchg
rcl
xchg
rcl
xchg
rcl
xchg
rcl
xchg
rcl
xchg
rcl
xchg
rcl
push
cmp
(bad)
mov
add
add
adc
(bad)
sbb
adc
mov
adc
(bad)
push
push
adc
(bad)
xchg
inc
adc
(bad)
sbb
adc
(bad)
cld
dec
adc
(bad)
mov
(bad)
es
adc
mov
mov
out
dec
adc
(bad)
(bad)
ds
(bad)
mov
(bad)
cwde
inc
adc
add
adc
mov
xchg
mov
xchg
mov
xchg
mov
xchg
add
pop
mov
mov
add
mov
mov
add
mov
xchg
add
mov
mov
add
mov
add
mov
add
mov
xchg
add
xchg
add
xchg
add
add
xchg
add
mov
add
mov
add
mov
add
push
mov
adc
rol
shl
add
dec
shr
shr
rol
ror
shr
cmp
fild
cmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
pop
stos
inc
add
add
movs
test
jb
and
jo
outs
popa
movs
aas
jb
push
pop
lds
dec
lds
lds
pop
lds
shl
rcl
add
inc
add
add
push
mov
add
adc
xor
retf
adc
sti
pop
std
adc
fadd
mov
add
repz
std
pop
mov
xor
pop
or
loope
push
push
ltr
adc
enter
and
mov
adc
push
adc
pop
pushf
adc
or
jae
(bad)
out
or
jmp
vcmpss
fld
adc
loopne
repnz
jbe
test
add
mov
jp
test
lds
cmc
lds
movs
lds
cmc
lds
(bad)
xor
mov
cmp
(bad)
add
mov
vcmpss
stc
ret
or
movs
vcmppd
into
ret
or
mov
lds
adc
add
adc
add
adc
add
add
sub
scas
add
adc
add
adc
add
mov
add
test
push
adc
add
scas
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
not
mov
cli
adc
add
dec
lds
cmp
outs
rol
ror
rcl
rcr
ror
mov
and
xchg
lds
dec
lds
xchg
jo
test
and
cwde
lds
xchg
lds
enter
or
ja
aam
ror
rcl
jo
jmp
shl
ffreep
ror
add
ror
push
push
lds
lds
push
ret
stc
rcl
ror
rol
mov
adc
jnp
fs
xlat
pop
sahf
adc
jge
test
ltr
push
add
dec
add
inc
add
push
push
add
adc
inc
add
verr
push
iret
pop
daa
push
mov
add
add
push
add
adc
mov
repnz
repnz
loop
fild
out
fld
mov
adc
cmp
pop
loope
(bad)
cs
retf
ret
int3
ret
out
shufps
adc
vcmpss
clc
ret
loopne
jmp
ret
retf
add
mov
jl
lods
lds
mov
xchg
ret
jns
movs
lds
mov
lods
lds
cmc
lds
lds
dec
lds
lds
cmps
lds
lds
vcmppd
add
sbb
add
adc
add
cmc
add
sbb
add
add
adc
mov
add
sbb
add
sbb
add
sbb
add
cmps
add
scas
add
mov
add
mov
add
adc
add
adc
mov
scas
add
adc
add
adc
add
xchg
add
adc
push
inc
and
add
rol
push
cmpps
lds
aas
lds
ror
ror
rcl
rol
ror
rcl
rcr
ror
outs
rcl
ja
test
ins
ror
or
sub
add
faddp
xor
sar
push
shl
ror
add
add
inc
push
ror
rcr
ja
adc
leave
pop
fcom
into
pop
movs
adc
ret
adc
das
add
adc
fild
rcl
and
pop
je
or
pusha
adc
add
mov
adc
inc
add
push
push
add
push
dec
add
add
sub
dec
add
adc
mov
adc
sub
mov
adc
fld
mov
aas
add
or
loopne
jmp
mov
mov
cld
ret
inc
mov
adc
movs
lds
mov
cmc
vcmpps
mov
ret
int
cmc
(bad)
add
ret
ret
ret
xchg
ret
mov
scas
lds
ret
xchg
ret
out
ret
jmp
(bad)
cmp
ffreep
sbb
or
loopne
jmp
not
mov
enter
xchg
adc
add
adc
add
adc
add
add
sbb
add
adc
add
adc
add
adc
add
adc
add
adc
add
scas
add
adc
add
adc
add
adc
add
lock
hlt
add
retf
add
adc
add
leave
shl
mov
shl
shl
shl
into
shl
add
inc
pusha
rol
push
cmpps
lds
or
ret
xor
add
sub
add
pop
lds
sar
push
shl
ror
rol
ror
rcl
sar
rol
ror
and
mov
ins
rcr
ins
rcl
sbb
cmps
pop
call
adc
mov
jmp
adc
mov
jecxz
rol
fcom
das
add
adc
fld
out
adc
jbe
les
iret
pop
mov
or
add
adc
jg
pop
adc
dec
add
dec
xor
inc
add
adc
mov
sub
(bad)
mov
jp
ffreep
pop
(bad)
jmp
(bad)
cmp
inc
mov
and
lock
or
jp
and
js
push
mov
xor
(bad)
or
test
retf
xabort
xchg
aad
xchg
out
ret
jmp
add
adc
(bad)
cwde
ret
cli
ret
std
ret
loopne
inc
(bad)
retf
(bad)
mov
jp
xchg
ret
xchg
js
add
mov
add
sbb
add
sbb
add
out
or
test
add
sbb
add
sbb
add
sbb
add
add
sbb
mov
sbb
add
test
and
jmp
mov
sbb
add
sbb
add
pop
out
sbb
mov
stc
pop
movs
add
pop
test
and
test
imul
lds
popf
les
fadd
rcr
pop
ret
push
lds
ror
shr
add
add
or
push
rol
rcr
rcr
shr
ja
in
sub
fadd
imul
ret
fadd
popa
rcr
rcr
and
pop
ret
call
les
stc
les
sar
add
scas
les
rol
rcl
add
push
mov
es
push
add
adc
dec
add
push
mov
mov
adc
add
adc
std
pop
out
add
xlat
adc
xor
pop
not
pop
add
adc
ltr
adc
or
adc
adc
mov
adc
add
(bad)
iret
ret
(bad)
cwde
ret
mov
add
ret
jg
jp
xchg
ret
jns
and
loopne
adc
(bad)
cmp
inc
(bad)
sbb
and
loopne
inc
(bad)
or
ja
dec
mov
mov
inc
mov
xor
mov
jg
push
mov
mov
cli
ret
add
add
add
add
ret
aam
add
ret
mov
(bad)
retf
ret
add
adc
add
adc
add
adc
add
mov
mov
ret
xchg
adc
add
sar
mov
sar
js
mov
mov
mov
ret
jp
mov
sar
imul
add
add
mov
mov
sar
xor
add
mov
mov
ret
repz
add
ret
les
mov
(bad)
ror
add
xchg
shl
add
imul
(bad)
push
add
mov
cmp
movs
les
rol
cmp
xchg
les
rcl
cmp
add
rcr
cmp
add
sar
add
adc
cmp
out
add
in
cmp
dec
ret
pop
ret
push
ret
dec
ret
xor
and
inc
ret
sub
jbe
sbb
les
jecxz
sub
fadd
push
ror
ins
rcl
add
pop
jne
push
add
jge
pusha
adc
das
add
adc
das
rcl
add
adc
mov
add
push
dec
add
verw
adc
add
adc
test
out
adc
mov
(bad)
adc
fld
mov
rol
lods
adc
retf
adc
cmp
add
adc
(bad)
sbb
add
ret
fadd
add
ret
mov
adc
push
icebp
ret
jmp
push
out
ret
jmp
push
out
adc
(bad)
outs
ret
loop
adc
(bad)
je
adc
(bad)
jmp
push
bnd
jmp
push
loop
adc
(bad)
jnp
adc
add
adc
mov
adc
ret
adc
mov
sbb
add
sbb
add
sbb
add
ret
loopne
mov
sbb
add
mov
sbb
add
sbb
add
adc
add
add
add
sbb
add
sbb
add
adc
add
mov
add
cmps
lds
add
lods
xchg
(bad)
cld
scas
mov
inc
lds
pop
shl
jno
and
mov
cmp
xchg
adc
out
dec
push
pop
fsub
outs
iret
push
arpl
jae
sar
jb
loopne
addr16
or
movs
push
outs
and
les
shl
add
mov
je
icebp
adc
add
imul
jg
out
push
ja
rol
rcr
add
push
shl
push
rcl
add
adc
fild
test
test
ins
adc
sbb
jb
das
add
adc
add
pop
adc
add
adc
iret
pop
sbb
adc
push
add
push
push
add
adc
or
sbb
adc
das
add
adc
das
add
adc
das
add
adc
(bad)
dec
lds
aas
mov
xchg
jmp
(bad)
adc
jo
pop
lds
pop
add
add
adc
(bad)
faddp
jp
enter
fadd
adc
(bad)
mov
ret
enter
mov
ret
test
add
ret
jmp
(bad)
mov
mov
jmp
(bad)
push
lds
jmp
(bad)
pop
mov
adc
add
add
cli
adc
add
adc
add
adc
add
adc
add
adc
sbb
mov
add
adc
mov
adc
mov
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
mov
add
push
adc
add
adc
add
ins
ret
sub
(bad)
shl
rcr
xor
(bad)
and
add
dec
ret
sub
jbe
sub
rcr
jp
inc
add
cmp
jno
adc
les
inc
add
retf
shl
jno
retf
les
ffree
jp
cld
les
rcr
rcr
jo
cwde
les
movs
les
shr
jo
cwde
les
test
add
adc
mov
in
mov
fcom
fadd
int3
adc
mov
mov
adc
rol
rcl
pop
rcl
add
adc
ret
pop
rcl
ins
adc
bound
adc
rcl
add
adc
jp
xor
inc
movs
and
loopne
pop
pop
int
jno
in
cmps
mov
stc
adc
mov
jmp
cmp
xchg
cmp
es
push
and
jmp
mov
jmp
add
test
cmp
mov
push
je
clc
ret
sub
mov
push
push
cmp
ret
mov
ret
stos
xor
cmps
arpl
(bad)
lods
pop
ja
xchg
arpl
(bad)
mov
cmp
mov
add
mov
stos
mov
add
add
mov
cmps
stos
add
test
mov
out
cmps
add
mov
mov
mov
sbb
add
stos
lods
addr16
mov
mov
jmp
movs
jp
sbb
add
mov
ins
add
sbb
add
mov
add
stos
addr16
cmp
imul
cld
sar
sar
shr
shl
aas
push
outs
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
add
shr
add
in
les
shr
add
in
les
rcl
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
or
xor
(bad)
or
xor
add
sub
(bad)
rol
sub
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
or
xor
(bad)
mov
ret
add
adc
(bad)
add
adc
(bad)
add
inc
add
adc
add
adc
add
add
fcom
add
adc
(bad)
add
inc
add
sbb
test
sbb
add
adc
mov
sub
mov
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
inc
add
ins
ret
ins
ret
in
les
add
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
sar
adc
inc
and
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
out
les
shr
add
add
rcl
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
add
adc
das
add
adc
das
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
or
xor
(bad)
or
xor
mov
(bad)
rol
sub
(bad)
retf
(bad)
retf
mov
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
mov
inc
add
sbb
in
inc
add
sbb
aam
inc
add
sbb
add
(bad)
add
(bad)
add
(bad)
add
adc
cdq
adc
sbb
mov
sub
mov
shr
add
in
rol
in
rol
in
rol
in
rol
in
rol
inc
adc
inc
adc
inc
adc
add
shl
shl
shl
shl
add
lock
lock
lock
lock
lock
lock
lock
lock
lock
inc
adc
inc
adc
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
adc
verr
adc
sldt
add
mov
adc
verr
adc
iret
pop
mov
push
aas
add
adc
pop
add
adc
pop
add
adc
aas
add
adc
sbb
rcl
pop
add
adc
aas
add
adc
add
adc
add
add
rcl
rcl
ret
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
fcmovb
adc
jmp
adc
jmp
adc
jmp
adc
call
ret
pop
(bad)
call
ret
pop
(bad)
call
ret
pop
(bad)
call
ret
pop
(bad)
call
ret
pop
(bad)
call
add
add
pop
(bad)
fcmovb
pop
(bad)
call
ret
pop
(bad)
call
ret
adc
jmp
inc
sbb
mov
mov
adc
outs
pop
cwde
imul
ja
mov
sbb
xchg
pop
push
mov
arpl
push
dec
jl
inc
dec
js
fcom
rcr
add
add
add
cmp
mov
or
enter
int3
aas
adc
mov
sbb
movs
daa
sbb
mov
das
and
rcr
call
push
pop
xor
shl
stc
cmp
(bad)
std
cs
rol
repnz
(bad)
idiv
or
fcmovb
or
mov
ds
(bad)
push
sub
(bad)
xor
and
(bad)
sbb
add
add
push
adc
xchg
and
mul
or
cli
or
ds
scas
popa
bound
shr
xlat
pop
push
mov
push
jb
mov
dec
jp
stos
jne
push
(bad)
popa
(bad)
xchg
ins
data16
pop
push
jp
outs
ficom
xchg
call
mov
inc
xchg
mov
jg
mov
aas
mov
jnp
mov
stos
jae
cwde
mov
mov
imul
xchg
lods
cli
arpl
test
push
adc
push
pop
ja
push
dec
jnp
dec
push
outs
mov
inc
adc
dec
xchg
out
mov
fiadd
(bad)
(bad)
aaa
jae
repnz
fucomi
xor
repz
out
lds
mov
sub
scas
out
fiadd
add
mov
xor
ror
sti
cmp
mov
xchg
inc
inc
nop
inc
bound
xchg
xchg
mov
push
jb
fwait
pop
outs
pop
xchg
pop
dec
bound
pusha
inc
jp
ins
outs
cmps
push
xchg
push
shl
mov
js
add
add
push
rol
and
retf
or
into
(bad)
or
shl
adc
add
add
fistp
sahf
xlat
sbb
mov
cs
rcr
call
push
pop
xor
adc
cmp
cld
push
cmp
sbb
les
and
rol
into
or
test
or
xlat
adc
(bad)
rcl
jmp
clc
repnz
add
loop
add
out
sub
jmp
int3
repnz
add
shl
(bad)
cmp
xchg
fadd
dec
sub
mov
xchg
push
xor
xchg
push
shl
pop
push
lahf
add
mov
jnp
cli
xchg
ja
imul
jae
xchg
sub
mov
imul
dec
jle
jle
add
mov
lea
outs
mov
push
imul
add
add
scas
popf
inc
pop
mov
movs
push
push
fwait
test
push
(bad)
xchg
mov
mov
mov
ds
cmp
leave
jp
dec
jbe
push
xchg
enter
int3
imul
mov
jmp
clc
ret
cld
(bad)
push
pop
add
sbb
pop
pop
xor
adc
das
in
push
(bad)
lock
add
add
hlt
ror
mov
inc
call
push
or
dec
dec
loopne
dec
pop
loopne
push
rcr
test
rcr
inc
cmc
lods
pusha
sub
popf
and
dec
das
retf
push
hlt
sub
jae
dec
icebp
xor
dec
mov
sbb
icebp
mov
jp
retf
daa
mov
inc
scas
lods
ss
es
jecxz
sub
pop
outs
mov
sub
in
stc
test
(bad)
xlat
add
pushf
call
into
mov
pusha
xchg
mov
aad
or
dec
or
fbstp
pop
cmp
mov
ret
mov
ret
add
add
add
jno
movs
add
test
add
mov
xor
xchg
add
test
cmp
test
add
push
call
sbb
mov
nop
add
mov
fistp
scas
add
sbb
add
sbb
add
adc
mov
fcom
scas
add
add
int3
adc
mov
je
mov
test
mov
mov
les
mov
les
fadd
push
stos
les
les
ret
sar
add
nop
les
faddp
inc
ror
dec
ror
shl
push
shl
inc
shr
add
and
rcr
add
add
inc
add
enter
ss
inc
add
inc
add
or
dec
sar
push
ror
inc
ror
rcl
add
push
sbb
add
push
or
or
push
jge
or
jg
cmc
adc
pop
add
adc
push
add
adc
dec
add
adc
inc
xchg
add
adc
jmp
rcl
pop
xchg
adc
test
pusha
adc
clc
pop
je
fild
pop
adc
retf
adc
xabort
push
cld
ret
fld
adc
(bad)
mov
ret
popf
ret
cwde
ret
xchg
ret
ret
ret
cwde
add
add
jle
cdq
ret
mov
imul
xchg
ret
xchg
jle
jge
(bad)
(bad)
mov
push
(bad)
pop
mov
js
inc
mov
js
cmp
jle
inc
mov
ins
(bad)
sbb
arpl
bsr
lds
add
sbb
add
adc
mov
mov
cwde
adc
add
test
add
test
mov
adc
add
add
mov
adc
add
stos
add
adc
add
sbb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sar
add
cld
les
sar
add
cld
les
sar
add
repnz
inc
rcr
sar
add
cs
sahf
(bad)
ins
cld
xchg
outs
pop
cld
mov
les
sar
add
inc
add
inc
add
inc
add
add
cld
pop
inc
add
retw
inc
add
in
cld
and
ror
inc
sar
add
(bad)
(bad)
cld
add
add
inc
add
mov
les
shl
rcl
add
adc
cs
adc
cs
adc
cs
adc
cdq
add
adc
add
rcl
add
adc
cs
adc
leave
push
in
cs
adc
xor
ds
cs
adc
cs
adc
int3
inc
adc
(bad)
mov
in
cmp
ret
mov
ret
xchg
ret
in
cmp
ret
inc
adc
ret
je
jmp
ret
jmp
ret
jmp
add
add
(bad)
jmp
cmp
ret
ds
jmp
ret
jmp
clc
push
(bad)
jmp
cmp
ret
ret
cmp
ret
aam
jmp
pop
xchg
sbb
mov
adc
mov
adc
mov
adc
mov
inc
xchg
add
add
push
mov
adc
mov
adc
cld
cwde
push
mov
adc
cld
test
mov
dec
xchg
cwde
push
mov
adc
cld
push
adc
cld
pop
push
mov
adc
cld
push
dec
xchg
or
add
push
mov
xchg
cld
shl
shl
push
cld
les
sar
add
xor
add
add
jmp
add
les
out
sti
les
sar
add
pop
push
cld
(bad)
sti
mov
sar
(bad)
sti
les
sar
add
mov
cld
scas
pop
mov
rcl
add
inc
add
sbb
cld
xchg
add
out
cld
jbe
les
sar
add
ficom
pop
fbstp
add
inc
add
inc
add
inc
add
add
sar
add
adc
xchg
xchg
push
jmp
cld
xchg
push
jmp
cs
adc
push
nop
out
call
or
(bad)
call
out
(bad)
call
rcl
call
pop
xchg
sahf
call
hlt
xchg
mov
nop
xchg
xchg
push
xchg
jle
test
add
ret
call
aam
push
call
loop
inc
call
lds
call
cmp
cmp
cmp
call
cmp
aaa
call
cmp
call
cmp
call
cmp
sub
cmp
sub
cmp
pop
out
push
dec
out
call
add
add
cmp
xor
cmp
xor
cmp
out
mov
cmp
push
out
inc
push
out
adc
out
adc
out
fidiv
out
add
cld
or
cmp
data16
cld
cmp
cld
mov
cmp
inc
mov
cld
pop
mov
cld
sub
cmp
add
mov
adc
add
add
adc
add
cld
fcom
mov
cmp
js
cmp
mov
cmp
loop
cmp
mov
cmp
mov
cld
cld
cmp
adc
cmp
into
cmp
fiadd
cmp
shl
jb
cld
inc
mov
adc
xchg
cs
les
rcr
cld
push
hlt
push
cld
add
add
repnz
cld
push
stos
push
cld
push
cld
les
shl
jae
movs
ja
lods
outs
pop
daa
ret
pop
mov
dec
sbb
push
sar
ins
xor
mov
adc
inc
sbb
xchg
test
call
test
dec
cmps
data16
out
(bad)
repz
data16
mov
add
jnp
jo
jb
outs
add
add
adc
dec
xchg
rcl
push
cwde
js
inc
scas
push
jae
adc
xchg
bound
xchg
bound
out
pusha
gs
pop
jp
add
sbb
bound
retf
outs
cmp
adc
xor
aas
push
and
push
rcl
arpl
push
stc
pop
add
add
or
jp
add
sbb
lods
loope
xchg
mov
xlat
dec
mov
xchg
les
out
pop
mov
mov
jp
jns
outs
stos
xchg
stos
dec
vshufps
addr16
inc
mov
data16
cmp
mov
sbb
mov
addr16
dec
mov
sub
add
aaa
jns
mul
pop
scas
clc
and
std
sub
xchg
jmp
xchg
ret
mov
sbb
jp
dec
pop
inc
add
jbe
inc
daa
outs
stos
bound
inc
mov
jbe
add
push
xchg
dec
sbb
inc
stos
outs
sub
cmp
fs
addr16
jae
push
je
add
push
mov
xchg
inc
stos
mov
ins
add
add
push
and
jbe
data16
sbb
mov
ins
stos
ins
cmps
ja
push
movs
pusha
mov
gs
add
ins
jnp
cmps
ja
sar
adc
mov
lods
sar
pusha
fld
movs
data16
in
(bad)
out
sar
ins
scas
add
shl
movs
scas
cmps
jno
arpl
push
pushf
pop
lods
jo
push
mov
xchg
dec
mov
test
rcl
jae
movs
ja
or
inc
pop
sub
adc
and
push
sub
cmps
ins
cs
les
or
push
das
add
arpl
push
imul
push
push
jo
add
jno
arpl
add
add
push
loopne
dec
gs
adc
dec
push
fsubr
imul
das
add
outs
mov
jae
adc
mov
outs
stc
jae
adc
cld
jae
push
jae
jp
jo
js
pop
sti
adc
(bad)
push
jo
pop
adc
jmp
jb
jmp
add
jns
fisub
jo
(bad)
or
pop
les
out
cmps
into
icebp
jp
mov
adc
mov
cdq
loope
mov
movs
mov
arpl
jmp
xchg
pop
mov
jno
dec
sbb
ret
sbb
inc
(bad)
stc
mov
mov
or
inc
scas
sldt
add
and
je
push
pusha
pop
mov
add
dec
mov
push
mov
add
jbe
ins
jno
scas
bound
push
pop
mov
adc
bound
(bad)
ins
sub
ins
mov
add
test
scas
ins
inc
outs
scas
bound
xchg
pop
js
ins
inc
outs
scas
bound
movs
jbe
add
push
mov
sbb
test
sub
lahf
dec
add
cmc
xor
ds
outs
call
cmps
jae
sbb
ins
xor
movs
ja
adc
inc
and
xchg
ja
mov
mov
ret
lds
mov
jno
retf
xchg
jo
in
(bad)
xchg
ja
mov
fcom
cmps
data16
(bad)
mov
outs
movs
cwde
idiv
push
mov
cwde
dec
mov
data16
les
xchg
dec
stos
bound
scas
cmp
jae
outs
leave
cmp
xor
das
add
imul
pop
sbb
fbstp
imul
add
jae
push
adc
inc
add
add
jno
pop
repnz
pusha
pop
in
dec
add
add
imul
inc
das
add
popa
jg
cmps
js
jae
adc
dec
movs
jb
addr16
fwait
push
adc
fwait
push
jne
out
addr16
push
adc
(bad)
dec
push
addr16
push
outs
popa
mov
and
xor
add
add
bound
add
push
dec
mov
in
imul
(bad)
dec
mov
into
push
jae
int
imul
loopne
mov
in
scas
mov
mov
movs
mov
outs
test
cdq
xchg
outs
test
mov
call
add
xchg
push
ins
jb
add
add
dec
sbb
stos
arpl
outs
mov
ja
js
add
sub
mov
ins
lods
outs
mov
ins
adc
outs
ja
mov
adc
ja
jb
jbe
pop
push
pop
dec
cmp
bound
mov
outs
sub
dec
pop
sub
popa
jne
data16
cmp
push
outs
mov
xchg
ins
test
sbb
mov
retf
jb
dec
ror
jl
mov
jae
les
ret
xor
ja
push
mov
push
in
(bad)
call
and
movs
ins
and
mov
jno
or
into
ret
xor
bound
mov
data16
lahf
add
mov
push
in
shl
gs
sahf
xchg
bound
add
out
iret
lahf
inc
out
cmps
ja
jle
cmp
test
bound
sbb
mov
in
(bad)
in
shl
inc
xchg
ins
xchg
pop
bound
pop
jbe
pop
pop
imul
cmps
push
jmp
pusha
jno
pop
arpl
jne
inc
das
add
loopne
xor
jo
add
pop
call
push
rcl
(bad)
jb
inc
add
ins
push
rcl
popa
in
add
jno
push
loopne
add
mov
inc
jns
fsub
add
jb
pop
mov
bound
cwde
push
inc
je
adc
mov
pusha
cwde
adc
mov
sub
test
xor
mov
bound
cmp
add
outs
arpl
sbb
inc
mov
xor
push
lds
lds
add
cli
repz
mov
div
jmp
mov
add
iret
push
imul
rol
push
mov
ret
in
jo
mov
ret
jmp
mov
adc
add
adc
add
adc
add
adc
add
add
sbb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
add
sub
mov
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
in
les
shr
add
add
shr
add
in
les
shr
add
in
les
shr
add
in
les
rcl
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
(bad)
jmp
(bad)
jmp
(bad)
call
sbb
jge
retf
xchg
sub
sbb
cmp
aad
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
cmp
sar
jmp
(bad)
jmp
mov
sbb
add
mov
sbb
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
add
sub
mov
sbb
add
sbb
add
sbb
add
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
mov
les
sar
add
add
mov
les
sar
add
mov
les
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
add
add
mov
les
rcl
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
xor
rcl
add
adc
sub
add
adc
sub
rcl
add
adc
sub
add
add
adc
aaa
add
adc
es
adc
xor
add
adc
(bad)
loop
adc
(bad)
hlt
ret
out
adc
(bad)
cmc
ret
call
ret
ffreep
adc
xabort
adc
(bad)
call
ret
out
ret
mov
add
add
adc
(bad)
out
ret
sub
adc
(bad)
fcmovnb
adc
(bad)
ffreep
adc
(bad)
out
ret
cmp
ret
add
sbb
add
sbb
add
adc
add
adc
add
add
adc
add
mov
adc
add
adc
add
add
test
mov
adc
add
adc
add
adc
add
adc
add
add
adc
add
mov
sbb
add
mov
adc
add
adc
add
adc
add
pop
lds
shl
add
pextrw
add
in
les
shl
sar
add
add
rol
add
les
cld
pop
icebp
les
ror
add
(bad)
les
ror
inc
sar
shl
inc
shl
inc
rcl
ror
rol
sar
sar
add
mov
inc
cmp
push
inc
cmp
jo
cmp
adc
mov
out
scas
xchg
adc
aas
or
xlat
xchg
adc
fild
scas
adc
xlat
xchg
adc
retf
xchg
adc
jo
out
aaa
sbb
xor
into
adc
sub
adc
mov
add
add
adc
pop
adc
(bad)
outs
sbb
push
mov
(bad)
dec
and
push
(bad)
pop
and
push
(bad)
cli
in
(bad)
jecxz
int
jmp
adc
mov
push
(bad)
retf
(bad)
mov
fst
mov
popf
push
(bad)
loop
push
(bad)
rcr
push
(bad)
loop
add
popf
push
(bad)
(bad)
movs
push
(bad)
or
(bad)
cs
push
(bad)
sahf
arpl
mov
(bad)
mov
(bad)
outs
arpl
add
add
add
xchg
in
xchg
int3
aaa
xchg
mov
xchg
int3
aaa
xchg
in
xchg
aam
xchg
xor
add
xchg
in
aaa
xchg
ins
xchg
pusha
xchg
lock
add
add
xchg
lods
xchg
call
xchg
jl
xchg
movs
xchg
mov
xor
xchg
sbb
mov
pop
mov
pop
mov
pop
mov
pop
mov
mov
les
sar
add
mov
les
sar
sar
sar
add
add
mov
les
sar
sar
sar
sar
sar
sar
sar
sar
sar
cmps
adc
das
add
adc
iret
cmps
xchg
add
adc
das
add
adc
cs
adc
das
add
adc
xchg
lods
mov
adc
dec
and
inc
mov
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
fidiv
(bad)
fidiv
(bad)
cli
jb
(bad)
cli
push
sbb
cli
push
sbb
cli
push
sbb
jmp
in
(bad)
in
add
add
cmc
in
loop
in
loop
in
loop
in
loop
in
sbb
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
adc
add
mov
add
pop
adc
add
mov
adc
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
les
sar
add
mov
les
sar
add
mov
les
sar
add
mov
les
sar
add
add
mov
les
sar
sar
out
stos
push
jecxz
outs
out
xlat
xchg
jb
jmp
jbe
fistp
sar
xchg
dec
jnp
je
mov
xor
jl
je
jo
push
adc
das
add
adc
das
add
adc
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
cli
push
adc
(bad)
cli
push
adc
add
(bad)
add
leave
enter
mov
sbb
and
stc
in
or
in
clc
clc
in
clc
clc
in
or
in
call
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
mov
sbb
add
mov
sbb
add
scas
les
shr
add
scas
les
shr
add
scas
les
shr
add
scas
les
shr
add
scas
les
shr
add
scas
les
shr
add
lods
les
add
add
lods
les
shr
shr
shr
shr
shr
rcl
arpl
cmp
outs
fld
jnp
scas
xor
mov
jae
mov
ja
stos
adc
das
inc
adc
xchg
dec
jnp
pop
dec
(bad)
push
pop
aaa
xchg
push
xor
add
xchg
push
aas
mov
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
das
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
pop
ss
jmp
sbb
mov
ds
or
adc
cmp
ret
dec
aaa
sar
ret
imul
cmp
ret
add
adc
mov
add
sub
mov
pop
adc
mov
adc
mov
adc
cmp
sub
cmp
sbb
mov
jns
mov
fcom
add
adc
add
adc
add
adc
add
adc
add
cmp
test
mov
out
cld
cwde
adc
add
adc
and
add
add
sbb
mov
shr
add
scas
les
shr
cld
pop
scas
les
shr
dec
scas
les
sar
sar
sbb
ret
in
xor
scas
les
shr
add
scas
les
shr
cld
idiv
out
lods
les
shr
shr
shr
add
mov
outs
cmp
sub
inc
shr
rcl
cwde
add
scas
cwde
add
scas
cwde
add
scas
cwde
add
scas
cwde
add
xor
sub
ds
stos
mov
stos
cwde
adc
cwde
adc
cwde
adc
stos
into
adc
add
mov
lea
rcl
add
sbb
das
add
adc
cmp
into
out
adc
mov
jns
(bad)
lods
je
(bad)
xor
fcmovb
xchg
sti
cwde
mov
iret
cmps
sahf
stc
mov
push
xor
es
sub
int
ficom
add
add
int3
inc
(bad)
dec
add
arpl
jl
jae
inc
(bad)
jg
sar
movs
mul
xor
repz
ins
inc
push
das
and
dec
adc
sahf
jmp
fild
dec
dec
loop
jbe
add
add
xor
ret
outs
mov
pop
jecxz
mov
jp
xchg
add
cmps
pusha
mov
sar
and
jno
cdq
in
or
inc
dec
jge
xlat
loopne
(bad)
aas
fld
(bad)
pop
inc
cld
mov
mov
(bad)
out
adc
pop
(bad)
fimul
cmps
outs
jo
sub
test
lds
inc
jp
inc
out
cmp
mov
dec
add
add
lds
test
xchg
dec
out
xor
mov
sahf
cmp
scas
mov
push
cwde
push
xchg
je
imul
lock
mov
nop
aas
push
add
add
pop
mov
xchg
mov
sub
scas
xlat
jb
mov
mov
pop
mov
loope
add
add
fmulp
enter
imul
jns
jmp
jno
sub
cmp
jnp
add
mov
add
test
ret
fidivr
xor
cdq
aaa
outs
ret
cs
cld
inc
sub
pushf
jbe
xchg
pop
and
mov
stos
stos
out
(bad)
mov
jno
sbb
pop
iret
add
add
mov
or
test
sbb
xchg
cmp
dec
enter
or
sub
call
(bad)
clc
adc
fistp
out
push
repz
mov
(bad)
sbb
jmp
mov
cmp
dec
ds
in
into
xor
out
mov
pushf
arpl
pop
add
xchg
enter
add
ja
daa
jmp
cs
scas
mov
jge
dec
dec
push
out
sub
add
nop
push
sbb
ins
scas
inc
imul
cs
adc
(bad)
push
sti
sub
fs
es
pop
lods
adc
jmp
xchg
imul
mov
sar
add
repnz
lea
je
adc
cmp
sbb
xchg
fdivr
in
int
jecxz
pop
cs
ret
mov
aaa
sar
or
fwait
cmc
in
cld
adc
mov
inc
aas
mov
into
or
jbe
rcl
inc
sbb
jmp
xor
mov
add
es
fsubr
jae
push
mov
jno
push
pop
push
xor
or
cmc
pushf
int
add
test
lods
sub
pop
push
repnz
nop
ficomp
or
cmp
retf
dec
pop
imul
idiv
inc
mov
stos
xor
fld
mov
pop
mov
pushf
scas
and
icebp
hlt
sub
add
xchg
cmp
adc
(bad)
stos
xchg
fldenv
mov
daa
test
mov
mov
imul
push
movs
or
fdiv
push
xor
stos
hlt
addr16
and
lea
push
sub
fidivr
je
add
xor
push
dec
js
lods
xor
sbb
add
addr16
xchg
jo
aad
(bad)
add
mov
pop
sti
add
in
cmp
mov
mov
xchg
sub
test
and
call
movs
cs
clc
daa
in
shl
cs
inc
(bad)
push
arpl
sahf
push
or
push
pop
add
add
cwde
push
dec
(bad)
ds
test
inc
xor
jecxz
fst
mov
(bad)
pop
inc
test
(bad)
out
cmps
(bad)
repz
jnp
jmp
mov
add
xor
inc
mov
scas
sub
lds
shr
jnp
jmp
aaa
idiv
test
jmp
ror
jnp
xchg
add
into
mov
dec
call
scas
jb
mov
fisub
mov
push
movs
jge
push
inc
mov
xchg
cmc
or
mov
cdq
xchg
mul
fbstp
push
cmp
mov
and
add
and
pop
aam
loopne
push
shr
mov
ror
dec
adc
xor
add
add
push
push
push
pop
mov
daa
cs
loopne
outs
and
in
inc
mul
inc
push
push
in
pushf
xor
jle
add
xchg
mov
call
sbb
xchg
mov
cwde
retf
cmp
outs
outs
stc
int3
call
popf
out
in
push
repz
sub
enter
lds
aas
mov
add
leave
bound
pop
push
(bad)
shr
jno
loope
mov
fmulp
cmc
pusha
(bad)
sbb
jg
mov
add
mov
add
js
test
jns
mov
dec
idiv
inc
pop
mov
mov
stc
push
(bad)
and
aam
dec
xchg
in
cmp
ins
mov
out
add
add
ja
stos
push
leave
pop
xchg
imul
std
adc
cdq
ret
outs
dec
cmps
fidiv
retf
stos
xlat
cs
add
fidivr
(bad)
fadd
lahf
dec
mov
sbb
lods
in
xchg
fmul
inc
pushf
rdpmc
mov
fstp
push
pop
repz
cmp
add
xchg
ret
push
test
push
movs
mov
fld
pop
pop
lods
cmps
out
cmp
xor
and
add
(bad)
mov
mov
cwde
imul
(bad)
mov
push
mov
xor
(bad)
(bad)
(bad)
and
mov
and
and
popa
cs
popa
in
inc
add
add
add
sahf
pop
lea
mov
xchg
out
test
fs
push
jg
sbb
xor
push
jb
fs
not
or
xor
call
cmp
cli
imul
fidiv
mov
sbb
stc
jmp
xor
add
mov
clc
cmps
sub
adc
add
lds
lahf
cmc
ds
inc
sar
out
xor
mov
fcomip
xchg
imul
push
fsubr
lods
sbb
mov
mov
adc
loope
imul
xchg
sbb
sub
dec
icebp
cld
xor
mov
fs
xchg
mov
in
lahf
pop
sub
mov
jmp
mov
in
scas
test
adc
or
mov
adc
cmp
dec
aaa
jb
mov
mov
(bad)
or
nop
or
cmp
jmp
mov
data16
push
xor
pop
adc
mov
xor
ja
jp
ret
daa
add
add
data16
lods
sbb
popf
xlat
or
(bad)
aam
inc
adc
and
pop
pushf
mov
sbb
loopne
cmp
popa
sub
push
shl
mov
jle
or
mov
pop
dec
rcl
xchg
dec
call
adc
rol
add
adc
jmp
add
mov
or
cmp
xchg
and
lock
movs
and
or
mov
push
jecxz
ins
mov
jne
stos
pop
bound
sti
aas
jmp
call
sbb
mov
sbb
xor
fbstp
pop
icebp
in
movs
leave
ror
mov
add
popf
arpl
inc
push
call
pop
adc
sar
sub
sbb
popf
pop
add
rcr
push
pop
xor
leave
xchg
jle
inc
sbb
mov
cld
into
fdivr
das
inc
mov
jecxz
lods
fild
pop
fst
add
(bad)
shl
test
pop
push
movs
and
add
cmp
xlat
ins
jne
adc
jge
je
pusha
aam
in
retf
aaa
in
cmp
sub
test
stos
pop
test
adc
mov
mov
jmp
jnp
mov
mov
sbb
adc
xchg
push
cmp
add
ds
mov
cmc
ins
pop
outs
inc
add
stc
inc
std
pop
cmps
ss
inc
cmp
sbb
or
jno
iret
jno
inc
push
sub
mov
enter
push
jecxz
pop
push
sar
and
out
push
push
mov
or
jge
retf
jnp
jns
or
xor
icebp
push
inc
in
add
mov
adc
xor
dec
fadd
add
adc
repnz
shr
sub
mov
jbe
cmc
out
adc
(bad)
jmp
rol
xor
push
mov
push
mov
dec
pop
jecxz
cmp
(bad)
mov
loop
dec
mov
push
imul
pop
jl
jb
out
popa
cmp
add
or
nop
add
add
mov
or
repz
pop
(bad)
cmp
(bad)
xlat
jb
sbb
add
mov
pop
mov
dec
lods
outs
push
icebp
sub
arpl
aad
cld
or
call
pop
and
stc
mov
ds
out
pop
and
leave
aam
pop
inc
fnsave
add
add
mov
fcomp
cmp
jmp
cmp
adc
mov
das
sbb
dec
cmps
out
xchg
imul
loopne
mov
int3
sub
stos
shl
stos
xchg
stos
dec
or
push
mov
push
sub
popa
call
add
add
cmc
in
lods
jmp
or
std
(bad)
and
lods
cmp
fadd
mov
ja
jae
inc
pop
les
dec
sub
repnz
and
mulps
retf
add
jmp
or
xchg
lahf
jmp
bound
cmp
push
inc
mov
or
add
dec
sub
mov
sbb
sti
mov
int3
jle
test
mov
ins
outs
out
loopne
pop
inc
xor
ds
out
mov
cmc
test
and
push
push
push
mov
mov
in
mov
pop
mov
mov
jmp
es
retf
int3
out
aam
mov
add
add
cld
inc
popf
stos
adc
push
dec
pop
repz
xchg
sbb
sbb
mov
adc
out
sub
shl
jmp
dec
loop
cmp
cmp
jecxz
sub
inc
mov
cmc
sbb
and
fcomip
in
lock
scas
retf
imul
jne
mov
mov
add
add
adc
test
sbb
cmp
mov
icebp
sbb
movs
mov
push
dec
mov
inc
fistp
imul
pop
and
sti
test
sbb
pop
lea
mov
ins
inc
fistp
xor
rcr
push
add
add
xor
inc
popf
xchg
adc
mov
mov
(bad)
jo
jbe
in
mov
xor
cdq
mov
in
out
retf
sub
mov
mov
xor
pushf
or
jbe
in
(bad)
pop
cmp
mov
add
cmp
mov
cmp
pop
clc
jmp
add
(bad)
pop
inc
adc
mov
inc
xor
push
push
sub
sbb
(bad)
sbb
mov
push
push
sar
jp
mov
and
mov
stos
sbb
test
pop
cs
fidiv
or
ins
jle
mov
xor
out
in
jmp
rcr
loop
mov
add
add
loopne
popa
cmp
data16
test
fs
pop
je
xchg
pop
jns
xor
and
hlt
sub
push
pusha
push
retf
fcom
fld
push
xor
dec
movs
(bad)
add
cmps
nop
dec
xchg
adc
add
popa
pop
dec
inc
(bad)
cli
mov
adc
mov
add
out
call
loope
vaddsd
adc
lock
fisubr
or
xchg
xchg
dec
enter
movs
sub
mov
mov
dec
jnp
pop
cmc
popf
dec
call
add
movs
or
(bad)
add
call
into
jbe
mov
add
add
cdq
cld
push
(bad)
scas
sbb
push
or
clc
shl
mov
push
or
pop
aad
inc
sub
or
ds
jbe
jle
bound
popf
or
div
cli
xor
mov
dec
or
jg
add
mov
push
push
retf
pop
sub
movs
out
mov
cdq
add
add
push
or
jmp
and
sub
ins
sahf
push
gs
pop
cld
sbb
xchg
enter
jl
int
mov
cmp
sbb
das
cmp
cmp
or
mov
xchg
mov
fadd
lods
xor
fadd
jns
cmp
sub
dec
sbb
add
cdq
adc
sub
jge
xor
add
add
push
cmp
iret
jnp
mov
call
sbb
jnp
inc
je
dec
cmp
mov
or
adc
fimul
lods
jge
out
inc
jns
test
out
inc
enter
lods
stc
jle
cmp
pop
enter
mov
pcmpgtb
lods
cmc
loopne
cmp
add
fs
int3
sbb
adc
retf
xchg
nop
xlat
or
add
jg
and
xchg
inc
pop
test
sbb
jae
sub
out
loope
mov
data16
(bad)
fisub
ret
test
mov
int3
hlt
mov
dec
push
xor
mov
adc
jne
add
add
repz
dec
or
or
mov
mov
push
lods
mov
and
shl
or
add
dec
fistp
mov
cmp
rcl
xor
sahf
cdq
cmp
cmp
mov
add
stos
std
nop
sub
js
outs
mov
pop
sbb
and
pop
xor
adc
sahf
add
inc
lods
retf
inc
int
mov
push
sbb
mov
pop
and
or
push
push
jno
cmps
shl
retf
in
sub
xlat
inc
mov
frstor
xchg
fcom
push
test
mov
xor
fs
repnz
add
aad
push
test
dec
sbb
dec
mov
ror
pop
mov
add
cmp
out
sub
xlat
cmp
push
fdiv
sar
jo
mov
inc
cmp
mov
stc
mov
mov
idiv
jb
mov
xor
int
add
cmp
xchg
or
pop
fistp
icebp
jne
jl
adc
pmaxub
xchg
fst
jns
mov
mov
xchg
xchg
mov
mov
cs
out
mov
mov
mov
xor
retf
add
ret
call
jo
and
cwde
mov
out
add
add
adc
in
mov
movs
xor
lds
ret
and
rcr
dec
or
push
scas
xor
repnz
fwait
push
inc
mov
mov
and
cmp
out
js
dec
sbb
repz
aad
push
cwde
in
xchg
cmp
push
out
pop
hlt
stos
adc
in
jecxz
inc
rol
shl
add
add
pop
xor
popa
popf
or
mov
ret
add
pusha
popf
add
test
lods
cmp
sahf
sub
addr16
cmp
jl
mov
daa
xor
les
and
and
jno
jecxz
mov
mov
fwait
adc
sbb
add
push
rcr
inc
add
pop
int
outs
gs
xchg
push
jb
mov
addr16
push
lods
jp
cmp
jecxz
mov
jp
xor
dec
arpl
out
mov
int
stc
inc
in
add
fisubr
aas
xchg
clc
outs
arpl
mov
repnz
inc
xchg
fistp
add
add
xor
out
xchg
int3
mov
mov
lods
mov
adc
sub
jge
adc
add
jmp
add
xchg
clc
xchg
sub
sub
and
dec
and
sbb
adc
jg
adc
xchg
mov
sbb
dec
jb
mov
hlt
mov
push
and
dec
scas
call
jl
add
add
and
xor
xchg
adc
sub
push
enter
jge
imul
push
fisubr
(bad)
popf
dec
and
out
pop
(bad)
sbb
clc
inc
inc
in
stc
sub
dec
add
xchg
mul
test
mov
in
mov
inc
xchg
inc
and
int
out
div
mov
stc
les
add
push
xchg
(bad)
push
jns
shl
jmp
push
out
push
addr16
mul
jnp
mov
pop
sbb
es
fdiv
jnp
adc
ret
repz
mov
jge
ss
sub
rsm
adc
out
(bad)
call
push
xchg
or
imul
adc
movs
jae
ficom
pop
dec
ja
outs
(bad)
xor
add
push
fucomi
mov
add
mov
cwde
out
pop
dec
xchg
arpl
cmps
jo
int
and
push
je
test
loop
xor
fwait
push
or
bound
cmp
mov
xor
mov
pop
xor
sub
es
and
or
and
add
add
jmp
cmps
loopne
jl
outs
mov
jg
add
repnz
cmp
and
in
rol
add
call
imul
test
push
and
mov
jb
mov
iret
jnp
aas
popf
mov
cmp
jle
test
nop
xor
add
in
arpl
push
dec
jmp
jns
in
ss
iret
push
test
fsub
daa
fld
sbb
stos
xchg
fcomp
popa
add
data16
adc
adc
sbb
mov
push
dec
lock
popf
cmps
jbe
adc
ss
imul
cmp
inc
(bad)
xchg
popf
and
jo
(bad)
or
cld
push
(bad)
adc
sub
test
xlat
and
nop
dec
mov
mov
adc
inc
jecxz
ficom
cmps
(bad)
xor
sub
fisubr
stos
mov
xchg
pop
lds
mov
add
jno
(bad)
out
push
and
lods
pop
repz
clc
and
add
add
pop
push
xor
cmc
lods
in
lods
addr16
xchg
movs
into
jnp
cdq
cmp
push
dec
rcr
stos
or
mov
into
mov
sti
cdq
in
inc
pop
cmp
scas
aad
cmp
into
sbb
test
sub
inc
outs
cmp
or
adc
mov
mov
js
add
mov
mov
call
push
ret
scas
fmul
in
loop
retf
mov
jp
gs
gs
cmp
das
cmp
dec
inc
pushf
xchg
lea
dec
in
das
xchg
jb
jno
addr16
popa
or
repnz
cmps
(bad)
int
mov
inc
pop
xor
aas
divps
in
in
mov
sar
jmp
add
add
aas
pop
mov
xor
fistp
jae
or
rcr
mov
adc
popa
add
xchg
ss
jnp
jno
(bad)
repz
call
mov
stos
add
call
sub
ror
popa
int
shl
(bad)
in
lods
out
inc
mov
pop
add
pushf
les
nop
jno
add
add
mov
dec
mov
xor
adc
xor
dec
sbb
pusha
imul
mov
adc
das
cmps
sbb
jl
or
pop
sbb
aad
xor
pop
test
shl
jns
cli
sub
cmp
pop
jae
outs
sbb
fimul
fimul
sub
sbb
sahf
outs
cwde
dec
(bad)
popf
outs
and
stos
inc
xchg
sti
std
out
jg
es
mov
jg
dec
outs
call
pop
fwait
and
sub
xor
mov
daa
outs
inc
jne
cmps
push
shl
je
imul
loopne
cmp
sbb
add
jl
cwde
adc
xchg
loope
mov
std
ficomp
add
add
add
int
mov
pop
inc
repnz
mov
jb
hlt
jmp
bound
loop
js
hlt
fistp
push
lods
cmps
xor
ss
mov
add
cmp
pop
fiadd
fstp
lahf
add
and
retf
(bad)
enter
add
popf
jne
push
rol
add
ja
mov
int3
in
test
pop
lock
out
retf
inc
xor
iret
xor
clc
ins
mov
fwait
rcl
lock
nop
cmc
mov
loope
cmp
pop
pop
sti
sbb
cmp
clc
push
clc
push
aas
pop
push
cmp
(bad)
xor
scas
inc
popf
test
lahf
add
add
jnp
imul
push
sti
inc
cli
cmc
add
xchg
into
mov
das
sub
pusha
iret
pop
and
sbb
ja
sti
jns
int3
mov
popa
mov
aam
dec
xchg
and
imul
inc
adc
and
jnp
clc
(bad)
push
outs
fiadd
add
out
mov
lahf
mov
arpl
mov
cmp
mov
imul
add
rcr
popf
dec
xchg
test
sub
lahf
inc
nop
cdq
cmp
cdq
mov
inc
leave
popf
cmp
outs
ja
jmp
dec
retf
sub
add
sbb
mov
repnz
dec
lods
cmp
add
add
and
stc
pop
in
leave
(bad)
mov
lahf
dec
into
stos
sbb
ret
lods
adc
idiv
sbb
xor
push
aam
pop
add
push
push
sbb
sahf
adc
xor
xor
lods
cmps
daa
(bad)
into
inc
popf
sahf
xchg
and
bound
enter
and
daa
jbe
jb
add
jle
sbb
push
cmp
popa
xor
sbb
xor
mov
out
mov
imul
cmp
in
push
iret
xchg
mov
push
in
rol
ins
pop
sub
cwde
add
inc
sub
ror
push
(bad)
cli
std
mov
mov
icebp
(bad)
cld
adc
fadd
add
push
test
adc
sub
test
repnz
mov
jle
popf
mov
and
pop
xchg
int
std
add
jbe
inc
xchg
or
mov
pop
pop
mov
sbb
xor
scas
jno
jo
cmp
mov
pop
pop
sbb
loop
xor
shl
cli
(bad)
fimul
clc
call
jbe
mov
jb
out
pop
jbe
mov
retf
test
rol
in
iret
sahf
scas
(bad)
mov
adc
sbb
jmp
fbld
pop
out
jno
push
mov
jns
dec
ret
arpl
cmps
popa
push
mov
and
dec
loop
lea
jge
mov
jbe
sahf
jns
retf
icebp
retf
pusha
jp
mov
add
adc
adc
imul
shl
jo
and
pop
std
f2xm1
fsub
lods
mov
push
mov
sbb
icebp
cmp
or
sub
add
cmc
cmps
cmc
mov
es
rcr
dec
arpl
mov
sbb
add
add
es
(bad)
jbe
in
and
dec
or
fistp
out
sub
adc
add
mov
and
test
aad
stos
push
dec
lahf
pop
es
es
xchg
sub
out
and
xor
jne
xor
mov
test
and
sbb
leave
or
adc
add
add
movs
aam
cmp
ficomp
repz
data16
dec
out
jge
pop
icebp
mov
adc
nop
sub
adc
add
rcr
jbe
jmp
int3
sub
xchg
push
test
into
fld
lods
or
xor
xchg
add
shl
mov
mov
call
add
je
enter
xchg
pop
adc
data16
jp
pop
cdq
iret
cmp
dec
jno
mov
lock
sahf
test
stc
add
pusha
inc
das
outs
cmc
outs
ret
outs
push
push
retf
xchg
mov
shl
in
loop
pop
stos
xor
mov
aaa
inc
ret
sahf
xchg
and
add
add
jmp
(bad)
sahf
les
aam
add
(bad)
jmp
(bad)
aaa
int
and
sub
leave
jle
femms
ficomp
inc
out
mov
sbb
mov
addr16
adc
dec
push
mov
mov
pop
dec
mov
mov
or
jmp
mov
mov
add
add
dec
push
mov
sets
test
xor
pusha
out
icebp
scas
add
sbb
mov
out
or
out
std
add
nop
pusha
aaa
xchg
lea
popa
and
inc
or
or
popf
jbe
out
sbb
adc
mov
cmp
pushf
shr
call
pop
dec
add
add
jge
mov
mov
inc
sbb
mov
imul
sbb
xor
mov
bound
add
adc
dec
mov
lods
fild
add
and
(bad)
shl
xchg
cmc
dec
xchg
scas
push
dec
(bad)
shl
je
bound
jmp
inc
jle
xor
add
sbb
outs
add
add
scas
mov
cmp
sub
xlat
push
inc
lahf
dec
inc
pop
adc
or
add
dec
or
xor
pop
pop
dec
mov
mov
xchg
inc
idiv
int
xchg
sbb
movs
clc
adc
lock
inc
add
inc
xlat
sar
lea
jnp
mov
add
in
jg
lods
sub
in
fdivr
cmps
or
out
mov
and
scas
(bad)
xlat
unpcklps
scas
scas
retf
push
cdq
ja
sti
lods
arpl
out
sar
lds
jmp
scas
mov
loopne
int3
in
imul
mov
iret
xchg
stos
std
and
pop
cs
cmp
sbb
out
add
add
add
repz
sti
adc
outs
lods
loopne
fdivr
pop
fiadd
sub
lea
xchg
pop
cmp
inc
mov
cs
jmp
stos
inc
dec
cmp
sub
jne
adc
dec
push
push
out
inc
lahf
in
pop
push
rcr
sbb
stos
popf
sub
xor
add
sbb
push
add
xlat
add
in
cmc
idiv
mov
dec
das
pop
inc
mov
add
add
aam
pop
push
gs
aas
rol
ret
jp
xor
dec
cmp
ret
dec
call
or
lea
mov
push
cli
dec
xlat
mov
mov
xchg
dec
add
add
xor
jp
enter
arpl
cmovo
fist
loope
sub
or
mov
ins
addr16
inc
(bad)
cmp
fstp
inc
in
or
not
push
out
and
xor
push
retf
mov
mov
push
fsubr
dec
pop
retf
xor
dec
sar
jmp
cmp
add
add
outs
sbb
mov
jo
cmp
data16
sub
mov
sti
xchg
add
cld
pop
cwde
in
(bad)
fidivr
push
into
(bad)
jmp
shr
xor
hlt
pusha
pop
cli
mov
sub
sub
jne
sub
loop
mov
push
xchg
xchg
dec
cmp
leave
sbb
test
(bad)
(bad)
js
push
push
out
xor
pushf
fnstcw
cmp
mov
not
dec
rcl
cmp
fwait
ror
xchg
sbb
xor
jl
jns
xor
adc
push
popf
pop
adc
adc
add
push
cmc
sub
mov
dec
aam
pusha
fnstcw
add
inc
cli
sar
movs
jno
(bad)
cld
jno
loopne
and
pop
xor
sbb
adc
jmp
adc
add
retf
test
pop
sub
pop
mov
(bad)
out
cwde
inc
jg
push
loope
and
out
into
sub
(bad)
lds
movs
pop
cmc
add
test
jge
fadd
add
mov
ins
xor
(bad)
fld
das
mov
cmp
mov
xor
inc
and
(bad)
out
adc
mov
ja
mov
or
movs
mov
or
shl
adc
and
leave
lea
(bad)
repz
movs
aam
das
jbe
int3
lods
push
inc
xor
mov
les
add
push
or
cmps
dec
shl
add
sbb
sub
xchg
and
sub
jge
ret
inc
or
xchg
lock
or
push
mov
inc
cmp
mov
setp
or
xor
mov
sub
add
dec
fnstenv
adc
adc
(bad)
sub
add
add
jnp
leavew
ret
cli
cli
int
leave
sbb
add
mov
retf
fisttp
pop
lods
out
add
add
xchg
dec
mov
add
test
push
popf
and
jge
dec
retf
xchg
mov
mov
dec
jmp
lea
(bad)
mov
add
fwait
inc
retf
(bad)
pop
lea
int
jnp
add
das
shl
scas
sub
(bad)
ret
mov
cmp
pop
pop
mov
push
xchg
dec
jb
inc
mov
jmp
rcr
pop
(bad)
lods
push
jmp
mov
fs
jmp
out
cmp
mov
stos
push
ds
fild
add
jbe
mov
daa
pop
xadd
sbb
scas
jle
cmp
ds
mov
pop
(bad)
and
pop
push
push
cmp
cmp
add
mov
div
stos
into
inc
sar
pop
int3
mulps
sub
xor
stos
inc
daa
mov
pop
aad
pop
and
dec
mov
add
add
or
retf
mov
fstp
ja
mov
aas
adc
pop
sub
mov
or
leave
xchg
mov
push
jle
xchg
inc
push
jbe
push
cld
jmp
repnz
(bad)
mov
xor
mov
fdivr
jnp
outs
adc
xor
clc
into
sub
xchg
mov
sti
mov
add
lds
inc
(bad)
lock
lods
inc
lods
pop
inc
sub
pop
data16
mov
push
xor
lods
aad
test
loopne
and
jns
cmp
daa
jl
mov
push
in
(bad)
movs
(bad)
pop
je
pop
mov
es
pop
mov
cmps
(bad)
push
aad
dec
or
or
push
es
arpl
jae
stos
add
add
arpl
pop
or
cmp
test
dec
mov
jne
sub
inc
loop
ja
push
out
pop
xchg
dec
pop
pop
xor
xchg
fdivr
pop
enter
sbb
add
jmp
inc
popa
pop
pop
push
adc
out
loopne
rcr
stc
outs
adc
lock
xor
mov
(bad)
in
int
test
add
push
int3
in
inc
xchg
mov
shr
das
aad
pop
or
or
mov
out
mov
mov
fadd
lahf
adc
or
scas
pop
jmp
into
(bad)
imul
mov
lods
into
outs
lock
in
sub
jg
mov
push
inc
jns
dec
pop
popa
push
mov
in
in
movs
gs
add
xor
in
adc
icebp
shr
mov
shr
lds
jg
ftst
inc
mov
jo
retf
adc
mov
adc
mov
ror
cld
mov
mov
inc
test
mov
jno
sbb
fisubr
popa
mov
jecxz
push
add
fld
sub
and
test
fs
je
shr
adc
mov
xlat
fwait
aad
add
add
(bad)
push
push
les
xor
xchg
push
lods
ret
imul
adc
inc
cmp
dec
mov
out
jmp
jmp
cli
dec
retf
add
dec
aas
jne
mov
cmp
push
jnp
inc
test
cwde
inc
xchg
sbb
cmp
add
int3
mov
pop
es
pop
inc
and
and
sbb
dec
retf
clc
xor
sbb
lea
fwait
jbe
xor
out
aaa
jl
scas
jno
sub
add
add
mov
mov
(bad)
fstp
inc
fisttp
mov
jnp
ss
in
adc
and
sbb
push
cmp
cdq
dec
outs
std
sub
fwait
sbb
mov
jg
fwait
push
jmp
add
mov
test
idiv
aam
sbb
sahf
cmp
rcl
pop
loopne
loop
xchg
ret
add
add
mov
fimul
push
(bad)
mov
jnp
fldcw
(bad)
loopne
mov
and
ins
sub
popa
push
jmp
pop
xchg
push
loope
test
push
jp
(bad)
xlat
mov
jp
xchg
mov
xor
xchg
neg
ds
loope
xlat
jo
mov
cdq
popa
cdq
dec
xchg
jl
adc
test
add
in
xchg
mov
(bad)
imul
pop
out
das
cwde
out
outs
stos
loope
ficomp
fistp
and
retf
adc
mov
fdiv
mov
(bad)
push
movs
cmp
jge
into
(bad)
adc
mov
add
mov
cmp
call
and
jns
jno
add
sbb
aad
sub
sar
push
dec
std
sbb
es
sub
or
pusha
cmp
pop
jp
pop
and
popf
out
or
xor
mov
sub
sub
xchg
ss
lods
aad
and
or
cwde
(bad)
loope
les
push
xor
out
clc
int
inc
fstp
mov
lds
add
and
pcmpgtb
and
int3
fs
or
icebp
add
pushf
scas
and
das
mov
sub
jg
out
xchg
cli
cs
add
inc
mov
sahf
fild
mov
mov
xchg
jle
jmp
adc
push
inc
sub
mov
clc
jne
add
xor
sar
inc
aaa
push
xchg
scas
arpl
dec
cli
xor
test
imul
inc
fild
xchg
int
sahf
cmps
in
not
mov
int3
ins
jmp
sub
cmp
inc
jmp
mov
jl
jb
jae
jae
(bad)
jno
sbb
mov
dec
push
mov
(bad)
imul
mov
and
add
test
xor
fisubr
inc
push
push
hlt
int3
out
adc
mov
mov
(bad)
push
fnstcw
leave
div
pop
sbb
push
ds
lahf
popa
mov
jecxz
cwde
xchg
in
das
mov
rcl
xchg
call
ret
loopne
shl
ret
call
inc
int3
popa
dec
fimul
cmp
xchg
adc
add
add
jmp
or
ret
retf
mov
and
das
inc
bound
or
add
or
adc
movs
pop
cmp
mov
add
mov
repz
repnz
repz
ss
dec
fisub
shl
xor
and
mov
xchg
test
cmp
in
inc
add
add
xlat
das
es
les
adc
(bad)
push
(bad)
adc
in
js
lock
xchg
xor
ins
mov
imul
fcomp
cmp
mov
xchg
aas
ss
xor
test
stc
test
and
rcr
sbb
mov
ror
add
add
(bad)
mov
repz
mov
push
dec
fs
mov
or
dec
movs
add
jmp
adc
pop
ins
ins
or
and
js
inc
mov
sti
rol
jmp
jne
pusha
icebp
out
sti
push
mov
inc
or
and
lods
or
add
jns
adc
retf
mov
jecxz
out
jl
dec
pop
mov
cld
std
je
mov
mov
jmp
test
fild
bound
lea
(bad)
fcomp
(bad)
fnstsw
int
movs
jnp
das
xchg
outs
add
mov
pop
sbb
es
test
test
out
jne
js
(bad)
sar
aaa
in
add
jl
lods
xchg
xchg
mov
inc
sbb
lods
arpl
call
sub
push
(bad)
or
cwde
jl
jp
ins
sub
(bad)
push
xchg
out
sar
lock
outs
outs
sbb
call
add
outs
cli
dec
mov
mov
jl
add
fsub
leave
les
mov
inc
dec
ret
inc
shl
sbb
and
mov
in
xchg
sar
test
add
cmp
pop
jae
adc
fwait
test
inc
es
xor
jecxz
loope
push
idiv
pop
and
xchg
xchg
stc
movs
mov
lds
add
add
xor
cwde
mov
jns
sub
clc
cli
pop
or
imul
adc
loope
xor
inc
mov
mov
neg
mov
les
das
repnz
out
movs
jle
mov
sbb
dec
mov
xchg
mov
cmps
and
dec
cdq
and
push
mov
test
dec
out
push
lahf
test
jno
add
push
dec
jo
ficom
sbb
add
je
xchg
or
xor
mov
retf
rcl
pop
mov
push
push
jb
dec
adc
jb
shl
clc
push
shl
jle
sbb
jns
cmp
sti
test
dec
mov
std
ja
mov
(bad)
stos
in
add
add
add
je
into
push
sbb
xchg
add
cwde
ss
hlt
(bad)
retf
adc
psubusb
mov
mov
sub
mov
fwait
mov
push
push
or
sbb
mov
sub
pop
popa
add
(bad)
std
addr16
es
xor
jne
cs
int
jb
jno
ins
bswap
popa
repz
ins
add
add
retf
and
or
sbb
add
push
adc
xchg
js
scas
(bad)
scas
int
les
retf
invd
or
imul
dec
sar
push
push
mov
fdivr
scas
xor
arpl
pop
push
popa
fcmovnu
retf
in
inc
jmp
sub
xchg
sub
add
clc
pop
ret
rol
test
test
xlat
mov
mov
movs
ficom
imul
fnstenv
push
sub
xor
sbb
xlat
hlt
jmp
jl
cmp
mov
leave
and
and
or
hlt
int
lds
loopne
in
(bad)
fstp
cmp
loop
adc
(bad)
dec
add
add
dec
add
and
mov
sbb
sub
xchg
loope
lods
xchg
xchg
add
addr16
push
inc
xor
xor
mov
adc
ins
js
mov
int
jl
std
(bad)
pop
jns
jmp
stos
ins
mov
lahf
jns
adc
mov
es
test
sbb
mov
mov
pop
xchg
add
fimul
add
xlat
and
cmp
xchg
lds
add
jmp
cld
jge
gs
jp
cwde
dec
stos
pop
repz
mov
jne
or
pusha
jge
call
or
loopne
cs
gs
dec
dec
iret
mov
fwait
cmps
in
scas
sub
fldcw
add
add
add
fbstp
mov
mov
or
test
call
jnp
ds
(bad)
and
es
mov
pop
pop
mov
mov
xor
adc
shl
sbb
mov
dec
jno
arpl
jo
scas
fadd
leave
out
push
fnstcw
xor
add
dec
sbb
fisttp
in
and
mov
jb
arpl
scas
inc
loopne
std
(bad)
test
int
les
push
retf
xor
bound
repnz
icebp
pop
jg
fist
loope
pop
cmp
mov
stos
inc
test
pop
scas
fisub
xor
pop
inc
jp
aam
xchg
pextrw
push
add
add
xor
stc
lds
ins
sbb
cmps
sbb
(bad)
cli
jg
arpl
adc
fnsave
loope
adc
aas
fnstenv
push
mov
mov
sbb
fmulp
test
cmps
mov
leave
adc
cdq
lods
push
mov
leave
(bad)
fnstsw
pop
cmp
sub
add
cmp
adc
push
cmp
shr
xlat
push
aad
fwait
mov
or
jmp
add
dec
push
cdq
mov
popa
fdivr
out
or
fistp
mov
xchg
jno
mov
in
stc
xchg
loop
fistp
aaa
in
or
add
outs
lea
add
cmp
mov
xchg
push
loop
add
loopne
cmp
scas
cld
sub
jbe
mov
mov
aad
pop
pop
and
or
outs
in
loopne
gs
popf
out
sub
into
sub
or
lods
sbb
fucomi
cs
xchg
popa
pop
out
mov
lahf
mov
add
add
repz
movs
jb
xchg
(bad)
int
ret
pop
add
jbe
sub
mov
lods
xor
popa
cmps
enter
push
pop
pop
jge
inc
movs
dec
mov
out
sub
call
add
imul
mov
gs
adc
pushf
emms
lahf
push
add
dec
push
fdivr
aam
pop
stos
cld
or
add
pop
mov
mov
enter
(bad)
adc
std
(bad)
mov
push
sbb
in
ret
lfs
test
mul
into
jl
test
movs
ins
cwde
into
pop
jl
lea
push
mov
dec
mov
jae
fs
xor
adc
push
into
jmp
dec
std
neg
bound
mov
jp
xchg
cmc
inc
mov
add
arpl
adc
out
mov
mov
stos
sahf
cmp
or
mov
icebp
clc
loop
pop
sbb
jecxz
pop
xor
das
xchg
scas
lds
js
cmp
jmp
jbe
pop
dec
mov
retf
inc
jle
or
rcl
push
clc
jecxz
fs
loop
ds
hlt
sar
mov
add
add
pop
or
aaa
adc
mov
dec
xchg
mov
sub
mov
sub
arpl
aas
into
mov
sub
push
pop
xchg
sbb
ffreep
cwde
mov
jns
ret
(bad)
jecxz
aad
aad
out
add
mov
jbe
mov
jo
test
xor
dec
adc
outs
add
add
cld
ret
jae
sub
cmp
fwait
inc
sbb
or
dec
xchg
cli
push
dec
scas
je
jle
dec
dec
xchg
in
xchg
in
xor
pop
sub
adc
les
sub
cmp
mov
call
das
cmps
mov
push
(bad)
rcr
sahf
cmp
movs
jge
or
pop
or
out
xchg
lock
(bad)
push
mov
mov
cwde
adc
mov
test
stos
inc
fisttp
lods
push
mov
push
mov
adc
jle
inc
addr16
lods
push
into
loopne
fld
jecxz
aam
sub
leave
pop
add
data16
jo
mov
jb
inc
add
add
or
sbb
or
push
or
add
inc
repz
inc
inc
imul
jo
in
scas
imul
mov
into
pop
mov
xor
fisttp
and
in
cmps
and
inc
mov
popf
shl
in
or
(bad)
aaa
add
add
xor
iret
daa
inc
sbb
call
push
mov
fucom
pop
ss
sub
cmps
lds
popa
jo
out
pop
push
cmp
push
into
fstp
sub
mov
cmp
fwait
jl
xchg
cmps
rol
add
adc
repz
iret
xor
jg
inc
add
cmp
add
xchg
test
(bad)
test
pop
xchg
js
cli
(bad)
bound
outs
or
xor
mov
aaa
dec
fs
sbb
mov
push
add
std
xchg
mov
pop
jmp
cwde
fs
add
add
stos
sub
pop
mov
or
mov
add
pop
(bad)
ss
add
jae
cdq
mov
jmp
or
mov
pop
ins
lods
call
out
es
jle
pop
rcr
pop
lds
out
rcl
and
jp
jp
cmc
out
cld
mov
or
outs
shr
ficomp
sahf
cs
and
hlt
test
add
push
test
pop
cwde
es
pop
sbb
clc
stc
iret
and
ins
scas
std
ss
fld
fmul
mov
or
aam
or
pop
xchg
xchg
retf
loopne
lods
movs
sub
iret
inc
cmp
mov
les
pusha
into
sbb
dec
jne
push
fiadd
xlat
sbb
inc
pop
mov
lods
adc
inc
add
add
inc
sub
aas
push
sub
aam
xor
add
adc
push
jnp
fisubr
int
xchg
sahf
sub
pop
xor
test
adc
and
mov
outs
mov
push
rcl
pop
pop
sub
retf
in
add
clc
fdivr
ins
leave
push
add
add
sbb
mov
pop
fwait
sub
jle
cmp
cmp
pop
dec
ins
sti
clc
push
push
cmp
jle
sub
jle
cwde
call
push
jmp
cmp
ds
outs
or
and
lods
loope
cld
stos
popf
and
pop
mov
ret
sbb
pushf
mov
add
add
xor
mov
jno
and
enter
dec
ss
repnz
push
mov
cmovnp
xchg
das
inc
leave
cmp
jp
and
mov
enter
jl
leave
xor
iret
cmp
and
and
jb
pop
xchg
imul
or
push
jge
lods
or
in
lea
jnp
(bad)
pop
shl
sbb
dec
xchg
add
add
stos
movs
inc
inc
loop
cld
pop
lds
add
xor
adc
push
arpl
imul
hlt
or
or
shr
(bad)
or
xor
rcl
adc
aad
pusha
arpl
cmp
aas
xor
cmps
int3
push
or
xor
iret
mov
in
sbb
add
jns
imul
retf
jne
enter
test
push
mov
enter
cmp
not
and
cmps
(bad)
xor
cmp
adc
push
repz
and
adc
lods
or
jno
loope
push
or
rol
aas
cmp
mov
mov
push
add
add
rcl
add
mov
pop
add
add
lahf
nop
addr16
inc
icebp
pop
adc
neg
sbb
mov
jae
or
das
jnp
lods
jbe
push
retf
aas
int3
add
mov
adc
int3
mov
dec
ror
mov
sub
xor
sbb
stc
sub
push
cmovbe
fild
push
cmc
leave
add
add
lds
scas
rcl
div
into
das
mov
stc
inc
int3
iret
(bad)
push
and
xchg
fnstsw
fistp
dec
outs
(bad)
jl
ss
xchg
xchg
inc
adc
sub
push
call
push
mov
popa
add
adc
jnp
mov
fldcw
js
xchg
pop
push
fucom
sbb
cmc
add
cli
fbld
das
popa
test
dec
or
jno
pop
mov
or
add
ins
sub
data16
lea
jmp
dec
mov
sets
cs
mov
push
(bad)
mov
sub
std
(bad)
xchg
mov
add
retf
cmp
lods
(bad)
adc
test
inc
inc
(bad)
loope
dec
xchg
(bad)
push
ins
scas
inc
sub
xchg
out
xor
cli
mov
xor
pop
mov
dec
movs
xor
mov
dec
or
cmps
cmps
pop
push
cmps
xor
sub
mov
cmp
add
pushf
rcl
into
or
(bad)
add
retf
fcom
push
push
ins
inc
jne
stos
add
cmp
movs
or
mov
pop
arpl
cmp
pop
sahf
cmps
enter
or
icebp
stos
add
ror
add
mov
mov
jl
pop
mov
sub
sub
push
jns
inc
push
adc
pop
push
add
add
out
ud2
cmp
aad
retf
mov
test
jne
xchg
outs
repz
cdq
mov
pop
enter
xlat
outs
push
pop
xor
(bad)
aad
imul
or
or
rol
ins
popa
push
mov
jge
mov
fidivr
mov
mov
add
xchg
icebp
jmp
movs
mov
(bad)
jmp
push
std
sub
call
or
loopne
es
sbb
add
mov
cli
push
test
(bad)
loope
pop
jg
jmp
aaa
mov
mov
or
dec
lods
ss
cmp
inc
fdivr
add
nop
mov
dec
cs
and
ror
mov
pop
add
add
mov
xor
adc
sub
sahf
int3
adc
scas
jo
retf
aad
sbb
add
jl
stos
sub
repz
mov
popf
sbb
jmp
retf
test
mov
and
call
mov
ins
lds
ja
add
(bad)
xor
scas
jmp
inc
push
and
mov
mov
add
mov
sub
xchg
(bad)
in
push
mov
jns
dec
mov
bound
mov
mov
pushf
jnp
xor
mov
jne
pop
ins
test
inc
jecxz
pusha
xchg
(bad)
or
cmp
add
push
ins
xor
jp
cmp
into
pop
pusha
loope
dec
sbb
xchg
push
nop
jmp
cwde
lahf
jecxz
add
movs
mov
out
inc
jo
out
(bad)
enter
cmc
jnp
push
and
lock
in
add
rcr
scas
rcl
popa
jnp
repnz
outs
mov
ja
ret
xchg
sbb
cmps
ds
xor
gs
dec
cmp
add
lds
leave
test
popf
mov
retf
enter
add
add
mov
jle
cdq
cmp
dec
add
jecxz
push
jmp
dec
(bad)
lods
add
mov
jecxz
push
int3
add
ret
cld
and
push
cmps
fnsave
call
cs
add
sbb
xor
jge
repz
xor
push
jl
out
(bad)
jmp
add
mov
out
sub
std
cli
div
movs
xor
xchg
pop
or
mov
mov
test
das
jnp
xor
cmp
and
xchg
mov
dec
push
bound
jmp
and
sbb
ss
or
cmp
add
mov
ja
fwait
sub
jno
pop
inc
sbb
add
xor
test
inc
push
jo
(bad)
fidivr
jb
pop
call
mov
push
test
mov
fisttp
xor
sub
and
adc
jmp
call
cdq
scas
loop
es
push
and
sar
cmp
cmc
dec
xor
jmp
ret
call
inc
add
xor
add
leave
shr
mov
je
mov
dec
push
cmc
sbb
mov
adc
jmp
adc
adc
add
aaa
mov
mov
addr16
sub
sub
dec
inc
mov
cdq
dec
lods
push
dec
jl
je
mov
popf
out
dec
mov
add
es
xor
mov
adc
dec
movs
das
xor
inc
xor
push
push
jbe
xchg
inc
inc
xor
mov
xor
cmp
arpl
iret
xchg
dec
nop
mov
jle
js
hlt
xor
mov
or
inc
cmps
call
in
and
xchg
test
add
dec
push
ret
inc
pop
cld
pusha
mov
out
mov
push
and
retf
adc
cmp
push
and
push
lock
inc
mov
pop
stos
and
lds
cmc
push
mov
cmps
cmps
inc
ds
mov
punpckhbw
enter
js
dec
or
or
lods
cmp
repz
add
add
clc
mov
inc
movs
sub
(bad)
lods
es
ds
add
cmp
mov
inc
sti
int3
dec
jns
stc
pop
xchg
push
icebp
ds
test
cmp
loopne
sub
shr
pop
lock
mov
push
sub
pop
add
xor
ss
bound
ret
out
les
pop
add
repnz
jp
pop
dec
add
popa
jp
rcl
lods
jmp
pusha
push
pushf
dec
cli
fs
mov
into
mov
sbb
std
dec
push
jnp
test
ret
or
or
or
shr
clc
jecxz
outs
fistp
jmp
cmp
bound
add
add
or
(bad)
outs
int
mov
cmp
sub
or
scas
movs
inc
push
mov
jb
jbe
dec
sbb
sub
(bad)
push
fist
adc
fstp
cmps
fbld
ret
add
inc
dec
push
push
addr16
adc
xchg
add
jmp
ins
pushf
cmps
aas
mov
inc
sbb
imul
mov
popf
dec
inc
arpl
pop
(bad)
fwait
adc
(bad)
xor
fwait
jns
mov
icebp
retf
(bad)
mov
dec
adc
into
jmp
pop
sub
hlt
add
pop
retf
mov
pop
cmp
clc
data16
aaa
lds
xchg
in
js
mov
or
stos
and
jb
idiv
add
shr
pop
loope
int3
ss
adc
rol
retf
clc
xchg
jae
sar
loop
xchg
mov
push
adc
sar
pushf
or
std
stos
cmova
push
cmc
dec
test
dec
lds
fs
inc
dec
lods
das
stos
aad
std
jp
call
jnp
add
cmc
scas
dec
int3
add
add
mov
jle
jmp
jp
dec
xchg
rcl
add
xchg
add
adc
add
mov
dec
sbb
test
pop
add
cdq
retf
pop
mov
push
ins
sbb
xor
dec
retf
mov
test
xor
nop
(bad)
stos
dec
stos
dec
ja
mov
mov
pop
xchg
and
xchg
cmps
pop
(bad)
clc
scas
or
fstp
aad
sub
dec
cmp
in
inc
cmp
cmp
adc
imul
test
sti
push
aam
ror
shl
mov
int3
mov
loop
jne
add
add
shr
pop
loope
bound
cmps
cmps
rcr
js
retf
dec
push
mov
xchg
into
test
inc
dec
cmp
dec
std
test
cwde
or
xor
sahf
aam
xor
pop
cdq
and
cdq
pop
dec
or
fs
jp
and
ss
sub
mov
add
add
adc
(bad)
jmp
arpl
js
out
xchg
jp
cli
adc
add
xchg
jp
or
inc
fwait
pusha
sub
repz
jle
and
es
aaa
cmc
xchg
cwde
xchg
mov
mov
mov
fstp
xchg
mov
cmp
cmp
add
add
ret
sub
outs
cmp
adc
pop
std
pop
je
adc
ror
ins
add
jge
add
push
lods
leave
mov
dec
jae
repnz
repnz
pop
ffreep
out
sbb
xor
mov
or
sbb
or
les
dec
rcr
(bad)
shl
inc
lods
lea
jae
mov
add
and
loop
call
sub
dec
mov
call
sbb
adc
iret
es
and
cmp
mov
xor
dec
xor
nop
pop
jno
jmp
sbb
pushf
test
and
cmp
pop
sub
movs
add
pop
inc
lods
xchg
ror
add
fcom
sub
int3
jb
push
cmp
jnp
mov
loopne
das
pushf
leave
out
nop
jns
pop
gs
imul
dec
sub
mov
add
pop
xchg
scas
xor
mov
shl
inc
adc
inc
or
lahf
sbb
loope
and
loope
mov
cmp
js
and
movs
cli
int3
std
aam
adc
std
sub
dec
xchg
mov
addr16
sbb
stos
mov
fldenv
aas
sbb
test
dec
fsubr
cmps
push
retf
es
push
cmps
pop
aam
in
sub
mov
jmp
pop
cmp
(bad)
mov
je
pop
neg
rcr
mov
add
add
(bad)
mov
adc
test
scas
leave
mov
stos
mov
sbb
mov
dec
xor
adc
fcomp
jae
(bad)
pop
fs
js
mov
aam
sbb
jae
(bad)
cli
adc
movs
add
inc
div
pop
xchg
das
and
mov
add
mov
rol
or
xchg
mov
xor
sub
fst
loope
dec
mov
sub
pushf
sbb
data16
icebp
(bad)
mov
icebp
sub
push
cs
or
leave
add
cs
and
xlat
jle
int3
mov
out
rcr
cs
addr16
and
clc
and
ret
sub
arpl
or
sbb
or
xor
std
(bad)
repz
mov
add
scas
add
clc
add
mov
adc
add
push
or
mov
and
push
and
sbb
lods
inc
jno
cmp
test
cs
clc
sub
pop
fist
in
out
es
xor
movs
xchg
aad
add
dec
or
jno
xor
inc
sbb
mov
ins
loope
fstp
jo
or
and
popf
fst
mov
shr
fadd
lds
pop
loope
or
(bad)
out
push
mov
pslld
mov
in
push
adc
or
mov
adc
and
add
mov
fist
repnz
push
mov
ret
cld
loope
retf
fdiv
or
xchg
adc
pop
lds
sub
mov
pop
or
out
adc
push
iret
std
popw
inc
push
cld
jecxz
pushf
sbb
repz
and
das
jae
mov
inc
(bad)
cli
add
jo
add
mov
mov
and
ja
clc
sub
dec
push
xchg
fbstp
in
imul
lods
retf
rol
mov
cmp
mov
scas
retf
xor
aad
add
popf
mov
sub
popf
push
push
sbb
movs
and
or
pop
test
dec
(bad)
mov
inc
inc
add
add
scas
xor
aam
test
aas
and
mov
iret
adc
inc
callw
pop
(bad)
cli
mov
ret
jle
call
inc
or
sub
and
mov
push
hlt
push
(bad)
sahf
inc
mov
fimul
pop
mov
xchg
mov
cmp
or
add
add
pop
rol
loope
xchg
aaa
mov
xor
es
(bad)
adc
xchg
push
mov
sbb
jp
js
dec
sub
push
fld
add
call
mov
out
add
add
push
dec
ins
jle
in
adc
pop
iret
(bad)
ins
mov
push
aas
gs
mov
repnz
add
add
and
add
mov
js
icebp
fimul
jmp
dec
shr
je
js
dec
sub
adc
repz
fld
xchg
jmp
xchg
in
jae
sbb
leave
push
xchg
(bad)
mov
test
idiv
cmp
ss
or
cmp
fistp
loope
inc
sbb
fmul
mov
inc
mov
hlt
sbb
sub
jmp
jg
out
loope
sub
cmps
jnp
and
xor
lods
and
mov
cmp
out
cmp
mov
into
xor
or
fs
mov
ret
out
sbb
and
add
add
call
inc
jle
call
cmp
mov
push
inc
cdq
pop
ds
mov
or
rcl
and
dec
mov
jp
jg
dec
movs
pop
pusha
jmp
mov
cmp
xor
outs
mov
cmp
sub
and
imul
add
dec
xchg
and
inc
hlt
js
sbb
scas
frstor
out
not
dec
sub
inc
adc
mov
dec
dec
punpckhbw
xchg
cli
mov
pop
lock
rcl
mov
js
outs
into
pop
and
(bad)
sahf
das
out
sbb
cmp
shl
nop
push
sub
pop
dec
ret
loop
mov
add
add
xor
or
jge
mov
test
adc
sub
popf
dec
mov
adc
sub
pop
sbb
les
in
sub
sbb
imul
idiv
push
jecxz
or
push
sbb
call
stos
xchg
outs
jecxz
xchg
mov
add
daa
jbe
or
or
shl
pushf
dec
xchg
pushf
cdq
fbld
cmps
dec
sbb
out
call
jns
shr
xchg
dec
xor
xor
pushf
ret
xchg
cmp
xor
out
stos
jmp
in
(bad)
push
or
dec
ins
push
fist
add
ja
out
sbb
and
push
bts
outs
cmp
jno
xlat
pop
es
retf
xor
mov
fcom
xor
nop
hlt
pop
pushf
ficom
jp
push
movs
ret
sub
mov
xlat
repnz
ret
arpl
jg
adc
and
xchg
add
add
xchg
pop
mov
inc
fiadd
add
sti
cmps
xor
lds
xchg
adc
repnz
sub
inc
loopne
jb
inc
mov
sbb
dec
aad
sbb
leave
push
add
shl
xor
loop
int3
push
xchg
aas
add
stc
add
nop
cmp
fiadd
jge
mov
add
or
mov
fiadd
es
sbb
ret
sub
sub
mov
sbb
mov
cmp
cmp
dec
mov
ja
sub
es
lods
jo
clc
pop
inc
js
shr
ror
pop
dec
mov
cli
daa
or
add
xor
sti
jbe
ins
push
imul
cmp
cmp
adc
adc
cli
clc
leave
out
repnz
or
mov
imul
pop
fimul
xchg
gs
inc
outs
sub
pop
xor
push
sub
sub
add
mov
les
mov
xchg
lods
mov
add
loope
clc
dec
jle
inc
movs
ja
xor
(bad)
cmps
sahf
mov
rcr
add
jo
out
mov
jmp
leave
outs
cdq
sub
pop
(bad)
sbb
sbb
retf
pop
(bad)
(bad)
add
div
sbb
add
push
addr16
lods
shl
cli
sub
jmp
xor
arpl
jl
xchg
mov
out
into
inc
stc
sub
jmp
push
sub
add
mov
inc
jmp
gs
nop
mov
jmp
add
fs
add
loopne
clc
sbb
pop
cmp
movs
add
rcl
jle
aaa
mov
dec
mov
push
ror
cmp
dec
jp
add
outs
inc
inc
sub
movs
inc
ins
xchg
sbb
(bad)
inc
add
add
mov
mov
xchg
jg
(bad)
ror
pushf
sbb
mov
adc
mov
cwde
mov
je
loope
pop
xchg
inc
popa
add
jmp
pushf
adc
dec
repz
dec
xor
pop
pop
das
dec
mov
lock
nop
pop
add
je
xor
add
and
les
loop
out
adc
sbb
push
jb
jmp
std
dec
or
fs
adc
bound
ret
cmp
mov
xor
lods
ret
add
mov
leave
sbb
sub
das
lea
pop
sub
sub
fcom
xchg
aad
movs
add
add
push
fs
sub
mov
les
pop
mov
or
pop
test
fcomp
test
xor
std
mov
(bad)
shr
data16
cmc
mov
sbb
cmp
cld
stc
nop
pusha
push
jecxz
mov
jle
add
and
add
jle
jecxz
fbstp
imul
add
add
shl
fdivr
dec
rcl
cli
fist
jne
mov
mov
repnz
xchg
add
shl
lods
stc
jg
sbb
jecxz
jb
sbb
xchg
dec
sub
sahf
out
cs
pop
push
add
sbb
aad
cmp
dec
imul
pop
and
dec
mov
inc
sbb
push
pop
add
add
adc
sbb
pop
fptan
mov
repz
push
mov
dec
loopne
lds
push
pop
neg
add
imul
sar
jmp
pop
mov
xchg
cmps
into
and
inc
xchg
xchg
cmp
sub
pop
jge
push
add
add
jns
sbb
cmp
jno
rcr
mov
cmp
jne
jne
nop
add
stc
pop
cli
mov
mov
pop
pop
lods
pushf
push
out
push
mov
es
call
cli
push
jns
out
pop
loope
(bad)
adc
fs
out
add
adc
mov
movs
ficomp
push
hlt
jno
mov
mov
push
sar
adc
bound
fsubr
and
mov
leave
das
fs
loope
call
mov
pop
outs
bound
jmp
sahf
dec
lods
sar
cmp
cmc
out
jl
jmp
enter
inc
je
add
fwait
jbe
scas
aad
cdq
pop
mov
pop
test
push
sahf
push
cmp
add
add
test
cmp
outs
fld
jnp
pop
adc
imul
test
pop
cmpps
imul
and
ret
push
sbb
movs
pop
shr
push
clc
inc
loope
fucomp
test
sub
aam
pop
in
fidiv
aas
inc
jo
and
xchg
call
mov
add
sbb
or
jno
or
and
out
outs
mov
pop
adc
pop
pop
sbb
jl
adc
inc
std
sbb
repz
data16
lds
push
and
xsavec
xor
das
pop
push
jns
inc
inc
add
imul
test
mov
add
add
scas
ja
push
sbb
mov
fnstenv
sub
jmp
adc
into
daa
sbb
xchg
loop
pushf
retf
pushf
clc
cdq
cmp
pusha
mov
inc
lock
pop
xchg
into
inc
imul
pop
lea
stos
xchg
daa
retf
es
jmp
adc
dec
push
mov
fs
outs
jmp
pusha
jmp
lock
push
xchg
adc
sub
inc
sbb
mov
pop
jl
and
int
arpl
(bad)
mov
sti
out
fbstp
sbb
mov
push
or
out
loopne
test
add
inc
sub
cmps
in
inc
xchg
or
add
add
dec
sbb
jns
test
xchg
(bad)
cs
bound
push
mov
bound
jecxz
jbe
add
push
leave
push
je
xor
inc
jns
sub
xchg
or
std
xlat
lahf
push
add
or
cmp
stos
movs
in
pushf
mov
or
or
adc
popf
mov
into
adc
mov
push
imul
and
or
in
push
pop
or
push
cdq
mov
cld
or
out
xlat
mov
mov
bound
ds
inc
xchg
pop
inc
in
fld
leave
jmp
and
xchg
fwait
dec
sub
imul
pop
cwde
jno
sbb
dec
mov
gs
mov
cmp
fcomp
dec
add
add
push
rcr
ins
xchg
movs
inc
test
loopne
sar
and
xchg
adc
(bad)
scas
adc
bound
mov
(bad)
sbb
clc
adc
ret
xor
mov
aad
mov
sbb
jle
inc
mov
adc
or
mov
int3
mov
aad
add
hlt
cwde
cdq
fdivr
jp
jbe
and
je
cmp
sti
loope
test
(bad)
popa
push
mov
dec
push
hlt
shr
xchg
ins
xor
enter
sbb
mov
push
bound
lahf
test
or
cmp
in
pop
jp
mov
call
test
es
imul
loop
mov
and
(bad)
seta
jnp
shl
mov
dec
stos
or
fsub
push
fisttp
inc
sbb
(bad)
test
js
outs
lods
adc
aam
jbe
xchg
jo
mov
aas
xchg
cmps
aas
mov
push
iret
mov
cmp
xchg
mov
cmp
xchg
int
aad
jb
xor
inc
add
add
inc
push
sbb
ja
(bad)
cmp
sub
sbb
sub
fucomi
jne
mov
adc
sbb
sub
cmp
pop
call
mov
dec
gs
fcomp
ds
bound
and
mov
sub
(bad)
gs
ret
push
add
add
retf
clc
jnp
push
int3
ins
loop
inc
icebp
jge
push
test
cwde
shl
nop
lods
jmp
in
stos
dec
rol
xchg
fs
sub
and
jp
ins
cmp
popa
je
mov
in
push
adc
mov
js
xchg
pusha
enter
adc
sub
push
jne
jae
cmp
pop
leave
scas
push
add
add
cmp
aad
xchg
imul
mov
rol
out
iret
mov
xchg
pop
mov
into
or
outs
fcom
loope
or
xchg
popf
sub
jge
mov
dec
push
movs
dec
jbe
pop
movs
aas
fcomp
fidiv
push
dec
push
jae
out
retf
xchg
out
xchg
lods
out
mov
add
fist
lahf
or
mov
add
mov
cli
xchg
mov
jnp
mov
js
outs
shl
push
xor
dec
rcr
inc
sbb
clc
jmp
in
mov
push
add
add
fcmovu
or
sbb
loope
lock
lds
xor
or
adc
imul
push
sub
add
jne
sbb
mov
fimul
adc
pop
jp
jns
sub
in
gs
shl
xchg
out
inc
in
xor
mov
mov
std
fisubr
test
mov
std
push
js
shr
sub
jne
cli
mov
mov
call
add
out
ret
ret
scas
jne
ret
jb
xchg
sti
fwait
cmp
add
add
dec
push
outs
ins
xchg
push
sbb
aas
call
daa
hlt
xchg
pop
stos
xchg
mov
sbb
push
shl
or
xchg
lods
jns
cdq
sbb
cdq
jnp
fstp
xchg
dec
(bad)
aas
dec
mov
cld
scas
loopne
fiadd
in
xchg
inc
mov
jo
test
rdpmc
mov
push
adc
aas
mov
cwde
lods
(bad)
iret
sbb
mov
cmps
(bad)
jmp
imul
lods
cmp
fdiv
adc
mov
rcr
imul
push
repnz
hlt
sti
dec
pop
dec
not
fs
lods
(bad)
jge
sub
or
fcomi
je
mov
xor
adc
mov
mov
add
inc
xchg
in
sbb
or
jbe
xor
test
cmps
inc
jg
stos
(bad)
xchg
retf
adc
cmps
daa
dec
aad
mov
repnz
mov
into
jecxz
sbb
pop
outs
inc
aas
sbb
mov
stc
stc
mov
mov
jmp
xor
mov
aas
mov
xor
aaa
arpl
add
add
stos
mov
jne
ins
mov
ficom
and
fsub
pop
or
adc
sub
movs
mov
inc
mov
mov
retf
in
or
xor
movs
jmp
push
lods
mov
icebp
shl
les
push
xchg
jo
xor
add
dec
xchg
hlt
xlat
ds
jo
dec
sub
aad
add
push
loop
rcr
cli
rol
addr16
and
les
scas
pusha
jns
lea
push
inc
loopne
fsubr
popf
add
push
sbb
sub
popa
mov
fild
jnp
clc
cmp
mov
sub
ret
push
popa
dec
ins
fs
std
add
inc
dec
ret
cmp
addr16
loope
xor
add
inc
in
repz
jnp
push
push
sbb
mov
cwde
mov
and
out
ds
das
daa
imul
outs
rol
xor
stc
jbe
or
mov
xor
or
adc
into
jae
ret
fiadd
sub
mov
cmp
cs
hlt
adc
jge
cli
xor
add
add
cmps
mov
rcr
mov
add
dec
cwde
(bad)
stc
cld
cmp
mov
(bad)
sub
inc
xchg
in
leave
out
dec
lea
in
retf
mov
aaa
sub
dec
xlat
sti
int
fbld
call
test
push
call
jle
mov
out
jno
fld
mov
add
pop
sbb
enter
shl
popf
mov
xchg
fwait
and
or
jmp
push
fldcw
cmp
jecxz
ss
je
(bad)
dec
mov
imul
jns
mov
out
out
sub
jo
or
cmp
dec
je
sbb
(bad)
(bad)
cmc
push
rcr
or
sbb
and
std
pop
stos
stc
adc
pop
mov
js
or
and
xor
and
mov
lds
sbb
outs
clc
pandn
dec
mov
and
push
add
sub
fstp
ds
in
test
pop
call
add
add
or
mov
clc
xor
sbb
inc
jmp
imul
pop
mov
in
lods
movs
inc
sbb
adc
add
fnstcw
(bad)
(bad)
and
pop
jg
add
(bad)
sbb
push
shl
fstp
outs
fild
xor
jo
ja
add
add
stc
jns
test
jmp
rcr
fsub
adc
sbb
adc
pop
mov
popf
jno
fucomp
mov
dec
pop
ret
pop
xor
push
push
push
jb
inc
daa
sbb
ds
push
fwait
dec
mov
loop
sti
cmp
xlat
outs
out
js
pop
and
cwde
les
add
jb
lods
fld
xchg
and
jp
pop
pusha
jns
mov
mov
loopne
ins
call
lock
lea
push
cdq
loopne
pop
cmp
and
outs
jl
test
jl
ret
inc
cmc
adc
(bad)
fdiv
rcl
cmp
fwait
arpl
imul
add
push
jbe
sbb
mov
je
jb
(bad)
jo
xor
call
mov
(bad)
mov
xchg
test
and
in
sbb
lods
fistp
or
cld
or
repz
and
pop
jns
push
mov
add
pop
call
mov
nop
add
add
push
ins
movs
cli
fimul
dec
add
or
xchg
push
loope
xor
push
mov
cmp
sub
inc
es
xchg
test
adc
iret
jl
cwde
push
(bad)
fdivp
xchg
mov
sar
call
cmps
loope
cmp
jae
stos
ins
sub
repz
lods
pop
bound
add
ja
iret
sbb
mov
jae
or
jmp
mov
xchg
or
add
scas
stos
test
call
in
and
inc
rol
push
or
mov
xor
loopne
pop
pop
inc
dec
sub
jne
pop
jnp
inc
jecxz
or
pop
dec
test
add
add
xchg
add
add
push
sbb
mov
mov
push
in
jbe
call
mov
data16
popf
xor
sahf
dec
dec
retf
rcl
jle
lods
xor
sbb
dec
(bad)
xlat
sub
cmp
xor
push
ss
cs
xchg
sub
add
add
xchg
jmp
out
fimul
jno
sub
int
shl
mov
inc
(bad)
ret
pusha
std
(bad)
test
push
sahf
mov
mov
dec
jle
cld
dec
sbb
fidivr
cmp
xchg
xor
mov
dec
loope
retf
(bad)
cdq
xor
push
push
push
xchg
fisubr
and
pop
nop
out
mov
shl
xor
xchg
repnz
mov
mov
sar
ret
cmp
fsub
pushf
jb
(bad)
popf
jmp
inc
(bad)
inc
ror
mov
pop
mov
ret
dec
ds
rcr
rol
mov
outs
pop
or
add
push
loope
xchg
push
mov
leave
js
adc
jge
rol
mov
movs
outs
cwde
pop
(bad)
dec
out
nop
mov
(bad)
pop
mov
cli
mov
scas
cmc
add
ds
or
inc
rcl
sbb
call
hlt
dec
xchg
adc
lods
dec
cmp
div
or
inc
and
xor
stos
xor
add
push
cmp
stc
pop
scas
icebp
sub
sub
xlat
mov
cmps
cmp
sbb
add
add
ror
popf
sbb
test
push
sub
push
fwait
jb
out
mov
mov
loope
mov
mov
cmp
scas
cmp
sbb
or
and
nop
add
add
mov
mov
or
pop
cli
xchg
dec
test
mov
pop
sub
into
pop
(bad)
lock
mov
and
jge
sbb
mov
(bad)
sahf
xor
fsubr
mov
ror
or
dec
cld
mov
fsubr
adc
aad
movs
and
sub
in
sbb
std
inc
sub
adc
test
xor
or
add
add
aas
pop
int3
sub
sub
mov
shr
add
mov
push
or
or
or
add
add
(bad)
sub
push
add
repz
jg
pop
xor
jne
aam
cld
sub
jo
shl
xlat
sbb
push
int3
add
aad
outs
pushf
les
mov
add
mov
and
ja
pop
cmp
sbb
xor
cmp
ret
jo
sbb
stc
mov
or
leave
or
push
mov
std
mov
xor
and
lock
mov
int3
jmp
(bad)
sar
mov
movs
cmp
out
call
mov
add
imul
jge
out
pop
sbb
jl
das
xor
push
push
rcr
ret
mov
repz
cmp
iret
xor
jge
pop
nop
adc
cwde
lds
data16
inc
lods
in
rcl
mov
popa
pop
push
mov
jnp
popf
aas
enter
call
add
pop
ins
push
push
in
cmp
ins
xor
mov
add
sbb
add
ror
test
dec
mov
dec
mov
pusha
mov
adc
out
addr16
fisttp
and
xor
mov
jmp
nop
test
fucomip
jbe
jno
into
add
add
cld
test
jp
push
lds
sub
fldenv
cmps
fwait
scas
aas
pop
(bad)
dec
pop
in
sub
pop
shr
xlat
mov
add
mov
data16
and
adc
es
jle
inc
push
dec
xor
jnp
out
aad
fcom
add
unpcklps
int3
pop
in
fs
rcl
(bad)
mov
jne
mov
out
std
pop
aad
clc
or
dec
sbb
arpl
or
movs
sti
clc
push
xchg
add
pop
ret
sub
mov
inc
adc
sbb
sbb
popf
pop
adc
sti
add
scas
aam
retf
out
not
sbb
add
mov
xor
adc
in
in
pop
xor
ins
in
jns
xchg
mov
out
cld
arpl
jle
xchg
fyl2xp1
adc
les
out
mov
hlt
dec
or
dec
inc
test
call
push
pop
sub
not
dec
not
(bad)
ja
cli
inc
mov
or
push
add
add
fs
inc
mov
(bad)
stos
rcl
dec
fucomi
dec
shr
or
push
mov
or
(bad)
cs
dec
dec
xchg
test
aad
jp
ss
jb
adc
jo
(bad)
not
shl
int3
or
adc
pop
push
add
test
(bad)
adc
enter
out
add
add
stos
cmp
and
jns
(bad)
(bad)
mov
mov
pop
xchg
jo
daa
cmp
push
and
aad
dec
repnz
icebp
jo
or
enter
add
sahf
push
bound
pusha
mov
jle
addr16
pop
dec
stos
jl
sbb
test
and
sbb
add
imul
movs
xchg
fnsave
jge
or
xchg
sbb
inc
inc
xchg
fisttp
data16
mov
dec
adc
rcr
xchg
jmp
mov
pop
pop
outs
loope
out
lea
jnp
add
jbe
ds
movs
jge
iret
mov
js
aam
xchg
test
add
add
xor
lock
xchg
movs
popa
dec
rcr
fstp
lods
cmps
inc
jg
pop
sub
add
push
icebp
xor
jl
lods
je
mov
inc
adc
arpl
(bad)
xor
cld
xchg
jmp
lock
push
jg
sahf
fcom
sbb
call
add
mov
cmps
cmc
inc
and
and
punpckhbw
cmp
dec
xchg
shr
pop
lods
clc
out
ror
adc
pop
cmps
repnz
mov
cs
push
outs
jmp
cmp
fsub
(bad)
out
push
or
xor
jno
mov
lahf
mov
pop
dec
adc
call
add
jmp
mov
or
fwait
cld
dec
jmp
dec
aaa
jns
test
jmp
inc
mov
xchg
inc
push
push
pop
addr16
(bad)
adc
sbb
add
or
or
or
cmps
fist
int3
mov
loopne
pop
sbb
add
or
pop
in
je
push
add
add
mov
mov
ds
bound
push
std
sbb
sub
xor
popa
xchg
sub
inc
(bad)
xchg
ins
mov
jp
pop
jg
stos
gs
fisttp
xchg
sub
call
pushf
sub
sub
outs
mov
or
xchg
ror
add
(bad)
scas
cli
cli
ds
shr
add
aas
(bad)
hlt
(bad)
movs
jmp
mov
dec
add
fwait
cdq
push
int
repz
dec
push
dec
fidivr
or
xchg
and
push
sbb
inc
and
pushf
pop
mov
mov
adc
jg
or
sub
cmps
and
popf
popa
add
add
add
and
mov
ret
pop
lods
inc
daa
ss
(bad)
mov
pop
xchg
test
adc
mov
pop
xchg
cmp
aam
push
enter
xchg
loopne
mov
inc
sysexit
push
es
scas
mov
sub
sbb
pop
scas
test
jmp
mov
or
test
adc
add
cld
xchg
rcl
pop
(bad)
and
adc
(bad)
dec
mov
paddq
arpl
and
mov
lods
sbb
xlat
jno
jecxz
mov
(bad)
jge
sub
fs
add
push
mov
mov
jp
leave
call
sar
cwde
in
pop
push
mov
and
jge
jo
test
add
(bad)
sbb
or
lods
adc
rol
mov
sbb
xor
stc
in
cmp
mov
lock
adc
cmpxchg
or
cmp
ss
jge
add
fs
aad
add
leave
cmp
int
inc
add
pop
mov
push
mov
icebp
inc
add
cmps
inc
cmp
and
add
add
enter
in
xor
and
jg
mov
dec
mov
clc
push
add
js
add
mov
push
(bad)
ds
fdivr
push
xchg
cld
into
repnz
data16
das
or
ss
pusha
mov
and
pop
lods
fsubrp
xor
rol
in
jne
add
add
aad
jl
aad
and
cmp
sub
lahf
push
adc
in
gs
jo
push
push
dec
xor
pop
xchg
pop
jbe
repnz
and
cs
inc
dec
push
(bad)
mov
cdq
push
pop
repnz
retf
xchg
mov
js
loopne
add
rcr
xchg
arpl
enter
lods
sbb
add
add
or
push
push
mov
leave
jmp
fadd
sbb
xor
dec
loop
xlat
push
loopne
sub
mov
call
jge
sub
arpl
xchg
adc
or
loop
mov
xchg
cmps
push
mov
retf
outs
adc
add
add
mov
and
xlat
pop
pop
ins
xchg
add
(bad)
mov
sub
pop
(bad)
push
mov
sbb
cmc
sbb
mov
jecxz
fidivr
in
inc
or
xchg
mov
pop
mov
or
icebp
int
les
mov
stos
xchg
cmps
ret
ret
mov
add
dec
xchg
mov
cs
repnz
sub
jecxz
cld
jmp
div
xchg
call
push
hlt
arpl
adc
push
addr16
inc
push
push
xlat
int3
push
jmp
add
and
xchg
sar
add
cmps
outs
mov
enter
loop
retf
sahf
and
lds
or
std
sbb
push
mov
hlt
add
fisttp
jb
arpl
add
bound
loopne
pop
ss
pmaddwd
movs
imul
add
xchg
mov
adc
hlt
add
outs
data16
data16
std
lods
call
push
pushf
pop
and
sub
xchg
xchg
push
xor
pop
sldt
add
test
mov
call
xor
int3
push
test
jmp
mov
pop
dec
sbb
pop
xor
cs
scas
ins
pop
sti
jmp
add
loopne
add
add
push
test
cli
push
loop
sub
repnz
ins
adc
fwait
aaa
les
or
sub
push
cmp
add
add
scas
out
lahf
scas
jge
jmp
push
jnp
stos
pop
test
ret
jg
(bad)
stos
jg
inc
xchg
sub
test
jns
and
fs
int
adc
out
clc
add
cdq
push
gs
cmp
inc
test
gs
xor
les
cs
add
add
mov
pop
(bad)
(bad)
repz
movs
adc
or
(bad)
xchg
add
xor
xchg
in
jns
dec
cs
in
movs
fild
jecxz
push
add
and
sbb
lea
outs
jmp
lds
js
push
fidiv
sar
cli
lahf
push
popa
mov
fistp
in
xchg
add
add
mov
xor
push
push
fstp
lea
jb
pushf
xchg
sub
repnz
inc
test
(bad)
stos
aad
lock
and
cmps
ss
or
in
mov
dec
ficom
add
jno
mov
pop
mov
dec
jl
push
pop
out
cmp
ins
pop
push
xchg
mov
lock
add
add
ds
add
dec
push
cdq
pop
sti
fdiv
push
rol
or
fcmovb
mov
pop
inc
pusha
inc
push
stc
sti
xor
or
xchg
ja
cmp
ins
or
mov
inc
inc
add
or
shr
sub
int
fmul
bound
sub
(bad)
shl
xchg
add
jp
aas
xchg
jge
push
add
add
and
pushf
sbb
int
mov
lods
ins
dec
xor
xor
daa
retf
jg
and
cmp
pop
outs
jmp
jg
cmp
mov
add
(bad)
arpl
repz
in
lock
imul
push
cdq
imul
or
arpl
loopne
push
adc
add
add
mov
dec
imul
aaa
shr
or
aaa
test
repz
fstp
(bad)
pop
jmp
out
mov
daa
or
arpl
mov
or
stos
cmps
dec
enter
inc
stos
lds
ret
sbb
mov
add
add
xchg
das
(bad)
pop
xlat
aam
and
xor
sar
lods
xor
jle
adc
movhps
fisubr
sub
jecxz
fcomi
call
es
inc
mov
push
mov
addr16
jl
add
cmp
push
daa
jg
push
add
add
add
ror
jecxz
mov
xor
lods
add
inc
jns
jo
in
es
pushf
inc
push
mov
ret
add
jmp
cld
cs
retf
cld
out
and
into
adc
sbb
mov
pop
sub
or
pop
pop
mov
(bad)
mov
dec
add
sbb
jecxz
ja
pop
mov
xchg
int3
cwde
xchg
and
push
add
(bad)
jg
push
push
retf
ror
aam
test
sar
leave
mov
mov
movs
int
xor
jmp
mov
push
add
inc
mov
and
add
jp
(bad)
cmps
test
addr16
(bad)
int
mov
call
add
test
daa
ror
xchg
jmp
mov
imul
sbb
movaps
xchg
pushf
xor
pushf
cmps
adc
push
fsubr
cmp
fwait
lahf
retf
pop
mov
sbb
mov
rol
(bad)
retf
call
add
add
aad
ins
xor
(bad)
(bad)
adc
out
sbb
sbb
xchg
pop
mov
ret
fdivp
inc
lods
pop
pusha
cmp
dec
cwde
(bad)
aas
bound
mov
pusha
dec
dec
lods
pop
aad
jmp
adc
pop
or
enter
push
dec
cmc
jbe
push
push
xchg
(bad)
int
xor
imul
add
je
stos
mov
mov
fptan
jge
fbstp
cmps
sbb
xor
and
mov
adc
push
push
in
imul
out
inc
cwde
(bad)
call
inc
xor
lock
lds
fstp
call
js
or
and
mov
add
mov
mov
cmps
adc
pop
mov
test
push
xor
fiadd
xor
das
pop
pop
arpl
stos
cmp
aaa
jne
enter
(bad)
lock
cwde
out
pop
int
pop
dec
daa
movs
xchg
(bad)
mov
mov
fild
jmp
or
ror
call
mov
mov
mov
sar
enter
shl
aad
and
dec
test
fwait
mov
loope
pop
mov
outs
xor
int3
pop
push
out
mov
sub
mov
pop
fcom
xchg
mov
sahf
punpckhdq
push
adc
push
rol
add
xor
pop
je
fld
outs
mov
jle
add
and
or
pop
mov
(bad)
push
push
sub
frndint
mov
daa
xchg
push
jmp
fist
or
repnz
jmp
jmp
dec
sub
test
add
addr16
xchg
repz
mov
mov
sti
repnz
pminsw
unpcklps
add
stos
jb
in
fimul
adc
cmovae
and
pop
xchg
push
mov
mov
fadd
aam
xor
call
(bad)
hlt
push
pop
mov
adc
push
cwde
fsubr
sub
outs
gs
bound
add
cmc
in
ins
bnd
add
adc
sti
call
pop
lahf
pop
pop
mul
mov
in
pop
mov
jl
cmp
call
xor
scas
scas
mov
add
and
xor
cmp
(bad)
mov
cmp
mov
push
pop
push
inc
pop
pop
push
add
add
add
dec
iret
sub
xchg
sbb
into
cld
into
and
xor
js
dec
sub
push
addr16
pushf
adc
xor
ret
pushf
in
push
jnp
mov
cmp
jnp
cmc
cdq
pop
(bad)
imul
jge
lahf
mov
inc
(bad)
fbstp
sub
stos
mov
xchg
jecxz
fnstsw
xchg
add
add
xor
mov
add
inc
fmul
push
push
and
xchg
and
xchg
dec
cdq
fadd
jne
adc
push
daa
mov
das
stc
fs
jl
pop
jmp
xchg
nop
and
(bad)
and
jmp
ja
call
fnstsw
mov
adc
add
sub
cmp
sub
call
call
add
mov
enter
sbb
jp
lea
jle
mov
adc
div
in
mov
lds
inc
pop
out
xchg
mov
cmp
jg
or
jb
mov
add
pop
mov
ror
or
loope
inc
aam
add
iret
mov
retf
bound
jns
mov
ins
and
fmul
inc
jle
idiv
mov
cdq
adc
int3
movs
jmp
cdq
out
push
mov
push
xor
daa
fwait
out
mov
(bad)
dec
int
repz
add
push
icebp
(bad)
arpl
sbb
test
sub
mov
js
push
test
sahf
mov
int
xchg
cdq
xchg
mov
cli
sub
push
ret
addr16
loop
(bad)
cmp
ret
sub
add
xchg
in
test
and
xor
jns
push
call
add
add
cmc
dec
push
sahf
sti
fstp
or
cdq
inc
aaa
cmc
js
in
push
add
xchg
adc
push
xchg
call
sub
dec
shl
out
jecxz
dec
bswap
push
mov
mov
inc
sahf
inc
pop
sbb
daa
test
sbb
dec
sub
gs
sub
gs
cdq
aas
shl
add
add
xchg
loop
push
stos
repnz
gs
mov
stos
repz
test
retf
test
fstp
call
adc
cmc
push
mov
push
cmps
in
mov
push
rol
xchg
cwde
xchg
sbb
cmps
out
out
sub
fisub
pop
test
sbb
mov
sub
mov
stos
pop
add
add
add
dec
jle
or
adc
dec
fldcw
mov
popa
adc
mov
sbb
sahf
imul
dec
icebp
fdiv
dec
mov
add
lods
mov
outs
outs
inc
pop
inc
fstp
sub
add
out
push
mov
pop
mov
jns
jo
outs
add
add
in
add
test
mov
push
cwde
repnz
shl
iret
loop
loop
les
(bad)
fnstsw
(bad)
(bad)
push
retf
push
outs
outs
xor
jae
xchg
data16
imul
sbb
iret
jmp
aaa
int
ret
mov
rcr
imul
imul
add
or
and
sahf
icebp
and
mov
jge
jbe
popf
mov
push
push
and
ret
mov
scas
call
cmp
repnz
test
shl
das
movs
ret
repnz
push
cmp
cmps
fiadd
mov
icebp
push
(bad)
cmp
sub
dec
pusha
and
jg
sub
add
in
cmp
(bad)
fsub
mov
xor
push
pop
(bad)
and
or
(bad)
fistp
jbe
dec
fs
retf
inc
or
mov
ror
jne
inc
xchg
and
and
dec
add
xlat
das
cmp
shl
dec
lods
jp
xchg
inc
cmc
mov
scas
fsub
add
add
cs
fsub
xor
cli
loopne
fsubr
iret
push
add
mov
mov
scas
jge
repz
mov
push
cmp
je
cmp
imul
sbb
rcr
push
(bad)
xor
xor
xor
cmp
ficom
lds
add
in
adc
in
jns
adc
xor
sahf
outs
sub
cmps
sbb
mov
(bad)
adc
dec
inc
int3
adc
fwait
pusha
sbb
xor
outs
xor
jbe
add
jns
jl
add
jl
dec
das
out
popf
inc
dec
lods
dec
popf
fwait
loope
jnp
dec
add
add
out
mov
cwde
dec
push
les
inc
or
adc
mov
iret
inc
and
in
jmp
int3
loope
scas
popa
bswap
movlps
out
cld
iret
das
mov
out
dec
push
pop
push
push
and
cmc
loopne
test
or
sub
add
into
cmp
inc
jp
mov
int3
test
add
inc
call
movs
push
mov
cli
call
mov
cwde
addr16
inc
je
pop
out
ror
stos
add
xor
stos
push
outs
scas
test
scas
rcl
cmp
jo
sub
vorps
es
xor
test
ds
fdivr
mov
adc
add
ins
xor
pop
dec
xor
mov
out
test
inc
mov
lods
ffree
icebp
pop
fisubr
fsqrt
hlt
fwait
pop
std
fcomi
pop
(bad)
pop
push
cmc
mov
das
push
jno
xor
icebp
call
ror
mov
scas
pop
nop
mov
fisub
fnstcw
mov
enter
add
add
or
push
push
rep
jg
test
int3
xlat
scas
popf
sbb
lods
mov
jns
out
in
pop
add
fdiv
xchg
push
xor
retf
rep
(bad)
fs
mov
add
hlt
or
loop
inc
ss
mov
inc
add
cmp
adc
stos
lods
arpl
stos
add
add
adc
cwde
fcomp
jmp
sbb
imul
ret
pop
push
call
(bad)
adc
rol
in
fstp
inc
mov
imul
mov
add
shr
jb
lods
movs
push
sub
mov
js
cmp
jns
pop
add
add
sbb
xor
and
jl
push
sub
cdq
inc
fs
push
jb
imul
push
jl
mov
pop
cwde
jg
dec
cwde
pop
cld
add
ins
adc
push
jae
cmp
adc
arpl
lock
xchg
or
adc
call
push
cdq
mov
and
xchg
das
or
pop
dec
mov
jne
add
add
(bad)
xlat
mul
shr
inc
mov
cmp
mov
jg
pop
and
add
fisubr
inc
adc
mov
pop
mov
mov
xor
cld
xor
adc
loopne
mov
stos
lds
inc
je
call
stc
in
outs
fwait
and
jge
ja
jns
push
jge
add
add
arpl
mov
push
inc
adc
mov
mov
dec
lahf
test
push
xlat
out
cmc
movs
push
push
add
push
push
jmp
mov
add
cmps
cmp
inc
gs
inc
push
add
pop
adc
repz
push
mov
sbb
aas
jecxz
xor
imul
add
or
push
push
pop
ret
mov
push
xchg
daa
int
test
lahf
mov
enter
std
mov
mov
push
div
xlat
(bad)
pop
test
mov
(bad)
and
pop
inc
pop
jb
jmp
enter
js
pop
ficom
dec
jns
in
sbb
int3
inc
pop
das
xlat
dec
sbb
jg
xchg
jne
shl
inc
add
add
adc
fiadd
or
push
scas
and
mov
imul
pop
rol
daa
lahf
into
lods
lock
movs
fwait
std
enter
clc
sti
and
dec
sub
out
icebp
mov
aam
pop
retf
cmps
ret
sahf
or
ror
jl
loopne
ja
leave
cdq
out
loopne
(bad)
test
int
outs
push
sbb
add
in
imul
pop
and
aaa
jno
mov
fldcw
dec
xor
pop
lods
jae
jbe
int
ja
and
push
jno
scas
xor
ins
inc
fadd
mov
call
dec
jno
(bad)
lods
pop
mov
loope
cmps
xlat
dec
sbb
mov
xor
mov
out
bound
jmp
call
add
mov
xchg
retf
les
stos
sub
add
cmp
enter
leave
mov
and
ins
push
xlat
adc
ja
push
pop
mov
sbb
dec
sub
jbe
gs
repz
mov
test
(bad)
push
das
pop
dec
data16
rcr
push
ss
out
test
pop
add
ss
out
stos
and
call
mov
movsx
jl
or
das
daa
shl
ins
adc
push
dec
jmp
mov
dec
mov
popa
pop
js
and
mov
cdq
mov
in
in
scas
jge
lea
sbb
repz
add
push
outs
add
push
inc
and
pop
movs
ret
cld
mov
xor
shl
push
mov
fstp
xchg
jge
sbb
and
outs
mov
sbb
cmps
and
xor
cmp
outs
loope
mov
adc
sbb
push
adc
mov
add
dec
xor
jle
push
aaa
outs
nop
(bad)
repnz
not
xchg
add
popf
adc
sbb
retf
dec
xchg
leave
mov
test
pop
sub
out
das
shl
xor
inc
sahf
test
lds
imul
xor
push
imul
mov
out
out
call
adc
mov
inc
ds
iret
add
add
sbb
jnp
cmp
cld
movs
cmp
xor
movs
cli
sub
data16
mul
mov
stos
pop
sbb
cmovbe
cmps
adc
sbb
mov
bnd
jge
fisub
repz
scas
mov
aad
push
jecxz
mov
dec
push
rol
inc
add
add
add
adc
outs
and
pushf
jns
stos
push
dec
add
fwait
outs
ret
mov
mov
aaa
out
and
dec
mov
call
sbb
in
xchg
and
xchg
outs
pop
adc
repz
push
cmp
(bad)
hlt
in
xor
imul
movs
jle
sbb
xchg
inc
and
retf
cdq
cmc
add
add
sar
xor
inc
fmul
mov
vmovntpd
cs
or
scas
nop
sbb
mov
or
xlat
mov
cmps
inc
sbb
aam
mul
pop
jnp
pop
jecxz
mov
xor
jno
cld
push
dec
fnsavew
mov
in
nop
inc
mov
xchg
sar
and
add
mov
lds
jmp
stos
cmp
and
cmp
sahf
dec
aaa
pop
mov
cmp
jno
call
push
rol
cmp
jge
jmp
xchg
lea
(bad)
mov
clc
in
jmp
nop
pop
ins
jg
inc
lock
jb
cli
xchg
mov
mov
enter
arpl
add
sbb
aas
xor
and
or
sub
xchg
cmp
push
xor
mov
fwait
popf
sub
mov
jae
lods
and
pop
mov
mov
mov
pusha
aad
push
sahf
jae
ret
mov
in
shl
lods
cmp
cmp
lea
dec
add
add
(bad)
add
xchg
rcr
daa
in
dec
or
cmp
pop
or
xchg
fisub
fnstsw
aas
jmp
mov
jnp
sahf
mov
and
xor
or
js
mov
add
xchg
mov
jp
jb
add
add
std
inc
push
repnz
into
ins
loope
popa
add
add
push
or
adc
js
jne
call
ret
ret
out
(bad)
sub
adc
sub
enter
aas
push
pop
mov
jo
dec
mov
in
xor
dec
push
mov
sbb
ss
sti
sub
(bad)
int3
mov
clc
sbb
or
stos
xchg
pop
mov
test
not
add
add
or
adc
dec
ror
push
mov
mov
adc
in
stos
push
out
pusha
ja
push
mov
cmps
in
dec
nop
mov
sar
add
std
jmp
cld
mov
push
add
sbb
adc
fs
adc
mov
shl
add
add
cmp
fld
mov
jne
add
jno
pushw
icebp
mov
sub
pushf
aad
popf
cmp
xor
retf
adc
sbb
mov
mov
out
jmp
(bad)
mov
xor
inc
xlat
push
jno
mov
inc
pusha
retf
pop
movs
sti
pop
adc
add
test
pmullw
movs
lds
call
in
jge
xchg
sbb
jnp
and
mov
lds
and
cs
scas
mov
jnp
dec
inc
imul
push
push
stos
test
mov
inc
xlat
dec
xchg
jge
cli
pop
fucomi
inc
ds
data16
xchg
je
shufps
xchg
stos
add
add
sbb
mov
push
xchg
pop
icebp
push
cmc
cmp
cmp
(bad)
push
jmp
pushf
xchg
nop
push
sbb
stos
das
lahf
test
lds
js
add
dec
inc
mov
adc
xor
xlat
add
fiadd
cdq
dec
pop
or
or
add
or
mov
or
xchg
cmc
push
add
lock
sbb
jl
jno
or
loop
in
cmp
aas
or
jmp
adc
jnp
out
xchg
inc
sub
das
je
mov
cmp
dec
in
dec
mov
adc
xor
movs
repz
mov
xor
shl
popa
pop
xchg
lea
sbb
or
xor
add
jmp
xchg
cwde
ret
or
xor
sbb
jmp
or
out
sbb
mov
adc
adc
mov
jge
pop
adc
ret
inc
ret
movs
outs
fcomi
xchg
and
popf
sub
mov
fsubp
stc
movs
xorps
sub
sub
xchg
loop
mov
add
cli
inc
xchg
push
inc
mov
inc
arpl
out
out
cdq
dec
mov
cdq
iret
fadd
and
in
cdq
mov
adc
cmps
pop
lahf
xor
and
fisub
sub
or
imul
retf
xor
fldcw
es
sbb
push
rcl
mov
call
add
add
push
pusha
nop
cwde
arpl
mov
cmps
xchg
xchg
jo
adc
(bad)
or
pop
mov
out
jbe
sub
cmp
aad
sub
lahf
cmps
aaa
clc
lock
sbb
cmp
sbb
(bad)
in
or
pop
mov
je
or
daa
call
mov
add
mov
cmp
sub
cli
mov
pop
loope
sub
dec
mov
sub
xchg
or
mov
cli
or
fnsave
sub
fcomp
sub
lahf
cmp
mov
imul
stos
mov
loope
(bad)
mov
push
lea
add
add
fsubr
aaa
movs
and
iret
fimul
pop
cmps
movs
clc
fld
dec
push
jg
ins
add
push
or
jb
ret
adc
push
bound
clc
and
mov
xchg
imul
push
push
into
jge
push
lahf
fisttp
xchg
popf
lods
inc
push
retf
dec
fcomip
mov
add
xchg
mov
cli
push
(bad)
cmp
ins
or
xchg
jno
push
add
ret
jbe
(bad)
punpckhdq
cmp
stos
fs
xchg
test
inc
call
in
pusha
adc
mov
enter
not
inc
mov
pop
push
jg
add
jp
and
movs
mov
xor
aam
(bad)
(bad)
cmc
pmaxsw
add
push
loopne
lock
gs
ja
sbb
adc
inc
out
std
and
retf
xor
add
or
sub
jmp
push
fisttp
repnz
mov
xchg
fnstenv
ret
pop
(bad)
mov
mov
aad
scas
in
adc
enter
mov
inc
test
adc
add
add
pop
inc
adc
movs
in
fs
loope
cmp
outs
hlt
shl
mov
add
jo
xchg
or
jns
xchg
lds
or
mov
loop
imul
or
jg
dec
add
pop
(bad)
pop
js
lea
and
cli
les
jmp
jecxz
add
jg
lock
adc
js
gs
xchg
(bad)
out
cmps
add
outs
int3
arpl
inc
dec
addr16
out
inc
jmp
jns
es
mov
xchg
imul
cmp
lea
or
inc
mov
mov
pop
retf
mov
xchg
js
ins
cwde
adc
(bad)
test
inc
jp
add
add
add
inc
jmp
clc
push
es
das
or
test
js
or
cli
push
scas
cmp
pop
jmp
mov
sar
std
sub
(bad)
jge
mov
hlt
xor
push
data16
ret
icebp
xor
mov
outs
dec
jg
inc
and
cmp
sbb
add
and
inc
pop
das
xlat
jne
les
or
inc
mov
mov
clc
xchg
repz
ins
das
add
xchg
sbb
aad
icebp
es
int
jne
pop
pop
loope
mov
int3
data16
(bad)
movs
(bad)
push
add
push
ja
add
jbe
push
inc
hlt
movs
imul
rol
adc
add
mov
out
or
ror
and
int3
dec
sub
cmp
mov
sub
test
push
pusha
les
into
cmp
test
mov
btc
add
xor
xor
adc
jnp
ss
cmp
xor
arpl
cmp
or
lock
(bad)
leave
cmp
add
and
(bad)
push
stos
es
inc
add
ret
mov
test
in
jl
fisub
es
adc
mov
in
(bad)
aad
pop
jno
aad
mov
mov
shl
jle
mov
xor
sub
movs
fcomp
push
sbb
pop
dec
xchg
arpl
push
mov
cmp
idiv
jae
jp
ret
add
ins
test
sbb
pop
mov
(bad)
sub
xor
retf
push
test
add
sti
cmp
jne
mov
sub
jecxz
mov
lods
out
out
pop
xchg
mov
xlat
mov
jns
loope
and
inc
dec
add
add
pop
leave
sub
(bad)
adc
sbb
icebp
mov
sbb
xor
mov
pop
in
shl
add
pop
inc
loop
cld
inc
test
inc
inc
lock
sti
ffree
sub
dec
mov
scas
ret
pop
(bad)
stos
mov
mov
fisub
ret
mov
mov
imul
inc
mov
add
add
inc
test
ja
sub
pop
adc
addr16
js
fldcw
pop
lahf
mov
fwait
jae
lds
inc
and
aas
ror
push
adc
adc
pop
sub
stos
inc
xlat
adc
test
out
cwde
jl
or
push
cmps
dec
mov
test
adc
das
add
add
mov
call
or
fnsave
push
sub
mov
and
xor
dec
mov
pop
(bad)
int
xor
xor
dec
push
mov
sub
fcmovne
cmp
mov
das
cmps
int
mov
push
push
xchg
les
in
xor
add
add
xchg
inc
sbb
mov
je
adc
fnstsw
outs
call
fadd
mov
or
mov
mov
or
inc
xor
pop
ds
faddp
lods
imul
cdq
stc
test
jno
shl
pop
sbb
repnz
stc
test
mov
pushf
add
add
adc
lock
mov
mov
mov
pop
fdiv
test
adc
call
lods
jmp
clc
adc
data16
mov
rcr
ret
xchg
mov
push
shl
adc
ja
stos
mov
cmp
push
push
(bad)
cs
jbe
test
arpl
and
jmp
add
add
retf
rol
out
cmp
mov
fist
sbb
shl
rcr
cmps
movs
in
push
jecxz
mov
push
enter
add
sbb
or
popa
jle
lods
add
loop
cdq
scas
(bad)
iret
sbb
mov
rcr
push
int
pop
sub
push
out
fs
and
add
dec
mov
xchg
movs
sbb
ds
pop
push
add
mov
ss
mov
cmp
shl
jb
jecxz
adc
fwait
imul
sbb
push
jp
adc
inc
aas
mov
sub
fs
adc
call
lea
scas
or
jae
push
jbe
inc
cs
add
loop
dec
fist
out
xchg
cmp
pop
add
movs
repz
sbb
inc
outs
mov
sub
emms
add
mov
mov
popa
dec
cmp
pop
fiadd
das
fsubr
dec
mov
add
(bad)
aad
pop
(bad)
(bad)
jne
mov
add
push
stc
mov
sar
push
sbb
push
add
mov
add
mov
xchg
xor
cmps
mov
lahf
push
sahf
xchg
call
fldcw
fmul
bndstx
sub
add
fild
test
test
add
push
aaa
(bad)
int3
or
xchg
mov
(bad)
gs
jnp
add
jg
jnp
mov
add
add
and
enter
cmp
mov
mov
inc
mov
pop
cmc
fdiv
xlat
mov
cmps
cld
or
push
ret
pop
or
sub
sub
cmps
retf
ficom
fs
out
inc
test
add
or
and
call
and
pop
adc
add
adc
ret
rol
pop
xchg
cmp
lods
xor
jnp
mov
iret
sti
idiv
cwde
jmp
jmp
rcr
xchg
call
xor
push
call
lods
mov
mov
ret
adc
sub
inc
or
data16
stos
(bad)
fld
jns
out
inc
cmp
add
in
es
stos
clc
inc
ins
mov
add
test
fcomp
jl
mov
(bad)
cld
mov
cmp
jle
inc
mov
int
je
xor
mov
lods
bound
je
inc
ret
iret
nop
add
push
mov
aaa
fisub
fsubr
inc
rcl
js
add
add
add
in
enter
mov
in
and
lods
cmp
inc
jae
xchg
adc
xchg
pop
mov
imul
jo
mov
or
sbb
lea
xor
push
mov
cmps
push
fmul
stos
mov
mov
add
add
mov
fst
add
add
ret
jb
and
sar
cmps
xor
push
aad
loop
int
(bad)
mov
push
jmp
or
js
mov
outs
pushf
neg
xor
(bad)
(bad)
sbb
cmp
push
lods
jb
add
popf
mov
pop
push
lds
ds
sub
shld
std
jl
push
pop
pop
ins
call
add
push
scas
cmps
jg
mov
aam
dec
and
test
jns
repz
dec
cli
add
cwde
push
xchg
icebp
aaa
mul
fisttp
push
inc
aaa
push
add
gs
les
or
je
scas
aam
adc
sbb
bound
jge
aad
dec
adc
repz
ficomp
ror
in
jg
cs
sbb
add
add
inc
sub
stc
ret
sahf
adc
push
sahf
ds
ins
shr
and
movs
outs
mov
aam
fist
sub
ret
stos
icebp
push
cmc
mov
jnp
mov
mov
dec
(bad)
cdq
adc
shl
(bad)
repz
ds
inc
mov
and
jae
rol
adc
loopne
xchg
cmp
mov
sub
add
add
lods
sub
dec
inc
pop
repz
stc
popa
movs
call
daa
ins
add
and
sti
add
stc
mov
lds
sbb
dec
jge
inc
mov
pushaw
mov
sub
pop
in
movs
mov
shl
jge
mov
stos
mov
adc
jnp
and
add
data16
cwde
ficomp
or
push
arpl
xlat
fwait
stc
jne
jge
inc
mov
pop
aaa
cmc
pop
push
sbb
xchg
icebp
cmps
mov
push
call
lods
or
mov
pop
(bad)
out
jne
retf
dec
sbb
push
sub
ret
sahf
sub
loope
mov
or
das
jmp
push
das
pop
cmp
inc
call
xchg
loop
icebp
push
dec
sub
cld
mov
add
add
or
mov
jl
xor
lods
and
loopne
shl
add
dec
in
out
mov
xlat
dec
pop
repnz
movs
ss
mov
or
mov
mov
repz
cmp
cmp
sahf
push
add
add
push
mov
stos
sub
xchg
push
ret
lahf
and
xchg
dec
outs
mov
pop
imul
cmp
inc
out
call
iret
or
imul
jecxz
jns
mov
repnz
leave
jmp
pop
mov
add
test
clc
and
test
add
add
sub
ja
fwait
mov
aas
clc
out
fstp
mov
pop
(bad)
(bad)
sti
sar
jne
mov
sahf
xchg
sub
adc
pushw
pushf
daa
aas
adc
stc
shl
pop
loope
mov
outs
fisub
jnp
push
cmovb
int
daa
adc
out
ret
or
test
dec
mov
sbb
add
lock
jmp
dec
sti
(bad)
sub
mov
jg
loope
loop
cmp
and
add
pop
or
add
int3
mov
pop
mov
inc
inc
ins
mov
jne
in
lahf
retf
push
imul
loopne
xchg
call
jecxz
xchg
imul
add
add
and
mov
cmp
sar
sti
addr16
in
inc
gs
add
jbe
ins
repz
rol
out
xchg
daa
inc
clc
jg
and
push
jmp
sub
xchg
(bad)
out
adc
cmp
xor
push
out
aas
mov
sbb
int
in
or
aaa
xchg
and
cmps
js
and
add
add
imul
outs
or
mov
icebp
lock
inc
push
test
icebp
cmp
fld
popf
gs
cmp
mov
cmps
jle
daa
push
xchg
bswap
and
cmp
dec
adc
xchg
add
pop
inc
jle
test
mov
add
mov
mov
cmc
out
cmp
add
add
aas
fnstsw
pop
jne
or
jno
adc
loopne
pop
popf
add
ins
or
cmp
neg
or
hlt
mov
and
or
dec
out
fidivr
popa
and
or
cs
outs
in
jecxz
jb
fmul
dec
lods
retf
adc
lock
int
popf
arpl
pop
add
add
test
mov
jle
xchg
mov
aad
push
push
dec
lock
mov
scas
pop
in
and
sub
out
inc
nop
sub
test
mov
ret
jge
cmc
repz
add
mov
mov
ins
and
mov
jg
and
(bad)
mov
in
add
das
sub
hlt
das
leave
push
push
jp
xchg
ins
retf
loope
and
adc
mov
fs
inc
fadd
out
aad
push
aas
std
popa
pop
mov
pop
fsub
mov
fisttp
inc
daa
(bad)
mov
(bad)
fidivr
dec
in
fwait
push
idiv
fisttp
fst
or
nop
test
test
add
adc
dec
fisub
pusha
jb
popf
xor
cmp
mov
movs
mov
sbb
pop
sub
adc
sub
sbb
out
push
cwde
pop
repnz
jbe
loopne
ins
lds
xlat
dec
out
(bad)
pop
pop
mov
adc
adc
mov
xor
fnsave
mov
xor
jg
stc
add
add
aaa
and
inc
stos
cmp
mov
cmc
fsub
add
mov
pop
pop
mov
sbb
cmp
or
dec
bound
bound
push
sub
bound
mov
fstp
jg
push
movs
jmp
inc
movs
scas
xor
pop
mov
dec
mov
sbb
add
push
sbb
xchg
mov
aas
pop
pop
sub
mov
sbb
dec
push
(bad)
and
adc
mov
cmc
and
jmp
dec
add
inc
cmp
jno
pop
jecxz
sti
jle
jmp
jle
cmps
xchg
popf
mov
xchg
dec
dec
cmp
add
(bad)
and
(bad)
clc
mov
adc
push
inc
mov
and
cdq
adc
outs
or
cld
jo
xchg
mov
sbb
in
push
mov
pop
pop
es
push
cmp
std
mov
cmc
or
je
pop
inc
jl
rol
test
out
or
xchg
cmps
jle
out
test
out
add
xor
jle
ins
data16
mov
scas
xchg
push
mov
in
scas
rcr
sub
mov
dec
dec
retf
gs
shr
imul
int
inc
jno
mov
clc
cdq
sub
and
mov
mov
jae
jl
sub
jecxz
stos
mov
test
jecxz
(bad)
pop
into
fcom
bound
fistp
jg
push
or
add
mov
xchg
mov
cmp
fdiv
aam
ins
je
adc
adc
cmp
addr16
movs
ins
movs
xor
test
sahf
js
bound
loopne
das
std
int
jmp
popa
and
in
xlat
repnz
lds
pop
aam
std
fisttp
shl
sbb
jno
sti
rcr
pop
popa
repz
lds
or
ja
xor
pushf
daa
push
or
aaa
std
dec
xchg
(bad)
push
retf
pop
test
imul
(bad)
pop
shl
dec
dec
adc
imul
xchg
push
xchg
inc
cmp
lods
xor
test
or
cdq
cmc
test
jecxz
les
add
add
out
lahf
ret
xchg
add
sub
xor
pop
scas
(bad)
pop
out
mov
xor
fstp
mov
sub
cld
(bad)
clc
jb
or
add
dec
add
repnz
nop
cmp
xor
cmc
test
dec
jb
int3
cmp
add
add
ja
loop
inc
and
fistp
mov
es
sbb
js
push
test
das
mov
shl
cdq
sub
icebp
scas
movs
adc
popa
pop
add
dec
mov
xchg
jne
sub
mov
shrd
mov
and
inc
pop
dec
fs
xor
jecxz
or
inc
stc
xchg
add
add
cmp
xor
cmps
rcr
stmxcsr
sbb
xchg
ffree
std
jnp
out
repz
mov
sbb
add
adc
xchg
outs
call
popa
sub
dec
in
inc
test
stc
mov
into
into
in
mov
loope
sbb
push
jp
mov
xchg
jno
mov
cli
mov
shl
add
mov
pop
dec
cs
adc
mov
test
mov
xchg
dec
sub
xor
out
mov
fimul
cmp
pop
ret
popf
mov
xor
sbb
mov
fbstp
xchg
dec
add
shl
movs
fbld
repz
inc
outs
jg
mov
xchg
in
add
int3
mov
cmp
jl
mov
ret
loopne
sar
and
push
ret
clc
jbe
lahf
call
arpl
aaa
inc
push
out
loope
repz
mov
hlt
cmps
cli
jl
arpl
sbb
outs
mov
add
inc
ret
sbb
pop
(bad)
fld
dec
dec
test
rol
xchg
add
sub
inc
push
das
not
je
add
ss
adc
mov
xchg
jmp
add
retf
test
jo
and
sbb
div
in
dec
fucomip
sbb
cmps
test
mov
repnz
movs
xchg
mov
int
mov
or
push
jge
xchg
cmp
fwait
push
clc
aad
loop
in
iret
inc
dec
mov
sahf
retf
add
add
addr16
(bad)
rol
call
fwait
in
popf
jmp
adc
push
and
ret
pusha
popa
dec
lds
scas
sbb
pushf
inc
xchg
jmp
not
fs
and
or
sub
push
fsubr
inc
dec
sbb
jb
fs
adc
add
add
int3
fild
or
add
jge
popa
leave
je
mov
inc
inc
inc
rol
(bad)
aam
adc
mov
xchg
movs
fcmovb
adc
clc
inc
aad
cmp
mov
call
movs
and
adc
pushf
jmp
and
jno
add
add
cmp
aas
cmps
jge
shr
pop
dec
inc
pop
mov
lea
xchg
add
or
or
and
cmc
and
les
mov
xor
outs
add
xchg
retf
sub
xor
shr
cld
dec
xor
retf
clc
jns
add
fdiv
outs
jecxz
add
add
jbe
rol
mov
xor
fwait
xchg
xor
icebp
dec
call
lods
inc
vunpcklps
push
call
not
outs
sub
retf
(bad)
sbb
jle
sub
cmp
sub
inc
xchg
ror
cmp
(bad)
inc
add
add
retf
jb
push
(bad)
in
adc
xchg
lds
mov
icebp
int
fisubr
push
cmp
xor
dec
push
out
aad
scas
stos
mov
mul
daa
dec
mov
mov
adc
bnd
add
mov
or
dec
push
push
scas
cmp
les
aaa
xlat
std
sbb
mov
xchg
add
dec
pop
add
add
mov
pop
out
clc
mov
or
jle
sbb
(bad)
jge
pop
push
fnstsw
popa
pushf
(bad)
imul
xor
in
push
imul
pusha
jg
mov
or
push
xor
aad
inc
call
and
gs
std
push
int3
mov
add
std
mov
lods
mov
sbb
mov
add
mov
add
push
lods
stos
out
add
xor
das
adc
push
dec
adc
jge
in
loopne
aad
and
mov
mov
cmp
loop
adc
cdq
dec
call
stos
push
jg
cmp
add
adc
aaa
xor
add
pop
fldenv
inc
mov
mov
dec
dec
lods
ins
xlat
ja
dec
and
mov
add
jno
xchg
fidivr
test
sub
data16
push
outs
in
out
sbb
mov
mov
lds
add
into
sub
cmp
bound
xor
jb
imul
test
sbb
(bad)
push
cld
lods
imul
sub
rol
mov
test
sbb
mov
sbb
test
xor
jne
mov
lea
push
xchg
out
cld
jp
add
stos
jecxz
aam
cmp
dec
xchg
icebp
mov
lods
mov
add
add
ins
cli
fucomi
jb
stos
inc
fdiv
jno
pop
in
sbb
loop
push
adc
jl
mov
dec
push
adc
dec
scas
pop
xchg
mov
and
pusha
rol
js
inc
jae
push
iret
jo
arpl
inc
push
or
mov
dec
cmps
mov
pop
push
addr16
adc
add
push
rol
dec
jnp
mov
mov
xor
push
push
pop
jo
mov
call
rol
xor
dec
loopne
mov
mov
dec
hlt
mov
or
cmp
sub
jp
cmp
mov
pop
xchg
xlat
retf
rol
lds
cmp
xchg
(bad)
adc
adc
push
adc
add
add
ja
mov
lds
xchg
aas
push
scas
mul
in
push
mov
add
xor
cmps
jo
pop
(bad)
pop
push
pop
jnp
out
or
movs
add
push
cmps
(bad)
push
and
and
xchg
int3
pop
aas
enter
jmp
or
push
add
add
mov
pusha
jns
rol
and
mov
test
rol
test
and
pop
and
add
lods
cmc
daa
dec
sub
sti
xchg
push
icebp
dec
aam
outs
out
out
call
fimul
in
adc
xor
adc
pop
jo
test
pop
dec
push
add
add
add
cmp
push
pop
push
inc
push
xor
push
leave
mov
fist
fmul
dec
iret
dec
inc
(bad)
mov
xor
lds
push
enter
sub
add
imul
out
sbb
fwait
retf
(bad)
in
xlat
aad
or
cli
lock
mov
rol
add
mov
jmp
enter
jl
inc
sub
test
and
call
or
sub
imul
fdiv
loopne
stos
adc
xor
push
test
mov
pop
cmps
inc
(bad)
adc
jmp
and
cli
dec
pop
push
cmps
xchg
mov
pop
stos
pop
cmp
jl
and
add
add
inc
add
pop
adc
pop
fwait
shr
cdq
inc
push
jns
jg
daa
repz
dec
xchg
stos
ins
mov
sbb
sbb
fcom
in
aas
dec
lds
adc
gs
fdivr
dec
aas
and
das
outs
mov
test
cmps
xor
outs
add
and
add
add
in
sub
repnz
mov
jne
xor
nop
jnp
pop
adc
sbb
fmulp
in
ins
pop
xchg
(bad)
pop
stc
(bad)
lods
mov
xchg
sub
pop
jecxz
jecxz
lea
sub
push
jo
outs
fs
shl
aas
in
fiadd
mov
nop
add
add
pop
mov
scas
cld
in
jle
or
mov
test
outs
pop
fist
in
xlat
mov
mov
xor
in
icebp
lea
ins
daa
das
js
mov
sbb
out
das
shr
sbb
aaa
xchg
ss
addr16
and
xor
daa
es
(bad)
xor
push
mov
inc
add
add
mov
outs
xchg
(bad)
rcl
(bad)
jno
xlat
cld
ins
lock
in
loop
sahf
icebp
stc
mov
fidiv
je
cmp
shr
add
inc
sbb
popf
hlt
dec
lock
aam
aad
dec
(bad)
repz
into
sub
cmp
sbb
hlt
fisubr
hlt
mov
sub
aas
push
mov
add
hlt
xor
mov
mov
loopne
add
xchg
shr
mov
push
data16
xchg
test
repnz
data16
inc
push
call
imul
mov
mov
adc
adc
mov
out
addr16
inc
out
leave
push
jmp
jg
xchg
in
cmp
xchg
add
add
lds
stc
and
add
xlat
or
jecxz
adc
push
loop
rcl
add
jmp
aaa
jle
jle
arpl
(bad)
idiv
stos
mov
adc
sub
mov
mov
or
imul
cmp
in
aad
sar
sar
ds
and
out
sub
sar
leave
movs
add
add
xchg
movs
mov
jns
jecxz
jmp
mov
div
xor
cwde
(bad)
sbb
xor
ds
nop
test
add
rol
arpl
dec
push
mov
ret
pushf
rcl
push
mov
jmp
jns
adc
lock
retf
or
push
mov
adc
fyl2x
loope
(bad)
jmp
add
adc
adc
add
rol
fwait
mov
lds
scas
fsubrp
push
or
adc
adc
xor
call
test
jnp
sub
add
xchg
dec
ja
std
rcl
adc
sbb
pop
shl
xchg
push
lods
push
pop
in
pop
cmps
pop
jo
mov
add
dec
mov
mov
lods
inc
pop
mov
cmp
call
out
rcr
xchg
cmp
add
dec
fstp
sub
cli
sbb
inc
mov
mov
(bad)
push
mov
jb
je
je
mov
pop
arpl
jae
push
rcr
mov
enter
jge
test
rol
add
jmp
and
loop
call
js
inc
ret
push
lds
xor
push
iret
repz
cmp
shl
ficom
movs
inc
xchg
push
int
fnstsw
jns
push
lods
mov
rol
cmp
push
(bad)
outs
inc
inc
dec
or
xchg
adc
dec
mov
mov
data16
add
cmp
outs
mov
mov
cmps
out
pop
and
lods
movs
mov
mov
and
dec
cld
std
dec
loopne
ret
and
mov
push
xchg
xor
scas
test
stos
mov
out
jnp
(bad)
int
jg
adc
pop
sub
retf
imul
ins
int
pop
add
add
push
daa
movs
inc
adc
scas
arpl
dec
retf
jge
mov
cdq
mov
mov
out
test
mov
enter
jo
jbe
push
inc
pusha
push
mov
and
imul
jb
(bad)
sub
mov
inc
adc
nop
sub
or
es
push
imul
jae
jae
gs
into
(bad)
in
add
add
jp
imul
push
xchg
cld
pop
cmp
arpl
repz
jp
pop
mov
pop
mov
(bad)
and
cmp
and
dec
sbb
movs
fisubr
fistp
xor
push
push
jmp
or
fild
ffreep
pop
call
or
nop
push
into
scas
stc
loope
sbb
dec
push
enter
add
jp
mov
or
daa
xchg
into
scas
rcl
pop
aaa
push
xor
cmc
cmp
lea
jbe
das
aad
and
movs
mov
div
rol
cmc
loop
add
push
cdq
popf
cmp
je
loop
in
push
inc
in
test
inc
mov
loopne
inc
sub
ins
retf
cmp
add
mov
xchg
or
mov
jle
pop
stc
outs
lds
sub
pop
push
dec
std
add
adc
scas
sti
bound
ss
pop
icebp
test
or
fild
test
or
mov
imul
mov
sub
cmp
add
add
(bad)
push
jae
scas
aas
mov
adc
pop
pop
loope
mov
dec
int3
jmp
adc
or
push
xor
sti
cmp
(bad)
jbe
fiadd
sub
pop
push
ror
daa
adc
adc
push
mov
popf
pop
fistp
xlat
(bad)
xchg
mov
movs
sub
call
add
ja
mov
int3
xor
jb
sti
hlt
push
jae
adc
aad
xor
mov
jae
or
fmul
sub
retf
ins
dec
aad
sub
int
sub
mov
and
push
daa
cmp
call
sahf
cmp
mov
adc
add
cmp
in
push
enter
push
jmp
mov
ds
outs
sub
push
cmp
fnstcw
sbb
pop
out
xchg
icebp
xchg
add
lahf
leave
push
stos
lods
jmp
push
push
and
jl
in
inc
retf
inc
xor
or
jmp
fld
jge
sbb
add
fistp
imul
mov
dec
mov
mov
push
inc
cwde
enter
popa
in
es
(bad)
jge
mov
push
xor
sub
shl
and
adc
cdq
xor
fiadd
or
adc
jmp
sbb
inc
jg
adc
sbb
add
add
xchg
dec
xchg
loopne
and
call
push
loope
inc
push
jnp
pop
gs
call
add
test
dec
enter
adc
test
scas
xchg
jo
inc
fcomip
loopne
or
out
outs
push
ror
xor
jmp
loop
ins
cmp
or
lods
in
push
jl
dec
hlt
push
add
add
call
mov
shl
inc
sti
loope
rcr
sbb
xchg
xor
daa
ret
sti
lds
add
call
lahf
call
mov
call
and
das
pop
call
jecxz
sub
cmp
pop
jmp
or
cmp
call
add
add
xchg
fadd
fstp
rcl
jae
cwde
jnp
in
movs
fld
adc
les
out
retf
(bad)
in
neg
and
xchg
sbb
jge
popf
in
or
rol
gs
xor
int
imul
push
jb
lds
push
ja
jb
fsubr
cdq
and
or
add
cmp
mov
test
add
mov
jmp
movs
fst
ror
ins
ins
sub
(bad)
push
and
xor
es
jecxz
cmp
pop
js
dec
(bad)
fild
test
repnz
or
rol
inc
cmp
xchg
daa
pop
xchg
mov
adc
ror
add
into
call
push
pop
mov
test
shr
bound
les
out
and
add
sbb
pop
scas
or
call
ffree
out
xchg
jbe
int3
scas
(bad)
sbb
mov
xchg
je
pop
movs
jmp
cli
adc
pop
mov
jmp
sti
sub
sbb
jns
add
add
jo
in
mov
test
jae
pop
add
inc
out
or
pop
pop
test
mov
iret
rcl
loop
pop
scas
add
xchg
inc
adc
sysexit
test
mov
mov
stc
cs
push
pop
cmc
pop
imul
retf
in
lahf
in
das
stos
fs
mov
stos
retf
dec
pop
iret
add
add
(bad)
out
repz
pop
sub
fisub
les
jmp
xchg
loopne
test
(bad)
mov
mov
out
test
adc
cli
push
mov
fucomi
sub
popa
rcl
jmp
sub
add
pop
jl
fdivr
jmp
das
movs
mov
push
mov
add
add
lahf
into
fidiv
daa
mov
or
out
inc
jmp
ins
sub
dec
inc
push
bound
adc
adc
dec
sar
lods
mov
in
call
and
mov
push
mov
ret
dec
les
popf
or
(bad)
cmp
arpl
xor
or
inc
pop
xchg
div
dec
jo
jae
ret
cmp
jg
jnp
add
sbb
je
repz
xchg
inc
mov
xchg
loope
jp
(bad)
mov
loopne
mov
loop
in
int
in
mov
jne
mov
adc
cmp
ret
dec
aam
rcr
sbb
sbb
adc
mov
cmps
rcr
cmps
bound
and
add
push
inc
retf
mov
outs
(bad)
popf
xlat
xchg
dec
xchg
xchg
push
or
lahf
dec
ss
fist
pop
jae
mov
jp
lock
sahf
push
stos
ins
retf
fcom
mov
jnp
jne
pusha
pop
sbb
or
and
mov
sbb
cld
adc
cmps
add
xchg
es
hlt
fstp
icebp
mov
add
dec
mov
or
jbe
xor
xchg
clc
imul
xchg
vcmpps
adc
clc
sbb
xchg
pusha
not
dec
xor
call
pop
sti
cmps
xchg
cwde
sahf
lods
out
test
sbb
and
lds
pop
fwait
test
test
cs
add
push
sub
arpl
(bad)
cli
call
jmp
pop
(bad)
jmp
out
loope
je
inc
mov
push
xor
mov
loop
mov
into
mov
sbb
outs
add
icebp
sbb
popf
(bad)
imul
pop
popa
in
mov
dec
fiadd
lds
pop
stc
call
add
leave
mov
push
xor
sbb
inc
jnp
jecxz
cmps
push
xor
jg
add
das
jmp
adc
mov
int
ret
mov
in
push
sbb
cld
or
push
xor
add
jne
jbe
sbb
mov
or
lods
clc
iret
xchg
retf
rol
add
loop
mov
dec
hlt
sbb
pop
push
fidiv
mov
inc
cmp
addr16
xor
or
push
jmp
mov
repnz
jne
pop
adc
jmp
movs
adc
mov
arpl
ror
push
test
sbb
xchg
push
mov
sub
or
test
add
in
and
add
sbb
adc
xchg
cmp
dec
mov
cmc
cmp
inc
pop
sub
sbb
jne
mov
pop
fnsave
push
sub
bound
nop
out
imul
adc
pop
fst
clc
add
dec
cmp
in
jnp
mov
xchg
mov
add
ja
fs
pop
lods
in
hlt
fisttp
add
(bad)
mov
sbb
ret
dec
cmc
les
mov
and
dec
icebp
cmps
mov
add
dec
xor
cld
fwait
stc
je
mov
scas
push
ss
and
repnz
sub
mov
mov
adc
mov
aaa
and
push
call
add
add
jne
or
shl
pop
cdq
pop
pop
xchg
cld
adc
jo
bnd
push
data16
push
mov
or
clc
sub
pop
add
mov
inc
jg
jmp
add
cmp
shr
retf
dec
enter
mov
retf
cmp
test
xchg
mov
add
add
out
lods
jmp
sbb
mov
fcmovbe
mov
pushf
jo
stc
scas
ins
pop
add
fist
lods
mov
xchg
pusha
sbb
add
xchg
test
sub
sbb
sub
ja
pop
test
imul
iret
cmc
inc
and
or
shl
and
add
mov
xor
dec
mov
jle
dec
inc
or
mov
jmp
xlat
ret
xor
sub
int
push
xchg
cli
movs
fisub
pop
clc
in
aas
not
iret
push
mov
sbb
lods
cmc
or
idiv
xchg
aas
retf
(bad)
dec
xchg
rcl
push
fwait
and
cmps
and
add
add
pop
cmp
shr
scas
js
retf
push
lds
add
xchg
fidivr
aaa
vpaddb
push
neg
adc
adc
sub
cdq
test
repz
xchg
add
scas
movs
push
scas
jae
xchg
push
aas
aaa
sub
movs
add
repnz
xor
add
add
mov
aas
mov
cmps
jecxz
sub
cwde
fcomp
inc
(bad)
jge
ja
stos
dec
and
jg
jge
fwait
or
ficomp
xchg
ret
in
fwait
std
js
pushf
jmp
pop
mov
fcmovnb
sub
outs
ret
sub
cmp
xchg
(bad)
out
inc
jl
dec
jne
push
sub
jmp
je
add
add
mov
shr
lds
pop
js
and
jg
adc
les
xor
rol
(bad)
or
mov
aas
fwait
js
in
inc
ror
pop
fmul
mov
adc
sub
sti
jge
fmul
dec
int3
int
sub
mov
and
mov
and
add
add
mov
xor
xchg
cmp
jne
mov
cmc
push
cdq
or
or
aam
stos
into
jae
inc
mov
outs
int
jns
push
mov
or
hlt
fsub
jae
test
(bad)
mov
aad
lea
outs
pop
jmp
mov
loopne
es
pusha
sbb
add
nop
mov
imul
mov
inc
rol
push
jns
xchg
sar
outs
jle
loop
and
xor
les
cmp
sahf
sbb
aaa
(bad)
pop
cld
cmps
push
fwait
jmp
jmp
xchg
repz
(bad)
out
cs
retf
sub
xchg
push
cmp
aaa
xor
mov
out
and
into
pop
stos
retf
pop
add
add
mov
push
pop
repnz
in
sub
pop
pop
push
loope
push
addps
ficom
jmp
and
sub
push
loopne
ins
stos
les
fwait
add
jecxz
jl
imul
sbb
jns
pop
clc
into
mov
adc
dec
push
add
add
push
repnz
or
sti
aas
pusha
mov
mov
es
rcl
call
stos
mov
pushf
pop
in
imul
fdiv
jmp
(bad)
mov
push
fcmovbe
adc
pop
jmp
sub
dec
or
adc
inc
push
call
add
dec
inc
jbe
add
inc
mov
sbb
(bad)
pop
push
dec
pop
std
out
popa
add
cmp
retf
pop
add
retf
mov
cmp
sub
mov
mov
pop
js
adc
cmc
fxch
jl
shr
gs
adc
mov
pop
push
mov
outs
adc
sbb
push
add
add
and
cmp
mov
mov
(bad)
inc
mul
sub
out
(bad)
outs
je
ror
jecxz
or
sbb
cwde
mov
mov
pop
fstp
adc
enter
cmp
cmp
xor
mov
jmp
jle
push
test
pop
mov
pop
mov
add
sar
sar
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
add
sar
jl
add
jl
add
jl
add
jl
add
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
rcl
add
gs
xchg
sub
rcl
add
adc
daa
add
adc
(bad)
jecxz
adc
inc
hlt
ret
xor
mov
adc
(bad)
jmp
(bad)
jmp
(bad)
push
adc
(bad)
jb
adc
add
adc
inc
out
ret
and
(bad)
or
(bad)
adc
(bad)
fidivr
mov
adc
(bad)
sub
adc
inc
add
adc
add
adc
add
mov
sbb
and
mov
add
dec
sbb
cmp
add
mov
pop
mov
pop
mov
adc
add
add
aaa
cld
xor
pop
mov
adc
add
mov
adc
cld
dec
adc
add
mov
adc
add
add
sar
out
jle
add
faddp
add
add
inc
jle
add
jle
add
add
sar
mov
add
add
ret
add
jl
add
add
sar
inc
ret
add
in
rol
pop
ret
add
xchg
rol
jge
add
jl
add
add
sar
jle
add
cmp
add
ret
add
jl
add
add
sar
jbe
cld
add
add
add
sub
add
adc
sub
cld
out
adc
add
adc
sub
rcl
cld
mov
push
pop
rcl
add
adc
sub
cld
xchg
cld
jle
sub
add
adc
sub
cld
push
outs
adc
dec
outs
sub
add
adc
sub
cld
outs
adc
jmp
(bad)
out
ret
jmp
aaa
adc
adc
(bad)
jmp
(bad)
jmp
aaa
xor
adc
(bad)
jmp
(bad)
jmp
aaa
adc
adc
add
adc
(bad)
out
ret
jmp
aaa
rcr
aaa
jmp
(bad)
out
ret
jmp
aaa
xchg
cs
aaa
add
sbb
add
sbb
add
mov
sbb
cld
adc
cld
jo
aaa
cld
call
sbb
add
sbb
add
sbb
cld
loope
aaa
cld
jo
aaa
cld
fcomp
mov
add
test
mov
sbb
add
ins
aaa
cld
lock
aaa
cld
test
mov
sbb
add
aaa
cld
popa
ins
aaa
cld
push
ins
aaa
cld
pop
sbb
add
mov
sbb
add
aaa
cld
push
ins
aaa
cld
lock
aaa
cld
sar
sar
sar
sar
push
jne
cld
push
push
aaa
cld
push
jle
add
jle
add
add
sar
sar
out
aaa
cld
fiadd
add
jle
add
jle
add
jp
add
jl
cld
mov
aaa
cld
scas
test
add
jl
add
jl
add
js
add
jl
cld
xchg
cld
jle
cmp
jbe
ret
add
jl
add
js
add
jl
cld
push
jbe
cld
dec
inc
cmp
inc
push
sub
add
adc
add
adc
ss
push
imul
rcl
add
adc
es
out
push
cld
out
sub
add
adc
sub
cld
mov
push
add
adc
sub
rcl
cld
mov
cld
xchg
lods
lds
mov
outs
push
rcl
std
push
push
dec
dec
push
jmp
(bad)
adc
adc
aaa
jmp
(bad)
push
sbb
push
push
push
jmp
(bad)
push
retf
adc
(bad)
jmp
(bad)
xchg
mov
(bad)
into
mov
adc
(bad)
adc
adc
(bad)
jmp
add
adc
push
lods
adc
(bad)
jmp
(bad)
xchg
test
(bad)
dec
mov
adc
ret
add
sbb
mov
sub
mov
sbb
mov
(bad)
ret
shufps
sbb
mov
push
les
push
sbb
mov
adc
add
add
jo
mov
adc
add
adc
add
pop
mov
adc
add
ja
add
adc
add
jae
add
mov
fidivr
add
into
das
add
xchg
add
fidivr
add
jbe
add
movs
ret
add
sbb
add
cli
pop
add
mov
add
sbb
add
mov
ret
pop
into
add
jle
add
jbe
add
dec
ret
add
pop
into
add
jle
add
inc
pop
add
lock
cwde
into
add
jl
add
rcr
lock
cwde
into
add
jl
add
adc
add
rcl
add
adc
sbb
pop
add
add
adc
sub
pop
rcl
add
adc
sub
add
adc
sub
add
add
adc
lods
add
ins
inc
add
lods
add
add
sub
add
adc
inc
add
mov
(bad)
add
ret
push
aad
rcr
mov
mov
jnp
sbb
lods
jbe
or
lods
(bad)
cmp
vpcmpeqw
jbe
gs
jbe
push
lods
(bad)
cli
dec
lods
jbe
inc
lods
(bad)
cli
cmp
fisubr
lods
jbe
sub
ficomp
lods
(bad)
mov
or
sti
add
add
sahf
jnp
push
aad
ror
jnp
push
gs
add
(bad)
add
add
mov
sbb
add
sbb
add
sbb
add
mov
sbb
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
add
fstp
into
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
inc
in
and
aas
jmp
ror
sar
push
shl
mov
mov
je
sar
add
or
sbb
and
push
out
sbb
dec
iret
pop
shr
cmps
sar
ror
sar
inc
into
stos
inc
sbb
mov
rol
inc
fsub
shl
inc
xor
xchg
rcr
rol
aam
into
sar
inc
adc
mov
push
popf
push
mov
push
scas
push
mov
xchg
pop
test
clc
jae
push
test
sbb
adc
jb
add
add
cmp
dec
push
gs
inc
push
stos
dec
ss
xchg
push
cmps
pop
es
hlt
push
adc
fisttp
push
clc
lods
gs
jge
fst
jecxz
add
jecxz
jmp
and
adc
pop
outs
call
adc
push
push
icebp
adc
(bad)
dec
push
jl
jle
test
(bad)
fidiv
(bad)
jo
mov
lods
add
add
inc
(bad)
cmp
stos
(bad)
dec
push
mov
dec
es
pop
inc
xchg
(bad)
ins
inc
fwait
(bad)
jg
add
dec
xchg
(bad)
sbb
fadd
xor
dec
(bad)
sbb
mov
outs
pushf
(bad)
pop
mov
mov
(bad)
push
pop
mov
(bad)
push
push
xchg
mov
pop
pusha
(bad)
stos
jg
(bad)
leave
addr16
sahf
xchg
add
add
dec
stos
je
inc
mov
outs
add
stos
add
pushf
jns
pop
popf
js
push
jg
add
out
lock
std
lock
dec
les
add
sar
add
push
add
jg
add
xor
add
xor
test
cmp
xor
cmp
data16
cmp
add
add
and
shl
add
mov
add
jmp
ror
rcl
ror
inc
jmp
shr
leave
ror
repz
lods
shl
cwde
rcl
ffree
sti
out
sar
rcr
stos
rcr
inc
add
ror
hlt
rcl
stos
ror
lock
out
cld
add
jl
inc
xchg
mov
and
adc
and
cmp
adc
dec
pop
lds
push
mov
push
ficom
scas
push
int
sti
adc
inc
push
imul
hlt
das
push
adc
jl
add
add
add
mov
lea
push
pop
gs
push
stos
pop
dec
push
mov
inc
push
jo
ja
ds
cs
les
popa
push
sbb
push
or
rcl
xor
pop
ins
(bad)
fsubr
mov
pusha
(bad)
mov
pusha
(bad)
mov
pop
mov
and
pusha
(bad)
and
add
push
pop
(bad)
fist
(bad)
loope
pusha
(bad)
aas
outs
cmc
lds
(bad)
push
pop
mov
(bad)
sti
(bad)
pop
mov
lds
dec
movs
mov
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
adc
add
adc
add
adc
add
adc
add
add
fcom
mov
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
sbb
add
sbb
add
mov
sbb
add
mov
sbb
add
mov
sbb
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sub
mov
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
outs
ret
add
ins
ret
ins
dec
mov
shr
shr
and
sub
test
pushf
push
mov
add
add
mov
shr
outs
mov
pusha
xor
pop
fsubr
rcl
inc
ret
inc
pop
stos
mul
das
stos
xchg
retf
add
bound
test
faddp
mov
inc
movs
outs
cdq
xor
cmp
inc
movs
push
cdq
mov
mov
add
add
mov
pop
rol
mov
and
sbb
pop
mov
cmp
fidivr
cmp
dec
in
ror
(bad)
repnz
loop
loope
(bad)
xchg
jecxz
mov
or
leave
xchg
jmp
jp
jnp
jmp
jnp
jmp
arpl
pop
(bad)
jmp
pop
in
movs
fdiv
mov
add
ret
pop
(bad)
jmp
pop
(bad)
jmp
int
sub
ret
pop
(bad)
mov
xchg
pop
aaa
stos
rcl
push
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
pop
mov
adc
aaa
cld
lock
add
adc
mov
push
mov
push
ret
add
call
adc
add
adc
mov
adc
mov
adc
mov
xchg
mov
xchg
inc
add
adc
add
adc
sub
add
add
in
add
cmp
not
mov
adc
add
in
add
in
add
pop
rcl
shr
sar
add
outs
ror
cmp
sar
pop
ret
mov
mov
sar
mov
data16
outs
push
cld
sar
addr16
shl
dec
push
mov
arpl
sar
addr16
xchg
jle
mov
push
les
xor
jb
jbe
aaa
mov
add
add
cmp
push
lods
adc
lods
or
ds
ds
lods
js
inc
lods
jno
xor
push
loopne
stc
cdq
movs
movs
lods
push
pop
xor
dec
push
ds
cmp
dec
stc
jne
sub
push
push
std
sub
rep
push
loopne
scas
adc
scas
adc
dec
loopne
scas
js
xor
jno
push
inc
add
imul
fsubr
mov
dec
iret
out
cmp
aaa
add
fwait
test
mov
sahf
scas
cmc
dec
mov
jmp
scas
aad
fistp
jmp
push
aad
sub
scas
popf
sbb
ds
push
aad
or
mov
jmp
push
aad
jmp
fabs
scas
pop
in
dec
jmp
push
aad
retf
pop
lds
dec
jmp
push
aad
rcr
cdq
fiadd
ret
jmp
push
aad
rcr
js
scas
add
mov
pop
adc
adc
pop
mov
ja
mov
ja
(bad)
adc
cmp
push
popf
mov
ja
mov
push
adc
jge
add
add
mov
sbb
(bad)
adc
in
je
test
jge
fld
(bad)
adc
in
mov
and
(bad)
adc
loope
mov
not
mov
cwde
push
jle
adc
jle
call
dec
ret
add
ds
mov
sar
or
ins
ror
outs
ret
add
ds
add
mov
ror
out
repz
out
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jle
add
jg
add
jg
add
jg
add
jg
add
jg
add
push
ins
add
xor
shl
rcl
add
aam
add
adc
add
adc
add
xor
add
adc
and
pop
rcl
add
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
rcl
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
push
aaa
jmp
rcl
mov
push
(bad)
lock
sbb
out
sbb
fdivr
sbb
cmc
sub
fisub
sbb
(bad)
fist
push
xabort
pop
(bad)
stc
mov
(bad)
(bad)
shl
add
daa
(bad)
(bad)
and
aam
sub
fnsave
mov
sub
add
das
(bad)
icebp
enter
movs
sbb
fiadd
jbe
fild
xchg
fadd
jns
in
jnp
jecxz
mov
in
jge
loope
nop
stc
fild
xchg
cs
test
add
xor
add
or
add
pop
test
add
add
add
das
or
add
or
add
or
add
or
add
or
add
(bad)
std
add
out
add
add
add
add
add
stc
add
push
test
xchg
push
add
xchg
jg
rol
dec
sar
dec
rcr
push
rcl
pop
ror
rcl
rcr
rcr
dec
and
sar
xchg
add
shl
rcr
rcl
shr
jle
xor
jne
jg
jb
lea
shr
pop
shr
pop
rcr
shl
pop
shl
rcr
outs
rcl
repnz
xchg
icebp
xor
xchg
lock
test
xor
cli
out
add
add
push
icebp
out
or
jmp
push
(bad)
cli
adc
mov
inc
adc
movs
jl
adc
mov
inc
adc
mov
jg
adc
cmps
je
adc
mov
xor
mov
mov
xchg
xchg
dec
adc
(bad)
push
add
add
(bad)
dec
cmp
mov
(bad)
mov
mov
jae
xchg
js
and
sub
(bad)
push
and
(bad)
dec
pop
add
xor
(bad)
cmp
sub
mov
xor
xchg
mov
imul
(bad)
xchg
pop
pop
(bad)
pop
push
pop
(bad)
outs
push
pop
(bad)
mov
add
sub
arpl
mov
and
mov
sbb
add
mov
add
jns
add
scas
sub
mov
cmps
cmp
lods
cmps
cmp
lahf
cmps
cmp
mov
cmps
cmp
lds
cmp
addr16
add
jnp
add
fdiv
add
push
cmp
(bad)
aam
add
or
add
add
ins
adc
add
push
cmp
adc
cmp
xchg
loop
add
call
aaa
add
in
add
ror
inc
fmul
cli
rcr
inc
aad
inc
test
std
rcr
shr
std
rcl
std
sar
std
add
add
jae
clc
shl
shl
sar
jb
sti
rol
out
shl
stos
xchg
shl
faddp
std
nop
fld
(bad)
out
xlat
sar
int3
shl
iret
rcl
cmp
add
enter
repz
add
jmp
adc
jge
(bad)
adc
add
adc
gs
ja
dec
jns
push
dec
imul
inc
pushf
adc
dec
popa
pusha
adc
dec
pop
adc
gs
inc
pop
push
adc
mov
adc
div
adc
xchg
jae
adc
(bad)
cmp
push
(bad)
and
(bad)
adc
add
pop
push
(bad)
adc
(bad)
jmp
test
out
xchg
(bad)
jmp
(bad)
jmp
aaa
jmp
(bad)
jmp
test
addr16
(bad)
jmp
gs
inc
out
jmp
(bad)
or
xor
jbe
inc
cmp
stc
xchg
test
sbb
(bad)
push
mov
push
mov
add
ret
add
pop
(bad)
bound
and
rol
push
retf
or
ffreep
nop
mov
cs
mov
call
out
push
icebp
shl
or
call
mov
and
mov
test
(bad)
bound
push
not
inc
pop
jno
mov
or
loope
iret
xchg
mov
add
add
(bad)
bound
in
sub
daa
or
rcr
outs
mov
ins
shr
out
rcl
xchg
sar
add
repz
rol
pop
mov
nop
inc
pushf
and
inc
push
inc
frstor
sar
pusha
mov
cmp
sub
scas
cbw
inc
fbstp
enter
ds
add
add
and
and
test
icebp
mov
fsubr
dec
mov
loop
popa
sar
add
dec
dec
rcl
xchg
xor
xor
sahf
xchg
data16
dec
xchg
mov
push
jl
adc
xchg
mov
inc
mov
outs
pop
push
jmp
push
push
mov
fimul
add
mov
cwde
add
add
loopne
pop
(bad)
lock
jo
xchg
gs
xchg
ins
hlt
pop
rcl
lahf
push
aas
pusha
mov
pop
cmp
imul
ds
mov
add
adc
push
or
cmp
mov
xor
dec
mov
scas
fsub
dec
aaa
jmp
movs
daa
arpl
add
movs
and
push
push
jns
inc
aaa
jmp
movs
xor
xor
push
xor
dec
ja
movs
push
jp
inc
aaa
jmp
movs
fwait
cmp
sbb
cdq
push
ja
mov
inc
bound
jmp
(bad)
bound
test
fld
add
cwde
xchg
dec
fbstp
fwait
aas
(bad)
popf
xor
cld
sub
mov
adc
bound
mov
push
xchg
jb
dec
mov
dec
mov
aaa
cld
call
adc
bound
popa
sbb
das
imul
xor
aaa
cld
test
mov
adc
bound
in
sbb
cmp
aaa
in
xor
add
add
xchg
mov
mov
mov
ret
add
cmp
add
(bad)
movs
std
pusha
mov
(bad)
in
fisub
xchg
cmp
add
cmp
add
mov
nop
repz
stos
in
adc
ins
gs
add
cmp
add
mov
ins
frstor
outs
or
sub
add
add
push
arpl
cs
add
cs
add
jg
jns
mov
das
les
sub
xchg
lahf
das
push
outs
xor
fs
add
adc
mov
aam
clc
call
pop
lahf
jbe
in
inc
dec
jmp
inc
sub
add
mov
dec
(bad)
gs
aaa
sti
lahf
cwde
inc
add
add
dec
std
jg
adc
sub
jns
mov
sahf
jp
jmp
jle
jo
mov
push
inc
or
sub
out
mov
(bad)
jge
xor
pop
push
mov
dec
sahf
add
mov
(bad)
jmp
mov
sub
jg
mov
retf
add
add
scas
vcmpss
jmp
mov
xchg
adc
(bad)
jmp
mov
aas
test
ret
adc
ret
retf
ret
retf
(bad)
adc
lds
js
mov
sbb
add
sbb
add
sbb
add
sbb
or
sbb
cmp
add
dec
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
or
sbb
or
sbb
sbb
sbb
sbb
sbb
cmp
sbb
sbb
sbb
or
sbb
or
sbb
sbb
mov
mov
pop
mov
push
mov
push
ret
push
mov
sbb
add
sub
add
sub
add
add
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
add
rol
inc
fistp
inc
pop
xor
rcr
sar
xor
mov
ret
add
cmp
xor
add
add
sub
xor
rcl
test
and
cld
pop
xchg
push
test
jge
push
mov
adc
sbb
shl
adc
test
es
test
jge
pushf
lods
enter
jge
xchg
enter
push
es
div
add
cmp
pushf
cmp
or
jge
or
jl
pushf
adc
ds
jge
pushf
or
or
jl
cmp
inc
retf
xor
aad
lods
adc
(bad)
jle
xchg
aaa
jle
xchg
mov
inc
sbb
aaa
lods
adc
popa
inc
jle
pop
aas
jle
xchg
sti
inc
aaa
loope
jle
fisttp
aaa
jge
jle
xor
add
push
jle
cmp
(bad)
jmp
(bad)
adc
dec
jae
jnp
daa
jle
jp
jle
jp
inc
retf
jno
jle
sti
in
(bad)
jb
jle
push
aaa
jle
pop
das
jle
add
mov
(bad)
mov
in
js
mov
jge
cmp
cmp
xor
(bad)
mov
in
je
fs
add
add
mov
cmp
jecxz
jge
pop
inc
(bad)
mov
in
je
data16
adc
mov
repz
(bad)
mov
gs
not
jge
mov
cmp
inc
mov
(bad)
mov
mov
je
adc
rcr
(bad)
mov
pop
xor
jp
xchg
jp
add
jbe
adc
add
add
ret
add
jae
cld
mov
xor
dec
mov
pop
mov
cmp
pop
mov
sar
xchg
jp
jecxz
mov
or
pop
mov
rcr
or
add
mov
shl
mov
mov
xor
cmp
pop
mov
outs
adc
add
adc
icebp
(bad)
and
icebp
mov
(bad)
mov
js
mov
sub
daa
push
icebp
mov
ds
lds
jl
(bad)
out
es
test
xor
xchg
rcr
ds
test
inc
daa
div
xor
mov
xor
lods
les
fsubr
add
(bad)
es
les
(bad)
ins
xchg
(bad)
ins
outs
xchg
aad
in
or
sti
aad
dec
jb
mov
aas
xchg
not
fld
or
(bad)
test
pop
dec
lea
jb
xchg
aas
bound
xchg
aad
lea
aad
jne
dec
ins
pop
ret
scas
cmp
xor
mov
aad
add
add
dec
(bad)
test
aas
cmc
mov
dec
bound
xchg
aad
sub
or
pop
xchg
scas
fucomp
mov
mov
adc
inc
enter
(bad)
cld
xchg
retf
mov
aas
dec
mov
push
sbb
add
inc
adc
inc
enter
(bad)
cld
mov
shl
je
dec
mov
test
(bad)
adc
dec
(bad)
cld
add
add
mov
mov
dec
mov
scas
dec
aas
add
enter
(bad)
cld
scas
cmp
je
dec
mov
aas
dec
mov
sub
adc
dec
(bad)
hlt
das
push
jge
aas
dec
mov
out
dec
mov
rcr
xchg
cmp
xor
outs
or
sub
pop
mov
push
fwait
or
cmp
xor
dec
pushf
pop
mov
add
add
pop
mov
ss
xor
mov
xor
push
fisttp
ja
cmps
pop
mov
cmp
xor
rcr
ja
aaa
pop
mov
into
mov
mov
sar
ja
inc
pop
mov
push
or
adc
ds
mov
adc
inc
fwait
add
add
jle
fwait
mov
test
icebp
iret
and
add
jle
fwait
or
fwait
or
fwait
enter
js
cs
mov
jge
fwait
pop
jge
mov
fs
jl
mov
cs
cmp
sub
mov
jl
pop
rcl
idiv
es
add
jl
mov
add
cs
jmp
aad
or
or
sti
or
cmp
fucomi
pop
aad
cmc
pop
aad
cmp
aaa
imul
and
mov
jle
mov
sub
push
mov
mov
bnd
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
das
mov
lds
(bad)
jmp
mov
adc
add
adc
add
adc
jo
mov
push
pop
sti
adc
fmul
movs
add
push
adc
mov
or
icebp
mov
mov
adc
inc
adc
add
adc
add
add
test
jo
mov
out
repz
mov
out
add
lds
xor
mov
out
cmc
and
mov
out
in
shl
adc
xchg
add
(bad)
sub
add
sub
add
sub
add
sub
add
sub
iret
hlt
rol
sub
add
sub
jle
adc
push
cld
cmps
inc
ret
add
sub
mov
shr
add
sub
ret
add
sub
add
sub
dec
add
adc
ins
add
adc
ins
add
adc
lods
add
adc
lea
add
add
adc
nop
add
adc
push
push
xchg
push
rcl
add
adc
add
adc
sub
add
adc
sub
add
adc
lods
pop
rcl
add
sub
jmp
(bad)
stos
xchg
push
(bad)
call
add
xchg
(bad)
lea
adc
(bad)
jmp
(bad)
jmp
(bad)
pop
mov
mov
xor
jnp
xor
fs
xor
sar
cmp
mov
xor
jmp
(bad)
jmp
(bad)
jmp
lds
push
(bad)
add
add
mov
mov
dec
cmp
mov
ins
cmp
push
add
push
add
std
mov
sub
add
add
mov
add
push
cmp
push
jo
add
pop
cmp
call
pop
outs
add
pop
push
add
pop
mov
call
in
cmp
lahf
mov
add
mov
add
add
pop
push
cmp
sub
add
cmp
cmp
pop
sbb
in
outs
add
and
jb
and
(bad)
inc
pop
push
inc
nop
mov
inc
mov
inc
(bad)
fdivrp
rcl
inc
scas
rcr
push
ret
push
ret
test
shr
sar
inc
retf
mov
shl
inc
add
rcr
inc
repz
shr
inc
and
ffreep
mov
mov
stos
rcl
ins
ret
push
rcr
repz
loope
sub
mov
and
sub
imul
jmp
pop
jecxz
cld
pop
or
fld
xchg
adc
pop
xchg
add
push
jle
adc
inc
mov
add
add
adc
dec
add
adc
sbb
mov
adc
clc
xchg
cs
call
mov
loop
rol
rcl
add
adc
(bad)
jns
adc
(bad)
in
dec
(bad)
fld
add
int
mov
lds
add
add
hlt
lds
or
aaa
arpl
adc
(bad)
cmp
aaa
test
add
rcr
lds
faddp
pop
pop
cmc
lds
push
(bad)
cs
mov
xor
mov
mov
(bad)
and
or
(bad)
or
mov
fnclex
add
add
(bad)
fcmovnb
add
mov
cmps
lds
sbb
cld
test
aaa
cld
sub
adc
mov
add
inc
add
fld
xchg
fnclex
add
clc
lds
ret
add
mov
aaa
cld
dec
fs
cld
jnp
adc
cmps
(bad)
inc
fild
(bad)
fld
aaa
fnclex
add
add
and
lds
frstor
lds
shl
scas
es
cmps
adc
shl
push
in
dec
rcr
and
cmp
add
cmp
add
cmp
add
cmp
add
cmp
cld
dec
cmp
(bad)
loop
int
mov
mov
shl
jb
pop
mov
cmp
push
sar
add
add
cmp
cmp
cmp
sub
cmp
and
cmp
adc
shr
xlat
rcl
rcl
dec
imul
and
adc
sub
xlat
clc
adc
jns
jl
pop
dec
je
lahf
dec
ins
adc
cmc
dec
pop
adc
sub
and
adc
add
sub
xlat
mov
sub
push
adc
push
cs
push
cmp
adc
inc
add
inc
sahf
sbb
fwait
jbe
adc
(bad)
mov
stos
lds
mov
mov
ret
lds
mov
out
(bad)
loopne
(bad)
shufps
sbb
jmp
sub
jmp
add
mov
and
aad
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
and
xchg
xchg
(bad)
sub
jmp
sub
jmp
sub
jmp
sub
jg
and
in
and
pop
sti
sub
jmp
sub
jmp
sub
jmp
sub
add
cs
sti
mov
aaa
add
adc
add
adc
or
add
shr
sub
test
lds
add
fidivr
sbb
cmp
sbb
adc
add
aaa
add
xor
or
sub
imul
enter
cmp
add
into
sbb
cmp
pop
and
rcr
icebp
ds
or
adc
add
adc
add
fidivr
in
add
add
sub
sbb
dec
jecxz
mov
xor
leave
in
adc
mov
and
ret
cmp
mov
lahf
adc
sbb
sub
adc
and
adc
cs
push
xor
mov
inc
sub
stos
fs
cld
sar
in
pop
xchg
nop
in
adc
add
mov
sub
lods
inc
sub
mov
sub
stos
inc
sub
fcom
sahf
dec
test
dec
ficom
cs
fistp
jg
xlat
cmp
in
rol
cmp
rol
das
out
aam
aaa
out
scas
or
jmp
xchg
and
push
jmp
jle
add
cs
pop
cmp
push
push
cmp
in
mov
sbb
add
add
add
push
movs
or
jmp
and
dec
push
xor
xor
iret
or
dec
adc
add
adc
mov
sar
out
iret
hlt
fdivr
iret
std
call
or
sub
xor
fild
fst
mov
sub
jmp
aaa
sub
add
fbld
add
pushf
add
(bad)
add
shr
(bad)
and
shl
and
jmp
sub
jmp
aaa
sub
aam
sar
fdivr
iret
hlt
enter
jmp
fdivp
mov
loopne
out
cmp
or
sbb
or
aaa
add
in
daa
not
add
adc
add
adc
add
add
jmp
sbb
fild
out
mov
or
sbb
adc
add
in
shr
add
adc
(bad)
adc
adc
push
or
adc
fild
out
jl
cmp
or
adc
out
retf
add
adc
add
in
xor
rol
lods
dec
ror
call
add
add
aas
fcom
into
leave
iret
out
fstp
out
into
daa
fcom
mov
sti
cld
sar
lock
ror
pop
int3
sub
adc
pop
out
xchg
adc
sti
mov
fst
mov
sar
scas
inc
fst
sar
adc
fsubr
mov
aam
lods
dec
rcl
mov
aas
fst
add
add
adc
dec
xor
add
sbb
push
add
push
cmp
add
sbb
add
adc
jmp
sbb
cmc
sub
add
cmp
push
lock
add
adc
mov
add
(bad)
aaa
sbb
cmp
push
mov
pop
sbb
aaa
ret
ss
adc
add
add
add
adc
push
sub
add
cmp
cmc
sub
enter
leave
add
xchg
aaa
sub
sbb
retf
out
and
out
mov
es
jmp
es
jmp
add
cld
mov
add
fsubr
repz
inc
lock
cmp
es
mov
add
icebp
xor
adc
and
jmp
and
jmp
and
jmp
or
(bad)
cmc
sub
cmps
xor
aam
xor
fidivr
xor
mov
or
xor
pavgw
or
sbb
add
sbb
add
sbb
add
loope
adc
xchg
in
out
ss
sub
mov
in
inc
hlt
sub
ja
sub
mov
rol
das
add
add
jmp
sbb
add
sbb
add
loopne
adc
cmc
out
in
(bad)
hlt
sub
lahf
jmp
sub
xchg
repz
mov
rol
xor
imul
aaa
add
aaa
add
in
shl
fs
imul
pop
dec
call
in
cs
repnz
sar
repnz
(bad)
xor
push
xor
cmc
shr
shr
cld
shr
in
in
cmc
in
(bad)
out
mov
(bad)
out
out
icebp
icebp
shl
shr
fmul
cmc
shr
cld
shr
pop
scas
aaa
icebp
in
movs
and
in
lahf
or
repz
push
aad
jae
rol
adc
push
or
add
add
add
dec
push
add
cmp
push
sbb
daa
xor
pop
xor
aaa
mov
sbb
mov
pop
mov
or
adc
add
adc
cs
adc
and
jmp
cs
and
mov
(bad)
xor
and
xor
(bad)
xchg
adc
add
add
xchg
(bad)
stc
cmps
xor
cld
pushf
sbb
fist
and
rcr
mov
xor
nop
daa
xor
hlt
sub
jmp
and
jmp
and
jmp
and
jmp
add
xchg
xor
jl
sbb
xor
daa
xor
jnp
daa
xor
mov
xor
xchg
sub
jmp
and
jmp
and
jmp
and
jmp
add
cli
add
fcom
add
cmp
(bad)
xor
sbb
and
adc
or
stc
shl
xor
mov
xor
fwait
jmp
add
aaa
add
aaa
add
aaa
add
rcl
pop
or
in
push
(bad)
adc
sub
or
sub
std
in
shl
in
hlt
inc
out
adc
in
add
sbb
add
sbb
add
sbb
add
fadd
adc
add
sbb
(bad)
in
jo
(bad)
adc
sub
jge
daa
in
mov
daa
repz
das
hlt
add
cmp
add
sbb
add
sbb
rcl
xchg
or
out
ins
adc
call
pop
and
out
push
inc
in
out
push
ds
repnz
inc
cmc
cld
shr
cld
shr
icebp
add
add
inc
aad
loope
fucomip
sub
cdq
in
in
pop
mov
in
out
icebp
popf
ret
push
shl
ret
sub
sti
or
fldlg2
cmc
stos
and
fist
xlat
or
in
in
lahf
fucomip
out
xchg
push
shr
xchg
and
cmps
push
and
mov
cs
xchg
cs
jle
cmp
ret
std
adc
leave
std
les
mov
push
aaa
adc
das
adc
xor
and
retf
es
push
add
push
add
push
xor
sub
inc
xor
std
and
fld
adc
int3
push
sbb
xlat
pop
movhlps
hlt
int
in
and
cs
adc
add
xor
inc
in
or
aad
or
std
add
add
or
std
mov
shl
mov
rcr
iret
add
retf
(bad)
push
(bad)
jmp
push
(bad)
jmp
push
int
sahf
xor
fdivr
rcr
rol
rcl
mov
rcl
rol
sar
iret
add
retf
int3
jmp
push
(bad)
jmp
push
(bad)
jmp
push
das
lea
or
aad
pop
sar
mov
shl
add
add
add
or
pop
rol
popf
or
push
lea
daa
sti
cdq
sbb
add
sbb
sti
call
adc
pop
rcl
lea
and
rcl
imul
adc
dec
cmp
imul
aaa
add
aaa
add
adc
hlt
add
rcl
or
adc
or
adc
or
add
clc
or
pop
sub
iret
adc
or
adc
add
adc
add
push
das
hlt
pusha
or
adc
sbb
push
scas
and
adc
int3
inc
(bad)
adc
push
(bad)
pop
int
stc
or
and
push
xchg
sti
out
shr
cld
ins
adc
and
mov
sbb
adc
(bad)
pop
add
add
adc
imul
push
sti
div
cmp
cld
shr
cld
shr
test
sti
sti
stc
call
(bad)
xchg
(bad)
pop
int
shl
adc
sub
into
adc
pop
(bad)
adc
pop
mov
push
cs
scas
push
cs
cmps
push
cs
sahf
push
cs
(bad)
and
sub
mov
aad
add
add
cs
jbe
cs
outs
push
cs
pushw
cs
pop
push
and
sbb
pop
test
sub
push
rcr
pop
shl
pop
rcl
dec
sbb
rcl
pop
rcl
jb
adc
(bad)
bound
adc
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
add
fchs
lds
jo
mov
loopne
add
mov
loopne
add
mov
loop
add
adc
lds
lock
add
adc
add
adc
add
lds
rcl
pop
loop
add
mov
loop
add
mov
in
add
mov
fs
cld
add
mov
and
cld
add
add
mov
fs
cld
pusha
adc
add
fs
cld
rol
add
sahf
rol
sub
rol
sub
rol
cs
add
into
rol
cs
add
out
rol
cs
cmps
out
rol
cs
xchg
scas
rol
cs
xchg
rol
cs
jbe
ret
daa
hlt
add
pop
hlt
ret
add
add
daa
hlt
add
push
ret
push
ret
add
push
ret
sub
ret
add
out
int
shr
add
cs
add
adc
sub
add
adc
sub
add
cvtps2pi
sar
add
in
add
leave
sub
sar
rol
add
fldcw
shl
add
or
rcl
rcl
add
adc
add
or
cld
retf
in
push
neg
inc
retf
dec
pop
add
imul
jmp
shr
ret
jmp
(bad)
jmp
repz
jecxz
sub
xchg
cmp
and
add
popa
sub
and
aaa
adc
dec
aaa
cmps
addr16
pop
jns
daa
in
rol
jmp
sub
adc
vcmpss
scas
das
(bad)
and
sub
mov
sub
(bad)
sub
push
aaa
adc
sub
add
stos
and
fdivr
clc
sti
add
ret
sub
mov
add
sbb
(bad)
or
adc
push
stos
push
xchg
mov
or
add
sub
adc
mov
cld
(bad)
mov
sub
ret
jne
cld
ret
jne
cld
ins
mov
shr
sbb
sbb
xchg
addr16
xor
xor
adc
cld
push
enter
jb
cld
mov
add
add
dec
jge
and
call
push
or
cmp
aas
inc
add
call
xchg
call
fiadd
lods
(bad)
popa
push
cwde
into
dec
xchg
mov
mov
int
jns
pop
cmps
call
sahf
pop
xchg
call
mov
ret
inc
add
ret
add
add
call
mov
pop
jns
mov
xchg
fmul
add
adc
push
sbb
push
sbb
inc
add
mov
adc
arpl
adc
pop
sub
jge
adc
or
pop
call
pop
fist
in
pop
xlat
adc
jns
adc
lods
xor
xchg
mov
adc
pop
ficom
xchg
pop
cmps
adc
inc
adc
mov
add
inc
adc
inc
adc
movs
adc
cmps
adc
adc
or
push
pusha
test
imul
jno
pop
push
push
adc
popf
jmp
aad
add
int
add
lods
jg
ss
fnstenv
sbb
lods
add
aaa
sbb
iret
ss
mov
ins
jmp
jb
add
sti
add
add
pop
aaa
sti
add
ss
mov
aaa
push
stc
or
and
fbstp
ret
ss
add
aaa
mov
inc
cmps
ss
mov
out
cmp
xchg
push
loopne
add
push
xor
rcl
cld
loope
xor
sti
je
cld
bound
cld
and
cld
pop
push
or
xchg
jb
cld
mov
xor
add
add
pop
sub
fcmovu
mov
sbb
mov
(bad)
push
call
mov
sub
mov
cld
mov
cld
sar
arpl
inc
js
cld
pop
xchg
dec
cld
or
push
cld
dec
push
cld
pop
mov
mov
adc
mov
inc
add
mov
dec
mov
pop
outs
push
dec
mov
add
add
in
dec
inc
in
inc
mov
hlt
ds
hlt
movs
fcomip
movs
fcomip
es
fcomip
push
jge
mov
ds
add
inc
add
inc
add
inc
add
inc
jp
mov
or
imul
cli
mov
push
(bad)
scas
xchg
test
cmps
jmp
adc
ret
add
mov
ret
adc
sub
add
adc
sub
add
adc
arpl
mov
mov
rol
add
and
sub
add
adc
sub
add
out
lods
add
or
add
adc
add
adc
(bad)
adc
add
push
sub
add
push
sub
push
push
(bad)
push
push
(bad)
sub
or
sbb
ds
(bad)
retf
(bad)
stos
ret
jmp
xor
(bad)
push
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
shr
ret
jmp
aam
ret
jmp
(bad)
jmp
mov
adc
add
adc
add
adc
add
(bad)
or
(bad)
push
pop
adc
sbb
(bad)
sbb
(bad)
adc
(bad)
or
mov
adc
add
add
sub
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
fcom
(bad)
push
call
adc
push
fcom
(bad)
ds
(bad)
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
ret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
sar
add
rcl
and
hlt
xor
adc
ret
adc
sub
rol
shl
ror
sar
add
sub
add
dec
les
fsub
sbb
mov
sbb
xchg
out
adc
test
idiv
sub
sar
rol
rcr
add
push
sub
add
adc
sub
add
adc
in
mov
mov
dec
or
sbb
add
jmp
or
out
or
cmp
ss
mov
test
push
and
mov
sbb
ret
jmp
lahf
fidiv
pop
and
fimul
ss
(bad)
ss
loop
cmps
sbb
and
jmp
cmc
jmp
(bad)
jmp
add
adc
(bad)
jmp
fnstsw
or
mov
cmp
cmp
xor
cmp
cld
dec
inc
cmp
sbb
cmp
out
push
sbb
imul
(bad)
cmps
lock
enter
stc
ins
push
sub
arpl
cld
sbb
add
and
add
add
pushf
or
imul
ret
push
(bad)
popa
sbb
(bad)
pop
sub
mov
push
mov
push
mov
push
mov
aad
dec
xchg
ins
ins
cld
ss
adc
ror
aad
xchg
fucomp
(bad)
mov
std
into
(bad)
(bad)
mov
mov
movs
(bad)
imul
test
fyl2xp1
xchg
xor
dec
add
xchg
cdq
loop
add
call
outs
mov
inc
sbb
je
shl
call
ds
adc
cmp
ret
inc
add
inc
add
inc
add
xor
inc
mov
add
aas
stc
or
push
iret
or
retf
or
and
add
add
or
mov
inc
cmp
or
outs
jnp
imul
or
push
pop
jle
or
jmp
in
inc
or
arpl
or
pusha
or
or
or
xchg
inc
or
add
pop
sub
add
adc
(bad)
jmp
add
push
lea
shl
jle
stc
ss
pop
aaa
cmp
add
add
aaa
inc
test
ss
add
popa
lock
imul
retf
inc
mov
ss
out
cli
ss
call
xchg
ss
ss
loope
ss
ss
out
leave
ss
ss
cli
ss
add
scas
fdiv
pop
push
xor
jmp
rol
sbb
mov
adc
add
adc
add
jle
and
sbb
jo
jle
push
ss
aaa
sub
cld
xor
ds
cld
dec
xor
inc
dec
xor
sub
cld
cs
jae
xor
cld
test
cld
je
sub
and
inc
cld
add
add
je
cld
int
and
mov
ja
cld
inc
test
push
cld
fs
cld
in
sub
mov
jmp
cld
ret
cld
ret
cld
ret
cld
ret
xor
inc
js
cdq
mov
fidivr
add
out
into
xchg
xlat
inc
mov
jmp
sti
scas
xor
cmps
mov
sahf
outs
mov
xchg
in
jg
mov
mov
jle
mov
jbe
mov
outs
int
out
data16
push
add
call
inc
mov
out
ds
mov
cs
out
pop
adc
fst
out
aam
add
push
sub
add
adc
sub
retf
or
imul
scas
add
add
pop
pop
rol
sbb
add
and
cmps
sbb
test
icebp
sub
add
dec
xchg
add
xchg
add
inc
outs
add
inc
data16
inc
pop
add
inc
push
add
and
fcom
push
add
adc
aas
jno
add
inc
cs
add
ss
fwait
out
adc
adc
add
adc
(bad)
jmp
(bad)
es
push
lea
cwde
adc
aaa
push
or
fwait
mov
test
push
stos
fimul
aaa
mov
fimul
aaa
dec
ror
aaa
pop
mov
aaa
aas
shr
sub
fdiv
int
(bad)
outs
or
aaa
addr16
or
outs
sti
or
dec
jecxz
adc
or
add
add
(bad)
mov
dec
xor
movs
dec
xor
movs
dec
xor
jns
dec
cld
adc
int
sub
(bad)
sbb
pop
mov
pop
mov
push
mov
push
mov
int
dec
jp
fs
sub
xor
sub
xor
ds
cld
idiv
ds
add
xor
sub
cld
and
push
ss
add
cs
cmc
cmp
cld
add
add
sub
cld
clc
dec
xor
and
lahf
mov
inc
xchg
aas
mov
dec
icebp
cmc
ss
icebp
cmc
arpl
xor
out
ret
in
ret
in
ret
in
ret
in
ret
cmp
inc
js
pop
fisub
mov
(bad)
sub
in
(bad)
xchg
fdivr
mov
add
mov
icebp
cmc
scas
pop
repz
jb
neg
je
out
mov
out
dec
jecxz
jle
mov
jbe
push
jbe
jl
in
pushw
mov
and
xchg
and
xchg
and
and
add
inc
or
push
mov
repz
rol
ror
rcl
add
adc
add
adc
mov
dec
int
movs
dec
aad
pop
pop
rol
mov
xor
add
inc
xchg
add
cmps
add
cmp
cmp
add
aas
cdq
add
daa
clc
int3
ss
xchg
test
mov
aaa
aas
cwde
(bad)
ss
cwde
(bad)
ss
hlt
ss
mov
dec
push
add
add
sbb
jmp
vcmpss
jmp
(bad)
jmp
lea
ss
add
jp
add
jge
bnd
add
ss
jmp
ss
icebp
loop
xor
int
sub
shl
sub
ss
(bad)
add
inc
adc
int3
cs
enter
lds
cld
add
add
push
ds
fist
scas
cld
jl
repnz
and
into
sbb
(bad)
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
inc
inc
xor
push
inc
xor
inc
sub
cld
push
sub
and
push
aas
sbb
dec
dec
push
cld
out
push
add
add
add
test
mov
jle
mov
jbe
mov
outs
xor
retf
pop
xor
rcl
mov
inc
outs
mov
sbb
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
cmp
inc
mov
(bad)
dec
sti
test
add
pop
mov
(bad)
jg
out
mov
pushf
std
fisubr
mov
jmp
cmp
pop
dec
std
push
pop
dec
std
in
xchg
mov
outs
sbb
inc
gs
mov
inc
cmp
xchg
pop
push
std
test
pop
std
and
fld
sub
ror
ror
add
adc
sub
rcl
add
adc
sub
ret
or
or
inc
pop
sbb
aam
dec
cld
inc
sub
cld
bound
mov
lds
(bad)
cmps
clc
shl
repnz
ss
repnz
lea
mov
ss
(bad)
ss
mov
ss
cli
mov
ss
lock
add
mov
sbb
mov
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
add
imul
ss
in
repnz
sbb
popa
cmp
cld
dec
inc
adc
bound
cld
pop
popa
js
sub
cld
ds
cld
test
add
cmp
jp
inc
pusha
jge
jmp
push
cld
add
(bad)
cld
sti
ja
cld
cmc
jne
cld
mov
push
cld
and
fidiv
sbb
(bad)
movaps
mov
pop
mov
pop
mov
pop
mov
push
mov
push
mov
push
mov
push
mov
aad
dec
push
push
cld
pop
xchg
mov
rol
fnstcw
mov
aam
add
scas
inc
xchg
mov
pop
mov
sahf
cmp
mov
xchg
test
jbe
sahf
test
xchg
xchg
mov
pop
nop
movs
cmps
push
dec
cdq
cmps
dec
gs
movs
inc
push
stos
movs
ds
mov
idiv
add
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
add
shr
add
xor
inc
mov
fs
stc
push
sbb
stc
jo
jge
stos
add
adc
stc
dec
pusha
popa
stc
mov
jb
stc
push
xchg
hlt
clc
mov
cmp
cdq
jne
stc
inc
gs
mov
push
and
scas
ja
stc
xchg
xchg
and
enter
shl
add
add
daa
sub
add
adc
add
adc
sub
add
adc
(bad)
jmp
lea
sti
ss
iret
sti
ss
hlt
add
aaa
jnp
call
aaa
ja
add
pop
mov
ss
jecxz
ss
fucomip
ss
stos
out
sbb
mov
ss
add
outs
cmp
xchg
push
jnp
xchg
inc
jge
jecxz
pop
push
jmp
stos
jmp
shr
adc
(bad)
jmp
mov
adc
add
adc
add
inc
push
cld
and
cmp
cld
daa
test
dec
inc
pop
cld
inc
or
push
sbb
xor
add
add
xor
cld
repz
sub
cld
or
and
cld
mov
sub
cld
lods
ds
mov
cld
xchg
ss
nop
dec
jle
jle
pusha
cld
sahf
mov
cld
lods
mov
xchg
sub
(bad)
sbb
mov
adc
add
in
ret
in
ret
in
ret
in
ret
in
ret
out
aas
jg
repnz
add
add
mov
hlt
fidiv
sbb
sahf
pop
test
xchg
push
cld
repz
xchg
fucomip
jle
out
out
dec
loop
outs
xor
fbld
jmp
sbb
test
sub
ss
pushf
mov
pushf
jb
and
in
ret
adc
sub
rcl
add
adc
sub
add
adc
into
mov
dec
push
dec
mov
cmc
in
jnp
cmc
add
in
popa
stos
cmc
loop
cmps
cmc
fistp
cmc
add
cmc
add
cmc
inc
cmc
mov
xor
mov
ss
loope
jb
bnd
fimul
cmc
jmp
add
add
xchg
cmc
inc
lea
nop
vcmpss
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
push
nop
stos
push
test
cli
ss
adc
ss
or
ss
or
ss
add
xbegin
add
rol
add
add
imul
ss
xchg
call
ss
fwait
jmp
in
ss
into
add
fdivrp
jmp
sub
mov
(bad)
or
sbb
add
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
(bad)
cmc
dec
cmp
cld
das
adc
cld
fs
add
leave
jb
cld
(bad)
pop
xor
sbb
xor
hlt
and
cld
jmp
xor
xor
cld
inc
inc
xor
inc
inc
xor
cmp
cld
push
inc
xor
jmp
xor
lock
xor
repz
xor
cwde
inc
ds
rol
cs
stc
xor
dec
std
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
add
sar
add
xchg
aam
push
xchg
mov
sbb
repnz
jge
neg
push
hlt
lock
cmc
xchg
call
hlt
outs
cmp
stc
or
pop
aaa
sar
push
xor
inc
adc
mov
sub
xchg
and
repnz
repnz
mov
add
sub
shr
es
add
adc
sub
add
adc
loope
jp
aam
inc
repnz
push
test
icebp
fld
icebp
into
inc
mov
lods
cmp
icebp
cwde
xor
icebp
push
sub
das
jns
push
and
fistp
imul
sbb
icebp
jecxz
push
icebp
(bad)
add
ss
mov
cmc
out
push
jmp
in
ss
fsubrp
xor
lahf
ss
mov
ret
jmp
(bad)
jmp
(bad)
jmp
in
add
sbb
jp
inc
dec
mov
ss
sub
ss
cld
(bad)
add
(bad)
ins
cld
(bad)
ss
add
add
out
xchg
scas
jmp
cmps
call
add
or
cld
test
mov
lods
push
ja
bound
inc
in
mov
adc
ret
icebp
sbb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
test
mov
adc
add
scas
lea
shl
add
imul
jle
das
aam
mov
stos
jle
rcl
jge
into
inc
jge
stos
dec
jle
dec
lods
cmps
dec
shl
loopne
pop
jmp
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
add
sar
add
cld
ret
cld
ret
fadd
repz
aam
inc
ret
add
fadd
add
pushf
rol
pushf
rol
pushf
rol
pushf
rol
pushf
rol
pushf
rol
pushf
rol
pushf
rol
adc
lea
rcl
pop
rcl
pop
rcr
pop
ror
pop
ror
pop
ror
pop
ror
pop
ror
pop
add
add
push
int
rcl
pop
rcl
pop
rcr
pop
rcr
pop
rcr
pop
rcl
add
push
lods
add
push
lods
add
push
pop
add
out
aam
rcl
pop
rcl
add
adc
sub
rcl
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
shr
ret
jmp
retf
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
mov
sbb
add
sbb
or
(bad)
adc
(bad)
push
pop
sbb
adc
(bad)
punpckhbw
mov
sbb
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
add
call
pop
mov
pop
mov
pop
(bad)
or
pop
(bad)
pop
sar
add
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
add
(bad)
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
rcl
add
add
es
not
ins
shl
(bad)
aad
ret
mov
mov
rcr
add
dec
sub
add
cmp
add
add
add
pop
(bad)
jmp
(bad)
jmp
(bad)
jmp
aam
ret
jmp
add
dec
enter
sbb
aas
or
imul
gs
mov
ret
jmp
int3
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
adc
adc
add
dec
add
add
dec
test
pop
popf
inc
cld
push
stc
push
cld
outs
fadd
cld
adc
movs
cld
inc
push
clc
in
cmp
shl
pop
adc
test
(bad)
jb
adc
pop
pop
adc
inc
pop
adc
sub
adc
and
adc
adc
adc
add
adc
add
test
mov
das
ja
cld
sbb
pop
cld
add
add
cdq
addr16
sar
cwde
(bad)
xor
cmp
mov
ret
std
ret
std
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
sbb
xchg
dec
sub
adc
add
add
add
lock
add
(bad)
push
sbb
dec
adc
inc
push
sub
(bad)
and
test
adc
loop
fwait
cld
lds
sahf
ret
mov
sub
sar
ror
add
inc
sub
add
sub
and
(bad)
in
jl
out
stos
popa
out
lods
imul
lods
pop
out
mov
out
mov
add
imul
mov
out
mov
out
cmps
outs
out
jno
out
inc
div
pop
or
movs
sub
shr
shr
add
pop
sub
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
leave
sti
xchg
ss
jo
lahf
ss
xchg
leave
ss
xchg
jmp
add
loop
mov
loope
nop
js
ss
jecxz
ins
shl
gs
push
imul
xchg
push
mov
ss
out
dec
cmp
call
sub
(bad)
adc
ret
shr
sub
aaa
iret
(bad)
int3
add
mov
cld
add
sub
xor
jge
mov
movs
sub
add
add
movs
sub
ret
movs
sub
jmp
inc
mov
scas
adc
mov
sbb
jnp
sbb
xor
sbb
add
mov
sbb
add
mov
sbb
add
mov
sbb
add
pop
neg
mov
cld
aad
adc
aad
adc
in
adc
mov
xor
ror
dec
daa
xor
add
add
sub
cli
(bad)
cs
imul
and
out
daa
and
out
sub
(bad)
daa
clc
(bad)
fdivr
stc
into
shl
inc
fidiv
(bad)
mov
pop
jb
scas
jp
and
leave
pusha
jecxz
enter
fsub
jle
jmpw
jmpw
pop
iret
data16
bound
xchg
push
or
dec
or
inc
sbb
add
add
sbb
ss
pop
iret
es
imul
pop
add
shl
rol
add
adc
add
adc
sub
add
adc
sub
inc
jg
mov
aad
loop
aad
loop
aad
loop
aad
loop
hlt
xchg
loop
dec
loop
out
loop
jmp
add
outs
loop
loopne
loop
fisubr
push
jecxz
loop
fmul
scas
aad
loop
ror
jecxz
loop
in
loop
dec
xor
ss
stos
outs
aaa
fdivr
shl
rcr
rcl
shr
shl
ss
cmc
ss
mov
mov
xor
inc
nop
ss
call
jno
add
ss
add
add
ss
push
in
sub
ss
xor
jmp
into
jmp
(bad)
jmp
(bad)
jmp
(bad)
movs
cld
push
dec
add
mov
push
cld
sar
cld
lods
out
cld
mov
cmp
into
repnz
cld
mov
das
cld
scas
hlt
cs
add
add
shl
dec
ret
push
(bad)
xor
dec
(bad)
xor
xor
into
xor
sbb
xor
cld
in
pop
pop
cld
mov
mov
sub
cmp
cld
mov
sbb
ss
js
rol
jnp
mov
outs
jmp
cs
jmp
add
add
repz
jmp
push
clc
int3
or
fwait
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
cmp
mov
sbb
scas
test
aam
test
aam
aad
aam
mov
inc
lods
push
cmc
jbe
and
outs
sbb
push
maskmovq
neg
dec
fild
add
dec
fbstp
aad
fistp
retf
stos
int
fbstp
xor
push
pop
lods
fisub
mov
sbb
adc
fiadd
movs
jmp
pop
ja
fistp
iret
pop
fbstp
(bad)
fidiv
pop
fbld
(bad)
fiadd
(bad)
addr16
stos
fidiv
movs
fidiv
movs
stos
fisub
movs
stos
fsubrp
pop
add
pop
fiadd
add
imul
jmp
(bad)
jmp
(bad)
jmp
dec
jl
test
and
mov
ss
mov
ss
call
ss
fdiv
inc
fsub
ss
in
inc
push
out
inc
(bad)
call
ss
add
in
loop
pop
mov
ss
jle
ss
out
cmp
hlt
ss
push
ss
lock
shl
lock
xchg
mov
inc
int3
adc
xor
retf
adc
xchg
retf
adc
test
adc
fst
or
pop
cmp
or
xor
sub
and
and
in
add
add
sbb
test
sbb
sub
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
cld
arpl
sbb
cld
xor
sbb
cld
ss
cld
rol
sti
jbe
and
outs
and
hlt
push
push
neg
sbb
push
xchg
pop
test
test
icebp
ds
lock
add
outs
or
cs
push
mov
cwde
push
neg
push
neg
push
(bad)
pop
jmp
idiv
push
out
push
jl
out
push
enter
(bad)
ror
(bad)
call
mov
je
lahf
scas
sub
jecxz
call
and
(bad)
movs
(bad)
dec
sbb
sub
ror
shr
add
adc
sub
add
adc
sub
ds
inc
mov
or
rcr
sti
fidivr
popf
pop
fild
out
or
iret
cmc
std
fcmovu
jmp
xchg
out
fiadd
int3
fiadd
aam
mov
rcr
mov
retf
mov
lods
enter
mov
add
add
shl
and
jg
in
out
fcomp
ss
out
ss
mov
sub
repnz
ss
cmp
and
push
pop
repnz
push
repnz
sub
cmp
lods
mov
movs
lods
jle
scas
inc
popf
ss
pop
out
ss
out
fcomp
mov
ret
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
dec
add
jl
dec
enter
xchg
inc
cld
scas
inc
nop
cld
and
xor
push
loop
cld
inc
loop
cld
push
jmp
sub
xor
iret
lds
cld
leave
les
cld
mov
int
cld
add
xor
cld
add
sti
add
add
cmps
sub
push
cmps
sub
and
cmps
sub
xor
jg
cld
jne
pop
cld
aad
sub
cmc
imul
cld
cmc
imul
cld
rcl
jmp
scas
and
cmps
sub
sahf
xor
xchg
stc
outs
out
mov
outs
out
xchg
outs
out
jle
mov
add
out
ret
out
ret
out
ret
out
ret
add
shr
add
out
ret
out
ret
mov
inc
cmp
(bad)
call
cmp
push
(bad)
push
lahf
push
(bad)
cmp
(bad)
(bad)
xor
test
(bad)
out
push
xor
out
xor
(bad)
xor
(bad)
out
dec
adc
sti
leave
xlat
jae
mov
pop
shr
test
mov
cli
retf
nop
xlat
and
xlat
int3
lods
add
add
xlat
int3
lods
data16
int3
lods
pop
xlat
int3
lods
push
xlat
jecxz
test
(bad)
xchg
xor
xlat
pushf
lock
xlat
pushf
lock
pushf
lock
jp
mov
or
push
xlat
or
xlat
or
xlat
or
push
xlat
dec
lods
push
xlat
dec
lods
out
(bad)
imul
sub
shr
sar
add
adc
(bad)
jmp
(bad)
jmp
add
adc
(bad)
and
dec
dec
cmp
fs
ins
inc
mov
xor
aaa
scas
jle
ss
js
ss
jo
ss
jno
ss
fdiv
jge
fnstenv
je
fdiv
outs
push
fidiv
pusha
push
fdiv
bound
loopne
push
sub
ss
and
ss
out
(bad)
out
in
xchg
jo
aaa
fwait
std
jecxz
fwait
add
add
std
jecxz
fwait
add
shl
xor
push
cld
aad
xor
in
xor
xchg
int3
xor
xchg
int3
xor
div
cld
jmp
fidiv
(bad)
xor
leave
fidiv
test
jl
sti
xchg
add
fistp
(bad)
dec
pop
sbb
push
push
sbb
add
mov
sbb
add
sbb
add
sbb
add
add
pop
or
cmp
cld
mov
paddb
shr
shr
(bad)
out
sub
pop
cmc
ficom
cmc
(bad)
add
hlt
(bad)
fisub
mov
out
xor
scas
in
xor
cmps
jmp
out
sahf
loope
jmp
mov
aas
xchg
cmp
jns
outs
cmp
add
jns
pop
retf
push
pop
arpl
inc
xor
sub
ss
mov
repz
cmp
jns
push
cmp
scas
mov
dec
aam
and
std
sub
rcr
add
adc
sub
add
adc
sub
inc
jmp
add
shl
mov
rcl
call
ins
shl
loop
sar
into
dec
rol
aad
rol
xor
mov
shl
rol
xor
fsubp
sub
xchg
fisubr
rol
dec
daa
mov
shl
adc
ss
enter
enter
(bad)
imul
add
or
ja
out
xlat
into
ss
into
fidiv
into
ss
jae
ss
jae
ss
jae
ss
jae
ss
sub
ss
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
dec
add
jns
mov
and
add
add
cld
push
fdiv
cld
mov
ret
ret
cld
cdq
jecxz
cld
jno
xor
jns
xor
jno
xor
cmp
xor
xor
xor
cld
push
loop
cld
jg
and
jge
and
jnp
and
cld
mov
(bad)
cld
std
(bad)
cld
or
adc
cld
add
add
inc
mov
cld
shl
jnp
jmp
push
call
push
pusha
adc
(bad)
fldenv
es
mov
ret
mov
ret
mov
ret
mov
ret
mov
add
outs
mov
mov
jns
xchg
jns
add
add
adc
jbe
xor
outs
movs
daa
cli
cbw
das
cmc
pop
data16
push
pop
adc
dec
psllw
adc
ds
lods
mov
xor
sbb
adc
out
push
rol
in
rol
enter
retf
pop
jo
shl
out
iret
mul
into
iret
out
out
iret
mul
into
iret
out
out
iret
push
loopne
add
scas
iret
dec
loopne
iret
push
loopne
iret
dec
loopne
iret
mov
mov
scas
loopne
iret
aas
rcl
sbb
mov
sub
shr
add
sbb
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
dec
lea
imul
imul
mov
add
ret
ss
clc
enter
enter
ret
ss
ss
ss
ss
outs
les
inc
jg
ss
imul
retf
ss
jnp
mov
in
lods
sub
ss
dec
aaa
adc
add
fld
cld
adc
cmp
and
cmp
popa
icebp
cmp
icebp
icebp
cmp
icebp
icebp
cmp
add
add
icebp
cmp
loope
cmp
shl
cmp
mov
stos
cld
cmc
(bad)
repnz
adc
sbb
adc
pop
fcom
mov
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
push
or
(bad)
xor
and
xor
loop
sub
dec
ret
shr
pop
jp
repz
ins
adc
dec
cmp
lock
cmp
lock
ja
fadd
repnz
in
fld
push
or
fld
sub
(bad)
and
push
xlat
out
add
shl
movhlps
fidivr
dec
lahf
(bad)
jno
arpl
inc
push
xchg
mov
mov
aad
clc
scas
aad
clc
cmps
mov
add
add
repz
iret
cs
add
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
ds
push
stos
add
cmps
xlat
adc
lahf
xlat
repz
xchg
xlat
repz
mov
not
retf
(bad)
out
retf
aaa
aad
retf
aam
add
add
retf
int
out
ror
cdq
retf
rcl
xchg
retf
outs
mov
retf
je
jle
push
or
test
jno
(bad)
retf
lds
test
ss
nop
in
movs
pop
fidiv
lahf
sbb
ss
fidiv
pusha
cmp
aaa
add
aas
aaa
ror
popa
aaa
pop
rol
adc
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
and
push
dec
add
jae
cld
in
out
cld
sbb
call
daa
cld
aaa
loopne
cld
inc
jecxz
cld
inc
in
sub
cld
rcr
cld
add
add
push
cld
pop
out
cld
repz
cld
ss
cld
xor
cld
test
push
cld
scas
fcom
cld
fstp
adc
fnsetpm(287
adc
cld
xchg
or
movs
lea
cld
mov
mov
sti
sahf
mov
cld
in
aad
cld
jmp
cld
inc
jo
cld
rcl
xchg
mov
ret
mov
ret
add
sar
add
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
jo
inc
cmp
xor
or
mul
out
cli
and
out
adc
ficom
push
jmp
push
sbb
into
sbb
or
shl
add
scas
adc
push
or
pushf
pop
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
cwde
sub
rol
add
adc
sub
rcl
add
adc
sub
add
adc
(bad)
jmp
(bad)
jmp
(bad)
and
dec
dec
jns
iret
ss
cmp
ss
cmp
xchg
shl
push
mov
sub
xchg
movs
sub
mov
ins
fdiv
mov
stc
shl
pushf
add
add
ss
cmp
cwde
xor
ss
iret
sub
(bad)
ss
xchg
test
jno
dec
sbb
sub
pop
xor
push
sub
jns
push
cld
in
jne
cld
repz
jge
popa
stos
outs
cld
aaa
lods
jno
pop
cmp
(bad)
mov
adc
add
mov
adc
add
mov
adc
add
add
push
adc
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
mov
cld
movs
mov
cld
inc
ja
cld
test
pop
cld
rcr
loope
sbb
loop
bnd
mov
std
adc
scas
test
ret
pop
mov
add
add
jne
(bad)
jle
pop
leave
jbe
or
outs
jbe
lds
or
ret
pop
mov
add
scas
inc
push
pop
mov
add
or
cs
pop
mov
movs
pop
mov
stos
dec
mov
aad
gs
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
adc
sub
add
adc
add
adc
sub
add
adc
sub
add
adc
fild
xchg
inc
retf
xchg
popa
mov
les
jmp
les
in
les
pusha
les
les
les
pop
les
clc
ret
popa
retf
pop
popf
pop
les
les
pop
les
pop
(bad)
jmp
add
add
les
(bad)
lds
sbb
push
adc
pop
sub
mov
dec
and
inc
pop
jle
inc
push
mov
cmp
dec
mov
cdq
xor
ss
daa
cmp
jmp
imul
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
movs
jl
dec
add
pop
cld
(bad)
cmp
cld
cmp
cld
je
push
mov
sbb
xchg
sbb
loopne
push
cld
fild
or
cld
arpl
cld
inc
jae
cld
inc
jno
cld
sub
jbe
pop
fadd
cld
add
add
aam
cld
loope
outs
cld
clc
test
ins
cld
stc
jbe
cld
mov
cld
mov
cld
jg
popa
cld
in
push
xor
jb
cld
rcl
pusha
push
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
scas
ret
scas
ret
scas
ret
add
shr
add
scas
ret
scas
ret
clc
jg
dec
nop
popa
cmps
jbe
addr16
cs
jge
(bad)
jnp
push
mov
fild
jnp
mov
outs
shr
pushf
jne
es
jae
push
push
repnz
rcr
add
push
pushf
dec
rcl
sar
xor
rol
sar
add
add
rcr
adc
ror
jae
std
xchg
pop
rol
popa
ror
rcl
ror
rcl
add
adc
sub
add
adc
sub
add
adc
sub
jmp
(bad)
jmp
add
adc
(bad)
jmp
dec
pop
jo
les
aaa
test
jb
aaa
lock
lock
in
xor
jmp
cmp
stos
ss
jno
test
jge
lods
sbb
cmps
adc
ss
test
ss
xchg
push
and
add
daa
jbe
dec
and
add
popa
cld
xor
cld
xor
cld
inc
je
cld
sti
aaa
movs
cld
call
adc
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cwde
adc
add
jno
cld
dec
jge
cld
daa
in
cld
pop
in
cld
aaa
in
cld
(bad)
sbb
rol
mov
cs
jb
es
pusha
mov
push
in
fs
shr
jge
inc
dec
mov
mov
out
push
mov
inc
pop
mov
pop
push
mov
push
push
mov
add
mov
imul
dec
bound
xchg
mov
mov
jle
ret
scas
ret
scas
ret
scas
ret
scas
ret
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
inc
add
add
icebp
(bad)
test
out
mov
hlt
fmul
mov
stc
mov
mov
bound
mov
ret
fild
mov
sbb
xchg
mov
jmp
ins
mov
dec
movs
sbb
mov
aaa
sets
or
cmp
lea
je
mov
add
ss
push
jae
dec
ds
inc
pusha
ja
mov
mov
enter
jmp
mov
ret
jmp
int
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
and
push
dec
add
ror
cld
add
add
fnstsw
adc
cmp
and
cmp
add
cld
cwde
cmps
data16
inc
jecxz
cld
inc
fnstsw
lahf
retf
xor
mov
xor
push
xor
push
lods
sub
sub
cld
jle
and
mov
pop
cld
lea
jno
xor
pop
cld
and
test
cld
add
add
movs
cld
adc
cld
sbb
dec
cld
ror
jbe
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
jb
inc
cmp
push
sbb
fiadd
add
add
sbb
(bad)
pop
push
lods
mov
or
clc
scas
adc
sbb
sahf
mov
adc
mov
sbb
out
mov
add
ficomp
fsub
or
mov
mov
add
scas
or
mov
addr16
or
mov
add
mov
add
push
mov
mov
lods
in
in
mov
sub
add
push
sub
add
adc
sub
add
adc
(bad)
jmp
(bad)
jmp
(bad)
and
dec
dec
call
ss
mov
mov
add
pop
xlat
ss
jae
ss
mov
ss
shl
out
les
jnp
cmps
ss
and
ss
adc
ss
fidiv
ss
out
ss
adc
ss
pop
fidiv
inc
ins
fbstp
cmp
loope
cmp
ss
add
cld
jecxz
or
sti
push
int
cld
add
add
add
sub
ja
movs
js
aaa
ins
popa
cld
cmps
dec
xor
pop
adc
adc
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
dec
or
in
cld
xchg
fdiv
cld
jns
pop
cld
jnp
gs
imul
shl
jmp
cmps
adc
cmp
in
xchg
pop
add
out
xchg
jmp
(bad)
sub
outs
rcr
loope
retf
and
pop
int3
and
push
mov
push
aam
jle
(bad)
ss
shr
jge
int
jle
into
push
cmp
jne
lds
outs
or
push
call
inc
neg
add
xchg
out
call
lods
ret
lods
ret
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
dec
std
xchg
(bad)
mov
shl
dec
mov
mov
scas
imul
adc
add
sbb
fist
sbb
fistp
out
mov
(bad)
out
or
aam
mov
mov
mov
je
mov
and
shl
cmp
outs
enter
(bad)
ss
pop
loopne
xor
ss
jg
ss
(bad)
ss
jge
ss
push
outs
ss
jmp
mov
or
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
add
and
jp
and
push
mov
aas
cld
mov
xchg
sub
je
sub
imul
add
sub
mov
cld
sub
es
mov
es
std
mov
daa
cld
cdq
(bad)
xor
add
xor
xchg
jno
cld
fld
mov
xor
mov
sub
jl
sub
lea
cld
xor
push
fld
cld
pop
fadd
cld
push
mov
gs
aam
cmp
push
mov
add
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
fsubr
stos
dec
(bad)
jo
(bad)
sbb
push
(bad)
out
loope
loope
cmp
cmp
add
in
cs
push
in
push
adc
push
or
push
cli
pop
out
add
add
or
(bad)
adc
mov
mov
mov
mov
mov
mov
shr
jp
shl
outs
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
jle
mov
popa
stos
push
mov
jg
mov
sbb
rcl
add
sbb
rcl
add
adc
sub
add
adc
(bad)
jmp
(bad)
jmp
int3
test
add
ret
jmp
shl
cwde
out
xor
cwde
jle
mov
imul
jno
movs
ss
push
mov
ss
xor
add
ss
mov
ss
movs
ss
push
movs
ss
or
movs
ss
ss
movs
ss
mov
outs
push
stos
add
jg
cld
jg
cs
mov
cs
sbb
mov
cld
push
data16
and
adc
mov
fcom
(bad)
adc
adc
add
add
cwde
adc
add
adc
add
adc
add
adc
add
mov
paddsb
std
dec
stos
cld
jnp
xor
cld
jle
sub
jmp
cld
fcmovbe
xor
loopne
xor
repz
cmp
push
and
lock
dec
jb
push
inc
addr16
pop
je
neg
pop
test
add
out
imul
and
(bad)
cld
push
cmc
into
mul
cli
(bad)
stc
sbb
mov
jmp
cli
scas
xor
cmc
cmps
ss
sahf
and
not
push
push
xchg
idiv
imul
jae
cmc
outs
jp
cmc
data16
cli
pop
push
scas
mov
jbe
ret
mov
ret
adc
sub
rcl
add
adc
sub
add
adc
ins
inc
and
pop
scas
stc
aam
lods
dec
cmps
cs
sub
dec
js
lods
ja
sahf
lods
pop
mov
mov
dec
mov
xchg
lods
mov
xchg
lods
fwait
mov
lods
xchg
mov
lods
xchg
jne
dec
movs
ins
lods
pop
stos
push
lods
push
out
add
dec
lods
ins
fcom
pop
jecxz
lods
lds
push
scas
rcl
ss
mov
ss
test
addr16
mov
ss
mov
mov
push
movs
ss
loop
ss
sahf
dec
cmp
rcl
jmp
fldl2e
ret
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
sbb
out
inc
xchg
dec
aaa
xlat
call
cld
cmp
cld
neg
xor
stc
fdiv
retf
cld
loopne
xor
cld
popf
ins
xor
xchg
arpl
cld
imul
xchg
gs
xchg
ds
cld
xor
xor
cmp
xor
das
cld
add
add
iret
cmp
fcmovne
cmp
cld
and
cld
gs
mov
sub
xor
sti
jns
cld
add
cld
mov
mov
cld
inc
retf
das
cld
sar
push
mov
dec
popf
push
mov
adc
ret
mov
ret
mov
ret
mov
ret
mov
add
mov
ret
addr16
dec
and
dec
push
ja
dec
(bad)
pop
ror
ins
add
(bad)
ins
add
mov
ins
add
scas
mov
cmps
je
repz
cmp
xor
mov
jno
xchg
icebp
jle
div
push
test
stos
dec
stos
push
stos
pop
cmps
dec
stos
push
loope
stos
ins
jecxz
stos
pop
fidivr
stos
popa
fld
add
cmp
add
sub
sysret
aam
out
xchg
stos
movs
mov
stos
lea
in
test
pop
out
test
jmp
fsubr
dec
xchg
or
adc
fiadd
add
or
sub
add
adc
sub
add
adc
(bad)
jmp
add
adc
in
ret
es
pop
and
dec
fild
push
pop
shl
inc
push
shl
inc
dec
shl
adc
ss
inc
mov
adc
push
movs
ss
movs
ss
xor
dec
sbb
mov
ss
sbb
lahf
ss
lahf
ss
cwde
scas
sbb
add
xchg
lods
ss
dec
outs
sar
push
add
xchg
cld
loope
sub
cld
fnsave
gs
add
dec
cld
or
stos
cld
mov
pop
sub
push
clc
push
mov
adc
pop
sbb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
call
push
lea
and
adc
pop
sbb
mov
jo
mov
shl
jns
mov
jbe
outs
jle
hlt
jbe
popf
repz
sub
xor
pop
dec
pop
mov
dec
aaa
inc
into
inc
pushf
inc
into
ds
push
sti
es
clc
push
pop
mov
add
add
fisub
sbb
jno
xchg
dec
icebp
loop
dec
(bad)
clc
lea
sti
jg
jno
cmp
mov
ret
mov
ret
mov
ret
adc
sub
add
adc
sub
add
adc
sub
add
adc
sub
rcl
add
adc
sub
add
adc
sub
add
adc
sub
add
adc
jecxz
jnp
je
mov
inc
sbb
jns
gs
jns
addr16
add
jne
(bad)
ins
lds
hlt
dec
push
mov
dec
and
xchg
call
add
adc
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
ss
ds
ss
add
mov
or
mov
sbb
add
sbb
add
sbb
add
sbb
add
mov
pop
mov
pop
mov
sbb
add
mov
sbb
add
mov
sbb
add
sbb
add
mov
sbb
add
mov
sbb
add
sbb
add
sbb
add
mov
add
call
sbb
add
sbb
add
mov
push
mov
inc
ret
scas
ret
add
push
ret
lods
mov
add
lods
mov
shr
shr
shr
add
lods
ja
pop
mov
add
lods
ja
dec
(bad)
shr
add
lods
ja
add
add
gs
lods
ja
push
jne
add
lods
ja
push
test
add
lods
ja
(bad)
xchg
ret
lods
ja
out
and
add
lods
xlat
add
adc
sub
add
adc
test
rcl
add
adc
fadd
rcl
add
adc
int
rcl
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
mov
out
mov
(bad)
fcmovb
adc
(bad)
jmp
sbb
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
ss
(bad)
push
xchg
lds
mov
lds
and
jmp
ss
(bad)
mov
mov
(bad)
add
aad
mov
jnp
jb
aad
sbb
jge
sbb
mov
sbb
add
sbb
jle
jecxz
addr16
femms
jge
mov
aaa
std
out
adc
mov
sbb
jle
xchg
sbb
jle
mov
sbb
jle
push
sbb
jle
pop
pop
jle
pop
pop
jle
dec
(bad)
mov
sbb
adc
or
add
sbb
adc
lds
add
add
adc
add
outs
mov
add
rol
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
sub
add
sub
add
in
mov
add
in
add
(bad)
pushf
ret
int3
ret
lods
ret
lods
ret
ins
rol
lods
ret
lods
ret
lods
ret
lods
ret
add
shr
rcr
sbb
sar
push
rcl
cdq
pop
push
mov
push
mov
dec
js
adc
mov
adc
ins
cli
mov
sbb
lods
adc
mov
lods
adc
mov
stos
xchg
adc
xchg
sub
add
mov
ins
adc
repz
adc
xchg
adc
movs
int3
cmp
cdq
shr
adc
(bad)
fs
fwait
lds
lds
mov
(bad)
std
lds
test
mov
(bad)
push
mov
lds
cmps
lds
lds
add
add
aad
lea
jno
cli
test
lds
lahf
cli
lds
test
xor
lds
xor
scas
lds
and
lds
outs
int
xchg
out
lds
jle
jle
xchg
add
test
add
sbb
sahf
and
push
jge
add
xchg
inc
add
pop
add
add
mov
call
add
ror
pop
adc
xchg
retf
push
and
add
add
sub
push
xor
inc
das
pusha
add
imul
test
jne
in
stos
jae
add
jb
add
jne
cmps
sbb
xor
pop
add
and
rol
mov
add
add
or
sbb
xchg
jo
shl
sar
ror
mov
jp
mov
adc
int
jno
mov
es
jle
std
push
sbb
sbb
ror
inc
aad
inc
or
rol
shl
mov
cli
jo
sar
inc
(bad)
add
add
shr
daa
shl
retf
jae
inc
push
outs
cmps
cmp
mov
cmp
mov
sub
or
xor
pop
ror
push
repnz
xchg
les
push
mov
popa
pop
push
mov
cmc
adc
jl
xchg
adc
std
push
push
test
retf
mov
adc
movs
fwait
pop
adc
jae
mov
(bad)
test
adc
add
adc
and
mov
adc
cmc
ret
adc
lds
lahf
lds
cdq
lds
push
pop
lds
xchg
mov
(bad)
mov
idiv
lds
xchg
cdq
(bad)
icebp
lds
push
mov
mov
cwde
lds
and
lds
cwde
(bad)
add
xor
mov
lds
sbb
lds
dec
enter
call
(bad)
or
gs
push
sub
lds
call
xchg
int
add
jmp
out
add
fld
add
inc
movs
add
pop
add
bound
mov
add
cli
add
add
pop
rol
out
(bad)
fadd
popf
xchg
add
add
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
add
shr
add
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
adc
sub
rcl
add
adc
sub
add
adc
sub
add
adc
cs
pop
inc
(bad)
dec
adc
cs
push
jbe
rcl
ds
mov
not
mul
int
bound
mul
adc
mul
jne
jno
addr16
jno
adc
add
add
rol
pop
(bad)
ins
addr16
bound
(bad)
mov
inc
mov
loopne
dec
push
loopne
addr16
clc
inc
mov
push
js
(bad)
dec
outs
xchg
or
push
test
cdq
aas
outs
jge
jno
pop
das
test
mov
(bad)
ficomp
jno
cli
rol
(bad)
cli
add
add
aad
mov
dec
jmp
repnz
add
std
and
aas
(bad)
pushf
loop
rcr
and
popf
push
add
dec
cmps
jb
dec
cmps
jb
adc
add
aaa
mov
inc
inc
test
aaa
add
aaa
add
jle
out
aad
add
sbb
add
mov
sbb
add
mov
pop
mov
pop
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
mov
pop
mov
sbb
add
push
mov
mov
push
ret
push
ret
mov
ret
jle
add
inc
add
jle
add
jle
add
jle
add
jle
add
jle
add
add
sar
sar
inc
jle
jl
inc
add
inc
add
inc
cld
es
inc
jl
jle
inc
jle
cld
push
jle
inc
mov
sar
stos
data16
out
inc
ins
rcl
sar
mov
rol
sar
rcl
fs
scas
es
push
pop
into
and
adc
add
sub
push
je
movs
push
sub
xchg
push
push
or
push
xchg
and
and
imul
sbb
pop
adc
inc
imul
jl
cmp
movs
imul
xchg
and
adc
les
mov
add
add
ss
into
(bad)
sti
mov
or
xchg
sbb
ss
into
(bad)
fistp
or
loope
int
sti
jnp
scas
popa
fisttp
scas
loope
ret
jmp
aam
pop
int
inc
fcmovne
scas
loope
ret
stos
ret
cmp
scas
mov
cwde
int
xchg
test
aad
sbb
scas
xor
mov
add
lds
aad
stc
int3
scas
adc
lods
adc
aad
stc
mov
xlat
cmp
scas
jnp
and
adc
fwait
ds
dec
mov
test
lea
je
cmp
scas
jnp
and
adc
ds
dec
mov
inc
cmp
(bad)
adc
dec
je
adc
or
inc
mov
adc
add
cmp
mov
mov
and
adc
xchg
cmp
dec
mov
mov
adc
xchg
cmp
dec
mov
shr
jbe
daa
ret
or
ins
cmp
mov
(bad)
icebp
jbe
(bad)
ror
lea
in
push
lods
mov
push
jle
or
outs
imul
dec
add
or
mov
add
add
out
jbe
jecxz
ja
out
ror
xchg
or
lods
mov
jp
aam
sar
mov
push
ss
mov
ret
jle
mov
sar
rcl
cmp
pop
into
es
(bad)
es
call
add
dec
pop
rcl
pop
rcl
pop
rcl
pop
add
add
adc
pop
rcl
rcl
rcl
rcl
pop
rcl
pop
rcr
pop
ror
ror
pop
ror
pop
ror
pop
ror
add
push
ins
add
push
ins
add
cs
add
cs
add
dec
ins
add
push
(bad)
push
adc
imul
ret
jmp
add
adc
aaa
rol
adc
(bad)
sub
adc
(bad)
jmp
ss
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
mov
adc
add
adc
cld
jmp
les
fcomp
lds
fisttp
ret
add
mov
add
mov
add
(bad)
mov
add
test
add
mov
add
and
add
aam
sahf
sbb
rol
outs
daa
rol
shl
add
rol
push
and
add
add
arpl
fadd
arpl
fadd
adc
fld
add
adc
add
push
fadd
rcr
and
sbb
and
adc
and
push
and
daa
shl
rcr
shr
shr
ror
sub
ret
xor
ror
xor
(bad)
daa
xor
ss
shl
xor
and
sub
adc
xor
add
add
mov
cmp
mov
cmp
enter
mov
inc
shl
dec
rol
push
rol
push
rol
pop
rcl
push
stos
adc
retf
dec
xchg
adc
sbb
inc
adc
or
cmp
add
adc
or
adc
fisub
add
add
push
fadd
push
rol
push
add
push
or
dec
sti
adc
or
in
adc
and
adc
dec
adc
adc
pop
xor
adc
inc
cs
inc
sub
jmp
data16
(bad)
pop
jmp
(bad)
push
jmp
inc
fimul
(bad)
cmp
xchg
lds
add
inc
xchg
lds
xchg
lds
lds
xchg
lds
xchg
lds
xchg
lds
nop
lds
xchg
lds
xchg
lds
mov
lds
movs
lds
movs
lds
cmps
lds
cmps
lds
mov
lds
lods
lds
dec
scas
lds
test
lds
sti
hlt
add
arpl
add
add
call
pop
add
ins
add
push
add
jne
ja
jae
jno
jo
(bad)
(bad)
outs
add
outs
add
jge
jl
jnp
cmp
add
std
jbe
cld
cld
add
push
inc
adc
out
adc
sub
adc
sub
adc
xor
pop
add
sub
(bad)
imul
add
jg
icebp
rol
inc
addr16
inc
pop
(bad)
inc
pop
(bad)
inc
sbb
inc
daa
mov
sar
inc
mov
inc
and
stc
rcr
stc
shl
stc
rcl
stc
shr
rcl
inc
(bad)
jno
sar
inc
out
adc
rol
sar
inc
out
or
ror
shr
stc
shl
clc
rcr
sti
rcl
(bad)
pop
adc
mul
cmp
cld
mov
sub
cmc
pushf
and
popa
stos
sbb
pop
scas
adc
ins
test
or
jbe
cli
adc
stos
call
adc
cmps
rcl
ret
add
add
adc
mov
fst
mov
xchg
push
outs
mov
push
ins
rcl
push
(bad)
mov
out
xchg
(bad)
jl
out
adc
mov
jge
lds
jbe
lds
jae
lds
jb
lds
addps
pop
jns
lds
lds
push
lds
fs
vsubpd
mov
push
retf
(bad)
jbe
les
je
int
jo
ret
lds
daa
jp
xchg
jp
jg
ja
xchg
jo
lds
add
dec
jg
push
cmp
lds
mov
push
popa
mov
add
mov
add
mov
add
mov
adc
add
mov
adc
add
add
pop
adc
add
adc
add
adc
add
das
mov
pop
push
inc
ins
mov
inc
add
adc
add
ds
mov
call
adc
add
and
and
das
stc
das
push
inc
ins
mov
repnz
pushf
or
push
pushf
loopne
mov
sbb
bound
addr16
retf
or
shl
push
pusha
mov
in
mov
add
outs
ret
aad
in
cmp
jle
add
and
mov
pushf
pusha
into
inc
cld
outs
ret
adc
jb
cld
lods
movs
mov
pusha
mov
nop
jecxz
dec
push
and
ret
pop
push
mov
loop
pushf
and
call
add
add
mov
add
cwde
arpl
adc
push
pop
push
int3
mov
daa
mov
cmp
movs
dec
popa
adc
sub
cmp
mov
pop
jle
(bad)
adc
mov
sbb
and
jae
adc
mov
lods
mov
sahf
sbb
jnp
push
retf
pop
jge
mov
retf
add
add
sub
test
mov
cld
push
popa
mov
xchg
sub
inc
test
test
add
ret
cmp
arpl
mov
add
cld
std
inc
imul
adc
movs
sub
leave
das
xor
call
test
ss
adc
mov
add
add
adc
das
mov
retf
outs
xchg
je
sub
push
jnp
inc
inc
imul
cmp
jmp
das
lahf
daa
ins
and
sbb
mov
add
add
push
(bad)
bound
jns
clc
lds
loopne
or
mov
push
xchg
sbb
mov
push
mov
push
(bad)
bound
add
mov
lods
and
aad
dec
jecxz
mov
mov
push
xchg
cwde
cmp
add
push
mov
push
(bad)
bound
mov
fst
push
xchg
jne
inc
mov
mov
adc
(bad)
bound
mov
dec
ffreep
add
test
jecxz
shr
shr
and
fnstsw
add
add
into
ja
xor
dec
test
inc
mov
jecxz
shr
shr
loopne
dec
clc
push
adc
fadd
fidiv
div
cmp
loop
shr
shr
mov
out
ja
or
inc
outs
inc
sar
repz
shr
shr
pusha
mov
(bad)
loopne
scas
popf
add
add
mov
xlat
jo
lods
test
ds
std
shl
push
cli
sub
rcl
popf
nop
stc
pop
iret
jge
mov
addr16
mov
(bad)
sub
rcl
scas
xor
lea
scas
xchg
pop
sub
and
pop
cdq
lea
adc
cmp
cwde
mov
pop
scas
inc
push
add
add
push
pop
cmp
outs
mov
pop
cdq
and
adc
(bad)
jmp
jo
jo
jo
jo
jo
sbb
pop
or
ret
jmp
jo
in
mov
adc
lea
or
in
cmc
vcmpss
mov
ret
jo
in
mov
adc
or
or
jmp
pop
aaa
jo
jo
ins
mov
adc
jno
push
or
(bad)
fcom
mov
adc
mov
cdq
addr16
call
addr16
sbb
retf
push
test
add
adc
add
adc
gs
xchg
pusha
xchg
mov
xor
adc
add
mov
jnp
cmp
sbb
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
dec
rol
dec
rol
dec
rol
dec
rol
dec
rol
dec
rol
mov
add
mov
add
mov
add
add
out
mov
add
mov
add
cs
cs
out
rol
out
rol
cs
cmp
pop
pop
ret
jle
add
mov
add
ins
ret
outs
ret
outs
les
shr
shr
shr
shr
rcl
add
adc
sub
outs
adc
add
adc
lods
adc
ins
ror
lods
add
add
sub
lods
adc
mov
fwait
xchg
jl
fwait
lea
cmp
icebp
(bad)
es
mov
push
push
icebp
iret
es
icebp
(bad)
sbb
mov
ds
iret
adc
sub
mov
and
add
jl
fist
or
mov
les
int
mov
(bad)
jmp
or
jno
mov
aad
int
(bad)
popf
dec
mov
scas
sbb
mov
jnp
cli
jnp
fisttp
mov
jp
retf
xchg
mov
stos
aam
ins
or
cmp
add
add
mov
jp
cs
popa
call
or
sbb
mov
pop
movs
cmp
rcr
data16
add
pop
mov
push
loopne
mov
jmp
jge
stc
add
mov
sbb
jge
test
cmp
cwde
fistp
mov
jge
rcr
jge
add
add
fistp
sub
jge
jns
(bad)
sti
loopne
jge
inc
fistp
fcomp
jge
fsub
jge
dec
add
js
out
mov
push
push
dec
xlat
fwait
mov
cmp
inc
ja
fcmovne
mov
cmp
mov
dec
add
ja
cmp
jbe
pop
int
add
add
fcom
retf
lods
sar
or
hlt
dec
ja
js
jbe
or
pop
aas
push
(bad)
mov
jge
or
mov
jnp
movs
enter
int
sub
push
dec
xchg
pushf
lods
mov
xor
add
jnp
push
movs
pop
jns
dec
adc
pushf
pop
ror
daa
es
icebp
into
mov
repz
dec
shr
add
add
mov
ds
mov
mov
out
push
push
mov
mov
mov
ds
into
mov
xchg
pop
imul
xor
pop
lds
(bad)
es
icebp
mov
mov
(bad)
paddsb
sbb
icebp
mov
push
icebp
into
mov
(bad)
mov
mov
scas
popf
mov
add
xor
aad
xor
jnp
xor
std
scas
jb
add
fist
pop
aad
cmc
pop
jnp
pop
add
push
mov
ds
dec
clc
aam
int
aad
aad
jnp
sub
scas
and
std
ds
mov
or
fist
add
bound
not
sti
ins
or
sti
add
add
dec
bound
dec
add
or
nop
loopne
mov
imul
mov
dec
sti
test
mov
adc
add
je
sbb
jnp
or
jmp
add
add
adc
test
sti
mov
mov
add
aaa
fwait
cmps
je
or
test
ds
cli
mov
imul
cmps
je
push
(bad)
hlt
ret
add
jl
pop
xor
inc
daa
pop
pop
mov
(bad)
lahf
(bad)
ins
ret
jge
or
push
ja
jbe
neg
jbe
(bad)
(bad)
xlat
fmul
sar
or
fmulp
jbe
add
push
aaa
fnsave
aas
fnsave
aaa
fnsave
ins
xor
scas
or
mov
cs
jbe
je
jbe
dec
xor
push
ins
cmp
cmp
pop
sbb
push
ds
iret
push
push
icebp
mov
mov
dec
or
push
sbb
ds
mov
mov
dec
add
add
or
repz
xchg
push
push
icebp
iret
push
ds
in
xor
in
xchg
sbb
dec
sbb
push
icebp
mov
in
dec
jns
mov
sbb
cmp
or
test
mov
xor
lods
jp
or
scas
jne
jae
aad
ret
xchg
or
scas
jp
add
add
sbb
jp
xor
aad
ret
popa
jge
jp
jne
jp
lea
test
aad
adc
lea
jp
jp
jnp
mov
and
fcmovne
and
jmp
jnp
or
lods
and
sti
mov
aad
lods
and
sti
xchg
and
add
mov
pop
aaa
adc
add
imul
adc
call
bndldx
mov
pop
test
out
mov
(bad)
jae
je
add
sbb
add
sbb
cmc
rcr
mov
sbb
rcr
add
sbb
repnz
mov
pop
nop
add
push
mov
sbb
add
sbb
add
mov
sbb
cmc
adc
mov
add
test
mov
add
test
add
jl
icebp
xchg
fmul
jl
popa
shl
add
jl
shr
ret
jl
in
push
aam
add
jl
loopne
and
add
jl
cld
ss
add
jl
mov
add
add
jge
mov
sar
inc
fs
add
jg
cld
add
add
jae
add
jg
mov
inc
rol
jg
mov
push
rol
jg
int3
icebp
mov
dec
cld
mov
gs
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
add
add
adc
aam
rcl
add
adc
cmp
rcl
add
adc
or
rcl
add
adc
lds
lds
(bad)
jmp
(bad)
jmp
mov
ret
mov
mov
adc
adc
add
adc
(bad)
jmp
ss
(bad)
jmp
(bad)
jmp
(bad)
push
adc
ss
vcmpss
stos
sub
lds
pop
cdq
mov
pop
sbb
add
mov
fwait
ss
cwde
pushf
ss
cwde
pushf
cmp
add
add
fwait
cmp
or
push
add
add
movs
cmp
xchg
push
cmp
and
cmp
mov
sar
add
sbb
sub
outs
add
cmp
sbb
mov
sbb
add
mov
add
cmp
xchg
into
cmp
xor
cmp
and
cmp
std
and
add
and
sbb
sar
add
sar
jl
jae
jl
dec
rcl
inc
out
inc
add
inc
xor
inc
pop
and
inc
jl
ffreep
jl
mov
jl
xchg
sar
jl
push
rcr
inc
aaa
xchg
inc
cmp
stos
cli
inc
xchg
inc
movs
ret
dec
ret
dec
ret
add
shl
shl
shr
sbb
jns
adc
push
fcom
fmul
adc
pop
les
pop
popf
push
repz
outs
push
mov
push
push
repz
xor
sbb
icebp
adc
dec
push
lea
inc
jns
push
mov
aas
je
test
ins
push
mov
pop
jge
push
pop
push
push
scas
pop
aaa
push
jl
add
add
adc
lock
push
call
jns
push
fcomp
pop
push
sar
pop
push
enter
rol
push
fld
push
push
(bad)
xor
test
cmp
daa
(bad)
aad
jbe
int
push
(bad)
mov
lds
pop
lds
ret
push
ret
je
cmp
stc
ret
sbb
add
lds
jne
dec
lds
mov
lds
inc
push
call
inc
ret
push
ret
jae
adc
(bad)
cdq
ret
mov
pop
dec
lds
mov
jecxz
add
pop
mov
fistp
jecxz
fbld
mov
pop
ss
push
inc
ss
mov
cld
fdivr
cld
add
add
adc
pop
mov
dec
add
lods
lods
add
fidivr
aas
shl
add
shl
cld
pop
call
mov
cmp
add
inc
ss
out
xchg
adc
call
dec
add
xchg
lods
add
xchg
jle
fist
ss
fdivr
mov
push
jecxz
cld
push
lock
ror
add
add
push
aas
lods
shr
imul
aas
inc
rcl
cld
mov
es
scas
fisub
add
dec
repnz
lahf
aas
rol
mov
lods
rol
mov
sti
aas
imul
aas
inc
rol
and
test
pop
cld
push
add
cld
inc
sbb
add
jne
add
or
shr
lods
add
add
adc
push
test
adc
sub
movs
imul
dec
out
imul
rcl
xchg
adc
xchg
adc
xchg
xchg
xchg
in
xor
ret
push
sub
movs
call
sub
adc
adc
inc
add
add
adc
jl
xchg
push
ret
push
sub
movs
push
push
(bad)
jmp
(bad)
fcmovnb
jmp
lds
push
je
push
xchg
cmp
push
(bad)
cmp
push
jmp
vandps
(bad)
(bad)
push
data16
jb
shr
lods
add
add
test
push
lds
lds
mov
lds
xchg
fs
(bad)
jmp
int3
lods
test
mov
mov
mov
ss
clc
add
inc
hlt
add
jnp
add
(bad)
enter
aaa
add
adc
add
adc
sti
out
ins
aaa
add
adc
add
adc
add
adc
add
adc
add
add
fstp
xor
out
jmp
test
adc
add
jmp
das
sbb
add
adc
add
aaa
cmc
icebp
jmp
(bad)
adc
add
aaa
add
jge
cld
sar
enter
and
js
hlt
sub
enter
sar
jge
hlt
mov
add
test
fst
addr16
cld
sar
sar
(bad)
dec
mov
in
rcl
mov
ror
dec
mov
cld
rcr
adc
inc
fst
adc
sar
jge
cld
sar
outs
jle
out
gs
into
and
dec
ror
adc
movs
pop
mov
ss
test
xchg
pop
add
add
or
pop
fsubr
pop
cs
cs
ja
jb
jns
adc
add
sbb
add
pop
jmp
pop
out
pusha
das
jp
or
sbb
adc
add
adc
js
je
jno
jb
adc
or
adc
mov
aaa
sbb
add
sbb
sbb
and
into
(bad)
scas
jns
push
(bad)
jmp
fs
jb
push
shl
sti
mov
sar
scas
or
hlt
fmul
rcr
fstp
jecxz
or
cmp
xchg
imul
mov
arpl
jmp
fs
jb
adc
jb
fcmovnbe
or
(bad)
or
aam
or
std
dec
add
add
jno
mov
fisttp
sub
jmp
fs
jae
xchg
adc
sti
mov
sar
scas
or
hlt
fmul
rol
xchg
adc
sbb
fsqrt
push
out
in
fsubp
sub
loope
into
sbb
adc
add
aaa
add
loopne
in
mov
sub
or
push
add
std
iret
adc
(bad)
sbb
add
sti
cmps
jmp
ret
sbb
add
add
add
fst
aaa
add
fild
in
stc
loope
out
leave
add
rcl
xchg
in
into
sbb
out
out
pop
in
sbb
add
sbb
add
add
ins
sar
ins
mov
out
pop
ror
ds
adc
arpl
sbb
and
sbb
je
cmc
shr
add
add
ins
mov
pop
sbb
pop
ror
pusha
loop
iret
inc
mov
push
into
popa
mov
in
pusha
cmps
cli
scas
arpl
push
mov
mov
shr
shr
lods
push
scas
jmp
int
aam
mov
cmps
call
xchg
or
adc
ins
jno
ins
js
sbb
addr16
cs
add
push
pop
daa
jae
pop
ds
lods
or
sbb
or
jae
jno
jae
or
push
iret
or
adc
or
push
mov
fdiv
adc
cs
jae
push
fild
push
pop
mov
or
push
scas
xor
cs
scas
or
jnp
jno
outs
mov
pop
add
jmp
pusha
(bad)
ins
sar
add
add
xor
shl
int
out
fisubr
js
add
js
imul
push
pusha
(bad)
pusha
(bad)
add
fst
xor
rcr
mov
rcl
lods
or
pop
sahf
jb
and
add
test
fs
jmp
pusha
vcvtsd2ss
sar
mov
sub
add
add
sar
aam
iret
cmc
int
sub
xchg
repnz
ja
int3
in
enter
enter
lahf
jmp
aaa
add
aaa
add
rcl
xor
rcl
outs
or
in
div
sub
div
xor
pop
sub
daa
cmc
or
add
adc
add
adc
add
(bad)
adc
mov
sub
add
add
repnz
fcomp
daa
in
(bad)
repnz
mov
sub
fldl2t
xor
iret
fnsave
or
sbb
add
sbb
add
ins
sar
ins
mov
and
push
stos
out
cmps
popf
ret
xchg
out
outs
jge
pop
mov
ins
sar
ins
sar
ins
sar
ins
mov
and
lods
jmp
add
add
js
in
push
enter
shr
push
mov
ins
sar
ins
sar
ins
sar
ins
mov
call
out
push
stos
out
shl
in
ficom
cmp
scas
push
sub
mov
adc
pop
cmps
adc
cs
xchg
adc
or
imul
pushw
pop
ja
add
jo
dec
imul
daa
add
mov
pop
inc
adc
cs
ss
xor
jo
imul
imul
fst
les
fidiv
arpl
push
not
cs
out
cs
ficom
jmp
pop
(bad)
outs
cmp
int3
sub
lds
addr16
sub
data16
mov
pop
(bad)
pop
(bad)
pop
(bad)
add
sub
imul
pop
iret
imul
add
(bad)
jmp
pop
(bad)
pop
(bad)
pop
(bad)
imul
imul
sbb
es
pop
ins
xor
adc
add
fild
xor
(bad)
xor
retf
add
pop
aaa
add
pop
aaa
add
hlt
sub
mov
adc
cmc
push
loope
repnz
adc
xor
jnp
xor
add
aaa
add
aaa
add
aaa
add
aam
dec
add
in
(bad)
jmp
adc
hlt
sub
mov
xor
and
idiv
out
icebp
add
add
loop
adc
in
add
pop
aaa
add
push
aaa
add
ins
ret
cld
shr
rol
adc
pop
mov
mov
sahf
call
aam
sahf
pop
mov
cmps
hlt
scas
cmp
shr
shr
shr
shr
mov
ror
mov
or
pop
fldcw
outs
mov
test
add
mov
cld
shr
shr
shr
sar
rcl
and
sbb
gs
imul
in
mov
jno
pusha
lds
adc
cs
into
adc
ds
das
push
iret
xor
jns
fwait
push
push
movs
push
fs
gs
add
add
adc
cs
outs
adc
push
push
(bad)
and
sbb
mov
imul
push
gs
std
pop
pop
xor
push
adc
(bad)
jmp
pop
(bad)
outs
sub
addr16
fadd
aam
(bad)
retf
cmc
mov
iret
fmul
cli
es
push
push
in
or
jmp
add
ret
pop
(bad)
pop
(bad)
pop
vunpcklps
adc
fucom
mov
std
into
aad
add
std
int
iret
hlt
(bad)
jmp
retf
in
xor
jmp
pop
(bad)
pop
(bad)
pop
lds
imul
mov
add
std
mov
add
add
or
adc
in
pop
rcl
mov
adc
add
add
jmp
adc
or
in
sub
fimul
rcl
or
adc
in
pop
rcl
scas
or
adc
mov
adc
add
adc
hlt
inc
lock
pop
or
adc
or
adc
ins
pop
shl
mov
rcl
mov
rcl
ins
xor
sti
sub
aaa
add
adc
add
add
shr
sub
pop
aaa
leave
push
scas
aas
enter
enter
(bad)
adc
sti
cmps
push
xlat
pop
(bad)
adc
popa
loop
aam
(bad)
cld
shr
shr
into
gs
(bad)
push
fist
into
pop
fcom
int3
popa
fst
loope
ficom
lods
fwait
test
mov
fst
lods
inc
loop
outs
mov
cld
shr
shr
add
add
ficom
mov
fist
scas
aas
fcom
lods
inc
fst
loope
int
int
xchg
outs
mov
add
sbb
(bad)
idiv
push
cs
push
push
cs
popa
cmc
js
pusha
fldenv
xor
sbb
push
sbb
add
sbb
add
pop
leave
dec
jbe
pop
xor
mov
xor
mov
cs
scas
adc
inc
add
xchg
pop
jbe
lea
push
mov
push
push
adc
add
ja
push
jns
pusha
sub
pop
push
adc
(bad)
jmp
push
(bad)
push
(bad)
push
(bad)
push
(bad)
pop
das
push
fwait
popa
cs
stos
pop
cmp
jmp
push
(bad)
push
(bad)
push
(bad)
push
lds
push
push
ss
add
add
sbb
jmp
ds
imul
rcl
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
mov
adc
mov
and
mov
add
mov
lds
cld
push
sbb
add
ss
and
mov
lds
cld
shl
cld
push
xchg
ret
cmp
add
ret
cmp
ret
cmp
ret
cmp
ret
cmp
ret
add
cmp
ret
cmp
ret
add
cmp
ret
add
ds
add
cmp
add
xor
add
cmp
cld
cmps
rol
cmp
cld
xchg
push
rol
cmp
cld
xchg
add
cmp
pop
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcr
in
push
push
hlt
pop
rcr
ins
not
ins
cs
ins
out
add
rcl
add
adc
sub
add
add
rcl
add
adc
sub
add
adc
(bad)
jmp
shr
adc
repz
fwait
jmp
xchg
jmp
in
ret
jmp
(bad)
jmp
(bad)
jmp
retf
jmp
add
sbb
push
xchg
add
adc
cdq
test
ret
jmp
stc
jmp
(bad)
jmp
mov
adc
(bad)
xor
repz
cwde
lods
add
jae
sub
jae
sub
xchg
pop
cld
jne
jle
push
push
enter
mov
add
sbb
(bad)
adc
adc
mov
sbb
xor
sahf
or
jecxz
sub
jecxz
sub
hlt
jp
cld
sub
sub
add
and
clc
stos
and
mov
ds
ds
sti
jbe
test
iret
jbe
push
jmp
xor
add
add
sbb
push
sub
dec
iret
inc
push
push
jmp
adc
and
push
outs
ds
ds
adc
cmp
lods
inc
jmp
out
xor
out
xor
(bad)
out
mov
jbe
jge
xchg
pusha
jecxz
test
mov
push
jmp
(bad)
dec
shr
fidivr
sub
add
add
xchg
sub
rol
fwait
imul
imul
pop
dec
jmp
dec
pusha
cmp
dec
sub
dec
jae
sub
xchg
sbb
fwait
sbb
fiadd
add
cmps
sub
rcl
aam
cmp
fwait
jmp
xor
dec
mov
cmp
dec
sti
dec
icebp
dec
sti
dec
jmp
jmp
loope
jmp
jmp
or
mov
cmp
and
sub
mov
icebp
(bad)
sub
jmp
sub
sub
ss
pop
mov
or
ss
ss
push
xor
xchg
and
mov
sub
ss
dec
inc
ss
(bad)
sub
jmp
add
lahf
and
sub
ss
sbb
ss
dec
mov
add
push
aam
cld
push
sahf
add
push
and
cld
out
es
(bad)
fld
test
sahf
mov
shl
mov
shl
leave
shl
or
cld
xor
xor
xor
xor
adc
shr
cld
sub
xor
or
xor
pop
cdq
push
cld
and
jne
sbb
and
lea
movs
or
popa
add
cld
popa
add
cld
jno
xor
mov
cld
shr
cli
into
sub
into
mov
mov
lock
mov
lock
mov
add
jp
ret
aas
ret
ds
mul
popa
add
add
mov
xchg
neg
sub
fst
dec
rcl
inc
ret
mov
enter
imul
loopne
mul
ins
mov
and
ds
ds
mov
mov
sbb
ror
xlat
dec
mov
data16
dec
xchg
iretw
dec
and
and
repz
add
dec
fdiv
aad
sub
shr
add
adc
add
adc
in
push
and
ds
sbb
popa
dec
js
dec
dec
jo
dec
dec
pop
pop
cmp
scas
add
repnz
outs
sub
shl
add
adc
add
adc
sub
jmp
add
adc
repz
fld
rol
add
jl
push
test
aam
jmp
ret
adc
(bad)
jmp
(bad)
retf
lds
dec
lds
inc
cmp
jmp
vcmpss
ret
jmp
(bad)
jmp
lds
add
ret
push
dec
lds
ret
inc
daa
pop
cmovno
add
adc
add
push
mov
adc
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
(bad)
adc
(bad)
and
(bad)
sbb
add
add
mov
mov
adc
mov
adc
mov
adc
mov
adc
ret
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
add
sar
add
ds
ds
ds
aas
ret
ds
ds
ds
ds
ds
ds
ds
ds
ds
adc
sub
add
icebp
sub
rcl
add
jmp
add
mov
add
mov
add
loop
add
or
add
sub
rcr
add
adc
sub
add
adc
sub
add
sbb
xor
jmp
add
cs
js
add
mov
sub
sar
add
or
jmp
(bad)
ret
jmp
dec
sbb
add
aam
or
iret
add
stc
xlat
add
add
pop
push
jmp
cmc
jmp
vcmpss
jmp
(bad)
jmp
loope
fiadd
jae
cli
sahf
ss
cs
dec
mov
imul
sbb
jg
and
out
or
add
add
and
scas
sbb
(bad)
xchg
sbb
(bad)
jle
adc
fs
sar
pop
mov
pop
call
ret
test
cld
ret
test
cld
in
jno
cld
and
pop
cld
clc
sub
loop
sbb
test
adc
jo
sbb
xor
sbb
add
sbb
add
sub
sbb
mov
cld
push
(bad)
adc
add
add
in
cld
xor
cmp
cld
cmp
cmp
rcr
fidiv
aad
cmps
cs
adc
shl
call
and
jne
or
ins
jecxz
sub
(bad)
daa
jbe
div
lods
out
outs
scas
shl
jmpw
jmpw
mov
dec
shl
int
push
ret
das
ret
cs
add
shr
add
cs
cs
cli
or
stos
jle
cld
(bad)
jbe
cld
(bad)
outs
addr16
(bad)
pop
jne
cli
push
adc
nop
pusha
dec
inc
cmp
inc
jle
sub
inc
pusha
push
inc
dec
push
sbb
lea
and
sbb
jmp
ins
je
inc
lods
sub
xlat
outs
inc
xor
add
add
inc
xor
inc
push
jle
inc
sbb
add
mov
ror
add
sbb
add
adc
loope
add
pop
call
fs
xchg
inc
or
inc
lds
fistp
pusha
jecxz
ss
add
dec
cld
dec
ss
dec
ss
cmc
inc
ss
inc
ss
ins
dec
sub
add
inc
je
and
and
ss
push
fcom
push
ss
jg
retf
hlt
xchg
ss
sbb
ss
xor
loope
xor
lods
xchg
fwait
ss
or
xchg
ret
jmp
(bad)
jmp
mov
pop
add
cld
sbb
je
sub
sbb
cmp
out
das
cld
add
add
add
cld
repnz
cld
mov
xor
scas
add
cld
mov
xor
cdq
int3
xor
leave
xchg
push
cld
push
jb
cld
jecxz
sub
movs
jnp
cld
or
inc
cld
aam
or
int3
or
cld
int3
or
cld
push
mov
ds
jecxz
sub
jecxz
sub
xchg
mov
loop
cwde
adc
(bad)
adc
test
mov
adc
add
dec
or
pop
mov
jae
fsubr
pop
mov
push
cmps
jmp
push
(bad)
mov
hlt
inc
(bad)
idiv
vpsadbw
mov
xchg
lock
repz
sbb
sahf
push
jae
jmp
push
xchg
xor
push
mov
out
sahf
loope
xchg
imul
jno
xchg
(bad)
bound
add
add
jg
cs
cs
das
ret
cs
cs
adc
loope
add
push
call
fistp
ins
inc
jae
push
inc
add
dec
inc
outs
imul
ds
mov
dec
xor
dec
xor
inc
adc
mov
inc
outs
xchg
adc
aas
pop
xchg
add
add
aas
test
ins
fstp
mov
aas
jns
cmp
xchg
fnstsw
outs
xchg
aad
xchg
lods
aas
pop
xchg
movs
aas
sbb
icebp
dec
sub
ror
add
and
(bad)
jmp
(bad)
es
ss
pop
mov
ss
cli
inc
ss
inc
movs
jmp
sahf
xchg
cmp
add
inc
ss
mov
cmp
add
das
rol
das
mov
inc
cmp
ss
mov
ss
sub
nop
add
mov
ret
outs
add
adc
add
cwde
adc
add
push
or
inc
cld
add
lahf
cld
add
add
(bad)
sti
sbb
daa
cld
pand
cld
and
fisubr
cld
jo
cs
js
xor
cmp
es
dec
lods
sub
push
add
movsx
xchg
iret
xor
gs
xor
gs
xor
cmp
cld
and
das
cld
retw
fs
gs
xor
push
iret
xor
and
lea
mov
das
ret
add
mov
cs
cs
cs
repnz
mov
data16
repnz
or
hlt
inc
call
repz
shl
cs
lock
push
mov
xchg
cdq
mov
dec
hlt
imul
sbb
mov
ficom
add
xchg
test
lea
mov
cmps
fwait
mov
add
jmp
add
adc
add
adc
sub
add
adc
mov
cmp
jno
jg
push
cmp
push
addr16
pop
dec
cmp
aas
dec
cmp
xor
mov
dec
xor
inc
xor
dec
sub
cmp
pusha
add
add
cmp
stc
cmp
cmp
cmp
idiv
push
out
cmp
xlat
cmp
iret
cmp
jo
inc
ss
inc
ss
jmp
lods
jae
and
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
es
ss
clc
inc
ss
inc
ss
lock
ss
add
add
inc
data16
sbb
jge
ss
xor
popf
into
pop
ss
retf
xchg
lds
aaa
mov
aam
les
jne
jge
push
bound
add
lods
cmp
cld
mov
je
xchg
cwde
push
(bad)
or
push
mov
push
mov
push
mov
push
mov
add
push
push
or
(bad)
sti
call
push
xor
xchg
es
sub
adc
arpl
or
cld
push
add
(bad)
cld
sbb
das
jmp
cld
sub
adc
mov
int
cld
rcr
test
stos
mov
(bad)
push
sbb
(bad)
aaa
in
arpl
adc
das
ret
add
shr
ret
cs
cs
cs
cs
cs
cs
cs
repnz
retf
cmc
neg
cmc
not
lahf
out
dec
push
lods
call
ds
sti
fidiv
jg
int3
cs
dec
mov
push
imul
push
cdq
jg
(bad)
adc
hlt
dec
add
add
cmp
cmp
cmp
inc
pop
cmp
xchg
adc
xchg
jbe
cmp
sti
test
int
add
or
add
adc
sub
add
adc
sub
add
adc
dec
fwait
js
dec
cmp
push
inc
popa
cmp
fs
cmp
pop
pop
cmp
sbb
cmp
stc
aaa
push
cmp
dec
cmp
pop
cmp
cmp
xchg
inc
sub
xchg
pop
imul
es
sub
jl
cmp
ss
push
pushf
ss
sbb
jmp
retf
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
es
mov
add
add
ins
ss
test
ss
nop
out
pop
ss
jp
ss
push
jl
pop
xchg
add
sahf
jne
iret
mov
pop
cld
mov
mov
dec
cmps
jp
push
xchg
xor
jae
pusha
test
fnsave
test
(bad)
sets
mov
adc
add
add
test
mov
adc
add
adc
add
mov
dec
or
inc
cld
loope
aas
cld
out
xor
cld
sub
jmp
adc
cld
rcr
mov
push
fisub
ins
cmp
neg
movs
out
pop
mov
(bad)
mov
add
add
loopne
xchg
(bad)
bound
sbb
ret
aas
ret
ds
ds
ds
ds
ds
ds
ds
ds
cli
or
xchg
pop
mov
out
dec
inc
cdq
in
xchg
aad
stos
pop
mov
push
mov
mov
pop
xor
imul
add
sbb
xor
inc
stos
and
xor
popf
jo
xor
sub
rcr
add
and
add
adc
sub
add
adc
sub
add
adc
push
(bad)
sbb
dec
dec
xor
dec
push
xor
push
xor
cmps
add
add
pusha
ss
xchg
inc
ss
out
ss
bound
pop
xchg
xchg
cld
lock
pusha
jl
ss
addr16
ss
dec
jg
call
mov
xchg
ss
inc
mov
jnp
ret
jmp
aad
ret
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
es
mov
sub
cmp
jge
and
icebp
pusha
scas
cld
jns
daa
cld
popa
loope
cld
dec
int
cld
cmp
daa
cld
xchg
shr
cld
xor
sub
ds
push
cld
mov
jl
imul
cld
ins
pushf
inc
cld
in
dec
mov
add
pusha
mov
retf
test
(bad)
sahf
add
add
push
(bad)
sub
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
test
ins
repnz
push
inc
mov
dec
push
mov
inc
shl
int
mov
cs
nop
mul
mov
push
xchg
fwait
jmp
mov
mov
fcomip
xchg
fucomi
shr
aam
add
out
out
rcr
jmp
int3
(bad)
maskmovq
into
xchg
dec
mov
cdq
pusha
cmps
mov
pop
and
pop
loope
dec
aas
ret
ds
ds
ds
ds
ds
ds
adc
fmul
pushf
fistp
xchg
adc
pop
cs
enter
xchg
and
xor
xor
add
add
xor
xor
xor
and
dec
addr16
xor
sbb
push
das
push
xor
xor
xor
xor
xor
cmp
xor
cmp
xor
inc
add
in
inc
jg
mov
ins
xor
cmp
rcr
add
and
add
adc
sub
jmp
(bad)
jmp
stos
lods
add
add
pop
ss
lea
push
ss
push
cmp
sub
xor
cmp
inc
ss
inc
ss
aas
aas
ss
es
mov
ds
dec
ss
popf
inc
and
pop
sub
jno
mov
lods
rcr
adc
ret
adc
add
adc
mov
adc
add
mov
adc
add
(bad)
sete
rol
mov
cld
xchg
daa
cld
into
sahf
es
mov
lahf
es
and
cld
(bad)
fwait
daa
cld
scas
xlat
xor
rcl
cld
imul
xor
fs
cld
pop
jecxz
cld
inc
add
cld
xor
sub
add
add
and
jmp
jmp
cwde
adc
inc
test
(bad)
or
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
or
xor
popf
bound
js
rol
stos
ds
repz
cld
lock
icebp
push
scas
repz
aad
test
ret
add
add
fcomi
div
shl
imul
fdivp
mul
xchg
out
icebp
ficom
jmp
hlt
(bad)
xchg
mov
cli
mov
mov
scas
dec
cmp
outs
push
sub
add
icebp
sub
rcr
add
adc
sub
add
adc
clc
mov
jnp
sub
sahf
jbe
sub
(bad)
mov
sub
add
sub
mov
xor
or
test
adc
sub
pop
pop
clc
sub
pop
jmp
sub
jo
sub
dec
das
aad
mov
pusha
mov
jmp
cmp
cmps
adc
jmp
repz
(bad)
jmp
(bad)
jmp
add
adc
loop
sbb
and
stos
ss
cmp
pop
cld
es
ss
ss
call
daa
ss
and
inc
frstor
ss
fldenv
inc
and
movs
call
xchg
xchg
xor
aad
mov
ss
and
adc
cs
aaa
retf
das
cld
loop
cmp
add
add
dec
cld
jae
in
ja
pop
(bad)
sbb
pop
mov
pop
mov
pop
mov
pop
mov
push
and
jb
rcl
push
cld
out
push
cld
jl
ins
cld
in
(bad)
or
repz
cwde
adc
xchg
cli
xor
cmp
cs
test
cmp
dec
into
cmp
cld
add
add
inc
mov
sbb
mov
cmps
mov
lahf
jbe
pusha
ins
jns
inc
push
jl
cmp
dec
(bad)
ss
ret
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
out
dec
loopne
jns
jge
add
xchg
jbe
add
add
sti
jbe
cmp
jns
pop
add
jge
sub
jge
sub
mov
mov
lods
std
imul
rcl
add
adc
add
adc
sub
add
adc
sub
add
adc
sub
(bad)
push
sbb
pop
rcl
pop
add
add
push
or
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
rcr
mov
adc
xlat
dec
lds
xlat
dec
lds
mov
dec
mov
adc
(bad)
push
adc
add
adc
mov
ret
(bad)
mov
mov
cmc
vcmpss
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
test
(bad)
adc
cwde
adc
sbb
adc
add
adc
add
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
or
cmp
add
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
pushf
cmp
add
cmp
add
adc
sub
sar
add
sbb
add
adc
sub
add
adc
sub
add
adc
sub
add
push
sub
add
or
add
lock
shl
add
aam
add
mov
sub
add
add
int
add
jmp
add
clc
sub
rol
add
adc
sub
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
and
adc
repnz
loopne
(bad)
js
add
add
adc
dec
jmp
fwait
jmp
out
ret
jmp
int3
jmp
(bad)
jmp
(bad)
jmp
mov
sbb
adc
sbb
xor
sbb
pop
rol
xchg
cli
cmp
mov
sub
int3
add
in
iret
jecxz
fnstsw
call
add
call
pop
(bad)
dec
fcom
(bad)
and
test
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
(bad)
adc
pop
(bad)
dec
call
xchg
push
jmp
(bad)
es
bound
xor
add
add
inc
sub
aaa
sub
ret
sub
ret
sub
add
sub
add
sub
add
sub
add
xor
or
push
jp
dec
xchg
jae
jg
js
cdq
jle
dec
mov
outs
jo
cdq
data16
imul
ds
fcomp
add
add
jg
add
mov
add
jmp
rcl
rcl
add
adc
sub
add
adc
sub
add
dec
sar
dec
pusha
pop
and
push
nop
and
cmp
popf
and
cmp
cmps
and
nop
add
add
dec
mov
test
adc
sbb
adc
aas
jmp
xchg
jmp
std
nop
inc
and
shl
push
jl
out
movs
xor
ss
sub
shl
rcr
rcl
shr
mov
inc
ss
cwde
ss
loop
in
sbb
add
add
adc
cli
jmp
vcmpss
jmp
(bad)
jmp
mov
adc
add
(bad)
push
sbb
out
sub
sti
and
adc
je
adc
adc
xor
jmp
cmp
or
cmp
or
cmp
add
cmp
daa
loopne
cld
pop
loope
cld
dec
loope
cld
add
add
pop
cld
jl
jp
js
inc
cld
mov
xchg
clc
adc
cld
jmp
enter
(bad)
xchg
shl
mov
popf
mov
cld
xchg
scas
sub
xchg
scas
sub
mov
scas
sub
shr
outs
push
mov
jmp
push
cmps
jmp
inc
out
dec
mov
cs
int3
or
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
in
add
into
or
mov
loope
shr
xlat
cli
call
bnd
cli
xchg
mov
das
push
push
sar
add
add
aaa
cmp
das
cmp
(bad)
pop
fs
pop
ja
push
mov
(bad)
jg
loop
cdq
push
shl
ret
imul
xor
xor
and
push
sahf
add
push
loop
pop
push
add
sbb
jae
fistp
jecxz
stos
sbb
push
add
pop
add
sub
add
add
cli
vcmpss
jmp
(bad)
jmp
(bad)
jmp
dec
fisubr
adc
inc
ss
xchg
inc
ss
(bad)
daa
ss
mov
loopne
ss
loope
arpl
and
inc
mov
ss
mov
ss
bound
inc
add
add
cmps
mov
and
pop
clc
sbb
enter
or
dec
ss
lods
sub
ret
lods
sub
xchg
mov
cld
xchg
mov
cld
fs
cld
cmp
cwde
cld
stc
mov
dec
cld
cs
cld
xor
adc
cld
jecxz
sub
fist
out
sub
(bad)
mov
sbb
cmp
sbb
or
add
sbb
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
push
or
ror
add
push
cld
shl
aam
ret
sahf
aam
call
lock
xchg
loop
jbe
(bad)
hlt
outs
aad
mul
call
rcl
inc
mov
lock
add
lods
mov
ss
pop
mov
jmp
scas
jmp
push
sbb
jmp
(bad)
out
imul
pop
fwait
out
ret
out
scas
mov
(bad)
lock
into
addr16
jmp
mov
sbb
imul
arpl
call
cs
(bad)
push
add
mov
sub
rcl
add
adc
sub
mov
adc
aam
push
sbb
push
sbb
push
sbb
sbb
xor
sbb
xor
sbb
or
ins
sbb
sbb
push
out
sbb
pop
in
sbb
push
int3
sbb
pusha
jl
imul
es
add
dec
lods
ss
pop
ss
sub
add
sub
add
sub
icebp
push
sub
movs
xor
xchg
xor
dec
ss
dec
and
push
xchg
mov
test
push
and
sub
adc
push
adc
ret
jmp
(bad)
jmp
(bad)
jmp
add
adc
mov
adc
add
cmps
jo
push
mov
sbb
add
cld
mul
xor
jmp
cmp
test
imul
cld
div
cs
xadd
cld
adc
cld
ror
xor
hlt
ret
xor
fst
xor
xlat
int
cld
test
xor
cld
icebp
js
cld
shr
add
lods
sub
ret
lods
sub
fist
mov
xor
(bad)
adc
rcr
fisub
rcl
js
ror
push
fs
iret
mov
lods
jmp
cmps
add
jmp
xchg
wrmsr
ds
sub
ret
sub
add
sub
add
sub
add
sub
add
sub
add
add
shr
shr
xor
add
(bad)
push
xchg
cs
xchg
es
push
aas
sti
not
push
repnz
push
loopne
(bad)
call
cmc
push
or
scas
pop
aam
scas
push
int3
push
popf
push
rcl
mov
rcl
stos
cmp
push
sub
mov
adc
push
pusha
mov
push
shl
push
shl
push
ret
arpl
add
fwait
push
ins
or
ficom
mov
cmp
lock
jp
not
push
out
push
jge
out
jne
fist
push
sub
(bad)
nop
pop
push
arpl
xchg
push
loopne
and
jecxz
sbb
shl
push
shl
push
out
imul
add
xchg
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
iret
dec
xor
lock
test
mov
xor
inc
rcl
ss
or
ss
or
ss
or
ss
or
jbe
pop
ss
or
xchg
ss
add
ss
(bad)
adc
push
add
je
cld
ficomp
add
enter
mov
sub
cld
inc
xor
cld
xchg
loopne
cld
out
(bad)
push
cld
ffreep
push
cld
pop
xchg
outs
cld
(bad)
je
cld
mov
and
(bad)
je
cld
push
mov
(bad)
mov
(bad)
sub
pop
sbb
add
mov
sbb
add
mov
sbb
add
fimul
cld
add
add
ins
sbb
fwait
cdq
inc
cld
out
out
fwait
cld
shr
test
shl
(bad)
(bad)
fldz
stc
mul
in
cmc
out
xor
(bad)
mov
lock
jle
lock
or
lds
mov
mov
out
xchg
mov
out
jbe
inc
mov
add
inc
cdq
data16
jmp
push
adc
jmp
inc
ret
ds
mov
jo
adc
jo
adc
jo
adc
jo
adc
cmps
cdq
adc
add
nop
pop
add
cmp
add
adc
pop
add
adc
pop
add
adc
in
lds
pushf
mov
enter
pop
lahf
add
add
adc
mov
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
cmp
jmp
push
dec
adc
jae
add
ss
mov
xchg
xor
dec
call
dec
push
ss
push
adc
xor
call
add
add
call
sbb
or
add
or
add
retf
ss
ss
ss
ss
ret
jmp
(bad)
jmp
(bad)
jmp
mov
adc
mov
mov
scas
cld
(bad)
out
cld
add
add
or
test
cld
add
cld
cmp
xor
push
inc
xor
cmp
xor
xor
cld
xor
cld
inc
inc
cmp
xor
cmp
dec
xor
and
aaa
push
xchg
cld
jns
aaa
cld
imul
cld
cmp
cld
cmp
cld
xor
stc
je
cld
mov
cmp
shl
icebp
add
add
std
icebp
inc
adc
icebp
ds
jbe
lea
repnz
xchg
push
ins
xchg
push
ins
xchg
push
push
lods
lds
adc
leave
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
ss
inc
pop
test
scas
sbb
ja
sahf
push
adc
pop
out
mov
hlt
add
add
dec
loopne
jbe
in
cmc
outs
test
cmc
pushw
jecxz
push
pmulhuw
dec
paddb
push
rdtsc
sub
comiss
daa
bswap
pop
sbb
nop
shrd
dec
setg
adc
lahf
ds
push
lahf
ds
push
lahf
ds
push
cld
pop
clc
push
and
push
xlat
push
push
cs
push
inc
add
add
setg
mov
lahf
ds
lahf
ds
push
lahf
ds
push
lahf
ds
push
add
fisubr
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
inc
jns
test
into
mov
std
xor
rcr
push
lds
add
stos
or
jo
pop
ss
push
ss
(bad)
jae
ss
add
jnp
add
popw
push
ss
adc
ss
jecxz
xor
dec
jecxz
xor
mov
xor
sbb
arpl
cld
or
cmp
cld
mov
xor
mov
xor
mov
xor
les
cld
push
scas
mov
lea
cld
lea
cld
popf
arpl
cld
lea
cld
lahf
sbb
(bad)
mov
call
sbb
adc
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
xlat
mov
aaa
xor
cld
sbb
and
mov
xchg
cwde
call
jle
in
stc
jbe
idiv
outs
lea
xchg
test
pop
pop
xchg
not
fwait
icebp
dec
lea
lock
repz
xchg
cs
jg
es
out
(bad)
loope
fucomip
jecxz
je
mov
pop
mov
not
xor
pusha
sahf
xlat
ficomp
jns
(bad)
adc
into
sbb
(bad)
adc
mov
add
mul
add
sahf
push
inc
dec
lea
mov
call
loop
xchg
pop
add
cs
add
push
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
lock
or
adc
push
dec
sbb
push
sub
clc
or
xor
or
in
or
aam
dec
push
add
add
or
cmp
or
inc
mov
xor
or
lods
stc
repnz
dec
jecxz
xor
aaa
clc
out
xor
ja
ret
xor
jl
add
je
add
pop
popf
add
push
movs
add
pop
popf
add
push
in
ss
add
xor
add
cmp
add
xor
add
xchg
xchg
xor
push
xor
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
adc
mov
sub
sub
sbb
and
inc
cmp
mov
cmp
stc
and
cld
cmp
cld
lock
cld
iret
fs
out
cmp
add
add
dec
ss
push
push
aaa
cld
dec
push
aaa
cld
inc
jae
cld
ficomp
cld
enter
dec
cld
dec
pop
adc
push
pop
paddb
add
cmp
cld
sbb
cld
and
das
cld
adc
das
cld
adc
das
cld
shl
cli
mov
sar
scas
(bad)
cmps
mov
cli
sahf
dec
lock
fisttp
mov
and
add
add
fdivr
leave
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
mov
inc
xor
je
lock
test
lock
test
lock
movs
(bad)
out
(bad)
jmp
out
test
repz
xchg
icebp
fisub
lock
adc
xor
pop
aad
rol
aad
mov
xor
mov
enter
xor
xchg
push
jnp
inc
inc
jnp
mov
pop
xchg
pop
cmc
dec
xchg
pop
sti
dec
xchg
pop
rcl
pop
xchg
xchg
pop
(bad)
inc
test
das
pop
scas
push
imul
not
cmp
not
cmp
rcr
add
mov
mov
fst
add
sbb
add
adc
add
adc
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
inc
inc
and
xor
jne
add
ins
int
ss
add
xor
cmp
div
inc
lods
out
xor
inc
mov
xor
and
fdiv
sub
add
xchg
xor
adc
in
xor
mov
loopne
mov
lods
in
add
arpl
cld
adc
push
(bad)
sti
jb
dec
cld
mov
mov
cld
ret
cld
ret
cld
int3
mov
clc
ror
sbb
or
sbb
add
mov
sbb
add
mov
sbb
add
add
push
sbb
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
mov
ins
dec
cmp
lea
cld
lea
cld
shr
out
out
in
clc
out
out
jecxz
(bad)
in
loope
xchg
mov
into
(bad)
repnz
sar
mov
mov
test
cmps
push
xchg
mov
sahf
cli
int3
add
add
inc
std
rol
cmp
cwde
into
outs
dec
xchg
enter
retf
add
cmp
(bad)
dec
xor
inc
xor
ss
xchg
mov
es
leave
add
leave
add
out
leave
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
rcl
add
adc
pop
add
adc
in
leave
add
out
arpl
call
add
je
in
jo
repz
pop
add
and
fnstcw
imul
out
or
call
inc
add
mov
add
push
push
add
daa
xchg
xor
scas
add
add
xor
cmps
nop
iret
xor
mov
(bad)
scas
mov
xor
stos
jl
xor
push
and
xor
jmp
imul
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
mov
fmul
cld
jg
cmp
aas
dec
cmp
inc
ds
xor
and
add
push
cld
adc
sub
cld
cs
adc
xor
sbb
cld
jae
(bad)
sti
gs
or
(bad)
bound
add
cld
fisub
cld
popa
push
or
pop
push
push
cld
sub
inc
jnp
cld
add
add
push
cld
call
addr16
iret
pop
jb
fistp
cld
fnsave
cld
mov
gs
mov
push
ins
addr16
out
leave
add
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
add
shr
add
out
leave
add
cmp
inc
inc
mov
mov
test
mov
loope
push
in
loope
dec
call
fisttp
out
rol
std
dec
or
clc
dec
(bad)
jmp
inc
add
cdq
pop
imul
test
add
inc
add
ror
js
or
ja
(bad)
jmp
add
add
push
add
and
add
js
cmps
pop
outs
call
push
jb
lds
ror
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
inc
xor
out
push
jg
bound
xor
lds
hlt
xor
xchg
(bad)
out
fwait
mov
xor
cmps
add
xor
push
add
scas
xor
test
in
xor
xchg
mov
xchg
stos
xor
add
arpl
add
add
pop
jo
rcr
cld
shl
cld
lahf
bound
lea
mov
cld
mov
cld
dec
mov
cld
sub
(bad)
mov
adc
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
xlat
mov
add
add
jge
cld
mov
pop
imul
rcl
loope
xor
fist
std
fmul
icebp
aam
and
sar
dec
test
ss
shr
xchg
mov
push
gs
scas
push
addr16
das
mov
test
mov
out
movs
xchg
mov
sahf
call
lea
popf
add
add
nop
lods
mov
mov
sahf
test
push
lods
test
sahf
or
xchg
out
leave
add
out
leave
add
out
leave
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
ins
ret
test
cld
repnz
add
cld
cmps
lahf
outs
cld
sahf
sub
add
loope
push
cmp
sti
push
xor
sti
pop
sub
xchg
sti
outs
xor
push
jnp
ins
inc
test
mov
sti
dec
push
sti
(bad)
xor
push
(bad)
xor
(bad)
out
xor
xchg
icebp
shl
icebp
shl
xchg
stos
xor
movs
lods
xor
dec
xchg
xor
jmp
imul
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
push
mov
mov
pop
cld
(bad)
fwait
stos
cld
dec
jae
cld
add
add
and
adc
mov
sub
cld
cmp
cld
mov
push
cld
jle
arpl
fist
cld
loope
or
out
or
in
or
fist
cld
test
bound
dec
addr16
inc
imul
jbe
cld
cmp
cld
xor
imul
adc
cld
adc
add
add
push
mov
cmps
xchg
or
arpl
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
out
leave
add
mov
inc
xor
or
fdiv
xlat
ret
imul
ffreep
mul
xlat
ret
test
add
fisub
in
into
xchg
nop
mov
mov
adc
and
stc
(bad)
test
stc
fsubr
pop
stc
lods
test
popa
and
push
push
xor
pop
das
clc
push
dec
adc
clc
mov
adc
scas
push
pop
clc
inc
push
arpl
jg
dec
clc
mov
dec
clc
mov
arpl
add
(bad)
clc
inc
mov
ror
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
and
push
inc
cmps
pop
int3
xor
(bad)
retf
(bad)
retf
push
mov
(bad)
clc
int3
xor
push
neg
xor
and
push
push
into
add
sbb
jmp
xor
pop
jb
xor
aas
xor
sub
push
ja
add
ds
outs
jnp
cld
inc
push
pop
cld
inc
pop
ins
cld
jmp
cld
std
ins
push
cld
or
cld
mov
add
cwde
adc
cdq
push
adc
and
(bad)
adc
push
adc
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
repnz
das
cld
loop
das
cld
loop
das
cld
shl
cli
(bad)
ret
into
dec
pop
jle
jnp
lods
add
add
test
shl
cmps
mov
lock
xchg
fcomi
xchg
(bad)
fldlg2
mov
aam
jle
shl
jbe
(bad)
outs
pusha
in
jecxz
pop
jmp
mov
cwde
inc
data16
fsubr
fisubr
mov
inc
je
jle
jge
jns
mov
sahf
push
push
dec
add
dec
add
add
inc
dec
add
pop
add
arpl
add
adc
add
sbb
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
in
leave
add
ins
inc
test
mov
or
pop
hlt
cdq
or
pop
hlt
mov
adc
hlt
stc
or
add
add
hlt
rcl
hlt
rcl
es
xor
push
sbb
(bad)
sbb
repz
or
cli
xor
retf
mov
shl
mov
retf
xor
xchg
test
xor
scas
call
xor
js
test
adc
jge
das
ds
cmp
mov
add
add
mov
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
mov
pop
mov
fisttp
cld
fsub
xor
fadd
xor
or
adc
xchg
ret
cmps
cld
sbb
(bad)
or
cld
jno
cmp
jbe
cmp
dec
push
ss
add
add
or
aas
adc
cld
or
and
xor
sub
inc
cmp
cld
inc
cmp
cld
cmp
daa
cld
inc
cld
popf
and
cld
xchg
aas
paddb
sub
cld
(bad)
push
cld
fsubr
add
cld
repz
sti
shl
or
(bad)
push
cmp
push
cmp
test
out
mov
leave
add
add
mov
leave
add
cld
leave
add
cld
leave
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
cmp
inc
mov
int
adc
push
fcomi
pop
pop
jmp
mov
cmps
jmp
ss
xchg
es
mov
cs
jle
and
add
sbb
mul
icebp
les
jecxz
shl
lock
sub
lock
stc
lock
div
jge
in
lock
cmp
lock
cmp
jns
jbe
xchg
ins
inc
jge
arpl
lock
inc
xor
dec
cmp
lock
lahf
out
add
mov
xor
pop
add
adc
add
adc
pop
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
cmps
(bad)
push
pop
sbb
add
lds
int
xor
push
xor
add
cld
xor
sub
cld
xor
aaa
lock
cmp
add
xor
(bad)
xor
sldt
add
add
jae
add
push
lods
cli
xor
movs
xchg
cmc
xor
cmp
mov
xor
cld
out
add
in
add
loope
or
out
pop
or
fst
cld
ficom
fcom
cld
test
cld
jae
ds
das
retf
fcom
(bad)
xor
adc
or
adc
add
adc
add
adc
add
add
test
mov
adc
add
adc
add
adc
add
adc
or
sub
sub
or
daa
cld
and
cld
sar
jmp
ss
jmp
es
out
push
cmps
test
push
stos
xchg
out
push
mov
test
(bad)
mov
mov
add
add
ins
mov
out
xchg
fidiv
repz
jp
lock
jno
lock
jg
out
mov
(bad)
cli
loop
push
out
rcr
ror
pop
jg
jle
mov
je
xor
in
leave
add
push
pop
add
adc
pop
add
adc
pop
add
adc
add
adc
pop
add
adc
pop
add
adc
sbb
test
mov
push
fsubr
int3
and
in
add
in
stos
jl
in
and
in
jmp
in
rcl
in
fst
in
std
push
movs
in
sti
push
popf
in
stc
dec
xchg
in
in
outs
in
lds
in
ret
inc
pop
in
xabort
out
repnz
add
out
in
in
mov
xor
jp
out
pop
in
out
pop
fsubp
xor
sub
xor
push
out
xor
sub
mov
jmp
imul
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
rol
rol
cld
ds
push
cld
(bad)
cmp
cld
or
aaa
cld
adc
cld
jmp
ss
movs
and
cld
mov
daa
cmp
inc
cmp
cld
xchg
and
cld
mov
cmp
js
cmp
ins
sub
cld
sub
cld
push
sub
cld
ins
cs
pop
sub
cld
add
add
cld
bound
cld
cmp
cmp
push
daa
cmp
or
cmp
cmp
cmp
inc
aas
cmp
out
cmp
cld
div
cmp
cmc
jle
aam
jbe
mul
outs
xor
inc
outs
cld
leave
add
cld
leave
add
cld
leave
add
cld
leave
add
cld
leave
add
cld
leave
add
cld
leave
add
cld
leave
add
cld
leave
add
cld
leave
add
cld
leave
add
add
sar
add
(bad)
cvtpi2ps
out
fdiv
out
fldlg2
fsubrp
fucomi
(bad)
ins
mov
into
dec
movs
mov
dec
xchg
mov
push
repz
jb
lock
je
lock
dec
cli
icebp
xchg
push
inc
sub
jmp
test
jne
repz
jmp
mov
outs
jmp
ins
sbb
dec
jmp
in
add
add
jmp
mov
sub
jmp
dec
das
or
jmp
cwde
and
call
neg
call
jmp
pop
add
nop
pop
add
sub
pop
add
adc
pop
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
lahf
xor
dec
in
xor
(bad)
xor
fdivr
out
shl
in
(bad)
xor
popa
xlat
in
pop
shl
xor
jge
loop
dec
stos
loope
ds
loopne
inc
mov
fbstp
mov
out
xor
mov
jmp
add
add
pop
push
es
cmc
cmp
cld
cmp
cmp
repz
jmp
cld
sub
cmp
pop
or
cld
sbb
movs
cwde
clc
pop
jmp
pop
adc
push
sub
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
(bad)
div
xor
inc
cld
add
add
cld
dec
jp
cld
push
dec
sub
cld
imul
(bad)
in
mov
add
scas
dec
add
cmps
jno
neg
dec
sbb
mov
adc
jle
adc
jbe
lock
sub
sti
push
sub
pop
mov
and
dec
and
and
push
add
mov
jnp
add
add
inc
psllw
fwait
adc
push
inc
adc
sti
inc
sti
not
cli
out
cmp
cmc
out
and
ficomp
mov
lahf
std
aaa
hlt
adc
add
gs
add
cs
add
sbb
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
jmp
dec
(bad)
cld
fnstenv
add
add
lds
push
lds
push
lds
in
les
in
retf
or
push
in
int3
adc
in
xlat
adc
inc
aam
in
fpatan
in
fcomip
in
fdiv
in
loope
in
out
in
sub
fidiv
mov
jmp
mov
lods
loope
xchg
jp
xor
sbb
jns
xor
push
call
xor
dec
fidiv
cmp
xor
push
mov
adc
leave
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
out
ret
add
and
nop
data16
inc
mov
cld
inc
scas
(bad)
sti
add
add
(bad)
sti
adc
(bad)
sti
adc
into
and
cld
and
cmp
jmp
cmp
inc
retf
cmp
(bad)
mov
cmp
lods
ret
stos
cmc
cs
add
das
cld
sub
das
cld
daa
out
cmp
(bad)
lock
sti
repnz
cld
inc
stos
jl
shl
in
les
xchg
cmps
test
cld
jno
sub
cld
add
add
push
cld
rol
outs
out
add
jg
daa
mov
inc
ds
cmp
imul
fucomp
leave
add
in
leave
add
in
leave
add
in
leave
add
in
leave
add
in
leave
add
in
leave
add
in
leave
add
in
leave
add
in
leave
add
daa
add
jg
push
cmp
call
mov
add
or
movs
jg
or
sahf
outs
push
xchg
mov
ins
jb
inc
xchg
xchg
dec
loop
fwait
inc
loop
scas
sbb
xchg
ret
cmp
loope
jmp
js
lods
loope
popf
pop
loope
es
adc
mov
in
dec
(bad)
fsub
dec
add
sbb
add
add
push
pop
add
adc
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
xor
pop
clc
and
dec
mov
(bad)
pop
jle
or
dec
aas
sub
cli
dec
pop
mov
push
or
mov
mov
daa
sti
pop
sub
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
call
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
shl
cld
push
adc
sti
pop
and
add
(bad)
repz
adc
add
mov
adc
add
push
mov
inc
leave
add
in
mov
push
leave
add
add
shr
add
and
add
in
enter
leave
add
in
enter
leave
add
in
enter
leave
add
in
enter
enter
enter
retf
in
retf
(bad)
retf
in
retf
aam
add
in
retf
movs
retf
in
retf
mov
add
in
retf
test
add
in
int3
add
xchg
retf
in
int3
add
add
shl
in
enter
cmps
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
add
adc
daa
add
adc
pop
add
adc
pop
add
adc
ja
add
add
adc
addr16
adc
push
add
adc
inc
add
adc
(bad)
jb
adc
(bad)
(bad)
jmp
(bad)
pop
ret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
adc
(bad)
jmp
(bad)
jmp
(bad)
in
adc
(bad)
lods
js
(bad)
jmp
(bad)
sub
outs
(bad)
inc
jb
add
inc
add
sbb
add
sbb
(bad)
adc
cmc
pop
mov
add
adc
add
add
or
loopne
(bad)
pop
loopne
fcom
xchg
inc
jmp
pop
mov
pop
mov
adc
and
add
adc
add
adc
add
adc
add
adc
add
in
leave
or
in
leave
add
and
dec
ror
dec
rcl
rcr
outs
ror
add
add
enter
in
leave
add
in
leave
add
in
leave
add
out
leave
add
leave
or
ror
shl
clc
out
sti
sub
add
leave
add
in
leave
add
in
leave
add
ins
leave
std
push
xlat
leave
or
ds
mov
cmp
jbe
inc
retf
inc
retf
dec
retf
das
retf
adc
fadd
add
add
adc
xor
fcom
(bad)
push
adc
pop
add
adc
pop
add
adc
fld
mov
jno
mov
ftst
hlt
ja
pusha
add
dec
add
push
add
dec
add
mov
mov
adc
jno
icebp
adc
pop
add
adc
add
adc
push
add
adc
(bad)
jmp
adc
(bad)
sub
ret
jmp
(bad)
jmp
(bad)
sbb
popa
(bad)
rol
push
iret
ret
test
ret
rol
adc
(bad)
jmp
(bad)
xchg
ret
sahf
ret
jg
add
ret
retf
(bad)
xchg
ret
mov
jo
jmp
(bad)
push
mov
sub
inc
mov
adc
add
adc
add
add
mov
imul
cld
pop
adc
and
mov
sub
add
adc
add
mov
adc
xor
add
call
adc
add
clc
and
add
adc
add
adc
adc
adc
add
adc
add
adc
add
mov
adc
xor
in
leave
add
or
stos
in
leave
or
in
leave
add
cmc
leave
adc
mov
leave
sub
in
leave
add
shr
or
add
cld
add
add
leave
and
mov
leave
jmp
in
leave
xadd
add
in
leave
or
xchg
rol
loope
xor
mov
leave
imul
stc
add
in
leave
or
push
retf
add
mov
adc
int3
leave
imul
leave
adc
int3
jmp
add
adc
cs
and
mov
iret
adc
mov
push
daa
jmp
sbb
jnp
sbb
ins
ret
bound
arpl
data16
fdiv
arpl
je
arpl
pop
into
and
cwde
outs
add
aas
or
ins
or
mov
and
xor
push
jne
dec
mov
pop
xor
mov
fisttp
js
add
and
mov
cmp
push
es
movs
pop
and
mov
add
call
or
je
sbb
dec
scas
aam
sbb
retf
in
xchg
inc
stos
sti
mov
cmp
(bad)
cdq
cmp
or
cmc
in
in
in
(bad)
cmp
iret
pop
pop
scas
mov
add
addr16
mov
xchg
mov
xchg
call
ins
cmp
jbe
pop
xchg
pusha
cmc
dec
movs
ds
outs
sti
cmp
cmp
leave
dec
stos
jo
cmp
inc
mov
xchg
jbe
jo
ins
lods
cmp
data16
pop
ret
or
clc
icebp
sub
cmp
les
push
outs
mov
idiv
movs
cmp
enter
jmp
xchg
jbe
outs
mov
and
add
movs
ja
ss
(bad)
ror
aas
rcr
ins
push
cdq
xchg
pop
push
xchg
not
lods
mov
jne
inc
or
icebp
dec
push
or
xchg
add
inc
std
add
dec
push
sub
xchg
and
icebp
dec
add
add
or
xchg
add
inc
std
add
dec
xchg
inc
jge
xchg
and
inc
jge
lock
xchg
inc
imul
inc
jge
xchg
movs
cdq
inc
jge
arpl
mov
inc
jge
pop
adc
adc
cmp
aad
jmp
clts
pop
xor
push
mov
sub
sahf
aaa
inc
add
add
pusha
aaa
mov
shl
loopne
dec
xor
push
bound
mov
jo
pushw
cmp
or
xor
or
cmp
or
cmp
or
cmp
xchg
pop
or
or
cmp
or
ss
pop
mov
std
lods
scas
test
sti
stos
or
xchg
stos
jns
push
add
add
jne
xchg
call
adc
test
xchg
repnz
icebp
xor
sar
es
hlt
pusha
fdivr
stos
aam
hlt
shr
cmc
add
or
and
fprem1
mov
mov
adc
cmc
mov
in
aas
test
jg
xchg
rcl
test
add
int3
inc
test
aam
xor
fld
int
or
mov
xor
scas
xor
ja
jb
sbb
rol
xor
add
xor
add
xor
push
cmc
xor
push
xchg
xor
push
inc
xor
push
push
push
push
ja
dec
push
cmp
adc
or
aaa
jge
test
sub
shl
add
add
pop
cli
ss
mov
xchg
or
or
mov
pop
shl
iret
xor
scas
mov
cld
repnz
adc
xor
mov
sti
test
xor
loope
mov
sar
loop
stc
pop
loop
jmp
jmp
sbb
popa
loope
fsubr
(bad)
enter
retf
sti
fisttp
pop
loopne
add
add
push
loopne
stos
add
js
fisttp
mov
lods
mov
sti
test
sar
mov
jmp
cdq
(bad)
jmp
fimul
ficom
fsubr
xchg
or
sub
xchg
sub
stos
sub
or
sub
adc
adc
adc
inc
adc
sub
adc
sub
add
add
adc
or
stos
sub
adc
adc
sub
sub
push
fldcw
mov
cmp
sub
push
pop
xor
adc
jne
popf
add
and
jge
(bad)
adc
stos
clc
inc
xlat
jle
cs
(bad)
scas
fisubr
mov
outs
cli
ret
scas
fdivrp
and
fs
mov
add
add
sar
nop
sbb
cld
outs
xchg
mov
push
repz
cld
hlt
repz
cld
lods
repz
std
jge
xchg
std
pop
rol
std
mov
ror
std
call
stos
and
add
stc
in
(bad)
call
inc
movs
ins
out
adc
jae
mov
push
cli
test
out
cmp
add
add
sti
mov
out
cli
dec
cmp
cli
pop
cmp
xor
out
sar
cld
into
cmp
cld
fnstsw
in
sti
cli
cmp
sti
mov
pop
cld
cdq
cmp
(bad)
cmp
cmp
sti
mov
cmp
cld
push
cmp
push
cmp
add
sub
cmp
hlt
xlat
aas
mov
std
mov
add
add
std
adc
in
hlt
or
rol
imul
loopne
out
push
loopne
out
loopne
fist
loopne
into
sub
cmp
mov
mov
mov
cli
faddp
sahf
push
fcomip
xchg
mov
enter
stc
or
mov
cli
xlat
icebp
sar
lock
or
out
clc
sbb
push
stc
pop
add
add
pop
stc
mov
mov
clc
in
mov
clc
stc
mov
sti
adc
cmp
(bad)
mov
add
sub
add
sub
add
sti
add
sbb
add
je
jb
hlt
add
sub
les
adc
rol
lds
inc
add
xor
xor
xor
xor
add
xor
mov
jb
loope
mov
lds
mov
cmp
ret
or
sub
or
cs
or
or
cmps
cs
or
cs
(bad)
lahf
stos
loop
loop
pop
repnz
repnz
scas
repnz
jmp
int3
repnz
rep
call
lods
repz
jne
xor
mov
add
hlt
or
stc
repz
movs
inc
hlt
push
xchg
hlt
jb
cdq
hlt
sbb
sub
(bad)
(bad)
hlt
(bad)
out
cmc
jne
jle
cmp
xor
stos
out
cmc
mov
fprem1
jmp
mov
add
jmp
add
ja
lods
add
add
xor
add
fld
xor
jle
mov
push
fnsave
pop
sti
jle
dec
sti
pop
xor
stos
cli
mov
xor
test
xor
mul
cmp
movs
cmp
stc
cmp
fidivr
pop
(bad)
jge
dec
(bad)
mov
push
cld
inc
cmp
xchg
loopne
mov
add
stos
leave
fiadd
cli
fld
xchg
(bad)
in
fwait
mov
into
test
jmp
idiv
fsubrp
movs
in
and
(bad)
jmp
sub
add
mov
push
rcl
icebp
mov
in
lods
retf
mov
in
lods
inc
not
lea
neg
xchg
sub
add
in
in
shl
div
lahf
loop
add
add
jecxz
lahf
fnstcw
loope
enter
fwait
or
jo
adc
aas
xor
add
sti
sub
or
sub
or
sub
or
adc
or
sub
or
sub
or
add
iret
pop
rcl
and
or
sub
add
jns
add
or
and
or
and
or
and
sbb
mov
rcl
out
adc
clc
loop
leave
clc
jmp
stc
cli
xlat
and
adc
stc
clc
cli
mov
stc
repnz
or
sub
pop
stc
cmp
popa
stc
xor
imul
adc
cmp
cli
mov
stc
repnz
add
xchg
stc
jb
cdq
stc
jp
mov
stc
mov
jno
xchg
into
jns
jp
cmp
sub
fyl2xp1
cmp
mov
push
into
lods
stc
(bad)
xlat
(bad)
movs
sub
xor
mov
aaa
test
out
les
div
fs
xchg
movs
sbb
add
mov
cld
sbb
sahf
aaa
sub
mov
and
scas
aaa
sbb
inc
aaa
movs
sub
aaa
inc
sub
into
rcr
xor
push
xchg
ss
sbb
dec
cmp
and
pop
and
push
and
cwde
and
cmp
and
cmp
push
rcr
jmp
shl
jmp
shr
fstp
rol
retf
add
add
shr
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
scas
leave
add
adc
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
pop
add
adc
add
adc
pop
add
adc
pop
add
adc
(bad)
jmp
(bad)
jmp
add
jne
add
hlt
mov
push
dec
pop
mov
cld
cmp
and
imul
in
mov
cmp
mov
and
leave
mov
mov
sbb
mov
call
add
add
bound
je
and
mov
push
mov
fwait
out
pop
sub
leave
mov
mov
mov
mov
test
mov
pop
mov
and
dec
leave
mov
add
adc
fwait
test
inc
inc
add
add
xor
dec
into
jo
lea
inc
mov
setle
jl
xchg
jmp
push
mov
fcmovb
xchg
dec
ror
sbb
jge
xchg
mov
mov
mov
jmp
pop
cmp
call
movs
bound
iret
test
add
jge
add
jne
add
add
add
mov
and
xor
inc
imul
add
(bad)
imul
push
push
dec
sub
jnp
push
(bad)
imul
adc
and
fmul
add
push
inc
push
std
xchg
or
dec
push
sub
mov
adc
add
add
push
(bad)
push
cmp
push
(bad)
sub
dec
mov
retf
test
cld
rol
iret
test
add
jge
add
jne
add
adc
and
scas
mov
cmp
adc
iret
jge
add
jne
add
xchg
mov
mov
mov
cld
int3
dec
out
shl
add
add
std
rol
iret
cmc
rol
iret
xchg
mov
and
mov
ffreep
push
(bad)
cld
mov
out
ror
ror
cld
mov
dec
(bad)
mov
push
(bad)
push
dec
push
mov
mov
and
pop
xor
rcl
inc
(bad)
mov
rol
cli
adc
add
rcr
inc
push
leave
adc
mov
dec
and
sar
add
stos
retf
add
mov
pop
or
add
rol
iret
cmc
rol
iret
je
and
mov
inc
rcr
test
add
jge
add
jne
add
hlt
nop
and
mov
or
mov
add
rcl
push
lds
aas
push
push
xchg
mov
inc
(bad)
mov
inc
inc
push
mov
mov
mov
cmp
arpl
cmp
inc
dec
push
xor
lods
push
pop
stc
int
xor
ins
pop
inc
inc
in
nop
xor
test
inc
inc
mov
aas
push
leave
nop
mov
cmp
add
nop
fwait
sti
add
add
xlat
add
inc
dec
mov
es
dec
cdq
mov
or
nop
mov
ret
mov
or
xor
iret
hlt
nop
and
mov
dec
sub
cmc
mov
mov
xchg
mov
mov
add
adc
fwait
repz
bound
mov
add
test
lds
imul
mov
push
int
xor
add
push
xor
rol
add
inc
push
mov
rol
pop
mov
test
mov
leave
inc
mov
mov
cmp
mov
or
and
jl
mov
adc
add
xchg
scas
adc
inc
lds
rol
jl
mov
in
xchg
lock
inc
inc
in
mov
add
ror
pushf
mov
inc
dec
mov
push
mov
mov
aas
inc
jge
ror
cmp
mov
or
xor
mov
or
cmp
add
add
mov
sub
pusha
adc
test
inc
dec
adc
ror
mov
add
aas
inc
sbb
mov
ret
and
mov
sub
leave
add
je
and
ret
push
(bad)
cld
lods
xchg
out
ror
inc
ror
sahf
mov
add
mov
push
cmp
push
dec
push
mov
mov
iret
jne
add
hlt
mov
mov
xchg
sahf
mov
xchg
add
ds
les
iret
cmc
leave
add
je
and
loope
(bad)
mov
add
cmp
push
test
dec
ret
pop
mov
add
leave
mov
mov
cmp
mov
add
stc
ret
stos
stc
inc
dec
cdq
mov
jbe
mov
mov
sbb
imul
add
inc
dec
dec
mov
mov
mov
mov
lods
adc
ret
sbb
and
jl
add
add
enter
add
cmc
enter
mov
mov
inc
mov
or
inc
inc
lds
iret
std
enter
enter
mov
and
jbe
ror
mov
inc
push
mov
popa
mov
lds
mov
jmp
adc
inc
ror
push
pop
mov
cld
add
add
xchg
or
dec
push
imul
adc
imul
push
sub
xchg
gs
dec
leave
fs
push
in
push
and
xor
inc
int
mov
stos
mov
ret
ror
jbe
int3
cmp
mov
sbb
(bad)
ja
mov
add
stc
inc
push
add
add
mov
cmp
mov
cli
inc
inc
mov
inc
dec
popa
add
hlt
sar
inc
push
popa
push
gs
std
gs
inc
sub
ficom
pusha
push
mov
push
push
movzx
dec
jmp
dec
push
call
xchg
lods
je
fidiv
fiadd
adc
xor
mov
or
add
add
pop
adc
rcl
and
push
xchg
cld
in
ror
xor
sub
imul
adc
inc
inc
popa
mov
fwait
repz
fld
cmp
inc
push
and
dec
mov
inc
repz
and
aas
xchg
in
add
pop
xor
add
pop
adc
pop
and
sahf
sbb
dec
push
mov
leave
inc
cmc
sahf
mov
cmp
mov
inc
cwde
mov
xchg
mov
mov
inc
rol
test
push
popa
cwde
jo
rcl
inc
popa
mov
add
adc
fwait
jecxz
mov
inc
rol
aaa
(bad)
aad
inc
shl
loope
(bad)
push
dec
or
adc
jmp
mov
cld
inc
fld
mov
push
dec
cmc
xchg
ret
mov
repz
push
mov
add
loope
(bad)
push
cmp
push
and
push
xchg
mov
push
mov
addr16
mov
stos
das
cld
outs
xchg
or
pop
ss
daa
ret
mov
add
les
inc
rol
mov
add
fist
cmp
mov
mov
inc
rcl
sub
fld
jmp
xchg
or
and
xchg
mov
lods
xchg
imul
inc
xor
jmp
adc
or
add
add
loope
iret
jne
add
adc
and
ins
push
or
jne
add
hlt
sahf
and
dec
inc
ds
xchg
cmp
pop
and
cmc
xchg
mov
pop
add
add
je
and
jmp
outs
and
lods
xor
mov
mov
and
mov
out
add
fs
add
adc
and
test
fmul
add
cmp
rcl
add
adc
mov
pushf
or
and
add
push
pop
pop
mov
mov
pushf
mov
add
sub
les
mov
mov
out
rcl
add
xchg
repz
loope
mov
add
je
or
add
adc
jns
adc
cld
mov
out
shl
push
inc
push
gs
xchg
cmp
mov
and
jmp
push
repnz
inc
dec
cdq
sahf
ret
lahf
mov
adc
inc
and
push
imul
sar
inc
sar
push
add
add
xchg
xchg
mov
dec
(bad)
leave
je
and
cmc
xchg
(bad)
leave
out
shl
adc
cld
inc
fxch
mov
push
(bad)
iret
scas
xor
mov
push
(bad)
mov
cwde
imul
push
xchg
jmp
scas
xor
mov
movs
aas
dec
mov
dec
ss
fwait
mov
add
add
fwait
sbb
mov
dec
(bad)
leave
jb
and
push
inc
push
add
je
and
inc
inc
push
jno
xchg
ret
push
sub
or
cmp
add
fwait
out
pop
xor
jl
aas
inc
fstp
jb
adc
les
mov
adc
add
add
call
leave
call
or
inc
adc
dec
mov
ret
mov
aam
add
adc
xchg
ret
xor
je
and
pushf
mov
cmps
loope
(bad)
mov
jne
inc
shl
mov
dec
sar
fisubr
xchg
jo
enter
dec
ret
xor
stc
ret
stos
add
test
fsub
inc
rcl
inc
rcr
(bad)
jbe
inc
push
xchg
test
dec
mov
rol
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
add
add
adc
mov
daa
push
xor
pop
xor
daa
outs
xor
add
mov
and
xor
mov
cmc
xor
and
xor
and
or
sti
cmp
sub
cmp
mov
push
sub
mov
imul
cmps
aas
add
push
aas
pop
sub
add
mov
(bad)
ds
sub
ds
sub
add
mov
lock
ds
sub
pop
sub
jb
pop
sub
cmp
lds
sar
lahf
daa
mov
cmp
daa
sub
das
sub
cmp
in
sub
out
xor
mov
sub
cmp
sub
cmp
add
sti
sub
cmp
sub
jp
cs
sub
add
xor
mov
and
out
cwde
and
xchg
xor
and
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
rcl
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
and
jmp
jmp
jmp
jmp
jmp
