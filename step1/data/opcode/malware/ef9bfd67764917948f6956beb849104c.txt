nop
pop
or
add
add
dec
add
add
add
add
add
mov
loopne
add
add
add
xor
aaa
add
add
add
adc
add
push
sub
es
push
sub
cwde
add
add
and
add
cmp
add
cmp
add
add
xchg
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
pop
add
adc
add
mov
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
sub
add
push
and
add
add
mov
push
mul
or
icebp
inc
outs
push
popa
and
add
add
add
add
add
(bad)
(bad)
(bad)
jge
(bad)
(bad)
cmp
(bad)
jmp
and
test
(bad)
inc
and
and
sahf
movs
stos
popa
cmp
dec
add
add
or
add
and
add
add
add
xor
add
pop
add
add
cmp
(bad)
jmp
push
and
loope
and
cmp
rol
add
sub
add
push
and
add
add
add
xor
add
push
add
add
push
(bad)
(bad)
inc
and
sbb
xlat
fisub
dec
(bad)
(bad)
jmp
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
and
add
push
cmp
add
and
dec
add
add
adc
sldt
add
cmp
add
adc
and
and
mul
sbb
cmp
add
add
or
sbb
adc
add
and
add
add
xor
add
pop
or
adc
add
and
add
add
and
add
and
inc
sbb
pop
push
pop
inc
push
add
add
add
out
add
imul
push
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
nop
add
add
add
add
cmp
add
add
or
test
daa
xlat
pop
and
jl
jmp
call
cmp
add
add
push
add
add
movs
add
add
or
pop
ret
pop
and
cmp
(bad)
dec
adc
add
pop
aas
pop
bound
and
add
add
js
add
adc
and
shl
mov
lods
mul
dec
(bad)
(bad)
inc
sub
add
push
pop
or
and
add
cmp
add
adc
and
int3
pop
and
cmp
(bad)
(bad)
call
add
pop
adc
push
add
add
sub
add
adc
and
outs
mov
and
push
adc
popa
cmp
(bad)
(bad)
call
sub
add
or
pop
add
add
add
add
dec
or
dec
add
add
add
add
(bad)
(bad)
jmp
(bad)
call
add
add
add
out
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
add
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
add
aad
add
aaa
add
add
add
add
push
(bad)
(bad)
jmp
and
add
add
lahf
(bad)
(bad)
inc
jae
add
or
push
sub
jecxz
(bad)
jmp
and
add
add
push
add
push
cmp
(bad)
(bad)
cmp
(bad)
call
push
and
imul
(bad)
cmp
add
add
add
push
or
or
add
cmp
(bad)
call
or
mov
loope
pop
and
pop
adc
inc
push
adc
adc
or
adc
add
and
cmp
(bad)
jmp
and
int
fwait
and
add
xchg
sbb
shl
inc
sub
add
adc
add
cmp
(bad)
(bad)
jmp
adc
and
pop
popa
pop
and
cmp
std
(bad)
dec
imul
adc
and
add
add
(bad)
(bad)
call
or
retf
mov
test
sub
cmp
push
pop
jae
add
or
pop
and
add
add
mov
(bad)
call
or
xchg
mov
jno
and
cmp
sub
add
adc
push
add
add
add
add
sub
es
and
add
add
cmp
add
add
adc
sbb
or
sub
add
sub
pop
add
add
push
sbb
sub
add
adc
and
add
add
cmp
add
add
adc
or
and
cmp
add
add
adc
adc
and
add
add
loop
add
adc
adc
mov
call
add
add
or
push
and
adc
pop
sbb
and
add
sub
add
push
cmp
stos
add
add
or
cwde
push
fwait
xchg
pop
cmp
add
adc
pop
or
pop
pop
or
popa
sahf
and
add
cmp
add
or
pop
sbb
and
outs
add
add
(bad)
call
add
and
dec
scas
gs
add
adc
out
pop
or
inc
test
add
pop
adc
pop
adc
sahf
and
add
add
add
add
or
xor
push
(bad)
pop
and
sub
add
add
or
adc
sbb
add
add
add
push
or
add
add
add
(bad)
inc
add
sbb
add
add
(bad)
jmp
std
(bad)
(bad)
jle
add
jae
add
pop
add
add
add
fild
add
pop
add
add
add
inc
add
sub
add
add
add
(bad)
(bad)
(bad)
clc
add
add
add
add
and
add
sub
(bad)
jmp
add
add
add
add
add
add
add
add
retf
add
add
add
add
std
(bad)
jmp
add
mov
(bad)
dec
add
add
add
add
add
add
add
aam
add
mov
add
mov
add
add
add
add
(bad)
(bad)
call
add
call
sldt
add
and
or
mul
push
out
and
cmp
add
adc
adc
and
adc
pop
adc
and
add
add
clc
(bad)
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
add
loop
(bad)
call
adc
and
add
add
aad
(bad)
call
pop
pop
or
pop
pop
or
popa
sahf
and
mov
or
pop
adc
and
add
add
lods
(bad)
(bad)
call
or
sti
mov
pop
and
daa
daa
ret
mov
add
adc
inc
add
and
cmp
and
add
add
adc
sbb
pop
sbb
sahf
and
add
add
fs
(bad)
call
or
add
and
cmp
add
adc
lea
out
mov
add
add
adc
or
add
cmp
(bad)
(bad)
jmp
mov
dec
and
add
add
pop
dec
and
add
push
adc
add
or
or
ret
pop
pop
and
or
add
and
add
adc
push
adc
push
xchg
or
xchg
popa
sahf
and
add
add
in
(bad)
jmp
push
add
add
and
add
add
aam
(bad)
dec
or
sbb
or
add
ret
std
(bad)
call
or
aam
mov
pop
and
(bad)
popa
cmp
add
add
adc
sahf
and
add
add
cmp
and
mov
pop
pop
movups
pop
setne
pop
setne
and
jl
(bad)
call
pop
sbb
pop
sbb
or
push
add
push
cmp
add
add
and
add
add
pop
std
(bad)
call
or
or
repnz
and
xor
add
add
pop
pop
or
xchg
or
or
pop
add
add
push
add
push
cmp
std
(bad)
(bad)
cmp
pop
pop
adc
and
add
add
adc
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
cmp
cld
(bad)
call
or
push
and
adc
push
rcr
sub
loopne
(bad)
jmp
and
push
xchg
xchg
dec
popa
and
pop
inc
and
add
or
add
fld
add
push
add
add
(bad)
(bad)
push
std
(bad)
(bad)
fiadd
add
jb
(bad)
jmp
cld
(bad)
(bad)
mov
add
add
(bad)
inc
std
(bad)
call
add
sub
add
(bad)
(bad)
(bad)
(bad)
jp
add
and
add
add
(bad)
call
sti
(bad)
(bad)
cli
(bad)
(bad)
(bad)
std
sti
(bad)
jmp
(bad)
inc
(bad)
inc
add
add
(bad)
(bad)
call
add
test
(bad)
call
sti
(bad)
inc
add
add
push
add
add
aaa
cld
(bad)
call
or
push
and
adc
rcr
sub
add
push
cmp
cld
(bad)
jmp
and
add
sub
rol
add
add
sldt
push
or
or
cli
sti
(bad)
call
or
mov
xchg
data16
(bad)
(bad)
call
adc
and
add
add
(bad)
(bad)
call
or
ja
into
cdq
pop
and
cmp
(bad)
(bad)
call
or
push
add
push
add
add
xor
add
cmp
mov
int
(bad)
call
or
adc
sti
(bad)
jmp
adc
add
sub
(bad)
sti
(bad)
jmp
adc
mov
and
inc
ret
cmp
or
aad
mov
rcr
(bad)
(bad)
call
add
cmp
(bad)
jmp
and
push
sti
(bad)
call
or
mov
test
cmovl
cmp
(bad)
call
add
pop
adc
push
add
add
xor
(bad)
call
or
xor
or
and
cmp
call
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
add
lea
in
jne
cmp
add
add
das
mov
and
(bad)
call
pop
pop
adc
pop
xchg
or
xchg
popa
sahf
and
add
add
cmp
cli
(bad)
jmp
pop
adc
adc
pop
and
add
add
ret
cli
(bad)
call
or
jmp
and
mov
jge
cmp
std
(bad)
call
pop
adc
xchg
adc
and
add
add
cmp
and
mov
push
add
add
stos
push
sti
imul
pop
adc
add
add
jne
(bad)
call
or
sbb
fbld
stos
popa
cmp
or
or
popa
or
jmp
and
add
pop
cmp
(bad)
jmp
adc
ficomp
push
pop
and
cmp
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
pop
cmp
cli
(bad)
jmp
cmp
(bad)
call
adc
and
add
add
or
(bad)
call
pop
pop
or
pop
pop
or
or
or
popa
sahf
and
add
add
repz
(bad)
call
or
arpl
addr16
and
add
sub
push
std
(bad)
dec
adc
pop
add
and
add
or
add
add
and
add
add
sar
call
or
lahf
sti
out
sbb
iret
add
popa
cmp
cld
(bad)
jmp
dec
out
aaa
or
add
popf
stc
(bad)
call
or
add
and
push
shl
mov
(bad)
call
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
and
add
add
jno
(bad)
jmp
jmp
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
add
push
add
push
cmp
(bad)
cmp
(bad)
jmp
adc
pop
add
add
add
add
push
add
push
retf
pop
and
sub
je
adc
add
push
or
mov
sbb
jnp
popa
and
pop
inc
adc
add
mov
add
xor
add
xchg
add
push
add
add
add
add
add
add
add
add
add
sub
add
les
add
test
add
loop
add
add
add
add
add
add
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
pusha
jl
and
mov
jmp
(bad)
inc
outs
sbb
or
add
and
xchg
xor
add
cmps
or
mov
es
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
push
add
or
push
mov
or
pop
and
jae
mov
js
push
int
cmp
outs
pop
push
or
add
and
or
leave
and
add
push
push
icebp
retf
and
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
ss
out
and
dec
mov
(bad)
call
pop
and
loope
and
(bad)
loop
cmp
(bad)
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
(bad)
shl
pop
and
add
ret
call
push
movs
add
add
or
pop
and
push
sub
test
int
(bad)
inc
sbb
add
pop
and
xchg
int3
pop
and
popf
pop
jg
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
ret
nop
mov
and
jge
popa
cmp
pop
and
xchg
xchg
adc
xchg
int3
pop
das
popa
cmp
lea
add
sbb
hlt
or
repnz
(bad)
inc
outs
sbb
or
add
and
mov
push
add
add
leave
and
pop
and
popa
cmp
(bad)
call
add
adc
adc
and
sub
popa
pop
and
push
pop
lods
popa
cmp
std
(bad)
inc
sub
adc
pop
add
add
add
add
push
add
sub
and
mov
add
push
or
jecxz
out
xor
push
xchg
ror
and
pop
inc
sldt
add
add
add
add
push
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
cmp
add
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
adc
and
xchg
mov
xor
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
mov
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
cmp
(bad)
call
add
adc
adc
and
(bad)
sbb
and
cmp
call
pop
and
and
ficomp
xchg
ins
out
ss
cmp
(bad)
inc
outs
sbb
or
add
and
ds
cmp
add
add
int3
out
aaa
and
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
scas
pop
and
add
(bad)
dec
push
mov
or
pop
and
mov
pop
and
sub
std
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
popf
xchg
js
and
ficom
popa
cmp
std
(bad)
inc
outs
pop
push
or
add
and
push
add
add
movs
in
and
lods
std
(bad)
call
pop
and
push
loopne
pop
and
cmp
sbb
add
outs
push
push
or
add
and
pusha
mov
and
add
cmp
adc
and
popa
cmp
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
dec
data16
and
test
cmp
std
(bad)
inc
sub
xor
add
add
add
add
push
add
pop
cs
sub
add
popa
adc
add
push
or
inc
add
jp
pop
(bad)
sub
popa
and
pop
inc
push
add
add
add
call
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
cmp
add
cmp
add
outs
pop
push
or
add
and
cmp
add
add
adc
into
and
imul
pop
popa
cmp
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
push
mov
or
pop
and
and
popa
popa
cmp
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
and
shl
retf
cmp
(bad)
call
add
adc
adc
and
add
mov
adc
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
add
outs
add
add
adc
or
push
adc
and
stc
mov
pop
and
mov
popa
cmp
(bad)
inc
sbb
add
pop
and
stc
jl
pop
and
pop
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
rcr
xchg
pop
and
push
(bad)
cld
popa
cmp
std
(bad)
inc
outs
sbb
or
add
and
push
and
add
les
cmp
std
(bad)
call
pop
and
xchg
sbb
and
rol
popa
cmp
outs
sbb
or
add
and
jecxz
aaa
and
add
mov
cmp
push
movs
add
add
or
pop
and
mov
xchg
shr
std
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
and
stc
sub
cmp
(bad)
inc
sub
add
adc
pop
add
add
add
add
push
add
pop
in
into
in
and
sbb
add
div
inc
and
or
adc
pop
adc
adc
add
daa
add
add
add
add
add
add
add
xlat
add
add
add
in
add
pop
add
add
add
xor
add
cmps
(bad)
(bad)
inc
add
add
add
add
call
add
jle
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
cmp
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
in
pop
and
cmp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
and
into
test
std
(bad)
(bad)
inc
outs
pop
push
or
add
and
jnp
and
add
fcom
adc
and
mov
pop
popa
cmp
(bad)
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
mov
pop
mov
ss
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
dec
sahf
neg
das
clc
cmp
cmp
(bad)
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
and
inc
ror
popa
cmp
(bad)
inc
outs
push
push
or
add
and
out
adc
add
mov
cmp
(bad)
(bad)
inc
outs
sbb
or
add
and
push
or
add
in
push
ins
and
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
in
lahf
pop
and
pop
mov
popa
cmp
std
(bad)
inc
pop
push
or
pop
and
and
xchg
popa
cmp
push
mov
or
pop
and
lea
and
mov
xchg
std
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
std
mov
and
cli
adc
std
(bad)
call
push
movs
add
add
or
pop
and
and
adc
add
add
or
push
popa
jg
and
cmp
add
adc
pop
add
add
add
add
push
add
xlat
jo
push
pop
and
dec
repz
popa
adc
add
push
or
movs
retf
and
(bad)
popa
and
pop
inc
sldt
add
add
add
add
inc
add
adc
add
loope
add
sub
add
add
add
add
add
add
add
sahf
add
add
add
scas
(bad)
(bad)
dec
add
je
add
cmp
add
adc
(bad)
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
adc
and
inc
iret
pop
and
jle
aas
popa
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
push
movs
call
popa
cmp
(bad)
dec
push
mov
or
pop
and
sti
sahf
retf
ret
popa
cmp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
loope
dec
pop
and
ins
cmp
mov
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
movs
test
mov
aam
popa
cmp
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
push
add
or
pop
and
popa
sbb
popa
cmp
outs
push
push
or
add
and
cmp
add
add
sbb
cmp
add
add
sub
add
or
add
or
add
or
push
adc
and
push
mov
and
lods
popa
or
(bad)
inc
sbb
add
pop
and
xor
add
mov
cmp
std
(bad)
jmp
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
jne
popa
cmp
push
movs
add
add
or
pop
and
vcvtsd2ss
out
mov
mov
(bad)
inc
outs
pop
push
or
add
and
cmp
add
add
(bad)
lock
icebp
and
(bad)
inc
outs
sbb
or
add
and
aaa
pop
hlt
and
add
inc
mov
adc
and
popa
cmp
std
(bad)
inc
sub
sub
es
add
add
add
sub
sub
es
add
or
add
inc
add
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
dec
sub
es
add
or
add
or
add
or
add
sub
add
push
dec
add
dec
add
dec
add
dec
add
outs
or
add
sub
dec
sub
es
dec
add
dec
add
outs
xor
add
sub
jp
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
xor
add
sub
cmp
add
push
dec
add
outs
or
add
sub
cmp
add
push
dec
add
outs
or
add
sub
es
add
or
add
pop
add
push
sub
sub
es
add
or
add
add
add
sub
xor
add
add
add
add
adc
add
push
add
add
add
add
add
adc
add
add
add
adc
add
push
sub
add
push
sub
add
push
cmp
add
add
and
add
add
xchg
add
add
add
bound
add
add
add
add
push
cmp
add
add
add
add
add
add
add
add
sbb
add
add
or
add
cmp
add
sbb
add
(bad)
(bad)
jmp
or
add
sub
add
push
cmp
add
add
sub
add
add
add
pop
jge
add
add
add
adc
add
sbb
add
(bad)
(bad)
jmp
adc
add
cmp
add
add
stc
cmp
mov
cmp
add
add
and
pop
and
test
add
add
push
jge
add
add
sldt
add
into
add
add
cmp
add
and
add
add
sbb
add
cmp
mov
add
pop
inc
add
add
idiv
(bad)
jmp
or
add
cmp
sbb
add
and
add
add
nop
add
add
les
push
popa
and
inc
or
add
ret
(bad)
(bad)
call
add
add
add
add
add
add
add
xor
add
in
add
add
jmp
adc
add
cmp
add
add
add
jnp
add
add
fs
jge
add
add
add
add
cmp
add
add
add
cmp
and
add
bound
add
add
xchg
add
add
push
add
add
push
add
dec
add
add
add
add
add
(bad)
inc
add
add
add
add
(bad)
call
(bad)
call
add
add
(bad)
(bad)
(bad)
out
(bad)
(bad)
(bad)
jle
add
sub
add
add
add
add
add
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
or
add
sub
add
push
cmp
jnp
add
add
or
add
add
or
pop
add
add
js
(bad)
inc
and
add
pop
pop
and
cmp
(bad)
(bad)
inc
add
add
add
bound
jnp
add
add
sbb
add
and
push
add
add
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
inc
adc
or
add
cmp
mov
cmp
add
add
dec
cli
push
pusha
and
adc
(bad)
(bad)
inc
add
add
add
bound
jnp
add
add
sbb
add
shl
push
add
add
adc
loope
(bad)
inc
and
(bad)
fistp
xchg
jbe
cs
cmp
call
sub
(bad)
and
in
cmp
(bad)
inc
jnp
add
add
add
add
inc
sar
(bad)
cmp
(bad)
jmp
and
add
add
mov
popa
add
add
jnp
add
add
inc
adc
adc
add
cmp
inc
addr16
and
add
repz
ffree
pop
ds
popa
cmp
std
(bad)
inc
and
add
pop
jge
add
add
adc
add
push
cmp
(bad)
jmp
pop
and
and
pop
repnz
cmp
sub
add
sub
es
pop
sub
sbb
add
push
push
sub
cmp
add
push
dec
add
outs
or
add
xor
add
add
adc
add
push
sub
es
add
jge
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
add
add
adc
add
push
and
add
add
cmp
add
and
sbb
and
add
pop
(bad)
aam
and
add
push
pop
pop
or
or
add
cmp
add
and
mov
mov
add
outs
pop
add
add
add
pop
pop
bound
leave
(bad)
(bad)
call
sub
add
push
cmp
and
add
add
sbb
add
pop
inc
add
add
idiv
(bad)
(bad)
cmp
or
add
dec
add
dec
add
add
add
add
push
add
add
add
mov
(bad)
push
(bad)
(bad)
call
add
and
add
pop
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
call
or
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
jnp
add
add
loopne
add
add
sub
add
push
and
and
add
cmp
rcr
and
add
add
js
(bad)
call
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
pop
push
sbb
and
popf
aad
and
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
fdivr
(bad)
jmp
pop
add
add
and
add
cmp
(bad)
(bad)
jmp
pop
and
clc
adc
leave
fsub
mov
add
adc
add
add
add
adc
add
push
and
cld
add
add
push
add
push
and
add
add
in
add
add
cmp
or
add
pop
cmp
add
add
pop
or
sub
add
push
cmp
add
and
add
cmp
add
add
jnp
add
add
and
add
add
mov
add
pop
inc
add
add
idiv
(bad)
jmp
pop
add
add
popf
add
add
jno
add
and
adc
je
movs
popa
mov
popa
and
add
add
dec
add
add
add
add
(bad)
(bad)
dec
add
add
or
and
add
add
cmp
add
cmp
pop
bound
jnp
add
add
loopne
add
add
add
sbb
add
pop
or
push
add
add
and
add
cmp
add
add
xor
add
and
xchg
(bad)
(bad)
inc
push
ds
add
and
add
add
push
add
add
pop
pop
or
fdivr
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
cmc
adc
je
cmp
add
add
iret
xchg
fs
(bad)
inc
pop
add
add
add
pop
pop
bound
add
adc
add
add
add
adc
add
push
pop
sub
add
push
cmp
and
add
cmp
add
push
pop
bound
and
add
add
dec
add
add
add
inc
pop
cmp
pop
and
cmp
add
add
pop
pop
or
or
add
cmp
add
add
add
stos
and
pop
pop
and
inc
sbb
popa
cmp
or
push
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
(bad)
(bad)
push
(bad)
jmp
add
add
add
and
add
add
mov
add
or
popf
push
pop
and
and
popa
cmp
add
push
or
or
add
cmp
add
hlt
stos
clc
push
and
sbb
sub
add
add
add
add
loopne
add
add
add
sbb
add
or
add
and
add
cmp
(bad)
jmp
and
mov
shl
stc
test
in
and
pop
inc
or
add
mov
add
ins
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
push
add
clc
(bad)
(bad)
jmp
add
and
(bad)
jmp
or
and
and
dec
out
and
call
add
mov
sbb
cmps
into
popa
cmp
or
pop
pop
pop
bound
and
add
add
out
(bad)
inc
or
and
add
cmp
(bad)
(bad)
call
or
push
(bad)
jmp
and
add
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
add
add
popf
(bad)
(bad)
jmp
pop
add
add
stos
(bad)
(bad)
jmp
or
(bad)
cmp
(bad)
(bad)
inc
sub
add
adc
add
add
add
adc
add
push
and
add
add
xchg
add
add
sub
inc
cld
and
add
gs
and
add
push
or
add
add
push
cmp
add
adc
mov
dec
ja
and
push
int
cmp
pop
bound
and
add
add
and
add
cmp
add
adc
iret
in
mov
pop
and
cmc
or
cmp
add
add
push
pop
loopne
add
add
add
sbb
add
and
add
add
push
add
add
or
cmp
add
add
add
add
dec
add
add
add
add
add
pop
add
add
add
add
(bad)
dec
add
add
add
mov
add
xchg
add
add
(bad)
push
(bad)
(bad)
inc
add
add
or
add
cmp
inc
mov
push
cdq
pop
mov
and
inc
pop
add
add
add
add
add
adc
(bad)
push
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
push
add
add
and
add
cmp
(bad)
jmp
push
or
or
add
pop
cmp
(bad)
jmp
or
pop
or
sub
add
push
cmp
add
and
add
add
push
(bad)
(bad)
call
or
add
dec
(bad)
(bad)
(bad)
cmp
add
pop
or
pop
pop
pop
bound
and
add
add
xor
(bad)
call
add
jge
in
pop
and
mov
adc
(bad)
dec
add
(bad)
cmp
(bad)
jmp
and
add
add
push
(bad)
(bad)
jmp
int
(bad)
call
inc
sub
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
sldt
add
add
adc
add
push
sub
es
add
sub
add
sub
adc
add
movs
add
add
add
adc
add
push
and
add
add
sub
add
cmp
add
jge
add
add
or
add
sub
add
push
cmp
or
mov
or
pop
inc
or
add
xor
add
fadd
add
mov
add
sldt
add
add
daa
add
add
add
add
(bad)
(bad)
jmp
add
add
cmp
add
cmp
add
add
push
jge
add
add
add
aas
add
add
and
mov
push
pop
and
or
cmp
add
add
add
bound
jnp
add
add
sub
add
shl
push
add
add
cwde
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
cmp
add
or
add
sub
add
cmp
(bad)
call
add
mov
or
add
cmp
(bad)
(bad)
jmp
sbb
push
add
add
outs
dec
icebp
shl
(bad)
inc
adc
add
pop
add
add
and
add
add
cmp
pop
and
and
outs
mov
(bad)
(bad)
inc
pop
pop
or
add
add
cmp
(bad)
jmp
out
xchg
hlt
movs
cmp
(bad)
(bad)
inc
sbb
stos
(bad)
(bad)
jmp
sub
add
sub
add
push
cmp
and
add
add
dec
(bad)
(bad)
inc
and
add
xchg
sub
popa
cmp
or
or
add
cmp
(bad)
inc
and
push
pop
and
mov
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
push
add
add
add
or
add
adc
add
push
add
add
add
adc
add
push
and
add
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
and
add
add
sub
add
cmp
add
cmp
add
or
test
popa
and
add
add
fdivr
(bad)
jmp
add
add
add
add
sub
add
cmp
and
add
add
sub
add
and
arpl
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
inc
ret
add
cmp
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
push
(bad)
(bad)
dec
add
add
add
dec
(bad)
(bad)
(bad)
js
add
and
add
add
leave
(bad)
(bad)
inc
and
add
bound
add
add
add
add
sub
add
push
cmp
bound
add
add
jnp
add
add
bound
jnp
add
add
sub
add
shl
push
add
add
push
add
add
cmp
add
push
and
add
add
sub
add
cmp
jmp
pop
cmp
add
add
pop
add
add
pop
(bad)
(bad)
jmp
or
add
add
xor
imul
(bad)
jmp
add
adc
add
add
add
adc
add
push
and
add
add
add
add
or
bound
adc
pusha
or
cwde
add
add
and
add
add
jmp
add
and
sbb
sbb
add
pop
push
adc
pop
pop
pop
or
adc
add
cmp
add
add
mov
mov
and
pop
inc
or
add
rol
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
and
add
add
add
add
cmp
or
add
pop
cmp
add
add
add
add
and
add
add
pop
add
add
inc
add
add
idiv
(bad)
jmp
sldt
add
dec
add
add
push
pop
pop
pop
adc
sub
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
sub
add
adc
mov
and
push
mov
(bad)
(bad)
inc
pop
or
ret
jmp
add
add
dec
push
add
or
add
add
add
add
jle
add
inc
(bad)
(bad)
push
(bad)
(bad)
jmp
add
mov
(bad)
(bad)
(bad)
cmp
add
test
add
outs
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
call
add
add
add
pop
add
add
adc
add
sub
add
push
cmp
(bad)
(bad)
jmp
xchg
dec
cmp
cmp
add
add
and
push
adc
adc
(bad)
pop
popa
cmp
push
ds
add
add
add
add
cmp
(bad)
inc
and
add
add
(bad)
(bad)
jmp
adc
add
sub
add
push
cmp
jmp
push
push
bound
and
add
add
xor
daa
add
push
and
add
add
and
add
add
test
dec
(bad)
(bad)
inc
or
add
push
(bad)
(bad)
call
add
push
pop
and
xchg
aam
popa
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
add
cmp
(bad)
(bad)
jmp
push
jge
cs
add
sbb
xlat
ins
and
(bad)
dec
pop
pop
or
add
mov
jnp
add
add
and
add
add
lods
(bad)
(bad)
call
add
mov
fld
(bad)
call
add
sub
push
mov
popa
cmp
push
jge
add
add
or
add
cmp
(bad)
call
or
push
add
add
imul
add
add
push
bound
jnp
add
add
sub
add
shl
and
add
cmp
(bad)
jmp
jb
les
cmp
(bad)
dec
sub
add
cmp
add
push
dec
add
sub
add
or
add
sub
es
dec
add
outs
or
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
enter
or
add
sub
es
sub
es
and
add
add
cmp
add
rol
add
lea
add
add
add
add
or
add
sub
add
push
cmp
mov
add
add
or
lea
add
add
add
add
add
xor
outs
add
add
push
push
push
mov
add
and
add
add
pop
add
add
jae
add
push
jge
add
add
xor
add
push
cmp
add
add
and
add
add
xor
pop
or
lea
add
add
add
add
pop
add
add
sbb
jae
add
push
jge
add
add
jg
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
push
add
add
add
add
(bad)
push
add
(bad)
(bad)
call
add
jmp
add
or
add
add
add
add
xchg
add
and
add
cmp
(bad)
push
(bad)
dec
add
or
(bad)
(bad)
fild
add
xchg
add
add
add
add
cmp
jae
add
push
jge
add
add
push
add
add
xor
outs
(bad)
(bad)
jmp
add
jae
add
push
jge
add
add
or
add
cmp
(bad)
inc
and
add
add
lea
add
add
add
add
push
add
add
cmp
pop
or
lea
add
add
add
add
adc
add
sub
and
(bad)
jmp
add
xor
add
and
add
add
cmp
(bad)
(bad)
jmp
shr
add
and
add
add
add
push
cmp
(bad)
(bad)
jmp
add
loopne
add
add
jge
add
add
adc
loopne
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
pop
add
add
sbb
add
add
or
cmp
pop
cmp
adc
add
cmp
pop
jb
lea
add
add
add
add
or
add
pop
cmp
add
add
push
jge
add
add
add
add
push
cmp
(bad)
jmp
push
pop
pop
or
add
(bad)
jmp
and
add
sub
pop
(bad)
(bad)
jmp
add
add
push
jge
add
add
sldt
add
dec
(bad)
(bad)
inc
adc
add
add
add
cmp
(bad)
(bad)
call
idiv
(bad)
jmp
sbb
add
pop
cmp
(bad)
(bad)
jmp
add
or
lea
add
add
add
add
adc
add
cmp
(bad)
(bad)
call
or
add
add
cmp
std
(bad)
jmp
adc
add
jnp
add
push
add
adc
add
push
and
add
add
cmp
pop
and
add
into
cld
jecxz
popa
cmp
add
add
jnp
add
add
sub
add
push
and
add
add
add
cmp
add
add
add
add
cmp
add
add
pop
add
add
pusha
add
add
inc
add
add
idiv
(bad)
jmp
add
add
cmp
add
jnp
add
add
sub
add
push
and
add
add
add
add
movs
pop
into
dec
and
xor
sbb
and
add
add
fdivr
(bad)
call
add
add
add
(bad)
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
inc
add
xor
add
xchg
(bad)
(bad)
inc
add
add
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
add
jge
add
cmp
add
add
and
add
add
mov
jp
add
add
jge
add
add
or
add
sub
add
push
cmp
fwait
(bad)
(bad)
call
cmp
(bad)
jmp
or
add
cmp
jnp
add
add
add
add
sub
add
push
or
push
add
add
add
push
cmp
(bad)
jmp
shr
push
sub
xchg
(bad)
(bad)
jmp
and
add
add
dec
(bad)
(bad)
inc
and
or
(bad)
mov
or
(bad)
jmp
add
xor
adc
add
add
add
sub
es
add
add
add
add
cmp
add
sub
add
xor
or
add
push
add
adc
add
push
and
add
add
pop
add
add
cmc
mov
dec
cld
ss
popa
and
add
add
fdivr
(bad)
(bad)
jp
add
sbb
add
mov
adc
add
and
xor
and
add
cmp
jnp
add
add
sub
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
jp
add
and
add
cmp
(bad)
(bad)
inc
and
and
cmp
(bad)
inc
jnp
add
add
sub
add
push
and
add
add
test
and
pushf
(bad)
pop
and
cmp
(bad)
(bad)
inc
push
pop
pop
jge
add
add
pop
add
add
test
(bad)
call
add
pop
pop
bound
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
cmp
(bad)
jmp
sub
adc
add
push
add
add
sub
es
and
add
add
add
push
cmp
mov
pop
pop
or
sub
add
push
cmp
add
and
add
add
mov
and
cmp
out
popa
cmp
sbb
pop
or
sbb
add
cmp
add
and
imul
cmp
add
add
add
int3
add
add
adc
add
and
add
add
pop
add
add
jnp
add
add
add
add
add
cmp
add
and
add
add
cmp
add
or
or
lahf
mov
and
ins
cmc
inc
popa
cmp
add
push
pop
pop
or
pop
add
add
sbb
add
and
jo
and
add
xchg
xchg
outs
and
add
add
jnp
add
add
cmp
add
add
cmp
add
add
pop
pop
or
sldt
add
loop
add
and
xacquire
int3
shr
pop
pop
pop
inc
pop
add
add
add
add
(bad)
(bad)
(bad)
std
add
add
add
add
add
push
add
add
add
jecxz
(bad)
jmp
call
add
inc
(bad)
(bad)
jmp
add
and
add
add
add
rol
add
add
add
add
add
add
sti
add
add
add
add
add
add
cmp
add
add
add
add
sub
add
push
and
add
add
push
add
add
into
add
add
or
or
add
cmp
add
or
cmps
cwde
popf
jo
and
dec
(bad)
jle
cmp
(bad)
call
or
or
add
cmp
add
add
and
rol
out
pop
and
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
hlt
add
add
jl
add
add
sbb
and
add
cmp
add
add
jnp
add
add
loopne
add
add
sub
add
push
and
ret
add
add
and
js
ins
pop
and
aam
(bad)
dec
and
adc
mov
ret
inc
sbb
add
and
add
push
cmp
or
push
outs
xchg
(bad)
pop
and
ret
mov
popa
cmp
jnp
add
add
loopne
add
add
sub
add
push
and
add
cmp
add
add
add
add
loopne
add
add
sub
add
push
and
add
add
cmp
or
inc
cmp
adc
dec
(bad)
(bad)
inc
pop
jb
clc
add
add
sbb
sbb
add
shl
add
push
es
add
add
adc
add
dec
add
dec
add
add
add
(bad)
call
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
dec
cld
(bad)
jmp
add
adc
(bad)
dec
add
add
(bad)
(bad)
(bad)
in
add
add
add
add
add
add
add
add
(bad)
(bad)
push
std
(bad)
jmp
std
(bad)
dec
(bad)
inc
cld
(bad)
jmp
std
(bad)
jmp
(bad)
(bad)
jmp
add
xor
add
mov
(bad)
jmp
std
(bad)
inc
add
add
add
add
add
adc
add
cmp
(bad)
call
cmp
add
add
add
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
add
push
cmp
(bad)
jmp
sbb
add
add
idiv
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
push
mov
dec
cmp
(bad)
inc
jnp
add
add
loopne
add
add
sub
adc
add
(bad)
dec
and
ret
push
popa
cmp
std
(bad)
dec
and
and
inc
jmp
push
or
and
add
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
add
add
mov
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
mov
mov
cmp
add
add
jmp
lods
cld
(bad)
call
or
pop
add
add
jle
(bad)
jmp
mov
(bad)
inc
pop
or
pop
cld
(bad)
jmp
pop
add
add
add
push
cmp
(bad)
jmp
or
imul
sbb
ins
cld
(bad)
inc
jnp
add
add
add
push
and
add
add
xor
mov
cmp
add
add
inc
repz
or
(bad)
inc
jnp
add
add
cmp
add
add
cmp
(bad)
(bad)
dec
and
test
pop
pop
and
cmp
cld
(bad)
inc
pop
pop
or
sbb
add
cmp
std
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
cmp
std
(bad)
jmp
aaa
cld
jp
cmp
sti
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
cmps
std
(bad)
jmp
mov
push
add
add
bound
cmp
and
bound
pop
and
pop
repz
mov
add
add
xor
add
or
add
sub
es
and
add
add
ins
or
add
pop
and
call
add
push
add
add
push
or
add
jnp
pop
out
and
add
pop
hlt
dec
mov
add
add
add
add
add
adc
and
add
sub
and
add
and
cmp
add
add
js
hlt
mov
and
mov
cmp
or
add
cmp
or
add
mov
mov
das
pop
and
cmp
add
or
add
pop
add
add
aad
add
and
ret
push
out
cmp
add
add
enter
and
outs
je
int
popa
cmp
add
push
or
dec
add
add
test
mov
loop
adc
mov
add
add
add
add
jnp
add
add
or
inc
add
push
sbb
or
das
add
add
jne
add
sbb
add
add
idiv
(bad)
jmp
inc
add
add
popa
or
add
mov
push
sub
mov
add
add
jnp
add
add
pop
sub
add
and
add
add
aaa
or
add
or
add
sub
add
adc
and
jp
and
and
jl
popa
cmp
adc
jmp
or
pop
or
add
add
(bad)
(bad)
jmp
sub
add
cmp
or
add
repz
repz
add
call
ja
add
adc
(bad)
(bad)
jmp
cmp
add
sub
les
add
adc
and
and
inc
fsub
dec
add
add
add
or
add
add
sub
popf
or
add
adc
(bad)
adc
and
add
add
mov
add
adc
and
mov
inc
adc
cmp
add
add
adc
sub
add
cmp
add
and
push
adc
adc
pop
aaa
pop
inc
aaa
add
add
add
add
(bad)
(bad)
call
(bad)
jmp
add
xor
add
ret
std
(bad)
dec
(bad)
(bad)
call
add
add
or
add
add
icebp
add
add
pop
or
add
add
add
(bad)
push
add
add
jle
add
movs
add
add
add
jbe
(bad)
(bad)
mov
pop
add
cmp
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
push
std
(bad)
dec
add
pusha
(bad)
(bad)
dec
add
fiadd
add
mov
add
push
pop
add
add
add
test
add
out
add
fild
add
enter
inc
add
add
add
add
add
and
add
add
xor
imul
mov
add
cvtps2pd
jle
retf
push
(bad)
inc
add
add
add
push
push
add
and
add
add
add
push
cmp
or
add
xor
inc
add
add
idiv
(bad)
jmp
inc
add
add
and
add
and
mov
(bad)
(bad)
call
add
je
add
and
add
cmp
or
add
mov
fnsave
sub
jp
cmp
jnp
add
add
aas
add
push
and
add
add
fimul
add
sbb
add
add
(bad)
(bad)
jmp
and
add
cmp
or
add
add
jno
add
and
add
cmp
loopne
cmps
stc
and
add
cmp
in
cli
and
ins
test
popa
cmp
(bad)
inc
add
add
add
push
sbb
inc
add
push
and
or
cmp
add
cmp
add
shl
add
push
and
add
add
cmp
add
es
or
stos
cmp
std
(bad)
call
or
cmp
add
add
and
add
add
cmp
add
es
jl
push
and
add
cmp
adc
and
rcl
repnz
popa
cmp
std
(bad)
inc
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
sbb
add
cmp
add
and
add
add
test
add
mov
pop
ror
scas
xor
mov
jle
(bad)
dec
adc
xor
(bad)
pop
add
adc
and
and
push
std
popa
cmp
(bad)
inc
jnp
add
add
jnp
add
add
add
inc
add
push
adc
and
add
add
mov
inc
add
add
idiv
(bad)
jmp
dec
add
add
lea
add
adc
and
push
dec
fstp
bound
adc
jnp
add
add
or
inc
add
push
and
add
cmp
add
adc
add
add
push
pop
add
and
leave
mov
and
add
dec
mov
cmp
cld
(bad)
inc
add
add
jnp
add
add
pop
add
push
and
add
add
cmp
pop
add
es
add
(bad)
(bad)
jmp
dec
add
add
add
inc
add
add
idiv
(bad)
jmp
sbb
add
cmp
push
add
cmp
or
adc
and
add
add
fiadd
add
and
cmp
add
add
jnp
pop
out
and
(bad)
inc
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
sbb
add
and
add
and
add
add
pop
add
adc
adc
add
jge
add
pop
or
cmp
jno
add
sbb
add
add
(bad)
(bad)
jmp
inc
add
add
cmp
add
and
in
sti
(bad)
inc
jnp
add
add
dec
add
push
and
add
cmp
add
adc
and
jmp
sahf
xor
(bad)
sti
(bad)
call
add
add
add
sbb
add
sbb
add
(bad)
(bad)
jmp
inc
add
add
add
add
and
test
cmp
outs
adc
add
inc
add
add
out
add
adc
and
sbb
ins
pop
and
aam
popa
cmp
(bad)
call
add
add
add
add
add
cmp
add
xor
jmp
and
adc
and
xor
cmp
(bad)
inc
add
add
add
adc
jnp
add
add
push
sub
add
and
cmp
add
cmp
add
adc
and
and
push
int
popa
cmp
sti
(bad)
inc
jnp
add
add
jnp
add
add
push
sub
add
and
xor
add
cmp
add
adc
and
pop
or
jl
(bad)
popa
cmp
cli
(bad)
call
add
(bad)
(bad)
jmp
xor
add
cmp
add
mov
push
add
add
icebp
mov
cmp
or
add
cld
add
add
rcl
out
cmp
add
add
add
adc
and
popa
cmp
(bad)
call
mov
pop
jle
pop
and
imul
add
add
add
or
inc
add
push
loopne
add
add
add
add
add
push
add
push
and
add
popf
add
add
add
jae
add
and
add
add
xor
xchg
add
add
add
add
jnp
add
add
sub
add
and
add
and
add
add
arpl
add
add
(bad)
(bad)
jmp
sbb
add
cmp
add
and
loopne
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
sbb
add
and
(bad)
jmp
adc
add
sub
add
push
cmp
add
add
or
add
and
popf
stc
(bad)
inc
jnp
add
add
inc
add
push
and
add
add
in
add
add
adc
push
pop
pop
pop
bound
and
add
add
(bad)
add
add
add
jne
add
cmp
(bad)
jmp
inc
add
add
xor
mov
and
(bad)
cmp
add
add
repnz
hlt
stc
push
jmp
stc
(bad)
call
mov
mov
jns
jno
popa
cmp
stc
(bad)
inc
jnp
add
add
sub
add
adc
and
add
add
outs
add
add
add
(bad)
(bad)
jmp
dec
add
add
pop
add
add
mov
cmp
pushf
mov
jecxz
(bad)
call
or
(bad)
jmp
inc
add
add
add
add
xchg
aas
out
and
add
ds
and
and
sbb
mov
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
sbb
add
and
(bad)
jmp
or
add
cmp
add
add
push
push
fistp
inc
jnp
add
add
adc
sub
add
and
add
sub
add
push
cmp
add
add
mov
add
xor
add
and
add
add
test
cmp
(bad)
jmp
adc
add
push
cmp
adc
and
and
mov
popa
cmp
clc
(bad)
inc
jnp
add
add
jnp
add
add
add
jnp
add
add
sub
add
and
add
adc
and
push
add
add
add
push
and
add
inc
add
add
add
add
add
xor
xor
add
and
test
sar
idiv
call
mov
iret
add
pop
and
cmp
adc
and
add
pop
cmp
add
adc
and
and
sahf
fadd
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
sbb
add
and
cli
(bad)
jmp
add
push
sub
data16
(bad)
jmp
and
add
cmp
mov
sbb
iret
div
popa
cmp
idiv
call
add
jo
add
and
add
add
mov
add
and
in
cmp
add
add
jo
shr
(bad)
inc
or
dec
add
add
imul
and
cwde
mov
pop
and
icebp
inc
popa
cmp
idiv
call
mov
shl
cmps
icebp
dec
popa
cmp
idiv
call
mov
and
and
retf
idiv
inc
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
sbb
add
and
add
add
add
add
push
or
add
cmp
add
add
and
aad
cmp
or
add
add
sub
fiadd
add
sbb
add
add
(bad)
(bad)
jmp
cmp
add
cmp
add
add
mov
es
cmp
(bad)
call
add
jb
add
and
add
sub
movs
add
add
adc
and
and
xor
mov
(bad)
dec
adc
and
add
cmp
jnp
add
add
jnp
add
add
or
inc
add
push
pop
adc
and
arpl
add
and
test
cmp
cmc
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
sbb
add
cmp
adc
add
cmp
add
adc
and
mov
les
call
add
jno
add
cmp
cli
(bad)
jmp
and
add
dec
adc
dec
add
add
add
(bad)
jmp
(bad)
(bad)
ds
inc
std
(bad)
jmp
(bad)
call
clc
(bad)
(bad)
ds
inc
idiv
(bad)
(bad)
(bad)
jmp
clc
(bad)
jmp
hlt
(bad)
inc
idiv
inc
(bad)
(bad)
(bad)
call
repz
call
(bad)
jmp
sti
(bad)
jmp
jmp
(bad)
dec
(bad)
dec
sti
(bad)
inc
(bad)
(bad)
jle
(bad)
call
(bad)
(bad)
cmp
(bad)
(bad)
fdivp
(bad)
(bad)
mov
sti
(bad)
call
(bad)
call
(bad)
dec
clc
(bad)
call
(bad)
(bad)
jl
(bad)
push
clc
(bad)
inc
cli
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
push
repz
call
(bad)
call
cli
(bad)
(bad)
mov
clc
(bad)
(bad)
out
std
(bad)
jmp
hlt
(bad)
(bad)
fincstp
(bad)
call
(bad)
dec
(bad)
call
idiv
dec
dec
(bad)
call
cmc
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
call
(bad)
jmp
cld
(bad)
call
cli
(bad)
(bad)
cli
cmc
(bad)
jmp
std
(bad)
call
(bad)
push
cmc
(bad)
push
stc
(bad)
jmp
repnz
call
(bad)
dec
repz
jmp
(bad)
call
add
add
add
add
add
push
cmp
add
add
xor
add
add
push
sub
add
push
sub
ja
add
and
add
add
add
add
sub
call
push
pop
or
inc
or
add
cmp
add
jb
add
rol
add
add
jmp
add
add
add
add
add
add
add
and
add
add
(bad)
add
add
push
and
push
fucomip
pop
and
cmp
adc
add
add
push
cmp
pop
cmp
add
add
mov
push
xchg
pop
or
and
add
add
pop
add
adc
and
(bad)
mov
and
cmp
(bad)
call
add
pop
adc
push
pop
pop
pop
pop
bound
add
adc
add
cmp
add
adc
and
and
test
(bad)
inc
push
xchg
pop
or
and
cmp
add
adc
and
pop
xor
pop
and
cmp
(bad)
(bad)
call
add
and
add
cmp
add
add
xor
add
es
add
add
add
add
dec
pop
add
or
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
fsin
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
add
sbb
add
data16
add
add
add
add
add
push
add
add
(bad)
(bad)
inc
add
add
adc
add
cmp
sbb
and
add
add
cmp
sbb
add
add
idiv
(bad)
jmp
pop
add
add
cmp
and
mov
pop
and
bound
popa
cmp
(bad)
call
push
and
adc
pop
and
into
popa
popa
cmp
(bad)
(bad)
call
add
add
and
add
add
dec
(bad)
(bad)
(bad)
cmp
or
das
add
push
and
add
add
xor
(bad)
call
push
and
and
and
(bad)
inc
or
sub
add
push
and
add
add
push
(bad)
(bad)
jmp
mov
loope
and
add
adc
out
and
(bad)
inc
adc
sub
add
cmp
(bad)
(bad)
jmp
adc
and
or
pop
and
and
scas
std
(bad)
inc
sbb
and
add
add
ret
call
adc
sub
(bad)
jmp
and
add
add
scas
(bad)
(bad)
jmp
adc
(bad)
jmp
adc
add
sbb
add
adc
add
push
sub
add
push
sub
sub
add
and
add
add
xchg
add
add
xor
add
and
add
add
xchg
add
cmp
add
add
sbb
add
add
pop
add
add
and
add
add
imul
add
sbb
or
add
add
pop
add
add
cmp
add
add
cmp
add
and
(bad)
(bad)
add
pop
inc
add
add
fdivr
(bad)
dec
(bad)
(bad)
js
add
and
add
add
sbb
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
push
add
add
push
add
dec
add
add
add
call
(bad)
inc
(bad)
call
(bad)
jge
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
add
add
cmp
(bad)
(bad)
jmp
sbb
push
add
add
dec
pop
clc
lahf
and
inc
cmp
imul
push
and
xchg
cld
dec
pop
and
cmp
(bad)
call
sub
add
cmp
add
push
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
dec
sub
es
add
or
add
or
add
sldt
or
dec
sub
es
dec
add
dec
add
outs
bound
add
sub
pop
sub
es
dec
add
dec
add
dec
add
outs
push
add
push
sub
dec
sub
es
dec
add
dec
add
outs
dec
add
push
sub
dec
sub
es
dec
add
dec
add
outs
and
add
sub
pop
sub
es
dec
add
dec
add
dec
add
outs
arpl
add
sub
cmp
add
push
dec
add
outs
dec
add
push
sub
cmp
add
push
dec
add
outs
push
add
push
sub
cmp
add
push
dec
add
outs
add
push
sub
push
add
push
dec
add
dec
add
dec
add
dec
add
outs
push
add
push
sub
dec
sub
es
dec
add
dec
add
outs
push
add
add
push
dec
add
dec
add
outs
add
push
sub
outs
sub
es
add
or
add
or
add
or
add
or
add
and
add
sub
add
push
dec
add
dec
add
dec
add
outs
dec
add
push
sub
cmp
add
push
dec
add
outs
add
push
sub
sub
es
add
or
add
xor
add
sub
add
push
dec
add
dec
add
outs
daa
add
push
sub
pop
sub
es
dec
add
dec
add
dec
add
outs
data16
push
sub
jp
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
push
add
push
sub
cmp
add
push
dec
add
outs
and
add
xor
add
add
add
add
adc
add
push
sub
es
sub
add
sub
add
cmp
add
and
add
add
jl
add
add
adc
lea
add
add
add
add
push
add
add
add
add
sub
add
and
add
add
push
add
add
pop
adc
lea
add
add
add
add
add
add
cmp
add
add
jae
add
push
jge
add
add
(bad)
(bad)
(bad)
jmp
and
add
add
cmp
add
add
add
add
adc
cmp
(bad)
(bad)
jmp
pop
add
add
push
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
jl
add
add
adc
and
add
add
push
add
push
cmp
sub
add
xor
add
add
add
add
adc
add
push
and
add
add
push
add
push
cmp
add
and
cmp
add
add
sbb
inc
(bad)
cmp
add
add
add
add
add
or
add
cmp
inc
add
add
idiv
(bad)
jmp
or
add
sub
add
cmp
add
and
loope
add
push
add
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
mov
(bad)
call
add
add
add
or
add
mov
add
and
add
and
add
add
mov
cmp
(bad)
jmp
add
add
cmp
and
stc
and
shl
retf
mov
cmp
add
add
add
add
loopne
add
add
sbb
add
push
add
or
and
cmp
(bad)
jmp
pop
and
fistp
inc
sub
daa
add
add
jnp
add
add
loopne
add
add
sbb
add
push
add
or
add
cmp
js
xor
and
mov
popa
and
or
add
int3
(bad)
(bad)
(bad)
mov
add
add
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
add
sub
add
sub
add
cmp
(bad)
jmp
and
add
add
push
add
push
cmp
(bad)
(bad)
jmp
ror
push
and
add
add
push
add
push
cmp
cmp
add
add
pop
pop
or
pop
add
add
push
add
push
cmp
and
sti
retf
pop
and
push
inc
mov
cmp
(bad)
inc
and
aad
mov
jge
popa
cmp
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
and
add
add
push
add
push
cmp
add
pop
and
pop
mov
mov
xchg
popa
cmp
jl
add
add
pop
add
push
cmp
and
add
add
add
add
mov
add
push
or
add
add
cmp
and
and
dec
mov
add
add
add
add
add
fild
add
sub
add
sub
add
cmp
and
add
add
cmc
add
add
jnp
add
add
loopne
add
add
sub
add
add
cmp
add
add
inc
iret
retf
and
mov
and
or
add
xor
add
dec
(bad)
(bad)
inc
add
add
(bad)
push
add
add
dec
pop
add
add
fwait
add
add
jl
add
add
sbb
or
add
sub
add
cmp
jl
add
and
sahf
(bad)
(bad)
inc
and
sub
xor
mov
(bad)
inc
pop
pop
or
or
add
cmp
add
add
add
pop
add
push
and
cmp
add
es
aam
xor
add
in
outs
sub
(bad)
inc
jnp
add
add
loopne
add
add
sub
sbb
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
jns
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
jge
(bad)
jmp
(bad)
call
(bad)
(bad)
dec
add
add
or
add
cmp
(bad)
(bad)
inc
and
and
push
cmps
cmp
(bad)
(bad)
jmp
add
add
xor
cld
add
add
add
adc
add
push
pop
sub
add
cmp
and
add
add
cmp
add
es
add
inc
push
popa
and
or
add
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
or
add
cmp
add
add
dec
mov
(bad)
and
add
dec
mov
cmp
add
add
sub
add
push
and
add
add
sub
add
cmp
add
add
sub
add
push
cmp
add
add
pop
add
add
cmp
sbb
add
add
(bad)
(bad)
jmp
push
add
add
je
add
pop
and
xor
and
push
je
cmp
inc
jnp
add
add
loopne
add
add
add
push
add
push
sub
and
fist
pushf
adc
popa
cmp
(bad)
(bad)
inc
add
add
add
loopne
add
add
add
push
add
push
and
or
add
pop
cmp
add
add
pop
cmp
jns
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
(bad)
jmp
jmp
add
add
add
add
add
scas
(bad)
(bad)
jmp
add
and
(bad)
dec
add
add
(bad)
(bad)
inc
add
add
cmp
jnp
add
pop
and
outs
fist
adc
cmp
or
sbb
add
and
xchg
(bad)
(bad)
call
dec
add
push
and
add
add
test
(bad)
inc
jl
add
add
sub
add
push
cmp
or
add
pop
cmp
(bad)
jmp
pop
and
dec
ins
inc
pop
and
xor
aas
(bad)
(bad)
inc
push
pop
or
or
add
cmp
(bad)
jmp
pop
sbb
cwde
cmp
(bad)
(bad)
inc
sub
sub
es
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
sldt
add
add
adc
add
push
sub
es
add
pop
add
push
sub
adc
add
add
add
adc
add
push
and
add
add
test
cmp
or
dec
shl
cmp
add
add
jge
add
add
pop
add
add
aam
add
add
loopne
or
add
jge
add
add
push
add
add
and
add
add
mov
add
and
sbb
add
add
add
pop
pop
bound
pop
jge
add
add
or
pop
add
push
cmp
and
or
xlat
and
add
push
mov
or
xchg
imul
pop
popa
cmp
add
add
add
and
add
adc
add
cmp
add
pop
cmp
add
add
sldt
add
dec
add
add
add
add
add
jnp
add
add
pop
pop
pop
bound
and
add
add
xor
add
rcl
add
es
sub
add
cmp
(bad)
jmp
and
add
add
push
add
add
and
add
pop
pop
pop
or
adc
add
cmp
add
add
and
out
cs
and
out
retf
cmp
add
add
add
add
loopne
or
add
sub
add
and
add
add
aad
add
or
xchg
outs
repz
aaa
aas
out
sbb
xor
add
pop
push
inc
sub
add
and
add
cmp
inc
add
add
idiv
(bad)
jmp
add
add
cmp
mov
add
add
sbb
inc
and
add
add
add
add
cmp
add
adc
add
cmp
add
push
or
add
add
add
inc
add
add
idiv
(bad)
jmp
adc
push
add
add
idiv
(bad)
jmp
adc
add
cmp
jnp
add
add
dec
(bad)
(bad)
jmp
add
add
cmp
add
add
dec
(bad)
mov
add
add
add
add
inc
mov
(bad)
(bad)
cmp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
call
(bad)
call
(bad)
dec
add
into
(bad)
(bad)
push
(bad)
(bad)
(bad)
in
std
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
dec
std
(bad)
call
add
mov
std
(bad)
push
(bad)
inc
jmp
(bad)
dec
add
ds
(bad)
push
add
and
add
add
cmp
and
dec
push
sub
adc
or
or
inc
or
add
retf
(bad)
(bad)
jmp
(bad)
(bad)
call
add
popa
(bad)
(bad)
push
(bad)
jmp
std
(bad)
inc
(bad)
jmp
add
(bad)
dec
add
add
or
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
pop
cmp
(bad)
(bad)
jmp
and
cmp
add
add
daa
nop
out
and
sbb
mov
popa
cmp
and
fwait
arpl
imul
(bad)
jmp
or
inc
mov
mov
cmp
jmp
adc
add
add
add
add
adc
add
push
sub
add
sub
add
cmp
add
and
add
cmp
add
add
add
jnp
add
add
pop
pop
pop
bound
and
add
add
jns
add
and
sub
add
add
adc
jmp
call
add
add
loopne
or
add
sub
push
cmp
add
add
and
add
add
pop
add
push
cmp
add
add
pop
pop
pop
or
or
add
pop
cmp
add
add
push
or
push
add
add
push
add
add
call
movs
(bad)
(bad)
(bad)
cmp
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
call
(bad)
(bad)
inc
(bad)
inc
add
add
add
add
add
add
cmp
(bad)
(bad)
jmp
loop
sbb
pusha
arpl
or
pop
inc
add
(bad)
(bad)
call
add
inc
(bad)
(bad)
jmp
add
add
add
add
fwait
(bad)
(bad)
jmp
mov
leave
(bad)
(bad)
dec
and
rol
pop
and
aam
xor
mov
(bad)
jmp
add
adc
add
add
add
adc
add
push
add
jnp
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
add
add
adc
add
push
add
add
add
add
sub
add
and
add
add
sub
add
and
xor
add
add
adc
add
push
add
add
add
add
sub
add
loopne
or
add
add
add
pop
add
push
and
sub
es
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
adc
add
adc
add
push
add
add
add
lea
add
add
add
add
add
add
xor
add
add
or
add
sub
es
and
add
add
pop
add
add
xchg
lahf
xchg
iret
add
add
and
add
add
mov
add
cmp
add
add
and
add
add
cmp
add
push
or
pop
add
push
sub
add
cmp
(bad)
(bad)
jmp
and
sbb
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
pop
add
add
push
add
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
(bad)
call
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
xlat
inc
mov
and
add
sub
in
mov
add
push
pop
pop
or
or
add
cmp
pop
add
push
and
add
add
cmp
cmp
(bad)
(bad)
jmp
sub
in
mov
mov
or
pop
inc
add
(bad)
(bad)
call
add
and
(bad)
(bad)
push
or
add
cmp
(bad)
call
cmp
add
add
pop
add
push
cmp
(bad)
jmp
cmp
jnp
add
add
pop
add
add
pop
add
push
and
add
add
and
(bad)
inc
and
mov
pop
and
cmps
loopne
cmp
add
add
xor
dec
add
add
add
adc
add
push
sub
add
sub
add
cmp
add
add
and
add
add
xor
or
or
add
pop
cmp
add
add
and
add
add
and
add
add
add
cmp
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
add
jge
add
xchg
add
add
add
add
add
lods
(bad)
(bad)
call
add
add
push
add
add
leave
(bad)
(bad)
call
cmp
add
add
cmp
pop
retf
repz
sub
or
pop
inc
add
add
js
(bad)
jmp
(bad)
(bad)
dec
add
add
pop
cmp
sbb
add
add
(bad)
(bad)
jmp
add
jne
(bad)
(bad)
cmp
add
push
pop
bound
jnp
add
add
loopne
add
add
add
sbb
add
and
sub
(bad)
jmp
and
add
add
pusha
add
push
cmp
(bad)
(bad)
cmp
(bad)
call
pop
add
push
and
add
add
sub
(bad)
jmp
jecxz
mov
and
add
(bad)
add
aad
sbb
pop
(bad)
(bad)
inc
shr
add
add
xor
jo
add
or
add
sub
es
and
add
add
pop
add
push
cmp
add
sbb
add
add
(bad)
(bad)
jmp
or
add
cmp
add
or
xchg
dec
std
pop
and
mov
push
popa
cmp
and
push
dec
sbb
cmp
mov
cmp
add
push
pop
bound
pusha
or
push
add
add
or
add
dec
add
dec
add
add
add
add
add
(bad)
dec
add
add
add
add
add
cmc
add
add
add
add
add
test
add
cmc
add
add
add
mov
(bad)
(bad)
(bad)
mov
sub
add
cmp
add
add
and
add
add
movs
(bad)
(bad)
jmp
mov
cs
mov
adc
or
or
add
push
add
add
add
std
add
add
add
add
(bad)
(bad)
push
add
jle
add
cmp
add
push
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
pop
cmp
(bad)
jmp
pop
cmp
add
and
add
add
dec
(bad)
(bad)
call
pop
add
push
and
pop
add
push
cmp
(bad)
(bad)
jmp
pop
or
add
add
cmp
(bad)
(bad)
jmp
bound
add
add
add
mov
cs
cmp
(bad)
inc
(bad)
add
add
add
cmp
(bad)
(bad)
jmp
mov
cmp
add
add
sbb
push
push
and
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
sbb
add
and
sldt
add
(bad)
(bad)
(bad)
inc
or
add
add
outs
add
add
and
cmp
add
add
add
pop
pop
push
bound
pop
loopne
add
add
add
sbb
add
and
add
add
xchg
(bad)
jmp
icebp
fidiv
cmp
(bad)
(bad)
dec
and
ror
shl
(bad)
(bad)
inc
and
add
add
(bad)
jmp
add
add
sub
add
cmp
(bad)
(bad)
cmp
jmp
aas
cwde
(bad)
retf
push
add
add
mov
xchg
mov
or
push
fmul
pop
pop
popa
cmp
and
add
add
(bad)
(bad)
jmp
push
add
add
cmp
(bad)
(bad)
jmp
cmp
add
add
and
add
add
add
(bad)
jmp
fdivr
cmp
(bad)
inc
shr
sbb
add
push
pop
sub
sbb
add
push
push
sub
adc
add
sldt
add
add
adc
add
push
sub
es
add
imul
adc
add
jge
add
add
add
sub
es
and
add
sub
add
cmp
add
add
and
ret
add
push
jge
add
add
or
add
cmp
add
add
push
jge
add
add
push
add
add
aad
add
cmp
add
add
add
sub
add
and
add
add
add
sub
push
cmp
add
add
add
cmp
add
and
add
add
cmp
shl
add
and
add
add
mov
add
sbb
add
add
(bad)
(bad)
jmp
or
add
cmp
add
push
and
xor
pop
and
scas
arpl
add
add
add
add
add
jno
(bad)
jmp
and
add
add
dec
add
add
cmp
add
and
add
add
cmp
add
add
and
xor
or
pop
inc
add
(bad)
(bad)
inc
(bad)
(bad)
jns
add
scas
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
inc
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
jg
(bad)
jmp
add
add
imul
push
sub
push
cmp
(bad)
jmp
and
add
add
imul
push
cmp
and
push
push
call
mov
popa
cmp
jmp
add
add
xor
jne
add
add
add
sub
es
and
add
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
add
add
pop
cmp
add
cmp
add
add
jge
add
add
push
add
add
sub
add
push
and
nop
sbb
popa
cmp
add
add
mov
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
jle
add
jne
(bad)
dec
add
add
add
add
add
mov
add
mov
add
add
cmp
(bad)
(bad)
jmp
add
add
push
and
add
add
scas
(bad)
(bad)
jmp
mov
inc
mov
sbb
add
(bad)
(bad)
jmp
(bad)
jmp
add
add
(bad)
(bad)
call
add
jge
(bad)
jmp
jl
aad
and
add
cwde
adc
and
mov
js
popa
cmp
jge
add
add
or
add
cmp
(bad)
call
cmp
(bad)
(bad)
jmp
ins
add
push
sub
add
cmp
add
add
and
add
add
cmp
(bad)
jmp
add
jge
add
add
add
add
cmp
(bad)
(bad)
call
arpl
add
cmp
and
add
add
add
(bad)
inc
and
xchg
fstp
popf
sub
jmp
cmp
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
push
sub
add
sub
push
cmp
add
add
and
add
add
sahf
add
add
jnp
add
add
ins
add
push
imul
and
add
add
add
add
add
ins
add
push
and
add
push
and
add
add
ins
add
push
cmp
add
cmp
add
sub
add
and
add
cmp
add
mov
mov
and
add
add
loopne
(bad)
dec
add
add
add
and
and
add
cmp
add
add
add
add
sub
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
inc
add
add
(bad)
(bad)
call
add
add
cmp
(bad)
jmp
and
add
add
ins
add
push
cmp
(bad)
(bad)
jmp
push
and
and
popa
fstp
(bad)
jmp
add
adc
add
add
add
adc
add
push
and
add
cmp
add
and
or
and
add
and
pop
and
add
add
jnp
add
add
sub
add
or
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
pop
add
add
cmp
add
and
lea
and
add
jnp
cmp
repz
mov
push
add
add
push
jge
add
add
add
add
cmp
add
add
mov
sub
outs
shl
sbb
inc
push
add
add
(bad)
(bad)
call
add
add
add
jo
add
jp
(bad)
call
(bad)
(bad)
jmp
push
add
add
rol
add
pop
cmp
(bad)
jmp
or
add
cmp
add
add
pop
(bad)
(bad)
inc
cmp
sub
add
cmp
add
and
add
add
mov
add
push
and
add
add
xchg
add
add
and
sbb
pusha
pop
and
jmp
popa
cmp
jmp
pop
and
and
and
mov
aaa
popa
cmp
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
sub
add
cmp
and
add
add
inc
add
add
jnp
add
add
jnp
add
add
or
add
add
sub
push
cmp
add
add
and
add
add
add
add
jnp
add
add
mov
sar
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
inc
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
or
add
cmp
adc
pop
add
add
add
add
adc
add
push
and
add
add
outs
add
add
and
xor
pop
and
movs
pop
popa
cmp
add
add
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
and
add
add
sub
imul
leave
cmp
add
add
add
add
add
or
push
add
add
ins
add
push
cmp
add
add
sbb
add
add
(bad)
(bad)
jmp
adc
add
pop
cmp
add
add
or
mov
and
ins
cmp
popa
cmp
sub
add
and
add
add
rol
add
cmp
add
add
add
add
add
dec
add
add
adc
add
cmp
pop
fst
cmp
add
add
xor
add
add
pop
dec
add
push
sub
add
cmp
add
and
add
add
cmp
sbb
add
add
idiv
(bad)
jmp
add
add
pop
cmp
add
and
mov
and
add
fwait
mov
or
pop
in
(bad)
movs
pop
popa
cmp
add
add
inc
xchg
add
add
ss
(bad)
jmp
and
add
add
xor
cmp
adc
add
pop
cmp
add
add
add
add
jnp
add
add
data16
(bad)
(bad)
cmp
add
add
push
add
dec
add
add
add
(bad)
inc
(bad)
jmp
(bad)
(bad)
inc
call
add
cmp
jmp
add
cs
(bad)
(bad)
mov
(bad)
(bad)
push
add
add
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
cmp
inc
add
add
idiv
(bad)
jmp
or
cmp
shl
add
and
add
cmp
(bad)
jmp
out
push
in
cmp
add
add
lock
mov
add
add
or
add
add
sub
push
cmp
(bad)
jmp
add
add
add
pop
pop
pop
or
or
add
cmp
(bad)
jmp
and
xchg
or
or
or
add
pop
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
std
(bad)
push
(bad)
(bad)
jmp
(bad)
jmp
add
add
pop
cmp
(bad)
(bad)
jmp
or
jl
and
pop
and
cmps
(bad)
(bad)
dec
and
daa
or
and
aaa
popa
cmp
jnp
add
add
fs
(bad)
jmp
add
mov
mov
aam
and
add
mov
cmp
(bad)
(bad)
jmp
add
xor
add
add
adc
add
push
and
add
add
dec
add
add
lea
sbb
and
add
(bad)
hlt
inc
and
fwait
shr
popa
cmp
sub
add
and
add
add
sbb
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
adc
add
inc
add
add
add
add
add
add
add
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
cmp
and
add
add
mov
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
pop
(bad)
(bad)
jmp
or
add
pop
cmp
shl
add
and
add
add
cmp
and
pop
and
arpl
and
add
add
das
(bad)
(bad)
call
add
(bad)
(bad)
jmp
add
add
pop
cmp
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
loopne
pushf
sub
push
sub
add
cmp
(bad)
jmp
and
add
add
cmp
(bad)
(bad)
jmp
pop
and
and
cmp
add
xor
add
add
add
add
adc
add
push
sub
add
sub
push
cmp
and
add
add
inc
add
add
add
add
add
hlt
add
add
add
add
pop
cmp
sbb
add
add
(bad)
(bad)
jmp
add
add
cmp
add
add
cmp
pop
add
add
or
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
and
add
add
leave
(bad)
(bad)
(bad)
cmp
add
add
add
or
or
add
cmp
push
cmp
add
add
and
add
add
imul
push
cmp
add
add
add
pop
pop
pop
or
add
add
cmp
pop
jbe
mov
out
les
pop
inc
add
add
sbb
add
pushf
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
and
lds
neg
mov
pop
xchg
popa
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
sub
sub
es
dec
add
sub
add
or
add
sub
es
add
or
add
dec
add
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
sub
es
add
or
add
pop
add
push
sub
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
or
push
add
push
dec
add
dec
add
dec
add
dec
add
outs
adc
add
sub
adc
add
or
add
add
add
sub
es
add
jge
add
add
adc
add
mov
add
add
add
sub
es
and
add
add
add
add
and
out
cmp
(bad)
mov
and
add
add
add
add
or
add
add
jne
add
and
add
add
sgdtd
add
jae
bound
and
adc
pop
inc
pop
add
add
add
add
add
add
(bad)
(bad)
push
or
add
cmp
add
add
cmp
add
add
jge
add
add
or
add
cmp
cmp
add
add
add
add
sub
add
cmp
movs
add
add
idiv
(bad)
jmp
add
add
pop
cmp
shl
add
and
add
add
ja
add
cmp
add
add
add
add
inc
inc
(bad)
(bad)
call
sub
add
cmp
(bad)
jmp
and
cmp
add
sub
and
rcr
xlat
pop
and
enter
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
add
add
cmp
add
add
aad
sub
push
(bad)
(bad)
inc
and
add
pop
jge
add
add
iret
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
dec
(bad)
(bad)
dec
add
add
or
add
cmp
(bad)
(bad)
jmp
add
jnp
and
add
inc
retf
fisttp
and
(bad)
jmp
push
and
add
push
pop
and
fnstcw
cmp
add
adc
add
pop
add
add
add
adc
add
push
add
jnp
add
add
inc
pop
add
add
or
add
add
sbb
add
add
xor
xor
add
adc
add
push
add
jnp
add
add
inc
sbb
inc
add
add
idiv
(bad)
call
cmp
add
add
jae
add
es
or
add
add
push
jge
add
add
add
add
xor
add
add
add
adc
add
push
add
jnp
add
add
inc
sbb
inc
add
add
idiv
(bad)
call
cmp
add
add
je
add
es
or
add
add
pop
or
add
add
add
adc
add
push
add
add
add
adc
add
push
add
add
add
inc
sub
es
pop
sub
sbb
add
push
push
sub
sub
es
sub
es
add
jns
add
sub
sub
es
dec
add
sub
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
jge
add
sub
adc
add
das
add
add
add
adc
add
push
sub
es
and
add
add
jge
add
adc
ja
dec
pop
pop
and
cmp
popa
cmp
add
add
inc
or
add
xchg
add
add
add
add
add
add
add
add
add
add
sub
push
add
add
and
add
add
add
push
cmp
add
add
sbb
add
add
sub
pop
add
add
and
jg
add
add
jmp
rcr
add
add
sub
es
and
add
popf
cmp
add
add
and
add
add
fiadd
add
push
or
adc
add
cmp
add
add
add
test
and
xlat
popa
cmp
add
add
dec
sub
es
add
jl
add
sub
add
add
add
push
cmp
and
adc
mov
popa
and
pop
inc
push
add
add
add
add
add
add
add
add
add
add
add
sbb
(bad)
dec
add
imul
add
jne
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
pop
add
add
cmp
add
add
adc
or
neg
inc
adc
js
(bad)
inc
sub
add
sbb
add
add
out
add
add
add
adc
pop
and
push
js
popa
cmp
(bad)
inc
sub
and
add
popf
and
add
add
cmp
add
add
adc
loope
das
mov
mov
cmp
(bad)
(bad)
call
add
pop
jge
imul
popa
cmp
(bad)
(bad)
inc
sub
add
sbb
sbb
and
add
add
test
add
and
shr
cmp
(bad)
(bad)
inc
sub
add
and
add
or
add
cmp
add
inc
add
pop
or
jle
add
sub
add
add
add
push
cmp
add
aas
add
add
add
mov
xchg
pop
and
pop
loope
popa
cmp
add
sbb
and
mov
gs
cmp
add
sbb
scas
or
add
add
add
add
and
clc
lods
cmp
(bad)
call
jnp
add
and
add
add
cmp
add
add
and
enter
dec
(bad)
(bad)
dec
and
and
add
add
and
add
add
ret
add
add
scas
loopne
loope
and
pop
popa
cmp
(bad)
(bad)
inc
sub
add
pop
pop
pop
popf
and
fwait
add
add
adc
lock
xchg
daa
pop
and
cmp
std
(bad)
inc
sub
sbb
mov
add
popf
and
add
add
outs
add
add
and
add
cmp
add
adc
sbb
and
pop
(bad)
bound
ret
call
sub
or
push
add
add
cmp
add
and
aam
cmp
add
(bad)
out
sbb
add
xchg
std
(bad)
inc
sub
add
sbb
pop
sub
add
jmp
push
add
add
push
add
add
add
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
std
(bad)
inc
std
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
(bad)
fsin
(bad)
call
(bad)
call
(bad)
dec
cld
(bad)
dec
add
add
(bad)
(bad)
inc
cld
(bad)
push
(bad)
call
cld
(bad)
push
std
(bad)
push
add
add
add
add
push
add
add
xchg
(bad)
(bad)
jmp
mov
cli
cld
(bad)
call
or
adc
add
cmp
(bad)
(bad)
jle
add
add
and
add
cmp
(bad)
jmp
mov
aam
(bad)
jmp
add
xor
add
add
add
add
sub
es
add
sub
sub
es
dec
add
sub
add
or
add
sub
es
add
or
add
dec
add
push
sub
sub
es
add
or
add
add
push
sub
sub
es
add
or
add
inc
add
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
dec
sub
es
add
or
add
or
add
or
add
sub
xor
add
add
add
add
adc
add
push
sub
es
add
mov
add
sub
adc
add
xchg
add
add
add
adc
add
push
jle
add
add
jle
add
add
add
or
into
mov
adc
add
and
inc
or
add
dec
add
add
add
add
add
add
movs
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
sbb
popa
inc
add
add
pop
add
and
jmp
ins
cmp
pop
and
(bad)
hlt
jl
and
cmp
or
and
add
add
add
and
(bad)
(bad)
call
or
sbb
cmp
(bad)
call
pop
and
xor
(bad)
sti
and
(bad)
dec
inc
or
add
cwde
(bad)
(bad)
jmp
add
add
add
add
add
(bad)
jmp
add
add
add
add
add
add
pop
push
out
cmp
(bad)
call
cmp
sub
add
pop
or
mov
(bad)
inc
mov
add
sbb
mov
add
push
pop
pop
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
call
cmp
add
add
xchg
add
adc
sbb
add
cmp
(bad)
dec
and
and
cmp
(bad)
(bad)
call
add
imul
pop
or
dec
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
xchg
add
sub
mov
add
xor
fild
add
adc
add
sub
es
jle
add
add
push
jle
add
add
pop
cmp
add
add
push
lea
or
in
lods
arpl
adc
pop
or
or
add
fild
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
test
add
add
add
icebp
add
add
or
dec
jecxz
(bad)
pop
and
sbb
(bad)
popa
cmp
or
ficomp
rol
(bad)
call
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
mov
add
add
add
add
fs
jo
pop
(bad)
(bad)
call
push
and
and
cmps
add
pop
adc
aam
lds
jb
je
popa
cmp
(bad)
(bad)
call
push
and
and
mov
add
add
pop
and
cmp
nop
popa
cmp
or
popf
dec
xchg
xor
call
xchg
add
and
stc
(bad)
(bad)
call
pop
pop
xor
mov
call
add
pop
pop
pop
push
popa
inc
add
add
or
add
and
int
(bad)
call
cmp
(bad)
(bad)
(bad)
jle
add
add
adc
and
and
add
pop
adc
inc
mov
add
sbb
mov
add
and
add
inc
pop
pop
or
js
add
or
sahf
add
add
add
sbb
pop
aas
pop
add
add
inc
add
add
idiv
(bad)
call
cmp
add
add
xchg
add
es
or
add
call
cmp
(bad)
(bad)
inc
sub
add
and
add
inc
adc
add
or
add
add
add
sub
es
add
mov
add
sub
adc
add
or
add
adc
add
push
add
mov
add
and
add
sub
es
dec
add
sub
add
or
add
sub
es
dec
add
outs
adc
add
sub
cmp
add
push
dec
add
outs
adc
add
sub
sbb
add
push
pop
sub
sbb
add
push
push
sub
adc
add
sldt
add
add
adc
add
push
sub
es
add
nop
add
push
sub
cmp
add
push
dec
add
sub
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
call
xor
add
add
add
add
adc
add
push
jle
add
add
add
mov
js
cmps
nop
popa
and
pop
inc
or
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
add
sub
add
cmp
pop
and
in
pop
push
pop
and
jae
hlt
popa
cmp
add
popa
pop
adc
popa
inc
add
add
add
add
and
mov
(bad)
(bad)
call
pop
and
and
pop
mov
cmp
call
add
or
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
xor
add
cli
add
add
add
and
lods
loop
xor
(bad)
call
or
jle
(bad)
fidivr
daa
(bad)
(bad)
call
pop
and
mov
fs
popa
cmp
(bad)
call
xchg
add
push
adc
pushf
add
add
add
outs
es
cmp
(bad)
(bad)
call
push
and
and
and
add
add
pop
and
ffree
pop
and
cmp
(bad)
(bad)
call
push
sbb
add
pop
adc
imul
test
mov
pop
and
sbb
cli
inc
pop
popa
cmp
xor
add
push
adc
and
imul
and
cmp
cmp
(bad)
(bad)
(bad)
jle
add
add
adc
pop
pop
xchg
and
adc
(bad)
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
xchg
add
push
or
adc
in
(bad)
inc
pop
pop
or
or
pop
or
add
iret
(bad)
(bad)
dec
sbb
and
add
sbb
add
add
(bad)
(bad)
call
cmp
add
add
xchg
add
push
adc
add
movs
(bad)
(bad)
call
push
pop
inc
xchg
and
add
jmp
jle
add
add
iret
add
add
add
add
iret
add
add
bound
sub
add
cmp
call
xor
add
add
add
adc
add
push
and
add
add
popf
add
push
cmp
add
es
add
add
sub
sub
add
xchg
or
add
dec
add
add
loopne
add
sub
and
add
add
pushf
add
push
cmp
add
add
adc
and
sbb
movs
imul
cmp
add
add
add
xchg
or
inc
cmp
add
adc
and
dec
sahf
pop
and
jo
popa
cmp
add
rcl
and
in
add
cmp
add
pop
pop
or
adc
add
cmp
add
add
xchg
add
push
and
add
add
ret
add
add
add
add
add
add
add
pushf
add
push
cmp
and
mov
add
adc
and
sti
push
sbb
popa
cmp
add
add
add
or
popa
inc
add
add
cmp
push
add
add
outs
add
add
je
les
aam
add
or
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
add
dec
(bad)
(bad)
call
(bad)
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
jmp
add
cmp
add
add
jle
add
add
add
add
add
add
add
add
add
add
pop
cmp
or
add
cmp
add
add
add
sub
pop
add
add
and
add
add
aam
add
adc
and
lea
and
cmp
add
add
or
add
add
sub
mov
add
cmp
test
adc
add
sbb
and
add
add
xchg
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
and
add
cmp
add
jle
add
add
add
add
add
cmp
add
sbb
call
cmp
(bad)
(bad)
call
or
add
push
add
add
or
add
inc
add
add
sub
jg
cmp
add
(bad)
pop
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
add
sbb
add
adc
cmp
or
jmp
pop
add
add
push
pop
add
or
add
add
add
add
add
(bad)
dec
std
(bad)
dec
(bad)
(bad)
stc
std
(bad)
call
(bad)
jmp
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
mov
add
add
std
(bad)
dec
(bad)
(bad)
call
(bad)
jmp
std
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
add
cmp
jge
adc
and
xchg
or
and
pop
inc
or
add
sbb
(bad)
call
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
push
std
(bad)
(bad)
cmp
(bad)
dec
std
(bad)
(bad)
out
std
(bad)
push
push
add
add
dec
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
add
add
sub
(bad)
(bad)
jmp
cmp
std
(bad)
call
xor
fild
add
adc
add
sub
es
jle
add
add
push
and
xchg
jbe
loope
jl
popa
and
pop
inc
or
add
add
add
jno
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
je
lods
(bad)
(bad)
call
or
cmps
sbb
les
test
pop
adc
cmp
push
and
adc
ds
sbb
sti
sub
jl
(bad)
inc
pop
push
popa
inc
add
add
lods
add
add
pop
lock
popa
(bad)
(bad)
call
or
out
pop
jecxz
pop
and
cmp
(bad)
call
or
push
jns
popa
pop
and
push
inc
scas
popa
cmp
(bad)
(bad)
call
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
cmp
mov
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
repz
mov
cmp
(bad)
(bad)
call
xchg
add
push
adc
sbb
add
bound
retf
(bad)
(bad)
call
or
fdiv
cmp
pop
and
pop
push
pop
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
inc
mov
add
sbb
sub
or
push
and
add
add
(bad)
(bad)
inc
pop
pop
or
push
add
add
aad
add
or
add
sbb
pop
aas
adc
add
adc
pop
and
add
add
call
pop
pop
xor
add
jmp
sub
add
and
add
inc
adc
add
mov
add
adc
add
push
jle
add
add
add
dec
ret
or
sbb
popa
and
pop
inc
or
add
xor
add
add
(bad)
(bad)
call
add
add
add
add
add
test
add
add
int
add
jle
add
add
add
mov
mov
(bad)
(bad)
call
or
adc
sbb
xchg
(bad)
(bad)
call
or
or
jo
test
(bad)
inc
push
popa
inc
add
add
jle
add
and
xor
cmp
(bad)
dec
inc
or
add
data16
add
add
mov
(bad)
dec
add
add
pop
add
add
add
add
(bad)
(bad)
jmp
hlt
jg
jne
xor
(bad)
call
or
mov
inc
ins
pop
and
cli
addr16
popa
cmp
(bad)
(bad)
call
or
mov
and
(bad)
popa
cmp
(bad)
(bad)
call
add
pop
xchg
and
or
pop
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
add
add
(bad)
inc
mov
add
sbb
sub
pop
pop
or
pop
pop
or
add
pop
or
inc
sbb
sbb
inc
add
add
idiv
(bad)
call
cmp
add
add
xchg
add
push
es
or
call
add
add
add
out
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
xchg
add
push
sub
aad
(bad)
inc
adc
add
sldt
add
add
adc
add
push
add
add
sahf
add
push
and
xor
add
add
add
add
sub
es
sub
sub
xor
add
add
add
add
adc
add
push
add
sub
sub
add
xor
add
add
add
add
sub
es
add
sub
cmp
add
push
dec
add
sub
add
or
add
sub
es
add
or
add
dec
add
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
pop
sub
es
dec
add
dec
add
dec
add
outs
adc
add
sub
es
add
push
add
or
dec
sub
es
dec
add
dec
add
outs
pop
add
or
add
add
push
dec
add
dec
add
outs
sbb
add
sub
adc
add
sldt
add
add
adc
add
push
sub
es
add
mov
add
sub
es
dec
add
sub
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
movs
add
push
sub
cmp
add
push
dec
add
sub
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
stos
add
push
sub
adc
pop
add
add
sub
es
jle
add
add
add
add
stc
pop
pop
and
dec
std
inc
popa
and
inc
or
add
add
add
add
add
add
add
retf
(bad)
(bad)
jmp
add
xchg
add
add
lahf
add
add
add
push
and
lock
pop
and
idiv
(bad)
(bad)
inc
add
pop
sbb
popa
inc
add
add
js
add
and
call
or
add
nop
add
add
add
add
add
add
add
rol
add
or
add
scas
(bad)
(bad)
dec
add
or
add
cmp
add
add
add
add
outs
out
cdq
push
cmp
(bad)
call
or
(bad)
fadd
dec
(bad)
(bad)
call
cmps
add
push
sbb
add
stc
pop
pop
and
cmp
(bad)
call
or
add
stc
pop
pop
and
sub
(bad)
call
(bad)
jle
add
add
sbb
add
jle
(bad)
inc
mov
add
sbb
test
or
adc
push
pop
pop
or
add
add
add
add
add
add
add
pop
popf
pop
or
or
push
adc
cmp
(bad)
dec
sbb
sub
add
pop
inc
add
add
idiv
(bad)
call
cmp
add
add
cmps
add
push
adc
add
add
add
push
(bad)
(bad)
call
repz
(bad)
inc
sub
add
and
add
out
(bad)
(bad)
call
xor
add
add
adc
add
push
jle
add
add
add
mul
xor
das
mov
and
pop
inc
or
add
adc
add
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
pusha
add
add
enter
push
or
adc
mov
mov
(bad)
call
add
or
add
rol
add
add
ret
push
add
add
add
add
add
mov
add
mov
add
add
add
and
aam
idiv
jp
(bad)
call
or
stos
mov
dec
rol
(bad)
(bad)
(bad)
jle
add
add
push
adc
and
int
pop
and
cmps
popa
cmp
(bad)
dec
add
dec
pop
push
popa
inc
add
add
inc
add
add
push
xchg
pop
mov
call
or
push
int3
and
scas
retf
popa
cmp
adc
or
jg
daa
xchg
pop
and
cmp
(bad)
(bad)
call
adc
and
ret
mov
call
add
mov
add
pop
cmp
(bad)
(bad)
call
(bad)
(bad)
inc
mov
add
sbb
add
sub
pop
pop
or
mov
and
and
or
pop
pop
cmp
sbb
add
(bad)
(bad)
call
cmp
add
add
test
add
adc
outs
into
add
pop
adc
(bad)
(bad)
call
push
and
add
add
call
adc
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
test
add
sub
add
(bad)
inc
adc
add
or
add
add
add
sub
es
add
lods
add
push
sub
adc
add
add
add
adc
add
push
add
add
sub
add
cmp
add
push
dec
add
sub
add
or
add
sub
es
dec
add
outs
sbb
add
sub
push
add
push
dec
add
dec
add
dec
add
dec
add
outs
adc
add
sub
sbb
add
push
pop
sub
sbb
add
push
push
sub
adc
add
sldt
add
add
adc
add
push
sub
es
add
mov
add
sub
cmp
add
push
dec
add
sub
add
or
add
xor
add
add
adc
add
push
sub
es
sub
mov
push
add
and
add
cmp
add
add
sub
add
and
sbb
add
add
mov
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
jae
add
push
jge
add
add
mov
(bad)
jmp
and
add
add
mov
add
add
xor
add
add
add
add
adc
add
push
sbb
add
adc
add
or
add
sbb
add
sub
es
and
push
add
sbb
add
add
idiv
(bad)
(bad)
cmp
add
add
and
mov
add
cmp
add
and
adc
test
xchg
or
out
sbb
jmp
cmp
add
add
cmp
add
add
mov
xor
add
fwait
push
sub
and
add
or
dec
mov
fwait
sbb
fisub
mov
add
sbb
mov
(bad)
inc
jnp
add
add
xor
add
pop
add
add
push
add
add
mov
add
cmp
add
add
jle
add
add
and
add
add
ret
add
add
(bad)
inc
inc
pop
add
add
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
cmp
push
xchg
or
retf
(bad)
(bad)
call
hlt
(bad)
(bad)
inc
jnp
add
add
xor
add
mov
add
and
add
add
mov
add
add
pop
add
add
add
mov
push
add
add
dec
add
add
mov
shl
and
push
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
or
add
cmp
add
add
cmp
(bad)
(bad)
(bad)
cmp
add
push
add
dec
add
add
add
(bad)
dec
add
add
(bad)
jmp
(bad)
push
(bad)
(bad)
in
(bad)
(bad)
call
(bad)
(bad)
cmp
add
cmps
(bad)
(bad)
call
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
pop
add
add
mov
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
cmp
or
mov
mov
add
cmp
and
add
pop
cmp
mov
add
and
add
add
mov
add
cmp
(bad)
jmp
sub
xor
add
add
add
add
adc
add
push
add
mov
add
sub
es
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
dec
sub
es
dec
add
dec
add
sub
add
or
add
sub
es
dec
add
outs
sbb
add
sub
adc
or
jg
add
sbb
add
sub
es
sub
es
and
add
add
push
add
add
xchg
call
add
and
and
or
popa
cmp
add
add
add
add
inc
sbb
push
add
or
add
add
and
add
and
add
pusha
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
pop
or
or
add
sub
add
push
cmp
lods
(bad)
(bad)
jmp
push
mov
add
add
and
arpl
pop
or
mov
mov
sub
add
and
add
inc
add
add
and
add
add
jae
(bad)
call
or
pop
add
add
addr16
(bad)
(bad)
cmp
add
inc
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
movs
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
call
sub
push
pop
and
arpl
pop
sub
sub
sub
add
and
sbb
je
arpl
pop
sbb
rol
push
and
add
and
add
and
push
and
or
sbb
rol
push
and
add
and
add
and
sbb
inc
arpl
pop
adc
ret
push
and
add
and
add
and
pop
and
arpl
pop
sbb
push
and
add
and
add
mov
dec
arpl
pop
sbb
push
and
add
and
add
mov
pop
arpl
pop
sbb
rol
push
and
add
sub
add
and
pop
and
arpl
pop
pop
sub
sub
sub
add
mov
add
add
add
cmp
(bad)
(bad)
jmp
mov
cwde
dec
and
ja
popa
and
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
mov
std
(bad)
jmp
add
add
les
add
cmp
(bad)
jmp
and
add
add
lock
(bad)
jmp
arpl
(bad)
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
sub
add
sub
add
xor
add
add
adc
add
push
add
mov
push
and
add
sub
es
add
imul
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
add
je
add
sub
sub
es
add
inc
add
push
sub
sub
es
add
arpl
add
sub
sub
es
add
inc
add
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
sub
es
add
or
add
add
add
sub
xor
add
add
adc
add
push
and
add
add
int
add
cmp
mov
adc
add
xchg
add
add
add
add
push
and
add
add
test
add
and
add
or
sbb
add
add
adc
add
cmp
add
pop
and
pop
push
pop
adc
add
pop
and
and
inc
add
out
(bad)
call
adc
add
cmp
add
and
push
pusha
cmp
add
add
adc
add
and
add
cmp
add
add
or
xor
shl
and
(bad)
cmp
add
push
or
adc
add
cmp
add
add
inc
sub
jo
mov
adc
xor
add
or
sbb
or
and
pop
neg
cmp
adc
add
int3
add
push
cmp
add
add
sbb
add
(bad)
(bad)
jmp
add
lods
add
add
or
adc
xchg
pop
and
call
ins
add
add
add
add
(bad)
(bad)
jmp
add
add
add
pop
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
add
add
adc
add
cmp
add
and
mov
cmp
add
add
or
push
(bad)
(bad)
(bad)
jle
add
add
and
cmp
add
cmp
(bad)
(bad)
jmp
jp
inc
jo
adc
pop
inc
or
add
sar
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
cld
(bad)
(bad)
dec
(bad)
(bad)
dec
add
mov
add
add
pop
cmp
add
add
jle
add
add
pop
and
add
add
aam
add
and
scas
adc
pushf
(bad)
(bad)
call
mov
or
mov
or
add
and
jo
popa
cmp
(bad)
inc
add
pop
push
pop
push
popa
inc
add
add
inc
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
cmp
(bad)
(bad)
inc
pop
pop
or
pop
add
add
jae
add
adc
and
add
add
add
add
pop
add
add
sar
inc
sub
add
push
and
add
add
int
add
cmp
add
add
cmp
add
pop
cmp
std
(bad)
(bad)
cmp
add
add
and
add
add
int3
add
push
cmp
add
add
cmp
(bad)
inc
sub
add
push
or
call
add
dec
or
dec
add
add
add
(bad)
(bad)
inc
std
(bad)
(bad)
(bad)
(bad)
push
std
(bad)
call
(bad)
dec
add
add
add
std
(bad)
(bad)
cmp
(bad)
jmp
std
(bad)
(bad)
jns
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
call
std
(bad)
call
std
(bad)
call
(bad)
jmp
(bad)
inc
(bad)
(bad)
push
cld
(bad)
call
std
(bad)
push
add
push
add
add
push
add
add
(bad)
(bad)
(bad)
jmp
or
add
or
int
add
sub
add
push
cmp
(bad)
jmp
and
add
add
int
add
cmp
(bad)
(bad)
cmp
(bad)
call
mov
or
add
cmp
(bad)
jmp
test
push
add
add
cmp
(bad)
jmp
cmp
adc
add
pop
add
add
add
adc
add
push
jle
add
add
add
add
push
sbb
add
pusha
push
xchg
pop
and
mov
jge
and
inc
push
add
add
add
add
add
sar
(bad)
call
add
add
add
cmp
add
adc
add
add
add
pusha
push
xchg
pop
cmp
add
pop
push
pop
push
popa
inc
add
add
dec
add
add
mov
cmps
or
sahf
(bad)
(bad)
call
or
adc
pusha
push
xchg
pop
cmp
add
or
add
xor
add
sbb
add
add
(bad)
(bad)
push
add
add
add
js
add
stos
(bad)
(bad)
jmp
cmp
lods
pop
cmp
(bad)
call
add
add
add
cmp
call
adc
mov
(bad)
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
inc
add
xchg
add
add
push
add
add
sbb
pop
aas
adc
push
and
and
add
add
add
jo
(bad)
call
add
add
add
out
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
enter
sub
or
(bad)
inc
add
adc
add
or
add
adc
add
push
add
into
add
push
and
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
sub
es
add
or
add
data16
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
sub
es
add
or
add
and
add
sub
add
push
dec
add
dec
add
outs
and
add
sub
adc
add
sldt
add
add
adc
add
push
sub
es
add
rol
add
sub
cmp
add
push
dec
add
sub
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
fiadd
add
sub
adc
add
adc
add
add
add
sub
es
sub
es
jae
add
or
sub
sbb
add
rol
add
sbb
add
sub
es
sub
add
push
sub
add
push
and
add
and
add
and
fadd
add
cmp
add
add
and
cmp
add
pop
cmp
add
and
add
add
sub
add
and
jmp
add
add
and
xchg
imul
add
or
or
add
and
push
add
dec
add
add
add
add
add
add
add
add
add
add
or
add
xchg
(bad)
(bad)
(bad)
jns
add
mov
add
add
add
and
add
add
(bad)
dec
and
xchg
loope
popa
cmp
add
add
and
push
adc
add
and
add
and
(bad)
jmp
add
add
cmp
hlt
pop
adc
and
aas
cli
ins
popa
and
pop
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
pop
add
add
add
add
cmp
(bad)
call
aam
add
and
add
add
inc
(bad)
(bad)
(bad)
cmp
add
add
and
repnz
pop
and
(bad)
push
popa
cmp
or
pop
(bad)
(bad)
jmp
and
add
add
sbb
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
add
add
add
(bad)
(bad)
fstp
add
or
adc
pushf
mov
jns
popa
cmp
(bad)
inc
and
adc
sub
add
cmp
or
add
cmp
(bad)
(bad)
jmp
inc
ss
ins
and
add
dec
add
and
popa
cmp
(bad)
(bad)
(bad)
fld
add
add
fld
add
add
sub
sub
add
add
add
add
add
add
les
add
enter
push
add
add
xor
add
add
add
add
sub
es
sub
add
push
and
add
or
add
adc
add
push
add
fiadd
add
and
add
xor
add
add
add
add
adc
add
push
add
fild
add
sub
adc
add
or
add
adc
add
push
add
loopne
add
and
add
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
cmp
add
push
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
sub
es
add
add
or
cmp
add
push
dec
add
outs
daa
add
or
add
sub
es
dec
add
outs
sub
add
sub
cmp
add
push
dec
add
outs
sub
add
sub
dec
sub
es
add
or
add
or
add
push
add
push
sub
xor
add
add
sub
es
sub
es
and
add
add
fiadd
add
add
pop
movaps
add
push
and
add
adc
les
add
add
add
or
add
add
add
add
cmp
jle
add
or
add
add
sub
add
push
cmp
add
and
mov
add
add
add
add
mov
mov
add
and
add
and
add
and
add
sub
add
push
cmp
add
cmp
add
add
jge
add
add
push
add
add
and
add
add
inc
add
add
sub
add
push
and
add
add
xor
add
shl
add
push
and
add
add
and
add
add
add
or
add
add
sbb
add
cmp
add
cmp
add
add
and
mov
add
sub
in
add
push
and
add
and
add
add
out
add
adc
sub
add
push
and
add
add
pop
add
add
int3
add
add
inc
add
add
idiv
(bad)
jmp
adc
add
pop
cmp
cmp
(bad)
(bad)
dec
adc
or
add
add
sub
add
push
cmp
sbb
add
add
idiv
(bad)
jmp
pop
add
add
mov
add
add
sub
add
push
and
pop
sub
or
jmp
add
add
push
jle
add
or
add
add
or
add
sub
add
push
cmp
add
es
cmp
add
add
add
add
sub
add
push
cmp
add
add
xor
add
add
push
sub
add
push
jge
add
add
or
add
cmp
add
sbb
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
sbb
add
dec
push
add
or
add
add
add
(bad)
(bad)
jmp
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
mov
add
add
std
(bad)
(bad)
fild
add
scas
(bad)
(bad)
jmp
add
pop
add
adc
add
pop
(bad)
(bad)
call
(bad)
inc
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
std
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
add
add
add
repnz
push
cmp
jmp
sbb
add
add
idiv
(bad)
jmp
push
add
add
push
(bad)
(bad)
(bad)
cmp
add
pop
and
add
es
add
push
and
(bad)
jmp
push
add
add
das
(bad)
(bad)
inc
pop
push
sub
add
push
sub
add
push
and
add
add
add
cmp
(bad)
(bad)
inc
jle
add
or
add
add
sbb
add
cmp
(bad)
(bad)
call
add
pop
adc
add
add
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
push
cmp
(bad)
(bad)
jmp
add
add
add
cmp
add
sldt
add
cmp
(bad)
(bad)
jmp
sbb
add
add
idiv
(bad)
jmp
adc
add
cmp
adc
adc
add
pop
cmp
add
add
add
outs
outs
mov
add
and
add
and
(bad)
jmp
or
je
(bad)
inc
and
add
add
and
add
cmp
(bad)
jmp
or
add
cmp
(bad)
jmp
add
adc
add
loop
add
sbb
add
push
and
add
add
fld
add
and
mov
add
add
and
push
sub
sub
es
add
push
and
add
add
cmp
sbb
add
add
(bad)
(bad)
jmp
add
add
cmp
pop
jl
push
and
xor
or
or
or
add
push
add
add
(bad)
(bad)
(bad)
fiadd
add
rol
add
xor
add
add
(bad)
(bad)
call
add
and
add
add
push
add
add
add
add
add
in
add
and
add
add
add
add
and
inc
cmp
imul
add
add
add
add
add
cmp
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
jmp
dec
add
or
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jge
(bad)
jmp
(bad)
(bad)
call
or
add
pop
cmp
and
adc
cmp
add
inc
dec
xor
fsubr
outs
pop
popa
cmp
(bad)
(bad)
inc
and
cs
jle
add
in
add
and
add
add
repz
push
cmp
(bad)
jmp
and
into
(bad)
(bad)
inc
add
add
add
call
cmp
add
add
inc
add
add
idiv
(bad)
call
cmp
add
add
jecxz
add
add
add
add
or
add
and
mov
add
sub
add
push
and
add
add
repz
push
cmp
(bad)
(bad)
jmp
and
sbb
inc
cmp
(bad)
inc
jnp
add
add
movs
add
add
out
add
cmp
add
and
add
add
in
(bad)
jmp
in
add
and
repz
push
cmp
and
add
add
(bad)
(bad)
(bad)
(bad)
cmp
and
jmp
add
sub
add
and
add
add
mov
icebp
sub
push
add
add
push
es
es
and
popa
add
cmp
std
(bad)
inc
add
add
add
call
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
or
add
and
sbb
sub
add
push
and
std
(bad)
jmp
and
add
cmp
(bad)
(bad)
inc
add
add
add
out
add
and
add
add
and
(bad)
inc
and
je
cvtps2pd
xchg
popa
push
jno
cmp
(bad)
inc
sub
add
push
and
adc
add
or
add
add
add
sub
es
jae
add
or
add
adc
add
push
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
adc
add
push
add
test
sub
add
adc
add
or
add
adc
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
add
add
sub
es
add
stc
add
push
sub
adc
add
push
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
push
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
sub
es
add
or
add
inc
add
push
sub
sub
es
add
or
add
inc
add
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
dec
sub
es
dec
add
dec
add
outs
add
or
add
add
push
add
or
add
or
add
jo
add
sub
add
push
dec
add
dec
add
outs
das
add
or
add
sub
es
dec
add
outs
xor
add
sub
dec
sub
es
dec
add
dec
add
outs
xor
add
sub
cmp
add
push
dec
add
outs
xor
add
sub
dec
sub
es
dec
add
dec
add
outs
xor
add
sub
dec
sub
es
dec
add
dec
add
outs
xor
add
sub
dec
sub
es
add
or
add
or
add
push
add
push
sub
xor
add
add
add
add
adc
add
push
sub
es
add
inc
add
sub
cmp
add
push
dec
add
sub
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
add
add
sub
cmp
add
push
dec
add
sub
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
and
add
cmp
add
add
jge
add
add
outs
add
add
and
add
add
cmp
add
add
push
and
fadd
fwait
pop
and
sbb
add
add
jae
add
push
jge
add
add
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
xchg
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
call
add
jnp
add
add
sub
imul
and
add
add
lods
(bad)
(bad)
jmp
pushf
adc
add
and
add
add
ins
(bad)
(bad)
push
add
add
add
fdivr
(bad)
jmp
push
add
push
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
cmp
(bad)
jmp
add
add
add
and
add
add
cmp
jmp
cmp
jae
add
push
jge
add
add
pop
add
add
push
add
push
cmp
(bad)
jmp
push
and
push
pop
and
xchg
jmp
(bad)
jmp
add
adc
add
inc
add
add
add
adc
add
push
sub
es
push
sub
add
push
cmp
and
add
cmp
and
and
sbb
pop
popa
cmp
add
add
push
sub
add
push
and
add
add
add
add
add
add
pop
add
add
push
add
add
sbb
push
and
add
add
add
add
add
add
add
add
cmp
add
add
mov
(bad)
call
sbb
push
and
add
add
add
add
add
add
xor
add
and
add
dec
add
dec
add
add
add
add
add
add
add
add
mov
(bad)
jmp
(bad)
(bad)
(bad)
jns
add
cmp
add
add
and
add
add
retf
(bad)
(bad)
inc
and
jge
test
pop
mov
cmp
add
add
push
sub
add
push
and
add
add
add
add
add
add
push
add
add
pop
add
push
cmp
and
xchg
das
icebp
leave
aaa
popa
and
add
add
fdivr
(bad)
push
(bad)
(bad)
inc
(bad)
jmp
add
(bad)
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
sub
es
dec
add
sub
add
or
add
sub
es
add
or
add
pop
add
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
sub
es
add
or
add
bound
add
sub
add
push
add
or
add
or
add
or
add
sub
xor
add
add
add
add
adc
add
push
sub
es
add
push
add
push
sub
adc
add
or
add
add
add
sub
es
add
add
add
add
xor
sbb
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
add
arpl
add
xor
add
add
add
add
adc
add
push
add
add
add
jnp
add
add
add
add
sub
es
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
pop
add
add
add
adc
add
push
sub
es
add
add
add
push
jge
add
add
sub
add
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
add
add
adc
add
push
sub
es
and
add
add
xchg
add
add
and
and
mov
push
add
push
jae
add
push
sbb
add
sbb
add
cmp
add
sbb
add
(bad)
(bad)
jmp
push
add
add
sbb
add
cmp
add
and
xor
add
push
pop
and
pushf
and
add
add
sbb
add
cmp
add
add
and
xor
push
add
add
push
inc
pop
and
add
or
retf
dec
pop
and
mul
inc
popa
cmp
add
add
and
push
sbb
add
sub
add
push
cmp
add
add
and
call
add
and
add
add
fild
add
and
add
add
sbb
add
cmp
add
add
push
or
or
add
cmp
push
add
push
and
add
add
lods
add
add
and
and
jle
jmp
add
add
and
add
add
xor
add
and
add
add
add
idiv
(bad)
jmp
adc
add
sub
add
push
cmp
add
and
add
add
sbb
add
or
pop
add
add
push
add
add
cmp
add
add
sbb
add
sub
add
push
cmp
add
add
and
xor
add
sbb
add
add
idiv
(bad)
jmp
adc
push
add
add
jo
inc
arpl
xchg
dec
push
pop
adc
adc
add
cmp
(bad)
dec
add
add
(bad)
(bad)
fsin
(bad)
inc
add
lea
add
push
add
add
add
add
add
add
add
lahf
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
and
in
adc
add
scas
leave
ror
cmp
(bad)
dec
and
lahf
ror
and
mov
cmp
(bad)
inc
pop
and
pushf
and
add
add
cmp
add
and
dec
(bad)
(bad)
inc
pop
and
or
and
add
cmp
add
sbb
add
(bad)
(bad)
jmp
adc
add
cmp
add
add
mov
push
(bad)
(bad)
call
or
or
add
sub
add
push
cmp
add
add
sbb
add
add
(bad)
(bad)
jmp
or
add
cmp
add
add
jnp
xchg
and
add
dec
lea
fsin
(bad)
dec
and
jne
pop
and
cmp
(bad)
(bad)
inc
pop
and
pushf
and
add
add
sbb
add
cmp
add
add
or
add
adc
(bad)
enter
cmp
and
add
add
or
(bad)
jmp
sbb
add
cmp
or
mov
add
add
mov
xchg
push
and
(bad)
dec
and
xchg
adc
and
xor
popa
cmp
(bad)
inc
jae
add
push
sbb
add
pop
add
add
arpl
add
and
mov
cmp
add
add
ja
les
(bad)
inc
pop
and
sldt
add
cmp
add
and
call
(bad)
(bad)
inc
pop
and
pushf
and
add
add
cmp
pop
and
sbb
add
and
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
call
(bad)
(bad)
jmp
cld
(bad)
inc
(bad)
(bad)
call
cld
(bad)
call
cld
(bad)
inc
cld
(bad)
push
(bad)
jmp
std
(bad)
inc
sti
(bad)
(bad)
cmp
(bad)
dec
std
(bad)
jmp
(bad)
jmp
cld
(bad)
(bad)
out
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
push
(bad)
(bad)
cmp
std
(bad)
call
(bad)
push
(bad)
call
(bad)
inc
(bad)
dec
add
and
add
pop
cmp
add
add
xor
add
add
add
add
adc
add
push
sub
es
add
sbb
add
add
sub
push
sub
add
sub
es
add
or
add
dec
add
push
sub
sub
es
pop
sub
sbb
add
push
push
sub
cmp
add
push
dec
add
sub
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
pop
add
push
sub
adc
add
or
add
add
add
sub
es
sub
es
and
add
add
das
add
add
add
add
sub
add
push
and
add
add
push
add
push
sbb
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
pop
add
mov
(bad)
dec
add
add
add
test
add
add
cmp
(bad)
(bad)
inc
and
push
xchg
pop
and
pop
add
add
adc
and
add
and
add
add
push
add
push
and
add
push
add
add
mov
sub
add
push
and
add
add
push
add
push
sbb
add
sub
add
push
cmp
add
add
and
cmp
(bad)
jmp
and
fsub
and
cmp
and
add
add
loopne
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
jmp
and
add
add
and
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
adc
add
or
add
add
add
sub
es
add
sub
add
push
sub
sub
es
dec
add
sub
add
or
add
sub
es
add
or
add
bound
add
sub
sub
es
pop
sub
sbb
add
push
push
sub
dec
sub
es
add
or
add
or
add
or
add
sub
xor
add
add
sub
es
sub
es
push
sub
add
push
cmp
add
and
add
add
bound
add
add
sub
add
and
add
cmp
add
add
jnp
add
add
cmp
add
jge
add
add
push
add
add
aaa
add
add
pop
adc
add
add
enter
and
add
add
cmp
add
add
add
add
push
jge
add
add
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
jge
(bad)
jmp
(bad)
(bad)
dec
add
add
add
aad
(bad)
jmp
adc
add
or
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
adc
add
push
push
sub
add
push
cmp
add
and
add
add
sub
add
cmp
add
add
pop
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
pop
add
add
add
add
add
and
add
adc
add
ret
(bad)
(bad)
push
add
cmp
add
add
and
retf
(bad)
(bad)
call
add
push
and
add
add
mov
inc
add
add
idiv
(bad)
jmp
push
add
add
cmps
(bad)
(bad)
jmp
aad
or
and
test
popa
and
add
add
loopne
(bad)
inc
add
add
add
pop
add
add
jge
(bad)
inc
jnp
add
add
push
inc
xor
add
and
add
cmp
(bad)
(bad)
cmp
add
add
jnp
add
add
xchg
add
add
inc
sub
and
out
pop
and
add
(bad)
(bad)
call
sub
add
xor
add
add
add
add
adc
add
push
add
add
add
ja
add
and
cmp
add
push
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
add
add
adc
add
push
sub
es
and
add
pop
cmp
push
or
sbb
jle
add
pop
and
and
push
outs
and
pop
add
add
push
sub
add
push
cmp
add
or
add
cmp
add
pop
inc
add
add
idiv
(bad)
jmp
or
add
cmp
add
and
sub
add
and
adc
pop
and
icebp
aam
cmp
add
add
push
sub
add
push
and
add
add
add
pop
cmp
and
mov
add
add
add
add
and
pushf
sub
add
push
sub
add
push
cmp
add
add
and
add
cmp
add
add
outs
jmp
push
add
add
jae
mov
and
add
push
pop
push
cmp
add
add
pop
add
add
mov
add
and
add
add
xor
add
and
add
or
add
cmp
ja
add
and
or
cmp
and
push
test
pop
and
scas
loop
popa
cmp
add
jle
add
add
pop
xor
pop
push
bound
pop
add
push
popf
and
add
add
push
add
add
sub
add
and
add
add
inc
add
add
and
sahf
xchg
mov
outs
and
and
add
push
and
add
add
add
add
retf
(bad)
(bad)
jmp
and
push
add
add
pop
pop
or
adc
add
cmp
add
add
add
add
and
pushf
and
add
add
repnz
add
and
not
sub
int
imul
add
push
and
add
add
add
add
adc
add
cmp
add
add
adc
das
add
push
and
add
add
sub
ins
add
add
or
add
cmp
jae
xchg
cmp
and
ds
pop
and
jg
add
push
or
adc
add
push
cmp
add
es
add
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
add
and
cmc
std
cmp
add
push
and
jle
(bad)
jmp
push
add
add
inc
add
add
jge
cmp
add
add
inc
imul
add
add
add
add
and
(bad)
(bad)
inc
pop
pop
or
pop
add
push
popf
and
add
add
push
add
add
add
add
and
pushf
and
add
add
cmp
add
add
cmp
jbe
add
pop
test
pop
push
bound
pop
add
push
and
add
add
rol
add
and
hlt
jnp
and
add
jno
test
add
add
and
add
add
add
add
add
add
cmp
and
and
dec
xchg
add
jle
add
add
push
pop
or
pop
add
push
popf
and
add
add
jnp
add
and
imul
add
and
cmp
add
jle
add
add
and
add
add
pop
sbb
add
and
add
add
inc
add
add
pop
xchg
movs
mov
add
and
popa
inc
call
add
add
add
sbb
pop
cmp
add
add
pop
cmp
(bad)
(bad)
(bad)
cmp
sbb
add
dec
add
dec
add
add
add
std
(bad)
call
(bad)
inc
std
(bad)
push
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
(bad)
cld
(bad)
(bad)
push
cld
(bad)
inc
cld
(bad)
jmp
add
add
(bad)
inc
cld
(bad)
(bad)
in
sti
(bad)
call
(bad)
(bad)
dec
add
imul
(bad)
jmp
(bad)
call
(bad)
push
(bad)
dec
std
(bad)
jmp
(bad)
jmp
(bad)
push
add
add
add
fwait
cld
(bad)
jmp
add
and
add
push
cmp
jmp
sbb
add
(bad)
(bad)
jmp
push
add
add
cmp
(bad)
jmp
and
add
add
das
add
push
and
add
sldt
add
cmp
(bad)
call
adc
add
push
and
add
add
sub
ins
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
jae
mov
and
fild
adc
add
xchg
(bad)
(bad)
dec
std
(bad)
(bad)
mov
sti
(bad)
(bad)
jnp
(bad)
(bad)
jge
(bad)
push
(bad)
inc
(bad)
(bad)
cmp
add
dec
std
(bad)
jmp
add
add
sti
(bad)
(bad)
cmp
sti
(bad)
call
(bad)
(bad)
in
std
(bad)
call
add
add
(bad)
dec
cld
(bad)
(bad)
cmp
(bad)
jmp
or
lahf
(bad)
(bad)
jmp
jge
inc
mov
mov
(bad)
inc
and
and
sbb
cmp
(bad)
inc
and
and
sbb
stos
and
cmp
jmp
add
adc
push
add
add
add
add
sub
es
sub
es
pop
sub
add
push
cmp
add
add
and
add
add
xor
add
cmp
add
add
and
add
add
add
add
pop
(bad)
xor
outs
add
add
add
add
cmp
add
add
add
add
das
add
push
and
add
or
add
pop
cmp
add
add
pop
push
pop
pop
(bad)
xor
jo
add
inc
add
add
push
add
add
push
add
dec
add
add
add
add
sub
add
mov
(bad)
dec
add
add
(bad)
call
add
add
add
xchg
(bad)
(bad)
(bad)
cmp
add
add
add
add
add
cmp
(bad)
(bad)
inc
add
adc
sbb
push
jge
add
add
sbb
add
and
add
add
test
add
add
add
add
add
cmp
and
inc
add
sub
add
push
and
add
pop
add
add
jl
(bad)
inc
sub
add
push
and
add
add
ins
(bad)
(bad)
jmp
adc
add
or
add
add
add
sub
es
add
sub
add
sub
sub
es
add
or
add
bound
add
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
add
or
add
push
add
sub
sub
es
pop
sub
sbb
add
push
push
sub
cmp
add
push
dec
add
sub
add
or
add
add
push
add
or
add
or
add
or
add
sub
xor
in
add
add
add
sub
es
sub
es
and
add
add
dec
add
add
add
add
add
push
add
add
cmp
add
add
aaa
add
push
and
add
pop
add
and
add
add
cmp
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
jmp
add
add
add
add
sub
add
push
cmp
and
add
add
sar
inc
sub
add
push
and
add
add
cmp
add
cmp
add
add
pop
add
add
cmp
add
add
cmp
add
and
add
or
add
sub
add
push
cmp
(bad)
jmp
sub
add
cmp
add
push
dec
add
sub
add
or
add
sub
es
add
or
add
push
add
sub
sub
es
add
or
add
bound
add
sub
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
add
add
adc
add
push
sub
es
and
add
add
cmp
add
add
add
add
push
and
add
add
add
and
add
add
xor
add
add
cmp
add
and
add
add
and
add
add
add
add
sub
es
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
jge
(bad)
dec
add
add
add
add
add
add
push
sub
add
push
cmp
and
add
add
mov
and
add
sub
add
push
and
add
add
add
cmp
add
and
add
jge
add
add
or
add
push
cmp
add
jae
add
push
jge
add
add
add
add
cmp
(bad)
inc
add
add
add
push
add
add
pop
(bad)
(bad)
jmp
add
add
sub
es
dec
add
sub
add
or
add
sub
es
add
or
add
dec
add
push
sub
sub
es
add
or
add
push
add
sub
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
and
add
add
add
sub
es
sub
es
add
add
add
sub
push
and
add
sub
add
sub
add
adc
add
or
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
adc
add
push
add
add
add
inc
sub
add
sub
es
add
or
add
dec
add
push
sub
sub
es
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
add
sldt
add
add
adc
add
push
sub
es
add
dec
add
push
sub
adc
add
adc
add
add
add
sub
es
sub
es
add
push
sub
add
sub
add
cmp
add
push
dec
add
sub
add
or
add
add
push
dec
add
dec
add
dec
add
sub
add
or
add
sub
es
pop
sub
sbb
add
push
push
sub
adc
push
add
add
add
add
adc
add
push
add
add
add
jnp
add
add
sub
and
add
pop
jge
add
add
add
xor
inc
or
add
add
adc
add
push
and
add
add
jmp
pshufw
cdq
retf
out
popa
cmp
add
add
pop
pop
cmp
add
add
add
lds
add
and
xor
and
and
pop
inc
sub
add
fiadd
add
pusha
add
add
add
add
push
add
add
or
add
fild
add
xchg
add
add
add
aas
add
add
add
xlat
push
add
cmps
add
add
add
sbb
add
dec
add
add
sub
(bad)
call
add
add
add
inc
add
push
add
add
add
add
(bad)
(bad)
push
push
add
xchg
add
add
pop
add
fld
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
and
add
add
stc
add
add
push
aas
sbb
add
add
cmp
add
add
xor
dec
cmp
(bad)
(bad)
inc
sbb
add
add
and
add
cmp
add
add
idiv
(bad)
jmp
pop
add
add
mov
push
and
aaa
xor
test
and
popa
cmp
(bad)
(bad)
inc
add
add
add
mov
add
and
add
and
add
pop
cmp
and
mov
and
add
out
push
add
and
(bad)
call
push
and
and
xchg
dec
popa
cmp
pop
jge
add
add
pop
add
add
dec
add
add
fcmovnbe
popf
or
cmp
add
add
in
mov
jne
cmp
(bad)
call
sub
mov
fnsave
cmp
(bad)
inc
jnp
add
add
sub
and
add
add
adc
add
adc
and
and
ror
popa
cmp
(bad)
(bad)
inc
jnp
add
add
sub
add
and
jmp
inc
add
add
idiv
(bad)
jmp
sub
add
cmp
add
add
push
and
lahf
outs
pop
and
loopne
cwde
popa
cmp
(bad)
(bad)
inc
push
cmp
add
add
push
add
add
mov
add
adc
and
xor
pop
and
cld
mov
fdivrp
(bad)
call
push
and
and
enter
cmp
std
(bad)
inc
jnp
add
add
adc
lahf
add
push
or
pop
add
add
jae
add
sbb
add
add
(bad)
(bad)
jmp
sbb
add
cmp
add
and
cmp
add
add
daa
xor
adc
and
cmp
(bad)
call
sub
push
and
arpl
imul
aad
sahf
popa
cmp
(bad)
inc
add
add
add
adc
lahf
add
push
and
jge
add
add
xchg
add
adc
add
dec
pop
add
or
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
(bad)
call
add
add
add
pop
cld
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
push
std
(bad)
jmp
add
push
add
add
cld
(bad)
call
add
add
add
add
add
add
add
std
(bad)
call
add
add
add
mov
(bad)
(bad)
(bad)
jp
(bad)
dec
add
add
add
add
add
mov
(bad)
jmp
add
add
add
cli
add
add
add
add
add
in
add
xor
add
xchg
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
and
and
inc
mov
cmp
inc
jle
add
add
dec
add
add
adc
add
cmp
(bad)
(bad)
jmp
fwait
ret
movs
sbb
inc
cld
(bad)
inc
add
add
add
mov
es
add
add
sub
add
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
push
cmp
add
add
and
add
add
cmp
(bad)
(bad)
jmp
pop
cmp
std
(bad)
jmp
adc
add
cmp
push
and
movs
sub
pop
and
out
ss
cmp
sti
(bad)
inc
jnp
add
add
adc
add
push
and
mov
(bad)
inc
jnp
add
add
stos
add
add
or
ja
(bad)
jmp
aad
xchg
jb
lods
sti
(bad)
inc
jnp
add
add
jnp
add
add
jae
add
cmp
std
(bad)
jmp
sldt
add
dec
(bad)
(bad)
inc
sbb
add
add
add
add
cmp
(bad)
jmp
mov
mov
(bad)
inc
pop
or
inc
add
add
sbb
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
cmp
(bad)
jmp
mov
inc
sti
(bad)
call
sub
push
and
int
lahf
pop
and
les
mov
cmp
jnp
add
add
jnp
add
add
jnp
add
add
ins
add
push
and
add
add
leave
std
(bad)
(bad)
cmp
add
add
sbb
or
add
jmp
inc
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
add
cmp
add
cmp
add
cmp
add
fadd
add
pop
cld
(bad)
jmp
and
add
cmp
push
and
inc
(bad)
cmp
out
xor
mov
(bad)
inc
sbb
add
push
add
add
(bad)
std
(bad)
jmp
push
in
add
cli
(bad)
inc
sub
sub
les
cli
(bad)
call
sub
push
and
cmp
cmp
popa
cmp
(bad)
inc
jae
add
push
jge
add
add
sbb
add
sub
add
push
cmp
std
(bad)
jmp
and
hlt
hlt
jmp
add
fs
shl
aaa
out
push
pop
popa
cmp
sub
pop
stc
fmul
sub
(bad)
inc
jle
add
add
dec
add
add
sub
(bad)
jmp
and
add
pop
cmp
cld
(bad)
jmp
adc
and
pop
stos
hlt
pop
and
fsubp
popa
cmp
stc
(bad)
call
push
and
imul
push
popa
cmp
stc
(bad)
inc
jnp
add
add
pop
sti
(bad)
jmp
push
add
add
xchg
cld
(bad)
inc
sbb
add
add
and
add
cmp
sbb
cwde
pusha
cmp
add
(bad)
jmp
or
add
cmp
jmp
sbb
arpl
call
add
add
fwait
add
add
std
(bad)
call
(bad)
(bad)
jmp
sub
add
cmp
push
and
std
into
dec
pop
and
cmp
(bad)
inc
sbb
inc
add
add
sbb
add
cmp
cld
(bad)
jmp
call
add
add
mov
cmp
and
retf
call
inc
and
add
pop
jge
add
add
sbb
add
cmp
sti
(bad)
jmp
pushf
add
and
add
outs
mov
push
adc
and
popa
cmp
stc
(bad)
call
sub
push
and
and
aaa
mov
(bad)
inc
jnp
add
add
xchg
add
and
add
add
xchg
sti
(bad)
call
dec
add
push
and
add
add
xchg
(bad)
jmp
sbb
clc
(bad)
call
sub
push
and
call
ret
popa
cmp
jnp
add
add
loop
add
and
sub
movs
lods
mov
inc
jnp
add
add
adc
add
push
and
add
add
ss
(bad)
jmp
jno
es
inc
sbb
add
add
add
add
cmp
sti
(bad)
jmp
mov
push
clc
(bad)
inc
pop
arpl
add
or
add
cmp
sti
(bad)
inc
sbb
add
or
add
cmp
cli
(bad)
inc
jnp
add
add
and
add
add
loopne
(bad)
jmp
outs
into
pop
cmp
add
fs
xchg
or
(bad)
call
sub
push
and
rcr
mov
cmp
idiv
call
sub
add
xor
and
add
add
add
sub
es
add
and
add
add
sub
push
arpl
inc
add
pop
shr
movs
add
push
sub
adc
push
add
add
adc
add
push
and
add
add
inc
add
add
add
pop
(bad)
fcom
and
movs
add
add
and
add
aas
jecxz
add
and
add
add
sbb
add
sbb
add
add
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
add
add
and
imul
add
add
lods
jmp
imul
and
mul
pop
add
add
and
add
add
test
add
adc
loopne
add
cmp
add
add
adc
loop
jl
pop
and
and
add
add
add
add
xchg
and
inc
add
and
add
add
xchg
add
add
push
cld
and
add
add
add
add
add
xchg
and
inc
add
and
jo
add
add
add
add
add
mov
add
and
add
sub
adc
add
cmp
add
and
add
add
add
or
cmp
cmp
jnp
add
add
pop
and
add
cmp
add
add
cmp
add
add
and
add
pop
push
add
and
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
(bad)
inc
add
add
add
add
add
(bad)
(bad)
call
(bad)
jmp
add
add
add
add
add
add
add
add
cmp
add
adc
mov
and
add
push
popa
cmp
add
add
pop
pop
or
add
add
cmp
(bad)
call
add
pop
loopne
and
out
popa
cmp
add
add
pop
pop
or
sldt
add
push
(bad)
(bad)
inc
jnp
add
add
or
add
add
add
inc
add
add
idiv
(bad)
call
cmp
add
add
and
add
pop
push
add
cmp
(bad)
(bad)
call
add
shr
push
and
push
enter
cmp
and
add
add
mov
add
enter
and
add
add
loope
add
cmp
(bad)
(bad)
jmp
and
iret
pop
and
add
mov
cmp
add
push
or
or
add
pop
cmp
(bad)
(bad)
jmp
cmp
add
add
and
add
cmp
(bad)
(bad)
jmp
add
add
cmp
inc
add
add
idiv
(bad)
jmp
adc
add
sub
add
push
cmp
and
cwde
repnz
and
bound
add
divps
add
add
(bad)
(bad)
call
(bad)
(bad)
call
std
(bad)
push
(bad)
(bad)
jmp
dec
std
(bad)
dec
(bad)
call
(bad)
jmp
add
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
mov
add
push
add
add
cmp
(bad)
(bad)
jmp
and
mov
cmp
(bad)
call
add
mov
and
cmp
call
or
loopne
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
fscale
(bad)
call
push
add
push
and
add
cmp
std
(bad)
call
cmp
(bad)
(bad)
jmp
push
add
add
cmp
adc
sub
sbb
pop
and
int3
and
sbb
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
and
mov
add
add
arpl
or
add
pop
add
add
loopne
add
cmp
and
xlat
push
and
cmps
inc
xor
or
pop
inc
add
(bad)
(bad)
dec
add
add
add
add
add
add
and
add
add
loopne
add
cmp
add
and
idiv
adc
add
call
mov
(bad)
inc
sbb
cmp
and
add
add
cmp
add
push
or
add
add
cmp
add
add
je
add
pop
and
stos
xchg
or
push
daa
leave
inc
popa
cmp
(bad)
inc
sbb
(bad)
(bad)
(bad)
cmp
add
add
add
push
add
dec
add
add
add
(bad)
(bad)
push
push
dec
(bad)
(bad)
jmp
add
add
loope
add
sub
add
push
cmp
and
add
add
sar
jmp
sub
(bad)
(bad)
inc
add
add
add
xor
add
add
adc
add
push
pop
sub
add
push
cmp
add
add
and
aaa
add
add
and
and
bound
popa
cmp
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
and
add
add
add
add
sbb
add
(bad)
(bad)
jmp
or
add
cmp
add
add
in
adc
sbb
popa
and
push
add
add
(bad)
(bad)
call
add
pushf
(bad)
(bad)
(bad)
jle
add
push
add
add
add
and
add
cmp
and
add
or
pop
jge
add
add
add
add
cmp
out
mov
and
add
lahf
mov
and
data16
pop
popa
cmp
movs
add
push
and
aas
mov
clc
push
popa
cmp
inc
and
add
(bad)
jg
add
push
add
add
or
add
cmp
add
cmp
and
add
cmp
add
add
cmp
add
add
push
add
push
cmp
and
add
add
sbb
add
pop
cmp
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
xchg
outs
xor
(bad)
jmp
add
xor
add
or
add
add
adc
add
push
and
add
add
cwde
push
add
and
jl
and
add
sub
adc
and
dec
push
pop
popa
cmp
add
add
or
xor
add
cmp
add
add
pop
adc
or
add
cmp
add
or
rcl
mov
xor
enter
push
add
cdq
add
push
and
add
add
cmp
add
push
add
mov
add
and
add
add
cmp
push
add
sbb
add
add
(bad)
(bad)
jmp
sbb
add
push
cmp
push
add
adc
and
and
jb
sub
cmp
add
or
add
jo
add
jp
add
add
add
add
and
add
add
xlat
add
and
outs
cmps
sahf
pop
and
in
cmp
inc
add
add
aas
popa
add
add
add
add
cmp
xchg
or
retf
push
add
add
push
push
les
add
add
or
or
(bad)
jmp
and
add
cmp
add
jo
add
nop
add
push
and
add
add
cmp
add
jle
add
add
or
sbb
add
sub
add
push
cmp
add
adc
and
jno
lahf
pop
and
pop
ret
cmp
add
add
adc
pop
sub
add
push
cmp
and
xor
and
and
jo
popa
cmp
jnp
add
add
jnp
add
ins
add
add
xchg
xchg
push
ds
(bad)
(bad)
jmp
sbb
stc
add
add
or
pop
mov
adc
add
popa
cmp
add
adc
push
add
add
add
add
push
add
add
rol
add
xchg
mov
add
add
add
add
or
pop
add
add
mov
add
adc
and
jmp
ja
cwde
popa
cmp
add
add
or
jmp
push
add
add
xchg
add
add
add
mov
add
and
add
add
add
adc
adc
sub
add
add
loope
add
cmp
add
and
push
add
add
xor
es
add
add
adc
and
call
xor
cmp
or
dec
cwde
dec
loop
and
stos
sub
add
add
pop
or
arpl
add
add
add
adc
add
and
mov
add
add
add
adc
and
add
add
add
add
add
and
add
add
call
add
cdq
add
push
and
add
add
xlat
add
add
jmp
add
add
stc
cmp
cmp
add
add
pop
pop
or
daa
add
add
loope
add
cmp
and
and
cmp
add
add
or
sbb
add
cmp
add
and
xchg
add
and
js
mov
arpl
adc
pop
and
inc
and
add
ds
(bad)
dec
cld
(bad)
push
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
inc
add
sbb
(bad)
jmp
add
cmp
add
ret
add
(bad)
(bad)
jmp
cld
(bad)
call
add
add
std
(bad)
(bad)
fadd
add
scas
add
add
add
add
call
add
add
ret
std
(bad)
call
add
add
(bad)
jmp
add
add
add
add
add
sub
add
push
cmp
add
add
push
add
outs
add
add
push
and
add
add
mov
ror
cmp
add
add
jg
adc
and
(bad)
(bad)
jle
add
add
pop
and
add
add
loope
add
cmp
mov
add
and
cmp
add
add
int
(bad)
and
(bad)
inc
pop
pop
or
and
add
cmp
add
adc
and
pop
rcr
push
jecxz
popa
cmp
(bad)
(bad)
dec
push
add
outs
add
add
jp
add
add
jle
add
add
add
pop
pop
or
add
add
add
add
jno
add
or
and
add
cmp
add
add
or
mov
imul
jae
ss
popa
cmp
add
jo
add
push
and
add
add
cmc
add
add
or
fbstp
pop
and
into
lds
popa
(bad)
(bad)
dec
add
jno
add
or
sbb
add
sub
add
push
cmp
add
add
adc
adc
sub
add
add
cmp
push
add
outs
add
add
jp
add
add
add
(bad)
add
add
pop
push
add
xor
xchg
add
adc
adc
adc
sub
add
and
add
add
jno
add
cmp
add
outs
add
add
add
add
inc
add
add
idiv
(bad)
call
cmp
add
add
push
add
push
es
cmp
add
add
pop
sbb
xchg
add
push
and
xor
add
adc
and
cld
lea
jo
mov
popa
cmp
pop
push
cmp
(bad)
(bad)
jmp
and
add
cmp
add
add
or
cli
aaa
push
and
mov
std
(bad)
inc
push
ds
(bad)
jmp
add
add
cmp
add
add
or
or
sub
add
popa
cmp
(bad)
dec
add
outs
add
add
or
or
add
cmp
add
add
or
stos
rol
add
aas
and
sbb
cmp
jnp
add
add
and
fwait
add
add
or
pop
cs
pop
and
pop
std
(bad)
dec
add
sub
push
and
add
add
jbe
add
push
add
jno
add
nop
add
push
and
add
add
loopne
add
cmp
add
adc
adc
adc
sub
add
and
add
add
inc
add
add
or
sbb
pop
add
or
jno
popa
cmp
adc
and
lock
pop
and
es
jmp
cmp
add
outs
add
add
nop
add
push
cmp
pop
add
add
push
or
dec
add
add
add
clc
(bad)
jmp
add
add
(bad)
(bad)
cli
clc
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
jmp
cli
(bad)
(bad)
mov
cld
(bad)
dec
(bad)
call
(bad)
dec
(bad)
push
sti
(bad)
call
(bad)
inc
(bad)
(bad)
mov
add
add
stc
(bad)
inc
(bad)
(bad)
jmp
jmp
(bad)
call
stc
(bad)
dec
(bad)
call
(bad)
push
add
add
add
dec
cli
(bad)
push
cld
(bad)
call
add
add
stc
(bad)
dec
(bad)
jmp
cli
(bad)
(bad)
cmp
(bad)
inc
(bad)
dec
add
add
add
add
adc
add
cmp
dec
inc
pop
(bad)
and
add
ret
jl
aad
adc
and
popa
cmp
dec
add
outs
add
add
add
add
cmp
add
add
pop
sbb
xchg
add
push
and
cmp
(bad)
(bad)
jmp
push
add
jo
add
or
sub
add
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
and
add
add
mov
adc
adc
add
cmp
inc
add
add
idiv
(bad)
jmp
pop
add
add
jg
(bad)
jmp
mov
sbb
cmp
cli
(bad)
call
adc
add
push
inc
add
add
idiv
(bad)
jmp
sldt
add
push
(bad)
(bad)
jmp
dec
or
call
or
xor
sbb
cmps
inc
fsub
mov
(bad)
(bad)
jle
add
add
pop
and
add
add
es
(bad)
jmp
jmp
fwait
cli
(bad)
call
push
push
sbb
push
add
jno
add
jg
add
pop
push
add
outs
add
add
jg
add
and
jnp
add
add
jg
add
pop
push
add
jne
add
or
sub
add
cmp
std
(bad)
call
or
out
inc
stos
pop
and
inc
popa
cmp
(bad)
jmp
adc
add
aam
add
add
add
sub
es
pop
sub
add
push
cmp
and
add
cmp
add
cmp
sub
add
push
imul
push
add
add
loope
add
cmp
add
add
jge
add
add
add
add
cmp
add
add
cwde
in
mov
lods
popa
and
add
add
loopne
(bad)
push
add
add
test
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
jmp
add
add
add
aad
(bad)
inc
add
add
add
xchg
(bad)
jmp
and
add
add
mov
and
and
cmp
(bad)
jmp
adc
push
add
add
add
adc
add
push
and
add
add
les
add
sbb
add
add
(bad)
(bad)
jmp
or
add
cmp
inc
add
add
jnp
add
add
jnp
add
add
add
and
jg
add
sub
add
push
sub
add
push
cmp
and
add
push
cmp
add
and
inc
movs
and
add
icebp
and
mul
jbe
pop
pop
popa
cmp
add
add
jnp
add
add
add
add
add
and
add
push
cmp
add
add
rcl
add
and
add
add
sub
add
sbb
add
add
(bad)
(bad)
jmp
or
add
cmp
and
pop
push
ficomp
rcr
add
add
jnp
add
add
aas
lds
add
and
add
add
cmp
add
add
and
fndisi(8087
mov
test
push
ds
(bad)
(bad)
jmp
push
add
add
rol
add
pop
cmp
or
add
cmp
add
add
and
rcr
call
push
add
add
and
add
add
mov
and
sub
sub
add
push
dec
add
and
add
cmp
and
je
call
or
mov
aaa
add
add
jnp
add
add
add
add
add
cmp
(bad)
jmp
and
dec
add
add
jnp
add
add
and
cmp
fs
hlt
shl
xor
mov
and
inc
adc
add
pop
(bad)
(bad)
jmp
add
sbb
add
retf
add
add
add
(bad)
(bad)
(bad)
jg
add
pop
(bad)
(bad)
(bad)
cmp
(bad)
inc
add
add
add
add
(bad)
(bad)
cmp
add
add
cmp
add
add
and
push
sbb
and
ss
popa
cmp
add
push
and
xor
pop
and
ror
popa
cmp
(bad)
inc
and
add
pop
jge
add
add
adc
add
cmp
xor
into
and
add
mov
or
clc
pushf
add
(bad)
(bad)
dec
and
pop
mov
pop
and
ret
xchg
nop
popa
cmp
(bad)
(bad)
inc
pop
or
push
add
add
pop
add
add
ds
loop
sbb
(bad)
inc
jnp
add
add
or
add
or
add
cmp
cmps
test
and
add
outs
adc
or
lahf
push
imul
(bad)
inc
jnp
add
add
cmp
(bad)
cmp
(bad)
jmp
adc
add
dec
add
dec
add
add
add
cld
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
std
(bad)
dec
add
outs
std
(bad)
dec
(bad)
(bad)
call
std
(bad)
jmp
std
(bad)
dec
jmp
(bad)
jmp
cld
(bad)
dec
(bad)
call
(bad)
(bad)
(bad)
jle
(bad)
jmp
(bad)
jmp
add
add
push
cmp
adc
(bad)
(bad)
inc
add
and
add
add
loope
add
cmp
(bad)
jmp
or
jb
test
and
mov
(bad)
(bad)
inc
sub
xor
add
add
add
add
adc
add
push
add
jnp
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
add
adc
add
add
add
adc
add
push
jle
add
add
pop
maxps
ins
add
add
sbb
maxps
ins
add
add
push
arpl
maxps
ins
add
add
pop
or
xchg
pusha
push
add
add
add
add
adc
add
push
add
in
add
and
xchg
add
add
add
add
or
add
and
add
adc
add
add
add
adc
add
push
pop
adc
jle
add
add
pop
add
push
sub
add
xor
add
add
adc
add
push
sub
add
push
sub
add
push
cmp
add
and
add
add
fiadd
add
cmp
inc
add
add
add
add
ins
add
add
add
add
add
or
add
cmp
or
add
add
cmp
or
inc
pop
and
inc
je
and
inc
or
add
sub
add
mov
add
add
(bad)
(bad)
dec
add
add
add
add
add
and
add
add
push
add
and
mov
sbb
add
cmp
add
and
movs
(bad)
(bad)
inc
sub
or
add
add
sub
add
push
and
add
pop
add
add
and
add
and
(bad)
(bad)
inc
pop
sub
dec
add
add
add
add
dec
add
add
add
add
add
pop
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
(bad)
dec
add
gs
(bad)
push
(bad)
(bad)
jmp
add
and
add
cmp
(bad)
(bad)
jmp
fidiv
sub
pop
(bad)
(bad)
call
add
inc
and
and
cmp
(bad)
inc
sbb
and
or
push
and
add
and
add
and
add
cmp
(bad)
(bad)
jmp
and
jbe
(bad)
(bad)
jle
add
add
and
add
add
data16
(bad)
call
add
loope
cmps
mov
and
cmp
add
adc
add
adc
add
adc
add
push
add
popa
add
push
add
popa
add
push
pop
adc
sub
add
sbb
push
add
or
add
sub
es
and
add
cmp
add
or
or
adc
sub
es
add
add
sbb
add
adc
push
cmp
and
add
add
or
add
and
xor
or
add
and
add
cmp
pop
add
adc
sub
add
push
or
add
loop
add
and
stos
(bad)
and
add
outs
imul
add
add
add
sbb
mov
add
add
loopne
add
cmp
or
or
jecxz
add
imul
and
add
add
xchg
pop
add
or
pop
add
push
and
test
add
and
cmp
add
add
scas
test
jns
adc
and
xor
scas
pop
popa
cmp
add
or
or
adc
sub
and
loope
add
cmp
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
aas
add
add
xor
add
cmp
(bad)
dec
sub
cmp
add
sub
add
push
cmp
pop
add
es
adc
adc
sub
adc
and
add
add
inc
add
pop
inc
add
add
idiv
(bad)
jmp
inc
add
add
jmp
inc
push
and
add
aad
adc
adc
and
popa
cmp
pop
push
inc
push
push
add
and
add
add
mov
sub
push
and
dec
add
add
loope
add
cmp
and
cmp
add
add
fbld
dec
and
jo
movs
jmp
add
adc
adc
mov
add
cmp
add
cmp
add
sbb
add
add
idiv
(bad)
jmp
sbb
add
sub
add
push
cmp
add
and
xor
adc
out
add
adc
add
xor
add
adc
and
jmp
push
cmps
popa
cmp
add
add
sub
add
and
and
add
add
or
add
adc
and
and
cmp
add
add
movhps
pop
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
add
sub
add
adc
and
add
add
iret
add
add
add
jecxz
add
and
sub
adc
sub
add
push
sub
add
push
cmp
add
and
add
add
loope
add
cmp
add
cmp
sbb
pop
add
push
and
add
add
xor
add
and
rol
mov
and
inc
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
cmp
add
add
add
add
dec
pop
add
or
add
add
add
add
fwait
(bad)
(bad)
push
add
cmp
and
add
add
xlat
(bad)
(bad)
call
push
and
mov
pop
and
jb
xlat
popa
cmp
push
add
add
sbb
dec
add
add
inc
add
add
idiv
(bad)
jmp
or
sar
mov
and
inc
add
add
(bad)
(bad)
call
add
add
sbb
add
adc
sub
push
and
add
pop
and
cmp
xchg
popa
cmp
(bad)
(bad)
(bad)
fcom
nop
std
(bad)
jmp
sbb
add
cmp
inc
add
add
idiv
(bad)
jmp
inc
add
add
xchg
add
add
repnz
push
add
add
and
adc
and
fdivr
pop
popa
cmp
add
push
adc
and
add
push
cmp
add
pop
adc
out
add
and
add
add
mov
add
adc
and
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
sub
add
cmp
add
add
cmp
xor
add
push
cmp
add
add
sbb
add
(bad)
(bad)
jmp
and
or
add
dec
mov
(bad)
and
add
dec
leave
mov
and
in
mov
cmp
add
add
or
push
adc
and
add
cmp
add
add
xchg
xchg
(bad)
movs
cmp
or
ds
sti
(bad)
jmp
sbb
add
cmp
mov
cmp
add
add
pop
mov
shl
add
add
add
push
or
and
add
cmp
push
and
mov
out
jg
jle
cmp
add
jle
add
add
or
add
outs
add
add
out
mov
and
add
test
adc
and
popa
cmp
add
cmp
push
and
rcr
and
cmp
add
push
sub
add
push
and
add
add
mov
add
adc
and
add
add
pop
add
add
test
mov
adc
pop
es
inc
add
add
add
(bad)
push
(bad)
(bad)
dec
add
add
add
add
add
jl
add
sbb
(bad)
dec
sti
(bad)
push
add
std
(bad)
inc
sti
(bad)
dec
add
rol
add
jmp
add
add
add
push
add
mov
add
add
add
jo
(bad)
jmp
cld
(bad)
inc
(bad)
(bad)
call
add
add
add
add
add
add
pop
add
dec
cld
(bad)
(bad)
jmp
(bad)
jmp
pop
add
push
(bad)
(bad)
dec
add
and
add
add
pop
add
add
sub
add
and
cmp
add
cmp
add
sbb
add
add
idiv
(bad)
(bad)
cmp
and
add
pop
cmp
add
add
adc
and
push
xchg
in
pop
and
outs
aas
adc
cmp
(bad)
(bad)
dec
sub
push
and
daa
add
add
or
add
adc
and
mov
pop
and
mov
jecxz
(bad)
call
adc
and
das
or
and
repz
popa
cmp
(bad)
(bad)
jmp
stos
add
push
and
add
add
into
add
add
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
push
cmp
mov
add
push
sub
add
push
and
add
add
popf
add
add
adc
jecxz
add
and
add
push
and
add
add
jge
add
adc
and
and
mov
pop
(bad)
(bad)
dec
sub
or
scas
add
push
pop
aam
out
add
and
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
cmp
add
sbb
add
add
idiv
(bad)
jmp
adc
add
cmp
add
add
push
and
and
cmp
(bad)
(bad)
inc
push
sub
add
and
(bad)
jmp
sbb
add
cmp
add
add
push
and
rcr
aad
and
add
xlat
std
(bad)
call
prefetchnta
cld
(bad)
jmp
pop
add
add
xlat
add
add
adc
out
add
and
add
add
mov
add
adc
and
mov
add
and
cmp
add
add
repz
int
adc
and
pop
inc
pop
popa
cmp
sbb
add
sub
add
and
jo
mov
addr16
(bad)
call
or
out
add
and
add
add
add
add
dec
enter
dec
std
(bad)
call
adc
push
adc
add
add
sub
add
push
cmp
add
cmp
add
add
pop
add
push
and
add
add
add
add
push
and
and
adc
(bad)
popa
cmp
std
(bad)
dec
sub
push
and
add
add
xor
add
dec
and
dec
add
add
add
std
(bad)
dec
(bad)
(bad)
jmp
add
std
cld
(bad)
push
add
add
(bad)
push
add
add
(bad)
call
idiv
call
idiv
jmp
add
add
add
add
cli
(bad)
jmp
cli
(bad)
jmp
std
(bad)
jmp
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
sti
(bad)
inc
add
jmp
(bad)
sti
add
add
idiv
call
(bad)
call
add
add
clc
(bad)
(bad)
inc
add
pop
idiv
push
idiv
call
add
jp
(bad)
inc
cld
(bad)
jmp
dec
add
add
add
add
add
add
add
add
cld
(bad)
(bad)
ds
add
idiv
jmp
(bad)
(bad)
cmp
(bad)
jmp
(bad)
inc
idiv
inc
(bad)
call
add
add
add
add
add
add
(bad)
push
cli
(bad)
call
std
(bad)
call
add
and
add
add
cmp
(bad)
(bad)
jmp
adc
jnp
jge
inc
repnz
add
adc
add
cmp
push
and
into
cdq
pop
and
jp
popa
cmp
adc
pop
adc
and
add
add
test
(bad)
call
push
and
and
mov
cmp
(bad)
call
push
and
and
cmp
(bad)
call
add
push
dec
add
int3
add
add
add
add
loopne
add
cmp
jmp
or
adc
adc
adc
add
or
add
cmp
(bad)
dec
push
or
jecxz
add
and
sub
es
add
cmp
dec
clc
stc
mov
call
sub
add
push
and
add
add
mov
add
adc
and
add
cmp
std
(bad)
call
idiv
(bad)
jmp
add
sar
(bad)
call
sbb
sbb
sub
add
push
and
sub
adc
add
cmp
add
and
add
add
dec
add
add
test
add
adc
push
and
add
add
xor
add
and
pop
jp
and
and
inc
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
cmp
add
add
add
add
dec
and
dec
add
add
add
add
fwait
(bad)
(bad)
push
add
cmp
and
add
add
cmp
(bad)
(bad)
jmp
adc
and
or
pop
and
cmps
(bad)
xor
xchg
(bad)
(bad)
(bad)
fucom
cmc
(bad)
call
sbb
dec
add
add
inc
add
add
idiv
(bad)
jmp
mov
mov
and
inc
add
add
(bad)
(bad)
inc
add
add
sbb
add
adc
mov
add
adc
and
and
cmp
(bad)
(bad)
(bad)
fsub
cmp
inc
cmps
sub
add
sub
add
and
sub
mov
and
inc
add
add
(bad)
(bad)
jmp
(bad)
dec
add
add
loope
add
cmp
(bad)
(bad)
cmp
(bad)
jmp
bound
stc
(bad)
call
add
push
dec
add
fcomi
(bad)
jmp
sbb
add
sub
add
push
cmp
(bad)
jmp
sbb
add
add
(bad)
(bad)
jmp
add
add
cmp
cld
(bad)
call
push
and
and
stos
adc
stc
(bad)
inc
pop
cmp
add
and
add
add
loopne
add
cmp
adc
nop
bound
add
or
add
cmp
cld
(bad)
call
push
and
and
ret
or
clc
(bad)
dec
sub
add
and
adc
fsincos
(bad)
jmp
jnp
aam
and
add
mov
adc
and
popa
cmp
add
idiv
jmp
or
add
cmp
sub
push
and
sldt
add
xchg
sti
(bad)
jmp
in
mov
and
add
push
(bad)
(bad)
and
xchg
mov
pop
popa
cmp
(bad)
dec
sub
push
and
or
pop
sti
(bad)
dec
sub
push
and
add
add
dec
sti
(bad)
call
adc
adc
sub
adc
and
add
sub
add
push
cmp
sti
(bad)
jmp
sub
or
inc
add
add
sbb
(bad)
call
push
and
lea
rcr
rcl
cmp
div
(bad)
call
or
out
add
and
add
add
cmp
cli
(bad)
jmp
adc
and
aaa
sbb
inc
mov
(bad)
call
push
cmp
(bad)
jmp
and
add
cmp
cli
(bad)
dec
sub
add
adc
and
add
add
loopne
add
cmp
and
jb
cmp
sub
push
and
adc
add
sub
add
push
cmp
(bad)
cli
(bad)
(bad)
cmp
or
out
add
and
xor
loopne
add
cmp
(bad)
jmp
or
add
sbb
add
add
lds
add
add
add
add
mov
add
add
xor
add
sldt
and
add
sub
es
jae
add
push
or
and
dec
or
popa
and
pop
inc
dec
add
add
add
add
add
pop
or
add
add
push
push
add
mov
pop
add
enter
pop
add
add
add
add
add
add
pop
add
inc
or
add
add
add
add
int
add
add
add
add
add
cmp
add
movs
add
add
or
add
or
add
pop
add
loope
add
sti
push
add
int3
push
add
adc
add
addr16
add
and
add
add
add
add
add
add
add
add
add
ja
add
jp
add
mov
add
cmp
add
lds
add
push
add
add
(bad)
(bad)
call
add
dec
add
in
add
inc
add
add
add
add
add
add
mov
add
add
add
repnz
add
add
add
or
add
sbb
add
mov
or
add
or
add
add
scas
add
add
add
out
add
inc
add
adc
add
cmp
add
adc
and
or
pop
and
or
(bad)
call
or
pop
and
and
add
pop
inc
add
add
idiv
(bad)
call
cmp
add
add
pop
add
push
and
cmp
add
add
addr16
pushf
mov
(bad)
jmp
add
add
sub
add
push
adc
jbe
jmp
push
pop
adc
push
add
push
adc
and
call
adc
adc
cmp
(bad)
jmp
add
add
sub
add
push
and
or
add
and
push
push
ds
inc
add
add
idiv
(bad)
jmp
sub
mov
add
add
mov
cmps
sahf
and
(bad)
call
adc
jecxz
add
and
call
fiadd
sub
push
in
popa
cmp
std
(bad)
inc
pop
adc
push
add
push
push
push
sub
add
push
push
sub
add
adc
and
and
add
stos
popa
cmp
push
adc
sub
adc
adc
push
ds
inc
add
add
idiv
(bad)
jmp
mov
cmp
add
add
fsubr
lds
and
test
popa
cmp
(bad)
call
adc
sub
add
push
and
sub
and
dec
cmp
arpl
dec
xor
mov
cmp
inc
sub
add
push
adc
push
adc
sub
add
push
and
sub
(bad)
inc
adc
push
adc
jmp
mov
int
pop
and
lods
or
cmp
adc
adc
push
adc
and
test
push
pop
popa
cmp
cld
(bad)
call
push
sub
and
daa
sbb
ds
dec
or
aam
(bad)
inc
jecxz
add
imul
push
adc
and
inc
cwde
pop
and
cmp
sub
add
push
push
sub
add
push
pop
sub
add
push
pop
sub
add
adc
and
scas
add
and
cmp
add
aaa
add
or
add
pop
pop
jg
pop
sbb
add
cmp
add
and
pusha
adc
sub
add
or
pusha
adc
sub
add
or
pusha
adc
sub
add
or
adc
sub
add
and
outs
or
jb
cvtps2pd
mov
cmp
(bad)
push
add
push
or
jmp
add
or
and
push
and
mov
std
sti
(bad)
inc
sub
add
push
cmp
inc
add
add
idiv
(bad)
jmp
add
(bad)
and
add
sub
sar
(bad)
call
push
push
sub
sub
add
push
and
and
mov
and
int
popa
cmp
sub
and
loop
ins
jmp
hlt
pop
popa
cmp
push
sub
and
add
test
and
popa
inc
sbb
js
(bad)
jmp
jnp
jge
push
sub
sub
add
push
imul
push
adc
and
and
lods
movs
and
sti
(bad)
dec
imul
push
adc
push
sub
and
fadd
lock
popa
cmp
sti
(bad)
jmp
push
dec
add
add
push
adc
and
sbb
cmps
cmp
adc
(bad)
inc
jecxz
add
and
adc
and
xchg
enter
(bad)
dec
xor
cmp
cli
(bad)
jmp
add
add
sub
add
push
and
or
sar
cli
(bad)
inc
push
sub
add
adc
and
and
scas
xchg
mov
cmp
sub
sub
add
push
and
call
add
and
add
sub
out
add
push
and
and
or
mov
aaa
mov
cmp
(bad)
inc
sub
add
push
and
and
fst
jg
mul
pop
cli
(bad)
inc
cmp
inc
add
add
idiv
(bad)
jmp
fist
push
add
add
popf
fnstsw
and
push
aaa
add
cs
(bad)
jmp
add
add
sub
add
push
and
cmp
cli
(bad)
call
and
pop
cdq
jg
pop
and
test
cli
(bad)
call
adc
out
add
push
cmp
inc
add
add
idiv
(bad)
jmp
(bad)
push
add
add
jecxz
xor
and
(bad)
inc
push
sub
add
push
adc
push
sub
add
push
and
and
and
cmps
hlt
mul
mov
(bad)
jmp
jnp
jge
push
sub
adc
jle
add
add
pop
add
push
adc
adc
and
or
dec
pop
and
inc
cmp
popa
cmp
and
add
or
jge
add
add
push
mov
(bad)
inc
adc
sub
add
push
and
add
push
adc
and
sbb
call
popf
and
cmp
(bad)
inc
push
sub
add
adc
and
stos
je
pop
and
cmp
jnp
add
add
mov
dec
add
push
sub
fwait
je
movs
cmp
stc
(bad)
push
add
push
adc
adc
and
loope
mov
mov
clc
(bad)
inc
push
sub
add
adc
and
stos
test
and
icebp
adc
popa
cmp
clc
(bad)
call
and
loopne
sbb
and
cmp
clc
(bad)
inc
push
sub
add
push
push
sub
add
adc
and
dec
mov
sbb
scas
inc
popa
cmp
or
sub
adc
or
cmp
sbb
add
add
(bad)
(bad)
jmp
inc
push
cld
repz
add
pop
mov
adc
and
popa
cmp
(bad)
call
adc
adc
and
inc
popa
(bad)
retf
push
clc
(bad)
inc
pop
adc
push
add
push
adc
and
cmps
scas
pop
and
std
or
popa
cmp
clc
(bad)
inc
adc
push
adc
sub
add
push
imul
adc
and
pop
mov
pop
and
pop
jmp
cmp
adc
adc
push
adc
sub
add
push
imul
adc
and
and
jb
popa
cmp
idiv
call
adc
in
add
push
and
add
sbb
add
add
idiv
(bad)
jmp
or
cmp
add
add
push
and
shl
call
adc
jecxz
add
imul
add
(bad)
(bad)
jmp
push
in
xchg
clc
and
add
dec
pushf
xchg
mov
(bad)
call
adc
adc
add
push
and
adc
add
sbb
add
add
idiv
(bad)
jmp
(bad)
fdiv
cmp
add
sbb
adc
and
popa
cmp
(bad)
call
punpckhwd
sub
and
xchg
jns
mov
fstp
cmp
idiv
dec
imul
push
adc
and
and
jmp
inc
adc
sub
add
push
adc
adc
sub
add
push
imul
or
jae
pop
and
jno
or
repz
inc
adc
push
adc
sub
add
push
and
add
push
pop
add
outs
add
push
adc
and
punpcklwd
pop
and
pop
jnp
popa
cmp
idiv
call
add
push
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
and
je
jmp
or
scas
sub
or
add
and
adc
push
adc
adc
and
inc
and
and
xchg
retf
cmp
call
adc
adc
outs
add
push
adc
and
and
cmp
(bad)
jmp
(bad)
call
add
jecxz
add
and
pop
sub
add
push
sub
add
push
and
lods
jl
movs
cmp
idiv
inc
push
sub
add
adc
and
and
push
bound
(bad)
call
and
sbb
adc
fiadd
popa
cmp
idiv
inc
pop
inc
adc
inc
add
add
idiv
(bad)
jmp
add
cmp
add
add
and
add
and
(bad)
inc
adc
jmp
mov
and
adc
push
cmp
or
jecxz
add
and
add
push
adc
and
ror
and
icebp
sbb
popa
cmp
push
adc
and
test
adc
pop
and
mov
jg
(bad)
call
adc
add
add
push
sub
and
les
gs
and
mov
dec
popa
cmp
(bad)
(bad)
cmp
add
add
and
sbb
jnp
dec
popa
cmp
(bad)
inc
sbb
add
add
add
(bad)
(bad)
jmp
into
call
cmc
(bad)
call
adc
add
or
jge
add
add
iret
jnp
fstp
adc
(bad)
inc
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
mov
cmps
sahf
and
add
sbb
test
es
hlt
(bad)
inc
push
sub
add
adc
and
mov
ds
hlt
(bad)
jmp
push
dec
add
sub
and
mov
and
jne
popa
cmp
push
adc
sub
add
push
and
adc
pop
imul
push
adc
and
xor
pop
and
ss
popa
cmp
adc
push
adc
sub
add
push
adc
and
mov
jb
adc
hlt
(bad)
call
punpckhwd
sub
enter
adc
and
and
jg
mul
inc
hlt
(bad)
call
add
push
and
sbb
sbb
adc
sub
add
push
and
add
push
adc
pop
sub
add
push
cmp
add
and
add
add
xor
add
and
pop
aas
cmps
and
dec
or
popa
and
inc
add
add
jb
add
inc
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
and
dec
add
add
add
add
adc
add
mov
(bad)
push
add
cmp
and
add
add
cmp
(bad)
(bad)
jmp
cmp
add
add
adc
push
adc
sub
add
push
and
add
push
and
add
cmp
and
push
cs
pop
and
cmp
(bad)
(bad)
fucom
add
add
sbb
inc
add
add
popa
mov
test
lock
or
popa
and
inc
add
add
(bad)
(bad)
call
add
add
sbb
add
adc
sub
add
push
adc
and
call
pop
jb
mul
(bad)
(bad)
fadd
sbb
add
add
inc
add
add
idiv
(bad)
jmp
test
lock
or
popa
and
inc
add
add
(bad)
(bad)
inc
add
add
add
add
inc
add
add
jnp
jge
push
sub
and
shl
and
loope
popa
cmp
adc
jle
add
add
pop
add
push
adc
and
add
int
inc
push
popa
cmp
add
push
and
sbb
sbb
jecxz
add
and
add
push
and
loopne
add
sub
add
push
cmp
add
and
add
add
xor
add
and
fld
and
dec
or
popa
and
inc
add
add
(bad)
(bad)
inc
add
jbe
add
cmp
add
add
add
add
dec
and
dec
add
add
add
add
mov
(bad)
call
add
add
add
add
or
add
and
add
add
xlat
(bad)
(bad)
(bad)
cmp
add
add
adc
push
adc
sub
add
push
and
add
push
and
add
sub
add
push
cmp
adc
and
add
(bad)
pusha
rol
popa
cmp
(bad)
(bad)
fisttp
add
adc
add
lods
sub
lds
lock
or
popa
and
inc
add
add
(bad)
(bad)
call
add
add
sbb
add
adc
push
adc
and
test
jg
sub
popa
cmp
(bad)
(bad)
(bad)
fadd
sub
add
push
and
js
mov
out
popa
and
inc
add
add
(bad)
(bad)
inc
add
add
sbb
add
push
sub
add
push
adc
and
and
sbb
or
(bad)
(bad)
(bad)
inc
sub
add
push
and
pop
add
add
pop
and
add
out
popa
and
inc
add
add
(bad)
(bad)
push
add
add
xor
add
and
adc
sub
clc
add
push
sub
add
push
and
add
and
dec
push
hlt
les
mov
or
(bad)
(bad)
(bad)
sbb
and
add
inc
dec
add
add
add
fimul
add
les
add
sahf
or
add
add
add
add
add
add
ins
or
add
cmp
add
dec
add
add
add
ror
add
xlat
push
add
pop
add
add
add
add
xor
add
add
adc
add
push
add
add
add
add
add
add
inc
sub
add
adc
add
or
add
add
add
sub
es
add
add
add
add
xor
push
add
add
add
adc
add
push
add
mov
add
and
add
push
push
bound
add
adc
add
mov
add
adc
add
push
sub
add
push
sub
add
push
cmp
and
add
cmp
add
cmp
add
add
add
add
inc
add
add
jge
add
add
add
add
cmp
add
add
jp
arpl
aam
adc
or
pop
inc
add
add
loopne
(bad)
call
add
mov
sub
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
test
(bad)
jmp
and
add
add
loope
add
cmp
(bad)
(bad)
jmp
push
and
and
cmp
add
add
xor
add
add
adc
add
push
sub
add
push
sub
add
push
cmp
and
add
add
cmp
add
add
and
retf
clc
cmp
popa
and
add
add
loopne
(bad)
inc
add
mov
add
add
add
add
dec
add
dec
add
add
add
add
add
add
mov
(bad)
push
add
add
add
popa
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
cmp
add
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
and
lods
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
cmp
(bad)
jmp
and
add
add
cmp
dec
and
and
cmp
(bad)
jmp
add
xor
add
add
adc
add
push
and
add
add
sub
ror
data16
add
add
jnp
add
add
jnp
add
add
outs
add
push
cmp
add
or
add
dec
add
dec
add
add
add
add
add
add
add
add
or
add
outs
add
add
add
add
add
call
add
add
add
mov
(bad)
(bad)
cmp
add
fild
add
and
mov
(bad)
inc
and
and
or
mov
add
push
or
repnz
add
and
add
add
loope
add
cmp
pop
and
jbe
sub
dec
fs
or
pop
add
add
jnp
add
add
jnp
add
add
jnp
add
ins
add
add
xchg
xchg
sbb
xchg
add
push
and
add
add
dec
(bad)
(bad)
(bad)
cmp
add
adc
add
add
cmp
(bad)
(bad)
jmp
(bad)
mov
ins
and
add
fs
push
jo
cmp
add
add
jnp
add
add
sbb
sub
loope
add
sub
add
push
cmp
(bad)
jmp
and
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
jge
add
pop
sbb
xchg
add
push
and
add
add
sar
(bad)
inc
and
and
cmp
jnp
add
add
jnp
add
add
outs
add
push
and
add
add
cmps
(bad)
(bad)
inc
and
xchg
popa
xchg
pop
and
inc
push
adc
add
add
add
add
xchg
add
and
add
add
jg
(bad)
inc
jnp
add
add
xchg
add
and
add
add
cmp
(bad)
jmp
push
pop
pop
or
or
pop
(bad)
(bad)
inc
jnp
add
add
xchg
add
and
add
add
inc
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
jge
add
add
add
pop
sbb
xchg
add
push
and
add
add
push
(bad)
(bad)
jmp
or
adc
bound
or
pop
inc
or
add
int3
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
push
(bad)
dec
(bad)
(bad)
inc
std
(bad)
jmp
push
add
add
loopne
(bad)
jmp
adc
add
add
add
adc
add
push
pop
sub
add
push
cmp
add
add
and
add
add
push
add
add
and
add
pop
pop
pop
fs
add
add
or
and
add
push
cmp
add
add
and
cs
and
or
pop
inc
add
add
loopne
(bad)
jmp
add
inc
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
mov
(bad)
push
add
add
add
add
push
cmp
(bad)
(bad)
jmp
cmp
add
add
and
add
pop
jge
add
add
add
mov
and
and
cmp
(bad)
jmp
adc
add
add
add
push
and
add
add
loop
add
sub
add
push
and
add
add
add
add
push
or
add
and
add
sub
add
adc
pop
add
add
add
add
adc
add
push
add
add
push
and
add
and
add
and
add
jge
add
add
add
xor
add
add
daa
add
adc
add
push
and
add
add
lods
add
add
adc
sub
and
mov
push
and
add
add
cmp
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
push
cmp
add
adc
pop
sub
add
push
cmp
add
add
or
repnz
(bad)
call
add
add
add
and
add
and
add
add
inc
add
add
mov
jg
and
lea
popa
and
pop
inc
push
add
add
add
nop
add
add
add
adc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
push
add
add
loopne
add
cmp
add
add
adc
sub
add
push
adc
adc
add
rol
add
and
mov
(bad)
(bad)
(bad)
jle
add
add
and
add
add
mov
add
cmp
add
adc
add
add
adc
add
push
and
pop
pop
adc
pop
xchg
popa
adc
sub
add
push
adc
adc
pop
adc
or
popa
shr
mov
add
and
jno
add
jle
add
add
std
add
push
and
add
add
and
add
add
push
add
add
sbb
add
adc
and
retf
in
and
adc
cmp
(bad)
(bad)
call
adc
sbb
fwait
xor
cwde
pop
(bad)
in
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
adc
pop
add
add
adc
adc
cmp
add
add
and
add
dec
adc
dec
add
add
add
add
add
add
add
add
cmp
dec
(bad)
(bad)
(bad)
ds
(bad)
call
add
add
add
pop
add
adc
add
add
add
ja
add
pop
add
add
add
add
add
add
add
add
add
add
std
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
add
add
std
(bad)
jmp
(bad)
(bad)
dec
add
add
add
pop
add
add
add
xor
add
pushf
(bad)
(bad)
jmp
dec
add
add
lahf
add
add
add
add
add
add
or
dec
(bad)
(bad)
call
adc
cmp
and
scas
add
pop
adc
and
add
add
cmp
(bad)
(bad)
jmp
adc
and
add
add
add
add
sbb
(bad)
(bad)
cmp
or
pop
adc
and
add
add
pop
(bad)
(bad)
call
mov
add
add
push
cmp
adc
repnz
(bad)
call
pop
pop
punpckldq
or
cld
add
push
adc
xchg
adc
push
sub
add
push
cmp
add
add
and
add
add
mov
push
add
add
mov
add
adc
and
add
cmp
pusha
mov
std
(bad)
call
adc
ja
and
rol
pop
adc
and
inc
std
(bad)
(bad)
jle
add
add
std
add
push
and
or
add
sbb
add
cmp
(bad)
call
mov
add
add
add
push
and
add
add
loopne
add
cmp
(bad)
jmp
and
cmp
add
add
in
push
jnp
and
(bad)
call
cmp
sub
add
push
and
cld
add
push
and
add
cld
add
push
push
adc
or
or
add
add
sub
add
push
cmp
std
(bad)
jmp
sbb
add
(bad)
(bad)
jmp
adc
add
cmp
std
(bad)
call
adc
and
add
cmp
std
(bad)
call
add
(bad)
(bad)
jmp
and
add
cmp
std
(bad)
call
imul
sbb
mov
(bad)
(bad)
cmp
add
adc
sub
add
push
and
add
and
and
add
add
xchg
std
(bad)
call
mov
add
add
push
and
add
add
loope
add
cmp
(bad)
(bad)
cmp
(bad)
jmp
fistp
mov
(bad)
call
push
inc
adc
add
adc
add
pop
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
add
add
(bad)
call
(bad)
push
add
jle
add
inc
add
add
cld
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
push
add
xchg
(bad)
(bad)
jmp
(bad)
jmp
adc
add
push
cmp
cmp
or
pop
adc
or
add
cmp
cld
(bad)
call
adc
push
jl
xchg
pop
and
cwde
popa
cmp
popa
arpl
popa
add
and
add
add
sar
(bad)
call
cmp
sbb
add
cmp
cld
(bad)
call
adc
inc
jno
mov
and
mov
ins
sti
(bad)
call
adc
fidiv
addr16
and
pop
sti
(bad)
call
imul
add
add
sub
add
push
cmp
cmp
call
or
cld
add
push
adc
pop
xchg
adc
push
add
add
cmp
jmp
and
retf
sbb
(bad)
dec
sub
add
push
and
sbb
pop
popa
or
add
add
cmp
cld
(bad)
jmp
and
pop
push
cmp
cli
(bad)
call
adc
push
and
add
add
loopne
add
cmp
cld
(bad)
jmp
jle
add
add
mov
add
add
loope
add
cmp
cld
(bad)
jmp
pop
push
adc
cmp
cld
(bad)
jmp
and
add
add
cmc
sti
(bad)
(bad)
cmp
push
pop
and
icebp
cld
(bad)
jmp
or
add
cmp
sti
(bad)
(bad)
cmp
(bad)
call
or
pop
ds
(bad)
jmp
sldt
add
(bad)
sti
(bad)
call
push
pop
pop
pop
adc
and
inc
add
arpl
pop
and
add
add
loopne
add
cmp
sbb
push
and
add
add
xchg
sti
(bad)
call
or
push
and
add
add
loopne
add
cmp
cmp
sub
add
push
and
xor
add
add
and
add
sub
es
and
add
add
fiadd
add
and
out
xchg
mov
add
add
or
or
add
cmp
mov
fist
add
and
jmp
and
cmp
add
add
and
add
pop
jge
add
add
adc
add
sub
add
push
cmp
and
stc
and
and
pop
inc
push
add
add
(bad)
(bad)
jmp
add
fiadd
add
xchg
(bad)
(bad)
(bad)
js
add
adc
add
pop
add
add
add
add
add
add
add
daa
add
add
add
add
push
add
add
sub
add
and
mov
jnp
add
add
cmp
add
add
xchg
add
add
pop
add
add
push
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
jo
add
push
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
or
popf
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
or
add
cmp
and
add
outs
add
add
adc
add
cmp
(bad)
jmp
fucomi
shl
add
and
adc
out
dec
(bad)
pop
popa
cmp
(bad)
(bad)
inc
add
sbb
call
add
add
cmp
(bad)
jmp
and
ret
jo
and
add
stc
and
adc
popa
xchg
daa
add
popa
cmp
add
jno
pop
pusha
pop
and
cmp
jnp
add
add
and
add
or
add
add
add
add
add
and
pushf
and
(bad)
(bad)
call
add
add
and
cmp
(bad)
inc
and
add
push
xor
add
and
add
add
mov
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
cmp
inc
add
add
idiv
(bad)
jmp
loopne
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
add
pop
cmp
(bad)
jmp
and
dec
xchg
cmp
std
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
sub
add
add
cmp
(bad)
(bad)
inc
pop
cmp
and
add
add
es
(bad)
call
add
inc
clc
aam
pop
and
pop
in
icebp
popa
cmp
jnp
add
add
pop
and
jg
add
and
add
add
cmp
std
(bad)
jmp
add
add
pop
and
add
adc
add
sub
add
push
cmp
std
(bad)
jmp
cmp
add
sub
adc
mov
(bad)
pop
and
dec
rcl
popa
cmp
std
(bad)
inc
push
add
test
add
and
add
add
cmps
std
(bad)
call
push
add
and
add
add
xchg
std
(bad)
jmp
xchg
nop
add
add
add
(bad)
mov
cmp
adc
push
and
inc
cmps
popa
cmp
cld
(bad)
jmp
add
add
xor
mov
add
sub
add
sub
es
and
add
add
cmp
add
add
sbb
add
(bad)
(bad)
jmp
adc
add
cmp
add
add
faddp
idiv
cmp
add
add
pop
fwait
sub
cmp
add
add
and
and
ss
popa
cmp
pop
sub
add
push
and
add
add
add
add
cmp
push
add
and
add
add
xchg
add
add
and
xchg
ret
and
test
loop
add
push
sub
and
mov
rcr
out
push
push
jmp
into
add
add
cmp
add
add
or
add
cmp
add
sbb
add
add
idiv
(bad)
jmp
or
add
cmp
add
sbb
add
add
idiv
(bad)
call
sub
add
push
cmp
add
and
sub
add
sbb
add
add
idiv
(bad)
jmp
add
add
sub
add
push
cmp
add
add
cmp
or
add
add
cmp
add
add
imul
push
and
add
add
out
add
add
jle
add
add
add
jle
add
add
add
add
add
(bad)
(bad)
jmp
and
add
add
retf
add
sbb
cmp
add
add
inc
adc
and
adc
add
or
pop
or
or
add
cmp
es
pop
and
in
or
or
or
add
or
add
loop
(bad)
call
add
add
add
idiv
(bad)
call
(bad)
(bad)
mov
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
or
cmp
add
and
dec
mov
cmp
sub
sub
or
sldt
add
xor
add
and
stos
mov
add
add
sbb
cmp
(bad)
inc
or
aaa
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
push
add
int
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jg
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
add
add
pop
add
add
cmp
add
mov
mov
and
add
add
cmp
and
cmp
add
add
pop
xchg
enter
or
ret
int3
pop
popa
cmp
(bad)
(bad)
call
sub
and
test
out
pop
and
xor
mov
sub
xor
add
add
adc
add
push
add
add
add
outs
add
add
jnp
add
add
xchg
and
inc
add
jnp
add
add
xchg
sub
add
xor
add
add
sbb
add
sub
es
and
add
add
mov
xchg
jg
cmp
add
add
add
jnp
add
add
sub
or
push
add
add
cmp
sbb
add
add
(bad)
(bad)
jmp
add
add
cmp
add
push
pop
cmp
add
add
add
add
cmp
add
sbb
add
(bad)
(bad)
jmp
loopne
add
sub
add
push
cmp
and
dec
add
add
les
push
add
add
ret
and
cli
in
add
add
add
add
add
add
pop
and
jg
add
push
add
add
or
add
cmp
add
and
bound
jmp
and
push
add
add
(bad)
push
add
add
(bad)
(bad)
call
add
sub
add
and
add
cmp
add
add
ins
add
push
and
add
add
mov
add
and
mov
and
pop
int3
popa
cmp
pop
cmp
and
add
add
mov
and
add
add
add
add
sub
add
add
add
and
add
and
add
add
jb
add
and
lahf
scas
in
cmp
add
add
xor
xchg
and
je
sbb
inc
add
jnp
add
add
add
pop
sub
and
add
add
loope
add
cmp
add
add
add
add
pop
jge
add
add
adc
add
cmp
add
add
cmp
push
add
add
or
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
std
(bad)
dec
add
fdivr
(bad)
jmp
and
add
add
cmps
(bad)
(bad)
jmp
add
push
add
add
or
or
add
cmp
popa
(bad)
(bad)
inc
add
add
add
jnp
add
add
sub
sldt
add
cmp
jmp
push
sub
adc
add
loopne
add
pop
add
adc
add
push
and
add
add
cmp
add
add
adc
and
es
outs
pop
and
sub
popa
cmp
push
and
and
jmp
add
and
add
add
repz
add
mov
jp
add
adc
and
and
cmp
add
adc
and
jp
pop
and
sbb
add
add
add
add
sub
add
push
cmp
lods
add
add
add
cmp
xor
out
outs
and
add
jb
pop
adc
add
add
add
add
add
adc
add
je
add
and
push
push
and
ror
popa
and
pop
inc
and
add
aas
add
add
add
add
add
test
add
rol
add
add
jmp
add
and
add
pop
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
jmp
add
add
(bad)
(bad)
(bad)
jp
add
add
(bad)
dec
add
add
add
jno
add
push
(bad)
(bad)
inc
add
add
add
add
add
xor
add
add
add
add
add
(bad)
(bad)
jmp
add
add
cmp
add
add
jne
add
pop
or
sbb
add
sub
add
push
cmp
push
or
add
add
push
cmp
push
and
mov
pop
aad
popa
cmp
(bad)
(bad)
call
add
jnp
add
add
in
add
and
add
sub
add
push
cmp
add
ja
add
and
jmp
add
in
or
and
(bad)
inc
pop
adc
ins
add
push
and
add
add
dec
add
add
push
and
iret
imul
popa
cmp
(bad)
(bad)
call
or
push
add
add
cmp
add
add
adc
and
pop
xor
(bad)
(bad)
inc
pop
adc
ins
add
push
cmp
add
add
and
add
dec
pop
add
or
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
or
(bad)
(bad)
dec
add
jg
add
mov
(bad)
call
add
adc
add
test
add
fs
(bad)
jmp
add
xchg
add
add
std
(bad)
jmp
(bad)
(bad)
jmp
std
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
call
add
add
sbb
add
sub
add
push
cmp
(bad)
jmp
adc
and
pop
shl
xchg
mov
(bad)
dec
add
add
add
add
inc
xchg
add
add
or
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
and
mov
and
and
xchg
std
(bad)
call
adc
adc
add
cmp
(bad)
(bad)
jmp
pop
push
push
ins
cmp
jmp
mov
add
or
daa
add
add
cmp
(bad)
(bad)
jmp
pop
inc
add
add
idiv
(bad)
jmp
sbb
add
cmp
(bad)
(bad)
call
push
and
sub
adc
fadd
inc
std
(bad)
dec
and
ds
add
add
add
add
popf
(bad)
(bad)
jmp
adc
ja
cmp
add
add
pop
sub
push
and
cmp
std
(bad)
inc
jnp
add
add
outs
add
add
pop
or
sub
sbb
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
dec
(bad)
(bad)
call
push
and
mov
lods
aaa
xor
(bad)
inc
jnp
add
add
outs
add
add
sbb
sub
sub
add
push
cmp
add
add
and
add
add
or
aaa
xchg
aam
and
add
push
jo
(bad)
cmp
push
and
aad
into
pop
and
cmp
inc
pop
adc
ins
add
push
and
add
add
sar
(bad)
jmp
mov
cmp
add
add
jge
inc
jle
cmp
(bad)
inc
or
ins
add
push
and
add
add
test
push
and
arpl
and
out
popa
cmp
cld
(bad)
dec
pop
aas
cmp
add
and
add
add
test
(bad)
jmp
push
je
lea
add
mov
adc
and
add
idiv
(bad)
dec
cmp
sldt
add
loopne
add
cmp
(bad)
jmp
sbb
and
add
add
inc
std
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
and
sub
(bad)
call
push
and
mov
pop
and
xor
(bad)
call
add
pop
adc
add
add
sub
add
push
cmp
std
(bad)
jmp
pop
cmp
add
and
add
add
lock
(bad)
dec
adc
jmp
add
add
push
cmp
cld
(bad)
jmp
sbb
add
add
(bad)
(bad)
jmp
adc
loopne
add
cmp
cld
(bad)
jmp
shr
add
and
add
cmp
dec
jb
push
and
add
in
or
and
(bad)
call
add
pop
adc
pop
add
add
mov
(bad)
jmp
mov
cmp
add
add
and
gs
(bad)
inc
adc
push
and
add
cmp
(bad)
jmp
pop
push
mov
add
add
cli
gs
or
(bad)
call
push
and
and
cmp
cli
(bad)
call
add
jmp
push
add
add
loopne
add
cmp
cld
(bad)
jmp
add
add
add
outs
add
add
sbb
sub
add
loope
add
cmp
sti
(bad)
(bad)
cmp
sti
(bad)
jmp
adc
pop
cmp
add
jnp
add
add
ins
add
add
sub
add
cmp
sti
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
add
cmp
sti
(bad)
dec
pop
pop
and
sti
(bad)
jmp
push
add
add
scas
sti
(bad)
jmp
inc
clc
xchg
push
cmp
cli
(bad)
call
push
and
jl
movs
pop
and
cmp
cli
(bad)
dec
pop
or
cmc
stc
(bad)
jmp
pop
add
add
cmp
jmp
add
push
add
add
mov
es
stc
(bad)
call
push
and
and
pushf
jp
cmp
stc
(bad)
jmp
adc
add
adc
add
add
add
sub
es
add
add
add
sub
add
sub
add
sbb
add
add
add
add
adc
add
push
sub
push
mov
cmp
mov
push
add
add
fld
add
add
add
add
add
add
add
sbb
add
or
xor
add
add
add
add
adc
add
push
and
add
add
add
add
sub
add
adc
add
add
add
adc
add
push
sub
add
push
sub
add
push
cmp
add
add
and
add
cmp
add
or
ds
pop
dec
pop
and
dec
mov
popa
cmp
add
add
jnp
add
add
and
sbb
jge
add
add
and
add
and
add
add
xor
add
sbb
add
add
idiv
(bad)
jmp
pop
add
add
sbb
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
(bad)
jmp
(bad)
dec
add
inc
(bad)
(bad)
call
add
add
add
and
mov
jb
add
and
add
add
xchg
(bad)
(bad)
call
cmp
add
add
or
add
cmp
inc
add
add
idiv
(bad)
jmp
adc
add
cmp
(bad)
inc
outs
add
add
jp
add
(bad)
add
add
pop
push
add
push
add
add
inc
(bad)
(bad)
(bad)
cmp
add
add
and
jbe
add
and
add
cmp
(bad)
(bad)
inc
sbb
fwait
add
add
or
add
push
cmp
(bad)
(bad)
jmp
or
cmps
scas
outs
fcomp
inc
outs
or
sbb
add
add
pop
pop
sub
add
and
add
add
out
(bad)
(bad)
inc
jae
add
and
add
or
pop
jge
add
add
add
pop
rcr
cmp
(bad)
(bad)
jmp
int
mov
add
add
ins
ja
dec
and
and
mov
and
add
add
add
add
add
add
push
cmp
pop
add
test
popf
add
add
jo
add
jp
add
(bad)
add
add
pop
push
add
or
add
push
cmp
(bad)
jmp
and
jae
cmp
add
add
lods
mov
jo
or
cwde
aas
sti
repnz
popa
cmp
add
add
sbb
cwde
add
push
and
add
add
loope
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
dec
and
push
mov
and
imul
add
add
add
sbb
pop
pop
jge
add
add
adc
add
cmp
std
(bad)
jmp
lods
sbb
and
and
inc
or
add
jns
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
inc
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
add
add
pop
cmp
add
jb
add
jnp
add
add
push
add
cmp
xor
cmp
add
add
xchg
or
das
or
aam
popa
cmp
jnp
add
add
add
add
add
inc
sub
adc
push
add
add
adc
add
push
and
add
cmp
dec
and
jo
cmp
add
add
add
mov
add
adc
and
inc
jp
test
mov
add
sub
bound
add
sbb
add
cmp
add
adc
and
pop
test
pop
and
push
jo
cmp
add
adc
and
push
pop
and
cmp
add
and
add
add
add
pop
jge
add
add
in
or
add
xor
add
dec
or
dec
add
add
add
add
add
add
pop
add
add
or
add
add
add
bound
add
lods
or
add
add
add
add
mov
add
sub
add
add
jl
add
xor
add
sbb
add
iret
add
add
pop
add
mov
or
add
add
fiadd
add
or
add
xor
add
cmp
add
loop
add
fwait
push
add
fild
add
cmc
add
add
add
test
add
or
add
add
std
add
add
or
add
push
add
mov
add
xchg
add
add
add
add
add
add
add
loope
add
sar
(bad)
jmp
add
add
add
pushf
pop
add
pop
add
add
add
add
or
add
add
jb
add
add
add
and
add
add
add
(bad)
jmp
retf
pop
mov
add
add
call
cmp
add
add
sbb
add
push
and
add
cmp
(bad)
(bad)
jmp
adc
lsl
add
and
cmp
and
add
add
mov
sub
pusha
cmp
add
add
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
and
loope
add
cmp
(bad)
jmp
and
pop
aaa
cmp
jnp
add
add
sub
es
cmp
add
add
pop
add
add
dec
(bad)
(bad)
dec
push
cmp
add
add
add
cmp
(bad)
call
or
cmp
jg
pop
and
ds
cmp
add
add
sub
add
and
add
add
cmp
(bad)
(bad)
jmp
shl
add
and
add
add
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
add
sub
add
push
cmp
std
(bad)
jmp
adc
and
xor
imul
adc
sbb
add
add
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
and
add
add
cmp
pop
inc
add
add
idiv
(bad)
jmp
cmp
add
cmp
pop
inc
fsub
cmp
add
add
pxor
ret
add
sub
or
clc
mov
jo
jge
popa
cmp
add
add
add
jnp
add
add
jge
add
add
and
add
cmp
(bad)
inc
jnp
add
add
add
add
jnp
add
add
push
rcr
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
push
cmp
and
mov
or
add
ja
pop
and
pushf
jge
popa
cmp
add
add
push
aas
jns
add
and
add
add
cmp
cld
(bad)
jmp
push
push
cmp
(bad)
(bad)
jmp
cmp
add
cmp
cld
(bad)
jmp
cmp
jmp
cmp
add
add
ret
and
or
sti
retf
pop
popa
cmp
add
add
sbb
add
add
cmp
add
cmp
cmp
(bad)
(bad)
jmp
pop
add
add
cdq
cld
(bad)
call
idiv
(bad)
call
sub
add
push
cmp
add
or
add
cmp
(bad)
jmp
loop
test
add
and
movs
test
cmp
sub
or
and
loope
pop
mov
add
add
jge
add
add
push
add
add
cmp
(bad)
call
or
push
mov
and
or
popa
cmp
add
add
jge
add
add
sbb
add
sub
add
push
cmp
cld
(bad)
(bad)
cmp
cld
(bad)
inc
jnp
add
add
jnp
add
add
add
add
push
add
add
repz
(bad)
call
or
xor
and
loopne
pop
popa
cmp
add
add
jle
add
add
jnp
add
add
pop
or
add
cmp
sti
(bad)
jmp
and
mov
and
in
or
popa
and
pop
inc
das
add
add
add
out
add
add
(bad)
(bad)
inc
add
adc
add
aaa
add
add
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
inc
add
xchg
(bad)
call
add
add
(bad)
jmp
(bad)
(bad)
(bad)
inc
add
fiadd
add
or
(bad)
call
add
scas
add
add
add
add
add
(bad)
call
add
sbb
(bad)
jmp
add
daa
add
add
add
iret
cli
(bad)
(bad)
fiadd
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
push
(bad)
dec
add
add
add
std
(bad)
jmp
(bad)
inc
(bad)
jmp
add
add
sub
add
push
cmp
cli
(bad)
jmp
and
jno
or
add
mov
cmp
(bad)
inc
and
add
pop
jge
add
add
sbb
add
cmp
and
loopne
js
and
shl
loope
(bad)
inc
and
add
pop
jge
add
add
sub
add
cmp
and
inc
jbe
cmp
add
add
inc
xchg
fstp
adc
and
popa
cmp
jle
add
add
pop
add
add
or
loope
add
cmp
(bad)
jmp
and
mul
cmp
data16
add
jnp
add
add
jecxz
add
and
add
add
sub
(bad)
jmp
jp
in
cmp
pop
(bad)
(bad)
call
sub
or
xchg
xchg
sar
jae
dec
clc
popa
cmp
(bad)
call
sub
or
adc
push
pop
and
sbb
xor
sub
or
int
ins
push
pop
and
int3
adc
(bad)
(bad)
inc
push
jge
add
add
or
add
cmp
stc
(bad)
call
or
stos
pop
cmp
popa
cmp
std
(bad)
call
sub
or
mov
and
cmp
std
(bad)
inc
sbb
lahf
add
push
or
add
add
loopne
add
cmp
and
xchg
test
cmp
std
(bad)
call
sub
or
repz
test
retf
punpcklwd
mov
(bad)
(bad)
jle
add
add
jnp
add
add
or
and
add
cmp
(bad)
jmp
mov
(bad)
std
(bad)
inc
pop
adc
out
add
and
add
sub
add
sub
add
push
cmp
stc
(bad)
jmp
and
cmp
add
add
sub
ja
and
(bad)
inc
or
add
push
and
add
add
or
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
pop
cmp
clc
(bad)
jmp
adc
and
ds
and
jns
popa
cmp
std
(bad)
inc
sbb
add
push
and
add
add
into
clc
(bad)
call
or
inc
xor
jns
and
push
add
cmp
cld
(bad)
inc
add
sub
popa
add
add
xor
add
pop
cmp
and
xchg
cmp
add
or
lods
push
es
cld
(bad)
inc
jnp
add
add
jnp
add
add
test
(bad)
jmp
adc
add
cmp
(bad)
inc
sbb
add
add
sub
add
sub
add
push
cmp
(bad)
jmp
adc
add
add
(bad)
(bad)
fincstp
(bad)
jmp
stc
(bad)
dec
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
clc
(bad)
jmp
add
add
add
cmp
idiv
jmp
sub
adc
(bad)
inc
or
lahf
add
push
or
add
cmp
clc
(bad)
jmp
add
add
add
cmp
std
(bad)
jmp
xor
add
cmp
idiv
call
or
lea
mov
cmp
cld
(bad)
inc
pop
adc
rol
add
and
(bad)
call
or
rcr
add
pop
and
and
sti
(bad)
inc
pop
jge
add
add
adc
add
cmp
mov
cmp
add
add
lock
retf
inc
add
add
add
out
add
jge
add
add
add
add
cmp
(bad)
inc
jnp
add
add
add
or
add
push
cmp
jmp
and
cmp
add
add
(bad)
aam
adc
and
inc
mov
popa
cmp
(bad)
inc
add
add
add
pop
add
push
jge
add
add
add
add
cmp
idiv
inc
sbb
add
push
and
add
add
maskmovq
jmp
fistp
mov
(bad)
inc
pop
pop
adc
add
add
add
icebp
idiv
call
inc
add
add
idiv
(bad)
jmp
sbb
add
cmp
idiv
jmp
stc
mov
ja
adc
(bad)
inc
add
sub
es
add
add
mov
and
add
add
mov
(bad)
inc
sbb
add
add
and
add
sub
add
push
cmp
adc
and
and
ds
cmp
cli
(bad)
call
sub
or
xchg
xchg
pop
and
mov
(bad)
inc
jnp
add
add
aas
call
add
cmp
(bad)
inc
sbb
add
add
sub
add
sub
add
push
cmp
(bad)
(bad)
cmp
inc
and
add
pop
jge
add
add
and
add
cmp
(bad)
call
or
ret
sub
in
popa
cmp
(bad)
inc
push
jge
add
add
sbb
add
cmp
idiv
jmp
(bad)
stc
call
and
add
fdivr
xor
cmp
cli
(bad)
(bad)
cmp
(bad)
inc
add
adc
pop
add
add
sub
add
sub
es
and
add
add
loopne
add
cmp
add
adc
pop
adc
pop
pop
pop
bound
adc
and
add
push
cmp
add
sbb
add
add
(bad)
(bad)
jmp
and
or
add
mov
cmp
add
add
ins
push
test
and
adc
cmp
add
pop
add
push
and
cmp
add
sub
add
push
cmp
pop
add
and
ins
add
add
adc
xchg
adc
and
add
add
loope
add
adc
and
(bad)
pop
and
cmp
add
adc
add
or
add
mov
adc
shl
(bad)
pop
and
pop
in
popa
cmp
add
add
push
test
add
and
add
add
xchg
pop
add
adc
and
in
mov
inc
add
adc
cmp
add
and
add
add
loopne
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
adc
add
cmp
add
adc
pop
or
xchg
or
add
xor
add
sub
add
push
cmp
add
adc
and
leave
jo
and
mov
xchg
test
add
pop
adc
pop
maxps
pop
pop
bound
adc
or
push
pop
add
adc
and
icebp
lds
(bad)
js
cmp
jg
add
adc
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
add
out
add
and
cmp
add
add
fnsave
imul
pop
popa
cmp
add
adc
adc
aas
xchg
(bad)
(bad)
jmp
and
add
sub
add
push
cmp
adc
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
sub
add
pop
cmp
sbb
add
add
(bad)
(bad)
jmp
add
add
cmp
add
and
in
add
add
adc
adc
pop
pop
pop
bound
adc
das
add
add
pop
push
add
and
cmp
add
add
add
and
and
add
pop
adc
adc
pop
adc
mulps
pop
pop
bound
and
add
sub
add
push
cmp
add
and
in
and
add
stos
push
cmp
adc
xchg
adc
cmp
cld
add
and
jnp
pop
and
mov
cmp
add
and
add
add
add
add
fadd
xchg
dec
add
add
adc
xchg
and
adc
and
mov
adc
ret
jle
and
cmp
cmp
add
add
adc
add
add
aas
add
add
add
sub
add
push
cmp
and
adc
jae
and
pop
inc
add
add
add
add
cmp
add
pusha
add
add
(bad)
jmp
add
add
add
add
add
add
add
dec
(bad)
(bad)
push
add
add
add
push
(bad)
(bad)
dec
add
fiadd
add
retf
(bad)
cmp
add
xor
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
std
(bad)
push
add
add
add
add
add
add
add
movs
cld
(bad)
(bad)
fadd
(bad)
(bad)
cli
add
add
add
push
push
add
add
add
(bad)
(bad)
jmp
add
add
or
add
cmp
adc
add
and
add
add
lahf
add
add
test
pop
and
add
fs
xor
and
mov
retf
pop
popa
cmp
(bad)
(bad)
call
movlps
and
add
add
loopne
add
cmp
add
and
push
add
add
mov
jg
and
xchg
and
lods
pop
popa
cmp
(bad)
(bad)
inc
or
add
cmp
inc
push
sbb
cmp
or
add
add
push
add
add
cmp
add
add
adc
and
in
(bad)
pop
and
leave
in
popa
cmp
add
adc
xchg
pop
adc
or
pop
pop
bound
add
sbb
add
cmp
add
add
add
add
adc
and
add
add
fiadd
add
pop
cmp
(bad)
jmp
adc
add
cmp
add
add
adc
sbb
mov
pop
and
ins
pusha
mov
aaa
(bad)
(bad)
call
add
cmp
add
or
cmp
add
cmp
adc
stc
ror
xchg
das
popa
cmp
(bad)
(bad)
call
adc
and
add
add
loopne
add
cmp
adc
cmp
add
or
aas
add
add
ins
add
add
hlt
or
and
add
adc
out
and
(bad)
call
push
pop
pop
adc
and
add
cmp
add
pop
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
push
cmp
and
cmp
add
add
sbb
aam
and
(bad)
call
push
pop
(bad)
movs
add
add
add
add
add
sbb
add
add
(bad)
(bad)
jmp
and
add
sub
add
push
cmp
add
add
sbb
add
add
(bad)
(bad)
jmp
adc
aam
add
adc
and
mov
dec
fsub
cmp
or
inc
add
add
mov
add
shl
push
and
add
add
movs
add
add
adc
test
and
and
addr16
cmp
std
(bad)
call
or
adc
pop
or
pop
pop
bound
or
aaa
add
add
jns
add
and
xor
cmp
cld
(bad)
inc
jnp
add
add
adc
inc
add
pop
xchg
adc
and
add
add
push
add
add
adc
pop
loope
or
adc
popa
cmp
push
pop
pop
adc
and
add
sub
add
push
cmp
add
adc
and
xor
test
adc
pop
pop
adc
and
add
add
or
add
and
imul
(bad)
call
adc
arpl
adc
pop
add
add
cmp
add
add
sbb
add
(bad)
(bad)
jmp
and
add
push
cmp
add
add
adc
and
movlps
ja
aad
popa
cmp
cld
(bad)
dec
pop
pop
or
sub
add
cmp
add
pop
cmp
cld
(bad)
inc
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
and
add
add
loopne
add
cmp
adc
add
or
push
add
add
outs
add
add
add
(bad)
(bad)
jmp
sub
add
cmp
add
adc
and
and
inc
adc
sti
(bad)
call
adc
pop
add
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
sbb
add
cmp
add
add
inc
lahf
fimul
and
add
mov
dec
and
sahf
stos
scas
mov
sti
(bad)
call
or
or
cli
(bad)
jmp
or
add
cmp
add
add
adc
lods
mov
lahf
pop
and
fldenv
pop
sti
(bad)
inc
adc
adc
and
add
add
rol
add
and
mov
(bad)
call
push
add
jecxz
add
and
std
(bad)
jmp
xor
add
cmp
mov
pop
sti
(bad)
inc
jnp
add
add
or
push
adc
sbb
or
popf
sub
add
push
sub
add
push
cmp
add
and
add
add
jb
add
and
das
aas
and
add
dec
mov
cmp
cli
(bad)
inc
adc
push
and
add
sldt
add
inc
add
add
adc
and
stos
jmp
xor
(bad)
call
adc
jmp
and
cmp
popa
cmp
add
cmp
add
or
adc
(bad)
jmp
sbb
add
dec
adc
dec
add
add
add
std
(bad)
call
(bad)
dec
idiv
jmp
std
(bad)
(bad)
fsqrt
(bad)
jmp
std
(bad)
call
add
xchg
add
add
std
(bad)
dec
sti
(bad)
call
(bad)
dec
add
add
idiv
inc
(bad)
jmp
(bad)
push
add
add
clc
(bad)
dec
(bad)
inc
(bad)
dec
cld
(bad)
dec
sti
(bad)
jmp
(bad)
(bad)
call
sti
(bad)
push
(bad)
jmp
(bad)
(bad)
aas
stc
(bad)
call
stc
(bad)
call
std
(bad)
call
clc
(bad)
(bad)
jl
(bad)
dec
(bad)
(bad)
(bad)
out
cld
(bad)
call
(bad)
call
clc
(bad)
(bad)
cld
idiv
jmp
idiv
inc
(bad)
jmp
add
and
(bad)
dec
add
add
(bad)
(bad)
dec
cld
(bad)
jmp
(bad)
dec
(bad)
push
sti
(bad)
push
add
add
idiv
call
add
add
(bad)
(bad)
jle
(bad)
push
cld
(bad)
jmp
sti
(bad)
jmp
add
add
push
add
add
in
(bad)
(bad)
jmp
xor
sub
pop
stc
(bad)
inc
or
and
add
pop
sub
add
add
cmp
(bad)
(bad)
jmp
inc
dec
lods
icebp
and
add
cmp
add
and
(bad)
pop
popa
cmp
stc
(bad)
dec
add
jecxz
add
and
clc
(bad)
jmp
add
add
cmp
or
call
adc
and
add
add
jne
(bad)
(bad)
cmp
add
adc
or
add
(bad)
(bad)
(bad)
jmp
daa
dec
pop
push
cmp
clc
(bad)
call
push
pop
or
idiv
jmp
xor
inc
(bad)
(bad)
call
adc
dec
dec
lahf
(bad)
pop
and
cmp
jnp
add
add
adc
push
sbb
punpcklbw
cmp
(bad)
jmp
and
add
add
adc
(bad)
call
adc
dec
push
cmp
in
popa
cmp
(bad)
jmp
add
add
xor
add
add
adc
add
push
and
add
add
cmp
add
sbb
and
add
add
cmp
add
and
add
add
add
and
jo
loopne
and
cmp
add
sbb
and
add
add
adc
add
and
push
mov
cmp
add
add
and
hlt
add
add
or
add
and
add
add
in
add
add
sub
add
pop
inc
add
add
add
(bad)
(bad)
jmp
add
and
add
add
les
add
and
push
jns
and
xor
popa
and
or
add
rol
add
test
(bad)
jmp
add
add
add
mov
(bad)
jmp
(bad)
dec
(bad)
(bad)
push
(bad)
call
sub
add
push
cmp
add
and
add
sub
add
push
cmp
add
cmp
add
and
rcl
cmps
(bad)
(bad)
inc
add
and
mov
add
call
or
add
and
add
and
add
sub
add
cmp
(bad)
(bad)
jmp
and
add
add
loopne
add
cmp
and
and
arpl
(bad)
inc
add
adc
mov
sub
popf
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
std
mov
(bad)
jmp
adc
add
add
add
adc
add
push
and
add
add
pop
add
add
and
jno
pop
and
movs
popa
cmp
push
jge
add
add
or
add
push
cmp
add
add
cmp
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
and
loopne
add
cmp
pop
cmp
add
add
add
add
cmp
aam
iret
out
iret
outs
inc
shl
sbb
add
sar
(bad)
(bad)
jp
add
sub
(bad)
dec
add
add
add
add
add
add
jmp
or
add
pop
cmp
jmp
shl
add
and
add
add
pop
(bad)
(bad)
dec
and
and
cmp
push
jge
add
add
loopne
(bad)
jmp
and
add
pop
cmp
(bad)
(bad)
jmp
sbb
add
add
idiv
(bad)
jmp
or
add
cmp
(bad)
jmp
ins
loop
mov
add
and
or
mov
nop
cvtps2pd
pop
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
and
add
add
aam
(bad)
inc
jnp
add
add
ds
(bad)
jmp
add
add
cmp
and
js
aam
and
cmp
(bad)
(bad)
inc
jnp
add
add
ds
(bad)
(bad)
jmp
loope
add
sub
add
push
cmp
jmp
and
add
add
xchg
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
adc
add
adc
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
sbb
add
add
add
sub
es
and
fiadd
add
out
add
and
add
add
mov
add
sub
xor
add
add
adc
add
push
sbb
add
sub
add
sub
add
xor
add
add
adc
add
push
and
add
add
and
add
push
and
and
cli
outs
popa
cmp
sub
or
add
pop
cmp
add
add
add
add
add
cmp
add
pop
inc
add
add
idiv
(bad)
call
cmp
add
add
jp
add
es
cmp
add
add
sbb
xchg
add
push
sub
add
push
sub
add
push
cmp
and
add
add
loopne
add
cmp
add
jnp
add
add
add
dec
add
push
and
add
add
xchg
add
add
cmp
outs
add
add
jbe
add
and
add
add
jge
add
add
jnp
add
add
arpl
add
and
cmp
add
and
add
shl
or
pop
inc
add
add
fdivr
(bad)
jmp
add
add
(bad)
(bad)
(bad)
cmp
push
add
add
xor
add
push
and
dec
ins
pop
and
shl
mov
add
add
add
arpl
add
cmp
or
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
(bad)
call
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
adc
add
push
and
loopne
add
cmp
pop
add
and
imul
retf
and
cmp
add
adc
add
add
add
pop
aas
test
add
add
ret
pop
add
sbb
add
add
(bad)
(bad)
jmp
add
add
scas
pop
add
sbb
add
add
(bad)
(bad)
jmp
sbb
add
cmp
adc
cmp
add
add
add
add
add
add
das
add
add
jp
add
sbb
add
add
(bad)
(bad)
jmp
sub
add
cmp
add
and
sti
add
add
or
and
add
and
add
add
dec
pop
add
sbb
add
add
(bad)
(bad)
jmp
push
add
add
aaa
pop
add
adc
and
pop
call
adc
cmp
add
add
jnp
add
add
adc
adc
rcr
cmp
add
and
cmp
and
add
pushf
sar
and
inc
and
pop
popa
cmp
sbb
add
adc
jmp
daa
add
add
aam
add
sbb
add
add
idiv
(bad)
jmp
or
loopne
add
cmp
add
add
add
sbb
add
adc
xor
add
cmp
pop
pop
adc
add
mov
add
adc
and
retf
loopne
pop
and
lods
inc
in
cmp
add
add
cmp
add
add
sub
add
cmp
add
and
inc
jbe
and
add
sbb
sti
aad
es
add
add
push
and
xchg
dec
pop
and
cmp
add
add
push
cmp
and
add
push
cmp
push
add
es
jmp
shl
add
mov
cmp
add
add
jo
(bad)
jmp
and
add
add
add
add
and
sub
and
add
or
and
add
sbb
adc
and
xchg
pop
adc
cmp
add
sub
add
push
cmp
add
push
and
sbb
int
and
cmp
add
adc
pop
pop
adc
and
add
add
test
push
lahf
das
or
add
and
outs
and
cwde
iret
adc
pop
popa
cmp
add
add
jnp
add
add
or
pop
xchg
adc
and
add
add
jb
add
add
jnp
add
add
pop
add
push
and
add
push
jge
add
add
add
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
add
inc
add
add
idiv
(bad)
jmp
or
add
cmp
add
and
fstp
imul
add
or
pop
xchg
adc
add
push
add
add
clc
add
add
push
and
mov
pop
and
std
rcr
cmp
jg
add
jnp
add
add
pop
(bad)
add
add
add
pop
sub
and
mov
push
and
and
rcr
aad
cmp
add
or
add
add
add
pop
adc
pop
pop
pop
pop
bound
and
add
add
mov
add
push
and
pop
xchg
cld
popa
cmp
add
add
add
add
add
ja
(bad)
jmp
push
add
add
bound
add
cld
jmp
sar
test
adc
push
and
add
cmp
add
and
cmp
cmp
add
add
pop
pop
sbb
and
add
pop
cmp
add
add
and
inc
push
and
add
gs
mov
push
and
xchg
call
add
adc
and
jmp
test
xor
cmp
add
add
push
and
add
add
jecxz
add
adc
and
sub
and
icebp
cmp
add
add
pop
pop
adc
and
add
cmp
add
add
or
add
add
mov
add
adc
and
ins
out
xchg
pop
and
cmp
add
push
or
add
xchg
add
add
add
pop
pop
push
sahf
and
add
add
test
add
and
sbb
add
add
add
add
jnp
add
add
pop
(bad)
add
add
add
pop
sub
xor
push
add
add
push
and
cli
jb
pop
and
mov
add
add
push
cmp
and
sub
sub
add
push
and
or
aaa
add
add
loope
add
cmp
add
add
or
xchg
pusha
loopne
and
add
or
cmps
and
add
add
add
add
or
and
add
pop
sub
adc
add
cmp
add
add
cmp
sbb
ret
add
pop
pop
or
adc
mov
add
adc
and
and
jmp
add
adc
and
add
add
xchg
add
add
aas
out
lods
and
add
cld
jmp
shl
add
push
sub
adc
sbb
add
cmp
add
and
cmp
jns
xchg
adc
pop
daa
pop
inc
daa
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
jle
add
cmp
add
or
(bad)
(bad)
cmp
(bad)
jmp
std
(bad)
jmp
stc
(bad)
jmp
add
add
(bad)
(bad)
cmp
(bad)
call
(bad)
(bad)
(bad)
mov
sti
(bad)
call
cli
(bad)
jmp
add
add
(bad)
jmp
std
(bad)
dec
cld
(bad)
call
(bad)
(bad)
(bad)
sti
sti
(bad)
dec
add
pop
std
(bad)
push
(bad)
jmp
cli
(bad)
jmp
cld
(bad)
jmp
adc
add
cmp
pop
pop
or
add
cmp
pop
inc
add
add
idiv
(bad)
jmp
xor
add
cmp
stos
sbb
xor
cmp
add
add
push
push
sbb
jmp
popa
cmp
jnp
add
add
pop
pop
pop
(bad)
add
add
add
pop
sub
add
add
cmp
add
and
sahf
repnz
add
and
repnz
cmps
and
(bad)
call
or
ds
(bad)
(bad)
jmp
and
add
sub
add
push
cmp
add
add
and
data16
cmp
jnp
add
add
pop
adc
and
add
add
repz
add
push
and
xor
cwde
pop
and
fisubr
(bad)
(bad)
inc
jnp
add
add
or
pop
and
add
add
add
pop
sub
sbb
add
sub
add
push
cmp
sbb
add
add
(bad)
(bad)
jmp
and
add
cmp
jnp
add
es
add
push
sub
add
push
cmp
(bad)
jmp
and
add
add
jge
add
cmp
add
add
jnp
add
add
or
pop
and
inc
cli
(bad)
jmp
adc
add
cmp
add
adc
pop
pop
adc
and
add
add
cmp
add
adc
and
and
cmp
std
(bad)
inc
jnp
add
add
or
sub
add
cmp
add
and
push
(bad)
call
add
(bad)
(bad)
cmp
sub
push
(bad)
dec
add
add
add
clc
(bad)
(bad)
out
(bad)
(bad)
call
(bad)
jmp
sti
(bad)
call
(bad)
(bad)
fdivrp
(bad)
call
stc
(bad)
jmp
clc
(bad)
inc
stc
(bad)
jmp
clc
(bad)
inc
idiv
call
(bad)
(bad)
jmp
jmp
(bad)
(bad)
call
(bad)
jmp
cli
(bad)
call
stc
(bad)
(bad)
fdiv
(bad)
call
clc
(bad)
(bad)
jge
(bad)
dec
add
add
std
(bad)
inc
std
(bad)
push
(bad)
jmp
idiv
dec
(bad)
(bad)
inc
sti
(bad)
inc
cld
(bad)
jmp
(bad)
(bad)
mov
stc
(bad)
push
sti
(bad)
dec
idiv
jmp
call
(bad)
jmp
(bad)
push
add
add
cld
(bad)
(bad)
aas
clc
(bad)
call
(bad)
jmp
std
(bad)
push
stc
(bad)
call
(bad)
call
cli
(bad)
dec
cld
(bad)
inc
(bad)
(bad)
push
add
and
add
add
or
(bad)
call
push
and
fwait
pop
pop
and
pop
mov
popa
cmp
jnp
add
add
push
sahf
and
add
pop
cmp
(bad)
(bad)
jmp
and
cmp
add
add
rcl
mov
push
and
popa
cmp
(bad)
call
add
sbb
add
add
adc
adc
and
or
add
cmp
iret
rcl
cmp
cld
(bad)
call
push
and
pop
and
and
fdivr
(bad)
jmp
add
add
xor
add
add
sub
es
pop
sub
add
push
cmp
add
add
and
ins
add
add
jnp
add
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
cmp
add
and
add
add
loopne
add
cmp
add
add
add
jge
add
add
push
add
add
loope
add
cmp
add
add
add
add
add
add
add
add
popf
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
call
(bad)
(bad)
dec
add
add
(bad)
(bad)
push
add
add
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
add
add
scas
(bad)
(bad)
inc
and
inc
add
add
add
xor
add
add
adc
add
push
and
add
sub
add
push
cmp
add
and
in
and
add
popf
sbb
fsub
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
cmp
add
add
add
add
dec
add
dec
add
add
add
add
adc
add
or
add
mov
add
add
add
inc
add
imul
inc
add
add
add
add
add
je
add
loopne
add
mov
add
test
add
or
add
cmp
push
or
cmp
or
or
or
add
adc
add
xchg
add
add
(bad)
(bad)
(bad)
fild
add
icebp
add
add
add
add
(bad)
(bad)
call
add
jl
add
and
add
add
data16
(bad)
jmp
scas
leave
test
inc
jnp
add
add
jnp
add
add
dec
add
and
add
add
cmp
(bad)
jmp
sbb
add
add
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
inc
and
inc
or
xchg
rcl
popa
cmp
(bad)
inc
jnp
add
add
jnp
add
add
add
sub
or
add
push
cmp
(bad)
(bad)
jmp
cmp
add
add
add
add
jnp
add
add
add
sub
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
aas
inc
add
add
or
cmp
add
jge
add
add
adc
add
cmp
and
fisttp
fbld
in
(bad)
(bad)
inc
and
mov
mov
(bad)
(bad)
inc
add
jnp
add
add
cmp
and
add
add
cmp
(bad)
jmp
sar
add
and
add
add
push
(bad)
(bad)
inc
and
add
pop
jge
add
add
sub
add
push
cmp
add
and
add
add
sub
(bad)
inc
and
add
pop
jge
add
add
add
adc
(bad)
inc
and
add
fs
add
add
or
add
cmp
std
(bad)
call
cmp
(bad)
jmp
add
add
cmp
std
(bad)
inc
and
mov
or
ss
(bad)
inc
push
jge
add
add
sbb
(bad)
jmp
and
add
add
loope
add
cmp
pop
and
(bad)
sbb
aas
(bad)
loope
cmp
(bad)
(bad)
inc
add
push
add
add
add
adc
add
push
sub
es
add
push
and
add
push
sub
add
sub
add
xor
add
add
adc
add
push
and
add
add
aaa
add
add
or
add
add
cmp
add
add
push
add
add
add
add
add
pop
add
push
and
add
add
sahf
add
add
pop
add
add
push
add
dec
add
add
add
add
add
add
pop
add
add
add
xchg
add
add
(bad)
jmp
add
add
cmp
(bad)
(bad)
inc
pop
pop
or
or
add
push
cmp
and
push
sbb
and
and
add
(bad)
(bad)
(bad)
cmp
add
add
(bad)
(bad)
(bad)
jge
add
sub
add
push
sub
add
push
cmp
add
and
add
add
jnp
(bad)
call
or
add
add
cmp
(bad)
jmp
mov
int
and
add
in
mov
and
(bad)
inc
add
add
add
xchg
add
add
add
xchg
pop
pop
or
jb
(bad)
jmp
and
add
add
xor
(bad)
jmp
rcr
(bad)
cmp
(bad)
dec
and
push
je
and
cmp
popa
cmp
(bad)
inc
sub
adc
add
and
add
add
add
sub
es
sub
add
and
add
and
add
and
or
add
and
add
add
add
adc
add
push
and
add
add
lahf
add
add
fistp
sbb
and
add
xor
push
xchg
and
add
add
add
or
add
add
adc
add
cmp
add
cmp
add
add
pop
dec
add
and
add
add
pop
add
add
and
cmp
jmp
add
add
push
add
add
ds
add
and
add
add
add
add
inc
add
add
idiv
(bad)
call
sub
add
push
cmp
and
add
add
push
add
add
fistp
sbb
and
out
(bad)
popa
and
inc
or
add
push
add
add
add
cmp
call
add
add
add
add
add
pop
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
add
or
add
cmp
add
or
add
cmp
and
push
mov
and
mov
xchg
(bad)
(bad)
inc
pop
pop
or
push
add
add
pop
add
or
popf
mov
aad
fld
popa
cmp
inc
add
add
add
push
add
push
or
add
add
cmp
add
or
add
add
cmp
add
and
retf
and
add
mov
push
sbb
or
test
popa
cmp
(bad)
(bad)
inc
push
and
(bad)
jmp
add
add
sub
add
push
cmp
pop
inc
add
add
idiv
(bad)
(bad)
cmp
sldt
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
call
add
xchg
add
add
(bad)
(bad)
call
(bad)
dec
add
jge
(bad)
call
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
cmp
add
mov
add
add
add
add
or
add
push
cmp
or
dec
cmp
int
jle
popa
cmp
or
push
xchg
pop
and
(bad)
push
popa
cmp
(bad)
inc
mov
inc
add
add
and
add
add
cmp
(bad)
jmp
and
cmp
add
add
ja
int3
pop
and
mov
cmp
(bad)
(bad)
inc
add
or
(bad)
(bad)
jmp
or
sub
(bad)
call
idiv
(bad)
jmp
adc
add
cmp
(bad)
(bad)
call
cmp
add
add
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
adc
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
mov
mov
cmp
add
add
retf
cmps
and
(bad)
inc
pop
pop
dec
add
and
add
add
(bad)
jmp
out
cmp
and
add
out
lods
mov
and
dec
jnp
pop
popa
cmp
sub
add
adc
add
add
add
push
and
add
add
push
add
add
inc
or
xchg
mov
les
mov
pop
popa
cmp
add
add
pop
adc
add
add
loopne
add
sub
add
push
cmp
add
and
add
add
int3
add
add
inc
data16
sub
add
adc
pop
adc
add
popf
add
add
add
xor
add
mov
add
add
loopne
add
xchg
(bad)
(bad)
inc
add
add
add
sbb
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
(bad)
(bad)
(bad)
mov
push
add
add
pop
add
add
or
push
pop
add
daa
popa
cmp
(bad)
inc
jnp
add
add
adc
xor
or
add
cmp
add
add
inc
add
add
idiv
(bad)
jmp
pop
add
add
sbb
add
add
add
add
pop
push
inc
push
inc
adc
and
loopne
add
cmp
add
add
adc
and
cmp
xchg
test
rcr
cmp
(bad)
(bad)
inc
jnp
add
add
sbb
icebp
add
add
sldt
add
rol
add
sbb
add
add
(bad)
(bad)
jmp
sbb
add
cmp
int3
mul
and
add
mov
adc
and
call
(bad)
(bad)
call
pop
adc
adc
push
cmp
adc
add
add
xchg
popa
dec
jo
cmp
add
add
mov
and
adc
sub
pop
popa
cmp
pop
pop
sub
or
jg
push
pop
pop
and
lods
idiv
(bad)
call
add
ds
add
and
add
add
cmp
add
rol
and
add
cmp
add
add
or
sub
adc
pop
and
dec
(bad)
(bad)
inc
or
cmp
adc
add
dec
or
dec
add
add
add
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
ds
(bad)
jmp
add
push
add
add
add
add
(bad)
inc
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
(bad)
jmp
add
add
(bad)
call
add
add
add
add
(bad)
(bad)
inc
dec
add
add
and
add
add
addr16
(bad)
jmp
adc
cmp
xchg
std
(bad)
inc
jnp
add
add
add
add
loopne
add
cmp
(bad)
jmp
adc
and
and
jp
sub
imul
call
or
jb
repz
and
test
popa
cmp
(bad)
inc
jnp
add
add
push
cmp
add
and
add
add
or
(bad)
(bad)
cmp
add
add
or
jl
mov
pop
and
sti
mov
std
(bad)
inc
cmp
(bad)
(bad)
jmp
push
add
add
loopne
(bad)
call
add
(bad)
(bad)
jmp
and
add
pop
cmp
(bad)
(bad)
jmp
and
cmp
add
add
jns
jmp
dec
add
mov
cld
(bad)
inc
jnp
add
add
jbe
add
and
add
add
xchg
(bad)
(bad)
call
cmp
add
cmp
or
adc
add
cmp
(bad)
jmp
fs
push
add
add
mov
sbb
cmp
jnp
add
add
push
pop
sub
add
and
add
add
inc
(bad)
(bad)
jmp
je
push
push
cmp
call
add
or
add
add
add
sub
add
push
cmp
add
add
push
jge
add
add
sbb
add
cmp
(bad)
(bad)
call
or
push
pop
add
add
cmp
cld
(bad)
call
add
add
add
xchg
add
add
sbb
and
add
add
fdivr
(bad)
jmp
clc
int3
in
push
and
add
jp
push
dec
and
(bad)
inc
or
and
add
add
mov
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
cmp
or
adc
add
push
cmp
adc
and
jg
mov
or
sti
(bad)
inc
jnp
add
add
adc
or
(bad)
jmp
adc
add
sub
add
push
cmp
(bad)
jmp
add
jecxz
add
and
sbb
add
cmp
(bad)
inc
jnp
add
add
pop
push
inc
push
inc
adc
and
add
add
loopne
add
cmp
std
(bad)
jmp
add
push
jge
add
add
sbb
pop
std
(bad)
call
or
xchg
fnstsw
pop
and
jge
and
inc
sti
(bad)
inc
jnp
add
add
pop
or
xchg
add
push
and
add
cmp
cld
(bad)
jmp
inc
data16
cmp
add
add
int
push
or
(bad)
dec
pop
pop
sub
adc
add
add
add
adc
add
push
and
add
add
js
add
and
or
cmp
add
add
mov
adc
and
cmp
jnp
add
add
jnp
add
add
adc
add
loopne
add
cmp
or
add
sbb
add
add
(bad)
(bad)
jmp
or
add
cmp
jnp
add
add
sub
add
push
and
adc
add
cmp
or
add
imul
push
add
add
mov
cmp
add
and
and
add
add
in
add
and
push
pop
loop
cmp
add
add
mov
(bad)
cdq
and
push
jl
pop
popa
cmp
add
add
jnp
add
add
xchg
add
add
add
xchg
inc
fwait
add
add
add
movs
or
add
or
mov
pop
add
call
jnp
add
add
and
add
add
or
and
and
cmp
add
add
jnp
add
add
adc
pop
pop
pop
xchg
adc
inc
in
(bad)
(bad)
jmp
add
add
push
or
add
add
push
and
add
add
inc
or
add
ins
and
daa
and
add
push
mov
adc
and
popa
cmp
add
push
pop
pop
and
add
and
or
add
sbb
add
(bad)
(bad)
jmp
and
add
pop
cmp
pop
add
es
add
(bad)
(bad)
jmp
or
add
cmp
pop
add
adc
and
ja
stos
pop
and
test
add
add
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
or
add
and
add
add
lods
pop
add
sbb
add
add
idiv
(bad)
jmp
and
add
cmp
or
jno
push
push
pop
and
xor
and
add
add
add
pop
pop
and
mov
add
add
pop
and
pop
add
add
jge
add
and
push
pop
add
and
dec
nop
and
add
inc
addps
and
aad
jmp
mov
add
add
pop
adc
cmp
add
push
cmp
pop
add
and
imul
cmp
add
add
jp
mov
or
adc
popa
cmp
add
add
add
add
pop
pop
and
mov
add
add
pop
and
mov
adc
add
cmp
push
add
adc
and
cmp
imul
popa
cmp
add
add
push
pop
cmp
push
add
and
add
add
mov
add
adc
and
js
mov
call
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
push
(bad)
(bad)
jmp
push
add
add
jnp
add
and
mov
and
add
jno
xor
mov
adc
aas
inc
(bad)
(bad)
jmp
and
add
pop
cmp
add
and
push
add
add
(bad)
fsub
or
cmp
cmp
xchg
add
add
add
add
add
or
pop
add
add
sbb
add
cmp
add
or
add
add
sldt
add
add
add
sbb
add
add
(bad)
(bad)
jmp
add
add
out
add
and
fistp
outs
es
popa
cmp
add
add
add
add
add
popa
add
add
sbb
add
push
cmp
add
inc
add
add
idiv
(bad)
jmp
pop
add
add
scas
add
out
pop
and
sbb
jbe
and
pop
inc
add
add
add
call
add
add
(bad)
(bad)
(bad)
ds
add
loope
(bad)
(bad)
cmp
std
(bad)
inc
add
sar
(bad)
(bad)
jl
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
add
xchg
cld
(bad)
(bad)
in
add
add
(bad)
dec
add
add
add
test
(bad)
(bad)
dec
add
ins
add
add
(bad)
(bad)
jmp
add
add
(bad)
dec
std
(bad)
push
std
(bad)
call
push
add
and
add
add
add
add
and
add
cmp
add
add
mov
int
and
add
movs
ds
adc
(bad)
inc
jnp
add
add
add
add
add
cmp
add
add
(bad)
push
jmp
add
add
sbb
adc
and
sbb
add
(bad)
inc
adc
add
add
add
mov
xchg
add
adc
add
pop
cmp
adc
and
fsubr
ret
xor
pushf
popa
cmp
(bad)
(bad)
inc
jnp
add
add
cli
jle
add
sub
add
push
and
adc
pop
add
add
inc
add
add
idiv
(bad)
jmp
xor
add
cmp
add
sbb
add
add
idiv
(bad)
jmp
sub
add
push
cmp
add
add
pop
cmp
add
add
push
add
add
loope
add
cmp
add
add
adc
mov
cmp
add
add
push
ret
dec
sbb
adc
and
sar
dec
(bad)
(bad)
inc
jnp
add
add
and
add
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
add
cmp
add
add
pushf
push
test
and
add
mul
and
popf
xor
push
(bad)
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
add
pop
and
mov
and
add
cmp
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
push
cmp
add
adc
and
and
cmp
jnp
add
add
pop
pop
and
mov
add
add
pop
and
(bad)
cli
(bad)
jmp
add
add
cmp
add
add
add
add
and
add
add
cmp
add
add
and
in
and
add
jmp
adc
and
jmp
push
std
(bad)
dec
add
(bad)
jg
add
and
inc
add
dec
add
adc
ds
(bad)
jmp
sub
add
sub
add
push
cmp
add
add
adc
and
xchg
(bad)
pop
and
scas
dec
mov
(bad)
inc
sbb
and
add
add
mov
add
sbb
add
add
idiv
(bad)
jmp
add
add
lahf
add
add
or
retf
lds
mov
cmp
cld
(bad)
inc
add
add
add
sbb
add
push
cmp
add
adc
and
and
and
popa
cmp
mov
add
pop
pop
and
mov
add
add
pop
and
pop
std
(bad)
jmp
or
add
cmp
inc
add
add
idiv
(bad)
jmp
or
cmp
add
add
adc
and
and
fimul
(bad)
dec
add
add
add
adc
and
add
add
add
add
and
jge
and
add
out
pop
mov
and
fcomip
loope
pop
popa
cmp
cld
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
add
pop
and
cld
std
(bad)
jmp
sub
add
push
cmp
and
mov
stos
and
add
mov
mov
and
dec
and
jmp
(bad)
inc
jnp
add
add
adc
pop
xchg
adc
cmp
add
add
cmp
add
and
sbb
push
add
add
mov
cli
xor
sti
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
add
pop
and
cmp
jmp
add
loopne
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
daa
add
add
loope
add
cmp
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
push
cmp
and
add
add
loope
add
cmp
add
add
and
imul
add
and
in
and
(bad)
inc
jnp
add
add
and
add
add
retf
add
add
or
mov
and
jge
iret
popa
cmp
sti
(bad)
call
push
push
cmp
stc
(bad)
jmp
sub
add
cmp
inc
add
add
idiv
(bad)
jmp
xor
xchg
add
add
ret
mov
jle
fdivrp
(bad)
inc
jnp
add
add
add
or
add
cmp
add
adc
and
mov
xchg
fldcw
popa
cmp
sbb
and
add
add
push
add
add
jnp
add
add
add
or
cmp
add
push
cmp
add
add
and
cmp
add
add
xor
(bad)
popa
and
(bad)
rol
popa
cmp
(bad)
inc
jnp
add
add
cmp
adc
add
dec
or
dec
add
add
add
idiv
call
idiv
call
(bad)
inc
std
(bad)
push
cli
(bad)
inc
idiv
push
cld
(bad)
inc
(bad)
cld
cmc
(bad)
(bad)
jnp
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
idiv
call
jmp
(bad)
call
sti
(bad)
push
cld
(bad)
push
(bad)
dec
add
add
cli
(bad)
call
std
(bad)
dec
cld
(bad)
jmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
jmp
sti
(bad)
dec
cmc
(bad)
inc
add
add
clc
(bad)
jmp
idiv
dec
(bad)
(bad)
out
std
(bad)
push
std
(bad)
jmp
cld
(bad)
push
sti
(bad)
inc
cli
(bad)
inc
idiv
call
(bad)
call
(bad)
jmp
(bad)
call
stc
(bad)
jmp
cmc
(bad)
inc
std
(bad)
dec
std
(bad)
jmp
sti
(bad)
jmp
clc
(bad)
jmp
(bad)
(bad)
call
add
and
std
(bad)
(bad)
inc
jnp
add
add
add
add
pop
pop
pop
adc
and
add
add
jecxz
(bad)
jmp
mov
stos
shl
add
add
sti
mov
adc
and
cmp
stc
(bad)
dec
adc
add
mov
(bad)
jmp
imul
stc
(bad)
inc
jnp
add
add
inc
inc
sub
adc
add
add
add
adc
add
push
sbb
add
sub
add
and
pop
add
add
adc
add
push
and
add
add
cmp
cmp
add
and
pop
and
sbb
sbb
inc
push
add
add
add
add
add
clc
add
add
add
add
(bad)
(bad)
jmp
add
add
add
pop
add
add
cld
mov
push
add
add
jl
and
and
(bad)
inc
and
jg
add
or
add
pop
add
add
xor
add
pop
cmp
(bad)
(bad)
(bad)
cmp
and
add
add
cmp
add
add
rol
cmp
push
add
add
push
add
dec
add
add
add
(bad)
push
add
add
(bad)
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
add
add
add
(bad)
call
inc
add
add
idiv
(bad)
jmp
loopne
add
sub
add
push
cmp
and
add
add
mov
and
(bad)
ins
pop
and
and
aaa
popa
cmp
(bad)
(bad)
inc
and
add
(bad)
jg
add
push
add
add
add
add
cmp
(bad)
(bad)
cmp
add
add
pop
pop
dec
add
push
cmp
and
add
add
push
(bad)
(bad)
inc
and
and
dec
(bad)
frstor
mov
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
and
add
xchg
pushf
and
add
add
adc
(bad)
jmp
popf
jmp
jmp
add
xor
add
add
adc
add
push
add
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
adc
push
add
add
add
add
adc
add
push
and
add
add
ins
add
add
xchg
add
and
add
add
cmp
add
pop
cmp
add
add
add
add
cmp
add
and
out
and
and
shl
retf
adc
retf
pop
popa
cmp
add
add
jnp
add
add
pop
add
push
and
add
push
and
add
mov
add
and
add
add
cmp
add
push
adc
pop
(bad)
add
add
add
pop
adc
add
pop
pop
pop
bound
add
add
pop
add
add
cmp
add
add
sbb
add
add
idiv
(bad)
jmp
add
mov
inc
add
add
idiv
(bad)
jmp
add
add
cmp
jnp
add
add
add
or
loopne
add
sub
add
push
cmp
(bad)
jmp
and
add
add
jg
add
adc
inc
pop
and
stc
jmp
popa
cmp
pop
pop
or
push
add
add
loopne
add
cmp
add
adc
and
(bad)
faddp
and
add
add
or
sahf
and
add
add
loopne
add
cmp
add
add
adc
cmc
pop
and
mov
shl
add
add
add
add
add
add
add
cmp
(bad)
(bad)
jmp
adc
add
dec
push
add
or
add
add
add
(bad)
(bad)
dec
add
add
(bad)
inc
dec
add
xchg
add
cmp
add
and
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
(bad)
(bad)
call
jmp
add
and
add
hlt
add
add
sldt
add
cmp
cmp
push
cmp
or
add
jge
(bad)
call
add
cmp
inc
jmp
adc
adc
test
popa
cmp
or
add
add
cmp
(bad)
call
add
pop
pop
and
cmp
add
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
and
add
add
cmp
(bad)
(bad)
jmp
and
push
add
add
cmps
movs
aaa
out
and
add
adc
pop
pop
and
addr16
gs
cmp
add
add
jnp
add
add
xchg
adc
or
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
push
or
in
push
sub
popa
and
pop
inc
adc
add
test
(bad)
call
(bad)
call
(bad)
dec
add
(bad)
(bad)
(bad)
js
(bad)
(bad)
jmp
add
add
add
(bad)
push
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
(bad)
fild
add
cs
(bad)
(bad)
mov
or
add
sub
add
push
cmp
jmp
adc
ja
and
into
add
(bad)
(bad)
call
add
cmp
and
ds
(bad)
jmp
rol
add
add
or
jno
and
(bad)
inc
jnp
add
add
push
adc
pop
xchg
sub
add
popf
and
add
push
cmp
(bad)
(bad)
jmp
and
fnstcw
cmp
(bad)
(bad)
dec
pop
pop
or
add
lock
(bad)
jmp
sub
cdq
(bad)
cmp
(bad)
(bad)
dec
add
add
add
cmps
(bad)
(bad)
jmp
adc
add
sub
add
push
cmp
std
(bad)
jmp
adc
sbb
xor
ss
cmp
(bad)
(bad)
call
or
push
add
add
stos
std
(bad)
call
add
cdq
pop
and
or
popa
cmp
(bad)
(bad)
jmp
sbb
add
repnz
add
add
adc
add
push
sub
add
push
and
mov
add
sbb
add
add
(bad)
(bad)
jmp
loope
add
sub
add
push
cmp
add
and
add
add
add
add
mov
add
and
add
sub
add
push
cmp
add
add
pop
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
mov
add
add
mov
(bad)
jmp
and
add
add
cmp
(bad)
(bad)
jmp
push
add
ret
add
push
cmp
add
add
add
les
add
and
add
add
cmp
(bad)
pop
and
and
add
add
loopne
(bad)
inc
add
add
sbb
add
push
sub
and
fld
dec
sbb
enter
fadd
sub
add
adc
add
add
mov
add
add
xor
add
add
add
add
adc
add
push
add
add
add
out
add
and
pop
add
add
jnp
add
add
push
add
add
add
mov
jae
add
push
sub
add
xor
add
add
sub
es
sub
add
push
sub
add
push
cmp
add
and
add
add
cmp
add
add
and
mov
and
add
jns
or
push
and
and
cmp
add
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
xchg
add
push
and
loope
add
cmp
add
add
rol
add
add
add
add
add
push
and
add
add
mov
push
and
and
popf
popa
cmp
add
add
add
add
add
movs
add
add
adc
add
cmp
jns
fwait
cmp
aaa
popa
and
pop
inc
adc
add
mov
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
add
js
add
movs
add
add
add
add
cmp
add
add
push
and
and
shl
cmp
inc
jnp
add
add
add
add
sub
push
and
add
add
hlt
add
add
or
adc
add
sub
add
push
cmp
add
add
cmp
add
adc
cmp
and
retf
add
add
push
and
adc
or
adc
popa
cmp
(bad)
inc
pop
sub
and
add
add
cmps
add
add
and
mov
and
add
cmps
mov
adc
and
mov
pop
popa
cmp
(bad)
(bad)
inc
jnp
add
add
sub
push
and
add
add
loopne
add
cmp
add
or
add
sbb
add
push
add
add
push
add
add
push
and
xchg
imul
rcl
js
cmp
add
ds
(bad)
(bad)
jmp
adc
add
cmp
add
add
push
and
cwde
inc
mov
(bad)
(bad)
inc
or
push
add
push
and
cmp
(bad)
jmp
push
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
jmp
add
add
std
(bad)
call
(bad)
(bad)
(bad)
cmp
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
dec
add
mov
add
add
add
cli
std
(bad)
call
std
(bad)
inc
(bad)
(bad)
jmp
(bad)
dec
add
add
add
add
add
add
sbb
add
cmp
push
and
and
add
and
jecxz
ja
cmp
std
(bad)
call
push
and
dec
sbb
pop
and
add
popa
cmp
std
(bad)
inc
jnp
add
add
xchg
or
pop
add
add
loope
add
cmp
(bad)
jmp
sbb
add
(bad)
(bad)
jmp
or
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
(bad)
and
add
jo
repnz
pop
inc
dec
add
popa
cmp
inc
jnp
add
add
pop
adc
pop
pop
bound
pop
pop
adc
xchg
add
push
and
add
push
cmp
(bad)
(bad)
jmp
pop
inc
add
add
idiv
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
mov
cld
add
cmp
(bad)
call
push
and
and
jp
dec
popa
cmp
std
(bad)
inc
jnp
add
add
sub
push
and
add
add
cmp
mov
add
and
add
add
loopne
add
cmp
adc
and
loopne
pop
pop
and
cmp
cld
(bad)
dec
and
dec
(bad)
(bad)
jmp
add
add
cmp
(bad)
call
cmp
add
and
add
add
dec
(bad)
(bad)
jmp
inc
xor
sub
mov
add
adc
push
add
add
xor
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
push
(bad)
(bad)
jmp
fstp
inc
push
cmp
add
ds
add
sbb
add
cmp
(bad)
(bad)
jmp
ss
push
add
add
aam
pop
push
and
(bad)
inc
jnp
add
add
xchg
and
add
add
and
add
pop
cmp
std
(bad)
jmp
and
mov
cmp
cld
(bad)
inc
pop
pop
or
lahf
(bad)
(bad)
jmp
and
add
add
mov
(bad)
jmp
stos
mov
ret
and
add
xor
adc
and
sub
or
popa
cmp
cld
(bad)
jmp
sbb
pop
add
add
add
add
adc
add
push
and
add
add
xchg
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
ins
add
add
add
sub
add
push
and
add
add
and
push
add
add
or
movs
and
test
and
inc
or
add
and
add
lds
add
xchg
add
scas
add
add
add
add
add
inc
add
add
(bad)
(bad)
call
sub
add
push
cmp
add
and
add
add
repnz
add
shr
push
clc
cmp
sub
add
push
and
add
and
add
add
or
add
mov
nop
mov
inc
sub
add
push
and
sub
add
push
imul
and
add
add
push
add
sub
or
and
add
add
cmp
rol
mov
inc
and
add
add
mov
add
sub
add
sub
add
add
loope
add
cmp
add
cmp
or
add
dec
add
add
adc
nop
cmp
(bad)
(bad)
call
or
pop
fs
daa
pop
and
mov
(bad)
(bad)
dec
inc
push
add
add
(bad)
call
(bad)
jmp
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
ds
(bad)
dec
(bad)
(bad)
dec
add
add
push
add
add
sar
(bad)
jmp
outs
push
jecxz
cmp
rol
add
adc
shl
sbb
inc
xchg
popa
and
inc
add
(bad)
(bad)
(bad)
jns
add
add
add
add
add
add
je
add
adc
add
add
add
add
imul
add
add
imul
add
add
add
add
add
movs
inc
jmp
sbb
add
sar
popf
(bad)
(bad)
inc
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
cmp
add
add
mov
add
and
sub
and
add
mov
xor
(bad)
(bad)
call
push
and
add
add
inc
sub
add
push
and
add
fcomp
adc
cmp
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
push
(bad)
(bad)
jge
(bad)
dec
add
add
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
(bad)
jle
add
add
push
sub
add
push
sub
add
push
cmp
(bad)
jmp
and
add
cmp
or
sub
add
inc
sbb
add
add
add
add
jge
add
retf
add
add
add
add
add
add
xor
add
add
or
add
sub
es
and
add
add
movs
add
add
inc
add
add
idiv
(bad)
jmp
add
add
cmp
jnp
add
add
jnp
add
add
add
add
and
add
add
jbe
add
add
jge
add
add
or
add
cmp
add
and
test
repnz
add
push
add
xchg
add
add
adc
add
cmp
add
and
add
add
push
repnz
add
push
add
add
cmp
add
add
cmp
add
add
add
adc
add
cmp
add
add
cwde
enter
xchg
or
or
or
add
mov
add
add
add
add
add
add
add
jnp
(bad)
call
add
add
add
add
adc
add
cmp
add
add
(bad)
into
and
add
and
sbb
es
and
push
mov
fwait
(bad)
(bad)
inc
add
add
or
add
cmp
mov
add
and
add
add
mov
add
sbb
add
add
idiv
(bad)
jmp
push
add
add
cmp
add
es
jge
add
add
loopne
add
sub
add
push
cmp
add
add
and
cmp
add
and
and
and
add
loopne
adc
and
mov
test
cmp
(bad)
(bad)
jmp
mov
push
and
stc
mov
(bad)
inc
add
jecxz
add
and
add
add
cmp
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
call
(bad)
call
add
pop
add
add
add
add
(bad)
push
(bad)
(bad)
dec
(bad)
call
(bad)
dec
add
add
add
xor
(bad)
call
(bad)
(bad)
jp
(bad)
inc
(bad)
(bad)
(bad)
std
add
add
adc
add
cmp
loop
out
imul
mov
and
xchg
pop
cs
popa
cmp
inc
add
add
add
cmp
(bad)
jmp
add
jnp
add
add
pop
jge
add
add
adc
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
and
add
add
cmp
(bad)
call
cmp
(bad)
(bad)
jmp
or
add
sub
add
push
cmp
(bad)
(bad)
jmp
sbb
add
add
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
and
mov
and
add
and
es
std
(bad)
jmp
movs
add
push
and
in
sbb
pop
and
push
popa
cmp
std
(bad)
inc
add
add
add
xchg
and
add
add
jnp
add
add
pop
pop
bound
push
add
add
add
add
cmp
and
mov
call
std
(bad)
jmp
sbb
add
lds
add
xor
add
sub
es
pop
sub
add
push
cmp
add
and
add
add
pop
add
add
add
add
add
push
and
add
add
add
add
dec
or
dec
add
add
add
add
adc
add
or
add
enter
and
add
and
add
pop
cmp
(bad)
(bad)
jmp
jle
add
add
push
cmp
and
add
add
(bad)
(bad)
(bad)
inc
sub
add
push
and
add
and
add
add
adc
add
or
mov
sub
add
push
or
adc
add
add
mov
add
and
add
add
adc
mov
mov
mov
sbb
inc
push
add
add
(bad)
(bad)
(bad)
jl
add
add
add
add
add
add
add
ja
add
adc
add
add
sbb
add
add
add
add
add
and
das
sar
stos
(bad)
(bad)
call
or
shl
out
pop
and
ins
xchg
popa
cmp
sub
add
push
and
add
and
mov
add
add
retf
test
(bad)
call
push
pop
dec
xchg
and
add
mov
pop
(bad)
(bad)
call
cmp
(bad)
(bad)
dec
sub
add
push
sub
pop
adc
and
clc
bound
cmps
popa
and
inc
push
add
add
add
cmp
add
add
add
add
sar
(bad)
inc
ins
add
add
or
add
add
add
pop
add
add
add
push
add
add
add
add
add
add
inc
cwde
mov
(bad)
call
adc
and
mov
cmp
(bad)
(bad)
inc
sub
add
push
and
add
and
sbb
add
add
jmp
cmp
(bad)
call
or
cmp
and
adc
(bad)
(bad)
call
cmp
sub
add
push
and
add
fcomp
adc
and
cmp
and
and
inc
add
add
add
add
adc
add
add
(bad)
(bad)
(bad)
cmp
add
sbb
or
jae
cmp
cmp
(bad)
(bad)
inc
sub
add
push
cmp
add
add
ins
int3
call
add
sub
cmc
popf
and
(bad)
call
or
add
add
add
add
add
add
add
add
add
add
popf
ror
mov
call
cmp
sub
add
push
sub
or
adc
add
and
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
jne
add
lods
add
add
add
add
add
add
xor
dec
push
add
pop
add
adc
add
push
and
add
add
xor
add
pop
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
push
cmp
add
add
sbb
add
add
(bad)
(bad)
jmp
pop
add
add
add
mov
add
and
add
cmp
add
add
push
and
xchg
jne
and
jg
inc
popa
cmp
push
and
cmp
pop
and
cmp
jp
add
adc
and
add
pop
push
add
or
add
cmp
adc
add
adc
add
push
cmp
push
adc
add
cmp
sbb
add
add
idiv
(bad)
jmp
add
add
cmp
add
adc
and
and
xor
add
add
add
add
or
cmp
add
es
add
add
mov
push
mov
push
pop
sbb
sbb
add
je
add
sbb
add
mov
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
(bad)
push
(bad)
(bad)
jmp
add
add
add
add
add
(bad)
call
add
mov
add
add
(bad)
(bad)
jmp
add
add
enter
and
mul
add
cmp
dec
in
and
(bad)
dec
pop
or
and
add
cmp
cmp
add
add
or
add
cmp
push
and
add
mov
jns
xchg
lods
popa
cmp
(bad)
(bad)
inc
jnp
add
add
add
adc
add
add
add
idiv
(bad)
jmp
push
add
add
push
add
add
push
paddd
add
and
jge
mov
(bad)
(bad)
call
add
add
sub
add
push
cmp
add
add
and
pop
jmp
fdivr
(bad)
inc
jnp
add
add
(bad)
add
add
push
add
add
and
cli
add
add
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
push
cmp
add
add
sbb
and
add
add
loope
add
cmp
add
add
retf
add
out
lahf
mov
add
and
aas
sti
loop
cmp
(bad)
jmp
mov
add
or
push
add
add
mov
inc
add
add
idiv
(bad)
jmp
or
add
cmp
mov
lock
and
add
mov
cmp
add
jnp
add
add
sub
add
and
add
sub
add
push
cmp
add
and
adc
add
add
jge
test
(bad)
(bad)
call
or
sub
add
cmp
add
add
pop
stos
push
push
and
add
jno
cmps
cmp
and
lock
popa
cmp
std
(bad)
call
add
pop
adc
and
add
and
add
add
push
pop
add
or
add
add
add
add
add
add
add
(bad)
(bad)
dec
std
(bad)
jmp
add
add
add
add
add
mov
(bad)
(bad)
call
(bad)
call
cld
(bad)
jmp
add
add
(bad)
jmp
cld
(bad)
dec
add
add
add
mov
(bad)
dec
std
(bad)
inc
add
add
add
enter
lods
add
add
cld
(bad)
call
(bad)
(bad)
inc
(bad)
jmp
add
add
add
add
cld
(bad)
inc
add
add
(bad)
push
std
(bad)
jmp
cld
(bad)
jmp
cld
(bad)
inc
add
and
add
add
cmp
jmp
and
push
and
add
cmps
(bad)
in
pusha
and
cmp
adc
popa
cmp
cld
(bad)
call
push
and
jnp
pop
and
mov
aad
(bad)
dec
cmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
call
push
and
popa
rcr
not
arpl
mov
(bad)
inc
jnp
add
add
adc
and
add
pop
push
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
and
and
test
cld
(bad)
call
and
add
add
stos
(bad)
(bad)
call
idiv
(bad)
(bad)
cmp
(bad)
jmp
and
add
add
cmp
sbb
add
add
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
(bad)
jmp
and
das
dec
shl
add
out
mov
cmp
cld
(bad)
dec
pop
cmp
std
(bad)
jmp
and
add
cmp
(bad)
jmp
lods
(bad)
adc
and
add
cmp
dec
in
and
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
sbb
add
cmp
push
and
pop
mov
ret
and
cmp
sti
(bad)
call
add
pop
adc
loope
add
sub
add
push
cmp
(bad)
jmp
and
add
add
jmp
int3
and
addr16
popa
cmp
jp
add
adc
and
add
pop
push
add
push
add
add
cmp
cmp
jnp
add
add
add
add
add
pop
push
add
sbb
cmp
sbb
and
add
add
js
(bad)
jmp
jne
adc
(bad)
call
add
jnp
add
add
(bad)
(bad)
jmp
and
add
cmp
(bad)
dec
pop
pop
and
sti
(bad)
jmp
adc
add
cmp
(bad)
call
add
pop
cmp
push
or
adc
sub
(bad)
call
idiv
(bad)
jmp
sbb
add
push
cmp
std
(bad)
jmp
and
movs
sbb
(bad)
call
push
and
xchg
jge
and
cmp
jno
cmp
add
add
xor
xor
add
xor
add
sub
es
sub
add
push
or
cmp
inc
add
add
idiv
(bad)
call
sub
add
push
cmp
and
add
add
loopne
add
cmp
add
and
add
call
and
add
add
loopne
(bad)
jmp
add
add
sbb
add
ror
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
call
cmp
mov
(bad)
jmp
and
add
add
ret
(bad)
(bad)
(bad)
cmp
add
add
add
ret
add
push
cmp
add
add
add
les
add
and
mov
(bad)
(bad)
(bad)
fisttp
add
push
cmp
add
sbb
add
add
(bad)
(bad)
jmp
aas
adc
ins
and
or
popa
and
add
add
loopne
(bad)
call
add
add
sbb
add
push
sub
and
sbb
pop
and
cmp
(bad)
(bad)
(bad)
fadd
sub
add
add
add
add
or
xlat
loope
dec
add
add
adc
push
add
or
add
sub
es
and
add
inc
or
add
inc
add
add
idiv
(bad)
jmp
dec
add
add
sub
or
or
add
push
xchg
push
bound
add
adc
add
and
jl
and
add
cmc
fimul
and
add
adc
and
icebp
add
add
add
out
add
adc
and
and
stos
ds
popa
cmp
add
pop
adc
pop
adc
xchg
sahf
and
ret
add
push
and
push
std
ins
jne
popa
cmp
add
pop
adc
adc
sahf
and
add
add
loope
add
cmp
xchg
or
add
fisttp
(bad)
pop
cmp
add
add
push
and
and
nop
mov
popa
cmp
add
add
and
push
and
add
add
loope
add
cmp
add
cmp
add
sbb
add
add
idiv
(bad)
jmp
or
add
push
cmp
add
and
inc
cmp
add
add
adc
aas
mov
push
add
add
sub
add
and
cmp
pop
and
add
movs
add
imul
add
or
cmp
add
cmp
or
add
ss
add
add
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
and
add
add
cmp
or
add
sbb
add
add
(bad)
(bad)
jmp
inc
add
add
leave
or
add
jecxz
cs
cmp
add
or
aas
mov
(bad)
jmp
push
add
add
scas
or
add
push
and
and
cmp
add
add
push
and
jg
pop
and
in
loopne
popa
cmp
add
add
push
and
and
repnz
popa
cmp
add
add
jnp
add
add
add
adc
add
loope
add
cmp
add
adc
and
cmc
push
pop
and
sbb
fld
add
pop
adc
adc
pop
sub
add
push
cmp
add
add
and
add
sub
add
push
cmp
or
add
and
mov
add
push
sub
or
js
add
and
add
pop
cmp
or
add
adc
and
or
pop
and
lods
pop
popa
cmp
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
add
and
add
cmp
pop
add
and
pop
add
add
push
and
and
ret
test
cmp
add
pop
or
pop
and
and
add
add
loopne
add
cmp
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
add
push
cmp
add
and
imul
cmp
add
add
adc
pop
or
add
add
push
add
add
pusha
pop
add
sbb
pop
sbb
add
or
sbb
add
sub
add
push
cmp
add
cmp
add
adc
and
and
cs
popa
cmp
add
add
adc
pop
adc
xchg
sahf
and
add
add
cmp
pop
add
adc
and
cdq
adc
popa
popa
cmp
or
adc
add
sub
add
push
cmp
push
add
and
aad
cmp
jl
add
adc
pop
adc
sub
add
cmp
push
add
adc
and
and
sar
cmp
add
add
or
jnp
add
and
add
cmp
inc
add
add
idiv
(bad)
jmp
pop
add
add
popf
push
add
and
ss
cmp
add
add
sbb
cmp
add
adc
add
and
add
add
je
add
sbb
add
add
(bad)
(bad)
jmp
dec
add
add
pusha
push
add
or
ds
add
and
add
add
loopne
add
cmp
add
adc
sbb
or
sahf
and
add
xor
pop
adc
and
add
cmp
push
add
and
sti
dec
add
cmp
add
add
mov
adc
and
test
and
popa
cmp
or
or
add
hlt
add
dec
jno
and
add
sahf
fxam
mov
and
jge
pop
popa
cmp
add
push
adc
and
add
add
mov
or
adc
inc
add
add
mov
add
pop
adc
and
add
add
cmp
adc
and
clc
shl
outs
popa
cmp
add
add
jnp
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
add
xor
add
cmp
add
and
push
and
mov
cmp
adc
pop
inc
pop
inc
inc
add
add
(bad)
dec
std
(bad)
call
push
add
cmps
cli
(bad)
jmp
add
add
sti
(bad)
(bad)
inc
add
add
add
xor
add
rol
add
jns
add
add
add
add
add
add
add
cli
(bad)
jmp
(bad)
(bad)
inc
cld
(bad)
(bad)
cmp
add
add
add
add
add
movs
cld
(bad)
call
(bad)
inc
(bad)
(bad)
(bad)
aas
push
add
or
add
pop
add
cmp
(bad)
dec
sti
(bad)
jmp
add
add
add
rol
add
push
add
add
adc
add
dec
std
(bad)
(bad)
jmp
add
sub
(bad)
push
add
add
(bad)
jmp
sti
(bad)
dec
cld
(bad)
call
add
add
add
add
(bad)
inc
(bad)
call
sti
(bad)
inc
push
add
dec
pop
add
stos
pop
add
mov
add
add
cli
(bad)
call
cli
(bad)
jmp
inc
add
add
dec
add
add
pop
loop
outs
and
add
adc
adc
and
(bad)
call
or
sete
inc
add
pop
adc
adc
and
add
add
mov
adc
add
or
add
xchg
cld
xlat
push
and
add
retf
mov
dec
and
(bad)
call
adc
sbb
cmp
add
add
and
adc
and
add
jb
out
das
and
(bad)
inc
push
xchg
adc
and
add
add
mov
inc
add
add
idiv
(bad)
jmp
and
cmp
adc
sbb
or
and
add
add
cmp
adc
sbb
adc
setle
add
add
std
test
and
add
test
cmp
(bad)
(bad)
call
add
add
sub
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
and
add
cmp
add
adc
and
(bad)
mov
in
popf
jle
cmp
std
(bad)
call
adc
pop
adc
and
add
add
and
add
adc
and
and
das
addr16
popa
cmp
adc
jb
add
and
add
cmp
add
add
cmp
push
add
and
add
cmp
add
add
push
push
mov
and
add
test
cmp
cmp
(bad)
call
adc
and
add
add
loope
add
cmp
add
add
adc
and
and
(bad)
push
popa
cmp
(bad)
inc
adc
pop
adc
xchg
sahf
and
add
add
loope
add
cmp
adc
and
mov
or
ss
push
cmp
std
(bad)
call
or
add
jbe
add
sbb
add
add
(bad)
(bad)
jmp
add
add
bound
add
cmp
add
adc
adc
cmp
add
adc
and
and
(bad)
popa
cmp
cld
(bad)
call
push
push
cmp
and
add
add
sub
add
and
icebp
cmps
and
mov
(bad)
call
or
adc
or
sete
or
adc
pop
adc
adc
sahf
and
add
cmp
add
add
adc
and
add
add
out
add
add
push
and
xchg
cvtps2pd
lds
fisub
jb
(bad)
call
adc
add
iret
add
add
push
and
fs
pop
and
pop
or
push
cld
(bad)
call
or
and
add
cmp
jp
add
pop
add
push
and
dec
add
add
xchg
add
add
adc
adc
daa
add
add
test
add
pop
push
xchg
adc
or
add
cmp
add
adc
and
jae
retf
sub
cmp
sti
(bad)
call
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
ds
(bad)
jmp
sub
add
cmp
add
nop
sub
push
add
add
aas
sahf
mov
push
and
push
jae
pop
popa
cmp
add
and
add
add
pop
add
add
push
and
dec
inc
push
pop
and
xor
call
pop
adc
and
add
add
hlt
add
add
adc
pop
pop
pop
adc
and
add
add
loop
add
adc
and
in
int3
pop
and
outs
outs
mov
cmp
(bad)
call
adc
cmp
idiv
jmp
push
add
add
mov
push
and
mov
enter
popa
cmp
(bad)
inc
adc
pop
adc
xchg
sahf
and
add
add
cmp
and
pop
cmp
cmp
add
add
xchg
and
pop
and
cmp
cmp
(bad)
call
adc
adc
inc
add
add
push
inc
add
add
idiv
(bad)
jmp
cmp
add
cmp
add
push
pop
inc
dec
cmp
cli
(bad)
call
adc
pop
pop
pop
adc
and
cmp
add
and
fcom
cmp
add
add
push
pop
add
adc
and
lods
add
(bad)
inc
adc
enter
and
add
push
pop
add
or
add
add
add
(bad)
inc
idiv
call
(bad)
jmp
sti
(bad)
inc
idiv
call
(bad)
jmp
clc
(bad)
jmp
std
(bad)
dec
(bad)
jmp
(bad)
dec
add
add
clc
(bad)
push
idiv
call
add
add
(bad)
inc
std
(bad)
(bad)
(bad)
cli
(bad)
(bad)
jl
(bad)
(bad)
mov
idiv
jmp
idiv
call
(bad)
dec
(bad)
jmp
stc
(bad)
dec
add
add
cmc
(bad)
(bad)
fdivp
(bad)
(bad)
jle
add
stos
cld
(bad)
push
cli
(bad)
push
cld
(bad)
(bad)
fdivr
(bad)
call
(bad)
(bad)
push
clc
(bad)
inc
add
addr16
dec
cmc
(bad)
call
(bad)
push
(bad)
(bad)
aas
(bad)
(bad)
jmp
add
add
hlt
(bad)
call
std
(bad)
(bad)
cmp
add
lahf
cmc
(bad)
inc
hlt
(bad)
jmp
std
(bad)
dec
(bad)
(bad)
jmp
inc
std
(bad)
(bad)
jg
(bad)
jmp
add
add
push
cli
(bad)
jmp
(bad)
inc
(bad)
(bad)
jp
(bad)
push
add
add
sti
(bad)
call
(bad)
jmp
sti
(bad)
jmp
(bad)
inc
(bad)
(bad)
sti
cld
(bad)
(bad)
cmp
(bad)
(bad)
fdecstp
(bad)
(bad)
jp
add
adc
(bad)
dec
clc
(bad)
call
cld
(bad)
(bad)
mov
add
add
or
add
cmp
inc
pushf
js
and
add
xor
cmp
(bad)
call
or
pop
sub
or
push
add
add
cmp
(bad)
jmp
and
jge
and
add
sbb
adc
and
mov
les
cmp
clc
(bad)
call
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
cmp
and
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
and
mov
pop
and
xor
(bad)
call
or
adc
add
cmp
cmp
clc
(bad)
call
push
and
shl
sub
popa
cmp
(bad)
call
push
and
call
and
clc
(bad)
call
add
cmp
cli
(bad)
jmp
or
ret
std
(bad)
call
push
and
test
dec
push
popa
cmp
(bad)
call
adc
pop
or
adc
sbb
add
cmp
cs
add
mov
and
cmp
clc
(bad)
inc
adc
pop
adc
xchg
sahf
and
add
add
cmp
(bad)
jmp
rcl
and
add
add
popa
std
(bad)
jmp
test
lahf
pop
cmp
idiv
call
push
and
shl
push
xor
popa
cmp
idiv
dec
sbb
outs
add
add
sub
loope
add
cmp
std
(bad)
jmp
or
or
adc
add
cmp
std
(bad)
call
push
and
and
cmp
or
pop
add
add
add
rol
push
and
add
dec
add
add
cmp
cld
(bad)
jmp
and
retf
and
add
mov
jge
and
(bad)
call
cmp
pop
pop
and
int
add
push
idiv
call
push
and
nop
pop
and
(bad)
ins
shl
inc
idiv
call
or
adc
pop
pop
pop
adc
and
add
add
xchg
cld
(bad)
call
push
and
popf
icebp
dec
pop
and
loopne
cmp
idiv
inc
adc
adc
sahf
and
add
cmp
(bad)
call
push
and
jge
pop
and
cmc
idiv
jmp
add
add
xor
add
or
add
sub
es
and
add
cmp
or
arpl
add
retf
cmp
add
add
(bad)
add
add
inc
add
add
mov
add
add
jnp
add
add
pop
jge
add
add
or
add
pop
cmp
add
es
add
add
idiv
(bad)
jmp
inc
add
add
pop
add
add
cmp
or
add
or
add
cmp
add
xchg
add
push
and
add
cmp
add
adc
inc
sub
or
rcr
das
call
add
add
mov
add
jnp
add
add
and
adc
add
and
add
add
add
add
adc
or
retf
push
push
clc
popa
cmp
or
add
xchg
add
add
or
sldt
add
fld
add
sbb
add
add
idiv
(bad)
jmp
sub
add
cmp
add
add
or
jg
and
xor
add
add
mov
add
ins
or
add
sbb
add
cmp
jnp
add
add
and
add
cmp
inc
add
add
idiv
(bad)
jmp
sub
add
cmp
add
mov
cmp
add
add
jle
mov
or
pop
pop
popa
cmp
or
add
mov
add
pop
and
add
add
dec
add
add
cmp
dec
iret
and
add
adc
or
add
add
xchg
add
lods
add
add
inc
add
add
sbb
inc
add
add
idiv
(bad)
jmp
xor
add
cmp
add
add
or
or
xchg
add
push
and
add
sub
add
push
cmp
add
add
and
jg
leave
cmp
jnp
add
add
ds
or
add
push
add
add
loope
add
cmp
add
add
adc
sbb
enter
popa
cmp
pop
and
or
add
and
add
cmp
or
cs
and
mov
popa
cmp
add
xchg
add
push
add
add
add
jns
add
and
js
and
add
push
pop
and
and
add
add
mov
add
jnp
add
add
or
add
dec
add
add
mov
add
push
add
add
push
add
and
add
add
xor
add
and
pop
cmc
and
add
int3
and
es
or
add
jge
add
add
add
add
and
add
dec
push
add
or
add
add
add
add
add
add
add
pusha
or
add
add
inc
add
add
add
adc
(bad)
call
(bad)
jmp
add
(bad)
(bad)
call
(bad)
call
add
add
(bad)
inc
std
(bad)
jmp
std
(bad)
(bad)
cmp
add
xor
(bad)
dec
add
jno
add
push
add
add
add
add
xchg
add
add
add
cld
add
add
call
add
add
loopne
add
adc
cld
(bad)
call
add
add
pop
add
add
jns
add
add
add
pop
add
sub
(bad)
(bad)
mov
cld
(bad)
jmp
std
(bad)
jmp
add
add
add
add
cld
(bad)
dec
add
add
add
add
pop
add
jae
(bad)
inc
sti
(bad)
jmp
add
add
add
add
(bad)
push
add
(bad)
(bad)
call
(bad)
push
add
add
add
add
add
pop
add
iret
push
add
inc
push
add
rol
add
lods
add
add
dec
add
add
add
add
std
(bad)
jmp
add
sbb
(bad)
(bad)
inc
add
sbb
add
movs
or
add
dec
add
add
cdq
(bad)
(bad)
call
add
(bad)
(bad)
jmp
sbb
add
cmp
mov
cmp
add
add
mov
adc
stos
pop
popa
cmp
or
add
mov
add
xchg
add
add
dec
add
add
push
(bad)
(bad)
jmp
and
shl
add
leave
test
test
add
add
jnp
add
add
mov
add
sub
add
push
cmp
add
and
add
add
loope
add
cmp
(bad)
(bad)
(bad)
cmp
or
sub
push
scas
popa
cmp
pop
add
or
pop
or
add
in
std
(bad)
call
or
in
pop
and
hlt
shl
scas
pop
add
add
lods
add
add
adc
add
cmp
std
(bad)
jmp
xor
adc
and
add
and
pop
pop
and
dec
(bad)
call
jg
add
add
xchg
add
add
add
add
xchg
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
aaa
add
add
cmp
call
or
lea
pop
mov
popa
cmp
add
add
mov
add
jnp
add
add
adc
sbb
add
pop
cmp
(bad)
jmp
adc
gs
and
cmp
pop
add
add
mov
add
push
and
add
cmp
std
(bad)
call
or
xchg
pop
and
cmp
push
add
add
xchg
add
movs
cld
(bad)
jmp
pop
add
add
cmp
std
(bad)
jmp
and
inc
sub
add
add
adc
clc
pop
popa
cmp
cmp
add
add
cmp
add
pop
cmp
cld
(bad)
jmp
and
inc
repz
cmp
add
add
mov
cmp
jnp
add
add
pop
and
jle
add
and
add
add
mov
ror
and
add
push
inc
hlt
lods
and
add
adc
adc
sub
and
add
loopne
add
cmp
(bad)
jmp
adc
add
retf
xor
add
adc
push
adc
add
add
push
and
add
cmp
call
inc
add
add
idiv
(bad)
jmp
adc
xor
(bad)
jmp
fs
inc
and
add
jg
xor
and
push
fild
pop
popa
cmp
add
xchg
add
xchg
cli
(bad)
jmp
inc
add
add
sti
sti
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
cmp
sti
(bad)
jmp
sbb
add
add
(bad)
(bad)
jmp
add
add
loope
add
cmp
sti
(bad)
(bad)
cmp
sti
(bad)
call
add
(bad)
(bad)
jmp
dec
add
add
mov
(bad)
call
or
into
pop
and
xor
add
add
xchg
add
add
or
inc
add
add
mov
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
add
add
cmp
(bad)
jmp
and
lock
and
add
enter
and
cmp
push
mov
cmp
add
adc
and
nop
pop
icebp
movs
popa
cmp
add
jl
add
and
xor
(bad)
jmp
fild
push
add
add
push
mul
push
and
(bad)
jecxz
sbb
call
sub
add
and
add
add
add
(bad)
(bad)
cmp
push
add
add
xchg
add
add
or
dec
add
add
jmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
add
add
xlat
cli
(bad)
call
inc
add
add
idiv
(bad)
jmp
xor
add
cmp
cli
(bad)
inc
mov
add
aas
js
(bad)
jmp
adc
add
cmp
or
and
pop
sysret
jno
cmp
add
add
jl
add
or
or
add
sub
add
push
cmp
or
push
pop
and
sub
add
add
mov
add
push
and
add
add
pop
cli
(bad)
call
or
adc
cmp
mov
popa
cmp
add
add
add
pop
jge
add
add
cmp
cmp
cli
(bad)
jmp
and
mov
add
add
jecxz
jbe
and
mov
repnz
popa
cmp
add
add
mov
add
push
add
add
stc
(bad)
jmp
adc
add
cmp
stc
(bad)
call
or
xor
xor
jle
cmp
pop
jge
add
add
xor
sar
(bad)
jmp
mov
and
add
cwde
out
std
and
add
add
mov
add
cli
inc
add
add
add
dec
add
add
mov
test
outs
add
add
sub
cmp
and
add
push
cmp
(bad)
jmp
add
mov
add
jnp
add
add
pop
xchg
and
add
add
or
sbb
add
cmp
(bad)
inc
add
pop
jge
add
add
adc
add
cmp
(bad)
inc
mov
add
aas
jno
(bad)
jmp
cmp
add
cmp
stc
(bad)
inc
sbb
and
add
add
and
(bad)
call
or
mov
and
pop
xchg
popa
cmp
add
add
test
add
and
add
add
loope
add
cmp
clc
(bad)
jmp
adc
lods
pop
and
cmp
jnp
add
add
pop
and
sar
(bad)
call
inc
add
add
idiv
(bad)
jmp
inc
add
add
loope
add
cmp
add
jge
add
add
cmp
add
cmp
jg
jp
and
add
lods
mov
adc
and
cmp
add
add
mov
add
jnp
add
add
pop
xchg
and
add
add
or
cmp
add
sub
add
push
cmp
(bad)
jmp
adc
retf
pop
and
cmp
add
add
xchg
add
inc
cmp
add
add
adc
jnp
add
add
add
add
sub
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
cmp
clc
(bad)
call
idiv
(bad)
jmp
sub
add
(bad)
inc
add
pop
jge
add
add
add
add
cmp
idiv
inc
mov
add
pop
push
pop
adc
and
add
add
aam
(bad)
jmp
pop
cmps
add
and
add
aas
xor
xchg
add
add
add
pop
jge
add
add
push
add
add
movs
idiv
jmp
outs
inc
aaa
mov
cmp
add
add
clc
and
and
add
add
jge
add
add
sub
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
dec
add
add
imul
add
add
idiv
(bad)
jmp
or
add
pop
cmp
jmp
and
cwde
push
mov
add
sub
or
jmp
popa
cmp
add
add
xchg
add
add
je
add
add
add
add
inc
cmp
clc
(bad)
jmp
cmp
add
sub
add
push
cmp
idiv
jmp
and
movs
in
cmp
add
add
or
cmp
stc
push
popa
cmp
add
add
cmp
push
sti
(bad)
jmp
and
add
add
xlat
idiv
call
or
adc
sub
add
and
add
add
shl
jmp
jmp
add
add
shr
adc
adc
or
cmp
add
add
jnp
add
add
pop
jge
add
add
add
add
cmp
xchg
or
and
add
and
inc
inc
xor
mov
popa
cmp
add
add
adc
adc
adc
add
push
and
push
idiv
dec
cmp
(bad)
jmp
xor
add
cmp
(bad)
inc
jge
add
add
push
add
add
das
idiv
jmp
ins
stos
dec
(bad)
and
fs
and
pop
inc
xor
add
pop
repz
(bad)
(bad)
(bad)
jmp
(bad)
push
add
add
(bad)
call
hlt
(bad)
inc
sti
(bad)
jmp
repz
push
clc
(bad)
push
repz
call
sti
(bad)
dec
clc
(bad)
call
clc
(bad)
inc
std
(bad)
call
(bad)
(bad)
dec
cli
(bad)
(bad)
(bad)
(bad)
push
idiv
jmp
(bad)
push
clc
(bad)
inc
(bad)
call
(bad)
(bad)
push
sti
(bad)
(bad)
aas
cld
(bad)
push
call
(bad)
dec
(bad)
call
(bad)
(bad)
inc
cld
(bad)
push
stc
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
add
mov
idiv
call
(bad)
(bad)
cmp
hlt
(bad)
(bad)
jmp
(bad)
inc
clc
(bad)
(bad)
cmp
(bad)
call
cmc
(bad)
jmp
add
add
inc
cmc
(bad)
inc
add
pop
jge
add
add
pop
add
add
cmp
cmc
(bad)
jmp
adc
dec
pop
and
cmp
(bad)
(bad)
inc
xchg
add
cmp
clc
(bad)
jmp
adc
add
pop
cmp
hlt
(bad)
jmp
adc
sbb
imul
into
popa
cmp
(bad)
(bad)
call
sub
add
xor
rol
add
aaa
add
adc
add
push
and
add
add
inc
add
add
cmp
add
add
add
add
cmp
add
add
and
test
imul
popa
cmp
add
add
cmp
add
and
add
add
sgdtd
add
jne
mov
add
add
inc
call
or
out
xor
add
add
add
xchg
add
push
and
add
add
fild
add
rcl
and
add
add
retf
add
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
and
loopne
add
cmp
sub
or
add
cmp
pop
add
add
mov
add
jnp
add
add
add
add
add
push
or
push
rcl
cmp
add
add
nop
add
add
xchg
add
add
inc
cmp
(bad)
jmp
add
add
pop
cmp
add
sbb
add
add
(bad)
(bad)
jmp
or
add
sub
add
push
cmp
add
add
and
inc
add
xor
and
push
add
add
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
(bad)
jl
(bad)
call
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
cld
(bad)
(bad)
inc
(bad)
(bad)
(bad)
in
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
call
add
add
(bad)
(bad)
push
add
add
or
add
sub
add
push
cmp
add
cs
(bad)
call
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
loope
add
cmp
xchg
(bad)
(bad)
dec
and
icebp
fistp
pushf
not
popa
cmp
(bad)
inc
sub
add
xor
add
add
adc
add
push
and
add
push
cmp
push
and
into
pop
and
ds
sbb
add
add
pop
maxps
add
push
and
xchg
add
add
xor
sahf
dec
and
add
push
pop
adc
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
inc
add
add
idiv
(bad)
jmp
sbb
add
cmp
add
sbb
add
add
idiv
(bad)
(bad)
cmp
add
and
add
dec
pop
add
or
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
(bad)
(bad)
inc
add
push
add
add
add
add
add
add
(bad)
jmp
add
add
add
add
add
dec
add
add
add
add
add
or
add
adc
add
push
add
add
(bad)
(bad)
jmp
add
mov
add
or
add
and
add
add
cmp
adc
cmp
(bad)
(bad)
inc
pop
pop
maxps
add
push
and
add
add
cmp
(bad)
jmp
and
enter
add
add
push
or
add
add
cmp
inc
push
aas
inc
add
add
or
add
cmp
(bad)
(bad)
jmp
sub
push
and
call
add
add
push
pop
or
xchg
or
pop
add
add
adc
(bad)
inc
pop
maxps
add
loopne
add
cmp
(bad)
(bad)
jmp
adc
and
call
addr16
and
pop
mov
pop
(bad)
(bad)
inc
sbb
adc
and
retf
pop
and
cmp
(bad)
inc
adc
lahf
add
push
and
add
add
mov
popf
sub
push
add
add
mov
out
adc
and
popa
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
loope
add
cmp
add
pop
maxps
add
push
and
add
add
jno
(bad)
inc
sbb
adc
and
mov
pop
and
cmp
std
(bad)
inc
jnp
add
add
xchg
and
(bad)
(bad)
jmp
adc
add
cmp
(bad)
inc
jnp
add
add
push
pop
or
xchg
or
or
add
cmp
(bad)
(bad)
call
cmp
loope
add
sub
add
push
cmp
add
and
add
add
loope
add
cmp
(bad)
(bad)
jmp
and
ss
add
dec
mov
adc
and
fimul
push
std
(bad)
inc
pop
maxps
add
add
or
add
cmp
std
(bad)
jmp
cs
imul
cmp
add
add
lea
in
and
movs
in
or
cmp
std
(bad)
call
push
cmp
std
(bad)
inc
sbb
adc
and
and
cmp
cld
(bad)
inc
sbb
or
adc
add
cmp
(bad)
jmp
cmp
mov
and
add
inc
mov
mov
and
ret
ret
pop
pop
popa
cmp
cld
(bad)
inc
jnp
add
add
add
or
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
add
cmp
mov
cmp
add
add
(bad)
jns
hlt
and
mov
adc
pop
popa
cmp
pop
pop
maxps
add
push
and
add
add
add
(bad)
inc
pop
or
lahf
add
push
and
aas
push
(bad)
(bad)
jmp
add
add
pop
cmp
cld
(bad)
jmp
rcl
and
add
add
sar
(bad)
inc
pop
maxps
add
push
(bad)
(bad)
jmp
or
cmp
cmp
add
add
sub
es
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
xchg
cld
(bad)
inc
jnp
add
add
xchg
or
adc
add
push
cmp
pop
sbb
adc
and
nop
pop
fcomp
or
popa
inc
popa
cmp
sti
(bad)
call
push
add
add
and
add
sub
es
and
add
cmp
add
add
push
repnz
add
add
pop
jge
add
add
push
add
add
mov
add
rcl
push
add
add
cmps
add
add
and
aad
pop
and
cmp
jnp
add
add
jnp
add
add
add
sub
adc
jbe
add
and
cmp
add
add
mov
mov
and
pop
in
pop
popa
cmp
add
add
add
pop
jge
add
add
pop
add
add
aas
add
add
inc
add
add
idiv
(bad)
jmp
add
sub
add
or
nop
push
ror
pop
and
in
or
and
add
add
add
add
xor
add
and
add
add
add
add
and
mov
cmp
add
add
(bad)
jmp
pop
add
add
call
dec
add
add
push
jge
add
add
add
add
pop
cmp
add
add
sbb
add
add
(bad)
(bad)
jmp
or
add
cmp
inc
imul
and
sbb
add
add
add
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
push
add
add
or
add
cmp
add
inc
add
add
idiv
(bad)
jmp
push
add
add
loope
add
cmp
add
cmp
add
push
or
add
add
cmp
add
or
xor
inc
arpl
popa
cmp
add
push
pop
pop
or
or
cmp
add
add
and
jb
fnstcw
das
add
add
jnp
add
add
jnp
add
add
pop
pop
cmp
js
add
and
add
dec
add
dec
add
add
add
add
cli
add
add
std
(bad)
(bad)
cmp
add
add
add
add
(bad)
(bad)
call
(bad)
jmp
add
add
add
or
add
fs
(bad)
(bad)
jmp
add
add
std
(bad)
jmp
add
mov
(bad)
(bad)
push
(bad)
(bad)
dec
add
sar
(bad)
(bad)
jg
add
adc
(bad)
jmp
add
add
add
add
cmp
and
and
add
sub
cmp
add
pop
dec
add
and
add
add
cmp
(bad)
jmp
pop
cmp
std
(bad)
jmp
add
add
cmp
(bad)
inc
and
add
fs
add
add
sub
add
push
cmp
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
cmp
std
(bad)
jmp
and
add
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
xor
sbb
aam
and
inc
adc
add
jns
(bad)
(bad)
mov
std
(bad)
jmp
add
add
cld
(bad)
inc
(bad)
(bad)
dec
(bad)
call
(bad)
jmp
std
(bad)
call
add
rol
add
cmps
add
add
add
or
(bad)
jmp
add
add
or
add
cmp
in
mov
and
add
fsubr
or
mov
dec
pop
popa
cmp
(bad)
inc
add
pop
pop
dec
add
add
add
add
pushf
and
add
add
pop
(bad)
(bad)
dec
and
xchg
cld
repnz
and
xchg
fldenv
push
(bad)
(bad)
inc
sub
and
push
aaa
pop
and
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
or
adc
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
cmp
add
add
or
ins
mov
lea
cmp
(bad)
(bad)
inc
jmp
adc
add
pop
cmp
std
(bad)
jmp
and
push
add
add
fwait
aas
xor
(bad)
(bad)
dec
and
mov
bnd
popa
cmp
(bad)
(bad)
inc
(bad)
jmp
sbb
add
cmp
push
aad
cmp
mov
cmp
add
add
add
add
adc
add
push
and
add
cmp
add
add
add
add
jnp
add
add
popf
pop
sub
add
push
cmp
and
add
add
push
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
and
xor
add
and
lds
ins
popa
and
add
add
loopne
(bad)
dec
add
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
jmp
add
add
or
add
and
add
add
iret
(bad)
(bad)
(bad)
cmp
add
add
jnp
add
add
jp
add
(bad)
add
add
pop
push
add
push
add
add
mov
and
and
(bad)
(bad)
popa
cmp
(bad)
inc
jnp
add
add
add
add
add
inc
sub
add
xor
add
add
add
add
adc
add
push
and
add
add
xchg
add
add
jnp
add
add
adc
adc
or
add
cmp
add
fnsave
mov
cmp
add
add
push
ja
iret
and
cmp
loop
popa
cmp
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
cmp
add
add
and
add
aad
popa
dec
popa
cmp
add
add
and
add
pop
jge
add
add
jp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
add
out
add
add
add
inc
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
pop
pop
bound
xchg
add
add
add
add
cmp
xchg
add
push
and
add
add
test
(bad)
call
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
outs
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
cmp
(bad)
dec
and
and
cmp
adc
cmp
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
and
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
cli
xor
push
and
gs
bound
or
pop
inc
push
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
sub
add
push
cmp
(bad)
jmp
and
add
add
aam
(bad)
inc
and
add
adc
xchg
add
add
add
mov
sub
add
add
add
adc
add
add
add
add
cmp
and
out
jb
and
inc
popa
cmp
(bad)
jmp
add
xor
add
add
adc
add
push
sub
add
fld
add
add
fld
add
add
add
add
adc
add
add
or
add
sub
add
adc
add
rol
add
add
adc
add
push
sub
add
push
sub
add
push
cmp
add
add
and
add
add
loope
add
cmp
add
add
cwde
add
push
and
add
add
jae
add
sbb
add
add
(bad)
(bad)
jmp
pop
add
add
loopne
add
cmp
add
es
and
and
cmp
sbb
and
add
cmp
add
add
and
add
add
add
add
or
add
push
cmp
add
add
and
push
add
add
or
inc
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
xchg
(bad)
(bad)
jmp
add
add
(bad)
dec
(bad)
(bad)
call
add
add
xchg
add
add
and
add
add
loope
add
cmp
and
xchg
jge
and
or
add
cmp
(bad)
jmp
(bad)
call
add
adc
(bad)
(bad)
jmp
add
add
add
add
sub
add
push
cmp
(bad)
jmp
cmp
add
and
pop
and
cmp
out
(bad)
(bad)
movs
(bad)
(bad)
inc
pop
arpl
or
add
or
add
cmp
(bad)
call
cmp
push
add
add
xor
(bad)
jmp
xchg
(bad)
mov
cmp
(bad)
inc
push
cmp
add
add
add
add
cmp
(bad)
(bad)
jmp
inc
push
push
add
add
(bad)
sar
and
(bad)
inc
and
loope
mov
(bad)
hlt
mov
(bad)
(bad)
inc
add
adc
add
adc
add
add
add
sub
es
add
jge
add
add
push
jge
add
add
add
xor
mov
add
adc
add
push
and
add
cmp
add
add
sub
add
sub
add
push
sub
add
push
cmp
add
and
add
add
xor
add
and
and
cmp
inc
popa
and
add
add
push
add
inc
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
or
add
and
add
add
sar
(bad)
(bad)
cmp
add
add
add
adc
push
add
push
and
mov
and
shr
mov
and
sbb
popa
cmp
(bad)
jmp
add
adc
push
add
add
add
add
adc
add
push
and
add
add
adc
add
sbb
add
add
(bad)
(bad)
jmp
or
add
push
cmp
add
add
add
push
add
add
ds
add
and
add
add
out
add
and
sbb
jnp
popa
and
pop
add
add
add
jge
add
cmp
add
adc
add
xchg
add
add
(bad)
(bad)
jmp
add
cmp
add
and
add
add
cmps
add
add
fwait
add
push
es
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
mov
add
pop
cmp
add
add
cmp
add
and
add
dec
add
and
add
add
loopne
add
cmp
add
and
mov
inc
and
jg
add
push
add
add
or
add
push
cmp
add
add
cmp
add
add
movs
add
push
and
hlt
mov
push
jae
push
popa
cmp
(bad)
(bad)
inc
add
add
dec
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
push
add
add
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
add
popa
add
add
add
add
cmp
push
scas
(bad)
xchg
and
add
cmp
es
(bad)
(bad)
inc
add
add
add
mov
or
add
cmp
and
and
fimul
(bad)
(bad)
inc
and
add
cmp
and
add
add
data16
(bad)
inc
and
ret
push
pop
and
loop
jne
cmp
(bad)
jmp
add
add
xor
adc
add
add
add
sub
es
add
add
or
jge
add
add
adc
add
add
add
adc
add
push
add
push
and
add
jge
add
add
add
add
xor
add
add
adc
add
push
and
add
add
into
add
add
add
idiv
(bad)
jmp
sbb
add
cmp
inc
add
add
idiv
(bad)
jmp
sub
add
cmp
movs
xor
add
add
add
add
jnp
add
add
add
push
and
add
add
add
sbb
mov
add
add
add
neg
cld
leave
mov
add
add
and
add
pop
jge
add
add
push
add
add
inc
add
bound
and
add
push
sahf
cmp
cmp
add
add
jge
add
add
or
sbb
inc
pop
ja
sub
add
add
add
add
xchg
jge
add
add
or
add
sub
add
push
cmp
add
add
and
adc
add
add
sti
pop
cmp
add
scas
pop
popa
cmp
add
add
add
inc
pop
and
js
dec
popa
cmp
add
add
sub
add
sbb
iret
stos
out
cmp
add
add
sub
add
and
aam
mov
popa
cmp
jnp
add
add
add
add
add
cmp
(bad)
loope
shl
add
ss
adc
jo
popa
cmp
push
jge
add
add
and
add
cmp
add
push
fdiv
and
add
dec
dec
pop
add
add
and
add
add
add
add
and
add
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
add
cmp
add
adc
loopne
and
fisttp
cmp
add
or
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
jmp
sub
and
push
mov
add
and
add
aaa
(bad)
(bad)
jmp
add
jl
add
int
add
inc
add
lods
std
(bad)
inc
add
(bad)
dec
add
fild
add
or
(bad)
(bad)
in
std
(bad)
call
add
xchg
(bad)
inc
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
mov
(bad)
push
call
add
add
add
add
add
repnz
add
add
mov
add
inc
add
add
sbb
(bad)
(bad)
aas
add
add
sbb
add
add
jnp
add
add
jno
add
and
add
add
cmp
adc
add
pop
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
or
push
add
add
out
add
add
cmp
(bad)
jmp
sbb
add
push
cmp
add
add
sbb
add
add
(bad)
(bad)
jmp
sub
add
pop
cmp
add
add
and
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
and
add
cmp
aas
xchg
add
push
add
add
xchg
add
add
add
or
pusha
cdq
push
pop
popa
cmp
jnp
add
add
jnp
add
add
xchg
add
push
and
add
add
loope
add
cmp
add
add
add
add
jnp
add
add
lahf
add
push
and
add
add
add
add
sahf
add
push
and
add
add
add
add
jle
add
add
and
add
add
jge
add
add
adc
add
cmp
add
add
imul
and
jbe
and
(bad)
inc
jnp
add
add
jnp
add
add
add
push
and
add
cmp
add
add
add
std
pop
and
push
push
popa
cmp
std
(bad)
inc
and
add
add
add
add
push
add
add
mov
add
and
sub
dec
cmp
std
(bad)
inc
jnp
add
add
jnp
add
add
xchg
add
push
and
(bad)
call
push
add
add
sub
add
cmp
mov
pusha
dec
cmp
jnp
add
add
cmp
and
add
add
cmp
add
cmp
add
sub
add
sub
and
cmp
call
sub
add
sti
pop
and
cmp
(bad)
inc
sbb
add
loope
add
sub
add
push
cmp
std
(bad)
jmp
and
add
add
adc
add
and
sahf
ins
push
cmp
jge
add
add
adc
add
pop
cmp
add
add
adc
aad
and
cmp
cld
(bad)
inc
pop
or
add
add
sub
add
cmp
add
add
out
jns
sub
loop
(bad)
inc
pop
or
add
add
adc
add
cmp
sub
ins
repz
add
mov
jge
and
add
cmovs
cmp
push
cmp
add
add
pop
add
add
test
add
and
pusha
dec
cmp
add
mov
cmp
jnp
add
add
jnp
add
add
jnp
add
add
push
add
and
add
add
dec
add
add
sub
add
mov
in
jbe
cmp
(bad)
inc
jnp
add
add
ds
(bad)
jmp
add
add
and
add
push
pop
pop
and
add
cmp
cli
(bad)
(bad)
cmp
cli
(bad)
jmp
daa
add
add
push
push
add
or
add
add
add
cld
(bad)
call
cli
(bad)
inc
stc
(bad)
push
(bad)
call
(bad)
dec
cld
(bad)
(bad)
jns
(bad)
push
sti
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
(bad)
inc
(bad)
inc
std
(bad)
inc
stc
(bad)
inc
(bad)
(bad)
call
(bad)
jmp
add
add
add
add
std
(bad)
push
(bad)
dec
std
(bad)
push
(bad)
call
std
(bad)
jmp
std
(bad)
jmp
cli
(bad)
call
add
sti
(bad)
call
add
add
(bad)
(bad)
push
cli
(bad)
dec
cld
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
cmp
add
js
add
and
sldt
add
cmp
(bad)
jmp
and
cmp
add
add
outs
cmp
cmp
sti
(bad)
inc
jle
add
add
xchg
jge
add
add
adc
or
inc
add
add
idiv
(bad)
jmp
adc
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
push
pop
and
gs
cmp
cli
(bad)
inc
adc
dec
add
add
pop
add
add
iret
(bad)
(bad)
jmp
adc
test
add
and
sahf
jno
and
pop
add
pop
popa
cmp
cli
(bad)
inc
push
cmp
stc
(bad)
jmp
or
add
cmp
pop
push
mov
cmp
jnp
add
add
sub
add
and
jle
(bad)
inc
jnp
add
add
jnp
add
add
lahf
add
push
and
add
add
pusha
(bad)
(bad)
jmp
jno
fwait
sub
jno
(bad)
call
sub
add
(bad)
pop
and
leave
(bad)
pop
cli
(bad)
inc
jle
add
add
and
add
add
jge
add
add
sbb
add
pop
cmp
(bad)
(bad)
jmp
and
cmp
add
add
arpl
mov
and
cmp
cmp
sub
xor
add
add
add
add
adc
add
push
and
add
add
cmp
add
add
cmp
add
add
and
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
push
add
add
or
add
pop
cmp
sbb
add
add
idiv
(bad)
jmp
pop
add
add
mov
int
icebp
cmp
add
adc
jp
int3
pop
and
lods
lea
popa
cmp
add
add
add
adc
push
add
add
add
add
cmp
add
or
shl
pop
outs
pop
and
lock
cmp
add
add
jnp
add
add
jnp
add
add
out
add
add
add
add
cmp
add
add
fidivr
and
and
push
add
add
(bad)
(bad)
(bad)
jp
(bad)
call
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
adc
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
add
sub
(bad)
jmp
add
add
add
and
add
add
sar
call
lahf
add
push
cmp
(bad)
jmp
and
add
add
stos
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
cmp
jnp
add
add
cmp
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
jne
(bad)
call
cmp
(bad)
(bad)
jmp
or
add
cmp
(bad)
jmp
dec
cwde
mov
add
add
or
or
mov
popa
cmp
jnp
add
add
pop
add
pop
pop
bound
pop
push
imul
push
add
add
adc
add
push
and
add
add
xchg
add
or
push
add
add
cmp
adc
push
sub
popa
cmp
add
adc
sbb
or
or
add
cmp
add
cmp
add
add
add
iret
add
push
push
ds
or
add
daa
add
add
cmp
add
adc
mov
fisttp
cmp
add
add
add
sub
add
push
and
out
add
and
add
add
adc
add
adc
gs
and
jae
sbb
fiadd
add
push
adc
add
loopne
add
cmp
add
add
adc
pushf
pop
and
sub
popa
cmp
jnp
add
add
iret
add
push
and
add
and
add
add
mov
iret
in
arpl
add
and
xor
and
mov
popa
cmp
add
adc
pop
jp
rol
add
and
push
inc
adc
add
add
add
pop
sub
add
push
and
add
or
adc
add
sub
add
push
cmp
add
and
xor
out
cmp
add
add
fadd
mov
cmp
add
add
adc
call
and
add
and
add
add
sub
add
and
adc
(bad)
mov
pop
pop
pop
inc
pop
add
add
add
inc
add
add
(bad)
(bad)
dec
(bad)
inc
add
add
(bad)
(bad)
(bad)
js
add
mov
add
push
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
(bad)
(bad)
mov
add
add
add
add
add
mov
(bad)
jmp
add
and
mov
add
sbb
add
(bad)
(bad)
jmp
push
add
add
pushf
add
add
inc
add
add
idiv
(bad)
jmp
add
add
cmp
adc
pop
pop
and
cmp
(bad)
call
adc
xchg
pop
and
cmp
(bad)
call
adc
stos
pop
and
cmp
(bad)
(bad)
jmp
retf
push
and
cmp
add
retf
add
push
sub
add
push
and
add
add
cmp
add
add
adc
or
pop
sub
add
push
adc
and
add
cmp
add
add
add
(bad)
(bad)
jmp
sbb
add
cmp
add
add
adc
and
add
add
loope
add
cmp
add
add
adc
adc
pop
pop
sub
add
push
and
and
add
cmp
add
add
fadd
mov
cmp
add
add
xchg
cmp
pop
or
adc
add
imul
add
and
lahf
add
add
jb
cmp
cmp
(bad)
call
pop
sbb
pop
and
add
add
test
add
jle
add
or
add
or
add
cmp
add
add
(bad)
(bad)
jmp
adc
add
cmp
add
sbb
add
add
(bad)
(bad)
jmp
push
add
add
dec
add
add
cmp
into
cmp
(bad)
(bad)
call
adc
cmp
sti
dec
dec
push
popa
cmp
(bad)
(bad)
call
add
iret
add
push
and
(bad)
jmp
sbb
add
cmp
add
add
idiv
(bad)
jmp
sbb
add
cmp
add
add
push
mov
and
sub
sub
adc
adc
pop
sub
adc
sub
add
push
and
loope
add
cmp
add
and
add
add
retf
add
add
(bad)
adc
and
and
lods
scas
movs
and
(bad)
call
add
sub
add
push
and
add
add
lahf
add
add
add
sub
add
push
sub
add
push
and
add
push
cmp
push
adc
and
add
add
jns
add
pop
cmp
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
add
adc
mov
cmp
popa
cmp
std
(bad)
(bad)
jle
add
add
adc
aam
add
and
add
add
cmp
add
add
and
adc
in
and
add
adc
out
and
(bad)
call
add
pop
sub
add
push
and
sbb
or
add
and
es
cmp
cld
(bad)
call
adc
mov
and
(bad)
call
or
sub
add
imul
(bad)
jmp
sldt
add
rol
add
sbb
add
(bad)
(bad)
jmp
add
add
push
cmp
adc
mov
and
mov
popa
cmp
adc
pop
pop
call
add
loopne
add
cmp
and
lods
mov
add
add
popf
test
cmp
(bad)
dec
adc
pop
pop
call
jmp
and
add
add
bound
add
adc
pop
je
rol
add
and
push
inc
adc
and
add
add
cmp
add
and
sbb
push
add
add
call
adc
cli
pop
popa
cmp
sti
(bad)
dec
adc
call
and
(bad)
(bad)
cmp
(bad)
(bad)
jmp
pop
add
add
push
pop
add
or
add
add
add
cli
(bad)
dec
add
add
cld
(bad)
(bad)
fdivrp
(bad)
inc
(bad)
(bad)
dec
(bad)
call
stc
(bad)
call
(bad)
call
cld
(bad)
dec
(bad)
inc
(bad)
call
cld
(bad)
jmp
(bad)
inc
(bad)
call
std
(bad)
push
std
(bad)
jmp
std
(bad)
jmp
(bad)
(bad)
push
stc
(bad)
jmp
(bad)
(bad)
(bad)
mov
cli
(bad)
inc
std
(bad)
jmp
cld
(bad)
inc
(bad)
jmp
(bad)
call
(bad)
dec
sti
(bad)
push
(bad)
(bad)
call
stc
(bad)
push
cld
(bad)
jmp
sti
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
add
add
add
add
dec
(bad)
(bad)
call
mov
and
cmp
cmp
add
add
add
or
add
sbb
add
add
(bad)
(bad)
jmp
(bad)
xchg
mov
ficom
adc
or
add
ret
call
add
add
add
add
add
mov
add
js
add
add
add
add
add
cmp
add
add
add
add
das
mov
push
add
add
scas
push
inc
adc
loop
add
(bad)
jmp
stos
add
push
and
aad
add
and
or
add
add
sti
push
pop
mov
js
(bad)
(bad)
fld
adc
lahf
pop
and
xchg
popa
cmp
(bad)
(bad)
jle
add
add
push
and
(bad)
(bad)
call
or
or
lods
add
push
adc
and
test
cmp
(bad)
(bad)
call
or
push
and
adc
adc
lock
retf
cmp
(bad)
(bad)
call
or
scas
add
push
imul
out
add
and
adc
inc
pop
and
or
jmp
cmp
add
add
aas
add
or
adc
xchg
pop
and
dec
pop
pop
popa
cmp
(bad)
(bad)
call
push
cmp
add
add
or
push
adc
fst
add
add
pop
adc
fisttp
add
add
pop
adc
fld
add
add
push
cmp
add
sbb
add
add
(bad)
(bad)
jmp
das
cmps
inc
loope
add
add
sub
add
push
and
fadd
add
and
add
dec
add
add
adc
jge
and
or
cmp
add
adc
sub
add
push
and
or
add
cmp
add
add
adc
or
jecxz
add
and
add
push
cmp
add
and
push
push
add
or
add
add
add
add
das
add
add
add
jns
(bad)
inc
add
add
add
add
add
fadd
add
mov
(bad)
(bad)
jmp
add
and
add
add
loope
add
cmp
mov
(bad)
call
adc
and
and
cmp
adc
fild
add
cmp
add
add
sub
add
push
cmp
add
and
add
cmp
(bad)
jmp
xchg
in
(bad)
add
mov
adc
cmp
cmp
add
adc
adc
sub
add
and
add
add
and
add
add
cmp
(bad)
jmp
sbb
add
add
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
cmp
add
add
adc
sub
add
and
add
add
cmp
(bad)
(bad)
jmp
adc
out
and
fcmovnbe
aam
cmp
add
add
adc
mov
add
and
add
add
jmp
(bad)
jmp
outs
aad
sti
and
xchg
(bad)
mov
push
pop
inc
or
add
retf
(bad)
(bad)
(bad)
jnp
(bad)
dec
(bad)
(bad)
push
add
add
add
pop
(bad)
(bad)
call
(bad)
(bad)
jmp
pop
add
add
lods
(bad)
(bad)
call
movaps
add
push
and
add
add
cwde
(bad)
(bad)
call
adc
lea
fild
lahf
(bad)
(bad)
call
movlps
jnp
add
add
jns
(bad)
das
sub
es
add
push
adc
and
add
cmp
(bad)
call
adc
push
pop
and
cmp
(bad)
call
adc
fiadd
add
and
push
add
add
fld
add
add
add
add
add
push
outs
inc
add
or
push
adc
and
ficom
adc
add
add
(bad)
(bad)
inc
add
add
sbb
add
frstor
add
add
adc
jl
and
enter
cmp
(bad)
(bad)
(bad)
fisttp
add
add
adc
fild
add
fcom
adc
sub
inc
add
add
add
mov
add
add
add
pop
add
or
add
xor
add
add
add
mov
add
add
add
pop
add
or
add
xor
add
add
add
test
add
das
or
add
add
add
add
add
add
daa
add
add
add
add
add
add
xor
add
add
adc
add
push
and
add
add
nop
add
add
and
and
cmp
(bad)
popa
cmp
add
add
jnp
add
add
add
add
add
or
add
add
sub
add
push
cmp
add
es
and
and
mov
jle
cmp
and
add
pop
jge
add
add
add
xor
add
sbb
add
add
(bad)
(bad)
jmp
add
add
cmp
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
xchg
(bad)
jmp
add
or
add
mov
add
jae
add
inc
add
add
add
fadd
add
call
add
add
add
add
dec
add
add
add
add
(bad)
call
add
dec
(bad)
(bad)
(bad)
fadd
add
adc
(bad)
dec
or
add
cmp
cmp
add
add
push
add
add
loope
add
cmp
(bad)
(bad)
(bad)
cmp
add
sub
add
and
add
add
push
(bad)
jmp
cmc
das
fimul
add
jge
pusha
int
es
and
scas
lods
pop
popa
cmp
sub
add
and
add
add
cmp
(bad)
jmp
inc
push
mov
add
add
inc
in
adc
cmp
add
add
add
add
jnp
add
add
adc
add
add
cmp
(bad)
(bad)
jmp
lahf
jl
xor
add
mov
es
and
mov
pop
popa
cmp
add
add
add
add
add
jnp
add
add
cmp
cmp
and
add
add
(bad)
(bad)
(bad)
jmp
cmp
sub
and
inc
or
(bad)
(bad)
push
(bad)
(bad)
inc
add
add
(bad)
dec
add
rol
add
(bad)
(bad)
call
add
js
add
pusha
add
add
(bad)
push
add
add
cmp
inc
and
add
pop
jge
add
add
adc
add
sub
add
push
cmp
(bad)
jmp
shl
and
add
add
cmp
(bad)
jmp
sbb
add
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
inc
and
and
retf
stc
popa
cmp
inc
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
or
add
cmp
std
(bad)
inc
and
xchg
cmp
adc
sbb
(bad)
inc
jnp
add
add
cmp
add
add
add
add
cmp
std
(bad)
jmp
xchg
and
(bad)
inc
jnp
add
add
push
add
add
jge
(bad)
jmp
loope
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
xchg
std
(bad)
jmp
retf
adc
cmp
add
add
adc
cmp
and
add
pop
jge
add
add
sldt
add
loope
add
cmp
(bad)
jmp
add
add
add
cli
inc
add
xchg
(bad)
(bad)
jmp
adc
add
sub
add
push
cmp
std
(bad)
(bad)
cmp
std
(bad)
jmp
dec
sbb
cmp
(bad)
inc
jnp
add
add
jnp
add
add
or
adc
sbb
(bad)
inc
and
shl
inc
mov
push
popa
cmp
jmp
add
add
xor
add
add
add
add
adc
add
push
add
add
add
out
add
or
jnp
add
add
push
push
add
add
add
mov
jae
add
push
sub
adc
push
add
add
add
add
adc
add
push
add
add
push
add
push
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
add
or
add
add
add
sub
es
jae
add
or
add
adc
add
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
add
sbb
add
sub
adc
add
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
sub
add
push
and
add
or
add
add
add
sub
es
sub
add
sub
add
xor
add
add
add
add
adc
add
push
add
add
or
add
xor
add
add
adc
add
push
add
add
sub
sub
xor
add
add
adc
add
push
add
push
add
push
and
add
xor
add
add
adc
add
push
add
call
sub
add
adc
add
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
add
add
sub
add
push
sub
add
xor
add
add
add
add
adc
add
push
add
hlt
add
push
sub
adc
add
or
add
add
add
sub
es
add
test
push
sub
adc
add
or
add
adc
add
push
add
and
add
and
add
xor
or
add
adc
add
push
add
add
inc
add
or
add
add
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
add
push
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
adc
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
add
and
add
sub
adc
add
or
add
adc
add
push
add
and
add
and
add
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
add
add
sub
es
sub
add
and
add
or
add
add
add
sub
es
add
sub
adc
add
push
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
add
sub
add
and
add
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
add
add
sub
es
jae
add
or
add
adc
add
sldt
add
add
adc
add
push
add
add
sub
add
and
xor
sldt
add
add
adc
add
push
add
add
sub
add
and
xor
or
add
adc
add
push
add
add
inc
add
or
add
add
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
add
or
add
add
add
sub
es
jae
add
or
add
adc
add
or
add
add
add
sub
es
jae
add
or
add
adc
add
or
add
adc
add
push
add
sub
add
and
add
xor
add
add
add
add
sub
es
sub
add
push
and
add
push
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
add
add
sub
es
add
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
or
add
add
add
sub
es
add
xor
add
sub
adc
add
push
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
push
add
add
add
adc
add
push
add
sub
add
push
and
adc
add
sldt
add
add
adc
add
push
add
add
xor
add
and
xor
add
add
add
add
adc
add
push
add
sub
add
and
adc
add
or
add
add
add
sub
es
add
xor
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
add
aaa
add
push
and
add
xor
add
add
add
add
adc
add
push
sub
add
push
sub
add
xor
sldt
add
add
adc
add
push
add
add
cmp
add
and
xor
add
add
adc
add
push
add
cmp
add
and
add
xor
sldt
add
add
adc
add
push
add
add
cmp
add
and
xor
add
add
add
add
adc
add
push
add
cmp
add
sub
adc
add
or
add
adc
add
push
add
cmp
sub
add
adc
add
add
add
adc
add
push
add
add
sub
add
push
sub
add
xor
add
add
add
add
adc
add
push
add
add
push
sub
adc
add
or
add
add
add
sub
es
add
aas
add
push
sub
sbb
add
push
pop
sub
sbb
add
push
push
sub
cmp
add
push
dec
add
outs
or
add
sub
es
add
or
add
pop
add
push
sub
sub
es
add
or
add
inc
add
push
sub
sub
es
add
inc
add
push
sub
sub
es
add
or
add
jne
add
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
dec
add
outs
dec
add
or
add
add
push
dec
add
dec
add
outs
dec
add
or
add
add
push
dec
add
dec
add
dec
add
dec
add
outs
adc
add
sub
sub
es
add
dec
add
or
cmp
add
push
dec
add
outs
daa
add
push
sub
sub
es
add
pop
add
or
dec
sub
es
dec
add
dec
add
outs
dec
add
or
add
sub
es
dec
add
outs
add
push
sub
pop
sub
es
dec
add
dec
add
dec
add
outs
dec
add
or
add
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
or
dec
sub
es
add
or
add
or
add
dec
add
or
push
add
push
dec
add
dec
add
dec
add
dec
add
outs
dec
add
or
add
sub
es
dec
add
outs
sbb
add
sub
cmp
add
push
dec
add
outs
push
add
or
add
sub
es
dec
add
outs
push
add
or
add
sub
es
dec
add
outs
adc
add
sub
cmp
add
push
dec
add
outs
push
add
or
add
add
push
add
or
add
or
add
ins
add
push
sub
add
push
add
or
add
or
add
xchg
add
push
sub
sub
es
add
or
add
push
add
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
add
or
add
add
push
sub
sub
es
add
or
add
imul
sub
es
add
or
add
popa
add
push
sub
sub
es
add
or
add
add
push
sub
sub
es
add
or
add
push
add
push
sub
sub
es
dec
add
outs
or
add
sub
sub
es
add
or
add
bound
add
sub
sub
es
add
or
add
push
add
sub
sub
es
add
or
add
add
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
add
or
add
pop
add
push
sub
add
push
add
or
add
or
add
or
add
mov
sub
es
add
or
add
inc
add
push
sub
sub
es
add
or
add
pusha
add
push
sub
sub
es
add
or
add
push
sub
es
add
or
add
inc
add
push
sub
sub
es
add
or
add
push
add
push
sub
sub
es
add
or
add
pop
add
push
sub
sub
es
add
or
add
inc
add
push
sub
sub
es
add
or
add
pop
add
push
sub
sub
es
add
or
add
dec
add
push
sub
sub
es
add
or
add
inc
add
push
sub
sub
es
add
or
add
inc
add
push
sub
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
sub
add
push
dec
add
dec
add
outs
push
add
or
add
add
push
dec
add
dec
add
sub
add
sub
sub
es
add
or
add
add
add
sub
add
push
dec
add
dec
add
outs
push
add
or
add
sub
es
add
push
add
or
sub
es
add
pop
add
or
push
add
push
dec
add
dec
add
dec
add
dec
add
outs
or
add
sub
cmp
add
push
dec
add
outs
or
add
sub
dec
sub
es
add
or
add
or
add
or
add
sub
sub
es
dec
add
outs
or
add
add
push
dec
add
dec
add
outs
pop
add
or
add
sub
es
dec
add
outs
pop
add
or
add
sub
es
dec
add
outs
pop
add
or
add
sub
es
add
pop
add
or
dec
sub
es
dec
add
dec
add
outs
pop
add
or
add
add
push
dec
add
dec
add
outs
pop
add
or
add
add
push
dec
add
dec
add
outs
pop
add
or
add
sub
es
dec
add
outs
pop
add
or
add
add
push
add
or
add
or
add
pusha
add
or
pop
sub
es
dec
add
dec
add
dec
add
outs
popa
add
or
add
add
push
dec
add
dec
add
dec
add
outs
bound
add
sub
cmp
add
push
dec
add
outs
arpl
add
sub
sub
es
add
or
add
add
or
dec
sub
es
dec
add
dec
add
outs
xor
add
sub
dec
sub
es
add
or
add
or
add
push
add
push
sub
sub
es
dec
add
outs
xor
add
sub
dec
sub
es
dec
add
dec
add
outs
add
or
add
add
push
dec
add
dec
add
outs
data16
or
add
add
push
dec
add
dec
add
dec
add
outs
add
or
add
add
push
dec
add
dec
add
outs
xor
add
sub
sub
es
add
or
add
push
dec
sub
es
dec
add
dec
add
outs
imul
sub
es
add
or
add
push
add
sub
sub
es
add
imul
or
pop
sub
es
add
or
add
or
add
or
add
ins
add
or
sub
es
add
or
add
ins
add
or
pop
sub
es
add
or
add
or
add
or
add
push
add
push
sub
sub
es
add
or
add
outs
add
or
sub
es
add
or
add
outs
add
or
sub
es
add
or
add
jo
add
sub
sub
es
add
or
add
jno
add
sub
sub
es
add
es
rcr
add
add
add
sub
es
add
add
sub
sub
es
add
sub
sub
es
add
add
sub
sub
es
add
add
add
sub
es
add
add
add
sub
add
push
rcl
add
add
add
sub
es
add
add
sub
sub
es
add
add
sub
sub
es
add
sub
sub
es
add
es
add
sub
sub
es
add
add
sbb
sub
es
add
add
add
sub
es
add
add
add
sub
es
add
add
sub
sub
es
add
sub
add
sub
add
dec
sub
es
add
or
add
or
add
jb
add
sub
sub
es
pop
sub
sbb
add
push
push
sub
sub
es
add
add
sub
sub
es
add
add
sub
sub
es
add
add
pop
add
push
sub
add
add
push
add
or
add
or
add
or
add
jae
add
sub
sub
es
pop
sub
sbb
add
push
push
sub
sub
es
add
sub
sub
es
add
add
sub
sub
es
add
es
add
sub
sub
es
add
add
sub
sub
es
add
add
add
sub
es
add
add
sub
sub
es
add
sub
sub
es
rcl
add
add
add
sub
es
add
es
add
add
sbb
sub
es
add
add
add
sub
es
add
add
add
sub
es
add
add
sub
sub
es
add
es
add
sub
sub
es
rcr
add
add
add
sub
es
add
sub
add
sub
add
dec
sub
es
add
or
add
or
add
je
add
sub
sub
es
pop
sub
sbb
add
push
push
sub
xor
add
push
add
sub
add
sub
add
dec
sub
es
add
or
add
or
add
jne
add
sub
sub
es
pop
sub
sbb
add
push
push
sub
sub
add
push
ror
add
add
add
sub
es
add
add
sub
add
jge
cdq
mov
mov
xchg
mov
icebp
enter
push
(bad)
mov
xchg
adc
scas
sbb
test
fstp
dec
dec
js
es
and
xchg
loopne
jecxz
xchg
mov
repnz
mov
and
mov
jmp
sahf
pop
sub
mov
dec
push
or
mov
outs
and
mov
xor
jne
out
test
test
cmp
in
and
sti
sub
xchg
inc
(bad)
push
sbb
cmp
test
and
mov
or
dec
push
cmp
sbb
imul
fmul
inc
or
or
js
sbb
jo
sub
cmps
mov
pop
fisub
enter
xor
pusha
jmp
hlt
mov
xchg
outs
jp
xor
retf
pop
(bad)
dec
xchg
mov
dec
xchg
fbstp
xor
xchg
hlt
jmp
retf
xchg
cmp
arpl
lds
cmp
cdq
ss
cmp
cmp
out
and
lds
adc
and
loop
push
mov
mov
pop
je
xor
jnp
(bad)
jecxz
retf
xor
js
dec
or
jno
imul
lea
(bad)
iretw
mov
cmps
stos
pop
dec
pop
adc
mov
lods
pop
sahf
jne
pushf
mov
xor
xchg
cmp
dec
inc
in
ss
repnz
jge
sub
or
pop
jg
mov
iret
repz
ror
fild
mov
cmp
add
adc
mov
adc
sbb
in
add
mov
add
mov
stos
clc
ins
inc
ror
or
stc
inc
jmp
sbb
push
mov
xchg
cmp
and
cmc
(bad)
das
xchg
push
sbb
enter
mov
dec
sbb
mov
mov
sbb
pushf
pop
pop
adc
gs
xor
call
adc
pop
pop
sub
(bad)
ret
arpl
ret
xor
shr
sbb
cwde
mov
in
cmps
ret
fwait
mov
and
dec
sub
mov
cld
cli
daa
mov
(bad)
mov
xor
add
mov
mov
scas
into
xchg
mov
jecxz
dec
fstp
mov
xchg
xor
jne
mov
fldenv
xor
sub
cdq
addr16
nop
ins
sti
jg
loopne
xor
mov
mov
xor
mov
xor
int
mov
push
pop
sbb
(bad)
imul
push
test
inc
pop
call
sbb
fimul
imul
push
add
adc
cmp
into
ds
movs
mov
sub
lahf
mov
adc
in
out
pop
stc
aas
into
jo
outs
int3
mov
adc
sti
add
lods
int
into
mov
inc
pop
addr16
mov
test
fimul
test
ins
inc
pop
jg
repz
xor
add
or
or
inc
sub
call
imul
jbe
mov
fidiv
call
sub
jns
shl
fiadd
xchg
addr16
jle
pop
push
inc
mov
cdq
and
mov
cwde
jl
fidivr
jg
test
out
fld
jo
test
in
mov
inc
sub
pushf
add
repnz
loope
rol
jbe
add
xor
sbb
push
sbb
sub
lods
inc
mov
and
je
push
jge
jmp
inc
mov
not
ss
ror
not
push
push
xchg
add
pop
mov
lods
xor
test
push
pop
xlat
sub
bound
mov
jbe
sbb
cmp
sahf
mov
addr16
cmp
out
cmp
mov
adc
mov
fucom
lods
jmp
outs
lahf
pop
mov
push
fwait
mov
add
popa
xchg
jb
cwde
pop
inc
and
aaa
aaa
xlat
and
sub
push
cmp
imul
call
das
fild
xor
in
in
inc
jo
cmp
dec
aaa
mov
add
pop
mov
push
aam
or
aas
mov
mov
rol
pop
mov
jno
leave
scas
pop
inc
xchg
inc
pop
adc
scas
inc
push
mov
cmp
xchg
shr
sub
mov
push
cmp
sbb
sar
mov
pop
in
fucomip
in
inc
sbb
ror
mov
dec
dec
test
dec
fmul
icebp
push
xchg
jb
popa
mov
pop
jno
mov
cmc
sti
in
cwde
out
dec
ret
xor
fcmove
je
mov
das
dec
pop
test
jle
fs
out
push
loopne
mov
icebp
in
sub
dec
in
call
pop
int3
inc
xchg
sbb
cmps
lds
mov
test
push
sbb
push
fxch
(bad)
in
add
loope
sub
cmp
fisttp
aaa
sar
push
xor
into
fstp
mov
xlat
sbb
jno
push
mov
aam
cmp
sub
(bad)
lea
aad
nop
cmps
dec
ret
pushf
lods
aam
jne
push
cs
(bad)
mov
mov
pop
in
cmp
and
mov
jmp
sub
xchg
cmps
xchg
daa
mov
mov
jle
call
cmovb
mov
sbb
jns
cmp
mov
(bad)
sub
mov
cdq
(bad)
movs
and
les
cmps
mov
lock
xlat
ret
fidiv
inc
jg
sub
std
xchg
mov
sub
mov
adc
sbb
and
test
pop
gs
loop
dec
xor
inc
adc
ss
aad
mov
and
inc
in
je
mov
je
push
ja
(bad)
add
and
(bad)
lahf
or
pop
xchg
stc
sbb
sar
cmc
data16
loope
pop
fcomp
imul
fisub
push
mov
push
loope
imul
stc
or
cmps
jae
adc
sbb
call
leave
in
adc
dec
leave
or
mov
clc
shl
jmp
std
dec
in
xor
call
inc
or
sbb
loopne
ins
push
daa
jge
push
cld
cli
or
add
mov
fldenv
mov
and
dec
sti
sti
fisttp
fst
call
push
sahf
movs
cmp
cmp
xchg
add
mov
dec
(bad)
fneni(8087
int3
(bad)
aam
push
out
test
adc
ja
mov
push
outs
stc
add
ret
jb
pop
outs
clc
fist
test
retf
sbb
mov
sbb
mov
push
sub
cmp
mov
gs
imul
mov
test
fld
nop
pop
enter
out
push
add
shl
mov
aam
push
adc
idiv
or
fst
mov
adc
xlat
dec
jl
out
xor
dec
popf
push
mov
sahf
cmp
into
cwde
aam
pop
xor
xchg
out
mov
and
data16
cdq
add
les
(bad)
out
repz
jecxz
cs
daa
ret
xor
out
and
push
loop
add
inc
and
imul
sahf
push
jnp
ret
mov
mov
push
fwait
aam
aad
mov
cmovnp
leave
shr
cmp
(bad)
js
xor
push
mov
ficom
inc
outs
add
leave
cmps
gs
ret
jnp
adc
ud1
inc
xchg
mov
mov
adc
data16
(bad)
pusha
pop
neg
pop
pop
movs
ins
test
dec
loopne
stc
xlat
cmp
retf
pop
and
popf
dec
gs
push
fyl2xp1
xchg
sub
mov
add
out
jl
xchg
push
jnp
jae
cmps
mov
repnz
adc
lods
mov
fwait
int3
je
movs
test
leave
dec
push
xchg
or
loopne
push
ret
cmp
xlat
repz
inc
sub
mov
add
stc
and
cli
in
xor
cmp
(bad)
jo
ss
pusha
pop
add
popf
jl
xchg
jle
cmp
adc
stos
cmp
ja
sub
shl
push
push
push
fidiv
popa
daa
ins
and
popa
inc
aaa
cmp
cli
scas
pop
in
loope
lahf
add
(bad)
mov
(bad)
mov
daa
icebp
sub
xchg
in
cli
mov
arpl
mov
daa
cmp
pushf
les
mov
inc
push
jge
clc
inc
xor
nop
lea
jl
xor
pop
sub
jecxz
lods
addr16
jns
pop
pop
or
and
das
in
scas
fidivr
out
scas
add
cmp
inc
sub
mov
jg
std
call
fistp
mov
jnp
inc
gs
sar
push
cli
or
stos
test
loope
in
mov
sub
pop
adc
and
jne
ja
and
cld
dec
leave
mov
shl
pop
adc
wbinvd
sub
sub
pop
btc
push
daa
sub
movd
loope
xchg
test
movs
imul
dec
sub
fwait
sahf
cmp
pop
jne
cli
jne
test
inc
push
xor
dec
adc
pop
fdiv
push
mov
ins
xor
in
daa
arpl
push
inc
jp
xchg
dec
sub
pop
jae
jmp
and
fimul
push
(bad)
xchg
push
cmp
out
jl
push
sbb
pop
(bad)
leave
retf
cmps
dec
sbb
push
pop
clc
or
cld
sub
sbb
xchg
pop
mov
xchg
enter
sbb
out
int3
cmp
(bad)
movs
xchg
cmp
jmp
jnp
sub
das
pop
ins
jg
jl
jnp
mov
popa
xor
adc
test
aam
jno
ret
out
(bad)
int
sbb
in
and
inc
cli
std
mov
adc
add
fild
cs
fcmovu
retf
hlt
call
and
dec
inc
out
xchg
sti
xchg
je
mov
sbb
ja
pop
popa
(bad)
and
or
shl
pop
sbb
jne
call
jl
clc
push
cdq
xor
rcr
jb
or
jmp
mov
les
pop
sub
jge
and
int
ret
push
mov
(bad)
dec
call
ins
(bad)
ret
pop
adc
or
stos
mov
in
mov
mov
stos
cmp
in
rol
xor
cmp
icebp
in
xchg
and
addr16
cmps
aas
cld
(bad)
dec
jbe
fld
pop
jns
nop
mov
mov
dec
xchg
jnp
mov
rcl
add
icebp
popa
test
dec
fwait
and
sbb
dec
call
stc
push
enter
push
push
mov
js
jle
ret
sub
or
call
inc
movs
push
outs
icebp
pop
jb
mov
or
push
cmps
data16
shl
outs
scas
or
push
pop
mov
ret
ret
push
sti
dec
clc
aad
das
or
stos
inc
fwait
int
adc
xor
jge
mov
mov
jnp
mov
out
jne
or
aad
sub
sbb
dec
jl
xlat
push
mov
ficomp
pop
jle
sub
or
cmp
mov
push
mov
dec
mov
movs
mov
ins
inc
mov
cmp
shl
and
call
and
dec
xor
xor
push
pop
mov
div
mov
sbb
jmp
stc
fld
xor
in
ror
dec
aas
scas
mov
nop
aaa
out
mov
mov
fisttp
pop
xor
inc
call
(bad)
movs
je
dec
popf
fnsave
and
or
jmp
push
(bad)
push
mov
sbb
ss
cdq
ret
nop
adc
xor
cs
neg
mov
mul
dec
add
xchg
movs
loopne
pop
xchg
dec
mov
aad
mov
mov
nop
dec
outs
dec
pop
add
mov
adc
xchg
fcom
ret
std
imul
fimul
dec
jle
adc
sti
sub
cdq
adc
fsubp
mov
lea
xor
in
lds
(bad)
(bad)
jo
mov
cmp
mov
mov
sub
imul
sbb
and
push
jmp
add
into
cmp
jmp
and
sbb
jecxz
add
inc
add
fs
das
inc
cmps
and
mov
push
add
loop
jp
sbb
jecxz
stos
lahf
ficom
sbb
or
and
xor
iret
sub
xchg
not
scas
sahf
dec
jo
dec
leave
or
mov
mov
mov
cmp
jno
or
adc
js
test
jae
cwde
sti
jne
or
and
cmp
scas
(bad)
in
sbb
iret
out
adc
outs
pusha
mov
adc
xchg
push
cmp
hlt
adc
push
in
inc
jae
dec
cmp
mov
pop
mov
xor
xor
std
fisubr
pop
sbb
jmp
call
push
stos
or
pop
dec
xor
mov
mov
stc
or
repnz
pushf
mov
dec
cmp
adc
cmp
ja
xchg
dec
inc
shl
ret
inc
mov
rol
xor
and
pop
scas
dec
push
pop
out
(bad)
pop
imul
adc
frstor
xchg
imul
sbb
enter
loopne
stc
cmp
mov
push
cli
sbb
xor
lock
xchg
sub
inc
sbb
ret
and
scas
mov
push
in
and
addr16
sub
push
shr
repz
int3
inc
jp
stos
sub
iret
mov
inc
dec
mov
cmp
mov
adc
outs
pop
add
fnstsw
pop
pop
(bad)
pop
sub
jnp
lock
aam
aad
jnp
mov
mov
jmp
jb
ret
ror
mov
pop
sub
movs
sub
test
pushf
fdivr
call
scas
push
xor
test
loopne
xchg
mov
repz
mov
hlt
loop
xchg
popa
xchg
push
test
xor
pop
mov
pop
dec
mov
and
xchg
movs
mov
inc
inc
das
mov
jbe
into
enter
xchg
(bad)
and
fnstcw
mov
repz
inc
cmp
add
arpl
sub
test
cmp
mov
mov
popw
mov
bound
xchg
pop
popf
fst
inc
mov
mov
pop
mov
mov
shr
out
pop
cmp
pop
jmp
ja
push
add
push
lods
push
popf
iret
cld
cs
pop
je
int3
cmp
mov
aad
in
sbb
nop
pop
xor
jge
cwde
add
mov
ror
pop
and
push
inc
into
cs
mov
ret
xchg
jbe
cmps
push
addr16
lock
gs
loope
adc
xor
loop
sbb
lods
fcomip
jecxz
in
mov
jno
popf
pop
call
adc
jb
jmp
xchg
jmp
out
inc
cmps
lods
es
fptan
mov
or
xor
nop
cmps
int3
xchg
outs
cwde
or
sti
test
or
int
dec
(bad)
adc
ds
repz
inc
and
cmp
cmp
call
and
cdq
cmc
bound
push
inc
push
(bad)
dec
sub
mov
test
(bad)
repnz
or
lea
(bad)
xchg
cmc
xor
mov
fidivr
test
(bad)
jp
xor
in
mov
hlt
jns
jb
mov
inc
shl
pop
lea
adc
mov
jmp
jmp
add
push
in
jg
and
jg
mov
(bad)
sbb
(bad)
pop
mov
mov
in
jecxz
idiv
sbb
cmp
inc
fwait
test
cmp
add
xlat
jmp
add
enter
xlat
xchg
out
push
stc
jns
bound
or
xor
mov
and
icebp
data16
push
push
rcl
inc
test
fisub
mov
bound
dec
xchg
adc
aam
mov
dec
pop
ret
dec
out
in
push
loope
js
sub
stc
adc
fstp
push
xchg
dec
mov
inc
call
mov
push
add
mov
jecxz
jp
cld
fst
mov
daa
in
cld
pop
sub
jmp
leave
out
(bad)
(bad)
jl
popf
dec
scas
fadd
scas
or
and
cmp
shl
xchg
les
cmp
add
mov
mov
dec
pop
sbb
inc
sbb
es
pop
lock
jno
sub
imul
inc
not
jne
pop
aam
test
add
fst
or
xlat
mov
cld
sub
mov
lahf
call
adc
cmp
dec
popf
(bad)
aad
(bad)
movs
jl
sub
shr
fwait
je
pushf
add
jg
out
jb
mov
jge
pusha
test
xchg
gs
cwde
ret
mov
mov
jo
jno
aad
push
pop
add
ror
outs
mov
xor
ret
add
cwde
mov
lock
pop
sbb
jne
xlat
dec
and
imul
fild
add
pop
xlat
pop
aam
mov
mov
jl
aas
xchg
or
pop
mov
sbb
sub
sub
add
cdq
imul
ud0
lahf
ds
mov
push
sub
or
das
inc
aad
inc
jle
movs
mov
cmps
jb
(bad)
and
sub
ja
push
add
mov
call
jne
stos
pop
pop
jge
push
dec
sub
pop
test
dec
cmp
or
in
push
add
xchg
(bad)
pop
mov
sbb
(bad)
jmp
inc
mov
push
pop
add
add
add
pop
shl
inc
push
ror
loope
cwde
inc
jno
enter
sbb
ret
frstor
std
out
lds
sbb
jo
jmp
mov
cmp
mov
cmps
cmp
sub
mov
aas
mov
and
push
stos
dec
mov
dec
loopne
mov
in
add
jmp
xor
and
or
xchg
stos
push
fld
and
jmp
iret
push
fiadd
cmp
mov
aas
enter
inc
out
stc
dec
clc
cmc
mov
movq
es
inc
sti
test
mov
sub
xchg
add
xchg
push
jbe
mov
inc
sub
ja
dec
(bad)
mov
mov
mov
xor
dec
or
ss
sbb
dec
leave
shr
pop
jo
sbb
mov
inc
js
sbb
(bad)
cmps
pop
bound
push
cld
push
ds
xchg
enter
mov
leave
mov
inc
push
not
mov
cs
imul
outs
push
sbb
je
sahf
xor
ror
je
into
popa
and
mov
dec
in
inc
adc
neg
cmp
iret
mov
int
lds
inc
mov
cli
ret
into
mov
test
inc
or
sub
jns
aam
ins
fnstsw
sbb
dec
cld
jno
stc
ss
hlt
mov
test
aam
cdq
jno
lock
fidiv
cli
cmp
jmp
loop
ins
lea
inc
mov
popa
fdiv
mov
sahf
aad
pop
outs
out
adc
pop
jbe
fs
scas
ficomp
pop
in
cmps
in
and
test
mov
jae
int
in
sub
cs
mov
pop
out
stc
inc
mov
sub
jo
shl
into
jne
test
xor
das
xchg
mov
std
xor
mov
movs
jmp
add
(bad)
cli
mov
push
cmc
cmp
imul
pop
xchg
inc
jnp
inc
mov
dec
push
(bad)
test
lods
fadd
loopne
ffree
push
adc
sahf
adc
push
or
mov
add
add
mov
mov
fst
sar
js
pop
sahf
push
pop
mov
sbb
in
push
imul
jo
in
mov
ror
cmp
aad
sub
add
popa
push
jle
shr
stos
mov
shl
xor
call
sub
cwde
es
std
sub
ret
and
sbb
icebp
jl
loopne
mov
loope
jge
in
fdivr
(bad)
push
add
push
xchg
cdq
fucomp
jo
in
push
mov
hlt
and
repz
lock
lahf
push
inc
push
cmc
out
ins
ins
dec
jnp
jbe
popf
cmp
dec
ins
add
mov
inc
sub
mov
add
pop
jnp
push
neg
cmp
shl
sbb
ret
retf
lods
mov
cmps
in
rcl
pop
adc
stos
nop
loope
add
pop
mov
mov
pop
fwait
mov
jmp
xchg
call
xchg
xlat
pop
jle
test
outs
mov
sti
cld
xor
pop
es
clc
repz
cmp
sbb
adc
mov
(bad)
mov
cmps
pop
xchg
jl
int3
popa
fld
mov
dec
sbb
repz
add
repz
sbb
shr
jnp
fwait
loope
aaa
arpl
outs
add
mov
mov
sar
and
pop
mov
mov
sub
call
push
jge
iret
lods
mov
adc
push
jecxz
sbb
xor
push
push
mov
jl
fwait
out
add
pop
arpl
pop
js
clc
adc
jmp
mov
push
push
dec
add
cmp
dec
sbb
ror
lods
call
mov
sub
stc
dec
push
mov
xor
loop
and
cmp
stos
inc
adc
daa
adc
inc
mov
and
add
add
icebp
cdq
(bad)
jmp
imul
sub
test
lock
add
xchg
imul
and
(bad)
push
test
inc
or
xor
ins
stos
adc
(bad)
mov
cmps
push
inc
xchg
int
inc
pop
sbb
mov
cmp
stos
cmp
fnstcw
fdiv
imul
stos
test
aad
cmp
mov
mov
push
mov
inc
cmp
lods
dec
inc
cmps
test
aas
mov
lods
test
(bad)
fidiv
pop
(bad)
jnp
and
popf
int
mov
mov
ins
loope
(bad)
in
ss
xchg
push
sub
xchg
fcomp
xchg
cwde
inc
or
dec
push
xchg
cld
lds
mov
add
lahf
cmp
push
pop
or
add
rcl
aad
xchg
and
dec
sub
mov
sbb
test
cmp
xor
frstor
inc
rcr
xchg
(bad)
pop
xchg
sbb
xor
mov
push
jne
sar
xchg
and
mov
pop
xor
jnp
pop
sub
jno
pop
(bad)
retf
ret
cwde
sar
dec
sub
test
lock
inc
mov
movs
cmp
popf
loop
xchg
mov
and
mov
dec
push
aaa
sub
add
sbb
rol
mov
in
fidiv
imul
es
out
jno
gs
jbe
fdiv
push
fld
sbb
push
jle
in
xchg
mov
inc
popa
xchg
hlt
cdq
test
ja
ds
mov
out
stos
int3
mov
call
add
dec
jl
cmp
in
inc
icebp
inc
mov
hlt
jnp
jnp
out
iret
je
lods
or
je
(bad)
and
mov
pop
(bad)
nop
adc
iret
or
sahf
in
enter
xchg
inc
lods
jo
jg
mov
loop
je
cmp
jl
adc
std
push
sti
lea
aaa
mov
xor
xchg
cmp
test
jae
xor
inc
cmp
inc
cmp
fld
movs
pop
push
or
sbb
leave
jo
pop
loope
mov
inc
and
pop
(bad)
(bad)
stos
add
imul
adc
cmp
jmp
xchg
pop
pop
aad
ret
cld
mov
lock
dec
fstp
scas
xor
arpl
mov
xor
pop
push
retf
jne
int3
mov
adc
sub
mov
dec
xor
mov
mov
jnp
dec
test
or
cmc
add
add
or
or
mov
dec
add
aaa
js
enter
js
sahf
push
and
movs
fs
inc
movs
mov
push
pusha
pop
(bad)
jns
sti
out
out
mov
fidivr
add
push
lea
repz
dec
inc
dec
clc
fwait
nop
sbb
sbb
sbb
push
std
scas
add
hlt
xchg
bound
rcr
or
ja
lods
or
aas
mov
pop
push
sahf
das
enter
ffree
add
mov
mov
push
popf
sub
mov
in
and
xchg
pop
nop
or
daa
cmp
gs
or
out
adc
outs
pushf
mov
xchg
mov
icebp
popf
cmps
push
pop
out
lea
dec
xlat
out
sub
xlat
mov
pop
in
or
jmp
sti
(bad)
mov
out
fisttp
and
fbstp
jecxz
pop
sbb
sub
out
iret
fwait
repz
rol
push
sahf
out
imul
lock
pop
sub
ret
aaa
jns
ret
retf
adc
pop
cwde
mov
push
sub
cwde
cmp
push
(bad)
push
retf
xchg
sub
adc
js
pop
dec
mov
inc
ins
xchg
mov
xchg
mov
cwde
push
jno
push
cmp
(bad)
jle
sub
xor
add
and
ja
pop
xor
xor
add
adc
mov
jg
dec
push
xor
lock
rcr
push
pushf
jl
and
push
repnz
add
std
arpl
ss
or
adc
cmp
loopne
inc
push
leave
cmp
imul
fnstcw
loope
fimul
xchg
arpl
push
jecxz
jl
ja
adc
mov
adc
xchg
push
cs
pop
mov
pop
jns
or
mov
(bad)
in
retf
shl
je
xor
enter
dec
mov
mov
sub
repnz
jmp
xchg
adc
pop
mov
leave
ss
jnp
or
jmp
std
and
punpcklbw
push
out
mov
jl
add
cs
fcom
(bad)
nop
in
out
and
into
out
push
stc
out
push
or
ret
scas
lds
adc
xor
add
js
pop
xchg
sub
fcomp
push
cmps
xor
mov
stos
xbegin
dec
jae
xchg
mov
je
adc
sbb
test
hlt
test
add
sbb
sahf
pop
add
pop
pop
imul
sbb
out
mov
and
popa
popf
popf
push
xchg
in
mov
jecxz
push
mov
jmp
loope
mov
mov
cli
hlt
adc
lahf
(bad)
rcr
cmp
mov
dec
std
xor
enter
jnp
sbb
and
push
inc
loop
inc
xchg
add
pop
in
cmp
retf
mov
xor
mov
sub
pop
pop
movs
lahf
fistp
pushf
jmp
iret
scas
aas
stos
ds
add
cli
imul
add
cmps
sub
xor
outs
adc
mov
add
movs
and
out
xchg
push
cmc
mov
sbb
pop
mov
and
je
jo
inc
imul
and
mov
fcomp
pop
les
sub
add
push
push
out
adc
fdivr
xchg
push
jmp
test
pop
mov
sbb
mov
cli
std
push
cli
mov
je
push
pop
sti
push
ficom
inc
push
jecxz
push
in
movs
into
imul
popf
repnz
and
dec
mov
sar
mov
unpcklps
xchg
mov
sbb
fwait
ins
ret
inc
dec
jno
push
mov
jbe
outs
mov
scas
sub
or
xor
jbe
enter
dec
xor
push
loop
not
in
jp
push
sub
leave
repz
in
pop
push
jmp
adc
mov
jbe
xchg
sub
leave
add
test
jns
in
pop
xlat
mov
pop
scas
or
fcomp
mov
xor
fadd
adc
enter
mov
mov
sub
in
ins
std
imul
out
imul
pop
cmc
sub
xor
mov
mov
ins
fnstenv
mov
mov
lods
(bad)
lods
or
stc
jno
and
mov
mov
sti
hlt
sahf
xchg
ss
sub
or
addr16
and
shl
lea
aaa
jmp
aad
pusha
shr
mov
mov
inc
push
jnp
and
cmc
mov
inc
xor
mov
inc
cmp
push
xchg
lods
sub
int3
fnstenv
cmp
outs
jle
mov
scas
hlt
fdivrp
pusha
pop
push
cmps
and
sbb
repz
cmp
int
mov
add
adc
push
inc
fisubr
movs
sahf
push
data16
and
mov
push
mov
xor
shr
hlt
push
iret
in
lea
push
sbb
repz
pop
cmp
scas
xchg
pushf
jno
retf
es
sub
int3
mov
fmul
push
out
cdq
and
test
push
ffree
jge
jl
mov
outs
ret
dec
jne
arpl
xlat
sub
jecxz
fisttp
out
lods
pop
sbb
mov
jb
fnstsw
repz
sub
(bad)
fild
imul
push
or
mov
xchg
mov
(bad)
or
sub
call
add
mov
stc
adc
cmp
jp
popf
sub
add
lahf
mov
cmps
icebp
xchg
jmp
in
mov
pop
cmp
iret
push
fmul
movs
lock
stos
inc
fwait
pop
movs
fcmovb
daa
dec
movzx
xchg
pushf
(bad)
punpckhwd
ins
lock
or
cmc
fistp
push
inc
mov
leave
adc
mov
mov
xlat
pcmpgtb
inc
dec
nop
sub
into
data16
inc
retf
push
pop
xchg
or
loope
push
std
lea
dec
xchg
mov
xchg
es
hlt
sbb
mov
out
pop
push
sar
mov
xchg
test
dec
pop
xor
ret
je
or
pop
pop
push
add
jae
imul
and
push
pop
test
out
jl
push
lds
stos
std
rcr
sbb
stos
mov
mov
push
out
mov
sub
mov
push
in
iret
pop
jo
enter
mov
mov
aas
jb
movs
cwde
stos
adc
lods
fdivr
mov
and
sub
lods
mov
push
retf
mov
xchg
jp
dec
jns
out
pop
in
in
out
sar
inc
cmp
test
ficom
push
and
cdq
in
pop
fisubr
stc
and
push
pushf
cmp
push
sbb
cmp
div
mov
inc
push
scas
sub
sti
cdq
sahf
outs
mov
add
icebp
mov
dec
push
repz
inc
pmulhuw
mov
pop
scas
sub
cmp
sbb
xchg
(bad)
inc
js
push
sub
cli
ds
add
clc
call
je
das
mov
aad
cmp
mov
jns
and
mov
icebp
movs
(bad)
jne
jmp
or
movs
test
dec
or
cmp
pop
lock
loopne
cli
movs
sub
cli
mov
jp
mov
pop
out
push
cmp
ficomp
jae
jnp
or
test
pop
add
(bad)
fmul
push
(bad)
int3
out
adc
(bad)
cmp
dec
mov
ins
adc
cli
cmp
aas
xor
mov
and
int
mov
jbe
cmp
popf
test
mov
pop
fsub
sub
mov
pop
or
out
mov
push
bnd
add
mov
enter
add
sbb
push
xor
jmp
loope
cdq
push
jp
in
pop
jne
lods
div
neg
movs
pusha
aaa
inc
clc
and
push
mov
and
daa
lahf
outs
popa
(bad)
je
enter
fisttp
jne
dec
cli
or
jp
jo
jno
int3
fwait
mov
call
loopne
inc
cmp
retf
imul
lods
aad
push
dec
sbb
dec
(bad)
cli
retfw
addr16
or
sbb
aam
je
sbb
pop
dec
sub
sub
inc
xchg
neg
xchg
sub
or
addr16
stc
xor
(bad)
aas
cmp
pop
nop
xchg
hlt
sub
pop
xchg
cmp
fst
fidiv
loope
cmp
jbe
sbb
push
xchg
out
xor
scas
sbb
and
ins
jae
in
pop
mov
sbb
dec
and
and
dec
pushf
cmp
xor
imul
pop
data16
push
fnstsw
xor
ins
stc
mov
arpl
pop
in
enter
(bad)
movs
lea
mov
std
push
call
push
push
jmp
call
jae
pop
inc
aam
mov
or
or
and
aam
sub
pop
fst
add
adc
pop
loopne
add
mov
fsubr
icebp
xchg
pop
cdq
fiadd
cmps
mov
sub
imul
arpl
sahf
pusha
dec
jo
icebp
(bad)
sub
inc
and
sub
push
inc
adc
dec
(bad)
dec
inc
and
dec
movs
pop
sbb
call
fs
lods
mov
jle
fwait
leave
jecxz
out
mov
cmp
(bad)
lods
lods
xchg
adc
(bad)
and
add
outs
not
je
rcl
loope
(bad)
or
psrld
mov
and
xchg
and
mov
mov
adc
jae
rol
hlt
ret
jp
and
sub
add
push
mov
inc
mov
sbb
mov
jbe
jne
in
inc
sub
and
ret
sbb
jb
fwait
aad
lods
sbb
das
and
shl
jecxz
ja
jle
pop
call
and
lods
aad
lock
pop
dec
out
ins
xchg
mov
fisubr
test
xchg
push
add
sti
daa
js
push
cmp
jl
and
(bad)
pusha
push
sub
stos
mov
sub
xchg
add
inc
sbb
aad
cmps
lods
mov
outs
xchg
test
pop
inc
pop
mov
sub
and
mov
mov
out
push
out
je
test
std
inc
imul
enter
sahf
push
fiadd
iret
mov
dec
stos
rcl
add
mov
shr
popf
xor
sub
ficom
outs
and
or
out
dec
popa
call
fistp
push
out
push
jno
aam
push
clc
inc
add
imul
mov
mov
inc
jg
popf
dec
je
mov
adc
jmp
or
fs
sbb
hlt
pop
cmc
fdivr
dec
mov
push
add
fcom
add
lahf
js
retf
or
int3
sti
data16
mov
mov
data16
dec
inc
sbb
into
or
mov
aam
popf
push
loop
shr
fdivr
stc
out
xchg
push
ror
xchg
mov
ret
push
sbb
ins
scas
mov
mov
mov
mov
cmp
xchg
cmps
and
cmc
test
xchg
ins
add
imul
jmp
sub
repz
loopne
mov
bound
adc
loop
pop
popa
sbb
adc
aaa
xchg
cmp
cmp
dec
pop
leave
movs
mov
mov
test
dec
outs
jmp
inc
pop
or
cdq
in
addr16
cmps
add
jnp
or
je
(bad)
fwait
jns
bsr
enter
mov
xchg
mov
js
fisttp
(bad)
stc
icebp
adc
fiadd
push
push
mov
sub
cmp
loop
sub
ss
jnp
cmc
jge
push
das
xlat
pop
and
or
ins
sbb
(bad)
jb
test
add
inc
xchg
test
fcomp
jbe
jae
xor
loopne
in
ret
inc
and
into
jmp
add
or
mov
mov
xchg
inc
push
sti
jle
mov
push
jmp
jb
jns
mov
test
fdiv
and
pop
pop
hlt
mov
jne
or
push
in
mov
out
out
push
push
mov
test
(bad)
mov
repz
fcomp
aas
int
xchg
add
or
push
aam
add
rcl
and
mov
jne
es
daa
fsubrp
add
ss
(bad)
push
mov
cmp
sbb
lahf
(bad)
fst
push
fcmove
add
jp
gs
sbb
cwde
sub
jmp
inc
xlat
jmp
dec
mov
test
jnp
or
sub
dec
pop
ret
rep
mov
mov
pop
jp
sbb
int
xchg
test
dec
add
and
test
std
mov
mov
mov
pop
add
sbb
vcvttss2si
mov
dec
push
ja
jl
(bad)
sub
mov
adc
dec
fwait
sbb
push
adc
jecxz
add
sub
jnp
adc
lods
leave
popa
scas
scas
inc
sbb
icebp
inc
mov
and
mov
stos
(bad)
jmp
into
push
fwait
out
cmp
cmc
fwait
adc
dec
test
ds
outs
repz
lods
dec
jbe
ret
clc
dec
push
mov
out
in
and
ins
xchg
(bad)
in
xchg
mov
outs
gs
(bad)
inc
xor
or
mov
fsubr
push
dec
iret
and
pop
cmp
(bad)
mov
cmp
rcpps
and
ret
jb
out
aas
xchg
xor
jbe
shrd
cmp
dec
xor
rcl
data16
es
sbb
pushf
icebp
xor
pop
inc
and
imul
mov
data16
mov
add
sub
push
jne
cmp
ret
push
jl
xchg
ins
jecxz
sub
popa
shl
inc
push
loop
sub
test
add
call
sbb
mov
or
lods
dec
pop
cmps
jns
add
or
mov
cs
not
dec
jge
cs
cmp
mov
sar
mov
(bad)
cdq
in
js
add
xchg
out
(bad)
or
(bad)
mov
or
mov
imul
icebp
mov
in
cli
xchg
add
int
or
pop
and
xor
add
mov
sub
pop
sbb
sar
xor
repz
pop
cli
test
pop
pushf
mov
mov
and
adc
jmp
cmp
mov
jecxz
pop
movs
cli
mov
mov
imul
cmp
push
cwde
dec
cli
jbe
sub
stos
xor
xlat
or
ret
mov
or
push
test
scas
dec
adc
pop
rcr
mov
adc
test
fisub
push
(bad)
adc
in
mov
aaa
sub
iret
cmp
and
sub
aas
add
cmps
rcr
inc
fiadd
push
xlat
mov
call
sub
sbb
mov
loope
jns
dec
mov
or
pusha
sub
inc
pop
das
cmps
inc
jno
fisub
mov
xchg
jg
test
ffree
sbb
pop
out
or
stos
out
sbb
fcmovnb
in
pop
in
push
xchg
jle
xor
imul
mov
out
fdivr
pop
mov
xor
pop
ins
cmps
test
ret
test
ret
rcr
repz
mov
sub
mov
dec
xchg
pop
mov
cdq
test
sbb
push
loope
or
xor
mov
mov
dec
sbb
cdq
inc
mov
ret
(bad)
arpl
xor
pop
mov
int
popf
rol
mov
jmp
inc
or
mov
jl
push
sahf
dec
xchg
fadd
pop
add
lock
mov
ret
(bad)
repnz
jbe
or
je
(bad)
cld
icebp
shl
sahf
jge
xchg
inc
mov
and
sub
or
loop
xchg
(bad)
xor
adc
cmc
cmps
aad
xlat
les
xchg
ja
js
fldcw
mov
popf
xchg
mov
fstp
scas
test
rcr
add
out
pop
lahf
push
std
mov
xchg
arpl
xlat
push
ret
adc
bound
sub
dec
mov
mov
and
jo
cmps
ins
inc
mov
push
int
mov
xchg
in
cmp
cwde
pop
dec
shr
icebp
jmp
shl
adc
lock
xor
fsubr
jb
lds
mov
and
inc
test
mov
add
and
inc
loopne
test
fadd
cdq
mov
ret
adc
xlat
stc
jmp
leave
mov
mov
jle
push
jmp
mov
jmp
inc
xchg
loopne
loope
jp
push
loope
push
adc
lds
mov
xchg
inc
pop
outs
add
xor
or
push
pop
xor
imul
pop
cld
xchg
mov
mov
mov
pop
sub
mov
mov
sub
test
out
dec
fcompp
dec
and
push
adc
fnstcw
ins
or
jae
jl
xchg
iret
leave
or
retf
(bad)
lods
push
mov
push
mov
adc
rcr
clc
iret
and
jbe
mov
leave
and
jo
fs
les
es
aam
adc
pop
aaa
(bad)
ficom
or
(bad)
xchg
mov
cmps
push
int
shr
pusha
loop
push
ds
pop
lahf
in
add
imul
xor
xchg
xchg
xlat
in
or
inc
and
arpl
ins
repnz
jle
dec
fldl2t
or
or
ins
sahf
and
jnp
mov
xor
gs
gs
pop
test
mov
popa
ror
sahf
or
fidiv
jp
out
inc
fs
push
mov
or
cmp
jle
and
les
jno
icebp
xlat
jae
into
sti
div
push
sbb
dec
cli
ss
mov
xor
xor
std
mov
out
or
lahf
sub
inc
inc
mov
std
push
inc
in
shl
pop
adc
pop
in
test
inc
sub
fs
and
pop
(bad)
cmps
cmp
pop
add
jb
cmps
and
add
cmp
push
xor
adc
repz
jns
jo
adc
out
jg
cmps
or
jb
add
mov
loopne
pop
gs
test
mov
jbe
mov
rol
cli
cmc
sub
jno
rcr
push
xor
cs
stos
sbb
stos
sbb
inc
mov
fs
mov
mov
mov
fisubr
test
push
mov
ss
jg
inc
jnp
sar
outs
inc
pushf
out
inc
sar
dec
out
mov
es
cmps
mov
or
mov
adc
sar
daa
imul
into
iret
sbb
dec
xchg
jo
mov
in
adc
pop
loopne
xlat
sub
rcr
loopne
jb
dec
sbb
sbb
bound
ja
fs
adc
mov
mov
iret
daa
rol
push
mov
push
enter
ret
sub
repz
sub
add
cmps
pop
test
cli
imul
adc
dec
mov
push
pop
and
cwde
stos
(bad)
(bad)
pop
rcr
rol
sub
les
add
repz
sbb
adc
sub
cmc
ja
pop
sar
push
pop
dec
lea
mov
dec
je
pop
xchg
push
and
sbb
sub
adc
es
sbb
jl
cmps
sub
aas
xchg
xchg
mov
shr
std
repnz
(bad)
out
xor
call
mov
shr
sar
fst
xchg
cld
push
cld
push
rol
inc
retf
pop
add
dec
sbb
pop
pop
je
push
shl
xor
add
in
pushf
loopne
les
mov
jne
aad
sub
pushf
fdiv
jp
jp
cld
int
jbe
popf
mov
mov
dec
pop
jno
and
push
xchg
jae
jb
dec
retf
hlt
pop
js
sti
repz
jo
push
das
mov
ins
sub
jmp
and
xor
gs
mov
inc
stos
fisttp
ret
pop
pushf
or
(bad)
outs
in
cwde
lds
cmp
jno
sub
call
sub
xor
call
xchg
in
sahf
icebp
inc
jmp
jae
sbb
add
jmp
add
loopne
icebp
test
fs
fmulp
or
arpl
sti
outs
ss
addr16
mov
outs
shl
shl
pop
out
cmp
into
aad
jecxz
mov
cmp
ja
test
mov
repnz
xor
rol
and
retf
mov
inc
cli
cmp
stos
jo
outs
jl
pop
pop
es
hlt
mov
hlt
pusha
scas
int3
add
xchg
sub
aam
mov
out
jns
mov
xor
mov
jbe
test
pop
xor
xchg
ins
adc
mov
std
inc
xchg
aas
sbb
sub
mov
pop
scas
and
push
dec
icebp
loope
jmp
xchg
cmp
inc
(bad)
push
and
inc
pop
test
dec
mov
mov
lea
in
pop
inc
(bad)
push
xor
and
call
sub
mov
xor
rcr
das
sub
cmp
in
push
bound
bound
pop
out
test
mov
in
aam
je
xchg
shr
fucomi
rcr
int3
int3
pop
lahf
xchg
mov
pushf
xchg
cmp
clc
and
fs
loopne
std
pop
mov
cmp
xchg
(bad)
xor
rol
addr16
ins
mov
aas
inc
mov
repz
jmp
dec
push
mov
out
sub
inc
imul
push
lds
fnstcw
faddp
push
pop
adc
jg
dec
aad
mov
xor
(bad)
xchg
iret
pop
enter
lahf
in
adc
sbb
cmps
test
stc
xchg
movs
jnp
call
push
(bad)
xchg
stos
repnz
or
push
jle
repnz
xor
lods
aas
jns
out
or
xchg
pop
xchg
test
out
jmp
movs
cmp
pop
fcmovu
mov
movs
(bad)
sahf
loop
lods
dec
shr
jp
mov
js
cmp
adc
icebp
rcl
pop
mov
pop
xchg
push
jl
or
mov
mov
xor
xor
fcomp
mov
movs
cmps
dec
aad
retf
icebp
sub
stos
retf
push
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
rol
mov
ret
mov
(bad)
les
(bad)
mov
mov
and
leave
les
add
and
add
and
add
and
add
and
add
and
add
lds
pop
lds
or
and
or
and
and
and
and
and
and
and
and
and
and
and
and
lds
daa
lds
sub
and
sub
and
inc
lds
inc
lds
inc
lds
inc
lds
inc
lds
inc
lds
inc
lds
inc
lds
dec
lds
dec
lds
add
mov
add
mov
test
and
test
and
xchg
and
xchg
and
mov
and
pop
and
mov
lds
mov
lds
movs
lds
movs
lds
cmps
lds
cmps
lds
lods
lds
lods
lds
loopne
and
loope
and
loop
and
jecxz
and
in
and
in
and
out
and
out
and
out
lds
out
lds
arpl
and
push
(bad)
and
push
and
imul
mov
ins
(bad)
and
outs
(bad)
and
outs
(bad)
and
call
out
jp
out
jp
out
jp
out
jp
out
jp
out
jp
out
jp
out
jp
out
jp
out
jp
add
add
add
add
add
jo
add
cdq
add
add
add
add
add
add
add
add
lds
add
out
add
add
add
pushf
add
add
add
xchg
add
add
add
add
add
mov
add
add
add
xor
add
scas
add
add
add
add
add
add
add
sub
add
movs
add
add
add
or
add
or
add
or
add
or
add
or
add
add
je
add
inc
or
add
add
ins
or
add
or
add
add
pop
add
repnz
add
ja
add
mov
or
add
or
add
or
add
add
or
add
add
cmp
add
mov
add
mov
add
test
or
add
push
add
lods
push
add
add
add
add
xor
add
or
add
fild
add
daa
pop
add
inc
add
add
add
xor
or
add
mov
or
add
xchg
add
add
add
into
add
add
add
add
or
add
or
add
add
pop
add
xchg
or
add
adc
add
cmp
cmp
cmp
xor
cmp
add
add
add
xor
add
add
add
and
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
dec
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
cmps
je
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
scas
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
aad
add
add
add
add
xor
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
adc
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
outs
dec
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
cwde
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
mov
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
in
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
xor
add
add
add
add
add
add
inc
and
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
xor
add
add
add
add
add
in
add
and
add
add
add
xor
add
add
add
add
add
xor
dec
test
add
add
xor
add
add
add
add
add
xor
mov
add
add
add
xor
add
add
add
add
add
xor
xor
add
and
add
add
add
xor
add
add
add
add
add
xor
call
add
add
xor
add
add
add
add
add
xor
or
add
and
add
add
add
xor
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
ss
sbb
add
add
xor
add
add
add
add
add
aaa
add
add
add
xor
add
add
add
add
add
cmp
rol
add
add
xor
add
add
add
add
add
cmp
inc
push
add
and
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
jle
add
add
xor
add
add
add
add
add
xchg
add
and
add
add
add
xor
add
add
add
add
add
movs
add
and
add
add
add
xor
add
add
add
add
add
mov
add
add
add
xor
add
add
add
add
add
retf
add
and
add
add
add
xor
add
add
add
add
add
fild
add
add
xor
add
add
add
add
add
repnz
and
add
add
add
xor
add
add
add
add
add
push
add
and
add
add
add
xor
add
add
add
add
add
sbb
and
add
add
add
xor
add
add
add
add
add
sub
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
push
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
jp
add
add
xor
add
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
int
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
fadd
and
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
sub
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
push
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
movs
ja
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
fadd
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
adc
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
cmp
add
add
xor
add
add
add
add
add
add
outs
dec
push
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
fwait
push
add
add
add
add
xor
add
add
add
add
add
add
movs
push
add
pop
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
fwait
mov
fisttp
ja
test
addr16
cmps
cmp
fsubr
dec
dec
div
mov
mov
add
dec
rcr
fcomp
mov
(bad)
cld
loope
pusha
xor
rcl
out
stc
mov
addr16
jle
adc
std
cmp
dec
sub
stc
jg
in
mov
pop
sub
movs
xchg
rol
push
shr
add
repz
ja
push
outs
test
mov
scas
outs
and
jle
fwait
ret
fmul
push
cmps
xchg
sbb
daa
dec
pusha
cmp
or
(bad)
jae
aam
inc
ret
rcr
and
xlat
inc
test
outs
prefetcht2
frstor
popa
outs
jle
mul
pop
mov
aam
(bad)
stos
dec
mov
outs
inc
in
stos
fs
(bad)
mov
test
scas
ficom
loopne
repz
mov
or
je
mov
repz
dec
dec
fidiv
sub
leave
mov
mov
clc
daa
add
rol
cld
and
xor
das
sbb
int
hlt
jl
xor
aam
pusha
mov
jmp
sub
xchg
mov
and
dec
xor
xor
push
(bad)
xor
(bad)
mov
ins
xchg
ret
pop
lock
cmps
cmp
ins
aad
(bad)
call
neg
cmp
not
or
outs
into
outs
leave
or
loopne
and
dec
jp
add
and
aaa
adc
loopne
inc
or
inc
push
and
pop
(bad)
sbb
xor
jb
fnstsw
push
push
inc
test
cld
and
xor
repz
inc
mov
xchg
out
fidiv
sbb
mov
and
mov
dec
clc
jno
rol
xlat
mov
jle
in
mov
add
mov
jne
retf
mov
jle
repz
js
xchg
inc
es
shl
xlat
scas
movs
shl
push
ror
fcomp
xchg
(bad)
(bad)
int
xlat
lea
dec
xor
xor
push
jne
xchg
call
iret
jl
pop
bound
movs
adc
mov
push
xlat
adc
les
inc
(bad)
std
stc
push
push
xchg
push
cmps
movs
jge
loopne
mov
sbb
sti
mov
popa
aaa
outs
push
lds
aas
cmps
mov
pop
cmps
stc
enter
jecxz
push
pop
or
enter
outs
mov
or
cmp
push
sbb
ret
dec
out
xor
dec
leave
inc
sub
out
inc
ds
loop
xor
add
or
xlat
or
mov
xor
rol
jnp
fwait
jo
jmp
mov
loope
fdivr
ins
mov
int3
cmps
ror
xchg
(bad)
std
int
scas
aas
into
jle
cdq
sti
push
push
sub
cdq
inc
jle
jl
xchg
lea
dec
sbb
sub
mov
pop
sahf
inc
pop
mov
sar
stos
xor
dec
sub
imul
mov
mov
cmps
jb
stos
cmp
xchg
ret
mov
mov
out
cmp
(bad)
cmp
dec
mov
aam
pop
mov
scas
inc
pop
inc
inc
rcr
xor
and
add
mov
(bad)
pop
mov
xor
retf
adc
inc
fdivr
(bad)
add
mov
adc
rcr
test
mov
xchg
(bad)
test
das
push
jge
xchg
dec
movs
jb
xor
leave
cdq
mov
hlt
stos
pop
push
dec
sub
popf
test
mov
jecxz
cmp
jl
aaa
aam
mov
mov
dec
add
into
pusha
clc
xchg
lahf
jbe
lea
and
iret
xchg
mov
das
lock
ror
adc
(bad)
adc
or
sahf
mov
push
stos
mov
and
(bad)
dec
loope
mov
add
cmps
mov
push
stos
adc
inc
jo
mov
(bad)
sti
lods
es
jl
sti
mov
popa
jnp
cmp
enter
jmp
hlt
and
in
cli
push
jge
(bad)
or
aam
ins
and
or
adc
lods
pop
imul
mov
vpsubsb
call
push
xchg
sbb
outs
cmp
and
mov
push
fisub
jp
xchg
out
(bad)
retf
aas
(bad)
daa
inc
jne
fucomip
xchg
dec
jg
mov
test
push
jle
call
adc
fwait
xchg
fs
je
mov
inc
shl
jno
push
inc
jns
repz
stos
retf
sub
pusha
push
fwait
daa
ins
jecxz
mov
ficom
jno
rcr
xchg
lds
sbb
test
cmp
xchg
xor
add
sbb
ror
pop
inc
aad
leave
push
cli
and
pop
sub
mov
mov
fwait
mov
sbb
sbb
pop
ss
xchg
or
cmps
jge
not
xchg
inc
sub
ret
jle
push
push
(bad)
dec
sahf
jmp
mov
push
pusha
sub
xor
aad
outs
sub
cmp
fisttp
test
push
and
fidivr
xor
mov
lock
push
pushf
popf
aas
aad
push
out
pop
bound
xchg
push
jle
and
mov
sub
je
(bad)
mov
or
sbb
sub
stc
leave
mov
xor
scas
loop
cmp
jecxz
pop
cmp
xchg
mov
sub
fmul
xor
xchg
push
pop
pop
int3
stc
std
mov
out
cli
mov
mov
fdivr
ror
and
and
jo
cmps
imul
fisttp
imul
fiadd
push
bound
mov
mov
inc
xor
mov
mov
mov
sbb
aam
fild
hlt
or
fsubr
mov
sahf
jl
jne
loop
add
mov
mov
fdivr
dec
fst
repnz
stos
shl
ficomp
fmulp
or
cmp
cmps
push
pop
mov
cmp
pop
pop
retf
dec
cmovl
int3
push
cmp
out
inc
arpl
out
xchg
(bad)
jns
das
pop
or
(bad)
out
call
sub
cdq
jae
dec
std
adc
enter
xor
cmp
jge
(bad)
out
std
dec
push
punpcklbw
sub
mov
mov
fld
popf
dec
jnp
arpl
test
jge
es
pop
das
aam
pop
pop
inc
and
(bad)
push
(bad)
enter
fst
add
jg
std
sub
cli
jl
out
jns
ret
loopne
push
cdq
je
retf
adc
aas
cmp
xor
sbb
jnp
sbb
jl
mov
sbb
outs
sbb
fsub
lahf
push
(bad)
sub
inc
je
xchg
(bad)
in
and
out
fild
lods
mov
aad
push
repnz
push
xor
sbb
push
pop
retf
push
cld
or
cmps
add
xor
xchg
pop
and
mov
rcl
pop
mov
jmp
pop
out
(bad)
fidiv
sbb
push
ds
bndldx
jp
es
loope
xor
sbb
cmp
pop
nop
push
or
aaa
sti
mov
or
aaa
push
sub
push
pop
sub
scas
pop
sub
xchg
ficom
xor
sbb
sbb
xor
xchg
push
dec
inc
inc
fwait
sti
call
addr16
inc
mov
pop
mov
shr
fs
test
or
mov
adc
inc
cli
clc
les
ja
ss
in
xlat
shl
lea
bound
jmp
(bad)
xlat
ins
cmp
push
jns
sub
mov
ss
popf
out
mov
imul
movs
(bad)
and
sti
xlat
cld
pop
add
dec
push
sbb
loop
fs
out
lods
mov
mov
fmul
mov
outs
cmp
stos
and
mov
mov
jmp
xor
xor
add
not
pop
jns
sahf
add
gs
cmp
je
jmp
mov
and
cmps
lahf
jmp
loopne
dec
arpl
scas
leave
mov
les
mov
jmp
pop
outs
xchg
imul
lds
stc
rol
xchg
push
jae
pop
jecxz
ja
test
iret
pusha
jl
in
add
jmp
gs
or
sbb
hlt
fimul
lahf
ret
(bad)
jns
aaa
not
adc
jle
mov
lock
xor
inc
hlt
fdiv
mov
(bad)
xor
cmps
sar
cmp
sub
imul
out
idiv
jp
dec
and
pop
inc
mov
mov
adc
test
jg
hlt
pop
cs
dec
cmp
cmp
ins
out
cmp
imul
xor
sahf
repz
adc
xchg
cwde
stos
test
fsub
xchg
jae
sub
xlat
shr
repnz
(bad)
shl
in
cmp
sub
(bad)
mov
cmps
xor
pop
aam
inc
out
inc
push
or
inc
push
add
mov
aad
out
loope
mov
mov
cmp
pop
(bad)
dec
outs
push
inc
adc
cmp
and
shl
jge
sahf
rol
push
xchg
pop
push
cli
cdq
mov
xchg
fadd
ins
pop
jb
mov
fcom
in
and
pop
addr16
push
push
push
mov
mov
or
add
aaa
loope
(bad)
(bad)
rep
(bad)
out
push
shr
les
cmc
mov
jnp
or
(bad)
enter
pop
jb
pop
out
inc
jae
sti
push
jno
iret
push
mov
and
fwait
push
ret
jns
and
ss
popf
sbb
cmovae
shr
mov
loope
test
jp
mov
out
sub
das
and
sub
xchg
mov
dec
imul
repnz
call
jmp
cmp
pop
fild
mov
addr16
mov
sbb
lods
cmc
jg
neg
inc
rol
loope
push
adc
xchg
hlt
cmp
pop
xchg
fnstcw
add
int
mov
jmp
jb
cmp
cmp
push
dec
push
lea
and
cmp
mov
pop
cmp
mov
pop
add
sbb
movs
sub
sub
jle
jge
jle
cmp
mov
sti
sbb
push
jecxz
and
xor
es
pop
lods
and
inc
out
mov
mov
or
les
mov
push
das
jg
jge
dec
mov
adc
jp
or
mov
jge
mov
push
sar
xor
push
or
mov
dec
loopne
push
je
fucom
in
push
xor
mov
jnp
pop
mov
push
les
sahf
inc
fmul
mov
out
push
dec
jg
and
hlt
(bad)
sub
popa
xchg
mov
sbb
sub
cmp
adc
adc
call
adc
sbb
xchg
popa
std
push
mov
jne
xor
sahf
aad
cmc
or
mov
lahf
xchg
inc
icebp
cmp
add
jnp
ins
sbb
inc
adc
outs
jnp
pushf
iret
fwait
cld
xchg
sbb
sti
or
iret
loop
ja
push
cmp
or
neg
sbb
repnz
xor
mov
jns
push
ds
push
lahf
or
jp
int
push
and
or
iret
pop
inc
push
fmulp
stos
xor
mov
push
cmp
int
sbb
sahf
push
bound
inc
or
arpl
mov
and
sub
cmps
leave
dec
lahf
stos
inc
mov
and
xor
(bad)
sti
xor
movs
scas
mov
lds
pop
xchg
and
loopne
and
push
dec
sub
jo
or
and
std
jb
mov
xchg
ja
pop
pop
retf
cmp
or
nop
xor
sub
xchg
pop
jnp
shl
in
popf
cli
push
xchg
ret
out
adc
test
cmp
cmp
sti
mov
aas
and
adc
mov
les
sti
push
dec
fistp
call
movaps
jecxz
adc
dec
jl
xor
jb
add
jmp
sti
stos
push
sbb
test
push
pop
jge
mov
(bad)
loop
cmps
push
mov
cmp
ss
pop
mov
xlat
das
mov
mov
dec
xchg
mov
in
rcl
daa
ror
in
hlt
jmp
mov
xchg
lds
add
push
dec
sbb
pop
cmc
or
shr
cmc
jp
pop
mov
(bad)
and
jnp
mov
dec
(bad)
(bad)
cmc
lods
mov
jecxz
mov
outs
jg
sub
mov
in
(bad)
daa
push
dec
fild
xor
adc
pop
popa
push
pushf
ins
movs
popa
adc
movs
add
mov
shld
dec
cmp
jmp
aas
or
mov
addr16
xchg
adc
dec
sbb
scas
jb
push
ficom
bound
and
inc
sar
mov
stos
mov
sbb
ja
jge
adc
cmp
ja
bound
sub
popf
mov
push
outs
stos
(bad)
xor
dec
cmp
add
shl
xchg
mov
mov
fbld
jb
xchg
stc
cld
xchg
ins
xor
jb
shr
or
or
sbb
sbb
push
dec
std
bound
xor
(bad)
pop
sub
mov
add
pop
repnz
sbb
pop
retf
pop
xchg
lds
test
dec
sub
or
pop
jnp
mov
mov
add
sti
jg
mov
xchg
cmps
or
push
sub
cmp
inc
cdq
pop
inc
xor
add
cdq
fisubr
xchg
out
mov
add
and
aad
mov
mov
xor
int3
add
call
jge
ja
clc
xchg
xchg
ret
jg
jmp
adc
leave
fwait
gs
fld
imul
pop
rcr
sar
popa
jecxz
mov
and
ins
arpl
xor
jmp
in
cwde
push
out
xchg
adc
push
inc
or
sbb
xor
or
mov
push
xor
adc
fld
mov
adc
pop
shl
mov
mov
mov
sbb
xor
jbe
dec
sti
stos
je
jae
cmp
pusha
loope
ja
loopne
pop
out
mov
pusha
repnz
cmc
lods
aad
lahf
pop
xor
xchg
adc
bound
enter
iret
mov
inc
sbb
cdq
cmc
push
cwde
xchg
cmp
lods
add
pop
call
(bad)
sub
push
and
mov
pop
outs
out
shr
into
cmp
mov
cmp
jle
(bad)
dec
je
cmp
cmp
push
std
xchg
fst
inc
retf
cmps
dec
sbb
pop
inc
in
nop
rcl
xor
dec
in
test
adc
enter
nop
sub
scas
xchg
shl
test
shl
sbb
dec
aam
and
test
(bad)
cs
les
mov
ror
mov
xchg
imul
nop
dec
push
add
rep
push
add
inc
mov
ret
(bad)
cmp
or
pop
jne
sbb
repz
pop
xor
or
nop
mov
push
xchg
out
sub
mov
fdivr
int
sbb
fcmovnu
cdq
and
push
sub
mov
fsubr
fwait
push
xchg
or
shr
sbb
(bad)
loope
dec
inc
iret
test
xor
repnz
in
mov
jmp
je
sahf
dec
jl
add
or
add
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
stos
in
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
pushf
ss
cmps
cmps
cdq
scas
jmp
jmp
ins
bound
cmp
or
scas
sar
aas
out
jecxz
out
jl
and
pop
or
gs
ret
jbe
dec
imul
pop
sub
sbb
mov
ficom
aas
mov
xor
(bad)
data16
cmp
mov
mov
jnp
pop
adc
jmp
fs
ret
test
aaa
push
in
pop
dec
jecxz
cmp
sub
js
(bad)
fldenv
pop
cmp
mov
jmp
pusha
xchg
mov
inc
push
popa
das
push
sub
sbb
push
xchg
xor
or
jmp
mov
test
call
push
mov
cdq
cmp
call
ret
adc
stos
sbb
add
cwde
mov
arpl
das
aaa
int
xchg
jp
mov
js
adc
repnz
sbb
mov
xor
mov
jno
jne
push
jmp
out
and
sbb
aaa
dec
int
sub
leave
xchg
sbb
mov
mov
cld
dec
sahf
out
(bad)
jmp
scas
test
cld
out
push
dec
fsubr
cdq
xor
jbe
sti
mov
mov
out
add
test
add
sti
dec
cmp
jo
sbb
imul
test
add
inc
bound
popa
sub
mov
mov
je
and
inc
scas
mov
push
mov
bound
dec
pop
sbb
cs
mov
in
icebp
in
push
sti
sbb
or
fsubr
sar
jmp
outs
btc
(bad)
pop
push
sub
mov
cmps
add
mov
xchg
ins
fcmovnb
or
push
scas
jne
add
mov
test
sti
sbb
stos
push
mov
inc
pop
add
in
fsubrp
cmp
mov
jo
mov
cmps
or
pop
xchg
sbb
ja
pop
mov
and
xchg
mov
dec
les
in
(bad)
fistp
test
and
mov
repz
adc
sar
imul
push
jmp
and
mov
push
jnp
dec
xor
jns
movs
and
pop
ds
icebp
lahf
cmps
and
sub
mov
dec
xor
mov
sub
adc
lods
mov
add
fnstenv
cmp
jmp
add
out
daa
(bad)
adc
jecxz
jg
outs
cli
dec
shl
int
je
mov
or
dec
aaa
add
push
jg
mov
mov
je
ss
cmps
add
push
stos
fs
lods
jnp
gs
fadd
gs
test
shl
cld
sti
(bad)
xchg
repz
repnz
xchg
icebp
inc
xchg
test
add
sbb
(bad)
mov
mov
std
out
(bad)
idiv
in
bound
push
and
fdiv
dec
movs
stos
ins
out
jecxz
push
pop
rol
je
rcr
mov
stos
cmc
icebp
int3
xor
into
repnz
lock
aaa
xchg
cmp
loope
jnp
pop
jae
jnp
pop
int3
push
fcom
sbb
or
adc
pushf
jns
frstpm(287
aad
and
jae
and
bound
mov
bndstx
ss
sar
or
lds
int3
pop
jp
jl
cmp
adc
ds
dec
mov
lods
dec
add
cmps
mov
cmc
jl
fdiv
jno
adc
xor
mov
push
retf
lahf
xchg
lahf
outs
test
lea
sbb
and
mov
mov
xchg
call
xchg
add
mov
imul
ss
push
or
or
jge
mov
sub
stc
push
sar
or
mov
cs
jmp
add
inc
pop
mov
mov
es
popa
fidivr
cld
rcl
dec
fisub
inc
push
cld
cmp
push
sub
sub
sub
jno
fsubrp
mov
enter
mov
inc
sub
add
add
adc
sub
dec
mov
daa
xor
cmps
ds
jl
(bad)
pop
ffreep
and
stos
movs
(bad)
mov
xlat
inc
outs
out
lods
sbb
movs
sar
xor
jmp
push
cmp
mov
fisubr
adc
test
aaa
es
pop
shl
gs
mov
es
mov
sub
(bad)
push
mov
dec
ss
push
int3
mov
jle
popa
or
scas
int3
mov
cmp
pop
mov
mov
sar
mov
and
test
test
lds
xchg
jp
int3
push
loop
jmp
lahf
mul
fs
movs
cld
fadd
push
inc
push
xchg
xchg
mov
fld
mov
lahf
adc
jg
or
mov
sub
scas
cmovl
call
aas
stc
jbe
das
add
jge
retf
repz
imul
lock
lock
dec
ss
mov
aaa
repnz
(bad)
push
mov
pop
sbb
out
sub
jne
sub
cmps
scas
gs
sbb
dec
mov
and
cmps
inc
pop
int3
in
adc
or
cli
fs
and
(bad)
rcr
xchg
and
ret
icebp
(bad)
into
mov
fstp
repnz
test
imul
xchg
and
mov
xchg
pop
adc
push
cmps
inc
xchg
int3
fmul
xor
mov
test
push
fisttp
cmps
add
jmp
sar
test
in
loop
scas
jl
sub
shr
cmc
cmps
pushf
aaa
aas
sub
jg
jmp
loopne
jmp
add
adc
jp
aad
push
mov
stos
inc
push
imul
mov
ror
imul
in
stc
(bad)
jle
xchg
xchg
shr
add
xchg
sahf
or
xchg
push
xchg
iret
cmp
vpcmpgtd
add
ret
into
addr16
fwait
mov
(bad)
jle
jae
cmp
fmul
sbb
mov
cmp
call
sub
jb
fisttp
(bad)
ficomp
arpl
mov
out
leave
dec
outs
cmp
movs
mov
gs
xlat
leave
push
jmp
dec
cmp
xchg
and
jne
test
push
mov
or
pop
jbe
cdq
jb
lea
cmps
push
sub
cvtpi2ps
outs
js
mov
nop
outs
pushf
in
push
fnstsw
stos
mov
movs
mov
lds
jbe
int3
in
repnz
daa
cmc
pop
jle
es
or
dec
xchg
inc
int3
and
test
repnz
popa
xchg
pop
loop
or
outs
sub
mov
nop
fwait
lahf
mov
jmp
aad
rol
mov
ins
out
adc
out
cmp
mov
mov
pop
add
sub
ja
popa
sbb
mov
sub
int
mul
rol
aaa
dec
fcom
dec
jle
and
xchg
inc
loop
cwde
call
call
cs
(bad)
retf
add
adc
ins
loop
popa
in
and
cmp
sbb
add
mov
pop
jle
dec
out
xor
and
(bad)
adc
pushf
ja
fnsave
push
rol
loope
hlt
jg
jge
je
add
and
xor
je
pushf
adc
pop
sub
or
int3
cmp
adc
inc
push
xor
add
in
mov
cmp
lods
inc
pop
xchg
int
aad
js
mov
sbb
fs
fadd
cmc
fimul
sbb
dec
int
fcmovb
jp
repnz
ret
loop
pop
jg
cmps
test
mov
es
xchg
sahf
test
adc
ret
aas
stc
xchg
jae
add
scas
rol
rcr
push
xor
out
sbb
mov
pop
sar
pop
dec
mov
push
pop
rol
cmp
ss
mov
cwde
push
adc
cmova
cmp
in
mov
xchg
mov
xor
ret
enter
jne
movs
arpl
adc
out
daa
mov
sub
sbb
in
scas
pop
cmp
xor
pop
jae
xchg
xchg
scas
and
ret
mov
push
sbb
xchg
sbb
cmp
mov
out
stc
cld
xchg
shl
add
xor
dec
adc
stc
mov
mov
add
outs
enter
out
sbb
lock
cmp
or
dec
ss
js
sbb
test
pop
test
hlt
jp
scas
ss
sub
mov
scas
dec
in
(bad)
pop
hlt
and
push
dec
jle
mov
stos
(bad)
xlat
je
rol
jp
test
inc
push
fs
mov
data16
cmp
xlat
jmp
cmc
jbe
ror
fcom
push
cld
push
mov
js
fcmovnu
daa
and
xchg
mov
call
ins
data16
fiadd
jmp
cmp
inc
cmp
fnstenv
cld
sbb
ficom
mov
es
sbb
add
pop
retf
mov
jmp
bound
xchg
jg
mov
dec
(bad)
stos
xchg
jl
mov
add
out
(bad)
jmp
mov
mov
ins
jo
jb
push
outs
pop
mov
adc
hlt
and
in
sbb
in
pushf
mov
mov
dec
stos
je
adc
cmps
sbb
stos
jmp
pop
cdq
loope
push
jb
sub
jo
ins
jg
cdq
(bad)
adc
jmp
mov
push
mov
bound
xchg
xor
fdiv
movs
add
lds
add
(bad)
aaa
push
mov
add
cmc
xchg
aaa
push
int
cli
(bad)
push
push
addr16
leave
mov
out
int
mov
jnp
adc
xor
mov
mov
inc
retf
push
xor
das
int
and
xchg
out
les
cmp
dec
and
out
popf
mov
pop
data16
add
inc
and
in
mov
push
pop
pushf
lods
dec
push
cdq
loopne
(bad)
or
int
mov
fidiv
inc
movs
cmp
cmps
cmp
jge
cli
ret
inc
mov
test
popf
jnp
add
cmp
adc
pop
cmp
scas
cdq
ins
xor
mov
in
cmp
jns
out
mov
sbb
fnstsw
xchg
jecxz
sbb
addr16
mov
rcr
retf
xor
mov
xchg
cmp
push
xlat
in
inc
retf
loop
test
and
sub
jnp
enter
or
xchg
xchg
(bad)
leave
push
adc
and
dec
jmp
cld
adc
mov
pushf
or
cmp
mov
test
inc
sti
rcr
lock
aam
jmp
mov
nop
mov
sti
fsubr
out
fst
mov
aas
push
mov
iret
mov
jmp
popa
pop
xchg
std
mov
cmp
repnz
not
mov
vpalignr
inc
push
loopne
xor
dec
and
dec
and
push
data16
xchg
fdiv
loopne
outs
sbb
cdq
or
enter
jno
cmp
test
lahf
test
pop
clc
sub
jle
out
mov
cmp
aam
int3
jnp
sub
dec
psllq
push
sub
cmps
push
test
(bad)
fiadd
push
cld
rcl
dec
xchg
outs
sahf
xor
gs
push
sbb
fdivr
movs
call
push
out
xlat
mov
inc
and
dec
sbb
sbb
jno
hlt
lds
push
and
inc
sub
hlt
movs
inc
pop
daa
icebp
mov
push
mov
cmc
or
jbe
add
es
in
ror
int
enter
leave
mov
stc
ins
cmp
mov
sti
imul
mov
jge
into
or
mov
jmp
shl
and
cmp
or
das
xor
jmp
fidivr
inc
pop
in
xchg
jo
jb
shl
repnz
pop
mov
cld
adc
mov
stc
icebp
jnp
dec
stos
push
mov
sar
cmp
mov
push
add
sub
fiadd
cmp
out
pop
and
push
cdq
(bad)
repz
div
mov
or
push
out
mov
sbb
sbb
mov
imul
push
pop
loop
fcom
das
sbb
xor
out
xchg
ins
sub
out
mov
push
ret
aas
push
xchg
add
shr
lds
mov
sub
in
and
sahf
jecxz
stos
sbb
xchg
hlt
and
fdivrp
push
mov
movs
mov
out
(bad)
into
test
lock
fiadd
aas
sahf
adc
icebp
div
dec
mov
stos
loope
adc
xor
mov
jmp
mov
jg
adc
and
push
mov
(bad)
or
call
inc
test
and
xchg
fiadd
pop
xchg
retf
jg
add
adc
retf
push
lahf
push
pop
xchg
out
rcr
int
xor
mov
cs
mov
out
push
or
into
cmc
jmp
outs
lods
pop
push
or
(bad)
add
push
jg
mov
pop
dec
dec
jnp
jbe
jns
aaa
xchg
or
push
push
clc
mov
adc
push
retf
sbb
sub
mov
sub
out
mov
pop
inc
mov
jns
add
(bad)
shrd
ret
outs
(bad)
sub
pushf
iret
xchg
cmp
pop
test
mov
sub
fsubrp
or
mov
mov
cmp
mov
lahf
dec
retf
idiv
jns
sub
xchg
push
sub
imul
push
jmp
mov
fwait
jnp
xchg
cmp
or
pop
shr
pop
jge
push
cmp
jg
imul
dec
addr16
add
cmp
sbb
nop
add
in
mov
cs
xor
or
mov
dec
jg
inc
add
nop
out
xchg
(bad)
dec
mov
xor
rcr
pop
shr
fmul
arpl
je
push
sub
(bad)
std
lods
ret
mov
mov
sub
test
cmp
push
fsubr
and
and
shl
repz
xchg
stos
push
(bad)
(bad)
mov
mov
jo
and
mov
scas
shr
dec
or
inc
sub
mov
aam
jge
or
retf
xchg
les
pop
(bad)
popf
sbb
sub
stos
adc
mov
jnp
out
in
push
sti
movs
cwde
movs
ror
jge
hlt
jbe
mov
xlat
inc
inc
test
imul
ficom
adc
xchg
cmp
cmc
mov
jmp
mov
dec
dec
mov
sbb
stos
adc
push
mov
shl
cmp
xchg
inc
mov
mov
push
mov
cld
inc
call
and
aad
sbb
mov
mov
xchg
dec
mov
gs
or
scas
or
dec
scas
adc
pusha
aaa
aas
sbb
and
and
into
add
mov
jae
sbb
jecxz
ret
scas
das
sub
sub
sbb
and
or
loop
ret
jnp
and
inc
in
add
stc
mov
lock
and
je
push
pop
inc
xor
cwde
movs
fmul
mov
mov
push
mov
ins
pop
bound
imul
sub
aas
lock
popf
outs
jle
out
test
or
sar
div
add
mov
test
into
pusha
sysenter
not
es
mov
cmp
push
shl
repz
push
or
and
ds
cmps
jge
test
icebp
(bad)
in
add
adc
jne
mov
repz
in
iret
inc
and
std
rol
sub
dec
in
in
shr
add
scas
and
mov
in
fwait
push
dec
pop
dec
sbb
mov
fnstcw
aaa
je
adc
xchg
popf
inc
mov
pushf
data16
inc
ins
outs
dec
xor
inc
sbb
adc
or
pop
aaa
jbe
hlt
arpl
xchg
in
scas
xor
stos
push
dec
in
lea
stc
daa
loopne
jg
stc
out
jg
stc
out
xor
mov
push
movs
xchg
push
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
into
xor
je
mov
ja
scas
cmp
xchg
cwde
xor
dec
xor
pushf
jp
xor
fldl2t
(bad)
jle
mov
add
sub
mov
dec
xor
mov
xchg
adc
js
(bad)
xchg
fsubr
xchg
cs
mov
fsub
xchg
add
cmp
pop
ja
push
cmp
(bad)
lods
aaa
push
outs
out
cmp
and
push
mov
rcr
loope
cwde
enter
dec
ins
fwait
inc
or
adc
and
dec
test
mov
jo
mov
jo
bound
gs
dec
fcomp
add
mov
fstp
test
fs
cmp
fdiv
sbb
mov
xrstors
or
arpl
aaa
push
inc
cld
dec
xchg
fstp
sub
push
mov
push
dec
rcl
jge
push
mov
(bad)
or
or
adc
xor
lods
push
jbe
mov
mov
clc
push
mov
pop
cmps
ins
(bad)
out
ret
(bad)
mov
inc
pop
push
inc
dec
mov
push
sub
and
adc
xor
add
les
xor
pop
leave
xor
push
cmp
mov
cmp
(bad)
jo
dec
shl
jp
clc
sbb
getsec
mov
push
das
jb
sti
stos
xor
cmp
std
mov
and
ins
xchg
push
add
mov
test
xchg
daa
adc
mov
sar
into
dec
(bad)
pop
std
jmp
mov
daa
add
jnp
daa
int3
popa
(bad)
lds
cmp
gs
and
cmp
loope
fistp
sbb
cmc
lds
out
jnp
mov
leave
mov
test
ss
push
jno
pop
jmp
pushf
mov
adc
push
in
out
in
pop
gs
mov
add
xor
pop
mov
into
ret
mov
in
cmp
fwait
jo
mov
sbb
sub
nop
fmul
pop
call
sti
pop
(bad)
aad
aad
dec
mov
adc
xor
sub
loopne
aaa
jno
sub
ins
sbb
adc
push
mov
(bad)
outs
and
jle
out
sub
leave
in
fsub
cmp
outs
mov
shr
(bad)
push
mov
cmp
push
pop
push
sub
in
pop
aad
jp
test
pop
cwde
jne
out
or
or
cmp
pop
pop
out
mov
loope
lahf
pop
jp
(bad)
stos
dec
adc
dec
mov
out
push
or
loope
int3
aas
push
sub
les
jl
cmp
inc
add
and
sbb
inc
cmp
in
cmp
jle
cmp
repnz
fcmovnb
retf
lods
jne
das
in
xchg
or
jp
(bad)
iret
sti
sub
inc
xchg
and
push
imul
fsub
mov
rol
push
push
cmp
fdivp
in
xor
cmc
mov
pop
jo
xchg
pushf
mov
cmps
dec
inc
imul
mov
jmp
add
shl
int3
ret
(bad)
scas
loop
push
enter
mov
push
pop
es
jmp
repnz
aam
and
mov
aas
jmp
out
(bad)
call
xchg
jne
mov
neg
adc
daa
daa
mov
add
fldcw
enter
sub
push
jno
push
fadd
cli
call
scas
scas
ins
fld
mov
movs
ds
call
mov
leave
lock
(bad)
movs
push
jecxz
(bad)
in
or
in
push
mov
pop
test
stos
int3
fsubr
cmps
push
lods
or
sub
loope
sbb
and
stos
sub
mov
dec
cmps
pop
xchg
xor
test
jne
push
mov
xor
call
pop
mov
push
jne
or
jno
jae
sbb
mov
adc
add
xchg
fsub
in
and
jp
xchg
clc
and
sbb
xor
je
pop
sbb
clc
xor
(bad)
lahf
(bad)
jp
int3
das
sub
aad
or
mov
lahf
add
ret
ret
jmp
mov
and
pushf
mov
dec
jne
ficom
fisub
jg
mov
dec
fdivr
jns
shl
mov
(bad)
sar
dec
data16
outs
shl
inc
mov
aaa
outs
lea
xchg
pusha
rol
inc
js
jp
or
jecxz
add
out
xor
xor
xor
hlt
mov
dec
mov
in
shr
out
sti
(bad)
mov
aaa
imul
adc
stos
movs
add
or
nop
sub
pop
shr
mov
push
js
xchg
adc
lock
pop
push
inc
mov
sbb
dec
out
addr16
sbb
or
outs
hlt
retf
mov
add
dec
mov
add
dec
inc
pop
sub
pop
jmp
out
lods
mov
movs
lahf
in
pop
jo
mov
aaa
fdivr
mov
or
sub
sar
mov
sbb
loopne
mov
push
mov
add
nop
paddusw
add
ret
scas
pop
or
jmp
in
pop
cmps
ja
and
aas
mov
dec
div
cmps
inc
add
mov
(bad)
fadd
sar
adc
pop
add
(bad)
mov
xor
in
dec
ins
xchg
lahf
aaa
test
outs
mov
sbb
jmp
add
add
sub
jo
inc
iret
(bad)
mov
xor
mov
mov
dec
pop
xor
inc
arpl
imul
scas
push
out
out
inc
aam
call
mov
or
add
std
sbb
fs
or
das
test
sub
mov
sub
leavew
(bad)
jp
(bad)
mov
jge
jmp
mov
clc
sub
cli
(bad)
ins
je
data16
in
ret
and
call
stos
cmp
cmps
ret
pop
inc
cmps
js
retf
mov
rcl
ret
and
lods
test
cmp
xor
daa
jp
fadd
push
pop
imul
inc
jo
push
xor
jnp
mov
mov
data16
cli
icebp
lods
call
and
jecxz
sub
clc
inc
sti
inc
stc
mov
mov
(bad)
(bad)
cli
sbb
jb
aad
jnp
nop
ud1
mov
xchg
neg
or
int
mov
jl
sub
cmps
cmp
shl
test
jl
xchg
shl
rcr
jno
pop
mov
and
mov
xchg
ret
and
pop
repnz
imul
hlt
adc
repnz
mov
adc
fild
pop
ds
push
push
sub
jae
les
add
xchg
jnp
out
cli
mov
jns
mov
jg
or
stos
adc
fst
out
hlt
cmp
jmp
lahf
sub
rcr
xchg
shl
adc
add
or
push
pop
ret
(bad)
sti
inc
je
movs
idiv
jo
pop
call
and
icebp
repz
push
xchg
xchg
xchg
aam
push
ss
cdq
lock
mov
pop
test
ins
and
ja
rol
push
movs
ret
xor
push
xchg
leave
ret
les
iret
fcomp
jb
gs
dec
repz
cmp
movs
cmp
test
add
jl
nop
std
aaa
(bad)
ror
scas
dec
neg
out
jl
lahf
cmps
mov
inc
das
movs
call
test
adc
cld
xor
(bad)
cmps
push
jle
mov
xlat
adc
and
(bad)
inc
enter
jp
cwde
ss
jb
push
add
aas
or
xor
out
inc
or
call
test
js
cld
pusha
sbb
popa
and
or
pop
js
jno
mov
inc
xchg
sahf
mov
xchg
xchg
shl
lds
push
out
jmp
cmps
(bad)
mov
or
jbe
or
fld
std
ror
jp
shr
xchg
test
imul
jmp
lea
xor
jl
enter
dec
test
push
or
sub
mov
call
push
loop
jecxz
inc
xor
scas
push
bound
pop
xor
mov
imul
xor
shl
push
ins
je
movs
cmp
mov
les
xor
jns
cli
add
out
popa
xlat
or
std
mov
fcomp
xor
add
or
inc
test
lods
or
pop
cmp
aam
aas
aam
mov
shr
inc
push
in
scas
add
mov
dec
call
ds
div
test
and
cmc
add
int3
xor
jb
sub
mov
push
(bad)
mov
and
ret
push
adc
mov
outs
cli
dec
pop
jne
push
sub
push
add
pop
lds
or
pop
mov
fisttp
cwde
jno
ins
dec
(bad)
sti
xor
sti
push
inc
loopne
test
outs
adc
imul
sar
add
ins
push
mov
lods
pushf
daa
test
xor
mov
(bad)
push
cdq
adc
pop
dec
push
(bad)
shl
repnz
enter
test
mov
pushf
mov
lods
xchg
inc
xor
push
ret
pmaxub
iret
pop
lea
dec
imul
push
sbb
popa
mov
xor
sub
sbb
daa
jecxz
test
int3
pop
ss
es
and
xchg
ret
ja
fsubr
pop
xlat
xchg
mov
inc
dec
cmp
pop
add
and
aas
sar
aaa
mov
(bad)
std
mov
jno
dec
dec
movs
stc
(bad)
mov
out
fisubr
sti
add
mov
sub
xchg
mov
jmp
adc
bndstx
fld
in
sbb
push
mov
jae
jl
xor
mov
int3
lods
xor
ss
call
rol
arpl
cmp
ror
push
xor
jl
inc
(bad)
shl
out
and
dec
sti
adc
loope
cmp
out
cmp
sbb
sub
jle
mov
mov
push
ds
sbb
push
test
lds
inc
xor
sbb
and
pushf
jmp
pushf
jg
aam
pop
out
sbb
scas
cmp
cld
ror
mov
xor
mov
mov
xchg
pusha
call
bound
clc
xchg
ss
add
pop
dec
xchg
mov
(bad)
cld
push
xor
adc
movs
sbb
mov
cmp
cmp
call
idiv
push
pop
mov
xor
and
and
cld
pop
sub
push
sbb
ds
fistp
lods
fucom
cmps
dec
dec
imul
stc
sbb
adc
inc
adc
push
and
xchg
(bad)
outs
xor
cmps
cmc
outs
sar
mov
in
js
jge
cmp
pop
(bad)
repnz
das
mov
and
(bad)
leave
mov
rcr
pushf
retf
sbb
hlt
xchg
stos
xlat
xchg
or
das
mov
add
jo
push
jle
push
mov
lahf
push
and
outs
fst
mov
add
(bad)
pop
pop
imul
cld
adc
addr16
mov
mov
rcr
movs
push
in
add
mov
fadd
xchg
sahf
shl
popa
push
sbb
popa
call
enter
(bad)
aaa
inc
xor
mov
in
aaa
xor
inc
inc
adc
mov
xor
dec
call
mov
dec
arpl
adc
imul
int
mov
icebp
sbb
pop
rcr
mov
das
hlt
out
daa
loop
movs
gs
fadd
popa
aam
or
sbb
out
mov
ins
ret
and
pushf
jne
daa
in
pop
mov
rol
sub
sub
jge
mov
jbe
test
pop
mov
xchg
inc
sbb
lock
jg
inc
jg
enter
xchg
repnz
sub
pop
and
xor
std
jmp
jo
dec
jg
leave
add
outs
xchg
dec
adc
packsswb
sub
jmp
xchg
jle
and
cmp
sbb
pop
enter
jmp
repz
and
rcr
and
test
ins
push
retf
nop
mov
dec
clc
scas
imul
inc
stos
out
mov
call
mov
xchg
or
cmp
cld
xor
inc
sahf
pop
or
rcl
sub
lea
push
pop
push
sbb
and
data16
inc
mov
ds
push
loop
mov
(bad)
pop
outs
mov
loopne
xchg
or
mov
xlat
das
cmp
outs
popa
mov
mov
mov
ret
pop
jp
movs
mov
xchg
cmps
and
dec
aam
pusha
mov
movs
enter
or
pop
xchg
int3
lahf
sahf
sub
les
in
add
ds
sbb
shl
int
jl
sbb
mov
iret
push
das
xor
les
mov
mov
cdq
jp
int3
push
jae
loope
mov
(bad)
mov
mov
add
pop
or
imul
gs
mov
cmps
sbb
loope
das
call
lock
adc
add
xchg
jnp
cmp
jo
cmp
xor
lods
mov
push
sub
std
or
push
inc
rol
mov
jne
lds
ins
jmp
add
xchg
lds
sub
cmp
pop
sar
ficomp
dec
inc
loop
(bad)
stos
push
cmp
cmc
mov
mov
mov
sar
push
dec
movs
cmc
pop
in
cmp
pop
mov
mov
sahf
adc
cmps
jmp
cmc
xor
test
and
aas
sub
shl
dec
test
stos
mov
add
sub
xchg
or
jp
data16
cwde
icebp
clc
ins
push
dec
retf
js
push
add
int
mov
rol
xor
cwde
lea
and
aaa
es
mov
pop
sub
xor
clc
mov
sbb
pop
and
aam
mov
jge
js
sbb
aas
pop
scas
dec
mov
xor
inc
rol
xchg
inc
inc
leave
(bad)
sbb
xchg
xchg
and
int
(bad)
mov
pop
push
sub
xchg
push
cwde
pop
dec
sbb
jle
lods
fsubr
mov
ror
sbb
sbb
(bad)
clc
rcl
stos
jmp
mov
sbb
jecxz
scas
xchg
push
mov
push
pop
scas
mov
adc
sbb
dec
cmp
fbld
loop
out
fldenv
iret
js
xchg
out
cli
enter
mov
push
loope
pop
mov
gs
jnp
data16
push
fstp
mov
or
test
pop
cld
or
push
imul
icebp
test
addr16
jle
sbb
add
inc
dec
fstp
lahf
arpl
cmps
addr16
(bad)
mov
int3
pushf
out
in
mov
cwde
mov
add
add
sub
iret
out
dec
(bad)
adc
jle
call
mov
adc
lods
adc
xchg
repnz
push
xor
aas
add
stos
mov
cmp
(bad)
(bad)
pop
aad
mov
pop
or
push
add
sbb
out
lea
pop
xor
fmulp
shr
xchg
mov
je
jmp
fadd
cld
pushf
rcr
jne
sub
sti
fwait
dec
call
xor
mov
pop
imul
mov
nop
std
popf
ja
mov
out
xor
add
mov
shl
pop
push
cmp
mov
in
mov
mov
adc
jne
jmp
cld
repz
aas
(bad)
cld
repz
push
jnp
dec
lahf
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
and
ret
add
rcl
fnsave
sbb
xchg
xor
mov
mov
fnsave
frstor
ja
xchg
add
test
push
fwait
add
(bad)
add
jecxz
pop
(bad)
sub
std
loopne
popf
ror
mov
out
fmul
lods
ret
push
loop
clc
and
sbb
or
inc
inc
sbb
cs
mov
dec
out
add
(bad)
dec
jne
lahf
fbstp
ds
inc
imul
jecxz
ins
ins
test
fdiv
(bad)
cmp
mov
ins
push
mov
xor
mov
inc
add
push
cmc
adc
xlat
dec
sbb
cmp
popa
cdq
pop
xchg
mov
or
std
dec
sub
std
mov
push
pop
jae
clc
cmps
mov
push
jae
adc
cmp
adc
mov
fnstcw
pop
(bad)
dec
(bad)
retf
test
es
ds
hlt
std
ins
mov
fist
popa
cmp
or
add
cmp
sbb
aaa
mov
cmps
clc
cmp
adc
shl
inc
and
adc
out
dec
xlat
lods
retf
jge
imul
fwait
ret
adc
mov
xor
ja
jge
fucom
jl
out
pop
imul
bnd
cwde
retf
jb
sub
xor
iret
shr
cmps
clc
xchg
outs
call
inc
jb
push
cmp
div
and
stos
ins
(bad)
pop
sub
or
mov
mov
arpl
push
popf
fist
mov
fwait
sti
and
sub
cmp
sub
in
iret
sub
aad
cmp
dec
xor
inc
repnz
dec
lock
idiv
mov
sub
hlt
inc
ret
jae
mov
and
daa
jp
pop
xchg
iret
mov
xor
push
movs
lods
fsub
jno
(bad)
in
jl
mov
outs
add
inc
mov
push
jae
shl
xor
or
fsub
repnz
adc
cmps
dec
setge
ficomp
test
jae
(bad)
aaa
nop
add
into
jb
cmp
(bad)
pop
jo
push
push
retf
xchg
cmp
dec
mov
aad
adc
in
add
mov
imul
mov
aas
and
dec
int
or
gs
retf
add
out
test
inc
push
imul
dec
shl
cmp
pop
adc
sub
xlat
fmul
pop
enter
loope
sahf
sbb
add
lods
or
or
loope
nop
je
xchg
stos
gs
push
stc
and
cmc
outs
jb
movs
call
bound
jns
shl
adc
imul
pop
cld
mov
lods
repnz
imul
pop
dec
dec
jmp
and
das
xchg
int3
sbb
scas
cmp
call
inc
retf
call
push
and
push
push
stc
fisubr
push
mov
ins
pusha
ret
in
mov
fistp
sti
mov
ds
bts
pop
push
or
jmp
mov
fwait
push
mov
dec
mov
sti
cmc
imul
xchg
fdivr
or
int
les
imul
(bad)
sbb
dec
fwait
cmp
bound
mov
fdiv
movs
fnstcw
shr
out
ja
nop
scas
or
je
xchg
dec
repnz
mov
jmp
cli
in
sub
mov
test
popf
inc
(bad)
jo
nop
mov
stos
xchg
or
retf
cmp
scas
retf
pop
xchg
add
popf
punpckldq
rol
inc
test
pop
ret
cmp
and
fs
jge
js
int
jno
sub
iret
pop
cmps
adc
push
aam
cs
sub
and
movs
cld
test
inc
xchg
leave
push
pop
pop
shl
dec
mov
pusha
cmp
mov
adc
imul
ds
inc
push
pmaxub
fcomp
retf
sbb
inc
ret
jmp
sbb
cmc
xchg
xor
xor
adc
mov
adc
inc
jecxz
pop
mov
cmp
mov
xor
inc
imul
xchg
inc
jp
mov
lock
int
das
(bad)
data16
enter
hlt
ins
pusha
push
mov
pop
aam
jb
dec
stos
xchg
mov
ins
sbb
and
scas
mov
aas
adc
hlt
fstp
mov
dec
mov
shl
fnstcw
std
sub
popa
stos
fiadd
inc
rol
hlt
lock
mov
sbb
arpl
cmp
pushf
mov
adc
lods
fisttp
adc
and
and
cmp
and
sub
pop
mov
push
sbb
(bad)
mov
add
jo
aad
sar
mov
fistp
fs
mov
scas
fist
aas
movs
dec
retf
mov
mov
bound
iret
clc
cmc
xlat
stos
stos
jmp
dec
dec
in
xchg
out
in
mov
cs
in
mov
adc
push
cmps
fsub
xor
dec
and
cwde
jns
sti
gs
ja
dec
je
repz
jecxz
aad
test
int3
mov
(bad)
out
or
popf
mov
add
dec
and
adc
test
loop
inc
lahf
pop
dec
mov
ins
aas
in
push
cdq
outs
bound
je
sbb
jle
inc
inc
jae
push
pusha
das
(bad)
or
fnstenv
ficom
sbb
pop
mov
fmul
test
push
aam
hlt
stos
push
movs
push
adc
dec
daa
adc
adc
or
loopne
test
popf
arpl
repnz
mov
mov
movs
push
adc
xchg
jo
fucomp
movs
je
cmp
daa
int
cs
cmp
mov
in
or
call
sub
xor
xor
fstp
outs
in
jbe
pop
sbb
cli
les
jl
sub
rcr
mov
jns
(bad)
jne
je
or
mov
cwde
inc
add
mov
je
aad
rcl
scas
lea
sbb
mov
mov
repnz
dec
mov
push
jo
mov
repz
add
xchg
inc
xchg
out
test
(bad)
sbb
test
dec
lds
repnz
cmp
push
inc
xchg
push
xchg
(bad)
xchg
hlt
mov
sub
mov
or
push
outs
nop
test
jno
fsubr
arpl
pop
aad
sar
jo
dec
and
mov
cwde
cmps
hlt
jle
or
cwde
test
icebp
dec
or
mov
stc
mov
xor
mov
pop
aaa
inc
fbstp
jl
mov
dec
test
and
int
stos
and
das
fcom
(bad)
cwde
jge
in
sbb
cmc
jg
push
fcom
sar
adc
adc
fisub
sar
pop
repnz
cmc
and
pop
push
jbe
fnsave
popf
xor
scas
cld
aas
ret
jge
pop
cmps
lea
sub
or
hlt
dec
jo
or
mov
push
dec
sbb
fcomp
add
push
fst
stos
or
fstp
inc
or
movs
jae
mov
pop
sbb
dec
and
jae
popf
xchg
pop
out
(bad)
or
jnp
test
cmp
add
(bad)
jnp
mov
push
scas
push
fst
mov
mov
test
imul
dec
cmp
sbb
cld
mov
retf
xchg
int
call
scas
int
jnp
cmp
test
mov
and
add
adc
add
mov
in
cmp
ret
nop
inc
pop
mov
ror
xor
int
stos
or
cmps
push
cmp
lock
push
cmp
sub
mov
cmp
out
scas
cmp
inc
add
jb
rcl
dec
dec
out
jne
aad
ins
cwde
pop
pop
fstp
push
push
inc
adc
or
and
fwait
add
and
cmp
mov
or
add
ffreep
lock
mov
inc
push
call
rcr
xchg
int
mov
hlt
outs
imul
shl
pop
mov
inc
fs
hlt
cmps
inc
ins
xor
mov
in
and
call
std
(bad)
div
retf
pushf
adc
imul
xchg
ss
add
movs
mov
sbb
int
idiv
add
jo
out
stos
stc
pop
mov
jle
fadd
push
sti
push
push
nop
test
retf
repnz
push
into
mov
mov
cmp
mov
in
ja
and
dec
fwait
out
mov
dec
mov
std
dec
fisttp
dec
jecxz
push
stos
xor
jmp
dec
sar
jmp
mov
push
aam
jge
into
aaa
in
mov
cmp
and
fs
dec
sti
ja
shl
add
mov
or
scas
xchg
pop
or
push
mov
pop
iret
sbb
mov
int
adc
push
pop
dec
add
add
les
hlt
or
dec
xchg
fs
(bad)
and
add
pop
scas
push
stc
(bad)
fsub
sahf
mov
sub
out
jb
xor
jno
(bad)
test
test
stos
dec
outs
sbb
inc
adc
mov
mov
bound
repz
sbb
loop
test
fld
repz
iret
mov
sub
lock
mov
daa
(bad)
lods
js
ror
adc
mov
imul
xor
mov
push
sar
ja
sub
jmp
adc
inc
sahf
push
xchg
and
ja
sbb
mov
or
jns
xor
test
cmp
test
pusha
push
pop
stos
and
cmps
jns
xchg
mov
cmp
mov
cli
pop
or
push
pop
inc
jecxz
call
(bad)
(bad)
cs
stos
jle
(bad)
mov
push
mov
mov
and
mov
dec
and
xchg
imul
and
or
or
mul
clc
mov
xor
imul
cmp
push
or
in
cld
(bad)
scas
inc
fs
cmp
push
cmps
mov
aad
into
cmp
mov
push
or
stc
pushf
outs
aas
jmp
pop
cmp
or
jns
push
xchg
mov
jle
(bad)
stos
pop
push
aad
or
pop
mov
push
fisub
push
scas
xor
push
punpckhbw
push
shl
(bad)
cld
inc
cmps
adc
push
jo
daa
inc
adc
xor
and
aad
jp
pop
jle
push
loop
dec
imul
jmp
cmp
pop
xchg
sbb
push
imul
std
cmp
add
sbb
or
sahf
push
mov
sub
adc
pusha
gs
and
call
retf
iret
icebp
push
(bad)
cmp
arpl
mov
fld
xchg
jge
xchg
xchg
lock
fst
jg
mov
gs
pop
dec
add
push
inc
mov
cmp
fld
outs
fs
popf
jns
cli
fnsave
loope
inc
fnstcw
sub
cmps
outs
dec
inc
test
iret
adc
sub
xor
je
aaa
xchg
mov
lahf
xchg
gs
(bad)
push
int
push
in
sbb
ins
loop
shl
mov
stc
xchg
push
mov
and
and
sbb
adc
jae
xlat
ror
pop
mov
mov
std
outs
dec
xchg
jmp
in
movs
loopne
jmp
mov
adc
ficom
push
inc
aaa
push
jecxz
dec
dec
sub
icebp
call
xchg
inc
out
hlt
mov
int3
dec
lds
lahf
(bad)
sub
pushw
ret
fwait
shl
pop
imul
mov
mov
pop
cmc
xchg
xor
dec
sub
je
inc
mov
ds
jns
arpl
adc
rcr
jmp
mov
imul
pop
out
stos
mov
cdq
xor
out
jecxz
push
outs
cld
jmp
sub
push
loopne
or
pop
push
fs
cli
test
mov
out
push
js
or
or
scas
les
sbb
adc
rol
inc
jns
arpl
mov
fwait
sar
stos
test
and
sbb
loope
cmp
(bad)
out
adc
fs
sbb
cmp
stos
fwait
mov
mov
das
out
sbb
fadd
cwde
sub
mov
cmp
imul
sbb
loopne
push
pop
dec
das
jne
sub
add
test
aas
inc
or
hlt
dec
fcmovnbe
cli
(bad)
inc
bound
(bad)
shl
out
and
xor
push
mov
arpl
mov
push
dec
mov
xchg
or
xchg
not
out
inc
sahf
inc
push
je
xchg
into
xchg
(bad)
mov
xor
out
dec
cmp
cli
in
push
(bad)
cli
sbb
dec
xchg
jmp
dec
pop
xor
loop
sbb
fwait
in
and
mov
cmps
loopne
dec
cmps
outs
push
test
mov
outs
sbb
fwait
or
inc
sub
ds
in
aad
lahf
mov
pop
aas
push
pop
and
jne
adc
and
mov
retf
das
sub
fwait
arpl
retf
and
gs
mov
icebp
fnsave
test
sub
mov
rol
or
mov
inc
cmc
(bad)
adc
mov
sbb
adc
inc
sub
mov
sbb
sub
xchg
mov
in
sbb
pop
ins
test
(bad)
dec
or
mov
in
sub
pop
js
jmp
int
test
add
cld
(bad)
(bad)
test
out
lock
repz
mov
rol
push
call
mov
pop
fwait
dec
fwait
inc
mov
jnp
push
jmp
and
sub
or
out
loope
mov
gs
push
cmps
pushf
cld
jge
fidiv
int3
ins
adc
pop
xchg
cwde
fistp
aam
sbb
sub
cmp
mov
xchg
pop
dec
popf
rcr
mul
sbb
mov
and
rol
(bad)
std
cs
test
fcos
(bad)
mov
cmp
scas
jbe
cmp
cld
fs
xchg
std
outs
mov
out
xchg
stos
dec
loop
xchg
or
shl
mov
mov
xor
xchg
mov
imul
jmp
lea
in
into
lock
fprem
in
sub
mov
sbb
cmc
and
call
shl
call
sub
push
imul
adc
mov
cmp
nop
add
mov
mov
daa
jp
mov
fist
push
dec
imul
cmp
test
nop
iret
add
adc
xor
jmp
sti
dec
mov
mov
and
hlt
jle
xor
inc
xchg
xor
in
in
jo
add
int3
adc
and
and
ins
repz
xchg
cmp
outs
in
es
cmp
(bad)
sbb
inc
imul
inc
test
in
aad
push
ss
cli
push
imul
cli
outs
sbb
sub
push
push
push
in
push
loop
repnz
or
mov
sub
mov
mov
mov
aas
pushf
mov
lods
ins
inc
gs
rcr
ins
pop
int3
add
pop
(bad)
jecxz
mov
push
jbe
call
and
(bad)
pop
and
jmp
jg
repnz
xchg
pop
scas
mov
jle
fcomp
cmp
pop
test
xor
mov
je
and
xchg
mov
stc
sub
rcl
mov
add
dec
jne
pop
test
cwde
mov
(bad)
adc
push
cmp
mov
mov
ja
push
loope
dec
adc
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
aas
int
in
pusha
push
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
(bad)
add
and
xchg
out
outs
and
inc
mov
movs
pop
sbb
xchg
push
dec
mov
sbb
mov
dec
or
inc
mov
stc
and
pop
rol
pop
inc
scas
aad
sbb
mov
ret
sbb
shr
cwde
push
sub
pop
cmp
jbe
aad
lods
js
adc
vpunpcklbw
pop
or
aad
jnp
mov
sub
test
sbb
jno
adc
imul
cmps
xor
jl
fsub
inc
or
jbe
add
lds
push
icebp
mov
shl
mov
test
mov
or
fwait
xchg
push
je
arpl
jmp
out
pop
mov
add
mov
int
push
in
push
jb
inc
cdq
xor
pop
inc
sub
xchg
outs
lds
jbe
cmp
xor
inc
jmp
call
enter
rol
inc
shl
xchg
js
mov
sub
push
mov
sbb
xchg
(bad)
test
call
adc
mov
jno
rol
sar
jns
push
dec
shl
cmp
sbb
outs
imul
test
(bad)
fisub
out
jmp
call
jge
ins
(bad)
jae
pushf
fld
bound
add
add
lea
jge
add
adc
mov
rcl
in
adc
dec
int3
clc
imul
mov
dec
lods
lods
movs
xchg
sbb
xlat
or
dec
out
movs
je
mov
(bad)
cmp
cmp
cmp
jno
fwait
pop
adc
popf
mov
add
mov
(bad)
into
mov
pusha
jle
test
std
xor
sub
xchg
mov
jns
jl
rcr
adc
mov
cdq
inc
mov
loopne
repz
mov
jl
adc
retf
pop
es
stos
pop
fbstp
adc
mov
jmp
jge
push
dec
inc
shr
push
test
mov
mov
mov
pop
or
jge
dec
and
push
or
inc
(bad)
push
mov
movs
dec
xchg
int
mov
(bad)
fild
popf
mov
aam
ins
xor
and
and
lahf
in
mov
cmp
push
out
arpl
fdiv
call
nop
fisub
fnstenv
mov
sbb
daa
push
or
or
call
popa
fs
pop
pop
ror
les
jecxz
pop
ja
aaa
test
call
stos
js
fadd
jae
jle
pop
mov
outs
stc
and
fcmovne
mov
and
stos
fisub
jno
mov
or
in
popa
jo
loope
jns
inc
xor
hlt
push
mov
sub
push
hlt
shl
push
aaa
cmc
imul
js
pop
mov
pushf
dec
cmp
in
lahf
add
inc
data16
add
cwde
adc
and
rcr
sub
push
sbb
sahf
or
outs
cmp
data16
js
lea
les
test
xor
sbb
mov
dec
stos
(bad)
xchg
jmp
push
xor
rcr
add
sub
call
pop
push
jmp
mov
or
push
dec
jge
mul
fst
repz
data16
pop
mov
pusha
add
icebp
sub
dec
pop
jbe
pusha
cmp
(bad)
aad
jo
retfw
or
cvttps2pi
fwait
stc
cli
or
mov
sbb
mov
jae
add
stos
mov
clc
rcr
ins
xor
or
ins
xlat
dec
sbb
dec
aad
sti
popa
mov
add
or
push
fcom
mov
jge
sahf
aaa
hlt
stos
jmp
dec
sahf
xchg
sti
and
rcl
cmp
retf
ret
xchg
sbb
mov
in
adc
sub
mov
lods
jo
(bad)
sbb
mov
mov
mov
adc
frstor
ins
lahf
ret
mov
push
mov
pop
loopne
mov
jecxz
aam
sbb
enter
mov
aas
inc
jbe
(bad)
dec
cmc
pop
movs
push
out
retf
(bad)
data16
push
repnz
in
popa
jp
and
aaa
add
mov
sahf
xor
popf
retf
or
xchg
jg
and
xchg
xchg
mov
idiv
dec
icebp
mov
arpl
xacquire
jne
outs
scas
jno
jecxz
nop
adc
cmp
lods
cmp
mov
cmp
mov
(bad)
sub
outs
or
mov
mov
imul
std
adc
les
jnp
jge
jmp
imul
std
xchg
adc
std
shl
shl
mov
arpl
pusha
aad
retf
jmp
sub
xor
test
adc
fstp
stc
out
stc
fcmovne
in
gs
ins
adc
out
xor
out
xor
push
push
and
sub
push
cmp
mov
cmps
pop
mov
cmps
or
mov
and
sbb
jg
xor
(bad)
push
mov
rcl
inc
xchg
mov
sbb
aam
rcr
out
in
and
sub
cld
arpl
call
mov
pushf
mov
mov
(bad)
sbb
or
push
pushf
and
js
push
ret
xor
js
movs
retf
mov
and
scas
ss
dec
stc
pop
push
mov
and
imul
xchg
stos
fsub
mov
mov
movs
sbb
cmp
inc
fwait
xor
jle
jns
call
in
add
push
sub
sub
or
pop
add
adc
push
mov
neg
or
js
daa
jo
xchg
fldcw
fdiv
sub
pop
clc
mov
ins
js
cmp
pop
in
jecxz
mov
jge
pop
ds
sub
jle
cmps
adc
mov
nop
shl
mov
dec
or
push
out
mov
xlat
fwait
push
mov
(bad)
adc
int
(bad)
leave
ins
mov
dec
xchg
push
cmc
and
mov
(bad)
cmp
cmps
inc
push
xor
pushf
mov
mov
mov
rcr
push
fbld
repnz
repnz
ds
std
gs
xor
aaa
inc
enter
loopne
mov
xchg
adc
sahf
mov
adc
test
fisttp
sub
mov
and
mov
add
xor
inc
push
xchg
pop
mov
sub
xor
stos
push
(bad)
(bad)
syscall
movs
aas
in
les
cdq
test
repz
ins
and
test
cmp
fidiv
add
push
cmps
adc
dec
jp
mov
call
sbb
mov
les
xor
mov
push
ret
fdivr
dec
cmps
shr
cdq
xchg
out
dec
movs
push
mov
adc
fist
and
mov
dec
push
cld
xchg
test
fs
cs
dec
cmps
sub
lods
rcr
fwait
dec
push
mov
pop
movs
ins
(bad)
pop
in
push
mov
jge
jae
mov
shr
in
inc
jnp
into
sub
ja
cmps
loop
sbb
loope
pop
sahf
(bad)
pop
mov
jp
aad
cmp
aas
jbe
cmp
jbe
call
hlt
sub
daa
hlt
xchg
sbb
xor
adc
xor
or
jmp
cwde
je
icebp
std
or
cmps
(bad)
daa
aam
pop
inc
imul
adc
mov
mov
adc
pushf
dec
cs
imul
pop
sahf
mov
adc
call
cmp
jmp
shr
and
idiv
pop
jo
push
cmp
cmp
mov
jmp
pop
dec
cmp
push
and
in
arpl
and
es
pop
pop
rcr
add
xor
shl
scas
xor
and
sub
fldcw
test
jo
call
loop
push
jae
push
out
xchg
mov
jg
pusha
ret
push
cld
pop
xor
sub
adc
jmp
sbb
mov
dec
mov
adc
inc
adc
inc
mov
add
ds
cmps
jne
mov
xor
das
or
xchg
mov
mov
test
cwde
mov
sbb
out
popa
hlt
pop
cmp
pop
ds
adc
pop
xchg
cmp
pop
leave
xchg
retf
xor
push
mov
aad
int3
mov
jp
xor
push
(bad)
neg
sbb
jecxz
test
enter
mov
inc
daa
fs
inc
shl
and
jns
pop
dec
(bad)
and
je
push
pop
enter
stos
mov
and
dec
xor
sub
mov
sub
imul
mov
mov
cmp
add
int
jmp
xlat
in
inc
lods
push
fcmovb
adc
fcom
pop
inc
sub
jecxz
push
mov
int
int3
pop
aam
clc
inc
jns
dec
mov
test
aad
inc
shl
cmp
jecxz
arpl
mov
sbb
out
inc
push
ja
test
mov
mov
std
xor
stos
fwait
enter
sub
pushf
fnstenv
push
(bad)
daa
test
xchg
mov
pushf
jecxz
fistp
lahf
sub
popf
sub
pop
popa
and
xchg
or
scas
mov
cs
and
xor
pop
add
push
jmp
inc
add
xor
jg
push
nop
scas
xchg
xor
push
jmp
mov
(bad)
push
mov
les
test
movs
or
(bad)
cmp
cmps
stos
add
pop
int
ja
sti
scas
xor
pop
js
fwait
mov
cli
fistp
aad
icebp
mov
fs
out
js
pop
leave
hlt
loope
addr16
jp
mov
scas
sbb
adc
loope
mov
inc
lea
cmp
cli
adc
pushf
repnz
stc
shl
pop
out
mov
jbe
mov
out
(bad)
jle
cmc
popf
clc
ins
out
push
in
jl
inc
xchg
repnz
xchg
test
jle
aas
pop
dec
test
cdq
ja
imul
popa
xor
jae
dec
inc
xor
sbb
xor
inc
inc
rcl
leave
in
fst
in
dec
out
fst
sahf
scas
popa
lods
ret
and
jnp
and
(bad)
iret
scas
shl
fnstenv
inc
sub
lods
cmp
and
cmp
jmp
test
jl
push
nop
inc
cs
rcr
(bad)
stos
mov
mov
cmps
jae
jae
fcomip
ja
pop
sub
scas
and
lock
mov
add
mov
dec
(bad)
xlat
dec
mov
jp
lds
inc
jae
inc
shl
ss
mov
inc
je
ret
scas
mov
pop
sub
retf
ret
mov
inc
inc
push
mov
cmc
dec
shr
sbb
fucomip
pop
push
push
pop
scas
push
(bad)
es
xchg
fstp
push
push
pushf
cmp
jp
xchg
ror
xchg
das
dec
sar
js
and
sbb
bound
adc
jbe
sbb
mov
movs
retf
das
or
mov
in
sar
je
inc
enter
jmp
iret
sti
in
and
cmp
dec
mov
adc
xchg
paddq
jmp
fld
xlat
and
xchg
push
dec
pop
and
and
test
and
repz
or
out
push
cmp
cmp
sti
pop
mov
and
imul
mov
sub
cld
jmp
mov
shl
les
icebp
push
pop
cmp
mov
ds
adc
ja
imul
out
or
addr16
test
(bad)
jmp
adc
jmp
(bad)
cmp
mov
stc
mov
and
gs
icebp
xchg
or
mov
out
repz
test
sub
inc
xor
mov
scas
(bad)
jmp
jnp
loope
out
bound
pushf
mov
pop
das
outs
div
cmp
and
int3
adc
aaa
mov
sbb
mov
aaa
test
int3
mov
mov
aam
fwait
sub
xor
jne
test
sbb
sub
dec
cmps
loop
jno
icebp
loopne
(bad)
fidivr
mov
add
adc
and
test
pop
fistp
cmp
mov
out
jmp
fwait
xchg
mov
out
xor
pop
jae
lods
push
imul
sbb
retf
and
pop
inc
or
xor
add
rol
mov
sti
out
leave
push
cli
pop
jl
sbb
imul
add
aas
or
mov
sub
mov
mov
mov
ret
les
fdiv
lods
or
lods
mov
sub
mov
jne
jmp
xor
jno
and
xor
sbb
clc
cs
test
pop
call
idiv
std
pop
daa
jl
sub
push
mov
push
pop
nop
or
adc
add
bound
xchg
out
sub
ret
jbe
pop
dec
sub
xor
(bad)
lea
mov
cmp
push
dec
(bad)
ss
daa
adc
fidivr
pop
pop
xchg
mul
lock
shl
sub
mov
dec
lds
adc
clc
stos
xchg
mov
mov
cli
cmps
push
mov
cmc
aaa
xor
adc
inc
enter
fsubr
pop
or
jmp
je
aaa
add
cwde
inc
jl
es
hlt
sbb
mov
sub
fwait
stos
add
pop
add
shl
xchg
sbb
fidivr
ja
ficom
shr
push
jbe
jae
fwait
arpl
adc
pusha
rcl
jmp
movs
rol
or
outs
repz
and
inc
xor
sbb
in
loope
jne
out
shl
cmp
jns
pop
sbb
mov
cmp
stc
mov
sbb
xchg
mov
sbb
mov
test
dec
(bad)
fidiv
xor
dec
cmc
pusha
cld
mov
push
pop
lock
xor
mov
sub
(bad)
leave
pop
mov
ss
das
enter
out
mov
popa
fisttp
sbb
pop
scas
mov
(bad)
fldenv
push
nop
cmc
push
mov
sub
adc
add
lods
sbb
gs
(bad)
shl
in
mov
cs
pop
push
aaa
adc
cmp
(bad)
or
cld
and
sbb
push
loope
sub
mov
iret
mov
aad
in
mov
jmp
adc
push
xchg
cmp
std
mov
scas
xlat
(bad)
outs
test
mov
jns
test
or
cs
je
sbb
or
mov
test
cmp
jg
xchg
ss
mov
dec
push
jns
jno
mov
mov
std
std
shl
inc
mov
jmp
mov
scas
jmp
mov
fdivr
data16
mov
jmp
gs
fmul
out
daa
fdivr
lods
or
inc
imul
pop
data16
in
push
fwait
divps
stos
sbb
mov
mov
repz
rol
fwait
cmp
jmp
jl
push
dec
or
lock
fstp
cmp
std
push
adc
popa
push
out
or
mov
jl
daa
icebp
jle
or
push
fwait
(bad)
push
ja
push
ins
sbb
sbb
add
test
cli
dec
cmp
jns
dec
ins
(bad)
loop
xor
jno
jmp
adc
add
outs
pop
(bad)
out
mul
jmp
imul
and
icebp
mov
popa
mov
ins
sbb
ins
iret
mov
inc
rcr
adc
(bad)
jcxz
out
xor
cmps
je
js
(bad)
jmp
test
xchg
and
test
std
loop
pushw
ror
repz
xchg
cmp
sahf
sbb
repz
sub
jge
sbb
enter
push
dec
in
mov
ja
pusha
add
rcr
jae
xor
adc
pop
(bad)
repz
(bad)
cld
out
(bad)
stc
iret
jg
pop
add
call
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
xlat
add
and
out
sbb
and
shl
inc
mov
inc
jmp
mov
and
(bad)
mov
and
idiv
mov
lahf
js
pop
add
cmps
dec
push
or
ins
xor
push
ins
or
pop
clc
loopne
mov
fbstp
test
(bad)
arpl
pop
dec
arpl
xchg
jmp
push
add
push
sub
stos
sub
movs
outs
das
pop
dec
clc
xor
xor
and
es
sbb
push
popf
ror
shl
mov
jg
or
loopne
adc
ror
loope
nop
adc
and
in
xchg
jecxz
jbe
inc
jl
xor
dec
pop
cmp
mov
or
or
or
jbe
aaa
dec
sub
retf
pop
pop
mov
xchg
ins
in
sub
mov
or
cmp
ret
push
mov
icebp
sub
xchg
in
(bad)
lods
cmps
pop
or
in
imul
sbb
and
xchg
xchg
call
inc
add
cwde
inc
sub
add
lea
pushf
sti
cmp
pop
xchg
je
cli
mov
loope
loopne
popa
jnp
add
mov
adc
cmp
xchg
arpl
jbe
into
cdq
outs
lds
les
dec
leave
out
dec
ins
(bad)
dec
adc
cdq
fst
fld
or
adc
hlt
pop
cmc
mov
adc
std
and
call
pop
dec
push
pop
aaa
fadd
dec
nop
std
cwde
icebp
push
dec
int3
mov
mov
mov
jnp
fbstp
xchg
mov
adc
mov
pusha
ret
rcr
mov
inc
pushf
xchg
hlt
adc
cmc
push
inc
retf
xchg
inc
int3
mov
bound
(bad)
or
cld
sub
xor
inc
inc
sbb
push
imul
pop
(bad)
mov
in
aad
push
clc
lock
dec
xchg
xchg
or
mov
fisttp
xchg
cmp
adc
or
aas
push
adc
mov
mov
sub
and
jge
pop
icebp
iret
xor
and
into
repnz
cmp
mov
adc
mov
push
idiv
cmp
scas
dec
adc
lock
(bad)
adc
imul
in
sub
add
out
mov
or
fs
jno
imul
ror
mov
mov
stos
inc
ja
and
jmp
inc
push
mov
push
bound
add
sub
push
ja
ins
leave
xchg
pop
cdq
pop
pop
cld
push
movs
les
popa
outs
dec
sub
std
repnz
sbb
adc
fild
(bad)
or
pop
push
mov
mov
fisubr
sahf
mov
or
inc
outs
add
cmp
arpl
ret
add
adc
imul
stos
int3
in
jb
ffree
mov
mov
jbe
mov
or
sub
or
cmp
jle
pop
aas
out
pop
(bad)
(bad)
mov
adc
bound
stos
lock
icebp
das
imul
gs
jnp
mov
dec
cmps
sti
push
fsubrp
ins
fsub
xchg
fst
jb
jno
mov
scas
cmp
sub
stc
pop
sub
push
icebp
mov
inc
add
inc
aaa
mov
into
mov
cmc
idiv
sub
lahf
mov
cwde
pop
int
call
pop
inc
daa
outs
scas
stc
mov
cmp
xchg
xor
xchg
or
dec
pop
jnp
push
out
adc
fcom
or
es
mov
shl
mov
enter
shl
xchg
push
pop
dec
adc
push
shl
iret
or
pop
jns
pop
(bad)
jmp
inc
lods
pop
std
imul
cli
jns
(bad)
rol
fldenv
xor
jg
shl
push
jno
out
test
clc
sar
js
jle
push
inc
retf
cmp
enter
or
push
aas
popf
pop
ret
jmp
mov
mov
pop
sti
add
dec
mov
push
jnp
sbb
fld
adc
push
lea
mov
jge
movs
mov
mov
sti
mov
push
inc
cmps
out
cwde
jmp
adc
mov
mov
dec
inc
aas
cmp
neg
jmp
test
sub
xchg
scas
repz
xor
inc
mov
adc
jmp
dec
sar
retf
mov
sbb
out
sub
(bad)
cmp
jb
ins
jp
jle
jmp
or
mov
push
cmp
dec
out
ja
sub
xor
inc
sbb
js
mov
jbe
mov
adc
or
cmp
fisub
mov
mov
xchg
retf
sub
cmp
nop
mov
and
fld
std
dec
pop
xchg
or
cdq
pop
inc
add
xchg
jno
push
pop
cli
mov
push
in
xlat
out
mov
fisttp
shl
push
in
or
movs
mov
mov
retf
adc
rcr
inc
test
add
push
aas
(bad)
mov
lods
jae
div
cmp
outs
leave
xlat
cwde
pushf
add
mov
lea
xor
mov
lods
popa
dec
jl
mov
ds
(bad)
and
imul
out
mov
push
(bad)
icebp
adc
rcl
imul
mov
jmp
nop
jmp
imul
push
xor
(bad)
mov
or
cmp
ret
outs
or
mov
sbb
lods
(bad)
gs
call
icebp
ss
test
adc
neg
push
xor
fmul
sub
sar
mov
mov
push
adc
jmp
mov
lahf
ss
and
retf
mov
loope
mov
test
mov
adc
imul
jecxz
xor
cmps
mov
inc
add
das
enter
(bad)
cmp
push
push
cwde
(bad)
xlat
clc
clc
or
or
lods
fcmovne
es
in
adc
inc
lahf
jb
add
inc
je
jecxz
jmp
loope
popf
mov
cdq
inc
jecxz
ins
mov
pop
cmps
lahf
push
dec
lea
mov
jo
not
mov
inc
iret
or
jle
in
push
in
not
bound
mov
imul
pop
mov
sti
das
dec
or
add
int3
popf
test
ins
sub
sub
sub
dec
es
fs
aaa
cli
jne
out
jmp
mov
xlat
push
xor
add
nop
push
adc
xchg
push
sti
push
mov
in
sub
std
add
imul
lds
jmp
or
shr
xlat
sbb
xlat
imul
cmp
mov
add
fnsave
inc
mov
cli
mov
outs
adc
rep
ins
mov
out
mov
pop
adc
lods
sbb
stc
push
push
(bad)
mov
bound
cmp
mov
daa
dec
aas
and
jnp
mov
and
xchg
mov
mov
sub
sar
enter
scas
cmp
(bad)
aam
retf
jmp
mov
xchg
popf
or
test
int
push
inc
or
pop
mul
jbe
cmps
clc
pop
call
or
xchg
stc
push
ja
loop
sub
xor
jecxz
data16
cmc
loopne
adc
mov
test
push
cmp
jecxz
lods
into
lea
cmp
int
fadd
imul
cmp
xchg
jecxz
mov
or
addr16
xor
popa
je
sub
fwait
pop
mov
push
cmp
fdivr
pop
lahf
lods
int3
jb
cmc
retf
(bad)
(bad)
push
sub
mov
cdq
xor
push
(bad)
push
pop
push
mov
dec
push
sti
adc
mov
adc
push
pop
call
jmp
pop
dec
jp
jmp
enter
aas
xor
sbb
sbb
mov
aam
or
outs
push
ins
mov
sbb
and
mov
(bad)
jmp
mov
repnz
call
(bad)
out
xchg
scas
(bad)
mov
xor
or
xor
stc
in
pop
jge
sbb
and
pop
cmp
add
in
das
rcl
aas
retf
jmp
std
out
in
or
jmp
daa
cli
cmovg
shl
outs
fnsave
cli
or
xchg
out
nop
cmp
test
imul
sub
xor
add
and
movs
xlat
mov
(bad)
in
scas
pop
push
movs
cmps
ror
icebp
mov
inc
push
stos
outs
xchg
cmp
adc
push
fwait
dec
mov
adc
pop
jnp
add
(bad)
mov
adc
call
jecxz
in
imul
adc
ds
xor
pop
ja
mov
arpl
imul
test
jp
(bad)
pop
pop
cmp
adc
out
mov
adc
addr16
cmp
sets
dec
push
or
sbb
dec
je
je
ins
or
mov
jp
repnz
clc
stc
mov
cs
push
jge
dec
scas
dec
cli
or
arpl
fdiv
inc
add
dec
mov
add
dec
xor
sbb
clc
push
nop
push
jbe
mov
fs
movs
sbb
inc
nop
pop
ds
add
add
adc
fs
cmp
stc
pusha
push
inc
mov
xchg
add
icebp
push
or
into
scas
sbb
and
inc
rcr
in
mov
js
pop
dec
outs
popa
add
ret
mov
cmp
dec
push
aad
in
dec
xchg
xchg
sti
sahf
mov
cmp
mov
mov
push
cmc
out
mov
xor
add
data16
je
jb
jae
fs
dec
outs
jns
mov
lahf
cmp
rcr
cmp
fidivr
test
loope
mov
jns
jmp
enter
jl
into
call
imul
scas
das
lds
xchg
jle
dec
adc
out
add
mov
in
test
mov
or
imul
lods
(bad)
xchg
adc
jns
lea
ror
ins
das
cmp
les
call
adc
leave
and
or
push
cdq
retf
sub
repz
outs
leave
fcomp
jg
mov
mov
jne
aaa
xlat
stos
cmps
add
mov
std
fcomp
sbb
ror
jno
add
xchg
mov
sbb
jmp
fadd
(bad)
clc
lea
dec
ret
out
inc
hlt
ss
inc
sub
cwde
gs
push
push
jp
pop
fnstcw
movs
adc
sbb
loopne
(bad)
in
adc
push
mov
mov
shl
jae
pop
jle
inc
pop
nop
push
push
add
push
sbb
sbb
cmp
or
vpaddsb
add
lahf
test
xchg
frstor
mov
adc
mov
out
cmp
fcmovbe
(bad)
fdivr
sbb
sti
and
jnp
cmp
rcr
imul
call
dec
mov
in
jbe
sahf
adc
mov
ds
mov
imul
cmps
or
js
sbb
test
aad
fs
pushf
mov
ins
retf
add
inc
xchg
mov
loop
xor
and
sub
sbb
cs
jns
jmp
sub
mov
mov
pop
out
gs
add
sahf
leave
daa
das
retf
test
nop
dec
loopne
sub
xchg
scas
stos
sub
popf
clc
cmp
in
ror
packsswb
(bad)
jns
xchg
icebp
adc
in
adc
cmps
and
out
dec
add
mov
jmp
sbb
retf
cmp
out
sbb
jge
ret
sub
test
leave
daa
push
jle
and
std
cmp
les
push
daa
test
inc
jo
lods
mov
popf
or
fwait
pop
sbb
out
ret
jbe
sbb
xor
dec
push
pop
sbb
jne
mov
rol
pop
push
dec
js
xchg
mov
push
or
enter
xor
adc
and
inc
shl
sbb
inc
cmp
push
and
inc
jns
add
pop
into
push
add
in
mov
sub
xor
mov
les
inc
jnp
sbb
mov
and
xor
mul
pop
lods
pop
mov
adc
mov
and
in
sti
push
enter
jp
movs
std
cmp
lea
pusha
sub
adc
popa
push
jl
outs
push
stos
sub
ds
dec
ss
sbb
xor
imul
inc
dec
fwait
dec
mov
cmps
xchg
fsubr
jecxz
(bad)
scas
(bad)
jl
jo
xor
arpl
fwait
add
pop
inc
call
pop
mov
nop
jae
ja
lahf
mov
icebp
nop
(bad)
sbb
cmp
push
adc
inc
dec
gs
jmp
sbb
jns
stos
mov
cli
test
rcr
sub
stc
repnz
xor
xor
or
jno
idiv
lods
sub
and
xchg
adc
mov
cs
fsubr
fist
push
adc
sbb
add
lea
add
mov
test
or
add
cmps
loop
mov
out
sub
and
fisttp
xchg
rcr
jbe
adc
mov
nop
mov
(bad)
push
mov
pop
mov
mov
call
icebp
shl
fdiv
sbb
shr
mov
adc
out
out
imul
inc
jmp
out
test
rol
test
pop
push
vpavgb
leave
fucomp
push
mov
ins
jmp
loope
push
jbe
adc
pusha
pusha
push
hlt
ds
dec
xchg
push
shl
or
icebp
and
popf
adc
mul
or
lock
cmp
ds
xlat
out
fsub
push
mov
or
mov
dec
inc
aas
jmp
das
test
pop
emms
movs
stc
add
fucomp
mov
push
xchg
test
mov
(bad)
scas
es
sbb
add
and
sti
or
aad
xchg
jae
fcom
and
shr
pop
out
mov
imul
stos
mov
retf
push
addr16
push
mov
in
add
call
sub
jl
mov
shl
cli
cld
xor
outs
scas
cmp
xchg
mov
xchg
call
jge
scas
(bad)
repz
sub
or
sub
dec
cmps
sub
icebp
mov
mov
cmp
mov
shl
or
add
pop
pop
adc
dec
fdivr
iret
inc
jae
sub
not
jmp
cmp
ret
popf
ins
(bad)
stos
and
xchg
fsubrp
data16
test
sub
mov
mov
fisub
xor
pop
shl
xor
loopne
xor
fld
push
prefetchwt1
xchg
cmp
andnps
fwait
mov
jbe
adc
dec
mov
jmp
add
fld
aam
int3
inc
(bad)
cmc
xchg
mov
xchg
and
xor
mov
jge
cld
lea
push
lahf
pop
pop
test
jne
or
or
pop
rol
out
sahf
push
push
into
mov
dec
mov
inc
retf
cmps
cmp
sub
dec
shl
lods
mov
mov
int
loopne
(bad)
inc
jne
jnp
fs
sbb
push
rol
int
icebp
pop
lock
or
inc
mov
fucomip
xchg
cmp
mov
cmp
and
push
mov
movs
pop
scas
cmps
pop
mov
xlat
push
iret
and
fnstsw
movs
xor
jg
fcmovnbe
or
add
scas
aaa
sar
addr16
aam
mov
ins
pop
lea
jae
sbb
push
fst
xchg
or
ins
mov
sbb
push
or
int
call
fisubr
push
lods
outs
lahf
jge
xchg
retf
and
pop
dec
lea
add
mov
push
test
sar
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
push
fcom
sbb
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
data16
fisttp
mov
fwait
outs
adc
shl
jmp
out
leave
cdq
jle
enter
add
add
cmps
or
dec
push
or
fld
stc
outs
add
shl
cmp
je
cmp
out
cmp
(bad)
adc
and
aam
mov
and
(bad)
push
dec
xchg
test
adc
sbb
pop
jp
pop
imul
repnz
and
pop
icebp
jbe
mov
inc
scas
outs
cwde
(bad)
cmp
addr16
fsub
fwait
push
jbe
sar
push
lods
out
push
ja
push
add
lahf
ret
mov
jle
inc
push
pop
(bad)
mov
mov
out
loopne
mov
mov
gs
pop
xchg
xor
or
clc
pop
loope
iret
xchg
or
mov
sbb
xor
aad
clc
ins
push
ja
mov
mov
movs
cmp
(bad)
repz
xchg
lahf
adc
in
jle
cmp
fisttp
mov
inc
in
or
jne
sub
push
bound
add
and
loop
cdq
dec
bound
scas
mov
lods
js
iret
das
and
pop
in
sub
ficomp
xchg
ja
lock
lods
sub
cmps
jp
cmps
call
mov
and
dec
mov
jo
dec
jg
retf
inc
repnz
dec
cdq
test
pop
jl
jg
jo
cld
adc
or
sub
pop
test
imul
js
test
or
mov
jmp
pop
aaa
mov
les
add
cmp
mov
dec
mov
inc
leave
cmp
xor
inc
lods
xchg
mov
dec
xchg
dec
cmp
jae
add
arpl
cmc
call
jmp
clc
or
pop
or
ror
imul
pop
inc
int
out
pushf
xor
inc
dec
push
sub
mov
iret
mov
xor
call
cmps
mov
cwde
inc
push
shr
or
mov
dec
retf
jmp
sbb
inc
icebp
call
std
push
xchg
icebp
or
pop
(bad)
fimul
repz
inc
pop
fld
jge
sbb
ficomp
mov
stos
inc
jns
and
add
inc
pop
dec
adc
jp
cmp
adc
xor
hlt
mov
push
adc
repz
mov
adc
sbb
nop
loop
pop
jg
xchg
(bad)
cld
xor
sti
stos
mov
xchg
push
pusha
repz
or
jg
cvtps2pd
lahf
sub
jp
addr16
test
popf
dec
mov
mov
mov
iret
cs
cmp
popf
add
and
idiv
mov
cmps
mov
and
xchg
std
dec
scas
stos
pop
xchg
jns
sbb
adc
cli
bound
jns
mov
lds
inc
int
repnz
dec
jb
mov
popa
or
lock
movs
adc
xor
dec
sbb
es
lock
or
data16
stc
cmp
dec
mov
pop
clc
cmc
repnz
fcomi
ins
out
jae
add
inc
daa
retf
lods
idiv
hlt
iret
and
test
inc
popa
mov
loope
mov
out
jle
push
dec
aad
movs
sbb
test
loope
inc
and
inc
sbb
add
call
std
lea
cmp
aam
ds
adc
fidivr
cmp
cmp
adc
mov
or
sahf
mov
mov
push
add
lds
popa
sbb
mov
lods
int3
push
pop
(bad)
cwde
adc
rcl
dec
pop
gs
pop
(bad)
std
jmp
movs
sub
out
xchg
add
inc
mov
add
jl
or
jno
(bad)
enter
faddp
pop
xor
pushf
xchg
ss
lods
dec
out
pop
int3
jno
cwde
js
ror
add
movnti
jae
pop
push
push
outs
sbb
in
aad
and
clc
test
imul
pop
inc
mov
push
lods
dec
in
adc
into
mov
xchg
rcl
lods
cli
sbb
stos
call
in
jb
and
add
lds
arpl
pusha
adc
jns
nop
div
outs
icebp
loopne
stos
je
mov
arpl
xor
jmp
xchg
shl
xchg
xchg
stos
or
shl
arpl
gs
lods
addr16
jns
int
add
pop
in
lahf
mov
rcl
mov
loop
lds
movs
push
dec
in
mov
dec
sub
mov
inc
rol
pop
sbb
addr16
mov
retf
loope
xchg
neg
xchg
loop
xchg
mov
cdq
add
push
sti
or
sub
test
imul
rcr
and
in
outs
adc
bound
mov
enter
fisttp
adc
pushf
mov
xlat
jns
and
sub
push
sbb
sbb
scas
pusha
call
push
push
jmp
icebp
adc
jno
ins
pop
jo
or
and
or
inc
sbb
stos
pop
pop
jecxz
int3
in
adc
fisttp
int3
aas
or
call
jl
push
dec
jbe
cwde
pop
lock
mov
movs
in
outs
pop
cmps
pushf
stc
or
push
push
jno
inc
repnz
pop
and
cmp
xchg
mov
lahf
dec
outs
inc
push
movs
sbb
test
lock
mov
adc
add
shl
out
or
pusha
add
pushf
out
xor
xchg
test
mov
mov
sbb
cmp
ror
in
pop
outs
cmps
mov
(bad)
jmp
mov
xor
pop
cld
push
push
xor
and
xchg
sub
(bad)
leave
aas
mov
pop
inc
jmp
clc
xchg
test
or
mov
mov
dec
int
cmps
add
push
shr
outs
popf
mov
lea
shl
daa
jbe
pop
pop
(bad)
scas
(bad)
and
int3
pop
stos
les
xchg
loope
ja
leave
retf
and
ret
dec
scas
gs
and
and
push
inc
loopne
cmp
scas
xor
sub
pop
and
je
xlat
ret
adc
bndstx
xchg
cmp
int
jp
cmp
cmc
push
push
cmp
lods
and
dec
sub
std
xchg
mov
push
xor
xor
aas
fs
test
cld
cmp
sahf
daa
adc
icebp
mov
cmps
scas
pop
mov
outs
xor
mov
inc
adc
test
mov
ins
xlat
fisttp
lahf
mov
mov
push
adc
sti
retf
push
jmp
adc
pop
ret
sub
lods
cdq
ret
dec
rcl
jl
sti
adc
pushf
outs
out
in
jle
pusha
mov
inc
aam
fild
and
inc
hlt
icebp
dec
jg
xor
(bad)
popf
jg
cli
movs
mov
cmc
jmp
loope
retf
xlat
sbb
pop
retf
add
in
push
shl
ja
or
cmp
es
clc
sbb
adc
in
retf
clc
into
call
mov
jb
nop
(bad)
push
xchg
lea
or
lods
cmp
push
sbb
mov
leave
mov
dec
jb
stos
test
ja
jns
xor
inc
mov
imul
pop
test
out
fs
xor
cmps
stc
stc
dec
shl
mov
xor
adc
arpl
xchg
js
jno
push
mov
add
(bad)
out
lds
sub
jno
xchg
and
pop
mov
xor
call
xor
lds
js
(bad)
nop
bound
dec
or
(bad)
ss
add
jnp
sub
mov
cmc
jle
popw
xchg
scas
out
sub
loope
cmp
mov
test
dec
push
inc
mov
movs
mov
movs
push
cmp
lea
idiv
pop
push
lods
xlat
gs
dec
mov
sti
rol
test
leave
js
in
mov
cmp
int3
jmp
cmp
stos
adc
or
mov
ja
xchg
nop
pop
sub
imul
xchg
dec
(bad)
jne
movs
push
enter
jns
adc
pop
sub
push
lahf
test
cmp
xlat
push
xor
inc
mov
mov
mov
js
cdq
sbb
mov
lods
(bad)
into
xor
ins
int
movs
into
mov
dec
sub
mov
jb
jbe
inc
and
xor
xor
loop
sub
cmp
adc
dec
rcr
cmp
div
mov
jno
jle
push
stc
mov
mov
adc
fs
pop
or
push
lsl
pusha
or
cld
cmp
jns
stos
jne
jmp
mov
jge
dec
jle
sahf
jne
repz
xlat
sub
sbb
push
mov
addr16
mov
inc
wbinvd
xchg
xlat
mov
push
sbb
or
sbb
inc
imul
std
shl
pushf
dec
mov
jb
inc
sbb
mov
inc
push
inc
test
enter
pop
jle
ins
and
enter
push
adc
lea
or
ja
mov
cld
lea
jmp
xchg
lods
xchg
xchg
jge
cli
repz
(bad)
jb
fiadd
xchg
sbb
jns
jp
(bad)
mov
into
mov
xchg
pop
sub
cs
sar
adc
inc
sub
std
jns
or
or
cmps
jnp
lahf
add
imul
lods
cld
or
inc
icebp
outs
popf
je
jmp
jge
in
push
gs
push
loop
test
outs
adc
daa
pop
xchg
shl
in
addr16
mov
xchg
outs
arpl
add
inc
dec
pushf
sub
sahf
pushf
sar
fimul
lahf
jo
outs
mov
mov
sahf
aaa
pop
inc
adc
cli
inc
xor
xchg
fwait
xchg
and
mov
push
js
jne
dec
sbb
dec
xor
inc
xor
inc
push
addr16
int
jge
add
in
inc
into
cmp
lahf
sbb
cld
dec
test
inc
ret
adc
push
(bad)
jmp
pop
test
fldenv
pop
call
ficomp
mov
outs
daa
mov
cmps
mov
shl
cld
loopne
push
jne
cli
cdq
out
enter
cmps
sti
fidiv
push
and
mov
sub
pushf
call
stos
dec
in
loop
inc
xchg
fs
xor
ss
ffreep
cmp
lods
add
ins
data16
jo
adc
sbb
xchg
je
pop
jns
cmp
sub
cmps
outs
jl
fdiv
jmp
inc
fs
sbb
mov
xor
retf
push
jae
call
sbb
cmp
bound
xchg
adc
leave
jb
push
ss
xor
mov
stc
retf
push
jae
rol
xor
lock
cdq
lahf
lahf
push
jno
retf
jnp
pop
nop
test
std
push
rcr
cli
push
test
js
push
inc
inc
inc
cli
mov
jnp
enter
dec
pop
xor
pop
imul
fistp
sbb
pop
sub
sbb
sbb
(bad)
sbb
dec
cmp
sbb
mov
xor
(bad)
pop
mov
ja
pop
in
push
jo
sti
jno
js
fild
pop
(bad)
addr16
xchg
and
add
neg
mov
mov
mov
sahf
imul
sbb
out
enter
stos
mov
(bad)
div
jge
addr16
bound
or
xor
popa
mov
jno
jb
sub
sub
(bad)
pushf
mov
or
into
inc
xchg
dec
mov
pop
or
mov
fmul
jmp
jge
out
xlat
fs
xor
dec
test
and
ror
adc
movs
jbe
cmc
mov
mov
push
fadd
mov
in
xor
movs
call
xor
nop
pop
push
das
inc
mov
dec
add
jmp
lea
pop
out
(bad)
push
(bad)
loopne
and
push
cmps
sbb
in
and
rol
cmc
imul
or
mov
sti
push
test
leave
outs
xor
fimul
xor
sub
fsubrp
(bad)
jmp
dec
push
rcr
pop
cmp
in
movs
mov
push
leave
and
pop
adc
std
or
xchg
data16
jecxz
iret
into
pushf
dec
out
scas
mov
ficomp
stos
cmp
(bad)
fiadd
sub
and
sbb
lods
xchg
adc
and
sar
dec
iret
or
fdivr
mov
xor
jg
dec
xrelease
add
cld
pop
sbb
xchg
xor
mov
(bad)
jbe
jl
adc
adc
(bad)
cmp
mov
push
mov
lods
imul
mov
not
push
jae
mov
test
or
mov
cli
imul
fs
scas
fild
int
xchg
mov
cli
test
das
push
std
fwait
and
stos
xchg
and
inc
add
repnz
fs
loopne
mov
xor
test
jmp
push
cmc
sub
push
rcl
test
mov
pop
lahf
sbb
dec
sahf
es
dec
jne
sti
sub
lock
jno
js
sbb
cmp
imul
pop
push
lods
jbe
lea
fidivr
jmp
and
or
or
push
out
mov
call
mov
je
jno
test
pop
xor
jmp
push
push
movs
je
imul
add
cmp
mov
mov
test
jnp
xor
sub
push
push
lods
mov
sbb
out
shl
ficomp
(bad)
into
and
aaa
inc
pop
std
or
dec
fwait
aam
jnp
loop
sbb
fwait
sub
fadd
inc
inc
addr16
ins
mov
mov
addr16
jmp
xchg
repz
push
push
or
stos
repnz
sti
mov
adc
push
pop
dec
and
(bad)
push
les
cmp
pop
dec
sub
les
rol
add
iret
jne
jecxz
sbb
in
sub
(bad)
fsub
pushf
mov
push
shl
imul
retf
mov
and
add
push
es
xchg
fidiv
lock
(bad)
stc
icebp
jnp
push
lahf
repz
cdq
dec
adc
lods
inc
outs
sti
pop
shr
in
jbe
je
pop
jns
jb
xchg
mov
cmps
or
mov
push
mov
test
pop
sub
sbb
adc
mov
outs
lods
scas
ins
loopne
fdivr
add
retf
sbb
es
lods
pusha
popa
dec
loope
adc
xor
jne
rcr
push
fadd
push
xchg
xor
mov
ins
(bad)
pop
mov
loopne
mov
pop
fwait
imul
jns
jo
sub
rol
jecxz
pop
(bad)
aas
mov
call
or
jne
sub
in
mov
(bad)
lahf
push
push
lea
jns
cmp
das
add
js
not
jne
popa
aas
inc
cdq
popf
aas
(bad)
pusha
jmp
retf
aam
xor
nop
js
lods
retf
inc
xor
je
loope
inc
jge
pop
gs
test
scas
mov
mov
jmp
dec
pop
dec
cmp
loope
inc
pop
popf
popf
jno
aad
adc
in
popf
pop
or
ins
ret
call
add
and
jmp
repz
aam
mov
mov
push
pop
adc
mov
jl
and
xor
mov
inc
data16
loopne
test
mov
(bad)
xor
daa
nop
push
in
sub
push
dec
test
push
aad
ins
push
bound
cmp
aas
nop
mov
sub
out
aas
mov
mov
popf
scas
sub
push
sub
mul
js
sbb
or
push
adc
cmp
into
inc
and
cmp
fwait
imul
pop
repz
sbb
cmp
xor
in
call
cmp
popf
mov
outs
inc
sub
(bad)
lods
fnstsw
mov
out
and
jbe
rcl
(bad)
stc
out
jg
stc
out
jmp
lock
cs
in
add
out
pop
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmps
(bad)
aam
outs
dec
ja
mov
xor
ins
cmp
popf
call
je
outs
mov
cmp
pop
ret
sti
inc
fidivr
pop
ja
fsubr
aas
icebp
stos
enter
pop
rcl
xor
xor
test
mov
fwait
dec
or
jnp
mov
fistp
mov
retf
popf
es
ficomp
xchg
loopne
pop
cmp
xor
inc
jge
sub
sti
push
inc
iret
ss
push
and
js
jl
stc
inc
jmp
mov
dec
icebp
dec
fisub
pop
fwait
mov
test
mov
aam
or
push
sub
shl
jo
xor
or
dec
dec
and
jns
push
iret
jns
in
cmp
sub
stc
nop
push
inc
dec
fidiv
push
in
aaa
aas
cmp
cmp
add
or
imul
mov
cvtps2pd
shl
call
sbb
push
imul
cmp
xor
jne
add
push
and
cld
xor
fdivr
out
xor
add
ret
sbb
push
or
aaa
sbb
mov
fiadd
mov
ins
cmp
pop
cmp
and
ins
les
out
mov
jns
xchg
sar
xor
or
mov
xor
loop
aas
repz
cwde
xor
jmp
or
icebp
scas
sub
fcomp
retf
dec
mov
push
cmp
mov
add
popf
(bad)
lds
inc
mov
mov
inc
adc
sbb
gs
loop
add
leave
cld
test
test
sub
jle
call
and
lock
fbstp
push
loop
lds
jmp
js
iret
das
sub
call
push
into
sbb
clc
xchg
lods
jmp
pushf
jbe
(bad)
xchg
daa
sbb
jp
add
les
adc
add
cs
scas
lds
(bad)
lods
shl
inc
mov
xchg
sub
sahf
lds
mov
pusha
outs
call
and
jno
in
(bad)
call
xchg
sub
cmp
add
or
xchg
sub
gs
xor
pusha
pushf
pop
adc
fisttp
sub
stos
das
fst
pop
mov
repnz
(bad)
getsec
add
sub
or
aad
sti
mov
xor
sub
fnstcw
sti
push
movs
lea
xchg
mov
mov
ds
sub
cmp
xor
loop
jle
mov
lds
inc
jae
pop
jbe
in
or
and
jne
xor
push
jbe
jne
add
and
fmul
gs
push
jmp
mov
push
fisttp
inc
mov
add
pop
sub
inc
inc
xor
mov
or
sbb
enter
mov
dec
sti
sub
das
inc
pop
test
cmp
std
jne
adc
mov
jmp
jnp
rcl
add
jnp
jl
out
fnstcw
fisttp
push
push
jge
fidiv
sub
fsubr
rcl
mov
and
aaa
cld
and
pop
(bad)
mov
mov
or
jae
and
cmps
shr
repz
sub
ja
and
in
sub
lods
jp
stc
mov
push
and
ror
push
les
stos
inc
sbb
push
cmp
sbb
std
xor
jo
out
pushf
add
mov
mov
scas
fstp
outs
and
(bad)
fnstcw
(bad)
cmpxchg
dec
pop
jle
bound
adc
pusha
push
lods
mov
int
cmc
push
inc
xor
mov
inc
stos
mov
cmp
jno
cmp
pop
pushf
adc
and
dec
lahf
movs
icebp
inc
cmps
mov
aaa
movs
std
aad
lahf
gs
(bad)
ins
ror
jmp
mov
mov
push
pop
sbb
(bad)
clc
pop
inc
ins
stos
aam
sahf
call
shl
(bad)
pop
cwde
aas
data16
mov
pop
in
pop
repz
push
pop
add
or
sub
cmp
shl
outs
mov
shr
fstp
xor
fwait
clc
call
push
cli
dec
push
pop
adc
cmps
cmp
test
cli
ficom
xchg
repz
jbe
arpl
dec
call
cwde
cmp
xor
loope
sti
rcr
lahf
ins
jne
mov
out
nop
push
mul
retf
iret
and
stos
shrd
xlat
mov
and
or
inc
clc
jmp
imul
rcl
ret
sbb
cli
cmp
mov
retf
xor
ja
lods
fistp
or
mov
cmp
call
data16
sub
sahf
call
add
mov
out
dec
jb
test
es
stos
adc
stos
out
jecxz
shr
dec
dec
imul
mov
push
dec
cdq
xor
pop
mov
xchg
outs
in
sbb
sbb
xor
xchg
test
addr16
adc
jle
popf
dec
or
in
sbb
retf
stc
xlat
into
and
scas
jecxz
dec
inc
test
mov
int
push
sub
movs
mov
or
sbb
mov
cmps
(bad)
cmp
push
scas
(bad)
shr
and
jmp
shl
or
add
or
lahf
inc
mov
adc
jno
(bad)
jmp
shl
mov
mov
or
or
ficomp
pop
push
push
pop
jo
enter
xor
jge
xchg
pop
jnp
jno
adc
std
cmp
aad
adc
mov
jmp
sub
inc
(bad)
mov
push
das
lods
hlt
xchg
and
inc
ins
mov
pop
daa
icebp
movs
les
xchg
movs
ret
in
not
bound
add
push
addr16
cdq
leave
lods
ins
cmps
test
icebp
pop
lods
pop
rol
repz
retw
adc
ss
cmp
not
scas
(bad)
cmp
push
xchg
mov
das
outs
or
imul
fcomp
(bad)
arpl
xlat
push
or
outs
call
mov
int3
repz
lock
dec
imul
lods
scas
push
dec
push
ja
icebp
push
movs
(bad)
out
lods
stos
lock
jp
(bad)
bound
jl
int
sbb
cs
cmps
(bad)
cli
clc
arpl
out
fcomp
sbb
ins
and
adc
jp
mov
adc
(bad)
(bad)
sub
popf
test
lods
arpl
test
cmp
ja
push
loopne
and
pushf
mov
or
(bad)
int3
xchg
in
xor
mov
adc
mov
in
fisttp
js
fsub
mov
(bad)
(bad)
fdivr
add
retf
xchg
lods
nop
jmp
pop
in
mov
stos
sub
mov
mov
and
pop
adc
test
clc
and
cli
add
sub
xchg
xor
aam
aam
sbb
outs
outs
mov
cmp
outs
and
and
sbb
stos
(bad)
mov
mov
inc
or
dec
jecxz
xor
pushf
arpl
fcmovbe
mov
das
push
xor
dec
sahf
sbb
mov
fisttp
lahf
add
or
jp
sahf
pop
sbb
daa
push
std
loop
cmp
loop
mov
xchg
sbb
test
cmp
xchg
cmp
cmp
stos
pop
jmp
pop
call
icebp
push
push
leave
xlat
and
pushf
enter
push
and
mov
cmp
pop
retf
jmp
cmps
stc
xchg
mov
jmp
push
aam
(bad)
mov
jecxz
shl
shl
inc
jns
dec
mov
ficomp
daa
mov
(bad)
push
out
mov
xor
mov
sub
je
mov
int3
mov
out
mov
out
lods
push
mov
mov
inc
and
xchg
adc
mov
jo
stos
mov
cmp
inc
arpl
fisttp
pop
js
retf
add
sbb
xchg
jmp
cmc
dec
add
and
or
shr
mov
push
mov
clc
dec
mov
pop
popf
movs
cmps
dec
cmp
inc
rol
rol
jns
loopne
mov
pop
mov
fisttp
cwde
rol
(bad)
xchg
out
imul
and
sbb
push
cli
push
cs
in
push
mov
call
dec
inc
les
mov
mov
(bad)
sbb
popf
xor
retf
or
idiv
mov
and
adc
push
lea
sahf
(bad)
jmp
lahf
test
inc
cli
sbb
jae
call
addr16
pop
mov
or
or
movs
push
sub
jno
int3
dec
sub
xchg
cmp
lahf
push
jl
mul
adc
fisttp
sub
enter
jmp
jp
lea
neg
xchg
push
pop
xchg
ins
jae
sbb
aad
stos
push
shl
mov
jb
mov
imul
pop
stos
fadd
test
data16
cmp
pop
xor
add
in
clc
jae
sar
xchg
(bad)
jl
cmp
mov
rcr
mov
icebp
outs
les
pop
(bad)
(bad)
cwde
(bad)
in
inc
aad
adc
sti
je
xor
mov
inc
cld
mov
jno
xchg
fstp
cmp
leave
sub
dec
sbb
dec
sti
push
push
scas
popf
test
add
mov
pop
loop
imul
pop
lahf
inc
xchg
jle
(bad)
jb
and
pop
hlt
push
mov
and
int3
mov
jmp
add
lds
sbb
inc
xor
xor
xchg
popf
sub
ja
ja
call
jne
int
mov
scas
adc
add
ins
mov
ret
test
mov
pop
popa
lahf
or
inc
sbb
xchg
inc
push
push
addr16
fadd
inc
and
sbb
repnz
fcmovnu
stos
idiv
arpl
pop
(bad)
push
xchg
mov
mov
loop
xor
dec
mov
and
cs
mov
or
ins
dec
les
fstp
sub
jl
js
sti
movs
jp
rol
ja
ja
pop
pop
hlt
push
mov
jecxz
mov
(bad)
repz
add
xor
sbb
les
sub
xlat
pop
rcl
xor
xor
test
pop
fild
cmp
push
fmul
arpl
loopne
popf
push
jp
jmp
jle
enter
movs
aaa
enter
je
ret
stos
mov
mov
mov
pushf
popa
pusha
jbe
imul
mov
fs
sbb
imul
jmp
(bad)
cmc
out
out
adc
(bad)
aas
es
scas
(bad)
aad
je
jmp
pushf
inc
bndldx
nop
aam
xchg
cmp
push
(bad)
push
fiadd
mov
xchg
stos
push
pop
hlt
sldt
pop
sub
nop
cli
inc
xor
cmp
ret
pop
test
mov
shl
xchg
aam
sub
mov
stos
mov
xor
cmps
js
loop
mov
clc
loope
mov
packsswb
xor
push
mov
push
push
loope
and
cs
lea
movs
xor
js
scas
sbb
fwait
and
sub
aad
pop
fdivr
js
sbb
jb
xchg
jns
push
mov
fidiv
out
mov
inc
xchg
or
jae
cmp
cmp
and
cmp
(bad)
pusha
pop
mov
std
ja
dec
mov
imul
sub
ds
dec
sbb
pop
cdq
fst
es
(bad)
jg
xor
test
pop
in
cwde
stos
lahf
or
stos
sbb
shl
shl
into
imul
push
or
pop
pushf
dec
int3
adc
push
mov
cmps
enter
push
shl
or
sbb
mov
push
push
xchg
or
xchg
sbb
pop
mov
es
dec
hlt
mov
jne
fisubr
cmp
sar
mov
arpl
(bad)
xchg
dec
outs
fimul
xchg
btc
imul
cmp
inc
xchg
fild
mov
push
sbb
rol
je
adc
mov
mov
fsub
push
mov
jge
push
addr16
test
or
jg
inc
pop
or
add
mov
std
mov
fcmovnu
fstp
inc
and
xchg
cdq
push
lods
out
jge
sbb
fld
jns
test
sub
xchg
lods
cmp
mov
ret
sbb
cli
jmp
js
pop
xor
or
mov
jne
scas
mov
pop
sub
loop
sbb
adc
xlat
lahf
pop
sbb
jnp
jge
clc
sbb
pop
or
neg
ret
mov
inc
cmp
cmps
add
inc
xor
test
jmp
mov
inc
cmp
int3
pop
jbe
in
jp
push
xchg
xlat
int
push
adc
popf
jbe
mov
pushf
les
jp
test
out
and
inc
clc
or
shl
mov
xor
sub
push
sub
sub
xchg
mov
repz
aam
jns
fwait
jecxz
repnz
add
jb
ins
mov
test
out
ins
sbb
jge
add
out
out
adc
push
sub
push
cmp
data16
pop
mov
push
lahf
xor
xchg
dec
aas
scas
fnstenv
sub
hlt
iret
int
loop
arpl
and
dec
jne
js
(bad)
jns
adc
fs
dec
retf
call
jle
mov
outs
pop
scas
mov
adc
xor
push
and
pop
adc
mov
adc
test
out
sbb
mov
jp
cmp
cmp
call
popa
shl
jne
nop
mov
sbb
je
je
addr16
gs
out
sub
into
mov
xchg
sbb
outs
pop
(bad)
push
(bad)
add
ja
mov
sti
out
inc
pop
(bad)
out
mov
das
test
xlat
test
xchg
sub
cmp
arpl
sbb
mov
push
dec
xlat
dec
call
cmp
test
pop
(bad)
scas
mov
mov
dec
call
push
lods
rol
xchg
xchg
repz
mov
mov
lods
push
shl
ins
adc
lds
or
xchg
adc
cmp
movs
ja
sbb
push
cmp
push
fild
jl
in
imul
lods
lahf
ja
loope
xchg
stos
xor
gs
mov
mov
fcomp
inc
mov
push
imul
bound
icebp
push
push
jne
dec
cmp
das
lds
mov
inc
pop
les
jne
pop
jno
xor
mov
js
and
shr
in
push
ja
sti
mov
frstor
add
iret
xor
cmp
outs
jne
call
data16
aaa
test
je
out
xchg
cdq
ds
frstor
aad
adc
(bad)
xchg
cwde
cmp
in
or
(bad)
xchg
je
dec
mov
adc
mov
push
xor
gs
dec
cs
out
cmc
movs
lock
movs
xlat
shl
add
repnz
shl
sbb
ja
test
sub
retf
mov
sbb
jecxz
jnp
div
daa
je
push
inc
test
fiadd
mov
popf
stos
ins
adc
cmc
inc
pop
pop
inc
jmp
out
mov
mov
mov
lahf
lock
mov
dec
stc
stc
inc
mov
stos
or
inc
or
pusha
and
push
sub
popf
push
adc
mov
dec
sbb
or
mov
add
push
jg
jbe
fs
add
xor
jge
into
mov
pushf
push
xor
popf
imul
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
jecxz
sbb
xlat
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
outs
ss
xchg
jp
(bad)
ror
int3
popf
xor
cmp
shl
cwde
outs
dec
fcmovbe
dec
(bad)
hlt
aam
mov
add
aad
cmp
xor
or
inc
push
call
lahf
sub
push
(bad)
in
push
push
out
pop
js
or
fld
jmp
xchg
pop
ds
clc
jg
ja
clc
jb
jle
mov
popf
(bad)
mov
imul
dec
jmp
cmp
sub
retf
std
push
add
pop
adc
cmp
cmp
adc
out
ins
sbb
jno
clc
cmp
dec
jmp
into
xchg
and
gs
mov
pop
cmp
bound
push
mov
pop
mov
mov
inc
(bad)
push
stos
dec
lea
lds
inc
lea
mov
sub
in
aas
fbstp
hlt
test
iret
mov
inc
mov
pop
scas
js
ins
stos
pop
loope
mov
or
(bad)
out
fucomi
inc
movs
push
iret
cmp
mov
out
aad
pop
daa
mov
dec
and
sbb
jo
into
cmp
cmp
test
enter
xor
xchg
into
in
stos
int3
lds
(bad)
xchg
bound
clc
scas
aas
add
data16
(bad)
icebp
jno
arpl
xor
in
pause
pop
loop
mov
jns
pop
mov
in
xchg
jp
inc
cmp
and
ror
jbe
test
scas
sbb
dec
push
lock
pop
push
test
aad
jecxz
jle
scas
addr16
dec
mov
repz
jmp
xor
adc
out
cld
out
jns
inc
jmp
cmp
aam
dec
xchg
add
test
mov
add
(bad)
jne
outs
add
mov
in
jp
dec
bsf
jnp
dec
mov
into
dec
jmp
xchg
inc
mov
mov
pusha
mov
pop
cdq
jle
test
pop
arpl
pop
cmps
pop
and
neg
(bad)
shl
pop
nop
retf
mov
push
sbb
jge
in
dec
pop
push
cmp
pop
mov
push
(bad)
jo
js
imul
sbb
in
adc
mov
dec
add
xor
jmp
xor
jo
shl
sbb
je
int
dec
jge
fidivr
push
jo
sub
in
sub
add
lds
dec
ja
aas
push
or
int
push
in
jecxz
push
gs
loope
jecxz
mov
enter
jmp
pusha
stos
and
mov
mov
add
and
aam
sub
and
adc
in
xchg
imul
das
push
pop
push
imul
mov
xor
xor
movs
or
clc
loope
mov
dec
cmp
xor
or
push
aad
fwait
or
lds
lds
fdivr
fidiv
retf
ins
out
inc
push
push
in
mov
xchg
lods
imul
sub
jmp
out
outs
aas
test
mov
sub
xchg
xchg
gs
icebp
xchg
dec
jl
fsubr
ja
cwde
loopne
push
mov
pop
out
xor
and
in
out
dec
adc
nop
call
sub
rcpps
push
dec
fldenv
not
and
in
add
mov
add
xor
ss
push
fst
mov
mov
out
out
cmp
shl
(bad)
and
add
dec
mov
inc
stc
stc
les
xor
int
test
pcmpgtb
clc
aas
mov
nop
fstp
cmps
ret
inc
out
xor
leave
lods
jge
push
repnz
pop
daa
mov
mov
mov
je
daa
leave
push
push
dec
xchg
imul
shl
not
shl
daa
fisttp
fcmovnu
enter
stos
xor
pop
rol
jnp
dec
sbb
clc
es
lods
in
frstor
push
scas
pop
or
cmc
mov
(bad)
sbb
push
jle
fst
sub
add
pop
mov
jecxz
daa
push
inc
cmc
jae
jecxz
pop
inc
retf
inc
loope
loope
pop
or
les
xlat
mov
mov
movs
test
and
jbe
lods
mov
dec
stc
pop
clc
pop
add
or
addr16
pop
dec
outs
rcl
and
call
jnp
sbb
out
movs
inc
add
in
or
out
lds
jbe
fsub
cwde
sbb
mov
fisubr
and
call
push
mov
call
or
pop
test
mov
arpl
push
jp
stos
and
dec
fadd
fnsave
pop
movs
retf
add
push
scas
jge
test
aaa
gs
xchg
mov
xchg
cmc
inc
mov
push
cmp
dec
inc
ret
push
xchg
lahf
xchg
scas
ret
jge
(bad)
out
mov
jbe
inc
rcr
dec
repnz
test
stos
add
xchg
and
loopne
push
aam
iret
xlat
sti
iret
push
(bad)
pop
stc
dec
sub
mov
cmp
mov
mov
inc
xlat
jns
addr16
mov
sbb
fiadd
dec
and
add
gs
pop
mov
sbb
lea
or
fimul
fwait
cwde
pop
jne
shr
mov
push
adc
pop
data16
xor
push
push
(bad)
xlat
popf
adc
xchg
or
out
ret
push
xor
adc
pop
pop
adc
lods
nop
add
mov
fwait
nop
dec
jbe
jne
scas
dec
jmp
mov
sti
cld
xchg
arpl
xor
pusha
imul
jbe
push
and
push
sub
inc
icebp
push
sub
push
push
pop
icebp
pop
je
pop
and
and
aad
cld
mov
aad
mov
(bad)
inc
push
xchg
add
lds
xchg
dec
inc
movs
popa
xchg
sahf
jecxz
add
jo
mov
iret
pop
scas
sahf
mov
sti
test
sub
clc
xchg
dec
lds
sub
adc
push
int3
int3
sub
xor
fwait
je
gs
sti
(bad)
loop
in
mov
pop
lds
repz
and
clc
mov
inc
stos
jmp
(bad)
call
outs
sbb
pop
cmps
neg
jp
mov
push
mov
push
fcmovnb
cmp
and
xchg
mov
jmp
or
push
lods
lds
ins
test
and
daa
in
jecxz
ja
clc
jns
push
add
test
mov
ins
ja
push
fnstcw
mov
cmp
mov
stc
xchg
mov
push
or
xor
ins
push
inc
push
pop
out
xchg
add
add
pop
shr
or
pop
pop
out
sti
pop
and
jb
add
movs
mov
jp
movs
jne
mov
lods
push
call
cmp
test
hlt
movs
jbe
mov
(bad)
jnp
mov
push
fwait
dec
std
mov
cwde
sbb
xchg
cmp
pop
popa
cmp
adc
test
ret
test
mov
imul
lea
fcom
xchg
out
mov
fcmove
xchg
daa
iret
(bad)
sub
repnz
sub
sub
cvtdq2ps
dec
(bad)
mov
mov
cs
sbb
dec
in
jne
push
fdiv
jl
and
ret
push
sbb
dec
push
(bad)
mov
push
jge
push
ds
(bad)
dec
sub
cmp
xor
pushf
adc
in
repnz
leave
shl
add
rcr
sti
mov
xor
jle
mov
jno
lods
cmp
xor
mov
repnz
(bad)
icebp
adc
push
ret
enter
dec
movs
pop
sar
xor
lea
mov
or
movs
(bad)
aaa
lock
push
mov
movs
cmps
mov
dec
outs
fmul
(bad)
push
lahf
jmp
fs
lahf
push
movs
(bad)
xchg
sub
jg
sub
das
loop
or
rcl
loop
push
sbb
xchg
imul
inc
sbb
mov
imul
mov
sbb
mov
aad
mov
push
dec
jae
loopne
pop
pop
cwde
adc
rcr
sbb
les
push
inc
das
fadd
ficom
js
stos
jae
adc
nop
push
ret
aas
xchg
pop
shr
or
rcr
xchg
leave
add
add
popf
pop
in
xor
push
sti
or
mov
not
(bad)
arpl
popa
shr
fwait
ds
std
stos
out
cmc
jl
iret
scas
or
bnd
leave
retf
retf
pop
pop
(bad)
push
cmps
sub
jmp
loope
(bad)
xchg
pop
ins
ss
repnz
pop
(bad)
adc
fnstsw
push
cmp
in
in
push
jl
out
ret
xlat
mov
mov
push
dec
mov
cmp
(bad)
int
fucomip
and
xchg
out
clc
push
arpl
and
arpl
add
icebp
and
cmp
push
push
sub
ds
bound
call
nop
stos
mov
mov
sbb
xor
or
leave
jbe
ins
call
mov
push
rcl
push
adc
mov
and
or
mov
xchg
adc
xchg
js
pop
xchg
sti
daa
mov
int
jnp
xor
mul
sbb
xlat
lods
jne
cmc
xlat
mov
or
mov
mov
jmp
ret
mov
mov
mov
adc
and
push
cmp
xor
pop
nop
cmps
mov
clc
jle
and
aam
sti
dec
xchg
pusha
mov
cmps
call
lock
ds
rep
pop
adc
jne
xchg
sahf
cmp
loope
cmc
ins
lods
es
hlt
hlt
jno
mov
xchg
jae
push
push
call
icebp
cmp
shr
and
ror
inc
lods
mov
and
cmps
leave
mov
and
into
dec
mov
jmp
xor
pop
js
mov
mov
cmp
mov
and
cli
adc
rcl
call
leave
lahf
std
mov
inc
data16
(bad)
loopne
mov
and
outs
js
shl
ja
fild
or
stos
inc
iret
test
cwde
mov
popf
push
neg
jl
es
sbb
pop
mov
(bad)
jecxz
je
stos
out
(bad)
jg
lock
add
xchg
test
dec
xlat
mov
es
jmp
or
sbb
inc
cmp
gs
sub
fstp
mov
sub
jg
sub
pop
inc
cmp
cs
cmp
inc
ficomp
outs
jne
or
mov
daa
pop
sub
inc
aam
jns
ds
int3
loope
or
xor
out
mov
inc
test
pop
pop
mov
data16
pop
dec
shl
pop
push
ins
ficom
inc
cmps
adc
pop
fistp
mov
xchg
and
xor
cli
adc
inc
xor
xchg
retf
mov
sub
push
or
jp
pusha
(bad)
bound
xor
in
pop
cmp
cs
mov
push
mov
das
and
inc
or
loope
popa
and
ds
cdq
or
mov
in
je
jge
fwait
inc
dec
sub
jns
hlt
int
jmp
sahf
add
leave
xor
and
push
clc
not
mov
mul
dec
mov
bound
(bad)
mov
loopne
push
sub
dec
push
push
imul
sub
mov
aaa
sub
mov
cmps
xchg
jmp
sti
mov
pop
sub
es
or
leave
iret
jae
mov
adc
sub
dec
(bad)
cli
jp
mov
or
cmps
jbe
(bad)
ja
and
mov
and
adc
icebp
add
inc
xchg
mov
cmp
mov
enter
lods
(bad)
cmp
ja
idiv
nop
inc
mov
pop
sbb
shl
pop
ret
pop
stc
fadd
fld
adc
cmps
or
push
into
cs
push
sbb
jne
mov
test
push
lock
data16
push
les
dec
in
(bad)
clc
add
mov
jg
int3
mov
rcl
jl
cmp
aaa
call
inc
sub
dec
jge
popf
ret
cmp
in
test
int
sbb
mov
es
xchg
out
sub
scas
jo
dec
and
jmp
adc
aam
(bad)
cmps
fwait
mov
xchg
mov
sub
(bad)
jmp
xor
cs
push
test
dec
hlt
push
and
cmps
sti
mov
cmp
adc
mov
sbb
push
sar
lods
jo
and
cmp
or
xchg
jecxz
jp
cmps
mov
cmps
ret
hlt
pop
adc
xchg
ffree
shr
imul
sbb
mov
mov
mov
push
sub
mov
sbb
repnz
pop
add
cmp
in
add
sbb
aaa
imul
cmp
xor
fsub
hlt
loopne
ror
icebp
cmp
pop
sub
rcr
in
stos
scas
pop
mov
imul
push
add
mov
dec
sbb
jl
mov
std
lods
xchg
dec
into
sbb
inc
cdq
test
aam
sbb
inc
in
int
arpl
mov
iret
fsubr
dec
xchg
es
scas
les
(bad)
gs
shl
out
daa
jg
aas
cs
loopne
or
int
jg
iret
and
fstp
sbb
pop
dec
sub
cmps
jb
push
shl
out
std
sti
mov
gs
pop
mov
inc
push
pop
jmp
hlt
dec
es
push
mov
mov
das
aam
sub
(bad)
pop
pop
bound
popa
sub
pop
add
mov
push
imul
xchg
mov
inc
(bad)
enter
jne
mov
jne
ins
scas
cli
sub
dec
jns
fiadd
jnp
cmp
jae
sbb
(bad)
bound
lods
mov
xor
inc
mov
jp
jecxz
stos
gs
jns
adc
stc
clc
mov
jae
(bad)
(bad)
sbb
mov
and
das
jo
mov
ins
jecxz
fld
jb
jnp
mov
test
sub
sbb
cwde
cmp
jne
add
fstp
in
imul
or
push
outs
or
shl
pop
shld
rol
cdq
stc
cs
push
mov
add
cmp
(bad)
jns
shr
(bad)
mov
dec
icebp
add
cmp
aas
pusha
add
in
pop
jns
cmp
sub
mov
add
jns
sbb
in
and
jg
bound
aad
jl
or
and
data16
pop
cld
push
mov
xchg
cmp
xchg
sbb
mov
add
xsha1
cmps
or
jl
les
mov
dec
jp
(bad)
sbb
xlat
idiv
add
mov
inc
pop
fsub
lock
lahf
les
jne
push
jl
das
ror
bound
stos
out
mov
mov
ficom
xor
bswap
add
arpl
jmp
mov
js
pushf
sub
dec
and
fdivr
in
jns
stc
out
fisubr
fdivr
lahf
movzx
xor
jmp
mov
pop
push
pop
ret
mov
test
mov
sbb
pop
lods
mov
xchg
(bad)
std
xor
cmp
dec
ror
bound
or
test
lock
fadd
aad
lock
sub
repnz
js
lea
push
jbe
xchg
imul
fs
xlat
sti
bound
fdivr
xchg
les
leave
stos
jns
push
jge
dec
ins
cwde
int
xchg
pop
mov
leave
or
jmp
mov
int3
xchg
lock
lock
jne
ins
mov
mov
or
pop
pop
jns
sbb
push
sbb
cs
rcr
sbb
enter
jecxz
cmc
aam
neg
xchg
and
les
mov
cmp
xor
xchg
mov
int
adc
not
push
retf
imul
pop
pop
scas
or
push
ror
jge
hlt
jmp
in
jnp
fstp
push
repz
lahf
jg
stc
out
jg
stc
mov
outs
aas
out
pop
pop
(bad)
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
adc
add
loopne
js
mov
addr16
ins
xor
xchg
enter
jmp
push
push
mov
and
ds
pop
inc
jl
in
jns
add
cdq
add
je
int
lock
stos
dec
pop
push
imul
pop
mov
mov
rcr
outs
dec
push
push
inc
pop
stc
dec
stc
retf
cmp
into
aas
push
in
aam
imul
cld
call
scas
and
adc
push
iret
imul
mov
dec
sub
cld
repz
jecxz
adc
inc
cmp
scas
mov
xchg
aad
push
pop
add
pop
imul
sub
pusha
push
pop
cwde
xor
mov
inc
clc
xchg
popf
or
int
out
xor
sub
pop
push
addr16
outs
pushf
sbb
es
mov
in
rcl
mov
inc
(bad)
xchg
movs
sahf
cdq
je
push
jne
into
add
xor
shr
jmp
xchg
clc
rcr
stos
and
mov
cmp
retf
cmp
mov
leave
or
adc
or
xor
adc
add
pusha
(bad)
clc
inc
(bad)
push
sub
rcr
call
jg
push
pop
out
cmps
aaa
jb
ins
or
adc
lds
test
cmp
sub
mov
xor
mov
push
cmc
and
out
pop
xchg
fsqrt
or
imul
repz
xchg
xor
fsub
mov
fwait
jmp
xor
bswap
mov
jno
push
pop
outs
(bad)
iret
clc
pop
js
das
ds
fadd
or
or
cmps
fst
(bad)
jmp
stos
outs
cmps
sbb
in
fucomp
adc
and
ds
add
test
mov
call
push
sub
loop
js
fidivr
movs
sub
pop
cs
je
pushf
mov
adc
fcom
xlat
cmp
jmp
mov
jmp
cs
xor
ret
inc
xor
mov
mov
cmp
jno
xchg
and
je
ret
mov
sbb
xchg
push
sub
ret
jmp
arpl
imul
arpl
aas
leave
lea
outs
imul
sahf
xlat
inc
cdq
jg
cmp
push
std
popf
push
aam
sbb
mov
lahf
cmp
scas
push
pop
mov
lahf
push
out
add
sbb
push
pushf
out
ds
push
loop
mov
in
shr
(bad)
cmp
lds
(bad)
fldenv
and
ret
pop
mov
push
popf
inc
mov
ficomp
out
mov
mov
xchg
ret
xor
iret
fcom
aad
(bad)
cmps
dec
or
mov
jle
pop
jp
popa
xchg
or
rep
adc
mov
and
inc
lea
hlt
and
adc
in
dec
jecxz
mov
outs
fstp
xor
scas
jg
outs
xchg
hlt
idiv
dec
popa
mov
imul
jecxz
pop
into
push
cli
out
lock
adc
js
mov
sub
fs
jno
ds
int3
pop
dec
jp
dec
test
cs
das
mov
shl
int
xchg
jb
cmp
data16
int3
mov
sbb
and
cmps
(bad)
add
and
ins
push
ins
mov
movs
jmp
fisub
push
out
xchg
stos
pop
lods
ds
sar
pop
data16
test
ins
pop
aad
adc
or
shr
in
mov
push
mov
jecxz
pushf
dec
mov
dec
or
adc
add
or
shl
pop
cli
add
inc
fld
mov
lods
pop
(bad)
addr16
jnp
inc
scas
loope
std
push
dec
mov
mov
lock
xlat
out
repz
fwait
arpl
shr
addr16
add
inc
aas
inc
cmps
add
xchg
imul
ja
xchg
out
adc
sbb
xor
pop
inc
sbb
pop
or
repnz
cmps
movs
xor
adc
lock
inc
lods
sub
sub
and
pop
push
cld
call
cmp
xor
daa
jne
retf
sbb
bnd
add
lea
mov
xor
lods
mov
(bad)
mov
add
call
gs
push
jl
int
and
popf
outs
push
dec
add
mov
stos
or
aad
jae
sbb
dec
mov
sbb
xchg
mov
dec
push
out
push
dec
mov
mov
mov
sub
jo
movs
fimul
ret
cmp
xor
pop
xchg
addr16
fst
xor
sub
jbe
movs
mov
int
push
adc
popa
dec
fisub
arpl
(bad)
aam
mov
repnz
std
xchg
call
mul
sbb
or
and
les
loope
pop
jle
xchg
rcr
dec
lock
fsub
mov
xchg
out
sub
(bad)
enter
pop
pop
call
jo
sar
(bad)
(bad)
retf
in
repnz
push
jns
lahf
cmc
test
dec
imul
and
or
outs
sbb
cs
aas
arpl
sub
sub
or
push
in
retf
mov
push
adc
sub
dec
shr
and
data16
jle
cmp
in
xchg
xor
adc
xor
out
pop
sbb
cmp
mov
add
push
rcl
les
and
mov
add
mov
jb
stc
sbb
mov
cmp
retf
mov
pop
xchg
mov
adc
pushf
mov
hlt
add
mov
int
xor
inc
xor
mov
inc
test
scas
lods
mov
aaa
cmp
cmps
xchg
repz
push
and
sub
test
or
outs
jnp
push
test
stos
sbb
into
mov
inc
cmc
sbb
cwde
and
inc
jge
retf
lods
cwde
or
pop
(bad)
into
push
popf
mov
arpl
sub
popf
mov
int
std
xchg
push
xchg
ret
mov
ja
in
aam
adc
shr
pushf
jge
sub
xor
sub
inc
inc
cmp
sub
test
ins
xchg
sbb
xchg
push
das
push
stc
mov
jp
sbb
mov
inc
fucomp
popf
adc
and
test
or
stc
(bad)
popaw
jg
stc
rcl
popf
dec
test
cmp
or
pop
lea
arpl
aaa
mov
adc
out
ds
adc
imul
xchg
daa
(bad)
imul
cld
cmps
ret
jmp
adc
pop
fadd
push
mov
pop
mov
dec
rcl
sub
out
inc
mov
mov
jb
dec
sbb
fimul
lock
pop
pop
in
inc
in
xor
es
lea
add
dec
pop
ja
iret
icebp
pop
cmp
push
sbb
dec
jg
jp
push
mov
(bad)
lods
(bad)
loop
xchg
stos
imul
add
cmc
scas
xor
loope
mov
jg
push
fwait
inc
shr
mov
add
pop
cmps
jecxz
lods
mov
clc
jge
rol
in
loope
sbb
mov
mov
jns
sti
push
jbe
jg
sbb
in
popa
mov
and
daa
xor
mov
cli
add
test
or
lods
inc
popf
shl
adc
inc
call
mov
cmp
stos
dec
fsubr
inc
mov
sub
pusha
xchg
sbb
(bad)
and
inc
mov
xchg
out
add
sbb
jnp
in
les
pop
sub
outs
inc
cmp
in
mov
adc
sub
dec
push
push
out
data16
jns
ficomp
arpl
imul
ds
mov
xchg
pop
mov
retf
sti
jno
jmp
call
gs
jno
stos
or
fst
arpl
loopne
add
stos
ror
scas
sbb
add
hlt
mov
pop
sbb
repz
xchg
stos
mov
movs
fnstsw
outs
cmps
out
fs
sbb
mov
(bad)
adc
xlat
sti
xor
(bad)
and
pop
inc
jge
adc
push
mov
movs
push
(bad)
arpl
xchg
test
push
clc
jmp
lods
jge
or
mov
test
pop
xor
ja
mov
mov
dec
pop
clc
push
into
ins
xor
(bad)
mov
movs
xchg
jle
ss
int3
sbb
out
pop
adc
dec
mov
arpl
and
rol
xor
cmp
dec
sbb
inc
xchg
int3
inc
out
dec
fild
mov
fisttp
pop
outs
add
sbb
inc
jnp
jge
inc
(bad)
aam
mov
into
sub
xchg
mov
xchg
xchg
xor
in
sbb
push
xor
inc
push
(bad)
stc
or
adc
daa
add
imul
or
cmp
push
or
into
stos
aaa
or
mov
cld
addr16
adc
adc
adc
push
or
push
push
cmpxchg
not
stc
(bad)
aad
out
pop
outs
lock
xchg
cmp
pop
or
mov
push
shl
leave
cmp
pop
push
call
sub
dec
fs
sbb
pop
inc
or
push
retf
xor
(bad)
pop
fstp
in
and
movs
sbb
sub
jae
fwait
loopne
retf
out
push
shr
icebp
cwde
pop
ins
int3
mov
sar
rcl
pop
leave
es
dec
mov
sbb
xchg
stos
add
push
and
mov
outs
arpl
adc
data16
mov
mov
pop
xchg
xor
cmp
lods
(bad)
repnz
jp
push
xchg
pop
pop
mov
out
stos
or
fldenv
dec
mov
test
rcr
mov
call
in
push
and
push
add
xchg
js
fidivr
(bad)
(bad)
sbb
inc
mov
push
bound
mov
pop
rol
pushf
sbb
cmp
mov
inc
(bad)
and
ret
rol
xchg
in
mov
mov
popf
dec
pop
dec
cld
mov
add
cwde
dec
inc
push
jae
sub
mov
adc
add
in
(bad)
xor
cmp
hlt
jl
mul
pop
cmc
xchg
dec
cmc
pop
ja
test
pushf
push
cmps
push
mov
pop
bnd
sbb
pop
jge
xchg
jne
or
mov
add
dec
sbb
mov
mov
aaa
les
adc
(bad)
outs
sbb
daa
jmp
cmp
inc
push
xchg
jp
test
iret
adc
mov
stos
imul
les
ja
lds
inc
dec
fbstp
sbb
mov
scas
sbb
out
mov
sbb
add
or
leave
imul
(bad)
lea
sub
jns
enter
mov
fidivr
push
cmp
push
inc
out
cmp
out
out
pop
xchg
call
ja
cmps
popa
jmp
outs
sub
jnp
not
cmp
cmp
neg
imul
jo
ins
movs
cli
adc
dec
gs
mov
jbe
arpl
cdq
fdiv
data16
jno
xor
jmp
rcl
(bad)
push
aaa
adc
test
sub
add
lock
sti
sub
fisttp
jnp
stos
das
data16
xchg
dec
pop
inc
inc
mov
scas
and
cmp
scas
pop
cmp
loope
pushf
fst
dec
xchg
adc
jmp
or
imul
pop
xchg
cs
int
jb
xor
shr
rcr
call
(bad)
xchg
and
ret
leave
arpl
xchg
dec
ds
jp
movs
das
test
mov
test
aaa
add
stc
leave
sbb
push
ja
jb
popf
sbb
pop
shl
sbb
in
inc
and
cmp
and
pop
cmps
push
or
lods
mov
dec
sub
add
inc
jp
pop
lea
gs
(bad)
or
aad
shl
cld
gs
and
mov
jb
adc
addr16
pop
push
xchg
data16
stos
retf
and
ss
arpl
lsl
mov
retf
jg
fiadd
int
mov
mov
sbb
test
icebp
mov
mov
imul
rcr
and
jmp
jno
sar
xchg
enter
inc
xchg
dec
inc
pop
fild
push
iret
(bad)
aad
shr
add
mov
push
sahf
inc
leave
dec
cmc
sub
push
leave
(bad)
(bad)
xlat
push
pop
mov
sub
jns
cmp
pop
add
gs
sahf
fisttp
mov
repnz
leave
pop
sbb
sub
mov
in
cmp
xor
add
jmp
dec
aas
arpl
xor
imul
stos
ins
rcr
adc
jmp
repz
jo
loopne
adc
and
loop
(bad)
int
out
les
xor
into
mov
dec
xor
cli
push
stos
dec
idiv
fwait
(bad)
(bad)
clc
out
fild
or
dec
out
(bad)
out
inc
adc
xchg
mov
mov
sbb
inc
xor
and
fisttp
add
add
cmp
mov
add
sub
sbb
shl
stc
xlat
or
fcmovb
jne
repz
mov
pop
pop
test
pop
in
int3
mov
push
(bad)
idiv
div
inc
ret
(bad)
ja
jne
cdq
daa
test
jns
sub
adc
call
adc
mov
mov
dec
jae
jns
dec
xchg
mov
fucom
dec
pop
and
(bad)
fidiv
push
xor
fs
in
pop
lock
fnstcw
js
and
sbb
add
ss
jge
movs
ror
jl
inc
jnp
cmp
addr16
loope
les
pushf
add
ret
(bad)
mov
dec
gs
enter
and
mov
or
idiv
cmps
push
in
adc
adc
loop
je
or
(bad)
imul
fwait
cwde
aaa
xlat
cld
int3
mov
loopne
mov
sub
push
mov
fisttp
jle
jge
sub
mov
ret
jmp
pop
push
cwde
push
fistp
int3
pop
pop
and
sub
jge
in
inc
jp
jle
call
push
jmp
sbb
out
popa
ja
mov
scas
mov
mov
ins
ins
xchg
(bad)
int3
jb
mov
sub
loope
fidiv
stos
popa
push
cmc
in
mov
addr16
shl
jle
popa
ret
in
mov
jne
push
jp
mov
loopne
ret
dec
dec
ds
cmp
shl
push
inc
add
inc
loope
retf
aam
mov
mov
mov
in
icebp
mov
mov
jmp
push
and
sub
push
pop
cdq
ins
int3
sahf
push
dec
and
fdiv
add
sub
idiv
sub
pop
add
add
pop
mov
pushf
jnp
and
sub
mov
jmp
xchg
movs
(bad)
ds
adc
fnstcw
test
pop
sahf
fisttp
or
pusha
ins
xchg
in
or
enter
add
mov
ins
sbb
or
lods
mov
jbe
aaa
sub
cld
mov
hlt
repnz
adc
in
rcr
movs
cmp
sub
cmc
mov
cli
jno
push
ds
leave
dec
imul
mov
mov
retf
cmp
cmp
mov
xor
fst
lds
and
ror
sub
popa
movs
movs
jbe
inc
pop
sbb
das
lods
into
pop
aas
sub
call
ins
add
scas
daa
cmp
pop
bound
bound
cmp
clc
bound
scas
dec
mov
lahf
dec
idiv
sub
outs
icebp
pop
test
jbe
clc
push
into
add
sub
pushf
and
jnp
sbb
inc
daa
pop
rol
movs
(bad)
push
mov
out
mov
out
mov
leave
mov
out
iret
pusha
xchg
add
and
inc
push
popf
and
fst
sar
cld
repz
aas
(bad)
cld
repz
push
xchg
call
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
ror
xor
sar
xor
fstp
push
mov
movs
dec
cmp
frstor
inc
xchg
fadd
mov
mov
std
and
dec
jecxz
inc
adc
mov
sbb
popf
inc
sub
adc
outs
je
sbb
jno
clc
daa
aas
inc
pop
sub
sbb
or
inc
test
or
mov
push
call
aaa
outs
jmp
or
jg
pop
jb
ror
fisubr
dec
mov
in
rcr
adc
repnz
outs
xchg
push
fdivr
jge
mov
(bad)
sub
pop
add
push
inc
pushf
(bad)
jp
ja
mov
rol
mov
dec
mov
sub
adc
or
cdq
pop
mov
in
push
movs
out
mov
fdiv
fstp
daa
jmp
xlat
jl
fwait
and
lods
sub
mov
add
xor
test
cdq
lahf
jge
cli
mov
sbb
add
dec
mov
jns
cld
jns
test
sub
mov
data16
sbb
mov
js
push
inc
in
fistp
push
jne
js
adc
outs
cmp
jo
popf
mov
jp
in
sbb
cmps
sbb
push
sub
xor
mov
cld
sbb
mov
push
xchg
cmp
ds
jg
sub
push
icebp
add
jecxz
pop
dec
cmp
ja
cmp
into
xor
popf
cld
xor
dec
sub
psubusw
pop
std
push
jg
(bad)
jle
repnz
out
jo
mov
lahf
mov
push
aam
push
cmp
std
and
call
xchg
les
lods
mov
gs
sbb
fs
(bad)
mov
ss
dec
xchg
or
mov
mov
inc
mov
rcl
lods
adc
repz
pop
mov
jmp
popf
mov
dec
jecxz
sahf
pop
jmp
movs
mov
cmp
push
inc
push
(bad)
jle
cld
cmps
ror
imul
adc
fsubr
retf
sahf
inc
(bad)
dec
mov
fsubr
loopne
sar
in
stos
pop
xchg
mov
xchg
lods
adc
push
push
push
ret
popf
int
movs
push
inc
jecxz
jmp
sbb
cmp
mov
mov
lods
jnp
hlt
sar
leave
out
mov
push
xchg
cmc
xor
or
xchg
pop
inc
push
dec
xchg
call
mov
ja
jbe
movs
mov
adc
xlat
out
push
loope
mov
xchg
jmp
imul
cmp
mov
push
lock
sub
or
rsm
sub
sbb
clc
nop
mov
lods
dec
loope
mov
and
mov
ins
mov
mov
rcl
or
sub
pushf
mov
and
(bad)
cli
scas
jns
fild
mov
shl
sub
mov
mov
pushf
sub
adc
jp
scas
jno
or
inc
ins
aas
clc
sbb
sbb
sbb
or
xchg
or
dec
jge
xor
popf
cld
mov
pop
dec
lahf
xchg
push
pop
sub
xchg
es
jae
mov
xor
mov
and
adc
adc
mov
cli
inc
ss
pop
daa
push
pop
mov
sub
cmp
sbb
ja
jne
jmp
loop
repz
fild
scas
push
ficomp
shr
pop
sbb
outs
and
and
mov
cld
aad
cmp
mov
outs
shl
jnp
inc
mov
sbb
dec
out
mov
lock
and
inc
std
add
mov
(bad)
or
mov
xchg
lea
mov
pop
and
js
dec
aam
aad
sub
xor
out
cmps
sbb
jl
mov
repnz
sbb
iret
jae
inc
and
push
bnd
(bad)
mov
sahf
pop
pushf
loope
dec
pop
or
mov
or
and
xchg
fwait
xlat
jae
in
arpl
push
stos
cli
mov
int
xor
and
out
adc
cmp
sbb
jecxz
mov
jle
fisttp
mov
push
sbb
cmc
add
mov
lock
xchg
inc
rol
mov
sbb
xchg
imul
imul
push
cmp
cmps
fucomp
pop
dec
mov
in
in
jae
mov
pop
jne
jae
and
mov
mov
mov
cmp
push
mov
push
stc
push
xchg
xor
pop
add
test
fs
mov
lock
leave
hlt
sbb
mov
adc
xchg
jmp
and
add
popa
mov
(bad)
sar
jecxz
in
fld
xchg
dec
push
and
out
and
jp
shl
xor
xor
sbb
pushf
outs
and
push
aaa
mov
outs
ret
xchg
inc
fs
xlat
cmc
sbb
pop
ret
test
dec
ret
jno
movs
js
adc
retf
imul
jnp
mov
(bad)
jle
neg
retf
push
xchg
sub
nop
pop
es
lods
xchg
cmps
out
jge
xchg
les
jge
test
push
push
jne
lea
sahf
mov
sub
idiv
jl
jle
xchg
mov
out
or
les
cdq
je
pop
add
imul
jae
std
sti
jbe
push
cmps
mov
cmovle
repz
mov
imul
pop
aam
jle
jmp
popa
pop
test
or
(bad)
sbb
outs
in
mov
xchg
mov
cmp
push
outs
add
fisttp
xchg
jecxz
aaa
sti
sbb
(bad)
dec
jmp
out
add
ret
mov
repnz
dec
in
arpl
repz
xchg
sbb
pop
call
cdq
xlat
div
test
int3
xchg
xlat
leave
outs
shl
adc
lods
xor
stc
jno
mov
(bad)
pusha
jb
call
ficom
lahf
mov
dec
in
xor
mov
jmp
dec
clc
addr16
aam
cdq
test
mov
jp
mov
cld
add
cmp
bound
shr
test
scas
int
dec
mov
das
pop
nop
and
and
adc
push
cmps
and
sbb
daa
dec
add
xchg
xlat
xchg
xor
fisubr
js
adc
cmp
clc
cmc
jge
rcr
clc
dec
sbb
loop
call
sbb
fs
test
sbb
jge
cmps
movs
test
jne
push
in
sbb
(bad)
push
push
xchg
xchg
and
xchg
fcom
fld
push
out
pop
cmp
mov
mov
add
push
mov
pop
and
xlat
push
jno
add
data16
mov
lock
mov
sub
cmp
inc
clc
or
inc
jmp
xchg
mov
inc
inc
loopne
out
push
jae
repz
sti
xlat
jmp
shl
shl
inc
stos
and
clc
adc
xchg
mov
or
xchg
shr
sbb
stos
fwait
push
pop
pop
inc
hlt
sbb
mov
push
enter
xor
in
enter
xchg
jo
xor
sub
das
dec
test
push
icebp
adc
fdivr
test
ret
jmp
(bad)
dec
test
cmps
push
icebp
and
jecxz
push
adc
or
clc
inc
xchg
fstp
xchg
adc
iret
inc
into
and
or
dec
sbb
lock
fs
mov
mov
repz
inc
add
(bad)
ss
js
xchg
inc
mov
lahf
sub
sub
xor
std
pop
ror
loop
fstp
(bad)
mov
xor
movs
xchg
dec
mov
outs
loop
pop
test
and
inc
jmp
push
mov
(bad)
retf
sbb
or
xor
in
sbb
adc
scas
movs
push
test
in
pop
jno
sub
jo
fst
pop
shl
stc
inc
push
sbb
ficom
ja
sbb
inc
fcom
stos
jno
je
int3
mov
or
arpl
fcmovbe
mov
inc
xchg
sub
shl
jg
cld
dec
cmp
inc
ins
mov
xlat
push
gs
dec
sahf
adc
xchg
lahf
jp
inc
mov
inc
jp
adc
mov
push
mov
lock
xchg
call
dec
cli
dec
fldenv
sub
jo
jg
out
sub
pop
mov
mov
sub
pop
xor
pop
xor
enter
push
std
clc
inc
js
cmp
shr
mov
sbb
out
in
or
xchg
xor
xchg
in
aam
or
repz
sbb
fs
int3
dec
dec
mov
(bad)
xor
rol
xor
xchg
into
out
adc
out
mov
xor
pop
mov
les
std
sub
sahf
add
movs
les
adc
in
sbb
fistp
sbb
push
test
outs
inc
sti
(bad)
fiadd
shl
xor
ins
xchg
inc
movs
push
sub
je
jb
ins
movs
imul
lea
dec
rcl
retf
loopne
cdq
mov
arpl
lea
into
adc
xlat
scas
push
xor
pop
cmp
jo
push
sbb
jmp
xchg
fist
mov
stos
mov
mov
call
jnp
cmps
imul
mov
mov
or
(bad)
mov
push
sti
int3
cmp
pop
gs
sbb
jno
or
popa
xor
bound
jp
es
xlat
das
cmp
jle
shl
mov
outs
inc
sbb
(bad)
push
(bad)
enter
mov
push
cld
ins
fst
and
fwait
fwait
in
fcomp
or
jbe
retf
shl
sub
xchg
sbb
hlt
ds
cmp
inc
bound
jno
scas
mov
sbb
mov
xchg
adc
add
in
mov
sti
outs
aaa
shl
(bad)
aad
mov
outs
jne
push
shl
das
cmove
cs
or
mov
mov
inc
xlat
mov
ret
fbld
mov
aad
outs
mov
mov
cmovle
xor
cmp
mov
jo
pop
test
aas
jg
and
sar
and
and
sub
(bad)
cld
and
es
aad
popa
nop
int
test
rcl
fs
jnp
jle
sbb
mov
enter
sbb
mov
jnp
cdq
je
or
lock
mov
mov
lods
sar
icebp
clc
(bad)
imul
loop
adc
(bad)
jmp
mov
xchg
out
int3
(bad)
mov
test
jg
stos
fbld
mov
inc
push
mov
popa
cmp
sbb
(bad)
or
sahf
(bad)
cmp
and
adc
aaa
or
div
xchg
iret
cwde
push
dec
and
shl
jnp
stc
and
jne
fiadd
push
mov
int3
mov
shl
mov
rol
pop
into
sub
and
xchg
mov
xor
jmp
mov
retf
inc
pop
iret
popa
jno
imul
(bad)
sbb
jmp
cli
popa
rol
pop
jecxz
pop
out
mov
cmp
lahf
outs
and
stos
and
imul
not
and
adc
outs
pop
icebp
adc
clc
lods
cmp
or
xor
mov
mov
or
mov
lods
aas
cld
push
and
push
push
push
inc
mov
or
and
gs
dec
mov
fld
xlat
ds
(bad)
leave
mov
xchg
jecxz
leave
test
jne
je
and
push
lahf
pop
out
push
sub
aam
xchg
and
cld
inc
cmp
rcl
(bad)
push
sar
add
mov
fldl2t
push
push
lods
cld
jns
clc
(bad)
pop
dec
invd
scas
out
add
iret
inc
sub
outs
call
inc
mov
icebp
mov
in
stc
in
shl
imul
push
mov
jbe
push
mov
jns
imul
fcomp
loopne
push
rol
fisttp
xchg
xchg
pushf
cli
in
(bad)
jmp
dec
repz
lods
mov
jl
pop
pop
loopne
jp
fs
inc
dec
xor
lods
ja
mov
xor
jp
pop
jns
imul
addr16
mov
xor
rcl
icebp
sub
movs
cmps
cmp
imul
call
dec
(bad)
pop
hlt
mov
mov
add
aad
jno
jb
mov
out
in
es
(bad)
(bad)
mov
or
jnp
jbe
xor
sub
(bad)
xchg
mov
jb
movs
cwde
popa
call
(bad)
iret
(bad)
jmp
movs
mov
sbb
out
cmp
cld
cmp
stc
das
add
lahf
mov
and
mov
xor
add
(bad)
pop
add
xor
sti
in
(bad)
inc
mov
mov
mov
pop
ret
lds
pop
mov
jo
movs
mov
dec
add
sbb
xor
jb
les
dec
dec
fs
add
add
mov
ja
mov
or
movs
retf
movs
cwde
dec
inc
test
and
retf
fisub
mov
or
xor
fsub
mov
es
dec
rol
xor
jecxz
xor
icebp
icebp
imul
mov
xchg
popf
and
lahf
xchg
or
push
cs
xor
mov
fisubr
mov
loopne
push
iret
dec
in
ret
mov
push
in
jno
das
sbb
jg
inc
cdq
push
(bad)
call
and
jp
xchg
mov
ds
(bad)
cmp
test
inc
pop
mov
push
ins
sbb
push
sub
xchg
cdq
jbe
lds
jmp
sub
or
jb
lock
adc
in
dec
sub
int3
mov
mov
cs
and
inc
in
ret
add
mov
outs
sub
leave
inc
mov
push
fcmovnbe
in
push
push
pop
loopne
push
fimul
xor
daa
push
xchg
jmp
bound
jmp
dec
and
cmps
push
nop
pop
imul
(bad)
call
shr
jb
das
js
ins
daa
dec
frstor
es
lds
inc
sbb
dec
in
pop
leave
and
pop
imul
push
sbb
dec
div
fbld
not
cld
shr
out
inc
jb
jmp
fst
sub
pushf
mov
sti
mov
into
jmp
jg
fsub
push
and
adc
xchg
adc
pop
pop
mov
sub
adc
cmp
repnz
mov
ficomp
and
inc
or
push
repnz
mov
hlt
fdivp
pop
cmps
sub
shr
repnz
and
inc
(bad)
adc
xor
cld
test
pop
loop
pop
dec
repz
in
push
inc
and
arpl
cmc
cmc
adc
push
inc
jo
jmp
call
movs
retf
mov
mov
or
jmp
dec
pop
cld
fld
adc
ror
sbb
sub
out
lods
repnz
int3
stos
pop
cmp
cmp
(bad)
retf
xchg
ret
mov
cmc
xchg
stos
push
mov
rcl
xchg
push
push
cwde
int
clc
sbb
push
leave
pop
ds
cli
sub
ins
sbb
xchg
push
ins
add
out
sar
ret
add
dec
and
jp
sub
xchg
pop
xlat
inc
push
and
ins
sub
inc
fwait
das
in
push
inc
shl
pushf
add
sti
(bad)
dec
dec
scas
and
mov
aam
dec
or
mov
imul
(bad)
xor
aas
adc
cmp
cmp
add
jg
stc
out
jg
scas
add
inc
imul
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
gs
adc
mov
test
dec
bswap
and
sbb
(bad)
imul
add
inc
icebp
cli
or
xchg
add
enter
add
jno
(bad)
pop
push
jae
loopne
xor
lock
fisubr
mov
cdq
(bad)
jmp
in
xchg
pop
loop
push
imul
xchg
ins
xor
fist
mov
mov
push
sub
add
xchg
and
push
jo
dec
xchg
sub
jns
or
dec
bound
xor
(bad)
(bad)
je
jg
push
xlat
pop
sub
sbb
in
inc
clc
out
loop
(bad)
ds
sbb
fimul
das
pop
jmp
sbb
add
xchg
cmp
and
imul
cwde
out
add
loope
inc
scas
push
xor
call
lea
or
ficom
in
mov
ja
aas
stc
repnz
test
mov
(bad)
mov
sub
adc
pop
nop
mov
shr
lods
xchg
xor
(bad)
jmp
in
sti
pop
in
jae
dec
in
jmp
jnp
fs
out
in
sub
mov
or
push
jne
repz
xchg
jmp
imul
dec
lock
cmps
jl
sbb
pop
mov
inc
adc
fcmovnu
xchg
sti
mov
gs
fistp
(bad)
gs
repnz
mov
scas
mov
sbb
lds
inc
or
adc
nop
(bad)
push
push
sub
and
cmp
popf
and
xchg
loop
adc
js
lods
or
dec
repnz
push
clc
cmp
push
pop
test
ret
hlt
sbb
add
or
adc
imul
es
scas
cmc
cli
inc
adc
inc
add
sub
mov
sub
(bad)
into
inc
popf
fdiv
jle
(bad)
push
call
pop
push
fidiv
pop
repz
out
cmp
add
popf
adc
dec
scas
call
mov
xchg
and
data16
imul
retf
in
sbb
and
inc
push
stos
pop
sbb
mov
leave
and
jge
repz
outs
leave
sti
mov
sbb
or
sub
cmp
int3
imul
sbb
aaa
adc
xlat
sbb
push
fbstp
enter
shr
aad
int3
cli
mov
loope
dec
ret
xor
dec
in
sbb
int
mov
add
pop
xlat
add
icebp
fnstcw
outs
cwde
inc
dec
scas
repnz
inc
int3
mov
or
lock
sbb
pop
popa
xchg
mov
sub
mov
ins
xchg
jecxz
mov
in
mov
das
popf
test
sub
jge
loop
jmp
aaa
outs
and
ins
and
mov
cmps
inc
dec
outs
pop
mov
lds
push
pop
mov
mov
ret
mov
sub
fmul
inc
js
test
mov
out
call
jg
rol
pop
rcr
add
dec
punpcklwd
add
adc
ret
mov
mov
mov
mov
std
inc
adc
sbb
mov
jb
out
inc
out
pop
out
in
add
pop
sti
mov
fiadd
xlat
mov
rcl
xor
sbb
jg
sbb
dec
mov
add
xor
sub
repz
jns
and
push
imul
sbb
or
mov
fisub
mov
push
mov
cmps
push
mov
aas
adc
loope
bound
popa
jmp
mov
aas
lds
mov
push
or
cmp
xchg
scas
lods
jl
test
xor
sub
imul
and
adc
mov
fadd
in
out
mov
add
dec
xchg
or
sahf
bnd
mov
sub
ins
sti
in
and
mov
mov
arpl
sar
inc
and
dec
add
jnp
stos
bts
movs
leave
and
sbb
inc
in
addr16
dec
cmp
rol
sbb
push
stos
jno
xchg
xchg
push
mov
bound
enter
jo
xchg
or
call
(bad)
sti
cmp
and
jnp
mov
bnd
ds
pop
dec
pusha
xchg
mov
dec
into
mov
dec
mov
fst
mov
in
test
test
adc
sub
ja
scas
or
dec
pushf
pop
xor
lea
rcr
adc
in
les
dec
iret
adc
xor
ret
(bad)
lahf
cmps
outs
cmps
fcom
sbb
imul
add
shr
call
pop
or
jne
cmp
add
ja
xor
(bad)
out
scas
in
or
xchg
fiadd
mov
xchg
dec
sub
adc
adc
or
cmp
stos
inc
aad
dec
xor
sub
xchg
int
mov
mov
sub
fcomp
and
popa
loope
popf
imul
shl
xlat
icebp
ret
cmp
xor
iret
add
pusha
sbb
sub
xchg
jae
adc
mov
shr
outs
repz
cmp
(bad)
(bad)
lods
retf
test
sbb
jnp
mov
mov
idiv
mov
stos
mov
push
in
bound
mov
push
pop
pop
or
xor
pop
mov
cdq
movs
test
repz
gs
mov
ror
stc
or
dec
gs
in
popa
pop
push
loop
jno
sti
xchg
aas
jp
mov
in
lds
std
popf
adc
jmp
out
xlat
int
mov
mov
mov
aaa
cmp
and
cs
shl
jp
scas
mov
movs
cmovge
loope
sub
adc
sub
or
scas
nop
mov
xchg
loopne
cmps
mov
ins
mov
push
(bad)
call
inc
test
cmps
imul
cmp
fldenv
into
xchg
cs
sbb
shr
jmp
stc
stos
mov
nop
(bad)
leave
sub
push
call
xchg
ficomp
sar
xchg
cmps
mov
shl
cli
iret
push
ins
mov
fadd
enter
xor
jp
test
dec
(bad)
xor
sbb
xlat
shl
test
inc
es
sahf
or
fmul
outs
cs
push
jge
xor
add
imul
jne
mov
stos
cwde
cmp
sbb
fadd
dec
xor
ds
fsub
(bad)
dec
sub
mov
or
into
aaa
sub
(bad)
std
daa
xchg
add
(bad)
out
imul
push
or
arpl
stos
mov
cmc
jne
dec
popa
test
(bad)
sub
cs
and
jp
mov
daa
cld
fisubr
pop
scas
jl
mov
lods
xchg
lea
mov
mov
lods
push
cmovne
mov
imul
sbb
xchg
in
popf
push
cmc
imul
sub
sub
cmps
ret
cli
cmp
ja
sub
fwait
and
cmp
mov
jne
mov
push
jmp
mov
or
in
test
stc
adc
mov
aas
sub
hlt
add
popa
mov
push
xor
pop
adc
mov
(bad)
in
dec
and
sub
inc
mov
int3
jb
add
stos
jmp
cmp
sbb
leave
dec
mov
inc
xchg
test
dec
cdq
mov
in
(bad)
lds
or
inc
jecxz
xor
retf
ins
cmp
cmp
mov
xlat
lods
je
leave
dec
xchg
fstp
mov
xor
ds
ficom
inc
mov
jge
ja
sbb
scas
stos
mov
mov
pop
gs
mov
in
aam
push
mov
data16
outs
je
out
sub
cmp
int
pop
cdq
enter
call
and
stos
mov
lds
or
sbb
mov
pop
adc
in
dec
into
jno
sahf
mov
push
popa
xchg
mov
daa
pop
mov
loop
jecxz
or
lds
stos
and
pop
mov
pop
push
push
sub
mov
xchg
fnstsw
mov
pop
enter
(bad)
rol
out
outs
push
fs
mov
aam
mov
add
fnstsw
fild
and
fisttp
mov
push
or
vmwrite
pop
les
scas
xchg
sbb
xor
sbb
dec
cmp
jmp
clc
lods
cs
movs
mov
or
sub
dec
sbb
sbb
popf
xchg
adc
fnstcw
ret
mov
sub
dec
(bad)
das
sbb
pop
(bad)
mov
push
push
ss
in
xor
inc
es
jmp
inc
pop
mov
clc
ins
push
(bad)
xor
lds
jne
mov
push
fldcw
sbb
ins
push
jl
xor
imul
mov
sbb
dec
mov
sar
cmp
xor
aad
jp
add
cmp
ds
mov
arpl
sahf
popa
xor
cmp
mov
js
outs
cli
imul
mov
cmp
push
xchg
cmp
mov
scas
dec
mov
jbe
cmps
cld
dec
and
cmp
in
pop
sar
pop
xchg
aam
xchg
fsubr
cmp
fiadd
rol
enter
sbb
jge
jmp
cmp
xchg
xor
mov
or
adc
push
sbb
hlt
(bad)
add
rol
outs
mov
lock
sub
sbb
out
inc
sub
mov
inc
pop
out
add
clc
enter
push
jge
or
and
outs
sbb
sbb
dec
cld
add
inc
pop
dec
cli
pop
lahf
add
push
sti
jp
dec
scas
push
or
pop
jmp
dec
cmps
rcr
scas
push
pshufw
js
sub
xchg
pop
mov
cmp
out
xchg
and
sub
std
aam
test
cmp
cdq
les
fsub
pop
mov
jmp
inc
push
jmp
into
cli
xchg
sbb
scas
lea
nop
cmp
mov
inc
xor
movzx
inc
pop
mov
jnp
pop
enter
in
scas
shl
call
mov
mov
xchg
xor
loope
dec
adc
xor
jmp
aas
push
dec
mov
pop
pop
test
std
adc
xor
pop
movs
or
(bad)
rcl
es
inc
jl
inc
sub
dec
dec
inc
and
cmp
cld
repz
jecxz
ins
cmp
mov
test
cmps
cmps
mov
mov
aaa
clc
lods
sub
inc
in
in
sar
repnz
jl
mov
cmc
mov
shr
mov
mov
mov
push
clc
dec
pop
cmc
dec
pushf
sbb
idiv
std
addr16
cdq
dec
mov
pop
(bad)
int3
jmp
push
lds
mov
pop
leave
push
mov
mov
fadd
sbb
adc
loopne
(bad)
rol
fwait
xchg
cld
icebp
xor
jp
sub
pushf
nop
mov
lea
out
(bad)
sub
aam
js
add
adc
mov
sbb
adc
cmp
into
call
pop
jge
mov
(bad)
and
dec
xor
popa
loope
daa
mov
out
loope
in
aaa
loop
push
mov
test
jnp
fisub
int
shl
aad
mov
mov
mov
cmp
aad
repnz
pop
int3
and
scas
int3
xchg
push
sbb
inc
jp
add
cld
cmp
pop
or
bound
imul
inc
(bad)
push
and
mov
fst
cmc
cmp
mov
in
outs
icebp
pusha
push
push
leave
and
scas
mov
mov
movs
adc
jno
bnd
inc
stos
and
les
xchg
punpckhwd
xor
shr
jp
ins
fcomp
cmp
jno
lahf
dec
mov
jns
push
popa
mov
addr16
sub
repnz
push
lds
js
and
pop
shr
mov
ins
dec
fwait
ret
cli
out
inc
outs
mov
and
call
into
dec
leave
bound
outs
and
ret
retf
shl
and
cmp
mov
(bad)
sbb
cli
mov
mov
iret
cmp
rcr
stc
in
out
pop
add
add
fdivp
xchg
data16
sub
aaa
xchg
adc
sub
or
mov
in
mov
addr16
jb
mov
sbb
test
jns
lock
jmp
mov
sub
push
imul
ds
addr16
loopne
ror
and
iret
mov
out
(bad)
data16
push
mov
or
fisttp
jno
pop
out
xchg
lock
iret
jbe
pop
mov
nop
ja
mov
retfw
ds
or
xor
lods
repz
jmp
cli
cld
xchg
fmulp
(bad)
test
pop
sub
cmps
shr
retf
push
push
mov
pop
scas
jns
je
imul
test
call
fs
out
test
aas
and
add
mov
mov
loopne
imul
jbe
cmp
and
mul
loope
daa
push
repz
jmp
in
sub
adc
pop
mov
mov
sub
fadd
popf
(bad)
or
cmp
nop
jbe
adc
ds
xor
xchg
and
jle
mov
je
scas
ds
or
call
adc
cld
xchg
imul
sbb
cmps
pop
gs
out
cmc
int
or
dec
xlat
jge
pushf
xchg
lahf
rol
into
jnp
adc
stos
cmp
pop
push
cmp
sbb
jbe
(bad)
mov
fs
js
cmp
fdivr
pop
in
inc
aas
cmp
ins
dec
dec
mov
cs
xor
inc
jnp
or
fcomp
js
ret
dec
ret
push
jmp
push
shrd
inc
xor
xor
(bad)
pop
pop
sar
add
pop
push
mov
mov
fst
cmp
ss
cmp
push
and
sbb
ins
xor
lods
gs
pop
and
(bad)
or
dec
daa
mov
sbb
clc
inc
cmc
shl
je
or
jp
mov
mov
lods
xor
mov
pop
ret
pop
movs
cmp
sar
mul
out
mov
mov
mov
rcl
sub
xlat
scas
dec
test
js
jno
xchg
push
shl
lahf
ins
in
mov
add
call
mov
ret
mov
aaa
lods
fild
enter
in
xchg
rcl
add
xor
test
or
rol
test
mov
out
sbb
cmp
xchg
push
xor
jg
push
mov
mov
xor
adc
mov
(bad)
outs
lds
inc
jae
in
jns
fbld
sbb
jl
aaa
call
adc
ret
inc
in
stos
push
in
out
js
xor
arpl
arpl
xor
push
lock
mov
fild
jb
std
mov
xor
cmp
push
add
jne
mov
bnd
sbb
sub
add
adc
popf
dec
pop
js
aas
scas
je
cmc
sub
mov
jecxz
scas
sar
dec
stos
ret
rcl
icebp
xor
xor
or
dec
lahf
cs
jb
ficom
mov
cdq
jo
and
xor
xor
mov
inc
sbb
adc
dec
pop
ret
not
cwde
jp
mov
out
and
add
popa
pop
shl
xor
and
push
sar
cld
repz
aas
(bad)
cld
repz
push
nop
add
inc
stos
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
mov
mov
popa
lods
jg
pop
mov
gs
jmp
pop
mov
pop
ss
pop
mov
ins
xlat
ret
pop
xchg
lods
test
add
outs
call
iret
sub
dec
sub
push
hlt
sbb
lods
mov
dec
dec
cmps
fild
mov
bound
arpl
mov
es
test
cs
cmc
fucomi
mov
sbb
fwait
daa
sbb
mov
jns
dec
test
pushf
lahf
shr
ret
rol
fstp
mov
adc
scas
into
pop
dec
stos
inc
das
ins
xchg
sbb
adc
sbb
jae
lock
xchg
in
clc
pop
mov
mov
mov
es
fcomi
and
popf
std
mov
pop
stos
cmp
jne
mov
or
das
sbb
jg
fidivr
pop
jecxz
mov
fld
mov
or
dec
dec
adc
push
es
test
mov
cmp
fs
out
push
aam
xor
ret
or
adc
aaa
enter
shl
sub
mov
int
fucomip
retfw
jae
add
or
fild
jmp
jno
in
jl
scas
or
test
(bad)
repz
mov
in
aaa
jae
pop
cmp
out
rcr
or
add
gs
mov
pop
cmp
hlt
or
and
sbb
and
fwait
cmp
xor
ss
call
mov
out
or
inc
jno
in
popf
fucomip
nop
lock
jl
pop
mov
daa
mov
adc
jns
mov
pop
call
or
adc
pop
lea
sbb
lea
data16
aad
popa
jmp
test
loop
pop
pop
adc
and
inc
and
test
xor
jmp
lock
mov
push
loopne
lea
cwde
ret
mov
mov
test
leave
xchg
sahf
xor
pop
xchg
fwait
pop
cmc
stos
pop
xor
push
push
(bad)
in
fdiv
xchg
cmc
aad
jmp
je
xchg
push
or
mov
outs
jae
jl
xchg
cmps
out
je
lods
mov
movs
adc
jno
je
test
mov
mov
xchg
ins
loope
test
test
out
ds
mov
inc
xchg
sub
loope
ja
xor
mov
in
sub
inc
dec
call
iret
push
add
stos
sar
sub
mov
push
repz
cmc
jnp
stc
test
bound
or
fst
and
aad
in
aaa
adc
dec
stc
lock
inc
cmp
push
outs
mov
cmps
iret
lea
adc
or
mov
cwde
ja
xchg
repz
int3
inc
adc
movs
inc
sbb
shl
dec
shl
cmc
jbe
mov
add
in
push
jbe
shr
adc
std
stc
jecxz
iret
cmc
lock
aaa
pop
jecxz
push
sbb
iret
stc
fistp
lods
(bad)
lahf
sub
retf
inc
cmps
lock
out
outs
jmp
push
call
icebp
std
or
dec
jle
add
sub
data16
nop
cdq
dec
fcom
pop
mov
push
xchg
shl
test
(bad)
dec
test
mov
sub
push
adc
stos
dec
in
imul
xchg
push
xchg
nop
ds
or
iret
cmc
inc
pop
sub
cmps
pop
es
pop
out
inc
cmps
sbb
xchg
sbb
xchg
inc
cmp
mov
ins
fld
push
xchg
xchg
ins
pop
push
loop
lods
sbb
mov
fld
xor
adc
mov
pop
jecxz
dec
mov
pop
fisttp
pop
mov
mov
retf
and
push
cli
aaa
xor
push
xchg
xchg
lods
les
pop
mov
xor
dec
jle
push
test
pop
bound
test
(bad)
out
add
pop
inc
cmp
and
int
sub
dec
and
push
call
int3
ret
sbb
fbstp
das
mov
in
push
pop
jl
or
sti
int
xchg
cmp
movs
dec
sub
mov
es
xchg
arpl
mov
js
call
repz
mov
mov
nop
gs
test
bound
cld
or
pop
icebp
les
das
mov
xchg
imul
pop
inc
rcl
xor
pop
loope
cmc
xor
inc
add
inc
adc
push
lock
lahf
ret
xlat
sbb
push
movs
cmps
adc
ss
mov
aad
add
mov
jns
(bad)
aas
daa
push
and
shl
fldcw
adc
adc
ficom
jno
pop
data16
adc
call
dec
sub
pop
xchg
in
lods
sbb
cwde
push
mov
mov
aaa
xor
dec
fistp
jge
xor
icebp
pop
(bad)
mov
es
and
call
cmp
cmp
lock
popf
popf
and
popf
cmp
jmp
cmp
sub
mov
mov
les
mov
mov
pop
inc
mov
cmp
aam
call
and
bound
dec
xor
pop
icebp
xchg
cmp
std
out
rcr
and
outs
std
mov
xor
xor
push
pop
pop
sbb
mov
sbb
xchg
mov
dec
je
cmps
leave
or
jle
leave
cwde
adc
xchg
sahf
and
pop
push
scas
js
dec
xlat
adc
mov
adc
xchg
fdiv
jge
dec
lds
xor
mov
mov
sub
(bad)
add
cdq
cmp
stos
push
mov
outs
dec
jnp
cmp
fimul
(bad)
add
sub
fsin
and
repz
add
(bad)
or
pop
repz
in
dec
pop
loopne
(bad)
mov
scas
mov
movs
popa
into
out
cmps
pop
pop
cmp
xchg
mov
mov
fisub
cld
sub
jg
sub
mov
jo
scas
jmp
push
adc
and
in
mov
stos
adc
mov
mov
dec
cdq
inc
enter
push
adc
stc
and
and
aad
mov
xchg
or
outs
cmp
inc
or
cmc
pop
add
pop
sub
dec
xor
sub
dec
in
jns
pop
gs
fidivr
popf
push
push
push
cs
mov
cmps
push
or
xchg
and
and
hlt
retf
sub
adc
mov
xchg
xchg
jp
int
dec
add
popw
(bad)
jmp
retf
pop
sbb
mov
out
pop
hlt
ror
inc
fimul
pop
out
lods
cvtdq2ps
lds
test
popf
cld
loope
pop
cmp
adc
mov
leave
cmp
mov
pop
mov
jmp
retf
popf
xchg
iret
mov
cmp
fidivr
fild
inc
(bad)
neg
imul
jge
ret
or
imul
rol
popf
(bad)
pop
aad
inc
in
fsub
and
lods
inc
push
dec
mov
and
and
add
sar
jge
mov
sahf
xor
push
(bad)
xchg
retf
push
mov
(bad)
ins
scas
xchg
or
push
stos
mov
repz
mov
pop
movs
(bad)
cmp
mov
iret
xchg
and
imul
stos
push
adc
pop
test
cmp
jmp
dec
cmp
sub
hlt
out
or
stos
xchg
lock
nop
sahf
sbb
mov
xchg
jge
repz
pop
das
cmps
mov
add
movs
pusha
and
jp
mov
and
mov
and
sbb
or
outs
ja
sub
pop
dec
add
out
repnz
jae
or
mov
idiv
rol
jb
cmp
daa
sub
cmp
mov
fild
jecxz
(bad)
and
cli
(bad)
jl
test
cli
xchg
lds
dec
mov
and
es
jmp
test
push
retf
gs
pusha
pop
iret
fwait
ins
in
push
cmp
iret
mov
sbb
xlat
pop
xchg
mov
xor
mov
jo
shl
push
or
xchg
mov
fdiv
xchg
cmp
clc
and
dec
pop
push
or
cmp
sub
rol
xchg
sub
sub
fiadd
lahf
and
xchg
cmps
sub
pop
inc
(bad)
add
or
mov
mov
or
push
inc
dec
sbb
out
out
out
cld
fcomp
mov
iret
shl
ss
xor
add
inc
sub
in
loope
fimul
adc
mov
jne
cmp
cmp
mov
leave
scas
jb
jp
sar
in
xor
mov
mul
out
xchg
pop
retf
mov
call
out
xor
cmps
fstp
jno
into
fsin
xor
xchg
das
and
push
outs
repz
add
mov
out
xchg
cli
in
and
pop
and
sub
mov
cld
jl
fstp
cmc
xor
lods
pop
fmul
scas
outs
inc
das
sar
inc
jb
pop
jno
aad
ret
rcr
retf
and
call
std
fsubr
xchg
pop
ins
xor
stos
sahf
inc
fcmovnu
pop
cmp
stos
sahf
es
pop
dec
cmp
mov
adc
fwait
xor
jns
xchg
or
fmul
push
int
sbb
sub
into
or
popa
mov
pop
addr16
sar
xor
mov
jb
jp
ror
or
retf
loope
or
cwde
push
cmp
outs
add
les
jp
pop
mov
movs
mov
push
popa
cmps
jmp
adc
cs
push
adc
jnp
popa
addr16
adc
pop
sti
and
adc
jge
shl
push
retf
aaa
out
inc
jmp
xor
call
pop
sbb
cmps
add
sbb
je
retf
push
add
test
push
dec
sbb
loope
mov
(bad)
and
fisubr
mov
xchg
and
stos
mov
pop
fiadd
mov
retf
inc
iret
loop
sbb
xchg
sbb
mov
cmp
ins
repnz
jbe
adc
out
fsubr
push
cmp
fisub
add
bound
inc
lods
es
mov
fdiv
call
bound
mov
imul
or
and
ror
ud2
and
in
shl
imul
lock
retf
cld
icebp
jg
dec
push
int
push
sub
add
pop
fsubr
pop
(bad)
les
pushf
push
pop
loope
cmp
in
test
ffreep
mov
les
adc
(bad)
fidivr
data16
adc
push
mov
cmp
out
or
idiv
pop
lahf
push
enter
dec
popa
add
(bad)
jge
sbb
shr
xor
ins
jno
push
je
mov
mov
in
add
sub
xor
fld
mov
mov
in
fisttp
aaa
icebp
gs
pop
inc
loopne
imul
mov
iret
or
scas
mov
and
inc
mov
jno
adc
in
ins
jl
pop
std
clc
test
les
ja
ins
xor
dec
fidivr
cld
pop
sbb
lahf
xchg
les
outs
gs
dec
jae
call
scas
pop
jge
sbb
jmp
mul
and
inc
popa
(bad)
xchg
push
pop
push
xchg
shl
ror
inc
pop
and
cmc
xchg
push
xchg
std
lea
fnstcw
leave
dec
push
test
pop
(bad)
jnp
xor
jbe
loopne
sub
aam
dec
xchg
in
cmp
inc
ds
jne
push
retf
and
lods
cwde
and
and
pop
sbb
pop
pushf
stos
cmp
pop
jmp
popa
xchg
ret
push
repz
pop
mov
mov
(bad)
mov
fucomi
fcomp
push
dec
dec
ins
cmps
push
cmp
fild
mov
jp
adc
mov
out
cmps
cwde
leave
add
pop
jmp
fsub
into
mov
jecxz
pop
lock
cdq
mov
pop
mov
aam
or
sbb
xlat
pop
mov
in
adc
test
and
xor
imul
mov
cwde
scas
dec
add
cmps
mov
sbb
mov
xor
pop
jmp
loop
xchg
ds
jmp
fdiv
rcl
xchg
mov
or
ins
cmp
popf
ds
imul
outs
push
scas
cmp
pop
or
loop
fsub
dec
adc
sahf
jbe
push
adc
jmp
ins
arpl
pop
xor
dec
sbb
retf
cdq
sub
and
loopne
popf
movs
dec
and
xor
xor
ja
fstp
cmc
scas
push
sbb
xchg
das
xchg
or
xor
xor
(bad)
cmps
adc
idiv
sub
jmp
jle
imul
mov
bound
xlat
sub
popa
sahf
movs
js
pop
or
sbb
adc
mov
mov
adc
or
push
ja
leave
push
mov
(bad)
sub
xchg
shl
pop
inc
dec
add
dec
pop
adc
rcr
and
sub
jmp
std
std
xor
dec
repz
add
mov
add
cli
loopne
mov
mov
ins
inc
lods
ror
shl
mov
add
mov
addr16
inc
add
sbb
mov
pop
mov
(bad)
popf
in
inc
out
xlat
push
xor
mov
nop
xor
dec
shl
jmp
enter
push
jbe
stos
dec
sub
dec
fiadd
rol
add
clc
xor
retf
xlat
(bad)
xor
fidivr
call
and
sub
(bad)
enter
dec
cmps
js
inc
inc
jne
je
aam
clc
pop
add
sub
xchg
cmp
pop
lea
xor
push
inc
fnstenv
movntq
out
clc
ret
mov
mov
inc
cmp
inc
popa
sub
pusha
push
out
adc
xor
lods
scas
mov
push
sbb
adc
cmp
in
sub
into
inc
and
gs
sbb
out
imul
mov
push
mov
mov
fdiv
push
push
data16
call
pop
add
jmp
and
fcomip
in
stc
sbb
mov
sbb
(bad)
jno
daa
and
pop
dec
add
not
imul
lods
call
stc
mov
xchg
(bad)
fistp
fst
mov
mov
lds
test
scas
inc
cmc
inc
enter
in
mov
mov
sbb
lds
outs
fs
repz
stos
ins
retf
add
cmp
mov
cmps
mov
pop
adc
mov
movs
mov
fnstsw
out
das
push
mov
mov
pop
dec
jb
fistp
out
sbb
jp
add
out
cmps
pop
pop
fs
adc
cmp
xor
dec
out
sub
lods
jmp
mov
pop
push
mov
pop
and
add
repz
dec
sar
push
call
movs
sub
pop
lock
in
sub
push
mov
cs
mov
jmp
scas
mov
loop
mov
mov
(bad)
mov
aaa
sbb
xor
dec
pop
fldcw
outs
(bad)
push
jp
pusha
shl
scas
shr
aas
stc
mov
stos
stc
jae
jo
push
jns
or
test
inc
punpcklbw
dec
int
test
mov
dec
outs
mov
and
test
xchg
jno
ror
retf
ins
jp
lods
cld
xor
mov
sbb
dec
(bad)
mov
add
into
pop
mov
sbb
inc
fisttp
cmps
lfence
fmul
cmp
add
push
mov
cmps
cdq
(bad)
shl
sbb
movs
test
xor
lahf
jg
stc
out
jg
stc
out
sbb
cld
movlps
pop
(bad)
xor
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aad
inc
xchg
or
outs
add
mov
jmp
mov
je
out
out
sbb
or
and
movs
aaa
jmp
into
(bad)
add
lea
cwde
out
or
inc
jle
inc
mov
(bad)
cli
rep
add
imul
dec
dec
gs
xlat
out
pop
dec
ins
and
popa
jle
jns
rol
sub
pop
lds
sahf
mov
fild
pop
neg
inc
push
ins
push
in
dec
aad
je
dec
cwde
aam
outs
inc
and
push
cmp
repnz
(bad)
stos
hlt
jmp
(bad)
jo
jnp
fbld
jmp
push
sub
push
into
lahf
icebp
sub
or
ins
ja
push
sub
add
add
ins
pop
fwait
pop
retf
aad
mov
ret
sub
retf
and
adc
mov
or
outs
sub
imul
jbe
add
data16
mov
dec
adc
jmp
mov
xlat
ss
add
into
and
mov
dec
mov
and
cmp
shl
adc
pop
movs
add
push
xor
cmp
cld
mov
mov
in
mov
loopne
fisttp
push
jb
xchg
les
and
ret
pop
es
xor
test
jb
cmp
pop
imul
ret
imul
push
test
mov
or
mov
pop
enter
ror
test
data16
mov
das
pop
or
mov
je
pop
push
and
in
pop
push
mov
mov
movs
jmp
cli
pop
stos
adc
repz
clc
bound
cmp
out
std
sub
sub
fmul
jae
xchg
daa
xchg
or
addr16
push
cwde
mov
mov
sbb
mov
fwait
adc
or
aas
sub
shr
stos
in
adc
mov
mov
or
jp
arpl
stos
and
enter
jl
mov
cdq
fs
cmp
and
xor
pusha
pop
or
push
call
ffreep
inc
sbb
inc
add
mov
xchg
mov
popa
mov
jecxz
scas
mov
xchg
test
cmp
out
in
xchg
jecxz
jns
jbe
jg
mov
lahf
push
sbb
std
in
sub
mov
push
rcr
sub
lds
or
cmp
sbb
and
dec
jge
mov
rcl
mov
outs
cmp
pop
rcr
jno
mov
jns
cmc
in
lock
and
jne
arpl
je
pop
add
mov
adc
repnz
mov
mov
aaa
pusha
dec
ja
jge
push
add
push
dec
mov
xchg
cmps
sub
push
dec
mov
outs
sqrtps
into
sbb
jae
add
sub
ins
adc
sub
gs
sbb
aam
dec
in
pop
sub
cmc
not
(bad)
jb
sti
mov
cmp
cld
dec
ss
in
out
mov
xor
addr16
int3
or
cmp
cmp
repnz
dec
mov
xchg
pop
scas
jmp
mov
(bad)
pop
jg
inc
push
out
xchg
(bad)
iret
mov
sbb
pop
cmp
int3
xchg
outs
jg
push
pop
jg
lods
pop
outs
xor
fdivr
and
shl
push
bound
inc
rcl
dec
and
and
dec
mov
aad
enter
and
pop
mov
stos
loopne
mov
jae
ins
cmp
cwde
cmps
lods
shl
pop
rol
ret
ret
sub
mov
push
and
test
pop
mov
fs
push
std
or
dec
sub
ret
inc
cmc
inc
adc
add
xchg
dec
xchg
jno
(bad)
je
xchg
inc
pop
jge
pop
add
xor
pop
(bad)
jle
pop
jnp
jle
data16
mov
mov
push
dec
mov
jb
hlt
test
enter
je
adc
(bad)
inc
and
inc
popa
xchg
and
mov
test
xchg
mov
mov
xchg
data16
inc
pop
mov
(bad)
xchg
fwait
sbb
mov
sbb
cli
xchg
mov
push
jge
pushf
retf
add
add
aad
stos
mov
xor
in
imul
popf
cdq
sub
push
daa
jp
dec
inc
pop
stc
jb
jno
jecxz
pusha
dec
jmp
cmp
ins
sub
push
or
leave
xor
jecxz
fisttp
(bad)
push
ficom
mov
push
mov
jge
push
xchg
mov
inc
ds
xor
ins
in
xchg
mov
mov
sahf
scas
movs
push
dec
adc
mov
push
cmps
jp
adc
je
mov
sbb
and
adc
adc
sbb
ror
jmp
lods
inc
ret
sub
lds
xor
push
imul
jns
cmps
or
scas
jecxz
ret
push
int
and
fiadd
cdq
jmp
sub
mov
sahf
movs
arpl
push
xchg
lahf
ficom
sbb
in
(bad)
data16
iret
mov
mov
in
nop
loope
test
mov
gs
push
movs
cmps
in
or
dec
sahf
jne
pop
std
nop
(bad)
jb
inc
fwait
sub
neg
sub
jg
je
arpl
dec
ud2
push
jl
stos
pop
mov
outs
xchg
jbe
cmc
dec
and
(bad)
(bad)
adc
xor
push
loop
mov
push
mov
jl
dec
jge
ja
sti
test
add
pop
xchg
adc
jmp
sti
data16
pop
ds
cld
test
sub
xor
xor
int3
and
mov
adc
jbe
fwait
jo
xor
cmp
xchg
jp
retf
add
lahf
add
cli
dec
js
cmp
lods
or
cmc
add
sbb
popa
sub
mov
mov
jns
sahf
push
hlt
inc
mov
popf
mov
in
aas
inc
mov
inc
and
jg
add
inc
sbb
add
cld
into
and
jmp
add
dec
jmp
cmp
jns
cdq
cmp
out
mov
movs
outs
dec
cmp
jecxz
dec
ss
cmps
mov
dec
adc
push
shl
dec
and
fwait
iret
imul
mov
cli
add
jno
outs
xchg
inc
lods
add
call
gs
xchg
mov
enter
sbb
mov
pop
aam
xchg
cmc
jge
mov
sbb
add
stc
pop
(bad)
xchg
push
adc
scas
scas
and
addr16
dec
scas
push
cmp
adc
mov
and
ds
or
(bad)
sar
jge
ret
jg
mov
ins
les
into
retf
dec
cmp
ss
mov
mov
int3
je
pop
lock
push
push
add
test
push
fist
aam
pop
jl
das
nop
iret
cmp
pop
jecxz
jp
push
cwde
adc
arpl
xor
not
imul
out
test
(bad)
sbb
push
dec
scas
test
ins
pop
es
sbb
xor
gs
xor
push
ja
xchg
dec
jnp
mov
jle
mov
fucom
or
loop
or
push
loopne
mov
push
pop
scas
push
mov
clc
jne
push
push
imul
mov
aad
rdmsr
mov
dec
cld
pop
push
adc
repnz
(bad)
in
clc
outs
in
fucomp
dec
sbb
pop
in
int3
shl
or
mov
mov
nop
jbe
sbb
mov
shl
loope
lock
imul
cmp
jg
mov
mov
(bad)
jg
retf
jo
inc
jmp
mov
cwde
ss
lods
push
mov
dec
jg
into
cmp
out
cmps
inc
push
jae
adc
shr
xchg
and
adc
pushf
add
test
and
lahf
pop
pop
sbb
mov
pop
mov
mov
ins
xchg
xor
dec
sbb
addr16
inc
inc
push
push
inc
shl
fs
nop
in
stos
lahf
cmp
outs
mov
sahf
loopne
loope
rol
dec
xchg
clc
mov
mov
xchg
dec
or
arpl
sbb
(bad)
jns
addr16
or
push
fcomp
nop
leave
hlt
jle
fiadd
mov
cmp
lea
je
xchg
(bad)
ds
je
and
inc
in
ret
cld
push
add
mov
fst
movs
das
stos
or
dec
inc
pop
leave
outs
(bad)
xchg
cmp
jne
add
es
inc
rcl
mov
cmp
inc
cmp
movzx
fistp
sub
pop
adc
dec
dec
test
cmp
mov
pop
aas
xchg
mov
jg
jnp
push
jae
jae
sub
pop
xor
shl
cmc
mov
push
out
xchg
mov
movs
add
je
addr16
lock
cs
xchg
sub
es
test
push
in
inc
test
jbe
loope
mov
out
retf
xchg
pop
cwde
imul
adc
retf
mov
les
and
aas
push
push
scas
mov
add
push
ins
(bad)
jge
pop
sbb
lahf
popa
mov
push
ja
fldenv
pop
test
jle
(bad)
in
jp
cmp
or
sbb
inc
jmp
lods
pop
xchg
(bad)
stc
loope
iret
dec
add
mov
sub
xchg
(bad)
push
mov
jg
mov
mov
(bad)
mov
jb
movs
dec
movs
repnz
xchg
sahf
fdiv
pushf
inc
pop
mov
cmp
mov
aas
push
imul
aam
loopne
xchg
scas
inc
inc
pop
jp
ja
cmp
(bad)
lea
pop
adc
popf
hlt
js
stos
lea
sbb
xor
repz
pop
scas
bound
sub
jmp
data16
cmp
out
shr
sub
sub
mov
sbb
push
aaa
jbe
jge
test
add
pop
mov
mov
jmp
into
pop
sbb
xchg
and
mov
jo
stos
repz
vprotb
test
inc
in
mov
cld
mov
outs
retf
mov
add
cdq
sub
xchg
pusha
push
inc
in
xor
stc
je
xchg
and
retf
ins
lock
popa
inc
push
shl
mov
and
adc
cmp
repz
cmp
in
add
scas
sbb
adc
mov
jg
dec
fwait
fwait
adc
jbe
ret
sub
imul
aad
jmp
xchg
and
pop
fcomp
enter
cmp
mov
jmp
and
scas
cmp
mov
push
sbb
add
or
in
mov
cmc
repz
and
xor
hlt
jns
aas
in
and
das
sbb
push
fbstp
jne
jge
and
movs
cwde
jmp
xor
cmp
jno
jmp
add
mov
call
ins
popa
in
mov
and
hlt
xor
cmp
lods
pop
sbb
push
enter
nop
sub
mov
jmp
lea
adc
not
dec
mov
cmps
push
pushw
out
mov
dec
in
add
dec
push
inc
push
lds
popa
scas
mov
pushf
pop
mov
ss
ja
in
cmps
cmp
movs
arpl
add
xchg
dec
test
mov
xchg
xchg
add
push
into
test
sub
push
stos
bound
inc
fidivr
and
call
loopne
and
test
mov
mov
mov
es
addps
lea
xor
push
aaa
or
call
cdq
sub
int
ret
mov
ss
jmp
push
add
xchg
cwde
repz
adc
pusha
sub
dec
inc
(bad)
jmp
cmp
sti
cmp
sub
sbb
imul
js
jl
xor
jmp
test
adc
shr
inc
adc
and
push
or
jmp
popf
retf
inc
adc
push
mov
cmp
iret
pop
aaa
sbb
(bad)
mov
into
or
jle
xor
or
arpl
loope
push
or
adc
or
sahf
mov
cmc
xor
shl
lds
jge
xchg
ret
pop
or
das
pop
sub
cmp
out
push
popa
(bad)
push
jns
pop
mov
pop
shl
jne
and
sar
mov
clc
ins
lea
dec
dec
jg
and
dec
or
cmp
in
ja
out
jae
jge
shr
cmp
fdivr
push
xchg
ror
imul
jg
stos
sbb
aad
inc
imul
mov
shr
fidivr
push
stos
retf
outs
push
or
cli
pop
xor
jecxz
mov
cmc
aaa
mov
and
and
jbe
fisub
in
cmp
cdq
jbe
mov
daa
ins
push
pushf
arpl
dec
aad
mov
pop
jmp
jbe
add
mov
mov
popa
push
imul
xlat
(bad)
rdpmc
aas
jns
out
cli
sbb
push
das
sbb
cbw
cs
jge
push
push
in
jne
push
push
std
and
and
push
lock
push
mov
(bad)
mov
xchg
and
test
clc
fdiv
and
popa
cwde
mov
sub
lock
and
sbb
lahf
daa
mov
push
inc
mov
jo
sar
call
jno
add
mov
xchg
jnp
add
sbb
mov
cmc
mov
dec
pushf
(bad)
push
pushf
test
mov
rcr
stos
cli
outs
xchg
mov
cmp
das
(bad)
pop
rol
add
cmp
pop
call
cmp
ret
psllq
jne
mov
mov
mov
push
test
std
jle
jno
dec
xor
sti
xchg
xchg
test
cmp
adc
push
out
dec
dec
dec
pop
or
add
arpl
imul
mov
call
push
cmps
push
inc
mov
cli
aaa
cmp
adc
arpl
loope
cmp
ror
mov
test
ret
outs
xor
pop
rol
dec
pop
mov
loop
loope
xor
fdivr
adc
rcr
or
imul
shl
je
les
clc
or
sub
jns
or
sub
fst
jae
xchg
jmp
imul
jmp
and
xchg
fdivp
mov
mov
(bad)
cmp
jmp
fwait
das
fcomp
mov
mov
movs
fwait
jno
pop
(bad)
sbb
inc
add
dec
inc
fcomp
mov
dec
push
nop
out
data16
ss
dec
pop
cs
je
sbb
shr
cmp
sub
cmp
or
xchg
movs
not
and
dec
pop
jo
stos
inc
mov
push
mov
xchg
and
jno
push
movs
fdivr
xchg
mov
mov
mov
fwait
outs
dec
movs
mov
jg
js
and
ret
mov
jge
sar
out
inc
inc
xchg
pop
in
test
cmps
dec
fsubrp
jge
mov
lods
mov
fidiv
jp
jmp
xchg
xchg
or
cmp
fbstp
pop
pop
dec
cdq
sub
test
lods
aaa
ss
mov
inc
into
xor
or
out
jmp
mov
xor
mov
dec
hlt
(bad)
adc
scas
daa
pop
leave
mov
xor
test
stos
sbb
push
int3
or
das
in
pop
pop
sbb
add
jo
mov
and
fld
popa
jecxz
shr
mov
xchg
dec
outs
mov
mov
xchg
fs
out
add
or
adc
mov
scas
xchg
out
pop
ss
outs
int3
add
and
mov
mov
loop
jmp
leave
jle
std
dec
imul
and
pop
ins
mov
test
sub
pop
push
outs
jge
mov
loope
aam
dec
gs
mov
out
scas
pop
call
hlt
sbb
pop
inc
dec
mov
ss
or
pop
clc
imul
fidivr
mov
in
sahf
fwait
shl
test
cmp
test
adc
ja
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
inc
repz
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
mov
mov
in
xchg
in
push
retf
jbe
pop
pop
pop
pop
div
outs
fnstenv
scas
gs
idiv
idiv
cmp
xor
inc
or
outs
jmp
adc
pop
in
inc
xchg
push
mov
stc
inc
push
cs
mov
aam
retf
xor
icebp
cwde
scas
int
lods
jb
push
sbb
imul
xor
push
int
(bad)
lods
pop
mov
ds
or
sbb
out
jg
cdq
loope
adc
xor
push
xchg
nop
stos
pop
fstp
cmp
jo
mov
rol
ss
xchg
dec
leave
or
rol
pop
push
inc
inc
sbb
daa
out
dec
xchg
fidiv
sbb
scas
ja
mov
je
push
popa
fmulp
mov
jnp
jb
repnz
ins
(bad)
hlt
adc
adc
leave
dec
sub
dec
mov
iret
cmp
push
ror
pop
adc
dec
jl
and
cmp
xchg
lods
fwait
pop
mov
fsubr
cld
ja
int3
mov
xlat
sbb
imul
xchg
mov
jnp
cmp
pop
pop
push
daa
movs
lods
icebp
fsub
ins
add
jmp
jo
out
dec
fadd
retf
jo
mov
lahf
(bad)
jbe
(bad)
pop
sub
add
cmp
jecxz
jg
add
mov
sub
stos
sbb
cmp
in
and
mov
mov
out
out
(bad)
out
inc
mov
ret
pop
add
push
out
dec
or
mov
mov
push
or
lahf
sbb
fnsave
mov
mov
xchg
or
lods
sub
fwait
scas
mov
pop
mov
je
mov
adc
aas
cld
dec
lds
ins
popf
dec
inc
nop
fdiv
add
sub
in
sub
push
clc
cmp
or
jle
aam
or
push
out
xchg
adc
shl
adc
jmp
push
icebp
pop
out
jmp
clc
jge
ins
push
retf
cmp
in
xchg
mov
pop
xor
int3
lds
scas
pop
popa
(bad)
fld
test
in
test
pusha
pop
in
test
mov
mov
cdq
cmp
sbb
jmp
aaa
test
xchg
or
in
in
pop
retf
fld
fwait
dec
ja
inc
or
jmp
fldenv
stos
dec
out
and
lahf
xchg
pushf
ins
dec
sbb
js
je
jb
(bad)
aas
lods
movs
call
adc
lods
or
mov
cmc
aas
aas
or
loop
xor
pop
sbb
jle
aad
push
xchg
add
push
cmp
xchg
inc
and
mov
and
sub
inc
cmc
ins
push
jne
js
cmp
add
sbb
jbe
pop
daa
push
ficom
fs
(bad)
std
mov
xor
ds
arpl
outs
push
cwde
shl
xchg
xor
adc
or
int3
jmp
jl
mov
mov
add
pop
(bad)
iret
stc
inc
mov
ss
push
pop
dec
test
ds
out
out
ins
push
jmp
jp
mov
call
pop
or
repnz
jl
ja
jo
push
jecxz
dec
mov
push
xchg
mov
mov
sar
xchg
add
hlt
inc
sbb
cwde
shl
adc
cmp
in
and
push
mov
sub
addr16
ficom
mov
paddb
ret
ins
sub
imul
int3
adc
movs
cmps
mov
ja
lods
call
shr
jecxz
(bad)
sub
sbb
adc
call
pop
jge
fstp
fist
loope
sbb
movs
cmp
and
mov
adc
dec
not
xor
jl
mov
icebp
fdiv
fistp
dec
jnp
dec
test
push
fld
cli
mov
std
ins
ds
xlat
jg
sti
sub
clc
retf
mov
push
test
inc
or
add
xchg
daa
sbb
xor
dec
aas
lds
push
mov
int
push
test
inc
adc
test
xor
fld
jle
sbb
loopne
imul
xchg
(bad)
dec
jle
cmp
fstp
mov
cmp
ins
xchg
in
jl
mov
mov
push
lahf
xor
mov
jbe
sar
mov
fstp
mov
les
ret
jge
cmp
out
movs
mov
xor
pop
outs
xchg
retf
leave
push
jbe
jae
inc
or
mov
mov
add
mov
dec
lods
scas
xor
loopne
(bad)
sbb
adc
jbe
sub
out
jmp
mov
or
xchg
jmp
repnz
int3
xchg
sahf
mov
shl
fs
cmp
cmp
push
dec
mov
mov
pop
inc
gs
sbb
add
fstp
sub
or
mov
xor
ds
jne
jge
mov
test
out
scas
sbb
int
(bad)
fidivr
std
add
sub
lods
leave
push
mov
sbb
shl
fild
and
or
jl
ja
jno
call
mov
(bad)
jo
cmp
scas
jb
sbb
push
in
push
arpl
mov
shl
rcl
(bad)
mov
inc
jge
in
cmc
repnz
xor
retf
es
inc
gs
sti
sahf
inc
into
dec
pusha
mov
int
push
call
mov
fcom
std
pop
int3
push
xlat
div
sbb
and
loope
test
fstp
repz
or
sbb
(bad)
add
ins
test
mov
jmp
cmp
lock
ret
test
jns
fadd
xor
mov
fnstcw
icebp
push
inc
jb
jb
adc
pop
cmp
in
(bad)
inc
jb
xor
stc
xchg
icebp
retf
nop
loope
jb
mov
setl
imul
(bad)
bound
xchg
(bad)
inc
add
jg
fistp
pushf
imul
mov
iret
mov
or
aas
xchg
inc
aaa
imul
daa
xchg
leave
ret
imul
cmps
(bad)
cwde
push
jmp
push
dec
test
retf
retf
in
sbb
test
movs
and
lods
arpl
imul
loope
or
sar
adc
sahf
sbb
jne
ror
scas
pop
xor
ins
(bad)
(bad)
fimul
cwde
in
jo
jbe
movs
les
test
lds
arpl
dec
mov
arpl
aaa
push
jno
push
out
pop
mov
cmps
sub
fidiv
jb
jg
es
(bad)
frstor
inc
fisubr
push
cmp
fs
xor
(bad)
or
cmp
out
sub
and
ins
inc
sub
jo
or
out
inc
cli
clc
dec
loope
jge
pop
or
push
xchg
mov
div
adc
mov
jne
stc
jp
jmp
add
sti
xor
push
rcr
loop
cmps
mov
fs
fadd
mov
sub
sti
test
xchg
cmc
shl
dec
cmp
sub
jo
mov
imul
mov
sahf
std
cs
mov
jmp
xchg
pop
fisub
jge
jnp
pusha
out
cmps
sub
imul
rol
imul
and
inc
fstp
cmp
jg
pop
out
in
mov
mov
xchg
test
fisubr
lds
dec
ins
jg
and
stos
clc
xor
cmp
jnp
pand
out
lahf
xchg
cmps
nop
mov
or
scas
mov
ret
cld
outs
retf
(bad)
popf
mov
xor
xlat
mov
cld
(bad)
push
fisttp
xchg
aam
adc
add
sub
sub
gs
push
sub
pop
cmps
jecxz
inc
int3
or
or
jge
adc
or
ja
cmps
mov
shr
jle
retf
in
cmps
and
iret
test
lahf
jnp
adc
dec
xchg
cmp
or
inc
call
popa
mov
adc
aas
fnstsw
cmp
push
dec
dec
mov
push
rcl
xor
loopne
mov
add
push
jge
mov
popf
jg
or
sub
loope
pop
ret
jb
ins
sti
cdq
mov
ds
and
(bad)
mov
loope
push
rol
lea
test
pop
pop
xchg
gs
pop
repz
adc
mov
retf
push
ror
inc
ret
inc
xchg
cmc
or
je
push
cld
vmaxsd
and
xchg
jne
test
movs
mov
into
(bad)
fwait
out
xor
repz
push
sub
shr
retf
out
pop
xchg
ret
fisubr
in
inc
call
xchg
sub
nop
mov
popf
out
mov
adc
loop
xor
xchg
pop
data16
(bad)
sub
inc
or
ror
ss
scas
imul
jmp
fsub
jbe
sub
lahf
test
mov
add
bnd
push
ja
pop
loope
mov
mov
gs
bound
mov
and
rol
cmp
jbe
mov
pop
(bad)
adc
enter
repz
xchg
js
jne
sti
fs
push
dec
aam
lds
xchg
cmp
ss
inc
rcr
xlat
rcl
jne
outs
sub
add
push
ret
mov
push
and
mov
cmp
imul
add
push
mov
xchg
inc
mov
test
out
mov
ss
jge
jno
mov
cwde
ret
scas
or
push
and
xchg
loopne
loope
adc
add
ret
ins
call
int
movs
sti
clc
fistp
push
mov
mov
sub
fwait
div
sub
mov
or
jae
cmp
mov
inc
sbb
imul
add
add
aam
int3
inc
adc
ins
loopne
ret
jg
jp
add
add
rep
pop
jb
aad
ins
das
adc
scas
fldcw
rcr
push
push
mov
inc
xor
data16
in
mov
call
not
pop
mov
mov
xor
mov
in
(bad)
mov
dec
int3
sbb
out
call
sbb
pop
pop
xor
cld
test
nop
popa
imul
sub
repnz
fisttp
std
xchg
sbb
jle
stc
int
sub
and
mov
pop
cmp
pop
nop
fcom
add
pop
nop
in
push
stos
cwde
in
sub
push
cmp
out
std
sbb
cmp
sub
popa
xor
jle
sub
(bad)
int
pop
inc
mov
stos
inc
(bad)
std
ret
mov
pop
cli
add
add
jp
or
adc
test
xchg
stos
(bad)
push
std
imul
inc
repnz
cmp
ret
std
nop
push
fldcw
sub
test
adc
dec
js
stos
(bad)
lock
rcl
ja
push
sub
out
mov
sbb
loope
ins
jns
mov
(bad)
jno
pop
sub
jae
add
repz
jg
pop
or
push
pop
rol
cli
pusha
mov
pushf
int
int
jns
lahf
mov
imul
mov
dec
sbb
popf
cli
imul
sbb
lea
xor
xor
inc
out
(bad)
mov
xchg
leave
jecxz
fs
(bad)
enter
push
daa
or
ins
cld
pop
mov
dec
adc
mov
push
or
call
and
int
pop
push
mov
int
and
(bad)
jle
push
and
repz
fs
iret
addr16
pop
and
dec
int3
loop
push
aam
in
add
cvttps2pi
std
shr
out
mov
push
stos
aas
or
sbb
xchg
and
sub
pop
adc
jo
hlt
adc
je
(bad)
ins
add
jecxz
cmp
mov
and
xor
jmp
mov
es
cmps
jecxz
dec
push
push
xor
pop
and
aaa
push
or
popa
stc
push
mov
in
add
adc
adc
jge
fwait
mov
xchg
inc
push
mov
pop
pop
adc
add
in
cs
ss
add
and
jge
mov
mov
adc
xchg
loope
sbb
scas
clc
xor
xor
iret
out
out
ficomp
inc
fldenv
imul
or
push
sbb
mov
dec
(bad)
sar
adc
inc
and
mov
je
cmp
and
adc
ins
push
std
dec
fwait
cmps
cdq
stos
jno
jmp
push
xchg
xor
sar
jno
dec
or
aad
inc
push
sub
mov
fxch
icebp
adc
ja
stc
or
mov
pop
inc
sahf
ret
out
scas
(bad)
push
mov
aas
or
push
cmc
or
ret
xor
push
hlt
mov
sub
fldcw
pop
add
mov
inc
xchg
xchg
addr16
inc
mov
pop
jle
sub
inc
or
pop
mov
jge
inc
push
icebp
pop
fdiv
sub
and
leavew
ficomp
das
sahf
jg
movs
mov
cmc
adc
cli
jo
mov
rcr
add
xor
test
leave
jecxz
bound
jecxz
(bad)
ret
mov
das
jmp
jb
or
ror
mov
nop
mov
movs
lea
std
scas
mov
inc
push
push
icebp
out
inc
aaa
hlt
stc
push
into
mov
push
movs
push
jno
outs
lock
mov
lods
push
add
jbe
jns
xor
movs
jns
lea
movs
dec
test
scas
push
icebp
loope
lods
xchg
jmp
idiv
inc
popf
jae
xlat
lahf
mov
pop
sbb
pop
add
push
mov
fimul
inc
jns
mov
sub
sub
sbb
das
fisttp
sbb
push
push
fild
(bad)
jbe
in
inc
popa
and
dec
fnstenv
sahf
inc
sbb
popa
pop
stc
cmp
sub
test
cmc
xchg
sub
dec
mov
stc
fidiv
outs
dec
push
pop
inc
pop
add
out
icebp
add
mov
dec
cwde
jmp
jo
xchg
fistp
sub
ds
aaa
jo
repnz
stos
dec
sub
sub
inc
out
imul
idiv
fistp
cmps
int
dec
dec
loopne
repz
gs
mov
imul
sub
gs
jns
ins
cmp
retf
adc
mov
adc
sar
scas
jns
xchg
sub
mov
sti
mov
test
icebp
fxtract
adc
jb
sbb
xchg
jbe
movs
(bad)
push
mov
mov
icebp
stos
(bad)
and
push
test
inc
(bad)
fsub
xor
test
std
cwde
jbe
loope
and
imul
jmp
push
push
fdivr
enter
cld
leavew
into
je
shl
int3
mov
and
xor
mov
dec
sbb
mov
int
loope
cmps
and
test
xchg
xchg
das
push
in
push
leave
xor
pop
jnp
xchg
and
mov
cs
retf
sub
dec
lods
cli
jnp
or
mov
ror
std
test
ins
mov
xlat
xchg
pop
mov
xor
loope
jmp
mov
jno
(bad)
adc
into
mov
mov
cs
sbb
ins
dec
sub
in
div
test
dec
ins
mov
sbb
popf
mov
push
aas
pop
inc
ins
in
popa
sar
sbb
outs
jmp
stc
mov
call
adc
sub
mov
dec
sbb
mov
xchg
mov
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
icebp
and
xchg
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fstp
jns
cmps
imul
ja
ror
into
les
fst
int
dec
pushf
js
jmp
xor
les
in
repz
inc
jae
mov
xchg
outs
jns
pushf
add
pop
dec
sar
xchg
daa
sbb
mov
je
out
xor
cli
mov
dec
test
mov
jge
call
inc
js
jb
enter
hlt
mov
pop
clc
bound
sar
mov
fs
jmp
scas
scas
sub
mov
mov
xchg
adc
inc
cld
inc
mov
stos
dec
sub
mov
mov
xor
mov
and
ffreep
fnstsw
(bad)
add
adc
and
jae
push
gs
vmovq
gs
push
sti
jbe
jb
cwde
push
lock
sub
es
mov
shl
jl
mov
shl
(bad)
leave
mov
fwait
(bad)
jle
mov
and
sub
sbb
or
outs
jnp
or
movs
push
pusha
jge
or
adc
push
mov
jae
mov
das
xchg
sbb
fdivr
adc
cld
sbb
xchg
cmp
out
loop
js
rcr
inc
mov
loopne
mov
mov
arpl
push
pusha
jo
lods
pushf
mov
or
sbb
adc
ja
jo
mov
adc
inc
mov
outs
add
adc
ins
or
pop
scas
add
dec
pop
int3
sub
out
idiv
cmp
fucomi
adc
xchg
mov
pop
adc
xlat
movs
es
adc
sub
pop
jbe
pop
sti
mov
sub
add
push
das
cmc
jmp
outs
and
iret
shl
jecxz
repz
jns
aam
mov
bound
xor
xchg
push
pop
and
xor
adc
aam
xchg
rcr
add
fbstp
sub
dec
dec
or
push
sbb
or
jo
adc
dec
xchg
(bad)
ja
mov
cli
cmp
stc
sub
mul
xchg
mov
je
jg
pushf
(bad)
adc
adc
mov
dec
push
cmp
js
jle
lds
mov
aam
or
xor
fs
xor
lea
popf
or
pop
lock
push
cld
xor
cmp
xor
sub
inc
add
mov
inc
movs
test
adc
je
(bad)
fmul
xchg
test
jnp
cmc
or
je
retf
mov
js
pop
movs
xor
clc
ds
mov
sbb
imul
jle
push
dec
dec
mov
lods
dec
pop
push
mov
sub
push
loopne
retf
xchg
ficom
mov
scas
jge
sub
aas
push
stos
jl
outs
outs
scas
dec
mov
fstp
jnp
sar
aad
in
call
outs
mov
lods
outs
es
popa
sbb
or
add
retf
sub
adc
or
inc
retf
aas
in
jge
out
xor
push
loope
inc
cmp
jno
cmp
mov
out
retf
in
stc
or
psubsw
aad
in
and
adc
iret
cmps
repz
test
int
xchg
sbb
out
je
dec
inc
sbb
jg
test
dec
cdq
stos
xor
arpl
mov
adc
xor
jne
xlat
cmp
call
sub
mov
sbb
mov
sbb
xchg
call
and
leave
fst
and
addr16
(bad)
add
and
pusha
inc
int3
pop
dec
movs
pushf
xchg
pop
test
hlt
adc
pop
out
pop
mov
das
icebp
ins
adc
fdivp
gs
dec
fidiv
rep
jmp
push
pop
sub
cmp
leave
sub
scas
ja
hlt
and
ds
pop
or
pop
cmp
sub
aaa
mov
repnz
push
mov
fisttp
mov
inc
mov
push
jbe
and
call
mov
jmp
icebp
fsubr
push
cli
xor
inc
(bad)
scas
pop
fdivp
addr16
inc
jb
or
leave
sub
push
xchg
movs
pop
mov
jne
js
cmp
scas
or
mov
(bad)
xor
xor
(bad)
jmp
jl
mov
in
mov
mov
and
shr
cmpxchg
jmp
sub
addr16
mov
mov
ret
out
in
adc
push
jnp
loop
or
push
aam
cdq
fiadd
or
in
mov
imul
xchg
data16
sti
pop
inc
es
push
xbegin
sbb
add
into
movs
dec
pop
sub
and
lahf
pop
mov
aad
in
sub
push
data16
xchg
mov
ss
and
and
ins
sar
adc
mov
fidivr
fadd
add
adc
(bad)
out
aad
or
cmp
in
lods
sti
bound
ffree
jns
fistp
fldcw
(bad)
sub
add
dec
pop
ret
icebp
cmp
outs
lea
rol
push
mov
xchg
cmp
ror
setge
enter
xlat
jno
xchg
cwde
lods
xchg
jmp
xor
mov
dec
pop
dec
sbb
in
ins
mov
movs
pop
xor
and
outs
inc
xchg
pushf
push
xor
rcr
and
jecxz
and
loop
sar
sub
push
inc
dec
sbb
test
cli
cld
push
retf
cli
in
mov
xchg
aas
bound
lock
pop
mov
add
pop
in
call
mov
(bad)
lods
push
and
adc
sahf
lods
es
and
mov
data16
mov
popf
mov
enter
xchg
jae
inc
mov
and
jmp
and
mov
mov
jle
jmp
neg
push
add
mov
bound
fisttp
add
pop
push
mov
les
fild
out
(bad)
mov
sti
push
cdq
jnp
and
and
cmps
out
adc
cmc
fstp
lods
rcr
mov
push
fst
sti
loopne
ror
shl
out
xor
mov
ss
add
lock
icebp
adc
retf
and
pop
lock
jae
scas
movs
xchg
xor
arpl
ss
repnz
xor
daa
and
mov
mov
add
test
adc
jg
test
sub
and
shl
sbb
xor
fimul
mov
add
leave
pop
gs
mov
cmps
or
retf
fcomip
div
mov
cdq
mov
icebp
and
pop
(bad)
mov
lahf
pop
lea
mov
movs
lea
movs
mov
pop
icebp
push
out
xor
push
out
ret
mov
movs
mov
leave
pop
mov
jmp
mov
outs
jne
add
sub
lea
pop
lods
test
ror
cmps
pop
cmps
cmp
dec
enter
add
hlt
mov
repnz
fiadd
cmp
sub
mov
sbb
cmp
aam
add
in
and
sub
add
popf
inc
mov
lods
ror
int
addr16
loop
sbb
jbe
jns
xor
jecxz
mov
or
idiv
call
js
popf
adc
les
ins
dec
sbb
push
add
es
loop
mov
pop
sub
shr
(bad)
adc
mov
push
xchg
rcl
mov
(bad)
cli
jecxz
pop
rcl
push
ja
sub
xchg
mov
mov
xchg
pop
mov
loope
movs
or
fcmove
je
popa
lahf
popf
retf
cmc
leave
das
std
push
cs
add
add
sahf
pop
lods
aad
das
imul
arpl
xchg
push
mov
xor
sti
sbb
in
fldenv
in
mov
xor
mov
daa
add
(bad)
out
cs
cmp
cmp
aam
mov
popa
(bad)
cli
sar
mov
push
cmp
dec
jae
mov
xor
mov
jmp
adc
cld
mov
dec
or
add
xchg
fsub
xor
jmp
rcl
je
iret
mov
mov
pusha
js
pop
test
enter
fwait
mov
xor
pop
loop
idiv
lods
jns
and
out
mov
sbb
jle
jne
(bad)
and
jecxz
mov
jge
jmp
stos
push
jge
loop
lock
push
fadd
mov
mov
fistp
push
aad
fild
mov
dec
out
popf
scas
imul
jl
cmp
call
adc
push
stc
inc
push
sub
push
mov
shl
inc
je
aaa
imul
dec
xchg
call
repz
in
out
adc
lds
pop
fcmovnbe
jo
mov
out
test
shrd
idiv
and
das
sub
stos
add
push
shl
xchg
call
add
int
cmp
pop
jno
sub
jnp
mov
(bad)
jge
mov
adc
(bad)
jl
rol
push
iret
imul
mov
xchg
mov
in
clc
call
cmp
dec
push
pop
movs
in
or
push
fdivr
mov
add
or
mov
lods
inc
mov
xchg
je
out
xlat
jge
push
jmp
lea
xchg
or
xchg
loopne
(bad)
jbe
out
inc
ja
push
cmp
mov
mov
aas
popf
daa
pop
adc
or
xor
clc
ins
dec
mov
sbb
popa
or
or
inc
push
in
mov
jo
ins
shl
or
mov
mov
into
retf
sbb
(bad)
cld
sub
mov
mov
cs
mov
xchg
xor
fidivr
inc
leave
jne
sub
retf
dec
enter
fdivr
add
repnz
xchg
or
movs
jp
pop
mov
fiadd
push
aad
or
cld
push
cwde
jp
(bad)
lods
out
inc
lahf
push
aad
xor
mov
xlat
jns
out
repz
jne
xor
imul
or
repnz
and
jno
fld
mov
mov
ret
hlt
xlat
push
cld
ins
fist
dec
call
xchg
shl
push
push
pop
sbb
pusha
pop
(bad)
out
sub
in
test
not
mov
mov
jecxz
xchg
xlat
adc
data16
cmps
fdivp
fwait
mov
sbb
movs
adc
mov
ins
outs
int3
clc
sbb
gs
(bad)
and
sbb
xchg
fwait
sahf
mov
jns
(bad)
rcl
dec
cmp
lock
sub
popa
push
pop
hlt
enter
aad
cli
hlt
add
dec
adc
or
adc
movs
and
add
pop
xchg
jmp
pop
xchg
inc
loopne
add
dec
jle
aad
xchg
inc
sub
ret
xor
push
cmp
in
out
cmp
inc
icebp
inc
pop
jmp
mov
jns
xlat
sub
and
cs
dec
sub
or
loope
inc
xchg
lds
xor
shl
xor
jb
lahf
call
sbb
test
lea
adc
das
inc
mov
xor
das
sahf
fadd
addr16
adc
inc
leave
lds
sar
sub
les
push
rcr
pop
sub
xchg
scas
arpl
ds
shl
dec
xor
cdq
sar
int
ret
mov
jge
mov
mov
out
sbb
pop
mov
or
lahf
push
adc
into
retf
data16
cli
out
jge
jmp
and
jle
sub
mov
add
or
xor
mov
hlt
les
mov
mov
push
in
add
lds
retf
cs
or
popa
mov
push
(bad)
mov
idiv
jl
sub
hlt
inc
(bad)
ror
hlt
cli
xchg
fdivp
pop
pop
sub
ins
idiv
xchg
repnz
add
popf
xchg
pushf
or
sub
jge
cmps
jae
sbb
in
fisttp
leave
(bad)
dec
mov
test
and
popa
ror
lds
test
add
cs
neg
inc
push
cmp
xchg
enter
ja
xor
dec
popa
push
sti
cwde
mov
adc
push
jecxz
repz
aaa
add
sub
xchg
adc
hlt
and
imul
sahf
shl
pop
or
aam
xchg
xchg
adc
mov
pop
add
and
jb
push
push
mov
arpl
stos
cdq
ds
mov
ins
add
dec
cmps
movs
enter
sub
sti
bnd
test
dec
nop
mov
cmc
es
in
jmp
inc
push
(bad)
int3
cmp
scas
sbb
ins
fiadd
fucomi
aas
ins
(bad)
in
aas
into
gs
dec
or
aas
fsubr
aad
test
dec
sub
xlat
test
xor
sti
sbb
pop
fstp
adc
int
rcl
push
pop
mov
mov
xchg
cmp
mov
mov
in
div
sub
(bad)
sahf
add
add
arpl
dec
push
lahf
in
enter
dec
pop
in
cli
pop
fisttp
pop
ret
lahf
aas
and
jns
add
or
sbb
push
out
jecxz
jne
xor
push
xor
mov
scas
(bad)
shr
mov
mov
hlt
mov
mov
push
movs
mov
push
(bad)
cmp
data16
aaa
dec
outs
shl
mov
add
mov
or
xlat
and
cmp
imul
jg
add
push
push
fimul
or
push
fstp
sub
call
lods
mov
in
sub
outs
inc
xor
daa
cdq
loope
dec
pop
jmp
cs
dec
and
adc
adc
mov
sbb
mov
imul
outs
idiv
dec
xor
retf
pop
pop
fwait
mov
xor
xor
pop
retf
and
clc
sbb
xor
loop
mov
pop
imul
sub
lock
gs
mov
sub
scas
xor
enter
adc
xchg
dec
das
fmulp
std
loope
mov
jmp
dec
or
jp
cmp
das
jp
seto
and
cmc
arpl
add
js
pop
in
sub
mov
fucom
aad
jg
adc
addr16
rcr
out
inc
sbb
inc
mov
dec
cmp
xor
out
push
in
xchg
mov
(bad)
xor
jbe
or
mov
jle
ss
sub
pop
or
cmp
retf
das
enter
out
push
mov
cwde
jb
dec
loope
sbb
je
xlat
test
cdq
lea
icebp
add
add
fisttp
cmp
nop
bswap
neg
sub
shrd
int3
and
jle
jge
in
lea
loop
inc
fist
icebp
dec
mov
jmp
imul
out
add
retf
bound
jne
scas
cmp
mov
sbb
ret
and
pop
sub
sti
aam
sub
adc
arpl
sbb
xor
cmp
idiv
aaa
test
loop
cmp
lahf
test
mov
int
mov
lahf
mov
xchg
mov
ret
cli
jo
add
push
rcr
xor
inc
sub
aad
jge
sub
pop
inc
pop
jmp
popf
cmp
je
wrmsr
cli
call
mov
out
cmp
sti
out
jbe
mov
enter
or
clc
lock
dec
rcr
mov
fucomp
std
jb
ret
es
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
das
repnz
outs
push
daa
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
(bad)
in
xchg
lea
jmp
movs
movs
movs
mov
push
jmp
sbb
mov
xchg
sbb
movs
pop
inc
repnz
sti
cmp
push
mov
add
pushf
mov
xchg
adc
dec
retf
int
mov
add
daa
sbb
(bad)
pop
mov
fisttp
ret
xor
(bad)
pop
lock
cmp
ficomp
mov
pop
and
outs
fisub
not
adc
push
repnz
int
or
adc
xchg
adc
jecxz
mov
pusha
add
(bad)
in
push
or
cs
push
(bad)
mov
xchg
jg
stc
test
imul
adc
inc
push
xor
ret
mov
outs
pop
out
jb
aas
cmps
xor
mov
and
cwde
inc
add
retf
mov
add
mov
pop
in
dec
or
jmp
pop
xchg
test
cmp
mov
in
sti
loop
and
jno
std
outs
jns
popf
pop
imul
xor
dec
dec
or
hlt
test
out
mov
sub
mov
cli
jae
stos
mov
cmp
mov
shr
inc
push
push
pop
inc
(bad)
iret
jl
aam
and
mov
test
jmp
arpl
sti
in
and
test
cmp
xor
jle
jb
pop
jbe
pop
std
push
sbb
jg
add
dec
cdq
cmp
cwde
in
pop
retf
jnp
jl
fmul
pop
adc
loope
jle
jns
or
add
pop
(bad)
cmp
cmp
call
jo
popa
dec
nop
fsubr
je
push
aam
test
push
push
adc
idiv
adc
jne
jmp
cmp
movs
bound
add
cmps
stos
cdq
mov
lahf
dec
(bad)
cmp
mov
xor
and
fs
dec
retf
movs
test
addr16
mov
cmp
scas
jne
xor
adc
out
in
jae
js
jmp
dec
stos
enter
(bad)
in
push
inc
push
lahf
cmc
ins
mov
out
or
pop
retf
(bad)
lock
idiv
mov
das
int
(bad)
and
dec
push
inc
hlt
add
imul
xchg
fild
mov
das
and
outs
pop
mov
das
pop
cmp
xchg
ds
jmp
call
retf
xor
xchg
xchg
imul
adc
arpl
mov
(bad)
getsec
bound
cmps
sub
jecxz
xchg
push
mov
aad
jb
(bad)
adc
popf
xor
xchg
push
push
shl
xchg
outs
fcomi
daa
cs
inc
sbb
ds
adc
fwait
and
mov
mov
sti
les
mov
aad
jno
jno
xchg
dec
stc
sti
mov
mov
scas
xchg
jo
jecxz
lds
cmps
aaa
sbb
sbb
mov
xchg
mov
and
sbb
adc
aas
sahf
inc
cmp
push
sub
xchg
pop
stos
inc
sti
pushf
in
jp
(bad)
ffreep
pop
cli
lock
movsx
es
mov
dec
jnp
mov
mov
inc
retf
mov
movs
addr16
push
test
cmp
cmps
fimul
retf
lods
enter
inc
stos
pop
stos
das
(bad)
dec
sahf
cld
std
sahf
xchg
xchg
add
pop
iret
cmp
loope
ret
or
sbb
jne
pop
adc
(bad)
(bad)
fcomp
popa
pop
mov
xor
fild
dec
js
ja
jb
in
push
xchg
xor
pop
or
sti
cmp
xacquire
fidivr
sbb
rcl
dec
loopne
push
(bad)
adc
sbb
popa
jmp
arpl
retf
sub
dec
jno
xchg
mov
xchg
lahf
movs
pop
(bad)
xor
js
jg
bound
in
and
scas
xchg
xchg
in
add
(bad)
inc
ins
repnz
adc
sbb
jae
ret
add
movs
cmp
xor
dec
xor
mov
adc
or
jp
xchg
mov
mov
stc
pop
repz
cmp
add
add
adc
scas
addr16
xor
in
push
jbe
cwde
fwait
cmp
inc
xchg
sahf
adc
repz
mov
sti
cs
cs
inc
imul
and
xchg
sbb
and
push
cmp
out
inc
call
in
mov
fs
rcr
xchg
pop
sbb
mov
sti
mov
adc
mov
aas
aam
pop
aaa
push
push
or
lea
mov
cmp
cmc
or
or
aaa
push
jbe
clc
push
xchg
sbb
int
inc
cmp
sti
aas
test
push
rcr
dec
dec
cs
mov
fstp
cmp
arpl
stos
jne
xchg
aaa
in
pusha
movs
adc
add
fs
aad
sub
add
outs
dec
outs
push
(bad)
sti
jle
mov
lods
hlt
call
clc
iret
pusha
rcl
es
movs
mov
xlat
push
jge
nop
jp
shr
ror
sub
or
jmp
sbb
push
lods
sbb
xor
popa
(bad)
outs
jnp
mov
scas
push
fcmovnb
push
adc
lods
add
mov
(bad)
xchg
ret
repnz
dec
fstp
imul
inc
fwait
loope
popf
add
and
sub
clc
lds
dec
jo
jo
popf
inc
pop
cdq
lds
cmp
lock
push
jg
je
movs
mov
(bad)
xor
cmp
push
stos
js
in
and
scas
xchg
xor
mov
(bad)
outs
mov
std
sbb
sbb
pop
fcomp
sar
das
movs
retf
adc
div
push
(bad)
mov
push
cmp
jno
mov
enter
sub
mul
push
pop
loopne
jmp
test
es
push
mov
lea
mov
repz
aad
mov
push
mov
repz
pusha
jo
dec
outs
int3
or
jl
in
aam
out
xchg
mov
test
add
inc
mov
js
xchg
xchg
out
repz
das
lea
fild
mov
jno
shl
leave
push
out
fsubr
mov
inc
dec
cli
ret
cmp
jg
imul
xchg
add
fistp
inc
inc
dec
je
sub
leave
aad
mov
or
(bad)
cmps
cmova
arpl
test
out
fild
jae
ss
ret
daa
sbb
mov
sbb
hlt
femms
inc
mov
repz
dec
inc
sub
xchg
cmp
inc
push
retf
inc
(bad)
movs
xchg
adc
shr
mov
aas
sub
push
jne
xchg
scas
pop
test
and
dec
test
sbb
hlt
aam
bswap
icebp
(bad)
xor
cwde
test
mov
mov
daa
pop
pop
int
sbb
fidiv
movs
cmp
xchg
and
or
push
icebp
cmp
repz
mov
or
out
mov
jle
inc
stos
pushf
jg
sub
push
xchg
inc
idiv
sbb
push
xchg
mov
(bad)
neg
mov
imul
out
rcr
rol
loope
sti
inc
popf
xchg
mov
fidivr
push
dec
pop
and
aas
leave
fdiv
(bad)
jne
or
cmp
sar
mov
int3
add
scas
sbb
stos
(bad)
inc
mov
jae
out
cmps
cmp
hlt
out
cs
cmp
outs
leave
xchg
es
sub
ficom
enter
dec
mov
(bad)
fisub
xchg
jecxz
jno
mov
loop
jae
sbb
pop
jecxz
ret
mov
jg
xor
retf
cmp
cs
sub
int3
and
fisub
sub
popf
imul
js
ret
ja
dec
push
sbb
repnz
xlat
(bad)
mov
or
stos
lea
hlt
pop
in
inc
imul
mov
sub
sub
push
mov
js
push
or
cmp
dec
(bad)
test
lods
test
arpl
xor
pop
jle
test
jb
adc
mov
pop
or
fisttp
mov
stos
adc
enter
in
push
popf
mov
pop
sbb
push
xlat
scas
mov
xor
jp
mov
xor
jnp
xor
dec
mov
ins
scas
jge
cwde
icebp
jbe
push
push
dec
jmp
pusha
mov
mov
jl
shl
add
into
not
enter
xchg
push
lods
sub
inc
mov
fiadd
sti
test
jo
sar
lods
iret
adc
push
sbb
dec
stos
fstp
jecxz
stc
shl
push
dec
ds
push
jae
add
fiadd
mov
xlat
cmp
inc
pop
js
cs
lahf
xor
sti
das
push
sbb
cmp
sub
repz
sar
mov
cmp
cmp
adc
ret
cli
aad
pop
xlat
(bad)
fstp
adc
test
out
sub
ja
inc
pop
pop
jge
mov
ds
pop
clc
dec
fidiv
add
cdq
and
push
push
ins
rcr
pop
movs
lds
in
xchg
fcomp
mov
loope
jo
mov
cmc
xlat
cmc
and
or
push
push
push
push
mov
xor
xor
cmps
in
cwde
adc
fdivr
jp
sbb
mov
test
adc
mov
hlt
fs
jmp
int
pop
dec
adc
pop
xchg
pop
bound
pop
in
sub
(bad)
and
jp
lea
aaa
(bad)
cli
mov
cmps
mov
shr
daa
ins
add
push
lock
pop
jecxz
push
push
jle
or
mov
inc
pop
ja
push
xor
fldcw
xchg
test
aad
(bad)
fistp
jb
lds
or
mov
push
or
sub
mov
dec
lds
out
popf
push
(bad)
mov
sar
cmp
cmc
xchg
xchg
movs
stc
into
lds
js
mov
jae
and
mov
sti
pop
mov
adc
cmp
push
jb
and
popf
in
or
sbb
cs
jg
mov
xchg
scas
hlt
cmc
pop
stos
xchg
cmp
xor
jmp
shl
je
cwde
xor
pop
mov
mov
je
adc
mov
stc
(bad)
mov
add
pop
cmp
push
es
cdq
in
cwde
xor
push
es
dec
mov
add
jp
out
mov
push
out
pop
in
mov
loopne
into
pop
mov
inc
clc
addr16
test
pushf
fist
adc
adc
push
or
sbb
movs
daa
mov
es
data16
jl
xor
inc
fs
push
sbb
jno
xchg
in
inc
mov
stos
in
dec
daa
jmp
fs
mov
leave
pop
test
idiv
mov
and
fwait
loop
(bad)
sub
mov
mov
cmova
cmps
fwait
sbb
xchg
leave
movs
hlt
mov
jno
sbb
xchg
cmp
sub
xchg
dec
hlt
push
cld
jmp
xchg
adc
mov
cmp
iret
sub
in
fdivrp
repz
ins
cld
pushf
out
pop
cmp
adc
ret
ret
jge
adc
jnp
ficom
mov
inc
call
fdivp
imul
es
aaa
test
pop
mov
mov
jecxz
scas
sahf
retf
adc
inc
jnp
pop
dec
les
sub
icebp
push
daa
mov
pusha
sub
xchg
lea
and
xchg
mov
xchg
fisub
(bad)
loop
add
fimul
mov
dec
inc
jg
fisub
mov
nop
jg
(bad)
test
loopne
lds
retf
outs
popf
repz
test
jmp
adc
xchg
jp
aas
cli
adc
movs
mov
lahf
(bad)
mov
and
adc
xor
aad
stos
push
(bad)
icebp
xchg
push
ror
aas
pop
mov
mov
cdq
clc
rep
jns
sub
hlt
js
ret
dec
fdivr
js
xchg
mov
call
add
hlt
sub
(bad)
and
push
sub
imul
dec
inc
inc
dec
int3
mov
xchg
adc
push
add
fcomp
xor
push
pop
in
iret
and
xor
mov
pop
sar
jbe
jnp
adc
inc
mov
mov
repz
cmps
mov
aaa
test
retf
cs
stos
xchg
xchg
adc
fwait
push
popf
aaa
sti
fdiv
test
in
mov
rol
ss
nop
cli
lahf
cwde
dec
sub
sar
dec
outs
test
and
pop
(bad)
xchg
enter
inc
ror
test
popa
shl
adc
mov
test
jmp
pop
popa
rcr
sbb
cdq
cdq
fs
push
imul
sbb
cmp
cmp
mov
lods
movs
scas
loop
inc
xor
rcl
xchg
push
dec
xchg
push
xor
loop
ja
xor
cs
neg
sub
test
sbb
mov
call
shl
jne
jl
adc
mov
inc
sbb
xor
test
fdecstp
or
or
sub
lea
pop
dec
lods
lds
stc
in
xchg
imul
xchg
ja
pop
nop
adc
jae
push
or
(bad)
out
(bad)
cmp
lea
scas
mov
dec
pop
adc
ss
xor
mov
cmp
les
iret
fwait
pop
loopne
sub
sub
rcr
xchg
les
jmp
push
jmp
rcr
add
lea
pop
das
lock
mov
jno
jmp
xchg
and
dec
jle
bound
sub
cmp
outs
arpl
or
inc
mov
(bad)
fldenv
sub
retf
and
movs
xor
repnz
retf
and
outs
movs
dec
or
test
jecxz
out
lock
pop
xchg
jl
pushf
push
add
test
or
mov
scas
es
in
mov
jae
lock
nop
jg
mov
aas
ds
aad
imul
js
outs
adc
scas
mov
jmp
iret
sub
pop
push
pop
lahf
movs
mov
(bad)
cmc
enter
setno
idiv
jns
leave
fwait
cmp
jmp
pop
das
ins
shl
mov
push
les
out
mov
(bad)
(bad)
dec
pop
or
add
mov
(bad)
jb
in
cmp
and
aad
lods
sub
add
ins
mov
mov
sbb
and
jmp
adc
out
aas
jae
xchg
jbe
ins
daa
push
daa
or
out
in
jecxz
dec
add
int3
mov
aaa
loop
xchg
cwde
loopne
jae
out
xchg
adc
push
repz
jg
xchg
push
jge
adc
dec
fisttp
jge
lock
cmp
mov
or
sbb
push
cmps
push
mov
add
ja
inc
sub
and
cmp
or
push
pushf
cmp
pushw
jge
imul
fild
mov
mov
mov
fstp
sbb
dec
cld
and
fwait
ja
inc
inc
sbb
mov
rol
call
sahf
call
jmp
or
(bad)
or
jns
les
jmp
pushf
cmp
mov
(bad)
movs
adc
or
push
(bad)
js
aas
leave
shl
hlt
push
inc
(bad)
sbb
inc
lods
add
popa
int
mov
into
popa
movs
leave
mov
mov
add
push
retf
mov
mov
cwde
mov
test
jp
dec
cmp
mov
mov
pop
lea
loope
push
je
dec
div
js
ficomp
shl
imul
bound
mov
dec
andps
push
mov
dec
mov
mov
mov
adc
icebp
xor
pop
jae
sahf
repz
test
push
test
repz
aas
(bad)
cld
repz
aas
jmp
add
icebp
je
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jbe
popf
scas
push
out
sbb
dec
div
sbb
fst
cmp
mov
out
iret
je
cmp
mov
add
shl
or
pop
sqrtps
lahf
jbe
ds
aam
repz
cmp
xor
or
rol
call
aas
xor
cmps
lods
pop
(bad)
jecxz
movs
je
mov
aam
cmps
gs
loope
inc
test
je
mov
pop
cdq
xchg
mul
adc
ret
cmp
xchg
pop
sub
mov
inc
(bad)
adc
scas
cmp
div
push
fisubr
fistp
adc
adc
retf
xrelease
imul
jnp
loope
mov
mov
cs
scas
sub
cmc
push
shl
cs
sub
and
ret
xlat
add
or
mov
inc
push
dec
shl
dec
cs
add
rol
das
aaa
test
ret
cli
mov
mov
cli
gs
dec
(bad)
in
cwde
xor
jo
sahf
js
or
jmp
out
inc
push
mov
inc
mov
jecxz
mov
icebp
test
push
clc
sub
stos
adc
hlt
std
push
xchg
xchg
mov
dec
lahf
gs
and
out
jne
sbb
rcr
(bad)
xchg
cld
jmp
and
sbb
jno
pop
ins
out
lods
jge
jmp
ins
pop
(bad)
hlt
mov
mov
pop
lds
call
scas
or
xchg
mov
mov
aad
jle
fwait
arpl
fs
xchg
inc
and
icebp
jae
mov
ror
imul
pusha
mov
not
or
inc
push
repz
or
cmps
shr
icebp
mov
push
inc
dec
lods
cld
mov
inc
test
pop
in
rol
cmp
in
sti
pop
test
inc
jmp
lods
inc
lahf
retf
(bad)
sub
or
mov
sbb
sub
sub
loop
retf
jo
popf
mov
mov
ins
into
xchg
movs
(bad)
addr16
jp
mov
(bad)
jmp
sar
jnp
xor
call
add
loopne
jo
mov
xor
mov
test
ret
xlat
nop
jbe
cwde
int
push
dec
add
cmp
aas
mov
addr16
pusha
add
mov
js
inc
xchg
shl
inc
cmp
mul
test
push
es
sti
add
std
outs
adc
jae
int3
lock
dec
cwde
jno
les
inc
jecxz
vrcpps
jo
mov
mov
ret
push
dec
dec
sub
sub
lock
inc
adc
scas
lock
mov
pop
aaa
jecxz
aas
dec
xchg
cmps
and
into
imul
(bad)
test
outs
cmps
mov
gs
and
jmp
inc
add
loopne
jbe
ins
mov
sub
xor
xor
cmps
push
pop
mov
pop
inc
js
ret
scas
push
or
mov
pop
push
and
jno
mov
in
idiv
sbb
ins
mov
mov
mov
mov
dec
and
and
pop
or
retf
mov
ins
ret
push
lahf
fcom
adc
sahf
dec
inc
(bad)
pmaddwd
dec
sbb
neg
aas
sbb
nop
push
in
cmc
sbb
adc
mov
dec
sub
movs
imul
gs
dec
cmp
fdiv
gs
setp
mov
in
clc
add
mov
pop
loopne
rcr
dec
stc
fst
inc
shl
sbb
jb
push
retf
arpl
pop
xchg
das
repz
jmp
mov
ds
push
stc
cld
push
cmp
clc
xor
retf
fistp
imul
and
pushf
sub
and
xchg
rcr
add
mov
pop
mul
ins
cmp
scas
repz
aas
mov
fwait
enter
mov
pop
push
dec
gs
dec
xchg
mov
jns
cmp
or
mov
ret
jmp
test
mov
sbb
add
ret
cmp
sbb
sbb
mov
test
js
ss
pop
push
pop
dec
(bad)
push
gs
test
retf
loop
into
call
push
call
into
(bad)
jle
pusha
adc
jne
and
and
movs
loope
iret
fisub
stos
xlat
mov
dec
outs
jo
adc
clc
in
xor
cli
xor
data16
mov
sti
pop
sbb
cdq
test
hlt
popa
leave
in
leave
sub
mov
ffreep
xor
xor
lods
(bad)
ds
les
pusha
mov
inc
leave
outs
pop
mov
xchg
js
push
fimul
xor
rcl
shr
les
push
jno
xchg
retf
aad
std
in
xor
cmps
dec
rcl
jecxz
lahf
adc
shr
cmp
and
mov
(bad)
mov
jne
push
xchg
loopne
aad
inc
test
mov
fist
jecxz
cmp
in
enter
jo
push
addr16
inc
push
test
jmp
or
mov
add
outs
cmc
cmp
jl
inc
xchg
and
mov
stos
sbb
sub
test
cmps
jns
xchg
dec
scas
retf
(bad)
jae
and
xor
jno
adc
cmp
push
(bad)
pop
mov
dec
mov
cld
push
xchg
push
push
cli
sbb
pop
xchg
xchg
stc
popf
(bad)
outs
ret
into
mov
pop
cmp
fld
add
inc
mul
xor
movs
push
sar
xchg
mov
dec
inc
push
xchg
ret
imul
or
sbb
arpl
ret
lahf
cmp
fiadd
outs
pop
mov
mov
(bad)
jp
mov
ins
sbb
mov
mov
pushf
push
sar
xchg
inc
mov
mov
dec
nop
xchg
cmp
movs
jo
push
adc
ds
in
ss
xor
cmp
push
mov
es
jmp
pop
or
sub
fmul
push
dec
enter
mov
xor
sbb
mov
add
xor
mov
and
mov
cmp
sbb
mov
bound
mov
jle
cmc
mov
jecxz
and
xor
adc
mov
inc
mov
push
xchg
mov
or
cmc
repz
or
inc
popf
pop
adc
mov
cs
push
sbb
repnz
scas
and
push
test
sahf
mov
mov
retf
cmp
mov
mov
nop
sub
dec
xchg
retf
sub
or
iret
(bad)
mov
repz
pop
test
xor
xchg
lock
xor
in
or
in
jbe
nop
rcr
std
popf
idiv
je
(bad)
xchg
xchg
xor
jmp
imul
jmp
cwde
fisttp
dec
mov
sbb
ins
jp
dec
mov
imul
adc
sub
popa
pop
add
mov
cmp
mov
jnp
les
pop
adc
xchg
(bad)
pusha
cs
repnz
xor
xchg
push
xchg
push
(bad)
jmp
les
dec
mov
cmp
les
enter
test
xchg
xchg
sbb
xchg
sub
outs
fsubr
retf
lea
imul
jmp
rcl
fwait
or
aas
addr16
mov
aaa
out
daa
retf
imul
retf
ret
mov
adc
gs
sub
popa
cld
out
mov
popa
pop
dec
or
mov
pusha
hlt
loope
pop
mov
mov
jle
ja
xor
sbb
push
push
mov
addr16
adc
mov
sbb
push
call
sub
and
cli
out
pop
lods
sub
sbb
popa
outs
sbb
fcomip
out
xor
xchg
xchg
and
in
(bad)
cmp
mov
push
lods
xchg
mov
into
gs
ret
sub
push
cdq
cmc
push
jns
xlat
clc
call
inc
mov
fsub
jp
out
aam
and
hlt
std
loope
mov
inc
out
and
dec
xchg
jecxz
cli
xchg
pop
bound
jne
pop
mov
dec
ret
aas
into
not
iret
test
sub
int
aaa
push
sbb
cmp
cmp
sub
stc
call
add
mov
cmps
retf
lock
pop
push
or
mov
pop
jo
movs
mov
xchg
and
loopne
in
jp
mov
mov
in
leave
pop
clc
mov
aad
cmp
mov
xchg
xor
sub
je
aaa
in
adc
outs
rol
adc
sub
push
xor
sub
sar
ja
mov
or
cmp
adc
sbb
and
in
jmp
aas
cmp
pop
adc
mov
and
pop
xchg
mov
hlt
dec
add
mov
jg
jmp
dec
(bad)
xchg
movs
jns
test
xor
(bad)
outs
push
push
cmp
nop
movs
xor
sbb
mov
in
fidiv
push
ss
dec
push
lods
mov
xabort
jge
and
jae
into
sahf
outs
xchg
hlt
inc
jle
xor
xchg
inc
pop
dec
push
fidiv
mov
fdivr
and
adc
push
sub
stos
push
push
lea
jns
aad
push
leave
jl
gs
pop
mov
clc
repz
mov
leave
mov
adc
dec
fnstsw
pop
cmps
xchg
mov
hlt
cs
xchg
and
pop
xchg
jmp
in
pop
popa
mov
cdq
add
sub
inc
cmps
pop
cmp
push
pushf
mov
mov
stos
jmp
je
out
dec
les
rol
clc
data16
rcl
sbb
movs
pusha
sahf
repz
adc
mov
rol
not
pop
or
sbb
push
jne
cdq
or
imul
mov
mov
pop
leave
fwait
sbb
cmp
sbb
sub
iret
neg
cmp
jmp
mov
push
scas
fstp
and
neg
and
xchg
xchg
pop
imul
push
hlt
fst
shr
ds
mov
xchg
mov
cmps
imul
xchg
cmp
mov
loop
lods
xchg
stos
sar
xor
adc
das
(bad)
mov
call
int
xor
add
(bad)
mov
inc
push
mov
push
add
mov
cmp
sbb
mov
mov
shl
jne
xor
cwde
outs
cmp
mov
daa
getsec
and
sub
fnstsw
and
add
loope
pushf
cld
add
mov
shl
mov
popf
xor
enter
enter
mov
pop
in
and
push
fidiv
and
pop
xor
xlat
mov
pop
push
dec
xlat
ins
pop
(bad)
sub
cdq
xor
jnp
jne
outs
sbb
xor
cwde
scas
dec
outs
in
pand
mov
jg
mov
sbb
sbb
add
cld
and
aam
fisubr
outs
inc
jmp
pop
sbb
pop
nop
and
xchg
(bad)
mov
repnz
mov
call
movs
mov
or
test
xor
dec
mov
repz
xchg
mov
pop
pusha
sub
(bad)
addr16
fst
push
push
xchg
jae
stos
dec
pop
aaa
fistp
ja
aas
mov
mov
dec
dec
dec
dec
adc
out
cmp
push
iret
nop
xchg
shl
xor
ret
pop
and
es
lahf
mov
call
paddb
cmps
push
std
lea
call
dec
test
and
loopne
jmp
popf
pop
scas
add
mov
inc
lock
rol
(bad)
(bad)
jb
sub
inc
mov
std
mov
(bad)
idiv
cmps
repz
push
inc
sub
dec
addr16
mov
ins
jno
pushf
mov
stos
mov
xlat
aam
push
ins
jae
lea
lock
xchg
xor
inc
push
aas
and
push
dec
ret
out
out
iret
scas
std
neg
mov
test
movs
dec
popf
clc
cmp
mov
inc
add
adc
adc
adc
mov
fwait
add
mov
mov
test
pop
fcom
rcl
cld
aas
push
dec
cmps
je
aas
dec
sahf
dec
int3
mov
pop
iret
mov
dec
shl
pop
xchg
lds
aaa
mov
ins
jmp
das
sbb
mov
out
cmp
push
mov
(bad)
(bad)
mov
cli
fucomi
mov
adc
dec
sahf
add
(bad)
dec
mov
mov
popa
out
movs
ret
icebp
xchg
jbe
mov
sbb
pop
jg
iret
repz
(bad)
pop
ja
and
push
xchg
stc
sar
push
cwde
adc
std
xchg
lahf
idiv
xor
pop
lods
push
mov
add
int3
xor
shr
test
lea
mov
pop
(bad)
ret
cmp
xor
scas
jmp
aam
stos
out
int3
imul
loopne
lock
xor
push
imul
dec
sbb
mov
(bad)
adc
cwde
mov
sub
aam
into
and
fst
push
pop
pop
outs
ja
jl
inc
jae
in
jl
lds
(bad)
(bad)
sbb
push
test
push
outs
mov
pop
mov
xlat
and
rcr
out
jno
mov
es
scas
call
cs
gs
fstp
jp
or
fisubr
rcr
sbb
pop
ret
fist
xor
mov
push
jae
mov
in
pop
sbb
sar
retf
xchg
and
xor
push
mov
push
fsub
or
push
push
mov
mov
les
adc
dec
jl
xor
mov
into
in
nop
sbb
mov
retf
out
in
add
pop
push
jo
sbb
jmp
stos
aaa
and
xor
fisttp
inc
fdiv
adc
mov
repnz
retf
inc
dec
pop
pushf
adc
jae
mov
jl
adc
cmp
popa
aam
mov
mov
popa
and
loope
push
popa
push
xchg
mov
shr
outs
or
popf
fwait
pop
dec
xlat
lea
pop
or
cdq
fs
std
cli
out
xor
xor
sub
lds
sub
test
daa
xchg
xchg
or
std
mov
jl
and
retf
sub
add
adc
test
inc
enter
(bad)
push
outs
fadd
scas
test
or
or
mov
call
loope
pop
je
cmps
sbb
in
imul
jle
jl
push
push
or
xchg
push
lods
movs
pushf
(bad)
aas
sbb
mov
jge
(bad)
arpl
sar
popa
xchg
sbb
cmp
push
daa
gs
aam
mov
nop
pop
mov
je
dec
jl
or
inc
cmp
sbb
fs
push
pop
fstp
stc
pop
fisubr
sbb
sub
mov
and
xchg
adc
jmp
fstp
data16
call
push
sub
mov
in
imul
pushf
sbb
imul
mov
mov
cmp
loope
bound
pop
lods
or
jge
mov
dec
push
pusha
in
retf
add
ret
mov
xchg
imul
dec
push
sbb
icebp
mov
mov
sub
pushf
movs
in
into
je
add
mov
sub
aaa
dec
fidivr
mov
das
lahf
out
mov
div
pop
fmulp
cli
(bad)
push
inc
sub
and
mov
inc
pop
cmps
pop
dec
out
mov
push
sbb
fst
das
sbb
xor
mov
ficom
sub
mov
cmps
xchg
sub
out
lods
xchg
mov
arpl
adc
aaa
jb
scas
repz
xchg
cmp
push
clc
sbb
(bad)
in
xchg
xor
hlt
repz
mov
lods
setne
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
jnp
fcom
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
aas
aam
jecxz
icebp
ja
sbb
xor
ins
push
fnstenv
out
push
mov
push
test
fld
neg
xchg
(bad)
clc
jge
jg
jmp
add
mov
lods
jne
jecxz
scas
mov
retf
in
or
fisubr
retf
(bad)
cmp
push
mov
femms
xchg
stc
pop
push
mov
and
sbb
xchg
dec
xchg
lahf
aam
or
xchg
test
ja
mov
sbb
sub
sub
mov
pushf
cdq
mov
out
xchg
adc
push
sub
or
iret
rcr
ja
(bad)
sub
(bad)
lds
es
xchg
sbb
sub
add
gs
fsub
and
lods
jne
movs
sti
mov
or
ret
retf
aas
nop
pop
fst
shl
mov
mov
adc
test
inc
mov
xor
stc
ret
inc
std
ins
xchg
add
mov
stos
jp
(bad)
mov
call
sub
(bad)
call
mov
adc
sub
xchg
bound
jmp
sti
sbb
fisubr
ret
cmp
xchg
mov
adc
(bad)
ret
psubb
pop
jecxz
mov
inc
(bad)
pop
inc
loope
inc
mov
int
push
push
shl
mov
(bad)
aaa
loop
sub
jle
cmps
dec
jge
ja
(bad)
mov
test
push
dec
jp
out
test
cmp
push
xlat
bts
nop
int
imul
imul
pop
mov
mov
sahf
inc
jmp
lods
movs
test
fs
stos
push
hlt
in
mul
jg
jnp
and
mov
into
or
sub
lahf
punpckhwd
jno
das
xor
cwde
fisub
ror
fmul
cwde
lock
out
mov
dec
rcr
sbb
cmps
lock
sub
daa
outs
jp
xchg
cwde
cwde
popf
sub
neg
outs
ins
jmp
out
stos
cmc
das
mov
ja
repnz
fdiv
ret
and
movs
mov
in
(bad)
lea
stc
into
and
sahf
outs
mov
test
xchg
scas
out
mov
cmp
sbb
iret
(bad)
out
cdq
sub
enter
jne
push
in
and
imul
ss
xor
adc
cli
jns
add
push
daa
and
pop
loopne
sub
lock
and
mov
xchg
or
ret
dec
mov
mov
(bad)
shl
jmp
adc
imul
js
sub
jnp
js
cdq
rcl
pop
push
or
mov
inc
mov
push
loope
dec
stc
dec
out
push
ja
inc
sub
lea
push
inc
push
daa
aad
mov
shl
hlt
fcom
mov
adc
add
std
movs
push
iret
inc
call
mov
dec
inc
je
jnp
cli
jp
xchg
pop
ds
or
imul
test
(bad)
sbb
pop
cdq
imul
push
pop
fsub
sti
fwait
test
dec
fdivr
ins
mov
in
mov
iret
sar
test
and
cmp
repnz
scas
xchg
sub
push
sub
or
xchg
ror
pop
jle
repnz
and
jno
(bad)
push
add
or
icebp
and
cdq
out
scas
in
(bad)
out
cdq
ret
ffree
sahf
scas
test
fld
jnp
retf
fsubp
adc
and
cmps
xchg
sbb
mov
push
dec
mov
arpl
push
nop
inc
pop
imul
dec
fdivr
mov
pop
addr16
ins
arpl
mov
rcr
push
xchg
xor
sbb
sbb
cld
loope
retf
imul
mov
push
jl
loop
into
lahf
sar
nop
xchg
push
push
into
shl
and
call
lahf
lahf
cld
sub
cmp
stc
retf
and
in
dec
test
fs
pop
das
addr16
inc
out
pop
fld
mov
stc
adc
xchg
cli
into
popa
jecxz
sub
(bad)
icebp
or
mov
mov
mov
adc
cmps
scas
and
sbb
push
sbb
cmp
add
lfs
ret
cli
inc
das
jle
ins
retf
push
cwde
test
out
jmp
cmps
out
cdq
gs
xchg
mov
imul
scas
or
mov
xchg
xchg
idiv
inc
lods
inc
jns
loope
pop
or
jg
aam
es
or
fist
mov
sahf
push
ds
or
mov
nop
loope
sbb
jno
std
mov
cmp
cli
retf
les
cli
mov
pop
cmp
ss
and
stc
add
shl
mov
sub
push
push
or
xlat
dec
daa
outs
cld
mov
ret
sbb
fcmovu
dec
push
sbb
fwait
cmps
jo
lea
mov
jle
call
jbe
inc
push
lahf
pop
cmp
sahf
repz
jbe
fs
sub
lods
and
je
mov
push
cld
adc
aam
or
adc
push
jnp
sahf
xchg
nop
retf
stos
push
mov
adc
out
pop
in
add
mov
jmp
jae
ror
add
add
mov
add
inc
pusha
pusha
aaa
das
cwde
jmp
mov
or
das
dec
push
xor
and
dec
dec
in
imul
adc
pop
pop
sub
sbb
mov
inc
imul
pop
jb
cmp
sub
ja
in
push
mov
sbb
mov
(bad)
sbb
adc
cmps
stos
fisttp
loop
test
ins
xchg
xchg
ret
cmp
xchg
cdq
dec
and
ins
pop
outs
fiadd
adc
data16
xchg
fist
outs
inc
pop
add
ret
loopne
dec
dec
xor
xchg
cmp
mov
and
xor
mov
mov
cwde
mov
mov
and
adc
mov
(bad)
jmp
mov
inc
mov
sub
inc
fs
push
pushf
or
xchg
arpl
cwde
cmps
cdq
cs
scas
mov
repnz
push
cld
sub
hlt
cmp
stos
vpmulhuw
shl
add
push
or
xchg
(bad)
cmp
xchg
stos
dec
loopne
and
xor
sub
sub
loope
cvtdq2ps
aaa
aas
jl
rcr
(bad)
out
(bad)
mov
stc
xchg
sub
inc
pop
xchg
repz
in
mov
aas
push
or
test
mov
jbe
xor
xchg
jo
fcom
push
mov
int3
push
sbb
mov
aad
shl
sti
jge
and
in
(bad)
cmc
cwde
push
lods
addr16
fldcw
inc
(bad)
pop
ret
add
push
inc
inc
loop
jne
pop
iret
cmp
pusha
out
out
push
stos
(bad)
int3
sub
popa
xchg
push
fcmovb
sbb
jb
sub
add
fdiv
call
and
cmps
imul
rcr
push
mov
popa
sbb
inc
lahf
or
int
ja
(bad)
xor
pusha
ret
aas
adc
cld
mov
ja
push
jg
inc
inc
outs
mov
xchg
test
aaa
dec
pop
ficomp
in
ds
dec
sahf
loop
add
and
ror
jne
jb
push
adc
loop
xor
add
fisubr
(bad)
sbb
sbb
popf
fndisi(8087
call
adc
push
dec
mov
xchg
lods
out
pop
shl
mov
xchg
jge
aas
or
jmp
pop
in
stc
shr
cwde
hlt
sti
std
jae
imul
push
scas
loope
fwait
inc
aad
test
stos
les
fisub
cdq
pusha
cmp
jae
add
mov
aam
(bad)
xchg
dec
xor
(bad)
push
sti
jmp
movs
es
cli
jmp
pop
lahf
call
jecxz
adc
push
add
pop
daa
xchg
adc
cmps
cld
je
lock
jo
mov
call
jmp
mov
loop
add
add
mov
push
jns
push
stos
leave
mov
mov
or
rol
jb
(bad)
cmp
cmp
scas
out
test
into
arpl
xchg
out
pop
dec
pop
adc
fwait
push
int
sub
repz
pop
std
dec
mov
jne
int3
xchg
loop
cwde
test
cmp
push
mov
(bad)
mov
call
inc
mov
pop
jge
and
cli
in
cmp
inc
pop
xor
movs
mov
jb
xor
mov
gs
aad
push
out
cmp
(bad)
and
outs
jbe
add
mov
adc
lahf
mov
jmp
push
lds
mov
in
push
ss
int
add
cmps
push
cmp
cmp
xor
neg
out
rol
xchg
retf
lods
sahf
shl
fs
fstp
fwait
cmp
out
pop
aas
je
cmp
inc
fist
retf
sub
push
neg
repnz
mov
aas
out
xchg
loopne
ds
imul
xor
out
fild
pop
inc
lahf
stos
sahf
xlat
or
dec
adc
jecxz
push
mov
jno
stc
mov
dec
adc
adc
push
adc
inc
pop
xor
dec
add
hlt
adc
mov
adc
dec
jecxz
rcr
ins
scas
movs
je
sbb
div
scas
and
and
jno
cs
out
leave
(bad)
imul
adc
jmp
out
mov
mov
jp
sti
add
inc
adc
add
push
add
mov
lds
in
push
cbw
xlat
rcl
cmps
jb
add
push
push
mov
adc
lods
test
mov
mov
jle
xor
xchg
ret
in
add
rcr
mov
pop
jb
retf
data16
(bad)
ins
sub
retf
xor
(bad)
pop
mov
mov
sbb
lock
pushf
les
(bad)
cmp
sti
cmp
add
sbb
push
lods
fwait
aam
not
scas
out
jmp
inc
inc
test
fiadd
gs
mov
dec
mov
inc
inc
cmp
mov
inc
std
aad
call
sbb
mov
aad
shl
std
pusha
mov
pop
sub
dec
adc
int3
fcmovu
shr
jmp
cmp
test
fsub
push
mov
pop
enter
xor
dec
push
bound
cmp
fs
sbb
sahf
scas
cmp
and
movs
mov
retf
js
sub
sbb
in
add
mov
cli
test
jae
push
and
(bad)
push
jge
iret
js
mov
jno
sub
xor
ja
cmp
or
xlat
cdq
and
prefetch
or
push
or
fistp
xor
lds
mov
scas
out
sub
jo
xchg
inc
call
adc
xchg
sub
cmc
cmps
cmp
ja
inc
inc
xor
mov
jg
outs
jmp
pop
les
fld
movs
out
mov
xchg
retf
jmp
jmp
stos
gs
jp
mov
cmp
cmp
push
imul
sbb
stos
xchg
cmp
leave
popaw
pop
pop
stc
sub
xchg
add
ins
cdq
frstor
sub
lock
ja
jae
ret
pushf
dec
mov
or
xchg
je
jns
pop
xor
jns
gs
mov
and
aas
dec
das
mov
xor
mov
mov
sbb
mov
push
das
sbb
cld
int3
into
addr16
jl
pop
add
jo
sbb
pop
jmp
add
in
fisubr
pop
push
add
repz
cmp
xchg
in
ins
cmp
rcl
xchg
inc
xchg
inc
and
and
jae
test
push
dec
xchg
(bad)
sub
push
(bad)
xor
adc
xor
sub
jo
sbb
fsub
pop
or
call
rcl
pop
mov
or
cmp
and
out
add
inc
mov
in
inc
mov
ins
(bad)
les
jns
ins
push
push
jns
xchg
adc
xor
rol
jl
(bad)
xchg
xchg
pusha
in
sub
hlt
push
mov
sahf
shl
push
jl
pop
inc
jecxz
outs
popf
cmp
(bad)
stc
jae
cmp
popf
jne
add
(bad)
dec
push
push
pop
xchg
sbb
sahf
dec
daa
neg
ds
aas
movs
in
push
lock
xor
cmp
adc
dec
mov
mov
inc
aad
sub
into
retf
mov
in
popa
mov
push
sub
dec
jne
inc
imul
and
and
adc
mov
adc
mov
push
call
stos
pop
jnp
stos
ret
out
cmp
mov
inc
imul
pop
fild
jg
adc
xor
jb
jmp
push
fcmovnbe
sub
jmp
fiadd
and
mov
push
mov
pop
nop
dec
sbb
shl
cmp
fwait
xchg
push
push
pop
jmp
adc
xchg
inc
xchg
mov
pop
or
repnz
jecxz
sahf
mov
enter
push
mov
inc
ret
mov
rdmsr
pop
icebp
sbb
sub
imul
mov
pushf
sbb
stos
cmp
jp
test
fstp
sbb
xor
bound
xchg
test
in
pop
and
sub
fdivr
mov
mov
pop
shr
mov
pop
xor
ja
ds
inc
stos
jmp
(bad)
scas
mov
mov
bound
or
xchg
mov
add
mov
sbb
dec
jg
cmp
not
add
push
xchg
mov
jle
ret
jmp
jb
jl
sub
xor
aad
mov
ins
movs
push
cmps
arpl
adc
mov
mov
mov
fnstenv
cld
push
cmps
fdiv
dec
retf
popa
inc
rcr
iret
repnz
repz
scas
das
sub
xor
test
(bad)
fimul
sbb
cmp
daa
push
jb
mov
dec
cdq
cmps
add
(bad)
aas
stos
push
jae
std
fst
pop
loopne
out
push
cs
test
lods
int3
loop
pop
mov
xor
pop
repz
lock
jecxz
inc
not
sbb
enter
mov
cmp
mov
arpl
adc
adc
out
dec
stc
dec
xor
pop
xchg
fnsave
or
mov
and
xchg
xchg
xchg
sbb
addr16
push
adc
add
lds
adc
or
cwde
inc
jnp
popf
jb
add
out
pop
pop
pop
test
push
cmps
push
lods
pushf
movs
stos
hlt
and
not
fs
inc
mov
adc
dec
cmp
mov
fiadd
and
dec
ins
pop
mov
mov
mov
dec
xchg
cmps
xor
inc
movs
pop
int
sahf
call
movs
xor
adc
pop
cmp
mov
dec
mov
or
add
lahf
addr16
sbb
out
enter
mov
icebp
or
lds
cmp
push
cwde
xor
xchg
inc
pop
rcl
pushf
jmp
mov
cmps
loop
mov
add
push
push
add
pop
test
mov
outs
push
clc
and
dec
in
add
and
cmp
cld
out
loop
stos
pop
ins
mov
xchg
imul
xor
jae
sbb
js
cmp
cmp
xor
int
jnp
idiv
push
cmp
pop
cmp
enter
leave
inc
bound
dec
(bad)
dec
xchg
push
xor
push
mov
retf
add
sub
mov
in
cmps
movs
lds
mov
aas
(bad)
stc
iret
jg
repz
(bad)
cld
mov
inc
adc
(bad)
out
inc
les
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
pushf
outs
arpl
out
ja
scas
scas
jae
jno
es
(bad)
cwde
cmp
in
(bad)
dec
dec
ja
ins
repnz
and
sahf
pop
add
sahf
and
shr
dec
adc
add
sbb
cmps
mov
(bad)
fcmovu
movs
daa
push
aaa
push
bound
sub
test
xor
shl
popa
sub
sbb
retf
mov
lahf
and
jne
mov
cld
fcmovb
sar
or
aaa
repz
(bad)
lea
push
jmp
(bad)
loope
repnz
add
pop
je
mov
les
push
add
mov
in
dec
cld
xchg
mov
imul
jp
call
iret
fdecstp
add
dec
inc
or
push
fimul
cmp
and
pop
(bad)
adc
mov
(bad)
sbb
enter
aaa
outs
pushf
mov
aas
adc
scas
das
inc
test
ins
mov
and
mov
int3
int3
xor
es
mov
pop
gs
push
cmps
ds
dec
call
test
aam
fild
xor
retf
aam
call
mov
xlat
inc
sbb
fnstenv
retf
loop
push
xor
pop
jmp
das
lock
in
mov
fadd
clc
ror
imul
xchg
dec
cmp
sub
mulps
fadd
das
cmp
cmp
mov
les
jne
pop
cmc
pop
pop
sbb
jle
fwait
les
jecxz
xchg
lock
push
(bad)
loop
cwde
add
add
lea
lahf
(bad)
pop
add
es
mov
adc
push
call
mov
hlt
lods
push
push
jecxz
test
cs
add
xlat
retf
pop
jmp
jmp
jns
idiv
mov
lods
dec
pop
cdq
mov
shl
mov
add
inc
jbe
call
ss
call
sub
test
cmp
push
inc
xor
jae
xchg
push
mov
push
pop
jmp
imul
lock
or
clc
push
das
adc
and
xchg
ficom
fs
mov
fs
int3
fwait
jnp
lods
mul
movs
mov
jb
mov
sti
jge
adc
xlat
or
outs
push
test
mov
add
jo
jecxz
jl
in
push
or
shr
aaa
ret
fadd
cmp
call
(bad)
ds
mov
fadd
pop
mov
xor
jle
or
mov
imul
lods
sub
into
sbb
jmp
dec
jae
test
or
mov
(bad)
dec
inc
pop
into
jge
ret
cld
mov
push
or
mov
loope
mov
(bad)
xchg
fbld
xchg
lahf
xlat
stos
fs
pusha
fsubr
repz
mov
pop
xchg
call
or
add
mov
ror
and
adc
xchg
xchg
mov
in
fs
cmp
in
mov
jbe
scas
out
je
dec
mov
cmp
retf
add
out
jns
sahf
dec
jge
in
rcl
jne
fld
sub
xchg
push
movhlps
repnz
mov
cmp
pop
cld
icebp
or
jae
ret
mov
mov
repz
mov
cmp
movs
dec
lds
xchg
sbb
mov
adc
int3
mov
xchg
das
pop
popa
xchg
stos
(bad)
repz
popa
pusha
fidiv
enter
pop
cmc
mov
jecxz
xchg
fldcw
out
mov
pop
js
xchg
mov
xor
mov
shl
lods
jp
sbb
mov
cmp
mov
mov
iret
rcl
xchg
add
sub
stos
sub
sbb
aad
aam
les
sti
push
lods
mov
retf
inc
jae
mov
fisubr
rdpmc
in
xor
or
stc
pop
fistp
stc
or
std
in
xor
imul
mov
cmp
push
stc
xor
ret
ror
pop
sub
std
jp
test
dec
jbe
inc
(bad)
cmc
and
sbb
inc
pop
je
retf
repz
sar
movs
sub
loopne
dec
add
cs
popa
repnz
shl
int3
movs
add
adc
ss
xor
xchg
cld
fbld
scas
or
hlt
xchg
mov
and
inc
hlt
out
stc
pop
push
sbb
or
pop
pop
mov
and
fild
inc
sbb
cmps
jns
jmp
cmp
popa
lahf
push
sar
mov
cmp
mov
jmp
cmps
inc
fs
mov
hlt
mov
cmp
or
inc
(bad)
add
cmp
mov
call
lock
push
stos
pop
retf
push
stos
sbb
and
fstp
test
ss
xchg
nop
xor
aas
jl
sub
hlt
push
inc
outs
lds
fisubr
mov
inc
jne
push
xor
retf
dec
or
out
into
inc
and
mov
aad
hlt
(bad)
mov
xchg
(bad)
and
pop
dec
(bad)
ss
cwde
call
popa
(bad)
push
pop
xchg
imul
ds
lods
push
addr16
cmp
cdq
test
adc
mov
sti
ins
gs
not
inc
or
mov
dec
test
hlt
push
inc
out
stc
dec
inc
loope
aaa
sti
ss
sub
popf
gs
loope
in
or
lahf
xchg
cmps
mov
sbb
dec
xchg
aad
(bad)
and
pop
aad
test
mov
cmp
inc
add
rcr
dec
add
dec
retf
xor
dec
or
dec
jb
je
js
dec
ins
xor
pop
mov
test
mov
into
fadd
(bad)
jb
mov
fwait
adc
push
jno
mov
add
or
dec
ds
inc
jae
jecxz
shr
fimul
in
pusha
(bad)
and
and
fiadd
push
and
xor
dec
repnz
in
dec
aas
sbb
pop
cmp
mov
dec
pop
call
fnstsw
mov
test
inc
jge
dec
add
and
ins
mov
pop
popa
mov
cmc
in
dec
shr
mov
nop
cmp
(bad)
mov
dec
ss
sub
rol
in
jle
xchg
int3
mov
xchg
sti
call
aas
jle
cld
jns
jmp
cli
pushf
xchg
stos
pop
lock
stc
in
loope
stc
and
sub
imul
movs
ror
push
dec
sti
outs
pop
mov
adc
movs
leave
mov
call
push
push
mov
xchg
(bad)
jmp
jle
out
xchg
shr
jecxz
pop
sbb
pop
mov
ja
pop
xor
sbb
lahf
pop
data16
out
pop
cmps
jne
out
daa
lahf
push
push
arpl
adc
cmp
mov
std
mov
and
mov
out
test
(bad)
scas
lock
pop
out
pop
je
jmp
out
call
in
mov
sar
paddw
jp
sub
xchg
sti
(bad)
pop
cli
fld
pusha
test
(bad)
xor
les
adc
jge
mov
bound
xchg
fild
jb
cli
pop
movs
aad
mov
dec
mov
in
(bad)
mov
movs
stos
loop
cmp
ror
mov
pop
xchg
and
inc
adc
jno
mov
pop
adc
fmul
or
mov
rol
movs
push
rol
pusha
ds
ds
inc
mov
push
rcr
movs
mov
push
call
mov
call
or
mov
popf
dec
mov
push
jbe
imul
jb
repnz
data16
pop
pop
in
repnz
jno
mov
and
xchg
ins
push
rcl
xchg
cdq
sti
cmp
pop
out
dec
cli
cmp
inc
lea
cmp
jae
xor
adc
inc
cmps
mov
imul
shl
(bad)
jp
je
xor
cmp
mov
(bad)
sub
js
adc
mov
rcr
jne
mov
sbb
dec
fs
shl
pop
mov
inc
inc
dec
jge
inc
push
push
pop
xor
retf
rcl
adc
cld
ret
pop
sub
imul
call
pop
mov
lea
enter
pop
mov
jp
push
xchg
add
xchg
enter
sbb
push
dec
add
fisttp
(bad)
push
aad
ins
mov
adc
test
cmc
popa
add
iret
icebp
mov
mov
pop
sar
mov
xor
sahf
add
adc
lods
jecxz
repnz
pop
pop
jl
cli
jge
repnz
scas
(bad)
push
mov
cmp
cmps
stos
xchg
push
xor
add
push
adc
jmp
outs
stos
loope
pushf
pop
xchg
pop
pop
int
outs
mov
popf
jg
sbb
mov
mov
adc
popa
(bad)
xchg
retf
(bad)
mov
mov
mov
jne
sub
inc
xchg
ins
pushf
ins
cmp
lods
adc
ror
cmps
shl
jbe
jb
out
daa
fsubrp
sbb
or
div
fisttp
jno
cmp
adc
add
add
xor
sbb
addr16
bound
nop
xor
and
cmp
retf
xlat
push
or
ss
jecxz
xchg
adc
in
jno
icebp
adc
sbb
adc
adc
outs
rol
std
xchg
xor
(bad)
mov
mov
fistp
daa
(bad)
fnsave
mov
jns
hlt
imul
fisttp
cmps
cdq
in
js
call
lods
push
in
dec
popa
clc
mov
or
mov
imul
inc
stos
(bad)
mov
out
inc
das
adc
jle
out
addr16
sub
test
aaa
xor
mov
cmps
leave
jne
xchg
fs
addr16
mov
mov
sbb
dec
sahf
(bad)
int3
out
rol
jo
mov
xchg
rcl
add
jp
shr
or
push
pop
and
(bad)
rcr
(bad)
aas
pop
mov
push
adc
lods
dec
(bad)
test
xor
out
and
lea
ds
nop
dec
and
push
leave
and
in
lock
sub
in
dec
aas
lahf
lock
sbb
outs
or
lods
inc
push
cmc
mov
into
or
sbb
mov
jp
xchg
iret
in
xor
fwait
xchg
int
jbe
imul
mov
scas
mov
xlat
mov
mov
lahf
(bad)
add
mov
cld
aam
xchg
sub
les
ret
ds
adc
inc
mov
fcom
mov
pop
ret
fidiv
jae
adc
xchg
scas
and
and
adc
dec
mov
push
out
add
adc
jmp
sti
mov
inc
clc
inc
daa
lock
inc
jmp
pusha
ins
mov
xor
jb
(bad)
arpl
(bad)
push
sbb
push
aad
out
dec
add
lods
mov
push
(bad)
sbb
mul
into
fdivrp
push
cdq
and
sahf
jae
fisttp
push
push
dec
pop
dec
inc
mov
mov
pmaddwd
sbb
cmovp
sbb
aaa
cmps
pop
(bad)
nop
out
mov
push
adc
push
adc
xchg
pusha
dec
xchg
pop
mov
in
adc
call
into
or
pusha
shl
add
(bad)
aad
xor
shl
pop
lock
mov
or
fdivp
rcl
cmp
call
add
add
add
setb
push
mov
inc
dec
cwde
and
rcl
xchg
stos
push
adc
xor
push
test
dec
sbb
and
mov
xor
test
jnp
mov
mov
mov
fldenv
(bad)
call
cmp
in
jnp
mov
adc
imul
push
xor
addr16
adc
ds
xor
jp
in
call
test
push
dec
mov
mov
frstor
adc
inc
stc
pop
fld
mov
retf
dec
movs
pop
stos
push
mov
retf
loopne
scas
shl
ss
mov
(bad)
push
lods
jbe
stos
pushf
xor
pop
aad
fs
icebp
nop
idiv
and
daa
jb
xchg
mov
cmp
push
(bad)
jnp
out
and
daa
xchg
mov
movs
pop
sub
inc
loopne
lods
sar
out
cdq
xchg
adc
int
sbb
mov
popf
nop
xchg
push
out
xor
jns
mov
sbb
iret
inc
mov
mov
imul
imul
movs
mov
in
push
imul
mov
shr
icebp
arpl
fiadd
in
iret
aad
and
push
pop
mov
pop
into
imul
xlat
inc
mov
out
bound
cmp
push
add
out
push
cmp
pop
ds
xor
lods
push
test
push
imul
lods
jns
xor
mov
idiv
adc
xor
mov
mov
fwait
test
addps
ret
xchg
rol
adc
loope
movs
in
ror
xor
dec
sbb
add
xchg
cdq
pop
mov
std
stos
(bad)
iret
mov
cmp
mov
sbb
test
test
fild
std
rol
cmc
sar
sbb
lea
add
shl
rcl
adc
sub
or
or
cwde
cdq
and
enter
jle
jmp
das
out
arpl
xor
or
call
mov
adc
data16
mov
dec
ror
aad
fisub
dec
sbb
jl
and
sbb
inc
push
dec
sub
test
cld
pusha
sbb
lds
pop
or
stos
outs
xchg
fdiv
fcomp
imul
arpl
sbb
pop
repnz
shr
(bad)
sbb
bound
es
dec
inc
mov
sbb
push
jle
shl
stos
dec
fidivr
mov
scas
push
imul
mov
sbb
xchg
add
add
mov
pop
es
aaa
mov
loopne
aam
xor
scas
shl
add
shl
clc
mov
outs
adc
scas
mov
std
iret
je
rcr
imul
cli
daa
neg
mov
outs
mov
push
dec
lods
jns
nop
add
call
jp
dec
cmp
add
pop
mov
retf
mov
call
les
inc
(bad)
hlt
pop
cmp
or
imul
les
cmp
xor
inc
cmp
(bad)
sub
push
ficomp
adc
xlat
jno
movs
repnz
addr16
call
imul
mov
dec
adc
pop
xor
call
jmp
inc
movs
xchg
xor
pop
inc
inc
arpl
fwait
cmps
cmp
lds
stos
lods
rol
(bad)
adc
enter
icebp
into
sahf
int3
fld
sti
push
ds
aaa
jp
sbb
inc
dec
xchg
mov
push
lsl
cmp
mov
mov
jge
push
jl
repz
loopne
or
jns
inc
fisttp
or
sbb
push
pop
add
xchg
mov
in
sahf
movs
test
in
icebp
test
nop
int3
push
mov
out
test
ins
pop
mov
rcr
outs
dec
xchg
jecxz
xchg
jmp
push
ret
out
add
rcr
(bad)
fld
fild
in
outs
shl
call
addr16
neg
bound
push
pop
inc
xor
mov
dec
and
ds
pop
adc
in
sub
jmp
jg
mov
mov
xchg
push
push
(bad)
cdq
adc
pop
cs
cmp
add
in
movs
push
xacquire
or
inc
icebp
clc
stos
fld
xor
les
pop
mov
jae
xchg
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
inc
jp
in
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
rol
mov
cmp
or
dec
dec
mov
xchg
sub
and
ret
inc
push
push
mov
sbb
out
inc
fidivr
icebp
repnz
cmp
push
inc
mov
add
les
xchg
inc
retf
push
and
lods
add
cmps
xlat
mov
cmc
mov
push
movs
adc
cmps
push
mov
cmc
xor
push
ror
shl
cwde
das
shl
dec
jle
jns
push
fistp
dec
(bad)
cld
sub
les
cmp
imul
loop
push
daa
mov
ret
push
jp
repnz
sbb
pop
fisubr
add
movs
jbe
lahf
add
enter
jnp
fisubr
test
mov
vldmxcsr
lds
xchg
movs
jmp
cmc
fdiv
lods
les
xor
cmp
outs
pop
add
test
or
imul
cmp
int
clc
jns
jb
inc
dec
std
lds
inc
xor
addr16
push
jp
sahf
int
(bad)
or
and
pushf
cmp
gs
or
sahf
inc
and
sbb
dec
call
aad
mov
mov
aam
in
enter
dec
aas
pop
pop
dec
lods
js
jge
mov
jmp
stos
popa
sbb
sahf
mov
and
or
or
sub
ins
sub
loope
(bad)
jcxz
fisttp
call
outs
test
adc
out
inc
bound
adc
mov
pop
cdq
ja
sub
sar
fsubr
mov
xor
mov
(bad)
push
mov
push
inc
pop
les
leave
idiv
pop
pop
imul
cdq
les
call
cmps
movs
and
jnp
ror
loope
sbb
cmps
nop
push
call
adc
push
nop
or
pop
xlat
pop
sbb
xor
fldenv
and
int
ja
and
repz
nop
pop
iret
mov
test
xor
cmps
dec
sbb
leave
mov
sbb
xchg
in
inc
jecxz
xor
imul
and
in
addr16
push
mov
rcr
xchg
adc
jo
ja
cmc
loope
and
icebp
jns
cmp
(bad)
mov
sbb
mov
cmp
repz
mov
test
xlat
sub
mov
sub
pop
fwait
enter
push
movs
ss
test
lock
pop
call
imul
jge
loopne
data16
arpl
pop
outs
pop
inc
xor
dec
bound
loop
movs
adc
hlt
inc
mov
sahf
mov
add
dec
in
inc
popa
add
out
jecxz
mov
push
xchg
mov
sub
ins
mov
lods
js
test
mov
add
mov
push
push
sub
lahf
jle
xor
sub
ret
inc
mov
cs
inc
mov
test
pop
cli
mov
es
xor
jecxz
test
jle
in
int
push
cld
(bad)
adc
fcomp
(bad)
retf
push
call
mov
ds
mov
xchg
mov
push
std
loop
ja
rcr
stos
jecxz
test
xchg
dec
pop
cmp
loop
out
js
rol
mov
je
push
inc
fyl2x
pop
and
xchg
push
(bad)
loope
cmp
push
daa
mov
xchg
cmp
loope
test
xor
xchg
popf
and
ins
xor
dec
(bad)
lock
ins
xchg
in
mov
pushf
lds
adc
arpl
rcl
pop
(bad)
aas
(bad)
jg
inc
xchg
sub
cmps
or
aad
adc
jl
rol
imul
dec
js
dec
ja
ror
mov
stos
inc
add
mov
mov
xor
in
je
imul
fdivr
les
not
add
inc
test
stos
movs
or
mov
stos
sbb
sub
or
dec
jl
dec
fmulp
dec
rcr
(bad)
adc
push
out
sbb
ins
mov
jb
mov
and
mov
and
mov
dec
movs
iret
or
loope
mov
scas
sub
cmp
xor
stos
lods
shr
xlat
sub
popa
sbb
jp
pop
xor
out
stos
adc
xchg
(bad)
outs
popf
hlt
and
jbe
dec
shl
test
leave
test
jecxz
jecxz
ja
iret
lds
xor
mov
sub
add
push
loopne
icebp
lock
ss
or
dec
aas
xchg
gs
je
movs
mov
pop
fcomp
mov
imul
mov
mov
xor
push
add
mov
mov
jge
fs
dec
test
and
clc
xor
pop
push
adc
ins
push
mov
cwde
fwait
iret
call
adc
add
pusha
xor
mov
dec
cmps
sub
sbb
icebp
lods
inc
lods
and
add
int3
adc
xor
pop
jnp
inc
jg
sub
cmps
inc
(bad)
xchg
sar
(bad)
ins
test
data16
ds
xchg
cmp
add
repz
stos
dec
add
icebp
in
cmc
add
add
xchg
jmp
inc
loopne
sub
(bad)
dec
push
ss
les
int
fs
add
push
iret
sbb
test
cs
mov
lahf
sbb
icebp
push
mov
shl
loopne
dec
repnz
in
xchg
mov
addr16
push
mov
and
ja
add
div
std
mov
pop
push
loop
dec
push
xor
in
dec
in
pop
aaa
test
pop
pusha
outs
inc
lods
sbb
dec
test
and
xlat
ror
push
xchg
(bad)
inc
mov
dec
outs
(bad)
cmps
sbb
sbb
test
inc
cmp
adc
aas
sti
xlat
pop
cmp
enter
out
cmp
mov
inc
and
mov
cmp
fnsave
cdq
ins
mov
stos
and
cmps
lods
aad
mov
xchg
ja
jmp
fldl2e
retf
xchg
(bad)
jbe
or
(bad)
pop
lahf
dec
jmp
(bad)
not
imul
mov
and
retf
sub
out
xchg
mov
loopne
in
imul
outs
jmp
cli
int
xor
call
mov
mov
xchg
jg
cld
cmp
lds
pop
cmc
ds
push
rol
jno
aaa
imul
cmp
xor
pusha
push
xor
pop
out
into
vmread
sar
and
mov
scas
cmp
mov
xchg
dec
sbb
mov
je
mov
loopne
hlt
jnp
dec
into
jmp
icebp
xchg
mov
xlat
jbe
push
lea
sub
xor
xchg
cmp
dec
cmp
jbe
vmovsldup
fistp
fsubr
push
inc
pop
mov
push
shl
adc
mov
sbb
dec
nop
or
ret
test
(bad)
adc
jnp
push
adc
xchg
gs
aad
cli
call
test
xchg
int
inc
xchg
scas
sbb
je
pop
push
test
(bad)
int
test
push
pusha
js
pushf
or
mov
mov
out
shl
cli
cmp
dec
xor
(bad)
cli
call
jnp
cmp
fist
push
rol
mov
popa
xchg
aaa
sbb
call
ins
neg
and
(bad)
mov
shr
inc
pop
stos
pop
adc
ret
push
mov
cmp
in
dec
fldcw
ficomp
inc
int
jbe
sub
mov
test
shr
bound
in
movs
inc
sub
dec
retf
pop
push
aad
inc
dec
lock
jmp
adc
pop
pop
jp
jge
push
addr16
into
pushf
mov
movs
cs
mov
mov
cmps
enter
jl
push
cmc
aaa
or
mov
mov
ret
or
lods
push
shr
iret
dec
and
dec
stc
xor
out
dec
inc
cmps
std
mov
test
daa
jns
das
enter
cmc
sbb
xchg
cmp
add
dec
xor
(bad)
stos
push
mov
(bad)
or
cwde
mov
and
jg
or
xchg
ret
es
sub
std
jno
xor
lods
mov
repnz
push
(bad)
les
repz
and
in
xchg
sub
add
and
rol
sub
dec
pop
mov
dec
inc
inc
push
pop
cmps
cmp
stc
sub
rcl
dec
and
cmp
fwait
sub
dec
xchg
and
push
in
jg
fiadd
cld
out
iret
pop
jae
add
into
movs
pushf
pop
nop
fwait
loop
xchg
jmp
mov
leave
sti
add
mov
cli
sbb
dec
(bad)
out
(bad)
cli
fsubrp
mov
test
js
outs
or
mov
mov
sub
push
inc
jle
pop
dec
inc
dec
cdq
lods
xchg
or
popf
(bad)
aaa
retf
cmp
std
push
stos
jl
mov
xchg
stc
jle
push
xor
mov
std
test
dec
icebp
stos
dec
push
rcl
add
scas
shr
movzx
sub
sbb
mov
mov
dec
sub
jno
jg
mov
push
lods
(bad)
push
in
int
in
(bad)
call
pop
sub
mov
jae
loope
in
hlt
dec
push
jle
dec
ja
inc
xor
sbb
imul
mov
(bad)
aad
push
mov
mov
mov
or
sbb
inc
jmp
xor
in
fnstcw
fwait
in
inc
shl
pop
and
push
ss
push
hlt
jnp
push
pop
lods
(bad)
mov
jb
imul
in
jns
mov
inc
cmp
jge
sbb
fadd
or
sti
or
xor
out
pop
pushf
scas
xchg
xchg
int
mov
in
inc
push
int3
movs
sub
jns
in
test
sbb
daa
(bad)
loope
add
xor
mov
ja
out
enter
in
mov
out
jnp
scas
jne
push
dec
ret
sub
sbb
or
dec
fdivr
in
add
dec
or
imul
or
mov
cli
retf
cmps
addr16
enter
push
lock
mov
xor
and
xor
out
std
inc
sub
fimul
std
out
pusha
inc
dec
call
cmp
fistp
add
cs
pop
adc
push
or
in
jns
xchg
ins
mov
sub
push
jns
pop
xor
xor
or
jp
or
push
pop
and
int
jo
cmps
push
add
into
shl
sub
push
aaa
inc
std
mov
fsub
cli
rcl
cmps
shl
int
dec
mov
cmp
push
dec
and
sti
in
in
jae
pop
jg
enter
loop
and
xor
push
pop
cwde
arpl
ins
adc
rcr
pop
push
aad
lahf
pop
sub
push
popf
dec
popf
leave
cmp
jmp
jno
mov
mov
xchg
sub
cmp
and
daa
push
hlt
lods
out
lods
adc
jb
fdivr
dec
mov
pop
jb
fild
stos
xor
jnp
add
xchg
jno
test
ja
dec
call
mov
inc
and
adc
jle
loope
cmp
daa
mov
fnstsw
out
shl
cmp
(bad)
test
jns
idiv
and
pop
das
fstp
jbe
fisttp
daa
outs
inc
(bad)
mov
push
mov
lods
mov
loop
xchg
mov
(bad)
in
lods
jl
and
fisub
sub
cmps
test
call
stos
movs
pushf
or
in
sahf
call
int3
imul
adc
je
xor
out
fidiv
jmp
fistp
loop
inc
ins
pop
sbb
jmp
sbb
rcl
mov
mov
cmp
es
daa
bound
daa
xchg
int
push
push
sub
(bad)
aaa
rol
push
call
and
jmp
lahf
ds
shr
ja
adc
push
inc
cmps
lods
or
(bad)
(bad)
aas
retf
jp
es
in
sbb
inc
in
test
jbe
js
std
cli
leave
inc
mov
stos
mov
jnp
jbe
sbb
in
cmp
rcr
ins
fxch
xchg
retf
pushf
cwde
pop
outs
rcr
jle
in
out
jo
std
xchg
xchg
cmp
and
or
aaa
push
call
jmp
xor
outs
add
popa
sbb
rol
(bad)
sub
idiv
cmps
and
jmp
jae
jle
lods
es
clc
in
popf
test
or
jecxz
lahf
bnd
(bad)
adc
cmp
addr16
mul
mov
add
leave
ret
jge
xchg
adc
pop
scas
into
cmps
dec
inc
in
call
jmp
cli
loop
and
fcomp
cdq
add
inc
cmp
adc
sbb
(bad)
xor
xchg
repz
pop
cmps
outs
mov
cmc
aaa
add
out
mov
lds
dec
outs
push
pop
rcl
enter
or
sbb
(bad)
lods
push
xchg
mov
dec
out
xchg
nop
pop
xchg
(bad)
div
dec
aad
nop
fs
cmp
push
jmp
jg
add
inc
push
cmp
int
sub
pop
pusha
adc
fimul
loop
inc
lahf
leave
xlat
cmp
cmp
scas
dec
int
and
dec
rcr
jns
fstp
sbb
mov
pop
loop
in
sub
retf
test
test
nop
jl
nop
sub
in
iret
add
xor
mov
pop
je
test
int
pushf
jecxz
and
int3
add
(bad)
pop
pop
inc
pop
retf
fucomi
icebp
push
sub
push
jg
shr
adc
ret
xlat
in
cmp
jne
jne
xor
aaa
inc
xchg
pop
jge
les
icebp
fiadd
cwde
fs
pop
aas
daa
dec
mov
sbb
loop
dec
mov
stos
push
lea
pop
add
popa
sti
and
cmc
sub
xlat
lea
fidiv
pop
adc
or
das
push
jnp
fiadd
ja
sub
mov
cli
arpl
push
xor
jnp
cld
jae
jne
in
mov
arpl
dec
xchg
jp
or
mov
test
lds
sti
cmp
cmp
xchg
in
push
aaa
add
xchg
pop
push
out
mov
mov
mov
std
loop
dec
in
cmp
mov
add
inc
pop
pop
add
pop
sti
jnp
movs
xor
adc
cmp
xchg
cli
ins
neg
xchg
dec
mov
cmps
ins
rol
repnz
retf
push
test
imul
mov
cli
mov
sub
lea
xor
mov
inc
dec
jno
sahf
call
mov
ret
push
xor
leave
pop
mov
outs
test
mov
icebp
shr
adc
add
pop
dec
fwait
mov
jle
add
mov
cs
fcom
lods
retf
fidivr
(bad)
dec
mov
mov
cmp
pop
pop
enter
inc
or
dec
dec
loopne
lds
out
mov
jge
les
mov
add
out
(bad)
test
shl
arpl
mov
(bad)
mov
out
sti
xor
jge
shl
mov
jne
js
rcl
push
or
jmp
je
jae
inc
leave
pop
pop
add
adc
jg
mov
and
int
lea
pop
mov
xchg
test
push
je
pop
test
xchg
xor
add
xchg
or
pop
sahf
dec
icebp
sti
shl
test
addr16
leave
shr
addr16
sahf
(bad)
inc
add
mov
daa
xchg
push
(bad)
outs
dec
xchg
int3
inc
add
fmul
pusha
out
xchg
repz
pop
call
or
sar
inc
lods
or
sahf
outs
pop
mov
mov
add
cld
out
(bad)
stc
iret
jg
repz
jmp
sar
push
xor
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmps
arpl
cmp
mov
fdiv
jge
jecxz
popf
cmps
cmps
dec
mov
cwde
dec
out
test
adc
pop
sub
inc
call
mov
cmp
mov
popf
mov
cmp
and
ins
xchg
gs
movs
dec
out
cmps
test
ss
imul
(bad)
mov
lods
sub
js
and
jbe
add
(bad)
sub
shl
dec
pop
cmps
bound
sub
xor
sub
mov
jmp
mov
push
pop
sti
jbe
in
cmp
push
pop
test
sbb
jb
xor
push
or
loope
jecxz
and
add
mov
xchg
push
push
and
in
ins
xchg
jnp
adc
jge
push
jno
loop
iret
xchg
gs
(bad)
jno
dec
test
in
call
mov
add
add
push
loop
aam
push
mov
hlt
in
sbb
setbe
or
jl
or
and
lahf
arpl
adc
mov
adc
push
in
popf
adc
xchg
mov
gs
int
js
sbb
call
adc
dec
fsubp
aam
push
inc
gs
les
mov
xor
in
sbb
push
bound
xchg
xchg
sbb
in
fcom
jbe
push
xor
mov
and
cld
stos
stc
jno
adc
sub
daa
push
ret
mov
(bad)
std
test
mov
int
sub
cwde
adc
push
or
dec
xchg
adc
popa
fistp
sub
(bad)
pop
daa
loopne
add
cmpxchg
fdiv
out
enter
ja
dec
jns
jb
push
mov
pop
add
inc
or
and
jbe
inc
sbb
add
adc
jl
pop
sub
popf
mov
jg
dec
sub
adc
dec
push
push
call
push
xlat
mov
sub
pop
retf
jns
xchg
push
sbb
outs
movs
xchg
adc
mov
cmps
fist
add
sub
out
xchg
neg
adc
jecxz
jge
xor
mov
or
xor
jns
aad
scas
or
fwait
and
xor
fwait
mov
aas
xor
jmp
test
out
mov
test
mov
pop
gs
sub
jno
outs
outs
xor
repz
xlat
sti
cmps
cld
vpmaddwd
out
jbe
sbb
test
mov
jp
cmp
push
aad
cmps
fnstenv
rcr
pop
jno
loopne
enter
mov
clc
push
ret
add
inc
pop
(bad)
push
int3
arpl
add
push
aam
jmp
in
bound
jecxz
leave
stc
scas
xchg
iret
cmp
adc
push
stos
rcl
loope
and
pusha
jmp
repz
push
call
imul
(bad)
nop
push
sbb
scas
shl
xchg
retf
inc
cmp
(bad)
dec
shl
in
shl
push
call
and
js
sti
neg
int3
test
js
dec
lea
rcr
jne
inc
gs
(bad)
aas
addr16
les
scas
fsin
push
adc
xchg
lods
xlat
inc
jle
fstp
ja
fnsave
fs
cs
stc
ds
ret
mov
mov
fdiv
rcr
movs
into
add
xchg
inc
jle
push
ficom
das
lahf
cmps
out
and
je
adc
push
outs
out
das
dec
fimul
retf
sub
mov
mov
(bad)
push
xchg
in
lds
inc
cmp
scas
jmp
or
arpl
in
ss
fld
sbb
retf
rcl
addr16
fcmovne
rcl
pop
pop
add
sti
adc
push
mov
lods
adc
mov
jmp
mov
daa
sbb
lods
sub
push
sbb
jb
dec
add
jge
xchg
pop
mov
cmps
fst
inc
dec
pop
pop
ins
ds
pop
push
stos
mov
(bad)
cmps
repnz
(bad)
fidivr
cld
bound
mov
inc
mov
jo
jne
(bad)
xchg
je
hlt
(bad)
loop
mov
(bad)
sti
xchg
fs
dec
jbe
pop
les
ret
adc
inc
lds
pop
pop
inc
rcl
outs
push
mov
movs
loope
xchg
lods
shl
xor
jae
sub
in
jno
ror
jp
and
aad
push
push
pusha
ror
jmp
sbb
add
je
shl
(bad)
ins
cld
neg
scas
ss
jne
(bad)
outs
cli
jns
mov
leave
pop
add
arpl
gs
cli
cdq
push
or
iret
sub
enter
out
sub
retf
hlt
jno
mov
sub
mov
push
mov
add
loop
dec
fs
push
shl
pop
imul
push
jno
dec
test
(bad)
icebp
mov
or
push
inc
popf
movs
push
dec
inc
xor
jle
lods
lods
out
adc
pop
movs
scas
imul
fs
scas
xor
(bad)
in
movs
addr16
cmp
adc
imul
or
jae
jne
xor
popf
inc
je
sub
mov
dec
push
aad
push
xor
iret
std
(bad)
push
mov
mov
jne
pushf
imul
xor
mov
xor
or
cmp
fsubr
or
fcomi
and
mov
lock
cmp
(bad)
test
cdq
cli
sbb
fcomp
mov
xchg
daa
mov
(bad)
mov
or
bound
(bad)
cwde
inc
dec
sti
mov
mov
mov
pop
jbe
scas
pop
sar
pushf
pop
jle
mov
mov
jp
ds
jo
dec
jg
jae
(bad)
xchg
popa
dec
rcl
scas
adc
add
shl
xchg
sbb
cmp
pop
cmc
mov
or
pop
movs
nop
jmp
pop
mov
jbe
jle
dec
pop
in
lea
popa
xchg
or
mov
push
sub
pusha
retf
sub
ss
cs
inc
sub
push
sar
mov
mov
mov
int
cmc
mov
mov
add
das
test
jl
repz
mov
push
out
inc
mov
(bad)
cmps
xchg
std
cmp
sbb
or
mov
jmp
xchg
mov
xor
jle
ret
push
inc
mov
add
inc
cdq
and
aas
jno
mov
ror
jmp
inc
add
inc
iret
lea
out
mov
les
or
imul
(bad)
dec
pop
mov
push
and
ret
sub
push
neg
xchg
mov
sbb
mov
mov
iret
hlt
jl
pop
es
xlat
shr
ins
jl
iret
jne
test
jle
dec
nop
fs
pop
jmp
fdiv
idiv
loopne
jnp
repz
push
pop
inc
xchg
lods
or
and
mov
aaa
cdq
es
jo
xchg
mov
cmp
punpckldq
scas
fmul
sub
mov
push
adc
nop
loope
push
scas
jnp
std
push
jmp
sar
dec
ins
cwde
and
mov
add
xchg
push
xchg
mul
pop
lahf
push
dec
out
(bad)
pop
jae
icebp
jnp
cwde
clc
int3
(bad)
dec
push
cmps
sbb
daa
and
outs
js
xor
outs
jg
aas
cdq
jae
jp
xor
out
inc
jb
aam
xor
dec
call
xchg
es
push
mov
push
stos
push
dec
std
fcmovnbe
jge
pop
push
aas
out
out
outs
fcomp
fmul
aam
mov
or
imul
stc
call
out
adc
mov
inc
jg
imul
or
das
add
popa
out
add
(bad)
xchg
jne
pop
fistp
lods
dec
(bad)
push
out
mov
sub
mov
push
je
scas
or
jns
xchg
or
or
push
setb
and
pop
das
mov
test
cmp
mov
test
mov
(bad)
lock
fwait
lahf
sbb
aam
ror
loope
mul
out
sbb
sbb
stos
xor
cdq
mov
sahf
outs
stos
mov
or
sub
icebp
mov
lock
xchg
mov
cmp
repz
xchg
jmp
je
shr
(bad)
or
aaa
out
or
jae
out
push
ins
mov
mov
sbb
mov
xor
xor
in
mov
daa
aaa
leave
iret
jp
and
fs
dec
ror
mov
pop
out
call
pop
or
es
cmp
push
and
mov
push
ret
pop
cmp
in
inc
lock
cdq
bound
add
pop
mov
or
out
cvtps2pd
xor
sbb
mov
mov
mov
(bad)
popa
pusha
fisttp
pop
and
push
pushf
and
jb
mov
and
mov
sub
loope
xchg
sub
xor
sbb
pop
aam
mov
ins
pop
xchg
and
sub
shl
fmul
out
cmc
inc
call
int
fidivr
clc
dec
daa
bound
xor
mov
call
clc
scas
mov
jmp
push
fidivr
jecxz
xchg
pop
movsx
std
ret
dec
mov
(bad)
adc
dec
dec
mov
cdq
dec
test
arpl
dec
aam
xchg
mov
xchg
into
pusha
pop
test
cmc
fimul
pop
scas
xor
pop
mov
mov
cmps
mov
mov
jp
fdiv
sbb
movs
fdivr
and
or
mov
sbb
icebp
mov
jp
push
pop
clc
xchg
or
jmp
and
push
pop
mov
xor
fisttp
das
lea
xor
push
push
call
jmp
or
pop
loopne
inc
mov
fild
lahf
mov
jge
dec
scas
sbb
inc
adc
(bad)
mov
add
scas
adc
push
dec
add
cmp
mov
push
jl
push
cmp
bound
popf
shl
add
out
fwait
and
sbb
mov
dec
inc
shl
sub
mov
jecxz
fisttp
outs
push
dec
aad
jmp
je
jns
xchg
cmps
pop
lock
pop
cli
push
cmp
aas
pop
mov
add
mov
ret
test
mov
jae
dec
das
rcl
jbe
(bad)
imul
sbb
jnp
sahf
xchg
(bad)
jmp
mov
outs
call
fild
fmul
scas
sbb
test
cwde
pop
popa
retf
xchg
jp
push
iret
push
or
ss
ins
or
sub
pop
aas
push
sub
or
out
mov
or
frstorw
mov
push
inc
cmp
and
jne
add
inc
aas
and
ds
inc
(bad)
push
test
adc
sub
out
push
js
pop
add
ins
jbe
lods
xchg
in
(bad)
sub
fdivr
jg
les
xchg
leave
adc
rcl
dec
inc
pop
in
jmp
add
mov
imul
push
mov
dec
mov
cmp
(bad)
(bad)
je
mov
adc
outs
mov
popf
pop
dec
dec
or
out
std
push
inc
outs
lods
jnp
mov
call
les
not
es
sbb
ja
das
push
repz
and
test
clc
pop
pop
dec
xchg
or
xchg
(bad)
(bad)
ss
mov
mov
mov
pushf
outs
push
shl
stc
push
aad
(bad)
loopne
stc
jnp
push
xchg
test
into
xor
ror
int3
retf
mov
add
in
add
pop
pop
mov
loope
ja
push
and
test
push
sub
jmp
ss
mov
(bad)
xchg
sar
cs
scas
out
dec
mov
inc
es
(bad)
test
and
add
pop
dec
aas
push
rcr
adc
pop
enter
das
outs
sbb
add
mov
inc
sbb
push
mov
mov
sbb
cmp
push
add
xor
jo
dec
add
addr16
xlat
(bad)
cli
push
js
lea
fs
jae
mov
mov
jne
jae
test
fisubr
in
sub
add
adc
inc
call
cs
adc
xchg
push
imul
mov
add
push
jo
idiv
and
mov
cmp
mov
repz
adc
outs
add
xor
xor
adc
out
loope
dec
sub
add
push
cmps
movs
pop
mov
push
dec
jb
outs
inc
adc
sub
pop
aaa
je
or
sbb
rol
aaa
pop
ja
xor
and
out
adc
jg
mov
jae
rcr
imul
xor
adc
xlat
rcr
out
dec
push
jle
push
inc
cmps
mov
adc
fs
ds
xchg
xchg
push
aad
mov
xor
add
push
popa
imul
adc
out
mov
inc
xchg
loope
sbb
into
xor
xor
add
jle
stc
sub
jle
sbb
mulps
push
push
jmp
mov
in
into
or
xchg
or
ja
xor
test
or
cli
lods
rol
sbb
call
adc
out
and
mov
mov
iret
imul
cmc
test
pop
sub
add
sbb
aaa
sbb
push
add
retf
arpl
xchg
pop
lods
cli
test
or
fs
and
ret
ja
fsubr
cdq
clc
lea
das
cwde
xor
sbb
mov
mov
shl
cdq
imul
push
das
xchg
popf
loopne
ret
adc
dec
mov
sbb
out
sbb
aad
ss
or
les
pop
mov
push
jbe
scas
idiv
cs
arpl
push
add
retf
sub
in
pop
test
rcr
sbb
loopne
mov
cmps
and
imul
pop
rcr
into
lds
fild
sar
xor
icebp
int
not
jbe
mov
push
push
jno
mov
imul
and
mov
mov
test
mov
nop
outs
sub
rol
xor
ds
outs
sub
(bad)
jl
jp
ss
inc
lock
bound
add
fs
jmp
xchg
lods
out
add
mov
das
dec
jecxz
jge
loope
js
sub
call
std
mov
pusha
dec
inc
in
lds
mov
movs
sbb
mov
jl
mov
xchg
mov
cld
push
pop
push
out
out
cmp
push
inc
mov
jbe
jp
mov
retf
(bad)
sub
fisub
aad
imul
pop
sub
mov
les
mov
lahf
xchg
not
xchg
cmp
jecxz
or
dec
cmpxchg
test
loop
neg
shl
mov
pop
fdiv
xor
ret
ins
retf
movs
inc
jb
sar
jno
lds
pop
repnz
jne
jae
mov
popf
adc
popf
popf
aad
(bad)
test
(bad)
mov
push
fsub
and
js
stc
push
out
and
push
push
aam
xchg
jne
push
pop
jge
scas
sub
test
sar
loope
adc
aaa
dec
(bad)
dec
jge
fs
mov
cs
nop
mov
adc
rol
xor
daa
inc
test
mov
lahf
jle
xchg
je
xlat
ds
les
ret
xchg
popa
add
into
push
pop
cmp
ja
push
pushf
xor
int3
jl
(bad)
dec
pop
(bad)
daa
enter
test
sar
outs
jnp
mov
sub
mov
mov
rcr
pop
adc
xchg
cli
xchg
mov
mov
in
retf
push
fs
aaa
xchg
mov
scas
out
adc
rcl
jne
push
adc
lahf
jg
stc
out
jg
stc
out
sbb
lock
inc
lods
cld
loopne
out
dec
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jne
jbe
mov
fnstsw
jae
or
cmp
(bad)
test
cmp
ins
push
(bad)
in
repz
and
inc
ja
arpl
pop
(bad)
push
inc
or
xchg
(bad)
inc
lea
and
es
push
inc
sti
jl
and
mov
inc
call
and
and
xchg
sti
dec
and
and
lds
imul
ret
push
retf
xor
in
sti
dec
or
adc
mov
in
push
xor
pop
xchg
jmp
push
pushf
aaa
fwait
rol
push
fnsave
lds
mov
mov
mov
dec
out
js
scas
xchg
mov
add
retf
mov
mov
mov
int3
fild
lahf
push
shl
push
mov
imul
stos
scas
or
mov
xchg
sub
mov
f2xm1
mov
(bad)
fs
movs
add
push
mov
mov
scas
cmps
pinsrw
cdq
(bad)
outs
in
out
stc
cmps
mov
mov
mov
std
in
add
jl
inc
sbb
pop
mov
sub
add
pop
inc
sub
loop
pushf
push
loope
cmp
(bad)
call
push
cmp
in
pop
dec
addr16
xlat
push
popa
ret
in
cmp
xor
inc
bound
push
(bad)
mov
stc
push
or
(bad)
movs
out
push
dec
push
in
aam
jmp
adc
push
jno
pop
ins
lock
pusha
and
jmp
jge
sar
nop
inc
jno
add
jl
shr
mov
sub
sbb
(bad)
pop
aas
sbb
(bad)
ins
rol
ja
adc
cmp
aas
jle
add
adc
popf
pop
daa
xor
xor
stos
jl
je
daa
outs
jmp
call
sub
bound
cmc
xor
ret
push
(bad)
das
gs
mov
cmps
lahf
inc
jg
inc
or
lods
fwait
je
gs
jmp
mov
jge
pop
push
push
mov
sub
add
nop
sub
cmp
leave
mov
iret
add
mov
xor
int
mov
in
or
mov
iret
aaa
cdq
pop
lahf
aad
lahf
out
dec
mov
pop
int
int
lea
ret
push
and
arpl
push
shl
mov
enter
jle
retf
cmp
dec
cmps
in
sub
push
fs
mov
jg
xor
dec
push
xchg
fdivr
rcr
sti
mov
xor
mov
mov
xchg
add
push
cmp
xchg
and
shl
mov
dec
or
cwde
mov
retf
in
inc
inc
cmp
sub
outs
or
fwait
test
push
aad
rcl
into
popa
mov
add
pop
mov
push
pop
in
inc
push
mov
sahf
xor
push
or
adc
mov
xlat
fbld
inc
or
xor
leave
sahf
jmp
push
sub
int3
xor
dec
(bad)
fcom
iret
pushf
jmp
mov
xchg
movs
cmps
scas
pop
mov
inc
fistp
jmp
sbb
(bad)
xchg
jns
add
movs
cmc
iret
inc
rol
dec
xchg
mov
and
push
jbe
cmp
adc
neg
mov
pop
mov
dec
das
into
adc
cmps
dec
mov
dec
push
int
pushf
js
mov
sub
fbstp
popa
mov
adc
mov
icebp
dec
dec
imul
adc
jo
shl
pop
mov
add
dec
pop
outs
and
scas
les
pop
pushf
test
pop
cmp
popa
mov
sub
out
pop
xor
repz
stos
rcr
out
pop
mov
mov
mov
push
jno
or
loop
xor
cmc
idiv
cmp
add
stos
sbb
xchg
cmp
or
dec
iret
sub
xchg
push
aam
and
xchg
xor
stos
int
lock
aaa
mov
push
in
addr16
pop
stos
push
mov
movs
mov
dec
fsub
or
cmp
dec
fcmovnu
call
fnsave
dec
hlt
in
or
add
push
test
das
ret
in
adc
clc
out
call
ins
call
or
xchg
movhlps
fisttp
lahf
daa
xor
sub
push
clc
aad
jp
ins
push
sub
test
sbb
ret
pop
pop
sbb
addr16
inc
pop
(bad)
js
enter
in
enter
sub
jae
mov
inc
(bad)
pop
push
retf
xchg
mov
mov
dec
push
sysret
push
xchg
out
xor
in
sbb
sub
imul
pop
push
jbe
or
jo
fdiv
cmp
or
mov
pop
push
out
daa
inc
push
std
mov
int
call
push
dec
mov
mov
pop
cmp
sub
scas
push
retf
popf
pop
pop
jle
das
push
mov
xor
add
add
push
inc
inc
mov
inc
xchg
push
das
inc
retf
scas
and
push
add
mov
lea
cmp
sbb
out
imul
hlt
xchg
popa
mov
xor
ins
jae
mov
mov
sbb
out
sbb
xchg
dec
sbb
jp
xchg
lods
stos
and
xchg
xchg
dec
cmps
call
rcr
enter
dec
es
je
jb
rcl
mov
xchg
or
sub
pop
loope
xor
ficom
rol
cmc
mov
rol
lods
jge
or
pop
inc
add
into
dec
mov
clc
rcl
pop
cmc
jae
lods
cmp
push
sbb
iret
adc
cmps
(bad)
out
sti
repnz
mov
outs
scas
jnp
stos
fdivr
js
sub
jns
cmc
imul
dec
jge
gs
fmul
inc
mov
xchg
dec
mov
push
mov
pop
sub
ss
sti
sahf
stos
cmp
or
rol
idiv
rol
rol
or
in
add
outs
repnz
xor
inc
pop
mov
adc
mov
mov
movs
mov
mov
fmul
popa
adc
xlat
jne
shl
shr
rcl
and
mov
or
test
jg
sub
push
and
in
sti
pop
aam
aam
les
cmp
icebp
vpmacssdd
ins
sbb
stos
pop
ret
jp
xchg
imul
mov
data16
sub
push
mov
popa
mov
jns
add
ins
mov
push
cli
(bad)
sbb
cli
mov
mov
pop
cmp
jmp
ins
shl
das
or
mov
arpl
jecxz
or
es
sub
cmp
mov
mov
mov
repz
inc
mov
mov
test
jmp
out
sbb
push
and
ins
jmp
(bad)
arpl
xor
stos
fiadd
jmp
xor
jnp
(bad)
push
xchg
push
lods
adc
cmp
mov
ins
cwde
test
dec
push
cdq
aas
shl
jle
cs
mov
sbb
mov
bound
cmps
call
das
jmp
pop
hlt
ret
test
stos
jmp
sub
movs
cmc
fadd
and
pop
stos
pop
call
xlat
mov
add
rol
out
mov
repnz
into
movs
loopne
mov
aaa
xor
scas
ret
gs
lods
popf
cdq
jne
push
aas
jbe
add
pusha
pushf
fmul
pop
outs
mov
adc
in
stc
adc
out
icebp
daa
ds
push
pop
push
sbb
lods
pop
push
fsubrp
adc
arpl
jnp
mov
ins
test
cmp
xor
clc
into
sbb
xor
movs
mov
xchg
or
pop
mov
sub
je
push
jno
dec
or
xor
or
int3
out
pop
push
dec
repnz
xor
jp
fwait
mov
popf
lock
js
aad
mov
fnstenv
repz
and
nop
pushf
retf
jbe
call
jp
or
mul
ret
outs
xchg
cli
repnz
hlt
jae
jne
pop
pop
mov
jno
xlat
in
xor
jle
xor
popa
test
jge
mov
popf
aam
in
int3
jo
pop
adc
dec
jp
jmp
mov
movs
movs
or
mov
shl
popa
call
inc
sub
mov
push
xor
lods
leave
(bad)
imul
dec
dec
jns
ins
(bad)
sub
imul
rcr
ins
popa
xor
add
push
jae
mov
cmp
fwait
push
push
test
pop
dec
mov
call
push
outs
jmp
imul
gs
(bad)
fwait
pushf
pop
lock
pop
test
push
cmp
mov
mov
pop
aam
or
iret
xchg
call
fwait
js
sbb
out
push
mov
aas
and
add
inc
add
xchg
adc
movs
call
add
dec
(bad)
mov
stos
lea
stc
sub
pop
pushf
xor
fmulp
shr
fldenv
into
pop
mov
xor
xchg
mov
mov
gs
fsubp
adc
cli
ja
inc
ins
cmp
xchg
shl
push
aaa
sbb
cmps
push
scas
test
in
cmp
add
fcomp
mov
imul
xchg
clc
jl
sub
dec
push
sub
push
mov
test
retf
inc
out
call
jge
inc
xor
cmc
adc
mov
jne
test
jg
push
mov
xor
xchg
jb
arpl
fnstenv
sub
sahf
mov
inc
mov
dec
sar
mov
aad
cmp
mov
dec
xor
iret
cmps
xchg
neg
daa
cmp
jne
jmp
scas
arpl
mov
or
dec
fild
dec
fisttp
dec
jnp
cs
sub
loop
mov
in
lea
in
daa
push
repnz
dec
jbe
dec
retf
xor
cmps
cmps
pushf
mov
mov
adc
fs
stc
xor
mov
(bad)
sbb
cwde
mov
and
rol
nop
xor
adc
out
scas
(bad)
rcr
sbb
int3
and
bnd
add
xchg
ret
enter
loope
es
xchg
xlat
xchg
(bad)
sahf
mov
mov
pusha
push
mov
adc
into
jno
fisub
jmp
mov
minps
test
sub
mov
xor
mov
jg
lea
mov
dec
shl
add
(bad)
add
(bad)
pop
dec
sbb
aam
les
sbb
(bad)
shl
imul
mov
out
int
push
dec
push
pop
ins
mov
adc
mov
push
add
ss
shr
hlt
les
mov
cmp
or
or
retf
mov
std
lds
or
inc
inc
in
and
xor
(bad)
js
xchg
out
pop
cld
cmps
push
mov
sbb
rcl
retf
adc
mov
mov
push
int
out
in
bswap
mov
call
mov
xchg
add
stos
xchg
and
cwde
push
xchg
jl
add
pop
sub
leave
pushf
xor
jmp
pop
xor
mov
shl
imul
in
int
dec
mov
cs
(bad)
out
repnz
or
pop
(bad)
jo
jae
jne
ins
call
scas
push
aad
or
int3
in
iret
fimul
jmp
test
out
sbb
(bad)
jl
sbb
inc
cmps
cmp
scas
hlt
in
dec
aam
mov
rol
mov
scas
xor
push
pop
repz
jns
jno
xlat
arpl
test
in
sub
sub
shl
mov
pop
mov
cmp
inc
xchg
mov
pop
and
sub
sub
in
popf
repnz
(bad)
and
enter
test
sbb
inc
push
out
(bad)
(bad)
jge
jp
sub
lea
test
loopne
xor
xor
adc
arpl
sub
pop
das
sbb
out
clc
hlt
ret
pop
popf
pop
dec
in
sub
push
pop
fbstp
cmp
dec
jg
jno
pop
jae
and
enter
xchg
push
pop
and
xchg
call
(bad)
cmp
retf
pop
jae
push
add
mov
xchg
les
xchg
inc
dec
(bad)
cmp
jmp
push
(bad)
out
ins
cdq
fisttp
jp
mov
adc
or
push
or
scas
adc
xchg
leave
pop
pop
pop
pushf
push
pop
clc
xor
addr16
js
sub
loopne
adc
pop
stos
dec
pop
jbe
in
mov
not
add
mov
mov
adc
mov
fwait
popa
xor
mov
sbb
push
sub
retf
(bad)
inc
or
mov
bound
pop
stc
jb
scas
in
push
nop
pop
adc
adc
xchg
inc
xchg
call
out
sti
adc
stos
je
neg
jl
adc
stos
cmp
inc
dec
sbb
out
pop
adc
inc
int
neg
push
add
popa
sbb
inc
retf
mov
push
scas
adc
ret
sub
push
mov
push
push
jecxz
xchg
aam
hlt
mov
in
mov
shr
retf
mov
mov
shr
jo
ss
loopne
jmp
ins
inc
push
std
stos
jmp
jb
add
xor
loopne
inc
mov
lods
add
fist
xchg
dec
out
pop
test
jnp
pop
(bad)
mov
mov
jne
outs
xchg
adc
fs
inc
xchg
ror
(bad)
sub
xchg
sub
mov
bound
jmp
fwait
lea
push
sub
jb
mov
jno
fdiv
push
xor
shr
dec
imul
xchg
cmp
(bad)
push
and
jne
in
jge
sti
imul
jnp
movs
mov
and
mov
inc
lock
or
in
push
mov
mov
push
sbb
pop
jnp
mov
push
jle
mov
call
fnstsw
jmp
sub
jno
sub
xchg
cmp
dec
loope
add
inc
and
arpl
rol
jp
and
aam
xor
mov
xchg
ja
sar
in
xor
cmp
loopne
call
adc
inc
mov
mov
pop
add
test
cli
es
in
imul
pop
cmps
push
lock
inc
dec
pop
pop
mov
loope
bound
sahf
sbb
sbb
push
mov
xchg
(bad)
push
mov
lds
pop
loopne
or
dec
jns
xor
push
(bad)
addr16
inc
(bad)
jo
not
nop
jno
and
push
shl
enter
mov
popa
add
clc
ds
xor
test
xchg
daa
test
lods
ins
dec
xchg
sbb
outs
test
xor
scas
add
sub
adc
or
cmp
jmp
jg
push
cmps
ret
sahf
xchg
add
or
cmps
cmp
adc
xchg
cs
loop
(bad)
or
mov
ret
dec
adc
mov
sub
jge
mov
fidivr
out
and
xor
into
ror
inc
dec
inc
inc
retf
stc
idiv
mov
data16
in
scas
out
lods
mov
and
ja
in
(bad)
retf
jne
aas
jg
loop
inc
mov
shl
in
dec
xor
dec
xchg
sub
mov
sub
sti
cmp
or
jmp
xlat
push
mov
scas
push
lods
cwde
xchg
stc
and
cdq
cmp
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
xchg
or
cmp
pop
ret
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
fimul
dec
cmp
ins
dec
or
cmps
fwait
fwait
mov
jp
xor
dec
dec
dec
ins
bnd
fst
cmp
idiv
cmp
inc
xor
pusha
pop
test
sar
fsub
test
push
out
into
jl
pop
je
minps
aaa
xchg
mov
test
adc
popa
movs
mov
pushf
mov
mov
xor
popf
mov
lods
add
mov
leave
int
dec
sub
dec
icebp
pop
popa
aam
cmps
pushf
dec
push
stos
dec
shr
(bad)
mov
fsubrp
fs
sbb
adc
lods
dec
dec
in
pushf
mov
das
pop
or
sahf
les
push
rol
adc
div
xchg
iret
pop
cmps
push
enter
mov
mov
or
and
sub
popf
add
mov
pusha
mov
fdivr
and
in
xchg
(bad)
pop
int
and
mov
cli
pop
in
ja
in
neg
lods
cmp
jno
mov
das
mov
call
xchg
hlt
push
add
cmps
pop
cld
fdivr
or
ins
and
cmp
xchg
jp
popa
sub
and
in
xor
(bad)
mov
std
jbe
fsub
call
out
call
out
test
sbb
jge
(bad)
jmp
fdiv
es
retf
repnz
xchg
ret
(bad)
mov
and
daa
fbstp
xor
pop
bound
mov
mov
mov
and
mov
adc
dec
fs
jmp
jmp
push
int3
clc
call
lahf
pop
call
lock
ins
mov
in
in
test
repnz
xchg
out
lods
dec
mov
mov
or
and
pusha
in
dec
pop
jns
adc
cmps
push
in
and
xor
adc
hlt
jnp
mov
arpl
inc
adc
push
fidivr
pusha
les
xor
dec
aad
pop
jle
mov
xchg
pushf
mov
pop
mov
or
dec
jae
scas
push
bound
or
fld
xchg
and
cld
les
pop
test
sbb
xchg
(bad)
pshufw
ret
cdq
or
fbstp
xor
enter
fnstsw
adc
xchg
jo
mov
push
repnz
(bad)
mov
clc
pop
fnsave
dec
mov
pop
mov
xchg
shl
cli
mov
and
in
ficomp
adc
mov
pop
cmp
cmp
add
dec
or
xchg
loope
cwde
pop
outs
fisttp
sbb
repnz
das
jl
inc
inc
xlat
cwde
push
les
sbb
cmp
out
xchg
pop
xor
arpl
jmp
out
mov
outs
aad
mov
lds
dec
in
mov
mov
push
div
cmp
cvttps2pi
test
dec
nop
mov
pop
(bad)
jae
push
outs
retf
dec
mov
sub
lock
loopne
xchg
xor
xlat
xchg
sahf
cs
inc
retf
adc
shl
aaa
cmps
pop
push
sbb
mov
cdq
dec
push
loope
outs
into
xor
pushf
inc
mov
cli
sub
adc
jo
and
pop
and
adc
test
dec
fsub
inc
mov
jne
fnstcw
out
ror
loopne
mov
call
dec
or
aas
mov
mov
lahf
popf
mov
inc
xchg
mov
xchg
push
clc
cmp
iret
xlat
popa
into
into
(bad)
fdivr
cmp
(bad)
int
fild
scas
outs
lea
call
sub
jnp
mov
inc
xor
adc
push
push
push
xchg
int3
scas
cmp
movups
dec
pop
cs
push
loop
data16
stos
pop
push
lock
mov
ret
cmc
or
pop
movs
test
mov
pop
mov
pop
fidiv
cmp
jnp
push
sub
add
loopne
cmp
cld
sub
(bad)
scas
inc
cmp
in
inc
sahf
loopne
jg
lods
cmp
test
loope
mov
push
sbb
inc
aaa
xor
dec
cmp
fist
aas
retf
adc
loope
(bad)
(bad)
cmp
mov
mov
mov
stos
addr16
xchg
cmp
test
sub
repz
iret
mov
xor
ss
xor
call
or
arpl
push
icebp
gs
inc
xchg
fld
ins
xchg
inc
rcr
adc
mov
lds
fadd
or
or
in
bound
jmp
add
push
loop
hlt
dec
ficomp
outs
xor
jbe
clc
(bad)
pushf
cld
xor
pop
clc
add
ss
dec
sbb
inc
jp
sbb
cmp
mov
cmps
aaa
xor
push
fnstenv
stc
pushf
inc
aam
imul
cwde
push
cli
into
mov
je
dec
lods
cdq
add
inc
or
pop
enter
jmp
bound
jmp
cld
dec
pop
jo
jb
rcl
inc
add
aam
(bad)
retf
dec
push
add
pop
lea
cmp
cs
dec
aaa
sahf
inc
in
mov
shl
call
mov
add
bswap
sbb
dec
xchg
push
push
stos
and
int
les
lahf
mov
retf
xor
push
lahf
mov
int3
sub
ret
push
cli
mul
lods
cli
xchg
dec
mov
fcomi
sbb
iret
sub
(bad)
adc
mov
imul
popa
pop
imul
dec
add
dec
iret
cdq
ds
out
dec
dec
(bad)
cld
retf
gs
jae
icebp
outs
fadd
push
push
aas
push
pop
add
xchg
push
mov
and
or
imul
lock
mov
in
xchg
sbb
das
aad
(bad)
and
jmp
fstp
in
hlt
jmp
in
aad
jg
sub
pop
xchg
jmp
mov
repz
cmp
pushf
lahf
fild
pop
dec
or
es
shl
or
shl
mov
jg
movs
test
(bad)
(bad)
pop
mov
inc
call
xor
popf
cmps
cmp
mov
push
cld
movs
mov
cwde
pop
les
leave
clc
xor
(bad)
inc
jo
outs
mov
out
fstp
daa
fistp
sub
les
mov
adc
outs
mov
out
scas
fs
mov
rcl
inc
imul
mov
mov
xor
cmp
jae
repnz
cld
xchg
cwde
xchg
push
mov
(bad)
add
or
(bad)
in
cmc
aad
mov
(bad)
sti
repz
inc
mov
mov
pop
adc
mov
sbb
cdq
mov
pop
int
ja
inc
jmp
cmps
mov
loopne
pop
sub
jmp
jns
push
push
aad
loop
sbb
sub
aaa
int
and
scas
lahf
and
lahf
lahf
aam
in
leave
neg
shr
outs
cmc
push
push
push
adc
clc
pop
pop
cmc
mov
push
cs
loope
rcl
push
test
fisubr
mov
jge
cmp
xchg
xor
push
mov
mov
xlat
(bad)
repnz
outs
les
or
or
adc
(bad)
or
(bad)
call
dec
jbe
mov
xchg
lods
and
dec
retf
scas
retf
xchg
push
pop
movs
and
out
dec
out
add
pop
dec
outs
mov
mov
test
sbb
repnz
aaa
adc
movs
cmp
cmp
mov
push
sub
sbb
push
mov
mov
and
xor
xchg
xor
ins
(bad)
jmp
xchg
fdivr
sub
jle
hlt
fcom
lods
(bad)
aas
test
xlat
jb
fwait
xchg
mov
pop
aad
data16
shl
or
movs
or
fistp
aad
push
pushf
cmp
ss
inc
les
sti
pop
xor
icebp
les
jp
popa
jmp
scas
cmps
cmp
push
leave
ss
jno
loope
sbb
push
pop
(bad)
hlt
sub
addr16
inc
adc
into
pop
icebp
idiv
fmulp
xchg
scas
rcr
xchg
jmp
repnz
cmp
xchg
clc
fwait
hlt
pusha
jne
mov
push
fisub
cmps
pop
jns
add
push
pushf
inc
add
retf
fimul
loop
push
sti
sub
fcomip
jp
or
movs
jmp
cmp
mov
adc
xchg
mov
cli
adc
jae
out
out
push
jnp
sub
cmp
call
sbb
ja
jp
shr
mov
mov
inc
pop
and
add
push
pop
les
push
xor
or
test
sahf
pop
jns
(bad)
pop
jecxz
(bad)
jmp
push
jmp
sub
lods
sbb
pop
pop
xor
mov
sbb
rcr
call
sub
mov
imul
lods
and
sub
cmc
pop
cli
loope
push
lds
aam
pop
bound
int3
jl
push
mov
leave
dec
js
inc
movs
retf
pop
je
mov
cmps
sbb
pop
(bad)
cld
loope
jg
push
cmps
jmp
ins
bound
popa
pusha
cmps
mov
lds
xchg
rcl
ss
pop
jmp
out
or
daa
add
(bad)
repnz
test
mov
je
cmp
movs
sub
ins
rcr
and
push
pop
push
cs
stos
sbb
mov
pop
and
inc
lock
cmp
popf
xor
pop
adc
jnp
sbb
bound
shl
cmps
shr
fistp
or
call
movs
inc
push
push
jb
pusha
mov
sbb
pop
test
xor
xchg
stos
aaa
imul
push
mov
xor
jge
adc
dec
aad
sub
or
repz
pop
in
push
xor
jno
(bad)
loopne
es
lds
xlat
or
repz
scas
out
loop
(bad)
cmp
sbb
mov
test
or
loop
push
and
pop
push
adc
jae
outs
fwait
lea
in
xor
mov
xor
mov
arpl
or
jl
shl
mov
add
popa
call
add
aad
addr16
push
sbb
xor
sbb
sub
aad
jmp
lods
sub
jle
div
nop
loopne
cs
pop
and
jl
adc
mov
iret
loop
sub
fwait
stc
in
cli
lea
dec
retf
push
add
xchg
xchg
cmp
push
lods
sbb
cmp
std
pop
xor
movs
jmp
cmps
dec
push
jle
jmp
rcl
pop
jmp
pop
adc
pop
mov
not
ror
repnz
xor
push
mov
mov
fprem
int
shl
sti
bound
jae
(bad)
or
pop
call
jecxz
fld
icebp
ja
sbb
sahf
inc
pop
daa
push
in
pop
inc
mov
(bad)
(bad)
call
or
xchg
cmc
xchg
enter
cmp
dec
cmp
out
jns
pop
rep
shl
xor
(bad)
and
lods
mov
retf
pop
xchg
xor
(bad)
xchg
cmp
cld
ror
lds
mov
iret
or
fld
mov
add
imul
mov
xlat
push
mov
in
int3
sbb
push
(bad)
iret
in
dec
pop
(bad)
hlt
mov
ins
cmps
sub
rep
sub
bound
rcr
xor
fs
cmp
arpl
cmps
adc
cmp
stos
sbb
sbb
outs
add
cld
loop
scas
add
test
push
cld
sbb
mov
dec
jnp
dec
inc
pushf
push
inc
ret
fdivr
ins
sub
cmps
push
inc
sub
mov
jg
stc
mov
jmp
dec
neg
bound
dec
push
xor
xchg
mov
ins
push
inc
out
inc
mov
mov
cld
jmp
rcr
(bad)
push
sub
nop
std
test
mov
and
sub
fwait
pop
fld
jne
or
test
mov
push
sbb
out
pop
push
mov
test
(bad)
fstp
push
pop
inc
(bad)
in
stos
mov
mov
repnz
push
repnz
data16
fadd
xor
enter
adc
int3
in
out
mov
mov
or
lea
or
mov
rol
or
and
ds
repz
jno
lock
or
mov
cmp
popf
mov
and
mul
jmp
fdivr
(bad)
stos
js
repnz
test
out
sub
jg
aas
xlat
push
push
leave
popf
add
push
mov
mov
leave
inc
pop
iret
test
shr
(bad)
jo
shl
out
fmulp
fisttp
dec
xchg
nop
jb
mov
dec
xor
mov
push
movs
ret
jmp
pop
addr16
mov
aas
inc
mov
sub
cmps
or
lahf
push
xchg
and
pushf
pop
jmp
mov
dec
stc
cmps
in
cmp
test
outs
int3
push
inc
ins
xchg
dec
cmp
hlt
outs
cdq
loope
jb
bound
bound
and
cmp
dec
fidiv
neg
call
jo
xchg
or
aaa
pop
mov
outs
pop
push
ret
inc
lahf
adc
rol
jb
jecxz
pusha
mov
jne
inc
repnz
mov
lods
(bad)
or
call
add
mov
lahf
mov
dec
arpl
mov
enter
mov
mov
sahf
lahf
push
xchg
hlt
movs
js
jae
in
and
sbb
mov
or
arpl
in
out
pop
scas
(bad)
das
movs
xchg
jg
call
sbb
les
and
sahf
cmp
sbb
add
mov
push
in
(bad)
jnp
adc
sub
test
in
and
out
nop
cli
dec
test
or
cmp
iret
repz
bound
or
imul
or
xchg
add
(bad)
mov
imul
add
(bad)
mov
jp
push
dec
ficom
jb
cld
and
inc
and
(bad)
imul
inc
pop
sar
fistp
sub
mov
push
or
popa
sbb
jae
add
call
loopne
push
add
push
(bad)
cmc
cmp
adc
sti
div
movs
add
aam
jmp
addr16
inc
cmovg
dec
and
pop
mov
cmps
cdq
ficom
mov
sub
mov
sub
cli
pop
sbb
ds
and
cmps
inc
jo
dec
mov
fwait
mov
pushf
jnp
and
(bad)
aam
jmp
es
lock
xor
add
ins
repnz
sbb
lahf
push
adc
dec
pop
neg
jae
push
mov
shl
or
sub
iret
or
js
jecxz
std
scas
mov
dec
dec
ret
into
ins
es
adc
add
mov
or
ss
xchg
cld
ret
fisub
fbld
in
inc
sub
pop
(bad)
fst
(bad)
scas
sbb
out
popf
adc
les
addr16
xor
dec
add
xchg
(bad)
cli
addr16
mov
out
in
(bad)
xlat
cmp
sbb
dec
pop
xor
or
lods
pop
cmp
ds
test
cmp
adc
and
push
scas
jmp
rol
out
imul
mov
jbe
scas
inc
fsubr
jnp
call
pusha
jae
xor
pop
(bad)
push
and
loopne
nop
les
call
sub
sub
std
retf
cmp
add
jno
dec
mov
test
ficomp
jle
cwde
rol
je
mov
daa
mov
cmp
push
rcl
sub
adc
adc
retf
loopne
sbb
sub
sub
lods
xor
jns
push
rol
jns
ja
sti
addr16
add
pushf
outs
inc
push
jle
xlat
mov
test
pop
push
sti
push
or
push
cmps
jno
bound
popf
xchg
inc
mov
data16
addr16
jge
test
fnsave
loope
lods
shl
mov
cmp
or
aad
fxch
or
push
push
jge
push
pusha
mov
(bad)
stc
iret
jg
repz
(bad)
cld
out
sbb
cld
movhps
stos
packssdw
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
shl
cmps
popf
data16
sbb
fstp
jae
ret
mov
jmp
ret
cdq
cdq
mov
sbb
cwde
call
(bad)
sti
js
jns
fild
add
mov
mov
ja
inc
repz
aaa
aam
mov
mov
jle
mov
ret
inc
(bad)
in
fwait
mov
dec
mov
mov
mov
mov
or
add
xor
ret
pop
push
xlat
popa
in
inc
add
daa
std
es
push
cmp
sbb
cmp
pop
add
mov
movs
push
xor
popf
aad
push
push
ja
sub
xlat
dec
lock
sar
in
pushf
data16
fisubr
or
adc
mov
dec
fcomp
push
out
stos
and
stos
imul
jo
push
sub
rol
nop
fwait
inc
cmp
inc
mov
push
neg
(bad)
xchg
cmps
std
or
mov
push
lds
loopne
pop
shr
aas
pop
xchg
mov
fild
inc
into
pop
pop
retf
xchg
dec
lds
fcom
aad
mov
mov
sbb
inc
ins
outs
lock
imul
mov
mov
sub
and
mov
ficom
lods
pop
jne
arpl
sbb
push
retf
dec
pop
mov
sbb
mov
ds
jo
jae
cdq
outs
sbb
iret
int
mov
retf
adc
cmps
imul
cmp
pop
outs
or
daa
xor
int3
retf
pop
xor
jecxz
adc
lea
sar
call
scas
mov
aad
xor
test
cwde
mov
adc
into
shr
(bad)
(bad)
jae
fld
dec
in
xchg
ins
out
in
xchg
(bad)
mov
add
daa
cmc
pop
cmps
pop
push
jle
sbb
test
xor
loope
bound
push
repz
jb
js
stos
scas
mov
xor
mov
mov
pop
mov
adc
dec
sbb
xchg
outs
and
dec
sub
jg
sti
stc
cmc
mov
sbb
bound
dec
xchg
dec
xor
pop
pop
and
test
jle
retf
repz
xchg
pop
enter
adc
pop
mov
sbb
lahf
or
sahf
(bad)
inc
and
push
mov
leave
pop
dec
je
sub
shl
pushf
cmp
fwait
adc
xchg
lock
cmp
cmp
aaa
das
cs
cmp
shr
sbb
mov
and
cli
(bad)
or
ins
cmps
addr16
xor
pusha
out
lea
pop
pop
sbb
dec
xchg
lds
mov
aas
frstor
ds
aas
mov
out
sub
add
jbe
adc
lahf
in
push
mov
mov
out
dec
stos
adc
ret
pop
sub
dec
loope
xor
add
sahf
(bad)
mov
(bad)
mov
sbb
xor
aad
xchg
mov
scas
mov
inc
gs
lods
sti
das
and
(bad)
cdq
xor
mov
dec
xchg
aas
scas
popaw
(bad)
jno
mov
inc
ins
xor
ret
jns
pop
push
dec
pop
data16
arpl
cmp
xchg
xor
jno
(bad)
imul
shr
jne
push
add
sbb
stos
stc
test
icebp
in
pop
pop
inc
xchg
mov
popf
cmp
cmps
in
mov
shl
enter
mov
pop
add
fsub
xor
jmp
add
arpl
xchg
jge
mov
retf
lea
cs
jno
dec
daa
xchg
adc
xor
sbb
loopne
push
bnd
xchg
xchg
cmp
out
sub
cwde
rol
cli
sbb
mov
push
cmc
fwait
push
scas
and
adc
or
dec
mov
ins
je
stos
xchg
dec
movs
lahf
mov
ins
in
or
repnz
out
repnz
jno
dec
push
xchg
nop
cmc
fcomp
xor
xchg
push
or
lea
push
inc
xchg
fldcw
add
imul
rcl
lea
and
bound
jmp
fst
(bad)
sbb
dec
(bad)
cmp
lods
repnz
mov
mov
or
bnd
pop
dec
fld
cmp
mov
dec
jo
jnp
std
scas
xlat
test
sti
and
out
sub
pop
adc
movs
mov
je
fstp
push
aad
inc
dec
cwde
push
push
call
std
iret
outs
cmp
mov
popa
punpckldq
mov
sbb
mov
inc
adc
in
pop
mov
add
mov
pop
pop
mov
sti
in
dec
push
xor
inc
imul
ss
movs
(bad)
adc
sar
test
add
int
mov
adc
(bad)
lods
popf
mov
or
xchg
xor
inc
pop
jb
jle
arpl
xchg
cmp
sub
popa
cmps
xor
(bad)
mov
xchg
cmp
ins
stc
lock
sbb
pop
js
push
das
mov
fadd
(bad)
dec
movs
inc
hlt
mov
mov
mov
jne
and
pop
lahf
adc
or
pusha
pushf
loop
aam
or
cs
cmp
pop
push
mov
xor
sbb
outs
pop
pop
aam
pop
inc
out
ds
test
push
mov
stos
(bad)
in
fadd
cmp
sbb
sbb
cdq
ret
sbb
jmp
jb
je
sub
icebp
in
pushf
pusha
mov
mov
in
popa
sub
pushf
mov
loopne
xlat
ret
mov
shl
mov
test
repz
mov
push
pop
add
fisttp
mov
in
inc
repnz
ja
rol
sar
(bad)
fstp
mov
add
in
mov
rcl
retf
and
xor
push
mov
and
sar
(bad)
inc
sub
jo
ins
mov
call
mov
scas
pusha
cld
clc
je
jb
ja
jns
mov
cmp
sbb
push
imul
fld
xchg
sahf
cmps
aas
daa
mov
call
ret
les
popa
mov
gs
adc
loop
add
stos
xor
xchg
mov
cmp
cld
int
mov
(bad)
push
push
sbb
movs
cmp
xchg
neg
add
inc
mov
dec
imul
enter
mov
scas
lods
cmp
scas
push
nop
lahf
push
mov
adc
sbb
xlat
jne
dec
dec
mov
mov
and
or
pop
xchg
and
repnz
adc
cmovno
loopne
sbb
inc
xchg
ja
js
xchg
xor
jle
arpl
test
mov
mov
in
inc
mov
movs
mov
out
rol
fs
inc
rcl
arpl
jl
pop
mov
mov
cmc
mov
cmps
lea
sub
retf
std
scas
retf
push
(bad)
retf
xchg
push
inc
neg
lods
sub
mov
call
ins
cmps
fbld
or
push
sbb
push
aas
adc
jmp
sub
mov
out
repnz
imul
mov
pop
and
sets
cmp
pop
shl
int3
sti
dec
pusha
not
xchg
mov
ret
xchg
and
sbb
cld
cld
stos
adc
inc
cmp
sar
loop
aaa
aad
mov
add
add
or
popa
sub
mov
es
ins
lods
adc
jmp
lea
mov
mov
push
nop
test
mov
sub
imul
retf
cdq
sub
xor
cli
sub
push
pusha
scas
mov
xchg
aas
fsubr
push
cmp
push
sub
mov
jb
pusha
fild
xor
sbb
daa
(bad)
ss
popa
jmp
imul
and
arpl
inc
mov
mov
jns
or
mov
inc
sub
call
push
(bad)
std
jl
xchg
or
rcl
add
inc
popa
and
(bad)
pop
xchg
into
mov
dec
xchg
aad
or
in
push
pop
loope
pop
call
lock
inc
or
lods
xor
fstp
pop
add
mov
popa
lods
dec
bound
adc
mov
sbb
adc
(bad)
retf
cmp
mov
sbb
or
clc
xchg
rcl
jge
push
jnp
adc
push
pop
repnz
(bad)
leave
retf
(bad)
fsub
push
in
ror
mov
xor
cdq
scas
jbe
pushf
mov
sbb
adc
push
ins
cli
nop
jno
adc
xchg
jl
mov
test
sbb
imul
ret
pop
call
loopne
push
out
sbb
mov
cmp
jmp
mov
adc
hlt
dec
dec
mov
mov
mov
mov
scas
xchg
mov
mov
(bad)
jo
mov
add
mov
xchg
rcr
cmp
xor
out
mov
hlt
cmp
(bad)
cmc
call
jns
cmps
test
test
pushf
mov
sub
mov
dec
mov
cmp
mov
int
pop
fwait
imul
jle
add
xchg
cmp
pop
mov
push
dec
out
mov
cmp
out
cli
push
sbb
push
sahf
arpl
daa
int
cli
pop
fcom
jb
sar
cmp
push
dec
scas
lods
mov
imul
jns
jge
cmp
fdivr
les
lods
cmp
lahf
xchg
test
adc
jp
shr
dec
test
les
jmp
(bad)
out
gs
je
repz
mov
and
cwde
aas
shr
fs
arpl
mov
add
in
enter
(bad)
imul
movs
add
push
hlt
pushf
push
js
and
outs
std
sbb
cli
mov
xor
jne
sub
popa
(bad)
mov
mov
jge
daa
aam
adc
outs
test
cmp
test
and
cmp
push
jnp
push
xor
movs
sub
daa
popf
cdq
sub
outs
das
iret
xchg
ins
neg
push
scas
sbb
add
cmp
(bad)
mov
imul
shl
aas
mov
popa
cli
out
add
addr16
retf
mov
mov
pushf
shl
out
pop
adc
ret
mov
aaa
push
es
pop
push
js
sub
dec
push
retf
aaa
xchg
mov
jnp
or
sar
mov
jmp
iret
adc
dec
clc
mov
and
not
in
lea
bound
scas
sbb
cmp
dec
aad
pusha
out
mov
push
clc
std
sub
mov
push
jmp
icebp
fnstcw
jge
pop
jmp
jb
cmps
xor
mov
xchg
push
mov
scas
mov
cwde
push
mov
(bad)
sbb
mov
ror
aaa
in
pop
mov
xlat
mov
sbb
fdiv
or
test
cmc
movs
xchg
scas
sbb
or
xlat
push
data16
shl
cmp
repz
stos
rcl
and
or
push
stos
cmp
mov
pop
or
fsubr
aam
loopne
push
lea
es
or
sub
dec
in
mov
add
aaa
aaa
mov
sbb
sub
retf
inc
lds
jg
icebp
inc
pushf
push
adc
pop
js
(bad)
cmp
ficom
call
(bad)
(bad)
cmp
jo
and
sbb
jne
aaa
arpl
out
push
aas
dec
cmps
shl
imul
add
push
fisttp
stc
jnp
add
shl
pushf
(bad)
and
js
out
aaa
add
ins
rol
popf
dec
test
inc
push
jb
adc
jae
push
mov
mov
inc
nop
cmps
stc
pop
push
jmp
ds
mov
out
arpl
std
rcl
leave
movs
pusha
out
cmc
ins
dec
pop
repz
add
xor
div
adc
push
mov
popf
rol
outs
sbb
jnp
test
jo
mov
mov
repnz
cmp
stos
shl
sbb
xchg
cmc
ficomp
fstp
sub
sub
xchg
xchg
inc
push
inc
sbb
mov
cmp
pop
mov
arpl
xor
aas
or
inc
xchg
shr
xchg
test
mov
sub
int
cwde
clc
or
inc
dec
lods
outs
fild
push
iret
test
and
or
les
jb
adc
cdq
or
jbe
push
sbb
push
and
xchg
adc
xchg
lea
push
cmp
aad
or
data16
pusha
ret
sub
mov
sub
mov
or
cmps
sbb
imul
cmp
sbb
mov
push
mov
push
or
ret
(bad)
out
hlt
push
pop
out
sbb
js
push
push
push
fneni(8087
xor
shl
hlt
cs
push
mov
inc
mov
inc
cmp
add
aad
pop
ret
je
(bad)
fcmovbe
pushf
test
sub
mov
retf
sub
add
push
ds
sub
and
mov
popa
mov
add
cmp
mov
out
mov
test
sub
lock
pop
jne
add
adc
icebp
imul
cli
inc
push
dec
inc
mov
hlt
mov
rcr
out
or
mov
btr
cmp
mov
daa
mov
push
ins
dec
push
push
add
imul
enter
cli
test
jl
outs
cld
icebp
push
les
pop
sub
dec
cld
call
push
mov
pop
cmps
push
xor
or
les
aaa
out
movs
(bad)
clc
shr
jge
mov
jne
adc
int3
arpl
dec
loop
push
ds
mov
xor
pop
movs
mov
stc
jb
aad
jns
inc
dec
das
jg
inc
xchg
jmp
or
cmps
push
mov
push
repnz
sti
dec
mov
cmp
cmps
pop
loop
xlat
clc
jo
pushf
sub
sbb
int
cs
sbb
popa
fsubr
mov
sub
jae
ja
sub
mov
add
xchg
in
paddsb
call
xor
loop
in
mov
pop
pop
add
scas
or
jg
je
lods
scas
jns
xchg
fsubr
inc
jno
(bad)
pop
xchg
sbb
mov
cmp
sbb
sub
inc
inc
repnz
push
je
jb
fldcw
cmp
adc
out
sub
jg
add
xchg
xchg
sub
mov
add
push
fsubr
cmp
shl
lds
pop
jb
mov
and
imul
jae
push
das
rol
es
aas
jne
mov
aad
pusha
aam
and
ret
fcomp
pop
lock
jmp
call
mov
push
in
or
cli
jecxz
shr
dec
arpl
pop
or
jae
in
sbb
call
retf
jg
push
sub
jge
mov
and
lahf
cmp
scas
push
push
mov
pushf
outs
pop
push
enter
xor
cmp
jns
mov
and
shr
ret
fcom
jl
bound
rol
repz
call
inc
cwde
lods
cmp
jp
cld
jle
pop
sub
shl
cs
and
sub
lds
cmp
(bad)
mov
xor
ds
xchg
mov
fisttp
rcl
jl
or
fcomp
and
(bad)
rcr
jne
add
xchg
(bad)
(bad)
ds
xchg
std
jno
xor
jo
push
sub
xchg
pop
retf
in
adc
or
dec
mov
xchg
das
ins
(bad)
leave
add
adc
dec
or
in
(bad)
repnz
dec
cmp
pop
lock
or
data16
mov
or
push
stos
enter
clc
test
push
retf
pop
jno
loope
das
cmps
or
call
ret
push
data16
jmp
jae
movs
mov
push
pusha
sub
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
loop
movq
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
das
(bad)
mov
jmp
cdq
cmp
cmps
mov
adc
daa
dec
dec
fwait
cmps
dec
mov
je
dec
popf
out
mov
std
lahf
div
in
repz
add
adc
xor
jb
push
or
xchg
mov
mov
fdiv
add
sbb
test
xor
jno
call
xor
imul
adc
mov
mov
lahf
xchg
sahf
sub
push
movs
mov
and
cdq
fldenv
stc
test
dec
ins
(bad)
sbb
mov
adc
fsub
pop
ret
test
shl
cld
lds
dec
out
sub
scas
hlt
pop
mov
out
fs
mov
or
loop
adc
add
out
aaa
sbb
sbb
fwait
xlat
pop
jnp
pop
add
lahf
addr16
sahf
mov
into
cdq
push
cmp
or
imul
sbb
ficom
cmp
retf
in
jecxz
dec
and
and
pop
xor
cmp
jecxz
sbb
int
imul
dec
xchg
mov
movs
std
lahf
fs
xor
push
jp
fdivr
movs
aad
sub
dec
cmc
shl
repz
ss
adc
sti
popf
cmp
std
jbe
jae
inc
(bad)
das
mov
not
or
test
cmp
sbb
cmp
inc
sbb
and
movs
adc
or
xchg
nop
mov
arpl
or
lock
int3
sti
inc
fst
fsub
repnz
clc
push
xchg
mov
fist
in
bound
or
das
mov
lock
cld
rcl
or
rcl
jle
and
add
cmc
les
push
das
ins
jnp
leave
(bad)
imul
sbb
cmp
stos
push
xor
or
call
pop
aad
cmp
dec
lahf
jge
and
jo
scas
mov
stos
lea
iret
cmp
cdq
leave
mov
or
std
repz
rcr
mov
push
jl
outs
lods
dec
push
stos
xchg
aad
mov
gs
dec
push
popa
out
pop
inc
(bad)
xchg
sbb
scas
jge
ret
inc
sar
movs
fidiv
neg
push
sbb
mov
fs
cld
mov
sti
jne
ds
jle
push
outs
jmp
movs
in
jno
call
pop
mov
push
pop
lds
dec
js
out
shl
inc
xor
add
rcl
inc
(bad)
popa
mov
mov
pop
shr
popf
mov
lea
mov
js
call
adc
xor
or
test
adc
jbe
inc
hlt
adc
cmc
(bad)
jmp
lods
and
and
jb
jmp
imul
lds
jmp
sbb
aad
call
inc
add
or
dec
dec
mov
rol
or
mov
inc
inc
ficomp
mov
cmp
sub
mov
and
pushf
lods
loopne
dec
pusha
sbb
adc
sar
mov
sbb
pop
aas
test
pop
mov
test
and
mov
adc
out
in
xchg
xchg
icebp
into
lock
in
inc
out
aaa
mov
mov
jg
jno
cmp
jle
mov
repz
punpckldq
and
xchg
mov
mov
mov
cmps
div
fmulp
fisttp
imul
and
(bad)
std
cmp
(bad)
mov
cmp
jge
(bad)
neg
xchg
fidiv
xor
rol
add
push
outs
shr
mov
add
out
test
shr
je
sub
xchg
push
pop
test
(bad)
daa
mov
mov
fisttp
arpl
iret
mov
popf
shl
fbstp
push
push
cmps
fiadd
ins
mov
ss
mov
mov
pop
xor
jae
or
loope
jbe
xor
xchg
add
dec
nop
add
test
sbb
mov
jnp
es
std
test
xchg
into
xchg
fidivr
(bad)
ins
fdivr
sub
or
cdq
ss
aad
dec
test
jl
and
add
out
adc
adc
sbb
mov
shl
mov
ret
dec
mov
(bad)
mov
fisttp
inc
imul
es
retf
loopne
hlt
addr16
jno
xor
movs
sbb
frstor
gs
mov
mov
jnp
aad
xor
shl
cmp
dec
cli
mov
cmp
icebp
jmp
pop
xor
jmp
ins
int
mov
cmps
inc
cmp
scas
out
cs
or
xor
cmps
jecxz
push
jae
jmp
jp
mov
push
imul
mov
inc
movs
test
das
je
pop
pop
leave
repnz
cld
into
mov
pop
mov
(bad)
or
and
aas
xor
jnp
in
test
aas
mov
jmp
outs
fsubr
out
pop
int
je
cmp
fnstsw
adc
mov
mov
mov
in
add
jge
stos
fs
mov
sbb
sub
dec
push
enter
adc
jmp
sbb
cmp
movs
push
sar
mov
jae
sub
neg
mov
mov
jle
sbb
arpl
loope
adc
mov
out
cwde
loopne
enter
test
pop
pop
retf
fcom
imul
jmp
cmp
adc
xchg
mov
jnp
cmp
inc
pop
dec
mov
push
sub
cmc
test
js
sub
movs
push
test
lea
add
popf
cdq
cmp
cs
movs
sbb
add
les
pop
cs
add
(bad)
pop
(bad)
push
push
cli
dec
push
sub
(bad)
es
pop
sbb
and
and
enter
dec
enter
mov
pushf
fsubp
mov
cmp
fild
dec
mov
dec
lahf
jmp
jle
mov
mov
jecxz
popa
adc
sub
pop
mov
xor
add
sar
and
mov
push
out
daa
mov
jmp
retf
pop
ret
imul
sbb
nop
aam
cmp
retf
cmps
lods
pop
imul
push
pop
test
or
mov
pop
xchg
dec
sbb
jne
icebp
pop
(bad)
std
cmp
es
repz
mov
inc
in
lock
mov
and
jno
lds
lahf
cmp
mov
cld
adc
arpl
int3
lods
push
test
mov
xor
sub
dec
stos
test
(bad)
mov
jl
fwait
jg
jo
repz
mov
shl
icebp
pop
jae
inc
cmps
loope
and
mov
jmp
movs
sbb
out
adc
jbe
int3
call
ins
hlt
pop
(bad)
add
cmp
inc
into
add
mov
outs
mov
cmp
jmp
imul
lods
in
push
std
ror
sbb
dec
in
sbb
sbb
xor
push
test
rcr
xchg
inc
loopne
cmps
fldcw
mov
pop
hlt
ss
or
data16
and
sub
call
cmps
adc
and
jmp
or
inc
lock
xlat
mov
data16
pop
xchg
jne
mov
test
iret
cmp
mov
sar
jbe
scas
push
jo
jnp
das
popf
jl
sub
mov
jo
and
and
aas
not
mov
(bad)
dec
dec
int
sub
fdiv
mov
sub
mov
movs
leave
adc
aam
test
movs
aas
outs
test
fadd
aaa
int
fsubr
sub
jo
inc
pusha
arpl
lods
sbb
and
in
loop
sbb
inc
jbe
sub
outs
out
push
mov
inc
fstp
and
popa
mov
mov
repz
out
sti
mov
ins
pop
rcl
clc
mov
fimul
jge
ret
xor
mov
mov
inc
lea
adc
movs
(bad)
push
sbb
je
pop
mov
push
(bad)
and
and
pop
adc
pop
fisub
jge
(bad)
cwde
lds
sub
mov
mov
xlat
movs
test
aaa
jne
cli
fnstcw
daa
mov
sbb
pop
test
js
in
pop
push
push
mov
repnz
mov
add
jecxz
jp
test
jb
sbb
inc
fs
enter
(bad)
repz
jno
and
sar
pop
scas
mov
xchg
sbb
call
punpckhwd
test
aas
push
or
jnp
in
fisttp
jle
std
push
sbb
jae
push
or
fild
aaa
dec
(bad)
xchg
mov
jge
cmp
test
dec
lods
or
gs
mov
ficom
cli
call
lods
mov
lahf
pop
jne
aaa
fisttp
add
cmp
outs
out
dec
cmps
shl
cmc
adc
mov
xor
jnp
pop
dec
dec
jg
outs
fdivr
mov
scas
fadd
xchg
sub
repz
movs
mov
icebp
mov
mov
xchg
mov
xor
cmps
inc
pop
stos
add
mov
push
out
pop
sbb
cwde
pcmpeqw
lock
test
add
popa
cmp
fidivr
jo
ret
pop
lahf
iret
and
in
icebp
ret
pop
dec
repz
lods
cmp
jp
cmp
sbb
iret
cmp
repz
cli
fnsave
js
adc
fwait
sub
jg
cld
scas
add
call
or
jge
fs
push
lds
popf
int
sub
rcr
int3
rcr
popa
int
sbb
inc
lods
pop
mov
(bad)
push
xchg
pop
lods
ror
cmp
sub
jg
ins
rcr
push
fmul
mov
lods
mov
repnz
mov
mov
jnp
xchg
out
add
cmps
jmp
int3
mov
inc
push
lds
jbe
ds
jp
pushf
movs
idiv
in
xor
jno
loop
inc
fidivr
jbe
in
das
jge
imul
mov
jb
or
in
xor
mov
dec
push
out
xor
aad
scas
xchg
sbb
(bad)
cmp
repz
movlps
xchg
lds
adc
cld
xor
or
push
lods
sbb
xchg
mov
pavgw
les
and
punpckhdq
mov
mov
cmp
loopne
dec
push
push
cmp
mov
jmp
out
mov
or
lock
loope
or
xor
cmp
aas
mov
imul
mov
rol
mov
in
dec
into
push
gs
mov
pop
cmps
mov
cmp
test
and
ins
ret
mov
pop
mov
in
mov
jle
push
fcomip
jl
mov
inc
sbb
test
sti
inc
mov
cld
rol
sub
out
clc
mov
and
loopne
cmc
jg
pop
lods
mov
and
cmp
mov
cmp
dec
add
mov
mov
mov
inc
jmp
sbb
mov
clc
mov
outs
mov
stc
pop
dec
and
cmc
and
lgs
jnp
out
jl
pop
sbb
adc
xlat
and
cmp
sbb
inc
pop
cmp
mov
push
mov
sbb
cmps
dec
inc
(bad)
pop
jmp
shr
call
enter
call
mov
sbb
mul
xchg
inc
(bad)
test
dec
hlt
in
or
inc
cld
jg
stos
cmp
jns
xchg
cmp
std
test
outs
jmp
mov
icebp
(bad)
pop
push
fsubp
loopne
push
mov
fwait
bound
pop
sub
loope
(bad)
hlt
mov
pushf
cmps
push
push
pop
int3
fisubr
push
push
(bad)
pop
jo
jns
repz
xor
pop
movs
and
pop
xor
(bad)
clc
outs
mov
test
pop
stos
mov
std
fs
sub
std
in
sar
and
mov
stc
jmp
stc
es
xchg
int
inc
nop
(bad)
add
mov
jo
sbb
in
lods
sub
xor
cmp
jno
lods
imul
mov
ret
mov
aad
aaa
clc
jb
js
inc
int3
jnp
dec
mov
sbb
gs
xchg
fcmovbe
jbe
movs
mov
mov
push
fsubr
in
sub
dec
push
movs
xor
xor
sbb
cmp
arpl
aad
jecxz
and
mov
jne
shl
out
jbe
cmp
test
mov
and
cmc
sub
or
ins
(bad)
clc
imul
fs
retf
hlt
mov
stc
mov
inc
sbb
jg
idiv
imul
or
or
je
cmps
int3
dec
(bad)
jns
gs
(bad)
sub
jae
fs
fptan
or
mov
push
sahf
dec
mov
cs
stos
cmps
fs
and
push
fist
int
cmps
stos
push
xchg
std
arpl
loop
mov
jae
cmp
add
inc
lods
jns
mov
xchg
ins
or
cli
std
cmp
xor
pop
loopne
dec
fisubr
push
and
into
inc
jno
into
test
jb
in
jbe
pop
aam
mov
pop
xchg
xor
dec
jg
out
or
lods
xor
jae
dec
sub
sbb
pushf
cs
div
jle
jmp
out
fnsave
and
popa
in
mov
adc
xor
cmp
stc
or
push
cmp
out
mov
jecxz
inc
jp
cdq
pop
mov
or
lahf
lock
outs
pop
push
int3
dec
mov
aas
pop
jge
add
adc
push
gs
stos
xchg
popf
cli
mov
mov
xor
cld
jl
es
nop
movs
std
cmp
cmp
dec
mov
cmc
jg
fdivrp
xchg
mov
jne
pop
jnp
das
int
push
ret
mov
mov
adc
mov
mov
clc
lods
dec
outs
jmp
in
test
cmp
inc
mov
push
lahf
ror
test
jno
inc
push
mov
push
cmp
adc
push
or
add
jl
or
movs
jne
cmp
das
inc
xor
jge
pop
in
xchg
aam
(bad)
loope
sub
clc
fsubp
in
dec
xchg
mov
mov
xchg
mul
sahf
push
adc
(bad)
pop
push
cmps
push
cmp
call
mov
push
inc
jnp
in
pop
xor
inc
stos
mov
jecxz
call
ror
mov
int
xchg
out
test
cli
push
mov
mov
mov
xchg
in
adc
mov
xlat
inc
jae
shl
imul
(bad)
imul
loope
iret
pop
xor
xor
idiv
xchg
lea
hlt
push
in
stos
add
xor
push
and
dec
cmc
imul
sub
in
(bad)
push
scas
sti
enter
pop
mov
loope
in
dec
push
in
sub
sub
(bad)
mov
fcomp
neg
ds
fist
mov
in
call
out
inc
mov
add
pop
dec
xchg
pop
xchg
into
out
popf
dec
mov
cmps
jecxz
fnstsw
jne
sahf
jge
nop
dec
push
out
pop
fdivr
test
js
(bad)
add
ins
ret
vminss
or
out
pop
mov
rol
sub
ins
mov
aad
loope
sbb
scas
and
les
add
fmul
ds
xor
lahf
pop
mov
mov
dec
rcr
pop
fnstenv
shl
mov
dec
sub
shl
ja
jecxz
mov
dec
pop
scas
sbb
adc
xor
fld
pop
sti
xchg
in
dec
addr16
add
daa
ror
inc
(bad)
jl
aaa
inc
imul
inc
mov
mov
cmp
inc
push
inc
(bad)
mov
mov
imul
sbb
adc
push
or
jmp
rcl
jg
cmc
xchg
dec
cmp
out
jg
stc
out
call
add
jg
or
test
ds
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ss
pushf
cmps
jecxz
xlat
lea
dec
dec
dec
std
jne
fnstsw
jne
mov
test
rol
cdq
into
cdq
data16
(bad)
fimul
repnz
jns
xor
add
(bad)
xor
outs
or
pusha
or
xor
ins
jle
jmp
mov
sbb
(bad)
pushf
js
das
fwait
or
nop
fisttp
in
sbb
cmp
in
inc
rcl
push
sub
jg
pop
movs
cwde
retf
sahf
xchg
dec
jmp
and
xchg
mov
clc
add
rcr
cmps
mov
and
pop
fs
sbb
cmp
push
popa
pop
pushf
add
mov
movs
loope
int
retf
xor
imul
pop
call
sub
fnsave
in
sub
inc
cmp
mov
push
add
push
xchg
movs
retf
mov
jns
call
mov
lds
out
and
xchg
hlt
out
dec
rcl
push
xor
clc
cmp
nop
dec
xchg
sbb
cwde
fs
jl
jo
xchg
pop
and
je
push
cdq
mov
mov
in
adc
fwait
pop
jp
jge
mov
data16
(bad)
out
loopne
test
and
std
adc
mov
jl
mov
sub
mov
pop
jmp
fcmovbe
sbb
into
js
pop
ins
or
mov
sub
dec
cmp
popf
test
adc
add
or
sbb
xlat
sub
xor
mov
loope
mov
xchg
xor
inc
ret
scas
mov
pop
stc
mov
mov
fsubr
mov
stc
imul
xchg
xlat
push
pop
lods
xchg
mov
lods
dec
dec
add
ja
mov
jns
mov
loope
mov
out
pop
jle
adc
pop
mov
out
dec
std
fimul
nop
mov
jg
push
test
jmp
inc
inc
jecxz
fild
mov
pop
cli
sbb
push
push
in
call
inc
stos
call
adc
jo
mov
(bad)
sub
outs
dec
clc
int
pop
es
pop
pop
call
loop
cwde
dec
in
punpckldq
inc
xor
shl
shl
add
cld
ror
sahf
push
lds
add
push
push
aaa
imul
mov
pop
pop
jmp
in
sbb
in
aam
loop
std
sbb
mov
es
xchg
add
das
pushf
xlat
xor
test
out
jmp
loopne
mov
xchg
dec
int
out
cmps
(bad)
out
ret
adc
push
ror
sahf
cs
adc
cs
or
fisubr
add
icebp
cs
out
pushf
pop
jmp
mov
dec
sbb
mov
mov
ss
pop
cli
das
cwde
or
retf
sahf
mov
(bad)
cmps
dec
cmp
push
(bad)
out
xor
xor
cmp
leave
cmp
retf
out
das
push
nop
xor
sbb
das
jg
sub
jge
repz
call
stos
adc
pop
jnp
(bad)
es
dec
pop
mov
mov
shl
addr16
psubd
cmps
push
call
ror
outs
and
mov
sbb
sub
cmp
loopne
dec
rcr
xor
inc
out
cmp
mov
jmp
dec
aad
jb
jl
mov
fst
add
jg
fcomi
stos
mov
cli
mov
push
stc
gs
lea
push
(bad)
push
mov
(bad)
stc
and
push
mov
pop
sbb
aaa
mov
or
divps
sbb
retf
sbb
cmp
pop
pop
fs
ja
mov
repnz
mov
mov
jl
clc
ds
adc
fiadd
cmc
mov
xlat
repnz
mov
xlat
xchg
fcomp
mov
mov
icebp
dec
outs
jo
cli
pop
pop
xchg
sub
and
hlt
int
out
sbb
cdq
mov
les
xchg
adc
out
inc
and
clc
ins
jo
(bad)
xchg
pop
scas
fild
inc
retf
icebp
pop
push
push
dec
mov
mov
out
test
pop
pop
fist
jmp
pushf
ins
stc
in
jge
add
popa
dec
in
movs
out
(bad)
leave
pop
add
mov
shl
scas
adc
mov
xchg
fild
add
jmp
pop
mov
cs
imul
in
loopne
and
fcmovnu
jns
adc
mov
test
iret
xor
mov
enter
jbe
outs
das
scas
les
sub
test
(bad)
jno
inc
pop
or
mov
xchg
push
mov
cmps
sbb
ins
fdiv
ja
add
outs
sbb
out
dec
clc
aas
dec
sub
xchg
and
ins
movs
or
sbb
pop
hlt
lock
lea
sub
scas
in
add
arpl
xchg
mov
and
shl
xcrypt-ctr
cmps
fistp
clc
and
scas
sbb
aaa
test
lea
gs
adc
stc
mov
fwait
dec
std
mov
or
das
mov
imul
and
xor
(bad)
mov
cmp
call
jp
sbb
pusha
fwait
ds
xchg
movs
pop
inc
jge
xor
mov
nop
cwde
pop
rol
div
int
jbe
sahf
out
cmps
jne
cmp
and
and
inc
rcl
pop
int3
sbb
xchg
add
or
dec
popf
nop
retf
pop
inc
nop
jl
out
aam
pop
cwde
xor
mov
pop
out
pop
aas
pusha
and
pop
hlt
push
bswap
sub
cmp
std
retf
jle
mov
xlat
mov
and
clc
and
jno
nop
mov
add
ss
pop
jb
push
das
xor
daa
fidivr
cmps
daa
imul
dec
scas
push
dec
xor
fldcw
vpcomd
inc
das
sub
cdq
sbb
jecxz
ss
adc
jb
daa
jmp
jecxz
cmps
iret
(bad)
loop
inc
ret
cli
mov
popa
add
lea
scas
jne
dec
popf
test
fidivr
jnp
call
xchg
test
mov
adc
into
cmps
jno
xor
inc
into
dec
scas
and
sub
scas
cmp
inc
adc
pop
mov
je
shl
scas
jno
mov
mov
push
jns
push
add
add
es
or
bound
jo
adc
xor
sar
fisttp
retf
loope
lds
jl
(bad)
retf
fwait
dec
ret
inc
fidiv
xchg
ss
mul
xor
bound
mov
cmps
push
retf
jb
cmp
rcl
inc
movs
cli
pop
pop
add
add
test
xchg
pinsrw
jbe
xor
fs
test
or
mov
shl
or
mov
into
std
sbb
pop
jns
mov
je
push
or
lea
stos
jb
xor
aad
mov
ss
pop
pop
int
mov
xor
sub
imul
ss
mov
and
(bad)
fldenv
push
and
xor
jmp
int
in
inc
retf
mov
add
pop
jge
push
or
sub
arpl
mov
das
scas
leave
inc
in
dec
imul
jns
mov
jbe
ins
pop
mov
inc
and
jp
sbb
dec
push
push
in
pop
call
pop
repnz
mov
jno
xchg
sub
stos
jnp
sbb
inc
(bad)
jo
rol
xchg
movs
into
loop
(bad)
cmp
xchg
add
inc
ret
ja
sbb
ret
jbe
aas
mov
sbb
cli
mov
pop
call
lea
push
rol
cmp
xor
mov
jmp
sbb
push
es
inc
push
mov
test
xrelease
xchg
xlat
mov
rep
out
ins
pop
pop
mov
icebp
dec
into
jmp
mov
lock
pop
xchg
push
mov
and
add
ds
xchg
imul
xor
in
in
lods
iret
jle
xchg
cwde
jbe
cwde
das
cld
cld
fs
out
cmp
pusha
or
aas
pop
jb
lock
cmp
mov
add
and
je
cs
or
xchg
out
(bad)
mov
pushf
fwait
and
cld
pushw
xchg
jge
add
sbb
mov
push
cmp
scas
dec
test
sbb
test
fsubp
xor
ret
jo
int3
jbe
push
leave
mov
out
pop
dec
push
pop
and
and
cdq
clc
(bad)
jp
jmp
mov
sub
stos
dec
adc
adc
div
xchg
cdq
pop
cmp
stc
stos
mov
rcl
jno
add
js
mov
push
adc
push
xchg
test
popf
repnz
pusha
jg
mov
sbb
int3
adc
das
arpl
xor
fbld
mov
inc
pop
push
sub
scas
outs
and
or
sub
in
ins
inc
loope
mov
jno
dec
les
idiv
movs
inc
mul
je
or
adc
push
movs
push
fdivr
inc
push
lock
lock
mov
xor
and
add
out
cmp
xor
sbb
cmps
pop
dec
lds
inc
dec
in
dec
mov
xchg
loop
in
ror
mov
test
mov
dec
fld
xor
stos
pop
pop
push
adc
mov
sbb
aas
push
pop
lods
pop
pop
or
mov
xchg
int3
loopne
jne
jg
cmp
xchg
inc
add
xchg
sub
pushf
stos
xor
test
xchg
movs
test
inc
fs
(bad)
push
jl
add
or
and
xor
push
or
stos
add
xchg
adc
inc
movs
in
lock
jp
ds
and
or
push
ret
rcl
mov
or
out
test
xor
in
and
jb
je
xchg
lahf
push
stos
xchg
js
sbb
imul
dec
ret
clc
aam
popf
jne
mov
mov
cwde
push
shl
push
cmp
sti
aam
cmp
scas
rol
out
jge
mov
rol
xchg
mov
jmp
cmc
cmp
lods
cmps
or
mov
popf
and
stos
sub
jle
mov
ret
jg
les
xor
bnd
or
por
call
xlat
or
movs
pushf
cmp
dec
int3
ja
push
xlat
and
mov
aam
xchg
out
cmp
xor
cmps
int
inc
push
inc
jge
mov
retf
mov
xor
pop
or
dec
cmps
out
mov
dec
jo
dec
xor
xor
popf
scas
rcr
xchg
(bad)
iret
cdq
aaa
jg
inc
mov
pop
shl
es
pop
mov
aad
jle
mov
aaa
xchg
pop
ja
mov
jo
cld
mov
cmp
xchg
push
sbb
(bad)
jp
adc
outs
sub
sbb
lds
cmps
dec
and
dec
ds
aas
iret
and
push
in
fiadd
push
xor
xchg
cmp
dec
aam
aad
das
fcom
mov
lea
inc
push
jmp
(bad)
add
dec
retf
push
pop
mov
mov
jp
add
cmps
dec
inc
jae
xor
cld
out
cmps
daa
cmps
jne
sub
jecxz
sbb
ja
mov
mov
sbb
test
mov
aam
jge
xchg
xchg
rcl
mov
sub
imul
push
fwait
mov
es
jo
mov
xor
fisttp
sbb
or
shl
or
out
add
sar
stos
(bad)
sbb
and
popa
dec
push
jo
(bad)
pop
call
out
dec
or
clc
jno
sbb
mov
test
je
adc
in
and
stos
movs
jg
adc
or
mov
repnz
dec
cmp
outs
and
xor
movs
les
xor
scas
into
dec
cmps
inc
jg
pusha
imul
cld
pop
ret
test
into
iret
sbb
adc
sti
fidivr
xor
cmc
icebp
cmp
pop
jle
xor
out
das
out
mov
fld
xor
dec
mov
push
mov
fs
jg
sub
lea
pop
movs
sub
mov
icebp
in
push
test
pop
inc
fwait
push
push
gs
sbb
add
or
sar
call
rol
js
and
daa
les
jae
fst
stc
movs
cdq
into
sub
gs
fdiv
(bad)
push
das
add
adc
arpl
les
iret
icebp
sub
cld
cmp
xor
dec
ror
sub
xchg
add
mov
int
sbb
cmp
jg
mov
dec
int3
mov
mov
cmp
(bad)
neg
arpl
mov
mov
and
scas
call
fcomp
leave
xlat
retf
loope
dec
pusha
(bad)
repz
jl
jo
add
rcr
repnz
and
and
ja
aaa
mov
dec
mov
xor
lea
sub
out
push
fs
fisub
jmp
push
js
add
push
pop
sbb
leave
(bad)
jo
sub
les
push
lahf
and
std
test
fdiv
ret
sbb
imul
repnz
mov
cdq
call
mov
xchg
mov
sub
pop
and
cvtps2pd
jns
push
test
sub
int3
inc
mov
mov
ja
mov
ins
add
mov
adc
fnstsw
mov
out
cmps
repnz
gs
and
mov
mul
mov
lea
add
mov
add
cmp
jmp
in
std
xlat
xchg
push
ret
or
sub
fisub
sti
xchg
iret
or
lods
dec
and
jge
dec
loopne
enter
mov
sub
enter
jae
xor
jmp
push
leave
mov
test
pop
jmp
fwait
stc
mov
hlt
or
add
or
and
das
inc
enter
xchg
pop
jne
sbb
dec
mov
fld
in
js
hlt
fsub
or
les
jno
cmps
dec
pop
cmp
sbb
xor
aad
int
std
loop
je
rol
xchg
jno
out
inc
outs
or
mov
retf
or
aam
addr16
jns
ins
leave
sbb
ja
sbb
scas
aaa
ret
jns
adc
xchg
or
(bad)
jns
jle
push
xor
jle
cmp
cmp
aad
int
sub
cdq
stos
pop
aad
push
out
jnp
push
jle
cmp
adc
inc
fwait
call
xchg
ror
pop
dec
fisttp
push
loopne
(bad)
dec
and
add
jae
and
fsub
push
cmc
push
daa
ds
mov
sahf
jbe
les
pop
jmp
inc
mov
les
dec
jg
and
mov
sub
into
jecxz
enter
inc
call
fimul
jl
ror
dec
or
imul
loop
(bad)
outs
add
adc
dec
or
push
out
push
fistp
icebp
fsubr
loope
inc
cmp
(bad)
call
in
es
into
push
movs
inc
lahf
cmp
(bad)
cmps
xchg
jmp
sub
adc
xchg
leave
test
mov
repnz
outs
lds
cdq
mov
and
push
add
mov
mov
add
jp
push
xchg
inc
repnz
movs
leave
add
ins
mov
push
out
hlt
xor
mov
dec
in
sub
ficom
pop
push
dec
hlt
push
lahf
cmps
ss
xchg
dec
jl
test
mov
cwde
push
jnp
add
sahf
push
inc
js
icebp
push
mov
xchg
mov
aaa
pop
pop
add
cmp
inc
jne
jecxz
hlt
inc
je
dec
test
pop
xchg
stos
and
dec
(bad)
dec
xor
pop
ins
scas
cmps
inc
jecxz
iret
jo
int
lea
jo
ret
jnp
pop
loopne
jg
stc
out
jg
stc
out
sbb
cld
psrlq
push
push
outs
test
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
fwait
cmp
cmp
popa
cwde
mov
jmp
mov
xor
xor
call
(bad)
std
push
out
sahf
(bad)
lock
(bad)
rol
or
ja
ret
push
inc
lods
out
jo
and
mov
add
push
jno
test
repnz
dec
jmp
xchg
in
sbb
and
and
test
(bad)
xchg
in
inc
fs
adc
fbld
pushf
aam
xlat
push
js
arpl
repz
test
push
add
lea
xor
pop
push
enter
mov
cdq
cli
aas
mov
mov
jbe
mov
and
les
test
movs
addr16
fs
dec
out
inc
icebp
jmp
out
fisubr
adc
ret
int
scas
sti
imul
inc
mov
cmc
jbe
mov
test
popa
mov
mov
fdiv
iret
xchg
add
inc
ss
or
in
mov
xor
inc
and
fist
test
mov
stos
mov
mov
clc
js
rcl
push
das
mov
mov
mov
jnp
dec
shl
or
cmp
push
jo
xor
int3
frstor
mov
icebp
stc
lods
inc
jo
cmps
repz
sub
mov
dec
add
push
add
popf
ror
sar
mov
inc
mov
cdq
push
daa
xchg
pusha
out
jae
mov
push
sbb
mov
cs
xchg
(bad)
clc
inc
and
ret
rcl
hlt
out
pop
pop
pop
dec
iret
add
xor
(bad)
jnp
outs
fisubr
inc
fmul
ret
scas
outs
outs
push
ja
push
mov
stc
popf
adc
adc
clc
fucomp
push
scas
push
adc
cmc
xchg
sar
mov
jl
pushf
ret
sbb
lock
inc
push
pop
xor
pop
mov
mov
rol
js
mov
pop
or
(bad)
and
es
mov
cmp
(bad)
cld
fsub
pop
dec
clc
in
dec
in
xchg
cdq
xlat
sbb
loop
push
and
inc
mov
ror
pop
push
imul
shr
je
sar
lods
sbb
add
cmp
pop
loop
inc
aam
cs
pop
pop
jmp
iret
push
mov
jnp
(bad)
xchg
jge
stc
jnp
sub
loop
add
hlt
fldpi
mov
iret
shl
addr16
in
mov
sub
mov
and
pushf
or
and
aas
stos
out
repz
pop
cmc
xor
out
xchg
clc
jg
xchg
xchg
into
jno
adc
imul
mov
pop
pop
push
call
mov
jb
nop
rcpps
mov
ds
mov
xchg
jae
mov
lds
mov
xchg
sar
cwde
scas
mov
in
sub
and
mov
(bad)
xor
enter
imul
ins
dec
push
add
cmp
jb
adc
cmc
mov
sub
add
jecxz
jmp
ja
mov
cmp
pop
or
aam
pop
pushf
or
fisubr
icebp
jbe
aam
xor
mov
scas
rcl
mov
pop
in
mov
pop
cwde
dec
xor
xchg
jecxz
inc
sahf
sbb
iret
pop
das
ds
pop
shl
and
mul
and
test
in
dec
jp
adc
inc
cwde
test
push
sub
cmp
iret
jno
mov
dec
and
mov
mov
ror
push
lods
xchg
sbb
mov
retf
mov
push
pop
jg
sub
(bad)
data16
sub
mov
and
inc
cmp
xchg
jno
clc
mov
sub
call
pusha
jmp
pop
addr16
mov
sbb
and
jmp
add
test
sbb
pop
out
or
xchg
in
int3
adc
icebp
in
xchg
mov
cli
retf
mov
fs
sub
scas
mov
mov
cmp
add
js
add
push
add
aas
dec
xchg
shl
or
aaa
movs
sub
ret
mov
stc
mov
mov
into
div
dec
or
movs
jno
xchg
sbb
test
sbb
fisttp
aas
into
or
ins
add
js
inc
mov
mov
mov
(bad)
or
outs
sub
cmp
push
inc
jmp
jle
mov
mov
push
xor
loopne
fnstcw
add
xor
lea
push
icebp
mov
or
fidiv
push
or
sbb
add
lahf
sub
sub
mov
retf
out
mov
push
jno
push
pop
fwait
test
and
push
and
adc
or
push
jb
mov
mov
lock
retf
xchg
or
pop
cmp
xchg
test
rcr
fstp
xor
int
xchg
aas
pop
and
jle
out
push
cmp
xor
push
sub
sub
sbb
dec
add
mov
repz
mov
shl
xchg
push
jb
repz
inc
nop
nop
cs
inc
pop
in
push
mov
(bad)
mov
sub
jae
or
inc
push
aam
push
(bad)
or
xor
sbb
dec
in
push
aas
mov
cmp
mov
jg
sub
and
fisub
scas
ret
(bad)
fidiv
dec
fs
xor
out
je
jmp
jmp
retf
xlat
cmp
les
repz
mov
lock
jbe
mov
mov
in
call
mov
je
lahf
in
cmp
retf
jp
aad
fnstenv
out
pushf
jp
adc
xchg
mov
inc
loop
add
in
push
ss
test
ins
lods
(bad)
call
ss
xchg
into
cmp
jmp
mov
inc
ret
test
pusha
pop
(bad)
into
rcr
cli
xor
or
fisubr
les
scas
jne
sbb
aam
jae
rcl
push
adc
xor
xor
mov
sahf
jns
enter
mov
fst
pop
xchg
sbb
lods
fisub
dec
rcl
push
ror
mov
movs
(bad)
dec
ins
cli
cmc
mov
lock
adc
cli
addr16
xchg
imul
pop
dec
loop
aad
pop
push
shr
sub
lods
shr
and
repz
inc
inc
push
pop
test
shr
cmps
shr
movs
inc
jnp
(bad)
loope
fisttp
sahf
lds
aas
lods
cmp
add
jae
aam
xchg
scas
icebp
xchg
push
retf
test
bound
inc
xchg
mov
popa
das
jecxz
(bad)
or
neg
and
out
in
add
ret
idiv
(bad)
inc
cmc
sub
mov
mov
jnp
add
leave
stos
jo
add
xor
cmc
cmp
fist
pushf
retf
add
dec
imul
jb
pop
dec
lods
pop
(bad)
sub
push
jno
not
fisub
das
lea
pop
ja
int
adc
jbe
add
int
mov
mov
xor
gs
push
or
inc
aam
xor
lea
imul
in
scas
pushf
in
jno
rcr
ficomp
test
fld
jo
scas
call
or
cmps
shl
in
pop
sub
lock
loope
(bad)
push
fisubr
sub
xchg
lods
std
hlt
ds
cmc
and
sub
fcom
push
sub
mov
js
inc
test
hlt
(bad)
push
jmp
xor
sbb
fiadd
dec
mov
xchg
test
mov
dec
and
loope
shr
jne
inc
xor
adc
mov
fwait
mov
sbb
jmp
jecxz
nop
inc
xor
mov
je
sbb
jne
mov
jnp
mov
clc
sub
mov
jmp
mov
mov
aaa
rcr
test
mov
adc
sti
imul
stc
aad
inc
call
dec
mov
and
and
shl
and
add
gs
fs
mov
icebp
outs
cmp
pop
int3
retf
neg
jle
pop
sbb
pop
data16
es
pop
or
loope
jl
push
mov
mov
adc
adc
inc
sbb
fsub
in
sbb
aam
xor
mov
loopne
push
adc
cmp
jmp
xor
or
xchg
ret
dec
pop
aad
lods
inc
and
inc
and
movs
add
sbb
ss
sub
(bad)
mov
pop
loope
in
sbb
lahf
sub
mov
call
adc
inc
gs
cld
dec
fisub
xchg
test
sbb
jb
mov
cmps
jno
hlt
ret
inc
push
dec
add
dec
cli
fidivr
int
mov
and
cmp
and
xchg
test
xor
cmp
push
or
icebp
mov
xchg
xor
push
out
mov
or
xchg
ins
les
fist
inc
sub
popf
ss
pop
mov
and
mov
push
and
mov
sar
jl
pushf
(bad)
retf
popa
mov
pop
push
sub
ret
sbb
icebp
sub
stc
ficomp
add
fist
jnp
(bad)
cs
or
inc
pop
out
and
xor
jl
sbb
jbe
adc
mov
sbb
arpl
rsm
xchg
jb
push
inc
add
fucom
ss
mov
add
adc
add
fbld
leave
ret
dec
mov
(bad)
xchg
call
movs
call
cmp
fidivr
pop
pop
call
jle
pushf
mov
cld
and
xor
adc
dec
adc
call
adc
xchg
mov
xlat
cs
cmp
jmp
int
sbb
add
jne
fst
pop
mov
leave
pop
adc
add
dec
inc
lock
push
sbb
mov
clc
xchg
xchg
sub
push
jge
sub
jmp
aas
jl
stc
push
push
clc
inc
dec
retf
imul
mov
lods
cmc
test
les
xchg
pop
jns
inc
and
stos
sub
adc
dec
ret
push
sbb
add
rcl
dec
push
cli
addr16
cmc
pop
xchg
scas
test
jno
push
jl
lea
int
push
xor
jns
and
fisttp
or
ds
adc
mov
mov
mov
mov
mov
clc
lods
sbb
pop
mov
sar
cmp
mov
jmp
xchg
or
and
cmps
cmp
test
xor
ds
or
mov
outs
es
pop
in
lods
out
inc
pop
ja
inc
add
sub
(bad)
mov
(bad)
int
mov
and
(bad)
sbb
arpl
xor
xchg
inc
mov
call
pushf
xchg
jge
push
arpl
hlt
sbb
inc
sbb
nop
setno
and
lods
or
cmp
ret
adc
pop
test
stc
push
pop
sbb
arpl
fadd
pop
leave
in
outs
addr16
adc
inc
cmps
imul
sub
and
add
inc
or
xchg
xchg
dec
popf
retf
aaa
lods
mov
pop
sbb
pusha
ret
(bad)
push
sub
jns
fidiv
pop
dec
push
push
rol
mov
repz
inc
imul
jl
jno
mov
into
xchg
pop
xchg
into
jo
sti
lods
mov
cwde
push
mov
loope
test
xor
(bad)
(bad)
mov
cs
cwde
iret
push
xor
les
sub
xor
jae
push
jmp
div
cmp
iret
mov
dec
mov
mov
(bad)
jmp
or
jae
lds
sub
add
rol
mov
add
mov
pop
push
xor
outs
fadd
cld
and
xlat
push
fmul
and
idiv
push
push
cmp
adc
in
mov
pop
test
sbb
rcr
add
jnp
mov
(bad)
xlat
mov
cwde
push
mov
(bad)
int
cmp
jecxz
or
fsub
xchg
mov
movs
std
cmp
fwait
sbb
call
inc
jecxz
popa
push
xor
or
ret
pop
push
or
rol
mov
scas
cwde
push
xchg
repz
jo
fisub
ret
or
sti
mov
sub
push
icebp
ficom
dec
xor
add
es
retf
and
xor
leave
dec
in
push
sub
adc
call
not
xchg
cli
fistp
xchg
aaa
addr16
dec
xor
fwait
pop
push
jmp
add
movs
cmp
cmp
out
rol
jmp
mov
mov
inc
ror
and
mov
div
xlat
clc
test
aad
adc
fwait
loop
push
sbb
mov
pushf
cdq
cmp
inc
(bad)
(bad)
jmp
mov
add
jno
adc
cld
jl
outs
in
jmp
inc
pop
(bad)
in
ffreep
call
(bad)
lock
and
push
push
mov
jle
fwait
xchg
mov
out
imul
pop
pop
xlat
das
push
mov
repnz
nop
imul
fcom
or
aaa
or
mov
xchg
xchg
retf
bound
mov
inc
mov
cmps
mov
adc
mov
fdivr
neg
jle
pop
repz
and
mov
add
jnp
pop
or
mov
inc
add
inc
push
jo
pop
and
or
lock
add
popf
push
neg
js
jg
(bad)
fst
push
into
adc
push
pop
mov
sbb
mov
dec
fcom
call
dec
mov
aaa
adc
fcomp
bound
stos
push
sub
jmp
retf
mov
push
outs
rcl
out
je
scas
imul
mov
sbb
rcr
mov
cmp
rcr
sub
inc
add
mov
lea
ss
daa
test
push
mov
jbe
stos
dec
aas
ror
mov
adc
and
jmp
nop
adc
repnz
mov
mov
ss
movs
movs
outs
inc
les
mul
outs
mov
enter
cmp
mov
jmp
test
pop
mov
inc
cmps
jbe
das
and
(bad)
cdq
das
ror
shl
cmp
jo
rol
push
shl
push
mov
xor
call
leave
adc
push
add
sbb
xor
in
xchg
fstp
pop
mov
jne
inc
xchg
lea
test
in
aas
out
jne
mov
jmp
mov
rcr
sub
jmp
mov
idiv
fldenv
(bad)
into
inc
mov
lea
adc
mov
xlat
cmps
push
mov
push
dec
aas
call
mov
dec
rcr
ins
jnp
add
pop
xor
add
pop
add
add
aas
add
js
inc
sbb
pop
es
mov
mov
adc
xor
xchg
mov
sub
add
adc
dec
xor
repz
lahf
mov
imul
iret
jnp
inc
pop
into
int
retf
inc
xchg
adc
fdivr
leave
sub
add
push
pop
ss
ret
cmp
cmp
mov
fadd
loop
call
xchg
adc
(bad)
int
jne
std
scas
sbb
push
fiadd
sub
mov
jp
add
clc
out
jg
stc
out
jg
stc
jg
add
pop
dec
cmps
fld
test
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
scas
inc
mov
test
cdq
mov
cmp
popf
jge
jno
gs
(bad)
fstp
nop
mov
and
out
cmp
faddp
pop
add
cmps
mov
loop
mov
das
inc
test
mov
(bad)
jns
mov
push
xor
lods
pop
sbb
(bad)
fdivr
dec
sub
push
popa
fs
mov
xor
inc
inc
pop
aad
pusha
es
in
cmp
(bad)
fcomp
cli
cmp
sub
mov
inc
mov
fild
stc
(bad)
jg
loop
cmp
(bad)
rol
add
xor
retf
xchg
jmp
or
mov
mov
mov
imul
fsubr
mov
xchg
jp
iret
ins
bound
xchg
sbb
pop
mov
push
cmps
daa
je
or
xchg
aam
je
test
mov
push
test
cmp
mov
mov
dec
test
loope
xchg
mov
adc
icebp
pusha
and
ret
out
push
loopne
pop
mov
popa
sbb
adc
jne
mov
add
cdq
mov
fild
aaa
repnz
cmps
aam
loopne
push
jo
std
xchg
pop
jge
and
xor
mov
movs
lods
loope
out
aam
aad
(bad)
xchg
shr
lahf
ins
fs
fisubr
push
sbb
cld
icebp
jbe
sti
add
add
aam
push
pop
or
inc
mov
outs
jp
js
sbb
adc
inc
pop
call
add
cwde
movs
repnz
jb
jp
loope
and
in
sub
stc
ss
mov
pushf
not
and
jo
jmp
mov
push
repnz
mov
js
cmps
js
push
not
(bad)
xchg
call
fist
push
adc
mov
mov
in
in
jecxz
mov
cli
bound
inc
mov
sub
push
adc
ror
push
mov
jecxz
lods
inc
sbb
fcomp
clc
popf
mov
fstp
pcmpgtb
call
mov
xchg
test
cmc
dec
out
jae
or
xchg
ss
popf
dec
test
sub
das
cli
dec
je
dec
in
pop
xchg
xchg
pop
dec
cmps
pusha
cmp
mov
xchg
das
in
mov
xchg
dec
cmp
mov
push
jecxz
nop
ja
pop
mul
(bad)
xchg
and
or
jnp
mov
inc
shl
xchg
movs
repnz
hlt
mov
mov
jns
daa
jb
aad
pop
fisub
ss
daa
push
leave
or
cs
pop
ret
jns
adc
or
es
cmovl
shr
(bad)
fbld
jmp
xlat
pop
xor
adc
adc
inc
out
enter
and
call
repz
xlat
or
dec
mov
mov
xchg
out
(bad)
data16
es
call
mov
or
cdq
push
test
dec
xchg
inc
jp
sub
ins
shr
sahf
paddd
daa
gs
nop
jb
add
mov
adc
je
mov
pop
sub
xor
(bad)
dec
mov
call
jns
(bad)
xchg
mov
sub
mov
mov
xchg
(bad)
stos
or
sub
add
push
clc
adc
test
retf
std
or
jo
iret
fucomip
movs
out
push
or
ja
push
jl
cmp
daa
neg
xchg
test
fisttp
aad
js
jns
and
fwait
and
jmp
jmp
fsubr
lds
mov
pusha
aam
ret
arpl
aaa
xor
mov
sub
adc
pop
inc
push
sbb
push
pusha
pop
in
imul
mov
lea
int3
mov
(bad)
mov
repnz
xchg
cdq
repnz
xchg
adc
or
mov
push
push
ins
sbb
cdq
retf
pop
ja
in
fild
pop
aad
(bad)
and
sahf
inc
fwait
sti
jo
pop
mov
and
pop
hlt
hlt
push
fwait
sbb
call
mov
mov
push
adc
stos
cmps
mov
and
ror
jmp
pushf
mov
or
pop
ins
test
stos
nop
xchg
xor
daa
or
pushf
inc
jmp
xchg
addr16
xor
push
test
paddw
cdq
ror
sub
xor
inc
fadd
sti
outs
jo
jmp
xlat
inc
retf
out
add
mov
lea
or
test
sahf
sub
pop
leave
bound
in
mov
xchg
pop
stc
mov
shl
xor
xlat
test
pushf
fwait
std
je
cmp
xchg
inc
or
inc
mov
cs
mov
out
mov
and
dec
push
pop
dec
mov
xor
imul
int
in
fst
(bad)
out
std
fistp
sub
jle
sub
mov
and
pop
std
pushf
add
xchg
ins
(bad)
and
in
call
mov
not
mov
or
dec
nop
sub
inc
ret
push
add
sahf
jmp
and
sub
mov
imul
ficom
cmp
test
leave
ins
cdq
es
dec
add
mov
(bad)
fist
pushf
jae
rcr
mov
jne
push
cmps
je
pop
repnz
cdq
sti
pop
test
lahf
mov
inc
in
fs
fnsave
inc
push
ror
outs
jmp
jmp
enter
or
mov
lods
popf
xchg
mov
xchg
out
out
xor
fsub
pop
and
aam
mov
or
adc
xchg
jl
aas
jge
bound
pop
mov
stos
fs
adc
sub
mov
stos
pop
sbb
lahf
pop
dec
xchg
and
fldcw
xchg
dec
pop
pushf
or
jge
jne
jo
inc
lock
js
mov
loope
aam
jno
sbb
xchg
push
adc
stos
and
mov
pop
mov
xor
jb
iret
dec
mov
loopne
push
cmc
sbb
mov
lea
loopne
mov
mov
pop
jg
cmp
jns
out
inc
sub
aam
adc
cmps
dec
push
jne
mov
mov
aaa
out
les
shr
leave
jge
js
mul
cld
push
sub
scas
xlat
jge
cmp
rcl
jns
std
xor
mov
stc
and
scas
mov
xchg
test
aas
loope
stos
push
test
add
pop
push
jno
inc
in
push
(bad)
xor
fist
jge
xor
sbb
ja
sar
sub
rol
jbe
(bad)
ins
int3
cmp
repz
stc
mov
out
int
scas
repnz
ret
push
inc
push
xchg
cmc
aas
cdq
and
outs
jb
in
adc
mov
xchg
xchg
les
push
fimul
aaa
test
xchg
jae
fwait
jge
call
mov
pop
mov
arpl
jae
scas
push
and
shl
out
out
adc
jmp
jb
ror
in
adc
cld
inc
test
gs
mov
scas
aad
inc
das
mov
jne
xchg
mov
xor
lods
inc
push
jg
sbb
data16
shl
cmp
and
cmp
call
mov
inc
mov
mov
fistp
rcr
data16
cmps
xchg
adc
push
in
pop
xlat
lock
sahf
outs
lods
sub
hlt
and
and
add
out
pop
mov
mov
js
and
mov
(bad)
into
xor
dec
leave
adc
imul
cmc
mov
push
rol
int
mov
movs
jp
push
or
cmp
jmp
fdivr
fmul
cmp
jge
out
pop
pop
xchg
test
fwait
aam
push
daa
mov
dec
cwde
dec
out
in
mov
pop
push
fcom
adc
or
retf
or
addr16
jecxz
mov
jg
cmp
js
sbb
pushf
jmp
adc
les
imul
mov
scas
das
in
movs
add
adc
das
jo
out
pop
retf
cmp
popa
mov
not
mov
ins
adc
or
xchg
test
cli
cmp
mov
jno
cld
push
jno
jnp
cmps
neg
push
lds
push
aaa
push
inc
mov
jo
sbb
repnz
ret
mov
int3
(bad)
add
cmp
dec
jno
sub
or
pop
(bad)
cmc
adc
loope
xchg
mov
dec
ins
cs
mov
dec
mov
mov
jge
inc
sub
cli
jo
xor
pop
sahf
sbb
sahf
imul
clc
jmp
jae
int
mov
rcr
inc
js
in
dec
xchg
daa
std
jno
jns
adc
cmc
repnz
pcmpgtb
movs
or
repnz
push
push
lods
mov
cmps
iret
pop
mov
cmp
jge
ja
sbb
inc
int
mov
jno
adc
or
into
mov
mov
test
add
daa
movs
push
aas
pusha
xor
or
add
div
js
pop
das
push
xchg
ins
cmp
and
cmp
ss
fsub
imul
cs
cmc
movs
retf
cmp
cmp
inc
clc
fs
mov
pop
lods
or
out
mov
ficomp
sub
pop
push
test
push
clc
jbe
fmul
jae
xchg
sbb
std
sbb
xchg
push
xchg
push
jnp
fld
in
es
jns
jno
aad
dec
push
add
inc
dec
pop
lock
cmc
and
cs
ds
loop
sub
ja
ja
adc
loop
mov
pop
or
dec
push
mov
scas
and
mov
pop
aas
xor
ffree
cmp
jnp
jbe
call
shl
in
jne
sbb
cmp
ins
movs
or
push
aas
imul
jae
jl
jo
out
add
leave
(bad)
jg
(bad)
cmp
cdq
mov
lds
std
xchg
frstor
pushf
cdq
lock
xchg
add
test
sbb
and
cdq
(bad)
out
iret
pop
pop
lods
mov
shr
xchg
icebp
lods
shl
sbb
fst
mov
stos
imul
(bad)
das
aaa
inc
mov
lahf
xchg
mov
mov
mov
jbe
dec
repnz
outs
aam
stos
test
in
shl
lods
jp
out
add
sti
test
fcom
pop
adc
gs
mov
adc
ins
dec
xchg
cmp
(bad)
jmp
sbb
mov
retf
mov
cdq
ret
dec
gs
mov
inc
pushf
cdq
pop
sub
inc
mov
or
gs
stos
retf
sbb
xor
aam
pop
ret
aam
pop
(bad)
out
movs
jbe
or
push
jo
cmp
nop
(bad)
test
das
or
jp
retf
or
inc
fs
inc
daa
inc
jle
dec
jbe
xchg
in
xchg
dec
(bad)
sbb
(bad)
shl
xchg
stos
mov
mov
xchg
leave
push
xchg
js
push
inc
cmp
repz
sbb
pushf
add
pop
fdiv
fsub
jae
sub
hlt
ds
fcmovu
ja
mov
clc
cmp
lods
mov
mov
dec
ins
push
adc
fldpi
sbb
(bad)
out
(bad)
or
mov
xchg
cmp
popa
mov
mov
xor
rcl
icebp
in
cmps
sahf
sub
adc
and
(bad)
gs
test
mov
dec
dec
jbe
cmps
loop
repz
pusha
in
adc
jmp
sar
xor
or
push
jge
push
push
and
mov
push
(bad)
jg
aad
jns
(bad)
mov
dec
xor
jmp
fimul
icebp
loope
shr
fcomp
gs
mov
fsub
push
mov
sub
mov
pop
sahf
fadd
lods
repz
sub
dec
mov
jno
and
cmps
outs
mov
sbb
sub
out
sar
push
out
je
(bad)
dec
xchg
sbb
mov
dec
jle
xor
pop
imul
in
sar
jp
sbb
cmp
add
sub
or
mov
or
xchg
mov
mov
jle
push
push
rcr
inc
in
in
ret
mov
and
push
inc
hlt
popa
hlt
xor
mov
adc
dec
(bad)
loope
popf
(bad)
fisttp
aas
std
stos
xchg
inc
ror
hlt
leave
push
js
cmp
lods
xlat
dec
jle
cmps
loop
aaa
(bad)
sbb
out
fcomp
shl
loopne
xchg
test
sbb
(bad)
dec
cmp
pop
rcl
adc
inc
push
cmps
sub
mov
out
movs
aam
push
add
sbb
int
ss
fidivr
cmp
mov
mov
mov
mov
not
retf
out
dec
scas
loop
jae
ret
or
leave
inc
cmp
mov
cmp
std
cmps
mov
add
popf
sub
(bad)
sahf
push
pop
aad
jp
addr16
scas
jmp
dec
xor
bound
stos
jmp
jecxz
iret
xor
sahf
or
into
sahf
out
pop
sub
inc
mov
jmp
cld
rol
mov
mov
xor
pop
inc
push
xchg
pop
cmp
(bad)
in
jae
out
jp
and
inc
mov
push
sbb
(bad)
call
outs
add
repnz
jmp
jl
cmp
pop
sub
(bad)
mov
sub
ret
data16
bound
imul
push
mov
out
fst
mov
xchg
mov
jnp
into
xchg
iret
outs
or
cmp
inc
movups
xchg
imul
dec
loopne
loope
enter
fist
outs
in
aas
fistp
cmc
loope
popa
or
sti
daa
ins
out
xor
lea
xchg
xchg
movs
pop
repz
cdq
jo
ins
sub
pop
mov
(bad)
imul
icebp
dec
out
das
imul
fldcw
push
pop
int3
inc
stos
fbld
out
dec
sub
test
mov
pusha
movs
push
mov
adc
in
imul
fist
cmp
fidiv
xchg
pop
pop
aam
pop
adc
jl
icebp
mov
jge
pop
dec
neg
cli
dec
clc
mov
les
pop
lea
ficomp
push
imul
jae
pop
aam
push
push
loope
or
cli
inc
jle
xlat
push
add
inc
adc
(bad)
call
out
test
mov
push
or
das
dec
(bad)
adc
push
iret
and
jae
icebp
jb
(bad)
idiv
imul
mov
sub
int
nop
or
mov
mov
in
sbb
movs
and
mov
cmp
or
(bad)
fcmovnbe
in
xchg
inc
jns
xchg
into
fsubr
jge
inc
xchg
dec
add
mov
and
ja
xlat
fsub
xor
pop
mov
rcr
jecxz
je
ss
and
push
pop
mov
mov
push
fs
xchg
dec
in
xchg
xor
retf
jnp
and
jbe
mov
add
xor
cmp
ds
mov
push
and
cld
mov
(bad)
aam
int3
cld
(bad)
push
sti
ins
adc
mov
jmp
and
mul
jl
not
data16
sub
push
fcmovne
push
fbstp
jecxz
mov
sahf
cmp
(bad)
jle
xchg
pop
outs
xlat
int3
or
push
pop
xor
mov
ss
xlat
mov
out
sbb
fidivr
fsubp
mov
pop
test
je
ret
dec
push
fdivr
shl
push
push
das
jle
shl
(bad)
call
sbb
dec
enter
pop
loopne
xchg
hlt
mov
xor
jbe
push
or
push
inc
stos
pop
mov
hlt
and
jge
int3
dec
inc
sub
mov
xor
je
mov
test
jns
(bad)
xor
jbe
sbb
adc
jle
retf
(bad)
fbstp
mov
fadd
icebp
cmp
stc
out
jg
stc
out
call
add
jg
ins
ficomp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
(bad)
add
add
jecxz
cmps
fwait
loope
jae
fwait
mov
ja
ja
dec
out
bound
cmps
in
xor
int
fmul
(bad)
std
push
out
sahf
dec
icebp
add
and
fs
xor
ss
push
fs
push
fstp
push
cmp
popf
mov
or
inc
(bad)
imul
sar
mov
enter
pop
outs
xor
(bad)
scas
sbb
lods
jne
mov
and
ss
sbb
ins
shl
mov
lar
dec
jecxz
push
mov
int
cmps
lea
jp
and
pop
mov
imul
in
inc
cmp
and
dec
mov
and
lea
add
mov
push
je
or
add
out
jae
ds
dec
lods
(bad)
fisub
mov
gs
js
int3
outs
cmp
jnp
mov
dec
mov
inc
sub
loop
jb
ds
jno
in
out
movs
fldcw
(bad)
push
xchg
inc
paddb
lock
cmp
popf
clc
xchg
and
mov
(bad)
out
push
fldenv
mov
mov
call
mov
jno
push
push
repz
mov
scas
sub
xchg
mov
imul
add
test
cmc
mov
dec
rcl
arpl
and
jmp
jb
inc
icebp
loope
test
push
gs
mov
icebp
movs
cmp
jnp
adc
mov
push
das
xor
push
js
sub
dec
idiv
dec
outs
(bad)
jl
es
adc
jmp
inc
jno
adc
pop
dec
push
aaa
and
add
scas
sbb
xchg
cmps
mov
outs
jg
xor
mov
add
jle
sbb
and
xchg
(bad)
mov
xchg
adc
cmc
pop
sbb
in
fisubr
xchg
sbb
or
and
movs
cmps
inc
ds
push
mov
jp
inc
xlat
rcr
push
in
xchg
stos
mov
cs
jmp
or
mov
xchg
cmp
les
push
ret
mov
push
push
les
add
ja
ret
sub
or
mov
aam
scas
scas
movs
jle
cmp
push
pop
fs
add
not
sbb
cmp
push
xchg
cwd
in
sahf
dec
sbb
sub
xor
sbb
cmp
enter
or
xor
call
pop
outs
dec
adc
lods
out
aam
outs
cmp
cwde
cli
adc
cld
arpl
push
dec
cmp
out
aam
(bad)
push
jl
mov
inc
lods
in
test
push
(bad)
enter
cwde
sbb
jns
addr16
ret
int3
ja
iret
sub
in
int
jmp
add
push
stos
cmp
mov
inc
mov
sub
arpl
hlt
or
retf
sub
dec
push
addr16
outs
mov
clc
(bad)
aaa
test
mov
jno
add
add
pop
jae
mov
ret
sub
jl
fcmovbe
(bad)
adc
mov
enter
pop
arpl
dec
lahf
cmp
ret
dec
(bad)
dec
xor
sar
aaa
xchg
out
pop
xor
shl
dec
mov
lods
in
xchg
call
dec
push
scas
inc
(bad)
mov
lahf
scas
inc
repnz
in
inc
sti
(bad)
lock
out
cmc
mov
xchg
cmp
mov
push
mov
and
jg
sbb
test
xchg
push
das
mov
and
inc
xchg
jns
push
imul
addr16
test
add
int
adc
jp
push
repnz
inc
mov
js
jmp
mov
into
dec
cli
xchg
mov
loopne
push
test
and
out
jmp
sub
jo
push
jnp
mov
inc
mov
fild
and
cmps
pop
sbb
lods
leave
cmp
mov
(bad)
(bad)
jmp
(bad)
loope
mov
push
arpl
or
inc
mov
cmp
pop
pusha
and
dec
(bad)
fdivr
jb
jg
sbb
pusha
ss
inc
jne
push
or
pop
test
xor
(bad)
mov
loopne
jmp
imul
or
adc
push
cmc
sar
add
(bad)
mov
cwde
sub
mov
les
es
jle
ss
mov
xor
and
pop
push
fisubr
ss
add
clc
ins
cs
out
mov
lock
(bad)
or
jns
lds
push
cdq
or
and
mov
jge
pop
pop
data16
xor
scas
push
ficom
mov
lock
jg
cdq
nop
sub
inc
xor
int3
sub
add
push
and
mov
cmp
mov
sbb
fs
xchg
ror
(bad)
push
cmp
push
sar
mov
mov
sub
lea
xchg
pop
sahf
sbb
xor
pop
call
and
into
lock
arpl
xor
lods
out
cmp
addr16
push
adc
push
and
adc
sub
stos
xchg
cmp
sub
cmc
mov
cmc
les
pusha
aam
jp
fwait
loope
mov
push
call
ja
pop
out
cmp
or
jns
xchg
and
and
call
pushf
pop
setb
in
jbe
out
stos
push
fnstcw
or
fwait
or
or
xchg
mov
fucomi
inc
(bad)
mov
psraw
dec
fild
sahf
fcmovnu
mov
ja
sti
xor
retf
xchg
xor
and
scas
fsubr
jmp
test
xchg
in
aam
sbb
mov
enter
jle
movs
dec
into
or
leave
(bad)
arpl
cs
xchg
xchg
pop
xor
js
sub
cs
fidivr
not
jle
movs
xchg
outs
movs
sbb
fbld
popa
stc
push
pop
add
push
mov
scas
mov
fs
sub
cmp
leave
jle
mov
outs
pop
add
jno
in
into
mov
cld
xchg
sub
jmp
jmp
sahf
xchg
push
add
push
(bad)
mov
outs
pop
das
pop
fcmovb
dec
sub
lea
test
and
leave
mov
mov
push
sbb
xchg
and
xor
lds
push
rcl
sbb
mov
in
jle
jmp
sahf
cld
inc
fistp
xor
sub
jb
clc
mov
sub
arpl
repnz
mov
push
adc
push
outs
das
inc
mov
lea
add
mov
call
js
jne
mov
mov
enter
stos
mov
test
cdq
push
jno
mov
jnp
sub
push
cmc
loopne
and
or
(bad)
cld
mov
lods
fiadd
setae
xchg
fst
inc
std
inc
movs
or
mov
fisub
neg
shl
cmc
fisubr
(bad)
movs
pop
inc
push
jne
mov
mov
in
stos
sti
inc
test
inc
push
das
mov
ins
mov
mov
shl
clc
mov
int
movs
lds
cmp
inc
ss
mov
cmc
mov
or
jno
aaa
pop
std
xchg
xchg
popf
scas
std
jecxz
push
xor
and
stc
int3
lods
jecxz
cmp
shl
sub
mov
cs
data16
sbb
jno
es
push
repz
and
sets
into
repnz
mov
scas
fmul
pusha
fdivr
jg
in
mov
inc
fsub
test
jbe
iret
pop
sub
rcl
lock
loop
mov
add
ss
xor
pop
test
test
stos
(bad)
mov
push
cmp
div
jp
loope
scas
pop
mov
sub
jp
adc
inc
lahf
leave
pop
lods
add
popa
add
sahf
gs
xchg
xchg
jle
sub
sbb
loop
add
dec
out
shr
jge
pop
mov
lock
sub
ss
call
sbb
in
mov
imul
dec
clc
rol
repnz
daa
int
pop
mov
mov
dec
xchg
shl
mov
cmp
cwde
fisttp
popf
ror
xchg
mov
sbb
js
mov
daa
sub
lds
int
pop
fild
dec
inc
inc
arpl
loopne
push
sbb
add
dec
pop
push
rol
xchg
jecxz
fwait
movs
shl
arpl
adc
jmp
cmps
and
mov
lock
repz
jmp
test
or
xlat
je
out
(bad)
pop
or
mov
in
rcr
pop
clc
push
cmp
mov
fdiv
xchg
int3
sbb
daa
xlat
int3
les
push
fst
mov
std
mov
ja
push
cli
aad
sbb
sbb
mov
adc
lahf
jbe
fistp
cmp
xor
mov
cdq
jbe
jmp
ins
mov
popa
push
mov
retf
pushf
xor
mov
cmps
in
outs
lahf
cmp
xchg
and
pop
aaa
mov
sahf
nop
inc
adc
gs
aas
loope
cmp
push
sahf
lock
sar
push
icebp
and
jle
xchg
fstp
into
sub
xlat
int
add
adc
push
cs
fdivr
fisub
das
fadd
inc
xor
pop
mov
fldcw
sub
fldcw
dec
mov
inc
pop
push
mov
cmc
outs
mov
aam
les
adc
ror
aaa
ret
push
and
shr
ss
xchg
inc
push
in
test
scas
cmp
es
les
jns
add
retf
push
add
fld
pop
inc
jmp
iret
lds
(bad)
arpl
shl
mov
add
mov
cmp
jns
loope
sub
sbb
cmp
out
aaa
xchg
xchg
bound
retf
adc
mov
cmp
sub
test
pop
jg
enter
scas
push
mov
fiadd
push
sbb
jo
pop
jge
add
arpl
push
inc
scas
mov
add
mov
js
mov
shl
dec
ret
es
ss
nop
xor
lds
sub
out
movs
aam
jb
jmp
jb
scas
jo
push
ss
std
iret
ins
sbb
loop
jb
outs
xor
sub
pop
pop
imul
sub
out
sbb
xor
jno
out
loopne
imul
hlt
add
div
push
dec
fwait
cmp
repnz
nop
xchg
jge
xlat
xor
pop
in
ror
dec
fmul
mov
bound
mov
fist
leave
sar
pusha
push
cmp
jle
sbb
sbb
test
push
test
push
outs
cmp
clc
cld
lods
outs
call
mov
xchg
mov
mov
cmp
in
or
cmc
movs
arpl
dec
outs
cs
xor
xor
ins
mov
and
jmp
xchg
neg
cmp
(bad)
pop
pop
ret
hlt
jnp
ss
ficom
jno
adc
jnp
lds
aad
test
fidivr
enter
test
fcmovu
dec
sahf
sbb
mov
int
inc
jmp
nop
inc
cwde
pop
hlt
cmc
leave
aaa
or
adc
sub
and
dec
pop
retf
fs
scas
and
fimul
mov
mov
mov
cwde
xchg
pushf
dec
lea
mov
and
imul
adc
push
jle
repz
mov
xchg
mov
popf
dec
push
call
movs
movs
xor
out
mov
jb
fisub
inc
add
jns
jle
call
test
jmp
nop
sbb
mov
pop
popa
and
idiv
rol
test
(bad)
leave
sub
(bad)
ja
daa
push
shr
push
push
sub
mov
mov
push
aam
fs
test
sub
push
mov
push
rcr
test
popa
mov
adc
test
ret
cs
call
aad
jge
ja
and
adc
(bad)
xchg
mov
stc
mov
pop
mov
in
(bad)
lahf
xor
and
sbb
xor
cmp
push
add
pop
fist
mov
dec
pusha
(bad)
rcl
xor
jno
fmul
mov
dec
test
out
imul
cwde
mov
movs
mov
aad
(bad)
call
cdq
dec
jle
inc
fsub
loop
xlat
out
inc
jge
jbe
mov
cs
sbb
mov
mov
es
das
xor
sbb
stc
imul
jae
jae
push
test
ret
inc
sbb
mov
loope
bound
fst
cmps
push
repnz
adc
fmulp
xchg
sbb
(bad)
sti
adc
dec
sub
sub
es
pop
pop
jns
mov
scas
push
mov
sub
adc
xor
aam
fs
iret
in
jecxz
addr16
push
add
ja
mov
sub
mov
sbb
(bad)
xor
test
inc
dec
loopne
fsub
sub
jo
dec
inc
shl
ins
int3
inc
mov
leave
jmp
mov
leave
xor
(bad)
(bad)
imul
sbb
mov
or
cdq
mov
jnp
jge
enter
loop
popf
add
stos
ja
jb
cmp
jbe
push
or
in
cmp
adc
jns
inc
mov
(bad)
mov
call
push
sar
gs
repnz
aaa
mov
aad
sbb
in
push
ds
mov
add
fidivr
cmp
popa
inc
pop
dec
jg
push
push
repz
imul
mov
mov
lods
add
fcomp
cwde
push
ins
push
mov
mov
mov
(bad)
lds
repnz
aam
enter
aad
or
jno
sahf
xchg
movs
stos
xlat
adc
sbb
les
xlat
std
shl
and
fcom
cld
xchg
xlat
daa
shl
pop
xor
sbb
mov
jno
inc
gs
ins
imul
mov
mov
int3
ffree
push
aas
pop
xchg
hlt
cmps
ficom
test
xchg
sub
jge
cs
or
mov
sbb
inc
dec
cmp
adc
jl
pop
jae
lods
jecxz
mov
or
fstp
jp
fiadd
jae
nop
out
mov
loopne
je
call
es
and
jno
lods
mov
pop
mov
das
enter
push
push
pop
cmc
mov
push
inc
push
jbe
les
imul
js
mov
add
mov
sub
pop
or
mov
loop
inc
inc
inc
(bad)
xchg
push
(bad)
add
adc
dec
aas
cld
scas
sub
or
mov
pop
out
sbb
ror
or
(bad)
int
xchg
int3
pop
mov
inc
pop
xlat
(bad)
xchg
lods
popa
lods
outs
addr16
out
push
cmps
mov
inc
clc
test
gs
idiv
cmp
adc
or
imul
bound
cmp
sub
xor
xor
into
imul
int3
and
mov
cmc
cmp
out
or
fmul
fwait
out
ss
mov
mov
lds
test
push
ja
inc
ins
jnp
lods
and
pop
xor
jno
push
fsubr
sbb
lods
adc
out
test
std
jecxz
cmp
cmp
and
push
dec
xor
in
call
bound
mov
aad
retf
enter
call
push
test
cli
idiv
pop
jbe
ds
dec
sbb
sub
call
adc
test
arpl
pop
push
mov
hlt
sar
pop
imul
adc
cwde
rcl
imul
rol
sbb
movs
lock
xchg
stos
or
mov
inc
mov
dec
mov
jno
scas
ds
push
aaa
push
mov
aad
xchg
les
sub
scas
push
push
aad
and
movs
jmp
scas
shl
js
push
pop
xchg
cmp
out
jg
stc
out
jg
stc
jg
add
pop
test
loopne
shr
fld
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aad
and
ret
add
arpl
cwde
cwde
sahf
mov
out
out
popa
fimul
mov
mov
jno
dec
dec
ja
aam
cmp
push
jnp
jnp
les
add
dec
int
add
jl
push
mov
ror
cmc
xor
dec
(bad)
mov
xor
dec
aaa
jo
fs
xor
push
gs
in
jge
cmp
inc
sub
and
jle
adc
enter
add
jge
ss
sbb
dec
xchg
dec
lahf
mov
cmp
(bad)
call
dec
shr
or
bswap
xlat
adc
aas
shl
adc
les
inc
clc
cmp
cmp
arpl
cmp
push
pop
jg
ss
mov
inc
ficom
stos
mov
jge
(bad)
mov
ss
mov
mov
arpl
push
jnp
cmps
loop
in
jmp
mov
xor
rcr
lods
fsub
cmp
lock
mov
sub
xor
retf
je
inc
(bad)
cmps
pop
mov
jae
ins
sbb
lds
add
cmps
push
(bad)
es
or
lods
ss
shr
adc
jg
or
cmp
mov
mov
icebp
mov
mov
retf
jp
movs
jg
call
sbb
push
mov
dec
jo
lods
fsin
push
pop
push
imul
repz
in
imul
jbe
cmps
sbb
iret
and
and
add
ror
test
imul
ja
cmps
jns
sbb
dec
es
adc
(bad)
cmp
neg
pop
shl
fdivp
sub
aam
sbb
mov
pushf
xchg
(bad)
cld
push
cmps
xor
pop
lahf
loop
aaa
mov
popa
xor
pop
leave
ds
and
sbb
out
sbb
jmp
aaa
fsubr
push
scas
pop
mov
pop
jle
mov
call
fsubrp
dec
pop
jle
stc
mov
stc
adc
daa
jmp
leave
les
adc
jb
mov
fwait
inc
sub
jb
mov
push
sub
nop
stos
cmc
popa
adc
cmps
inc
pop
outs
or
xor
mov
cmp
mov
or
retf
jp
mov
and
pop
jecxz
pop
(bad)
inc
jge
xor
addr16
nop
scas
inc
std
adc
out
hlt
fisttp
loope
pushf
mov
(bad)
pop
jecxz
adc
ds
jmp
fst
adc
mov
sti
sbb
push
sub
jp
rcl
pop
paddw
xor
mov
sbb
dec
or
inc
fs
inc
pusha
xchg
gs
or
(bad)
pop
add
pop
jnp
mov
inc
aaa
int
mov
pop
repnz
sbb
mov
mov
arpl
and
test
stos
sub
jae
ds
mov
pop
jl
nop
sbb
jmp
push
cwde
aam
ja
dec
push
lds
js
dec
or
push
push
dec
jmp
daa
idiv
lods
sbb
mov
and
mov
sar
rol
cmp
fistp
add
out
cmp
cli
and
fdecstp
push
and
int3
dec
dec
arpl
loopne
cmp
xor
sar
outs
ret
ss
cwde
(bad)
pop
and
and
ds
imul
mov
(bad)
sub
adc
jno
in
and
fst
adc
es
lahf
inc
cmp
xor
cmc
out
ret
push
sub
jnp
mov
sub
data16
aas
pop
dec
sahf
mov
add
sub
(bad)
js
ret
xchg
pop
int3
retf
jnp
mov
cmp
xor
pop
aam
(bad)
xor
ja
mov
ret
dec
push
xor
jae
movs
sahf
xor
lods
push
movs
sbb
call
bound
sti
js
gs
xor
jne
sti
or
loop
cmps
or
xchg
xor
xor
cs
and
mov
dec
inc
xchg
pop
(bad)
and
push
and
cmp
mov
data16
clc
test
inc
std
dec
mov
jg
rol
jo
inc
jp
rsm
loopne
aaa
repnz
sahf
jmp
mov
aaa
arpl
sahf
push
mov
xchg
jmp
lods
mov
out
(bad)
xor
xchg
dec
fcomp
sbb
movs
iret
inc
cli
sbb
sbb
(bad)
(bad)
call
add
xchg
ss
call
addr16
sub
mov
sar
aaa
ror
or
sub
jae
sub
jnp
lods
jle
sbb
fidivr
shr
dec
cdq
and
ror
in
in
sub
mov
adc
pop
cwde
jge
jae
fidivr
imul
cmp
lods
in
mov
xchg
xor
mov
pusha
ret
mov
xchg
sub
mov
fwait
fs
mov
xchg
jg
sbb
pop
mov
cmp
pop
cli
or
mov
fdivr
sub
and
xor
mov
inc
imul
dec
ins
shl
mov
fsubr
push
lock
inc
cmp
iret
pop
sar
dec
sbb
jmp
cmp
cmps
cmp
push
sar
xchg
loopne
loop
jmp
dec
sbb
test
inc
push
fld
lahf
ins
popa
xchg
lahf
pop
cmps
lahf
xchg
adc
aas
mov
xchg
mov
push
aaa
cmps
std
adc
loopne
in
popf
add
xor
mov
and
out
neg
sti
add
xchg
inc
pop
sar
(bad)
out
sub
outs
popw
(bad)
inc
pop
lods
vpmullw
inc
push
das
xchg
fbld
pop
xor
popf
mov
dec
or
sar
popf
popf
sub
movs
fadd
(bad)
inc
mov
pop
sub
nop
cmp
test
movs
ror
mov
push
xor
xor
(bad)
les
add
push
sub
sbb
mov
pop
ins
jp
sub
pop
add
pushf
and
(bad)
sub
movs
pop
movs
adc
push
outs
fisub
mov
sbb
(bad)
jb
or
mov
dec
mov
mov
imul
rol
ficomp
outs
xchg
pop
icebp
jge
pop
ficomp
outs
push
pop
adc
jecxz
cmp
push
mov
hlt
popf
jmp
into
dec
mov
push
and
mov
in
cs
and
mov
test
fstp
scas
add
outs
inc
push
test
sahf
mov
ret
imul
arpl
and
ror
jl
pop
repnz
int
rcr
jae
bound
ja
retf
xor
adc
ret
push
ds
arpl
or
xor
push
cld
sbb
pop
mov
in
hlt
pushf
jb
inc
xchg
xchg
push
leave
push
ret
(bad)
and
clc
sub
retf
xor
rcl
(bad)
idiv
in
sbb
sub
std
cld
mov
sti
lds
pop
pop
jb
and
lds
icebp
shl
add
mov
clc
mov
pop
retf
or
sbb
imul
js
dec
ja
xchg
aaa
pop
xlat
add
fist
add
or
or
arpl
shl
arpl
imul
mov
jns
mov
aad
inc
mov
sahf
mul
enter
sbb
xchg
pushf
lahf
es
or
push
pushf
mov
fdivr
repnz
xchg
push
pushf
gs
jnp
mov
jo
lahf
sti
in
int
cwde
out
push
lea
sub
adc
sub
jge
imul
sbb
xchg
icebp
ret
mov
push
pop
push
mov
lock
ds
movs
and
movs
push
(bad)
test
add
retf
scas
push
mov
xchg
iret
retf
lods
mov
outs
test
push
call
int
inc
mov
cmp
push
mov
inc
ret
mov
push
faddp
jbe
bound
inc
adc
clc
or
test
or
and
inc
jae
iret
push
cwde
popf
mov
in
cdq
add
push
jle
push
mov
fwait
test
aaa
outs
and
dec
outs
data16
imul
adc
repnz
or
les
adc
clc
lds
mov
push
ret
(bad)
xchg
xor
sahf
adc
fldz
jge
sbb
cmp
mov
js
inc
sti
stc
jno
ds
int3
arpl
push
aam
pusha
inc
pop
popf
into
fstp
pop
dec
inc
jae
and
jp
cld
div
dec
fwait
cmp
cdq
add
das
dec
sbb
mov
jno
loope
repz
pop
mov
sub
and
(bad)
mov
loopne
adc
mov
lods
sub
fs
pop
cld
adc
int3
cmp
repnz
sbb
mov
(bad)
mov
pushf
rol
or
and
cld
fst
and
push
pop
push
inc
jae
inc
rol
adc
ret
mov
in
lods
imul
mov
xor
aam
xor
jle
jnp
adc
cdq
daa
dec
bound
adc
shr
jbe
dec
lock
push
sub
mov
sub
mov
scas
imul
mov
pop
sub
in
scas
xchg
and
fmul
xchg
mov
stc
jg
push
jmp
retf
loop
(bad)
dec
inc
jno
lods
cwde
dec
push
mov
retf
add
xchg
in
jne
sti
out
fsubrp
fdivr
adc
cmp
outs
in
push
push
nop
pop
sbb
dec
mov
shr
adc
cmp
and
int
xor
cmps
outs
mov
push
out
ja
dec
je
(bad)
sbb
aas
and
sti
mov
xchg
pop
nop
pop
loop
xchg
into
mov
mov
pop
push
repnz
push
xchg
rol
or
pop
mov
mov
jne
xchg
cmp
push
loopne
bound
dec
sbb
xor
cmp
mov
out
mov
mov
push
jae
xor
scas
loopne
and
movs
stc
jecxz
inc
stc
into
add
fs
fsub
ja
xor
(bad)
fstp
jle
adc
fisub
in
push
mov
pusha
xchg
jns
out
into
xchg
(bad)
jecxz
data16
in
mov
push
lea
or
and
jl
(bad)
push
jecxz
cmp
sti
shr
pop
mov
inc
lock
aas
inc
or
push
mov
and
inc
cdq
ss
ret
mov
xor
lock
inc
cdq
in
in
cmp
inc
dec
fsub
enter
pop
ss
movs
into
add
jns
sbb
adc
sub
imul
cs
add
fst
pop
mov
cld
cmp
adc
pop
enter
aad
adc
ficom
cmc
clc
mov
fidivr
out
mov
std
(bad)
stc
ss
outs
inc
or
outs
stos
sub
push
jne
div
ja
in
dec
sbb
push
rol
mov
mov
add
iret
mov
mov
test
arpl
retf
adc
js
int3
push
fdivr
movs
sti
inc
mov
repz
sbb
je
or
push
sub
or
js
or
out
stc
adc
mov
pop
in
adc
mov
pop
sub
test
xchg
cmp
pop
(bad)
xchg
cmp
(bad)
jmp
dec
or
push
jmp
inc
xchg
stos
jge
pop
jge
pop
add
mov
cdq
fincstp
out
mov
lea
push
dec
add
fmul
or
ins
adc
icebp
xlat
push
mov
dec
lahf
mov
iret
in
fstp
cmp
fisub
sbb
icebp
mov
mov
loop
mov
mov
xchg
imul
je
xor
cwde
sub
xchg
es
or
das
pop
dec
loopne
push
cvtdq2ps
mov
jle
or
pop
ins
pop
dec
cld
pop
ror
ror
pop
popa
jl
arpl
int
sbb
mov
sub
jecxz
mov
xor
fsub
sub
lods
dec
dec
sbb
push
push
jae
xchg
enter
sbb
inc
pop
and
pop
shl
or
sub
test
mov
std
inc
mov
mov
push
bound
nop
cwde
lahf
dec
pop
pop
in
shl
scas
push
imul
dec
push
adc
pop
and
ret
mov
popa
hlt
mov
rol
dec
mov
sbb
out
xor
aam
mov
xor
lea
sub
pop
mov
mov
jns
push
fs
mov
pop
loop
xor
lea
sub
mov
sub
sahf
xor
scas
and
sbb
cmps
or
push
movs
and
mov
fdivr
stc
ins
xchg
cmp
jae
mov
jbe
out
jp
mov
and
repz
stc
jle
nop
or
call
ds
loop
jno
clc
rcr
mov
xor
dec
retf
adc
in
jle
cld
jno
mov
imul
jmp
fs
mov
sar
js
push
or
pop
fist
mov
stc
mov
jnp
jns
pop
push
in
aas
scas
push
jns
not
lahf
xor
jp
add
je
daa
sbb
or
ret
js
push
and
xchg
jno
xchg
push
sub
push
fmul
cdq
jmp
repnz
sbb
or
lods
enter
call
push
pop
out
jne
lahf
ja
lss
cmp
xor
jne
popa
addr16
adc
stos
out
in
mov
div
cdq
push
out
clc
repnz
das
mov
adc
icebp
aam
xor
cmp
jne
mov
ret
mov
int
test
push
ja
stos
pop
ds
jmp
stos
mov
xchg
jmp
jo
fnstsw
pop
mov
sti
test
xor
call
leave
ss
or
js
jnp
(bad)
push
ins
cli
jl
lds
inc
mov
and
lds
pop
add
(bad)
cli
dec
in
div
or
lods
cmp
mov
mov
iret
sahf
out
in
sti
mov
sbb
aad
std
mov
xchg
add
int3
mov
jg
jmp
mov
mov
and
out
les
jp
call
add
leave
dec
clc
sbb
jae
pop
dec
rcr
ss
inc
inc
ror
es
add
arpl
mov
and
xor
mov
(bad)
(bad)
push
paddq
add
mov
inc
call
pop
add
or
cld
mov
out
add
inc
sti
inc
xchg
aad
jmp
aas
pop
dec
and
in
iret
push
dec
loope
imul
repz
or
mov
add
and
out
jae
mov
jmp
(bad)
loope
xchg
bound
repnz
dec
les
inc
add
sub
mov
call
pop
adc
or
xor
cmp
adc
or
lock
xchg
push
imul
pop
push
xor
ds
sbb
sbb
int
bound
retf
icebp
test
mov
loopne
mov
fdiv
pop
mov
retf
(bad)
(bad)
cs
and
jmp
jle
jl
fild
jmp
push
push
adc
jns
(bad)
cmp
xchg
xchg
ror
test
mov
pop
lds
cmp
bound
mov
in
leave
test
pushf
inc
enter
jne
xor
pop
aad
xchg
mov
or
out
enter
inc
jl
bound
cmp
mov
aas
(bad)
pushf
leave
mov
jmp
out
sub
outs
bound
mov
pop
dec
dec
mov
repz
into
cmp
es
inc
adc
add
cld
repz
aas
(bad)
cld
repz
aas
jmp
lock
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
clc
cmp
mov
dec
fwait
cwde
out
sahf
scas
test
in
(bad)
jmp
cmp
or
dec
out
ins
js
enter
add
imul
scas
push
xor
ins
pusha
xchg
jmp
and
xor
scas
jge
or
sti
pop
into
xchg
xchg
hlt
out
cs
movs
pop
pop
lds
lahf
xlat
rcr
sti
xchg
pop
or
ret
jne
dec
jl
ds
jge
jbe
push
inc
repz
push
frstor
test
retf
push
or
or
inc
neg
call
arpl
lods
lods
add
xchg
push
js
push
pop
xor
sub
fs
dec
test
fistp
dec
stc
fisub
jecxz
outs
les
dec
mov
out
pushf
std
and
sub
and
je
cmp
add
jo
xchg
jbe
scas
je
mov
sbb
in
stos
and
data16
in
mov
mov
mov
mov
or
jbe
fs
mov
mov
ret
mov
clc
into
imul
(bad)
in
ins
jne
and
clc
fstp
daa
retf
adc
add
mov
cs
inc
jbe
mov
rcr
gs
pop
and
xchg
xor
into
pop
rol
ror
dec
rcr
inc
loopne
and
jmp
data16
xchg
push
sub
aaa
popa
or
mov
ror
out
daa
pop
cmp
push
add
lods
daa
cmp
enter
fnsave
scas
add
mov
lods
(bad)
jg
xchg
mov
imul
lahf
xchg
xchg
and
jmp
mov
lea
jecxz
mov
addr16
not
loop
hlt
pop
sahf
xor
mov
(bad)
stos
inc
and
sub
pop
fcom
xor
pop
loope
repnz
ss
clc
imul
mov
or
cwde
inc
stc
ret
loope
getsec
fsubr
sbb
les
push
jg
imul
mov
stc
movs
js
leave
pop
mov
mov
sub
push
mov
dec
xchg
mov
mov
ins
cmps
dec
mov
outs
mov
push
pop
and
(bad)
aam
(bad)
cmp
ret
pop
mov
into
fnstsw
in
pop
cdq
cmp
(bad)
sbb
push
push
icebp
dec
std
and
sar
push
lahf
cs
pushf
or
out
or
cli
or
xchg
sub
jge
shr
movs
jnp
adc
retf
jmp
xchg
and
das
test
xchg
push
mov
mov
aaa
pop
neg
sub
push
repz
fnstsw
jns
jp
sbb
test
lea
mov
adc
pop
and
pop
mov
jge
add
xor
cmp
loope
es
mov
pop
(bad)
jl
mov
add
cmp
cmc
fistp
stos
and
jnp
or
clc
xor
jmp
pushf
jne
adc
adc
pop
jecxz
or
mov
cmp
gs
pushf
xor
add
jo
out
cmp
imul
ds
mov
inc
jne
loope
dec
fcomp
pop
mov
ret
icebp
pop
ins
dec
outs
dec
push
mov
pop
fsubr
shl
repnz
push
fs
(bad)
mov
lods
dec
test
mov
jge
push
and
mov
pop
ss
mov
adc
je
sbb
adc
xchg
and
jns
loop
out
or
xor
not
iret
div
pusha
js
mov
leave
imul
mov
into
(bad)
test
xor
out
aaa
jmp
call
fisttp
jmp
fsub
dec
das
inc
iret
xchg
mov
js
jns
imul
(bad)
ds
cmp
or
mov
jae
mov
inc
aaa
fdiv
mov
inc
and
loop
int
pop
cmps
jne
loopne
fsubr
mov
aas
not
loop
add
sbb
cmp
(bad)
adc
jmp
inc
bound
or
push
inc
fwait
xlat
xor
stos
test
movs
sbb
inc
pop
(bad)
int3
outs
pop
pop
add
fcomp
mov
xchg
jmp
pusha
cli
sub
jecxz
scas
jge
push
mov
inc
mov
xor
mov
fsub
add
add
cmps
aaa
jne
sub
inc
dec
ins
je
pusha
inc
jno
mul
push
push
dec
mov
cmp
inc
leave
pushf
popf
pop
inc
push
xchg
dec
scas
mov
stos
mov
sar
pop
jmp
rol
(bad)
addr16
stc
mov
and
add
sub
mov
xor
fimul
sbb
inc
push
leave
cs
xor
loope
shl
sti
mov
adc
xchg
pop
mov
stos
or
ret
test
xlat
push
popa
mov
enter
mov
dec
lods
in
push
test
aad
sub
popa
stc
xchg
gs
pop
(bad)
jl
stos
test
xchg
div
jl
inc
scas
xor
xchg
(bad)
out
xchg
(bad)
hlt
data16
es
push
jne
jecxz
pop
cmp
jno
arpl
cmp
sbb
clc
jae
push
test
or
or
das
std
(bad)
push
cmp
mov
in
add
sub
push
sub
mov
mov
jmp
cmp
jo
jae
or
mov
test
jmp
in
xchg
(bad)
jmp
data16
mov
jmp
push
(bad)
movs
and
repnz
adc
xor
jbe
dec
adc
jmp
test
repz
mov
leave
sub
jbe
adc
es
push
fwait
loop
xchg
mov
cmp
(bad)
mov
ficom
push
cmps
loope
in
mov
mov
push
pop
test
sbb
div
pop
sub
xor
add
sbb
aam
dec
adc
frstor
and
ds
and
fst
xchg
push
cmps
shl
es
movs
icebp
mov
and
push
test
mov
mov
in
jmp
mov
sti
outs
(bad)
mov
(bad)
push
hlt
add
movs
enter
scas
pushw
(bad)
ins
cdq
sub
jmp
mov
push
xor
dec
ret
push
in
jge
outs
sub
std
or
adc
sbb
cli
cmps
xchg
xchg
outs
and
and
mov
lods
enter
cmp
int3
fst
in
test
xor
(bad)
cdq
cwde
lahf
xchg
dec
jle
cli
and
sar
pop
inc
mov
mov
inc
add
stc
xchg
retf
inc
scas
in
out
add
dec
into
cli
xor
ret
adc
mov
mov
arpl
cs
jo
outs
adc
ds
jno
clc
mov
and
push
scas
xor
sbb
ins
lods
push
or
ja
xchg
inc
pop
ds
push
xor
out
sbb
cli
xchg
sahf
iret
mov
jno
in
cmps
pop
inc
push
push
(bad)
jns
xor
sbb
pop
jl
mov
imul
loopne
hlt
pop
call
add
loope
xor
push
lods
and
xchg
(bad)
mov
repnz
test
popf
aas
in
push
or
lods
jbe
bound
xlat
shl
jns
sub
dec
(bad)
movs
ja
addr16
jnp
push
sub
pop
retf
(bad)
jae
xlat
mov
call
or
mov
mov
and
int
rcr
push
sub
cmp
and
mov
or
xchg
sbb
in
sub
and
dec
cdq
mov
mov
ret
xlat
jo
adc
out
cmp
clc
test
xchg
mov
mov
nop
arpl
in
icebp
js
call
xor
or
ins
jae
xchg
dec
jp
inc
std
cmp
daa
add
jecxz
or
pop
out
daa
lds
xchg
cs
and
mov
leave
stc
mov
std
mov
xchg
mov
into
inc
cmp
sub
or
push
xlat
jmp
into
mov
inc
shr
ins
int
xor
jge
adc
pop
jp
jge
mov
mov
push
sub
sub
cmps
std
mul
xchg
stos
push
mov
xchg
imul
adc
pop
stc
jl
and
fs
jbe
pop
inc
pop
sub
pop
jmp
xchg
sub
bound
ficom
mov
iret
sbb
inc
inc
pop
ja
(bad)
jns
adc
out
ins
cdq
imul
gs
imul
aad
mov
or
fisubr
xchg
out
ret
inc
pop
fwait
iret
inc
fsubr
fisubr
arpl
imul
push
dec
jno
daa
call
xchg
cdq
sub
mov
loope
loop
fld
out
pop
call
push
jnp
mov
cmp
pop
add
mov
lds
dec
adc
add
push
shr
sti
scas
jno
and
pop
xchg
or
repz
lods
xlat
ror
cmp
xchg
sub
out
in
pop
mov
add
adc
push
lock
cmp
fsubr
xor
pop
addr16
data16
ds
add
mov
test
jbe
int
pop
frstor
fcomp
dec
popa
les
and
pop
clc
cmp
pop
call
adc
jmp
or
sbb
movs
adc
sub
and
idiv
(bad)
into
pop
fmul
adc
sub
es
sub
mov
dec
shl
xor
dec
xor
push
push
mov
mov
inc
shl
ss
retf
mov
arpl
add
sub
(bad)
mov
push
fbstp
pop
and
dec
jg
cmp
in
xchg
idiv
sbb
cmp
ret
lea
and
sub
jbe
scas
jecxz
lods
pop
out
pop
es
loopne
pop
xchg
ret
movs
cs
fidiv
icebp
push
sbb
cmp
gs
sbb
hlt
out
leave
add
push
jbe
movs
gs
movs
ret
push
push
jp
cli
retf
rcr
das
stos
mov
or
mov
std
test
xchg
stos
adc
ins
jmp
rcr
test
pop
xchg
daa
jmp
and
stos
enter
jae
cmps
mov
(bad)
inc
in
mov
inc
iret
movs
push
dec
dec
(bad)
scas
mov
test
arpl
dec
push
push
shr
jo
and
push
adc
jae
xor
(bad)
ja
inc
sar
cmp
add
xor
xchg
jae
inc
stos
cmc
stos
push
aad
xchg
pop
rol
inc
xlat
and
popa
jbe
lock
xor
inc
ins
shr
mov
xor
dec
mov
inc
outs
icebp
bound
fbld
sbb
push
cdq
adc
in
sar
lods
and
pusha
cs
ror
(bad)
ficom
mov
ret
int
xchg
mov
sar
or
push
out
push
movs
adc
xor
scas
mov
dec
or
scas
jmp
sar
imul
imul
sti
cmc
or
icebp
test
jo
aas
(bad)
and
sub
and
mov
test
lea
mov
pop
mov
jge
and
adc
dec
xchg
in
xor
xchg
sub
mov
je
dec
add
cwde
(bad)
dec
xor
pop
push
mov
dec
mov
jle
movs
jno
in
mov
not
dec
cwde
sub
pushf
mov
inc
and
xchg
jbe
es
xchg
fldz
test
mul
repz
nop
(bad)
jmp
pop
cmp
push
and
sub
pushf
jmp
test
scas
jle
and
inc
mov
mov
in
pop
inc
test
lea
out
les
jae
ds
cmp
fadd
aad
addr16
addr16
dec
jmp
retf
hlt
mov
pop
xchg
pop
push
int3
cwde
jns
enter
call
jle
dec
jb
pop
cmp
jecxz
dec
or
jle
jp
aam
or
adc
cmp
js
outs
sub
or
retf
(bad)
mov
xchg
dec
or
cmp
and
les
jmp
lahf
jg
dec
add
xchg
call
outs
xor
aam
push
cs
pushf
shl
adc
ror
popa
add
outs
add
pop
stos
aad
push
arpl
cs
pop
fstp
cmp
xor
fsub
scas
pop
jae
sbb
mov
push
icebp
(bad)
shl
pop
lea
enter
and
ins
imul
lods
jne
jns
popf
movs
not
xor
mov
hlt
ss
sub
test
ficom
sub
sub
in
mov
loopne
jnp
push
lea
outs
imul
in
pop
add
or
mul
std
mov
pop
fidivr
(bad)
push
sub
xchg
inc
sbb
adc
imul
and
mov
jl
and
adc
push
dec
div
inc
out
movs
aam
iret
pop
xor
imul
mov
out
in
xchg
mov
lods
cmp
enter
jns
mov
jp
dec
push
dec
test
icebp
jns
pop
je
imul
jbe
push
js
jnp
dec
and
inc
mov
add
ret
push
stc
sbb
fcomp
pop
iret
lahf
dec
dec
ins
pushf
js
dec
stos
repz
pop
fs
lock
movs
neg
sub
jo
cdq
adc
mov
jg
ffreep
mov
imul
loope
push
ja
mov
outs
mov
aas
adc
(bad)
fbstp
sbb
addr16
pop
in
imul
mov
arpl
(bad)
retf
jbe
(bad)
or
xor
loopne
test
mul
ret
dec
jecxz
dec
mul
mov
cdq
cld
pop
int
push
rcr
test
jmp
(bad)
loope
adc
add
xor
cmp
inc
ss
sbb
dec
clc
aad
push
mov
adc
arpl
dec
movs
jge
pusha
movs
inc
cmps
int
pop
mov
jnp
in
out
pusha
cmp
dec
aad
push
stos
les
aaa
xor
inc
sub
jle
push
mov
mov
pop
jmp
(bad)
mov
add
scas
js
pop
mov
mov
xchg
mov
cmp
in
test
sub
xchg
lods
dec
jle
or
in
or
xor
pop
(bad)
(bad)
iret
test
sbb
repz
dec
or
sbb
inc
sub
mov
dec
(bad)
in
cmp
push
pop
inc
cmps
into
adc
ret
adc
ins
mov
mov
add
sbb
inc
jg
jle
mov
push
jg
ss
mov
ins
inc
imul
mov
(bad)
pop
cmp
jl
fimul
fidiv
or
jbe
movs
cmps
push
cmp
jge
outs
cs
mov
(bad)
in
adc
pop
xchg
int
sar
xchg
lds
dec
leave
sub
es
sub
mov
lds
jbe
cmps
icebp
add
mov
and
fsub
arpl
push
out
repz
lahf
sub
dec
int3
mul
push
cmp
cmp
test
leave
fwait
jmp
cmp
fcomp
cmp
cdq
std
scas
test
xchg
sbb
popa
dec
cmp
sbb
jnp
cmp
out
popf
push
ja
sbb
jmp
out
pop
pop
hlt
or
xchg
(bad)
or
pop
cmp
pop
jae
sahf
fs
outs
es
fldcw
xor
imul
sub
fcom
cmp
xchg
pop
or
pop
add
adc
in
and
cmp
fcmove
scas
jmp
and
push
retf
push
scas
push
or
push
push
in
mov
push
popa
(bad)
aad
and
repnz
or
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
call
pop
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
inc
xchg
or
push
sbb
add
movs
inc
mov
(bad)
adc
and
xchg
xor
arpl
inc
mov
push
pop
(bad)
out
push
add
call
in
inc
adc
iret
iret
dec
adc
xor
adc
imul
fild
in
fcomp
call
and
or
cmp
push
ficom
fs
out
out
xor
(bad)
mov
retf
cmp
call
push
or
(bad)
jb
ss
aam
addr16
ja
mov
xchg
xchg
push
mul
and
scas
xor
call
test
mov
mov
(bad)
jp
add
pushf
das
ins
arpl
icebp
mov
sbb
or
inc
mov
in
xchg
and
mov
xor
sahf
push
sbb
(bad)
push
jne
jno
mov
ret
xchg
mov
retf
push
lock
test
movs
jno
cld
ss
push
jmp
cmp
xchg
and
inc
pop
cmp
sbb
test
mov
jbe
xchg
not
addr16
leave
xchg
add
cli
sbb
jmp
lods
sbb
fmul
test
out
ret
fcom
cmp
adc
stos
cmp
mov
ss
movs
aaa
(bad)
test
dec
inc
inc
shl
and
xchg
es
and
sbb
sub
xchg
data16
(bad)
xchg
xchg
js
dec
pusha
xor
or
mov
xchg
stc
(bad)
dec
or
pop
dec
fs
mov
mov
xchg
pusha
jns
push
add
sub
jp
fldcw
(bad)
sbb
mov
out
fcom
push
sbb
(bad)
retf
test
fmul
xchg
xchg
jmp
aaa
adc
(bad)
jmp
or
aad
pop
xchg
sub
pop
mov
mov
jnp
mov
(bad)
jae
push
cld
push
xor
mov
sbb
aaa
dec
leave
mov
jecxz
cmps
pop
nop
jo
lahf
xlat
cs
cli
rcl
pop
cld
(bad)
sbb
les
retf
out
jno
and
push
lea
or
mov
int
or
dec
adc
mov
lods
jbe
cmp
add
mov
push
xchg
sti
je
dec
test
cmp
test
jno
cwde
sub
popa
mov
test
sub
jbe
mov
mov
jnp
mov
cmp
out
fiadd
add
or
and
pop
pop
xor
pop
imul
out
pop
ja
out
mov
xor
ja
jb
addr16
sub
mov
cli
jnp
cld
xchg
and
xchg
add
cmps
push
pushf
addr16
(bad)
lea
repnz
aas
iret
mov
mov
inc
and
push
shl
push
imul
imul
cmc
lock
cmp
ins
lea
(bad)
test
sub
cmp
add
movs
inc
mov
frstor
add
test
jbe
gs
mov
jg
or
mov
sbb
pop
cmp
std
xchg
jae
cmp
lea
pushf
test
(bad)
jle
jae
inc
retf
jnp
fmul
(bad)
mov
mov
data16
hlt
push
inc
cmc
inc
cli
jnp
(bad)
ins
inc
xor
jno
out
mul
aam
cmps
sub
addr16
adc
cmp
ja
mov
xchg
dec
mov
cmps
dec
xchg
mov
mov
push
into
mov
mov
shr
mov
retf
ficom
imul
in
fcmovb
in
mov
dec
jecxz
fcomi
sub
pop
dec
mov
fwait
xor
inc
aam
mov
retf
movs
jmp
mov
cmp
xchg
out
inc
call
mov
jnp
in
fild
fwait
mov
pop
xchg
fs
mov
mov
mov
jo
cmps
ret
inc
je
mov
mov
mov
jns
jno
out
sub
stos
aam
mov
lea
cli
jmp
je
pop
out
sbb
imul
cmp
and
mov
mov
xor
ret
loopne
mov
test
mov
addr16
add
xchg
jnp
lea
pop
cwde
lahf
jbe
and
sbb
dec
jge
xchg
scas
jns
outs
jmp
shld
mov
mov
test
pushf
fdivr
in
jg
cli
sbb
aas
clc
jne
or
mov
repnz
jp
adc
fistp
xor
lods
pop
mov
sbb
movs
in
jp
add
cdq
mov
mov
dec
gs
pop
outs
(bad)
pushf
pusha
hlt
scas
ret
dec
adc
fstp
in
sahf
div
mov
pop
add
adc
repnz
popf
shl
dec
ins
push
sbb
sbb
aam
cdq
mov
inc
pushf
fwait
pop
add
in
push
dec
jecxz
xchg
inc
xchg
inc
push
cdq
xchg
inc
jbe
inc
dec
mov
repz
movs
inc
fld
push
into
ror
(bad)
jne
adc
pop
mov
fsubr
inc
out
sahf
dec
xchg
pop
fs
ins
mov
inc
js
and
jb
jb
sbb
ret
scas
leave
pop
jnp
int3
movs
push
sub
mov
fnstcw
iret
ret
mov
loop
inc
cs
leave
or
xor
mov
cmps
inc
mov
nop
aas
cmp
retf
sbb
leave
inc
mov
and
gs
(bad)
aad
jmp
dec
and
or
mov
push
fndisi(8087
jg
push
retf
iret
jns
xor
mov
push
es
mov
test
ffreep
ror
inc
gs
xor
cs
lods
cmp
loop
mov
clc
push
dec
repnz
mov
add
aam
sbb
or
hlt
dec
mov
test
jb
(bad)
pop
xor
cmc
clc
jmp
pop
(bad)
pop
repz
out
popf
sbb
or
outs
ja
sub
cmp
add
push
lods
aaa
in
dec
lock
retf
mov
fdivr
daa
add
push
shl
xchg
out
call
and
rcl
into
xchg
imul
jno
sbb
addr16
cld
dec
rcr
jne
sbb
jmp
dec
xchg
(bad)
fwait
rcl
mov
cmp
ins
sahf
out
aam
loope
in
rol
mov
jns
loopne
(bad)
fcmove
stos
dec
mov
in
mov
jmp
mov
jno
adc
push
mov
dec
pop
rcr
popf
mov
jae
xchg
adc
imul
inc
jae
or
pop
push
sbb
retf
clc
push
stos
jnp
mov
retf
fcmove
das
adc
cmc
call
lahf
mov
jl
popa
mov
sbb
jge
or
mov
outs
sbb
mov
in
sub
jae
mul
pop
scas
in
fsub
loop
arpl
repnz
mov
es
int3
imul
(bad)
and
mov
sbb
popf
not
xchg
and
test
jne
mov
dec
int
jnp
mov
dec
xor
fnstenv
mov
scas
aad
cmps
cmp
jmp
ret
scas
data16
mov
and
mov
jmp
adc
and
add
cld
jmp
hlt
sub
inc
or
mov
hlt
and
test
outs
or
aaa
aaa
mov
add
mov
adc
lahf
ds
push
pop
movs
push
sti
adc
loop
inc
mov
and
(bad)
repnz
mov
adc
push
(bad)
aam
sti
mov
loop
sub
fmul
aad
pop
out
stos
daa
inc
xchg
in
or
pop
push
jne
rcr
jmp
mov
pop
add
lds
xchg
inc
ret
mov
xchg
inc
xor
(bad)
cmovbe
sbb
loop
repz
push
leave
(bad)
push
ins
mov
dec
fstp
pop
loope
or
cmp
rol
enter
scas
add
shl
leave
fucom
lock
pop
pop
jl
mov
cmps
outs
hlt
jecxz
in
ins
dec
dec
div
(bad)
mov
xor
gs
mov
push
int3
retf
push
and
adc
out
mov
or
mov
imul
xor
mov
pop
inc
outs
and
ret
pop
mov
or
ret
out
pusha
popf
fs
shl
inc
adc
test
push
jo
iret
cmps
pop
pop
pop
popa
lahf
jmp
dec
cmp
out
xor
inc
out
std
pop
pop
mov
xchg
sbb
inc
push
push
inc
sub
push
rcr
int3
cmp
sbb
pop
xlat
inc
hlt
retf
lahf
jns
dec
xor
sub
add
inc
sahf
(bad)
stos
daa
add
cmp
nop
test
and
repz
mov
pusha
imul
clc
aaa
ja
jmp
cmp
fcmovb
mov
loop
xchg
cmc
and
popf
xor
add
hlt
lea
inc
ds
add
push
xor
pop
int3
add
or
adc
xchg
and
adc
shr
adc
stc
mov
pop
xor
gs
test
push
xor
fstp
movs
in
jle
mov
(bad)
push
pop
or
mov
popf
cld
pop
mov
jge
push
retf
xchg
dec
push
dec
push
pop
inc
clc
adc
mov
aas
clc
aam
repz
pop
outs
mov
sti
mov
sbb
movs
gs
outs
popf
fcomi
jns
js
sbb
dec
xor
add
sbb
mov
dec
jl
push
aaa
adc
and
xchg
fsub
jg
cmp
jmp
cmp
into
jmp
xlat
out
mov
or
in
(bad)
pop
mov
and
sub
dec
ret
add
in
push
push
jg
xchg
ds
loop
bound
lods
sbb
sub
clc
push
js
test
jle
xlat
jg
adc
push
push
pop
xchg
cmp
mov
int
dec
cmc
mov
push
pop
jl
jnp
int
mov
xchg
mov
scas
pop
adc
push
push
inc
bound
pop
jo
mov
out
fs
or
icebp
ds
fisubr
imul
xor
jle
and
mov
je
mov
aas
enter
push
sub
sbb
mov
iret
out
es
mov
push
sbb
ret
pop
gs
in
test
push
retf
addr16
jbe
xor
mov
mov
inc
(bad)
ss
mov
jmp
scas
or
cs
xchg
mov
dec
(bad)
sbb
movs
js
aaa
add
inc
idiv
fstp
sub
lods
xor
fidiv
sar
xchg
jl
xchg
cmp
sub
pop
imul
fistp
mov
lods
or
xor
aaa
cld
mov
xchg
pop
pop
test
pop
mov
popa
test
inc
push
dec
mov
addr16
cmp
std
loope
neg
jno
xchg
gs
es
jo
push
xchg
clc
loop
ret
add
adc
mov
fcomp
jns
jns
mov
(bad)
or
in
icebp
out
or
in
dec
push
push
retf
adc
in
bound
cmps
(bad)
or
or
push
movs
sbb
je
movs
mov
pusha
nop
mov
aas
pop
lods
ss
shl
xor
aam
ins
jle
or
push
cmp
or
clc
sub
add
mov
jns
pop
sub
adc
xchg
lahf
mov
add
mov
mov
xchg
xchg
shl
stos
dec
jns
dec
pop
push
(bad)
pop
pop
mov
mov
mov
adc
jmp
mov
jmp
cmp
jl
fstp
lods
pop
xchg
iret
sbb
mov
nop
(bad)
es
mov
or
movs
rcr
adc
xor
sbb
popf
addr16
xor
cmp
push
rep
push
sub
and
adc
pop
push
sub
sbb
clc
leave
mov
dec
adc
imul
sti
ins
bnd
aaa
mov
xor
stc
(bad)
pushf
in
sub
ds
pop
xor
inc
xchg
or
or
aad
arpl
mov
inc
cmp
xor
jnp
fcom
adc
(bad)
ficom
pushf
into
pop
mov
dec
adc
fdivr
push
mov
(bad)
scas
ja
push
pusha
out
xchg
aas
or
loopne
ror
lahf
xchg
push
xor
in
fwait
lahf
fstp
mov
mov
(bad)
and
mov
retf
stc
sbb
imul
enter
xchg
scas
rol
dec
dec
popa
add
cmp
xchg
xchg
js
shl
imul
mov
das
pop
add
xchg
addr16
inc
imul
icebp
clc
jne
fcom
iret
inc
(bad)
pop
int3
fidivr
aas
js
mov
lea
jg
mov
mov
and
jae
add
out
xchg
retf
and
mov
xor
xchg
pop
rcl
push
cmp
cmp
xor
push
mov
xor
call
jne
add
jecxz
call
jae
mov
and
mov
idiv
(bad)
scas
mov
xchg
jbe
pop
cmp
into
pusha
jae
jne
push
pop
jge
mov
shl
shr
xchg
cmp
js
push
sbb
sbb
outs
xchg
ret
push
dec
xchg
test
jmp
pop
arpl
(bad)
es
iret
push
push
mov
out
sbb
cli
mov
jmp
push
mov
mov
mov
dec
pop
inc
pop
pop
sti
nop
data16
xchg
inc
xchg
jecxz
cmp
dec
lahf
int3
loope
inc
jne
fs
das
pop
mov
retf
sbb
push
adc
(bad)
sub
fs
dec
call
and
movs
sbb
call
pop
pop
adc
jmp
fidiv
fisub
out
jns
loop
fld1
push
add
jae
cwde
fmul
mov
neg
mov
stos
fdivr
pop
dec
push
stc
invd
mov
stos
iret
stc
shl
push
inc
cdq
ss
pop
fidivr
imul
pushf
xor
aas
into
mov
and
pop
popa
in
test
mov
cmp
mov
xchg
push
stc
jns
push
push
je
jo
mov
outs
xchg
mov
and
and
push
movs
fld
loop
or
ins
cmp
out
fwait
lea
jp
or
jp
(bad)
cmps
icebp
sbb
sbb
mov
add
das
push
mov
je
xchg
add
jle
icebp
idiv
stc
fwait
std
push
call
ret
dec
add
retf
push
sar
xchg
push
and
mov
fwait
adc
in
mov
xchg
pusha
jecxz
nop
stos
fs
ja
cmp
adc
(bad)
outs
sar
out
mov
std
add
cwde
in
sbb
addr16
shr
xor
in
add
or
stos
dec
mov
daa
add
adc
pusha
mov
ins
icebp
gs
xor
sbb
pop
aas
xchg
mov
jle
imul
adc
xchg
push
in
shl
push
pop
iret
aaa
shr
fldcw
lods
inc
dec
sahf
pop
enter
jnp
es
mov
mov
ror
mov
push
pop
push
(bad)
les
movs
test
popa
mov
push
mov
pop
(bad)
je
mov
ss
neg
in
or
test
(bad)
adc
test
and
push
sbb
push
stos
jo
ret
inc
int
cs
jge
aas
mov
sbb
mov
js
ud1
pop
hlt
(bad)
hlt
or
data16
and
scas
pop
cmp
sbb
adc
sbb
adc
test
pusha
in
es
mov
aam
push
pop
mov
stos
pop
pop
adc
add
movs
adc
retf
pop
cmp
add
xlat
cmp
clc
out
jg
stc
out
jg
stc
jg
add
pop
jecxz
or
jmp
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmps
sbb
cmp
dec
lea
pop
sar
sar
jno
bound
xor
cmps
cmps
jnp
stc
jle
mov
add
dec
mov
ja
adc
dec
int3
pop
test
add
jnp
mov
fs
pop
scas
sbb
jmp
sbb
cli
mov
in
pushf
mov
or
ret
push
and
or
pop
xlat
xchg
and
in
iret
push
lods
sti
mov
mov
fcmovu
dec
ins
pop
je
std
cld
lock
outs
pop
ror
fisub
jmp
add
pop
movs
inc
dec
fdiv
push
test
(bad)
mov
xor
push
bound
add
jle
xchg
mov
(bad)
pop
mov
and
mov
out
ja
imul
cmc
mov
xor
out
cli
mov
cli
out
pop
out
mov
shl
cli
(bad)
mov
imul
and
mov
push
inc
in
pop
jno
ds
xchg
push
push
mov
add
mov
jmp
dec
into
out
int3
data16
mov
fidiv
scas
aad
jne
bound
les
xor
add
dec
cli
enter
leave
mov
scas
push
and
push
repz
pop
and
mov
add
lds
pop
inc
adc
xor
xchg
xor
jbe
adc
inc
fdivrp
repz
dec
sub
add
ret
ins
push
test
ret
data16
cld
js
fwait
std
test
mov
xchg
ins
push
lahf
pop
jp
pop
ficom
push
call
imul
repnz
mov
adc
mov
and
jne
add
push
cmp
jecxz
dec
push
jno
scas
jl
dec
icebp
lds
add
xchg
add
popf
mov
push
stos
les
aam
in
mov
xlat
addr16
loopne
jno
out
stc
inc
vprotw
or
mov
push
pop
pushf
repz
rcr
scas
push
rol
mov
out
icebp
pusha
and
jo
mov
out
out
lea
nop
in
sub
fidivr
add
call
addr16
les
add
dec
jg
mov
jnp
call
mov
inc
cli
mov
cld
iret
ss
(bad)
fnsave
jecxz
(bad)
ret
mov
pop
int
test
xchg
lods
retf
fbld
adc
mov
(bad)
cmps
stos
mov
aas
sbb
mov
or
popf
popf
retf
push
das
fwait
repnz
xchg
adc
xchg
or
adc
(bad)
call
ss
pop
pop
cmc
scas
(bad)
out
or
aam
ja
cli
bnd
arpl
mov
lods
sbb
loope
into
cmc
xor
sub
movs
xlat
pop
aas
dec
jecxz
mov
cli
xor
adc
sahf
dec
sub
xchg
movs
sbb
hlt
jge
je
pushf
stos
in
ja
and
call
jo
retf
repnz
ss
cmp
into
loopne
dec
mov
xchg
inc
adc
push
fcom
mov
retf
jmp
jge
rcr
mov
or
scas
xor
adc
inc
inc
push
in
mov
and
or
inc
outs
inc
jmp
fisub
adc
mov
add
rcr
div
ds
mov
or
arpl
scas
mov
aaa
retf
xor
sar
rcl
and
repz
(bad)
out
scas
push
bnd
js
mov
nop
lahf
dec
and
test
arpl
neg
inc
dec
test
xor
gs
iret
cld
sub
mov
pop
mov
add
ja
jmp
(bad)
lea
push
dec
(bad)
out
imul
arpl
jle
dec
ds
or
or
nop
jmp
mov
cmp
or
cwde
sbb
push
leave
(bad)
mov
icebp
icebp
sbb
pop
add
mov
mov
or
mov
aam
add
es
sub
bound
das
shl
retf
dec
cdq
xor
aaa
retf
inc
add
clc
rol
push
imul
xor
sbb
and
out
(bad)
cmp
add
cli
stc
arpl
pop
pop
out
xor
xchg
ret
sbb
iret
std
mov
test
jl
sar
and
aam
aaa
aas
jbe
loopne
out
fbstp
rcr
inc
es
call
xchg
fiadd
pop
push
fnstenv
call
sar
popa
cli
addr16
ret
es
dec
and
gs
int3
adc
pop
sahf
stos
(bad)
es
sub
mov
imul
dec
jns
xchg
dec
mov
mov
test
imul
jp
cmp
cmps
retf
out
or
lods
call
jmp
out
mov
and
(bad)
arpl
lahf
xchg
or
xor
sub
inc
push
jmp
xlat
dec
idiv
(bad)
jg
inc
xor
dec
cmp
das
outs
jl
mov
push
cmp
imul
add
std
adc
sbb
mov
dec
sbb
push
retf
test
repnz
data16
outs
sbb
cmp
mov
movs
leave
popa
es
test
or
aas
adc
or
push
outs
or
adc
mov
retf
sbb
stc
mov
or
repnz
test
push
(bad)
call
or
adc
jbe
mov
test
mov
(bad)
stc
shl
retf
pushf
adc
push
jmp
push
sbb
test
push
sbb
add
xchg
loop
jmp
lahf
jne
loopne
sub
ret
and
imul
aaa
xor
mov
lds
stos
pop
fwait
cdq
outs
jg
jg
jmp
gs
lock
mov
mov
scas
xchg
out
mov
pop
xchg
call
xor
add
test
das
fidivr
out
(bad)
mov
sub
es
mov
xor
ret
mov
push
add
ins
pop
and
repnz
out
adc
shr
test
les
(bad)
add
push
jo
adc
repz
mov
adc
je
pextrw
xor
pop
popa
xor
jp
dec
retf
xor
or
jl
jno
mov
lahf
mov
in
in
inc
sub
loop
ins
sbb
push
add
ret
ss
fdivr
out
ror
(bad)
mov
int
fisttp
dec
retf
cmc
test
xchg
cmp
jmp
add
sbb
xor
add
cwde
nop
lds
imul
inc
add
mov
mov
(bad)
fsub
pop
mov
jb
push
xchg
shl
lea
xchg
test
push
xor
and
mov
(bad)
cli
mov
cmp
mov
sub
in
ficom
sahf
xchg
fbld
cld
inc
dec
jg
mov
fwait
enter
shr
mov
cmp
cmp
jmp
and
not
rol
repnz
lods
int
xchg
cmp
or
pop
dec
inc
jo
dec
sbb
scas
and
push
adc
sbb
aas
and
xor
pmaxub
retf
inc
adc
inc
test
cmp
sub
movs
cmps
xor
cmp
xor
push
sbb
popa
jge
mov
call
sbb
or
ret
lahf
(bad)
jns
shr
outs
fisub
hlt
sub
pop
sti
or
fdivr
pop
jp
lods
and
sub
xor
jg
cs
bound
jno
psubusw
clc
div
xchg
test
ret
outs
adc
xor
xchg
inc
mov
scas
pop
lahf
jmp
pop
add
jle
repz
aad
out
arpl
(bad)
mov
jns
or
xchg
test
ror
movs
cmc
aas
outs
outs
push
adc
push
fmul
stc
cmp
cld
popf
imul
sar
das
sub
push
sbb
and
aam
add
aam
test
js
cmp
push
or
cmps
inc
push
sub
test
int3
ins
mov
dec
mov
(bad)
into
in
cmp
pop
inc
loope
leave
mov
aaa
scas
push
mov
std
dec
(bad)
clc
jmp
jg
in
adc
rol
movs
out
loop
sub
sub
leave
jmp
mov
pop
sbb
hlt
jo
xor
das
sbb
pushf
add
push
fisubr
cmp
ret
xor
dec
(bad)
jne
arpl
jo
and
adc
sbb
sub
mov
popa
xor
jo
cmp
mov
ret
jb
pop
imul
inc
add
sti
sbb
jnp
xchg
dec
xor
sbb
fstp
repz
or
jnp
add
mov
pop
enter
dec
fwait
push
dec
cmps
jno
jmp
(bad)
cmp
scas
jl
int
out
(bad)
jge
mov
sub
push
sbb
jge
mov
ins
loop
pop
adc
or
xor
dec
pop
xchg
sub
or
mov
adc
cmp
mov
xor
shr
cmps
mov
dec
push
jge
test
shl
cmps
das
in
loope
xor
ret
dec
jnp
mov
pushf
xor
stc
ret
outs
mov
aad
retf
pop
inc
mov
in
inc
icebp
xchg
cmp
sub
jge
(bad)
fistp
pop
bound
cs
aad
pop
or
push
sub
stos
xchg
imul
or
fs
in
mov
sahf
and
add
cld
je
sub
inc
xchg
clc
mov
outs
cmps
mov
push
lea
jns
enter
sbb
mov
out
sbb
cmp
xchg
sbb
loopne
mov
mov
(bad)
or
into
cmc
inc
bound
and
popf
das
icebp
cmc
call
mov
je
dec
pushf
cmp
(bad)
xchg
mov
push
leave
sbb
push
push
dec
bound
std
enter
add
mov
xor
push
add
mov
scas
mov
mov
mov
or
test
xchg
sub
jl
mov
nop
unpcklps
dec
data16
icebp
push
pop
pop
arpl
sub
stos
test
fwait
pop
ret
push
das
jmp
mov
aaa
dec
aas
jp
cwde
or
std
add
int
inc
(bad)
loope
mov
mov
xlat
shr
mov
sbb
xchg
pusha
dec
stos
inc
ins
out
pop
push
add
imul
dec
lahf
mov
pop
jp
std
cs
lds
jns
std
ficomp
xlat
and
daa
adc
int
push
xor
icebp
inc
or
sub
mov
xchg
(bad)
xor
fcomp
cmp
xchg
das
sub
inc
add
mov
ja
or
mov
mov
or
test
mov
mov
push
pop
int3
adc
ss
or
adc
mov
loopne
(bad)
dec
popf
lock
add
jecxz
imul
aaa
add
lahf
mov
retf
mov
fidivr
fyl2xp1
cs
xor
jp
sahf
imul
and
mov
pusha
popf
push
pop
cld
add
repz
mov
xchg
xchg
bound
jg
jne
adc
mov
cmp
dec
pop
mov
mov
dec
add
jbe
mov
jbe
mov
xor
sub
xor
aad
int3
aam
retf
pop
dec
or
push
add
pop
jmp
mov
sub
xor
push
gs
cmp
cli
cli
scas
call
adc
or
pop
jbe
inc
jno
mov
aas
test
dec
mov
repnz
stos
add
jl
or
movs
iret
jo
xor
and
lds
and
xchg
xlat
inc
fcmovnb
dec
pop
cmp
cld
xchg
sub
pop
fucompp
mov
mov
jl
ds
mov
stos
movs
mov
punpckhwd
add
mov
loopne
pop
loop
(bad)
ficom
(bad)
or
mov
(bad)
aas
xchg
mov
lock
inc
fisubr
push
out
stos
sub
js
stc
sub
idiv
or
push
bound
add
jns
iret
adc
rcr
movs
mov
ins
iret
fwait
sub
fs
ret
and
or
adc
das
stc
or
lahf
sahf
inc
push
mov
inc
dec
retf
idiv
jmp
out
sub
stc
leave
cli
push
add
(bad)
cmp
loope
scas
jecxz
jae
dec
jl
xor
jg
(bad)
sub
mov
movs
lea
jmp
adc
das
cmp
xchg
loop
loope
out
add
jb
ret
fist
xor
cmps
shl
ja
xchg
xor
call
mov
jnp
pushf
cmps
sti
xlat
outs
mov
and
fidivr
enter
pop
xor
xor
dec
push
pusha
out
test
xchg
inc
pusha
adc
es
shl
adc
xchg
call
pop
pop
dec
push
xlat
scas
pop
and
ret
jg
int3
jge
in
cmp
xchg
xor
sbb
mov
outs
dec
daa
pop
jl
(bad)
push
mov
test
in
call
sub
clc
imul
stc
je
or
fsubp
jae
sbb
nop
inc
cmps
mov
in
mov
jl
dec
pushf
clc
fimul
pushf
cmp
stc
dec
pushw
inc
pop
mov
bound
push
mov
push
jl
std
adc
push
ret
in
jmp
popf
out
mov
scas
shl
hlt
test
ss
jns
jmp
mov
jmp
xor
std
jecxz
mov
cli
fiadd
call
xor
push
dec
pushf
jmp
in
xor
sub
pushf
jge
ret
popa
jae
sub
retf
cmc
xchg
jbe
inc
xor
or
cld
rcpps
push
cmp
mov
mov
add
imul
and
cmps
jmp
push
mov
mov
cli
mov
call
mov
dec
out
pop
ja
xor
dec
mov
adc
ret
pop
push
mov
mov
aaa
jmp
ins
jl
imul
xor
outs
sar
cmp
pop
shr
sbb
(bad)
iret
in
popf
dec
imul
inc
adc
(bad)
(bad)
jle
popf
les
fnstcw
mov
sbb
sbb
adc
ret
test
fmul
push
sbb
adc
mul
sub
out
mov
sbb
sub
sbb
dec
pop
mov
jmp
(bad)
add
ds
es
mov
sbb
(bad)
mov
repz
shl
jae
or
mov
mov
stos
test
outs
and
fcomi
enter
mov
adc
std
pusha
ror
retf
push
xchg
dec
sub
dec
fwait
dec
sets
inc
mov
popa
push
pop
js
inc
push
out
or
xlat
clc
mov
mov
push
stc
mov
sbb
xor
cmp
cmp
pop
cmps
ja
lods
int
int
pushf
mov
aaa
daa
fnstcw
inc
inc
cmps
rol
mov
int
repz
loopne
pusha
sub
jecxz
xchg
mov
mov
xor
sub
xchg
imul
jno
dec
in
rol
popf
xchg
jo
mov
cli
adc
cmp
jb
and
mov
lock
enter
mov
jne
lea
fwait
nop
das
inc
mov
(bad)
xlat
js
addr16
cmps
pop
lahf
fiadd
mov
fcmove
mov
mov
mov
xchg
lahf
loop
call
dec
loopne
cmp
ds
adc
jmp
push
imul
hlt
test
and
loopne
test
lods
inc
xchg
xchg
sub
loope
sbb
push
dec
xchg
add
lock
lock
pusha
adc
ss
or
lds
not
inc
clc
out
jg
stc
out
jg
stc
mov
imul
jbe
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
enter
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jg
xor
int
cwde
sahf
push
outs
cwde
sbb
shl
rcl
fstp
int
adc
fisttp
ja
xchg
ret
sti
inc
fidivr
jnp
add
sub
fisub
cmps
hlt
outs
xchg
ror
push
psrld
mov
jmp
and
and
mov
aam
shl
(bad)
dec
imul
(bad)
cmps
fidivr
arpl
dec
lahf
je
cmp
mov
in
out
pop
cmp
cmps
in
cld
js
in
scas
ficom
das
jns
test
adc
ret
fisttp
pop
add
push
adc
dec
jns
sub
(bad)
jo
cmp
pop
push
fs
pushf
popf
test
test
mov
shl
icebp
sar
pop
jmp
sbb
xchg
icebp
jl
lods
gs
push
mov
mov
jne
jo
shl
stos
cmp
add
or
mov
stc
movs
push
fnstcw
push
sbb
add
popf
(bad)
dec
imul
push
mov
in
mov
popa
stc
retf
outs
repz
je
out
sbb
loop
outs
jg
adc
mov
enter
into
mov
mov
push
in
pop
xchg
mov
cli
loopne
add
stc
pop
imul
adc
add
pop
shl
jns
xchg
ins
test
add
dec
cmp
mov
icebp
or
inc
cdq
lods
adc
sbb
mov
inc
xchg
in
or
ret
push
mov
xchg
jge
or
cmp
cmp
out
sub
cmps
inc
imul
pop
shr
and
cmp
mov
fs
popa
imul
mov
inc
into
jno
out
test
dec
lea
test
cmps
retf
pop
pop
js
mov
imul
push
xor
xchg
mov
mov
(bad)
in
aad
xor
push
shr
pop
faddp
jp
and
push
lock
add
stc
and
pop
test
jp
fsub
ds
cmp
imul
and
cs
xchg
mov
pop
aaa
pop
inc
mov
imul
push
or
mov
and
cmp
pop
clc
nop
xchg
push
mov
pop
and
push
jno
fisttp
mov
daa
not
in
jb
xor
and
popf
lds
imul
rcr
adc
inc
into
test
imul
lods
lods
sbb
je
loop
mov
mov
pop
mov
cs
fldcw
and
aam
ja
fbld
cdq
mov
mov
push
out
outs
xchg
or
push
push
pop
retf
adc
xchg
aam
fsubr
mov
pop
or
push
and
add
test
inc
out
aad
test
pop
leave
cmps
sbb
sub
adc
jecxz
dec
sub
mov
and
test
sub
xor
in
mul
push
pop
mov
daa
frndint
js
sub
ret
shl
test
sub
pusha
sub
outs
cld
or
cmp
movs
mov
retf
aas
jbe
cmp
jle
xchg
daa
xchg
fcomip
lock
in
cmp
cmp
rol
aas
adc
add
lahf
in
adc
dec
jmp
push
int
xor
rcl
stos
ss
dec
(bad)
mov
push
and
jmp
and
mov
enter
mov
jg
dec
addr16
jg
movlps
lods
inc
dec
hlt
in
jmp
add
mov
(bad)
imul
push
(bad)
(bad)
out
sbb
sub
fisubr
out
imul
out
xlat
sti
iret
jo
lods
jg
lods
repnz
(bad)
fistp
in
jecxz
push
jb
cld
sar
stos
adc
and
aam
int3
jmp
push
fistp
nop
push
cmc
pop
scas
scas
push
pushf
cmp
dec
fdivr
sti
je
pop
std
fxch
fstp
out
sub
imul
jae
push
fisub
mov
aad
or
xor
jecxz
iret
cmp
pop
repnz
add
leave
mov
aaa
mov
imul
js
mov
js
scas
movs
jmp
fst
mov
add
in
bound
cmp
push
in
pop
adc
stc
or
repz
(bad)
push
mov
out
lds
dec
aas
mov
mov
ja
test
and
lea
pop
in
push
(bad)
fnstenv
(bad)
retf
pop
test
or
sub
and
add
inc
inc
pop
fwait
adc
loop
pop
sbb
cs
mov
mov
jmp
out
mov
retf
adc
fs
inc
in
cmp
ds
mov
xchg
sub
dec
mul
jmp
and
(bad)
loope
mov
sub
fstp
xchg
xor
into
pop
cmp
push
cld
and
mov
jb
or
dec
test
sbb
sub
test
mov
in
fmul
lods
xchg
adc
popa
dec
sbb
jno
add
sub
ror
jno
mov
imul
xchg
rcl
pop
test
retf
sub
test
shl
pop
xchg
and
loop
pop
xor
jb
push
(bad)
push
sti
int3
mov
(bad)
gs
arpl
leave
inc
int3
jns
jp
in
pop
cli
xor
mov
mov
popa
or
push
outs
ja
arpl
pop
(bad)
pop
call
xor
jae
pop
frstor
mov
mov
mov
xor
xchg
xor
cmps
popa
cmp
pop
mov
ds
iret
test
ret
mov
push
inc
push
(bad)
xor
enter
push
add
push
jmp
pop
xor
outs
pop
inc
outs
mov
aaa
inc
and
pusha
jne
sar
std
loopne
mov
xchg
aas
sbb
into
pop
cli
xchg
fmul
xor
cld
cdq
xor
add
jle
mov
retf
sub
cmps
jns
push
jp
inc
movq
dec
dec
ret
and
in
call
ins
sub
lods
sbb
(bad)
std
in
aam
mov
ret
aam
lods
enter
xchg
cmp
ja
mov
xor
jge
mov
inc
aad
sbb
es
cwde
push
xor
clc
jb
push
pop
pop
mov
mov
shr
mov
pusha
and
or
mov
push
push
adc
xchg
jle
push
mov
retf
pushf
add
icebp
adc
aaa
outs
mov
aas
(bad)
jmp
add
ret
cmc
(bad)
xchg
je
out
mov
call
ds
(bad)
fidivr
dec
xchg
cmp
adc
arpl
call
sub
sub
sbb
xor
shl
shld
mov
lock
or
xor
das
or
mov
mov
inc
sub
neg
in
xchg
push
push
mov
xor
cli
xor
add
mov
mov
das
dec
xchg
mov
in
sar
xor
mov
jmp
add
mov
mov
cmp
jb
inc
in
fwait
jae
add
lods
sbb
stos
dec
cmp
mov
cmp
sbb
pop
fnstcw
adc
ds
add
mov
xor
sub
int3
inc
ret
mov
(bad)
loope
mov
mov
dec
sub
sti
call
(bad)
add
and
or
jg
push
mov
icebp
mov
push
or
mov
je
pop
jns
mov
xor
je
adc
cmps
or
out
aad
pop
(bad)
enter
mov
xor
iret
outs
test
pusha
adc
mov
pop
cwde
(bad)
push
out
cmc
das
stos
inc
dec
mov
shr
lds
mov
mov
gs
mov
push
mov
int3
int3
jae
in
dec
dec
inc
js
fadd
push
js
imul
push
aad
sti
pop
int3
mov
push
lahf
in
in
pushw
cmp
imul
out
pop
mov
xor
rcr
mov
sub
mov
dec
or
xchg
fidivr
div
xchg
or
jg
jmp
mov
das
jmp
sbb
sub
push
call
imul
fnstenv
pop
mov
xchg
sub
push
les
adc
in
ss
xor
je
rcr
jns
jmp
pop
sub
sbb
mov
add
inc
(bad)
pusha
sub
hlt
lds
xchg
xchg
cmp
loopne
(bad)
loopne
sahf
dec
push
imul
xor
mov
cmovp
inc
jmp
mov
add
cmp
out
imul
das
scas
cmp
(bad)
jno
daa
in
ins
cmp
add
mov
out
(bad)
retf
mov
mov
adc
push
lahf
jno
imul
or
scas
mov
jne
push
movs
adc
(bad)
sti
ret
loope
dec
retf
adc
mov
stc
cmp
adc
add
xor
push
pop
out
push
out
ins
and
push
xchg
push
ja
mov
pop
aam
(bad)
jmp
sbb
pop
jmp
inc
xchg
sbb
push
xchg
arpl
add
inc
fwait
xchg
mov
push
jg
ja
call
test
fldenv
pop
pop
jmp
jne
das
mov
lahf
gs
push
push
fisubr
inc
and
push
lock
outs
xor
cmps
and
xor
les
mov
push
rol
dec
or
ja
(bad)
call
mov
mov
lods
push
stos
ret
xor
cli
sub
pop
inc
ret
and
cmp
cmc
mov
sahf
pop
add
ds
dec
xor
cmp
stos
jne
xchg
adc
sub
out
inc
cmps
mov
shl
mov
jge
mov
jne
xlat
ins
in
fcom
cld
xor
jae
xchg
es
shl
ret
adc
push
fwait
rcl
jle
fstp
test
mov
lods
cmp
popa
pushf
aaa
stos
neg
fistp
xor
cwde
loope
lods
mov
add
lds
aad
mov
mov
pop
pusha
je
iret
lds
pusha
pop
das
pop
add
or
xchg
sbb
fs
sahf
into
aas
cmps
mov
jns
sub
and
leave
in
jno
cmp
out
daa
jmp
push
xor
movs
adc
push
dec
push
sub
repz
adc
sbb
jbe
push
jae
jg
cmp
adc
retf
pop
imul
push
mov
sbb
(bad)
fwait
add
add
xlat
mov
jp
enter
mov
push
and
pop
dec
lds
repnz
stos
dec
push
aam
pop
fdiv
sub
retf
test
sbb
lock
retf
xor
pop
xchg
pusha
cmp
xchg
cmp
xchg
imul
mov
mov
cmp
shl
jge
scas
jns
daa
dec
leave
cmc
mov
stos
mov
js
jg
inc
jnp
push
cmp
(bad)
pop
dec
push
ins
mov
nop
xor
push
pusha
cmps
(bad)
in
aam
inc
and
fst
jmp
arpl
retf
inc
sbb
std
sub
js
xor
loope
je
sub
fdiv
call
mov
test
jmp
fcmove
push
cli
xchg
into
mov
imul
js
ss
imul
mov
jnp
mov
sub
cdq
mov
(bad)
ja
sbb
sahf
mov
pop
xchg
push
dec
sbb
dec
loope
das
(bad)
rcl
dec
dec
mov
aam
lea
sbb
retf
push
cmc
fs
popa
cmp
mov
out
mov
sub
sub
sti
fs
add
adc
mul
inc
pop
aas
popa
repnz
daa
push
jle
ins
and
lods
xor
inc
icebp
fs
mov
sub
mov
out
(bad)
xchg
test
mov
int3
or
xor
jl
(bad)
inc
sbb
adc
cli
mov
add
ficomp
cs
xchg
or
push
pop
cmc
test
inc
loopne
bound
(bad)
fstp
or
dec
xlat
movs
into
stc
stos
cmp
push
push
lahf
lods
out
xchg
call
movs
add
dec
in
std
pop
jb
(bad)
icebp
cs
int3
sub
les
jle
pushw
js
ret
ins
nop
and
loope
mov
fwait
and
pop
out
popf
sub
das
and
out
sub
jge
mov
mov
push
test
cmp
cwde
add
sbb
fist
xor
push
push
add
sar
aam
sub
push
outs
aad
fnstcw
sbb
mov
sub
sahf
dec
inc
(bad)
jmp
mov
push
sbb
mov
outs
mov
adc
adc
test
call
lock
adc
ja
dec
jecxz
test
fisub
loop
mov
(bad)
(bad)
jo
test
mov
jmp
mov
mov
mov
jbe
nop
add
sti
fs
or
mov
xchg
out
adc
or
and
mov
xor
sbb
inc
push
cmps
idiv
mov
aam
clc
fs
pop
lock
mov
dec
mov
jg
sbb
pop
xor
add
pop
dec
jmp
xlat
int3
imul
jb
cmps
fs
ins
cwde
push
xchg
ficom
idiv
dec
in
sub
mov
xchg
sub
test
out
mov
lods
popf
fst
mov
(bad)
shl
xor
mov
icebp
into
pop
daa
mov
mov
stos
inc
xchg
push
mov
rol
mov
push
xchg
push
popa
push
dec
mov
and
cli
clc
and
jecxz
inc
sub
inc
push
cdq
aas
das
jne
inc
jmp
movs
nop
mov
retf
ficom
iret
aam
pop
out
cld
fadd
or
popf
adc
cmp
test
mov
loop
jnp
retf
mov
mov
xor
jge
in
pop
mov
push
test
pop
mov
daa
jne
movs
das
mov
mov
fwait
pop
outs
inc
mov
xor
lock
sbb
out
adc
je
jge
xchg
lock
aaa
adc
loopne
ins
aam
cs
mov
push
out
cs
aaa
sbb
xchg
xor
cdq
sbb
(bad)
jae
scas
(bad)
fild
ret
mov
retf
xchg
cdq
sar
xchg
push
int3
push
ret
xchg
mov
sbb
test
cdq
movs
dec
jae
ret
int
inc
es
fadd
push
and
pop
mov
sbb
das
or
mov
push
inc
fcom
jecxz
or
mov
jmp
adc
pop
outs
sbb
lods
ins
lds
mov
pop
les
sbb
dec
aas
pop
and
fdiv
push
sub
or
fdivr
das
mov
ins
imul
dec
jle
add
mov
pop
jns
add
sbb
and
cmps
cdq
dec
iret
ror
call
sbb
mov
cs
xchg
inc
bound
mov
js
dec
push
jno
push
sbb
push
rcr
mov
adc
jno
cmps
lock
jmp
les
mov
adc
xchg
fild
add
bound
dec
aas
imul
jp
cmp
popf
mov
pop
lock
xchg
in
jge
rcl
mov
jg
add
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
idiv
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
aam
into
xor
data16
in
scas
sbb
je
pushf
fidiv
xor
xor
call
add
sbb
shl
cmp
dec
rol
js
mov
sbb
fldenv
jl
cmc
adc
out
test
(bad)
out
pop
xchg
mov
loope
mov
cmps
mov
xor
add
adc
mov
inc
jb
mov
pop
pop
and
pop
pop
shl
sti
inc
ins
cmp
cmps
ins
out
mov
jecxz
jp
cmps
loop
aad
xchg
mov
pop
(bad)
retf
mov
dec
inc
sub
std
jmp
nop
fwait
push
push
jmp
sti
push
and
fcmovb
shr
leave
cmps
fs
adc
fld
outs
fsubr
jecxz
ja
dec
retf
dec
(bad)
xchg
mov
retf
mov
mov
xchg
mov
jl
in
adc
sub
and
pop
enter
out
push
mov
ret
fucomip
repz
and
movs
jb
push
(bad)
gs
mov
outs
sar
cmp
int
inc
adc
xchg
mov
push
add
call
pop
xor
clc
(bad)
xor
ror
push
mov
jae
adc
cs
mov
adc
(bad)
ja
fild
int
or
cld
mov
add
jle
div
and
adc
mov
pop
js
fbstp
jge
or
mov
ins
pop
inc
pop
ss
out
dec
jle
lods
sbb
or
out
loop
(bad)
pop
sub
fdivr
scas
addr16
dec
xor
dec
retf
and
shl
iret
mov
push
dec
(bad)
retf
(bad)
and
dec
outs
inc
je
popf
inc
(bad)
mov
cmp
inc
repz
sbb
push
xchg
std
dec
cmp
lods
add
mov
mov
imul
mov
jp
into
rep
mov
(bad)
xor
pop
rcl
sub
push
mov
cmp
daa
gs
inc
pop
test
leave
or
pop
jne
cmp
popa
lods
cmp
ret
add
out
js
sbb
sub
into
fist
es
(bad)
cli
push
push
pop
push
ins
pushf
sti
jge
aaa
mov
mov
cmp
fcmovnb
call
cmp
xchg
stos
scas
push
lds
cmp
jmp
leave
mov
mov
xchg
cs
adc
pusha
das
mov
popf
push
mov
mov
aad
in
adc
lock
dec
xchg
sub
icebp
xchg
(bad)
pop
in
or
aaa
dec
push
call
loopne
and
mov
xchg
imul
pusha
clc
xchg
push
xchg
pop
fimul
imul
int
inc
in
push
fsubr
mov
cld
inc
ins
aaa
pushf
mov
cmp
or
je
sub
mov
or
sub
mov
inc
bound
cmp
dec
fnsave
out
or
jge
addr16
jae
les
xchg
(bad)
xchg
xlat
inc
fucomp
cmp
cmps
out
dec
xchg
out
cmp
pop
(bad)
jecxz
xchg
xchg
outs
lock
pop
dec
or
xchg
jmp
mov
scas
cmps
mov
jo
pop
(bad)
jmp
ret
push
enter
xchg
jno
cs
mov
adc
cmc
jmp
fild
hlt
dec
outs
xchg
xor
imul
call
movs
cmp
imul
dec
inc
dec
mov
test
cdq
xor
movs
mov
pop
or
jp
stos
sub
cdq
mov
cmp
cwde
cmp
dec
les
xchg
ss
adc
jb
not
mov
test
movs
call
into
scas
push
fld
mov
scas
xor
push
hlt
jae
cli
and
out
shr
daa
xchg
fadd
pop
sti
out
mov
xor
mov
sbb
mov
pop
pop
cmp
test
and
and
jo
or
test
pop
and
and
mov
(bad)
dec
and
cdq
test
mov
cmp
push
(bad)
and
aaa
cmp
mov
add
jecxz
inc
push
imul
jb
inc
mov
mov
sub
inc
mov
test
in
add
sbb
aad
out
xor
call
add
pushf
cld
jbe
and
sbb
jnp
dec
dec
jge
test
ins
mov
mov
sbb
stos
into
xchg
arpl
mov
fcomp
in
aas
lods
cwde
retf
loope
pop
mov
ret
jae
adc
hlt
mov
xor
arpl
dec
inc
retf
adc
or
mov
pop
loop
(bad)
add
hlt
ret
xchg
sub
call
cli
or
stos
mov
imul
int
test
iret
pop
or
cdq
push
idiv
arpl
imul
cld
or
bound
out
pushf
mov
js
outs
stc
mov
movs
push
in
outs
jno
push
sar
ret
mov
stc
popf
pop
and
ins
push
retf
push
xor
xchg
outs
in
loope
push
mov
sub
xor
out
or
sbb
push
or
repnz
ds
mov
test
jecxz
cmp
in
dec
mov
retf
movs
add
pop
adc
adc
fiadd
out
pop
xchg
lods
sbb
frstor
mov
fdivr
into
fstp
xor
mov
test
xchg
jbe
adc
(bad)
fwait
or
jle
pop
xchg
jbe
or
mov
aad
sub
mov
dec
lods
xchg
pop
inc
cmps
inc
mov
add
jle
xor
ds
movs
adc
sub
inc
push
sar
cmp
fmul
enter
mov
sub
inc
or
sti
and
addr16
add
xchg
out
aad
or
sbb
int
mov
sbb
add
cwde
mov
xor
xchg
cmp
fiadd
lods
jge
out
xlat
or
mov
xor
mov
aas
mov
sub
out
adc
fild
stc
bound
cmc
xchg
mov
inc
je
stos
imul
fild
pop
mov
dec
fucom
mov
test
mov
mov
pop
stos
push
movups
mov
ins
cmp
push
in
nop
dec
pop
rol
and
fadd
fwait
xor
lods
mov
push
jge
popa
push
arpl
jge
icebp
push
popf
movs
dec
inc
xchg
rol
or
imul
sub
int3
mov
sub
sbb
fucomi
dec
xor
das
add
inc
clc
inc
es
inc
stc
fucomp
pop
xchg
pop
mov
movaps
repz
push
mov
inc
and
sbb
mov
cmps
stc
push
jecxz
xchg
in
ss
push
sahf
hlt
popa
imul
imul
and
inc
jg
(bad)
(bad)
std
in
fisubr
bound
fwait
aam
sti
test
dec
in
gs
mov
add
call
out
imul
mov
mov
loope
inc
inc
xlat
mov
lods
aad
push
pop
outs
sub
arpl
enter
repz
mov
adc
xchg
mov
add
loopne
and
aas
inc
xchg
ret
pop
xchg
sub
xor
and
shl
mov
mov
loop
out
movs
or
xor
mov
jnp
push
arpl
fistp
movs
lods
mov
xchg
xor
mov
sub
sbb
or
mov
test
add
stc
hlt
sub
out
hlt
shr
call
or
pop
push
cvttps2pi
test
pop
mov
cmp
xor
xchg
jns
sbb
xor
mov
test
test
cmp
jmp
jl
mov
fnsave
sub
sub
fist
pusha
mov
std
(bad)
and
sbb
imul
cmps
mov
cld
pop
xchg
aad
dec
mov
loop
loopne
lods
leave
xor
mov
xor
xlat
pop
stos
loopne
scas
cmp
in
je
push
test
(bad)
les
ror
mov
cmp
xchg
or
lock
(bad)
mov
inc
mov
jg
and
stc
pop
cli
pop
sti
loopne
jge
out
cmp
iret
sbb
out
repz
push
or
std
mov
mov
add
mov
mov
pop
imul
fst
sbb
sub
add
stc
sbb
mov
cwde
jmp
pop
fs
ja
mov
push
hlt
lahf
(bad)
jp
pop
not
jmp
xchg
adc
jge
arpl
sahf
and
cli
or
aad
fwait
int3
pop
jns
mov
xchg
xchg
pop
imul
inc
add
out
xlat
push
test
ins
push
inc
repz
or
iret
pop
mov
hlt
pop
pop
in
mov
cmp
xor
pop
or
in
sahf
mov
xor
outs
and
cmp
ds
retf
mov
jge
xor
sub
nop
xchg
loopne
push
xchg
test
mov
jbe
stos
jp
sub
iret
jmp
pop
ins
xchg
xchg
add
mov
iret
mov
push
or
mov
adc
push
stos
lea
loopne
loop
fstp
or
leave
push
scas
fwait
ins
pop
push
dec
fistp
mov
cmps
jge
mov
inc
leave
cmp
and
fld
aas
push
mov
fucomp
xor
xchg
adc
push
add
in
mov
xchg
cmps
dec
ins
dec
stc
stc
mov
scas
je
mov
cli
add
jbe
out
shl
fs
stos
push
add
xchg
mov
add
outs
inc
test
sahf
in
jnp
mov
push
int
(bad)
nop
lock
jl
setle
cld
xchg
push
js
add
push
cmp
int
retf
(bad)
sti
inc
ja
xchg
ss
sbb
cmp
jmp
out
push
ret
rcr
xchg
call
ins
(bad)
mov
dec
int
mov
ror
sahf
outs
pop
mov
(bad)
mov
jae
mov
xchg
mov
dec
inc
pop
cmp
pop
pop
push
mov
mov
call
outs
mov
stos
clc
lds
hlt
int3
movhps
daa
mov
jle
movs
fs
or
xor
aas
xor
push
cmp
mov
popa
daa
push
xchg
rol
enter
cmp
push
scas
mov
adc
ins
jb
or
cmp
sbb
out
or
xchg
shr
nop
inc
ins
push
cmps
je
mov
ret
repnz
cmp
xchg
in
es
jb
int3
and
loop
stos
xchg
test
(bad)
in
mov
adc
jg
add
or
outs
das
cld
sbb
sbb
inc
add
in
xchg
jle
mov
out
ficomp
lods
out
enter
mov
mov
jno
dec
scas
and
aas
cld
loop
mov
pop
cmp
push
mov
dec
js
js
adc
loopne
xchg
mov
mov
pop
jne
dec
lds
fisubr
mov
(bad)
mov
push
aad
addr16
fucomip
mov
add
xor
jmp
and
jno
jno
push
jne
mov
cli
movs
jmp
out
push
push
add
jo
sbb
pushf
neg
arpl
jns
retf
xor
shr
movs
mov
es
ja
xchg
dec
sub
enter
push
sub
jb
mov
inc
xor
jmp
xchg
aam
lock
xchg
call
(bad)
push
pusha
ds
pop
adc
xchg
pop
mov
lea
sbb
cmp
nop
jge
popa
out
cli
xchg
mov
cmp
xchg
js
and
lods
loop
jae
loop
pop
dec
cs
cmps
add
pop
and
cli
cmc
mov
jb
retf
lahf
out
pop
test
mov
test
sub
and
pop
hlt
(bad)
(bad)
loope
stos
and
mov
int3
xchg
test
rcl
mov
jle
dec
loope
loop
cdq
jp
out
and
stos
cmps
mov
and
sbb
frstor
stc
dec
and
mov
shl
das
div
sbb
mov
mov
iret
mov
call
push
(bad)
mov
sahf
xchg
fiadd
mov
mov
aam
iret
fadd
cli
mov
in
mov
sbb
jo
out
sar
mul
leave
xor
add
ficomp
mov
std
call
jl
xchg
mov
neg
mov
add
sahf
xor
test
popa
cmp
adc
(bad)
or
pcmpeqd
sbb
mov
int
aas
stc
mov
pushf
adc
aas
xor
js
neg
iret
ror
cwde
sbb
das
sbb
push
mov
ins
or
jnp
stc
cmps
adc
ret
xchg
(bad)
sub
cmp
mov
ret
ins
(bad)
fst
xchg
dec
cmp
nop
stc
cmp
ds
mov
(bad)
jmp
inc
imul
inc
aaa
movs
jne
pop
outs
jle
push
mov
mov
xchg
(bad)
fcomp
icebp
pop
and
jecxz
aad
in
sbb
imul
mov
dec
jo
xchg
add
loopne
push
aad
adc
jl
sbb
xchg
pop
and
add
outs
(bad)
xor
lods
adc
push
xchg
push
loope
cmp
out
or
fdivr
xor
mov
xlat
jmp
lods
and
mov
xchg
jae
lock
pop
jb
push
mov
or
add
jno
test
jmp
outs
movs
push
int
pushf
lock
adc
pushf
ret
xor
add
cdq
aam
shr
pop
test
lahf
ret
adc
lods
cmp
rep
sub
inc
mov
mul
xchg
xchg
lods
stos
xor
or
leave
jecxz
and
sub
int
sbb
xchg
addr16
or
shl
sbb
int3
or
jns
mov
js
je
inc
out
jg
xchg
cmc
stos
fsub
xor
xchg
test
scas
sti
ret
cmps
lods
mov
xchg
pushf
in
rcr
fwait
ds
dec
jmp
or
jmp
das
cld
nop/reserved
add
xchg
(bad)
loop
inc
xor
retf
pop
jmp
mov
sub
pop
xor
push
fs
popf
mov
das
aaa
cmc
xchg
mov
dec
mov
arpl
leave
sub
call
jae
ja
das
cmp
xor
dec
xlat
fstp
push
les
lds
cmp
popf
inc
xlat
fbld
shr
mov
test
popf
sbb
ret
adc
loop
test
mov
sub
dec
outs
sub
xor
inc
addr16
in
or
ins
fisub
jo
stos
inc
fnsave
pop
lds
jne
inc
sub
hlt
jne
sti
les
test
nop
loop
push
leave
xchg
popf
adc
cmp
int
or
into
adc
in
not
xchg
hlt
lods
lahf
xchg
dec
enter
hlt
mov
pop
bound
mov
or
push
mov
std
es
sub
mov
dec
dec
jno
pop
xchg
dec
(bad)
mov
iret
pop
xchg
into
es
lahf
push
nop
iret
sub
sub
movs
mov
xchg
pop
call
xchg
sbb
sub
test
xor
mov
or
imul
mov
int3
mov
mov
lds
loope
repnz
push
or
out
outs
mov
adc
icebp
sub
mov
xchg
xchg
add
std
(bad)
sub
mov
fs
cmp
inc
pop
push
out
loope
sbb
pop
lea
andnps
imul
add
cdq
int3
out
daa
xchg
jno
pop
scas
jp
sbb
jmp
pop
ja
inc
mov
cmp
mov
pop
or
sub
sub
jnp
jle
mov
shl
out
fimul
pop
sbb
in
pop
call
mov
cmp
xor
pushf
push
ss
imul
fisttp
in
mov
sahf
xchg
sbb
cmp
test
clc
into
push
xchg
shr
jmp
cmp
pop
dec
adc
inc
or
mov
lods
add
stc
out
jg
stc
out
jg
scas
add
inc
and
xlat
popa
nop
int
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aad
and
ret
add
ror
(bad)
xor
mov
mov
push
push
sar
cwde
cwde
ds
or
rol
out
in
(bad)
jle
ja
xchg
js
add
fldcw
inc
and
jae
fucomi
xchg
adc
or
stc
mov
mov
stos
out
or
or
aaa
sbb
bound
cmc
sub
pop
(bad)
inc
movs
cmc
jge
pop
int3
ins
retf
fadd
fs
sbb
scas
xchg
jb
fucomp
sbb
pop
sahf
pop
ja
sbb
and
test
hlt
xchg
jo
cmc
mov
cmp
push
fs
dec
rcr
pop
push
inc
daa
xchg
mov
pop
pop
cmc
arpl
add
jae
scas
out
ins
xchg
sub
pop
into
xor
jecxz
sbb
imul
daa
lods
cld
cmp
not
jecxz
adc
outs
ret
(bad)
outs
jge
mov
out
and
int3
(bad)
data16
shl
cwde
std
push
pop
retf
cdq
leave
push
mov
shl
(bad)
xlat
mov
or
aas
push
sub
pop
popa
repz
mul
mov
add
push
cmps
popa
in
in
into
jnp
and
sub
xchg
call
or
mov
cwde
inc
stos
mov
aaa
cmp
ret
fst
push
or
push
scas
rcl
call
ins
or
mov
lods
and
push
stos
repz
inc
out
cdq
jo
adc
mov
shl
into
movs
aas
sub
ins
push
xchg
mov
popf
add
mov
test
jb
loop
ins
inc
mov
icebp
jle
push
xchg
jg
aad
cs
mov
add
xchg
push
and
or
xor
dec
ret
inc
cld
fcomp
lods
out
push
and
in
pop
inc
jp
fwait
mov
fistp
cs
inc
retf
in
adc
pop
(bad)
imul
jge
cmc
std
or
jl
cmp
rcl
or
sub
(bad)
sub
cmp
xor
imul
add
(bad)
test
mov
mov
push
test
adc
loopne
pop
dec
and
loop
addr16
loopne
cs
addr16
cdq
test
pop
cld
mov
inc
arpl
sbb
ins
call
inc
int
or
xor
gs
pop
jg
addr16
fstp
(bad)
mov
mov
or
data16
icebp
inc
adc
fcmovb
pop
inc
adc
fidiv
repnz
in
test
mov
pop
xchg
push
ss
add
cmps
push
push
mov
add
add
aam
fdiv
cld
push
pop
mov
pop
int3
xor
jae
xor
(bad)
jp
push
cs
rol
mov
xchg
xchg
dec
fsubr
std
sub
and
jle
int
push
mov
jns
jecxz
mov
cdq
repz
(bad)
(bad)
jb
sbb
dec
pop
mov
mov
or
arpl
sahf
sub
frstor
gs
dec
mov
push
jmp
fs
mov
lock
push
shr
cmps
aam
div
mov
int
leave
xor
outs
add
cmps
inc
push
push
aam
mov
mov
pop
test
mov
mov
(bad)
retf
sbb
sub
cmp
repnz
push
rcr
(bad)
repnz
sub
sbb
sub
sub
sahf
(bad)
sub
lds
jmp
add
bound
push
add
push
dec
aad
xchg
dec
mov
cmc
repz
fsub
in
inc
arpl
in
pop
and
repnz
inc
inc
xor
stos
pop
nop
test
dec
jbe
mov
dec
fild
or
jae
stos
xchg
scas
and
mov
sbb
test
jo
aas
sub
fucom
ror
retf
sbb
mov
iret
mov
lea
mov
cmp
mov
lea
lods
pop
int
push
sub
sbb
jle
mov
scas
push
mov
pop
stc
punpckhwd
daa
mov
enter
cmp
xor
xor
pushf
xchg
adc
nop
fisttp
xlat
and
std
int3
xor
or
push
test
scas
cmp
(bad)
mov
shl
lods
mov
push
cmp
movs
xor
shl
xchg
inc
fisub
adc
in
and
rcl
(bad)
loop
popf
stos
add
adc
(bad)
xor
sbb
sbb
mov
ret
xor
and
lock
inc
jmp
xchg
adc
dec
fcom
pop
icebp
mov
(bad)
enter
xchg
sbb
int3
xchg
lds
mov
fdiv
sub
cli
(bad)
fwait
or
dec
sbb
push
pusha
dec
dec
iret
cmp
daa
mov
clc
sbb
jbe
cmp
and
lea
das
or
pop
aas
push
adc
mov
les
(bad)
xor
jle
shr
push
(bad)
jmp
ficom
sbb
in
or
ss
loop
imul
mov
sbb
pop
enter
sahf
clc
push
ror
stos
push
pop
adc
jb
pop
inc
imul
ror
dec
ss
push
cmp
(bad)
imul
aam
popa
aam
lods
arpl
xchg
ja
aam
pop
add
adc
xchg
jmp
fld
pop
std
in
xor
jmp
add
pop
mov
sbb
clc
fisttp
aas
sub
cmps
fs
stc
jmp
ss
cmps
cmc
ffreep
xlat
xchg
and
ror
add
lods
sub
adc
(bad)
sbb
mul
inc
mov
xor
fwait
mov
mov
stos
jo
stc
jge
pop
ret
fld
fadd
sbb
sbb
(bad)
hlt
mov
iret
mov
pop
sbb
out
cmc
adc
(bad)
sub
fxch
sub
push
mov
pop
aam
das
or
fbstp
aam
sub
jo
nop
adc
ins
fimul
mov
cmps
test
(bad)
jnp
fwait
mov
inc
not
nop
(bad)
fdiv
shl
loopne
sbb
es
push
sbb
retf
xchg
xchg
(bad)
stos
or
out
xchg
dec
push
(bad)
mov
cmc
mov
scas
call
jmp
stos
hlt
mov
push
enter
loope
sub
mov
xchg
push
bound
fstp
fistp
xchg
les
movs
pop
stos
sar
push
mov
std
or
jmp
cmp
cmp
mov
sub
movs
mov
xchg
ficomp
inc
fdivr
scas
test
ret
mov
or
imul
fimul
jp
inc
mov
mov
or
(bad)
fcmovu
dec
(bad)
mov
xor
and
xor
out
ds
jl
mov
inc
adc
mov
fisttp
lahf
mov
dec
test
and
loopne
pop
mov
sbb
test
(bad)
fisttp
xor
cld
loope
ins
push
dec
sub
fidivr
es
jmp
sub
in
cmp
adc
mov
std
or
and
push
test
dec
sub
popf
dec
repz
adc
(bad)
ins
data16
xchg
loope
(bad)
loop
fistp
lods
cmc
dec
sbb
popa
mov
hlt
xlat
cld
std
bound
loope
test
cmp
xchg
jl
sbb
iret
pop
cld
mov
aaa
sahf
js
dec
call
or
sbb
push
test
xchg
out
mov
and
inc
xor
or
ret
jmp
leave
jge
push
retf
sbb
or
ins
pop
(bad)
xchg
jmp
mov
je
aad
ins
pop
fwait
lods
std
inc
retf
sub
es
or
xor
loopne
rcl
jle
loop
adc
jmp
sbb
cmp
aad
dec
repnz
adc
gs
add
or
out
rol
movs
sub
into
xor
mov
fwait
jecxz
cdq
sub
pop
cmps
cmp
das
mov
repnz
xrelease
retf
fld
in
add
fimul
inc
fnsave
pusha
mov
add
push
mov
add
jno
fs
mov
and
(bad)
in
inc
in
retf
sub
dec
bound
outs
mov
es
mov
mov
out
push
dec
cmps
scas
cld
movs
outs
mov
aad
imul
and
test
retf
cwde
ins
pop
cmp
mov
push
out
or
xchg
leave
lods
stos
mov
adc
or
mov
pop
leave
push
out
push
xchg
fwait
ds
repnz
xchg
mov
fdivr
inc
jl
add
sub
dec
and
test
mov
and
les
jne
or
push
jge
mov
es
fstp
mov
jmp
xor
stos
ficomp
pop
ja
adc
sub
icebp
mov
ret
jg
cmps
inc
pop
jne
aaa
loope
xor
xchg
scas
fwait
push
dec
pop
sbb
mov
aas
push
stc
aaa
inc
push
addr16
mov
nop
fimul
xchg
mov
jno
scas
dec
call
adc
pusha
les
adc
js
pop
dec
call
dec
movs
pop
data16
and
mov
push
push
pop
or
fsubr
aam
in
sbb
cmp
fisub
clc
jns
mov
sbb
and
cdq
mov
jmp
fsub
xchg
test
lea
shl
pop
(bad)
(bad)
les
into
sahf
cmc
mov
popa
cwde
xchg
xchg
xchg
cli
mov
(bad)
aad
dec
in
gs
repz
mov
pop
add
pop
(bad)
movs
inc
ret
into
out
jns
add
jp
inc
int3
dec
xchg
in
push
jb
xor
outs
inc
xchg
xor
mov
fst
adc
pop
push
and
scas
add
mov
add
sub
cmp
(bad)
popa
daa
jmp
int3
mov
iret
mov
xor
pop
cmp
out
jmp
iret
inc
js
cmc
cmps
(bad)
xchg
dec
lds
inc
sbb
inc
pop
iret
jne
mov
add
mov
pop
mov
rcl
loop
push
and
mov
test
test
jbe
fdiv
(bad)
fmul
jae
fdivr
jo
pop
iret
arpl
(bad)
mov
mov
std
rcl
lods
push
sub
icebp
inc
repnz
cmp
(bad)
pop
shl
call
and
shl
cmp
shl
mov
adc
jle
jae
fsubr
scas
lock
mov
jbe
cdq
mov
adc
fwait
cs
stos
outs
ret
push
mov
loop
mov
xor
jg
aaa
es
(bad)
bound
ficomp
jo
icebp
mov
popf
sar
ins
(bad)
mov
sub
push
mov
pop
mov
pop
pop
dec
iret
daa
bound
outs
test
es
bound
lea
mov
mov
ss
addr16
xor
ret
cli
jecxz
jmp
jns
ror
pop
fdivr
pop
xor
loop
jae
mov
cmp
push
aad
adc
inc
js
data16
(bad)
pop
jmp
sub
mov
lods
mov
push
jmp
adc
push
cmp
sub
pop
jmp
xchg
ret
pop
fnstcw
pop
sti
fwait
add
popa
aaa
and
popa
mov
mov
pop
push
cmp
stos
std
ror
adc
rol
and
fstp
call
or
mov
cmp
inc
outs
aam
inc
imul
popf
enter
fucom
cmps
xchg
bound
nop
popf
mov
jne
hlt
pushf
(bad)
mov
ins
ret
jb
bound
inc
std
and
in
xor
pop
cmp
sahf
push
pop
push
add
and
repnz
xchg
(bad)
xchg
push
sbb
sub
sub
in
or
test
push
fdiv
inc
sub
xchg
into
ins
jmp
push
(bad)
xchg
inc
mov
mov
cmp
jno
dec
push
fst
mov
xchg
std
rol
loopne
and
leave
push
and
cmp
jo
jne
or
cmc
hlt
push
nop
ret
(bad)
sbb
lea
fcom
ins
fwait
push
jmp
gs
leave
pusha
jnp
jmp
dec
pop
(bad)
mov
or
cli
xchg
push
(bad)
mov
adc
add
or
add
inc
xor
pop
clc
lock
clc
es
push
mov
retf
pop
xchg
cmp
jge
addr16
pop
bound
rcr
xchg
(bad)
jae
outs
jno
aam
lods
dec
mov
fst
mov
lahf
lods
frstor
lods
and
dec
add
mov
mov
ret
(bad)
outs
movs
arpl
mov
adc
xlat
mov
push
adc
(bad)
push
adc
fsub
push
cs
loop
int3
fld
cmc
jae
inc
dec
sub
dec
inc
(bad)
pop
int3
je
out
jg
xchg
ss
fbld
ret
push
lods
daa
sbb
in
stos
das
lea
mov
dec
fsub
pusha
lds
test
and
fwait
inc
and
cmp
and
lahf
cmc
mov
xlat
dec
inc
sbb
jmp
inc
outs
pusha
(bad)
cmp
jle
xor
test
or
outs
pusha
and
aas
popf
pop
push
jmp
lea
loopne
les
loop
mov
test
pusha
movs
cmc
out
pop
movs
hlt
inc
test
cmps
std
leave
cmp
cs
out
lds
clc
call
jo
sti
dec
lgs
or
out
mov
mov
pop
inc
gs
es
rol
and
pop
(bad)
shr
fwait
imul
lds
mov
cmps
lea
add
lds
sub
into
cs
sub
and
cmp
push
mov
pop
adc
mov
sahf
pop
adc
rcr
dec
sbb
lods
xchg
dec
pusha
popa
mov
mov
and
dec
mov
mov
cmp
mov
sub
das
mov
pusha
mov
out
pop
xor
fmul
push
daa
inc
xchg
push
or
push
add
dec
gs
adc
xor
retf
sar
pop
inc
fdivr
cdq
cmp
jo
inc
aad
jbe
push
push
inc
push
cli
lods
mov
sub
std
push
stc
mov
fadd
ins
inc
pusha
icebp
dec
fcomp
jle
pop
jb
mov
retf
add
rcl
fwait
or
add
push
xchg
fiadd
jns
add
jp
or
xchg
movs
pusha
jmp
inc
adc
loop
sub
fwait
xor
xchg
fsubr
in
sbb
push
ror
fst
push
push
inc
cwde
dec
jbe
xor
and
inc
and
mov
cmp
push
push
iret
mov
sar
scas
fild
cmp
mov
mov
xchg
fidivr
ins
jne
push
in
xchg
iret
popf
mov
jns
mov
adc
in
adc
loope
dec
mov
pop
aaa
mov
and
imul
cwde
cld
iret
ret
das
adc
mov
sub
jmp
and
fld
or
push
sub
dec
xchg
mov
cwde
jnp
enter
dec
sbb
pop
retf
sub
rcr
hlt
pop
or
pop
je
sbb
push
cmp
mov
cmp
mov
cs
mov
inc
xchg
mov
cmps
hlt
push
mov
dec
cdq
sbb
pop
add
xlat
sub
inc
mov
(bad)
enter
or
in
mov
arpl
mov
jbe
add
xchg
sbb
sbb
pop
xchg
mov
jo
mov
push
or
add
ja
scas
add
sbb
dec
dec
dec
push
push
sar
jne
xor
lods
jmp
or
stos
or
shl
ret
mov
(bad)
ss
outs
test
xor
es
fwait
mov
dec
les
outs
gs
das
mov
jg
lock
cwde
dec
cld
cmp
iret
xchg
mov
inc
sub
and
mov
xchg
pushf
push
mov
hlt
and
aas
(bad)
cld
repz
aas
(bad)
cld
repz
jmp
sar
out
sar
lods
aaa
sub
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
(bad)
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
ror
jo
ret
rcr
fnsave
push
xchg
xchg
xchg
out
inc
dec
dec
ja
je
popf
test
xor
cmp
jp
add
outs
outs
mov
fwait
(bad)
scas
mov
pop
cmps
sub
fsubr
mov
cmp
pop
test
pop
mov
sbb
sbb
movs
dec
nop
movs
ja
fdivr
outs
dec
clc
out
or
push
hlt
iret
and
shl
aas
lods
or
and
adc
out
jb
faddp
or
mov
stos
outs
pop
fs
xor
xor
jno
frstor
mov
test
push
sar
enter
mov
ret
mov
rcl
inc
inc
sub
bound
test
xor
(bad)
std
xor
xor
(bad)
push
leave
mov
leave
sub
int
mov
jp
pmaxsw
pushf
add
scas
das
adc
push
das
mov
das
fbstp
popf
xchg
add
jle
cs
jne
in
fdivrp
or
xor
mov
jle
fmul
push
and
jl
lahf
push
and
inc
jecxz
jg
xor
test
fisttp
mov
xchg
retf
inc
xor
push
in
mov
inc
and
add
out
lds
imul
adc
mov
int3
jnp
lods
add
jg
inc
test
xchg
push
inc
mov
fcomi
mov
jle
ror
mov
sbb
shr
dec
mov
push
xchg
(bad)
call
in
and
adc
iret
xchg
stos
clc
or
inc
push
enter
xchg
sti
(bad)
sahf
paddw
xchg
loop
push
xlat
(bad)
into
cmp
icebp
leave
sbb
leave
lods
mov
mov
(bad)
mov
test
sub
jae
sub
mov
jmp
movs
xor
shl
dec
shl
and
dec
cmps
fldcw
and
add
js
out
pop
xor
sub
cmps
and
movs
shl
pop
daa
fs
das
mov
sbb
lea
adc
inc
movs
leave
dec
fistp
mov
dec
ret
test
int
push
xor
loope
mov
(bad)
(bad)
cs
push
add
addr16
jmp
pop
sub
inc
pop
mov
icebp
icebp
mov
mov
mov
test
sahf
jg
xor
lock
mov
xchg
das
pop
test
popa
xlat
adc
jbe
dec
mov
and
popf
inc
jnp
dec
call
sub
call
fmul
or
and
fisttp
jnp
arpl
stos
jle
clc
dec
outs
push
imul
rcl
cmp
aas
mov
sub
pop
mov
push
jle
xchg
or
imul
adc
int3
cs
je
xlat
fsubrp
jbe
cmp
or
mov
into
cmc
stos
xchg
dec
sub
push
mov
xor
cmc
cmp
jecxz
push
mov
fsub
retf
jo
test
fs
pop
fcom
or
mov
and
fs
dec
sub
aad
dec
pushf
mov
mov
fimul
jbe
int
push
cmp
(bad)
push
ja
push
das
gs
out
xchg
mov
into
adc
cmp
popa
cld
scas
cwde
lods
stos
pop
les
repz
outs
pop
daa
dec
gs
lods
push
sbb
dec
mov
mov
out
rcl
retf
out
add
jle
mov
loope
fimul
mov
inc
(bad)
sti
xor
xchg
xchg
mov
adc
jle
repnz
xchg
push
fcmovne
stc
cld
or
addr16
retf
dec
test
pop
(bad)
out
pop
lods
fst
shl
xchg
mov
pop
stos
inc
(bad)
pop
stos
xchg
jp
cld
sub
dec
repnz
adc
jnp
das
add
rcr
in
push
inc
pop
(bad)
mov
pslld
iret
pop
adc
out
xor
es
adc
in
fld
push
sub
sub
les
sti
scas
or
sub
cmp
and
ins
or
mov
inc
out
in
push
push
je
cld
(bad)
(bad)
mov
xchg
xlat
push
jns
(bad)
imul
dec
clc
fdiv
fs
xor
adc
pop
dec
adc
cmp
fbstp
mov
push
xor
push
test
jns
lods
div
or
iret
jge
push
test
dec
mov
and
call
adc
js
xchg
add
pop
push
sbb
shl
(bad)
in
or
xchg
adc
dec
in
aas
jmp
add
pop
xchg
outs
leave
ins
das
and
jmp
and
jnp
jg
mov
jle
push
mov
retf
xchg
stos
add
jl
or
xor
pop
int3
daa
std
pushf
into
hlt
(bad)
push
push
adc
es
push
les
out
cmp
fld
nop
(bad)
mov
(bad)
or
lock
xchg
fst
sahf
cmp
scas
and
ss
push
adc
loopne
rcl
jp
call
imul
(bad)
jae
in
xchg
jecxz
lods
inc
push
xchg
adc
jo
arpl
es
cmp
mov
imul
ins
mov
pop
aas
push
bound
sub
adc
and
sub
out
dec
scas
bound
xor
jae
sbb
mov
hlt
(bad)
push
inc
xor
or
pop
clc
int3
xchg
je
xchg
xor
pop
push
movs
cld
hlt
lods
rol
add
xlat
std
jl
sub
adc
sub
dec
xchg
test
jg
pop
cld
mov
cmp
lods
icebp
xlat
dec
ss
stc
test
fs
mov
mov
arpl
in
jl
cmps
sub
mov
cli
es
cmp
sbb
pop
adc
mov
xor
(bad)
shl
ins
loop
xchg
mov
out
inc
fmul
icebp
cmp
stos
mov
or
mov
dec
outs
loopne
or
repz
(bad)
xor
(bad)
push
test
lods
mov
mov
into
scas
ret
xchg
xchg
in
or
mov
cmps
mov
stos
(bad)
mov
imul
mov
xor
xchg
out
pop
xor
pop
jecxz
xor
shl
xchg
stc
inc
or
stos
cmp
xor
inc
fdivrp
cmp
mov
popf
jle
(bad)
fisubr
jb
fldcw
pop
sub
pop
scas
inc
xchg
dec
call
push
jne
cld
out
call
mov
call
movs
xor
loope
pop
sahf
arpl
mov
pushf
int
jp
adc
cwde
cmps
(bad)
scas
cs
lods
mov
(bad)
adc
xor
pushf
int
loopne
cmp
pop
je
pop
leave
(bad)
sbb
sbb
loope
and
stc
mov
not
lds
cmps
sub
pop
clc
imul
les
call
mov
pop
ins
mov
je
jns
das
rol
ret
div
jge
js
jl
sub
add
neg
xchg
jge
gs
stos
retf
ficom
dec
sub
retf
retf
scas
loope
mov
leave
cmp
fsubr
pop
call
(bad)
push
aas
push
ret
pushf
jecxz
(bad)
xor
pop
inc
push
data16
xor
xchg
leave
or
adc
cmps
stos
and
popa
dec
(bad)
mov
popa
(bad)
sar
aaa
mov
in
xlat
cld
movs
addr16
mov
push
fstp
xor
sub
call
(bad)
mov
push
cmc
mov
cld
rcr
arpl
fs
mov
pop
addr16
(bad)
cmp
div
pop
adc
push
xor
jmp
call
repz
stc
push
std
out
mov
inc
pop
push
icebp
add
scas
lods
fadd
ss
scas
loope
aad
mov
adc
cdq
inc
mov
in
and
jns
shl
mov
pop
clc
jp
jae
ds
jne
adc
mov
(bad)
fst
lock
cmp
adc
or
jno
pop
pop
rcr
sahf
sbb
push
inc
ja
mov
in
jne
xor
inc
retf
into
ret
xor
sub
movs
js
jmp
add
mov
fld
sbb
ja
or
ja
gs
call
fwait
cmp
jge
mov
repz
jno
and
stos
in
xchg
loop
test
dec
and
pusha
(bad)
rcl
push
dec
inc
repz
push
inc
pop
adc
xchg
mov
pop
lods
outs
mov
mov
cmps
and
fcom
lods
xchg
retf
xchg
xchg
sbb
int
lock
dec
mov
out
ds
xchg
fld
push
dec
inc
inc
mov
ss
pop
pop
rol
dec
push
ins
mov
push
cmp
inc
push
or
fstp
add
outs
push
pusha
scas
mov
jns
repz
out
mov
ins
loop
in
mov
mov
aaa
jno
add
ds
std
js
mov
fwait
bound
stos
and
push
outs
push
sti
icebp
iret
pop
arpl
loope
fnsave
rcl
mov
pop
test
inc
es
sub
add
mov
adc
cmps
jbe
jmp
ret
into
xchg
daa
sbb
cwde
test
and
jg
xor
rcl
jae
outs
inc
mov
push
sub
add
xlat
sub
mov
adc
out
inc
aad
shl
mov
inc
pop
xchg
fs
pop
shl
push
or
les
stos
push
inc
bound
leave
and
mov
dec
dec
pop
stos
scas
cdq
pop
ret
xchg
and
mov
sub
cli
test
(bad)
loopne
hlt
sbb
xor
xchg
aad
push
inc
imul
std
jo
add
(bad)
lods
push
xchg
xor
fnstcw
aaa
cmc
inc
mov
nop
jmp
clc
adc
dec
cwde
mov
enter
mov
call
sbb
fisttp
dec
(bad)
lock
es
test
lds
inc
es
lods
int3
xor
vpmacssww
or
adc
push
or
cmp
pop
xor
stos
scas
cmps
sub
ins
pop
and
dec
js
and
xor
mov
jg
ret
and
repnz
ins
int
enter
inc
mov
jmp
cmps
xchg
ss
add
shl
and
inc
stos
(bad)
das
mov
ficomp
mov
adc
pop
hlt
pushf
jno
shl
lahf
push
and
pop
mov
iret
inc
test
loope
push
aam
add
cmp
jo
xchg
lock
cmp
mov
out
hlt
stc
shl
rcr
adc
sub
push
ja
out
sub
iret
retf
dec
pop
cli
or
mov
lods
cld
shl
ret
mov
stc
dec
bound
data16
and
adc
clc
fcomp
xchg
enter
cmp
cmp
and
jp
mov
ror
das
xlat
data16
aaa
fs
mov
out
adc
fdivrp
pop
shl
test
aam
xlat
push
in
jno
fadd
pop
mov
(bad)
(bad)
mov
lea
mov
mov
push
in
mov
fld
mov
mov
jns
xor
jo
sub
mov
(bad)
ret
cli
rcl
pushf
ds
xor
ret
out
aad
xor
leave
popf
jae
pop
or
pop
jmp
sbb
test
xor
dec
mov
adc
loopne
cdq
dec
(bad)
pop
mov
cdq
dec
loop
adc
imul
repz
(bad)
sub
push
jno
xchg
pop
aad
push
bound
repz
sti
or
jnp
neg
pop
jle
xor
out
pop
mov
jae
push
mov
dec
or
fs
jnp
or
arpl
mov
rol
hlt
push
push
repnz
pop
or
rcl
or
pushw
mov
and
sbb
mov
sbb
movs
fild
sbb
mov
push
pshufw
shl
cdq
or
jne
pushf
inc
mov
cld
cmp
cwde
popf
pop
xchg
and
daa
jo
push
xchg
ficom
pushf
push
dec
call
lods
stos
(bad)
jg
push
mov
sbb
and
and
pop
jp
popa
cmps
(bad)
call
push
sbb
jo
adc
(bad)
js
ficom
push
mov
inc
outs
test
xor
sbb
xor
or
sbb
fimul
jmp
sbb
sub
cmps
mov
pop
and
mov
popf
and
fcomp
inc
cwde
dec
pop
jbe
enter
mov
or
adc
lds
clc
icebp
jne
jne
pop
jmp
pop
pop
ficom
sbb
fisttp
mov
xchg
data16
into
sbb
cmp
jo
mov
push
repz
neg
imul
test
mov
movs
jbe
push
rcl
jecxz
icebp
sbb
test
pusha
leave
or
mov
rcl
inc
inc
ror
mov
xchg
(bad)
dec
jecxz
arpl
mov
addr16
loop
ficomp
xor
cmc
(bad)
mov
push
(bad)
fld
add
jne
sahf
fbld
cmp
cwde
adc
lds
pop
fstp
ja
test
pushf
imul
lea
xlat
xor
mov
ss
fwait
int3
mov
push
cld
fcom
fs
mov
lahf
call
aam
push
addr16
cmp
fstp
outs
dec
mov
retf
mov
sar
ins
xchg
dec
pop
mov
or
nop
test
pop
push
loop
adc
cmp
int3
pop
mov
das
dec
loop
sbb
xor
fisubr
mov
lea
in
js
aam
xlat
shl
sahf
dec
xchg
xor
mov
adc
and
inc
xchg
jmp
frstor
dec
sahf
xchg
stos
pop
scas
daa
pop
push
retf
pop
ret
sbb
mov
fld
adc
xor
movs
arpl
pushf
mov
clc
pop
jge
cmp
lahf
mov
xor
adc
repnz
lock
push
push
mov
dec
mov
lfs
xchg
pop
fadd
sbb
mov
cmps
mov
inc
loop
adc
sbb
ins
mov
sbb
and
popa
pusha
adc
jp
(bad)
sub
fcomp
in
mov
ffree
xor
xchg
mov
test
mov
cmc
sbb
xchg
mov
inc
sbb
mov
lock
cmps
dec
inc
shl
sti
loope
dec
ins
and
aam
or
mov
cwde
fisttp
imul
das
pop
addr16
or
test
outs
idiv
mov
pop
mov
inc
add
out
cld
adc
jp
inc
mov
mov
bnd
dec
fxch
fstp
mov
push
adc
test
dec
dec
pop
inc
frstor
pop
pushf
pop
sahf
mov
sti
inc
and
out
lds
dec
push
dec
imul
jbe
cmp
stc
push
loop
mov
sbb
pop
push
inc
push
mov
inc
xchg
fsub
ins
mov
(bad)
imul
stos
jmp
mov
mov
cmp
enter
pop
xor
pop
ror
mov
data16
lea
cmp
or
xchg
and
inc
loopne
rol
aaa
pop
adc
push
xchg
imul
jne
ja
jle
stos
or
aaa
mov
cmp
jge
pop
sbb
and
fild
pop
fnstsw
das
xchg
clc
push
enter
hlt
inc
dec
lds
sbb
out
outs
and
ja
mov
xor
stos
addr16
add
icebp
push
pop
ss
loop
(bad)
loop
mov
and
mov
cmps
lods
pop
push
repnz
or
cmps
movs
mov
sub
adc
push
sub
repnz
(bad)
push
mov
es
or
push
sub
pop
adc
adc
lahf
jg
stc
out
jg
stc
out
sbb
cld
push
jns
ins
or
dec
cdq
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmp
xor
shl
popf
fidiv
ja
dec
mov
sbb
cdq
jbe
rcr
(bad)
xor
(bad)
mov
lldt
dec
outs
leave
add
pop
pop
pop
mov
test
jmp
mov
dec
sbb
into
jno
fldenv
mov
shl
xchg
xor
sbb
out
push
fisttp
outs
jmp
pop
dec
adc
ss
push
aas
jl
xchg
mov
movs
add
mov
mov
loop
rcl
inc
lea
leave
fcom
push
pop
ret
cmp
fdivr
sub
cs
mov
addr16
add
sahf
fist
xchg
movs
jmp
dec
clc
push
push
xchg
pop
xor
jb
lock
fild
test
rcl
fwait
gs
mov
cmp
repz
add
mov
repnz
daa
xor
(bad)
cmp
sub
addr16
repz
aaa
push
daa
xor
hlt
test
loopne
xor
or
mov
dec
xor
mov
cs
xacquire
test
lahf
cmp
mov
push
and
add
adc
pop
mov
inc
iret
jp
retf
icebp
sbb
push
cmp
jl
jae
pop
jno
xchg
mov
fdiv
mov
pop
xchg
jmp
cmp
sti
mov
inc
pop
push
ss
cmp
jae
test
xor
arpl
sahf
mov
mov
and
sbb
xchg
stos
das
sbb
pop
xchg
or
scas
push
xchg
sbb
(bad)
and
push
outs
push
dec
repnz
fsub
bound
xchg
mov
mov
jmp
cli
js
ins
fmul
fcom
mov
sbb
retf
icebp
jg
imul
push
icebp
dec
(bad)
fstp
les
aam
dec
shl
cld
mov
jno
inc
ds
jb
rol
mov
lds
xchg
push
call
ins
lock
sbb
test
mov
ds
mov
call
inc
lea
retf
ret
icebp
jmp
into
push
rol
nop
inc
pushw
sub
int
cmp
aam
cli
clc
in
imul
xchg
bound
mov
ret
sti
inc
sub
or
in
mov
rcr
es
cmp
in
rol
bt
in
outs
loope
arpl
cmp
xchg
repz
push
(bad)
mov
dec
sahf
sbb
jge
and
loopne
mov
hlt
pop
inc
push
jmp
dec
xor
pop
lock
add
jmp
bswap
add
in
retf
push
stos
pop
jp
inc
and
ror
sbb
popa
inc
bswap
ins
(bad)
cmp
mov
inc
leave
ins
ror
cs
jae
bound
jns
and
dec
dec
aad
scas
cmp
and
std
and
in
(bad)
jns
das
jg
loopne
(bad)
xlat
pop
adc
cmc
jmp
rol
(bad)
ja
dec
push
sbb
arpl
loope
iret
xchg
fistp
adc
das
pop
ror
les
into
jecxz
jge
sub
(bad)
adc
mov
and
clc
gs
cmp
imul
jae
shr
(bad)
lods
mov
pop
mov
hlt
daa
in
inc
dec
sbb
sub
xor
mov
jl
movs
mov
sub
clc
fcomp
fwait
adc
push
push
in
xchg
aad
cmc
xor
or
push
addr16
push
call
ja
mov
add
scas
ja
fwait
dec
inc
or
fsubr
jnp
add
in
(bad)
stos
push
push
loopne
fst
ds
mov
push
sub
cmp
aas
clc
dec
cmp
into
fnstcw
inc
inc
lahf
(bad)
push
dec
xchg
ss
sub
sbb
push
in
xchg
inc
lods
xchg
cmc
aas
(bad)
dec
adc
scas
pop
cmp
enter
jl
icebp
retf
call
into
and
rcr
xchg
js
int3
xor
mov
xor
jbe
movs
pop
sub
adc
ins
out
pop
mov
pushf
or
fist
outs
jl
sub
sub
xchg
sub
scas
mov
ret
pop
mov
mov
mov
push
or
repz
(bad)
out
mov
idiv
jbe
dec
aad
pop
jae
adc
bnd
push
dec
ficomp
pop
or
push
retf
in
aad
rcr
dec
add
nop
daa
cmp
iret
pop
mov
std
movs
pop
jnp
sahf
pop
popa
and
mov
xlat
jmp
or
into
sbb
push
sub
jle
fadd
inc
ret
sub
mov
sbb
or
mov
sbb
test
sub
ja
aas
std
imul
add
xor
push
inc
or
in
out
mov
sub
cmp
adc
xchg
shr
add
jmp
mov
xchg
(bad)
pop
clc
sbb
(bad)
sub
xor
shl
xchg
imul
pop
lods
call
sbb
out
inc
js
ds
inc
movs
arpl
in
xchg
in
stc
sbb
idiv
pop
and
or
xchg
jmp
test
xchg
pop
fwait
cwde
mov
jne
cdq
shr
sbb
mov
jne
loope
pop
cld
cmp
jmp
cmps
pop
outs
rcl
rcl
sbb
stos
jo
imul
mov
push
cmp
adc
inc
aam
push
inc
cdq
pop
cmp
pop
outs
stos
scas
pop
xchg
pop
mov
mov
icebp
and
out
cmp
jmp
int
aam
mov
scas
into
cmps
mov
shl
stc
cmp
xchg
jg
jmp
push
int3
xchg
xor
arpl
or
push
pusha
lahf
faddp
dec
cs
test
cwde
sub
add
mov
adc
(bad)
push
fiadd
mov
and
gs
cmp
fwait
and
push
retf
cmp
push
sbb
shr
pop
test
add
gs
and
stc
lock
push
push
mov
inc
ret
mov
ss
mov
push
dec
test
mov
hlt
sbb
pop
add
pop
add
push
cmp
cmp
pusha
aas
pop
lods
sbb
dec
or
into
and
std
sbb
cmp
ret
or
push
inc
push
sar
movs
mov
or
dec
fidivr
ins
lods
fld
mov
enter
sub
xchg
or
inc
push
mov
jg
mov
sub
or
lods
sbb
fimul
clc
pop
fldcw
xor
das
je
int
nop
push
jbe
stos
enter
imul
or
in
cmps
sub
push
je
call
pop
shl
pop
mov
or
jecxz
cmp
dec
jp
pop
jae
lods
or
and
fchs
aaa
ins
aas
or
sti
sbb
rcr
adc
in
data16
sbb
dec
test
adc
test
push
pop
mov
xchg
popa
xor
es
retf
je
pop
cmp
dec
push
xchg
cmps
push
cmp
daa
mov
das
ds
sub
popf
repnz
sbb
outs
jl
pop
sar
adc
jnp
ret
xchg
adc
in
pusha
pop
in
cmp
popf
dec
daa
mov
mov
mov
mov
clc
xor
icebp
cmp
mov
mov
xor
mov
jl
adc
in
mov
repz
xor
lods
or
mov
inc
sub
mov
ret
xor
mov
stos
shl
add
ins
xor
int3
fdivr
mov
call
add
mov
clc
retf
adc
sbb
int
push
inc
mov
cmps
movs
(bad)
rol
cmp
xchg
int3
call
fwait
push
xlat
push
sub
js
add
sbb
mov
inc
loope
ds
add
sbb
xchg
sub
icebp
mov
mov
fadd
(bad)
(bad)
push
stos
fcomp
call
xor
and
mov
je
outs
dec
mov
scas
mov
rcl
fmul
pushf
jmp
int
fld
add
xchg
mov
shl
xchg
fisubr
jbe
pop
shr
jo
out
lods
scas
lods
jmp
xor
xor
aas
mov
pop
cmps
mov
push
push
int3
movs
adc
cmp
ds
shl
lods
fiadd
outs
xlat
or
(bad)
cmp
mov
or
or
lahf
mov
push
call
xchg
or
lock
push
jge
imul
xor
repz
cmp
sub
das
push
popa
or
add
ror
mov
not
lds
(bad)
(bad)
out
fdiv
pop
out
js
ss
popf
mov
xor
and
xchg
and
jo
cmp
dec
jns
and
stc
pop
vmwrite
pop
mov
push
out
(bad)
retf
mov
push
int3
mov
cmp
jnp
mov
cld
int3
sar
popa
sar
sbb
imul
add
test
xchg
adc
repz
dec
pop
jl
je
iret
fmul
dec
sbb
mov
xchg
ins
cdq
cmp
es
in
data16
mov
inc
les
xor
or
mov
dec
jns
pop
dec
dec
xor
aas
or
inc
cmp
call
push
int
mov
inc
sbb
fimul
jmp
dec
(bad)
adc
out
pop
or
test
test
or
lahf
jo
pmullw
pop
stc
cmp
nop
pop
pop
(bad)
push
das
mov
lock
push
stc
cmp
repnz
retf
cmp
and
xchg
jmp
xor
aad
imul
xchg
clc
push
push
push
cli
dec
jb
ja
ja
pop
pop
push
inc
(bad)
in
dec
lahf
ja
mov
inc
idiv
retf
test
lds
cld
addr16
mul
(bad)
push
aas
jns
test
fidiv
sub
xchg
sahf
cld
xchg
mov
push
clc
addr16
je
pop
adc
int
inc
lods
std
sbb
mov
jge
push
(bad)
call
pop
mov
xor
mov
or
jg
stos
push
push
cdq
mov
test
sub
pop
fbld
jg
xchg
mov
jb
cmp
and
(bad)
push
fucomp
cmp
mov
daa
or
mov
(bad)
in
iret
test
xchg
dec
out
or
fadd
xchg
inc
mov
mov
std
popf
jge
dec
mov
mov
cdq
ja
jmp
in
cmp
sti
out
movs
mov
mov
cmp
xchg
xor
add
out
jmp
ins
cs
int3
mov
fcomp
scas
stc
fnstenv
xchg
test
sbb
push
push
or
pand
xor
mov
loop
mov
xchg
not
clc
xchg
pop
aaa
leave
cwde
xor
pop
movs
pop
sub
pop
cld
dec
xchg
cs
or
pop
(bad)
int
jns
xor
mov
or
or
daa
test
popa
cmp
bndcl
xchg
sahf
retf
cmp
ins
hlt
jmp
(bad)
pusha
stos
lahf
add
pop
xchg
push
leave
cli
retf
jle
out
mov
adc
pop
fbld
sbb
movs
xchg
adc
push
mov
mov
lds
cs
pop
jp
mov
mov
iret
iret
mov
js
fisttp
ret
loopne
jle
imul
cdq
ins
cmp
and
mov
sub
sti
pushf
inc
xchg
test
or
sbb
jp
push
cwde
cli
xchg
out
inc
xchg
and
pushf
cmp
dec
div
sub
inc
sbb
mov
or
or
into
sub
aaa
sub
push
lods
xor
add
cmp
movs
mov
jg
mov
daa
test
fmul
and
dec
repz
jge
push
movnti
jmp
jp
sbb
pop
adc
xor
fistp
xlat
and
aad
sbb
cmp
lods
shr
mov
js
clc
repz
das
jg
add
mov
in
in
(bad)
pop
or
inc
push
inc
imul
sub
repz
cs
repz
scas
pop
pushf
aas
jmp
in
outs
cmp
in
popa
ret
fisub
or
pop
mov
xor
sub
fucomp
mov
mov
in
adc
mov
lods
pushf
push
fnstsw
shl
test
cmp
jge
lods
pop
imul
imul
icebp
in
fldenv
inc
and
sbb
inc
stos
mov
xchg
or
nop
mov
adc
push
push
jns
add
inc
repnz
mov
in
fstp
scas
pusha
mov
lahf
mov
(bad)
dec
push
ins
sbb
xchg
aas
ret
xor
xchg
mov
xchg
pop
cmp
addr16
dec
xchg
in
ficom
lods
loop
and
loop
adc
adc
imul
mov
xor
in
aam
mov
bound
cmp
sub
mov
sbb
push
and
push
or
iret
dec
pushf
lock
cs
(bad)
leave
(bad)
push
imul
mov
xor
pop
pop
inc
das
pop
cmp
les
leave
add
push
jno
ins
cwde
jno
xchg
and
jmp
imul
xchg
cmp
push
add
sub
fdivr
lea
(bad)
dec
es
dec
push
push
(bad)
mov
jp
neg
test
adc
sbb
push
imul
adc
and
mov
mov
sbb
imul
dec
icebp
fstp
(bad)
call
sbb
nop
jg
and
or
pushf
jp
fwait
ds
loop
fcmove
je
push
cmp
fbld
repz
xchg
aaa
data16
pop
xchg
fistp
or
popf
dec
aam
mov
push
adc
jne
jbe
cmp
jbe
jg
xor
and
hlt
stc
sub
pop
ins
fistp
cmc
xor
xor
xor
xchg
fdivr
push
sbb
icebp
jne
jo
inc
pop
outs
repz
or
sbb
push
outs
jle
add
pop
inc
mov
sub
imul
aam
test
push
iret
jle
and
dec
out
ins
stos
sub
jns
push
cmp
sbb
lods
inc
ss
sub
fistp
dec
jnp
daa
repz
mov
and
adc
mov
test
push
inc
repnz
mov
xchg
mov
cmp
sub
mov
std
cmp
cdq
dec
mov
in
shl
idiv
adc
adc
ror
inc
push
add
sbb
pop
sti
cmp
repnz
pop
fisub
mov
adc
retf
xor
pop
cmps
call
in
or
inc
ss
rcr
daa
inc
jb
sbb
mov
rol
imul
es
out
aas
lea
(bad)
mov
(bad)
mov
jno
aas
xchg
imul
mov
push
int3
enter
movs
push
ins
push
pop
sbb
mov
push
cmc
mov
add
mov
sub
sti
ss
cmps
inc
mov
or
inc
pop
loope
jb
or
es
enter
dec
jb
cld
pop
sub
dec
pop
movs
mov
ret
cmps
mov
xchg
dec
cmp
jb
je
xor
inc
adc
or
repz
cmp
je
mov
emms
fs
mov
rcl
adc
inc
test
or
dec
inc
inc
test
ret
ror
push
out
xchg
jle
jg
bnd
mov
in
xor
xadd
gs
ret
cmp
cmc
jo
scas
add
sub
aaa
idiv
inc
scas
push
ret
sub
push
mov
cdq
push
push
sbb
shl
std
and
or
push
stos
xchg
push
cmp
rep
pop
addr16
cld
or
call
clc
or
leave
mov
cmp
dec
and
cmp
push
sub
test
js
(bad)
icebp
or
(bad)
push
mov
jb
sahf
cmp
sahf
mov
(bad)
stc
iret
jg
repz
(bad)
cld
out
sbb
cld
pslld
shl
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
mov
mov
(bad)
fstp
(bad)
cdq
and
fst
cmp
lods
in
cdq
fst
and
(bad)
sti
inc
ficomp
adc
xor
cmp
cwde
and
(bad)
xchg
push
and
std
pop
scas
inc
inc
push
fimul
and
or
cmp
xor
(bad)
cld
push
xchg
mov
push
popa
push
pop
adc
push
inc
inc
sbb
jle
out
call
dec
push
adc
out
jns
jno
imul
je
dec
fisttp
push
cdq
cmps
push
aad
movs
scas
mov
mov
in
sbb
lea
(bad)
dec
pop
or
xchg
dec
pop
(bad)
mov
mov
add
arpl
xchg
(bad)
pushf
jmp
repnz
test
pop
dec
mov
mov
ins
imul
ret
or
jno
icebp
imul
cmp
jl
movs
xchg
dec
enter
pop
ins
mov
cld
dec
inc
loopne
dec
data16
dec
xor
lods
call
retf
sub
aas
jle
dec
adc
cwde
ss
stos
retf
stc
pop
ins
test
push
mov
dec
mov
fs
pop
fmul
leave
sbb
lahf
inc
inc
comiss
outs
jne
stc
add
add
stos
cmp
loope
mov
jg
pop
cmp
inc
cmps
repz
(bad)
scas
test
mov
repnz
hlt
mov
je
(bad)
ret
in
sub
pop
mov
ret
scas
cs
scas
sbb
mov
mov
sbb
dec
cmps
shl
and
lods
sbb
jmp
and
addr16
rcl
jp
mov
cmps
out
int
inc
out
ret
jge
pop
stos
and
pop
fs
push
inc
sub
sub
sbb
test
cmc
fsub
(bad)
dec
mov
das
dec
sub
dec
cmps
push
fcomp
sub
imul
movs
cmps
pop
jmp
add
rcl
ja
sbb
pop
pop
inc
neg
or
jge
mov
out
pop
and
xor
out
fcomp
mov
jb
aad
inc
or
(bad)
and
and
(bad)
pop
stos
addr16
out
outs
fst
push
out
fcmovne
add
mov
pop
(bad)
pop
icebp
pushf
pop
add
int
and
mov
jmp
jmp
sub
inc
jmp
sbb
xor
or
xor
dec
xor
xchg
pushf
xchg
lods
or
ret
icebp
mov
lea
sahf
push
mov
xchg
lds
ds
(bad)
repnz
outs
or
scas
cmp
hlt
inc
adc
inc
movs
shr
mov
(bad)
mov
sbb
and
outs
stos
push
push
nop
cmp
retf
test
sub
fwait
cmp
jno
stos
aad
mov
jmp
div
push
repz
out
mov
inc
fadd
into
mov
cmp
test
repz
movs
cld
pop
into
mov
push
mov
jmp
sbb
mov
ret
lock
daa
cmp
loope
mov
fist
imul
pop
xchg
jge
and
inc
nop
dec
loopne
stc
das
inc
xchg
add
jo
sub
add
cmp
push
(bad)
mov
ret
daa
stc
ret
loopne
and
or
and
jmp
push
inc
es
inc
mov
jp
lahf
fiadd
daa
push
add
fnsave
ret
jno
cmp
ret
in
xchg
mov
aam
adc
fsubp
ret
int3
adc
pusha
inc
ret
adc
sub
sub
and
aam
test
mov
inc
std
test
jl
and
cmp
pop
std
inc
jno
adc
test
das
pop
dec
popf
dec
mov
xor
lds
in
mov
popf
call
out
mov
(bad)
in
call
sti
mov
pusha
mov
retf
adc
xor
sar
xlat
mov
mov
in
pop
mov
or
push
mov
test
and
sar
cmp
and
daa
pop
cs
repz
aam
fs
gs
push
sbb
sub
sub
inc
xor
xchg
inc
nop
pop
std
movs
(bad)
and
adc
fnstsw
call
jae
mov
loope
stc
pusha
and
lods
shl
push
sbb
lea
cmp
js
or
dec
or
jmp
or
(bad)
jecxz
or
or
sbb
mov
adc
mov
arpl
sub
inc
stc
scas
or
cld
aas
sub
dec
push
cmp
xchg
push
leave
int3
in
jne
imul
fs
xor
jle
and
imul
in
push
add
std
ins
xchg
retf
jmp
and
je
into
push
dec
fisttp
push
sub
adc
sub
(bad)
push
fwait
retf
retf
retf
xchg
and
push
(bad)
pcmpgtw
dec
(bad)
neg
jns
(bad)
mov
dec
je
test
js
add
daa
mov
push
call
jae
mov
repnz
pop
adc
les
into
and
pop
mov
push
inc
or
xchg
xor
xchg
cmp
sbb
sahf
and
cdq
(bad)
sti
mov
mov
aaa
pop
icebp
and
cmps
cmp
test
sub
mov
mov
test
mov
loop
imul
inc
das
adc
pop
cld
sbb
std
cld
outs
sub
aam
pop
out
add
loop
clc
gs
and
fidivr
fwait
out
in
out
cmp
and
repz
fild
je
cmp
cmp
jmp
int
in
sub
shl
sbb
push
out
fisubr
scas
mov
sub
and
stc
dec
aas
int3
loope
cli
inc
out
rcr
cmp
aad
cmp
sbb
cld
les
mov
loopne
and
mov
or
adc
fs
outs
sbb
dec
sub
sbb
lahf
jmp
sbb
cmps
imul
adc
pop
push
out
sar
cmp
sub
jge
jp
js
lahf
shl
and
xchg
call
das
push
cmps
(bad)
mov
push
push
ins
or
pop
popa
sub
aas
int3
mov
sub
fdivr
xchg
mov
aas
adc
cmp
test
mov
push
in
rcl
adc
xchg
ss
rcr
shr
ret
je
jg
jmp
aas
(bad)
(bad)
mov
jnp
adc
dec
icebp
popf
movs
aas
xchg
mov
push
dec
xchg
(bad)
mov
std
sbb
pop
rcr
sub
pushf
pop
outs
int
xlat
sub
xchg
xor
or
daa
out
mov
addr16
pop
ss
push
out
dec
pop
or
or
jbe
test
jmp
pop
fld1
sbb
xchg
imul
ja
pop
pop
and
mov
test
daa
jl
pop
cmp
test
jb
inc
adc
xor
(bad)
dec
sbb
jle
xchg
ds
mov
repnz
cmp
mov
js
jne
scas
push
out
mov
jl
(bad)
loope
repnz
dec
popf
call
test
xor
dec
xor
iret
mov
nop
shl
movs
mov
inc
push
pushf
in
mov
inc
mov
dec
inc
jmp
push
loope
jmp
mov
popf
dec
dec
idiv
mov
lock
pop
pop
push
adc
pushf
into
pop
adc
stos
add
js
loopne
arpl
adc
loop
jge
ins
jns
lock
jmp
fs
imul
xor
add
stos
clc
in
mov
sahf
gs
pusha
mov
xor
mov
fmul
jecxz
or
stos
mov
pop
aad
call
sub
sahf
stos
mov
mov
mov
retf
shr
ror
out
mov
inc
or
xchg
popa
and
ret
pop
mov
mov
int3
popa
movs
mov
sub
pop
jo
add
adc
in
dec
xchg
cmc
pop
pop
inc
xchg
int
sbb
call
test
outs
test
gs
jae
idiv
sub
mov
into
push
sbb
push
sar
mov
pop
push
(bad)
xchg
jl
mul
cmps
popa
sbb
dec
mov
xor
sub
(bad)
jno
fdivr
aam
or
sbb
shl
adc
sar
and
ret
and
and
(bad)
lods
xchg
mov
aam
je
jns
daa
cli
cmp
xor
jge
mov
push
addr16
test
imul
mov
cmp
xchg
inc
cli
mov
xchg
hlt
call
inc
(bad)
iret
jg
xchg
fdivr
retf
push
inc
scas
xchg
cmp
shl
sbb
inc
ins
fucomp
loope
pop
test
cmp
dec
retf
and
aaa
jmp
jbe
loope
dec
out
add
test
ret
ja
cmp
daa
in
inc
ret
inc
out
outs
mov
inc
popf
sbb
scas
and
aaa
xor
and
sbb
sub
adc
push
scas
lods
in
xchg
mov
repz
and
push
sub
adc
int
(bad)
adc
adc
ins
and
and
jl
mov
mov
sbb
or
out
ret
xlat
push
mov
lock
push
pop
cmp
(bad)
cmp
and
xor
fcom
sbb
mov
in
scas
das
adc
outs
cmps
xor
xchg
cmp
push
fcomp
call
fsubr
mov
jecxz
jb
mov
cmps
mov
mov
mov
inc
fstp
call
out
fistp
fbld
sub
into
loopne
ins
or
test
int
aam
clc
arpl
mov
push
test
into
or
movs
dec
push
and
loope
out
scas
outs
stos
ins
movs
dec
int
inc
jmp
and
or
cmc
aaa
fsub
push
fsubr
test
mov
adc
dec
jecxz
fbstp
adc
pop
mov
mov
xor
aam
cmc
push
fwait
repz
inc
or
out
or
and
mov
inc
lds
sbb
jp
ret
pop
popa
bound
xchg
and
xchg
jno
xchg
jbe
es
or
mov
mov
mov
test
imul
(bad)
mov
lods
clc
addr16
or
jnp
cmp
das
repz
lods
cmp
(bad)
in
loopne
or
int3
jno
pushf
mov
adc
xchg
nop
stos
stos
je
sub
inc
push
fnstcw
jne
out
push
ret
repz
hlt
sub
sbb
mov
fcmovne
pusha
lea
pop
aaa
retf
xor
lahf
jbe
add
fsub
leave
push
sahf
(bad)
retf
push
outs
je
jo
inc
(bad)
les
daa
push
jecxz
je
push
scas
(bad)
loopne
push
pop
or
and
xchg
mov
push
inc
mov
jns
sub
or
sub
repnz
jl
push
loopne
loopne
mov
icebp
popa
dec
data16
sahf
pop
(bad)
outs
jnp
in
imul
outs
aad
hlt
inc
aad
xlat
imul
fistp
in
and
pop
imul
push
rcr
rcr
xchg
jb
loopne
jecxz
dec
in
repnz
shr
cmp
push
xlat
pushf
mov
leave
retf
mov
or
scas
arpl
or
lods
arpl
mov
adc
out
cmps
sbb
repnz
les
stc
jecxz
shr
repnz
adc
ja
inc
xor
adc
ficomp
dec
in
retf
arpl
push
xchg
dec
sbb
inc
nop
jb
pop
scas
fcmove
xchg
or
xchg
fidivr
or
mov
loop
aas
and
or
xor
mov
cmp
xchg
dec
or
and
dec
out
mov
jmp
cmp
or
test
xor
lea
call
aam
mov
jg
ds
mov
push
and
mov
add
jne
enter
je
dec
xchg
adc
(bad)
stos
cmp
push
push
ins
arpl
jno
mov
retf
xchg
out
cmp
clc
sub
mov
sub
xchg
lods
movs
adc
or
add
in
aam
mov
in
fs
(bad)
out
mov
mov
cdq
fist
push
ins
dec
bound
xchg
cmp
xor
aas
sub
push
jmp
jae
cmp
test
sub
dec
sub
sahf
sub
pop
jl
ins
adc
dec
sbb
aaa
ror
lock
div
and
mov
and
loopne
and
xor
je
leave
arpl
(bad)
push
pop
(bad)
sub
lock
call
nop
mov
jg
pop
sub
ds
mov
cli
jecxz
enter
div
dec
jle
jae
add
in
jmp
mov
xchg
mov
fiadd
or
popa
cld
mov
pop
test
call
xor
arpl
sbb
dec
std
cmc
jo
push
or
retf
inc
xor
inc
jl
fwait
test
xor
pop
or
fnstenv
push
mov
sahf
sbb
sub
fwait
mov
xor
inc
imul
lods
or
test
adc
loop
mov
iret
fisttp
fwait
xor
jg
movs
pop
inc
adc
out
aad
daa
xchg
jle
mov
pusha
retf
push
scas
dec
(bad)
out
add
popf
sbb
inc
jb
pop
jle
jmp
(bad)
fmul
sbb
dec
rcl
add
dec
pop
inc
xchg
into
mov
addr16
dec
inc
mov
jle
mov
lods
idiv
push
pop
cmp
mov
or
cmp
sub
jle
cld
jnp
sub
dec
movs
in
add
cmp
mov
cli
aaa
cmp
sub
and
test
ds
or
imul
sbb
push
ror
xchg
repnz
or
jge
dec
adc
xchg
jl
add
jge
ffreep
dec
retf
dec
(bad)
aaa
mov
dec
lods
test
leave
adc
and
adc
mov
lock
xchg
or
jmp
xchg
bound
adc
adc
ror
pop
or
or
push
lock
and
stos
push
ins
fld
cmp
jne
cs
pop
mov
lods
pop
js
cwde
test
aam
pop
in
ins
into
rcl
ror
mov
ja
stc
pop
in
int3
jns
or
mov
cmp
jg
sbb
push
push
lds
pushf
cmp
sub
clc
jmp
dec
call
gs
fs
in
pusha
int
mov
call
push
xor
imul
inc
out
xchg
xchg
push
and
jmp
ror
push
xchg
add
jmp
add
icebp
shr
fstp
or
punpckldq
call
mov
addr16
lahf
jns
dec
mov
pop
sub
dec
push
pop
dec
shl
jbe
fistp
or
or
pop
lock
inc
aam
push
dec
mov
cdq
xor
movs
bound
mov
es
(bad)
xchg
push
dec
sub
daa
ror
push
inc
fcmovnb
lahf
(bad)
cmc
lea
pop
push
jb
cld
mov
adc
in
dec
out
popa
movs
inc
rcr
jbe
or
in
pop
or
mov
aas
popa
stc
pop
add
arpl
fist
xchg
leave
mov
ss
mov
xor
shr
push
mov
pop
stos
(bad)
pop
xor
inc
das
inc
mov
ds
xchg
outs
xchg
jg
push
ds
cmps
dec
jmp
into
enter
data16
jle
(bad)
mov
aas
jmp
fisttp
cmp
and
hlt
jge
dec
cs
daa
and
add
mov
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
into
xor
jo
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
shl
mov
dec
mov
fnsave
xor
mov
cli
dec
dec
jae
addr16
mov
xor
jae
cmps
fwait
out
ds
jge
ret
test
lods
add
in
jb
or
imul
or
shl
mov
cwde
jns
dec
repz
or
(bad)
(bad)
inc
aad
jp
outs
pushf
mov
ficomp
mov
movs
retf
test
adc
popa
loope
(bad)
icebp
test
sar
int
jecxz
and
in
xor
in
mov
fdivr
adc
xor
push
movs
retf
les
(bad)
mov
movlps
mov
or
inc
lahf
cmp
ja
ror
pop
cmp
cmp
dec
aam
fiadd
jmp
jle
jbe
inc
rol
mov
mov
pop
in
sbb
jl
iret
mov
push
cld
xlat
sub
stc
xchg
mov
adc
pop
pop
ins
addr16
outs
and
cmp
jp
or
in
add
je
jl
cwde
fisttp
test
mov
js
into
imul
or
inc
rol
das
aad
push
cdq
xor
jae
iret
cmc
scas
fdiv
jo
jecxz
xchg
mov
retf
cmp
jne
neg
push
xchg
or
(bad)
push
mov
mov
mov
jbe
and
sbb
inc
mov
jb
in
aaa
mov
dec
inc
mov
xchg
xchg
xchg
dec
mov
ja
cmc
pop
movs
or
adc
pusha
ss
cmp
add
mov
fnclex
fwait
aaa
and
cmp
and
repz
inc
loop
imul
in
lods
scas
ins
or
add
adc
pop
cdq
in
mov
jmp
cdq
cmp
(bad)
pusha
xor
aad
jg
loopne
out
nop
loop
movs
fnstsw
cmc
fmul
icebp
jge
addr16
mov
dec
es
loop
cmps
mov
dec
jo
mov
js
and
xor
loopne
(bad)
aam
inc
mov
pop
sbb
je
pusha
retf
xor
imul
aaa
and
ds
inc
jg
xchg
inc
cld
aam
mov
in
aad
pop
mov
cmp
dec
xor
xor
xchg
push
fwait
push
ret
fwait
push
pop
(bad)
jmp
sbb
inc
out
call
iret
je
jge
(bad)
adc
mov
xor
repz
adc
or
cmps
clc
pushw
sti
cmp
psubsw
inc
pop
pop
ja
inc
icebp
div
mov
jb
fidiv
aas
cli
pop
xchg
mov
cmp
dec
mov
imul
(bad)
jecxz
repz
mov
inc
mov
mov
aaa
cmp
mov
sbb
pop
fsub
xchg
loope
sub
int
call
movs
xlat
repz
mov
stos
fsubr
aam
pop
sbb
push
in
or
xchg
pop
xchg
mov
jns
mov
mov
inc
cmp
sub
xchg
int
sbb
jne
push
call
mov
xchg
xchg
xor
xchg
sbb
adc
outs
in
cmps
cmp
jp
je
ja
icebp
mov
push
add
pop
xchg
push
xchg
aam
fmul
jnp
in
sar
xchg
or
stc
mov
div
push
setno
dec
xchg
xchg
sub
push
dec
sub
inc
or
std
cmp
loope
push
and
lahf
je
popf
xor
mov
pop
test
mov
lea
adc
push
sti
add
popa
adc
mov
mov
loop
aaa
(bad)
or
scas
mov
int
dec
push
add
mov
pop
mov
mov
mov
movs
das
sub
(bad)
clc
xor
adc
shr
xor
fdivr
adc
ror
das
jmp
and
cmp
mov
cmp
imul
jl
jno
and
mov
push
sbb
stos
jo
and
mov
js
shl
in
mov
dec
sub
ins
aam
or
xchg
sbb
movs
or
mov
xchg
cmc
and
iret
and
mov
(bad)
icebp
bound
sub
(bad)
fisttp
xchg
or
dec
sbb
jo
jae
cs
and
ret
call
retf
add
ss
push
sar
sub
mov
sar
sub
and
test
int
pop
in
push
ret
dec
add
scas
dec
jle
(bad)
push
adc
inc
dec
sub
iret
lock
in
xor
popa
push
dec
test
adc
and
mov
jo
cdq
mov
push
add
jmp
test
jnp
fwait
lods
fist
ins
call
pop
movs
gs
repnz
dec
scas
dec
cmps
push
xchg
mov
mov
ss
xchg
sub
les
inc
add
or
adc
cmp
sbb
inc
std
or
push
pop
jbe
jae
push
pushf
adc
lods
into
in
and
push
cmp
and
and
retf
stc
loopne
sahf
or
std
ja
push
int3
inc
mov
daa
adc
into
jo
mov
movs
into
mov
sub
xchg
mov
fdiv
sub
mov
add
mov
dec
sub
or
test
jb
aaa
test
fwait
lea
or
test
cmc
sbb
mov
shr
mov
cmp
cmp
pop
mov
push
inc
mov
test
outs
in
xor
inc
cmps
outs
fwait
int
lods
pop
pop
push
aaa
xchg
leave
std
jns
into
cmps
mov
jl
add
jmp
adc
inc
mov
lods
aam
sti
and
add
and
scas
sub
repnz
outs
out
push
cmp
dec
imul
push
inc
shl
out
in
mov
loop
add
in
xchg
addr16
into
sub
aaa
mov
fiadd
jno
loope
xor
iret
aaa
sub
cmps
jae
xchg
push
fucomi
repz
fstp
push
pop
addr16
jge
sbb
hlt
nop
std
adc
ret
cmp
mov
add
or
jo
iret
mov
add
fsubr
xor
sub
idiv
arpl
outs
mov
imul
xchg
push
imul
xchg
pop
mul
cmp
gs
out
(bad)
andps
out
data16
lock
imul
cdq
pop
mov
fild
push
mov
ret
outs
sub
inc
mov
sar
adc
inc
fldcw
(bad)
mov
xchg
adc
in
out
shr
fcom
sub
inc
imul
int3
or
pop
jl
lock
jnp
cwde
das
mov
xchg
xchg
fisttp
cmp
jmp
sub
xchg
loope
cmps
dec
inc
imul
cmc
(bad)
sahf
ins
retf
jbe
sbb
dec
(bad)
lods
push
cli
xor
(bad)
sub
rcr
out
xchg
pop
xchg
nop
jge
mov
cdq
ds
pop
sbb
shl
icebp
xor
fstp
lods
movs
jecxz
test
mov
mov
add
sbb
mov
cdq
js
loop
add
sbb
and
pop
mov
sub
hlt
movs
jle
add
adc
dec
xor
ss
scas
adc
xor
dec
mov
jmp
push
imul
push
int3
mov
pop
out
enter
cmc
arpl
push
push
cmps
mov
sub
frstor
mov
mov
outs
sahf
js
sbb
jne
inc
and
sahf
repnz
cmp
jl
cmp
rol
addr16
enter
pop
ja
and
enter
push
out
out
stc
jecxz
sbb
pusha
sub
mov
loop
loopne
outs
(bad)
ret
adc
lea
and
(bad)
js
adc
call
pop
pop
cmp
or
aam
nop
stos
push
je
xlat
(bad)
xor
jo
xchg
(bad)
sub
xor
cld
cdq
mov
pushf
js
adc
shr
loope
stc
and
pusha
cmp
and
movs
inc
in
je
push
sub
pushf
into
ss
cs
sbb
sub
rcl
jg
cmp
fnstenv
inc
add
mov
bound
test
(bad)
mov
out
aad
jp
fdivr
out
scas
shl
pop
inc
or
loopne
pop
xchg
jp
cld
stc
push
imul
call
pop
push
pop
adc
lock
loope
cmp
jmp
fisubr
stos
jecxz
repnz
sub
jecxz
lahf
aam
dec
inc
adc
push
je
imul
push
aaa
out
mov
mov
mov
nop
sbb
aaa
sbb
xor
dec
inc
lds
push
jle
xlat
je
cwde
push
leave
or
sbb
jne
mov
push
adc
(bad)
fidiv
imul
aam
pop
out
enter
sub
lahf
mov
daa
mov
xlat
cmc
aaa
sub
adc
xor
neg
nop
jbe
dec
add
jecxz
add
std
adc
(bad)
push
sti
cmp
(bad)
mul
shl
retf
xchg
dec
loopne
pop
pusha
je
pop
xchg
sar
(bad)
adc
in
mov
stos
inc
ja
scas
jmp
fst
or
aam
shr
push
inc
sbb
movs
mov
jecxz
sub
lods
test
mov
int
jge
dec
mov
retf
call
int
loope
cmp
popf
mul
dec
out
fdivrp
jmp
cmp
mov
add
mov
jae
sbb
or
push
ss
mov
ret
xchg
inc
cmp
mov
dec
gs
push
pop
mov
sbb
pop
adc
or
aad
rol
sbb
jle
in
loopne
mov
aad
jmp
repnz
dec
mov
or
mov
jle
fisub
adc
jge
jns
mov
dec
inc
retf
xor
(bad)
sub
scas
push
add
cmp
sbb
not
mov
(bad)
cwde
push
and
fisttp
pop
hlt
jb
lods
shl
cmp
lods
dec
je
pop
xchg
push
lock
push
jne
xchg
xchg
inc
ja
cmp
into
inc
mov
mov
cmp
pop
movs
sar
data16
dec
cmp
jecxz
cmps
loopne
fiadd
cdq
lods
out
jnp
bound
mov
xchg
ret
lods
dec
mov
inc
and
cmc
xchg
cmp
icebp
stos
in
(bad)
mov
and
enter
push
aam
adc
and
inc
lods
jmp
fbld
xor
js
ja
mov
test
aas
jecxz
pop
dec
inc
lds
fdiv
icebp
jge
dec
xor
ja
xor
pop
(bad)
out
fs
xchg
jle
mov
popa
aaa
sti
cld
lods
mov
add
into
jnp
and
jl
dec
push
jbe
popf
pop
mov
mov
adc
(bad)
stc
or
cmps
ins
mov
cmp
mov
cmp
adc
fwait
(bad)
adc
jns
sub
dec
jne
mov
movs
idiv
push
leave
sub
aas
fisttp
retf
in
add
pop
cmp
pusha
daa
push
cmps
data16
or
in
fidiv
data16
test
mov
jl
dec
sar
jae
inc
pop
popa
lock
inc
adc
xor
das
dec
(bad)
fsubr
ja
push
aad
cli
je
mov
(bad)
jns
and
cs
ror
cli
and
push
push
and
stc
in
jae
sub
sub
or
xchg
enter
ss
xchg
test
or
dec
push
jge
push
sub
dec
(bad)
jmp
ins
xor
pop
and
ret
sub
out
sbb
fcomp
ret
fiadd
sbb
sub
mov
jnp
mul
ins
fimul
aas
dec
pop
into
mov
mov
jo
jmp
(bad)
adc
jp
mov
mov
in
fdiv
sbb
add
xchg
in
jp
and
adc
in
sub
scas
lds
call
inc
adc
xchg
dec
dec
out
dec
adc
and
pop
sbb
imul
sbb
xor
jecxz
pop
inc
in
inc
sub
dec
dec
dec
xchg
in
pop
jg
inc
mov
cld
add
addr16
push
sub
or
fstp
jle
data16
push
or
int
cmp
mov
fisttp
cmc
xchg
out
movs
xor
jge
mov
dec
(bad)
aad
sti
sbb
sar
lahf
dec
sbb
mov
cmp
and
or
clts
cld
cmp
mov
xchg
add
jb
or
cmp
imul
das
addr16
ins
loopne
rcr
cld
sub
adc
repnz
jg
movs
mov
adc
out
sub
push
or
pop
div
daa
mov
shr
iret
jmp
das
cmps
push
rcl
push
xor
(bad)
cwde
mov
cdq
loop
mov
pusha
pop
ror
retf
test
mov
pop
mov
mov
adc
mov
nop
daa
push
(bad)
and
adc
pop
rcr
mov
add
add
sti
pop
stos
inc
mov
sub
sti
je
mov
fcomp
pop
push
lea
lea
inc
and
test
sub
xchg
dec
dec
out
repz
outs
dec
sub
(bad)
pushf
sub
sahf
jo
in
jno
cmp
gs
call
test
mov
out
adc
adc
sub
ja
test
mov
sbb
cmc
movs
mov
dec
jmp
mov
imul
cmp
and
rcr
xchg
jno
mov
push
lods
call
jae
dec
add
pop
cdq
shr
pushf
ds
and
xor
je
hlt
cmovne
cmp
ins
mov
outs
xor
xchg
mov
or
mov
std
jmp
or
mov
jge
push
not
cmp
jno
stc
jl
popa
mov
add
pop
push
lods
push
xor
dec
int3
lods
je
rcr
mov
out
push
mov
xchg
dec
fidiv
dec
repz
jge
mov
xor
jl
sbb
xor
pop
jmp
ret
mov
je
inc
aad
(bad)
jbe
add
xor
int
loop
outs
test
outs
mov
and
fisttp
sub
jge
inc
inc
pop
dec
fidiv
cmp
inc
pop
popf
inc
sbb
data16
imul
call
jo
dec
pop
add
out
push
xlat
mov
push
sbb
inc
xor
inc
add
cld
sti
test
icebp
push
cmp
xchg
int
test
outs
icebp
repnz
das
movs
retf
out
cmp
push
inc
jno
scas
sub
inc
scas
lods
mov
sbb
in
dec
or
lahf
and
cdq
cli
data16
fwait
xor
cwde
scas
(bad)
in
mov
xor
fisttp
ins
mov
mov
pop
shr
mov
ja
add
leave
jns
stc
sub
pop
movs
(bad)
loop
ss
push
sbb
and
test
mov
mov
or
ds
sti
shr
sbb
(bad)
push
pushf
jecxz
lods
pushf
loope
iret
inc
xor
fmul
jge
pop
jae
xor
cs
or
in
data16
mov
jl
cmp
xchg
nop
rcr
lods
outs
pop
add
xor
push
popf
cmps
outs
cld
scas
cmp
mov
neg
adc
test
out
mov
gs
jae
ss
cmp
out
inc
xchg
jnp
mov
dec
and
les
scas
jg
std
mov
push
xor
adc
jb
mov
xor
popa
shl
jne
ret
lds
mov
sub
push
neg
mov
push
(bad)
lods
mov
aaa
jmp
rcl
test
inc
sar
push
push
inc
jecxz
mov
sar
cld
repz
aas
(bad)
cld
repz
jmp
sar
sbb
or
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cdq
out
mov
rcr
ror
cmp
sbb
dec
aaa
xor
popf
sahf
out
sahf
cmps
ja
mov
add
adc
cmps
pop
add
jne
inc
data16
push
jns
xchg
sub
(bad)
sbb
data16
cwde
stos
cs
mov
or
outs
mov
dec
mov
popf
rcr
repnz
cdq
mov
xlat
jp
pop
(bad)
pop
dec
fnstsw
jnp
pusha
mov
or
mov
mov
imul
cmp
sahf
jbe
adc
mov
mov
ss
mov
xchg
shl
mov
cli
dec
jg
scas
inc
sub
mov
out
and
xchg
cwde
lahf
ret
int3
xchg
pushf
rcr
add
test
sub
pop
jno
cmp
add
push
pusha
pop
stc
push
push
daa
lods
arpl
jecxz
out
in
pop
pop
in
popa
mov
ret
outs
aas
pop
ja
jns
fistp
pop
mov
cmps
lds
jg
mov
pop
adc
pop
jle
dec
int3
mov
xor
xor
fsub
mov
pop
xor
dec
and
pushf
pop
dec
sub
cdq
(bad)
popa
jne
add
cdq
adc
aas
adc
mov
pop
data16
out
xor
jns
mov
test
fbld
enter
xchg
mov
test
dec
sbb
push
ret
mov
clc
mov
leave
cli
dec
push
les
xchg
loopne
adc
(bad)
cmp
push
cdq
(bad)
xor
(bad)
call
outs
mov
ret
push
sub
lods
adc
das
xchg
or
fwait
test
pop
inc
test
sub
fild
popa
ret
test
and
cs
mov
pop
dec
dec
pop
arpl
xchg
dec
mov
push
inc
add
scas
out
int3
add
dec
push
rcl
inc
ins
fdivr
push
mov
js
cmps
push
fsubr
scas
ficom
ud1
daa
pop
inc
into
or
scas
dec
xchg
js
retf
(bad)
stos
inc
out
into
jo
xchg
adc
sbb
cmp
pop
and
and
mov
in
int
je
adc
pop
scas
rcr
sbb
sbb
inc
mov
repz
push
sbb
shl
add
sub
mov
jb
popf
xchg
dec
fdiv
dec
repnz
aas
cmp
jecxz
jecxz
in
ins
(bad)
lahf
je
jl
xchg
fwait
pop
or
hlt
or
shl
pop
inc
mov
xor
push
mov
add
(bad)
fbld
test
das
rol
mov
cmps
aaa
mov
xor
test
retf
dec
xchg
jnp
test
pusha
pop
icebp
inc
popa
sub
and
jo
jbe
test
ret
pop
adc
aaa
daa
pop
fst
aam
adc
mov
push
jns
js
into
lds
out
pop
stos
mov
and
pop
sbb
test
mov
xchg
mov
(bad)
loopne
ds
(bad)
js
cmp
push
out
movs
jnp
dec
and
jecxz
jl
xchg
popa
jbe
shr
aas
cmps
sub
cmps
pop
movs
jl
nop
xor
push
sbb
jecxz
xchg
jp
push
(bad)
add
mov
call
inc
gs
add
ret
dec
push
ja
mov
shr
push
and
aam
jns
push
sub
aaa
call
or
jno
mov
ret
cli
lahf
scas
cmps
aam
(bad)
imul
mov
inc
test
inc
das
test
cmp
rcl
sahf
push
cmp
dec
push
sub
in
xor
push
mov
test
gs
add
push
jg
dec
add
inc
xor
mov
aad
pop
push
cmp
push
mov
dec
push
xchg
sbb
lods
and
cs
or
ret
test
jmp
push
pushf
aas
mov
sub
xor
js
repnz
das
sbb
movs
es
pop
sub
loope
fwait
add
inc
pop
in
push
(bad)
add
das
sub
aad
mov
lods
outs
jns
mov
mov
cmc
xlat
sbb
or
scas
mov
or
sbb
(bad)
inc
mov
stos
add
xchg
xlat
scas
out
jl
dec
fstp
mov
ins
adc
les
inc
ins
mov
sub
pop
in
lahf
push
stc
in
cmps
jmp
out
or
xor
and
jecxz
jbe
outs
lds
adc
xchg
retf
sub
jns
cmp
mov
cmps
fld
and
ja
mul
fistp
mov
mov
stc
test
test
nop
sti
cmc
jmp
mov
fadd
dec
(bad)
daa
cld
mov
mov
aad
adc
and
cmp
outs
xor
lock
inc
pop
fcomp
mov
test
jg
jmp
adc
pop
jg
sub
rcl
sar
sub
iret
out
leave
(bad)
ins
or
mul
fistp
jnp
cmp
jp
xor
sub
cmps
push
adc
outs
push
dec
fnstsw
sbb
adc
xchg
and
pop
test
(bad)
mov
and
(bad)
jmp
fldcw
mov
das
adc
pop
out
bound
ss
mov
xchg
pushf
and
push
xchg
ss
jmp
dec
cmp
jp
ins
hlt
in
sar
nop
add
pop
lds
cs
pop
xchg
adc
pop
sbb
push
inc
dec
retf
arpl
into
hlt
or
(bad)
pop
js
jno
sbb
add
adc
stos
rcl
push
jl
mov
loop
push
hlt
pop
jbe
pop
jmp
cmp
hlt
sbb
adc
inc
push
inc
mov
sti
imul
lds
bound
push
out
mov
aam
push
adc
dec
stos
sub
bound
jb
fnop
pop
push
call
jg
sub
(bad)
mov
jle
loopne
fst
pop
jmp
imul
in
cmp
call
mov
push
push
dec
cmp
jge
or
and
sti
mov
test
pop
xlat
sbb
adc
fwait
hlt
into
and
add
mov
adc
xor
adc
(bad)
movs
xchg
es
dec
aaa
rol
mov
jnp
mov
es
pop
pop
xor
inc
push
mov
and
cwde
mov
xchg
retf
lds
je
xor
jo
icebp
sar
in
pop
lock
scas
jl
jp
into
or
sub
xchg
or
mov
addr16
inc
xchg
mov
lds
cld
into
pop
cmp
cmp
(bad)
out
fld
scas
xor
jecxz
addr16
dec
ret
mov
sub
jmp
add
dec
pop
sub
jl
inc
add
xchg
xchg
aas
dec
mov
and
push
push
cmp
xor
mov
scas
jo
pop
test
repnz
ret
mov
pop
mov
and
retf
fcomp
adc
xchg
je
fstp
mov
xor
xor
test
jg
push
cmc
in
mov
sbb
(bad)
mov
or
popa
xor
add
push
jmp
dec
jns
inc
jg
call
fucom
jl
adc
jns
jge
(bad)
pop
in
jl
loope
jb
jp
data16
inc
in
fld
ror
mov
cmps
imul
sbb
cdq
daa
xor
xor
leave
and
int3
adc
mov
test
cli
sub
hlt
jl
cli
mov
lock
cld
je
sar
aas
cmc
and
cmp
push
add
jmp
sbb
push
lock
xor
cmp
sbb
dec
xchg
adc
or
inc
cmp
sbb
cmp
gs
imul
push
pop
popa
inc
sbb
aas
mov
stos
and
cmps
fsubr
fadd
mov
(bad)
out
xor
mov
xchg
(bad)
fcomip
jb
sbb
scas
dec
dec
add
inc
pop
sbb
mov
add
mov
mov
xchg
mov
mov
lock
sub
jge
sub
rol
and
sub
movs
sbb
add
or
ror
repz
xor
sub
dec
loop
jae
mov
cli
sbb
add
pop
aam
push
push
pushf
sbb
sub
or
movs
cmc
lea
fcom
xchg
cmc
mov
push
adc
rol
mov
lahf
mov
xor
adc
loop
jp
push
inc
push
push
jmp
pusha
sbb
punpcklwd
ret
cmp
ja
xchg
pop
push
and
mov
dec
dec
jle
(bad)
aam
repnz
mov
pop
cs
and
ret
push
push
ss
jb
mov
and
call
inc
sub
inc
mov
jmp
mov
sar
pop
xor
mov
icebp
mov
mov
sbb
fsubr
xlat
adc
fist
inc
mov
repz
mov
mov
jp
popa
or
mov
mov
mov
nop
mov
pusha
jno
fwait
xor
jl
xchg
scas
rcl
push
mov
lahf
cwde
icebp
jmp
test
scas
loope
add
pop
rcl
cmp
or
sub
dec
pusha
call
xchg
push
test
lds
hlt
sbb
fcmovu
sub
(bad)
(bad)
pop
gs
mov
outs
(bad)
sbb
mov
aam
(bad)
stc
mov
ins
jg
loopne
cmc
sub
inc
jle
mov
and
push
or
push
lahf
stc
mov
sti
nop
mov
aad
or
push
fld
cmp
lahf
xor
ret
fs
mov
pop
cmp
jns
sub
repnz
in
jmp
pop
lea
mov
lahf
adc
xchg
cmp
push
inc
push
mov
mov
push
and
sti
dec
jo
aad
mov
scas
and
ja
mov
sti
retf
scas
pop
fs
pop
jecxz
call
xchg
das
call
mov
fnstcw
mov
add
adc
jp
mov
push
scas
xchg
lods
out
out
or
arpl
enter
jecxz
add
les
pusha
pop
lahf
mov
cmps
dec
rcl
shl
mov
pop
ins
mov
adc
xchg
xor
cmp
frstor
dec
retf
in
shl
mov
and
mov
pop
mov
sbb
sbb
pop
cmc
cdq
xor
cmps
out
jmp
jne
ficom
and
push
push
sbb
or
sbb
(bad)
jbe
(bad)
jbe
sbb
(bad)
jb
push
push
ja
cwde
movs
stc
dec
xchg
xor
inc
nop
popf
pushf
add
repnz
mov
xlat
push
dec
xor
repnz
in
scas
cmp
lods
call
js
adc
imul
out
imul
pop
push
out
dec
cmc
sub
(bad)
xor
inc
pop
mov
movs
mov
shl
je
jnp
mov
xchg
mov
sub
(bad)
jae
dec
bswap
test
sbb
pop
push
xchg
div
adc
inc
cmp
xchg
mov
and
mov
inc
inc
fwait
xor
jne
inc
cmp
cmp
mov
dec
loop
jb
std
pushf
test
add
sbb
xchg
xchg
adc
pushf
sbb
xor
loop
jbe
les
sbb
dec
inc
xor
cmc
popf
sbb
test
sar
or
sub
push
pushf
js
sbb
push
sub
out
stos
cdq
push
jno
aad
ins
addr16
push
or
out
fadd
sbb
enter
dec
movs
sti
add
fs
xchg
aad
arpl
outs
cmp
pusha
xlat
rcl
jnp
mov
jp
outs
cmps
add
push
xchg
out
rcl
mov
mov
imul
test
aaa
inc
sbb
xor
loopne
mov
jns
sub
addr16
lahf
add
sti
jecxz
enter
adc
ror
neg
mov
mov
mov
adc
or
sbb
cmp
push
adc
cmp
in
mov
inc
adc
inc
xchg
in
popa
in
pop
and
add
xchg
xchg
inc
sbb
push
mov
hlt
fwait
sub
aaa
iret
lea
push
call
stc
mov
dec
xor
sub
lds
in
(bad)
jge
(bad)
sahf
ffree
jne
mov
jecxz
jnp
(bad)
mov
xor
ret
mov
mov
test
popf
cmp
push
jno
lahf
add
mov
(bad)
cmp
xchg
xchg
scas
xchg
mov
test
mov
adc
mov
mov
ins
dec
sub
and
xchg
cmp
lock
lods
mov
mov
add
clc
ins
push
push
sti
sub
loop
push
daa
sbb
daa
mov
inc
sub
bound
push
lea
shl
js
aad
pop
enter
cmp
(bad)
loope
iret
ja
aaa
push
pusha
scas
push
ret
les
and
or
push
fwait
(bad)
cdq
and
jmp
add
pop
pop
fist
cmp
mov
add
sbb
add
mov
fbstp
or
push
leave
xchg
aam
jp
sbb
rcl
adc
(bad)
stos
cdq
push
pop
out
adc
mov
fstp
repz
mov
ds
add
or
jge
mov
dec
pop
rcl
retfw
mov
dec
inc
add
js
adc
fst
xchg
rol
and
sub
inc
aas
scas
cmp
mov
gs
popf
dec
xor
mov
mov
cmps
xchg
sbb
xchg
xchg
jb
mov
fld
retf
xchg
sub
icebp
push
fiadd
inc
mov
(bad)
stc
adc
push
sub
retf
aaa
pushf
or
jmp
retf
inc
scas
cmp
dec
sub
icebp
add
pop
(bad)
ins
sbb
out
test
sub
sbb
nop
pop
sbb
retf
movs
push
daa
push
das
adc
jg
nop
push
leave
xchg
cmp
add
xor
das
into
mov
es
add
cmp
dec
cmps
cwde
(bad)
into
xchg
mul
stos
(bad)
adc
stc
sub
outs
rcr
bnd
add
push
jp
dec
and
push
xchg
mov
sub
inc
push
in
and
jnp
or
popf
mov
mov
aaa
scas
movs
pop
mov
add
xor
xchg
cwde
mov
cmc
in
cmp
push
xlat
inc
adc
push
jbe
mov
mov
push
and
cld
mov
dec
outs
mov
psubq
jg
cld
adc
fisubr
pop
mov
sbb
aam
cdq
push
in
cmp
dec
jg
clc
call
xor
es
je
(bad)
pop
jmp
or
imul
jbe
inc
addr16
cmp
lahf
popa
dec
or
xor
arpl
arpl
div
idiv
ret
out
mov
or
push
mov
gs
imul
(bad)
jp
push
aam
fistp
xor
out
dec
jmp
sub
iret
inc
push
jbe
inc
add
pusha
push
rep
or
adc
adc
aam
mov
inc
inc
ja
rcl
dec
movs
pop
stos
dec
push
in
xchg
cmps
pop
xchg
sbb
hlt
cmps
sub
leave
(bad)
sahf
add
in
iret
movs
mov
inc
sub
or
aaa
fadd
mov
cmp
enter
mov
(bad)
stc
iret
jg
repz
(bad)
cld
out
call
add
repnz
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
xlat
test
or
and
mov
mov
pop
mov
nop
sbb
inc
push
bound
nop
sbb
and
mov
ja
(bad)
ds
push
mov
scas
xchg
add
leave
(bad)
cmp
popf
add
mov
loopne
or
jnp
push
cli
or
and
sub
xlat
fidivr
test
lods
xor
ficom
mov
push
pushf
xor
mov
call
cld
out
adc
xlat
out
ss
push
ret
fidivr
icebp
call
std
mov
in
mov
mov
stos
and
pop
fstp
loope
or
cmp
iret
push
int
shl
mov
pop
add
cmp
push
stos
dec
add
mov
paddsb
add
movs
mov
cmps
loop
cmps
cmps
(bad)
retf
mov
js
clc
push
inc
test
retf
mov
mov
call
(bad)
xchg
inc
shr
inc
xor
ret
sub
sahf
mov
je
dec
xchg
ffreep
pushf
add
loopne
jl
push
icebp
popa
test
adc
mov
dec
pushf
cli
mov
in
(bad)
mov
add
cmp
movs
ja
aaa
pop
mov
pusha
test
scas
ins
out
data16
mov
adc
fnstenv
pusha
or
jp
xor
xchg
pop
ds
pop
not
leave
xchg
int3
and
jge
push
cmps
arpl
sbb
or
enter
sbb
fstp
call
in
sbb
imul
pushf
loopne
dec
pop
dec
inc
xor
add
mov
mov
pop
xchg
call
cli
(bad)
ja
jg
(bad)
cli
xor
sub
adc
ja
sti
push
std
cmc
adc
jecxz
ja
fwait
jbe
mov
scas
xor
dec
jg
(bad)
aas
(bad)
cmp
cdq
pop
adc
sbb
hlt
enter
ja
ret
jge
dec
les
mov
mov
cmps
push
xlat
mov
mov
aam
mov
fwait
outs
outs
out
enter
jmp
inc
idiv
scas
sbb
cwde
adc
inc
sub
in
fiadd
dec
mov
xor
retf
mov
sub
cmp
or
idiv
std
mov
mov
inc
jmp
mov
in
call
in
cmp
mov
ds
outs
jp
stc
bound
mov
cmps
xchg
sub
inc
inc
xlat
enter
mov
jge
imul
adc
or
cwde
dec
out
ins
inc
(bad)
push
or
or
sub
push
jo
jne
popa
stc
pop
mov
sbb
frstor
mov
out
addr16
mov
(bad)
cwde
jge
ins
cli
out
push
jge
rcr
mov
push
iret
data16
dec
and
adc
mov
mov
cmps
pop
dec
inc
push
dec
icebp
pop
out
push
pushf
test
mov
mov
xchg
gs
push
fwait
retf
rol
and
sub
not
daa
add
stc
not
lahf
out
or
xchg
(bad)
sub
cmp
cmp
mov
movs
ins
sub
neg
inc
sbb
pop
xchg
mov
call
aad
sti
jno
pop
mov
lock
push
pop
and
repnz
pushf
in
mov
loop
sbb
inc
lods
das
xchg
movs
ins
or
xchg
mov
daa
adc
xchg
ja
or
push
jae
jmp
xor
xchg
popa
jmp
int3
stos
push
daa
dec
add
jae
in
mov
or
or
outs
or
jns
enter
loopne
jle
ret
push
aam
test
xchg
neg
out
lock
mov
and
xor
retf
popf
xchg
lea
lahf
mov
jmp
push
scas
repz
fwait
cli
popa
fst
cli
(bad)
xchg
leave
xor
jmp
lods
cld
iret
xchg
jnp
es
add
sbb
scas
sbb
fmul
mov
mov
ror
xor
mov
and
and
pop
sbb
out
or
jne
ins
dec
or
push
pop
adc
(bad)
cli
clc
ret
pop
aad
ret
pop
daa
dec
jp
mov
push
ror
int
std
mov
cmp
dec
and
jmp
jle
movs
xor
sub
adc
jno
mov
loop
lock
cwde
icebp
in
fcmovb
(bad)
adc
mov
das
pop
mov
and
enter
mov
xchg
enter
inc
jl
push
shr
(bad)
cmps
cwde
popf
or
sbb
pop
mov
pop
xor
fs
test
cli
out
adc
mov
push
add
outs
mov
mov
mov
add
aaa
jns
cmps
(bad)
int3
adc
aaa
mov
push
jmp
fwait
sahf
dec
idiv
xlat
pop
adc
adc
sub
jbe
jae
adc
mov
jmp
loopne
hlt
pusha
aad
out
adc
jno
dec
or
add
lea
mov
and
add
hlt
jb
or
sub
loop
mov
cld
cs
lods
pop
sar
lock
(bad)
(bad)
imul
jecxz
mov
(bad)
xor
sbb
stos
mov
push
cwde
rep
mov
stos
jmp
sub
cwde
stc
pushf
mov
jne
sbb
push
jnp
mov
lahf
cmp
jno
or
jle
jne
cdq
popa
inc
loope
push
(bad)
mov
mov
ds
xchg
mov
bound
in
or
call
push
sahf
push
jp
ins
adc
push
jae
jno
and
xchg
daa
cwde
pop
cli
xor
pop
ss
out
clc
test
sahf
jp
inc
not
ins
xchg
and
xchg
add
test
push
jmp
icebp
dec
cs
dec
enter
push
sar
or
sbb
rcr
sbb
fisub
cmp
mov
sbb
sti
pop
xor
mov
nop
pusha
xor
cld
jl
push
in
push
jae
mov
lahf
int3
arpl
push
not
inc
adc
push
int
loopne
xchg
mov
xchg
push
fs
adc
popa
xor
aam
jg
sbb
popf
mov
out
loop
mov
or
push
(bad)
pop
ds
cmc
mov
mov
xchg
pop
data16
out
mov
mov
lahf
comiss
pop
rol
rol
jle
lods
aad
mov
cmp
(bad)
popa
dec
jae
out
xor
adc
lds
xchg
push
sbb
sbb
repz
movs
movs
or
add
and
xchg
dec
xchg
adc
sub
xor
xor
pop
jo
jo
mov
dec
stos
jne
in
mov
xor
sub
mov
popf
addr16
adc
dec
pop
test
sbb
mov
or
push
stos
aas
adc
xchg
mov
adc
or
sbb
mov
scas
adc
(bad)
ror
cdq
movs
stos
mov
neg
pop
mov
fistp
xlat
or
(bad)
test
xlat
in
pop
jno
pop
fidivr
into
or
push
adc
sbb
ret
mov
call
dec
(bad)
mov
test
fidivr
push
int3
movs
jmp
lods
or
cld
leave
jne
mov
xchg
pushf
add
in
mov
cdq
clc
pushf
sub
push
mov
cmp
in
add
outs
jne
fstp
mov
xor
int
mov
gs
aad
pop
scas
sbb
addr16
aam
leave
cdq
imul
(bad)
ror
addps
aad
aas
sbb
mov
cmp
dec
push
cmps
push
add
test
mov
push
mov
jecxz
inc
jmp
jmp
sbb
cmp
pushw
cmp
shl
adc
sbb
jmp
in
ficom
inc
xchg
xchg
test
sti
ret
push
call
jo
and
lds
push
in
sub
sub
add
or
in
iret
dec
and
cdq
out
mov
(bad)
fs
xor
jbe
add
cwde
dec
mov
and
sub
cmp
ror
cmp
nop
jg
out
cs
in
xlat
ret
out
inc
sub
mov
mov
sub
sub
dec
add
jne
loop
push
test
mov
ds
adc
movs
xchg
mov
or
test
pushf
loope
int3
adc
shr
fnstenv
je
mov
or
xor
fstp
test
pushf
add
fisubr
mov
mov
xchg
inc
add
push
jge
ss
mov
cmps
imul
cld
je
dec
pop
or
imul
arpl
dec
sbb
jle
push
and
shr
inc
sub
pusha
push
cmp
cmps
ds
jae
fnstsw
ss
sbb
daa
cmps
les
or
repnz
mov
movs
fs
es
out
in
mov
std
shl
push
je
pusha
xchg
lock
push
cld
jbe
repnz
lods
retf
cmp
pop
push
and
jae
in
mov
add
inc
sti
pop
pushw
push
test
jp
aaa
pop
in
lock
shr
test
or
mov
jg
mov
or
mov
out
dec
imul
cmp
mov
sub
push
stos
fst
frstor
jge
sbb
ss
(bad)
fadd
and
push
out
mov
or
shl
movs
or
stc
in
cmp
mov
mov
dec
sub
jo
out
(bad)
jl
ror
jns
fist
mov
ins
ud1
ret
(bad)
push
or
in
loopne
adc
sub
xchg
push
cmp
scas
add
add
dec
or
test
adc
call
jnp
addr16
jo
outs
(bad)
into
outs
push
cmp
loope
and
mov
and
xchg
int
pop
mov
lods
inc
push
aad
sub
push
inc
dec
outs
adc
sbb
rcr
add
cli
push
movs
test
mov
or
test
push
mov
out
cs
cmovb
dec
inc
xor
pop
xor
add
mov
xchg
pushf
mov
iret
dec
out
in
jb
call
ret
xor
jmp
push
(bad)
cwde
sbb
or
mov
push
jge
and
clc
or
test
jns
fs
sbb
adc
sub
pop
inc
retf
fs
mov
in
jmp
mov
popf
ins
fistp
inc
xlat
jb
sahf
test
push
das
lds
add
shl
mov
cmp
stos
idiv
cmps
xchg
imul
mov
xrelease
cmps
cmp
jg
push
ins
mov
cdq
es
scas
out
add
les
mov
fst
mov
sub
push
iret
bound
test
push
arpl
enter
adc
enter
retfw
jl
nop
add
sub
or
inc
cmp
ins
es
and
in
cmc
leave
mov
inc
fwait
mov
dec
test
mov
pop
pop
push
mov
xchg
aam
stos
pop
sub
cwde
jnp
mov
adc
das
dec
popa
pop
jmp
inc
lds
lock
in
inc
jmp
mov
sti
lods
in
add
dec
jb
call
push
inc
aam
mov
mov
(bad)
jmp
dec
sub
out
jecxz
cmp
jmp
xchg
imul
loop
jg
jecxz
imul
cli
and
rep
cdq
inc
jecxz
or
scas
stos
iret
add
jecxz
dec
push
pop
pop
div
inc
or
jl
fdiv
call
movs
adc
cli
bound
cmps
dec
dec
outs
lods
test
xor
lods
aas
mov
mov
or
ja
xor
clc
add
ins
popf
cld
fnstcw
shr
cli
stc
loopne
popa
and
add
and
inc
push
add
out
sub
jmp
cmc
int3
retf
outs
jae
fwait
adc
aam
sub
popa
mov
addr16
shr
cmp
shr
mov
xchg
mov
sar
sar
cvtpi2ps
inc
fnstenv
cs
sub
cli
stos
lods
leave
sub
(bad)
popf
aam
rol
cmp
daa
enter
cld
cmp
xor
jbe
pop
pop
sub
out
mov
add
lea
movs
sub
ret
rcl
cmp
push
jge
and
pop
stos
cmp
pop
enter
xlat
ins
mov
or
cmp
dec
fimul
and
mov
or
leave
repnz
neg
inc
adc
cmp
cmc
adc
sbb
xor
jmp
inc
mov
mov
jge
leave
pop
pop
jo
xor
not
mov
push
push
movs
mov
sub
lods
push
aaa
pop
test
sbb
cmp
or
rol
xor
scas
adc
mov
push
enter
cdq
or
jle
(bad)
(bad)
ins
inc
aam
add
cmp
and
sahf
xor
push
push
cdq
xchg
idiv
jnp
bnd
outs
jnp
cld
lock
cli
inc
or
jo
xor
jmp
inc
pop
push
outs
hlt
pop
sti
add
inc
cmp
je
inc
dec
(bad)
jmp
pushf
mov
pop
xchg
add
inc
fwait
cmp
leave
pop
and
popa
into
mov
xlat
sub
call
sub
and
int3
arpl
addr16
and
inc
fisttp
xor
movs
jb
lods
in
inc
lds
cmp
xchg
sar
and
xchg
fwait
adc
dec
cwde
enter
mov
jle
fdivr
add
out
jnp
icebp
mov
push
popa
les
jmp
and
jo
iret
mov
in
xor
sub
xor
cmp
adc
inc
stos
fsubp
jle
dec
add
loopne
punpckldq
loop
fiadd
(bad)
xor
cmp
jmp
test
adc
xchg
inc
mov
or
fs
pop
loopne
mov
sbb
out
enter
mov
dec
aaa
jl
retf
xchg
jmp
out
sub
jne
push
push
xchg
mov
sahf
mov
xor
ret
cmp
mov
add
pop
and
ins
cwde
test
xchg
clc
int
push
(bad)
(bad)
leave
jle
arpl
xchg
pop
jae
pop
or
or
popf
xor
lods
fst
loope
sbb
sub
and
aam
stos
stos
jnp
cmp
rcr
mov
mov
js
fimul
outs
pop
(bad)
push
pop
xor
(bad)
sub
(bad)
and
add
(bad)
aam
push
aad
add
out
adc
push
das
fcmovnbe
xor
and
(bad)
je
and
jb
inc
push
jp
cmp
xor
enter
jmp
sub
addr16
js
out
xor
lods
mov
dec
into
sbb
call
pop
daa
rcl
fld
inc
xchg
test
jnp
mov
mov
and
lods
mov
mov
les
dec
adc
jle
pop
mov
addr16
xchg
pop
sbb
stos
push
inc
inc
xchg
dec
cmp
push
outs
mov
loop
aas
scas
and
in
and
lea
fwait
out
pop
mov
add
push
rol
cdq
retf
fisttp
dec
push
dec
mov
xchg
mov
sbb
mov
in
fmul
aas
inc
(bad)
push
push
sbb
sub
repnz
(bad)
cli
int3
stos
call
or
gs
jae
bound
or
icebp
mov
jg
dec
mov
dec
jb
sbb
outs
add
enter
or
fsub
out
mov
adc
popf
mov
aam
sar
sahf
dec
nop
or
mov
or
shl
inc
mov
jp
pop
retw
xor
mov
add
out
jg
stc
out
jg
stc
jg
add
aas
push
mov
lods
ja
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
sbb
je
cmps
dec
dec
out
int
xor
dec
pushf
sbb
addr16
out
les
jbe
outs
mov
(bad)
lahf
pop
add
aas
mov
inc
test
lods
adc
sub
cmp
push
fst
dec
sahf
ja
stc
pusha
lahf
jne
ins
aad
add
xchg
jns
adc
lock
rcl
mov
jge
cmc
adc
dec
test
push
and
jno
ret
lds
xchg
les
test
in
shr
pop
pop
ins
stc
scas
xchg
je
daa
test
mov
mov
movs
imul
or
and
push
jp
jmp
cmp
inc
push
mov
je
mov
add
and
cmp
pop
inc
adc
imul
lods
fcmovb
(bad)
sbb
aaa
xchg
shr
aad
sub
movs
daa
jg
neg
xchg
test
cli
xor
mov
test
or
mov
jge
inc
fwait
or
pop
outs
cmps
push
fmul
cwde
or
add
es
scas
lock
push
icebp
jb
sub
sub
daa
mov
popa
jmp
jecxz
sbb
pop
repnz
retf
add
jge
push
cli
mov
test
retf
jl
mov
inc
std
sbb
jecxz
aam
cld
adc
xchg
retf
iret
mov
shl
popa
bnd
xor
xchg
jno
out
and
in
retf
cld
ret
pushf
fs
push
xchg
and
and
jb
cmp
call
iret
mov
test
ja
xchg
repz
out
xchg
int
leave
pop
fdiv
cmp
adc
test
inc
adc
add
pusha
push
fsub
mov
fwait
dec
jmp
pusha
rcl
aam
sbb
dec
mov
push
mov
inc
push
or
imul
mov
enter
mov
xor
les
xchg
cmp
add
repnz
fisub
fs
cmp
xchg
out
lea
xor
xlat
xor
sbb
lods
jnp
je
and
inc
pop
and
ss
adc
(bad)
hlt
jnp
rep
pop
cmp
dec
ret
dec
rcl
cmps
in
aaa
and
adc
push
sbb
mov
aad
or
hlt
repnz
jne
inc
push
jmp
in
cmp
imul
mov
sub
es
or
xchg
arpl
dec
inc
jmp
out
fstp
xchg
adc
ret
push
shl
mov
sub
jl
sub
out
mov
cmp
ins
in
cmps
xchg
pop
(bad)
mov
jae
addr16
clc
mov
ja
fwait
jg
adc
mov
in
loopne
clc
sahf
adc
dec
xchg
dec
cmps
adc
xchg
sahf
out
sbb
pusha
jae
rol
pop
xor
dec
cmp
das
mov
imul
push
mov
dec
lds
vpsubsb
sbb
fisubr
not
pop
dec
imul
out
jns
(bad)
cmps
jle
imul
and
push
mov
xchg
mov
push
inc
lds
jmp
jg
mov
daa
mov
and
mov
lock
jge
xor
(bad)
dec
xor
dec
and
sub
push
je
mov
je
cld
push
and
mov
sub
xlat
mov
stc
mul
cmp
jle
add
call
imul
fstp
jmp
scas
mov
cmp
add
and
inc
(bad)
scas
add
les
popa
or
jg
sub
ja
sbb
jmp
mov
pushf
mov
xchg
inc
fidivr
mov
fucomp
jp
jno
pop
cdq
or
mov
xchg
dec
xchg
mov
jl
call
jae
and
inc
retf
xor
je
mov
cmp
sbb
xchg
ror
dec
call
mov
cmp
pop
sub
dec
inc
dec
fstp
call
jne
enter
jg
xchg
dec
jnp
push
gs
test
(bad)
adc
fwait
mov
xor
mov
sub
mov
cld
add
data16
dec
(bad)
imul
add
movs
mov
jge
int
out
stos
mov
mov
mov
outs
mov
mov
xchg
test
in
and
cmp
xchg
(bad)
popa
xchg
mov
cli
stos
cmps
repz
sbb
mov
mov
int3
inc
dec
das
shl
call
(bad)
sbb
into
mov
lds
jo
sub
pop
aad
movs
fs
dec
cmp
lods
(bad)
fcmovu
push
cmp
or
mov
sbb
lods
mov
push
and
xor
xchg
mov
fcom
dec
mov
xchg
stc
or
jge
add
cs
lds
pushf
ins
aam
ror
ret
imul
sub
es
sbb
dec
in
mov
adc
mov
movs
sub
xchg
mov
push
jmp
jb
iret
push
push
test
fcmovbe
cmp
imul
dec
sbb
xchg
mov
mov
add
cmps
fcomp
aas
outs
sahf
(bad)
inc
jmp
cmp
push
sub
xchg
push
xor
popf
movs
shl
aas
movs
rol
inc
adc
sbb
cli
js
test
and
xor
ret
test
in
out
push
rcl
and
fimul
mov
pushf
(bad)
in
push
or
dec
sbb
test
outs
add
sahf
clts
fiadd
xchg
and
gs
cmp
pop
mov
dec
div
aam
and
cmp
cmps
sbb
xchg
sub
outs
fld
je
cmp
out
push
pop
sbb
inc
pop
push
mov
xchg
xchg
pop
xchg
or
cdq
xchg
nop
xor
inc
push
or
pop
(bad)
fnstcw
and
jnp
and
lea
inc
mov
ins
sbb
stos
icebp
daa
pop
sbb
cmp
into
shl
sub
aaa
push
mov
inc
dec
cmp
in
les
call
neg
mov
xchg
sub
sbb
cmc
jae
xchg
(bad)
sbb
repz
iret
sub
in
cmp
and
jbe
xchg
sub
xchg
shr
sbb
fbstp
or
cli
cmp
xor
jns
les
push
repnz
mov
pusha
cdq
inc
scas
shr
fld
cmp
pop
(bad)
adc
mov
repz
cwde
push
mov
pop
add
cmp
push
jns
pushf
stc
icebp
add
push
push
cmp
popf
mov
daa
or
inc
ret
inc
in
and
aaa
inc
adc
jmp
sub
(bad)
cmp
arpl
mov
inc
pop
mov
daa
int3
(bad)
mov
sbb
sbb
cmps
cmc
mov
sbb
mov
loopne
sub
pushf
mov
add
cdq
loop
jmp
and
jne
push
lahf
in
pushf
call
fnsave
push
add
and
popa
add
ficomp
xor
mov
jno
mov
dec
aad
in
mov
ret
jmp
mov
adc
jbe
add
pusha
jle
jge
fild
xor
push
jnp
inc
gs
mov
adc
push
ret
inc
gs
arpl
xor
xchg
and
mov
scas
sub
push
(bad)
xchg
adc
jecxz
sar
jns
iret
or
fst
bound
in
pop
imul
loopne
push
pop
cdq
pop
pop
jbe
push
xchg
mov
leave
jg
leave
sub
add
jmp
(bad)
push
test
movs
add
push
xor
sub
jo
cmp
and
test
sbb
jnp
cmps
sbb
test
stc
in
es
test
and
(bad)
jmp
sub
mov
xchg
adc
repz
mov
sub
dec
xchg
ds
fild
and
hlt
xchg
aam
xchg
cdq
mov
ja
push
outs
sub
mov
add
sbb
rol
mov
jmp
adc
or
mov
pop
cmp
repnz
ja
out
sbb
popa
xor
mov
mov
hlt
jns
push
pushf
pop
fisttp
mov
int
push
(bad)
xor
je
pop
push
xchg
pusha
or
xchg
or
bound
(bad)
movs
xchg
pop
daa
pop
inc
adc
test
sti
cwde
test
fs
push
push
pushf
popa
pop
pop
xlat
xchg
std
push
mov
dec
bnd
in
cmp
cmp
push
mov
loop
dec
or
out
leave
in
dec
or
and
in
mov
lods
push
out
(bad)
fcomp
mov
daa
jae
cs
ficom
mov
adc
and
test
push
jge
mov
inc
inc
out
jmp
cmp
mov
lds
(bad)
data16
sub
jmp
fld
mulps
mov
(bad)
add
cmp
es
sub
in
and
in
mov
fistp
jle
cmp
scas
cli
mov
ret
and
fnstcw
inc
pop
sar
inc
push
or
cdq
pop
in
sar
fild
push
nop
xchg
aam
mov
cmp
repz
sahf
loope
pop
push
xchg
fcmovnu
push
pop
ins
mov
sub
outs
or
fdivr
xor
jmp
hlt
xchg
outs
jecxz
adc
cld
loop
sti
xchg
and
(bad)
inc
loopne
inc
mov
call
push
sub
icebp
jb
push
and
push
(bad)
and
sti
xchg
push
xchg
mov
mov
call
push
inc
fdivrp
or
imul
pushf
push
pop
cld
sahf
mov
xchg
repz
ja
(bad)
fcomp
cmp
xor
pop
pop
mov
pop
adc
imul
fadd
jle
dec
mov
loop
daa
pop
adc
fistp
sar
dec
outs
mov
hlt
xchg
cdq
rcl
mov
inc
shl
dec
or
int
cli
fisub
sbb
daa
neg
pop
add
sbb
jg
aaa
pushf
popf
jmp
adc
sub
add
add
pop
out
test
and
stos
push
or
(bad)
(bad)
(bad)
scas
push
and
xlat
in
xor
nop
ins
cmps
jns
dec
pop
add
lods
cld
or
sub
scas
hlt
mov
sub
xchg
imul
pop
push
jnp
daa
sub
jmp
inc
ja
cmps
inc
js
shl
jb
call
ins
dec
popa
sub
repnz
retf
icebp
mov
sbb
cmp
lods
mov
jbe
mov
gs
call
inc
adc
push
xor
sub
ret
jg
jb
sub
cmp
adc
pop
outs
push
xor
sub
(bad)
mov
inc
add
dec
dec
montmul
cmps
xchg
stos
shl
inc
push
jg
test
call
popf
xor
and
test
jecxz
fld
mov
pop
mov
mov
jnp
xlat
sbb
mov
jbe
dec
add
pop
pop
xchg
out
and
sub
nop
xor
hlt
xchg
pop
daa
mov
int
mov
test
lds
ds
cmp
std
xchg
mov
adc
lahf
das
out
xor
dec
push
push
pop
jbe
adc
call
add
xor
into
clc
sub
cmps
std
mov
fwait
mov
rol
fdivr
in
or
jns
mov
and
add
imul
push
(bad)
dec
adc
sbb
fldenv
jmp
movs
std
in
repz
mov
fcmovu
pop
add
inc
sbb
aam
loope
cmp
hlt
rcr
and
inc
rcl
push
inc
cdq
push
jp
dec
repz
fs
xchg
pop
cmp
inc
mov
arpl
mov
sub
fdivr
mov
cmp
mov
and
inc
mov
jmp
lods
dec
xchg
jbe
push
fisttp
pop
idiv
mov
mov
cmps
adc
ret
fst
in
xchg
xor
(bad)
push
lods
(bad)
mov
cmp
ss
call
push
xchg
xchg
pop
jo
rcr
push
(bad)
mov
cmp
(bad)
sti
fimul
cmc
dec
inc
push
in
mov
jp
ins
jmp
ret
dec
fs
add
pop
je
imul
push
mov
repnz
jle
imul
fwait
pop
jo
sar
out
out
nop
retf
cmp
sbb
ins
mov
fld
adc
mov
js
xor
mov
jg
call
mov
inc
daa
call
add
jmp
pop
(bad)
(bad)
fwait
cld
mov
arpl
les
loope
fcom
mov
movs
psraw
push
xor
cmps
xor
fild
dec
hlt
xchg
dec
cmp
xlat
popa
adc
push
or
int
popa
test
fs
(bad)
stos
int
xchg
push
mov
mov
mov
mov
xchg
je
dec
aaa
jno
int
pop
mov
daa
push
sbb
mov
(bad)
jle
shl
jnp
xchg
shr
das
mov
cmp
es
cmps
lahf
hlt
daa
pop
sbb
fild
dec
sub
cli
adc
popf
add
aas
adc
pop
adc
shl
nop
(bad)
fsin
sub
dec
inc
(bad)
fistp
jo
sar
and
xor
dec
jmp
scas
mov
sti
inc
jae
mov
retf
lock
mov
scas
out
mov
pop
movs
into
test
lea
push
pop
loope
cmps
xor
fld
jmp
jg
sub
xchg
adc
inc
sub
mov
in
push
mov
inc
sub
mov
xor
adc
or
sub
rcl
cli
xor
stc
and
xchg
aam
ror
mov
add
sbb
pop
(bad)
movd
enter
test
push
clc
icebp
(bad)
in
scas
xchg
ret
and
gs
mov
into
pop
out
dec
mov
jb
push
push
push
xchg
jb
fisubr
dec
imul
push
push
(bad)
repz
movs
fs
fadd
repz
pop
cmc
out
cmp
and
sbb
jmp
jge
and
xchg
ret
pop
jmp
push
popf
aaa
jmp
nop
pop
mov
mov
fcom
or
int3
jp
scas
lea
adc
ret
adc
cmps
xchg
mov
(bad)
push
div
adc
and
aaa
xlat
adc
out
sub
pushf
and
sbb
aas
fidivr
test
lods
neg
adc
rcr
xchg
sti
mov
rcl
xor
push
add
sar
mov
cmps
rcl
dec
mov
mov
fidivr
mov
pop
mov
push
imul
mov
xchg
push
out
ins
xchg
int
out
xchg
jns
dec
mov
mov
mov
adc
mov
test
add
push
lock
xchg
jbe
test
or
add
push
icebp
rcl
jmp
jbe
jp
adc
xor
ret
aas
test
das
icebp
xchg
test
movs
cs
or
mov
outs
push
jmp
push
lahf
mov
adc
scas
in
stc
jb
mov
xchg
cdq
jl
adc
into
or
xor
mov
cdq
inc
cmp
sbb
inc
add
xor
ja
mov
mov
add
lea
(bad)
cmps
test
sbb
inc
inc
loope
rol
xor
inc
fldenv
xchg
mov
mov
imul
mov
outs
jecxz
cmp
int
scas
imul
or
and
je
sar
pop
push
xchg
xor
cld
fisttp
adc
adc
loop
jg
jecxz
sbb
ss
adc
mov
in
cmp
jp
mov
(bad)
je
push
xchg
jg
repz
(bad)
cld
out
(bad)
stc
iret
push
add
inc
adc
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
aam
and
ret
add
ret
cwde
fcomp
arpl
into
les
in
out
out
mov
rcr
stc
ror
dec
sbb
mov
mov
cmp
add
add
das
mov
daa
aam
xchg
test
adc
cmp
and
dec
imul
repnz
movs
and
dec
ins
clc
test
pop
xchg
or
mov
je
arpl
scas
mov
pop
sbb
mov
jnp
mov
enter
mov
cmps
xor
mov
pushf
xor
scas
pop
sub
in
mov
jmp
pusha
push
jnp
call
addr16
popf
es
test
jl
pop
xchg
sub
(bad)
(bad)
fiadd
(bad)
push
sbb
pop
jg
lds
fstp
jo
add
(bad)
or
addr16
push
sbb
jno
jne
mov
xor
stc
cmc
outs
scas
sub
aad
gs
add
lods
cmps
loopne
sti
neg
stos
pop
cs
adc
fwait
dec
or
(bad)
and
dec
xchg
xor
fcomp
mov
fbstp
fld
pushw
adc
mov
cmp
push
dec
aaa
ror
fs
or
mov
mov
mov
cdq
or
push
scas
imul
movs
push
pop
xlat
xchg
test
fmul
push
(bad)
adc
fisubr
push
pop
inc
lods
xchg
aas
push
das
call
jp
push
mov
push
call
inc
adc
xchg
xor
xor
fimul
mov
xchg
adc
std
mov
xor
sbb
or
rcr
pop
scas
enter
sbb
ror
cmp
mov
lahf
push
push
adc
and
cli
(bad)
mov
sub
and
inc
sti
inc
pop
shl
cmp
add
cli
adc
add
mov
cmp
cmps
sub
frstor
pusha
sub
sub
pop
jge
arpl
add
clc
loope
dec
mov
inc
sbb
pop
xor
adc
mov
xor
scas
rcl
mov
mov
inc
xchg
out
jecxz
xchg
push
(bad)
cmp
mov
pusha
stc
inc
inc
and
push
cdq
out
repz
stos
lds
out
cmps
jns
add
out
sub
xchg
mov
cdq
dec
mov
int
ror
rcr
xchg
rcl
(bad)
cwde
xor
dec
shr
and
mov
xchg
dec
pop
test
dec
mov
pop
retf
mov
fsub
lea
mov
pop
pop
mov
push
pusha
push
jge
xchg
neg
cld
dec
or
out
xchg
push
sub
es
loop
sub
(bad)
dec
sbb
jnp
sub
sbb
inc
jns
pshufw
adc
jns
cli
mov
mov
int
in
xor
jge
mov
(bad)
(bad)
test
xor
imul
in
sti
and
fidivr
xlat
pop
cdq
je
adc
inc
scas
adc
pop
sahf
cmp
and
xchg
ins
(bad)
test
dec
jnp
or
mov
sbb
stos
sbb
mul
test
out
pop
add
dec
inc
xchg
sub
popa
fsubr
iret
scas
pop
sub
dec
fisub
fisub
mov
push
shl
fbstp
or
ss
push
bound
xor
push
pop
lahf
mov
xchg
leave
push
fcom
cmp
pusha
jb
test
mov
sub
cli
ss
xor
dec
mul
or
adc
fsub
(bad)
icebp
repz
test
sti
inc
mov
(bad)
(bad)
mov
not
pop
cld
adc
dec
pop
sti
dec
out
fcomp
and
dec
cmp
retf
repnz
jmp
pushf
cmc
jns
dec
push
dec
xchg
xchg
xchg
push
adc
sahf
retf
mov
jns
adc
sub
pushf
and
cdq
clc
inc
shl
mov
dec
mov
add
cld
push
add
stc
push
jl
mov
push
and
(bad)
rcl
in
inc
or
(bad)
jnp
dec
push
push
sbb
pop
jmp
sti
popa
or
cmp
adc
xor
mov
fs
cmp
mov
cli
daa
in
sahf
loop
or
mov
jecxz
aam
inc
push
shl
es
adc
jne
adc
mov
cmp
and
lock
lods
outs
into
cmps
aad
cmp
test
jecxz
mov
test
mov
add
xchg
dec
sub
inc
ficomp
movs
cmp
mov
repz
xlat
pop
fsubr
add
add
ret
popf
dec
jnp
std
mov
not
std
stos
ss
inc
mov
and
jno
cmp
and
jp
fisttp
push
cmc
std
cmp
cmp
ins
fucomp
dec
cli
xor
xchg
lods
ret
lds
sbb
sub
inc
icebp
mov
jno
(bad)
push
adc
data16
repnz
clc
movs
std
jns
xor
cmp
data16
mov
in
arpl
nop
fild
stc
imul
pop
xchg
mov
retf
sub
sub
cmp
pop
and
sahf
test
fdivp
and
mov
rcr
sub
and
xchg
dec
ret
lds
cwde
dec
cmp
loop
fcmove
sub
cld
ja
inc
rcr
in
inc
loope
movs
ds
jle
sbb
popf
mov
in
push
sbb
lds
scas
push
pop
xchg
rcr
adc
xchg
int3
movs
mov
in
loope
sub
or
mov
sbb
(bad)
popf
push
adc
adc
shr
mov
bound
gs
inc
mov
push
push
push
cwde
mov
std
movs
or
mov
mov
repnz
retf
icebp
in
sbb
jae
mov
ja
stos
sbb
bound
aam
rcl
stos
into
and
cmps
xchg
xor
jmp
push
push
int
xchg
(bad)
enter
imul
leave
xchg
ins
ja
fwait
outs
mov
ja
inc
test
xchg
push
inc
sub
arpl
add
or
in
inc
mov
mov
pusha
cmp
daa
(bad)
imul
(bad)
fsubr
mov
neg
js
out
mov
pop
inc
jge
stc
jne
jmp
ficom
scas
or
pop
pop
fdiv
sbb
mov
lock
pop
inc
mov
dec
fwait
rcl
xchg
das
add
mul
ins
dec
sahf
lahf
and
in
add
xchg
mov
test
mov
mov
and
shl
mov
add
push
pop
loope
xchg
pop
mov
into
int3
mov
cli
xor
in
pop
sub
and
dec
ins
or
mov
popf
xchg
sahf
jge
mov
adc
lods
int3
jmp
cmp
cmp
or
xor
sahf
sti
adc
adc
pop
inc
cmp
ds
je
leave
out
into
gs
jge
iret
fistp
cmp
jl
push
adc
dec
ret
cmc
push
jge
lock
mov
jge
jo
jl
in
movs
mov
mov
jl
leave
into
rol
ins
cmp
or
je
sbb
arpl
(bad)
jns
sti
pop
jns
jge
ficom
jbe
cli
xlat
fld
cs
aad
inc
movs
push
pop
out
dec
stos
sbb
jmp
gs
xchg
pushf
mov
dec
push
or
popf
or
pop
loope
mov
mov
dec
dec
ds
lock
ss
cmp
mov
in
cli
stc
sub
pushf
pop
(bad)
and
leave
push
inc
jp
mov
rcl
pop
call
push
movs
add
jmp
int
rcr
leave
jne
sbb
div
push
sbb
jmp
aaa
cmp
leave
add
mov
xor
arpl
test
daa
push
jl
mov
cmps
sbb
jno
jle
cld
loopne
add
jmp
vpsrlw
cmp
or
inc
dec
icebp
mov
aaa
fsubr
leave
mov
xchg
retf
mov
ror
mov
xor
pushf
push
mov
shl
mov
popa
pop
std
xchg
pop
cwde
or
xchg
sbb
xchg
pop
arpl
mov
push
mov
mov
sub
inc
adc
xor
or
ins
neg
(bad)
aaa
jmp
push
or
dec
sub
jmp
mov
js
outs
out
push
dec
(bad)
mov
sub
(bad)
mov
adc
sbb
inc
outs
cdq
jge
mov
inc
push
aaa
inc
adc
fisubr
hlt
mov
and
or
leave
retf
mov
mov
mov
mov
xor
mov
mov
cmp
ret
data16
sub
jl
movs
push
ficom
add
dec
and
mov
or
sub
xchg
movs
cmp
sti
scas
mov
pop
jmp
xchg
lock
dec
adc
adc
das
retf
enter
mov
mov
dec
adc
mov
shl
xor
xchg
cmp
adc
pop
loopne
mov
mov
inc
cdq
(bad)
jb
(bad)
call
dec
sub
ret
(bad)
ret
ret
das
cmp
inc
repz
sar
fwait
leave
dec
scas
loopne
je
(bad)
inc
inc
dec
push
mov
iret
add
out
je
loopne
xor
and
add
adc
nop
push
mov
inc
ins
les
cmp
inc
ret
pop
xchg
jnp
pop
(bad)
jnp
test
push
add
stos
les
jbe
xor
jno
mov
lock
sub
add
xchg
adc
sahf
inc
in
mov
retf
imul
mov
outs
scas
in
jae
fwait
icebp
out
shr
nop
mov
sub
popf
push
(bad)
dec
inc
(bad)
mov
rep
cli
in
mov
xchg
loop
cmp
loopne
inc
out
(bad)
outs
pop
mov
(bad)
cld
ja
jo
cwde
add
dec
xchg
loop
outs
dec
ins
xchg
mul
or
sub
pop
inc
and
cmp
xor
mov
sub
xchg
add
fsubrp
mov
aaa
xlat
jle
aaa
fld
cmp
mov
pop
mov
push
or
pop
(bad)
pop
sub
movs
in
sub
mov
cs
not
push
cmp
shr
sub
jle
mov
mov
dec
nop
inc
fst
jmp
mov
cld
(bad)
jmp
mov
and
dec
test
out
xlat
fsubr
adc
mov
loope
daa
div
mov
scas
cdq
push
or
push
out
sbb
fldcw
js
fbld
imul
cmps
inc
jb
push
push
push
das
add
adc
fistp
es
mov
jle
push
push
mov
xchg
cmp
add
nop
mov
sahf
inc
(bad)
mov
dec
mov
push
arpl
out
jl
and
add
xor
inc
pop
aaa
jnp
ins
xchg
push
in
shl
mov
into
repnz
fild
iret
cld
sbb
aad
frstor
aad
push
pop
sub
mov
add
test
sbb
ret
lock
push
pop
aam
scas
in
adc
dec
out
add
imul
mov
imul
xchg
and
out
mov
adc
data16
bound
jne
data16
mov
(bad)
pop
into
mov
call
inc
fbstp
cmps
dec
sbb
push
pop
cdq
fidiv
dec
cmp
mov
cmps
dec
out
fmulp
je
jmp
push
test
jbe
aam
mov
fldenv
stc
jmp
pop
push
dec
or
sbb
mov
enter
mov
mov
jmp
sbb
and
in
mov
push
add
xchg
dec
adc
fidivr
jle
mov
neg
not
retf
lods
sahf
sbb
cld
(bad)
iret
in
pop
lea
mov
xchg
test
pop
fdiv
mov
(bad)
addr16
and
mul
cmp
pop
dec
cmp
arpl
daa
jmp
pop
add
push
lds
call
adc
mov
mov
lock
or
scas
pop
arpl
mov
inc
inc
mov
xchg
cmp
mov
jmp
mov
ret
je
inc
cdq
mov
mov
sti
enter
out
movs
retf
inc
xor
sbb
jnp
repnz
add
aaa
mov
jmp
movs
mov
jmp
mov
loope
jmp
in
xchg
xchg
cdq
push
xchg
jmp
dec
clc
add
and
xor
or
mov
sbb
add
pop
fdivr
retf
aad
lahf
sub
mov
fldenv
mov
scas
movs
leave
dec
sub
mov
(bad)
loope
ret
mov
dec
shl
xchg
repnz
mov
std
jnp
bound
jns
into
xlat
mov
jne
lahf
jg
in
dec
jle
push
xchg
fdivr
sub
es
mov
popa
pop
movs
add
pop
dec
xchg
cmp
and
sub
in
inc
cmc
int
iret
cmps
out
pop
int
xchg
xchg
out
scas
mov
mov
rcr
stos
dec
icebp
pop
mov
push
mov
(bad)
gs
dec
scas
out
push
enter
xor
jp
fsub
fldl2t
add
jns
adc
sbb
int3
jne
sub
out
dec
xchg
sub
aaa
push
add
jb
push
and
fcomi
pop
cmps
add
dec
push
int3
push
mov
mov
inc
repnz
push
push
pop
pop
call
or
ficomp
sbb
cmc
(bad)
adc
repz
xor
xor
add
jg
lods
inc
(bad)
pop
cmps
add
movs
mov
not
adc
xor
push
test
test
in
mov
or
jns
adc
(bad)
cs
adc
aad
popf
ins
cmp
retf
clc
sbb
aas
stc
xor
pushf
arpl
ret
ds
je
mov
xor
leave
mov
lods
lock
aam
fdiv
scas
pop
les
scas
cmp
jl
jbe
out
clc
rcr
imul
call
sub
xchg
mov
out
xchg
adc
mov
outs
mov
mov
adc
out
adc
and
and
push
jne
outs
and
test
cmp
add
add
jmp
pop
dec
and
sub
mov
adc
mov
test
loope
mov
mov
xlat
and
add
mov
(bad)
mov
jp
mov
int3
lods
popf
sbb
test
jbe
lahf
arpl
dec
jno
cs
pcmpeqw
lahf
pop
shl
or
jmp
outs
retf
aaa
pop
pop
jmp
popa
fbld
std
mov
mov
daa
mov
fld
repnz
sbb
stos
dec
mov
loopne
pop
movs
retf
cmps
gs
add
mov
shl
xor
or
leave
test
ret
xor
fbld
pop
mov
lods
aam
mov
ins
inc
call
mov
in
xchg
dec
(bad)
cmp
sub
xor
std
xchg
call
clc
push
in
or
cmc
jo
stos
lds
loopne
movs
sub
lahf
call
fcom
(bad)
iret
cmps
sahf
fistp
(bad)
into
nop
push
jno
ins
xor
cmp
xchg
add
xchg
push
sub
cmp
pop
mov
loope
jge
inc
aaa
add
mov
xor
dec
mov
cmps
and
inc
jb
test
cmps
pop
mov
or
test
adc
jno
(bad)
in
mov
mov
jne
sar
mov
sbb
sub
pop
scas
dec
lea
loope
lods
(bad)
fmul
xchg
jmp
jge
call
ret
push
pop
inc
sub
or
cmp
jecxz
jne
xor
push
mov
lock
sti
fild
dec
cmp
out
jg
stc
out
call
add
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
scas
mov
scas
leave
xor
addr16
cmps
mov
data16
jp
jecxz
in
je
cmp
icebp
jg
(bad)
mov
fwait
clc
add
loope
sbb
enter
movs
rcl
push
shr
push
in
lock
cmps
xor
jno
cmc
dec
add
mov
in
inc
jg
call
cdq
movs
fwait
sbb
cwde
sbb
repz
and
pop
rcr
sub
sbb
adc
lods
jg
sahf
stc
mov
push
inc
aad
in
fsub
cmp
outs
cmp
inc
and
jo
imul
in
sub
rep
das
push
mov
xchg
clc
sbb
ror
dec
mov
cmps
mov
neg
sbb
xor
cmp
sub
push
dec
aam
cmp
add
rol
sahf
xchg
cmp
es
push
push
nop
imul
mov
fadd
jge
pop
sub
sbb
jne
scas
int3
test
arpl
lods
rol
push
out
fisttp
or
mov
sbb
fs
push
and
leave
les
mov
mov
push
sbb
jo
int
fistp
push
aaa
sbb
xor
test
inc
push
sub
in
inc
mov
loop
repz
mov
call
cmp
retf
(bad)
or
lock
fmulp
test
sub
sub
mov
xor
rol
retf
jnp
xor
cmp
mov
or
pop
aas
mov
(bad)
adc
fisub
stos
jns
stc
adc
lods
and
retf
mov
in
mov
stc
call
cmps
adc
dec
mov
cmp
jns
fs
jnp
imul
(bad)
jo
xchg
adc
xor
stos
push
fs
sub
in
mov
inc
(bad)
stc
minps
xchg
mov
retf
mov
xchg
es
mov
sub
outs
mov
adc
add
or
mov
(bad)
mov
leave
mov
push
je
sbb
sbb
and
mov
pop
xchg
test
jne
scas
test
inc
(bad)
xor
mul
or
sti
adc
xchg
sbb
sub
ja
pop
movs
fst
sub
sti
sub
adc
aaa
jns
and
mov
adc
in
pusha
pop
es
out
retf
neg
and
mov
fistp
sbb
shl
cmp
stc
shl
cmp
mov
sbb
xchg
std
cmp
push
xor
adc
js
dec
loopne
scas
jp
mov
sbb
pushf
or
cs
test
leave
das
loop
add
retf
sub
in
(bad)
repnz
cmps
imul
jle
lods
and
dec
xor
sti
push
jno
fwait
cmp
xchg
inc
loop
or
inc
sahf
add
test
inc
lods
call
mov
inc
imul
mov
or
cmc
or
adc
cmp
int
out
retf
mov
(bad)
fdivr
sub
iret
xor
or
jmp
push
data16
stos
ins
lock
push
xchg
mov
int3
xor
(bad)
loope
or
icebp
ret
call
retf
(bad)
jmp
shr
adc
sub
clc
imul
jmp
rcl
mov
aad
adc
mov
in
icebp
stos
in
xor
cmp
imul
fist
into
sbb
mov
(bad)
jo
je
in
jp
je
add
loopne
or
mov
movs
test
pop
shr
mov
mov
mov
imul
sti
movs
aad
xor
shl
add
jbe
stc
pop
push
adc
in
icebp
test
fist
mov
and
inc
fwait
nop
mov
jmp
fistp
push
dec
into
cwde
fisttp
add
dec
pop
unpckhps
out
nop
mov
push
adc
jle
mov
(bad)
push
mov
outs
fst
mov
pop
data16
dec
jl
scas
mov
retf
xchg
repnz
and
dec
and
pushf
ror
into
(bad)
nop
dec
test
xchg
(bad)
xchg
dec
sbb
test
aam
add
or
xor
dec
and
sar
cmp
frstor
dec
enter
ret
out
movs
sbb
imul
and
cmc
pop
mov
push
sbb
jmp
je
test
out
jmp
xchg
pop
addr16
xor
dec
inc
and
push
(bad)
aam
retf
hlt
in
iret
arpl
out
mov
mov
jne
(bad)
jnp
add
jne
leave
lea
cmp
xchg
and
int3
mov
pop
in
daa
xchg
xchg
lods
mov
inc
scas
dec
arpl
dec
shr
push
popa
(bad)
jno
mov
lods
pop
xor
cmp
xlat
not
jmp
ss
mov
jecxz
cmp
outs
pop
sbb
pop
add
fstp
out
jl
cmp
mov
mov
cld
and
inc
dec
icebp
mov
xor
lds
stc
xor
sub
je
outs
push
aad
mov
and
lods
jae
jns
jle
sub
xlat
xchg
xor
popf
fs
shl
mov
ss
add
push
xor
std
sbb
sti
jns
jne
je
xor
dec
daa
push
or
and
pop
inc
xor
xchg
inc
jnp
or
pop
ret
xchg
pop
and
sub
jge
mov
fs
push
add
or
jno
movs
fwait
call
ret
push
sub
xchg
pop
add
mov
inc
xchg
add
fs
call
sub
sub
inc
retf
dec
cmp
mov
push
jp
fnstcw
fild
mov
xchg
cmp
sub
out
sbb
call
daa
jbe
imul
(bad)
retfw
movs
movs
mov
stos
pushf
sahf
and
cmps
inc
inc
push
adc
push
adc
dec
and
and
add
xchg
xor
sbb
jl
cmp
mov
sti
fsubrp
in
stos
pop
push
pop
imul
or
xor
xor
pop
push
pusha
das
aaa
out
stos
ret
and
sbb
jae
sahf
fdivr
mov
aas
test
stc
retf
rol
or
repnz
pop
cmp
in
int3
popa
push
inc
imul
pushf
xor
test
sub
push
and
xchg
pop
jnp
es
inc
sbb
mov
or
xor
ja
in
mov
push
mov
pop
jns
mov
pop
xor
out
(bad)
cmps
jle
push
cmc
clc
xor
mov
shl
or
add
sbb
scas
push
and
push
sub
jne
fst
movs
daa
xchg
loopne
int
xchg
inc
mov
sbb
add
xor
jp
bound
das
jbe
(bad)
fiadd
imul
loop
in
cmp
push
or
add
or
pop
xchg
add
inc
in
(bad)
loopne
lds
into
xor
in
in
jno
fiadd
test
xor
sar
out
lea
push
popf
mov
ins
enter
pop
sub
xchg
xlat
jl
mov
mov
sub
ret
fst
movs
clc
jmp
push
out
mov
cwde
rcl
mov
jns
mov
mov
fwait
pop
inc
adc
adc
les
jge
inc
pop
adc
int
movs
repnz
push
xlat
int
mov
retf
push
mov
cli
xchg
push
iret
(bad)
push
inc
call
sbb
pop
pop
leave
mov
mov
mov
ss
test
ret
and
sub
mov
popa
scas
test
fisubr
lods
inc
repnz
add
mov
jnp
je
call
mov
lea
sti
int
sahf
inc
and
rcl
cmp
push
std
stos
push
add
mov
push
ja
adc
mov
aad
clc
mov
popa
fld
jmp
popf
xchg
dec
jo
cmp
fnstcw
pop
pop
aaa
or
mov
sub
push
sub
repz
cmp
jne
lods
loop
jle
iret
pop
xor
clc
cdq
int3
call
js
pop
fnstenv
xor
test
push
imul
(bad)
fcomp
cmp
sbb
jne
mov
loop
fdivr
xor
pop
and
or
jae
in
inc
sub
jp
outs
(bad)
mov
xor
les
mov
loop
xor
repz
pushf
adc
jmp
(bad)
fisttp
xchg
popa
fisttp
(bad)
ins
imul
sbb
mov
push
mov
stos
stos
(bad)
cmp
push
bound
fst
bound
neg
push
fsubr
xchg
ja
es
hlt
test
adc
popf
inc
scas
cmp
or
jb
lock
mov
jmp
push
in
adc
movs
jbe
mov
fnstsw
push
add
shr
pusha
lods
cli
add
push
adc
cmps
rcl
aam
out
jmp
ds
cmps
iret
fstp
sub
adc
mov
jge
cmp
(bad)
fs
rcl
mov
add
push
cld
icebp
cli
test
mov
repz
rcl
ficom
cwde
push
add
xor
cmp
test
(bad)
or
xchg
add
add
push
popa
add
es
xor
mov
cmp
aad
xchg
std
xor
lods
inc
xchg
jle
stos
lds
lahf
pop
loopne
xor
in
and
bnd
add
out
mov
test
dec
(bad)
clc
out
popa
shl
test
mov
or
adc
push
js
iret
adc
xchg
mov
je
out
mov
jmp
cwde
mov
cmovp
inc
stos
cmp
mov
mov
adc
cmps
rcl
pop
je
inc
sub
fistp
test
sahf
scas
movs
fsub
pop
ret
pop
jns
xor
mov
xor
aad
mov
lods
add
or
mov
test
mov
dec
fnsave
and
jmp
push
repnz
out
mov
cmp
sbb
sahf
fstp
lahf
div
out
jae
pop
mov
cli
aas
inc
movs
ja
call
stc
push
mov
hlt
dec
mov
iret
lods
or
sub
mov
jecxz
sahf
xchg
push
sar
ret
pop
or
movs
pushf
inc
(bad)
imul
push
scas
mov
jne
out
hlt
fld
dec
push
mov
mov
push
ins
and
inc
test
(bad)
jg
xchg
pop
test
inc
icebp
mov
shl
ja
cld
push
in
mov
or
jmp
or
icebp
pop
xchg
scas
jmp
inc
idiv
les
or
add
inc
adc
pop
cmp
das
xchg
ja
and
mov
jecxz
cmp
sbb
adc
test
xchg
fild
ins
not
retf
pop
sub
mov
and
bound
lods
add
cvtdq2ps
push
pusha
aaa
cmp
adc
lahf
sub
lods
mov
xor
mov
adc
(bad)
sub
inc
or
sub
and
out
push
stc
dec
test
clc
test
mov
aas
mov
fs
adc
lahf
or
js
ffree
xor
pop
pop
mov
xchg
sbb
cdq
in
push
dec
sbb
aaa
cmp
in
dec
sub
push
mov
jle
mov
sub
fs
adc
(bad)
jbe
pop
out
sbb
pop
and
sahf
mov
ds
cmc
sbb
mov
repz
or
mov
mov
call
ss
(bad)
and
cmp
rcl
(bad)
mov
xor
sar
call
inc
mov
je
adc
addr16
inc
xchg
ja
mov
push
cmp
inc
in
lds
sti
in
or
test
push
pop
fld
out
arpl
into
mov
mov
inc
adc
dec
add
es
push
mov
call
(bad)
jnp
in
adc
out
lds
ss
adc
adc
out
push
xchg
sbb
xlat
clc
and
shl
mov
add
retf
dec
ror
xchg
mov
test
int
jne
sub
pop
and
push
dec
sub
loop
ror
pop
sub
imul
inc
loopne
test
jmp
inc
cmc
adc
rol
fld
int3
scas
fld
test
fst
adc
and
cmp
adc
jmp
test
scas
mov
stos
inc
ret
fmul
add
mov
(bad)
jno
pop
jg
imul
sub
xchg
inc
mov
mov
mov
push
imul
leave
dec
inc
cld
cmp
pusha
aam
jge
cli
ds
int
outs
xor
(bad)
sbb
adc
outs
imul
or
mov
retf
hlt
stos
mov
mov
add
add
ss
add
mov
pop
sbb
sub
adc
sahf
repz
push
mov
push
rcr
jge
sub
int3
sbb
cmp
out
(bad)
ds
adc
movs
call
(bad)
out
inc
inc
and
int
popa
pop
dec
sti
ficomp
sbb
add
ror
push
adc
mov
loop
enter
scas
fcomp
mov
ret
ror
mov
movs
xlat
(bad)
xchg
mov
add
pop
lds
mov
cmp
out
jmp
jbe
ins
xchg
mov
arpl
jle
push
push
imul
jb
scas
aam
dec
(bad)
push
dec
dec
test
cmc
arpl
lea
add
jp
adc
push
clc
call
addr16
fstp
icebp
dec
sbb
inc
ja
lods
popf
jmp
call
pop
iret
xchg
sub
sbb
les
outs
add
push
cs
(bad)
mov
inc
xor
sub
mov
pop
aaa
rcr
mov
jle
jl
inc
ss
push
(bad)
push
or
out
dec
dec
btc
test
cmp
xchg
(bad)
and
arpl
inc
and
pop
je
xor
mov
mov
pushf
cld
test
push
add
in
jne
sub
mov
nop
cmps
pop
pi2fd
mov
sbb
nop
xchg
mov
pop
xor
jnp
enter
je
xchg
retf
mov
lds
dec
ret
mov
jge
mov
push
repz
add
enter
pop
ror
ds
loop
inc
jnp
adc
pop
dec
lods
dec
rcl
pop
and
mov
fwait
pop
punpcklbw
or
jecxz
sbb
aas
je
mov
cmp
daa
and
adc
shr
ror
jmp
cmps
pushf
xchg
in
stc
shr
(bad)
cdq
dec
sqrtps
sub
pusha
jp
scas
wrmsr
inc
xchg
mov
les
lods
out
sbb
repz
add
sub
mov
jmp
mov
fdivp
test
mov
xchg
retf
dec
mov
xchg
(bad)
cdq
or
push
aaa
(bad)
dec
xor
and
pop
ins
push
arpl
sahf
xchg
sbb
lahf
test
lea
add
movs
push
push
sbb
cld
lods
pop
in
rol
shl
retf
pop
sbb
cdq
leave
shl
out
or
add
movs
dec
add
retf
mov
push
(bad)
push
(bad)
jge
and
(bad)
mov
lahf
inc
mov
ins
inc
lea
pop
aam
shr
fimul
sub
inc
aam
rcr
cmps
es
(bad)
cmps
or
je
aad
mov
jnp
sub
fadd
ret
adc
sub
lea
sar
dec
rcr
out
call
mov
and
aaa
retf
xor
add
mov
mov
stc
out
jg
stc
out
call
add
jg
jns
xchg
out
stos
xor
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
call
cmps
mov
pop
xor
xor
sbb
ror
neg
mov
idiv
cmp
inc
xor
push
cld
dec
gs
cmps
push
daa
cmpxchg
sub
and
into
or
mov
xor
fnsave
adc
sbb
xchg
pop
xchg
inc
inc
and
push
jmp
repnz
inc
in
shl
call
and
sub
fwait
mov
xor
push
gs
mov
(bad)
jl
sbb
fldenv
pushf
fwait
scas
icebp
imul
sub
imul
ins
mov
pop
cmp
pusha
add
xor
or
sub
retf
imul
jle
jp
sti
fimul
pop
pop
pop
dec
retf
movs
jnp
xchg
adc
stos
mov
push
mov
test
gs
div
mul
data16
pushf
ret
add
in
sbb
mov
and
push
cmps
aas
add
imul
pop
ins
mov
mov
adc
xor
jle
shl
jle
aaa
stc
jecxz
xor
cmp
ds
jle
clc
(bad)
push
mov
fisub
cmp
dec
(bad)
rcr
lock
in
pop
aaa
(bad)
lods
mov
sbb
imul
imul
popf
add
jge
add
inc
xchg
sub
or
(bad)
pop
stos
sti
into
push
jge
enter
xchg
jb
mov
pop
dec
mov
or
fwait
(bad)
cmp
inc
dec
repnz
jecxz
sbb
jno
jo
icebp
shr
sti
in
cmc
add
outs
fdiv
mov
dec
cmp
adc
or
stos
lahf
daa
push
in
fdivr
and
push
std
movs
retf
sub
jle
das
(bad)
mov
dec
mov
xor
fadd
mov
mov
lds
mov
aaa
dec
inc
call
jle
cmps
adc
add
mov
cmc
cmp
outs
mov
dec
sbb
pop
lds
aam
movs
sub
sub
mov
jns
mov
mov
push
out
dec
ins
mov
mov
leave
das
jg
jge
lods
inc
cmps
cmp
outs
or
and
test
cmps
mov
mov
in
repz
xchg
clc
stos
adc
mov
retf
or
into
xchg
push
cs
das
ret
pop
cli
loope
ret
sub
stos
mov
mov
rcr
pop
lds
sbb
test
mov
or
stos
push
sbb
push
mov
push
pusha
fst
retf
popf
push
pop
mov
dec
sti
mov
jne
aad
and
sub
mov
fadd
add
mov
enter
lods
mov
bound
aaa
out
pop
xchg
ret
loop
sub
mov
pop
stos
jne
jle
addr16
std
sub
dec
outs
scas
pushf
clc
into
std
or
mov
inc
iret
adc
shl
pusha
push
push
cmps
dec
aas
je
mov
data16
or
pop
(bad)
mov
int
(bad)
cmp
rol
adc
ss
xchg
hlt
inc
(bad)
mov
mov
lea
in
mov
adc
jnp
cli
xlat
xchg
repz
inc
cmp
and
jge
push
mov
xlat
fcomp
(bad)
cld
test
gs
push
push
jg
jo
enter
mov
pop
push
pop
mov
sbb
sub
jne
push
xor
dec
dec
scas
sub
and
stos
movs
call
mov
cmp
xchg
(bad)
mov
mov
adc
ficom
gs
(bad)
fisub
mov
call
mov
push
lea
dec
jle
cdq
es
xor
mov
call
stos
jne
and
push
pop
scas
aam
dec
sub
jg
sub
push
cmc
nop
arpl
aam
xchg
or
ins
ins
rcl
cmps
sti
mov
adc
mov
fwait
nop
pop
outs
mov
adc
repz
xchg
xor
push
inc
fsubr
push
(bad)
pop
mov
pop
mov
loope
push
mov
add
push
jge
lds
pop
movs
xlat
push
mov
cmp
fcmovb
cli
or
jmp
jecxz
(bad)
loop
movs
rcr
cmp
cmc
sbb
push
mov
add
cmps
aad
inc
clc
inc
stos
cmp
mov
xor
jecxz
sub
xchg
out
adc
neg
test
pop
jmp
sbb
cld
std
test
(bad)
retf
cdq
jmp
lock
push
inc
cs
mov
xor
adc
jmp
arpl
push
ror
mov
and
stos
aad
push
cmp
mov
(bad)
lock
(bad)
dec
jl
pop
add
adc
pop
mov
movs
dec
ss
pop
adc
arpl
fild
mov
loop
out
pop
fmul
lahf
xchg
hlt
sbb
sbb
imul
out
scas
adc
enter
jne
pushf
fistp
leave
xor
push
enter
mov
sbb
lods
cmc
adc
retf
leave
mov
lea
mov
xchg
jae
lods
mov
jg
xchg
xchg
add
popf
jae
movs
inc
pop
ja
into
push
clc
int
jnp
call
jl
sub
xor
mov
je
idiv
ds
enter
push
retf
outs
repz
push
xor
add
rcr
sti
push
and
xcrypt-cbc
cmps
push
inc
cwde
cmp
mov
jbe
loop
scas
call
out
repnz
pop
fistp
(bad)
push
cmp
mov
shufps
cmp
loopne
shr
dec
sbb
retf
mov
mov
push
mov
sbb
(bad)
mov
add
xchg
mov
mov
and
jns
jno
movs
inc
hlt
cmp
movs
or
jnp
xor
mov
out
jg
and
outs
in
sub
dec
ret
mov
ret
or
ins
das
adc
cmc
mov
(bad)
push
sbb
mov
xchg
xchg
addr16
cs
cmps
addr16
mov
lock
sti
std
pop
rol
imul
dec
aas
mov
mov
into
mov
js
daa
es
(bad)
mov
pop
mov
pop
fist
lds
loope
sar
add
imul
dec
ds
sub
push
jmp
out
jg
inc
mov
inc
mov
mov
push
mov
jnp
out
sub
lahf
jo
addr16
mov
xchg
pop
mov
ret
inc
loop
movs
sub
add
mov
mov
or
sbb
test
ds
push
cdq
sbb
stos
inc
test
test
add
vcvtpd2ps
dec
pop
or
cs
xor
lods
cmp
sahf
cmps
popf
and
xchg
ja
inc
pop
enter
adc
mov
es
das
inc
mov
test
push
shr
push
sub
stos
jmp
data16
(bad)
mov
mov
jb
ja
daa
jmp
pop
(bad)
cmc
popf
pusha
cmps
gs
loope
aaa
pop
mov
mov
jge
jp
or
cli
cmp
imul
pusha
addr16
mov
and
mov
push
sar
push
sbb
stos
adc
pop
mov
(bad)
inc
dec
lock
dec
inc
cdq
test
repz
movs
pop
mov
mov
call
(bad)
dec
inc
stc
xor
push
leave
bound
add
sti
cmp
jmp
aad
adc
push
xor
jg
loop
xchg
cmp
sahf
pop
push
or
ss
loopne
inc
push
add
outs
fucomp
pop
sbb
ret
scas
stc
mov
loopne
mov
dec
aam
es
fcomip
sub
jecxz
sbb
leave
bound
in
adc
or
in
and
lds
pop
cs
adc
js
in
ret
pusha
ret
aad
mov
mov
add
pop
pop
push
rcr
sbb
repnz
or
jecxz
jne
iret
aad
je
jl
jp
sbb
enter
add
and
stc
xor
or
stc
push
cmp
add
scas
cmp
loopne
xchg
out
pop
cmp
mov
(bad)
mov
fcom
pop
bound
out
add
inc
sub
jl
lock
aas
sbb
xchg
js
inc
or
add
(bad)
(bad)
pop
iret
xchg
clc
xlat
adc
cmps
pop
inc
or
adc
mov
push
pop
lock
push
sub
idiv
in
outs
push
(bad)
enter
or
out
aas
sbb
test
cmps
cmp
adc
mov
es
sahf
pop
cmps
retf
mov
cmp
(bad)
rol
sbb
ins
stos
push
cmp
push
(bad)
sub
int3
test
xchg
dec
cdq
xchg
push
sbb
aas
mov
and
in
(bad)
dec
jecxz
fisub
xchg
inc
int3
ret
cli
(bad)
mov
and
add
mov
xor
into
ret
adc
sub
in
push
fidivr
out
ss
push
test
fdivr
cwde
mov
and
mov
sub
dec
add
jb
int3
sub
imul
sbb
mov
retf
xchg
jb
jo
std
xchg
ja
lods
(bad)
jmp
ins
pop
inc
ss
dec
jb
add
retf
add
outs
sbb
sub
jnp
(bad)
xchg
sub
xor
sar
jo
imul
dec
jmp
pop
inc
clc
cmps
jo
and
push
retf
cmp
push
or
xchg
add
enter
jle
xchg
sub
cmp
cmp
xor
leave
jo
std
ss
sub
jg
(bad)
lea
lock
lahf
mov
cmp
retf
out
pop
push
push
(bad)
adc
xor
xchg
mov
push
cli
int
cmp
mov
out
inc
xor
xchg
xchg
pop
pop
cmp
xchg
push
bound
inc
addr16
xchg
es
lea
in
mov
pushf
xlat
or
mov
jb
jle
and
mov
sbb
out
or
mov
cs
sti
and
fucom
cmp
adc
sti
sti
je
add
hlt
bsr
cmp
dec
push
fistp
dec
inc
pop
sbb
xor
jmp
cdq
push
push
adc
push
lods
sub
cmp
xchg
sbb
int3
jle
dec
mov
adc
mov
lods
add
sub
sub
fcmovb
(bad)
in
inc
mov
dec
jecxz
inc
test
fs
int
stc
push
sbb
push
mov
cmc
adc
jo
xor
repz
jl
mov
popf
fistp
cmp
int3
jmp
inc
mov
jge
pusha
sub
sub
or
pop
pop
cmp
xlat
je
pop
ret
xor
push
sahf
cli
popf
cmps
or
lods
mov
out
mov
xchg
inc
test
mov
jo
mov
push
lock
xchg
mov
pusha
sbb
mov
inc
pop
shl
ja
and
sub
adc
aaa
imul
lock
jb
pop
ret
popa
xchg
add
dec
adc
das
das
iret
cwde
fsub
sub
jmp
sub
dec
jmp
fdiv
mov
repnz
leave
pop
push
in
add
push
clc
shl
clc
sub
inc
jp
dec
lahf
jp
imul
sub
mov
jl
jg
rcr
gs
(bad)
cmp
add
(bad)
mov
lahf
xchg
js
popf
adc
mov
mov
test
dec
xor
out
dec
jg
call
cwde
inc
daa
div
lds
xor
leave
mov
push
shl
mov
dec
pusha
pop
sub
dec
ins
sbb
sub
mov
lahf
call
ret
cmp
xchg
(bad)
js
retf
pusha
in
mov
rcl
dec
test
sub
push
push
aaa
nop
push
data16
add
dec
mov
call
mov
cmp
(bad)
pushf
pcmpgtb
mov
xor
fdiv
fdivr
xchg
popa
out
cmp
mov
stos
mov
dec
ds
aas
sub
adc
outs
mov
push
dec
mov
mov
pop
ss
cdq
lea
dec
dec
dec
dec
push
jno
xor
lea
enter
push
iret
rol
mov
aaa
sub
sub
mov
mov
gs
int
pop
mov
xchg
(bad)
add
imul
mov
mov
adc
addr16
popf
inc
das
js
push
jmp
and
adc
loop
out
adc
mov
fmul
repnz
aam
xlat
out
pop
retf
jp
cmp
lods
sbb
rcl
cld
out
dec
mov
adc
test
(bad)
mov
jno
repnz
pop
ins
cdq
adc
ins
scas
sahf
add
(bad)
cmp
mov
mov
jne
sbb
imul
inc
lods
and
mov
push
popw
push
sbb
neg
out
(bad)
lods
mov
call
sub
sub
std
sbb
dec
and
fldz
mov
shl
imul
pop
fistp
sub
adc
push
not
shl
sbb
ror
jmp
mov
mov
mov
sahf
(bad)
cmps
mov
mov
mov
out
loop
pop
add
sub
and
mov
push
jbe
sbb
enter
lea
test
test
add
mov
sub
xchg
inc
xchg
jbe
retf
fs
sub
out
mov
mov
call
xchg
xchg
xlat
rcl
add
jecxz
push
jbe
sub
or
adc
repz
call
test
and
push
push
pushf
scas
fisttp
xor
leave
jbe
nop
loope
ret
jg
clc
imul
int3
inc
and
pop
mov
ss
fild
adc
iret
dec
(bad)
sub
rol
push
mov
xchg
jae
popf
lock
ret
adc
sar
test
fnsave
pop
loop
scas
mov
mov
jl
or
retf
hlt
das
inc
jmp
outs
cld
dec
or
cmp
and
mov
push
outs
in
push
int3
push
ins
jbe
fcomp
fstp
cmps
movs
paddq
xchg
cmp
div
ins
adc
repnz
xchg
in
addr16
jl
dec
shl
xor
lods
popa
jno
xchg
pop
dec
dec
lods
stos
jp
fldcw
test
ins
sbb
ror
adc
(bad)
or
mov
add
mov
ds
cmp
and
fldenv
sub
call
shl
retf
(bad)
in
adc
jl
movs
dec
(bad)
mov
add
sub
xor
ret
xchg
inc
sbb
ss
xlat
ret
neg
fwait
out
jb
xchg
or
rol
fcom
xor
mov
sahf
test
addr16
(bad)
mov
lock
test
inc
test
jg
or
hlt
adc
(bad)
in
xchg
inc
jmp
pop
lods
add
movs
jp
xor
pop
lds
mov
les
jle
pushf
pop
dec
xchg
inc
hlt
clc
hlt
daa
mov
jl
sub
mov
dec
cmp
hlt
cmps
and
cmp
sub
aas
dec
add
inc
les
add
jbe
dec
fild
loopne
mov
cmp
mov
pushf
sbb
gs
cmp
xor
ret
and
aad
xchg
int
test
fisttp
sbb
iret
xor
sti
nop
sti
in
arpl
cmp
std
int
fcmovbe
in
pop
sahf
or
repnz
cmp
mov
jb
clc
bnd
cmp
clc
pop
repz
mov
outs
push
int
ins
mov
cmps
and
sbb
ss
(bad)
cld
out
(bad)
stc
iret
jg
repz
add
pop
fist
add
outs
dec
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
pushf
pushf
adc
rcl
adc
les
call
call
jno
jmp
mov
icebp
add
loop
cmp
jo
ffreep
cdq
dec
repz
in
xor
or
jmp
ins
in
retf
jns
and
push
add
shl
in
push
int
add
lods
call
mov
mov
das
xchg
mov
ret
cmp
repz
rcr
push
stc
lock
loopne
mov
retf
jmp
push
outs
aam
sti
or
stos
in
sub
ins
mov
in
jmp
dec
jg
(bad)
jmp
jl
dec
leave
fwait
data16
fmul
mov
xor
(bad)
jmp
aad
call
push
loope
jle
cmp
or
adc
mov
cmp
jb
sub
loopne
inc
pop
repz
jmp
add
outs
cmps
push
mov
sbb
into
pop
fistp
sar
dec
mov
push
dec
lods
repz
enter
cs
dec
retf
dec
sub
push
lods
out
mov
in
ss
popa
push
in
in
fld
sub
scas
nop
dec
mov
mov
push
sbb
adc
and
inc
pusha
inc
inc
mov
pop
stos
dec
inc
jno
and
xor
sbb
lods
dec
cmps
jb
lahf
sub
enter
std
xor
(bad)
and
rcr
sahf
push
cmp
xchg
retf
pusha
sbb
push
mov
lock
mov
bound
lahf
add
ins
and
lds
out
dec
std
cmps
hlt
scas
pop
jmp
inc
pop
loop
push
stc
dec
xor
lods
aad
ins
xchg
and
mov
cmp
ins
mul
fsubr
cmp
movs
stos
inc
cmp
out
and
scas
(bad)
shl
push
fidivr
mov
jge
lods
addr16
sbb
lahf
adc
retf
cli
data16
xchg
push
mov
aas
pop
fisubr
xchg
fisub
inc
ins
sub
out
push
dec
test
shl
fnstenv
xchg
and
mov
test
add
add
push
pop
or
or
movs
mov
push
popa
sub
mov
mov
pop
in
movs
xchg
inc
ja
mov
sbb
and
push
es
mov
sbb
ret
sbb
ins
stos
add
jl
push
and
cdq
(bad)
(bad)
(bad)
mov
lods
sub
dec
je
outs
xor
mov
int
es
retf
retf
xchg
sahf
jno
fimul
add
xor
mov
in
fld
mov
push
in
cld
cmps
test
mov
(bad)
jns
int
(bad)
retf
dec
dec
ins
mov
sti
(bad)
mov
jbe
pop
fdiv
mov
cmp
mov
(bad)
mov
(bad)
lods
and
lds
ins
scas
fcomp
mov
xchg
fimul
pop
test
sub
xchg
ins
xchg
ret
int3
iret
cmc
jge
in
inc
outs
mov
les
out
xchg
or
pop
inc
add
ret
adc
stos
xchg
cmps
enter
and
mov
push
or
mov
into
cmps
mov
jmp
jge
fs
and
xchg
jbe
xor
(bad)
dec
outs
pop
(bad)
stc
cmc
jno
pop
test
mov
fs
icebp
pop
gs
shr
cmp
xchg
jo
movs
and
arpl
out
outs
mov
(bad)
leave
jae
mov
mov
adc
xchg
adc
adc
cld
mov
mov
xor
gs
sar
fadd
and
sbb
aad
fsub
aam
mov
jecxz
mov
lods
mov
mov
push
daa
add
test
adc
outs
out
mov
or
sub
out
lds
push
add
mov
cwde
dec
or
mov
mov
push
stos
retf
in
test
aad
push
jno
mov
sub
jb
mov
call
adc
and
mov
xchg
repz
mov
lock
cld
inc
push
pop
jmp
cmp
jle
push
loopne
xlat
xchg
xchg
mov
sub
shl
loop
imul
jp
inc
mov
push
or
enter
repz
dec
lods
rol
jae
in
push
mov
xor
push
dec
ja
fild
leave
idiv
arpl
jb
and
dec
cmp
sub
add
das
movs
or
in
imul
lock
push
ffreep
sub
out
or
mov
xor
(bad)
daa
xor
jb
aas
dec
in
fcom
ss
mov
mov
mov
and
mov
popa
and
cld
stos
and
dec
push
jle
retf
lea
sub
dec
push
call
sbb
ss
pop
in
sti
call
inc
mov
and
jmp
ins
je
lea
in
mov
daa
jbe
inc
addr16
sub
fnsave
rcl
arpl
inc
mov
mov
pop
mov
ret
mov
mov
inc
fstp
pushf
pushf
and
aas
cmp
xchg
mov
js
xor
xor
mov
cmps
int
mov
popf
addr16
jl
std
xor
and
in
out
fbld
pop
pop
out
push
jmp
ss
das
push
sbb
mov
loop
adc
push
outs
mov
adc
sub
mov
sub
xor
cld
std
jmp
xchg
mov
enter
lock
and
ror
mov
enter
and
inc
mov
jno
xor
leave
mov
mov
(bad)
loopne
out
pop
pop
xchg
call
mov
lahf
pushf
and
dec
jp
inc
lea
fdivr
aad
test
pusha
and
(bad)
retf
movs
iret
aaa
jbe
sub
iret
jmp
mov
dec
xchg
add
mov
inc
or
cli
xchg
arpl
(bad)
mov
test
mov
test
into
and
inc
data16
lods
inc
mov
in
leave
sti
pushf
adc
iret
jns
sub
daa
dec
adc
lock
ret
bound
fcomp
cdq
shl
test
aas
cmps
cmp
arpl
ds
cmove
cs
outs
cs
dec
xlat
lods
int3
jecxz
xchg
stc
ja
stc
test
mov
add
lea
lahf
and
div
or
dec
sub
cld
scas
ins
sub
movs
pop
add
adc
test
inc
pop
bound
jne
jle
scas
fnstenv
test
inc
xchg
xor
test
xor
test
in
inc
push
mov
jp
inc
adc
and
(bad)
mov
(bad)
sub
sbb
dec
(bad)
xor
ss
loop
jno
inc
(bad)
int3
cmp
jle
dec
in
shl
jno
and
sahf
and
and
in
push
jbe
mov
pop
inc
shl
(bad)
sbb
pop
cmp
stos
adc
jae
jl
push
push
fmul
mov
cmp
mov
and
test
cmps
pop
sub
dec
cmp
cmp
fcomp
jg
ins
dec
push
ffree
dec
sahf
xchg
push
cmps
idiv
jl
push
mov
push
mul
push
int
fistp
inc
inc
ficomp
pushf
or
dec
lods
push
push
data16
jno
outs
push
sub
hlt
push
js
int3
adc
(bad)
loope
outs
js
out
fadd
clc
fldcw
xor
inc
sub
sub
mov
add
dec
pushf
push
jnp
mov
cld
xchg
xchg
hlt
ffree
pop
inc
movs
mov
mov
ins
test
pop
iret
jo
cld
or
pop
mov
outs
bound
addr16
sub
scas
inc
lahf
and
pop
xor
push
dec
in
ret
jl
leave
ficom
xor
mov
aas
pop
test
hlt
cmps
movs
jp
pop
neg
or
int
xchg
lahf
mov
mov
cmps
pop
xor
leave
sub
inc
test
add
aad
sbb
and
aaa
test
add
test
pop
mov
xchg
or
dec
sahf
jle
inc
jnp
mov
add
adc
in
jge
adc
repz
stc
add
push
mov
jmp
outs
mov
cmp
shl
mov
enter
cld
jns
push
inc
loope
mov
add
cli
xchg
dec
dec
jmp
cld
mov
in
push
addr16
les
movs
inc
leave
jmp
test
xchg
mov
js
mov
mov
mov
add
xchg
pusha
fwait
imul
cs
mov
aaa
sbb
jle
pop
pop
es
xchg
jmp
inc
and
(bad)
shr
into
push
loopne
popf
nop
std
sbb
cmp
xor
sub
ret
imul
push
adc
ins
mov
xor
mov
jge
or
sbb
in
stos
push
dec
dec
cli
ficom
stos
popf
mov
jecxz
jb
dec
dec
xchg
dec
ss
enter
adc
je
mov
xchg
(bad)
fcom
loope
push
div
mov
mov
sbb
xlat
sub
dec
sbb
dec
or
stos
stos
jns
iret
mov
fnop
cmp
test
pop
sub
test
mov
hlt
mov
xchg
jg
imul
or
mov
xor
inc
pop
or
test
or
outs
loope
fldcw
pop
add
mov
fwait
pop
sti
test
es
retf
xchg
mov
retf
add
jns
movs
int
xor
jp
repnz
inc
mov
ret
xor
cmps
gs
mov
sbb
xchg
jns
(bad)
cmp
xor
and
sbb
xor
ror
sub
mov
and
xchg
ret
sbb
das
ret
aad
in
fisttp
jns
and
into
mov
push
sub
mov
data16
fist
sbb
mov
xor
jl
mov
dec
test
hlt
jecxz
xor
cli
bound
and
bound
imul
mov
je
ja
fistp
pushf
dec
mov
pop
sub
cmps
call
jmp
fimul
push
jge
xor
push
pop
out
cmc
xchg
popf
dec
rcl
inc
into
sbb
stos
std
jno
and
dec
shl
and
jmp
add
mov
sub
dec
in
xchg
das
jecxz
cld
adc
idiv
mov
ds
das
sub
mov
and
fist
lods
rcr
and
or
movs
fisttp
scas
xchg
jns
out
and
data16
push
xor
or
aaa
les
stos
adc
xor
bound
std
jecxz
test
ins
jo
mov
std
xor
push
pop
(bad)
ins
mov
mov
fcmovnu
mov
add
fisub
push
adc
out
inc
lahf
inc
out
push
shl
mov
jmp
adc
sub
jae
jnp
test
jne
mov
mov
xor
call
movs
dec
mov
jnp
mov
pop
inc
scas
push
les
aam
sti
sub
jbe
cmp
and
popf
jge
pop
ret
adc
(bad)
dec
popf
test
and
sbb
push
xor
aam
mov
jae
mov
xchg
stos
mov
push
push
out
or
xor
int3
in
mov
nop
dec
je
mov
pop
out
mov
xor
loopne
adc
dec
or
cli
cmp
sbb
ins
xchg
push
inc
push
cmp
pop
gs
mov
aad
xchg
push
imul
sbb
sub
push
ins
add
pop
fisttp
sbb
fst
or
cdq
std
aaa
das
mov
in
in
popf
sub
mov
inc
xchg
js
sbb
das
cmp
jno
imul
jmp
inc
les
sbb
call
dec
push
sahf
in
inc
mov
add
sahf
popf
repz
push
stos
jmp
pop
pop
fwait
mov
jo
fimul
repz
xor
xchg
lahf
mov
add
push
sbb
mov
(bad)
out
int
pop
aaa
mov
(bad)
jno
out
add
jo
out
enter
jecxz
test
(bad)
adc
or
mov
clc
mov
and
pop
sub
fsub
jmp
jl
adc
fimul
push
out
movs
(bad)
bound
call
ror
retf
cwde
pushf
hlt
dec
popf
mov
xor
mov
adc
loopne
xor
pop
add
mov
ja
jp
or
jae
imul
push
cmp
ds
pop
add
inc
xchg
(bad)
pop
dec
dec
cmp
out
ss
inc
mov
mov
dec
fist
jmp
xchg
call
cmp
mov
popa
pop
xor
(bad)
jb
icebp
nop
out
fucomi
sub
repz
mov
inc
dec
push
adc
jb
mov
mov
xor
les
loopne
pushf
pop
sub
jno
mov
rol
adc
jg
cmp
daa
mov
sub
scas
ins
xlat
push
mov
xchg
mov
push
call
xchg
cmps
inc
aas
popf
cwde
ss
sub
sbb
push
jecxz
adc
or
pop
mov
bnd
xor
sub
jp
sti
bound
pop
and
sti
repz
aam
in
jge
test
pop
mov
cmps
and
loop
xchg
push
iret
or
js
mov
ss
aas
test
mov
in
int3
pusha
mov
adc
fmul
xchg
stos
leave
mov
neg
imul
mov
inc
jle
pop
inc
out
sub
mov
sar
call
leave
lods
mov
sti
lods
xchg
jp
movs
sar
cmp
mov
mov
jns
pop
lea
repz
or
or
lahf
ret
sub
xor
dec
cmps
cdq
sar
and
jg
cmp
and
push
mov
push
dec
mov
gs
xchg
clc
inc
inc
ins
inc
out
push
in
out
loop
mov
out
test
xchg
fucomi
fadd
out
jne
mov
fisttp
in
jnp
xor
cmp
loop
adc
ror
xlat
and
xchg
and
dec
pushf
stos
or
shr
mov
dec
xor
dec
mov
xor
(bad)
mov
mov
js
jo
imul
mov
test
xchg
sbb
xor
cwde
sub
mov
shl
cs
mov
sub
fs
add
cmp
dec
(bad)
clc
jp
or
call
in
push
sbb
sub
jg
cmp
test
or
pop
jge
and
cmp
test
out
push
mov
jmp
push
sbb
xchg
jo
call
mov
mov
sbb
add
inc
push
adc
mov
pop
mov
jo
mov
inc
imul
xchg
pop
jmp
or
out
fild
add
adc
jae
sub
stos
pop
movs
out
ret
in
pop
enter
pop
mov
jne
xchg
cli
adc
mov
scas
add
inc
push
or
repz
inc
jp
cli
jp
sub
jl
sbb
paddw
and
inc
push
es
ds
sub
retf
ins
das
jmp
add
scas
into
clc
dec
stos
js
(bad)
xchg
test
jle
hlt
cmp
and
lahf
xchg
xchg
push
lahf
push
clc
out
jg
stc
out
jg
stc
jg
add
pop
sti
sbb
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
(bad)
add
add
scas
out
out
into
leave
test
imul
or
mov
adc
cmps
mov
ret
aam
xlat
in
aas
out
jecxz
out
jl
sub
call
in
xchg
in
inc
fbstp
fidivr
call
addr16
out
mov
in
mov
jecxz
rcl
xor
sbb
sbb
int
push
adc
mov
dec
sbb
rcl
rol
je
sbb
mov
sahf
sbb
cli
jge
push
inc
pop
into
push
jmp
inc
inc
scas
pop
push
fnstcw
aad
call
(bad)
ss
les
aas
push
pop
sbb
cmp
jmp
or
dec
push
pop
dec
aas
fs
xchg
jae
loop
mov
ds
cdq
adc
in
test
inc
in
std
push
and
std
mov
mov
mov
xchg
addr16
adc
push
push
push
shr
xchg
jp
jecxz
and
iret
cdq
jp
data16
lds
mov
rcl
sub
jne
cmp
cmp
lods
jg
push
out
sbb
dec
pop
pop
in
movs
lock
inc
sub
add
cmp
test
imul
mov
dec
into
out
and
(bad)
xchg
sub
scas
mov
push
dec
aaa
clc
mov
scas
xor
cli
cmp
sbb
inc
add
scas
fisttp
aad
call
call
xor
scas
dec
imul
lods
or
(bad)
sub
int3
popa
sub
lods
adc
enter
inc
xchg
push
add
mov
jl
mov
js
ins
mov
inc
popa
xchg
dec
add
pushf
mov
sbb
dec
retf
fwait
icebp
mov
ffreep
inc
jo
pop
ins
push
or
(bad)
fsub
movs
mov
das
call
jecxz
and
dec
loop
add
inc
shr
jl
mov
add
outs
in
rep
mov
push
dec
jmp
jnp
cwde
aas
xlat
aas
push
shr
cli
(bad)
retf
in
cdq
pop
xchg
aaa
inc
gs
inc
outs
leave
mov
fisubr
mov
popf
push
imul
push
in
and
(bad)
neg
dec
sbb
mov
or
outs
test
out
mov
fiadd
pop
add
push
cmp
push
(bad)
clc
add
cld
mov
test
cmovle
(bad)
in
add
xor
push
retf
lods
dec
out
jecxz
fild
mov
jmp
pushf
sub
ror
hlt
cli
xor
btc
bound
xchg
xor
cmp
cmp
push
js
adc
push
jno
jb
xlat
imul
cmps
jge
jne
cli
inc
std
shl
fimul
(bad)
pushf
dec
pop
lds
mov
adc
mov
popf
repz
int
dec
retf
cli
mov
adc
scas
scas
rcr
sbb
jp
retf
jo
and
push
adc
dec
pushf
jp
and
fimul
sbb
mov
sub
and
add
iret
mov
xor
repz
add
cwde
jns
iret
cdq
stc
jl
out
rcr
ins
sar
or
jo
sub
ffree
mov
push
sahf
outs
cmps
movs
leave
shl
std
push
dec
xchg
les
xor
in
cmp
xchg
and
add
mov
inc
push
test
(bad)
pop
cmps
repnz
in
icebp
frstor
mov
push
mov
arpl
lds
inc
test
mov
add
pop
mov
aam
push
xor
(bad)
je
mov
inc
scas
dec
mov
sub
dec
and
aad
leave
and
add
cld
add
sbb
test
push
mov
push
lods
adc
je
jge
dec
fs
mov
mov
fmulp
add
mov
ins
idiv
inc
push
fnstcw
cmps
leave
xlat
mov
ins
pop
mov
enter
jp
test
sbb
enter
jmp
inc
add
jmp
(bad)
clc
js
das
leave
xchg
xchg
pop
rcl
pop
shr
daa
push
push
aaa
xor
xor
add
out
mov
lods
add
or
cmps
inc
inc
out
push
sub
neg
pop
jb
iret
dec
psrad
js
lods
push
inc
not
xchg
ret
das
and
mov
(bad)
jmp
jge
or
pop
mov
xor
mov
jmp
xchg
fiadd
xor
xor
mov
cli
rol
repz
xor
(bad)
bound
std
jae
mov
dec
xor
(bad)
push
sub
jp
loop
mov
jmp
loope
std
and
enter
adc
fwait
push
and
push
sbb
pop
mov
sub
ret
out
jnp
and
xchg
mov
cli
arpl
inc
xchg
test
movs
in
mov
mov
inc
cli
popa
ds
mov
rcr
mov
jns
mov
popf
dec
lar
push
and
rcr
hlt
xor
sbb
stc
in
push
out
mov
dec
mov
xor
cmps
shl
je
in
loopne
lock
sbb
push
pop
pop
outs
arpl
jg
iret
dec
test
push
bound
mov
inc
inc
jae
pop
in
neg
cmp
(bad)
mov
(bad)
fs
or
mov
je
aam
jns
mov
or
inc
mov
in
xor
sbb
push
sar
pop
in
into
movs
mov
mov
call
sub
cdq
mov
dec
push
arpl
in
shl
and
adc
int3
dec
jae
fcom
out
jb
xchg
imul
iret
clc
lods
inc
dec
push
mov
shl
repz
sbb
call
lock
and
jg
push
retf
aas
(bad)
mov
(bad)
in
xor
mov
mov
and
in
cmp
mov
mov
xchg
inc
cmps
fwait
in
sub
sar
outs
jno
popf
(bad)
cld
mov
adc
push
lahf
out
jnp
jp
adc
or
xchg
sub
enter
mov
popf
pop
jae
push
push
cmp
dec
retf
int3
in
in
test
mov
cmp
hlt
push
retf
mov
and
dec
inc
mov
mov
jns
cld
imul
fmul
pop
add
push
stos
jle
int
cmc
outs
std
pushf
push
jge
jmp
loopne
mov
push
mov
and
out
xor
btr
loope
shl
cli
mov
idiv
aas
scas
dec
imul
dec
xchg
jecxz
xchg
dec
push
push
mov
pop
bound
push
pushf
and
mov
in
loope
fwait
movs
cli
mov
out
pop
lock
or
xor
movs
mov
or
xchg
rol
sub
mov
xor
cmps
neg
ins
sti
fucomip
push
push
adc
pop
jmp
cmp
xchg
push
add
repnz
pop
pusha
(bad)
cmp
push
push
push
std
push
fnstsw
lea
icebp
push
ror
cmps
pushf
or
sti
clc
sbb
mov
pop
rcl
enter
sub
push
test
dec
fild
push
jl
mov
call
out
jmp
jmp
inc
loopne
mov
sar
sbb
ds
leave
xor
inc
aas
inc
enter
mov
fdiv
push
stc
sub
mov
es
scas
xchg
leave
dec
pop
jg
cmp
movs
jecxz
(bad)
in
ror
sub
pop
push
dec
jbe
shr
xlat
mov
fwait
add
daa
pop
call
imul
mov
push
cs
out
mov
sahf
or
add
shr
out
std
sbb
pop
jmp
cmp
cmp
push
arpl
or
ds
std
or
pop
aam
outs
jns
mov
sahf
add
fcomp
xor
xor
jno
xchg
fld
jns
(bad)
cmp
imul
popf
arpl
test
loope
std
mov
inc
mov
or
in
and
lods
jle
fld
add
in
mov
push
cwde
sbb
mov
push
sub
sub
mov
aas
push
repz
daa
addr16
outs
mov
pop
(bad)
pop
and
cdq
dec
push
xchg
sbb
jge
std
or
scas
or
imul
add
mov
xchg
lods
loop
mov
pop
mov
xchg
pop
adc
mov
scas
cmp
dec
pop
sti
xor
push
sahf
outs
repz
xor
lds
cmc
pop
dec
mov
jle
mov
jne
test
xor
mov
jge
fdiv
jp
add
sub
mov
test
fnstenv
and
arpl
inc
sbb
cmp
mov
jmp
stos
test
scas
cdq
xchg
jae
mov
xchg
mov
loopne
xor
imul
and
sub
popa
fcmove
or
sbb
pop
pop
retf
mov
mov
adc
out
sti
sbb
xchg
mov
inc
neg
sbb
enter
lahf
mov
mov
dec
xchg
jbe
stos
movs
iret
fsubr
lock
test
lea
jns
sbb
push
repnz
adc
jge
mov
cmp
aaa
jg
lds
das
sbb
sub
fisub
out
xor
pop
mov
jbe
mov
aad
cmp
lock
sti
sub
adc
push
dec
sbb
in
xchg
xor
add
cmc
aam
fdivr
loop
arpl
int
inc
daa
mov
out
movs
sub
and
sbb
adc
cs
out
push
adc
cmp
adc
(bad)
retf
fist
leave
mov
push
ret
loop
hlt
xor
fsubr
pop
pop
mov
dec
and
(bad)
adc
mov
and
sub
out
nop
and
cmc
popa
ss
aas
inc
adc
cmp
mov
cmp
mov
xor
push
shl
inc
inc
push
les
mov
imul
or
addr16
inc
outs
jnp
jl
adc
repnz
fmul
ror
mov
inc
je
(bad)
jmp
or
pop
stc
dec
lock
push
xor
iret
jl
inc
and
cmps
sub
dec
dec
cs
xchg
pop
mov
mov
xchg
xor
cs
daa
scas
push
call
loop
push
cdq
ror
mov
int3
sbb
sbb
and
repnz
repnz
hlt
movs
mov
jbe
jecxz
inc
xlat
lea
dec
rol
sbb
mov
pop
push
jae
xor
in
daa
retf
push
stos
jne
fld
mov
mov
cmp
pop
std
aas
adc
cmp
fs
push
(bad)
sar
add
mov
(bad)
xlat
mov
iret
push
aam
out
sub
je
mov
ret
mov
ret
cs
imul
mov
mov
push
jne
lds
sti
xor
cmp
xor
lahf
sbb
add
dec
outs
movs
xor
int3
or
das
mov
jge
loopne
(bad)
scas
xchg
dec
fst
or
inc
push
test
dec
pop
aam
aad
imul
mov
and
data16
fisub
mov
fcomip
nop
aam
fdivr
stc
into
add
cmps
inc
sbb
pushf
push
arpl
lea
imul
pop
pop
popf
mov
mov
add
rol
imul
outs
bound
movs
sub
fisttp
imul
fld
and
inc
cmp
ror
sti
nop
cmp
test
int3
jge
adc
ss
mov
int3
inc
mov
adc
test
rcr
fninit
in
xchg
mov
push
popf
mov
sbb
loop
add
push
jmp
ins
pop
ficomp
xchg
loop
inc
mov
adc
push
mov
(bad)
fdivr
push
popf
cdq
push
in
retf
jne
mov
adc
mov
mov
out
dec
mov
pop
mov
fcom
sub
pop
movs
loopne
mov
ins
fsub
ins
pop
mov
jb
mov
add
or
stc
daa
(bad)
pop
shr
sub
xchg
popf
(bad)
loop
mov
fst
push
dec
cmp
jno
(bad)
lods
or
and
ins
adc
jbe
in
retf
mov
dec
daa
(bad)
dec
enter
dec
xchg
ficomp
scas
movs
add
dec
pop
mov
cmp
sub
inc
sbb
pop
cmp
xchg
shl
jecxz
add
adc
imul
cmp
xchg
outs
jae
sar
xchg
test
and
fld
jb
(bad)
mov
imul
fstp
jo
mov
mov
shl
push
adc
out
xor
retf
(bad)
mov
std
push
outs
into
dec
adc
outs
inc
sub
and
lea
cmc
ds
adc
fst
push
(bad)
into
mov
movs
push
pusha
sub
or
jl
rcl
ret
lods
cli
and
cmp
fwait
repz
(bad)
sar
or
fild
push
sub
xchg
mov
mov
ja
sub
mov
shr
mov
xchg
and
in
fucomi
pop
sti
js
loop
mov
mov
and
mov
adc
inc
mov
or
retf
test
imul
(bad)
icebp
mov
sahf
leave
or
mov
xor
mov
push
sahf
mov
imul
jge
and
jae
mov
add
stos
adc
cs
push
add
mov
push
dec
fst
mov
(bad)
or
jp
scas
sub
jae
lds
cmp
push
call
mov
xor
xchg
call
daa
ror
xchg
mov
in
out
adc
lds
mov
cmps
jns
lods
ret
add
stc
(bad)
in
aas
xor
push
in
out
jp
loop
scas
jo
mov
leave
xchg
sbb
dec
jge
and
adc
and
(bad)
jae
jno
cld
rol
adc
(bad)
lods
repnz
imul
jg
adc
pop
push
or
aas
xchg
cmp
and
xchg
fwait
cmps
adc
mov
mov
imul
and
sub
sub
add
iret
arpl
mov
jl
aas
jae
inc
sub
cwde
(bad)
fs
cs
and
mov
sti
sahf
dec
fs
pop
ja
imul
xchg
je
fs
pusha
aam
xor
(bad)
cs
aam
xchg
and
xchg
lods
xchg
sub
cmc
mov
mov
add
jmp
or
sbb
sbb
icebp
push
ret
or
or
push
and
mov
lahf
push
(bad)
adc
add
inc
(bad)
push
repz
dec
sbb
cwde
int
cdq
leave
mov
je
pop
call
inc
retf
mov
mov
ss
or
mov
sub
fcmovnu
sti
aas
mov
cs
retf
sub
sbb
xor
add
into
jle
inc
push
xchg
stos
das
add
sub
ffree
mov
mov
mov
(bad)
inc
cmp
dec
mov
add
inc
into
arpl
cmps
or
aas
adc
dec
sbb
mov
push
add
lea
movs
sub
retf
int
iret
cdq
int3
popf
xchg
adc
dec
or
sub
movs
mov
push
(bad)
xchg
enter
inc
leave
mov
retf
xor
(bad)
rcr
test
adc
popa
hlt
sbb
(bad)
push
movs
movs
imul
popa
pop
lea
cdq
sub
ja
add
pop
sbb
call
inc
std
movs
(bad)
call
pop
xchg
rep
loope
sub
test
les
lahf
mov
out
xchg
mov
and
cld
repz
aas
(bad)
cld
repz
add
(bad)
jge
or
mov
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
xor
call
cmps
cdq
out
xor
cmp
xor
mov
fst
sbb
inc
fdivrp
repz
leave
fsub
push
jl
xchg
shl
lock
cdq
dec
imul
xchg
jg
jae
(bad)
cli
dec
aad
cmps
mov
movs
dec
xchg
pop
std
inc
call
mov
mov
imul
imul
xor
cwde
add
xor
cmp
fadd
and
movq
mov
push
sub
mov
xchg
imul
dec
push
mov
push
adc
xlat
mov
cmp
dec
jg
and
lods
or
repnz
inc
mul
cmp
(bad)
push
sbb
lods
out
push
or
mov
xchg
inc
xor
ds
aas
idiv
cmps
xchg
jmp
mov
outs
cli
sub
and
in
lds
or
xor
dec
push
test
pop
and
jmp
(bad)
into
cli
ins
xor
push
test
cmp
add
stos
dec
mov
cmp
xchg
fwait
sub
dec
sbb
jmp
inc
add
loopne
xchg
xchg
mov
das
js
xchg
out
pop
mov
and
mov
xor
push
mov
sub
ins
sub
fidiv
cmc
jne
fisttp
xor
mov
sbb
sti
int
psubw
jl
inc
jmp
push
add
or
xchg
dec
push
ja
sbb
test
int
xchg
ret
jg
push
fidiv
mov
add
inc
int
mov
jns
pop
hlt
lods
mov
ror
adc
nop
mov
sbb
rcr
mov
mov
in
lds
inc
mov
es
cmp
cwd
or
push
mov
jmp
push
mov
ret
mov
dec
dec
and
into
jo
sbb
es
dec
xchg
mov
test
data16
in
sar
outs
xor
push
mov
out
mov
(bad)
push
lock
outs
stos
repz
fiadd
add
leave
cmp
lock
jb
adc
mov
dec
(bad)
sub
sbb
mov
dec
mov
into
aad
call
cld
adc
out
shl
dec
aas
fwait
sub
push
cmp
scas
mov
fistp
xor
sbb
js
push
loopne
add
cmp
addr16
fisttp
mov
repnz
or
mov
dec
ficomp
lea
pop
dec
daa
sahf
push
in
add
jns
in
scas
inc
icebp
cmp
or
cmp
outs
out
adc
out
mov
push
les
jne
dec
sti
mov
push
repnz
pop
cmp
push
cmp
push
xchg
mov
iret
mov
aad
in
jo
add
loope
fistp
cs
sbb
addr16
mov
imul
push
dec
int3
sub
sbb
cmp
pop
movs
add
mov
aad
add
inc
outs
aaa
ror
loope
iret
or
mov
in
rcl
add
mov
add
and
ins
into
xor
or
mov
cmps
ret
mov
sub
sbb
std
dec
adc
dec
mov
sbb
out
imul
neg
in
pop
mov
mov
jl
lahf
mov
xor
pop
je
push
lds
pop
rol
sub
sbb
stos
adc
cwde
das
push
fs
inc
cdq
int3
aad
out
or
loopne
ss
mov
cdq
sub
push
repnz
xor
jecxz
cmp
mov
cmp
je
sar
jae
mov
pop
jg
pop
mov
daa
fs
test
push
loopne
inc
push
shl
in
add
les
rol
retf
push
jns
dec
dec
fdivr
cmps
mov
ret
sbb
stc
mov
test
shl
gs
pop
call
inc
mov
movs
sbb
xchg
mov
test
outs
ins
sbb
(bad)
and
aas
hlt
pop
cdq
repz
ficom
shl
(bad)
mov
pop
mov
mov
mov
push
in
data16
xchg
push
jno
xor
iret
loopne
sbb
dec
out
xor
xchg
imul
jo
fmulp
repz
iretw
pop
mov
out
mov
(bad)
adc
pop
(bad)
adc
mov
cs
dec
xor
sbb
push
movs
pop
mov
pop
sbb
dec
call
mov
inc
daa
dec
mov
lods
mov
push
mov
pushf
bound
stos
fwait
lods
mov
idiv
xchg
leave
fcmovb
mov
ins
shr
and
cli
iret
ss
out
mov
jo
xchg
setp
or
xchg
push
add
leave
imul
jmp
dec
sub
jmp
loop
fnstenv
add
cs
lods
ins
and
mov
and
dec
push
lods
scas
je
dec
inc
pusha
dec
push
xor
jbe
aad
mov
pop
iret
inc
mov
iret
sbb
jecxz
pop
pop
jge
xchg
jbe
lea
inc
inc
adc
adc
and
sub
xor
and
push
jne
push
loopne
ins
shl
jno
mov
jmp
adc
add
rol
retf
leave
mov
test
daa
add
adc
dec
shl
mov
out
fidiv
jo
lds
xchg
fstp
adc
std
gs
mov
or
stc
shl
mov
out
or
in
mov
push
das
(bad)
retf
(bad)
mov
add
mov
mov
and
mov
fsub
cmp
jb
pop
aad
dec
push
pop
rol
test
bound
loopne
(bad)
repnz
xlat
mov
call
pushf
sub
ins
mov
fisttp
jne
pop
jno
push
(bad)
cmp
mov
outs
stc
adc
adc
dec
xchg
popf
dec
jmp
sub
das
and
dec
hlt
setg
arpl
and
push
dec
mov
push
dec
(bad)
adc
ins
lock
inc
xchg
shr
sub
mov
push
mov
in
fisttp
mov
loopne
std
cmc
pop
xor
cmp
push
les
and
out
pop
xor
adc
(bad)
push
adc
push
mov
ins
sbb
xchg
fmul
cmc
sub
int3
scas
jge
fsub
ror
sbb
rcl
push
or
jecxz
adc
js
mov
add
jb
ins
mov
pop
lea
cmp
(bad)
jmp
into
pop
adc
aam
popa
fdiv
nop
inc
jmp
ret
ffree
sti
mov
mov
and
jb
(bad)
pop
lds
mov
push
pop
xor
push
lock
mov
mov
sbb
push
and
je
fstp
sub
pop
xchg
and
mov
inc
cdq
int
retf
cli
jp
jb
xchg
pushf
pop
shl
xor
sub
push
cmc
data16
push
stos
(bad)
jmp
mov
fwait
xchg
mov
adc
sbb
cmp
mov
in
add
imul
jmp
mov
pushf
mov
repz
dec
lods
sbb
mov
jo
lahf
sahf
mov
push
push
(bad)
cmp
inc
std
jne
mov
push
call
jmp
xchg
sbb
idiv
or
aad
mov
test
test
lock
jae
jno
in
out
cmp
scas
fild
adc
sub
fld
stc
js
mov
hlt
and
sub
sub
movs
(bad)
jmp
fidiv
cmps
push
mov
ds
aaa
(bad)
cmp
rcl
xchg
in
test
test
jno
inc
inc
pusha
jmp
js
pop
jne
shr
pop
mov
cmp
popf
div
pop
mov
lods
mov
add
jmp
outs
mov
cmp
jae
rol
cmp
xor
sbb
dec
jecxz
xchg
mov
test
out
imul
fimul
loopne
mov
jae
ja
in
ss
mov
ret
cmp
fs
das
xor
jb
mov
outs
push
dec
sub
fisub
div
push
fs
sbb
sub
pop
pop
xlat
mov
push
pop
pop
js
std
mov
xor
test
out
aas
inc
mov
jbe
test
in
imul
add
xchg
adc
movs
in
aad
xor
xor
icebp
sbb
(bad)
push
bound
add
loopne
fldcw
or
ficomp
shl
mov
sbb
adc
adc
xchg
or
fist
jmp
das
cmp
push
xchg
loop
pop
cmp
nop
jnp
sahf
std
jnp
adc
mov
sub
(bad)
mov
lods
or
and
add
retf
out
setns
cwde
into
mov
xor
sar
jnp
stos
cli
sub
adc
popf
sub
mov
mov
and
jmp
not
call
jnp
out
rcl
push
lahf
sub
je
ja
and
aad
fcomp
and
jecxz
in
cmc
pop
popa
cmp
xchg
dec
add
fisttp
sub
lods
add
jg
pop
mov
cmp
add
(bad)
dec
jle
push
mov
push
aad
and
test
and
pop
inc
sub
scas
popa
pop
jp
pop
cmp
dec
cmp
dec
idiv
movs
add
ret
xchg
aam
fsub
jbe
(bad)
jle
jmp
and
(bad)
movs
cmps
xor
push
jne
fcmovnbe
xchg
xchg
pusha
sahf
cs
xchg
push
push
std
push
mov
fsub
aad
leave
mov
mov
cld
mov
lds
lahf
cmc
xor
or
push
jg
push
mov
pop
scas
jno
ins
js
bound
push
xchg
add
lahf
xor
cmp
and
sahf
pop
jns
out
in
xor
mov
cld
jns
inc
push
fucomi
fisub
sub
cmp
mov
push
data16
mov
cmp
jge
leave
jl
nop
ins
fwait
out
inc
(bad)
outs
fisubr
add
loopne
cdq
aad
(bad)
in
dec
stos
pusha
dec
cmp
loop
adc
or
test
sub
jbe
lds
shl
xchg
popa
mov
(bad)
nop
test
shr
in
xchg
fwait
in
out
push
(bad)
cwde
out
ret
dec
mov
lods
sti
movs
inc
fpatan
inc
dec
xor
or
adc
imul
retf
mov
sbb
call
xchg
repz
out
imul
and
inc
inc
(bad)
xchg
das
adc
daa
and
mov
jecxz
mov
imul
out
fs
xor
or
or
dec
sbb
push
retf
popf
xchg
inc
in
(bad)
int
out
xor
aas
enter
and
xchg
cmp
out
jo
sub
fcmovne
(bad)
out
retf
cli
cmp
pop
call
pop
sub
jb
mov
movs
pop
xchg
sub
and
daa
inc
add
gs
sbb
adc
and
dec
test
in
out
cmp
jl
dec
daa
dec
ret
fwait
push
pop
aam
clc
pop
das
test
fimul
cmp
xor
xor
cmp
and
in
xchg
xchg
ss
xlat
xor
imul
pop
jmp
adc
xchg
(bad)
jge
mov
outs
push
adc
das
ror
jno
aaa
mov
dec
mov
jns
pusha
xchg
in
pop
test
test
push
ja
aad
or
mov
rcr
test
pop
xchg
js
aad
inc
sub
mov
cmp
cwde
xchg
inc
xor
jbe
inc
outs
cmp
popa
inc
mov
aad
call
and
outs
mov
pop
dec
push
jnp
je
int3
push
ins
fldenv
out
jmp
retf
jmp
dec
xchg
je
sub
jg
push
adc
repz
mov
adc
ret
mov
and
pop
cli
inc
jmp
(bad)
rep
jno
dec
idiv
push
push
pop
xor
imul
pop
jge
jg
mov
lods
push
enter
fimul
fdivr
arpl
addr16
inc
push
jno
sti
jmp
repz
fcomp
pusha
ins
mov
clc
shl
cmc
dec
cmp
lahf
sbb
mov
xlat
cmps
or
inc
fwait
rcr
xor
mov
cmc
les
mov
fs
repnz
inc
das
and
test
fld
es
mov
sahf
cmp
and
mov
rcr
movs
or
imul
jns
pushf
sbb
or
push
dec
or
fcmovu
mov
pop
ror
xor
cdq
ss
icebp
iret
mov
push
(bad)
sbb
dec
add
sub
cmps
fistp
aas
sub
fcom
and
data16
scas
jae
xor
xchg
and
neg
ins
xchg
sahf
add
aas
sub
loop
push
movs
xor
push
cwde
xchg
aad
mov
add
jno
test
cmp
pusha
sub
and
push
mov
mov
shl
or
xor
int3
mov
cmps
cdq
mov
jl
out
push
xor
sbb
lods
xchg
(bad)
shr
sti
pushf
adc
and
mov
outs
adc
repz
pop
and
add
xchg
into
xchg
aad
repnz
(bad)
neg
fwait
fs
push
bound
leave
(bad)
fbld
cmp
xchg
outs
jnp
xchg
dec
xor
push
add
cs
pop
leave
shr
popf
rol
clc
inc
leave
sbb
cmp
and
lods
mov
repnz
cld
xchg
mov
aaa
fcmovnb
outs
push
pop
push
lock
cli
fild
jno
sbb
into
cwde
add
add
jne
xor
fnstenv
cmc
pop
hlt
fwait
outs
test
jb
fcmove
add
fld
pop
fs
jmp
push
sbb
(bad)
aas
mov
mov
outs
pop
jns
mov
out
dec
test
mov
adc
jnp
enter
fsubp
je
js
add
fldenv
icebp
repz
fidivr
inc
inc
cmp
lsl
pop
and
pop
lods
popf
lods
iret
out
jge
loopne
cmc
push
enter
adc
nop
mov
leave
inc
xor
mov
das
xor
sub
fxch
ins
mov
push
cmp
pop
imul
ja
mov
push
mov
popa
ss
jns
call
pop
mov
aam
push
cmp
pop
repz
push
mov
in
sub
jmp
daa
sub
lea
(bad)
aaa
or
add
(bad)
cmp
dec
icebp
bound
sub
ror
(bad)
adc
daa
pop
clc
jnp
test
add
dec
jne
jge
ss
or
jnp
clc
rol
xor
dec
adc
cmp
ficomp
push
mov
clc
call
pcmpeqd
jne
mov
(bad)
mov
in
mov
rcr
push
mov
cs
xchg
pushf
cmp
sub
xchg
and
sbb
data16
add
xor
(bad)
iret
and
fdivr
pushf
jmp
or
and
jmp
jmp
imul
add
out
jbe
xor
and
loop
and
test
call
repnz
mov
fdivr
stos
xor
xlat
or
xchg
and
jbe
aad
jecxz
(bad)
mov
xchg
dec
jmp
mov
ins
sub
mov
out
enter
xor
cmps
or
sub
jns
inc
in
inc
ja
popf
inc
mov
sar
lahf
(bad)
cld
out
(bad)
stc
iret
push
dec
in
or
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
adc
cmp
ins
test
ins
fnstcw
in
mov
retf
cmp
in
mov
dec
addr16
mov
inc
into
div
fimul
repnz
inc
cmc
inc
ds
pop
sub
int
jmp
xchg
ss
jae
cmp
fidivr
into
in
iret
xor
ins
add
sub
sbb
push
div
test
pop
(bad)
adc
adc
mov
aaa
imul
mov
loopne
mov
lahf
aaa
retf
cmp
int3
pusha
or
sbb
xchg
repnz
shl
rcr
shl
cmc
sahf
mov
pusha
loopne
pop
cmp
pop
pop
js
gs
jne
and
sbb
jge
in
push
fld
(bad)
xor
adc
dec
and
xor
call
inc
lods
mov
pushf
mov
gs
dec
sbb
mov
and
call
ins
jle
int3
push
pop
ret
leave
int3
mov
xor
mov
fdiv
(bad)
add
inc
push
sahf
imul
mov
mov
sbb
push
mov
leave
or
push
mov
mov
imul
(bad)
mov
imul
mov
jo
mov
(bad)
fnsave
or
mov
push
lock
repz
shl
stos
stc
add
popf
in
fidivr
push
adc
mov
lock
and
in
pop
scas
mov
ret
shl
ins
cld
std
les
pop
retf
retf
jnp
dec
mov
dec
fwait
sub
xchg
jns
or
cmp
dec
ret
pop
or
xor
gs
push
dec
outs
out
mov
cmc
dec
jecxz
outs
cmps
mov
jns
add
shl
shl
push
pop
push
xor
icebp
xor
add
sahf
sub
mov
bound
pop
rcr
pmulhuw
(bad)
and
dec
mov
leave
ins
test
xchg
ds
cmp
scas
mov
add
sub
dec
and
retf
or
dec
inc
ss
cmp
add
in
je
rcl
xchg
gs
call
add
frstpm(287
dec
jae
retf
add
cmp
in
neg
popf
sahf
mov
jmp
mov
adc
inc
mov
loopne
fs
dec
jb
sahf
scas
sub
sbb
inc
xchg
jp
push
pop
lods
fisubr
sbb
add
(bad)
push
adc
out
adc
test
int
dec
out
xchg
addr16
xlat
xlat
repnz
mov
xchg
ins
cmp
push
popf
bound
sahf
dec
loopne
sbb
mov
mov
je
sub
test
push
push
adc
imul
das
daa
xor
xor
cmps
inc
outs
fs
shl
inc
stos
cld
push
dec
pop
xlat
sbb
mul
mov
std
push
(bad)
jne
jbe
sub
pop
out
sub
adc
sbb
into
gs
outs
inc
adc
xchg
inc
push
call
out
call
mov
aad
add
(bad)
(bad)
ror
imul
jg
call
adc
dec
mov
and
cmc
add
shl
fld
mov
ds
xchg
lea
add
cwde
jmp
sbb
xor
xchg
lods
aam
cmp
cwde
push
inc
ins
sub
cmp
mov
loop
mov
add
xchg
push
adc
outs
(bad)
jmp
in
loope
lds
dec
ins
xor
popfw
test
mov
xchg
addr16
icebp
xor
shl
stc
ds
jp
je
push
adc
mov
or
cmp
adc
jecxz
and
es
pop
mov
mov
sub
shl
rol
pop
je
(bad)
and
inc
mov
call
sub
(bad)
outs
in
and
sub
jae
cmp
sar
movs
scas
ja
add
loope
xchg
pop
pop
dec
pop
and
unpckhps
popa
sub
daa
popa
xchg
call
adc
(bad)
(bad)
test
ffree
push
pop
mov
sub
loopne
sbb
lds
inc
test
jnp
cs
jns
(bad)
outs
test
mov
in
mov
pushf
add
jmp
adc
test
sub
sbb
mov
jmp
retf
imul
xor
sbb
xchg
pop
sbb
jge
pop
outs
aaa
push
or
(bad)
xchg
ins
pop
jns
adc
adc
adc
into
out
inc
push
push
jbe
or
sbb
test
sti
call
dec
aam
push
push
test
push
out
das
xchg
add
mov
cmp
mov
ror
pop
enter
or
std
mov
sar
sbb
lods
pop
cwde
cmps
sbb
push
icebp
ins
pushf
jns
push
xor
repnz
fsubr
jne
push
cwde
cmc
dec
xor
push
inc
or
push
mov
scas
mov
xchg
sub
mov
fwait
movhps
(bad)
adc
xchg
test
cmps
pop
cmp
jge
jbe
ror
in
pop
je
jp
cmp
dec
ds
inc
xor
cli
jae
mov
mov
jmp
xor
int
jne
inc
adc
sub
mov
jecxz
lods
scas
mov
dec
call
push
xor
mov
sbb
mov
pop
jb
(bad)
push
sbb
repz
sahf
mov
push
adc
mov
stos
pop
mov
mov
cmp
jb
loop
sub
cmps
arpl
sbb
lods
push
jl
int3
aas
std
pop
add
ss
mov
ret
test
std
sub
mov
leave
xchg
mov
in
addr16
mov
and
out
sub
push
add
adc
ins
bound
in
mov
icebp
nop
sub
(bad)
and
fwait
pop
inc
sar
mov
mov
lea
push
xor
scas
push
inc
hlt
out
and
inc
ds
mov
movs
mov
sbb
push
div
mov
push
pop
ins
cs
push
adc
mov
fcomp
out
mov
cmps
adc
ror
jno
dec
ins
test
xchg
adc
dec
adc
test
movs
mov
sub
push
jl
push
mov
add
sbb
aam
ja
dec
call
pop
mov
inc
inc
cld
cmp
rcl
mov
scas
fcomp
cmp
ds
sar
xor
xor
shr
and
mov
inc
adc
cmps
(bad)
ss
int3
lahf
enter
imul
out
and
lods
jmp
inc
fmul
jmp
push
sbb
cmp
bnd
fcmove
dec
pop
repnz
cmp
mov
ds
je
je
cwde
(bad)
fild
mov
mov
popa
mov
mov
mov
adc
xor
mov
aam
fs
(bad)
arpl
popa
mov
movs
cmp
neg
and
mov
push
cld
xor
sub
mov
xor
cmc
jecxz
test
jle
jns
outs
xchg
pop
inc
scas
or
pop
sti
dec
mov
lahf
cs
jns
xor
popa
stc
popa
int
jmp
leave
pop
(bad)
rcr
jb
cld
and
cmps
sar
adc
mov
fsub
xor
andps
adc
je
ror
adc
jo
rcl
dec
sar
sar
ss
pop
fiadd
jns
mov
xchg
into
rcl
mov
aam
mov
fild
ret
ret
xchg
popf
or
ret
mov
imul
imul
retf
aam
xor
mov
jge
popa
adc
(bad)
mov
pusha
push
(bad)
and
into
(bad)
cmp
sbb
(bad)
sub
inc
(bad)
sbb
add
mov
inc
sbb
repz
mov
int
test
cmc
daa
aam
jge
dec
sub
jno
sub
mov
aad
fnsave
mov
in
(bad)
rol
idiv
mov
jmp
scas
mov
inc
iret
into
push
leave
push
xchg
and
sti
or
xor
aas
pop
cli
adc
stc
je
or
ins
daa
jmp
repnz
fld
and
shr
mov
sbb
push
gs
cmp
aam
jge
mov
mov
mov
and
cmp
adc
enter
cmp
das
sbb
inc
inc
pushf
icebp
sub
mov
(bad)
xchg
hlt
aad
xor
push
mov
push
(bad)
loopne
retf
shl
push
data16
das
clc
xchg
lods
imul
sbb
popf
clc
mov
addr16
les
jae
scas
add
dec
popf
jo
sub
mov
cli
test
jp
push
jmp
mov
outs
(bad)
scas
xor
repz
push
fnstcw
test
mov
enter
mov
fsubr
xchg
push
fisttp
jp
fdiv
js
mov
add
cmp
dec
xor
jl
enter
mov
sbb
mov
cmps
adc
movs
xchg
(bad)
sbb
inc
cdq
or
or
dec
call
(bad)
sbb
mov
add
inc
test
xchg
and
sbb
cmp
push
push
cmp
dec
mov
push
ins
pusha
or
popa
call
push
push
jmp
sar
mov
int
adc
and
outs
jb
movs
dec
push
mov
and
dec
dec
xchg
push
scas
xchg
gs
aad
adc
inc
and
in
lock
call
loop
mov
pusha
xchg
out
lahf
adc
aam
inc
cmc
nop
out
call
punpckhwd
xlat
call
cmps
stc
(bad)
mov
clc
push
pop
jg
stos
add
inc
adc
adc
in
loopne
or
data16
mov
lock
dec
test
loope
pushf
dec
leave
cmp
cwde
mov
shl
sbb
out
mov
out
inc
dec
outs
push
push
inc
and
cmp
pop
pushf
std
in
js
jmp
mul
rol
mov
and
shl
fild
add
retf
mov
bts
les
sub
setns
add
clc
mov
xchg
ss
sbb
and
cmp
pop
clc
stc
loop
rcr
sbb
xchg
mov
out
push
xchg
iret
js
fs
dec
adc
sbb
pop
and
aas
in
mov
aam
das
retf
sub
pop
out
ins
mov
fadd
xor
sbb
mov
jge
jle
mov
push
sub
sub
lea
ja
aam
ins
jg
mov
adc
aam
xor
dec
(bad)
out
mov
lods
dec
dec
cmc
inc
sub
in
in
ins
jmp
push
out
or
jno
adc
mov
js
scas
jo
(bad)
stc
cld
mov
inc
jbe
(bad)
cmp
jl
in
pop
aas
mov
test
pusha
or
lahf
inc
push
stc
mov
cmp
rcr
jp
push
aad
pop
out
pop
or
jmp
xchg
mov
out
jmp
and
jae
add
sub
rcr
push
jmp
daa
mov
add
jle
aam
fstp
xchg
lahf
fist
sar
(bad)
idiv
cmp
sbb
clc
jp
ss
and
fdivr
mov
stc
mov
inc
jg
xlat
or
jmp
lea
rcl
jbe
lea
aad
cmp
mov
mov
or
out
adc
es
dec
xor
xor
aaa
(bad)
aas
out
push
sub
push
pop
cmc
les
repz
add
dec
sbb
cmc
rep
in
add
in
sahf
je
xchg
(bad)
fnstenv
fst
cmp
addr16
das
test
xchg
cdq
icebp
popa
dec
mov
jno
test
sbb
push
cdq
add
push
xchg
das
jns
inc
pop
sbb
fst
sbb
cmc
add
fisubr
mov
xor
shl
pop
cmp
cld
sbb
clc
mov
lds
mov
xchg
mov
mov
cdq
or
test
(bad)
cli
or
push
inc
sbb
sbb
(bad)
cmp
add
jo
mov
int
aas
imul
shl
jnp
loop
arpl
inc
cmp
cli
mov
test
cdq
sar
mov
cmp
in
mov
in
stc
int3
aas
and
ret
dec
push
bt
jmp
cwde
xchg
inc
(bad)
adc
dec
stos
jnp
movs
push
adc
mov
ins
dec
rcl
push
pop
pop
and
pop
mov
jne
(bad)
cmp
cmp
pop
stos
outs
push
fist
outs
ja
arpl
and
cmps
dec
cmps
dec
push
ins
or
push
mov
jnp
jae
pushf
mov
cmps
push
out
jl
push
dec
pop
xor
in
xchg
mov
push
xchg
test
(bad)
dec
mov
fst
xchg
push
and
shr
xor
jns
push
scas
cmps
adc
es
pushf
stos
xchg
or
pop
dec
rcl
pop
cmps
mov
jne
xor
test
dec
fidivr
ins
aaa
lahf
dec
pop
push
push
retf
loope
test
repz
sub
fmul
mov
sbb
push
dec
inc
jae
mov
inc
mov
dec
ficom
push
pop
aas
sar
mov
xchg
sub
jmp
sub
or
fdiv
jmp
scas
xchg
(bad)
in
fld
mov
jno
lea
cmp
mov
xor
pop
inc
out
cmp
push
pushf
push
gs
fs
dec
ds
add
cmc
arpl
jnp
fdiv
arpl
mov
and
pop
movs
mov
or
fwait
cmp
pop
js
fisub
and
fistp
fld
sbb
push
shl
mov
stos
dec
ja
pop
cmp
fs
loop
cld
and
aas
cli
jmp
lock
pop
or
jne
std
xchg
sbb
sub
push
jne
lock
cmp
sub
int3
loope
pop
jmp
pusha
xlat
cmp
inc
into
ret
xor
push
outs
push
popa
mov
sar
adc
sub
mov
and
fdivr
xor
cmp
mov
mov
adc
fistp
lea
xor
fsubr
mov
cmps
mov
mov
fimul
push
adc
js
lahf
push
nop
or
iret
repnz
sbb
es
frstor
push
xchg
pop
leave
and
jmp
pusha
scas
cmc
or
adc
jecxz
shl
push
cmp
enter
out
in
neg
rcr
inc
mov
inc
ins
jns
mov
or
test
ret
jle
cmp
aam
dec
sbb
test
test
loopne
inc
or
xchg
mov
xor
jnp
xchg
loop
dec
cmp
out
xchg
sahf
rol
adc
fidiv
movs
inc
inc
jge
out
dec
jecxz
mov
(bad)
hlt
outs
or
xchg
test
and
ror
mov
inc
xchg
ret
and
adc
aaa
pop
mov
mov
push
pop
or
lahf
in
(bad)
call
mul
jl
mov
xchg
aaa
and
mov
xchg
mov
cmp
cmp
xor
xchg
add
call
xchg
cmps
into
inc
mov
clc
jae
inc
pop
dec
bound
xor
stc
out
cmp
test
dec
cmp
mov
ror
xlat
in
mov
sahf
ret
or
lods
add
dec
push
pusha
ja
xor
cdq
or
iret
and
mov
stos
mov
jecxz
out
mov
mov
xchg
aam
ror
daa
retf
ja
lods
into
jge
push
pop
add
mov
in
ror
jmp
out
jns
mov
jle
repnz
jns
pop
sbb
sub
xchg
xchg
or
and
fcmove
popa
and
ret
push
cmp
movs
pop
scas
pop
cmp
and
dec
test
fsubr
movs
int3
(bad)
or
data16
(bad)
ja
aad
sar
bound
dec
add
pop
lods
add
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
hlt
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
fcomp
imul
cmp
cmps
(bad)
mov
fnstsw
ss
xchg
rcr
cmps
cdq
cwde
sti
jle
mov
add
mov
mov
cwde
mov
fucomp
test
(bad)
leave
mov
lahf
imul
pop
lods
stos
mov
ds
sub
lahf
out
out
idiv
addr16
stc
adc
aam
push
repnz
sbb
les
cmp
dec
out
sbb
and
sar
fidiv
mov
sub
push
jp
mov
(bad)
adc
fist
xchg
iret
push
pop
and
sub
js
mov
ins
stos
mov
xchg
mov
add
pushf
mov
mov
jbe
adc
sti
(bad)
sub
jmp
or
mov
aas
test
std
aas
mov
xor
or
popf
adc
cld
cli
add
in
pop
push
mov
mov
cmp
cmps
scas
or
adc
daa
adc
scas
cwde
jnp
jmp
and
in
xor
fcmovbe
push
pushf
mov
mov
mul
fwait
inc
inc
push
(bad)
movs
gs
add
add
out
outs
sub
jne
push
cmc
aam
dec
loopne
push
mov
add
fbstp
and
dec
cwde
xchg
adc
inc
gs
push
cdq
and
xchg
push
sti
jge
mov
mov
iret
sub
fst
jb
loopne
cmp
mov
add
sahf
xor
xchg
mov
aaa
add
push
in
inc
ins
retf
in
js
ret
inc
xor
stc
jg
data16
lods
push
mov
call
sub
imul
clc
or
pop
test
inc
(bad)
int3
or
sbb
jmp
push
(bad)
mov
xchg
mov
(bad)
adc
rol
cld
jo
sub
cmp
mov
mov
arpl
movs
mov
cs
adc
ficom
es
cmp
enter
jmp
js
fistp
add
mov
cmp
and
dec
mov
and
and
mov
pop
mov
ror
stc
sbb
mov
in
cmp
sbb
adc
push
fisubr
sbb
cmps
dec
(bad)
test
popf
sub
mov
outs
mov
push
mov
ret
add
sti
sub
dec
lods
xchg
jge
(bad)
stos
jmp
das
add
push
out
(bad)
movs
inc
dec
sub
in
adc
bound
sub
xor
add
jae
pop
cmp
dec
lods
imul
in
mov
ret
sub
adc
mov
cmp
mov
cmp
push
outs
lock
je
outs
cdq
outs
jbe
pushf
dec
inc
out
ins
mov
enter
push
retf
movs
add
mov
fst
mov
add
xchg
bound
xchg
xor
jo
inc
add
cmc
jmp
mov
das
sub
adc
pushf
into
jmp
lods
xchg
das
jge
ret
ja
push
mov
adc
jo
(bad)
sti
cwde
sbb
test
ret
mov
fimul
aam
lods
outs
retf
icebp
xor
cmc
adc
mov
pop
pusha
shl
repnz
and
jno
in
or
int
inc
sti
jmp
not
in
lahf
push
cli
jns
(bad)
xor
into
inc
mov
pop
pop
cmp
mov
fisttp
sbb
mov
and
rol
cld
scas
push
repz
lods
mov
dec
mov
mov
mov
rol
xchg
mov
(bad)
into
cs
imul
pop
int3
add
push
or
and
sbb
lods
sbb
mov
and
jle
ins
xchg
call
and
std
call
pop
xchg
call
push
fs
adc
mov
and
adc
loopne
neg
xchg
mov
inc
call
aad
adc
jb
cwde
or
adc
gs
xchg
jae
dec
inc
icebp
sbb
imul
stos
jb
mov
push
ss
jbe
xlat
jle
pusha
push
and
outs
pop
shr
mov
shr
out
sbb
xor
dec
and
or
mov
in
out
push
mov
mov
fsubr
neg
call
sub
jp
or
sbb
ja
aam
sbb
stos
cmp
xchg
push
ds
sub
imul
jmp
sbb
push
js
rcr
es
sti
lock
xchg
sub
jl
xchg
mov
mov
jge
ficomp
test
lods
ss
xor
jmp
loop
pop
jnp
push
sahf
xchg
outs
mov
inc
je
add
pop
dec
das
pminub
add
ins
nop
repnz
pushf
enter
xor
pop
jae
iret
lahf
xchg
dec
mov
jmp
cmp
stos
push
in
cmps
dec
xchg
jge
xor
sbb
idiv
cmp
ins
inc
push
scas
fsubr
je
fs
mov
xor
jmp
stos
rol
cwde
pop
fadd
in
mov
fwait
test
push
mov
retf
push
jne
popa
add
rcr
retf
pop
icebp
sub
push
sub
mov
or
out
xchg
call
mov
cmp
js
mov
xchg
push
jmp
xchg
jns
test
nop
mov
lods
mov
xor
scas
push
mov
retf
int
mov
mov
and
fidiv
(bad)
icebp
push
jge
stos
iret
mov
fimul
arpl
iret
shr
ins
cmp
std
xchg
mov
in
aad
into
pop
fs
adc
push
(bad)
push
movs
push
inc
vmread
add
xchg
push
and
pop
mov
iret
pop
push
popf
int
mov
out
jne
jmp
pop
stc
cmp
pop
jo
stos
popf
mov
inc
cmps
xor
push
cmp
fcom
retf
cwde
sub
gs
xchg
repz
outs
xor
int
aas
sahf
xor
add
inc
sub
and
outs
sbb
jg
lds
(bad)
add
inc
pushf
push
int
test
xchg
fucomip
jmp
jae
mov
scas
neg
pop
xor
jno
ret
in
rcl
sub
cmp
xchg
lahf
mov
jae
ins
int
xchg
add
mov
mov
int
mov
fdivr
sahf
mov
loopne
pop
cmp
lds
and
jno
push
jne
lods
and
sbb
xor
aaa
or
add
sub
xor
enter
jge
pop
sbb
pop
shl
cmp
jge
data16
jge
push
inc
rol
pusha
sbb
mov
std
sub
cwde
cmp
aam
aam
pushf
test
inc
clc
fld
jge
daa
in
xor
hlt
mov
sub
stos
cli
or
jb
fiadd
xchg
adc
or
inc
xchg
sub
mov
clc
bnd
push
xchg
cmp
or
loopne
bound
loope
stos
rcl
shr
retf
loope
push
rcr
dec
mov
lahf
cmps
mov
mov
outs
and
loopne
lock
loopne
imul
pop
or
push
(bad)
cmps
add
into
pop
fld
call
out
adc
and
and
mov
push
dec
mov
retf
xchg
jns
jns
leave
pop
lea
stos
mov
clc
jmp
rcr
fiadd
fld
or
ret
fidiv
adc
xchg
cmp
sahf
movs
in
(bad)
repz
lock
push
mov
addr16
(bad)
fisttp
cmps
ror
pusha
jmp
lods
xlat
xchg
ins
movlps
(bad)
push
pop
in
sar
cmp
clc
nop
aas
mov
and
xchg
cmp
or
jp
fwait
sub
adc
cmp
in
mov
mov
push
push
shl
mov
test
push
xor
(bad)
sar
fdivr
into
jns
and
dec
push
add
mov
mov
mov
xchg
sub
std
loope
jb
scas
cmp
cmps
xlat
adc
addr16
cmp
cs
inc
jne
mov
jb
jmp
cmp
stos
addr16
pop
jae
jo
adc
add
es
outs
mov
xchg
jo
xor
in
ret
cs
jno
daa
and
sub
pop
pop
into
stos
and
push
jb
lds
in
mov
daa
scas
fstp
inc
cmps
cmp
movs
outs
dec
fstp
add
ret
sbb
cwde
aas
xchg
imul
les
aas
es
pushf
mov
mov
sbb
push
or
sub
sbb
xchg
cdq
adc
inc
(bad)
fimul
xor
pop
mov
imul
ficomp
pop
cmps
rcl
or
push
sub
aaa
push
out
mov
loope
push
mov
sub
mul
xchg
imul
push
je
call
pop
xchg
jns
sahf
hlt
and
xchg
int
aaa
and
fsub
adc
mov
xor
dec
ds
int3
xchg
cmp
or
xor
fs
pushf
pop
inc
jl
jecxz
cmc
xchg
sbb
icebp
(bad)
dec
cmps
stc
mov
push
icebp
cwde
add
mov
jl
es
fimul
aas
xchg
jns
das
cmps
pop
jecxz
fimul
jnp
out
movnti
mov
icebp
pop
shr
std
test
frstor
stos
mov
add
sbb
xlat
shl
not
in
clc
mov
ds
mov
cld
and
mov
mov
test
gs
(bad)
mov
lds
mov
stos
sahf
stos
add
add
pop
jge
or
out
scas
outs
addr16
pop
add
loope
outs
sbb
adc
add
or
scas
or
leave
(bad)
cmp
pop
pop
sub
and
add
les
pop
sub
dec
jg
mov
iret
retf
jge
sbb
pop
inc
xor
inc
ins
lea
or
mov
(bad)
push
inc
adc
nop
(bad)
jmp
push
ja
sub
das
and
adc
adc
push
sbb
inc
dec
sbb
xor
xor
jmp
jmp
jo
mov
jo
or
(bad)
(bad)
test
jge
adc
imul
xchg
pop
add
idiv
mov
imul
jmp
adc
enter
lods
mov
dec
lea
push
xchg
jle
(bad)
jp
inc
lahf
push
arpl
mov
dec
cmps
ret
inc
out
(bad)
adc
arpl
push
pop
pop
mov
cmps
fidiv
pop
dec
mov
xor
arpl
push
push
add
pop
sbb
outs
mov
mov
mov
(bad)
mov
stc
ds
jae
dec
repz
xchg
xor
dec
pop
adc
jle
jae
cld
shr
cmp
pusha
sbb
mov
xlat
adc
jnp
retf
(bad)
loop
sub
pop
push
mov
adc
fcomp
xor
jae
mov
pop
add
cs
out
outs
and
(bad)
xchg
adc
retf
sub
cmp
push
outs
jp
and
or
and
(bad)
test
dec
test
and
test
daa
push
xor
cdq
retf
imul
lods
xor
loope
xor
jl
sbb
mov
arpl
and
int
cdq
out
jb
pop
cmp
add
xor
mov
adc
into
or
xchg
or
sahf
popa
imul
test
shl
adc
xor
sbb
scas
retf
or
jns
xchg
scas
popa
aaa
data16
fsubr
mov
scas
std
dec
add
test
iret
xlat
add
adc
retf
aaa
ror
je
retf
das
mov
int
jbe
mov
in
cmp
jmp
mov
push
dec
cld
sub
pop
xor
mov
cmps
mov
lds
pop
in
or
sub
xchg
cwde
push
pushf
dec
je
jecxz
xchg
xchg
jno
out
ret
test
mov
mov
dec
mov
mov
xlat
nop
jbe
jb
or
(bad)
mov
push
iret
in
popa
jns
jl
add
out
dec
fdiv
jmp
rcl
ds
cmp
push
cmps
xor
inc
hlt
scas
adc
sbb
mov
(bad)
test
xor
aam
(bad)
lods
mov
add
mov
pushf
pusha
bound
addr16
sbb
call
push
(bad)
imul
push
sbb
push
sub
es
adc
std
xchg
ja
adc
xchg
dec
les
loopne
jl
pop
pop
inc
js
mov
inc
jl
add
adc
mov
cmps
push
xchg
or
outs
cmp
mov
inc
sbb
pop
leave
fs
(bad)
xchg
add
pusha
pop
or
adc
pop
push
inc
or
(bad)
mov
lahf
mov
xor
fmul
jle
dec
js
repz
aam
fnstcw
rol
or
pop
std
sahf
mov
and
jmp
(bad)
add
in
sbb
sbb
out
or
movs
mov
sbb
adc
xchg
inc
js
clc
push
sahf
leave
ja
push
add
push
aad
xchg
ins
sub
push
jne
dec
clc
xchg
jle
or
mov
sbb
out
xchg
sbb
jmp
sbb
push
push
fdivr
sub
js
gs
jl
bound
xchg
shl
jl
cmp
imul
pop
lahf
fidiv
inc
rcl
mov
rcl
jge
pop
(bad)
mov
shr
mov
sub
js
stos
adc
lea
jbe
cmp
mov
es
inc
cmp
xchg
cli
inc
adc
mov
imul
sbb
inc
inc
cmp
into
push
into
jecxz
inc
mov
addr16
(bad)
cmp
dec
xor
lahf
out
(bad)
movs
leave
mov
ins
adc
test
inc
pop
xor
int3
test
mov
loope
sbb
push
lock
retf
loope
daa
inc
sub
pop
aaa
shr
adc
push
aas
cmp
dec
cmp
les
dec
fwait
and
and
dec
mov
sbb
icebp
xlat
mov
jbe
ret
jg
sub
fxch
xor
repz
shr
xor
adc
nop/reserved
cmp
inc
add
imul
test
or
sub
and
dec
push
cmc
ja
inc
xlat
addr16
jnp
ror
adc
jecxz
inc
push
das
(bad)
cmp
mov
xlat
retf
fimul
mov
push
cmp
sub
push
repz
cs
push
stc
push
(bad)
push
cmp
lahf
jmp
(bad)
sub
and
push
pop
nop
cmp
mov
dec
lods
fnstcw
dec
and
mov
ja
fdiv
mov
test
enter
pop
mov
cmps
push
cmp
dec
test
leave
aam
fiadd
nop
adc
imul
push
fadd
ficom
push
scas
lods
mov
lds
mov
enter
ss
pop
neg
push
adc
push
cmc
mov
hlt
xchg
push
sbb
mov
jbe
lods
repnz
out
and
lods
mov
nop
pop
aaa
cmc
repnz
dec
mov
push
(bad)
and
xlat
movs
inc
push
(bad)
jp
test
sbb
mov
popf
add
cmp
cs
add
mov
pminub
ret
cs
test
add
fisubr
xchg
cli
mov
jecxz
movs
push
rol
mov
sbb
mov
outs
adc
out
push
fwait
sbb
and
rol
or
(bad)
inc
ja
or
mov
and
xchg
stos
adc
xlat
pop
or
jnp
and
repnz
pop
iret
xchg
repz
dec
(bad)
loopne
sbb
and
mov
popf
aas
repnz
test
and
jle
pusha
loopne
cwde
xchg
outs
sub
bound
xor
mov
stc
(bad)
pop
inc
aam
mov
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
icebp
jecxz
scas
imul
inc
cmps
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
add
and
outs
ss
outs
fs
and
xor
sub
or
inc
pusha
and
add
out
mov
nop
dec
in
ror
nop
jmp
jge
dec
sbb
mov
shl
fmul
add
test
int
mov
or
test
or
js
fisubr
pop
inc
push
loop
cmp
jns
push
ret
icebp
out
je
(bad)
pop
lea
inc
sub
xchg
inc
sbb
xor
popa
in
test
enter
jle
xchg
xchg
ficom
repz
sbb
repnz
xor
retf
cs
imul
push
loope
popf
scas
jmp
xchg
mov
in
sbb
dec
pop
ins
and
cmps
rcl
int
mov
add
adc
(bad)
adc
(bad)
data16
cmps
pop
(bad)
(bad)
jb
push
aam
mov
nop
sub
into
add
cs
pop
fstp
dec
cmps
les
mov
and
inc
pop
sbb
xchg
xchg
and
sbb
mov
retf
in
adc
(bad)
xor
lea
jecxz
cmp
popf
in
mov
or
xchg
mov
add
test
mov
pusha
push
push
xchg
ins
les
retf
mov
pop
sahf
or
ja
add
mov
adc
dec
adc
aam
adc
div
mov
jbe
daa
inc
fwait
jns
inc
xchg
ret
fld
cmp
sti
cli
sub
sti
frstor
dec
into
scas
inc
sub
das
add
mov
iret
shl
stos
pop
or
xchg
adc
rol
dec
lahf
outs
shr
fwait
ins
iret
add
push
jns
gs
iret
sub
outs
in
add
shl
icebp
dec
ja
sti
(bad)
and
repnz
cwde
inc
mov
sbb
jno
loope
adc
mov
xchg
dec
sub
ficomp
les
mov
stos
pushf
or
mov
jle
xor
cmp
pop
stc
adc
popa
and
test
fidiv
sub
fnstcw
ficomp
mov
sbb
cld
dec
dec
mov
jo
aas
out
jbe
add
mov
push
(bad)
xchg
jmp
jo
retf
pop
ins
push
mov
das
call
jle
js
pop
in
mov
adc
jns
mov
fmul
pop
(bad)
adc
xchg
div
mov
dec
dec
sahf
out
fist
pushf
(bad)
dec
movlps
mov
mov
addr16
jno
cmc
xchg
pop
jne
lods
jmp
mov
fs
adc
xchg
rol
pop
daa
mov
(bad)
fdivr
scas
xor
xor
jnp
in
jns
pushf
ficom
inc
xor
rcr
dec
shl
inc
push
es
push
mov
mov
jns
push
addr16
loop
call
(bad)
push
loopne
jecxz
jmp
sbb
int
sub
das
mov
cmps
mov
jp
pop
cli
push
and
in
int
push
(bad)
push
or
add
mov
or
pop
xor
iret
mov
retf
lods
sub
movs
imul
jecxz
lds
test
cmovno
dec
enter
pop
cmps
aad
jge
in
pop
shr
ror
hlt
cdq
sbb
out
(bad)
scas
retf
mov
inc
ss
movs
leave
test
aam
scas
jnp
mov
dec
pop
mov
mov
sbb
cmps
xlat
retf
mov
xlat
dec
(bad)
(bad)
mov
je
pop
sub
push
int3
adc
adc
jb
mov
out
fistp
movs
cmp
jl
push
aam
inc
dec
ret
in
jno
and
add
add
xor
xor
es
or
cmps
jno
ss
mov
xchg
scas
test
das
pop
pop
aas
cmps
jl
test
shr
popa
xor
inc
mov
xchg
fbld
scas
jmp
scas
mov
dec
test
sub
mov
xor
mov
add
add
lods
push
not
popa
xor
es
scas
push
and
mov
xchg
aad
fstp
add
jle
add
call
test
into
mov
and
or
mov
les
jl
fwait
les
mov
push
xor
lock
inc
nop
push
outs
out
(bad)
jmp
or
fsubr
outs
outs
stos
mov
push
movs
mov
stos
imul
pop
or
rcr
and
or
lods
push
mov
pop
and
cmc
push
sub
ret
fsub
mov
xor
push
call
aad
test
aas
inc
icebp
mov
movs
pop
fimul
lds
cmp
mov
dec
jo
test
pop
fmul
test
cmp
movs
jno
jp
ins
lods
mov
in
and
push
xor
not
cmc
pop
xchg
and
outs
(bad)
adc
inc
mov
inc
mov
ror
jb
ret
mov
add
mov
js
dec
ins
pop
xor
scas
and
out
aad
fdiv
cwde
aam
in
sub
inc
and
adc
push
addr16
xchg
add
jecxz
sahf
and
imul
in
pop
cmps
or
test
stos
jno
lea
dec
or
sub
or
addr16
adc
push
mov
push
iret
push
neg
push
fmul
push
jne
lods
xchg
mov
daa
dec
mov
mov
js
repnz
loopne
outs
in
sub
ror
stc
fnstcw
xchg
call
or
cmp
enter
sub
pop
not
mov
int3
push
ins
test
push
cmp
(bad)
bound
push
sti
xchg
mov
or
(bad)
push
pushf
mov
inc
jp
mov
or
mov
loop
not
sub
adc
hlt
or
mov
call
add
sahf
inc
sub
dec
dec
jo
add
or
inc
shr
(bad)
jmp
std
or
xchg
or
xchg
fmul
ins
int
or
cmc
jb
mov
lds
xor
or
pop
in
cmp
(bad)
push
adc
jmp
sbb
sub
cld
jns
pop
scas
add
sahf
out
jno
dec
inc
sahf
push
adc
(bad)
shl
das
pop
cmp
out
(bad)
push
or
cmovp
mov
add
adc
out
adc
or
(bad)
test
aam
cdq
addr16
jg
test
ds
xor
jbe
mov
cwde
xchg
push
dec
outs
xor
pop
and
xor
out
je
jl
dec
call
int3
sub
xchg
retf
mov
xchg
mov
xchg
jae
lods
(bad)
inc
in
jg
adc
or
cmp
stos
retf
daa
mov
jb
sub
pop
jle
idiv
pop
inc
out
push
mov
aaa
or
fwait
sar
push
repnz
mov
int
xor
movs
aaa
test
loop
cld
cmps
mov
add
xchg
mov
sti
jb
pop
in
lahf
cs
retf
mov
inc
lds
mov
iret
dec
xor
mov
popf
add
outs
shl
xlat
pop
mov
cdq
sbb
push
push
jno
and
ss
and
lock
pop
aad
iret
mov
fcomi
repz
pop
adc
xchg
xor
adc
add
sbb
mov
std
adc
and
adc
push
loop
(bad)
popf
mov
inc
push
loopne
cli
ds
and
and
xor
jle
(bad)
out
xchg
sbb
pop
xor
pop
cmp
out
iret
fbld
ret
pop
ret
in
jo
push
movs
and
(bad)
fcmovb
mov
mov
jmp
js
imul
lds
icebp
and
mov
daa
out
out
ins
call
fwait
dec
aaa
sar
mov
mov
aam
and
jmp
sbb
xor
loop
addr16
cmp
adc
les
imul
xchg
inc
(bad)
(bad)
jns
sbb
pushf
popf
and
jno
inc
sub
or
dec
xchg
add
mov
mov
rcr
jnp
jmp
rcr
daa
shr
es
jae
je
(bad)
popa
xlat
retf
test
mov
adc
dec
adc
fisub
retf
cmp
mov
mov
std
sti
(bad)
push
ins
mov
push
mov
add
and
mov
cmp
jg
std
movs
dec
inc
in
push
stos
mov
and
jns
enter
ins
sub
les
adc
sbb
push
mov
imul
pop
or
dec
repnz
push
aas
movs
push
pop
or
xchg
jbe
repz
loope
jb
push
fdiv
push
xor
shl
mov
jecxz
jl
ds
mov
retf
std
cmc
lods
aad
lods
push
fdiv
stos
scas
sar
push
iret
ja
in
adc
(bad)
aaa
mov
lods
or
inc
xchg
lds
adc
push
stos
ret
sbb
mov
out
xchg
jo
repnz
push
pop
inc
mov
int
mov
(bad)
dec
push
es
in
imul
iret
jbe
cli
dec
pop
mov
mov
jae
out
add
out
adc
cmp
jne
xor
iret
adc
div
cmps
in
ds
add
clc
pop
fld
xor
adc
push
jl
sub
cs
mov
mov
inc
inc
xor
dec
sub
lock
idiv
lods
movs
and
ret
sub
repnz
dec
xchg
sub
imul
mov
sub
idiv
dec
inc
es
in
mov
cmp
jo
jl
aaa
(bad)
jne
xchg
dec
push
or
xor
das
pop
pop
cdq
test
and
cmp
push
jb
fadd
imul
add
or
and
xchg
fwait
mov
std
out
mov
cmp
add
into
test
retf
pop
stos
jne
mov
cmp
mov
sub
sahf
dec
pop
xor
and
mov
lods
cwde
sbb
cmp
cli
cmps
mov
and
pop
mov
add
push
(bad)
push
addr16
repnz
lahf
xor
bnd
mov
cmp
sub
icebp
fist
shl
cmp
dec
cmps
cmp
loope
ja
sbb
pop
sti
adc
xchg
les
fcomi
in
pop
outs
or
ja
inc
outs
stc
lahf
inc
sub
leave
mov
xchg
pop
dec
push
xchg
mov
or
sti
lods
hlt
hlt
div
mov
ret
inc
add
dec
pushf
adc
nop
xchg
mov
arpl
pop
int3
das
nop
sbb
stc
retf
test
or
sar
mov
cmp
stos
fcmovbe
movs
and
movs
std
push
in
aad
lods
pop
rcl
sbb
rcr
inc
and
sbb
xor
ds
movs
pop
jmp
and
sbb
pushf
mov
push
scas
mov
clc
add
sub
ficomp
(bad)
lahf
sbb
ins
das
pop
ror
repz
jmp
ret
bound
out
jb
les
ja
aam
fwait
push
push
stos
xchg
sub
or
shl
sahf
aam
xchg
pop
outs
jns
xlat
dec
sub
into
out
xchg
fistp
aaa
ins
stos
jmp
aam
or
pop
mov
(bad)
mov
ins
dec
sti
mov
dec
xchg
lock
sti
lea
adc
mov
popa
mov
ins
into
(bad)
mov
push
adc
add
dec
cld
push
mov
cmc
(bad)
mov
fwait
mov
rcr
lods
dec
es
jmp
neg
mov
mov
mov
call
bound
sbb
adc
push
pop
cmp
adc
fist
mov
xchg
fisub
jbe
es
mov
out
(bad)
jae
out
lods
sub
adc
inc
adc
jno
(bad)
push
fsubr
lea
imul
nop
push
or
lods
sub
pushf
adc
add
pop
leave
pop
jo
jne
(bad)
test
sub
or
push
xor
push
pop
adc
sbb
scas
dec
out
lods
clc
fwait
xor
mov
jle
jl
xor
mov
pusha
std
(bad)
loop
jmp
jb
(bad)
or
add
sub
fcomp
int
mov
mov
mov
rcl
fdivr
sub
arpl
adc
push
ins
jne
xchg
pusha
push
adc
push
call
xchg
mov
sbb
call
pop
inc
mov
cdq
mov
dec
push
int
inc
dec
fsubr
(bad)
sbb
cwde
inc
or
jg
js
inc
sbb
and
adc
mov
inc
jnp
sbb
pop
jle
fs
mov
icebp
(bad)
aas
scas
fstp
fidiv
aad
pop
or
dec
das
jbe
and
push
add
fwait
sbb
push
icebp
xor
xchg
loope
adc
inc
and
outs
adc
mov
cwde
mov
in
sbb
and
gs
lds
adc
mov
arpl
hlt
loope
shr
mov
pop
outs
cld
inc
xchg
adc
dec
cdq
sbb
data16
inc
rsm
mul
jle
inc
sbb
mov
repz
and
push
sub
psraw
arpl
cld
aaa
mov
cmp
ror
mov
mov
add
fwait
mov
data16
in
stc
addr16
rcr
jle
retf
sbb
or
popa
add
mov
push
into
(bad)
ficomp
sub
push
clc
leave
jmp
outs
arpl
jno
and
leave
sub
adc
and
fild
jnp
bound
cmps
xchg
daa
xchg
inc
xor
pop
and
fdivr
mov
cmp
loopne
inc
cmp
out
jge
mov
push
ins
jns
clc
mov
inc
repz
loop
jne
pop
jecxz
push
loope
shr
dec
dec
dec
sub
test
rcl
dec
fs
arpl
mov
push
outs
cdq
xor
cmps
push
dec
push
mov
mov
(bad)
ret
ss
daa
fisub
dec
xchg
bound
pop
push
call
(bad)
test
ret
push
loopne
loop
leave
ins
popa
xor
inc
bnd
ror
dec
sahf
push
(bad)
and
std
add
and
mov
clc
and
popa
push
or
jmp
jns
hlt
scas
retf
and
jmp
adc
mov
mov
sub
loop
or
shl
sbb
ins
pop
adc
inc
inc
rcl
xor
outs
inc
add
cmc
xor
aas
xchg
and
and
xchg
jmp
mov
call
aas
inc
mov
out
cmp
inc
jne
mov
(bad)
and
pop
pop
mov
fidiv
dec
push
xchg
hlt
adc
cmp
les
out
into
sbb
outs
cmp
and
push
icebp
cmp
sbb
pop
xor
inc
push
lods
or
add
mov
test
sub
pop
scas
aad
pop
add
int3
(bad)
sub
mov
fidivr
push
push
mov
jnp
js
cld
cwde
sub
jne
push
pop
pop
out
and
xor
loopne
shr
cmps
adc
not
int3
add
dec
std
call
jb
inc
pushf
arpl
fild
jnp
aaa
jne
cmps
inc
int
rcl
iret
cs
shl
mov
pop
outs
imul
popa
push
test
adc
fst
sbb
sub
pop
pop
sub
mov
or
fbld
mov
unpckhps
push
push
add
out
jg
stc
out
jg
stc
jg
add
movups
and
leave
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jb
(bad)
jmp
cmp
fwait
outs
ror
aam
in
aam
test
dec
xor
je
xlat
jmp
in
repz
fs
or
ss
sub
pop
ins
out
mov
inc
movs
mov
int
mov
push
push
inc
mov
test
shl
mov
jge
ss
xchg
mov
enter
mov
push
mov
jno
dec
daa
push
loop
mov
jle
into
js
enter
fnstsw
cmp
xor
or
fstp
fsubr
jecxz
in
je
adc
hlt
(bad)
pop
mov
test
(bad)
(bad)
std
add
into
mov
shl
call
fld
es
iret
dec
mov
cmps
fwait
adc
jno
push
or
sub
mov
jg
push
inc
cmp
out
repnz
fsub
push
sub
xchg
outs
or
(bad)
mov
cmp
aas
mov
mov
aam
mov
sbb
cmp
test
inc
push
mov
jb
jg
dec
inc
fs
adc
push
pop
stc
xor
aam
(bad)
loopne
test
(bad)
(bad)
jmp
daa
push
sbb
in
mov
jb
rcl
and
push
lea
in
mov
aaa
test
mov
cdq
in
push
cmp
ss
cmp
into
std
icebp
push
pop
and
or
pop
ret
jg
pop
mov
xchg
in
in
loope
out
pop
jnp
aas
mov
xchg
sahf
sbb
addr16
push
mov
imul
in
xor
mov
jge
dec
lds
(bad)
rcl
push
in
fidivr
add
adc
sbb
retf
add
adc
ret
rcl
lahf
mov
test
scas
movs
leave
mov
sbb
clc
xchg
adc
ror
pop
std
sahf
out
push
mov
test
ja
ja
sahf
inc
int
jle
xor
iret
blsfill
daa
mov
sub
retf
enter
test
stos
outs
ret
les
inc
loope
call
fldcw
enter
test
pop
enter
push
movs
imul
jge
mov
cmp
dec
cmp
inc
jmp
sbb
in
pop
jl
jg
inc
jge
scas
lock
das
(bad)
adc
mov
out
jge
push
scas
inc
(bad)
shl
add
xlat
pop
or
mov
sub
sbb
imul
popa
jne
(bad)
dec
mov
adc
in
pop
push
loop
(bad)
pusha
fistp
scas
inc
fld
and
xchg
jo
lods
test
pushf
fnstenv
movs
sbb
mov
push
aad
je
dec
lea
or
inc
cmp
loopne
sbb
jmp
jmp
adc
xchg
(bad)
push
sbb
fisub
lods
imul
gs
lea
pop
push
mov
ja
into
aam
test
sar
and
dec
int
cmc
into
mov
xchg
jns
xchg
xchg
lahf
lods
sub
sbb
xor
iret
xchg
sub
inc
push
inc
xchg
pop
push
(bad)
iret
pop
fwait
add
pop
pop
sar
jo
sti
xchg
rol
out
sbb
push
(bad)
(bad)
xchg
mov
xchg
imul
mov
jns
pushf
das
sbb
test
clc
stos
(bad)
sar
adc
xchg
fsubp
rcl
and
movs
fdiv
adc
scas
mov
(bad)
repnz
inc
pop
idiv
jnp
ss
sbb
lods
aad
mov
repz
dec
jle
pop
(bad)
push
hlt
ret
cmp
add
xchg
cwde
ja
pushf
or
inc
push
xchg
pop
xchg
sysexit
or
mov
mov
jbe
pop
fiadd
data16
pop
adc
cwde
jo
pop
fistp
pop
gs
imul
inc
cmp
jne
sbb
add
in
mov
mov
cli
sahf
inc
push
mov
xor
cmp
adc
add
and
add
call
sbb
bound
sub
repz
test
jg
mov
pop
sha256msg1
sahf
sti
and
imul
in
mov
pop
hlt
jb
jmp
jbe
cmps
popa
push
add
into
dec
popa
cdq
js
outs
mov
push
pop
movs
jns
sbb
aam
cmc
fcmovb
jge
xor
sub
not
inc
dec
rcr
das
notrack
cmp
mov
cld
mov
mov
sub
mov
stos
stc
das
jnp
jmp
into
mov
push
or
fdivr
scas
ins
add
cwde
add
push
mov
icebp
push
pop
dec
movs
adc
cwde
push
dec
mov
pusha
adc
(bad)
test
stos
inc
(bad)
call
xor
lock
fisttp
cmps
and
retf
jge
jmp
retf
movs
push
hlt
inc
cld
cmc
sbb
add
stc
les
jecxz
data16
mov
mov
test
xchg
add
popa
sub
nop
push
mov
ret
dec
stos
mov
xor
add
cmp
or
mov
cmp
retf
lock
mov
movs
in
scas
and
mov
mov
lods
test
sub
jno
dec
xchg
leave
add
ja
aad
in
mov
ins
pop
xchg
mov
dec
push
leave
mov
cmp
jecxz
jecxz
pop
sbb
xchg
mov
mov
sbb
mov
mov
inc
jl
jno
or
sti
sub
pop
dec
sub
test
xchg
jmp
cmps
dec
loopne
ret
mov
jae
aad
jg
inc
addr16
int3
imul
xchg
repz
or
(bad)
into
jnp
pop
mov
out
ja
lods
pop
ja
mov
sahf
sub
jge
test
dec
jbe
retf
jl
pop
rol
(bad)
jae
mov
pop
aas
fist
nop
ins
xchg
(bad)
arpl
mov
inc
mov
cmp
aas
iret
(bad)
das
inc
and
aaa
push
inc
in
inc
dec
leave
adc
stos
gs
(bad)
ret
adc
scas
in
(bad)
aas
push
jle
fbld
dec
movs
pop
daa
dec
and
fidiv
jns
(bad)
sbb
dec
push
jle
pop
cmps
out
(bad)
stos
xchg
mov
ss
sub
jo
dec
mov
scas
imul
adc
inc
repz
cmp
inc
cdq
xchg
aam
push
(bad)
nop
shl
aas
adc
sub
fs
sub
pop
jp
jl
hlt
mov
das
dec
jp
sub
jb
adc
mov
nop
jne
popa
scas
adc
test
jg
mov
fcom
xor
add
adc
xchg
mov
cmp
out
jmp
jns
jb
int3
aas
mov
pop
test
xor
stos
sti
aam
pop
or
iret
cmp
fcmovnb
mov
ins
mov
je
int3
inc
cmps
dec
push
push
pop
movs
sub
cwde
sbb
mov
fs
dec
dec
jns
int3
pop
clc
xchg
ret
imul
pop
sti
lods
cmp
scas
jb
dec
sub
jecxz
inc
bound
pop
adc
aam
mov
pushf
repz
movs
lahf
ret
aaa
sub
adc
xchg
inc
fiadd
jno
cdq
lock
ds
jnp
push
pushf
test
sahf
bound
neg
add
enter
mov
and
(bad)
aaa
sbb
gs
cli
pop
push
jg
call
pop
or
dec
xchg
push
jg
loopne
mov
(bad)
fsubr
lock
pop
mul
cmp
jne
sub
cli
xchg
neg
fcom
pop
inc
sti
outs
enter
fcmovne
mov
adc
and
dec
dec
jl
cmp
test
ret
and
mov
cld
mov
cmp
pop
in
inc
mov
lods
hlt
nop
and
rcl
mov
mov
push
loop
sbb
movs
shl
push
xchg
xor
std
loope
sub
ucomiss
das
or
imul
push
xor
repz
xor
movs
mov
in
out
and
xor
inc
loope
scas
mov
pop
add
jmp
jb
xchg
dec
in
inc
je
mul
dec
mov
cwde
ins
lods
test
sub
shl
xchg
jns
aad
pop
imul
fldenv
xor
adc
pop
cmp
movs
idiv
jmp
pop
push
es
repz
pop
jo
adc
pusha
and
adc
movs
pushf
test
mov
jp
loop
(bad)
push
retf
es
xchg
cmp
stc
sbb
xchg
outs
lds
aas
xor
out
fdivp
loop
jmp
mov
jmp
outs
push
stos
ret
or
sub
fld
fsubr
cli
lock
or
mov
add
or
cmps
jmp
mov
fisub
jl
in
scas
stos
scas
dec
gs
sar
mov
xchg
loope
into
div
out
push
pop
fisttp
sbb
cmp
cmps
sbb
mov
cwde
dec
jg
aad
xchg
xchg
cmp
aas
jg
jecxz
imul
inc
sub
xchg
sub
cli
retf
mov
dec
inc
out
xchg
test
xor
ds
sahf
sub
lock
jle
shl
mov
push
pusha
imul
aaa
mov
scas
daa
and
jl
shl
inc
adc
bound
mov
(bad)
int
nop
test
adc
pop
in
movs
rcr
test
call
or
xor
push
jbe
xor
(bad)
loope
ret
sbb
mov
js
(bad)
fucom
lds
lahf
call
cli
cdq
sub
out
fidivr
dec
mov
pop
sub
or
icebp
leave
enter
jle
sub
push
xchg
dec
jl
ins
std
loope
dec
outs
bound
xlat
test
mov
cdq
jno
data16
pop
pop
mov
sub
fld
das
in
jmp
push
mov
or
add
adc
sub
addr16
dec
stos
mov
mov
adc
cmps
xchg
mov
cmp
or
sbb
lds
lock
movs
popa
jmp
sub
mov
sbb
fwait
adc
out
and
push
mov
pop
mov
inc
mov
sub
shl
retf
mov
cmp
jmp
fnstsw
adc
jge
sbb
mov
repnz
iret
rcl
jb
aas
sbb
cli
cmp
mov
push
imul
sbb
adc
in
push
xor
mov
or
jge
pop
jmp
dec
or
add
push
scas
movs
cmps
inc
cmp
imul
mov
push
mov
test
push
call
cwde
mov
xor
popa
aas
or
pop
scas
nop
or
jno
add
push
fsubr
stos
cmps
adc
sub
bound
cmp
inc
and
xor
clc
pushf
inc
fst
mov
xor
shl
fiadd
xchg
icebp
dec
jge
sub
pop
test
jns
stc
xchg
pop
lahf
mov
and
add
xor
xchg
data16
stos
jle
push
enter
aad
mov
nop
pop
push
cmp
test
or
push
lods
sbb
push
sbb
or
pop
cmp
mov
adc
sub
popf
out
rol
imul
out
mov
(bad)
mov
mov
test
call
jnp
aaa
add
xchg
mov
or
aaa
push
les
nop
clc
mov
imul
sub
mov
sub
xlat
xchg
mov
push
lea
push
mov
mov
sbb
dec
out
dec
pop
into
minps
or
ret
dec
mov
lahf
mov
out
lock
mov
outs
cmc
jle
mov
pop
cld
xchg
cmp
aas
dec
sahf
pop
cmp
ins
dec
ficom
popa
ins
scas
hlt
ds
sub
shrd
adc
xchg
jp
lods
mov
dec
or
test
lea
das
dec
imul
jb
xor
ins
pop
sub
daa
rcr
jno
stc
fdiv
adc
mov
ffree
xor
inc
sub
in
xor
int
retf
cmp
(bad)
cmps
jo
dec
push
fst
(bad)
pop
ss
sub
lahf
xchg
mov
loopne
in
lods
enter
cmps
mov
in
aam
adc
je
ds
dec
pop
dec
pop
data16
test
jb
adc
push
ss
sbb
sbb
popf
and
pop
mov
fisubr
push
adc
cwde
ja
mov
aas
adc
add
jmp
fwait
xchg
scas
xchg
ja
mov
out
jecxz
iret
push
jmp
pop
dec
jns
rcr
sbb
pop
dec
sahf
out
jmp
pop
movs
pop
stos
fwait
inc
sbb
add
push
mov
push
jbe
in
push
std
neg
lods
and
cmp
cmp
cmp
pop
xor
adc
add
adc
mov
mov
dec
add
out
imul
test
mov
mov
imul
and
pushf
xchg
add
inc
movs
ret
cmp
fs
cmp
push
jne
mov
cmp
sbb
mov
outs
sub
daa
jp
xor
jns
adc
xchg
mov
int3
gs
jp
std
sbb
test
cmp
sbb
enter
adc
pop
xor
stos
call
push
ja
aaa
les
and
ror
sub
sub
sbb
add
mov
aam
mov
sub
push
psrad
daa
pop
lock
and
or
jp
sahf
push
sub
cmps
fldcw
into
retf
retf
sbb
imul
pop
xlat
pop
jecxz
sub
mov
es
ror
loopne
cmp
mov
shl
mov
inc
add
sar
mov
cld
icebp
leave
lea
push
mov
cmps
sub
scas
mov
inc
and
pop
cmc
ja
inc
adc
sbb
jg
jp
mov
loope
add
daa
add
sbb
pop
push
ds
jo
cmp
fdivr
jmp
pusha
fwait
mov
nop
mov
mov
in
test
mov
cmp
xor
stos
jns
push
(bad)
sbb
jl
or
mov
arpl
mov
aad
in
push
cs
fdiv
inc
xchg
mov
or
push
js
lods
and
mov
mov
push
xchg
ds
xchg
adc
pop
cli
push
xor
push
loope
add
aad
xlat
loopne
lahf
int3
shl
mov
aaa
mov
sti
aam
retf
mov
sub
dec
xchg
je
pop
sbb
movs
pop
clc
dec
adc
xchg
out
cdq
mov
imul
mov
mov
jmp
sar
rcr
mov
ins
dec
cdq
test
jl
mov
popf
jns
pop
stos
pop
inc
mov
imul
shl
pop
cmp
std
js
repz
movs
loopne
push
mov
adc
sti
mov
shl
cmp
aas
sahf
add
mov
push
adc
xchg
and
out
pushf
pop
mov
xor
push
jbe
mov
push
sub
xor
mov
or
sbb
clc
xor
lods
cdq
inc
or
ret
add
fs
jmp
sbb
stc
arpl
add
test
lods
gs
add
and
test
int
pushf
in
adc
and
sbb
std
mov
aas
mov
cmp
dec
or
ja
popa
mov
sub
xchg
fst
test
inc
jae
mov
mov
adc
cmp
adc
dec
ins
jb
inc
(bad)
repz
scas
push
in
sub
mov
lods
push
sbb
ja
inc
push
pop
scas
cs
in
xor
shr
sahf
add
xor
jo
loope
push
mov
mov
cmp
repz
dec
cld
push
loopne
jg
stc
out
jg
stc
out
sbb
lock
sub
inc
cmc
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ss
rcr
sar
dec
ja
xor
dec
mov
jmp
cwde
cwde
jmp
out
dec
dec
aaa
sti
repz
ja
add
clc
mov
jmp
sub
inc
vpsubb
sti
xchg
in
cmp
pushf
push
mov
ins
fucom
jle
lds
movlps
mov
mov
push
push
inc
cmp
or
sub
xor
xchg
in
mov
int
cmp
xor
pop
add
sahf
fmul
mov
fmul
or
mov
(bad)
pop
or
mov
in
je
dec
cwde
xchg
mov
pop
or
fsubr
aas
jo
cdq
xor
ret
cmp
imul
sbb
push
mov
add
int
sar
loopne
das
sbb
push
add
sub
jne
pushf
jae
in
stos
adc
xchg
sub
jae
cmp
cli
xor
and
jne
mov
int3
stc
adc
retf
outs
fsincos
mov
or
jle
xchg
(bad)
repz
ins
sub
imul
xchg
sbb
loope
int3
push
push
les
inc
data16
xchg
jo
sbb
pop
sub
movs
sub
push
fwait
ins
or
rcl
push
add
jns
mov
mov
sub
ret
les
xor
fmul
int
test
cwde
jecxz
sbb
mov
mov
rol
xor
mov
js
test
xchg
aas
aas
les
cmp
inc
or
xlat
mov
(bad)
inc
jne
add
mov
jns
ret
cwde
sub
mov
das
ret
fsubr
shr
in
or
jmp
add
fiadd
imul
in
push
stos
and
fild
clc
inc
xchg
test
cmp
mov
xor
sub
rcr
inc
xchg
movs
out
xchg
add
imul
jb
lods
shl
cmp
mov
ja
or
or
jns
in
mov
jg
btc
pop
sahf
lea
and
jg
mov
ja
sub
sub
jmp
aad
mov
xor
popf
jne
push
sub
loope
pushf
xor
int3
mov
retf
sar
push
xchg
sbb
pop
enter
sub
push
push
scas
test
adc
inc
push
mov
mov
mov
pop
mov
and
and
je
push
ds
sub
jns
jmp
jae
pop
dec
pop
pop
int
and
ja
std
inc
mov
fisub
bound
jge
or
sub
cmps
lea
pop
cmp
icebp
mov
lods
jbe
push
mov
push
rcl
push
pop
sti
xchg
inc
push
out
pop
test
stos
dec
jb
push
std
inc
or
lock
sbb
shl
aaa
addr16
mov
test
jae
outs
cmps
addr16
and
adc
js
popa
and
dec
lahf
mov
retf
or
inc
ja
in
push
mov
fwait
mov
out
cld
dec
and
add
dec
test
jno
js
mov
xchg
mov
addps
outs
push
xchg
sbb
mov
xchg
xchg
shr
mov
mov
cdq
cmp
add
mov
xchg
in
pop
jmp
xchg
add
(bad)
lahf
cwde
je
iret
mov
popf
mov
loope
scas
adc
mov
outs
jne
imul
sub
and
sbb
and
aaa
xlat
add
pop
pop
dec
lar
cmps
icebp
push
push
cmp
loope
pop
and
cs
test
xor
loopne
into
sub
dec
dec
shr
cmc
xchg
dec
sub
adc
adc
dec
push
sub
jg
push
add
inc
lock
inc
aam
push
call
push
pop
je
retf
lock
dec
and
je
and
and
push
push
and
int3
inc
lods
mov
xchg
add
jbe
ret
out
cmp
fimul
xchg
(bad)
jb
mov
sbb
sub
jecxz
aad
lds
stos
dec
xchg
call
or
js
add
adc
lds
out
rol
stos
or
iret
test
add
xchg
mov
(bad)
or
popa
popa
retf
jl
xchg
xor
add
cmp
repnz
sub
add
inc
sub
xchg
jp
jg
sbb
fisub
or
xchg
fnstsw
sbb
stc
imul
in
fsubrp
and
push
dec
xor
or
pop
mov
repnz
ds
mov
repnz
jecxz
mov
outs
or
arpl
(bad)
stos
lods
scas
repz
les
int
fdiv
jmp
mov
ins
mov
adc
xchg
pop
jno
xchg
pushf
std
pushf
mov
mov
cmps
imul
push
cmp
xchg
ret
pop
cdq
dec
mov
jns
retf
or
mov
sahf
fadd
sub
dec
xor
mov
sub
lods
stc
(bad)
mov
cmp
inc
push
mov
fdiv
xor
imul
rol
pop
jmp
jp
retf
push
add
mov
(bad)
mov
aam
jl
push
jne
xchg
dec
and
pushf
inc
and
xchg
pop
or
jno
inc
daa
mov
rcr
jo
retf
scas
cdq
scas
and
popf
push
scas
loopne
pusha
jmp
or
ds
mov
lock
std
push
cmps
xor
mov
pop
iret
sub
fldcw
mov
push
push
stos
test
sub
inc
mov
cwde
pop
ret
sahf
dec
pusha
iret
mov
push
mov
aam
leave
pop
xchg
cmp
cmp
or
add
test
nop
aam
sbb
data16
jmp
add
sub
fidiv
and
jg
(bad)
and
js
jmp
push
fimul
sbb
xor
sub
scas
icebp
enter
sub
cmp
mov
xchg
jnp
leave
mov
loop
stos
retf
loop
push
stos
fwait
add
dec
cmps
mov
pop
jmp
ror
sbb
mov
lahf
add
mov
inc
xchg
pop
addr16
cwde
add
mov
fstp
inc
js
(bad)
and
int
jmp
mov
inc
stos
mov
cmps
je
mov
xchg
sbb
mov
es
mov
sbb
scas
lods
aad
pop
in
mov
out
dec
mov
out
dec
fistp
cwde
ins
test
ss
fimul
dec
jns
push
(bad)
sbb
retf
xchg
bound
clc
dec
lods
out
pop
jmp
mov
aas
cli
movs
vcvttps2dq
and
lds
mov
xor
(bad)
jecxz
mov
out
jo
les
sahf
cmps
inc
pop
nop
or
fwait
sbb
mov
pop
inc
inc
icebp
pop
(bad)
mov
sbb
ret
dec
xchg
sbb
push
push
test
cmp
sub
popf
or
rcr
int3
leave
cld
imul
outs
lds
and
clc
adc
lods
pop
int
ret
sub
fdiv
mov
int
inc
push
sbb
mov
and
jb
sbb
and
(bad)
lahf
shl
adc
jns
mov
push
aam
mov
ins
pop
xchg
ret
out
movs
test
call
out
jbe
push
pop
ss
pop
jmp
add
sbb
mov
mov
movs
in
sahf
leave
sub
cmp
add
cmp
mov
int
iret
adc
cwde
pop
cli
push
mov
lea
aas
pop
jl
jp
adc
push
push
jns
mov
mov
mov
jne
out
and
jb
retf
out
imul
test
sub
cli
adc
sbb
test
xchg
push
adc
adc
cmps
xchg
mov
sbb
and
pop
push
test
ins
jmp
mov
fistp
mov
out
clc
call
aad
mov
mov
sti
cmp
and
dec
lock
sbb
push
aad
mov
jns
cmc
push
fistp
jae
int
cdq
sbb
cmc
out
pop
out
fstp
mov
retf
mov
sub
inc
pop
mov
stos
emms
sti
sbb
xor
inc
jle
(bad)
stos
rol
(bad)
cwde
inc
hlt
mov
pop
jp
ror
mov
mov
and
mov
mov
and
sbb
xchg
cmc
mov
mov
je
mov
test
xchg
sbb
call
dec
mov
sub
popf
call
push
(bad)
das
popa
sar
(bad)
jge
jno
mov
arpl
in
or
ja
lahf
in
cwde
jecxz
add
aam
lods
aas
push
jae
or
outs
push
addr16
mov
cmp
scas
je
mov
dec
mov
lods
add
pop
xlat
xor
repnz
fdiv
sti
push
push
lock
inc
fist
push
mov
loope
call
sahf
inc
fdivr
and
test
mov
repnz
mov
outs
sub
sbb
into
adc
inc
mov
jp
adc
mov
int
(bad)
repnz
jae
es
enter
scas
xchg
or
sub
adc
call
sub
fwait
and
inc
test
mov
outs
sbb
push
and
inc
scas
retf
adc
mov
fbstp
cld
pop
mov
rcr
and
aas
(bad)
and
add
int3
enter
jb
ins
mov
jl
or
call
inc
pop
call
pop
sub
pop
into
push
mov
pop
leave
sti
dec
adc
loopne
push
shl
adc
cmp
fisub
ss
test
mov
jp
add
dec
in
adc
cdq
scas
(bad)
mov
jmp
popa
sub
icebp
mov
jns
sub
outs
lds
or
dec
dec
pop
ret
cmps
mov
cld
xchg
push
out
add
in
rcl
enter
scas
aas
push
in
dec
(bad)
xor
xor
inc
out
xor
inc
aaa
aam
(bad)
icebp
push
outs
xor
adc
ret
hlt
int3
sbb
jbe
mov
test
xchg
jnp
push
js
or
iret
jle
mov
repz
mov
sbb
sbb
sahf
push
cmc
jecxz
in
clc
push
leave
iret
test
mov
sbb
jmp
mov
adc
ja
cli
in
fs
cmp
cld
int
mov
leave
adc
out
inc
dec
push
int3
aam
leave
mov
pop
jne
pop
lods
stos
js
and
pop
mov
cdq
arpl
idiv
dec
aam
mov
out
inc
test
sub
sbb
loopne
mov
cmp
lods
jmp
mov
pop
cmp
mov
sub
cmp
add
gs
mov
or
std
lea
stc
and
jo
mov
mov
push
loop
add
(bad)
lock
cmps
push
fxch
sahf
sqrtps
dec
jmp
lahf
add
fmulp
dec
ins
inc
movs
cli
retf
dec
ret
(bad)
retf
enter
sbb
dec
mov
jl
pusha
es
cmps
pop
(bad)
data16
(bad)
xchg
scas
jno
xchg
push
popf
retf
mov
pop
mov
(bad)
in
cmp
pop
cmp
aad
mov
mov
push
mov
push
jnp
(bad)
adc
outs
pop
movs
test
fcom
jge
enter
jmp
fcomp
cld
xchg
mov
xchg
push
jmp
test
retf
xchg
push
movs
leave
test
push
sbb
dec
ret
outs
mov
enter
retf
adc
and
test
sbb
jbe
lds
(bad)
mov
xchg
cmp
ja
mov
or
arpl
mov
jnp
in
(bad)
and
pop
and
sub
cmp
lods
pop
fmul
mov
popf
or
add
std
int
pop
ret
int3
sahf
jbe
mov
stos
mov
sub
xchg
mov
xor
ja
addr16
sub
mov
xlat
inc
or
jle
ror
div
jg
int3
jbe
int3
push
or
shl
inc
xor
call
xor
and
imul
inc
and
mov
imul
lds
jb
pushf
test
cmps
jecxz
dec
movs
imul
inc
inc
add
xor
jmp
les
js
imul
leave
(bad)
mov
xor
je
lock
cmp
inc
mov
arpl
pushf
mov
out
or
neg
adc
jmp
repz
test
jg
mov
push
js
call
sar
dec
and
pop
fnstsw
lock
xor
jmp
stos
push
fadd
push
bound
fxch
jmp
add
jbe
xor
xchg
fld
cdq
enter
mov
jno
adc
ss
shl
add
jae
outs
push
xchg
xchg
scas
lahf
sti
leave
pop
pusha
jecxz
jno
cmp
dec
daa
cwde
dec
xchg
imul
popf
push
add
cmp
or
push
jecxz
cmp
test
les
mov
data16
sti
shl
repz
test
nop
lea
ficom
popa
jb
fwait
push
or
add
dec
sub
pop
ds
push
stos
sbb
and
push
and
inc
xchg
retf
lea
mov
leave
fs
mov
mov
pop
int
ds
jb
imul
mov
movs
test
test
inc
shr
mov
fist
pusha
loopne
mov
stos
arpl
add
pop
test
ins
push
adc
test
(bad)
sub
sbb
mov
push
fldcw
das
mov
fs
js
xor
shr
cmp
(bad)
scas
xchg
push
jge
sar
loope
lods
inc
retf
pusha
sahf
sti
mov
daa
repnz
fstp
jbe
stos
punpcklwd
inc
adc
(bad)
jge
das
es
scas
xchg
ins
out
dec
(bad)
mov
adc
test
adc
and
dec
add
(bad)
inc
call
mov
dec
and
shr
scas
mov
jle
in
jnp
jno
lods
sbb
mov
mov
loop
aad
mov
adc
call
(bad)
stc
test
mov
leave
jb
add
cmp
dec
xor
dec
pop
jo
push
fcomp
mov
lock
pop
xor
xchg
add
aad
adc
jo
jne
xor
mov
push
fist
inc
jl
ds
xlat
mov
pop
add
mov
stos
mov
cld
fsub
sub
xchg
push
hlt
xor
jb
jle
in
mov
sbb
sub
stc
inc
das
adc
mov
dec
aas
out
les
xchg
aaa
mov
(bad)
fidiv
inc
fcmovnu
mov
cmps
movs
pop
pop
ret
sbb
sbb
rcpps
add
push
sub
sbb
fcmovu
loope
fwait
scas
sbb
(bad)
and
in
sub
and
(bad)
ja
(bad)
data16
jge
jns
cmp
lock
pop
neg
fwait
push
das
mov
test
mov
sub
ror
mov
nop
push
retf
dec
fsubr
jmp
or
pop
mov
dec
xor
adc
jle
hlt
adc
jnp
icebp
push
dec
repnz
ret
fnstcw
ja
jmp
push
sbb
mov
dec
xlat
push
nop
mov
mov
addr16
std
or
inc
push
lods
lock
jmp
(bad)
adc
push
push
ds
out
mov
cs
jo
push
pushw
fnsave
outs
enter
push
mov
(bad)
fnstcw
cs
push
imul
mov
movs
cmps
xchg
adc
jge
adc
test
inc
sahf
mov
and
pop
test
jmp
jnp
cmp
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
sbb
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
scas
cwde
call
call
hlt
mov
cmp
cmps
push
jecxz
jno
inc
jo
loop
je
dec
out
jns
iret
ds
loope
add
arpl
xor
imul
neg
dec
test
cmp
jne
pop
jl
aad
and
loop
xor
pop
xor
ins
fidivr
js
cmp
mov
and
dec
test
add
(bad)
mov
cdq
dec
les
test
sbb
or
mov
push
pop
(bad)
pop
retf
cli
pop
mov
push
mov
cmp
push
in
jmp
stc
in
es
mov
les
ret
arpl
retf
sub
or
add
adc
xchg
add
pop
popf
scas
ins
xchg
fisubr
js
dec
call
mov
mov
and
adc
int
dec
mov
jmp
sbb
mov
add
xchg
sub
imul
pop
jge
(bad)
pop
push
jnp
(bad)
outs
adc
lahf
mov
mov
frstor
adc
dec
xchg
dec
retf
lods
adc
adc
stos
stos
add
jae
and
in
cmp
push
and
call
xchg
imul
jle
in
cmc
rcr
and
xlat
jge
sbb
and
and
call
jle
pop
cwde
jmp
xor
retf
fcom
adc
fisttp
clc
cld
push
and
inc
xchg
ret
fiadd
imul
(bad)
jmp
add
xchg
mov
bound
sbb
daa
and
mov
pop
or
xor
mov
adc
das
mov
jb
dec
dec
mov
jnp
out
or
ret
int3
loop
push
hlt
pop
pop
rcr
mov
mov
scas
add
pop
or
cwde
push
test
sbb
(bad)
addr16
outs
ret
cmp
ss
dec
jae
cmp
test
cmps
xchg
repz
mov
xchg
iret
neg
loopne
jmp
adc
pop
mov
jne
mov
pop
sbb
fistp
std
mov
fistp
xor
sub
cmp
dec
jge
mov
int3
mov
neg
cmp
inc
xchg
xchg
jne
push
push
add
cs
push
in
(bad)
xchg
ds
jge
pop
mov
xchg
lods
pop
cmp
adc
pop
sahf
mov
ja
dec
inc
xchg
ins
mov
hlt
les
add
loope
add
icebp
js
enter
std
pop
push
(bad)
mov
cmps
hlt
dec
adc
mov
lods
gs
fsub
in
mov
stos
or
retf
test
push
mov
and
call
mov
mov
idiv
hlt
pop
movzx
or
cs
pop
jle
pop
sahf
adc
das
cmp
jl
stos
enter
ret
andps
push
(bad)
iret
dec
cmps
push
xor
jmp
inc
leave
add
icebp
cmp
ror
imul
std
lods
xchg
jae
dec
fwait
test
mov
sbb
lea
test
cmc
adc
rol
rcr
in
loopne
loop
lds
mov
adc
inc
xchg
push
stos
in
loopne
pop
add
mov
outs
loop
icebp
jg
inc
pop
call
fisub
int3
push
add
es
pop
mov
daa
out
dec
test
jl
scas
cli
in
call
test
pop
je
dec
cmps
mov
sbb
mov
sbb
cmp
inc
icebp
xchg
sti
outs
mov
retf
dec
es
(bad)
jb
and
xchg
sbb
out
stc
imul
dec
jp
mov
xor
aad
imul
imul
sub
mov
mov
cli
add
jmp
addr16
mov
fnstenv
cs
lahf
push
cld
shl
sbb
sbb
loop
sub
outs
pop
shl
sub
in
fs
jnp
leave
mov
pusha
jmp
jbe
inc
cmp
iret
fld
mov
sub
loopne
xlat
scas
das
or
cld
daa
sub
jmp
lea
int3
fnstcw
mov
(bad)
out
mov
ret
push
(bad)
fwait
dec
pop
js
loop
test
jne
fsubr
sub
jmp
sub
and
fcom
xor
mov
leave
mov
sbb
in
mov
sahf
cs
inc
mov
(bad)
adc
js
scas
stos
mov
jp
adc
xor
pop
fdiv
xchg
popf
stc
aam
jne
not
xor
dec
add
xor
pop
lock
jmp
shr
cli
xchg
mul
inc
(bad)
aas
xor
leave
out
ja
jmp
sub
mov
or
outs
ins
push
and
mov
dec
ror
shl
pop
int3
ins
mov
cmps
cs
mov
mov
out
xor
adc
imul
dec
shl
loope
xor
push
repnz
inc
jbe
cdq
retf
mov
adc
out
add
push
mov
cmps
adc
sti
lods
(bad)
data16
push
sbb
(bad)
ret
jae
cmp
in
sbb
pop
imul
or
iret
mov
pop
jge
into
sbb
dec
outs
cmp
mov
xor
aam
lea
lods
imul
aam
ret
hlt
cmp
mov
adc
retf
cs
push
mov
mov
mov
and
cmps
xchg
mov
fsubr
aad
inc
jecxz
mov
mov
sub
cmp
lock
cwde
retf
and
lods
dec
and
ficomp
fst
cmp
es
push
jno
jbe
cmp
xchg
sbb
pop
in
add
int3
aaa
pop
bound
inc
adc
ins
std
adc
dec
push
sbb
dec
retf
test
in
push
retf
std
rcl
add
sbb
xor
icebp
(bad)
push
sub
daa
out
adc
or
rcr
out
fwait
aas
addr16
push
mov
pop
cdq
sub
add
fisubr
fsub
mov
ror
dec
and
idiv
out
ins
loope
sbb
xor
outs
stos
dec
nop
jg
cmp
aad
in
aas
stc
in
loopne
rol
xchg
pusha
mov
fadd
mov
xchg
sub
es
dec
imul
push
inc
cmp
rcl
jbe
std
cmps
out
enter
faddp
shr
div
xor
outs
or
xor
jb
jno
inc
mov
(bad)
mov
pop
das
loop
add
jo
add
add
mov
push
pop
dec
leave
ins
dec
and
cmc
push
in
mov
xor
(bad)
adc
sub
mov
in
pop
punpcklbw
cmp
ds
cmp
cdq
std
add
mov
iret
fstp
or
add
mov
std
sub
outs
arpl
xchg
mov
jl
mov
pop
sbb
int3
sub
xchg
push
std
mov
neg
mov
pop
lds
aad
pop
pop
jne
cmp
xchg
sar
imul
push
dec
lods
and
test
add
into
scas
repnz
jg
fistp
xor
out
sahf
ins
imul
cdq
pop
sbb
dec
or
aas
push
cmps
es
adc
ja
repnz
sbb
test
addr16
add
(bad)
addr16
xchg
fcom
arpl
fwait
dec
dec
fs
pop
js
adc
jle
fst
xor
(bad)
pop
sub
in
xchg
sub
add
sub
mov
out
stos
outs
bnd
clc
imul
cmps
fimul
mov
mov
pop
cmp
int3
int
inc
push
sub
xor
stc
shr
xchg
aas
push
retf
ja
mov
xor
les
imul
out
lds
lahf
sar
add
jae
rol
xor
cmps
mov
jno
xchg
mov
mov
inc
das
das
lds
mov
xor
push
cdq
xchg
shl
xor
inc
js
sahf
add
add
cmp
movs
call
jae
cmp
jmp
fisttp
xchg
mov
pop
mov
dec
loop
mov
jmp
dec
push
pop
jge
inc
data16
shr
mov
pop
ja
fstp
push
or
gs
jns
div
jp
sar
push
(bad)
cmp
rcr
dec
ja
push
mov
rcr
rep
(bad)
cmps
loop
sbb
sbb
fistp
sbb
xchg
mov
ins
mov
push
hlt
add
add
sub
je
jg
hlt
stos
mov
cmc
int
or
jl
aam
push
out
in
std
je
mov
mov
imul
ret
jne
or
adc
icebp
ret
mov
and
aas
push
pop
(bad)
and
xor
or
cmp
sub
scas
mov
popa
ror
xchg
inc
and
(bad)
adc
mov
shr
pop
enter
dec
rol
pushf
inc
or
inc
into
xor
pop
(bad)
push
or
jge
ret
(bad)
icebp
jae
mov
stos
dec
(bad)
or
xchg
sti
loop
outs
sub
dec
(bad)
jno
fcompp
in
cli
jge
std
mov
inc
sub
scas
push
sbb
(bad)
push
sti
jae
in
ret
retf
mov
arpl
inc
repz
adc
jo
(bad)
retf
cmc
fbld
xlat
and
jne
fidivr
xchg
mov
add
(bad)
cmp
retf
scas
(bad)
and
std
seta
jnp
or
les
mov
aad
mov
mov
clc
inc
xchg
pop
inc
out
xchg
mov
dec
cmps
ins
or
pop
jmp
aas
(bad)
mov
adc
mov
jecxz
sub
data16
outs
idiv
icebp
push
fdiv
mov
push
cmp
and
inc
cmp
stos
mov
sub
inc
retf
cmps
and
in
xchg
gs
mov
es
jnp
dec
xor
sbb
test
int
jmp
xchg
dec
xor
pop
pusha
fdiv
mov
inc
pop
into
rol
(bad)
push
jl
pop
fld
jno
int
leave
push
mov
in
movs
aad
pop
sub
imul
adc
stos
push
(bad)
sub
jecxz
adc
ja
push
aam
push
rcl
push
cli
mov
sbb
jecxz
test
sar
jmp
ss
sub
movs
or
stos
into
dec
out
sub
add
mov
pop
out
daa
repz
push
lea
sbb
mov
nop
jne
lahf
push
push
pop
xchg
add
loopne
sub
rep
xor
pop
mov
mov
clc
jo
test
adc
mov
push
cli
lock
adc
inc
js
inc
push
cmc
pop
dec
xor
push
xchg
xchg
int3
mov
cmp
(bad)
xlat
in
bound
pusha
dec
sub
lahf
jne
jl
sub
jle
xlat
(bad)
sub
in
mov
std
add
sar
out
mov
add
mov
retf
fcomp
add
cdq
gs
repnz
pushf
lods
cmp
pop
xchg
sub
xchg
jbe
and
and
pop
jnp
fcomp
rcl
pop
mov
ss
shr
and
ja
out
lds
inc
test
sbb
retf
adc
xchg
pop
cmp
(bad)
lock
push
cdq
mov
or
add
sub
push
sub
xchg
inc
adc
xchg
dec
dec
xchg
jb
or
mov
neg
push
or
inc
jbe
sbb
cmp
clc
adc
int
std
dec
adc
push
add
in
test
jmp
aam
daa
aaa
dec
into
outs
mov
stos
adc
stos
cwde
aam
inc
adc
xor
jecxz
test
xchg
push
add
sbb
pop
mov
mov
test
lds
inc
and
mov
jmp
leave
mov
stos
jle
fnstcw
push
int3
sub
or
adc
pushf
cmp
pusha
test
test
stos
mov
bound
mov
push
and
xadd
inc
add
jl
cmp
(bad)
retf
(bad)
stos
mov
mov
xchg
rcl
jge
mov
lock
mov
(bad)
push
dec
jnp
fwait
je
dec
adc
inc
fcmovnbe
xchg
test
(bad)
mov
into
pop
faddp
loopne
adc
mov
mov
sahf
inc
mov
pop
ror
cmps
in
popa
les
bound
jns
daa
sar
ror
sbb
outs
sbb
xchg
add
add
xchg
add
test
call
outs
aaa
fiadd
sub
cmps
neg
mov
cdq
sub
std
fs
clc
das
fiadd
mov
or
adc
mov
(bad)
push
(bad)
shl
imul
hlt
pop
sar
aas
push
in
mov
mov
xchg
rcr
jle
daa
aad
dec
adc
loopne
cmp
dec
or
fidivr
add
mov
imul
xor
cmp
in
call
inc
test
into
or
xchg
(bad)
and
xor
mov
(bad)
xchg
push
(bad)
sbb
or
cmc
inc
xor
pop
mov
out
int3
(bad)
les
push
lock
mov
(bad)
(bad)
ficom
jl
push
call
push
push
adc
(bad)
push
sbb
push
loop
adc
cmp
in
mov
cwde
push
repz
das
inc
in
outs
int
loope
dec
jp
pop
sti
leave
mov
add
xor
jno
jo
xchg
jns
out
sub
push
popf
mov
(bad)
adc
xchg
mov
and
cdq
push
sbb
xor
mov
out
aam
xor
adc
dec
(bad)
xchg
mov
aaa
mov
pop
adc
cwde
into
sbb
cs
hlt
mov
daa
mov
cwde
cli
inc
ins
jb
mov
sahf
stos
pop
xchg
dec
movs
(bad)
test
push
in
or
(bad)
jle
push
ins
fyl2xp1
mov
mov
in
xor
cs
je
add
es
pop
iret
xchg
outs
dec
push
repnz
jnp
out
mov
push
bound
sbb
int3
pop
push
xchg
in
xchg
add
jne
lds
xchg
mov
mov
bound
pop
jb
lea
lds
call
cmc
fadd
in
jl
scas
jmp
or
cmp
loope
cmp
dec
out
mov
test
lahf
ret
xlat
sub
mov
and
ins
ret
mov
or
inc
and
mov
pop
in
dec
cli
outs
cli
(bad)
mov
mov
adc
cld
xchg
pop
mov
jnp
push
jmp
in
out
push
cwde
bound
fwait
repz
out
(bad)
xchg
scas
jns
inc
pop
cmp
inc
push
adc
or
and
jno
lock
adc
shr
mov
in
scas
xchg
jae
leave
cmp
fnsave
dec
in
cdq
enter
pop
push
mov
shr
pop
xchg
dec
mov
add
call
dec
push
push
and
fstp
leave
popa
mov
xor
clc
sbb
outs
mov
dec
or
mov
and
call
pop
int3
movs
fcomp
pop
mov
mov
sub
fst
mov
mov
sahf
repz
or
xor
mov
push
mov
jmp
pop
dec
cld
ror
in
ror
dec
(bad)
mov
mov
add
push
pop
push
loop
mov
scas
dec
jl
ret
lods
pop
aas
jns
sahf
nop
fsub
popa
dec
jbe
xchg
lds
(bad)
cmp
aad
mov
sub
dec
aam
cmp
stc
mov
sub
sbb
sub
mov
sahf
jle
sahf
out
push
mov
popa
sti
ja
fcmovb
push
sbb
popf
ins
out
mov
sub
movs
mov
je
in
add
cwde
outs
iret
and
(bad)
push
dec
movs
push
push
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
or
repz
fs
jecxz
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
aam
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
xlat
add
and
rcl
xchg
xchg
sbb
sbb
test
inc
ja
test
xor
and
mov
ja
je
add
sbb
sbb
aas
loop
mov
add
and
sub
popa
cmps
pop
sar
jmp
cmp
stos
cmp
in
iret
dec
retf
lods
xchg
and
jp
leave
out
push
ins
and
shl
repz
sbb
cwde
pop
into
sti
into
loope
pusha
inc
pop
cmps
sbb
arpl
sub
pop
or
sbb
mov
imul
rcr
push
sti
in
and
gs
movs
sbb
(bad)
bnd
sub
xchg
fwait
out
popf
mov
mov
mov
imul
ins
pop
adc
dec
dec
add
stc
loopne
minps
aaa
test
cmps
and
js
lahf
fwait
xchg
sub
jl
adc
cld
jne
fs
js
pop
aaa
jo
push
iret
std
jbe
push
test
jecxz
fs
add
loopne
sahf
pop
jo
xchg
mov
pop
sahf
pop
inc
mov
mov
and
dec
and
mov
mov
mov
jne
rol
lock
jne
and
ds
and
outs
sbb
cwde
(bad)
or
rol
jno
cmp
movs
mov
xor
(bad)
and
inc
jl
add
stos
iret
sti
std
test
leave
xchg
(bad)
mov
add
mov
or
in
mov
sahf
js
clc
sahf
in
xor
mov
out
mov
(bad)
leave
in
push
jno
xor
xlat
je
pop
outs
pop
(bad)
cmp
xchg
dec
xchg
lds
xor
bound
(bad)
pop
sbb
gs
xchg
sti
movs
inc
push
ror
pop
add
outs
sbb
xor
pop
pop
jno
rcr
mov
in
call
mov
mov
das
add
jecxz
hlt
mov
test
imul
inc
xchg
xchg
out
mov
fild
or
push
pop
test
add
fyl2xp1
ins
fsubr
xchg
movs
pop
clc
ins
aas
je
call
aas
inc
out
call
fisub
xor
mov
push
xchg
cmp
pop
sbb
test
sub
sar
fs
out
xchg
sub
(bad)
jnp
jno
hlt
in
movs
adc
sub
add
xor
mov
add
push
xchg
repz
mov
imul
in
jecxz
sub
xchg
fisub
faddp
jnp
inc
pop
mov
or
mov
mov
pop
jecxz
sub
outs
ret
inc
nop
xchg
addr16
or
mov
and
loop
jnp
cli
sbb
test
inc
jbe
cmc
mov
daa
hlt
and
(bad)
and
sub
out
jecxz
in
jmp
inc
push
mov
stos
jg
xor
(bad)
aas
pusha
aam
jg
retf
sub
repz
jmp
retf
rcr
lods
fistp
dec
mov
xchg
push
scas
dec
pop
jle
jmp
data16
es
xor
jnp
sub
pusha
clc
test
loopne
pop
cmc
pop
xchg
ss
sub
div
dec
push
push
cmp
aad
adc
pushf
cli
nop
mov
fs
dec
cmp
xor
cmps
cmp
imul
jo
lods
dec
bound
sub
xchg
push
ins
jno
adc
sub
mov
out
icebp
leave
sbb
out
imul
mov
imul
mov
loopne
mov
dec
jl
(bad)
adc
push
sub
cwde
scas
into
inc
jmp
cmps
dec
out
mov
loope
fcom
in
or
retf
test
jp
mov
pop
aas
or
mov
jnp
push
add
add
xchg
jns
fidiv
les
and
cmp
rol
popa
add
jge
cld
jmp
dec
stos
and
sahf
mov
pop
popf
js
int
popf
cdq
faddp
sbb
pop
mov
in
mov
dec
pop
scas
jmp
adc
mov
dec
dec
inc
jo
pop
and
int3
cmc
xlat
xchg
clc
pop
xchg
ret
int
das
mov
je
xor
jae
mov
mov
mov
jmp
mov
es
jne
je
mov
xchg
je
mov
mov
mov
jge
jle
inc
outs
push
dec
ret
add
adc
movs
pop
jnp
fmul
or
fsubr
adc
and
pop
push
aaa
out
add
pop
mov
jno
sbb
enter
clc
cmp
call
pop
inc
int
mov
iret
fwait
popa
add
and
xor
dec
addr16
ficomp
fldcw
mov
cmps
xor
ins
ret
push
xor
push
jo
or
add
iret
sbb
xchg
jb
das
ss
jae
sti
out
cmc
mov
mov
push
lods
or
dec
div
mov
sbb
jae
jl
inc
mov
jb
ins
add
adc
nop
in
mov
xor
sub
dec
and
fwait
test
jo
push
imul
push
mov
push
sub
and
inc
cmp
jge
pop
mov
test
jg
and
mov
push
ins
cmp
iret
fbstp
xchg
cmp
mov
inc
shl
push
inc
dec
xor
das
fstp
int
out
js
sub
lds
jb
cmp
mov
retf
ficomp
jp
fild
add
arpl
push
mov
mov
push
cmp
sahf
pop
repnz
ss
push
popa
or
(bad)
call
retf
pop
cmp
mov
fs
sbb
and
jae
dec
dec
jecxz
adc
mov
xchg
daa
hlt
inc
cmp
out
and
aas
sbb
movs
dec
mov
push
test
sbb
iret
xchg
pop
lahf
jge
push
cmp
in
sbb
pusha
pop
into
in
mov
mov
jb
es
call
icebp
push
std
and
inc
jg
stc
mov
or
ret
(bad)
in
mov
repz
dec
cwde
ja
les
imul
jge
jle
push
scas
jbe
cmp
jmp
mov
dec
cmp
pop
and
test
inc
push
retf
pop
test
mov
call
add
inc
adc
aas
pop
push
ror
dec
sbb
inc
mov
and
adc
jbe
ret
iret
xchg
and
xor
popa
out
rcl
mov
jge
xchg
adc
sub
mov
or
call
adc
adc
(bad)
mov
cmp
out
dec
in
pop
cmc
sub
in
aas
ja
aam
jmp
dec
sub
xchg
add
clc
xor
mul
sub
xchg
pop
adc
jge
sub
jecxz
retf
pop
and
(bad)
mov
fimul
jp
jae
(bad)
sbb
sbb
add
cs
mov
dec
mov
pop
fdivr
rol
loope
or
icebp
idiv
mov
mov
out
mov
call
push
pop
add
das
in
or
cli
lahf
push
stc
pop
adc
or
clc
mov
xchg
(bad)
stos
mov
mov
popa
jecxz
dec
add
dec
pop
neg
fxam
dec
outs
mov
out
xor
es
cmp
neg
scas
sahf
add
(bad)
das
jae
push
stos
inc
or
movntq
push
push
call
add
in
jp
fwait
mov
dec
sub
jno
inc
sbb
push
popa
dec
xchg
and
outs
loop
loopne
test
push
mov
lods
gs
test
cmp
sbb
fwait
mov
scas
jge
aam
retf
and
xor
loop
fwait
push
sahf
inc
add
icebp
mov
sbb
cmps
test
cli
pop
jns
lods
daa
pop
push
lds
pop
cmps
adc
pop
jne
inc
add
xor
fistp
rcr
jp
push
xchg
mov
pushf
push
stos
outs
xchg
adc
not
sbb
lods
cmp
mov
mov
in
bound
ja
leave
outs
dec
push
repnz
(bad)
in
xchg
out
retf
in
in
cmp
lahf
pop
jns
xchg
test
jns
aam
repnz
xor
cmp
fmul
push
jge
ror
jg
leave
adc
mov
mov
mov
mov
xchg
fsub
sbb
call
pop
xor
jbe
ins
test
mov
cwde
inc
std
xchg
(bad)
les
cmp
jmp
in
pop
jl
enter
dec
mov
outs
jb
inc
add
mov
sub
mov
jl
ret
jne
pop
adc
push
sub
mov
fnstsw
mov
and
mov
jg
retf
shl
sub
inc
jmp
cmp
mov
fdiv
mov
pop
addr16
cwde
ds
dec
xchg
inc
ret
jb
movs
stos
movs
xor
ror
xchg
cmp
pop
das
mov
mov
sbb
jg
jmp
pextrw
xchg
jmp
sbb
lahf
ja
xchg
in
add
dec
xchg
mov
or
bound
retf
mov
mov
inc
popf
les
in
mov
hlt
rcr
push
jecxz
or
xchg
jne
(bad)
stos
add
pop
or
dec
inc
fcomp
adc
adc
xchg
xchg
fwait
rol
popa
fst
cmp
leave
ret
scas
js
xor
repnz
or
scas
test
adc
push
out
and
cwde
mov
outs
and
nop
xor
add
mov
or
mov
dec
xor
fwait
adc
xor
ins
jns
push
or
mov
ror
fsub
sbb
and
jbe
dec
ins
mov
vpunpckhwd
mov
push
(bad)
adc
mov
shr
jmp
movs
inc
pop
cmp
imul
and
les
ss
mov
dec
inc
jge
or
not
push
push
dec
(bad)
je
(bad)
stos
or
mov
jnp
lock
in
mov
js
cs
data16
arpl
push
pop
mov
xchg
lds
jns
lock
(bad)
in
(bad)
mov
shl
xchg
add
bound
sti
or
mov
(bad)
push
jmp
jl
xor
and
mov
add
lods
push
push
jmp
in
pop
dec
inc
or
pusha
pusha
inc
add
movs
daa
pop
fsubr
mov
adc
cdq
or
je
stc
pop
mov
fldcw
or
adc
stc
push
push
outs
mov
js
cmp
mov
lea
out
mov
adc
inc
imul
lods
jp
nop
adc
cld
fwait
and
stos
sar
lods
mov
ss
mul
aam
dec
push
loope
repnz
cmp
jl
lods
pushf
out
pop
mov
pop
or
aas
neg
xchg
mov
jbe
sahf
push
add
sub
mov
mov
cmp
ret
fisubr
inc
mov
jae
(bad)
mov
adc
cmps
cmp
sub
(bad)
(bad)
das
jmp
adc
lds
jns
test
imul
adc
into
ret
push
out
fmul
pop
sar
sub
sub
movs
mov
inc
in
jmp
fs
inc
sbb
lods
mov
rcl
scas
mov
sbb
sub
retf
or
movs
fcom
hlt
sub
or
xor
jb
cmps
lds
pop
add
mov
xchg
jmp
aam
retf
iret
mov
push
xchg
inc
jmp
jmp
ins
pop
dec
iret
push
lods
pop
dec
scas
mov
mov
xchg
scas
sub
cmp
out
icebp
retf
mov
push
test
cmp
jae
push
fistp
addr16
or
mov
mov
xor
aam
or
cmp
push
add
mov
jle
fs
or
adc
and
aam
jle
push
in
fdivr
or
cmp
push
cmps
and
mov
je
xor
cmc
add
mov
mov
pop
sub
push
ins
std
sbb
and
fild
pop
sbb
mov
out
imul
jmp
inc
lods
cs
movs
pop
jo
sbb
stc
mov
xchg
movs
mov
mov
mov
je
test
cld
sub
sbb
cld
dec
imul
and
mov
shl
add
sub
int3
xchg
dec
mov
pop
xchg
mov
les
xchg
test
mov
jmp
loopne
mov
push
mov
loope
jge
lea
aam
lods
mov
fimul
lock
popf
fisubr
sbb
mov
push
in
add
pop
out
psadbw
or
pop
adc
rol
mov
(bad)
aam
sbb
stc
std
ret
ja
cmp
adc
cdq
stos
mov
clc
pop
pop
or
mov
mov
cmp
stos
mov
test
(bad)
mov
or
or
push
ins
cmp
xor
inc
xor
pop
fild
loopne
cmp
(bad)
lods
imul
ins
xchg
pop
jle
fadd
daa
add
jnp
movs
inc
dec
addr16
xor
cli
ret
mov
rol
mov
cmp
shl
pop
xchg
dec
mov
push
mov
jmp
xor
push
rcl
add
adc
sub
into
repz
cmp
loop
into
sahf
jg
stos
in
fistp
sti
cmc
push
inc
sbb
adc
xchg
xchg
popf
cs
mov
mov
jmp
shr
xchg
adc
nop
jno
jb
add
loope
je
scas
out
sub
add
sub
aaa
jge
out
mov
(bad)
mov
mov
in
retf
adc
pushf
mov
inc
mov
fs
mov
adc
push
test
outs
fidivr
xchg
push
push
cmps
(bad)
ins
push
scas
clc
outs
or
popf
mov
jno
scas
(bad)
jge
cmps
xor
mov
imul
neg
mov
daa
jmp
dec
push
xor
xchg
jnp
pop
push
sbb
mov
ins
mov
nop
ds
ret
outs
pop
in
inc
ins
jnp
jge
cld
push
push
and
js
cmp
xchg
pop
cld
push
xlat
cs
or
push
dec
mov
adc
push
adc
mov
ins
shl
inc
xlat
xchg
jns
out
mov
lods
ins
adc
fwait
into
ja
shr
aaa
repz
push
jmp
adc
adc
out
sahf
inc
das
jmp
in
test
addr16
sub
mov
mov
nop
mov
mov
repz
xor
jmp
xor
jp
push
sbb
dec
ret
popf
add
(bad)
push
(bad)
(bad)
lods
dec
clc
dec
dec
pop
idiv
das
add
sbb
shr
push
xchg
pop
retf
pop
fimul
sub
pusha
inc
mov
dec
or
mov
pop
sbb
icebp
test
aad
pop
jno
push
ret
inc
iret
iret
inc
div
mov
test
daa
pop
jne
clc
stos
call
jl
and
aam
pop
mov
lea
fcomi
aas
mov
iret
or
(bad)
adc
test
cwde
addr16
adc
inc
shr
mov
pop
(bad)
xor
cmp
movs
add
outs
xor
cmp
pushf
jl
xchg
inc
lahf
int3
lds
adc
or
jne
pop
mov
retf
gs
and
push
add
jg
mov
fistp
es
js
out
es
rcl
inc
in
test
outs
nop
xor
xchg
ins
fld
iret
mov
pop
js
jb
push
mov
movs
cmp
or
(bad)
cld
repz
aas
(bad)
cld
mov
xor
in
cwde
addr16
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
out
dec
push
jecxz
out
bound
dec
xlat
je
jmp
cmps
dec
xlat
in
cmps
push
cmps
into
(bad)
les
xchg
mov
repz
jge
les
add
(bad)
ins
mov
pop
mov
test
mov
jecxz
out
test
mov
cmp
jne
retf
adc
sub
push
aad
dec
test
jno
int
dec
in
add
xchg
add
push
push
or
pop
inc
mov
in
or
mov
(bad)
fs
outs
fld
idiv
xor
mov
cmp
cld
sbb
iret
inc
dec
or
ret
imul
fwait
mov
push
je
add
out
test
sbb
imul
cli
rol
jbe
dec
push
aas
mov
xchg
mov
outs
sahf
adc
push
stos
stos
dec
(bad)
cld
test
js
pop
test
jae
pop
push
mov
push
push
add
pop
mov
pop
mov
in
in
pop
add
retf
jbe
xchg
inc
aad
mov
fdivr
in
push
xor
out
jae
and
inc
sti
pop
add
mov
inc
cmps
ror
and
lods
in
mov
mov
pop
xchg
xchg
in
lods
sahf
dec
sub
dec
retf
je
mov
jmpw
and
fldcw
jno
rcr
daa
cmp
xchg
call
pop
in
mov
movs
sbb
iret
cmp
dec
ffree
ins
jp
(bad)
jno
add
push
xor
dec
pop
jmp
inc
cs
push
add
sub
div
imul
and
pushf
int
push
inc
or
pop
mov
or
out
xor
dec
push
(bad)
cmp
daa
mov
fdiv
mov
xor
xlat
xchg
repnz
cs
mov
or
pop
sbb
pop
xchg
arpl
test
push
pop
push
lea
jg
fwait
(bad)
ds
sbb
jle
cld
fdivr
dec
inc
xchg
aam
les
sbb
jo
mov
sbb
sbb
in
out
xchg
(bad)
movd
mov
ss
jecxz
mov
cmp
(bad)
or
inc
add
add
jp
jmp
hlt
mov
jmp
ja
sti
push
ret
jbe
sub
adc
sub
jnp
icebp
xchg
repz
addr16
mov
rcl
xchg
mov
adc
sti
or
mov
sbb
in
push
pop
cmp
js
arpl
jg
data16
fdivr
pop
xchg
arpl
sar
and
nop
jno
xchg
xor
xchg
push
int3
jmp
loopne
sahf
pushf
sbb
pop
dec
mov
inc
outs
movs
scas
cmp
repnz
call
rcr
lds
mov
sbb
xchg
jp
pusha
out
sub
push
dec
jmp
cmps
push
jb
mov
cs
cld
test
cmp
dec
ds
ins
loop
daa
pop
xlat
sar
call
jo
push
sbb
imul
stc
enter
out
xchg
ss
ins
push
jnp
jne
pusha
inc
jmp
int3
pop
cmp
pop
mov
mov
xchg
add
mov
inc
aad
adc
mov
lahf
inc
loope
push
jp
jae
or
inc
cmp
bound
inc
int3
shl
daa
retf
pop
adc
pop
fdivrp
push
jl
adc
std
dec
xor
xchg
dec
push
xor
test
fldenv
test
movs
movs
xchg
pop
cmp
cwde
mov
rol
cld
pop
or
repnz
(bad)
cmc
dec
jns
dec
xchg
push
addr16
xchg
shl
sti
inc
fsubr
cmp
xchg
repz
inc
sbb
pop
jns
and
mov
leave
scas
push
push
adc
std
xor
inc
mov
inc
fs
fsubp
mov
jge
(bad)
in
sbb
test
rcr
jle
xlat
pop
mov
or
pop
sbb
ss
and
xchg
or
pop
jl
(bad)
jle
mov
fmul
pusha
movs
sub
push
xchg
inc
mov
fild
mov
xchg
sbb
cmp
aas
mov
jge
cld
cmps
movs
in
mov
(bad)
cmp
outs
imul
add
sbb
in
push
sub
nop
ret
fcom
inc
out
pop
loopne
js
jo
loope
inc
xchg
push
imul
lods
outs
pusha
mov
jnp
hlt
cmp
pop
aam
and
cmp
fcomi
mov
lods
leave
dec
xchg
ja
loope
sbb
popa
jl
into
clc
data16
(bad)
iret
outs
and
in
cmp
fsubr
sub
mov
xor
ficom
jg
jne
sbb
(bad)
in
add
outs
out
ja
mov
inc
cld
dec
fstp
mov
lock
js
cdq
retf
sti
das
pop
scas
lods
jg
sbb
gs
sti
jne
lahf
sbb
out
sahf
jo
mov
mov
movs
lea
call
jae
(bad)
in
sub
cs
into
xor
adc
not
(bad)
lods
jl
in
rep
fwait
into
inc
ja
gs
mov
jo
xor
xchg
hlt
ss
pop
push
ds
nop
push
cs
shl
int3
movs
sub
popa
xchg
or
mov
lsl
mov
xchg
pop
fcom
cli
out
sbb
pop
(bad)
jge
mov
push
je
in
push
jmp
push
add
xor
push
rcl
inc
push
mov
push
or
jo
xchg
sub
push
nop
enter
das
dec
mov
lock
or
sub
jnp
xor
xchg
retf
mov
add
test
jno
leave
stc
vpinsrw
xchg
retf
dec
push
add
push
jmp
lea
in
das
sti
xlat
push
cmps
cmc
jmp
in
daa
push
movd
aam
movs
(bad)
fisttp
das
fdivr
mov
retf
and
mov
add
(bad)
jne
sar
push
pop
or
les
mov
push
pushf
mov
cmp
inc
aaa
or
pusha
out
fsub
jg
leave
jmp
cmc
ja
pop
cwde
(bad)
xchg
xchg
pop
addr16
daa
mov
fxch
adc
movs
pop
das
push
push
retf
inc
bswap
loopne
adc
dec
ret
mov
dec
sbb
and
sub
loop
xor
inc
jmp
pop
fsubr
cmps
xor
xchg
(bad)
mov
jnp
call
mov
retf
mov
shr
out
cld
repnz
fmul
not
loopne
mov
mov
aaa
cwde
shr
popa
jl
and
ret
fisubr
sub
xor
xchg
jmp
mov
xor
jne
pop
xchg
in
loope
popa
mov
mov
inc
cdq
mov
pushf
aas
xchg
mov
fs
fimul
and
adc
or
mov
mov
cwde
push
lds
dec
add
mov
je
inc
dec
(bad)
adc
dec
add
and
int
outs
jo
call
jg
jae
cmps
ins
pop
shl
out
and
imul
and
inc
jns
sbb
mov
cld
ss
xchg
dec
ds
lea
and
jp
mov
xor
xor
pop
add
pop
jmp
push
aam
add
sub
aas
mov
adc
test
cmc
sbb
xlat
xor
push
push
out
movs
hlt
pop
mov
cmp
pop
cmps
add
jge
dec
lea
aad
inc
mov
inc
or
pop
mov
sti
dec
xor
fidiv
jmp
inc
retf
sub
scas
push
cmp
rol
popf
jnp
icebp
jnp
in
fdiv
or
xchg
scas
div
in
fwait
push
mov
out
mov
dec
dec
out
push
idiv
add
mov
mov
rol
out
jg
mov
lds
xor
scas
jbe
jg
xchg
mov
and
jl
nop
jnp
push
ror
jns
movs
sahf
mov
cmc
push
mov
cld
test
mov
sub
pusha
sub
cmps
movs
jmp
inc
push
lea
maskmovq
imul
push
jno
mov
cli
stos
push
xchg
pushf
push
dec
(bad)
dec
pushf
fdivrp
jge
(bad)
push
stos
inc
in
jge
cmp
jno
mov
xor
ror
inc
xchg
mov
popa
out
popf
mov
stos
lods
jge
xor
jp
lea
inc
rcl
inc
pop
add
cmps
fsubr
scas
ins
jecxz
int3
neg
pop
mov
push
add
ss
lea
sub
cmp
cmp
in
xchg
and
push
inc
add
das
pop
ret
aaa
sbb
daa
cmp
cmp
push
fwait
or
in
ins
(bad)
cmp
or
popf
retf
mov
icebp
ds
icebp
retf
push
test
loope
sub
push
jbe
push
xor
mov
outs
or
add
jmp
fbld
jno
mov
rcr
(bad)
xchg
push
test
and
or
shl
out
loop
add
mov
out
movs
pop
xchg
ins
adc
dec
icebp
scas
add
shl
fist
(bad)
cmps
jo
aas
addr16
enter
push
cmp
retf
(bad)
stos
or
popf
push
fnstenv
mov
cli
cli
sbb
xchg
out
dec
leave
call
ficom
pop
cmp
cmp
popa
push
and
xchg
cmp
jge
out
test
popf
mov
sbb
pop
push
pop
(bad)
cmp
mov
retf
sbb
jae
icebp
fld
test
or
sub
mov
mov
mov
repnz
sbb
mov
pop
mov
add
movs
add
and
and
adc
hlt
cmp
call
sbb
mov
imul
jle
aaa
cwde
or
jg
sub
arpl
sbb
shl
retf
push
mov
ret
pushf
adc
mov
mov
mov
cmp
cmp
fmul
(bad)
sti
mov
fimul
jmp
push
or
hlt
jne
sbb
dec
ss
cmps
pop
push
push
repnz
cld
cmp
test
pop
adc
add
mov
jbe
mov
das
jnp
inc
les
inc
imul
add
sbb
in
add
cld
mov
mov
pop
mov
les
fdiv
sbb
inc
stos
mov
sar
xchg
mov
stos
hlt
cmps
adc
jmp
test
inc
or
sbb
pushf
add
iret
xor
(bad)
jo
pop
cli
add
xchg
out
mov
out
inc
in
jnp
shl
or
jae
dec
fsub
arpl
mov
out
mov
push
jle
xor
aas
push
call
(bad)
rcr
inc
(bad)
push
popa
fdivr
(bad)
cdq
jmp
fld
loopne
(bad)
fld
push
(bad)
inc
xor
mov
aam
cmps
or
aad
cs
and
dec
popf
or
jmp
outs
xor
rcl
mov
daa
jl
dec
imul
jmp
xor
or
cli
jnp
in
iret
nop
mov
movs
lahf
pop
rcl
idiv
or
or
fld
add
ret
(bad)
mov
sbb
jno
sbb
pop
iret
cmp
sbb
inc
jmp
push
xchg
or
daa
pop
in
leave
inc
mov
sub
jmp
cmps
or
lahf
sbb
xor
call
out
loopne
push
push
call
push
in
dec
add
ds
cmp
ror
mov
cmps
xchg
fdivr
or
xor
imul
dec
(bad)
jecxz
fstp
js
inc
dec
mov
cli
(bad)
ins
push
sbb
fsubp
in
sub
loopne
push
imul
loopne
mov
dec
sbb
push
xor
mov
loope
cmp
mov
aas
outs
sahf
inc
fsubrp
stc
fnstenv
inc
mov
jecxz
or
out
mov
push
call
cmps
push
pusha
cmps
sbb
cli
push
repnz
push
mov
aas
push
in
pop
imul
fimul
and
ins
jecxz
or
lods
jbe
nop
jb
mov
sbb
cmp
mov
jmp
and
inc
jp
jmp
in
jle
and
push
scas
test
or
xchg
outs
xchg
add
rcr
outs
cli
push
cmp
jns
push
mov
ja
outs
out
or
adc
jbe
and
cmp
mov
lea
sbb
jbe
es
(bad)
or
and
call
push
pop
outs
out
sbb
daa
adc
(bad)
cmc
outs
mov
push
or
pushf
push
xor
mov
adc
shr
(bad)
out
(bad)
xchg
dec
stos
push
xchg
retf
xor
lods
or
scas
sahf
mov
ja
shl
xchg
pop
lds
dec
cmp
ja
cmp
mov
inc
hlt
sub
outs
sbb
out
adc
xor
call
sbb
sub
jmp
retf
mov
imul
stc
movs
mov
cmp
leave
mov
mov
imul
shl
pop
loop
mov
sbb
pop
pop
dec
adc
mov
xchg
sub
adc
inc
cdq
sbb
jae
arpl
(bad)
xor
sti
(bad)
pop
lods
push
icebp
mov
in
repz
retf
shl
push
cmps
sub
call
jae
dec
mov
inc
or
adc
sub
mov
retf
in
in
cld
lds
out
gs
dec
popa
mov
mov
mov
leave
jae
dec
stc
jge
cmp
and
push
push
aas
and
jmp
xor
shr
jo
or
fwait
lds
xchg
cmc
jnp
mov
sbb
retf
gs
inc
lds
mov
std
(bad)
std
dec
xchg
push
mov
enter
and
jns
lods
(bad)
in
cmp
cmp
mov
mov
inc
push
mov
mov
scas
adc
xor
xor
aaa
sub
bound
sti
lods
xchg
inc
dec
(bad)
xor
pop
stos
fbld
jnp
jl
repnz
outs
lods
outs
aaa
fdiv
xchg
pop
xchg
mov
js
lock
xlat
xchg
push
dec
xor
mov
jne
mov
push
mov
xor
into
push
loop
in
or
adc
scas
(bad)
adc
and
xchg
push
icebp
mov
lock
jne
mov
ret
push
sbb
scas
add
stos
and
addr16
pop
lock
loop
jb
jecxz
mov
pop
jne
stos
es
jo
jnp
fsub
fistp
sub
retf
pop
call
xor
sti
jp
(bad)
pop
aam
pushf
retf
and
mov
sbb
test
jle
ficom
xchg
cmc
adc
mov
mov
mov
jno
es
icebp
clc
mov
jbe
outs
movs
test
fcom
push
cld
dec
xor
cld
scas
mov
sub
repnz
dec
shl
(bad)
push
neg
sbb
sbb
int3
adc
cwde
sbb
ffree
or
or
cmps
xchg
mov
(bad)
out
xor
jno
inc
mov
xchg
xor
movs
in
inc
js
push
ror
nop
mov
push
sbb
pop
fbld
or
inc
or
push
pop
imul
mov
mov
sub
mov
push
leave
test
outs
in
nop
mov
out
out
push
jmp
add
pop
xchg
sahf
inc
aad
retf
jbe
clc
lds
test
add
cmp
inc
and
push
cmp
stos
rcl
cmp
mov
sub
or
jge
sub
(bad)
out
jo
repz
retf
pop
cmp
fld
je
arpl
inc
dec
in
jge
inc
nop
inc
jl
jne
lock
sahf
inc
mov
mov
in
lods
js
push
cmp
sbb
push
icebp
inc
jecxz
neg
push
test
inc
loopne
hlt
mov
repnz
pop
fdiv
inc
cmp
push
shl
outs
or
idiv
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
paddd
in
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
aad
and
pop
add
scas
scas
jno
mov
div
jmp
(bad)
rcl
dec
dec
mov
adc
cmp
stc
jg
(bad)
mov
fwait
clc
add
ror
push
loopne
das
rcr
adc
fidivr
scas
cmp
push
nop
or
mov
outs
xor
cmp
bound
mov
mov
xor
addr16
scas
mov
stc
jae
cmps
jne
adc
std
std
(bad)
or
(bad)
mov
(bad)
retf
ja
(bad)
mov
jne
scas
stc
sbb
xchg
push
mov
repz
add
mov
xor
rcl
jmp
jns
popa
and
aaa
xor
cmp
inc
add
jmp
packsswb
sar
out
fdivrp
cmps
hlt
sbb
jbe
and
or
dec
jmp
push
and
std
xchg
xor
add
stos
sahf
adc
(bad)
push
shr
test
push
mov
xchg
imul
xchg
dec
ret
cmp
loope
inc
(bad)
mov
and
int3
adc
shl
lea
pop
xor
sub
push
popa
mov
aad
(bad)
loop
pop
lock
mov
out
sbb
idiv
in
cwde
imul
in
iret
lods
or
das
jmp
push
mov
mov
pop
ds
jbe
xchg
and
jle
test
xchg
push
jns
ins
and
test
xchg
outs
loope
sti
push
ds
mov
arpl
out
mov
fidivr
sub
lods
cmp
dec
xor
mov
int3
cmc
mov
add
cmps
inc
adc
sti
mov
pusha
push
mov
gs
mov
je
cmp
je
lock
jae
jno
adc
out
shl
ss
fldz
add
jp
pop
cmc
mov
out
adc
jp
stc
(bad)
pop
(bad)
not
addr16
enter
push
sbb
lods
push
ret
mov
rcr
outs
mov
add
jns
test
scas
scas
cs
mov
mov
repz
mov
xlat
(bad)
out
stos
or
add
sub
sbb
inc
and
jb
push
ss
das
out
mov
xchg
add
pop
loopne
cmp
sub
jae
and
leave
pusha
(bad)
outs
jb
xor
jnp
pushf
mov
aam
sub
jecxz
enter
push
shr
sbb
xor
mov
lock
mov
icebp
sbb
mov
mov
seto
scas
push
fndisi(8087
pop
ror
cmp
retf
push
add
cmp
xor
loop
xor
popa
add
mov
dec
jle
lea
out
jne
addr16
add
cvtdq2ps
mov
jmp
stos
dec
test
popf
rcl
arpl
jl
lea
stc
btc
jecxz
mov
aam
cmp
outs
sbb
into
sub
xor
popf
sub
fs
retf
mov
lahf
adc
mov
jecxz
stos
inc
push
pop
ret
jmp
xor
adc
(bad)
fcomp
mov
mov
jno
mov
push
mov
inc
or
rcl
xchg
js
inc
sub
jbe
xchg
imul
cmps
cmp
call
imul
loop
dec
mov
or
test
inc
(bad)
je
dec
jmp
in
movs
xchg
test
inc
aam
sbb
or
inc
dec
push
mov
dec
in
or
xchg
sbb
(bad)
aaa
pop
leave
test
xchg
in
mov
fadd
leave
and
leave
int3
xchg
mov
repz
mov
imul
sub
ret
mov
retf
popf
fild
mov
push
inc
cld
das
in
dec
ins
(bad)
cpuid
dec
cmp
push
in
lea
cmps
fwait
push
push
xchg
fdivr
ror
bound
or
mov
mov
or
stos
popf
adc
pusha
cmp
dec
jecxz
pusha
and
loope
cmp
les
sub
sbb
xor
xchg
add
push
adc
movs
leave
push
push
pop
fwait
add
arpl
rcr
xchg
popf
imul
jmp
xor
repnz
hlt
pop
lods
sar
jne
add
repnz
mul
dec
lea
jmp
pop
xor
cmc
test
inc
pop
cmps
nop
loop
mov
mov
addr16
mov
inc
loop
inc
mov
push
add
jno
and
dec
lock
mov
mov
jecxz
push
mov
shl
push
mov
gs
dec
call
aaa
xchg
inc
mov
inc
outs
jge
dec
fist
aaa
dec
mov
xor
xchg
js
fsub
bound
call
repz
push
jl
dec
(bad)
gs
movs
mov
scas
xor
pop
iret
adc
cs
out
loopne
lahf
xchg
fcomp
jno
xchg
and
adc
js
cdq
aas
adc
push
mov
into
ror
pop
push
(bad)
ret
push
icebp
dec
bound
loopne
pushf
sbb
in
lods
xchg
dec
lds
mov
cmp
mov
sbb
push
repz
sbb
nop
or
sbb
mov
mov
mov
cs
xor
xor
fwait
cmp
mov
ins
leave
mov
fxch
or
mov
mov
cli
or
push
clc
je
sub
nop
xchg
jp
xchg
push
mov
int
xor
retf
sbb
mov
and
fild
ret
xchg
inc
xor
fld
jecxz
lock
mov
inc
jne
mov
int3
je
push
sbb
out
xchg
imul
sbb
mov
movs
stc
call
mov
cs
mov
push
push
sub
lea
push
ja
outs
cmp
out
lea
or
xchg
sub
cmp
sbb
xor
pop
cli
mov
int
jg
or
jge
gs
int
sub
sbb
ins
inc
sub
push
and
jns
je
xchg
cmp
bound
sbb
into
mov
push
xchg
clc
es
in
in
cmc
rcl
inc
stc
xchg
mov
inc
pop
iret
stc
jge
sar
mov
mov
clc
cmp
stc
ret
ficom
inc
inc
sbb
cmp
repz
push
inc
inc
iret
mov
addr16
mov
sti
add
xor
inc
sub
test
jg
adc
push
jge
cmp
mov
sbb
mov
dec
gs
call
mov
enter
ret
and
adc
xchg
and
mov
jne
jo
daa
retf
xor
scas
(bad)
icebp
jne
mov
shl
mov
sub
in
sbb
(bad)
repnz
add
cmp
fdiv
cld
pop
addr16
adc
mov
sub
ins
in
(bad)
push
lea
stc
sub
dec
lock
adc
into
test
popf
or
push
mov
xchg
(bad)
adc
xlat
shl
mov
ins
mov
inc
sbb
(bad)
add
ret
fimul
lods
pop
jns
pop
add
stos
jno
nop
arpl
pop
sbb
dec
and
xor
jno
arpl
mov
into
jl
mov
imul
mov
(bad)
push
cwde
std
iret
push
or
fld
cld
xchg
inc
push
imul
test
mov
pcmpgtw
jns
aaa
packuswb
mov
dec
xor
add
repnz
xor
sbb
sub
call
sar
dec
adc
push
movs
xor
movs
push
jne
xor
lods
or
jnp
(bad)
dec
shl
iret
xchg
ins
mov
popf
and
inc
dec
push
ret
mov
fs
arpl
inc
test
dec
mov
push
dec
push
ss
mov
mov
jl
fcomi
push
popf
aam
popa
lods
pop
and
sub
mov
push
daa
inc
rcr
xchg
push
shr
add
mov
or
mov
and
push
push
inc
imul
push
hlt
or
ins
ds
popa
sbb
push
xor
mov
xchg
adc
inc
cmps
mov
(bad)
mov
cmp
mov
ds
bound
dec
jns
xchg
jbe
dec
xchg
mov
lahf
sbb
pusha
std
mov
fiadd
fwait
jno
fs
push
(bad)
mov
fwait
xchg
or
mov
cld
sub
(bad)
xor
outs
or
push
jmp
es
sbb
fsub
cmp
push
lods
inc
jmp
sbb
js
and
dec
cmp
ins
stos
out
mov
inc
push
sahf
rcl
xor
dec
inc
lds
ins
push
in
push
movs
push
jnp
inc
cmp
pop
shl
shr
imul
xlat
sti
inc
outs
push
cld
pop
fnsave
jnp
or
jmp
and
test
ret
shl
or
sbb
xchg
ret
es
push
test
adc
mov
dec
gs
sbb
pusha
loop
clc
ss
imul
test
adc
and
call
and
loopne
cdq
add
or
nop
hlt
sbb
add
mov
cmp
(bad)
ss
or
pop
sbb
mov
aam
loope
stos
fadd
test
pop
ret
ja
out
sub
mov
ja
mov
out
mov
out
aam
gs
aaa
daa
shl
sub
lock
mov
cmp
push
jmp
popf
sar
sbb
mov
dec
push
and
out
or
dec
ds
xchg
push
mov
hlt
or
and
mov
jle
pop
xchg
mov
(bad)
(bad)
jp
mov
gs
daa
adc
adc
ret
inc
mov
cdq
sbb
push
push
add
fucomip
mov
lods
or
xor
out
jb
jb
push
sti
rol
loop
jg
cmp
rcl
movs
lock
cs
outs
in
pop
int3
enter
push
test
iret
xor
fstp
(bad)
add
xchg
mov
popa
jno
xlat
xchg
icebp
frstor
ins
mov
jbe
jecxz
push
xchg
or
inc
in
stos
int3
scas
js
stc
jmp
fidivr
pop
sub
cmp
push
cdq
inc
or
jg
mov
xor
rol
push
ins
sub
movs
or
popa
dec
mov
sub
cld
cdq
jmp
scas
adc
fistp
or
adc
pop
out
mov
cmp
retf
stos
ins
sub
shr
xchg
xchg
stc
or
cwde
daa
mov
iret
cmp
fneni(8087
shl
mov
sbb
jmp
(bad)
sbb
pop
ja
les
ror
sub
mov
sub
out
in
mov
je
pop
jg
pop
sub
pop
jg
or
push
test
push
sti
out
shl
aam
sbb
in
mov
mov
mov
mov
js
lahf
iret
rcl
ds
fwait
jae
adc
sub
imul
int3
pop
cmc
lea
pcmpgtw
clc
jle
mov
ss
cld
out
xor
ins
sub
or
jge
dec
lahf
or
and
retf
dec
in
(bad)
or
and
test
dec
mov
dec
pop
and
mov
ret
repnz
stos
(bad)
into
lahf
mov
outs
test
mov
addr16
cmc
nop
dec
movs
ret
add
cwde
xor
adc
jmp
push
call
pusha
aaa
jbe
in
sbb
pop
jmp
popa
add
mov
retf
lock
enter
cmp
bound
inc
aam
loopne
dec
pop
push
mov
push
fmul
mov
loope
inc
sbb
clc
div
mov
or
xchg
inc
loop
xchg
(bad)
adc
into
out
out
dec
xchg
(bad)
mov
dec
lods
rcr
rol
xchg
push
cmp
std
mov
jo
add
movs
xchg
push
push
mov
inc
out
adc
xor
xchg
xor
mov
push
xor
out
stos
jne
inc
stos
aam
cmps
add
jns
ds
jge
adc
and
aam
out
out
aas
icebp
dec
mov
fwait
jno
movs
mov
popa
push
inc
mov
xor
jno
in
adc
cmp
xor
xor
sub
cs
out
test
adc
ins
adc
dec
sub
scas
pusha
pop
(bad)
fisub
jmp
add
add
jns
jbe
jle
sbb
cs
adc
mov
jmp
xchg
test
lods
ret
stc
dec
in
push
or
data16
mov
push
int
test
lods
aaa
pop
jmp
pop
inc
shl
and
and
sub
or
mov
arpl
mov
xor
fcom
xor
mov
sahf
inc
or
dec
and
imul
adc
mov
xchg
mov
movs
sahf
mov
jbe
outs
pop
in
movs
push
mov
cmp
(bad)
lods
int3
stc
repz
ret
pop
jne
dec
fwait
arpl
fs
xchg
push
push
jmp
repz
dec
pop
fucomip
fwait
xchg
mov
xor
cmp
fadd
push
retf
and
xchg
pop
fst
xor
call
leave
xor
xor
cwde
sub
in
scas
jns
(bad)
call
bswap
es
inc
adc
mov
or
jns
or
je
or
mov
sbb
mov
(bad)
(bad)
mov
and
out
and
and
sub
fnsave
rsm
out
cs
ret
or
ror
mov
sbb
ret
adc
arpl
jmp
icebp
sahf
adc
jge
dec
in
std
bound
and
jl
ret
(bad)
mov
push
lea
std
pop
out
xchg
mov
cdq
cmc
mov
int3
aad
jmp
pushf
stc
sbb
push
je
fadd
add
xor
sbb
aad
imul
mov
xchg
pop
test
push
fdivp
mov
fwait
scas
retf
clc
rcl
mov
mov
inc
sbb
jmp
dec
xchg
retf
xchg
aad
aas
fwait
jle
dec
push
stc
add
jbe
jae
adc
or
mov
ins
cmp
imul
jbe
lea
ins
mov
icebp
adc
(bad)
xchg
pop
ret
xchg
ret
adc
dec
mov
arpl
out
pop
adc
in
(bad)
jne
fcom
mov
pop
pop
sti
jle
mov
mov
icebp
add
das
fcom
inc
or
sbb
rol
mul
dec
pop
(bad)
repnz
xor
mov
add
sub
push
retf
xor
js
cmc
sbb
mov
mov
bound
les
test
ret
imul
adc
add
cmp
nop
pop
mov
inc
fisubr
out
pop
xchg
push
shl
jmp
add
jbe
loopne
adc
imul
jmp
sub
xor
ja
adc
xlat
inc
push
mov
and
jns
adc
aas
xor
movs
xchg
mov
cmp
push
and
dec
push
xor
(bad)
ret
test
xchg
popf
or
into
fiadd
inc
fimul
inc
pop
cli
adc
xor
cli
or
pop
loope
(bad)
outs
imul
xchg
xlat
mov
jge
cmp
ss
pop
xchg
icebp
fist
retf
sub
mov
sti
sahf
mov
sub
sahf
jae
jno
mov
mov
and
fsubr
fisub
mov
mov
push
addr16
jmp
stc
out
jg
stc
out
jg
pop
add
fist
and
std
jg
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
iret
test
or
inc
aaa
jl
sbb
shl
xor
ja
aaa
shl
popf
xchg
out
push
xchg
nop
out
outs
sub
out
data16
aas
div
out
loopne
add
stc
jae
rcr
jp
movs
or
cs
mov
fsub
pop
lods
push
movs
xchg
movs
pop
pop
sub
jmp
and
fwait
mov
cwde
ret
jo
push
mov
push
and
and
enter
and
sub
repnz
mov
scas
xor
jb
sahf
xor
(bad)
repnz
push
jo
aas
mov
mov
sbb
cmp
jno
mov
pop
push
out
xchg
mov
adc
stos
and
call
cmc
fs
push
ret
xchg
ins
add
push
pop
adc
fdiv
add
push
jge
push
push
aaa
and
ja
adc
push
ret
fnstcw
clc
inc
nop
fild
fild
lock
dec
test
xor
cmp
sub
pop
sub
daa
xor
popf
sbb
enter
jle
adc
rcl
xchg
dec
mov
adc
in
mov
push
cli
mov
mov
xor
cmps
mov
mov
ror
int
inc
and
rcl
test
test
jae
stos
or
ins
or
stos
mov
xchg
adc
mov
sbb
cmps
mov
pop
clc
sub
cmp
mov
jae
xor
ds
add
inc
cmc
and
sets
dec
in
sub
cmp
bound
jnp
rcl
lods
or
pusha
xchg
(bad)
addr16
and
shl
or
mov
loope
cdq
dec
mov
jmp
sub
(bad)
dec
ret
ret
or
or
fadd
test
push
adc
xor
fld
iret
mov
std
ja
enter
cli
push
xor
popf
push
popa
pop
mov
cmc
ret
std
cmp
xlat
jle
out
ja
jmp
je
daa
cs
push
xchg
jns
or
leave
pop
push
lahf
cld
(bad)
xchg
test
dec
hlt
pop
clc
pop
push
daa
loop
nop
in
fdiv
cwde
loop
pop
push
cmp
push
sbb
call
pop
arpl
dec
icebp
scas
inc
inc
xchg
add
out
mov
aas
enter
fs
mov
mov
cmp
cld
std
push
(bad)
int
push
movs
sub
shr
mov
imul
push
sbb
mov
sub
fadd
(bad)
call
xlat
clc
push
pop
cmp
and
scas
inc
std
inc
sub
repnz
jp
out
mov
in
mov
or
jge
push
fisubr
xchg
aas
jle
inc
push
inc
call
rcr
call
jae
inc
aam
adc
ret
cs
jle
pop
mov
xchg
xor
add
pop
loopne
clc
sbb
stc
mov
ins
add
jle
adc
inc
lds
adc
ret
adc
xor
mov
ds
pop
outs
sar
es
pusha
aas
sbb
xchg
and
mov
and
and
jp
jle
add
inc
test
into
fmul
jmp
dec
dec
jo
or
sub
xor
pop
(bad)
int3
ins
div
aaa
pop
fimul
push
(bad)
cmp
scas
pop
mov
mov
daa
cmp
inc
mov
les
add
fadd
mov
jb
sub
xchg
pop
(bad)
cmp
jmp
arpl
pop
or
iret
mov
sub
mov
push
fstp
dec
dec
stos
push
sbb
test
mov
dec
fcomi
push
pop
add
aas
and
jp
out
or
loopne
arpl
arpl
out
lock
push
fsub
jo
push
mov
cmp
and
jp
in
out
inc
sub
sbb
lahf
jmp
jecxz
pop
inc
sbb
lea
gs
jle
leave
es
sahf
adc
movs
mov
outs
iret
inc
sub
enter
mov
pop
bound
outs
jp
mov
jl
mov
inc
sahf
or
adc
ss
clc
pop
or
or
fild
in
lods
(bad)
int
test
stos
pop
mov
mov
mov
ds
ret
in
in
fucomip
out
dec
test
ja
jge
and
mov
sbb
lahf
rcr
cmc
int3
push
movs
jmp
(bad)
ficomp
or
ret
add
loop
stos
push
cmp
and
cmps
mov
dec
bound
push
sub
inc
sahf
inc
cmp
sub
leave
xor
out
scas
fwait
and
jo
push
bound
fdiv
jge
mov
lods
xchg
lods
mov
aad
aam
test
sub
adc
pop
ins
aas
aam
sub
sbb
push
mov
or
xchg
sub
adc
xchg
mov
mov
das
sbb
mov
leave
movs
lods
into
(bad)
push
mov
mul
mov
sar
outs
les
push
push
pop
sub
aaa
jge
sub
rcr
fsubr
ret
test
jp
es
sbb
pop
xchg
(bad)
into
cli
jno
jmp
(bad)
jl
outs
(bad)
pop
(bad)
std
cmc
jmp
mov
jmp
(bad)
retf
cmp
out
fs
in
in
xor
lds
aam
mov
dec
mov
xor
pop
rol
jb
(bad)
(bad)
mov
scas
pop
pop
fneni(8087
xlat
xchg
sbb
outs
xor
cmp
or
pop
sub
out
stos
data16
jmp
jb
sbb
fidiv
mov
push
fnstcw
jne
call
fist
jge
dec
out
idiv
sbb
jae
xchg
aas
jo
(bad)
xlat
adc
mov
mov
jl
(bad)
adc
in
inc
jecxz
jne
(bad)
stc
pop
stos
jno
add
inc
jbe
mov
sub
scas
mov
sbb
lock
mov
pop
and
lods
jno
pop
(bad)
mov
jmp
mov
dec
sub
adc
mov
inc
addr16
ds
icebp
jecxz
xor
pusha
jno
fild
cli
mov
jg
mov
or
lds
pop
mov
and
leave
in
and
inc
sbb
ror
or
daa
mov
test
mov
fsubp
pop
sub
or
add
or
fdecstp
outs
mov
sub
cld
mov
pop
fbld
add
sbb
jmp
inc
push
sti
cmp
mov
lods
push
push
cdq
fidivr
or
mov
retf
adc
lods
leave
arpl
sahf
mov
dec
pop
lods
push
fnstcw
(bad)
enter
pop
push
push
movs
xchg
mov
push
inc
mov
test
xchg
mov
imul
inc
mov
add
bound
dec
cmp
inc
mov
pop
dec
inc
mov
ins
rcl
mov
push
add
mov
push
das
in
leave
jmp
mov
repz
in
scas
hlt
add
push
lods
jl
dec
mov
mov
ins
hlt
adc
cld
push
into
push
sbb
mov
adc
mov
push
daa
sub
nop
aaa
imul
pop
jno
movs
mov
push
popf
loopne
aaa
push
in
sbb
sbb
pop
cli
jb
cmp
dec
mov
xchg
out
vmread
pop
and
cmps
xor
cmp
xor
or
mov
mov
mov
cdq
aas
mov
push
stc
and
xlat
int
lods
pop
push
push
push
pop
movs
or
out
icebp
das
ret
push
idiv
mov
mov
fs
push
sti
cmps
mov
and
(bad)
pop
loopne
lods
pop
js
addr16
(bad)
inc
ins
and
cmc
mov
pop
jl
inc
loop
pop
aad
sub
jno
fstp
daa
mov
fsub
inc
or
leave
mov
push
jmp
imul
les
out
push
mov
lods
push
lds
sub
mov
das
ss
fst
pop
xchg
inc
jnp
push
mov
rcl
fwait
sahf
lods
call
adc
mov
dec
nop
xor
or
out
xchg
hlt
pop
push
rcl
mov
push
and
mov
xchg
push
ret
repnz
cmps
aaa
aad
outs
lds
mov
xlat
cmp
push
jae
pusha
ret
fwait
daa
mov
into
test
pop
idiv
sahf
fs
xchg
repnz
mov
cld
mov
mov
fs
xchg
xor
ins
test
xor
dec
inc
popa
pop
call
or
les
push
cwde
idiv
inc
inc
lds
in
(bad)
mov
data16
pop
fst
mov
xor
mov
push
xor
mov
xchg
pushf
aas
jp
jg
sbb
sub
and
mov
pop
sub
hlt
aad
fild
in
jo
jl
hlt
dec
pop
sbb
daa
iret
jnp
stos
call
inc
aam
pop
adc
mov
dec
in
fcom
repz
or
adc
mov
push
sar
push
add
or
mov
jecxz
aas
mov
pop
leave
test
test
iret
int3
or
xchg
fst
jmp
dec
outs
push
imul
dec
retf
or
sub
mov
push
por
daa
push
in
fidiv
push
jae
inc
mov
lock
push
jp
xchg
jae
and
pop
out
pop
ins
ins
(bad)
xchg
push
mov
ror
bound
add
push
mov
in
add
pop
push
movs
jbe
loop
push
pop
mov
push
mov
push
mov
mov
adc
test
pop
dec
out
arpl
call
fdiv
inc
rol
loope
test
outs
dec
inc
cdq
aad
fistp
mov
fs
das
shr
scas
and
loope
sbb
ret
sbb
lahf
int
pop
out
push
mov
retf
mov
sub
dec
iret
inc
jle
push
cmp
xor
sub
pushf
pop
add
popf
rcl
xchg
cwde
xchg
ss
ss
add
into
test
jge
jne
push
dec
(bad)
sbb
(bad)
scas
mov
mov
sbb
out
ds
add
ftst
mov
pop
ret
aas
mov
sub
mov
loop
push
js
in
sbb
clc
dec
shl
cmp
fld
sub
jns
xor
mov
repnz
push
inc
add
adc
pop
cmp
jp
mov
int3
xor
xchg
scas
dec
cmp
stc
fnsave
xchg
inc
fild
rol
fisub
sub
xchg
mov
mov
sub
cmc
pop
cmps
das
lock
fld
(bad)
inc
outs
mov
rcl
cmp
repnz
loop
cmp
xor
shl
(bad)
out
(bad)
mov
neg
jo
fcom
aam
xchg
sub
mov
mov
xchg
movs
or
out
adc
or
stos
mov
ss
pop
pop
out
jnp
cmps
mov
outs
in
inc
mov
pusha
xchg
sbb
fs
jp
sub
in
(bad)
xchg
cmovle
pop
mov
ret
pop
sti
stc
or
xchg
test
and
cli
dec
mov
pop
or
fimul
stc
dec
mov
mov
cmp
jbe
mov
dec
shl
cs
aad
pop
in
js
in
shl
fistp
mov
sbb
stos
retf
gs
adc
or
jmp
jno
xchg
dec
retf
adc
fldcw
in
aaa
push
adc
mov
fwait
mov
es
pop
push
imul
inc
or
push
xor
dec
iret
xor
adc
or
add
sub
test
sub
je
mov
sub
pop
mov
add
retf
in
hlt
mov
(bad)
push
les
lock
add
mov
psllw
cmps
mov
loop
mov
cmp
dec
(bad)
addr16
dec
jle
sbb
mov
fs
push
cdq
fstp
test
pop
jns
push
ficom
dec
aas
cmp
js
call
pushf
fld
mov
dec
add
push
in
fldenv
pop
mov
lahf
inc
dec
pop
sbb
shl
push
clc
push
add
imul
mov
xor
cmp
cmp
and
push
aad
das
imul
js
mov
sbb
and
enter
mov
in
push
pop
jge
jb
xchg
out
loope
xchg
jl
mov
sbb
pusha
lods
dec
add
push
call
xchg
into
push
jns
cli
inc
dec
sbb
aas
push
rdpmc
mov
or
popf
or
inc
mov
ja
push
push
retf
popf
imul
inc
push
xchg
fsubr
daa
aas
fsubr
loop
xchg
mov
mov
inc
dec
mov
jle
xchg
xchg
mov
push
jne
or
mov
dec
ins
fmul
xchg
mul
pop
add
pusha
push
push
cwde
enter
sub
adc
sbb
xor
test
pop
nop
jecxz
aaa
test
mov
in
hlt
fmul
sbb
push
lods
bound
push
ins
cmps
(bad)
call
out
pminub
sbb
mov
cdq
pop
call
fdiv
sbb
dec
cmp
or
(bad)
push
(bad)
nop
ret
retf
mov
(bad)
pop
jbe
les
jno
and
rcr
adc
scas
xchg
cwde
mov
sub
movs
mov
retf
inc
(bad)
jo
dec
jecxz
dec
mov
inc
icebp
cmp
repz
mov
cmp
mov
movs
repz
adc
out
das
push
iret
shl
sub
and
retf
pop
mov
ja
dec
dec
jge
push
out
jg
mov
icebp
sbb
cmp
sub
rcr
lea
push
sti
xchg
jle
xor
mov
pop
lea
or
pavgw
xlat
inc
xor
jmp
cmp
sbb
iret
shr
dec
ss
pop
arpl
popa
imul
(bad)
cdq
adc
sbb
mov
(bad)
and
push
loop
xchg
add
cmp
inc
call
cmp
movs
(bad)
lods
(bad)
ja
(bad)
jne
xchg
and
arpl
stos
das
xchg
mov
pop
js
mov
nop
or
daa
mov
jae
cli
arpl
(bad)
aam
jno
push
arpl
jecxz
neg
aad
test
loopne
call
mov
rcl
adc
dec
jge
call
cmp
xchg
rol
xor
mov
sbb
mov
jge
call
test
cmc
test
push
aam
jns
dec
jge
imul
lds
and
jnp
or
fld
xchg
xchg
push
adc
ins
xchg
mov
(bad)
std
pop
jl
in
mov
sahf
bound
or
mov
test
jne
pop
xchg
(bad)
adc
add
cmps
sbb
xchg
xor
and
jp
push
sub
aaa
mov
sbb
lock
jae
inc
in
push
sar
mov
(bad)
loopne
int3
imul
sbb
rcl
jnp
sub
and
cmps
dec
ss
adc
movs
sbb
pop
push
mov
xchg
scas
dec
lods
test
outs
(bad)
jg
xor
das
and
mov
cmp
int3
sahf
hlt
add
loop
frstor
scas
jb
push
shl
addr16
xor
mul
movs
ins
cmp
adc
cmps
hlt
jge
test
inc
sbb
xchg
add
push
adc
sar
inc
test
fist
xchg
sbb
in
pop
repz
fist
jnp
pop
sub
mov
lds
lock
out
scas
out
mov
push
cmp
xchg
outs
mov
jo
jge
mov
cmps
sub
std
adc
retf
or
sbb
cmps
pcmpeqb
dec
cmps
inc
sti
sub
scas
pop
and
dec
cmp
out
lea
repz
js
mov
add
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
mov
in
lea
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
xlat
add
add
fwait
scas
imul
fistp
fisttp
int
out
cwde
outs
jbe
sbb
arpl
jmp
mov
sti
mov
(bad)
add
test
jo
add
cwde
add
cmp
mov
sub
dec
jno
les
cmp
cmps
pop
cwde
pop
add
jno
sbb
add
pop
mov
sub
dec
dec
cmps
cmp
cs
mov
fldenv
or
in
imul
sbb
xrelease
je
out
les
(bad)
mov
cld
daa
dec
and
data16
out
jle
add
jmp
cli
push
adc
stos
jnp
inc
stc
jb
sbb
mov
call
imul
jmp
sub
ret
out
out
ret
es
shl
call
sub
cmp
mov
sbb
out
jp
sub
xchg
push
mov
fs
add
sub
out
fsub
mov
pop
and
inc
iret
xor
dec
dec
cmp
add
cmp
sbb
stc
cs
cld
cmp
xor
mov
push
ja
and
loop
dec
test
out
test
pop
ffreep
xor
(bad)
xor
out
imul
inc
or
add
and
sbb
jns
(bad)
std
pushf
faddp
adc
mov
iret
data16
add
fnstcw
and
sub
popa
sbb
lods
or
xor
cmp
mov
pop
or
mov
sub
push
test
arpl
addr16
pop
inc
in
movs
lds
push
in
xchg
(bad)
dec
push
xor
loop
mov
lea
mov
in
test
movs
not
and
hlt
(bad)
movs
sbb
mov
mov
div
push
data16
cmp
scas
sbb
mov
arpl
mov
fwait
sbb
sbb
adc
pop
shl
imul
push
mov
mov
push
imul
je
jmp
outs
fstp
cmp
int
jo
inc
mov
test
jge
push
loopne
scas
gs
mov
cmps
mov
int
cmp
in
push
inc
fnstcw
pop
mov
adc
int3
bound
mov
dec
dec
in
in
dec
jae
fcompp
inc
sub
cmp
mov
mov
cmp
jge
sbb
jl
inc
gs
jl
lock
jg
jecxz
daa
or
mov
cvtps2pi
js
cmp
jl
pop
push
push
jo
daa
call
push
adc
jb
jne
add
repnz
movs
mov
(bad)
(bad)
adc
stos
mov
jne
or
test
pop
xlat
ds
jb
inc
leave
loopne
aaa
ret
xchg
movs
test
adc
sti
pushf
push
and
fiadd
movs
lds
mov
(bad)
and
pop
xlat
cdq
aam
(bad)
jns
fldenv
mov
sub
pushf
fwait
or
push
int3
push
sub
or
shl
jns
dec
inc
cli
mov
xor
call
push
push
push
pop
mov
mov
cmp
pop
dec
push
movs
xchg
ss
hlt
mov
pop
pushf
test
(bad)
movs
mov
lea
jg
mov
(bad)
fidivr
adc
sbb
sub
stc
inc
jmp
ror
jns
ds
jne
call
mov
inc
mov
push
mov
inc
pop
mov
mov
loopne
cmp
addr16
push
pop
sar
jmp
pop
lahf
nop
fwait
rcl
inc
jmp
je
or
loope
shr
jmp
xlat
test
mov
outs
popf
jge
nop
xchg
adc
retf
xchg
dec
out
int
mov
sbb
sti
adc
xchg
js
test
sub
cmp
xchg
mov
cmps
mov
jge
repnz
mov
fidiv
in
dec
xor
mov
retf
mov
(bad)
fst
xlat
aam
ret
jmp
nop
(bad)
ss
int
push
retf
xchg
pusha
xor
pop
inc
sbb
cmps
mov
jmp
pop
inc
iret
push
movsx
jl
imul
scas
ret
jb
fiadd
mov
cmp
jmp
test
ja
push
ss
mov
mov
scas
rol
push
xchg
sub
sub
data16
lock
jnp
adc
adc
mov
push
neg
dec
imul
cmp
mov
in
jno
add
test
xor
fs
jnp
stos
(bad)
(bad)
(bad)
xchg
out
test
or
(bad)
fwait
jo
cld
jae
data16
pop
mov
cmps
push
dec
ds
push
movs
or
ret
int
xor
ins
mov
and
mov
dec
push
daa
mov
inc
or
ins
into
xchg
pop
nop
test
dec
fcom
popa
and
in
jae
test
xchg
and
push
and
jecxz
out
pushf
out
loopne
lahf
or
fs
adc
jmp
pop
into
in
mov
jmp
jmp
mov
pop
pop
stc
(bad)
cmp
lahf
stos
add
into
sbb
clts
add
mov
jns
cmp
imul
add
xchg
mov
push
into
scas
ret
ins
lods
dec
stos
push
data16
push
xor
pusha
bound
push
out
mov
shl
or
out
mov
mov
pop
sub
cmps
pop
stos
sbb
mov
inc
aaa
xchg
jmp
jp
mov
fld
sub
lahf
cdq
ds
pop
adc
xchg
pop
mov
jl
call
inc
outs
dec
dec
das
inc
and
cmp
pushf
fnstsw
push
cmps
push
push
mov
xchg
dec
lahf
mov
int3
mov
fcom
dec
outs
and
and
rcl
pop
pushf
jecxz
mov
shl
ret
inc
js
shl
aad
sahf
mov
cmps
inc
addr16
fidiv
push
and
dec
xchg
jecxz
mov
mov
not
cmps
jl
(bad)
mov
daa
push
sbb
jecxz
sbb
inc
call
popf
xchg
mov
xchg
ja
pop
cmp
mov
push
sbb
xor
inc
cmp
push
add
adc
stc
retfw
sub
mov
xchg
lds
pushf
sbb
mov
mov
outs
mov
fistp
shl
nop
mov
cld
(bad)
and
stc
pop
retf
xor
or
inc
push
cs
aas
inc
in
mov
mov
mov
xchg
add
imul
(bad)
loopne
hlt
mov
hlt
jmp
mov
cmps
xor
dec
cld
aam
sbb
adc
loopne
jmp
cdq
push
mov
xor
sub
out
add
mov
jl
pop
(bad)
fmul
das
stc
stos
dec
pusha
test
sahf
popa
adc
mov
scas
and
push
push
(bad)
fprem1
nop
fcomp
dec
scas
mov
add
jmp
mov
inc
stos
mov
aas
(bad)
mov
jb
add
sbb
push
fadd
test
cmp
adc
xor
mov
(bad)
enter
sub
or
mov
vphaddwd
pop
mov
(bad)
mov
sti
jae
or
cdq
ins
xor
fdivr
and
xor
arpl
xor
mov
mov
loop
(bad)
idiv
xlat
cmps
lock
loopne
xor
out
jb
jbe
out
and
jmp
mov
add
sbb
add
sti
mov
cs
mov
mov
sub
test
push
mov
mov
fild
add
scas
leave
xor
bound
dec
dec
or
loop
int
das
cld
jmp
jecxz
xor
sub
leave
popf
mov
xchg
shl
xchg
outs
mov
mov
(bad)
and
mov
les
enter
daa
sub
xor
adc
and
pop
dec
stos
fwait
inc
mov
setb
jl
jmp
sti
inc
das
out
fadd
sub
mov
mov
xor
ja
ret
lods
sahf
jp
adc
xchg
push
jae
(bad)
jle
dec
mov
dec
mov
jne
not
cdq
xchg
fisttp
inc
int3
ror
jne
mov
leave
cdq
adc
sahf
int3
and
jg
into
adc
sub
push
enter
mov
sbb
clc
data16
ror
dec
jnp
mov
mov
mov
arpl
mov
aam
sar
cmp
mov
cmp
push
stos
out
fdiv
(bad)
fimul
jno
mov
mov
lods
shr
push
xor
cmp
xchg
nop
mov
mov
cdq
jp
adc
sub
add
pop
ret
cmc
stos
shr
dec
push
aaa
xor
lahf
(bad)
in
ret
sub
inc
add
test
jmp
fs
or
aas
xchg
stos
mov
mov
loope
push
aad
stos
popa
add
or
adc
neg
cli
es
fiadd
push
jns
push
ror
loop
sbb
jno
xor
movs
adc
mov
pushf
add
xlat
stos
dec
mov
aad
cmp
in
pop
leave
mov
pop
stc
add
pop
sbb
mov
jmp
mov
(bad)
mov
fcomp
enter
fadd
jecxz
ret
faddp
add
jbe
pop
inc
inc
ja
mov
fistp
in
cmps
(bad)
sub
adc
inc
mov
call
push
mov
paddw
retf
push
cmp
xor
mov
(bad)
cli
pop
jp
fisubr
sub
pop
shl
push
sti
and
adc
imul
les
xor
lods
mov
adc
retf
and
(bad)
les
lock
(bad)
daa
call
fistp
jno
fdivr
pop
dec
or
lahf
fcmovbe
imul
dec
jmp
pop
jmp
mov
jmp
xor
sub
imul
aam
ret
cmp
jae
push
xor
stc
push
jmp
sbb
sub
and
mov
jns
lahf
mul
stos
stc
test
inc
push
xchg
ja
jno
cmps
ficom
sub
test
xchg
sbb
leave
mov
cmp
pop
mov
int
xchg
ins
lods
in
stc
loop
adc
loope
mov
in
push
out
xchg
jno
lods
mov
adc
push
cwde
jmp
dec
lods
fmul
scas
sub
pop
adc
mov
test
jg
scas
out
sbb
push
jnp
pop
in
push
jb
dec
mov
xchg
sbb
in
mov
test
popa
add
sbb
cmp
fs
in
std
pop
mov
in
jle
push
sti
addr16
adc
jnp
xlat
xchg
enter
cmc
in
sbb
scas
pop
jne
daa
rcl
jns
aas
sbb
clc
xchg
and
iret
push
xlat
add
xor
push
test
mov
mov
sar
fwait
sahf
cs
inc
dec
pop
jno
out
adc
inc
dec
retf
sbb
cwde
xor
ret
jae
mov
xchg
ret
jmp
mov
cmp
imul
and
out
jl
pop
daa
xchg
in
cmps
mov
or
aaa
cmp
int
or
mov
push
(bad)
and
cmp
jge
sub
push
mov
scas
adc
neg
frstor
retf
sub
sub
js
inc
mov
js
inc
(bad)
mov
push
sar
pop
add
mov
adc
test
cmp
cdq
dec
out
and
mov
pop
inc
mov
sbb
lods
cs
aam
add
mov
push
sbb
mov
jmp
addr16
movs
pop
adc
stc
push
(bad)
mov
xchg
jmp
cmp
nop
mov
push
fld
cld
mov
cwde
into
push
lods
pop
movs
sar
inc
retf
aaa
aam
loope
mov
add
mov
mov
pushf
pop
frstor
add
leave
fisttp
rcr
(bad)
ins
cmp
(bad)
mov
cmps
jmp
(bad)
pop
sub
add
dec
enter
ins
dec
mov
and
test
test
or
aaa
push
push
aam
push
out
xor
inc
shl
(bad)
fstp
inc
push
mov
jb
push
jg
arpl
dec
retf
xchg
stos
ja
es
rcl
dec
fist
rcl
imul
mov
(bad)
mul
dec
dec
nop
iret
jle
outs
jb
out
loopne
dec
push
scas
mov
pop
out
mov
ror
data16
arpl
pop
(bad)
dec
arpl
and
jp
repz
in
je
push
mov
push
inc
jo
pop
pop
adc
arpl
inc
jle
mov
fs
or
call
out
push
mov
call
dec
(bad)
ss
out
aad
push
adc
imul
mov
cwde
fcom
(bad)
cmp
neg
int
sub
inc
dec
into
mov
pop
xchg
(bad)
xchg
sbb
jp
push
push
sub
inc
shr
push
xchg
sbb
fdiv
call
pop
xor
(bad)
out
popf
xor
xor
jle
add
cmp
jne
mov
fst
stos
push
fsubp
(bad)
ins
jnp
(bad)
mov
sub
jl
push
int3
les
out
jno
les
jbe
add
icebp
aad
mov
(bad)
and
jae
iret
xchg
fstp
adc
loop
sbb
jg
mov
push
xor
jns
shr
and
mov
or
aaa
push
xchg
cdq
dec
adc
fwait
sub
sahf
jmp
daa
xor
inc
scas
sbb
jp
test
test
imul
mov
xor
sub
lods
mov
mov
or
scas
and
mov
in
stc
movs
mov
jnp
(bad)
fisttp
xor
mov
mov
scas
and
sti
js
(bad)
jo
adc
shr
mov
out
or
outs
fldcw
cmc
push
lods
adc
dec
cmp
sti
xchg
mov
mov
jno
mov
cmp
das
into
mov
aaa
push
jp
mov
or
inc
push
ins
jae
cmp
rol
dec
out
shl
pop
loop
and
sbb
inc
jnp
or
sub
jmp
mov
mov
xchg
push
or
cld
data16
cmp
loope
leave
shr
push
sbb
push
aaa
xlat
movs
jbe
push
loopne
add
or
dec
in
out
cli
push
mov
inc
rcl
pop
inc
sub
xchg
imul
stos
and
adc
sbb
and
bound
(bad)
jl
add
mov
pop
ror
mov
in
and
in
jecxz
out
call
cdq
sbb
pop
dec
and
dec
arpl
lds
daa
mulps
sub
adc
sti
sub
and
and
fnsave
call
dec
mov
sbb
scas
add
repz
popf
rcr
push
push
push
xor
sub
inc
icebp
adc
jo
pop
jnp
loopne
imul
sub
add
cs
cli
iret
retf
ret
push
addr16
ins
mov
jo
push
push
pop
mov
ds
pop
push
cdq
arpl
cmc
(bad)
iret
or
aaa
aaa
xor
iret
outs
adc
daa
inc
jge
ror
fisttp
mov
jle
xor
sub
(bad)
xchg
or
pop
in
sbb
sbb
adc
sbb
(bad)
(bad)
fwait
rol
mov
icebp
out
hlt
fsubrp
loope
aam
xchg
test
cmp
ret
mov
aas
jb
pusha
xchg
frndint
ret
ins
dec
mov
jnp
in
(bad)
popa
mov
frstor
loope
push
retf
jmp
jg
pushf
imul
jbe
fwait
xchg
popf
xchg
dec
push
sbb
jp
mov
adc
dec
and
or
xchg
sbb
sub
(bad)
cld
out
(bad)
stc
iret
jg
pop
add
inc
mov
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
rcr
adc
dec
sbb
arpl
jmp
push
xor
iret
loope
dec
mov
arpl
xor
jecxz
repz
add
add
imul
jmp
into
sub
xchg
jmp
popf
test
mov
xlat
sub
xchg
mov
jmp
pop
pop
adc
jle
stos
nop
arpl
mov
or
scas
push
pop
pop
cmp
inc
mov
jmp
inc
aad
mov
sub
call
sbb
mov
cwde
jno
mov
add
fsub
jg
cmp
sbb
mov
mov
(bad)
add
jl
retf
sub
test
push
adc
pop
adc
xchg
adc
xchg
push
mov
in
rep
gs
fisub
inc
sub
push
jno
shl
xchg
mov
and
iret
sbb
mov
pop
das
and
or
jmp
mov
xchg
gs
stos
stos
aad
rcr
jns
sbb
xor
push
stos
not
jbe
ja
jb
or
test
or
sbb
add
clc
mov
sub
dec
xor
push
dec
mov
or
xchg
inc
mov
adc
in
lea
rol
pop
out
aad
or
xchg
(bad)
push
sub
bound
and
xchg
push
movs
hlt
xchg
mov
xchg
cmp
mov
fdiv
xor
ds
adc
sub
xchg
sti
add
call
push
rcr
ss
push
js
pushf
imul
popf
jno
push
add
dec
cmps
mov
movs
sbb
leave
std
shl
cdq
push
pop
sahf
test
cmps
out
neg
loopne
cdq
hlt
cmps
mov
mov
enter
sub
mov
dec
mov
cs
rcr
adc
dec
xchg
push
cmp
pop
pop
icebp
xor
xor
sub
mov
or
std
daa
dec
repz
out
dec
aas
and
or
pop
imul
nop
sub
das
loope
xor
dec
pop
fcmovnu
lea
push
mov
adc
aas
jae
ss
xor
ret
sbb
sti
and
or
pop
mov
in
(bad)
push
inc
arpl
inc
pusha
aad
pop
outs
jmp
fild
fsub
dec
xlat
rcr
fcomi
inc
not
push
test
pop
inc
sbb
rol
pop
push
rcl
out
sub
rol
daa
pop
add
int
lahf
shl
inc
add
popw
call
out
ds
nop
pusha
cmps
loop
mov
jp
dec
mov
cwde
or
fcmovb
fld
lock
mov
mov
dec
gs
repnz
int
ret
cmp
push
stos
je
iret
push
fidivr
xchg
add
aad
and
(bad)
xor
jno
popa
xor
les
retf
cmp
gs
cmp
push
iret
sbb
shl
into
mov
mov
jno
popa
sub
fwait
jmp
(bad)
shl
outs
sbb
int3
and
mov
int3
mov
daa
xchg
push
push
test
mov
mov
ins
int
cmp
inc
pop
jmp
xchg
mov
push
add
jle
jmp
iret
xchg
test
adc
fdivr
mov
repz
out
mov
jae
mov
es
sbb
jge
jnp
in
dec
xchg
(bad)
scas
push
(bad)
sbb
jnp
(bad)
xchg
xchg
add
fstp
dec
adc
rol
mov
adc
inc
fisttp
add
xor
idiv
add
inc
add
lods
xor
(bad)
ret
outs
ret
int
sub
lds
cmp
mov
test
gs
rcr
pop
lds
sbb
fdivr
jmp
movs
pop
bound
xor
xor
in
cs
scas
xchg
push
mov
sbb
aas
popf
pop
xor
jbe
pop
daa
jmp
jbe
repnz
call
fisub
adc
and
and
push
cmp
(bad)
mov
test
add
and
add
ret
or
or
dec
jp
out
das
ja
mov
sbb
iret
dec
jno
in
psraw
cmps
add
sysexit
pop
fs
fnstcw
mov
test
xlat
adc
and
stos
js
add
mov
sub
cmc
stos
out
retf
adc
leave
mov
sbb
les
repz
push
pop
(bad)
jno
inc
call
inc
int3
xchg
hlt
popf
push
adc
cdq
jl
js
jg
je
push
lea
popf
xor
sub
mov
cmp
pop
psrlq
jge
pop
in
daa
clc
sub
out
lahf
pop
loope
fist
ss
inc
sub
lahf
lahf
and
dec
das
lahf
not
je
mov
push
data16
or
out
mov
push
push
ret
test
(bad)
sub
sub
in
xor
mov
mov
cmp
sbb
sbb
pop
mov
sar
add
inc
sbb
push
sti
push
dec
in
mov
inc
sbb
inc
dec
dec
dec
mov
sti
(bad)
icebp
inc
mov
jbe
aam
cdq
mov
int3
repnz
jmp
mov
xchg
addr16
in
sub
xor
jmp
xchg
mov
inc
lds
movs
xchg
mov
lock
xchg
mov
shl
and
popa
xchg
jo
mov
aas
push
aad
fwait
int3
xchg
xchg
push
cmp
sub
rcr
daa
fisttp
jg
inc
pop
and
dec
adc
int3
xor
popa
ror
sub
stos
arpl
ror
jns
bound
aad
push
sar
push
adc
mov
imul
loopne
(bad)
add
add
pop
fs
hlt
mov
xchg
leave
jae
and
jge
sbb
(bad)
xchg
add
pop
and
popf
xchg
or
aam
aaa
in
jge
lahf
mov
sbb
push
cmp
cdq
push
and
mov
inc
push
test
sbb
mov
movs
scas
inc
outs
and
popf
popa
cwde
sub
test
inc
push
dec
not
cmp
in
mov
sub
aas
and
push
fwait
int
jbe
jb
clc
cmps
adc
sub
jns
xor
retf
mov
je
lahf
and
out
mov
inc
test
mov
mov
js
xchg
dec
inc
int3
dec
fmul
ja
pushf
test
cmp
or
lock
les
les
inc
mov
data16
adc
add
lea
sbb
sbb
lea
mov
int3
sub
mov
xlat
cmp
pop
push
icebp
loopne
mov
fwait
pop
ror
xchg
ret
jae
mov
arpl
lods
add
enter
test
(bad)
mov
xchg
je
add
pusha
arpl
pop
in
test
es
jg
fiadd
loop
dec
xor
inc
cmc
shl
xchg
sbb
adc
push
jo
popa
jmp
inc
or
inc
sahf
out
inc
fwait
movs
outs
(bad)
sbb
loopne
inc
jns
and
ins
arpl
mov
dec
scas
jnp
pop
(bad)
fwait
cmp
sar
jbe
pop
into
xchg
sub
mov
and
adc
and
dec
xchg
out
gs
mov
sbb
xchg
(bad)
dec
and
fwait
out
xchg
sub
ja
sub
pop
aad
add
aaa
ficomp
pop
imul
dec
inc
clc
push
dec
cmp
ins
js
inc
fwait
xchg
push
in
mov
sub
jmp
retf
call
cmps
rcl
inc
test
adc
mov
stc
or
mov
mov
mov
mov
adc
shr
outs
cwde
call
xlat
fcomp
int
xor
or
xchg
add
mov
xor
adc
xor
retf
or
fidivr
lahf
xchg
xchg
xchg
cmps
sub
adc
(bad)
in
div
push
hlt
movs
sbb
out
ds
out
lahf
jb
pop
out
xchg
xor
int3
xor
mov
or
jmp
lods
mul
std
mov
lock
retf
cmps
pop
push
push
sub
mov
xor
mov
xor
mov
test
jecxz
dec
sbb
inc
lahf
sub
xchg
(bad)
xor
jl
sub
dec
mov
jnp
call
dec
mov
xor
jl
add
or
ja
jmp
xor
inc
mov
repnz
aad
clc
push
(bad)
ficom
push
sbb
sti
pop
call
pop
push
and
jo
repz
xlat
fisubr
sbb
cmp
push
push
enter
dec
and
lahf
push
xchg
repnz
and
imul
sub
sti
xor
mov
mov
(bad)
mov
popf
mov
push
xor
ja
dec
jmp
sbb
call
js
mov
test
aad
test
dec
out
jmp
add
add
fcom
inc
mov
inc
lods
iret
in
dec
add
cld
fnstcw
or
pop
cli
mov
mul
cmp
xor
xor
cmps
cmc
ret
sbb
pop
cld
int3
lock
jge
jno
leave
mov
mov
cs
pop
adc
lock
and
popa
xor
pop
mov
daa
(bad)
jmp
mov
rcr
clc
or
sub
fisttp
jge
mov
jno
dec
push
xor
in
imul
clc
jmp
in
jnp
mov
sbb
sub
sbb
dec
sub
rcr
lods
cld
addr16
sar
lods
mov
dec
mov
into
fdiv
mov
inc
mov
adc
pushf
mov
hlt
or
push
and
popf
nop
ja
xor
popf
xor
loop
aam
push
jge
add
jns
mov
mov
mov
scas
ds
xor
ss
adc
jle
outs
imul
(bad)
mov
and
xchg
je
jp
xor
clc
shl
pop
xlat
pop
or
sub
not
xchg
fsubr
push
push
popa
fst
jle
mov
in
enter
cmp
sub
shr
outs
pop
leave
cmp
ret
scas
loope
jno
jg
int3
dec
sub
ret
aaa
jp
and
sbb
xor
push
cs
mov
sbb
icebp
add
or
xchg
imul
push
add
pop
adc
in
cld
xlat
xor
pop
aad
push
mov
in
in
aam
cmp
in
in
ins
and
(bad)
addr16
packuswb
dec
movs
mov
jp
dec
pop
xor
jmp
ror
cmp
ss
push
sub
sbb
in
sbb
sub
push
mov
outs
and
fistp
ret
loop
xor
xchg
ret
jecxz
repnz
stos
and
ret
inc
inc
mov
push
cmp
test
imul
paddusb
add
or
push
data16
jno
sub
jns
inc
cdq
sbb
mov
mov
sbb
in
push
dec
adc
mov
in
sub
arpl
add
(bad)
mov
jno
ins
jl
push
pop
mov
fdivr
js
stos
adc
sub
pop
sub
enter
sahf
and
jmp
push
xchg
fisttp
mov
cmp
aas
add
jl
push
ja
fdiv
mov
pop
cmc
push
jbe
in
pop
popa
ret
leave
mov
bound
jne
mov
xchg
movs
mov
into
cli
jmp
jmp
ret
int3
xchg
xor
mov
sbb
fidiv
shl
ret
mov
call
ds
or
mov
push
adc
retf
adc
add
sbb
push
add
cs
rcr
ss
add
retf
fsub
xchg
call
adc
xor
mov
outs
xchg
inc
call
shr
sbb
push
xchg
add
out
(bad)
xor
sahf
inc
bound
out
pop
dec
cld
sub
mov
leave
xlat
je
xor
sbb
add
mov
mov
(bad)
cld
(bad)
dec
addr16
mov
mov
rcr
adc
jno
sbb
inc
xchg
repz
adc
ins
adc
adc
(bad)
push
sbb
xchg
icebp
sub
mov
jmp
pushf
jle
inc
and
xchg
(bad)
int
jle
pop
in
cmp
adc
and
cmp
fdiv
pop
pop
arpl
and
inc
fdiv
cmovl
jg
nop
push
jmp
jecxz
xchg
pop
rcl
dec
loope
cwde
pop
push
mov
ja
daa
xchg
mov
or
sub
sbb
js
aaa
cld
nop
sar
std
in
ds
aas
and
inc
or
dec
dec
jno
mov
inc
fldcw
mov
pusha
xor
test
popf
xchg
stos
push
icebp
push
adc
cwde
daa
push
popf
jbe
pop
cld
out
scas
jg
out
loop
ja
aad
inc
out
or
cdq
push
sub
cmp
push
std
xchg
mov
fbstp
arpl
jno
jmp
jge
shr
push
in
imul
xchg
sub
mov
mov
xchg
fnstsw
outs
mov
jmp
das
push
ret
dec
dec
cli
inc
cmc
data16
out
pop
push
call
jl
mov
inc
xchg
push
and
sbb
inc
clc
pop
(bad)
movs
cwde
jnp
mov
cmps
lods
push
gs
pop
dec
fstp
scas
lahf
pop
lods
sub
mov
mov
rcl
inc
xlat
outs
jns
ja
jmp
call
es
dec
jmp
clc
retf
xor
addr16
cmps
rol
cdq
enter
cmp
test
mov
nop
sub
pop
sbb
pusha
leave
test
mov
sahf
jae
nop
shr
add
test
js
and
repz
subps
add
push
inc
bound
stc
mov
add
ja
pop
pop
push
push
adc
(bad)
mov
enter
iret
sub
popf
test
aaa
mov
and
cli
push
lock
(bad)
iret
mov
repnz
dec
mov
push
sbb
(bad)
mov
sahf
lea
inc
xchg
or
push
mov
sar
mov
cdq
sti
xchg
retf
test
mov
inc
mov
(bad)
mov
stos
(bad)
gs
enter
fistp
outs
std
jecxz
gs
xor
xchg
mov
lea
jg
dec
lahf
popa
and
lods
push
mov
push
(bad)
les
xchg
stos
aaa
mov
lea
or
mov
sbb
popa
hlt
sbb
daa
push
popf
out
cmp
mov
adc
mov
rcr
js
adc
inc
shr
xor
das
loopne
arpl
(bad)
sti
pop
or
(bad)
jne
xor
stos
lock
jecxz
xchg
inc
outs
cmps
daa
scas
scas
jmp
sar
outs
mov
xchg
mov
mov
inc
jo
mov
add
jge
sti
pop
in
xor
test
cwde
mov
push
in
ins
in
repz
movs
xchg
int
jo
inc
stos
sub
inc
ins
or
xor
in
jg
cli
in
pop
xor
inc
sub
aaa
inc
mov
rcr
dec
loop
neg
mov
mov
push
nop
dec
xchg
add
mov
retf
sbb
jle
push
jnp
cld
test
pop
hlt
(bad)
fiadd
int3
sbb
ret
rcr
js
xor
add
inc
mov
cmp
jae
scas
xor
mov
aaa
cwde
pop
test
xadd
in
mov
cmp
xchg
sub
stos
mov
inc
add
mov
movs
retf
repz
or
ins
sub
add
int
mov
cld
repz
aas
(bad)
cld
repz
jmp
sar
mov
adc
inc
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
rol
loopne
jae
fidivr
int
popf
fwait
out
jno
mov
ins
loop
cwde
into
jmp
sbb
cmps
fwait
jmp
sldt
(bad)
repz
ja
sub
in
cwde
enter
cmc
mov
cmp
mov
inc
ret
rcl
(bad)
arpl
xchg
call
jno
add
and
call
jge
inc
cmps
fisub
dec
ret
loope
mov
lea
fadd
imul
mov
mov
adc
cmp
cmps
fidiv
sub
mov
(bad)
cmp
mov
mov
aas
and
in
arpl
or
or
imul
push
scas
xor
lods
mov
cld
adc
add
sahf
and
inc
into
pop
cmp
cmp
sub
jge
popa
mov
ret
adc
and
mov
pop
or
sbb
add
int
or
sbb
sub
cmp
jmp
inc
jge
mov
or
daa
and
rcr
fs
add
adc
xchg
mov
add
dec
push
pop
pop
jae
sbb
or
mov
or
(bad)
nop
xchg
stc
jbe
cmp
int3
es
popf
pop
pop
mov
cmp
cmp
add
add
sti
div
cmps
scas
ds
icebp
pop
stc
add
mov
xchg
in
nop
cwde
push
retf
pusha
mov
add
movs
ret
cwde
jo
pop
mov
xor
add
gs
adc
(bad)
repnz
sub
cdq
push
xor
jb
repz
and
das
and
cwde
sub
std
stc
ins
leave
mov
leave
mov
mul
cdq
jae
imul
pop
mov
stos
fisttp
repz
mov
add
div
or
sub
(bad)
and
jl
enter
mov
mov
mov
std
pop
mov
mov
cmc
stc
mov
jo
movs
mov
pop
mov
inc
push
or
sbb
int
(bad)
out
retf
mov
daa
(bad)
xor
sar
retf
jae
data16
jno
cmp
shl
xchg
pop
jl
adc
repz
mov
(bad)
jl
out
push
and
shl
std
scas
or
pop
test
xor
test
fsubr
dec
push
mov
nop
adc
sti
or
jg
pusha
adc
in
cmp
in
shr
inc
mov
cmp
imul
movs
daa
fstp
js
jl
popa
rol
sub
movs
int3
sub
fwait
scas
ja
xor
sahf
test
push
cld
(bad)
(bad)
aam
add
push
adc
inc
not
test
arpl
add
mov
xor
and
hlt
(bad)
cmc
sub
sbb
or
leave
cmps
mov
stc
sti
cmp
add
dec
scas
jne
mul
sar
not
add
pusha
(bad)
aas
sub
mov
push
jno
leave
daa
in
jne
xchg
dec
push
(bad)
mov
(bad)
mov
inc
xchg
xsha256
cmps
push
pop
sub
jmp
lock
sbb
mov
aad
push
jle
(bad)
cwde
add
and
mov
scas
bswap
stos
(bad)
cwde
jmp
out
sbb
or
push
sar
icebp
inc
sar
or
xchg
mov
lds
lods
dec
jo
mov
sar
pop
mov
sbb
add
xchg
call
nop
imul
mov
popf
sub
jmp
cs
add
add
call
jb
(bad)
lahf
imul
loop
cld
sbb
outs
out
cmp
cmp
repz
sub
scas
cdq
js
mov
pop
iret
jo
mov
adc
test
mov
cmc
fnstsw
es
je
jl
jmp
hlt
xor
sar
lods
cmp
ins
xor
test
push
or
or
test
pop
lock
sub
fcomp
pusha
cli
xor
clc
xor
(bad)
aad
and
dec
adc
xor
out
jg
mov
mov
out
inc
jne
in
lea
and
add
mul
add
out
inc
ror
inc
fsubr
pop
(bad)
sub
lahf
mov
iret
movs
sbb
sub
mov
lahf
mov
(bad)
pop
push
nop
or
or
ja
xor
mov
aad
pop
mov
fsubr
mov
gs
add
cmps
call
in
test
pop
arpl
int
stc
pop
cmps
inc
es
dec
adc
jne
xchg
xchg
mov
vpaddsb
(bad)
or
adc
loop
adc
pop
ret
adc
in
rcr
cmp
std
cmp
jg
push
push
inc
retf
pop
mov
push
dec
cmp
repnz
xor
ret
xchg
or
out
or
dec
je
ds
sti
and
fdiv
jmp
xor
add
ins
add
shl
call
add
repz
pushf
test
cmp
xchg
in
mov
repz
fucomp
mov
(bad)
xor
pop
call
lahf
inc
inc
fstp
xor
inc
and
fucomi
enter
movs
in
pop
cmp
jg
aas
xchg
add
js
jne
dec
dec
scas
sbb
cmp
dec
pop
pop
adc
int3
xchg
jns
(bad)
cmp
dec
mov
aaa
popf
into
or
sub
loope
pop
xor
ret
ins
jge
out
loope
pop
add
out
add
mov
cmps
pop
sahf
push
cli
das
enter
sbb
dec
mov
jae
mov
lods
aad
and
pop
rcr
imul
aaa
jae
nop
cmp
bound
mov
test
repnz
xchg
ins
cs
adc
pop
bound
movs
sub
fadd
xor
xor
fidivr
shr
data16
and
fidiv
enter
into
leave
(bad)
cdq
movs
movs
mov
and
mov
xor
call
cmp
aaa
rcr
sub
push
sahf
sahf
pop
subps
(bad)
arpl
imul
adc
mov
enter
or
fidiv
pop
je
mov
xchg
jg
adc
xlat
mov
pop
jg
out
clc
cmp
and
mov
push
xchg
and
mov
sub
scas
test
sub
shl
pop
cmp
add
fnstsw
mov
ret
mov
pop
shl
shl
cmps
addr16
into
mov
icebp
icebp
cmp
push
lock
mov
cmc
push
ja
lea
aaa
jns
xchg
push
ret
iret
scas
into
xor
sbb
inc
popa
call
pop
cmps
in
jmp
xchg
aad
aas
icebp
sbb
imul
ret
into
push
mov
ror
fwait
mov
pop
mov
pop
fwait
push
aas
pop
pop
retf
iret
and
and
lock
add
mov
inc
fstp
or
xor
inc
xchg
fdiv
pop
shl
cmp
jbe
scas
or
popf
mov
cmp
push
sbb
ins
(bad)
retf
cmp
sub
sbb
and
mov
dec
aas
mul
lahf
sahf
aaa
rcr
ins
aas
push
data16
cli
les
sub
and
(bad)
shr
push
mov
addr16
in
lock
adc
xchg
neg
cli
sbb
inc
sbb
mov
push
cmp
scas
mov
dec
cmp
push
(bad)
icebp
xchg
jmp
mov
push
sub
sub
push
into
scas
stos
lds
xor
mov
mov
or
out
fdiv
fcom
xor
outs
push
imul
in
lods
loope
jl
lods
cli
dec
dec
cmps
arpl
imul
int
test
jbe
icebp
pop
xor
gs
fs
stos
imul
inc
daa
mov
jno
add
into
push
sub
mov
inc
cmp
adc
dec
ins
or
fist
leave
push
stc
mov
jecxz
cmp
adc
mov
mov
adc
pop
idiv
adc
xor
(bad)
mov
inc
std
bound
adc
aam
or
mov
add
pop
inc
out
mov
inc
add
pusha
cmp
xchg
pop
sub
pop
sbb
mov
sub
mov
ss
add
scas
mov
sbb
sub
shl
dec
(bad)
push
pop
scas
in
inc
mov
add
adc
inc
sar
fld
sub
sahf
daa
push
icebp
cmc
(bad)
cmp
mov
add
test
inc
jg
in
and
mov
adc
les
pop
adc
out
pop
inc
mov
ds
cs
add
test
ja
ss
and
sbb
add
ins
loope
mov
adc
(bad)
mov
cmc
call
cmp
ins
cmp
xchg
inc
jmp
mov
fwait
call
(bad)
stc
and
out
dec
retf
fistp
push
in
hlt
fist
and
mov
dec
movs
push
sti
repnz
cmps
xor
jno
ss
loop
mov
stos
and
sbb
test
jbe
std
arpl
popa
jmp
cmc
mov
mov
xchg
cmp
and
inc
loope
push
outs
div
mov
aad
inc
rcl
pop
pushf
out
fwait
clc
fdivrp
kandnw
pop
jl
js
call
pop
imul
mov
lds
sub
scas
sub
sahf
jb
adc
pushf
jp
je
imul
mov
mov
xor
scas
inc
les
pop
outs
push
ror
sub
xor
lods
dec
pop
loopne
lahf
mov
pop
icebp
mov
jb
xor
sub
inc
add
call
nop
(bad)
leave
cdq
jl
imul
scas
pop
xchg
xchg
dec
ret
pop
jne
and
jp
sbb
xor
into
in
(bad)
cwde
cmp
popa
lods
imul
arpl
mov
adc
shl
jle
div
(bad)
mov
mov
pop
sub
ret
sbb
jbe
pop
das
in
jo
out
ja
add
push
clc
out
and
jbe
icebp
dec
or
cmp
dec
cmp
cdq
push
jb
loope
div
inc
sbb
sbb
hlt
mov
movs
cmps
dec
ss
cmp
jmp
adc
add
fcmovne
pusha
xlat
xor
push
and
add
mov
fs
jle
mov
mov
push
jae
sbb
sar
ror
mov
and
inc
lods
adc
cmp
sbb
add
jmp
add
out
mov
pop
mov
or
pushf
(bad)
test
jae
test
jne
mov
push
push
(bad)
mov
dec
into
pop
dec
sar
cmps
inc
push
inc
dec
push
cmp
movs
push
scas
or
in
add
or
outs
xor
mov
sbb
add
imul
fidiv
pop
ret
das
mov
scas
dec
scas
pop
jmp
nop
dec
sub
mov
(bad)
lods
jb
sbb
push
icebp
test
jmp
sub
dec
jbe
aas
mov
push
fidivr
xor
mov
(bad)
fwait
hlt
inc
cmp
sub
rcl
cmp
sahf
mov
cld
sar
ret
psadbw
sbb
push
test
das
jne
push
jnp
mov
cld
hlt
sbb
sbb
sbb
xchg
into
test
jno
push
add
sbb
inc
aam
mov
fistp
xor
out
and
mov
xor
pop
xchg
or
dec
out
adc
pop
cld
xor
pushf
pop
cmp
vpermw
adc
adc
fcmovnb
or
pop
and
ret
mov
xchg
or
sbb
mov
retf
push
fbld
mov
fstp
adc
in
xchg
test
push
loope
and
(bad)
movs
jb
loopne
aas
aaa
dec
leave
daa
dec
movs
test
push
mov
sbb
xor
add
cli
shl
sbb
mov
xchg
dec
dec
add
dec
sbb
repz
jae
mov
sbb
xor
and
cmc
push
push
(bad)
sub
dec
jbe
repnz
icebp
lds
mov
outs
es
sar
sbb
les
lods
mov
aas
bound
mov
jl
ins
mov
cmc
dec
adc
js
inc
call
daa
and
xlat
stos
push
call
dec
scas
mov
movs
loopne
xchg
sti
sub
mov
fisub
jnp
in
jle
mov
mov
inc
movs
push
mov
mov
ret
jo
mov
vmread
dec
gs
xchg
(bad)
mov
test
push
imul
or
shr
mov
and
adc
inc
ins
ins
ds
sbb
retf
sbb
into
ficom
xchg
push
mov
es
addr16
and
xchg
lock
sbb
(bad)
je
pop
and
out
inc
mov
bound
xor
stc
fild
scas
mov
jge
enter
and
cmp
sub
dec
fcmovbe
aaa
aad
imul
mov
pop
pop
pop
test
jne
dec
out
clc
adc
ret
fild
daa
pop
retf
mov
imul
fnstsw
pop
std
cmp
mov
inc
push
cdq
jmp
jp
push
enter
adc
xor
mov
jne
call
inc
inc
std
out
stos
out
mov
jecxz
cmp
mov
fist
stos
dec
pop
mov
push
pop
ja
(bad)
xor
call
lods
inc
bnd
stc
add
dec
es
or
jo
xchg
jns
mov
retf
cs
fs
jo
push
push
and
sub
xor
dec
add
imul
push
mov
fwait
xchg
xlat
inc
mov
push
ins
mov
pop
mov
std
sub
aad
in
shl
mov
loop
mov
sub
mov
xchg
mov
cmp
xchg
mov
in
cmp
mov
sbb
scas
jb
and
lods
mov
dec
inc
dec
loope
and
movs
add
pushw
dec
outs
ins
or
jne
xchg
or
nop
jp
test
ds
xor
scas
sti
(bad)
loope
loopne
fcom
pop
fild
push
clc
mov
bound
inc
inc
mov
repnz
out
iret
sub
icebp
cmp
push
adc
aad
out
call
clc
sbb
lahf
repnz
mov
sub
xchg
ror
repz
iret
jle
mov
mov
mov
aaa
pop
cmps
mov
xchg
jle
lods
dec
lods
mov
or
jns
jl
sub
mov
xor
cli
jl
lods
fcmovb
mov
pop
repnz
xchg
xchg
xchg
test
mov
fsubr
mov
jmp
cdq
ins
(bad)
outs
jno
shr
scas
pop
imul
adc
stc
(bad)
mov
ja
icebp
div
cli
cmps
cdq
repz
stc
fdiv
popa
loope
test
fdivr
adc
dec
push
jl
and
stos
ins
repz
xchg
mov
out
push
jle
jno
loope
pop
sbb
enter
lods
mov
daa
xchg
inc
sbb
or
rcl
out
leave
cld
xchg
frstor
aaa
in
out
dec
inc
jo
int3
add
loope
outs
(bad)
call
outs
cmps
xor
push
movs
call
xchg
pop
mov
movs
ins
outs
jnp
cmc
(bad)
cmp
jg
les
hlt
test
mov
aas
cmp
inc
inc
rcr
dec
or
mov
in
es
push
xchg
push
shl
inc
add
aaa
cwde
or
fldenv
push
fwait
les
cmp
out
(bad)
stc
iret
jg
repz
jmp
sar
clc
mov
cmps
ins
sub
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
(bad)
gs
adc
xchg
rcr
popf
inc
inc
jp
bound
lea
mov
bound
rcr
and
sub
sbb
push
aaa
or
cmp
or
and
adc
cdq
mov
call
call
mov
add
add
xchg
lahf
dec
mov
int
into
jno
mov
xchg
int
sbb
movs
loopne
adc
pop
push
fadd
addr16
or
xlat
movs
inc
je
mov
ins
inc
(bad)
lods
dec
(bad)
cmp
push
inc
xchg
fcmove
or
stos
xor
pusha
fidiv
mov
sbb
popf
(bad)
(bad)
fsub
cdq
rol
loope
ins
dec
dec
lds
mov
stc
lods
jp
loopne
mov
retf
(bad)
jecxz
mov
xor
in
aad
sbb
mov
jae
sub
cwde
mov
pop
or
sbb
add
addr16
cmc
jb
and
dec
or
ins
cdq
nop
push
(bad)
mov
stos
rol
dec
test
daa
clc
xor
jmp
ficomp
outs
inc
mov
mov
je
lock
enter
mov
mov
mov
idiv
pushf
(bad)
fcomp
(bad)
not
inc
xor
add
mov
adc
mov
and
jge
(bad)
pop
retf
lock
jecxz
mov
jecxz
test
dec
adc
ja
and
cmp
retf
popa
ss
stos
mov
in
shr
mov
or
dec
inc
aas
stos
mov
xchg
icebp
mov
fsub
lods
stc
xchg
adc
cmp
jo
(bad)
push
push
adc
scas
ja
cmc
aad
fwait
sysenter
mov
cmp
inc
mov
push
cmp
xchg
fdivrp
test
xor
popa
pop
jo
pop
push
push
sub
fnstenv
out
mov
scas
mov
retf
arpl
and
inc
xchg
rcl
call
mov
inc
cmc
cmp
scas
data16
das
mov
cmc
pop
fisubr
cmp
stos
in
add
jg
clc
or
cs
bnd
in
pop
pop
aam
jmp
pop
or
mov
cmp
cmp
xchg
(bad)
pop
(bad)
or
fistp
inc
mov
sbb
shl
rol
mov
add
lock
mov
push
mov
adc
pop
call
clc
(bad)
fwait
push
shr
outs
cs
ret
out
ficomp
sbb
(bad)
jmp
xor
jecxz
adc
clc
addr16
pop
add
popf
outs
cmp
int3
mov
loopne
pop
xchg
xchg
hlt
jne
mov
mov
fbld
and
mov
inc
add
xor
pop
into
jae
aaa
movs
daa
rcr
pusha
and
lea
test
fdiv
push
and
push
test
scas
or
inc
sub
jns
outs
(bad)
mov
sti
adc
repnz
xchg
jnp
xchg
in
mov
xchg
sbb
dec
pop
cmp
in
sbb
inc
pusha
add
pop
push
push
cdq
ins
nop
aam
pop
or
shl
add
or
shr
add
push
fidiv
dec
pop
sub
aad
movhlps
mov
pop
cmp
cli
aas
pop
int
out
adc
sub
dec
pop
and
lods
and
test
push
das
das
xlat
sbb
outs
pop
sbb
out
push
or
jle
mov
mov
shl
push
bound
clc
jge
outs
mov
sbb
je
ins
jne
popa
mov
xor
fcmovne
gs
xchg
xor
fwait
ror
js
cwde
mov
icebp
jae
adc
cmps
(bad)
iret
pop
nop
jmp
mov
test
adc
mov
ficom
loopne
mov
mov
test
(bad)
sbb
jae
div
add
add
stc
jno
jge
fcmovbe
mov
fucomi
hlt
aas
(bad)
push
cmps
mov
hlt
daa
cmp
jae
daa
dec
pop
cmp
aas
dec
sub
fs
aas
popa
mov
push
mov
mov
jne
fisubr
jecxz
aam
adc
pop
inc
xchg
pop
xchg
pop
call
lods
pop
xor
test
mov
fsubr
movs
(bad)
and
mov
mov
dec
push
(bad)
sub
add
adc
pop
stos
xor
imul
sub
cmp
loop
pop
jae
jecxz
pop
push
iretw
gs
lock
cmp
(bad)
test
mov
or
scas
adc
and
dec
jmp
cmc
stos
out
sbb
movs
jb
lahf
and
pop
push
mov
les
movs
adc
xlat
mov
mov
add
ss
sbb
out
out
push
pop
movs
mov
rcr
jbe
sub
cmp
out
movs
cmp
in
test
cmp
mov
vpunpcklqdq
ins
int
or
test
adc
ja
or
adc
jecxz
sbb
(bad)
push
(bad)
(bad)
popf
push
add
inc
mov
or
jmp
sub
inc
add
(bad)
jg
fiadd
in
sti
mov
push
xor
add
int3
mov
frstpm(287
bound
repnz
cmp
and
and
call
sbb
sub
sar
add
pop
xchg
into
loopne
in
mov
cmp
mov
sub
out
mov
or
iret
bound
stc
hlt
into
sbb
cmp
adc
cmp
pop
mov
or
xor
mov
jnp
inc
and
and
int
fld
sti
add
lds
int3
fld
fadd
mov
or
dec
fnstsw
ret
test
push
push
pop
shl
adc
xlat
mov
adc
loopne
iret
xchg
pop
fidiv
mov
out
dec
jnp
mov
das
scas
mov
jno
data16
sub
sti
sbb
jmp
xchg
pop
push
sbb
dec
dec
inc
cli
pop
mul
cwde
loop
mov
movs
jge
(bad)
iret
imul
jnp
add
daa
pop
mov
pop
xlat
adc
rol
add
mov
mov
or
out
xor
lods
and
call
sbb
stos
pop
js
adc
jbe
test
test
test
repz
addr16
push
(bad)
cld
and
push
and
mov
and
xchg
xchg
push
mov
fisubr
and
iret
loop
sbb
mov
xchg
xchg
cmp
add
out
cmp
sbb
(bad)
out
mov
sar
and
aaa
bound
ja
dec
jbe
add
xlat
shl
idiv
stos
les
pop
repnz
arpl
aas
cmp
inc
shl
cmps
pop
cmp
dec
sbb
mov
out
mov
sbb
in
outs
add
push
in
and
push
xchg
push
or
mov
pusha
xchg
mov
fcom
cmp
mov
xchg
inc
loope
xchg
inc
ret
inc
jle
cdq
ss
cdq
xchg
movs
sub
mov
push
shl
cmp
in
xchg
es
lahf
adc
shl
stos
ret
cld
out
and
mov
push
fidiv
mov
pop
cdq
mov
fwait
sub
mov
(bad)
jmp
jg
mov
mov
aam
sbb
mov
inc
dec
pop
outs
or
mov
and
fst
pop
pop
rcl
sub
jbe
ror
inc
(bad)
scas
cmps
mov
pop
cmps
into
cmps
and
std
imul
mov
push
sbb
ins
dec
add
or
add
repnz
js
mov
sub
inc
cs
sar
ficom
lods
and
mov
repz
mov
movntps
cmps
popa
dec
pop
cmc
or
mov
dec
cmp
das
jl
fsub
sub
dec
and
repnz
jecxz
or
cmp
stos
xchg
and
sub
pop
ror
and
retf
lds
movs
jns
mov
jae
mov
add
mov
inc
repz
add
pop
inc
push
add
mov
push
in
call
pop
rcr
ins
xchg
jns
inc
and
add
jns
xchg
out
mov
inc
imul
mov
pop
inc
inc
jmp
sti
or
jg
jae
push
sub
inc
push
cmc
jne
mov
rol
repz
test
(bad)
cli
xchg
pop
inc
inc
arpl
fs
inc
shl
ins
mov
mov
pop
xor
ret
std
xor
shl
jmp
mov
adc
pusha
sar
xor
mov
sub
shr
hlt
call
jmp
cmp
mov
push
xor
push
jb
dec
inc
outs
imul
and
jb
ret
fcomp
xor
fsubr
pop
sbb
jge
test
mov
cmp
mov
cmp
rcr
scas
out
mov
loope
neg
pop
lahf
(bad)
int3
or
mov
mov
adc
adc
stos
mov
mov
cmc
popa
xor
mov
bound
add
(bad)
ins
fiadd
mov
out
pop
and
ret
shl
cmp
add
arpl
mov
inc
mov
mov
push
xchg
iret
test
stos
xchg
or
sub
ret
jl
dec
xchg
test
dec
adc
js
iret
loop
inc
in
loop
push
enter
iret
mov
fwait
pusha
retf
pop
push
and
mov
xchg
push
mov
jmp
jne
dec
sbb
xlat
jg
xchg
ror
mov
(bad)
sbb
cmc
jmp
jge
add
(bad)
fnstcw
and
mov
scas
add
inc
icebp
sub
push
xor
push
pop
lods
ds
fdiv
jp
sbb
shr
inc
and
mov
dec
mov
lods
cmp
xlat
stc
test
ret
aaa
lods
ficomp
fcomp
xlat
les
ss
cmc
xchg
sub
bound
inc
retf
adc
push
mov
(bad)
xchg
outs
sbb
xchg
ds
sbb
pop
pop
pop
sub
ss
(bad)
je
add
test
lods
je
xchg
pop
push
aad
sbb
popf
jmp
cmp
sbb
xor
mov
ror
rol
sbb
into
and
stos
cmp
and
add
pop
jmp
or
or
mov
inc
xchg
adc
mov
cwde
add
lock
sub
imul
ror
adc
mov
stos
scas
mov
mov
mov
cmp
adc
(bad)
in
mov
or
imul
or
mov
retf
inc
push
cmp
jl
and
mov
clc
frstor
repz
ds
add
clc
sbb
test
test
add
mov
clc
and
cmp
cmp
pushw
mov
shl
and
loope
mov
jecxz
jbe
xchg
pop
xchg
mov
and
and
retf
and
sti
test
jmp
sbb
out
loope
rcl
and
sub
into
retf
mov
mov
rol
nop
retf
add
jl
mov
call
sbb
push
enter
pop
sub
inc
push
mov
pop
mov
and
aad
xchg
dec
fwait
inc
enter
xchg
mov
sti
aam
int3
and
xor
retf
mov
cli
jmp
and
test
mov
mov
inc
movs
cs
jmp
pusha
mov
(bad)
call
aam
inc
and
or
cmp
aam
and
ret
add
adc
add
add
out
daa
(bad)
repnz
and
push
sub
xchg
es
add
adc
ret
es
mov
cmp
jg
lea
enter
cmp
jmp
mov
loopne
xchg
stos
mov
fidiv
adc
mov
dec
sbb
fs
outs
(bad)
cmp
pusha
test
cmp
xchg
daa
cmp
repz
or
and
sub
adc
dec
pop
jnp
dec
movs
add
mov
push
dec
mov
scas
mov
add
jne
jnp
int
sub
cmp
xchg
call
lds
jle
in
js
mov
fwait
inc
mov
stos
inc
repz
xchg
xor
pop
retf
mov
fwait
mov
mov
add
sahf
test
int
mov
ja
cli
imul
fs
dec
ficom
lahf
push
int
xor
and
pop
pusha
pop
mov
out
addr16
dec
daa
ja
rcr
mov
div
xchg
ret
out
and
stos
mov
push
dec
xor
test
in
push
adc
icebp
sti
add
add
enter
(bad)
mov
imul
mov
test
push
mov
push
adc
outs
mov
sub
pushf
mov
jge
arpl
sbb
icebp
aaa
or
pusha
pop
aad
into
out
jo
into
adc
stos
mov
jge
lock
sbb
shl
imul
dec
enter
add
js
mov
push
jp
add
add
repnz
leave
je
mov
cmc
xchg
lods
cs
sahf
stc
pop
pop
cwde
jb
fucomi
mov
add
mov
out
adc
inc
mov
imul
cdq
scas
cmp
inc
sub
loopne
xor
out
xchg
dec
push
inc
loop
sbb
jge
mov
test
aas
mov
nop
cld
mov
call
sbb
aad
pop
xor
imul
or
outs
sub
or
fiadd
mov
sar
push
js
add
mov
fsub
fisttp
mov
icebp
xor
xchg
jecxz
xor
test
sub
scas
scas
and
xchg
test
or
mov
mov
nop
pop
xchg
retf
sbb
cdq
xchg
mov
mov
sub
jno
ins
ret
lods
loope
inc
les
in
adc
mov
aad
adc
pusha
neg
rcr
mov
and
and
mov
hlt
pop
dec
pop
(bad)
out
xor
mov
mov
loopne
aam
add
scas
cli
add
lock
mov
or
ret
lods
sahf
rcr
(bad)
mov
cs
int
mov
xor
retf
pop
cld
sub
xchg
add
mov
jmp
mov
sub
or
fsub
push
clc
inc
arpl
fild
pop
pop
lods
mov
jl
dec
dec
mov
jns
out
sub
push
popa
dec
aas
push
jge
xor
jnp
rcl
call
and
fcom
push
ja
rol
push
mov
in
mov
sbb
pop
push
stos
and
xchg
add
not
add
sub
xchg
dec
push
xchg
imul
and
aad
push
pop
jmp
sub
jge
movs
inc
mov
mov
aaa
add
xchg
cld
pop
daa
add
ja
inc
xor
xchg
xor
ret
xor
jmp
das
cmp
push
popf
fidivr
aam
pop
repz
out
or
inc
lahf
push
nop
jg
xchg
stos
jg
jecxz
movups
mov
adc
cmp
ret
cwde
mov
jae
or
outs
pop
add
cdq
es
inc
shr
(bad)
add
push
sbb
cmp
rol
ret
mov
(bad)
popa
jle
sbb
or
sbb
ins
cdq
dec
pop
scas
aas
xchg
mov
inc
jg
mov
sub
fld
daa
sub
out
mov
int
out
push
inc
out
push
adc
xor
inc
mov
std
push
and
jnp
(bad)
mov
inc
ror
jecxz
pop
out
cmp
jmp
retf
(bad)
not
js
push
sub
sub
pop
call
pop
fstp
loopne
or
aam
xchg
sbb
pop
hlt
xchg
out
repnz
in
mov
jg
rcl
(bad)
ds
loopne
ins
pop
mov
jmp
jbe
mov
popa
ret
dec
inc
mov
cdq
stos
mov
test
daa
sar
popa
cmps
loopne
adc
aas
(bad)
cld
repz
aas
(bad)
cld
repz
jmp
sar
xor
fistp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jg
(bad)
hlt
dec
pushf
cwde
out
cmp
jmp
jmp
int
dec
pop
data16
jnp
fstp
xor
cmps
cmps
fwait
test
add
daa
mov
test
js
pop
dec
inc
cmp
gs
sub
push
(bad)
mov
jle
or
adc
xor
mov
not
dec
dec
mov
xchg
sub
popf
pop
mov
in
sub
lods
loope
sbb
scas
pop
sahf
mov
je
dec
cs
or
push
inc
sub
pusha
das
mov
inc
inc
dec
(bad)
or
aam
dec
dec
ret
in
sub
sub
adc
or
or
and
jmp
push
inc
fistp
iret
fisttp
jecxz
mov
cmp
sub
adc
jmp
imul
xchg
mov
test
repnz
inc
xchg
popa
xchg
xchg
and
xchg
jp
ss
mov
dec
mov
enter
(bad)
movs
push
call
xchg
lea
mov
scas
mov
or
inc
pop
mov
or
inc
aam
ja
shl
fild
push
sub
shl
or
cmp
mov
mov
and
mov
or
mov
bound
push
pop
jae
loope
fs
out
icebp
stc
dec
xor
aam
shr
bound
sbb
sub
lods
in
jbe
(bad)
pop
inc
sbb
cld
cld
data16
sahf
fadd
pop
cmc
xchg
sti
cmp
in
ficomp
movs
cmps
push
sub
xor
aas
push
push
xor
add
das
sub
(bad)
mov
jnp
hlt
dec
test
fstp
adc
add
sbb
bnd
and
pop
in
dec
and
in
(bad)
(bad)
dec
arpl
arpl
jmp
push
jge
jo
cmp
loopne
cmp
stos
(bad)
iret
mov
mov
push
or
fdiv
shr
(bad)
jg
pop
(bad)
aam
(bad)
fisttp
sub
jae
sbb
push
dec
jnp
dec
pop
imul
es
dec
inc
lods
popf
mov
inc
imul
or
stos
cld
into
jno
cdq
cdq
adc
fcomp
add
mul
cmc
mov
stc
retf
data16
jno
imul
cmps
pop
fwait
mov
daa
cmps
mov
sub
lods
and
jbe
mov
(bad)
dec
call
jb
dec
(bad)
int3
nop
jg
clc
loop
jge
sbb
shl
shl
mov
pop
xchg
loop
pop
test
sbb
(bad)
xchg
leave
mov
sub
mov
enter
push
ins
fmul
rol
sti
imul
(bad)
aam
call
pop
ins
rcr
das
(bad)
out
je
out
fsubr
fnstenv
es
sub
jl
les
mov
shl
mov
mov
xor
cmps
pop
xchg
xchg
cmps
leave
jl
inc
fiadd
les
sub
cli
ffreep
xchg
lods
mov
or
mov
retf
or
not
cmps
and
imul
adc
rol
sbb
mov
jb
cmc
imul
push
js
pop
call
iret
adc
pop
jmp
or
inc
pop
jo
push
cmp
fst
mov
stos
ds
sbb
inc
ins
add
xor
jg
push
test
or
jg
adc
outs
push
jl
in
sahf
scas
xor
cmps
jns
inc
(bad)
loope
outs
and
sahf
xchg
ss
outs
(bad)
mov
inc
mov
not
mov
cwde
repz
in
stos
xchg
push
cmps
ins
scas
out
push
mov
push
jne
mov
addr16
and
sub
imul
or
or
fwait
sbb
rcr
jmp
js
jl
push
popf
sbb
sahf
movs
push
push
and
mov
add
cmc
mov
das
xor
outs
cmp
fdivr
out
pop
cld
pop
ds
xor
inc
push
mov
movs
jbe
mov
add
mov
cmp
icebp
inc
jmp
dec
lods
outs
(bad)
adc
enter
push
xchg
pop
sbb
cmp
sahf
dec
mov
pop
inc
js
xor
jb
pop
fisttp
mov
std
ret
cwde
lds
ja
out
inc
and
cld
cmps
test
adc
ret
jp
pop
pop
lahf
cld
push
inc
ret
push
and
jmp
push
bound
rcr
aad
cmp
push
pop
inc
xchg
out
out
and
neg
xchg
sbb
fs
add
je
pop
mov
and
cmps
xchg
stc
call
jb
xchg
out
xchg
adc
and
aam
clc
cli
jns
inc
sti
nop
pop
mov
ror
mov
jmp
xor
inc
mov
int3
fs
xor
out
sbb
cwde
fdiv
add
outs
xchg
repnz
(bad)
les
sbb
in
push
jns
nop
jg
dec
test
scas
mov
and
into
dec
ret
rol
jge
inc
inc
jbe
loop
js
aam
and
xchg
adc
shl
sti
inc
mov
push
add
add
lock
cmps
cdq
movs
dec
mov
pop
mov
xor
test
jns
xchg
js
sbb
fld
repnz
sbb
sub
inc
push
xor
and
into
add
jb
xor
xchg
shr
lods
push
in
into
ins
mov
cmps
jne
aad
mov
and
jl
add
and
sahf
cmp
and
clc
loope
loope
push
mov
ins
inc
lods
jae
or
mov
mov
xchg
lods
cld
bound
xor
mov
imul
hlt
shr
out
ds
jno
icebp
mov
xchg
jne
pusha
dec
std
adc
bound
arpl
cwde
popf
xchg
mov
rol
and
inc
xchg
outs
int3
xchg
shr
dec
out
repz
sub
pop
loope
sbb
add
push
and
(bad)
clc
in
xchg
mov
xor
mov
frstor
and
int3
or
add
bound
inc
aaa
rol
inc
pop
jae
aaa
xchg
rol
(bad)
pop
or
aaa
cmc
pop
xchg
push
mov
pop
aad
jns
xchg
xchg
inc
jge
mov
je
out
mov
and
mov
inc
loope
aam
mov
sbb
pop
adc
in
into
xchg
inc
ret
cwde
lea
cmp
pusha
lock
adc
mov
(bad)
scas
add
dec
daa
popf
loope
iret
loope
ror
shl
dec
fst
add
adc
xlat
aad
scas
iret
fsub
adc
push
xchg
sub
ret
imul
(bad)
lahf
inc
add
and
ja
sahf
cmp
fcomi
or
es
fimul
jno
and
jnp
dec
jno
and
push
imul
xor
add
sub
mov
fdivrp
popf
xor
dec
xchg
xchg
call
out
and
sbb
push
adc
sti
adc
or
test
ins
pop
pop
add
out
enter
mov
aad
inc
inc
jmp
je
push
das
inc
loope
jae
in
les
mov
lahf
div
stc
sbb
add
out
and
outs
cs
xchg
repnz
jae
cmc
enter
mov
inc
js
enter
(bad)
pop
jo
dec
xchg
mov
jmp
sahf
cmp
idiv
in
pop
aad
jo
in
sahf
pop
xchg
cmp
sbb
aad
mov
scas
call
fcom
xor
sbb
push
push
shl
cli
idiv
movs
and
lahf
add
ret
shr
sahf
mul
neg
out
cwde
cmp
outs
addr16
jae
sub
add
mov
(bad)
test
test
sub
push
enter
scas
xor
mov
jne
(bad)
shr
push
mov
xor
sti
stos
lock
jge
loope
leave
jne
fcomp
sbb
jg
cmp
movs
add
pop
ror
pop
pop
in
lods
add
and
jb
push
lods
sub
(bad)
cmps
sbb
pop
dec
js
outs
sti
loope
out
sub
sub
push
call
cmp
(bad)
cmc
adc
pop
ret
pushf
push
xchg
ret
(bad)
int
mov
(bad)
call
sti
hlt
xchg
push
cmps
sar
push
fistp
test
stos
sti
push
ret
int
ret
arpl
lock
cmps
lock
icebp
sbb
bnd
daa
test
mov
out
or
ja
cmp
pop
lods
test
ds
outs
pop
add
int3
out
push
jmp
aas
lahf
ret
test
pop
test
(bad)
jl
fcom
jne
xchg
jno
jnp
add
(bad)
push
leave
jbe
movs
rol
jl
inc
jle
int
out
jge
ret
pop
xor
mov
mov
sub
iret
sbb
lds
retf
mov
rol
pop
cs
and
and
inc
movs
retf
cld
jge
xchg
and
icebp
arpl
or
mov
lods
ins
repnz
inc
loopne
mov
cmp
cmp
mov
jnp
cmps
stc
fcmovne
rcr
iret
jl
pushf
ja
jmp
iret
(bad)
jns
push
(bad)
loop
fldcw
cmps
call
cld
xlat
jmp
xchg
out
inc
jno
imul
iret
pop
jle
inc
fwait
add
push
out
sub
test
mov
add
(bad)
jmp
sar
repz
fdiv
aad
scas
and
adc
pop
out
pop
js
(bad)
stos
aad
cmp
and
mov
push
or
jbe
sub
dec
imul
jmp
and
ret
les
sbb
lds
dec
jne
lds
cmps
pushfw
mov
fld
jae
or
std
lock
inc
test
dec
sbb
stos
add
jle
mov
pop
mov
xor
stc
adc
adc
inc
mov
and
or
jbe
mov
xchg
push
cld
loop
aaa
adc
cmp
ins
lods
xor
ret
or
mov
pop
sahf
ret
(bad)
jbe
cdq
repz
dec
inc
mov
xchg
loopne
jl
push
adc
sub
out
leave
mov
or
xor
adc
repz
adc
cmp
xchg
pop
cwde
(bad)
(bad)
pop
and
repnz
(bad)
mov
mov
out
rcl
ret
sub
dec
cmp
pop
mov
mov
pop
or
xchg
sbb
ins
stc
xor
ja
or
fsubrp
dec
sbb
ins
xchg
push
jmp
loope
shl
retf
cmp
faddp
cmps
pop
call
jae
scas
out
fwait
xchg
cmp
pusha
mov
cmp
jl
sbb
rcr
outs
aaa
addr16
cvtps2pi
sub
pop
or
fdiv
mov
mov
adc
(bad)
pop
sub
jge
mov
xor
int3
inc
out
sbb
lock
mov
(bad)
cmp
nop
into
sub
sub
sub
das
inc
cmp
ja
test
add
mov
adc
adc
call
jno
sbb
lods
adc
ja
fisttp
nop
(bad)
stos
das
push
push
cmp
adc
mov
pop
(bad)
cwde
retf
bound
pop
out
jne
dec
pop
sbb
xor
ins
(bad)
mov
(bad)
cld
ins
inc
sbb
jg
mov
sbb
in
imul
(bad)
jl
jbe
outs
dec
mov
repz
cwde
jnp
sub
cmp
xor
mov
loopne
sub
int3
adc
and
cmps
pop
ins
inc
call
xchg
mov
sbb
add
jecxz
jmp
loopne
cld
and
(bad)
imul
fs
inc
and
sbb
adc
inc
sti
hlt
test
into
push
stc
dec
imul
movs
outs
call
out
movs
dec
mov
lahf
imul
inc
or
xor
mov
and
mov
mov
push
jmp
stc
dec
test
sti
pop
cmp
dec
jb
in
dec
jb
inc
jae
rcl
test
inc
and
rol
fdiv
cmp
fstp
imul
jno
or
or
addr16
or
les
mov
or
cli
mov
sbb
(bad)
sub
inc
push
not
in
rcl
push
test
xchg
inc
xlat
sub
sbb
fisttp
movs
xchg
mov
fwait
repz
jle
stos
ret
leave
inc
inc
xchg
in
and
mov
(bad)
in
pop
or
sub
mov
push
cmps
cmp
push
pushf
sti
mov
push
mov
sbb
mov
std
jno
sub
cmp
jecxz
inc
inc
dec
stc
out
pop
stos
pop
dec
push
(bad)
mov
int3
hlt
or
imul
xchg
or
jp
(bad)
xchg
movs
or
mov
bound
adc
icebp
jmp
das
push
push
call
ror
xor
lea
imul
push
sbb
add
xchg
int
test
sub
rcl
test
loope
and
mov
sar
loope
mov
xor
stc
data16
cmp
pop
mov
pop
mov
dec
jecxz
xchg
pop
xor
cdq
(bad)
xlat
fisubr
out
jp
fsubr
cs
or
add
jmp
fisttp
xchg
dec
inc
fmul
xor
cdq
push
(bad)
xchg
(bad)
fnstenv
dec
fnsetpm(287
cmp
dec
fst
lods
popf
stos
pop
das
mov
hlt
js
(bad)
aad
shl
lahf
mov
sub
and
daa
popfw
out
aaa
inc
stc
daa
cmps
adc
xchg
inc
pop
lock
jecxz
add
cmp
scas
jl
ret
fnsave
push
lods
(bad)
sbb
(bad)
scas
mov
call
mov
mov
dec
sbb
mov
aaa
mov
icebp
xor
cdq
repz
inc
xchg
sbb
fisub
hlt
or
idiv
xchg
xchg
scas
sbb
sub
mov
mov
outs
into
xor
adc
and
pop
push
xchg
inc
xor
sub
and
adc
lock
xchg
mov
shl
dec
inc
mov
js
cmc
jge
xchg
push
js
lds
mov
mov
(bad)
mov
fmul
iret
imul
(bad)
fild
popf
cmps
mov
cmp
scas
mov
out
retf
sub
adc
inc
std
pop
push
into
(bad)
mov
ja
(bad)
(bad)
jb
mov
sub
cmp
jne
push
imul
imul
pop
addr16
xlat
push
mov
hlt
icebp
popa
and
sbb
jns
or
mov
mov
int
pushf
jle
icebp
retf
pushf
jg
retf
mov
jecxz
mov
adc
jno
cdq
push
mov
or
(bad)
aam
or
ds
movs
bound
fst
push
lea
jg
(bad)
mov
jmp
stos
ins
inc
retf
mov
cwde
ds
jecxz
sub
(bad)
fisubr
ss
bswap
imul
(bad)
fisub
mov
lock
loope
jmp
cdq
cmp
jecxz
(bad)
pop
xchg
cmp
in
inc
imul
pop
sahf
xchg
cs
xor
imul
cli
jle
stos
imul
test
xlat
sbb
leave
push
pop
loopne
dec
pop
jae
sbb
in
mov
fwait
int3
pop
pop
pop
addr16
or
sbb
rcl
jecxz
pop
push
(bad)
pop
mov
sbb
dec
popf
dec
adc
jmp
cld
pop
jmp
in
sti
cs
xlat
sahf
inc
jne
scas
adc
jno
and
xchg
jnp
dec
cmps
jmp
jae
outs
mov
outs
out
sbb
add
push
mov
pop
outs
mov
adc
pop
adc
dec
div
push
das
xchg
or
stc
out
jg
stc
out
jmp
lock
inc
mov
jecxz
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ins
cli
hlt
cmps
fwait
rcr
mov
sbb
mov
pushf
out
cmp
je
cdq
out
test
xor
ret
xor
outs
fisttp
stc
idiv
add
sub
adc
pop
rol
add
jmp
xor
sar
pop
inc
jg
dec
or
outs
push
call
jmp
pop
out
daa
fs
sar
pmaxub
dec
sub
out
dec
fimul
adc
out
fwait
inc
dec
fimul
mov
and
in
call
cmp
ret
mov
cmp
jns
pop
ja
dec
push
xchg
and
ffree
out
push
repnz
(bad)
push
add
(bad)
and
sbb
pop
sub
ds
stos
mov
mov
mov
push
dec
es
add
or
lds
data16
scas
inc
call
cmp
loopne
out
enter
xor
xor
ret
cmp
sar
pop
push
mov
lods
lods
test
fdiv
repz
xchg
psubusw
sbb
shr
push
aam
adc
sti
or
pop
das
push
es
out
pushf
into
into
sete
fist
rcr
rcr
fnstsw
lahf
cmp
jl
movs
es
jmp
stos
popa
stos
jmp
sar
sub
push
and
push
outs
fmul
mov
test
jnp
cwde
xlat
fld
cmp
mov
ror
aad
ds
push
xor
repnz
sbb
xlat
mov
add
cmp
inc
mov
(bad)
cs
pop
jnp
js
fcom
dec
lea
sub
lods
pop
nop
mov
rcl
jbe
xchg
jp
aam
out
es
add
cmp
stos
sub
in
repz
cli
xchg
sub
or
or
dec
adc
(bad)
call
add
jmp
add
mov
out
mov
clc
sbb
cmps
inc
icebp
fsubr
inc
push
lahf
loop
adc
imul
push
mov
imul
pop
add
cmp
cwd
test
xchg
pop
push
jnp
retf
fsub
mov
sub
pop
lea
push
(bad)
xlat
lea
xor
jnp
cmp
xor
push
test
push
add
(bad)
lods
cmp
iret
pop
jle
fsub
dec
jle
data16
adc
std
ds
in
bnd
or
(bad)
lahf
lock
(bad)
jne
(bad)
es
lods
pop
jl
dec
bound
xor
push
inc
sub
cmc
enter
daa
sbb
dec
lods
add
ss
enter
iret
jmp
pop
jle
outs
dec
jb
sahf
mov
loopne
sub
sbb
jle
jmp
add
xor
mov
xchg
pop
in
hlt
jnp
shr
fisttp
(bad)
ret
dec
iret
sbb
add
cld
fistp
inc
inc
imul
jle
jb
popf
(bad)
int3
es
dec
mov
stc
mov
scas
push
xlat
cmp
mov
(bad)
and
add
or
pop
adc
jae
or
fwait
jp
lods
lods
jnp
dec
js
fsub
rcl
mov
or
enter
adc
in
add
mov
fcmove
pop
or
test
test
mov
xor
bound
xlat
mov
xor
inc
push
sub
xchg
(bad)
aad
cmp
mov
cmp
push
jbe
in
inc
and
inc
ret
sahf
push
pop
clc
dec
cmp
cmp
sub
inc
push
icebp
push
outs
dec
test
enter
dec
idiv
ds
ins
mov
push
sub
mov
outs
test
push
aas
jge
adc
pop
adc
pop
cmp
das
xchg
ror
pop
or
mov
sub
mov
sbb
lods
mov
push
call
enter
push
js
lahf
push
or
xor
int3
sbb
dec
add
(bad)
mov
xchg
xor
stos
fxch
hlt
rcr
xchg
mov
adc
inc
lock
xlat
leave
mov
add
call
sub
sub
repz
rep
cmps
dec
mov
fild
jno
mov
add
aas
(bad)
sbb
lods
fcomp
and
cmp
jl
dec
sbb
adc
mov
mov
ja
stos
out
ins
pop
loope
mov
retf
mov
pop
push
repz
xor
jmp
movs
xlat
xor
mov
pop
or
xlat
jno
add
outs
gs
retf
loope
nop
lahf
iret
push
into
stos
shl
mov
mov
ret
pop
and
ins
xchg
je
pop
mov
sub
mov
pop
movs
es
repnz
and
push
sub
mov
aad
sbb
mov
push
outs
jmp
stos
xlat
or
test
imul
cmps
adc
or
dec
mov
add
dec
and
cmp
mov
adc
ins
and
xor
sbb
jge
aas
(bad)
(bad)
(bad)
mov
jae
sar
loopne
fild
jo
mov
sbb
xchg
xor
ficomp
icebp
(bad)
sar
cmps
daa
outs
dec
sub
mov
popa
inc
mov
ret
cmp
sti
ds
mov
outs
push
adc
lods
cwde
pop
jmp
stos
out
mov
xchg
and
stc
inc
xchg
(bad)
sbb
cwde
push
(bad)
into
outs
aad
sahf
mov
xchg
pop
rcl
stc
jbe
xor
dec
jb
repz
pop
cli
(bad)
lea
jle
mul
(bad)
outs
push
jno
add
sub
pop
xchg
xor
mov
jmp
mov
push
cmp
(bad)
data16
and
clc
cmc
jmp
fcom
cmp
or
scas
pinsrw
xor
or
cmps
lods
std
mov
retf
xor
or
test
mov
add
jnp
(bad)
movs
jmp
mov
xor
sub
dec
jnp
mov
and
adc
add
es
pop
fstp
add
in
ret
(bad)
(bad)
dec
clc
test
pop
ret
fisub
cmp
mov
sub
mov
jp
mov
and
xor
mov
pushf
pop
mov
and
jnp
inc
retf
fstp
push
loope
xchg
and
add
ins
push
mov
jmp
sub
sbb
(bad)
xor
lea
mov
cmp
stos
mov
mov
aas
push
push
or
pop
lock
pop
xor
inc
xor
js
adc
lahf
aas
push
jns
scas
pop
ins
mov
cs
pop
mov
xchg
test
add
push
lods
in
pusha
repnz
shl
cdq
push
arpl
js
jnp
push
dec
fisttp
xchg
jmp
jno
es
sub
cmp
and
clc
hlt
mov
sbb
sbb
ins
shr
inc
and
scas
sahf
add
xor
out
xchg
or
xchg
data16
xor
fisttp
icebp
mov
sub
gs
aad
out
add
xchg
add
or
xor
mov
inc
mov
lods
loop
adc
jae
fadd
pop
cmp
ss
out
ret
jl
sub
dec
sub
outs
xchg
icebp
stc
retf
repz
mov
cmps
retf
and
xor
cmp
add
xchg
dec
call
pusha
mov
in
or
push
loopne
shr
out
(bad)
push
or
int3
fstp
shl
out
cdq
ret
sub
sbb
dec
shr
push
into
mov
sahf
push
mov
ficom
rol
fldcw
jmp
call
bound
movs
je
xchg
sbb
ss
leave
inc
fld
dec
jle
dec
call
xchg
call
pop
cmp
addr16
mov
dec
add
(bad)
pop
xchg
stos
sub
add
outs
aaa
outs
cdq
sub
pop
jge
dec
push
imul
sub
das
and
mov
ins
mov
push
std
and
xchg
push
jnp
in
mov
je
mov
jno
xor
ins
mov
cmp
fistp
movs
int
mov
das
xchg
shl
jbe
test
add
mov
es
test
mov
popa
cmp
imul
cmps
loope
push
lock
xchg
and
jge
jmp
loope
sbb
jmp
imul
sbb
inc
jno
fs
xor
in
adc
mov
sti
bound
xor
in
inc
pop
fcmovne
(bad)
pop
sub
sub
fld
out
imul
arpl
daa
movs
mov
xchg
fisttp
iret
fimul
mov
outs
movsx
idiv
jne
sub
jp
lds
cdq
jp
mov
ret
fcomp
pop
cwde
push
add
mov
xchg
xchg
push
call
dec
call
add
sbb
lods
lea
push
(bad)
fiadd
arpl
out
inc
xchg
lods
mov
jbe
imul
fsub
imul
xchg
stos
sar
enter
mov
and
cld
or
pop
jno
sahf
inc
jae
push
mov
arpl
popa
cli
(bad)
push
mov
pop
cmc
jns
sub
pop
pop
mov
out
imul
sbb
cli
nop
shl
jmp
pop
xchg
pop
sub
inc
pushf
cmp
xor
mov
js
js
dec
in
(bad)
test
pop
cmp
mov
dec
sub
push
fwait
inc
xor
and
hlt
mov
add
push
rcl
fidiv
mov
mov
shr
(bad)
popf
stos
icebp
aad
mov
pop
mov
push
rcr
xor
push
cdq
push
or
sahf
pop
icebp
inc
xlat
int
pop
xchg
push
add
aaa
adc
mov
jecxz
cmp
shl
mov
xor
push
stc
adc
(bad)
(bad)
aad
mov
pop
fist
mov
and
jle
fcomp
xor
bnd
sahf
cmc
fldenv
imul
leave
mov
mov
loopne
repz
movs
xchg
scas
dec
movs
add
cdq
mov
call
fwait
mov
inc
sub
ja
das
sti
and
outs
les
rcr
ss
mov
fst
pop
aas
push
icebp
(bad)
cli
mov
mov
pop
jp
in
ror
xchg
xchg
pop
and
adc
retf
push
jmp
imul
or
xchg
or
dec
mov
or
addr16
lods
pop
hlt
icebp
inc
daa
cld
cli
sbb
pop
ret
jle
lahf
push
jno
in
lods
sbb
cwde
out
ins
adc
inc
xor
sub
xchg
push
xchg
clc
test
fwait
cli
or
ins
adc
shl
dec
jnp
fld
and
out
add
mov
xor
mov
mov
aaa
stos
pop
xchg
adc
pushf
jl
mov
cs
and
imul
or
das
in
push
popf
retf
ins
int
aas
mov
mov
lods
ss
push
push
ds
cmp
and
mov
ins
aas
or
aam
idiv
dec
sbb
adc
cmp
push
in
push
iret
xchg
pop
in
stos
dec
movs
xor
aad
inc
es
jae
push
cmp
mov
add
call
push
lahf
or
xor
or
out
jne
push
and
dec
jno
push
push
mov
add
cwde
or
mov
push
fs
xor
mov
(bad)
popf
inc
movs
or
pmulhuw
in
repnz
and
inc
cmp
(bad)
sbb
pop
pop
sub
inc
imul
push
ins
iret
cmp
sbb
jmp
add
mov
push
je
test
ret
or
mov
(bad)
dec
cmc
jbe
inc
jns
lea
std
cmp
mov
stc
(bad)
call
xchg
push
test
and
mov
xor
movs
xchg
lock
scas
and
stc
push
sar
enter
xor
sub
movs
gs
xchg
push
dec
push
cli
sub
outs
or
jno
(bad)
jmp
int3
adc
aam
jns
cwde
xchg
pop
repz
fadd
rol
mov
pop
dec
mov
stc
cwde
scas
mov
add
das
inc
call
sbb
retf
jge
sar
dec
arpl
fdiv
jp
fdivr
test
mov
dec
iret
push
sahf
int3
stc
cwde
test
in
sbb
fimul
push
mov
cmp
call
sbb
les
push
push
retf
cmc
retf
fst
add
cmp
dec
lods
sub
fcmove
cmps
mov
sti
mov
inc
xor
mov
test
dec
and
and
arpl
loopne
std
push
stos
cmp
mov
xchg
xor
jae
xor
lock
push
cmps
loopne
xchg
fisttp
cmps
fwait
in
clc
adc
test
or
stc
imul
mov
dec
xor
test
es
fisubr
enter
ja
push
sbb
ja
scas
mov
adc
xchg
push
mov
in
call
fistp
popf
push
in
xchg
idiv
or
xchg
push
scas
stc
sar
into
outs
fnop
sbb
xchg
xor
fdivr
mov
fnsave
mov
mov
stos
mov
ins
fwait
xor
add
inc
cmps
push
fimul
inc
aad
bound
bsr
mov
cld
xchg
push
dec
test
push
jge
out
push
sti
loope
nop
lahf
inc
jmp
jb
cmc
(bad)
mov
cdq
pop
lahf
or
dec
fbstp
test
jl
add
in
fdiv
mov
fld
xchg
shr
xchg
or
cmp
mov
cmps
push
and
xchg
fwait
push
or
leave
das
fnstcw
dec
and
mov
push
aad
mov
mov
sbb
fisub
and
jbe
shl
call
cmps
pop
in
add
test
jae
jmp
sbb
add
adc
lea
rcl
ficom
(bad)
cld
(bad)
mov
xchg
xchg
jne
(bad)
aad
pop
fidivr
jo
(bad)
stos
mov
mov
arpl
add
int3
scas
test
(bad)
aad
mov
push
lods
outs
out
int
mov
icebp
push
je
pop
xchg
inc
test
or
shl
(bad)
push
inc
lods
xlat
popf
xchg
and
inc
dec
add
mov
stos
and
test
mov
or
add
jae
inc
ret
out
leave
sub
ins
push
adc
inc
out
dec
dec
or
xchg
lods
push
mov
movs
add
sub
das
gs
push
test
mov
jl
sbb
inc
jns
add
lds
add
cli
mov
push
cmps
cmp
loope
test
or
int
jno
scas
test
jbe
sub
sub
sub
popa
jnp
into
int3
outs
push
inc
icebp
adc
mov
dec
nop
aad
(bad)
jno
mov
sbb
mov
or
int
add
and
mov
mov
in
outs
data16
outs
mov
mov
push
into
cmp
sbb
adc
(bad)
popa
cmps
out
in
jbe
pop
lahf
rcl
adc
sub
mov
mov
xor
pop
inc
test
push
retf
push
pop
xchg
cmc
(bad)
mov
or
add
mov
jmp
mov
inc
adc
sbb
dec
add
xlat
jbe
jecxz
cmps
in
xchg
or
lea
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
adc
sahf
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
outs
xchg
xor
pushf
mov
cwde
cmp
lahf
ror
jbe
push
(bad)
aam
cmps
cdq
jno
cmps
fwait
cdq
into
jmp
sbb
fimul
repnz
jns
xor
or
test
add
(bad)
jae
cmp
pop
ficom
in
push
fwait
icebp
inc
push
fmul
sub
call
fadd
icebp
leave
xchg
ja
test
mov
cmp
push
adc
ret
sti
jle
jecxz
cwde
inc
fbld
cmps
gs
shr
jl
or
xor
push
push
ss
lds
iret
push
sub
add
jge
mov
push
mov
pop
add
add
adc
sbb
das
fbld
int3
mov
pop
xor
popa
cwde
pop
lods
or
cs
adc
jae
leave
jne
add
jle
sbb
mov
outs
daa
sar
ds
jne
mov
mov
cmp
fidivr
imul
js
lods
stos
push
outs
mov
lea
jp
das
inc
bndldx
or
xchg
in
cs
push
mov
sbb
xchg
xor
adc
bound
xchg
and
push
mov
mov
xchg
cmps
jbe
jg
in
mov
mov
cs
pop
and
iret
inc
cld
sub
fidiv
mov
pop
in
inc
jns
mov
xchg
push
adc
mov
mov
(bad)
cmp
pop
push
jl
call
(bad)
mov
pop
xchg
push
retf
or
enter
pop
cmp
(bad)
cmc
sti
in
add
clc
cmp
inc
jno
fmulp
rcr
out
push
mov
fidivr
test
lea
aaa
and
loop
xchg
xchg
inc
lods
cmp
and
ficomp
push
ror
cmp
mov
lahf
lods
sub
fcom
jg
pop
cmp
adc
push
dec
ret
mov
push
call
scas
pop
je
xor
pcmpeqd
sbb
jle
ret
out
(bad)
cvttps2pi
pop
loop
or
ret
mov
and
mov
add
aaa
cmp
cmp
imul
jae
cmp
aas
iret
lock
movs
cmps
call
retf
mov
xlat
or
fcmove
rol
sub
mov
mov
jmp
fist
leave
and
int3
xchg
dec
lahf
pop
and
inc
int3
dec
xchg
in
adc
xchg
test
gs
mov
jge
sahf
adc
call
adc
pop
xor
push
xchg
out
data16
data16
gs
test
inc
popa
xchg
outs
adc
sbb
jl
push
fs
cmp
jnp
shl
(bad)
pop
mov
in
dec
ins
push
xchg
dec
mov
jecxz
inc
pop
sub
test
fcmovbe
lods
imul
push
pushf
mov
loopne
sti
test
mov
gs
mov
pushf
mov
fs
jnp
movs
jle
scas
ins
js
adc
cs
sbb
dec
mov
cmp
enter
fimul
loopne
sub
xchg
dec
dec
xchg
pusha
mov
ret
retf
push
cmc
outs
(bad)
jg
pop
pop
in
jno
into
repnz
or
xchg
ja
jp
call
in
adc
nop
pop
fldenv
mov
inc
mov
call
seta
leave
dec
ss
xchg
push
popf
ds
dec
pop
dec
gs
dec
dec
nop
outs
lods
lock
adc
dec
xor
push
fisub
ret
mov
adc
lods
repnz
cli
sbb
cmp
int3
fnstcw
push
mov
mov
imul
stc
and
xor
rol
push
cmp
xor
repz
cmp
sub
dec
push
cmp
fsubr
or
push
sahf
xor
inc
mov
mov
or
call
sbb
lea
inc
dec
rol
mov
mov
ja
inc
jecxz
jecxz
mov
cwde
push
data16
shl
fsubr
or
dec
xor
inc
dec
ds
lods
pop
add
mov
test
mov
rcl
shl
and
scas
fs
stos
fisttp
test
pusha
xor
std
repz
repnz
imul
adc
jno
in
loop
dec
add
mov
mov
movs
mov
loop
xchg
cli
jo
es
jmp
hlt
fdivr
fcmovne
out
xchg
dec
mov
xor
mov
jno
jo
(bad)
or
shl
push
inc
cmp
pop
fwait
lds
adc
stc
push
mov
pop
enter
mov
mov
popa
call
mov
or
scas
cli
popa
mov
mov
add
ror
ss
push
shl
mov
cmp
shr
fist
mov
and
cmc
pop
iret
adc
fistp
ins
adc
ins
or
repnz
adc
inc
inc
aas
add
or
arpl
adc
ins
dec
test
push
add
xchg
jae
push
hlt
pop
in
lock
mov
fcmovbe
and
sar
mov
outs
ret
les
push
xchg
cld
sti
add
icebp
add
in
push
lds
(bad)
aam
ja
fs
fimul
movs
mov
or
movs
setg
jle
(bad)
cmc
sub
jmp
sbb
ror
jmp
jo
cmp
and
mov
push
aas
and
push
or
cdq
movs
pop
ss
lods
sub
push
pop
movs
mov
out
movs
push
dec
imul
enter
xchg
jle
cmp
idiv
(bad)
imul
pop
xor
push
(bad)
movs
mov
std
jno
cmp
sub
mov
xchg
mov
pop
nop
adc
lods
ins
bound
add
mov
jae
cmp
shl
mov
mov
cli
mov
test
out
stos
add
sub
add
ds
(bad)
scas
dec
lods
iret
ror
xor
mov
mov
(bad)
or
aam
aad
pushf
mov
lahf
mov
cwde
push
dec
shl
xchg
mov
pop
xor
pop
push
dec
inc
faddp
mov
sbb
mov
dec
ror
(bad)
stos
adc
shr
jmp
retf
stos
inc
mov
jmp
or
(bad)
das
clc
push
call
test
mov
stos
sub
xor
repnz
movaps
inc
fs
mov
fcom
cmp
cmp
call
retf
mov
fld
loopne
fidivr
cld
sahf
sbb
std
and
pop
shr
dec
pop
jne
xchg
mov
shl
adc
cmps
push
retfw
sbb
sbb
hlt
xchg
call
ins
dec
in
push
mov
movs
sub
and
or
adc
ja
out
int
dec
mov
sbb
(bad)
cmp
add
dec
lds
cwde
movs
lds
pop
cs
sbb
jmp
(bad)
fs
aam
sub
retf
out
inc
inc
xchg
ja
lahf
xchg
jbe
das
jp
test
inc
cmc
inc
pop
and
or
jp
mov
nop
ins
das
push
push
test
mov
int3
call
pop
fcomp
test
daa
je
stos
aas
cmc
jmp
mov
jle
leave
mov
jle
lock
fst
mov
adc
inc
mov
stc
dec
xor
push
add
pop
inc
into
arpl
scas
leave
sbb
pop
mov
inc
inc
jnp
fs
in
ror
sbb
aad
push
iret
pop
imul
pop
or
pop
and
pop
test
out
mov
nop
mov
jne
pushw
sub
aas
pop
xchg
adc
adc
fwait
pop
ret
call
std
pop
iret
cmp
aaa
push
fmul
test
xchg
add
dec
mov
or
dec
cmp
inc
enter
xchg
clc
xor
add
in
es
repz
stos
addr16
mov
sbb
mov
lss
xor
adc
pop
pop
test
test
mov
inc
sbb
popf
aad
pop
gs
imul
sbb
fstp
adc
clc
or
int
setno
and
push
ficom
test
adc
push
in
cmc
dec
sub
inc
cmps
jo
(bad)
jge
arpl
lds
imul
xchg
push
cmc
mov
imul
mov
mov
xchg
inc
(bad)
xor
xor
stos
and
mov
and
mov
cmovae
cdq
ds
into
adc
push
xchg
outs
mov
dec
imul
pop
(bad)
mov
push
jg
jmp
fstp
les
jmp
aaa
inc
fs
retf
sub
jnp
cld
call
jle
mov
popf
xchg
jne
and
jbe
jmp
out
inc
mov
iret
add
xchg
xor
pop
sar
cmc
inc
adc
js
ss
popf
dec
push
push
jmp
lea
sbb
inc
ja
movs
loop
push
(bad)
dec
sar
(bad)
dec
out
pop
inc
movs
pop
icebp
sbb
push
mov
fnstsw
movs
fdiv
pop
dec
pop
sbb
lock
sub
div
and
stos
outs
push
addr16
mov
cmp
sub
icebp
jae
pop
push
adc
imul
xlat
dec
(bad)
add
je
sti
cwde
sar
popa
outs
add
ins
scas
pop
lods
aas
sub
and
xchg
mov
ret
sbb
rcr
and
or
xor
loopne
mov
arpl
aam
cmc
sub
test
jge
lock
push
fsubr
push
lahf
inc
in
push
push
xchg
jnp
data16
hlt
push
ins
les
fwait
adc
sar
pushf
cs
mov
hlt
(bad)
call
outs
pop
and
inc
add
ret
pop
push
bound
shr
dec
and
pop
push
sbb
push
adc
sub
jp
or
or
outs
js
(bad)
stos
xchg
popa
mov
aam
inc
fimul
push
lods
rcl
cmp
neg
fild
jle
call
sti
xor
rcr
(bad)
movs
sahf
rsqrtps
cmp
sar
add
mov
mov
pop
sbb
mov
push
sar
ret
repz
pop
test
imul
xor
gs
sahf
ins
jmp
add
push
adc
adc
in
es
add
aam
ss
inc
ret
bound
jae
int3
jne
fwait
dec
icebp
cwde
inc
retf
or
dec
enter
jmp
push
xor
pop
pop
mov
sar
ss
xor
jns
push
adc
inc
cmp
or
mov
mov
arpl
loope
shl
adc
(bad)
mov
dec
dec
jle
cmp
jmp
jbe
jbe
xchg
inc
and
pop
jg
(bad)
mov
test
pop
jo
shl
mov
(bad)
idiv
mov
test
cdq
pop
pop
jbe
ss
and
jns
into
pop
(bad)
xchg
test
in
test
fdivr
mov
out
je
jne
test
xor
pop
lea
js
mov
pop
stos
cmp
add
mov
das
(bad)
daa
sahf
cs
adc
lods
sbb
div
cmps
mov
int3
and
push
(bad)
sbb
cwde
push
mov
push
dec
pop
ja
aas
xor
add
inc
lock
mov
(bad)
mov
dec
bound
mov
ja
stc
ins
xlat
cmp
xchg
mov
push
dec
adc
rcl
movs
or
lea
cld
cmp
mov
iret
stos
jnp
adc
cmps
daa
in
fmul
inc
xchg
leave
push
rol
sub
cld
xchg
xor
mov
test
(bad)
push
pop
or
ins
sub
fwait
xchg
(bad)
jecxz
and
jmp
(bad)
neg
jmp
jle
(bad)
call
in
inc
jns
(bad)
test
in
int
mov
lds
mov
jmp
or
outs
shr
mov
ret
pop
leave
rcr
mov
sbb
inc
in
jl
repz
xor
push
bound
lods
push
scas
xor
lods
mov
sti
sbb
xor
fld
adc
jbe
mov
xlat
jl
jae
cmc
jbe
cmp
pop
cmp
cli
lds
jmp
in
stc
stos
int
xchg
mov
jmp
add
cmp
cmp
(bad)
cmp
(bad)
nop
std
retf
mov
das
inc
aad
jb
cmp
mov
fmul
ins
popf
in
pop
pushf
jnp
daa
xor
pop
mov
(bad)
dec
aad
xchg
retf
xchg
pop
movs
scas
mov
add
das
or
inc
inc
adc
xor
pop
jmp
(bad)
mov
xchg
arpl
or
add
push
mov
or
fldenv
std
sbb
adc
mov
mov
shr
fcmovne
xor
imul
jo
aaa
sbb
adc
mov
mov
inc
fisub
sub
push
cmp
retf
mov
lea
rcl
mov
out
shl
mov
call
mov
ds
cmp
ins
cwde
jnp
rol
fcom
mov
into
js
and
mov
sub
xor
ss
loopne
push
xlat
fcmove
dec
mov
and
inc
or
sub
lods
mov
ins
fdivr
add
jae
into
sub
adc
pop
in
jl
lds
scas
imul
pop
mov
lock
cmp
xchg
outs
std
pop
stos
into
add
inc
mov
lea
fisttp
ror
add
and
fisttp
aaa
mov
cwde
adc
jbe
add
cwde
cdq
xor
popa
icebp
mov
jecxz
xchg
aas
not
repnz
mov
std
mov
cmps
pop
mov
mov
add
in
aas
in
push
sub
(bad)
repnz
retf
xchg
xchg
jns
xor
mov
les
cmp
push
dec
sbb
xchg
push
mov
mov
fcomp
out
pop
fisubr
jge
cs
(bad)
mov
jb
fwait
pop
pushf
pop
lds
fisubr
pop
jno
lods
ja
push
pop
jmp
addr16
dec
cmp
and
mov
mov
add
rol
inc
adc
out
or
xchg
out
movs
sahf
push
aad
cmps
mov
mov
jle
loopne
scas
aas
movs
dec
fld
sbb
test
sub
popf
ss
inc
jbe
fisttp
bound
lds
std
mov
aaa
mov
mov
or
dec
and
into
mov
loop
push
dec
in
inc
jbe
sub
fucompp
ds
ins
stc
aaa
arpl
scas
jecxz
push
inc
inc
out
mov
mov
in
jl
jmp
or
rcr
clc
(bad)
sbb
jl
mov
repnz
adc
xchg
sub
fist
pop
popf
or
je
aaa
mov
jns
mov
mov
push
mov
(bad)
in
es
repz
test
dec
dec
cmp
adc
sbb
jno
jmp
push
jmp
ret
mov
sbb
out
xor
jge
int
sub
outs
xchg
call
bound
out
jae
fistp
cmps
stc
pop
xor
push
and
push
mov
push
retf
in
pop
aaa
push
aad
jge
xchg
pop
sub
sbb
jp
outs
adc
sub
xchg
push
cmc
mov
jge
imul
xchg
pop
(bad)
fisttp
out
test
sub
push
sub
lods
mov
stos
sub
sbb
adc
adc
(bad)
in
outs
xor
test
push
pop
jno
push
inc
cmps
mov
pop
add
mov
or
inc
ss
clc
outs
bound
cmp
jnp
stos
daa
dec
mov
test
in
aas
jle
xor
shl
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
lock
push
jae
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
call
fwait
dec
test
cdq
and
dec
dec
mov
adc
retf
push
shr
sbb
push
mov
icebp
mov
(bad)
xor
sbb
into
or
jbe
pop
cmc
sbb
jb
mov
xchg
frstor
lods
and
mov
sub
jb
aas
and
daa
jl
cmp
jle
fwait
mov
mov
outs
or
pop
mov
or
imul
fwait
push
ficomp
jmp
jg
mov
repz
dec
mov
mov
pushf
ret
test
ins
dec
outs
and
and
jb
(bad)
(bad)
daa
mov
push
sbb
and
or
pop
repz
out
mov
adc
imul
push
nop
fs
jbe
mov
aam
push
jmp
add
xor
sub
call
inc
xor
ret
iret
inc
xchg
ds
sub
daa
jmp
into
ins
and
xor
xchg
dec
push
(bad)
loop
mov
xor
(bad)
add
aad
xor
jge
test
mov
dec
mov
xchg
js
xchg
bound
dec
scas
sub
pop
stos
jae
stos
add
cmps
ss
and
cli
repz
mov
inc
push
sbb
scas
lds
ficom
pop
ins
and
mov
(bad)
lock
sbb
js
add
(bad)
jge
iret
pop
xchg
xchg
js
lock
or
or
xchg
mul
popf
mov
icebp
jp
daa
jae
movs
mov
out
retf
mov
pop
(bad)
retf
xor
and
pop
dec
sub
pop
enter
in
pop
push
mov
daa
sbb
ficomp
push
inc
ror
jmp
or
cmp
dec
fld
inc
sti
mov
xchg
in
rcr
out
xor
ret
bswap
js
push
dec
xchg
arpl
fsubr
scas
sbb
xor
call
pop
(bad)
pop
retf
fs
jp
add
out
xor
jg
xor
push
push
sbb
call
pop
jb
cld
test
mov
pop
imul
dec
add
jb
loopne
jmp
pop
mov
mov
add
mov
in
fdiv
fcomp
adc
mov
ret
scas
and
inc
icebp
mov
jno
sbb
mov
jecxz
add
add
aas
gs
push
addr16
ja
push
adc
xlat
repz
jo
cmp
mov
call
retf
shl
jmp
shl
cmp
fs
sbb
movs
jne
lock
movs
dec
cmc
mov
push
arpl
in
xor
test
add
test
imul
push
sub
retf
loop
pop
sbb
fstp
rcl
bound
mov
mov
add
and
push
cmp
ins
dec
mov
das
test
jmp
mov
cmc
es
inc
and
sub
cli
xor
mov
sar
sub
pop
sub
jge
call
and
cld
test
test
mov
dec
scas
dec
inc
stc
push
js
out
or
cmps
pop
out
stos
mov
ds
test
add
dec
data16
xor
es
das
inc
call
stos
dec
fisub
jge
(bad)
sub
fbld
pop
hlt
mov
fst
xchg
mov
inc
jo
aad
dec
sbb
push
test
test
dec
adc
nop
jle
pop
(bad)
jbe
xchg
pop
movs
cli
daa
or
test
xchg
(bad)
dec
and
in
ins
cmp
xor
das
xor
fnstsw
ins
xchg
cwde
bound
cwde
rol
cmp
cmp
icebp
jae
push
int
adc
(bad)
sub
imul
pop
ins
pusha
mov
add
(bad)
jg
(bad)
push
aaa
inc
sbb
cmps
jecxz
repnz
jge
dec
les
mov
mov
jnp
sub
or
jmp
or
push
cmpxchg
ror
jg
add
repnz
movs
xor
popa
mov
jbe
and
push
sbb
pop
retf
cmp
rol
push
stos
ret
addr16
xchg
lahf
xchg
in
repz
les
leave
sahf
mov
stc
fcmovnu
pop
mov
cld
int
mov
mov
add
and
nop
aaa
movs
and
or
or
and
scas
aas
sbb
enter
ja
sbb
cli
movs
imul
mov
dec
sub
cmp
or
mov
adc
imul
adc
inc
push
mov
fcom
ins
jmp
bound
arpl
push
cmp
call
call
and
xor
jns
jg
and
xor
sbb
sub
fst
sbb
jge
mov
mov
mov
add
mov
and
add
pusha
pushf
cmp
sub
lahf
mov
mov
and
in
loope
xchg
adc
fldcw
xchg
mov
mov
lods
sbb
push
stos
xor
scas
rcr
xchg
imul
in
add
mov
imul
jp
xor
xor
mov
mov
loope
(bad)
in
sbb
fcom
xchg
push
cmp
adc
mov
jge
daa
dec
push
ret
stos
mov
gs
dec
in
repz
int
arpl
popa
push
pop
in
mov
xchg
std
xor
cmps
clc
hlt
xchg
lods
push
inc
add
jnp
lahf
out
pop
cmp
sbb
jle
nop
xor
jmp
adc
loope
(bad)
pop
les
repnz
xor
mov
(bad)
retf
fdiv
jnp
mov
push
bound
inc
xchg
outs
fcomi
pop
add
cmp
push
pop
sbb
sub
(bad)
mov
dec
aaa
inc
test
(bad)
pop
push
xlat
mov
out
pop
mov
into
mov
sbb
and
jns
les
inc
aad
add
mov
les
iret
out
int3
adc
loope
push
sbb
cmc
cmc
fnsave
fld
pop
adc
pop
or
sub
daa
xchg
push
xchg
sub
clc
jbe
or
add
iret
arpl
sub
dec
mov
mov
sbb
jg
jno
mov
mov
inc
in
sub
(bad)
outs
ins
inc
in
sbb
shl
push
pop
(bad)
cmp
dec
sub
push
mov
sbb
out
imul
mov
push
lahf
xor
cs
out
addr16
cmc
imul
mov
cdq
sbb
cmp
js
and
add
cmp
jno
sub
leave
repnz
loope
jmp
ins
sub
enter
sub
jp
sbb
in
loop
outs
xchg
dec
sbb
xchg
add
xchg
pop
jae
dec
fwait
pop
mov
push
cmp
sbb
out
sbb
(bad)
aas
aaa
mov
push
jmp
(bad)
test
cmps
or
aad
lea
push
pop
pop
mov
or
int
loope
dec
sti
or
mov
jl
mov
(bad)
sub
retf
ins
(bad)
jl
xchg
xchg
push
outs
scas
gs
cld
mov
ss
in
xchg
mov
cld
fadd
idiv
or
pop
or
mov
cmp
enter
adc
outs
stos
ds
int
popa
sbb
mov
test
ja
adc
xchg
mov
jnp
sub
std
cmps
mov
hlt
xchg
push
not
(bad)
xchg
sti
hlt
stos
data16
push
fwait
xchg
dec
inc
cmp
imul
in
(bad)
cmp
jno
ins
jmp
les
lahf
add
or
or
lahf
dec
je
cmp
jmp
push
ds
inc
inc
push
sahf
test
lods
mov
out
cmps
fistp
(bad)
rol
push
cmc
push
ins
mov
hlt
cli
int
in
lea
jne
jecxz
rcr
mov
sub
sbb
cli
mov
ds
cld
jmp
mov
jle
sbb
rol
fisubr
imul
mov
adc
imul
ins
jmp
pop
jmp
loope
sbb
movs
inc
shl
sub
stos
clc
adc
scas
neg
pop
and
mov
or
fucomi
repz
pop
jmp
shl
sub
add
pavgw
dec
fistp
jp
adc
jno
(bad)
aaa
paddw
popf
xchg
cmc
out
aad
push
xchg
adc
in
(bad)
jmp
adc
popf
sub
sub
imul
popf
xor
xchg
and
push
dec
outs
inc
jle
lea
mov
fiadd
dec
nop
xchg
lods
xchg
inc
sahf
jge
xchg
popa
ror
pop
les
xor
xor
jecxz
mov
fisub
inc
stos
in
and
jne
sbb
xchg
clc
cmp
mov
in
fnstcw
mov
js
repnz
lock
les
hlt
jmp
mov
fs
adc
jg
xchg
jle
cmps
popf
and
bound
iret
sar
adc
pop
mov
cmc
mov
pushf
jp
mov
leave
std
pop
push
in
loopne
mov
ins
ja
sub
push
xlat
cld
aas
stc
xor
dec
pop
add
dec
fnstcw
mov
shl
aaa
(bad)
mov
lahf
adc
or
push
push
inc
jecxz
jae
in
rol
in
enter
and
aad
outs
popf
pop
in
imul
les
mov
lahf
aas
sbb
ret
xchg
push
in
scas
in
pop
and
lock
jb
in
aaa
ret
(bad)
scas
ret
xor
push
outs
push
aas
outs
test
sbb
nop
stos
imul
jne
inc
sub
scas
inc
popf
(bad)
jb
mov
mov
movs
popf
in
cmp
fnstsw
mov
iret
loope
and
mov
shr
outs
popf
pushf
dec
loop
push
loope
inc
sub
xor
nop
jne
sub
or
sbb
icebp
or
stos
inc
sbb
adc
aaa
inc
sbb
fadd
int
mov
mov
mov
nop
fld
jge
jmp
add
sti
sub
repnz
int3
mov
aad
and
ret
jecxz
ins
adc
(bad)
hlt
xchg
dec
ror
aas
les
push
sbb
dec
cmps
fdivr
into
das
add
ss
xor
ja
std
int3
mov
cs
and
(bad)
loop
xchg
jp
xchg
(bad)
lods
fcom
sahf
mov
in
mov
inc
pop
adc
or
das
out
stos
lods
sub
pop
mov
sub
fs
repz
movs
nop
mov
movs
jne
les
mov
inc
jmp
shr
pop
sti
jmp
cmp
xchg
aas
not
call
xchg
ins
sub
dec
ret
xchg
pop
inc
imul
pop
sbb
and
jecxz
jmp
inc
inc
call
add
mov
sahf
sub
das
sbb
mov
js
dec
es
ss
ds
inc
sbb
loope
jecxz
(bad)
sar
jo
pusha
xchg
jmp
call
cmp
cmp
lds
mov
shr
lea
jg
xor
pop
je
test
jne
js
mov
aaa
adc
in
sbb
std
jmp
imul
and
push
inc
std
test
call
mov
(bad)
in
xlat
jmp
mov
adc
push
adc
mov
lds
xchg
inc
mov
sbb
fnstcw
sub
mov
jecxz
pop
fs
and
test
and
cmps
mov
push
(bad)
jl
cmps
xchg
pop
cmc
mov
mov
sub
test
mov
je
mov
xchg
mov
(bad)
adc
call
ffreep
and
push
lock
sub
add
inc
cdq
in
fidiv
or
xchg
inc
adc
retf
fwait
jle
leave
xlat
mov
pop
mov
in
mov
test
mov
push
loopne
mov
(bad)
fistp
out
adc
out
dec
fs
or
mov
sbb
sub
pop
rcr
sbb
jmp
jmp
ins
lock
lds
mov
(bad)
icebp
mov
cmp
add
or
mov
adc
inc
jae
mov
dec
call
fwait
push
rcl
and
sbb
movs
icebp
pusha
cs
xchg
imul
iret
xchg
pop
cs
push
aam
xchg
test
sahf
and
sahf
std
jb
xor
(bad)
inc
and
or
cli
test
cwde
arpl
add
add
push
sub
cli
loopne
or
dec
xchg
imul
xor
dec
sub
jb
add
dec
xlat
pop
push
std
sub
push
aas
inc
cli
and
out
mov
and
push
jecxz
jne
or
test
lods
pusha
mov
xchg
(bad)
mov
mov
and
mov
xor
mov
inc
xchg
loopne
adc
(bad)
mov
movs
rol
jmp
femms
xor
jns
adc
std
push
cmp
and
icebp
cmp
clc
stc
inc
clc
(bad)
out
xor
call
mov
xor
push
iret
sbb
loop
cmp
mov
mov
pop
lods
push
mov
pop
mov
mov
rcr
lea
push
sub
lds
sbb
inc
hlt
call
leave
sahf
(bad)
cmp
test
int
loopne
mov
popa
clc
out
inc
arpl
call
iret
adc
nop
ds
aaa
push
dec
aad
arpl
push
and
fcom
cld
mov
inc
inc
cld
dec
lahf
popf
in
pop
adc
inc
mov
mov
inc
cdq
push
repnz
sbb
jecxz
or
scas
pushf
fimul
mul
jmp
sub
or
dec
rcl
outs
mov
pop
ds
cli
xor
dec
add
aas
in
jno
sbb
dec
sub
movs
je
push
clc
lds
jo
fnsave
jmp
xor
pop
jl
std
push
idiv
push
adc
add
mov
jns
xchg
add
fnsave
mov
in
leave
(bad)
jne
jne
aas
pop
mov
xchg
xor
xor
ins
icebp
mov
mov
mov
mov
gs
or
lods
mov
sub
mov
ret
dec
shl
mov
adc
xchg
bnd
int
cmp
stos
ins
push
nop
pop
and
shl
fcomp
or
xor
adc
xor
xor
inc
pop
cs
cmp
sahf
jo
xchg
ret
into
mov
sub
icebp
(bad)
inc
cmp
leave
add
jp
mov
aas
repnz
daa
in
adc
push
int3
scas
xor
(bad)
adc
retf
xchg
in
aaa
xlat
mov
sahf
sbb
sbb
sub
outs
and
retf
pop
xchg
cdq
jno
sti
or
mov
inc
xor
jge
(bad)
loopne
add
mov
movs
dec
add
cmp
cdq
pop
int
cmc
push
inc
xlat
pop
fadd
arpl
pop
sub
sti
(bad)
jecxz
jno
inc
out
dec
ja
or
std
test
xchg
stos
sbb
stos
push
xor
cs
adc
je
sar
xor
inc
rcr
jecxz
push
mov
pop
sub
mov
neg
scas
mov
repz
in
mov
cmps
sbb
jmp
mov
test
sbb
mov
aas
and
out
jmp
push
jns
js
dec
pop
and
mov
or
arpl
jmp
daa
rcl
push
loop
(bad)
in
push
popf
les
jg
mov
sub
and
rcr
in
sub
mov
sbb
stc
out
jg
stc
out
jg
pop
add
add
inc
and
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
jno
out
fs
into
retf
fisub
inc
enter
mov
enter
(bad)
fidiv
mov
jnp
out
fs
add
mov
and
jo
mov
inc
push
jle
xor
inc
mov
(bad)
rol
retf
mov
xor
jnp
arpl
sbb
int
sbb
imul
das
dec
lahf
xor
jmp
add
cmc
mov
lea
clc
dec
imul
sub
popa
not
adc
sub
add
hlt
pop
jns
mov
jg
stos
mov
sbb
or
push
in
mov
bound
jmp
mov
fcomp
xor
sbb
imul
gs
sub
repnz
inc
jae
mov
xor
mov
packsswb
cli
das
jae
idiv
fiadd
xlat
fcomi
cwde
xlat
pop
stos
pop
fidiv
sti
adc
and
mov
jb
sahf
(bad)
xor
sbb
pushf
(bad)
cmp
jns
adc
push
jle
into
pusha
push
loop
xchg
repnz
push
arpl
dec
ret
iret
and
cmovnp
mov
(bad)
lahf
(bad)
dec
add
imul
inc
sbb
(bad)
in
xlat
ret
scas
scas
es
sub
adc
mov
in
icebp
lahf
jb
call
inc
jnp
push
pop
push
fbstp
loope
fstp
jb
xor
jns
bound
ret
out
xor
cmp
pop
push
cmp
mov
dec
cmp
mov
repz
rcl
sub
mov
fld
mov
ja
scas
ret
test
call
and
mov
inc
shl
push
int
enter
jg
cmp
cmp
pop
mov
mov
leave
and
or
sar
xor
sub
xor
adc
je
sti
(bad)
sbb
scas
int
leave
jbe
aam
push
adc
fld
fnstsw
call
not
xchg
sbb
cs
test
rol
and
das
jno
shufps
loope
ins
and
mov
push
(bad)
xlat
(bad)
stc
cmps
or
je
sub
outs
retf
mov
dec
retf
lahf
inc
dec
popf
mov
pop
movs
popa
inc
outs
nop
dec
add
add
out
jecxz
and
inc
loope
rol
arpl
push
cmc
nop
fs
leave
call
dec
scas
mov
adc
test
or
loopne
sbb
shl
movs
adc
inc
ret
jbe
pop
stos
sub
jmp
cwde
mov
mov
pop
popf
mov
push
js
test
pop
movs
jge
pop
inc
dec
out
add
adc
gs
fadd
bound
xchg
ss
cdq
inc
inc
stc
adc
(bad)
scas
mov
dec
test
mov
iret
out
jl
lock
int3
outs
and
or
jno
int
push
test
or
dec
xor
test
mov
pushf
movs
(bad)
or
leave
aam
sar
xor
and
lea
fcom
add
shl
xchg
icebp
sub
push
ins
stos
rcr
out
stos
aam
jb
pop
jecxz
mov
push
xor
sbb
and
es
pop
mov
pushf
ins
and
jmp
stos
fs
cmp
pop
jl
aad
fisub
(bad)
cli
shr
fist
mov
mov
sbb
sub
in
(bad)
xchg
cmp
xlat
call
das
rcl
mov
xchg
movs
push
dec
push
int3
or
dec
lea
push
fisttp
jp
clc
lock
aad
or
pop
jmp
nop
(bad)
xchg
jmp
jp
into
add
dec
xor
jl
out
push
mov
jmp
imul
adc
retf
xchg
mov
add
inc
adc
sub
adc
pop
sbb
jl
cdq
jns
aaa
dec
cmps
xchg
pop
out
xor
mov
mov
das
lods
cmp
test
jns
repnz
arpl
rcl
sti
or
mov
jecxz
cmps
mov
mov
dec
fst
push
push
xlat
nop
or
les
outs
inc
add
dec
shr
scas
ins
sbb
cmp
(bad)
dec
(bad)
(bad)
cld
push
loop
push
inc
jnp
mov
rol
rcr
mov
test
fisttp
repnz
dec
cmps
dec
ins
cwde
cdq
jb
test
inc
retf
rol
jp
xor
shr
dec
xchg
or
mov
and
int
mov
add
jbe
in
fild
mov
pop
out
call
fisub
dec
jo
sub
rol
repnz
jnp
xchg
repz
call
mov
pop
(bad)
fdivrp
sbb
and
call
or
arpl
mov
sbb
mov
in
mov
xchg
mov
sti
mov
sub
sahf
jge
xor
out
push
and
or
push
mov
inc
sti
mov
std
pop
xchg
push
mov
mov
lock
imul
inc
and
push
push
pop
(bad)
and
repnz
and
xor
mov
and
jo
ins
cmp
push
jb
inc
jmp
push
pop
test
call
xlat
dec
(bad)
rcr
hlt
jmp
xchg
cld
in
push
fwait
js
rol
fsubrp
jnp
mov
jns
jae
test
cld
and
gs
and
xchg
call
(bad)
scas
in
aaa
and
push
jo
cli
add
add
xchg
cli
out
js
stc
xchg
je
rep
ficomp
imul
dec
adc
popf
xor
sub
ja
int3
dec
mov
pop
pop
jb
jge
jl
sub
mov
mov
retf
mov
daa
fist
jae
std
sbb
(bad)
pop
imul
mov
cmc
or
in
cmp
pop
mov
mov
ret
mov
iret
pop
sbb
add
xor
call
shl
cmovno
dec
movs
mov
cmps
xchg
xchg
jbe
mov
fisttp
push
cmp
add
sub
ins
dec
outs
add
or
inc
mov
sub
jg
ss
mov
mov
les
fnstenv
js
int
rcl
push
(bad)
pop
sub
jg
cmp
dec
push
mov
stos
adc
ss
iret
dec
adc
dec
mov
hlt
xchg
mov
in
pop
xchg
test
cld
(bad)
sbb
rcl
xchg
mov
int
mov
loope
out
pusha
jb
ja
in
dec
ds
cwde
cmc
or
or
mov
or
repz
add
fisttp
mov
jne
dec
pusha
daa
loopne
stos
add
xor
dec
std
loop
jb
sbb
xchg
push
jae
dec
(bad)
in
ins
mov
mov
int3
xchg
sub
test
call
nop
push
mov
enter
cs
out
mov
fnstcw
idiv
pop
outs
out
xchg
mov
pushf
cmp
pusha
xchg
lods
mov
(bad)
in
or
push
and
in
sub
pop
xchg
inc
arpl
mov
dec
cld
mov
mov
mov
and
pop
movs
and
or
mov
cmp
adc
jmp
cld
adc
mov
fstp
mov
cli
sbb
jge
ins
or
cmps
sbb
mov
inc
mov
fisubr
add
pushf
je
out
scas
stc
push
gs
jmp
test
mov
das
mov
xchg
pop
push
out
jmp
sahf
mov
setnp
add
sbb
es
call
in
(bad)
test
xchg
xlat
add
mov
aad
ret
icebp
mov
xor
add
js
dec
or
mov
imul
fcmovb
outs
adc
push
ror
ret
(bad)
out
push
jb
xlat
mov
cmps
(bad)
adc
arpl
pop
lahf
repz
mov
pop
sar
jns
push
sub
jecxz
push
cmp
mov
lods
repnz
aas
push
mov
dec
cmc
mov
jmp
jl
xchg
mov
cmps
cmc
enter
dec
or
adc
mov
pop
imul
jmp
add
clc
jle
jbe
jo
aad
ss
hlt
out
icebp
and
pop
fistp
fdiv
sbb
jb
push
xchg
mov
stos
rcr
or
stc
ret
adc
xchg
push
xchg
inc
sub
cdq
cdq
and
in
push
outs
inc
ror
dec
jp
movd
ins
xchg
xchg
mov
es
xchg
aad
rol
loope
fs
sbb
xchg
cmps
retf
mov
and
push
test
and
dec
jge
stc
imul
cwde
lods
cli
mov
mov
(bad)
(bad)
dec
push
or
xchg
scas
inc
loop
std
cmp
mov
test
aad
sbb
xor
adc
or
xlat
cdq
ror
call
mov
int3
xchg
retf
inc
pushf
ins
stos
imul
into
out
cmp
in
mov
mov
lds
pop
test
rcl
mov
cmp
mov
shl
sub
retf
sub
pop
(bad)
lock
push
adc
js
adc
jmp
test
jno
inc
ss
jmp
les
xchg
loope
shl
stc
iret
pop
ds
cmc
jg
jno
mov
sahf
retf
ss
cmp
lods
and
push
and
aas
in
mov
ins
ds
mov
jmp
neg
dec
shl
in
cmp
xor
push
pop
in
test
jnp
xchg
aad
jno
stc
shl
inc
enter
hlt
inc
adc
mov
sub
addr16
mov
fdiv
cmp
stos
(bad)
xchg
ja
jo
adc
add
pop
das
mov
push
pop
xchg
cmp
mov
jp
push
popa
cli
xor
or
ret
dec
jg
imul
pop
aam
or
lods
cmp
fcmovb
stc
in
jl
xchg
xlat
in
call
lea
sbb
and
cmp
jl
int
pop
movs
cs
jb
xchg
in
adc
push
fidiv
popa
arpl
push
cmc
in
rcr
in
inc
cmpps
jg
cmp
and
push
xor
aas
xor
add
mov
push
(bad)
fiadd
xor
or
ja
cld
jecxz
in
pushf
jecxz
fst
xor
push
fdivr
sub
cli
addr16
in
cmp
jecxz
fst
das
or
repnz
lahf
mov
push
and
xor
(bad)
push
ffreep
xchg
xchg
mov
push
adc
cmp
jl
jae
adc
or
fstp
mov
adc
jg
and
scas
push
mov
and
imul
sub
cs
in
movs
inc
test
loope
fwait
fs
xor
outs
lahf
push
mov
(bad)
les
shl
jg
sahf
mov
rcl
jbe
(bad)
pop
xor
push
out
sub
fst
and
xchg
sub
(bad)
push
sbb
lds
jnp
ficomp
sbb
dec
pop
test
mov
adc
push
and
and
lods
push
pop
imul
dec
aas
out
test
mov
adc
push
bound
mov
add
jle
cmp
mov
mov
jns
fnsave
or
jl
xor
clc
lea
not
imul
jecxz
cs
jo
mov
cdq
jecxz
ja
out
jno
sti
ficomp
cdq
data16
mov
mov
(bad)
push
ja
or
mov
pop
inc
lock
pop
scas
fwait
mov
cld
movs
or
daa
js
in
cmp
repz
loop
jae
dec
sbb
dec
ins
sbb
loopne
mov
int3
in
jb
push
iret
mov
adc
xchg
push
mov
cmp
inc
sub
adc
in
pop
dec
xchg
aas
sahf
icebp
stos
push
mov
cli
lods
scas
mov
or
inc
mov
rcr
out
test
mov
mov
div
dec
push
and
and
fwait
jb
add
mov
dec
loop
mov
fmul
dec
movs
fld
xchg
mov
fbld
nop
add
adc
(bad)
cmp
jo
xchg
sbb
xchg
enter
rcl
sti
int
faddp
jne
in
push
das
jle
popa
lods
pop
sbb
mov
dec
mov
pop
push
adc
jae
lock
and
xchg
jo
enter
in
stos
test
or
or
js
cmps
cmp
cmps
inc
pop
(bad)
cmc
fwait
inc
pusha
test
sbb
imul
xlat
pusha
ds
mov
pop
cli
xchg
sbb
mov
sbb
aas
and
cld
lods
call
push
jae
push
ins
cmc
outs
xchg
adc
ficomp
shl
retf
out
add
jg
xchg
push
ret
dec
lds
mov
scas
aam
ins
or
scas
(bad)
sbb
adc
lock
fs
mov
cmp
(bad)
retf
push
hlt
ud1
mov
stos
xor
sbb
nop
sub
shr
and
sub
arpl
fs
cld
mov
movs
repnz
push
(bad)
sub
js
int3
mov
pop
pushf
xchg
sbb
xlat
jg
xchg
pop
xor
sbb
push
dec
movs
and
and
nop
mov
lock
fsub
or
mov
xor
repnz
pusha
stos
push
mov
and
mov
jns
sub
hlt
loopne
mov
xor
adc
cmc
into
mov
jmp
sub
xor
(bad)
jecxz
enter
pop
jmp
(bad)
jbe
mov
and
cs
jmp
lahf
fwait
sub
cmp
and
or
sahf
retf
and
push
clc
call
mov
out
jno
fidivr
push
mov
inc
mul
inc
pop
(bad)
pop
fisttp
pop
mov
sub
pop
cmc
jno
add
xchg
inc
dec
cld
pop
or
jmp
call
push
sub
pop
inc
mov
ret
xor
rcl
lahf
test
fsub
sub
mov
(bad)
xor
xlat
das
pop
jmp
mov
loop
mov
adc
retf
sub
cmp
dec
fs
into
(bad)
ret
cwde
imul
sbb
adc
imul
mov
call
xor
pop
mov
pusha
jge
jge
shr
jne
movs
mov
jge
ins
jge
pop
pushf
test
jmp
mov
dec
stc
adc
ret
lods
xor
pop
xor
loope
test
mov
mov
stc
adc
push
mov
push
jl
repnz
shr
outs
dec
retf
movs
dec
leave
mov
shr
out
pushf
scas
dec
ins
ror
lods
inc
call
loope
ret
jbe
xor
(bad)
mov
and
cmp
outs
mov
cmp
movs
scas
shr
cdq
test
popa
and
ins
rcr
sbb
pop
inc
stc
jmp
out
hlt
jecxz
mov
scas
or
inc
loop
outs
xchg
sbb
add
ins
push
cmp
xor
mov
mov
shr
mov
out
xor
dec
push
sti
scas
test
cmp
mov
sub
push
or
or
lds
mov
out
pop
std
es
data16
out
xchg
aas
repnz
pop
mov
and
inc
lods
nop
xor
mov
pop
jg
aas
clc
push
xor
jbe
mov
shl
push
inc
jecxz
push
scas
jmp
(bad)
jns
jno
add
push
stos
xchg
scas
jns
outs
loop
push
xchg
gs
jbe
lds
sbb
lahf
jg
stc
out
sbb
cld
ucomiss
jp
sub
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
adc
add
loopne
mov
test
mov
gs
mov
and
in
ins
cmp
cmp
repz
ins
pop
xor
fdivrp
jle
idiv
sldt
pop
mov
call
mov
out
fisub
dec
loopne
in
ss
push
enter
int
fcom
mov
jle
out
xor
and
ss
or
lea
dec
je
dec
mov
xchg
jae
mov
cmps
gs
movs
or
popa
(bad)
in
fisttp
cmp
and
or
or
pop
cwde
inc
inc
cmps
push
shl
leave
and
xor
sub
sub
and
ins
sub
outs
je
pushf
inc
imul
pop
movs
rcl
xchg
lock
and
inc
rep
xchg
ror
push
push
ret
push
xor
icebp
push
scas
lock
cmp
mov
dec
push
mov
pushf
pop
pop
xchg
fnstcw
fcomip
sbb
xchg
push
xor
stos
test
(bad)
dec
(bad)
jecxz
call
loopne
xchg
and
(bad)
dec
or
rcr
cmps
out
xor
mov
pop
in
add
jmp
cmp
enter
and
jle
addr16
icebp
cmp
sub
pusha
rol
dec
fnstcw
xor
scas
xor
and
iret
repnz
popf
loopne
cs
jecxz
test
mov
call
(bad)
or
das
outs
cmc
shl
adc
movs
cwde
rcr
(bad)
stos
scas
adc
(bad)
push
cmp
pop
and
pcmpgtb
ins
dec
xor
xor
mov
add
(bad)
xlat
adc
arpl
cmp
popa
les
fldenv
shl
loop
cmp
lock
icebp
xor
repz
push
push
xor
(bad)
push
inc
test
cmp
call
mov
mov
adc
pushf
mov
and
mov
iret
ret
mov
movs
sbb
outs
lods
and
retf
adc
adc
cmc
add
mov
adc
add
rol
nop
gs
shl
lods
(bad)
nop
adc
sbb
mov
jae
mov
test
(bad)
fild
jmp
mov
or
test
or
mov
into
mov
icebp
or
cs
or
push
sub
pop
xor
addr16
mov
rcr
daa
adc
movs
int
fadd
pop
out
repz
addr16
xchg
rol
scas
sub
xor
rol
scas
and
sbb
xchg
adc
cdq
mov
in
mov
jno
test
call
mov
(bad)
mov
sbb
jle
mov
sub
data16
mov
push
xor
mov
popf
icebp
pop
test
mov
mov
jbe
sbb
cmp
xchg
pop
out
fdivr
xchg
add
sbb
push
mov
dec
in
into
icebp
push
fidivr
repz
sbb
mov
adc
ret
push
dec
test
lds
sub
sahf
shr
xor
pop
xchg
hlt
popf
sub
mov
push
push
mov
jae
inc
mov
scas
sbb
repz
jmp
dec
addr16
bound
sub
mov
xor
inc
mov
das
dec
out
mov
rcl
mov
inc
mov
add
shl
cmp
sti
cmps
fistp
data16
add
and
xchg
ds
inc
xchg
mov
ficom
dec
stos
add
iret
call
jecxz
cmp
mov
(bad)
int
(bad)
scas
leave
in
outs
into
sbb
or
bound
pushf
int3
(bad)
jne
xor
inc
les
hlt
fidivr
or
or
js
or
or
sbb
in
xchg
outs
push
sbb
xchg
fwait
sub
jno
cld
fld
xor
ret
in
push
psrld
push
and
cwde
out
sub
lods
inc
jmp
call
jno
movs
dec
add
sbb
fistp
pop
pushf
mov
fisub
mov
push
out
test
sub
(bad)
not
stos
shl
xor
cld
jnp
lock
js
lahf
pop
cmp
dec
mov
mov
mov
sub
xchg
mov
sub
dec
mov
add
fisttp
inc
mov
xor
cmp
scas
out
mov
mov
jge
xchg
xor
mov
mov
xor
inc
fwait
adc
mov
cmp
dec
cs
test
mov
pandn
dec
addr16
sbb
mov
jbe
popf
inc
sub
push
push
repnz
out
and
repnz
in
test
push
jb
push
pop
and
ror
bnd
sbb
xchg
outs
addr16
pusha
ror
iret
out
cmps
add
stc
xor
cli
mov
enter
or
mov
adc
icebp
mov
dec
gs
adc
pop
mov
mov
xchg
leave
or
ror
xchg
fisubr
cmc
jb
push
jmp
or
repz
jecxz
cld
aaa
add
dec
int3
ret
into
clc
or
xor
pop
xor
adc
jg
test
push
push
dec
popf
call
jmp
sub
push
jno
lahf
jnp
imul
dec
xchg
mov
mov
mov
push
(bad)
stc
sti
mov
add
cli
aad
neg
and
je
mov
lahf
cmc
repz
pop
mov
in
add
mov
add
and
jmp
mov
leave
jmp
es
mov
pop
int3
div
xchg
and
sbb
pusha
cmp
push
dec
test
and
pusha
lods
mul
shl
cmps
test
loop
jl
push
(bad)
jns
push
popf
add
xchg
and
cmps
movs
add
popa
sbb
mov
ss
lds
shl
sub
scas
rcl
daa
jge
scas
mov
dec
outs
jge
jo
xor
cwde
iret
lock
xor
and
mov
xor
mov
cs
lods
inc
mov
xchg
jnp
les
push
inc
movs
ins
arpl
ret
jl
mov
xor
or
popa
call
adc
sbb
mov
sub
and
not
arpl
inc
xchg
dec
and
(bad)
iret
rcr
in
fst
xchg
push
out
xchg
call
xor
lds
iret
arpl
dec
shl
rol
test
mov
repz
inc
xor
cmc
mov
mov
inc
stos
adc
sub
push
adc
iret
scas
call
mov
and
sbb
cmp
or
pushf
cwde
(bad)
xor
iret
pop
sbb
cmp
xchg
jge
pop
and
mov
inc
aaa
dec
or
ja
sub
std
fidiv
(bad)
retf
std
jns
push
sub
push
push
(bad)
sub
js
jg
xor
clc
dec
push
jnp
sbb
xchg
sub
pop
and
jb
lahf
dec
mov
(bad)
rol
pop
sub
push
jbe
in
stos
dec
lahf
in
lods
jne
das
jno
dec
scas
mov
faddp
add
add
sbb
imul
sbb
adc
pop
lods
stos
popa
fldcw
mov
jb
sti
xchg
cli
movs
push
adc
jmp
jb
lock
mov
jno
shld
or
adc
pop
test
jecxz
or
into
xor
ss
bound
call
and
dec
gs
jl
push
adc
stc
cli
rcl
add
leave
sub
mov
fist
dec
sub
xchg
ret
xchg
mov
cmp
ret
test
adc
mov
xchg
(bad)
stc
add
in
jae
push
(bad)
mov
xor
les
ficom
mul
ss
push
xor
sbb
jnp
jno
lea
shl
cmps
xchg
xchg
arpl
jnp
add
lds
retf
jle
push
push
mov
dec
loop
push
jae
(bad)
shr
push
xor
and
mov
mov
mov
dec
adc
xchg
inc
cmps
sbb
sahf
push
sti
pushf
das
sbb
mov
sbb
xchg
xchg
mov
pop
fst
adc
xchg
popf
mov
data16
pop
pop
movs
sub
hlt
adc
in
mov
jg
imul
cld
pop
clc
or
pusha
mov
idiv
out
in
mov
enter
out
cmp
fsubr
out
mov
add
lahf
ins
inc
sub
lahf
adc
jp
clc
mov
(bad)
cld
cmps
push
cmp
mov
xor
sub
inc
and
dec
pop
mov
lods
lods
push
popf
adc
jge
xor
and
enter
and
push
dec
repnz
sbb
clc
pop
cmp
(bad)
repz
jmp
cmp
sbb
push
pop
sbb
push
dec
inc
lods
out
xchg
bound
les
jmp
mov
mov
jg
pop
or
xchg
lods
stos
push
xchg
adc
inc
call
mov
leave
mov
mov
cmps
shl
lock
jne
adc
pop
push
jb
xchg
dec
pop
jmp
fsub
pop
mov
cmp
mov
lods
jno
push
(bad)
cmc
mov
cmps
jno
cld
mov
out
mov
(bad)
enter
gs
aam
fwait
ss
push
sub
popa
jg
jo
mov
fnstcw
add
aad
xchg
jo
or
aad
cmps
cmc
loop
sbb
popa
xchg
repnz
adc
das
xor
ret
push
shl
sub
inc
scas
int
ret
dec
loop
dec
mov
dec
adc
fistp
mov
(bad)
inc
dec
pop
movs
and
jb
cmp
clc
and
mov
rep
stos
cld
push
add
sub
ins
test
cmp
fwait
sub
lahf
test
xchg
js
gs
iret
pushf
push
fldcw
repnz
cmp
hlt
test
mov
fstp
xchg
mov
test
loop
adc
inc
scas
gs
(bad)
fs
fild
(bad)
pop
inc
xor
mov
inc
xchg
pop
and
and
stos
pop
jecxz
add
shr
(bad)
xchg
js
rcl
push
xchg
sar
jns
test
int3
add
in
fs
iret
pop
pushf
cmc
iret
xor
cli
xchg
fimul
cs
jle
push
mov
mov
cld
jp
retf
movs
add
retf
mov
(bad)
push
adc
sti
popa
ret
inc
mov
push
(bad)
call
fsubr
pop
lahf
jg
fnstsw
movs
vcvtpd2dq
std
sbb
icebp
inc
push
push
xor
jecxz
jmp
cmp
xchg
mov
xor
sbb
mov
mov
xlat
mov
(bad)
daa
in
cmp
mov
mov
bound
imul
fistp
aas
sub
loope
cwde
fwait
repnz
cmp
add
aad
pop
iret
outs
(bad)
call
xchg
retf
cwde
aam
or
outs
pop
cmp
xchg
inc
cmp
inc
lods
js
sbb
aas
jb
inc
leave
mov
push
mov
movs
jl
xchg
daa
clc
enter
or
push
jno
ins
xchg
cld
xor
shl
retf
mov
cdq
clc
sti
add
stc
jb
sub
xor
pusha
(bad)
dec
inc
retf
nop
popa
cmp
push
ficom
ins
fisub
pop
lds
inc
xor
and
pushf
add
jb
mov
outs
dec
mov
jg
mov
jne
(bad)
out
(bad)
push
mov
pop
or
fsubr
rcl
iret
out
movs
pcmpeqd
cmp
bound
xchg
mov
and
shr
mov
xlat
cmps
lea
sub
adc
ja
xor
or
xor
dec
mov
pslld
dec
out
pop
jmp
aas
cmp
push
mov
sub
mov
(bad)
push
xchg
shr
adc
xchg
les
mov
imul
iret
in
push
retf
dec
push
inc
mov
icebp
jmp
mov
xor
mov
ret
and
lock
mov
mov
outs
ret
jae
xor
cmp
dec
pop
pop
inc
fwait
adc
fcmovne
loope
loop
cs
aas
add
dec
imul
shl
in
and
cdq
cdq
mov
dec
pop
sar
cmp
call
adc
or
popf
push
mov
fs
out
mov
clc
and
xchg
cmp
xor
(bad)
push
mov
or
outs
cdq
movs
aad
fldcw
loopne
scas
leave
sbb
je
scas
pushf
ds
(bad)
call
aaa
out
icebp
test
and
imul
call
mov
or
lods
or
pop
push
sahf
(bad)
in
xor
(bad)
xchg
and
int
mov
sub
int3
scas
lahf
pop
lods
inc
scas
lods
push
stc
fadd
push
sub
or
mov
scas
inc
mov
xchg
cmp
or
mov
inc
test
mov
lahf
pusha
sbb
repnz
ja
sbb
xchg
and
sub
into
std
mov
jnp
fwait
xor
lds
sub
mov
in
lock
pop
pop
retf
sub
gs
mov
xor
sar
ret
push
pop
push
aaa
jg
mov
loop
mov
xor
sub
imul
mov
(bad)
in
add
int
ja
or
cmp
mov
xor
dec
mov
popa
cmps
push
add
sbb
(bad)
and
push
das
and
xor
pushf
dec
repz
int
shr
sub
pop
leave
or
loope
adc
pop
fistp
sub
(bad)
jmp
arpl
nop
test
out
jmp
or
into
mov
test
icebp
xchg
jecxz
mov
xchg
ins
mov
push
inc
fiadd
dec
out
into
inc
dec
inc
fsubr
aas
scas
add
cwde
and
sbb
rcr
pop
mov
lods
stc
ret
and
sahf
xchg
ret
mov
sub
mov
imul
xor
movs
and
(bad)
cmp
lea
sub
pusha
sbb
and
(bad)
leave
pop
repz
stos
sub
mov
mov
ror
cmp
mov
ins
(bad)
stc
push
or
movs
sbb
sbb
push
mov
in
xor
in
retf
sbb
mov
aas
jmp
xor
xchg
add
icebp
(bad)
std
inc
es
inc
shl
mov
rcr
pop
mul
xor
in
push
rcr
bound
retf
or
xchg
fstp
push
cmp
fwait
sbb
iret
enter
add
mov
scas
fcomp
mov
sbb
stos
aas
out
clc
sub
stos
xchg
cmp
jne
imul
inc
inc
xor
sahf
int
or
cwde
jmp
xlat
nop
mov
mov
inc
adc
stos
in
and
cmp
pop
cs
mov
and
mov
ds
enter
lods
push
xchg
jl
mov
lock
dec
lds
add
cmp
fcmovb
cld
mov
lods
mov
aas
add
in
lods
pop
idiv
arpl
dec
adc
rcl
add
hlt
add
mov
add
xlat
in
push
rcl
inc
sub
bound
out
mov
loopne
dec
ffree
divps
cli
sub
aam
clc
retf
loop
mov
ss
popf
stos
retf
loop
lds
sub
repz
jmp
mov
push
in
mov
cmp
push
add
lock
push
jo
push
mov
outs
mov
adc
aad
pop
rcl
lock
or
add
loopne
sub
jl
(bad)
in
fimul
stc
cmp
sar
lahf
(bad)
cld
out
(bad)
stc
iret
push
jae
scas
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
ror
mov
xchg
push
and
stos
je
je
xchg
test
call
shl
sbb
jge
repz
cmp
adc
inc
aam
adc
jle
jge
adc
dec
xor
les
aas
mov
stos
pop
and
mov
fstp
and
pop
sub
shl
xor
push
sbb
mov
clc
and
add
sti
add
cli
jns
xor
jno
cli
xor
sub
inc
xchg
call
mov
fistp
jge
(bad)
hlt
fsub
push
cmp
mov
sbb
sahf
mov
out
out
cmp
dec
jl
(bad)
loope
or
test
mov
pop
add
retf
scas
add
mov
out
mov
gs
mov
cmp
mul
adc
jl
jae
or
cmp
jb
adc
push
(bad)
mov
std
ins
in
mov
dec
fnstsw
pop
cli
xor
adc
sub
mov
xlat
lds
aam
push
lahf
cmp
mov
lods
ins
ins
jge
aas
xor
rcl
push
xor
out
(bad)
sbb
adc
inc
les
mov
fisttp
mov
ror
cmp
(bad)
arpl
sub
popa
lods
mov
lods
sbb
(bad)
push
cmp
pop
push
xchg
sbb
xor
scas
mov
push
cdq
push
xor
cmp
push
shl
fiadd
in
cld
cwde
call
dec
adc
mov
test
push
jo
mov
jp
xor
mov
repz
int
cld
test
das
jp
fidivr
push
lods
sub
or
jnp
out
out
movs
fwait
je
xor
xlat
shl
call
int3
sbb
sbb
mov
popa
fcomi
sbb
dec
mov
sbb
adc
cmps
je
mov
jns
adc
mov
loop
ss
scas
enter
cmp
fimul
adc
mov
not
sub
nop
dec
jmp
int3
xlat
jo
push
cs
sub
inc
sub
mov
pop
lahf
call
stos
xchg
in
sub
xchg
jb
fist
fisub
fidivr
sbb
cmp
pop
and
jns
int
sbb
not
in
cdq
(bad)
cli
aam
cmp
cmp
add
or
(bad)
pop
(bad)
mov
aad
sbb
in
loopne
cmp
dec
jns
or
or
sbb
ror
call
pop
cmp
xor
cld
loop
adc
or
xchg
ret
and
retf
jg
je
inc
loopne
icebp
not
cmp
ja
and
inc
jo
mov
lahf
mov
loope
aad
pop
shl
aas
lods
aad
push
jge
gs
stc
mov
hlt
mov
sub
cs
and
mov
dec
movs
imul
cmps
ror
mov
stos
xchg
in
mov
(bad)
int
dec
cmps
cmp
gs
adc
xor
movs
fwait
out
jmp
xor
fcmove
add
addr16
stos
or
adc
sbb
cmp
and
inc
mov
xchg
ror
mov
loope
int3
outs
xor
aam
shr
cmp
sub
mov
push
adc
xchg
cmc
mov
xchg
mov
data16
adc
and
push
jmp
pop
add
in
imul
dec
gs
ss
pop
mov
dec
jb
jmp
(bad)
fiadd
adc
nop
jp
out
out
fwait
push
mov
cmp
(bad)
and
fcom
mov
dec
inc
test
jmp
rol
je
mov
mov
das
mov
mov
(bad)
fistp
out
sub
adc
ins
mov
xor
mov
pop
mov
pop
jae
idiv
(bad)
cld
mov
cdq
xchg
add
xchg
sar
aad
sub
and
stos
cmp
movs
jl
dec
int
iret
(bad)
in
inc
or
pop
xor
lea
pop
xlat
mov
retf
fimul
pop
(bad)
iret
(bad)
sbb
lods
add
ins
ret
cmp
push
cmps
es
sub
jae
sbb
ins
sub
add
pop
scas
dec
push
dec
sti
mov
scas
fcomp
call
cli
lods
pop
and
mov
fwait
ins
fmul
push
xor
sub
cli
jno
mov
aaa
pop
mov
retf
(bad)
adc
mov
cmps
sub
ds
sti
stc
adc
xor
daa
aam
mov
or
rcr
sbb
popf
outs
mov
and
outs
mov
pop
xlat
mov
xor
pop
in
xor
jae
cmp
mov
daa
sub
sub
jnp
jae
mov
je
int
cmp
ja
adc
mov
(bad)
in
cmc
cmps
jge
jecxz
inc
and
out
or
int
jmp
clc
out
ins
mov
adc
out
(bad)
sti
ss
das
test
icebp
cmp
sub
mov
sahf
rcl
xor
mov
loop
jo
mov
mov
sbb
push
pop
mov
dec
mov
icebp
dec
or
fst
sub
call
mov
xlat
lahf
in
jne
mov
xchg
(bad)
ret
mov
add
in
(bad)
sti
xchg
pop
sub
stos
mov
mov
sbb
add
fs
repnz
cs
es
mov
jno
sbb
test
mov
mov
(bad)
push
neg
mov
jmp
pushf
sub
out
arpl
mov
add
push
mov
cmp
jle
bound
pop
add
ins
loop
inc
mov
add
or
out
setnp
push
jle
clc
inc
aas
pop
lahf
sbb
xor
push
mov
dec
cli
push
(bad)
js
mov
xchg
sub
rcr
add
dec
(bad)
xor
bound
ja
fmul
fwait
inc
pop
hlt
retf
dec
mov
(bad)
loopne
xor
in
or
mov
dec
call
movs
xchg
adc
jns
xchg
jg
mov
loopne
jb
jb
shr
xor
imul
mov
int
test
sub
sub
or
mov
dec
mov
push
in
jp
dec
outs
sbb
cmp
xchg
inc
movs
add
pshufw
sbb
ds
mov
push
push
leave
popa
push
xor
mov
cdq
cli
jo
push
push
sbb
(bad)
cmp
push
pop
cli
push
sub
adc
adc
or
dec
mov
xor
fs
cwde
daa
mov
dec
inc
mov
fwait
aaa
cmp
sbb
aam
xchg
movs
push
stc
push
rcr
fcom
mov
jl
fidiv
mov
push
mov
daa
popa
mov
jp
loopne
mov
and
sub
pop
pop
shl
xlat
es
cmc
lahf
or
cmps
jmp
mov
pop
add
add
jo
mov
sbb
adc
outs
jno
test
into
add
jne
or
mov
cmp
das
jbe
pop
xor
xlat
retf
ret
mov
ins
push
and
fs
outs
shl
(bad)
xlat
jns
sbb
xor
retf
sar
repnz
(bad)
loope
loop
mul
aad
ficomp
(bad)
add
ret
in
je
cmp
add
and
fistp
push
mov
jmp
mul
xchg
repz
rcl
dec
add
jo
or
dec
fstp
imul
shr
fsub
sub
inc
cmps
jae
rcr
aad
mov
int
push
adc
outs
mov
jno
xchg
xchg
mov
or
or
push
mov
arpl
xor
mov
dec
shl
imul
ja
mov
test
mov
dec
mov
test
xchg
sti
(bad)
pop
xchg
jmp
and
jmp
pop
in
fidivr
or
sub
push
leave
xor
inc
xor
int
sub
jg
out
add
aaa
push
movs
(bad)
pop
loope
mov
sar
jp
std
sub
cmc
cs
in
arpl
mov
hlt
out
sub
jns
sbb
pop
rol
jnp
ret
cli
jbe
cmp
jle
xor
dec
loop
je
inc
rcr
jbe
xchg
mov
xor
mov
test
dec
adc
test
cmp
call
popf
popa
jg
out
(bad)
sbb
sbb
mov
jle
or
popf
sub
inc
and
push
(bad)
sub
cmp
jmp
sbb
scas
test
test
stc
cmp
push
les
push
push
push
mov
scas
and
pop
dec
push
das
push
int
inc
in
movs
push
out
xchg
push
or
sar
stc
fbstp
dec
mov
iret
or
sbb
sub
lds
neg
or
pop
adc
mov
pop
xchg
mov
stos
xor
fist
jne
add
sub
pusha
sbb
fst
repnz
imul
push
adc
mov
jnp
mov
jmp
loope
dec
or
pushf
xor
push
inc
add
mov
push
leave
xor
aam
mov
jbe
pusha
enter
sbb
jns
mov
adc
jp
loop
daa
sti
mov
lea
xor
(bad)
retf
int3
out
test
mov
(bad)
mov
call
das
icebp
sar
sub
pusha
push
fstp
loopne
pop
cmp
repnz
adc
dec
lds
and
(bad)
ror
jmp
mov
jge
sub
ret
mov
xor
and
je
xchg
and
push
call
clc
(bad)
(bad)
leave
sbb
aaa
sub
add
lock
ins
dec
idiv
xchg
(bad)
mov
dec
mov
dec
and
push
sbb
push
sbb
call
mov
aad
cmp
hlt
in
xor
add
retf
push
inc
sub
pop
pop
adc
cli
inc
bound
jl
mov
xor
push
je
ins
adc
dec
sub
adc
out
bound
or
cmp
jne
cmp
in
(bad)
mov
call
xchg
dec
dec
jmp
cmp
call
mov
lahf
in
dec
pop
stos
jno
adc
test
inc
cmp
dec
int
jo
inc
xchg
and
in
xchg
jl
pop
test
stos
out
xchg
lock
std
retf
ror
jnp
inc
jo
xchg
mov
jg
sub
jne
push
xchg
movs
idiv
mov
xchg
and
xchg
pop
inc
xchg
cmp
pop
add
sbb
mov
stos
add
fmul
sbb
pop
leave
xor
fcomp
in
ins
mov
loopne
pop
je
xor
das
and
or
rcl
xchg
xlat
add
movs
pop
xor
outs
call
je
fwait
movs
test
scas
retf
xor
xchg
sub
xchg
push
pop
pusha
or
fs
mov
out
sahf
jmp
mov
dec
jae
in
pop
jae
rol
pop
adc
mov
aad
into
in
ret
sub
in
ret
std
call
inc
call
push
push
(bad)
sub
xchg
mov
es
sbb
fsub
inc
add
jbe
mov
fcomp
aas
inc
or
pop
mov
into
jle
fimul
sbb
jns
cmps
xchg
pop
cmp
xor
cwde
mov
or
xor
cwde
popf
push
mov
add
adc
int
cli
cmpxchg
mov
inc
inc
xlat
jge
mov
push
mov
rol
rol
jae
dec
stc
ficom
stos
push
and
and
pop
sbb
lods
jns
add
mov
in
add
sbb
pop
cmp
inc
int
cld
movs
add
scas
dec
mov
dec
mov
mov
pop
loop
jb
xor
add
in
stos
les
push
dec
push
gs
cmp
jge
fcomip
ins
cmp
xor
add
adc
xchg
mov
sbb
xor
addr16
push
pop
mov
out
fwait
dec
mov
dec
aas
retf
mov
imul
and
sbb
push
sub
loope
push
sub
repz
cmp
idiv
stc
jne
pmaxsw
in
inc
inc
fprem
int
cwde
fadd
cmps
jge
push
sub
neg
(bad)
ror
xchg
test
hlt
pop
cmp
daa
add
xor
dec
(bad)
fmul
xchg
int
rol
data16
(bad)
in
or
cdq
mov
ret
loopne
mov
pusha
cwde
std
stos
daa
shr
mov
gs
call
cmp
inc
(bad)
sbb
(bad)
mov
jge
and
pop
jge
ss
scas
dec
ret
or
jmp
ret
jg
clc
add
mov
pop
pop
gs
idiv
or
mov
xchg
or
cmp
(bad)
fst
ins
mov
sub
mov
mov
adc
adc
shl
lods
xor
je
loop
xlat
cmp
neg
bound
mov
loop
mov
fmul
fldenv
cli
push
xor
ja
call
cld
test
mov
ins
icebp
jmp
sub
mov
repz
arpl
add
sub
push
movs
pop
and
push
inc
sbb
cdq
iret
push
in
push
dec
ds
inc
and
repnz
mov
jno
nop
leave
jge
ins
fadd
nop
int
xor
dec
(bad)
push
daa
xor
imul
or
add
jne
or
cmp
pushf
daa
jp
jg
mov
scas
pop
popf
ins
pushf
lods
out
sbb
mov
add
push
or
or
inc
nop
and
push
rcl
dec
dec
jmp
mov
add
push
mov
dec
add
dec
neg
fsubr
loopne
sahf
inc
push
dec
sub
push
inc
push
jle
xor
adc
imul
aam
mov
lea
stos
stos
test
ret
sub
mov
(bad)
outs
jmp
aaa
cdq
sar
lods
cmp
stos
fldcw
ss
cmp
ja
push
xor
mov
imul
mov
jnp
test
pop
fstp
push
test
xchg
lea
xchg
aas
popa
and
cmps
into
add
cmp
jo
jmp
jmp
scas
mov
or
xchg
pop
push
sbb
pop
mov
mov
push
jg
pop
cmc
rol
aaa
gs
retf
xchg
pop
clc
dec
aas
fnstsw
or
pop
mov
dec
cmp
inc
inc
jge
cli
xchg
or
and
pop
fdivrp
sbb
mov
jnp
fdiv
cmps
popa
ins
loope
fnsave
outs
push
jnp
lods
icebp
xchg
clc
addr16
stc
push
inc
(bad)
popf
mov
mov
sbb
scas
shl
mov
in
cmp
dec
(bad)
in
xor
lahf
dec
fcomp
data16
call
mov
outs
xor
jmp
loop
sbb
xchg
(bad)
pop
push
and
push
outs
or
adc
int3
(bad)
inc
in
cmps
xchg
and
cwde
jecxz
ret
shl
adc
jb
xchg
add
xor
(bad)
fidivr
adc
push
(bad)
xchg
xor
mov
adc
mov
cmp
retf
rcl
int3
lods
push
nop
mov
jg
bound
retf
call
sub
sbb
dec
mov
out
jge
inc
call
mov
test
fistp
jo
rcr
int
call
or
fbstp
les
cmc
nop
cs
adc
mov
std
call
sub
js
sbb
cmp
out
jg
stc
out
jmp
sar
aas
mov
push
pop
cld
enter
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
xlat
add
pop
add
outs
mov
in
push
xchg
mov
mov
pop
(bad)
mov
pop
pop
mov
pop
xchg
push
or
mov
mov
fidiv
dec
sti
js
jns
pop
add
call
push
ret
ja
es
popf
dec
cmp
ficomp
iret
xchg
add
lods
adc
aas
dec
xchg
je
fucomip
imul
cmc
adc
jl
mov
cmp
jg
inc
lods
lods
mov
fnstcw
or
cld
fs
dec
repnz
divps
sub
aaa
jmp
mov
(bad)
cld
scas
xor
sar
test
fisttp
or
pop
aam
cs
out
les
xor
push
pop
imul
mov
push
cs
scas
sub
out
test
je
(bad)
cmp
inc
xchg
sbb
lahf
outs
int3
pop
rcl
ins
mov
sub
fiadd
das
sbb
xor
fnop
mov
or
jae
fnstenv
aaa
mov
mov
mov
push
pop
mov
fsub
fadd
sub
sti
in
pop
sbb
pop
fwait
les
lods
mov
jmp
sub
nop
xor
dec
push
push
pop
in
mov
cmp
aad
pusha
daa
shl
mov
sar
(bad)
cwde
mov
dec
adc
enter
aad
pop
pop
jb
psrad
push
ja
adc
fscale
cli
int
movs
retf
xchg
pop
mov
arpl
ret
add
lea
mov
ret
inc
push
movs
mov
aas
pop
rol
jno
dec
mov
mov
push
cdq
dec
mov
in
data16
test
sub
add
pop
sbb
movs
cld
out
add
fsub
(bad)
fcmovnbe
daa
fdiv
shr
or
loope
pop
enter
xor
cmp
cmps
loope
sbb
jb
movs
movs
mov
jae
sub
les
mov
mov
xchg
stos
sbb
retf
shr
mov
fsubr
int
xor
aam
imul
fistp
fwait
movs
sbb
xor
es
cmp
das
std
inc
push
jmp
imul
lods
cld
in
lea
sbb
fwait
push
in
retf
mov
test
xchg
(bad)
movs
rcl
xchg
retf
out
pop
scas
pop
pusha
jp
(bad)
pop
dec
xor
daa
test
in
cli
int
push
or
jecxz
aad
in
jecxz
jnp
out
test
hlt
mov
out
hlt
push
xchg
sbb
fadd
and
xor
in
xor
stos
sub
and
test
adc
sbb
cmp
pop
sbb
je
std
mov
push
xor
xchg
sbb
sub
fs
dec
xchg
fild
jne
push
xor
addr16
sbb
arpl
call
lahf
repnz
ins
mov
repnz
mov
out
sar
int3
or
pop
jge
dec
int
jl
push
not
fimul
sbb
imul
sahf
dec
test
aaa
jmp
aam
mov
cld
mov
bound
xchg
std
ret
stos
out
out
fwait
jmp
jno
or
bound
or
xor
mov
dec
push
inc
xchg
xchg
sahf
mov
dec
imul
adc
jns
jle
push
mov
mov
cwde
neg
imul
dec
loope
mov
mov
(bad)
cmp
jmp
xor
push
xchg
pusha
popa
inc
cmps
jb
fmul
idiv
pop
jecxz
push
jecxz
daa
pop
jp
sub
movsx
movs
shr
(bad)
(bad)
mov
mov
sbb
mov
das
rol
ret
push
add
(bad)
cmps
sub
sbb
repz
mov
in
shr
dec
or
xchg
jbe
repnz
div
inc
mov
sti
jae
frstor
mov
fcom
jmp
adc
xchg
jnp
sub
dec
stc
movs
xchg
dec
fisubr
data16
movs
mov
call
lods
mov
rol
loopne
xchg
xchg
(bad)
repnz
imul
or
xlat
rcr
push
fcom
test
sti
xchg
aam
cwde
and
mov
push
xor
mov
dec
sub
jg
cmp
add
dec
fcom
sub
adc
(bad)
sub
sar
shl
sbb
data16
mov
shr
cld
adc
(bad)
push
cs
mov
or
out
addr16
push
sbb
(bad)
loop
push
lods
aaa
rol
sbb
or
sub
fisttp
sub
cmp
jb
or
scas
jns
fidivr
push
scas
cmc
lea
addr16
aas
xor
jns
inc
test
mov
inc
pop
sti
retf
mov
in
cmp
(bad)
(bad)
cmp
cwde
fbld
(bad)
jp
xchg
xchg
xlat
int3
jmp
inc
mov
mov
rcl
lock
jl
dec
cmp
lods
fimul
cmp
rcl
pop
sahf
loopne
dec
cs
fisttp
in
mov
sub
ror
xor
mov
and
xor
and
mov
add
sti
sbb
xchg
mov
add
rol
pop
sbb
pop
out
inc
cmc
sbb
adc
test
std
in
cmp
into
pop
push
out
cs
leave
lock
cmps
and
mov
mov
push
sar
pop
push
loop
stos
sbb
pop
or
mov
(bad)
jmp
(bad)
(bad)
ins
dec
ret
lock
jge
cli
or
xor
xor
ss
mov
rcl
aad
xchg
pop
inc
jg
imul
push
pop
sbb
dec
sub
lahf
jne
jg
push
pop
pop
aas
jl
xlat
cmp
sbb
leave
lods
xchg
add
push
inc
xor
xchg
jno
mov
mov
xor
pop
jb
jp
dec
mov
sbb
adc
test
inc
fwait
in
mov
sti
or
call
sub
les
sbb
popa
test
inc
or
xchg
in
pop
ins
push
mov
stos
data16
fist
inc
mov
adc
out
sub
sbb
jo
fst
cwde
jnp
mov
or
dec
add
shl
mov
in
and
pop
mov
mov
add
(bad)
mov
xchg
(bad)
and
inc
leave
data16
rcr
jo
push
xlat
outs
popa
ret
inc
shl
mov
inc
call
jne
jmp
repz
adc
scas
fistp
add
push
pop
retf
sub
fs
mov
mov
arpl
iret
sti
bound
sti
hlt
sar
jae
fs
xchg
add
jnp
(bad)
mov
fwait
ins
into
cmps
imul
or
mov
push
pop
push
mov
test
sti
stos
xor
sbb
push
sub
cmp
cs
data16
push
fstp
push
das
test
xchg
iret
inc
sar
jge
jbe
cwde
push
mov
sbb
cs
lods
inc
clc
pop
sub
imul
test
repz
movs
jmp
(bad)
fwait
adc
or
je
stc
in
fwait
cwde
(bad)
mov
add
jne
xor
ds
mov
xor
jb
xchg
add
lds
ja
arpl
xor
fdivp
leave
pcmpgtb
cdq
ins
cdq
xor
sub
bound
sub
jle
mov
jae
and
and
in
push
js
ror
fistp
hlt
dec
out
mov
in
xor
jae
pop
dec
add
push
add
retf
js
ins
mov
retf
inc
mov
pusha
lock
lods
pop
dec
stos
xchg
xor
sub
sbb
mov
fadd
add
mov
pop
je
int
cli
xor
das
lea
pop
sub
adc
scas
mov
std
imul
loopne
dec
mov
cli
mov
push
inc
(bad)
retf
test
inc
je
icebp
and
and
jmp
adc
cld
dec
pop
bound
push
pop
add
nop
out
test
enter
sub
sub
jns
or
sbb
mov
mov
aad
xchg
aas
mov
mov
push
clc
and
push
js
adc
mov
outs
cmp
lea
sub
rcr
shl
push
push
push
push
fisub
sub
pop
pop
adc
mov
xor
or
mov
adc
clc
sub
push
fcom
fisubr
adc
sbb
dec
out
jbe
sti
movs
dec
and
fcomp
aaa
add
js
inc
cmps
(bad)
jl
stos
or
sbb
sub
dec
enter
jl
outs
imul
loope
mov
adc
retf
adc
imul
imul
retfw
out
(bad)
push
aad
dec
push
ins
std
data16
pop
pop
push
sbb
cs
not
ss
mov
(bad)
call
retf
std
dec
(bad)
xchg
out
sbb
or
stc
xor
(bad)
(bad)
xor
cmps
add
xor
aas
mov
popa
jmp
movs
pop
outs
push
push
sbb
clc
and
(bad)
inc
cld
xchg
and
ins
rol
test
cmp
ins
xchg
ss
push
popf
cmc
or
fadd
cmps
push
fwait
addr16
jmp
cmps
(bad)
addr16
sub
push
int3
cmps
xchg
(bad)
and
popa
das
movs
adc
out
mov
cmp
fwait
xchg
retf
sub
mov
sbb
add
aam
cmp
dec
push
add
cmp
xchg
xlat
test
(bad)
lds
or
leave
jl
pop
sti
or
sub
iret
sub
xor
ja
jge
aas
sbb
xor
cmp
dec
jmp
enter
test
ret
das
imul
loope
int
loope
lds
mov
jge
call
and
and
mov
cmp
std
lds
xlat
test
dec
adc
fisttp
mov
push
repz
loope
bound
or
sbb
in
jbe
inc
inc
dec
jns
xchg
inc
add
sub
mov
ss
pushf
add
movs
shl
std
inc
dec
xchg
int3
mov
inc
dec
cmc
push
movs
dec
movs
imul
pushf
aaa
cmp
in
scas
or
icebp
mov
and
jl
jns
push
sub
cmp
inc
ins
stos
xlat
adc
(bad)
shl
xchg
movs
jno
xchg
sub
daa
or
cs
pop
shr
(bad)
call
jb
cwde
adc
pushf
push
xor
push
mul
sbb
js
mov
out
in
xchg
(bad)
adc
or
stos
push
dec
sahf
out
fisubr
sbb
mov
cmps
call
and
mov
mov
repz
mov
lds
test
(bad)
push
lds
push
cmps
push
sti
div
sub
jg
je
bound
sbb
cmp
loop
popf
sbb
outs
jp
cld
inc
mov
and
mov
sti
push
fwait
repnz
fstp
cmp
jle
jno
into
xchg
aad
ret
mov
push
cdq
jmp
or
icebp
js
inc
push
pop
ja
inc
dec
adc
mov
xor
and
repnz
mov
lods
es
les
cmps
sbb
sbb
addr16
mov
adc
sub
xchg
test
fcom
ret
and
xchg
cld
sbb
push
sub
xor
inc
sub
pop
inc
cmc
mov
lds
ret
mov
pop
imul
ret
sub
shl
xchg
dec
into
cmp
ds
cmc
test
lds
movs
(bad)
popa
push
int3
dec
mov
(bad)
repz
je
dec
mov
inc
outs
push
fsubr
jge
jp
pop
sbb
sub
fmul
scas
sub
in
(bad)
ins
arpl
ins
mov
adc
outs
hlt
fidivr
rol
stc
das
dec
ss
fidiv
mov
cmp
dec
cmp
ds
and
push
xchg
imul
adc
mov
mov
ins
aaa
sbb
mov
sbb
sub
xchg
fs
dec
lds
adc
adc
inc
mov
push
and
in
pop
inc
xchg
fsub
in
inc
cld
mov
xchg
jmp
in
jnp
pop
aam
or
data16
rol
jp
or
clc
push
lds
(bad)
aam
daa
push
jmp
(bad)
ret
bound
xchg
fadd
adc
dec
push
js
and
bound
mov
stos
movs
and
sub
repnz
test
lahf
js
fs
icebp
sahf
movs
cld
mov
dec
mov
daa
dec
imul
or
xor
mov
xor
outs
xor
xchg
add
data16
push
in
push
out
pop
mov
push
shr
loop
push
je
mov
mov
fisubr
push
test
add
pop
push
mov
mov
cmp
lock
push
cmp
retf
push
imul
xor
outs
xor
mov
sbb
int3
xlat
hlt
mov
jge
pop
gs
cwde
pushf
leave
sbb
ins
adc
clc
fst
mov
imul
dec
and
loope
sub
push
stos
ins
call
idiv
jge
loop
jns
jmp
mov
pop
inc
repnz
xor
mov
imul
cld
pop
inc
pop
lds
or
jecxz
add
add
push
fsubr
sub
adc
addr16
sub
out
add
and
ins
cmps
inc
sub
jbe
and
mov
leave
xchg
add
and
jecxz
stos
scas
jmp
hlt
out
pusha
call
fwait
imul
add
and
and
lods
stos
cmps
out
test
inc
xchg
push
call
mov
sub
add
shr
push
and
mov
mov
add
cli
pusha
daa
movs
mov
jge
ds
or
fsubr
call
sub
jo
out
stos
jno
pop
mov
mov
test
stos
jge
call
mov
and
and
inc
and
push
cdq
mov
cmp
int3
repz
or
mov
xchg
add
inc
jge
jnp
(bad)
call
daa
pop
push
jae
cmps
pop
jle
or
pop
cs
js
inc
lea
sub
dec
sbb
add
push
mov
out
inc
cdq
and
pop
or
aaa
data16
sub
sub
add
xor
scas
xor
shr
jae
cwde
ror
cwde
loop
test
xor
ret
xchg
stc
daa
(bad)
(bad)
xor
movs
inc
and
out
jecxz
xchg
dec
aaa
ds
(bad)
nop
or
ret
jb
cwde
fwait
test
lock
add
addr16
add
(bad)
and
outs
js
push
jg
or
inc
sbb
jmp
dec
adc
test
xchg
push
jecxz
cmp
xor
sbb
push
icebp
adc
cld
mov
popf
push
std
cmps
retf
xor
mov
shr
test
out
jne
pop
mov
jmp
ss
sub
fdiv
ins
mov
out
mov
sbb
adc
test
cmc
jae
or
movs
test
stc
mov
(bad)
lock
gs
clc
outs
push
ja
push
scas
inc
aas
xchg
in
in
lock
sub
mov
adc
pop
adc
dec
sub
popa
jae
repnz
out
xor
(bad)
repz
mov
dec
lock
pop
fwait
sbb
mov
pop
mov
clc
xor
mov
jne
jne
loope
ja
sbb
cmps
sbb
jae
pop
inc
sub
mov
pop
aas
pop
or
test
mov
(bad)
mov
mov
add
fstp
test
inc
pushf
int3
mov
fldenv
mov
cld
(bad)
je
adc
nop
fsubr
mov
lods
leave
fcomp
pop
icebp
iret
das
sub
push
sub
jb
jmp
adc
sahf
clc
imul
dec
add
xor
fsub
std
sub
xor
cmp
hlt
xor
add
mov
pop
jg
leave
sbb
cmp
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
mov
add
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fst
dec
popf
imul
fwait
imul
cmp
imul
dec
xlat
hlt
jmp
mov
add
enter
add
xchg
add
fs
loope
into
push
std
cmp
stos
add
cmp
push
adc
imul
push
adc
cld
xchg
das
adc
adc
mov
xchg
ret
jmp
fist
mov
sahf
loope
outs
cli
les
retf
js
mov
jecxz
cmp
mov
mov
jnp
jno
loope
(bad)
cmps
jns
xchg
gs
mov
mov
iret
sbb
(bad)
sbb
jnp
cmp
jmp
outs
mov
call
and
fcomp
rol
mov
jmp
mov
mov
shl
sub
push
sbb
in
adc
cmp
add
lods
daa
cs
mov
sub
and
cmp
lods
mov
push
sbb
jmp
mov
or
fistp
cli
jns
mov
jle
fst
pop
inc
or
out
xor
pop
inc
add
(bad)
(bad)
inc
jg
(bad)
pop
int
aaa
shl
or
cmps
sbb
jns
adc
add
daa
test
in
jo
dec
test
mov
dec
div
and
mov
xlat
stc
ins
cmp
clc
movs
and
or
leave
xchg
dec
mov
add
dec
mov
push
aam
int
cld
xchg
xchg
jno
jae
adc
cli
fwait
jecxz
in
pop
out
sub
push
push
fcom
loope
dec
cli
hlt
in
scas
je
lds
fadd
sbb
or
pop
imul
lods
bound
lods
pusha
setbe
mov
mov
int3
aam
xchg
out
daa
fdiv
adc
ficomp
sar
inc
dec
jno
aad
lahf
test
push
ds
and
jbe
add
call
push
and
icebp
and
mov
sub
jmp
test
jnp
fld
div
ins
jb
sub
sbb
push
xlat
test
or
sti
or
and
adc
sbb
cwde
inc
mov
pop
mov
inc
push
shl
fist
mov
xor
adc
popf
in
repz
pop
jg
dec
push
adc
lods
mov
fidivr
scas
mov
out
pop
mov
pop
jnp
ret
jb
out
mov
pop
lods
stos
test
mov
imul
cld
mov
clc
ret
push
mov
js
xchg
daa
retf
add
cmp
jmp
pop
cmp
xchg
inc
and
stos
mov
imul
aad
bound
fisubr
in
mov
pop
xchg
pop
outs
(bad)
ds
sti
fnstenv
hlt
in
adc
rcr
mov
cmps
aam
add
xchg
in
sbb
lods
sbb
sahf
jns
cdq
jg
ins
xor
xor
inc
test
xchg
inc
imul
icebp
push
sub
test
ret
and
adc
mov
mov
mov
loopne
dec
std
mov
adc
mov
add
mov
cwde
pusha
push
xlat
les
popf
mov
test
or
das
rcr
jmp
ret
aas
pop
mov
dec
lods
outs
and
std
cwde
lods
enter
jns
in
push
ds
aad
fs
mov
xchg
adc
addr16
mov
(bad)
mov
xor
call
add
add
pop
pusha
pusha
xchg
cwde
outs
jne
dec
jne
xor
mov
cmp
ror
popf
and
aaa
xchg
lods
sub
in
sub
fimul
add
sbb
mov
dec
fs
xchg
je
sbb
loopne
adc
adc
pushf
dec
adc
repnz
imul
push
les
mov
je
jns
mov
aaa
xchg
popf
jmp
jle
mov
or
jmp
pushf
sub
and
lods
int
jmp
not
mov
sub
and
push
sub
fidiv
xchg
lahf
cmps
test
fisttp
jb
sub
cld
pop
in
pop
nop
mov
push
fsub
cs
pop
sbb
dec
call
into
int
push
outs
sti
sub
out
mov
push
jge
lahf
mov
icebp
loop
fxch
xlat
xor
sub
fcmovbe
add
xchg
or
jge
xchg
fldcw
retf
jp
mov
arpl
aas
sti
(bad)
adc
and
mov
mov
jns
fidiv
jge
mov
or
retf
dec
mov
add
adc
dec
pop
push
xlat
or
(bad)
(bad)
fwait
dec
push
pop
push
in
dec
jl
enter
or
jg
xor
sti
jmp
mov
repnz
lock
inc
pop
enter
call
and
push
mov
cld
adc
mov
jo
das
aad
stc
xchg
adc
sbb
jp
outs
cli
popf
xchg
retf
fcomp
xor
sbb
retf
push
jge
inc
push
xor
aad
cli
push
cli
int
stos
or
retf
je
into
enter
outs
repz
pop
jle
mov
mov
popf
cdq
xchg
cmp
adc
fucomip
xchg
cmp
mov
movs
and
jb
adc
jno
in
sbb
mov
jns
ds
fild
or
push
scas
fndisi(8087
xor
mov
mov
scas
jl
xchg
cmps
call
and
adc
imul
dec
jne
daa
pop
sahf
cmp
in
shr
mov
rol
mov
push
mov
call
xor
jp
(bad)
jle
sub
in
lods
adc
data16
pop
cvtps2pd
adc
repz
js
jge
add
sahf
adc
cmps
mov
lock
rcr
xchg
(bad)
repz
les
(bad)
test
rol
xchg
fs
daa
retf
dec
push
hlt
xchg
cdq
push
xchg
sbb
adc
push
ja
mov
retf
out
mov
call
xlat
les
pop
out
psubd
ds
xchg
in
jo
jae
jp
cmp
and
push
jne
lds
and
push
adc
in
nop
dec
mov
lahf
cdq
sub
lds
aas
adc
push
fst
sub
push
cs
fsub
mov
mov
pop
and
jae
in
loope
dec
outs
adc
or
sbb
aam
movs
shl
add
jl
cmp
popf
xor
cmp
aad
sub
leave
sbb
shr
mov
clc
fstp
fisub
xchg
jbe
iret
out
dec
jg
ins
das
fwait
movs
jle
(bad)
xor
xor
cmps
lods
jp
cmc
push
mov
pop
xchg
mov
cdq
sub
lds
and
shr
push
push
retf
mov
jmp
fwait
adc
jmp
fsubr
adc
mov
jecxz
imul
jne
mov
sub
test
mov
or
cli
out
(bad)
mov
ss
cwde
jmp
popa
in
pop
add
scas
jne
dec
sar
cs
jo
out
ss
adc
and
sbb
test
outs
cmp
fistp
inc
mov
ss
cmps
pop
xchg
pusha
sahf
sub
pushf
cdq
push
and
jg
jae
sub
push
jnp
lea
aaa
aas
pop
pop
arpl
cmps
out
adc
sub
lahf
shl
lods
cmp
and
dec
div
xchg
mov
lds
cwde
dec
mov
aaa
dec
push
mov
sahf
aam
xchg
stos
popa
mov
mov
int3
dec
mov
icebp
shl
dec
outs
test
out
pop
add
inc
jmp
mov
std
ds
jo
jge
xor
fidiv
mov
xlat
loopne
sub
pop
cwde
inc
add
fadd
inc
dec
fsubr
(bad)
icebp
ret
movs
push
jo
sbb
cld
mov
cmp
or
xchg
aaa
movs
out
or
fist
into
rol
sbb
inc
inc
cmp
test
and
cmp
std
jmp
pusha
jb
sbb
pusha
out
jg
jmp
(bad)
daa
ja
ins
dec
dec
or
xor
pop
stos
jmp
std
scas
in
adc
mov
icebp
mov
pop
sar
xor
fcmove
sub
jg
add
pop
inc
in
add
adc
inc
push
jno
fnsave
retf
fisttp
or
jnp
shr
in
mov
adc
or
stos
mov
jmp
mov
push
cdq
inc
sbb
inc
cld
rol
jg
ins
jno
popa
ficom
out
mov
outs
sub
jle
enter
aas
add
lods
xchg
jmp
push
jae
imul
rep
jl
out
movs
ins
out
in
test
adc
xor
and
pop
scas
pop
sahf
jns
in
les
hlt
push
or
dec
jl
rol
cli
inc
jg
mov
xor
shl
pop
xchg
mov
mov
int
mov
cmps
popf
add
rcr
movs
ins
repz
mov
xchg
mov
(bad)
(bad)
cmps
xchg
pop
sbb
add
(bad)
sbb
mov
fbstp
sub
popf
(bad)
(bad)
outs
lahf
mov
aas
arpl
pop
stos
out
int
(bad)
xchg
sub
xor
sub
cmp
mov
and
mov
cmps
cmps
add
std
dec
push
sahf
mov
sub
or
mov
pop
stos
and
sti
jp
jae
xor
pusha
mov
repnz
xor
sti
ins
lds
jle
sub
cld
jmp
(bad)
iret
add
sahf
push
push
loop
and
into
pop
pop
ror
jle
imul
and
pusha
(bad)
sbb
sbb
mov
push
fild
mov
leave
outs
clc
cmp
pop
lds
aas
std
jnp
aas
ror
xor
push
and
lahf
minps
push
mov
cmp
or
lock
ficomp
aas
push
daa
clc
mov
aad
pop
jne
add
loope
xor
or
mov
lds
or
aas
and
mov
mov
leave
xchg
stos
dec
(bad)
fdivr
mov
outs
daa
aam
nop
ins
cmc
hlt
sbb
mov
jae
cmc
les
pushf
add
mov
jo
dec
and
pop
test
lock
jnp
stos
mov
mov
mov
xchg
mov
addr16
xchg
out
xchg
ret
push
cmp
imul
test
retf
imul
cmp
call
push
inc
inc
mov
jne
cld
or
inc
gs
dec
inc
mov
shr
mov
das
popf
dec
push
(bad)
enter
sbb
lahf
hlt
push
test
xchg
pop
loope
pusha
jb
sahf
fistp
add
or
pop
and
and
dec
mov
repnz
fnstcw
ins
xchg
sbb
(bad)
gs
pmaxub
xchg
pop
mov
push
jne
and
es
or
xlat
cmp
fs
out
daa
repz
scas
push
jb
pop
jle
ss
ins
xchg
stos
leave
push
dec
mov
cmps
retf
mov
xchg
xchg
mov
push
lock
(bad)
fdiv
imul
xchg
mov
loopne
fwait
xchg
xchg
mov
adc
mov
(bad)
int3
test
rcr
(bad)
mov
mov
mov
xchg
mov
and
dec
cmp
or
iret
and
out
pop
shr
aas
stos
cmp
push
rcl
stos
xchg
xchg
movs
mov
mov
push
push
xchg
mov
cmp
ret
pop
pop
retf
or
(bad)
mov
xchg
pop
fcmove
rcl
test
hlt
hlt
popa
add
sbb
sbb
sbb
loopne
sti
gs
inc
cmp
sub
inc
test
sub
fisttp
adc
rcl
or
or
leave
retf
fst
rol
fs
int
xor
jge
shl
or
call
aaa
push
in
adc
ins
xor
cdq
or
adc
test
(bad)
add
sbb
call
xor
fwait
cmp
jecxz
add
xor
es
dec
call
es
cmp
out
fimul
sub
enter
ds
mov
inc
inc
mov
mov
push
aas
xor
mov
mov
fwait
cs
mov
jg
or
push
cli
call
(bad)
popf
push
mov
stc
mul
pop
inc
cld
rol
mov
push
xor
ret
mov
add
jne
pusha
aaa
adc
fdivr
mov
sbb
add
add
in
inc
stos
or
lds
mov
pop
pop
jl
test
mov
jb
mov
mov
movs
sub
pop
cmp
push
sub
ja
popf
icebp
fisub
data16
cmp
adc
push
fwait
or
in
repz
lock
imul
idiv
ins
mov
fstp
push
cmp
iret
shl
nop
mov
and
pop
adc
sub
cmp
pop
fs
pop
dec
lods
(bad)
fsub
push
das
retf
mov
add
pop
add
les
(bad)
mov
mov
add
mov
inc
and
sar
jns
inc
pop
pop
repz
inc
cmps
stos
xchg
mov
aam
imul
in
xlat
push
(bad)
push
fwait
mov
shl
outs
pusha
xchg
pop
xchg
xor
js
mov
or
stos
adc
test
dec
rcl
mov
pop
cdq
jns
or
call
rol
xor
and
jge
mov
dec
dec
inc
mov
mov
mov
push
iret
les
retf
mov
in
test
mov
mov
in
repnz
shl
cld
(bad)
mov
jl
dec
or
cmp
xor
sub
push
ins
pop
je
shl
xor
mov
sti
mov
xchg
icebp
movs
or
dec
sub
outs
push
call
or
pop
inc
dec
ja
in
fsubr
mov
jno
cmp
mov
pop
xchg
xchg
in
jle
sbb
mov
xlat
fld
xor
jnp
xchg
mov
ins
xor
sbb
out
xchg
mov
cdq
pop
push
jbe
xor
and
mov
scas
mov
inc
clc
and
xlat
popf
ret
out
pushf
xor
jo
and
mov
ret
sub
fwait
das
test
std
mov
movs
mov
es
inc
out
push
sbb
test
das
cdq
mov
es
lahf
xor
sub
sbb
ficom
rcr
mov
pop
jp
fcomp
xor
hlt
lds
xchg
sbb
inc
or
add
xor
xchg
mov
push
xlat
dec
int3
(bad)
inc
leave
stos
es
stc
out
and
adc
in
sbb
jo
cmp
cwde
enter
xor
and
popa
adc
scas
xchg
adc
sbb
push
mov
loope
icebp
jecxz
mov
popf
aad
sub
call
loope
mov
cmps
jecxz
adc
and
inc
stos
mov
loopne
ss
fisttp
fidivr
js
and
loop
cmp
jl
add
pop
(bad)
mov
push
into
popa
xor
sub
ins
sub
nop
add
(bad)
sbb
ret
movs
cli
mov
mov
sub
loop
ins
adc
pop
retf
cmovno
mov
or
data16
mov
clc
inc
xlat
lds
or
mov
and
rol
fld
mov
and
add
cmps
aam
xchg
push
iret
leave
pop
pop
enter
push
or
dec
cmp
mov
mov
pusha
aas
hlt
stos
repz
aad
and
inc
in
call
mov
mov
inc
imul
js
leave
mov
int
fstp
or
and
aad
xor
cmp
out
jg
stc
out
jmp
sar
fdiv
or
repz
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
fsub
sbb
(bad)
call
jmp
into
shl
cmp
dec
repz
ja
add
and
imul
out
loope
(bad)
pop
xor
mov
mov
cmp
sbb
sub
dec
inc
les
xchg
fcomp
xchg
test
call
(bad)
xor
cmp
call
js
into
nop
sbb
mov
les
xchg
cmps
inc
jo
leave
outs
pop
fucomip
and
in
adc
call
jne
test
mov
jp
cli
out
sub
movs
imul
mov
pusha
pop
add
fld
lds
retf
test
or
xchg
fst
cli
clts
test
and
jp
mov
mov
xchg
inc
aas
push
push
jmp
test
shl
inc
fldcw
jne
cmps
jg
sbb
stos
data16
sbb
outs
fwait
dec
push
loop
test
ret
das
jl
push
xchg
aam
lea
loopne
sbb
lea
inc
mov
div
push
test
rol
scas
rcl
dec
sahf
(bad)
leave
xlat
mov
dec
pop
add
popf
push
scas
outs
lods
ds
test
push
cmc
arpl
push
xchg
or
inc
dec
inc
(bad)
rsqrtps
call
mov
mov
jb
mov
mov
pop
mov
loope
(bad)
sbb
mov
out
sbb
xchg
jle
sub
out
adc
pop
mov
ror
sbb
aam
jle
cmps
or
lahf
dec
add
sub
push
sti
mov
aas
and
cmps
js
dec
adc
(bad)
fadd
push
or
mov
gs
mov
std
das
jbe
cs
test
js
popa
fst
(bad)
popa
mov
loop
fwait
dec
or
in
aam
fsubr
(bad)
push
inc
lock
fisubr
dec
push
push
pop
pop
in
(bad)
retf
push
push
xchg
scas
push
and
cmp
xchg
add
inc
addr16
fld
dec
not
iret
or
cmp
add
pop
mov
popf
push
jecxz
fnsave
imul
or
push
jge
in
or
ret
es
mov
es
in
add
sub
jo
xor
jnp
lods
or
adc
dec
dec
jl
pushf
push
or
pushf
or
dec
shr
add
cmps
push
fimul
mov
inc
iret
xor
jne
into
and
jl
jmp
xchg
shl
lahf
pusha
cli
or
leave
fstp
mov
mov
fst
retf
pop
call
jbe
repnz
or
sub
rol
(bad)
cmc
sub
test
mov
pop
push
add
sbb
push
pusha
test
outs
loopne
aam
adc
fld
mov
mov
jmp
sub
mov
sub
arpl
xchg
cmp
bound
push
and
inc
(bad)
dec
xchg
push
icebp
in
cmp
aam
hlt
mov
rcr
clts
mov
or
repz
adc
int
push
cmp
mov
js
pop
out
les
mov
movs
mov
mov
(bad)
pop
or
ins
mov
pop
add
ret
jl
sbb
push
pop
xor
cmps
rcr
sbb
cmp
daa
jl
out
fdiv
int
pop
ja
mov
outs
jge
dec
cmps
call
imul
call
add
outs
pop
add
mov
pop
jmp
jle
cmps
mov
inc
push
jge
push
(bad)
ss
imul
pop
push
mov
cmps
stos
sahf
cmp
loopne
dec
mov
add
jmp
and
shl
(bad)
cmp
sbb
fisttp
out
or
iret
(bad)
mov
cs
and
pop
ins
sahf
sub
jl
es
imul
jp
jmp
test
cmps
xor
sub
bound
call
call
icebp
loop
and
lock
into
shl
out
lods
ret
and
in
cmp
(bad)
dec
pop
imul
repnz
push
neg
sbb
popf
frstor
scas
sbb
pop
lock
enter
fistp
das
(bad)
into
mov
push
lods
jmp
xchg
aam
sub
cmp
mov
fst
mov
stc
push
sub
mov
cmps
and
xor
movs
es
mov
xor
xor
dec
retf
or
cmp
(bad)
mov
cmp
cmps
daa
fnstcw
and
inc
jbe
je
sbb
cdq
in
rcl
pushf
sbb
outs
pop
xchg
imul
popf
sti
jge
jg
push
and
xchg
push
loop
outs
push
imul
out
xchg
dec
pshufw
dec
sub
xchg
sub
les
mov
scas
sub
cmp
jnp
adc
push
scas
mov
in
add
test
mov
dec
jle
rol
cmps
in
push
push
stos
cs
test
jg
push
or
add
push
jge
test
adc
loope
paddq
cmps
inc
xchg
mov
jp
ja
cmp
add
inc
jne
retf
jnp
fisttp
(bad)
adc
jne
(bad)
jbe
mov
jl
sbb
cmp
fcos
xor
repz
out
xchg
sbb
outs
test
jbe
mov
xchg
sub
clc
xor
jecxz
retf
inc
cwde
xor
(bad)
mov
fisub
xchg
mov
(bad)
(bad)
cdq
call
inc
add
mov
push
jo
adc
cs
jp
sub
(bad)
int
stos
in
imul
pop
call
inc
cmp
cdq
jbe
mov
aaa
popa
and
addr16
(bad)
sahf
mov
int
xlat
jl
(bad)
push
mov
aam
shl
xchg
retf
mov
xchg
mov
fbld
push
(bad)
fild
test
and
gs
jge
sub
stos
pop
test
imul
mov
push
xchg
les
mov
mov
or
sub
jmp
ja
outs
scas
jns
test
fisubr
jp
fwait
push
mov
or
adc
push
add
outs
ret
sbb
and
je
mov
std
jno
cmp
adc
ficom
mov
jno
out
xchg
icebp
push
sub
cmps
sub
repz
jle
dec
cmp
pop
dec
or
push
popf
jnp
mov
(bad)
mul
mov
sub
xor
adc
pop
cli
out
js
mov
rol
cmps
imul
repnz
test
outs
mov
es
mov
cmp
xchg
aaa
mov
test
push
jo
outs
in
jmp
inc
in
mov
dec
mov
enter
jno
jno
aad
pop
sahf
outs
pop
add
or
stos
into
rol
cld
sub
sub
mov
jmp
mov
loopne
push
hlt
test
lods
xchg
xor
test
bound
arpl
in
scas
fcomp
aam
mov
inc
dec
inc
inc
in
es
icebp
jb
mov
jp
mov
pop
xchg
mov
cmp
enter
adc
xor
ficom
std
jb
ret
stos
loope
popa
and
fs
xchg
mov
out
jecxz
cmp
cmp
and
je
sbb
je
add
outs
adc
mov
inc
push
dec
mov
jmp
jg
cli
or
dec
cmp
xchg
lahf
mov
jae
lods
shl
lods
add
nop
data16
retf
mov
jb
jmp
add
mov
aaa
sub
sar
xor
jo
mov
lds
loop
adc
add
mov
mov
inc
xchg
inc
sti
push
outs
pop
mov
push
test
or
(bad)
loop
getsec
mov
scas
inc
jl
and
and
es
iret
sbb
jmp
sahf
arpl
mov
pop
shl
pop
xor
loopne
xor
fs
stos
aaa
pop
dec
push
fldl2e
retf
rcl
xchg
adc
pop
(bad)
loop
out
dec
(bad)
idiv
test
repnz
out
cdq
jecxz
or
sti
data16
mul
neg
in
int3
arpl
movs
adc
mov
inc
sbb
dec
cmps
push
push
out
jmp
mov
dec
sahf
cmps
pusha
jbe
inc
retf
pop
call
sti
int
fisttp
xchg
push
in
out
ret
imul
add
clc
jmp
lods
sub
mov
call
fwait
or
ins
xor
sub
stc
pop
cmp
add
iret
test
dec
mov
cmp
dec
pushf
xor
out
fs
ja
call
test
pop
pop
(bad)
(bad)
or
or
icebp
in
sub
out
dec
and
xchg
inc
loop
sbb
dec
jbe
mov
gs
fimul
dec
mov
aam
imul
xchg
mov
push
enter
outs
mov
inc
lods
and
sbb
sbb
retf
sbb
mov
mov
fucom
(bad)
test
mov
int3
test
mov
inc
pop
mov
js
sbb
mov
inc
dec
and
mov
fisub
nop
cwde
leave
stc
dec
les
ja
xchg
dec
cmps
inc
mov
xchg
popa
sbb
sti
jb
sub
rcr
mov
mov
jne
jnp
je
dec
inc
cmp
cli
mov
xor
xor
nop
sub
in
repz
std
loop
mov
test
je
cmps
mov
add
inc
mov
and
es
dec
xor
popf
cli
cmp
jmp
inc
and
mov
or
inc
sub
jp
add
enter
in
es
cmc
or
das
scas
ins
repz
adc
daa
es
in
push
repz
sti
adc
test
xchg
cmp
jle
fsubp
aad
lods
jecxz
sbb
inc
cwde
cdq
outs
scas
mov
pop
push
xor
mov
mov
movs
sbb
call
sbb
test
push
gs
loope
xor
dec
cmps
mov
fdivr
cmp
cmp
push
repnz
jne
push
les
sbb
aad
pop
pop
pop
mov
jmp
retf
addr16
mov
fucomip
push
or
movs
mov
sar
das
push
xchg
outs
clc
xchg
add
shr
add
sar
fild
fidivr
(bad)
pop
arpl
xor
movs
dec
jmp
mov
dec
(bad)
mov
mov
push
shl
stos
(bad)
push
popf
icebp
out
push
shr
jecxz
gs
sbb
js
sub
cdq
stos
push
or
push
(bad)
sub
mov
inc
cmps
xor
enter
call
jg
sbb
sub
jb
adc
mov
dec
pop
sub
repnz
sub
popf
push
jmp
imul
mov
jge
imul
loopne
scas
fisttp
aaa
mov
fs
stc
jl
jp
jb
cmc
test
int
adc
mov
xor
call
iretw
mov
ret
es
or
dec
xchg
movs
sbb
addr16
push
add
rol
mov
repnz
cmps
push
out
sti
mov
adc
cmovle
jg
sbb
inc
pop
pop
ret
push
pop
cdq
cli
mov
ja
mov
xchg
pop
jmp
xchg
mov
mov
xchg
mov
mov
adc
mov
fst
jmp
and
in
dec
test
jecxz
jp
xor
out
jne
mov
add
jae
pop
lods
ror
pop
push
push
fwait
aad
mov
push
add
das
inc
jp
enter
sub
push
cmp
jae
pop
pop
mov
in
and
or
and
mov
ffreep
std
inc
retf
aam
dec
les
lods
inc
out
jp
inc
pop
inc
jmp
std
push
clc
push
sub
pop
cdq
sbb
mov
sahf
(bad)
pop
mov
scas
cld
sub
jle
int3
rol
push
jle
jmp
(bad)
(bad)
std
push
pop
in
xchg
aam
(bad)
cmp
inc
push
cmp
mov
cmp
push
stc
pop
xlat
pushf
inc
scas
xchg
imul
xchg
jge
scas
and
sub
and
pop
(bad)
icebp
in
ins
sti
push
push
retf
fwait
or
cmp
cmp
push
sub
stos
aas
into
daa
leave
add
enter
pop
and
jecxz
mov
xchg
(bad)
jle
mov
enter
xchg
push
sar
cmc
stc
in
fcmovnu
xchg
push
dec
popf
push
cs
and
cmp
and
sbb
mov
out
aaa
push
sub
movs
pop
es
xchg
(bad)
or
lock
or
adc
mov
gs
ss
cmps
jb
jmp
bound
sbb
outs
xchg
mov
leave
mov
mov
inc
add
sbb
ins
leave
cmp
xchg
adc
dec
jecxz
jecxz
sbb
in
retf
adc
pop
bswap
aam
cli
and
retf
push
retf
inc
test
fisttp
sub
(bad)
popa
pop
jmp
mov
sbb
add
push
cmp
lods
fidiv
ds
adc
sbb
and
and
dec
push
cli
sub
dec
xor
mov
aas
leave
addr16
mov
cs
jle
iret
pop
test
out
clc
jns
lods
push
pop
shl
fiadd
or
push
jnp
inc
imul
push
xchg
jae
out
lods
lods
daa
cmc
pop
std
mov
xor
mov
or
lods
cmp
cwde
sbb
jmp
shl
mov
rcr
lock
jmp
mov
fdivr
ss
adc
sub
retf
in
in
mov
stc
(bad)
call
ds
adc
jne
fdivrp
adc
aam
xchg
sub
mov
lods
hlt
imul
gs
ins
pop
jmp
cwde
hlt
mov
and
inc
stos
cmc
movs
add
in
mov
xlat
clc
scas
bound
mov
add
stos
jp
lods
test
cmp
lods
mov
xor
movs
xchg
(bad)
pop
sbb
cwde
pop
ds
push
sbb
mov
out
push
sti
pop
imul
in
lods
rol
mov
sbb
mov
inc
test
ss
jmp
iret
xor
imul
jecxz
push
stc
mov
hlt
xchg
jl
lahf
jmp
stos
in
xor
int3
pop
push
sahf
adc
out
cmp
push
push
cmc
sbb
pushf
std
inc
fisubr
jle
xchg
popf
pop
mov
cld
ds
retf
data16
shl
cmps
push
mov
cwde
shl
jecxz
ins
mov
lahf
push
cmpxchg
scas
mov
pusha
mov
(bad)
in
sbb
add
mov
jecxz
push
rcl
out
out
add
addr16
cli
cli
aaa
mov
sbb
cmps
jb
mov
lahf
pop
js
mov
enter
(bad)
sub
jmp
sbb
(bad)
inc
jb
out
data16
pop
mov
(bad)
ins
lods
mov
xchg
mov
clc
cmp
xchg
(bad)
aam
inc
mov
jmp
push
ins
adc
(bad)
pushf
mov
cmp
(bad)
push
imul
test
pushf
popa
adc
and
mov
adc
add
clc
mov
add
sub
(bad)
retf
scas
push
xor
fist
or
dec
push
repz
cmps
movzx
sbb
ins
jl
ja
xchg
adc
enter
cmc
mov
mov
loop
cwde
imul
cmc
repnz
(bad)
ss
les
movs
add
(bad)
sahf
jmp
and
add
lods
mov
jp
fdiv
lock
push
aam
sahf
xchg
out
cld
call
cmp
mov
fwait
bsr
add
call
cmp
and
dec
sbb
pop
xchg
or
mov
movs
xchg
mov
imul
mov
jne
out
sub
inc
retf
fidiv
dec
pop
push
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
stos
(bad)
adc
lods
pop
loope
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
pop
add
and
dec
adc
jmp
sub
outs
jmp
shl
dec
ja
adc
lahf
sti
cmp
jae
verr
dec
adc
add
bound
aad
jmp
xor
cli
dec
lods
div
inc
jo
jo
ret
iret
mov
ins
dec
scas
mov
fsub
pusha
adc
retf
cmc
movs
adc
icebp
push
inc
mov
std
mov
popf
repnz
into
out
push
mov
push
and
xchg
inc
add
(bad)
vcvtpd2ps
fisubr
in
jmp
gs
scas
ret
(bad)
sub
int
push
and
(bad)
mov
mov
and
por
jecxz
fidiv
je
sbb
inc
jl
rcr
push
mov
inc
cli
popa
sti
test
fcomp
aad
cli
push
sub
mov
inc
dec
xor
aaa
lahf
sbb
and
lahf
cmps
adc
mov
(bad)
test
xor
push
test
push
mov
mov
jbe
xchg
fwait
jl
push
mov
mov
aaa
std
loop
mov
rol
fnstenv
movs
iret
push
mov
and
xchg
sbb
inc
and
outs
or
scas
jmp
mov
ret
or
mov
push
jns
jb
(bad)
push
push
jbe
adc
das
cmp
arpl
push
imul
iret
push
hlt
add
daa
mov
mov
mov
xor
xlat
hlt
lods
mov
jmp
pop
test
jo
push
(bad)
fnstsw
and
mov
movs
inc
mov
movs
xchg
out
fadd
sbb
js
jmp
fstp
scas
fcomp
vaddss
stos
dec
xchg
call
sahf
ret
ja
daa
(bad)
div
(bad)
push
and
inc
and
cmc
inc
ror
or
mov
mov
daa
xchg
cmp
mov
adc
and
movs
cwde
push
cmp
into
leave
call
repz
test
jle
xor
or
repnz
out
jp
nop
daa
jns
loope
dec
sahf
lahf
outs
pop
xor
pop
fld
ret
scas
sbb
push
hlt
aas
add
int
ja
xchg
xchg
mov
das
jge
mov
pop
call
fcomp
dec
push
fs
arpl
and
cdq
cmc
xor
jnp
movs
stc
cwde
dec
ja
add
ss
push
push
dec
fwait
jge
stos
mov
lea
test
xor
xchg
in
pushf
sub
jl
frndint
(bad)
pushf
imul
inc
inc
retf
mov
and
sar
lock
imul
call
in
ja
push
test
jmp
add
ins
out
int3
sub
iret
stos
movs
loope
pusha
in
retf
ss
push
fidivr
jg
cmps
dec
pop
or
mov
out
xchg
(bad)
nop
outs
fwait
push
fisubr
lods
mov
hlt
sbb
ror
out
sub
push
lds
popa
jmp
dec
in
jns
ins
pop
sub
push
and
xchg
pop
addr16
mov
fnstsw
jbe
xlat
in
mov
dec
gs
in
add
not
pop
dec
sub
mov
sbb
push
rcl
retf
jae
and
or
adc
mov
adc
cmp
(bad)
or
outs
mov
inc
xchg
sub
stos
popa
push
popa
push
into
push
imul
jecxz
pop
popa
jnp
mov
jb
jge
mov
aam
inc
sbb
add
dec
inc
xchg
xlat
repz
push
mov
(bad)
daa
lds
sbb
ins
inc
aad
addr16
in
adc
ins
outs
xchg
dec
rcr
mov
push
inc
mov
and
into
xchg
stc
mov
repnz
sbb
pop
push
pushf
shl
addr16
xchg
xchg
jae
psubq
jbe
adc
ja
sub
mov
test
call
inc
ds
ins
pop
stos
int
xchg
fnstenv
mov
dec
xor
data16
mov
aam
je
imul
lods
or
add
inc
inc
shl
sub
and
lods
pop
and
add
ret
ss
je
js
push
pop
clc
fisub
pusha
jge
push
sub
rcl
cmps
xchg
sbb
aas
nop
sub
pop
mov
jno
das
jp
mov
inc
in
(bad)
movs
retf
xchg
inc
xor
or
cdq
pusha
fcomip
aad
xchg
pop
movs
jl
xchg
arpl
mov
aam
iret
jno
es
shl
aad
dec
ss
ds
jnp
gs
mov
sbb
inc
mov
jp
sbb
aaa
push
gs
jmp
out
nop
ja
lods
pop
pop
movs
xchg
cwde
mov
xlat
xchg
pop
pop
rcl
push
mov
(bad)
pushf
jmp
sbb
pusha
retf
call
cmps
mov
shl
rcl
mov
mov
aad
jae
lods
push
mov
xor
pop
aam
js
cmc
push
repnz
scas
sbb
jbe
jg
addr16
cmps
outs
aaa
icebp
mov
sbb
add
int3
scas
movs
cmp
or
xchg
xchg
mov
add
je
pop
and
sub
mov
cld
mov
clc
call
aas
mov
outs
adc
call
mov
sbb
jmp
stos
cmp
sbb
jg
ins
fwait
(bad)
or
mov
not
dec
sahf
cmps
and
bound
nop
xor
mov
das
sub
dec
leave
pop
in
cmp
dec
lods
fs
jg
push
stos
mov
hlt
ret
xchg
push
sub
cli
movs
out
in
mov
fisub
pushf
into
cs
jno
mov
cmp
icebp
loop
in
call
xchg
(bad)
retf
outs
int3
jecxz
push
lea
pop
adc
sahf
dec
sbb
adc
js
cs
mov
mov
adc
bound
jbe
jns
cmp
adc
pop
dec
cmp
mov
sbb
div
xor
jns
repnz
nop
xchg
mov
and
in
adc
or
xchg
pop
inc
push
lahf
data16
aad
pop
popf
sahf
imul
je
hlt
nop
mov
push
inc
sub
mov
in
jecxz
lea
adc
or
jp
fidivr
mov
jmp
cld
mov
jb
add
repnz
test
int3
daa
pop
push
or
sti
push
bound
and
jle
(bad)
fs
bound
and
icebp
ja
fisttp
xor
shr
cdq
inc
mov
mov
or
adc
movs
pop
sbb
dec
jp
(bad)
dec
mov
not
mov
popa
outs
popa
inc
sub
and
retf
sbb
ds
jne
xlat
inc
adc
mov
arpl
aam
fdivr
dec
call
(bad)
xor
adc
stos
inc
fild
jns
xor
xor
jl
cmps
sbb
out
sub
int3
sub
adc
sub
sbb
mov
push
sbb
in
sub
dec
push
sar
inc
daa
sub
inc
xchg
mov
mov
pop
test
mov
adc
sbb
movs
out
lock
inc
push
or
punpcklbw
and
xchg
retf
mov
lahf
outs
enter
jmp
dec
pop
movs
sbb
sbb
cli
xor
popf
xor
les
sahf
xchg
leave
mov
pop
enter
ret
cmp
into
mov
call
pop
pusha
or
test
and
xchg
sbb
push
ins
xor
loope
push
pop
fisubr
aam
daa
stos
push
fist
mov
lfs
popa
data16
add
cmp
mov
popf
sbb
cli
mov
inc
push
mov
mov
ror
loopne
movs
cmp
sub
mov
rcr
push
and
push
sub
lea
mov
jge
dec
test
mov
mov
bound
repz
mov
adc
push
sbb
shl
hlt
call
call
retf
outs
call
jnp
dec
push
popa
pop
not
gs
shr
dec
mov
sbb
adc
(bad)
fst
xchg
daa
aam
xchg
ficom
jns
icebp
test
clc
or
shl
inc
out
dec
jnp
cmp
mov
cld
std
inc
call
clc
cmp
sbb
lock
cmps
push
in
mov
loopne
imul
mov
repnz
xchg
cs
ret
imul
jns
jle
dec
imul
mov
inc
out
ss
dec
jae
shl
push
cmc
pop
ds
mov
stc
xchg
dec
dec
sbb
ins
aam
dec
pop
push
fst
push
mov
mul
pop
push
scas
test
sbb
enter
movs
dec
pop
mov
test
cs
and
push
shr
add
inc
xor
test
pop
push
mov
nop
pop
bound
jne
push
sbb
mov
ficomp
stc
sbb
leave
inc
add
and
jecxz
add
retf
aad
jno
ret
mov
repz
test
(bad)
movs
push
movs
sar
sub
(bad)
add
mov
dec
xor
not
call
outs
add
sar
js
cmp
lar
mov
and
cmps
js
cmp
jl
xchg
cmp
movs
jne
ss
dec
cmps
and
xchg
fcomp
mov
jmp
les
mov
in
lock
sub
jb
sbb
rcr
loope
scas
push
xor
jo
pushf
mov
ficom
cmp
out
loope
and
bound
in
(bad)
sub
sub
mov
(bad)
int
add
out
call
scas
bound
mov
fwait
je
in
out
adc
inc
push
pop
pop
out
inc
rcr
and
test
out
fisttp
xor
test
fcmovb
mov
xchg
(bad)
sar
jo
mov
or
and
or
sub
rcr
arpl
sbb
pop
sar
test
sbb
and
sub
mov
dec
fdivr
dec
xchg
loope
out
lds
nop
push
pop
mov
(bad)
rol
mov
test
div
stos
popf
xor
dec
jecxz
inc
inc
inc
pop
push
xlat
es
fs
test
pop
inc
sub
clc
or
mov
pop
out
(bad)
mov
enter
test
movs
ffreep
mov
dec
jmp
cmp
inc
push
cmp
mov
jbe
jnp
adc
cld
rcr
sbb
inc
xchg
in
push
push
int3
mov
jp
cmps
mov
scas
int
ret
adc
(bad)
imul
(bad)
push
mov
icebp
or
pop
into
jecxz
ror
stos
loopne
push
movs
cdq
arpl
jns
xchg
stos
call
pop
cmc
sub
mov
adc
jge
jge
daa
jb
or
pushf
pop
inc
cmp
or
ss
pop
cmps
movs
jge
mov
mov
leave
cmp
mov
ja
loopne
dec
jne
mov
mov
pop
fisubr
sbb
push
mov
pop
fwait
add
or
mov
pop
mov
clc
mov
je
repz
xchg
and
xor
enter
push
sbb
mov
fldcw
add
sub
mov
sub
mov
mul
leave
cmps
fcomp
pop
mov
fdiv
shl
aas
sysenter
mov
pop
fnstcw
aad
xchg
in
dec
pop
xor
ret
push
(bad)
cld
lds
dec
xor
(bad)
rcl
scas
les
lock
sti
and
jnp
pop
and
mov
xchg
cs
push
rcr
test
cli
cmps
mov
imul
or
out
(bad)
or
push
push
pop
cmps
sub
inc
daa
dec
xor
jmp
rcl
(bad)
out
mov
pop
lods
jb
or
xor
jnp
rcl
sahf
(bad)
(bad)
push
nop
stos
adc
cmp
pop
popf
sbb
push
mov
ins
dec
and
sar
sub
retf
cmp
sub
stos
pop
jecxz
lds
and
neg
out
mov
loope
sar
in
xlat
aaa
ss
xor
imul
pop
leave
mov
div
dec
xchg
scas
sbb
inc
jmp
lods
pusha
je
mov
mov
icebp
(bad)
sbb
and
clc
adc
sar
dec
mov
and
ins
pop
shl
in
int3
lods
push
std
or
mov
dec
xchg
jae
test
jae
ja
push
repnz
pop
into
iret
mov
xor
ret
push
mov
mov
pop
scas
mov
ins
xchg
test
hlt
in
std
pop
sbb
jmp
ja
fwait
jo
push
xchg
int
adc
push
jecxz
mov
and
jecxz
add
cmps
in
shr
xchg
in
mov
pusha
push
mov
clc
xchg
pop
adc
jae
and
lock
js
mov
xor
call
cmp
fadd
fimul
out
scas
ins
sbb
shl
rcr
(bad)
dec
fldcw
sar
int3
or
outs
in
neg
ror
test
clc
outs
dec
dec
cli
jbe
adc
xchg
lahf
pop
(bad)
sub
cld
jl
sahf
ret
dec
pushf
aam
call
xchg
je
jmp
pop
test
mov
xchg
xchg
hlt
gs
adc
cdq
iret
imul
push
xor
pushw
in
cs
mov
fist
pop
out
pop
mov
mov
jle
ss
mov
fisub
mov
icebp
push
jecxz
jp
add
es
pop
cmp
pop
sahf
sbb
lods
jbe
loope
call
jne
inc
sub
pushf
mov
fisttp
and
inc
xor
mov
shr
stos
inc
inc
and
sub
jl
pop
test
pushf
jns
pop
or
add
jmp
dec
and
loopne
call
daa
mov
test
into
inc
dec
fs
outs
lahf
call
or
cmps
std
sub
pop
cmps
mov
push
mov
je
lds
sbb
fld
push
and
dec
push
mov
stc
out
aas
push
call
mov
jbe
ds
xchg
mov
aas
idiv
and
je
jle
repz
mov
mov
je
loope
and
loope
aam
cmc
push
jo
sbb
jmp
dec
push
cld
out
xor
ss
sbb
push
rol
fld
inc
cwde
and
dec
mov
mov
mov
jo
in
dec
mov
(bad)
fimul
pop
and
test
mov
ds
add
xor
aaa
loop
sub
repz
in
(bad)
xlat
sub
ret
icebp
clc
std
in
push
stc
mov
hlt
es
leave
loopne
inc
fwait
sbb
fnstsw
lock
test
into
enter
enter
cmp
xor
sub
out
js
(bad)
mov
xor
ret
pop
sub
add
jg
mov
jne
mov
adc
mov
xchg
pop
fiadd
iret
adc
cs
hlt
add
les
iret
outs
sbb
jns
jmp
pop
inc
push
adc
xor
mov
clc
fild
mov
push
add
out
(bad)
stc
iret
jg
repz
call
add
jg
dec
adc
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
(bad)
pop
and
pop
add
scas
dec
inc
neg
mov
xchg
or
gs
mov
sbb
and
ins
popf
xchg
nop
dec
mov
neg
(bad)
(bad)
repz
(bad)
shl
push
jl
sub
or
daa
pusha
lods
jge
clc
mov
jmp
(bad)
mov
jle
inc
repnz
or
xor
push
push
adc
pop
int
inc
inc
pop
ins
xlat
cmp
rol
fwait
aam
sahf
out
dec
sbb
cdq
mov
loop
pop
pop
inc
test
(bad)
sbb
in
pop
test
pusha
mov
stos
inc
into
xchg
inc
repnz
mov
jo
int3
mov
mov
retf
ret
push
and
in
mov
inc
mov
pop
cmp
jae
je
sbb
call
mov
aas
das
cmp
add
inc
xchg
pop
aas
clc
jb
sbb
xchg
scas
aaa
(bad)
sub
hlt
gs
out
fldcw
hlt
fistp
imul
imul
inc
movs
xor
xor
stos
icebp
xor
out
sub
movs
jmp
jae
cmp
addr16
or
sub
movs
pusha
push
int3
dec
hlt
push
mov
jmp
das
call
xchg
popf
sub
sub
xlat
push
sar
inc
(bad)
pop
and
cmc
test
sbb
test
mov
mov
aas
jne
mov
xchg
cmps
retf
mov
xor
mov
test
push
adc
push
xor
mov
iret
inc
fxtract
shl
mov
loop
ficom
add
lods
mov
sar
mov
cmp
les
enter
call
dec
sbb
in
add
inc
in
test
aas
outs
mov
xchg
push
mov
mov
push
popa
and
(bad)
pop
adc
call
aam
retf
mov
pop
(bad)
hlt
push
mov
div
sbb
xchg
sub
xchg
mov
jl
test
dec
lock
leave
mov
and
out
lods
mov
mov
xchg
xchg
mov
(bad)
or
inc
xchg
popa
nop
in
xchg
in
xchg
ret
jp
daa
add
(bad)
adc
adc
mov
pop
xlat
ds
loopne
mov
mov
cdq
(bad)
iret
inc
icebp
loopne
out
shl
add
push
sub
xchg
repnz
push
mov
int3
movs
mov
inc
sbb
pop
cmp
mov
leave
outs
pop
clc
pop
inc
jmp
hlt
sub
or
out
cmp
cwde
mov
xlat
daa
out
jmp
aam
xor
xlat
jge
lea
in
out
cwde
or
mov
sahf
data16
test
jge
sbb
sti
mov
dec
push
and
mov
or
ret
inc
xor
mov
pop
xor
pushf
retf
jg
add
and
out
jg
jne
in
into
retf
adc
inc
or
int3
pop
inc
push
inc
mov
mov
outs
mov
xchg
inc
fnstenv
ss
(bad)
pop
mov
push
les
push
fild
pop
inc
sub
pop
mov
test
dec
xor
test
xlat
call
(bad)
aam
jl
jmp
xchg
mov
push
cmp
shl
test
mov
aam
iret
(bad)
aam
aas
adc
fxch
cmp
cmp
jno
gs
jno
(bad)
test
mov
aad
int
movs
and
jmp
pop
into
push
icebp
loope
ret
idiv
iret
jne
aaa
jae
push
dec
dec
xchg
push
mov
(bad)
(bad)
stos
push
push
jnp
cwde
or
icebp
push
loopne
fmul
call
and
(bad)
xlat
movs
jb
add
shl
mov
clc
xlat
mov
push
(bad)
adc
jmp
sub
push
xchg
(bad)
pusha
mov
mov
mov
lds
cmp
xor
fs
in
lods
mov
outs
sub
cwde
(bad)
rol
mov
xchg
xor
test
test
cmps
test
movq
mov
sahf
clc
fwait
imul
or
xchg
mov
cmp
push
int3
mov
mov
das
popa
push
push
cmps
fs
sbb
and
mov
adc
xor
in
push
data16
mov
jno
stos
jp
gs
sar
arpl
cmp
ret
icebp
xor
fldenv
(bad)
sub
or
mov
mov
mov
mov
mov
dec
mov
(bad)
mov
sbb
aam
push
jle
cli
push
dec
xor
addr16
sub
sbb
or
popa
jae
pop
inc
js
clc
test
repz
mov
ja
sbb
mov
add
ret
or
pop
dec
pop
push
xor
jle
xchg
cwde
push
test
mov
out
push
or
test
cmps
pop
mov
cmps
outs
mov
inc
out
fnstsw
not
dec
cli
pop
cmp
stos
cmps
int
pop
mov
rol
push
mov
push
mov
int
mov
xor
cmp
and
rcr
hlt
mov
cmp
add
xchg
inc
pushf
mov
add
mov
aaa
dec
test
enter
fscale
pushf
sub
sbb
aad
int
mov
jbe
and
js
xor
(bad)
fmul
clc
rol
in
and
out
jp
push
ss
pusha
das
pop
pop
push
xchg
aad
mov
jecxz
fisub
stos
xor
outs
lock
enter
dec
mov
(bad)
daa
cmc
sbb
push
in
popf
aam
add
jge
sub
and
mov
test
xchg
cmp
sbb
lock
mov
mov
inc
bound
movs
daa
inc
push
xor
int
mov
loopne
je
mov
retf
mov
and
mov
mov
mov
rcl
das
retf
shl
outs
test
adc
adc
pop
mov
mov
jno
push
cmp
lds
dec
mov
dec
lock
push
mov
push
jo
movs
es
cld
dec
adc
mov
jbe
xchg
jns
cld
ins
retf
test
and
dec
add
ret
lea
xchg
mov
add
xor
imul
mov
push
lahf
pop
sub
xchg
xor
pop
out
xor
push
mov
push
js
iret
dec
rcr
cmp
repz
in
mov
mov
imul
or
xchg
pop
mov
test
add
mov
fcmovnbe
(bad)
jecxz
adc
mov
dec
les
fwait
repz
mov
sub
cli
test
movs
test
test
xchg
shr
in
cmp
jno
jne
dec
pop
cmp
into
jle
in
icebp
nop
outs
call
popa
pushf
jg
sub
and
(bad)
into
and
xor
ja
xchg
pushf
bound
cmp
outs
jecxz
mov
in
and
pop
mov
jl
in
pop
movs
jbe
push
sbb
adc
xor
(bad)
mov
mov
cld
out
xor
enter
mov
mov
lea
jns
mov
fwait
nop
inc
adc
cmp
cwde
and
lock
(bad)
mov
push
pop
int
and
pop
repz
dec
and
in
loop
mov
pop
inc
gs
dec
in
add
inc
hlt
pop
syscall
setb
outs
ins
test
push
push
adc
xchg
xor
int
adc
icebp
into
push
cmp
mov
ja
jg
jns
enter
sub
ret
or
call
and
dec
and
int
jge
jp
in
je
add
jbe
adc
adc
(bad)
sbb
or
es
(bad)
retf
add
ds
push
movs
rol
sub
jae
shl
jmp
sbb
cs
aaa
das
jo
mov
sub
ret
cmp
mov
add
out
dec
and
jge
ret
sbb
clc
jmp
push
mov
jb
dec
test
ret
fs
lock
pop
pop
mov
stos
jo
sub
mov
mov
(bad)
or
push
jmp
and
adc
inc
subps
add
aaa
sub
fmul
jmp
sahf
push
inc
(bad)
iret
lock
push
shl
das
and
dec
xlat
lods
fwait
popf
mov
scas
inc
mov
dec
mov
adc
ins
(bad)
pop
dec
adc
mov
mov
pop
jp
xchg
shl
mov
push
ret
jne
retf
js
and
push
mov
jb
mov
arpl
sub
imul
lea
sub
std
xchg
iret
jno
rcl
sti
in
add
movs
cs
pop
jmp
loope
in
jl
push
add
pop
push
mov
sbb
loopne
imul
mov
out
cmp
popf
xchg
adc
push
sub
pop
and
mov
push
ret
ror
int
add
jno
mov
and
xlat
push
mov
icebp
mov
out
jb
xchg
scas
pop
(bad)
into
mov
xchg
sbb
icebp
cmps
dec
xor
jae
inc
ret
mov
shl
les
pop
xor
(bad)
inc
into
pop
and
mov
add
scas
adc
push
ss
stos
repnz
mov
xchg
cwde
mov
ins
retf
ror
cli
pop
adc
xor
test
jp
mov
pop
movs
push
gs
or
cvttps2pi
(bad)
mov
dec
pop
imul
push
pop
mov
aam
lahf
imul
mov
mov
inc
aad
or
adc
lods
jae
test
stos
lds
rcl
pop
mov
add
jle
or
fcomp
pop
xchg
push
sub
hlt
dec
xor
mov
mov
jne
pop
dec
push
and
cmps
mov
push
mov
push
push
ficom
jns
test
or
mov
and
xchg
cmc
adc
xchg
inc
push
aas
cmp
pushf
push
ret
pop
lahf
xchg
sbb
push
xchg
cwde
arpl
jmp
mov
stos
pop
xchg
in
or
push
jb
mov
dec
mul
push
dec
pop
xor
rol
mov
rcr
(bad)
lods
xor
leave
xor
mov
stos
lea
cmp
pusha
dec
(bad)
popa
enter
sbb
cli
std
push
or
in
dec
add
lea
pusha
pusha
xchg
ret
push
mov
xchg
xchg
add
push
or
jns
adc
ficomp
dec
(bad)
in
xchg
mov
call
int3
adc
je
and
pop
cmps
aas
adc
aam
push
stos
or
jne
div
push
out
jp
test
xor
mov
outs
push
xchg
cmps
mov
test
lahf
push
sbb
retf
fistp
pop
test
mov
lahf
pop
daa
inc
shr
mov
ss
dec
mov
pusha
cmp
add
(bad)
jecxz
dec
xor
push
les
inc
pop
dec
sub
cmp
int3
mov
xchg
xchg
mov
loop
nop
xor
inc
nop
in
pop
int3
fwait
or
fadd
mov
sar
push
data16
mov
daa
mov
test
push
xor
cmps
mov
lahf
sbb
cdq
cmp
test
or
fnstenv
imul
test
pop
jg
test
fistp
push
clts
or
std
sbb
adc
push
push
ja
or
loope
adc
xchg
jo
stos
dec
pop
(bad)
mov
loop
adc
pop
or
test
rol
stos
fcom
and
aaa
add
xchg
inc
das
push
(bad)
sbb
adc
xchg
jo
mov
xchg
dec
scas
jge
jb
cwde
enter
cwde
mov
pop
inc
push
hlt
aaa
cmc
mov
and
pusha
xchg
push
xchg
jl
movs
push
les
jb
push
test
lahf
fs
test
int
adc
popa
mov
pop
sbb
cmc
push
xchg
rol
ja
adc
aad
sub
icebp
mov
adc
mov
cmps
in
dec
out
push
cmp
inc
mov
(bad)
(bad)
scas
jmp
inc
(bad)
ins
push
imul
cli
inc
mov
push
(bad)
pop
cli
mov
mov
cmps
scas
daa
mov
sub
aad
cs
jns
ds
cmp
ret
imul
push
fwait
push
sub
popa
mov
or
xchg
pushf
sub
cmp
inc
mov
in
mov
out
vmptrld
arpl
repz
xchg
jae
sub
shl
aas
mov
(bad)
jmp
stos
pop
daa
push
(bad)
pop
jmp
pop
data16
int
fimul
jge
mov
mov
lods
popf
sahf
hlt
cmps
push
fwait
xchg
sub
xchg
div
imul
inc
lea
pop
xor
dec
push
outs
cmps
pop
mov
inc
push
icebp
cmp
xor
dec
int3
cmp
mov
mov
loop
adc
ins
imul
sbb
imul
nop
mov
adc
sub
neg
fidiv
dec
movs
daa
push
mov
cvtdq2ps
cdq
push
mov
mov
lods
dec
hlt
mov
mov
sub
addr16
push
xchg
cdq
(bad)
into
cmp
jnp
je
cli
xchg
cmp
(bad)
stc
jae
xor
ret
rcl
mov
ffree
push
xor
xor
enter
out
enter
(bad)
sti
mov
jge
(bad)
repz
pushf
and
ret
cmps
xlat
ror
out
adc
mov
sub
fcomip
pop
stos
in
movs
jecxz
pmulhuw
rcl
fiadd
retf
inc
out
imul
aas
jnp
pop
in
cmp
jo
adc
dec
dec
or
jge
fwait
nop
and
mov
rol
mov
jbe
push
frstor
mov
scas
xlat
daa
mov
sub
dec
cli
add
inc
dec
iret
stos
jg
or
es
or
push
clc
mov
out
jl
test
popa
sbb
lods
int3
inc
jecxz
add
pop
call
add
call
push
iret
enter
pop
jne
icebp
into
cmp
sbb
fdivr
xchg
inc
iret
xchg
dec
stc
pop
pushf
or
out
mov
sbb
test
call
pop
(bad)
mov
test
and
jb
xor
jmp
ds
cmovb
dec
fdiv
icebp
inc
mov
mov
shl
inc
ja
lds
add
push
push
or
(bad)
enter
dec
popf
aaa
mov
xor
xor
rcl
jge
jecxz
das
add
pop
fimul
jbe
ds
out
pop
enter
leave
(bad)
ds
loope
ja
push
dec
(bad)
arpl
sbb
mov
imul
scas
jl
jmp
inc
xchg
adc
ins
out
retf
outs
and
xor
fst
fmulp
sub
jecxz
mov
(bad)
loop
fsubr
je
movs
jle
fdiv
xchg
ficomp
sub
dec
inc
mov
sub
fld
inc
add
add
icebp
mov
mov
je
or
ins
and
popa
xor
pop
leave
cmc
movs
cli
test
dec
mov
pop
enter
std
enter
pop
ins
and
retf
ss
aam
mov
push
addr16
ficom
sbb
sub
call
inc
or
add
pop
inc
in
cli
push
stos
fwait
dec
ins
push
xchg
popf
popf
adc
cmp
sub
dec
xchg
out
fnstcw
adc
push
pushf
das
(bad)
mov
pop
int3
cdq
test
xor
aaa
xchg
or
pop
mov
int
pop
xchg
(bad)
imul
sub
addr16
inc
js
nop
cmp
loopne
lock
dec
stc
xor
into
xlat
in
xor
mov
jp
sub
jmp
pop
mov
mov
jmp
cmp
movs
data16
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
dec
hlt
hlt
neg
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
scas
xchg
adc
ret
pop
gs
neg
jecxz
inc
mov
ins
xor
and
retf
out
dec
idiv
xchg
xchg
cmp
into
dec
cld
lahf
div
hlt
jns
pop
add
cmp
mov
adc
pop
pop
inc
xor
cmp
cmp
adc
loop
pop
cmps
inc
test
inc
lods
dec
mov
jae
jg
cli
clc
imul
xchg
ss
fstp
lds
cwde
xor
sub
test
mov
shl
sbb
adc
dec
outs
sbb
inc
daa
xchg
ror
int3
popf
jge
sub
xlat
mov
popa
fxch
int
arpl
mov
(bad)
es
inc
and
leave
imul
jg
test
loop
jl
sub
dec
leave
(bad)
cmp
test
lock
jne
imul
mov
adc
hlt
repnz
mov
xchg
mov
and
and
je
enter
inc
jae
or
lods
xor
cmps
das
pop
int
xor
repnz
dec
repz
pop
pop
mov
inc
test
adc
shl
xchg
or
jp
mov
rcl
or
jae
rcl
(bad)
xor
cmp
cs
enter
arpl
test
cmc
es
mov
and
popa
bound
push
jns
cmp
and
lods
adc
(bad)
rcl
sub
lds
test
repz
out
add
dec
(bad)
mov
jb
mov
fimul
pop
pop
and
fstp
push
fnstenv
(bad)
mov
dec
outs
pop
mov
add
lahf
sbb
jp
add
shl
ja
aam
sti
push
shl
pop
(bad)
push
scas
add
cmps
jp
xchg
mov
and
cmp
sub
das
nop
mov
mov
loope
ret
and
leave
out
push
and
cmps
xor
aaa
ror
sbb
sub
or
and
ins
cs
dec
aas
fs
enter
(bad)
aam
adc
imul
add
icebp
ret
clc
push
sbb
int
fbld
lods
cwde
dec
stos
pop
sbb
cmps
dec
mov
fld
sbb
scas
pop
dec
or
xchg
xor
jns
jae
(bad)
in
lea
loop
test
pushf
adc
test
sbb
ins
jmp
mov
mov
dec
mov
mov
sub
(bad)
mov
ja
lock
mov
dec
ins
lds
or
(bad)
pusha
repz
fs
mov
cdq
jae
leave
mov
jno
jmp
mov
popa
in
dec
push
popa
mov
jl
out
bound
pusha
adc
js
cmp
cmp
dec
mov
les
mov
add
sub
lods
xchg
cmps
(bad)
or
dec
cmp
push
inc
jle
loope
and
dec
std
xchg
stos
jb
cmp
bound
jbe
imul
loope
or
and
lods
cmp
cmp
pop
cld
and
clc
icebp
lods
mov
jns
add
retf
stos
dec
xchg
add
xchg
sub
mov
jns
push
cdq
nop
aad
sub
push
or
xchg
pop
pop
retf
xchg
xchg
pop
pop
inc
dec
ret
pop
test
pop
jge
jns
test
fldenv
fucompp
sbb
cmp
std
add
mov
scas
xchg
cmc
cmp
fsubr
jb
stos
xor
push
shl
mov
add
leave
out
adc
inc
popa
fiadd
xchg
cmps
pop
repnz
ja
xor
sbb
mov
cs
adc
mov
inc
aas
mov
fcmovnbe
sahf
sahf
push
into
xchg
pop
sub
sub
ins
push
retf
push
cmp
call
movs
mov
rcl
jge
out
out
inc
out
xor
imul
push
sbb
add
pop
shl
jne
pop
mov
mov
loope
retf
xor
push
stc
xor
scas
cmc
and
cmp
scas
sub
into
mov
shr
xchg
into
mov
dec
mov
lea
(bad)
pop
hlt
aaa
sbb
je
movs
std
jg
sub
sbb
loope
dec
shr
xchg
sbb
push
fstp
xor
outs
in
adc
in
rcr
add
cmc
(bad)
sti
in
dec
jno
or
mov
call
ror
inc
pop
and
pop
lods
(bad)
sub
push
jno
mov
aad
fdivp
mov
fstp
xchg
jmp
fucomp
outs
mov
jae
push
dec
add
dec
jmp
mov
(bad)
sbb
mov
mov
cs
inc
or
add
inc
and
inc
mov
popf
xchg
jmp
cwde
sbb
scas
clc
fidiv
imul
pop
dec
in
jmp
and
push
pop
xchg
pop
test
mov
jmp
dec
shl
push
test
dec
cmps
(bad)
xchg
scas
jae
popa
sub
adc
xchg
cmc
cs
je
or
in
repnz
gs
pop
nop
sbb
out
dec
in
pop
mov
test
sbb
mov
(bad)
(bad)
aam
out
stos
and
ja
inc
fadd
into
xor
sbb
sub
aas
pop
adc
fcomip
cmc
sbb
in
aad
jno
inc
push
mov
fisttp
dec
or
sbb
jmp
push
sbb
mul
mov
sub
inc
mov
adc
mov
or
or
jmp
inc
iret
cmp
jg
push
call
les
ss
cs
jo
mov
jmp
pop
cdq
adc
sub
and
xor
mov
mov
adc
jne
dec
cdq
hlt
aas
sbb
inc
adc
cmp
mov
mov
in
push
sahf
sub
add
pop
xchg
imul
ret
lds
add
cli
cmp
xor
mov
and
and
shl
mov
imul
retf
mov
xchg
icebp
int
pop
iret
idiv
push
adc
jecxz
xchg
nop
and
pop
lahf
xor
adc
dec
outs
xchg
fdiv
(bad)
push
sub
jg
les
xlat
mov
cmp
imul
xchg
jmp
dec
xchg
test
dec
je
mov
xor
push
test
aad
mov
mov
mov
cld
xchg
or
in
je
and
mov
xor
ret
xchg
push
rcl
aad
ds
sub
fld
ret
or
mov
adc
scas
add
adc
mov
retf
adc
loop
sbb
inc
xor
mov
fcmovne
aas
cmc
push
loope
push
push
nop
add
(bad)
daa
(bad)
scas
into
cdq
in
dec
shr
inc
inc
jmp
ss
mov
outs
add
ins
cmps
pop
push
adc
sbb
inc
test
add
cmp
jns
and
cmp
mov
xchg
daa
xchg
mov
sub
sbb
mov
(bad)
jl
fisttp
ins
ret
xor
(bad)
(bad)
stos
pop
ret
dec
fld
dec
lods
jge
aad
sbb
scas
jl
clc
mov
push
shl
add
repz
mov
xchg
int
inc
(bad)
jp
scas
xchg
dec
push
xchg
fisubr
int
adc
retf
rcr
mov
adc
xchg
ja
js
jmp
mov
out
xchg
popa
ret
cmp
xchg
test
fimul
test
outs
xor
mov
push
addr16
cmp
jbe
mov
sub
push
mov
std
mov
dec
popa
xlat
bnd
mov
aam
hlt
push
clc
shr
sbb
and
add
shl
out
cmp
dec
mov
mov
(bad)
and
aam
out
or
add
sar
les
aas
pop
jns
popa
aad
mov
mov
(bad)
cmp
ds
test
fdivr
sbb
and
jb
loop
bound
sti
dec
xor
adc
fidivr
mov
mov
xor
and
xor
in
and
sub
inc
test
dec
in
movs
out
cmps
fcomp
inc
shl
aas
mov
(bad)
fwait
(bad)
call
push
daa
and
xchg
idiv
jns
cmc
popa
jbe
jae
and
arpl
cmp
mov
cld
xchg
xor
inc
push
sub
jb
lock
add
mov
xor
mov
sub
out
aaa
fistp
pop
std
clc
std
into
mov
mov
(bad)
xlat
int
cmp
pusha
lea
jge
or
(bad)
push
retf
inc
xlat
imul
sub
call
jbe
cmps
icebp
xlat
aaa
(bad)
xchg
inc
cmp
test
es
ins
aam
adc
mov
fldcw
cwde
sub
ss
pop
add
jmp
jno
cmp
lods
push
outs
movs
(bad)
and
leave
dec
mov
mov
and
xor
and
xchg
mov
mov
loopne
loop
jae
mov
xchg
das
mov
xchg
pop
jle
jp
jbe
std
sbb
cmp
sub
imul
call
(bad)
ds
push
addr16
push
loop
lods
rcr
nop
fisub
pop
daa
loopne
and
aaa
or
jp
data16
in
pusha
sub
mov
jb
dec
(bad)
test
or
adc
adc
cmp
xor
seto
mov
dec
sub
loopne
fidiv
call
stc
out
test
leave
clc
cmc
sbb
cmp
ins
stos
mov
push
out
cmova
leave
sbb
jle
dec
cmp
les
call
pop
in
sub
stc
push
push
jae
jb
mov
cmp
cmp
jl
xor
les
xchg
pop
cmp
jmp
repnz
pop
sbb
cmps
rcl
in
xchg
mov
xchg
nop
(bad)
bound
jmp
cmp
fidivr
xor
(bad)
scas
mov
jbe
pushf
inc
cmps
sbb
adc
cld
and
retf
xchg
call
mov
push
int3
sbb
leave
add
add
repz
fnstenv
add
mov
add
add
loopne
sub
pusha
adc
xchg
jae
add
stos
adc
outs
lds
sub
add
mov
push
mov
pop
hlt
sub
pop
shr
mov
inc
jbe
add
mov
fist
arpl
push
outs
out
gs
mov
push
leave
mov
test
hlt
enter
jge
jecxz
or
mov
push
xor
pop
int
cld
sbb
int3
mov
push
mov
aaa
sti
ds
mov
sub
popf
adc
xchg
cwde
push
int
les
mov
into
cmc
daa
(bad)
cmps
jns
je
jecxz
xchg
inc
out
mov
push
cmc
cmp
rol
dec
push
xchg
adc
jb
fs
jmp
xor
pop
dec
and
mov
out
iret
int3
mov
mov
cmps
and
and
mov
add
or
xor
out
xor
fs
in
sti
ins
clc
ret
aas
mov
ffree
xchg
pop
jle
lods
xchg
push
dec
test
and
pop
hlt
iret
fisub
aaa
loopne
pop
jns
jecxz
mov
sbb
cmps
jle
or
cdq
sbb
jbe
adc
outs
(bad)
in
push
or
xor
inc
and
xchg
inc
sbb
cmp
movs
loop
sub
popa
mov
inc
mov
mov
jl
in
out
sbb
rcl
(bad)
(bad)
in
xchg
inc
mov
retf
popf
sub
mov
js
push
jbe
or
and
sub
jns
clc
addr16
(bad)
xchg
adc
xchg
and
dec
in
aad
rcl
push
add
stos
int
push
pop
cmp
mov
out
fucompp
arpl
inc
call
repnz
out
push
leave
pop
sbb
enter
xchg
inc
adc
sahf
fwait
sar
leave
xchg
mov
mov
inc
repz
pushf
jp
push
gs
sub
xor
shl
(bad)
stos
repz
pushf
bound
or
cmp
jno
sahf
dec
add
movs
sbb
sub
jo
mov
loop
inc
mov
in
(bad)
pop
xlat
cmp
pushf
adc
ficom
adc
ja
loopne
inc
pusha
jmp
inc
pop
push
sahf
mov
mov
jns
mov
push
dec
(bad)
and
xchg
pop
enter
outs
cmc
xchg
sbb
xor
cmp
add
xor
imul
es
mov
cmp
int
or
hlt
inc
imul
outs
lods
shl
add
fld
bound
adc
clc
xchg
and
inc
(bad)
mov
pop
sub
cmp
aaa
call
test
out
rcr
pop
leave
jno
sbb
aaa
xchg
add
call
adc
movs
push
mov
xchg
and
ds
mov
lods
sahf
mov
pop
dec
jl
out
(bad)
cs
stos
popa
cmp
mov
sar
sbb
mov
repnz
push
jge
aaa
mov
jl
jmp
in
mov
and
movs
iret
rcr
mov
or
lahf
fisub
add
xchg
fmul
out
fdivr
and
out
or
into
shr
aas
jbe
mov
and
in
pop
cmp
jo
je
mov
mov
mov
inc
mov
mov
push
pop
rcl
nop
movs
lea
mov
add
mov
(bad)
cli
mov
imul
cmp
in
shl
cmp
push
data16
jns
mov
and
not
mov
data16
adc
sbb
movs
mov
cmc
xchg
call
daa
mov
jp
inc
push
sar
shl
std
retf
stos
lahf
or
cli
xchg
or
mov
retf
and
mov
cmps
clc
popa
lods
daa
popf
lahf
enter
jbe
retf
out
jne
dec
sbb
xlat
lock
jp
sbb
repnz
xchg
jbe
push
cli
(bad)
aas
push
(bad)
sub
adc
push
dec
add
push
inc
out
add
adc
imul
push
cmp
dec
or
out
iret
push
fwait
jmp
je
xor
jmp
clc
mov
sub
xor
enter
adc
jl
js
sahf
lods
jno
jbe
ins
adc
mov
out
mov
push
add
jb
mov
pop
xchg
xlat
fnstcw
jecxz
ds
adc
pop
and
mov
push
mov
aad
mov
mov
clc
sub
add
imul
and
cmp
dec
sahf
inc
or
hlt
mov
data16
add
jne
pop
in
(bad)
cli
jbe
jbe
push
mov
jecxz
inc
popa
out
dec
mov
mov
xor
stos
dec
xchg
ss
(bad)
in
stc
xchg
mov
sub
enter
push
fnstsw
popa
xor
jmp
mov
inc
retf
pop
sub
js
cmps
cmp
test
pop
mov
add
cwde
nop
mov
and
and
test
inc
inc
cmp
not
(bad)
or
add
cld
sbb
sahf
push
jp
and
lods
xchg
(bad)
xchg
add
iret
push
test
dec
lods
in
shl
inc
dec
imul
stos
mov
lds
pop
(bad)
mov
cdq
(bad)
sbb
mov
popa
jb
push
push
ja
out
jne
ror
dec
adc
fistp
out
sbb
(bad)
cmc
cmps
stc
cmp
daa
repz
(bad)
sahf
xchg
xor
or
or
lock
sbb
shl
or
add
sub
xchg
pop
arpl
aas
(bad)
cld
repz
aas
(bad)
cld
repz
jmp
lock
cli
pop
adc
cmp
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmp
cmps
addr16
xor
dec
out
mov
call
cmp
fnsave
iret
hlt
xor
int
ror
daa
(bad)
dec
into
sti
inc
fidivr
sti
fild
mov
es
or
fcom
add
aam
clc
jmp
(bad)
mov
mov
sub
pop
mov
addr16
ins
(bad)
mov
add
shl
mov
cmps
sbb
inc
iret
jle
repnz
sub
push
cwde
xor
pop
sbb
addr16
ja
fmul
out
popf
adc
paddusw
sub
add
inc
je
jne
xchg
jns
stos
in
mov
addr16
mov
mov
sbb
add
push
call
outs
cmp
lahf
mov
rcl
mov
cmp
sbb
fmul
loope
xlat
mov
mov
stos
mov
ja
and
repnz
mov
push
or
pop
out
mov
pop
dec
jns
add
dec
iret
mov
fdivr
ror
nop
mov
mov
mov
mul
push
arpl
mov
or
mov
js
add
push
es
xchg
mov
push
cli
fdivr
(bad)
mov
pop
cmp
inc
or
push
push
out
mov
pop
fadd
inc
pop
sbb
rcr
or
ret
data16
push
pusha
dec
cwde
mov
adc
movs
mov
and
(bad)
xchg
mov
cdq
jecxz
jge
fwait
les
sbb
inc
add
fisttp
das
jno
test
push
cmp
loop
ret
mov
sub
imul
xchg
sub
stos
or
pop
dec
repz
addr16
push
dec
ja
add
sti
aas
pop
mov
add
ins
sbb
sub
mov
inc
push
fxtract
into
xlat
or
cmp
mov
or
xor
scas
xor
jge
ss
retf
retf
ja
push
rol
adc
xlat
lods
cmp
pop
add
stos
mov
mov
cmp
fwait
cwde
pop
adc
aam
inc
icebp
sub
xor
xchg
xchg
dec
or
add
add
lods
push
push
aad
sub
push
inc
adc
retf
shl
mov
test
mov
cli
retf
dec
into
pop
pop
movs
or
dec
xchg
out
loope
or
inc
mov
xor
loope
ins
sbb
fcmovne
test
scas
int3
cmp
in
js
mov
pusha
shl
push
ret
sbb
hlt
movs
pop
sar
hlt
jnp
es
jl
jmp
jle
mov
and
pop
daa
inc
sbb
mov
push
fwait
(bad)
iret
retf
pusha
or
je
push
mov
call
and
cwde
fadd
(bad)
fst
or
gs
cdq
retf
jg
js
mov
jnp
in
mov
jnp
es
mov
or
mov
clc
repz
mov
push
nop
addr16
inc
lds
adc
and
pop
fist
shl
jle
inc
fwait
and
stos
cmps
xor
icebp
inc
jmp
lahf
xchg
and
pusha
fwait
pop
inc
lods
jmp
jecxz
and
inc
test
xchg
aas
pop
or
dec
lods
aas
cwde
nop
sbb
sbb
retf
or
ret
js
push
mov
into
sub
out
call
dec
rcl
mov
sahf
dec
out
and
repnz
pop
sar
not
dec
sbb
int3
(bad)
jmp
xchg
shl
xor
fcomp
mov
ret
push
fst
retf
jnp
and
ret
in
js
sahf
int
jne
mov
dec
dec
push
cmp
and
arpl
pop
jae
or
les
and
mov
jo
mov
mov
pushf
jge
out
xchg
inc
jecxz
push
ss
repz
pushf
jns
or
mov
fs
mov
xor
lods
xor
aas
cmp
sbb
movs
pop
jp
mov
stos
pop
data16
out
push
cmc
fcmovnbe
xor
push
ss
mov
fiadd
sbb
or
ja
push
or
or
movs
neg
adc
xchg
sbb
xchg
jl
cwde
imul
aad
loopne
out
sbb
popf
jns
mov
mov
xor
mov
jnp
(bad)
(bad)
je
cvtps2pi
dec
cli
inc
jae
cmp
mov
mov
js
mov
and
clc
jmp
pop
retf
mov
retf
xor
hlt
push
push
les
add
fwait
lods
cmp
xor
test
cld
rcr
mov
es
cmc
popa
push
add
mov
rol
push
jne
sbb
ins
sbb
arpl
mov
mov
xchg
mov
out
ja
and
push
ins
movs
add
dec
xor
and
out
ins
out
add
ins
in
dec
mov
pop
call
or
enter
int
aas
xchg
cmp
adc
sub
lock
jno
xchg
test
xchg
pusha
cmps
xor
movs
mov
imul
mov
call
push
push
cmp
jmp
inc
or
ds
sub
xor
std
mov
repnz
pop
clc
jb
cdq
xchg
and
dec
mul
xor
cmp
pop
inc
sahf
call
sbb
xlat
repz
(bad)
sub
inc
cmps
or
iret
sub
jae
mov
arpl
push
loopne
daa
idiv
ds
stos
xchg
out
mov
jecxz
and
ss
inc
xor
push
jo
pop
xchg
mov
and
loop
test
aam
dec
mov
or
repz
sub
bound
pop
xchg
mov
popf
pop
mov
jmp
sbb
push
js
xlat
push
push
mov
loope
mov
pop
inc
adc
dec
je
fisttp
ins
mov
mov
call
xchg
int3
mov
outs
push
pushf
clc
mov
mov
pop
imul
es
pop
cmp
es
je
jmp
std
cmp
xchg
pushf
or
or
push
and
add
dec
les
dec
and
dec
(bad)
out
inc
dec
hlt
sub
stc
sub
out
iret
retf
repz
or
adc
pop
mov
stos
mov
call
lea
sbb
push
call
ds
fmul
xchg
push
mov
cs
sbb
dec
ds
cdq
loopne
call
aaa
dec
icebp
pop
sbb
xor
ror
rol
cs
sub
imul
cmp
mov
ja
mov
and
ins
fbld
call
pushf
fcomp
xor
sub
xchg
push
add
(bad)
push
xchg
mov
jle
push
cmp
mov
dec
popf
cmp
mov
fimul
xor
or
mov
dec
ss
pop
stos
(bad)
je
movs
cmp
sbb
add
leave
daa
mov
(bad)
stos
or
adc
jmp
lea
xor
jne
xchg
mov
sbb
loop
inc
jg
repz
cmc
sahf
aad
cmp
jnp
sbb
dec
pop
pop
popf
xchg
or
xchg
inc
arpl
shl
jb
out
lock
ins
sar
mov
fwait
sti
std
movs
pop
fistp
push
out
add
adc
(bad)
mov
sti
mov
and
popf
enter
in
add
rcr
add
dec
cmp
jmp
mov
loop
out
mov
loop
icebp
push
mov
ss
ret
jmp
test
sub
cmp
sub
dec
test
xor
inc
inc
repz
(bad)
(bad)
(bad)
(bad)
jnp
movs
inc
bound
imul
(bad)
xor
pop
popf
or
movq
sub
adc
arpl
in
in
xchg
lahf
mov
jnp
clc
outs
inc
fcomp
popf
pop
push
mov
jle
scas
in
(bad)
adc
xor
adc
sahf
out
shl
addr16
pop
out
mov
test
mov
add
pop
push
mov
outs
xlat
xchg
xlat
popf
sbb
cld
cld
(bad)
aad
lods
loop
daa
jbe
nop
xor
repz
cdq
jb
out
aaa
mov
pop
into
stos
xor
mov
push
and
clc
daa
pushf
loop
and
dec
or
imul
int3
sysret
mul
xor
xchg
ds
pcmpgtw
test
sbb
mov
mov
pop
sub
arpl
sbb
ficom
dec
(bad)
les
(bad)
in
jns
and
sub
jae
xchg
cwde
pushf
jns
out
mov
jnp
(bad)
mov
retf
xchg
adc
and
push
cli
add
fistp
sub
ja
outs
ss
or
test
cmps
pop
ds
xchg
cld
inc
neg
xchg
ds
lods
ja
adc
stc
push
call
xor
add
sub
es
das
adc
jecxz
adc
bnd
in
xchg
xchg
cmp
bswap
sbb
mov
mov
xor
mov
repz
adc
js
ja
aam
fwait
cmp
mov
popf
jl
add
(bad)
pop
fwait
xor
jmp
sub
lods
out
or
fst
push
retf
daa
push
sbb
std
fst
fcmovnu
iret
lea
shr
fstp
(bad)
cld
movs
jbe
mov
out
cmp
call
and
dec
fst
popf
mov
xchg
mov
stos
pop
inc
sub
not
call
sub
sub
lahf
pop
stos
icebp
sbb
sbb
(bad)
mov
xchg
push
(bad)
xor
out
pop
or
stc
dec
and
mov
mov
mov
sbb
mov
repz
ins
into
out
std
inc
test
push
sahf
sbb
and
jo
fbld
out
cmp
test
adc
add
and
inc
mov
sub
add
push
pop
mov
dec
jle
repz
jmp
xchg
les
mov
movs
lock
jae
mov
es
ret
add
outs
nop
pusha
movs
mov
and
mov
sub
(bad)
jge
jle
loopne
(bad)
jle
inc
pop
xor
out
sub
outs
xor
and
mov
xchg
ret
clc
pushf
mov
aaa
movs
jle
icebp
cli
ror
push
or
cmp
mov
ss
and
test
dec
popf
adc
and
add
cmp
mov
aad
mov
gs
jb
jne
mov
sahf
int3
scas
jg
mov
mov
mov
adc
lea
ins
test
cld
(bad)
call
jmp
sbb
loope
inc
lods
stos
shl
enter
and
(bad)
xor
dec
(bad)
mov
mov
dec
sbb
xor
mov
mov
and
(bad)
fldcw
lods
sub
stc
cmps
rcl
clc
add
es
aad
(bad)
jle
push
mov
and
sub
gs
cmp
imul
mov
aas
sub
repnz
mov
adc
push
and
mov
adc
es
ins
fidivr
jg
mov
ss
dec
xchg
mov
xchg
push
(bad)
test
(bad)
xor
pop
inc
in
mov
mov
jmp
and
pop
(bad)
pushw
mov
add
sbb
mov
cmps
cmp
popa
stos
push
push
int3
cmc
push
add
test
xor
fimul
xchg
arpl
call
pop
jbe
add
sahf
mov
fwait
test
dec
shl
mov
(bad)
ins
int3
jnp
adc
je
xchg
ret
or
ja
push
push
pop
sbb
cmps
aas
mov
jecxz
xchg
fsub
and
mov
lock
movs
ror
cli
jo
push
push
fsub
std
sbb
rol
test
div
xlat
imul
inc
stos
mov
out
loop
pop
fsubr
sbb
pop
addr16
cmc
pop
adc
jge
pop
in
dec
sbb
pop
inc
retf
sbb
pop
popa
pop
repz
sub
icebp
mov
ja
jl
je
in
or
inc
stos
sbb
in
push
fwait
stc
jge
jle
pop
les
cmps
mov
mov
test
xchg
scas
repnz
hlt
std
cmc
outs
and
jle
in
mov
shl
add
ds
mov
pop
add
and
mov
mov
loop
fadd
aaa
fs
adc
xrelease
pop
pop
pop
fsubr
(bad)
push
or
fs
mov
fist
cmps
addr16
mov
fs
mov
xor
mov
mov
xlat
imul
and
mov
push
jl
dec
stos
mov
jns
loopne
push
mov
sti
(bad)
imul
inc
mov
arpl
stos
ja
mov
loope
(bad)
jp
cmp
daa
push
push
inc
lahf
popf
pop
dec
xchg
jge
and
shl
and
inc
lahf
sahf
int3
pop
push
(bad)
mov
xchg
out
xchg
push
push
jle
xchg
jo
bound
test
(bad)
rol
jns
xor
pop
stos
in
jge
mov
das
xchg
or
popa
int
int3
lods
repz
cdq
jp
ins
fild
popa
pop
jle
adc
rcr
mov
push
jmp
mov
sbb
add
dec
fiadd
imul
and
jnp
jle
bound
fbld
cmp
fbld
mov
pop
jmp
sbb
rol
mov
pop
lock
fstp
aam
ja
inc
inc
call
push
sti
test
shl
jo
icebp
fwait
pushf
jg
xor
mov
cmps
cmps
push
jae
jp
xchg
jl
mov
mov
popf
inc
add
dec
adc
jmp
pop
movs
add
cmc
mov
mov
shl
xchg
jo
pushf
movs
adc
mov
ds
sub
pop
add
(bad)
mov
mov
jno
bound
and
mov
jg
jp
adc
dec
mov
and
gs
inc
fbld
iret
pop
cmps
ret
jle
sub
push
sbb
adc
jmp
(bad)
rol
pusha
inc
sub
sbb
(bad)
outs
inc
mov
pop
cmp
push
adc
popf
hlt
movs
jecxz
ficom
outs
jmp
enter
or
(bad)
sub
inc
xchg
xchg
aam
push
xchg
and
scas
mov
shl
pop
mov
(bad)
outs
stos
lods
ret
sbb
iret
mov
push
and
shr
inc
mov
cmp
not
push
xor
stos
pop
xchg
pop
lea
sbb
(bad)
arpl
adc
stos
dec
adc
(bad)
scas
pop
(bad)
in
fistp
or
xor
mov
fimul
fcmove
fisub
mov
aaa
inc
inc
repz
sbb
loop
das
mov
jno
je
push
in
xor
xchg
in
and
enter
mov
sbb
sbb
adc
inc
(bad)
in
pop
push
cmp
or
inc
movs
enter
leave
lock
ds
or
mov
imul
xor
and
pop
dec
outs
ret
clc
popa
lods
pop
xlat
mov
mov
lea
test
pop
inc
adc
xchg
sbb
adc
ret
dec
cmp
call
call
add
xchg
ds
mov
push
paddb
jbe
(bad)
retf
dec
lahf
pop
lea
jbe
xchg
jns
xlat
or
push
and
jns
aam
cmps
mov
ret
jnp
in
das
data16
sti
pop
and
sub
mov
(bad)
push
adc
pop
mov
loope
mov
mov
xor
xor
cmp
dec
cmp
test
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
cli
jmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
gs
adc
and
xchg
and
sbb
dec
dec
dec
aaa
add
cmp
and
sub
push
and
jae
cmc
mov
and
push
inc
std
in
add
daa
jmp
dec
jb
sbb
imul
(bad)
das
enter
adc
lods
cwde
xor
lods
xlat
mov
mov
adc
jle
jae
mov
sub
out
push
pop
cmp
xlat
out
adc
and
sti
jne
and
scas
sbb
push
or
pop
xor
mov
add
(bad)
jo
loopne
inc
scas
lods
jmp
addr16
fdivr
jbe
and
push
cmp
cld
push
nop
icebp
pusha
mov
pop
xor
dec
pop
pop
pop
pop
cmp
ja
pop
pop
and
(bad)
fmul
mov
cli
retf
fmul
mov
push
add
jmp
int3
pop
or
cli
sub
mov
pop
retf
cmp
pop
gs
cmp
cs
imul
in
mov
push
inc
jl
inc
aaa
retf
fdivp
(bad)
bnd
scas
mov
fisubr
div
dec
ja
xor
mov
cmp
call
test
mov
jns
int
lods
mov
shr
mov
(bad)
cmps
add
pop
shr
sub
jle
sub
jb
mov
mov
mov
std
(bad)
pop
pushf
jmp
out
call
fsub
or
jl
mov
ss
ins
ret
aam
stos
push
aam
mul
stos
inc
or
imul
test
sub
adc
mov
fwait
sub
rcr
xor
dec
cmp
shl
dec
and
xor
mov
paddsw
cmp
xchg
xor
fcomp
pop
icebp
lock
movs
fcomp
(bad)
cmp
sbb
ret
dec
pop
or
ficom
fs
stos
pushf
push
and
cwde
jmp
das
fcomp
mov
das
test
sub
stos
popf
mov
shr
ret
outs
add
push
out
(bad)
popf
cmps
retf
adc
inc
stc
in
add
lds
fisubr
setne
lods
pop
loop
mov
xchg
xor
imul
aas
not
mov
adc
push
push
mov
or
or
jae
leave
mov
leave
shl
jecxz
test
sub
cwde
push
out
repnz
arpl
push
je
stos
inc
xchg
dec
(bad)
aam
ss
repz
sbb
adc
sahf
(bad)
jbe
inc
mov
xor
or
sbb
not
push
and
stos
cli
call
inc
jecxz
dec
xchg
pop
push
retf
iret
xchg
out
dec
mov
frstpm(287
mov
add
cmps
mov
jecxz
mov
icebp
je
inc
pop
in
into
pop
push
vunpcklps
mov
dec
movs
jb
cmp
test
dec
je
(bad)
mov
shl
loopne
cs
test
outs
das
shr
mov
xchg
(bad)
fidiv
xor
in
(bad)
cmp
sub
push
lss
mov
xor
jno
push
xlat
call
pop
movs
mov
add
xor
mov
adc
push
call
add
xlat
add
cmp
xchg
and
pushf
fld
repz
cmps
hlt
rcl
ins
jne
out
jge
and
and
push
nop
dec
xor
mov
popa
retf
stos
aam
push
xchg
dec
sti
mov
test
(bad)
stc
pop
jp
inc
popf
push
adc
pushf
mov
(bad)
popf
sbb
sub
adc
and
std
jns
retfw
pop
loop
je
rcr
sbb
sub
les
mov
aaa
scas
cmp
sbb
dec
cmp
xor
icebp
mov
xchg
mov
movs
out
cmp
rcl
jl
adc
xor
shl
(bad)
ret
mov
pop
push
test
xchg
push
sbb
mov
adc
mov
dec
xchg
stos
fld
scas
stc
push
call
int3
mov
mov
call
or
(bad)
jns
aaa
nop
dec
xchg
stc
(bad)
arpl
xchg
sar
xor
rol
pop
inc
shl
mov
push
push
shl
inc
sub
int
into
ins
mov
push
push
or
stos
or
push
arpl
setne
mov
pop
dec
lods
xchg
nop
(bad)
cwde
fidiv
sbb
jg
push
pop
popf
cmp
fstp
sti
mov
mov
dec
xor
jle
cli
jnp
(bad)
popa
dec
add
out
movs
notrack
rcr
dec
jno
xor
dec
add
retf
cmc
push
pop
(bad)
fsubr
jno
mov
pop
sub
inc
xlat
out
dec
(bad)
xchg
add
mov
ja
or
addr16
and
stc
dec
pop
inc
mov
in
into
fisub
push
in
xchg
sub
sti
cmp
leave
cmp
test
mov
pusha
mov
xor
inc
cs
ss
dec
aas
cwde
mov
scas
cmc
add
popa
lds
xchg
cmps
xor
inc
das
dec
retf
scas
mov
or
(bad)
icebp
mov
arpl
outs
inc
or
ja
movs
imul
push
jbe
mov
mov
mov
sbb
and
sbb
add
std
jmp
jle
or
movs
hlt
jge
push
pop
jge
out
jb
cmp
dec
or
sub
outs
dec
mov
mov
jnp
add
imul
leave
ficomp
clc
rcr
jb
ss
push
pop
leave
xlat
pop
call
outs
and
dec
push
jns
(bad)
pop
cmp
inc
loope
rcr
push
dec
sbb
adc
popa
scas
int3
inc
push
or
sti
jns
push
push
sub
push
adc
dec
popa
add
test
lock
and
fwait
inc
sub
xchg
xchg
pop
push
scas
repnz
pop
loopne
mov
mov
dec
adc
sub
lods
stc
inc
push
or
sub
dec
pop
mov
test
jp
call
and
add
ret
ret
cmp
popa
adc
jp
mov
scas
push
jb
mov
cmp
inc
daa
dec
jne
jg
xchg
(bad)
mov
and
(bad)
jnp
aas
jecxz
mov
add
daa
pop
inc
leave
pop
add
imul
sbb
cmp
mov
pop
inc
push
sbb
lock
sub
push
xchg
push
loopne
movs
push
(bad)
xor
mov
cmp
dec
imul
adc
shr
stos
inc
jmp
push
xchg
sbb
sahf
jl
out
dec
lock
sub
ss
or
clc
mov
and
mov
ins
pusha
xor
call
and
mov
retf
mov
sub
rcl
or
add
pop
(bad)
sub
pop
cmps
push
jecxz
jae
add
and
and
loopne
lahf
fs
hlt
sbb
call
and
fadd
mov
rcl
sub
pop
xchg
or
icebp
and
pop
pop
retf
in
mov
mov
movs
in
sub
leave
sub
mov
xor
or
js
ins
sub
mov
bound
cwde
das
jno
jmp
or
adc
(bad)
push
stc
lds
inc
push
xchg
(bad)
add
inc
(bad)
lock
push
jle
mov
rcl
gs
cdq
sbb
rol
xchg
aad
mov
leave
sub
in
xor
cdq
stos
mov
push
jo
cmps
mov
pop
pop
pop
ds
ss
adc
arpl
jg
push
jle
jb
jle
pop
add
push
scas
jb
jo
rcl
stos
(bad)
test
stos
int3
xchg
retf
push
dec
jecxz
adc
outs
in
std
jbe
inc
ja
shl
cmp
je
das
inc
stos
or
sbb
jae
pop
dec
(bad)
or
or
jl
and
outs
add
outs
sub
lods
cmp
popa
pop
dec
dec
pop
sbb
inc
in
cmp
xlat
data16
sbb
mov
adc
loop
out
sub
bound
(bad)
sahf
pop
pop
xor
jae
mov
ret
xchg
dec
jne
outs
daa
loop
push
push
aad
pop
sub
adc
pop
jecxz
fcom
jmp
daa
and
fwait
dec
sub
repnz
dec
js
pusha
ins
lds
adc
mov
(bad)
sub
rol
ins
mov
cmp
sti
dec
in
dec
fnstsw
jecxz
not
in
cs
mov
icebp
lods
movs
scas
adc
cld
and
fwait
jae
cwde
shl
jl
sbb
add
dec
(bad)
jl
xchg
movs
or
(bad)
ds
and
push
lods
fcomip
push
pusha
(bad)
in
aaa
ror
stos
fisub
into
mov
shld
dec
add
clc
xchg
sbb
inc
fwait
scas
lods
sub
push
in
aas
gs
xor
adc
jb
xor
jg
dec
sbb
adc
fild
cmp
stos
xor
stos
jno
retf
into
inc
push
sbb
icebp
inc
mov
sub
inc
popa
ins
jns
xor
sbb
and
repz
in
sar
in
loopne
inc
jmp
adc
or
addr16
or
cwde
lds
mov
push
and
ret
xlat
dec
mov
imul
repz
test
aad
int3
add
repz
mov
push
out
or
fxch
in
mov
fld
stc
pop
add
dec
ror
popa
(bad)
push
xchg
test
xor
jno
inc
and
das
test
xchg
sbb
aad
inc
loopne
jecxz
test
jge
jl
mov
cmp
mov
hlt
pop
mov
les
arpl
lea
lods
icebp
pop
add
push
or
aas
lock
sbb
inc
inc
inc
xchg
push
jg
or
jge
int
xchg
andnps
sub
cld
pop
or
mov
add
aaa
rcl
xchg
xchg
xchg
pop
mov
int3
enter
mov
test
clc
lds
pusha
test
inc
in
pop
jae
sbb
les
sub
dec
in
lock
push
add
mov
adc
mov
fsub
jecxz
aas
jns
movs
push
popf
fs
sub
or
das
mov
nop
cmp
(bad)
int
es
data16
call
wbinvd
aas
sub
mov
icebp
clc
test
addr16
nop
loop
lock
pop
cwde
pop
sahf
adc
jl
repz
int3
mov
fidiv
sar
(bad)
mov
dec
mov
cld
das
sbb
mov
push
ins
and
jb
div
adc
mov
lea
cmp
mov
pop
jns
inc
dec
in
mov
or
popf
or
add
pop
dec
call
lods
repz
or
push
jg
leave
retf
into
sbb
mov
aam
loopne
dec
and
je
scas
sar
idiv
inc
add
mov
cmp
cmp
out
xor
imul
jg
aam
mov
(bad)
mov
outs
dec
xor
cwde
aad
rcr
mov
mov
inc
xor
add
aas
xchg
test
cmp
loope
mul
adc
cwde
icebp
iret
ss
nop
sbb
ret
addr16
lock
mov
aam
cmps
hlt
arpl
pop
push
inc
cwde
xor
mov
dec
sub
cld
inc
push
stc
cmp
cmp
out
hlt
fiadd
add
js
push
xor
int3
xchg
cmp
sub
icebp
cmp
mov
pusha
push
jnp
jae
mov
xchg
outs
push
inc
(bad)
sub
mov
imul
cmc
and
(bad)
imul
push
repnz
or
es
mov
pop
and
mov
push
es
cmp
(bad)
mov
jg
test
movs
in
push
jg
push
jbe
mov
jns
fs
mov
lods
ret
ret
and
add
inc
push
jne
push
pop
in
clc
ret
xor
aam
popf
pop
sbb
add
sbb
or
sbb
test
lock
push
js
repz
call
sbb
mov
(bad)
not
xor
test
movs
mov
mov
jno
sbb
outs
pop
cli
pop
dec
push
xor
repz
pop
push
mov
jp
das
fst
js
nop
inc
cs
imul
lea
xor
push
pop
inc
push
inc
(bad)
sahf
ret
mov
in
inc
out
aam
jae
push
ret
xor
and
scas
jnp
xchg
outs
add
ret
sub
int3
std
stc
int3
pop
pop
and
call
aas
pusha
fcom
pop
retf
lock
sub
mov
icebp
sbb
mov
dec
sub
pop
out
sub
or
lgdtd
mov
int3
rol
mov
out
dec
das
js
jnp
push
mov
adc
jmp
mov
jmp
outs
cmp
and
xlat
idiv
jmp
mov
cmp
icebp
inc
add
ins
ins
aam
jbe
mov
bound
lds
enter
mov
and
int
retf
aaa
not
cmps
or
mov
jns
cmp
xchg
jle
aaa
jnp
sahf
inc
je
adc
gs
pop
push
faddp
pusha
daa
and
add
lods
jg
in
push
out
add
cmps
ds
pusha
xchg
mov
stc
jno
jne
sub
pusha
in
sahf
xor
xor
sbb
sub
dec
mov
inc
or
cmp
dec
jg
nop
out
int
sar
hlt
mov
fist
loope
jae
pop
pop
je
test
mov
loop
mov
adc
movs
mov
loop
dec
jnp
jns
ret
mov
fwait
ret
sbb
lods
sub
shl
(bad)
pop
and
mul
xlat
pop
mov
xor
xchg
ins
cmp
retf
enter
jecxz
das
xlat
mov
mov
loop
aad
test
cmp
aas
das
jbe
aam
sub
add
mov
mov
ins
fsub
adc
lds
mov
jge
dec
xchg
xor
xchg
cli
out
lock
adc
std
xchg
bound
pop
aad
xchg
cmps
sbb
fwait
jmp
cmp
mov
cdq
repz
aam
add
mov
lea
fs
movs
test
mov
pop
jno
fsub
inc
mov
inc
inc
ss
and
or
fidivr
pop
and
fsubr
add
inc
scas
in
pop
jns
pop
jmp
cmp
das
push
jb
(bad)
addr16
xor
jns
jg
dec
fsubr
mul
dec
out
lea
xchg
adc
cmp
scas
sub
push
adc
inc
fcom
pop
or
fucomi
cmc
push
stc
call
stos
test
arpl
and
sbb
push
pop
mov
div
pop
xlat
push
mov
sar
movs
mov
pop
leave
fisubr
cmp
lds
jb
test
ins
mov
ins
test
cmp
test
scas
mov
jbe
pop
shl
sahf
cmp
adc
mov
mov
inc
cmps
movs
(bad)
clc
push
out
lods
sbb
cld
imul
(bad)
std
mov
(bad)
clc
addr16
sbb
sahf
push
jle
sub
pop
xchg
stos
daa
mov
xchg
in
out
adc
scas
dec
je
jae
push
int3
sub
jl
aas
das
les
test
(bad)
cmp
sar
inc
inc
adc
cmp
std
das
push
or
xchg
daa
out
retf
lahf
jno
lea
js
and
cmps
dec
popf
in
sti
leave
and
jle
xor
cmps
repnz
fst
not
aam
fwait
out
xor
pusha
out
jl
cmps
das
(bad)
mov
movs
jae
fiadd
mov
adc
cmc
test
sbb
mov
fadd
jnp
sub
xchg
push
repnz
mov
lods
dec
stc
mov
xor
sbb
adc
int
out
scas
mul
stos
sub
xchg
mov
popa
(bad)
out
adc
jmp
in
fdiv
sar
xchg
es
loopne
jg
stc
out
jg
stc
out
xor
lock
add
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
int
and
pop
add
scas
data16
mov
outs
cmps
mov
ins
cmp
mov
test
cmps
daa
dec
into
je
(bad)
aam
adc
push
jmp
jge
sti
mov
dec
ror
mul
pop
in
add
hlt
mov
mov
mov
xchg
mov
sbb
lea
or
stc
dec
movs
aad
out
repnz
iret
pop
retf
mov
ja
retf
adc
and
pusha
invd
sub
ds
push
mov
cmp
cld
arpl
add
sub
std
aas
pop
mov
in
cmp
(bad)
jp
pop
inc
dec
xor
mov
(bad)
jmp
cwde
hlt
ins
dec
retf
sbb
sub
and
imul
mov
rol
mov
into
sub
cmps
call
scas
lods
bound
jns
shl
sub
jge
inc
xchg
mov
imul
js
jecxz
(bad)
fiadd
cmp
call
gs
xchg
add
sbb
sbb
imul
sahf
or
inc
sbb
dec
mov
arpl
out
stc
push
jno
pusha
sbb
add
mov
les
test
mov
not
out
push
cld
pop
jecxz
test
mov
sub
add
call
loop
into
test
test
movs
mov
jmp
sbb
mov
mov
popf
test
xchg
mov
cmc
adc
push
pop
test
aaa
call
das
xchg
(bad)
sbb
push
imul
scas
sub
dec
ror
inc
pop
lds
in
fcmovnbe
push
int
mov
pop
icebp
ror
test
stos
push
push
jb
dec
neg
xchg
xor
fcomp
fistp
pop
xor
enter
popf
lods
stos
mov
fwait
shl
imul
ins
mov
(bad)
fisttp
mov
xor
sbb
mov
sub
(bad)
mov
scas
pop
xlat
mov
push
jmp
add
out
in
imul
xchg
mov
cmp
xlat
mov
push
clc
es
into
mov
xor
stc
add
inc
arpl
addr16
push
rol
fwait
mov
ds
sti
(bad)
gs
les
test
inc
fwait
sbb
push
jns
and
aaa
and
icebp
stos
inc
int3
dec
or
sub
push
jg
sub
pop
mov
add
leave
pop
das
xchg
or
pop
cmp
mov
mov
jbe
xchg
or
adc
(bad)
mov
int3
add
xchg
jg
rcr
fmul
jnp
paddw
call
shr
add
call
sbb
xor
adc
enter
lods
or
mov
in
repz
push
imul
and
mul
pop
iret
mul
(bad)
sbb
xor
call
add
mov
push
lea
mov
xchg
xor
xchg
cmp
mov
jle
ret
(bad)
in
add
enter
fisubr
inc
pusha
mov
cwde
add
xchg
inc
enter
int
mov
cmp
repz
int3
xor
jmp
jl
repnz
cmp
dec
mov
fiadd
mov
rep
(bad)
fsubr
jl
ficomp
add
mov
in
mov
outs
dec
add
fisub
(bad)
cmc
dec
sar
out
sar
nop
adc
cmps
sahf
xor
loop
ins
sub
into
and
scas
lods
mov
mov
in
sub
sar
pop
jmp
and
xor
jle
mov
(bad)
fsub
jne
scas
sti
out
or
jo
fstp
scas
mov
ins
pop
enter
push
sub
aaa
mul
dec
xchg
stos
or
retf
ret
dec
lods
dec
pushf
cdq
cmps
xchg
dec
test
(bad)
push
push
in
fscale
std
xor
push
inc
sti
adc
fsubr
(bad)
mov
gs
daa
ror
aas
add
imul
adc
mov
mov
sub
adc
mov
addr16
cwde
movs
daa
sub
xor
inc
popa
sti
sub
fmul
cmp
rol
adc
jno
jae
mov
stc
es
stos
loope
xor
mov
arpl
js
mov
xchg
xor
loope
fst
push
retf
cmps
idiv
loopne
push
sbb
stc
aam
retf
xchg
dec
imul
and
xor
pop
stos
jb
pop
adc
in
mov
lahf
or
xchg
jne
outs
mov
mov
stos
ins
jl
in
stc
jno
cmp
imul
adc
add
sub
cmps
cld
in
aas
std
popf
sbb
and
xchg
ja
shr
pop
scas
scas
(bad)
mov
int
push
test
(bad)
rol
or
mov
test
ret
xor
and
pop
xor
(bad)
imul
cmp
push
dec
fwait
pop
mov
or
inc
mov
add
and
jl
aaa
arpl
pushf
mov
lock
int3
jo
push
xlat
stos
loop
cmp
push
sub
push
pop
std
xor
sub
push
mov
ror
adc
int3
jge
xchg
xor
pop
or
test
call
fmul
jno
(bad)
xlat
lds
enter
sbb
shl
inc
wbinvd
xchg
xor
mov
xor
das
inc
fistp
daa
dec
movs
mov
movs
sti
lods
sbb
and
sbb
test
push
je
add
inc
cmp
add
jb
push
xchg
ret
and
xchg
icebp
xchg
ret
cdq
jne
pop
lds
add
inc
pop
mov
mov
add
cmp
ds
fdivr
xchg
jae
call
test
fdivp
lods
inc
inc
mov
add
mov
push
inc
push
mov
test
je
popf
stos
xor
jmp
adc
mov
aad
dec
jle
outs
cld
ror
call
mov
xchg
fsubr
(bad)
(bad)
cmp
dec
clc
xchg
pushf
and
and
add
pop
mov
sub
add
aad
ins
out
xchg
sti
push
adc
and
cli
sbb
(bad)
pop
cli
retf
inc
scas
jns
int3
push
sti
retf
aas
jbe
mov
mov
mov
fdivr
or
call
xchg
pop
aas
mov
call
retf
loopne
out
int
fisubr
ficom
adc
pop
sub
retf
aad
adc
pop
sub
mov
jno
cmp
(bad)
loope
repnz
repnz
push
int3
cdq
xchg
xor
jne
cwde
or
daa
pop
inc
in
cmc
repz
pop
fstp
cli
test
sar
xchg
in
dec
popa
sub
ins
sbb
in
push
fxch
sbb
ins
cmp
ss
sub
scas
scas
mov
loope
or
rcl
cli
push
cld
jae
cmps
out
je
sbb
out
loopne
data16
aad
stc
loope
(bad)
xor
(bad)
jns
dec
addr16
imul
clc
stc
dec
enter
enter
shl
es
jmp
dec
fsub
jns
sbb
mov
cwde
jmp
sbb
call
or
test
push
(bad)
or
mov
or
mov
inc
stos
(bad)
es
loop
xor
sub
aam
ja
hlt
mov
ror
ror
and
sahf
in
cld
and
enter
cs
loope
std
push
jp
mov
pop
outs
mov
sbb
add
daa
mov
dec
daa
in
cmp
cmp
xchg
add
(bad)
mov
xchg
pop
dec
pop
call
and
fwait
out
dec
fucom
cmps
nop
xor
push
xor
jb
and
mov
mov
and
ja
out
xchg
pushf
and
sbb
test
test
add
fidivr
lock
jg
sahf
loop
outs
xor
dec
xchg
or
test
not
xchg
inc
je
sti
stos
rol
not
sub
(bad)
push
mov
in
mov
jnp
adc
sbb
pop
jmp
hlt
push
adc
int3
cmp
cmp
cmp
mov
add
dec
mov
jle
pop
dec
(bad)
jmp
xchg
sahf
mov
add
fnsave
ret
xchg
cwde
mov
jae
imul
inc
xchg
fst
cmc
mov
cmp
add
test
cmp
ficom
call
retf
jl
pop
jl
fisttp
pop
add
inc
out
xor
(bad)
push
pop
ror
ret
inc
fisub
sub
lods
cli
sbb
popa
mov
inc
in
mov
imul
dec
or
inc
int
inc
dec
out
push
mov
dec
xchg
push
mov
rol
test
int
add
mov
shl
(bad)
std
cmp
mov
cmp
mov
mov
ror
cmps
stc
cmp
ror
mov
popf
and
sbb
test
(bad)
xchg
call
aam
dec
cmc
mov
xchg
imul
pop
rcl
dec
jnp
cs
push
xlat
jo
loope
ds
xchg
loop
cmp
(bad)
shl
jmp
ret
sbb
push
stos
pop
adc
(bad)
repz
pmaxub
into
aas
add
stos
jmp
cmp
rcr
fidiv
call
jg
push
addr16
adc
add
movs
xchg
les
sbb
mov
aam
mov
ficom
in
cmp
lods
lods
mov
pop
jns
call
out
ror
and
cld
shr
ret
enter
pop
mov
mov
pop
mov
dec
es
xchg
mov
xchg
jb
ins
xchg
enter
mov
mov
add
add
cmps
adc
mov
xchg
cmp
xchg
cmp
xchg
test
fmul
imul
push
out
jl
ss
cmp
int
mov
inc
fdivrp
jmp
and
dec
adc
sahf
or
(bad)
movs
cmc
xor
push
cmp
dec
in
out
movs
into
in
and
adc
retf
dec
stos
pop
sbb
mov
sub
jmp
stos
push
mov
pop
mov
aaa
mov
push
(bad)
(bad)
daa
push
cmp
push
pop
pop
xor
iret
sub
aam
mov
loope
mov
and
repz
jb
std
loope
xchg
xor
or
out
lahf
js
ss
lahf
pop
test
cld
enter
adc
mov
add
or
sub
push
jle
push
imul
retf
into
dec
(bad)
xchg
shl
lods
pop
sbb
pop
pop
push
cwde
pop
rcl
je
mov
mov
lds
mov
mov
jecxz
push
mov
dec
sbb
xor
jne
imul
std
mov
lods
fimul
dec
and
xchg
cli
push
stc
add
xor
scas
cli
ins
push
(bad)
pop
scas
ret
fs
sahf
lock
pop
(bad)
mov
leave
jo
pop
cmp
or
sbb
jle
aad
fiadd
repnz
push
mov
lds
fsub
retf
outs
stc
xchg
sbb
clc
or
mov
pop
cmp
into
in
cmps
cld
push
dec
mov
mov
mov
int
cmp
in
cmps
lods
ror
cmp
pop
shl
sub
jno
lahf
lods
mov
cs
xchg
xor
rcr
pop
xchg
sahf
mov
out
sub
adc
fcomp
inc
pop
push
inc
cs
hlt
repnz
mov
mov
push
jle
fwait
ja
push
jle
add
mov
sbb
popw
pop
iret
test
(bad)
call
icebp
inc
cli
xchg
sbb
addr16
(bad)
fidiv
mov
es
push
int
jns
or
or
xchg
sub
out
jmp
jae
not
mov
out
aam
addr16
repz
xchg
out
mov
pop
out
mov
sbb
push
mov
jl
sub
in
jnp
mov
call
int3
xor
fcom
inc
mov
sub
mov
in
fiadd
sbb
inc
das
mov
int
sahf
inc
jg
cmp
mov
and
fldenv
shr
rcl
push
test
je
imul
add
clc
and
cs
jbe
push
push
cmp
sbb
out
push
mov
das
xor
outs
xchg
cli
je
pushf
ins
imul
dec
xlat
pop
daa
sub
icebp
pusha
repz
leave
pop
in
pop
dec
add
or
movs
out
push
inc
cmp
lds
mov
xchg
stc
aad
mov
push
loope
xor
jp
mov
test
cmp
xchg
adc
add
fisttp
adc
inc
idiv
fwait
icebp
sti
sbb
arpl
dec
lods
je
mov
pop
vphsubdq
aad
pop
(bad)
pushf
jmp
in
mov
stos
mov
aam
gs
and
repz
adc
jmp
cmps
outs
xor
pop
js
les
add
push
inc
and
retf
int
sub
stos
cld
dec
aam
xchg
rcl
xchg
add
pop
in
mov
lods
inc
movs
dec
ins
lds
pushf
sbb
mov
add
mov
ficom
xchg
jns
or
xchg
mov
xchg
pop
xchg
dec
jl
loopne
ds
xchg
jns
stos
out
pop
add
pop
jl
adc
add
dec
xor
es
hlt
xor
fdivr
pop
aas
fmul
mov
stc
mov
pop
dec
xchg
jl
pop
cmp
hlt
aad
ret
in
or
in
(bad)
push
fidivr
leave
call
cld
jnp
xchg
mov
(bad)
popf
mov
sub
or
inc
sub
mov
push
iret
push
sar
outs
add
cmp
retf
mov
aaa
xor
push
pop
scas
loope
cmp
cmps
mov
sbb
or
and
shl
repz
ins
ffree
pop
rcr
mov
nop
pop
add
ret
mov
push
mov
in
mov
jbe
adc
add
cwde
aad
fs
movs
mov
retf
cld
data16
cmp
add
(bad)
mov
xor
push
inc
sub
cli
jo
jbe
inc
sub
stc
jecxz
mov
mov
pop
mov
aaa
test
mov
dec
sti
cli
sahf
mov
pop
push
pop
prefetcht0
ficomp
inc
stos
std
sti
mov
push
inc
pop
xchg
add
addr16
dec
rcr
cwde
or
aam
ins
in
push
add
sub
stc
mov
imul
cmp
push
dec
int
dec
(bad)
jle
nop
cld
xlat
std
add
outs
mov
aas
in
xchg
cmp
or
sbb
jno
fcmovnu
out
lods
jne
aas
mov
fild
xchg
sbb
push
add
movs
daa
push
push
retf
xchg
popa
enter
dec
(bad)
int
call
cld
int
jnp
enter
push
or
push
popf
retf
xor
mov
or
or
(bad)
xchg
ins
imul
xchg
dec
sub
call
sub
push
xor
aaa
cmp
fcomp
enter
sbb
mov
cli
fild
cmps
loope
mov
push
mov
call
xchg
dec
rcl
jmp
mov
push
pop
std
adc
mov
pusha
pop
in
push
push
xor
inc
mov
xchg
icebp
pop
xchg
cwde
mov
mov
lahf
out
out
movs
pop
aad
cld
call
in
mov
jl
clc
scas
aam
cmp
xor
push
in
sub
inc
dec
lea
sbb
retf
cmps
xchg
sub
in
lea
mov
and
jns
jae
addr16
test
aaa
(bad)
lods
inc
pop
jno
jns
add
and
dec
push
cmps
mov
outs
jne
in
jne
jbe
inc
jae
cmps
imul
stc
out
jg
stc
jg
add
pop
push
jno
pop
push
scas
out
test
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
je
ja
pushf
cmp
jge
cmps
jnp
loope
int3
imul
cwde
leave
ins
mov
cwde
mov
mov
add
jmp
adc
aaa
cmc
lock
push
mov
inc
(bad)
jae
pop
cmp
inc
jmp
(bad)
mov
test
enter
xor
jmp
lahf
adc
and
xchg
sbb
jb
cmp
ja
push
or
jae
jnp
ret
sbb
or
mov
push
push
fdivr
fwait
xchg
call
in
in
xchg
mov
xchg
push
push
outs
aaa
jo
push
or
pushf
sbb
mov
add
mov
push
xchg
call
sbb
sahf
mov
jecxz
mov
push
jp
push
not
stos
ss
or
mov
fwait
xchg
adc
xchg
push
loopne
dec
sub
fisub
add
clc
fdiv
mov
mov
in
push
cmp
(bad)
outs
adc
pop
stc
cmp
mov
pop
loopne
ret
xchg
test
out
ror
js
jo
jp
lea
scas
dec
jecxz
lds
jae
push
adc
aam
pop
jne
xchg
leave
ror
in
ja
hlt
cmp
lods
test
add
clc
xor
mov
out
stos
lods
clc
ret
mov
xor
xchg
cld
outs
xchg
xlat
or
jmp
out
cdq
ret
xchg
mov
dec
and
mov
fsubr
je
clc
mov
push
neg
lods
dec
adc
loop
jne
lahf
sub
jge
fmul
and
dec
fidivr
(bad)
cmp
or
outs
xor
mov
aad
mov
clc
fadd
sahf
sbb
test
dec
add
adc
popa
push
pop
add
xor
popa
jb
js
sbb
aad
das
mov
rol
fistp
cmp
and
mov
sub
mov
movs
ficom
xor
jnp
retf
out
cmps
jo
(bad)
rcr
adc
scas
sti
inc
xor
std
outs
lods
xor
pop
xchg
jmp
aam
mov
mov
mov
xchg
in
lods
sbb
mov
mov
mov
push
jmp
push
fild
push
mov
repz
push
sub
int
add
jno
fcomp
inc
fnsave
scas
cmp
cmp
ds
cmp
pop
xchg
or
xor
mov
sub
inc
jmp
cld
(bad)
repnz
adc
sar
(bad)
mov
leave
repz
(bad)
sbb
clc
neg
xor
mov
mov
cld
sbb
pop
mov
and
(bad)
ror
mov
out
push
jnp
jge
out
jb
and
call
jmp
inc
inc
or
inc
jae
movs
in
(bad)
and
clc
adc
(bad)
retf
stos
sbb
adc
call
cmps
(bad)
jno
mov
imul
stos
enter
xor
daa
dec
pushf
and
mov
pop
sub
fisub
xor
dec
push
inc
jae
rol
jns
aad
dec
fisub
(bad)
jle
pop
cwde
idiv
cmp
push
cmc
jne
ins
mov
sub
mov
push
loop
dec
add
repnz
push
fnstenv
ins
aad
mov
call
push
push
(bad)
call
add
stos
cs
stos
lock
xor
mov
int
jmp
bnd
in
(bad)
aas
mov
sub
ins
gs
out
es
cmp
ins
nop
xchg
in
dec
mov
cli
cmp
fnsave
push
test
(bad)
mov
js
inc
imul
aam
mov
lock
ss
adc
lahf
adc
adc
jg
mov
inc
mov
adc
fldcw
xchg
imul
fs
xchg
inc
stos
retf
cmp
aad
(bad)
mov
gs
(bad)
pop
lods
push
jl
xchg
sbb
xchg
std
pop
push
cwde
pop
sub
fadd
xchg
fninit
test
xchg
cmps
xor
nop
loopne
rcl
rcpps
or
xchg
pop
jp
xor
jmp
adc
mov
je
jp
ret
push
scas
(bad)
cli
adc
push
shr
push
lods
jns
cvtps2pi
loopne
test
sbb
daa
daa
pop
push
shl
mov
cmp
sub
jne
xchg
jg
cmp
cmp
out
pop
cmp
sbb
daa
fstp
dec
jge
jmp
scas
xor
in
ins
xchg
xchg
arpl
jmp
imul
adc
xor
xchg
imul
cwde
and
push
fild
add
add
xchg
jp
mov
hlt
add
stos
idiv
stos
mov
scas
sbb
int
fs
mov
(bad)
retf
mov
adc
and
popa
mov
loopne
lahf
jbe
cmp
test
mov
movs
cmp
cmc
push
mov
ins
adc
sar
push
in
test
mov
dec
sub
aam
xor
pushf
fisubr
popf
or
pop
ret
mov
ret
mov
mov
arpl
setle
jge
push
int3
call
movs
ja
clc
ret
out
stc
mov
jmp
stos
mov
scas
pop
jne
mov
or
fistp
clc
jecxz
pop
adc
std
les
fnstenv
hlt
pop
mov
jo
int
sub
sbb
test
out
or
dec
xchg
mov
shr
jmp
js
movs
sub
idiv
pop
and
out
pop
inc
nop
(bad)
pop
sub
mov
ficomp
lods
shl
sti
(bad)
or
and
pop
cmp
rcr
cwde
push
mov
(bad)
jmp
out
sub
sub
xor
jno
xchg
mov
imul
sar
fsub
xchg
sar
lea
cdq
cmp
and
mov
mov
into
sbb
xor
xchg
cmp
mov
cld
test
mov
movs
adc
sub
xchg
rol
repz
jb
mov
xchg
cmps
mov
popa
aas
ins
fld1
xchg
data16
sbb
outs
sub
aad
ins
xor
adc
jle
and
fs
ret
das
cmps
cdq
or
sbb
fild
cld
adc
retf
mov
ror
test
fst
fimul
int
lea
sub
add
into
sahf
mov
add
arpl
fisubr
aas
jbe
pop
and
fdivr
mov
sar
add
sbb
out
inc
cmp
sahf
xchg
mov
shr
inc
jmp
sub
stos
pop
push
mov
push
jecxz
mov
jmp
dec
or
mov
test
jecxz
cmp
mov
cmc
pop
or
(bad)
call
adc
inc
movs
mov
fwait
test
int
leave
add
sub
cmp
xlat
cmp
xchg
cmc
push
and
(bad)
mov
int3
mov
cmp
jecxz
xor
in
pop
jne
popf
sbb
mov
imul
add
ins
jmp
scas
ja
adc
mov
das
leave
sub
xchg
push
sbb
sub
scas
pop
sbb
jg
mov
inc
jo
icebp
dec
mov
ficomp
shl
jae
ds
cli
dec
and
imul
mov
test
repnz
xchg
fcmovu
test
hlt
aas
jecxz
mov
inc
stos
and
dec
add
dec
call
or
call
mov
mov
xor
xchg
jg
inc
jnp
jg
push
fwait
cmps
mov
inc
lahf
inc
inc
mov
xchg
mov
daa
repz
mov
push
int
dec
push
xor
ja
lahf
jg
xchg
inc
mov
in
pop
jp
pop
sti
mov
scas
xchg
pop
lahf
repnz
clc
ss
leave
add
jns
fisub
ds
fwait
ins
dec
out
call
jb
in
sub
mov
jo
jg
xchg
iret
mov
push
jp
jl
pop
and
retf
xchg
fist
inc
pop
mov
jge
cmp
enter
sub
retf
push
test
mov
repnz
cmps
xchg
ja
mov
jp
in
mov
and
adc
test
fwait
int3
push
or
rol
mov
cli
jb
jo
(bad)
sub
in
jns
jge
retf
bound
sub
dec
adc
icebp
jnp
push
lods
cmp
scas
pushf
std
push
cmp
out
leave
js
jne
out
mov
sbb
test
les
jo
and
repz
add
in
cmp
nop
lods
jb
adc
shr
inc
js
repnz
das
(bad)
mov
(bad)
mov
cmc
fadd
scas
inc
push
call
jmp
ins
sar
rcr
jb
adc
push
fucomip
inc
je
mov
jl
inc
in
adc
mov
xor
test
ja
rcl
fs
xchg
pop
fimul
out
lods
not
mov
or
(bad)
mov
test
xchg
es
mov
and
aad
imul
call
pop
pop
ret
mov
jb
mov
std
add
out
(bad)
or
xor
out
xor
into
(bad)
bound
adc
imul
mov
sub
aad
cmc
in
jecxz
mov
and
sbb
call
adc
scas
push
dec
ret
imul
pop
or
call
ror
(bad)
dec
xchg
popa
repz
cwde
push
into
or
mov
and
adc
add
mov
cwde
jno
cwde
jb
cmp
adc
(bad)
mov
sub
push
int3
or
call
sbb
push
pop
test
cmp
xchg
cmp
mul
mov
ret
out
mov
adc
and
pop
jae
adc
adc
(bad)
into
dec
or
mov
cmps
ins
push
movs
mov
loope
out
jns
mov
jns
loop
or
xor
jecxz
test
fld
ret
in
scas
in
mov
push
sahf
jge
cmc
fdivr
pop
pop
lock
(bad)
xabort
movsx
repz
push
movs
push
sbb
dec
fs
push
adc
pop
rcr
ror
inc
sbb
repnz
sti
xchg
pop
push
out
lahf
mov
mov
test
imul
outs
ins
sbb
mov
sub
sbb
in
xor
jnp
rcl
inc
ins
mov
pusha
xchg
mov
xor
sti
shr
sbb
gs
pop
push
retf
aas
cwde
(bad)
out
sub
mov
lea
push
jns
out
adc
adc
push
arpl
mov
out
mov
(bad)
loop
loope
pop
lods
jae
in
push
inc
cmp
mov
aad
cmps
dec
sbb
test
add
pop
pop
jno
mov
add
stc
pop
mov
stos
mov
jnp
adc
test
inc
fs
in
cli
retf
sub
rol
mov
out
cmp
pop
and
push
push
push
and
mov
and
sub
jl
pop
adc
repz
fucom
mov
adc
lock
(bad)
repz
imul
mov
test
leave
fisubr
xchg
xchg
je
cmp
sbb
sbb
adc
jo
cmps
push
das
pop
sub
pop
icebp
or
icebp
adc
sbb
sub
jno
push
sbb
xor
push
popw
inc
xchg
lock
fxch
leave
sub
stos
iret
ja
cwde
mov
jmp
cmp
dec
outs
push
mov
ds
in
or
into
call
test
fbld
and
in
retf
mov
inc
sbb
cmps
loop
outs
xchg
hlt
xchg
sub
inc
movs
call
in
sub
das
test
das
xchg
sub
fisttp
dec
sbb
mov
mov
fcom
arpl
xchg
cmps
leave
push
addr16
retf
jae
push
ins
ret
sbb
scas
icebp
pop
adc
and
or
pop
push
dec
cmp
push
int3
push
pop
mov
std
xchg
fsubp
and
xchg
mov
or
mov
cmp
jl
xchg
imul
(bad)
add
or
popa
mov
into
jbe
jecxz
sub
pop
test
out
fsubr
xor
je
cs
mov
inc
dec
mov
xchg
lahf
sub
push
pop
stos
addr16
cmps
jmp
mov
clc
add
cld
les
out
(bad)
jl
xor
sti
pop
rol
push
mov
xlat
and
jbe
(bad)
out
in
enter
or
or
add
gs
mov
jle
sbb
pop
fisub
pop
out
xchg
adc
ds
or
cmp
clc
cmp
(bad)
outs
fwait
(bad)
cli
ins
jnp
rcr
in
add
push
mov
das
push
daa
fwait
jl
clc
or
add
add
(bad)
fst
loope
xchg
leave
jbe
fiadd
retf
not
jecxz
(bad)
lds
add
and
fild
addr16
jmp
lods
inc
retf
(bad)
sub
ret
push
or
jns
inc
cmps
(bad)
mov
retf
inc
sub
lds
icebp
jecxz
push
scas
adc
popf
adc
fsubr
cmp
fst
jno
xchg
and
outs
loop
mov
imul
movs
and
mov
mov
into
stos
fdiv
mov
push
ins
in
ret
cdq
or
mov
jp
mov
mov
xchg
or
imul
cmps
adc
ret
ret
pop
std
push
in
ds
arpl
repz
outs
sub
add
sti
or
fbld
call
test
mov
push
dec
add
add
adc
cmp
int3
jnp
and
and
dec
dec
sub
push
push
out
lods
nop
cwde
dec
rcr
(bad)
ins
icebp
faddp
hlt
inc
dec
xor
in
daa
sub
loop
push
xlat
leave
arpl
push
popf
mov
rcr
push
mov
std
nop
int
push
movs
dec
inc
inc
arpl
or
and
jnp
sub
aad
shl
jnp
jnp
inc
pop
mov
out
and
rcr
push
and
jecxz
add
mov
retf
pop
(bad)
cli
push
sub
and
cdq
cmp
xchg
in
xchg
repz
or
mov
fcmovnu
addr16
pop
js
stos
lea
outs
cmps
mov
push
stc
xor
fcom
sbb
inc
mov
cmps
icebp
cmc
push
xor
js
mov
addr16
mov
dec
fstp
hlt
test
push
jb
push
bnd
mov
inc
mov
in
xchg
xchg
sbb
mov
jmp
mov
scas
ds
jmp
fld
jg
cmp
movs
gs
out
inc
mov
xchg
cld
sahf
mov
xor
arpl
in
sbb
std
xor
sbb
mov
push
fbstp
xchg
imul
or
xor
xchg
mov
pop
imul
test
imul
cmc
mov
pop
test
inc
push
in
or
sbb
aaa
loopne
lock
js
dec
cld
mov
into
ret
test
pop
sbb
dec
dec
int
add
ret
push
sub
das
(bad)
mov
int
xchg
xchg
xchg
frndint
jbe
mov
push
sub
fsub
cmps
add
jmp
ds
outs
clc
jno
inc
xchg
movs
ss
ins
inc
bound
sub
and
sub
sbb
repz
mov
pop
fcom
mov
dec
int
ficom
push
sti
cld
nop
imul
push
and
pop
cmc
cmp
outs
xchg
xchg
sub
push
cdq
addr16
add
stc
out
jg
stc
out
jg
scas
add
inc
mov
jmp
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
add
push
mov
dec
mov
je
push
jmp
aaa
enter
je
dec
aaa
rcr
loopne
xchg
xchg
out
dec
loope
div
scas
loope
add
sub
inc
and
loopne
fwait
mov
push
popf
and
adc
ss
xor
sbb
gs
ret
cmc
nop
lock
mov
js
cmp
dec
mov
dec
inc
inc
xlat
daa
ins
xchg
sti
stc
leave
push
jmp
or
push
xchg
das
inc
mov
cmp
movs
aas
lahf
fld
ins
jno
xor
dec
sar
stc
in
stc
pop
outs
jne
daa
dec
xchg
inc
sbb
lock
stos
mov
enter
cdq
fiadd
repnz
push
pop
pop
popf
in
rol
test
pusha
iret
and
cdq
inc
cmps
add
es
in
jp
pop
sbb
mov
lods
or
xchg
lea
outs
es
outs
xchg
xlat
addr16
xchg
cld
and
ins
mov
xor
add
call
mov
xor
out
sbb
mov
sahf
mov
mov
push
ins
push
mov
fcom
sahf
push
ins
arpl
or
out
jb
cmp
xchg
push
xchg
cmp
ficomp
mov
xchg
dec
pop
or
test
test
add
pop
jmp
repnz
std
mov
mov
stos
in
cmp
not
cmps
adc
imul
pushf
mov
icebp
adc
mov
add
clc
adc
scas
fldenv
jmp
ficom
pop
cwde
adc
sub
jmp
and
les
and
jnp
cmp
aaa
mov
jmp
ins
fstp
jae
jo
mov
mov
fwait
sbb
pop
mov
fbld
(bad)
imul
xor
adc
fisttp
fwait
hlt
sub
mov
unpckhps
mov
inc
fild
loope
rcr
lahf
out
adc
pop
(bad)
(bad)
cmps
shr
sbb
retf
repnz
adc
js
fisttp
xor
mov
cdq
nop
icebp
jno
mov
jo
jp
test
sub
adc
sub
repz
xchg
jecxz
movs
cmp
xchg
jl
pop
aas
push
test
loop
xchg
xor
outs
comiss
rcl
adc
leave
in
and
sub
cli
test
and
out
mov
in
adc
call
pop
xor
or
in
push
adc
or
outs
sub
push
test
test
sub
add
push
push
mov
dec
mov
sti
not
mov
xor
mov
mov
or
dec
and
call
ss
fcom
jnp
jge
and
xlat
and
xchg
mov
popa
and
inc
push
lods
xor
pop
out
add
xchg
fadd
pop
pusha
imul
lea
sub
inc
sub
mov
mov
dec
pop
clc
inc
pop
cmp
push
pusha
pop
call
das
dec
cli
xchg
ret
popf
pop
jmp
cmps
loope
aas
dec
call
or
or
stc
imul
fwait
pop
add
cli
mov
mov
dec
fcmovb
cld
(bad)
push
xchg
adc
xchg
mov
or
aad
out
(bad)
add
fbstp
pop
xchg
pop
xchg
inc
sbb
int
std
popf
mov
cmovp
xchg
shl
movs
xchg
or
xor
and
pop
test
cdq
shl
je
cmp
add
inc
std
pop
mov
sbb
adc
imul
addr16
jo
push
in
mov
in
daa
push
jl
inc
movs
cmc
add
ret
jo
icebp
fsubr
sub
out
dec
repz
es
inc
jecxz
adc
mov
cmps
cmps
dec
mov
mov
sbb
call
cld
popa
dec
out
push
bound
lahf
sub
pop
repz
cmp
daa
ror
repz
les
fild
or
aas
rcl
movs
pop
lea
rcl
pop
mov
jno
fidiv
icebp
ss
fsqrt
cmp
mov
jg
mov
cmp
jecxz
sbb
dec
(bad)
imul
pop
push
cmp
and
cmps
inc
enter
test
lods
aad
push
mov
xchg
jne
(bad)
ret
aad
dec
cmp
cmp
mov
leave
mov
retf
mov
lds
fwait
rcr
ret
lods
loope
sub
addr16
jg
and
imul
cs
ins
and
ss
jb
jg
jg
ja
fld
pop
jmp
add
fstp
mov
out
lds
sahf
aaa
sbb
nop
mov
mov
aaa
add
adc
fild
adc
rcr
mov
aad
test
(bad)
and
xlat
pop
push
test
(bad)
mov
in
mov
jb
push
popa
or
sbb
mov
mov
xor
in
dec
pushf
test
mov
mov
popa
and
arpl
jns
(bad)
fnstenv
call
cwde
jns
enter
(bad)
sub
xor
jb
jbe
les
(bad)
out
(bad)
sub
ds
xor
aas
retf
pop
pushf
fisub
xchg
into
cld
sub
lods
push
pop
mov
in
mov
out
xor
bound
ror
mov
out
jg
test
cmp
pop
sub
js
or
(bad)
add
xchg
mov
mov
mov
dec
sbb
xchg
out
or
iret
mov
(bad)
mov
dec
stc
lods
xlat
test
push
popf
stos
add
inc
or
imul
std
not
sbb
js
sar
mov
cmp
sbb
inc
mov
vpshaw
mov
xor
scas
jmp
daa
add
hlt
add
push
pop
push
jns
xchg
mov
jae
arpl
sub
out
jecxz
imul
push
inc
iret
push
std
in
or
mov
aaa
xchg
shl
xor
xchg
jno
mov
and
fs
pop
sub
das
inc
xchg
in
or
and
jbe
mov
inc
push
inc
xor
push
cdq
js
sub
xchg
sbb
(bad)
pushf
idiv
ror
aaa
arpl
sbb
sub
mov
cwde
retf
xor
push
add
or
xchg
mov
(bad)
push
jno
fld
fstp
hlt
sub
mov
jecxz
sbb
xor
pop
mov
or
loope
mov
xor
push
fnsave
cwde
cmp
loope
mov
adc
scas
or
mov
nop
fucomip
adc
dec
push
fsubp
inc
pushf
mov
icebp
out
add
cmps
or
rcl
repz
push
sub
xor
xor
jo
mov
sub
test
shr
dec
test
fild
cmps
jbe
xchg
enter
test
mov
add
mov
push
jmp
mov
mov
sbb
sti
test
mov
pop
gs
lea
icebp
mov
pop
call
scas
jle
add
ins
ret
sbb
dec
cmc
jp
push
sub
mov
dec
xchg
ins
rol
je
jmp
sub
mov
mov
cmp
repnz
sbb
hlt
sub
call
cmovbe
outs
sahf
push
adc
cmps
adc
iret
outs
cs
fidiv
mov
inc
idiv
inc
mov
nop
std
xchg
lods
cwde
lods
mov
add
ja
jp
lock
repnz
sbb
jle
jmp
(bad)
mov
mov
jnp
neg
push
dec
sbb
mov
into
xor
push
outs
sub
in
enter
mov
pop
jns
repnz
pop
mov
push
cli
xchg
add
les
xchg
call
mov
or
lea
mov
jg
std
pop
out
aad
mov
addr16
pop
leave
xchg
push
push
adc
idiv
pusha
imul
xor
cmps
stos
jns
xor
into
add
pop
pop
iret
ror
ja
retf
push
push
mov
adc
mov
cmps
mov
scas
(bad)
pop
inc
pop
jecxz
or
loop
sbb
xchg
jge
fbld
mov
mov
out
sub
or
repz
leave
out
xor
fptan
cmps
out
retf
ins
jp
mov
mov
or
mov
sahf
(bad)
jecxz
sbb
stos
sbb
cmp
add
or
stos
dec
in
jnp
pop
dec
lods
jp
xchg
hlt
repz
mov
iret
call
out
jb
mov
not
xor
cmp
(bad)
aas
shl
xchg
xchg
call
jmp
pop
(bad)
xor
xchg
inc
in
repnz
and
cmp
cmp
fstp
mov
mov
mov
aad
das
add
test
xchg
outs
jmp
mov
mov
sbb
fisttp
mov
fcomip
dec
jmp
xor
fbstp
dec
dec
fnstsw
mov
fnstcw
xor
addr16
call
jnp
push
call
adc
iret
lods
stc
mov
loopne
cmovnp
inc
dec
cmp
sub
cmps
les
int3
rcl
mov
cmps
fnsave
pusha
dec
hlt
std
xor
or
lods
pusha
or
jnp
nop
jo
out
out
xor
sub
lock
loope
mov
outs
cmc
ficomp
mov
pop
adc
pushf
sti
jae
int
in
lods
sti
push
stos
out
call
and
mov
adc
loope
ss
mov
dec
neg
cmp
aaa
pushf
aas
sub
retf
lock
and
mov
push
push
lods
pop
ds
das
(bad)
hlt
mov
pushf
lods
add
loop
pop
hlt
mov
lea
cmp
(bad)
push
loope
mov
cmp
mov
jg
fimul
addr16
sbb
scas
dec
pop
mov
sub
jb
nop
pop
sub
jmp
pop
push
cmp
pusha
mov
sar
aam
(bad)
xor
sbb
fisttp
jp
adc
cmps
not
dec
push
mov
jae
cmp
stc
sub
test
mov
push
push
mov
mov
fnsavew
xor
sbb
mov
or
gs
cmp
add
movs
adc
repz
ins
mov
ror
ss
in
cli
push
in
or
xchg
sbb
cwde
inc
dec
test
push
mov
xor
xor
sub
xlat
adc
sub
sub
enter
mov
sub
ret
pop
inc
arpl
push
sub
push
imul
lahf
movs
push
add
fnsave
sub
in
(bad)
mov
icebp
iret
inc
push
fmul
mov
out
call
ja
xchg
jb
push
mov
add
mov
out
inc
pop
(bad)
push
xchg
pusha
mov
cmp
push
xchg
jbe
adc
or
mov
xor
inc
mov
mov
test
xchg
cmps
loop
cmps
ror
pop
stc
(bad)
ss
sub
fsubr
xchg
inc
xor
jbe
stc
add
and
mov
mov
jl
pop
xlat
push
sub
add
push
pop
int
ja
push
and
sub
shr
(bad)
sbb
out
adc
cmp
in
or
out
dec
sub
or
xor
aad
mov
fcom
outs
rcr
(bad)
in
call
adc
cmp
sub
sub
nop
fst
int3
in
mov
sub
jno
jo
jp
ret
fs
push
xor
push
ret
rol
cmp
es
jge
das
xor
int3
jecxz
or
leave
pop
mov
shl
and
jae
and
or
cwde
ins
add
or
movs
(bad)
jmp
frstor
dec
mov
xor
fwait
mov
test
mov
aam
or
out
xchg
mov
and
sbb
or
mov
pop
out
dec
mov
push
pusha
mov
cmps
add
mov
int3
jne
adc
call
push
fsub
adc
dec
sbb
popa
out
les
mov
adc
cmp
jmp
popf
add
movs
or
sub
pushw
lods
sbb
test
repnz
dec
aaa
ds
jns
test
loope
mov
pop
mov
imul
int
mov
or
sbb
fisubr
outs
dec
jmp
sub
stos
mov
nop
(bad)
test
fidivr
jl
repnz
out
mov
adc
std
std
retf
add
cwde
retf
out
push
enter
repz
stc
fsub
adc
and
adc
(bad)
std
mov
inc
and
out
push
out
es
stos
leave
jmp
push
addr16
scas
test
adc
ins
ins
push
test
enter
push
lds
dec
and
movs
retf
jmp
fcomp
out
jl
jmp
xor
mov
in
fistp
push
push
mov
cmp
popf
cld
jle
outs
mov
adc
lods
fist
push
lock
je
sbb
inc
adc
cmp
rol
es
shl
pop
inc
mov
pop
bound
ins
fst
loopne
pusha
cli
out
jbe
inc
jae
addr16
mov
test
push
or
(bad)
jbe
mov
xor
rcr
cmp
(bad)
cli
dec
(bad)
dec
loope
lea
aas
cmp
cmp
jb
jg
iret
jge
repnz
add
scas
das
aam
jg
jmp
mov
pop
(bad)
mov
pop
or
adc
push
retf
test
adc
or
iret
jbe
in
in
inc
clc
js
add
dec
mov
and
jecxz
js
push
outs
sbb
pop
in
icebp
fst
mov
enter
mov
mov
shl
add
mov
out
adc
cmp
ficom
and
and
pusha
push
mov
xchg
push
sub
imul
jmp
cmps
xor
push
mov
pop
ficom
or
dec
dec
scas
mov
aam
mov
adc
out
inc
cmp
fbld
add
data16
dec
lds
ins
ret
inc
inc
aaa
aam
xchg
lods
pusha
lock
jmp
and
loop
cmp
sti
and
adc
in
push
sbb
fimul
push
stos
leave
fld
push
dec
addr16
dec
cs
outs
das
scas
ss
retf
ds
inc
ret
imul
int3
into
jo
lea
add
stc
mov
xlat
xchg
int
or
vpsubb
in
mov
ja
mov
push
lea
xchg
mov
jo
and
lahf
mov
xor
push
jecxz
in
sbb
jae
push
das
and
pop
dec
inc
mov
cdq
imul
(bad)
int3
and
jge
cwde
push
xchg
aaa
and
jb
or
sar
loop
and
xor
mov
xor
xchg
push
into
stc
and
xchg
add
push
dec
(bad)
rcl
aas
clc
leave
mov
push
test
inc
xor
dec
fsubr
cmp
mov
in
outs
int
out
inc
cmp
retf
and
btc
mov
popa
jp
jbe
jne
or
rcr
sbb
xor
inc
jmp
xchg
int3
jmp
rcl
lea
xchg
je
fidiv
cmp
mov
fadd
cld
cmp
movs
push
aam
add
push
add
mov
inc
mov
loope
xlat
stos
xchg
loope
dec
and
les
add
mov
shr
clc
out
jg
stc
out
jg
stc
jg
add
(bad)
mov
adc
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cwde
cmp
in
scas
mov
out
imul
jmp
jmp
jmp
out
add
ins
jmp
push
push
pop
push
mov
sar
(bad)
cmp
daa
push
stc
mov
or
call
and
jle
sub
or
cmc
ror
xchg
pusha
ret
adc
popf
sbb
pop
sbb
loopne
jae
jmp
(bad)
or
add
pop
cmp
and
inc
add
cdq
retf
jnp
cmp
rcr
pop
int
lea
push
retf
and
call
xor
std
fldcw
sub
pop
loopne
dec
dec
mov
jnp
int
cmp
dec
cmp
cmp
add
xor
enter
fld
mov
lock
xor
adc
imul
pop
sahf
imul
ins
cmp
movs
popf
inc
retf
and
aam
pop
nop
push
jle
pop
stc
mov
xchg
mov
es
aaa
push
sub
sub
mov
push
inc
inc
xlat
mov
stos
pop
shl
fsub
xor
(bad)
mov
mov
mov
js
retf
sub
inc
out
out
neg
sbb
cs
hlt
push
je
adc
out
stc
jb
lock
ret
sub
nop
cmp
jmp
and
sbb
or
outs
cwde
stos
icebp
ds
repz
adc
add
xchg
jp
and
ror
jbe
or
sbb
mov
mov
dec
pop
push
sbb
xchg
in
lods
in
(bad)
cmp
popf
inc
mov
jp
xor
repz
in
mov
fldcw
repz
xor
hlt
mov
push
mov
nop
sub
add
loop
sub
std
sbb
push
div
inc
call
out
sub
dec
push
dec
rcr
call
lahf
pop
ins
xchg
adc
and
adc
add
sahf
mov
mov
pop
es
pop
inc
xchg
sahf
mov
sbb
outs
xchg
lods
mov
das
daa
mov
mov
push
pop
cli
in
xchg
sbb
shl
adc
cmp
leave
sbb
cwde
fst
mov
icebp
xor
jmp
mov
and
pop
call
fmulp
add
adc
jge
jmp
js
push
popa
(bad)
mov
stc
push
pop
mov
mov
ret
adc
std
cdq
lahf
dec
dec
push
sub
xor
xor
adc
test
push
cdq
sahf
xor
out
cmc
push
or
sar
jae
popa
sub
jnp
and
fisttp
push
ds
test
sub
ins
mov
movs
sbb
loope
in
test
xchg
je
add
and
xchg
jle
scas
add
sub
jle
fmul
cmp
dec
fwait
into
mov
sar
lods
scas
xor
xor
mov
pop
dec
mov
cmp
lods
xchg
mov
mov
mov
mov
cmp
ja
sub
pop
add
mov
ror
test
repnz
pop
xor
add
mov
jmp
prefetch
shl
aad
int3
nop
stos
aas
sbb
xor
jo
call
clc
dec
jecxz
mov
sbb
or
jmp
arpl
sbb
aam
bswap
xchg
pop
xlat
mov
pop
gs
neg
inc
add
push
xor
jo
(bad)
repz
mov
jmp
ss
scas
sbb
push
stos
in
pop
cmc
es
pop
neg
repz
std
pop
push
dec
dec
jno
fidivr
or
jecxz
push
xor
(bad)
repnz
dec
push
aaa
push
sub
pushf
retf
call
mov
and
dec
mov
(bad)
mov
adc
mov
and
jl
sbb
inc
inc
and
ds
xchg
inc
cmp
sub
scas
adc
jg
or
loope
mov
mov
cmp
stc
dec
imul
retf
push
je
push
cdq
pop
outs
add
ret
lods
add
pusha
xchg
mov
outs
sar
pop
loope
dec
push
mov
fdiv
dec
xor
test
mov
push
mov
mov
xchg
push
pop
lods
aaa
mov
je
sub
sub
fsubr
out
test
inc
nop
enter
jne
fcmovnb
mov
(bad)
sti
jecxz
push
inc
test
jns
movs
inc
fsub
loopne
mov
jge
and
jmp
inc
cli
out
sahf
push
inc
cmp
mov
push
sbb
pop
xor
add
lods
js
int3
inc
mov
sub
push
repz
mov
pop
loope
push
sub
mov
es
adc
pusha
mov
lods
enter
cmp
inc
cmp
cmp
inc
xor
cld
mov
cmp
cmc
ficomp
jmp
pop
js
jb
or
or
add
jo
or
loope
and
or
(bad)
fs
cwde
rcr
aaa
out
(bad)
adc
fistp
ja
adc
test
xchg
pushf
hlt
push
daa
jns
inc
jmp
daa
jg
test
jnp
push
lods
fidiv
xor
stos
adc
pop
lahf
int
ds
xchg
xchg
scas
outs
in
cmps
inc
aaa
xchg
add
dec
xchg
inc
fadd
push
and
cmp
stc
inc
push
push
push
shl
push
inc
call
aad
shl
repnz
mov
cmp
scas
and
inc
stos
jp
mov
sub
std
xor
ins
push
scas
mov
cmp
jnp
or
ins
jbe
xchg
mov
pop
call
fsubr
mov
dec
(bad)
xor
aam
lods
imul
int
mov
cmps
jnp
mov
mov
rcl
psubusw
int
sbb
pop
sub
pop
mov
sub
retf
sub
fcomp
inc
out
js
in
mov
pop
xchg
les
test
jecxz
jb
cmp
mov
or
pushf
lods
mov
cwde
jb
retf
inc
jecxz
xor
nop
cmc
into
xlat
lea
scas
cmp
mov
loopne
jae
test
or
outs
lods
mov
jmp
not
in
adc
xchg
std
jg
mov
les
in
xchg
dec
dec
push
out
mov
addr16
rcr
hlt
aas
rcl
push
mov
out
stc
cli
inc
dec
sbb
cmp
xor
std
push
push
rcr
sub
pop
test
xchg
in
jmp
xchg
ins
xchg
movs
gs
int
jmp
cmp
pop
jl
push
gs
xchg
push
dec
xchg
ja
mov
sbb
cmp
xchg
push
das
dec
div
pop
jbe
pop
inc
(bad)
cmps
dec
cmp
fldenv
sbb
rcr
xor
sub
aas
pop
ret
iret
lahf
into
stos
jb
lock
inc
mov
mov
dec
jae
daa
xchg
add
push
scas
sbb
mov
fucomp
push
stc
jo
dec
scas
xor
(bad)
fdivr
test
int
push
ret
loop
dec
icebp
sbb
xchg
retf
inc
shl
jbe
or
ins
stos
(bad)
xor
mov
out
adc
or
in
iret
cwde
lods
call
fidiv
clc
cmp
aad
popf
movs
das
js
movs
in
outs
scas
dec
out
stos
xor
in
rcr
je
pop
arpl
addr16
mov
int
pop
(bad)
cmps
xchg
dec
cwde
sub
push
mov
cli
cmp
xor
xlat
add
stos
xchg
test
dec
ret
push
(bad)
es
sub
retf
sub
fisttp
mov
mov
ret
movs
dec
push
int
push
and
xchg
(bad)
push
out
mov
mov
ret
(bad)
or
mov
dec
and
push
dec
mov
call
nop
sub
lods
or
cwde
repz
or
cwde
mov
and
and
arpl
fistp
xchg
cmp
mov
fnstcw
mov
shr
sahf
jmp
lds
push
je
stos
xchg
mov
test
xchg
neg
rcr
jmp
mov
fdivr
pop
jne
push
jl
mul
addr16
jl
push
aaa
call
add
or
call
cmc
push
add
call
xchg
out
sbb
push
mov
mov
mov
ins
push
add
mov
mov
jmp
es
adc
adc
ficomp
mov
and
sub
dec
push
jb
jbe
fistp
cmps
les
jp
cmp
or
std
or
jns
cmp
call
lods
outs
mov
arpl
call
ds
aad
mov
mov
jl
add
call
lods
jle
add
in
mov
leave
xchg
ret
sbb
int3
ins
mov
bound
pusha
(bad)
and
fiadd
pmuludq
std
or
xchg
repnz
sahf
out
js
arpl
hlt
xchg
dec
out
jle
cdq
hlt
mov
int3
mov
imul
mov
push
cld
imul
movs
pop
xchg
sbb
xor
xor
add
mov
ss
sbb
dec
loop
cmp
or
push
or
cli
in
inc
test
cmps
ret
xor
pop
leave
lds
ins
data16
test
in
cmc
pop
jmp
int3
push
xchg
cmp
push
or
rcl
mov
xchg
arpl
jae
cli
inc
push
adc
cmp
js
(bad)
std
call
push
dec
jno
cdq
ds
fcomp
mov
cs
jle
adc
jmp
sub
outs
not
dec
stc
mov
call
retf
sub
hlt
mov
mov
cld
push
pop
cmp
lea
loope
inc
push
jne
int
ins
add
pop
and
add
and
rcr
ja
mov
sbb
push
xchg
ret
rcr
mov
je
stc
push
cmp
int3
mov
or
sub
mov
pop
ins
rcr
loop
in
test
jne
ror
mov
sbb
cmp
mov
xlat
std
inc
into
(bad)
in
cmp
push
ins
sbb
daa
and
out
sahf
pop
outs
cmps
outs
dec
das
aas
add
sbb
xor
jl
add
scas
enter
aad
in
rol
push
aam
mov
fmul
into
cmp
push
or
cmps
jge
jne
xor
repz
test
xchg
jae
idiv
add
mov
adc
jmp
pop
bound
xchg
adc
aaa
fwait
out
jnp
je
xchg
pop
lahf
push
cmp
arpl
int
adc
aad
test
sub
push
inc
scas
sub
lds
xchg
dec
push
or
jne
mov
push
rol
pop
scas
inc
mov
cmp
imul
mov
jg
pop
sbb
cmp
jecxz
ss
push
call
or
inc
mov
rol
repnz
out
xlat
sbb
inc
test
and
xchg
je
ja
mov
mov
and
sbb
in
enter
mov
retf
lahf
(bad)
cli
lds
out
movs
cmps
hlt
ret
pop
jge
jecxz
mov
mov
inc
popf
xchg
jns
call
ja
mov
jecxz
or
xchg
retf
adc
jmp
in
xchg
mov
push
push
arpl
movs
jl
xor
mov
cdq
xchg
jne
jnp
(bad)
shl
aad
fnsave
mov
ins
dec
(bad)
jne
mov
(bad)
loop
mov
mov
pop
mov
mov
mov
call
ins
and
jne
and
cmc
xor
xor
cdq
adc
imul
sar
mov
push
push
and
(bad)
test
test
call
hlt
push
and
sahf
cld
iret
ins
mov
rol
push
sbb
pcmpgtb
sahf
adc
xchg
pop
adc
lds
int
fidivr
daa
sahf
test
mov
out
mov
sbb
inc
push
xchg
pop
cmp
jae
mov
mov
cmp
mov
inc
inc
fisttp
mov
sbb
pop
scas
mov
and
sti
retf
ins
mov
adc
mov
and
or
pop
in
xchg
das
adc
jle
mov
ins
mov
scas
jmp
ins
clc
cmp
loope
and
sub
pop
aam
inc
mov
clc
sbb
lds
les
ror
add
jl
push
or
jno
mov
shr
and
lods
pusha
mov
call
jp
cld
shl
inc
pop
sahf
pop
add
imul
mov
or
test
inc
rcl
out
in
jle
push
(bad)
sar
mov
int3
daa
mov
test
stc
xor
sbb
mov
in
repnz
inc
mov
cmovb
jl
cmps
add
xchg
cmp
inc
jmp
push
outs
xchg
(bad)
in
fimul
add
cmc
and
leave
and
gs
cwde
jge
jecxz
dec
push
pop
in
cmp
shl
ret
push
js
push
dec
sbb
push
or
add
(bad)
stc
outs
mov
nop
pop
mov
cmp
and
stc
ins
mov
or
mov
mov
xchg
pushf
fsub
mov
pop
cmc
cmp
arpl
cmp
push
add
retf
xor
mov
or
jno
cmps
arpl
into
cmp
aam
out
int
push
(bad)
ins
pop
ret
movs
cmps
jno
inc
dec
inc
xor
inc
fsubr
cmp
xor
ror
jae
jne
fldcw
adc
adc
shl
and
jmp
pop
loop
addr16
or
push
mov
mov
shl
imul
adc
into
dec
cmp
out
pop
in
test
cli
hlt
aam
gs
test
fisubr
fwait
dec
pusha
xor
call
sar
icebp
loopne
(bad)
loop
aas
xor
inc
(bad)
inc
std
retf
and
sar
mov
xrelease
and
mov
or
ins
test
mov
jae
loop
lock
test
ret
jo
ds
test
inc
movs
dec
adc
in
inc
adc
push
rol
cmp
loop
jle
daa
jp
xchg
sbb
cmp
stos
mov
test
jbe
inc
sub
arpl
sub
cmp
cmp
js
icebp
cmps
pop
cli
or
dec
xor
test
mov
mov
ds
(bad)
fnstcw
xlat
nop
cmp
jmp
stc
dec
into
and
in
sbb
call
xchg
mov
mov
inc
mov
pop
das
fidiv
mov
xchg
into
ss
or
cmc
mov
push
(bad)
fist
add
ret
jge
imul
adc
dec
lds
pusha
sub
xlat
pop
jl
jne
jmp
iret
clc
mov
movs
nop
loope
sahf
shr
stc
add
jno
call
cmp
cld
mov
mov
adc
adc
in
jb
cmps
xchg
test
addr16
push
bound
xchg
leave
das
jmp
jl
sub
jge
push
push
mov
popa
pop
xchg
xlat
clc
xchg
inc
cmp
mov
fs
ins
sub
sub
retf
push
dec
jle
xchg
dec
pop
push
push
push
(bad)
int3
repz
in
in
push
fdivr
loope
pop
sbb
adc
(bad)
jp
lds
loop
dec
div
shl
aad
sar
(bad)
sbb
fldenv
imul
adc
pop
(bad)
loope
(bad)
out
or
sar
inc
xchg
sub
xchg
mov
mov
cmp
in
pop
jne
mov
jp
int3
sahf
imul
jecxz
jbe
jg
jbe
cdq
loop
cdq
cmp
push
add
stc
out
jg
stc
out
jg
scas
add
inc
pop
adc
xchg
ror
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fstp
int
outs
xchg
xor
(bad)
leave
shl
dec
mov
fstp
cmp
daa
outs
dec
in
cwde
fnsave
repz
in
push
pop
sbb
mov
stc
aam
je
popa
xchg
out
sub
sbb
push
les
mov
iret
(bad)
in
pop
(bad)
fwait
and
fdivr
(bad)
xchg
loope
ror
mov
out
lock
(bad)
ret
push
pop
and
xchg
jmp
mov
jo
mov
sub
xchg
daa
or
pop
xchg
mov
inc
out
sub
sti
dec
ds
test
int
int3
ins
in
das
movs
sti
xchg
lea
retf
in
jns
and
inc
xor
ins
(bad)
pop
pop
xor
inc
pop
into
fwait
lds
ds
inc
add
movs
dec
lea
(bad)
push
movs
jne
push
fwait
daa
jbe
and
leave
push
dec
fucomi
pushf
in
ins
and
push
(bad)
stos
cmc
mov
xchg
jle
cdq
repz
hlt
pusha
test
in
neg
dec
loope
dec
mov
popa
adc
adc
add
rol
mov
xor
fiadd
outs
dec
inc
sbb
loop
mov
jmp
mov
cmp
mov
imul
mov
sbb
mov
stc
jle
jmp
lea
cmp
or
fdiv
inc
scas
popa
sbb
xor
or
in
stos
adc
out
test
pushf
pop
cli
dec
dec
stc
bound
arpl
fimul
mov
and
cs
mov
push
adc
xchg
dec
out
bound
in
scas
loop
jne
mov
and
outs
and
push
ins
in
jmp
repz
fadd
aad
inc
mov
jns
jno
sets
mov
in
cdq
jns
js
inc
inc
dec
cmp
(bad)
stos
iret
rcl
add
jge
shr
or
shl
mov
pop
jl
mov
mov
aaa
adc
inc
aad
shl
(bad)
push
and
ret
stc
cli
lods
rol
jecxz
rcl
or
(bad)
ret
leave
mov
mov
pushf
cli
sbb
pop
sar
(bad)
cmp
fnstcw
ret
pop
cli
jmp
jg
(bad)
jmp
retf
ffreep
jae
push
jno
int
mov
xchg
jmp
in
cmps
or
std
into
outs
enter
div
inc
test
xor
dec
xchg
dec
add
addr16
mov
ret
push
inc
in
mov
push
mov
icebp
ror
add
mov
inc
js
(bad)
mov
pop
adc
or
lea
add
sti
jne
gs
or
jle
fdivr
je
add
ins
push
mov
in
pop
repz
addr16
fwait
jl
call
pop
pop
mov
je
pop
fmul
dec
push
int
pop
outs
into
dec
loopne
push
mov
pmulhw
mov
out
call
repz
mov
dec
mov
jp
retf
aam
lahf
cmp
cmps
repz
dec
(bad)
push
mov
(bad)
mov
aaa
arpl
and
mov
dec
ficomp
and
imul
xor
inc
rcl
add
push
xchg
add
dec
xor
clc
test
xchg
xor
mov
or
jg
mov
mov
out
into
js
inc
(bad)
or
test
xchg
(bad)
(bad)
and
push
call
pop
dec
sbb
push
pusha
mul
xor
popf
(bad)
cmp
test
jne
arpl
imul
dec
addr16
lea
sub
daa
out
or
sub
jae
test
mov
cmp
dec
xor
jecxz
dec
fcomi
push
outs
mov
xchg
mov
cdq
std
imul
rcr
jbe
ror
loope
mov
add
mov
xor
or
mov
lock
div
lods
ror
imul
cld
mov
sbb
stos
inc
into
pop
test
stc
jecxz
push
cli
pop
adc
into
or
clc
imul
mov
mov
cmp
dec
fwait
in
sahf
stos
ds
cmp
out
imul
mov
mov
loope
loope
lods
movs
push
dec
outs
icebp
test
dec
sub
lock
aaa
lods
inc
jbe
xor
in
fcmovnbe
pop
sub
and
(bad)
call
retf
mov
sbb
retf
or
cmp
push
data16
push
mov
xchg
add
add
mov
pop
sub
not
rol
std
inc
jl
in
movs
xchg
(bad)
in
sub
sbb
sbb
arpl
jno
shr
inc
js
mov
pop
cmps
fsub
push
lea
dec
mov
mov
ins
xlat
out
fcmovnbe
cwde
daa
sbb
js
out
xor
sar
xor
sti
xchg
xor
xor
outs
cmps
push
mov
adc
sub
ins
lods
je
ret
movs
pop
loope
aaa
jnp
aas
sub
movs
xor
retf
inc
ror
mov
ret
(bad)
sahf
pop
xor
sbb
add
int
ret
ja
mov
(bad)
pop
popf
lods
(bad)
mov
out
dec
sbb
or
shr
xchg
mov
inc
jbe
shl
mov
adc
out
icebp
imul
ret
sbb
(bad)
hlt
aam
push
jle
cmc
jmp
shl
hlt
add
pop
ror
je
scas
push
arpl
mov
dec
(bad)
je
jb
(bad)
jno
inc
sbb
jecxz
jne
cmp
jo
mov
sbb
sub
cmps
loop
push
xchg
pop
fld
jge
xlat
out
mov
shl
cld
mov
pop
fwait
xchg
xchg
cmp
pop
in
and
mov
sahf
ins
or
inc
push
mov
mov
mov
mov
jns
xchg
xchg
pusha
sti
push
outs
dec
add
cdq
sahf
je
and
jne
push
or
add
(bad)
fldenv
(bad)
mov
add
fnsave
mov
inc
and
mov
aam
and
(bad)
data16
iret
inc
clc
movs
adc
out
js
js
jge
adc
xchg
loope
dec
sub
mov
leave
mov
neg
shl
sahf
mov
adc
cdq
xchg
xchg
loop
imul
fbld
lods
add
xchg
pop
lods
mov
pop
pop
mov
cmp
ins
pop
dec
pop
outs
xchg
shl
(bad)
cld
sub
arpl
dec
mov
jne
dec
push
adc
sbb
aam
leave
out
fs
or
fld
outs
stos
jmp
fild
pushf
or
lds
push
js
or
or
loop
sbb
xchg
lahf
adc
mov
shr
fisub
outs
neg
jo
inc
dec
lock
clc
sub
or
pop
hlt
add
xchg
ror
addr16
mov
out
out
mov
ficom
lods
iret
sar
xchg
pop
out
dec
and
jmp
sbb
inc
retf
js
test
popf
fbld
add
popf
inc
mov
sti
dec
pop
xchg
fsub
aas
sti
add
fs
pop
inc
leave
movs
xlat
dec
mov
push
ja
sub
adc
jo
mov
mov
jmp
xor
scas
(bad)
push
ret
sub
ss
pop
(bad)
std
cmp
movs
sahf
(bad)
push
imul
lock
jmp
xor
mov
ret
sar
bound
jb
rcl
sub
add
inc
ret
and
ins
jns
pop
xchg
xor
xor
dec
lock
movs
add
mov
xchg
fucomi
inc
cmp
dec
xchg
sti
xchg
(bad)
into
cmc
fild
push
xchg
mov
ficomp
mov
pop
cmp
mov
retf
aaa
cmps
(bad)
gs
test
mov
inc
push
cmp
sub
dec
repz
add
ret
push
sbb
adc
fcom
jnp
pop
pop
leave
add
jecxz
pop
loopne
xchg
das
push
or
push
fsub
push
inc
ins
push
fadd
outs
cvtps2pd
inc
out
shr
aaa
outs
out
daa
jl
sbb
imul
ja
push
xchg
ror
jo
in
in
hlt
mov
sub
sub
dec
dec
out
popa
pop
ror
arpl
pop
sub
jge
xor
and
and
fisub
je
cli
cmp
movs
dec
test
fstp
ins
ret
push
daa
ja
inc
adc
popf
fstp
xchg
sti
repnz
iret
xchg
pop
cwde
pop
dec
mov
add
add
add
call
mov
sbb
sub
adc
lahf
mul
dec
call
das
and
cwde
enter
sbb
popf
xchg
jo
mov
lds
leave
fistp
ins
ja
xchg
mov
mov
popf
pusha
fadd
aas
dec
inc
call
aaa
pop
inc
pop
aaa
push
in
pushf
ret
inc
fisubr
popa
mov
mov
or
into
gs
pop
les
sti
and
jmp
scas
shr
mov
push
(bad)
int3
iret
cs
mov
hlt
xchg
les
stos
push
adc
arpl
xchg
mov
sub
lahf
xchg
sbb
fmul
xchg
or
or
movs
mov
movs
sub
mov
icebp
or
or
mov
in
inc
lahf
div
pop
inc
fbstp
and
or
dec
add
pop
fistp
fs
sub
movs
stos
sbb
adc
test
dec
add
jnp
cmps
pop
mov
popf
adc
in
movs
push
dec
push
jae
pop
or
xor
mov
fs
sub
sbb
shl
loope
jmp
es
fcom
push
sbb
add
mov
adc
xor
dec
dec
cmps
test
rcr
dec
cmps
mov
shl
mov
ja
cli
jb
dec
into
xor
push
in
xchg
rcr
adc
out
pop
into
fmul
out
test
sub
inc
add
(bad)
mov
jnp
pop
xchg
aaa
xchg
imul
jmp
mov
in
clc
inc
jb
ficomp
pushf
jne
nop
xchg
shr
sub
adc
jbe
movs
pop
jnp
outs
js
jmp
imul
repz
pop
jno
cmp
cmps
psrlw
add
data16
jg
repnz
and
pop
in
xor
mov
xlat
aaa
or
jb
imul
push
jo
and
adc
fild
push
adc
cmp
adc
dec
inc
jns
and
sbb
(bad)
pop
or
fst
push
sub
jmp
jg
ret
push
inc
cmps
out
retf
xor
pop
sbb
jnp
xchg
mov
mov
sub
xchg
loope
adc
je
leave
jge
pop
xor
sub
fild
in
fst
push
mov
inc
push
pusha
jb
in
xor
sar
pusha
(bad)
adc
xor
sub
daa
push
in
mov
das
sbb
jge
int
cmps
pop
fwait
xchg
cmps
xchg
(bad)
mov
xor
outs
(bad)
stc
retf
sub
rol
pushf
inc
clc
mov
or
mov
fwait
and
xor
mov
adc
push
adc
pop
and
inc
(bad)
cmp
int
mov
outs
dec
mov
fcmovnbe
add
pop
aaa
fistp
seto
push
fistp
hlt
pop
lds
rcl
xor
inc
adc
pop
pusha
mov
inc
jo
(bad)
(bad)
adc
jge
mov
ins
jle
inc
cmp
sbb
lods
jecxz
jns
rcl
inc
pshufw
dec
jae
xlat
push
movs
loope
xchg
inc
outs
into
dec
je
cmps
mov
mov
cmp
pop
aam
stc
pop
imul
icebp
retf
dec
fiadd
mov
repnz
sbb
push
mov
es
lods
mov
leave
loope
sub
jmp
xchg
int
or
ret
shl
dec
fbstp
sti
cmp
fisub
loope
push
movs
div
mov
and
loop
push
mov
fcom
push
outs
(bad)
test
push
push
inc
dec
lock
jnp
mov
mov
fucomp
mov
mov
hlt
shl
cmp
sahf
mov
jle
data16
loope
and
pushf
popa
add
cmps
xor
mov
in
inc
mov
lahf
adc
xor
aad
xor
out
add
mov
mov
xchg
xchg
aas
frstor
cdq
cmp
adc
or
mov
adc
adc
pop
enter
adc
mov
repnz
push
mov
cs
push
xor
jne
push
push
mov
fild
retf
push
sub
jecxz
rcl
jno
adc
pop
cli
fisub
sub
addr16
push
mov
or
adc
icebp
sbb
cmps
call
loope
or
add
or
repz
adc
test
test
in
or
push
fild
push
cwde
aas
sti
icebp
ret
mov
in
enter
jmp
out
xchg
enter
dec
icebp
imul
cmp
das
add
push
xchg
(bad)
ds
call
out
imul
push
xchg
fistp
ds
loop
inc
xor
cmp
pushf
push
adc
push
aad
jge
out
or
or
mov
mov
push
inc
xlat
pop
pop
sub
xchg
sbb
aaa
mov
push
fwait
outs
dec
fst
add
out
sbb
sub
fmulp
pusha
fldcw
cmp
cmps
mov
(bad)
inc
div
mov
and
hlt
mov
retf
and
aas
inc
cmp
mov
or
sbb
and
aas
adc
retf
ja
(bad)
inc
lfs
xchg
aam
or
rcl
xor
fstp
fwait
cmps
push
aam
jl
xchg
movq
mov
ja
push
or
in
test
in
aad
pop
fnstsw
inc
push
sbb
daa
sbb
jmp
or
pop
ret
pusha
scas
or
and
inc
pop
es
jns
mov
xchg
sahf
and
outs
inc
sbb
inc
dec
enter
or
ror
jo
nop
mov
push
out
xchg
scas
in
imul
out
outs
mov
adc
adc
mov
cwde
sub
out
retf
jmp
(bad)
jae
lock
jge
mov
lods
enter
ins
pop
addr16
push
aas
popa
inc
retf
movs
xlat
aaa
dec
out
fidiv
into
out
jle
pusha
mov
(bad)
cdq
cmps
push
dec
ret
ret
and
shl
adc
cmp
inc
push
aad
loopne
dec
in
mov
mov
and
loop
dec
pop
mov
or
and
xchg
ret
(bad)
pop
(bad)
(bad)
(bad)
pop
rcr
dec
mov
data16
mov
test
(bad)
in
pushf
fwait
cdq
pop
cmp
dec
mov
jle
xchg
out
jne
frstor
movs
ds
push
add
dec
in
dec
xchg
lea
cmp
test
test
mov
xor
cmp
jae
iret
adc
das
jg
int
shl
ds
add
fidivr
push
push
sbb
test
mov
in
mov
mov
pop
dec
add
fmul
fcomp
pop
in
adc
sbb
inc
stos
jmp
and
in
(bad)
enter
mov
add
imul
rcr
inc
add
popf
pop
xor
gs
icebp
sbb
sub
(bad)
call
jg
push
or
psrlw
jbe
mov
js
aam
dec
pop
mov
and
xchg
cmp
adc
aad
mov
test
and
dec
pop
fisttp
addr16
std
retf
call
or
mov
aam
movs
mov
add
cmp
aad
adc
fidiv
(bad)
dec
adc
pop
jp
fsubr
cmp
lahf
(bad)
cld
out
(bad)
stc
mov
cwde
inc
and
aam
fbld
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
rol
loopne
(bad)
aam
dec
ja
dec
ja
sbb
dec
int3
je
leave
jmp
out
cmp
jbe
sti
js
enter
add
pop
cmc
shl
jns
int
pop
push
sub
icebp
sar
outs
jo
stos
xchg
jge
sub
in
push
clc
mov
sbb
cmp
jmp
and
movs
(bad)
stc
pop
mov
jge
push
cmp
mov
in
mov
movs
in
mov
icebp
repz
jle
sub
cmps
xchg
xor
lods
retf
cwde
outs
adc
sub
dec
xchg
mov
push
add
push
dec
pshufw
fld
xchg
aam
dec
out
xor
out
fisttp
and
sbb
inc
mov
dec
xchg
xchg
jle
inc
inc
pop
call
jo
aam
sub
xchg
rcl
jae
daa
(bad)
outs
pop
xor
sub
jo
xrelease
add
scas
jl
cld
fistp
add
ret
cdq
cmp
jg
push
pusha
fild
loop
rcr
jge
lods
mov
std
push
fnsave
pop
push
inc
dec
in
movs
mov
push
out
xchg
daa
sbb
popf
xor
test
hlt
test
sbb
xor
push
add
add
popa
sbb
mov
(bad)
cld
fstp
in
pop
aad
xchg
out
sub
out
movs
pusha
inc
adc
rcl
or
xlat
rcr
adc
mov
stos
test
fld
inc
xchg
bound
shl
push
or
pop
push
retf
nop
and
mov
jb
out
fs
jg
call
push
inc
sub
out
std
aaa
cli
cmps
add
adc
fadd
sbb
stos
or
and
cmp
jl
mov
sbb
xchg
ss
es
in
sbb
arpl
(bad)
fwait
push
cdq
and
test
mov
sub
jge
cmp
mov
pop
ins
sub
inc
add
cli
add
jle
jmp
add
jmp
sbb
inc
sub
jmp
adc
jnp
cmp
mov
(bad)
jo
test
test
inc
cmp
jecxz
or
sbb
push
push
inc
cmp
aaa
sbb
in
and
mov
dec
lahf
push
(bad)
lods
sub
push
mov
cmc
popf
fidiv
cwde
jnp
push
std
dec
push
inc
adc
push
jl
xchg
ficomp
xchg
inc
inc
jge
mov
jge
jns
sti
jbe
pop
mov
fidivr
jg
dec
xor
add
mov
inc
call
out
pop
arpl
shl
pop
leave
sar
inc
leave
outs
out
cmp
jl
mov
movs
sub
sbb
push
mov
sbb
push
push
ror
test
pop
repz
dec
jecxz
inc
mov
pop
addr16
aaa
inc
and
and
imul
out
ins
ss
aad
fdiv
jnp
mov
es
xor
or
icebp
mov
jl
xor
rol
adc
pop
bound
test
out
add
or
pop
ins
mov
pusha
jae
in
outs
lods
mov
test
xor
std
movs
test
push
jb
mov
aad
xor
adc
inc
or
data16
push
mov
and
and
inc
std
sar
dec
or
mov
pusha
jg
and
cmp
stc
jl
cmp
(bad)
fild
out
jno
fwait
loop
sbb
inc
mov
addr16
je
inc
int3
add
cld
test
mov
inc
imul
dec
sbb
and
ins
addr16
cmps
add
dec
arpl
dec
cmc
jmp
jg
jp
pop
(bad)
rcl
lahf
inc
out
adc
jnp
imul
or
jmp
cmp
mov
xchg
mov
jbe
or
test
xchg
xor
imul
test
inc
push
and
cli
xchg
or
iret
lahf
loop
mov
xchg
add
retf
dec
jg
pop
add
mov
shl
cmps
rcl
in
cmc
dec
mov
jne
sub
test
jl
push
scas
push
outs
sbb
dec
mov
xchg
inc
mov
jg
test
fidiv
daa
nop
and
adc
aam
in
fdiv
nop
call
mov
adc
push
scas
jb
mov
xor
xor
push
add
cld
repz
int
loop
jmp
mov
sbb
lahf
outs
push
imul
test
xchg
jo
and
xor
xor
pushf
xchg
enter
cmp
jne
push
aam
(bad)
jns
ror
add
(bad)
cmp
cmp
cmp
or
retf
sub
xchg
cmp
xchg
imul
xchg
xor
rol
cmps
int3
xor
inc
xor
cmp
mov
push
mov
jae
pop
add
int3
hlt
aam
xchg
not
clc
fst
ins
pop
sbb
inc
pop
xchg
push
sub
in
push
cmps
gs
inc
adc
cmps
jae
test
outs
int3
mov
in
jge
push
sub
or
mov
cli
int3
inc
int
popf
ret
mov
fadd
push
mov
inc
inc
mov
ss
movs
scas
mov
out
out
sbb
and
nop
or
push
pop
xor
mov
xor
dec
lock
or
fadd
daa
add
push
xchg
jge
push
jmp
add
push
mov
cmp
xchg
xor
test
cdq
in
mov
ror
cmp
mov
xor
adc
sbb
loope
mov
and
mov
cld
mov
jp
adc
in
daa
loopne
cld
adc
cmp
push
xor
inc
aas
adc
retf
mov
mov
ja
push
mov
add
fucomip
retf
fimul
pop
xchg
and
jmp
xor
fsubr
stos
inc
dec
jp
lods
jnp
jp
jmp
dec
repz
jl
push
mov
cmp
fdiv
scas
int
leave
das
push
popa
std
cwde
cmp
mov
pop
outs
inc
out
xor
jns
jmp
mov
inc
and
out
out
dec
ret
test
inc
xlat
cmp
loop
ficom
inc
pop
push
mov
repz
add
dec
push
cmp
or
push
ss
inc
ficom
mov
mov
cld
(bad)
adc
mov
xor
xor
aad
jecxz
ss
and
inc
lods
sbb
jecxz
dec
leave
jo
lea
jnp
jmp
outs
lods
cmc
push
retf
push
jnp
fprem1
push
pop
pop
mov
(bad)
loopne
aam
jae
ret
test
jbe
addr16
sbb
push
mov
jo
ja
cli
leave
mov
and
lds
sbb
mov
shl
inc
in
enter
dec
xchg
in
jg
imul
adc
sbb
push
(bad)
(bad)
fsubr
cmps
jnp
xor
(bad)
adc
cmp
lods
cmp
dec
stc
imul
fisttp
jge
outs
out
mov
popf
add
pushf
mov
outs
retf
mov
inc
jno
inc
sti
iret
inc
in
sub
in
aad
leave
mov
sub
mov
shl
xor
call
or
stc
loopne
mov
fwait
and
xlat
call
mov
inc
popf
fisub
push
fstp
mov
cmps
xor
jmp
adc
or
add
(bad)
outs
push
pop
aas
ret
xor
xchg
ins
ret
pop
or
sub
scas
out
inc
ja
arpl
adc
out
add
aas
xchg
add
sub
loop
cmp
(bad)
sub
xchg
sub
mov
jge
mov
push
xchg
cmp
cli
push
xchg
add
fucomip
mov
(bad)
xchg
test
(bad)
mov
test
ds
sub
inc
mov
movs
test
hlt
(bad)
cmp
ret
les
push
fldenv
jl
icebp
js
jg
popa
bound
cmp
mov
imul
out
clc
popf
dec
sti
loop
ds
bnd
das
jle
pop
xor
adc
popa
int
sti
xchg
jg
int3
jge
xchg
xor
cmp
adc
pop
daa
jo
(bad)
leave
not
dec
out
push
mov
jb
jle
sbb
inc
jmp
jp
rol
xchg
addr16
sahf
(bad)
adc
lods
cmp
aam
hlt
ss
shrd
push
pop
sub
test
mov
cld
add
jle
mov
sbb
into
jno
not
cmp
xor
xchg
cdq
jmp
sti
adc
repnz
cmp
(bad)
adc
inc
fwait
pop
cmp
jns
call
lds
and
call
ja
into
or
outs
ins
out
push
jl
repnz
je
ss
dec
(bad)
in
push
adc
js
pop
and
sub
push
pop
and
adc
fistp
adc
cwde
ret
cmp
je
fistp
ret
mov
jecxz
jmp
mov
or
in
jecxz
retf
enter
xor
or
(bad)
mov
dec
int
out
mov
ja
fisubr
dec
retf
sub
xchg
push
xor
ins
shl
fisub
gs
mov
test
pop
xor
mov
bound
dec
adc
fdiv
pop
stos
push
cmp
xchg
mov
sub
sub
mov
dec
popf
test
xchg
push
lds
es
add
xchg
retf
ret
(bad)
pop
cdq
sub
fiadd
mov
push
xlat
imul
and
arpl
js
or
mov
int
fsubr
add
pop
fidivr
out
pop
rcl
shl
sti
inc
repnz
mov
xchg
std
inc
arpl
fdiv
test
push
cmps
fwait
ret
xchg
mov
sbb
cmp
pop
mov
xor
sbb
sub
imul
es
sbb
iret
fisttp
ss
push
in
rcl
jmp
fsubp
pusha
das
adc
popf
mov
xchg
dec
jnp
mov
cmp
repz
push
test
fnsave
and
add
(bad)
div
sbb
sub
ins
ins
cmp
sbb
jg
dec
push
pop
adc
mov
fsub
pop
in
(bad)
mov
mov
push
pusha
lahf
test
clc
mov
sbb
sub
(bad)
dec
add
loopne
cs
fsubr
pushf
jmp
mov
mov
gs
cmp
push
ror
mov
(bad)
in
mov
and
pop
mov
fldcw
jg
pop
pusha
(bad)
xor
(bad)
adc
lea
xchg
sub
add
ss
sbb
fdiv
mov
loop
arpl
push
cmc
xor
bound
lahf
jmp
rcl
nop
xsha256
cmps
rcr
push
push
cmp
add
xchg
sub
(bad)
push
jns
sahf
xchg
jo
(bad)
adc
cmp
repz
dec
(bad)
mov
inc
fadd
dec
in
and
xor
fld
dec
push
cmp
mov
gs
fst
ror
or
dec
pop
outs
sbb
cmp
push
add
jp
cs
sar
cmp
in
pop
fistp
aas
pop
xchg
int
cmc
stos
shl
outs
pop
mov
and
and
scas
(bad)
fcmove
xlat
imul
mov
dec
enter
add
cld
xchg
or
xor
nop
movs
dec
ret
xchg
mov
dec
pop
sub
fdiv
dec
(bad)
mov
xchg
and
xchg
xor
fld
inc
sti
aad
jbe
sbb
repnz
mov
pusha
mov
xor
movs
jecxz
add
call
loope
push
addr16
jne
inc
jl
call
dec
test
(bad)
dec
sub
sub
out
scas
mov
(bad)
lock
hlt
dec
inc
dec
jns
adc
outs
aam
repnz
cmp
sti
pop
ficom
clc
mov
adc
dec
mov
jecxz
adc
inc
fmul
and
sar
fisttp
ficom
xchg
dec
cmc
or
adc
xor
lock
sahf
loop
jae
adc
mov
jbe
fs
pop
adc
lahf
sub
and
stos
leave
xchg
dec
push
popf
jmp
mov
test
jg
dec
(bad)
xchg
std
out
ds
ror
aad
shl
mov
(bad)
cs
fidivr
jl
pop
jns
mov
jo
fadd
mov
(bad)
push
push
sub
pop
mov
jp
outs
push
imul
ins
dec
lahf
punpckldq
sbb
int3
lock
pop
add
mov
sbb
aam
add
shl
test
push
cmp
sub
popf
mov
cmp
inc
mov
in
xchg
aaa
aas
outs
in
add
or
enter
jmp
stc
jnp
add
sahf
lea
dec
(bad)
cmp
dec
scas
mov
xor
sub
ss
jle
cmp
cmps
bound
dec
fdiv
adc
das
imul
mov
shl
mov
mov
xor
out
jmp
sub
(bad)
popf
ds
jnp
loope
pop
pop
jno
pop
push
cmps
mov
mov
inc
ss
popf
push
je
test
push
push
xor
mov
je
aas
mov
xchg
ins
inc
mov
rol
add
test
and
stos
fimul
jnp
jge
jne
inc
add
or
push
cdq
mov
inc
cs
sub
adc
aaa
inc
pop
sub
jo
and
call
leave
daa
lahf
mov
(bad)
jns
into
mov
adc
mov
clc
lock
test
or
iret
fist
inc
add
pop
fwait
int3
dec
out
sub
out
outs
mov
mov
ins
push
jg
or
repz
out
fsubr
add
imul
adc
ins
mov
adc
rcr
mov
imul
jne
shl
cmp
and
fwait
in
(bad)
and
test
lods
push
mov
or
scas
jnp
inc
repnz
xchg
lods
inc
cmps
xor
xchg
sub
out
ret
fimul
pop
retf
and
sub
and
cmp
jae
fisub
pop
cli
repnz
xor
sbb
test
adc
adc
mov
fwait
add
pop
pop
cdq
ins
mov
cmps
out
ds
nop
xchg
not
and
inc
add
hlt
add
xor
cmps
adc
push
sbb
jmp
mov
sub
int3
cmp
mov
test
cwde
jns
push
outs
pop
(bad)
pop
mov
jb
jge
jmp
mov
stos
mov
out
rcl
dec
das
add
pop
test
push
ret
dec
outs
out
mov
fiadd
fcomip
mov
push
les
(bad)
pop
int
xlat
daa
(bad)
dec
jns
push
pop
icebp
movs
and
dec
sbb
(bad)
sbb
stos
push
pushf
xor
sub
xchg
cmp
pop
fbld
pop
xchg
mov
or
pop
cdq
cdq
xor
stos
xchg
xchg
adc
adc
sbb
mov
call
push
fiadd
enter
in
mov
lods
inc
lods
js
mov
push
xor
add
int3
imul
xor
mov
push
mov
sub
or
push
mov
mov
sbb
rcr
xor
pushf
dec
test
fucomip
std
xor
ret
repz
jge
out
iret
mov
imul
sbb
fucomi
sbb
call
jnp
outs
pop
xor
neg
(bad)
push
data16
shr
addr16
mov
sub
or
jmp
cmp
je
fiadd
test
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
mov
retf
icebp
and
pop
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
xlat
test
or
add
rcr
sbb
and
out
rcl
test
ror
movs
mov
idiv
add
pushf
pop
inc
add
lods
mov
pop
aaa
ins
int3
sbb
ins
sub
or
gs
and
dec
test
movs
cwde
aaa
hlt
sbb
rcr
jbe
sub
sbb
aad
add
xor
sbb
(bad)
nop
call
jl
popa
rcl
loope
add
clc
push
repz
call
in
mov
es
inc
dec
je
push
es
xchg
sub
fsubr
and
repnz
sbb
pop
enter
gs
repz
xchg
pusha
push
jb
inc
aad
imul
frstpm(287
mov
mov
arpl
imul
std
test
dec
loopne
sub
pop
inc
cld
in
pop
int
sbb
inc
xchg
test
and
ins
inc
lock
shl
mov
cwde
lock
dec
push
shl
lock
mov
cmp
mov
not
pop
or
test
out
icebp
leave
pop
lahf
pop
(bad)
mov
sub
pop
(bad)
pusha
repnz
mov
cmp
int
inc
fisubr
add
mov
aas
xor
dec
in
add
mov
jle
les
mov
popa
cdq
pop
or
sahf
sbb
mov
mov
or
adc
fsub
or
mov
xchg
push
xor
icebp
leave
xchg
jnp
fild
mov
popf
data16
movs
inc
out
cmps
not
xchg
xchg
psadbw
mov
clc
mov
fwait
arpl
in
jmp
pop
jp
(bad)
(bad)
or
xor
jno
xor
mov
add
aad
int3
jo
sti
adc
loopne
je
jb
push
arpl
fbld
mov
rcl
mov
ja
jmp
neg
je
pop
ja
xor
dec
lods
fs
push
xchg
jne
aad
out
push
and
sub
aad
mov
repnz
xor
(bad)
xchg
popa
test
fcmovu
in
and
cmp
mov
mov
mov
imul
mov
or
ins
scas
fistp
not
dec
jns
pop
mov
sub
dec
ret
pushf
out
jno
aam
popa
mov
hlt
ss
jno
or
lods
cmp
pop
cmp
adc
neg
pop
add
js
lock
inc
jmp
push
xor
icebp
jmp
xchg
dec
fxch
out
jb
cli
push
inc
inc
mov
aaa
addr16
xchg
xor
data16
out
mov
sbb
in
mov
xlat
out
push
fcomp
xchg
jns
sub
loope
add
xchg
sub
aam
inc
fucomip
pop
push
neg
mov
test
arpl
stos
push
ss
test
bound
cmps
(bad)
or
push
fmul
aam
outs
xor
dec
std
xchg
lods
sbb
mov
scas
in
and
fldcw
push
dec
push
(bad)
outs
lds
mov
pop
das
arpl
or
stos
sar
sbb
pandn
cli
mov
addr16
push
sar
mov
mov
sbb
adc
call
pop
in
ds
jnp
xchg
mov
add
retf
pop
pusha
adc
mov
and
mov
cmc
mov
(bad)
movs
jge
sub
test
jne
mov
jl
rcr
call
jp
test
jb
or
div
sub
ror
push
fsub
push
sbb
pop
xchg
xor
mov
mov
stos
cmp
repnz
lods
scas
das
aad
jl
jle
clc
ret
xor
jp
shr
xchg
ss
sbb
adc
test
call
out
xor
mov
mov
push
(bad)
cld
(bad)
pusha
mov
jmp
push
push
push
das
push
jle
push
imul
ss
cmp
(bad)
pop
repz
out
fwait
addr16
jg
push
push
out
jmp
pop
adc
sub
mov
push
inc
cmp
mov
jbe
cmp
in
sbb
popa
and
dec
sub
mov
adc
mov
jbe
jae
aad
scas
js
out
xor
sub
cmps
mov
mov
jbe
mul
(bad)
sti
adc
mov
mov
adc
mov
fwait
arpl
pop
inc
daa
mov
jecxz
add
in
ja
jmp
stos
push
fwait
cld
dec
shufps
stos
test
add
ja
repz
push
jmp
pop
movs
cdq
or
or
mov
int3
dec
xor
xor
ds
pushf
jo
or
push
ja
ins
inc
dec
adc
cmp
movs
push
xchg
dec
imul
outs
cmc
and
(bad)
cli
movs
fimul
mov
mov
push
push
adc
add
mov
(bad)
pop
stc
fstp
dec
push
aad
(bad)
(bad)
and
inc
int
jmp
sub
(bad)
ret
push
call
lahf
add
inc
mov
dec
jns
sbb
outs
movs
(bad)
std
dec
fsubr
mov
movs
inc
xchg
jo
cmc
pop
xlat
cmp
fisttp
and
call
loopne
shr
adc
inc
(bad)
xor
sbb
idiv
mov
loopne
push
xor
sub
or
sar
dec
and
retf
cmp
mov
mov
inc
fimul
xor
mov
mov
jl
leave
ins
ss
outs
fwait
inc
cmp
(bad)
push
and
mov
fsubr
pop
mov
inc
jmp
out
lods
and
jmp
sahf
xchg
cmp
mov
pop
mov
add
retf
pop
(bad)
popa
fs
rcl
mul
dec
loop
aam
mov
movs
dec
xor
loope
jo
(bad)
cmc
mov
cli
jns
mov
pop
and
push
mov
loope
xchg
push
jnp
imul
jle
sahf
push
dec
or
cmp
ds
pop
xchg
mov
cmc
out
inc
adc
scas
inc
jl
scas
in
xchg
cmp
mov
pop
cmc
pop
xchg
sub
fisttp
sbb
mov
xchg
push
cmc
stc
fadd
cmp
adc
push
ja
jae
movs
inc
cmp
sbb
dec
mov
push
or
clc
and
mov
cmp
fs
push
add
mov
dec
pop
(bad)
add
adc
sub
cmp
and
and
add
mov
ret
jmp
out
lea
jmp
mov
jmp
fmul
test
push
mov
add
add
add
sbb
mov
pop
fdivr
outs
fisub
hlt
stc
mov
sbb
out
aaa
fwait
xchg
rcr
mov
aad
fimul
repz
push
cmp
xor
mov
loopne
sub
aam
push
imul
add
dec
les
div
mov
test
mov
jl
(bad)
in
neg
mov
(bad)
(bad)
les
call
stos
sahf
lahf
arpl
mov
(bad)
call
js
js
adc
or
cdq
into
and
stc
sbb
push
fs
add
jge
jge
jge
in
mov
jg
push
test
retf
pop
jmp
cmp
rcl
inc
jg
xchg
pop
cmp
jb
or
push
and
sbb
dec
xor
adc
pushf
jb
aad
sub
test
push
sub
cmp
nop
jmp
pop
jb
popf
pop
sti
add
mov
jns
(bad)
adc
icebp
add
in
xor
dec
retf
enter
pop
out
aas
jae
lock
and
xor
inc
es
ss
popf
add
clc
test
push
call
mov
movs
pushf
sbb
sub
test
(bad)
jge
sbb
inc
call
(bad)
xchg
push
inc
xor
cmp
sbb
cmps
rcl
inc
cld
adc
ret
(bad)
mov
xor
mov
mov
inc
fwait
push
scas
jb
add
sar
loopne
sbb
xor
repz
cmp
aaa
mov
mov
cdq
retf
mov
dec
bnd
popa
pop
push
pop
stc
cli
adc
jge
addr16
clc
aad
cwde
jno
jne
retf
hlt
pusha
movs
lea
jmp
push
fwait
sub
sub
fwait
in
push
cmp
out
jae
sbb
xchg
stos
xchg
pop
fs
xchg
sbb
in
sti
xor
and
movs
inc
add
int
jb
mov
xchg
jnp
add
and
dec
mov
pop
xchg
lahf
jle
add
stos
outs
lods
sub
push
stos
mov
int
js
test
xchg
jnp
sti
aaa
dec
in
jne
test
sbb
pop
push
popf
loopne
js
(bad)
es
jecxz
inc
adc
mov
add
jne
mov
inc
ret
mov
xchg
sbb
cmp
or
outs
mov
test
aas
aam
call
outs
aad
xor
pop
pop
add
sbb
push
pop
mov
fcomp
popf
dec
xchg
push
aas
inc
inc
xchg
or
in
inc
mov
pushf
outs
xlat
and
sar
shl
ds
sti
add
iret
cmp
sti
push
push
mov
sub
stos
inc
(bad)
adc
retf
bound
sbb
jle
rcl
fild
cmps
jbe
test
xor
fistp
js
(bad)
es
mov
cmp
bound
inc
mov
xor
inc
inc
shl
lds
in
sbb
mov
outs
mov
push
push
mov
pop
xchg
pop
aaa
(bad)
cmp
sbb
fidiv
jns
fidiv
mov
sbb
sbb
iret
push
push
push
and
mov
pop
pop
add
cmps
out
sub
rcl
aad
xor
mov
aas
pop
mov
stos
frstor
xchg
pop
cmps
sbb
adc
cmp
ins
ins
imul
add
stos
in
lods
dec
dec
cmp
cmp
lock
push
xchg
test
vcvtdq2pd
ins
inc
push
imul
les
xchg
xchg
(bad)
jg
and
addr16
cld
xchg
ss
xor
in
mov
mov
xor
sub
in
outs
leave
out
xchg
mov
fpatan
icebp
dec
outs
dec
inc
adc
dec
and
aas
adc
adc
fcomi
std
pop
and
btr
mov
sahf
dec
xor
push
enter
dec
dec
sub
xor
cli
push
mov
stos
arpl
and
xor
lea
sub
mov
cmps
xchg
cwde
das
mov
jns
bound
lods
mov
in
popf
pusha
icebp
call
sbb
pop
fcomi
sub
lock
push
xor
fwait
ds
fs
test
mov
shl
push
pop
cmps
fadd
shl
sbb
adc
push
movs
mov
cmp
loop
pop
adc
lods
int
fistp
aam
cmp
pop
jmp
mov
popa
fistp
sub
dec
leave
cmps
jns
or
push
movs
inc
test
pop
add
mov
(bad)
ins
movs
mov
sahf
inc
sbb
or
lahf
mov
imul
in
mov
es
push
jle
into
cmp
mov
adc
sub
push
pop
repnz
dec
fs
cmp
retf
pop
cmp
xor
xor
imul
daa
pop
mov
mov
push
(bad)
fnstsw
jg
xlat
jns
fisub
(bad)
mov
cmp
or
(bad)
cli
or
js
lea
fcom
(bad)
(bad)
icebp
xor
sahf
pop
xchg
ja
xchg
xor
xchg
fsub
cmp
adc
sbb
(bad)
outs
push
and
sbb
cmps
in
retf
jmp
jno
imul
add
pop
in
xchg
push
adc
ins
imul
loop
mov
mov
jg
cmps
sbb
xchg
xchg
mov
jno
adc
sub
xlat
idiv
push
stos
jge
addr16
jle
adc
push
cwde
inc
xchg
(bad)
jnp
aas
mov
and
fisubr
push
jmp
(bad)
cmp
adc
es
fmul
push
loop
xchg
dec
out
cmovp
int
mov
rcr
cmp
outs
mov
jne
out
xlat
jnp
loope
inc
aas
jge
cdq
push
rcr
inc
dec
lea
and
cmps
pop
mov
imul
xor
xchg
jle
fidivr
aas
cdq
gs
push
cmp
sbb
mov
shl
add
clc
add
sub
inc
mov
jo
fisttp
ret
sar
mov
ds
sub
aam
js
cmps
mov
ret
push
popf
cmp
mov
add
mov
test
ds
and
loopne
mov
lods
ins
cmp
ror
test
add
repz
ret
add
scas
fnstsw
jns
jecxz
push
iret
pop
idiv
jmp
sbb
sbb
cmps
mov
xchg
or
jmp
call
push
push
call
jnp
lahf
test
rcl
aas
(bad)
call
xor
and
int3
mov
and
cmps
sar
pop
inc
loop
xor
clc
mov
lahf
adc
ins
mov
outs
gs
out
fidivr
xor
adc
inc
xor
jne
je
call
push
jbe
ins
imul
and
and
dec
in
sbb
pop
add
ins
xchg
jecxz
pop
mov
push
pushf
call
mov
push
push
mov
(bad)
out
addr16
stc
sbb
jno
xchg
icebp
xor
mov
xlat
mov
dec
or
adc
mov
retfw
pop
mov
xor
fisub
cmps
xchg
mov
call
sbb
sbb
sbb
shl
imul
inc
out
and
ror
pop
adc
dec
test
sub
mov
fwait
push
cmp
pop
add
push
xor
pop
cdq
mov
push
loope
popf
shl
pop
cmp
pop
mov
cli
lock
mov
(bad)
retf
mov
jg
cmps
fdivr
loopne
arpl
loop
jle
inc
int
cmp
into
mov
mov
mov
int
jnp
aaa
push
(bad)
lock
mov
outs
sub
push
jo
aam
or
and
add
scas
xlat
icebp
jno
inc
shr
mov
loop
xchg
pop
add
in
pop
cmp
xchg
jge
loope
cmp
xchg
dec
sub
mov
jmp
xor
or
pop
retf
mov
les
popa
xor
jmp
jne
(bad)
loop
retf
fnsave
add
cwde
jecxz
test
lds
mov
add
sbb
outs
sbb
lahf
cmc
mov
push
sbb
fadd
leave
jge
cmp
push
scas
mov
dec
xor
aad
xor
mov
sti
lds
ret
movs
dec
imul
or
ret
xchg
ret
popf
sub
dec
add
fwait
dec
iret
mov
cmp
ins
xor
or
cmp
popf
ror
add
sbb
mov
je
loope
inc
adc
and
push
sahf
add
dec
imul
rol
lahf
int
and
dec
push
xchg
mov
sub
lds
test
cmp
add
imul
enter
daa
push
shl
stc
imul
sbb
mov
inc
jge
repnz
(bad)
jp
push
mov
iret
aas
shr
sahf
and
xchg
dec
adc
scas
in
or
aad
add
inc
div
jns
scas
xchg
lods
push
pop
jnp
retf
jns
xor
xchg
push
adc
femms
scas
retf
pop
lods
dec
pop
ins
xchg
mov
pop
fdivr
mov
xchg
pushf
dec
jl
pop
dec
ins
mov
das
cs
mov
push
mov
sbb
pop
mov
jbe
idiv
ins
sti
sbb
pop
lock
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
aas
mov
jae
call
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
aam
aas
sbb
add
icebp
ret
in
jae
cmps
(bad)
xor
mov
scas
rcr
pop
xor
fcmovne
leave
mov
jecxz
stc
aas
mov
stc
std
js
add
adc
jb
inc
jb
mov
outs
int3
rep
dec
rcl
mov
jmp
mov
fwait
mul
(bad)
jmp
sbb
sbb
in
xchg
mov
push
jns
cmps
sbb
div
sub
out
push
(bad)
cmps
push
ss
push
mov
xlat
sbb
xchg
test
rol
add
gs
dec
sahf
ss
cwde
into
mov
fbstp
mov
pop
add
dec
cmp
ja
jmp
xor
fimul
mov
movs
scas
iret
push
cmp
add
test
addr16
inc
cwde
leave
lahf
loop
jb
gs
outs
fimul
sub
iret
mov
sub
ins
inc
xchg
or
pop
xchg
push
push
push
data16
xor
xor
inc
inc
outs
test
jg
adc
pop
repnz
retf
and
mov
cmps
inc
cwde
outs
cmps
xchg
retf
popf
or
adc
aas
mov
inc
fcom
xchg
mov
xchg
xor
leave
sbb
fstp
ss
int
xor
shr
cmc
js
push
je
push
mov
pushf
loopne
xchg
mov
hlt
cmp
loope
retf
pop
ins
jbe
fistp
fisub
stos
pop
inc
push
inc
enter
add
iret
mov
repnz
(bad)
xor
sar
and
jo
cmps
pushf
dec
add
cmc
dec
xor
adc
inc
stos
inc
fdivr
pop
data16
sti
loop
push
popa
and
out
mov
jb
mov
leave
and
jmp
in
mov
mov
mov
or
or
mov
repz
in
inc
enter
(bad)
jne
out
adc
mov
cld
pop
dec
push
neg
cmp
mov
push
xor
mov
dec
xchg
icebp
int3
cld
push
or
sti
sub
pop
mov
js
sbb
pop
aaa
xor
popf
inc
xchg
js
ret
cmp
mov
cmp
je
xor
ja
add
icebp
(bad)
jbe
neg
cmp
cld
push
cmc
ss
push
lds
je
dec
fs
das
mov
and
out
(bad)
fistp
frstor
shl
mov
add
aam
data16
xchg
ret
fisub
mov
jmp
mov
leave
inc
das
fs
add
pop
in
ret
cmps
jb
dec
ss
lods
mov
xor
gs
and
mov
add
out
push
hlt
sbb
xchg
sahf
cmp
(bad)
mov
or
iret
icebp
xchg
xor
(bad)
into
push
into
push
aas
ror
mov
fstp
dec
sub
retf
pop
lods
movs
adc
push
out
mov
jo
in
pusha
out
movs
sbb
iret
out
aaa
outs
pop
push
test
jb
gs
inc
dec
int
pop
dec
outs
popf
dec
add
xor
jg
jg
leave
mov
hlt
ja
pop
push
inc
mov
imul
(bad)
outs
sub
cmp
pusha
rcl
jae
sbb
mov
out
ja
nop
sbb
xchg
push
push
push
in
scas
ss
stc
fs
fnstcw
popa
popa
(bad)
adc
ror
jge
into
fcom
xlat
scas
cld
rcr
and
addr16
jne
xchg
or
fwait
lea
js
cld
cld
lods
push
pop
retf
adc
pop
adc
cmp
xchg
inc
test
mov
adc
cs
ins
xchg
out
cmps
leave
jp
add
push
xchg
mov
push
xor
mov
mov
scas
dec
mov
fild
cmp
je
cmps
jmp
inc
xchg
(bad)
push
mov
push
sbb
or
es
test
push
ja
ins
jne
cli
pop
loop
pop
test
sub
mov
in
shl
pop
enter
sub
out
mov
add
sti
out
jae
nop
test
or
or
and
leave
push
(bad)
xchg
dec
add
fdiv
sti
dec
fdiv
dec
repnz
push
fisttp
and
pop
pop
mov
xor
lods
push
cmp
push
pop
pop
shl
mov
pop
pop
out
dec
lahf
xchg
xchg
out
jmp
lods
dec
adc
push
mov
shr
shl
jns
(bad)
test
mov
clc
fwait
clc
je
jmp
and
das
mov
js
stos
push
test
jmp
push
sub
repnz
pop
push
test
mov
sbb
call
mov
in
add
sbb
mov
pop
icebp
jnp
push
sub
or
xchg
mov
xchg
mov
imul
jle
arpl
fwait
xor
sbb
dec
xchg
ja
popf
inc
mov
in
pop
std
mov
sahf
adc
ret
outs
sti
add
clc
js
ret
imul
and
sahf
jg
jbe
(bad)
xlat
daa
push
mov
jb
hlt
sbb
mov
mov
inc
add
aad
call
cmp
xchg
test
std
cdq
pop
adc
jne
stos
loop
jo
imul
and
ret
dec
lods
pop
jg
push
pop
out
inc
test
jmp
je
xchg
les
jb
bnd
stos
movs
loop
xchg
cmps
inc
pop
test
or
cmp
cmp
(bad)
adc
xchg
cmps
xchg
adc
test
cwde
jno
mov
das
xchg
mov
cmp
dec
stos
mov
or
cmps
adc
mov
outs
sbb
mov
dec
in
lahf
pushf
fldenv
(bad)
repz
outs
adc
inc
and
mov
sti
loopne
sub
sub
cmp
(bad)
shr
int3
sbb
mov
mov
addr16
cmp
out
adc
sbb
inc
cmps
jb
inc
bound
in
daa
into
dec
cmp
mov
lea
sbb
or
mov
mov
xchg
sar
retf
sbb
xchg
je
push
and
loope
(bad)
in
outs
ds
mov
mov
jae
imul
frstor
sbb
sub
pusha
xor
leave
lods
adc
addr16
mov
mov
cmp
icebp
inc
adc
xor
icebp
sub
push
ins
xor
dec
mov
cld
comiss
(bad)
(bad)
cmp
aaa
stos
test
pop
das
call
jg
out
cmc
mov
imul
xchg
imul
xchg
sub
xchg
cmp
mov
add
loopne
pop
mov
sub
jmp
xor
jg
dec
stc
pusha
jl
in
or
rcr
mov
mov
test
(bad)
aam
sbb
and
lahf
addr16
mov
push
nop
mov
cmc
rcr
dec
sub
mov
and
ins
scas
sti
out
int3
pop
lahf
mov
lods
inc
add
pop
sub
xchg
lock
push
cs
pop
pop
imul
ja
cmp
std
retf
icebp
les
sub
std
and
fiadd
aas
cli
sub
or
jno
and
cmp
fadd
mul
in
fisubr
sbb
mov
mov
fsub
mov
push
das
cmp
jl
or
pop
int
fisubr
dec
jle
movs
jb
jb
outs
sub
aas
je
adc
out
mov
mov
pop
loopne
fsubr
add
(bad)
retf
ret
fnstenv
mov
mov
sub
aam
mov
mov
rol
pop
test
lds
jae
xchg
push
lahf
inc
dec
fisttp
sub
test
cmp
xchg
sub
cmc
inc
ret
sar
cwde
xor
pop
sub
mov
ja
cs
pop
push
sub
jnp
shl
dec
sub
data16
jnp
cdq
pop
popa
cmp
daa
inc
mov
jl
in
dec
xor
sub
cmp
enter
jae
mov
add
dec
push
mov
imul
in
jns
push
push
(bad)
push
push
outs
adc
mov
addr16
push
add
in
pop
fisubr
add
dec
cdq
popa
mov
ins
cmps
sbb
mov
test
imul
mov
cmc
jge
sbb
pop
lahf
lock
clc
dec
and
push
or
jl
dec
push
and
dec
push
sbb
(bad)
out
push
mov
and
shl
push
push
jge
xchg
idiv
lea
pop
cmp
std
mov
cmp
push
aad
mov
ss
mov
adc
push
into
mov
ins
cld
js
(bad)
into
dec
ds
and
imul
out
dec
lock
sub
lods
mov
or
sbb
jo
push
outs
xchg
mov
mov
xchg
xchg
mov
in
xchg
test
inc
(bad)
lods
dec
xchg
ins
xor
jmp
jecxz
jp
stos
mov
jg
adc
hlt
gs
icebp
fisub
mov
pop
stos
jns
mov
xchg
and
xchg
xor
cdq
sar
cmp
sub
and
in
and
cld
jp
mov
or
test
dec
sbb
jmp
dec
adc
into
nop
lods
push
sti
cmp
xchg
dec
jl
test
add
push
cmp
pop
cmp
fsubp
fwait
pop
arpl
sub
ins
sub
pusha
add
scas
sub
stc
mov
(bad)
xlat
shl
pop
shr
inc
mul
aam
icebp
sbb
and
or
and
(bad)
push
es
mov
lea
pushf
cdq
jle
cmps
add
scas
dec
mov
hlt
aaa
mov
ss
cmp
(bad)
adc
adc
sbb
push
vpaddb
test
inc
rcr
mov
(bad)
gs
sub
pusha
rcl
mov
cdq
cli
sahf
xor
mov
inc
shr
cmpxchg
add
or
jl
jmp
inc
xor
inc
sbb
push
push
inc
sub
cmp
inc
mov
xchg
(bad)
jb
loope
sbb
gs
out
push
fdivp
hlt
out
or
out
out
or
outs
add
pop
jp
pop
ror
sbb
mov
jo
shl
or
jmp
ret
iret
ja
xor
sub
inc
je
jecxz
xor
loopne
push
pop
into
data16
push
pusha
dec
ja
into
xchg
inc
sub
aad
loope
mov
mov
dec
pop
mov
outs
or
jle
addr16
and
cwde
jae
fstp
or
inc
fs
mov
push
xor
mov
repnz
pushf
and
inc
outs
(bad)
mov
mov
and
out
aas
jbe
inc
scas
scas
fwait
cmp
repz
test
push
dec
lock
xchg
push
dec
loope
add
int
mov
mov
add
inc
aas
movs
call
je
fidivr
pushf
fidivr
mov
int
aam
and
in
pop
movs
shl
push
jmp
cwde
lock
pop
ins
(bad)
xchg
repz
repz
adc
call
xor
ret
pop
(bad)
sbb
rcr
retf
pusha
cmps
add
pop
and
add
out
addr16
(bad)
arpl
cmps
jb
mov
shr
shl
mov
adc
xchg
push
test
or
pop
push
stos
loopne
push
cmp
ins
loopne
dec
rol
xchg
popa
aam
std
ret
inc
addr16
cld
lods
push
dec
mov
dec
and
aad
pop
retf
nop
mov
xchg
aam
pop
mov
retf
test
jge
add
xor
stos
daa
je
int
inc
mov
ret
jmp
push
cmp
push
pop
xorps
into
dec
jge
int
or
jle
pop
mov
jbe
fistp
jp
cmp
rcr
in
mov
imul
in
xor
sub
add
jae
outs
jmp
scas
adc
iret
aas
repnz
mov
ds
outs
xlat
adc
inc
std
or
mov
xchg
adc
xchg
(bad)
xor
sbb
xor
sti
adc
mov
xlat
cmp
int
in
(bad)
xor
or
gs
arpl
enter
(bad)
sti
sub
ins
mov
pop
mov
mov
test
outs
sbb
add
add
fbld
and
(bad)
pusha
(bad)
push
inc
inc
test
jns
nop
cmc
dec
lea
sub
mov
loop
scas
dec
push
ins
stos
inc
mov
stc
mov
fidivr
sub
aas
ja
pslld
mov
repnz
les
movs
je
(bad)
push
(bad)
lods
outs
stos
loop
cmp
popf
aam
stc
mov
dec
in
or
pop
retf
in
sbb
and
mov
out
inc
fnstcw
jl
sub
retf
jle
push
push
idiv
push
aad
add
and
add
dec
fnstcw
sbb
xor
and
test
cmp
pop
jne
fisub
lods
test
dec
dec
movs
xchg
sar
and
std
fsubr
adc
mov
sbb
rcl
dec
pop
add
shr
mov
stos
out
ss
(bad)
mov
cwde
inc
test
ds
cwde
sahf
jo
inc
dec
fiadd
mov
xchg
push
xor
out
scas
push
adc
stc
mov
pop
out
loope
fidiv
sbb
nop
pop
sub
js
cmc
rcr
das
inc
cmp
jmp
popa
out
rcl
adc
fcomp
aad
jmp
cmc
jae
xor
data16
dec
inc
pop
int3
cmp
popf
push
mov
call
cmps
fs
ficomp
es
xchg
hlt
aam
sub
retf
sbb
js
and
jno
pop
int3
adc
mov
cmp
sbb
psubsw
jecxz
lods
enter
outs
sub
je
xchg
cmp
cli
fcmove
out
lods
or
je
or
or
dec
aad
outs
outs
into
jg
scas
in
jle
idiv
pop
mov
rol
adc
mov
shl
inc
pop
int
fwait
sub
xor
push
mov
push
mov
retf
add
jle
jb
or
test
lods
test
mov
and
xchg
shr
scas
pop
fsubp
cmp
ins
jb
mov
jmp
jp
pop
pop
add
dec
dec
loopne
sbb
(bad)
mov
mov
jmp
sub
repnz
retf
xchg
xor
mov
fadd
test
lds
xor
jnp
mov
shl
inc
xor
sub
mov
xchg
push
call
or
fist
sbb
mov
test
ror
mov
pop
std
enter
ret
pop
pop
xor
fwait
jp
jo
mov
bts
pushf
cli
shl
sub
mov
scas
xor
jp
inc
and
fld
ret
sub
lock
dec
mov
push
mov
cmp
and
mov
dec
sbb
push
sahf
dec
push
pop
in
call
ss
cmp
call
xchg
adc
jmp
(bad)
jmp
cmp
mov
jp
repnz
mov
or
mov
js
int
push
pop
sub
mov
loopne
lahf
dec
jge
xor
hlt
ss
xchg
loopne
cmp
dec
push
adc
sysenter
cmps
icebp
xchg
adc
cmp
icebp
lods
jge
mov
stos
mov
xchg
sub
and
popf
call
ret
jns
fisub
cmp
aas
(bad)
std
pop
jo
in
adc
mov
xor
sub
icebp
out
data16
daa
jecxz
mov
xor
add
stc
out
jg
stc
out
jg
scas
add
inc
push
cwde
or
lods
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
and
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
pop
inc
in
rol
lock
jae
push
sub
lods
nop
xchg
jne
cs
addr16
mov
mov
xchg
push
enter
retf
int3
fisub
icebp
loopne
sub
cs
jg
sti
stc
fdiv
or
or
ins
mov
lods
(bad)
out
daa
pop
out
xchg
mov
xchg
dec
dec
and
add
pcmpeqd
mov
test
arpl
test
jb
shl
into
or
adc
test
and
add
es
lea
xor
div
scas
xchg
cmc
dec
aas
(bad)
outs
rcr
mov
inc
(bad)
mov
lahf
out
dec
or
mov
aas
sbb
sbb
and
xor
(bad)
rcr
push
aad
mov
test
sbb
push
sbb
outs
neg
(bad)
retf
jle
int3
sub
addr16
xchg
rcl
frstor
pop
cmc
add
loop
or
push
je
mov
cdq
std
jecxz
jle
out
adc
lock
sub
sub
xchg
js
cmp
cmp
pop
push
pop
mov
xchg
xchg
push
in
ret
and
sbb
pop
ja
out
(bad)
pop
shl
cmc
ins
xor
xlat
test
or
mov
xchg
pop
test
or
xor
jns
push
fs
mov
xchg
retf
pop
lods
cmp
jg
test
ret
mov
add
pop
pop
idiv
push
lahf
jbe
popa
mov
pop
not
into
ret
cmp
(bad)
cmps
movs
sbb
jge
pop
pop
push
fwait
mov
or
addr16
repnz
xchg
cmps
mov
xchg
add
or
fstp
jbe
xchg
mov
and
cmp
cmp
rcl
jnp
aam
leave
sti
and
not
paddq
frstor
movs
xchg
call
test
in
cwde
(bad)
icebp
sub
lock
fcmovnu
lds
fidiv
sub
repz
jp
fs
push
loop
retf
repnz
push
lahf
sub
mov
pop
xor
fsub
xor
jle
jnp
sbb
dec
sbb
or
xchg
push
loopne
(bad)
iret
cmp
push
jge
into
adc
sti
mov
cmp
js
mov
rol
pop
push
sbb
imul
or
(bad)
pop
inc
cs
pushf
iret
push
push
mov
adc
xchg
stos
mov
gs
inc
test
leave
retf
xor
cmp
cld
test
pop
adc
or
or
push
call
jo
movs
xor
iret
std
cmp
inc
add
pop
pushf
mov
sbb
repz
nop
jae
xchg
adc
icebp
xchg
jb
out
adc
mov
in
ins
adc
or
fldenv
loope
idiv
shl
mov
std
imul
hlt
aad
ret
ss
jb
xchg
jle
and
rol
push
dec
arpl
imul
sbb
cdq
pop
jg
xlat
ret
adc
mov
adc
lahf
enter
ja
xchg
sub
and
jne
and
shr
nop
cli
push
lods
dec
mov
pop
ins
xor
fstp
adc
fsub
jecxz
sbb
imul
outs
(bad)
lods
hlt
mov
jge
push
int3
dec
push
loop
int3
mov
jmp
mov
mov
rcr
aas
data16
loopne
jbe
or
shl
test
or
inc
stos
xor
in
cmps
cmc
out
adc
jno
sbb
add
stc
ins
test
ret
sub
js
mov
hlt
loope
cdq
xor
push
js
sub
test
pop
mov
xor
out
lods
dec
and
shl
xlat
dec
jns
ror
mov
dec
popa
mov
out
push
mov
aas
aad
sbb
out
sbb
xchg
xor
popf
call
add
dec
nop
enter
pop
out
das
or
jb
mov
fisub
ret
inc
lea
(bad)
push
jmp
sub
shl
inc
arpl
pop
adc
js
xchg
sub
xchg
ret
(bad)
fst
data16
sbb
ret
in
into
daa
aas
cmp
and
(bad)
lock
in
and
movs
and
xchg
into
adc
outs
dec
imul
xchg
jge
mov
ds
jae
ja
xchg
(bad)
sti
xor
lods
arpl
adc
repz
inc
aas
mov
ins
mov
dec
jg
cmp
mov
dec
int3
inc
pop
xor
lock
xor
add
js
std
pop
push
mov
adc
lds
int3
inc
push
loope
or
aad
inc
mov
sahf
sbb
xchg
push
push
and
mov
sbb
inc
ret
neg
dec
sub
cmp
aas
adc
mov
jb
stos
mov
inc
(bad)
in
add
movs
add
sbb
or
jo
dec
fwait
mov
xor
add
jmp
cmps
in
je
mov
xor
aaa
test
inc
or
jae
push
push
mov
pop
add
retf
sub
stc
jae
mov
adc
mov
fistp
paddsw
sub
and
ret
sahf
repnz
lahf
enter
jmp
or
shl
out
in
xorps
cmp
cmp
sbb
cmp
jae
xchg
call
inc
call
mov
dec
push
mov
mov
xchg
xor
adc
adc
stc
mov
mov
or
push
mov
daa
test
rcr
clc
adc
or
xchg
mov
outs
ins
sbb
pop
jb
cmp
xchg
shl
mov
dec
fistp
bound
xchg
sbb
jbe
mov
nop
push
xor
jmp
aaa
sbb
call
nop
cs
cmps
(bad)
(bad)
int3
scas
aam
push
sub
repz
push
(bad)
sti
cmps
adc
stc
push
jo
jmp
shr
sub
je
popf
scas
and
and
imul
jno
or
or
pop
in
xor
aam
xor
ret
call
inc
ins
dec
cmovnp
xchg
sahf
or
iret
cmps
cmp
out
and
cmp
dec
(bad)
int
push
fstp
fidivr
lods
xchg
cmps
pushf
test
lods
pop
inc
pusha
pop
pop
jae
adc
xlat
adc
add
jbe
das
mov
cli
cmp
push
stos
mov
aas
inc
sti
xor
fdiv
int
xchg
shr
inc
mov
cmp
cld
gs
popf
ins
mov
xchg
pop
mov
and
mov
out
paddw
push
cmp
test
int
pop
outs
aam
shl
xchg
and
imul
ds
lds
imul
dec
jmp
add
out
ffreep
out
dec
gs
push
sub
outs
jne
stc
push
rcl
aad
push
cld
dec
dec
movs
retf
fmul
fsub
sti
push
push
mov
xchg
test
sbb
nop
sub
ficom
lods
test
jb
pop
and
mov
or
pop
in
xlat
pop
fcomp
retf
in
aaa
sbb
mov
scas
inc
and
dec
sub
in
daa
shr
mov
sub
jae
fadd
sti
pop
pop
test
cmp
pop
xchg
ret
pop
mov
gs
stc
inc
std
jl
lds
icebp
cmp
fsubr
mov
pop
cmc
cmps
ins
aad
push
nop
xor
das
sti
mov
loopne
pushf
pop
stos
das
cmp
mov
mov
addr16
mov
or
not
mov
pop
sbb
dec
ret
scas
jnp
sub
and
inc
mov
aam
movs
adc
xor
xlat
shl
sbb
jne
test
inc
mov
(bad)
fst
rcr
adc
add
lds
mov
or
cs
and
icebp
imul
(bad)
sub
dec
dec
mov
add
push
in
inc
adc
adc
and
loopne
das
aaa
mov
add
dec
pop
jno
fxch
sbb
sbb
pop
push
dec
mov
or
jne
mov
(bad)
scas
adc
mov
imul
add
add
loop
add
cld
wrmsr
pop
test
pop
ja
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
add
ror
pop
and
inc
dec
xor
ja
jmp
dec
ja
nop
adc
inc
ja
xchg
and
fstp
and
out
push
add
pop
sbb
cwde
adc
aaa
pusha
out
fidiv
cli
add
ret
dec
je
xchg
sub
jne
fcmovne
test
mov
std
(bad)
jb
stc
clc
xchg
inc
jge
rcr
(bad)
sti
sahf
ins
push
jmp
pop
cmp
aam
les
dec
and
pusha
cmc
add
and
sar
xchg
xor
iret
call
repz
popa
sar
jbe
pop
call
fadd
(bad)
push
cld
aad
pop
dec
inc
or
xchg
stos
lods
xchg
dec
push
mov
jmp
cmc
xchg
and
mov
scas
mov
push
and
push
mov
(bad)
clc
sbb
call
push
ret
inc
sbb
add
in
enter
div
pusha
dec
aad
mov
aam
imul
test
cmp
loopne
sub
sub
lock
cmp
loope
inc
dec
or
(bad)
imul
test
ins
idiv
ins
shr
out
push
ficom
lea
xchg
pop
adc
outs
out
and
mov
call
push
mov
icebp
addr16
enter
dec
ret
fwait
icebp
dec
fstp
and
xchg
outs
loope
scas
jmp
adc
je
icebp
div
arpl
test
out
adc
and
pop
stos
and
xor
xchg
pushf
sbb
int3
pop
cli
movs
mov
popf
dec
cmps
cmp
mov
and
in
retf
(bad)
int
hlt
out
sbb
jmp
mov
or
adc
push
push
pusha
popf
retf
loope
push
cli
cmps
cdq
jno
push
inc
mov
cli
arpl
and
icebp
mov
icebp
adc
and
mov
inc
pop
xchg
push
jge
adc
adc
push
in
or
dec
xor
jg
inc
outs
inc
bnd
test
adc
sahf
add
shl
in
mov
fs
hlt
or
jp
jmp
pop
sub
dec
(bad)
in
fmulp
call
dec
lock
mov
jmp
push
(bad)
fstp
xchg
jge
mov
and
aaa
neg
and
mov
adc
or
rcl
int3
mov
hlt
ja
xchg
inc
loopne
stos
out
das
mov
rcr
pop
out
adc
xchg
(bad)
rcr
call
mov
jge
ins
mov
out
nop
push
or
fidivr
(bad)
xor
out
sub
jp
push
fs
sub
in
imul
addr16
or
aam
jge
mov
xchg
bound
xchg
add
sbb
mov
pop
stos
adc
dec
ds
loop
daa
cmps
dec
dec
in
repz
addr16
mov
dec
xchg
sub
jns
xchg
aad
and
popa
and
cli
adc
and
loop
mov
and
and
sub
es
lds
xlat
dec
popf
jecxz
fsub
push
jmp
dec
imul
mov
bnd
icebp
add
mov
add
dec
cmp
xor
and
mov
adc
sahf
add
add
inc
in
dec
(bad)
mov
mov
and
or
adc
lock
mov
fadd
mov
iret
add
jo
cmp
shl
fnstsw
dec
jmp
dec
dec
shl
(bad)
push
jae
nop
aad
ror
mov
jp
xchg
adc
mov
xchg
scas
jl
mov
mov
loope
add
pop
test
cmp
add
mov
adc
or
pusha
jnp
mov
adc
es
icebp
or
add
jo
mov
push
xchg
mov
sar
ret
pop
ins
push
int
out
xor
push
cmp
cmps
dec
pop
int
push
dec
or
push
mul
mov
out
cwde
les
imul
ss
dec
jne
inc
inc
sbb
ins
mov
dec
xor
jg
iret
push
dec
sbb
and
pop
or
popf
sbb
aaa
inc
mov
mov
arpl
repz
inc
shr
pusha
adc
scas
outs
and
dec
mov
popf
and
adc
sub
jp
add
push
lock
fst
mov
xchg
push
cmc
and
lock
sbb
push
outs
pop
arpl
(bad)
xchg
mov
aas
push
ficomp
push
mov
push
mov
aad
repz
inc
cli
pusha
xor
mov
in
sbb
xchg
mov
call
das
outs
xchg
push
data16
in
sub
and
(bad)
and
ret
pop
fld
frstor
dec
clc
hlt
fbstp
(bad)
pop
fadd
into
iret
mov
mov
mov
sbb
pop
jl
xor
mov
(bad)
fsubr
out
mov
jb
push
int3
sar
fwait
popa
in
cmps
shr
xor
jno
jae
ins
(bad)
jmp
popf
cmp
mov
mov
jbe
push
sub
(bad)
add
test
fstp
cwde
xchg
sti
lahf
xchg
ret
dec
pop
xor
push
add
pushf
mov
inc
xchg
sbb
pushf
pop
inc
shl
jb
push
cmps
xor
pop
call
outs
in
pop
pop
and
fs
push
pop
les
dec
jnp
pop
fdivr
pop
retf
ins
xor
outs
ror
cmps
into
or
ins
sub
repnz
mov
repnz
sahf
adc
lea
test
pop
or
push
inc
pop
mov
ret
jp
mov
loop
jmp
and
pusha
inc
add
stos
or
jbe
push
mov
dec
out
mov
ins
in
js
and
enter
jns
call
retf
fist
xor
out
sahf
push
enter
cmp
jecxz
xchg
and
cmp
push
lahf
add
or
pop
sub
push
or
jae
push
mov
add
imul
add
call
test
push
mov
mov
push
mov
je
adc
(bad)
imul
jae
dec
and
jb
xchg
lods
and
or
cwde
imul
into
pop
shl
add
xchg
xlat
adc
das
and
sbb
add
mov
sbb
outs
daa
jne
sub
sub
paddusw
add
sub
clc
push
adc
ret
mov
inc
mov
cli
ret
loopne
mov
ss
scas
mov
pop
jmp
add
out
jle
popf
and
dec
inc
cmp
pop
jmp
push
icebp
add
or
adc
push
fisubr
xor
cmp
mov
cmp
adc
repz
jmp
(bad)
push
out
movs
lds
arpl
sti
or
inc
mov
mov
(bad)
sub
pop
push
adc
adc
or
fisttp
and
xchg
jle
test
lock
ret
mov
or
fidiv
sub
je
mov
daa
out
(bad)
movs
inc
sbb
mov
lds
cwde
fwait
or
(bad)
sub
in
test
xor
mov
dec
pop
mov
jp
adc
add
mov
jl
scas
mov
mov
out
jge
(bad)
out
push
(bad)
cmc
jnp
enter
push
addr16
sbb
popf
icebp
pop
dec
das
pop
pop
mov
sahf
sub
push
std
ja
(bad)
test
sbb
cli
pop
dec
sub
jae
lods
mov
mov
pop
hlt
add
add
loopne
pusha
ss
xlat
outs
adc
jb
mov
daa
imul
jmp
imul
add
mov
pusha
imul
data16
sti
mov
nop
lods
xor
(bad)
inc
fstp
sbb
fmul
cmc
pop
jle
cmps
das
retf
(bad)
arpl
out
fimul
pop
jge
jo
dec
pop
add
jg
pop
cmp
mov
jp
or
bound
lods
xor
mov
mov
jbe
add
test
xchg
mov
jbe
sbb
xor
add
pushf
add
inc
addr16
inc
ds
or
xchg
sar
pop
cmp
mov
js
sbb
xor
mov
add
icebp
mov
(bad)
cs
stos
push
mov
stos
(bad)
aam
in
ins
test
jb
inc
jmp
adc
mov
push
ds
pop
jp
dec
sahf
nop
dec
mov
push
gs
sbb
lea
jnp
mov
add
sbb
xor
xor
mov
add
(bad)
sbb
clc
imul
jbe
pop
fdiv
inc
xor
js
sahf
shl
gs
xor
cmps
into
daa
pop
mov
daa
out
adc
int3
imul
inc
dec
jg
sbb
push
arpl
xor
test
loop
xchg
stos
xchg
mov
out
or
xchg
or
js
mov
xlat
imul
xor
ror
out
das
sub
push
int3
out
or
push
xor
cmp
je
call
push
inc
lods
loopne
ror
push
cmp
cli
fcomp
pop
ja
sbb
mov
je
inc
ret
jp
jmp
loopne
lods
icebp
add
and
sbb
ret
sahf
inc
shl
mov
in
push
je
clc
cmps
or
rol
neg
inc
pushf
(bad)
lock
or
cmps
pop
popa
jns
adc
sbb
xchg
test
xchg
arpl
clc
ins
dec
aam
hlt
icebp
sub
push
pslld
dec
ja
sub
clc
xchg
iret
movs
push
scas
mov
add
xor
scas
jle
cwde
aaa
gs
xchg
iretw
mov
push
adc
je
fdiv
mov
pushw
and
adc
push
jns
lods
jo
pop
hlt
sub
add
out
das
and
jmp
jmp
dec
add
xchg
mov
cld
out
es
inc
push
ss
sbb
enter
sub
ins
dec
or
add
shl
mov
jb
les
cmc
mov
add
fstp
and
cld
pop
dec
arpl
dec
mov
les
ins
retf
cdq
icebp
mov
cmp
cli
ins
shl
int
repz
cmp
fisttp
jmp
xor
mov
or
add
fs
enter
jp
cmp
jge
sahf
xchg
xchg
hlt
test
out
fs
sbb
int
jge
push
inc
repnz
cmp
fcomp
xor
adc
and
push
arpl
ins
ss
call
aad
sbb
out
sti
xchg
xor
mov
ficomp
jns
iret
cmps
rcl
xchg
adc
jae
cmps
cdq
sbb
fistp
inc
or
inc
sub
mov
adc
jne
repz
jb
cld
sub
mov
pushf
push
jg
rcr
inc
popa
push
(bad)
call
aam
enter
aad
push
jl
(bad)
mov
cld
dec
rcr
sbb
dec
adc
invd
retf
rcr
xchg
rcl
retf
cli
clc
adc
bound
or
inc
mov
push
push
retf
or
jnp
and
push
inc
in
scas
push
cmp
sub
xchg
and
retf
popf
xor
mov
xor
inc
je
jae
repz
xchg
lock
add
jne
and
dec
inc
add
mov
ds
fisub
xor
out
ins
sbb
jge
dec
mov
movs
ins
shl
push
pop
sbb
inc
adc
xor
scas
dec
sti
ror
mov
add
xlat
push
xor
sbb
add
or
fwait
(bad)
mov
pop
in
adc
div
xchg
loopne
sbb
(bad)
mov
sahf
mov
jmp
or
xchg
ins
mov
sti
cmps
push
in
(bad)
in
push
sub
inc
lods
adc
pop
pop
cmps
fisubr
pop
enter
jmp
xchg
adc
and
dec
sub
ja
daa
inc
pop
nop
call
in
imul
mov
pop
cmps
int3
(bad)
stos
pusha
add
cld
mov
sub
dec
fs
inc
jle
out
pop
test
pop
xor
and
mov
call
es
push
xchg
pop
push
out
lock
jbe
mov
xchg
xchg
pop
int3
ret
imul
out
call
cmp
fldcw
int
jmp
add
adc
pop
inc
jmp
mov
test
pop
xor
mov
je
loopne
sbb
clc
int
cmp
dec
or
shl
cmp
pop
fldenv
pop
fst
mov
scas
xor
mov
add
or
xchg
shl
outs
std
mov
out
push
fwait
adc
inc
lods
or
pop
pushf
ins
lods
add
or
gs
mov
aam
inc
in
scas
mov
std
out
or
xlat
dec
mov
outs
sub
mov
add
mov
jns
inc
mov
popf
mov
or
push
dec
pop
mov
cmp
mov
imul
pop
pop
jmp
and
jecxz
mov
into
fwait
adc
cdq
pusha
xor
bnd
popf
popf
arpl
push
imul
cmc
cwde
inc
push
and
cdq
popa
and
out
aas
out
ret
cmps
mov
repz
loope
mov
sub
mul
repnz
lea
out
ins
dec
xchg
scas
cmps
dec
mov
adc
sub
xor
xchg
icebp
test
dec
out
inc
sbb
addr16
jp
lock
enter
je
sbb
inc
iret
pop
retf
jne
fs
dec
dec
in
test
or
pop
movs
stos
test
jle
aam
cmp
ins
popa
xchg
xchg
dec
fisub
mov
cmp
rcl
xchg
xor
fisttp
jmp
push
fidivr
inc
mov
mul
lods
mov
add
cmp
ins
arpl
mov
inc
mov
inc
or
mov
pushf
shl
scas
cmps
adc
jb
fdivr
ds
das
mov
imul
jmp
dec
popa
clc
mov
mov
and
sbb
pop
jp
mov
(bad)
dec
push
movs
push
lock
popa
mov
pop
fs
popa
ins
xor
or
adc
repz
sub
push
add
and
scas
mov
sti
inc
jmp
dec
xchg
stc
sbb
and
arpl
hlt
jno
(bad)
ins
push
jge
shl
rcr
xchg
sbb
cmc
stos
dec
mov
cmps
pop
in
xchg
rcl
xchg
pop
popf
xor
cmp
jbe
lods
inc
inc
jns
out
dec
(bad)
jo
lock
loop
(bad)
xchg
out
mov
lods
inc
cmp
aaa
jmp
rcr
mov
outs
in
adc
outs
and
push
shl
ror
dec
push
sub
jo
test
lods
push
jo
xchg
dec
ficomp
js
push
cmps
adc
cmp
sbb
cmp
sub
int3
in
ret
xchg
pop
jmp
jno
and
pop
xor
(bad)
sbb
and
sbb
test
(bad)
dec
test
div
ins
lds
loope
jmp
pop
aaa
xchg
xchg
ja
dec
mov
retf
or
mov
mov
aas
dec
xchg
fwait
rol
and
push
pop
(bad)
fimul
jb
or
pop
movs
sbb
bound
lods
and
imul
push
sub
add
in
stos
inc
lods
fadd
es
inc
sbb
inc
leave
daa
dec
data16
dec
inc
mov
js
jmp
cmp
push
adc
push
push
adc
fidivr
out
ja
push
lock
mov
xor
jb
xlat
stos
dec
out
jnp
xchg
or
cs
sbb
add
mov
adc
hlt
fisttp
mov
dec
dec
es
sub
xor
rcl
sub
lods
hlt
add
stc
out
jg
stc
out
jg
pop
add
dec
add
out
fsubr
nop
cmp
dec
inc
dec
inc
scas
inc
pusha
or
sbb
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
fadd
in
fld
in
shl
stc
add
add
daa
add
add
add
cmps
add
add
xor
cmp
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
and
add
add
add
xor
xor
sub
add
add
add
add
push
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
adc
inc
push
pop
inc
in
rol
add
out
les
aaa
cmp
mov
sbb
dec
ja
xchg
pop
shl
cld
aam
push
ds
jge
ret
pop
add
es
add
push
aam
rol
(bad)
mov
loop
out
(bad)
inc
jno
aam
xchg
mov
retf
sahf
sub
mov
out
mov
mov
cmp
adc
rcr
sbb
int
gs
and
out
(bad)
sahf
mov
ins
cmp
ins
jge
fwait
popf
push
pop
mov
lods
add
shl
or
xchg
and
leave
scas
popa
add
loope
xor
jle
cdq
push
jns
int
or
xchg
sbb
mov
(bad)
ror
pop
clc
(bad)
push
sbb
pop
cdq
and
inc
dec
push
mov
aaa
ins
add
and
cld
rcr
jecxz
or
xchg
cli
cli
ja
jnp
cmp
sub
add
out
jle
dec
or
or
nop
ret
push
arpl
xchg
test
push
mov
arpl
or
enter
stos
popf
fld
imul
enter
sbb
movs
popa
fld
and
mov
inc
stos
mov
dec
jmp
xchg
stos
mov
retf
push
xchg
hlt
push
push
pop
outs
push
shr
mov
daa
push
or
fcom
jmp
xor
adc
adc
and
cmp
jg
xor
push
mov
sti
xchg
out
setb
mov
sub
jns
jnp
sub
mov
jae
jmp
and
in
ror
mov
shl
push
push
add
pop
xchg
rcl
push
add
inc
scas
out
ja
push
sbb
mov
cmps
repnz
cmp
daa
jl
mov
sub
dec
retf
call
cmps
push
add
out
shr
adc
xor
cmp
mov
xchg
nop
xlat
jb
adc
repz
mov
adc
stos
(bad)
(bad)
ss
pop
dec
push
leave
pop
jl
jmp
jne
mul
retf
dec
push
(bad)
mov
icebp
popf
call
fisub
(bad)
les
sub
cmps
and
dec
mov
aas
cwde
mov
xchg
push
out
fcmovnu
pop
(bad)
cmp
sbb
cmc
cmp
mov
cwde
adc
push
idiv
clc
pop
and
inc
pop
pop
cdq
test
pusha
mov
(bad)
fdivr
add
je
pushf
adc
mov
ja
test
gs
or
adc
xchg
sub
jg
mov
xchg
mov
lahf
and
ret
sbb
ret
pop
jmp
je
adc
jo
scas
jle
dec
rcr
cdq
adc
das
mov
daa
je
test
sub
popf
and
fld
fwait
push
sub
pop
scas
dec
sub
cmps
inc
mov
loope
push
cmp
add
jnp
addr16
push
or
fadd
cmp
or
rol
mov
aad
xchg
sbb
push
jle
fcmovb
(bad)
pushf
mov
cmp
or
mov
arpl
sbb
retf
mov
std
scas
daa
jg
icebp
push
rol
add
push
and
xchg
in
jl
pop
iret
push
ds
xchg
je
shl
ins
into
(bad)
leave
adc
xor
cmp
jo
stos
shr
ret
je
cmp
sar
pop
pop
sbb
pusha
sbb
jnp
(bad)
data16
dec
lock
xchg
loop
xchg
ss
sub
into
sbb
or
xor
jg
sub
jle
aaa
addr16
stc
mov
mov
add
push
sbb
cmps
nop
cmp
ins
(bad)
or
(bad)
mov
inc
mov
sub
mov
loop
pop
cmps
or
push
enter
aad
jl
(bad)
test
xor
fsubr
mov
sbb
pop
stos
sbb
sbb
rcl
(bad)
push
mov
push
sbb
mov
xor
fdiv
push
inc
push
pop
outs
lods
mov
cwde
lea
xchg
pop
out
adc
ja
add
mov
sbb
push
cwde
sbb
xchg
cmps
jge
ret
test
daa
loop
stos
inc
add
cmps
in
outs
mov
jp
jl
aad
cmps
ds
mov
jns
es
into
jne
mov
jns
arpl
mov
mov
test
jge
div
es
out
sbb
pop
scas
pop
mov
add
lock
movs
retf
ficomp
lock
fwait
xor
xchg
in
and
push
inc
enter
xor
cmp
dec
ins
mov
pop
aas
in
mov
fdivr
loope
add
pusha
and
scas
loopne
popa
push
lock
sbb
mov
mov
sbb
inc
inc
adc
cdq
push
push
pop
push
(bad)
push
loopne
call
mov
daa
jecxz
call
mov
cdq
inc
jne
je
mov
push
cwde
out
(bad)
mov
cmp
cmp
adc
clc
jb
fcmovne
xchg
(bad)
push
scas
loope
(bad)
dec
scas
xchg
and
aad
lock
or
cs
setge
push
mov
push
xchg
ja
xchg
cld
push
ja
xchg
in
movs
cmps
popf
popf
and
stos
clc
mov
leave
mov
ja
inc
fimul
loop
pop
mov
js
loopne
sbb
or
inc
cmp
add
sbb
js
retf
sbb
jns
inc
adc
jne
mov
leave
ins
adc
sub
out
and
dec
xchg
mov
mov
not
push
cmps
scas
fs
in
dec
lods
fwait
inc
jb
data16
mov
dec
jns
lahf
dec
cmp
mov
icebp
stos
pop
(bad)
fild
mov
shl
xchg
cmp
ins
addr16
or
add
cmp
rep
mov
repnz
arpl
mov
adc
lds
sub
pop
mov
aad
cmp
cmp
js
aad
mov
aaa
push
rcl
lods
mov
add
mov
fucomp
mov
(bad)
jmp
push
pop
cmp
adc
sti
mov
inc
(bad)
cmp
or
xchg
jnp
jno
pop
inc
jb
or
loope
in
mov
and
lods
adc
loop
pop
pop
mov
es
adc
fcom
inc
push
xor
and
ret
lahf
rcl
sub
dec
sub
sbb
das
cmps
nop
aas
mov
rol
das
popf
sub
pop
push
xor
mov
imul
add
fs
js
mov
and
or
out
add
pop
lds
mov
adc
hlt
call
lea
mov
aam
mov
aaa
stos
xor
xchg
and
add
in
push
out
cmp
fild
int
(bad)
or
cli
add
pop
dec
dec
and
std
sahf
mov
mov
sub
outs
dec
or
lods
dec
push
fsubp
retf
sub
mov
lahf
xchg
xor
cmp
mov
stc
fdivr
jg
push
dec
or
int
sub
in
loope
jmp
xor
sahf
xchg
hlt
arpl
mov
push
push
cmps
inc
jmp
leave
jecxz
cmp
cmp
adc
jne
aas
mov
or
and
pop
lock
mov
push
mov
sar
arpl
mov
dec
outs
or
shl
les
add
icebp
cmp
jge
jp
cmp
hlt
mov
mov
das
loop
dec
sahf
dec
loop
mov
or
pushf
aas
js
call
sub
mov
sahf
push
les
test
nop
pop
ins
dec
pop
mov
bound
jo
mov
mov
lods
push
and
mov
inc
cmp
adc
mov
inc
(bad)
lods
xor
add
sbb
mov
xchg
mov
hlt
out
ret
pop
jae
push
sti
imul
loope
sti
ds
push
lahf
mov
mov
fwait
jnp
out
daa
xchg
jae
inc
sti
jno
sbb
and
inc
inc
mov
fmul
jp
aad
nop
scas
xchg
ret
mov
icebp
pop
xor
inc
loop
adc
mov
mov
ret
mov
xchg
mov
add
(bad)
sub
sbb
in
add
mov
je
call
stos
ins
ins
pop
and
push
mov
test
sbb
cmp
pop
xor
pop
mov
jnp
cmp
cmp
mov
ja
jo
jmp
sub
mov
mov
pop
push
sbb
cmp
dec
ins
inc
push
cli
imul
addr16
repnz
out
or
mov
(bad)
arpl
xchg
call
xor
sbb
jnp
inc
adc
jp
lea
popf
mov
cli
pop
fcomp
add
dec
icebp
leave
daa
mov
test
out
shl
loope
pusha
mov
enter
mul
sbb
push
cli
push
rcr
call
shl
pop
pop
in
retf
jle
mov
jp
test
les
pop
add
mov
sahf
(bad)
sbb
(bad)
cmps
adc
pop
shl
mov
mov
frstor
cmp
clc
out
inc
sub
nop
and
test
mov
mov
imul
push
loopne
xchg
je
dec
mov
mov
pushf
int
cdq
ins
cmp
adc
in
mov
jb
push
xor
push
pop
(bad)
into
je
sub
loope
loope
mov
adc
loopne
jne
stos
or
aaa
xchg
sbb
cmp
jnp
cmps
movs
xlat
push
(bad)
adc
mov
(bad)
mov
dec
shl
int3
mov
sbb
das
jns
cmps
xchg
repz
cmp
push
nop
out
dec
sbb
imul
retf
xor
mov
xlat
or
test
cmps
in
push
mov
mov
and
push
hlt
imul
test
push
sti
jle
stc
popa
cmps
or
or
sti
jecxz
std
call
sbb
outs
inc
(bad)
hlt
mov
and
addr16
push
pop
fimul
push
cmc
loop
sbb
mov
adc
lahf
sahf
test
jno
lds
jne
outs
sahf
lea
jp
dec
movs
add
cmp
cmp
out
iret
push
jge
xchg
sub
pop
dec
adc
adc
mov
sub
fld
pop
inc
popa
and
mov
enter
push
popa
jp
pop
mov
cmc
mov
push
icebp
inc
les
fldenv
jne
stos
mov
popa
cmp
je
cmp
push
push
pop
outs
retf
hlt
mov
fistp
cdq
scas
push
cmp
popf
sahf
adc
mov
sub
mov
enter
call
push
lds
js
ins
mov
les
ret
loop
(bad)
push
fmul
push
mov
dec
(bad)
cmp
jmp
sbb
add
xor
push
outs
pushf
cld
ds
push
mov
push
int3
fistp
sbb
(bad)
or
fstp
jne
leave
push
sbb
sub
dec
xchg
mov
sahf
and
and
adc
test
cmps
cld
scas
fisubr
icebp
out
test
movs
ins
push
mov
ja
lods
arpl
inc
xor
xor
sbb
xchg
(bad)
(bad)
aaa
es
es
dec
aam
mov
test
pmuludq
sub
arpl
xor
or
add
jmp
stc
out
xchg
sbb
dec
xchg
not
fbstp
jmp
std
xchg
in
push
daa
mov
inc
daa
pop
inc
push
adc
mov
jmp
gs
jb
xor
mov
mov
cmp
cmps
pushf
xchg
clc
mov
pop
jns
mov
shl
fdiv
fisub
int
dec
xor
cdq
repz
sub
xchg
loop
pop
lods
and
sub
pop
adc
sub
test
jo
pop
cwde
outs
outs
dec
popf
inc
jge
rcr
test
rol
into
idiv
ja
ret
jg
jg
jl
jp
test
leave
sub
mov
iret
rcr
adc
push
pop
movs
push
jb
lods
adc
cli
fistp
lods
je
aaa
pop
das
mov
lock
add
arpl
popf
addr16
or
jo
out
nop
push
adc
mov
or
ja
aad
xchg
pop
sti
in
xor
loop
sti
jle
div
dec
push
cwde
cmp
popf
pop
mov
jbe
jp
xor
jae
push
jge
and
and
mov
jne
mov
(bad)
fstp
cmp
sbb
or
repnz
xchg
mov
jl
(bad)
rcl
mov
xor
sbb
rcl
jnp
inc
push
dec
sbb
or
jno
retf
add
push
xchg
out
cdq
cmp
dec
mov
push
push
scas
pop
xor
hlt
push
lods
push
sbb
cli
or
or
movs
imul
jmp
(bad)
adc
gs
mov
add
test
dec
xchg
pop
(bad)
into
push
popf
imul
les
iret
mov
call
and
mov
fcmovu
pop
retf
jecxz
jmp
in
cmc
or
push
pop
out
mov
jg
dec
test
push
mov
mov
(bad)
(bad)
out
lea
dec
sti
mov
pop
cmps
push
outs
dec
data16
sbb
mov
and
xchg
dec
imul
jo
pop
add
ins
aad
outs
pop
nop
arpl
mov
push
and
xchg
jbe
leave
ins
sbb
bound
shl
stos
cmps
xchg
xor
xchg
cmps
shl
aam
ins
fstp
repz
enter
mov
push
call
lea
ret
dec
inc
push
cmps
sub
or
mov
xchg
mov
adc
aas
push
ins
jp
xor
mov
push
call
dec
shl
pop
adc
and
lods
lahf
sbb
sar
push
mov
neg
add
or
fnstsw
mov
push
hlt
dec
pop
push
test
push
fnstsw
adc
div
call
jno
push
fidiv
test
mov
cld
stos
xchg
and
out
and
jmp
dec
push
inc
lds
aam
mov
cs
addr16
(bad)
aas
cmp
sahf
sahf
sbb
or
nop
pop
add
into
aas
ficom
hlt
ret
pop
add
pop
and
mov
xchg
push
cmps
(bad)
adc
xor
xchg
js
sar
repnz
pop
(bad)
sub
lea
ror
adc
push
cmp
sbb
lds
sbb
jl
std
lea
mov
xchg
mov
dec
iret
dec
fcomp
and
add
pop
push
mov
stos
lods
or
(bad)
nop
daa
ret
(bad)
mov
test
(bad)
(bad)
xchg
rcl
mov
push
adc
sub
jge
outs
(bad)
scas
jg
bound
fisub
jmp
cmp
sub
lock
pop
xchg
adc
loop
mov
cmp
sbb
fild
inc
mov
retf
add
jecxz
add
daa
push
mov
push
sbb
cmp
icebp
adc
shr
fs
dec
sbb
addr16
test
lods
loope
xor
inc
bound
gs
scas
pop
mov
mov
aas
fstp
(bad)
je
dec
xlat
not
shl
jle
cmp
xor
int3
scas
js
push
pop
sbb
fstp
push
sbb
sub
mov
adc
push
or
neg
jle
cmp
iret
shl
pop
cli
rcl
pushf
mov
jbe
(bad)
mov
mov
ror
bound
cmp
outs
stc
xor
out
and
mov
mov
ja
and
pop
aaa
and
(bad)
mov
xchg
adc
(bad)
and
das
and
ror
mov
test
aas
(bad)
cld
repz
aas
(bad)
cld
repz
jmp
lock
stos
out
mov
and
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fld
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
add
inc
inc
push
pop
inc
arpl
jl
hlt
xchg
cmp
or
es
pop
cmp
xor
scas
lods
into
mov
inc
pop
in
(bad)
mov
repz
icebp
iret
mov
cmps
mov
mov
lods
mov
loope
xchg
sbb
mov
loop
inc
in
neg
push
mov
into
pop
movs
jo
push
mov
push
cmps
cmps
pop
xchg
fdivr
rol
pop
jp
and
daa
mov
fwait
movs
pop
mov
and
out
ja
rol
lahf
bnd
pop
(bad)
jmp
and
push
mov
cmp
dec
fild
inc
dec
scas
jnp
ins
hlt
xor
out
neg
pop
(bad)
rcr
mov
popf
fwait
outs
(bad)
jns
pop
mov
and
jp
iret
out
ss
js
xchg
shl
or
lods
xor
gs
(bad)
cmps
mov
jp
test
jb
out
gs
gs
out
push
pop
pop
cmps
shl
mov
fwait
jg
ss
aam
sbb
cmp
outs
stc
call
lods
or
xchg
mov
fdivr
mov
lods
jge
xlat
mov
push
retf
out
es
cld
loop
retf
add
push
xchg
retf
pop
cmp
ficom
cmc
mov
sbb
scas
cwde
fs
popf
adc
jns
push
dec
fistp
into
inc
mov
idiv
(bad)
jmp
and
xchg
fcom
mov
push
jmp
push
daa
out
sub
xor
shr
jecxz
cs
das
in
cmp
inc
mov
loop
les
(bad)
cld
pop
std
mov
outs
xchg
pop
push
dec
dec
(bad)
push
mov
inc
fsubrp
dec
(bad)
neg
mov
pop
stos
rcl
sar
fucomp
movs
fdivr
mov
ins
and
and
repnz
out
ds
icebp
sbb
and
dec
mov
xchg
and
ds
sti
jecxz
sub
mov
je
ffreep
jne
xchg
mov
sbb
adc
inc
shr
add
adc
inc
shr
add
adc
inc
shl
or
and
jb
ds
hlt
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
add
sbb
push
inc
iret
ja
in
es
(bad)
sbb
push
sub
in
push
int
cld
adc
jle
mov
mov
fst
lea
je
xor
adc
xchg
out
stos
scas
sbb
test
add
xchg
les
movs
retf
jnp
jne
pushf
jne
add
add
shl
scas
fadd
xchg
sub
pop
inc
sar
call
mov
sbb
cmp
test
in
ins
jnp
jle
pop
mov
jo
sub
jae
iret
pop
mov
jb
and
js
sub
and
sbb
add
mov
out
int3
fstp
pop
jmp
add
xor
mov
xchg
aam
push
cli
iret
cdq
mov
jp
xchg
pushf
or
mov
fcmovu
inc
and
mov
mov
pop
lds
fadd
mov
xchg
outs
jae
inc
jnp
pop
mov
ficomp
cwde
ret
or
movs
adc
push
xor
mov
pop
ror
jp
fmul
adc
cmc
or
fisttp
adc
loope
pop
jge
pop
add
fimul
std
bound
lods
inc
das
out
push
das
not
fwait
and
xchg
idiv
lfs
jns
cli
pop
lahf
push
cmp
mov
stos
iret
test
test
dec
xor
popf
int
mov
add
fst
push
xchg
mov
sar
clc
pop
ins
fnsave
mov
push
ret
frstor
xor
dec
inc
ret
inc
test
test
push
mov
mov
push
dec
movs
mov
in
ret
mov
(bad)
pop
jg
pop
movs
mov
xor
cwde
cmp
sti
dec
stos
dec
mov
nop
push
mov
in
or
stos
adc
sub
add
mov
push
cmp
shl
in
push
and
loope
xlat
pop
in
push
ss
ss
xchg
mov
mov
jbe
pop
aas
jecxz
push
cld
mov
loopne
mov
jbe
ja
arpl
arpl
mov
jmp
aam
pusha
movs
rcr
add
mov
adc
inc
pop
aad
jp
cwde
sbb
inc
cmps
jle
shr
inc
or
dec
dec
jne
add
(bad)
popa
xchg
shl
dec
retf
mov
dec
dec
adc
data16
mov
loope
sti
xchg
mul
add
jp
and
push
gs
(bad)
stos
adc
stc
bound
dec
lods
aaa
(bad)
adc
dec
repz
sahf
out
or
xor
(bad)
xor
adc
xchg
mov
adc
pop
in
lods
fsqrt
push
cwde
pop
rol
sbb
mov
cmp
imul
add
push
pop
ins
cmp
daa
in
sub
cmp
and
xor
add
or
lds
int
ins
cli
sub
mov
dec
jle
xchg
sub
pushf
pop
stos
sbb
xchg
test
sbb
loope
and
mov
add
dec
mov
lock
jo
and
(bad)
in
les
repz
adc
sub
shl
and
(bad)
call
cmps
loopne
push
setae
cmp
push
mov
pop
jmp
pop
sahf
scas
scas
xchg
stc
add
cwde
xor
in
xchg
mov
cli
scas
repnz
repnz
jmp
int
adc
cmp
inc
stc
outs
cmp
mov
in
lea
addr16
mov
push
xor
xor
mov
or
inc
dec
out
sbb
jnp
pop
daa
test
repnz
dec
xor
and
lahf
pop
ins
push
sbb
(bad)
mov
push
dec
sbb
neg
loopne
stc
jecxz
jno
jo
clc
or
cmc
dec
mov
jb
xchg
pop
stc
mov
adc
das
push
jg
(bad)
mov
dec
pop
mov
xchg
cdq
retf
sbb
xor
add
sbb
add
mov
lahf
dec
stos
xor
ret
jo
data16
clc
mov
and
pop
pop
xor
sbb
lds
outs
icebp
arpl
mov
ret
(bad)
mov
or
scas
xor
fld
shl
pop
mov
mov
inc
inc
retf
cmp
shr
sti
sbb
pushf
inc
and
inc
sbb
movs
leave
sbb
nop
and
fldcw
(bad)
rcl
inc
xor
loope
and
dec
mov
sub
inc
ret
fptan
dec
sub
add
shr
sti
sbb
pushf
inc
and
inc
sbb
movs
leave
sbb
nop
and
fldcw
cmp
jo
jo
pop
pop
inc
cmp
dec
dec
inc
push
jg
pop
cmps
jnp
pop
jns
es
dec
sbb
sbb
test
cmp
movs
or
or
or
add
and
pop
cmp
dec
cmp
pushw
jle
add
add
add
aaa
add
pop
push
pop
ss
je
xor
mov
xchg
and
sbb
jo
push
jmp
rcr
in
fnsetpm(287
mov
push
rcl
outs
leave
xchg
pop
dec
jl
and
cs
(bad)
icebp
mov
push
enter
adc
ja
repz
push
mov
push
repz
stos
imul
jl
test
call
push
shr
out
sbb
pop
jb
ins
cmp
(bad)
adc
pop
add
jnp
push
jne
jmp
fist
inc
and
cld
mov
call
repz
mov
mov
push
push
jns
imul
pop
shr
aas
fiadd
xor
pusha
leave
push
inc
out
ret
or
jne
lods
nop
xor
jecxz
leave
outs
mov
out
dec
ret
mov
inc
add
mov
and
jo
popaw
jecxz
add
stos
je
add
in
push
xor
jle
cli
cmp
out
test
dec
xchg
(bad)
jl
mov
gs
sbb
mov
mov
pop
es
fcmovbe
inc
cmp
add
(bad)
fst
retf
movs
or
fwait
xor
mov
sar
fimul
pop
add
add
and
jmp
pop
xchg
out
mov
dec
jmp
pop
pop
cmp
push
cli
mov
pop
jmp
jle
jmp
les
sub
sub
mov
aad
mov
aas
xchg
in
shl
xchg
lds
add
inc
stos
loop
imul
sbb
jmp
idiv
aaa
sub
out
sub
stos
mov
jge
arpl
inc
ja
jp
sar
imul
(bad)
pop
push
xchg
out
hlt
vfrczss
out
mov
sub
xchg
adc
and
push
and
fcom
test
pop
shr
mov
adc
sahf
(bad)
sub
xchg
mov
cdq
test
popa
xlat
stos
ret
lahf
mov
sbb
or
lods
daa
xchg
je
mov
test
scas
jle
and
loopne
int3
icebp
std
fisubr
xor
cmp
stos
lahf
mov
sbb
ja
fiadd
stc
jae
push
mov
dec
out
jl
jae
retf
iret
adc
mov
mov
je
std
jecxz
icebp
bound
lea
pop
xor
mov
dec
xor
loop
push
retf
add
out
fs
sbb
add
adc
bound
and
inc
and
nop
int
js
dec
or
out
adc
(bad)
pop
xor
inc
adc
add
or
(bad)
dec
pop
in
aaa
sbb
jmp
or
push
sbb
scas
fmul
and
xor
aad
jecxz
cld
sti
fadd
mov
imul
sbb
aam
(bad)
lea
cmp
rol
outs
or
push
mov
pusha
cld
(bad)
pop
mov
loopne
or
and
jne
pop
adc
(bad)
cmp
xchg
repz
mov
jns
jnp
addr16
xchg
test
push
or
jmp
cdq
sub
les
add
aad
pmaxsw
out
dec
into
cmp
xacquire
fidiv
pop
dec
pop
cs
xchg
or
fwait
pushf
mov
lds
lds
cs
clc
or
fist
mov
scas
out
fmul
mov
cmps
int
repz
adc
je
fistp
cmps
dec
cli
inc
jmp
and
push
push
mov
vcvttss2si
pushf
push
jl
cmp
sbb
inc
repz
jo
leave
loopne
in
retf
icebp
aas
imul
sti
pop
push
sbb
call
push
inc
lock
pop
jp
lods
icebp
enter
loop
sub
test
es
ds
jnp
inc
jge
sbb
inc
mov
fisubr
in
jns
jl
fcomp
fidivr
adc
mov
mov
push
lods
mov
xlat
sbb
cwde
lahf
mov
push
or
xchg
adc
pushf
add
sbb
xchg
xchg
mov
retf
mov
dec
pop
pop
xor
mov
hlt
stc
and
retf
sbb
jmp
pusha
mov
cmps
mov
mov
sbb
add
(bad)
ins
mov
nop
adc
lock
cmp
ss
mov
bound
cmp
inc
push
iret
mov
sub
adc
rcr
jl
mov
(bad)
xchg
retf
fs
pushf
xchg
and
(bad)
call
xchg
sahf
test
cmps
mov
add
inc
frstor
and
mov
mov
adc
lgs
icebp
or
pop
cmp
mov
add
push
vpaddsb
fidivr
dec
xchg
pushf
pop
outs
or
nop
or
dec
mov
jnp
neg
rcr
repz
xor
dec
outs
ss
pop
retf
xchg
xor
adc
push
jb
jo
shl
arpl
(bad)
push
retf
test
bound
fld
mov
inc
inc
sub
mov
and
add
cmp
int3
shl
sub
add
mov
scas
and
push
mov
sbb
adc
or
xor
cmps
clc
add
test
inc
aad
jae
cmp
cmp
lock
stos
mov
jno
cmps
test
aad
xor
dec
cmps
or
(bad)
int
arpl
repz
loopne
bound
call
mov
dec
push
jle
inc
imul
cmp
pop
and
push
and
inc
pop
or
jge
repnz
(bad)
push
mov
call
push
pop
rcr
sbb
or
pop
cmps
mov
ja
mov
fstp
ds
pop
enter
jno
scas
push
add
scas
(bad)
fidiv
jmp
and
cmp
ins
(bad)
mov
aaa
mov
or
aam
mov
test
outs
mov
push
jl
add
mov
sub
push
loope
idiv
pop
pop
adc
loopne
adc
imul
xor
iret
inc
scas
cmp
ja
push
std
icebp
repnz
xchg
loope
lea
movs
call
clc
push
adc
test
or
test
xor
or
add
pop
imul
sar
fwait
out
jg
mov
sub
dec
nop
mov
mov
nop
xlat
sbb
mov
dec
les
jp
shr
dec
imul
xor
icebp
mov
imul
popa
add
movs
pop
pop
jne
retf
dec
bound
mov
popf
adc
popa
cmps
movs
enter
jns
daa
imul
into
leave
mov
fnstcw
cmps
dec
push
pop
popf
(bad)
test
mov
movs
dec
inc
jge
iret
jnp
dec
or
jmp
stos
or
loopne
sahf
dec
cmp
mov
retf
add
jbe
clc
or
jge
or
mov
push
test
sbb
jl
daa
inc
in
sbb
add
stos
jmp
cmp
pop
jb
adc
addr16
push
dec
shl
imul
test
push
cmps
jecxz
fwait
push
add
das
outs
jp
inc
lock
dec
scas
add
sti
bound
pop
jno
push
jp
cmp
inc
xor
cdq
mov
das
iret
adc
dec
and
cmp
dec
mov
pop
ret
jne
push
cmp
into
push
cmp
mov
sbb
in
imul
adc
out
aas
cld
push
cmp
adc
pusha
mov
aaa
inc
dec
aas
pop
lds
cmps
dec
(bad)
lods
inc
test
xchg
push
and
pusha
stos
cld
dec
cmp
cmc
retf
mov
inc
cmc
push
test
call
in
jmp
push
lahf
mov
pop
dec
ror
fidivr
iret
loope
leave
sbb
add
inc
stc
and
jbe
fistp
fnstenv
xchg
add
enter
push
push
cmp
or
(bad)
xor
fild
test
mov
fbld
adc
xchg
mov
push
repnz
shr
fld
sub
mov
mov
out
das
add
sbb
sub
mov
adc
loopne
aaa
adc
push
nop
cmps
jb
pop
sub
pop
and
outs
push
and
sbb
jo
jge
stos
(bad)
xchg
jmp
jp
(bad)
mov
mov
adc
aaa
pop
and
and
neg
add
mov
xchg
sbb
or
cmp
lods
rcr
mov
aam
pop
lea
outs
das
inc
mov
xchg
(bad)
and
into
mov
xor
sti
jbe
leave
xor
stos
pop
int3
clc
or
(bad)
adc
out
xlat
popa
sub
fidivr
and
gs
mov
inc
pop
imul
fisubr
aaa
lods
hlt
bound
push
jae
int
fcomp
lock
xchg
fwait
ins
fldenv
sahf
cmp
add
mov
dec
retf
inc
fs
addr16
clc
setl
in
das
push
mov
mov
sub
xor
jg
mov
les
push
jno
sub
outs
pusha
loopne
or
mov
mov
mov
imul
gs
mov
xor
rcl
jmp
push
and
ret
and
arpl
push
cwde
cmp
sbb
mov
neg
push
imul
fild
push
dec
cmp
inc
and
clc
loope
xchg
adc
repz
pop
aas
mov
push
fisttp
xchg
mov
push
and
xchg
push
sbb
iret
lds
cli
daa
sahf
sub
int
mov
mov
popf
sahf
cld
aad
mov
jmp
mov
mov
mov
not
xor
lds
pop
iret
mov
pop
nop
mov
fsub
loopne
in
cmps
cmp
rol
stos
add
pop
sbb
pusha
or
test
adc
mov
adc
retf
lea
mov
pop
pop
addr16
sti
jns
ds
mov
(bad)
hlt
adc
xchg
cmp
mov
xor
cmp
or
push
pop
sub
and
pop
(bad)
dec
xor
loopne
xchg
pop
jle
pop
pop
cmc
gs
sub
adc
imul
mov
adc
(bad)
cmp
dec
mov
adc
xor
cmp
stc
sbb
pop
sub
push
in
jg
sbb
clc
cmp
adc
xchg
sbb
gs
sub
sub
mov
xor
jns
clc
jnp
jb
mov
push
movs
jb
xor
test
mov
mov
push
cmp
adc
pop
jmp
mov
in
call
jl
and
das
mov
sti
fwait
jb
add
mov
jbe
adc
dec
in
not
call
cmp
out
ja
or
cmp
pusha
inc
ds
xchg
xchg
push
inc
jg
scas
mov
pop
inc
lods
fisttp
(bad)
jecxz
add
cli
mov
push
in
nop
mov
add
(bad)
and
lock
lods
or
pop
sub
adc
fcom
mov
aas
jo
repnz
in
into
in
cmp
mov
jmp
jns
xlat
(bad)
std
mov
aad
loop
add
inc
mov
sub
scas
aas
test
xor
ins
fld
lahf
mov
mov
cmp
in
mov
in
lahf
inc
xor
jb
mov
mov
inc
mov
and
sti
sub
or
sbb
pop
and
or
adc
imul
out
dec
imul
(bad)
shl
push
xor
sar
sub
add
or
sbb
xor
mov
and
div
cmp
in
fdivrp
int
mov
push
push
dec
xor
iret
cmps
faddp
sub
retf
mov
cmp
shr
mov
sub
and
rcr
mov
jb
test
push
add
mov
jl
add
(bad)
and
sub
test
addr16
sahf
mov
cmp
mov
cmp
in
imul
daa
or
popa
push
imul
lds
retf
inc
retf
test
cmp
push
(bad)
test
in
icebp
mov
pusha
in
push
enter
inc
enter
mov
ss
loope
push
aas
push
fdiv
lahf
loop
adc
test
fiadd
scas
fcmove
push
les
int3
dec
fcom
mov
in
loope
pop
mov
dec
inc
stos
jle
fst
scas
in
arpl
or
add
nop
es
cld
dec
pop
dec
sub
out
fistp
dec
gs
and
repz
idiv
popa
mov
sbb
push
dec
shl
xlat
jb
bound
(bad)
jecxz
mov
ret
aaa
add
test
inc
mov
pop
mov
dec
dec
out
or
pop
push
lods
mov
in
cmp
loop
mov
sti
inc
in
xlat
stos
mov
fnstsw
rol
or
mov
clc
retf
xchg
das
icebp
test
(bad)
push
inc
mov
test
(bad)
mov
loope
shr
mov
adc
xor
and
mov
adc
test
adc
push
(bad)
(bad)
adc
test
fdiv
or
or
imul
gs
repnz
movs
xlat
mov
test
stos
imul
or
xor
loopne
pop
std
jmp
dec
or
mov
inc
pop
mov
arpl
sbb
sbb
dec
jmp
imul
xchg
clc
sub
data16
addr16
or
push
inc
xchg
or
jns
mov
mov
inc
ins
inc
(bad)
xchg
cmp
loope
ja
out
test
into
lock
pop
jbe
xchg
sub
xchg
push
scas
mov
pop
ret
mov
mov
fidivr
lods
clc
xchg
push
cmps
jmp
push
out
jle
dec
lock
loopne
pop
xlat
shl
jl
movs
jno
add
out
push
and
sbb
mov
aad
jg
inc
sub
jge
lods
mov
lds
(bad)
aaa
push
adc
leave
ret
shl
fwait
adc
xor
lahf
push
pop
pop
lods
stos
mov
lds
ds
or
add
or
add
mov
mov
mov
and
mov
xchg
add
add
jecxz
cdq
pop
cmps
mov
inc
add
mov
jbe
rcr
cli
mov
ja
scas
jae
and
cmp
call
adc
stc
dec
arpl
call
fist
sub
loopne
mov
js
and
int
popf
int
sub
dec
clc
fwait
xchg
sub
cmp
and
ret
fld
mov
sbb
into
push
pop
aaa
pop
and
mov
push
and
inc
pop
sbb
and
mov
push
repz
add
xor
jmp
mov
and
cld
repnz
sub
arpl
mov
repz
mov
shr
lods
in
inc
mov
or
mov
mov
lea
stc
cmp
into
and
mov
rcr
in
pop
mov
punpckhwd
pushf
leave
pushf
gs
xchg
adc
gs
dec
mov
jmp
push
pop
pop
sub
adc
adc
cs
dec
ds
dec
cmp
jg
adc
jge
xchg
adc
jecxz
movs
lock
lock
push
pop
or
cmp
mov
pop
sub
sar
pop
stos
xchg
pop
call
aam
jo
push
add
iret
mov
vcvtdq2pd
mov
daa
or
mov
ins
pushf
aaa
xor
sbb
adc
fild
in
mov
leave
sbb
or
nop
clc
out
aas
ret
xor
imul
inc
lahf
sbb
add
retf
mov
sbb
fcom
inc
addr16
sub
push
mov
or
(bad)
jge
adc
xor
shr
adc
test
mov
outs
or
ja
ret
lea
stos
pop
mov
nop
add
jecxz
addr16
hlt
add
scas
mov
push
iret
mov
and
jno
imul
jg
sbb
mov
jle
mov
arpl
sub
or
out
dec
or
fiadd
cmp
mov
push
sub
cmp
jl
sub
push
or
mov
pop
fnstcw
adc
mov
push
inc
xor
mov
push
js
aam
(bad)
adc
sub
adc
sub
or
mov
mul
jns
call
or
pop
xor
and
mov
mov
mov
add
fisubr
mov
add
mov
mov
xor
dec
jb
in
fnstenv
cmps
pop
add
adc
push
popa
mov
mov
add
jno
call
inc
fiadd
cmps
cmps
outs
cld
loopne
pop
imul
(bad)
clc
test
sub
icebp
(bad)
pop
shl
jecxz
(bad)
or
fsub
inc
aas
movs
loopne
dec
cmp
cmp
xchg
mov
cmp
idiv
test
and
loope
xchg
add
movs
jmp
sub
in
push
push
xchg
pop
(bad)
push
lock
imul
mov
adc
fdivr
xor
xor
leave
js
jo
mov
cmp
dec
not
mov
lock
sub
mov
dec
sub
icebp
jmp
cmp
aad
mov
inc
neg
mov
mov
xor
or
adc
push
loopne
xor
js
stos
mov
mov
ins
xchg
sub
or
addr16
ja
jae
stc
sete
cld
dec
aam
or
imul
in
xchg
sub
mov
(bad)
fidivr
xchg
mov
out
sar
fs
jb
adc
les
pop
and
retf
lods
lods
loopne
gs
sub
inc
in
push
sub
jne
sub
mov
repz
ja
push
aad
pop
aaa
add
mov
cmp
scas
loope
loop
in
jge
iret
push
repnz
or
(bad)
mov
jne
push
cmps
(bad)
cld
adc
mov
xchg
and
xor
stc
dec
mov
jbe
jns
or
xor
lock
cli
xchg
into
pop
adc
test
into
and
dec
sub
mov
repz
lods
push
outs
sub
fdiv
mov
jmp
in
or
sahf
xlat
xor
sub
test
lods
sub
fidiv
mov
push
push
xbegin
and
jb
and
cmp
adc
test
add
ret
fdivr
push
cmp
nop
arpl
stc
dec
sub
retf
and
xchg
in
gs
inc
int3
inc
ds
or
mov
(bad)
into
fdivr
stc
out
mov
call
push
into
adc
cmp
xor
xchg
mov
int
or
add
cmp
adc
adc
call
mov
pop
cmp
sahf
les
int3
rcl
add
cmp
pushf
push
xor
add
or
stos
shl
sbb
inc
sbb
pusha
les
pushf
xor
cwde
cmp
or
loopne
sbb
xor
add
cmp
ds
fcom
inc
jnp
sub
icebp
mov
xor
add
fscale
aaa
mov
imul
push
sbb
(bad)
data16
pushf
or
(bad)
mov
mov
pop
add
jns
bound
in
or
std
je
movs
cmp
cli
hlt
mov
adc
and
mov
xchg
out
sbb
test
adc
jp
xor
sbb
retf
fild
daa
adc
scas
mov
xchg
jb
mov
pop
inc
inc
es
adc
or
(bad)
adc
aas
ds
mov
ret
add
call
aam
inc
lahf
mov
mov
gs
rol
dec
push
fdiv
sbb
sti
or
mov
dec
mov
xchg
mov
nop
mov
xor
cmp
fadd
pop
cmp
cmc
jno
xchg
mov
cmps
xchg
xchg
jnp
in
das
ins
addr16
(bad)
sub
sbb
sub
ds
jne
aad
scas
leave
sar
mov
out
cmp
enter
(bad)
retf
ret
jae
and
inc
jmp
cmps
lahf
push
out
add
push
mov
dec
in
inc
push
lea
js
iret
mov
cs
lods
mov
adc
pop
fisttp
jne
mov
enter
icebp
jmp
in
jmp
ins
cld
in
shr
inc
out
stos
(bad)
hlt
inc
add
cmp
pop
popa
or
jmp
or
dec
push
and
inc
jle
jne
push
dec
mov
xor
and
out
inc
retf
sbb
adc
mov
xlat
int3
rcr
repz
std
inc
xor
sbb
fidivr
in
dec
jnp
frstor
inc
aad
rcr
dec
or
dec
push
scas
repz
leave
lahf
in
ror
jl
sbb
xchg
mov
adc
fcom
jp
dec
loopne
mov
pop
pop
or
bound
jp
bound
sti
repnz
enter
xchg
sub
lods
jle
mov
movs
xor
leave
inc
sub
(bad)
imul
fcom
sbb
and
jno
or
fmul
jge
test
out
arpl
mov
sbb
je
(bad)
(bad)
push
pop
xchg
inc
lods
movs
or
add
push
or
sahf
mov
push
push
dec
and
in
cmp
clc
loope
int3
es
or
test
or
lds
adc
pop
out
repz
mov
inc
xor
add
shr
inc
jbe
dec
adc
or
mov
dec
mov
dec
ret
inc
aaa
and
cdq
cmp
inc
sti
scas
jmp
out
arpl
not
and
popf
and
arpl
jnp
fcom
jp
push
cdq
mov
gs
xor
fadd
cli
shr
int3
cmp
or
push
ret
xchg
hlt
dec
fwait
hlt
push
out
inc
and
cmp
and
ins
ins
mov
push
sbb
rol
inc
out
pop
int
arpl
shr
movs
mov
mov
mov
xchg
retf
jmp
add
push
popf
fmul
dec
ss
and
(bad)
iret
pop
loopne
pop
out
pop
cld
int
mov
dec
inc
fmul
std
xchg
(bad)
pop
cwde
loopne
xchg
add
jl
dec
cli
cli
adc
inc
inc
out
test
jnp
retf
xor
lahf
fsubr
push
mov
fcomp
mov
into
arpl
cmps
cmps
stos
mov
rcr
add
inc
pop
and
pop
adc
pop
sbb
sar
sub
mov
idiv
pop
(bad)
sub
imul
scas
shr
inc
test
std
shl
fs
adc
cmp
add
sub
jns
or
mov
sbb
add
jmp
daa
push
push
aas
push
mov
pop
sbb
mov
jmp
xor
xor
and
push
and
pusha
test
xchg
and
xor
mov
inc
pushf
pop
lods
xchg
sub
mov
or
dec
fdiv
cs
and
xchg
lods
cld
cmc
in
movs
dec
(bad)
mov
sbb
mov
iret
jle
mov
mov
test
(bad)
(bad)
clc
mov
je
xchg
movs
add
mov
and
mov
pop
aad
dec
(bad)
icebp
gs
inc
popf
xchg
sbb
inc
sbb
sbb
repnz
das
sbb
and
sbb
repz
aad
int
imul
cmp
unpckhps
mov
cmp
xchg
sti
in
push
dec
xor
push
ds
jecxz
mov
mov
mov
jno
repnz
mov
xchg
add
std
jno
pop
and
dec
fisubr
in
call
and
mov
xor
addr16
pop
leave
sbb
cdq
dec
jp
mov
in
dec
iret
(bad)
test
test
mov
int3
cld
mov
push
push
fisubr
sbb
imul
mov
fdiv
mov
loop
popf
imul
(bad)
enter
jo
in
sbb
xor
fs
gs
adc
add
push
test
mov
sbb
push
or
xchg
test
out
add
mov
xor
push
jp
movs
inc
sub
retf
aam
xchg
out
mov
dec
(bad)
fwait
lea
and
lea
cli
or
dec
or
fisttp
pop
mov
xor
add
sbb
push
jle
sbb
popf
mov
sbb
xor
and
mov
adc
call
data16
scas
fwait
jae
xchg
lahf
idiv
push
dec
add
test
aam
mov
cmp
xor
les
jg
mov
retf
dec
sbb
outs
mov
pop
sub
adc
(bad)
popf
call
adc
cmp
ret
cwde
sub
cmp
aad
sbb
xor
lods
dec
cmp
into
out
test
jmp
lea
jo
cwde
pop
cli
add
inc
xchg
les
xchg
sbb
rcl
xor
push
les
or
add
mov
test
arpl
scas
repnz
inc
lods
jge
mov
addr16
mov
int3
mov
xchg
push
sahf
aad
adc
cmps
cmp
jae
xor
dec
mov
retf
(bad)
call
mov
xchg
add
fild
ja
sub
jne
push
mov
or
fwait
or
pop
out
mov
mov
icebp
mov
std
sti
in
mov
adc
out
mov
mov
jp
xchg
sub
adc
movs
xor
cmc
sbb
movs
jmp
xchg
lds
pop
dec
ds
sub
fwait
stc
add
jnp
xor
mov
movs
mov
stos
scas
pop
push
inc
data16
aam
outs
push
scas
repz
mov
inc
(bad)
and
shl
dec
cmp
fcomp
cdq
inc
nop
lea
add
lods
push
pop
mov
sbb
push
or
(bad)
adc
aas
jne
xor
in
inc
mov
mov
ret
mov
jecxz
add
movs
jo
adc
cmc
push
clc
movs
mov
out
popa
pop
pop
add
cmps
(bad)
and
mov
mov
push
clc
mov
call
jne
mov
jmp
scas
sbb
rcl
cli
(bad)
jecxz
mov
cwde
loop
lods
mov
jo
out
jns
lahf
mov
mov
adc
out
or
popf
xor
std
dec
and
fs
or
or
mov
ds
retf
mov
arpl
fcom
xor
imul
fisub
pop
cmps
jns
cmp
push
jbe
cmc
mov
jno
jne
inc
xlat
adc
jp
cdq
shl
call
push
jbe
jnp
rcl
into
mov
repz
jmp
mov
mov
movs
shl
lods
ds
out
adc
mov
in
dec
jle
add
aas
bound
mov
xor
cs
adc
ins
pop
rcl
rcl
mov
add
fistp
stos
sub
(bad)
xchg
and
bound
dec
test
pop
pop
xchg
pushf
xchg
xchg
js
sar
loope
mov
add
lahf
(bad)
movs
xchg
or
ins
inc
in
jp
or
mov
mov
mov
pandn
mov
mov
cmc
test
sbb
push
ds
mov
xchg
mov
mov
inc
lea
sub
out
pop
nop
sub
dec
loopne
jne
int
popa
ror
je
in
or
sahf
push
and
test
inc
inc
imul
jae
or
daa
bound
pop
imul
mov
cmp
mov
(bad)
sub
ja
mov
das
cdq
ret
shl
sub
idiv
enter
jl
std
rol
test
add
retf
and
fcomi
dec
ret
stos
stos
rol
ja
js
ja
add
(bad)
ins
stos
add
hlt
cmp
lds
xchg
push
loope
push
jb
cli
xchg
pop
sub
movs
xchg
stc
pushf
pusha
in
inc
push
ja
arpl
inc
ficom
ja
pop
(bad)
xor
clc
pusha
xchg
aaa
jg
out
lock
and
imul
add
dec
enter
inc
lahf
mov
or
push
mov
mov
xchg
cmp
ins
(bad)
mov
mov
pop
fxch
adc
mov
test
cmp
pop
or
add
sbb
inc
fild
gs
cdq
dec
xor
bound
ficomp
xchg
mov
sbb
aaa
sbb
add
xor
mov
imul
adc
scas
mov
call
xchg
pop
add
in
sub
adc
call
leave
pop
call
lahf
pop
and
or
movs
popf
cld
sub
adc
out
test
adc
and
mov
xor
xor
xchg
add
sbb
cs
add
inc
ja
fsub
and
call
xchg
push
dec
cmp
in
adc
sbb
add
mov
cmp
cmp
dec
fadd
adc
push
sub
retf
inc
inc
xor
(bad)
addr16
test
mov
sbb
pusha
add
pop
outs
movs
mov
cmp
push
imul
jmp
jb
mov
retf
add
test
(bad)
jae
mov
sbb
retf
movs
xchg
push
daa
fsub
jno
xor
xchg
push
jge
pop
(bad)
jmp
fsub
ins
adc
or
jmp
or
das
das
xchg
pop
or
jl
adc
pop
dec
mov
jp
xchg
sbb
cmp
cld
pop
cmp
sub
adc
add
movs
shr
fstp
enter
xor
pushf
cmp
pop
xchg
stos
rcr
lock
or
(bad)
repnz
jbe
in
mov
imul
mov
push
gs
mov
retf
rcr
xchg
xchg
xchg
outs
sbb
fucomip
jne
in
cmps
sbb
in
mov
stc
rol
dec
ds
sbb
lea
push
add
sub
out
jmp
mov
xchg
hlt
sti
or
test
aaa
fwait
fs
jae
mov
test
mov
in
aad
imul
icebp
cmp
ret
scas
or
out
int3
inc
jecxz
mov
leave
push
mov
aam
inc
xchg
xor
sar
fldenv
xchg
xchg
lahf
mov
mov
fidivr
push
cmc
xchg
xor
pop
fsubr
push
(bad)
cld
arpl
mov
fbld
daa
xchg
sub
clc
sub
push
and
fadd
(bad)
fmul
int
popf
and
mov
pop
dec
cmp
pop
movs
outs
push
in
(bad)
cli
lock
jge
sub
pop
popa
in
cmp
shr
ins
out
or
cmps
pop
inc
ret
sbb
add
sbb
(bad)
mov
inc
xchg
jecxz
gs
jbe
ror
inc
cld
cmp
into
inc
dec
xor
jle
rcl
ret
mov
(bad)
xchg
sub
jg
dec
adc
cmps
xor
(bad)
movs
cs
inc
lahf
int
inc
mov
adc
jecxz
cmp
lods
imul
adc
arpl
jl
retf
jmp
cs
adc
mov
xchg
jbe
mov
popf
pop
dec
push
sub
pop
into
aaa
sub
dec
mov
retf
rol
inc
cmp
ficom
retf
xor
fdivr
repz
lods
dec
ja
pop
inc
cs
retf
xchg
movs
out
add
dec
xor
adc
pop
push
bound
enter
loopne
inc
add
gs
inc
xchg
int3
nop
iret
sbb
(bad)
das
ds
xchg
mov
ror
cmp
in
icebp
push
mov
cli
xlat
ins
cmp
imul
or
sbb
sub
jns
cmp
fidiv
outs
dec
mov
add
xor
or
add
iret
ret
aas
add
add
adc
(bad)
cmp
xor
mov
pop
ja
cmp
les
and
push
daa
sub
xchg
(bad)
sub
out
les
mov
sub
push
push
cmps
aam
ins
adc
scas
cmp
xchg
jbe
stos
lahf
or
stc
jge
xor
clc
vmovq
sub
mov
mov
in
addr16
mov
jo
out
ret
es
call
cmc
sar
movs
dec
mov
ss
xor
inc
daa
arpl
das
jnp
xchg
stos
mov
adc
outs
movs
cmc
pop
cmp
and
stc
pop
ins
inc
mov
lock
repnz
pop
shr
repnz
shr
iret
or
ja
jle
push
shl
icebp
in
xchg
lock
stos
in
data16
fsub
je
or
jmp
or
push
inc
pop
loop
loopne
retf
inc
movs
dec
push
mov
mov
jecxz
rol
call
sub
add
cmp
not
xor
mov
daa
and
gs
xchg
stc
jmp
dec
pop
xchg
push
out
cmp
pusha
add
lock
and
add
dec
sbb
fwait
out
retf
sbb
pop
cli
popf
push
mov
movs
sbb
inc
cmc
(bad)
into
lahf
push
mov
std
outs
xor
mov
test
add
xor
test
call
dec
add
mov
push
aam
jp
cli
in
jno
cmc
pop
and
push
pop
adc
pop
adc
movs
stos
jp
(bad)
ror
mov
arpl
aam
xchg
mov
imul
add
adc
dec
dec
jecxz
stos
mov
sbb
xlat
mov
nop
(bad)
push
iret
push
pusha
cld
mov
data16
ds
sub
lahf
(bad)
clc
jo
jecxz
shr
call
pop
js
mov
xchg
ret
xchg
pop
(bad)
mov
out
clc
iret
cmp
(bad)
cld
popa
or
adc
stos
outs
mov
xchg
jge
jmp
add
retf
mov
sbb
sub
test
cs
ins
pop
mov
sbb
sbb
retf
pop
and
loop
repnz
mov
push
mov
cmp
pop
adc
scas
fldcw
scas
jo
adc
jp
adc
xor
jmp
sahf
pop
lds
icebp
mov
xor
ficomp
sbb
stos
loope
mul
into
jg
jle
xor
clc
aas
ins
sbb
popa
jl
jo
jge
push
xchg
rcl
scas
scas
rcr
div
arpl
imul
fucom
inc
or
dec
push
jl
ficom
arpl
pop
jo
jle
in
add
call
push
cdq
pop
mov
xchg
es
aaa
icebp
(bad)
jno
ret
mov
and
push
gs
or
hlt
adc
add
xor
cmp
ror
gs
mov
jp
mov
pusha
repnz
dec
popa
ja
cli
xchg
pop
cmp
push
cmp
sub
dec
push
iret
popf
mov
int3
psllq
out
inc
rcl
jnp
mov
les
jns
mov
shr
jle
mov
jno
xchg
es
icebp
pop
ins
outs
push
mov
out
xchg
inc
xchg
mov
cwde
fsubr
inc
mov
cmp
daa
(bad)
pusha
pop
add
sbb
jecxz
inc
sbb
stos
repz
push
inc
iret
sub
jae
jmp
leave
(bad)
enter
mov
mov
iret
push
hlt
in
ins
out
jb
pop
int
xchg
push
leave
inc
mov
dec
xchg
bound
xlat
push
inc
lods
mov
push
pop
mov
mov
inc
fwait
or
add
popf
xchg
jo
push
pushf
or
add
stos
shr
popf
jns
jno
shl
pop
push
stos
xchg
outs
sub
fldcw
pop
fcomp
push
pushf
popa
stc
pop
push
icebp
and
daa
pop
xor
mov
aam
push
jnp
dec
fmul
sti
push
jo
pop
ss
fs
jp
test
in
or
adc
stos
inc
test
dec
retf
xor
xchg
push
aaa
inc
xor
add
int3
ins
dec
push
xchg
fwait
and
jne
jmp
or
shl
daa
add
mov
pop
pop
jg
jmp
mov
dec
jge
scas
popf
xchg
scas
stos
enter
fwait
outs
jbe
mov
lods
ret
arpl
loop
aaa
dec
dec
aaa
stc
loope
nop
mov
imul
jle
dec
pop
sahf
mov
and
fild
jno
add
inc
shl
call
fwait
and
out
int3
addr16
repnz
les
inc
repnz
xor
pusha
xchg
dec
sbb
div
mov
xor
sub
in
push
leave
jmp
call
add
inc
in
dec
loope
in
jmp
or
add
or
mov
or
and
sub
movs
lock
adc
nop
cmp
(bad)
mov
lods
stc
mov
ins
pushf
clc
dec
mov
stos
add
and
mov
inc
shr
add
cmp
lock
nop
cdq
pop
arpl
(bad)
mov
or
push
mov
ret
mov
not
pop
jecxz
shr
push
out
xlat
ja
dec
cmp
std
das
mov
sbb
cmp
out
in
popa
std
cdq
fwait
jmp
inc
std
pop
jg
push
mov
js
jmp
stos
das
mov
imul
cmp
push
mov
mov
push
jp
jb
aam
mov
jne
rcl
adc
frstor
push
push
jp
in
popf
adc
addr16
inc
pusha
(bad)
test
xor
jmp
inc
cli
rcr
das
out
cmp
paddsw
sar
fs
xchg
xchg
or
inc
test
jl
loop
std
mov
test
dec
pop
test
(bad)
cmp
mov
ret
cmc
jl
cmp
pop
xor
ss
daa
mov
sub
es
sbb
push
in
jno
mov
or
into
nop
push
stos
call
aad
ss
test
inc
cwde
add
shld
or
adc
fnstenv
movs
xor
sub
dec
pop
jle
jbe
shr
xchg
add
retf
sbb
and
call
iret
mov
mov
jp
mov
and
lds
add
in
stos
xlat
(bad)
stos
push
and
push
jl
push
mov
adc
xchg
mov
pop
push
push
ins
je
push
repnz
xor
test
cdq
push
push
stc
scas
push
and
add
dec
or
adc
jmp
js
sbb
ins
inc
mov
popf
pop
pop
sbb
cdq
repnz
dec
into
push
imul
sub
cld
or
call
xchg
pop
in
stc
dec
sbb
out
mov
xor
les
push
loope
bsr
aad
sub
inc
outs
aam
inc
and
stos
nop
sbb
sub
pusha
or
push
mov
clc
and
sbb
imul
mov
ret
(bad)
out
cmps
mov
jbe
add
push
not
mov
bound
loop
std
jge
sahf
(bad)
mov
or
jo
add
push
jbe
add
ins
adc
mov
(bad)
popa
sbb
stc
sbb
mov
out
ret
and
and
pushf
add
mov
jp
(bad)
xchg
inc
ror
jns
mov
nop
dec
xor
mov
jmp
or
std
les
repnz
adc
push
hlt
dec
repz
or
sub
pop
push
mov
xor
jle
xor
push
pusha
lea
(bad)
cmp
push
jnp
cmc
(bad)
pop
mov
or
js
pop
sbb
jmp
sbb
repz
mov
xchg
xchg
fld
xchg
dec
sub
inc
adc
xchg
sub
ret
or
fst
mov
imul
imul
popa
mov
mov
or
or
adc
jmp
(bad)
jnp
mov
or
jne
pop
pop
and
js
fnstsw
or
data16
push
inc
(bad)
xchg
jmp
movs
jnp
and
daa
scas
mov
dec
and
rcr
xchg
cli
imul
and
cmp
daa
je
sub
sub
sbb
addr16
mov
and
mov
jae
call
add
sub
push
je
repz
fist
loope
xor
pop
mov
out
push
es
mov
dec
add
loope
je
jp
stos
cmp
out
mov
push
iret
gs
sub
jns
mov
in
fsub
or
jae
shl
div
les
sub
push
mov
xchg
jge
fs
mov
mov
cmp
xchg
sbb
cli
in
adc
cmp
dec
pop
cld
push
das
jnp
xchg
jb
push
sbb
leave
jmp
xchg
popf
mov
jecxz
call
fild
mov
out
shl
xchg
push
add
sub
push
push
pop
dec
sub
addr16
pushf
xchg
int3
test
jl
ror
hlt
mov
aaa
dec
call
cs
call
fisub
or
push
popf
sbb
int3
jp
ss
jmp
adc
push
jae
or
lock
pop
cmp
xchg
es
push
mov
mov
shl
scas
cmps
xor
pop
xor
outs
jp
mov
pop
jmp
sbb
xor
je
cmp
(bad)
xor
xor
pushf
mov
jle
test
into
jp
cmp
retf
or
or
popf
jecxz
or
scas
inc
aaa
fild
push
out
fldenv
movs
mov
pop
xlat
adc
pop
arpl
adc
pop
fwait
add
and
retf
mov
pop
lea
aad
int3
ror
jo
jecxz
ret
mov
ret
jmp
cmp
jne
retf
stc
cmp
mov
or
jns
fldenv
enter
cli
idiv
hlt
pop
fidivr
cli
sub
shr
add
xchg
shl
add
xchg
(bad)
dec
int3
dec
(bad)
cmp
xchg
xchg
shr
and
(bad)
jns
daa
hlt
stos
mov
xor
or
cmp
adc
pop
aad
enter
test
pop
jle
stos
mov
push
xor
cmp
mov
(bad)
aas
cmp
int3
imul
fistp
mov
sar
scas
dec
sub
retf
add
xchg
lock
std
push
out
cmp
pop
or
sbb
shr
jmp
jecxz
rcl
mov
mov
pop
cmp
aas
test
call
push
dec
jmp
mov
inc
(bad)
push
jns
xchg
sbb
mov
mov
pop
(bad)
and
sbb
mov
push
adc
lea
lock
inc
ja
adc
add
in
outs
lds
clc
aad
enter
xchg
cdq
(bad)
fiadd
dec
retf
adc
mov
xor
pop
sbb
data16
xchg
scas
mov
(bad)
cmp
pop
push
lahf
je
mov
mov
pop
rcl
push
xchg
addr16
sbb
add
xchg
aad
sub
jl
mov
enter
outs
push
outs
xor
jno
xchg
xlat
mov
in
icebp
adc
and
adc
ret
dec
mov
dec
mov
jmp
neg
push
out
icebp
inc
mov
mov
cld
inc
adc
sub
lahf
pop
ret
in
mov
inc
stos
xchg
fdivp
jmp
(bad)
mov
add
gs
(bad)
mov
in
rcl
fidiv
shr
adc
call
xchg
sbb
loope
xchg
loop
jp
push
call
aad
lea
aaa
pop
test
int
repnz
sub
bound
jns
sub
push
or
fdivr
jno
ror
jno
jecxz
mov
leave
jns
dec
pop
rol
mov
and
sbb
pop
add
or
pop
imul
(bad)
sub
sub
cdq
push
xchg
fimul
inc
retf
pop
xor
(bad)
mov
jl
jo
mov
(bad)
xor
fwait
mov
(bad)
ins
stos
sbb
loope
int3
cld
mov
cmps
imul
iret
dec
cmp
mov
jo
ins
pusha
(bad)
rol
repnz
lods
mov
sar
mov
cmp
push
jle
fistp
jbe
mov
idiv
(bad)
adc
fistp
jae
dec
ins
jnp
mov
push
xor
(bad)
mov
call
std
add
adc
movs
fist
popf
out
cmp
pop
jo
jecxz
mov
push
add
sub
adc
mov
mov
(bad)
mov
shl
pop
cld
mov
mov
std
outs
sub
imul
xchg
call
shld
push
sahf
arpl
inc
pusha
mov
(bad)
mov
adc
lds
pop
add
fidiv
call
test
pop
push
mov
inc
ins
xor
das
enter
adc
mov
add
ror
adc
adc
ins
shr
adc
fisubr
subps
inc
scas
adc
jmp
push
retf
arpl
sub
das
adc
jge
xor
cmp
xor
inc
push
mov
dec
fiadd
sbb
ins
aas
push
jle
sbb
aam
inc
and
add
les
loopne
lea
push
es
and
mov
call
adc
lock
adc
repnz
cmp
iret
adc
and
das
int3
or
or
out
jmp
push
jp
mov
cmp
mov
aam
dec
sbb
pop
(bad)
shl
mov
andnps
add
pop
xchg
or
enter
pop
pusha
lods
loop
sub
out
push
or
and
bound
jo
mov
(bad)
cmc
and
mov
dec
dec
or
mov
push
sbb
cld
dec
xchg
call
cmps
push
adc
cld
imul
sub
jne
(bad)
aas
xchg
mov
cmovno
sbb
js
inc
es
sub
cmp
mov
pop
jecxz
call
retf
aam
push
pop
jno
jae
cmp
mov
and
repnz
lods
push
loope
std
push
(bad)
shr
je
adc
aam
imul
or
or
add
mov
pop
mov
xor
out
jl
mov
cmp
cdq
pusha
dec
out
mov
sbb
daa
jb
stos
es
(bad)
clc
call
pop
pop
loop
fidiv
iret
pop
aam
push
push
pop
pop
test
push
scas
loope
jne
sbb
pusha
cld
push
pop
dec
ins
inc
rol
dec
push
dec
sub
add
dec
int
scas
popa
or
add
and
repnz
data16
mov
mov
movs
cmps
stc
jmp
push
fnstcw
sar
or
retf
dec
and
mov
(bad)
inc
add
push
or
in
ret
ror
sbb
sub
test
push
ret
(bad)
adc
adc
loop
call
jno
call
(bad)
aam
pop
cmp
les
aad
xor
jmp
stos
stos
or
pusha
xor
cdq
add
jne
lahf
das
mov
arpl
inc
out
in
shl
sbb
or
ja
stos
xchg
add
adc
sbb
outs
mov
iret
jbe
lahf
test
adc
daa
jmp
push
stos
out
shr
cmp
pop
out
xor
lods
fcmovbe
add
or
add
bound
xchg
fisttp
sahf
xor
mov
cmp
cmp
cdq
(bad)
mov
dec
lds
mov
push
fwait
push
icebp
push
sub
out
mov
cld
imul
cmc
dec
in
lahf
jmp
out
sbb
push
ja
lahf
adc
inc
mov
inc
loope
xchg
dec
add
stos
dec
(bad)
sti
aam
jno
sbb
loopne
test
(bad)
push
shl
fndisi(8087
cli
enter
iret
repz
clc
cwde
jnp
pop
jno
jbe
fld
sub
scas
fs
sbb
test
mov
dec
lods
xchg
popf
test
imul
daa
inc
lea
ret
data16
and
mov
pop
fadd
xchg
or
sbb
sub
mov
repnz
cmp
aad
cmp
add
leave
jle
test
inc
jne
scas
pop
sbb
jns
push
out
adc
sbb
push
in
jecxz
in
outs
addr16
cmps
xor
out
sub
xchg
and
jge
mov
cdq
aam
pop
outs
jo
xchg
adc
outs
int
add
bound
xor
push
xchg
inc
jne
cmp
enter
adc
(bad)
rcl
jb
cwde
and
movs
sub
jbe
pop
sbb
push
fld
(bad)
push
popf
mov
mov
xchg
mov
pop
jmp
test
mov
sbb
test
xor
(bad)
lea
jnp
mov
dec
jno
mov
neg
dec
or
and
inc
push
mov
test
scas
xchg
push
out
ins
mov
hlt
cmp
data16
mov
hlt
int
jb
push
or
(bad)
fwait
gs
dec
adc
dec
das
test
ja
shr
sbb
out
xor
xor
xor
sbb
push
lock
fs
xor
fimul
add
jmp
mov
mov
add
sub
push
test
sahf
fld
fisub
fsincos
repz
push
addr16
ret
xor
loop
int3
pop
sub
aas
stc
(bad)
cmp
xlat
fldenv
call
ja
pop
xlat
mov
repz
and
xor
mov
xor
fsubr
and
mov
and
sahf
stos
xchg
pop
shl
hlt
sub
aad
popf
push
hlt
sbb
jmp
jp
mov
mov
mov
jno
sar
aaa
leave
inc
xchg
xchg
mov
in
loop
or
scas
or
ds
xchg
outs
jns
fsubr
sbb
mov
gs
jne
dec
daa
aad
xchg
xchg
sub
and
pop
xor
dec
add
add
push
push
int
sahf
jo
test
push
mov
das
sub
stos
fistp
outs
(bad)
xchg
jb
(bad)
(bad)
xor
mov
cmp
add
mov
cmps
fsub
test
push
gs
dec
or
scas
and
shr
scas
icebp
jg
pop
les
(bad)
loop
lea
aam
mov
cli
lea
mov
add
push
xchg
repnz
xchg
adc
or
mov
mov
sub
fwait
out
dec
(bad)
lods
mov
and
or
mov
mul
(bad)
mov
je
sbb
and
call
es
push
mov
push
inc
loopne
inc
sbb
or
xor
pop
sub
int3
dec
es
sahf
in
jbe
mov
(bad)
add
mov
pop
leave
bound
dec
call
ja
dec
arpl
mov
xor
jg
jno
ds
dec
push
mov
cmp
fisttp
icebp
arpl
movs
movs
fadd
shr
inc
test
and
pop
inc
stc
and
push
inc
sub
jae
jge
mov
xor
scas
mov
push
imul
mov
pop
sub
js
test
stos
icebp
pop
pop
test
and
mov
(bad)
imul
mov
xor
aad
push
(bad)
push
mov
add
out
das
xor
push
jg
sbb
ins
ja
mov
mov
out
es
sbb
icebp
ins
stos
mov
cmp
jecxz
in
retf
cmps
(bad)
rol
dec
ss
push
fwait
popa
jae
shl
lods
adc
inc
mov
(bad)
leave
add
sar
popf
mov
cmc
cmps
hlt
cwde
inc
adc
pop
push
jns
jne
loope
sub
push
mov
mov
mov
jmp
cmp
loopne
inc
lock
lods
cmp
rcl
js
outs
dec
sub
push
js
enter
jnp
jmp
fcom
out
cmps
dec
lea
ret
add
mov
rcl
or
gs
mov
in
mov
and
into
and
aam
leave
out
out
call
mov
mov
es
es
xchg
(bad)
cli
push
dec
int
(bad)
test
icebp
xchg
push
popa
jne
mov
lea
inc
je
dec
or
jno
jecxz
cmp
jl
add
nop
sub
lds
dec
std
xor
test
inc
jmp
inc
sahf
jb
push
mov
xor
or
imul
push
or
(bad)
leave
aam
es
popa
push
dec
push
int3
pop
dec
int
out
mov
cmp
adc
sub
cmc
push
into
aam
dec
add
stc
mov
cwde
gs
movs
mov
ret
inc
(bad)
xchg
or
les
and
push
pop
xor
icebp
add
js
xchg
and
sbb
jb
jge
or
pusha
in
loope
xor
inc
ss
sti
xor
inc
arpl
int3
cmps
out
adc
xor
xlat
xchg
sub
pop
xchg
(bad)
jmp
sub
dec
inc
fist
xor
and
repnz
clc
cmp
mov
mov
xlat
retf
fild
xor
xchg
xor
pop
push
jbe
imul
mov
or
add
fbstp
jle
sbb
xchg
pushf
icebp
adc
mov
repnz
sub
icebp
out
mov
push
sbb
mov
sbb
outs
mov
test
mov
dec
ins
jnp
ss
ins
ficom
jnp
loopne
xchg
cld
mov
mov
out
push
cdq
pop
cmps
xchg
jl
push
repnz
sub
cmps
cmp
jmp
xchg
lods
pop
pop
sbb
cmps
(bad)
sahf
stos
lods
movs
xchg
push
retf
jno
pushf
retf
call
(bad)
stos
sbb
xor
idiv
xor
repnz
aaa
jge
and
es
dec
and
out
inc
jns
sbb
mov
(bad)
les
ja
in
xchg
bound
scas
test
inc
cmp
adc
inc
inc
das
jge
popa
xor
and
das
dec
out
mov
xchg
ror
xchg
sbb
mov
ds
es
in
xchg
cmp
cmp
xchg
bswap
pop
pop
adc
jp
dec
push
push
shl
pop
sub
or
sub
lds
std
mov
push
jo
adc
rcr
sbb
or
inc
dec
out
test
int3
aaa
sbb
sub
jecxz
inc
dec
leave
jno
pop
xor
nop
mov
pushf
dec
adc
(bad)
nop
xchg
push
jle
test
iret
imul
adc
fst
jno
xor
xor
push
inc
ret
mov
push
inc
sbb
enter
in
sbb
mov
(bad)
xchg
dec
popa
cmps
fidiv
fld
mov
bound
clc
push
outs
mov
xor
test
(bad)
or
or
mov
push
push
lahf
jecxz
cmp
inc
pop
mov
add
cdq
(bad)
repnz
or
fdivr
iret
fsub
daa
sub
data16
and
dec
jb
ret
xor
or
dec
add
cmc
hlt
lahf
xchg
push
or
(bad)
in
push
sbb
call
rcr
add
call
ins
ja
fisubr
mov
sbb
mov
pop
(bad)
pushf
scas
mov
pop
xor
xchg
jmp
push
in
cmp
jle
pop
pop
fadd
popa
outs
mov
mov
aad
pop
dec
push
jle
test
push
jbe
test
dec
sub
jns
sub
xor
mov
out
inc
clc
sar
ja
pop
jl
sahf
daa
inc
retf
(bad)
out
mov
jns
enter
mov
mov
and
mov
mov
xrelease
pop
push
mov
idiv
push
fcomip
cli
jmp
xchg
inc
repnz
jb
jae
jmp
adc
(bad)
retf
es
into
test
pusha
scas
or
push
movs
mov
sub
pushf
pop
push
sub
lea
movs
add
mov
add
call
mov
mov
sub
fisttp
daa
ins
mov
add
in
mov
jnp
retf
mov
imul
mov
cmps
ja
push
dec
arpl
mov
mov
aam
jge
rcl
test
cmp
adc
out
pop
test
dec
ins
sbb
repnz
push
test
sti
ror
icebp
imul
shl
shl
adc
inc
fisttp
mov
push
sti
adc
xor
mov
xchg
or
cmp
fs
mov
mov
shl
fs
ffreep
stos
inc
jae
xchg
dec
and
enter
jo
mov
push
shl
dec
cmp
mov
pop
dec
call
fiadd
es
dec
cmps
in
retf
jecxz
movs
retf
movs
or
aas
hlt
push
ds
add
and
sub
in
xchg
lahf
out
shl
dec
xchg
xchg
daa
pop
mov
and
xor
es
inc
inc
retf
and
xchg
and
pushf
scas
cmp
pop
push
mov
clc
fcom
lock
rcr
sub
outs
mov
je
cli
js
clc
mov
ins
mov
cmp
mov
dec
mov
or
in
cli
xchg
dec
test
(bad)
ret
dec
xor
pop
neg
add
mov
pop
xor
push
cmp
add
jge
loope
loope
cld
mov
mov
cmps
mov
cli
dec
out
or
and
retf
jne
mov
or
sbb
lods
shr
les
rol
dec
(bad)
mov
adc
pushf
aas
test
cld
mov
fisub
push
cmps
and
sbb
(bad)
movs
movs
pop
mov
aad
popa
rcr
add
xchg
cwde
mov
lea
daa
sub
adc
mov
(bad)
and
aad
out
sbb
mov
inc
xchg
jmp
cmps
xor
into
sbb
add
jmp
mov
inc
pop
sub
(bad)
and
clc
sbb
mov
gs
add
or
push
push
test
stc
xchg
adc
jp
inc
cmp
pop
dec
out
sbb
daa
sbb
movs
dec
repz
(bad)
call
gs
xchg
push
xchg
int
jmp
mov
xor
sub
lods
and
mov
add
fcmovnbe
pop
cli
scas
push
sbb
js
add
mov
mov
loopne
cmps
xchg
pop
sahf
add
mov
mov
arpl
rol
dec
ss
cmp
push
imul
jecxz
adc
test
dec
(bad)
xchg
ss
and
sbb
jbe
in
sub
adc
shl
cwde
cmp
xchg
ret
mov
test
jne
pop
retf
mov
push
dec
jmp
or
adc
mov
and
pop
mov
lock
dec
jo
clc
data16
mov
dec
out
mov
(bad)
mov
test
mov
mov
push
inc
test
pop
repnz
cmp
cs
or
sbb
inc
dec
vpaddsb
dec
out
jno
fisubr
xchg
dec
jmp
jmp
aad
pushf
xchg
dec
inc
add
cmp
mov
ror
into
xlat
into
std
mov
cmp
(bad)
fld
sub
xor
cs
dec
out
push
mov
xlat
inc
jge
push
sbb
dec
(bad)
ror
int3
add
stos
fdiv
pusha
inc
or
test
adc
mov
and
xor
test
dec
xchg
icebp
mov
loope
fs
push
xor
fadd
pop
jmp
mov
loope
rcr
cli
jns
adc
push
push
inc
sub
xor
xor
jge
pushf
into
sbb
sub
jg
mov
std
mov
test
movs
push
dec
jp
leave
mov
adc
call
cmp
xchg
inc
and
pop
mov
lahf
mov
in
jp
push
sub
movs
cwde
add
clc
scas
jmp
pop
(bad)
or
ins
xchg
mov
dec
jne
les
cmps
dec
aaa
sub
push
iret
scas
adc
mov
adc
arpl
pop
sub
ret
cmps
mov
mov
xchg
stos
xor
out
ror
sub
fnstsw
pop
mov
(bad)
jo
jmp
jmp
call
cmps
mov
jp
test
addr16
gs
repnz
fdivr
outs
xor
ficomp
sar
lea
inc
xchg
stc
fsubrp
push
adc
std
xchg
add
jo
js
shl
imul
pop
gs
es
mov
ror
repnz
mov
rcr
xor
sti
(bad)
iretw
sub
sbb
imul
out
mov
lock
scas
and
in
ja
pop
xchg
xchg
addr16
ficom
push
into
mov
fs
adc
sbb
pusha
popa
push
cmp
mov
dec
and
je
enter
add
push
xor
or
fwait
repnz
push
xchg
daa
cmps
bound
mov
jo
mov
xor
xchg
inc
test
pop
xor
fistp
cmp
fdivp
xchg
dec
lahf
push
push
in
test
push
int
xchg
cmp
jns
jle
bound
jle
mov
(bad)
je
(bad)
xchg
mov
mov
push
add
sbb
cmc
rol
mov
jmp
imul
pop
cmps
int3
stos
ret
sbb
cdq
pop
and
mov
pop
add
add
in
imul
pop
fwait
test
dec
cmps
rol
pop
cmps
sahf
repz
pop
leave
jmp
aad
fisubr
mov
jns
jb
int3
cmp
xor
mov
mov
aas
xchg
mov
rcr
in
jo
lods
add
pop
jecxz
cmp
xchg
leave
shr
xchg
cwde
enter
jge
hlt
fcomi
fldcw
sub
dec
and
inc
push
adc
aas
fistp
call
js
dec
cmp
xchg
inc
ss
daa
pop
jle
xor
loopne
mov
aam
jno
lock
add
ja
push
sti
xchg
xchg
addr16
pop
mov
inc
out
das
mov
push
sbb
mov
add
out
in
mov
fnstsw
cld
std
mov
fst
dec
mul
aas
in
jmp
sbb
ret
mov
jnp
adc
sub
xor
outs
aas
dec
aas
dec
pusha
ja
imul
jnp
outs
mov
dec
pushf
jbe
movs
adc
fist
sbb
(bad)
push
(bad)
xlat
sub
mov
(bad)
repz
xor
(bad)
pusha
ret
mov
xchg
pushf
mov
lds
dec
cld
retf
sar
(bad)
lahf
mov
mov
std
push
mov
push
pop
pop
xor
rcl
mov
mov
pusha
pop
mov
xchg
(bad)
pushf
(bad)
jne
mov
pop
cmps
imul
into
outs
sub
ins
cmc
pop
xchg
xchg
fs
rol
xchg
pop
mov
xor
shl
rcr
jmp
and
repz
dec
pop
sbb
push
pop
call
xchg
ins
jns
mov
dec
jle
ins
pop
mov
sbb
sbb
fwait
mov
lock
pop
into
aam
mov
mov
out
cmp
adc
add
jle
jne
ror
mov
pop
movs
lahf
pop
mov
xchg
mov
imul
inc
push
shr
scas
pop
dec
lock
jne
and
jnp
mov
mov
lods
cmp
dec
dec
xchg
mov
stos
sbb
xchg
jmp
aad
div
(bad)
xchg
fdiv
sbb
jmp
outs
dec
std
adc
imul
add
jle
loop
ret
or
fadd
cmps
push
iret
push
lods
vprotw
mov
(bad)
sbb
adc
cmp
adc
add
in
sub
mov
adc
test
mov
lahf
ret
into
outs
shl
jecxz
xor
lds
popf
mov
and
mov
add
xchg
aam
lods
test
ins
xor
adc
sub
mov
ja
iret
jecxz
cmp
retf
arpl
into
adc
or
sbb
mov
loop
sub
ds
add
imul
or
imul
cmp
dec
add
int
das
out
sbb
fsub
cmc
xor
push
dec
sti
and
sub
mov
xchg
rol
pop
mov
loope
cmps
pop
pop
mov
lods
mov
adc
inc
push
idiv
add
dec
mov
xchg
mov
(bad)
test
sahf
inc
(bad)
pusha
xchg
lods
push
xor
aaa
in
cmps
cmp
add
(bad)
xchg
adc
cmp
mov
lock
add
outs
dec
xchg
icebp
nop
push
add
lahf
adc
ins
jmp
shl
movs
(bad)
daa
mov
(bad)
lahf
xchg
jl
pop
dec
add
fdiv
push
fsubr
jmp
addr16
sub
mov
and
push
and
retf
and
and
aas
add
pop
cmc
nop
aad
std
jnp
(bad)
jp
jle
cs
out
mov
test
and
pop
and
inc
xor
imul
bound
push
xor
push
stos
outs
xchg
ret
aaa
cmp
jle
xor
(bad)
mov
inc
xchg
and
jg
addr16
ret
jno
and
xchg
ret
mov
ret
inc
icebp
inc
dec
cmp
push
mov
mov
sbb
sub
inc
icebp
ret
adc
out
xchg
pop
add
mov
sbb
(bad)
ja
in
or
jmp
inc
rcl
sar
ins
xor
dec
or
mov
mov
sbb
retf
dec
dec
sub
clc
mov
xchg
(bad)
jg
xchg
addr16
imul
xlat
or
dec
mov
jae
test
es
mov
mov
jge
jno
test
push
out
sub
inc
daa
mov
sti
push
sbb
or
(bad)
jae
sub
fst
cmp
sbb
es
bswap
mov
ds
xor
imul
dec
push
ret
add
push
pop
push
imul
fidivr
dec
rcr
push
loopne
retf
test
test
sbb
iret
push
pop
loop
push
iret
adc
mov
fimul
dec
test
enter
xchg
fidivr
push
mov
or
aad
bound
test
sbb
jbe
sbb
scas
xchg
fcmovne
ror
pop
cmove
pushf
lea
mov
push
jp
retf
jbe
sbb
repz
das
rcr
cmps
mov
push
jmp
retf
das
jns
call
cwde
jg
add
ret
jo
test
push
jg
fwait
mov
ror
test
cmp
enter
inc
into
cmp
loop
cmp
and
jo
lods
jnp
cmp
aaa
ror
rcr
pop
pop
into
or
pop
gs
push
sar
je
xor
jmp
test
mov
pop
pop
add
mov
fsubr
ret
(bad)
enter
ficom
fstp
ins
and
xchg
ficomp
xchg
aam
cli
sbb
sti
xchg
das
inc
xchg
outs
jle
bound
or
dec
pop
enter
scas
imul
adc
xchg
jecxz
sbb
out
cmp
std
fucom
push
or
jl
gs
test
test
pop
add
pop
pop
adc
cmp
jmp
cmp
adc
mov
jge
and
adc
(bad)
jge
in
xchg
mov
jecxz
mov
mov
mov
retf
dec
retf
and
jl
pop
jae
fwait
inc
int
xchg
mov
mov
cld
shr
mov
mov
call
and
dec
loopne
call
rcr
outs
sub
mov
mov
jle
mov
xor
xchg
adc
jmp
call
lods
push
in
cmp
pop
fwait
in
rcr
xchg
icebp
lahf
mov
iret
mov
pop
lods
pop
pushf
(bad)
or
adc
shl
test
add
sbb
and
pop
out
ss
int3
cmp
jl
jmp
in
xchg
inc
xchg
test
mov
jbe
xor
push
nop
mov
cmps
xchg
fiadd
sub
pop
(bad)
ins
cmp
push
mov
(bad)
fbstp
outs
std
ret
pop
pushf
into
stc
or
aas
ja
inc
in
jecxz
dec
cli
test
les
xchg
retf
sub
(bad)
xchg
icebp
inc
dec
and
stos
cdq
mov
outs
test
push
test
scas
mov
call
mov
ds
movs
inc
inc
pop
cdq
das
test
lods
sbb
out
fsubr
outs
aas
xchg
mov
int
inc
adc
lods
push
pop
ds
std
out
mov
mov
test
std
pop
and
jmp
cdq
imul
inc
inc
popa
adc
repz
sub
shl
dec
in
sbb
or
ret
add
mov
fisub
(bad)
lock
aam
scas
cmc
pop
jo
and
mov
out
xchg
adc
inc
das
ins
adc
xchg
iret
xor
mov
mov
loopne
push
dec
js
lea
or
movs
jnp
rol
ins
stos
outs
movs
imul
xchg
jno
sbb
push
ins
stos
test
lods
and
and
fisub
push
xor
mov
adc
mov
push
push
jmp
sbb
jg
(bad)
pop
movs
push
dec
dec
outs
rol
push
sbb
sbb
(bad)
jmp
and
cdq
ins
(bad)
js
sub
lods
ret
lds
push
out
xchg
je
pop
and
and
iret
fisttp
mov
call
ja
mov
add
pop
or
sub
push
sbb
sub
adc
adc
push
sahf
lock
jae
and
and
xor
inc
ror
adc
jno
push
mov
rcl
hlt
cmps
in
mov
jmp
mov
adc
add
fmul
(bad)
call
test
or
loope
lds
add
shl
push
add
pop
bound
mov
inc
jae
sbb
ss
addr16
or
xchg
push
aas
stos
loop
sub
pop
xor
sub
sub
or
ins
adc
pop
and
sub
pop
sti
mov
nop
pushf
movs
dec
stos
repz
xchg
(bad)
mov
gs
mov
sbb
lahf
cmc
jl
cmp
mov
push
leave
push
jo
sbb
sub
repnz
pusha
shl
sbb
lods
push
push
fs
dec
xor
or
push
aaa
mov
xchg
pushf
ffree
sub
leave
scas
rol
sar
std
sub
in
out
outs
mov
and
std
mov
stos
arpl
push
pop
ins
push
inc
mov
das
xor
imul
outs
lods
and
cdq
test
or
xchg
sti
push
inc
ds
stc
dec
(bad)
mov
and
fdiv
xor
imul
adc
push
xor
mov
shl
mov
(bad)
cmp
push
mov
dec
sub
and
jo
and
mov
sub
aam
inc
call
and
popf
pop
es
mov
(bad)
lea
es
test
push
mov
pop
rol
pop
in
rcr
dec
stc
jns
cld
mov
aad
jae
into
sbb
clc
lea
mov
add
lods
ins
cmps
mov
fs
pusha
rol
cmc
out
adc
in
lock
mov
pop
rcl
rol
xchg
mov
mov
out
push
dec
jae
std
ret
adc
fsub
aaa
scas
repz
sub
sbb
sbb
imul
push
and
push
and
sbb
mov
and
sti
dec
or
sbb
adc
pop
xor
pop
inc
pop
enter
mov
pop
icebp
xor
mov
jmp
rcl
add
daa
xor
mov
push
cmp
dec
(bad)
arpl
fild
imul
ja
sbb
retf
loope
mov
ins
pusha
cmp
sahf
adc
clc
(bad)
xor
arpl
push
jno
dec
or
call
xchg
rcr
mov
sub
mov
enter
pushf
fmul
scas
fild
jl
xor
mov
test
call
ins
sub
mov
(bad)
fldcw
sub
mov
mov
sub
jmp
out
dec
les
into
jmp
xchg
cmp
stos
arpl
xchg
outs
mov
mul
pop
in
jnp
test
lods
mov
and
xor
jecxz
mov
sub
add
outs
or
cdq
and
int3
ror
mov
shl
xchg
mov
data16
sti
dec
pop
js
xor
out
iret
jae
lahf
pusha
fsubr
rcr
ss
mov
sar
cld
sub
lock
sub
add
xor
scas
in
jp
imul
pop
lock
lds
jmp
jge
pop
mov
push
aas
jmp
xchg
and
pop
jnp
shl
mov
fs
push
pop
imul
movs
add
(bad)
mov
add
xchg
jns
mov
mov
push
lea
sub
call
rcl
pop
xlat
pop
jmp
iret
jnp
xchg
aas
dec
repz
xor
icebp
punpckldq
cmps
or
int
out
inc
ja
(bad)
push
mov
cmp
sti
xchg
stc
inc
shl
jns
hlt
lods
sub
jnp
retf
jno
rcl
repnz
mov
cwde
stc
inc
arpl
lods
out
sub
xchg
imul
mov
mov
sti
mov
inc
imul
mov
mov
inc
xchg
ja
fld1
jmp
jmp
(bad)
in
mov
sbb
aas
fisub
aas
pop
pop
inc
rol
jno
push
imul
js
hlt
adc
xor
sbb
clc
out
mov
repnz
movs
inc
add
inc
test
jno
mov
nop
jl
ret
xchg
xor
mov
in
ss
in
and
repz
enter
imul
sbb
or
mov
inc
jp
lods
mov
inc
sbb
pop
icebp
pop
xor
cli
repnz
push
xor
jno
pop
inc
fst
ret
in
inc
push
test
shl
loopne
jmp
xor
xchg
cli
push
shl
mov
pop
clc
int3
jb
cmc
out
sub
mov
cmps
js
fisub
fistp
(bad)
je
int3
loop
xlat
jle
sbb
cmp
mov
retf
sbb
dec
cld
push
push
in
ja
retf
mov
pop
test
fs
cmp
stos
shr
sti
adc
jne
jb
pushf
jmp
lods
jmp
ficomp
push
loopne
outs
out
and
mov
push
mov
adc
dec
pop
in
xor
push
test
test
retf
aad
and
js
xchg
mov
aad
lahf
outs
jl
sub
xlat
hlt
xor
mov
mov
repnz
mov
ins
sbb
(bad)
hlt
xchg
or
aas
pop
dec
jp
adc
push
or
in
stos
fadd
ds
inc
and
test
jno
sbb
scas
cmp
in
xchg
lock
xor
and
dec
push
push
cmp
(bad)
les
push
mov
adc
ds
cmp
cwde
xchg
aas
cdq
js
mov
mov
add
or
dec
add
test
xchg
cmp
or
add
xchg
fstp
pop
xchg
cmp
jmp
fidivr
mov
(bad)
push
pop
cli
lea
fldenv
mov
push
jnp
stc
dec
popf
mov
movs
push
mov
and
cmp
aam
jnp
push
or
ficomp
jge
stos
sub
cs
push
(bad)
mov
xchg
pop
xchg
cmp
fs
retf
clc
test
rol
enter
pushf
jge
mov
(bad)
(bad)
mov
stos
loop
mov
shl
xchg
js
por
sti
jl
fwait
xchg
adc
jb
push
cmp
cmp
and
cmps
mov
pop
jbe
sub
inc
sbb
cmp
scas
mov
(bad)
(bad)
mov
nop
fdiv
loope
or
enter
call
test
mov
add
call
ins
fistp
sub
cmp
sahf
int3
test
sbb
fnsetpm(287
xchg
ret
mov
test
ja
and
xor
sbb
fdiv
add
lahf
out
jns
inc
pushf
jg
cmp
daa
dec
cmps
cld
loop
mov
mov
clc
pop
sub
lock
jne
setp
ss
call
call
jecxz
loopne
mov
repz
push
cmp
aas
xchg
or
or
(bad)
and
cmp
repz
aad
mov
mov
loop
not
inc
std
inc
std
lahf
cmp
cli
xor
xlat
fistp
xor
dec
call
fcomp
push
sbb
aam
inc
stos
in
imul
in
dec
aas
dec
jl
add
jns
stos
ss
loop
mov
pop
retf
and
pop
xor
stos
cld
inc
and
mov
sbb
out
jge
xchg
popf
jle
xor
pop
aam
imul
push
addr16
mov
inc
ja
iret
ret
cmp
cli
repnz
jg
dec
std
cmp
clc
push
fdivp
sbb
stos
std
aas
mov
cwde
rcr
pop
add
ins
xor
xchg
jl
mov
jno
arpl
or
pop
lods
in
jnp
int3
nop
push
push
push
fcmovne
std
or
popa
fldcw
je
xor
jmp
or
(bad)
mov
jl
inc
mov
inc
mov
retf
outs
aad
xor
mov
push
adc
mov
(bad)
cwde
retf
clc
rcr
ins
xchg
jg
jmp
xor
stc
fst
xor
aad
sub
pop
imul
idiv
popf
add
mov
jbe
cmp
cwde
cmc
jecxz
hlt
fs
and
ja
cmp
mov
dec
cmp
inc
repz
clc
call
push
cmps
cwde
mov
cs
ret
push
or
int3
sbb
movs
add
push
cwde
into
cmp
jecxz
adc
sar
and
push
adc
cmp
std
test
addr16
cwde
imul
sub
loopne
or
adc
adc
sbb
and
jmp
pop
cld
pop
mov
hlt
lea
and
js
xchg
and
mov
push
rol
mov
test
xadd
cmp
imul
pop
mov
cmp
mov
xchg
ins
inc
jmp
adc
inc
jne
(bad)
xor
sub
shl
xchg
lea
or
mov
lds
adc
fisttp
pop
dec
adc
fsubr
test
mov
ins
inc
test
xor
jg
mov
in
cmp
mov
adc
daa
je
cmp
outs
xchg
cmp
les
dec
stos
cmp
or
hlt
loop
loope
sbb
and
adc
add
add
loop
mov
data16
adc
not
test
dec
stos
lods
adc
pop
in
imul
inc
and
and
mov
pop
inc
test
push
xchg
adc
mov
int3
pop
pop
dec
loope
push
mov
xor
sbb
sub
cmp
mov
jle
jg
neg
push
hlt
stc
stos
movs
xchg
adc
lahf
sub
(bad)
mov
in
xchg
or
(bad)
jmp
ficom
imul
mov
cmp
dec
aam
repnz
mov
dec
std
push
cwde
inc
sbb
fbld
mov
pop
sahf
xchg
dec
fnstsw
inc
mov
adc
or
pop
lahf
mov
adc
and
add
mov
pop
xchg
xchg
mov
and
dec
addr16
(bad)
(bad)
mov
(bad)
fwait
or
sub
pop
nop
scas
js
push
test
mov
xchg
test
cmp
ret
adc
iret
not
cli
popf
or
mov
(bad)
xor
adc
pop
xor
or
cmp
mov
xor
mov
jae
mov
xlat
push
add
call
and
dec
push
inc
xchg
jbe
out
dec
mov
jns
inc
fwait
leave
pop
mov
add
fs
pop
into
cs
dec
mov
xor
in
xchg
(bad)
mov
jb
pop
test
std
xchg
dec
jbe
push
dec
ins
ror
fmul
mov
fidiv
lahf
lds
ds
shr
mov
stos
jbe
adc
or
jg
clc
adc
xor
std
imul
push
ss
adc
jmp
jg
cmp
js
(bad)
mov
jns
push
push
push
mov
cwde
mov
cmps
lods
pop
inc
fstp
in
mov
addr16
xchg
push
loop
jno
ret
sub
jne
repz
enter
js
es
das
pusha
mov
pop
pop
lock
int3
push
gs
jns
ss
mov
out
sub
add
shr
jmp
fisubr
sbb
ja
push
inc
ds
dec
mov
lods
jo
hlt
rcr
cmovb
rol
cdq
dec
retf
movs
div
mov
push
jno
dec
xor
outs
(bad)
call
in
stos
sbb
scas
les
push
outs
pop
cmp
mov
push
mov
loope
sbb
ja
daa
and
dec
xor
jmp
add
mov
mov
scas
adc
mov
push
add
add
retf
jno
loope
into
mov
jbe
ds
jns
aam
mov
mov
es
adc
jp
movs
stc
ins
or
ins
imul
gs
shr
cwde
mov
dec
mov
js
dec
jae
popf
jmp
sbb
stos
movs
in
arpl
(bad)
mov
sti
jo
jnp
dec
scas
inc
xchg
mov
cli
arpl
add
mov
pop
and
xlat
sbb
add
sbb
aaa
inc
dec
ja
movs
adc
or
sbb
xchg
iret
jae
mov
adc
in
outs
dec
inc
out
ja
jns
ds
mov
mov
mov
enter
push
mov
fistp
or
cmps
fnstsw
or
(bad)
loopne
pushf
sar
movs
push
mov
adc
pop
adc
jge
iret
iret
sbb
jge
xor
lds
push
pop
(bad)
retf
iret
retf
lea
loope
xchg
dec
and
jl
imul
shr
ror
aas
mov
sub
mov
lock
or
inc
pop
scas
adc
sbb
or
mov
call
add
shl
in
or
iret
fsubp
orps
jg
mov
dec
inc
push
xchg
scas
fmul
mov
(bad)
jl
les
jae
aaa
mov
addr16
fs
aam
mov
push
stc
popa
repnz
shl
cdq
repnz
fsub
push
movs
jae
in
test
pop
or
icebp
test
mov
push
push
xor
outs
outs
cdq
dec
sbb
bound
aas
(bad)
cmp
pop
std
jb
adc
fst
pop
outs
lock
test
sti
sub
mov
push
add
frstor
pop
loop
outs
test
int3
xor
xchg
mov
jae
retf
out
fdiv
cld
scas
shl
aas
clc
adc
pop
cmp
aad
sub
in
(bad)
imul
mov
mov
iret
call
loope
loopne
test
gs
mov
aam
pop
push
push
rcl
jp
addr16
fwait
pusha
test
push
cwde
idiv
arpl
hlt
or
mov
cdq
icebp
xchg
mov
cmp
out
imul
push
and
and
out
mov
dec
inc
scas
and
push
xor
popa
int
jb
mov
mov
loop
js
jmp
hlt
fs
retf
bound
dec
and
cmp
lock
adc
call
cs
daa
sbb
outs
pop
adc
xchg
add
rcr
fdivp
pop
popf
inc
sar
in
cs
jge
pop
cld
xchg
loop
cmp
pop
out
jbe
cmp
pop
mov
jmp
stc
jns
ins
je
into
retf
sub
adc
adc
xchg
mov
dec
int3
arpl
add
adc
popa
adc
pop
add
enter
inc
clc
loopne
push
pop
into
out
mov
loopne
leave
jno
in
inc
inc
xor
xchg
loop
mov
jmp
dec
cwde
dec
pop
nop
push
dec
fcomi
mov
lds
cmp
call
jo
fidivr
cmp
cli
call
loope
and
adc
movs
jmp
jne
stc
or
retf
push
inc
mov
jl
fst
pushw
adc
loope
push
enter
cmp
cwde
les
jo
adc
hlt
add
cmp
das
sub
add
and
jbe
arpl
fld
jg
rol
aam
in
dec
fs
inc
push
mov
out
sbb
(bad)
cmp
pop
(bad)
outs
call
bound
pop
and
mov
dec
lods
sub
fld
add
imul
test
nop
inc
ret
or
popf
popf
in
sbb
(bad)
jge
pushf
call
rol
(bad)
jne
sbb
jne
mov
mov
sub
pop
lea
xor
mov
stos
imul
cs
cld
sub
ins
test
cmp
mov
or
and
mov
or
call
jge
sbb
mov
mov
into
rol
pop
inc
cmp
or
jg
stc
dec
lods
ret
outs
cmps
es
out
imul
jae
push
ret
idiv
mov
jg
outs
movs
xchg
push
inc
inc
add
dec
(bad)
(bad)
aad
fst
frstor
jmp
and
xchg
jmp
xor
or
enter
ss
jbe
jp
push
xor
sbb
loopne
loop
(bad)
aam
jmp
sub
cmp
sbb
jp
test
mov
imul
push
mov
mov
bnd
retf
jge
jae
pop
je
ja
jg
dec
daa
jecxz
xchg
fldenv
movs
add
je
mov
aas
inc
mov
or
ins
stos
dec
push
inc
(bad)
pop
repz
adc
sub
(bad)
lods
push
pop
mov
cmp
pop
dec
ins
out
aas
jge
mov
xor
mov
push
in
and
movs
or
fwait
mov
in
push
test
cwde
mov
sar
fstp
std
sbb
and
movs
sub
test
enter
retf
mov
(bad)
cdq
out
shl
xchg
push
into
std
dec
fwait
push
scas
popf
test
jbe
in
sbb
sub
(bad)
pop
arpl
imul
not
jle
xor
push
jns
call
mov
ret
loope
test
sub
xchg
and
pop
dec
shr
js
scas
pop
xor
lahf
rcl
aam
push
fdivr
sub
dec
int3
inc
pop
jmp
sub
xchg
loop
or
out
xor
dec
adc
les
mov
scas
cmps
(bad)
or
outs
cli
cmp
adc
push
clc
in
sbb
mov
aaa
xor
or
frstor
(bad)
fistp
shl
mov
push
and
and
xchg
dec
retf
push
push
push
std
mov
mov
jl
xor
jno
mov
stos
in
push
outs
arpl
sbb
lea
xchg
aam
push
xchg
fadd
mov
ret
dec
retf
test
cmp
inc
adc
pop
push
iret
lods
inc
out
push
and
out
inc
cmp
in
pop
mov
shl
les
mov
dec
mov
(bad)
mov
fldenv
xor
cmps
ror
enter
outs
(bad)
icebp
mov
es
lds
pushf
shl
ror
je
jg
pop
popa
movs
adc
adc
fld
enter
pop
hlt
mov
pop
inc
aaa
ret
pop
add
repz
mov
pop
imul
loope
push
mov
inc
sbb
push
ds
adc
shl
adc
scas
imul
lods
(bad)
(bad)
push
pop
std
out
call
fucomi
aaa
jmp
sub
push
int
pop
pop
xabort
and
sbb
lahf
mov
dec
sub
sub
push
or
div
leave
or
int3
jnp
jp
sub
mov
adc
push
stos
mov
sti
add
jae
in
mov
xor
cmp
sbb
jns
dec
jno
scas
je
push
cdq
pop
fcomip
(bad)
loopne
add
popa
adc
stc
push
mov
xlat
mov
(bad)
adc
dec
loope
(bad)
pop
mov
rcl
pop
stos
imul
loopne
in
es
push
push
pop
in
mov
mov
(bad)
rcr
mov
ins
cmps
bound
nop
jmp
pop
(bad)
mov
cmc
fcom
jg
jbe
outs
and
clc
mov
add
push
push
in
push
icebp
daa
mov
retf
add
mov
loop
in
popf
and
leave
loopne
mov
jecxz
add
and
and
jmp
adc
ja
inc
mov
je
or
lods
in
mov
mov
push
ret
pusha
xchg
out
adc
jle
pop
mov
pop
and
in
adc
dec
iret
adc
cmp
in
cwde
push
ret
cmp
(bad)
(bad)
fistp
retf
xlat
lods
sbb
add
jb
sbb
push
cmp
fadd
mov
mov
ds
icebp
xchg
shl
push
cmp
retf
out
add
daa
cmp
and
jl
outs
inc
ins
jecxz
rol
pop
int3
mov
(bad)
and
call
jecxz
scas
(bad)
xor
retf
cld
fcom
shl
add
inc
out
jge
push
aam
lahf
rcr
or
retf
fadd
leave
mov
push
dec
dec
jnp
adc
jns
out
lea
iret
mov
lods
hlt
xor
ror
jo
pop
push
loopne
fdivr
fbld
data16
xor
(bad)
sbb
repz
mov
fcomp
(bad)
jl
sahf
fcmovnu
ins
in
ret
mov
pop
mov
mov
mov
pop
lods
imul
and
jns
inc
xlat
jae
jge
popf
call
fisttp
pop
js
jp
(bad)
xor
push
fld
xchg
test
adc
movs
cmp
adc
jno
stos
mov
mov
(bad)
jo
les
xor
lds
movs
aam
mov
repnz
gs
in
movs
pop
mov
push
sbb
mov
hlt
pop
xor
mov
jle
jno
std
int3
sbb
ja
mov
jb
aas
cli
test
rcl
iret
fst
mov
mov
or
je
xchg
lea
mov
cwde
nop
inc
mov
rol
mov
test
xchg
inc
(bad)
jo
and
sub
aaa
jmp
js
sbb
xor
ds
test
daa
add
mov
xchg
jl
in
in
mov
push
xchg
sahf
sub
mov
ret
and
movs
int
rol
test
mov
aam
fld
arpl
cmp
loop
dec
mov
lahf
and
or
pop
ds
in
sub
jns
cmp
xor
add
loop
push
stos
mov
pop
inc
sub
jae
pop
xlat
repnz
and
shl
cmp
push
imul
mov
jg
mov
xlat
movs
jle
cmps
adc
push
dec
adc
test
pop
fwait
xchg
iret
add
pop
jbe
sahf
dec
push
jbe
lock
cmc
lods
lahf
inc
xor
mov
add
shr
mov
mov
cdq
lock
xor
outs
inc
sub
xor
push
inc
xchg
jmp
test
data16
adc
aam
fist
clc
xchg
mov
mov
in
jge
in
fsub
xor
or
cmp
out
or
push
dec
ror
lahf
mov
mov
push
or
xor
rcr
enter
push
outs
sahf
sub
jmp
(bad)
push
data16
mov
push
ds
cmp
xchg
lahf
xchg
sub
push
cmps
scas
ins
mov
(bad)
int
aas
push
out
dec
fwait
in
add
js
push
jl
push
imul
std
sub
mul
mov
arpl
inc
rol
jecxz
inc
dec
ror
adc
sub
cmp
outs
(bad)
xlat
or
xchg
dec
call
faddp
sbb
add
xchg
in
fdiv
sub
inc
mov
movs
cmp
jns
int3
and
pop
into
addr16
scas
fld
mov
inc
pop
stos
add
mov
in
int
cmp
and
out
ret
scas
shl
scas
call
or
mov
push
xchg
mov
xchg
push
add
das
dec
inc
addr16
sub
mov
cwde
fwait
in
push
int
pop
and
push
fs
bound
clc
pop
icebp
fs
sbb
sub
in
sbb
pop
pushf
push
rcr
inc
push
imul
push
sub
push
shl
inc
push
sti
xor
mov
pop
std
lahf
mov
scas
adc
mov
test
test
mov
mov
xor
clc
pop
ror
je
retf
hlt
jae
pushf
add
mov
jne
(bad)
aam
loope
cld
mov
mov
(bad)
scas
mov
xchg
loop
xchg
stos
mov
psrad
fcom
mov
dec
fcom
ins
fld
int3
sti
mov
xchg
push
and
bound
stos
push
mov
push
shl
test
mov
test
mov
mov
inc
(bad)
pop
cmc
les
enter
sbb
push
ds
add
nop
stc
stos
lods
bound
jno
fs
repnz
hlt
mov
dec
xor
outs
add
ror
xchg
rol
cmp
dec
adc
jno
adc
repnz
imul
xchg
pushf
stos
push
mov
rcr
shl
popa
or
and
sub
cwde
jp
push
sbb
or
xchg
push
mov
enter
pusha
mov
pop
cmps
inc
add
cmps
pushf
dec
cmp
inc
(bad)
and
sahf
xor
pop
pop
jp
loop
scas
add
add
pushf
or
fs
xor
adc
jg
(bad)
pop
loopne
into
or
adc
mov
lods
mov
jp
push
(bad)
jp
pop
icebp
dec
(bad)
jge
call
scas
xor
mov
enter
dec
mov
outs
out
ret
pop
jo
imul
pop
pushf
jo
jmp
mov
sub
dec
test
rcpps
xor
ret
sub
imul
and
pop
mov
test
shl
sbb
cwde
pushf
fidivr
cli
cmp
cwde
xor
mov
fild
mov
sub
pop
sub
jmp
inc
push
mov
push
dec
movs
icebp
cmps
sub
mov
cwde
cmps
pop
dec
(bad)
ror
and
popa
xchg
jl
out
pop
push
push
aaa
jmp
int
sbb
pop
and
and
lea
fcom
test
nop
addr16
std
xchg
sti
imul
xlat
inc
push
add
sbb
dec
mov
movs
mov
adc
push
xor
jno
sub
and
pushf
xchg
add
pusha
les
popf
lods
jae
mov
sahf
push
inc
sub
sbb
popf
test
and
jle
xor
dec
xchg
cdq
rcl
(bad)
lds
loope
scas
mov
addr16
jp
ins
jmp
jb
imul
inc
fiadd
push
into
dec
addr16
jecxz
adc
movs
repnz
shr
test
pop
in
fsubr
(bad)
stos
pop
pop
add
xlat
jo
push
sub
mov
inc
xor
(bad)
or
sub
arpl
and
mov
cmp
clc
jae
inc
call
hlt
iret
clc
cmps
or
pop
mov
into
ret
test
pop
cmp
cmp
es
dec
push
sub
aaa
dec
add
repz
pop
dec
ffreep
mov
ror
adc
jne
adc
inc
icebp
cmc
xor
sub
les
hlt
xor
jno
sub
les
push
xor
mov
xor
in
mov
pop
fs
jge
jp
mov
loop
hlt
adc
ss
cmc
sbb
mov
push
or
(bad)
sbb
mov
add
leave
sub
addr16
std
popf
jg
ins
shr
popf
test
dec
xchg
mov
and
mov
in
retf
and
std
es
mov
or
push
pusha
and
rcr
pop
xor
push
test
xchg
seto
jmp
jge
cld
repz
mov
xor
lock
mov
jnp
jl
and
add
test
outs
and
sbb
push
int3
imul
and
(bad)
and
nop
movs
or
jg
inc
push
ss
fdiv
es
jne
pusha
push
iret
loopne
push
lods
jge
inc
mov
xchg
mov
pop
cvtps2pi
mov
dec
xor
ror
scas
aam
cmc
push
push
pusha
dec
lods
jne
push
(bad)
xor
mov
push
dec
push
mov
inc
cmps
mov
stos
mov
push
mov
jle
sub
fimul
jb
mul
xor
test
xchg
and
sub
mov
adc
inc
mov
(bad)
cmc
mov
scas
and
push
sahf
lds
retf
in
(bad)
push
into
add
das
pop
int3
(bad)
sbb
test
mov
push
iret
xchg
push
cmp
out
jae
mov
xor
mov
push
outs
ds
jbe
stos
sti
retf
retf
pop
pushf
jp
xor
movs
xlat
cmp
xchg
ret
mov
jmp
or
in
(bad)
scas
pop
lahf
sub
pushf
iret
movs
add
mov
mov
pushf
adc
mov
cmp
push
add
push
fcom
mov
xchg
mov
adc
stos
aas
je
neg
in
push
jb
fwait
das
dec
pusha
adc
and
sbb
ret
pop
iret
pushf
loope
mov
into
jae
ret
out
or
mov
mov
add
sub
sbb
loope
adc
fistp
in
xor
or
test
loope
ret
cli
sub
imul
xor
sub
(bad)
into
rcr
push
mov
imul
xchg
sbb
xchg
clc
jno
int3
dec
scas
and
adc
sbb
in
lods
cmps
not
popa
pop
repnz
ds
jne
cmc
cmp
int
out
adc
addr16
jo
fwait
cmc
fadd
xchg
pop
cmp
mov
cmps
repnz
lock
or
outs
out
mov
mov
inc
or
dec
in
dec
jns
aas
enter
shr
sbb
retf
pop
loop
in
add
lods
push
mov
push
rol
push
add
sub
jo
es
int
dec
outs
mov
aad
and
stos
and
add
ins
push
and
and
iret
xchg
add
fnstcw
ins
inc
dec
mov
(bad)
sub
mov
int
adc
loope
arpl
dec
daa
xchg
push
xchg
add
nop
test
mov
cmp
xor
cs
cmp
rcl
out
movs
jge
mov
adc
jmp
daa
xchg
add
ja
call
lods
sti
lods
mov
addr16
add
popa
push
mov
arpl
test
repnz
cmc
out
push
enter
adc
fild
(bad)
cmp
lods
xchg
or
xchg
sbb
or
aam
mov
inc
(bad)
call
pushf
sahf
outs
mov
inc
test
mov
mov
add
add
xchg
mov
stos
dec
push
retf
fisttp
add
fstp
dec
or
mov
cmps
and
sbb
jg
ret
jb
push
mov
fidivr
mov
pop
test
(bad)
fist
mov
std
jg
sbb
push
outs
jmp
and
jmp
int3
outs
mov
ror
inc
in
out
xchg
mov
push
push
(bad)
mov
or
ins
cmp
imul
jmp
inc
outs
(bad)
cmc
js
sub
push
lods
mov
cmp
js
pop
xlat
popf
sbb
or
dec
mov
xchg
out
out
jnp
outs
mov
call
and
mov
outs
xchg
ret
jg
xchg
cmps
sbb
shr
sub
or
jg
popa
mov
jl
sahf
je
jo
movs
pop
push
js
sbb
mov
jb
sbb
pusha
inc
mov
in
add
int
(bad)
jbe
nop
dec
push
inc
mov
test
cdq
mov
aam
adc
mov
push
push
xlat
dec
mul
xchg
jns
xchg
mov
popa
push
pushf
jo
pop
add
and
mov
(bad)
sub
aam
sbb
(bad)
cmp
ins
sub
push
daa
shl
jbe
adc
popf
lock
jecxz
xchg
push
iret
fs
and
(bad)
pop
xchg
inc
or
dec
mov
jnp
(bad)
(bad)
dec
jmp
ret
ja
(bad)
pop
mov
lahf
or
inc
cmp
dec
pop
pop
data16
(bad)
ins
mov
push
and
mov
test
xchg
add
adc
push
addr16
into
mov
test
add
mov
pop
and
pop
adc
shr
and
fcomip
pop
nop
sti
sbb
pop
fdiv
aaa
xlat
lock
cmp
clc
or
mov
adc
outs
cmp
xor
and
push
icebp
shl
mov
cmp
mov
push
push
out
fadd
pop
into
(bad)
adc
test
aam
mov
xor
lahf
xor
and
out
xchg
into
sub
or
jns
call
das
in
movs
scas
pop
mov
scas
inc
ror
pop
jmp
mov
mov
in
lock
call
sbb
push
pusha
or
nop
mov
jae
imul
jne
movs
repz
lock
inc
cmp
mov
in
jge
aam
xor
or
icebp
pop
mov
ins
ret
das
scas
dec
add
cmps
popa
inc
inc
repz
inc
mov
in
xchg
cmp
into
ds
cmp
and
(bad)
xor
dec
cmp
retf
push
(bad)
retf
ins
test
out
jl
xchg
push
and
and
adc
xchg
jg
js
xlat
jp
xchg
push
imul
dec
scas
pop
xor
cli
idiv
or
xor
xor
jmp
xchg
movs
fild
add
sbb
ins
out
sub
xor
pop
jl
add
lock
dec
jae
out
pop
fcmovnu
in
aas
test
mov
cmp
push
ret
and
aaa
pop
in
stos
push
ins
cmp
push
push
retf
xor
les
mov
test
mov
adc
inc
fwait
cmp
addr16
dec
dec
daa
mov
std
jmp
inc
or
mov
cwde
xlat
and
out
js
push
xchg
fs
jmp
test
and
repz
std
imul
enter
cmc
out
jbe
sbb
inc
push
fst
mov
imul
mov
int
gs
scas
and
xor
and
ror
and
movs
leave
or
mov
into
push
outs
fstp
out
push
adc
add
cs
cmp
pop
hlt
and
sbb
dec
lods
mov
mov
jns
cmp
daa
repz
or
sub
xchg
and
aam
dec
push
add
scas
stos
sub
cmp
xor
pop
retf
lock
pop
push
lock
sbb
mov
cli
cmp
add
xchg
or
pop
fcomp
mov
push
enter
int
mov
mov
xlat
push
mov
xor
jg
jmp
adc
std
inc
std
aaa
call
in
jae
test
jge
data16
and
cmp
int3
fimul
mov
out
ins
sbb
scas
out
jb
sub
sbb
loope
or
loop
(bad)
jmp
xchg
add
adc
hlt
xor
cmc
stos
cmpps
imul
addr16
jmp
pop
retf
out
mov
sbb
dec
inc
lods
mov
and
and
dec
add
push
jecxz
mov
inc
xlat
and
out
adc
(bad)
push
movs
push
xchg
and
sub
lahf
call
lds
outs
xchg
lea
in
mov
cmp
jae
cmps
push
sahf
dec
fldcw
jno
dec
daa
xchg
adc
mov
mov
js
shl
inc
jno
mov
or
mov
int3
xor
and
leave
cwde
mov
or
inc
mov
xchg
cli
outs
arpl
adc
into
push
lea
(bad)
shl
xchg
sub
push
getsec
sahf
xchg
and
retf
ficomp
mov
xor
cdq
or
std
pop
mov
jb
add
sub
mov
mov
fwait
in
pusha
imul
dec
(bad)
fcom
or
or
add
push
inc
mov
mov
push
sti
lods
mov
aaa
or
pusha
cdq
mov
or
adc
lds
pop
jmp
inc
sti
adc
mov
outs
xchg
mov
push
leave
pop
outs
cld
jle
(bad)
into
push
cmp
cli
mov
mov
and
retf
or
stc
mov
mov
pop
imul
push
loopne
mov
sub
shl
cmp
jg
test
sub
arpl
test
xchg
(bad)
rcl
lea
sbb
mov
dec
sub
mov
push
push
fnstenv
ficom
inc
ja
cli
sub
dec
sti
int3
xor
nop
push
inc
ds
xchg
xlat
leave
das
aad
mov
popf
push
retf
loop
loope
cmp
nop
push
or
imul
ja
add
loop
inc
enter
push
outs
jl
push
mov
pop
xor
mov
loopne
and
jmp
loopne
xchg
daa
cmp
lock
push
rep
mov
repz
push
addr16
sub
out
and
jp
loopne
pop
fsubp
mov
lods
aam
out
clc
sub
jb
lods
mov
pop
mov
push
mov
(bad)
jl
cmps
scas
lea
adc
nop
call
dec
mov
ror
rcr
sbb
out
pop
xchg
in
je
cmp
mov
or
or
div
sbb
fidiv
leave
imul
ret
or
inc
dec
ror
dec
rcr
in
bound
pop
push
mov
mov
and
gs
call
lds
or
sub
add
(bad)
pop
lods
fisttp
test
xchg
mov
push
cwde
jno
(bad)
pop
movs
scas
xchg
(bad)
and
rol
lahf
arpl
mov
gs
mov
out
jp
push
mov
jmp
lods
pop
pop
mov
add
sbb
jp
mov
scas
loop
sbb
dec
les
mov
add
mov
pop
cmp
dec
aaa
fucom
cmc
adc
adc
jmp
imul
push
mov
cmp
xlat
pop
mov
push
test
ins
cdq
jbe
fmul
jg
imul
sbb
mov
xchg
mov
jge
push
mov
or
lea
xor
outs
fwait
mov
retf
inc
movs
sub
adc
sti
add
out
sub
sbb
loope
bound
mov
adc
sub
or
neg
ret
sbb
pop
movnti
aam
and
loope
xor
cmc
(bad)
or
outs
mov
setle
ror
inc
xor
jp
jg
mov
pop
mov
push
mov
inc
out
retf
sbb
imul
sub
push
mov
inc
add
mov
(bad)
mov
mov
and
outs
push
cwde
aaa
inc
jbe
aaa
scas
loopne
pusha
rep
xor
aad
out
in
iret
jmp
cmp
xor
mul
push
shr
jmp
jecxz
and
and
shl
jg
data16
jae
mov
fnstcw
adc
jno
mov
cmp
cdq
jmp
neg
loope
cmp
mov
mov
xor
pop
outs
cdq
add
gs
sbb
sbb
dec
pushf
sbb
mov
xchg
add
jns
jns
sar
cs
and
cmp
mov
mov
push
pop
xchg
mov
cmp
imul
mov
shr
ds
aam
jb
gs
adc
xchg
sbb
cmp
dec
xchg
push
add
add
xchg
sub
lahf
lahf
shl
cmps
push
(bad)
jo
mov
test
je
sbb
cwde
mov
std
loopne
pop
sub
cmps
lods
mov
out
mov
in
int
sub
mov
or
adc
cmp
fidiv
popa
pop
dec
es
hlt
test
add
mov
sbb
push
inc
xchg
inc
fwait
std
dec
fistp
and
jno
xor
stos
xchg
pushf
into
xor
xchg
inc
jo
push
js
ja
pushf
test
fwait
mov
or
xor
sbb
xor
test
mov
dec
ins
mov
add
into
mov
xor
js
aas
sbb
and
in
clc
enter
addr16
cmps
prefetchw
or
scas
push
sub
(bad)
xor
jae
jne
push
arpl
cs
cmps
mov
test
adc
(bad)
jnp
clc
pop
scas
loopne
push
push
mov
addr16
xchg
xchg
int3
jae
sahf
push
and
push
es
fisttp
cmp
ror
in
adc
gs
inc
mov
xlat
xor
pop
movs
inc
es
pop
cmps
cmps
mov
in
mov
adc
dec
shl
add
sub
cld
movs
dec
je
or
pop
retf
cmp
mov
xor
ret
popa
(bad)
fmul
inc
test
sbb
mov
aas
push
in
jae
dec
or
std
mov
inc
mov
in
mov
xchg
cwde
ja
or
(bad)
cmp
pop
adc
jbe
add
cmp
jg
sbb
push
mov
push
std
hlt
ror
jae
xchg
lock
pop
mov
xor
rcl
inc
adc
aam
jno
push
fnsave
dec
or
aas
mov
rol
movs
outs
mov
lods
leave
sar
push
sar
inc
call
pop
mov
scas
in
test
pop
into
push
cmc
cmp
fistp
xor
aad
inc
add
aad
adc
jo
pushf
dec
dec
fs
int
mov
enter
xor
push
push
inc
adc
aam
sahf
aas
add
add
dec
pop
lods
in
push
mov
cmp
mov
cmp
sbb
dec
sub
and
ds
mov
movs
ins
cmp
mov
movs
mov
fnsave
mov
push
sbb
in
adc
mov
cmp
hlt
aas
cmp
outs
aad
lods
stos
sub
and
iret
mov
pop
or
mov
and
mov
xor
or
mov
xor
mov
cmc
daa
jae
sbb
push
ret
dec
dec
pop
adc
in
aad
and
add
jp
cli
dec
(bad)
pop
push
inc
or
ja
pop
(bad)
mov
(bad)
lods
les
cmp
mov
xchg
into
arpl
loope
pop
xchg
inc
inc
(bad)
jns
push
lahf
loope
cmps
lahf
xchg
jns
bound
push
push
dec
call
pop
inc
cmp
pop
aas
sar
inc
fisubr
je
mov
(bad)
sti
call
push
clc
sbb
sbb
scas
adc
out
and
mov
xchg
iret
pop
jp
jmp
push
cmp
pushf
out
inc
or
cld
aas
clc
sbb
add
sub
pop
inc
icebp
mov
jg
jmp
and
mov
inc
jno
mov
cmp
(bad)
push
and
nop
adc
iret
ins
clc
mov
aaa
jae
jmp
outs
cwde
out
je
add
mov
dec
out
push
pop
xor
adc
js
add
mov
sub
test
push
repnz
lock
adc
nop
movs
dec
jae
jno
test
pop
(bad)
sahf
xor
mov
push
mov
pop
or
je
or
cmp
or
retf
push
push
dec
sahf
mov
repnz
xchg
sub
dec
cmp
pop
xchg
push
hlt
mov
test
not
inc
jns
sub
xchg
mov
mov
rcr
sahf
sbb
sti
sti
data16
jecxz
not
scas
imul
test
cmp
inc
fisub
loop
ss
adc
test
movs
xor
sbb
retf
stos
dec
jg
xchg
mov
xor
push
ret
pop
outs
out
dec
xor
ret
rcr
xacquire
outs
jge
push
inc
scas
inc
pusha
mov
imul
mov
ret
(bad)
pop
out
cmps
xlat
movs
outs
js
scas
adc
test
rol
fsubr
mov
jmp
sub
push
xchg
add
fnstsw
ss
test
xchg
sub
sahf
push
sbb
adc
fidiv
test
inc
repz
cmp
es
and
mov
js
jae
fcmove
mov
sbb
mov
cmps
lock
out
add
test
mov
xchg
mov
mov
jg
mov
jl
sbb
mov
dec
(bad)
js
les
lods
nop
outs
gs
ret
hlt
xor
scas
xor
sub
mov
xchg
jecxz
mov
sbb
pop
xor
inc
sbb
(bad)
lea
lods
fdiv
adc
push
mov
xchg
pop
movs
sbb
xor
xchg
scas
and
cs
jmp
rcr
test
popf
gs
push
jno
addr16
mov
adc
xor
inc
xor
ins
xchg
in
das
data16
cwde
cmps
or
jno
jmp
inc
mov
and
or
cmps
arpl
inc
pop
xor
pop
(bad)
inc
loopne
test
lods
cmp
popf
aad
or
sub
inc
cmp
(bad)
jle
jno
shl
mov
fdivr
in
cmp
xchg
stos
ror
sahf
mul
es
push
leave
xchg
mov
xchg
push
int
(bad)
cli
adc
mov
cld
ja
cmc
and
xor
xchg
loop
inc
test
cmp
in
dec
pop
daa
aas
mov
inc
out
retf
push
nop
or
shl
sar
ins
imul
xor
pop
fwait
outs
and
mov
into
and
outs
dec
dec
mov
lahf
add
adc
fsubr
stc
cmp
(bad)
test
cmc
sub
mov
stos
mov
xchg
inc
mov
gs
rcl
pop
not
mov
imul
icebp
add
pop
jmp
mov
cmp
imul
push
jae
nop
fstp
call
in
test
xchg
jb
cmp
mov
in
lea
xor
add
daa
fistp
cli
lods
mov
mov
je
dec
loop
aas
or
or
shl
mov
and
and
dec
jo
test
push
mov
ret
pushf
(bad)
(bad)
shl
shl
mov
nop
sbb
in
scas
stos
and
mov
icebp
lods
add
or
mov
dec
scas
outs
jnp
and
and
push
push
mov
rcr
sti
pop
mov
adc
sahf
aam
mov
fdivr
xor
and
or
leave
push
push
popf
test
adc
ja
sub
pusha
fstp
test
add
out
rcl
or
xchg
aam
add
in
aas
cmp
popa
in
sbb
or
xchg
cdq
cld
ja
repz
addr16
mov
push
jnp
jae
pushf
test
sbb
inc
mov
sbb
(bad)
retf
pop
sbb
enter
sub
sahf
add
mov
ret
or
ror
jno
mov
hlt
mov
or
jl
inc
lea
xor
jmp
xchg
inc
and
in
jbe
std
inc
inc
push
fiadd
dec
cdq
les
push
jl
movs
lahf
add
xchg
fs
dec
loop
js
jbe
dec
pop
sti
pusha
xchg
jecxz
adc
or
into
test
(bad)
call
mov
mov
enter
xor
(bad)
pop
std
mov
push
mov
mov
xor
in
in
ret
jge
xchg
ret
das
lahf
test
aam
imul
push
dec
int
(bad)
xchg
mov
push
adc
pop
or
(bad)
mov
arpl
mov
mov
or
push
into
test
stos
into
pop
leave
jp
loop
outs
and
add
jbe
(bad)
loop
add
outs
shl
inc
jne
cmps
mov
cmp
repz
out
pop
or
call
push
sbb
mov
pop
lods
or
push
sub
xor
push
adc
mov
sub
and
cmp
add
or
lahf
retf
pop
jmp
mov
pop
sahf
fistp
mov
jmp
mov
mov
jle
push
push
cmp
fisttp
inc
cs
das
outs
inc
mov
(bad)
cmp
mov
sbb
fs
jmp
retf
sub
cmp
xor
mov
inc
and
push
sub
arpl
rcr
mov
fimul
xchg
(bad)
aaa
xor
sbb
std
repnz
int3
in
mov
icebp
out
aaa
add
stos
mov
test
push
mov
xor
sub
mov
dec
xor
es
dec
xchg
rcr
inc
test
into
movs
daa
add
mov
pusha
iret
popf
mov
(bad)
push
mov
cld
lods
fs
out
push
inc
pusha
leave
retf
jge
mov
dec
adc
int3
or
and
pusha
pop
mov
(bad)
aam
pop
xlat
in
enter
jno
fdiv
aaa
inc
std
sub
xchg
imul
jo
cli
xchg
add
outs
rcl
xchg
mov
retf
push
mov
fild
xchg
xor
fs
push
(bad)
mov
aam
mov
mov
and
cmp
pop
arpl
jge
inc
int3
imul
jns
out
out
sar
fiadd
mov
imul
and
mov
add
inc
and
inc
inc
push
add
in
jp
mov
xchg
loope
and
dec
or
rol
shr
loop
jle
inc
cmp
movs
addr16
sahf
or
test
aam
dec
mov
loope
fimul
out
sub
pop
shr
mov
adc
mov
inc
jmp
cld
(bad)
jnp
pushf
in
ror
jns
cmp
out
mov
in
xchg
fist
xchg
fdivr
or
(bad)
hlt
imul
add
sub
or
mov
xchg
pop
cmp
cwde
call
xor
sub
adc
iret
jne
xchg
pop
movaps
or
inc
mov
outs
mov
mov
test
loope
(bad)
scas
mov
in
push
pop
sbb
mov
(bad)
mov
cli
fbstp
aam
xor
xchg
gs
sbb
clc
dec
ror
jns
push
(bad)
dec
out
pop
push
sub
xchg
in
dec
xchg
mov
inc
xor
lock
mov
xchg
dec
xor
arpl
push
out
call
je
dec
(bad)
fistp
int3
xor
and
push
scas
add
call
pop
daa
rol
mov
jmp
jmp
jne
test
in
addr16
in
ins
jae
(bad)
call
push
adc
mov
xchg
mov
sub
cmp
call
xor
movs
sub
jp
sti
pop
dec
cmp
sar
leave
pop
xor
neg
jbe
jo
pusha
dec
sahf
aas
outs
xor
bound
addr16
pop
mov
imul
push
xor
in
std
push
push
pop
mov
popa
xor
adc
out
dec
cmp
cmp
cld
aas
or
jmp
inc
mov
xor
sub
pop
and
pop
inc
pop
cmp
call
xor
std
cmps
or
jge
xor
pop
push
loop
leave
or
lods
sahf
sbb
mov
(bad)
fsubr
sbb
call
jp
inc
or
fimul
or
imul
fisubr
gs
aad
loope
inc
xchg
lock
push
cmp
lahf
cmp
ja
pop
mov
fmul
inc
mov
add
jl
sbb
mov
cmp
adc
cld
lock
fld
hlt
mov
jb
and
outs
(bad)
out
inc
nop
adc
or
(bad)
cmp
retf
and
aas
jle
mov
adc
scas
add
mov
mov
cld
out
push
(bad)
push
xchg
adc
and
pop
push
hlt
push
xor
jge
test
pop
hlt
and
dec
or
and
jae
call
repz
int3
or
pop
lahf
outs
hlt
pop
sbb
pop
mov
(bad)
adc
and
(bad)
sub
push
pushf
das
(bad)
les
and
mov
arpl
adc
dec
and
jno
xchg
repnz
dec
xor
push
or
sbb
dec
or
push
xor
add
movs
jno
fxch
xchg
cmp
mov
outs
sub
push
gs
in
sahf
add
call
dec
mov
mov
lahf
and
fist
aam
in
fs
fistp
mov
call
fidiv
cmp
add
in
jmp
xchg
add
dec
std
test
xor
sub
addr16
push
cmp
add
mov
lods
lods
sub
jle
scas
add
in
pop
push
out
jp
scas
fucomp
hlt
inc
aad
loop
pop
iret
mov
neg
or
outs
ins
xchg
xor
sbb
pop
xor
push
cmp
repnz
inc
push
xchg
sub
mov
push
inc
dec
push
or
sub
mov
repz
xchg
(bad)
adc
loope
push
mov
pop
mov
hlt
xchg
pop
call
movs
call
out
cmp
mov
pop
push
adc
loopne
or
loopne
inc
stos
or
sbb
or
pushf
aad
mov
out
sbb
pop
add
hlt
xlat
daa
scas
and
fist
mov
jle
retf
gs
ror
fcmovnbe
push
cmp
mov
int3
and
neg
mov
dec
(bad)
aas
addr16
jns
jp
mov
pop
dec
inc
mov
mov
aad
test
clc
pop
imul
sub
ins
fdiv
sbb
loopne
ins
int3
in
xchg
jmp
lods
fcomi
xchg
test
icebp
repnz
into
push
in
add
ins
xchg
cmps
(bad)
cmc
ss
adc
xor
jo
mov
cmps
mov
leave
lea
and
mov
loop
mov
enterw
push
pop
addr16
pop
push
not
clc
ss
xchg
rcl
fwait
mov
les
sbb
pop
pop
fidiv
xchg
mov
mov
jmp
cwde
aad
fld
dec
fild
ret
dec
out
in
outs
mov
mov
les
pop
cmps
ins
mov
hlt
pop
lods
call
push
push
lods
jmp
mov
adc
cs
pop
jno
xchg
ret
xchg
mov
rcr
mov
push
inc
jl
outs
inc
or
jmp
push
cmp
stc
addr16
loope
sub
retf
jae
fidivr
pop
inc
fwait
movs
or
dec
pop
repnz
lahf
aam
ffreep
jl
frstor
sbb
fnstcw
inc
and
and
and
inc
push
inc
arpl
out
sahf
mov
pushf
nop
pop
in
sub
fwait
sub
retf
ffreep
pop
inc
mov
fwait
jns
push
mov
adc
out
sbb
aas
int3
add
sbb
mov
fucomip
xchg
and
mov
jnp
xchg
push
jg
addr16
pop
cwde
cli
shl
lock
cmp
pop
test
ss
jmp
or
pop
add
sbb
jne
into
jnp
dec
lea
push
aaa
fst
add
nop
scas
lea
jmp
(bad)
xor
clc
mov
imul
outs
mov
(bad)
test
sbb
mov
in
mov
sahf
inc
out
repnz
daa
jl
xor
es
idiv
shr
pop
test
test
sbb
xchg
adc
xor
dec
push
call
pop
pop
movs
sbb
add
cmp
mov
mov
lods
stos
cmp
call
and
adc
aam
or
or
inc
movs
dec
mov
cmp
cmp
adc
xlat
push
and
fidivr
(bad)
and
ins
push
aad
jbe
js
(bad)
mov
cmps
ss
js
js
mov
rol
push
xor
sub
(bad)
jb
scas
dec
and
mov
mov
sbb
cmp
nop
jmp
mov
xor
adc
or
sbb
int3
retf
jecxz
or
cld
jbe
push
add
shl
std
mov
mov
cmovp
xchg
imul
sub
xchg
(bad)
cmps
jg
xchg
adc
jl
jne
stc
mov
call
clc
add
popa
mov
aas
int
jl
sub
inc
sub
mov
out
ds
sbb
and
shl
dec
lea
shr
xchg
pop
ins
inc
push
xor
enter
pop
xchg
xchg
jnp
gs
jle
into
jl
and
jno
jne
fistp
sub
fdiv
pop
pop
mov
ret
lahf
push
xchg
ja
sub
in
pop
test
mov
fnsave
or
jb
(bad)
hlt
fcmovbe
fsubp
ss
out
call
leave
add
mov
sbb
(bad)
out
dec
es
out
jg
dec
loop
inc
dec
xor
fcmovne
enter
movd
ins
outs
pushf
jno
imul
or
mul
jmp
bound
enter
jp
push
jae
mov
jno
ss
int3
fisttp
lods
mov
aaa
or
jae
ss
imul
push
sbb
inc
repnz
ds
test
and
dec
test
js
dec
(bad)
xchg
push
or
bound
cmp
ret
and
addr16
mov
aam
lahf
mov
adc
cld
psrlw
je
and
xor
jle
mov
xchg
call
push
push
dec
xor
js
sub
sbb
xchg
enter
inc
gs
lds
aas
jmp
or
mov
mov
sbb
test
test
iret
jo
adc
pop
xor
pop
jnp
sti
cmp
xchg
aad
sbb
pop
inc
inc
fldcw
into
push
add
cmp
dec
sahf
enter
ins
dec
cmps
jb
sar
out
std
in
xor
not
mov
xchg
mov
cdq
dec
icebp
out
rcr
xchg
fnstcw
jl
ror
pop
test
test
inc
daa
mov
xchg
stos
test
add
push
sahf
shl
and
ja
or
mov
mov
xchg
adc
mov
cmp
sbb
mov
hlt
cs
jno
data16
or
ins
out
xchg
sbb
clc
sub
add
int3
push
lea
shr
fild
fist
cmc
into
jg
jmp
and
aaa
popa
fscale
inc
clc
push
fisubr
jo
push
or
mov
nop
pop
pop
std
cmp
(bad)
dec
xor
add
dec
out
jno
inc
mov
cmp
sub
ds
push
push
sbb
inc
outs
gs
shl
jns
xchg
cwde
fild
daa
dec
ficomp
mov
pop
mov
dec
fiadd
cmps
mov
jae
jo
neg
pop
mov
push
push
xor
les
sahf
ficomp
mov
jo
push
cld
(bad)
adc
push
int3
cmp
jmp
jecxz
cmc
rol
sub
ins
ds
jo
sub
mov
push
push
xchg
out
(bad)
inc
and
ins
bswap
iret
out
mov
and
sub
retf
jge
jmp
pop
jmp
push
rol
dec
fnstenv
xchg
fdivr
popf
adc
sbb
(bad)
mov
aas
pop
and
call
pop
mov
or
cmp
dec
lods
lock
xchg
mov
xor
and
test
sub
sbb
sub
iret
and
or
mov
and
imul
pop
jmp
push
xchg
inc
jmp
cli
push
sbb
jle
into
push
mov
sub
out
xlat
dec
inc
mov
sbb
sahf
das
stos
enter
add
and
cmp
jns
and
fdivr
push
sub
jle
jg
cmp
ss
xor
movd
jmp
jb
push
mov
hlt
add
xor
push
xor
mov
iret
into
push
xor
loopne
in
sbb
gs
xor
shl
jecxz
cmc
jns
popa
push
xchg
ret
adc
rcl
sbb
jo
push
shr
adc
imul
and
popf
mov
ret
dec
pop
fsubr
or
and
inc
mov
sbb
iret
repnz
lods
cmp
pop
not
sub
enter
or
(bad)
sub
js
(bad)
andnps
jnp
cli
cmp
clc
adc
lods
leave
push
gs
mov
test
push
int3
mov
retf
arpl
dec
mov
repz
repnz
es
push
adc
(bad)
hlt
imul
mov
pop
sbb
popf
int
xor
jp
or
dec
push
paddusb
aad
lock
sub
adc
(bad)
jmp
fild
mov
ficomp
inc
mov
sub
add
cmp
jecxz
rol
dec
std
inc
jo
jns
jp
adc
cwde
lahf
mov
nop
push
inc
sbb
jecxz
pop
adc
dec
lahf
aad
adc
jmp
inc
pop
call
jge
adc
sbb
lods
mov
jo
add
sbb
mov
ins
ror
and
iret
xor
adc
or
enter
sbb
dec
cmp
(bad)
movs
sub
out
sub
in
jb
push
mov
jp
cwde
lds
mov
xor
outs
inc
jmp
fistp
xchg
cs
sahf
rcl
jp
imul
(bad)
mov
xor
push
mov
dec
lods
fbstp
pop
jbe
out
loopne
mov
mov
adc
cdq
jb
mov
retf
shl
sbb
xchg
push
mov
mov
mov
shl
lock
inc
mov
jle
jmp
push
cs
add
xchg
inc
adc
ds
mov
adc
out
mov
mov
sbb
pop
xchg
(bad)
in
xchg
inc
xchg
mov
mov
rcl
cwde
inc
mov
sbb
in
push
bound
test
into
jo
std
sub
or
jae
jg
pop
pop
push
test
and
popf
cmps
gs
dec
adc
push
mov
pop
scas
mov
test
lds
iret
fistp
enter
add
sbb
iret
loope
not
push
in
(bad)
stc
cmps
out
scas
aad
loop
inc
cmp
mov
mov
mov
mov
bsr
sbb
or
xchg
mov
cmc
fimul
add
pop
ins
jmp
scas
inc
mov
jp
cmp
mov
leave
out
stc
sub
jne
loope
mov
add
jns
inc
lods
mov
adc
xchg
jns
scas
shr
cld
les
push
sbb
sbb
cmp
and
mov
pop
je
lods
cwde
out
rol
ret
dec
fs
js
adc
push
add
adc
sub
adc
repz
leave
cld
jl
shl
and
push
addr16
test
mov
pop
or
mov
stos
stos
xchg
aaa
repnz
xchg
mov
lods
sbb
sahf
mov
loopne
sti
imul
fdiv
mov
(bad)
push
fistp
rcr
fwait
sahf
or
ss
loop
jmp
pop
mov
js
mov
jg
mov
sbb
xor
shl
inc
or
data16
lods
and
(bad)
jne
pusha
pop
fs
inc
retf
xor
jmp
dec
adc
retf
fdiv
adc
xor
mov
fdiv
xchg
push
sbb
int
or
leave
neg
(bad)
mov
jge
fwait
cld
shl
jbe
mov
dec
lock
repz
addr16
outs
dec
test
xchg
inc
mov
loopne
ja
(bad)
in
loopne
data16
xchg
inc
mov
jg
ins
add
xchg
xor
mov
mov
adc
std
adc
push
sub
and
inc
adc
add
bound
sub
je
xchg
aaa
mov
popf
push
dec
pop
aaa
data16
mov
in
cli
jo
stos
or
ja
gs
pop
dec
(bad)
xchg
icebp
push
jnp
xchg
rol
stos
std
into
sti
loopne
xor
pushf
cwde
in
and
lds
adc
inc
(bad)
jmp
mov
jecxz
and
cli
retf
xchg
sbb
jb
cmps
dec
ja
or
scas
add
push
or
stos
xor
jg
dec
and
addr16
jno
mov
and
aaa
and
push
js
mov
mov
mov
movs
jmp
lods
xchg
shl
sub
dec
shl
pop
inc
pop
jecxz
dec
fisub
imul
mov
sbb
push
in
mov
(bad)
jmp
mov
retf
sahf
(bad)
inc
and
mov
cmp
jb
pop
shl
jecxz
je
mov
outs
pop
adc
lar
cwde
mov
xchg
dec
je
outs
mov
mov
cmps
dec
inc
dec
imul
sbb
push
inc
gs
pop
xlat
outs
sti
jnp
push
ret
lahf
icebp
scas
xor
sbb
scas
dec
fs
xlat
push
cmps
and
aad
push
sbb
aam
mov
add
sbb
pop
adc
or
out
cld
xchg
ror
jmp
daa
jmp
pop
lods
mov
inc
push
clc
(bad)
in
aam
xchg
call
lods
ins
jae
and
xchg
adc
ret
mov
ret
inc
mov
cmp
not
push
mov
out
shr
push
rol
and
ins
mov
es
dec
(bad)
lods
ret
push
(bad)
stc
cmc
div
and
push
repnz
dec
sbb
mov
inc
movs
(bad)
repz
dec
clc
jp
(bad)
jnp
sub
inc
stos
add
aam
leave
mov
pop
out
jb
jmp
sub
mov
mov
add
mul
mov
xor
inc
push
fwait
sbb
rcr
fwait
jno
sbb
or
sub
xor
std
pop
and
iret
jb
mov
ror
add
mov
xchg
test
ret
pop
cdq
cmp
cmp
nop
out
fcom
or
jecxz
add
outs
dec
xchg
scas
mov
loopne
lds
mov
das
push
sbb
(bad)
push
ret
aaa
movs
in
sbb
lods
cmp
call
idiv
call
xor
cmp
fwait
pop
xor
call
or
add
jae
ins
mov
in
push
sti
out
cmc
xchg
pop
loopne
ds
out
fwait
cdq
jmp
out
fiadd
iret
adc
jnp
push
movs
(bad)
and
adc
mov
mov
or
mov
(bad)
(bad)
pop
jae
(bad)
call
jbe
or
out
dec
xor
and
je
clc
lock
mov
adc
push
cmps
scas
jge
mov
jno
stc
jle
leave
in
mov
add
xor
lods
pop
js
push
push
sbb
clc
mov
push
adc
int3
mov
sbb
or
stc
rcl
rcr
test
ficom
xor
mov
stos
loop
stc
int3
out
or
(bad)
fisubr
xchg
aas
mov
add
fistp
xchg
out
hlt
adc
mov
mov
lods
or
jne
das
retf
sub
loope
mov
or
std
or
jmp
add
ins
in
sbb
mov
fs
aad
repnz
cmp
popf
adc
into
dec
push
aad
hlt
or
out
pop
push
push
mul
pop
pop
pop
mov
inc
sbb
ja
test
stc
xchg
sub
bound
hlt
sub
sub
movs
(bad)
(bad)
pop
aad
call
jbe
pop
and
test
mov
and
loop
(bad)
and
cmp
into
inc
hlt
test
cmp
(bad)
ja
cmp
dec
lock
sbb
fimul
xor
inc
scas
sti
xor
fisubr
sub
pop
jne
stos
dec
push
cmps
dec
movs
and
sbb
adc
in
loopne
and
lock
sbb
sbb
mov
push
add
pop
jnp
loop
push
enter
das
cld
jl
add
jo
aad
inc
jns
stos
xchg
xor
(bad)
in
fisttp
jmp
lds
ja
add
bound
xchg
call
popf
mov
push
dec
xor
sub
outs
imul
(bad)
scas
mov
and
sub
lods
(bad)
adc
xchg
int
jmp
dec
jge
mov
rol
cld
push
in
pop
xchg
and
test
ret
sub
scas
sub
lods
push
ror
sub
in
mov
dec
cld
push
sub
and
je
jl
(bad)
cmps
test
dec
mov
call
xchg
push
pop
into
mov
jl
add
mov
push
xchg
xchg
sub
mov
inc
jl
hlt
inc
adc
inc
xchg
xchg
shl
(bad)
test
mov
add
sub
in
scas
add
or
mov
imul
(bad)
mov
fist
pushf
push
test
push
mov
pop
add
pop
hlt
xchg
pusha
mov
and
out
fcmovnbe
add
inc
pop
jp
ret
adc
adc
hlt
cld
in
jo
sahf
fldenv
cmp
mov
outs
push
int
jecxz
sar
test
lahf
inc
into
xchg
not
(bad)
fcom
dec
pop
pop
repz
aad
bswap
xor
add
mov
lahf
jne
repz
xor
cmp
inc
out
add
jmp
lods
dec
pop
aaa
call
sub
std
push
mov
pop
adc
xchg
addr16
dec
pop
and
int
inc
sahf
repnz
fsub
and
fst
(bad)
hlt
vpsubusb
repz
test
mov
add
in
adc
hlt
xchg
clc
je
and
push
xor
add
pop
retf
repnz
ss
dec
int3
fst
ins
movs
in
test
dec
movs
loop
sbb
sar
shr
test
bound
sbb
cld
frstor
cld
int
std
scas
push
mov
add
addr16
(bad)
or
test
push
xchg
inc
sub
push
cmps
or
es
mov
push
(bad)
push
or
cmp
into
push
mov
fst
push
retf
idiv
add
test
arpl
jns
icebp
push
(bad)
mov
(bad)
mov
mov
or
cmc
popa
and
inc
imul
cmp
in
mov
aas
adc
pop
nop
push
xor
icebp
adc
and
dec
(bad)
aad
inc
retf
int
dec
fdivr
mov
aaa
popa
jmp
cmps
in
cli
arpl
mov
pop
push
push
repnz
and
fwait
iret
clc
dec
mov
cmp
xor
outs
hlt
push
add
loop
xchg
adc
aaa
lock
xchg
jp
mov
mov
sbb
jno
push
jg
out
loope
adc
out
out
sti
test
push
mov
pushf
fs
mov
and
div
inc
pop
xlat
repz
and
shr
stc
add
xchg
xor
and
arpl
cmp
lahf
pop
out
mov
stc
adc
scas
mov
mov
lods
iret
addps
aad
stos
imul
dec
stos
loopne
das
loopne
and
mov
xor
sbb
ror
inc
sbb
(bad)
xor
cld
adc
(bad)
int3
in
mov
sbb
retf
(bad)
ret
cmp
add
and
mov
cdq
mov
ror
lock
mov
inc
jno
mov
outs
mov
out
ror
cmps
xor
leave
mov
sub
popf
xchg
js
pop
mov
or
inc
dec
(bad)
repz
xchg
mov
xchg
dec
cmps
pop
cmp
repnz
cmps
daa
neg
cmps
sbb
mov
push
inc
fnstenv
mov
stc
add
(bad)
xor
pop
mov
mov
(bad)
je
test
mov
movs
popa
(bad)
pop
add
jnp
xor
sub
sbb
enter
xchg
outs
or
lds
sub
sub
xchg
mov
mov
retf
xor
test
xchg
std
call
mov
popf
jo
sub
push
ins
pop
dec
pop
(bad)
jle
ds
sbb
and
test
mov
(bad)
clc
aas
dec
xchg
inc
add
in
xor
cdq
aas
aaa
xchg
mov
dec
jb
adc
das
jmp
rcr
imul
push
ret
pop
jae
fs
jbe
sub
mov
pop
and
pop
adc
test
outs
iret
mov
(bad)
ret
fdivr
stos
sbb
movs
fld1
aad
movs
mov
jb
ja
scas
out
pop
mov
xchg
jp
mov
mov
xchg
not
fst
add
outs
neg
ins
jle
xor
mov
stc
adc
fidivr
push
ins
xor
cld
(bad)
fisub
push
rol
dec
mov
fsubr
and
jecxz
mov
add
mov
sti
mov
sbb
or
stos
xchg
dec
mov
cmovg
lea
and
adc
push
les
sub
mov
xor
mov
icebp
or
daa
mov
call
dec
shr
popf
or
push
mov
fbstp
jae
fiadd
aad
lea
imul
std
or
sti
das
mov
xor
pop
rcr
mov
fistp
sub
dec
(bad)
aad
ret
rcr
mov
xchg
and
push
or
clc
cmps
mov
(bad)
(bad)
mov
push
lock
sub
sub
inc
or
jbe
pop
loope
rcr
cmps
jns
inc
(bad)
dec
es
movs
cs
jge
pop
jae
pop
(bad)
std
push
arpl
xchg
xor
lahf
mov
rcr
xchg
push
test
cmp
dec
clc
nop
fisubr
test
push
cmp
movs
jmp
fs
mov
cmp
rcl
lods
shl
in
loop
mov
mov
cli
push
in
pop
sbb
outs
cdq
sbb
stos
mov
inc
inc
xchg
or
mov
inc
and
imul
loopne
jns
push
pusha
xchg
ror
mov
aad
xchg
xchg
mov
in
add
xor
xor
push
rcl
scas
mov
xchg
test
push
out
push
add
push
and
sub
add
retf
add
dec
xchg
dec
xor
jp
test
cmp
loope
sub
loope
aam
dec
pop
pusha
fdiv
fisttp
daa
or
or
scas
mov
cdq
dec
sar
arpl
inc
aad
mov
add
mov
adc
out
xchg
push
aad
or
dec
jg
ins
in
lods
xlat
xchg
sub
fidivr
adc
arpl
cmc
hlt
movs
int3
(bad)
jne
mov
mov
push
push
repz
mov
gs
mov
scas
pop
fnstcw
mov
inc
xor
xchg
jo
and
call
ret
out
xchg
mov
xor
push
sub
popf
pop
jb
rol
sahf
data16
ja
xchg
xchg
cmps
icebp
push
dec
adc
stos
stos
call
adc
pusha
ret
rcl
jb
sahf
xlat
pop
cmp
dec
sub
pop
or
setl
push
lods
jl
mov
out
pop
xor
xchg
xchg
stos
xor
std
jecxz
jg
std
push
or
xchg
repz
int
cmp
pushf
sbb
xor
repz
cld
mov
repz
push
fist
iret
das
adc
or
xor
add
inc
jg
push
jl
inc
or
aad
xor
(bad)
xor
xchg
pop
xor
sub
ret
aam
stos
ja
lahf
sub
outs
push
retf
fld
xor
arpl
loopne
(bad)
sub
push
(bad)
xor
jg
ret
bound
ror
mov
xchg
scas
mov
xchg
mov
iret
(bad)
pop
jle
je
and
call
loop
pop
pusha
jnp
cmp
in
sbb
mov
sub
add
push
xchg
les
outs
ret
cmps
daa
ins
push
mov
jmp
stos
sbb
jno
jo
xchg
test
clc
stc
shl
pop
jnp
lahf
push
lds
nop
push
xlat
stos
out
add
sub
or
dec
xor
and
retf
sbb
mov
aas
rcl
outs
cmp
std
jle
out
pop
xor
adc
inc
dec
pop
ja
sti
push
aaa
mov
cmc
mov
mov
xchg
int
pushf
in
mov
movs
fwait
mov
mov
dec
pop
sub
pushf
fldl2t
(bad)
in
retf
(bad)
jge
inc
fcmove
fsubr
call
jmp
ins
inc
dec
(bad)
int3
xor
add
push
xchg
or
les
and
mov
test
call
fdivr
call
adc
adc
sub
sbb
cmc
sbb
jmp
inc
dec
or
cwde
inc
lods
(bad)
and
pop
fiadd
sbb
mov
adc
sbb
xchg
xor
ss
lahf
mov
adc
lods
cs
cdq
ss
dec
add
jb
ins
xchg
leave
test
mov
mov
sub
pusha
sar
mov
mov
push
lods
or
or
icebp
cmc
aad
push
jmp
jle
ja
and
mov
mov
mov
hlt
and
ret
add
arpl
mov
clc
cld
stc
or
pop
mov
test
ret
mov
xor
arpl
sbb
xlat
data16
xchg
dec
dec
push
arpl
cli
add
jns
cmp
in
out
add
bound
jecxz
ror
add
scas
mov
das
mov
xor
data16
(bad)
arpl
xchg
sti
xchg
cs
inc
push
ss
inc
jns
ins
js
cmp
ret
out
mov
(bad)
pop
inc
push
shl
outs
inc
or
mov
add
adc
jo
out
dec
test
xor
push
pop
mov
nop
bnd
xchg
xchg
lock
test
inc
inc
orps
xor
xor
call
sti
mov
sub
sub
out
cmp
stos
xor
jmp
shl
cwde
ret
jp
mov
cdq
outs
mov
inc
sub
cmp
sbb
pop
sub
jne
int3
jp
dec
jb
loop
std
sbb
push
xor
mov
fdiv
gs
push
mov
inc
sub
or
mov
xor
out
pop
test
es
repnz
iret
jle
add
jle
sub
fsubr
lahf
xchg
icebp
push
cmp
xchg
arpl
out
js
add
xor
cmp
and
jbe
mov
pop
add
push
inc
sub
in
stos
pop
aad
repz
push
mov
cmp
inc
ds
xor
lahf
je
popf
xchg
jle
fimul
mov
adc
add
loope
icebp
loope
pusha
sbb
mov
stos
ins
pop
sar
sbb
or
push
xor
vpavgw
sahf
fstp
jb
cmp
in
xlat
xor
jmp
ret
inc
ret
data16
adc
xchg
dec
add
xchg
pop
add
fimul
mov
icebp
or
push
daa
dec
shl
mov
push
les
jge
sub
pop
pop
fild
push
(bad)
int
mov
fdivr
sti
ficomp
or
popf
jp
aas
jns
gs
xchg
enter
outs
jmp
mov
mov
call
mov
dec
jmp
iret
(bad)
and
imul
cmps
jle
(bad)
inc
add
mov
addr16
cmp
jmp
pusha
xor
stc
mov
dec
mov
xchg
aaa
ds
test
inc
cmp
nop
fmul
jo
jmp
adc
test
dec
aam
aad
mov
cld
cmp
dec
(bad)
shl
mov
loop
add
mov
inc
push
pushf
loopne
cmove
push
jo
mov
xchg
pop
sub
xor
adc
ja
inc
loop
je
sahf
imul
popf
inc
inc
stos
or
sbb
mov
and
xor
sbb
adc
sbb
or
das
hlt
rcl
lds
data16
mov
lods
in
mov
ror
pop
lea
fs
xchg
push
call
mul
dec
jl
mov
fst
(bad)
mov
movs
push
stos
sbb
xchg
repz
pusha
gs
sub
inc
add
cs
dec
ds
fmul
out
mov
pushf
loop
jecxz
mov
jl
shl
mov
xchg
mov
jg
lods
test
adc
mov
jno
xor
or
clc
mov
xchg
mov
arpl
xor
dec
add
bound
fwait
call
cmp
sar
mov
xlat
ss
mov
fisub
sbb
imul
(bad)
lods
mov
xor
mov
mov
ins
mov
popf
sub
movs
into
mov
dec
sar
push
add
sbb
xchg
push
out
mov
jecxz
punpcklwd
repnz
mov
test
in
lock
out
int3
jbe
stc
adc
xchg
cmp
xchg
rcl
pop
mov
ss
icebp
adc
(bad)
popa
sbb
xchg
fstp
inc
push
jmp
arpl
mov
mov
outs
in
enter
retf
mov
push
push
stos
fist
push
cdq
xchg
sub
xor
gs
add
xchg
inc
and
(bad)
call
sar
in
mov
xor
xchg
pushf
dec
nop
mov
daa
sub
adc
daa
test
aam
xchg
adc
inc
clc
sub
fwait
push
dec
cmp
out
mov
iret
push
push
and
shl
clc
pop
pop
cmp
jle
bound
sub
cmc
out
mov
(bad)
in
call
retf
jl
test
test
call
mov
jae
jne
push
test
jmp
movs
add
xchg
loope
(bad)
cld
sahf
sub
xchg
stos
or
and
lahf
push
pop
jns
cmp
pop
fstp
fdiv
sbb
inc
std
pop
loop
loop
adc
mov
out
push
or
xchg
clc
iret
sub
jecxz
ja
jb
test
pop
push
xchg
push
jnp
and
test
out
aas
sbb
mov
imul
lods
push
mov
es
sub
shr
mov
sbb
mov
push
pop
retf
ja
push
pop
inc
jbe
test
mov
pop
gs
loop
test
mov
add
and
cmp
dec
ja
les
adc
xor
cmp
repz
sahf
xor
mov
mov
es
das
call
mov
int
xchg
jno
imul
bswap
jno
out
fadd
fs
push
sti
jp
and
(bad)
(bad)
popf
jl
jne
push
pop
mov
scas
sub
pop
jae
inc
stos
mov
mov
xchg
out
xchg
enter
fdiv
leave
retf
daa
sub
sbb
popf
ins
sub
adc
jne
mov
sahf
sbb
mov
cmps
jns
inc
pop
shl
shl
repz
jp
xchg
sub
pop
inc
in
jmp
push
xor
xchg
xor
mov
int3
push
pop
sar
mov
sbb
outs
ins
push
dec
cmc
nop
sbb
out
sbb
dec
mov
ffree
push
jl
scas
adc
xor
or
adc
mov
or
clc
test
mov
bound
(bad)
movs
int
mov
in
cmp
in
loopne
repnz
xchg
mov
scas
mov
enter
sbb
mov
leave
mov
cmps
push
int
(bad)
mov
iret
into
xchg
setg
fcom
inc
sahf
adc
dec
rcl
lock
vmovshdup
cmp
xchg
sbb
ss
jo
in
pop
hlt
xor
outs
xchg
pop
ror
push
cmp
push
ja
popf
inc
call
mov
cli
test
jo
pop
jne
adc
inc
mov
mov
add
stos
cmp
(bad)
mov
sbb
fwait
and
lahf
call
jo
loop
mov
push
jae
mov
add
rcl
fwait
test
or
call
jno
inc
sub
or
lods
fsub
mov
pop
jns
loope
scas
add
(bad)
ds
xlat
(bad)
mov
loopne
cmp
lea
(bad)
(bad)
loop
mov
outs
jo
movs
jnp
call
mov
lds
shl
or
pop
push
cmc
xchg
(bad)
std
mov
cs
xchg
mov
pusha
stos
jo
sub
ret
lods
ss
ret
imul
sbb
dec
jl
lods
sub
push
in
inc
call
xor
lods
fist
sub
(bad)
cmp
stos
mov
popf
mov
out
cdq
push
add
shl
dec
js
jmp
add
cmps
xchg
scas
sbb
jns
(bad)
lahf
or
sub
cwde
rcr
pop
xlat
fnstenv
mov
pop
je
cmps
xor
cmc
mov
js
push
xor
push
stos
cdq
out
xchg
pop
enter
mov
adc
xor
data16
xchg
(bad)
push
cld
cmp
addr16
pop
add
sbb
fucom
or
inc
adc
pop
(bad)
mov
jb
or
xchg
dec
inc
pushf
les
popa
dec
test
loopne
loopne
pop
ror
dec
jg
push
or
jge
inc
xor
(bad)
xchg
xor
dec
mov
loope
xchg
xchg
sbb
inc
xchg
add
popf
adc
jns
std
mov
adc
jns
push
loopne
pushf
sub
mov
pop
out
cmps
mov
test
(bad)
les
adc
cdq
dec
out
cmp
cmp
nop
je
push
lock
cwde
adc
add
aas
(bad)
sub
or
outs
xchg
clc
bound
test
out
xchg
and
pop
mov
fst
ins
inc
mov
iret
mov
aam
into
dec
mov
in
out
inc
push
cmps
jle
sub
cmc
jo
xchg
mov
pop
fistp
ret
pop
test
xor
cmc
dec
loopne
stos
mov
test
out
sub
mov
add
xor
pop
sbb
pop
adc
ss
cs
cmp
jne
mov
retf
adc
cmps
and
pop
xor
dec
mov
aas
out
aam
in
inc
dec
dec
cmp
sar
call
and
cmc
jae
lahf
in
push
sbb
bound
test
sbb
xchg
cmc
cmp
xor
repnz
addr16
push
jl
ins
pop
aas
add
mov
adc
cld
(bad)
push
ss
xor
pop
mov
aad
push
iret
xor
sub
pop
fisubr
pop
cmp
cmc
mov
ret
sbb
mov
mov
not
int
imul
aam
sbb
fild
pop
aad
xlat
stos
sbb
sub
add
jmp
xchg
jo
pop
mov
cmps
sub
dec
pusha
mov
enter
dec
xor
mov
cmps
hlt
cmp
adc
cdq
scas
adc
jp
das
adc
xchg
aaa
push
sbb
adc
loopne
gs
fwait
cmps
out
ret
cmp
test
pop
mov
adc
push
scas
mov
add
jb
mov
jle
lds
shl
push
xor
mov
aad
xchg
push
push
xor
jb
xchg
call
inc
hlt
test
lahf
push
in
inc
pop
xor
jl
push
dec
fidiv
scas
dec
dec
mov
mov
inc
pop
(bad)
sahf
adc
mov
popa
mov
push
pop
das
inc
xchg
cmp
adc
or
sahf
cmp
stc
test
sbb
xchg
stos
retfw
mov
push
fimul
adc
rcr
push
dec
push
mov
adc
sbb
or
aad
(bad)
and
rcr
adc
das
sbb
idiv
dec
arpl
pop
aaa
out
sub
stc
push
or
jle
cdq
(bad)
out
out
jae
call
xor
ds
sub
xor
sbb
sar
cmps
mov
(bad)
sbb
enter
jmp
inc
in
jp
or
add
jb
dec
test
fisub
xchg
sbb
sub
sbb
fldenv
mov
ret
(bad)
dec
adc
sub
lods
xor
pop
push
pusha
aam
loopne
rcl
mov
icebp
cmps
add
in
jle
es
mov
popa
aaa
sbb
imul
hlt
fidiv
fsubr
ins
sbb
aam
es
inc
fldcw
jb
dec
pop
mov
and
int3
fcomip
fiadd
or
call
arpl
mov
loop
xlat
(bad)
xchg
push
(bad)
int3
stos
pusha
iret
add
jle
dec
pop
cwde
jge
hlt
repz
into
in
sbb
movs
addr16
push
xchg
cmps
es
mov
or
int
cmp
fdiv
jl
test
fldl2t
mov
sbb
jbe
push
pop
push
rcl
in
mov
es
jns
push
mov
xchg
icebp
cmps
jecxz
fwait
stos
mov
jp
jge
xor
inc
jo
xchg
xchg
arpl
fiadd
adc
ss
pop
loopne
push
in
aaa
add
test
lahf
dec
leave
jmp
adc
sub
mov
leave
bound
out
push
stos
fxtract
jb
jnp
mov
mov
inc
cmp
adc
cwde
pop
cmp
aaa
dec
inc
mul
sub
jle
add
xchg
repz
xchg
inc
arpl
out
call
mov
ds
fisub
fist
push
pop
fld
mov
pop
pop
cmp
clc
dec
pop
lahf
imul
mov
sbb
or
test
mov
dec
fs
cmc
cmp
lods
push
add
ror
cmps
cmp
pop
inc
repnz
cmp
frstor
(bad)
fs
dec
dec
mov
(bad)
sub
and
(bad)
pop
das
ss
xor
sub
and
hlt
imul
loopne
call
pop
jle
or
push
fwait
mov
add
fnsave
retf
jne
pop
sahf
inc
popa
(bad)
lods
mov
jl
icebp
add
jbe
adc
int
sub
dec
popf
ins
dec
aas
jmp
push
stos
icebp
sub
xchg
ins
sub
mov
ret
movs
push
enter
(bad)
(bad)
dec
mov
mov
xor
sahf
push
leave
inc
sbb
add
cmps
xchg
sbb
cld
mov
cmps
cs
and
add
xchg
aaa
sbb
jl
push
scas
add
aaa
hlt
or
mov
cdq
adc
or
stos
and
jnp
pop
xchg
cwde
shr
imul
popf
xchg
inc
xchg
out
xor
in
sbb
stos
daa
cmp
fwait
sbb
rcr
loope
jne
mov
ret
es
aas
mov
jle
mov
aad
xchg
jmp
pop
and
iret
ror
jp
jle
or
xchg
pop
or
test
mov
int3
adc
mov
push
cli
or
fldenv
ret
jp
push
sbb
push
dec
lods
xchg
jl
inc
inc
out
push
inc
arpl
xchg
gs
call
xchg
call
ss
adc
push
jne
jbe
dec
out
push
in
mov
ja
pop
jo
xchg
in
inc
out
(bad)
push
pop
(bad)
dec
dec
mov
xchg
loope
mov
push
rcr
loope
xor
pop
jbe
loop
retf
bound
fld
jne
ret
int
push
cmp
iret
lds
dec
mov
dec
nop
daa
ret
xchg
mov
lds
add
dec
aas
jmp
fisub
cmp
cmp
fsub
sub
sbb
cmp
inc
jle
push
dec
mov
mov
cdq
mov
jmp
retf
xor
cmp
ds
cli
(bad)
adc
clc
mov
cdq
jmp
aam
outs
mov
sub
add
lahf
fcmovbe
adc
mov
mov
fnsave
dec
sbb
(bad)
cmp
mov
sbb
adc
(bad)
fcom
jbe
mov
test
push
add
mov
cwde
sbb
adc
mov
mov
mov
jns
push
xchg
iret
mov
mov
sbb
pop
repz
iret
imul
fs
or
arpl
arpl
pop
mov
inc
popa
or
adc
xor
xor
imul
unpcklps
retf
mov
cmp
xchg
pop
sub
dec
sub
mov
adc
mov
icebp
cdq
cmp
pusha
repz
pop
imul
out
ds
mov
mov
xchg
dec
ret
jge
inc
retf
das
and
mov
(bad)
pusha
scas
js
lea
fsub
push
or
mov
add
xchg
mov
xchg
sub
push
mov
cwde
dec
sbb
es
inc
(bad)
or
shl
sub
jmp
inc
dec
test
xor
(bad)
dec
xor
cmp
push
sar
mov
sahf
int3
sub
shl
cs
cmps
pop
inc
cmp
retf
mov
clc
arpl
inc
push
mov
test
push
cli
pusha
add
clc
pop
or
popf
test
loopne
fidiv
or
sbb
or
jmp
cmp
pop
adc
sub
xchg
repnz
adc
push
mov
jbe
xor
pop
int
in
inc
pop
cmps
mov
cmp
mov
cmp
(bad)
mov
dec
cdq
mov
sbb
fld
pop
sbb
jno
cmp
xlat
mov
adc
fwait
dec
mov
dec
into
shl
sub
fcomp
inc
push
sahf
mov
adc
imul
push
(bad)
xchg
mov
int
loopne
imul
sub
div
loop
xor
in
pop
mov
es
jmp
pusha
iret
xchg
mov
mov
in
fcomp
lods
pushf
test
addr16
jmp
retf
in
inc
lea
mov
int3
mov
push
or
and
sbb
xchg
popa
dec
(bad)
xchg
sub
push
aam
daa
push
loop
cld
mov
cmc
cs
xor
sub
jg
or
push
xor
xchg
sbb
repz
fisubr
jmp
inc
inc
mov
rol
inc
jp
enter
xchg
mov
push
cmp
jge
es
imul
jecxz
push
xchg
jle
push
inc
mov
cmp
retf
sbb
in
(bad)
jp
lods
into
fisub
jb
into
fsub
sbb
cld
std
jmp
inc
inc
dec
pusha
inc
(bad)
cli
sbb
dec
push
xchg
sub
or
dec
outs
gs
cmp
mov
stos
sbb
sbb
loope
sti
int3
sub
popa
push
inc
in
sub
movs
mov
mov
bound
push
inc
arpl
dec
mov
into
adc
int
out
ror
(bad)
scas
or
je
xor
push
push
arpl
div
mov
xchg
je
cs
jo
push
cli
ins
aam
jne
push
push
add
push
and
mov
mov
out
aam
xor
jmp
and
jl
add
jl
outs
aaa
and
ret
aaa
jp
(bad)
(bad)
lea
out
sub
fisub
lods
and
cld
push
xchg
dec
cli
xchg
sub
or
cld
es
and
retf
movs
ret
and
adc
xor
xor
inc
clc
outs
pop
sub
sbb
nop
inc
inc
mov
enter
jle
(bad)
cmp
lods
lahf
dec
or
(bad)
and
outs
push
out
mov
or
sub
std
cmp
call
sbb
jmp
adc
pop
ret
mov
adc
not
inc
test
test
mov
dec
jae
outs
sub
mov
sub
ja
ds
push
data16
pop
mov
fwait
mov
push
mov
cdq
out
hlt
cmp
and
jmp
cdq
jmp
es
jbe
(bad)
cmps
pop
or
lods
jae
mov
(bad)
loopne
inc
jp
xchg
xchg
cwde
js
sub
pop
push
pop
or
adc
jle
outs
sbb
cmp
(bad)
sbb
lds
clc
push
adc
inc
sub
cmc
call
mov
cmps
or
mov
leave
dec
mov
push
push
aas
sub
iret
imul
xchg
mov
cwde
push
inc
ja
not
add
aam
jns
in
mov
test
push
pop
icebp
idiv
push
pop
inc
xchg
out
pop
push
daa
mov
fisubr
ins
jg
inc
hlt
(bad)
(bad)
out
test
bound
pop
mov
loope
fdiv
jnp
or
or
loope
sub
jmp
cmp
jecxz
mov
mov
cld
stc
imul
mov
stos
int
mov
cwde
sub
test
shr
jmp
pop
mov
push
mov
jmp
out
and
xor
sub
pushf
mov
mov
sbb
add
out
xor
dec
mov
in
mov
dec
pop
mov
nop
push
aaa
jbe
aam
call
lods
push
mov
push
loope
lds
pop
lock
leave
cmp
sbb
fidiv
jns
add
dec
(bad)
call
mov
mov
stc
fwait
xchg
leave
aaa
lea
jae
mov
sbb
iret
fsubr
adc
das
xchg
mov
sbb
data16
mov
out
jb
mov
outs
mov
cmp
or
mov
test
jp
inc
jg
popf
out
std
fild
and
ror
and
cmp
and
int
mov
mov
mov
sub
push
mov
(bad)
xchg
pusha
jnp
ss
sahf
adc
lods
int3
shl
sub
popf
outs
rol
lea
ins
aam
mov
and
jecxz
aaa
fimul
xor
pop
mov
pop
fidivr
inc
mov
sub
jp
cwde
inc
and
hlt
xchg
sub
xor
sub
je
rol
xchg
inc
into
push
dec
mov
into
pop
std
idiv
repz
push
test
and
mov
inc
dec
sbb
icebp
push
jno
or
pop
iret
add
pop
and
mov
mov
stc
hlt
out
imul
data16
arpl
mov
mov
out
push
sbb
arpl
in
mov
shl
push
mov
and
test
cmp
ja
add
jmp
scas
lahf
add
dec
imul
jmp
idiv
fnstsw
mov
pop
or
repz
lds
out
popa
pop
adc
ins
jmp
mov
push
dec
xor
popa
cmps
pop
pop
es
mov
xor
aad
ret
fcom
mov
or
jge
adc
adc
or
not
mov
mov
out
inc
and
push
jp
inc
pop
fisttp
jp
adc
xor
dec
ficom
dec
inc
nop
mov
test
daa
sti
push
cmp
add
or
dec
fcmovne
cmps
push
xor
stc
stos
call
pop
push
ret
xchg
test
shl
pop
test
stos
rcr
in
cmp
fdiv
popf
stos
cmp
stos
jnp
xchg
pop
jecxz
aam
mov
jle
jbe
int
adc
inc
push
stc
mov
mov
test
outs
(bad)
mov
jecxz
lock
dec
ja
scas
(bad)
(bad)
mov
cmp
fisttp
mov
mov
adc
xchg
shl
cli
call
retf
xchg
jnp
cmp
push
daa
push
dec
pop
jp
xor
loopne
xor
inc
xor
sahf
imul
jne
call
fiadd
xchg
xchg
adc
cmp
ret
jmp
xor
adc
mov
nop
retf
shl
call
gs
fsubr
or
(bad)
xchg
jnp
leave
pop
stc
mov
and
or
(bad)
mov
adc
fnstenv
clc
dec
outs
repnz
lds
(bad)
inc
daa
sub
jle
pop
xchg
fisub
rcl
sub
out
ins
mul
jo
scas
mov
les
clc
push
xchg
rol
into
and
dec
repz
mov
sbb
(bad)
push
jg
(bad)
std
fcom
dec
push
shl
and
jnp
test
cmp
das
and
sbb
cdq
adc
xlat
(bad)
pushf
div
push
pop
(bad)
leave
scas
push
movs
push
shr
mov
call
jg
stos
jp
out
add
add
fisttp
lods
out
in
stos
(bad)
push
outs
je
mov
jg
enter
mov
js
xchg
out
mov
mov
mov
and
pusha
mov
pusha
jp
cs
pop
retf
xchg
adc
mov
jl
cmc
jl
or
int
ret
dec
pop
push
pusha
push
jge
ja
xchg
push
data16
ret
mov
mov
mov
addr16
mov
and
mov
jmp
lods
xchg
out
repz
lock
adc
rcr
jmp
out
scas
inc
push
cli
cs
imul
std
ret
loop
pop
test
les
popf
(bad)
fcmovnbe
jb
lea
(bad)
lds
int
sub
imul
and
xchg
into
imul
cmp
leave
jo
in
int3
sub
push
inc
ins
mov
sub
dec
out
in
(bad)
xchg
sahf
outs
pop
mov
hlt
call
(bad)
mov
cwde
xor
cld
imul
jmp
lahf
push
cmp
loop
mov
not
sub
loope
push
lahf
cmps
cdq
mov
(bad)
adc
out
ins
rcl
test
cli
mov
cmp
mov
rcl
dec
push
push
nop
inc
fisub
and
xor
daa
add
sub
scas
(bad)
test
test
inc
jnp
lock
outs
dec
(bad)
or
inc
out
push
sub
pusha
je
(bad)
cmc
xchg
outs
cmp
dec
push
sbb
fld
mov
lods
add
es
mov
mov
and
sub
mov
mov
add
cwde
(bad)
push
xor
aad
cmp
xor
mov
cmc
add
push
dec
leave
pop
outs
stc
push
dec
in
sub
mov
xlat
adc
fisttp
les
movs
test
cmp
movs
mov
push
ret
dec
sub
call
jb
sahf
inc
icebp
nop
and
mov
push
or
cmp
push
ins
mov
retf
test
scas
fwait
jl
sbb
inc
pop
mov
mov
daa
scas
stos
stos
or
pop
mov
mov
dec
mov
pop
push
(bad)
pop
inc
gs
mov
jg
pop
bound
fidiv
dec
call
fistp
jns
push
loope
std
es
mov
xor
data16
pop
shl
inc
push
mov
int
leave
xchg
mov
jg
mov
ins
sbb
mov
movs
cmp
cmp
leave
test
clc
adc
mov
mov
xchg
xor
add
scas
int3
imul
inc
dec
ficom
(bad)
mov
retf
mov
xchg
stc
outs
xchg
es
mov
int
pop
mov
cs
or
cdq
jo
(bad)
jne
cli
mov
ss
loop
mov
(bad)
clc
jns
(bad)
sbb
mov
cmp
mov
mov
add
popa
fisub
scas
es
xchg
stc
jle
repz
jo
mov
sub
or
sbb
outs
lea
cli
jnp
(bad)
int
xor
mov
retf
cld
jb
sar
js
mov
mov
repz
jne
lods
xor
push
xor
scas
fcmovb
push
or
xor
das
sub
mov
in
fs
push
aas
mov
mov
leave
xor
idiv
out
pop
push
xor
xchg
mov
scas
aam
outs
push
imul
fcmovne
xor
test
pop
add
bound
mov
mov
lods
(bad)
sbb
repnz
add
cwde
xlat
mov
sub
data16
jns
arpl
ins
inc
add
push
call
fs
test
push
pop
dec
fnstsw
inc
popa
ins
pop
cli
xor
loop
cmps
inc
inc
sbb
int3
xchg
fnsave
lahf
sbb
ins
jae
mov
cmc
stc
pop
data16
mov
jbe
adc
pop
pop
mov
cmp
mov
xlat
stos
repz
push
das
fdiv
call
sub
push
int
test
cmp
rol
arpl
or
rcl
add
and
retf
mov
call
adc
sbb
push
test
js
es
and
test
mov
mov
stos
mov
mov
imul
mov
and
fdiv
int3
lock
enter
mov
cmp
shl
not
dec
sbb
xor
cmp
outs
push
pop
and
cmp
std
cmp
inc
movs
mov
or
push
pop
stc
das
xchg
lea
retf
mov
ret
push
mov
mov
cmps
ss
add
out
mov
dec
mov
out
sbb
mov
jo
push
je
mov
mov
repz
xchg
cmp
(bad)
mov
and
ror
jle
cmps
xchg
scas
retf
lock
jae
push
xchg
outs
daa
jmp
pop
xchg
or
dec
test
mov
cmps
mov
dec
std
push
test
xchg
int
and
ja
inc
mov
add
test
daa
and
in
fimul
jno
std
ret
sahf
push
test
mov
out
rcr
(bad)
into
pop
loop
repnz
std
inc
js
dec
jnp
clc
test
dec
jecxz
dec
pop
mov
inc
lods
out
movs
out
stos
jb
loopne
ss
imul
ficom
adc
xor
lahf
lods
adc
out
movs
pop
jg
xchg
outs
push
jnp
push
jae
nop
adc
pop
rcr
mov
push
(bad)
cmp
dec
pushf
mov
lock
jmp
loopne
rol
xchg
cmp
in
out
jbe
and
or
je
jge
out
inc
inc
icebp
neg
mov
loopne
mov
mov
and
out
sub
lea
mov
mov
add
adc
mov
jge
dec
or
xchg
test
inc
inc
mov
and
in
jmp
xor
and
pop
call
cmps
lahf
cmc
and
xor
lahf
cwde
retf
jo
adc
and
jg
cli
cld
jp
dec
push
sub
scas
push
cmp
cmp
mov
or
fcomp
daa
pop
mov
mov
aam
jecxz
or
add
or
in
or
add
inc
mov
scas
lods
xchg
rol
fmul
mov
mov
mov
and
mov
enter
aad
pop
inc
ss
sar
lock
inc
in
aaa
test
push
push
test
xor
imul
xchg
nop
dec
ret
(bad)
loope
fsubr
sbb
add
and
(bad)
(bad)
out
js
inc
stos
stc
adc
imul
in
push
mov
sbb
popf
inc
inc
data16
ja
mov
loop
loope
out
fisttp
sar
shl
jae
test
test
push
mov
mov
test
jmp
movs
xchg
and
loope
add
jmp
das
inc
inc
and
ins
cwde
xchg
stos
adc
mov
jecxz
push
lds
pop
mov
fist
inc
fidivr
pop
xor
sbb
mov
scas
or
and
fwait
push
sbb
lods
cld
int3
xor
neg
icebp
in
pop
inc
add
mov
push
adc
xchg
adc
jmp
scas
pop
mov
and
sub
dec
dec
in
lock
mov
dec
ret
sbb
mov
mov
cmp
inc
(bad)
stc
mov
out
push
and
jle
fld
test
jb
addr16
das
xchg
sbb
sub
repnz
dec
sbb
jno
mov
mov
nop
xchg
and
cmp
adc
mov
jle
cmp
cmp
mov
add
int
popa
inc
mov
pop
fsub
xor
dec
aad
jns
xchg
cmps
retf
enter
sub
sbb
cli
dec
fsubr
stos
adc
test
outs
mov
fst
lea
xchg
nop
and
repnz
jmp
fbstp
stos
pusha
pop
xor
push
sar
aad
iret
ins
test
sub
out
dec
std
ds
xor
dec
sub
mov
lea
mov
or
adc
jmp
dec
jno
sbb
mov
cmc
add
ficom
inc
cdq
mov
cld
xchg
inc
mov
push
or
clc
pop
inc
mov
cmp
adc
or
dec
loope
scas
mov
lea
retf
popf
xor
data16
xchg
loopne
pop
inc
(bad)
std
and
xor
jg
inc
cmp
sub
scas
xor
out
sbb
mov
aaa
test
outs
mov
inc
mov
and
fisttp
xchg
adc
mov
fild
mov
mov
icebp
ds
xor
(bad)
mov
(bad)
movs
sbb
dec
mov
and
push
add
pop
cmp
adc
into
inc
dec
xchg
outs
dec
aam
ds
or
jb
sub
jle
fs
rol
xchg
les
xchg
pop
push
mov
aaa
call
sbb
loopne
sahf
call
retf
xor
cwde
jp
jp
sub
push
and
pop
inc
enter
lock
inc
(bad)
or
stc
ins
pop
and
mov
popa
movs
in
lods
or
pop
or
cld
xchg
push
add
push
(bad)
clc
jmp
lahf
push
pop
mov
js
inc
sbb
in
aaa
mov
sub
icebp
and
add
xchg
sbb
cmp
xchg
stc
nop
push
pop
fwait
pop
enterw
jb
into
adc
push
sbb
(bad)
adc
mov
mul
outs
jb
daa
mov
test
or
cmp
movs
repz
xchg
fidivr
loope
(bad)
pop
(bad)
ja
inc
xor
add
pop
xor
and
ins
xchg
jbe
mov
fwait
retf
mov
cmp
push
clc
inc
add
jle
out
inc
stos
aam
adc
test
fbld
retf
fwait
dec
inc
push
mov
dec
jne
push
push
push
push
pop
out
dec
ds
in
dec
test
cmp
fwait
lods
fist
(bad)
push
loop
or
imul
sub
sbb
rol
call
fstp
jg
movs
mov
xor
mov
ins
and
loopne
in
test
dec
cmp
push
(bad)
pop
sbb
mov
xchg
add
mov
mov
enter
fcomp
inc
rol
imul
ficomp
adc
repnz
sbb
das
(bad)
in
and
test
push
imul
mov
mov
ret
mov
push
jbe
sub
in
outs
xchg
mov
std
jne
inc
retf
push
mov
xchg
sbb
inc
inc
jmp
js
push
arpl
fcomp
or
sub
loope
sub
and
fs
fcomp
adc
pop
fistp
into
iret
mov
gs
push
push
dec
xchg
dec
push
pop
bswap
mov
push
push
push
sahf
or
jne
mov
push
cmp
ds
or
cs
dec
fadd
aam
(bad)
mov
cmps
jle
out
clc
stc
inc
push
jge
stos
leave
adc
xor
in
in
cmp
mov
mov
lods
in
into
neg
cmc
aad
dec
mov
mov
push
push
pop
and
cmp
ror
push
dec
xor
dec
mov
lds
mov
lods
test
sbb
cdq
cmps
std
ja
sbb
test
lahf
test
inc
sub
cmp
sbb
push
mov
lds
int3
ret
sbb
mov
lea
fidiv
jno
cmp
lock
jge
sbb
sbb
into
outs
ins
adc
leave
xchg
inc
shl
cmps
shl
pop
sbb
jg
dec
rol
ja
and
sbb
and
lods
jnp
pop
pop
das
push
call
sub
adc
das
mov
in
sub
lea
add
push
sbb
test
sub
or
push
mov
std
ror
neg
and
sbb
and
scas
div
rcl
shl
ret
push
std
rcl
(bad)
push
mov
sbb
icebp
sub
pop
push
and
push
dec
neg
retf
iret
jmp
pop
popf
push
test
push
fisubr
pop
push
add
jecxz
das
cld
lea
mov
dec
dec
push
(bad)
retf
pop
pop
int
(bad)
(bad)
and
and
xchg
or
(bad)
mov
outs
jp
sbb
jne
lods
stos
jge
mov
(bad)
outs
inc
push
or
pusha
test
adc
dec
or
cmps
shr
adc
in
ja
nop
pop
push
cmp
ror
int3
cmp
out
fnstsw
push
ror
jmp
or
mov
neg
ret
adc
popf
imul
dec
lock
or
add
movs
in
pusha
mov
pop
out
jmp
aas
adc
or
stos
push
xor
adc
mov
ins
retf
fwait
shr
call
jnp
pop
push
pop
jne
sbb
mov
pusha
push
arpl
jb
pusha
mov
jb
cmps
sub
cmp
pusha
mov
pop
mov
test
adc
or
pop
scas
pop
mov
test
je
inc
call
inc
dec
sub
pop
repz
xchg
jl
bound
adc
mov
scas
mov
dec
mov
sbb
dec
shr
call
adc
cmps
xlat
rcr
xor
call
jg
ror
mov
das
aaa
stos
jo
ret
sub
mov
rcl
int3
jp
or
xor
sub
jle
mov
or
inc
ins
in
stc
in
and
xor
jmp
pop
mov
call
cmp
mov
mov
adc
xor
jl
add
into
icebp
fcmovb
mov
jb
or
jo
adc
xor
outs
mov
imul
xchg
cmp
or
pop
sub
(bad)
push
sub
xchg
test
loop
mov
mov
mov
cmps
ror
pop
(bad)
pop
out
ror
mov
mov
mov
and
das
mov
(bad)
mov
lods
test
aad
pop
and
xchg
lods
addr16
leave
pop
setbe
jp
push
mov
es
lahf
retf
jmp
dec
add
push
adc
mov
imul
jp
dec
push
jb
cmp
std
push
and
imul
push
arpl
pop
mov
fs
push
fdiv
je
mov
pop
pop
xchg
mov
jg
dec
xor
jp
lahf
loopne
ins
(bad)
js
or
dec
mov
add
imul
ds
mov
and
das
xor
pop
out
int
(bad)
xchg
cmc
aad
aas
test
or
inc
mov
stc
mov
and
scas
mov
lds
or
sub
out
push
cli
pop
test
sbb
gs
mov
cli
out
add
ss
push
push
add
dec
sub
pushw
or
emms
popf
inc
enter
pop
jmp
xor
iret
mov
stos
mov
loop
mov
lods
sbb
test
ins
push
sub
fldcw
and
dec
mov
push
pop
pop
inc
cmp
fist
(bad)
sub
mov
xchg
fwait
cmps
cmp
ins
add
adc
cmp
push
repz
pop
test
(bad)
xor
sub
fwait
test
mov
xor
arpl
push
imul
pop
push
std
mov
(bad)
cli
pushf
shl
jmp
sub
(bad)
ficom
das
mov
mov
ins
sub
mov
cmp
mov
jle
pushf
jne
push
ficom
xlat
sub
xchg
jne
or
or
dec
cmc
fadd
and
mov
fisub
push
inc
mov
sbb
sub
popa
cdq
xor
mov
stos
arpl
inc
out
fimul
push
sub
pop
pop
pusha
loopne
(bad)
mov
add
xchg
xchg
sbb
retf
les
or
imul
test
push
pop
xchg
cmp
or
sub
cmp
pop
cmps
mov
inc
jge
jge
and
dec
sahf
push
or
and
xor
inc
rcl
daa
or
test
jg
jg
stos
test
adc
inc
or
cs
sub
repnz
jle
mov
mov
sar
sbb
(bad)
push
mov
mov
loop
cdq
(bad)
fs
js
push
movs
sbb
push
cwde
movs
xor
xor
mov
and
inc
out
pop
sbb
or
ja
sub
xchg
mov
xor
push
xchg
cmc
mov
jnp
jno
(bad)
pop
popf
bound
inc
xchg
xchg
mov
jnp
enter
mov
(bad)
daa
or
add
mov
mov
ins
cdq
loopne
and
push
xlat
popa
pop
push
repnz
stos
xor
daa
mov
lods
(bad)
aad
test
mov
daa
call
stc
xchg
fild
jb
mov
fwait
jne
frstor
mov
add
(bad)
sub
xor
loop
ins
xlat
in
sbb
aaa
movs
out
leave
sar
neg
out
retf
stos
jmp
inc
test
sub
call
adc
push
push
dec
dec
mov
dec
fdivr
or
ds
sub
into
jp
mov
imul
sub
ret
ror
pop
(bad)
(bad)
or
mov
inc
lds
xchg
pop
mov
aad
xlat
xor
cmp
(bad)
jae
add
je
dec
bound
jge
or
and
lods
cmp
dec
or
clc
mov
mov
int
pop
jns
jbe
adc
retf
retf
sbb
cmp
mov
fisttp
push
imul
jns
pop
push
jp
sub
retf
push
xlat
xor
mov
in
xor
aad
pop
scas
or
stc
sahf
mov
xchg
stc
xchg
pop
je
and
xor
stc
std
bound
cmps
test
mov
or
div
ror
mov
and
leave
imul
cmp
jo
fdivr
icebp
js
mov
xchg
fwait
das
test
std
pop
in
xchg
fs
add
dec
push
xchg
out
out
sub
or
loope
neg
sub
inc
cs
int
clc
ins
lods
sub
xor
lds
lahf
loopne
push
or
test
pop
scas
xor
jl
clc
sbb
out
or
xor
cmps
idiv
loope
mov
add
shr
xor
cmp
add
inc
scas
sub
(bad)
push
and
out
mov
mov
stc
or
or
or
xchg
and
shr
call
int
fld
xchg
jle
inc
ror
fld
js
in
aam
xor
les
call
sub
mov
push
gs
inc
fisttp
in
xor
sbb
fnstsw
or
(bad)
pop
dec
sub
jg
neg
shl
icebp
aaa
inc
sbb
add
inc
mov
out
fcomp
fist
push
and
sbb
jle
adc
cmp
out
je
in
pop
movs
ins
fbld
mov
retf
cmps
mov
sbb
movs
loop
xchg
mov
rcl
mov
xor
sub
out
adc
leave
mov
hlt
test
push
sub
cld
inc
jbe
mov
push
or
stos
repnz
daa
inc
(bad)
cdq
push
loop
or
mov
or
and
sub
mov
xchg
mov
inc
into
adc
mov
xor
mov
dec
pop
pop
ret
icebp
mov
std
mov
cmp
jmp
ss
shl
popa
push
xchg
mov
scas
xchg
ret
and
pop
test
inc
test
out
lahf
ins
sub
out
inc
sti
inc
jmp
cwde
nop
sub
mov
jns
ds
push
pop
mov
call
js
fild
sahf
repz
cmps
mov
lahf
mov
adc
addr16
xchg
and
cld
sahf
imul
mov
fnstsw
outs
ins
in
mov
push
aaa
ins
jge
mov
cdq
test
call
inc
and
popf
mov
pushf
das
sub
push
stos
pusha
dec
adc
fild
adc
retf
fdivr
(bad)
cmp
push
mov
jbe
jle
sub
je
pop
mov
repnz
arpl
fist
cmp
mov
mov
retf
pop
test
sub
or
mov
sub
fnstsw
pusha
pop
and
mov
add
add
push
push
ins
lahf
pop
imul
sbb
pusha
scas
pop
mov
dec
pop
push
outs
or
mov
fild
popf
mov
out
in
mov
adc
(bad)
jno
adc
mov
in
jp
or
xor
fidivr
and
cli
(bad)
adc
xchg
or
jnp
call
cli
xchg
shr
ins
and
aam
mov
sbb
pop
scas
sub
push
xor
out
ins
adc
loope
jmp
xchg
mov
loop
(bad)
in
jmp
movs
repnz
out
pop
and
push
jmp
outs
push
shr
fst
nop
pushf
out
sti
sbb
xchg
fisubr
and
inc
mov
or
xchg
sub
add
adc
sub
or
jb
mov
pop
inc
and
in
fcomp
jle
mov
mov
xchg
mov
push
out
adc
dec
xchg
mov
popa
push
lods
push
jmp
mov
xor
mov
mov
pop
inc
ffreep
jns
mov
mov
mov
add
xor
jmp
xor
add
pop
fsub
retf
daa
pop
loop
mov
push
cmps
dec
nop
sti
fsubr
int3
inc
pop
dec
loopne
sub
lods
mov
pop
into
xor
inc
push
aam
rol
fcomip
pushf
loopne
outs
movs
mov
push
lock
jg
loop
push
add
jae
cmc
dec
adc
bound
xchg
div
popf
cmc
inc
imul
bound
pop
jns
ins
xchg
pop
mov
and
dec
pop
repz
ret
sbb
sub
jb
ret
cmc
mov
mov
movs
cmp
pop
xabort
push
mov
ins
jp
cmps
adc
ins
cwde
inc
jge
in
hlt
cmc
enter
mov
cli
xchg
mov
sbb
mov
sub
fucomp
cmp
es
pop
clc
adc
mov
mov
ja
int3
icebp
pushf
stos
mov
gs
dec
sub
ins
mov
(bad)
jp
jg
rcl
mov
sar
imul
mov
rol
xor
std
mov
mov
pop
mov
cmps
or
xor
fisub
lods
or
jge
mov
stos
loope
leave
jns
jmp
jp
add
mov
mov
ror
popf
dec
sub
add
nop
xchg
and
jbe
idiv
xor
stos
inc
stos
jnp
mov
pause
(bad)
iret
out
xor
mov
nop
retf
sbb
inc
fs
inc
push
fcom
and
cmps
movs
inc
dec
xchg
int3
inc
jmp
div
and
fs
dec
xor
out
dec
ficomp
icebp
dec
test
into
sbb
pop
in
dec
icebp
popf
dec
xchg
inc
ficomp
std
fcmovb
and
test
stos
dec
out
jmp
mov
sti
mov
aad
stos
dec
mov
mov
fild
(bad)
gs
(bad)
icebp
push
dec
rol
push
ret
movs
iret
inc
inc
add
hlt
push
(bad)
aam
mov
shl
fisubr
mov
mov
mov
das
adc
cli
int3
in
xor
cmp
sbb
ja
xchg
cmovbe
call
pop
add
arpl
and
cmp
mov
fst
pop
mov
mov
mov
call
rcl
jecxz
mov
and
xor
ins
fst
xchg
nop
mov
test
(bad)
xlat
add
cdq
xchg
sub
push
xchg
(bad)
jmp
scas
mov
mov
mov
imul
es
mov
fwait
rol
les
icebp
rol
pop
inc
dec
mov
pop
jo
fndisi(8087
push
ficom
xchg
add
daa
fcmovnbe
add
fs
cli
shl
xor
gs
mov
adc
bound
inc
repz
push
or
jae
ss
ins
cs
adc
jae
push
inc
and
mov
arpl
push
ror
mov
imul
mov
cmps
push
lock
das
test
mov
add
and
and
xor
jnp
shl
js
sbb
cmp
movs
nop
xchg
sbb
pop
xchg
aaa
leave
mov
in
mov
and
pop
shl
ret
sub
repz
aam
cs
mov
push
add
out
ins
jne
mov
and
dec
inc
push
stos
or
sub
std
movs
xchg
out
mov
adc
push
push
ret
add
mov
js
push
cmps
int
push
cli
push
mov
cmp
add
jl
push
lock
jnp
retf
les
jne
push
mov
ror
push
inc
in
dec
mov
repnz
dec
jmp
imul
dec
cmp
stos
mov
sti
inc
mov
pop
xchg
or
jmp
push
in
ret
mov
repnz
sbb
and
add
dec
jle
fbstp
mov
jg
mov
mov
lea
jne
xor
adc
mov
test
rcr
(bad)
cmc
jo
daa
sub
push
sbb
adc
popf
mov
fnstenv
cmp
ins
stos
jne
and
stos
jmp
je
adc
shl
and
ins
iret
xchg
cmp
sbb
push
rcl
or
loope
jle
add
adc
fidiv
movs
mov
(bad)
mov
int3
dec
imul
scas
sub
fwait
jbe
fisubr
(bad)
jns
fwait
std
(bad)
sbb
lds
xchg
sbb
sti
imul
cmps
mov
push
add
mov
inc
lods
test
clc
xchg
pop
int
call
mov
dec
push
shr
aaa
pop
pop
(bad)
jns
pop
loope
xchg
sub
shl
add
call
mov
(bad)
aaa
aam
scas
fimul
leave
mov
in
adc
xchg
sbb
jne
push
inc
cmps
in
adc
movs
std
adc
inc
(bad)
fdivr
arpl
jns
inc
lock
lods
cmp
in
push
jmp
stc
cdq
push
cmps
xchg
shr
jg
pop
or
or
mov
das
inc
cli
jo
pop
or
mov
mov
adc
popa
rcr
gs
jbe
test
test
xchg
out
jno
test
aam
and
dec
sar
repnz
outs
ds
les
mov
test
and
lods
test
mov
in
dec
clc
inc
mov
jmp
wbinvd
sub
or
out
adc
mov
mov
push
and
cwde
ins
jg
das
push
jecxz
adc
(bad)
dec
test
imul
pop
mov
pusha
icebp
jge
bound
cmc
push
rcl
out
mov
(bad)
shr
mov
cmp
pushf
xchg
xchg
ret
ffree
or
push
dec
mov
cmp
adc
cmp
push
and
movs
sub
adc
add
fild
jle
xor
jne
sub
cli
pop
mov
sbb
je
inc
mov
lock
sub
jle
dec
movs
fdivr
scas
mov
push
add
cmp
and
scas
(bad)
mov
inc
fstp
inc
inc
push
das
and
mov
jae
jo
dec
cmps
jne
add
in
shl
jp
inc
add
outs
and
adc
cmc
adc
loop
pop
sub
pop
xor
jnp
call
cmp
sahf
rcr
mov
sahf
push
xlat
and
out
xchg
xor
or
es
mov
int3
xor
test
jno
push
fisttp
popa
into
dec
push
pop
xchg
jo
adc
es
xor
shl
movs
mov
callw
gs
bound
data16
popf
movs
arpl
shl
add
or
(bad)
ins
push
inc
push
or
push
mov
outs
and
inc
inc
mov
imul
outs
jg
mov
inc
sub
add
dec
sbb
imul
je
movs
push
add
mov
mov
and
jmp
fnstenv
ficom
sub
popa
or
adc
or
inc
cmp
jmp
lds
test
(bad)
int
lahf
adc
mov
sbb
xchg
cmp
sbb
adc
cld
call
shl
js
add
out
dec
sbb
in
inc
in
aam
push
push
inc
inc
les
xor
(bad)
dec
push
sbb
jns
xchg
sar
jns
cmp
outs
jno
test
cmp
add
mov
mov
jmp
sbb
cmp
out
sub
std
mov
addr16
xor
adc
lods
iret
pop
cmc
addr16
xchg
ds
das
jno
inc
jl
into
and
adc
adc
inc
out
popf
dec
mov
jmp
or
mov
xor
das
sbb
loopne
das
aam
cld
imul
jmp
pop
push
pusha
sahf
mov
push
pusha
ret
push
mov
jmp
test
test
sub
lds
xor
add
add
scas
test
add
out
push
xchg
or
scas
in
dec
cmp
xchg
neg
sub
xor
movs
inc
cs
test
ret
push
aam
int
inc
loopne
pop
sbb
mov
jnp
ins
xor
xor
ja
stos
pop
sbb
dec
mov
ret
out
and
data16
xor
push
and
pushf
test
fsubr
movs
out
jmp
xchg
fs
jle
xchg
ins
sets
(bad)
imul
retf
retf
mov
fwait
inc
mov
dec
scas
mov
aaa
ret
jmp
or
jl
jno
sub
rcr
addr16
imul
repz
cs
pop
call
xor
sbb
cmps
test
pushf
mov
out
dec
sbb
pop
clc
rep
or
inc
inc
xor
fcmovnb
jmp
adc
jo
and
hlt
mov
push
or
rcr
(bad)
in
outs
lds
in
xchg
jno
adc
sbb
inc
jbe
ffreep
pop
add
adc
retf
and
or
fdiv
inc
ins
push
xchg
out
push
push
call
sbb
cli
(bad)
or
imul
call
jp
nop
sti
jae
shl
(bad)
xchg
and
aas
add
in
cwde
loope
xor
ja
imul
nop
xchg
inc
aam
shr
mov
or
cmps
inc
call
add
xchg
aad
loopne
mov
cmp
sbb
arpl
fs
retf
aam
scas
jp
or
not
mov
xor
add
or
pop
stc
lods
fsubr
aas
clc
mov
mov
jecxz
inc
inc
pushf
out
bswap
mov
adc
rcl
clc
arpl
xor
test
out
fisub
test
push
xor
xchg
add
call
loopne
push
mov
sbb
ror
mov
jnp
(bad)
cmp
xchg
cmc
inc
clc
out
in
sbb
pop
jo
(bad)
and
in
mov
test
fsub
ret
dec
or
aas
or
loopne
ret
and
push
lahf
rol
(bad)
(bad)
cli
sub
ds
cmps
xchg
inc
mov
push
cmp
jle
inc
cwde
jbe
sbb
sub
cmps
imul
mov
je
push
push
push
das
mov
jb
xchg
cmp
cwde
and
add
mov
mov
test
inc
test
sub
fidiv
push
shl
xor
dec
bound
int
call
mov
cmp
retf
in
call
rol
lock
arpl
jae
push
imul
test
addr16
mov
mov
aas
setns
mov
cmp
pop
nop
out
sahf
jl
cmp
mov
aas
mov
sub
pop
arpl
jge
enter
push
hlt
aad
stos
lods
rcl
dec
addr16
jp
dec
cmc
or
mov
mov
in
pop
push
or
out
scas
in
xchg
cmps
push
fsub
std
sbb
cli
repz
or
inc
stos
push
loopne
out
bound
pop
popf
xor
mov
outs
mov
rcl
inc
or
cli
sub
aas
in
inc
and
(bad)
fs
pop
add
aam
push
cld
into
(bad)
outs
add
mov
mov
dec
mov
sub
pop
push
(bad)
adc
cld
sti
jmp
lods
and
jp
push
test
sahf
mov
idiv
scas
shr
jl
xchg
cmp
addr16
mov
cmc
jne
rol
sub
neg
mov
jl
xchg
or
mov
out
mov
fidivr
dec
add
or
in
scas
xchg
cmp
add
repz
push
inc
mov
sbb
mov
jne
stos
iret
mov
stc
jno
inc
jge
push
call
mov
ret
dec
add
xchg
inc
(bad)
out
dec
add
cmp
dec
(bad)
movs
addr16
sub
mov
ficomp
nop
and
jo
xchg
shr
push
cmp
mov
xchg
xchg
add
jne
dec
mov
pop
popa
and
pop
cdq
imul
dec
pushf
mov
in
(bad)
jae
adc
jno
test
lahf
adc
jge
jno
pop
inc
inc
js
sub
cmp
pop
in
xor
or
stc
inc
dec
jne
pop
pop
or
aam
mov
pop
ror
loopne
in
pop
sub
mov
icebp
(bad)
out
pop
div
js
mov
mov
arpl
sub
ins
dec
aad
ds
and
addr16
push
jg
hlt
lds
and
push
sbb
jl
xor
dec
xor
in
imul
aam
pop
push
pop
add
jae
jnp
jns
jno
(bad)
jg
cdq
jmp
mov
stos
or
adc
and
jae
push
cmp
jbe
sub
repz
pop
fnstsw
dec
in
fistp
mov
ins
loop
push
jne
and
cmp
scas
jno
clc
test
jne
cmp
lods
call
dec
add
jmp
test
jge
stos
fisttp
div
pop
movs
aas
ins
and
sbb
lea
pusha
hlt
shl
lds
lock
movs
pop
test
es
(bad)
cmp
lock
(bad)
and
imul
dec
dec
nop
jle
js
sub
jmp
fs
scas
ret
mov
(bad)
shl
adc
fldcw
fbstp
sti
adc
or
xor
xor
shr
addr16
cdq
mov
clc
xchg
inc
mov
push
ds
bound
pop
adc
add
dec
jae
cs
xchg
push
mov
fistp
sti
inc
jne
data16
test
nop
dec
call
inc
add
cmp
(bad)
or
cmp
aas
mov
je
cmp
aas
test
std
(bad)
or
and
jb
cmc
fistp
adc
and
sbb
dec
dec
je
mov
push
or
test
scas
sub
sbb
and
(bad)
(bad)
or
push
outs
inc
jns
fs
aas
out
xor
nop
dec
daa
or
and
test
xor
pop
fcmovnu
xlat
lock
xchg
aam
loope
loopne
push
icebp
dec
push
adc
fdivr
or
jb
or
adc
mov
fiadd
scas
mov
xor
or
pop
mov
je
ja
rcl
sbb
movs
fisubr
fs
cs
popf
(bad)
dec
scas
add
fist
jne
rcl
push
jno
mov
add
stc
add
mov
fwait
aas
cmp
(bad)
mov
mov
sahf
outs
adc
cmps
sti
fsub
pop
pusha
xchg
dec
gs
mov
aad
imul
pop
outs
movs
ja
scas
pop
adc
call
jge
fild
mov
mov
add
sbb
mov
pop
sahf
in
xchg
dec
inc
clc
jo
ins
jnp
adc
imul
mov
dec
xor
in
repnz
adc
(bad)
push
(bad)
jmp
test
mov
mov
add
and
add
mov
rep
adc
ja
rcl
adc
dec
int
inc
cld
cmp
lock
in
push
out
cmp
mov
stos
jbe
push
jg
bound
rcr
jge
out
pop
xlat
cmp
cli
pushf
dec
pop
push
xchg
clc
test
jl
imul
mov
das
mov
xchg
lods
inc
ja
mov
iret
int3
stos
call
jle
psadbw
ins
out
or
test
cmc
pop
es
mov
mov
test
retf
cmp
jne
mov
inc
mov
sub
clc
sti
xchg
mov
cld
retf
ret
or
mov
in
inc
inc
inc
stc
test
mov
cli
sbb
lahf
or
inc
or
retf
loope
jle
out
xchg
xchg
cmp
mov
or
push
cmps
or
dec
and
ret
mov
syscall
in
in
add
ins
dec
jns
outs
in
mov
inc
repz
mov
imul
pop
pop
addr16
jno
cmp
push
inc
or
cmp
and
mov
adc
loope
mov
in
fcomp
cmp
and
xchg
(bad)
retf
cmp
cdq
ss
pop
retf
mov
out
mov
mov
cmp
mov
xchg
cmc
pusha
pop
aas
jo
xchg
(bad)
and
cmps
sbb
and
retf
sbb
call
and
push
retf
cmc
xlat
retf
movs
inc
daa
(bad)
js
fdiv
int
mov
inc
paddq
aaa
test
adc
jge
or
out
mov
mov
inc
xor
(bad)
mov
or
adc
cs
shl
adc
retf
ins
jae
pop
pop
cwde
jl
cmp
sbb
rcl
or
pusha
push
push
pop
or
and
lods
out
xchg
mov
xor
push
xlat
lea
sar
repnz
repnz
jbe
pop
fsub
out
jns
scas
adc
mov
add
pop
int
mov
leave
mov
outs
xor
inc
mov
cmc
in
sub
mov
dec
jmp
jl
push
xlat
xor
mov
hlt
jne
push
or
pop
pop
scas
cmc
imul
inc
cmp
cmp
push
in
dec
stos
xor
in
xor
(bad)
hlt
inc
in
in
mov
mov
and
push
lods
hlt
xchg
inc
in
xchg
mov
out
js
and
clc
icebp
fdivr
cld
dec
lds
jecxz
add
dec
fcomip
mov
pop
rcl
pusha
push
(bad)
in
in
sbb
test
fild
dec
or
inc
adc
pusha
or
dec
jg
ror
aam
mov
aam
sub
sahf
fsub
ds
mov
push
push
ss
mov
inc
fistp
xor
push
or
je
mov
mov
pushf
imul
(bad)
mov
mov
into
inc
mov
mov
pop
push
dec
jl
add
jnp
retf
(bad)
pop
pop
sub
inc
in
sub
xchg
(bad)
stos
bound
cmps
and
mov
mov
dec
les
inc
icebp
dec
xchg
mov
retf
ret
or
lock
repz
jno
xor
or
mov
aam
out
test
out
pop
xchg
and
cmp
mov
and
inc
sub
push
push
pushw
retw
or
repnz
cmp
out
sbb
xchg
add
call
mov
push
int3
neg
cs
and
dec
dec
pusha
push
xor
dec
jnp
sbb
add
pop
adc
xchg
in
inc
xor
aas
sbb
pop
sub
jecxz
mov
out
ss
mov
bound
repz
cli
sbb
mov
fstp
inc
(bad)
jg
push
stc
das
call
retf
mov
cmp
in
adc
push
test
cwde
dec
repnz
(bad)
sub
mov
loop
js
sbb
fild
int
es
imul
sbb
mov
pop
fcomp
inc
push
push
fistp
dec
xor
and
fwait
push
stos
sub
es
xor
mov
inc
or
cmps
mov
mov
fwait
sub
dec
xchg
jmp
mov
cmp
aaa
and
ror
and
and
cli
cmp
aas
out
fdiv
cwde
cdq
stc
inc
jmp
mov
cld
out
lea
out
add
cwde
and
jbe
jle
mov
rcr
shrd
sbb
dec
jns
cld
shr
jb
pop
sbb
jbe
inc
(bad)
daa
mov
mov
mov
adc
aad
adc
pop
sti
inc
stos
or
jge
adc
fst
shr
and
mov
jne
or
div
test
js
push
adc
mov
fsubr
popf
jp
mov
out
fld
push
jecxz
gs
and
mov
in
scas
or
cli
ret
push
sbb
out
push
lahf
leave
mov
rol
daa
imul
in
test
mov
popa
push
dec
call
rcl
sub
pushf
inc
cmp
sub
jp
pop
sahf
jmp
int
sub
in
xchg
aaa
dec
push
xchg
addr16
aam
inc
addr16
adc
test
push
pop
jnp
dec
pop
mov
jo
repz
lea
outs
push
sub
aad
es
dec
jmp
sahf
jbe
inc
or
pop
jmp
cmp
ja
je
xchg
push
xchg
lahf
push
daa
push
and
xor
(bad)
ficom
cmp
sub
nop
outs
aad
jge
mov
cmp
dec
stos
ror
loop
in
call
pop
cdq
inc
xchg
adc
or
daa
fwait
jne
pop
jno
fdivr
and
test
repz
pop
mov
inc
imul
xor
(bad)
ret
sub
out
es
and
les
daa
or
cmp
dec
les
mov
jo
in
loop
ins
mov
sub
je
cli
and
mov
xlat
loopne
or
(bad)
pop
test
push
or
in
mov
arpl
push
pop
std
repnz
cmp
outs
call
out
dec
icebp
movs
sub
add
add
adc
mov
sbb
pop
pusha
neg
fiadd
adc
mov
sbb
dec
test
dec
icebp
mov
pop
sbb
adc
mov
popf
ss
jmp
xchg
inc
mov
inc
push
ins
and
pop
xchg
mov
out
pop
jae
clc
mov
pop
xchg
mul
mov
jmp
lods
cwde
hlt
aam
inc
xchg
push
sbb
push
jp
mov
push
retf
or
push
xchg
retf
push
stc
stos
js
movs
xor
jnp
jg
int
dec
jmp
xor
fidiv
mov
inc
call
sti
xchg
sar
mov
out
xchg
and
les
lds
adc
or
jle
push
push
mov
inc
daa
sbb
iret
out
pop
xor
cmp
push
popa
movs
rcr
mov
ss
movs
xor
into
inc
push
add
pop
fidiv
call
jl
jl
std
inc
imul
jmp
pop
and
cmp
and
addr16
jns
pop
or
xchg
loope
cmc
nop
sahf
repz
cmp
mov
mov
fcomp
cld
out
and
sbb
pop
test
mov
adc
cwde
mov
iret
dec
ja
fisub
jo
xor
add
mov
shl
loopne
not
jg
pop
jo
xchg
pusha
dec
jg
jge
loopne
rcl
jo
repnz
mov
dec
lock
push
adc
lahf
xchg
inc
dec
in
arpl
cmp
fild
push
minps
sbb
pop
mov
xchg
pop
jle
clc
pop
aam
out
xchg
mov
repnz
or
pop
enter
push
hlt
inc
sub
mov
outs
mov
xor
dec
jge
cmp
jg
inc
xchg
test
xchg
(bad)
jno
inc
int
sub
pop
jmp
mov
cmp
or
fstcw
mov
mov
leave
sub
jge
scas
jno
(bad)
mov
inc
and
movs
lods
retf
sub
je
cmp
(bad)
adc
and
cwde
stos
xchg
test
nop
xchg
int
xchg
mov
xchg
fnstcw
clc
xchg
jle
repz
mov
jg
shl
enter
(bad)
hlt
pop
inc
jae
sub
stos
ret
scas
cmps
cwde
jae
and
ds
dec
into
repnz
es
dec
fiadd
cli
lea
add
fst
shl
(bad)
div
inc
arpl
fbld
movs
xchg
xchg
(bad)
sbb
sti
adc
xchg
dec
ss
daa
inc
adc
lock
rcr
fist
jmp
call
sbb
sbb
stc
mov
xchg
and
mov
sbb
mov
mov
mov
aam
add
call
repnz
fidiv
and
cmps
shl
mov
jb
xchg
jge
cmps
or
mov
outs
cdq
xor
mov
xchg
sbb
and
retf
pop
push
imul
mov
lods
jl
and
jmp
add
xchg
scas
mov
pop
mov
xor
into
outs
xchg
(bad)
pop
dec
jg
cmp
fsub
pop
pop
call
push
es
imul
push
cmp
not
pop
aad
xor
adc
add
aam
pop
out
cs
add
cmp
movs
stos
cwde
pop
sub
push
adc
popa
enter
ins
cmp
push
dec
popf
sub
jecxz
sbb
xor
add
sbb
pop
add
adc
pop
xchg
xlat
in
and
xchg
sahf
xchg
and
mov
inc
adc
cmp
adc
add
call
sbb
addr16
jbe
or
jg
shl
pop
retf
sbb
adc
push
cdq
pop
sub
mov
cmp
mov
jns
int3
inc
inc
or
out
mov
test
mov
mov
pop
xor
enter
rol
jle
and
loop
cdq
xchg
cdq
scas
out
jns
movs
sbb
pop
xchg
adc
inc
fs
mov
(bad)
and
pop
(bad)
jmp
imul
sar
int
shl
add
mov
sbb
cwde
add
jecxz
repz
idiv
pop
mov
fstp
lds
mov
loopne
fisttp
pop
in
mov
test
das
icebp
sub
cmp
or
test
or
mov
enter
sti
xor
lahf
xor
jmp
cli
and
mov
gs
dec
jns
in
cmps
retf
cmp
mov
rol
fdiv
(bad)
pop
inc
fsubr
mov
add
jno
or
cwde
fcomp
(bad)
sbb
push
sbb
pop
stos
mov
sub
xchg
push
xchg
inc
sbb
mov
sbb
mov
mov
xchg
push
cld
xchg
jge
sbb
sub
mov
mov
(bad)
sbb
icebp
xor
in
dec
sbb
lods
xor
jmp
jmp
addr16
mov
or
or
adc
ret
xlat
dec
mov
inc
sub
dec
mov
dec
jg
xor
fsub
ins
xchg
test
nop
dec
mov
dec
in
adc
jmp
jb
int
dec
adc
js
pop
xchg
mov
push
push
xor
and
mov
imul
xchg
mov
or
les
aad
push
faddp
or
push
repz
aaa
add
(bad)
mov
shr
adc
loope
retf
jno
or
xor
or
adc
pop
push
sahf
xor
(bad)
push
push
fwait
and
xchg
cmp
stc
jge
or
mov
mov
fyl2xp1
ret
test
jp
push
sbb
je
xor
mov
push
pop
push
ret
loopne
iret
and
pop
xor
xchg
jecxz
jbe
xor
mov
rcl
or
jns
pop
lea
pushf
jnp
(bad)
cli
imul
call
out
(bad)
aad
xchg
cmps
xor
into
lock
aaa
repz
fiadd
mov
mov
in
sub
push
lods
loope
mov
repz
or
in
(bad)
movs
jb
retf
xor
stc
jae
push
loope
push
sub
test
jmp
setl
imul
jmp
inc
ins
cmp
fstp
stos
cmp
iret
sbb
sti
cmps
cwde
jle
retf
fstp
fadd
dec
sub
rcl
sbb
xchg
sbb
sbb
es
inc
mov
ret
cmp
adc
fsubr
sub
cli
cmp
imul
push
jl
fs
lea
outs
div
sub
mov
ds
sar
sti
cmc
sbb
jecxz
aam
and
lahf
aad
pop
cmp
xor
call
test
imul
retf
adc
pushf
in
loopne
jg
cmp
adc
mov
je
(bad)
pop
cdq
sub
cmp
pop
test
sar
cmps
sbb
mov
mov
sub
mov
sub
cmc
fisubr
(bad)
aad
gs
gs
sub
adc
cmc
retf
fisttp
sub
lds
xchg
jae
ret
push
movs
js
inc
shl
rol
jb
dec
and
jae
fistp
imul
xlat
xor
sbb
push
inc
cs
(bad)
pop
out
and
xchg
hlt
adc
ucomiss
pop
mov
rcl
nop
je
mov
pusha
nop
test
jbe
mov
sub
out
enter
xchg
add
fistp
jne
jns
sbb
pop
jns
gs
push
ins
repnz
xchg
popa
mov
push
loope
imul
js
jle
mov
inc
adc
mov
mov
imul
xchg
mov
ds
fisub
push
imul
ret
xchg
xor
mov
push
gs
lods
into
(bad)
pop
fadd
pop
imul
and
sbb
sub
sti
test
cmp
sbb
iret
in
outs
leave
mov
into
shr
sbb
mov
lahf
call
fwait
and
push
loope
dec
sub
shr
js
add
arpl
or
push
cmp
sbb
icebp
sti
jbe
loopne
cmp
inc
jbe
inc
dec
stos
aad
loop
mov
scas
bound
mov
push
mov
hlt
pop
int3
add
out
adc
cmp
bound
or
push
add
xor
mov
and
dec
out
and
into
add
sbb
dec
cwde
shl
sti
mov
rol
hlt
ret
push
shl
dec
push
das
push
push
sbb
out
repnz
jecxz
iret
xlat
fwait
ds
ds
jae
sub
cmp
xchg
xor
xchg
enter
cli
adc
mov
mov
iret
mov
mov
popa
dec
push
mov
repz
clc
out
std
bound
in
ror
mov
cmps
xchg
sub
sub
test
test
mov
add
ret
outs
inc
dec
mov
mov
inc
into
sbb
xor
dec
xor
xor
sub
adc
mov
pop
dec
pushf
popa
data16
inc
call
adc
fs
dec
mov
xchg
movs
push
xchg
in
cld
stos
repz
adc
pop
loop
sbb
fisubr
rcl
mov
(bad)
cmps
cmp
mov
stos
je
aad
jne
jo
ss
adc
mov
sub
pop
pop
xchg
jmp
fisubr
mov
mov
xor
sbb
dec
sbb
pop
into
in
test
mov
mov
fistp
lahf
outs
fucomp
imul
adc
ficom
or
(bad)
and
xlat
xor
sub
cli
or
in
lods
test
jo
mov
pop
in
out
ins
mov
and
in
repz
imul
into
sti
sbb
sub
int3
jb
movs
pop
xor
inc
jp
mov
cmp
daa
mov
hlt
dec
pop
scas
jno
xor
nop
fisttp
jmp
inc
ds
ret
cli
mov
sbb
xchg
fwait
mov
int3
int3
sar
sub
xlat
cld
mov
sub
rcr
int3
mov
mov
pop
jmp
stc
in
shl
dec
enter
fmul
imul
rol
cs
cmp
jmp
sar
sbb
fnstenv
add
add
sbb
loope
push
sub
loop
push
je
dec
int3
adc
or
repz
test
adc
add
inc
push
cld
mov
add
mov
jo
lahf
xchg
jns
fxch
gs
pop
ret
(bad)
pop
jle
jo
int
addr16
pop
lods
mov
retf
sahf
(bad)
mov
movs
mov
retf
pop
cwde
lock
or
test
pop
(bad)
scas
sbb
mov
add
inc
imul
icebp
jmp
xchg
xor
xchg
mov
outs
and
aad
jmp
adc
fldl2t
push
sbb
call
daa
adc
shl
loopne
mov
ret
mov
pop
dec
and
mov
cld
dec
movups
adc
sub
outs
push
adc
call
fdivr
fidivr
les
and
jmp
dec
aad
push
(bad)
repz
inc
loop
xchg
pop
xor
in
and
and
call
dec
jmp
repz
push
mov
shl
mov
push
dec
xor
add
mov
pop
lea
mov
(bad)
fs
xchg
mov
(bad)
and
cli
push
xor
in
add
fdiv
ror
and
ficom
adc
cmp
(bad)
adc
mov
scas
mov
cmp
inc
sub
xchg
or
xchg
mov
bound
add
xor
push
mov
scas
jge
lods
ret
adc
pop
pop
add
jnp
push
in
stos
mov
inc
push
scas
mov
rcr
mov
xor
mov
xchg
lods
inc
jns
xchg
push
scas
mov
inc
xlat
sbb
das
es
inc
fmul
out
xlat
cwde
xor
das
xchg
sbb
push
movs
xor
daa
in
scas
mov
adc
sbb
js
cmp
nop
js
retf
cwde
movs
jg
cmp
pop
add
shl
dec
xchg
ins
dec
fcomp
jmp
jmp
inc
jecxz
push
stc
sub
sbb
fnstenv
popf
sahf
jbe
(bad)
xor
ret
std
imul
sub
push
push
rcr
cmp
retf
in
ror
lods
ret
outs
dec
pop
pop
js
dec
dec
cmc
push
test
imul
imul
rcr
lods
mov
les
adc
sbb
pop
jbe
jl
jne
push
fdivr
push
cld
xchg
add
push
jbe
xchg
push
and
ins
retf
mov
test
int
pop
xlat
push
addr16
call
cwde
ror
cmc
pop
lahf
sub
and
mov
push
stos
cmp
fsubrp
aad
pop
stos
cmp
push
cwde
add
mov
inc
sub
hlt
mov
or
cld
mov
pop
in
addr16
jne
inc
out
inc
add
scas
je
js
inc
(bad)
pop
xlat
pop
es
push
pop
retf
xor
push
aaa
mov
mov
test
mul
mov
mov
(bad)
enter
and
push
dec
cmp
jnp
push
push
cmc
ss
or
mov
call
xor
xchg
out
or
aam
sbb
pop
jb
out
pop
retf
sbb
ja
sub
add
or
in
xor
mov
cmp
(bad)
push
sub
mov
lods
cmp
add
out
mov
jne
daa
fstp
test
stos
into
es
fst
xchg
push
popf
je
lds
xchg
cmp
in
ins
dec
pop
jp
and
mov
aad
mov
push
mov
lods
dec
fbld
jl
aad
mov
xlat
xchg
fdivr
or
sahf
xor
and
sar
rcr
popf
pop
mov
mov
cmc
xchg
ins
jp
fbld
arpl
sub
cld
xor
xchg
jmp
rcl
lds
cmp
xchg
leave
out
add
cdq
add
jo
push
call
adc
ror
mov
daa
icebp
std
xor
repnz
jb
shl
std
push
dec
aaa
outs
sub
div
add
fcom
inc
in
mov
hlt
sub
pop
jae
aam
xchg
mov
pop
loopne
fcmovbe
fbstp
test
jbe
sbb
mov
ins
or
mov
call
aad
lahf
adc
mov
out
loope
and
mov
scas
pop
jge
les
sbb
add
call
(bad)
in
jbe
aas
or
inc
add
cdq
add
lea
fld
add
out
movs
es
sbb
xchg
sti
dec
dec
movs
test
sbb
mov
out
out
loope
xchg
call
lea
test
in
lods
pusha
jb
jge
xchg
pop
cmp
out
test
and
adc
lods
das
xor
mov
je
xchg
sbb
es
in
gs
stos
pushf
test
inc
mov
inc
push
fistp
scas
dec
outs
ds
in
xchg
out
add
pop
cmp
aad
xchg
adc
sub
mov
push
sub
stos
adc
call
(bad)
lar
daa
(bad)
xchg
adc
call
sub
push
add
add
fidivr
in
lahf
adc
in
repz
jmp
stc
(bad)
loope
inc
shl
adc
ret
ins
repnz
cmp
bound
retf
jns
sub
adc
add
jg
pop
xchg
pop
pop
push
out
shl
cmc
test
mov
or
jns
hlt
pop
inc
or
outs
add
or
sub
test
scas
jbe
adc
cmp
inc
mov
scas
inc
add
add
xor
push
int
jp
mov
in
dec
add
stc
xor
sub
jne
(bad)
js
jb
inc
xchg
or
xor
mov
mov
cmp
push
ins
test
daa
ja
fdivr
push
nop
sub
cmp
sub
ins
loopne
outs
daa
mov
and
mov
pop
retf
add
in
xor
in
inc
repnz
add
retf
adc
sahf
sub
mov
mov
push
push
daa
ja
aad
shr
loop
cmp
dec
inc
test
out
xor
jmp
sbb
jns
xor
daa
sub
cmp
xor
comiss
sbb
stos
dec
dec
mov
push
aaa
out
push
in
and
scas
inc
pushf
daa
and
int
push
push
sub
je
or
sbb
dec
cmp
das
sbb
sbb
(bad)
scas
add
scas
push
mov
and
lods
mov
aas
cmp
and
rcl
outs
addr16
fld
pop
dec
cmps
aam
xor
(bad)
mov
push
andnps
pop
xchg
rcl
sbb
retf
test
sub
pop
inc
mov
cmp
repz
sahf
pop
mov
dec
loope
pop
mov
ret
cmp
scas
ficom
pop
jbe
lods
dec
ds
(bad)
mov
ds
cmpxchg
frstor
outs
or
sti
xor
ret
inc
sbb
mov
jecxz
mov
dec
xchg
adc
cmp
hlt
aaa
popa
loope
push
rol
(bad)
and
mov
xchg
aad
push
test
jae
mov
ins
cwde
jno
pusha
sahf
aam
sbb
ret
ins
jle
inc
ror
dec
cmp
dec
push
xchg
lock
mov
repnz
lahf
jb
clc
movs
xor
pop
adc
ror
in
adc
hlt
ret
js
das
push
pop
test
ss
out
ret
repz
jmp
pusha
push
adc
mov
rcl
mov
outs
icebp
cmps
xchg
xchg
cs
push
fld
stc
push
imul
rcr
add
jl
out
fisubr
xor
xchg
xchg
outs
movs
aam
aaa
inc
xchg
and
add
jnp
(bad)
push
xchg
in
lea
push
loope
and
sbb
xchg
sbb
xchg
mov
push
test
xlat
inc
pop
in
call
mov
xchg
cmps
arpl
xchg
jl
or
fstp
jecxz
pop
ret
inc
mov
mov
mov
mov
ins
test
cmp
and
mov
cmp
dec
loop
mov
adc
dec
mov
out
ss
push
fwait
xor
dec
lds
mov
imul
in
add
in
rcr
test
dec
leave
retf
cmp
xchg
and
sbb
sbb
por
jmp
repz
cli
xor
mov
inc
sub
mov
mov
cld
nop
sbb
dec
or
dec
xchg
pop
and
inc
push
xchg
retf
xchg
push
cwde
ins
retf
and
jle
test
js
call
das
iret
mul
adc
xlat
lock
mov
(bad)
mov
mov
mov
aaa
movs
inc
jo
add
pop
xor
xchg
xchg
lods
mov
cmps
fadd
inc
mov
xor
repz
loope
pop
push
sbb
cld
jmp
into
psubw
cmps
gs
das
inc
jb
jg
adc
mov
scas
ins
(bad)
sub
jns
xor
or
push
ret
jae
dec
mov
int
cmp
retf
imul
mov
xlat
mov
enter
xchg
fs
dec
sub
add
pop
or
std
cli
dec
es
lods
mul
mov
in
xorps
mov
xchg
ds
jle
out
cs
mov
mov
enter
lock
mov
xor
jmp
and
mov
mov
iret
sbb
xchg
xchg
mov
int
mov
mov
jp
adc
enter
push
jl
das
add
sub
aam
ins
cmp
popa
mov
iret
sbb
in
cmp
xchg
rcl
mov
add
scas
xor
mov
dec
sbb
xchg
inc
je
shl
int3
push
fistp
sar
aaa
fldcw
jle
gs
dec
or
jp
rcl
push
pop
test
icebp
int
sub
lds
xchg
clc
ins
rcr
pop
shl
mov
inc
jnp
lds
popa
inc
mov
(bad)
imul
add
fcmove
jbe
cwde
and
mov
loop
adc
inc
jb
jo
add
inc
test
(bad)
test
and
ja
sti
cld
fdivr
pop
or
cmp
inc
dec
int
xchg
fdivr
std
xor
pop
mov
dec
shl
xor
mov
hlt
gs
cdq
mov
mov
mov
and
out
push
cmp
fs
xor
xchg
das
popf
lea
retf
fcmovb
add
scas
das
add
movs
push
movs
jp
aas
mov
jae
loopne
into
and
jbe
or
sub
test
aad
pop
add
repz
imul
jge
rol
add
(bad)
mov
popa
repz
cld
in
xor
ins
mov
mov
(bad)
jo
int
outs
mov
ins
xor
inc
or
jns
(bad)
not
adc
fld1
push
cli
xor
rcr
pop
pushf
in
or
movs
jecxz
push
pop
cdq
ror
fwait
movs
or
outs
in
cmps
sbb
cmp
push
outs
mov
inc
jo
loopne
or
mov
cdq
cmps
mov
fsubr
fwait
sbb
popa
push
xor
sbb
mov
movs
ins
ins
js
jne
pop
mov
sahf
(bad)
pop
ret
es
sti
push
(bad)
inc
icebp
mov
in
pushf
mov
xor
mov
sahf
pop
xchg
add
push
jno
icebp
addr16
scas
inc
aam
retf
dec
rcr
adc
call
test
pop
in
std
rcr
and
cmp
(bad)
add
int3
and
imul
(bad)
push
mov
std
add
add
xchg
add
fwait
icebp
or
in
xchg
adc
lock
clc
test
jo
sar
push
push
movs
sahf
xchg
dec
jno
sbb
aad
inc
je
out
add
sbb
jno
and
ins
or
cmp
call
cmp
mov
lods
outs
lock
and
out
jae
retf
dec
out
aas
(bad)
mov
imul
ret
mov
ret
mov
jecxz
fidiv
push
(bad)
call
cmps
xchg
mov
pop
push
data16
add
jecxz
push
add
ret
mov
(bad)
outs
cwd
sbb
mov
mov
and
push
loope
out
lods
int3
sub
inc
xchg
shr
cs
fs
dec
ins
jnp
test
inc
and
push
loope
dec
jnp
mov
push
xchg
xchg
jecxz
jmp
xchg
out
adc
or
popf
jecxz
mov
fs
test
dec
rcl
sub
hlt
or
out
arpl
and
mov
jl
adc
mov
loope
pop
push
test
add
xchg
enter
and
inc
jecxz
push
push
lods
sar
pop
ds
cmps
aad
add
jmp
pushf
push
fcomp
xor
inc
in
adc
retf
cld
lock
in
stos
push
mov
sbb
mov
hlt
inc
pop
test
mov
cdq
sbb
jge
dec
stos
inc
out
mov
lds
(bad)
std
mov
ror
rol
pop
sahf
pop
and
mov
ret
inc
fidivr
or
repnz
call
xchg
hlt
test
add
sbb
fbstp
lods
sbb
out
xchg
sbb
aas
rcr
out
arpl
cmps
cli
mov
in
add
fidiv
out
or
sbb
cld
or
push
addr16
mov
jecxz
pop
idiv
or
ret
repnz
repnz
js
ins
inc
fisub
es
test
xchg
and
lods
mov
push
in
or
scas
cmps
push
fs
sbb
mov
or
iret
aad
out
and
jnp
and
pop
and
popf
imul
pop
cmps
xchg
or
sbb
mov
push
pop
inc
push
add
shl
ret
popa
rol
or
sbb
sahf
adc
cld
fmul
adc
jp
jbe
movs
mov
mov
stos
dec
add
and
push
sbb
mov
or
stos
mov
mov
pop
jbe
scas
jmp
inc
push
cmps
pop
jl
bound
adc
retf
xor
and
mov
inc
add
addr16
sub
fld
xchg
ds
mov
imul
sbb
lock
movs
inc
push
push
test
mul
jge
movs
mov
jmp
lahf
(bad)
pop
mov
enter
mov
sbb
frstor
pushf
pop
dec
(bad)
in
jmp
cli
and
movs
mov
(bad)
fnstcw
mov
in
fistp
xchg
ret
cdq
mov
repnz
fcmovnu
js
out
jecxz
and
and
rcr
movs
inc
mov
stc
outs
sub
pop
dec
cld
ss
(bad)
xor
in
inc
out
(bad)
outs
sub
(bad)
sbb
or
jge
or
cdq
and
push
xor
sub
sub
sub
fisubr
cmc
repz
hlt
loop
(bad)
push
jns
in
xchg
imul
loop
add
cmp
mov
and
add
mov
popf
jno
and
jmp
cmps
scas
popa
js
sub
push
ret
ror
xchg
push
mov
jo
lock
stos
enter
sbb
sbb
cmp
jb
(bad)
xor
cmp
pusha
rcr
push
cmp
add
dec
sbb
sahf
cs
mov
fist
push
xchg
(bad)
sbb
jl
out
int3
(bad)
mov
sbb
xor
fisubr
aas
add
jae
cmps
scas
(bad)
ins
push
sahf
inc
mov
rcr
scas
test
sub
ins
fwait
dec
add
addr16
pop
dec
sbb
mov
mov
xchg
pop
push
pop
dec
scas
mov
cwde
clc
pop
nop
cmp
out
shl
repz
adc
(bad)
rcr
repnz
lods
inc
scas
push
mov
xor
add
xchg
and
ins
jb
push
out
mov
inc
xchg
inc
push
or
pop
cmps
or
xor
out
aam
into
lahf
aam
pop
hlt
adc
outs
push
or
jp
ret
daa
ds
jnp
xchg
inc
push
inc
sti
cwde
pop
xchg
out
add
in
cwde
mov
pop
pop
push
(bad)
fdiv
ds
mov
in
arpl
xchg
les
push
in
test
test
aas
sbb
push
pop
leave
aaa
cwde
mov
mov
mov
xor
shl
cmps
push
mov
cs
mov
popa
ficom
aaa
fadd
pop
push
ss
dec
imul
push
cld
mov
out
jb
mov
daa
(bad)
movs
push
jge
iret
movs
mov
sub
push
push
pusha
jne
lds
mov
push
jmp
cs
jns
inc
mov
xchg
fld
loope
sbb
add
mov
out
cdq
xlat
cld
xchg
stos
data16
push
call
xchg
dec
sbb
adc
and
repnz
or
or
ret
lock
jmp
jp
push
xor
inc
add
test
cwde
iret
repnz
shr
scas
sub
or
sar
icebp
popa
icebp
lods
xor
xor
push
punpckhwd
pop
ja
pop
out
mov
mov
push
mov
dec
fnstcw
mov
cmps
add
(bad)
mul
cli
and
hlt
and
mov
shl
aaa
(bad)
mov
test
into
mov
adc
pop
mov
sbb
sub
mov
mov
jg
ror
jmp
adc
ja
fisttp
shl
jl
daa
aad
shr
dec
or
test
test
adc
inc
imul
sbb
push
fisubr
cld
jl
mov
movs
sub
push
adc
xchg
pop
or
mov
inc
fld
inc
or
sub
ja
fadd
aaa
pop
xor
jmp
mov
push
adc
aaa
cmp
or
jp
into
add
je
cld
sahf
stos
or
mov
push
xchg
retf
test
adc
cmp
inc
mov
xchg
or
jg
test
push
retf
jmp
test
leave
dec
inc
ins
mov
not
xchg
lods
ret
xchg
sub
adc
inc
stc
push
sub
fiadd
ds
in
push
das
or
mov
cli
fs
inc
mov
(bad)
out
ficom
and
sbb
js
test
test
jecxz
rcr
(bad)
add
pop
xchg
mov
jle
xchg
(bad)
jbe
sbb
rcl
enter
cmps
sbb
inc
sbb
sti
xchg
in
xchg
xor
in
pop
outs
dec
mov
add
fucomp
rol
ja
in
clc
and
mov
daa
movs
mov
push
xlat
in
sar
out
xor
int3
cmps
nop
rol
xchg
aas
jno
shl
and
scas
addr16
mov
scas
mov
movs
pop
adc
cdq
daa
cmp
xchg
mov
das
(bad)
ss
and
push
adc
mov
(bad)
stc
mov
outs
(bad)
xchg
dec
mov
iret
fisub
xor
call
mov
lods
bswap
scas
push
fistp
inc
fst
mov
adc
push
cmp
in
loop
push
xchg
leave
inc
mov
inc
cmp
(bad)
(bad)
shl
ret
cs
pop
out
jb
cmps
lods
sub
xchg
and
or
mov
lock
or
lods
enter
nop
pop
fidiv
fistp
cld
popf
sbb
jge
addr16
rcl
adc
(bad)
cmps
xchg
or
and
push
in
jge
or
in
sub
lock
inc
xchg
jno
stos
jo
test
cld
cmps
mov
fdiv
dec
dec
dec
ins
jnp
iret
mov
jae
push
xchg
jbe
push
push
xor
leave
xchg
cmc
cwde
test
push
push
jle
sub
sub
outs
mov
adc
adc
mov
mov
addr16
xor
fnstenv
sub
or
jecxz
call
xchg
(bad)
lea
ins
scas
jo
add
xchg
pop
fcomp
out
jmp
fistp
push
xchg
arpl
clc
cmp
jg
enter
inc
push
xchg
jns
mov
mov
pop
cmp
or
inc
cmp
jecxz
mov
mov
repnz
pop
aam
inc
xor
cwde
out
retf
dec
adc
leave
pop
lahf
mov
mov
sub
cmps
scas
call
das
cmp
pushf
adc
mov
stos
xor
pop
inc
dec
xor
jge
add
adc
cmp
out
cmp
out
jbe
inc
movs
jmp
inc
xchg
or
pop
mov
int
sbb
dec
mov
inc
add
cmp
shr
lods
push
gs
daa
adc
jno
popa
call
les
test
arpl
aaa
clc
rep
mov
cmps
pop
movs
popa
pop
adc
shr
jae
jno
outs
je
jmp
in
into
push
std
outs
fimul
in
mov
jg
call
cmp
xchg
retf
mov
dec
xor
fcom
jno
fiadd
inc
jp
pop
test
das
xor
or
and
push
js
mov
jecxz
aas
in
and
xchg
push
sub
stos
pop
cdq
outs
nop
cmp
inc
sub
inc
pop
dec
shl
add
sub
push
fmul
xchg
and
neg
add
sbb
add
push
push
sbb
lds
ins
dec
jno
push
sub
outs
mov
and
mov
loope
xchg
sub
pop
adc
cmps
jo
xor
lock
jb
mov
ret
dec
cmps
mov
cld
out
iret
outs
jle
adc
mov
(bad)
clc
pop
es
jecxz
mov
jnp
push
push
fsub
or
jle
jle
sbb
push
cmp
xchg
pop
jg
repnz
jmp
loope
inc
cwde
push
push
movs
das
mov
int
mov
push
fs
mov
icebp
inc
lock
enter
and
out
retf
jp
cmp
fcmovbe
fnstcw
fwait
sub
jle
cwde
leave
jne
cmps
movs
mov
xor
sar
scas
cmc
out
(bad)
(bad)
fimul
(bad)
sub
test
fcomp
jecxz
add
test
imul
jmp
aaa
sbb
adc
jbe
in
loop
adc
ds
adc
pop
out
enter
ret
(bad)
push
test
out
fcmovne
xchg
xor
xor
das
jnp
pop
push
push
loopne
pop
inc
mov
mov
fld
and
push
pop
xchg
mov
pusha
retf
popf
xchg
mov
mov
push
dec
xlat
jl
pushf
xor
cmp
shl
adc
xor
aad
outs
fsubr
outs
(bad)
cwde
test
ds
mov
jecxz
cmp
jle
sub
iret
lds
gs
aaa
test
push
rcr
(bad)
dec
xor
test
mov
jmp
repnz
xchg
ds
jo
cwde
sbb
shl
add
sbb
dec
aam
mov
lea
add
mov
int
inc
sahf
arpl
fiadd
xor
out
mov
out
pop
icebp
cli
aad
icebp
popa
lahf
cli
dec
leave
dec
mov
xlat
push
or
push
enter
mov
cmc
aam
push
lock
mov
and
int3
ret
repnz
push
ret
retf
ror
jecxz
xor
mov
xor
push
pop
xchg
cmp
inc
loope
(bad)
pop
fwait
xchg
xlat
add
in
xchg
mov
mov
jb
push
in
mov
lea
test
cmps
xor
ins
cmp
mov
enter
add
push
(bad)
icebp
dec
jle
pop
das
and
cmps
lds
gs
jno
js
sbb
js
cmp
adc
pop
call
jbe
(bad)
cmp
ins
retf
jl
push
iret
jmp
dec
out
outs
cmc
js
(bad)
(bad)
inc
(bad)
ret
cld
repz
shl
cmpxchg
push
daa
mov
test
out
xchg
add
movs
lods
test
dec
fs
pusha
sub
je
and
push
ret
mov
shl
out
dec
lods
pushf
stos
jnp
pop
mov
push
inc
popa
fimul
cli
callw
push
adc
cmc
int3
test
jl
inc
mov
loope
aam
or
xor
push
cmps
bnd
sub
loop
fstp
test
lods
add
push
inc
in
inc
aam
pop
hlt
cld
jns
dec
and
cld
scas
and
mov
das
pop
or
push
mov
pop
icebp
int
iret
call
in
fdivr
dec
outs
fistp
jmp
outs
arpl
in
and
xchg
cmp
push
popa
cmc
lahf
(bad)
jo
lods
nop
movs
mov
les
rcl
push
arpl
mov
mov
rcr
sbb
out
jbe
adc
stos
adc
lock
sub
outs
xor
sbb
and
dec
sub
cld
call
cwde
shl
add
scas
stos
pop
out
mov
xchg
push
push
push
(bad)
xor
div
sbb
pop
sub
enter
xchg
dec
mov
push
mov
pop
ja
pop
and
fnstcw
pop
add
loop
mov
test
ins
mov
loop
fwait
stos
cli
mov
inc
inc
dec
mov
xchg
push
ins
adc
sti
into
jno
jg
retf
xor
mov
movs
js
dec
stos
sbb
out
lea
leave
sbb
xchg
dec
ret
jns
push
clc
mov
xchg
jle
cmp
or
push
ins
cmp
mov
mov
sti
sub
jbe
out
sub
ins
call
or
inc
xor
sbb
and
loopne
div
idiv
sub
cwde
scas
lods
loop
rcl
sbb
cld
adc
inc
inc
mov
pop
fsubp
imul
sar
add
inc
call
mov
mov
push
push
mov
cmp
ins
jnp
movs
dec
fist
or
aas
in
sbb
daa
jl
ficom
pop
dec
adc
mov
stc
mov
cmps
out
mov
cli
(bad)
sbb
mov
cmc
mov
cmp
gs
xlat
out
or
pop
jnp
cmp
push
add
push
pop
test
clc
fisttp
or
imul
xor
mov
stc
adc
dec
(bad)
int
xor
cmp
mov
jl
inc
iret
stos
ds
mov
push
pop
sbb
push
and
fcmovnu
sbb
div
out
loop
push
mov
push
fdiv
xchg
push
jnp
xlat
ret
aam
fwait
lahf
dec
pop
push
ja
inc
or
jmp
sub
mov
aas
cmp
ret
and
enter
out
cli
loop
mov
cmps
xlat
dec
fadd
in
mov
les
ins
mov
ror
adc
and
pop
push
imul
mov
inc
inc
sub
push
sub
mov
push
inc
mov
(bad)
int3
push
ins
iret
pop
fadd
clc
add
inc
imul
(bad)
or
dec
mov
dec
(bad)
(bad)
imul
xchg
jnp
into
std
or
sar
sub
sub
mov
int3
mov
xlat
int3
repz
(bad)
ins
push
rol
and
out
mov
cmps
push
and
hlt
add
or
dec
xchg
aam
stc
jge
loopne
push
(bad)
fld
push
push
loopne
dec
pop
iret
dec
pop
add
xchg
pusha
clc
and
xchg
pop
(bad)
adc
test
adc
and
dec
outs
pmuludq
push
adc
cmps
add
inc
pop
jb
sub
ficomp
push
jmp
adc
fincstp
pop
cmp
arpl
push
push
add
shr
xor
ret
mov
cli
xor
xchg
jmp
es
add
les
jo
adc
jns
and
cmc
test
push
xchg
jmp
fnstcw
xor
fcmovnu
iret
scas
jp
dec
pop
inc
push
outs
loopne
pop
jp
pop
sub
adc
pop
adc
je
jp
cwde
pop
scas
fidivr
xchg
ficom
(bad)
pushf
mov
and
aaa
inc
test
sub
push
sub
or
adc
mov
dec
pop
(bad)
xchg
sbb
gs
addps
mov
mov
js
jnp
sub
lods
dec
(bad)
sar
inc
dec
dec
stc
xchg
es
or
test
imul
push
xor
push
or
mov
cmp
xchg
add
lods
out
ds
repz
mov
inc
sti
aaa
pusha
mov
sbb
lods
shl
jns
add
add
mov
mov
test
cli
lds
lds
jne
shl
out
call
test
retf
and
stc
add
mov
fs
test
rcl
pop
pop
jle
sub
mov
mov
dec
test
loope
jl
daa
cmps
hlt
sbb
adc
fisubr
dec
ror
sbb
and
in
and
cmp
iret
out
cmp
adc
loopne
mov
mov
imul
hlt
rcr
in
and
shl
push
mov
and
into
std
cli
sbb
adc
imul
fidivr
dec
push
test
inc
mov
dec
test
fwait
xor
mov
stos
and
ror
aam
push
lahf
sahf
lock
or
sbb
jmp
push
mov
mov
sub
jl
pop
lock
cs
dec
pop
lds
rcr
mov
out
loopne
scas
imul
pop
sub
aas
jl
gs
fmul
ds
mov
mov
outs
(bad)
ror
movs
mov
or
dec
mov
stos
cwde
mov
dec
sti
jo
rcl
lds
and
jae
sub
mov
pop
cs
cld
pop
arpl
fistp
sbb
retf
jle
cld
pushf
and
retf
enter
sub
(bad)
inc
dec
mov
sti
repz
pop
mov
jmp
fstp
xor
and
cmp
cmp
inc
cmp
cmp
(bad)
jne
dec
(bad)
pop
and
arpl
mov
xlat
mov
popa
mov
xchg
add
mov
ror
push
pop
push
daa
fwait
jbe
(bad)
and
or
pop
leave
push
inc
loope
jg
or
out
pop
pop
or
pop
cmp
xor
pop
fnsave
inc
xchg
stos
xchg
mov
jnp
mov
rcr
cwde
mov
push
jae
or
aad
or
and
or
dec
push
test
ins
pop
push
jg
adc
inc
dec
pop
int
xchg
mov
cld
adc
add
(bad)
in
dec
outs
aam
dec
enter
scas
shr
jmp
mov
sub
fisubr
push
push
(bad)
adc
adc
jp
jae
lods
test
pop
adc
mov
nop
lock
pusha
std
sub
sbb
scas
mov
mov
fwait
xor
pop
(bad)
cdq
retf
sbb
cmc
or
das
imul
mov
sbb
mov
fsub
sbb
enter
out
mov
adc
xchg
bound
cmps
out
loope
or
shl
fwait
bound
std
jmp
and
dec
sub
xor
cmp
inc
pop
dec
stos
dec
or
bound
xchg
test
outs
add
mov
xlat
out
ja
or
sbb
cmp
or
push
rcl
or
lea
fadd
cmp
les
mov
sbb
iret
mov
mov
and
repnz
fisub
mov
sub
pop
ficomp
enter
out
xchg
mov
xchg
jnp
push
test
jmp
xor
push
mov
pop
clc
leave
or
push
sub
stos
inc
push
arpl
fwait
sar
xchg
push
in
push
or
or
outs
out
aam
mov
xchg
push
sbb
adc
je
sub
lods
ret
cs
jg
sub
sbb
mov
stos
loopne
xlat
sbb
popf
sbb
push
outs
adc
dec
or
cmp
cmps
js
mov
pop
pop
ins
pusha
imul
add
int
pushf
inc
sbb
ins
add
in
fcomp
out
in
xchg
pop
pushf
dec
pop
pop
sub
jae
ret
rcl
cdq
inc
cdq
adc
call
or
sbb
out
dec
(bad)
ins
sub
dec
mov
push
xor
mov
cli
loopne
ficomp
xchg
sahf
popa
std
loop
sbb
std
sub
dec
pop
cmp
std
pusha
push
mov
nop
dec
out
jb
inc
adc
dec
adc
mov
lods
xchg
push
mov
data16
dec
mov
arpl
loop
jg
cmp
push
ror
hlt
mov
sub
aaa
mov
sti
add
mov
arpl
icebp
es
add
mov
leave
imul
push
fistp
outs
inc
add
loope
push
ret
xor
adc
es
movs
push
mov
cld
cdq
sti
pop
cwde
cwde
popf
mov
adc
xor
inc
jno
pop
out
fucomp
mov
mov
dec
cmps
scas
and
aaa
aam
xchg
popf
mov
(bad)
sbb
xchg
mul
ficom
cdq
adc
add
enter
das
pop
sbb
cmp
cli
and
mov
rol
xor
sbb
sbb
inc
sti
add
es
call
push
(bad)
push
in
cmp
cmp
in
jg
das
ror
mov
in
cmps
pop
sub
jmp
sub
pop
call
xchg
push
jmp
aas
push
jmp
sub
sub
nop
or
aad
sti
ss
or
inc
lock
call
rol
in
clc
push
and
add
movs
sti
sbb
dec
in
jp
shl
mov
test
push
or
or
or
call
cmps
cmp
mov
cwde
ins
xchg
pushf
leave
bound
xor
pop
fst
xchg
adc
sbb
rcr
aas
jno
push
adc
jl
(bad)
mov
fist
imul
out
fcom
aam
adc
jle
adc
push
xor
dec
scas
xor
out
add
or
lock
mov
jmp
cdq
in
or
xor
or
lds
cld
fild
sub
pushf
frstor
mov
pusha
int3
ds
inc
jmp
sub
jle
mov
jbe
mov
hlt
ds
push
pop
out
sub
lods
dec
test
sahf
(bad)
icebp
daa
push
outs
lea
jmp
loope
pushf
xchg
ja
fnstcw
pop
inc
pop
test
adc
and
push
cdq
fbld
jno
push
push
lods
fldenv
xor
jae
fisub
lea
shl
outs
arpl
dec
test
xor
lahf
push
cmp
adc
dec
popf
cmp
stc
rol
mov
jecxz
sub
mov
fcom
sub
lds
xor
out
mov
xor
mov
ret
call
add
jae
(bad)
xor
nop
js
rol
jp
push
pop
xchg
aam
neg
inc
sub
push
jo
clc
xor
scas
in
sub
dec
mov
adc
mov
xchg
xadd
push
xchg
fwait
adc
icebp
add
pusha
call
mov
dec
fcmovnb
mov
jmp
pop
mov
add
push
cmp
pop
pop
pop
dec
mov
mov
cmps
das
les
pop
pop
pop
ds
mov
out
sbb
sti
out
pusha
sar
out
xor
es
xchg
retf
ds
xchg
and
pop
mov
daa
pop
js
ret
(bad)
rol
xchg
daa
leave
push
or
and
xor
ins
call
cmps
aaa
out
scas
mov
mov
mov
repnz
cs
scas
test
jl
sbb
or
les
push
jecxz
push
nop
rol
and
daa
jnp
push
jae
cmp
leave
pop
cmp
test
loope
loop
out
dec
sub
das
push
xor
out
rcl
sub
push
leave
shr
inc
mov
or
or
sbb
inc
xor
pusha
shl
mov
cmps
xchg
subps
std
mov
enter
(bad)
mov
in
retf
jb
ret
(bad)
aam
ds
xchg
and
sbb
int3
mov
push
mov
xor
rcl
add
and
sti
das
shl
inc
add
lock
jl
fld
test
and
pop
sbb
add
clc
(bad)
and
mov
test
das
nop
fmul
pop
int
dec
les
fimul
jp
sbb
inc
pop
retf
ins
aas
or
cmp
mov
lahf
ror
aad
inc
cmp
call
push
call
aad
repnz
and
inc
sahf
in
add
sub
push
sbb
mov
xor
(bad)
push
xor
push
mov
loop
lock
in
mov
lea
addr16
push
xchg
out
xor
sbb
push
mov
jl
popa
mov
mov
cmp
push
stos
pop
mov
pop
jle
pop
ins
mov
dec
inc
in
lock
pop
pop
push
push
dec
mov
pop
mov
sub
in
(bad)
data16
(bad)
retf
in
sbb
jge
retf
sahf
cmc
int
push
fbld
std
xchg
mov
repnz
push
adc
xchg
and
mov
sbb
aam
lock
rcl
js
jne
ins
pop
inc
imul
nop
pop
js
popf
xchg
pop
stc
or
mov
and
dec
out
aas
xchg
(bad)
jns
fcomp
push
aas
clc
retf
and
sub
sbb
cmps
outs
xchg
jnp
cdq
addr16
(bad)
out
int3
(bad)
(bad)
loop
add
cmp
(bad)
cmc
xor
push
test
lods
cld
jle
inc
lahf
popa
cwde
stos
out
mov
and
shl
push
adc
ja
push
xor
push
sub
mov
fwait
inc
sbb
ja
movs
cmp
sbb
sbb
add
(bad)
cmc
(bad)
mov
out
cmp
jmp
gs
out
inc
(bad)
loope
push
aad
test
sbb
jnp
test
cmp
ret
stos
or
and
jno
sub
cli
stc
pop
pop
fwait
sbb
in
retf
retf
mov
dec
enter
mov
mov
sub
dec
xchg
xlat
mov
pop
push
adc
scas
test
mov
xchg
dec
nop
leave
push
in
push
push
push
cmps
cmp
xor
dec
and
or
in
mov
std
jmp
mov
adc
mov
fbld
mov
pop
and
push
and
mov
(bad)
fist
in
xchg
xor
(bad)
and
xchg
mov
and
xchg
shr
push
es
cmps
sahf
frstor
dec
stos
mov
adc
aaa
inc
lds
jae
or
pop
jmp
jbe
xchg
icebp
xor
jb
xchg
xlat
xchg
push
mov
sar
xor
bound
jnp
call
push
shl
(bad)
out
push
lods
xchg
xchg
inc
push
jl
test
mov
retf
xor
js
jp
add
adc
popa
and
and
pop
xor
stc
daa
ret
das
cld
lods
cmc
cmp
sbb
pop
daa
pop
xchg
adc
test
mov
es
pop
ds
jo
loope
loope
pop
inc
cld
adc
push
inc
mov
fld
pop
add
and
cmp
xor
sub
mov
xchg
pusha
xor
pop
inc
sbb
int3
push
repnz
adc
int
cmp
lock
popa
das
dec
sbb
movs
xchg
xlat
jecxz
pushf
in
xor
mov
call
pop
sub
fiadd
sahf
cmp
cmp
iret
inc
sub
(bad)
gs
push
xor
sbb
int3
cmp
rcr
sub
loope
dec
add
sbb
sbb
je
push
adc
loopne
sahf
(bad)
xchg
add
ret
pop
fild
push
scas
mov
or
iret
inc
imul
cld
daa
lea
mov
test
xchg
or
pop
inc
lahf
add
sti
pop
mov
adc
arpl
fmul
mov
dec
leave
pop
mov
mov
cld
mov
shl
icebp
mov
movs
xchg
cwde
pop
mov
rcl
inc
pop
sub
cs
loop
sbb
fs
test
mov
adc
aad
add
icebp
pop
ins
shr
fwait
lods
xchg
test
mov
call
and
cwde
xchg
dec
mov
mov
mov
jl
in
xchg
mov
pushf
gs
fnstcw
pop
jo
mov
sbb
jbe
or
jecxz
sar
imul
push
pop
pop
repnz
xchg
or
pop
xchg
or
fisub
pop
cmc
scas
sbb
dec
fwait
mov
cmp
xor
pop
push
jns
sbb
loopne
mov
cmp
rcr
div
cli
and
and
xor
push
nop
or
ins
push
add
das
or
imul
inc
mov
aaa
mov
xchg
popf
int
xor
ja
pop
jae
push
push
enter
mov
imul
jne
and
and
push
mul
loop
into
cmp
ins
xchg
(bad)
movs
add
jecxz
mov
outs
adc
xor
out
mov
outs
dec
adc
(bad)
inc
hlt
loope
ret
push
retf
pop
ret
retf
add
inc
mov
or
add
xchg
mov
jp
in
mov
mov
add
sbb
mov
add
push
mov
xchg
inc
movs
cld
cld
pop
xchg
addr16
mov
and
(bad)
mov
mov
xlat
enter
jbe
shld
push
std
(bad)
adc
das
test
nop
(bad)
fdiv
mov
cmps
push
xor
jl
mov
pop
mov
test
adc
dec
(bad)
push
iret
pop
sub
xor
jp
jmp
inc
mov
push
ror
pushf
cli
mov
mov
pop
pop
mov
xchg
and
or
cmp
xor
jns
pop
repz
adc
rdtsc
mov
imul
jmp
aad
loope
dec
aas
or
jl
pop
bound
or
mov
mov
sbb
call
pop
push
jl
ret
sub
xchg
xor
outs
shl
es
cmp
mov
xor
push
mov
pop
cmp
xchg
popf
daa
jb
shl
mov
mov
add
inc
(bad)
sbb
mov
or
aad
mov
mov
and
push
daa
int
xchg
xchg
ret
ret
sbb
(bad)
pop
push
ret
inc
pop
xor
mov
stos
jne
scas
pop
stos
movs
xor
inc
mov
iret
or
sub
sbb
mov
dec
das
cld
push
aas
jae
jle
jb
dec
fadd
push
mov
not
(bad)
(bad)
mov
sbb
jmp
xor
or
pusha
or
dec
fcom
xor
xlat
js
pop
aad
push
xchg
outs
mov
std
sub
sbb
fiadd
push
imul
mov
jns
in
add
aaa
dec
into
in
inc
mov
inc
cld
fisubr
dec
pop
dec
jnp
jmp
xor
push
mov
jle
and
dec
and
pop
in
xor
jp
(bad)
push
jp
inc
stos
je
ins
inc
stc
pop
jp
jecxz
inc
jg
pop
adc
ds
push
outs
loope
mov
pop
cmp
dec
dec
xchg
cmc
inc
sub
jae
adc
sub
dec
push
push
xchg
stos
leave
outs
adc
aad
jge
add
jg
cmp
adc
sbb
out
in
aad
(bad)
les
es
icebp
jmp
cmp
hlt
fld
pop
cmp
cmp
jb
cmp
mov
xchg
adc
jge
lea
(bad)
and
ins
iret
neg
mov
lock
mov
cwde
or
into
pop
gs
repnz
fadd
xchg
test
in
or
xor
iret
ret
dec
pop
and
ss
cli
fidiv
push
(bad)
xlat
jno
fisub
ds
mov
push
push
repz
jb
data16
pop
mov
and
cmp
mov
sbb
jecxz
clc
and
sub
call
fidiv
jp
mov
push
xchg
in
and
scas
std
movs
stos
push
test
cmp
in
and
clc
cdq
sahf
cld
leave
cmp
jns
stos
mov
push
mov
or
mov
neg
and
jle
xchg
shl
in
or
lds
arpl
adc
mov
adc
jl
je
call
mov
and
mov
les
mov
iret
mov
jp
vdivps
dec
imul
call
neg
and
sub
dec
rcr
das
inc
loopne
pushf
leave
and
add
aas
cmp
sbb
push
cmps
inc
or
ret
adc
add
rcr
div
outs
in
adc
dec
stc
pusha
mov
inc
pop
faddp
stos
xchg
fcomp
(bad)
in
repz
jae
mov
out
idiv
adc
out
sahf
sub
leave
dec
out
add
inc
add
jbe
gs
xchg
rcl
jge
ja
mov
call
lods
sahf
mov
xchg
cmp
push
test
daa
(bad)
out
dec
cmp
inc
cmp
push
xor
xchg
(bad)
mov
and
add
test
cmp
ret
fimul
xchg
xor
adc
stos
xchg
mov
enter
or
mov
sub
sub
jae
jb
(bad)
call
fs
sbb
sbb
in
cli
inc
xlat
jo
out
jnp
mov
inc
in
stc
(bad)
push
push
test
ret
mov
and
cmps
ret
inc
lods
popf
pop
cmps
add
dec
fiadd
lods
pop
xor
jae
pop
pop
test
popa
sbb
sbb
sar
and
push
mov
out
cmp
mov
cmps
add
jno
fild
scas
in
out
cli
std
or
pop
jge
cli
stos
enter
sbb
jbe
mov
int
cmps
stc
and
dec
sub
jecxz
pop
scas
jecxz
push
inc
push
cmps
leave
inc
mov
fldcw
push
repz
(bad)
cmp
imul
aad
add
cmps
push
cmc
push
aad
mov
dec
mov
lods
addr16
xchg
jo
call
cmps
shl
push
xchg
xor
dec
mov
scas
push
mov
inc
ficom
dec
cwde
inc
(bad)
dec
mov
mov
mov
push
mov
mov
push
jecxz
mov
sub
clc
shl
fisub
neg
aaa
jge
lea
std
out
add
ins
(bad)
aam
ds
jno
xchg
adc
dec
mov
fsubr
jecxz
mov
inc
jmp
btr
add
jp
stos
psllw
je
add
adc
test
retf
outs
and
inc
outs
push
add
add
and
jae
fld
adc
sbb
ds
push
fsincos
mul
icebp
nop
or
cmp
and
out
mov
retf
sbb
cwde
idiv
pusha
cli
out
sbb
es
test
or
sub
inc
popf
mov
frstor
arpl
mul
or
stos
mov
jns
jmp
inc
sub
pop
xchg
(bad)
(bad)
clc
add
test
sub
out
adc
xor
ror
cmps
aaa
jle
and
cld
in
in
sub
xchg
dec
cmp
cmps
pop
pop
fnstcw
pushf
test
test
add
or
cdq
mov
ins
data16
sti
mov
add
(bad)
icebp
jne
int
sbb
das
test
enter
inc
pusha
jno
lods
push
aas
mov
popf
pop
mov
xchg
mov
pop
mov
rol
sub
or
int3
dec
dec
mov
daa
sti
cwde
sub
sbb
add
jno
mov
outs
xlat
cmp
pop
imul
(bad)
ds
push
adc
hlt
fist
cmc
pop
inc
sub
adc
push
cmp
lds
imul
sub
mov
clc
sub
sub
lds
inc
inc
adc
xchg
test
ja
xchg
shl
dec
sub
lahf
cmp
cwde
xchg
stc
or
enter
jae
jae
jmp
push
jnp
leave
data16
adc
and
inc
sub
push
xor
scas
jl
lods
ret
adc
test
clc
rcl
scas
ds
(bad)
pop
ss
shr
lock
(bad)
cmp
jl
test
icebp
jle
por
movs
jmp
inc
mov
xor
dec
fisttp
fisttp
and
adc
push
inc
outs
jnp
adc
aas
test
cmp
ins
xchg
mov
or
fnstcw
mov
or
nop
loop
and
and
fstp
xchg
xchg
test
loopne
fstp
leave
into
sbb
cmps
fild
ror
lds
rcl
inc
stos
pop
cmp
mov
cmc
shr
iret
cmps
retf
jno
pop
jbe
div
push
shr
les
mov
mov
jle
pop
js
lock
sar
repz
stos
test
cs
or
loope
xlat
lock
cli
inc
lods
fdivr
mov
adc
das
dec
scas
mov
aam
inc
pop
ss
sbb
mov
enter
leave
fcomp
lock
call
push
sti
inc
iret
cli
pushf
jb
pusha
jp
xchg
adc
xor
inc
in
xor
out
pop
dec
sub
out
and
xor
std
dec
es
adc
loope
idiv
test
inc
jle
imul
scas
loop
lods
jl
je
jl
ds
mov
imul
push
add
cmp
pop
mov
xchg
or
pop
mov
dec
or
repz
aaa
fmul
(bad)
jge
fwait
vpaddusw
imul
ins
out
leave
ds
rol
aam
loop
ins
pop
stos
mov
pop
cmp
std
(bad)
xor
jp
pushf
dec
je
sbb
scas
aaa
test
mov
sar
(bad)
or
inc
mov
cmp
mov
adc
pop
mov
jmp
inc
idiv
fistp
rcl
(bad)
test
mov
sbb
jecxz
jo
mov
mov
lock
inc
jg
fild
nop
inc
shl
and
push
mov
fld
sub
aaa
mov
xlat
mov
jo
pcmpeqw
or
imul
jg
sbb
push
test
popf
xor
and
ret
popa
int
nop
leave
fadd
adc
(bad)
mov
xchg
sub
shr
or
mov
popf
and
cs
loope
gs
jecxz
test
daa
scas
jge
stos
fs
hlt
xchg
(bad)
push
mov
or
bound
or
jle
jnp
retf
(bad)
add
push
hlt
sar
adc
and
(bad)
or
scas
pop
adc
cdq
jmp
(bad)
jmp
loope
loopne
gs
cmc
aaa
cs
pop
or
pop
sub
sub
xchg
or
jne
inc
retf
lock
cmp
and
jnp
in
sbb
inc
sti
(bad)
jge
je
ret
lea
mov
mov
xchg
inc
push
movs
rcr
jmp
arpl
es
mov
push
scas
out
rcr
cs
mov
retf
stos
hlt
ficom
pushf
mov
and
adc
inc
adc
ss
ja
or
or
pop
pushf
clc
or
pop
dec
into
hlt
xor
(bad)
sbb
mov
adc
out
retf
fist
or
inc
mov
push
fwait
mov
cld
push
test
push
in
mov
add
inc
call
(bad)
pop
lods
mov
dec
arpl
(bad)
int
(bad)
cld
inc
(bad)
in
adc
and
arpl
callw
sub
inc
and
test
call
jns
inc
ins
pop
outs
int
aaa
dec
fld
iret
jecxz
jne
pop
fstp
pushf
xor
sub
add
cmc
push
repnz
(bad)
adc
jb
out
daa
call
retf
pop
movs
push
shr
jno
and
mov
push
xchg
cs
das
jle
mov
or
stc
mov
and
fnsave
cdq
add
xchg
sti
popf
icebp
cmp
cmp
sbb
push
aaa
mov
pop
out
adc
jne
aad
ins
add
lahf
dec
mov
imul
mov
imul
sbb
lods
or
sbb
xor
push
sub
not
fild
es
jb
shl
outs
shl
aas
sub
frstor
sbb
push
cs
and
adc
dec
leave
(bad)
bound
fcom
mov
mov
and
out
add
nop
fdiv
fisttp
sub
and
push
add
adc
aas
das
ret
inc
in
std
and
arpl
sahf
retf
shl
inc
imul
test
pusha
fadd
out
dec
cs
mov
imul
je
movs
xchg
repnz
mov
jl
call
sbb
or
jo
cmps
inc
test
and
cmp
pop
movs
addr16
(bad)
mov
inc
das
jb
outs
dec
push
mov
dec
fsubr
inc
lock
hlt
fwait
cli
lock
js
jp
int3
es
ins
xor
adc
lea
lods
mov
pop
xchg
adc
add
pop
xchg
stos
add
adc
mov
mov
cmps
scas
add
jb
mov
stos
xchg
add
mov
mov
icebp
sbb
(bad)
pusha
pop
add
inc
push
mov
jmp
outs
jg
ffree
mov
push
jmp
inc
call
mov
retf
cmc
jg
mov
push
add
mov
pushf
or
push
pop
cmp
jo
xchg
lea
add
and
int3
mov
pop
aad
push
and
jnp
inc
std
das
iret
repz
je
loope
int3
add
add
jp
and
ror
xchg
pop
xchg
xchg
stc
jnp
retf
jns
xor
je
aas
lods
rol
in
es
(bad)
hlt
xchg
loopne
push
(bad)
stos
fcmovbe
aas
aaa
inc
into
mov
mov
sbb
gs
add
mov
test
push
popa
cdq
adc
pop
and
not
xor
out
int
lea
push
hlt
cwde
jle
popf
rcr
dec
or
movs
stos
(bad)
jge
movs
mov
sbb
dec
jmp
dec
test
cs
push
shr
add
sbb
scas
fwait
std
fdivr
out
inc
xchg
cdq
out
pusha
push
xchg
sub
xlat
std
sti
inc
jp
adc
sub
jno
ss
pop
sbb
stc
lods
aam
out
add
jl
rcl
push
sub
and
jmp
lahf
lods
sbb
movs
push
inc
jmp
loop
sbb
stc
adc
shl
mov
repz
mov
(bad)
push
fdiv
inc
fs
retf
mov
or
lock
call
pop
sbb
inc
mov
xor
out
mov
push
clc
mov
dec
les
jb
aaa
or
cmp
inc
add
sti
out
push
mov
mov
mov
test
jno
sub
push
int3
mov
js
mov
fcom
sub
lods
dec
and
mov
or
sub
shl
xchg
leave
lahf
sti
jbe
push
sbb
xor
and
fsubr
xchg
mov
pop
movs
pop
dec
(bad)
(bad)
pusha
add
inc
cmps
je
push
mov
jmp
xor
mov
sbb
outs
add
rcr
cli
outs
dec
fwait
jbe
movs
pop
mov
mov
test
(bad)
adc
ja
jae
xchg
ins
inc
add
shr
mov
xchg
inc
push
dec
rcl
mul
cwde
lahf
inc
inc
loopne
mov
add
in
jp
mov
call
les
pop
jp
push
inc
push
pop
ins
mov
dec
in
js
or
sahf
push
mov
add
and
stos
cmp
ror
arpl
mov
jmp
cmp
cmp
xor
out
or
fs
and
rol
repz
and
ja
mov
sub
rcl
xchg
or
push
dec
iret
(bad)
sti
bnd
pop
sti
cwde
inc
and
jno
movs
aad
sub
jbe
ret
jp
pop
fisub
rcl
push
pusha
cmp
loop
sub
xor
test
adc
scas
fs
push
ds
cmp
and
sbb
push
ds
xchg
fisub
sub
inc
cmp
adc
push
add
in
imul
jnp
jge
add
sub
mov
pop
sbb
xlat
mov
div
sbb
in
das
(bad)
int
jne
add
push
push
add
and
jnp
rol
jle
mov
adc
shl
push
popa
add
leave
out
ins
stos
ss
xchg
xchg
sub
js
add
pop
sub
pop
push
jae
add
sbb
repz
outs
lock
test
xor
mov
pop
wrmsr
pop
(bad)
(bad)
out
cwde
fmul
int3
mov
cwde
sub
inc
push
inc
shl
xor
mov
sub
or
in
mov
xchg
enter
mov
jge
jl
mov
adc
or
jno
or
cmp
mov
pushf
cmp
inc
pop
sub
icebp
cdq
cmp
in
stc
jle
cwde
rcr
in
(bad)
jp
jge
and
add
stc
jmp
(bad)
push
cmp
mov
cmp
pop
cmp
jmp
lea
adc
push
mov
out
aas
je
adc
cmps
movs
popa
out
add
mov
xchg
mov
mov
dec
sub
int3
cmp
out
push
pop
movs
or
out
cmp
lods
mov
dec
xchg
nop
mov
inc
or
xor
repz
jb
outs
mov
pop
jb
pop
sti
out
inc
mov
add
mov
shl
mov
popf
cld
imul
push
xor
lea
daa
or
cs
cmp
mov
cmp
(bad)
int3
scas
and
and
xor
ja
push
sar
imul
pop
outs
add
mov
test
mov
popf
push
cmp
inc
sbb
cli
fdiv
fcmovne
nop
aam
and
xlat
mov
mov
pop
pop
mov
adc
dec
sub
xor
sar
cmps
dec
cdq
or
adc
ret
cmps
mov
mov
mov
and
je
fdivr
not
cdq
mov
aaa
xor
leave
es
in
popa
ret
dec
mov
stc
icebp
mov
clc
jge
mov
ror
fcom
xchg
jp
sub
fs
xor
sub
int
mov
lods
xchg
dec
push
or
div
scas
mov
lock
cmps
pop
and
jb
stos
mov
lods
cmp
xor
or
cli
sub
xor
retf
push
cmp
push
lds
loopne
or
(bad)
pop
xchg
jne
stos
mov
sbb
push
fld
arpl
sti
fist
div
push
push
xor
xor
out
(bad)
int
jge
mov
add
aaa
xchg
repz
fmul
dec
mov
adc
jnp
add
push
cld
push
je
pop
dec
rol
or
dec
aas
ja
pop
cmp
rol
add
mov
fsub
pushf
jb
xchg
mov
inc
fninit
mov
mov
sti
mov
inc
cdq
or
push
cmp
inc
movs
jno
mov
movs
pop
div
pop
mov
or
in
adc
std
mov
aas
cwde
repz
je
out
ficomp
out
mov
call
xor
xor
cmp
xchg
xor
mov
faddp
pop
inc
or
arpl
lahf
mov
xchg
push
mov
sub
pop
pop
dec
adc
dec
sahf
push
mov
ret
jmp
stos
and
fdiv
sbb
in
inc
pop
push
add
sahf
mov
pop
ffreep
add
(bad)
dec
idiv
inc
je
scas
pop
enter
jbe
sbb
mov
scas
push
imul
sub
or
mov
dec
jl
add
dec
mov
out
or
mov
dec
sbb
pop
sub
mov
shl
sub
adc
fistp
das
popf
rol
jb
pop
nop
ins
arpl
fidivr
push
ins
sub
out
(bad)
int3
lds
fistp
mov
dec
sbb
sti
xor
dec
xor
shl
movs
mov
push
inc
pop
mov
adc
pop
push
sub
sti
inc
xor
cmp
sbb
sub
popa
fimul
lds
cdq
cmp
pop
hlt
jg
(bad)
xchg
and
cdq
jno
loopne
not
jb
data16
(bad)
adc
gs
out
fld
pminsw
sti
ret
push
cmp
loop
popa
out
xchg
fucomip
cmp
(bad)
xor
imul
or
dec
inc
out
xchg
mov
retf
inc
outs
adc
push
retf
jnp
jecxz
icebp
sub
in
lock
stos
movnti
jne
popf
push
pop
call
inc
pop
push
cs
jbe
push
mov
xor
push
or
loopne
sub
imul
mov
inc
or
iret
add
xchg
inc
stos
nop
movs
shr
pop
cmovg
ss
inc
mov
add
clc
iret
jge
in
mov
xchg
cmp
es
cmc
test
cmp
cmp
xor
cmp
js
retf
sub
stos
hlt
and
push
push
jne
inc
jl
mov
sub
lds
cmp
inc
shl
inc
(bad)
fisub
scas
test
cld
in
dec
and
pushf
setns
test
std
and
leave
aam
retf
outs
ss
mov
cwde
js
mov
repnz
fbstp
lea
repnz
pop
xor
adc
lods
mov
inc
scas
ja
jmp
add
xchg
fcom
(bad)
and
test
aas
in
jmp
gs
ds
std
jns
jge
xor
inc
pop
adc
dec
lods
mov
jmp
nop
clc
jns
sbb
arpl
sbb
leave
ss
test
(bad)
cvtps2pd
lods
out
fistp
and
jae
jecxz
mov
(bad)
push
dec
in
test
lods
push
ret
and
dec
outs
mov
dec
cmp
inc
aam
mov
adc
xchg
cmps
int
vphaddudq
adc
cmp
cmc
fcomip
hlt
mov
and
pushf
xor
out
loopne
dec
xchg
aas
jl
jbe
inc
cld
adc
jb
xor
fiadd
mov
and
jle
mov
cli
fstp
adc
mov
jl
push
mov
adc
lods
or
dec
mov
jecxz
xor
dec
lock
popw
xchg
imul
jbe
fwait
xor
xor
ins
dec
js
and
add
mov
test
push
in
mov
push
push
in
adc
mov
xor
sub
sbb
sbb
fs
mov
mov
sahf
push
or
(bad)
loopne
jbe
mov
mov
cmps
call
neg
pop
cmp
xor
pop
and
inc
sub
pop
mov
add
mov
stos
fist
xchg
sahf
movs
call
out
lahf
mov
sub
je
imul
lods
push
sbb
push
or
pusha
push
sar
cmp
push
imul
aaa
push
cmp
jp
clc
push
sub
and
pop
xor
aaa
dec
jle
popf
xchg
jns
pop
or
mov
dec
dec
cmps
js
xchg
sub
in
cmps
out
outs
leave
mov
push
xor
mov
cli
mov
mov
ret
push
(bad)
les
mov
sub
fwait
std
ja
stos
sub
push
push
dec
icebp
push
mov
mov
push
or
inc
sbb
or
jmp
int3
inc
mov
lock
rcr
popa
repnz
mov
sbb
or
ret
and
mov
jge
ret
inc
(bad)
ds
and
and
push
loop
cmp
fwait
and
std
loope
dec
cmp
or
pop
cmp
sbb
cwde
and
rcl
lock
repz
pushf
cmp
mov
mov
frstor
out
and
stos
popa
sbb
jns
cwde
inc
or
data16
cmp
(bad)
(bad)
xor
sbb
mov
movs
add
sub
cmps
fdivp
mov
nop
and
mov
xchg
les
xor
and
retf
pop
or
sar
inc
stos
jp
aad
or
test
cmps
xchg
aam
sub
ret
and
out
adc
sar
stos
lods
sbb
cmps
cmp
push
test
in
inc
das
mov
idiv
lock
ins
in
or
fwait
sar
mov
fcmovbe
cmp
cmc
sbb
inc
cwde
jecxz
cdq
xchg
rcr
xchg
out
add
inc
xchg
je
sbb
ins
adc
push
je
lea
imul
push
or
mov
(bad)
sub
out
or
add
push
push
mov
add
in
sub
push
loope
out
or
(bad)
jmp
adc
cld
std
sub
mov
xchg
pop
push
xor
fstp
sbb
mov
movs
je
push
cmp
aad
out
mov
bound
in
xor
dec
and
jg
jbe
shr
fs
mov
call
cmp
es
or
fwait
int3
push
or
repnz
dec
push
test
push
xchg
lds
nop
(bad)
rcr
in
and
pop
push
stos
cwde
(bad)
in
pop
jb
xchg
stos
mov
scas
ja
mov
fs
cmc
in
icebp
or
leave
ins
sbb
das
sbb
pushf
and
inc
dec
aad
test
inc
or
ds
ja
push
(bad)
loope
cmp
pusha
xchg
cmp
test
jg
mov
pop
add
adc
push
test
or
cmp
push
xchg
pop
cli
pusha
stos
fcmovne
xchg
xchg
xchg
jp
shl
mov
add
dec
shr
call
(bad)
and
loope
jae
out
dec
inc
rol
enter
fild
cdq
leave
pop
xchg
repz
cmps
call
fwait
cli
pop
cmc
outs
(bad)
cmp
dec
stos
lods
loope
(bad)
mov
jp
sbb
out
mov
lods
pop
sub
pop
cmp
jbe
ds
mov
push
call
aam
(bad)
sbb
test
repz
xor
sbb
fiadd
mov
retf
lods
js
test
stos
movs
lods
ss
mov
fcmovnb
mov
aaa
sbb
aaa
jno
push
mov
ja
push
aam
cmp
test
sbb
inc
jmp
cs
cmp
stc
les
nop
mov
xchg
push
in
mov
push
mov
mov
cmps
out
xchg
or
dec
mov
sub
dec
ret
test
out
shr
push
test
jns
sub
dec
dec
adc
push
jmp
push
push
js
cmp
fwait
sub
push
(bad)
mov
cld
mov
jnp
cmps
cmp
sbb
jns
stc
mov
jns
jns
mov
scas
cmps
mov
push
test
dec
xchg
jae
cld
jge
fld
and
sti
(bad)
mov
mov
push
pusha
scas
inc
jae
jo
sbb
inc
inc
mov
dec
dec
pusha
(bad)
loopne
mov
enter
cdq
cmp
push
pop
hlt
lea
test
jmp
jge
ins
int
mov
sbb
dec
mov
bound
jnp
pop
repz
scas
arpl
loope
sahf
jno
ret
jbe
pop
dec
pop
dec
adc
sub
push
fidiv
pop
adc
data16
gs
inc
repz
sti
dec
into
std
(bad)
fimul
cmp
mov
(bad)
fdivrp
or
jle
leave
mov
xchg
lods
int
ds
push
dec
int3
pushf
mov
das
stos
loope
jbe
das
fistp
test
cmc
imul
jns
and
xchg
and
inc
inc
(bad)
call
xchg
push
lods
and
or
scas
and
adc
xlat
mov
or
jp
ss
test
cld
dec
mov
xor
mov
adc
pop
es
pop
ja
xchg
mov
lock
lods
arpl
and
je
xchg
sub
sub
fldlg2
xchg
xchg
sbb
es
mov
jg
test
and
in
pop
pop
inc
std
cmp
mov
mov
fmul
icebp
popa
xchg
hlt
in
sub
adc
and
inc
mov
stc
xor
pop
call
or
mov
idiv
repz
clc
int
mov
add
cmc
mov
pop
pop
jmp
jae
xor
push
ds
fs
xchg
xchg
ret
cmc
mov
out
mov
or
hlt
or
xor
stos
cmps
mov
xchg
ss
jle
pop
pop
loop
add
add
sti
sub
leave
out
mov
push
mov
rcl
iret
lods
add
xchg
les
(bad)
in
inc
dec
dec
cld
retf
or
popf
sub
movs
movs
(bad)
adc
xor
cli
push
sub
jle
sbb
and
or
push
repz
pop
call
xchg
icebp
mov
ror
repnz
dec
push
into
imul
aad
mov
jl
inc
jns
addr16
or
fs
jbe
sbb
call
test
dec
cmp
jle
rcr
sbb
test
mov
sub
ss
pushf
mov
test
ss
sbb
aam
jbe
fisttp
sbb
pop
cmp
xchg
(bad)
aad
mov
mov
pop
xchg
push
das
and
xor
inc
xlat
aas
hlt
adc
cli
sub
sub
dec
adc
mov
movs
xchg
enter
pop
loopne
leave
sbb
push
les
js
fnsave
int3
mov
dec
daa
mov
outs
and
arpl
mov
into
scas
cwde
dec
and
cmovne
loop
mov
jnp
jnp
xchg
iret
ins
aas
and
ja
sar
jl
inc
mov
rol
lock
in
mov
cs
xchg
mov
push
cmp
imul
js
push
rol
inc
mov
pop
bound
add
xchg
xchg
dec
jle
ficomp
mov
(bad)
leave
xlat
(bad)
jmp
gs
js
(bad)
mov
push
pop
outs
inc
lea
outs
jo
jmp
aam
lds
adc
or
lods
mov
dec
mov
and
fwait
(bad)
mov
jl
je
outs
adc
pushf
ins
xchg
mov
rcr
test
pop
lahf
daa
in
das
(bad)
xlat
jno
cmp
(bad)
lds
arpl
pminub
dec
popa
jle
ucomiss
iret
cmc
and
xor
mov
in
test
jmp
ins
pop
push
mov
pop
in
out
fst
das
in
pop
in
imul
sti
push
mov
pushf
imul
clc
cmps
mov
aaa
jecxz
cmp
stc
push
leave
xor
mov
into
jo
add
jno
je
ss
imul
stc
or
xchg
xor
inc
pop
or
rol
dec
sub
int
dec
mov
xor
or
lahf
int
jno
ins
ins
pop
imul
and
adc
push
mov
es
add
retf
cmp
enter
retf
pop
xor
xor
xor
mov
js
xchg
stos
inc
sbb
cmp
aas
jnp
xchg
(bad)
jp
lds
mov
pop
ins
push
and
sbb
adc
push
push
mov
scas
pop
jmp
movs
jo
hlt
inc
and
neg
std
jnp
xchg
jmp
lea
dec
xor
and
loope
loope
loope
jne
rcl
mov
adc
pop
dec
mov
jp
lea
ins
addr16
sti
and
push
in
in
adc
stc
rcl
push
imul
sbb
add
loop
inc
push
inc
bnd
and
ret
pcmpgtd
xor
dec
lock
outs
(bad)
fild
push
fidiv
pop
xor
(bad)
cld
and
aaa
jmp
js
push
fs
call
jns
sar
shr
std
add
pushf
add
arpl
lock
mov
clc
xor
push
pop
ins
data16
adc
lea
adc
mov
rcl
shl
inc
loopne
jb
sar
inc
push
xor
retf
dec
jecxz
xchg
popa
scas
sbb
mov
xchg
aam
loope
inc
dec
xor
das
mov
ins
aaa
pop
popa
fst
and
jo
xor
out
lea
pop
enter
inc
mov
or
(bad)
jle
pusha
in
loope
outs
mov
inc
loopne
daa
lods
in
lods
mov
icebp
lods
addr16
rcl
sbb
xchg
inc
add
lods
jl
cmps
xor
adc
or
popa
call
ins
push
ja
or
ficomp
xor
pop
into
ja
and
loop
jl
cwde
mov
sub
dec
(bad)
xor
fisubr
mov
test
pop
xor
mov
jb
mov
ret
inc
test
dec
cmp
push
xor
jmp
or
popf
outs
sbb
cdq
ret
dec
cld
or
add
push
outs
jns
hlt
out
dec
pop
cs
aaa
shl
outs
add
sbb
mov
xchg
loop
cli
mov
ret
movs
push
jae
test
(bad)
add
sbb
pop
xor
test
jb
jecxz
adc
dec
sub
dec
(bad)
outs
jl
adc
mov
pop
int3
cmp
cld
in
cwde
add
jmp
dec
ret
adc
add
pop
ds
mov
pop
int3
xor
xchg
movs
sub
xor
ficomp
jp
jmp
in
mov
pop
loop
or
inc
movs
sbb
adc
pop
pusha
fidivr
cmp
rol
das
jp
ins
mov
jl
ror
ret
jno
push
cmp
test
cli
mov
jg
mov
scas
xchg
jbe
data16
xor
and
lods
ficomp
dec
out
cmp
movs
clc
jns
xor
movsx
into
iret
inc
aaa
shl
and
and
jbe
mov
ror
or
ror
mov
add
sbb
push
cmp
outs
sti
outs
movsx
mov
xchg
pop
mov
cmp
dec
or
(bad)
ja
pop
jmp
bound
int3
mov
iret
and
into
movs
nop
in
inc
xchg
test
jle
out
cmp
or
and
pushf
adc
mov
jmp
not
and
pop
pop
les
cmp
cmps
fld
cmp
adc
sbb
out
pop
js
leave
xor
mov
stos
dec
jle
loope
push
enter
dec
xchg
mov
aad
inc
mov
cmc
adc
repz
sbb
js
push
xchg
aam
int3
std
ins
and
mov
les
aad
iret
es
mov
xor
xchg
jno
cmp
mov
and
jne
in
movs
push
scas
sbb
jge
push
shr
mov
dec
adc
icebp
mul
and
jecxz
fistp
xchg
movs
stc
data16
jmp
enter
xor
cld
add
retf
xor
js
out
and
ror
xor
adc
xchg
dec
xchg
pusha
cmp
pop
or
pop
fistp
pop
jbe
jecxz
or
out
push
jne
es
cmp
inc
test
neg
and
hlt
outs
push
xchg
and
sub
adc
iret
xchg
jae
push
gs
sbb
in
jo
push
pusha
xchg
or
and
add
icebp
sub
(bad)
mov
and
imul
scas
mov
mov
sbb
mov
aam
xchg
sbb
cmps
pop
xchg
(bad)
jge
(bad)
cmp
repz
out
mov
call
sub
loope
in
xchg
xchg
fild
arpl
pop
mov
movs
jns
mov
jge
shl
es
sbb
popa
loopne
mov
mov
fmul
stos
inc
fwait
and
xchg
adc
mov
push
mov
push
mov
ins
es
aas
mulps
fsubrp
pop
sbb
sbb
les
sar
neg
out
in
sub
mov
imul
push
xor
ins
es
lods
xor
sbb
idiv
push
frstor
lock
nop
loopne
scas
jmp
out
pop
and
call
in
mov
sub
nop
mov
scas
test
dec
stos
pop
aam
fisubr
int
mov
gs
stos
dec
adc
fs
cmp
cmps
dec
push
pop
sahf
imul
bound
jnp
jnp
mov
pushf
repnz
cmp
in
cdq
add
push
enter
shl
psubq
mov
icebp
sub
jbe
and
sbb
inc
sub
hlt
mov
rcl
adc
mov
cs
xor
mov
out
test
loope
jno
adc
imul
sti
inc
jo
sub
sub
in
retf
inc
daa
mov
(bad)
mov
retf
push
dec
mov
int3
out
icebp
aad
xchg
ror
push
pop
sbb
stos
jg
xchg
add
ret
or
cld
dec
xchg
fwait
jl
iret
cdq
xchg
mov
mov
ja
sbb
or
and
loop
mov
mov
outs
pop
pop
cdq
lods
mov
jg
mov
inc
add
add
popf
rol
jmp
pop
xchg
push
pop
ja
inc
test
in
pop
cmp
xor
mov
mov
stos
fst
lock
aaa
rcl
dec
shl
jp
repz
out
pop
cmp
lock
icebp
stos
cvttps2pi
pop
stos
jb
ins
or
sbb
xchg
mov
fsub
imul
xchg
jl
mov
jbe
cdq
aas
inc
jmp
sahf
into
xchg
add
dec
pop
xor
add
inc
aam
add
pop
rcl
or
and
scas
xchg
pop
rcl
cmps
and
push
nop
xchg
dec
mov
fmul
jl
cmp
popa
pop
or
aad
mov
sbb
arpl
hlt
sbb
or
pop
sbb
cs
dec
jecxz
lock
jp
mov
movs
cmp
or
mov
hlt
cmp
push
cmps
mov
xlat
xor
fcom
aam
or
push
xchg
hlt
idiv
adc
lock
dec
ins
pop
xor
adc
inc
xchg
imul
(bad)
sbb
add
sbb
and
dec
sahf
pop
call
inc
pop
push
hlt
lods
push
lahf
pop
jmp
add
les
in
pop
call
test
cdq
jg
lods
mov
rol
std
mov
imul
jle
into
gs
shr
push
neg
scas
mov
mov
(bad)
rcr
mov
inc
push
sbb
hlt
pop
push
and
in
push
pop
cdq
xchg
push
ret
pop
xchg
cwde
fs
cmps
jecxz
lods
mov
sbb
hlt
je
repz
mov
rcr
fs
ret
and
inc
sub
mov
fistp
loop
sti
pop
loop
ss
jmp
xchg
pop
sub
loopne
popf
mov
lea
shl
cli
sub
scas
iret
mov
repz
out
(bad)
aad
das
lods
lea
or
push
cs
or
iret
xor
aas
std
mov
clc
push
dec
mov
in
jne
frstor
cmp
test
cwde
sub
sbb
mov
push
cmp
mov
sub
popf
mov
dec
popf
cmp
rcl
gs
mov
add
cli
xor
mov
shr
lods
aam
fsub
(bad)
dec
shl
mov
es
jl
xor
cmps
xor
bound
ret
or
lods
pushf
push
test
push
jns
fadd
fsubr
sbb
ret
mov
xchg
xor
lahf
(bad)
je
inc
sbb
jne
dec
std
nop
test
push
sbb
fs
pop
cmp
aad
loop
mov
sbb
in
mov
add
or
mov
retf
and
neg
dec
(bad)
jbe
lahf
dec
mov
and
lods
(bad)
cmp
clc
mov
inc
ret
mov
fsub
mov
mov
imul
xor
(bad)
jmp
cmc
mov
inc
aas
inc
es
es
and
daa
jl
aam
push
mov
mov
outs
xor
add
pop
add
rcr
or
xchg
pop
std
push
test
repz
push
mov
xchg
shr
and
xor
scas
cmp
hlt
test
mov
inc
mov
jns
hlt
(bad)
cs
ror
mov
lods
test
(bad)
cmp
inc
nop
bswap
adc
mov
xchg
bound
iret
pxor
xchg
into
and
adc
in
jo
and
aaa
mov
jg
stos
cmp
adc
mov
jno
shr
out
add
les
jmp
mov
jns
inc
addr16
xchg
jmp
cmp
push
js
int
xor
mov
jns
push
fst
jmp
inc
rcl
mov
jns
mov
or
nop
adc
scas
movs
inc
dec
and
cmps
data16
call
sbb
fimul
scas
fild
pop
adc
aas
jb
shl
xor
jb
xor
cmp
jle
mov
push
fcom
scas
adc
cwde
dec
sbb
inc
add
or
mov
fisttp
ins
je
xchg
add
push
pop
les
pop
das
or
ret
icebp
movsx
sbb
dec
in
shl
xchg
mov
push
addr16
movs
sub
push
and
or
outs
xchg
lock
movs
xor
dec
in
jno
test
xor
popa
jno
pop
cwde
dec
(bad)
test
dec
loop
icebp
cld
ins
test
xchg
(bad)
push
sub
mov
sub
cmps
xor
push
mov
fisttp
movs
pop
mov
jp
xchg
std
pop
xchg
in
sbb
pop
mov
mov
les
shr
push
pop
leave
fbld
inc
pop
arpl
mov
ds
xchg
ja
mov
inc
mov
(bad)
popa
pop
sbb
ss
cmp
leave
mov
cmps
mov
cmc
mul
out
push
leave
das
push
fs
mov
int3
dec
inc
push
fcom
push
aam
xchg
cdq
push
cmps
add
fst
in
dec
test
ror
or
push
dec
in
mov
and
js
add
lds
push
int3
inc
popa
out
inc
fwait
icebp
cmps
cmps
sub
dec
adc
sub
push
nop
aaa
(bad)
pop
or
mov
dec
cmps
mov
call
dec
pop
retf
js
mov
lock
or
fidiv
xchg
cmp
push
leave
adc
cwde
cmps
fsubr
mov
inc
or
xor
dec
(bad)
sub
jb
push
cmp
call
lea
popf
jnp
jecxz
mov
dec
sti
lahf
out
(bad)
adc
(bad)
shl
test
daa
push
pop
sahf
mov
imul
jmp
xor
xchg
std
and
pop
add
inc
aaa
xor
loop
jb
dec
aad
aam
or
stos
mov
sar
and
sbb
xor
dec
sbb
outs
jne
das
test
pop
lea
aad
aaa
inc
dec
mov
add
aad
xchg
cmp
mov
and
sti
pop
adc
adc
shr
mov
mov
call
xor
mov
and
(bad)
pop
imul
lods
and
movs
mov
mov
ins
imul
cld
ret
shl
add
xchg
push
imul
sub
(bad)
cmc
xor
fisub
xchg
call
fucomp
xchg
mov
in
in
fmul
dec
adc
mov
and
arpl
push
mov
(bad)
(bad)
inc
iret
in
pusha
pop
inc
dec
or
jge
cmp
dec
popa
out
dec
ror
xchg
inc
clc
mov
or
adc
out
arpl
fyl2x
dec
jae
and
movs
gs
arpl
test
leave
(bad)
jno
sbb
jno
or
pop
sub
inc
ret
jl
jb
and
rcl
sbb
pusha
jp
rcr
rcl
mov
retf
std
ja
es
call
clc
and
jl
loopne
outs
xor
sti
cmp
xor
inc
leave
sub
mov
(bad)
(bad)
xor
shl
das
dec
jp
call
int3
sahf
ret
push
pusha
fldenv
jge
stos
xor
mov
adc
popf
xchg
test
xor
jmp
hlt
(bad)
call
xadd
daa
repnz
pop
in
jl
fld
mov
cmp
loopne
faddp
enter
jne
pop
nop
fs
outs
push
lods
mov
aam
xor
mov
push
mov
push
out
fst
gs
mov
icebp
xor
pop
jns
aaa
das
jle
mov
lahf
ds
cmp
sbb
das
sub
call
jge
jno
out
out
add
inc
nop
cdq
sbb
test
pushf
mov
xor
or
test
popf
jne
int3
adc
mov
cmp
stc
je
xchg
mov
stos
sbb
stos
push
cld
fld
adc
pushf
lock
es
call
inc
sub
mov
or
xchg
pusha
sbb
cs
mov
xchg
jno
dec
aas
mov
jg
mov
lods
jb
scas
cwde
shl
xor
adc
fmul
inc
jae
inc
xchg
sub
jae
pop
outs
aaa
xchg
cdq
mov
mov
retf
xor
dec
pop
jmp
clc
cld
xchg
inc
bound
nop
out
cs
in
pop
pop
mov
xchg
inc
mov
ret
xchg
push
cmp
pop
je
add
std
ret
and
test
lea
jmp
js
dec
pop
xlat
inc
(bad)
das
das
push
arpl
jp
cmp
pusha
fs
push
mov
fsub
mov
in
aas
hlt
add
rcr
inc
xor
out
cmp
jbe
cmp
int
mov
stos
es
div
outs
shl
clc
adc
dec
fldenv
xor
in
sub
ins
xchg
aaa
push
or
lea
and
dec
setne
in
and
sahf
iret
lahf
out
cld
dec
push
not
pop
ret
es
or
pop
push
mov
shl
cli
lds
in
fld
sbb
mov
xchg
sahf
mov
cwde
cdq
add
stc
cld
cmp
jg
fstp
into
mov
xchg
and
inc
icebp
out
dec
(bad)
cmp
lock
and
inc
test
mov
fstp
push
pop
scas
xchg
pop
sahf
push
aam
mov
cmp
xchg
inc
jl
imul
push
nop
xor
mov
pop
sbb
xchg
add
stos
cdq
inc
(bad)
push
pop
mov
pop
xchg
and
mov
push
sbb
cld
daa
sub
push
and
stos
adc
xor
(bad)
adc
xchg
jmp
and
in
daa
adc
cmp
push
xor
xchg
ja
pusha
clc
and
push
or
mov
ret
popf
adc
retf
add
in
and
jns
mov
outs
adc
cld
mov
and
xor
jmp
xor
jbe
or
or
lods
mov
aad
arpl
or
sbb
add
mov
mov
lods
or
retf
xchg
xchg
sti
pop
jge
xchg
mov
imul
test
repnz
sub
mov
cmp
mov
(bad)
push
jae
mov
outs
repz
arpl
inc
add
outs
push
adc
push
out
sbb
ficomp
iret
in
ins
cli
add
add
pop
adc
(bad)
push
mov
stos
cmps
xchg
lods
mov
fwait
push
and
dec
jno
inc
in
inc
sub
stos
retf
call
mov
hlt
mov
push
lods
jmp
ds
push
push
test
mov
not
cmp
cmp
mov
sub
sbb
shl
add
push
(bad)
push
cmp
or
arpl
cmp
push
sar
(bad)
cdq
or
or
in
call
cmp
idiv
xor
mov
adc
jmp
enter
cs
dec
adc
das
js
sbb
cwde
rcl
mov
mov
jl
pop
test
mov
(bad)
jl
sbb
xchg
xchg
xchg
sub
movs
jno
push
rol
jne
fwait
scas
jp
mov
sub
lods
sub
outs
push
cmps
xchg
push
add
ror
jnp
add
xor
sbb
push
stc
xor
test
mov
dec
mov
sbb
mov
or
xlat
loopne
adc
dec
push
sbb
mov
fld
into
mov
jnp
pop
imul
xchg
imul
out
ds
mov
and
cmps
sub
cmp
call
inc
add
popf
jnp
mov
scas
or
test
sub
(bad)
jb
stos
jp
jo
fcmovnbe
gs
push
mov
mov
ror
sub
test
out
in
sub
and
fidiv
mov
sahf
mov
and
arpl
ror
ins
jne
aaa
iret
(bad)
retf
mov
mov
pop
inc
pop
cmp
cmp
adc
sbb
push
mov
jp
push
push
movs
fs
mov
jecxz
or
and
add
ins
and
jle
cdq
xor
push
and
cmc
cmp
popa
mov
or
lods
out
xor
dec
jmp
daa
xchg
or
fistp
xor
sti
add
adc
fidivr
mov
jmp
add
movs
push
call
mov
dec
rcl
stos
sbb
retf
aaa
enter
jmp
cmp
dec
ss
sbb
dec
lahf
cmp
add
test
and
jl
adc
xchg
push
pop
bnd
jle
mov
inc
pop
(bad)
les
clc
call
jnp
hlt
aas
fs
mov
push
cmps
sbb
xchg
xor
sbb
nop
or
sbb
dec
inc
xchg
adc
and
cwde
xchg
inc
cmp
sub
ds
jb
mov
add
icebp
jg
dec
dec
fadd
cmp
sbb
iret
(bad)
push
xor
mov
sbb
xor
adc
sbb
and
cmp
stc
and
mov
inc
shl
les
mov
in
or
adc
xchg
and
stos
jp
sub
cwde
dec
push
and
std
xor
mov
or
sti
aad
push
inc
add
cmp
(bad)
and
mov
jo
es
and
cmps
push
aas
mov
test
and
sbb
aas
add
iret
outs
es
das
loopne
aad
xor
push
aad
jmp
mov
xchg
ret
cmps
popa
xchg
(bad)
and
sbb
(bad)
(bad)
cmc
inc
and
mov
mov
xchg
(bad)
ja
ja
dec
or
in
test
dec
pop
push
inc
jno
jg
stos
stos
lock
mov
bswap
call
neg
adc
push
pop
jg
push
pop
je
mov
imul
pop
add
mov
stos
add
adc
mov
scas
push
push
loope
and
or
lock
mov
jle
mov
lds
fnstenv
mov
or
sti
fcmovu
jmp
or
ins
dec
dec
xor
test
daa
jmp
sub
mov
add
ret
inc
loope
pop
add
cdq
ffreep
leave
mov
push
pushf
cwde
dec
adc
dec
retf
das
test
out
xchg
fldz
jo
pop
inc
mov
sub
jmp
fimul
mov
mov
lea
cmps
test
movs
int
mov
fwait
jp
lods
mov
jle
jmp
mov
fimul
stos
ja
dec
sbb
xchg
or
push
out
jg
cmp
mov
pushw
inc
push
(bad)
sub
fist
mov
setnp
(bad)
in
xor
push
in
fs
fstp
cmp
jnp
int
test
xchg
dec
pop
jmp
inc
push
(bad)
cmc
bound
mov
push
into
leave
push
mov
adc
mov
cmp
and
ss
scas
call
repz
jge
aad
push
xchg
data16
push
add
scas
sbb
mov
(bad)
cmp
stos
cmc
out
adc
mov
adc
cmp
lods
(bad)
mov
mov
movs
mov
lds
in
dec
jno
lds
jmp
and
rcl
jle
sub
imul
fsubr
jnp
mov
inc
inc
mov
mov
sbb
dec
test
ins
push
sub
xchg
mov
pop
mov
xchg
or
int3
mov
mov
mov
inc
adc
les
add
add
cmp
mov
xchg
pop
pop
push
scas
ret
xor
push
mov
imul
es
sar
mov
fdivr
push
je
loop
int
or
push
push
push
jb
mov
push
loopne
xchg
push
mov
dec
sbb
(bad)
pushfw
aam
sub
push
dec
jbe
cmp
jmp
call
fimul
lods
aaa
or
(bad)
cdq
sahf
dec
iret
fs
(bad)
movs
jmp
mov
jmp
inc
dec
cs
std
jl
ror
or
cwde
stos
dec
cmc
retf
rol
gs
mov
outs
into
mov
out
(bad)
ss
add
leave
xchg
aam
jle
jo
out
in
imul
push
sti
sbb
(bad)
sbb
mov
adc
dec
stos
mov
inc
out
adc
test
or
add
mov
sub
mov
cmps
and
clc
out
ret
inc
bound
sbb
and
push
xor
add
xchg
call
idiv
jo
mov
nop
sbb
dec
and
in
xchg
ffree
jae
fwait
mov
test
iret
cwde
add
mov
les
test
and
add
add
test
sub
sub
xchg
fs
jae
cld
scas
sahf
clc
call
adc
cmps
mov
adc
je
in
inc
xchg
jne
inc
in
sbb
mov
push
mov
adc
adc
popa
pop
jg
jo
ss
gs
lock
mov
out
jno
ret
cmp
push
or
xchg
inc
xchg
mov
cmp
int
lods
rol
mov
cmps
dec
push
jl
or
push
into
retf
repnz
sbb
sub
repz
mov
leave
cs
mov
in
test
xor
or
inc
idiv
in
push
xor
jl
movs
js
inc
test
jg
mov
sub
push
xchg
xchg
and
cmp
mov
daa
(bad)
mov
lds
mov
fimul
inc
jno
adc
inc
pop
dec
stos
push
fdiv
jmp
mov
mov
or
mov
in
sbb
je
scas
clc
ds
dec
adc
cmc
popa
lahf
xchg
and
or
add
mov
aaa
sub
arpl
adc
loope
xor
pop
bound
or
aad
sub
push
jmp
sahf
xchg
out
jno
pop
push
retf
sbb
mov
push
jb
sbb
jmp
sbb
outs
idiv
adc
mov
out
mov
rol
push
push
xor
fsubr
mov
mov
cs
aad
cmp
ret
xchg
outs
dec
addr16
mov
imul
sub
int3
mov
mov
push
cmp
idiv
mov
lds
repnz
mov
xor
xchg
stos
std
xor
jge
mov
jg
fs
mov
inc
into
scas
aas
push
adc
push
xlat
rol
jg
test
ret
jl
pop
pop
in
lock
mov
xor
gs
popa
mov
xchg
xor
dec
sub
lods
mov
pusha
push
and
cli
dec
iret
mov
(bad)
push
add
mov
add
pop
xchg
in
jo
and
pop
mov
jecxz
stos
sbb
cmps
das
mov
push
aad
mov
ss
sbb
add
push
das
sbb
(bad)
fcomp
cs
nop
je
mov
inc
and
add
outs
ins
ficomp
icebp
push
xor
(bad)
out
jmp
mov
cmp
jge
jns
movs
adc
cdq
les
xchg
mov
lock
jg
stc
and
cwde
fdiv
ins
pop
adc
scas
add
imul
adc
sbb
je
dec
sbb
sbb
movs
or
loopne
aaa
jno
daa
mov
inc
shl
pusha
test
stc
pushf
sbb
push
cli
sti
ja
leave
inc
retf
pop
push
pop
pop
sbb
ins
xlat
(bad)
sub
clc
sub
and
pusha
(bad)
hlt
pop
xchg
dec
(bad)
and
fnsave
shl
mov
sbb
std
mov
das
data16
leave
pusha
xchg
arpl
ret
or
dec
imul
bound
cwde
sub
sbb
les
lea
and
pop
test
add
sar
rcl
cmp
(bad)
mov
cwde
(bad)
enter
in
adc
push
std
adc
fnstenv
das
cmp
into
in
pop
xchg
out
mov
mov
stos
fstp
mov
fmul
aas
cmp
or
in
sub
sbb
mov
aam
sahf
jmp
add
(bad)
jbe
call
dec
rcl
in
cmp
adc
mov
int3
inc
sbb
test
dec
push
or
lea
push
push
sub
inc
pop
fiadd
enter
jmp
inc
test
cli
xchg
sbb
inc
loope
jmp
xchg
cmp
adc
mov
and
in
inc
jb
adc
cld
inc
mov
add
mov
cmp
jno
adc
dec
dec
popf
add
and
cmp
adc
xchg
test
add
clc
sub
loop
mov
lds
inc
je
loop
push
aad
test
(bad)
daa
gs
jmp
mov
jmp
or
adc
xor
or
xor
mov
xchg
out
cld
mov
ror
add
adc
pushf
jmp
add
inc
mov
fisub
or
inc
mov
add
mov
dec
mov
xchg
cmp
loope
mov
pop
mov
mov
lods
(bad)
(bad)
inc
xchg
and
sbb
iret
xrelease
mov
jle
mov
daa
cwde
loope
or
mov
mov
fldenv
and
rol
aas
push
xor
aad
imul
add
and
loopne
(bad)
mov
jae
ja
(bad)
in
pop
in
xchg
les
iret
int
sbb
cwde
ret
pushf
push
or
push
mov
js
adc
jae
mov
inc
mov
lock
(bad)
sti
in
aas
inc
dec
lods
addr16
inc
xor
xchg
mov
and
jle
push
or
(bad)
int3
or
adc
xchg
test
sub
jge
ret
mov
dec
pushf
aam
out
push
(bad)
repz
add
jmp
add
adc
pop
movs
movs
mov
std
arpl
dec
add
repz
cmp
movs
cmps
sbb
jno
mov
xchg
adc
fadd
dec
pop
jo
mov
fwait
inc
push
cli
hlt
jmp
ud2
push
movs
mov
(bad)
adc
ds
movs
xchg
pop
xor
imul
mov
push
mov
or
add
inc
jp
enter
sub
add
sub
push
cmp
jle
add
mov
dec
xor
jb
or
push
ret
xor
sbb
outs
imul
mov
xor
xchg
adc
mov
lds
ins
(bad)
rol
pop
jb
and
pop
lods
mov
test
repz
mov
lods
push
xor
pop
sbb
ficom
xchg
lds
xchg
lods
sbb
bound
fsubr
ror
outs
popf
push
sar
dec
loopne
pop
add
push
jb
lea
sbb
add
setns
loop
fcomp
cmp
xchg
ins
stc
push
xchg
stos
bound
add
xor
dec
xchg
cmc
iret
mov
cmp
pop
cli
fiadd
lahf
inc
out
xor
sbb
(bad)
retf
idiv
jle
xor
or
(bad)
mov
stos
mov
mov
movs
fsub
test
xchg
xor
jge
and
ja
sbb
add
push
lds
rcl
sub
inc
mov
dec
aam
sbb
adc
stc
jmp
or
sub
out
(bad)
mul
jne
(bad)
retf
dec
int
xchg
mov
push
test
or
push
sbb
cmp
pop
pushf
add
or
push
mov
pop
xor
fstp
nop
ja
add
pop
int3
into
fisttp
addr16
fdiv
xchg
addr16
enter
or
and
pusha
bnd
dec
xchg
cld
outs
push
or
adc
push
(bad)
push
xchg
sbb
add
mov
mov
outs
dec
push
jo
dec
loopne
xor
into
mov
cmp
in
jmp
push
mov
and
add
iret
stos
lock
ja
add
and
aad
mov
arpl
aaa
or
ins
ds
sub
mov
mov
cs
xlat
or
push
popa
sbb
sbb
pop
inc
xchg
and
xor
mov
sar
stos
sbb
enter
mov
ret
xor
test
scas
int
jge
test
push
mov
adc
daa
jg
loopne
add
xchg
jmp
jae
inc
fwait
lea
gs
(bad)
lea
pop
imul
ds
xor
push
scas
mov
mov
dec
mov
inc
jnp
mov
mov
mov
repz
dec
mov
pop
xor
lahf
ins
inc
movs
jg
push
scas
hlt
lea
stos
xor
mov
ja
adc
je
xchg
push
push
mov
jmp
mov
int3
outs
popa
adc
mov
cmp
mov
(bad)
pop
mov
jne
loopne
and
push
mov
jle
out
popa
mov
scas
stos
movs
cmps
cwde
or
xchg
int3
inc
rol
fst
add
cld
call
xchg
cmp
repnz
jge
or
sbb
loopne
test
jle
cmp
inc
out
pop
shl
lock
xchg
add
push
dec
sbb
outs
xor
popf
xor
outs
xor
adc
adc
dec
out
movs
mov
out
in
mov
inc
cmps
push
and
mov
call
lea
inc
lods
xor
push
sbb
pop
ja
out
sbb
mov
mov
call
ror
gs
test
inc
fstp
add
shr
cwde
fdiv
mov
(bad)
inc
push
push
mov
cmc
mov
int3
cmp
mov
push
fstp
cmps
mov
loop
xor
les
daa
mov
adc
or
jp
fistp
stos
dec
bound
mov
aas
and
push
cmp
inc
inc
clc
mov
out
leave
inc
daa
jnp
test
cli
inc
sbb
mov
scas
mov
imul
test
xchg
fisubr
out
ror
cwde
fild
fs
adc
xchg
nop
or
aas
outs
lods
rcl
je
dec
mov
xor
(bad)
sub
mov
dec
or
mov
stos
mov
cmps
enter
push
jns
jecxz
push
daa
inc
popa
and
lods
mov
mov
movs
jb
(bad)
out
inc
adc
mov
mov
outs
test
and
pop
and
push
sub
inc
jo
aad
mov
dec
jb
mov
xor
in
add
rcl
inc
rcl
test
add
imul
push
lods
cld
and
sar
fld
fimul
mov
mov
adc
jae
mov
paddusb
mov
ins
(bad)
cwde
pusha
int
or
clc
push
mov
outs
lods
pop
xchg
cdq
sub
pop
mov
aas
xor
jo
dec
cmp
and
lods
sub
pop
add
push
lahf
lahf
les
daa
ins
sar
mov
aad
mov
into
push
dec
rcl
xchg
and
fidivr
push
pop
pop
movs
mov
xor
jmp
lock
xor
lds
sbb
xchg
jl
rcl
xor
pop
popa
ins
xchg
xor
stc
(bad)
ret
push
jmp
pop
xchg
mov
push
fdiv
jae
sbb
inc
pop
and
cmps
pop
mov
jle
mov
sahf
inc
into
jecxz
ins
jle
sbb
rcr
ret
lods
mov
adc
fcmovnb
sbb
clc
mov
xchg
ror
mov
xchg
inc
xchg
xchg
pop
pop
and
fsin
into
mov
adc
aas
sbb
push
jae
add
ret
pop
cmp
inc
or
inc
jmp
das
(bad)
mov
mov
test
pop
gs
and
movnti
jno
inc
or
adc
jbe
cmp
mov
cwde
fisub
jmp
adc
mov
sbb
add
xchg
mov
add
out
ins
mov
rol
mov
std
push
mov
xor
cmc
popf
add
loopne
inc
mov
cmc
rcl
pop
adc
cmp
mov
cli
and
mov
add
inc
std
fnstcw
pusha
mov
out
cdq
xchg
xchg
cmp
dec
popf
push
dec
fstp
inc
movs
dec
int3
jmp
repnz
xchg
les
sahf
sub
fcomp
mov
cmps
(bad)
loope
push
imul
push
inc
dec
shl
mov
fnsave
push
mov
ins
div
mov
mov
repnz
jecxz
sub
xor
ds
mov
iret
and
dec
add
loopne
popa
jne
imul
jmp
pop
cmps
movs
mov
adc
xor
cs
cli
mov
mov
sbb
add
cld
or
sbb
fcomi
cdq
pop
cmp
mov
mov
hlt
ins
hlt
mov
xchg
push
ins
jne
fist
push
call
and
sub
mov
out
lods
retf
sar
loopne
jbe
enter
in
jecxz
mov
popf
hlt
mov
popa
pop
mov
dec
sub
adc
cmp
pop
push
(bad)
stc
pushf
pop
iret
xchg
cmp
mov
loopne
test
cmp
mov
xor
daa
pop
cmp
add
sar
push
mov
movs
(bad)
adc
jo
cmp
xor
mov
xor
ins
test
clc
mov
pop
sub
out
test
inc
and
scas
push
retf
shr
pop
or
sub
dec
push
sbb
push
shl
leave
shl
lods
xchg
les
dec
and
test
inc
ja
adc
dec
mov
loopne
push
enter
into
dec
je
aas
test
mov
push
mov
cmp
nop
mov
jnp
cmp
jo
or
jecxz
sub
mov
pop
mov
mov
out
jp
sub
in
jnp
test
push
repz
nop
scas
(bad)
mov
(bad)
push
push
int3
fadd
pusha
pushf
jns
or
dec
test
jp
in
loop
fisttp
xchg
adc
xor
(bad)
dec
push
mov
daa
cmp
pop
mov
pop
lods
fldcw
or
out
mov
in
xchg
mov
int
xor
mov
sar
mov
gs
scas
and
sub
add
or
cdq
jae
ret
es
and
lock
push
and
cmp
sbb
(bad)
sub
cmps
jge
and
idiv
or
popf
scas
rcr
test
fistp
mov
jg
ror
(bad)
jo
xchg
mov
stos
out
test
pop
dec
sbb
pop
inc
lock
(bad)
mov
xchg
pop
inc
xchg
xlat
loop
arpl
fdivr
in
xor
jp
not
addr16
cmp
popa
add
icebp
push
sub
xchg
jmp
movs
sbb
sub
clc
inc
sbb
cdq
movs
cli
xor
xchg
xchg
xlat
push
inc
outs
xchg
out
ror
lods
sbb
inc
jne
dec
inc
sub
jp
or
cmp
enter
loopne
sub
jle
xchg
push
sahf
movs
and
cmp
xor
add
pushf
mov
gs
xchg
jmp
jmp
dec
das
imul
cdq
xor
popf
fwait
push
call
imul
mov
neg
popa
push
mov
stc
out
add
or
xor
test
fldenv
sub
pop
sbb
adc
pop
ja
mov
std
jle
loopne
xchg
sbb
jp
into
dec
jmp
iret
repnz
cld
pushf
inc
ja
pop
inc
mov
adc
sbb
in
repz
mov
je
in
in
push
stos
inc
jp
arpl
fcom
add
fisubr
movs
jmp
push
les
or
inc
ret
ins
(bad)
pop
ins
inc
mov
mov
sbb
sub
add
mov
inc
cmp
popf
ja
stos
add
inc
jno
pop
imul
rcl
sbb
shr
inc
inc
or
push
add
test
loop
sbb
daa
dec
stc
scas
cmp
inc
cmp
int
(bad)
push
loopne
and
in
inc
mov
not
and
jno
loope
pop
lds
std
neg
call
mov
gs
sbb
aaa
es
(bad)
mov
test
inc
stos
push
int
aas
mov
dec
sbb
add
aad
pop
mov
and
adc
in
in
xor
arpl
cwde
push
in
scas
mov
sbb
adc
arpl
mov
or
mov
shl
add
and
inc
cmps
push
mov
loopne
inc
and
pop
ds
push
xor
jg
add
lods
dec
cdq
and
pop
ret
nop
or
(bad)
bound
jne
cmp
mov
(bad)
push
lds
fwait
inc
ret
sbb
xor
jae
push
shr
cld
sbb
add
cs
push
or
xchg
mov
test
ins
cld
stc
rcl
dec
fidiv
push
pop
inc
ror
scas
xlat
sub
movs
aad
ror
mov
int
xor
dec
les
inc
push
sub
ja
mov
(bad)
lods
cmp
dec
(bad)
fisub
imul
popf
je
fnstenv
lds
leave
gs
pusha
inc
repz
fwait
daa
in
cmp
push
pop
test
xchg
dec
int
cmp
push
cmps
mov
les
(bad)
sahf
test
inc
mov
in
call
(bad)
sbb
ficomp
aaa
pop
xor
xor
lds
iret
cmps
ret
out
call
adc
ret
std
cmp
in
shr
not
inc
daa
pavgw
fisub
pop
mov
adc
jle
movs
ror
jmp
and
pop
jns
cmp
mov
add
sbb
inc
cmp
movs
mov
cmp
jb
and
daa
mov
sub
pop
dec
push
jge
js
xchg
stc
push
fnstcw
das
push
in
js
cmp
int
(bad)
cmp
or
sbb
scas
(bad)
pusha
lahf
stos
xor
mov
leave
sbb
ss
pop
or
jg
pop
jle
in
shr
cs
loopne
push
push
push
shl
sahf
call
test
shl
imul
cld
aad
enter
das
jmp
jb
push
push
lds
ja
int3
cmp
sub
fmul
stos
and
xchg
mov
cmps
test
popf
xchg
adc
repz
retf
mov
jl
jmp
xchg
int3
loope
cs
out
ret
dec
and
(bad)
in
push
xchg
cmp
(bad)
xlat
in
pop
icebp
inc
fxch
push
add
mov
mov
pop
mov
sbb
fsubr
fistp
cmp
jecxz
mov
mov
add
sar
pop
repz
pop
dec
ja
dec
les
pop
cmp
push
ret
pop
push
das
or
push
mov
add
jge
scas
loopne
into
or
(bad)
stos
pop
popa
ja
aas
inc
shr
cmp
or
dec
pop
icebp
int
xor
scas
adc
mov
or
or
inc
int3
sub
lock
test
pop
bound
mov
xor
imul
pop
repz
je
xor
cdq
sar
test
scas
aas
cld
test
xor
rol
and
retf
dec
pop
pusha
imul
mov
call
call
xor
retf
aaa
loope
push
es
xchg
dec
xchg
xor
into
sbb
sbb
nop
cmp
xchg
sbb
pop
(bad)
sti
inc
jecxz
fdivr
mov
idiv
xchg
dec
mov
xchg
sahf
inc
pop
xor
or
dec
pop
add
or
mov
or
sub
out
fadd
enter
pusha
dec
les
xor
cld
mov
pusha
push
mov
and
sbb
mov
or
mov
test
movs
jne
mov
popf
sub
push
shl
jg
sbb
enter
ret
sbb
dec
mov
cmc
or
shr
inc
cli
rcr
ds
add
icebp
int
ja
pop
jmp
xchg
xchg
das
jecxz
xchg
dec
xlat
stos
add
xor
or
mov
xor
xchg
adc
ins
xor
les
jl
push
or
test
pop
(bad)
test
jecxz
test
pop
mov
inc
sub
mov
push
and
mov
js
inc
data16
jmp
push
aad
int
xor
sub
add
jg
sar
pop
or
iret
jb
loope
lea
icebp
cmp
dec
inc
or
push
popa
test
sub
shl
sbb
repnz
cli
cwde
outs
test
icebp
dec
in
rcl
mov
add
icebp
cld
push
and
out
cmp
stos
mov
cmps
out
sbb
mov
cmp
iret
add
mov
aaa
dec
daa
movs
out
mov
int3
dec
mov
cmps
inc
cdq
rcl
xchg
shl
aad
sbb
push
push
ins
imul
bound
push
and
mov
pushf
cmp
jecxz
cs
add
jmp
fwait
mov
rcl
not
cmp
outs
lods
add
mov
mov
out
rcr
or
sahf
xor
push
and
imul
push
stos
icebp
and
dec
pop
adc
xor
xchg
loopne
sbb
xlat
out
cmp
xor
pop
mov
sbb
sbb
add
or
xor
pop
mov
loope
dec
paddw
jg
push
aaa
enter
loope
loope
cdq
push
daa
ins
jnp
lock
out
fadd
xchg
and
push
fucomi
fwait
add
inc
sub
xor
lea
and
out
sub
shr
push
mov
test
xchg
cwde
loopne
mov
aam
cld
(bad)
xor
stos
sbb
mov
cmp
and
call
xchg
or
add
sbb
and
xchg
fisubr
cmps
and
pop
xchg
mov
push
icebp
test
sbb
pop
rcl
jmp
pop
push
test
or
or
sbb
clc
jne
dec
fs
jle
add
mov
mov
fcomip
clc
rcr
ficomp
and
hlt
fiadd
(bad)
adc
and
adc
dec
mov
shl
(bad)
leave
sbb
push
fisub
daa
aas
mov
push
retf
and
inc
ret
pop
movs
int3
adc
outs
int
pop
out
stos
cmps
in
aam
or
daa
mov
push
and
ret
mov
inc
in
push
xor
pop
xchg
leave
outs
hlt
adc
and
lock
cmp
or
push
test
ror
jns
and
call
fyl2xp1
cmp
xor
push
sub
push
hlt
sahf
fsubr
test
mov
and
mov
xchg
sti
pop
jge
adc
sbb
adc
aad
hlt
jecxz
popa
arpl
aad
pop
sub
inc
ret
mov
sahf
ins
in
test
xor
mov
push
retf
jno
pop
pop
push
(bad)
ficom
mov
jecxz
and
es
xchg
dec
dec
ret
fs
imul
sbb
cwde
adc
int3
loope
cmps
xor
daa
fistp
fld
das
pop
mov
call
mov
ja
xor
inc
push
lahf
lock
pop
sar
test
xchg
xor
je
shl
or
or
cmp
nop
xchg
jb
xor
stc
push
scas
outs
sbb
cmp
neg
adc
imul
jg
push
jmp
imul
sbb
shr
call
or
sbb
div
or
hlt
stos
xchg
jge
jo
add
das
stos
xchg
push
popf
fidivr
pop
sbb
daa
cmc
es
or
lods
call
addr16
ss
cmovs
push
mov
pop
in
inc
loope
cmps
lods
and
mov
iret
idiv
xchg
ret
mov
push
xchg
or
push
jbe
cmp
inc
pop
shr
test
sub
mov
icebp
test
das
out
and
inc
mov
fcomp
scas
inc
jl
cwde
ja
xchg
pop
or
gs
xchg
jnp
movs
ss
mov
lea
xor
(bad)
stos
aam
fcmovb
xchg
(bad)
mov
push
fwait
out
dec
mov
jmp
jle
sub
add
scas
test
xor
mov
dec
inc
hlt
inc
dec
sbb
iret
pop
out
and
sti
jo
repnz
jle
aas
pop
mov
xchg
sbb
iret
(bad)
mov
aad
push
push
sbb
adc
cmp
mov
inc
daa
xchg
xlat
int
(bad)
and
cmp
mov
mov
fld
jecxz
mov
(bad)
sub
das
loopne
daa
sbb
adc
jno
cmp
inc
retf
push
fist
jo
scas
sbb
add
fisttp
add
xor
sub
pop
and
mov
and
sbb
pop
sub
out
lahf
inc
aam
mov
adc
jmp
popf
pop
mov
jns
rcr
in
popa
hlt
push
int
and
jp
add
popa
retf
sti
pop
inc
mov
xchg
sbb
sahf
ret
rcr
neg
xchg
cmc
imul
sbb
lea
(bad)
mov
mov
mov
stos
and
adc
(bad)
adc
aaa
mov
add
scas
mov
shl
in
add
add
in
cdq
das
lock
xor
les
(bad)
xor
mov
inc
sub
sub
sub
outs
int3
inc
rol
stc
test
mov
adc
push
pop
mov
xor
shl
mov
xchg
lahf
xchg
(bad)
push
rcr
enter
add
sub
int3
sbb
out
sbb
lods
int
ret
fdiv
push
jmp
mov
jne
xor
bound
ret
jmp
xchg
push
adc
mov
sbb
aaa
out
bound
add
mov
jns
(bad)
call
dec
loop
sbb
inc
xchg
xor
push
pop
test
idiv
imul
dec
fcomp
jbe
dec
pushf
stc
jne
jnp
ror
sub
dec
sub
dec
dec
in
sbb
test
mov
cmps
mov
and
jle
xchg
sub
jmp
ins
sub
push
and
mov
sub
add
(bad)
push
add
xor
dec
adc
rcr
(bad)
call
xor
(bad)
iret
or
js
cwde
loop
imul
xor
xchg
sbb
retf
or
popa
sub
push
(bad)
inc
mov
test
jno
jns
or
out
shl
inc
pop
push
xor
and
ret
jmp
scas
sbb
or
ins
mov
gs
lea
enter
cdq
hlt
xor
adc
xor
mov
pop
sub
inc
jp
call
int
sub
gs
xor
scas
xchg
test
ja
mov
xchg
sbb
ins
mov
or
ins
sbb
sbb
jl
or
jo
pop
mov
xchg
pop
or
pusha
inc
call
mov
sti
sbb
daa
inc
mov
pop
test
pop
and
inc
xchg
mov
sub
pop
mov
xor
fisttp
clc
cmps
outs
in
add
pop
add
jmp
lods
icebp
and
mov
push
jbe
pop
in
in
movs
and
adc
pop
or
pop
add
iret
cmc
xchg
daa
adc
xchg
in
xor
lods
or
lock
aam
scas
sbb
icebp
popf
pop
fistp
cmp
sub
sbb
fs
iret
shl
jg
mov
push
add
icebp
(bad)
jnp
inc
in
aam
and
xor
xchg
call
jle
mov
mov
arpl
es
dec
pop
mov
aam
xchg
xchg
cmp
and
rcr
dec
ror
das
loopne
out
inc
and
js
pop
(bad)
jmp
jb
xor
imul
enter
or
inc
(bad)
and
inc
dec
xor
cmp
lods
adc
or
dec
cmps
xchg
mov
push
cmp
pop
and
popa
aaa
js
adc
mov
out
jb
dec
stos
cmps
ja
push
pop
jmp
call
mov
cld
xchg
push
push
add
lods
in
sbb
and
out
mov
push
mov
stc
lods
adc
jge
clc
mov
xor
or
aam
sub
jb
cs
or
cwde
xchg
sar
dec
pop
pop
add
push
xor
fadd
push
lds
pop
shl
pop
pop
out
inc
mov
dec
cmp
lock
(bad)
inc
sbb
push
into
push
retf
addr16
mov
fisttp
or
or
mov
mov
xchg
sub
sub
inc
dec
pop
inc
add
icebp
rcr
pop
loopne
aaa
lds
sub
add
shl
popf
imul
retf
imul
xchg
dec
jns
jg
(bad)
aam
cmps
hlt
outs
nop
add
add
mov
inc
jecxz
mov
pushf
cmps
jb
ret
imul
jmp
add
mov
nop
mov
in
shr
xor
add
sbb
test
aas
je
inc
add
or
(bad)
iret
out
or
inc
sub
cmp
push
hlt
pop
dec
mov
or
push
jns
popa
js
jecxz
(bad)
inc
mov
sahf
mov
jbe
push
xchg
dec
outs
(bad)
or
cli
pop
xchg
mov
cmc
jo
lods
jne
lds
dec
sahf
inc
repnz
ret
popa
into
jmp
jne
out
jmp
pop
(bad)
push
bound
cmc
sub
lahf
fisttp
arpl
push
aas
push
daa
xchg
xor
mov
sbb
push
ret
jo
test
stc
into
and
xor
jo
jmp
lahf
adc
pusha
loope
push
mov
in
jmp
ins
leave
or
xchg
inc
das
rcr
adc
fucom
hlt
jno
sub
mul
push
mov
dec
arpl
adc
add
jge
test
mov
mov
in
pop
and
leave
mov
xor
stc
xor
cmps
add
or
dec
mov
inc
xor
push
cmp
stc
call
pop
dec
xlat
inc
jno
pop
outs
pop
cmp
jp
push
xchg
xchg
std
nop
clc
ins
or
jmp
lahf
jle
icebp
aaa
adc
cmp
or
int
xchg
in
xchg
cmps
cli
mov
fs
movs
test
loope
test
es
xchg
push
ss
xor
and
(bad)
data16
fwait
sub
retf
aaa
rcr
loope
in
loop
add
pop
sbb
push
cmps
xor
jno
mov
push
adc
dec
retf
dec
cmps
sub
pop
pop
xchg
dec
int3
sub
pop
mov
mov
hlt
into
sahf
lea
jnp
das
test
std
clc
sub
xchg
imul
xchg
mov
mov
xor
in
leave
int3
out
call
mov
cdq
add
out
ss
or
lock
out
cmps
(bad)
fdiv
mov
add
push
jp
xor
pop
dec
push
mov
ret
stos
rcl
and
jb
jecxz
or
cdq
(bad)
inc
push
push
push
cld
test
addr16
pop
mov
push
pop
stos
jns
mov
les
jbe
xchg
pop
fistp
cwde
push
aam
adc
cmps
outs
icebp
adc
or
dec
bound
inc
cmp
cmps
push
sti
repnz
push
inc
or
in
or
(bad)
and
and
out
inc
add
jecxz
in
xlat
and
jbe
or
mov
mov
loop
cmp
and
(bad)
or
sbb
xchg
(bad)
and
call
daa
cmp
ror
(bad)
hlt
pusha
sub
or
push
jnp
lock
push
lods
adc
pop
dec
dec
repz
int
or
scas
sbb
add
cmps
jg
dec
int
xchg
inc
jp
sub
iret
movs
jmp
xchg
cmp
jmp
test
sti
pop
pop
sub
out
ret
scas
dec
sub
ja
cmp
sbb
sbb
pop
retf
mov
sub
jl
div
jns
push
pop
sbb
cwde
fmulp
xor
mov
jo
add
fstp
sbb
dec
add
aad
cmp
outs
xchg
repnz
cld
mov
xchg
sub
push
inc
popa
pop
dec
sti
mov
jl
jmp
mov
inc
cmps
add
xchg
dec
ds
test
shl
or
adc
xchg
out
enter
pusha
push
cmovb
adc
pop
dec
loope
lds
int
arpl
inc
repz
into
je
mov
clc
xchg
pop
xor
inc
adc
push
jnp
inc
mov
inc
pop
add
jae
sub
dec
push
ficomp
mov
or
out
cmp
cmc
push
and
mov
rcl
in
stos
push
ret
lea
xor
es
cmps
rcl
xchg
rcr
mov
fisub
out
jnp
mov
inc
pop
fdiv
leave
mov
sub
sub
xchg
push
ret
xor
pop
jo
or
test
mov
inc
hlt
ret
dec
push
jae
push
pushf
xor
jg
sbb
mov
sub
int
mov
push
add
push
add
or
aaa
movs
ss
cmp
and
xor
or
xchg
ret
dec
add
push
push
fwait
mov
pop
sbb
sub
(bad)
xchg
fistp
push
dec
push
adc
sbb
repnz
sbb
outs
or
ret
retf
leave
push
jmp
mov
sti
test
xchg
jns
ins
popf
repz
xor
test
xchg
arpl
dec
mov
adc
xchg
popf
scas
fsubr
and
mov
cmp
push
leave
jmp
dec
pop
xor
loope
lock
movs
loopne
fmul
mov
ret
mov
daa
mov
out
fmul
cwde
test
ss
jle
int
sahf
add
(bad)
fdivr
push
int3
pop
add
cmp
pop
cwde
jge
push
mov
sub
ins
sahf
out
icebp
test
out
fs
fistp
inc
mov
jae
call
pop
adc
sbb
ret
sbb
add
(bad)
dec
hlt
xchg
sub
inc
int
pop
adc
outs
jp
jo
movs
addr16
jle
in
aas
jecxz
inc
cmp
jp
cwde
jae
push
mov
push
jg
mov
sbb
cmps
iret
jle
shr
adc
in
rol
xor
outs
jo
push
cmc
mov
cli
add
test
repnz
pop
pop
or
loope
mov
in
test
jno
gs
cmc
sbb
xor
push
push
dec
outs
out
sbb
add
xor
xchg
stc
test
jmp
inc
cld
mov
push
in
outs
pop
sti
xchg
inc
dec
push
jl
loope
pop
mov
sbb
retf
bound
sub
jle
icebp
adc
add
mov
push
jnp
or
movs
or
ds
out
jp
cmp
pop
mov
enter
xchg
xchg
jbe
imul
push
(bad)
dec
xchg
push
enter
fist
loop
inc
test
jl
aas
fwait
clc
shl
or
jb
jecxz
mov
xchg
retf
dec
fistp
mov
sub
stos
mov
fst
xor
inc
xor
inc
pusha
or
lods
pop
(bad)
in
xchg
outs
(bad)
into
push
fmul
jbe
in
add
mov
stc
dec
and
data16
out
mov
add
icebp
sub
std
not
adc
pop
out
ins
mov
inc
sar
data16
in
aas
lahf
push
ror
push
dec
sbb
int
push
jmp
jle
xchg
(bad)
imul
jmp
and
pop
or
pushf
leave
mov
or
out
add
add
test
and
(bad)
cmp
cld
and
loopne
add
xchg
cmp
stos
popa
adc
inc
mov
push
cmp
clc
(bad)
push
aam
xchg
mov
push
sub
add
push
out
dec
sub
scas
sbb
adc
(bad)
jae
mov
mov
push
stos
retf
inc
out
(bad)
or
cmp
fsub
pop
movhps
push
addr16
mov
and
jecxz
inc
pop
jae
cwde
or
and
mov
cmp
and
ror
bnd
cdq
popf
mov
add
arpl
sahf
pop
jg
les
outs
jl
clc
fst
(bad)
push
mov
mov
mov
lods
cli
mov
adc
in
addr16
xchg
dec
inc
js
add
nop
iret
push
retf
push
xchg
xchg
mov
cdq
das
fwait
sbb
and
adc
jne
cmps
dec
mov
ja
movs
lahf
cld
add
mov
in
pop
xchg
in
dec
mov
jns
fisubr
xchg
out
fstp
fldcw
and
xchg
dec
adc
dec
add
push
push
imul
dec
(bad)
imul
sar
push
test
sub
punpckldq
lea
dec
(bad)
(bad)
stc
loopne
mov
mov
adc
add
daa
inc
nop
pusha
test
sub
hlt
nop
lods
mov
neg
frstor
adc
outs
adc
push
cli
loope
call
jne
and
or
push
cmps
xchg
fwait
mov
adc
jbe
jae
pop
mov
xor
adc
jecxz
fcom
sub
std
int3
mov
mov
fwait
test
jnp
ror
sbb
push
dec
int3
test
adc
jmp
(bad)
movs
sbb
loopne
inc
mov
mov
push
stos
out
in
out
aad
and
dec
jp
mov
in
push
push
mov
dec
out
sti
mov
pop
cmp
mov
inc
mov
dec
or
push
std
adc
pop
jnp
clc
jmp
cmp
mov
into
pop
rcr
push
test
sub
adc
in
fcmovu
adc
add
dec
sub
stos
inc
or
mov
clc
mov
movs
fs
mov
jmp
dec
mov
mov
fild
sahf
push
ins
fist
push
aam
stos
(bad)
mov
add
jbe
xchg
lea
idiv
(bad)
jge
inc
mov
in
scas
pushf
or
stc
iret
div
xchg
adc
adc
mov
repnz
mov
lods
and
ds
test
xor
pop
jl
iret
jecxz
jg
lea
mov
xchg
xor
push
mov
sbb
movs
js
mov
(bad)
lea
cmp
fiadd
arpl
xor
(bad)
jmp
lds
je
loop
sbb
push
pop
popf
out
fst
sub
jl
sub
dec
(bad)
xor
jns
pop
xor
add
cmp
and
cmps
jnp
and
or
push
pop
data16
out
cli
nop
ins
xchg
sub
sub
popf
in
push
inc
lahf
dec
in
bound
rcr
inc
xor
push
mov
adc
out
push
add
test
jo
test
and
int3
icebp
loop
sbb
sub
mov
repz
pop
mov
mov
adc
push
jno
push
adc
jmp
mov
retf
mov
cmc
dec
dec
lahf
xchg
fwait
xor
or
dec
popa
dec
push
adc
xchg
fdiv
(bad)
cmp
dec
ficomp
or
adc
adc
push
cmp
pushf
loopne
mov
inc
or
pop
xchg
test
xchg
dec
xchg
or
sub
add
pop
imul
lahf
arpl
iret
and
loop
jb
pop
or
loopne
pop
cmps
ja
xor
adc
pop
xchg
push
sbb
jo
test
add
adc
xchg
jo
mov
push
cmp
or
fsub
cwde
add
retf
movs
nop
(bad)
sti
xor
push
push
push
inc
push
je
xchg
repz
mov
ficomp
lea
enter
adc
mov
xchg
jne
into
xchg
mov
test
scas
mov
sar
es
sub
pop
push
push
ds
sub
in
out
outs
pushf
jecxz
imul
xchg
push
pop
clc
mov
xor
mov
push
dec
cld
xlat
(bad)
lea
xchg
fwait
mov
jmp
push
pop
pop
jecxz
shl
mov
adc
sti
aas
add
lock
jbe
das
push
xchg
xchg
dec
daa
(bad)
mov
jg
cmc
into
pop
inc
test
retf
icebp
(bad)
test
add
imul
loop
pop
adc
in
mov
pusha
cmps
mov
in
cdq
loope
into
repnz
out
mov
imul
das
das
ret
leave
mov
(bad)
aas
int
cmps
mov
cli
ins
push
cld
mov
ss
fbld
(bad)
cmp
in
pushf
push
lods
jp
jmp
inc
and
mov
aam
xchg
outs
out
jmp
call
sbb
call
(bad)
fimul
int
push
fimul
mov
outs
push
lds
(bad)
cmp
xlat
sub
and
fistp
mov
popf
dec
pushf
out
jo
addr16
sub
fcom
icebp
mov
sub
les
cmps
adc
inc
repz
scas
jb
call
fs
dec
leave
pop
das
mov
cmp
js
xchg
dec
lea
sbb
dec
pop
sub
sbb
adc
inc
fadd
loope
mov
adc
(bad)
xor
das
lock
and
sub
jecxz
sti
loope
out
adc
cmp
cmp
and
and
scas
cmps
sbb
cmovb
xchg
popa
movs
loope
add
icebp
(bad)
popf
dec
or
ins
mov
retf
in
ja
mov
scas
sub
mov
or
movs
retf
xchg
cmp
cwde
jle
xor
add
jae
dec
repz
inc
push
aas
neg
loop
outs
scas
out
xchg
xor
or
dec
inc
rol
push
outs
lahf
push
and
sti
cmp
xor
retf
lds
adc
sbb
inc
out
out
mov
cs
pusha
inc
adc
std
adc
xor
push
call
gs
sbb
or
cld
loop
call
call
mov
or
nop
ins
in
or
lahf
xchg
ret
cld
fwait
xor
xor
jae
sbb
push
adc
in
mov
cld
push
daa
shr
inc
dec
sar
and
mov
dec
in
call
test
or
jbe
(bad)
adc
and
push
push
xchg
lods
adc
popa
sbb
push
hlt
dec
leave
aad
jmp
cmp
cmp
cwde
mov
push
sbb
ja
pop
dec
mov
mov
and
loopne
dec
rol
cwde
retf
ins
mov
nop
sub
adc
or
pop
es
mov
mov
mov
push
cmc
and
nop
fbstp
ret
add
cmc
iret
jle
adc
addr16
in
and
mov
mov
outs
movs
sub
cmps
jo
pop
lods
push
daa
push
loopne
mov
mov
test
in
cwde
push
inc
push
rcl
fwait
ins
jmp
sahf
mov
repz
mov
movs
inc
and
or
pop
imul
imul
ja
ins
push
push
push
retf
es
sub
lods
imul
push
sbb
mov
jg
scas
icebp
loope
in
out
and
xchg
or
xchg
cmp
adc
shl
cmp
data16
sbb
mov
and
push
pop
cmp
fisttp
test
cmc
inc
cmp
cmp
in
fcom
cs
xor
mov
adc
xor
mov
in
and
pop
loop
stos
and
ret
cli
ret
push
adc
adc
sbb
inc
sub
cmp
xchg
or
outs
and
fmul
inc
push
push
(bad)
sbb
movs
shr
add
or
or
ret
push
and
mov
ror
test
jae
xlat
sbb
fistp
pop
mov
movs
adc
sbb
xchg
add
push
cmps
ja
test
xor
ret
pop
clc
dec
jle
add
test
inc
sbb
loopne
cmp
fs
mov
cmp
addr16
xor
repnz
cmp
dec
fimul
mov
test
cmp
scas
xlat
push
imul
loopne
xchg
adc
cmp
dec
inc
sti
inc
push
jae
add
retf
dec
ds
push
inc
movq
out
div
xchg
lahf
push
pop
push
jmp
cli
xchg
add
arpl
sub
cwde
imul
aam
(bad)
ret
add
xchg
call
sbb
jae
jmp
mov
sub
jmp
and
mov
adc
daa
sbb
icebp
add
dec
loopne
dec
dec
inc
adc
add
inc
pop
xor
push
rol
lea
(bad)
and
sub
or
repz
ds
cdq
out
idiv
xor
or
mov
jl
daa
cs
and
mov
in
imul
jb
jnp
push
pushf
scas
sbb
gs
iret
ret
xchg
jb
mov
dec
add
(bad)
(bad)
sbb
daa
sub
dec
call
push
push
dec
icebp
cld
pop
out
stos
xchg
xor
mov
cmp
and
fisttp
call
es
jno
lds
jp
and
fidiv
jnp
and
push
ss
loopne
(bad)
fld
bound
jge
arpl
cmps
dec
mov
popa
or
into
retf
leave
aas
clc
xor
in
int
xor
mov
in
fiadd
jle
(bad)
xor
out
call
ret
or
inc
inc
inc
mov
not
adc
cs
sbb
xchg
das
inc
outs
aas
mov
test
movs
dec
sbb
inc
mov
pop
in
pushf
leave
adc
pop
dec
jb
mov
push
ss
adc
outs
push
fld
mov
lahf
dec
lea
inc
ret
dec
jne
test
mov
fisttp
jno
rcr
mov
sbb
cmp
pop
xor
out
cmp
jge
adc
(bad)
mul
jno
adc
or
imul
leave
ror
and
xchg
enter
jl
sti
in
pop
loope
push
cmps
push
or
dec
dec
dec
stos
pushf
dec
cmp
cmps
mov
jecxz
retf
cmp
xchg
enter
cmp
pusha
or
mov
mov
pop
cmp
aam
dec
out
int
test
sub
cmc
mov
(bad)
call
repz
mov
pushf
xchg
xchg
add
test
cmp
imul
(bad)
cmp
mov
out
jo
in
outs
cld
mov
mov
pop
mov
sahf
popf
push
cmp
stos
mov
mov
das
aas
das
pop
sbb
inc
jge
cmp
inc
adc
pop
cmp
xor
jmp
shl
retf
mov
jo
js
(bad)
adc
and
push
pop
jge
dec
pop
out
xchg
pop
cmp
mov
push
cmp
lea
mul
gs
clc
xchg
jecxz
int3
popa
bound
cs
inc
or
out
push
cmps
ss
ret
mov
cmp
(bad)
ret
inc
pop
mov
movs
rol
jne
aam
ret
cld
repnz
call
stos
sbb
test
or
jecxz
jae
clc
rol
add
mov
xchg
jl
push
sbb
sbb
cmp
push
sahf
std
dec
imul
jne
jo
movs
push
hlt
in
dec
push
push
add
sub
loopne
mov
mov
test
or
jo
pop
pop
fistp
pop
xor
scas
iret
add
fimul
jno
sub
les
adc
mov
push
adc
out
xor
push
repz
int
mov
mov
ss
pushw
shl
mov
xchg
add
movntq
out
jmp
sbb
icebp
imul
sti
inc
jae
adc
jo
int3
(bad)
(bad)
iret
(bad)
leave
fistp
or
xor
pop
ins
sar
repz
(bad)
mov
inc
mov
icebp
cmp
aam
pusha
inc
mov
sub
xor
jg
mov
xor
sbb
repnz
push
cmp
mov
in
test
add
inc
adc
std
rcr
adc
ss
scas
data16
adc
push
mov
cs
pop
test
jmp
mov
pop
out
mov
fidivr
enter
sbb
jle
aam
or
add
mov
push
(bad)
jge
div
pop
adc
in
pushf
mov
mov
cwde
pusha
loopne
fnstcw
or
fstp
sbb
pop
jmp
mov
mov
cld
out
jg
adc
sti
mov
ja
mov
sbb
jmp
cmp
or
sbb
xor
daa
(bad)
cmp
mov
leave
adc
fcomp
xacquire
mov
minps
push
outs
cld
repz
mov
xor
aaa
jne
mov
push
aaa
jae
stc
and
ins
add
sub
push
cmps
sub
dec
cmp
call
or
ja
sub
jns
pusha
jbe
mov
dec
arpl
pop
stc
popf
sub
xchg
mov
xchg
popf
adc
jle
push
adc
mov
jmp
cmps
add
jmp
cwde
dec
dec
lahf
cmp
cli
dec
mov
xor
dec
sbb
adc
fst
enter
ins
push
push
(bad)
and
ret
shl
adc
jle
sub
enter
stos
dec
sahf
loopne
popa
jo
ss
shl
add
mov
xlat
cs
and
cs
fadd
jns
in
jl
(bad)
std
sti
push
mov
push
in
stos
xor
icebp
out
stc
cdq
or
sub
sbb
adc
push
jne
adc
mov
mov
and
adc
movs
inc
xor
popf
cmp
in
or
pop
push
push
lods
ror
jge
xchg
(bad)
dec
xor
add
mov
ret
mov
adc
pop
inc
int
mov
push
out
adc
mov
or
ds
and
repnz
nop
push
fbstp
lods
js
and
pop
mov
mov
pop
test
mov
or
mov
fisttp
rcr
xor
scas
into
call
xchg
jle
mov
jp
push
sbb
or
sbb
adc
imul
cmp
ror
stc
xor
push
sbb
aaa
inc
xchg
stos
pop
retf
push
jl
or
or
mov
cmp
fnclex
adc
cld
nop
lock
ss
data16
dec
cmp
(bad)
jge
pop
and
sbb
addr16
rol
mov
inc
sbb
xor
iret
ds
cmp
pushf
popa
pop
jbe
sti
xchg
pop
xchg
in
fiadd
imul
addr16
mov
imul
test
lds
inc
add
sub
jbe
arpl
cmp
fwait
pop
loope
sti
dec
jmp
pop
aad
jmp
in
inc
cdq
neg
dec
push
xchg
mov
jge
add
xchg
scas
mov
mov
lahf
push
fnstsw
ss
inc
add
retf
xchg
fnstenv
cs
(bad)
(bad)
pushf
pop
mov
cs
mov
call
mov
pop
or
xor
adc
icebp
sub
mov
rcr
or
fwait
jg
mov
sbb
xchg
push
(bad)
(bad)
lods
jp
call
jl
xchg
fwait
jno
imul
dec
not
mov
mov
xchg
daa
adc
call
div
les
and
cmp
add
scas
inc
scas
mov
test
inc
push
sbb
mov
retf
frstor
pop
sti
cmp
jecxz
cdq
retf
repz
add
fdivr
mov
add
aaa
cld
outs
push
out
scas
sar
(bad)
xor
mov
inc
les
fdiv
cmp
sbb
cli
cmc
adc
and
dec
cmp
fs
sti
jmp
sub
fld
push
shr
cwde
adc
ins
sbb
sbb
loop
imul
scas
mov
(bad)
push
icebp
adc
es
test
movs
adc
jb
ficom
add
lock
nop
push
ss
xor
jmp
outs
mov
sub
ss
test
in
xor
mov
mov
cmp
inc
sbb
sbb
add
dec
xchg
repz
mov
xchg
mov
pop
stos
push
mov
push
(bad)
xor
cmp
add
pop
or
in
jecxz
mov
and
loope
sub
stc
and
or
push
pop
add
push
pusha
ja
cmps
push
and
fwait
call
popf
jne
mov
adc
call
out
mov
hlt
add
push
push
jns
push
xor
shr
test
xchg
das
(bad)
out
lods
das
push
pop
mul
cld
(bad)
add
push
jno
iret
hlt
or
in
stos
iret
jb
push
mov
mov
ds
repnz
outs
les
mov
xor
or
dec
fdiv
mov
fwait
mov
cmps
jmp
lods
retf
xor
dec
ret
mov
or
leave
test
and
cmc
mov
inc
(bad)
inc
mov
xchg
mov
cmp
cmp
stos
jp
xchg
xchg
test
jne
loopne
push
stos
mov
mov
jle
test
shl
out
mov
retf
loope
fild
mov
inc
cmp
dec
sbb
push
push
cmp
int3
ss
mov
jp
cmps
sub
(bad)
mov
sub
(bad)
call
ins
mov
cli
sub
cmps
jns
jg
in
neg
xchg
enter
sbb
das
push
ror
adc
add
inc
fld
add
xor
in
mov
jbe
call
jmp
js
cmp
shl
shl
jp
je
data16
push
sbb
aam
push
outs
push
cs
push
inc
sbb
xor
or
pop
das
dec
retf
mov
jns
nop
jo
jo
or
mov
in
cmp
pop
test
mov
lods
scas
or
gs
or
pop
(bad)
repz
movs
and
sbb
pusha
fs
or
adc
gs
mov
dec
je
mov
jno
mov
adc
stc
fbstp
iret
repz
mov
and
fld
sbb
jmp
(bad)
test
xchg
addr16
xchg
fmulp
and
cs
push
call
in
mov
out
ret
sar
repz
cs
movs
test
jns
aaa
gs
mov
jmp
imul
push
adc
test
and
cmp
inc
popa
fnsave
fs
ret
cmp
push
(bad)
imul
loopne
ret
sbb
cmp
cmp
out
les
mov
jo
and
mov
lock
mov
and
pop
ss
mov
mov
out
and
jns
sbb
mov
ret
mov
popa
push
xor
vmovntps
icebp
sub
mov
cmp
ins
sub
dec
mov
mov
adc
cli
mov
outs
repz
iret
dec
xor
xor
adc
or
mov
add
xchg
and
ror
xchg
mov
and
popf
movs
pop
lock
loopne
and
xor
(bad)
movs
stos
inc
inc
(bad)
adc
ret
ins
or
idiv
fist
pushf
outs
pop
test
dec
xor
pop
cmc
clc
pop
and
dec
mov
std
iret
imul
(bad)
mov
jb
mov
(bad)
adc
xor
call
test
aad
popf
sar
jbe
fs
cmp
ins
mov
outs
adc
mov
and
adc
mov
mov
or
inc
fstp
icebp
mov
ds
xor
pop
mov
cs
inc
jp
rol
aad
fisttp
push
pop
and
popf
inc
xor
imul
xor
ret
dec
arpl
xlat
stos
push
es
pushf
jge
arpl
stc
(bad)
lahf
mov
inc
test
call
or
jb
xlat
sbb
mov
and
stc
div
(bad)
push
jae
sbb
inc
mov
icebp
aaa
aas
mov
ja
jbe
mov
add
mov
int3
adc
sbb
mov
aam
sbb
rcl
rcr
mov
shr
jbe
inc
std
xor
loopne
stos
sub
int
test
test
dec
mov
in
pusha
jae
jno
pop
mov
inc
popa
push
push
mov
fidivr
mov
in
mov
lock
mov
add
shr
jbe
leave
loopne
movs
lods
or
aas
das
int3
retw
aaa
push
mov
pusha
fwait
adc
inc
sub
jmp
jecxz
mov
inc
adc
xchg
push
stc
popa
add
fst
shl
xchg
pop
ror
push
rcr
in
mov
arpl
retf
je
in
leave
repz
push
ret
push
adc
fs
dec
shl
cmp
out
push
retf
xor
rcl
jns
outs
mov
and
out
fwait
and
in
call
add
jmp
sub
cmp
int
inc
gs
inc
loopne
(bad)
xor
inc
sbb
mov
outs
mov
pop
dec
add
sbb
and
inc
(bad)
cmp
mov
pop
leave
add
imul
and
retf
cmp
in
jp
and
push
dec
jmp
push
sub
aaa
ret
push
inc
imul
enter
cs
mov
outs
lods
adc
enter
or
add
xor
popa
add
inc
fwait
sbb
push
pop
(bad)
in
and
cmps
retf
shr
sbb
jno
inc
cmp
or
push
rcl
xor
fidivr
xor
call
jae
mov
daa
cdq
cmp
aad
sbb
clc
mov
sub
leave
(bad)
arpl
pause
retf
popf
sub
pop
xchg
fnstsw
sub
sbb
and
xor
cmp
ss
sahf
pop
dec
popf
data16
sbb
fdivr
cdq
enter
cmc
ja
dec
popf
fcmovb
push
mov
jp
or
inc
out
ret
xor
or
ss
inc
into
cld
xor
std
out
(bad)
sbb
aaa
mov
arpl
inc
mov
adc
sub
mov
xchg
pop
in
out
psrlw
(bad)
add
xchg
arpl
sbb
imul
mov
xchg
test
mov
cmp
cmp
and
ins
(bad)
retf
fmul
jnp
ins
inc
dec
imul
jmp
mov
jl
and
gs
cmp
inc
and
jo
daa
or
in
xchg
lock
mov
sbb
jecxz
cmp
xlat
jo
pop
jmp
mov
imul
ds
shl
sbb
popa
pop
add
jnp
addr16
sub
ja
pop
clc
push
popf
fisub
mov
jge
inc
jge
sbb
leave
inc
test
test
push
xchg
and
inc
retf
sbb
daa
mov
mov
xor
js
in
dec
jne
test
cmp
cmp
aaa
in
adc
push
loope
fst
test
scas
clc
adc
dec
xchg
jnp
or
xchg
pop
mov
into
push
mov
add
and
inc
or
outs
mov
jno
mov
and
sbb
mov
lds
sar
sbb
ret
push
fdivr
sub
pop
jl
movs
cs
mov
xchg
imul
adc
push
jo
retf
int3
mov
pop
(bad)
jns
mov
mov
add
sub
or
jl
fadd
ss
into
add
xchg
cmps
and
or
cmp
int3
dec
xor
popa
push
fimul
inc
mul
cdq
out
pop
xchg
sbb
add
imul
cli
les
or
mov
inc
add
mov
(bad)
mov
aad
jmp
mov
neg
dec
push
pusha
pop
fsub
ficomp
fwait
xor
retf
aam
pop
enter
sbb
rol
cmp
clc
out
mov
cdq
(bad)
loope
cdq
popf
add
js
cmp
sub
das
(bad)
xor
jo
jle
or
sahf
out
or
xchg
popa
or
lods
mov
adc
pop
jp
xor
inc
ret
ret
or
or
jo
leave
or
jo
test
movs
xor
frstor
js
or
mov
enter
nop
fnstenv
push
cmp
test
or
or
xor
and
nop
mov
inc
or
dec
add
adc
xchg
lahf
jb
cdq
adc
fild
xor
xor
ffree
xabort
and
jo
adc
or
mov
out
cmc
lahf
sub
jnp
push
ins
or
push
ss
retf
push
enter
in
icebp
mov
lock
out
mov
lock
lock
clc
push
adc
sub
mov
das
xor
cli
mov
jno
icebp
in
push
(bad)
ds
pop
outs
stos
adc
das
adc
dec
inc
and
mov
lea
push
xchg
fiadd
rol
sbb
aad
cdq
jnp
imul
jmp
xchg
lea
jecxz
jp
icebp
and
pop
std
nop
add
(bad)
fadd
inc
dec
ret
shr
xor
ds
mov
xor
cmp
sbb
test
push
(bad)
and
mov
mov
shr
jb
xor
xor
cmp
add
ins
arpl
mov
mov
xchg
dec
dec
hlt
out
add
xchg
mov
ja
pop
xchg
push
dec
jg
into
pop
or
xchg
adc
xchg
std
pushf
in
arpl
popa
mov
in
iret
mov
test
jbe
pop
mov
clc
aas
shl
pushf
call
cli
test
add
sub
push
jl
xchg
popa
in
rol
or
mov
ret
popa
fs
adc
push
in
cld
sbb
es
into
stos
pushf
push
cmovo
cmps
iret
jmp
inc
test
in
mov
aaa
addr16
into
(bad)
xor
mov
xchg
mov
fiadd
mov
mov
(bad)
mov
ret
daa
int
stos
test
sub
cmp
push
outs
dec
mov
inc
enter
fst
inc
jns
call
push
mov
(bad)
cld
sub
(bad)
lock
div
mov
loop
(bad)
jle
ja
cmps
cmp
int3
fwait
gs
dec
xchg
adc
clc
xchg
stc
xor
inc
cmp
add
daa
repz
lea
dec
mov
retf
lock
call
and
jno
jbe
push
inc
add
popa
pop
pop
pop
mov
fxam
ret
lock
pop
rcr
xlat
mov
repz
cwde
mov
sti
push
or
fild
movs
xor
inc
add
jno
sub
pop
xor
jb
fbld
or
jae
imul
shl
xor
inc
mov
mov
jmp
xor
fdivr
jmp
jbe
(bad)
addr16
ins
push
dec
sub
pop
test
ss
sub
mov
stos
inc
add
outs
add
push
(bad)
mov
pop
lahf
jecxz
sub
nop
icebp
int
cwde
xor
mov
mov
aam
in
ja
xor
test
xor
enter
push
inc
cmp
jg
outs
mov
rcl
xor
pushf
(bad)
sbb
xchg
mov
add
jp
mov
mov
es
(bad)
cs
push
arpl
cwde
es
sbb
stc
fsubr
pop
sbb
jnp
gs
outs
mov
pusha
dec
movs
aaa
dec
pop
mov
scas
cli
push
lahf
repz
ins
cld
inc
cmps
dec
inc
jge
lea
and
jbe
repnz
adc
cmp
cwde
dec
pop
clc
sbb
jmp
push
mov
and
dec
and
data16
xor
mov
fist
jle
adc
sar
inc
push
inc
retf
fild
or
xchg
stos
mov
movs
mov
or
add
loopne
cli
pop
ja
popf
nop
xor
mov
jbe
inc
ins
sahf
aad
fld
lods
int
ins
sub
cmp
and
pop
test
mov
fadd
xchg
(bad)
movs
mov
rcr
into
mov
mov
mov
jbe
data16
cld
push
add
(bad)
rcl
push
dec
movs
cmp
mov
xchg
or
fnstenv
adc
add
pop
icebp
pop
xor
sbb
xlat
mov
mov
sbb
aam
imul
push
retf
pop
lods
in
test
mov
sub
jae
fwait
xor
repnz
jnp
jne
sub
xlat
iret
ins
shl
imul
call
dec
jecxz
sbb
mov
cwde
iret
imul
inc
and
mov
inc
fwait
push
xlat
lods
pushf
and
aas
mov
ror
outs
jmp
lea
(bad)
and
push
imul
(bad)
mov
data16
jle
inc
cwde
out
(bad)
add
push
out
test
loopne
aam
je
mov
bound
mov
out
lock
jnp
hlt
push
test
sbb
ret
inc
mov
out
sub
add
mov
pop
mov
mov
out
fs
iret
and
addr16
test
ret
jno
and
jp
mov
inc
mov
mov
or
add
icebp
and
rol
(bad)
ss
fisub
jbe
pop
push
xor
aas
push
dec
fisttp
es
inc
adc
ja
add
stc
test
mov
lods
inc
mov
test
adc
cmp
test
mov
stos
arpl
(bad)
movs
addr16
arpl
and
(bad)
mov
jl
test
es
push
retf
arpl
jae
out
push
(bad)
push
fcom
inc
repz
push
and
jge
fsubp
cwde
xor
cs
sbb
scas
mov
mov
mov
mov
jecxz
jecxz
xchg
es
cmps
dec
inc
rol
test
sub
imul
push
push
repnz
out
gs
scas
lods
lock
nop
out
iret
test
arpl
adc
add
stos
and
clc
fidiv
cmp
mov
shl
lods
hlt
push
push
cmp
or
ss
push
cmps
loop
pushf
mov
jge
pop
push
pop
out
out
sbb
icebp
jbe
in
loope
jl
into
test
fnsave
mov
jo
gs
loope
stos
test
addr16
scas
arpl
cmp
dec
cmc
pop
and
cwde
and
or
cwde
loope
cli
jle
in
fild
fcomp
into
out
dec
(bad)
iret
imul
sbb
pop
inc
call
add
mov
fmul
xchg
dec
std
or
jae
mov
cmps
xchg
jbe
and
xor
add
xchg
fnsave
sbb
call
ds
dec
inc
adc
add
cwde
repnz
popa
mov
push
cld
aam
pop
je
bound
das
add
xor
aam
xchg
iret
mov
enter
dec
sub
xor
out
xchg
sub
aas
lds
std
inc
xchg
repnz
fsubr
mov
(bad)
stos
cmp
aaa
retf
mov
vpperm
mov
xor
jo
test
xchg
add
cmp
jne
jl
test
jg
or
mov
mov
xchg
call
outs
(bad)
xor
adc
xchg
mov
dec
fdivp
push
rcl
sub
test
mov
cmp
loope
mov
cmp
mov
icebp
daa
pop
jnp
ror
push
and
sahf
pop
mov
mov
jne
push
je
push
clc
sub
sub
sbb
adc
mov
loop
cmc
mov
fadd
ret
popa
jmp
ins
pop
dec
push
pop
xor
int
sub
ror
sti
test
sub
mov
test
add
sahf
ja
pop
repz
xchg
push
int3
ss
sub
fnstcw
inc
mov
loope
push
scas
push
or
push
sbb
popa
pop
push
dec
pusha
pop
lahf
adc
test
imul
mov
xor
fstp
xchg
data16
mov
jp
ss
and
add
imul
lods
rol
cmps
lahf
push
inc
retf
cmp
int3
push
jns
ds
dec
std
in
sti
mov
daa
dec
test
cwde
(bad)
xlat
outs
jecxz
pop
bound
pusha
fdivr
cmp
or
aas
xchg
mov
retf
clc
mov
mov
jne
stos
scas
jno
lock
mov
cli
sub
ds
popa
(bad)
stc
mov
add
fdiv
push
out
or
imul
cmp
pop
aad
test
addr16
add
pop
xor
dec
bnd
push
sahf
cli
(bad)
jmp
aaa
dec
push
xchg
adc
mov
leave
dec
sti
ins
cmps
cmp
sbb
mov
cwde
fldcw
cmp
or
push
in
mov
sbb
inc
lea
loopne
sahf
shr
lahf
int3
in
mov
retf
xchg
jl
lea
clc
mov
or
inc
dec
pop
popa
or
sbb
mov
ret
xor
jl
xchg
leave
dec
mov
(bad)
enter
(bad)
inc
adc
outs
jl
repz
nop
adc
xchg
jl
into
cmps
pop
idiv
sub
ret
mov
neg
xor
dec
mov
ret
sub
sbb
mov
jle
leave
ret
cmp
adc
mov
adc
cmp
jmp
enter
test
push
push
xor
cmp
sub
sub
inc
lahf
dec
pop
retf
mov
movs
test
add
add
aam
xor
pop
xor
mov
in
and
push
inc
lods
imul
in
jae
jl
ins
not
js
dec
fldenv
pop
mov
push
xchg
add
retf
test
xchg
cwde
in
pop
mov
out
push
xor
add
(bad)
loop
or
xchg
loop
outs
sub
and
xor
cwde
fs
dec
pop
int
sti
imul
fcomp
sbb
lods
iret
(bad)
or
jmp
sbb
mov
sub
adc
mov
jmp
shl
ja
test
shl
mov
fst
retf
xor
pop
adc
inc
xor
adc
cmp
fcomp
mov
jp
sbb
sbb
mov
xor
lods
jns
adc
jle
jge
and
mov
cmps
inc
cmp
cmp
out
inc
inc
int
dec
std
in
rol
punpckhdq
bound
aad
mov
jae
pop
sub
outs
mov
pop
fdivr
sbb
shl
jne
fs
inc
pushf
cli
fiadd
jecxz
pop
jne
outs
xchg
sub
pushf
mov
retf
stc
jmp
jmp
sbb
mov
fwait
mov
fstp
xchg
cmc
sub
xchg
and
mov
int
fisttp
mov
fld
pop
and
neg
or
(bad)
imul
into
jnp
mov
dec
fwait
xor
xchg
mov
mov
xor
mov
and
cld
ds
stc
mov
jns
sti
imul
jmp
inc
iret
add
push
push
aaa
inc
cmp
mov
cmp
add
or
dec
xor
adc
xchg
xchg
mov
test
mov
rol
adc
cmp
mov
push
add
inc
sub
data16
mov
jmp
inc
sub
mov
bound
pusha
rcl
jb
mov
jmp
adc
and
sub
lods
dec
dec
mov
scas
ror
fmul
inc
adc
cmc
inc
mov
cmp
cmp
push
nop
popf
sbb
mov
je
dec
sbb
lods
xchg
xchg
ja
fwait
and
(bad)
int
sub
mov
scas
mov
pop
push
jae
sahf
mov
push
sub
mov
pop
pop
pop
sbb
loop
and
call
ins
jbe
pop
inc
sbb
std
pop
lahf
outs
ins
mov
clc
lock
movs
je
fst
and
pop
adc
dec
dec
sub
shr
jnp
xor
pop
imul
ret
push
movs
sub
mov
adc
outs
int
arpl
sahf
in
mov
test
push
mov
mov
jae
enter
popa
pop
xchg
(bad)
sti
div
inc
xchg
imul
mov
(bad)
jmp
xchg
push
not
shl
and
and
sub
rcl
cdq
xchg
pop
loope
xor
and
add
adc
enter
ins
int
jo
cmp
mov
inc
sub
push
and
mov
adc
(bad)
push
xor
and
sbb
daa
pop
stc
(bad)
das
xor
pop
sbb
xlat
and
pop
les
jmp
mov
or
jg
adc
nop
pop
lea
add
ss
inc
mov
add
dec
in
jp
sub
loope
cmps
in
xchg
and
dec
or
ja
aad
or
push
or
cmp
outs
aaa
loop
pop
pop
icebp
and
mov
push
inc
adc
lods
and
lds
mov
neg
push
ror
stc
lods
lahf
test
sbb
pusha
lea
(bad)
mov
or
pop
push
rcr
or
jbe
in
and
popf
jo
sbb
lock
xchg
cmp
cmp
mov
push
sti
test
add
outs
(bad)
cmp
jle
dec
ror
sub
adc
aaa
mov
ret
aaa
cmps
xchg
(bad)
int
pop
sbb
cmp
pop
push
int
add
push
push
adc
loopne
in
push
jmp
lahf
add
jne
cmp
loope
imul
fidivr
fwait
dec
xor
aam
pop
loope
jbe
xchg
call
in
dec
enter
cmc
sti
mov
pop
cld
cmp
xchg
or
cmp
aad
pop
rcl
dec
pop
fld
push
aad
mov
jo
xor
push
mov
gs
fwait
add
pop
sbb
xchg
pop
or
loope
rcr
ins
jmp
mov
ucomiss
adc
cs
scas
mov
mov
sbb
or
aaa
xchg
mov
out
les
inc
cs
xor
enter
push
pop
dec
popf
inc
mov
pop
lea
sbb
inc
xchg
arpl
xor
in
fs
sub
xchg
sbb
dec
gs
lods
mov
fmul
mov
jno
pusha
inc
fisttp
push
adc
dec
movs
ss
and
in
stos
jns
push
leave
retf
inc
pop
out
push
or
js
xor
and
clc
sti
fst
dec
sub
inc
retf
push
xchg
or
inc
scas
mov
mov
and
pop
movs
nop
jo
sbb
(bad)
jmp
dec
sub
(bad)
out
xchg
sbb
push
call
jns
fld
pop
stos
and
jnp
stos
jno
jmp
sub
or
(bad)
in
xor
mov
mov
jmp
in
mov
push
dec
xor
shl
sub
das
clc
mov
out
xchg
mov
and
sub
jl
scas
add
out
pop
ins
push
pusha
mov
imul
clc
push
mov
add
inc
xor
adc
xchg
outs
in
xchg
in
pop
inc
out
mov
in
mov
jg
test
mov
mov
pop
leave
call
mov
idiv
jbe
rcr
repz
and
adc
mov
cwde
test
call
iret
fwait
je
dec
mov
and
outs
push
cmp
cmps
arpl
dec
enter
push
sbb
cmps
jo
cwde
loopne
pop
pop
push
mov
test
dec
icebp
clc
nop
dec
lods
mov
cmp
jge
xchg
mov
mov
jle
push
push
add
pop
jl
and
cli
xchg
jg
adc
pop
xor
sbb
adc
outs
adc
retf
jmp
xor
int
in
lds
dec
jnp
mov
(bad)
retf
or
xor
mov
das
leave
test
push
movs
cmp
fs
jmp
mov
shr
xchg
or
fisubr
fnstcw
pop
xor
sbb
es
xor
ror
cmps
push
mov
into
(bad)
pop
cwde
mov
je
popa
mov
imul
inc
and
fisubr
clc
int3
ins
or
fs
ret
pop
push
xor
(bad)
popf
push
shl
es
out
out
cmp
and
dec
jae
adc
sbb
cmp
or
mov
cmps
cmps
inc
es
push
or
in
test
test
and
xchg
and
jg
imul
dec
fnstenv
cmp
push
xchg
dec
xchg
gs
addr16
mov
add
test
or
pop
mov
call
(bad)
test
jbe
inc
mov
cs
sti
popf
push
add
push
lods
jmp
jp
jbe
retf
in
xor
jecxz
jo
xchg
jns
pop
or
inc
repnz
mov
add
sub
xchg
retf
fidivr
adc
rcr
cmp
in
(bad)
(bad)
stos
sbb
pop
pop
and
mov
inc
out
mov
add
nop
loope
sub
push
mov
out
cmp
add
test
add
movs
push
cmps
into
adc
dec
push
xor
pmullw
(bad)
cld
adc
mul
inc
test
adc
shr
ror
xor
mov
in
mov
loop
adc
mov
push
xchg
xchg
les
push
pop
aaa
dec
adc
push
vmovaps
cmps
scas
stos
mov
push
arpl
loop
inc
jl
fadd
pusha
sbb
mov
ins
mov
movs
mov
out
add
push
push
sub
ret
fs
dec
xor
push
sub
cmps
mov
cwde
adc
das
xchg
or
rcr
int
jb
adc
cmp
imul
or
cld
push
imul
addr16
xchg
sub
test
mov
nop
jecxz
out
iret
fdiv
mov
mov
imul
push
add
adc
jb
jle
and
lods
mov
sub
popf
dec
add
push
push
pavgb
and
inc
cdq
ins
fcmovnbe
std
cmps
pop
enter
or
or
scas
jns
mov
push
dec
sub
fistp
xor
inc
or
cld
push
shl
lock
imul
push
xchg
mov
in
add
mov
cmps
int
call
cmps
lods
dec
xor
sbb
mov
sbb
rol
adc
lea
cdq
cmp
in
mov
(bad)
xchg
jg
out
push
cmp
lods
mov
aad
xlat
pop
bound
lds
xchg
cmp
push
cmp
cmp
inc
xor
fistp
or
scas
jno
ror
fs
xor
retf
(bad)
sbb
push
cmp
aad
loop
lea
cmp
scas
add
lods
hlt
call
push
cmp
sub
mov
repz
fs
add
loopne
ror
or
pop
dec
fwait
jns
imul
sub
add
xchg
push
lods
icebp
push
inc
cmp
xor
or
lds
jb
xchg
xchg
in
icebp
fistp
sbb
int3
(bad)
mov
cmp
push
ins
sti
add
lods
adc
aas
ror
jbe
stc
aam
sbb
pop
jmp
or
pop
(bad)
(bad)
jle
inc
and
(bad)
jl
cmp
gs
and
push
call
adc
and
stos
and
xchg
inc
int
das
fidivr
shr
outs
stos
and
cmp
scas
les
push
sub
cmp
adc
mov
inc
jo
cdq
dec
imul
inc
inc
pop
bound
or
popf
jbe
scas
push
ficom
add
xchg
xchg
(bad)
jle
dec
inc
mul
lds
mov
mov
sbb
mov
mov
push
mov
adc
rol
test
push
pop
xchg
ins
jne
daa
(bad)
loop
idiv
pop
gs
dec
jmp
sbb
out
and
mov
pop
ret
sub
fisttp
cli
pop
push
add
mov
add
jmp
int3
xor
or
xor
movs
fwait
sbb
cmp
outs
add
mov
sahf
fst
scas
dec
mov
adc
inc
push
inc
mov
jno
aad
sub
add
mov
repz
pushf
test
sti
clc
ins
adc
sub
jl
add
xchg
adc
adc
mov
lahf
sub
pop
and
dec
iret
push
xor
test
popf
and
mov
mov
imul
movs
std
(bad)
test
inc
inc
or
mov
ss
mov
inc
lea
xor
aad
ficom
sbb
adc
cwde
jp
push
or
test
cmp
aas
jo
cmp
dec
cdq
mov
loop
mov
sub
fwait
test
cmp
(bad)
pop
jecxz
popf
aaa
push
jmp
and
pop
movs
nop
out
mov
ins
das
fisttp
xor
(bad)
dec
and
mov
mov
mov
jnp
sub
sub
std
shl
jne
std
retf
div
outs
xor
and
cmp
push
and
add
cwde
and
mov
add
iret
mov
mov
repz
lods
(bad)
or
mov
fwait
data16
repz
pop
stos
stc
loope
and
retf
xor
sbb
sbb
pop
push
test
test
jmp
test
and
add
sbb
dec
sbb
push
jb
sbb
out
mov
sar
scas
xor
jp
(bad)
cmp
nop
mov
stc
jle
adc
sub
arpl
push
enter
clc
addr16
and
mov
sbb
and
mov
adc
pop
test
mov
mov
loope
paddusb
push
test
(bad)
fisttp
shl
arpl
lods
arpl
push
shr
out
int3
or
mov
add
das
sti
pop
sub
sahf
stos
cmp
cmp
jp
sbb
test
ret
pop
mov
cli
lods
aas
add
iret
dec
jbe
(bad)
dec
sahf
xchg
xchg
sbb
pop
adc
(bad)
jg
(bad)
fucomi
in
es
ins
mov
bound
lea
cdq
test
inc
adc
imul
lods
fidiv
xor
dec
push
lods
mov
lods
out
loope
jno
pushw
movs
cmp
fsub
ins
xor
dec
cdq
cmp
sbb
(bad)
out
xor
jns
dec
pop
jno
ror
(bad)
sti
add
push
mov
add
clc
cmp
pop
repz
hlt
es
xchg
fdivr
inc
sbb
xchg
push
mov
fwait
arpl
inc
sti
imul
jnp
lock
shr
cwde
dec
leave
lods
test
add
aas
mov
lods
mov
dec
jno
mov
xchg
dec
divps
pop
fiadd
push
mov
dec
call
shl
xchg
xor
pop
fst
inc
or
imul
push
out
mov
pop
int3
repnz
adc
xor
adc
mov
rol
popf
rcr
push
and
stos
xchg
jmp
sbb
pop
sub
not
cmp
js
adc
jge
xor
push
inc
or
movs
pop
not
mov
scas
adc
pop
sahf
mov
ret
pop
xlat
mov
aad
mov
test
jne
sar
cld
pop
(bad)
pop
push
push
sbb
jbe
shr
rcr
push
addps
push
mov
dec
mov
sub
idiv
call
es
dec
push
jae
aaa
dec
js
popa
rol
sub
and
loopne
pop
in
jno
cdq
ret
movs
hlt
xchg
cmp
enter
call
sub
int
inc
into
mov
adc
popa
es
inc
sbb
fwait
or
rcr
and
xchg
xlat
leave
inc
cmps
inc
pop
mov
xchg
jge
dec
ret
mov
mov
sahf
mov
sbb
mov
popf
mov
and
mov
dec
scas
mov
jmp
sub
fidiv
dec
int
mov
ds
mov
mov
xchg
xor
mov
cs
cmp
add
imul
jecxz
mov
sbb
and
or
out
cli
push
and
stos
aad
pop
sub
adc
push
xchg
sub
test
iret
add
push
and
jno
mov
add
sbb
icebp
scas
jo
ins
(bad)
fwait
mov
sbb
dec
retf
sahf
jnp
mov
in
(bad)
cdq
cli
rcr
(bad)
jle
int3
xor
mov
gs
mov
push
sub
dec
mul
xchg
retf
jge
pop
cli
in
sub
add
(bad)
sbb
stc
and
jge
dec
add
(bad)
xchg
lods
aaa
push
(bad)
(bad)
or
mov
adc
add
icebp
push
or
xor
xchg
jb
mov
test
dec
punpcklbw
and
(bad)
das
ss
popa
aam
inc
les
xchg
mov
inc
sbb
jae
fiadd
xchg
inc
mov
(bad)
cmps
stos
mov
stc
outs
pusha
dec
jl
inc
outs
cmc
icebp
int3
jp
stc
ss
cmps
scas
add
pushf
fld
sub
(bad)
cmp
in
cld
aad
jae
sub
and
jne
push
popa
in
jmp
push
enter
and
outs
std
sbb
sar
fidivr
adc
inc
icebp
lods
push
outs
push
outs
add
mov
cs
mov
adc
or
xchg
inc
mov
or
pushf
inc
rcl
pop
xor
in
(bad)
int
mov
std
sub
pop
sub
inc
aaa
hlt
xchg
(bad)
fcomp
pop
sub
or
enter
jmp
loopne
shr
pushf
aaa
mov
mov
repz
js
test
mov
push
(bad)
mov
xor
pop
imul
iret
(bad)
lock
mov
xchg
dec
pushw
mov
dec
cmp
(bad)
int3
push
and
sub
(bad)
or
sbb
push
leave
into
popa
in
out
or
les
(bad)
loopne
outs
dec
idiv
pop
or
imul
mov
into
cmc
outs
fs
mov
outs
dec
add
ret
fld
add
mov
or
pop
lds
dec
mov
sti
add
ja
jg
jno
jmp
jl
fbstp
enter
into
pop
xchg
and
out
dec
(bad)
mov
xchg
lahf
sbb
mov
cmc
or
xor
mov
gs
sbb
cmp
fiadd
test
jnp
adc
nop
dec
out
stos
je
mov
inc
jg
inc
gs
repnz
xchg
inc
mov
aaa
xor
popf
frstor
out
inc
stos
sbb
repnz
stos
cmp
cmp
mov
push
mov
test
(bad)
mov
sub
cld
cmps
sti
xor
sahf
cmp
adc
out
out
mov
out
cmc
test
jnp
mov
jno
loop
jmp
inc
and
mov
shl
adc
scas
mov
leave
cmp
lods
inc
adc
imul
add
mov
and
and
cld
xchg
and
or
sub
add
mov
dec
xchg
fisubr
push
(bad)
(bad)
sbb
dec
push
dec
and
scas
pop
push
lahf
call
inc
pusha
xchg
in
fist
bound
mul
outs
cdq
hlt
jo
and
adc
and
dec
aas
mov
(bad)
push
clts
pop
pop
sbb
loopne
sub
and
push
lods
les
dec
aam
jne
push
push
dec
rol
pop
jp
or
and
pop
cmc
mov
or
std
daa
stos
mov
ins
sub
aad
test
push
jecxz
clc
push
mov
sbb
jmp
fcmovnb
xchg
push
out
pop
idiv
stos
adc
(bad)
mov
pusha
jo
jo
outs
stc
pop
mov
ss
pop
mov
push
xor
imul
mov
pusha
add
popa
pop
add
jge
push
pop
cmps
mov
cmps
push
scas
gs
lahf
call
xchg
xchg
add
jg
or
xchg
xlat
test
dec
popf
or
or
xchg
jg
jbe
(bad)
mov
jbe
enter
push
xlat
scas
mov
cmp
clc
jbe
rcr
dec
jp
cmp
(bad)
xlat
jmp
cmps
push
jge
icebp
mov
pop
mov
pop
fldcw
sahf
hlt
das
push
outs
cmp
adc
xchg
fisttp
push
add
stos
jae
dec
cmc
shl
mov
cmp
xor
inc
imul
cmps
xor
popa
repnz
aad
imul
mov
or
dec
int
popf
jns
dec
cmp
push
test
fstp
outs
iret
movs
into
fdiv
xor
rol
mov
je
cwde
sbb
bndstx
imul
sub
sbb
arpl
outs
test
fmul
(bad)
enter
xor
cmps
pop
nop
ficom
mov
cmp
or
or
int
and
mov
jne
loopne
data16
call
jecxz
lods
cld
and
pop
stos
pusha
test
mov
loope
xchg
mov
test
in
(bad)
cmp
cmp
mov
dec
push
ss
cmps
les
or
cmp
fisubr
sub
test
int
jl
xchg
scas
push
mov
iret
push
jle
dec
cdq
dec
xchg
in
mov
scas
popa
jmp
shr
jae
cmp
mov
test
jle
inc
push
add
add
mov
mov
pop
push
mov
xchg
add
cdq
(bad)
int3
ficomp
sbb
or
adc
inc
inc
cmp
pop
mov
gs
pop
and
inc
or
and
pushf
js
movs
add
or
sub
pusha
mov
add
stos
loopne
loopne
pop
cdq
xchg
xor
adc
inc
not
enter
ficom
jmp
fimul
pop
xor
jecxz
add
retf
mov
retf
(bad)
jae
xchg
mov
aas
add
outs
pushf
pop
pushf
xchg
adc
push
bound
outs
adc
cwde
lahf
cmp
cdq
dec
inc
mov
cdq
or
test
inc
addr16
pop
cmp
mov
pop
mov
sub
movs
mov
sub
std
jmp
out
and
dec
addr16
mov
push
dec
xchg
push
jae
sbb
adc
pop
outs
pop
push
inc
fdivr
div
pop
dec
xchg
cmps
aad
mov
je
je
mov
adc
add
pop
rcr
xchg
test
cmp
sub
mov
popa
jns
popf
in
cld
je
adc
bound
mov
dec
dec
push
call
sbb
gs
adc
test
mov
pop
inc
inc
rcl
xchg
cmp
ins
(bad)
sbb
mov
das
outs
dec
cmc
gs
jnp
fldcw
(bad)
outs
lea
or
jle
jl
dec
inc
fmul
not
dec
fcom
fwait
(bad)
adc
dec
fadd
enter
(bad)
mov
push
xor
sub
jle
cwde
sbb
stc
jae
cld
sahf
pop
jbe
fidivr
popf
test
push
dec
addr16
jmp
movs
mov
jge
ins
and
in
repnz
mul
mov
lahf
jmp
inc
xor
cdq
push
jmp
sbb
mov
fcom
pusha
call
bound
xchg
les
and
inc
lock
dec
lods
ss
xchg
out
or
push
in
(bad)
imul
aaa
stos
shl
add
js
cmp
push
jmp
test
cwde
adc
repz
cmp
adc
adc
inc
mov
or
xchg
cli
gs
dec
push
sbb
fnsave
add
sbb
into
(bad)
in
ror
in
js
adc
cmp
sub
les
ins
dec
ins
jae
test
jno
(bad)
movs
fsubr
repnz
push
jl
xor
loope
ins
(bad)
lahf
iret
adc
jae
push
adc
bound
sti
xchg
jae
(bad)
aas
(bad)
fmul
inc
xchg
sbb
add
jb
movs
clc
inc
ins
pop
mov
out
jp
jns
sete
js
jno
add
mov
data16
nop
data16
ror
fcomp
inc
lods
out
retf
cmp
dec
test
mov
dec
fidiv
in
cli
lods
fwait
sbb
mov
ins
mov
cmp
jne
xchg
cdq
stos
inc
inc
push
push
and
cld
cmp
inc
(bad)
loope
pop
cs
lds
cli
xor
and
movs
int3
add
push
fisttp
movs
arpl
push
pop
dec
jge
into
pushf
inc
cmp
(bad)
mov
ret
idiv
cmp
les
fisub
mov
xchg
mov
xchg
xchg
jmp
xor
in
or
lods
shl
das
adc
mov
test
jge
(bad)
xchg
pop
data16
push
stos
and
pop
cli
fist
hlt
fisttp
dec
jne
pop
pop
or
xor
fild
sar
or
bound
imul
mov
ret
mov
jge
sub
xor
loope
inc
rcr
scas
out
or
enter
mov
dec
cmp
fnstsw
adc
call
mov
lahf
sar
cmp
lahf
test
cmp
jbe
push
imul
lds
mov
mov
mov
enter
jno
xor
loopne
lahf
push
xor
(bad)
cli
dec
repz
ja
push
xchg
inc
jo
sub
js
shr
inc
test
xchg
inc
pop
jnp
ins
mov
in
ficom
mov
test
sbb
mov
clc
add
popa
jno
call
shl
or
dec
inc
inc
ffreep
sbb
push
adc
leave
jns
mov
pop
cmps
icebp
(bad)
mov
mov
mov
jmp
test
jge
pop
cmp
cmps
aad
or
xor
xor
repnz
xchg
mov
adc
imul
xchg
sub
or
ret
push
cwde
pushf
inc
inc
rcr
jbe
mov
mov
mov
push
push
nop
xor
push
mov
mov
cdq
pop
mov
ror
rcr
daa
and
mov
mov
cmp
addr16
lock
jmp
call
adc
adc
sbb
inc
jb
ins
mov
xchg
popa
cmp
rol
nop
push
xchg
mov
xor
fstp
retf
xchg
repz
test
fisub
aad
inc
mov
mov
fsub
xor
fbstp
cld
imul
sbb
add
outs
inc
scas
or
fdivr
retf
movs
cdq
addr16
popf
ja
mov
shr
enter
push
sub
test
add
ret
cmps
mov
outs
add
je
dec
jne
and
or
xor
je
popf
fcomp
xor
ja
lods
and
jle
mov
inc
or
jp
repz
sbb
cmps
out
or
cmp
icebp
mov
cmp
pop
or
jb
sub
inc
pop
iret
cwde
push
stos
es
xchg
popa
into
jle
data16
mov
test
repnz
ret
sbb
mov
gs
dec
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
cmovb
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
push
inc
add
and
add
inc
add
or
add
and
jb
outs
addr16
add
add
imul
add
inc
push
dec
inc
add
add
imul
add
inc
ins
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
push
add
add
add
stos
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
repnz
push
add
add
pop
push
add
add
push
add
add
or
push
add
or
push
add
loop
out
or
add
add
mov
add
or
(bad)
push
out
or
add
add
add
add
pop
adc
push
add
adc
push
add
adc
push
add
adc
push
add
push
add
add
adc
or
dec
add
add
add
adc
push
add
adc
adc
add
add
adc
push
add
jmp
adc
add
add
push
add
add
sbb
push
add
sbb
push
add
sbb
push
add
add
sbb
push
add
push
add
add
out
or
add
out
or
add
add
add
aam
push
add
add
sbb
push
add
sbb
sbb
add
sbb
add
add
sbb
add
add
sbb
add
add
push
add
add
enter
arpl
push
add
add
enter
js
out
or
add
add
add
add
sbb
add
add
and
push
add
add
and
push
add
jns
push
add
add
and
add
add
and
iret
and
out
enter
add
enter
sbb
repnz
push
add
repnz
push
add
outs
es
add
add
add
add
es
in
es
add
iret
add
add
add
add
add
push
add
xor
add
pop
add
or
add
add
sbb
add
pop
add
xor
add
or
add
add
pop
add
xor
add
or
add
add
or
add
add
add
add
or
add
add
or
add
add
add
adc
or
add
add
js
add
add
add
js
add
adc
aam
jmp
add
add
add
add
jp
adc
add
scas
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
movs
add
add
add
push
jmp
add
add
add
jmp
add
add
add
jmp
add
adc
or
add
add
add
adc
or
add
adc
add
add
add
add
add
add
adc
or
add
add
add
add
add
adc
or
add
add
add
add
add
adc
or
add
add
add
adc
or
add
adc
add
add
add
add
add
add
jmp
add
add
add
add
add
add
adc
or
add
adc
add
add
adc
dec
add
add
adc
push
add
add
adc
push
add
add
push
add
xor
add
push
add
xor
add
push
add
xor
add
add
add
add
xor
add
pop
add
xor
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
mov
add
add
rcr
add
add
add
ret
sbb
add
add
add
(bad)
sbb
add
add
add
leave
sbb
add
add
add
int3
sbb
or
add
add
add
and
or
add
add
add
jmp
add
add
add
and
or
add
add
add
and
or
add
add
add
add
add
add
add
add
add
and
or
add
add
add
and
or
add
add
add
and
or
add
add
add
and
or
add
add
add
jmp
add
add
add
and
or
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
or
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
and
or
add
add
add
and
or
add
add
add
and
or
add
add
add
and
or
add
add
add
and
or
add
add
add
and
or
add
add
add
and
cmps
add
add
add
add
cmps
add
add
add
push
and
test
popa
add
add
add
and
test
bound
add
add
or
jmp
add
add
add
and
test
add
add
and
test
add
add
add
add
add
and
test
add
add
and
stos
add
add
add
push
and
stos
add
add
add
and
stos
add
add
add
and
jmp
add
add
add
and
stos
add
add
add
sub
stos
add
add
add
sub
add
add
add
and
stos
add
add
add
jmp
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
push
add
add
add
add
add
add
add
add
add
test
pop
add
add
add
or
add
test
add
add
add
or
add
add
add
repz
add
add
or
add
test
or
add
and
or
add
test
push
add
test
repz
add
add
add
or
add
add
add
add
add
add
add
or
add
add
repz
add
add
add
add
or
xchg
add
test
test
adc
test
jns
adc
test
test
adc
test
ret
add
add
add
add
add
add
add
add
add
add
add
or
add
add
enter
test
test
xor
test
test
xor
and
test
xor
jp
test
xor
jl
test
add
mov
or
add
sahf
or
movs
push
or
add
mov
add
push
or
add
test
add
add
add
add
add
add
or
test
add
test
or
add
and
or
add
test
repz
add
or
add
test
test
add
jp
or
add
jl
or
add
test
test
add
add
or
test
xor
and
test
add
test
test
add
and
test
add
test
test
add
pushf
or
add
add
or
add
add
add
add
add
add
add
add
test
add
pushf
or
add
add
add
add
add
add
add
add
add
or
test
add
test
test
add
and
test
add
mov
or
add
mov
or
xor
and
test
xor
jp
test
xor
jp
test
xor
jl
test
push
add
add
add
add
or
add
add
or
test
add
jp
or
add
test
test
add
scas
or
add
add
add
or
or
add
mov
test
add
add
add
add
add
add
or
or
add
ror
or
add
pop
ud2
add
add
add
add
add
add
or
add
add
add
or
adc
test
jge
adc
and
jge
adc
test
xchg
add
xchg
add
call
add
lahf
add
lahf
add
movs
add
movs
add
test
or
pop
xchg
add
test
adc
test
test
adc
test
test
adc
test
test
adc
test
test
adc
test
test
adc
test
test
push
and
add
add
add
add
adc
xlat
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
or
xchg
add
add
xchg
add
push
cmps
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
push
mov
add
mov
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
test
add
add
add
add
add
aas
add
or
xchg
add
pop
mov
pop
add
aas
add
or
xchg
add
pop
mov
pop
add
add
or
xchg
add
or
add
add
add
or
sbb
add
add
add
add
add
add
add
inc
add
or
add
push
add
or
inc
inc
add
or
add
or
add
add
inc
add
or
xchg
add
add
inc
add
or
xchg
add
or
inc
add
or
xchg
add
or
inc
add
or
sbb
add
add
add
inc
add
or
add
push
cmp
push
add
add
push
test
add
dec
add
or
add
or
add
add
add
or
add
push
dec
add
add
dec
add
or
xchg
add
dec
add
add
dec
add
or
xchg
add
jmp
dec
add
or
xchg
add
mov
adc
inc
dec
add
or
xchg
add
add
add
or
sbb
add
add
add
add
or
add
push
outs
add
add
add
push
jae
adc
les
add
add
add
add
push
add
or
add
or
pop
add
or
add
pop
sahf
add
add
data16
or
add
push
cmp
sbb
aam
add
or
xchg
add
add
push
add
add
add
adc
add
add
add
sbb
add
add
add
and
add
add
add
xor
add
or
xchg
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
imul
or
xchg
add
add
add
or
xchg
add
or
add
add
add
add
add
add
or
xchg
add
or
sub
pop
imul
or
xchg
add
or
imul
or
xchg
add
cmc
add
add
add
add
add
add
xchg
add
or
add
mov
add
or
xchg
add
dec
add
add
imul
or
sbb
add
add
add
ins
add
or
add
push
outs
add
add
outs
add
or
add
push
test
add
add
add
add
add
add
add
jb
add
add
add
add
jb
add
add
add
add
jb
add
add
add
add
jb
add
add
add
add
jbe
add
add
add
push
ja
add
add
add
mov
add
add
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
or
xchg
add
or
jge
add
add
add
cwde
jge
add
add
add
and
add
or
add
push
inc
add
test
add
or
add
push
test
add
add
or
add
xchg
add
or
add
pop
dec
add
jl
add
or
add
push
push
add
fadd
add
push
pop
add
adc
xchg
add
or
inc
add
mov
add
add
add
xor
xchg
add
or
mov
add
add
add
inc
mov
add
add
add
push
mov
add
add
add
jo
add
or
xchg
add
jae
dec
add
add
push
test
add
add
or
add
push
add
add
xchg
mov
add
add
add
fmul
add
or
add
sbb
add
or
add
push
jnp
dec
add
mov
add
add
add
inc
mov
add
add
add
dec
mov
add
add
add
pop
mov
add
add
add
push
add
add
test
sbb
add
add
rcl
add
add
nop
add
or
xchg
add
or
add
call
add
add
clc
nop
add
or
xchg
add
or
add
xchg
add
or
xchg
add
lods
add
xchg
add
or
xchg
add
out
add
sub
xchg
add
mov
dec
add
xchg
add
or
xchg
add
add
xchg
add
or
xchg
add
add
add
add
add
push
add
add
add
xchg
add
or
adc
test
mov
xchg
add
or
adc
test
enter
or
adc
test
into
add
xchg
add
or
xchg
add
xor
add
or
xchg
add
or
inc
xchg
add
or
xchg
add
add
push
xchg
add
or
xchg
add
mov
push
add
add
add
add
fs
add
or
sbb
add
add
adc
add
add
add
add
lods
xchg
add
or
adc
test
jmp
add
add
add
add
add
or
adc
test
sbb
pop
add
adc
test
xor
pusha
add
sahf
add
or
adc
test
cmp
lahf
add
or
adc
test
inc
add
and
add
or
adc
test
dec
add
inc
lahf
add
or
adc
test
push
add
pop
lahf
add
or
xchg
add
or
push
add
add
js
add
or
xchg
add
push
mov
imul
lahf
add
or
xchg
add
push
mov
imul
lahf
add
or
xchg
add
add
add
add
lods
lahf
add
or
xchg
add
jae
imul
lahf
add
or
xchg
add
add
lahf
add
or
xchg
add
add
lock
add
or
xchg
add
add
mov
xchg
add
add
sbb
add
or
xchg
add
add
add
or
xchg
add
add
dec
mov
adc
test
mov
imul
mov
adc
test
mov
mov
adc
test
lods
add
mov
adc
test
mov
jne
in
add
or
xchg
add
push
dec
add
hlt
mov
xchg
add
pmaxsw
jns
add
add
or
xchg
add
(bad)
add
and
add
lss
jns
sub
add
mov
jns
xor
sbb
add
add
add
add
pop
movs
add
or
xchg
add
add
clc
movs
add
or
xchg
or
mov
add
or
les
test
aad
jns
and
add
or
adc
and
fiadd
jp
cmp
add
or
xchg
add
add
add
add
add
push
cmps
add
or
xchg
add
lss
jnp
pop
cmps
add
or
xchg
add
pavgb
jnp
jo
add
or
xchg
add
cmovge
jnp
and
sbb
add
add
or
add
or
xchg
add
add
add
or
adc
test
jne
jnp
inc
stos
add
or
xchg
add
xor
add
add
add
add
stos
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
xchg
add
adc
stos
add
or
xchg
add
adc
stos
add
or
xchg
add
adc
jge
lods
stos
add
or
adc
test
dec
add
add
scas
add
or
adc
test
push
add
add
add
add
add
adc
test
gs
add
scas
add
or
xchg
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
test
sahf
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
or
mov
add
add
add
or
xchg
add
adc
mov
add
add
add
or
xchg
add
imul
add
or
xchg
add
cmp
add
or
xchg
add
add
add
add
add
or
xchg
add
adc
mov
add
add
add
or
xchg
test
in
lea
or
add
or
adc
test
jmp
mov
adc
test
out
add
add
add
or
adc
test
stc
add
add
add
or
adc
test
add
add
or
adc
test
or
mov
adc
test
adc
add
or
adc
test
pop
add
add
or
adc
test
mov
mov
adc
and
scas
add
add
mov
adc
test
pop
add
add
or
adc
test
and
mov
adc
jp
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
xchg
add
add
add
add
add
add
add
add
or
xchg
add
adc
add
add
add
add
add
mov
xchg
add
adc
add
add
add
add
add
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
adc
add
or
xchg
add
adc
add
or
xchg
add
adc
cmp
sbb
add
xchg
jp
in
movs
add
xchg
es
fdivr
xchg
jp
jnp
movs
add
mov
xchg
add
or
add
or
xchg
add
mov
movs
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
test
pop
add
or
xchg
add
add
add
or
xchg
add
push
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
retf
add
or
xchg
add
add
rol
add
add
add
or
nop
add
add
add
add
add
add
or
nop
add
add
fild
add
add
add
add
or
nop
add
add
add
add
add
or
nop
add
add
add
or
nop
add
add
in
add
or
nop
add
add
add
add
add
or
nop
add
add
lock
or
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
repnz
or
nop
add
add
add
add
add
add
add
add
push
fild
aam
add
or
nop
add
add
sgdtd
or
nop
add
add
adc
add
add
push
loope
xor
add
or
nop
add
add
adc
add
add
push
in
lock
add
add
push
out
pop
adc
add
add
pop
jmp
add
add
pop
jmp
jo
add
or
nop
add
add
add
add
push
daa
pop
in
add
adc
test
dec
pop
lock
sbb
add
add
pop
hlt
add
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
and
add
add
pop
inc
aam
add
or
nop
add
add
sub
add
add
add
add
sub
add
add
push
add
pop
sub
add
add
pop
add
mov
add
or
nop
add
add
add
add
pop
or
int3
inc
add
or
nop
add
add
add
or
nop
add
add
add
add
pop
or
add
add
pop
push
add
nop
add
inc
push
add
dec
add
or
nop
add
or
or
add
add
or
nop
add
add
push
add
or
nop
add
add
push
add
or
nop
add
add
add
add
add
add
or
add
add
or
add
pop
add
or
nop
add
add
add
or
nop
add
add
add
or
test
or
nop
add
pop
add
add
or
add
add
add
pop
sub
add
add
or
add
add
add
or
add
nop
add
add
jae
add
add
or
add
add
add
or
pushf
jnp
add
add
or
add
jle
add
add
add
add
add
add
pop
cmp
inc
mov
add
add
or
add
add
or
nop
xchg
add
or
nop
add
or
inc
add
add
or
nop
add
arpl
inc
add
add
or
nop
add
add
stos
add
or
nop
add
add
add
or
nop
add
add
add
or
nop
add
or
mov
add
add
add
mov
nop
add
or
add
add
or
nop
add
or
or
js
add
or
nop
add
or
mov
add
add
or
sbb
add
or
nop
add
add
add
or
nop
add
or
mov
nop
add
or
add
add
or
nop
add
add
add
or
nop
add
add
add
or
nop
add
fadd
add
or
nop
add
or
or
rol
add
add
add
add
add
add
add
add
add
add
add
add
adc
test
daa
or
rol
add
add
add
add
adc
test
jne
outs
add
rol
add
add
add
add
rol
add
add
add
or
jno
cld
rol
add
add
add
push
or
adc
add
or
adc
test
aas
or
sub
add
or
adc
test
inc
or
dec
rol
add
add
add
add
add
add
add
or
ja
adc
add
add
add
add
add
add
add
adc
test
fiadd
jle
int3
rol
add
add
add
add
rol
add
add
add
add
rol
add
add
add
add
add
or
adc
test
jmp
rol
add
add
add
add
add
or
adc
test
adc
add
or
adc
test
mov
xchg
test
add
or
adc
test
xchg
or
add
add
add
or
rol
add
add
add
add
rol
add
add
add
add
rol
add
add
add
add
aam
add
add
add
add
aam
add
add
add
add
add
or
adc
jp
cdq
or
add
add
add
add
add
or
adc
test
mov
aam
add
add
add
or
aam
add
add
add
add
aam
add
add
add
add
aam
add
add
add
add
aam
add
add
add
add
adc
test
lock
add
add
add
add
add
or
adc
test
test
add
or
adc
test
dec
mov
add
add
add
add
adc
and
scas
add
add
add
add
add
aad
add
add
add
add
aad
add
add
add
or
or
add
add
add
add
add
or
adc
jl
pop
add
add
or
adc
test
dec
add
add
add
add
add
add
or
adc
test
pop
add
add
add
add
add
add
adc
pushf
or
mov
mov
add
or
adc
test
sub
mov
int3
(bad)
add
or
adc
clc
or
or
add
add
add
add
xlat
add
or
adc
test
or
add
add
add
add
xlat
add
or
adc
test
inc
or
add
add
or
adc
and
dec
add
add
add
or
xchg
add
sbb
xlat
add
or
xchg
add
sbb
xlat
add
or
xchg
add
sbb
ret
xlat
add
or
xchg
add
sbb
ret
xlat
add
or
xchg
add
sbb
add
add
add
add
add
xchg
add
sbb
add
add
xlat
add
or
xchg
add
lods
add
add
xlat
add
or
xchg
add
loopne
ret
add
xlat
add
or
xchg
add
add
xlat
add
or
xchg
add
add
add
or
xchg
add
sbb
ret
add
fadd
add
add
or
add
fadd
add
add
add
add
add
or
xchg
add
sbb
add
add
or
xchg
add
sbb
or
add
add
or
xchg
add
add
add
or
xchg
add
bound
ret
add
add
or
add
xchg
add
add
fadd
add
add
add
add
fadd
add
add
add
add
fadd
add
add
add
add
fadd
add
add
add
add
fld
add
add
add
add
fld
add
add
add
add
or
xchg
add
add
add
or
xchg
add
out
add
add
add
or
xchg
add
out
add
add
add
or
xchg
add
out
add
add
add
or
xchg
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
add
add
add
fld
add
add
add
add
fld
add
add
add
add
fld
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
or
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
add
add
fild
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
pop
int
retf
add
add
add
add
add
add
or
xchg
add
and
retf
add
add
add
add
add
add
add
add
add
add
add
xchg
add
jmp
fild
add
add
or
add
fild
add
add
add
add
fild
add
add
add
add
fadd
add
add
add
add
add
or
xchg
add
and
add
add
fadd
add
add
add
add
add
or
xchg
add
int
retf
add
add
or
xchg
add
out
add
add
add
or
xchg
add
or
add
add
add
add
add
xchg
add
pushf
fadd
add
add
add
add
xchg
add
and
add
add
xchg
add
and
add
add
or
xchg
add
mov
fadd
add
add
add
add
fadd
add
add
or
add
fld
add
add
or
add
xchg
add
add
xchg
add
add
add
or
xchg
add
and
retf
add
add
or
xchg
add
and
add
add
or
xchg
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
add
or
add
fld
add
add
add
add
fld
add
add
add
add
fld
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
add
add
add
or
xchg
add
add
fiadd
add
add
or
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
or
add
add
or
xchg
add
add
add
add
or
add
add
or
xchg
add
add
add
add
or
add
add
add
add
add
or
add
xchg
add
add
add
add
add
or
xchg
add
add
fiadd
add
add
add
add
or
xchg
add
add
fiadd
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
add
add
fild
add
add
or
add
add
or
xchg
add
add
fild
add
add
or
add
fild
add
add
add
add
add
or
xchg
add
and
add
add
add
or
xchg
add
and
add
add
add
or
xchg
add
add
add
add
or
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
or
add
add
or
add
xchg
add
add
add
or
add
xchg
add
add
add
add
add
fild
add
add
or
add
fild
add
add
or
add
fild
add
add
or
add
fild
add
add
or
add
fild
add
add
add
add
fild
add
add
or
add
add
or
xchg
add
add
loopne
add
add
or
add
loopne
add
add
add
add
or
xchg
add
mov
repnz
add
or
xchg
add
mov
repnz
add
add
add
add
add
add
add
add
add
or
xchg
add
jo
add
or
xchg
add
add
add
or
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
and
add
add
jl
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
and
add
add
jp
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
test
add
add
add
or
add
add
add
add
add
or
add
add
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
add
add
add
or
add
add
add
or
add
add
add
add
jl
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
add
add
add
add
add
or
add
add
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
add
add
add
or
add
add
add
or
add
add
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
jl
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
add
add
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
jl
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
test
add
add
test
add
add
and
add
add
jp
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
and
add
add
test
add
add
and
add
add
test
sbb
add
add
add
add
add
add
add
add
add
cdq
add
(bad)
mov
pop
pop
add
cmp
mov
pop
fadd
pop
add
add
add
loopne
mov
or
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
repnz
add
add
add
adc
loope
inc
or
add
add
add
pop
add
add
add
add
add
cwde
add
add
add
add
adc
adc
add
add
add
adc
add
xor
jae
sub
xor
jae
cmp
in
dec
add
adc
dec
add
adc
adc
dec
add
dec
add
push
add
test
add
sbb
add
icebp
sbb
add
sti
sbb
add
add
in
push
add
in
push
add
sbb
add
add
add
mov
cld
or
cwde
sbb
or
mov
add
add
add
add
add
add
add
add
add
fadd
pop
add
mov
add
or
and
add
cdq
or
or
mov
test
add
sbb
add
stc
sbb
add
add
mov
pop
add
push
add
or
add
pop
jg
stc
add
pop
push
or
add
and
xor
jae
movs
or
add
add
add
and
and
and
add
add
mov
or
and
or
or
add
add
and
or
dec
and
or
push
(bad)
dec
add
in
and
(bad)
and
stc
add
and
or
add
pop
add
add
and
or
dec
and
xor
ins
and
or
add
add
and
or
add
and
and
add
and
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
cmp
and
and
stos
add
add
add
and
add
ret
add
rcl
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
fiadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
xor
add
dec
add
add
adc
sbb
daa
add
arpl
cli
add
add
add
add
add
mov
test
sbb
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
repz
mov
or
pop
pop
pop
lahf
pop
mov
push
or
or
jnp
sahf
or
or
or
or
dec
or
or
add
add
add
add
add
sub
push
add
or
add
test
out
add
test
les
add
add
or
add
test
outs
add
add
add
outs
add
push
add
test
outs
add
add
add
aam
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
adc
add
inc
add
add
add
add
add
xor
add
rol
and
add
inc
sti
or
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
or
cwde
add
or
cdq
add
or
call
add
add
or
popf
add
adc
or
lahf
add
in
add
add
add
add
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
add
add
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
or
add
add
add
and
adc
int
add
add
adc
int
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
add
inc
add
add
add
or
xchg
add
add
and
cmp
or
retf
push
nop
add
pop
sub
fiadd
sub
fld
or
jmp
push
add
or
add
or
fld
push
add
pop
add
add
add
or
push
add
add
or
dec
add
add
add
add
lods
les
ret
mov
push
cs
add
lods
les
ret
mov
push
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
outs
jb
add
jae
outs
popa
add
jae
gs
add
jb
gs
xor
add
arpl
cmp
arpl
sub
sub
sub
cmp
data16
xor
xor
aaa
popa
cmp
sub
gs
jne
arpl
cs
jae
jne
arpl
add
jo
jae
jns
push
gs
jne
arpl
cs
jae
jne
arpl
add
gs
sub
loop
lods
loop
mov
sub
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
scas
add
or
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
loop
(bad)
loop
(bad)
loop
scas
add
arpl
outs
jb
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
or
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
scas
add
jb
jns
push
jne
je
ins
gs
imul
fs
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
arpl
add
sub
scas
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
or
mov
or
scas
loop
mov
sub
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
add
outs
je
xor
loop
mov
sub
loop
lods
loop
mov
or
scas
loop
scas
loop
scas
loop
lods
loop
mov
or
stos
loop
(bad)
loop
mov
or
loop
lods
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
or
scas
loop
lods
loop
scas
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
imul
gs
add
or
(bad)
loop
mov
or
loop
scas
loop
stos
loop
mov
sub
stos
loop
mov
or
lods
loop
mov
sub
(bad)
loop
stos
loop
mov
sub
lods
loop
mov
sub
scas
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
or
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
or
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
add
sub
stos
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
or
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
or
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
scas
add
or
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
mov
or
scas
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
mov
sub
loop
stos
loop
scas
loop
mov
or
lods
loop
mov
or
(bad)
loop
mov
sub
loop
mov
sub
sub
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
or
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
scas
add
fs
outs
push
pop
addr16
cmp
push
ins
add
jno
aaa
push
cmp
jns
inc
dec
dec
push
outs
je
sbb
pushw
xor
inc
jno
xor
arpl
ins
jbe
ja
cmp
jno
push
inc
xor
inc
popa
imul
bound
dec
inc
jne
jns
jne
jb
jae
inc
jb
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
js
pop
push
outs
dec
inc
arpl
outs
arpl
push
ja
xor
push
je
gs
ins
add
popa
add
dec
dec
push
fs
ss
imul
ins
outs
js
bound
inc
push
push
push
cmp
jns
jb
inc
dec
pop
push
xor
arpl
push
pop
push
data16
add
add
je
dec
outs
addr16
add
jo
cmp
arpl
ins
push
outs
inc
jbe
imul
gs
fs
jns
add
data16
inc
push
xor
push
ins
popa
xor
xor
jns
arpl
dec
push
outs
arpl
dec
dec
dec
xor
dec
inc
push
gs
imul
jo
jne
dec
ins
bound
add
ins
jne
push
jns
add
push
js
push
inc
push
imul
fs
ss
add
dec
fs
fs
pop
arpl
ja
xor
dec
push
dec
jns
push
pop
inc
jbe
push
pop
add
xor
jns
dec
jbe
dec
bound
pop
push
add
bound
xor
cmp
push
pop
aaa
pop
pop
je
add
push
arpl
push
xor
push
dec
dec
dec
ja
push
ja
xor
jne
dec
imul
inc
aaa
push
push
push
cmp
jo
push
jae
inc
pop
dec
popa
fs
imul
pop
jo
jae
xor
pop
ins
dec
ss
pop
push
jno
jns
inc
add
add
add
add
addr16
push
js
addr16
xor
xor
popa
add
je
cmp
xor
xor
arpl
xor
add
ja
inc
dec
push
ins
inc
xor
outs
cmp
inc
add
je
add
js
dec
jbe
push
pop
ins
ins
push
jne
ss
ss
inc
xor
jae
dec
inc
jae
inc
jae
add
addr16
dec
bound
push
imul
pop
push
je
dec
add
jne
push
fs
xor
push
push
je
push
je
outs
push
push
inc
push
dec
push
dec
je
popaw
push
xor
add
push
pop
push
push
push
js
fs
push
push
outs
xor
push
push
push
dec
outs
popa
add
gs
jne
dec
push
dec
aaa
dec
inc
jo
jbe
xor
inc
dec
bound
push
ja
xor
inc
push
imul
outs
add
pop
imul
pop
push
inc
js
push
jns
inc
xor
inc
xor
dec
aaa
xor
push
inc
inc
jae
outs
fs
add
push
inc
inc
ins
inc
dec
data16
inc
dec
inc
cmp
push
add
popa
pop
xor
popa
dec
jae
dec
xor
add
pop
push
inc
xor
pop
jo
inc
jbe
dec
jo
add
addr16
pop
xor
jae
addr16
gs
push
dec
jb
dec
imul
arpl
inc
dec
ja
dec
push
add
push
dec
push
jae
pop
inc
inc
jb
data16
jbe
jae
dec
imul
addr16
pop
dec
popa
push
ins
cmp
inc
ins
push
jo
js
js
push
imul
bound
add
jae
bound
inc
bound
jo
outs
push
ins
xor
gs
ins
dec
push
cmp
ss
dec
push
fs
dec
add
push
jae
xor
cmp
ss
xor
add
aaa
xor
jbe
jae
bound
xor
add
push
pop
pop
xor
inc
push
dec
cmp
push
pushw
jno
push
xor
push
cmp
jbe
dec
add
ja
jns
dec
popa
xor
pop
addr16
dec
xor
push
gs
push
gs
outs
push
fs
cmp
push
add
imul
jb
dec
jo
cmp
dec
ja
add
je
xor
dec
push
dec
bound
jae
ja
add
js
imul
outs
dec
imul
js
add
cmp
xor
fs
xor
xor
dec
add
inc
push
push
outs
fs
dec
push
jo
imul
add
arpl
pop
push
push
outs
cmp
dec
pop
push
push
imul
jb
inc
inc
xor
arpl
inc
inc
push
add
imul
pop
push
push
dec
push
dec
inc
jns
inc
inc
arpl
sbb
jae
xor
dec
push
jno
bound
outs
push
data16
add
inc
cmp
push
jae
dec
jb
ins
js
dec
pop
outs
add
add
xchg
ret
popf
jne
ss
xchg
ret
(bad)
ret
xchg
outs
ret
mov
xchg
xor
inc
jae
gs
bound
outs
outs
inc
je
jb
bound
add
inc
je
jb
bound
add
jb
jo
push
jae
xor
outs
push
xor
jno
push
push
popa
add
add
outs
xor
inc
aaa
xor
js
bound
fs
push
pop
js
push
dec
aaa
ss
je
ss
outs
add
fs
xor
push
jb
inc
jns
push
inc
cmp
outs
add
imul
push
jae
dec
pop
ins
push
ins
push
push
dec
push
bound
push
xor
push
cmp
popa
jo
dec
push
js
inc
ins
push
inc
aaa
aaa
dec
dec
jbe
ins
push
dec
dec
add
jbe
inc
push
push
push
pop
inc
dec
outs
addr16
dec
inc
jne
dec
pushw
push
pop
xor
push
or
sbb
jne
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
je
push
je
gs
ins
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
jp
xor
imul
pop
pop
bound
xor
jne
push
ins
inc
ins
outs
arpl
dec
addr16
xor
inc
dec
dec
push
push
gs
inc
pop
dec
popa
add
jb
popa
jns
data16
dec
xor
push
imul
xor
pop
add
jno
xor
push
pop
pop
jns
ss
inc
jae
cmp
inc
bound
bound
inc
push
outs
push
push
pop
push
popa
inc
push
jo
dec
push
arpl
js
imul
jae
push
add
ins
ins
gs
imul
imul
outs
fs
gs
add
je
outs
fs
popa
jae
add
jae
gs
cs
gs
arpl
outs
add
imul
jae
inc
inc
xor
dec
dec
inc
inc
jbe
push
jne
push
jbe
dec
push
dec
push
push
pop
push
ins
ins
ss
pop
imul
push
xor
js
dec
push
push
push
ins
cmp
jne
jb
add
aaa
cmp
push
jne
xor
fs
jae
push
add
jbe
imul
push
popa
je
js
js
bound
addr16
js
push
dec
jae
add
gs
je
add
popa
dec
dec
cmp
ja
dec
dec
js
push
push
ss
add
je
jns
gs
push
imul
pop
data16
cmp
xor
jae
je
dec
gs
push
push
push
bound
jo
xor
push
xor
add
sbb
jbe
push
push
outs
xor
inc
fs
cmp
xor
pop
sbb
push
outs
jo
ja
jne
pop
push
imul
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
js
push
pop
ss
push
imul
add
gs
je
inc
arpl
jo
outs
jb
jno
push
jae
pop
push
jo
push
pop
ja
cmp
je
add
ja
inc
push
fs
inc
xor
push
dec
push
dec
xor
push
xor
push
inc
inc
dec
jb
jb
popa
dec
xor
jp
xor
jo
push
cmp
je
xor
push
inc
cmp
adc
dec
push
dec
inc
push
inc
jbe
push
inc
inc
push
jb
push
outs
add
sbb
ins
add
je
sbb
push
popa
fs
add
jo
jae
add
imul
ins
add
xor
cmp
je
xor
pop
xor
push
push
xor
inc
push
cmp
push
push
pop
dec
push
push
inc
add
jns
dec
push
push
inc
cmp
xor
xor
add
push
push
push
fs
inc
inc
jae
jae
inc
inc
add
push
pop
xor
push
xor
dec
pop
xor
add
add
jb
add
outs
arpl
add
jne
gs
bound
push
jns
je
ins
cs
imul
arpl
inc
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
push
inc
push
push
inc
je
jb
bound
add
dec
outs
pop
push
aaa
push
inc
pop
js
gs
bound
push
push
ins
je
addr16
add
jb
jno
push
xor
inc
push
inc
push
add
je
jns
push
inc
jbe
inc
addr16
cmp
dec
push
add
xor
xor
dec
ss
dec
data16
je
jae
push
dec
aaa
imul
inc
inc
dec
dec
xor
jb
xor
jb
dec
push
inc
cmp
jp
cmp
xor
xor
jb
xor
add
popa
dec
pop
push
push
xor
inc
jo
ins
jae
dec
imul
sbb
gs
bound
push
dec
xor
dec
jne
arpl
inc
xor
inc
inc
xor
jb
jb
xor
imul
inc
dec
aaa
dec
jb
jae
push
ss
ins
jne
push
push
push
xor
imul
dec
add
popa
jae
xor
dec
outs
popa
add
data16
jne
bound
push
addr16
push
dec
xor
je
push
popa
fs
push
outs
jne
push
dec
pop
inc
pop
dec
jns
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
sbb
push
sbb
dec
inc
ins
fs
inc
push
xor
push
imul
sbb
je
outs
outs
popa
jb
pusha
xor
push
jb
arpl
jae
push
jns
je
ins
cs
imul
imul
arpl
jae
outs
fs
add
jno
push
ins
push
je
jbe
ins
fs
add
jbe
imul
jo
xor
push
dec
add
jae
ins
dec
jne
push
inc
jns
jb
jns
push
pop
imul
gs
jne
jb
outs
je
jb
arpl
jae
data16
ins
dec
addr16
jne
xor
outs
xor
jns
inc
dec
inc
ins
add
je
dec
popa
imul
add
xor
xor
imul
jne
add
je
dec
outs
fs
gs
popa
ins
add
xor
push
dec
jbe
push
jb
dec
jne
push
aaa
add
outs
ja
jb
js
xor
jne
dec
jbe
gs
inc
jo
pop
push
add
xor
jne
xor
xor
push
pop
ja
imul
sbb
jae
outs
outs
add
jo
jns
push
je
imul
fs
push
outs
push
je
imul
bound
pop
jne
push
inc
cmp
pop
bound
ins
dec
js
dec
xor
dec
imul
push
pop
add
jns
xor
jne
pop
xor
fs
arpl
jae
push
jb
bound
jne
ins
xor
ja
pop
dec
push
push
dec
xor
inc
jo
outs
add
push
imul
ins
dec
js
popa
aaa
jbe
add
imul
imul
imul
je
jne
imul
push
ss
inc
add
ss
ja
jne
jbe
push
outs
bound
inc
gs
add
ins
imul
dec
jne
dec
ins
inc
xor
popa
xor
outs
xor
ins
add
popa
pop
outs
dec
jne
push
jo
ja
jbe
inc
push
pop
add
popa
jb
jae
imul
pop
cmp
push
cmp
push
xor
add
bound
jb
outs
add
jns
push
inc
jne
popa
addr16
pop
js
dec
inc
cmp
pop
dec
dec
aaa
push
jne
jb
xor
xor
cmp
xor
sbb
jae
xor
pop
xor
popa
pop
bound
ins
inc
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
sbb
push
push
cmp
jne
dec
push
push
xor
bound
add
push
inc
dec
gs
jne
js
inc
jbe
js
pop
popa
push
ins
add
push
arpl
jne
pop
xor
cmp
dec
xor
inc
xor
jne
dec
push
jne
fs
xor
outs
je
add
gs
dec
push
jne
arpl
inc
push
jb
dec
jbe
add
gs
dec
jbe
outs
addr16
jns
js
ins
aaa
push
xor
imul
push
aaa
cmp
js
imul
xor
adc
pop
sbb
push
push
ja
push
push
xor
jne
jne
dec
js
add
fs
inc
fs
xor
pop
inc
je
cmp
inc
add
push
push
pop
xor
ja
jne
inc
outs
dec
ins
jo
js
or
inc
push
jo
xor
cmp
dec
xor
add
inc
push
dec
fs
imul
dec
gs
xor
dec
push
jne
xor
push
outs
jno
inc
bound
add
xor
jne
inc
ins
jbe
dec
arpl
push
inc
xor
push
imul
push
dec
inc
jne
dec
push
aaa
inc
cmp
dec
ja
push
outs
ss
aaa
inc
dec
jb
ja
inc
dec
inc
xor
inc
jb
jne
inc
ss
dec
dec
dec
dec
dec
pop
pop
js
jno
imul
xor
outs
bound
cmp
js
push
add
sbb
jo
xor
pop
js
arpl
outs
dec
xor
xor
popa
ss
push
aaa
dec
jne
dec
xor
inc
cmp
jb
bound
jne
arpl
xor
imul
ja
add
xor
push
jne
push
push
jb
js
inc
imul
dec
dec
push
jne
xor
popa
inc
inc
outs
ss
dec
dec
add
xor
bound
popa
inc
cmp
dec
xor
add
push
jo
push
push
push
push
xor
inc
aaa
outs
bound
jne
push
outs
push
outs
dec
jne
cmp
xor
inc
push
js
outs
add
sbb
inc
arpl
je
jns
ins
jae
dec
push
outs
push
dec
add
push
pop
push
pop
push
pop
inc
ins
cmp
popa
xor
add
pop
inc
push
push
inc
arpl
je
push
inc
jno
addr16
push
push
bound
push
inc
aaa
inc
jno
jne
ins
dec
dec
push
outs
add
data16
ja
fs
jne
jb
imul
inc
xor
push
dec
push
push
jo
inc
inc
inc
fs
xor
pop
push
addr16
xor
cmp
push
xor
inc
jns
add
sbb
dec
xor
popa
dec
push
arpl
imul
jae
push
dec
dec
push
inc
addr16
dec
inc
arpl
aaa
push
jne
inc
xor
push
jae
push
addr16
dec
push
jo
dec
push
dec
add
cmp
inc
dec
push
inc
addr16
js
dec
xor
inc
dec
dec
add
fs
push
xor
je
dec
xor
addr16
ss
add
sbb
cmp
push
dec
inc
dec
fs
inc
dec
xor
jo
jbe
fs
push
imul
xor
push
xor
xor
dec
add
bound
gs
push
jns
imul
push
outs
inc
ins
add
dec
dec
inc
inc
push
push
dec
imul
cmp
add
arpl
jne
push
push
bound
fs
inc
jns
dec
pop
jne
or
add
arpl
xor
ins
dec
jb
push
jno
pop
inc
pop
pop
imul
inc
push
addr16
addr16
dec
dec
push
outs
dec
addr16
push
xor
inc
inc
jns
fs
jne
ja
xor
arpl
dec
inc
dec
push
pop
ins
jo
imul
inc
add
sbb
bound
inc
push
push
imul
push
popa
xor
inc
push
push
js
xor
pop
fs
cmp
bound
dec
inc
aaa
inc
inc
je
dec
inc
inc
xor
inc
inc
outs
xor
add
inc
outs
imul
jne
ins
pop
jne
arpl
pop
push
add
sbb
adc
add
push
add
add
je
add
gs
imul
gs
imul
pop
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
jbe
inc
imul
outs
ins
jo
jb
bound
xor
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
dec
outs
je
xor
push
data16
cmp
cmp
imul
jae
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
gs
je
gs
ins
add
outs
je
imul
addr16
dec
je
ins
add
je
dec
je
ins
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
dec
outs
jbe
ins
imul
imul
jo
imul
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
je
imul
je
outs
ins
add
je
push
arpl
gs
outs
fs
outs
je
outs
ins
add
jb
popa
je
js
gs
imul
gs
bound
popa
ins
add
jo
outs
ins
popa
imul
outs
fs
outs
outs
add
push
fs
gs
dec
popa
outs
popa
gs
jns
je
push
je
gs
ins
dec
outs
fs
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
arpl
jns
outs
outs
add
inc
js
push
xor
ss
inc
imul
jns
dec
push
xor
dec
push
push
inc
js
ins
inc
dec
push
bound
pop
xor
push
outs
dec
pop
push
bound
push
addr16
push
add
xor
inc
je
push
cmp
xor
fs
outs
add
fs
fs
gs
dec
fs
inc
aaa
inc
push
cmp
outs
dec
ja
je
push
cmp
outs
dec
inc
push
dec
ss
push
add
fs
push
push
ss
jo
push
dec
imul
add
pop
jne
pop
push
jbe
jo
js
inc
jo
fs
push
add
je
push
outs
jae
je
outs
outs
add
push
dec
xor
aaa
xor
inc
push
imul
add
je
push
outs
jae
je
outs
outs
add
ins
pop
xor
xor
imul
push
js
push
inc
push
dec
push
xor
push
jbe
add
je
dec
outs
ja
jae
je
xor
inc
xor
xor
jbe
cmp
push
xor
push
xor
cmp
xor
imul
push
ins
push
push
push
jno
xor
jb
add
inc
dec
xor
xor
inc
inc
outs
dec
xor
push
xor
push
inc
xor
ins
push
push
dec
xor
cmp
inc
fs
push
add
imul
gs
imul
outs
dec
push
jp
xor
push
xor
data16
xor
jo
arpl
dec
dec
inc
imul
dec
imul
outs
push
cmp
pop
inc
ja
inc
push
cmp
xor
popa
outs
jae
outs
jb
inc
imul
arpl
push
push
xor
push
aaa
cmp
addr16
jns
imul
dec
jo
dec
addr16
cmp
inc
push
inc
dec
jne
inc
xor
add
jne
push
xor
cmp
dec
push
push
je
push
inc
jns
add
outs
jae
add
push
jb
inc
cmp
js
js
inc
inc
jne
imul
jns
bound
inc
inc
xor
inc
xor
dec
cmp
addr16
dec
gs
popa
add
dec
inc
arpl
fs
dec
dec
inc
push
push
ins
jbe
push
add
cmp
push
cmp
cmp
arpl
cmp
bound
popa
aaa
cmp
cmp
jns
jb
xor
dec
dec
imul
fs
inc
push
js
inc
inc
pop
popa
xor
jne
jo
je
inc
cmp
cmp
jne
xor
inc
imul
add
outs
jbe
dec
cmp
aaa
dec
inc
jbe
jno
ss
add
dec
outs
cmp
gs
push
dec
push
inc
jo
xor
gs
jo
dec
jno
jo
cmp
jb
data16
ins
je
jne
cmp
je
popa
imul
outs
jae
inc
add
arpl
push
cmp
push
xor
xor
data16
push
add
jno
outs
jb
jae
jae
inc
jns
aaa
imul
je
inc
dec
jno
cmp
jbe
cmp
popa
gs
je
jno
dec
push
bound
push
imul
outs
popa
push
dec
add
imul
xor
dec
bound
imul
inc
push
push
dec
jno
cmp
xor
push
dec
bound
jbe
je
push
push
cmp
push
outs
fs
inc
jo
dec
push
dec
add
jne
inc
cmp
outs
push
inc
push
inc
fs
push
inc
js
jp
js
push
dec
cmp
inc
jo
outs
push
imul
jns
popa
dec
cmp
ins
arpl
inc
push
push
pop
add
push
inc
dec
cmp
dec
outs
inc
jae
ins
push
dec
inc
add
push
jo
dec
arpl
jae
imul
inc
add
dec
inc
inc
jne
dec
dec
pop
jb
inc
dec
gs
ss
add
dec
push
dec
push
cmp
ins
ja
inc
xor
xor
push
dec
cmp
push
pop
dec
push
push
jno
ins
data16
data16
jae
cmp
cmp
pop
popa
xor
jns
dec
add
push
xor
inc
push
add
jns
jb
cmp
inc
jo
jno
push
jae
push
jo
dec
xor
cmp
ja
jbe
outs
dec
jbe
imul
push
pop
jne
jb
dec
gs
cmp
push
cmp
cmp
push
outs
cmp
jne
inc
push
data16
inc
add
jo
add
pop
fs
dec
cmp
inc
push
push
push
cmp
jae
ja
push
jb
je
inc
jns
add
jns
push
ins
cmp
ja
cmp
aaa
cmp
xor
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
dec
push
jne
cmp
ins
imul
je
add
xor
je
cmp
xor
cmp
pop
jae
inc
add
je
push
gs
add
je
xor
cmp
dec
jo
pop
xor
xor
xor
inc
gs
popa
ins
ins
imul
ins
bound
push
push
ja
cmp
pop
fs
jbe
je
jb
outs
imul
js
arpl
imul
ins
bound
inc
outs
bound
xor
ss
inc
jo
jbe
push
jb
je
push
dec
cmp
xor
xor
pop
dec
dec
dec
add
push
jne
inc
cmp
jb
outs
push
push
dec
push
add
xor
dec
cmp
jbe
jno
outs
data16
je
add
push
push
inc
pop
cmp
pop
pop
aaa
xor
dec
inc
xor
pop
push
dec
addr16
cmp
cmp
fs
ss
add
je
popa
ins
add
inc
arpl
cmp
arpl
xor
xor
push
imul
je
jne
ins
imul
je
dec
push
xor
cmp
popa
cmp
gs
cmp
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
outs
cmp
dec
inc
pop
push
dec
popa
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
bound
jae
jbe
inc
push
xor
outs
dec
pop
jne
add
xor
cmp
cmp
pop
inc
push
pop
jns
inc
xor
add
je
dec
push
add
push
fs
xor
xor
inc
pop
dec
add
je
inc
outs
je
jns
outs
imul
pop
bound
cmp
inc
ja
jno
jae
dec
add
inc
jno
jb
inc
inc
push
pop
dec
xor
cmp
ja
inc
jb
popa
je
inc
outs
arpl
jo
outs
jb
popa
push
inc
push
bound
pop
je
dec
inc
xor
push
push
jbe
jne
cmp
outs
push
jns
push
jae
addr16
dec
popa
ins
add
bound
data16
dec
push
jne
pop
inc
gs
dec
inc
outs
add
outs
jbe
jb
add
popa
jae
ss
je
imul
xor
cmp
push
ins
xor
outs
push
xor
push
dec
cmp
push
jo
dec
inc
bound
pop
js
push
push
dec
inc
gs
inc
arpl
addr16
imul
push
dec
add
xor
inc
inc
push
push
jae
inc
inc
push
pop
inc
push
je
inc
push
bound
js
fs
jne
pop
jno
inc
jae
imul
fs
data16
dec
inc
ins
outs
inc
push
popa
pop
push
popa
dec
js
jne
jno
add
popa
xor
jb
data16
xor
xor
add
jns
inc
inc
inc
xor
xor
push
jb
add
outs
imul
je
ins
cs
push
imul
gs
dec
dec
xor
inc
push
jae
jbe
xor
inc
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
dec
ins
inc
jns
fs
dec
dec
inc
dec
inc
imul
jns
ja
aaa
arpl
inc
je
dec
jno
outs
inc
dec
jo
jns
add
je
add
je
gs
jo
popa
je
add
jne
ja
inc
pop
pop
pop
push
dec
inc
inc
jne
xor
inc
outs
jb
popa
je
push
push
push
push
xor
inc
jno
dec
ss
push
inc
inc
cmp
inc
imul
jns
inc
jb
popa
je
inc
imul
jns
push
pop
cmp
bound
arpl
push
push
fs
push
bound
xor
push
inc
inc
push
inc
gs
inc
inc
outs
push
gs
ja
add
ins
add
imul
addr16
cmp
inc
push
inc
cmp
jne
pop
push
push
xor
dec
jo
outs
push
jb
je
add
inc
inc
cmp
jo
pop
ins
xor
gs
inc
xor
fs
imul
pop
inc
inc
popa
addr16
push
push
dec
jb
pop
push
add
imul
imul
dec
jns
jb
inc
imul
push
add
push
add
push
add
pop
add
add
popa
jb
add
add
add
push
add
push
add
pop
add
push
add
pop
add
push
add
pop
add
push
add
pop
add
push
add
pop
add
push
add
pop
inc
jno
popa
ins
imul
inc
cmp
xor
jb
inc
push
popa
jb
inc
add
jae
jae
dec
push
inc
xor
jno
popa
jns
inc
je
jp
inc
arpl
inc
inc
gs
outs
dec
xor
cmp
adc
add
add
outs
arpl
add
ss
pop
aaa
inc
jne
dec
dec
jbe
push
add
pop
aaa
dec
popa
inc
arpl
push
jbe
pop
inc
pop
ins
jae
jae
xor
pop
inc
push
jo
imul
push
add
add
push
add
pop
add
pop
add
push
add
pop
add
push
add
pop
add
push
add
pop
add
add
add
pop
add
push
add
push
add
pop
add
push
add
pop
add
push
add
push
add
pop
add
push
jo
ja
gs
inc
push
pop
jns
inc
imul
pop
cmp
outs
xor
push
jae
inc
push
dec
add
push
ss
push
inc
push
gs
je
xor
dec
add
add
pop
dec
outs
gs
popa
ins
imul
inc
dec
inc
jbe
ins
dec
push
jo
inc
cmp
ins
dec
add
jns
push
bound
xor
imul
aaa
inc
pop
push
xor
ja
jno
jb
inc
push
js
xor
dec
data16
inc
jno
add
add
outs
outs
je
imul
inc
jae
gs
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
dec
xor
popf
popf
xlat
jae
mov
aas
pop
das
add
mov
pop
push
sbb
mov
push
sbb
sub
pop
add
or
add
add
pop
add
pop
add
add
add
or
or
or
or
or
add
add
sbb
add
pop
push
or
or
or
or
or
push
pop
or
push
add
sbb
adc
push
add
adc
add
adc
add
add
adc
add
and
and
push
sbb
add
push
push
push
adc
add
add
add
add
add
add
push
add
add
or
and
or
add
sbb
or
add
sbb
add
or
add
add
add
add
sbb
and
or
add
sbb
add
sbb
add
or
and
add
or
adc
sbb
or
add
or
pop
add
or
or
pop
push
or
or
or
or
add
sbb
adc
add
adc
or
add
sub
or
or
or
add
add
or
add
sbb
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
pop
add
or
and
add
sub
adc
sub
or
or
or
or
or
or
and
adc
or
or
or
or
or
or
add
or
or
or
add
add
or
add
add
add
add
add
or
add
sbb
sbb
push
add
or
or
or
add
add
or
add
add
or
and
or
adc
add
sbb
add
or
or
add
adc
or
adc
or
add
add
and
add
sub
add
or
add
add
or
add
sbb
add
or
pop
and
add
add
sbb
or
add
add
add
add
push
add
sbb
push
adc
pop
push
sbb
or
pop
or
or
sbb
or
or
add
add
add
add
add
add
or
or
sbb
or
add
sbb
or
inc
push
add
sbb
and
sbb
or
or
sbb
add
add
adc
add
add
push
or
dec
or
sbb
or
add
adc
or
pop
or
adc
sbb
or
add
add
or
or
sbb
or
or
add
push
add
push
or
add
push
sbb
sbb
add
adc
add
sbb
pop
add
add
dec
sbb
sbb
sbb
sbb
sbb
add
add
or
or
push
adc
pop
pop
or
or
sbb
add
adc
add
push
push
pop
or
or
or
sbb
or
or
add
add
add
or
or
add
adc
dec
or
add
adc
add
add
pop
add
adc
add
popa
or
add
or
add
add
add
gs
add
add
popa
push
pop
add
or
or
add
ins
add
add
sbb
pop
adc
add
add
add
add
add
add
add
sbb
jne
push
add
or
add
sbb
push
adc
pop
or
sbb
or
or
or
add
adc
add
add
push
add
popa
push
add
add
adc
add
adc
popa
add
popa
push
add
add
popa
or
adc
push
adc
adc
push
adc
pop
add
add
or
or
push
add
lea
add
adc
push
add
push
adc
add
push
add
xchg
add
add
add
sbb
or
add
push
push
add
adc
push
push
sbb
or
pop
pop
add
sbb
push
add
cdq
or
add
sbb
add
add
adc
add
sbb
add
or
add
add
sbb
add
sbb
add
or
add
adc
add
sbb
sbb
push
and
adc
add
and
add
add
add
or
and
add
and
add
add
or
add
add
add
add
add
add
add
pop
pop
add
add
push
add
sub
or
and
add
xor
and
cmp
push
adc
or
push
adc
add
or
xor
or
or
or
or
push
add
add
or
mov
or
push
or
or
or
push
add
add
sub
movs
or
add
add
adc
or
or
adc
add
sub
add
sbb
and
lods
sbb
or
or
or
add
sbb
or
add
add
or
push
push
add
add
add
pop
push
add
or
xor
jge
xor
or
or
add
or
or
adc
add
sbb
add
or
or
ds
and
xor
or
or
sbb
sbb
sbb
mov
add
adc
add
sbb
sbb
add
add
sbb
sbb
add
add
and
xchg
or
add
sbb
sub
adc
add
and
adc
push
or
push
push
pop
add
or
or
add
add
adc
push
or
sbb
adc
add
or
or
add
add
or
add
or
add
add
adc
pop
add
or
or
add
add
jge
jge
add
add
sub
adc
or
add
add
sub
add
adc
add
add
or
and
or
or
add
add
sbb
sbb
or
or
or
or
or
or
or
or
or
or
add
adc
or
adc
or
adc
add
add
dec
adc
add
xor
sub
add
sbb
add
add
movs
or
sbb
or
or
sbb
or
or
or
or
or
add
adc
pop
add
or
or
add
or
sub
mov
add
add
adc
adc
add
sbb
or
or
adc
or
add
or
adc
or
or
or
or
add
add
add
sub
adc
sbb
or
or
add
add
sub
adc
or
add
adc
sbb
pop
add
add
sbb
add
adc
adc
or
sbb
or
add
add
inc
add
add
sub
or
add
sbb
add
sbb
or
pop
or
sbb
or
or
or
pop
add
add
pop
or
sbb
or
or
or
or
or
or
or
or
or
or
or
pop
invd
or
or
adc
adc
movs
or
or
or
add
add
adc
add
or
or
add
adc
or
add
adc
or
add
add
adc
add
xor
add
adc
add
or
adc
adc
or
push
add
add
adc
or
or
pop
add
or
adc
jl
push
sbb
or
or
adc
jge
push
adc
add
push
adc
or
add
add
and
adc
adc
pop
and
add
add
add
add
adc
adc
add
sub
adc
adc
add
sbb
and
add
add
and
push
add
adc
add
adc
add
sub
add
or
add
sub
adc
push
sbb
add
cmp
add
adc
add
add
adc
add
sbb
add
or
icebp
or
add
adc
pop
add
adc
add
adc
adc
dec
sbb
and
add
sub
std
or
add
inc
adc
std
add
add
add
or
add
add
push
adc
sbb
add
add
push
or
add
add
push
push
or
pop
add
adc
add
push
push
add
push
push
sbb
push
add
adc
add
push
push
push
add
add
push
push
add
adc
add
jge
add
add
sbb
and
add
add
or
test
add
or
adc
or
adc
sbb
or
add
sbb
or
add
or
add
sbb
or
push
and
add
and
add
add
and
and
adc
add
add
in
push
and
add
xor
cmc
or
add
pop
sbb
and
add
add
or
add
add
add
or
add
sbb
or
add
push
push
add
adc
add
add
inc
sbb
add
adc
adc
add
sbb
push
add
sbb
add
sbb
add
add
add
adc
add
sbb
add
adc
add
sbb
sbb
add
sbb
add
add
sbb
or
add
sbb
add
sbb
add
sbb
add
push
push
add
adc
add
inc
jb
jo
outs
addr16
jo
imul
imul
gs
and
data16
add
add
adc
push
outs
and
jb
outs
jb
je
outs
outs
and
add
add
dec
gs
inc
jb
and
gs
jns
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
xor
xor
sub
sub
sub
sub
xor
arpl
xor
add
add
or
xor
xor
push
add
or
popa
imul
or
inc
sub
xor
xor
add
add
add
add
add
add
add
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
