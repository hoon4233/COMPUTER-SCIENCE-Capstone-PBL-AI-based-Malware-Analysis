dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
add
add
add
add
push
je
imul
add
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
movs
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
xor
cmp
sub
xor
xor
xor
xor
popa
sub
data16
xor
gs
cmp
outs
fs
gs
jp
jo
add
add
add
push
cmp
test
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
inc
add
push
dec
add
add
add
add
dec
jg
add
add
and
push
gs
gs
gs
or
and
add
add
add
sbb
adc
int
into
add
jl
cdq
int
into
add
jl
cdq
int
into
add
mov
fstp
ja
ins
cmps
mov
iret
int3
in
leave
ss
fxch
fs
and
xchg
add
xchg
je
sbb
popa
or
add
pusha
push
add
inc
pop
adc
sub
push
or
dec
fdivr
adc
xchg
xchg
fidivr
les
mov
cmp
aam
stos
push
push
cmps
stos
xchg
sahf
jb
or
(bad)
adc
sbb
addr16
inc
es
sub
adc
jno
dec
repz
lahf
outs
jg
mov
vmulss
aad
in
lods
fidiv
jge
mov
cli
or
nop
aas
scas
jo
fcmovu
pop
sub
int
mov
or
dec
and
dec
pop
loope
std
xor
xor
add
adc
sti
and
jns
mov
fwait
mov
xchg
in
mov
mov
jmp
call
ins
cdq
sub
and
dec
bound
inc
jge
and
clc
enter
fs
inc
and
popf
std
inc
mov
ja
lahf
out
add
lds
mov
pop
fcomp
jnp
add
mov
stos
push
jo
sub
ins
jl
jl
movs
loop
not
aad
mov
je
fcomp
add
lock
xor
gs
inc
pop
mov
mov
mov
add
les
cmp
out
test
test
das
arpl
das
inc
retf
sbb
js
jecxz
ja
out
retf
or
push
dec
(bad)
in
ret
and
dec
push
mov
pop
pop
loop
gs
pop
xchg
loop
xor
cmp
sbb
in
mov
or
in
push
cmps
fmul
add
rol
lahf
ror
dec
sbb
shl
sbb
outs
xlat
push
mov
dec
xchg
adc
mov
push
push
pop
mov
cdq
(bad)
retf
fadd
ins
xlat
mov
imul
pushf
mov
or
mov
cwde
mov
call
data16
test
mov
sahf
mov
sub
inc
outs
mov
pop
adc
sbb
stc
xchg
pop
adc
sbb
adc
das
(bad)
lock
push
pop
adc
ins
cmc
sar
lods
inc
xor
adc
sbb
jae
(bad)
bound
inc
cwde
adc
dec
loope
mov
data16
mov
inc
push
aas
jbe
(bad)
sti
add
pop
inc
fsub
out
adc
mov
fadd
in
pop
sub
pop
mov
jnp
mov
adc
mov
mov
mov
ret
loopne
nop
mov
rcr
or
fwait
mov
add
inc
jns
mov
mov
adc
and
ret
lock
push
jo
in
or
ins
movs
push
fcmove
mov
sbb
dec
sbb
or
adc
std
loopne
movs
clc
imul
mov
or
out
jnp
mov
jecxz
div
pop
call
test
lea
pop
xchg
inc
push
add
pushf
jbe
sbb
or
inc
mov
inc
(bad)
jnp
xor
ss
fwait
sub
out
jbe
inc
call
sub
ins
dec
pop
fmul
add
push
add
out
rcr
je
inc
sti
jmp
adc
les
test
dec
adc
xchg
fadd
or
and
pop
and
ret
imul
xor
jmp
or
ss
sbb
cmp
pop
jecxz
stos
fadd
mov
stos
inc
(bad)
scas
cmp
jb
adc
(bad)
sub
and
or
jno
sbb
(bad)
rol
jb
hlt
adc
jp
clc
rcr
cs
or
dec
pushf
outs
les
push
js
addr16
dec
cdq
fwait
test
ins
xchg
pop
dec
(bad)
in
in
add
sar
addr16
inc
sub
es
dec
jne
nop
or
and
and
addr16
mov
daa
inc
fsub
movs
popa
push
push
mov
inc
aam
dec
or
sbb
jbe
pop
nop
sbb
lock
out
rol
xor
pop
sbb
xor
sbb
jge
cmp
add
jae
out
(bad)
sbb
jle
mov
mov
or
sub
iret
(bad)
adc
adc
sub
push
(bad)
enter
jne
(bad)
(bad)
mov
pop
(bad)
and
inc
mov
mov
sub
mov
mov
scas
mov
ficom
inc
sbb
shr
repz
ja
add
test
cmp
pop
xor
mov
(bad)
mov
fisubr
ficomp
(bad)
fimul
inc
push
add
xor
cmc
adc
mov
push
fisubr
in
sbb
mov
cmps
scas
cmp
movs
fs
push
test
mov
push
sub
cmp
xchg
mov
and
jno
not
lods
ins
xor
aas
arpl
sbb
int3
into
shl
pusha
nop
push
mov
add
inc
jbe
(bad)
mov
in
lods
mov
push
test
popf
push
or
test
jg
inc
jns
dec
enterw
fwait
ins
jecxz
ds
loopne
loope
adc
arpl
inc
cmp
call
xlat
les
stos
retf
gs
out
fwait
iret
in
in
ins
bound
test
xchg
jae
ss
ret
jecxz
sub
jmp
jae
inc
dec
smsw
pop
fmul
test
shr
(bad)
adc
repz
cs
aas
and
inc
or
mov
mov
lock
cld
std
sbb
pusha
and
movs
cli
xor
repz
fstp
cmp
ja
xchg
ret
and
mov
(bad)
push
or
xchg
retf
jecxz
adc
les
inc
sbb
les
or
push
out
sub
pop
ret
mov
adc
mov
ds
or
mov
cmp
(bad)
pop
push
inc
cld
(bad)
repnz
pop
xor
pusha
leave
jmp
faddp
loope
cmp
lahf
fwait
imul
cli
mov
mov
or
and
stos
cmp
cmp
cmp
cmp
cmp
mov
ret
sub
xor
push
cwde
aaa
test
stos
pop
inc
add
fst
jbe
aam
es
inc
imul
loop
inc
jb
test
jnp
clc
sbb
lds
pop
fsubr
repz
int
xor
jns
int3
push
aam
mov
leave
push
xchg
jp
fcom
and
xlat
not
inc
pop
retf
sub
(bad)
sti
push
pop
test
(bad)
sub
daa
ins
aaa
mov
or
ffreep
div
mov
or
ffreep
div
stos
fcmovu
lods
test
fiadd
retf
(bad)
out
push
dec
mov
mov
dec
xlat
add
fucom
jb
adc
adc
fldenv
xchg
les
fbstp
sti
fcom
arpl
(bad)
outs
out
mov
and
pop
xchg
mov
cdq
ins
sub
sbb
jg
shl
mov
sbb
mov
add
sub
dec
mov
movs
dec
and
data16
mov
inc
and
add
or
out
dec
xor
out
adc
add
add
ja
xchg
sub
mov
jno
je
lss
mov
inc
add
cmp
sub
push
leave
test
mov
pop
sar
pop
mov
push
pop
int3
outs
xlat
mov
aad
and
and
xchg
aaa
pop
(bad)
scas
lods
sbb
add
or
cmps
es
loop
add
cmp
xor
adc
pop
cdq
lods
or
ds
cmps
rol
dec
ret
adc
nop
loop
add
je
stc
sbb
popa
sahf
pop
push
bound
lock
xchg
push
add
inc
push
sti
lock
call
ss
(bad)
xchg
mov
sahf
pop
mov
add
lds
in
jne
movs
pop
das
xchg
dec
test
ins
add
and
cmp
add
sub
mov
pop
imul
mov
lods
adc
xor
out
icebp
push
test
jo
icebp
push
cmp
fnsave
cmc
ins
add
leave
test
popa
push
scas
test
loopne
and
inc
sub
into
adc
mov
push
pop
add
mov
dec
lock
(bad)
(bad)
cdq
or
or
das
outs
loope
(bad)
sub
dec
in
sar
cmps
mov
mov
mov
push
jecxz
enter
jo
ss
mov
mov
cli
inc
xor
and
push
pop
in
adc
sbb
jbe
lock
add
mov
loope
push
in
sub
push
xchg
fnstcw
add
sti
cs
jne
hlt
lds
adc
inc
cld
ror
repz
clc
fucom
push
dec
inc
femms
(bad)
scas
xchg
pop
loope
push
test
fdiv
and
scas
add
ins
stc
push
inc
fbstp
retf
cmp
mov
outs
mov
aam
adc
hlt
call
and
push
mov
xchg
int
lods
ins
inc
ins
movs
pop
mov
movs
test
sub
ins
movs
pop
mov
xor
loopne
push
push
mov
mov
out
add
rcr
mov
call
sub
pop
xor
mov
mov
sbb
pushf
in
adc
mov
sbb
cmp
push
sub
push
jo
jmp
jle
mov
out
rol
call
sbb
out
(bad)
mov
gs
lds
addr16
int
ucomiss
jecxz
cld
test
pop
mov
cld
les
dec
push
in
push
jnp
jle
in
repz
ret
mov
test
aad
bound
push
in
adc
push
ds
test
test
mov
xor
ins
ins
sbb
fs
mov
and
xchg
push
and
fst
je
mov
into
sti
mov
dec
hlt
(bad)
loop
push
in
fbstp
cmps
ja
xchg
inc
jle
push
loop
cmp
adc
and
lahf
push
xor
dec
(bad)
loop
dec
rcr
or
movs
call
in
rcl
mov
mov
sub
jp
mov
test
mov
dec
test
jae
push
pop
sbb
mov
push
pop
imul
fsubr
cdq
test
imul
je
add
inc
rcr
mov
push
icebp
pop
(bad)
pop
inc
mov
pushf
adc
stos
inc
inc
ret
sahf
scas
sub
ja
call
pop
dec
movs
sub
retf
xor
test
jo
mov
adc
mov
mov
cmp
inc
aam
mov
stos
adc
call
add
xchg
mov
lahf
mov
cs
pop
nop
add
pop
aas
adc
cmp
mov
int3
cmp
or
loop
cmp
sbb
fcmovnb
adc
repz
adc
add
jbe
clc
lsl
repz
lock
loopne
pop
cmp
not
loop
push
lea
xchg
fscale
sbb
xor
xchg
xor
pop
mov
ja
xchg
(bad)
retf
mov
push
call
retf
pop
(bad)
sbb
in
lods
es
xchg
in
jns
fild
in
mov
dec
pop
mov
inc
cli
inc
mov
pusha
je
stos
or
or
(bad)
and
dec
out
sbb
or
jnp
mov
add
add
imul
jmp
jno
adc
mov
ds
pop
inc
stos
jmp
iret
dec
and
in
test
sub
lock
data16
xor
xor
mov
loopne
stc
mov
push
push
cmp
sub
lock
and
lods
lds
push
mov
ror
addr16
add
sbb
sub
xchg
inc
fsub
push
stos
inc
push
and
in
xchg
cmp
push
sub
adc
add
scas
ret
mov
jecxz
fs
push
pop
adc
imul
dec
or
(bad)
scas
pusha
xchg
dec
das
mov
pop
call
dec
mov
jp
inc
fisubr
or
aas
and
adc
jno
sub
mov
gs
loope
mov
sub
mov
adc
iret
jl
gs
xor
in
inc
outs
jg
mov
mov
mov
and
aam
push
inc
mov
push
mov
pop
inc
dec
and
aad
sub
cmp
xchg
cdq
sub
mov
ins
xchg
scas
add
inc
outs
test
out
int
xchg
dec
dec
mov
pop
add
xcrypt-ecb
push
popf
ja
aas
pop
jae
enter
cmp
adc
js
sbb
cmc
push
movs
pop
syscall
jbe
mov
aaa
out
rol
into
push
pop
lods
ins
lds
and
push
movs
ins
mov
fxtract
in
retf
std
jbe
lods
xor
loope
mov
cmps
add
outs
mov
cmp
xor
push
cmp
shr
pop
cmp
mov
jmp
mov
sub
js
fcmovbe
and
jg
mov
mov
je
add
push
pop
aas
or
mov
cmps
daa
jmp
sahf
or
enter
inc
sbb
in
or
mov
sbb
mov
jl
and
mov
fst
test
test
cmps
push
push
call
xchg
stc
imul
stc
movs
repnz
lods
add
scas
and
sahf
inc
pop
test
dec
sbb
lock
xchg
mov
jo
rcl
inc
(bad)
jg
popf
and
pop
outs
dec
fbld
out
test
jmp
push
push
daa
into
ret
les
dec
mov
push
dec
xchg
mov
mov
clc
scas
retf
dec
nop
stc
ror
dec
and
fisubr
mov
ss
adc
sub
cmps
fst
ins
in
(bad)
mov
and
int3
jmp
call
rcr
sbb
cmps
repnz
lock
jge
(bad)
adc
icebp
mov
stos
cmp
mov
aaa
hlt
out
sahf
xor
xchg
femms
mov
sbb
or
mov
fdivr
lds
add
idiv
lods
mul
fldcw
test
inc
aam
stos
clc
cdq
push
imul
xchg
or
pusha
xchg
dec
jge
sub
cmp
adc
cmp
sub
leave
inc
mov
adc
jb
scas
(bad)
dec
in
sub
xchg
inc
arpl
xor
inc
or
fs
mov
shl
dec
sub
jns
push
mov
retf
xor
ror
push
add
outs
movs
inc
sub
adc
int
aaa
add
ins
leave
imul
or
(bad)
xor
mov
mov
adc
sub
loopne
shl
jg
aaa
sti
sbb
cmp
and
xlat
adc
loopne
jecxz
push
ds
push
mov
cmp
mov
repz
loopne
mov
mov
pop
sub
movs
push
adc
and
cs
ret
cs
call
mov
mov
mov
jecxz
adc
ins
xor
and
mov
data16
arpl
out
and
ficom
xchg
scas
jae
das
test
push
add
ins
daa
cmp
mov
push
inc
mov
fidiv
aad
scas
icebp
sbb
ja
and
mov
iret
push
sbb
inc
stos
stos
loop
pop
nop
call
mov
jl
push
inc
ins
push
sar
aam
mov
dec
pop
ror
and
lods
aaa
js
pop
leave
jmp
fs
mov
sar
add
jbe
addr16
cwde
popf
aam
repnz
test
push
(bad)
sub
mov
sub
(bad)
repz
pusha
jmp
adc
push
dec
xor
sub
push
cs
jb
arpl
aam
pushf
dec
jno
jne
jnp
aaa
cdq
jmp
push
mov
xchg
(bad)
pop
sub
mov
push
cmc
inc
push
fs
xchg
push
jg
lahf
sub
and
in
push
aad
mov
mov
mov
dec
movs
arpl
hlt
sub
retf
stc
xor
mov
(bad)
shl
retf
not
clc
mov
mov
mov
push
or
gs
(bad)
outs
les
retf
fadd
fadd
mov
xchg
fcomp
sbb
ret
imul
or
rol
fisubr
push
pop
mov
jp
cmp
jmp
adc
push
mov
sti
and
jae
xchg
push
mov
dec
hlt
cmp
inc
int
fs
das
(bad)
pop
lock
xor
std
test
jo
mov
mov
jns
arpl
cmp
add
bound
data16
out
add
xlat
loop
scas
jo
rcr
into
mov
in
ret
aam
enter
imul
(bad)
cmp
and
je
add
mov
push
mov
test
nop
xchg
push
out
pop
in
sbb
pop
out
test
sbb
adc
cwde
or
retf
lea
add
lds
test
sub
pop
xor
mov
or
or
out
int
xlat
aad
and
push
and
mov
push
mov
mov
fsub
push
sbb
push
shl
rol
sahf
leave
jns
add
cmp
dec
push
les
stos
mov
cmp
test
dec
xchg
jmp
sbb
addr16
push
inc
ins
inc
outs
lods
lods
les
xchg
dec
es
jl
push
mov
push
mov
pop
dec
mov
dec
in
dec
dec
push
in
fimul
jnp
(bad)
shl
and
mov
push
dec
jp
inc
call
sub
mov
mov
repz
sub
dec
fldenv
pop
fidiv
retf
frstor
mov
pop
jo
rol
dec
jmp
jg
ins
jae
sbb
pop
pop
push
mov
rcr
adc
sbb
and
or
ret
cmp
pop
add
fcom
cwde
xor
arpl
mov
scas
jl
cwde
int3
push
in
xchg
imul
xchg
push
sbb
pusha
rcl
retf
mov
sbb
in
or
rep
pusha
sub
jnp
xchg
jl
mov
sbb
jnp
add
push
fwait
lock
loopne
or
sbb
fwait
test
inc
movs
out
imul
mov
jae
pop
mov
mov
int
std
push
sbb
test
test
jno
retf
adc
movs
inc
hlt
in
(bad)
xchg
jne
mov
fist
mov
or
ja
scas
test
push
add
dec
push
inc
adc
fsub
jle
pushf
mov
mov
outs
out
sahf
xchg
add
sub
jmp
dec
jae
pop
jae
pusha
jle
jp
pop
cmp
fidivr
sub
scas
repz
jae
jmp
fiadd
ss
outs
add
js
cmp
js
pop
sub
std
rcl
jl
push
pop
jb
repz
lds
out
dec
jmp
dec
int
(bad)
fisubr
(bad)
xor
push
push
stos
mov
pop
cmc
jmp
xchg
lods
jne
push
leave
jl
sub
test
mov
add
lods
xchg
mov
nop
mov
out
xchg
push
ins
int
adc
not
loope
jnp
mov
xor
scas
cwde
inc
dec
mov
hlt
fs
sub
aad
test
scas
jmp
sbb
mov
mov
cli
fisubr
stos
popf
cli
xor
fild
repz
sti
jbe
jge
mov
xchg
(bad)
fisttp
add
and
popa
mov
rol
sbb
jnp
mov
into
aaa
call
sub
jmp
in
sub
popw
movs
cmp
icebp
leave
cdq
es
mov
outs
add
test
jnp
inc
pop
rcl
stos
js
jnp
xor
push
and
push
jge
jno
out
dec
inc
or
ja
mov
push
add
push
mov
sub
push
inc
sbb
ret
cmp
int
inc
sti
stos
jle
pop
mul
xchg
fnsave
(bad)
mov
xor
scas
fdiv
not
in
pop
mul
xchg
fnsave
(bad)
jge
jg
neg
cmps
neg
xchg
faddp
sahf
sti
xchg
cli
das
out
mov
mov
(bad)
mov
daa
inc
mov
bnd
ja
xor
je
je
(bad)
cmp
mov
jnp
dec
fisub
retf
mov
aas
and
jle
mov
inc
and
inc
jge
dec
dec
icebp
lods
jle
and
fcomp
loopne
sub
or
rol
enter
into
int3
enter
xor
xor
daa
call
nop
inc
or
mov
or
cmps
mov
xchg
daa
or
xlat
mov
pop
jl
pop
mov
sbb
add
xchg
add
pop
pusha
xor
xor
push
mov
mov
lods
jns
fistp
loope
xor
clc
iret
sahf
add
mov
xor
mov
xor
adc
mov
cmp
mov
pop
adc
mov
push
(bad)
dec
es
sub
jbe
xor
mov
jo
hlt
dec
int
adc
mov
movzx
xchg
push
lods
call
mov
sti
fndisi(8087
jmp
pushf
in
ss
(bad)
aam
dec
xchg
lods
adc
inc
cdq
sar
imul
sbb
ins
or
sbb
mov
mov
leave
and
outs
js
dec
(bad)
push
cmp
dec
arpl
pushf
xor
arpl
lods
rcl
jp
adc
inc
and
adc
rcr
pop
stos
mov
das
xor
dec
(bad)
jns
cmps
or
ins
pop
loope
mov
jmp
dec
push
outs
fadd
cmp
adc
sub
mov
sub
pusha
xor
stc
cmp
sar
sub
or
jecxz
and
fsubr
or
dec
pusha
or
cli
xchg
pop
mov
js
mov
mov
neg
mov
les
gs
or
lods
or
inc
(bad)
mov
xchg
ret
inc
xchg
sub
shl
fmul
ins
ret
adc
int3
shr
ds
xchg
sub
ins
movs
ret
pop
fcomp
xor
outs
or
jns
daa
cs
inc
xchg
pop
popf
or
loopne
sub
sahf
or
push
fcom
or
out
pop
jecxz
xchg
(bad)
movs
inc
les
aaa
ds
mov
stos
gs
jns
out
(bad)
(bad)
xor
out
cmps
iret
add
ins
inc
stc
fwait
sub
mov
iret
pop
lds
mov
cmp
cmp
or
pop
mov
daa
pop
jbe
cmp
shl
ss
into
leave
adc
outs
std
xchg
jl
test
adc
pushf
or
cli
rol
pop
imul
mov
retf
lock
mov
mov
mov
into
jbe
js
sub
cmp
sar
jbe
xor
dec
(bad)
cmp
xchg
addr16
push
fld
cdq
retf
fnstcw
pop
imul
push
push
daa
sti
mov
dec
or
cld
adc
jno
mov
mov
cmc
out
fwait
jo
ja
dec
shl
in
lock
adc
(bad)
fdivrp
push
les
js
shr
sub
push
sar
lock
bound
sbb
je
or
clc
imul
shr
jecxz
pop
aam
mov
xor
sub
push
(bad)
mov
sub
repz
jle
out
seto
in
call
clc
(bad)
movs
pushf
test
pop
je
outs
xchg
mov
ret
adc
stc
loop
loop
push
(bad)
in
adc
test
cmp
mov
xchg
das
sahf
sbb
cwde
push
sub
xor
dec
(bad)
sbb
cmp
out
icebp
push
xor
mov
fbstp
jecxz
(bad)
(bad)
out
scas
vmovapd
(bad)
clc
les
scas
fld
push
fs
sub
das
outs
cmps
inc
test
fs
mov
or
dec
push
in
aam
jbe
sub
daa
xor
pop
mov
retf
cdq
inc
repz
(bad)
and
shl
outs
dec
mov
mov
sti
lock
lods
mov
push
test
adc
rol
jne
xchg
mov
ficom
push
or
sahf
addr16
jnp
push
jnp
mov
pop
movs
test
ja
(bad)
jmp
in
mov
adc
std
ror
mov
call
retf
push
push
je
mov
imul
es
out
in
dec
and
(bad)
or
pop
push
loope
loopne
xor
or
jg
pop
lds
pop
fist
stos
cwde
sub
mov
in
rcr
int
cmp
clc
adc
fs
shr
fucomip
dec
jg
mov
sbb
fadd
test
clc
mov
arpl
ror
pop
ror
pusha
fnsave
push
mov
out
aam
fucomp
jns
jmp
pop
lock
mov
movs
repz
inc
sbb
ja
inc
pop
movs
push
cmp
loop
cmp
inc
pop
pop
add
repz
mov
ds
aas
out
mov
lahf
int3
out
stos
mov
or
xor
or
push
mov
popa
jne
(bad)
retf
je
stos
jb
dec
cs
or
xor
mov
into
push
xor
in
cld
mov
xchg
jmp
fcomp
clc
cmp
dec
call
nop
inc
cwde
pop
mov
xchg
fiadd
repz
clc
fnstsw
mov
ins
inc
push
lods
xchg
or
mov
sbb
xor
cmp
ds
test
dec
mov
pop
push
out
scas
jmp
sbb
jge
jno
add
jecxz
js
sbb
movs
inc
arpl
xchg
sub
cs
retf
xor
xchg
jecxz
push
imul
(bad)
in
jnp
in
cdq
inc
push
es
sar
xchg
ror
stos
adc
jbe
aad
xchg
movs
xor
(bad)
sti
push
clc
sti
lahf
mov
int
and
sbb
cmp
sub
loope
inc
mov
popa
push
cld
add
popa
push
xor
fisub
mov
pop
dec
imul
shr
(bad)
inc
add
pop
and
mov
clc
into
(bad)
out
sbb
test
lahf
mov
loopne
(bad)
rcr
(bad)
xchg
push
jp
imul
dec
rcl
xor
cmps
fsubr
sbb
imul
pop
jl
js
pop
adc
fsubrp
ds
pop
and
iret
jmp
pop
jg
xchg
call
inc
imul
jbe
daa
pop
loop
popf
outs
shl
xchg
sub
mov
or
push
in
mov
retf
loop
loop
jp
jp
ins
jbe
aaa
mov
es
sbb
dec
rcl
pop
scas
mov
push
pushf
addr16
xchg
ret
shr
jo
pop
mov
add
xchg
xor
pop
aad
outs
cmp
data16
ins
int3
neg
xrelease
push
dec
lods
xor
xchg
fld
xchg
clc
or
sahf
or
mov
xchg
push
push
les
daa
dec
icebp
jmp
xchg
xor
and
push
jae
jmp
(bad)
arpl
loop
loopne
pop
cmp
aam
inc
in
arpl
popa
sbb
adc
push
sahf
add
push
(bad)
jge
fidivr
xor
in
ds
mov
(bad)
push
jp
dec
dec
sub
jecxz
inc
and
shl
call
xor
in
scas
and
mov
fsub
pop
and
mov
hlt
cmp
cmp
loopne
js
dec
mov
rcl
or
clc
push
mov
daa
rol
mov
jmp
adc
and
pop
(bad)
(bad)
imul
xor
(bad)
out
cmp
push
out
sbb
sar
das
in
in
xor
dec
mov
ficom
(bad)
fwait
xor
mov
cmps
cmp
test
imul
pop
jg
js
xchg
sbb
aad
js
dec
adc
sub
mov
inc
dec
int3
cld
pop
lock
cld
into
xor
cmp
arpl
je
enter
push
inc
push
pop
mov
pop
mov
cmc
mov
inc
fs
aas
pop
mov
adc
sbb
mov
or
and
adc
xchg
(bad)
add
pop
call
xor
push
xchg
xchg
mov
pop
outs
xor
in
enter
into
pop
mov
or
(bad)
mov
jecxz
out
inc
sbb
ret
daa
mov
lahf
fwait
stos
ret
ret
mov
daa
ins
mov
in
(bad)
nop
(bad)
adc
cmp
ja
jbe
int3
mov
xor
(bad)
into
test
cmp
aad
pop
jmp
push
scas
fistp
movq
mov
mov
out
adc
push
sbb
popf
inc
jo
mov
fwait
pop
push
xor
mov
or
enter
mov
(bad)
neg
outs
loopne
mov
test
sbb
sub
mov
and
cmps
adc
cmp
mov
cmp
push
ror
scas
mul
pop
sub
pop
hlt
mov
or
out
fimul
inc
jp
mov
jle
adc
adc
sar
std
(bad)
daa
cli
out
inc
cld
dec
outs
mov
jg
int
ffreep
jb
mov
push
mov
cdq
es
int3
shl
inc
mov
push
add
cmp
(bad)
mov
sar
pop
dec
adc
shr
sbb
hlt
(bad)
jecxz
jo
adc
es
or
and
mov
and
leave
in
xchg
dec
sbb
mov
or
xchg
imul
shl
jns
push
xchg
stos
int3
jb
pop
jmp
inc
sbb
xchg
sbb
and
mov
sbb
pop
hlt
sub
pop
mov
mov
lea
cmps
mov
jnp
mov
dec
xchg
outs
mov
retf
js
dec
sub
add
loope
mov
pop
push
in
jb
push
cmp
fcomp
and
mov
out
sbb
inc
fnstenv
pop
in
bound
sahf
stos
sar
sub
pop
pop
shr
sub
mov
mov
sub
aas
hlt
pop
pop
or
pusha
adc
push
inc
out
xchg
fld
inc
daa
dec
adc
or
inc
imul
loope
hlt
sub
pop
and
clc
xor
stos
xchg
cmp
cmp
lods
sub
dec
and
xchg
xchg
pop
mov
xchg
in
or
int
test
hlt
xchg
add
daa
nop
pop
adc
ror
adc
xchg
sub
and
xor
gs
adc
sbb
add
fild
pop
sub
adc
(bad)
or
pop
xor
push
iret
xor
inc
mov
pop
pop
ins
movs
push
sahf
dec
xchg
mov
push
jmp
outs
out
pop
push
add
xchg
sub
cmp
icebp
jne
fidiv
jle
int3
jmp
push
mov
inc
outs
xlat
stos
mov
cmps
in
call
push
pop
inc
mov
cmp
int
sub
fsubr
shl
ror
inc
mov
in
inc
cmp
(bad)
clc
push
fiadd
push
push
mov
loop
test
sub
ins
mov
add
add
pushf
push
push
jmp
sbb
mov
push
add
sbb
sub
lock
sbb
scas
clc
daa
test
xor
and
inc
fcmove
xor
xlat
mov
fbstp
push
and
pop
lds
fistp
mov
or
shl
push
adc
mov
mov
push
mov
int3
cmp
gs
jmp
jnp
idiv
inc
cs
jae
jle
das
xchg
sbb
loope
ss
das
mov
js
mov
xchg
cld
(bad)
fs
int3
inc
pop
call
or
mov
mov
fcmove
ds
mov
lahf
ud0
xchg
push
call
jl
ror
jnp
pop
into
jmp
mov
adc
cld
pop
sub
push
jecxz
inc
arpl
mov
sub
lahf
xor
mov
arpl
in
mov
sahf
mov
ds
jnp
push
(bad)
pop
jns
sub
adc
ja
(bad)
jae
cmps
push
cld
ss
jo
les
hlt
outs
dec
std
push
sub
cmp
sbb
push
adc
mov
mov
fnstsw
fld
push
icebp
sbb
daa
mov
popa
cwde
nop
idiv
shl
jo
add
int3
ss
fwait
and
(bad)
stc
add
stc
mov
cwde
cmp
gs
pop
mov
test
test
gs
enter
loope
and
cmps
sahf
cmps
pusha
cld
daa
xchg
cmp
outs
dec
lds
jmp
and
jp
stos
mov
adc
add
dec
in
and
jmp
pop
data16
not
inc
ins
pop
imul
nop
out
enter
cdq
xchg
pusha
mov
popf
dec
and
or
mov
scas
jg
xlat
fsubr
aad
hlt
(bad)
call
or
xor
and
dec
stc
retf
push
(bad)
xor
int3
or
(bad)
aam
xchg
es
sahf
pop
outs
or
data16
jbe
sar
cmp
mov
mov
(bad)
mov
(bad)
sbb
outs
call
or
je
or
jb
clc
adc
mov
sbb
mov
addr16
sbb
jmp
(bad)
hlt
dec
test
clc
(bad)
jecxz
jmp
inc
outs
sbb
mov
add
scas
(bad)
jbe
and
imul
mov
push
mov
sub
sbb
add
xor
enter
xor
in
or
sti
lahf
in
sbb
mov
push
xchg
mov
int
retf
sub
xchg
dec
jecxz
push
xchg
mov
jecxz
in
in
xor
mov
sub
push
dec
sahf
push
ret
push
push
push
xchg
repz
adc
inc
push
push
test
sbb
xchg
arpl
sub
inc
push
fcom
aam
jle
les
dec
cmc
mov
movs
mov
cmp
jnp
xchg
ror
stos
add
and
mov
retf
daa
xchg
mov
jg
out
dec
xchg
ja
jge
cld
scas
xchg
sti
pop
in
aaa
mov
test
ja
aas
scas
test
or
cmp
ret
push
xchg
pop
or
mov
lds
xchg
and
and
adc
mov
ins
mov
mov
push
(bad)
mov
rol
dec
cmp
cmps
lahf
dec
and
jg
mov
aas
daa
dec
(bad)
fcmovnb
pop
dec
mov
les
inc
cmps
push
mov
in
and
xchg
(bad)
push
stc
inc
or
jmp
inc
call
jl
test
xchg
sub
fiadd
xchg
and
mov
call
cmp
call
inc
inc
push
mov
rcr
in
inc
fimul
lods
xchg
inc
ins
imul
test
mov
push
inc
pop
das
dec
jnp
sub
ror
mov
(bad)
adc
inc
(bad)
pop
inc
sub
jle
or
pop
add
ins
cmps
or
test
dec
sbb
jecxz
sub
das
inc
enter
and
jl
adc
fistp
and
jl
adc
iret
mov
push
imul
push
bound
adc
gs
stos
xor
mov
int3
dec
sub
or
pop
mov
ret
push
sti
cmc
add
inc
cmp
repnz
lock
sbb
js
dec
jnp
cld
imul
repz
sti
and
aas
repnz
mov
dec
cdq
into
mov
mov
call
into
pusha
dec
sub
imul
repnz
int3
popf
shr
popa
pop
cmp
push
or
pop
inc
(bad)
sub
jle
xchg
mov
mov
jnp
or
mov
fwait
lds
push
inc
dec
ins
mov
pop
adc
std
int3
pop
and
aaa
cmp
int3
out
mov
mov
cwde
or
aas
sbb
mov
adc
push
mov
xchg
ss
lahf
ret
mov
mov
lahf
imul
jmp
cwde
xor
inc
outs
ss
leave
fldenv
ds
(bad)
repnz
hlt
push
call
les
jge
jg
aas
fmul
and
(bad)
hlt
inc
das
icebp
cmps
cmc
mov
xor
(bad)
popa
push
lea
sub
test
hlt
test
cld
push
aas
xchg
sbb
xchg
mov
dec
fldcw
pop
pop
(bad)
fnstenv
stc
dec
mov
jecxz
and
sub
mov
adc
sub
rcl
pop
adc
mov
push
mov
jae
adc
xchg
jo
mov
and
out
jnp
pop
out
retf
repnz
push
pop
ret
inc
aaa
dec
outs
sbb
fimul
jg
ja
push
bt
add
push
fst
jecxz
or
(bad)
adc
sub
repnz
lahf
mov
int3
mov
dec
retf
mov
fdivr
cmps
inc
sar
(bad)
and
das
mov
adc
xor
dec
inc
cld
lods
push
in
inc
adc
or
fcom
xor
out
icebp
mov
icebp
add
leave
xor
push
sub
lods
add
push
ss
dec
(bad)
call
(bad)
hlt
dec
in
jl
sbb
sahf
sub
inc
jp
retf
test
out
out
jns
mov
repnz
inc
xor
sbb
les
and
std
in
dec
and
popf
dec
les
adc
xchg
es
(bad)
out
cmps
pop
push
fadd
inc
outs
xchg
fcom
sub
jno
dec
xchg
fild
xor
pop
inc
cwde
xchg
leave
pop
int
xchg
fs
fdiv
adc
cmp
data16
or
or
mov
stos
leave
jg
mov
add
ret
sbb
jmp
mov
jecxz
mov
retf
mov
stos
aad
jmp
sub
out
in
and
sub
iret
stos
sbb
std
xchg
jp
ins
dec
outs
test
push
mov
int3
shr
pop
pusha
jns
cmp
sbb
(bad)
loopne
sar
push
movs
pop
fsub
add
lods
(bad)
nop
jmp
nop
jmp
jbe
not
cwde
jl
hlt
daa
not
std
adc
xor
mov
xchg
pop
xlat
pop
add
mov
sbb
xchg
rcr
aam
add
mov
push
push
aad
dec
xchg
(bad)
xchg
mov
inc
and
push
dec
inc
cmp
inc
outs
cmp
loopne
popf
cmp
iret
call
std
inc
pop
or
mov
and
dec
in
(bad)
cmc
loopne
sbb
test
xchg
push
ret
adc
push
jmp
aad
mov
add
scas
cmp
jmp
jle
clc
push
les
cmp
mov
xchg
frstor
and
xchg
(bad)
push
sbb
aas
jecxz
and
mov
inc
adc
add
dec
push
and
mov
mov
in
into
xchg
push
and
ficomp
sbb
push
cmp
jp
jp
stos
stos
xlat
mov
adc
leave
mov
cmp
shl
bound
aam
mov
and
xor
fadd
sar
or
ret
dec
shl
or
fdiv
ror
xor
cmp
dec
push
xor
(bad)
mov
neg
jae
stc
into
mov
push
into
fidivr
into
lods
sbb
pusha
cld
or
aam
xchg
mov
push
mov
dec
aas
mov
out
ss
test
out
test
mov
test
inc
stc
add
popa
das
jp
scas
push
mov
js
cdq
js
adc
pushf
inc
sub
aas
mov
mov
mov
push
(bad)
call
call
mov
pop
mov
cmps
repnz
outs
mov
xchg
xlat
clc
dec
pushf
icebp
rcl
pop
inc
cli
sar
lahf
test
sub
and
jno
repnz
cmc
or
ret
loopne
xchg
sbb
out
xor
call
lahf
aaa
mov
pop
push
sti
push
addr16
ins
mov
dec
(bad)
in
(bad)
pop
xor
mov
jb
mov
(bad)
xchg
xlat
aam
or
in
xor
xlat
mov
pop
dec
jl
stc
pop
mov
sub
pop
into
pop
aaa
mov
mov
pop
dec
push
jl
xchg
lods
add
add
ds
aad
cmp
(bad)
mov
in
inc
in
imul
xor
xor
nop
imul
xchg
sbb
cmp
push
sahf
mov
out
sub
fidiv
clc
sbb
jl
jo
jge
inc
mov
ins
xor
out
dec
lahf
push
mov
fs
ret
dec
dec
lds
sub
fwait
jns
mov
int
je
dec
loop
cmps
jb
out
pop
stos
call
and
cmp
into
int3
jmp
mov
and
gs
int
jle
jns
jle
inc
(bad)
rcl
out
div
imul
(bad)
(bad)
xchg
psubq
jbe
sti
cmp
jecxz
daa
xor
sti
shl
fnsave
sbb
cmp
push
retf
sti
inc
fst
jge
xchg
stos
fldcw
mov
(bad)
mov
push
(bad)
xor
and
pop
inc
dec
xchg
jbe
fs
cmp
inc
jmp
dec
aas
dec
sub
inc
addr16
hlt
retf
and
xor
jle
sub
or
push
in
cmp
add
mov
lods
mov
mov
jle
mov
loope
lods
mov
xchg
pop
mov
in
mov
sub
lods
xchg
pop
or
ins
dec
stc
mov
sub
inc
or
adc
into
push
adc
mov
xchg
mov
jl
mov
sbb
pop
cmp
js
shl
jge
mov
rcr
shl
in
in
in
gs
jns
xor
adc
jbe
in
sahf
fadd
fsub
das
imul
xor
(bad)
pop
cld
int
xchg
(bad)
fld
fs
mov
xchg
clc
dec
repnz
xchg
fisttp
mov
pminub
jg
aaa
call
lods
inc
mov
xor
aas
inc
cli
xchg
cli
pop
mov
fist
mov
icebp
push
jno
mov
jecxz
add
xor
pop
test
je
dec
hlt
adc
pop
fldenv
fisub
repnz
mov
xchg
xor
bound
or
add
sub
mov
pop
jo
into
rcr
hlt
imul
dec
cmp
stc
cmp
and
inc
cli
mov
enter
xchg
xchg
out
icebp
outs
rcl
movs
mov
arpl
(bad)
pop
cmps
test
mov
call
inc
jne
(bad)
in
fucomp
call
cmp
std
outs
fild
(bad)
xor
out
lds
jns
jmp
jb
dec
fsubr
jb
dec
(bad)
xchg
add
jecxz
in
adc
jecxz
stos
(bad)
call
ficomp
mov
fild
stos
mov
lea
outs
fisttp
mov
test
fimul
mov
cmp
bound
fdiv
push
in
in
nop
inc
or
ins
ficomp
lods
push
ins
aad
sti
push
imul
fisttp
xchg
into
mov
xchg
shr
mov
enter
pop
icebp
sbb
retf
xor
push
lods
mov
retf
mov
and
mov
dec
xchg
push
sbb
pop
test
je
push
ret
xchg
push
in
cli
out
and
fmul
sbb
pop
jnp
or
push
pop
imul
fisubr
dec
daa
ins
jae
loope
mov
shl
push
jl
pop
xchg
lods
jle
call
(bad)
retf
push
mov
and
mov
and
pop
xlat
gs
retf
cld
retf
out
jg
loope
mov
inc
scas
hlt
call
lods
jmp
mov
fwait
mov
and
jnp
ror
add
lds
ret
cdq
xor
mov
shr
(bad)
push
mov
mov
push
jbe
bound
rcl
adc
outs
leave
lods
mov
call
std
mov
test
outs
pop
dec
loopne
retf
out
outs
int
bound
or
push
(bad)
fdivrp
cmps
(bad)
lds
mov
push
add
retf
xchg
and
in
fs
ins
adc
lea
push
cmp
mov
push
mov
scas
pop
mov
mov
in
dec
mov
dec
add
cmp
mov
ret
aad
or
cmps
fst
xchg
xchg
out
imul
mov
add
mov
es
lahf
movs
mov
cmp
out
or
dec
and
push
cmps
cdq
jns
retf
xor
xor
outs
mov
imul
(bad)
cmp
xor
dec
dec
outs
pop
xchg
xchg
iret
fidivr
test
dec
sub
call
clc
inc
bound
cdq
push
pop
xchg
xlat
mov
pop
add
push
out
mov
dec
xlat
call
dec
push
stos
add
test
push
sar
jae
retf
jl
sub
dec
(bad)
aam
dec
dec
cwde
mov
stos
xchg
scas
retf
rol
(bad)
fcomp
mov
and
add
fcmovbe
push
xchg
sbb
cmp
xchg
push
aad
jmp
dec
mov
loopne
(bad)
lea
and
mov
pop
push
push
sub
push
test
inc
sbb
xchg
rol
mov
cli
push
(bad)
int
sub
popf
fadd
add
jp
sub
dec
sbb
mov
xchg
ja
adc
jmp
retf
fimul
(bad)
les
sahf
xor
dec
ss
xlat
imul
retf
cmp
push
mov
pop
inc
adc
js
dec
retf
xor
mov
or
adc
lahf
cmps
daa
sbb
hlt
mov
outs
je
(bad)
loope
sub
push
adc
leave
rep
movs
add
jo
out
shl
int3
retf
mov
imul
push
and
and
xor
ins
pop
jae
push
fs
mov
add
sbb
sub
jo
sahf
mov
inc
push
and
into
mov
repnz
sub
pop
(bad)
jbe
ins
clc
out
mov
fcomp
push
loopne
sub
sub
dec
mov
and
jmp
adc
in
inc
sub
mov
lahf
ret
mov
fldcw
bound
imul
fld
push
mov
pop
int
jne
ins
arpl
lods
mov
ror
inc
imul
stos
pop
mov
pop
mov
popa
repz
in
inc
or
cmp
add
das
loop
lods
adc
mov
jl
push
mov
aam
adc
loopne
add
jmp
or
add
xlat
and
fwait
repz
sbb
push
jno
xchg
pop
xor
aaa
cmp
fild
std
pusha
test
xlat
xchg
sub
fwait
add
inc
ins
gs
xor
pop
push
mov
jg
test
stos
mov
and
cdq
jno
ins
xchg
retf
bound
pushf
ins
mov
jo
sub
(bad)
sbb
mov
xor
aam
loop
cli
bound
pop
fisttp
inc
jmp
call
and
lods
mov
scas
loop
jmp
(bad)
out
adc
out
dec
mov
popf
enter
(bad)
in
loopne
mov
sbb
push
call
jmp
in
adc
inc
pop
les
sub
cmc
fdiv
push
mov
scas
xor
xor
cmps
(bad)
test
(bad)
popf
push
pop
ret
sub
jne
sbb
sbb
cmps
jnp
cwde
pushf
mov
dec
lods
fnstsw
and
stos
mov
mov
or
(bad)
cdq
pop
or
retf
bound
pushf
jae
out
lahf
cmps
loope
jne
dec
mov
or
mov
or
nop
sub
mov
imul
jecxz
fcmovnu
inc
enter
mov
or
or
pop
repnz
push
sbb
jecxz
mov
lock
mov
jecxz
fwait
ret
jb
idiv
js
add
bound
ret
xchg
add
add
xor
sahf
stc
test
adc
xlat
dec
test
and
jns
in
sub
xlat
(bad)
jge
mov
fwait
cmps
movs
mov
into
aad
jnp
stos
test
adc
mov
jp
outs
xchg
cmp
shl
in
loopne
in
pop
pop
pop
and
sbb
sub
mov
pushf
adc
pop
ja
sbb
jmp
fsub
push
and
ins
pop
add
mov
cmp
mov
ins
jecxz
xor
xor
adc
or
scas
and
xor
nop
inc
mov
movs
xor
and
push
xor
inc
dec
jnp
push
dec
pop
rol
lods
neg
push
mov
mov
mov
jb
sbb
addr16
dec
jmp
dec
xchg
jo
jge
hlt
and
jo
scas
test
xlat
out
ins
loop
mov
movs
sub
add
pushf
cmps
dec
lock
and
pop
fnstenv
in
xchg
mov
jp
repnz
jge
jp
pop
dec
ss
xchg
jns
jae
cs
push
adc
pop
imul
add
in
cmp
movs
inc
jl
sub
add
les
lods
xchg
inc
mov
mov
push
jns
add
scas
adc
ja
mov
test
dec
outs
shl
xchg
in
retf
movs
mov
nop
jmp
pop
jg
test
sbb
jns
xchg
jl
inc
push
jne
sbb
pop
ret
mov
int3
es
jb
arpl
mov
mov
xchg
push
out
sbb
or
push
movs
xor
push
pop
jb
cmp
mov
cmp
stc
movs
push
test
mov
fwait
cld
test
mov
pop
adc
ins
add
mov
rcl
sbb
out
inc
aas
mov
scas
sub
dec
push
or
adc
(bad)
cmps
or
add
jne
loopne
jns
cmps
fiadd
pop
push
shl
div
mov
jmp
into
jge
cmp
xchg
sbb
add
shl
icebp
jno
inc
or
into
xor
or
hlt
ss
pusha
test
or
movs
rep
loope
cmp
adc
sbb
xor
cmp
test
mov
mul
lea
loopne
mov
hlt
(bad)
or
hlt
mov
inc
adc
xchg
shl
cdq
loopne
cs
xchg
xchg
mov
ds
pop
push
call
ins
ficom
jnp
or
xor
mov
push
shl
add
call
sub
dec
ja
mov
mov
pop
je
mov
sbb
(bad)
out
js
mov
adc
sbb
addr16
mov
xor
adc
ins
adc
sub
mov
jnp
mov
jmp
movs
lds
cwde
ret
(bad)
mov
es
(bad)
sti
push
hlt
jb
and
aas
pop
cmp
xchg
mov
daa
shl
sub
dec
out
(bad)
jmp
or
jmp
mov
cmp
or
push
mov
dec
mov
xor
xor
xor
pop
xchg
pop
addr16
push
pusha
or
mov
push
aad
cmc
lock
jbe
mov
movs
mov
in
xchg
rcr
or
xor
cld
shl
imul
xor
call
adc
xchg
je
jne
cmp
cdq
jmp
lods
or
mov
push
jmp
dec
pop
push
cmps
fcomp
lods
and
cld
neg
add
mov
je
dec
ror
ins
pop
sbb
lock
bound
xchg
loopne
ss
loopne
aas
and
xor
(bad)
adc
jnp
(bad)
ror
pushf
aaa
cwde
jae
push
mov
add
(bad)
sbb
sahf
push
lock
and
lods
jecxz
loop
in
sbb
pop
fmul
movs
addr16
out
dec
pop
call
cdq
out
scas
fidiv
mov
or
ss
call
add
mov
xlat
xchg
in
add
sbb
fist
out
je
and
es
mov
icebp
adc
loop
das
fisub
and
mov
xor
out
jmp
jmp
cvtps2pd
jbe
shr
aas
cmp
jb
and
xor
xor
or
dec
dec
jge
or
mov
ret
es
sbb
xor
jl
sbb
fsubr
popf
cmp
sbb
arpl
inc
test
cmp
jmp
mov
not
xchg
dec
jmp
push
je
fimul
cmps
cmp
adc
int3
fmul
mov
sub
jae
mov
sbb
bound
mov
test
dec
inc
push
fbld
push
mov
test
mov
inc
cmp
in
loop
stc
frstor
enter
mov
lea
adc
jne
ss
movs
test
(bad)
lock
outs
lahf
sbb
adc
jmp
dec
push
and
mov
adc
sbb
inc
pop
mov
adc
ret
jg
jne
mov
popf
call
jne
sub
and
popf
and
cs
fimul
jne
stos
sub
mov
sub
and
jbe
call
mov
int3
fwait
sub
iret
xchg
cwde
pop
or
in
add
scas
jge
pop
lds
pop
(bad)
cld
xor
shr
jle
xchg
adc
jmp
mov
shr
inc
fwait
add
shl
div
ficomp
add
xor
xchg
inc
dec
mov
iret
stos
mov
inc
inc
adc
mov
les
mov
push
pop
jl
dec
je
and
(bad)
movs
ret
retf
xor
dec
push
sub
sub
mov
cmps
lea
mov
imul
sbb
cmp
je
jb
cmps
inc
fisttp
sub
(bad)
fnstsw
or
bound
out
dec
add
and
dec
stos
aas
lock
fstp
pop
cwde
sti
mov
jae
(bad)
fisttp
dec
dec
jl
dec
push
cmc
aas
cmp
iret
idiv
ins
push
xor
xchg
sub
aad
sbb
sub
lods
inc
fistp
jae
and
int3
shl
ret
cld
jo
fist
xchg
pop
rol
xor
add
popf
dec
cmp
xchg
outs
loopne
or
or
mov
into
cmps
xchg
les
push
and
aam
iret
sbb
xor
enter
mov
or
lds
popa
or
mov
cmps
xchg
test
inc
add
jp
and
out
inc
dec
sbb
aas
cmps
sub
and
inc
sbb
xor
push
mov
lods
xchg
shr
rol
push
repz
dec
mov
cmp
sti
loope
aas
mov
cwde
fucomp
arpl
sahf
test
xor
sub
pop
xchg
or
in
lods
pop
test
dec
mov
aam
adc
cs
dec
adc
aam
push
add
xor
stos
push
call
test
mov
outs
call
jae
sbb
stc
cwde
xchg
iret
jmp
mov
mov
jns
pop
dec
mov
adc
or
xchg
retf
pushf
inc
xlat
mov
stos
imul
sub
(bad)
cld
mov
fistp
push
hlt
add
aas
push
(bad)
dec
xor
out
mov
add
xor
movs
and
ins
aas
sub
inc
inc
pusha
shl
add
or
stos
cmp
xor
sbb
in
daa
xor
sbb
pop
xchg
xlat
and
rol
and
adc
mov
mov
outs
pop
or
adc
xchg
(bad)
or
sti
sub
int3
nop
movs
cmp
aam
sub
fild
cmps
call
mov
xchg
adc
sbb
xor
dec
cmp
jns
cmp
scas
jmp
and
push
bound
and
lahf
dec
xor
xrelease
cwde
arpl
enter
xchg
fld
mov
pop
jmp
add
and
pusha
ds
dec
pusha
mov
scas
adc
mov
sbb
les
sub
hlt
jl
pop
push
out
enter
jmp
push
xlat
sti
sub
mov
push
inc
xchg
cmp
lock
cmps
push
cdq
in
aaa
cmc
add
loopne
xchg
(bad)
xor
xchg
sbb
psllw
cmp
mov
addr16
lea
mov
push
xchg
xor
xchg
cmp
lock
jle
out
rcl
rdtsc
fdiv
xor
pop
mov
sbb
cmp
outs
mov
and
cwde
and
aam
sahf
leave
shr
or
dec
call
cmp
cdq
in
jg
fistp
iret
sbb
xchg
or
sbb
or
fs
mov
ins
shl
cld
jb
pop
xchg
push
or
pop
add
in
lods
dec
adc
test
mov
and
popf
inc
sub
and
sub
iret
in
sbb
das
and
stos
arpl
js
imul
push
xor
dec
aas
push
imul
sbb
inc
and
cdq
sbb
xor
mov
int
cmp
mov
cmp
add
fwait
jmp
clc
push
mov
jmp
dec
imul
stc
dec
in
aaa
adc
sti
icebp
pop
xchg
sub
inc
iret
or
mov
icebp
or
out
inc
dec
push
js
movs
cmps
stos
aaa
imul
rol
in
cmps
xor
push
mov
dec
mov
in
int3
cmp
add
sub
xor
mov
sbb
adc
cmp
inc
mov
cmps
push
out
xor
popf
jbe
cdq
fyl2xp1
nop
call
adc
retf
jl
dec
or
xchg
dec
test
push
sub
xor
and
or
or
mov
test
ds
arpl
(bad)
sbb
nop
mov
fwait
sub
sbb
and
jle
lds
cmp
test
inc
rcr
pop
iret
arpl
loopne
dec
jb
fidivr
xor
sub
mov
or
outs
shufps
xchg
mov
cmp
fstp
or
ins
imul
sub
push
and
adc
push
xchg
bound
sahf
add
inc
inc
pop
pusha
mov
or
or
popf
rol
aaa
repz
xor
movq
jp
push
jo
jmp
lods
out
mov
outs
out
xor
outs
in
repnz
cld
fstp
and
leave
icebp
iret
iret
fild
mov
jg
inc
and
xor
inc
inc
fcmovnbe
sar
or
ins
pop
cmp
lock
mov
lahf
cld
in
out
cmp
ret
dec
(bad)
sbb
cmp
out
and
jb
dec
rcl
jne
movs
ins
jns
addr16
jmp
mov
das
add
cmp
imul
jmp
(bad)
mov
mov
cmp
ja
pop
jge
jecxz
dec
mov
retf
repz
jp
add
mov
mov
dec
les
arpl
pop
fistp
xor
add
fild
bnd
mov
mov
lods
dec
retf
lds
mov
sub
xor
inc
scas
daa
inc
cmp
test
test
xlat
add
lods
pop
mov
rcr
sub
movs
shl
repz
enter
lods
jo
ret
rol
frstor
dec
pusha
add
std
cli
out
repz
mov
fild
cmp
xlat
stos
clc
(bad)
clc
repz
add
add
add
add
shl
xchg
add
add
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
rcr
into
add
call
rcr
into
add
xor
inc
pop
mov
sahf
ins
loopne
adc
or
mov
sbb
inc
dec
mov
inc
mov
repz
sti
dec
ss
xchg
js
dec
mov
add
cmc
or
out
stos
and
sub
jo
dec
jbe
fldenv
jl
or
(bad)
ds
dec
mov
out
cwde
sbb
mov
jmp
outs
pop
retf
mov
push
data16
and
cld
jmp
(bad)
dec
add
sub
add
add
dec
jg
add
add
and
add
push
gs
gs
gs
or
and
add
add
add
sbb
adc
int
into
add
jl
cdq
int
into
add
jl
cdq
int
into
add
add
sub
add
add
shl
xchg
add
add
add
add
retf
inc
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
rcr
into
add
call
rcr
into
add
add
add
add
add
add
add
add
add
pop
push
add
and
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
